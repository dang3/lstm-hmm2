sbb
add
mov
mov
xor
pop
xchg
or
shlb
add
movsl
sub
in
imul
test
cwtl
cli
sbb
pop
xlat
js
dec
inc
jmp
xor
cltd
xchg
loop
cltd
andl
inc
imul
cmc
or
fildll
pop
test
pop
in
stos
test
aad
mov
outsb
sahf
and
add
and
cli
xchg
pop
or
mov
outsl
cmp
pop
jg
cmp
pop
push
and
sbb
pop
shlb
cmp
push
les
mov
xor
push
mov
sub
les
add
ret
or
jae
test
testl
sbb
mov
mov
data16
xor
mov
cld
in
adc
test
or
fisttpll
xor
dec
cld
push
inc
pop
jle
sbb
out
aad
jns
xchg
inc
or
lods
cmp
adc
or
inc
scas
add
jnp
and
ret
mov
sbb
daa
ss
sbb
insl
push
mov
jecxz
sar
stos
pop
pop
cmpsb
jae
mov
sbb
pop
loop
int
xlat
in
mov
loop
call
xor
add
daa
ficoms
xor
mov
xchg
filds
xchg
jmp
mov
lds
fs
push
rolb
jns
sti
mov
mov
jb
scas
and
cli
sbb
cs
lcall
xor
fdivp
or
mov
and
lods
push
out
inc
jge
cmc
addr16
sub
mov
push
in
mov
cmp
test
rolb
lret
ljmp
inc
idivl
stos
push
add
inc
push
ret
pop
add
movsb
xchg
ss
sub
inc
jmp
or
mov
les
dec
out
fidivl
add
push
push
fists
add
add
lret
cmc
inc
mov
ljmp
mov
fs
push
mov
pop
mov
xchg
jo
adc
push
das
mov
hlt
out
mov
imul
dec
jnp
jb
out
out
pop
cmpsl
and
adcb
rolb
sbb
stos
dec
fsubs
xchg
movsb
sbb
icebp
testl
xchg
jl
sarl
mov
insl
repz
int
add
push
xor
stos
lret
xor
ljmp
gs
fcmovu
je
mov
and
sbbl
pop
insl
xchg
add
loop
or
das
jg
xchg
daa
in
es
ss
mov
inc
lahf
mov
jnp
adcl
insl
fldl
dec
push
xor
out
mov
jle
loopne
jo
out
dec
cmp
in
sbb
scas
mov
std
mov
push
jnp
aam
lea
push
push
test
xchg
aam
mov
shufps
into
sub
push
adc
int
cwtl
sub
dec
mov
inc
jbe
iret
cmpb
rclb
xlat
clc
mov
jecxz
add
sbb
lahf
cld
sbb
lahf
dec
pop
shrl
pop
push
call
mov
mov
stc
push
idivl
jno
mov
push
inc
call
imul
ss
pop
push
mov
add
in
inc
sbb
loopne
fiaddl
enter
int3
jge
jecxz
xchg
or
clc
je
jl
dec
movsb
adc
mov
outsb
push
push
mov
xchg
fwait
push
sbb
imul
mov
pop
fwait
mov
xor
int
lods
shrl
cmp
pop
fcmovnb
xchg
push
bound
in
cmp
pop
sbb
cwtl
js
sti
cmp
adc
xchg
cmp
lahf
sbb
jl
jge
cmc
sub
xchg
mov
xor
and
pop
mov
or
ret
add
xchg
lods
aaa
dec
mov
sti
jge
push
inc
repnz
iret
inc
outsb
push
neg
sbb
ljmp
fs
leave
gs
xchg
sbb
into
or
mov
lock
cmp
outsl
cmp
sbb
push
adc
or
aam
fcomps
or
scas
xchg
mov
pop
rol
pop
dec
sub
lea
xchg
push
or
lea
jmp
xor
pushf
dec
icebp
adc
pushf
ja
push
dec
in
and
sub
add
stos
ret
push
test
mov
push
cmp
icebp
daa
push
xchg
ss
mov
mov
pop
dec
xchg
or
dec
push
into
lock
hlt
loopne
out
mov
addr16
sub
jl
mov
and
shr
std
xor
rorl
mov
rorb
xchg
out
push
jmp
xlat
fcmovne
pushf
daa
fcom
outsl
or
sub
popa
pop
add
movb
insb
mov
mov
loopne
jb
leave
adc
cmp
rolb
inc
enter
push
inc
lret
cmp
fistl
ret
sbb
pop
pop
dec
leave
outsl
pusha
fdiv
clc
popf
jge
mov
lahf
jmp
cmp
in
xor
mov
sub
push
out
push
mov
in
push
movsl
or
aad
shll
dec
xor
pop
jne
aaa
mov
push
sbb
lods
cmc
test
cmp
and
xor
or
mov
lock
iret
fnstcw
pop
and
inc
jecxz
mov
repnz
sbb
cmp
sbb
in
pop
xchg
int
dec
pop
adcl
jl
insl
pusha
stos
or
push
aad
shl
mov
cltd
xchg
mov
sbb
test
imul
stos
mov
stos
mov
pop
push
jb
and
cmc
jbe
push
into
leave
sub
stos
xchg
jns
je
fdivrs
pushf
and
pop
adc
rcrl
inc
mov
cmpb
fsubs
lahf
loop
inc
xor
add
imul
in
mov
or
outsl
cmc
ljmp
movsl
push
les
popf
fcmovnu
xor
dec
sub
lahf
cwtl
inc
lods
int
adc
cwtl
mov
lods
sbb
out
lds
les
hlt
pop
xor
les
je
imul
lea
adc
inc
rol
inc
int
jp
mov
xchg
mov
f2xm1
push
in
xchg
loopne
es
mov
xor
xor
iret
fs
jmp
jp
inc
cmp
mov
movups
xlat
xchg
ds
pop
jae
mov
mov
inc
mov
mov
cmpsl
out
jg
adc
imulb
fstps
cli
xor
mov
sub
sbb
pop
push
xorl
fprem
ret
fstps
and
clc
ljmp
jecxz
mov
or
test
push
dec
or
into
sar
jno
iret
mov
movsb
das
arpl
push
push
int
push
xchg
adc
fwait
fwait
jg
mov
jno
inc
call
out
lods
adc
icebp
inc
or
sub
xor
mov
cmp
dec
cld
adc
mov
mov
aam
inc
cld
and
je
add
scas
mov
mov
or
loope
add
insb
dec
sbb
ret
or
mov
arpl
xchg
xor
lahf
jg
push
inc
daa
fstps
bt
cmc
mov
pusha
movb
data16
hlt
out
into
push
imulb
nop
cmc
popw
into
stos
aas
or
push
sbb
aaa
xchg
dec
push
pushf
ret
xor
xor
out
lock
mov
int3
push
cmpsl
inc
mov
arpl
inc
popf
jg
mov
roll
push
lock
inc
dec
loopne
inc
rclb
enter
icebp
leave
push
frstor
jnp
xor
cmp
aas
imul
cmp
and
mov
int
and
rcrb
sub
stc
jge
fstpt
rcrl
mov
popf
fsts
cmp
dec
jb
mov
pop
in
pop
in
jnp
push
nop
xlat
daa
push
mov
mov
adc
cmp
push
xchg
xchg
pop
and
loope
push
xchg
shll
jle
xchg
xchg
jg
leave
scas
jmp
lods
jnp
cmp
or
push
call
mov
mov
mov
xor
cmp
push
cmp
xchg
mov
push
xlat
ds
inc
adc
xor
xchg
add
pop
cmp
rcr
das
insl
call
and
lcall
std
cmp
sti
insb
leave
sahf
jnp
imulb
sub
jge
ss
inc
daa
in
test
out
std
xchg
xor
inc
jbe
adc
push
cld
in
jo
cmp
jmp
cwtl
ret
out
ds
enter
push
or
test
dec
mov
dec
sbb
sbb
js
pop
mov
cmpsb
pop
pop
int
js
jne
sahf
fldl
xchg
cmpsl
mov
imul
cmp
mov
push
push
mov
repnz
or
dec
xchg
in
mov
jl
and
cld
leave
enter
dec
pushl
cmp
inc
dec
mov
mov
xor
inc
test
jae
fidivrl
aas
xor
int
xor
pop
pop
movsb
pop
and
mov
les
cli
mov
sbb
cmp
mov
add
scas
gs
movsb
push
lret
jmp
lock
cwtl
loop
fbld
movsb
scas
cmp
push
adc
out
out
add
add
mov
cmpl
mov
xor
es
adc
push
jl
and
dec
mov
imul
mov
push
mov
cmpsl
push
mov
out
adc
mov
insb
jae
jnp
lretw
jnp
int
stos
scas
jne
in
xchg
jne
sbb
out
push
lock
cltd
loop
and
fidivl
xchg
mov
imul
lods
mov
outsb
pop
or
in
sub
fdiv
sub
fsubr
adc
jecxz
loopne
pop
cmp
sub
in
mov
cmp
jb
les
push
in
xchg
ljmp
inc
pop
inc
sub
and
mov
inc
mov
or
jg
ret
jmp
lcall
fwait
test
lea
push
callw
push
dec
aam
aad
das
ficoml
jmp
mov
stc
loope
mov
jo
in
jnp
into
gs
mov
lret
push
lret
xchg
or
andl
xchg
mov
sub
repz
orl
pop
loope
cwtl
pop
adc
or
popa
cmpsb
stos
loop
scas
pop
push
lret
mov
cmpsl
ja
or
lds
daa
dec
enter
setbe
add
aam
jo
cmp
cltd
movsb
mov
cli
test
adc
push
and
mov
in
push
sub
pop
add
mov
push
fbstp
sub
pushl
push
mov
lret
push
push
xor
nop
pop
sbb
leave
mov
push
cmpl
ss
sbb
dec
jb
movsl
or
adc
aas
fmuls
fistl
aas
xor
sub
enter
push
xchg
je
sub
rol
xor
jbe
xchg
mov
or
adc
rcrb
aam
daa
and
fisttps
dec
push
pop
pushl
stos
jnp
dec
or
icebp
repnz
test
cmpsb
inc
mov
lahf
mov
test
scas
fs
jmp
sarl
les
jg
in
lcall
mov
mov
mul
adc
jecxz
and
loopne
jle
cli
js
or
pop
dec
mov
xchg
sbb
insb
gs
in
inc
enter
adc
loop
mov
sbb
sub
ficoml
mov
mov
mov
inc
mov
xor
sbb
sub
push
pop
testl
test
test
xor
sub
push
xor
mov
loopne
dec
jo
inc
loopne
insb
mov
popf
inc
dec
mov
enter
decb
pop
or
pop
pop
mov
sub
cmp
dec
xor
bound
ss
repnz
xor
mov
jbe
xor
inc
shll
into
cld
inc
inc
stos
iret
cmpsl
pop
in
mov
and
mov
push
add
addr16
xor
pop
xchg
fdivrp
mov
dec
jl
cmp
lods
int3
push
pop
and
insl
push
out
popf
xor
stos
in
pushf
stc
cmp
and
mov
pop
ret
pop
dec
enter
dec
mov
fcompl
mov
aas
xchg
or
in
divb
orb
mov
pusha
or
pop
jb
sbb
lock
cld
aam
and
jecxz
adc
dec
lock
inc
les
fsts
lret
add
rcll
ficoml
je
sbb
pop
xor
leave
loop
and
fwait
addr16
out
loopne
jnp
xor
aas
test
and
fxch
mov
xchg
ja
sbb
push
mov
addr16
movsl
inc
jecxz
mov
js
out
movsl
xchg
mov
mov
es
xor
sbb
cltd
repz
dec
out
aas
stc
test
hlt
in
pop
in
mov
xor
inc
movsb
mov
mov
xor
adc
xor
ja
pop
loop
sbb
jae
sbb
loope
pop
jp
fdivs
push
push
lods
aaa
mov
or
mov
mov
fstps
push
popa
add
sbb
mov
pop
fldenv
sti
lahf
popf
dec
pop
and
in
mov
pop
stos
or
int3
sbb
dec
mov
or
dec
adc
shlb
repnz
xlat
aad
addr16
pop
imul
hlt
cmp
sbb
and
aad
add
sahf
add
pop
out
je
push
pushf
add
lahf
pushl
ret
jnp
movsl
mov
inc
xor
jae
in
push
push
xchg
or
jmp
jns
icebp
and
mul
pop
ficompl
and
outsb
mov
and
addr16
shr
test
jl
stos
aas
aad
in
sti
inc
out
aas
dec
pop
push
loope
dec
int3
xor
out
jae
and
inc
cmp
loopne
xchg
pusha
sub
dec
fcomps
adc
aaa
mov
pop
inc
mov
pop
test
imul
popf
add
push
movsb
into
adc
push
loopne
inc
lret
push
mov
inc
push
imul
xor
mov
in
inc
fs
add
mov
mov
jno
into
shlb
rcr
push
pop
sbb
jle
pop
int
inc
pushf
adc
cmpsl
dec
out
adc
arpl
movsb
inc
fwait
ljmp
negl
sbb
lods
lea
mov
loopne
xor
mov
call
lods
in
mov
stos
pop
cmpsb
adc
sar
jmp
pusha
shr
cmp
popa
push
popf
cmp
in
lret
fistpll
add
inc
cmpsb
loopne
jmp
or
adc
adc
or
mov
xor
inc
loopne
pusha
je
push
push
shrl
dec
push
enter
sbb
and
call
dec
popf
adc
movsl
mov
or
out
cmp
bound
jo
movl
loopne
cli
ss
pop
cmp
cli
icebp
ret
addr16
mov
adc
int
mov
jle
bound
rcl
shlb
pop
enter
or
in
repz
xor
nop
adc
xor
xchg
cli
clc
sbb
lahf
inc
andb
or
adc
mov
cmp
jle
loope
cmp
inc
fmul
js
fs
movb
mov
jbe
xlat
je
ds
push
popf
test
scas
or
iret
mov
cmp
push
xchg
out
push
adc
out
push
jo
add
mov
dec
hlt
push
out
in
mov
ficompl
jnp
mov
lahf
pop
in
mov
aaa
cmp
and
pop
mov
mov
and
loopne
cmp
pop
pop
adc
mov
adc
sub
pop
fldenv
or
sub
or
leave
push
xchg
mov
adc
inc
pop
pop
lea
das
repz
wbinvd
call
insl
out
push
fs
arpl
sbb
push
jns
daa
arpl
xor
fdivl
or
inc
push
sub
popa
arpl
or
xor
xchg
mov
daa
in
xchg
test
push
dec
mov
ja
in
and
and
imul
loop
jbe
pusha
lea
dec
inc
jo
loopne
adc
cmc
sbb
jne
enter
test
mov
cmpsl
xor
stos
js
flds
pop
add
cltd
iret
lahf
pop
scas
jg
call
sub
in
jns
pop
call
ret
xchg
in
enter
outsb
mov
push
pop
inc
pop
mov
cmpsb
comiss
mov
stos
lret
rclb
push
imul
push
into
es
mov
dec
jge
jp
loope
pop
pop
std
adc
jl
add
shrl
shlb
and
ja
xor
ficompl
mov
and
bound
fidivrl
int
addr16
push
dec
fnstsw
inc
das
lea
cwtl
rcl
xchg
test
push
mov
dec
sub
add
lahf
addb
repz
xor
inc
and
clc
sbb
testl
or
daa
leave
fs
xor
push
xchg
mov
mov
or
test
sarl
inc
jbe
scas
popf
inc
and
jmp
test
outsb
fs
cltd
push
jmp
jmp
pop
xor
sbb
jae
idivl
mov
inc
aaa
inc
movsl
mulb
rolb
cmpsl
in
lahf
mov
data16
popa
mov
cmp
aam
dec
sahf
dec
adc
cli
xor
dec
sbb
jmp
xor
push
and
jl
imul
cld
stos
mov
sub
lock
cmc
stc
int3
pop
xor
popf
gs
aaa
arpl
dec
movb
pushf
xchg
push
jp
aad
push
xchg
test
adcb
lret
andb
pop
jae
adc
add
inc
add
or
aas
in
lods
ret
sarl
fisttpll
and
sahf
xor
mov
mov
arpl
xor
push
ja
add
xchg
mov
cmp
xchg
imull
movsb
and
xchg
push
aam
jae
inc
dec
shlb
xor
mov
aad
cld
xchg
arpl
pop
fwait
pop
adc
xor
mov
inc
js
rolb
pop
cld
out
sbb
scas
sub
enter
mov
ret
shll
ret
dec
imul
leave
xor
cwtl
xchg
arpl
adc
xchg
pop
pop
pop
sarl
scas
push
push
aaa
xchg
testb
lret
cld
aad
mov
out
lods
inc
pushf
ja
mov
loop
jnp
out
or
lret
das
pusha
pop
f2xm1
mov
leave
cmpsb
dec
push
inc
jae
mov
ret
imul
cmp
xchg
jbe
dec
lret
mov
movb
out
cmp
aas
cmp
inc
bound
ret
xchg
xchg
lea
mov
xchg
sub
dec
mov
dec
mov
jge
scas
test
mov
sub
ret
jnp
ljmp
mov
xchg
and
dec
mov
cltd
mov
inc
imul
push
sbb
cmp
xchg
sbb
pop
add
ds
call
hlt
sbb
shll
add
pmuludq
push
push
mov
repz
and
loope
stos
std
nop
iret
enter
aad
adc
rolb
pop
xlat
cmp
lcall
cmp
jnp
cmpl
cmp
sbb
imul
push
dec
jge
and
sbb
and
dec
insl
les
push
mov
mov
cmpsb
adc
sub
int3
mov
stc
and
data16
jbe
cmp
stos
repnz
cmpb
ret
aaa
decb
and
xchg
frstor
xchg
aas
lcall
scas
sbb
push
mov
in
inc
mov
sti
pop
pop
jae
xchg
mov
pop
and
std
cs
xchg
push
shlb
ror
fstpt
int3
mov
stc
punpcklwd
inc
in
aas
inc
rclb
cs
adc
out
adc
fistl
jle
xor
lods
push
jg
stos
dec
test
fstps
mov
sub
add
aam
mov
mov
adc
mov
mov
scas
dec
jae
cmpsl
sahf
cmp
adc
iret
dec
ss
mov
js
mov
sahf
sub
insl
in
cmpsl
pop
daa
push
ljmp
stc
pop
sub
mov
cmp
mov
loope
andb
push
inc
xchg
xchg
fs
int3
fidivl
mov
inc
nop
out
lcall
mov
push
shrb
sub
inc
dec
mov
or
lds
xchg
cmp
mov
or
sub
push
push
bound
inc
push
enter
xchg
mov
sub
arpl
pop
bound
xchg
cmpl
mov
mov
lret
int3
mov
cmp
outsb
ficompl
not
jo
out
push
orb
xor
fwait
pusha
pop
aaa
es
push
lcall
sub
push
shrb
xor
dec
xlat
cmp
stos
sub
lret
lcall
gs
std
sbbl
adc
test
push
mov
rorb
and
cld
mov
add
ljmp
cmc
xchg
jne
jo
pop
or
mov
cmovp
pop
cmpsl
xchg
inc
addr16
out
jg
push
sub
dec
pop
mov
and
xor
inc
add
inc
jo
and
xchg
mov
cmp
sbb
gs
inc
mov
pop
lcall
jmp
or
push
jp
loop
cmp
push
mov
scas
xchg
cmp
sahf
daa
pop
aas
and
sub
sbb
lret
mov
test
test
xor
cmp
imul
jg
test
sbb
pop
sub
rcrl
lods
mov
sti
sbb
sbb
mov
sbb
xor
mov
jmp
sub
cmp
mov
inc
mov
inc
pop
add
cmc
sbb
pop
movsl
test
inc
dec
sub
push
arpl
sbb
inc
stos
js
sbb
inc
pop
out
or
and
popa
outsb
xor
pop
add
into
sub
js
test
mov
and
mov
mov
and
notl
xchg
or
out
out
jle
je
pusha
jnp
mov
pusha
xlat
pop
ret
out
push
dec
push
cmp
or
pop
pop
mov
cltd
into
mov
arpl
xor
icebp
stc
or
movsb
mov
cld
test
push
daa
push
pop
mov
mov
or
je
mov
jbe
outsl
shlb
jp
mov
xor
dec
je
aaa
mov
mov
repnz
mov
cltd
ud2
shrl
mov
sbb
adcb
add
jae
pusha
push
in
sbb
call
mov
dec
out
lods
push
adc
icebp
rorl
push
jecxz
stc
mov
jae
pop
fisttpll
jle
cmp
xor
dec
es
or
out
pop
or
xor
jnp
mov
or
pop
lods
dec
adc
mov
cli
shlb
xchg
dec
mov
sub
leave
stc
ret
mov
sub
inc
imul
jp
or
insl
aad
add
mov
xchg
jl
add
xor
dec
stos
push
mov
iret
mov
aas
icebp
add
pusha
push
inc
xor
inc
mov
mov
cmp
imul
jecxz
jl
jnp
lods
adc
xchg
push
inc
sub
mov
rcll
fidivrl
mov
pop
sahf
leave
ss
repz
pop
loope
mov
jmp
loopne
sub
mov
fcmovne
jecxz
jp
das
ljmp
ret
or
adc
testb
out
rolb
or
in
ror
push
inc
ja
lcall
xor
xor
xchg
mov
inc
bound
das
ljmp
sub
xlat
lods
test
mov
ljmp
scas
sub
fcomps
cs
push
pop
divb
jnp
mov
lret
mov
fiadds
mov
or
pushf
push
jle
imull
fst
out
out
xchg
sub
pop
movsb
addb
dec
data16
movsl
cmp
outsl
mov
mov
add
sub
frstor
dec
mov
push
cmp
inc
push
dec
rorl
cmp
dec
inc
scas
cmc
pop
fdivp
mov
adc
nop
movlps
test
jb
push
push
inc
mov
mov
xchg
cli
mov
insb
inc
bound
cmp
xchg
sub
outsl
fbld
int
or
cld
rcrb
and
xor
fs
push
push
ret
ds
add
or
std
add
and
or
fwait
mov
fs
cmp
dec
call
mov
jmp
clc
and
testl
mov
in
mov
push
cltd
jbe
cld
cmp
jns
dec
pop
add
mov
ret
rorl
sbb
lret
and
cli
and
xlat
notb
dec
out
repnz
inc
jle
pop
data16
and
and
xchg
push
imul
pop
repnz
ljmp
jl
add
jle
rcll
lods
ror
push
or
inc
inc
jbe
stos
xor
push
dec
cs
scas
loop
insb
leave
add
push
imul
comiss
addb
sbb
pop
and
sbb
cmpsl
xchg
mov
dec
mov
inc
lret
push
cmp
pushf
mov
and
adc
lock
in
sub
xchg
push
test
into
xor
int
lahf
xchg
outsb
daa
jno
pop
popf
mov
mov
scas
roll
pop
adc
xchg
jae
push
and
loopne
lea
adc
lock
sbb
cmp
mov
rol
dec
xchg
dec
pop
lahf
andl
jecxz
punpckhbw
mov
popf
dec
out
jne
out
add
scas
loope
out
jns
jecxz
pop
mov
ss
cmp
push
insb
xor
insb
clc
cld
lea
insb
dec
jge
sub
add
leave
mov
jl
pushf
push
in
dec
sbb
sub
sahf
cmp
lret
aad
fbld
adc
push
mulb
xor
adc
mov
mov
add
enter
fwait
icebp
jle
sti
or
ret
push
and
int
cmc
xor
and
inc
dec
bound
pushf
ja
stos
in
mov
imul
jecxz
xor
xchg
int
xor
inc
dec
fisttpll
or
xor
push
push
out
cmp
xor
mov
adc
insb
imul
cmp
shrb
stc
dec
notl
inc
in
inc
das
clc
mov
xchg
lods
push
hlt
popa
xor
adc
cmp
pop
fcomps
cmc
jmp
bound
lcall
movups
mulb
adc
sar
sbb
inc
gs
movsb
dec
sbb
mov
fnstenv
insl
popf
sub
push
push
jle
sbb
clc
loope
rolb
dec
ret
cs
in
dec
shll
popf
adc
in
pop
xchg
sbb
or
fstl
mov
mov
dec
jae
test
pop
dec
and
es
and
push
mov
adc
cmovbe
xchg
cwtl
sahf
test
cmp
hlt
jo
aad
jl
push
pop
mov
and
in
fisttpl
cmp
lret
inc
push
mov
mov
imul
out
and
mov
imulb
hlt
add
mov
and
adc
fisubs
lret
rcr
ljmp
ljmp
mulb
mov
ret
popf
dec
pop
mov
or
loope
lock
test
xchg
inc
pop
fdivrs
mov
mov
shr
lds
icebp
arpl
pop
adc
stc
fdivrl
mov
in
adc
push
mov
pop
sbbb
stos
lea
or
cmp
mov
add
pop
cltd
adc
fsubrs
pop
dec
gs
les
fldl
push
cmp
xchg
inc
cmpsl
xor
test
xchg
mov
aaa
ret
fsubr
pop
xchg
xchg
push
inc
pop
stos
jbe
pop
loop
popa
mov
fstl
xchg
pop
jne
xchg
movsl
out
shl
pop
dec
cmp
sbb
ds
dec
scas
aam
iret
push
rcll
pop
cmp
mov
xchg
lret
xchg
repz
fmull
push
ja
or
dec
stos
std
ror
sub
daa
jmp
mov
add
fimuls
addl
xor
in
outsl
mov
sbb
or
jge
jne
adc
test
mov
push
push
pop
dec
out
dec
push
dec
mov
aam
adc
fwait
add
xchg
in
xor
mov
dec
lcall
sbb
xor
fisttpl
in
bound
sarb
inc
shr
ret
ja
jl
in
bound
loopne
mov
inc
stos
lret
movsl
xlat
or
push
out
stos
add
cld
push
test
fwait
ret
mov
scas
dec
fimuls
rorl
or
xchg
adc
adc
out
cmpsb
imul
inc
xor
loop
dec
ljmp
pop
testb
jbe
flds
adc
aad
subl
out
test
cmpsl
pop
iret
jne
mov
mov
push
test
pop
shl
testb
xor
mov
xchg
fwait
cld
push
or
jnp
jnp
or
sbb
movsb
pusha
xor
ror
lods
rclb
jl
loope
adc
pop
and
lds
dec
into
sub
scas
nop
repz
xor
inc
and
sbb
mov
jmp
sub
or
out
out
sbb
pop
mov
mov
dec
jl
leave
dec
ret
and
sbb
xchg
mov
test
out
sub
pushw
xor
sbb
mov
sub
dec
sarb
jp
or
je
pop
pop
cmc
addr16
cmp
sbb
mov
into
and
jbe
sbb
test
sahf
and
xchg
lods
lods
fdivrp
add
movsb
arpl
gs
jnp
cmp
out
mov
and
and
adcl
cmp
iret
daa
pop
dec
movsl
jp
pop
gs
xchg
rol
in
leave
scas
paddw
js
sub
test
cs
dec
or
pop
inc
xchg
push
cmp
fisttps
negl
das
push
es
ss
out
adc
dec
sti
mov
pop
test
negl
rol
and
aam
xor
jne
dec
fdivs
fisubrl
cmpsl
cmp
jge
mov
insl
xor
adc
jle
jno
in
inc
aas
mov
insl
xchg
fwait
adc
dec
in
fwait
pop
dec
orl
and
test
loope
sbbb
sub
lret
fnsave
in
xchg
mov
out
add
cwtl
scas
subb
scas
push
or
daa
adc
push
iret
je
and
and
mov
sbb
out
lret
into
movsb
dec
jno
mov
push
dec
xor
xor
dec
lock
push
lahf
push
sub
dec
jmp
mov
bnd
jo
dec
in
aad
adc
outsb
dec
aam
push
pop
sbb
lods
adc
imul
aaa
or
and
jmp
or
push
in
and
int
add
mov
icebp
test
jp
or
lock
and
sbb
push
das
fwait
push
insb
mov
xor
cmp
push
stos
stos
pop
outsb
int
push
aas
push
test
sbb
pop
mov
mov
push
stc
jge
xor
mov
dec
stc
cmc
or
push
cmp
and
xchg
fistpl
sar
dec
test
sbb
leave
xor
sbb
mov
push
pushf
dec
lock
sub
fiadds
mov
je
adc
mov
mov
shrl
sub
xor
aaa
and
and
sti
cmp
shr
mov
push
push
stc
mov
push
cltd
out
movsb
pop
mov
mov
faddl
repz
xor
stos
popa
mov
xor
jbe
jb
pop
andb
sub
arpl
into
cltd
data16
mov
xchg
adc
idivb
sub
cli
leave
sti
icebp
mov
fidivrs
test
xchg
test
inc
aam
push
test
clc
out
and
adc
adc
xchg
sarb
lock
sbb
mov
cmpb
jae
inc
mov
xchg
lahf
adc
xchg
mov
mov
or
movsl
add
or
push
fcomps
iret
subb
mov
xor
fcmovnb
sub
rcl
mov
inc
js
or
dec
pop
lret
pop
ljmp
xorl
mov
adc
sbb
inc
adc
add
outsl
inc
sbb
pop
and
xchg
push
pop
push
dec
inc
sahf
out
leave
jo
xchg
in
mov
or
dec
fwait
mov
fs
leave
add
jmp
in
push
and
or
test
fs
dec
adcb
lds
cmp
mov
fstpt
or
xchg
add
fst
insb
pop
mov
xchg
sub
push
cmp
push
adc
nop
loopne
mov
xchg
clc
push
xchg
cld
xor
jg
pop
testb
arpl
fildl
loopne
ja
std
push
push
sub
addr16
mov
xor
push
sub
cmp
rorl
sbb
jmp
pop
push
lods
mov
jbe
add
and
xchg
test
or
shrl
dec
xor
xor
repnz
pop
cmpsb
push
idivb
pop
push
jg
pop
stc
jmp
cmp
lahf
out
and
jecxz
xor
adc
xor
in
out
xchg
repz
das
mov
cmpsb
cwtl
or
pop
test
and
pop
and
pusha
dec
lahf
fbld
pusha
xchg
or
test
adc
pusha
and
cmpsb
and
dec
cmc
int3
push
orb
inc
xchg
inc
pop
call
bound
xchg
jne
sahf
cmc
adc
ss
out
fwait
sub
das
or
in
imul
ljmp
pop
mov
mov
addr16
and
add
or
call
push
shll
mov
dec
mov
jge
test
fistpl
test
shll
or
das
add
sbb
jge
pusha
xchg
xor
xor
jns
cmp
lock
faddl
daa
das
mov
std
mov
faddl
push
fsub
addl
xchg
insl
movsl
in
jmp
xor
xchg
push
cli
cmp
icebp
mov
mov
jmp
or
pop
and
cmp
xchg
or
jl
xlat
imulb
or
xor
mov
push
arpl
adc
cmc
mov
ja
xchg
pop
shl
push
loope
jg
sub
sbb
lahf
or
sbb
cltd
cmp
in
out
xchg
scas
dec
mov
fldcw
jge
dec
repnz
fdivrl
js
push
int
mov
faddl
cmc
mov
jns
xchg
pop
mov
cmp
inc
dec
mov
fnstenv
inc
js
and
fildll
adc
std
mov
fists
mov
sar
pop
cmp
cmp
mov
test
std
sbb
fsts
pop
addb
shrl
jno
add
adc
xor
jl
sbbl
subl
xor
addb
adc
pop
or
imul
sbb
dec
pop
enter
mov
cmp
iret
push
dec
ss
repnz
sahf
pop
push
and
icebp
ds
xor
cltd
jae
leave
dec
adc
int3
in
add
sbb
out
sub
sub
push
mov
out
mov
addr16
mov
or
shlb
dec
ret
aas
push
fbstp
pop
pop
sbb
xchg
jp
lcall
cmp
int
jns
push
adc
sub
jg
loop
jae
lock
loop
mov
movsl
jp
test
lea
int3
xor
and
cwtl
in
cwtl
dec
inc
push
insb
inc
pop
stc
sbbl
pushf
stc
mov
repnz
mov
lret
xchg
dec
jl
idivl
sbb
jecxz
subb
pop
fs
cmpsl
inc
sar
popa
mov
gs
adc
rorl
daa
mov
mov
push
inc
fyl2x
sbb
dec
lret
pop
cmp
int3
inc
sub
add
lds
push
or
icebp
sub
aad
lods
push
pop
ret
int
cltd
scas
fstps
scas
dec
jae
sub
cmc
xchg
push
fistpl
mov
jge
ret
int
sub
add
sbb
mov
jge
ja
nop
mov
pop
sub
xor
cli
sub
addr16
or
cs
mov
push
inc
stc
shll
vsubpd
adc
jl
mov
dec
into
add
popa
fadds
loope
push
sub
rcrb
adc
add
push
lds
stc
xor
or
pushl
sahf
pop
fists
bound
sub
xor
imul
test
and
scas
xlat
das
test
sub
push
iret
pop
sub
push
cmpsl
hlt
mov
adc
pop
lock
out
rolb
dec
sub
lcall
sbb
cmp
xor
ret
jae
mov
push
fdivl
sti
mov
push
dec
and
add
dec
xchg
lret
mov
mov
cmp
sbb
out
outsl
test
xchg
aaa
xchg
xchg
xchg
mov
loop
shrl
jmp
arpl
je
adc
subb
push
push
mov
ret
add
jne
lock
iret
or
inc
xor
jg
mov
mov
pop
sub
fnstsw
pop
sub
jo
push
push
hlt
push
add
or
dec
cmp
push
pop
jg
addl
ljmp
lahf
loop
ror
adc
fsubl
sahf
jg
insb
shlb
mov
adc
push
je
repz
mov
out
cmp
shll
in
mov
ss
dec
xchg
mov
cmp
orb
inc
pop
push
fidivrl
xchg
nop
adc
push
push
andb
mov
loopne
scas
jmp
outsl
mov
pusha
sahf
popa
cwtl
fwait
shl
inc
std
cmp
add
xor
xchg
mov
and
ljmp
jl
mov
nop
lods
mov
add
test
jb
jecxz
enter
xor
adcb
and
in
xor
jno
ficoms
or
mov
cmpsl
pushf
pop
mov
repz
sub
add
outsl
push
dec
sbb
inc
js
mov
xchg
loopne
popa
xchg
shlb
and
lods
lret
xchg
mov
mov
xor
out
xlat
cmp
dec
push
xchg
cmp
je
cmp
aas
mov
push
cmpsl
shrb
pop
fs
pop
push
add
iret
xor
stos
and
fwait
mov
adc
xor
xchg
xlat
push
jnp
lds
add
jmp
mov
adcb
mov
dec
sbb
rolb
in
movsb
cmpsl
or
enter
leave
push
mov
cmc
loopne
lcall
add
stos
dec
lret
mov
fcom
fdiv
dec
dec
ret
cmp
xchg
int3
shl
xchg
shrb
in
pop
enter
push
popl
push
adc
enter
adcb
add
pop
gs
inc
inc
jbe
bound
repnz
push
dec
jmp
mov
and
ds
add
aas
xor
mov
stos
cmpsl
xor
add
insb
xchg
jnp
scas
pop
mov
mov
jp
imul
xchg
and
insl
and
dec
in
cmp
aas
aas
xchg
sub
sub
lahf
sbb
test
sarb
xchg
iret
push
xchg
leave
scas
aam
inc
in
test
sti
jecxz
rol
or
cs
icebp
js
and
iret
xchg
push
pop
xchg
push
mov
sub
push
orb
jns
leave
in
add
mov
dec
in
adc
inc
and
sha256msg2
adcb
jnp
pop
mov
pop
mov
xor
xchg
mov
ss
enter
ret
adc
cmpsl
inc
dec
aam
jmp
mov
mov
xchg
int3
mul
push
repz
sbb
jo
push
add
ret
jl
jns
in
cmp
fsubrs
test
xor
sbb
xchg
lock
lahf
in
les
ljmp
dec
and
jb
mull
andl
jmp
aad
push
adc
ja
pusha
sub
pop
mov
in
and
sbb
jns
mov
in
insb
add
inc
lret
lods
sbbb
cmpsb
push
adc
pop
cmp
jp
push
clc
imull
and
arpl
push
xor
in
mov
in
cli
push
push
cmpb
hlt
insl
jmp
adc
mov
test
mov
add
jb
js
sub
mov
cmp
pop
xor
adc
ret
cmc
lods
jns
leave
dec
push
mov
xchg
cmp
stos
push
push
jmp
movsl
cmp
ss
pop
or
push
jl
pusha
sub
add
lods
pop
out
dec
rorb
or
orl
leave
pop
fisubs
mov
outsl
adc
push
ljmp
pop
fists
mov
jle
in
inc
pop
movsb
int
jg
or
stos
fdivl
sbb
cmp
pop
mov
test
popf
cli
addr16
xchg
mov
xchg
xchg
int
push
popa
ret
outsb
enter
mov
es
sub
leave
adc
shrb
inc
xchg
dec
add
fs
xchg
hlt
jnp
push
scas
mov
add
add
cmp
lock
jge
pop
ret
dec
cmp
or
pop
dec
fsubr
lcall
idiv
dec
or
fisubrl
mov
shl
inc
adc
jb
mov
das
rcr
ja
ja
test
cmpl
add
int3
lods
and
cld
add
std
mov
out
lock
mov
pusha
xlat
inc
sub
enter
clc
cwtl
shlb
mov
scas
jb
outsb
dec
das
jnp
mov
roll
cs
cwtl
insb
mov
insb
into
or
jge
push
scas
sub
into
lds
sub
sub
into
jo
xchg
icebp
bound
leave
or
push
inc
pop
sub
pop
mov
out
sbb
xor
mov
das
testl
pop
push
push
repz
in
test
sbb
xchg
mov
inc
ss
push
out
cmp
or
dec
loop
shl
rorl
lret
cmc
mov
cmp
xor
sub
xor
es
sbb
xchg
mov
arpl
popf
test
pop
jns
push
dec
cmp
imul
into
add
sbb
mov
mov
pop
xchg
pop
lock
aas
sub
mov
sti
sub
sbb
cmpsb
dec
add
out
dec
sarb
scas
mov
aad
add
or
iret
push
or
or
mov
mov
adc
cwtl
clc
cmp
stos
or
xlat
cmc
sub
mov
mov
ret
xchg
stc
dec
bound
or
sti
popa
addl
lds
or
adc
cmpsb
repnz
adc
push
ljmp
mov
mov
rcrb
push
mov
fwait
cmc
jb
aaa
in
idivl
inc
xor
sub
xchg
das
in
xor
js
mov
out
add
daa
mov
xor
aam
adc
cwtl
cmp
dec
mov
mov
popf
jo
out
fwait
imul
iret
sbb
jae
repnz
popa
push
ret
popa
dec
pop
fs
shl
adc
mov
test
xor
xchg
dec
out
dec
ja
es
lods
fbld
mov
mov
outsb
out
ret
xor
cli
shr
sub
sub
stos
sub
inc
enter
aam
or
push
cli
push
icebp
ss
dec
jnp
in
sbb
sbb
push
xlat
mov
movsl
mov
into
ror
ds
wrmsr
add
push
or
das
mulb
xor
dec
sub
shll
pop
fisubs
icebp
fldenv
add
popf
fisttpl
ret
insl
push
dec
pop
xor
xorl
push
cmpsb
mov
lea
cmp
add
lcall
sahf
repz
data16
fnstenv
adc
rcrb
icebp
cmp
icebp
movsb
adc
xchg
scas
and
das
pop
xor
je
out
orb
cmpsl
inc
ljmp
jle
andl
xchg
inc
xchg
mov
ljmp
push
dec
xchg
popa
fldenv
out
mov
lret
pop
jb
mov
jb
push
push
mov
lods
pop
xchg
popf
hlt
jmp
out
rolb
mov
out
adc
xchg
ja
jb
mov
iret
push
out
jp
mov
fildll
pop
stos
imul
and
sbb
dec
mov
ja
andb
movsb
data16
mov
sarb
inc
mov
pop
sbb
lods
scas
ficoml
add
clc
adc
mov
test
rcl
pop
adc
in
cmpsl
dec
xchg
ret
push
dec
out
imul
daa
mov
incl
adc
mov
push
dec
xchg
push
int
xlat
shlb
xchg
push
rcrl
adc
jo
outsl
adc
dec
push
mov
fmul
push
xchg
bound
sbb
icebp
mov
cmc
mov
lret
cmpsb
addr16
js
and
aas
mov
dec
lea
pop
adc
adc
mov
xchg
push
enter
jmp
das
repz
lret
mov
test
fisttps
cltd
call
sahf
stc
xchg
cmp
enter
mov
pop
cmp
daa
xorl
mov
push
pop
lahf
xchg
jmp
inc
lea
int
or
leave
out
jns
sbb
imul
jmp
nop
nop
fst
xchg
xor
outsl
adc
inc
loope
jbe
mov
pop
mov
dec
add
test
test
mov
stos
dec
mov
inc
in
enter
rclb
cmp
pop
sub
cmpsb
sbb
dec
mov
ss
orl
cli
inc
ret
js
negb
lcall
and
mov
adc
push
inc
stc
jno
inc
push
sub
mov
enter
lds
sub
jmp
cmp
rcrl
iret
lret
xchg
jae
cmp
jg
xor
pop
push
or
sti
imulb
adc
push
adc
xchg
decb
dec
adc
fldcw
out
ja
pop
and
sub
mov
xor
lret
into
leave
sbb
pop
sbb
and
jge
aad
xor
mov
das
jecxz
xor
ret
les
sbb
mov
mov
int
inc
negb
xchg
rcl
movsl
and
push
cld
dec
lock
ja
mov
push
and
mov
lock
sbbb
xchg
cmp
fistl
add
jge
cmpsl
icebp
push
pop
jg
jge
fnstsw
sbb
add
mov
dec
jle
inc
rcr
sub
stos
sar
add
xor
out
lods
ret
in
mov
xchg
jo
ret
cld
and
cmc
xchg
mov
std
adc
rclb
sti
dec
adc
fucomp
dec
aam
inc
and
push
or
pop
and
idivb
adc
cmp
std
and
es
mov
dec
loopne
pop
sub
cwtl
popf
add
mov
lret
aaa
sahf
xchg
mov
mov
push
push
xchg
push
adc
mov
pop
cmp
ljmp
sub
or
ja
stos
sbb
cmpsb
xchg
adc
aam
outsl
cmp
mov
cmp
adc
divb
inc
and
mov
das
enter
inc
or
aam
test
pop
push
dec
mov
sbb
mov
sbb
mov
shl
xchg
push
mov
sbbb
push
xor
loope
or
cmc
leave
fcmovnu
fcmovne
fisttps
jmp
and
xor
fisttps
sahf
inc
insl
scas
mov
ja
jns
pop
fs
pop
pop
fadds
add
adc
xor
or
add
pusha
sub
test
callw
cwtl
mov
in
mov
lods
add
popa
in
into
imul
adc
flds
adc
xchg
add
ljmp
mov
mov
xchg
insl
sbb
sbb
icebp
dec
shr
rorb
mov
add
sub
push
fmull
and
mov
rcl
pop
insb
pop
leave
cmp
xchg
in
in
adc
push
mov
sbb
pop
xchg
add
fcomps
pop
lds
inc
sub
xchg
cli
lret
xchg
push
inc
les
mov
and
outsb
stos
daa
adc
aas
push
mov
aas
aas
fidivs
fbld
scas
lock
mov
add
outsl
daa
shll
fidivl
xor
rol
adc
push
inc
lret
int3
rcr
subb
das
or
push
push
popa
hlt
and
sub
stc
pop
lods
out
loop
pusha
repz
xor
aaa
push
addr16
cld
mov
aam
or
loop
inc
jnp
xlat
test
cli
js
pop
pop
mov
jne
stos
gs
pusha
sbb
aas
pushf
in
and
xor
xor
lds
and
fwait
dec
adc
jne
jmp
dec
adc
das
aad
dec
pusha
push
inc
inc
int3
or
xchg
adc
fidivl
and
dec
loop
movsl
mov
dec
insb
rorl
das
movsb
xchg
repz
ljmp
or
nop
pop
fst
clc
inc
mov
es
scas
mov
pop
bound
pop
sarl
rcl
xchg
add
xchg
and
out
aas
and
ds
pop
dec
cmp
mov
and
shr
lods
dec
push
dec
inc
test
pop
inc
mov
sub
imul
xor
lods
and
cmp
sub
push
xorl
stos
and
popa
add
and
ljmp
adc
inc
push
movsl
mov
xchg
loopne
rcll
addl
fsubl
xlat
push
dec
lahf
into
mov
lea
xchg
or
xchg
add
nop
sub
push
cmc
push
jmp
aad
in
mov
push
out
jbe
or
mov
fsubr
or
lods
sbb
adc
cmp
cmp
adc
adc
add
pushf
lods
push
adc
pushf
cmp
push
add
pop
cmp
mov
mov
fisttpl
mov
or
lret
pop
sub
mov
adc
mov
jne
les
pop
in
fidivs
xor
sbb
xor
pop
lds
sub
jb
mov
mov
out
push
dec
fdivs
andb
es
in
cmc
lret
jge
dec
repnz
cwtl
pop
xor
inc
push
loopne
icebp
sbb
push
imul
jno
cmc
lea
sub
outsl
pop
or
xchg
insl
lods
push
pop
mov
daa
call
and
mov
mov
xchg
and
or
ja
and
pusha
push
popaw
xor
jae
add
pop
jp
call
mov
push
bound
rcrl
inc
lahf
imul
cmpl
aad
ljmp
orl
mov
dec
mov
jns
lods
pop
and
dec
sub
xor
push
pop
adc
jle
jge,pn
sub
fidivl
inc
pusha
cmpsl
leave
jnp
jnp
xor
into
push
sub
out
mov
or
cvtpi2ps
mov
mov
pop
fildl
xchg
cmp
mov
lods
jae
in
sahf
add
jmp
insb
les
sahf
sub
outsl
pop
fldcw
cmp
in
cltd
adc
or
add
sbb
mov
int3
jge
push
cmpsb
pop
jb
into
push
adc
and
jns
test
aaa
xor
xor
clc
imul
dec
push
push
push
loope
sbb
dec
je
cltd
mov
cmpsb
sahf
sbb
in
or
movl
das
sub
cmp
rolb
scas
push
out
xchg
in
roll
test
inc
pop
stos
mov
jle
out
out
cs
mov
lock
cmp
flds
not
mov
icebp
mov
data16
adc
push
daa
mov
pop
out
cmpsb
pop
lret
or
ss
mov
dec
cli
push
scas
stc
push
fistpl
push
inc
or
adc
sbb
jl
and
or
lds
xor
mov
jae
push
push
cmp
ds
test
in
dec
sahf
aad
xlat
xor
mov
outsb
pop
stc
mov
rol
or
xchg
lds
ja
adc
cmpb
mov
xchg
movsl
sbbb
sbb
dec
cld
nop
ficomps
movsb
xor
loopne
xchg
dec
push
xchg
scas
insl
insl
pop
fwait
dec
inc
sbb
lcall
jecxz
loopne
ljmp
pop
sbb
rorl
dec
aaa
add
scas
mov
mov
mov
sahf
push
dec
cmpsl
sub
rcll
lahf
inc
dec
repnz
fmuls
ss
and
int3
iret
jl
jns
shll
xor
std
cltd
or
and
push
decb
mov
mov
jnp
js
arpl
inc
cmp
or
or
xor
cs
add
js
aad
mov
lret
mov
or
jecxz
out
test
inc
push
push
rolb
cwtl
add
inc
or
xchg
call
and
xor
xor
mov
shll
gs
adc
cltd
adc
ljmp
sub
fs
loope
xchg
pop
adc
fucomi
push
cmpsb
or
push
dec
add
aam
mov
cmp
in
xchg
or
sub
lods
stos
xor
adcb
mov
mov
jmp
dec
test
test
vdivss
cli
mov
sub
or
push
jmp
popa
test
adc
adc
in
inc
notl
cmp
ljmp
sub
test
loope
outsl
mov
movb
cmp
dec
cmpsl
xor
scas
add
mov
inc
mov
scas
jnp
aam
dec
lret
and
add
jle
xchg
inc
push
cmc
fmulp
popa
popf
jne
idivl
arpl
andb
imull
jno
adc
sbb
jnp
inc
popa
and
sbb
imul
gs
outsl
orb
mov
test
xor
sub
jbe
ja
sub
or
inc
pop
pop
mov
in
mov
xor
dec
lahf
sub
rcr
adc
lods
and
cmpsl
lahf
add
imul
push
jl
mov
pop
push
rorl
sub
movb
aad
sbb
or
mov
out
mov
xor
lods
push
je
dec
stc
jns
xlat
mov
imul
add
jg
adc
subl
adc
and
xor
push
xchg
sub
repz
jbe
loopne
loopne
push
xor
xchg
xor
mov
mov
lret
xchg
jl
mov
dec
ljmp
adc
imul
sahf
cmp
push
xchg
insl
arpl
aad
pop
sub
call
daa
jnp
in
dec
jbe
hlt
or
nop
out
xchg
ret
xchg
cmpsl
fldl
lock
pop
cmp
shll
pushl
adc
mov
rorb
xlat
jne
mov
addr16
out
arpl
dec
loopne
lcall
xchg
test
imul
mov
pop
mov
dec
sbb
fs
adc
inc
push
cs
jbe
and
mov
outsb
cmp
loope
sub
mov
cld
loopne
push
mov
mov
ret
fstl
fs
push
scas
pop
mov
sub
lea
aad
je
mov
out
push
lret
sbb
movsl
rorb
adc
add
ljmp
ret
aad
loope
leave
ficoml
loope
inc
das
mov
dec
or
jp
scas
or
mov
dec
orb
dec
add
lock
outsl
bound
mov
std
mov
mov
aad
in
inc
mov
and
mov
sti
orb
cli
jbe
inc
add
cmc
push
aam
mov
jl
push
xchg
dec
jae
repz
rcl
imul
cmc
xor
push
int
mov
jle
and
jecxz
int
popf
push
jmp
cmpsb
xchg
nop
push
in
sti
pop
xchg
scas
and
rclb
inc
push
push
pop
jp
loop
ret
int
lock
jecxz
lods
adc
stos
sub
cmp
lods
movsl
push
loope
mov
pop
fs
push
iret
mov
push
cltd
cmp
dec
daa
mov
dec
in
xor
sbb
xchg
xchg
push
andb
lret
shlb
pop
add
mov
jle
repnz
jae
inc
and
and
mov
orl
daa
cmp
pop
add
sub
inc
pop
cmp
adc
pop
pop
aad
sub
sbb
dec
aaa
push
sbb
gs
dec
arpl
jmp
fildl
dec
mov
adc
mov
imul
scas
mov
sub
cmp
clc
sti
rcl
pop
dec
or
jae
add
pop
test
iret
scas
imul
dec
mov
adc
stos
dec
mov
fisttpll
lods
shlb
adc
pusha
jbe
push
adc
test
sbb
xor
mov
and
cltd
or
xlat
and
shrb
bound
cli
std
shlb
shrb
mov
sbb
cmp
mov
ficoms
daa
ret
stos
mov
cld
cwtl
fstps
iret
sub
add
bound
and
sbb
lea
sbb
and
push
and
cmp
mov
std
lods
add
rcrl
fsubp
loopne
clc
daa
mov
and
mov
push
xor
add
push
outsb
sar
cltd
mov
cwtl
out
pop
add
ljmp
inc
outsl
aaa
jmp
xchg
cltd
and
jle
pop
sub
mov
out
es
jge
dec
mov
add
jle
scas
xchg
movsb
pushf
mov
fmull
mov
dec
cwtl
cmp
sbb
xchg
and
addr16
fidivrl
dec
dec
lds
add
xchg
mov
and
lock
lods
lods
imul
xor
das
or
test
adc
loopne
sti
pushf
pop
fwait
push
out
xor
sbb
dec
cmp
sub
xchg
dec
ret
out
cli
mov
mov
push
mov
mov
dec
lea
negb
dec
andb
daa
fadd
jae
loope
mov
push
enter
addb
mov
push
inc
mov
jbe
sbb
add
or
loopne
lcall
rolb
inc
cmp
jge
repz
rolb
dec
int
sbb
insb
and
and
dec
ds
dec
push
dec
lcall
shll
sbb
and
fisttps
jp
loopne
sbb
iret
inc
jb
mov
jmp
hlt
negb
push
test
inc
shl
idivb
sahf
outsl
daa
xchg
fistpll
fdivr
shlb
repnz
xchg
and
adc
test
jecxz
sbb
jp
leave
aaa
aas
push
subb
testb
and
mov
jae
and
repz
lret
dec
jae
int
pop
hlt
dec
or
add
inc
int
jmp
scas
and
int3
fabs
and
mov
imul
dec
ffreep
in
mov
jnp
psubd
mov
jb
sahf
sbb
mov
jbe
dec
outsb
jg
lods
jno
add
sarb
adc
mov
sub
and
pop
jecxz
cmp
ror
fcmovne
aaa
lahf
jne
je
and
pop
and
mov
mov
sbb
xchg
jmp
cmp
xchg
xchg
mov
scas
or
in
insb
mov
mov
shlb
cmpsb
out
cs
pop
test
adcl
movsb
sub
loop
push
pop
ret
rorb
test
xor
cmc
nop
cs
clc
ss
cmp
add
orl
mov
aad
orb
pop
xor
fcomps
pop
fs
and
cs
push
addr16
hlt
rol
cmp
dec
pop
inc
mov
test
filds
icebp
cmp
push
adc
mov
lret
sti
test
lret
addr16
jmp
push
shll
mov
nop
and
jns
out
xor
outsb
loopne
jb
dec
dec
mov
ljmp
les
mov
jb
mov
aad
test
mov
rcll
lods
fwait
ds
ss
imul
adc
xlat
mov
cmpsb
jge
push
cmovo
ds
and
aad
cmp
mov
jbe
arpl
fs
rcll
xchg
ja
pop
mov
andb
in
add
jbe
out
mov
push
or
cltd
stos
inc
sbb
lods
adc
sub
loopne
shll
sub
int
push
mov
js
or
push
inc
push
sbb
movsb
jnp
fiaddl
stc
adc
imull
test
fisubrl
jle
mov
loopne
ret
dec
cmp
lahf
insb
ds
push
sub
and
push
shlb
loopne
push
aaa
fstl
lods
add
lret
mov
rcl
sahf
inc
adc
dec
andb
push
test
fisttpll
gs
pop
xor
out
sti
xor
loope
pop
or
out
mov
lods
scas
sub
xchg
fstpl
sbb
xchg
pop
mov
sub
xor
movsb
ja
inc
xor
mov
jl
add
and
icebp
aaa
jmp
inc
stos
sub
loopne,pn
adc
movsl
pushf
mov
mov
add
repz
outsb
icebp
dec
aaa
dec
mov
cli
jmp
mov
lods
cmp
jmp
sbb
cmp
jmp
ja
ljmp
sahf
std
jne
arpl
pop
xor
lea
dec
pop
repnz
sub
xor
dec
pop
popf
stc
testb
in
or
repz
fadd
xor
lods
or
dec
js
sbb
lds
sti
insl
inc
dec
outsb
xchg
fnstsw
xor
fistps
ds
into
inc
jl
dec
pop
mov
push
data16
outsl
stos
rclb
push
or
imul
push
cli
sahf
jo
jnp
xchg
popa
jecxz
and
aad
repz
mov
out
mov
in
mov
sti
mov
push
dec
cmpsl
fists
xchg
stos
xrelease
push
cmpl
stos
xlat
int
dec
xor
aas
jp
jnp
and
sub
mov
div
sub
cmp
fucomip
xchg
cmp
sbb
adc
xlat
adc
jae
pushf
inc
fwait
sub
jne
jp
adc
les
loope
mov
inc
sbb
push
std
into
test
adc
adc
test
pop
lret
in
and
call
jae
fcmovne
sbb
mov
scas
mov
push
xlat
xlat
mov
push
lock
or
and
ret
mov
mov
push
pop
mov
cmpsb
push
or
xlat
sahf
and
push
movsb
xadd
mov
ss
xchg
rol
decb
pop
xchg
pop
je
decb
lea
mov
xor
mov
push
xor
inc
enter
mov
in
shll
or
in
or
sbb
pop
mov
test
sar
push
ds
mov
mov
mov
pushf
push
ret
mov
stc
xchg
test
aas
popf
popa
xchg
aad
cmp
dec
scas
mov
rcrb
pop
fimull
cld
xchg
jle
int3
cmp
iret
and
fcmovnbe
lcall
fld
scas
cmp
imul
cltd
popa
pop
fsubl
scas
xchg
cmc
mov
jne
push
inc
xor
inc
xor
push
iret
push
jmp
pop
mov
fs
mull
push
lea
xchg
outsl
stos
in
jecxz
fsubs
lods
mov
mov
mov
inc
push
cld
cmp
rcr
pop
push
inc
cmp
push
in
pop
cmpb
shll
fldcw
rcrl
add
pop
inc
nop
je
mov
xchg
lea
xor
test
cld
cltd
les
mov
call
push
adc
cltd
mov
cmp
xchg
js
fs
mov
ss
mov
dec
popa
pop
pop
scas
cmp
jge
or
add
inc
mov
scas
lahf
push
inc
cmp
es
jb
mov
insl
movsb
in
lock
mov
and
pop
cmp
int3
pop
stos
sbb
out
data16
sbb
push
jp
sbb
je
jnp
mov
inc
sbb
mov
movsb
jmp
push
push
jmp
repz
dec
ret
jb
test
loope
in
push
fsts
inc
jnp
pop
ss
mov
clc
into
cmp
sbb
aas
orb
aas
xchg
cmpsl
mov
sub
aas
sbbl
subl
inc
jg
mov
subl
mov
lds
nop
add
mov
sbb
pop
test
mov
adc
jne
or
lret
pop
or
push
push
mov
adc
jo
adc
mov
dec
dec
fwait
aaa
pop
or
lcall
in
ds
mov
adc
mov
inc
cmp
jge
xchg
and
test
gs
imul
xchg
push
mov
enter
or
repnz
stos
lret
lcall
pop
shlb
pop
fdivl
fiaddl
imul
sub
pop
dec
mov
and
test
nop
mov
and
jmp
push
in
addr16
movl
mov
out
lods
and
xchg
aaa
scas
aam
out
cmp
pop
xor
jmp
mov
jg
sub
or
cli
out
or
jno
and
cmpsb
push
test
mov
mov
ja
into
sbb
loope
mov
mov
lock
sub
adc
add
inc
or
lock
jp
stc
adc
icebp
stc
les
mov
push
mov
ja
or
jnp
mov
fiaddl
pop
or
rcr
and
imul
cmp
sbb
repz
or
arpl
dec
in
ret
adc
xchg
je
mov
sub
pop
sti
inc
lret
mov
cmc
cmc
or
push
aam
sub
push
roll
or
sbb
jg
cmp
mov
cmp
add
testl
pop
pop
xlat
adc
addb
pop
shl
addr16
jo
add
jns
and
in
xchg
mov
shlb
add
push
inc
cmpsl
das
mov
inc
or
xchg
icebp
out
and
pop
or
push
scas
ss
mov
scas
fsubrl
mov
add
xchg
cli
imul
or
sbb
sbb
add
sahf
sbb
sub
mov
adc
mov
add
inc
test
xchg
push
mov
inc
xchg
mov
pop
stos
cmc
sbb
lea
aaa
mov
mov
fsubrs
sbb
cmpsb
xchg
cmp
or
cmc
or
jmp
popf
cmp
push
daa
jns
js
cli
push
out
fldt
cmp
stos
adc
sub
js
lret
mov
pop
into
mov
jg
jge
mov
imul
movlps
cmc
stos
jno
fisubrs
fimull
hlt
cmp
xorl
jae
xor
mov
mov
sub
sub
mov
mov
cltd
sbb
cmpsl
or
sub
rcrb
sub
out
inc
jns
mov
mov
and
ljmp
filds
adc
into
aad
int3
nop
in
mov
jae
mov
loope
sub
jo
out
pop
lcall
xor
pop
shrb
jnp
sarb
xor
imul
adc
cld
xor
rol
jecxz
xor
std
movb
mov
cmp
out
jl
ret
aam
push
scas
mov
lods
cmp
push
pushf
movsl
push
fwait
cmp
cwtl
int
jns
xchg
lret
adc
add
adc
cmp
shlb
popf
xor
lods
pop
pmaddwd
stos
fs
sbb
scas
mov
add
jl
adc
fsts
loop
mov
mov
insb
aaa
xor
hlt
inc
cmpsb
sbb
mov
and
nop
jns
cmp
xchg
pop
lds
testb
sbb
xor
lret
js
inc
jnp
mov
sbb
in
aas
or
imul
inc
outsb
mov
jp
sbb
xchg
push
sbb
or
stos
push
pop
cld
nop
rolb
lcall
cli
lds
cmp
push
add
push
sti
xor
ret
push
gs
lret
js
sti
pop
mov
add
mov
sbb
lea
mov
test
dec
fwait
push
sub
cmp
xchg
push
adc
mov
push
ljmp
out
test
addr16
sub
push
inc
cld
insb
xchg
dec
mov
testl
out
and
and
xor
insb
fisubrl
ror
inc
adc
sbb
lods
pop
push
idiv
mov
sub
lock
add
xor
push
add
in
mov
xchg
add
xor
cs
push
dec
xchg
push
enter
mov
pop
or
dec
jecxz
sbb
mov
push
pop
jecxz
loope
jl
mov
shll
dec
push
test
call
cmp
add
or
adc
stos
inc
cmp
sbb
jne
and
jno
ret
xor
rorl
jnp
mov
add
fcmovne
fstps
sbb
in
push
popa
pop
clc
xor
lods
test
or
cmp
lds
jns
imul
mov
aad
cli
aas
outsb
mov
mov
inc
mov
cmp
test
inc
cmp
in
test
movmskps
cmpsl
cmp
fsubl
xchg
loop
cmc
hlt
push
sbb
adc
scas
aam
cmpsl
test
ficoml
sahf
stc
and
add
out
icebp
dec
and
push
jp
mov
push
xchg
std
scas
or
clc
add
lods
sbb
push
in
cmp
xchg
mov
jnp
push
and
mov
jb
jns
loope
cmpsl
mov
in
scas
cmp
adc
cltd
lds
in
push
and
mov
scas
cmp
scas
cwtl
xchg
inc
cltd
icebp
insl
cmp
add
xor
loopne
sub
xchg
add
ljmp
arpl
ror
negb
push
ja
and
push
das
cmp
dec
sub
xchg
jo
push
sub
lods
sti
xchg
sbb
add
jns
dec
cmp
adc
inc
and
ret
int3
or
sbb
mov
jmp
cmp
out
ljmp
adc
inc
out
mov
popa
mov
pop
push
outsb
push
rcll
push
mov
icebp
es
xlat
push
pushf
inc
mov
enter
iret
mov
jb
lea
xchg
push
repnz
mov
cmc
push
mov
jp
sahf
cli
hlt
jo
mov
rcrb
pusha
sub
in
push
pop
sub
int3
sbb
scas
or
sbb
sub
test
sub
ficoms
mov
sub
mov
jno
cmp
cltd
ljmp
popa
mov
cmp
push
cmp
push
sbb
into
fwait
repz
dec
cmpsl
negl
and
data16
fwait
xor
je
cltd
jg
stos
sub
sar
mov
ja
enter
in
sti
leave
ss
mov
mov
or
enter
xlat
xor
fwait
in
sbb
stos
fdivrs
stos
cmp
movsl
daa
add
shr
sub
out
cltd
scas
xor
movsbl
sahf
xchg
hlt
loopne
push
adc
xor
jae
lcall
jg
arpl
es
in
sbb
mov
mov
int
ret
int3
test
lock
mov
xor
mov
jbe
mov
mov
fistl
jp
enter
ret
das
mov
sbb
in
and
lret
lret
sbb
mov
call
or
dec
mov
jle
in
call
test
scas
lods
cmp
jns
pop
sahf
add
jno
sbb
and
cmp
dec
mov
popf
sub
pop
ds
out
xlat
pop
outsl
jno
push
adc
pusha
xchg
pop
dec
xor
push
pusha
movsb
test
fdivrl
dec
arpl
repnz
push
ljmp
dec
and
xchg
sbb
xchg
data16
mov
pop
ret
mov
pop
lock
lret
popf
loopne
rolb
lret
nop
lods
gs
cmpsb
sti
mov
mov
mov
or
xor
mov
pop
dec
decb
xor
out
sbb
ds
inc
fdivrp
addr16
mov
addr16
adc
sbb
or
stos
loop
mov
and
or
mov
mov
es
pushl
mov
call
std
mov
and
in
lock
into
sar
add
insb
and
xor
mov
dec
pop
and
sub
popa
cltd
int
jns
pop
sbb
adc
in
or
or
jmp
imul
cmpsl
loopne
pop
mov
jne
xor
ja,pt
xor
call
sbb
iret
mov
jecxz
inc
push
imull
nop
push
jg
aas
stos
jp
xor
mov
fcoms
add
stos
lods
xchg
cmpsb
repz
push
aas
adc
xor
in
out
iret
sbb
and
jne
mov
stc
aad
outsb
ss
leave
out
push
cmc
xlat
outsl
std
gs
scas
or
lahf
mov
scas
aaa
rorl
mov
xor
out
bound
clc
aad
inc
aas
das
andl
push
xchg
pop
xchg
and
xchg
nop
gs
mov
sbb
mov
add
sub
sub
fsts
mov
push
in
mov
clc
repnz
dec
test
mov
xchg
out
cmp
jno
jo
mov
xchg
pop
adc
mov
inc
pop
in
pop
fisubrl
cmp
xchg
and
lret
out
test
mov
pop
jecxz
jmp
mov
xchg
or
pushl
pop
mov
sbbb
inc
pop
and
mov
mov
cmp
sbb
faddp
dec
fs
cmc
push
andb
hlt
xchg
push
xor
xchg
mov
imul
iret
sub
and
ror
add
mov
inc
lahf
clc
shll
mov
lret
icebp
popa
jp
mov
mov
jl
xor
inc
loope
ljmp
gs
shr
inc
push
jg
push
je
adc
gs
jl
lcall
jecxz
loope
xchg
adc
ficompl
mov
or
nop
add
insl
mov
out
or
xchg
lods
mov
pop
mov
xchg
pop
cli
mov
pop
jl
aas
movsb
lods
es
shrl
or
inc
loope
test
cmp
or
ljmp
mov
mov
mov
and
cmp
pop
jmp
into
out
pop
icebp
add
movsb
iret
adc
jle
lret
pop
es
mul
outsl
and
or
push
cmp
jns
jg
jmp
dec
xor
jg
dec
mov
mov
inc
gs
icebp
dec
rcl
add
inc
dec
out
pusha
int
ds
dec
add
xchg
and
push
or
xor
fimuls
adc
xchg
fsubrs
xchg
ret
inc
shrb
mov
roll
insl
cmp
push
aam
addl
popf
loop
stc
dec
aaa
call
or
mov
cs
mov
inc
in
mov
loopne
sub
inc
xor
xlat
inc
xchg
mov
push
inc
xor
inc
mov
cwtl
pop
leave
call
leave
sahf
jmp
stos
jae
push
mov
push
adcl
add
add
xor
and
inc
mov
nop
lods
movsb
cmp
test
sbb
mov
dec
addr16
push
imul
test
mov
aas
sub
sti
outsl
xor
sub
aas
push
loopne
mov
insb
data16
shlb
clc
push
and
cmp
push
imul
sub
cmp
cmpsl
imul
aaa
cltd
sub
pop
jb
dec
sbb
push
add
jmp
pop
jae
in
dec
add
out
leave
mov
fdivs
int
js
inc
aam
pushf
mov
bound
scas
dec
push
xor
sub
jl
xchg
hlt
testl
jae
push
inc
dec
mov
pop
test
pushf
push
jge
lods
dec
ds
pusha
mov
andl
das
in
dec
xor
mov
cmp
lret
mov
xlat
adcl
cmp
scas
test
in
arpl
punpcklbw
negb
jo
jbe
and
in
and
push
popa
cld
mov
sbb
pop
sub
mov
jmp
fsubl
jg
cmp
jno
mov
dec
scas
sub
or
push
push
xchg
bound
test
inc
jno
cli
ret
mov
repnz
sub
imul
cs
push
dec
and
or
adc
jnp
cmp
xchg
inc
sbb
add
xlat
mov
das
and
mov
enter
xor
jmp
bound
cwtl
popf
loop
lahf
push
mov
imul
lods
fmull
cmpsl
add
pop
fildl
enter
cld
sbb
pusha
jb
and
mov
sub
stos
add
ja
pcmpgtd
pushf
pop
sub
pop
jge
push
cmp
adc
and
adc
fwait
add
adc
hlt
ficoml
push
leave
das
mov
aaa
mov
sub
jns
dec
xlat
cmpsb
push
xchg
or
rcll
cli
cmc
orb
movsb
stos
lock
pop
lret
ds
xlat
sbb
mov
xchg
or
xor
pusha
pushaw
into
fildl
and
out
jns
fistpll
mov
lea
pop
pop
das
mov
test
adc
cli
jae
loopne
pmaxub
or
mov
xchg
std
dec
test
jl
cmp
xchg
and
pop
pop
mov
sub
shll
xchg
stos
enter
jge
ret
pusha
mov
adc
inc
test
jbe
in
push
adc
inc
hlt
das
push
lret
inc
mov
into
aaa
sti
sbb
test
decb
cmp
lret
inc
or
add
dec
loopne
out
pop
dec
repnz
mov
push
ljmp
ss
sub
rcrb
lret
xchg
dec
jp
jmp
incl
dec
test
dec
adc
dec
dec
sub
push
ljmp
outsl
xlat
dec
jmp
or
xor
addr16
push
in
push
outsb
repz
testb
ss
xchg
cmp
scas
fldt
sub
fbstp
cmp
xor
mov
ljmp
js
xorl
sar
cli
shll
std
or
mov
sahf
pop
push
je
icebp
mov
cli
cmp
and
mov
mov
dec
testl
das
int
dec
push
pusha
sti
loopne
inc
sarl
ja
push
mov
fistps
lret
push
and
dec
pop
aaa
mov
into
mov
loop
call
mov
dec
scas
jge
or
or
test
cmp
fcomip
or
xlat
cli
add
rcrb
rorb
cli
incb
outsl
jg
and
inc
fstpt
cmp
adc
in
inc
out
sti
pop
gs
push
inc
lds
cmpl
add
cld
bound
pop
dec
push
xchg
jl
lds
mov
jo
pushf
mov
addr16
push
adc
nop
mov
inc
daa
jns
ja
dec
xchg
xchg
adc
rorl
lret
fsubl
popl
adc
shlb
xorb
mov
sub
insl
loope
dec
add
mov
cmp
loop
dec
shl
sub
add
mov
jo
repz
dec
ss
add
inc
sbbb
jo
insl
ds
pop
mov
jo
xor
in
sbb
mov
cwtl
dec
mov
push
mov
cmpb
fcompl
lods
lahf
xchg
pop
xchg
mov
pop
test
test
shr
mov
popa
ss
mov
addl
inc
fwait
cs
add
in
insb
sbb
dec
adc
inc
mov
mov
jns
jg,pt
mov
push
push
in
push
stos
push
mov
ss
push
cltd
sub
lods
mov
or
jbe
dec
jle
add
pop
xor
divb
pusha
addr16
cmp
cmp
fldlg2
sbb
mov
push
popf
int3
xchg
add
out
pop
out
testl
lock
push
test
hlt
inc
lods
mov
mov
imul
push
das
push
std
pushf
inc
pusha
or
inc
daa
pusha
das
mov
sub
flds
sub
mov
in
cmpb
adc
jb
lds
fwait
in
xchg
aaa
xor
mov
stos
pop
push
inc
idivb
sbb
cmp
mov
lea
loopne
les
imul
sub
out
mov
aad
and
aam
fs
ja
mov
push
cmp
ret
xor
mov
xor
or
add
leave
mov
inc
xchg
xchg
cmc
test
dec
rcr
sbb
sbb
xor
adc
mov
test
stc
jnp
idivb
mov
inc
mov
inc
xchg
jns
push
lods
cmp
jecxz
inc
add
mov
je
mov
repz
jne
mov
push
add
mov
cmp
aas
jae
and
loope
dec
and
sub
dec
push
push
xchg
cmc
mov
scas
pop
out
push
pop
rcr
mov
mov
adc
fldenv
xor
stos
repz
lcall
aam
shrb
aaa
mov
dec
jge
xadd
mov
sub
out
hlt
push
pop
xchg
mov
orb
sbb
and
and
jb
dec
pop
ja
mov
lock
mov
out
mov
pushf
xor
xchg
into
shrb
ja
les
add
inc
rorl
inc
out
add
dec
lds
mov
testb
repz
gs
and
xchg
inc
dec
inc
mov
mov
int
push
mov
imul
mov
xchg
ficoms
stc
adc
nop
mov
mov
add
aas
into
inc
or
xor
xor
jecxz
xor
movsl
imul
add
je
adc
and
adc
mov
dec
pop
mov
push
or
xchg
dec
mov
testb
push
aaa
add
sahf
fsubrl
fisttpl
js
fisttpll
fcomi
jae
xchg
and
mov
movsl
lahf
inc
rcrb
test
or
fwait
mov
ficomps
pop
sbb
mov
rcrb
and
ret
cmp
pop
sahf
jp
mov
out
rclb
subl
dec
dec
mov
imul
test
add
pop
xchg
loop
inc
sbb
mov
in
push
sahf
fdivrl
jns
pop
xchg
mov
jae
test
or
mov
dec
jl
and
and
pop
clc
int
cmp
rcl
cmp
ljmp
fdivrl
mov
imul
mov
and
sbb
rorb
fsubrl
sub
jl
in
scas
sarb
fcmove
bound
xchg
pop
inc
aam
sub
jno
push
lret
jg
pop
mov
je
push
jle
rcll
aaa
mov
add
sbb
or
xchg
stos
cltd
repnz
jg
out
dec
fs
inc
iret
sbb
aas
lret
imul
repz
jo
dec
xor
jbe
mov
mov
je
cmpb
push
jbe
sbb
pop
sub
mov
mov
cmpsb
dec
clc
testl
das
and
mov
das
and
notb
adc
pusha
inc
hlt
test
addr16
jmp
icebp
dec
loope
cltd
xor
testb
jp
cli
nop
into
fmull
das
sarl
jnp
test
inc
mov
add
xchg
dec
jg
imul
dec
mov
imul
fsub
cmc
bound
pushf
sbb
mov
hlt
cmp
cmp
repz
test
jne
jbe
adc
jge
inc
inc
jecxz
adc
mov
mov
pushf
sub
fdivrl
sub
mov
cltd
mov
adc
xor
jne
loope
mov
jne
lret
lods
and
pop
jg
push
inc
push
pusha
jns
and
mov
mov
popa
cmp
es
mov
sti
ret
int
rcr
dec
je
aaa
push
mov
outsb
loop
and
cmp
xchg
mov
cld
push
xor
dec
shrl
jle
movsb
cmc
data16
mov
stos
loop
mov
or
test
stos
push
mov
mov
and
aad
jno
pop
imul
pop
jg
outsl
jmp
fisubs
jmp
enter
dec
push
ret
ss
dec
arpl
icebp
jmp
xor
cmp
dec
mov
cmp
popa
sub
ret
lahf
push
pop
mov
jbe
inc
push
shll
lcall
pop
cmp
cli
push
inc
dec
sbb
sub
adc
in
sbb
cmp
shlb
pop
pushf
pop
mov
jp
cmc
das
and
and
xchg
dec
fistpll
movb
and
sub
loop
sar
jb
scas
jmp
jle
aaa
inc
add
imul
int
in
mov
jae
popa
mov
push
add
pop
xchg
popa
sbb
aas
sub
jmp
xchg
cmpsl
adc
icebp
jae
stos
lock
xor
outsl
push
add
lds
jns
dec
mulb
insb
outsb
dec
inc
xchg
in
add
lahf
mov
xor
mov
rorl
movsl
lods
mov
jnp
xchg
cld
lods
pusha
jmp
dec
cwtl
lock
mov
sbb
add
xor
outsb
jecxz
faddp
repz
std
mov
int
mov
sahf
pop
push
fxtract
cmpl
call
cmp
fistl
and
xchg
jecxz
clc
pop
cltd
das
and
or
dec
fucomi
rcrb
xor
add
std
cmp
popa
jbe
sub
insb
mov
es
lock
aam
xchg
inc
mov
xchg
add
mov
pop
dec
gs
in
sub
or
push
cmpsb
pop
jg
movzbl
je
loopne
mov
dec
imul
mul
mov
sahf
adc
addr16
mov
fsubrl
incl
or
sbb
mov
rcll
inc
cltd
cwtl
stos
in
and
xchg
icebp
loop
nop
popa
cmp
pop
pop
jnp
dec
pop
inc
imul
mov
mov
sahf
hlt
push
cs
adcb
jmp
cmp
in
bound
cmp
add
in
and
cmc
arpl
lahf
push
adc
clc
push
adc
addr16
jbe
and
pushf
or
cmp
stc
or
sub
pop
jmp
ret
aad
imul
fsubl
sub
stos
loop
xchg
lock
push
mov
mov
add
mov
aas
aad
in
in
mov
xlat
or
rol
pop
lea
push
mov
cmp
mov
add
inc
outsl
mov
fcmovb
imul
jno
pop
je
movsb
popf
pop
imul
sub
xchg
mov
andb
fsub
lea
and
push
mov
gs
dec
fcmovnu
out
or
stos
ret
mov
mov
mov
mov
rcrb
cld
cmp
pop
daa
aad
loopne
in
cs
imul
jae
ja
fwait
mov
mov
imul
adc
lahf
jne
mov
adc
jle
xchg
jbe
xor
xchg
cmp
call
adc
mov
jbe
pop
xchg
jle
jae
mov
mov
imul
mov
iret
scas
mov
int
jb
int3
mov
cmp
je,pn
inc
loop
mov
inc
inc
mov
inc
gs
cli
mov
and
jmp
mov
mov
icebp
adc
cli
sub
loope
jg
data16
and
xor
adc
fxch
dec
movsl
sub
aas
fldenv
pop
push
lods
sti
es
push
inc
lock
adc
test
ret
xchg
jne,pt
dec
xchg
cld
dec
mov
mov
mov
inc
sbb
imul
xchg
mov
sbb
sti
adc
movsl
loopne
dec
es
xchg
push
cld
aaa
and
aad
sarl
insb
aad
jge
cli
lret
xor
cmp
pop
loope
jl
push
pushf
jo
movsl
sub
add
adc
jae
mov
mov
rol
cs
push
mov
inc
lds
and
sbb
frstor
push
add
sbb
push
cmp
mov
add
mov
sbb
adcl
lahf
mov
gs
outsl
hlt
lcall
sub
inc
fs
lcall
pop
cs
imul
lods
inc
or
test
and
popa
inc
sub
xor
jns
cmpb
movl
cmpsb
jbe
sarl
scas
pop
das
mov
in
dec
cmp
cltd
xor
jbe
sbb
aaa
popa
imul
sbb
inc
cmp
dec
iret
fisttpll
add
cmp
push
jae
sub
mov
mov
jae
pop
jnp
mov
ficomps
roll
ja
add
jmp
or
xlat
or
cmp
push
ret
out
push
pop
mov
and
gs
stos
inc
stos
jb
sbb
out
push
xchg
xchg
xor
mov
mov
xchg
push
insb
or
mov
jl
pop
jmp
sub
lods
mov
imul
cli
mov
cmp
stos
mov
cs
pop
xlat
push
inc
pusha
adcl
lret
pop
and
in
push
fdivl
inc
lahf
das
leave
lds
mov
aas
cmp
cmp
pop
or
popf
add
data16
loop
bound
jp
stc
daa
shrb
inc
adc
js
iret
das
out
mov
add
scas
xchg
ret
and
pop
aas
nop
clc
neg
inc
mov
in
cmp
out
fwait
cmc
ffree
add
xor
fisubl
ja
mov
jne
push
popa
rolb
movsl
cs
mov
mov
sbbb
jno
js
jns
cmp
sub
into
ret
mov
daa
sbb
pop
jp
adc
lods
loopne
outsl
loopne
enter
or
push
mov
out
pop
adc
adc
lret
movsb
mov
or
mov
sbb
push
cmp
push
add
bound
pop
pusha
jecxz
repz
lods
addr16
or
adc
btc
sbb
jp
and
lret
lcall
das
add
jnp
pop
jecxz
in
dec
pop
je
mov
aad
push
pop
add
mov
push
stos
mov
imull
popl
xor
repz
mov
mov
cltd
test
add
or
push
or
mov
cld
lock
mov
frstor
in
lock
popf
xor
lcall
dec
dec
aad
loopne
inc
in
insb
jns
jmp
loop
jecxz
adc
dec
add
or
sbb
jb
sbb
mov
push
lret
adc
pusha
and
cmp
pushf
test
insb
cltd
xlat
mov
cmc
add
ret
xchg
mov
push
or
insb
sbb
sbb
mov
cs
lret
repnz
sub
mov
sbb
mov
out
add
dec
inc
add
mov
inc
or
push
enter
pop
and
outsb
nop
imul
repz
in
mov
fscale
cmpsl
xlat
nop
fsin
jne
jno
lods
imul
fldenv
scas
sti
mov
in
lods
lea
jle
sbb
fdivl
insl
push
xchg
pminub
cwtl
shl
rcrl
jmp
imul
inc
repnz
xchg
cmpsb
rcl
pop
jle
pop
gs
jl
insb
xchg
add
pop
cmp
ret
sub
mov
sub
aas
in
xlat
test
jmp
jbe
daa
popf
shl
jle
or
pop
cmp
int3
mov
insl
mov
mov
jecxz
sub
rorl
mov
push
mov
jl
leave
mov
es
gs
cmpl
out
pushf
sti
popa
mov
inc
outsb
leave
daa
push
mov
fsts
dec
mov
push
clc
cmp
fisubl
aad
scas
sbb
mov
popa
mov
or
add
notb
lods
pusha
jecxz
leave
das
les
es
push
in
out
jae
inc
xor
addl
mov
cmpsb
fisttpl
sti
mov
or
xlat
mov
pop
add
mov
cwtl
mov
mov
int
cld
roll
adc
or
ljmp
jnp
jnp
std
dec
cwtl
int3
mov
push
loope
es
pop
push
addl
hlt
or
jns
dec
mov
jl
push
dec
pop
push
in
stc
ds
cmpxchg
clc
mov
call
jge
mov
mov
aam
pop
in
lahf
inc
cmp
outsb
shlb
pop
push
arpl
mov
adc
imul
cmp
iret
mov
pop
aam
xor
arpl
dec
xchg
or
jge
cmp
dec
in
inc
insl
mov
test
lds
sbb
inc
scas
adc
or
test
mov
mov
jle
jge
jo
or
repz
cmp
jae
fsubp
jbe
cmp
cmp
inc
subb
push
push
mov
mov
jae
out
or
mov
fdivrl
mov
and
cmp
addr16
je
or
movsl
jg
adc
enter
push
leave
or
mov
add
or
nop
movsl
adc
sbb
push
popl
add
push
in
add
cmp
push
sar
sub
inc
pushf
jge
adc
mov
sbb
push
push
pop
jns
into
cltd
mov
hlt
mov
out
fs
out
push
call
sbbl
popa
sbb
cmpb
push
lods
out
test
lea
aas
daa
clc
out
inc
rolb
jbe
sbbl
adc
or
xlat
sbb
int
lahf
dec
push
dec
aam
in
out
push
imul
jae
out
mov
sub
sti
stc
mov
xor
xlat
pop
xor
mov
jp
mov
mov
pop
int
xchg
mov
mov
pop
js
call
sub
ret
pop
mov
std
push
jp
ret
jg
cmp
fs
aas
iret
jo
push
outsb
daa
sbb
ss
xchg
push
outsl
xor
cwtl
lock
add
neg
jle
mov
adc
repz
mov
and
or
xchg
sub
adc
sub
cld
in
test
out
mov
xor
mov
push
stc
jmp
or
mov
jecxz
jle
loope
stc
xchg
jle
fisttpl
inc
insb
stos
and
sub
cmp
stos
in
push
lahf
aaa
push
aad
adc
divb
sbb
dec
inc
mov
sbb
out
mov
lods
xchg
cmp
data16
gs
inc
inc
subb
xchg
leave
dec
repnz
rcrl
loop
inc
dec
jb
jns
aam
insb
sub
fs
adc
loope
jle
dec
in
out
inc
sahf
fdivrl
leave
out
mov
in
adc
stc
sub
js
pcmpeqb
mov
icebp
push
xor
jns
lret
xchg
jmp
cmp
jl
rclb
and
movl
popa
cmp
jge
js
xchg
out
push
pusha
mov
ja
rcl
ficomps
enter
or
ss
xchg
cmpsb
stc
mov
mov
sub
stos
sub
add
cmp
test
ret
or
leave
test
xchg
xchg
mov
and
or
cmp
jns
jle
das
cmc
pop
pop
sub
daa
push
rcrl
cmp
jbe
mov
fsubl
push
xchg
in
push
cli
jo
cwtl
inc
cwtl
dec
mov
push
push
cmp
dec
stos
in
lahf
xlat
xchg
loop
sti
add
out
shll
sub
adc
xor
arpl
cmp
mov
subb
es
inc
call
das
test
dec
mov
aas
xor
nop
adc
dec
mov
adc
jl
mov
fwait
push
dec
addr16
pop
push
xchg
notb
dec
sbb
jmp
int3
cmp
or
test
rclb
stos
sti
push
sub
pop
cmp
mov
cmp
and
xadd
scas
or
pop
lret
inc
add
jns
adc
aas
jmp
out
out
dec
ljmp
fs
sbb
xchg
and
nop
mov
out
sti
pop
mov
or
xor
fbstp
adc
cli
mov
es
mov
jbe
xchg
or
rclb
inc
sub
sarl
lret
cmpsl
pop
or
sbb
mov
mov
cs
ljmp
jge
gs
and
or
cmp
dec
mov
sbb
repz
pop
inc
pop
lock
ss
jl
clc
test
jb
test
sub
dec
test
mov
sbb
push
mov
cld
mov
xchg
xchg
pop
shr
inc
clc
nop
imul
ret
negl
inc
cli
insb
push
pop
adc
cmpsb
imul
push
notl
adc
lods
cmpsl
out
mov
cmc
add
stc
cwtl
repnz
sbb
lods
adc
cltd
sub
or
test
push
sub
fs
ds
cmpsb
push
mov
subb
in
aam
test
jne
add
sbb
fidivrs
sub
ja
sbb
shr
cmp
jp
out
cld
mov
mov
shll
cmpsb
adc
push
push
pop
frndint
arpl
out
sub
push
pop
in
lock
outsb
fsubrl
popf
jmp
test
js
push
or
push
aas
into
pop
out
clc
dec
adc
dec
in
mov
xchg
out
xchg
leave
fimuls
xor
mov
lods
sbb
cwtl
xchg
adc
ret
sahf
mov
sbb
ret
mov
or
outsb
cmp
test
out
out
out
inc
cmp
outsl
pusha
xchg
cmp
xchg
fwait
aaa
xor
xor
jnp
call
jmp
bound
xchg
or
aam
mov
xor
and
jp
mov
pop
adc
adc
add
popl
xor
mov
call
insb
pop
jb
jo
mov
lret
fdivs
xor
add
jbe
in
shrl
add
xor
sub
xor
hlt
xchg
das
cmpsb
jne
pop
push
adc
daa
xchg
mov
inc
jb
sub
push
mov
adcb
xor
cltd
insb
gs
stos
scas
mov
stos
arpl
repnz
loop
mov
push
imul
jg
jge
push
cmc
or
imul
mov
cwtl
call
repnz
or
push
rclb
lods
lock
cmp
lcall
std
sub
mov
cmp
or
pop
ror
dec
inc
shll
dec
ljmp
inc
sbb
lock
fs
jns
push
popf
push
cwtl
adc
sbb
adc
xacquire
jbe
mov
nop
mov
cli
xor
cmpsl
mov
in
fs
cmp
mov
stc
enter
data16
xchg
mov
insb
pushf
mov
dec
outsb
sti
outsl
pusha
cmc
nop
in
jnp
jge
pop
mov
fstps
enter
mov
or
aad
scas
test
pop
loope
ds
sub
andb
cmp
fisubrs
scas
sbb
mov
adc
adc
cld
cmc
cli
cmp
pop
mov
dec
jecxz
cltd
add
pop
movsl
push
rclb
rcl
lods
xchg
mulb
inc
notb
rcr
js
das
pop
jg
adc
insb
pop
dec
rcr
pop
hlt
xor
and
test
or
mov
faddl
jbe
call
mov
loop
pop
cmc
cmp
inc
dec
je
add
jo
test
cmp
sub
push
xchg
test
mov
movd
xor
sarb
repz
jns
test
iret
dec
or
sbbl
stos
jl
push
jae
sarl
inc
movsb
mov
stc
cmpsb
xor
push
xchg
add
push
push
mov
jmp
loop
mov
notb
pop
mov
lret
pop
or
mov
pop
push
sub
jge
aad
mov
pop
pop
push
fdivrs
cli
cmp
rolb
mov
cwtl
cli
fs
aad
push
lret
mov
jp
pop
in
cld
mov
add
jmp
adc
inc
subb
test
loopne
scas
cltd
sbb
mov
das
pop
test
ljmp
xchg
xchg
test
xor
fisttps
imul
xor
pop
jns
repnz
or
sti
cmp
orl
push
jns
iret
add
out
adc
lret
nop
fcoms
mov
push
jmp
mov
ja
aad
xchg
data16
add
push
lea
lock
dec
mov
push
sbb
inc
jp
add
ret
push
push
mov
jnp
pop
pop
fs
sub
gs
nop
cs
out
stos
popf
cli
lea
push
stc
sub
mov
cmp
pop
outsb
dec
push
jl
xorb
outsl
fcmove
and
dec
jb
xor
cwtl
pop
ljmp
int
or
xchg
shr
inc
int3
leave
jae
push
or
mov
stos
nop
out
aas
push
loop
and
or
rcrl
adcl
sub
push
hlt
pop
lods
mov
inc
push
ljmp
mov
test
pop
scas
xchg
pop
nop
push
mov
xor
jo
jb
lret
pusha
pop
jnp
jb
in
lea
cmp
outsb
mov
push
mov
subl
jns
arpl
fisubl
add
pop
pop
cld
cmp
xor
popf
stos
mov
popf
adc
cs
frstor
mov
lret
sti
test
in
sti
inc
ret
push
js
jmp
stos
cmpsl
pop
adc
lcall
popl
ljmp
pushf
rcrb
lods
xchg
addr16
fs
aam
sub
std
mov
inc
mov
cmp
lods
sub
lret
sub
ret
xor
pop
xchg
xchg
shl
jnp
test
sti
cli
xorb
mov
stos
mov
or
adc
pusha
ror
ror
pop
jp
xlat
inc
test
cs
aas
add
mov
push
sbb
imul
fildll
cwtl
movsl
mov
push
addr16
aas
and
xlat
shl
lock
scas
inc
sub
push
icebp
dec
call
sbb
and
xorb
jecxz
sub
out
fmulp
or
bound
in
loope
sub
push
gs
fsubl
mov
pusha
xchg
notb
push
in
mov
ret
adc
orl
ljmp
and
aam
xor
psllq
dec
mov
adc
jge
and
add
inc
or
push
loope
cmp
bnd
movsb
xchg
dec
movsb
out
ja
fs
mov
xor
sub
loope
sub
lahf
cmp
ja
popa
sbb
mov
inc
out
xor
leave
test
ja
cmp
jle
jmp
lahf
movsb
jmp
fwait
push
xor
adc
shll
mov
shlb
test
sti
inc
jo
cmp
push
and
xchg
lea
popf
jl
daa
mov
hlt
add
loop
orl
test
imul
mov
sbb
sahf
dec
in
push
ds
pop
inc
outsl
sub
xchg
inc
add
test
icebp
popa
jns
testb
pop
pop
das
sub
dec
sub
iret
ja
cmp
outsb
add
sbbl
pusha
stos
outsl
decl
jecxz
mov
mov
loope
inc
mov
cmp
mov
andl
mov
push
repnz
jle
sbb
pop
push
stos
xchg
sub
inc
dec
cmp
loopne,pn
lds
ret
fisttps
imul
in
data16
push
mov
mov
out
fists
mov
mov
mov
sub
mov
lcall
push
cld
lods
jp
dec
inc
out
imul
shrb
lcall
pop
cmp
cmpsl
popa
das
inc
add
jns
mov
push
mov
and
inc
imul
mov
dec
xor
sbb
idivb
rol
in
repnz
xlat
jae
test
or
pop
pop
cwtl
jnp
adc
and
lret
pushf
lea
adc
dec
pop
sbb
int
cmp
shrl
sbb
test
ret
push
mov
hlt
inc
fldl2t
imul
jne
dec
and
es
jecxz
mov
shl
ljmp
enter
dec
adc
xor
scas
dec
mov
push
mov
int
repnz
pop
jmp
test
push
pop
imul
sub
test
addr16
sub
push
ds
sbb
rol
shrl
mov
or
mov
and
lret
test
xchg
mov
sbb
xchg
xchg
jecxz
imul
jmp
popa
bound
ljmp
xlat
jo
or
dec
arpl
pop
stos
lods
and
pop
enter
ret
gs
in
lods
outsb
xor
pop
mov
lahf
shlb
mov
aas
scas
push
xchg
test
mov
stc
xlat
imul
dec
popa
and
rcr
and
fimull
inc
mov
cwtl
sbb
lea
aaa
sub
adc
xor
sbb
pushf
clc
cwtl
pushf
into
pop
pop
test
addb
or
pop
or
icebp
addr16
cmpsl
loope
out
jle
push
ret
jne
and
dec
ror
lea
jl
gs
xor
popf
push
fimuls
stos
cmp
pop
popa
aaa
and
cmp
push
sub
pusha
xor
ljmp
and
jle
ljmp
add
adcl
xchg
or
ret
test
ret
push
roll
sub
inc
outsb
pop
filds
adcl
inc
mov
cmpsb
sbb
xor
mov
mov
data16
ret
sbb
mov
in
stc
or
fstp
lahf
pushf
sbb
ret
fdivl
mov
sbb
in
cmp
mov
xchg
pop
leave
cmp
jle
dec
sbb
mov
fs
and
dec
pop
pop
lret
mov
or
sbb
dec
mov
subl
adc
and
hlt
filds
add
or
lret
ds
imul
sub
fwait
outsl
mov
js
xchg
mov
jl
sahf
fwait
or
pop
bound
pop
shlb
sub
or
jmp
mov
xor
mov
movsl
add
pop
fnstcw
dec
sub
xlat
cs
test
xor
pusha
push
jmp
sub
push
lret
cs
cmp
and
inc
pop
xchg
ds
xor
adc
jne
pushf
or
cld
xchg
mov
rcr
aas
clc
xchg
xor
addl
jb
cmp
test
push
pop
push
dec
addr16
add
int3
lds
ja
stc
lret
into
xchg
movsl
push
adc
dec
fbld
stos
inc
push
cmc
enter
sbb
mov
loope
ss
jo
aad
cmp
scas
xor
and
inc
arpl
pop
sbbl
jbe
nop
adc
jo
pop
fwait
mov
fimuls
pop
mov
sbb
sub
push
xor
pop
mov
call
lock
jmp
ss
or
das
rclb
sbb
pop
loop
sbb
int3
out
jmp
mov
fildll
xor
mov
pop
aam
xor
pop
imul
cmpsb
mov
pcmpeqb
fwait
shlb
shr
jbe
push
test
pushf
xor
mov
out
std
popl
stc
outsl
out
jo
cmpsb
sbb
dec
xchg
cs
sub
adc
lret
stos
aad
xchg
inc
sub
repnz
movsl
cmp
inc
mov
pop
clc
inc
jne
insb
je
movsl
into
or
mov
xchg
clc
xor
mov
mul
dec
xchg
and
aas
push
ljmp
or
add
int3
inc
rcll
and
adc
xchg
lds
mov
faddp
inc
mov
fnstcw
push
push
addr16
push
in
mov
push
das
in
ss
sub
lock
and
xchg
xor
jle
or
mov
movsb
add
cmpsl
fadds
cltd
add
in
insb
and
xchg
sub
jae
adc
pop
icebp
imul
and
jmp
call
jle
mov
push
pop
mov
jmp
sarl
lret
sub
mov
data16
xlat
test
imul
insb
dec
imul
out
mov
adc
repnz
cmp
inc
nop
repz
mov
loope
mov
loope
in
or
mov
ss
mov
fucomp
or
cs
adc
inc
bound
xor
pop
inc
fwait
aaa
stos
inc
push
jbe
jo
xor
push
mov
xchg
push
mov
movsl
mov
std
les
xor
lods
lock
or
pop
daa
add
mov
mov
out
fbld
dec
lcall
rclb
daa
shlb
cmpsb
inc
js
lahf
imul
sahf
js
mov
lock
inc
in
lods
in
lret
push
jmp
loop
sahf
mov
mov
lock
adc
inc
sub
lods
inc
push
ja
fnstenv
dec
push
pop
push
outsl
inc
dec
jo
adc
enter
in
inc
mov
xchg
xchg
ret
inc
fnstenv
cli
inc
mov
push
xchg
ret
adc
sub
hlt
lock
jecxz
cwtl
xor
insl
ret
rolb
jnp
inc
scas
or
sub
lods
jno
cmpl
or
js
enter
outsl
sbb
ret
sub
push
jae
sub
add
mov
push
lahf
sbb
sbb
outsb
nop
dec
xlat
imul
or
pop
stc
xchg
idivb
pop
push
scas
and
fnstcw
shll
bound
cwtl
xlat
or
mov
daa
arpl
ret
in
bts
fcomi
loopne
cmp
xchg
cmpb
jae
mov
jne
adcl
ja
adc
ret
repz
mov
lret
cmp
pop
sbb
jo
cmp
fmuls
fldcw
in
cli
in
stc
adc
push
insb
aaa
xor
dec
shll
mov
cmc
imul
inc
movsl
adc
inc
out
cmp
jbe
xchg
push
xor
adc
dec
dec
push
jbe
movsb
imul
aas
and
mov
sub
xor
pop
popa
mov
xor
loope
pop
mov
test
jge
jns
pop
xadd
mov
aad
cmpl
shll
repz
popf
add
shrb
scas
pop
popa
sub
or
shrl
icebp
add
pop
sub
jl
mov
incl
sarb
fildll
jnp
into
inc
mov
dec
test
add
daa
mov
add
mull
push
enter
mov
movsb
das
insb
inc
fisubl
int
mov
jg
popf
cli
cmp
pop
sbb
fxch
sbb
mov
outsl
lret
rolb
push
arpl
mov
or
insb
dec
pop
fwait
sbb
jge
jbe
sbb
mov
sub
dec
jle
test
xor
sub
mov
daa
pop
mov
cmp
xchg
add
sub
and
mov
test
loopne
cmp
mov
dec
and
pop
mov
sarl
adcb
movsl
lods
and
in
mov
aad
jmp
mov
sbb
adcb
jg
cwtl
add
cmp
push
sti
add
jg
aas
sub
lcall
and
popf
sub
adc
je
lcall
out
sbb
xchg
mov
xchg
or
sbb
pop
mov
pop
leave
in
mov
mov
iret
inc
push
pop
cmp
mov
ret
pop
loope
push
push
in
daa
dec
mov
or
dec
sti
pop
add
pop
dec
imul
xchg
aad
les
adc
mov
mov
mov
mov
adc
loopne
pusha
sti
es
cmp
inc
scas
mov
sub
pop
rcrl
insl
inc
jge
push
call
jle
push
divb
cmc
adc
fwait
cmp
cmp
notb
imul
fmull
xchg
pop
inc
ss
dec
mov
mov
push
mov
mov
scas
add
mov
push
jl
mov
sub
xorl
je
push
sbb
jl
sbb
push
and
mov
scas
mov
jne
xchg
rcr
mov
cmp
sub
pop
sbb
leave
das
inc
cmpsb
mov
lock
mov
rcr
fsub
stos
and
jnp
or
xor
xchg
dec
sbb
imul
mov
aad
gs
and
add
push
in
outsb
pop
mov
cs
shll
popa
loope
test
outsb
cmp
movsb
push
fistps
jns
sahf
in
mov
mov
dec
lods
int3
outsl
xlat
inc
sarb
pop
mov
xchg
mov
andl
rcrb
mov
int3
gs
insl
movsb
push
add
lret
in
inc
sub
or
dec
jae
adc
fwait
mov
cs
cmp
cmp
cltd
dec
movsb
xchg
or
jnp
push
cld
rclb
loopne
insl
xchg
mov
jns
mov
cs
push
jecxz
mov
sbbl
and
jmp
mov
test
addb
mov
push
mov
sub
arpl
stos
or
ds
std
mov
dec
mov
mov
aad
mov
mov
into
pop
ret
scas
cmpsb
and
xor
imull
movsb
ljmp
insl
js
push
mov
inc
stos
test
ret
mov
and
xlat
xchg
add
rcrl
ret
mov
mov
out
and
and
aam
mov
xchg
idiv
push
pop
xchg
xlat
lret
jnp
test
dec
es
add
jns
into
add
cld
fadds
xor
fidivs
sbb
test
mov
cmp
pushf
fiaddl
xchg
mov
pop
test
add
inc
add
lods
mull
mov
pop
inc
pop
add
add
hlt
lret
dec
jge
mov
nop
dec
push
mov
mov
testl
add
pop
xchg
push
test
adc
dec
mov
fnstsw
sub
or
jl
mov
mov
xchg
jno
xchg
faddl
pop
gs
fsub
xchg
test
vmovaps
dec
jo
xchg
and
les
push
xlat
xor
cmp
clc
or
lds
or
fptan
mov
lret
out
mov
add
pop
xchg
mov
es
pop
pop
out
mov
ret
push
loopne
add
add
add
push
clc
cmp
sub
shrd
pop
ret
rcl
push
push
dec
loopne
mov
popa
mov
push
lret
movsl
jbe
test
jmp
xchg
bound
rorl
xchg
lods
pop
mov
sbb
dec
in
inc
sbbb
pop
xor
loope
cli
jbe
push
mov
mov
std
sub
add
pop
jmp
or
ljmp
stc
int3
std
addr16
fcoml
rclb
push
or
sbb
push
testb
cmp
mov
test
dec
inc
xchg
jmp
and
aas
call
xchg
cli
loopne
les
int3
jle
mov
jbe
daa
out
jecxz
stos
or
jnp
into
divb
popf
aas
ss
lret
imul
jmp
adcl
add
pop
mov
mov
xor
or
xchg
pop
fistl
jle
dec
sub
int3
es
pop
push
scas
test
fists
add
jbe
jae
jae
and
aam
out
loop
lret
mulb
jnp
std
leave
pop
jnp
pop
pop
mov
aas
rolb
leave
mov
push
add
in
jle
ljmp
insl
inc
fcomps
add
inc
mov
cmp
xchg
int
push
jp
xchg
xor
cmpsb
xor
add
xchg
out
mov
mov
dec
sub
hlt
in
insb
idivl
scas
out
cmpsl
push
cmp
xchg
dec
fisubrs
fs
pop
sub
sar
mov
add
imul
push
sarb
pop
pop
lret
cmp
xor
bound
cltd
mov
cs
jmp
gs
or
clc
hlt
stos
mov
mov
sub
negl
lods
ret
int3
mov
cmpb
popa
inc
mov
and
lret
inc
jo
sarl
leave
dec
addl
mov
sbb
jle
mov
fxch
shlb
in
movsb
xchg
sbb
cmp
fcoml
fnstenv
lods
cmp
push
call
add
mov
pop
cmp
outsb
push
pop
sub
in
push
cltd
adc
push
out
push
test
scas
adc
movsb
jns
mov
stc
mov
imul
pop
jge
int3
mov
xor
add
or
or
leave
clc
add
cmp
xor
lods
shll
int3
test
lcall
mov
bound
hlt
mulb
in
push
xor
xchg
pusha
roll
cmp
xchg
push
or
daa
aaa
push
aas
lods
imull
mov
daa
dec
fmuls
inc
mov
div
sbb
enter
push
dec
mov
mov
inc
leave
xchg
or
mov
mov
mov
pusha
xchg
or
dec
in
movsl
jns
in
add
adc
test
les
sti
push
dec
shll
dec
sahf
test
mov
push
scas
push
popf
mov
loope
jecxz
sub
adc
pushf
mov
push
cmp
fucomi
add
insl
pop
pop
cli
aam
or
jno
stc
sub
xchg
imul
xor
lcall
jecxz
pop
test
adc
stos
stc
fdivl
adc
and
outsl
push
sbb
mov
test
cmc
jg
cmp
adc
or
gs
add
sub
jb
and
pusha
pop
jmp
or
mov
mov
or
jge
cmp
test
fiadds
xor
loop
scas
ret
jl
sub
lods
push
mov
mov
cmpl
mov
jmp
clc
jnp
inc
ret
jle
dec
inc
dec
rorl
pusha
mov
xchg
fldenv
xchg
andb
scas
bound
xchg
sbb
jo
lods
add
sti
pop
gs
and
test
les
sub
jmp
mov
sub
repnz
adc
inc
xchg
movsb
xlat
test
xchg
aas
jge
adc
push
mov
push
add
std
fs
fucom
push
add
outsb
lret
testl
orl
mov
mov
sub
add
ret
mov
mov
adc
test
adc
adc
push
nop
cmp
scas
fcoms
mov
ja
add
mov
stc
cwtl
aas
vmwrite
dec
mov
lret
loopne
divb
adc
jne
pop
aas
xchg
cmpsl
mov
int
cmc
call
dec
mov
xchg
popf
adc
pop
and
rol
stos
jge
pop
xlat
cmp
mov
loope
ds
in
mov
sbb
push
xchg
leave
inc
popf
subb
mov
loopne
jge
mov
push
xlat
pop
enter
call
dec
fnstsw
cmp
mov
jns
ljmp
dec
fcmovb
cld
cltd
dec
push
mov
dec
rcrl
pop
shrd
rorl
and
inc
push
add
dec
stos
frstor
inc
cmp
aaa
fs
pop
and
sbb
lret
jns
jns
xchg
xor
xchg
pop
lret
lret
add
pop
xchg
adc
add
adc
xor
cmp
pop
mov
fnstcw
xorb
xlat
icebp
pusha
repnz
ljmp
cmpsl
stc
xor
sbb
test
mov
jmp
xchg
push
addl
hlt
pop
pusha
iret
cmpsl
sti
lea
mov
syscall
xchg
lcall
adc
mov
push
movsb
nop
aam
adc
loop
push
lods
movsl
pop
cs
xchg
pop
xchg
clc
bound
jmp
push
insl
push
ja
jne
stos
int3
out
mov
xchg
mov
inc
rol
pop
std
push
dec
jmp
es
jb
iret
add
and
jge
mov
lock
sub
sti
push
cltd
xor
add
jae
and
or
movsb
adc
sbb
or
sbbl
xor
jb
pop
cmpsl
mov
repnz
insl
mov
push
or
inc
insl
dec
cmp
loope
jmp
xchg
xchg
popf
test
or
pushf
sbb
addr16
xor
push
dec
repz
leave
into
ficoms
mov
mov
cs
addr16
lret
dec
mov
in
jo
adc
or
aas
addl
dec
ret
shll
movsl
repnz
or
push
lods
out
mov
insl
jecxz
pop
aas
jp
in
mov
lretw
popa
movsl
fwait
jns
bound
ds
data16
outsl
clc
or
test
mov
mov
jo
test
ret
lret
mov
out
inc
lock
addl
stc
outsl
pushl
push
cmp
mov
dec
nop
gs
xlat
lret
je
int
mov
orb
sbbb
or
int3
jne
cmp
rcll
xchg
movsl
jecxz
ja
mov
mov
mov
and
lcall
int3
test
aad
pop
out
add
push
ds
and
and
clc
mov
or
ret
imul
lods
ljmp
dec
rol
pop
imul
sbb
cli
mov
aaa
mov
jbe
push
hlt
xchg
cmpsl
subl
fcmovbe
xor
ffree
cmp
sub
jae
lahf
adc
dec
mov
ljmp
push
movsl
cli
inc
loope
push
mov
mov
mov
in
adc
iret
popa
out
sub
pop
in
mov
xlat
adc
jo
push
iret
add
mov
inc
pop
aam
nop
mov
in
and
xchg
imul
jmp
dec
es
arpl
xchg
push
xor
test
dec
cld
movsl
ds
int3
mov
dec
add
fimull
movl
pop
adc
ret
xchg
sub
sar
mov
cwtl
mov
in
sahf
dec
and
cmp
pop
adc
mov
aad
ret
jp
mov
rorl
lods
push
imul
andl
pusha
and
insb
clc
jmp
adc
fistl
sti
cld
xchg
or
jmp
lcall
mov
fisttpll
inc
cmp
sub
loopne
fisttps
repz
push
sub
fldenv
inc
fwait
mov
clc
int
mov
xchg
pop
mov
cmpsb
cwtl
imul
loope
pop
mov
ds
adc
movsl
lahf
mov
dec
test
xor
enter
ljmp
cli
add
jmp
pop
jns
mov
hlt
leave
ds
and
inc
pop
insb
iret
movl
or
push
xor
int
sub
mov
mov
loop
xchg
xchg
in
jb
ss
enter
test
xchg
mov
ret
dec
jmp
es
stos
mov
cmc
push
aas
daa
out
popf
ret
xor
pop
push
testb
cmc
push
sub
pop
mov
fcoms
fs
add
scas
sub
out
jo
ss
das
jle
jecxz
cltd
pop
xchg
test
sbb
leave
xchg
lods
fisttps
xor
ljmp
xchg
clc
inc
push
imul
clc
popa
jmp
repz
mov
outsb
loopne
data16
or
and
mov
shlb
lock
push
ss
ss
outsb
scas
inc
xchg
ss
cltd
mov
xchg
in
out
call
jns
fwait
icebp
xchg
ficoms
jecxz
push
push
mov
in
loopne
cli
sbbb
jl
xor
test
sahf
adc
in
xlat
stos
bound
bnd
jbe
cmp
mov
xchg
gs
add
int3
fiadds
mov
repz
xor
jg
jecxz
sub
movsl
sbb
rcll
nop
mov
addl
jb
ret
notl
push
sar
inc
jae
xchg
xchg
or
mov
shll
mov
xchg
int
test
inc
jnp
iret
adc
int3
aam
sbb
adc
mov
sub
rcrb
mov
mov
push
negl
jl
scas
sbb
xor
and
mov
inc
lods
adc
outsl
pushf
frstor
in
fdivrs
xor
dec
push
xor
test
ja
aas
outsl
push
lock
xchg
pop
lock
mov
idiv
xchg
sub
pop
test
jo
jb
dec
push
mov
stos
push
lea
dec
icebp
xchg
or
lret
push
jg
jo
mov
mov
imul
xchg
push
fs
cld
shll
lods
inc
and
stos
out
xchg
and
je
pop
xor
pop
nop
cs
inc
not
jnp
jns
cli
adc
lahf
dec
jle
stos
out
sub
xor
popa
or
xorb
xchg
incl
pop
sbb
bswap
adc
stc
mov
js
call
in
and
pop
sub
nop
lcall
aas
cmp
cs
jle
sbb
popa
jmp
leave
test
fdivl
outsb
xchg
stc
xor
call
pop
sbb
jmp
aas
into
ja
cltd
mov
in
sarl
and
sbb
jp
xor
push
in
cmp
cli
mulb
aad
es
movsb
mov
movsb
call
ror
adc
xchg
mov
xor
pop
push
fnstsw
rorb
jbe
inc
pop
pop
stos
cld
push
inc
pop
inc
arpl
call
data16
inc
mov
stc
test
add
push
and
pop
imul
sub
adc
push
sbb
xchg
lret
push
fsubl
mov
push
dec
fs
add
test
pusha
sub
test
in
inc
test
sahf
data16
add
or
imul
arpl
inc
fistpl
add
fs
pop
or
ja
xchg
sub
loope
iret
dec
iret
mov
push
rolb
lods
push
cmpsl
sbb
outsl
ljmp
inc
test
sarb
nop
adc
inc
adc
icebp
adc
mov
daa
sbb
mov
out
stos
setnp
cmp
sub
jae
stos
cld
addr16
loopne
aas
out
in
pop
mov
adc
stc
jno
adc
mov
enter
mov
cld
mov
jle
xchg
or
js
test
cwtl
fcompl
xor
cmp
loopne
push
es
out
stos
fistpll
aaa
fs
jmp
jmp
add
addl
jmp
loop
inc
dec
sub
je
and
mov
lret
out
adc
sahf
adcb
aad
inc
sub
shll
xchg
dec
or
stos
pop
add
pushf
lcall
mov
xlat
inc
lret
int3
dec
pmulhw
mov
add
mov
push
xor
js
fcoms
push
add
das
rorl
jb
push
je
ja
adc
sub
lahf
repnz
push
aad
rcrb
add
inc
cwtl
and
cmp
adc
mov
mov
mov
in
mov
stos
pop
std
in
movsb
outsl
or
roll
pop
out
shrl
inc
or
push
and
xchg
xchg
sub
lret
lsl
mov
push
mov
call
jg
das
and
fsts
lods
dec
in
inc
dec
gs
nop
xor
inc
add
and
jno
pop
xor
in
mov
xchg
in
cwtl
or
je
arpl
ss
insb
fs
mov
sub
in
loop
imul
sbb
dec
repnz
add
dec
test
jb
push
lock
mov
hlt
adc
mov
fstpt
popa
fldcw
icebp
insb
jg
mov
insl
mov
insb
dec
leave
mov
inc
lods
add
imul
insl
int3
cwtl
loop
cmpsb
sub
and
ret
push
or
cmp
pop
das
sahf
ja
jo
rcll
mov
ja
adc
fs
xchg
lret
mov
jbe
mov
icebp
in
cmc
sbbb
dec
mov
into
rorl
push
addr16
out
inc
lods
pop
mov
icebp
idivl
fnstenv
add
adc
xlat
pop
mov
pop
adc
ljmp
aam
lds
ret
jge
adc
mov
and
jmp
sbb
xchg
xchg
push
pop
loopne
shrb
push
sbb
and
adc
inc
idivb
inc
or
dec
jb
lock
fcoml
inc
mov
dec
aaa
addr16
jb
pop
add
mull
lods
sarl
fadds
add
jo
cmpl
out
ds
jb
and
or
iret
test
sti
inc
into
pushf
dec
frstor
insb
mov
push
fbld
lcall
pushf
flds
add
xor
movsl
gs
mov
pop
mov
test
cmp
gs
cmp
sub
jb
inc
in
rcrb
aam
fsub
mov
imul
out
insl
inc
pop
outsl
cli
jge
adc
sub
and
mov
fstpl
jb
xor
std
mov
nop
jbe
aad
pop
mov
mov
int3
insl
test
jmp
mov
cmp
and
fisttps
xchg
scas
sub
pushl
movhps
mov
sahf
dec
push
and
cld
pop
dec
scas
popf
lea
ret
ljmp
push
mov
les
xchg
sbb
adc
out
enter
idivl
inc
icebp
popa
into
mov
test
adc
cmp
push
cwtl
cmpsl
xor
pop
xor
cmp
shl
xor
mov
es
ret
jb
or
mov
mov
fdivs
sbb
and
lea
insb
sub
sbb
mov
sub
aaa
xor
xchg
cmp
push
cmp
lds
sbb
mov
mov
repnz
cmpl
jns
cmp
inc
xchg
adc
fnstenv
add
rclb
ret
add
sahf
xchg
into
jecxz
lahf
push
jo
mov
adc
daa
cld
pop
jns
inc
push
in
cmp
stos
push
fmulp
sub
xchg
inc
fyl2xp1
popf
aad
mov
rcr
cmp
sub
loope
daa
pop
and
mov
cmpb
ljmp
jle
pop
aaa
sbb
pop
sbb
int3
dec
iret
scas
js
push
shlb
cmp
push
add
and
push
negb
test
xchg
pusha
add
mov
and
loop
fwait
push
cmp
ja
subl
addl
enter
cltd
mov
bound
js
xlat
dec
pop
dec
mov
mov
frstor
out
push
xor
and
out
stos
inc
imul
call
push
and
loopne
lret
outsb
xlat
xchg
mov
sbbb
sarl
stos
sub
call
dec
pop
leave
shl
jp
pmullw
fs
cli
push
add
jae
js
pop
xchg
sbb
mov
popf
adc
inc
fimull
fdivrp
sub
cmp
push
and
cmp
stos
inc
and
lods
and
cmpsl
inc
and
stc
lret
sub
mov
inc
and
xchg
fidivs
inc
in
in
es
les
sub
mov
sbb
loopne
jmp
mov
inc
mov
and
dec
mov
mov
cmp
cltd
or
cmp
bound
xchg
fwait
mov
repnz
mov
dec
mov
sbb
and
lret
out
push
mov
imul
outsl
add
test
xchg
jmp
icebp
xor
aam
mov
jbe
inc
cmp
adc
inc
xchg
lret
push
push
and
pop
xchg
pop
adc
in
ljmp
mov
loope
pop
imul
cmc
pop
fcos
and
jns
push
idiv
adc
dec
dec
arpl
out
sbb
add
pop
sub
stc
lock
rorb
std
dec
aam
rorl
repnz
xchg
cltd
pop
cmpb
dec
dec
or
ss
push
adc
add
cmp
add
cli
sub
sub
gs
sti
pop
jp
std
mov
dec
int3
in
pop
pusha
notl
ret
sbb
nop
jns
cli
xor
adc
push
jnp
inc
sub
push
mov
decl
sbb
aam
pusha
adc
inc
movsl
lock
loop
sub
out
push
pop
push
cli
test
and
std
xchg
push
out
fbld
xorl
dec
rorb
xchg
js
fisubl
cli
rcrb
ja
or
pop
push
mov
lds
stos
dec
sbb
push
mov
ljmp
lods
and
dec
out
iret
mov
out
iret
cmpb
sti
insb
push
mov
fstps
ret
mov
mov
test
ficompl
sub
dec
xor
ret
jo
and
pop
push
push
and
call
out
xchg
mov
dec
mov
and
daa
xor
jo
jmp
xchg
fildll
dec
lods
fmull
sbb
inc
pushf
xchg
popa
outsb
out
jno
dec
in
xchg
xchg
dec
fisubrs
xor
jo
jae
sti
mov
push
jge
int
mov
xchg
outsb
testb
pop
rcrl
insl
lock
adc
push
xchg
dec
and
inc
jne
mov
mov
xchg
hlt
pavgw
sub
jns
js
cmp
imul
jb
jae
loope
jne
fs
mov
test
rorl
fstps
mov
sub
inc
adc
mov
lahf
call
sub
fsubrs
pop
lods
sbb
jge
gs
loopne
mov
or
xor
aam
cmpsb
fdivs
daa
cwtl
ja
movb
lock
xchg
insl
jb
out
and
and
or
outsb
cmc
xor
loopne
pop
xor
arpl
mov
lcall
ficompl
lcall
leave
popa
test
test
xor
fsts
cwtl
adc
incl
mov
repnz
push
popa
cli
mov
push
push
push
repnz
lahf
vmovupd
stc
ss
mov
mov
add
cli
int
in
inc
inc
xchg
jmp
or
lods
lahf
rorl
xchg
lds
movsl
add
outsb
fcoml
ss
das
cld
pop
mov
les
pushf
fisttpl
ret
cmp
loope
inc
adc
negb
shrl
out
xor
pop
loopne
mov
std
loope
pop
xor
nop
jbe
mov
adc
out
pop
cmp
insl
loopne
pop
and
or
sub
cmp
out
and
adc
xchg
loopne
xchg
shlb
add
push
jmp
jecxz
mov
add
mov
dec
ror
mov
inc
xor
out
rorl
xchg
imul
aaa
push
ret
mov
xchg
mov
icebp
stos
cmp
lods
xlat
mov
inc
cld
mov
inc
and
daa
adc
mov
mov
jns
shll
ret
mov
mov
loopne
bound
pushf
push
loope
test
cmp
js
sbb
push
mov
out
test
sub
sbb
mov
pusha
add
outsb
xor
rcll
cmp
sahf
lods
pop
fcmovnu
pop
pop
jns
add
push
xor
movsb
dec
mov
hlt
cltd
and
ja
mov
sbb
sub
pop
icebp
cmc
jnp
arpl
sbb
rcl
jno
out
sahf
das
fiaddl
enter
mov
lret
jecxz
fdivs
mov
icebp
scas
cmc
mov
pushf
cmc
pusha
pop
sub
dec
xor
out
das
mov
cmp
mov
sbb
dec
mov
jne
das
or
mov
test
sbbl
mov
sbb
sub
add
cmp
mov
dec
stos
dec
sbb
push
shll
iret
push
mov
into
push
dec
sti
or
outsb
imul
push
mov
sbb
gs
arpl
cmp
sub
out
xchg
fcoml
test
hlt
icebp
cmp
decl
fs
sahf
mov
ljmp
mov
fldt
adcb
add
adc
cmp
test
loope
rorb
or
lahf
and
jle,pt
inc
add
mov
and
sbb
mov
stos
stos
xor
rolb
mov
fs
hlt
sbb
mov
outsb
fwait
ss
dec
rorb
out
pop
add
cmc
popf
dec
mov
pusha
pop
pushf
xchg
sahf
sub
or
jmp
mov
xchg
or
cli
loope
jp
or
mov
inc
negl
dec
jge
enter
sbb
loop
xor
fistpll
icebp
shl
inc
das
jbe
sbb
and
cmp
daa
pop
test
push
clc
push
xchg
cmc
daa
dec
push
add
ljmp
arpl
pop
add
xchg
and
xor
in
in
pushf
xadd
imul
adc
es
lret
jge
jns
inc
cld
or
pushf
jp
xor
sbb
mov
dec
aas
sbb
mov
ret
sbb
add
or
jb
adc
cmp
sub
out
jne
xchg
push
bound
adc
loop
lret
mov
nop
dec
mov
hlt
mov
sbb
fisttpl
aam
aam
insl
cwtl
lcall
rcrl
testl
sti
xor
or
test
cli
mov
xor
fstl
xor
mov
inc
xchg
xchg
lret
inc
cwtl
sbb
addb
pop
or
mov
mov
xchg
mov
ret
mov
imul
sub
jmp
les
pop
xchg
pop
arpl
jp
add
adc
mov
fs
test
test
ret
mov
pop
dec
into
cltd
pop
inc
mov
mov
loopne
test
xor
xchg
xchg
fcoms
mov
cmp
push
aam
aad
jecxz
mov
dec
das
add
cmp
aaa
daa
pop
xchg
inc
and
jg
out
jge
push
mov
sti
pop
pop
xchg
mov
and
sahf
aad
cmp
mov
outsb
stc
scas
popf
sub
push
fmul
lods
cmp
movsl
pop
lock
fs
jp
test
jp
mov
sub
dec
cmp
xchg
out
popf
loope
es
jg
push
sbbb
lods
cld
jg
lea
int3
xor
lahf
sub
std
lahf
mov
add
xlat
cmp
arpl
bound
adc
pop
pop
out
push
iret
inc
gs
sbb
pop
and
sbb
add
lods
dec
push
pushf
pop
add
jno
fistps
xor
rorl
mov
out
adc
mov
movsb
cmp
sub
in
test
imul
in
ljmp
and
add
sbb
into
pop
inc
lea
movsb
or
mov
test
vpunpcklqdq
loope
or
cmp
nop
shr
clc
and
or
cmp
xchg
clc
push
inc
mov
dec
mov
pop
adc
inc
call
mov
nopl
mov
cld
mov
xchg
cmp
xor
push
cmp
andb
leave
bound
mov
int3
cmpsl
sub
test
cltd
xchg
insl
mov
jb
push
nop
sbb
mov
xor
pop
mov
xchg
push
aaa
adc
mov
mov
adc
popa
push
xor
sbb
push
push
xor
sahf
enter
ror
jne
jb
sub
ss
call
outsl
mov
or
pop
or
neg
insb
dec
sbb
inc
mov
fwait
push
cli
pop
xchg
scas
inc
jecxz
pop
or
inc
pop
and
sbb
mov
lret
imul
imul
sti
mov
out
push
mov
or
pushf
hlt
ret
mov
inc
xor
xor
add
dec
lods
xchg
or
cmp
mov
add
faddl
push
notl
sbb
push
mov
sub
sbb
aad
mov
push
outsl
fnsave
jg
jp
popf
mov
movmskps
or
mov
outsl
fistl
fldl
mov
and
popf
sbb
push
xadd
pop
jmp
dec
and
cmp
fcom
dec
xor
mov
pusha
pop
jmp
inc
sarb
and
cmpb
dec
dec
adc
and
notb
aaa
bound
mov
and
ficoms
test
jge
je
insl
cmp
add
mov
stos
ja
adc
out
cmp
outsb
mov
jne
adc
std
lret
lock
dec
bound
ds
lods
mov
cmpsb
and
idivb
push
pop
inc
push
push
pop
add
pop
jg
or
sarl
or
sbb
lret
lret
push
popf
js
in
sbb
inc
neg
xor
inc
sub
and
mov
sub
pop
pop
xlat
or
out
adc
popa
fnsave
in
into
out
pushf
sahf
sbb
push
mull
xchg
jmp
fwait
ljmp
out
insl
icebp
test
shlb
fdivrl
cmp
gs
outsl
fimuls
mov
lcall
call
mov
fst
or
repz
shl
jae
pop
call
xor
mov
data16
and
call
in
jne
mov
add
or
dec
xor
mov
fcoms
pusha
cmp
leave
ret
fldt
mov
mov
push
pop
scas
movsb
jnp
xor
jbe
jmp
cld
mov
jmp
sub
cmpsl
cmp
pop
aaa
sbb
mov
mov
leave
pop
test
jg
pushf
addl
xchg
pop
mov
add
fbld
sub
jl
int3
push
aam
inc
pushf
jbe
add
and
movhps
icebp
lcall
push
push
and
stos
mov
addl
and
and
popf
fst
in
mov
xlat
jns
out
mov
incl
cmc
mov
lret
loope
xor
daa
test
push
aas
cmp
es
mov
imul
mov
sub
xchg
dec
enter
or
imul
daa
cmc
sub
dec
and
mov
mov
jb
mov
sbb
sub
mov
mov
mov
fnstsw
sbb
jmp
mov
add
rcl
or
int3
adc
jg
ja
mov
xchg
pop
pop
movsl
popa
cmc
jns
xor
out
dec
rol
cmpsb
aaa
int3
negl
xchg
and
sbb
hlt
dec
push
fdivrs
jbe
dec
sub
pop
leave
scas
div
push
adc
test
jbe
and
popf
lcall
and
push
cs
mov
in
xchg
lods
repnz
push
mov
adc
int
std
xor
mov
shl
fistpll
mov
mov
inc
dec
xor
pop
mov
jl
and
leave
add
cmp
pop
add
fisubrs
sbb
insb
cmc
or
inc
dec
les
and
iret
xor
call
lods
sbb
icebp
int3
sub
iret
sbb
inc
iret
sbb
fidivrl
mov
test
in
and
into
fnstcw
imul
dec
in
fs
loope
xlat
sbb
fcoms
fists
cmpsl
lods
mov
jmp
repz
dec
or
push
add
dec
mov
test
ret
and
ljmp
mov
cld
pop
mov
jl
xor
and
jo
cmp
jmp
or
fcomp
dec
mov
arpl
or
mov
and
sbb
pop
adc
jae
xchg
shrl
mov
adc
imul
push
fwait
rcrb
stc
jae
fsub
mov
adc
in
fisttps
push
loopne
out
lret
aas
pusha
push
and
pushf
mov
mov
sti
mov
add
push
dec
xlat
push
addr16
sbb
xorb
mov
mov
ret
mov
aad
jg
in
int3
data16
aaa
dec
jae
cld
test
fld
shl
mov
cmp
std
xor
and
xchg
loopne
pop
scas
dec
pop
xchg
xchg
leave
addr16
rolb
stc
cld
imul
addb
add
jnp
dec
mov
loopne
bound
je
ds
cmpsb
push
clc
dec
cmp
mov
sub
mov
idivb
push
imul
pushw
out
mulb
mov
pop
sub
adc
or
jo
adc
push
inc
or
shr
and
out
push
ja
adc
mov
outsl
mov
stos
pushf
fistl
or
cmp
pushf
add
hlt
xor
daa
add
int3
and
cwtl
pop
pop
iret
and
or
push
push
mov
sti
ficomps
xchg
cmpsb
mov
adc
inc
sti
adc
mov
cs
sbb
popf
mov
in
dec
mov
mov
xchg
jne
out
popf
sub
push
xor
and
pop
inc
loopne
push
cli
pop
mov
mov
mov
mov
lret
and
inc
mov
jle
xor
ret
mov
test
push
dec
cli
push
cwtl
dec
popf
loope
ret
pop
mov
push
aaa
cmp
inc
inc
fisttps
in
cmp
sub
mov
scas
xchg
ret
or
jmp
push
outsb
mov
fdivrl
dec
cmp
clc
push
fdivrs
pop
xchg
push
rcr
inc
dec
sbb
pop
add
enter
in
inc
or
add
or
cwtl
out
and
fldt
fldz
cltd
sbb
pop
daa
movsb
mov
push
or
test
pushf
lahf
mov
int3
add
sbbl
fwait
and
das
iret
nop
add
lods
adc
lods
or
add
push
clc
int3
das
sbb
or
mov
iret
arpl
ror
scas
mov
js
test
jl
fldenv
push
int
sub
notb
enter
outsb
or
into
mov
getsec
fs
xor
pop
ret
lods
bound
imul
add
jmp
push
add
ds
inc
add
pop
ss
imul
jne
movsb
js
aaa
inc
in
adc
into
cmpsb
or
jno
pop
iret
sub
loopne
mov
mov
aad
and
loope
and
std
out
repz
jne
sub
rcrl
ret
inc
push
pop
xchg
es
jmp
inc
insl
scas
push
test
inc
hlt
sbb
jno
daa
in
sbb
mov
aaa
mov
int3
jae
mov
and
es
mov
call
inc
push
jne
cmpb
lret
enter
dec
mov
add
fistpll
add
or
into
mov
jge
ja
and
sbb
jns
cmp
leave
xchg
jno
cmc
int
jmp
mov
fs
arpl
stc
mov
xchg
add
xorb
rcll
adc
mov
or
push
shl
dec
push
out
pushf
push
add
mov
mov
mov
dec
repz
xchg
pop
fistl
cmp
mov
daa
dec
xchg
mov
or
ret
mov
or
sbb
inc
xor
test
or
cmp
cmp
lret
cmp
enter
cmp
ljmp
mov
or
fbld
cmp
out
dec
add
repnz
pop
dec
or
mov
aad
hlt
in
adc
aam
xchg
jns
rcrb
mov
xchg
out
mov
jae
xchg
add
data16
and
push
add
push
out
or
xchg
sti
and
sbb
xor
shlb
movsl
push
xchg
mov
pop
insb
aas
and
std
jmp
mov
push
arpl
adc
add
ljmp
lds
mov
inc
and
jbe
test
nop
adc
loopne
insl
adc
mov
fidivl
or
and
nop
mov
arpl
popf
xchg
adc
add
sub
inc
push
cmp
and
fiadds
pop
xor
push
adc
scas
and
push
pop
cmp
pop
aad
adc
fsubrs
lahf
sbb
sub
movsb
cwtl
mulb
xor
into
jnp
sbb
pop
pop
into
push
fmull
sub
mov
out
int3
pop
dec
add
xchg
mov
rcll
jmp
movsb
test
scas
cli
sahf
popa
mov
aam
sub
bound
cmpsl
sub
sbb
xlat
jecxz
addr16
lock
ret
xchg
in
bound
cmp
lret
lds
sbb
add
mov
iret
and
adc
or
ret
pop
inc
cmp
or
jo
sti
lcall
out
adc
xchg
dec
es
sahf
aam
rolb
xor
movsb
mulb
les
rorb
dec
enter
push
movsl
sahf
aaa
xchg
arpl
lods
pop
mov
scas
and
daa
cli
xor
insb
mov
daa
loope
in
fs
sub
imul
adc
in
ret
sbb
sbb
lods
mov
movsb
jg
jl
xchg
add
jnp
inc
lahf
les
loop
jo
jno
lock
xor
mov
dec
pushf
xor
sbb
cld
mov
mov
and
mov
xchg
and
icebp
adc
popa
int
add
imul
adc
mov
mov
into
scas
dec
mov
mov
sbb
cltd
inc
adc
jmp
push
cmovle
mov
jmp
cmp
mov
das
lahf
hlt
adc
out
mov
out
fidivrl
fwait
cmp
out
leave
repnz
or
mov
fstpt
jno
aad
mov
cs
pop
movsb
jne
scas
xor
dec
add
sub
inc
test
push
in
test
inc
pop
pop
cli
xor
dec
pop
dec
in
push
pop
in
addr16
in
sub
jmp
sarb
mov
lods
pop
cli
push
mov
push
push
jnp
mov
sub
mov
or
pop
jecxz
inc
imul
push
xchg
mov
sub
bound
push
xchg
loope
lock
fwait
dec
sbbb
xorl
int3
daa
xchg
xchg
movsl
xor
cmp
adc
fisubrl
mov
inc
mov
lret
ret
add
push
das
mov
lahf
jae
rclb
pop
clc
push
pop
inc
test
jno
test
dec
jae
dec
add
addb
push
in
mov
pushf
pop
inc
or
jmp
push
cli
js
jecxz
lret
mov
mov
aas
aas
jecxz
cmp
inc
pop
sbb
test
test
xor
push
xor
lret
mov
inc
mulb
mov
sub
push
mov
xor
mov
movsb
out
pop
imull
pop
mov
out
mov
sbb
iret
mov
xchg
das
add
repnz
sbb
pop
in
adc
dec
insl
mov
push
jmp
dec
fstpt
les
mull
mov
jnp
push
xchg
mov
daa
lcall
ds
dec
addl
dec
mov
cmp
sahf
cli
cwtl
addr16
pop
inc
cmp
stos
cmpsb
gs
dec
icebp
test
test
aam
adc
adc
xchg
jbe
pop
dec
or
ljmp
in
adc
xor
jl
push
cmp
iret
sahf
js
insb
adc
imul
cmp
jmp
aam
push
insb
mov
mov
dec
or
outsl
or
loopne
cmc
pop
or
je
scas
jmp
xchg
sub
push
add
leave
dec
jmp
stos
adc
popa
nop
lds
inc
adc
sub
cmc
andb
cwtl
jb
aad
js
pop
test
xor
inc
test
pop
cmp
std
stos
cltd
mov
ljmp
mov
mov
enter
fdecstp
sub
adc
push
and
mov
sub
or
sarb
or
and
aas
in
add
inc
fucompp
cmpsl
jns
test
cmpsl
and
push
lahf
xchg
aam
fs
pop
xchg
sub
mov
mov
leave
test
sbb
add
push
pop
dec
dec
jge
rcr
xchg
les
ror
jnp
out
xor
or
fsts
lahf
push
fiaddl
cmp
add
hlt
mov
push
xor
sbb
fnstenv
adc
js
push
xchg
outsl
insb
faddl
add
shll
jnp
cld
scas
fsts
addb
mov
push
ss
dec
dec
rcrl
jmp
daa
inc
in
mov
imul
sbb
stos
mov
cmp
nop
fdivs
cmp
mov
adc
mov
jb
lods
clc
cmp
adc
and
ret
popa
rcr
sub
leave
aam
mov
in
cmp
mov
idiv
shll
insl
sahf
lea
xchg
ror
xor
mov
insl
mov
les
rolb
and
test
shrl
aas
psubq
push
add
xlat
lret
movsl
pusha
sbb
dec
clc
pop
test
or
or
mov
xchg
movsb
xchg
mov
call
iret
mov
add
dec
int
addr16
cmpsb
sbb
fcompl
lods
cmpsb
pextrw
cs
scas
mov
xor
mov
outsl
sbb
repnz
lods
pop
test
fldt
iret
sbb
xor
in
or
pop
sub
adc
rorl
jmp
fwait
mov
xchg
movsl
or
test
std
movsl
daa
pop
jns
push
fistpll
cmp
add
cld
popf
mov
pop
or
sub
sub
cltd
stc
lahf
scas
movsb
sahf
adc
xor
jle
mov
pop
jns
test
ret
or
cwtl
lds
popa
adc
adc
ret
pushf
add
lea
cs
scas
mov
mov
outsl
aaa
sub
imul
dec
jns
fisttpl
movl
xor
cwtl
loop
xchg
jb
mov
ds
fnstenv
jmp
insb
imul
leave
sub
xor
mov
iret
sbb
inc
imul
cmp
rolb
dec
and
inc
iret
pop
cwtl
push
jo
mov
lea
in
movb
mov
cwtl
inc
out
div
inc
cltd
push
cmp
ret
mov
and
mov
xchg
dec
and
pop
scas
je
cmp
cltd
xchg
push
iret
movsl
xchg
rcll
adc
or
mov
ss
and
jg
sbb
mov
mov
mov
jns
mov
push
push
dec
and
dec
cmpl
divb
pop
xchg
sahf
cmp
jge
in
sbb
imul
xchg
xchg
bound
pop
dec
dec
sahf
pop
out
dec
mov
adc
fwait
jle
outsb
std
xchg
jo
pop
and
int3
lea
sub
lea
mov
mov
add
mov
stos
jb
or
inc
movl
daa
inc
hlt
mov
jne
pop
popa
clc
pop
or
mov
and
push
pop
cwtl
push
jl
fnsave
pusha
add
roll
push
rcl
inc
fs
inc
gs
cli
mov
stc
jnp
xchg
add
adc
repnz
xchg
cmc
jp
inc
mov
shlb
sahf
ds
andl
xlat
xor
xchg
jo
xchg
add
xor
adc
xchg
xchg
mov
jne
or
aaa
dec
cwtl
sbbl
pop
sub
int
xor
and
xor
xlat
fdivrs
fnstcw
call
pop
js
pop
in
add
adc
addr16
dec
push
pop
cmp
push
cs
xor
jecxz
jb
or
adc
aam
ret
scas
mov
cmpsb
jno
cmpsb
pop
shlb
mov
aas
add
int
xor
pusha
notl
xorb
jb
mull
dec
and
ret
test
fdivr
inc
sub
inc
dec
dec
testb
mov
data16
cmp
arpl
pop
test
xor
adc
or
fisubs
pop
cmpsl
pop
test
lret
call
das
cmovl
lds
mov
lods
pop
pop
dec
lahf
call
pop
mov
cmp
dec
push
lods
repnz
push
pop
data16
inc
cmp
push
aas
push
jle
into
dec
mov
push
xor
inc
push
popa
adc
lcall
pop
xchg
aam
jns
jbe
xchg
movsb
xlat
or
int3
hlt
push
rorb
jecxz
jns
in
and
xor
mov
pop
jnp
and
xor
xchg
daa
mov
lods
xchg
pushf
xchg
test
inc
push
bound
mov
sahf
into
add
loopne
mov
mov
cmp
inc
push
stc
dec
add
adc
movsb
ja
jmp
pop
cli
out
xchg
lods
fldt
jecxz
add
int
mov
je
pop
out
adc
mov
jne
jne
ret
cmpsb
xchg
je
jae
fwait
push
ss
mov
dec
fnstenv
in
cmp
lods
pop
or
mov
mov
jmp
hlt
fcmovnu
je
sarb
add
out
in
mov
sarl
mov
fsubr
inc
jecxz
adc
mov
fists
test
sar
enter
mov
sub
pushf
dec
cltd
and
jno
pop
lcall
add
push
mov
dec
scas
xor
test
jge
pop
push
mov
sbb
mov
leave
add
adc
cmp
roll
orl
add
mov
or
pop
xor
ja
jns
add
mov
fsin
inc
lcall
in
inc
xlat
scas
dec
dec
xchg
js
adc
icebp
lea
pop
mov
loop
lods
inc
dec
jae
jecxz
loopne
pop
fdiv
sbb
push
dec
lods
cli
fbstp
jo
in
mov
lods
pop
mov
ror
dec
or
push
mov
js
rcrb
lock
cmp
ja
cmp
mov
cmp
test
push
scas
leave
in
lret
int
sub
dec
and
int
notl
rolb
mov
jmp
mov
pop
mov
movsb
fsubrl
lahf
inc
loope
cmpsl
sub
xlat
cmp
insb
add
inc
sub
jns
clc
ror
mov
jl
push
int3
in
push
aam
mov
loope
mov
out
cmpl
push
push
fmul
mov
jmp
dec
mov
insb
stos
cmp
adc
popa
add
rcrb
outsb
aam
sub
mov
pop
jmp
jo
fcoms
lret
movsb
xchg
mov
loop
leave
pop
je
pop
lret
jno
mov
xchg
rclb
sub
outsw
lea
bound
xchg
lea
ret
push
jno
dec
mov
cmpb
and
add
adc
push
outsb
fabs
xor
fdiv
outsb
mov
std
inc
fisubl
fistl
adc
loopne
and
movsl
ror
incb
cmpsl
adc
lret
xor
and
pop
cmp
cmpsb
imul
pop
ds
or
mov
add
mov
pop
pushf
test
stc
in
push
mov
aam
int
cmp
jmp
js
jae
scas
test
adc
mov
mov
mov
sub
gs
push
pop
push
jecxz
mov
push
hlt
lea
movsb
gs
mov
pushf
dec
mov
ljmp
std
daa
jae
test
jbe
scas
shrl
lcall
pop
mov
cmp
xor
notl
or
mov
icebp
pop
dec
ret
dec
push
loope
aaa
jmp
repnz
enter
lcall
dec
fwait
cmp
in
add
fildl
aas
or
inc
sahf
sbb
lods
add
scas
or
sub
test
dec
fists
xor
cmp
sbb
fdivs
clc
insb
test
push
cs
jb
imul
and
lds
cmp
mov
aaa
pop
icebp
test
lea
daa
sub
roll
es
xchg
test
fcompl
loope
push
cmc
sub
nop
into
shl
cmp
push
cmpsb
mov
add
ret
jecxz
in
or
push
sbb
es
cld
mov
popf
sbb
sub
les
mull
jno
test
dec
cld
out
shlb
fstpt
pop
cmp
jmp
test
push
xor
mov
daa
adc
outsb
scas
outsl
in
lock
rcll
cs
xchg
in
mov
je
std
out
out
fnstenv
or
or
andb
pop
loop
cmc
or
pop
pop
notb
add
std
inc
daa
xchg
testb
bound
pushf
xor
mov
idiv
push
ss
sahf
xor
lea
or
stos
cmp
mov
jbe
jecxz
inc
pop
mov
jmp
push
adc
arpl
iret
sub
fidivl
jl
das
cli
lret
inc
icebp
aad
std
test
mov
xchg
pop
mov
in
lret
popa
jo
lret
outsl
or
mov
mov
imul
popf
xor
int
or
jl
test
std
outsl
fsubs
pop
inc
mov
xchg
enter
test
ret
xchg
or
mov
je
out
xlat
pusha
mov
andb
int
cmp
gs
loop
inc
call
scas
sbb
leave
in
int3
cltd
mov
inc
addb
dec
push
push
ficompl
sbb
loop
jp
xor
out
rcl
lahf
jecxz
sub
aaa
cwtl
mov
cmp
push
lock
cs
int3
lock
mov
sbb
jbe
data16
or
out
cmpb
loopne
xlat
hlt
jg
mov
add
into
dec
fiaddl
add
shlb
imull
cmp
enter
xchg
aam
and
rcl
pop
pop
mov
mov
les
push
adcb
and
sarl
sbb
lret
ja
xchg
cmp
or
sti
pop
stos
jbe
add
xchg
pop
xor
pop
cmp
sbb
pop
fnstenv
mov
stc
es
test
fdivr
mov
add
pop
into
addr16
jecxz
xor
xor
jg
sbb
scas
int3
arpl
cmp
sub
push
ret
call
pop
pop
enter
jb
lds
pop
scas
sbb
add
xor
pop
mov
and
cmp
dec
sbb
imul
push
sbb
sub
notb
xor
out
push
inc
dec
in
jae
mov
jl
push
pop
push
lret
inc
mov
jg
mov
xor
mov
jmp
add
jg
data16
cli
jmp
subb
jmp
mov
lods
mov
stos
mov
adc
lds
sti
and
and
lock
sbb
sbb
jne
add
leave
pop
dec
mov
or
scas
outsl
pop
xor
fidivs
lcall
pop
sub
xchg
fistl
pop
aaa
push
adc
mov
ja
notb
cmpsl
shrl
lea
sarl
and
push
mov
cmc
sahf
push
mov
xor
mov
cmpsl
les
sbb
and
ss
ret
add
dec
cmp
movsl
jp
sbb
rolb
sbb
pop
sub
fcmovu
sbb
jp
test
jb
ljmp
pop
add
scas
bound
push
mov
xchg
test
push
mov
ljmp
negl
mov
in
cmp
enter
jle
int3
inc
jb
mov
sbb
lds
mov
lret
push
je
pop
js
mov
add
mov
add
cwtl
mov
js
aaa
sub
pop
mov
xchg
das
jge
insl
push
mov
adc
xor
jno
xor
pop
mov
dec
mov
js
xor
jl
mov
imul
mov
sbb
mov
sarb
cmc
adc
mov
fisubrs
mov
scas
fimuls
ljmp
and
test
or
cld
pop
jmp
sub
cmpsl
and
or
pop
bound
sbb
xor
out
mov
add
stos
jmp
mov
add
mov
sub
mov
loop
dec
setnp
dec
in
std
mov
adc
sub
xchg
and
mov
cld
and
cmp
mov
adc
add
mov
xlat
pop
clc
loope
gs
mov
dec
xor
dec
sub
mov
lcall
xor
aaa
sbb
lock
fists
cmp
orl
outsb
inc
sbb
rolb
cmp
hlt
or
dec
cltd
push
adc
cmp
int
imul
adc
pop
xchg
les
arpl
enter
mov
or
mov
xor
andl
popa
or
mov
filds
insl
in
dec
jl
xchg
insl
inc
xchg
lods
lea
inc
mov
sbb
cmp
faddl
adc
mov
adc
mov
or
mov
add
sarl
mov
pop
inc
mov
outsl
sub
test
add
add
add
mov
xchg
dec
das
dec
jg
xor
out
dec
dec
rorl
or
into
lods
and
enter
xor
rcrb
fdivs
scas
je
lret
insb
in
add
nop
inc
ret
addr16
add
xor
lea
sub
int3
pushl
aas
jo
scas
popa
es
cli
jb
mov
xlat
lock
mov
jl
sbb
repz
das
inc
mov
jb
fists
das
enter
movsb
cmp
fs
out
stos
lret
mov
gs
push
sarl
in
rcrb
inc
stos
movsb
and
je
mov
dec
stos
xchg
xchg
loope
gs
or
xchg
xchg
rorb
or
cmpsb
loop
push
movsb
adcb
mov
and
test
mov
ss
lret
addr16
mov
fcmovb
mov
out
mov
jmp
mov
xchg
push
sub
xor
push
mov
mov
pop
mov
pop
add
je
or
dec
fiaddl
jg
enter
push
xchg
loop
and
divb
sbb
xchg
add
inc
ds
push
sbb
aaa
and
mov
add
sbb
adc
cmp
xchg
inc
jle
ss
adc
push
xchg
das
cmpsb
mov
cmp
xchg
retw
xchg
pushf
mov
inc
inc
sbb
mov
adc
push
jge
gs
clc
pop
mov
or
mov
mov
call
addr16
add
jecxz
stos
mov
jle
pushf
cwtl
add
out
lods
push
popl
sbb
inc
xor
lods
pop
lret
arpl
test
mov
adc
adc
dec
stc
pop
cmp
xchg
fistl
fsubrp
xchg
aas
xor
lcall
bound
subl
xchg
inc
jle
fidivl
push
and
movaps
aam
jmp
lret
mov
mov
push
pusha
icebp
push
outsb
lds
xor
push
mov
jnp
and
sub
fprem1
fs
mov
iret
jb
push
jecxz
orb
mov
xor
lea
jle
hlt
mov
cmp
aas
mov
in
arpl
mov
jle
out
and
jo
adc
sbb
sub
xor
int3
das
mov
rorl
add
clc
push
adc
mov
movsl
sbb
loop
jp
mov
and
hlt
cmpsb
cli
and
inc
popa
test
mov
rorl
cmp
movsl
das
fnsave
sar
ljmp
mov
or
test
adcl
gs
int
es
scas
push
in
xorl
sub
insb
xchg
das
mov
lahf
jmp
mov
cmpsb
xchg
dec
pusha
sub
mov
nop
pushf
jmp
pop
out
lcall
push
push
mov
dec
sub
fwait
das
imul
lds
mov
rolb
push
or
sub
pop
adc
in
xchg
mov
stos
inc
daa
fisttps
dec
rclb
imul
dec
outsb
sbb
sub
je
in
adc
ljmp
insb
clc
ss
jne
in
int
mov
adc
clc
bound
inc
lea
out
loop
out
jnp
add
jno
lods
adc
jge
scas
and
insb
sub
mov
cli
jno
mov
dec
ss
mov
jecxz
scas
test
mov
push
push
mov
sub
nop
test
aaa
push
inc
arpl
push
jae
xor
jmp
rorb
and
nop
cmp
roll
int3
fmul
leave
imul
mov
add
push
int3
stc
xlat
jmp
lock
pop
ja
or
pop
jmp
xor
jbe
popf
xor
aas
push
mov
jns
mov
pop
adc
stc
and
jns
push
mov
mov
repz
push
daa
jns
pop
xchg
sbb
xchg
lds
ljmp
or
out
or
dec
pop
xchg
cmpsb
inc
mov
cli
sub
and
stc
je
xchg
imul
rorl
sub
adc
sub
mov
mov
cmp
cmp
les
je
jne
pushw
out
sbb
cld
mov
bnd
sbb
hlt
dec
inc
aad
fs
test
cmp
fimull
adc
cli
cmpsl
shrl
lea
xor
dec
in
xchg
mov
mov
inc
popf
test
jp
stc
xchg
jge
iret
fdivrp
mov
in
add
and
xor
out
call
dec
xorb
jle
pop
out
test
cmc
js
push
cmpsl
push
loope
cmp
inc
pusha
xor
xchg
mov
sub
inc
dec
enter
std
jns
and
fdiv
fildl
dec
adc
xor
pop
xchg
push
je,pn
cmpsb
xchg
in
ret
or
cmc
imul
lock
xchg
mov
clc
sbb
inc
decl
pop
ret
jbe
or
mov
cmp
leave
les
imul
das
jle
mov
call
mov
in
ss
aaa
sahf
test
std
adc
pushf
aad
xor
adc
inc
jg
inc
cmp
adc
clc
xchg
cli
lods
pop
std
pop
loop
fldcw
mov
xchg
popf
and
inc
inc
push
shufps
pop
or
dec
fcomps
adc
cmp
mov
in
jae
scas
add
fstpl
sub
je
or
jmp
mov
push
mov
jl
test
add
inc
popa
test
pop
data16
pop
inc
leave
mov
inc
adc
dec
loop
loop
repnz
pop
lock
inc
jbe
cmp
cmc
mov
shrb
outsb
ljmp
mov
dec
call
and
movsb
mov
ss
mov
xchg
pop
cmpsl
add
int3
bound
jmp
mov
pop
inc
push
in
mov
fists
sub
js
push
or
cs
iret
das
mov
std
ret
add
and
fcmovbe
xchg
lea
jg
dec
jle
sub
enter
aam
scas
sbb
mov
mulps
testb
stos
je
sti
adc
cmpsl
xchg
divb
push
lock
add
int3
push
xor
cmp
dec
test
push
lods
jbe
fwait
xor
inc
and
mov
pop
sahf
sub
outsl
xchg
enter
icebp
push
or
leave
nop
mov
and
cmpsl
dec
gs
cmp
and
or
lret
dec
lahf
scas
xor
inc
jge
add
adc
out
or
rcrl
xor
sti
test
fwait
or
mov
into
ljmp
cmp
ret
adc
pop
sbb
jge
movsl
test
aaa
and
mov
pop
insb
mov
add
mov
sbb
inc
jno
shlb
push
or
lock
clc
jp
push
pop
es
js
enter
test
out
cltd
imul
outsb
cmp
addr16
xchg
into
testl
mov
or
stc
sub
ja
mov
jno
xchg
sub
cmp
into
push
nop
std
rorl
out
or
lods
push
jl
mov
ss
add
cmp
aam
push
adc
push
stc
fildll
push
inc
in
test
fidivrl
xlat
adc
xor
incl
or
outsl
push
and
out
dec
imul
call
sbb
clc
ficoms
ljmp
dec
fnstenv
jecxz
arpl
xchg
lock
or
mov
fwait
xor
ret
lcall
test
sarl
xor
add
dec
inc
xor
mov
jnp
sbb
icebp
sub
inc
dec
mov
je
push
push
cmpsl
add
subb
cmp
insb
jl
les
adc
scas
and
cmp
mov
loop
adc
pop
push
lods
dec
lret
push
pop
loope
aad
fstl
mov
das
mov
outsb
push
xor
sbb
sarl
add
test
mov
xor
and
xchg
xchg
sub
sbb
pop
mov
and
jae
mov
xchg
fcoms
mov
inc
loop
testl
iret
imul
dec
push
sub
mov
leave
pop
sbb
popa
roll
sbb
pop
jmp
js
push
jns
loop
sarb
pop
fnsave
add
push
xchg
arpl
jmp
addl
int
push
dec
stc
and
sbb
faddl
mov
jnp
insl
movsl
jne
hlt
jge
test
shrl
push
mov
aaa
jbe
addr16
mov
mov
mov
ljmp
outsl
loopne
dec
pop
sub
nop
cli
dec
orb
mov
stos
pop
and
addl
push
or
jecxz
pop
mov
mov
push
xor
lret
mov
inc
sbb
lret
add
fwait
mov
mov
xlat
or
add
xchg
cmpsl
test
pop
dec
pop
ljmp
and
ja,pn
arpl
div
adc
fstps
and
jmp
imull
inc
mov
sahf
sbb
in
ficoms
dec
loope
jnp
add
push
addr16
out
push
xor
test
ret
xorl
loop
push
mov
mov
push
insb
add
jecxz
popa
ds
sub
and
jge
xlat
push
lret
stos
arpl
addr16
scas
aas
sahf
cltd
addr16
push
add
mov
cmp
sbb
inc
bound
test
int
mov
and
icebp
out
movsl
dec
and
outsb
mov
subb
fs
lret
mov
push
add
bound
loopne
mov
xchg
cmp
jno
jp
test
sbb
inc
cwtl
fsubrs
mov
js
xchg
push
cli
sbb
int
movsb
dec
loop
mov
stos
loopne
push
push
fists
and
jge
mov
mov
sbb
movsb
dec
xlat
inc
or
jo
fcom
dec
lret
sbb
mov
mov
leave
ljmp
mul
lret
out
sbb
cli
push
lret
inc
push
filds
ficomps
pop
push
gs
lock
mov
xchg
mov
pop
and
or
mov
scas
pushf
inc
cmp
mov
popa
xchg
cwtl
ds
jbe
repz
enter
sar
outsl
and
rorb
rcrb
ljmp
cli
mov
cmp
outsl
rcrl
push
and
dec
mov
push
std
inc
push
sarb
repnz
mov
lock
mov
pop
adc
mov
lret
in
test
fcompl
ret
cld
arpl
imul
push
pop
icebp
mov
js
std
push
jbe
ss
sub
imul
jle
jne
and
mov
cltd
pop
stos
mov
and
inc
or
outsl
out
cmp
incl
and
add
loopne,pn
stc
test
cmp
js
xchg
mov
inc
jae
repz
and
mov
xchg
xchg
aaa
jmp
mov
in
sub
sbb
push
dec
mov
push
pop
clc
sub
out
cmp
cmp
push
out
jp
neg
push
orl
lcall
add
add
jo
imul
fadd
cmp
in
lock
xchg
out
mov
and
inc
rcrl
icebp
mov
orb
xor
or
fiadds
scas
cmp
test
cli
pop
xor
jmp
lcall
pop
mov
das
int
jg
and
in
sbb
in
int3
int
shlb
shrl
out
jb
aad
add
cmp
or
or
jle
sarl
jb
and
pop
std
cmpsb
inc
iret
push
jmp
or
sub
and
sbbb
rcr
dec
ret
dec
xor
andb
xchg
daa
repnz
aam
cltd
ja
cmpsl
repnz
mov
inc
mov
ljmp
cmp
int3
jmp
jnp
add
rcr
xlat
movsb
dec
adc
xchg
lea
push
inc
pop
adc
imul
popf
data16
sub
jo
mov
mov
jns
dec
addr16
dec
adc
add
adc
mov
sub
pop
mov
imul
pop
fs
push
shrl
inc
sub
repz
mov
dec
sbb
lcall
dec
outsb
cmpsb
add
ret
xchg
xchg
insl
xor
jnp
adc
loopne
jne
call
or
imul
adc
cmp
jmp
mov
mov
loop
mov
adc
sub
aaa
push
stos
jge
xchg
iret
call
lret
jecxz
mov
xor
pop
or
rcrb
enter
cmp
inc
inc
add
mov
push
loope
xor
int3
push
sbb
xor
daa
loopne
xchg
lods
dec
xor
lea
xor
jns
mov
rcrb
insl
mov
mov
cmp
add
popf
clc
mov
mov
jmp
push
adc
dec
lods
xacquire
xchg
xchg
lock
mov
out
xchg
and
inc
andb
popa
pushf
mov
jecxz
adc
clc
iret
loop
fsubs
ret
xchg
fstps
ljmp
out
sub
test
pop
sarl
std
push
or
sbb
xchg
cmp
pop
gs
les
sub
dec
fdivrs
fidivrs
imul
dec
sbb
add
leave
aad
dec
mov
lret
xor
add
dec
ja
aam
mov
xor
and
ja
pop
cld
mov
xchg
and
mov
xlat
cmp
mov
call
repnz
mov
push
xchg
sbb
sahf
or
addb
xor
scas
jge
loope
cmc
imul
xchg
jne
or
scas
cwtl
jl
or
andb
jno
and
inc
dec
dec
int3
dec
push
jmp
inc
stc
and
jnp
adcl
test
xorl
inc
inc
pop
movsb
insb
pop
xchg
rcll
mov
jg
iret
or
fsubs
sbb
ss
inc
cltd
shl
loope
je
stc
in
jecxz
lahf
lds
jo
adc
or
push
add
xchg
or
mov
int3
leave
popf
mov
fcmovnbe
stc
add
inc
and
jo
push
inc
iret
std
out
or
into
test
push
sub
cmp
ret
jg
xchg
cmc
pop
lret
jl
pop
scas
sbbb
dec
mov
lret
mov
dec
aad
add
insb
nop
jo
imul
mull
imul
push
ret
in
aas
leave
sub
movsb
cmpsl
lea
popa
jns
or
dec
ret
inc
cmp
jmp
push
lcall
test
hlt
popf
out
push
xor
mov
xchg
dec
pop
xchg
jle
pop
adc
xor
nop
push
enter
mov
fwait
mov
sub
lock
push
cmpsl
and
das
cld
inc
dec
stos
je
int3
sub
cmp
ss
repnz
and
fs
sbb
fwait
les
cmpsb
dec
rclb
pop
test
pusha
and
aad
sub
pushf
jmp
movsl
jmp
push
and
xchg
fcmovne
mov
jne
mov
leave
test
ret
mov
popl
jl
adc
mov
cmpb
xor
test
sub
std
fs
enterw
inc
and
sub
movsb
pop
pop
add
sahf
add
push
movsl
xor
and
sbb
cs
cld
cwtl
dec
dec
mov
cwtl
cwtl
iret
pusha
out
or
stos
aas
mov
xchg
xor
and
push
ret
jno
jno
jmp
orb
and
or
pop
cli
in
ret
int
pop
repnz
jbe
lock
jge
pusha
mov
add
mov
je
mov
jnp
nop
mov
lea
dec
sbb
test
mov
nop
mov
mov
xchg
jae
into
ret
rcr
jbe
sub
xchg
and
mov
or
clc
stos
into
and
ds
pop
lods
mov
mov
xor
out
orl
push
aad
out
add
sahf
or
je
jmp
insb
repnz
inc
mov
mov
inc
pop
adc
jmp
adc
sbb
and
sbb
insl
test
cmpsl
sbb
jecxz
shlb
dec
fistps
bound
icebp
test
mov
arpl
in
out
pusha
push
faddl
add
mov
dec
jno
pop
repnz
and
test
mov
test
in
and
jg
xchg
sbb
in
or
sbb
iret
gs
lods
lea
mov
push
inc
xor
cmp
mov
mov
movsl
fstl
imul
mov
inc
inc
mov
lea
test
xor
xchg
or
mov
outsl
jg
adc
dec
rcl
pusha
pusha
mov
aad
dec
in
lea
inc
pop
int3
push
loope
cs
pop
lcall
leave
nop
mov
sub
push
jns
shl
inc
push
mov
popa
inc
insl
rorb
jno
in
lcall
pop
je
push
jecxz
xchg
outsb
int
and
lcall
sub
cmpsb
mov
stc
jmp
jne
out
pop
xchg
jp
ljmp
fcmovb
pop
fs
test
xor
scas
mov
ret
push
iret
inc
mov
pop
or
cmpsl
int
pop
add
sahf
cmp
int
mov
test
adc
lods
xchg
mov
mov
adc
mov
xor
loopne
data16
mov
sub
mov
imul
or
and
push
stos
icebp
gs
jge
mov
fldl2e
insb
int
xor
cmp
and
fiadds
and
pop
sub
popf
fs
dec
lock
xchg
adc
sbb
cmpb
and
pop
jl
jecxz
xchg
pop
int3
xor
jg
mov
int3
mov
scas
push
add
or
sti
hlt
loop
repnz
shrb
dec
xor
push
fs
das
pushl
test
xchg
jp
or
cmpsl
sub
or
ret
adc
aad
popa
xchg
into
shrl
push
add
insb
mov
add
nop
inc
inc
ret
jb
cmpsb
mov
cmc
pop
jb
test
aad
stos
dec
scas
in
xchg
rorb
mov
mov
mov
stos
lds
mov
push
lcall
pop
movsl
test
sbb
fwait
push
ljmp
scas
mov
adc
test
adc
loope
dec
push
add
inc
or
push
testb
dec
mov
mov
lea
push
cmp
out
imul
dec
xchg
addr16
push
hlt
es
mov
out
lcall
push
push
outsb
lret
repnz
mov
xlat
sub
cltd
int
mov
xchg
cli
jne
mov
cmpl
jmp
inc
jnp
sti
cmp
loop
and
mov
and
adc
ror
inc
adc
andb
add
iret
sub
arpl
pop
test
sahf
cmp
xchg
xor
mov
int3
mov
das
leave
std
and
xor
jnp
pop
mov
mov
mov
inc
mov
pop
xlat
insb
mov
xchg
inc
loopne
aas
out
out
lods
push
shrl
faddl
out
stos
or
mov
lds
cmp
push
test
xchg
fwait
inc
add
adc
pop
sub
mov
repnz
sub
call
arpl
movsb
test
sub
cld
mov
adc
cmp
fs
mov
and
sub
ljmp
mov
jge
cmpsl
dec
mov
addb
cmpsl
inc
outsb
mov
jmp
divb
int
pop
dec
rolb
cmp
lods
inc
jmp
enter
aad
out
add
dec
add
mov
insl
pop
push
iret
sbb
enter
jno
xlat
sub
sub
push
loope
popf
fnstcw
mov
and
addb
int3
in
popa
in
es
cld
shrb
vpavgw
shl
in
push
sub
popf
and
adc
jae
popa
lret
dec
mov
sub
xor
cmp
test
add
stos
mov
adc
stos
adc
mov
mov
dec
loop
sub
movsb
sti
cmp
out
imull
sub
repnz
push
aas
jecxz
int3
lock
mov
or
add
sbb
mov
shr
xchg
xor
insb
sub
mov
imul
shlb
imul
xchg
retw
je
xchg
adc
sti
outsb
pop
roll
dec
or
stc
pushf
lock
add
out
jle
gs
push
cld
sbb
xor
imul
lds
sbb
sub
dec
fmull
push
mov
mov
and
lods
negl
add
das
jmp
sbb
cmpsl
pop
shr
scas
mov
outsl
ret
andb
push
jae
push
stos
jl
push
push
push
pop
mov
insl
cltd
test
mov
mov
mov
mov
inc
imul
int3
cmp
dec
sub
fildl
popf
mov
mov
push
jp
repz
aam
jb
xor
sbb
lret
inc
pop
insb
mull
sti
push
xlat
mov
ficoms
test
add
mov
inc
push
xor
add
jecxz
cmp
adc
jge
das
xor
push
shrb
ret
inc
scas
test
lock
jle
mov
pop
jb
inc
ret
mov
shll
mov
push
aam
sbb
movsb
int
call
lods
cs
sbb
xchg
iret
pop
xor
shlb
lods
add
xchg
pop
leave
bound
and
push
inc
push
lahf
mov
lds
add
imul
sbb
xchg
cmp
gs
xor
pop
fisubs
nop
mov
jns
enter
popf
cltd
xor
movsl
ja
push
jne
outsb
xchg
push
xchg
jno
inc
and
loope
insl
sbb
pop
outsb
fimuls
dec
push
movsl
add
in
ds
xor
mov
jb
pop
inc
adc
lods
divps
mov
inc
pop
mov
dec
test
into
lds
push
xchg
mov
or
out
aas
mov
ret
ds
cmp
jecxz
enter
mov
je
repz
rol
imul
data16
sub
loopne
sbb
push
add
scas
xor
ljmp
stos
dec
sub
lret
mov
addr16
mov
insl
pop
je
dec
fsubrs
aam
aad
sub
inc
mov
jl
push
pop
pushf
test
fildll
xchg
pop
push
lock
les
push
cmp
lret
and
jno
imul
mov
lds
in
mov
inc
mov
scas
mov
notb
pop
test
jnp
sbb
fsubrl
orl
adc
in
lea
inc
lea
mov
imul
push
jb
dec
dec
cmp
mov
cmp
aas
dec
adc
loop
or
jmp
rcr
xor
into
cmp
mov
push
cmp
sbb
mov
jg
mov
xor
sahf
out
inc
sbb
xchg
push
aad
xor
push
add
movl
mov
fimull
or
xlat
push
shrl
and
pop
rcrl
movsb
icebp
inc
pusha
ss
fsubl
hlt
popf
faddl
push
sub
std
adc
mov
jno
sub
ret
push
xchg
add
or
sbb
fdiv
shll
aam
pushf
mov
aaa
cmpsb
icebp
popf
hlt
int3
fmuls
leave
popa
js
loopne
dec
push
xor
xor
add
in
push
test
repz
outsb
fisubs
scas
imul
cwtl
sbb
test
push
out
std
xchg
movhps
mov
or
mov
push
mov
xor
jo
mov
add
in
jl
xchg
test
out
pop
mov
in
mov
aam
in
out
xor
inc
cmp
or
adcb
or
mov
sbb
les
fidivs
xchg
mov
jb
arpl
cmp
imul
ret
sbb
outsl
sbb
cmpsl
out
sub
xor
inc
xlat
add
shl
xor
xchg
adc
sti
cmp
int
mov
push
and
dec
js
insl
ret
pusha
add
mov
xor
sahf
mov
les
adc
popa
pop
fadds
pop
je
or
adc
add
push
cmp
loope
jp
jmp
enter
leave
dec
lret
and
pop
inc
mov
jg
popf
stos
push
cmp
dec
stos
sub
fwait
ljmp
pop
daa
scas
xor
imul
in
fisubrl
lcall
ffree
xor
loope
std
and
loope
push
xor
fisttpll
je
add
stos
sub
addr16
or
lods
inc
pop
negl
push
cmp
push
icebp
arpl
mov
and
fld
dec
dec
popf
imul
sub
pop
mov
pusha
movsb
es
jb
std
cs
gs
shl
cmp
dec
fwait
addl
in
sahf
dec
and
mov
movsb
mov
add
lret
mov
bnd
int
add
mov
out
dec
dec
mov
lcall
in
mov
mov
mov
sub
loopne
lcall
cmpb
push
jl
mov
inc
inc
aas
cmpsb
jo
xchg
loop
in
pushl
sub
push
repnz
daa
aaa
dec
or
jp
cs
xor
mov
out
mov
push
fistps
xchg
or
outsl
rorb
loopne
mov
xor
in
and
or
mov
loop
int
ret
fidivl
bnd
push
call
mov
dec
sbb
jle
stos
mov
aam
adc
mov
adc
sbb
loopne
insl
rclb
clc
and
cltd
jge
push
lock
aad
mov
add
xor
shrb
mov
xchg
enter
adc
ret
push
stos
dec
push
lahf
aad
and
gs
pop
mov
test
mov
mulb
mov
pop
cwtl
mov
testl
adc
sub
jge
jae
push
cmp
and
pop
push
adc
lahf
or
aam
fwait
loop
test
xchg
mov
push
cli
adc
mov
mov
sub
test
and
arpl
cmpb
es
ret
ljmp
lcall
jo
add
stc
sub
mov
sbb
nop
orl
data16
pop
jbe
stos
xor
sub
ret
repz
push
mov
fcompl
mov
inc
sub
and
mov
push
cmp
mov
addl
call
js
out
push
dec
in
add
hlt
bound
push
out
icebp
divl
test
dec
adc
dec
lahf
add
pusha
pop
repnz
out
out
into
aas
out
dec
daa
jne
dec
hlt
dec
cltd
pop
lret
lahf
or
pop
xchg
call
mov
daa
popf
std
fidivrs
movsb
pushf
sbb
aam
sub
add
scas
subb
pop
pop
popa
loope
aad
rsm
daa
jle
sub
out
mov
lds
sub
mov
xchg
xor
loope
aad
pop
mov
push
sbb
js
outsb
mov
icebp
jle
push
lret
xchg
pop
pop
mov
sarb
push
dec
push
xor
movsl
mov
int3
ss
imul
sbb
mov
dec
pop
ficoml
add
shlb
or
call
inc
outsb
icebp
je
clc
push
mov
mov
leave
out
mov
xchg
pop
cld
xor
inc
daa
mov
dec
cltd
jmp
dec
mov
movsb
add
fstl
adcb
out
mov
mov
add
dec
clc
cld
push
lods
shll
sbb
fldenv
mov
push
mov
push
rolb
scas
unpcklps
mov
mov
sub
mov
jno
xchg
test
sub
pop
sahf
out
jg
std
aas
cmp
sub
test
push
pop
sbb
push
add
mov
xchg
jo
data16
pop
in
jo
out
xchg
mov
addr16
or
cmp
icebp
fstpt
cmp
lcall
mov
inc
sbb
and
lods
cld
jle
jge
hlt
adc
sbb
fstpl
mov
ss
in
push
xchg
and
setb
mov
dec
cmp
pop
pop
dec
mov
test
inc
loop
push
push
mov
mov
out
or
xor
pop
mov
notl
push
enter
inc
mov
cmp
gs
xchg
push
jo
cmpsb
enter
xorb
mov
inc
shll
cmpsb
pusha
xor
ficomps
sbb
add
add
mov
ds
rorl
jp
adc
jg
lock
mov
les
xchg
pop
sbb
jl
jmp
push
xchg
add
add
test
testb
inc
jmp
pop
or
in
lahf
adc
lahf
add
fs
lods
xor
je
xchg
cwtl
jno
subl
xchg
add
movsb
gs
cmpsb
js
lods
add
cltd
xchg
sbb
test
sbb
rorl
mov
mov
push
inc
mov
push
outsl
repz
mov
rcl
inc
lcall
adc
daa
or
pop
xor
das
insl
xlat
sti
rclb
mov
mov
or
jg
dec
lahf
mov
out
cltd
into
jmp
pop
and
rclb
repz
jp
sbb
xchg
addb
mov
ds
mov
adc
fildll
and
jp
test
xchg
xchg
iret
push
loopne
hlt
adc
xchg
sbb
cltd
add
das
or
lds
add
pop
test
movsl
push
movsb
aam
adc
mov
cmp
fs
lock
scas
push
movl
xor
sub
xchg
mov
cmp
or
and
enter
rcrl
cmc
neg
sub
jge
fidivl
std
mov
xor
mov
sub
popa
out
mov
sub
iret
in
cmpsb
jno
jns
and
mov
outsl
sbb
sbb
lea
jecxz
sbb
xchg
push
lods
das
cli
fmull
scas
mov
outsb
push
jp
mov
adc
mov
test
mov
in
push
cltd
sbb
test
mov
mov
jae
movsb
lds
repz
xchg
xor
in
sbb
dec
test
xor
idivb
sub
in
jmp
cmp
stos
cmp
or
aad
jp
es
cmp
cwtl
jg
mov
sub
cmp
ss
inc
pop
inc
xor
mov
xadd
push
xlat
or
push
inc
into
pusha
sbb
mov
mov
jl
cmp
and
jp
adc
fcmove
lret
insb
xor
xor
in
popa
or
sbb
add
push
push
mov
xchg
mov
jecxz
jmp
or
movsl
or
ds
cwtl
inc
sub
mov
shll
pop
cwtl
dec
jg
cmpb
popa
es
sub
popf
mov
clc
repz
ret
cmp
insl
mul
stc
pop
in
lcall
jge
aad
outsb
cltd
inc
or
mov
push
cmp
repnz
in
and
xchg
out
stos
clc
pop
cltd
mov
push
aad
imul
lret
imul
gs
subb
fstps
inc
lret
add
scas
jge
movsl
xor
nop
mov
lea
mov
push
pop
dec
in
pop
sbb
adc
lahf
or
push
or
cmpsb
adc
sti
mov
movd
jge
mov
and
cwtl
mov
mov
sbb
xchg
into
int3
push
cmp
push
mov
stos
negl
pop
insb
popf
dec
mov
iret
push
fcoml
int3
push
sbbl
jecxz
outsl
lcall
test
test
insl
xchg
push
sub
cmp
lcall
jg
es
inc
xorb
or
cmp
mov
lcall
xchg
ja
jp
jle
popf
rorb
int
cmp
inc
jecxz
scas
sbb
pop
repnz
leave
cmp
mov
ret
test
xchg
push
push
mov
jnp
mov
fs
into
sarl
gs
pop
loopne
sahf
mov
aad
xchg
in
adc
or
aas
jge,pt
mov
aad
jns
imul
and
bound
sbb
sbb
icebp
or
jge
fsubp
test
cmp
jnp
sub
rorl
hlt
cmpb
xchg
lods
movsl
adc
xchg
inc
or
fcoms
loope
cmc
cmp
mov
xchg
stc
fst
je
in
jnp
jge
lea
mov
mov
ja
out
pop
aad
mov
and
xor
imul
sbb
push
stos
pop
dec
pusha
push
jns
pop
xchg
inc
push
push
sbb
and
adc
add
xchg
add
imul
jne
orl
enter
cmc
or
sbb
push
sbb
jg
out
mov
mov
je
ja
jle
and
enter
dec
icebp
stc
and
inc
xor
cmp
mov
enter
xchg
inc
jmp
push
dec
jne
inc
jl
cmpsb
fld
lods
jo
loopne
fs
leave
mov
jae
add
mov
mov
push
add
push
adc
adc
mov
cltd
mov
mov
inc
fnstsw
cmc
dec
dec
cmpl
pop
or
fs
ss
nop
dec
std
push
sbb
and
xchg
and
lahf
or
pop
xor
mov
out
sbb
push
xchg
dec
adc
adc
daa
fimull
mov
das
cmp
stos
mov
test
stos
incb
ss
jo
mov
mov
int3
bound
jp
inc
scas
gs
adc
mov
dec
lcall
inc
or
sahf
das
outsl
or
xor
mov
and
movsl
leave
mov
dec
fs
int3
arpl
dec
notb
xor
mov
icebp
cwtl
xchg
mov
loopne,pn
and
mov
xor
xchg
into
jb
and
mov
fmull
push
or
or
xor
dec
sub
mov
jnp
lock
in
aas
push
in
je
push
mov
dec
mov
loop
mov
mov
fs
lret
xchg
iret
gs
push
jnp
jbe
or
xchg
add
out
sub
das
jge
mov
loope
cmc
call
dec
sbb
scas
out
xor
xchg
leave
cmp
mov
xchg
es
hlt
cs
sbb
fidivrl
push
dec
jecxz
pop
mov
hlt
mov
cli
and
and
and
das
inc
cltd
ds
inc
jp
pop
inc
fsubr
adc
ltr
nop
xchg
pop
repnz
pop
inc
mov
push
adc
adc
push
inc
andb
adc
lahf
dec
call
mov
mov
xor
xchg
cmp
jne
mulps
icebp
push
add
cli
jle
push
add
outsl
xchg
xor
lcall
fisubl
cli
incb
add
shl
aaa
add
ret
mov
lret
inc
int3
inc
pop
and
aaa
dec
loop
mov
stos
adc
pop
jno
mov
pop
es
jbe
loopne
rolb
fisttpll
out
in
sbb
mov
mov
add
fists
sub
jb
cmpxchg
adc
in
push
loope
lret
mov
cmp
push
mov
insl
fnstsw
dec
adc
adc
fimuls
xchg
jle,pt
add
cmpsl
imul
sbb
mov
push
pop
cmp
push
lods
pop
or
cmp
mov
lretw
stos
outsb
cmp
fbld
rclb
xchg
cs
pop
sub
add
pop
into
cmpsl
mull
jge
inc
lahf
aad
jb
xchg
cmp
es
popf
adc
shl
push
mov
xchg
sbb
and
pop
pop
aas
push
shll
out
lahf
mov
lods
or
imul
jne
scas
pop
repnz
insl
inc
and
pop
shll
adc
or
aas
notb
lret
add
out
xlat
mov
mov
iret
mov
pop
mov
cmp
test
jle
fwait
into
cltd
xor
aas
add
mov
aad
inc
dec
sbb
out
in
test
iret
int3
jo
and
sub
je
test
test
fstps
inc
or
ja
adc
inc
jb
fcoms
jb
xlat
bnd
in
lcall
insl
call
lahf
je
sti
pop
pop
push
sahf
and
sub
fs
in
repz
mov
fcomp
pop
or
and
stos
fdivr
inc
push
les
xor
rcl
and
pop
lret
iret
rcrl
mov
movsl
mov
xorl
push
adc
dec
in
sub
xchg
push
or
cli
setns
mov
and
jmp
inc
cmpsl
daa
mov
jmp
es
jnp
hlt
sub
mov
add
dec
aad
mov
insb
xchg
jo
popf
out
mov
push
jo
and
add
adc
fnstenv
pop
popf
lcall
mov
movsl
je
fbld
adc
sbb
adc
and
and
aam
fdivl
data16
sbb
sarb
addr16
jg
xchg
loope
jmp
les
jbe
popf
sahf
adc
pushf
add
mov
mov
aas
outsl
mov
sub
and
jno
clc
sub
dec
add
and
ret
insl
push
xchg
into
inc
push
mov
and
mul
sbb
test
scas
push
pop
mov
imul
mov
adc
loope
dec
sub
mov
sub
mov
movsb
inc
ds
pop
or
dec
mov
cltd
ret
inc
or
xlat
jb
sbb
fs
aam
xchg
jo
xchg
cmp
inc
mov
ret
xchg
cmc
jg
or
mov
fwait
lcall
mov
lods
cltd
mov
lcall
dec
push
pop
and
sti
mul
mov
sbb
jb
mov
arpl
sbb
adc
sbb
sub
lahf
test
out
mov
add
sbb
xchg
jl
cmpsb
and
pop
movsl
leave
je
fisubs
cmp
xchg
push
sbb
test
sarl
push
cmp
notb
divb
jp
xor
mov
stos
or
sub
loopne
cmpb
and
stos
test
aam
loopne
fwait
test
fcmove
jns
fcoml
jg
mov
cwtl
stos
aad
jns
inc
cmp
icebp
les
lea
jns
pop
pop
sbb
int3
leave
dec
movsl
ljmp
sub
aas
jmp
jnp
adc
adc
sbb
setne
pop
out
mov
scas
dec
xchg
in
cli
jmp
rclb
mov
adc
xchg
test
xchg
adc
add
add
test
xchg
outsl
sbb
pop
dec
pop
push
stos
stc
loop
aas
or
sub
pop
test
fprem
sub
fsubrp
cmp
mov
mov
cmpsl
ds
adcl
in
and
lock
jp
pop
cmp
aad
sbb
mov
cwtl
dec
out
outsl
adc
in
adc
int3
xlat
lds
test
jmp
push
and
pushl
shlb
fildl
mov
push
push
sbb
push
xchg
in
sbb
mov
popf
es
js
arpl
gs
js
insb
mov
testb
jae
add
cmp
mov
mov
add
mov
mov
sbb
jb
push
das
xchg
jnp
jno
and
cmp
cld
sbb
outsl
adc
fdivs
leave
insl
movsb
ret
lock
popa
dec
fisttpll
cwtl
fstpt
test
leave
xor
xchg
dec
xlat
bound
pop
dec
add
jle
and
fimull
and
adc
and
add
jbe
incb
jno
push
pop
or
arpl
sbb
lock
xchg
add
pushf
insb
cmp
sbb
movsl
sub
out
je
push
ficoms
mov
les
mov
arpl
iret
jns
clc
and
push
jmp
adc
inc
push
sti
or
aad
je
adcl
shr
xchg
cmp
cltd
insl
pop
aad
stos
in
and
fisttpll
mov
jg
sbb
stos
ljmp
sub
xchg
mov
jmp
or
fisttpl
std
cmpsl
pop
icebp
sub
mov
sub
jnp
mov
add
sbb
push
xor
outsl
push
call
jno
dec
jg
mov
movsl
rorl
out
mov
fwait
outsb
frstor
push
add
lods
dec
add
push
test
ret
sub
lea
jo
flds
mov
decb
test
jp
in
jb
xchg
jns
movsb
push
stos
sbb
cmc
ja
scas
js
leave
mov
ds
mov
mov
mov
jnp
add
in
dec
adc
call
mov
push
mov
inc
add
inc
pop
shrb
pop
stos
clc
icebp
cs
lret
das
test
addl
stos
mov
rclb
jge
inc
xchg
add
imul
lock
pop
enter
dec
aas
push
sbb
jbe
outsl
test
push
loopne
pop
push
shrl
imul
cmpsb
jge
repnz
mov
shlb
out
push
mov
out
mov
xchg
mov
xor
je
and
add
hlt
add
leave
inc
idivl
xor
shlb
or
mov
outsb
pusha
pop
push
rcl
and
addr16
je
sub
fwait
sub
push
leave
or
out
xor
icebp
adc
gs
or
jmp
push
add
bound
pop
dec
sahf
clc
jb
dec
mov
xlat
mov
inc
pop
or
mov
sub
pop
outsl
addr16
mov
shll
and
sbb
adc
cmp
jbe
jmp
sub
xchg
adcl
mov
push
cmp
stos
call
jmp
cmp
or
cmp
add
sti
adc
lock
sbb
rclb
jb
pop
mov
aas
xor
loop
mov
clc
jnp
jb
test
mov
fstps
dec
jb
jae
jge
jle
scas
xchg
das
fisubl
aam
test
cmp
mov
mov
mov
leave
xor
mov
and
jl
mov
pop
sbb
jecxz
aam
cmp
sbb
enter
or
xor
mov
add
in
popf
das
out
and
or
or
inc
ret
aas
ds
cmp
mov
add
xor
daa
cmp
cmovnp
mov
shrl
push
loope
mov
cs
adc
je
mov
pop
popa
cmp
pop
adc
aad
adc
cmp
fmull
push
mov
cmc
mov
jae
stc
and
loopne
mov
mov
pusha
push
aas
std
jle
pop
movsl
test
stos
xor
fisubrl
popa
xchg
jp
aam
insl
aad
out
mov
xchg
xchg
or
sahf
xlat
loope
mov
mov
and
imul
sahf
mov
decl
add
xlat
xlat
pop
or
pusha
gs
inc
enter
jae
sbb
mov
movsl
lret
mov
or
shrl
in
outsl
hlt
les
pusha
cmp
repz
les
push
xchg
in
push
jle
xchg
pop
repnz
ljmp
pop
std
mov
xor
push
mov
mov
sbb
test
fcmovnu
cmp
test
pop
jae
adc
pusha
xor
pop
or
das
call
rcrl
or
inc
inc
aad
xchg
lahf
nop
cld
shl
cltd
jmp
nop
sub
nop
cld
mov
inc
faddl
adc
int3
xor
stos
xor
icebp
push
arpl
xchg
sub
dec
add
sarb
mov
sbb
mov
xor
mov
jb
xor
sti
lods
mov
xor
inc
push
add
xchg
mov
out
ficomps
aad
cld
daa
fildll
adc
imull
dec
mov
pop
pop
adc
out
adc
cmp
pop
adc
push
ror
pop
mov
mov
adc
mov
aaa
popa
mov
jne
jne
iret
and
gs
mov
ds
stos
xchg
mov
push
mov
dec
popf
xor
sbb
outsb
rorb
hlt
int3
cmp
cwtl
cs
adc
bound
jns
test
scas
xchg
cmp
cmc
add
or
add
and
adc
xchg
sbb
mov
dec
xor
pop
cmp
jp
shlb
mov
lods
cmp
ljmp
add
jmp
cltd
cmpsl
dec
icebp
loopne
xchg
popa
dec
rol
into
lods
jl
pop
mov
cltd
and
int3
test
or
sti
test
frstor
enter
mov
add
mov
inc
les
mov
cmp
or
jb
inc
or
lods
sbb
xor
push
or
lret
sbb
sub
and
inc
inc
testb
call
mov
call
pop
in
xor
pop
sbb
sahf
je
scas
push
and
ds
mov
push
ret
outsb
cwtl
stc
daa
insl
outsb
pop
dec
repz
loop
pop
clc
pop
pop
bound
js
out
pop
add
in
inc
std
mov
test
mov
in
xchg
fstps
pusha
inc
inc
pop
or
sbb
xorl
sbbb
fs
arpl
push
mov
stos
xor
push
pusha
sub
adc
pop
xor
call
pop
icebp
mov
sub
cmpb
movsb
mov
sti
fisubrs
mov
pop
inc
lea
add
jo
lret
into
lea
ja
xchg
jbe
push
mov
bound
mov
out
jge
test
cmp
ret
cld
scas
fcmovnb
pop
aad
mov
pop
fs
in
inc
sub
cmc
lcall
mov
stc
iret
sbb
dec
sbb
mov
xchg
sahf
mov
pop
clc
mov
jl
lods
outsl
clc
stos
test
xchg
fldl
mov
dec
mov
ss
jae
hlt
sbb
cmpsb
movsl
data16
loopne
push
and
mov
and
movd
je
pop
sub
jg
push
in
jecxz
aam
sub
std
jb
mov
data16
jne
ret
fiadds
cmp
sti
imul
enter
test
decb
in
int3
jb
inc
lds
jns
xchg
and
addl
sub
and
xchg
cmp
jge
or
push
or
ret
sub
int
and
or
lret
out
lods
das
sub
scas
inc
mov
inc
nop
and
fiadds
push
jmp
stos
icebp
outsl
cmpsl
mov
add
push
adc
ss
xchg
pop
jmp
in
push
mov
cmc
lock
popa
xchg
in
push
cmpsb
or
push
jae
adc
aas
in
loop
pop
mov
inc
shlb
cltd
sub
and
mov
adc
aas
iret
sub
lods
inc
jmp
inc
xchg
enter
cmp
xchg
mov
mov
cltd
ljmp
sbb
fs
mov
loope
cs
or
sub
sti
jnp
movsb
sti
cmp
fs
enter
and
and
lcall
sarl
or
jge
sahf
mov
pmaxsw
aaa
inc
lret
pop
stc
pop
dec
jecxz
push
ja
jne
insl
mov
ljmp
idivb
mov
fnsave
scas
shrl
pop
adc
jmp
ds
sub
adc
pop
cmpsb
dec
jle
les
pop
out
cltd
cmpsb
test
adc
fwait
jg
mov
in
dec
leave
mov
in
pushf
lds
stos
adcb
pop
enter
push
mov
xor
mov
ret
adcb
push
xor
leave
pusha
jo
out
and
ficomps
push
int3
mov
adc
cmc
xchg
and
sub
sub
shl
dec
mov
or
out
xor
xor
js
add
xor
test
xchg
shlb
notl
inc
xchg
enter
cmp
in
xor
mov
adc
lock
xchg
jmp
inc
xlat
jp
lcall
xchg
xor
or
add
in
test
lea
mov
ret
test
push
ja
lret
notl
cmp
lea
insb
jmp
xchg
cmpsb
sbb
in
test
dec
mov
imull
mov
pop
out
cli
bound
and
scas
push
out
push
and
pop
mov
mov
dec
inc
frstor
scas
into
jbe
hlt
pop
push
mov
pop
scas
fcomip
fwait
mov
insl
push
call
or
fsubl
sub
pop
out
shl
jmp
mov
ret
dec
jno
stc
push
loope
fcmovnb
jbe
xor
ljmp
rclb
add
adc
xor
out
sahf
mov
pop
sub
pop
pushf
mov
cli
insl
sub
sub
pop
int3
leave
cmpsl
pop
and
adc
mov
movsl
lods
mov
and
mov
sbb
dec
cmpsb
sahf
cmpsl
and
call
iret
adc
mov
dec
sti
lcall
dec
xlat
stos
sbb
repnz
adc
push
push
lahf
fucompp
mov
sub
fwait
xchg
out
push
add
dec
arpl
das
dec
push
add
stc
clc
or
sti
sbb
add
jl
adc
test
sti
icebp
fsub
in
mov
xor
xchg
xchg
add
push
call
les
stos
hlt
test
imul
pop
sbb
es
out
outsl
pusha
push
push
cmp
data16
inc
lea
imul
dec
sbb
inc
mov
pop
jl
icebp
ss
pop
fnstsw
popa
push
rcrb
add
dec
inc
xchg
and
add
adcb
loope
lahf
cs
repz
out
dec
arpl
les
mov
aad
cmp
aaa
cld
loop
add
ja
dec
mov
jge
sub
xchg
stos
enter
lds
ljmp
mov
xor
hlt
in
icebp
jno
shrl
xor
popf
push
jae
and
js
leave
adcl
sarb
mov
test
pop
and
subb
pop
jp
pop
in
outsb
stos
xor
movsb
adc
iret
popa
es
fs
mov
push
xor
or
push
push
int3
sbb
mov
movsl
adc
cld
push
cli
dec
adcl
add
stos
and
iret
aad
lods
cwtl
mov
cli
rorb
test
mov
mov
xchg
push
fucomp
inc
xchg
or
dec
push
or
cmpsb
inc
nop
fs
and
gs
mov
repnz
jbe
lret
xlat
cmc
push
test
shl
adc
jle
push
ret
fwait
cmp
push
subl
stos
pop
push
out
mov
mov
dec
and
jo
int3
push
fiaddl
fiaddl
sub
dec
mov
adc
pop
das
hlt
mov
int
xchg
mov
dec
jbe
jne
push
lea
shrl
add
stc
call
fildl
cwtl
daa
add
shrl
popa
inc
aas
test
out
and
in
shl
pop
scas
pop
fwait
xor
mov
and
inc
fucom
mov
inc
pop
push
xor
lea
sahf
aaa
mov
jl
fstl
hlt
push
rcll
push
mov
or
mov
jecxz
shlb
mov
sbb
and
shl
in
out
sub
scas
jecxz
add
scas
cmp
clc
jns
pop
mov
dec
and
jg
into
jns
add
js
je
adc
adc
nop
dec
cmp
xor
stos
rcrb
in
stos
jg
jg
sub
push
push
test
sti
ds
mov
cmp
sbb
inc
cli
xchg
pop
ds
xchg
aad
clc
pop
mov
inc
idiv
cltd
fcmovbe
sbb
mov
fwait
loop
push
in
adc
in
xchg
cmpsl
pop
arpl
roll
lahf
and
xchg
mov
pop
push
sbb
xor
adc
jmp
dec
out
in
mov
xor
mov
pop
jmp
call
pop
mov
push
cmp
push
out
ret
fstpt
mov
jns
mov
shl
sub
stos
movsb
fprem
test
loope
sub
into
and
lea
push
pop
fimull
pop
or
sbb
dec
outsl
dec
pop
inc
cmpsl
jp
mov
or
xor
cltd
rolb
pop
pop
rcrb
inc
sbb
mov
leave
xchg
add
das
or
stos
sbb
pop
insb
jle
pushf
aas
add
fs
xor
ret
sub
xchg
push
in
pop
divl
jb
push
dec
insb
nop
push
xchg
movb
loop
and
andb
jg
imul
sbb
xchg
in
fadds
push
xchg
pop
repnz
cli
std
sbb
orl
push
mov
outsl
mov
pop
xchg
cmp
int3
out
fmuls
add
mov
mov
mov
dec
mov
lods
cmp
in
mov
cmp
mov
push
mov
pop
xor
push
xchg
insb
int3
fwait
adc
adc
andl
mov
dec
jne
imul
ficomps
mov
push
test
adc
xchg
lock
jge
test
shlb
mov
out
cmpsl
xor
mov
mov
cld
mov
rorl
das
sub
cli
in
in
daa
add
mov
leave
sti
push
pop
cmc
scas
mov
out
leave
inc
repz
or
rclb
gs
ret
lods
adc
or
xchg
cltd
add
inc
sarb
push
aam
ds
fs
loopne
push
lret
pop
lret
mov
nop
adc
ffree
xchg
xrelease
loop
shrb
pop
or
leave
dec
js
pop
mov
nop
sbbb
xlat
adc
call
xchg
mov
outsb
ficoms
nop
ds
lods
adc
cmp
lods
ffree
pop
jl
push
imul
push
mov
mov
divb
mov
push
mov
xchg
addr16
pop
nop
cmpsl
cmc
in
js
adcb
jge
or
addr16
fcomps
cmp
lcall
jecxz
push
and
leave
xchg
rol
mov
xchg
mov
inc
jg
inc
add
jp
jo
pop
pop
mov
out
roll
test
dec
fimuls
mov
mov
mov
xchg
repnz
repnz
mov
inc
mov
and
std
jb
int
cs
testl
mov
outsb
sub
jnp
cmpsb
dec
pop
pop
lret
nop
filds
lock
mov
shr
mov
popf
cld
int3
push
pop
int
pusha
pop
scas
aas
aaa
mov
xor
pop
insl
iret
inc
cs
aad
xor
add
pop
mov
jg
scas
movsl
mov
stc
add
fists
out
push
stos
call
mov
jns
in
mov
inc
sbb
popa
adc
addl
sub
mov
jno,pn
push
rol
shrl
cmp
mov
adc
and
test
pop
test
sub
and
lret
std
mov
movsb
pop
sbb
sub
pop
test
movsb
xchg
mov
mov
mov
movsl
lret
jl
out
mov
es
dec
lcall
ds
lret
jp
ret
imul
jmp
inc
jbe
jbe
lods
hlt
imul
push
ljmp
xor
sbb
jno
test
adc
flds
orb
push
jl
push
fidivl
mov
icebp
nop
push
enter
xor
outsb
les
jl
mov
out
enter
or
imul
adc
add
imul
add
push
insb
push
mov
xor
pop
mov
inc
or
cmp
jae
in
lea
les
dec
int
fsubrs
js
std
aam
mov
xchg
mov
rcll
insb
mov
lret
or
xchg
sub
and
cwtl
xchg
mov
daa
dec
and
mov
sbb
push
xchg
cmp
jae
div
pop
push
fbstp
sbb
shr
mov
sti
mov
shlb
sbb
mov
dec
test
imulb
jb
or
out
push
mov
xlat
and
lock
pop
js
sbb
pop
push
repnz
ds
mov
mov
fildl
push
mov
xor
loop
cmp
pop
xchg
lahf
shll
jne
push
repz
and
fcoms
sbb
ds
icebp
dec
sbb
push
movlps
or
cmc
std
push
movsb
into
xchg
test
lret
mov
pop
lahf
mov
cltd
cmc
dec
push
dec
ja
pop
mov
in
leave
in
fsubrl
mov
jmp
jno
sub
xchg
dec
sahf
sub
inc
andb
xor
cmp
mov
xor
stos
mov
mov
ffree
inc
push
aaa
cmp
outsb
ret
add
fcmove
adc
adc
adc
mov
jg
int3
cmpsl
jno
push
je
inc
jb
inc
mov
mov
in
sbb
dec
inc
pop
mov
iret
add
stos
jno
inc
cmc
adc
nop
sbb
in
movsb
mov
adc
mov
or
jle
aaa
or
inc
std
dec
inc
adc
movsl
dec
xchg
roll
adcl
loop
pusha
das
jp
xor
mov
cmp
outsl
push
adc
sti
pop
js
jae
stos
xchg
cmp
push
jle
les
push
arpl
xchg
pop
pop
jg
sbb
xor
push
loopne
js
xor
adc
dec
adc
push
loop
push
pushf
stos
mov
je
fldenv
inc
add
leave
std
test
mov
jmp
cli
xchg
sub
scas
push
aam
mov
inc
popa
std
add
or
jge
add
in
xchg
cmp
testl
test
mov
or
addr16
out
dec
outsb
sub
jg
aam
stc
lods
repnz
dec
insb
push
mov
and
dec
sbb
enter
adc
call
or
or
jl
cmp
cmp
mov
add
xchg
dec
push
movsb
fwait
push
push
daa
loope
bound
out
and
jb
pop
in
jno
or
dec
add
adc
and
js
dec
clc
lcall
push
lds
shll
push
mov
enter
mov
adc
scas
mov
int3
push
mov
or
inc
fisubs
scas
sbb
loopne
pop
fwait
js
jmp
shlb
dec
xor
lcall
or
push
clc
fiadds
jne
push
push
ret
repnz
nop
ds
ret
lcall
les
aam
fnstcw
mov
iret
or
dec
mov
cmp
jecxz
ja
cmpsb
and
pop
add
fwait
ja
pushf
add
fistps
xor
lea
pop
xlat
mov
cmp
mov
jmp
out
lea
xor
insb
inc
mov
sbb
mov
dec
test
mov
mov
cmpsl
ja
xor
push
sub
in
fwait
jp
lahf
pushf
out
sub
lds
sbb
leave
loope
enter
ja
orl
movsb
adc
xchg
push
jne
or
xchg
arpl
push
es
or
sbb
pop
jecxz
outsb
and
jae
cwtl
inc
repz
pusha
testb
fstl
shrl
xchg
push
pop
push
insb
insl
xor
popf
lret
movsb
sub
jmp
pop
mov
rorb
fnstenv
mov
idivb
mov
ljmp
adc
inc
in
in
int3
out
pop
jge
or
into
lea
mov
mov
int
movsb
dec
push
jae
mov
ss
xor
shlb
pop
inc
adc
addr16
xchg
mov
xor
cmc
js
pop
mov
mov
xorl
divb
test
in
arpl
pop
push
aaa
test
lcall
lds
sahf
xchg
rep
sub
adc
or
adc
jmp
mov
pop
sbb
mov
pop
int
add
std
sub
das
jecxz
inc
sbb
mov
std
push
int
das
pop
movsl
mov
pop
nop
jle
jae
fs
push
and
cmp
push
inc
or
push
mov
and
fstps
leave
push
cltd
lds
jne
mov
shrb
bound
inc
and
out
mov
fists
mov
sub
cmp
in
and
test
ljmp
loopne
fnstenv
add
dec
fistl
imul
sbb
loop
shl
jg
jns
iret
push
cs
push
mov
mov
mov
mov
and
xchg
jns
jmp
gs
lahf
add
in
cmp
in
inc
jae
int3
or
jecxz
dec
lods
adc
and
les
pop
shrl
fisubl
and
bound
out
ss
sub
or
cmp
jae
xchg
cmpsb
jo
lcall
mov
nop
test
xor
pop
push
xchg
dec
jge
adc
int3
pop
mov
test
xchg
add
in
call
ljmp
nop
pop
adc
dec
and
movb
inc
popa
dec
ds
sub
jmp
xchg
mov
dec
pop
ret
sti
pop
in
test
adc
push
mov
cmp
sbb
dec
iret
rcrl
das
pop
jg
or
or
add
cmp
sti
pop
insl
pop
mov
scas
cld
xchg
adc
sub
subl
push
mov
std
int3
dec
lods
push
stos
adc
mov
inc
pop
inc
or
incb
gs
pop
fldenv
cwtl
adc
out
pushf
xchg
push
bound
loopne
pop
ret
stos
ds
iret
sbbb
test
and
testb
mov
outsb
adc
dec
sbb
fnsave
jecxz
aas
dec
xor
pop
jbe
ret
outsl
js
stos
push
xchg
int
shl
scas
cmp
jmp
insb
cmp
inc
out
mov
loop
fisttps
test
push
pop
mov
jb
aam
and
das
mov
cmp
xchg
gs
push
add
adc
xchg
fcmovne
jmp
jecxz
cmp
inc
inc
and
call
add
cmp
pop
jae
mov
xchg
ret
and
inc
push
mov
adc
aam
push
scas
mov
out
mov
aam
loop
nop
add
dec
lret
cmp
xchg
mov
xacquire
mov
repnz
inc
pop
testl
xor
aas
mov
ja
lcall
xchg
ss
movsb
addr16
in
cmpsl
adc
imul
push
out
and
pop
sbbb
test
xor
adc
test
aas
aam
addr16
xchg
aam
out
mov
inc
mov
dec
or
mov
int3
adc
push
jnp
sub
aaa
sti
or
pushl
fsubrs
sbbb
popf
dec
xchg
xchg
cmp
call
sbb
cmpsl
popf
push
mov
mov
pop
mov
push
dec
and
add
sub
and
pusha
push
inc
in
inc
inc
sti
shrb
xor
dec
cmp
jo
inc
pop
mov
rorl
bound
pop
add
mov
cmp
mov
xor
or
sbb
mov
cld
into
fimuls
xlat
seta
xchg
insl
lret
xor
stc
ds
ja
jmp
sbb
pop
outsl
jmp
pop
cmpb
mov
sub
mov
sub
in
ret
sbb
add
roll
adc
das
nop
loope
pop
sub
mov
addb
out
push
xchg
shr
mulb
nop
cltd
sub
mov
andb
push
sub
dec
daa
cmp
fcoml
loop
in
jmp
jae
lret
or
jno
pop
sti
pushf
jg
sahf
fstp
xor
and
adc
aam
test
xchg
fidivrs
movsl
mov
in
mov
cmp
mov
outsl
push
sub
add
push
sub
loop
adc
xor
cmp
test
push
cmpsb
shlb
inc
out
test
push
sub
ss
cld
out
or
popa
inc
xor
or
idivb
xor
int3
or
movsl
xlat
outsl
adc
aaa
aaa
nop
pop
xchg
das
dec
xlat
loopne
inc
mov
shlb
inc
ss
imul
jecxz
fbstp
adc
mov
xchg
sbbb
adc
iret
into
xchg
scas
aas
lret
sahf
mov
shll
repnz
out
jne
inc
call
sti
jb
push
out
ret
call
push
dec
sub
or
push
and
aas
mov
lods
es
lds
inc
int
adc
pop
insb
aam
add
les
add
jg
pop
jno
ljmp
js
cltd
lret
adc
mov
dec
je
push
cmpsl
fdivs
mov
cmp
mov
addl
lret
sub
sbbl
jge
adc
jb
mov
scas
mov
add
jb
xor
jmp
out
jne
daa
stos
fdivrs
pop
aas
push
repz
push
fadds
jne
cmp
enter
loopne
outsb
cmp
push
adc
das
sbb
ffree
jo
dec
and
jmp
cmp
icebp
sub
leave
fildl
cmp
stc
sbb
fbld
push
cwtl
xchg
lea
cli
test
popf
jmp
xor
push
dec
mov
test
mov
loop
inc
call
xor
xor
lcall
pop
sbb
testl
dec
mov
ret
pop
punpcklbw
jns
insb
in
add
jb
inc
mov
xor
in
fistpl
sahf
hlt
popf
cmp
fimull
cmp
mov
lcall
sti
pushf
mov
push
cld
lret
sbb
push
jo
loope
or
dec
cltd
cmp
push
adc
cmp
pmaddwd
cmpsb
ss
js
lret
add
xchg
mov
test
popf
imul
push
fsubr
jae
pop
ja
dec
xor
insl
xor
pop
repz
jbe
rcrb
sbb
lret
pop
mov
int
jnp
mov
add
cmp
lods
repnz
jecxz
mull
add
lods
push
pop
mov
ss
hlt
mov
sarl
pushl
mov
inc
and
or
pop
nop
or
and
and
sbb
cli
out
pop
shrd
or
cmp
xchg
sbb
jns
push
cmp
push
sub
mov
push
pop
jnp
dec
pop
icebp
pop
mov
and
xor
lock
mov
adc
or
sbb
adc
stos
out
mov
int
enter
je
lcall
pop
inc
enter
sahf
aaa
jno
inc
jbe
repz
push
dec
aaa
adc
inc
pusha
push
mov
fwait
iret
pop
cmpsl
mov
sbbb
or
sub
loopne
scas
pop
les
jmp
jp
xor
and
std
mov
mov
push
daa
push
dec
scas
pop
mov
add
add
jbe
mov
jns
lcall
sub
aas
xchg
mov
mov
fwait
outsl
add
xchg
inc
ret
stc
sub
ja
push
xchg
incl
xchg
outsl
xor
pop
cld
adcb
jmp
pushf
jae
scas
and
xchg
dec
insl
push
jne
in
push
mov
loope
cmp
inc
hlt
cmp
scas
in
clc
pop
fs
mov
lods
fcomps
insb
cmp
mov
clc
out
ljmp
cmp
ds
jne
xchg
mov
dec
jmp
mov
call
addr16
pop
inc
je
in
std
arpl
mov
cmc
enter
lods
fwait
lea
mov
pop
cmpsl
imul
xor
sub
push
push
dec
mov
jno
outsl
testl
sbb
or
pop
pop
daa
iret
xchg
sub
fnstsw
lcall
stc
xchg
aam
in
leave
std
add
adc
mov
sub
or
sbb
sub
adc
mov
mov
insb
dec
mov
movsl
jge
jae
push
push
inc
cmp
and
xchg
fs
rcll
dec
or
das
rol
test
inc
mov
and
pop
xor
jns
xchg
cs
int3
lret
mov
loope
dec
jg
xor
inc
andb
xchg
jl
lahf
aad
and
or
iret
cmp
or
mov
mov
inc
sub
add
push
pop
add
jo
inc
call
push
cmp
jmp
sbb
xchg
imul
sbb
or
mov
and
sbb
xlat
xchg
mov
cmpb
out
inc
int
fiadds
repz
xor
push
mov
ljmp
and
test
sbb
and
mov
hlt
dec
popa
inc
movsl
ds
test
les
call
dec
out
inc
int3
inc
in
mov
out
mov
outsb
jmp
mov
cmp
xchg
jge
data16
mov
call
fstpt
sub
ficompl
scas
dec
mov
xchg
dec
fbstp
arpl
add
xor
lret
mov
sbb
nop
stos
dec
sub
andl
ret
out
test
mov
mov
jmp
fdivr
mov
mov
bound
ret
nop
push
es
int3
xchg
cwtl
addr16
adc
push
fisttpll
int
xchg
js
xor
lea
lods
jae
mov
call
lahf
fstpl
gs
fldcw
push
aaa
adc
inc
jne
cmove
dec
or
test
mov
imul
dec
inc
dec
sarb
orb
xor
xchg
xor
mov
mov
cmp
inc
sbb
inc
ljmp
repnz
insb
mov
sub
fisttps
mov
cmpsb
xchg
inc
pop
pop
lahf
scas
int3
jp
enter
decb
jno
push
and
and
lret
cld
icebp
int
push
xchg
xlat
arpl
loop
clc
repnz
push
mov
or
cmp
stc
push
and
or
outsl
jmp
in
scas
push
cmp
mov
sbb
jle
pop
mov
lock
lcall
sbb
xchg
and
lret
inc
and
push
ds
imul
mov
jns
adc
shl
mov
push
push
add
push
repnz
cmc
xorl
test
pop
mov
cmp
scas
je
lock
pop
in
fistps
and
sub
mov
xor
js
je
pop
jmp
in
mov
mov
dec
stos
jle
xor
sahf
sub
dec
xlat
adc
and
cmc
lock
adc
lret
rclb
leave
popa
jno
out
outsl
fucom
inc
add
inc
ds
mov
adc
mov
adc
jg
dec
test
js
jge
movsl
mov
jmp
repnz
sub
std
mov
inc
repnz
add
lahf
pop
inc
ret
inc
je
popf
mov
push
mov
jle
call
cmpsl
imul
cwtl
std
pop
jb
jecxz
icebp
cs
xchg
imul
and
out
fists
cltd
push
mov
pop
push
sbb
push
ss
push
push
lods
push
inc
clc
push
inc
mull
testl
sahf
jbe
xchg
call
loope
add
add
cltd
sub
sarb
mov
pusha
pop
xchg
pop
hlt
test
in
jge
mov
out
inc
cmp
stc
xchg
insb
rol
cmp
jge
dec
push
pop
stos
imul
dec
orl
das
aad
mov
cmp
mov
rclb
adc
test
shr
and
test
pop
jmp
add
ficompl
sbb
mov
jns
cmp
xor
loope
mov
outsb
ror
rcl
push
mov
icebp
dec
imul
nop
jbe
jae
mov
inc
pop
arpl
sub
cld
add
sysenter
mov
sbb
out
imul
xchg
adcl
test
scas
and
fidivrl
in
cltd
jecxz
lods
cmp
mov
pop
and
mov
jg
test
mov
popa
jl
loop
bound
push
aam
mov
pop
mov
roll
fldt
nop
or
inc
ss
imul
ds
stos
or
jmp
xor
ja
xchg
shll
insl
das
dec
cmp
xor
sti
push
xlat
test
xor
push
in
ljmp
scas
xlat
mov
scas
jg
stc
lea
nop
sub
mov
jae
es
or
or
push
mov
dec
adc
cmp
cld
bswap
mov
jecxz
test
pop
inc
xor
xchg
xor
mov
jg
or
jmp
das
sub
or
mov
sbb
pop
mov
lret
inc
push
loopne
or
sbb
pop
sub
das
mov
mov
add
fs
cmp
adc
sbb
lods
fistps
sahf
sub
hlt
mov
mov
xchg
jecxz
add
xor
xorl
mov
mov
mov
add
cwtl
jne
mov
mov
fstps
lea
in
inc
addr16
in
or
or
dec
lcall
pop
cmpsb
lahf
add
fnstsw
adc
cltd
jbe
xor
enter
add
adc
cmp
mov
lock
test
outsl
jmp
mov
push
popf
xor
nop
aam
mov
pop
pop
add
cmp
out
lahf
addr16
nop
mov
xor
stc
cmpb
mov
mov
inc
les
cwtl
divb
push
jmp
push
bound
mov
rcrb
sbb
cmp
adc
jmp
jge
push
adc
mov
sbbl
fs
push
lea
pop
cmp
xchg
fiadds
mov
jnp
sub
cmc
sub
sbb
sub
mov
fst
aad
enter
jecxz
sar
dec
mov
xchg
xor
ficomps
and
stos
xchg
inc
aas
sub
add
test
hlt
inc
push
mov
enter
adc
push
je
inc
inc
cltd
popf
mov
test
stc
dec
mov
mov
arpl
jge
pop
les
icebp
jns
mov
cmp
jns
inc
dec
ret
clc
je
push
push
inc
mov
adc
test
es
insl
repz
jmp
pop
imul
ds
add
cld
xchg
xor
inc
mov
ffreep
mov
insl
xchg
pushf
cwtl
jmp
je
add
sub
sub
push
outsb
pop
xchg
mov
stos
mov
ja
mov
and
mov
imul
jle
mov
ret
sub
sbb
nop
out
lahf
lcall
add
push
test
arpl
mov
rorl
mov
sub
into
xor
jecxz
movsb
cmc
and
inc
pop
cmp
jo
push
add
push
sbb
ljmp
adc
test
in
scas
inc
jl
into
mov
out
stos
add
out
cmpsb
sahf
es
xchg
cmp
xchg
inc
clc
dec
enter
xor
lds
or
in
and
rolb
sub
sbb
and
decl
test
movl
in
lock
movsl
or
xorl
cmpsl
lds
xor
nop
pushf
cwtl
dec
pop
sahf
jo
jp
cwtl
jle
push
cmp
xor
mov
inc
jno
sti
lods
mov
std
push
fld1
arpl
cli
xor
int3
clc
lret
adc
push
add
and
mov
int
pop
rcl
subl
mov
xchg
cltd
xor
loopne
imul
mov
arpl
test
in
mov
rcl
aas
lea
pusha
dec
jnp
push
ret
pushl
jge
and
sbb
hlt
fmulp
mov
outsb
xchg
popa
xchg
test
jle
or
jecxz
inc
hlt
dec
pop
xchg
or
mov
push
pop
mov
fbstp
pop
xchg
rol
dec
jne
and
xchg
aam
clc
cmp
mov
pop
iret
dec
fistl
cmpsl
ffreep
xor
pop
les
mov
xchg
rcr
mov
xchg
or
pop
xchg
lea
imul
pop
sarb
jmp
sbb
mov
or
adc
dec
mov
mov
or
imul
sti
jns
push
xchg
std
popf
xlat
pushf
and
jp
mov
call
xor
push
mov
lret
cmp
rclb
mov
xlat
push
aas
jl
cld
pop
repnz
cwtl
ret
xor
xchg
out
imul
out
test
pop
dec
in
and
add
ljmp
push
and
xor
mov
adc
or
jg
pop
enter
jae
std
pop
cld
rol
push
mov
mov
scas
iret
mov
pop
dec
pusha
adc
pop
mov
mov
jl
scas
repz
gs
dec
sbb
jmp
lcall
push
divl
subb
xchg
sbb
sbb
mov
aam
jle
mov
sahf
sub
jle
test
xor
dec
dec
add
mov
sti
and
adcl
xchg
push
mov
inc
sub
icebp
cs
out
in
aam
jne
and
sub
lods
dec
sahf
ds
pushf
xor
shr
push
cmp
dec
xchg
or
ss
lret
gs
jle,pt
jl
sub
sub
or
mov
or
xor
sbb
enter
rcrb
fadd
iret
shlb
add
fs
add
cmp
mov
subl
adc
push
mov
adc
outsl
std
jbe
inc
je
mov
jp
out
pop
jnp
sub
ficoms
shll
test
cmp
cli
ficoml
jno
lock
jae
xchg
dec
sbb
pop
cmpsl
repnz
cmp
sub
imul
mov
lods
shll
cwtl
mov
xchg
and
stos
test
lods
or
outsl
fidivs
add
stc
cmp
icebp
cmp
xlat
divb
cmpsl
xchg
loopne
dec
xor
sbb
imul
sub
adc
xor
or
push
mov
outsl
enter
adcl
inc
mov
add
mov
push
push
fdivrs
daa
fs
scas
les
fs
pop
pop
daa
sbb
das
roll
xor
clc
and
jmp
rorl
mov
leave
inc
mov
push
loope
push
clc
mov
pushf
cmpsb
incb
jae
in
pop
pop
cltd
test
mov
sti
mov
shrb
mov
jne
das
push
pop
int
mov
xor
sbb
mov
insb
jge
jl
dec
insl
xor
mov
aad
idivb
jne
xchg
pop
in
clc
adc
inc
mov
inc
mov
daa
adc
ds
or
and
inc
fwait
sahf
test
iret
mov
lcall
mov
inc
pushf
or
inc
mov
adc
pop
pop
dec
mov
pop
fldenv
fsubrs
cmp
mov
adc
sbb
and
pop
aaa
sbb
and
test
sub
push
pop
mov
nop
ror
push
in
fwait
jno
sarb
mov
imull
insb
mov
sahf
dec
test
in
jge
imul
push
sbb
insb
iret
dec
pop
loopne
pop
stc
jo
fcoms
push
jno
lds
das
pop
dec
push
inc
cmc
adc
test
popl
push
xchg
push
aad
push
dec
dec
pop
push
pop
andl
and
cli
ja
dec
fstl
rcl
stos
or
jno
popf
dec
fdivl
lret
icebp
push
and
outsl
mov
ret
xchg
adc
push
jno
sub
movsb
scas
clc
adc
add
test
cwtl
push
in
fucomp
out
mov
sub
shl
ficoms
scas
sti
xor
pop
xchg
rol
aas
addr16
andb
inc
in
aaa
jae
adc
adc
xchg
pop
outsl
mov
mov
jecxz
sub
into
movsb
or
xor
cld
or
jle
in
insb
lods
push
add
mov
popf
add
mov
ret
std
stos
fs
aad
push
jno
adc
jge
in
pop
mov
nop
cs
push
dec
sbb
lds
add
jb
sahf
inc
mov
icebp
mov
ficoml
inc
aad
xchg
add
jo
dec
pop
dec
mov
stos
out
mov
inc
adc
add
push
pushf
divb
push
orb
and
mov
out
add
add
jmp
movsl
inc
ja
xchg
mov
adc
adc
mov
dec
jne
cltd
or
xchg
mov
sahf
xchg
test
ficomps
out
adcb
loop
jmp
adc
sub
lret
fnstcw
cwtl
ljmp
sahf
scas
adc
xor
fcmovne
dec
mov
mov
jns
hlt
cmpsb
sbb
cmp
ss
xor
push
mov
mov
adc
mov
adc
pop
dec
fdivl
test
sub
jbe
ret
xchg
or
sti
pusha
push
cmp
int3
arpl
mov
mov
mov
add
mov
lods
or
movsl
pop
loop
push
or
mov
scas
loope
mov
push
pop
dec
or
fisubrs
orb
mov
xor
push
mov
inc
adc
xchg
xor
insb
cmp
jecxz
scas
mov
cmp
mov
xor
xor
cmp
test
sahf
adc
shr
cmpb
mov
pop
aam
imul
cmp
iret
loopne
out
leave
andb
xor
int3
mov
xchg
jp
pop
movsb
ja
cs
pushl
lea
sub
or
xchg
add
shl
call
ficomps
outsb
or
mov
fisubrl
iret
cmpb
imul
rolb
sbb
arpl
andl
ss
sbb
sub
stos
test
lret
mov
pop
loope
sub
xchg
mov
loope
imul
testb
bound
mov
mov
addr16
sbb
jp
add
sub
cli
das
int
mov
push
mov
push
or
in
iret
sub
dec
push
scas
sbb
or
xrelease
inc
and
lea
ret
sbb
lds
imul
cmp
rorb
dec
and
push
insl
scas
insl
cmp
popf
push
icebp
fildll
enter
adc
xchg
dec
jp
dec
xor
dec
adc
fisubl
jne
mov
and
inc
xchg
jbe
popa
testb
in
and
lds
and
cltd
jl
jne
cmc
add
sbb
pusha
scas
xchg
in
lock
push
repnz
inc
roll
sub
push
sbb
cwtl
sti
shlb
outsl
sbb
mov
insl
xchg
pusha
mov
aas
xchg
xor
or
xchg
jae
dec
test
and
ljmp
push
test
fbld
cmp
bound
cli
jno
das
rcrl
movsb
sbb
rcrl
lock
add
notl
sub
js
add
pop
xchg
test
daa
adc
adc
adc
das
lods
popa
adc
imul
movsb
dec
mov
push
lods
xchg
mov
jp
jmp
push
or
sbb
push
and
lea
adc
xchg
out
lcall
out
jns
dec
sbb
dec
inc
cmp
ja
jb
lds
movsl
aas
mov
jno
aaa
pop
pop
push
scas
mov
mov
and
push
add
dec
icebp
add
jno
lret
push
xor
cmp
mov
jle
mov
and
into
inc
lods
test
add
adc
aad
mov
xchg
sbb
jp
adc
cld
mov
aam
int
xor
sbb
outsb
mov
lds
cmp
jl
jecxz
mov
push
subl
nop
adc
mov
frstor
div
mov
mov
xor
jae
imul
mov
xlat
mov
shll
ljmp
or
jge
xor
mov
xchg
mov
test
cld
aaa
cmp
adc
daa
or
fwait
pop
mov
pop
loope
sbb
out
xor
loopne
out
cmp
enter
jl
pop
jb
jg
dec
inc
enter
jp
and
inc
push
or
insb
jo
xchg
sbb
outsl
ja
dec
lcall
xor
iret
mull
dec
in
pop
xchg
push
lods
iret
in
push
data16
and
push
xlat
pop
jp
push
xchg
insl
adc
add
xchg
lds
add
out
xlat
int
cltd
mov
enter
ss
fsts
cmpsl
loopne
pop
inc
mov
push
sub
mov
pop
xor
adc
sub
push
push
mov
inc
pop
cmp
pop
in
lahf
aam
lods
push
inc
and
pop
fcmove
rcll
daa
jo
loopne
nop
jnp
inc
imul
test
dec
and
cmp
sarb
cmp
push
icebp
mov
jecxz
gs
push
inc
pop
sbb
insl
out
xchg
loop
mov
fidivl
mov
loopnew
adc
sub
sbbb
rclb
out
mov
mov
popf
sub
dec
push
pop
das
movsb
sbb
ss
lcall
rcr
xor
mov
xchg
push
xchg
lret
push
and
cltd
mov
in
test
jo
lea
and
and
in
jmp
sbb
mov
sbb
or
sbb
inc
cld
sahf
cmp
cli
sbb
data16
and
inc
arpl
ds
dec
clc
dec
push
dec
pop
adc
enter
imul
xor
mov
or
sbb
push
lcall
popf
add
jno
sbb
cltd
lods
sbbl
insb
outsb
imul
fxch
mov
sahf
out
cmp
outsl
inc
mov
mov
inc
push
inc
or
aas
popf
std
les
cmpsb
pushl
fcompl
xchg
pop
mov
jecxz
outsl
cmp
in
push
in
jne
push
in
jmp
lret
fbstp
inc
xchg
and
xchg
inc
movsb
jp
pop
and
and
mov
inc
push
and
xor
pop
popf
insb
in
mov
cmpsb
mov
mov
cmp
sbb
mov
decl
pop
repnz
fimull
xchg
notl
and
incl
out
add
add
push
mov
xor
add
dec
pop
cmp
xchg
fs
xchg
sub
enter
clc
lcall
push
xor
mov
dec
inc
cmp
lcall
ret
imul
push
sub
insl
dec
in
push
loop
shll
das
nop
xchg
inc
shll
out
stos
mov
daa
xchg
fwait
popa
lods
outsb
push
aaa
sbb
inc
jmp
pop
mov
push
mov
aam
jg
sbb
fistpll
xor
inc
stos
shl
cli
dec
stos
dec
cmp
add
paddsb
out
xor
xlat
xlat
rcll
sub
sub
and
dec
test
xchg
pop
lcall
mov
sub
ljmp
xor
lcall
ja
mov
leave
xlat
add
push
and
xchg
add
push
dec
enter
xor
mov
cmp
xlat
mov
mov
sub
je
inc
dec
sbb
cmp
dec
out
addb
das
test
adc
scas
inc
pop
inc
das
scas
push
and
dec
lahf
sbb
push
jp
xor
pop
cs
inc
mov
cmp
mov
push
mov
popa
jns
cmp
mov
mov
xchg
mov
je
sbb
addr16
lcall
or
push
jp
int3
lret
mov
sub
sbb
bound
xchg
jne
push
mov
jp
popa
pop
push
mov
push
cmpsl
imul
int3
es
add
jno
std
mov
rorl
std
fmul
xor
ja
das
inc
jbe
inc
aaa
add
cmp
int3
ficompl
icebp
push
pusha
cli
arpl
scas
or
cmpb
mov
lcall
lahf
roll
and
mov
loopne
cmc
pushf
xor
aas
jne
mov
or
pushf
shll
push
arpl
xchg
inc
in
jl
and
aas
jb
inc
inc
sti
and
push
rclb
mov
or
les
call
cld
mov
xchg
ret
loop
mov
ss
cltd
lahf
add
loop
cmp
xchg
add
xchg
aaa
push
idivb
leave
out
and
and
jmp
loope
adc
push
lods
aaa
push
test
das
loopne
inc
push
push
test
sub
xor
test
xor
mov
xchg
inc
mov
rcl
iret
mov
ljmp
sbb
xchg
cmp
shlb
mov
jbe
scas
jge
test
stos
sub
mov
aas
jmp
pop
sbbb
pop
aam
pop
jecxz
push
enter
cmp
sub
sar
cli
jmp
fadds
push
femms
addb
sahf
mov
pop
fidivl
stc
mov
scas
mov
sbb
push
adc
xchg
ffree
adc
outsb
or
and
jp
jmp
les
lods
in
popa
enter
jnp
add
insb
pop
and
adc
push
pop
and
and
xchg
jp
sarl
mov
fimull
jmp
inc
shll
cmp
jecxz
cmpl
les
mov
inc
pop
push
cmp
ficompl
add
jl
andl
mov
cmpsl
sub
sbb
imul
push
subl
push
mov
out
andb
jmp
dec
lods
cltd
shlb
xchg
pop
pop
cs
daa
cld
sahf
mov
outsb
clc
pop
mov
or
ret
pop
pop
clc
jle
mov
cmp
adc
outsb
mov
sub
ja
test
fwait
in
iret
pop
add
inc
ret
dec
jg
mov
pop
cmp
dec
les
dec
lods
dec
je
pop
pop
addr16
jbe
sub
shll
js
cltd
mov
in
inc
lret
and
xchg
xchg
adc
insl
xor
inc
test
insb
mov
push
jno
test
lods
mov
xchg
inc
repnz
mov
push
xchg
cmpsl
sahf
dec
inc
push
push
cmc
inc
int
imul
xor
pop
mov
sbb
scas
xor
loope
fs
dec
xlat
inc
popf
xchg
push
in
mov
in
jne
insl
es
xor
push
lock
in
and
mov
jo
or
fwait
call
js
repz
or
mov
out
mov
out
mov
outsb
pop
jb
ss
orl
clc
jae
cli
cmp
mov
inc
sub
sti
fsts
inc
mov
jge
xor
test
movb
sarl
cmc
mov
mov
inc
jl
jmp
movsl
push
push
xchg
adc
mov
add
inc
addr16
arpl
movsl
imul
psadbw
dec
movl
adc
push
add
mov
xchg
jb
pop
push
loopne
xor
sub
dec
sub
sub
push
leave
mov
rcrb
test
or
sbb
repnz
or
push
xchg
int
adc
add
xor
in
test
in
jmp
xor
arpl
jmp
mov
cmp
daa
inc
adc
sbbb
scas
repz
cld
add
in
xor
pop
int
nop
cltd
push
into
test
negb
icebp
and
scas
pop
add
pop
fstl
es
sub
lahf
pop
and
lcall
repz
adc
pusha
push
rorb
fsubs
pop
shlb
pop
out
sub
or
or
imul
xchg
dec
mov
push
je
icebp
fsubr
dec
les
pop
fnstenv
sahf
in
xchg
push
daa
push
aad
xor
int3
or
sub
rcr
adc
pop
or
scas
stc
lods
jnp
jmp
mov
fsub
xor
and
cs
mov
repz
jg
aaa
dec
hlt
sub
stos
mov
lea
jbe
add
mov
test
leave
mov
std
and
xchg
mov
into
mov
sub
jp
sbb
add
ret
xchg
dec
pushf
sub
jbe
sub
movsl
jno
push
ljmp
loop
fistps
nop
inc
xorl
fsts
dec
loop
pop
mov
jbe
sbb
sbb
adc
inc
sahf
fiaddl
xor
aad
mov
test
pop
fisubl
addr16
push
sbb
sub
aaa
cld
cmp
jns
jae
ficoms
aas
cwtl
addr16
xor
mov
cltd
pop
out
out
enter
cmp
cmc
mov
push
inc
add
loopne
xchg
add
xor
pop
pop
jp
mov
cmp
pop
cmpsb
cmp
out
std
fidivrs
xor
fldt
mov
shl
mov
fldt
insb
loopne
and
cld
stc
dec
add
clc
shlb
jmp
mov
lods
jge
jno
lahf
mov
loop
inc
mull
push
cmc
pop
cmp
sti
aam
sub
mov
mov
lods
mov
and
fsts
inc
push
sahf
jbe
lock
and
stc
push
pop
pop
fdivr
jmp
invlpg
pop
out
adc
dec
stos
or
cmp
rorb
pop
inc
sti
or
dec
pop
test
mov
hlt
out
jge
in
mov
jne
ljmp
inc
pop
lret
fimull
cmp
pop
sub
push
faddl
xchg
push
sbb
or
or
repnz
mov
mov
mov
rorb
mov
dec
push
sbb
icebp
fists
scas
out
lock
mov
lret
adc
dec
sbb
int
les
sbb
push
cwtl
or
js
fidivrl
call
stos
iret
loop
add
sub
inc
out
shll
shlb
fists
pusha
scas
push
mov
jo
push
or
mov
testl
loop
sbbl
xchg
push
or
hlt
mov
and
jmp
xchg
xor
xchg
daa
mov
and
sub
test
movsl
dec
inc
lret
ja
nop
shll
sahf
and
inc
das
or
repz
add
rolb
or
scas
in
fwait
or
mov
pop
adc
js
idivl
push
push
int3
pop
out
fildl
pop
or
xor
fs
insl
adc
push
push
shll
jle
movsl
push
out
push
sti
fsts
or
dec
dec
call
dec
enter
imulb
out
mov
mov
nop
mov
insl
pop
or
lods
mov
movsl
push
pop
test
cmc
xchg
in
push
sbb
loope
xor
and
mov
mov
cmp
fstpt
fistpll
arpl
sub
inc
sahf
in
and
and
rolb
xchg
lods
cmpl
pop
movsl
cltd
shrl
pushl
jns
fldt
es
mov
inc
scas
into
push
rorb
in
lods
push
repz
jl
nop
mov
dec
sbb
sbb
stos
pop
mov
jg
jle
std
pushf
outsb
cmp
fdivrp
ss
cmpb
enter
popf
repz
icebp
dec
cmpsl
int
sub
call
addb
test
mov
fdiv
jno
dec
adc
sub
push
hlt
xor
mov
inc
nop
mov
nop
jg
push
mov
mov
pop
push
lea
les
lds
imull
sub
cmp
call
ret
jne
scas
jg
cmp
dec
sbb
xchg
jne
mov
sub
loopw
lahf
dec
aad
sub
icebp
rcll
xor
dec
adc
out
pop
jne
outsl
psrlw
stos
mov
and
or
fisttps
and
push
orb
mov
stos
into
cmp
sti
push
mov
jne
mov
add
push
xor
sbb
das
lahf
jns
int3
and
addb
in
mov
mov
pop
push
sahf
mov
fadds
mov
add
lcall
add
aam
sahf
test
xchg
bound
call
cltd
sub
lock
mov
or
ror
push
mov
int3
xor
mov
add
mov
imul
jecxz
popf
cmpsl
lcall
into
js
dec
ret
icebp
mov
add
inc
rcrb
fwait
cltd
lock
inc
push
xor
add
out
mov
push
or
clc
out
mov
dec
sub
aas
aas
lahf
dec
mov
inc
push
inc
mov
jo
jge
nop
lcall
int3
insb
or
mov
psrlw
sub
mov
enter
add
or
pop
pop
jl
push
jg
sbb
xchg
jecxz
push
or
adc
push
repnz
nop
jle
pop
mov
pop
sub
cmc
dec
lret
or
sbb
pop
cmp
xor
pushf
adc
dec
mov
xchg
out
icebp
loopne
jns
dec
dec
pusha
pop
dec
mov
mov
ret
out
xor
mov
sbb
mov
insl
sbb
jg
push
cmc
inc
mov
cmpsl
mov
sub
inc
jmp
pop
mov
loope
inc
xor
dec
test
mov
xchg
sbb
pop
gs
daa
pop
fnsave
mov
add
pop
jecxz
xchg
sbb
rcl
divl
repnz
jno
fisubrl
enter
pop
gs
fidivrl
test
movsl
mov
aas
and
fldt
cwtl
xor
popa
pop
cltd
add
into
inc
push
jo
stos
cmp
add
lods
dec
pop
scas
fnstsw
jle
mov
pop
pop
add
push
iret
repz
xor
mov
xor
push
fsubs
nop
notb
pop
or
mov
adc
jmp
lahf
mov
dec
xchg
and
sbb
adc
ss
fcomip
gs
adc
cwtl
adc
jbe
call
sub
lret
movsb
sbb
mov
je
add
adc
mov
pop
nop
lcall
loop
inc
enter
into
adc
add
test
push
repz
jge
insb
lods
enter
ja
cmpsl
frstor
pop
inc
pop
add
xchg
paddusw
mov
or
int
in
out
repz
repz
in
push
add
movaps
inc
nop
iret
scas
mov
nop
out
xchg
stc
inc
repz
jl
leave
aas
fists
xor
sbb
or
dec
repnz
jne
ja
or
xchg
int3
mov
jmp
mov
arpl
inc
aam
scas
add
and
xchg
aam
xor
mov
xor
fidivs
popa
cmp
rolb
bound
inc
mov
lret
mov
out
cmp
leave
push
stos
mov
ret
mov
mov
mov
fimull
pop
xor
sbb
mov
popf
push
cmpsb
in
or
xlat
jnp
adc
scas
push
xchg
scas
je
cmp
mov
xchg
neg
jne
outsl
inc
sbb
mov
xor
test
sub
das
sti
aas
xchg
outsb
inc
lea
pop
roll
inc
push
xchg
cwtl
mov
dec
pusha
jg
shl
shr
jno
xor
sahf
xchg
int
mov
dec
sahf
xchg
adc
mov
shll
pop
movsb
inc
lret
bound
fwait
call
and
arpl
lahf
inc
repnz
push
lret
xor
loope
jae
adc
jno
fmulp
das
cmp
jg
loopne
sub
push
mov
repnz
cli
jle
repnz
or
cwtl
push
repz
ds
push
dec
lods
fbstp
or
mov
scas
sbb
mov
lea
fbstp
addr16
nop
or
mov
dec
pop
and
push
mov
xchg
imul
xchg
imul
test
ss
adc
int
loop
jge
mov
aas
adc
or
popa
or
jp
mov
cmp
sbb
pop
fstpt
and
daa
mov
imul
xchg
or
jae
enter
pop
sbb
xchg
popf
mov
ret
or
ja
dec
mov
jb
dec
pop
xchg
and
sub
cmp
push
sahf
rcll
loopne
dec
js
ds
ja
jns
je
aas
bound
rcll
out
rorb
push
je
inc
pop
dec
inc
enter
jecxz
or
gs
mov
subl
mov
incb
mov
stos
xor
sbb
aaa
xchg
orl
out
inc
xchg
cli
lods
push
bound
pushf
jge
jne
stc
cmpsl
add
mov
cmp
adc
pop
pop
push
xor
lret
mov
add
xor
jle
out
push
dec
nop
cltd
push
and
sub
sbb
outsb
subl
and
xchg
cmp
push
mov
push
pushf
cmp
insl
xor
mov
int3
sti
js
test
cmp
clc
mov
mov
outsb
jecxz
rclb
or
add
mov
sbb
pop
int
pushf
loopne
pop
jge
sti
pop
std
mov
or
push
adc
sbb
gs
mov
push
clc
jno
gs
lock
and
cmp
cmp
jge
dec
cltd
pop
ds
mov
pop
add
jl
scas
jae
es
jg
push
push
xchg
sub
or
mov
mov
addr16
cmpsl
lods
in
push
push
mov
xchg
xor
outsb
std
lock
xchg
fbld
out
mov
call
sti
dec
data16
hlt
sbb
hlt
xor
inc
sub
dec
test
in
mov
dec
test
movsb
mov
dec
js
or
loopne
js
jp
lods
sbb
rcll
add
cmc
bswap
scas
push
inc
jne
lods
jno
shrl
push
pop
push
mov
pop
pop
sub
mov
xchg
or
pop
jae
push
icebp
xchg
hlt
sub
ffreep
and
cmp
or
push
cmp
sbb
cmp
out
in
xor
stos
xchg
and
jae
add
mov
push
add
popf
jb
es
mov
pop
data16
imul
cmpsb
and
dec
nop
ljmp
insl
lock
stos
shll
clc
inc
adc
mov
and
scas
xor
inc
sub
psubusw
add
or
call
dec
jb
push
sub
fnstcw
add
xor
push
shl
mov
xchg
sbb
ds
repnz
inc
dec
test
mov
jg
and
cwtl
lret
mov
hlt
and
shlb
jge
jbe
jmp
data16
sub
jns
or
test
mov
insl
sbb
pop
ss
stos
xlat
int3
xor
lods
pusha
jcxz
xchg
dec
ljmp
dec
cltd
xor
cmpsb
push
and
and
push
pop
test
push
add
and
cltd
jle
inc
jns
repz
lods
cs
popf
push
fistpll
call
lea
cmp
inc
movzbl
mov
pop
and
pop
in
int3
xorl
fcmovne
adc
mov
xchg
int3
lea
dec
mov
add
xor
sti
adc
out
out
pop
adcl
outsb
clc
xor
push
in
jl
add
imul
xchg
sbb
popa
ss
iret
add
mov
addl
leave
and
push
imul
bound
push
andb
adcb
test
mov
push
adcl
ret
xchg
lods
pusha
jb
mov
int3
nop
jge
jnp
andl
lds
mov
push
push
jb
test
jns
subl
mov
and
out
loopne
scas
fisubs
dec
xchg
push
sbb
jo
cli
movb
mov
jl
popf
pop
mov
mov
repnz
rcrb
sub
cltd
adc
lods
sbb
xchg
push
mov
data16
dec
ret
sti
adc
pop
jecxz
adc
jmp
sub
mov
or
xor
sub
and
push
jbe
sub
inc
fsts
mov
lock
sbb
dec
incb
mov
rorb
xor
sub
adc
push
pop
and
and
popa
stc
dec
sbb
hlt
inc
loope
das
subl
jecxz
sti
mov
pushf
inc
mov
inc
gs
push
push
out
cltd
aad
or
add
xchg
stos
fsubrp
xor
lcall
cli
sbb
test
mov
decw
dec
mov
adc
and
sbb
xchg
ret
xchg
out
stos
xor
outsl
repz
addr16
std
std
push
lahf
mov
xchg
jns
mov
or
mov
cmp
cmpsl
fninit
ror
das
lods
fcmove
jmp
mov
scas
dec
pop
push
test
in
aam
js
int3
xchg
add
mov
sahf
mov
or
dec
sub
or
enter
clc
jbe
jmp
pop
dec
mov
cwtl
cmpsl
je
sbb
pusha
insb
jno
shr
imul
adc
rcrl
int
adcb
and
mov
fcmove
mov
mov
ret
cli
jns
push
lock
xor
nop
icebp
shrl
imul
andl
pop
rorl
adc
pushf
mov
dec
dec
rclb
jmp
xchg
ja
push
dec
jge
lahf
popf
scas
out
lds
mov
xor
push
sbb
int3
add
mov
lret
mov
cmp
leave
and
aam
jmp
dec
jo
cmpl
iret
pop
in
imul
dec
mov
in
mov
add
dec
push
sbb
shl
or
mov
pop
lea
cmpsl
call
sub
ds
ss
mov
cmp
adc
fmul
or
into
mov
push
fisubrs
add
sbb
cwtl
ljmp
push
pop
pop
imul
or
and
pushf
test
sbb
pusha
cmp
cwtl
ds
imul
add
mov
pop
dec
nop
ret
dec
mov
mov
repnz
mov
pusha
scas
mov
mov
add
cmpsb
test
mov
aam
jl
loop
bnd
jge
push
sub
jg
dec
popa
ljmp
mov
cmpsl
fwait
mov
arpl
mov
aad
inc
test
out
add
imul
inc
mov
or
cmp
std
xor
ficompl
jmp
sti
inc
lret
or
stos
xchg
or
push
scas
and
cmp
jecxz
popa
iret
adc
or
adcl
add
sub
imul
movsl
inc
jecxz
jno
jbe
ss
and
and
xor
dec
sbb
loopne
outsb
xchg
adc
test
and
rcrb
les
mov
scas
je
add
cmc
push
push
cmp
test
jmp
add
clc
pushf
mov
roll
and
bswap
outsb
addl
jb
sbb
mov
orb
push
mov
int3
subb
out
mov
jns
pop
dec
xchg
pop
push
stos
loop
push
mov
iret
xor
xchg
and
inc
dec
std
stos
mov
add
pop
stc
mov
mov
xor
cmpsl
xor
out
repnz
movsb
mov
dec
cmc
dec
outsl
cmp
mov
mov
std
sub
xchg
xorl
jae
les
push
sar
jnp
popw
inc
in
cmp
jb
add
jge
insb
mov
out
cmp
rcl
mov
in
xchg
push
test
push
mov
cmp
lods
lods
sti
xchg
int
repnz
mov
jns
sub
test
mov
cwtl
test
iret
push
mov
mov
mov
into
pop
mull
fbld
xchg
mov
cmp
ss
fmuls
clc
push
jb
insb
fxch
data16
enter
lret
push
rol
cmp
bnd
aad
mov
add
stos
cmpsl
sbb
jb
fdivs
fs
aaa
jno
jns
lret
mov
jge
icebp
sbb
addl
insb
jb
imul
fisttpl
xchg
xor
outsl
xor
outsb
imull
out
add
xchg
clc
outsl
push
pop
jne
aaa
pusha
enter
pop
sub
or
mov
mov
sbb
pop
mov
or
push
enter
dec
xlat
jbe
sbb
push
out
clc
test
fnsave
dec
pusha
js
mov
lahf
push
fsubrs
jbe
push
sub
sub
and
in
mov
sbb
jb
arpl
xor
push
xchg
xor
fidivrs
cld
or
adc
add
out
shrl
std
xor
test
dec
scas
fistl
inc
jmp
dec
or
mov
and
inc
cltd
lods
push
in
push
inc
mov
sub
add
inc
mov
scas
je
and
cld
mov
test
divb
or
test
popa
mov
xor
hlt
mov
pop
adc
jns
rcpps
bound
and
jle
fisubrs
stos
repnz
mov
int
pusha
divb
or
or
or
mov
fdivl
push
xor
vmovaps
and
cmp
mov
fwait
in
mov
sbb
outsl
pop
popf
scas
jo
mov
in
adc
xor
and
and
jg
scas
cmp
push
ja
xor
xchg
mov
mov
out
stc
mov
in
jnp
lock
out
mov
popa
jg
das
adc
push
fs
add
pop
pop
pop
insb
mov
pop
jl
jnp
stc
pushf
push
popa
icebp
js
pop
aaa
je
int
sahf
cmp
mov
mov
xorb
scas
in
daa
mov
cmp
add
inc
shll
sub
adc
pcmpeqd
adc
mov
and
pop
jg
arpl
xchg
mov
xchg
movss
jp
aad
pop
outsl
mov
sub
inc
and
pushf
out
test
and
mov
push
jo
adc
mov
lods
in
arpl
pushf
jecxz
inc
sbb
push
daa
jp
adc
out
data16
sbb
or
xchg
pop
lock
jecxz
mov
xor
movsl
and
xor
and
dec
insl
loop
push
aaa
mov
push
adc
inc
das
notb
push
arpl
cmp
inc
pop
mov
cli
nop
or
mov
xchg
mov
pop
stc
mov
sbb
jg
push
mov
shrb
and
xor
scas
jecxz
roll
add
mov
inc
inc
daa
xchg
int3
insl
cmp
rcl
cld
jnp
test
mov
inc
lea
xchg
int
push
dec
js
fimull
lods
mov
aam
andb
adc
cmpsl
inc
ret
adc
inc
cmp
xchg
sbb
xor
sub
fisttpl
and
es
jl
data16
in
cmpsl
test
loopne
adc
roll
clc
cmp
xchg
fidivrl
mov
jns
enter
xor
int3
and
jb
cltd
or
ja
cmpsb
in
jb
bound
add
inc
aam
inc
div
pop
loop
cmp
or
mov
sub
aam
lcall
jle
lcall
mov
into
sub
adc
mov
xchg
comiss
in
mov
cmpl
sub
add
enter
add
adc
mov
adc
inc
das
adcb
les
push
dec
adc
and
movsb
aas
pop
in
test
dec
inc
loop
out
pop
dec
push
ljmp
lcall
xchg
frstor
push
and
enter
sub
add
into
insb
push
into
std
xlat
mov
js
inc
cltd
push
add
jbe
not
push
fwait
inc
leave
cmp
aas
cmp
icebp
jle
dec
mov
mov
adc
xorl
pop
jp
sub
sub
popa
hlt
movsl
push
mov
das
mov
out
ljmp
or
arpl
pop
js
shrl
pop
xchg
pop
jl
mov
clc
jbe
stos
test
adc
in
cmp
lcall
mov
pop
int3
fwait
test
jmp
mov
out
pushf
enter
inc
lds
stos
and
test
sti
xchg
faddl
and
xchg
lods
mov
sub
in
dec
push
or
or
icebp
add
add
add
jo
xor
fldln2
bound
test
out
pop
arpl
dec
sub
cmp
inc
sub
shrb
pop
and
fwait
push
aam
push
jg
cmp
hlt
inc
icebp
in
mov
xchg
repz
stc
pop
out
xchg
shll
xor
sub
cwtl
jnp
sub
lcall
fdivl
or
cs
inc
stc
cs
adc
jns
cmp
mov
out
jg
decl
sti
in
push
not
ficompl
fldt
mov
fists
mov
scas
sbb
in
sbb
negl
sub
imul
scas
add
dec
lock
test
in
push
jl
int3
mov
xchg
clc
or
stos
jge
and
inc
dec
bound
test
ror
mov
out
lods
sarl
xor
sahf
xchg
pop
mov
roll
inc
jae
loop
dec
xor
orl
mov
xchg
mov
lret
cs
mov
out
test
repnz
pop
jb
out
push
dec
nop
sub
scas
int
mov
fdivl
icebp
je
push
mov
inc
int3
xor
xor
test
xor
pusha
push
mov
lret
stc
push
inc
lock
fidivrs
fists
sarl
sbb
shl
sub
push
sub
sbb
lcall
ret
mov
and
push
mov
mov
push
mov
das
adc
out
insl
scas
pop
stos
push
inc
inc
jge
ljmp
stos
or
xchg
ja
ret
xchg
adc
jo
inc
xlat
cmc
jne
mov
adc
mov
sahf
decl
int
lods
jle
mov
gs
scas
add
adc
add
mov
cmp
fsubrs
repnz
mov
lcall
in
enter
inc
imul
pusha
sti
inc
inc
movsl
adc
lret
mov
xchg
xchg
xchg
pop
std
mov
out
dec
jae,pn
inc
pop
stos
pop
push
sub
mov
fcomp
lret
lods
lea
pop
lea
jno
inc
sahf
and
outsl
pusha
and
cli
call
in
cmp
add
outsl
pop
subb
shll
jo
std
daa
xlat
in
hlt
add
mov
stc
aad
in
sub
roll
cwtl
dec
inc
fsubr
jno
repnz
or
xchg
cmpl
jecxz
mov
sti
jg
movsb
arpl
jecxz
fcmovbe
pusha
sub
fs
add
sahf
xor
fildl
cmp
cli
cpuid
cmp
sub
mov
xchg
mov
sti
int3
sarl
test
sub
loope
std
push
inc
sub
push
jge
pop
fidivrs
sbb
cmp
pop
sahf
jb
gs
mov
leave
sub
out
rcll
jp
ret
out
pushf
js
mov
xor
orb
pop
jnp
repz
xchg
das
mov
or
test
cmpsb
sbb
test
cmp
lods
jle
xor
mov
xchg
xchg
add
mov
xchg
mov
std
push
mov
jl
pop
js
out
ds
fs
loope
arpl
dec
cmp
clc
jge
sbb
imul
adc
nop
push
gs
inc
je
push
outsl
mov
test
sbb
cltd
popf
push
add
jp
pop
xor
sbb
mov
and
int3
cmp
insb
lods
xlat
sbb
push
sub
int
fwait
les
and
fnstsw
repnz
dec
cmpl
sub
sbb
adc
je
aam
aad
loope
in
dec
push
jl
aad
pop
stos
pop
cmc
mov
adc
dec
cmp
pushf
in
sbb
pmaddwd
mov
pushf
stc
scas
lret
jecxz
mov
xchg
pop
rorb
cmc
xor
or
cmp
mov
dec
xchg
or
mov
jae
orb
jmp
shrb
je
shr
call
fcoml
dec
popf
xor
mov
pop
das
jbe
xchg
fs
xchg
sbb
jg
push
mov
dec
pop
push
bound
add
insl
out
movsb
xchg
sbb
popf
lds
ficompl
cmp
xchg
and
mov
push
pushf
mov
lahf
popf
push
out
loop
loopne
mov
mov
iret
pop
add
add
cmp
test
inc
lods
push
movsl
jno
fldcw
mov
mov
mov
adc
fmulp
inc
pop
cltd
mov
repz
std
cs
or
jbe
out
push
pop
cmp
lahf
pop
add
repnz
mov
aaa
call
pop
outsl
fmull
js
sub
stos
in
lea
outsl
jp
jb
out
xchg
sbb
leave
pop
dec
mov
xor
xchg
insl
xchg
xchg
add
outsb
aas
outsl
jl
addl
push
enter
adc
push
out
xchg
xchg
dec
aam
xor
dec
outsl
fimull
lods
test
cmp
cmc
pop
fstpt
xlat
cld
xchg
sbb
arpl
fcomi
pop
bound
jg
dec
gs
sub
add
jl
movsb
dec
js
cmp
jmp
xchg
pop
adcb
pop
push
mov
fnsave
xchg
jl
pop
cli
add
iret
pop
in
mov
es
ljmp
mov
stos
sub
fsubrs
lods
and
hlt
outsb
mov
jg
mov
cmp
pop
push
mov
arpl
iret
fs
jge
push
ss
dec
jmp
mul
and
sbb
xchg
pop
pop
mov
sub
sbb
imul
imul
stos
pushf
inc
pushf
mov
pop
mov
mov
aaa
xor
js
sub
test
sahf
xor
pop
out
test
xor
rcrb
adc
ffreep
std
call
sub
push
cmp
int3
fcompl
and
jo
shl
sarl
xchg
cmpsb
mov
push
rcl
sbb
push
jne
arpl
test
cmp
mov
pop
dec
and
sub
lcall
inc
xchg
movsl
sbb
pop
jbe
sbb
daa
fistpl
jbe
leave
jno
lods
sahf
jb
ljmp
lock
or
jbe
fstl
push
sub
in
push
aam
aam
imul
or
xchg
xor
not
sub
sub
mov
int3
cwtl
jns
rcrb
aas
mov
sbb
clc
loopne
outsb
jecxz
mov
shlb
arpl
aad
pop
daa
les
and
rcr
inc
inc
push
ficompl
or
jns
cmpsb
and
std
cmp
repz
adc
stos
leave
int3
icebp
iret
inc
push
and
jmp
inc
aad
inc
insb
jge
sbb
mov
xor
jbe
ret
jns
pusha
out
cmp
mov
push
pop
iret
or
xchg
nop
sbb
xor
pusha
jbe
push
outsl
xlat
nop
jge
pusha
movb
pop
adc
frstor
cmp
cmpsb
cwtl
push
fsubl
xlat
cmp
inc
popf
inc
pop
and
filds
xchg
mov
cwtl
and
inc
fdivrs
mov
push
popf
mov
sub
lods
pop
adcl
jns
add
repnz
in
pop
add
ljmp
out
inc
push
sub
xor
dec
lahf
cmp
dec
loopne
sbb
jns
and
flds
outsl
std
dec
pop
cmp
cwtl
mov
outsl
test
ljmp
or
dec
mov
incb
pop
xor
sbb
test
das
hlt
jecxz
out
loopne
mov
push
mov
and
lret
mov
aas
or
mov
in
test
test
mov
mov
cmp
mov
es
cmp
cli
dec
mov
rclb
adcb
stos
adc
cmp
aad
mov
rcll
fisubs
push
mov
mov
mov
jle
aad
xor
and
inc
in
sbb
out
das
out
outsl
pop
fcompp
jle
out
inc
test
and
adc
pop
mov
mov
sbb
mov
pop
pop
imul
test
mov
cmp
int
or
cmpsl
icebp
dec
mov
or
and
pop
adc
pusha
xor
stos
in
inc
cmp
jmp
in
sbb
adc
sub
sbb
mov
addl
xor
pushf
fsubrl
adc
lret
xor
aas
int3
jae
jae
inc
fsubrl
xchg
idiv
cmp
cld
xchg
cmp
push
xor
lret
aas
das
mov
outsb
cld
cmp
jb
fsubp
stos
or
dec
outsl
loope
push
inc
sub
xor
sbb
cmp
and
xchg
jne
adc
dec
dec
jae
cmpsb
xchg
push
aas
bound
lea
ljmp
lcall
loope
inc
sbb
adc
mov
js
mov
test
fstps
fs
divb
xchg
testl
hlt
xchg
lret
inc
outsl
cmp
repnz
hlt
jge
outsl
cltd
inc
insb
outsl
out
push
movsl
push
mov
popl
clc
cli
ficoml
mov
mov
mov
divb
pop
mov
arpl
mov
and
not
fs
in
aaa
mov
cli
sub
adc
cli
imul
stos
sub
adc
cli
in
std
mov
cld
stc
stos
out
lods
insl
add
pop
cld
adc
mov
cmp
ret
scas
dec
sbb
mov
out
ret
out
ss
mov
dec
imul
cmpsb
jo
xchg
nop
jnp
inc
fs
movsl
in
adc
andl
xor
xlat
add
sbb
add
mov
test
loope
xchg
push
push
ja
decb
inc
pusha
cltd
aaa
inc
fs
pop
test
stc
cli
push
icebp
mov
sub
ret
pop
mov
ja
jecxz
xchg
sub
and
imul
mov
dec
push
xchg
jecxz
mov
jecxz
mov
in
stc
and
cmp
enter
cmp
fidivl
mov
test
hlt
push
xor
add
dec
sub
dec
xorb
int3
and
push
outsl
outsb
decb
mov
sahf
rcll
jmp
and
or
push
dec
call
test
repnz
test
filds
lea
mov
adc
fsubr
ret
inc
adc
and
push
jnp
pop
cltd
movsl
cltd
hlt
pop
out
scas
sbb
dec
dec
out
lahf
in
mov
cld
es
sti
inc
js
jne
sub
push
test
fidivs
in
mov
adc
hlt
add
scas
mov
xor
and
push
pop
push
dec
inc
lock
das
jne
ss
or
jl
dec
cmpsl
les
xor
jp
cmp
ret
mov
pop
or
bound
add
in
push
adc
mov
repnz
dec
or
loopnew
ret
stos
xor
addr16
in
divb
ror
leave
sub
dec
jbe
shlb
mov
sub
inc
sti
stos
and
adcl
das
pop
jb
in
iret
jns
push
cli
mov
rcrl
sarl
sbb
mov
lods
ds
mov
add
xchg
clc
mov
out
xor
dec
cmp
cwtl
sub
lret
mov
in
mov
pop
pop
xor
stc
xchg
filds
mov
movb
fabs
mov
mov
lcall
push
test
mov
hlt
xchg
and
and
sub
or
xchg
pusha
cmp
xlat
rcrb
mov
aad
arpl
sub
cld
push
test
js
imul
or
fsubs
jne
aad
test
sbb
testl
frstor
sbb
xor
sbb
test
cmp
rolb
mov
pop
shl
mov
stc
mov
popa
cli
jg
pusha
and
sti
faddl
or
xchg
jp
test
enter
repnz
xor
test
add
jl
hlt
cmc
das
pushf
add
push
cmp
js
pop
pusha
call
fcomip
in
adc
sar
lds
adc
js
push
sub
jl
jge
cmp
jge
lds
adc
jne
adc
mov
out
mov
out
mov
iret
mov
jb
idivb
jo
ret
sub
pop
and
notl
lret
push
ficompl
mov
mov
lods
mov
in
aas
or
shll
xlat
mov
xor
or
xlat
je
sub
mov
or
ficomps
jmp
adc
adc
inc
xor
mov
pop
mov
cltd
test
cli
xor
push
addr16
push
repnz
pop
sarl
xchg
sub
mov
ja
pop
rolb
scas
lret
xchg
dec
popf
imul
jb
les
mov
data16
mov
mov
mov
aas
push
push
shl
into
dec
and
inc
or
nop
mov
inc
jnp
mov
into
mov
lret
das
push
and
das
push
repnz
shl
push
push
jb
aad
or
in
add
data16
fimuls
adc
leave
jl
or
xchg
pop
aas
sbb
fnstsw
pop
int3
pop
stos
adc
xchg
and
out
and
fnsetpm(287
filds
movsb
cmp
sbb
sbb
insl
jne
mov
fwait
pushf
aad
cmpsb
sub
imul
pop
test
mov
jecxz
or
mov
xchg
shr
inc
lea
mov
mov
sub
loope
out
in
xlat
xlat
add
fstpl
shlb
dec
mov
mov
cltd
sub
pushf
stc
loop
push
mov
inc
mov
pushf
shl
pand
xor
pop
inc
cmpsl
data16
subl
cmp
adc
ret
flds
rolb
mov
pop
or
push
inc
pop
hlt
or
xor
pop
sub
push
fistpll
mov
jnp
or
cmp
add
pusha
xor
inc
xor
and
mov
lock
sub
stos
jne
sahf
xchg
enter
scas
mov
cmpsl
insl
sarb
adc
xchg
ret
pop
sti
push
xchg
sbb
inc
sub
fildll
int3
out
mov
sahf
ss
sub
movsl
jmp
and
sub
xchg
rol
xlat
mov
pop
sub
push
incl
cmp
dec
xchg
cld
cmc
stos
pop
cmc
nop
and
or
andl
ror
adc
cs
mov
xchg
push
inc
xchg
fbstp
xchg
fisttpll
fadd
jmp
mov
dec
mov
repnz
testl
dec
mov
inc
mov
mov
lock
and
jb
fucomi
jbe
out
movhps
dec
or
je
or
out
movsb
mov
cmpsl
adc
xchg
shll
mov
adc
add
movsb
int3
lret
scas
ds
ja
mov
int3
push
scas
sarl
adc
or
pop
mov
outsl
dec
dec
scas
es
mov
jmp
mov
je
inc
std
push
icebp
jg
popf
jg
fsts
jp
xchg
add
mov
xchg
pop
loope
push
push
push
clc
dec
jo
inc
int3
enter
inc
js
or
dec
mov
inc
scas
cmp
push
scas
dec
ror
stc
repnz
cmp
jecxz
and
push
gs
mov
jno
jle
das
pop
fcmovnb
and
jae
out
push
popa
jno
ss
mov
loop
push
push
nop
sbb
test
mov
cmpsb
jnp
mov
mov
adc
mov
sbb
fnsave
call
lods
inc
mov
not
sub
sti
pop
imul
adc
sub
cs
jae
lahf
clc
jae
mov
filds
push
and
pop
mov
enter
repnz
push
popa
imul
push
js
sub
xor
xor
dec
dec
push
push
call
pop
add
loope
or
subb
cld
scas
jp
inc
ficoml
and
loop
adc
aaa
in
push
mov
sub
dec
mov
push
xchg
in
pop
pop
add
out
mov
arpl
push
add
arpl
mov
inc
add
sbbl
mov
jbe
xor
lods
sub
int3
and
mov
imul
js
stos
jns
jae
fs
out
fwait
xor
rorl
mov
fcom
cmp
or
fisttpll
and
lods
or
cmp
popa
or
aad
pop
rorb
arpl
mov
cmp
mov
jae
scas
jl
lods
mov
and
cld
rclb
mov
int
movsb
adc
outsl
pop
pusha
cmp
add
call
in
mov
mov
aaa
cli
aas
mov
or
test
push
nop
sbb
jge
loopne
scas
mov
adc
sub
iret
lds
lret
push
out
into
inc
test
arpl
and
or
lret
xchg
sti
inc
iret
xchg
js
pop
das
xor
push
inc
ret
fcomps
mull
jecxz
ret
and
enter
dec
or
pop
rorl
loope
cs
cmovg
add
dec
cmp
out
pusha
cld
addr16
or
int
inc
or
stos
and
cmp
xor
mov
outsl
mov
test
adc
mov
add
dec
stc
repz
or
jle
andb
je
daa
negl
inc
dec
xchg
mulb
jo
jno
xor
lds
jmp
pop
test
xchg
push
sbb
setnp
pop
ds
pop
jb,pn
cmp
stc
inc
and
xrelease
xchg
push
clc
ja
jbe
sub
push
daa
mov
imul
pop
iret
xor
imul
in
ljmp
push
or
lds
xchg
ficoms
mov
add
ja
dec
popa
xchg
ss
aaa
adc
jl
in
aas
cmp
add
jmp
pushf
aas
add
stos
mov
add
das
sar
or
pop
es
sub
push
xor
loop
stc
mov
mov
mov
mov
cwtl
mov
data16
mov
fildll
adc
xchg
or
mov
mov
test
add
inc
sbb
je
lock
loope,pt
fidivl
int
ret
popa
mov
scas
pop
sub
cmpsl
jno
and
jnp
push
jg
pop
cmp
sbb
fwait
pop
xor
lods
jne
aaa
call
push
mov
push
out
cmp
sahf
push
les
aam
aam
inc
mov
xchg
jnp
sub
or
jnp
xor
lcall
dec
cmp
mov
push
out
arpl
jecxz
mov
xchg
ret
jne
push
in
pop
mov
mov
adcl
add
jg
int3
mov
adc
ret
mov
loope
mov
xor
inc
sbb
test
dec
sub
add
or
fisubrl
sbb
lret
dec
pop
push
rol
cli
aad
data16
in
and
dec
xor
sti
pop
popf
adc
and
repz
jne
pusha
cmp
jecxz
sahf
inc
sub
clc
rcl
or
pop
or
pop
mov
adc
stos
negb
cmp
ja
xor
pop
cmp
push
lahf
fwait
addr16
mov
mulb
cli
test
pop
mov
je
cmp
test
push
xlat
mov
cltd
je
cltd
arpl
push
mov
pop
scas
or
xor
pop
xchg
sbb
cmc
dec
rclb
in
sub
xchg
add
inc
lret
xchg
orl
data16
movl
orl
push
dec
mov
out
shll
jnp
rcrb
adc
dec
or
adc
adc
pop
mov
in
pop
packssdw
lea
jmp
in
pop
out
cmp
inc
xor
xchg
leave
adc
mov
fidivrs
push
pop
inc
sub
bnd
fsub
clc
cmp
pop
test
adc
dec
imul
and
les
jmp
mov
and
fidivrl
addb
stos
mov
sub
out
clc
rolb
jbe
push
jg
pushf
scas
add
cmp
mov
repz
adcl
jns
in
cmp
es
data16
sbb
stos
lods
xor
daa
pop
repnz
int
mov
lcall
nop
in
xor
test
mov
xor
hlt
sub
mov
push
adc
mov
lods
lock
jecxz
bound
pop
bts
xlat
aaa
fwait
movsl
jmp
xor
cmp
push
into
mov
and
sbb
add
outsl
hlt
mov
mov
push
adc
or
xchg
jns
outsl
fistl
pop
test
pop
fwait
mov
les
repnz
jmp
scas
mov
cld
or
and
jecxz
into
sahf
inc
xor
sti
stos
pop
fistpll
sub
in
fistpl
and
jg,pt
sub
mov
pop
mov
mov
sbb
scas
mov
mov
in
xchg
dec
xlat
or
jecxz
fdivrl
test
jp
cli
sti
test
push
movsb
mov
scas
mov
pop
ljmp
getsec
sbb
mov
jle
ljmp
dec
jle
pop
and
push
push
and
out
mov
mov
neg
fwait
aaa
jg
aaa
mov
push
outsb
cli
jle
mov
shl
mov
push
lcall
out
ja
or
or
pop
shlb
jne
mov
lods
inc
mov
dec
dec
push
push
xor
jbe
sbb
xchg
push
insl
xchg
dec
cmp
mov
jb
loope
clc
outsl
loop
push
push
mov
daa
lea
cmp
xor
loope
cmp
imul
push
dec
mov
subl
sub
cli
lahf
inc
push
inc
cmp
in
out
movsb
mov
push
in
lods
adc
mov
in
push
push
xorl
sbb
fwait
sbb
clc
pop
neg
test
mov
negl
adc
push
and
mov
add
std
sub
mov
fcompl
rolb
cmp
dec
cwtl
out
mov
in
jg
xchg
jno
in
cmp
lods
sbb
sbb
clc
jmp
xchg
add
sub
push
sbb
daa
out
add
leave
pushf
xchg
jmp
and
stos
cwtl
sarb
arpl
shll
int
mov
mov
push
rolb
test
cltd
test
cwtl
mov
test
sbb
je
pushf
or
enter
adc
rolb
or
mov
call
xor
and
inc
mov
lret
shll
mov
xchg
daa
in
xor
sahf
add
dec
cmp
mov
adc
iret
je
jle
xor
jbe
pop
ret
call
cli
jl
hlt
fmuls
add
dec
lods
push
adc
pop
adc
cmp
inc
int3
jmp
gs
add
xchg
leave
mov
jmp
lods
and
mov
jge
push
fisubs
or
gs
adc
adc
call
nop
lret
mov
mov
inc
fucomi
mov
es
fistps
pop
hlt
nop
dec
dec
jp
sbb
outsl
sahf
inc
xor
jp
lods
pop
sbb
mov
xchg
and
push
out
or
add
jbe
lds
jge
add
lret
call
sub
in
adc
cmp
or
mov
repnz
je
xor
cli
push
pop
aad
popa
xor
sbb
stos
test
xchg
in
lea
inc
jnp
xchg
mov
popa
scas
int3
inc
add
mov
push
popa
sub
cmc
outsl
mov
js
xchg
dec
int3
sub
cmp
cmp
inc
adc
mov
xchg
lods
pop
dec
push
xchg
lahf
fcoml
xchg
jge
jmp
lahf
jns
shll
cmp
xorl
sub
cmpsb
rcrb
pop
repz
adc
mov
ja
hlt
scas
adc
pushf
test
lods
pop
xchg
pushf
adcb
dec
rcll
jg
and
mov
shll
mov
call
neg
xor
xor
mov
add
faddl
xor
fnstsw
push
lods
cli
pop
decb
clc
mov
and
adc
mov
es
sbb
dec
xchg
fwait
and
movsb
fisubs
lods
xor
mov
adc
sub
xor
xor
in
scas
rcl
inc
push
dec
decb
xchg
xor
xchg
cmp
test
loope
rcrl
test
mov
sbb
sti
ret
enter
jns
pop
in
repnz
dec
sub
sbb
push
pop
add
in
std
jo
jl
sahf
out
hlt
cmp
xchg
int3
or
gs
cmp
xchg
int3
xlat
sbb
cli
outsb
sub
int3
adc
pop
dec
mov
mov
inc
andb
mov
or
xchg
ret
jmp
inc
in
mov
cmp
repnz
xor
repnz
stc
rorb
mov
cmp
test
pop
and
lock
push
out
je
xorl
jg
push
lds
cs
pop
fwait
pop
dec
out
sub
jl
imul
jge
xor
icebp
insb
ds
mov
dec
add
and
mov
add
xor
pop
lret
test
and
mov
and
bound
pop
push
js
sbb
add
or
jl
jne
in
ret
loopne
mov
lret
xchg
pop
dec
loopne
scas
pop
pop
dec
rcrb
sarb
inc
testl
test
mov
add
scas
cmpsb
sbb
pop
ljmp
in
enter
mov
mov
cli
add
loop
ds
enter
jp
push
pop
cmpb
lcall
or
jmp
cmp
rcll
outsl
inc
inc
int
jb,pn
jle
mov
movsl
stos
xchg
pop
dec
sub
lods
inc
decb
push
in
andl
xchg
mov
cltd
jne,pt
jp
mov
jbe
mov
fs
sbb
push
adc
lcall
mov
jecxz
fidivs
push
cmc
mov
xchg
insb
xor
test
rcll
jle,pt
sbb
and
jg
hlt
ss
add
xchg
fscale
mov
sbb
stos
cli
inc
dec
pop
out
jmp
push
push
fdivrl
in
mov
push
negl
cmpsb
jmp
or
lcallw
mov
dec
xchg
adc
xor
stos
xor
in
scas
enter
arpl
divl
test
cmp
rolb
sub
cmpsl
mov
mov
cmp
insb
nop
jno
flds
pop
inc
mov
aad
lods
pop
je
movsl
adc
rcr
mov
sbbb
ret
or
pop
cld
cmp
xchg
sub
dec
sub
mov
mov
loopne
mov
bound
lds
jmp
out
or
mov
and
sub
or
in
dec
mov
push
shlb
repnz
cmp
filds
mov
fmull
cmpsl
lret
xchg
or
fisttpl
xchg
iret
pusha
sbb
aam
out
and
adc
test
mov
or
mov
pop
cwtl
pop
fidivrl
sbb
stos
dec
ja
sahf
movsl
and
push
lret
sbb
mov
xor
movsl
jo
sub
add
in
fdivrl
loopne
rorl
pusha
rcrb
shl
pop
test
sbb
loopne
daa
xchg
fisttpl
mov
aam
lock
aaa
xor
xor
nop
push
setae
dec
lcall
push
mov
add
cwtl
fwait
xchg
outsl
pop
jg
lds
aaa
ja
sub
sub
out
les
mov
mull
xor
mov
orl
mov
xlat
mov
inc
xchg
xchg
out
inc
fldt
inc
sbb
test
push
jg
mov
shlb
pop
rcr
xchg
pop
mov
pusha
aad
popa
mov
insl
mov
push
out
data16
or
lods
mov
int3
sub
lock
in
mov
ja
xor
lea
shl
int
dec
push
push
stos
cmp
inc
sbb
scas
outsb
inc
sub
inc
mov
push
adc
test
mov
push
out
mov
and
and
pop
pushf
xchg
fadds
fs
lods
jb
xchg
mov
and
add
fldcw
int
in
out
int3
rol
ficoml
dec
mov
cmp
jne
rolb
popa
push
push
loope
insb
pop
cmp
xchg
mov
stc
pop
lret
imul
je
add
ret
js
outsl
std
mov
test
add
xor
xor
mov
mov
push
mov
pop
jecxz
and
push
xor
lods
stos
in
pop
cltd
xor
insl
sbb
mov
fisttpl
mov
sar
lock
dec
les
mov
sbb
in
cmpb
outsl
and
and
das
js
test
mov
cmp
add
sub
dec
xchg
adc
ss
call
xor
mov
stc
test
call
sbb
aas
dec
into
sub
sbb
mov
int3
jp
mov
mov
loopne
pop
in
jp
stos
jno
xchg
fsubrl
xor
dec
mov
mov
adc
xor
sahf
mov
les
push
and
cmp
inc
in
and
adc
rolb
xchg
sub
inc
adc
and
fiaddl
leave
ror
push
loop
xor
mov
mov
mov
or
add
adc
insb
mov
inc
inc
push
push
pop
fs
popa
pop
orb
shrd
fldt
mov
mov
out
xchg
xlat
push
jne
jne
or
push
andb
lret
andl
out
mov
testb
cld
sbb
lock
xchg
push
pushf
mov
and
xchg
xchg
jecxz
fxch
dec
push
pop
and
push
hlt
and
pop
fstpl
lods
bswap
test
cmp
push
mov
dec
cmp
pop
nop
vpcmpeqw
and
loope
subb
ret
sub
xor
fs
stos
ja
scas
sbb
add
push
cs
or
cmp
inc
lds
and
insl
in
mov
adc
push
jns
push
fnstcw
or
dec
cwtl
fsubrs
ljmp
dec
push
xchg
mov
mov
aas
fwait
mov
pop
sub
or
enter
inc
pop
jno
scas
mov
sbb
into
jns
jg
adc
xor
jno
xor
add
mov
rcrb
jns
cmp
je
rcr
dec
xor
scas
mov
xchg
sbb
shll
sti
jns
push
into
inc
in
mov
lret
xchg
inc
pop
inc
sub
shlb
aas
es
push
push
jb
fidivl
and
ss
lret
xrelease
fdiv
pop
insl
pop
addr16
adc
hlt
pop
gs
adc
pusha
fwait
sbb
orl
push
xchg
push
stos
lahf
jae
add
testl
and
sub
jl
inc
test
stc
test
jne
into
xchg
inc
nop
ss
xchg
cltd
cmp
mov
inc
xchg
push
in
pop
xor
int
sbb
sub
cmp
filds
scas
push
push
repnz
ret
mov
mov
repnz
sub
xchg
add
jp
mov
dec
push
jp
frstor
mov
ss
sub
mov
imul
cmpsl
pushf
es
push
test
cld
rcrl
sub
xorl
xchg
cli
lods
into
lret
popf
ret
mov
mov
xchg
dec
dec
xor
cmp
out
movl
cmpsl
xchg
adc
cmpsl
les
mov
push
imul
enter
rcrl
jle
jp
xor
cwtl
test
imul
cmpsb
lock
mov
add
pop
push
in
icebp
test
adc
dec
in
bound
inc
out
gs
adc
pop
arpl
mov
lock
notb
in
rorl
aas
and
mov
dec
adc
lret
mov
xor
xchg
aas
stos
jne
and
sbb
xor
jmp
pop
lods
and
test
insl
pop
notl
cmp
adc
mov
orb
sarb
mov
mov
movsb
xor
pop
test
cltd
xor
push
cmp
xor
lret
fildl
xchg
jle
xor
fs
jnp
sub
push
imul
xchg
scas
shl
pop
pop
ret
mov
repz
sbb
cli
shll
icebp
mov
push
pop
test
mov
add
xlat
mov
mov
imul
je
jge
xor
stos
mov
repz
adc
push
icebp
push
xor
enter
aam
sti
xor
jmp
or
in
and
ds
clc
rcrb
in
lea
adc
push
repz
inc
inc
mov
scas
out
push
sub
pushf
std
enter
cmp
mov
push
jno
ret
lods
das
adc
popf
cs
mov
lods
es
mov
lods
xor
or
mov
and
std
mov
addr16
xchg
sub
mov
out
pop
ret
mov
outsl
pop
negl
mov
scas
mov
or
subb
add
mov
xor
bound
test
out
mov
lock
loop
xchg
mov
cld
pop
cmp
pop
in
mov
gs
test
xchg
pop
sbb
or
mov
or
inc
insl
or
and
aad
js
xor
pop
fsubrl
in
hlt
inc
aam
movsl
push
sbb
arpl
outsl
push
xor
test
or
int3
pop
inc
cld
pop
pusha
sbb
int3
sub
push
mov
jae
pop
lahf
lret
scas
push
lret
movsb
inc
and
pop
xor
inc
aas
mov
lock
xchg
outsl
jns
lds
clc
jne
dec
outsl
aam
les
rorb
popf
daa
sbb
jmp
scas
movsl
xchg
dec
inc
xor
add
pop
sbb
pop
movsb
or
mov
scas
mulb
jmp
push
sbb
dec
addl
icebp
loopne
add
je
mov
jmp
fwait
sub
fs
jo
out
sbb
jecxz
and
jo
inc
xchg
mov
cmp
shr
insl
jl
xor
rorl
and
add
or
pop
sbb
addr16
invd
pusha
fwait
cmp
cmc
fisttps
scas
pop
into
pushf
adc
pop
adc
jnp
or
mov
mov
pusha
lcall
push
pop
pop
or
push
aam
and
in
adc
loopne
xchg
aaa
std
fisubl
xor
es
mov
jae
push
push
inc
scas
mov
scas
stc
xor
pop
test
xor
scas
outsl
out
in
sbb
sbb
lret
mov
movsb
mov
sbb
mov
or
sbb
out
lods
xchg
push
push
jb
push
loope
addb
mov
mov
iret
mov
outsl
stos
sbb
add
add
xlat
in
dec
cmp
sbb
pusha
adc
test
jnp
sbb
mov
leave
pop
mov
mov
or
aam
mov
aad
add
cltd
lods
xor
into
inc
push
movsb
fwait
stc
icebp
push
xor
jecxz
adc
call
pop
lods
sbb
pop
dec
mov
std
and
inc
pop
sbb
xor
out
lret
adc
fsubrl
push
sub
lcall
out
mov
pusha
movsl
jnp
sbb
popf
outsl
mov
cmp
sub
repz
adc
test
push
std
insb
int3
pop
jmp
mov
sbb
vunpckhpd
sub
std
mov
xor
lods
jno
jae
out
inc
repnz
ja
sub
std
fucom
adc
addr16
xlat
es
fs
adc
aaa
jp
jns
clc
and
inc
arpl
mov
push
rolb
insb
and
inc
inc
shlb
scas
mov
stc
sbb
les
sub
cmc
rolb
jmp
std
test
pop
roll
aad
repnz
cli
push
std
pop
leave
test
loope
and
cmp
push
dec
add
repz
insb
add
icebp
adc
ss
iret
jecxz
and
pop
out
mov
aam
shlb
pop
scas
dec
adc
in
adc
xchg
mov
loopne
cwtl
mov
pushf
push
jns
or
ret
fldl
rcrl
stc
cmp
ret
pop
jge
dec
adc
push
cmp
jbe
out
in
jecxz
pop
sub
cltd
scas
mov
mov
mov
icebp
jg
out
inc
cmp
adc
inc
repnz
xchg
dec
sub
xchg
into
popa
outsb
pop
xor
pop
inc
xor
cmp
mov
push
lahf
sahf
shl
mov
xor
xor
xor
pop
std
ret
and
xor
fxch
in
out
jbe
hlt
xchg
ret
xchg
xor
mov
pusha
push
cmp
test
lods
add
push
mov
cmpsb
stc
je
movsb
sbb
es
dec
ret
mov
or
push
push
dec
jle
cmp
add
xlat
imul
push
stc
mov
nop
add
mov
adc
jmp
divb
mov
ret
or
push
ljmp
or
insl
xor
mov
pop
add
loopne
pop
pusha
pop
test
sbb
mov
es
js
shl
and
lret
push
cmp
out
mov
scas
lods
or
in
fs
mov
fmull
sbb
stos
outsb
inc
mov
fs
lcall
enter
in
out
mov
in
and
sub
cmp
test
pushf
mov
add
adc
mov
jnp
inc
leave
jne
jle
in
bound
cltd
les
mov
sbb
cwtl
arpl
sub
ja
xor
sbb
xor
jbe
adc
mov
lods
add
mov
pop
adc
in
pop
test
xor
in
jge
ficomps
mov
pop
pop
imul
lods
cwtl
cs
insb
xchg
mov
mov
pop
xlat
jb
movsl
push
lcall
es
pop
cmp
push
adc
sub
xor
flds
sub
mov
test
dec
and
es
add
lods
imul
dec
lret
jg
sub
xchg
loop
mov
dec
adc
push
das
sahf
and
fcmovnb
pushf
or
fistps
sub
pop
inc
shll
mov
fs
dec
enter
cltd
cltd
enter
repnz
mov
sbb
lods
sub
inc
lahf
into
push
sbb
fimuls
fsubrl
shlb
inc
pushf
iret
sbb
mov
ss
inc
mov
cmpsl
mov
mov
mov
dec
or
lret
lds
inc
add
imul
push
xchg
xchg
push
push
mov
mov
outsb
out
aaa
lret
in
aam
jp
pop
sub
pop
push
and
pop
inc
dec
mov
xor
jmp
inc
and
pop
or
sub
sub
mov
imul
or
mov
push
inc
inc
or
and
loopne
insb
push
mov
xchg
lahf
and
inc
or
cmp
mov
lcall
aaa
inc
adc
push
shlb
and
xchg
pop
lret
test
rclb
mov
fwait
or
lcall
jmp
sahf
add
js
inc
mov
mov
nop
stos
outsl
mov
pop
sbb
mov
cld
in
xorl
jb
cmpsb
push
fisubl
cmp
and
inc
rcl
cmp
or
dec
xor
cli
cmp
repnz
xchg
adc
jnp
xchg
mov
or
shlb
cmp
push
popf
xchg
aaa
es
shlb
testb
adc
sub
mov
imul
test
add
push
js
lret
lods
adc
incb
dec
pop
dec
pop
mov
lods
out
daa
pop
xchg
outsl
scas
rolb
add
pop
pop
fwait
fs
cmpsb
mov
adc
jg
dec
aas
insb
xlat
and
sbb
add
add
scas
rcrl
xor
sub
jp
jmp
sbb
lea
stc
jle
lahf
rcll
and
js
sahf
jl
orl
sub
mov
sub
or
ds
scas
dec
faddp
sbb
add
sub
popf
or
iret
cvtpd2pi
dec
add
rcrl
jecxz
pop
sbb
arpl
mov
mov
jns
xor
push
dec
dec
inc
and
dec
mov
loop
sbb
dec
cwtl
cld
divb
push
mov
cmp
pop
pop
dec
inc
mov
push
push
push
hlt
test
fadd
fwait
data16
int
insl
or
mov
mov
rcrl
insb
or
aaa
cmp
mov
out
cmc
movb
ja
stc
cwtl
lds
jno
shll
fs
in
adc
outsl
inc
ret
sbb
fs
adc
lds
rol
mov
je
nop
xchg
out
divb
das
mov
or
bound
jno
mov
sbb
xor
and
xchg
push
mov
cmp
inc
sbbb
jbe
ret
and
fucom
out
ret
add
adc
cmp
mov
sarb
cmp
sub
lahf
push
jmp
nop
dec
and
cmc
jbe
mov
jnp
outsb
cmc
scas
mov
push
inc
ret
xchg
sub
pushf
or
xor
mov
push
cltd
ljmp
inc
mov
stos
push
enter
shlb
int3
or
in
pop
dec
fwait
lds
iret
fmuls
shlb
test
sti
fildl
or
adc
lods
mov
rcll
ret
pop
jb
cmp
sbbb
jb
in
scas
ds
inc
aaa
dec
push
dec
scas
scas
mov
ljmp
inc
faddl
push
sub
push
mov
add
push
lcall
sbb
arpl
fistpll
sub
iret
lret
xchg
cmp
or
sub
mov
int3
xchg
xchg
fwait
sub
cmp
int
jle
aas
push
int
cmpsb
stos
jae
jns
sub
shrb
xlat
push
inc
and
jp
xchg
add
and
pop
mov
stc
aad
xchg
or
inc
sbb
xchg
shll
insb
dec
notl
fcomi
push
jp
into
pop
jo
mov
out
sbb
shrl
jnp
jl
inc
decb
jmp
lock
arpl
cli
fidivrs
mov
in
lret
cld
stc
add
neg
outsb
enter
les
xor
add
xor
add
popf
mov
cwtl
cwtl
add
xor
jge
lcall
cs
aas
xorb
jne
push
sub
cltd
xchg
dec
lret
cmc
scas
lds
jecxz
lock
inc
adc
into
pop
sbb
lods
adc
rol
fstps
jne
int
int3
xchg
push
ficomps
lds
dec
enter
out
and
fsts
incl
and
ss
cli
xor
add
push
rcl
inc
fcmovb
ljmp
mov
inc
sbb
xor
sbb
push
or
fwait
lahf
add
int3
test
push
test
jmp
push
gs
rol
fcmovnbe
sbb
cmpsb
negl
nop
fisubl
xchg
xchg
test
pop
sbb
mov
gs
rorb
xchg
mov
mov
ljmp
xchg
dec
dec
decl
out
pop
jmp
lahf
pop
cltd
shlb
mov
js
mov
out
iret
insl
aaa
xor
cs
dec
jmp
mov
push
jmp
mov
dec
out
ds
arpl
dec
jmp
xor
lret
or
iret
pop
aam
jp
nop
jge
test
lods
inc
lahf
adc
xchg
dec
or
push
aam
fwait
xchg
in
xchg
pop
std
adc
xchg
pushl
jnp
loop
test
and
movsb
aam
cmp
mov
aam
pop
int3
push
ljmp
sub
mov
jg
enter
push
dec
sbb
cmp
sbb
mov
inc
sbb
pop
push
pop
sub
nop
xchg
stc
filds
dec
mov
jb
or
in
jne
test
insb
inc
xor
xor
xchg
add
fdivr
imul
pop
sbb
xchg
fxam
out
int3
xchg
xchg
je
pop
inc
repnz
inc
fnstsw
inc
mov
dec
mov
mov
xor
stos
scas
cmpsl
adc
xor
mov
xor
les
sbbl
lahf
jbe
push
add
paddd
dec
mov
iret
out
iret
lcall
pop
mov
test
add
pop
pop
pop
cs
xchg
notb
insb
jg
sub
popa
sbb
and
lock
add
test
lret
cltd
mov
lahf
daa
pop
xor
add
inc
xor
faddl
adc
loope
out
and
loop
notl
insb
sbb
addr16
not
jae
std
push
nop
sti
push
out
rolb
pushf
jl
leave
cmp
xchg
addl
mov
rclb
lahf
push
das
xchg
push
push
add
jmp
out
adc
incb
xor
nop
mov
jge
pop
and
icebp
push
push
mov
ret
mov
push
mulb
push
test
dec
lcall
test
popa
dec
ret
je
cmpsb
mov
lahf
outsb
inc
dec
and
insl
call
and
call
push
xor
adc
push
imul
mov
push
mov
imul
mov
mov
or
fbld
mov
fdivrl
mov
sbb
stc
in
in
cmp
mov
xlat
mov
mov
cmp
add
aaa
push
lock
cmc
test
dec
stc
cmp
inc
in
stc
add
jp
lds
inc
xor
scas
dec
xor
jns
xchg
cmp
inc
inc
xor
leave
aam
cmp
fstp
das
fwait
shll
push
jo
cli
xor
cs
adc
test
push
adc
or
imul
cmp
daa
in
cmp
jl
mov
bound
inc
das
dec
push
aad
in
sbb
mov
mov
push
out
pop
and
pop
dec
pop
movsb
in
ret
outsb
sbb
fs
shlb
xlat
leave
sub
add
inc
lods
xor
pop
inc
cmp
fs
sbb
fstpl
je
stc
ss
pop
push
and
call
xchg
dec
mov
cmp
out
sbbb
adc
push
push
or
sbb
push
cmp
mov
inc
xor
outsl
rclb
ss
loop
and
icebp
cmp
insb
mov
nop
mov
out
ss
in
xchg
fdivrl
adc
out
outsb
cmp
faddl
out
icebp
pushf
ret
icebp
imul
xchg
hlt
pop
lret
inc
xchg
adc
pop
inc
ljmp
add
xchg
lahf
sub
mov
sti
lock
mov
jg
push
outsb
push
imul
dec
mov
daa
aas
jecxz
mov
mov
cmp
ja
popa
repnz
and
mov
aam
jo
inc
inc
sahf
push
mov
inc
bndldx
into
repz
pop
pusha
aas
sahf
repz
inc
mov
dec
sti
call
xor
in
mov
pop
call
mov
fldl
xchg
jl
adc
mov
xchg
out
dec
arpl
jae
cmp
sahf
sub
sbb
ficompl
loopne
arpl
pop
or
cmpsl
mov
sub
lea
sub
cmpb
pop
jl
pop
movsl
aaa
push
push
jle
pop
mov
divb
push
aaa
adc
gs
insb
mulb
mov
int3
mov
test
enter
sub
pop
rclb
rolb
xlat
push
aas
out
loope
ds
cmp
sub
mov
pop
fadds
mov
mov
fistpll
stc
ljmp
sbb
outsb
negl
in
push
je
into
mov
inc
or
pop
stos
into
or
xlat
mov
xor
pop
jge
mov
and
ljmp
outsl
lds
in
mov
nop
subl
insb
push
jge
fisttpll
pop
pop
or
or
xchg
sarb
add
ficompl
xchg
dec
sar
repz
test
dec
mov
cmp
push
mov
dec
leave
and
adc
mov
cmpsl
jle
loope
aad
fs
in
shlb
fldl
mul
dec
stos
stos
fwait
hlt
mov
inc
pop
xchg
imul
pop
ds
or
cmpsl
scas
int
aas
mov
xchg
lcall
push
jno
int3
xchg
jp
decb
add
and
aad
movsl
and
popa
mov
pop
mov
popa
push
aaa
push
inc
push
mov
adc
push
fbstp
add
fcmovnbe
loopne
out
adc
pop
add
pop
aas
lods
adc
jnp
add
mov
sub
mov
adc
sub
mov
xorb
out
mov
ds
xchg
rclb
sbbb
idivb
cli
nop
and
jae
jne
std
test
sbb
arpl
sub
xor
loope
fdivr
cmp
or
add
xlat
inc
fmul
iret
in
mov
mov
or
sahf
mov
stos
paddusw
and
out
pop
lahf
cmpsl
sbb
pop
push
cwtl
ss
jae
xchg
or
insl
mov
pop
xchg
sahf
in
or
lahf
inc
mov
in
sub
push
or
mov
add
mov
mov
inc
mov
fs
push
add
aam
or
add
outsl
or
and
dec
push
cli
outsb
adc
out
adc
pop
fs
mov
cmc
lret
mov
test
in
pop
mov
repnz
or
shrl
and
cmp
shl
xor
sub
loop
jmp
mov
orb
push
add
dec
jb
lds
repnz
es
cmp
push
imul
ret
inc
mov
mov
cmpsl
enter
jno
inc
rol
or
inc
and
push
jbe
jno
xchg
into
sbb
in
leave
pop
mov
vmovaps
ret
jge
jmp
mov
test
sbb
mov
xlat
sub
jb
jmp
adc
mov
jle
fs
bound
pop
pop
mov
fcomps
dec
sbb
subps
ror
xchg
mov
sub
mov
jnp
outsl
cmp
mov
stc
sub
push
xchg
jb
not
sbb
adc
xchg
lods
cmp
inc
lcall
dec
push
rcll
mov
movsl
mov
insb
and
mov
xchg
js
inc
imul
sbb
je
ficoml
icebp
ficoml
fs
bound
mov
jbe
cmc
test
xor
pusha
pop
out
addb
push
push
mov
lret
je
mov
mov
jl
xor
rorl
mov
ret
test
xor
jp
push
dec
test
jg
ficomps
aas
gs
xchg
das
pop
xor
movsw
dec
imul
xor
je
cmp
sub
leave
jae
mov
out
xor
dec
test
sahf
ss
mov
sahf
xlat
pop
jbe
cmp
sarb
bound
jmp
call
sub
bound
push
movsb
dec
or
push
idivb
inc
and
mov
popf
sahf
cld
fsubp
push
xchg
hlt
xlat
xchg
cmpb
mov
pop
mov
mov
int3
xor
repz
cmpsl
mov
scas
mov
xchg
sbb
fsubs
push
pop
inc
ja
jae
cmpsb
add
mov
test
and
mov
lea
lods
dec
das
rep
scas
js
divl
inc
add
and
mov
sbb
mov
enter
jecxz
sub
xchg
clc
inc
pop
pushf
ds
rcrb
lods
call
dec
ja
inc
sti
fbstp
cli
mov
insb
pop
jne
ret
sbb
add
mov
sub
stos
in
push
roll
add
stos
scas
nop
fstpt
std
pop
jmp
jns
mov
jae
pop
and
adc
loope,pt
mov
lock
repnz
test
cmp
addr16
inc
ret
push
or
ficomps
repz
lret
or
sub
movsl
cmp
inc
iret
in
test
insb
inc
ret
mov
or
xchg
mov
out
cli
je
mov
jns
cmp
and
and
jo
inc
push
lods
int
leave
dec
shll
push
xor
inc
cmp
pop
mov
repz
dec
insl
xor
mov
stos
adc
inc
outsb
out
xchg
sub
mov
fsubrl
clc
int
push
scas
or
xlat
push
dec
inc
mov
mov
cmpsl
pop
stos
sbb
inc
sahf
xchg
sub
pop
ret
stc
dec
popa
jg
add
add
mov
dec
lock
adc
rcrl
sub
add
xor
in
lock
pop
and
ret
jecxz
mov
repnz
lods
and
lds
push
jp
mov
sbb
aas
popa
fdivrl
nop
push
pop
adc
mov
fildl
mov
ret
adc
mov
lcall
movlps
jl
xorb
pop
xchg
outsb
xor
push
cvtps2pd
inc
push
mov
jb
pop
addr16
arpl
aas
repnz
aaa
adc
lods
cld
aas
lods
nop
int
jnp
fisubl
cld
sub
cmp
push
push
pusha
mov
xchg
adc
ss
cmp
aas
les
push
jg
add
push
call
cmpsl
xchg
add
xchg
mov
xchg
push
xchg
repnz
mov
jmp
ja
cmp
mov
pop
push
hlt
and
jns
xor
adc
add
add
into
xorl
pop
faddp
mov
lea
cli
daa
mov
jo
imul
fs
dec
andb
js
ret
and
sbb
sub
hlt
mov
push
faddl
push
mov
and
xlat
push
ror
ret
and
or
lcall
push
or
hlt
xlat
push
jne
pop
in
ror
movsb
lods
sub
cwtl
dec
cmp
clc
mov
xchg
pop
aas
pop
mov
lock
iret
in
fists
dec
cmpl
pcmpeqb
lcall
lea
mov
notb
mov
stos
fsubs
jge
int
jne
pop
movb
mov
pop
mov
shll
mov
push
jle
inc
fildll
mov
and
pop
mov
or
xor
sbb
cmpsb
fninit
mov
lret
rolb
imul
pop
pop
addr16
loop
aaa
shlb
cmp
jnp
lahf
cmp
mov
sub
inc
mov
insb
nop
mov
cmc
stc
push
into
movsl
mov
xchg
call
xor
and
shl
push
pop
int3
xor
jbe
add
mov
loope
mov
insb
cmp
dec
daa
jecxz
mov
xor
mov
ljmp
mov
xchg
data16
sub
imul
sub
or
lea
dec
and
and
mov
push
fs
testb
bound
scas
add
sbb
sub
out
ljmp
and
daa
pop
add
stos
adc
es
push
mov
mov
mov
lret
adc
aas
push
and
mov
movsb
dec
jo
inc
repz
inc
les
clc
xchg
mov
mov
daa
fldcw
add
inc
stc
orb
push
scas
sahf
hlt
add
sub
xor
cld
popf
fistpl
pop
or
cmp
ret
sub
cmpsl
or
mov
sub
sub
cmc
iret
popa
xor
fidivrl
ss
lods
std
and
mov
sbb
fists
push
repnz
jo
xchg
decl
sbbl
cmpb
ja
and
lock
cmp
xor
das
xor
out
hlt
jmp
pop
mov
mov
pop
mov
int
pop
mov
inc
inc
sub
andl
sub
jno
rcrl
or
mov
or
mov
mov
jl
dec
xchg
lock
es
pop
lret
xor
jmp
repnz
inc
xchg
mov
push
jnp
orl
cli
scas
xchg
xchg
jno
jle
xchg
cmp
cmp
js
pop
push
adcl
mov
xchg
gs
pop
inc
lahf
dec
in
inc
testl
push
pop
sbb
and
outsl
jmp
aam
mov
lods
les
cli
test
cmpl
sbb
jno
push
mov
push
mov
mov
ljmp
outsl
test
sahf
repnz
fisubs
jmp
jge
popf
sub
xor
cmpsl
push
and
aam
in
jg
inc
jnp
jnp
jmp
pusha
inc
nop
xchg
cmp
xchg
test
mov
shl
mov
ret
inc
popa
add
fstps
shl
xor
stos
cmp
cmp
push
pop
and
mov
cmp
loope,pt
mov
mov
sub
jmp
mov
mov
jb
sbb
mov
and
or
lods
jb
jl
rol
test
jns
dec
ret
mov
cltd
mov
repz
rorl
add
cmp
fistl
arpl
popl
cmpsl
cltd
addr16
fld
adc
in
insl
mov
loope
jns
add
fnstenv
es
ja
push
sbb
cmp
mov
fdivp
add
lret
out
cmpsb
dec
sub
jmp
fstp
lahf
lcall
imul
mov
lea
inc
inc
xchg
add
xchg
mov
imul
iret
jo
hlt
fwait
fld
push
les
xchg
mov
arpl
inc
pop
lret
push
shrb
cmp
sahf
inc
push
xchg
in
and
jne
scas
inc
mov
sahf
sub
jnp
xor
outsl
dec
imul
ret
add
push
addl
jne
es
xor
jb
dec
outsl
cmpsb
push
fstps
out
or
fldt
addl
mov
es
stos
in
jp
in
dec
jno
ss
rolb
dec
shrl
lock
cmpsl
mov
scas
and
stc
push
fs
and
or
rcrl
push
das
out
and
cmpsl
cs
xchg
ljmp
aam
sbb
adc
mov
insb
loopne
cmpsl
dec
lods
in
adc
add
mov
ljmp
and
daa
dec
je
fcmovnu
and
mov
mov
call
cmp
push
iret
sti
stos
imul
push
sub
xor
cmpl
inc
xor
and
aam
and
mov
dec
testl
xor
iret
cmp
xchg
push
daa
ret
aaa
mov
stos
popa
ret
jg
xchg
mov
adc
les
dec
xlat
mov
jb
shl
in
or
xchg
mov
lret
mov
sub
addl
mov
hlt
xchg
pop
inc
cs
xchg
cmp
pop
dec
fisubl
scas
sti
push
mov
lcall
mov
aas
in
les
add
mov
cmp
dec
aam
movsb
ja
mov
dec
sbb
inc
or
xchg
in
shrb
sbb
mov
dec
jns
cmc
pushf
int
inc
js
stc
out
and
inc
jno
sbb
pop
aad
js
ljmp
push
sub
inc
cmc
cmpsb
cmp
movsl
jb
adc
out
sbb
jns
scas
mov
cmpsb
pushf
dec
push
adc
idiv
daa
shll
ljmp
dec
imul
cmp
enter
mov
mov
inc
bound
lcall
or
arpl
adc
lcall
sub
popl
loopne
cmp
repz
mov
call
gs
and
xchg
ds
mov
xor
push
adc
js
sbb
in
jmp
xchg
dec
xor
pusha
test
imul
inc
jno
xchg
dec
mov
or
mov
std
mov
jge
cmc
shl
mov
pop
sbb
cli
or
fldz
mov
in
insb
enter
je
xor
push
cld
or
xor
xchg
xor
int
pushf
in
mov
imul
mov
fsubrp
jecxz
lahf
jne
adc
sub
sbb
add
sub
fsubrs
push
ret
jge
add
leave
stos
jne
arpl
stos
mov
mov
jnp
pop
jmp
adc
lods
push
and
pop
xor
jmp
mov
xor
push
jns
or
ret
fwait
aad
ficompl
and
push
ret
and
clc
jg
pop
lock
aam
xchg
mov
add
jo
adc
xchg
daa
adc
mulb
xor
jno
dec
add
aad
dec
dec
pop
cmp
jle
push
pop
mov
std
testb
fsubrs
inc
jecxz
mov
jo
lcall
jmp
push
insb
ret
jo
mov
lods
or
imul
xor
xchg
test
out
or
xor
fdivs
outsb
and
repnz
shlb
and
inc
push
pop
mov
jge
inc
jae
idiv
pop
or
iret
jne
gs
nop
mov
dec
ss
mov
pop
mov
mov
sub
mov
push
lods
adc
jge
inc
sarb
icebp
sbb
xchg
lods
dec
les
mov
cltd
lds
rcr
je
mov
fwait
and
cmpl
stos
scas
or
jne
ljmp
lea
aaa
mov
adc
and
cmp
lods
dec
adc
dec
das
out
add
into
imul
imul
cwtl
decl
popf
scas
add
iret
add
jp
adc
daa
sar
stc
mov
iret
adc
sub
adc
xchg
mov
inc
inc
subl
insl
xlat
sbb
arpl
les
movsl
mov
lea
inc
int3
dec
pop
fldt
cmp
roll
ljmp
in
notl
lcall
jmp
sub
int3
out
mov
push
xor
mov
dec
or
fabs
xchg
xchg
mov
pop
out
xor
jae
loop
cmp
adc
lcall
fwait
clc
daa
lahf
inc
cmp
lea
sbb
cwtl
lock
adc
out
out
imul
stc
mov
shr
out
fstpl
xchg
add
test
insl
dec
adc
rep
shl
xchg
fildll
mov
push
into
jne
sub
mov
out
in
sbb
cmp
fcmovu
pop
inc
in
cltd
lods
insb
out
adc
movsb
arpl
ja
push
push
fs
adc
mov
pusha
jge
and
and
add
pop
jo
jg
jne
inc
rorl
sbb
add
into
jne
jns
scas
inc
sub
cmp
jo
cmpsl
pop
xchg
pushl
icebp
xchg
inc
test
dec
gs
fs
cmc
popf
addr16
inc
cmpb
lret
mov
jg
imul
mov
insl
push
inc
cmp
adc
inc
pop
shl
clc
cmc
push
test
fdivl
orl
and
xorb
jmp
or
pop
inc
push
cmp
aaa
scas
loopne
pop
and
stos
cmp
fisubl
xchg
inc
jne
fwait
nop
jbe
jl
aas
lea
mov
or
sbb
test
clc
fstpt
cmpsb
mov
rcrb
ror
arpl
sub
jmp
xor
jecxz
push
push
lods
xchg
rorb
pusha
sarl
pop
test
adc
in
and
mov
cld
add
xchg
and
jb
std
enter
shll
out
pop
aaa
lahf
lahf
loope
sbb
and
xor
cmp
lret
sbbl
or
mov
sbb
lahf
mov
pop
test
ss
into
cmpsl
add
pop
pop
or
push
sahf
ja
mov
mov
cltd
or
push
nop
fdivp
int3
or
popa
dec
xchg
lcall
inc
cli
jae
xlat
xchg
cmp
daa
sbb
mov
cmp
push
arpl
jne
movsl
pop
mov
push
sbb
aas
movsb
jbe
xchg
lods
cli
idivb
bts
pop
mov
lahf
pop
imul
xchg
jle
jp
sbb
shlb
pop
lret
lea
add
sub
dec
ret
cmp
or
sub
leave
icebp
sub
jo
add
int
xor
insl
movsl
pop
push
adc
stos
push
repnz
mov
push
rorl
imul
or
or
cli
mov
popa
mov
push
xchg
pop
pop
sub
xchg
mov
push
cmp
sti
adc
mov
add
nop
and
in
fsubrp
sub
jecxz
sub
push
and
fdivl
les
aad
pop
adc
scas
mov
stos
mov
bound
iret
push
dec
pop
or
mov
imul
cmp
int
mov
fwait
sbb
xor
cld
insl
scas
push
popf
insl
mov
jnp
adcl
mov
mov
test
cmp
cmpsb
sbb
aad
jns
fdivrs
xor
in
sbb
into
pop
inc
scas
mov
xchg
sub
push
inc
repnz
mov
ja
jl
sahf
les
jno
cltd
mov
movsb
xorl
addr16
pop
adc
dec
inc
cmp
test
insl
cmp
aad
pop
sub
jle
mov
cmp
daa
jle
xor
stos
push
and
or
dec
or
inc
jmp
mov
aas
pop
sbb
jne
cmp
jp
sbb
subps
scas
jo
mov
or
inc
xchg
pop
cmp
mov
jl
mov
dec
rolb
mov
or
sbb
push
sub
js
sub
mov
outsb
adc
rcrl
mov
jae
add
shlb
test
out
int3
xchg
mov
cmp
call
stos
sub
and
outsl
popf
mov
stos
mov
jl
fistpll
pop
push
pop
stc
inc
out
sub
push
mov
lds
mov
shll
fwait
dec
std
js
xor
mov
adc
jge
aaa
lods
add
pop
and
movsl
out
in
jp,pt
loopne
inc
das
lock
mov
pop
inc
aaa
fwait
scas
jne
and
pushf
fwait
push
into
mov
mov
xchg
addr16
test
jecxz
shrb
dec
mov
add
mov
lahf
iret
call
push
lcall
sub
xchg
je
add
arpl
mov
or
jae
lds
pop
jmp
and
push
push
sub
mov
xor
dec
adc
dec
leave
fbstp
mov
pop
jle
sub
mov
outsb
sbb
pop
pop
jnp
repz
cmp
icebp
mull
ret
sbb
in
jp
fisttps
in
xchg
xchg
or
inc
sti
out
scas
fsubs
cwtl
std
movsl
mov
cs
in
jge
es
bound
outsl
repz
sarb
cmpsb
add
imul
call
and
xchg
outsl
xacquire
sub
push
mov
inc
outsl
fcompl
test
cmp
mov
or
xchg
jbe
and
jb
test
in
js
gs
stc
sar
jnp
aas
push
jmp
fdivrs
sbb
dec
jl
outsl
add
sub
pusha
sbb
dec
ljmp
outsb
int
mov
sub
das
shlb
sub
jnp
cltd
push
push
cmp
es
iret
inc
movsl
jmp
adc
ja
dec
adc
mov
inc
je
jg
mov
xor
push
jle
enter
pop
pusha
and
mov
arpl
cmp
loop
xor
hlt
xor
ja
mov
jl
push
xchg
sbb
mov
loope
iret
pop
rcr
mov
add
inc
jno
cmp
mov
add
scas
xor
xor
push
ds
lods
fstpl
add
movsb
add
or
loop
iret
sbbb
addr16
or
inc
jns
into
je
jno
mov
iret
xlat
push
nop
and
mov
fisttpl
push
incb
dec
ds
and
negb
aad
subl
mov
adc
in
je
lea
out
xchg
fsubrl
add
xchg
repnz
adc
cs
call
orl
stos
adc
cmp
add
and
ret
inc
pop
bound
pop
lcall
fxch
jae
mov
jg
jecxz
mov
cmpsl
sbb
mov
enter
pop
fstl
mov
xchg
sbb
cwtl
mov
aam
cmpsb
mov
ja
std
push
pop
mov
sbb
mov
in
mov
ja
adc
sar
inc
roll
insb
pop
imul
xchg
jecxz
pop
loopne
pop
cmpsb
jns
push
std
shll
in
ja
push
push
dec
std
sub
subl
mov
push
fnstcw
hlt
insb
xchg
and
jge
inc
lods
stc
les
subb
jle
push
push
xchg
sti
and
cmp
ret
dec
scas
insl
test
rclb
out
mov
push
mov
lret
nop
imul
movsb
iret
dec
add
adc
push
push
dec
jp
std
mov
into
jge
jle
jnp
sbb
pop
mov
dec
cmp
cltd
sub
cmp
ljmp
jl
in
rcll
ror
cwtl
cld
dec
data16
xor
xchg
mov
fsts
adc
lods
sahf
push
movsl
div
mov
push
fdivrp
inc
dec
dec
ja
imul
iret
call
push
fimuls
inc
lds
arpl
clc
push
cltd
mov
inc
lods
scas
add
sbb
bound
aad
xchg
pop
xchg
cld
cmp
les
adc
sbb
and
fnsave
mov
add
jle
sbb
jno
adc
jp
loop
in
jecxz
stc
in
push
lahf
shrl
in
cmpsb
mov
xchg
mov
push
ret
nop
jbe
sbb
rorb
jb
cmp
ret
dec
push
inc
cmp
adc
push
repz
pop
repnz
or
inc
or
sbb
dec
cmp
mov
dec
fs
pop
cmp
mov
je
cmp
inc
xor
aam
sbb
add
cmpsl
pop
and
arpl
add
push
cmpsl
pop
js
mov
add
mov
icebp
adc
scas
sub
xchg
call
mov
push
sahf
push
gs
mov
cmp
push
push
inc
and
rolb
outsl
sbb
das
fstps
mov
shl
dec
aam
test
and
cltd
pop
push
rclb
cmpsl
push
or
icebp
hlt
inc
sbb
inc
clc
jmp
popa
mov
mov
jle
sarl
sbb
cmpsl
aas
lcall
sub
xor
hlt
aaa
lret
adc
mov
lds
fdivrl
out
mov
stc
sti
test
sbb
jmp
data16
xor
push
and
xor
in
mov
rol
sub
inc
outsb
xchg
xchg
or
xchg
fdivr
addr16
or
push
repnz
pop
xchg
jge
jmp
inc
popf
push
lods
repnz
js
rcrl
mov
and
decb
daa
mov
or
mov
cmc
adc
adcb
mov
xchg
in
cld
or
aam
jl
jp
cmp
in
test
arpl
sbb
cmp
sub
jle
orb
and
cmc
hlt
das
mov
push
mov
sar
movsb
jns
in
mov
xchg
and
and
fs
rcrl
imul
fwait
cmc
ja
jnp
aaa
inc
das
sub
adc
push
xchg
pop
cmp
in
add
cmp
cmp
ss
push
test
dec
lods
paddusb
ror
sbb
call
pop
push
in
icebp
insb
dec
mov
mov
hlt
fildl
aad
xor
push
sbb
clc
adc
add
scas
dec
dec
xlat
sub
test
inc
test
fs
addl
test
push
movsl
dec
adc
fdivrs
mov
push
or
cmp
ljmp
stos
xor
inc
xchg
rorl
or
fmull
repnz
lods
xchg
cld
mov
aam
xchg
mov
jnp
fcmovne
jl
test
sbb
cmp
es
cmc
jmp
cmc
mov
mov
cmpsb
rcrl
xchg
adc
je
jne
or
into
mov
mov
sub
not
fldl2t
jnp
fistpl
pop
sub
adc
testl
dec
add
push
mov
ja
mov
jl
mov
mov
fstps
sar
or
lahf
stos
pop
pop
inc
add
lds
jmp
cmp
dec
into
enter
addr16
movsl
sarb
cmp
lret
mov
push
xchg
inc
mov
mov
fsub
loopne
fnsave
push
cli
jge
adc
aas
lret
xchg
xchg
shr
aaa
js
push
push
mov
mov
add
icebp
stos
adc
test
movsl
mov
sbb
ds
lret
in
fistpll
pop
int3
cmp
jno
outsl
mov
inc
jnp
and
clc
add
jge
ss
call
add
test
ret
adc
jge
testl
xchg
push
shr
out
aas
daa
mov
dec
cmp
lds
fs
insl
jb
cli
mov
roll
jns
std
and
and
and
or
inc
aas
mov
sahf
xchg
push
pop
lods
cmp
loopne
cmpsl
jb
mov
or
inc
push
mov
xchg
mov
pop
mov
dec
sub
rol
iret
rolb
inc
pop
push
out
cli
pop
ljmp
out
fs
cs
loopne
xchg
data16
cmp
insl
out
in
cwtl
testl
dec
pop
push
test
mov
scas
test
in
jmp
jl
fisttpl
movsl
cmp
push
data16
mov
outsb
and
and
int
fidivl
pop
fidivs
sbb
cmp
in
push
inc
push
xchg
adc
push
je
ljmp
outsl
xchg
or
mov
pop
inc
mov
daa
lock
push
loop
pop
add
xchg
out
ds
div
scas
push
ja
add
ljmp
daa
mov
mov
xchg
les
call
test
inc
and
pusha
push
daa
pop
loop
inc
int3
sub
arpl
rcll
sbb
movl
nop
pop
in
push
in
prefetch
and
es
fisubrs
iret
imul
lock
pop
lret
sti
xor
les
or
add
mov
out
popf
int
add
outsl
jb
pop
cmp
xchg
inc
xchg
and
lods
in
hlt
cmpsw
mov
pop
and
ret
pop
add
mov
shrl
inc
xor
mov
mov
movsb
xchg
sbb
stos
sbb
jmp
mov
mov
cmp
cmp
sub
inc
mov
mov
mov
sub
repnz
pusha
mov
imul
or
adcl
lret
shll
inc
imul
into
fs
dec
inc
ss
out
sbb
sbb
and
and
xchg
adc
dec
dec
xlat
fistps
adc
sub
pop
or
test
jb
inc
adc
scas
push
lods
or
mov
adc
mov
add
sub
or
or
push
inc
or
stc
and
push
pop
jge
inc
push
ljmp
ljmp
mov
outsb
sti
or
push
mov
mov
adc
adc
xchg
jecxz
jo
and
test
pushf
inc
or
or
test
out
inc
ds
dec
mov
add
dec
mov
leave
stc
mov
leave
and
pop
out
sqrtps
pop
xor
sub
pop
clc
or
dec
push
and
idivb
movsl
inc
adc
in
jg
dec
addl
add
sub
jge
pop
push
movsb
popl
test
fadds
outsb
call
inc
mov
sbb
pushf
pop
push
cli
or
les
mov
cltd
daa
in
ja
hlt
pop
adc
das
int3
mov
mov
shlb
and
addr16
shrl
mov
cmp
rolb
pop
cli
lock
js
sub
cli
scas
rcrl
frstor
ljmp
inc
lret
mov
lods
mov
cmp
sub
pop
lods
repz
add
int
push
push
insl
cmp
lods
cmp
jb
xor
insl
mov
jg
mov
mov
icebp
adc
dec
mov
jo
inc
inc
mov
pop
inc
in
jae
mov
mov
jl,pt
rol
sbb
into
das
jg
mov
testb
sbb
fmuls
pop
jp
std
mov
dec
jb
inc
sbb
sbb
sub
loop
call
push
outsl
lods
dec
insl
add
testb
into
mov
xor
adc
aas
dec
jne
insb
mov
add
pop
pushf
add
mov
dec
xchg
les
imul
or
dec
sub
or
sub
mull
mov
jns
loopne
les
sub
push
lret
mov
mov
nop
ljmp
mov
jnp
aam
sbb
les
das
and
pop
sbb
ret
sub
subl
jmp
xchg
stos
testb
mov
adc
cld
push
pop
mov
mov
in
test
addl
mov
jb
xchg
lea
cmp
jb
push
pushf
rcll
cmpsl
fsubl
pop
inc
push
push
jge
push
cwtl
xchg
push
push
ret
xor
jbe
xchg
roll
mov
inc
std
jnp
test
xchg
pusha
inc
js
jmp
sbb
jne
jg
add
mov
out
xchg
movsl
bound
mov
sub
adcl
xor
adc
lods
adc
adc
movsb
lock
inc
enter
mov
cmpsb
mov
xchg
push
mov
mov
mov
push
addb
xor
movb
add
adc
sbb
sbb
cmc
dec
into
int3
ja
lahf
imul
jl
sar
cmpsb
push
xor
aam
sti
mov
ds
pop
dec
cmp
push
mov
mov
mov
cmp
sbb
cmc
mov
fcmovnu
jo
push
negl
xorb
push
dec
fidivl
movsl
mov
mov
mov
es
cmpsl
outsb
popa
sbb
mov
movb
cmp
xor
push
fs
and
jmp
jne
and
ljmp
inc
ffreep
mov
lahf
adc
dec
add
sub
dec
pop
scas
aas
dec
js
mov
sahf
and
jmp
fmulp
ror
loope
jmp
jbe
aas
cs
int
or
aam
jne
push
punpckhdq
stos
in
mov
jbe
xor
dec
and
test
pop
inc
jb
cmpsl
jns
xlat
stos
sbb
mov
std
jmp
cmp
call
xchg
stos
pop
or
aas
jb
cmp
inc
iret
add
sbb
sub
andb
fucomip
xchg
jmp
xor
jo
and
lds
sub
jo
xchg
cmp
insb
rcl
mov
xchg
and
sub
mov
out
bswap
sub
mov
xlat
lods
mov
je
addr16
and
mov
fs
push
pop
lock
out
sti
lret
rcll
or
int3
ret
hlt
mov
aaa
mov
imul
mov
xchg
out
add
les
ss
repnz
add
jb
div
push
subb
test
lea
mov
inc
outsl
arpl
ljmp
ds
int
mov
jnp
xor
cli
lods
cmp
popa
fmull
push
jno
push
pushf
call
add
jns
jne
mov
mull
mov
es
dec
jno
ja
inc
fwait
arpl
cmc
loop
ret
out
imul
and
and
stos
mov
clc
fs
inc
imul
shlb
push
cmp
mov
popa
cmc
push
jp
adc
dec
add
loop
xchg
cs
push
add
movsl
idivb
les
jbe
jp,pt
negl
cmp
add
mov
mov
idivb
fs
sbb
stos
subl
dec
scas
or
in
cmpb
pop
fistpll
sub
ret
pop
xacquire
mov
mov
ret
push
xor
mov
sub
lcall
mov
adc
movsl
mov
jmp
jp
enter
dec
leave
jns
call
and
mov
or
sbb
inc
mov
test
dec
mov
inc
fisttps
pop
fwait
add
xchg
cmpsl
sbbb
push
xchg
mov
loop
movsl
stos
movsb
or
mov
adc
xor
or
xchg
sub
lock
and
cmp
adc
iret
mov
push
jg
mov
jbe
scas
les
xchg
int3
fcoms
or
ret
push
adc
testl
ja
mov
sub
adc
in
or
adc
and
cmpsb
fstpt
out
in
or
test
and
out
xchg
xor
clc
mov
mov
pop
push
mov
push
lret
cs
jnp
xchg
push
ds
inc
push
sub
addr16
push
pop
xor
inc
pop
outsb
addr16
jg
dec
pusha
popf
ret
scas
lods
call
test
xchg
xor
dec
mov
and
cmp
loop
fisubrs
in
iret
fadds
sbb
or
push
clc
lods
sbb
loopne
hlt
pushf
add
mov
out
add
insb
lcall
dec
cs
or
sbb
pop
test
dec
cmp
xchg
fisttps
mov
lds
sub
mov
push
icebp
add
jns
hlt
or
dec
push
out
mov
js
add
or
mov
pop
sbb
fisubrs
xor
lcall
sub
in
std
mov
xorb
js
popf
scas
xor
movsl
inc
jge
jne
mov
xchg
jo
mov
jno
mov
mov
inc
xchg
mov
addr16
nop
js
inc
out
ret
mov
sub
lahf
stos
push
sub
push
inc
and
and
enter
jo
sub
test
inc
mov
fidivrl
add
je
pushf
mov
scas
sub
fidivl
jo
pop
int3
push
xchg
in
sbb
in
test
jb
push
das
xor
cmp
and
push
lods
jg
mov
push
fisubl
and
hlt
dec
arpl
fcoms
sub
push
mov
outsl
in
clc
rcll
cmp
in
pusha
adc
pop
lcall
and
cmp
lahf
cmp
movsb
in
or
js
push
fldl
jle
shlb
push
mov
addr16
pop
or
imul
jecxz
out
mov
stos
xor
inc
lcall
repz
stos
pop
ficompl
das
lds
push
ror
jle
pop
aad
pop
sbb
sbb
popa
push
xchg
dec
notb
push
or
jle
mov
pop
adc
je
cmp
adc
not
dec
in
jg
sbb
je
icebp
sub
xor
call
cmp
leave
test
mov
jne
adc
and
xchg
aaa
lods
es
push
iret
add
and
push
repnz
cmp
add
and
pop
roll
rorb
sbb
dec
adcl
icebp
sbb
in
push
dec
or
xor
dec
test
inc
insb
loop
les
jbe
mov
sub
mov
outsl
loop
cmp
in
popf
mov
sbb
mov
cwtl
mov
cmp
cmp
push
int
in
mov
jb
jg
inc
sbb
imul
lods
mov
aas
aam
pop
cmp
arpl
sub
jg,pn
mov
lahf
mov
mov
adcl
cmp
jnp
movsb
icebp
cltd
inc
push
outsb
sub
js
and
xor
call
dec
lock
outsb
adc
cmpsl
cmp
inc
jle
xor
lea
inc
sub
jnp
xor
fs
xorb
add
sti
sbb
sub
mov
pop
sub
cltd
mov
mov
cwtl
test
mov
mov
rorb
jns
int
imul
mov
mov
or
xchg
dec
ret
mov
js
jmp
inc
inc
loop
pop
fists
imul
push
push
xchg
xchg
cmp
jo
xor
movsb
lahf
repnz
arpl
jno
cmp
ss
cs
lock
out
inc
add
clc
stc
stos
lds
push
push
or
dec
mov
insb
push
inc
xchg
jge
faddp
or
repz
icebp
and
js
mov
dec
std
aas
lods
push
pop
jmp
cmpb
push
adc
cld
mov
mov
lahf
push
and
jle
loop
jbe
fsubrs
adc
aaa
jge
push
xor
mov
negl
fbld
ja
aad
push
adc
push
imul
or
out
and
ret
fdivrs
icebp
das
in
push
adc
sub
push
dec
cmpsb
ja
fwait
adc
add
and
xor
fldcw
pop
adc
push
and
sub
ds
push
mov
andl
xor
or
push
ja
aam
or
mov
cmc
sub
movsl
and
or
pop
popa
sbb
mov
std
test
push
mov
and
mov
mov
xorb
adc
and
cmp
mov
inc
jne
jmp
fsubrl
rcrb
iret
setae
inc
jmp
mov
xor
mov
stos
test
mov
ficompl
outsl
lds
lods
pop
xchg
sti
cmc
cmp
leave
out
mov
popf
add
stos
adc
fildl
sbb
xor
pop
xor
mov
sbb
cmpl
fdivrs
mov
add
ljmp
sbbb
in
mov
fadds
xor
mov
pop
lcall
dec
repz
jmp
mov
imul
cltd
jnp
sbb
roll
iret
not
cs
or
inc
fnstenv
pop
pop
subl
sbb
sbb
dec
cltd
fs
jecxz
ret
loope
mov
push
vucomisd
sarl
and
out
out
jl
in
xchg
inc
in
and
daa
sub
andb
mov
js
clc
repnz
ret
mov
mov
pushf
push
sarl
les
push
dec
jecxz
pop
sbb
loop
lret
popf
rcrb
xchg
add
sbb
icebp
cmpsl
call
pushf
sbb
les
aad
aas
out
mov
fs
push
or
outsl
das
sbb
inc
int3
and
aas
sbb
in
inc
xchg
in
jae
and
out
sub
sub
clc
hlt
out
jae
movsl
sbb
pop
adc
out
shlb
lds
stc
push
lock
fisttps
cmp
jl
cmp
sub
add
dec
cmp
xor
lock
sti
mov
pushf
test
outsl
scas
sbb
movsl
xchg
lret
std
ds
fcompp
shll
jp
cltd
mov
out
and
aas
jle
mov
jecxz
or
pop
push
pop
jns
add
aas
out
lret
mov
xchg
pushf
popf
ljmp
es
pop
rclb
mov
stos
popf
sbb
stos
test
imul
mov
ret
mov
dec
test
fsts
add
adc
nop
or
mov
filds
cli
insl
in
repnz
sub
mov
cmp
mov
scas
fneni(8087
mov
and
daa
aam
outsb
pop
mov
jo
and
ror
mov
xor
subl
imul
mov
adc
ret
add
cwtl
mov
sarb
pop
and
daa
sti
sbb
loop
jl
lods
imul
pusha
mov
out
push
mov
js
in
mov
aaa
jo
jae
mov
addr16
popa
es
mov
mov
dec
and
or
pop
lret
inc
outsl
loop
inc
stos
add
in
pop
retw
ss
jecxz
bound
pop
mov
cli
pop
lods
push
std
iret
add
jp
rolb
push
divb
mulb
xor
fstpl
and
dec
jecxz
pop
outsl
daa
ds
cmp
daa
imul
push
js
mov
fidivl
adc
inc
sbb
cmpsb
ss
outsb
dec
push
xchg
mov
scas
and
pop
mov
mov
neg
push
pushf
mov
mov
fsub
mov
icebp
sbb
shlb
and
mov
xchg
out
add
mov
gs
cmp
aad
stc
push
cmc
add
clc
scas
imul
ja
stc
inc
xor
subl
sbb
mov
mov
aas
cmp
jecxz
test
jecxz
outsl
inc
mov
xchg
jle
in
xchg
cmp
push
mov
sarb
shr
adc
sbb
pop
in
lahf
mov
xor
add
sub
sbb
insl
pop
and
sbb
sub
mov
mov
and
sarl
in
ret
clc
notb
and
add
add
jg
mov
cwtl
hlt
sbb
cmc
ret
mov
pop
or
out
imul
sbb
or
enter
faddl
dec
push
adc
adc
das
dec
clc
sub
fdivl
jg
cltd
scas
popf
push
mov
dec
je
xchg
ret
xor
test
nop
das
pop
les
xchg
testl
ss
pop
test
jp
test
jo
xchg
inc
jg
or
pop
mov
lea
and
push
xor
jns
insl
mov
sub
lea
stos
cld
test
fstpt
sub
pusha
out
out
test
pusha
sahf
mov
xchg
lds
mov
idivb
mov
pop
pop
xor
fisubrl
sub
add
adc
cmp
incl
xlat
out
insb
xchg
xchg
imul
scas
loopne
add
outsb
dec
adc
pop
cli
nop
push
push
test
bound
mov
sub
sti
repz
or
rcl
adc
repz
pushf
jne
in
mov
inc
pop
xorl
das
pushf
data16
movsl
test
or
jmp
aas
mov
cmp
fidivrs
lds
xchg
cmp
ret
jno
sahf
cmp
jmp
mov
cmp
push
pop
ret
pop
arpl
sbb
sub
add
add
adc
dec
jecxz
mov
dec
pop
rorb
xchg
hlt
cmp
mov
cltd
mov
add
mov
and
rcl
cs
dec
xchg
enter
orl
shrl
clc
sbb
sahf
rcrb
aas
mov
fldl
adc
jp
int3
jne
js
lock
add
ret
and
add
and
ds
dec
je
cmp
mov
jno
mov
fwait
cmp
test
leave
inc
mov
insl
cli
pop
jge
jb
jo
outsl
sti
mov
stos
xchg
sbb
adc
cmpb
push
cmpsb
sbb
das
cmp
pop
push
ss
jno
xchg
fsubr
mov
lds
push
pop
or
push
adc
hlt
inc
test
pop
mov
in
sub
das
push
jb
faddl
jecxz
sub
sbb
out
addr16
push
or
ss
stos
jle
inc
xlat
call
dec
test
std
loop
ds
fldenv
fldl
jb
repnz
bound
inc
pop
adc
pop
cmp
mov
pushf
enter
mov
or
daa
movsb
mov
mov
ret
pop
outsb
loopne
inc
pop
shl
rolb
jo
clc
adc
std
imul
mov
int3
cmp
adc
fstps
lock
daa
mov
ficompl
loop
imul
jmp
shlb
cmpsb
jmp
popa
jne
adc
test
mov
das
dec
lret
aam
out
mov
jecxz
jnp
xchg
gs
dec
add
dec
mov
sahf
leave
mov
push
insb
cld
das
pop
es
and
mov
pop
fsubrs
lahf
sub
pop
xchg
lods
mov
and
mov
out
jmp
cmp
popf
in
sbb
lods
xor
or
adc
cld
inc
sub
fidivrs
jae
cltd
push
je
pop
add
insl
sbb
inc
lcall
loopne
fcoml
xor
fldt
pop
js
fwait
add
int3
jg
and
inc
loop
mov
imul
and
sub
and
lock
jl
cmp
ja
pop
xchg
pusha
or
jns
ret
sbb
mov
test
cwtl
in
mov
test
test
test
das
pop
mov
push
jge
cmpsb
mov
test
sub
mov
scas
xchg
mov
stc
ret
and
iret
pop
out
lods
lock
int3
lds
sbb
xlat
je
add
push
mov
outsb
test
inc
stos
leave
inc
mov
imul
lods
scas
cwtl
testl
xchg
mov
xchg
out
xchg
jne
mov
rolb
jo
xchg
ss
popf
mov
gs
cmp
mov
inc
dec
loope
subb
xchg
add
xchg
pop
jnp
and
out
mov
adc
mov
mov
add
fisubs
imul
push
cmpsb
aas
leave
dec
imul
mov
xchg
mov
cltd
mov
inc
xor
push
mov
daa
das
add
pop
sbb
mov
lods
pop
or
scas
sub
push
xchg
mov
loop
mov
adc
jbe
mov
cmpsb
jbe
dec
pop
cmp
cmpsb
push
lcall
repz
add
sub
xchg
int3
cmp
push
lea
pop
outsl
stc
mov
push
test
push
daa
and
movsl
nop
and
lds
loop
add
lods
dec
adcb
out
insl
jmp
adc
jmp
push
es
pop
dec
outsl
ror
movsl
mov
push
sub
add
mov
sub
movsl
ret
or
xor
out
mov
int
into
aaa
xor
mov
aas
aam
mov
gs
jnp
stc
xchg
mov
scas
repnz
xor
loop
xchg
inc
aaa
mov
repz
pusha
xchg
clc
push
xchg
loop
popa
and
daa
or
xchg
outsl
rcr
loopne
icebp
call
lods
mov
fistpll
imul
enter
dec
jecxz
or
xor
jns
cld
inc
push
push
jmp
xchg
in
and
inc
rep
sbb
mov
jbe
mov
mov
jle
pop
push
xchg
pop
xor
add
mov
dec
lds
call
insb
pop
popf
pop
or
shlb
inc
sbb
cmpl
rclb
loope
mov
loopne
pop
sarl
sub
inc
and
mov
xchg
inc
mov
sbb
pop
out
mov
mov
pop
in
lret
sbb
ds
in
push
shll
addr16
outsb
push
je
lds
push
js
inc
mov
mov
dec
lock
fimull
push
jno
xorl
and
adc
mov
or
pushf
rep
fistpll
fistpll
mov
aaa
mov
xlat
add
add
arpl
pop
repz
xor
lret
jbe
incb
int3
add
stos
mov
pop
insl
daa
incl
aam
cli
or
pusha
xor
enter
adc
scas
popa
inc
jb
mov
xchg
daa
and
sbb
int
inc
sub
or
sub
pop
icebp
pop
cmp
scas
cwtl
mov
dec
outsb
cs
scas
sbbb
xchg
leave
dec
xchg
aam
test
cmp
or
lods
sbb
mov
mov
xor
les
jns
fidivl
pop
outsl
mov
js
xorl
adc
push
arpl
into
imul
mov
test
dec
cwtl
mov
sarl
and
xlat
outsb
xchg
movsb
xor
iret
push
divb
test
test
sbb
mov
hlt
mov
stc
mov
lcall
dec
fidivrs
ljmp
fcoml
mov
mov
push
and
or
mov
fcmovnbe
xor
sbb
sub
adc
fimuls
dec
cld
push
adc
dec
inc
popf
mov
and
sbb
mov
push
xchg
in
loopne
mov
loopne
aad
pusha
mov
mov
pop
pop
jb
test
aam
jge
andl
xor
test
aam
jne
xor
pushf
inc
cmp
xchg
xchg
sbb
scas
aad
insb
insb
add
rorl
mov
aad
cmp
or
mov
cwtl
in
adc
push
fisubrs
xor
loop
scas
pop
xor
insb
push
dec
xor
pop
mov
fs
jnp
je
int
mov
ja
add
jb
fbstp
lcall
jmp
into
add
imul
adc
jnp
xchg
push
pushf
pop
xlat
mov
xchg
xchg
add
sub
mov
aam
jo
imul
dec
stos
jo
call
lods
bound
adcl
insb
mov
roll
push
mov
ficompl
mov
mov
lea
xor
and
aas
mov
mov
xchg
sbb
mov
cmp
mov
fs
cmp
scas
add
dec
sbb
mov
icebp
xor
mov
leave
adc
rolb
lods
xchg
sbb
xchg
mov
jmp
movsb
stos
icebp
jl
jecxz
iret
sub
das
or
mov
or
push
jle
jle
cli
pop
cli
ds
cmp
push
rolb
in
repnz
dec
inc
mov
push
xchg
mov
roll
and
data16
xchg
lods
sbb
xor
mov
lds
popa
call
shll
mov
movsl
insb
mov
jmp
imul
pop
jb
adc
cmc
ljmp
fs
into
testl
fucomi
xor
mov
jno
jmp
nop
dec
ljmp
in
xor
cmp
cmpsb
cmp
int3
inc
jbe
pop
inc
sar
mov
pop
icebp
pop
outsl
sub
mov
mov
jb
xor
fisttps
sti
dec
dec
sti
cmp
fucomip
inc
pop
xor
push
movsb
jecxz
and
out
inc
dec
aaa
shr
cmp
push
and
push
daa
mov
jo
pop
xor
sub
stos
xor
xchg
jg
xor
js
in
jl
les
inc
scas
stos
jg
xor
scas
sbbb
jp
lock
lahf
nop
fisttpl
lcall
lods
mov
movsb
ret
cs
mov
loope
xchg
lret
lahf
cmc
mov
incb
push
shrl
popf
jl
aas
test
popa
int
and
jecxz
mov
ds
mov
cmp
push
mov
pusha
or
int
lcall
adc
loope
mov
imul
aas
fnstsw
sbb
pop
xchg
lret
sahf
pop
dec
out
into
and
clc
cmpsb
lds
mov
xchg
das
jl
mov
jns
orb
dec
es
leave
jbe
fwait
imul
ljmpw
dec
insl
mov
cmp
cmpsb
mov
movsl
lret
outsl
sbb
nop
pop
lahf
rcll
jno
mov
pop
xchg
icebp
insl
dec
loope
cmp
fs
inc
pushf
cs
push
mov
sbb
stos
andl
mov
subb
ljmp
sbb
pop
in
in
mov
sub
mov
add
gs
scas
sub
inc
je
dec
mov
dec
inc
inc
push
sub
push
imul
push
fwait
stos
out
inc
add
les
pop
xor
aaa
mov
fidivrs
and
mov
sub
shl
pop
cmpsb
aaa
sahf
cmpsb
jp
enter
cmp
fstps
stos
mov
xor
sbb
movsb
rcrb
dec
cltd
fs
ss
mov
cmp
ljmp
adc
daa
and
sbb
lret
mov
inc
mov
ds
mov
mov
loope
xchg
mov
cmp
cmpsl
into
mov
add
pusha
xchg
mov
adc
and
inc
pop
push
test
inc
jmp
or
sbb
clc
sbb
cmp
nop
sub
imul
mov
out
push
fdivrl
subb
pop
clc
lahf
push
xchg
pop
sbb
inc
int
push
fdivrl
inc
cmp
sbb
popf
es
rol
mov
mov
sub
repnz
sarl
je
jp
jecxz
fnsave
outsl
je
cmp
lea
xchg
mov
or
outsl
xchg
into
add
jnp
pop
push
sub
or
imull
xchg
je
cmpsb
aas
loop
and
pop
mov
sbb
addb
leave
leave
adc
repz
lods
scas
leave
filds
enter
pop
mov
sbb
ljmp
rcr
int3
fcmovne
outsb
mov
leave
xlat
popf
imul
adc
sbb
push
fwait
test
fcoml
jl
insl
stos
push
or
rorb
cmp
pop
out
mov
xchg
mov
jle
fidivl
and
sub
lahf
test
xor
jbe
js
sub
repnz
mov
push
pop
adc
sbb
in
cli
jno
jmp
sub
dec
xchg
fstpl
and
jecxz
pop
out
cmp
fwait
dec
jae
push
push
cmpsb
sti
lcall
hlt
lret
std
iret
or
shl
loop
inc
cmp
mov
mov
push
sub
xchg
pop
sbb
fiadds
mov
jb
popa
shl
pop
cmp
cmp
jns
cmpsl
leave
pusha
ret
stos
test
rolb
push
faddp
popf
cld
sbb
ret
jo
mov
inc
mov
insb
mov
dec
andl
add
ljmp
inc
xchg
inc
jl
jle
bound
add
in
daa
mov
sbb
jp
inc
int3
movb
sbb
mov
pop
or
sarl
and
test
scas
mov
in
jno
scas
sub
test
ds
sbb
jno
divb
nop
std
mov
or
xchg
out
cwtl
mov
xchg
fs
mov
dec
and
nop
imul
mov
movsl
xchg
adc
add
or
clc
inc
test
push
sahf
cmp
jb
pop
scas
sbb
sub
icebp
dec
lds
ficoms
jbe,pn
shlb
jecxz
and
movsl
lock
int3
scas
gs
xor
add
movsl
pop
loop
push
es
out
sbb
xor
je
mov
rorb
cld
xchg
outsb
subb
inc
aam
push
sahf
testl
pop
int3
subl
shll
hlt
popf
mov
lret
pop
xor
jb
cmp
mov
cmp
fs
rcr
sbb
xor
cltd
mov
xor
xor
cltd
xor
fiadds
je
cld
ss
adc
test
iret
negb
inc
sahf
jl
fidivl
aam
lret
cwtl
insl
out
mov
flds
adc
mov
jp
push
or
inc
mov
jp
lods
popf
push
prefetcht0
and
and
cmp
subb
fwait
mov
mov
loope
call
bswap
lret
jl
jp
add
xchg
push
cwtl
push
cmpl
or
data16
in
xor
mov
mov
xor
mov
add
test
lds
lar
add
imul
movsl
push
rorb
loopne
enter
or
jae
mul
clc
xor
call
jmp
repz
xchg
and
rcr
ficompl
jnp
push
pop
sub
popa
dec
sub
shlb
cmp
pusha
in
xlat
inc
xchg
cmpsl
and
push
je
ret
mov
roll
subb
xchg
jb
mov
adc
push
outsb
and
sti
pop
fists
cmp
add
or
and
sub
ficompl
cmp
push
out
mov
mov
test
int3
dec
or
xor
stc
jo
imul
movsl
sub
sbb
and
inc
cld
mov
xchg
sbbb
mov
jno
xlat
insl
add
dec
push
enter
cli
je
rcrl
and
mov
icebp
pop
mov
jnp
mov
mov
les
scas
cmp
push
bound
mov
out
inc
mov
aas
push
lahf
inc
imul
mov
cmp
fwait
dec
out
in
dec
jae
and
test
repnz
ret
ret
xlat
popa
movsb
in
dec
pop
push
out
jo
pushf
out
andb
lcall
or
adc
dec
inc
cmpb
adc
mov
and
push
bound
cmp
in
lods
cmp
push
sar
or
arpl
push
sub
popa
push
stos
add
nop
jle
sahf
push
and
push
in
int3
push
test
push
cmp
stos
dec
enter
jno
mov
xor
pusha
sbb
push
and
xchg
fildll
aaa
sub
sbb
xor
xor
test
shll
sub
sahf
jo
scas
push
xor
or
jne
push
xchg
nop
fistl
gs
mov
push
mov
or
out
andb
out
pushf
ljmp
addr16
cmc
mov
sarb
sub
adc
jl
mov
jne
adc
out
cmp
scas
mov
repz
mov
shll
dec
inc
mov
stc
cmpsb
je
shrl
stos
jnp
push
jl
and
movsl
popa
jb
jno
xor
notb
movsb
jecxz
daa
pop
rolb
repnz
push
nop
ss
outsl
cs
iret
mov
in
fdivrl
push
mov
dec
push
mov
add
lock
cmpsl
popf
adc
mov
imul
sbb
movsl
xchg
ficompl
into
sti
ret
cmp
add
aas
dec
mov
shlb
add
call
and
xchg
inc
mov
in
xchg
ds
adc
pushf
in
xchg
clc
hlt
data16
faddp
repnz
dec
cs
idivl
mov
xor
sbb
sbb
test
jne
mov
xchg
xchg
test
jecxz,pt
ret
push
andb
repnz
ss
cli
sbb
mov
add
fcom
jns
ret
mov
rep
inc
xchg
or
arpl
mov
cli
mov
in
lret
lock
shll
lcall
je
fidivl
lods
mov
stc
test
sbbb
sub
push
and
fs
xor
sub
xchg
sub
push
js
insb
cmp
mov
bound
flds
sub
add
xor
push
or
ds
ficoml
and
popa
insl
or
dec
mov
incb
push
xchg
xor
mov
out
loopne
mov
xor
repz
cltd
jb
mov
iret
leave
or
sub
cltd
cmp
push
xchg
add
aas
mov
push
push
int
xchg
ret
mov
dec
jb
inc
test
xor
fiaddl
xor
lods
sub
ficompl
out
lods
mov
sbb
dec
test
mov
aam
mov
jge
push
je
js
mov
pushl
dec
lds
pop
ret
mov
pop
xchg
stos
and
das
xor
and
in
xchg
jno
push
sahf
sbb
shl
adc
daa
out
jnp
mov
dec
xor
or
mov
aad
pop
scas
stos
push
jle
inc
jae
jg
or
int
call
ljmp
mov
imul
faddp
shrb
mov
jmp
loope
add
loop
mov
jmp
fs
push
mov
adc
dec
addr16
push
outsl
and
incl
add
in
adc
lcall
into
sub
das
enter
movsb
and
xchg
add
aas
lahf
std
jg
jmp
push
or
fmuls
jne
std
in
jno
in
dec
lods
incb
push
jbe
mov
xor
add
fmuls
fildll
imul
mov
dec
sbb
dec
mov
xor
mov
jae
add
push
in
leave
push
ss
dec
stc
stos
or
leave
add
loopne
cmp
lcall
es
push
jne
add
gs
pop
mov
sbb
lods
scas
add
cmpsl
in
xchg
jp
push
fsubr
jmp
lret
int
leave
mov
outsl
mov
and
sub
pop
xchg
and
mov
cli
in
sub
mov
or
movsb
test
dec
movsl
les
inc
loopne
pop
mov
pop
out
adc
loop
ficoms
sbb
jmp
push
adc
sti
int
add
mov
rol
inc
clc
xchg
adc
mov
aas
dec
push
push
xchg
dec
push
pop
mov
sub
ret
rol
mov
lret
fsubl
sbb
xorb
cmp
mov
ljmp
inc
pop
imul
int
or
and
mov
mov
clc
aad
aad
pop
sarb
xor
xchg
xchg
mov
clc
add
popl
stos
lret
icebp
sub
mov
loope
ret
addr16
es
or
or
mov
lcall
adc
mov
imul
aad
sbb
dec
ja
mov
outsl
test
fcoms
pop
cmp
sbb
mov
and
into
cltd
addr16
test
fsubs
dec
jae
xchg
push
lds
stc
in
xchg
lret
xor
lcall
lock
adc
add
mov
mov
insb
xchg
lock
inc
das
daa
popa
mov
mov
jge
sbb
pushf
call
addr16
stos
sub
aas
loop
mov
addb
cmc
in
xor
cwtl
adc
mov
mov
addl
repnz
enter
or
mov
jo
bound
push
mov
push
sbb
ljmp
notl
aas
scas
ja
push
adc
ljmp
sub
aam
shrl
jl
sbb
inc
jl
repz
mov
lock
lcall
add
sbb
mov
aaa
sub
call
dec
lcall
shll
mov
push
gs
dec
jmp
inc
stos
pop
sbb
push
loop
pop
sbb
cwtl
in
sub
sbb
push
xor
push
add
xchg
imul
fldl
scas
dec
aas
out
stc
or
rorl
das
cmpsl
test
fsts
xchg
inc
in
xchg
addr16
add
and
shl
mov
movsl
inc
xchg
addr16
daa
pop
xchg
dec
adc
out
xchg
gs
shlb
jo,pn
lds
mov
add
loopne
das
jnp
ljmp
imul
cltd
data16
faddp
insb
call
mov
or
xchg
jno
nop
xor
scas
fists
loopne
shrl
daa
xchg
ja
xchg
inc
dec
arpl
adcb
sub
cltd
adc
movsb
add
outsl
lahf
ds
cmp
dec
shrl
cmp
and
mov
std
dec
movsl
xchg
hlt
sub
aam
push
add
push
inc
out
mov
lret
and
cli
cltd
adc
sub
cmp
push
mov
pop
fwait
inc
dec
inc
dec
push
mov
pop
out
xchg
mov
sbb
jmp
or
cmp
arpl
outsl
pop
in
cmpsl
shl
sub
adcb
mov
fdivr
xor
cwtl
mov
adc
shll
mov
jb
bound
and
stos
mov
mov
pop
add
leave
fidivrl
imul
notl
ss
jl
ss
idivb
ret
cmpsb
push
popa
shll
xchg
aad
mov
lods
scas
sarl
aad
sub
sbb
jecxz
nop
fdivl
pop
cmpsb
sarl
pop
cmpsb
add
pusha
pop
sub
arpl
cli
fists
mov
xor
jmp
int3
adc
cltd
ficomps
and
lahf
push
sarl
fisttps
stos
into
fwait
push
cmpsb
inc
aad
sub
cli
in
ret
add
pop
ss
sbb
fiadds
mull
aad
test
imul
jg
addr16
xlat
lock
xchg
cld
jle
sbb
stos
popa
in
or
lahf
add
mull
mov
ja
mov
and
popa
lahf
iret
or
and
in
xlat
mov
mov
adc
xchg
test
mov
pop
jmp
adc
jmp
adc
jg
or
xor
pusha
adc
xchg
jnp
xchg
mulb
cwtl
push
testl
or
cmp
cmp
jnp
ljmp
or
inc
and
iret
dec
mov
mov
shll
mov
mov
pop
fs
cmp
test
xor
push
sbb
mov
sub
test
mov
fisubrl
data16
xor
stos
cli
shlb
push
stos
lock
jl
sbb
jae
enter
iret
addr16
pop
xor
mov
jne
xor
lea
aaa
jp
insb
test
adc
nop
cmp
loop
pop
pusha
xchg
out
daa
negb
inc
cs
mov
test
leave
adc
xor
push
popf
mov
add
mov
add
pop
aam
ljmp
pushf
mov
add
iret
loope
sub
in
add
test
pusha
repnz
xor
shrb
gs
jb
cld
enter
fs
stos
shlb
push
ror
jp
movsb
push
and
jb
ret
je
aad
shll
mov
insb
insb
loope
imul
aaa
mov
cmp
bound
test
mov
std
sbb
or
loopne
cmp
dec
or
pop
sbb
add
xorl
pop
xchg
or
or
filds
xchg
rcr
insl
xchg
or
add
xor
cmp
aam
dec
ror
add
or
jecxz
cli
push
pop
adc
clc
and
cmp
scas
mov
or
out
and
js
addr16
add
enter
and
adc
repz
out
mov
fadds
arpl
and
test
or
jp
push
push
je
push
mov
dec
adc
testb
scas
aad
jne
push
inc
dec
int
jg,pn
push
pop
inc
in
push
pop
inc
dec
adc
fadds
ljmp
pop
xor
xor
pop
cmp
mov
xor
hlt
ficomps
sbb
rcrl
mov
cmp
dec
adc
ja
cmpsl
mov
imul
leave
pushf
lcall
and
je
xor
pop
dec
pushf
sub
dec
lahf
shlb
dec
in
repz
out
jne
jns
dec
cmpsb
int
sbb
mov
leave
sti
rclb
pop
cmp
into
nop
stos
loopne
mov
dec
push
cmp
roll
xor
pop
cmpsb
jae
ret
cmc
bswap
lahf
sahf
sbb
inc
iret
mov
and
inc
out
loope
add
paddusb
clc
cmp
ljmp
sahf
outsl
ret
add
fcmovbe
and
sahf
sbb
stos
inc
xchg
scas
mov
pushf
push
das
jmp
pop
roll
sbb
jmp
test
scas
inc
loope
fidivs
sahf
inc
dec
and
cwtl
lahf
dec
jae
mov
inc
jno
bound
fnstenv
lock
fwait
sahf
mov
sbb
dec
xlat
push
lahf
fst
arpl
sub
leave
and
mov
jle
mov
inc
imul
mov
sub
loop
or
lret
jo
inc
mov
push
sub
mov
xor
rcrb
add
sub
inc
add
or
in
lods
xchg
fdivrl
xor
dec
pop
daa
loopne
jno
daa
dec
adc
xchg
xor
inc
nop
sti
mov
dec
sbb
jae
and
insl
cmp
sti
hlt
jns
stc
xor
out
push
mov
and
add
xchg
cs
int
ss
xor
add
jns
vpsadbw
inc
and
in
dec
and
adcb
bound
cld
xchg
test
pop
adc
movsb
xchg
fisttps
adc
or
xor
pusha
shlb
or
clc
out
xor
mov
lret
mov
cmp
sub
sti
sbbb
ss
popf
mov
movsl
jl
inc
int3
add
ja
jle
sti
lods
xchg
aam
sbb
fisubl
andl
test
inc
inc
stos
loop
xchg
int
out
mov
add
stc
xchg
xchg
outsl
test
push
cmp
lock
cli
jle
pushf
decb
mov
inc
cmpsb
xlat
mov
jae
mov
xor
xorl
bound
inc
mov
test
xor
xchg
xchg
lods
ja
cltd
sub
clc
pop
pop
daa
dec
push
lret
mov
mov
sub
xor
xor
popf
pushl
mov
ja
push
imul
mov
addb
or
scas
insb
addr16
jle
and
and
push
icebp
cmpsl
or
fstpt
mov
movsb
xchg
dec
mov
mov
dec
test
lock
adc
repz
add
icebp
mov
pop
cmp
pop
rcll
add
and
mov
or
jg
insb
lea
push
mov
xor
leave
lret
pop
sbb
xlat
fldl
sbb
cltd
cmc
push
jl
and
or
mov
xchg
push
std
mov
jo
and
fldl2e
mov
les
jp
xchg
je
dec
push
add
sbb
orl
fidivrs
ja
repz
inc
jp
stos
xor
xchg
sub
fstp
popa
adcb
push
sub
repnz
push
lret
ljmp
fdivp
xor
cmp
daa
fdivs
mov
mov
and
cmp
mov
adc
loopne
das
aam
jg
push
test
pop
cmpsl
aam
dec
inc
int3
das
repnz
dec
adc
rclb
cmp
ss
push
stc
iret
add
and
rorl
sarb
test
shrl
movsl
popa
xor
icebp
ljmp
andb
int3
aas
push
xor
push
lcall
repz
inc
loope
push
xchg
in
cmp
es
out
in
sub
pop
cwtl
add
xor
or
mov
cmp
lods
jbe
jmp
mov
push
js
mov
fsubrl
mov
pop
orl
mov
scas
insl
adc
push
pop
fdivrs
sahf
call
pop
pop
pop
inc
inc
fwait
jb
mov
cmp
das
orb
cmpsl
or
adc
and
push
add
jns
jp
in
cmp
add
rcrl
pop
push
inc
lds
adc
push
jns
push
stos
inc
or
jge
xor
into
dec
or
sbb
in
jae
rcrb
sbb
mov
sti
xchg
pop
push
out
lcall
push
out
aas
pop
ljmp
jmp
loope
adc
fadds
pop
xlat
out
mov
cmc
jle
xchg
dec
xor
call
popf
sar
out
pop
fistps
sti
xchg
movsb
push
out
test
push
stc
and
mov
ss
jl
xor
dec
mov
pop
add
cmp
mov
pop
int
pop
arpl
incl
mov
imul
lds
arpl
sbb
sub
lods
mov
sahf
cmpsl
out
jmp
gs
jg
add
jecxz
pop
push
xchg
jne
dec
jo
jmp
add
mov
out
pop
andb
dec
fldenv
add
pop
rol
pop
movsb
inc
or
lds
and
mov
scas
lcall
jae
jl
into
sbb
cmpl
xchg
push
pop
je
shrl
add
es
jnp
aad
out
pop
cltd
in
popf
inc
push
pop
push
mov
dec
stos
daa
jge
fsqrt
or
push
push
lret
fldenv
or
jbe
push
sub
fisubrs
cmp
jnp
aaa
pop
jl
xorb
and
cmc
mov
mov
sub
jecxz
inc
popf
sbb
js
sbbl
xor
iret
out
int
add
pop
rclb
jbe
rclb
or
cmpsb
xor
sub
xchg
xor
jge
or
loop
mov
dec
sbb
adc
xchg
mov
push
push
leave
cmp
or
out
xchg
sub
push
xor
mov
and
mov
pop
mov
adc
adc
mov
push
pop
push
and
lods
dec
dec
iret
xchg
pop
lret
aad
in
mov
decl
mov
scas
dec
pop
pop
adc
repz
lahf
inc
pop
mov
or
mov
sub
insl
jecxz
adc
outsl
call
cltd
mov
pop
scas
js
mov
jmp
pop
add
fs
inc
sub
xor
push
inc
sbb
subb
xchg
sub
dec
ljmp
mov
xchg
mov
ss
or
pop
jg
cmp
mov
xor
loop
rorl
cmpb
ja
jnp
movsl
sub
lods
packuswb
adcl
fiaddl
lock
or
lcall
mov
push
xchg
lds
iret
addr16
inc
into
fs
add
xchg
orb
sbb
nop
mov
mov
jbe
test
andl
in
sub
sbb
fsubrs
cli
rclb
sahf
xchg
pop
push
bound
rcrl
ljmp
push
pop
mov
stos
cmpsb
in
filds
sarl
push
jne
xchg
jmp
loop
scas
loop
mov
jecxz
pop
mov
lret
mov
mov
mov
ret
sub
lods
mov
in
das
add
push
cmp
inc
xor
and
sar
insb
rorl
je
test
clc
xchg
mov
pushf
stos
mov
std
iret
mov
push
gs
sbb
nop
mov
mov
adc
push
aas
fistps
sarl
in
cmp
pop
mov
and
or
sbb
jg
daa
xchg
pop
pop
jo
or
cmp
dec
mov
das
xor
inc
lods
pop
enter
jp
add
push
pusha
push
sub
mov
in
sub
pusha
arpl
test
jl
lods
xchg
rol
pop
sub
aas
xor
pop
mov
or
dec
imul
cmp
enter
adc
iret
sub
push
add
cmpsl
or
xorl
and
xchg
add
jae
js
mov
lret
ljmp
xchg
scas
jno
popf
fistpl
sub
cmp
cmpsb
inc
sub
cmpb
rcr
loope
cmpsl
sbb
mov
xchg
or
pop
xlat
pop
and
mov
jmp
dec
inc
in
jge
mov
adc
sbb
les
mov
push
popl
lea
jl
sbb
popa
leave
inc
lcall
xchg
loop
outsl
iret
lahf
jge
lock
inc
cmc
xchg
mov
sbb
sub
xor
and
fldt
and
loop
sub
push
xchg
or
or
arpl
inc
addr16
ds
jne
mov
mov
call
xchg
bound
lea
loopne
xchg
mov
fstpl
inc
rorb
mov
dec
int3
rorl
jbe
mov
push
push
fists
je
stos
out
lret
outsl
test
push
xchg
cmpsb
ret
xlat
ss
jle
int
shll
jg
sub
movsb
sbb
mov
push
lea
xrelease
cmc
pop
sbb
int
loop
std
mov
js
cld
xchg
pop
sbb
outsb
jb
jg
jg
xor
jne
pop
imul
loope
push
aad
scas
lods
jne
mov
push
xor
repnz
outsl
int
add
push
pop
xor
insl
adc
movsb
mov
mov
in
or
push
dec
sub
loop
mov
sub
int3
xorb
and
sti
mov
mov
outsb
insl
lea
and
push
cmp
push
mov
pop
add
pop
int3
movsl
sahf
sbb
shl
sahf
fidivrl
dec
repz
sbb
stos
pop
and
divl
das
cs
mov
sbb
dec
inc
sarl
sub
sub
mov
jecxz
int
clc
cmc
lods
fcoms
fs
ds
dec
cmp
mov
leave
icebp
out
or
leave
push
jae
push
int
in
inc
sub
mov
xchg
push
mov
ds
sbb
aas
cmp
xor
mov
aaa
push
lcall
adc
aaa
fs
add
push
mov
call
inc
mov
mov
pop
xchg
sub
test
fstps
jne
push
test
mov
mov
stos
jns
mov
pop
dec
or
inc
bnd
nop
ret
outsb
insl
stos
data16
push
pop
fsubr
and
push
fidivrl
mov
fs
cmp
pop
sub
lcall
stc
loope
nop
xchg
ss
push
pop
test
push
imul
test
psllw
inc
fistpl
push
out
clc
mov
cli
mov
and
sti
stc
xor
pop
shrb
dec
and
xchg
lods
cmpsb
push
mov
cli
popa
pop
test
mov
adc
imul
jge
decl
inc
idivb
pop
insl
xchg
pop
sbb
pusha
arpl
mov
mov
ffreep
xchg
xchg
mov
or
pop
int
mov
repz
pop
add
popf
mov
and
xor
aad
add
sbb
jno
negb
xor
xchg
ja
lea
idivl
shl
arpl
loop
cmp
insb
mov
aam
cmc
dec
fstpl
das
xor
inc
add
in
pop
add
add
in
xchg
push
cmp
movb
mov
hlt
shr
mov
popa
inc
dec
pop
mov
ret
loopne
icebp
out
jne
nop
in
pop
xor
cs
test
dec
int
xchg
inc
xor
jg
push
mov
inc
insl
leave
out
out
and
cltd
pop
xchg
lcall
je
pop
out
mov
scas
lds
jecxz
pushf
sti
cltd
pop
aas
jg
out
mov
ret
lahf
fistl
scas
mov
rep
adc
dec
xchg
movsl
xchg
xor
pushl
xor
filds
stc
jg
mov
jle
test
dec
mov
sbb
imul
mov
aam
add
sbb
out
in
or
mov
insb
sub
xor
cmpsl
sbb
inc
cld
cmp
xchg
int3
sahf
dec
lods
mov
cmp
fnsave
mov
icebp
cwtl
cmpb
scas
lcall
rcrl
push
insb
sbb
mov
cmpsb
adc
cmp
adc
pop
mov
stos
sub
sbb
test
clc
xchg
movsl
aas
lcall
and
pop
inc
shlb
and
sub
clc
inc
add
pop
mov
xchg
push
andb
push
xchg
ljmp
adc
iret
inc
add
insb
cmovns
add
push
mov
inc
jnp
iret
xlat
add
cs
sub
fwait
dec
insb
ljmp
lea
fldt
icebp
andb
out
dec
or
xchg
movsb
cmpsb
push
popa
mov
inc
stos
rcll
imul
or
cmp
cmpsb
cmp
xchg
shrb
pop
add
jmp
mov
es
incl
mov
push
mov
addr16
mov
sub
cmc
add
add
dec
arpl
inc
adc
mov
sub
xor
mov
scas
mov
push
data16
data16
aam
push
mov
and
jle
inc
orl
xchg
xlat
xchg
pop
js
sbb
inc
xchg
insb
cs
or
sbb
fwait
sbbb
adc
jns
push
fdivr
repnz
jb
lret
int
dec
and
lret
lcall
pop
lret
pop
stos
pusha
loop
test
dec
and
push
mov
push
stos
cmc
dec
or
mov
mov
clc
xor
call
mov
insb
fwait
loope
stos
sbb
push
xor
inc
pusha
adc
lock
adc
inc
insl
iret
add
xchg
adc
xchg
mov
sbb
mov
push
push
xor
adc
js
ret
jnp
stos
clc
sarl
testl
mov
push
je
stos
mov
std
sub
shr
loopne
sub
cmp
mov
js
push
or
fmuls
ja
daa
or
cld
data16
outsb
sub
adc
xchg
pop
lret
repz
or
cmpsl
xchg
and
loopne
aad
xchg
mov
dec
mov
pop
xor
jnp
inc
fnsave
jnp
lea
or
into
mov
lahf
push
sti
pop
pop
mov
cmp
jne
sti
dec
push
cwtl
shlb
xchg
sbb
sbb
loopne
ja
in
jecxz
fidivs
loop
push
adc
xor
popf
pop
data16
or
cmp
mov
inc
pop
pop
mov
cmp
mov
int
and
les
and
rcrb
data16
or
mov
insb
hlt
mov
dec
add
imull
lret
es
addr16
lahf
jl
inc
arpl
outsl
mov
jg
imul
cwtl
out
loope
addr16
sbbl
faddl
mov
hlt
insl
xor
sub
inc
xor
ret
mov
enter
jecxz
daa
inc
cmc
insl
push
or
jo
pop
cli
xchg
jp
adc
movsl
adc
das
sbb
imul
xchg
mov
jnp
cmp
xchg
fbld
adc
das
fiadds
out
push
mov
daa
cmp
int
xchg
ss
in
repnz
adc
lea
pop
loope
outsl
xor
addl
mov
pop
in
pop
gs
faddl
imul
int
decl
adc
push
xor
fdivs
fildl
sbb
mov
fsubrs
subb
les
pop
add
pop
fnsave
jmp
sub
lods
test
frstor
sub
jnp
leave
lods
mov
and
fildl
sbb
in
xchg
add
cmp
cld
mov
mov
adc
jecxz
fmul
nop
pop
gs
jne
lock
cmp
arpl
inc
jnp
test
gs
cli
icebp
shrb
test
mov
movsb
xor
jg
inc
jb
lret
clc
adc
jge
adcb
xchg
xor
cltd
cmp
sbb
icebp
icebp
xchg
loopne
ret
pusha
fisttpll
arpl
sbb
and
sbb
adc
adc
out
xor
mov
push
xor
mov
dec
jbe
push
lahf
aaa
loopne
pop
pop
das
fdivrs
cmp
dec
movsb
cmc
pusha
aad
stos
sarb
or
aad
and
mov
adc
fadd
scas
mov
call
testl
test
iret
jo
inc
mov
dec
mov
dec
push
add
mov
xchg
pop
xchg
xor
jg
fsubs
xor
xchg
orl
inc
dec
cltd
push
ljmp
jg
aad
inc
jge
shrb
push
and
pop
jns
rol
scas
sub
pushf
sub
out
mov
mov
shl
mov
push
imul
pushf
dec
push
mov
scas
dec
sbb
scas
cmp
insb
add
mov
xchg
je
mov
inc
and
inc
jmp
or
insl
scas
lcall
ss
mov
jnp
movsb
adc
cmp
push
lods
fwait
xor
dec
adcl
fdivrs
add
jnp
add
clc
or
andb
mov
pop
or
mov
xorb
test
loope
inc
mov
pusha
mov
sbb
out
lds
add
mov
je
ljmp
int3
outsl
fidivs
in
push
push
xor
mov
lock
movsl
call
add
jecxz
rcll
xchg
sub
mov
jecxz
sahf
sub
lds
lret
out
pop
add
stos
and
mov
pusha
jl
jns
adc
cmp
adc
jmp
js
push
jno
icebp
insl
lods
or
xchg
sub
lods
adc
and
ja
mov
adc
dec
rcll
jns
xor
fldt
xor
data16
mov
cwtl
addr16
addr16
gs
fiaddl
mov
mov
arpl
roll
or
js
xor
add
fstpt
jnp
jne
dec
test
andl
xchg
insl
jns
cmpsb
cmp
lds
fdivrs
arpl
sbb
mov
lods
push
das
fdiv
cmp
xchg
jg
dec
xchg
mov
sbb
fwait
add
sbb
popa
push
cmp
and
dec
decb
addr16
mov
pop
xor
xchg
outsl
mov
rorl
mov
adc
enter
jmp
and
mov
sbb
xchg
dec
push
xchg
mov
jl
mov
sub
invd
icebp
fildll
dec
andb
dec
mov
and
jns
das
cmp
jns
xchg
in
mov
ret
inc
xorb
add
mov
push
test
fmuls
imul
out
stos
dec
shlb
pop
fimull
lock
push
and
outsl
cltd
out
sub
push
mov
inc
in
sub
and
ret
jg
cmp
inc
push
sub
adc
rep
mov
shrb
gs
out
xor
sbb
je
or
cmpl
jns
paddsw
cli
daa
mov
sbb
lahf
ja
push
and
dec
movsb
cli
pop
add
dec
test
sub
cmp
sbb
jecxz
xchg
leave
out
lea
or
test
cmp
dec
push
sub
cmpl
adc
mov
dec
pop
and
loop
pop
xchg
adc
lods
dec
mov
xchg
sub
roll
sti
xchg
popa
pop
cltd
mov
cltd
push
mov
sub
xchg
mov
in
not
mov
sahf
and
cmp
icebp
mov
mov
sub
cmp
insb
cli
icebp
add
mov
or
mov
jecxz
mov
rorl
cmp
or
or
aaa
in
ljmp
enter
popa
rorb
sub
orb
imul
sbb
sbb
nop
jp
pushf
push
insl
adc
adc
ss
js
into
pop
pusha
inc
rcrl
jns
xor
jecxz
sti
inc
fs
xchg
xchg
adc
pop
cmp
push
shll
lret
movl
fwait
and
jbe
popa
mov
es
fcmovu
or
lahf
pop
xchg
push
inc
pop
fcomps
mov
lock
and
cmp
scas
fwait
mov
scas
mov
mov
lcall
inc
fiaddl
dec
jge
je
pop
push
push
fists
in
dec
sub
leave
ret
test
push
or
inc
int3
fisttps
lods
ljmp
jle
addb
pop
andl
jle
inc
inc
sbb
push
pop
inc
loopne
xchg
icebp
cld
divb
arpl
stos
enter
fsubr
mov
dec
mov
rcrl
mov
push
rep
into
std
cmp
in
insl
sahf
xchg
gs
jg
imul
sub
fisubs
inc
ret
add
inc
add
sub
addl
cmp
xor
xchg
mov
mov
sub
test
ss
cmp
dec
inc
enter
test
push
mov
mov
loop
mov
sbb
gs
fwait
sbb
outsl
in
cli
imul
inc
in
bound
push
xchg
lds
xchg
and
scas
mov
out
outsl
cmova
aad
pop
std
add
shlb
roll
aad
hlt
scas
dec
pop
in
bound
or
lock
rorb
pop
xor
test
dec
xor
mov
inc
daa
or
adc
sbb
mov
mov
flds
fbld
scas
pop
rol
pop
mov
imul
fwait
push
xchg
lea
movsw
or
xchg
mov
xchg
test
scas
test
sbb
dec
sbb
dec
shrb
dec
cltd
int3
push
and
inc
pushf
in
inc
insb
sti
sbb
sbb
and
leave
nop
mov
sbb
xorl
pusha
jb
and
jp
xor
fldt
sub
cs
jmp
dec
pusha
daa
das
leave
add
xor
in
mov
adc
add
cmpsb
or
jno
std
sub
cltd
xorl
xchg
iret
mull
jae
arpl
lcall
xorl
aad
arpl
cmc
aas
out
xlat
inc
icebp
jae
popf
mov
loope
shl
cwtl
xor
test
pop
dec
aaa
dec
cmp
xchg
in
push
insb
xchg
dec
ljmp
orb
mov
popa
outsl
stos
push
leave
scas
mov
hlt
cwtl
push
ror
xor
push
pop
rcr
dec
mov
inc
push
or
gs
dec
and
or
nop
xchg
test
and
push
add
push
stc
clc
adc
xchg
lcall
dec
or
dec
movsl
add
stos
loopne
pop
out
sahf
dec
add
jmp
mov
ja
push
xchg
adc
adc
leave
ljmp
movsl
pop
cld
mov
xchg
je
stc
clc
rolb
jmp
gs
shrl
lahf
dec
jae
jne
jecxz
push
shrl
out
sbb
nop
pushf
sbbb
mov
aad
out
mov
arpl
out
pop
adc
jbe
mov
and
mov
cld
sub
mov
pop
add
sets
mov
outsb
pop
lret
or
adc
mov
or
sbb
dec
sub
loopne
popa
push
dec
js
and
and
fisubs
sub
loop
push
repnz
inc
out
jnp
or
jb
int3
test
cmpsl
imul
adc
cmp
xchg
jo
jae
jp
je
lea
test
mov
inc
call
fwait
lods
mov
xchg
cmp
dec
jecxz
cmc
or
pop
and
pop
into
pop
lahf
icebp
sbb
push
test
cmp
push
push
push
fisttpll
pop
mov
mov
or
push
leave
insl
fs
fcomps
pop
xor
sahf
lds
loopne
jg
dec
sub
repnz
imul
lcall
xchg
jbe
outsb
push
push
outsb
cmc
lods
xor
leave
in
mov
stos
aaa
push
imul
es
pop
push
jbe
inc
in
fdiv
mov
cmp
sub
xchg
xlat
sahf
mov
mov
ret
popa
cmpsl
fistps
gs
stos
lock
lds
ret
cmpsl
in
cli
push
sbb
insb
test
outsb
js
in
or
pop
fcomps
shlb
mov
repnz
dec
scas
das
shll
jns
adc
jbe
lds
scas
mov
pop
shlb
lcall
in
fldt
mov
adc
mov
adc
ljmp
fxch
jg
pusha
ljmp
jno
cmp
push
jo
divb
lret
inc
ja
popa
inc
inc
lret
int3
xchg
into
outsb
jae
into
push
outsb
push
cmp
ret
pusha
pop
test
add
xor
fcmovbe
in
out
push
stc
jl
mov
and
mov
inc
mov
xchg
aas
mov
mov
je
mov
in
sbb
pop
or
add
sub
std
sub
mov
lret
fstp
lret
stc
mov
cmp
xchg
lahf
iret
dec
xor
lock
inc
ljmp
jns
sbb
and
or
mov
mov
xchg
lret
arpl
je
push
mov
pop
popa
mov
lea
call
push
jo
xor
arpl
mov
cwtl
out
cmp
adc
cmp
cmp
iret
out
mov
in
fstps
nop
jno
repz
and
sbb
cmc
sbb
negb
add
lret
mov
push
and
gs
stos
add
in
aas
cmp
or
data16
in
fsubrl
mov
mov
insb
push
cmp
jge
shrl
sbb
cmp
jno
jbe
out
or
int3
cmc
xchg
pop
mov
and
xchg
sbb
stos
sub
cmpsl
minps
ja
imul
mov
cld
addb
xchg
add
lcall
addr16
adc
inc
mov
mov
pushf
xor
ja
cmc
xchg
popa
cld
dec
xor
jo
mov
ret
shrl
scas
cmpsb
fucomip
addr16
lods
mov
adc
xor
jnp
xchg
cmpsb
xchg
add
adc
into
and
scas
inc
test
mov
mov
in
stc
dec
and
xor
adc
ljmp
ret
aad
push
lods
cmc
pop
cmc
icebp
imul
lds
sub
out
dec
dec
xor
and
mov
xor
xor
pop
fwait
mov
lcall
xchg
stc
cmp
xchg
insb
xlat
out
jg
out
lock
xchg
cmp
fs
sub
cmp
cltd
out
inc
repz
push
push
loopne
mov
in
mov
dec
and
xchg
or
xchg
gs
push
in
iret
push
stos
xchg
and
inc
xchg
in
adc
push
and
sub
cmp
call
or
cmp
add
cmp
or
mov
icebp
jnp
popf
rcrl
mov
rcr
scas
lods
dec
out
cmp
stos
jmp
push
cvttps2pi
into
lret
sbb
jne
fsts
xlat
adc
sbb
or
test
call
lock
cmp
push
sarl
inc
rorl
add
cld
sub
into
leave
pop
and
add
inc
imul
push
cmp
rcr
insl
pusha
sub
sub
mov
mov
dec
outsl
scas
push
sub
mov
mov
mov
cltd
iret
int
sub
out
add
or
mov
dec
push
sbb
rclb
sbbl
push
test
ds
fstl
aaa
push
into
adc
xchg
xor
pop
adc
lret
lret
pusha
mov
cs
int3
scas
push
mov
cli
cltd
nop
mov
mov
jp
add
hlt
aad
mov
sbb
inc
cmp
jo
inc
mov
popf
mov
punpckhdq
les
call
push
in
call
out
sub
fisubl
cmp
jp
iret
xor
xor
out
rorb
fs
fisubrs
pop
inc
stos
push
pop
pop
loopne
neg
test
xor
and
lret
xor
call
adc
sbb
aad
shld
and
mov
lods
jge
loope
mov
pop
sub
hlt
and
shrb
jge
es
dec
cmpsb
test
pop
es
sbb
ficoms
dec
pop
jno
in
pushf
call
lcall
or
push
pop
mov
or
or
jmp
pop
mov
cmp
mov
sbb
xlat
call
fmuls
pushf
or
or
fbstp
sbb
xchg
push
adc
cltd
out
pop
icebp
shll
pusha
cmp
mov
bound
cmpsb
sar
fnstsw
push
sbb
jb
xor
push
add
sbb
pop
mov
dec
sar
cmp
jae
jg
test
imul
pop
push
lahf
cmp
ret
roll
xor
fwait
imul
loopne
stc
aas
loopne
pop
push
dec
test
and
sub
push
jns
lahf
xor
popf
les
or
dec
stos
add
aas
add
imul
or
push
fstl
popf
addr16
adcb
or
pusha
sub
jge
jl
push
and
adc
imul
repnz
test
jae
push
lods
pop
test
hlt
inc
mov
dec
xchg
xchg
cmp
sub
xchg
ljmp
mov
xchg
jae
add
scas
mov
pop
add
idivl
in
pushw
popf
ds
adc
out
movsl
dec
jp
dec
je
sbb
dec
pop
cmp
dec
fldenv
outsb
mov
xchg
mov
ss
popa
mov
cld
ret
mov
push
sbb
adc
out
xchg
jns
add
sub
outsl
adc
push
in
or
popa
andb
xchg
mov
push
add
cmp
jge
or
std
push
add
int3
dec
ja
pop
sbbb
jne
xor
std
mov
sub
test
adc
mov
cmp
push
push
or
pusha
jae
mov
xchg
xchg
cmpsl
in
daa
xchg
mov
jnp
cmp
inc
mov
arpl
and
mov
or
add
pushf
pop
stc
or
cmp
cmp
loope
pop
aaa
inc
mov
ljmp
and
in
push
adc
ja
adcl
shrb
xchg
ficoml
aam
ss
bound
ss
and
xor
cmp
lods
jbe
inc
xchg
insl
mov
shll
add
movhps
loopne
sti
loop
movsl
push
fneni(8087
aaa
dec
ds
mov
stc
push
pop
cmp
add
lea
adc
jns
and
ljmp
fcoml
rcrl
cli
add
cmc
xchg
xchg
shll
xchg
das
jge
xlat
lds
fisubl
sub
pop
xlat
cs
mov
dec
int3
xor
add
rorl
jbe
int3
inc
in
rclb
inc
mov
sub
pushf
and
mov
das
and
xchg
lock
aad
fs
xchg
cmp
jecxz
add
jns
mov
dec
sbb
sub
mov
scas
into
outsl
lods
sub
and
sbb
into
mov
add
mov
mov
or
out
cmp
jp
push
mov
loopne
dec
dec
inc
cmpsl
add
ljmp
add
and
pushf
jns
insl
push
negl
movsb
mov
stos
xor
lods
pop
adc
inc
out
dec
or
clc
int
dec
cmp
mov
cwtl
enter
jb
mul
insb
sbb
sub
sub
xor
pop
dec
mov
or
mov
add
popf
ror
sbb
jae
daa
lahf
ljmp
sarl
push
stos
or
push
dec
jge
sub
cld
mov
roll
cmp
inc
mov
mov
dec
pop
ror
mov
sub
jno
push
out
test
cli
mov
jne
test
mov
xor
stos
lods
or
ja
data16
les
adc
dec
inc
sarb
cmp
int3
add
sbb
push
leave
test
mov
shl
out
ror
pop
jne
jbe
sub
lret
and
out
int3
mov
repnz
rorl
xor
adc
sbb
jns
jo
scas
jbe
int3
xor
lock
fildl
repnz
leave
into
inc
imul
enter
lods
fwait
cs
xor
dec
out
lods
push
sahf
and
pop
icebp
test
cld
mov
xchg
pushf
in
movsl
mov
sbb
sbb
push
clc
and
jmp
inc
or
fwait
jl
cmp
loop
jno
xchg
or
cmp
add
mov
imul
repnz
cwtl
xor
jge
lahf
xchg
mov
mov
inc
xor
movsl
loop
lret
push
lcall
ss
xor
cmp
inc
imul
scas
test
aaa
jecxz
iret
inc
dec
mov
lods
pop
ss
imul
xor
pop
inc
push
pop
jne
rcll
add
jbe
cmc
fldt
in
int
ss
inc
sti
xor
mov
jle
imulb
add
pop
dec
stc
dec
fs
sub
sub
ss
mov
xchg
bound
mov
pop
imul
das
lock
cmp
push
jmp
and
dec
xchg
sbb
pushf
and
es
leave
xchg
sbb
add
jmp
mov
outsb
insb
fcmovbe
jno
mov
stos
inc
das
xchg
jno
jle
rcrl
std
insl
hlt
inc
push
frstor
sub
mov
cli
pop
or
out
dec
mov
xrelease
dec
mov
adc
push
in
inc
stos
dec
stos
fs
das
shlb
ljmp
xor
adc
stos
scas
fstpl
fs
add
xlat
jge
jge
gs
sub
in
pop
xor
add
out
daa
jo
dec
daa
aaa
push
adc
ss
cmp
push
inc
jmp
push
pusha
mov
subl
and
add
mov
cmp
inc
cmp
shl
clc
xchg
out
jmp
movsl
and
mov
cli
ss
loope
repnz
mov
pop
enter
cmp
out
and
mov
mov
sub
mov
mov
fadds
nop
or
or
mov
popf
mov
fiaddl
jge
push
repnz
fnstcw
test
hlt
adc
mov
fstps
mov
inc
cmpsb
stos
xor
jns
fdivr
add
pusha
filds
aaa
jmp
gs
icebp
mov
push
bt
xor
xchg
mov
shll
imul
insb
push
xchg
stc
adc
idivl
pop
pop
int3
divl
hlt
adc
loopne
jae
mov
je
pop
and
idivl
aad
out
push
mov
or
adc
int
and
mov
pop
or
push
jo
inc
pop
enter
adc
inc
inc
mov
cwtl
push
push
cmp
cmp
mov
mov
hlt
stos
in
push
sti
cs
leave
pop
or
fld
and
movl
xchg
pop
dec
test
outsl
sbb
imul
hlt
ja
sub
in
push
lock
std
mov
lret
imul
inc
inc
lret
mov
xlat
scas
xor
dec
fnstcw
and
mov
xor
or
sub
lret
aas
sbb
dec
mov
mov
outsl
and
scas
mov
in
sti
cli
sbb
inc
lcall
sbb
std
dec
enter
push
js
push
mov
mov
push
xchg
jl
adc
sbb
rclb
mov
cli
and
jle
pop
mov
cmp
push
mov
nop
popa
sub
push
ret
das
popa
cmc
mov
mov
int3
enter
cltd
stos
lahf
scas
test
push
pop
or
mov
mov
pushf
mov
xchg
jae
cmp
out
or
ds
and
push
jne
pusha
fistl
mov
and
fbld
push
test
push
aad
cpuid
pop
outsl
sbb
popa
aam
push
pushf
sub
inc
shll
jne
and
pop
enter
stos
xor
lret
dec
pop
push
rcrb
inc
add
insb
dec
int
sbb
adc
push
add
cmp
or
and
mov
shlb
aas
jmp
mov
lods
fcoml
popa
inc
and
into
mov
xchg
outsb
pop
sbb
out
and
mov
daa
fnsave
lcall
lock
or
push
dec
pop
mov
out
shlb
je
fs
adc
lea
push
fcmovnb
iret
cmpsl
add
lret
fcoms
xchg
cmpsl
mov
int3
sub
insl
mov
ljmp
out
adc
out
xchg
stos
dec
and
jle
push
mov
shrl
push
cmpsl
xchg
add
in
sahf
inc
ljmp
mov
mov
and
jge
test
mov
test
add
imul
in
lret
jmp
dec
fsubs
dec
xchg
or
fsubs
sbb
sbb
xchg
arpl
ja
mov
pop
xchg
mov
adc
pop
mov
insl
js
in
and
fsub
push
insl
dec
fwait
movsb
scas
mov
xchg
push
and
orb
push
adc
dec
arpl
fidivrs
jecxz
leave
shrb
scas
jecxz
add
out
jns
xor
je
mov
lods
test
loope
imul
jmp
adc
int
out
mov
fmulp
mov
scas
loope
and
dec
add
imul
dec
sub
call
sbb
inc
jle
cmpsb
adc
pop
dec
repnz
jbe
arpl
jns
out
pop
in
ja
push
mov
popa
cmc
adc
das
arpl
ja
idivl
iret
call
mov
mov
cmc
or
fsubl
dec
cld
loop
in
or
sbb
lret
and
inc
xor
mov
sbb
aaa
lret
sub
push
into
jo
sbb
call
leave
mov
call
xchg
bound
dec
push
and
pop
or
outsl
hlt
and
daa
mov
push
lods
clc
mov
jp
mov
sarl
sub
add
je
mov
adc
addr16
sub
cmp
hlt
fwait
sbb
leave
mov
mov
aam
xor
pop
xchg
jo
add
fwait
mov
cmp
icebp
out
cmp
jno
add
add
loopne
insl
icebp
std
negl
jbe
pop
xchg
ret
mov
sbb
call
das
push
sub
pop
xchg
insl
out
cwtl
mov
rcrb
rolb
or
xchg
add
gs
ret
ss
push
mov
ja
movsb
mov
je
sbb
or
xchg
insb
mov
push
inc
push
andb
cmp
pop
out
stc
cmp
add
test
loope
or
and
cmp
repnz
int
js
push
fbld
adcb
push
cltd
adc
inc
ss
or
notl
pusha
push
aaa
pop
and
insb
adc
mov
sbb
fistpl
mov
into
adc
outsl
cs
sbb
push
lret
lods
mov
in
test
adc
push
daa
adc
mov
into
cmc
popf
fiadds
stos
dec
loope
jg
jno
movsl
addr16
shrb
lret
cmp
mov
and
insl
int
insb
sbb
jae
inc
out
lock
iret
cmpsl
jmp
rcr
and
test
mov
lods
fidivl
test
sar
fcompl
gs
pop
mov
popf
push
mov
xchg
cmp
test
mov
pop
cmp
dec
stc
inc
sarb
or
faddl
stos
add
xor
push
inc
lock
cmp
in
loop
pushf
ftst
out
jno
mov
jp
inc
lods
mov
loope
loopne
cmpsl
adc
repz
fdivl
lods
in
dec
dec
inc
ljmp
add
dec
or
sub
xor
jmp
stos
jbe
bound
pop
xor
out
jecxz
push
dec
lret
aam
ret
add
popa
mov
out
xchg
jg
jbe
rol
std
jne
add
in
add
adc
repz
jbe
pushf
mov
adc
cwtl
jmp
repz
lcall
cmp
mov
stos
and
push
sub
ss
mov
int3
data16
aas
std
ds
xchg
mov
notb
in
cmp
mov
outsb
pusha
stos
fisubrs
mov
sbb
pop
out
ret
mov
mov
inc
mov
pop
das
xor
dec
mov
push
inc
add
je
jp
clc
js
sti
je
jmp
mov
rcll
mov
mov
orb
mov
xor
je
inc
fimuls
les
test
mov
xchg
mov
jmp
ret
popf
sarb
int
inc
loopne
mulb
and
jge
xlat
jne
stos
xchg
into
insl
jo
mov
stos
pop
push
mov
fwait
test
pop
movb
jg
push
cmp
jmp
dec
fisubrs
fidivrs
push
mov
inc
pop
dec
jle
outsl
mov
cmpsl
add
cwtl
cs
hlt
inc
int3
cmpsb
inc
push
or
ds
and
xchg
jmp
mov
gs
inc
cmpsb
repz
sbb
adc
xor
sbb
pop
pop
xchg
iret
xor
and
hlt
cmpsb
sub
cld
add
dec
xor
repz
jmp
shr
pop
rorl
xchg
jns
jle
ljmp
jb
push
cmpl
addb
jns
js
xchg
loopne
movsb
js
inc
and
jmp
add
pop
pop
in
je
push
or
dec
cld
push
loopne
xor
shlb
daa
adc
std
push
mov
mov
test
dec
fwait
push
mov
lock
xor
outsl
repz
mov
push
ret
aam
out
xchg
xchg
mov
or
adc
adc
loopne
mov
adc
dec
or
pushf
sbb
sub
mov
shrl
addl
sarl
mov
popa
stos
pop
mov
mov
insb
imul
nopl
jnp
sub
mov
popf
adc
aas
nop
mov
jp
dec
mov
sbb
sti
pop
popf
popw
test
sub
push
push
dec
adc
enter
sbb
mov
out
fwait
clc
mov
shll
xchg
arpl
xor
xchg
stos
sbb
scas
sbb
rol
push
xlat
push
cmp
js
add
test
xchg
aaa
adc
or
das
lahf
loop
ret
push
cmpsl
loopne
fs
jae
sub
fs
imul
icebp
repnz
fmuls
mov
fdivr
push
je
fisttpl
das
sahf
adc
jle
daa
pop
sub
pop
mov
push
xor
pop
movsb
adc
dec
or
fidivl
loop
nop
outsb
sbb
cmc
pop
mov
hlt
inc
mov
inc
pop
adc
cmp
in
fbld
lahf
mov
sti
sub
mov
sbb
mov
or
insl
mov
inc
add
popa
aas
std
es
ret
sbb
jo
mov
sbb
movsb
pop
rcl
cmp
or
xor
outsl
inc
sub
fistpl
fildll
inc
test
sub
sti
filds
lret
shlb
div
hlt
ficompl
xchg
push
xor
xchg
xlat
lea
test
stos
adc
dec
subb
adc
adc
cmp
test
xor
sub
dec
mov
hlt
lods
test
sub
xchg
or
jo
inc
pushf
add
out
sbb
or
pop
icebp
iret
rorb
xchg
das
jbe
dec
push
ljmp
sarl
adc
lea
aas
insb
jg
int
in
mov
int
test
mov
adc
xchg
adc
pop
inc
cmpb
je
mov
bound
jge
rcrl
xchg
pusha
adc
jbe
pop
adc
mov
shlb
stos
adc
sub
push
mov
dec
rclb
mov
cli
pop
int
and
mov
adc
scas
rolb
pop
stos
int3
add
int
imul
or
lret
test
in
sar
ljmp
test
maskmovq
testl
cwtl
xchg
inc
sbb
pop
ljmp
bnd
sahf
insl
sub
or
and
xor
leave
sub
ljmp
cltd
aad
lea
push
xor
xchg
arpl
mov
js
insl
stos
xor
fnstenv
mov
stc
testb
ja
mov
hlt
cmp
dec
pop
or
inc
loope
xor
shrb
cmc
daa
jecxz
cld
sti
repnz
xchg
cmp
dec
jg
mov
inc
jp
dec
inc
fs
mov
push
stos
push
mov
inc
add
dec
aam
fsts
loope
lds
pop
sub
lods
mov
inc
lret
jge
xchg
mov
xor
ficomps
pusha
xchg
in
cmp
outsb
dec
orl
arpl
pop
popa
mov
loop
mov
mov
repnz
lock
insb
cli
jne
push
in
orl
loopne
pop
mov
rcrl
jb
cmp
mov
jne
and
mov
daa
mov
pop
sub
pop
xor
and
xor
cmpsb
inc
xor
lea
imul
inc
loope
xor
fwait
mov
xor
ja
addr16
or
xor
xlat
sahf
imul
popa
push
xor
jno
rol
loope
aam
pop
int3
sbb
insl
sbbl
das
shl
mov
pop
stos
xor
add
outsl
pop
mov
lods
addl
pusha
xor
ja
movsb
sub
mov
loope
sbb
lods
inc
sbb
add
inc
adc
pop
xor
inc
xchg
sub
idivl
mov
imul
in
aam
mov
mov
pop
mov
loop
cwtl
sbb
jp
sbb
test
sub
add
and
stos
pop
shl
xchg
fcoml
sub
pop
or
add
clc
movb
mov
leave
test
and
mov
pop
iret
mov
sub
or
nop
imull
fists
shl
sti
imull
cs
in
das
lret
fwait
popa
je
inc
insl
pop
fdivr
outsl
jmp
icebp
mov
lret
adcb
cmpsl
cmpsl
dec
xlat
pop
pop
push
adc
xor
pop
mov
into
sub
xchg
gs
mov
push
and
inc
adc
in
fmull
jle
repz
sub
shll
les
adc
fisttpl
xlat
pushf
int
call
scas
cmp
sub
adc
out
mov
cmp
mov
lcall
add
call
cltd
movsl
mov
shll
imul
cmp
or
jge
sub
or
push
aam
lock
jo
xchg
jb
out
sbb
in
jl
ds
enter
and
repz
data16
or
ds
repnz
adc
inc
sub
sahf
fsub
dec
loope
mov
xchg
push
dec
xchg
aad
fdivrs
mov
inc
and
repnz
jo
in
xchg
js
jnp
orb
movsb
and
pop
daa
fnstcw
call
pop
fcmovbe
std
sahf
fdivs
cmp
and
sarb
mov
xor
jl
or
cmovno
inc
fstps
testl
mov
pop
or
daa
cld
mov
dec
outsl
adc
push
xchg
dec
ja
xrelease
push
pop
dec
cmpsb
bound
xor
pop
imul
adc
sub
mov
es
rclb
sub
insl
in
push
pop
arpl
xchg
xchg
xchg
xchg
rolb
add
dec
adc
shlb
les
je
cwtl
imul
popf
loopne
and
arpl
test
cmp
out
fsubrl
add
add
xchg
xchg
pop
fldenv
pushf
and
lods
jle
lock
sub
adc
pop
jns
lret
imul
adc
dec
push
sbb
sub
mov
inc
jnp
ja
shlb
pop
inc
sbb
sub
push
dec
js
or
popf
fwait
xchg
arpl
xor
out
xchg
sbb
mov
jle
mov
lock
pop
movsl
lcall
notl
aad
pop
sub
loop
lret
loope
xor
mov
jb
mov
pop
or
adc
mov
scas
sbb
dec
test
jle
mov
or
inc
fwait
and
and
in
in
clc
mov
add
xchg
pop
xor
stos
add
fidivs
mov
add
cmp
ds
xchg
stc
mov
inc
mov
out
pusha
and
jmp
bound
mov
mov
push
not
leave
scas
cltd
sub
mov
cmp
sbb
xor
out
push
addr16
xlat
andl
mov
push
sub
outsb
out
pop
adc
pop
pop
mov
push
out
or
inc
add
sub
loope
pop
xchg
xchg
mov
jp
shlb
ret
adc
inc
xchg
jl
aaa
dec
shr
sub
cmp
out
aaa
sub
mov
xchg
jle
or
int3
sub
cmpxchg
cltd
inc
push
sub
movsb
shlb
test
push
dec
sub
clc
xchg
in
leave
mov
add
fidivrl
push
call
hlt
sti
pop
push
add
xchg
sbb
fidivs
jl
push
sub
add
mov
sbbl
mov
adc
xchg
or
mov
sarl
enter
loopne
outsl
jge
cmp
or
dec
dec
movsb
mov
mov
nop
ret
je
pop
add
mov
gs
pop
arpl
lods
add
subb
cmpsb
and
cmc
into
xor
leave
scas
pop
mov
cld
outsl
lcall
fstpl
sbb
bound
loopne
fcoml
mov
movsl
pop
scas
ret
jg
scas
jle
decl
mov
shrb
aam
mov
out
data16
fsts
sbb
loopne
xor
pushf
xchg
push
loopne
lahf
push
mov
mov
fs
sub
repnz
sarb
sub
mov
push
mov
mov
xor
mov
jne
sub
in
sub
fs
fsubs
lods
xchg
add
adc
mov
cmp
js
cmp
into
pushf
out
adc
in
cmp
jo
xchg
stc
scas
mov
inc
into
leave
inc
mov
inc
andl
hlt
cltd
inc
push
sti
call
ror
sub
adc
cld
dec
jo
xor
mov
pop
std
mov
jno
add
rcrl
xchg
dec
in
mov
xchg
fistl
dec
je
jno
insb
pushf
push
das
stc
loope
lahf
sbb
cmp
shll
test
cmpb
es
out
push
push
fst
pushf
xorl
cmc
mov
push
lods
mov
ljmp
mov
mov
sub
xor
rorb
inc
or
shll
loop
and
rolw
adc
mov
jl
rcrl
insb
push
jecxz
cmpsl
or
mov
fildll
lds
adc
fidivs
fists
mov
test
push
andl
mov
add
pop
dec
incb
repnz
ret
mov
mov
xor
je
ja
jle
sbb
jmp
in
xor
xor
into
sub
das
sub
add
mov
lret
lahf
push
push
aas
aad
rolb
xor
dec
and
inc
paddq
mov
xor
or
inc
push
in
bound
mov
mov
and
gs
xor
push
mov
or
leave
mov
jp
loopne
pop
stc
rcll
movsb
cli
xorb
pushf
in
mov
lods
xchg
xor
cwtl
into
mov
in
das
test
cli
jae
psllw
xchg
rcll
js
out
inc
sub
adc
mov
loop
outsl
add
repnz
jnp
push
loopne
push
aaa
out
inc
mov
es
ficoms
or
fdivr
mov
push
scas
inc
xor
adc
insl
in
push
jecxz
xchg
shll
inc
add
sbb
loope
or
xorb
pusha
cmpsl
je
xchg
cmp
and
push
imul
outsl
adc
popa
ret
sub
mov
movsb
xchg
adc
shll
dec
cmp
cmpl
mov
stos
lock
in
sahf
es
adc
out
dec
stos
push
mov
fwait
push
icebp
decb
mov
inc
add
sti
rorb
sahf
dec
xor
pop
pop
imul
pusha
mov
enter
jp
xor
jae
jmp
dec
inc
fcomps
add
sti
mov
mov
dec
repz
arpl
pop
addr16
mov
xor
fsubl
mov
popa
fisubrl
xor
inc
out
rorl
mov
mov
fwait
stos
sarb
add
pop
pusha
xor
out
sub
jb
add
push
into
insl
cmpsl
mov
lds
imul
jbe
push
pop
jp
xor
lcall
fs
bound
mov
push
sbbl
or
loope
jmp
push
cld
sub
cmp
lea
sub
push
hlt
push
jae
out
dec
jb
jns
shrb
nop
enter
aam
inc
sahf
pop
lods
or
inc
push
iret
mov
xorl
bnd
fidivrs
and
fs
cmpsl
jge
add
stos
sub
adc
mov
mov
daa
gs
popa
jne
xor
adc
lods
xor
sbb
cmpsl
inc
inc
in
popa
pop
jmp
pop
cld
mov
xchg
jg
sbb
cld
mov
pop
jle
loopne
cmc
pop
jl
mov
push
test
jge
sbb
mov
dec
jecxz
popl
adc
scas
clc
data16
sbb
sbb
hlt
int3
bound
hlt
inc
mov
cmp
mov
push
xchg
mulb
push
or
fs
and
aaa
ffree
out
and
enter
mov
out
idiv
push
fst
daa
lock
push
cli
nop
mov
add
imul
mov
xchg
mov
ljmp
addb
push
cs
sub
ss
or
cmp
movnti
cmpsl
lock
sub
and
or
rcll
loop
and
mov
pop
cwtl
push
sub
mov
mov
jmp
add
push
sbb
dec
aam
push
je
xor
idivl
repnz
imul
or
cmp
nop
or
push
int3
cmp
mov
mov
mov
add
cltd
push
sub
repz
outsb
push
push
idivl
pop
mov
xlat
mov
sahf
mov
dec
lret
cmp
testl
nop
ds
cmp
shrb
cmc
lret
add
mov
pushf
cs
scas
dec
gs
mov
stos
test
sbb
jl
jg
pop
sub
loop
xchg
mov
outsb
repz
xchg
dec
mov
shlb
inc
mov
xor
adc
pushf
dec
arpl
not
icebp
jae
into
lret
jbe,pn
sbb
cmp
test
das
aas
out
js
shlb
idivl
stc
scas
pushf
icebp
ret
adc
enter
sub
fisubrs
dec
cmc
xor
jg
int
jbe
divl
jo
dec
ds
or
pushf
gs
mov
out
fstps
sbb
popa
jmp
ss
aad
push
cmp
roll
lret
mov
lods
xlat
test
inc
jbe
mov
fcompp
push
inc
sahf
push
cmpsb
outsb
stc
inc
dec
xor
jae
or
push
or
push
adc
sahf
in
test
adc
cli
je
dec
mov
adc
cs
lahf
xor
es
inc
adc
subb
scas
fmul
lods
leave
sub
rcr
push
jmp
xor
push
xor
lcall
jne
rorb
das
imul
mov
scas
rcrb
pop
in
cmpsl
push
data16
fs
jl
fstl
xchg
adc
outsl
mov
scas
xchg
lret
push
flds
sbb
mov
cwtl
adc
js
adc
outsl
jl
shrb
inc
and
insb
and
or
stc
inc
lods
ljmp
inc
js
or
imul
shll
lods
out
pop
mov
mov
repnz
adc
dec
mov
mov
pop
xchg
mov
js
popa
fistl
sub
cmp
mov
push
mov
std
mov
repnz
loopne
inc
dec
imul
add
pop
in
fs
sub
sbb
idivl
lods
jo
mov
xchg
enter
in
mov
sub
rorl
sbb
pop
imul
xchg
jp
mov
hlt
inc
repnz
fiadds
cmp
xchg
fildll
push
push
adc
lods
add
movsb
sub
mov
dec
ret
mov
xlat
cmpsb
dec
adc
inc
ja
lcall
push
punpckhwd
aas
cmp
adc
mov
scas
cmp
push
cs
inc
cli
jne
mov
pop
lcall
arpl
std
gs
lahf
xchg
icebp
push
jmp
mov
mov
addl
xchg
fwait
pop
gs
cwtl
push
ret
ljmp
or
out
icebp
mov
test
mov
xor
jb,pt
pusha
mov
xchg
movsb
pop
pop
jbe
jo
cmp
cmc
push
lahf
shl
inc
andl
push
lea
inc
and
subl
cmp
fwait
inc
shl
jae
decb
push
pop
cltd
add
aad
xchg
pop
mov
pushf
pop
scas
push
rorl
sbb
pop
adc
stos
mov
inc
xchg
aad
or
mov
fsubrl
xor
cmpsb
mov
rcrl
in
shlb
push
inc
xchg
jle
add
or
xor
xor
xor
ss
fnclex
stos
das
aaa
stc
sbb
fldcw
sub
dec
inc
or
mov
dec
addb
popf
mov
and
cmp
lds
mov
push
in
pop
and
lds
inc
lods
das
adc
push
popa
add
lcall
out
int3
sti
loop
mov
scas
sbb
sub
sbb
shl
jecxz
pushf
or
loopne
mov
jmp
leave
enter
mov
and
add
push
dec
jmp
outsb
pop
cmp
jo
stc
out
test
imul
push
fisubl
cmp
popa
jb
mov
out
ljmp
loope
xchg
fs
adc
dec
jg
popaw
stos
xchg
mov
xchg
sbb
cmp
inc
aaa
xor
jbe
fldcw
jp
in
inc
sub
push
dec
cmpsl
clc
mov
xor
adc
lds
pop
iret
mov
sbb
fwait
scas
xchg
scas
test
xor
ja
subb
int3
mov
pop
shr
xor
and
shll
add
add
divb
pop
jb
add
fcompl
mov
loop
cmp
sub
jge
outsl
xchg
ficoml
imul
ss
in
das
sarl
push
jle
xchg
sti
xor
push
xor
dec
pop
in
or
cmpsl
mov
push
pop
insb
mov
inc
jg
mov
ss
hlt
mov
cmpsb
inc
fwait
inc
inc
insb
mov
or
push
mov
clc
or
and
shll
sub
pop
pop
ja
repz
inc
dec
movsb
jmp
lods
popf
leave
lret
outsl
adcl
adcl
idivb
fbld
jno
sub
in
aam
push
mov
xor
inc
push
inc
sub
cmp
sub
decb
xlat
pop
ficoms
sub
out
repnz
stos
push
and
stos
jo
sub
xchg
adc
jmp
ja
rclb
jp
leave
mov
pop
sub
fcomp
ja
mov
enter
loopne
stc
sahf
filds
inc
jno
cli
into
loop
mov
cmp
mov
mov
inc
xor
sub
push
stc
jp
stos
sbb
test
inc
add
shlb
sub
icebp
xchg
stos
fisubrs
mov
aam
cmp
xchg
adc
int
push
adc
daa
addb
inc
fcoml
cld
addr16
shll
sbb
jnp
movsb
adc
jns
push
call
fs
mov
sbbb
dec
clc
shll
jp
push
add
jb
mov
aas
mov
hlt
lds
lods
mov
fdivl
sarb
cs
adc
dec
sbb
xchg
xchg
push
xchg
xchg
dec
jo
xor
addl
jge
or
lcall
repnz
jp,pn
gs
rcl
addr16
sub
pop
insb
xchg
sub
pop
sub
cs
imul
ret
arpl
ja
push
jge
xchg
ss
pop
cmc
repz
ret
pop
leave
sbb
and
cmp
add
mov
sbb
pop
xchg
cmpsl
pushf
or
pop
sbb
faddl
dec
fists
enter
in
scas
nop
rcll
fldt
or
fists
mov
push
or
adc
insb
push
ds
mov
andl
jp
hlt
sub
cwtl
and
or
push
adc
insb
outsb
adc
fisttpl
icebp
or
aas
push
adc
cmp
stos
lahf
les
mov
ds
lock
xor
in
or
lcall
movsb
loop
dec
lret
push
mov
sbb
xor
or
xor
and
dec
inc
push
and
inc
out
out
repnz
fistl
imul
xchg
in
jle
mov
jo
cmp
orl
stos
into
call
enter
jmp
sar
jne
mov
mov
mov
ja
add
dec
loopne
cmp
adc
iret
sbb
fidivrs
jmp
test
push
inc
cld
scas
loopne
add
movsb
leave
je
push
mov
das
loop
mov
sbb
sbb
cmp
pop
push
push
frstor
or
sahf
repnz
pop
mov
mov
jb
adcl
mov
xor
cmp
ss
pop
mov
push
cwtl
xor
movsl
sub
pop
jl
pusha
xchg
sarl
cmc
pop
mov
inc
ja
fiadds
push
jmp
and
clc
sub
xchg
xchg
mov
cmpsb
mov
hlt
stos
daa
mov
cmp
mov
lea
jns
cmpsb
leave
shlb
dec
jle
in
scas
outsl
add
push
and
pusha
or
jecxz
push
xchg
icebp
ss
lods
es
jbe
aaa
push
mov
std
jp
jns
add
push
sahf
push
and
enter
or
fisubs
sub
fmull
shll
adc
aam
rcrl
mov
xchg
test
push
push
mov
sarl
clc
sbb
mov
mov
xchg
pop
xlat
sti
pop
aas
stos
xchg
ret
pop
adc
mov
push
subps
lods
push
leave
fs
ja
int
xlat
loopne
or
sbb
inc
xor
mov
lock
and
mov
popa
test
cmp
and
add
and
mov
pop
cmp
add
jae
push
out
and
jb
or
xor
fidivrl
cs
fidivs
xchg
xorb
test
leave
repz
out
scas
inc
shll
mov
jg
fimuls
push
cmp
fcmovb
lcall
jbe
mov
dec
xchg
and
mov
jmp
notb
xchg
xchg
leave
jle
dec
out
into
test
adc
test
rcr
mov
sub
mov
sub
fnsave
dec
fsubrp
add
xlat
add
xchg
push
out
jbe
sub
in
and
lahf
lds
fidivrs
notb
sbb
sbb
pop
dec
bound
jno
cmp
js
push
xchg
in
inc
cltd
outsl
rclb
sbb
push
dec
repnz
sbb
xchg
lret
in
addr16
ret
loop
mov
inc
lea
mov
loopne
jo
xor
push
push
dec
adc
adc
cld
dec
shll
cmp
mov
push
mov
xchg
push
in
mov
std
lock
es
stos
sub
into
sub
mov
dec
out
jbe
sbb
rcl
push
mov
jae
pop
out
lods
push
repnz
lea
push
cmp
in
fmul
and
jg
mov
xor
sub
movsl
xchg
dec
adc
dec
pop
dec
cmpsl
jb
xor
lahf
fsubs
sbb
pop
add
xchg
dec
in
cmp
xor
test
mov
shll
inc
int3
mov
out
cwtl
add
jp
inc
test
jno
repnz
popf
push
repz
pop
adc
ret
imull
lahf
xchg
add
test
jmp
mov
cmc
push
testl
movsl
fs
adc
lock
mov
out
enter
sub
icebp
add
sahf
push
jp
movsb
pop
testl
cmp
jno
add
out
xor
lds
jge
clc
shll
xor
mov
mov
ret
cli
xchg
decb
imul
add
push
lret
mov
int3
mov
push
jne
mov
mov
pushf
and
loope
fidivs
inc
aad
bound
lea
xchg
sbb
add
mov
jge
insb
popf
adcl
int
or
pop
adc
andl
lock
out
inc
fldl
lods
adc
inc
dec
cmp
sbb
fisttps
mov
fcompl
adcl
je
adc
icebp
or
jecxz
push
iret
adc
dec
icebp
and
lcall
nop
mov
icebp
stc
imul
push
mov
xchg
stos
fs
or
cmp
outsl
lcall
pop
push
jno
das
xor
sbb
cmp
push
lea
mov
mov
sbb
xor
dec
mov
cli
stc
xchg
pop
mov
push
xor
ljmp
rorb
jo
inc
mov
xchg
push
sti
xchg
imul
jae
call
sbbb
add
xchg
add
mov
iret
xor
int3
ss
fmull
jb
xchg
cmp
popa
fsubrl
pop
cli
mov
sbb
push
cmp
dec
push
inc
faddp
xchg
sub
and
cmp
imul
push
dec
pop
repz
or
and
xchg
jo
outsl
idivb
jbe
sbb
int3
fs
add
movsb
es
mov
imul
flds
cmpsl
orl
jp
and
lret
js
sarb
test
jb
sub
std
mov
push
cmp
rcrb
inc
pop
ret
sbb
adc
cmp
and
xor
lock
xor
scas
stos
hlt
enter
out
sub
xchg
hlt
inc
mull
xchg
cmpsl
aaa
or
push
push
sbb
mov
jl
ja
sub
or
aad
mov
mov
imul
lea
and
andl
jb
jl
xchg
sbb
or
js
add
bound
xchg
or
xlat
movsb
inc
xchg
in
adc
int
pop
xchg
xor
sub
pop
movaps
movsb
and
in
daa
mov
mov
xchg
or
ret
test
pop
push
adc
mov
jbe
sbb
and
sbb
ffreep
ret
jp
notl
push
int
sbb
jge
jb
mov
lahf
insl
jmp
testb
jmp
sbb
test
mulb
cmovne
push
leave
mov
push
aaa
dec
add
inc
dec
jae
dec
mov
fstps
sahf
inc
jp
fildl
call
ljmp
dec
add
adc
hlt
pop
das
dec
clc
xor
xchg
clc
pop
jle
popa
mov
int3
xor
pusha
icebp
stos
mov
push
xor
iret
cmc
jecxz
ljmp
push
mov
adc
fmuls
ret
gs
fidivrl
cmp
cld
pop
std
xor
dec
sub
lods
popf
dec
push
inc
adc
xchg
jnp
in
fnstenv
mov
js
dec
inc
push
inc
xchg
inc
in
cmp
xlat
mov
rcl
leave
mov
into
loope
stc
adc
add
fidivl
xchg
cs
lcall
stc
fisubrl
daa
xchg
sbb
xor
pop
fs
mov
sbb
mov
es
adc
mov
cli
pop
lahf
loop
pop
into
cld
jo
lds
adc
adc
xor
mov
js
in
fcmovnbe
add
fdivrs
data16
fisubs
dec
fiadds
divl
xor
insl
and
ds
in
fs
mov
pusha
xchg
enter
lret
and
in
inc
push
into
add
xchg
mov
xchg
pop
mov
xchg
sub
or
cmpsb
jl
sub
lcall
xchg
inc
fcompl
inc
enter
movsl
jb
in
stos
imul
or
sar
fcomip
fwait
loop
cmc
loopne
ret
rcrb
mov
or
in
addr16
push
sahf
pusha
mov
jne
lods
leave
outsb
jo
iret
repz
es
icebp
cs
repz
out
ja
mov
andl
cli
fistpl
mov
lock
and
xor
notl
mov
das
test
add
sti
cmp
fldt
add
mov
inc
int3
push
pop
adc
popf
dec
inc
dec
or
data16
cmp
sahf
and
out
sub
pop
adc
inc
jmp
ja
scas
scas
sbb
add
mov
pop
lods
test
adc
in
sbb
imull
orb
out
outsl
add
arpl
ja
inc
inc
imul
inc
xchg
clc
data16
mov
jmp
fldenv
cmp
jl
packssdw
dec
lret
jmp
ljmp
in
xchg
add
dec
jae
xor
jmp
shll
or
pusha
les
push
push
rcrb
movsb
add
push
push
push
int3
dec
inc
push
ja
scas
enter
cli
add
fsubrs
out
movsb
mov
fmull
lea
loopne
fwait
cltd
out
jno
cs
mov
pop
pop
lods
push
popa
sbb
pop
or
push
jmp
pop
or
mov
sub
xchg
fiaddl
loopne
sti
xchg
xlat
aad
outsb
inc
lds
jg
inc
mov
aaa
push
mov
aaa
xchg
jle
sub
pop
push
jns
es
and
mov
sub
add
dec
sbb
xchg
enter
paddusw
flds
mov
ds
lds
inc
loope
inc
call
cltd
fstpt
pop
repz
cmpsl
dec
push
inc
aad
pop
imul
cmp
sbb
add
cmp
sbb
adc
lock
mov
lods
mov
push
insl
push
aam
pop
xchg
lea
add
mov
jmp
mov
repz
add
movsb
arpl
mov
shlb
pop
roll
inc
scas
adc
push
adc
mov
nop
push
mov
inc
xchg
cmc
jns
sarl
push
xchg
insb
xlat
adc
aaa
imul
cmpsl
mov
xchg
sbb
xchg
inc
je
stc
pusha
repnz
dec
sbb
orl
outsb
push
mov
add
jle
test
in
xlat
xchg
inc
xchg
mov
pop
sbb
inc
lahf
sbb
into
sbb
or
sub
xchg
jae
xchg
cwtl
test
call
int
or
aas
mov
test
repz
pop
cmp
or
jbe
sbb
cmc
fidivrs
ss
sub
dec
aad
xor
idivl
push
cmp
xorl
int3
ret
mov
fnstsw
inc
jno
mov
insb
cmp
adcb
pop
pop
mov
sub
loope
mov
dec
xchg
inc
shlb
data16
je
jp
xchg
xchg
mov
pop
aam
shl
cmc
mov
lea
test
cs
decb
push
test
jge
add
lahf
insl
test
mov
mov
outsl
mov
cmp
fisttps
xchg
int
scas
inc
js
mov
push
mov
jo
fdivrl
mov
cmpsb
xor
push
or
cmpsl
xor
xchg
in
mov
sbb
jb
mov
and
repnz
push
or
lea
push
add
jns
std
push
mov
mov
cs
xchg
xor
test
jb
mov
aaa
adcb
mov
inc
js
jns
fsts
ja
pushf
ror
xor
xor
dec
pop
popa
mov
inc
out
push
push
add
jmp
xchg
rorl
mov
add
scas
xchg
add
and
lods
jns
lods
mov
or
push
lahf
test
nop
shlb
sbb
mov
loop
push
imul
das
lods
xor
flds
sahf
cltd
sub
ja
roll
xor
xor
icebp
and
mov
movsb
cs
xchg
jno
dec
ja
mov
int
loopne,pt
inc
jmp
sub
imul
cltd
xor
adc
sbb
and
push
ss
mov
xchg
push
sub
mov
cwtl
imul
subl
cs
rorb
pop
repnz
mov
jge
jno
cmp
or
lret
or
lret
mov
mov
push
call
sbb
daa
push
sbb
mov
mov
add
sbb
aam
test
and
jae
sbb
dec
cmp
jge
test
and
sub
sar
or
data16
push
dec
out
adc
lock
cmp
sbb
dec
mov
and
es
repnz
or
test
call
movl
dec
je
and
je
popa
fnstcw
mov
push
scas
mov
jae
cld
sti
lea
inc
jns
sbb
rcll
inc
outsb
mov
jbe
add
data16
and
stc
sub
adc
sti
or
sahf
test
insb
inc
addr16
call
imul
and
iret
sbb
xor
push
data16
repnz
add
mov
imul
sub
fs
lahf
cltd
sbb
aam
pusha
cwtl
leave
pop
insb
clc
mov
hlt
stos
imul
adc
enter
jne
div
or
jg
repnz
mov
sub
pop
push
add
fdivrl
inc
fwait
push
inc
outsb
mov
test
mov
xor
xor
mov
test
lods
sub
xor
aam
jnp
mov
daa
add
sbb
andl
fsubl
xchg
mov
sub
lods
int
das
loop
sti
lods
or
push
mov
cltd
add
cmp
cmp
lcall
subb
icebp
sbb
outsb
add
sbb
movsl
icebp
sbb
push
cltd
inc
bound
jp
fmul
mov
pop
cmp
push
adc
and
mov
std
mov
xchg
aas
jns
out
insb
data16
insl
add
push
subl
stos
testl
enter
and
popa
jp
imul
adc
lds
fucomp
fwait
out
ja
pushf
mov
cld
call
orb
jno
popf
cmc
mov
into
cli
push
sbb
pusha
sarl
dec
std
dec
ja
cltd
std
popa
std
or
out
sbb
cld
pusha
repz
mov
out
ret
negl
sub
sub
in
cmp
outsl
jo
mov
mov
fimuls
mov
out
add
mov
sti
sbb
mov
scas
and
test
jbe
sbbb
sub
int3
mov
cmp
mov
ds
ljmp
mov
adc
xchg
leave
fnstsw
jmp
popf
mov
sbb
add
xchg
mov
inc
popf
repz
aas
pop
push
in
xor
fidivs
inc
xchg
lods
js
std
ljmp
inc
test
aaa
insb
test
dec
leave
addr16
pop
mov
fimuls
scas
out
or
cli
ja
and
jmp
mov
cld
mov
jns
in
sbb
fucom
pusha
add
cmpl
mov
pushf
and
mov
lahf
or
push
test
pop
inc
test
sti
mov
pop
cwtl
jle
jmp
rcll
push
pusha
daa
lret
arpl
add
hlt
outsl
subl
mov
inc
sbb
mov
mov
mov
mov
inc
pop
lea
movb
mov
dec
mov
cmp
arpl
in
sbb
int3
cmp
xchg
icebp
pminsw
andb
in
mov
mov
adc
add
pop
dec
sbb
jecxz
cld
xchg
test
rcll
subb
mov
push
inc
lds
test
ljmp
imul
mov
les
adc
mov
in
mov
mov
dec
testl
xor
call
sahf
shll
jbe
mov
add
ffreep
rcrl
jl
and
shll
dec
sar
or
mov
or
notl
outsl
cmpsb
jnp
dec
cmp
and
je
movsl
cli
sbb
mov
mov
fmull
cmpsl
or
xor
xchg
aaa
scas
popa
cmp
mov
arpl
xchg
mov
punpckhwd
ret
mov
mov
lods
push
daa
fisubl
pushf
in
into
mov
adc
popa
stos
mov
les
xchg
lock
add
sub
dec
push
in
inc
xlat
ds
fcmovbe
cmp
pop
sub
sbb
push
add
cli
adc
lcall
int
rorl
ret
cmp
pop
scas
cmp
mov
push
adc
lods
mov
cmpsb
xchg
mov
rcrb
cmp
xchg
push
out
sub
inc
repz
jp
in
shlb
push
das
mov
xchg
mov
negl
fistpll
lret
imul
js
add
adc
ljmp
mov
xchg
test
mov
and
inc
xor
cltd
std
popf
ds
enter
icebp
pop
pop
mov
inc
mov
fadd
and
xor
jg
stc
xchg
sub
loopne
jmp
jnp
arpl
jle
dec
pop
aam
lea
inc
ret
fwait
dec
out
notl
in
cld
dec
aaa
dec
jb
sarl
push
lods
pushf
clc
adc
scas
subl
mov
cwtl
add
js
add
stos
iret
push
out
sub
inc
cli
cmp
jl
orl
push
iret
out
mov
pusha
jle
fcoms
jne
ret
xor
push
sbb
or
mov
xorl
jmp
dec
test
out
pop
mov
pop
cld
sub
push
inc
fildll
mov
sbb
loope
dec
lea
xor
dec
in
idiv
std
jmp
jo
ret
or
fistpll
jo
out
cmc
push
pop
sbb
pushf
or
sub
mov
push
mov
sarb
ret
cli
sarb
mov
outsl
adc
xchg
or
pop
jnp
sbb
cmp
loop
es
mov
sbb
lea
sub
cmp
xor
push
ljmp
out
sub
movsb
mov
cli
xchg
push
mov
dec
loope
call
outsb
mov
je
cltd
adc
roll
xor
std
bound
stos
shll
push
inc
xchg
sub
in
sub
sbb
int3
pop
shr
loope
push
adc
fcmovne
add
adc
xor
int
mov
add
fidivs
mov
subl
subl
lods
arpl
clc
adc
push
aas
adc
into
lret
pop
loope
ja
pusha
bound
mov
xchg
cwtl
adcl
mov
cld
ja
lock
xchg
mov
or
mov
mov
int
dec
xor
pushf
lret
call
xor
xor
addr16
fwait
ret
sub
pusha
ja
jns
jbe
lret
lods
insb
lea
jo
lock
or
fsts
lods
sbb
enter
mov
mov
fisubrs
mov
int3
mov
out
dec
jge
jno
or
mov
xor
pushl
and
aad
test
inc
xchg
add
mov
mov
call
sub
addr16
sub
pop
lahf
addr16
add
lret
inc
hlt
sub
push
jns
adc
or
pop
insb
popa
fbld
jmp
lds
lcall
int3
mov
fxch
sti
sti
push
pop
outsb
les
dec
lret
or
push
push
hlt
lock
lcall
scas
jmp
jmp
cmp
pop
adc
sub
cmpsl
cmpsl
pop
cmpsb
mov
xor
adc
adc
mov
jg
push
push
addl
mov
cmc
dec
or
and
stc
pop
mov
xchg
lds
test
push
out
cmp
js
lea
arpl
daa
pop
pop
jmp
xchg
jo
call
rcl
jmp
mov
lds
push
cmp
cmpsl
inc
add
inc
mov
add
je
loopne
scas
subl
cmpsl
test
push
push
dec
dec
dec
js
jp
out
cmpsb
cmc
cli
sub
mov
in
dec
mov
clc
insl
scas
mov
push
push
xchg
daa
cmc
lods
or
mov
repnz
mov
sbb
addr16
xchg
daa
lods
pop
jge
rcrl
jp
pop
fidivl
xchg
rcll
testb
mov
orl
lret
lds
icebp
push
enter
les
inc
push
xchg
jno
leave
repnz
mov
add
test
adc
mov
cmc
and
xor
stc
aas
ljmp
idivl
dec
mov
std
loopne
sbb
adc
adc
jbe
into
clc
cmc
mov
push
xchg
scas
and
mov
jg
xchg
xchg
scas
cmp
xor
outsl
mov
mov
hlt
nop
cmp
jo
cs
add
pusha
stc
cmc
cmp
mov
lods
cmp
inc
mov
pop
imull
adc
push
dec
roll
xor
cwtl
and
je
dec
fdiv
push
dec
xchg
aaa
in
inc
cs
xchg
adc
push
aad
pop
cmpsb
dec
and
jae
push
dec
out
pop
inc
nop
jnp
in
inc
test
sbb
xor
add
aas
push
test
test
ss
pusha
and
jbe
pop
push
in
cmp
jns
xchg
sub
fisttpll
popf
push
loope
push
scas
xchg
addr16
xor
ss
addl
jl
mov
pop
fisubrs
xchg
cmp
stos
or
xchg
in
cld
push
test
idivl
cwtl
push
sub
xchg
mov
xchg
loop
mov
and
xchg
pop
insb
mov
in
testb
mov
pop
xor
icebp
jnp
addl
inc
aas
add
add
sub
dec
stos
jnp
mov
imul
or
mov
out
sbb
fcmovu
jl
aad
sub
xchg
jo
dec
das
sub
sarb
popa
aad
fcmovne
cmpsl
pop
ja
add
xchg
adc
call
sbb
movsb
xchg
sbb
adc
nop
push
int
add
mov
mov
adc
js
mov
lock
pop
leave
aaa
sbb
arpl
nop
mov
pushw
lock
dec
rolb
pop
test
sbb
fldcw
cmp
push
scas
cmp
sti
adc
shrl
mov
dec
subb
js
mov
xor
mov
xorb
aas
adc
xchg
pop
push
xchg
mov
scas
out
push
adc
gs
lods
adc
mov
cmp
cmpsl
or
nop
mov
dec
ja
mov
enter
movsb
dec
mov
fcomps
lods
jmp
cltd
and
stc
cmc
pushf
cltd
icebp
gs
mov
cmp
dec
and
imul
push
fstl
addr16
jns
icebp
frstor
mov
sti
fs
icebp
cltd
mov
aam
pop
pop
lock
data16
and
pop
inc
push
fcompl
repz
fcomps
cmpsb
dec
adc
lods
repnz
pop
dec
in
cmp
cmp
cmp
mov
push
test
scas
clc
dec
icebp
mov
jg
mov
mov
xchg
movsb
sbb
fstps
xlat
xorb
xchg
sbb
sub
rcrb
cmc
mov
xchg
leave
adc
jns
icebp
out
jb
fldcw
out
dec
jmp
or
shll
bound
add
ja
cmp
notl
testb
mov
pop
out
aad
push
push
mov
or
jle
dec
jge
add
sub
daa
pop
out
cmpsb
scas
jmp
sbb
mov
adc
inc
je
mov
hlt
mov
jb
daa
es
decl
xchg
xor
shll
add
jge
fdivl
inc
add
loope
and
jbe
inc
dec
mov
call
sbb
pop
push
dec
sbb
stos
pop
inc
ss
ds
jns
addr16
push
dec
mov
ret
sti
or
mov
pusha
test
ds
inc
and
pop
imul
lock
movsb
ja
outsl
scas
mov
rolb
in
adc
adc
int
add
pop
das
test
xchg
mov
xchg
vdivpd
and
pop
or
push
add
sahf
or
inc
inc
sbb
sahf
sub
mov
inc
imul
xchg
xlat
test
into
cmp
cmp
sub
push
pop
stos
subl
adc
mov
push
xor
mov
add
mov
mov
mov
dec
dec
pushl
ja
out
stos
push
call
icebp
sti
pop
stos
and
sar
mov
dec
lock
les
xchg
lea
movsb
mov
mov
push
mov
sbb
dec
inc
add
in
jnp
bound
cltd
sub
jo
in
insl
les
pop
daa
dec
shrb
push
es
daa
add
jb
xor
xchg
inc
xchg
loope
mov
xor
xor
mov
cmp
fisttpl
sbb
out
sbb
xchg
jle
ret
scas
xor
xor
mov
imul
mov
jno
xor
mov
aaa
les
lea
mov
mov
sub
pop
insl
int
or
incl
xchg
out
mov
fists
cwtl
fimull
inc
dec
call
cmp
and
nop
popf
fcoms
jo
inc
bound
or
aaa
sbb
and
aam
mov
pop
push
ja
push
add
in
aas
mov
xchg
pop
cli
adc
inc
aas
adc
sbb
mov
xchg
pop
mov
push
aam
or
jnp
push
jnp
adc
movsl
insl
out
mov
fadd
ljmp
xchg
jne
fld1
arpl
push
pop
aaa
mov
sub
repz
mov
mov
movsl
pop
leave
mov
push
popf
xchg
aad
adc
push
test
scas
mov
repnz
cmpb
repnz
aas
push
cld
xor
dec
pop
push
or
repnz
je
mov
mov
mov
sub
fstpt
jo
iret
imul
incb
sbb
pop
jns
mov
jecxz
sarl
lods
sub
mov
das
in
pop
cmp
imul
out
lods
stos
xchg
push
pop
mov
icebp
mov
jnp
hlt
aad
push
mov
pop
sbb
fwait
lcall
sbb
mov
inc
sub
popf
xlat
pop
imul
jnp
jp
push
pop
jo
mov
pusha
sarl
add
ret
fdiv
into
jno
mov
push
mov
pop
or
fdivrs
adc
rclb
cwtl
fdivl
pop
out
mov
mov
lcall
adc
loopne
dec
aad
xchg
jmp
cmpsb
xor
filds
cmpsl
ret
cld
cmp
mov
aas
xchg
pop
sbb
cld
sub
js
mov
in
stos
int3
test
stos
rcll
push
mov
or
add
loope
lds
dec
leave
out
jle
fs
add
loop
jmp
xchg
shrl
fcomp
sbb
sahf
dec
xchg
push
cmp
jg
ja
addl
ss
jns
pop
in
mov
jnp
in
push
fisubrs
lcall
fwait
iret
pop
push
mov
pushf
fidivl
sbb
std
push
push
repnz
adc
jns
sbb
repz
jmp
fisubrl
dec
inc
push
jnp
cld
stos
pop
dec
jecxz
sahf
arpl
out
pop
daa
jle
mov
mov
push
int3
mov
mov
adc
bound
adc
mov
ja
inc
xchg
inc
adc
or
pop
lods
or
inc
adc
into
push
mov
fistps
fcmovnbe
mov
fstl
jo
cwtl
mov
jo
cmpsb
es
repnz
pop
mov
jne
inc
lahf
and
or
adc
push
sbb
fcomp
jb
lds
push
popf
and
inc
inc
cmp
and
dec
arpl
cltd
sbb
or
fsub
pop
cs
mov
fistpll
cmp
insl
les
jg
imul
xchg
xor
sbb
out
jb
jmp
test
pop
or
in
fs
ss
loop
imul
mov
or
inc
clc
inc
popa
pop
add
loopne
xchg
xchg
dec
hlt
adc
in
leave
outsb
out
adc
sar
hlt
lret
xor
cli
rorl
xchg
pusha
xchg
xchg
nop
mov
xchg
xchg
pop
fisubrl
fdivrp
mov
lret
lahf
push
or
mov
push
dec
xchg
dec
sahf
inc
addr16
and
dec
inc
dec
jbe
scas
mov
mov
mov
mov
xor
std
loopne
icebp
mov
jmp
cmpsb
movsb
das
sbb
or
push
ljmp
roll
jne
cltd
or
in
test
repnz
xchg
sbb
outsb
test
rcl
pop
nop
cmp
sub
daa
mov
lds
sub
imul
rclb
adc
cmp
leave
pop
aaa
js
popf
xorl
xor
and
add
push
ljmp
and
and
and
out
cmp
mov
inc
pop
std
add
inc
jnp
loop
fists
dec
outsl
lahf
in
sbb
bound
or
adc
popf
bound
xchg
aas
jge
push
aas
xor
sub
mov
rorb
loop
jecxz
enter
mov
testb
fstl
push
add
test
fistpl
cwtl
xlat
mov
lock
cmp
jo
icebp
sub
mov
frstor
inc
and
cmc
fldenv
inc
or
inc
jnp
inc
icebp
fimuls
rcl
rol
cmc
out
ds
gs
test
shlb
dec
ljmp
jmp
dec
and
cmp
incl
jle
movsl
rcl
push
notl
push
scas
pop
add
popf
rcl
sub
adc
andl
push
test
cld
gs
mov
jns
mov
cmp
call
pop
ret
or
cmp
fildl
xor
lcall
movl
jg
and
inc
sbb
dec
shl
adc
inc
movsl
sub
push
dec
std
mov
mov
ret
pop
mov
daa
popa
in
int3
das
fsubs
je
aad
arpl
dec
dec
lea
or
neg
lret
in
push
mov
sbb
cmp
add
mov
dec
pop
xor
fadds
dec
or
pushf
cs
cld
or
jl
cwtl
jns
cmc
lret
iret
imull
lahf
push
xor
push
nop
and
adc
jl
sub
cmp
aaa
stc
xchg
xchg
sbb
mov
cmp
stos
cli
aas
or
stos
or
xlat
or
mov
sbb
ljmp
xor
pop
mov
aad
repz
cmp
add
push
std
mov
loope
mov
jecxz
icebp
push
sub
rorb
jg
mov
clc
out
dec
pop
inc
sarb
pop
sbb
pop
inc
popa
mov
roll
mov
add
xchg
in
jae
into
pop
loopne
icebp
sbb
addr16
mov
lods
insl
xor
cwtl
xor
xor
fistps
andl
mov
dec
pop
push
jecxz
dec
sbb
adcl
aad
rolb
xor
hlt
shlb
loope
decb
repnz
push
pushf
push
sahf
out
popf
add
lods
loope
mov
inc
leave
int
add
leave
push
lret
movsb
fildl
arpl
push
xor
mov
shl
ror
shrb
adc
imul
fildl
rolb
jo
sub
jg
mov
inc
hlt
ret
jbe
cmp
movsb
mov
and
pop
cltd
hlt
cwtl
mov
insl
cmp
les
movsb
mov
mov
mov
insl
sub
scas
sbb
addb
adc
lock
pusha
lcall
aaa
xchg
xor
rcl
mov
sbb
stc
push
adc
popa
inc
pop
popa
adc
push
mov
cmp
xchg
stos
jns
sahf
data16
sbb
jg
andb
mov
lods
xor
addr16
shrl
mov
sub
mov
fwait
jbe
push
pop
aas
adc
jp
test
outsb
cmp
daa
and
xchg
clts
mov
push
fmul
leave
imul
xor
jae
mov
ja
cli
out
push
lret
inc
cmpsb
popf
je
push
mov
xchg
pushf
scas
xor
xor
fistpl
jmp
pop
cmpsl
cmp
sbb
das
lock
shl
out
andl
pop
inc
je
lods
out
scas
add
inc
pop
andb
lea
push
mov
hlt
stos
lods
jl
insl
ds
ret
mov
xchg
xor
pop
or
sbb
fdivs
pop
and
jmp
faddp
mov
out
std
mov
cwtl
gs
pusha
fbld
sbb
inc
stos
jnp
lods
mov
cld
mov
daa
pusha
call
fldt
add
sbb
lds
push
incl
add
movntps
push
lret
ljmp
mov
jo
pop
mov
inc
mov
lods
adc
test
xorl
fwait
dec
cmpb
call
movq
shrb
push
les
int3
jb
adc
es
push
cmc
loope
inc
or
inc
push
adcl
mov
jp
inc
test
inc
inc
jno
push
lock
cmc
adc
mov
loope
mov
sti
xlat
scas
pop
or
popa
bound
or
iret
push
fcmovnu
lea
fdivrs
dec
mov
sbb
rol
push
sub
push
leave
mov
mov
loope
mov
push
xorl
bound
jge
fidivs
mov
setnp
mov
mov
enter
clc
popf
insl
imul
cwtl
lcall
dec
call
pusha
dec
ja
in
out
popa
arpl
inc
enter
ljmpw
adc
cmpsl
sbb
aam
jnp
and
dec
sub
dec
fidivl
fwait
jo
and
jne
or
cli
test
jbe
dec
cltd
fmuls
mov
and
movsb
test
clc
sub
pop
pushf
sub
mov
lods
sbb
jl
and
test
out
jb
adc
xlat
test
push
sbb
les
add
jmp
xor
scas
cs
and
cs
mov
mov
cmc
push
xchg
adc
iret
adc
rorl
cmpsl
arpl
cld
fbstp
das
mov
jmp
fnstsw
inc
loope
mov
lahf
bound
push
dec
sub
xchg
sbb
pop
sbb
icebp
adc
xchg
xor
pop
repz
outsb
push
repz
sub
jbe
push
ds
dec
fldcw
xor
xor
mov
outsb
bound
lods
xorl
imul
outsb
loop
loop
push
cmp
ss
aad
int3
push
insl
aas
in
push
faddp
mov
outsl
sub
fwait
cmp
xchg
fwait
cltd
push
or
mov
je
imul
pop
xchg
pop
inc
dec
mov
cwtl
mov
xor
cmp
lock
pop
push
and
bound
data16
in
aad
mov
and
popa
nop
fldl
mov
fisttps
xor
movhps
mov
into
out
jecxz
push
and
int
fldcw
xor
shlb
dec
push
cli
or
ret
subl
ret
cwtl
inc
mov
call
and
sbb
xor
sbb
cmc
das
mov
icebp
call
xorl
or
cld
cmp
ficoms
lcall
add
aad
in
mov
into
out
pop
push
xor
fnstsw
scas
std
inc
js
cmpsb
mov
inc
push
mov
sub
lods
not
jecxz
scas
jb
mov
insl
pop
movb
pop
das
aaa
outsl
shll
rcll
int3
in
pop
fisttps
sarl
and
sbb
pusha
mov
fidivl
xchg
xchg
pushl
jb
cmp
push
mov
or
or
dec
adc
aaa
lock
popa
push
inc
sub
sbb
sahf
adc
and
or
pop
or
mov
mov
push
pop
stos
js
mov
test
fbstp
cmp
clc
pop
xchg
scas
pop
rorb
jmp
shll
in
jecxz
push
xchg
imul
mov
sub
out
mov
cld
test
inc
sti
mov
and
test
loopne
cmp
sub
mov
fbld
movsl
scas
jle
mov
xor
dec
xor
sbb
in
cld
lret
fucomip
iret
sbb
mov
jge
mov
push
loop
mov
mov
mov
jmp
lret
inc
jae
lcall
mov
xorl
inc
cmp
jbe
sbb
xor
jb
cld
mov
lahf
sar
pop
popf
icebp
xchg
inc
popa
xor
mov
sar
push
sahf
xchg
adc
movsb
jnp
imul
xor
enter
inc
inc
dec
mov
cwtl
sbb
ss
push
test
mov
outsb
jo
lock
faddl
mov
add
divb
lcall
cs
jmp
pop
rorl
incb
data16
rorb
sbb
jp
xor
hlt
push
out
mov
pop
pop
lds
in
cwtl
push
mov
pushf
push
scas
lods
push
std
das
not
lret
mov
xlat
pop
cmp
jo
out
xor
push
roll
xchg
cltd
ret
aas
sub
test
in
outsb
push
pop
daa
fiadds
mov
mov
pop
pop
subl
jl
lret
sahf
mov
mov
or
dec
mov
loop
push
mov
lret
or
pop
ja
inc
sub
cmpsl
push
call
stos
adc
or
sbb
aam
loop
jmp
frstor
scas
xor
mov
fsubr
sub
out
pop
bound
adc
jo
mov
scas
into
je
mov
or
and
popa
pushf
xor
nop
mov
das
fwait
imul
lret
aas
mov
out
subl
and
arpl
iret
add
into
leave
push
lock
lcall
xor
out
mov
inc
sti
inc
mov
loope
and
lods
aaa
mov
out
popf
dec
out
dec
cmpsl
adc
pop
xchg
xchg
jbe
pop
xchg
aas
test
jbe
lock
and
and
fiadds
lret
mov
jbe
nop
fisubrs
inc
adc
jb
jl
mov
and
mov
mov
scas
xchg
add
pop
cmp
rorl
dec
jmp
dec
das
mov
cltd
xor
inc
outsl
outsl
mov
fimull
hlt
pop
std
pushf
leave
lods
fcomi
sub
jne,pt
test
add
cli
mov
sahf
pop
in
loop
cmp
sbbl
sbbl
stc
iret
mov
stc
adc
mov
pop
add
in
sub
stos
pusha
mov
mov
inc
cmpl
jge
mov
repnz
cmp
out
push
hlt
insb
xchg
lret
jl
cmp
aad
ret
icebp
loopne
hlt
xlat
insl
imul
test
dec
mov
xchg
stos
cld
loop
cmp
pushf
imul
lock
push
push
frstor
fs
subl
cmp
add
dec
dec
sbb
push
pop
xchg
test
dec
jo
sbb
jnp
mov
popa
rorb
into
fnstenv
pop
bound
mov
or
iret
sbb
pop
sbb
int
inc
les
es
xchg
add
or
adc
push
add
inc
scas
mov
mov
mov
mov
arpl
and
mov
xor
aas
ja
aas
push
adcb
pop
inc
dec
out
lret
dec
mov
mov
dec
dec
sbb
xchg
jle
clc
dec
xchg
out
pop
mov
int3
or
stc
dec
mov
test
xor
int
lds
cmp
cmc
shll
pop
movsl
xor
jo
into
repz
fstp
sbb
loope
jl
std
leave
or
dec
dec
cwtl
sub
out
xor
inc
adc
gs
sahf
scas
adc
push
mov
fcmovb
sub
xor
sbb
inc
sahf
jae
or
add
push
mov
jl
ret
ss
mov
mov
push
into
mov
mov
dec
stc
stos
int
rcrb
jb
repz
ss
stos
movl
cli
and
cmp
mov
jae
in
jmp
rclb
insl
mov
aas
fwait
mov
push
sahf
or
popa
dec
fnstenv
sub
cli
daa
mov
mov
pop
push
movsb
test
es
pop
popf
xchg
jg
xchg
pop
mov
mov
fcmovnbe
std
aaa
or
mov
imul
mov
inc
lods
xlat
xchg
std
xchg
xchg
add
pop
or
dec
mov
sar
mov
mov
adcb
xor
test
push
or
stos
sti
push
and
ljmp
push
hlt
add
jbe
test
xchg
push
xor
sub
xchg
loopne
imul
sbb
les
jle
gs
dec
inc
add
fs
fdivrl
cmp
adc
cld
sbb
push
sub
or
inc
mov
cmp
repnz
rcrb
dec
and
mov
scas
adc
push
loop
cmp
scas
dec
movsl
jg
repnz
pop
fwait
inc
xchg
insb
leave
mov
or
iret
add
leave
xor
jmp
aaa
inc
jnp,pn
fists
sahf
jne
jns
popf
clc
cmpl
movsl
pop
mov
in
sbb
std
rol
in
lea
adc
sub
xchg
aaa
jge
mov
fstl
insb
test
inc
dec
mov
adc
ja
ljmp
imul
and
scas
or
mov
cmpsl
mov
jae
xlat
add
push
or
jae
std
aad
jb
mov
push
ja
aad
xor
lret
aas
and
fcomps
jle
adc
push
mov
loopne
ss
iret
cmp
ss
jmp
mov
cmp
pop
jcxz
or
cmp
lret
inc
push
mov
add
in
cs
xor
cmpsb
jmp
inc
pusha
fidivs
or
mov
int3
insb
xor
sbb
xorl
flds
js
shr
push
mov
or
or
repz
add
repnz
jecxz
in
int
and
jmp
cmp
jp
ja
and
jns
std
mov
dec
jnp
jge
mov
mov
lds
int
push
and
movsl
jp
jecxz
or
cmovno
mov
cltd
sarb
ja
subl
jne
int3
mov
cmp
sbb
cltd
out
dec
sbb
rorb
outsl
rorb
bound
ds
popa
mov
fimull
std
aas
adc
arpl
sbb
call
inc
adc
int3
std
lcall
mov
add
out
adc
cld
fdivs
data16
iret
ret
cli
nop
mov
mov
pusha
xor
adc
fisubl
rcrl
fcom
bound
xor
dec
mov
scas
ja
ret
and
sub
xor
mov
cmp
loopne
and
jle
movsl
cmpsl
add
mov
sub
fstpl
pop
cltd
cwtl
mov
sub
test
out
xchg
cmp
out
outsb
fbld
adc
cmp
inc
cmp
mov
xchg
mov
mov
inc
inc
jge
cld
pushf
iret
and
and
sbb
fcompl
dec
sbb
xchg
lret
insb
lea
les
outsl
dec
pop
or
fistps
cmp
sbb
addb
lahf
in
int
xlat
daa
imulb
adc
cmp
out
xor
pusha
leave
push
dec
push
add
cmovo
ret
jno
push
movsl
pushf
dec
imul
sbb
nop
fistpl
fmuls
sahf
int
es
mov
cmc
mov
outsl
lods
sbb
pop
mov
mov
repz
fwait
inc
pop
mov
notb
jecxz
dec
lods
loope
jp
sub
rclb
mov
repnz
mov
xchg
push
xchg
adcl
xor
and
sub
out
aaa
sbb
jbe
cmp
sbb
pop
xchg
icebp
jle
popa
cs
and
jno
inc
sub
es
fs
xor
aam
loope
mov
gs
inc
push
orl
jmp
les
push
stos
jmp
dec
jl
filds
int
shl
or
inc
push
mov
lds
xlat
rol
in
lret
out
fcmovu
cmpsl
cltd
xlat
mov
adc
mov
ret
imul
shr
pop
mov
shrl
sub
ljmp
dec
aaa
in
sbb
pop
mov
aad
stos
call
mov
sub
mov
xchg
cmp
xor
mov
pop
sbb
mov
xor
or
pop
or
inc
mov
call
insl
mov
icebp
cld
xor
dec
repz
jnp
dec
push
test
divl
add
hlt
jbe
xor
xchg
loopne
dec
je
cmp
and
imul
sbb
mov
shlb
mov
xchg
pop
pusha
xchg
push
cmp
shrl
movsl
into
out
daa
and
xor
into
or
fsubrl
cmpsb
xchg
lock
mov
pushf
lcall
pop
lcall
xor
pop
push
pushf
or
push
mov
mov
popa
inc
fdivrl
pop
and
cmp
fs
push
and
jp
sub
cwtl
insl
jge
stc
bound
jl
out
rolb
rclb
das
int
inc
insl
cwtl
jne
and
fcoml
pop
xor
jbe
mov
in
lcall
stos
xchg
es
test
int3
jg
js
mov
test
jo
push
test
sbb
mov
jne
add
hlt
push
pushf
pop
xor
gs
popa
mov
out
ret
in
movsb
aad
pop
call
cmp
fstl
pop
popa
ficoml
xchg
repz
push
aas
nop
xchg
mov
jbe
or
lahf
std
in
add
lcall
pusha
xchg
jbe
mov
outsb
in
sti
icebp
sub
cmp
mov
adc
aaa
pop
sbb
add
rclb
pop
mov
xchg
stos
jmp
scas
mov
jb
shll
les
fstpl
nop
xor
dec
or
inc
cmpl
loope
cmp
gs
push
aaa
inc
sub
incl
and
cmp
mov
divb
xchg
jb
or
pop
dec
sub
and
mov
mov
jb
add
cmp
lea
int
xchg
lods
xchg
adc
jae
aas
mov
xchg
data16
dec
or
push
arpl
filds
mov
ret
xchg
sub
mov
fs
into
mov
cmp
leave
pop
push
xor
mov
inc
out
pop
inc
aam
fcomps
pop
pop
push
dec
outsb
mov
jo
test
aaa
dec
enter
ja
jge
and
jp
cli
shlb
shrb
js
inc
icebp
dec
cmp
dec
dec
or
cltd
sub
cltd
addb
cmp
add
ret
xchg
cmc
push
decl
push
xchg
push
lahf
cmp
pop
dec
lods
int3
movsb
inc
mov
fadds
push
pop
jmp
adc
add
mov
or
and
or
testb
and
std
pop
pop
test
add
out
cmc
and
push
pop
fmul
mov
inc
jbe
jge
aam
clc
sbb
in
mov
pop
pop
out
add
and
inc
pop
push
leave
les
mov
pop
out
add
je
fists
pop
jno
mov
fneni(8087
aaa
and
out
out
js
xchg
xor
mov
inc
addl
dec
mov
adc
adc
fmuls
out
cmp
add
aas
jns
iret
les
or
gs
adc
rolb
mov
shll
scas
push
test
adc
inc
or
push
mov
out
jle
scas
adc
push
stos
xor
stc
jbe
cmp
movsl
mov
dec
mov
icebp
sub
mov
cmp
xchg
push
xchg
mov
or
adc
jne
mov
imul
ja
jmp
mov
shl
cmp
pop
popa
inc
dec
or
fstpl
inc
shl
pop
mov
fwait
inc
outsb
pop
jae
jg
xor
out
mov
cmp
in
mov
ror
verr
jno
loop
sbb
and
pop
fiaddl
addr16
test
and
xor
cmp
or
jne,pt
adc
fidivrl
movsb
ljmp
fnstsw
jle
xchg
ja
fs
xor
mov
xor
xchg
pop
test
jbe
xlat
dec
jbe
std
in
jmp
daa
sar
or
cmp
dec
in
and
pop
out
jecxz
imul
inc
sub
inc
bound
sbb
cwtl
rolb
xchg
dec
stc
or
mov
mov
or
dec
inc
xchg
in
mov
scas
jecxz
push
fildl
fsts
enter
mov
sub
mov
icebp
int
loopne
push
and
les
clc
loope
lahf
jg
mov
xor
popa
mov
mov
sbb
sbb
f2xm1
hlt
mov
adc
in
jl
pop
cmp
lret
jge
ror
shrb
js
inc
hlt
push
xchg
je
js
mov
pop
xchg
sbb
lods
ss
insl
mov
push
daa
pop
jecxz
insb
xor
xor
ds
test
outsl
sub
lcall
push
aad
mov
xorl
jecxz
add
dec
loope
or
cmp
lret
loopne
push
stos
xor
shlb
rcrl
jmp
mov
mov
inc
rorb
repz
popf
cmp
arpl
lods
pushf
test
fadds
cmp
add
aas
sub
fildl
xchg
jno
jne,pn
push
rep
cwtl
jae
sbb
mov
sbb
xchg
mov
add
xchg
pop
mov
hlt
adc
add
inc
in
xlat
test
push
dec
xchg
mov
jbe
out
xchg
push
sbb
xchg
xor
ficomps
jae
sbb
xor
inc
les
or
mov
pop
rorl
fwait
adc
lret
rolb
push
shll
or
pushf
mov
loop
jno
aad
sti
xchg
fiadds
cmpsb
inc
dec
insl
pop
fldt
xchg
pop
jp
sbb
mov
aas
mov
lret
loopne
lock
inc
gs
lret
pop
adc
mov
mov
sbb
out
popf
nop
cli
xor
mov
mov
enter
mov
mov
iret
ds
mov
adc
pop
leave
mov
jb
movsb
sub
shrb
in
jb
cmp
pop
inc
mov
or
push
loopne
stc
cltd
mov
imul
shrl
jbe
jno
pop
cmpsb
test
mov
cmpsb
stc
cli
push
dec
push
or
add
movsb
loop
rorl
lods
mov
pop
fists
adc
inc
mov
scas
leave
addr16
lea
jae
stos
pop
cmp
xchg
and
push
test
cmp
imul
xor
out
mov
call
cltd
mov
insl
sbb
dec
out
mov
pop
sarl
std
add
sar
and
loopne
mov
add
jp
add
lret
jp
movhps
cmpl
imul
pop
repz
lahf
pop
jne
stc
pusha
dec
cli
jmp
fiaddl
jbe
jmp
in
fstpl
pop
fstpl
and
fimuls
jbe
ja
dec
sti
jl
cltd
xor
push
and
outsl
inc
ja
imul
and
movsl
mov
mov
pop
or
gs
ja
dec
fs
xchg
lret
or
push
jg
std
cmpsb
jbe
mov
mov
sub
dec
insl
mov
in
lods
daa
decl
cmc
in
cmp
mov
mov
stos
imul
les
xlat
scas
popf
adc
mov
jecxz
das
mov
scas
xor
ja
negb
jp
inc
sti
shll
repnz
movsl
push
imul
daa
fs
rcll
xchg
mov
mov
imul
mov
fstl
fdivrs
cmp
lds
pop
cld
cmp
scas
jae
shr
stos
les
testb
jno
sub
mov
mov
sbb
fucom
pop
mov
pop
in
lods
jl
in
cld
movsb
mov
mov
xchg
test
bound
lcall
xchg
push
in
or
mov
xor
clc
cmp
xchg
xchg
test
lods
inc
outsb
fimull
jbe
orb
daa
cmpsb
rolb
xor
mov
rcl
mov
or
aas
adc
xor
mov
aaa
inc
fwait
mov
lret
pop
test
pop
cmc
xchg
adc
mov
cli
and
sbb
rcrl
sahf
push
jmp
jmp
inc
jbe
mov
add
ret
pop
or
mov
aam
xchg
frstor
into
cwtl
fcomi
push
lret
loop
and
lea
pop
ljmp
shll
popa
pop
cmp
xchg
popa
mov
arpl
popa
bound
out
inc
sbb
xchg
fdivs
popa
imul
in
or
dec
inc
dec
outsb
and
adc
push
pop
xor
cs
jnp
mov
addr16
or
mov
imul
test
dec
or
cs
aaa
pop
loopne
xor
or
mov
aas
sub
mov
cltd
rcl
aad
mov
jb
inc
push
add
iret
pop
int3
cmc
insl
and
mov
jns
and
xchg
sbb
push
bound
fildl
outsl
mov
mov
mov
lds
sbb
mov
adc
in
shl
imul
dec
cld
pop
inc
push
das
stc
xchg
push
cmc
arpl
add
jmp
inc
je
rorb
aas
je
jge
scas
arpl
pop
cltd
shrl
jb
sub
scas
movsl
mov
jmp
and
nop
outsb
cltd
or
mov
pop
loopne
xchg
mov
mov
mov
push
dec
test
fidivrl
je
imulb
arpl
dec
push
xor
testl
adc
jb
push
mov
and
insb
mov
lods
test
cmp
mov
pop
dec
call
and
fildll
and
cmpsl
or
cwtl
push
shlb
jle
mov
add
jnp
mov
loop
pop
icebp
pop
add
shlb
jle
clc
loop
pop
fcoml
inc
xor
xchg
and
test
xchg
mov
inc
dec
cmp
push
cltd
push
xlat
push
int3
or
xor
dec
hlt
mov
or
in
inc
cmpsb
ss
mov
cmp
pusha
jno
jae
fs
movsb
and
imul
jge
jp
int
in
cmp
fistps
inc
in
push
xor
mov
mov
rcl
mov
add
scas
lock
loopne
jbe
push
jmp
roll
sub
lcall
ret
and
js
fisubs
adc
xchg
xor
jns
and
dec
dec
mov
out
xor
pop
movsb
adc
imul
call
or
xor
pop
jno
push
lret
imul
movsl
jmp
pop
jno
pop
jb
js
sub
lahf
mov
push
adc
loop
cmp
mov
pop
loopne
xor
pop
ret
insl
ds
pop
pop
mov
xchg
clc
and
xlat
subl
mov
dec
cmp
hlt
sub
pop
sti
addr16
aaa
gs
leave
cwtl
xchg
cli
cmpsb
xchg
insb
icebp
lret
xor
xor
loopne
lock
outsl
insl
pop
shr
jb
push
inc
mov
mov
push
stc
cmp
popa
hlt
xchg
sub
mov
add
out
hlt
fwait
sbb
mov
xchg
sbb
std
mov
jno
cs
jns
fucomp
jmp
sub
jle
jb
icebp
sub
jecxz
pop
dec
rolb
rorb
stos
test
mov
clc
in
inc
xchg
in
adc
rorb
xchg
and
mov
aaa
cwtl
mov
sub
mov
sbb
insl
mov
mov
cli
mov
cmpb
mov
mov
cmpsl
push
sbb
shlb
lret
mov
repnz
fwait
outsl
or
push
inc
push
push
lcall
inc
roll
and
sbb
out
nopl
sub
adc
adc
xor
int3
add
ds
adc
ss
mov
mov
cmp
xlat
notb
popf
xor
jo
sub
adc
scas
jg
loop
mov
xchg
adc
xchg
mov
push
pop
adc
dec
xor
fsts
sbbb
pop
lods
daa
jl
jecxz
xchg
roll
imul
loop
test
cld
sub
out
hlt
pop
stc
icebp
push
out
xor
mov
cwtl
int3
out
in
pop
ret
lea
mov
jle
sbb
jns
pop
push
push
cmpsl
cltd
inc
out
popf
xchg
in
mov
in
lret
jle
adc
bound
jl
mov
mov
xchg
or
fisubs
lret
neg
mov
cmp
ss
mov
adc
push
mov
fimull
cmpsb
or
sbb
push
outsb
and
rol
pusha
fwait
movsl
lock
add
xchg
inc
jl
ret
push
mov
inc
push
fwait
and
mov
push
std
addr16
outsl
sbb
rcrl
inc
fstl
out
adcl
inc
and
add
sbb
mov
cmove
pop
xor
sub
mov
push
repz
shl
cmp
pop
push
jmp
dec
mov
enter
push
and
popa
xlat
jg
xor
loopne
sub
or
dec
dec
ja
lea
outsb
and
sbb
sub
iret
stos
addr16
icebp
xchg
jnp
and
or
xor
into
fnstsw
ret
xchg
loop
jae
xor
fldcw
fmull
cmp
pop
mov
or
push
xchg
clc
ret
xchg
xchg
rolb
push
icebp
push
sub
into
sbb
mov
jnp
lea
sbb
jae
movsb
push
hlt
enter
lret
mov
jle
repnz
push
xor
lock
xchg
add
add
stc
aad
enter
mov
inc
clc
mov
push
fsubs
xchg
sbb
insb
outsl
inc
pop
test
fwait
push
bnd
das
pop
or
add
add
xchg
cltd
rclb
hlt
cltd
out
cmpsb
push
loope
pop
pushw
jge
or
rcr
add
popf
shr
cwtl
cmp
jnp
test
add
add
out
push
btc
in
jnp
mov
rclb
fstp
fldenv
sbb
inc
mov
adcl
pop
insb
out
jno
pop
fildll
rcl
aaa
sub
js
or
mov
cmp
cs
int3
test
xchg
fiaddl
jp
mov
pop
aas
lods
jl
ja
pop
mov
stos
sub
mov
test
fcomps
jecxz
fbld
jno
adc
movsb
xor
mov
in
cmp
aas
lret
push
push
mov
xlat
mov
pusha
lret
adc
in
les
xor
and
adc
cli
or
in
pop
jle
les
push
and
popf
push
out
test
pop
pusha
in
ret
xchg
xor
cltd
aaa
xor
xchg
pop
mov
into
and
xchg
fbld
pop
ds
nop
cmp
or
push
inc
ljmp
into
add
sbb
cmpsl
inc
lret
aas
push
mov
pusha
sub
stc
pop
insb
jne
pop
scas
cmc
xor
movsl
dec
cwtl
xchg
div
pop
dec
sbb
cmp
xlat
mov
jnp
popa
jb
cmpsl
sbb
push
push
xor
es
lret
push
gs
rcr
scas
js
xchg
in
push
dec
inc
fwait
ljmp
adc
cmpl
mov
sbb
test
dec
pop
push
or
insl
fwait
stos
sbb
pop
outsl
and
subl
add
popa
insb
xor
mov
shll
sub
jne
shl
les
rcrl
int3
inc
pop
pushf
inc
outsb
add
xchg
ja
push
adc
jl
pop
js
adc
repnz
ds
push
jle
mov
and
xchg
fwait
iret
cmp
mov
add
pop
xor
rorb
xor
mov
out
test
push
jg
jae
stos
icebp
xlat
cmpsl
sbb
xchg
pusha
mov
sbb
out
fisubrs
mov
inc
and
pop
scas
pop
test
and
jp
lods
ret
or
xor
adc
cmp
les
int
adc
and
gs
mov
mov
push
dec
ficomps
mov
testl
add
xchg
xor
insl
pushf
mov
jmp
mov
sub
or
pushf
dec
andl
add
enter
popf
das
or
lods
daa
sahf
addb
adc
and
sahf
in
lcall
lea
mov
push
test
push
mov
pop
mov
pop
test
pop
mov
shlw
ret
in
cwtl
mov
scas
cmp
jne
mov
dec
xchg
mov
xchg
pop
push
lcall
jne
inc
xchg
mov
mov
and
pop
enter
pop
idivl
rcll
repz
sbb
inc
jp
fildll
fists
imul
notb
cwtl
call
dec
aam
ss
das
sbb
sbb
fidivl
sub
stos
cld
pushf
outsl
xor
push
mov
sbbl
sbb
jp
stos
mov
mov
cmp
jo
mov
pop
out
bound
and
sarl
sbb
sbb
push
mov
ret
ret
pop
jecxz
movsb
mov
lock
jmp
loope
lods
pop
into
mov
pop
jecxz
bound
or
inc
pop
and
test
mov
or
jae
mov
jno
mov
push
mov
mov
mov
sti
ret
test
int
lea
in
add
loop
jmp
int
cli
repnz
bound
sub
mov
lret
into
je
leave
test
adc
imul
imul
int
pop
pop
jnp
adc
pusha
imul
pusha
mov
mov
icebp
xor
out
fwait
out
test
in
cmp
adc
xchg
cmp
mov
pop
sbb
push
or
fisttpll
mov
xchg
sbb
mov
fwait
lock
jnp
inc
mov
je
aas
loopne
out
sbb
mov
addl
xchg
js
sub
lret
mov
std
mov
xchg
xor
das
iret
lock
sub
xor
push
insb
add
out
mov
dec
xor
mov
arpl
push
dec
mov
je
mov
or
imul
rorl
lods
cmp
inc
mov
or
cs
sub
mov
andb
or
mov
aaa
subl
adc
mov
out
ja
hlt
xchg
and
dec
movsl
xchg
movsl
or
jg
ret
fs
loop
gs
ret
mov
lods
stos
into
aad
mov
adc
xchg
mov
repnz
adc
mov
jb
mov
mov
in
inc
divl
lcall
mov
aad
lods
jp
mov
xchg
pop
mov
xchg
mov
fs
mov
std
iret
ss
stc
and
mov
sbb
aas
scas
adc
lds
xchg
add
addr16
mov
cld
mov
addr16
mov
push
cmpsl
mov
dec
rorb
dec
addr16
push
popa
xor
out
call
mov
shl
lods
je
xor
int
dec
and
jecxz
popa
std
add
lahf
and
or
lods
sbb
xchg
int3
insb
push
test
call
pop
pusha
cltd
adc
repnz
xchg
fbstp
pop
lahf
not
outsl
frstor
in
mov
pop
or
ljmp
cmp
dec
stc
mov
loopne
orl
adc
mov
push
sbb
hlt
cmp
ja
imul
sub
mov
adc
and
sbb
adc
loop
xchg
js
add
sub
lods
adc
add
or
rol
inc
push
push
xor
pop
sti
push
mov
mov
sub
pop
jnp
pop
inc
xor
fbld
test
xor
sub
fmul
call
rorl
jo
sahf
outsb
push
scas
call
jne
dec
test
ficompl
stos
test
adc
mov
popf
add
test
nop
sahf
cmpsl
ret
add
xor
jg
push
pop
arpl
out
dec
cmp
jo
push
mov
test
push
push
rcrl
outsb
scas
scas
test
add
push
test
add
and
mov
dec
int
aaa
cmp
mov
xor
in
cmp
xchg
xor
ljmp
iret
fwait
repnz
out
push
mov
stc
sar
into
mov
out
mov
mov
mov
push
scas
pop
fsubl
mov
add
jge
cmp
mov
pop
sub
imul
dec
sub
and
in
cwtl
adc
aas
adc
cmp
sub
jbe
cmp
fwait
lahf
in
and
inc
inc
cmp
fisttps
sbb
js
and
repz
fmuls
clc
inc
cli
sar
mov
cwtl
sti
mov
pop
sub
test
and
outsl
jne
in
mov
sti
push
mov
sbb
in
jo
out
rcl
aam
mov
testl
sbb
mov
jno
jle
cmpsb
lds
push
mov
jb
fwait
jb
inc
inc
pop
es
xchg
inc
adc
fisubs
mov
and
lret
dec
push
sub
xchg
sub
inc
dec
loop
and
add
inc
imul
dec
je
lcall
cmc
inc
addr16
int
mov
fnstsw
xor
sbb
test
lcall
sub
out
nop
mov
add
rclb
push
mov
xor
lods
lcall
dec
lcall
or
loop
sub
out
xchg
or
cmp
adc
je
push
js
call
pop
push
pop
cltd
das
jns
fbstp
mov
pop
push
mov
cld
mov
push
sub
test
lret
js
mov
mov
adc
jns
in
add
dec
adc
jb
repz
push
dec
dec
jmp
lock
cmp
push
cmp
out
push
pop
das
scas
loopne
ljmp
pop
mov
ficompl
jp
negb
leave
test
inc
ja
add
mov
movsb
nop
adc
insb
dec
cmp
clc
data16
sub
pop
pop
shlb
cmp
insb
sti
loop
pop
mov
dec
pop
aad
sub
sbb
xchg
imul
mov
cmc
and
jns
mov
pop
dec
int3
push
or
mov
fcomps
xchg
mov
out
cltd
push
adc
lcall
mov
pop
arpl
inc
cmp
mov
add
repnz
jo
idivb
xchg
mov
jb
fwait
push
hlt
push
sub
sbb
leave
lods
into
jl
add
mull
pop
jo
test
mov
fistl
xchg
lcall
outsl
adc
and
cltd
add
nop
or
int
cmp
lret
aam
jle
lret
rorl
jo
stos
imul
mov
mov
sub
pusha
cmpsb
movsl
jg
and
cmp
stc
adc
mov
push
mov
add
sub
lock
sarl
je
addr16
cmc
hlt
inc
pop
cmp
movsl
pop
mov
push
xchg
dec
lcall
push
cld
sbb
push
inc
inc
sub
or
dec
dec
pop
adc
jecxz
fisttpl
mov
ja
lret
ljmp
fstpl
popl
cmp
mov
fimull
jbe
mov
and
lahf
stos
icebp
push
cmp
je
mov
pusha
or
mov
pop
sar
fidivrs
pushf
pop
mov
mov
aam
xchg
xchg
pop
popl
sahf
test
push
test
es
ror
outsb
in
xchg
sbb
and
add
sbb
icebp
scas
mov
stos
mov
jbe
lods
into
test
or
inc
pop
jae
and
pop
std
cmp
call
mov
inc
xchg
iret
mov
dec
cmp
inc
add
add
push
test
out
xchg
sbb
sbb
mov
rolb
mov
mov
pop
mov
dec
test
fidivrs
add
pop
imul
js
mov
roll
les
mov
mov
and
sbb
dec
and
inc
add
in
mov
loopne
jb
repz
xor
movsl
lahf
inc
sbb
pop
pop
mov
mov
add
das
mov
andb
sub
push
test
std
jle
lret
xor
jecxz
jbe
in
and
fadds
or
lods
pop
into
hlt
push
cmp
test
adc
push
mull
adc
or
mov
test
add
pop
push
mov
mov
pop
or
jg
pop
push
add
scas
in
sub
inc
pusha
iret
jne
int3
out
into
jmp
nop
lea
xchg
jp
repz
xchg
es
jb
lds
insb
testb
nop
cmp
pop
xor
lods
sub
xchg
ljmp
jne
sub
ljmp
mov
or
fs
repnz
cltd
je
mov
sub
insl
pop
pop
dec
adc
pop
xchg
inc
sbb
pop
xor
sub
fisttpll
dec
adc
mov
addb
nop
add
ja
cmp
fldl
push
and
jg
negb
add
ret
lea
sbb
bound
push
mov
xchg
pop
mov
mov
adc
inc
or
mov
push
lds
fldenv
jmp
lock
xor
fimull
lea
xchg
fisubrs
lret
fwait
lods
fsubs
loope
xor
and
fwait
les
adc
push
or
and
out
cmp
inc
call
push
clc
dec
dec
add
test
fisubs
mov
je
lahf
sbb
rclb
sbb
idivl
push
in
cwtl
jp
fxch
sarb
adc
test
lahf
ret
movsb
adc
push
int3
add
mov
es
ret
push
xor
fldenv
pusha
mov
jmp
test
adc
mov
ss
inc
mov
jo
je
adc
shrb
bound
imul
pop
jp
shr
and
xchg
ret
cltd
pop
mov
inc
fisttps
jne
xchg
xor
xchg
mov
jb
and
dec
test
jbe
jae
pop
imul
push
and
push
and
cs
mov
or
insl
push
push
loope
and
stc
mov
push
pop
sbb
dec
loope
addr16
outsb
movsl
lret
pop
shrb
push
inc
scas
sub
mov
aaa
inc
mov
das
push
movsl
dec
mov
mov
mov
addb
aam
in
bound
or
mov
mov
into
mov
sbb
xchg
inc
jns
jae
mov
fcmovb
mov
jecxz
dec
cltd
jo
ss
mov
fmuls
faddl
adc
sub
lcall
push
ja
mov
cwtl
inc
jl
fisubrs
add
mov
jae
mov
cltd
fadd
push
pop
fcompl
xchg
test
jns
sub
imul
mov
popf
jno
out
mov
cwtl
sub
dec
jnp
aaa
pop
mov
inc
movsb
imul
lea
loopne
addb
jns
push
and
add
dec
push
loop
pop
cmp
aaa
shrl
shll
and
lcall
js
dec
imul
aas
stos
push
inc
sbb
imul
cmp
xchg
scas
pop
loopne
adc
popa
cmp
jp
negl
mov
add
je
sahf
insb
fisttpll
nop
mov
sub
mov
xchg
bound
aaa
mov
mov
stos
pop
lock
pop
jmp
daa
add
mov
test
and
xor
pop
cld
lds
addl
out
adc
mov
and
push
sub
std
mov
jp
stc
cli
pop
sbb
jo
orb
loop
push
inc
gs
js
rorl
push
sbb
fimull
jle
test
test
movsl
fnsave
xlat
dec
rcrl
jmp
mov
add
aam
fdivrs
arpl
js
stc
and
repnz
mov
lret
daa
aas
dec
movsb
js
add
aaa
sub
xorb
mov
scas
pop
test
xor
inc
shrb
cmpsb
ja
mov
out
sbb
out
movb
push
push
repnz
repnz
add
xchg
inc
lcall
mov
int
cltd
jl
jle
jl
mov
xorl
loop
mov
pop
insl
dec
lret
pop
pop
mov
pop
aam
aam
jnp
mov
push
xchg
pushf
andl
rorb
sbb
rcll
mov
mov
cwtl
inc
pop
and
or
mov
ret
mov
inc
ja
rcr
aam
jnp
dec
sbb
in
test
cmpsl
idivb
insb
adc
popf
cmp
push
push
xchg
add
sub
ret
rolb
cmpb
mov
jno
mov
dec
frstor
lea
cmc
movsl
add
shlb
push
dec
pop
mull
jp
and
in
pop
adc
mov
sub
pop
inc
and
cmp
xchg
pop
leave
data16
insb
enter
rol
sbb
adc
or
movsl
mov
fcoml
lods
jmp
pop
dec
pop
push
inc
xor
add
or
pushf
iret
mov
sbb
test
paddsw
push
pop
or
out
mov
adcb
loopne
cltd
outsl
push
popf
in
insl
cli
lds
dec
xlat
js
adc
cwtl
into
faddl
fadd
insb
mov
mov
and
les
mov
cli
daa
add
mov
lock
insb
sub
jo
mov
xchg
leave
popa
mov
nop
aas
popf
xchg
sub
xor
adc
push
lcall
add
pop
outsl
arpl
mov
mov
adc
push
mov
inc
cmp
mov
sbb
popf
aad
mov
mov
stos
xor
mov
clc
mov
sbb
jp
inc
shll
cmp
shrb
mov
dec
lret
pop
fbld
test
dec
jge
shll
sti
iret
cltd
xor
call
mov
enter
sahf
loop
sub
mov
js
imul
jecxz
nop
ret
js
dec
sub
xor
push
jnp
cltd
or
dec
add
and
popf
inc
shl
das
in
outsb
and
roll
ss
mov
push
test
add
aam
or
ds
dec
cltd
femms
mov
add
and
push
std
jb
cwtl
add
jp
add
xor
adc
jl
test
or
rorb
gs
mov
or
ss
or
mov
push
dec
add
mov
sub
in
mov
pushf
pop
mov
inc
sub
js
mov
fcmovb
jno
mov
sahf
repz
shlb
fbld
sarl
sti
adc
iret
ds
sbb
rolb
out
ja
lret
push
into
mov
mov
mov
and
pop
xchg
scas
xor
jle
popf
imul
addl
out
mov
sbb
sarl
mul
inc
and
xchg
scas
dec
test
lcall
jge
xchg
leave
xchg
xchg
rorb
mov
arpl
mov
cmp
dec
icebp
mov
loopne
mov
inc
data16
pop
push
xchg
sbb
stos
rorb
mov
std
ds
mov
loop
sbb
gs
push
mov
add
adc
pop
inc
push
ret
mov
cmpl
cmp
rorl
js
loop
shl
loopne
mov
imul
jbe
jnp
andb
shl
mov
out
jmp
hlt
push
push
adc
sub
or
xor
cs
leave
push
out
jg
ljmp
imul
or
cmp
notl
or
mov
mov
mov
test
mov
sub
scas
xchg
cmpsl
cmp
lcall
pop
inc
and
repnz
leave
push
ja
stc
push
sub
mov
mov
cmp
leave
push
mull
shlb
mov
cmp
inc
mov
std
pop
cmp
aaa
lahf
jns
xor
and
sub
pop
repnz
clc
pop
cmpsl
push
js
dec
cli
xchg
fs
cmp
mov
jno
stos
and
xchg
jp
mov
out
adc
sub
mov
xchg
mov
sbb
sbb
jno
push
mov
mov
lods
dec
or
out
mov
pop
out
ds
push
pop
lods
orb
fdivrs
inc
shll
rorl
lods
out
lea
addl
fmull
cmp
push
repnz
jg
xchg
add
aaa
push
stc
aaa
loopne
push
jb
insl
fcomps
add
mov
sbb
mov
add
push
cmpsl
dec
dec
push
xchg
das
jg
push
out
mov
cmpsl
xchg
xorb
loope
daa
adc
cli
imul
out
push
sub
and
push
or
outsl
sti
fsts
cmp
dec
enter
mov
push
out
cltd
xchg
or
adc
inc
dec
js
xor
imul
lcall
inc
push
fbld
xchg
pop
mov
xor
adc
mov
pop
adc
adc
movsl
pop
sub
or
shrb
and
lds
stos
add
ja
pop
cli
clc
cli
and
cvtps2pi
pop
jp
xor
out
std
test
sbb
fcomps
arpl
inc
rorb
fmuls
repz
rorl
inc
rcrb
or
and
lds
loopne
sub
hlt
aad
xor
add
ljmp
mov
sbb
dec
xor
push
popf
outsl
popa
inc
push
stos
ja
cld
sahf
push
cltd
xchg
adc
cli
dec
pop
dec
iret
sub
and
mov
or
mov
or
imulb
pop
inc
sahf
pop
xor
jmp
pop
sub
mov
movsb
mov
ret
into
sbb
or
out
ret
lds
pop
push
inc
cmp
in
js
mov
jae
test
ss
les
dec
pop
adc
sub
dec
mov
loopne
sbb
mov
cmp
rolb
rorb
sbb
pop
mov
fldcw
pop
loope
sbb
cld
mov
xchg
testl
rolb
out
das
int3
in
fldenv
aas
jp
int
mov
pop
movsl
and
shrb
xchg
and
mov
std
mov
sbb
aam
jmp
and
xchg
lods
ss
call
and
adc
ds
movsb
xor
insb
xor
repz
sbb
xchg
jbe
je
rolb
push
push
add
rorl
rorb
sub
fbld
fisttps
mov
ret
xor
lods
pop
test
and
and
cltd
pop
repz
lea
mov
mov
lods
xor
sbb
sub
shrb
pusha
or
outsl
data16
xchg
call
clc
loop
inc
ja
add
ja
cmp
movsb
dec
popa
mov
xor
mov
arpl
pop
stos
cs
jae
pop
mov
inc
in
fs
dec
in
or
adc
ljmp
cmpsl
push
xor
mov
aad
jno
pop
jo
out
jbe
mov
aaa
pop
repnz
mov
jne
insb
fiaddl
push
inc
mov
push
outsb
adc
pop
sub
cld
xor
int3
insb
shlb
rol
daa
mov
xchg
sbb
adc
call
mov
mov
dec
pop
and
pop
adc
cmpsl
xchg
repnz
add
inc
ds
je
subl
push
shrl
mov
je
loope
lret
lock
adc
xchg
xchg
add
jmp
imull
aaa
lds
mov
sbb
std
dec
test
sbb
idivl
cli
icebp
cld
add
add
call
pop
mov
inc
pop
xor
enter
adc
cs
push
aam
popl
sub
sub
out
incl
clc
mov
mov
xchg
adc
outsb
push
add
cmpsl
imul
mov
int
mov
cmp
xchg
mov
pop
iret
les
cmp
clc
xlat
subl
sti
icebp
sub
mov
cmpb
xor
sbb
mov
mov
ret
push
nop
orb
dec
ljmp
push
stc
addr16
idivb
jb
push
movsb
imul
mov
mov
inc
and
push
sbb
test
rcrb
hlt
shlb
jnp
adc
xchg
inc
mull
daa
sbb
xor
repnz
add
dec
outsb
arpl
pop
mov
and
fs
mov
jb
and
fisttpll
push
in
mov
or
rcpps
cld
icebp
std
sarb
add
aam
jmp
push
jge
xor
push
pop
jns
lahf
dec
sub
mov
gs
push
mov
xchg
mov
pop
test
lcall
addl
and
je
sahf
dec
and
aas
mov
sub
lds
xchg
out
xchg
add
jns
outsl
fwait
push
gs
and
dec
scas
or
inc
mov
jp
mov
rclb
xor
cmp
popf
in
fisttps
sbb
add
xor
xchg
add
fs
cmpb
jg
sbbb
pushf
jno
xchg
lcall
mov
imul
adc
add
add
fisubl
mov
dec
aas
mov
mov
sbb
mov
cmp
test
int3
insl
dec
mov
mov
movsl
aaa
or
push
xchg
mov
pusha
and
fisubl
test
jp
xchg
lahf
int3
mov
cmp
jbe
push
mov
sar
jmp
adc
adc
bound
mov
loope
jae
push
jne
mov
inc
pop
mov
mov
pop
push
mov
les
push
pushl
cld
stos
stos
push
xchg
jle
jbe
sub
stos
orl
add
xchg
add
mov
repz
in
pop
cmc
shlb
mov
out
rcrb
out
mov
dec
jbe
pop
push
jns
sub
lret
lock
insl
ljmp
or
pop
test
ja
cltd
sbb
mov
cmpsl
add
pop
jno
xor
add
bound
arpl
test
mov
lea
sub
cli
hlt
sbb
xchg
sti
add
out
mov
in
in
jo
int
push
testb
movsb
mov
add
mov
push
mov
mov
sub
jbe
rolb
movsb
lcall
bound
fstpl
fnstenv
mov
pop
imulb
and
leave
cld
pop
cmp
and
mov
mov
addr16
in
mov
xchg
out
mov
cltd
cmp
je
call
inc
mov
lods
xchg
out
push
jnp
mov
imul
mov
ljmp
pop
loop
push
jmp
repnz
test
fwait
imul
aas
repz
cwtl
cmp
imul
jl
imulb
mov
mov
jns
push
dec
pusha
push
jp
cwtl
inc
xlat
sbb
mov
dec
shld
ljmp
sbb
inc
js
add
mov
enter
push
push
inc
addr16
clc
add
fildl
dec
mov
cmpsl
jmp
jge
leave
movups
cmp
adc
inc
out
and
stc
ficoml
movsb
mov
cmpsl
int
clc
mov
push
les
jne
xchg
lahf
sub
in
icebp
xchg
aam
mov
push
fwait
mov
das
je
outsb
cltd
pop
adc
int
dec
xchg
data16
int3
and
sbb
jne
mov
add
sahf
pop
nop
xor
stos
mov
and
lcall
pop
mov
out
loopne
repnz
cs
cmp
sub
mov
lret
mov
mov
cmc
or
aam
push
and
pop
dec
pop
ja
xchg
popa
push
leave
fucomp
pop
int
xchg
lcall
xchg
in
sbb
cmp
lds
mov
in
ret
enter
js
mov
loope
sub
sub
mov
aas
je
repz
das
daa
fimull
icebp
nop
inc
push
xchg
mov
xchg
cmc
aad
push
and
inc
sub
mov
add
popa
lea
pop
lods
ja
mov
mov
mov
test
push
adc
adc
add
xchg
sub
cmpsb
lea
push
sbbb
pop
jmp
call
aaa
add
out
inc
and
or
js
roll
inc
inc
push
cmp
cmp
shll
and
aaa
movsb
fsubrl
push
pop
inc
mov
xlat
push
ljmp
into
jge
lahf
mov
mov
jle
divl
gs
icebp
jmp
mov
mov
imul
fcompl
mov
rol
mov
test
loopne
adc
out
push
lock
data16
es
fidivrl
push
outsb
lea
bndstx
push
inc
hlt
and
lahf
xor
rcll
pop
xlat
aam
xchg
lcallw
adc
lea
push
jle
push
inc
push
sub
aad
cli
adc
test
xor
sub
in
jno
clc
add
aad
mov
mov
sbb
fdivrs
idivb
gs
mov
hlt
add
cmp
in
inc
std
add
push
add
jae
and
cs
dec
fucomip
dec
icebp
sub
xor
shrb
add
sbb
iret
and
dec
or
lods
clc
push
jle
in
dec
insb
iret
testb
mov
jmp
insb
jns
repnz
push
or
xchg
jmp
mov
sbb
xor
in
fsubl
mov
pop
jb
fnstsw
jns
mov
shll
mov
xor
int
lahf
jns
or
cmp
icebp
push
dec
jae
push
xor
add
xchg
mov
cli
xchg
jae
int
jge
add
fs
pop
lretw
movsb
lods
js
sbb
jp
sub
xchg
movsb
mov
adc
nopl
sub
rolb
cmp
mov
adc
push
cmp
popa
sub
or
sub
leave
lret
inc
xchg
rcrl
mov
mov
popf
out
mov
pop
xorl
add
jge
and
test
imul
enter
je
dec
int3
fldenv
fldt
or
shr
and
loopne
int3
and
cmp
mov
push
test
mov
lods
sub
sub
subl
shrl
test
repnz
pmulhuw
into
arpl
mov
fidivl
movsl
faddp
pop
daa
fs
stos
repz
test
sub
jnp
lods
jne
push
or
out
shll
fwait
jnp
mov
nop
mov
js
lahf
push
push
cwtl
inc
popf
out
imul
add
sub
in
fisubrs
cmp
and
jmp
movsl
cmp
mov
ja
nopl
fadd
xorl
outsb
mov
add
neg
test
mov
lret
add
fiadds
fnstsw
pop
sub
lret
std
sub
test
or
jbe
xchg
faddl
jge
sbb
cmp
cmpsb
pslld
mov
push
push
pop
jae
jecxz
das
or
sub
jge
push
sbb
sub
mov
ret
mov
ja
lods
or
mov
fiadds
filds
inc
idivb
cmp
mov
inc
sub
ret
adc
adc
jno
mov
pop
nop
add
push
test
mov
dec
sahf
jne
cmpsl
jg
popa
dec
push
outsl
and
shlb
xchg
rolb
stos
and
or
stos
inc
xor
aam
cltd
inc
out
and
mov
jp
jl
jbe
add
out
scas
mov
or
push
pop
lods
or
adc
dec
and
arpl
lahf
flds
aaa
inc
inc
push
mov
sbb
fwait
mov
scas
aas
jae
fwait
cmp
fnstcw
jmp
hlt
roll
enter
push
push
inc
aaa
dec
jns
xor
das
mov
sar
sub
in
xor
push
insb
xchg
mov
jmp
sub
lret
adc
cmc
jo
xchg
leave
mov
js
inc
fwait
cmp
dec
mov
mov
mov
add
ret
inc
in
mov
pop
add
das
addr16
loopne
mov
aas
dec
jb
filds
lods
push
cmp
fisubs
insb
cmp
mov
jle
sub
daa
push
leave
lcall
pop
jno
into
add
push
fsubrs
imul
jno
dec
sub
aas
mov
cmp
adc
mov
mov
aam
adc
or
ljmp
rcll
adc
cmp
sti
ficoml
mov
xchg
pop
cltd
inc
filds
xor
daa
xchg
jg
pop
test
push
leave
push
popa
or
in
pushf
dec
dec
test
sar
pop
test
pop
adc
cmp
bound
inc
dec
mov
test
stc
inc
cmpsl
and
clc
xor
xlat
cmp
push
xchg
xor
mov
loopne
add
stc
and
adc
and
mov
rcrb
pop
sub
cmpsb
mov
jl
inc
out
cmp
mov
mov
sub
arpl
jmp
mov
stos
shll
out
push
mov
rol
mov
lret
pop
cmp
mov
xchg
clc
stc
adc
mov
or
sbbl
sub
orb
shr
sub
inc
jmp
decl
test
jmp
mov
adc
pusha
push
adc
sbb
jo
pop
dec
add
pop
or
repnz
sarl
xchg
clc
jp
xor
jecxz
and
xor
cmpsl
cltd
inc
dec
arpl
ret
xchg
jg
js
xchg
jne
aas
push
aas
and
mov
or
out
mov
test
bndldx
aad
addr16
mov
arpl
cs
ja
pop
jns
xor
jbe
cmp
sbb
or
mov
or
imul
push
or
popl
ja
pop
scas
adc
das
in
jo
xor
in
and
es
cmp
pop
lock
shl
adc
jae
or
xor
jl
pop
mov
mov
lret
push
cwtl
fistpll
mov
mov
lahf
push
push
cmp
xchg
sbb
pop
mov
sti
jns
ret
insl
lcall
push
mov
ret
lahf
jecxz
lcall
add
nop
lock
je
sbb
ja
dec
arpl
fldcw
bound
adc
push
push
mov
push
mov
push
mov
clc
mov
xchg
addr16
mov
add
rorb
push
and
fildll
push
push
pop
adc
xor
dec
or
loop
out
ficomps
push
rep
xor
inc
and
xor
sbb
xchg
dec
in
jmp
test
popf
test
mov
mov
mov
ja
ljmp
in
and
out
movsl
jmp
dec
mov
in
cmp
sub
mov
jbe
dec
mov
lods
dec
pop
nop
mov
xchg
dec
ja
dec
int
nop
inc
xchg
push
loop
sbbl
loope
dec
cmp
xchg
lret
sbb
das
or
ret
dec
fwait
push
mov
ror
mov
and
dec
lods
add
ja
fistpll
jo
js
xchg
testl
xchg
cwtl
jno
lret
mov
rcr
stc
mov
out
data16
dec
xor
jle
cmp
jle
dec
sbb
cmp
xchg
and
mov
push
xchg
mov
jecxz
cmp
pop
xchg
xchg
orl
jmp
mov
leave
push
dec
roll
fidivrs
fwait
stc
add
pusha
enter
sub
aaa
fsubrp
lahf
ffreep
jae
mov
and
pop
add
imul
ljmp
pop
fcoml
aas
sub
lcall
in
addl
aad
xchg
ss
popf
popf
leave
add
in
sub
xor
push
adc
xor
stos
and
xchg
inc
and
cmpb
jp
fcmovnbe
xchg
dec
mov
cmp
fwait
jnp
push
fpatan
mov
int
in
xlat
adc
inc
arpl
je
fstps
loope
or
lcall
test
rclb
ret
xor
ja
movl
lcall
das
sbb
cmp
inc
ljmp
push
sarb
fdiv
dec
aam
aam
cld
cmp
fmul
jl
adc
jns
daa
cmp
bound
aam
mov
sub
mov
xchg
mov
mov
aad
lret
push
pop
cld
jmp
jne
mov
insb
cmpsl
and
mov
pop
xor
mov
pusha
subl
out
pop
loope
jmp
pop
je
loop
add
mov
mov
push
xchg
jg
cmp
and
mov
adc
dec
hlt
add
adc
out
sbb
cmp
es
pop
xor
cwtl
scas
jmp
dec
scas
lahf
sub
shl
push
jb
loop
daa
cmp
cmp
incb
xchg
cmp
cmc
xchg
daa
push
out
cmc
xlat
mov
outsl
push
pop
and
fidivrs
push
inc
lcall
dec
movsl
pop
and
lret
repnz
jbe
idiv
cmp
daa
ljmp
test
add
fiadds
in
xchg
orb
iret
cmp
xchg
add
test
xrelease
jno
add
sahf
test
lock
jnp
adc
push
push
mov
inc
dec
push
rcrb
std
hlt
and
aaa
out
imul
dec
sahf
int3
push
pusha
pop
scas
mov
xchg
jmp
and
cltd
jmp
cmp
push
jp
scas
fwait
test
icebp
xor
ret
pop
adc
xorb
rcrl
sub
mov
push
andb
lret
fidivrs
jno
das
test
movsb
fstp
mov
in
pushf
test
pop
push
out
push
lods
lahf
jo
loopne
std
lods
stos
aam
and
cmpsb
push
mov
shl
xchg
mov
mov
inc
jmp
add
out
insl
gs
movsb
or
mov
repz
pop
adc
ret
out
lcall
adc
pop
adc
addr16
add
mov
mov
jmp
cmpb
into
jmp
into
repz
ret
jge
cli
imul
leave
cltd
xchg
cmpsl
adc
cmpsl
imul
hlt
mov
std
fstl
clc
data16
in
push
popf
cltd
shr
sub
cmp
inc
rorb
aad
jecxz
or
cs
mov
jnp
pop
adc
pop
std
mov
sbb
jle
mov
aaa
xor
nop
xorl
out
pop
mov
sbb
or
sahf
mov
inc
pop
fnstcw
in
test
push
mov
dec
sbb
add
dec
filds
sub
mov
fsubs
addr16
ret
push
dec
jno
aaa
int3
rolb
ror
iret
rolb
mov
sub
jbe
cmp
sbb
scas
mov
add
aad
bound
push
in
insb
rol
sub
loopne
cs
mov
movsl
lods
xchg
dec
imul
sbb
cmc
cmc
test
js
dec
mov
hlt
and
mov
xchg
mov
sub
insb
dec
arpl
test
mov
inc
mov
sbb
icebp
xchg
bound
mov
shrb
add
mov
jg
enter
mov
negl
int3
cmp
and
sbb
push
lret
and
lcall
fwait
xchg
mov
and
xchg
push
ja
iret
mov
ljmp
lods
inc
pushf
fisttpll
aam
repz
pop
lds
mov
jge
out
fsubs
in
loop
or
mov
xor
stos
adc
push
jg
stc
sub
call
cmp
call
insl
leave
mov
dec
fwait
rep
int
clc
cmp
push
out
icebp
sbb
or
jb
cmp
push
ficoms
cmp
test
lods
js
mov
loope,pn
loopne
mov
ss
cld
mov
mov
dec
shlb
jnp
pop
jg
dec
lcall
pop
push
push
pop
out
addb
pop
dec
sti
pop
sub
xchg
int
shll
rcrb
cli
sub
outsl
insl
cmpb
inc
jmp
mov
jl
aam
inc
pop
fsqrt
cmc
cmp
into
mov
mov
xchg
lret
mov
in
rcll
insb
iret
cmp
push
pop
js
fisubs
or
push
pop
call
out
es
lock
arpl
cltd
sti
fwait
and
sarl
xchg
xchg
jmp
daa
adc
add
push
mov
lahf
outsb
rolb
icebp
push
or
test
xor
in
fsubrl
insl
subb
inc
mov
subb
rcll
pop
mov
mov
popf
dec
insl
in
loopne
push
mov
jns
es
mov
pushf
and
sahf
or
dec
addr16
out
and
xchg
cmp
inc
xlat
leave
fnstcw
cld
dec
sub
sbb
jb
xchg
sub
data16
inc
dec
jecxz
aam
fisubl
inc
dec
sub
jb
xchg
notl
cli
mov
or
scas
dec
pushf
or
adcb
dec
pop
mov
jle
nop
dec
mov
test
jbe
addr16
jo
mov
fldt
lahf
pop
pop
fnsave
pop
mov
and
imul
fcmovne
aas
mov
add
scas
pop
dec
mov
xor
sbb
in
mov
addr16
inc
mov
mov
movsl
stc
push
add
fnsave
mov
and
and
pop
mov
aad
push
in
test
iret
add
jbe
movsb
sbb
mov
in
inc
jp
ret
filds
loope
jge
mov
shrl
add
cmpsb
sbb
push
push
xchg
mov
cmp
stc
pop
out
test
lock
inc
das
push
inc
lea
and
lret
xor
sbb
les
fsts
jbe
inc
jno
sarb
scas
mov
add
adc
clc
xchg
es
or
or
roll
mov
jl
insl
std
jb
insb
clc
int3
sbb
mov
mov
mov
and
jo
mov
in
arpl
scas
sub
jmp
mov
inc
addw
in
in
divb
shll
aaa
adc
xchg
aam
cld
js
movsl
mov
dec
int
jmp
xchg
xchg
rsqrtps
and
bound
mov
test
add
xchg
pop
mov
mov
push
out
nop
xchg
inc
pop
xorl
sahf
push
cmc
filds
subps
fisubs
aaa
adc
lods
jb
pop
mov
jae
scas
inc
xor
adc
jl
inc
push
shlb
or
or
sbb
cmp
mov
xchg
pop
inc
sbb
pop
sbb
sbbb
adc
push
cmp
sbb
mov
push
sbb
fnstenv
aam
cmp
movsl
in
cld
ss
jne
push
movsl
cmp
fisubrs
mov
hlt
mov
mov
xchg
pop
adcl
inc
scas
inc
push
pop
cwtl
and
in
add
in
out
lret
ds
jns
pop
jg
sub
pop
and
add
ja
test
roll
lcall
cmpsb
les
pop
inc
jnp
pop
stc
dec
mov
fwait
pop
repnz
fildl
cmpsb
lahf
fsubl
mov
and
xchg
jae
and
add
pop
test
jns
ja
js
push
test
inc
dec
imul
jb
sub
mov
cs
and
dec
ret
xchg
inc
sbb
addr16
je
scas
lods
add
adc
jne
push
loopne
ja
gs
sub
cmpsl
xlat
in
jns
add
mov
outsb
mov
jbe
jae
adc
xlat
shll
lahf
in
mov
aam
mov
insl
sbb
out
dec
xor
ljmp
repnz
xchg
fsubp
das
arpl
arpl
leave
or
adc
test
lret
cwtl
or
mov
mov
push
mov
jb
pop
xchg
mov
or
jmp
and
push
rcrb
sti
mov
xlat
inc
xchg
fidivrs
lds
ret
sub
pop
cmp
into
fldl
cmp
jbe
jne
mov
outsb
xor
push
incb
cmc
dec
gs
into
xchg
movb
push
mov
xor
iret
and
fsubrl
mov
and
xchg
cwtl
lds
mov
movsb
and
ljmp
lock
loop
popf
in
lret
aad
jbe
and
bound
mov
mov
divb
lahf
outsb
add
fsubr
add
into
lods
shll
das
lods
fs
sub
stos
sub
mov
sub
imul
push
inc
pop
popa
adc
dec
xor
test
loop
cmp
add
sub
mov
mul
pushl
cs
inc
pop
cmp
adc
clc
pop
and
xlat
int
xchg
mov
inc
insb
add
mov
and
std
out
xchg
add
stos
adc
ret
inc
adc
mov
xor
jg
pushf
popa
sub
ljmp
fildl
int3
movsb
scas
jno
or
mov
add
jo
cmp
ds
adc
push
loopne
add
add
and
pop
pop
lds
pushf
sbb
int3
ffree
lds
fmull
cmpsb
ret
lcall
fsubs
sbb
pop
aaa
in
aad
jbe
pop
cli
xchg
popf
lods
fstl
std
push
icebp
repz
sahf
or
fisttpl
xchg
pop
xchg
push
repnz
mov
xor
xchg
cmp
add
js
sub
stc
pop
loop
jmp
stos
add
jo
outsl
push
cmp
push
test
mov
stc
pop
cmc
mov
mov
icebp
negb
daa
xor
loope
rcrb
test
pop
test
bound
jl
in
testb
ss
and
roll
insl
test
xchg
cmpsl
daa
adc
jns
imul
add
mov
lret
push
mov
jo
aam
jnp
sbb
jmp
leave
pop
dec
andl
lret
adc
imul
cs
jb
pop
xchg
into
mov
adc
mov
in
daa
in
adc
lock
rorl
imul
mov
xchg
pop
popa
push
pop
bound
lds
std
std
sub
fnstcw
mov
inc
xlat
ret
jbe
jns
push
sbb
jno
mov
xchg
pop
test
mov
mov
jne
inc
mov
adcl
aam
inc
mov
jb
xchg
jns
adc
inc
mov
mov
mov
mov
rcrl
fidivrs
icebp
or
xchg
push
sbbb
int
mov
test
fucomp
lret
cmp
mov
add
cwtl
mov
push
sbb
pop
cmp
std
cld
shlb
inc
jne
test
adc
fcoms
cmp
out
and
dec
incb
pop
add
lahf
mov
mov
xchg
rolb
mov
add
adc
ja
or
dec
add
stos
fisttpll
out
jg
cmpsl
fsubrp
mov
mov
and
cmpsb
mov
lahf
and
inc
sbb
add
pop
push
cld
sub
aam
jne
lock
repz
lds
scas
repz
mov
stos
ret
push
or
repz
or
mov
int
adc
and
pop
add
cltd
data16
loope
adc
pop
dec
xor
mov
add
addr16
dec
or
add
cs
cwtl
shrl
sbb
scas
pop
xchg
mov
fs
ret
daa
clc
sbb
pusha
inc
test
inc
lcall
mov
push
jg
jno
bound
iret
or
mov
lods
pop
xchg
fsubrs
pop
into
dec
cwtl
shl
fbstp
fwait
pop
mov
mov
push
orb
leave
jp
adc
repnz
inc
xchg
mov
scas
stos
pop
fwait
lds
sbb
pop
ffreep
push
movsl
pop
fidivrs
outsb
add
adc
or
mov
insb
inc
push
das
push
add
pop
popf
mov
pop
xlat
out
jl
mov
movb
call
sub
sbb
loopne
scas
cli
mov
jno
and
sahf
add
jb
aad
xchg
das
push
or
push
fndisi(8087
shr
sub
icebp
scas
push
fucomp
jmpw
pop
rclb
mov
xchg
jge
cwtl
push
fwait
dec
outsb
lds
lods
test
push
cmc
mov
sbb
or
shl
js
loope
push
aas
popa
shrb
fisubl
popa
inc
pusha
cmpsb
pop
adc
inc
inc
add
pop
aaa
mov
xchg
pop
sub
push
xlat
jns
mov
mov
or
adc
jg
scas
jmp
pop
repnz
rorl
jno
push
mov
repz
and
in
test
es
jo
repz
insl
divb
iret
insb
mov
das
adc
mov
int
cli
rclb
jae
cmpb
sub
sahf
cmpb
fucomi
sahf
pop
push
xchg
ret
fs
jle
shrl
arpl
and
bound
jne
leave
xor
xor
cmp
in
in
xor
out
addr16
dec
xchg
imul
in
mov
add
insl
shl
mov
jnp
adc
popf
mov
into
addr16
mov
xchg
int3
jae
push
xor
int3
inc
arpl
jecxz
mov
out
pop
dec
mov
jae
dec
dec
add
pop
mov
adc
mov
dec
push
fsubl
jae
pop
jnp
mov
sbb
faddl
in
jg
dec
shrl
xor
sub
ds
ss
sbb
ss
dec
mov
scas
nop
mov
pop
mov
sub
stos
cli
mov
scas
mov
mov
cmc
adc
mov
sahf
xchg
hlt
push
idiv
push
sbb
dec
popa
adc
adc
idivb
les
lcall
cs
mov
jge
mov
mov
mov
mov
sub
jae
data16
enter
mov
popf
xor
inc
cmpsl
out
popf
pop
cltd
cmp
and
rcll
pop
imul
sbb
or
aaa
jp
jl
clc
and
sbb
jg
mov
arpl
adc
or
xor
and
movsb
mov
sub
jmp
ds
dec
lods
or
cmp
ret
mov
repz
pusha
in
bound
and
pusha
adc
mov
add
xchg
fcomip
mov
fsub
and
sahf
bound
cmp
or
push
ds
cmp
cld
out
mov
xor
push
inc
loop
cmp
je
push
out
push
inc
cmp
pop
pop
movsl
mov
adc
mov
in
rcrl
push
jle
add
addr16
sub
adc
and
mov
push
sub
mov
ss
and
mov
lret
je
scas
push
cmpsb
pop
enter
add
add
sub
ja
xor
dec
pop
jno
jge
enter
into
or
sub
mov
cwtl
xchg
aam
roll
in
fcomps
inc
cs
cli
mov
sbb
sbb
add
imul
mov
xor
xor
dec
mov
movsl
enter
pusha
popf
repnz
fldt
mov
sahf
push
pop
out
add
cmp
xor
xchg
addl
cmp
std
mov
and
fucomip
fbld
out
mov
repz
pushf
bound
sbb
test
pop
arpl
imul
shrb
les
adc
jmp
imul
mov
or
test
mov
movsb
mov
out
cld
int3
add
shlb
mov
add
pusha
fnstenv
jns
test
insb
push
cmpsb
bound
pushl
mov
xor
cltd
gs
ss
test
sbb
lahf
jmp
rclb
dec
fs
jne
in
cmp
aaa
xchg
dec
adc
cmp
adc
fiaddl
inc
sbb
lock
jp
frstor
mov
test
dec
push
inc
out
stos
ljmp
or
xchg
bound
cmc
mov
cwtl
cmp
fcmovnbe
mov
fstpl
lods
cmp
test
sahf
sbbl
mov
inc
hlt
mov
sbb
aad
hlt
cmp
add
mov
mov
and
js
rol
mov
jp
mov
adc
push
or
cmp
sarb
fdivrs
jmp
mov
shrl
adc
daa
sbb
jecxz
adc
sbb
movsl
test
push
ret
cmp
sub
fldl
mulb
ss
outsb
adc
dec
sti
mov
loopne
cmp
sbbl
int3
daa
dec
lcall
fcoms
in
cmp
mov
xchg
test
sbb
mov
mov
jmp
call
jecxz
cli
stos
pusha
adc
mov
fadd
cli
sarb
mov
mov
push
sub
lret
jnp
sub
xor
aam
jecxz
mov
add
imul
or
mov
push
lret
outsl
mov
cmp
add
in
fs
scas
push
cli
pop
pop
lock
adc
out
add
or
xchg
sahf
daa
out
lret
xchg
jbe
lds
fbld
int
cmc
fld1
inc
loope
pop
hlt
inc
inc
xchg
ds
jg
repz
aas
ds
addr16
mov
lahf
mov
leave
mov
dec
pop
scas
call
shl
add
mov
int
in
mov
cld
loopne
jnp
ret
sub
imul
int
movsb
popa
loope
rcrb
xchg
pop
fldcw
in
xchg
xchg
dec
ficoms
inc
daa
jmp
out
mov
inc
xor
int3
push
xchg
out
cmpl
add
xsavec
inc
loopne
lcall
xchg
sti
mov
fldt
cwtl
or
or
in
sbb
jb
shll
ds
lret
bound
dec
out
add
mov
js
imul
mov
push
pop
pop
std
pop
ljmp
imul
cmpsb
test
imul
xchg
sub
or
testb
push
mov
test
loop
int3
push
dec
pushf
pop
pop
dec
or
inc
leave
sbb
sbb
mov
inc
enter
loopne
mov
sbb
cwtl
lahf
sub
dec
cmp
push
lods
js
cld
or
js
imul
fstps
cmp
jl
pop
es
rcr
or
in
test
or
fsubs
out
mov
mov
js
push
mulb
pushf
push
fstl
xchg
push
lret
pusha
jl,pn
pop
movsl
popf
cmp
xchg
scas
cmc
icebp
adc
pop
xlat
lds
cmp
xchg
jbe
xor
repnz
orl
daa
sbb
xchg
scas
xor
jbe
mulb
jb
push
pop
add
push
addr16
fiadds
testb
dec
mov
mov
nop
fldt
pop
jp
lea
sub
lods
sub
jecxz
mov
and
rol
rcl
aaa
cltd
out
cwtl
loope
insb
shl
cmpsb
pop
int
daa
mov
xor
enter
js
lcall
lea
stc
mov
daa
push
sahf
jmp
fdivrl
stos
stos
jb
jle
nop
popa
sbb
push
xchg
insl
adc
push
mov
stos
mov
repnz
push
inc
and
xor
push
xlat
call
mov
data16
push
iret
movsl
sbb
inc
mov
xor
sti
pop
jo
bound
xlat
cmp
pusha
lcall
xor
jbe
int
aad
jns
insb
xor
mov
andl
in
push
ljmp
ret
xor
or
shll
fcompl
lods
mov
mov
dec
imul
jo
xor
jb
sahf
fldcw
imul
xor
pop
popf
adc
ret
mov
dec
das
lahf
sbb
into
mov
adc
int3
fimuls
pusha
mov
dec
sets
push
movsb
xchg
cli
jp
movsb
dec
dec
inc
fsubl
adc
jb
cmpsl
and
sub
pop
out
push
inc
sbb
pop
xor
out
pusha
mov
ss
repnz
cmc
in
out
inc
sbb
testb
sar
int
roll
lahf
in
lea
scas
push
push
cmp
and
insl
rcll
mov
outsb
movsb
inc
repnz
bound
mov
jge
mov
xor
jb
ds
or
adc
rcr
das
into
mov
xorb
sti
ret
jns
lret
popf
sub
xor
jp
icebp
mov
sub
mov
hlt
jo
fildl
test
repnz
ret
aas
fnstenv
cmpsl
cmp
xor
pop
mov
mov
adc
fdivrl
push
jae
xor
or
pop
sub
cmc
xchg
jne
ds
mov
stos
jl
imul
sbb
fnstsw
cmp
cmp
stos
xchg
pusha
inc
jae
push
mov
pop
jno
pop
pop
jmp
jnp
hlt
adc
sub
pusha
pop
and
out
aaa
data16
out
hlt
jae
or
mov
mov
pop
sub
cmp
fldenv
ja
pop
aad
or
daa
lahf
xchg
jae
mov
addr16
and
lea
lock
cmc
add
jp
cmp
or
mov
sub
add
mov
or
call
and
adc
lea
mov
push
mov
adc
mov
push
and
ret
aaa
inc
xchg
sbb
out
andl
clc
test
shlb
out
and
mov
stos
mov
js
sti
sbb
pusha
cmp
pop
push
mov
jae
mov
mov
lret
mov
pop
sti
mov
dec
inc
aad
or
arpl
adc
gs
jp
jmp
jmp
int3
add
mov
ds
into
pusha
and
mov
repnz
cld
rcll
cmp
int3
jle
or
xor
test
and
dec
adc
push
mov
lds
adc
je
fisttps
pop
or
test
jb
add
adc
add
push
orb
loope
mov
pop
jo
out
jge
out
xchg
sub
jne
cli
pop
leave
jns
xor
cmp
pop
clc
sub
fdivl
mov
mov
dec
dec
dec
popa
inc
fmul
decl
hlt
mov
dec
inc
mov
das
xor
mov
es
mov
aad
fnstsw
popa
mov
push
lret
in
mov
cmp
jae
les
sbb
mov
mov
out
mov
xor
cmp
cltd
adc
push
cmp
adc
rclb
xor
add
test
fstpl
mov
loop
jg
test
lods
aad
inc
repnz
hlt
fcmovu
aaa
popa
insb
faddl
stos
inc
pop
mov
inc
int3
xor
aas
lods
mov
lahf
inc
cmp
int
loopne
pushf
dec
sub
mov
push
in
xor
je
jle
xlat
data16
sahf
in
jbe
mov
loop
xchg
lock
sti
push
mov
scas
push
stc
scas
mov
jae
inc
xchg
adc
push
mov
or
add
or
mov
sub
stos
add
push
in
aad
xchg
or
push
adc
cmpsb
pop
pop
hlt
mov
pop
mov
mov
jp
fimull
adc
dec
pop
lods
cmp
iret
or
mov
cld
pop
jbe
addr16
addr16
mov
aad
inc
inc
jp
popl
mov
mov
out
lods
aad
sbb
mov
movsl
imulb
in
lcall
lahf
or
jp
psubsb
repnz
mov
roll
sub
mov
pop
cli
pop
scas
jne
mov
out
cmp
hlt
adc
xchg
rcrl
jle
out
in
adc
pop
les
sti
sbb
jecxz
jp
xchg
xor
push
mov
inc
ss
inc
leave
mov
xor
imul
mov
add
push
fistl
or
js
sahf
sub
dec
rorb
adc
leave
mov
out
shlb
xlat
cmpsl
int
lds
outsl
xchg
sbb
or
push
std
push
arpl
cmovnp
test
push
loope
inc
and
xchg
xor
add
not
loope
adc
jmp
dec
fstps
js
cmp
push
xchg
push
jnp
es
jae
or
sbb
cmp
dec
xlat
out
sub
popa
nop
push
sub
stos
jp
bound
mov
pusha
mov
push
mov
int
cld
pop
aaa
cmp
cli
sub
jno
lcall
sub
int
shll
sub
std
xchg
add
jmp
es
mov
push
jl
imul
push
push
sub
push
scas
mov
pop
fwait
mov
je
imul
pop
sub
xchg
pop
jns
aas
push
sub
pop
or
scas
loopne
fisttps
mov
dec
dec
mov
and
aaa
sub
sti
fisttpll
mov
dec
mov
pop
in
gs
sbb
incb
xor
mov
js
or
xor
cs
aad
pop
inc
pusha
mov
outsb
js
cmp
pusha
roll
out
ret
bnd
mov
sub
into
and
dec
pop
sbb
rclb
sbb
cmp
sbb
add
cmpsl
in
mov
stos
inc
aad
mov
inc
test
mov
mov
in
test
mov
out
inc
push
iret
xor
mov
cmp
sbb
push
imull
jl
repz
ret
mov
mov
in
fwait
rorl
das
inc
in
push
xchg
leave
push
add
ja
iret
ds
or
mov
fisubrl
pop
icebp
mov
ret
ljmp
out
sub
insb
and
pop
jg
or
fisubl
dec
lds
test
pop
dec
lahf
push
pop
outsl
mov
outsl
lret
movsl
or
mov
cmp
outsl
bnd
xor
pop
fistl
int3
in
fs
mov
xchg
insb
cmpsl
xchg
das
sbb
xor
or
gs
push
mov
xor
scas
leave
lret
outsl
mov
jb
sbb
or
or
daa
adc
out
mov
dec
cld
ret
cmp
add
scas
loopne
shlb
xor
xor
push
xchg
nop
pop
cwtl
jmp
push
jge
cmp
fldcw
fcoms
and
ljmp
dec
cmc
sbb
inc
xorb
xchg
push
sahf
scas
loop
in
dec
lods
mov
in
push
dec
daa
shlb
iret
xchg
mov
sbb
int
xchg
iret
shlb
adc
cld
in
test
and
xchg
in
push
cwtl
and
add
scas
xchg
hlt
mov
and
in
sub
popf
aas
jbe
or
bound
clc
daa
mov
popa
hlt
sbb
dec
push
lcall
sub
sub
and
fucomp
sbb
fists
add
xchg
in
or
dec
xchg
xchg
jl
in
icebp
sub
shll
sub
fmull
rcr
inc
pushf
outsb
and
movsl
mov
cmp
pop
push
pop
cmp
out
push
pop
adc
roll
jb
mov
movsb
inc
out
mov
or
dec
add
mov
pop
mul
add
dec
add
cmp
lcall
push
mov
or
dec
cs
pop
cmp
cs
mov
cmc
xorb
and
lea
imul
xchg
test
bound
sbb
mov
push
scas
push
sub
and
shr
dec
andb
lret
in
jns
or
std
pop
dec
adc
lock
jg
pushf
sbb
shlb
js
push
jp
stc
pop
ret
int
mov
add
adcb
lret
and
repnz
loopne
lock
and
in
xchg
roll
inc
sahf
mov
outsb
mov
cmp
mov
lret
mov
jg
movsl
jg
lret
into
dec
pop
call
lods
adcl
dec
testl
mov
mov
xchg
mov
adc
xchg
ss
into
cs
cltd
in
adc
iret
in
jmp
loopne
inc
mov
push
pop
pop
loope
mulb
mov
mov
lds
mov
stos
push
movsl
xchg
pop
cmp
mov
cmpsb
inc
test
inc
shll
movsl
bound
je
lea
xor
add
and
repz
adc
pop
jbe
mov
pusha
xor
pop
dec
jle
xchg
fwait
loope
test
mov
cmpsl
xor
sarb
mov
dec
out
shr
xchg
out
sbb
xchg
sbb
xor
fldcw
sub
and
imul
mov
jbe
and
pop
lret
lcall
sub
add
jne
pop
arpl
push
mov
push
notb
shrl
mov
push
cmpsb
divl
or
bound
aas
add
inc
push
or
fildl
pop
pop
xorb
cmc
loopne
cld
mov
pop
sub
jne
and
sub
inc
or
xchg
add
cmp
sbb
xlat
pop
xor
cwtl
sbb
icebp
or
add
outsb
popa
dec
jecxz
add
sbb
push
push
fsubrs
sbbb
lods
or
mov
sub
pop
and
add
mov
in
fcoml
fwait
dec
and
pop
pop
xchg
push
jle
or
jmp
rcrb
clc
jae
adc
or
mov
pop
sbb
fcmove
insb
in
imul
int
add
jne
sub
push
mov
loopne
pusha
in
fcomp
jo
pop
ss
xchg
sbb
fisttps
cmp
cmp
call
mov
push
dec
xor
mov
lret
pop
test
or
out
push
orl
insl
sbbl
popf
rcrl
loopne
and
jge
mov
dec
mov
or
pop
add
push
adc
loope
rcll
push
and
adc
lods
jecxz
pusha
pop
in
mov
out
mov
jns
mov
mov
cmp
leave
mov
mov
mov
jno
das
std
cltd
mov
shl
adc
add
mov
into
fwait
mov
outsl
inc
add
lods
stos
sub
inc
sbb
aaa
aam
out
pop
imul
popf
jg
mov
test
in
add
xor
jbe
push
and
lcall
sbb
push
sbb
mov
jmp
mov
aaa
xor
adc
sub
lods
test
sbb
fwait
xchg
daa
aam
outsb
fidivrs
mov
fidivl
mov
sbb
outsb
and
jno
mov
mov
mov
loop
add
mov
popa
xchg
in
cld
inc
imul
out
ds
inc
sbb
mov
mov
pop
in
out
jp
insl
lods
in
xor
dec
mov
rcrb
push
cmpsl
or
test
fbstp
movsb
imul
in
pop
jle
sub
mov
out
sbb
sti
mov
add
xchg
sbb
push
je
in
call
adc
jne
dec
aam
push
lds
mov
cwtl
mov
leave
xchg
cmp
adc
mov
cmp
jb
push
jae
repnz
xchg
inc
flds
or
inc
xchg
or
cmp
int3
test
insb
dec
pop
mov
pop
dec
pusha
mov
lds
inc
push
scas
fstl
fiaddl
inc
leave
sub
loopne
pop
mov
cmp
xchg
xchg
mov
xchg
testl
inc
shll
movsl
fisubl
and
rcrl
mov
test
jno
pusha
sub
xchg
and
sbb
jae
push
jae
mov
ret
mov
xor
lods
mov
rcrl
inc
push
fwait
std
xchg
insl
xchg
sbb
pop
fidivs
mov
xchg
jnp
fwait
daa
mov
mov
mov
ss
jmp
movsl
jmp
jae
jb
mov
jge
or
stos
dec
inc
orb
adc
addb
mov
sub
push
sbb
cmpsl
cmp
and
ficompl
sbb
shlb
mov
cwtl
xchg
push
sti
ja
sbb
push
imul
adc
ss
loope
and
sbb
pop
sarb
cmp
adcb
loop
aaa
lcall
xchg
sub
mov
test
mov
int
jns
std
insb
inc
es
into
jge
sbb
stc
shl
out
lods
dec
mov
outsb
pop
out
or
cmp
std
add
jecxz
sbbb
insl
sub
xor
pop
ror
xor
daa
mov
lods
inc
hlt
movsl
scas
push
xor
xor
cmpsb
jmp
push
add
xchg
flds
sub
add
or
in
rcr
vaddsubpd
jo
nop
leave
adc
dec
mov
addr16
inc
sbb
rcrl
outsl
or
mov
cwtl
shl
mov
outsb
add
inc
and
adc
cli
lods
mov
mov
and
ds
mov
in
andb
imul
push
pop
push
cmp
inc
cwtl
data16
fisttps
push
repz
cmpsb
aas
rclb
mov
repnz
adc
std
sbb
lds
addl
adc
ret
xchg
pop
bound
into
nop
and
cld
xchg
je
pushf
lods
cmpsl
fbstp
call
cmp
pop
adc
int3
mov
fcoml
insb
fs
add
mov
std
push
jbe
aaa
xchg
add
out
xchg
or
outsb
nop
mov
and
insl
mov
mov
popf
inc
popa
mov
mov
in
js
jns
sar
idivl
adc
in
add
pop
mov
add
mov
adcb
aad
jmp
loop
jns
pusha
pop
jns
push
subb
inc
lret
addl
mov
nop
cmp
xchg
mov
add
inc
lea
or
xlat
add
or
and
add
cwtl
adcl
into
inc
sahf
xchg
nop
dec
jl
pop
mov
pop
loope
mov
mov
idiv
lcall
and
adc
pushf
cmpsb
stos
stc
jb
add
dec
das
mov
int3
inc
sub
into
mov
inc
push
push
aaa
sbbb
addb
movsl
jmp
fstpl
in
sub
movsl
js
scas
inc
pop
adc
adc
adc
xor
jae
dec
adc
cwtl
xchg
inc
test
stos
xchg
fs
mov
pop
and
xchg
adc
arpl
adc
and
in
ret
xchg
in
xor
imul
jp
dec
addr16
pop
js
mov
cmp
shrb
push
xor
ja
in
into
or
mov
pop
orl
cli
repz
add
ljmp
mov
lret
repnz
mov
scas
adc
ja
mov
sub
add
in
or
pop
stos
pop
cmp
jns
xlat
xchg
sbb
fucomp
es
out
jmp
jno
add
sub
mov
aam
loopne
mov
rcll
xchg
adc
lds
aaa
mov
sbbb
push
aam
mov
jo
pop
cmp
insl
push
pop
xor
mov
mov
xor
add
xchg
pusha
jge
lock
stc
and
pop
sub
cmp
mov
incl
stos
lock
les
in
and
sbb
mov
sbb
lds
repz
shlb
cltd
sub
loope
pop
pop
stc
cmc
and
sbb
pop
addb
stos
test
push
int
push
mov
jnp
push
mov
mov
mov
enter
mov
dec
xchg
adc
mov
jb
push
or
jg
adc
ds
adc
cmp
pop
push
fwait
sti
outsl
lahf
int3
cltd
dec
dec
cmp
insl
loopne
clc
int
add
lods
sub
pop
mov
arpl
bound
imul
mov
cltd
clc
in
outsl
test
fdivs
ret
mov
sarb
int3
imul
push
fsubl
push
shlb
add
incl
orl
aam
add
xor
shll
ja
ret
jp
leave
jns
sarl
sub
dec
es
cmp
xchg
fbstp
dec
jle
cmpsl
jnp
xchg
push
leave
jle
repz
jb
cli
pop
lea
add
adc
lea
mov
cmp
sub
icebp
pop
enter
push
jns
sub
pop
out
jno
fadds
int
dec
bound
adc
jo
sub
imul
add
lods
fcomp
cltd
fimuls
add
xor
adc
mov
mov
and
aas
add
or
adc
dec
scas
pop
or
xlat
stos
movsb
ret
int3
lret
rclb
push
daa
mov
popa
push
cmp
mov
sbb
mov
mov
add
jge
stc
ss
out
dec
das
mov
pop
push
push
xorl
jbe
fucomi
pop
dec
pop
das
ljmp
subl
pop
xchg
in
jecxz
in
imul
xor
sbb
push
aaa
xor
mov
adc
sub
mov
push
inc
push
lods
not
jae
dec
mov
pop
rolb
and
push
movsl
and
loop
repz
dec
iret
sahf
mov
cli
test
xchg
data16
std
sbb
cmpsl
ds
dec
fildl
pop
pop
popa
and
shr
pop
inc
and
sub
jno
loope
add
insl
and
ljmp
mov
inc
jl
dec
es
ss
add
addr16
mov
xor
test
xor
in
jmp
mov
dec
xor
inc
pop
pop
push
xchg
int3
data16
or
or
xor
jae
and
mov
iret
cli
inc
inc
cli
push
out
gs
dec
or
jo
cli
and
mov
adc
shlb
adc
in
or
aam
push
mov
jl
mov
push
stos
loop
jne
push
xchg
push
sahf
mov
fxch
test
sub
adc
xchg
test
mov
mov
cmpsb
mov
stc
jno
ss
sbbb
mov
xor
mov
or
popf
mov
xlat
xor
pop
jb
outsb
push
jae
mov
ja
xor
mov
inc
cmc
cmp
add
adcb
adc
push
inc
or
rcll
dec
lods
nop
jnp
insb
in
test
xor
outsl
enter
pop
jmp
xchg
jbe
adc
mov
lods
arpl
push
inc
xchg
addr16
cmp
and
push
cld
inc
lret
push
push
inc
shrb
mov
into
pop
xchg
das
mov
test
sbb
push
in
outsl
push
rclb
clc
xor
out
mov
inc
repz
cmp
or
repnz
fs
cmp
pop
xor
inc
mov
mov
mov
in
sbb
ret
mov
fwait
xor
add
loop
xor
xchg
rorl
mov
sub
lcall
adc
pop
out
lock
loopne
push
sub
pop
xchg
stos
xchg
mov
add
scas
xor
inc
xlat
or
inc
scas
lea
addr16
inc
mov
repz
mov
sahf
adc
in
inc
mov
and
loope
mov
cmc
mov
adc
nop
push
add
adc
jo
pop
js
fisttpll
js
jp
push
jae
xor
es
pop
nop
loopne
aam
or
add
mov
push
sub
xor
por
or
sub
mov
scas
shrl
fs
pop
out
imul
cmpsb
loop
sbb
mov
rcl
movsb
xlat
pop
dec
push
pushf
xor
jmp
call
sbb
mov
aam
pop
pop
mov
inc
popa
push
push
inc
cmp
push
push
inc
cmp
add
cld
jbe
ss
sub
dec
push
dec
push
scas
clc
xchg
or
sbbl
insb
jmp
mov
ss
jmp
pop
adc
or
jns
jle
imul
add
sub
mov
pop
int
xchg
pop
adc
mov
mov
gs
test
add
popa
jo
js
jle
imul
gs
pusha
mov
mov
int3
stc
fwait
push
sbb
cwtl
test
mov
jge
xor
dec
push
mov
push
lcall
pusha
out
subl
sahf
jle
push
jge
sahf
das
pop
or
loop
fistpll
pop
nop
add
mov
sub
std
icebp
inc
test
call
js
adc
lods
enter
andl
jbe
scas
cmp
lea
mov
movsb
or
bound
insl
out
sar
dec
mov
fmull
lret
mov
jno
mov
xor
movsb
lds
mov
popa
xor
inc
push
xorb
mov
xor
jp
icebp
insl
addr16
js
into
movsl
rorl
xlat
xor
bound
xchg
negl
cmp
out
pop
mov
movl
push
adcb
imul
incb
or
fnstenv
cmp
stos
mov
nop
incb
dec
mov
sub
dec
cs
inc
hlt
dec
fidivrs
stos
pop
orb
std
mov
sub
lret
iret
xor
add
mov
mov
test
dec
out
enter
aas
mov
xor
jecxz
xchg
mov
adc
mov
out
mov
test
mov
or
adc
or
push
or
shrl
push
int3
call
xchg
in
mov
mov
sub
mov
push
shll
jae
btc
xor
lea
jmp
fidivrs
pop
ret
xchg
test
or
mov
je
jb
ljmp
pop
aad
mov
dec
and
lahf
mulb
lds
testl
loop
or
jl
and
enter
stos
jno
push
push
movl
std
in
popf
or
and
mov
ljmp
iret
mov
mov
xchg
cmp
cmpsb
and
imul
jns
loopne
popf
sbb
ljmp
popa
xor
xor
sub
sbb
aam
sub
rol
adc
add
mov
daa
xor
push
cmp
fs
cmp
scas
pushl
movsl
int3
push
adc
mov
xor
pop
sub
arpl
pop
lea
push
push
icebp
enter
in
jp
and
mov
repz
push
scas
or
pusha
push
andb
xor
mov
adc
jmp
dec
sbb
loop
adc
dec
mov
xchg
mov
ret
lods
fildl
sbb
sbb
loope
es
idiv
movsl
and
ret
jbe
stc
insb
and
fidivrs
mov
pushf
icebp
imul
movsl
push
adc
out
mov
sarl
sub
mov
lods
or
sti
sbb
adc
xor
fldl
inc
and
push
in
pop
ja
lret
mov
out
mov
xor
daa
jmp
shr
xor
dec
xorb
lods
repnz
dec
pop
pop
sbb
sbb
movsb
incl
mov
sbb
mov
je
test
lds
cmpsb
pusha
pop
xor
fs
jo
or
das
fldt
fbld
or
insl
inc
mov
pop
dec
iret
mov
jb
outsl
mov
mov
mov
lret
adc
test
push
xchg
sbb
inc
icebp
ret
fdiv
lock
ret
je
idivl
lods
out
or
pop
in
lods
or
lea
add
sahf
sbb
pop
sub
orb
or
cld
push
add
dec
adc
fmul
sbb
imul
and
inc
daa
mov
inc
mov
jge
xrelease
pop
ljmp
fisttpll
jne
repnz
cwtl
repz
cmp
bound
adc
cmc
scas
ss
scas
mov
and
mov
add
push
cltd
sub
dec
pop
pop
push
jno
xor
sbb
test
mov
sub
cmp
cld
dec
jns
pop
cmp
repnz
dec
adc
aas
mov
sub
movsl
enter
xor
mov
sub
outsb
gs
mov
testb
out
push
jbe
mov
stos
adc
push
les
sti
xchg
sbb
aaa
jo
jnp
adc
mov
add
dec
inc
lock
mov
mov
mov
movsl
lea
jecxz
cmpsl
aam
popa
in
popa
mov
xor
repnz
ret
cmp
movsl
xor
jg
xchg
jnp
test
movsl
loope
or
sub
cmp
test
add
and
ret
xchg
cmpsl
icebp
pop
call
icebp
lret
cmp
xchg
jne
jbe
fcmovbe
jae
es
jmp
sub
adc
incb
inc
das
pop
xor
test
dec
push
loop
loopne
inc
in
inc
pop
shll
push
dec
shrb
jns
xchg
out
and
int
jmp
popf
lea
shll
cmpsl
aas
xchg
scas
or
and
loop
jmp
jl
mov
jne
ror
fldt
call
outsl
add
sti
adc
fistpl
orb
jbe
icebp
dec
fwait
loopne
je
scas
sub
cli
aaa
sub
enter
sbb
lods
lahf
cmp
pop
cltd
and
jne
mov
add
test
in
pop
cmp
lcall
nop
sti
aaa
sbb
add
cmp
stos
ja
ds
out
sub
into
and
adc
push
sbbl
fcmovnu
cmp
or
mov
mov
mov
xchg
mov
mov
mov
leave
lds
in
out
repnz
mov
xchg
jmp
xchg
inc
or
fdivp
shrb
cmc
std
pop
cmp
clc
add
cmp
push
rcll
movsb
in
xchg
push
adc
pop
int3
xchg
fisubrs
xchg
pop
pop
sbb
shlb
notl
inc
sbb
dec
shll
and
push
adcb
mov
dec
daa
cmp
insl
push
xor
out
push
ds
or
rolb
rcl
sbb
faddl
pop
mov
jmp
sub
or
mov
scas
addr16
sti
mov
leave
push
in
jmp
or
xor
je
stos
add
fwait
and
stc
std
cli
add
movsl
jne
bound
mov
imul
dec
dec
sbb
xor
daa
add
test
fs
dec
sbb
sahf
and
frstor
sti
pop
in
testb
jae
es
xor
ss
je
mov
mov
adc
adc
cmp
sub
mov
sub
jg
cmp
sub
cmp
cli
cmpsl
jbe
outsb
jno
or
movsl
add
xchg
xchg
int
cwtl
aaa
xchg
notl
sub
jne
pop
adc
inc
mov
pop
out
xlat
fwait
std
out
jmp
mov
push
mov
daa
dec
jmp
inc
inc
lret
mov
addr16
out
or
mov
mov
mov
jl
imul
std
mov
xchg
or
push
cmc
outsl
aam
stc
aaa
inc
inc
sbb
int
xor
xor
imull
lds
jbe
pop
shlb
enter
dec
sbb
sbb
or
inc
adc
inc
std
xchg
xor
inc
sub
cld
add
cmp
adc
rorl
stc
test
test
movsl
stc
sub
lock
in
test
sbb
add
call
fldcw
dec
movsl
pop
arpl
enter
mov
pop
mov
int
pop
pop
dec
jns
shl
mov
mov
inc
pop
clc
lock
aad
jge
nop
data16
cmc
invd
xor
popf
insb
repz
jns
out
jl
hlt
pop
pop
cltd
rcrb
outsb
testl
xchg
sbb
pop
sti
mov
insl
stc
pop
cmp
mov
mov
gs
fnstsw
pop
sub
mov
out
xor
xlat
pop
test
add
sti
lods
dec
cltd
add
mov
popl
stc
jecxz
add
stos
ds
lods
jo
aas
add
enter
cltd
sbb
stc
xor
xchg
xor
addr16
sahf
inc
adcl
push
mov
das
enter
mov
jnp
xor
jge
mov
and
rclb
sti
add
mov
inc
test
mov
es
push
inc
mov
cmp
sub
mov
mov
imul
pop
cld
adc
push
sarb
adcl
fsubrl
cmpsb
out
or
enter
xchg
mov
addr16
pop
mul
insl
sahf
jnp
xor
movsl
aam
lds
sub
orb
xor
push
push
or
sbbl
adc
sarb
sub
mov
mov
daa
movsb
dec
lret
out
push
data16
sub
mov
stc
or
in
aas
jb
das
mov
jge
mov
cmp
xchg
lds
pop
mov
outsl
pop
jecxz
in
in
sub
xchg
lret
cmp
fmuls
push
mov
scas
test
cmp
xchg
lret
mov
int3
mov
sbb
imul
rcll
lret
pushf
pop
dec
mov
jle
cld
pop
jmp
dec
push
or
add
enter
shll
jge
inc
out
shlb
mov
mov
lret
ljmp
pop
addl
and
stos
stc
enter
cmp
pusha
ret
push
cmp
sub
insl
sar
movsl
roll
out
inc
and
cs
xor
push
push
pop
inc
and
pop
xchg
jle
cmp
es
sbb
or
int
test
cwtl
jae
int
sbb
mov
sbb
inc
push
out
push
sbb
pushf
or
add
push
loope
jmp
lcall
rol
jb
lods
sbb
aas
xchg
xchg
add
sarl
test
pop
mov
bound
or
inc
add
dec
lret
push
inc
scas
xor
fwait
xchg
pop
push
mov
and
push
pop
jg
mov
stos
andl
sub
rolb
adc
lea
hlt
pop
test
sbb
outsb
fwait
jnp
icebp
mov
pop
xchg
mov
lret
add
lret
gs
fs
xlat
add
pop
scas
xchg
push
pop
scas
pop
fsubrs
loopne
imul
je
mov
fnstcw
dec
icebp
repz
nop
jecxz
xchg
out
sbb
shr
iret
hlt
bound
int
sbb
add
imul
icebp
sub
adc
dec
jmp
inc
rcrl
and
pop
jle
inc
jae
mov
cmp
arpl
adc
sahf
inc
mov
dec
stc
fistps
push
pop
ror
jbe
fildll
pushf
stc
ja
mov
push
stos
adc
push
mov
jl
rcrl
movsl
jo
jae
mov
es
test
adc
js
adcb
inc
cmpsl
jle
mov
xor
push
xorb
out
inc
pop
inc
pusha
lahf
in
movsb
pop
rcrb
insl
repnz
cmpsb
jbe
adc
lret
sti
loope
push
mov
xchg
dec
mov
in
inc
scas
adc
lea
sbbb
mov
and
cmpsl
pop
fcomp
sub
out
je
push
roll
sbb
adcb
add
xor
fcoml
sub
adc
or
sahf
int3
insl
cmp
popf
jno
shrb
cmp
fcmovnb
dec
and
outsl
push
push
sbb
mov
dec
and
mov
repnz
jae
imul
dec
imul
adc
fwait
cwtl
loop
pop
push
push
dec
cmp
test
and
jg
xchg
fbstp
or
sahf
scas
fmuls
pop
cmc
dec
push
xchg
das
loope
cmp
mov
and
test
jne
jmp
dec
dec
and
sbb
inc
adc
sarb
aad
enter
stos
out
inc
lods
push
aas
push
sub
lret
mov
iret
jnp
push
sbb
dec
push
dec
mov
sahf
ret
and
jbe
mov
insb
cmp
rolb
dec
stc
pop
xlat
push
dec
popa
dec
add
int3
nop
push
sbb
stc
cmc
imul
lret
sbb
fs
and
xor
jge
clc
mov
addb
sbb
or
mov
aas
outsb
ds
in
leave
testb
lods
dec
lods
inc
mov
daa
movsl
outsb
adc
int
lods
mov
in
aam
xchg
test
dec
sub
jmp
cwtl
dec
in
jb
fldl
push
lock
shrb
sbb
repnz
fldcw
xchg
mov
dec
xor
loopne
jbe
insl
imul
dec
mov
jl
jmp
inc
jge
mov
mov
pop
push
and
cmc
xchg
and
add
cmp
int
clc
mov
aad
or
loope
loopne
inc
sub
das
imul
jnp
sbb
lcall
add
adc
mov
or
test
xchg
cmp
and
xchg
add
mov
mov
cmp
push
sbb
dec
xor
pop
cmp
sbb
jg
xchg
adc
fdecstp
shll
lcall
sub
jae
add
mov
iret
loopne
rorl
aam
pop
cmp
jo
fldt
adc
push
sub
daa
pop
xor
test
mov
cwtl
in
jb
jmp
push
fidivrl
push
xor
or
cltd
addl
in
pop
lret
movsl
loopne
jge
cmp
enter
mov
push
in
out
sbb
das
xor
test
and
fs
test
xchg
dec
dec
mov
sbb
gs
fwait
cld
or
push
jge
pushf
xor
jne
cmp
jne
push
int
pop
dec
fldl
loop
and
daa
shl
mov
mov
cli
loopne
test
jae
mov
sub
cmp
sbb
inc
pop
jle
jb
movsb
lret
lds
fisubs
sub
stc
adc
bound
push
pop
xor
dec
fsubs
dec
ja
in
imul
pusha
cmp
out
rcll
out
add
jno
xor
gs
push
cld
mov
sbb
mov
add
or
in
xor
mov
adc
aaa
pop
out
push
lcall
rcrl
data16
insb
pop
ja
mov
bound
aam
push
pop
cmp
push
fcomp
push
lcall
sub
xlat
pop
lods
fdivs
stc
test
fwait
jmp
inc
add
lds
call
pop
adc
jae
cmp
pop
out
aad
leave
clc
jg
sbb
loop
pop
lcall
pop
dec
push
xchg
pop
cmp
jge
in
and
imull
mov
mulb
lahf
stc
sbb
es
push
sub
dec
adc
jge
lea
push
xchg
jbe
and
shll
or
inc
mov
add
imul
fsub
fisubrs
mov
fs
fsubrs
mov
push
mov
stc
mov
inc
es
ljmp
sahf
cld
mov
ljmp
aas
test
lock
sbb
and
addr16
xor
adc
mov
dec
xchg
pop
push
xchg
insb
lcall
dec
push
mov
dec
or
lea
test
leave
xor
sub
sub
scas
push
fcomi
xchg
out
dec
add
idiv
xchg
jbe
xor
push
jge
lahf
or
call
inc
pushf
jmp
inc
jo
lret
roll
xor
fdivrl
loope
push
push
mov
pop
js
outsl
nop
jmp
mov
and
and
inc
fistps
mov
not
and
lods
lods
andb
lret
mov
repz
test
push
inc
lcall
xor
call
adc
repz
das
rcrb
sbb
xchg
xor
jmp
mov
mov
pop
pop
sub
push
repnz
dec
cmp
adc
inc
sbb
mov
fnstenv
pop
xchg
leave
jb
popa
out
cmp
pop
in
out
jge
xchg
hlt
gs
in
ljmp
outsl
xchg
sbb
into
lea
roll
cwtl
out
mov
ss
sbb
inc
mov
dec
mov
mov
inc
add
and
or
inc
int
mov
jl
in
movsl
test
mov
out
call
dec
lcall
pushf
mov
jmp
scas
ret
call
aas
mov
add
ret
jns
add
sbb
outsl
fcmovb
and
fldcw
jnp
aas
in
push
cmp
pop
or
xor
adc
and
movsl
sub
jb
ljmp
rorl
cwtl
jp
gs
fiaddl
aas
test
fildl
xor
xchg
gs
addr16
lahf
and
fwait
clc
xor
aas
test
movl
in
mov
mov
mov
rcr
ds
xchg
cmpl
mov
rol
sub
inc
aas
es
xchg
lahf
mov
loope
jnp
xchg
xor
data16
ss
mov
mov
out
mov
cmc
cmpsb
push
faddp
mov
loope
stc
or
mov
push
call
cmp
test
mov
stc
adc
xor
pop
in
pop
push
fisttpll
push
js
xor
iret
sahf
out
scas
mov
stc
adc
pushf
ret
mov
jmp
xchg
inc
or
and
dec
ja
adc
aaa
fidivs
mov
jbe
subb
call
jb
or
jle
pop
out
cld
xchg
lods
enter
test
imul
lahf
ljmp
jnp
cwtl
fstl
xor
aad
fisubrl
inc
int
hlt
sbb
jne
add
xchg
pusha
jecxz
out
fistpl
loope
jg
xchg
inc
sub
xor
mov
movsl
xchg
outsb
sti
repz
push
sub
push
and
out
jno
xor
ret
and
push
xlat
adc
push
mov
fldenv
cmp
add
fldt
out
insl
or
jo
add
imul
or
testl
loopne
pop
add
mov
and
mov
pop
outsl
mov
sub
mov
xchg
test
dec
mov
dec
loop
mov
inc
cmp
cmpsl
sub
adc
jmp
jae
dec
fadds
adcb
push
or
cmp
push
inc
jae
mov
arpl
mov
rolb
push
in
in
push
xchg
rorl
mulb
int3
leave
jo
sbb
or
add
mov
mov
inc
shr
inc
sub
jae
das
pop
fidivs
jle
cmpsb
sbb
or
out
add
push
and
outsl
scas
cmp
and
push
jae
inc
out
push
mov
sarl
dec
scas
xor
pop
aam
repz
out
pop
in
inc
push
xor
and
lds
sub
xchg
lcall
je
and
inc
inc
add
pop
jp
fimuls
sarl
jmp
enter
sar
or
pop
aas
push
fdivrs
add
lds
mov
push
push
mov
sub
mov
sbb
pop
call
xchg
add
mov
shll
daa
inc
in
mov
mov
lea
lods
sbb
mov
mov
in
fldl
sub
or
and
pop
test
dec
stos
outsl
mov
pop
ss
movsb
mov
pushf
test
sar
lret
mov
and
push
imul
push
xchg
cmc
aam
divb
cmp
cmp
jge
je
xor
pop
cs
jmp
inc
jmp
sti
loop
xchg
in
testb
scas
xor
je
add
lds
cmpb
lods
inc
imul
mov
mov
jl
and
out
test
lahf
mov
or
push
cmpsl
iret
movsb
ljmp
rcrb
and
lods
scas
je
xchg
xchg
daa
sbb
xchg
stos
xchg
rclb
aad
push
jle
js
xchg
mov
std
xchg
sarb
sub
test
int3
imul
pop
xchg
and
add
inc
push
aaa
inc
stos
out
mov
lret
fmuls
pop
jg
adc
into
inc
xor
mov
inc
popf
fisttpll
fmull
and
loope
dec
lods
mov
pop
popa
and
lahf
lahf
test
xchg
adc
sbb
add
mov
cmpl
sub
enter
push
mov
inc
scas
push
test
negl
jle
jns
mov
adc
pop
push
into
push
push
test
mov
popf
add
lods
xchg
push
dec
imul
xchg
icebp
and
loop
xchg
cmpsb
lods
dec
add
fs
std
adc
xchg
xor
sub
testl
insl
call
js
xchg
fs
dec
inc
loope
popf
pop
xor
addr16
ja
jnp
push
cmpsb
orl
sahf
loop
hlt
sbb
adcb
jno
inc
pusha
adc
dec
jmp
push
into
inc
data16
xchg
xor
adc
pop
movsl
scas
cmpb
xor
lds
in
sub
sub
jb
adc
fildll
sbb
pusha
mov
and
pop
jg
gs
dec
cmp
and
rol
and
cmpsb
das
out
jnp
add
addl
mov
repnz
xchg
mov
xor
and
call
sahf
sub
pop
test
mov
mov
lods
xor
mov
mov
pop
test
pop
jmp
test
pop
mov
mov
xor
fmuls
cmpsb
test
nop
ss
addb
or
bswap
das
shrl
mov
and
ret
test
sub
pop
jge
or
adc
out
pushf
or
fadds
xlat
jecxz
lods
nop
ds
or
int3
arpl
ljmp
fidivl
dec
faddp
mov
cmp
pop
adc
in
xchg
jnp
pop
lods
xor
insb
sub
mov
add
and
push
fdivl
mov
aas
xchg
adc
lret
mov
ljmp
lcall
movsl
mov
das
pop
xor
mov
sbb
dec
insl
or
aam
mov
xchg
push
sahf
popa
scas
stc
xlat
insb
rcrl
and
pop
adc
test
jo
sbb
roll
sbb
pop
clc
test
sbb
jb
mov
rcr
xchg
xchg
jge
int
pop
pop
out
or
mov
adc
cwtl
fnstcw
mov
pop
jne
add
push
dec
inc
xor
mov
rol
and
je
xlat
xor
pop
pop
mov
adc
sti
cmp
movsl
jae
rep
scas
rorl
or
pushf
and
dec
xlat
pop
xchg
sub
lock
xor
repnz
js
cmpsl
and
mov
cmpsb
leave
xchg
aam
dec
ljmp
jbe
out
repz
mov
lods
mov
mov
sbb
xor
inc
enter
dec
stos
lahf
js
or
dec
pop
les
je
sub
sbb
loopne
add
or
or
enter
cli
lock
mov
push
and
xorb
add
ret
jecxz
jns
pop
lea
inc
mov
xchg
pop
inc
aas
lods
or
arpl
iret
or
in
cmp
ss
push
out
aad
out
out
mov
pop
outsb
pushf
les
mov
loopne
mov
into
add
jge
sbb
sub
shrl
pusha
jp
mov
in
pop
cmp
imul
and
and
orb
test
outsb
sbb
sbb
add
repnz
jecxz
dec
pop
pop
add
and
popa
call
aas
insl
stc
dec
leave
pusha
cld
jecxz
pop
cmpsl
xchg
pop
lods
test
stc
lahf
clc
shlb
push
nop
in
outsl
sbb
dec
imul
cmc
movb
jnp
push
sbb
mov
xchg
xchg
sbb
and
sar
fildll
in
je
shl
mov
sti
rcl
push
jae
add
jbe
pop
ja
cmp
inc
inc
mov
inc
into
pushf
stc
ret
sarb
xchg
les
imul
jg
addb
scas
je
fs
push
aaa
cmp
test
xchg
scas
frstor
fldt
xorb
out
out
scas
gs
dec
push
data16
sahf
xchg
mov
dec
sbb
add
andl
repnz
cmp
sub
dec
out
mov
sbb
inc
and
inc
jmp
xchg
vpsrld
mov
or
lret
jecxz
sbb
xchg
out
test
insb
pushl
cli
jo
and
test
adc
or
shrb
xchg
icebp
out
mov
arpl
pop
xchg
lea
popa
andl
sahf
fsubl
mov
adc
mov
dec
orb
sub
stc
fisubl
xlat
test
je
inc
mov
or
div
in
ds
inc
mov
cmp
xchg
inc
pop
imul
jb
push
sbb
sub
nop
shrl
add
movsb
xor
push
je
ljmp
inc
aam
inc
jecxz
adc
sub
cmp
push
xorb
nop
aaa
ds
cltd
add
dec
mov
and
movsb
add
out
mov
enter
scas
mov
repz
push
jecxz
popa
cwtl
inc
sub
dec
mov
or
push
sarl
sbb
pop
and
daa
data16
das
iret
pushf
fstpl
jnp
pop
push
lods
int
push
jle
dec
dec
xlat
inc
mov
je
daa
loope
push
insb
lcall
mov
pusha
or
jp
scas
push
dec
add
lahf
jmp
jg
in
xor
decb
or
cmp
mov
sbb
in
ljmp
and
jae
mov
js
push
mov
adc
scas
xchg
jbe
adc
out
adc
sbb
sbb
aas
jne
add
add
mov
mov
arpl
push
push
mov
add
ret
repnz
jl
mov
dec
or
cld
add
cmp
pop
test
cmp
cmpsl
jns
movl
mov
add
and
push
mov
divb
push
sti
inc
mov
sbb
mov
je
pop
jo
lods
subb
sbb
dec
movsl
andl
out
xchg
push
and
in
xor
data16
in
xchg
inc
std
stos
repz
dec
imul
adc
adc
or
or
mov
jo
ljmp
ret
enter
mov
imul
out
jl
leave
cmp
dec
pop
mov
movsb
or
xchg
or
icebp
add
ficoms
leave
mov
test
cwtl
orb
leave
or
rorl
mov
xor
sbb
fmuls
mov
out
lret
xor
fcoms
cld
or
aam
add
clc
insl
in
into
stc
cmc
insl
cmp
notb
mov
sar
fmuls
ret
aaa
repz
insl
push
xor
aad
shll
sbb
adc
inc
sbb
inc
int3
jmp
push
adcl
test
cli
or
push
test
sbb
ds
push
bound
pop
add
jp
fnstenv
and
repnz
ss
test
mov
mov
xlat
mov
push
push
stc
sbb
in
lret
xor
outsl
hlt
mov
xor
adc
test
imul
mov
pushf
test
push
xchg
repnz
fistpl
cmp
cmp
jns
jne
cmp
gs
loop
fldl
push
cld
xchg
or
mov
lds
cmp
pop
push
jl
lret
or
lods
nop
out
inc
into
out
aas
cld
loopne
js
pop
sub
ss
pop
jg
repz
push
push
pushf
fs
dec
pop
lea
into
sub
jl
jmp
js
push
ror
jle
jo
pusha
arpl
sbb
fdivrl
movsl
jge
int3
xchg
mov
insb
aam
stos
and
gs
pop
in
inc
cld
jmp
and
mov
lahf
xchg
test
cmp
and
mov
cmp
and
mov
dec
mov
xchg
fnsave
push
cli
cwtl
mov
and
jmp
sub
fcoms
jnp
aaa
lret
inc
cwtl
sbb
ljmp
cmp
xchg
fcmovnb
ja
mov
testb
call
stc
push
sub
nop
inc
mov
or
adc
pop
lods
stos
int
ljmp
lret
push
repnz
mov
cmp
sub
cwtl
outsb
les
and
cmpsb
lcall
and
and
sbb
fsubl
mov
loope
das
pop
pop
push
nop
inc
hlt
and
andl
sub
pusha
cmp
xchg
loope
iret
inc
stos
je
jmp
and
jb
add
inc
pop
xchg
sbb
dec
movsl
pusha
int3
out
fcoml
push
and
nop
add
pop
adc
add
outsb
aad
int
adc
inc
xor
push
cmc
into
mov
jle
dec
xchg
mov
inc
lret
or
repz
leave
mov
xorl
xchg
fisttpll
cmpsb
lahf
cmp
push
cmp
add
jmp
dec
loop
push
add
sarl
in
pop
lds
int3
mov
pop
adc
sbb
pop
sub
adcl
jmp
push
dec
dec
iret
sub
sub
addr16
xor
mov
imul
es
adc
sahf
fldt
es
iret
je
fstpl
lcall
jo
jecxz
dec
push
fldenv
test
dec
in
inc
mov
imul
mov
cmc
sar
xchg
in
repnz
mov
sbbl
adc
out
push
xchg
aad
inc
fcoms
add
stos
dec
push
dec
inc
sub
mov
out
jle
and
and
sub
add
sbb
mov
movsl
xlat
sti
sbb
jnp
aaa
in
inc
pop
fists
xor
pop
xchg
adc
cmp
loope
add
sbb
out
rcrl
jmp
push
adc
adc
aam
and
push
insb
adc
ret
mov
fs
fcmove
aaa
inc
cmp
cld
ficomps
loop
push
dec
fidivs
aas
cmpsb
cmpb
out
add
cmp
popf
push
push
jns
pusha
jle
and
lods
inc
add
shll
push
sbb
test
mov
scas
push
imul
sbb
subl
mov
pop
jbe
test
cmp
mov
fildll
and
mov
and
cmc
or
into
test
outsb
loopne
mov
and
sahf
daa
pushf
call
fsubl
push
jno
popf
xchg
adc
xorb
mov
add
les
sbb
je
jne
jbe
test
test
pop
insb
add
in
or
jmp
imul
lcall
adc
sti
mov
in
dec
mov
out
aaa
push
stc
icebp
out
inc
sbb
xchg
mov
stos
aas
jp
cmp
adc
jmp
pop
and
push
dec
inc
mov
fmull
sub
xchg
and
cmp
call
mov
adc
inc
jle
loopne
int
test
pop
bound
jmp
call
lock
ja
shrb
bnd
ss
pop
popa
or
lds
fnstsw
jge
mov
push
adc
pop
pop
cmp
nop
popf
mov
insb
stc
mov
xchg
addr16
jo
imul
gs
loop
add
sbb
mov
gs
dec
and
insl
ds
ja
enter
lcall
dec
imul
jmp
or
xchg
fs
imul
lea
inc
daa
or
xchg
sub
mov
sbb
cmc
xchg
out
jp
mov
adc
jl
pop
fwait
jns
mov
mov
push
pop
mov
and
test
cmp
add
pop
stc
cmp
mov
movsb
ret
mov
fisubrl
fs
inc
mov
xorl
mov
scas
mull
xlat
lods
in
dec
js
arpl
lret
lea
xlat
push
pusha
test
iret
or
loop
pop
sbb
js
data16
inc
aas
es
mov
mov
jb
clc
hlt
push
push
cmp
fucom
adc
push
adc
pop
push
pop
xlat
or
inc
cmp
out
stos
ret
mov
sbb
adc
adc
pop
mov
bound
mov
loop
jmp
or
adc
loopne
lahf
xor
outsl
mov
or
in
pop
les
push
lods
stos
cmc
pop
dec
inc
addl
mov
add
add
lahf
loope
iret
push
iret
xchg
and
dec
pop
jnp
pop
cmpsl
jmp
movsl
cmp
insb
cmp
les
outsl
jge
sbb
xlat
or
jns
in
xlat
mov
adc
adc
imul
lods
jl
pop
cld
iret
jp
cli
idivl
pop
movsl
push
ds
aam
push
enter
push
sbb
arpl
bound
push
jo
sub
mov
push
push
lock
es
xchg
lock
sub
lahf
out
jmp
cmp
sub
jmp
or
jnp
shrd
pop
dec
aad
fdiv
movsb
mov
pop
addb
mov
sub
add
pushf
test
jns
or
rcrl
int3
dec
jl
cmc
lret
popf
xchg
cmp
cmp
fdivrs
test
pop
pop
sbb
call
out
add
mov
push
ficoml
rcrb
add
dec
mov
mov
test
xor
repnz
xchg
mov
jp
ret
cmp
testb
stos
outsl
inc
mov
repnz
or
dec
xchg
cmp
jmp
adc
or
pop
arpl
fistpl
xor
sbb
lahf
test
out
adc
daa
hlt
lods
lahf
mov
xchg
nop
xchg
and
testb
adc
xor
aad
pop
or
mov
cs
mov
add
xlat
jnp
xor
cmp
repnz
stos
or
push
xor
sbb
xchg
jl,pn
loopne
xor
and
xchg
sbb
sbb
cld
pop
sbb
xchg
aaa
xor
push
ss
fsubrl
sub
push
dec
rorl
int
js
ja
cmp
push
scas
xor
out
jmp
add
shll
sbb
rcl
push
mov
pop
jge
pop
loopne
arpl
inc
pop
sub
iret
lods
cmp
lock
lds
repz
hlt
push
pop
mov
inc
mov
fcompl
shll
andb
dec
jnp
ss
lds
xchg
mov
lret
lcall
add
mov
repz
push
imul
lds
lret
loop
loopne
and
dec
push
iret
ficompl
sub
mov
cmp
mov
and
hlt
and
mov
cmp
mov
pushf
or
and
sbb
inc
adc
inc
jp
mov
mov
test
mov
push
lock
add
xorl
push
push
xchg
sub
daa
dec
test
mov
jg
or
stos
cmc
ret
add
mov
cmpsb
pop
cld
addl
adc
aam
mov
test
jmp
daa
xchg
aam
push
lods
sub
dec
psrlq
lock
add
mov
test
mov
mov
mov
jno
je
mov
ss
mov
push
cmp
ds
push
cli
cmp
mov
xor
nop
iret
jmp
jae
outsl
sub
mov
xlat
push
fidivs
in
cmp
cmpsb
sub
xchg
imull
insl
dec
lods
test
test
out
xor
rolb
icebp
mov
js
dec
adc
outsb
out
jle
out
push
dec
in
sarb
mov
imul
les
xchg
ret
jp
dec
std
popa
sub
xchg
jl
das
mov
js
mov
aaa
stos
aad
push
sbb
mov
mov
aad
xchg
insl
pop
jnp
mov
decb
popf
jmp
data16
out
sub
inc
mov
push
mov
mov
jl
cmp
jmp
cs
dec
outsl
cmp
pop
jg
mov
idivl
or
cs
sub
es
jno
xchg
pop
stos
cmp
or
push
aam
repz
das
dec
repnz
add
sub
sbb
mov
test
nop
mov
fdivr
inc
lds
fmull
imul
rcrb
push
lods
test
mov
lock
sti
xor
sti
fwait
lret
push
arpl
push
inc
das
in
mov
sbb
mov
movsl
jno
dec
insl
lods
mov
adc
popf
mov
mov
scas
clc
pop
or
adc
andb
mov
and
xor
mov
push
cmp
fldt
xor
jae
mov
pop
mov
adc
or
dec
ja
mov
mov
test
jno
sub
test
ja
in
popa
mov
adc
iret
lds
je
inc
popf
cwtl
mov
or
xor
add
mov
stos
mov
pop
sub
and
or
pop
add
cmp
es
inc
inc
sahf
scas
xchg
lods
imul
or
mov
ffreep
test
loop
dec
or
idiv
mov
adc
inc
xlat
mov
dec
mov
addr16
fimuls
sbb
mov
push
dec
push
dec
adc
pop
js
or
jae
cmp
push
sbb
cltd
mov
inc
fstpl
xor
sarl
ret
out
decb
pop
sub
shlb
dec
rcrb
push
leave
data16
xor
mov
mov
aaa
mov
mov
cmpl
xor
inc
dec
xchg
jmp
aad
call
push
cmpsl
popa
movsl
pop
add
int3
les
popf
sbb
push
xor
mov
lret
inc
jb
pop
pop
stos
sbb
push
ljmp
hlt
addl
add
sbb
adc
divl
or
fstl
and
dec
fwait
jb
mov
ss
pop
mov
cwtl
xchg
xor
jp
ja
cmp
pushf
mov
sarb
jns
ret
xchg
pop
pop
ret
and
dec
aad
mov
repnz
jmp
add
mov
or
jmp
add
fstl
sbbb
mov
mov
incb
sti
jnp
subl
out
pop
jg
popf
jno
cmpb
bound
adc
rorl
loopne
fs
subl
push
inc
cmp
pushf
daa
sub
fbstp
orl
push
ljmp
cmp
aas
jmp
jg
mov
xor
test
stc
lock
sub
add
fnstenv
jp
pushl
repz
rcll
fimuls
xchg
lret
shrb
jnp
or
lret
frstor
scas
adc
js
test
ret
adc
movsl
es
sub
test
mov
mov
pop
outsb
sahf
jp
loop
inc
in
je
jnp
into
std
daa
stos
xlat
jnp
in
lods
subb
dec
out
out
je
dec
cmp
xchg
sub
sbb
xchg
test
jb
pop
repnz
test
fadd
sbb
inc
xchg
dec
jno
and
cmp
jb
mov
test
or
push
leave
nop
cmpsb
mov
dec
add
rcr
jne
push
test
dec
add
cmpl
lock
adc
jg
fistpll
mov
and
cmp
scas
mov
or
dec
inc
iret
adc
pop
lods
je
adc
xor
ds
call
add
out
jle
dec
mov
scas
mov
sub
cmpsb
add
dec
aas
inc
pop
pushf
insb
lock
aam
xchg
mov
mov
xchg
jns
test
jno
jns
inc
cmp
xor
dec
pop
sbb
sub
xor
adc
or
insb
jo
cmpsb
adc
mov
fists
popf
test
in
push
out
xor
xor
mov
xor
das
mov
lock
push
enter
mov
jnp
daa
xchg
push
mov
sbb
inc
ljmp
xchg
jge
test
push
icebp
pop
and
cmp
aaa
adc
les
cmp
push
mov
xlat
xchg
adc
cltd
aaa
lret
mov
jbe
jmp
pop
pop
mov
jle
in
ret
lahf
popf
movsl
push
push
jl
shlb
gs
cmpsb
mov
dec
imul
cmpsl
movsb
mov
mov
xlat
test
mov
inc
rorl
jmp
jge
aas
and
push
push
jne
mov
pop
nop
sub
mov
xchg
imul
sub
push
or
stos
out
int3
stos
inc
nop
push
inc
pop
rorl
xlat
rcrl
sub
jno
xchg
pusha
mov
aam
ljmp
and
push
loope
adcl
or
xchg
sbb
inc
in
jne
sbb
dec
arpl
bound
sbb
in
mov
pop
in
stc
fbstp
mov
sahf
ss
add
push
xor
add
test
or
mov
mov
fwait
pop
xlat
int3
imul
pop
inc
xor
dec
addr16
decl
adc
sub
js
daa
mov
jle
in
pusha
mov
adc
push
pop
lea
mov
cmp
jge
ds
xlat
jbe
push
ficompl
in
insb
repnz
xchg
cmpsl
cmpsl
fnstenv
mov
cmpsl
fwait
ljmp
into
ret
dec
pusha
nop
stos
leave
pop
mov
mov
cmp
aas
or
clc
mov
aas
dec
dec
pop
stos
andl
rclb
lock
hlt
adc
je
xor
fcompl
nop
xor
inc
pop
push
sbb
stc
fs
dec
repz
call
cmp
push
adc
jns
fstpt
jno
mov
out
sub
or
push
ja
push
negl
jge
sub
ds
stos
mov
fidivl
leave
in
ss
enter
out
aaa
gs
punpckhbw
jl
and
dec
clc
jle
out
subl
stos
mov
push
repz
inc
mov
or
dec
push
add
push
jns
nop
pop
and
mov
cmpsb
or
dec
dec
xchg
cmp
fiaddl
cs
mov
aas
adc
ss
pop
and
push
pushf
outsl
push
loope
pop
xor
mov
push
xchg
mov
sahf
aaa
stos
fmulp
xor
add
sbb
inc
adc
jg
mov
jg
adc
stc
sub
jo
adc
das
fsubr
mov
clc
add
or
scas
adc
dec
cmp
push
in
sub
pop
pop
ja
or
adc
sbbb
aam
jne
push
test
xchg
rcll
sub
int
mulb
xor
add
shl
xor
cmp
and
jecxz
mov
lds
repnz
test
pop
arpl
mov
jmp
cld
pop
jl
fadds
add
ljmp
xchg
and
mov
aad
pop
aas
lret
cmp
mov
mov
push
cltd
pop
sbb
dec
sub
mov
pop
les
and
gs
ss
ss
out
inc
sub
cmp
lods
or
sub
xchg
loop
lds
mov
std
cld
add
dec
cltd
sub
cmp
jno
mov
ficompl
cmpsb
and
push
aaa
fimull
repz
xchg
mov
test
or
into
lret
pop
rcl
and
ret
xor
inc
sbb
inc
iret
adc
push
mov
xor
add
and
inc
test
pushf
outsb
mov
pop
stc
xchg
pop
movl
dec
jno
or
lahf
test
stos
cmp
bound
test
fimull
jle
sub
cmpl
inc
cmc
push
adc
loope
inc
pop
jl
jo
push
or
and
cmp
cmpsl
or
stc
sub
popf
es
into
mov
fbld
pop
mov
les
orl
in
jnp
jbe
cmp
imul
dec
ror
jecxz
lret
hlt
and
enter
cmp
dec
in
jae
cmc
in
loop
jle
int
xchg
sub
pop
adc
outsb
je
sti
inc
inc
xor
mov
cs
push
out
loop
lods
ljmp
xor
jg
shrl
jbe
jle
or
xchg
out
dec
adc
mov
adc
xchg
jb
mov
xchg
mov
and
lds
outsb
aas
iret
mov
das
enter
daa
sbb
popf
push
insl
adc
push
and
sub
inc
test
mov
ret
aas
adc
mov
xchg
mov
mov
xchg
or
andl
xchg
int
aaa
jne
bound
scas
in
int3
fsubp
cmp
push
repz
int3
lods
cmp
lahf
cmc
cmpsl
adc
cmp
mov
xchg
test
sbb
push
cltd
push
add
fdivr
xorb
fnstenv
push
imul
and
jp
mov
ret
mov
scas
xchg
mov
push
or
add
insb
adc
imul
sbb
dec
daa
xchg
call
pop
pop
enter
scas
je
movsl
fcompl
lcall
inc
or
test
cmpsb
outsb
inc
cmc
add
jl
arpl
in
jg
sets
fbld
test
in
insb
inc
rcll
jne
jge
adc
es
rorb
jb
out
push
and
add
fcoml
fldcw
rcll
test
push
loope
pop
out
das
inc
xor
add
and
inc
faddl
imul
sbb
scas
jo
fcoml
dec
jo
loopne
jp
cmpsl
arpl
out
mov
push
fidivl
popa
pop
cmp
cld
lret
jo
pop
mov
ficomps
sub
xchg
clc
fwait
push
clc
scas
inc
or
push
xchg
dec
inc
pop
test
xlat
jne
mov
push
shlb
jne
cmp
jg
cwtl
xchg
sub
dec
mov
pop
fnstcw
xchg
out
sub
inc
jo
aas
imul
pop
push
mov
or
nop
and
add
jl
jbe
and
mov
lock
jno
popa
push
lods
push
ficomps
mov
pop
mov
jmp
bsf
xchg
test
mov
xchg
pop
mov
inc
jmp
movsl
and
in
mov
flds
divl
ret
sahf
daa
lret
andl
jo
movsb
pop
cmc
popf
pop
add
or
cltd
outsb
in
xor
ja
popf
push
out
lret
pop
arpl
lret
mov
call
pusha
bound
daa
add
sbb
push
iret
mov
jae
sbb
out
sbb
mov
fstps
sub
pop
ret
out
inc
in
dec
or
mov
inc
in
adc
adc
shlb
imul
dec
adc
loopne
rolb
fisttpl
xor
sub
mov
repz
jle
aad
inc
jae
adc
or
and
roll
mov
xor
daa
adc
inc
jne
data16
pop
jmp
test
data16
mov
mov
jo
mov
pop
inc
insl
mov
cld
sbb
jle
lahf
test
xchg
cmpsb
negl
mov
pushf
mov
div
mov
mov
imulb
insb
mov
pop
push
notb
pop
mov
mov
lock
outsb
lcall
rcr
sbb
pop
in
push
lcall
jp
pushf
dec
mov
sub
int
pushf
js
xchg
sbb
les
aam
packsswb
cmp
xchg
cmp
xor
nop
inc
insb
nop
je
add
cmc
arpl
pop
rorb
push
pop
sbb
sub
push
cltd
sarl
pop
pushf
cwtl
clc
xchg
mov
movb
cmpsl
inc
rcrl
inc
das
pop
imul
xchg
adc
out
test
cmp
rcrl
jge
scas
mov
jecxz
js
lock
or
cltd
sbb
xchg
lret
xchg
or
out
arpl
ss
sbb
cwtl
test
out
xor
in
aad
mov
lods
into
cwtl
and
and
movsb
or
jg
dec
xchg
pusha
repnz
ja
mov
push
jmp
sbb
xchg
pop
rcll
fmuls
sbb
data16
xor
push
xchg
scas
pop
stos
dec
add
scas
mov
jns
add
adc
mov
push
mov
add
repnz
sbb
and
ss
cmp
in
mov
or
arpl
jb
mov
in
dec
cs
and
mov
cmp
mov
xor
jmp
insl
lea
xor
push
mov
jae
pop
lods
das
or
sub
mov
fs
movsl
mov
insb
out
adc
mov
sub
xchg
shll
cmp
cli
mov
lret
lods
cmpsl
stos
ret
add
lahf
ss
fmul
icebp
loope
add
faddl
mov
mov
std
and
mov
mov
adc
adcl
cmp
test
insb
inc
pop
lahf
cmp
pop
mov
enter
out
jnp
lret
adc
mov
mov
or
sub
mov
imul
jnp
pop
mov
xor
hlt
push
lods
daa
shll
movlps
stc
mov
jns
jae
mov
divl
xor
lcall
pop
sub
pop
push
adc
hlt
cs
lock
fwait
mov
xor
jb
dec
arpl
dec
stc
or
js
xchg
lahf
rorb
dec
add
fldt
add
stos
mov
mov
fstpl
push
jmp
jecxz
mov
mov
insb
popf
push
loopne
push
sub
stos
dec
aad
xor
pop
std
fs
xchg
jg
sbb
push
cmp
push
repnz
inc
es
dec
enter
lahf
sbb
pop
push
nop
test
test
cwtl
sbbb
cld
into
cmpsb
faddl
pop
jl
je
jo
cmp
pop
push
dec
sub
mov
adc
mov
insl
les
enter
inc
sahf
or
dec
hlt
sub
inc
xchg
fistpl
int
pop
add
xor
cmp
cmp
or
jae
pop
scas
test
rorl
pop
test
roll
std
rorl
fstps
dec
faddl
sbb
int
sub
cmp
sub
pop
mov
cltd
mov
sbb
jge
pop
jp
xchg
aad
mov
cmpps
hlt
sub
bound
xor
pop
push
xor
arpl
in
cwtl
test
cs
lds
inc
out
enter
pop
jg
test
add
sub
cmp
cmpsw
xor
jne
movsb
scas
es
aad
push
or
in
outsb
cmp
push
xchg
jmp
xor
xor
mov
or
mov
fs
and
xor
or
pop
cmp
sbb
dec
aad
imul
pop
mov
xchg
dec
xchg
in
loope
cmp
push
mov
adc
and
int3
jnp
bnd
cs
xor
fstpt
addl
inc
clc
lret
shl
xor
pop
pop
dec
jae
pop
and
mov
adc
leave
cmp
loopne
mov
call
mov
enter
ficoms
xor
lea
sbb
lcall
xor
xor
outsb
sbb
test
cwtl
add
ret
pusha
sbb
js
fstl
jecxz
jo
movsb
pop
fstl
mov
aam
mov
out
push
mov
xlat
jnp
jmp
pop
sub
cmp
insb
pop
push
loope
jmp
push
push
and
imul
xor
mov
xchg
aam
sbb
add
mov
ja
dec
out
xchg
adc
xor
push
roll
inc
cmovs
in
je
icebp
idivl
xor
inc
loope
repz
jl
adc
stc
adc
shl
in
ret
and
pop
pop
sub
leave
mov
or
mov
or
mov
xchg
mov
push
decl
imul
push
ljmp
jle
fwait
sub
mov
into
aam
int3
sbbl
mov
pop
pop
add
je
int
imul
or
and
mov
fidivrs
mov
add
dec
stc
in
les
push
xchg
adc
mov
arpl
cwtl
sti
dec
fs
fs
negb
sub
or
and
jecxz
mov
mov
enter
and
popa
jmp
mov
lahf
cmp
cmp
inc
in
inc
enter
fsubrs
jne
decb
dec
add
mov
or
ss
sbb
pop
enter
mov
pop
ret
outsl
loope
push
lods
shrl
repnz
cmpsl
dec
adc
lcall
aas
xchg
in
mov
jns
ror
call
push
pop
fimuls
filds
add
cld
fidivrs
jbe
dec
leave
push
xchg
mov
dec
sti
ds
inc
inc
pusha
shlb
cmpsb
adc
frstor
call
fldcw
ret
adc
imul
sti
xchg
movsl
enter
adc
jl
cmp
repz
call
popa
or
lods
lods
and
addr16
mov
jmp
dec
test
inc
and
or
outsl
pop
addr16
jae
inc
insl
cwtl
push
dec
cld
sbb
dec
loopw
or
es
and
cld
push
or
lods
popf
mov
inc
lock
addr16
push
mov
in
xchg
in
pop
pop
pop
pop
cmp
lahf
push
cmpsl
adc
dec
movsl
nop
mov
mov
add
push
push
xchg
push
adc
cmp
push
cli
push
insb
mov
and
mov
xor
adcl
bound
pop
shlb
or
add
pop
testb
scas
mov
cmp
imul
push
lahf
sub
out
aam
test
outsb
xchg
cld
cmc
cli
dec
stc
daa
pop
daa
cmp
sbb
cli
out
cld
daa
push
testl
mov
mov
mov
mov
fisubl
cwtl
pop
call
sarb
cltd
pushf
xor
jno
sub
add
sbb
xchg
outsl
mov
in
mov
add
adcb
or
insl
int3
xor
test
fisubs
andl
push
int
mov
sub
push
adc
push
jecxz
cmpb
cmpsb
add
sbb
movsb
mov
inc
in
pop
sub
mov
ret
and
fiaddl
jmp
pusha
in
or
decb
fstl
outsl
push
jno
inc
les
push
cmp
mov
mov
cwtl
push
adcb
scas
mov
jmp
and
outsb
arpl
cmp
jmp
xchg
jl
xor
dec
sub
cli
ss
ficomps
xchg
insl
nop
test
pusha
notw
xchg
sahf
sbb
mov
xchg
mov
mov
sub
out
movb
sub
push
xchg
jo
testb
andl
outsb
mov
inc
mov
sub
add
das
movb
xchg
jl
jae
adc
jecxz
pop
xor
mov
and
pop
lock
int
add
xchg
jne
stos
mov
test
jp
or
addr16
xor
xchg
or
push
xchg
ds
bound
push
rcll
dec
fstl
inc
mov
mov
jl
sub
mov
mov
sub
into
and
lock
mov
lods
fistl
in
jnp
mov
enter
push
or
jb
xor
in
mov
sbb
mov
pop
insb
push
mov
cmpsl
das
adc
jne
leave
or
addl
jecxz
dec
inc
inc
pop
xchg
hlt
push
scas
sub
xchg
loope
stc
je
ljmp
hlt
ror
mov
adc
mov
in
test
lahf
movmskps
xchg
fcmovnu
sti
hlt
lea
repz
dec
jmp
inc
add
mov
pop
mov
add
cmp
std
jle
xchg
int3
rclb
mov
xor
and
or
jle
cld
push
stos
sbb
ret
insl
cmp
outsl
push
mov
sub
cmp
out
hlt
mov
xor
imul
out
sti
in
pop
enter
aaa
pusha
inc
jne
mov
and
mov
push
outsb
cld
sub
xchg
lret
aad
loop,pn
pop
sbb
inc
lods
xor
dec
adc
xorl
sbb
jmp
xchg
jmp
adc
mov
aam
ret
daa
cmpsl
xor
and
decl
in
bound
push
push
xchg
inc
lock
xlat
stos
jmp
jae
sbb
pop
sti
push
cmpsl
cwtl
cmp
xor
push
loopne
ret
test
cltd
enter
or
out
aas
lret
mov
or
mov
shll
xchg
inc
jae
sahf
push
jo
movsb
push
mov
inc
ljmp
stc
cmpsb
pop
xor
js
rorb
je
mov
aam
loope
rcrb
dec
pop
xchg
enter
jnp
mov
ss
jno
jns
add
js
adc
jl
fcompl
add
xchg
xchg
loop
xchg
push
add
xor
stos
xchg
dec
mov
enter
loop
lret
rcr
lods
pop
jno
jae
mov
int
jg
lods
test
jb
lea
push
adc
cmp
scas
dec
mov
pushf
jmp
inc
outsb
add
std
les
pop
loope
or
cld
add
or
xor
enter
inc
loope
scas
inc
clc
xchg
lds
pop
adc
shrl
fidivs
shl
popf
fdivrs
popf
lret
push
pop
scas
jnp
dec
les
repz
xor
jp
insb
mov
fbld
fbld
das
mov
jge
cmc
inc
inc
ret
mov
pop
ficoms
lock
inc
mov
ret
xor
notl
cli
add
movsl
dec
and
sbb
add
mov
lahf
ret
in
sub
ret
int
sub
sbb
xchg
sti
sbb
rcll
lods
std
loop
dec
hlt
or
sub
add
sub
cmp
xor
hlt
or
clc
jmp
sbb
mov
sbb
pop
pusha
sub
mov
fmuls
mov
lret
loopne
out
movsb
cmp
mov
inc
je
mov
xchg
out
inc
push
enter
iret
sbb
in
sbb
pop
ss
pop
fiaddl
sbb
or
xchg
inc
cmc
xacquire
cld
mov
outsl
jo
mov
push
push
das
mov
mov
sub
pop
pop
dec
cltd
or
mov
sbb
pop
cmpsl
mov
in
popf
or
lcall
ss
or
cmp
inc
in
cmp
or
cmpsb
jge
repz
scas
ja
and
jmp
mov
push
ss
cs
scas
xchg
xor
leave
pop
lret
lret
jle
push
mov
shll
movsl
outsl
addr16
loopne
sbb
pop
cs
add
ret
test
and
rolb
mov
subb
cmpsb
das
es
mul
xchg
pop
in
in
xchg
pushf
outsl
xor
dec
jmp
bound
push
and
lret
cld
lea
and
idivl
pop
xlat
mov
add
lcall
inc
and
push
jnp
jae
pop
pop
das
das
jo
outsb
pop
test
mov
xchg
pop
dec
fsubs
lcall
inc
shll
rcr
mov
test
cmp
cmp
adc
inc
adc
aad
js
int
add
outsl
in
pop
sbb
test
sbb
jne
call
inc
fistpll
into
ds
xchg
push
sbb
or
pop
inc
jg
lret
add
icebp
rcrb
cwtl
ja
enter
pop
test
ror
xlat
adc
rclb
addl
adcl
mov
mov
inc
pusha
cmp
add
mov
adc
imul
sub
mov
or
sbb
mov
xchg
jge
add
inc
shll
aaa
inc
lods
hlt
mov
stos
mov
inc
sbb
dec
push
mov
cmp
out
cmpb
xor
jbe
sub
push
pop
inc
sbb
or
xchg
shl
cmp
sub
cmp
mov
mov
repz
ficompl
push
repz
add
repnz
push
shll
out
fisubrl
repz
jo
mov
mov
sahf
jae
sbb
and
lods
cmpsl
addr16
repz
pop
and
fs
ljmp
sub
mov
push
sbb
pop
sbb
add
xchg
and
mov
jbe
inc
mov
pop
sar
addl
jmp
sbb
and
loop
fdivrs
cs
sub
adc
lock
xchg
cmp
scas
arpl
std
add
mov
lods
jp
push
dec
push
addr16
test
bound
pop
mov
popf
addl
mov
rclb
cmpl
lret
outsb
cmc
push
das
xchg
xor
xor
popf
pop
rcrb
push
arpl
jmp
sbb
inc
jno
jle
add
pop
loop
and
mov
movsb
loope
adc
pop
iret
mov
sub
or
xchg
scas
leave
bound
adc
inc
leave
pop
jns
cmpsl
in
es
pop
leave
adc
cmp
je
jmp
and
mov
popa
xor
xlat
sbb
jnp
sbb
cmp
mov
stc
push
es
cs
jae
or
mov
push
adcl
mov
leave
add
out
scas
xor
fisubl
icebp
stos
and
pop
sbb
cmp
and
mov
fwait
push
fldenv
adcl
dec
push
xchg
inc
lea
jbe
xor
add
cli
mov
icebp
xor
jb
mov
nop
sub
pop
faddl
and
xchg
mov
adc
ja
out
adc
rorb
sub
jo
shll
and
xchg
pop
int
sbb
jno
jbe
cltd
xchg
cli
adc
into
push
dec
fldenv
xor
mov
add
outsl
sub
dec
stc
push
bound
test
iret
fisubl
dec
jl
das
cmp
xchg
and
ret
loopne
fsub
loope
cmp
xor
mov
cmp
scas
cwtl
imul
dec
incl
in
cld
aad
pop
push
add
cmp
shl
or
jp
jle
pop
aam
addb
into
push
fisubrl
cmc
xchg
mov
xor
imul
mov
xor
add
sbb
inc
pop
adc
mov
and
pop
cmp
xchg
pusha
push
inc
inc
inc
and
pusha
or
in
jb
pop
add
add
sbb
adc
movl
xor
rolb
cmp
dec
ljmp
jbe
cmc
cmpsl
push
aam
cmp
sbb
cmpb
jecxz
in
xor
sti
outsl
xor
mov
lock
into
and
dec
push
and
sbb
adc
ret
jns
mov
push
out
insl
in
roll
repz
ret
pushf
add
pop
dec
pop
mov
and
mov
fcmovu
into
or
je
shlb
in
cmc
aad
xor
scas
es
jno
adc
inc
mov
inc
mov
lahf
sti
scas
xor
arpl
mov
mov
cmp
fs
in
clc
and
add
cmc
insl
inc
testb
mov
xchg
or
inc
pop
xchg
stos
subl
pop
mov
sbb
pop
es
mov
or
idivb
in
scas
push
dec
loope
sbb
add
push
push
rorl
imul
pop
call
and
or
lods
cld
int3
pusha
and
notb
xchg
fdivrl
pop
xor
inc
in
cmp
lods
or
js
xor
dec
imulb
push
nop
pop
dec
int3
xchg
add
cmpl
mov
scas
push
or
popl
loopne
dec
jge
outsb
jecxz
insl
movsl
and
ljmp
shlb
in
jbe
sub
dec
repnz
stc
test
cli
pushf
movsb
jp
jo
push
mov
scas
lcall
mov
lcall
gs
aad
jno
or
scas
add
pop
mov
test
outsl
pop
repz
repz
xlat
sbb
push
and
aaa
xchg
aam
push
fsubl
xlat
dec
push
xor
push
out
inc
and
jmp
mov
or
jno
enter
insb
sahf
in
cwtl
out
lock
lods
cs
adcl
scas
pop
das
inc
inc
fisttpl
lock
lods
adc
sub
pop
jo
ds
jne
sub
out
sub
push
pushf
aam
add
adc
cwtl
loop
dec
push
cmp
lods
nop
repnz
sbb
shll
out
lods
push
mov
lods
ss
and
in
andb
mov
mov
nop
xor
shll
sub
mov
jg
adc
jbe
add
cmpsb
fldcw
cmpl
jns
xchg
push
ret
in
pop
push
xor
fnstcw
mov
movsl
gs
int
jne
out
std
out
cld
mov
and
sbb
lock
lret
xchg
es
jb
hlt
out
cli
pop
sub
xor
mov
mov
imull
sub
xchg
inc
outsl
xor
mov
add
imul
gs
fucom
push
xchg
out
iret
dec
mov
je
lret
push
or
add
add
xchg
sbbb
xchg
cwtl
dec
inc
andl
add
popfw
insb
lea
mov
lods
ret
or
int3
mov
dec
sub
or
test
mov
mov
cmc
mov
shlb
or
cmpsl
add
xchg
decl
subl
push
push
xchg
xor
lcall
and
push
int
jecxz
testl
je
pop
fbstp
pop
push
hlt
loopne
movsl
fcmovnb
scas
outsl
cmp
data16
sbb
xchg
out
push
sbbb
mov
jae
push
xor
fprem1
fcoml
in
xchg
jg
stc
pop
addr16
repz
jae
mov
jl
int3
sbb
pop
or
push
orl
inc
jno
ja
dec
xchg
call
int
mov
roll
js
fsubrs
mov
inc
sbb
insl
pop
mov
jp
pop
cmp
cltd
ja
mov
sarb
jg
sahf
adc
pop
add
cmp
jnp
ret
xor
sbb
fsubl
cmp
pop
mov
stos
pop
std
mov
iret
call
mov
cmp
testl
cmpsb
xor
subl
mov
js
dec
push
add
icebp
mov
arpl
push
jmp
icebp
negb
in
insb
ret
cltd
cmp
mov
and
push
and
push
xor
xor
int3
daa
testb
xor
je
loop
pop
or
cmc
adc
and
xor
add
icebp
divb
aad
cmpsb
sbb
dec
pusha
pusha
sub
fdivl
stos
les
xchg
lcall
je
push
jnp
pop
mov
or
lcall
mov
iretw
sti
pushf
sarb
stos
rorb
xchg
sahf
aaa
notb
and
jnp
cs
sub
int3
test
repnz
add
lds
stc
add
jle
or
mov
mov
add
mov
in
aaa
lea
sub
rorb
call
lods
mov
mov
push
pop
xchg
imul
aad
jo
xor
cmp
lock
sbb
sub
cltd
mov
inc
in
mov
test
outsb
xor
cmp
mov
xor
xchg
clc
lods
inc
rorl
hlt
inc
sbb
mov
lods
sub
shl
lock
adc
mov
sub
lock
jle
cmc
icebp
jnp
loop
ss
or
inc
ret
test
xchg
xor
test
add
cmp
fsubl
in
hlt
clc
insb
ret
cltd
fucomp
xor
or
jno
push
lret
notb
ret
pop
mov
push
aam
aaa
cmp
das
out
cmp
ret
inc
fimull
sbb
repz
sub
lods
icebp
movsb
jp
jno
lret
jmp
pop
xor
push
cmp
cmp
xchg
lcall
loop
iret
jge
xlat
push
cmp
or
jb
sub
mov
cld
dec
push
insl
nop
rclb
sub
hlt
push
cmp
pop
sti
dec
insl
xor
ret
cmovl
ds
sbb
or
shrb
sbb
add
xchg
pop
repnz
inc
js
dec
lock
dec
pop
dec
mov
lcall
rclb
xor
imul
out
addr16
push
pop
ds
cmp
xchg
gs
into
push
jne
push
sub
cs
jg
xchg
insb
sub
xchg
pop
es
jmp
push
mov
push
dec
imul
inc
sub
mov
inc
pop
ja
cmp
faddl
push
add
sbb
imul
cmpsb
movsl
jae
pop
or
mulb
inc
mov
test
incl
mov
dec
xchg
int
sub
dec
pusha
inc
lret
scas
shl
xchg
out
repz
lret
push
lcall
movsl
pop
sub
nop
andl
or
cmc
sub
stc
xlat
enter
popf
cmp
adcl
inc
pop
repnz
scas
mov
mov
fsubrl
in
addr16
or
or
inc
outsl
and
sti
cmpsb
mov
sarb
fdivl
pop
loope
cmp
testl
cmp
test
mov
jg
mov
sub
push
adc
shl
inc
test
cli
bound
test
add
lret
out
loope
pop
push
sahf
or
jns
dec
sarl
mov
scas
hlt
outsl
mulb
fadds
jo
in
add
push
cmpb
mov
mov
aam
sbb
add
stc
and
loope
add
cmc
mov
fadd
hlt
push
in
jg
sbb
pushf
add
pop
sbb
testb
sub
nop
aaa
xchg
arpl
cmp
jns
add
enter
ss
aam
das
mov
ljmp
sbb
push
push
filds
lods
mov
jae
xor
and
xchg
das
icebp
ret
movsb
jmp
clc
ja
mov
test
push
lcall
inc
dec
outsl
xor
je
nop
aad
arpl
lret
mov
ja
in
inc
rcrl
ds
push
jmp
or
jmp
push
pop
jecxz
dec
js
jno
inc
push
sahf
add
pop
orb
lcall
jp
mov
or
mul
iret
cmpsl
sub
das
adcl
or
sahf
aas
movsb
enter
test
scas
dec
lahf
lods
pushf
in
icebp
in
mov
mov
xchg
dec
pop
or
je
adc
cmp
gs
mov
xchg
mov
int
rcl
push
pushf
movsb
sbb
int3
adc
cmp
outsl
dec
ds
cmp
call
stos
inc
subb
or
inc
shll
dec
xor
rorb
mov
push
lret
std
test
inc
sti
mov
dec
adc
les
pop
xchg
or
pusha
mov
rcll
push
imul
jmp
push
popa
les
mov
test
pushf
ja
roll
cmp
jecxz
enter
jecxz
adc
xchg
and
int
cs
pop
and
andl
stos
jbe
popf
mov
mov
xchg
mov
mov
mov
insl
insl
pop
dec
add
movsl
lret
lcall
jmp
mov
mov
outsb
jl
jle
or
add
lret
pushf
or
in
testb
iret
lea
ss
in
xchg
push
rcl
pop
cmp
xor
add
jp
mov
cmp
int3
or
pop
sub
rorb
mov
mov
into
sub
loopne
cmp
imul
jnp
cwtl
inc
hlt
pop
fisttpl
dec
ja
adc
push
call
movsl
imul
loopne
scas
fwait
pop
mov
inc
adc
pop
pop
add
sbb
jle
orb
cmp
pop
push
pop
addb
sbb
ja
idivb
xchg
jbe
jo
push
and
sbb
and
out
mov
sar
mov
cmpsb
inc
lret
push
fisubrl
pop
push
pop
movsl
push
pop
pop
sbb
fidivrl
imulb
out
inc
cmp
adc
bound
inc
sub
dec
fwait
gs
stos
ljmp
mov
xchg
jl
imul
cli
inc
push
add
add
dec
push
popa
std
repnz
xchg
in
out
gs
incb
push
lret
in
lcall
mov
or
add
imul
aam
out
addr16
mov
pop
imul
xchg
into
hlt
test
mov
push
cmp
xchg
out
push
sub
dec
mov
in
shll
inc
les
jno
shll
lods
dec
out
mov
mov
mov
add
call
jmp
add
loope
or
xchg
outsb
fwait
out
inc
ret
movb
pop
push
lcall
pop
mov
mov
ss
int3
sub
xchg
cmp
push
into
adc
inc
jmp
sbb
stc
inc
jnp
push
jbe
cmpsl
lock
arpl
fiaddl
mov
roll
scas
das
sbb
adc
fistpl
in
dec
les
push
ss
ret
cwtl
in
fidivs
mov
dec
xchg
mov
adc
out
mul
testl
aam
lret
push
out
pop
lea
nop
cmpsl
loop
sbb
sub
push
add
aaa
pop
cmpsb
cmp
xchg
je
imul
fmulp
lock
hlt
inc
fsubrl
jae
in
je
sub
mov
pop
orb
popa
mov
push
test
and
enter
and
push
dec
sub
hlt
test
dec
pop
or
pusha
inc
pop
mov
xor
loop
sub
adc
push
mov
lret
outsw
jp
adc
subl
jle
mov
mull
adc
adc
scas
call
adc
xchg
fs
inc
or
jne
mov
popf
fucomp
or
dec
sete
push
in
jg
mov
jl
lds
out
or
push
js
fcmovnb
dec
movsl
call
push
dec
loop
jl
test
push
push
rcrl
dec
pop
hlt
stos
dec
sbb
scas
cmpsl
pop
clc
or
pslld
sub
lds
adc
sahf
fcompl
sbb
lds
pop
mov
sub
lock
mov
pop
and
mov
sbb
inc
fldenv
subb
decb
push
cmp
cwtl
cmpsb
sub
cmp
fdivs
imulb
mov
dec
rcl
add
test
adc
pop
call
jno
dec
popf
sbb
pop
cmpsl
stc
ret
push
mov
xchg
add
xchg
int3
mov
loop
and
jmp
fsin
ljmp
dec
arpl
popf
and
mov
test
out
movsl
jle
mov
popf
pushf
ret
push
aad
xchg
aad
and
jnp
inc
pop
mov
jmp
mov
xor
sbbb
pushf
jmp
mov
outsb
cmp
aad
pop
push
add
add
inc
in
ret
mov
and
cli
push
inc
loope
loopne
sbb
sbb
std
xchg
pop
out
xchg
xor
pop
adc
ds
mov
sbb
ds
leave
outsl
mov
xchg
jns
jno
push
jg
lret
jle
and
icebp
fldt
sub
push
add
hlt
sbb
fidivrl
mov
push
add
and
sub
movb
lcall
pop
lret
movsl
fcmovb
stos
fsub
sbb
xor
shlb
int
aad
inc
mov
mov
xor
mov
mov
lock
test
pushf
xchg
lahf
in
adc
pop
jmp
xchg
xchg
scas
sbb
sub
les
jecxz
and
fmul
adc
or
and
aas
mov
add
and
mov
inc
inc
adc
ds
mov
outsb
xorl
xor
cli
pop
in
push
shrl
enter
flds
cli
dec
hlt
adc
lods
cmp
xchg
pop
addr16
rorb
std
add
scas
ja
sbb
scas
pop
cmpsl
add
cmp
iret
jno
xchg
fisubrs
imul
xchg
mov
adc
ret
mull
data16
sbb
sbb
lock
test
aaa
movsl
push
mov
push
inc
push
sbb
push
insl
mov
clc
inc
stos
int3
nop
mov
jmp
or
add
out
xor
cmpsl
scas
sbb
cmpsb
je
mov
mov
pop
leave
or
imul
data16
int
push
lret
push
xchg
cmp
sub
mov
sbb
movsb
fistps
or
push
jae
lcall
or
popf
cmpsb
rol
fidivl
cmpsb
pop
adc
sti
popf
sub
out
or
cmp
xchg
mov
pop
maskmovq
negl
in
push
je
xchg
test
pop
dec
lahf
std
mov
jg
imul
or
lret
sbb
popa
lret
dec
mov
or
out
jnp
fdivs
in
mov
daa
adc
cmpsb
cmp
fisttpl
pop
mov
mov
ret
aas
outsb
cmp
or
push
arpl
push
iret
mov
je
push
dec
sbb
xlat
jecxz
xchg
scas
movsl
pop
aam
mov
pushf
sbb
or
adc
adc
pop
test
and
inc
js
aaa
xchg
fdivrs
inc
lcall
js
jnp
push
jbe
xchg
sub
xor
mov
or
inc
ss
imul
stos
lock
sub
out
or
gs
mov
cmp
xchg
xor
rorb
pop
or
pop
mov
mov
inc
mulb
stos
pop
lea
in
jmp
pusha
inc
iret
aad
jmp
int
cmp
mov
mov
jp
jbe
push
mov
fsubrp
insb
inc
and
xchg
in
sarl
sub
popf
push
add
cs
fldl
adc
daa
repz
adc
sbb
ja
inc
das
dec
push
fs
int
xor
ds
xor
pop
jmp
out
adc
jno
jns
daa
popf
cmpsb
dec
add
lret
out
mov
shrb
xchg
xlat
aam
fdivrl
int
lahf
mov
loope
pop
dec
jbe
dec
xchg
push
arpl
jo
inc
pop
pop
mov
into
pop
dec
jne
mov
inc
jecxz
rcrb
cs
out
leave
cmpb
lcall
cld
cmp
sbb
push
lods
dec
incb
mov
movsb
sub
add
out
cs
and
cmpsb
jge
pop
pop
inc
jp
repnz
mov
es
stos
ret
and
pop
cmp
lock
xchg
mov
sub
je
adc
jnp
idivb
ret
sub
stos
in
or
pop
xchg
in
add
pop
sub
pop
mov
pop
cmpsl
imul
xor
cmp
jns,pt
or
cmp
aaa
or
ret
jp
fwait
or
lock
xor
js
mov
jae
mov
ds
xor
inc
repnz
pop
rolb
jno
mov
pop
push
pop
sub
hlt
cs
mov
dec
pushl
pop
push
push
gs
push
sbb
addr16
adc
or
jmp
push
int3
xor
mov
jns
adc
out
push
mov
ja
leave
mov
sub
xchg
mov
iret
cmpsl
insl
les
mov
mov
test
sbb
inc
cmp
lds
int3
xor
or
mov
mov
jb
mov
pusha
popf
rcr
mov
xchg
mov
arpl
push
sbb
pushf
jge,pn
cmp
gs
rorl
mov
fwait
jmp
jecxz
mov
outsl
rol
sub
outsl
cld
lods
dec
or
popa
sahf
pushf
xor
aam
roll
or
mov
pop
sub
push
lcall
xlat
fnclex
fwait
daa
call
cmpsb
popf
cmp
jle
pop
inc
jns
lcall
test
test
adc
xor
and
repz
das
sub
sbb
mov
sbb
addr16
rcrl
lds
jo
and
stc
or
aaa
rolb
adc
ljmp
scas
cmc
sarl
popa
fistpll
ds
sbb
mov
inc
jne
cmp
nop
enter
sar
cmp
popf
dec
in
xchg
dec
out
imulb
xor
rclb
sub
cmpsb
xchg
push
cmp
divb
mov
pusha
sbb
and
sub
cmp
xchg
mov
movsl
mov
shrb
jnp
add
mov
ja
mov
pop
cld
aaa
in
sti
mov
mov
push
inc
and
daa
mov
scas
pop
xchg
pop
push
addr16
xor
fcoml
scas
xchg
insb
and
inc
imul
mov
sarl
addb
push
cmp
stc
stos
jb
out
ss
xlat
push
xchg
sub
pop
inc
aas
inc
je
nop
and
movsl
adc
mov
mov
sub
adc
mov
in
insw
aaa
mov
fwait
push
ss
imul
fwait
mov
pop
mov
mov
add
adc
jmp
sbb
repz
icebp
mov
fcoml
arpl
jne
stos
jo
or
mov
stc
sbb
in
add
xlat
sbb
jae
pushf
pop
and
mov
xchg
pop
jmp
adc
push
inc
aas
call
gs
lcall
jecxz
movsb
cmpl
mov
xor
xor
xor
adc
out
outsl
pushf
testl
push
fisttpl
xchg
fdivs
pop
push
adc
mov
notb
dec
fldt
sbb
adc
cmp
jl
pop
fs
aam
xor
jnp
mov
adc
fists
fldt
jl
loopne
cmp
fdivrs
lret
push
jno
std
loope
pop
mov
loope
sub
mov
loop
inc
or
icebp
inc
mov
fsub
fcomps
sbb
loopne
push
stc
mov
mov
xor
pushf
adc
add
pop
orl
xchg
mov
or
jb
mov
pop
sbb
inc
movsl
xlat
ja
outsl
sahf
jb
push
sub
sub
enter
leave
sub
addr16
out
insb
test
pop
clc
sbb
xor
lret
push
neg
incl
add
sub
and
jmp
add
sbb
push
mov
fsubrs
add
inc
insl
or
mov
jle
and
fstps
xor
lahf
ljmp
arpl
test
icebp
xchg
clc
mov
jle
nop
add
xchg
cld
jg
dec
add
jno
xor
jp
and
mov
mov
fiaddl
adc
nop
fidivrs
aad
xor
push
cli
or
mov
out
outsb
push
or
sbb
xchg
bound
pop
mov
ret
pop
xchg
popl
ret
sbb
and
shlb
fidivl
ret
jo
mov
jo
inc
test
leave
mov
inc
xchg
mov
lret
ret
adc
leave
lods
mov
out
shll
dec
imul
jg
dec
push
cwtl
ss
push
adc
insb
adc
sbb
data16
adc
arpl
movl
cmc
in
outsb
mov
and
mov
fs
mov
mov
jns
into
or
aam
push
lock
lcall
cld
mov
mov
pop
mov
dec
jl
xor
inc
dec
or
rol
jmp
mov
movsl
jnp
fs
mov
mov
xor
lea
mov
push
aaa
aam
lds
dec
jge
into
out
lds
lods
pop
add
jecxz
lods
inc
addl
cmp
push
sbb
clc
fs
mov
shr
decl
jmp
push
fildl
lret
adc
adc
adcl
xchg
fistpll
ss
fs
cmp
and
jns
mov
inc
dec
int
loop
jno
faddl
xor
xchg
pop
roll
orl
test
jecxz
pop
lea
xchg
push
dec
sub
imul
xor
add
movsb
daa
clc
das
mov
mov
xchg
sbb
pop
rcr
sbb
inc
lcall
out
popa
dec
jmp
dec
fsub
ljmp
imul
out
jno
je
call
adc
sub
mov
aas
jg
jp
sbb
fs
loop
xchg
pop
loope
fldcw
or
test
incb
dec
push
loop
xor
push
adc
icebp
adc
and
dec
cmc
jle
mov
orb
lret
aas
call
pop
add
fwait
xor
mov
cltd
aas
add
into
dec
clc
inc
imul
lods
adc
lods
scas
lock
decb
sub
jge
enter
ror
lods
frndint
pop
in
test
xor
sbb
movsl
or
js
fiaddl
lods
fmul
lods
into
mov
fistps
ror
movsb
mov
cmp
cs
jl
jp
jle
sub
in
dec
stos
mov
mov
adc
cmp
pop
movsb
dec
cli
adc
add
mov
xor
mov
or
mov
inc
out
and
pop
lret
push
pop
mov
push
outsb
lods
scas
icebp
jle
add
jge
jns
stc
mov
push
filds
lods
ljmp
xchg
int
or
lahf
popl
scas
sub
adc
lret
test
loop
sub
push
iret
clc
xor
and
push
xchg
fs
pop
mov
cmc
push
sbb
sbb
fwait
icebp
push
pop
mov
mov
dec
sti
cli
fdivl
popf
sbb
pop
xchg
dec
or
adc
data16
add
inc
pushf
js
mov
pop
es
pop
pop
daa
and
pop
xchg
mul
andl
scas
dec
mov
in
lcall
ss
inc
adc
lcall
fsubs
sti
insl
inc
outsl
int3
in
mov
fildl
in
dec
push
xor
les
sub
or
pop
inc
push
cltd
fldcw
fwait
pop
pop
pop
imul
push
or
jl
cmp
adc
push
sub
inc
ljmp
pop
test
mov
xchg
xor
adc
xchg
neg
push
fstl
xchg
movsb
mov
sub
clc
xor
xor
es
push
pop
psrlq
stc
fst
dec
jne
out
xlat
jns
jle
xchg
ds
push
repnz
inc
jns
rcr
inc
mov
mov
push
cmp
adc
and
arpl
outsb
inc
mov
int3
out
jnp
mov
xchg
dec
mov
faddp
cmpsl
sub
int
mov
add
pushf
in
into
dec
repnz
orl
push
push
sahf
push
ds
jae
and
inc
and
jp
nop
mov
das
stc
cwtl
in
xor
xchg
fdivrs
cmp
push
mov
dec
jbe
mov
sarl
lds
mov
xchg
mov
jmp
dec
lcall
xchg
cmp
movsb
out
bound
in
adc
test
mov
pop
push
andl
or
or
lahf
and
mov
sbb
mov
sub
mov
fbstp
adc
sbb
push
lret
xchg
or
xorb
add
mov
das
stc
push
sub
dec
add
xchg
xorl
aad
cmpsl
cwtl
sub
movsl
cmp
mov
mov
xor
sub
push
test
fcmovu
into
pop
rolb
ss
pop
lret
lods
mov
test
dec
pusha
pushw
and
fistpll
jbe
int
movsb
lret
jg
inc
loopne
lods
test
jp
jno
out
inc
cmp
inc
lods
scas
and
sub
add
xchg
xchg
dec
adc
sahf
or
scas
das
pop
cmpsl
mov
and
inc
jmp
and
xchg
mov
pop
sti
rcrl
xchg
xchg
sub
cmpsl
imul
js
lods
xor
fs
call
xor
sbbl
fnstcw
and
jmp
and
das
fldenv
mov
stos
aas
addr16
movsb
adc
lret
enter
xor
sub
mov
pop
pusha
dec
push
lds
popf
mov
icebp
scas
gs
test
cmp
mov
in
in
pop
or
pop
enter
hlt
divb
jb
test
push
gs
fsubp
clc
hlt
rolb
mov
add
loop
jp
push
jg
jo
out
pop
pop
mov
inc
or
pop
push
shll
and
pushf
in
or
andb
mov
stos
mov
mov
sub
fcoms
sti
rorb
scas
cmp
push
stos
test
addr16
dec
push
int3
lds
pop
inc
or
fwait
js
cmp
pop
loopne
fnsave
sbb
or
ljmp
movd
aaa
adc
cmc
mov
xchg
pop
push
pop
push
js
jle
fisttpl
jne
mov
insb
into
sti
mov
jmp
adc
out
cmc
call
sbb
jo
sbb
out
pop
sbb
cvtps2pi
mov
cmp
mov
jecxz
dec
js
mov
repnz
out
cli
int3
pop
pop
aas
dec
out
jl
jo
aaa
test
popf
into
stc
sbb
adc
mov
sbb
lock
ret
loop
add
cmp
aad
inc
lret
pop
lea
scas
mov
sbb
pusha
xchg
cmp
push
jne
cmp
push
adc
insl
inc
movsb
cmp
sbb
dec
sbb
loope
shrl
pop
cs
insl
scas
inc
add
push
mov
js
in
pop
cmp
mov
pop
jl
mov
mov
aam
mov
inc
jbe
cmp
jae
cmp
ror
mov
pop
push
daa
testb
iret
cs
ss
test
jmp
popf
mov
lahf
addr16
cltd
jno
adcl
popa
sub
imul
mov
fs
sbb
add
movsl
fiaddl
cmp
std
cld
inc
jle
sub
hlt
push
add
pop
fisubl
ret
sbb
and
into
mov
pop
mov
shlb
mov
addb
add
in
xor
xor
sbb
inc
jae
sbb
and
jge
out
push
mov
pop
dec
mov
std
push
push
ljmp
mov
mov
mov
mov
cmc
clc
adc
push
nop
movsb
lds
and
or
cwtl
aam
ljmp
push
ja
daa
pop
jae
popa
mov
sub
jo
inc
fldl
lret
jae
mov
mov
inc
dec
mov
xchg
adc
jne
sub
cs
call
jmp
jmp
shlb
movsl
ret
push
lds
js
aaa
mov
imul
nop
jg
cmc
sub
or
add
xor
pop
testb
fldl
ljmp
pop
scas
test
pop
xchg
out
addr16
lea
xor
fsts
adc
adc
call
xchg
movsl
sub
xchg
mov
dec
sub
sub
int3
mov
ret
jnp
fidivl
in
addr16
test
loope
imul
out
fwait
push
push
lret
ss
std
aas
push
insb
inc
pop
jne
lods
addb
and
mov
xchg
and
cmp
xchg
and
or
jae
add
repz
addr16
push
push
test
xchg
ffreep
movsl
fnstsw
stos
adc
push
mov
outsb
mov
xor
loope
mov
adc
repnz
out
sub
and
mov
push
mov
sbb
lods
pop
andnps
aad
dec
push
enter
fwait
enter
cmp
xchg
jns
call
lock
inc
push
pop
pop
sub
xchg
fldt
mov
cmovne
out
mov
out
and
ret
mov
icebp
mov
imul
mov
loopne
xchg
pusha
jle
int
adc
xchg
daa
inc
in
test
jns
dec
push
outsb
xor
fs
jmp
mov
mov
aam
adc
jge
push
cmp
jne
mov
adc
jecxz
aad
cmc
cmp
jle
add
nop
stos
inc
mov
scas
xchg
or
jnp
es
fwait
jno
jmp
jge
jbe
add
sub
pushf
fisttpl
out
rcrb
and
jl
ljmp
cmpl
jb
xchg
cmovnp
mov
push
sbb
cmp
pop
cmp
popa
inc
or
fwait
aad
iret
lret
dec
pop
aad
es
and
popf
rclb
es
pop
fistpl
aaa
add
rorl
xchg
adc
xor
cmc
daa
cmp
dec
sub
jg
insb
jmp
sub
iret
sahf
xor
in
pop
xchg
bound
std
mov
inc
call
insl
cs
xchg
bound
push
addr16
into
in
pop
loop
fisttpl
xor
into
lods
xchg
aam
adc
add
and
sbb
cmp
mov
test
or
and
xchg
fidivrs
cmp
popa
or
sbb
push
sub
jnp
xor
std
inc
jb
mov
popf
xor
shrb
xchg
rcl
sbb
cli
and
sub
xchg
lds
in
lock
cmp
out
jnp
add
cli
jno
negb
adc
add
int
inc
or
pop
lcall
clc
cmp
sbb
xlat
enter
adc
loope
add
movsl
popa
fstpl
popf
outsb
push
or
into
repz
nop
mov
fstpl
push
inc
adc
adcl
dec
lods
in
and
jle
daa
out
xorb
jp
nop
fwait
loopne
mov
dec
xor
mov
pop
add
and
or
rcrl
cmpl
xlat
add
adc
mov
and
or
pop
xor
out
inc
xchg
xchg
push
fimull
jecxz
push
popf
shrb
rorl
ficoms
aas
mov
clc
pusha
outsb
es
lods
xchg
addl
rcrb
test
add
ljmp
cmp
cmp
adc
and
icebp
dec
jb
adc
jg
test
popf
js
gs
mov
jge
out
add
test
sub
aam
pop
pop
out
sub
push
int3
es
pop
in
sub
and
nop
iret
sbb
xor
sub
mov
lahf
and
test
mov
xchg
cmpsb
inc
rcr
pop
call
out
lahf
xchg
stc
inc
push
pop
aad
or
mov
js
test
jne
or
bnd
push
lret
stc
sbb
mov
jno
inc
xchg
insl
mov
sbb
sub
lods
inc
and
jno
rorl
inc
mov
mov
psrlq
cmp
es
jae
cwtl
sbb
push
mov
pushf
scas
cli
aad
loope
ret
xorl
or
lret
cmpsb
fidivs
imull
jp
scas
cli
out
fwait
jl
es
bound
dec
push
mov
dec
test
dec
dec
sti
inc
repnz
push
popa
fsubrl
jmp
pop
sti
xchg
jne
lret
or
mov
sti
aas
dec
xor
sub
jnp
push
xchg
adc
fucomi
pextrw
jae
aas
sub
jns
mov
inc
adc
mov
test
mov
or
xor
into
nop
aaa
dec
mov
add
adc
jnp
shlb
or
sbb
into
dec
mov
mov
sub
stos
push
outsb
or
mov
jecxz
adc
mov
cmp
pop
ret
cmp
or
fwait
sbb
sub
mov
sbb
pop
jne
in
sbb
add
or
and
sbb
loope
pop
out
jb
sub
in
mov
xchg
pusha
sarb
mov
testl
jae
cmp
popf
leave
mov
mov
mov
ret
ds
push
ljmp
pop
mov
push
push
adc
gs
lock
add
lea
mov
dec
ficoml
jmp
jae
dec
hlt
js
insl
add
data16
loope
movsb
dec
out
xor
and
lea
fcoms
scas
lock
sahf
inc
jge
daa
inc
xchg
adc
jb
push
cs
hlt
lods
jecxz
lods
xchg
ds
cmp
cli
rcl
ret
add
lds
xor
sub
sbbl
cltd
fcomi
lds
rolb
imull
ret
fsubrl
and
adc
ficoml
pop
pop
icebp
xor
ret
icebp
test
pop
rclb
mov
in
outsl
pop
mov
xor
test
movsl
movsl
sahf
sub
inc
and
add
mov
outsl
cmp
pop
cmovg
iret
outsb
je
movsb
fisubs
popf
sbb
push
sub
push
and
mov
movsl
pop
les
js
adc
add
stos
jne
cmp
sub
jge
cmp
mov
shrl
sbb
jg
lods
pop
jge
rcr
sub
xlat
push
insb
fs
mov
add
pop
mov
loopne
cltd
pop
and
fmull
movsl
sbb
pop
mov
jmp
and
mov
stos
aas
lcall
outsb
lock
cmp
sbb
into
jmp
lret
mov
pop
scas
inc
stc
and
mov
mov
arpl
bound
adc
mov
addr16
mov
xchg
notb
cmp
aam
pop
subl
jecxz
sbb
or
xor
movsb
out
cmc
mov
cmp
jecxz
xor
lock
fdivs
push
xchg
clc
dec
mov
scas
xchg
sub
mov
jns
fwait
jle
mov
int
mov
cltd
aad
movsb
jbe
inc
push
xchg
xchg
pop
inc
pop
pop
mov
sbb
add
js
sbb
xchg
dec
push
or
mov
mov
insl
les
pop
and
into
xchg
call
pop
into
enter
js
mov
fcmovne
sub
add
push
data16
cwtl
sbb
jae
out
in
adc
in
stos
add
push
jae
rorl
sahf
clc
mov
dec
mov
cmp
and
or
fisttpll
fdivl
add
sbb
daa
pop
rolb
stos
pop
or
aam
jmp
add
sbb
decb
lahf
jg
enter
add
out
and
shrb
test
xchg
jnp
xor
xchg
stos
popw
adc
cmp
subl
and
mov
lds
aad
xchg
xchg
ret
dec
jecxz
nop
mov
mov
dec
mov
mov
repnz
ljmp
int3
push
xor
loop
and
pop
jle
ljmp
lods
sub
inc
adc
adc
sbb
stc
cmpsl
shrb
mov
lret
sub
fs
insb
nop
lret
stos
pop
mov
or
movsb
dec
cmpl
mov
xor
adc
sub
jg
das
add
xchg
mov
mov
pop
in
std
mov
sbb
inc
enter
inc
popa
adc
mov
repz
cmp
imulb
xchg
jb
cmc
imul
fcompl
push
movsb
addb
test
sub
outsl
or
addr16
push
mov
xor
xchg
cmc
std
mov
push
jle
jge
xor
push
in
xor
popf
and
jle
mov
sarl
push
popa
popa
jnp
or
es
add
fistpl
jecxz
push
push
lods
mov
add
fwait
dec
jno
lret
cmpsb
imul
sub
add
pop
fstl
bound
mov
std
jp
cmp
and
xor
jo
mov
mov
les
mov
mov
xchg
mov
mov
dec
push
movsl
sahf
cmp
insl
out
ss
out
ss
leave
inc
insl
mov
cmp
inc
mov
sbb
dec
imul
subb
sarl
cmp
cmp
jl
fwait
lahf
dec
jae
leave
test
test
add
out
and
xor
sub
sub
scas
addr16
push
inc
call
or
dec
jp
lds
daa
adc
lods
push
mov
xor
mov
fs
add
sbb
dec
mov
mov
pop
mov
out
add
out
xor
movsb
pop
push
lret
mov
ss
xchg
fisubl
mov
test
mov
call
pop
jp
daa
andl
insl
testl
cmp
loop
outsb
mov
stos
xor
imul
push
ss
fcomi
fldenv
cltd
aam
clc
pop
pop
bnd
adc
sub
jg
pop
mov
stc
iret
sbb
xor
sub
ficompl
xor
xchg
mov
push
or
leave
xchg
hlt
stc
sbb
inc
aad
fiadds
mov
mov
inc
fcmove
xorb
cmc
icebp
lret
inc
inc
ret
xor
das
gs
push
addl
int
mov
test
test
jb
sbb
nop
add
cmp
cmp
cmpsl
rol
xchg
push
imul
cmp
mov
xchg
icebp
pop
pop
mov
imul
pop
arpl
jnp
gs
add
dec
dec
insb
in
pop
mov
mov
cmp
clc
and
or
dec
push
mov
pop
jle
ret
mov
mov
xchg
lock
mov
push
sbb
lahf
xlat
mov
jns
mov
and
icebp
xlat
mov
int3
cmp
add
mov
pop
lret
or
fcompl
and
jge
js
popa
and
mov
mov
adc
xor
dec
loop
daa
lret
cwtl
xlat
and
scas
adc
jmp
shrl
add
mov
inc
xorl
scas
xlat
xchg
cmc
clc
push
mov
cmc
or
dec
test
leave
adc
add
mov
jo
push
ds
repz
out
mov
mov
push
popa
rcll
rcl
sar
jle
add
mov
jl
jmp
mov
js
mov
lock
jl
lahf
xor
adc
stos
movsl
add
loope
cmp
call
jbe
loope
adc
dec
dec
fwait
sub
cld
push
mov
jge
xchg
rcr
das
mov
xchg
jae
ds
iret
mov
pushf
sbb
leave
ljmp
push
pop
xlat
mov
or
es
rorl
jmp
cmovs
adc
sahf
std
fwait
cli
popf
adc
mov
push
lahf
test
cmp
jmp
cmpsb
stc
sbb
add
cli
push
fisttps
insb
cld
cs
jecxz
out
inc
loop
mov
mov
or
movsl
sub
xchg
in
mov
add
clc
push
adc
cmp
sub
push
int3
xor
in
jns
or
outsb
bound
sbb
jmp
scas
sub
imul
pop
add
jne
jbe
test
jbe
mov
push
push
jmp
xor
mov
loope
scas
dec
aaa
adc
cmpb
or
pop
sub
mov
mov
and
adc
pop
es
mov
sub
dec
jb
les
mov
jb
sub
std
enter
mov
mov
inc
pop
mov
es
pop
or
sbb
inc
push
repnz
pop
xor
mov
rcll
cmpsl
jbe
mov
mov
stc
movsl
cmc
inc
test
lods
enter
ljmp
lea
lahf
inc
xchg
dec
mov
lret
lds
xor
inc
push
jae
add
out
sets
insl
jg
es
lcall
add
frstor
inc
push
dec
jo
outsb
aas
mov
add
inc
ds
scas
leave
push
nop
sub
xor
rorl
popa
push
rolb
loope
dec
mov
pop
mov
mov
in
mov
jg
sbb
testl
or
insl
inc
add
lcall
jno
jle
pop
jb
mov
or
notl
cmp
or
xchg
popf
loop
inc
pop
cmp
mov
stos
cld
pushf
adc
jg
loopne
mov
repnz
mov
and
insl
sub
pop
jge
adc
xor
cltd
repnz
xchg
mov
lods
adc
xor
aaa
add
fisubrs
sub
mov
dec
dec
movsl
and
js
cmc
decl
dec
push
fidivs
push
mov
fiaddl
pop
aam
sub
lret
lret
jo
fisubrs
xor
cwtl
pop
xor
shll
sub
jae
xchg
sub
push
das
lret
iret
insb
test
int
jecxz
or
enter
bound
cmpsl
pop
inc
loopne
gs
push
sbb
jbe
mov
mov
sti
sbb
lods
jg
jmp
pop
mov
testb
flds
and
jmp
sbb
inc
test
aaa
sbb
push
aaa
mov
xor
pop
cld
add
or
jecxz
add
lods
adc
xor
cltd
out
jmp
popa
mov
out
sbb
fs
mov
push
mov
xor
pushf
sbb
xchg
mov
shlb
pop
fdiv
cmpsb
sub
add
inc
add
popa
mov
mov
xor
add
in
rcll
es
mov
push
pop
inc
mov
ds
repz
mov
test
cli
fs
xor
add
jmp
fbld
shl
push
bound
lods
pop
nop
xchg
test
xchg
fnstcw
outsb
xlat
jmp
arpl
xor
out
sahf
data16
inc
iret
lahf
cwtl
cmp
push
push
mov
sbb
mov
dec
add
sub
ljmp
mov
repz
push
cmc
pop
imul
push
xlat
sahf
jbe
push
sbbb
stos
adc
clc
es
jne
mov
fwait
pop
adc
jo
repnz
inc
adc
and
mull
dec
iret
or
in
test
aad
xchg
or
sub
orl
or
mov
mov
or
ja
xchg
lret
lahf
push
cmpl
adc
leave
loop
jbe
sbb
fdivrl
pusha
mov
aas
adc
mov
jno
stc
mov
test
idivb
sti
xchg
mov
sti
fscale
bound
adcb
sbb
push
mov
mov
ljmp
cs
adc
sbb
xchg
sbb
adc
adc
dec
pop
sbb
scas
xor
pop
jmp
sbb
aas
jnp
addr16
je
push
and
sahf
negb
mov
mov
add
cmp
pop
dec
loope
je
mov
jge
shll
test
sbb
gs
sub
pusha
sbb
xchg
push
add
mov
aam
adcb
dec
cwtl
lahf
imul
nop
push
jb
xchg
js
mov
mov
repz
cmp
mov
xchg
faddp
mov
or
in
mov
push
jl
cltd
jg
jno
inc
dec
movsb
push
roll
jmp
push
sarl
vpaddsb
outsb
inc
ja
mov
inc
mov
xor
jns
fwait
sbb
imul
lret
mov
dec
pop
fidivrs
je
in
push
mov
cmpsl
jg
js
call
push
cmp
sbb
daa
in
fistpll
sahf
cltd
pop
movb
leave
add
stc
je
pop
jmp
je
inc
push
ds
jo
adc
test
shrb
xor
push
mov
inc
cmp
sbbb
or
mov
cltd
ljmp
inc
pusha
xchg
inc
shlb
push
mov
pop
xchg
mov
sub
rol
fcoms
in
sub
shlb
fs
push
or
negl
pop
push
xor
pop
insl
sub
or
hlt
push
pop
xlat
imul
and
and
aam
mov
repz
jne
lret
mov
stos
jecxz
or
and
daa
out
fisubrl
out
xor
stos
xchg
test
out
cs
fisubrs
dec
out
dec
push
lret
add
xchg
cld
shrb
jle
into
xchg
jns
roll
push
cmp
hlt
cmpl
inc
ljmp
add
adc
test
push
mov
cmp
leave
sub
test
rolb
fnstcw
sbb
push
xor
in
sbb
cwtl
pop
pop
movsl
lret
test
jg
push
cli
push
orb
fwait
out
out
add
xchg
pop
shlb
cmp
das
test
cmpsb
mov
mov
jb
jge
xchg
mov
add
adc
adc
and
adc
insb
mov
add
push
pusha
push
in
mov
lret
mov
imul
aas
pop
xchg
rcrb
inc
mov
lret
in
pop
cmp
and
leave
xchg
fldenv
mov
out
enter
xchg
hlt
sub
sub
jge
adc
jle
test
aam
push
and
pushf
dec
push
inc
add
mov
rolb
mov
xchg
outsl
repz
xchg
fbld
sti
cmc
lods
mov
sbb
aas
or
outsl
or
push
mov
daa
jnp
fucomp
push
push
scas
icebp
lds
pop
push
jmp
movsb
pop
add
cltd
stos
insl
dec
xchg
popa
sub
xor
or
lahf
out
pop
fsubr
mov
movl
or
cmp
push
mov
inc
adc
sub
rcll
pop
repz
leave
das
sbb
cmc
mov
mov
sub
movsb
jmp
lock
or
clc
cwtl
mov
mov
cmp
jno
repz
mov
icebp
adc
mov
sub
inc
jns
sbb
inc
dec
add
roll
testb
sub
inc
mov
shr
sub
jl
aaa
inc
fildl
mov
push
fildl
push
inc
sub
mov
inc
and
mov
mov
jne
pop
push
jle
arpl
repnz
mov
mov
inc
inc
movsb
inc
movl
and
fcmovnb
hlt
loopne
xchg
add
adc
mov
repnz
jmp
ds
sbb
mov
push
imul
adc
hlt
icebp
sub
adc
mov
push
dec
stos
mov
jae
sbb
adc
scas
lret
cmc
inc
shl
popa
fdivl
inc
sub
mov
cld
js
sub
lret
push
push
popa
xor
dec
push
xchg
movsb
add
pop
xchg
push
push
nop
mulb
push
adc
flds
sub
inc
addb
cmpsl
cmc
punpcklbw
xor
xchg
ss
sbb
or
dec
sbb
inc
mov
pop
cmp
push
mov
cmp
pop
lahf
cmp
lahf
cmp
rolb
nop
cmc
fldl
sbb
push
hlt
fwait
mov
adc
sub
xor
hlt
push
push
push
sarb
or
dec
inc
stc
pop
xchg
stos
stc
cltd
arpl
arpl
dec
arpl
dec
lahf
cmpsl
rol
inc
cs
es
jo
inc
lret
cld
or
adc
in
sub
mov
loope
add
adc
jb
or
mov
icebp
fimuls
inc
outsb
and
mov
shll
shlb
pop
sub
pop
imul
push
push
testl
addl
dec
mov
fcmovne
add
lcall
in
jl
in
stos
sbb
inc
gs
repnz
jecxz
aas
repnz
cmp
ja
dec
stos
fldl
push
or
ja
push
rcrb
mov
divb
pop
xor
insl
inc
ret
mov
sub
push
mov
ds
jb,pt
pop
cmp
add
inc
cs
xchg
xor
outsb
lods
jl
fsubs
in
mov
outsl
xor
push
nop
inc
jb
mov
cli
addr16
xor
stos
insb
and
push
stos
es
or
push
pushf
in
cmp
ss
testl
mov
shrb
cmp
jae
lahf
jne
xchg
pop
adc
test
adc
push
jg
out
cmp
pop
mov
in
loop
in
divps
push
test
and
sarl
loop
das
jb
js
adc
iret
or
jb
mov
cld
cmp
sub
sbb
stos
sbb
mov
rcl
and
jg
enter
scas
call
scas
ret
dec
jae
and
mov
sbb
lret
xchg
xchg
ljmp
lods
inc
push
shlb
lcall
aad
dec
push
xchg
or
mov
addr16
dec
test
lds
imul
stc
push
dec
mov
add
insb
mov
pop
xor
jae
jnp
xchg
adc
push
test
shl
out
in
mov
jmp
inc
mov
cmp
jno
cwtl
sub
dec
sbb
pop
sbbb
stos
fstp
out
cmpl
out
add
xor
rep
aas
jg
call
add
subb
arpl
mov
fsubs
xchg
xchg
inc
mov
insl
cmpsl
jle
mov
js
lret
jl
mov
mov
sbb
ja
movsb
and
xor
js
add
shlb
int3
addr16
test
insb
sub
pop
jle
xor
sub
dec
xlat
popa
mov
xor
mov
mov
push
xchg
xchg
mov
adc
add
das
stc
mov
stos
or
stc
das
mov
ffree
push
filds
out
stos
mov
pop
out
sub
dec
sub
cmpsb
dec
shr
push
push
inc
mov
scas
jnp
cwtl
icebp
imul
add
pop
xor
outsl
scas
das
xchg
loop
in
jo
jmp
push
jbe
jne
out
push
add
in
pop
fisubrl
xor
cld
dec
xchg
push
mov
rcrl
stos
movd
and
dec
and
repnz
jbe
jge
jns
ss
outsl
fwait
lcall
fcoml
xchg
cmpsl
rolb
inc
rcll
out
shll
shrl
inc
fisubrl
mov
sbb
mov
add
shlb
xchg
pop
push
xchg
jns
pop
fstpt
out
xchg
cmc
xchg
pop
adc
movsl
add
and
int3
sbb
sar
cmp
push
adc
imul
hlt
stos
andb
in
sub
ljmp
cmc
outsl
pop
stos
xchg
xchg
lock
pop
out
lods
jmp
clc
dec
push
push
mov
outsl
mov
sbb
and
mov
sbb
popa
pop
pop
cmp
test
hlt
test
into
cmp
jle
loop
and
gs
cwtl
shll
or
data16
pusha
aad
jne
orl
mov
and
and
dec
xor
int3
pushf
rorb
fimuls
scas
in
and
fisttpl
jb
mov
cmpsb
mov
insl
sbb
add
cltd
out
imulb
sahf
in
sbb
xchg
ficompl
push
enter
jl
jns
testl
xor
out
mov
fsubr
dec
out
mov
ljmp
dec
scas
test
inc
and
push
test
push
and
push
add
out
lods
xor
out
sbb
cmp
sbb
and
mov
outsw
push
movsl
mov
movsb
jge
cmp
mov
xchg
jae
xor
and
push
push
inc
mov
orl
add
lret
ret
xchg
and
jae
cmp
cmp
cmp
cmp
push
or
cmc
shlb
xchg
lock
dec
ret
xchg
adc
out
and
add
mov
in
idivl
adc
mov
pop
les
inc
mov
add
xor
popf
rol
fmull
or
mov
stc
test
pop
loop
inc
aam
test
jno
div
mov
imul
push
xchg
loop
mov
dec
jg
pop
testl
cli
push
loopne
mov
call
jae
lahf
sbb
add
ja
xchg
icebp
cwtl
inc
outsb
adc
ljmp
mov
rclb
leave
arpl
in
add
xor
sub
cwtl
ja
pusha
push
fmuls
cmp
addr16
clc
push
into
out
sub
mov
sub
pop
xchg
fs
jbe
sbb
xchg
dec
jne
adc
movsl
cmp
imul
sbb
sbb
sbb
dec
jecxz
ss
pushf
cltd
pusha
cmpsl
loopne
movsb
inc
jle
inc
jge
jge
scas
loopne
and
mov
dec
aad
add
cld
add
stos
in
pop
divb
fs
mov
es
mov
pop
jne
imul
add
int3
es
lods
mov
cld
mov
push
test
mov
je
inc
stos
test
into
pushl
ret
mov
test
mov
add
jp
repnz
xor
jnp
xchg
add
notl
xchg
cmpsb
movsb
inc
xor
sbb
adc
sbb
es
xchg
mov
bound
adc
xchg
fmuls
mov
enter
test
rorl
mov
repz
push
and
lds
jnp
fisubs
pushf
loop
int3
push
imul
inc
adc
inc
push
pop
out
insb
aas
add
and
jbe
cmp
fwait
mov
jg
cmc
cmc
add
cmpsl
push
add
add
or
stos
mov
loopne
mov
aad
mov
xchg
mov
pop
sub
cmpsl
jp
jo
pop
xor
push
sbbl
pop
out
lahf
jle
jns
sub
jl
mov
ret
fildl
test
and
pushf
xchg
sub
mov
lods
orl
adc
shlb
cmp
arpl
call
jne
cli
inc
in
in
pop
or
inc
mov
cmp
adc
adc
out
push
scas
mov
leave
inc
mov
icebp
cmp
lods
mov
ljmp
popa
mov
enter
add
outsl
sbb
add
adcb
cwtl
shll
sub
aam
adc
out
inc
jbe
rclb
imul
add
pop
lahf
add
mov
adc
and
pop
add
sbb
sub
xchg
aad
scas
outsb
stc
and
decl
in
mov
ljmp
push
scas
dec
inc
push
push
cmp
inc
sub
push
iret
or
test
cwtl
or
jo
push
sub
cmp
jl
push
lods
mov
adc
cltd
sbb
cmpsl
cmc
pop
xchg
xlat
adc
notl
aaa
push
fs
jge
loope
xor
fwait
mov
imul
mov
pop
inc
xor
push
xor
sahf
cltd
fwait
daa
leave
add
lds
jb
pop
cmp
dec
sbb
xor
test
jo
mov
adc
dec
out
sbb
std
cld
xor
rorb
lods
jmp
mov
pop
addr16
push
inc
addr16
sahf
mov
jge
add
adc
mov
lods
mov
sbb
jbe
mov
je
lcall
or
pusha
movb
divl
xor
pop
and
enter
and
mov
mov
aaa
mov
cwtl
mov
je
xor
fstpl
test
lds
sbb
out
adc
outsl
aam
stc
cs
movnti
adc
rcr
movsl
orb
fcomps
vpshufd
cs
dec
ss
push
push
mov
xchg
pusha
std
pop
cs
sub
shl
cmpsb
sbb
inc
pop
xor
stos
shrb
lcall
sub
jns
push
or
mov
int
lret
outsl
popf
add
outsl
or
fwait
or
in
and
add
inc
dec
push
jecxz
ret
sbb
notl
jno
arpl
in
andb
push
mov
add
or
fimull
shr
iret
jae
popa
pop
mov
and
in
outsl
mov
inc
inc
jg
mov
out
ret
lods
cmp
xchg
mull
ljmp
or
movsl
ljmp
mov
int3
enter
loop
cs
fsubrp
cli
sarb
xchg
dec
fimull
mulb
or
imul
sub
nop
dec
mov
push
push
or
mov
sar
jl
cltd
add
pop
cld
pushf
ret
dec
push
jle
inc
pop
fsubr
mov
push
imul
or
adc
xchg
mov
lahf
movsb
or
xor
mov
cwtl
ret
and
fwait
les
mov
or
adc
shll
mov
dec
out
insl
jmp
jg
cld
mov
adc
sbb
ljmp
and
jl
or
sub
xchg
xor
test
scas
pop
xor
pusha
adc
fstps
cmp
inc
jno,pt
cltd
adc
inc
dec
sbb
push
adc
push
xor
push
popa
iret
int
adc
fnstcw
aad
push
cs
push
mov
xchg
cli
sbb
aad
mov
jbe
sarb
pusha
and
adc
and
loopne
mov
mov
rorl
xchg
call
jnp
sbb
mov
fsubrl
loop
dec
ljmp
jge
fildll
push
pusha
mov
or
test
pop
xchg
cmp
pop
jbe
lret
jge
mov
in
push
mov
iret
jnp
xchg
mov
daa
flds
es
leave
test
das
or
jecxz
adc
bound
add
iret
cwtl
cmpsb
jle
add
adc
ljmp
push
scas
or
xchg
mov
or
xchg
clc
sub
fiaddl
scas
pop
or
adc
bound
dec
add
push
lret
push
pop
sub
fldl
sbb
or
fdiv
sub
pop
cmpsb
mov
jns
cs
dec
sub
imul
bnd
jg
jne
popf
mov
dec
out
add
xor
sbb
mov
xchg
jbe
sbb
xchg
dec
push
push
push
push
movsl
mov
cvtpi2ps
mov
jae
or
mov
out
and
sbb
dec
fmull
cmpsl
push
push
call
xchg
in
push
imul
cmp
sub
popf
dec
int
in
std
mov
fcomps
daa
xor
push
pop
movsb
add
out
and
mov
fldl
mov
pop
sbb
sbb
and
mov
jmp
ljmp
jno
sub
enter
adc
sbb
and
pop
inc
in
in
cmpsl
cmp
sbb
pop
fstpl
mov
stos
ror
sub
jns
mov
sub
inc
adc
int
call
dec
imul
jg
cmc
push
push
lods
je
xor
fldcw
and
cltd
in
mov
push
xchg
idivb
push
sub
pop
repz
lahf
fwait
movsl
cwtl
xchg
mov
and
das
int
inc
movsl
lods
pslld
ret
addl
mov
mov
lea
or
mov
push
imulb
in
or
xor
lods
sub
das
sti
dec
xchg
inc
jbe
mov
div
mov
cmp
gs
cmp
xor
lods
jbe
mov
mov
push
ja
shr
dec
and
repnz
push
pusha
movsl
std
loopne
dec
loope
idivl
inc
flds
or
aad
ret
cli
lahf
mov
inc
test
dec
and
orb
mov
lahf
mov
in
jae
xchg
or
pusha
inc
push
negl
movsl
pop
push
or
jns
lret
loope
xlat
push
jp
push
fistps
in
mov
orl
cli
inc
popa
pop
or
sub
or
push
pop
xor
test
mov
xor
sahf
pop
arpl
lods
push
aas
or
mov
jno
lock
or
bound
repnz
ja
or
adc
and
or
xlat
orl
out
clc
fstps
xchg
push
out
cwtl
dec
or
and
dec
mov
push
cmp
sbb
lods
sub
repz
push
xchg
or
cmp
jns
pusha
mov
in
icebp
das
shr
popa
mov
ss
ret
inc
push
xchg
adc
push
cmp
rorl
rorl
xor
out
pop
rolb
sbb
jecxz
dec
push
shl
pushl
shrb
outsl
sub
jle
jne
sub
push
ret
pop
mov
mov
mov
pop
data16
scas
jmp
push
adc
cmc
xor
jg
or
cmp
and
stc
push
push
sbb
ret
or
push
cs
cmp
mov
xor
pop
and
xor
sub
scas
inc
enter
add
std
xchg
in
fcomip
sbb
mov
push
mov
xor
adc
mov
mov
and
sub
and
dec
cld
xchg
sti
dec
shr
lret
popa
pop
cmp
or
inc
sub
pushf
in
jmp
sbbb
jp
add
mov
popf
add
pop
and
test
inc
jo
mov
dec
faddl
inc
jne
repnz
mov
mulb
dec
bound
and
sahf
fs
jno
add
pop
add
cld
lods
daa
cmp
pop
mov
adc
mov
popa
inc
imul
dec
loop
adc
xchg
jl
mov
mov
jmp
int
mov
int3
leave
cltd
sub
add
icebp
or
fnsave
jae
jmp
xchg
stos
test
pop
sbb
clc
popa
pop
mov
mov
dec
test
jp
mov
dec
js
dec
and
notb
jnp
in
adc
jns
dec
mov
leave
sub
add
stos
mov
xchg
cmc
outsl
call
lcall
dec
inc
fstp
das
in
add
int3
out
pop
jae
pusha
repnz
mov
rclb
les
mov
dec
dec
or
roll
pushf
pop
jo
lret
pop
sub
cli
out
xor
repz
sub
push
data16
inc
dec
lret
movsbl
js
mov
out
lahf
fwait
or
pushf
mov
leave
ljmp
rolb
mov
push
cld
test
xchg
add
sbb
dec
outsl
fs
mov
mov
xor
and
jbe
adc
mov
xchg
cwtl
cmp
dec
adc
scas
cwtl
mov
test
pop
dec
sbb
xor
pop
mov
in
xchg
add
ljmp
sub
add
xchg
andl
pushf
ljmp
push
xchg
mov
jns
popl
adc
dec
push
xchg
xchg
jmp
sbb
xor
daa
adc
leave
ret
sbb
jno
stc
mov
mov
out
sarl
mov
adc
xor
pop
mov
sub
pop
xor
scas
lock
test
mov
mov
movsb
cmp
aaa
jg
xchg
xchg
xchg
lds
cwtl
mov
add
stos
pop
add
or
ja
jg
pop
add
xchg
pop
sbb
imul
xor
in
push
pop
mov
sub
push
or
rcl
mov
dec
cmpsl
lds
and
lds
call
pop
or
out
push
jbe
jg
stos
leave
mov
inc
pop
and
leave
cpuid
div
push
testl
inc
adc
dec
adc
aas
pop
dec
pop
jmp
ds
add
push
stos
push
jl
pushf
or
xlat
push
fadds
les
ret
xlat
fdivl
adc
push
in
popf
add
shll
lods
lret
mov
push
mov
lea
dec
inc
lods
insb
xor
or
test
faddp
mov
add
out
scas
pop
push
in
test
enter
fsubrs
cmpsb
jo
fwait
aaa
adc
lds
lahf
stc
cmpsb
pop
icebp
adc
sahf
lret
aad
or
or
pop
fstpt
lahf
cs
scas
pop
gs
add
mov
pop
jbe
js
add
mov
pop
cmc
adc
xchg
mov
movsl
cmp
add
mov
dec
jb
mov
or
xchg
jecxz
xchg
mov
add
push
icebp
pop
adc
addr16
loopne
pop
out
out
push
daa
inc
je
icebp
mov
mov
xor
mov
das
jmp
add
push
pushl
in
mov
mov
roll
pop
sub
flds
mov
dec
iret
fs
or
lret
sti
rorb
inc
inc
pop
xlat
inc
cvtps2pd
mov
push
popf
out
sbb
pop
es
shll
inc
iret
out
arpl
stos
sub
pushf
cmpb
vpcmpgtd
jmp
jbe
or
shl
cmpsb
pop
sbb
and
in
sub
fwait
adc
mov
out
push
xlat
or
subb
in
dec
xor
lcall
mov
fwait
xchg
jae
dec
jmp
aas
push
testb
pop
lds
pop
imull
popl
arpl
loopne
and
mov
int
dec
push
add
push
pop
loop
sahf
sbb
adc
pop
sti
imul
jne
jne
daa
mov
push
popf
enter
jecxz
and
xchg
ja
rcr
jg
int
ja
dec
ficompl
cmpsl
clc
xchg
in
popa
scas
jne
fcmovnbe
ret
inc
loop,pn
add
push
pop
cmc
jae
movsb
cwtl
sahf
dec
add
out
gs
jg
rolb
xor
mov
clc
lods
sahf
pop
mov
leave
and
mov
jbe
mov
fisubs
cmpsb
inc
lret
out
push
and
gs
cmp
ljmp
pop
sti
fdivs
sbb
cltd
negl
cltd
pop
scas
add
dec
dec
jmp
inc
sub
out
dec
adc
fnstsw
lcall
gs
es
mov
cli
sub
jg
test
arpl
in
inc
pop
in
pusha
mov
ja
jg
rol
xor
push
clc
inc
xchg
pop
pop
or
mov
out
sbbb
fimull
in
ficoms
testl
sti
inc
inc
pop
mov
imulb
add
push
imul
mov
push
clc
fscale
insl
and
sbb
jp
dec
push
cmp
loope
pop
ja
mov
das
add
loopne
scas
aaa
mov
and
and
leave
dec
or
push
xor
inc
mov
push
inc
jl
jbe
pop
mov
xchg
xchg
loop
jg
stos
ficomps
aam
inc
and
cmp
sbbl
cmp
mov
mov
pop
movsb
and
add
sar
sbb
jns
test
outsl
js
fidivs
rcl
call
inc
and
mov
cld
jmp
test
js
ja
roll
push
xlat
aaa
dec
sbb
loope
push
mov
lods
sahf
add
dec
hlt
inc
scas
mov
popa
add
mov
roll
mov
inc
std
xor
jg
xor
cmc
loopne
sub
mov
movsl
stos
add
cmp
inc
orb
push
inc
adc
leave
fldcw
movsl
insb
adc
push
push
add
xchg
pusha
sbb
push
mov
stos
aam
xor
push
out
mov
add
mov
cmp
lret
xchg
dec
outsl
pushf
mov
or
add
push
jns
xor
cli
cmp
xchg
mov
mov
jge
jg
push
xchg
mov
pop
ror
jmp
lods
jmp
xlat
sbb
pop
jg
outsl
testb
adc
js
adc
mov
push
in
xchg
call
cvtdq2ps
sbb
inc
or
jae
pop
or
jb
ror
mov
pushf
push
xor
add
inc
sbb
imul
add
call
in
push
pop
and
mov
xor
lcall
shlb
mul
mov
andl
cmpb
shr
cmp
xchg
lock
mov
stos
lock
inc
adc
adc
jb
pop
xchg
out
aam
dec
shll
sbb
test
in
sbb
mov
es
cmpsl
sbb
pop
adc
mov
mov
xlat
mov
inc
clc
mov
cs
xor
fucompp
inc
sbb
push
lock
jno
sbb
fdivs
pushl
aad
cmp
sub
jge
dec
hlt
dec
cmpsl
add
iret
out
mov
fwait
push
mov
inc
and
sbb
rolb
test
or
pop
cmpsl
jno
xor
rorl
outsl
pop
push
pushf
mov
cwtl
and
push
pop
jmp
dec
aad
adc
dec
push
xchg
dec
es
ror
mov
dec
sub
mov
dec
faddp
dec
cs
cltd
popf
cwtl
fcompl
or
in
cmp
shll
in
xchg
ss
insb
and
mov
mov
add
xchg
data16
mov
xor
je
in
and
pusha
cmp
fisttpll
scas
mov
jp
sarl
sti
bound
sbb
int3
xchg
cmc
add
loop
mov
sub
int3
push
bound
sbb
jp
cmpsl
jnp
imul
pusha
cmc
in
sub
data16
js
andb
es
jno
push
xor
xor
add
push
mov
shrb
xchg
mov
push
mov
ljmp
add
add
push
leave
test
jne
pusha
push
sbbl
add
cltd
test
mov
pop
clc
dec
ss
push
shll
inc
shrl
jecxz
xor
repnz
outsl
sbb
mov
push
shll
add
sarb
rep
pop
pop
mov
jl
or
xchg
adcl
jge
push
dec
nop
jp
movsl
or
lret
push
outsb
inc
mov
frstor
repnz
fldenv
or
adc
lahf
addr16
int3
inc
aam
sbb
or
fisubrl
pop
fcmovb
mov
in
mov
sbb
add
push
out
dec
std
xchg
lea
adc
pop
leave
sbb
mov
or
xor
jecxz
andl
sub
shlb
pop
inc
rolb
add
andb
push
mov
roll
loopne
sbb
lods
sahf
dec
rcrb
ret
cli
mov
cmc
push
lcall
pusha
jb
add
hlt
mov
cwtl
mov
mov
stos
into
int
sbb
jo
scas
nop
pop
popf
les
dec
ret
xchg
cwtl
push
je
sbb
iret
enter
subb
xor
jmp
or
mov
pusha
dec
stos
je
sub
popf
or
fstl
mov
lock
rcll
xchg
lods
sub
mov
dec
aas
and
or
js
lret
adc
sub
paddusw
or
xor
outsb
push
nop
xchg
aad
mov
xor
aas
cmpsl
mov
lret
push
xor
or
pop
add
idiv
insl
pop
jl
rcrb
int
pop
xorl
push
pop
adc
rcrl
or
movsb
aam
dec
mov
mov
sahf
je
pop
adc
lock
fwait
arpl
lds
jb
push
in
xchg
lret
and
hlt
imul
daa
ja
test
cmp
mov
cmp
loope
sub
je
or
mov
add
fdivrs
adc
popf
dec
lods
push
or
fistps
cld
jmp
out
push
mov
addr16
jmp
sub
mov
out
pop
adc
mov
cmp
push
cwtl
out
stos
std
out
mov
loop
stos
lods
cmp
ficoms
daa
mov
faddl
dec
pop
push
xorl
adc
out
cmp
fwait
call
jmp
outsb
sbb
mov
pop
inc
jne
cmp
popa
mov
icebp
shlb
add
cmp
testl
shlb
jp
xor
and
push
insl
test
cmp
ja
repnz
test
xchg
add
push
mov
lret
lds
xor
xchg
orl
push
sarl
push
lds
cmp
or
stos
cwtl
push
loope
sbb
mov
xor
jge
lahf
test
cwtl
xor
dec
lods
mov
mov
inc
loopne
lods
sbb
jno
sub
fildll
das
fiaddl
cmp
bound
in
loopne
sbb
iret
stc
lods
jns
add
repnz
mov
pop
jo
dec
cmp
std
jnp
mov
lahf
push
cmovp
imul
adc
mov
test
jecxz
mov
xchg
push
mov
lds
in
push
insl
sub
xchg
arpl
inc
enter
push
in
enter
add
test
mov
sbb
mov
xchg
push
mov
jne
pop
jl
jecxz
ret
push
adc
xor
cmp
fisubrl
cmp
jle
push
out
push
mov
and
mov
push
loop
jge
testb
cwtl
push
in
mov
pop
int
out
fs
pop
pop
sub
or
in
mov
movsl
jb
out
pop
lahf
lret
add
pop
stos
adc
aad
dec
std
insl
imul
test
lock
push
fstpt
gs
mov
mov
add
sub
dec
icebp
push
dec
leave
in
nop
cmp
mov
jmp
adc
cmp
stos
mov
or
or
inc
sbb
cmp
inc
sub
push
cli
mov
and
loop
mov
fisubs
mov
ja
jb
jbe
and
in
fldt
mov
flds
pop
enter
stc
stos
int3
xchg
sbb
or
pop
xchg
jp
push
pop
or
mov
xor
pop
movsb
orl
in
dec
or
int3
cmpsl
inc
inc
and
lahf
push
add
push
out
dec
mov
and
ret
stc
or
iret
mov
pusha
push
sbbl
push
je
cmp
shll
or
inc
fcompl
sub
push
xor
testl
push
pop
dec
insl
and
aad
sar
clc
xchg
jb
or
daa
xchg
xor
lods
pusha
leave
inc
xchg
xor
insb
xchg
mov
aaa
lahf
pop
cmpsl
fidivrs
iret
dec
mov
js
into
add
pop
mov
xchg
push
mov
ss
leave
dec
cmp
test
or
xchg
jl
cmpsb
add
xlat
lods
xlat
pusha
cmpsb
shll
sub
mov
popf
add
and
sbb
adc
cmp
test
xchg
es
lret
fcom
mov
cltd
imul
cld
push
cmp
mov
scas
out
jge
in
mov
push
cmpsb
shlb
dec
jo
fsubrs
lock
int3
sub
out
jg
mov
sub
push
add
outsb
sbb
pop
mov
icebp
or
lret
sbb
je
out
dec
inc
int3
rolb
mov
adc
and
fcomps
cmp
xchg
stos
pop
into
dec
aaa
shll
and
adc
xchg
sub
cmpsl
mov
pop
mov
movsl
dec
inc
mov
ljmp
test
lods
std
xor
xchg
dec
jbe
and
aam
test
jnp
add
movsb
lret
fisubl
dec
daa
pop
jmp
or
pushf
pushf
ja
sahf
movsb
sarb
or
adcb
xchg
imul
ret
or
cmpsl
ret
scas
stos
mull
into
shlb
inc
sti
pusha
inc
add
xor
adc
xor
fidivrs
lds
scas
add
add
sub
jb
push
push
mov
divl
dec
fistpll
sar
jnp
in
push
dec
popf
and
adc
pop
mov
inc
fbld
push
repnz
daa
mov
pop
xchg
xchg
xchg
push
mov
cmp
in
xchg
add
imul
loop
ret
daa
jl
pop
js
mov
xchg
jmp
dec
js
movl
jbe
loope,pt
jne
add
test
mov
sbb
sub
jno
aaa
lods
mov
jo
xchg
add
lcall
out
xor
jno
mov
mov
out
push
mov
push
insb
pop
and
jnp
fmulp
loope
push
xchg
and
push
add
jg
mov
fwait
dec
xor
xchg
stos
jmp
inc
mov
push
leave
repnz
ret
rclb
cmp
cwtl
icebp
mov
rol
lods
mov
ljmp
cmp
es
dec
pop
mov
sbb
sbb
aad
in
filds
xor
or
cmp
addr16
lds
test
cmp
out
subb
lock
xchg
adc
fldl
xorl
movsl
xchg
xchg
fbld
jmp
std
movsb
js
insb
jmp
into
add
push
inc
fists
push
sub
cmp
xchg
adc
pop
aas
jg
jle
call
cmpsb
mov
mov
sarb
idivb
movsl
pop
sti
push
cmc
add
bnd
sbb
je
push
js
mov
cmp
testb
test
pusha
ds
dec
fcmove
sahf
in
loop
jge
push
mov
or
jns
shr
sbb
cltd
loopne
in
movsb
pop
out
inc
fstps
aad
sub
mov
bound
add
and
cmp
in
in
xor
jae
inc
in
je
mov
daa
addr16
mov
out
mov
inc
sbb
lods
xchg
movsb
dec
call
push
pusha
loop
inc
pop
inc
dec
imul
pop
cs
jp
fidivl
adc
repz
mov
shll
fdivs
ror
sub
fsubp
mov
cmpsl
pop
mov
add
pop
lret
xchg
ljmp
or
pop
lock
pop
movsl
push
mov
popf
stos
ret
jmp
aam
cli
data16
or
in
scas
pop
ffree
outsb
pop
clc
ja
sbb
aaa
icebp
dec
out
mov
mov
or
in
mov
fdivrs
jp
jecxz
in
add
stos
movsb
in
jo
rorb
sub
jnp
mov
adc
adc
dec
subl
lock
inc
subb
adc
pop
jmp
out
loopne
fwait
mov
sbb
in
jg
dec
iret
mov
push
sub
mov
inc
adc
insl
inc
cli
in
sbb
shrl
adc
xor
mov
lods
outsb
add
leave
cld
lret
test
cmp
lcall
sbb
dec
push
iret
lods
pop
adc
scas
stos
imul
lcall
aam
cli
mov
cmp
out
push
add
inc
add
jl
fdivs
or
stos
mov
inc
push
mov
push
xor
outsb
adc
es
inc
pop
clc
or
mov
fldt
adc
or
xchg
sti
dec
and
in
jle,pn
aad
jmp
or
jg
ds
mov
mov
mov
ret
je
push
scas
scas
add
jecxz
and
jmp
sub
ret
jb
jb
cmpsb
and
jg
sbb
cli
mov
or
popf
pop
pop
int
pop
mov
cld
pusha
mov
sbb
xchg
xlat
lds
xlat
cli
add
insl
notb
jnp
stos
dec
xchg
test
mov
push
or
or
movsb
xchg
pusha
aas
popf
jl
add
sbb
dec
int3
roll
fisttpll
jle
shl
xor
sub
dec
aas
das
gs
mov
jle
into
sti
cs
addr16
aam
mov
dec
icebp
pop
push
imul
lret
lahf
mov
push
and
sarl
mov
ja
lods
inc
or
or
or
int3
push
push
daa
xchg
fisttpll
or
and
and
imulb
pop
mov
inc
cmc
movsl
cmpsl
xlat
call
arpl
aad
in
xlat
and
xor
xchg
nop
adc
inc
repz
imul
popa
bound
lcall
aaa
add
popf
add
out
adc
sbb
inc
dec
call
test
iret
jo
pslld
inc
mov
jbe
pop
shrb
xchg
test
cmp
stos
or
leave
loop
or
mov
imul
push
cmp
dec
mov
mov
and
mov
sbb
pop
mov
xchg
mov
popa
xchg
mov
jb
xor
add
sub
fs
test
sti
cmp
or
sbb
xor
mov
rcrl
lahf
push
inc
faddl
xchg
into
movsb
int3
mov
sub
ret
mov
in
in
mov
gs
daa
sti
cs
adc
pop
repnz
adc
mov
cltd
xchg
ficoms
ljmp
add
mov
xor
fimuls
and
dec
jl
sarl
ljmp
mov
stos
mov
mov
mov
mov
je
pop
outsb
insb
jle
mov
out
pop
add
mov
pop
repnz
je
jb
sbb
push
cmp
in
rcrb
stos
lds
pusha
push
xchg
push
pop
jnp
mov
xlat
pop
or
je
xchg
test
arpl
sbb
insl
mov
adc
inc
fnstsw
hlt
push
xchg
dec
out
out
mov
jmp
push
add
pusha
das
lret
clc
xor
test
imul
ret
lds
das
adc
dec
mov
jnp
push
jl
pusha
sbb
mov
push
in
push
xor
xor
shll
sbb
dec
lret
add
push
leave
jmp
dec
sub
adc
mov
jg
je
scas
mov
sub
mov
popf
lret
das
push
mov
les
orb
outsl
insb
push
cli
clc
mov
dec
out
adc
into
out
mov
jo
pop
dec
adc
sub
jbe
xlat
imul
fbld
sti
negb
cmp
movsb
inc
test
movsl
je
jnp
popf
jmp
xchg
stos
sub
and
or
pop
mov
push
loopne
xlat
mov
sbb
adc
popf
ss
mov
daa
adc
int3
dec
cmc
add
je
stc
dec
and
jae
test
adc
xor
push
je
push
add
dec
push
add
push
jl
push
and
sbb
pop
in
mov
arpl
aam
dec
aaa
xchg
cmpsb
adc
xor
add
jns
cli
or
das
add
mov
jns
pop
dec
addr16
push
inc
das
push
daa
ljmp
int
mov
sub
cmp
and
pop
and
insl
pop
cmp
push
cmp
call
xor
nop
pop
adc
dec
cld
jae
jp
cmp
push
add
cmc
xorb
into
out
js
aaa
mov
mov
adc
inc
daa
cmp
push
loopne
mov
das
loope
or
pop
pop
addr16
pop
pop
mov
enter
sbb
shll
in
push
std
add
pushf
dec
cmpsl
and
lds
je
or
fbstp
lahf
sbb
mov
adc
jno
ficomps
or
cmp
jb
inc
sub
pop
xchg
cmp
pop
fabs
out
and
push
lcall
or
or
aad
pop
push
in
adc
ljmp
mov
sbb
pop
lods
xchg
mov
jns
sbb
faddl
mov
sbb
invd
mov
jno
out
pop
jnp
fcmovnbe
jp
mov
push
xchg
pop
or
mov
rorl
pop
sub
pop
repz
adc
andb
mov
cmp
jp
cltd
and
sub
scas
icebp
xchg
loope
mov
out
pop
jnp
cmp
outsb
or
daa
outsb
add
inc
push
cmc
jecxz
mov
sub
fwait
mov
into
push
fdivs
push
sub
mov
mov
imul
or
pop
iret
pop
lahf
xlat
xor
insb
or
mov
es
mulb
pop
js
fimuls
nop
bnd
das
add
sarl
add
ljmp
dec
xchg
and
cld
mov
xchg
mov
es
jmp
pop
xlat
je
pop
repz
mov
fs
in
lock
add
push
in
int
cld
cmp
imulb
sbb
and
rorb
fucomip
pop
adc
pop
fdivrs
add
mov
scas
pop
push
and
cld
sarb
xlat
pop
cs
jno
mov
mov
imul
fisubs
cld
pop
je
mov
cld
lods
int
mov
outsb
fsts
scas
sub
lods
jecxz
incl
push
xchg
icebp
lret
mov
adc
dec
ficompl
dec
aad
repz
cmpsl
sbb
scas
mov
jmp
sbb
mov
icebp
lods
pop
xor
mov
push
lea
out
mov
out
jg
popl
cmp
dec
jae
mov
dec
sbb
ror
xorl
inc
or
ficomps
mov
clc
incb
push
ds
loopne
xchg
jg
dec
inc
inc
jns
test
adc
jp
or
aad
outsb
mov
push
xlat
repz
pop
push
fmull
lahf
push
sub
add
movsb
test
mov
mov
in
lds
xor
test
adc
pop
ljmp
jl
xchg
fildl
cmp
and
push
iret
xchg
lret
test
mov
arpl
dec
xchg
ja
vphaddubq
out
xchg
or
subb
xchg
lods
lret
mov
adc
xchg
xor
xor
pop
sub
ret
addr16
mov
mov
sub
add
jb
stc
xchg
subb
push
sarl
mov
dec
pop
aad
mov
pop
push
push
pop
pop
jecxz
in
inc
jmp
test
jp
sbb
fucom
jmp
mov
std
fildll
or
add
mov
cmp
imul
or
mov
or
xchg
xor
shrb
jbe
pop
std
cs
dec
cmp
outsl
sbb
jle
add
ja
lret
sti
repnz
insb
cmpl
adc
xor
fadds
decl
xchg
adc
xchg
add
lret
int3
aas
mov
lods
orl
insb
fisttps
shrb
sbb
mov
gs
lea
jmp
fs
adc
add
xor
inc
insl
jb
mov
jno
sub
sbb
test
push
ljmp
fs
arpl
add
cmc
jecxz
xchg
int3
std
loope
out
popl
lret
decb
xor
popl
mov
lock
sbb
fidivrl
xchg
xor
adc
in
stc
push
inc
out
mov
sbb
loop
pop
jl
pop
sub
adc
xor
or
fnstenv
ret
dec
cld
loope
and
ffree
aaa
cmp
dec
cmp
or
sti
stc
mov
outsb
push
cmp
loope
push
jns,pt
jb
hlt
imul
dec
inc
lahf
lahf
sbb
test
mov
lds
nop
fcmovne
add
mov
sarl
dec
js
add
xchg
jmp
or
es
in
push
insl
fldl
lret
stos
jg
inc
pop
pop
inc
jp
pusha
movd
imul
lcall
push
pop
out
mov
mov
xlat
pop
stc
stos
movsl
adc
sbbl
frstor
into
jnp
dec
arpl
lret
pop
in
add
scas
mov
dec
outsl
repz
clc
and
mov
icebp
lret
shl
inc
stos
into
mov
jp
outsl
data16
xchg
sbb
or
repz
inc
fidivs
adc
lock
dec
xchg
and
adc
mov
stc
push
push
js
jne
rcrb
test
xchg
fisubs
pop
in
leave
fldcw
adc
pop
xor
push
mov
pushf
jb
fbstp
mov
cwtl
aam
inc
xlat
aam
daa
jl
xchg
cmovg
jl
or
or
xor
mov
mov
pop
mov
push
jns
and
xchg
test
mov
jae
xchg
imul
loope
enter
inc
jecxz
inc
or
stos
or
out
test
les
fists
in
sub
ret
and
test
xchg
inc
xchg
mov
lods
add
sub
sbb
pop
mov
pop
out
fwait
in
jg
iret
xchg
loopne
fstl
iret
shrl
push
xor
popa
push
sub
stos
push
push
lahf
dec
adc
jecxz
cmp
jo
stos
repz
stc
or
loope
cmp
mov
ret
jo
push
mov
xlat
je
xor
dec
push
clc
xrelease
mov
in
push
or
imul
xor
mov
mov
gs
lock
pop
lret
adc
adc
shlb
nop
shrb
imul
xchg
lods
int
test
mov
divl
nop
shrb
cmpl
in
push
xchg
js
xchg
mov
xchg
fiaddl
push
sete
mov
outsl
fsts
enter
xchg
cmpsb
push
sbb
enter
cmp
sub
lock
mov
xorl
mov
add
push
lock
divl
je
dec
push
or
and
nop
aaa
test
sbb
adc
in
xchg
add
mov
scas
jae
cmp
cmp
mov
mov
popf
int3
push
sub
inc
stc
out
movb
stos
jmp
jno
into
jns
leave
pop
ja
out
movsb
jmp
enter
repnz
jg
pop
or
jmp
in
pop
add
jo
jne
xchg
scas
lahf
xchg
sub
push
nop
insl
dec
pop
dec
xchg
mov
or
ljmp
adc
jp
jne
les
outsl
jns
rcrl
xlat
negb
and
push
aad
aaa
mov
dec
je
ret
pop
jecxz
push
push
jnp
call
lcall
insb
popf
dec
push
mov
xor
and
pop
shrl
push
cwtl
jbe
stos
shll
aam
cli
adc
xchg
add
mov
push
shl
dec
jns
hlt
mov
scas
pushf
mulb
mov
test
cmp
mov
test
mov
mov
inc
sbb
cmp
jbe
xchg
sbb
sbb
aad
sub
dec
sub
fistpll
enter
enter
pop
push
testl
ret
movb
fistpll
std
dec
iret
mov
loope
int
jl
cmp
mov
leave
or
adc
mov
or
or
imul
push
mov
aam
xchg
mov
mov
cs
scas
pop
dec
cmp
out
mov
ss
out
mov
add
ljmp
int3
dec
addr16
push
jmp
pop
lods
mov
je
jnp
outsl
adc
xchg
dec
out
stc
cmp
fists
add
dec
in
cwtl
mov
mov
sub
js
bound
fcmovb
cmp
pop
icebp
fidivrl
sub
xchg
mov
or
imul
adc
cmp
arpl
fwait
cmc
mov
jmp
mov
pop
fdivrl
inc
mov
xor
adc
into
jno
mov
stos
scas
inc
inc
or
js
push
mov
fsubrl
pop
ficomps
add
pop
faddl
sub
xchg
sbb
mov
repnz
clc
or
js
mov
imul
and
ds
xor
lods
jle
repnz
mov
adc
sahf
cmp
push
pop
test
test
add
jge
mov
and
cltd
popa
mov
aam
repnz
jle
cmp
sub
daa
mov
xchg
inc
xor
adc
adc
mov
sub
rclb
mov
adc
dec
leave
popf
leave
sbb
fisttpll
fcomps
insb
cmp
aaa
push
shl
adc
lcall
jo
mov
mov
mov
push
loop
cltd
cmpb
push
fildll
outsl
sub
dec
inc
aad
fwait
lcall
xor
fs
bound
cmp
ja
jne
cs
mov
gs
inc
psraw
xchg
xchg
xchg
xchg
cmp
bound
aas
es
ret
pop
jbe
jp
sbb
into
xor
out
or
rolb
xor
cli
sbb
inc
fidivs
jae
xor
dec
das
cmpl
adc
enter
or
add
icebp
push
incb
stc
nop
stos
das
js
subl
xor
push
std
rcll
dec
jmp
jno
mov
addr16
mov
out
int
fs
lods
es
push
cmp
mov
push
or
jge
leave
push
xchg
ficomps
jne
dec
rclb
add
mov
in
push
testb
inc
xor
std
sub
adc
mov
mov
vshufpd
add
push
call
sahf
or
testl
ljmp
fcmovnbe
xor
push
out
inc
es
leave
popa
xchg
xor
mov
push
aam
add
popa
enter
loop
stos
jl
adc
fsubrp
getsec
fucompp
mov
xchg
icebp
rcrl
inc
mov
jns
les
loopne
scas
mov
push
adc
in
mov
or
lds
lahf
ret
push
test
fstl
dec
into
or
cwtl
push
sahf
jecxz
adc
test
pop
lods
xlat
mov
inc
stos
add
rcrb
lods
incb
or
scas
fdiv
movntq
out
loopne
rcrl
cmp
sbb
inc
lds
aad
sbb
mov
addl
add
ja
sarl
mov
inc
push
cmp
xchg
sbb
shlb
sub
std
insl
popa
xor
add
mov
nop
lret
roll
shrl
fimuls
aaa
push
lret
mov
pop
addr16
and
in
divl
stc
test
mov
hlt
jo
push
pop
ficoms
adc
jno
fcompl
xor
sub
mov
bound
rcr
jno
je
pop
je
dec
mov
add
cwtl
scas
aaa
mov
mov
pop
mov
lock
repz
pop
jp
das
movsl
or
xor
movsl
icebp
push
lods
mov
fbstp
mov
lret
in
fs
pop
in
fists
mull
mov
jecxz
fisubs
gs
and
jo
mov
shrl
adc
das
in
out
ficomps
push
xor
or
jg
sbb
enter
cmc
test
jnp
stos
out
pop
fmul
ffreep
vunpcklpd
mov
je
ret
in
push
test
outsb
mov
pop
fisubl
cmp
mov
push
aas
xchg
das
int3
dec
fstl
ss
hlt
adc
loope
popa
jmp
xchg
pop
out
sub
cmp
scas
dec
xlat
adc
in
pop
rcrb
mov
pop
xorb
repz
mov
aas
cmp
xchg
pop
insb
pop
mov
inc
sbb
test
jle
test
out
cmp
or
das
mov
xchg
inc
pop
dec
imul
ds
movsl
cli
loopne
mov
jg
lcall
pop
in
enter
mov
jmp
lcall
sti
push
sarl
dec
add
jmp
cmpb
popa
inc
lds
ret
sub
sbb
sti
sarb
xchg
outsl
sbbl
inc
jb
mov
or
jge
lcall
out
mov
adc
in
roll
xorl
orl
xchg
loope
pop
clc
pop
lret
xor
mov
les
cmp
adcl
sbbl
divl
inc
outsb
sub
add
xchg
and
loope
hlt
pop
imul
fcomp
movsl
sbb
das
push
mov
rdmsr
pop
push
mov
cmp
adc
ret
out
dec
faddl
pop
inc
daa
and
xchg
push
es
xor
jge
and
mov
jb
bound
push
in
sub
mov
sar
arpl
cmp
sti
pop
xor
shll
mov
mov
fldt
mov
mov
repz
push
fistps
cmp
add
mov
push
ljmp
out
or
imul
ja
cmp
or
notl
cmp
dec
push
repz
push
arpl
mov
fbstp
repz
insl
jne
sub
mov
lret
in
cmc
adc
xchg
arpl
inc
adc
jne
sbb
pop
or
dec
lcall
je
das
insl
mov
mov
scas
push
stos
sub
data16
sti
pop
push
fmuls
push
mov
add
pop
mov
out
mov
xchg
pop
push
and
cltd
sarl
cmp
je
xchg
cmp
enter
inc
or
inc
lahf
and
insl
adc
push
pop
cmp
insb
lods
out
fimuls
push
insl
add
vsqrtps
push
jg
add
movsl
test
cmp
jle
inc
fiaddl
cmp
cmpsb
cmpsb
sbb
rclb
adc
int
mov
jmp
xorl
jb
cld
fwait
pop
arpl
testb
lahf
push
jl
mov
ror
pusha
jp
nop
adc
in
js
xor
out
adc
es
adc
xchg
pop
int
or
addb
ret
xor
mov
push
mov
mov
ficomps
aad
loope
add
mov
jo
repz
xchg
icebp
rcrl
add
loopne
sub
int
add
outsb
mov
jns
cltd
not
mov
imul
mov
lods
iret
jg
mov
lcall
xor
popf
fcoml
mov
mov
ljmp
and
pop
and
mov
rclb
or
in
add
enter
lahf
mov
nop
mov
and
insb
and
push
ljmp
test
adc
xlat
xchg
xchg
sarb
jg
mov
add
inc
in
xor
outsl
cmp
aad
sbb
xchg
jecxz
inc
lahf
push
mov
sbb
jnp
cmc
inc
push
dec
mov
dec
cmp
cmp
xchg
cli
xor
inc
or
jle
aas
lcall
ror
scas
or
pop
mov
outsl
das
push
dec
scas
sarl
shll
cmp
insb
and
pop
pushf
jne
pop
lret
inc
mov
enter
sub
mov
or
stos
pusha
inc
push
inc
fisttpl
imul
pusha
out
mov
stos
add
shrb
jle
mov
xor
dec
mov
adc
ja
jbe
adc
imul
jns
add
imul
cmp
pop
cmp
lods
dec
xchg
adc
pop
push
adc
push
outsb
nop
out
scas
xor
testb
mov
push
rcrb
push
push
cs
push
mov
stos
nop
repz
out
xchg
add
sbb
repz
push
and
movsb
nop
inc
xchg
sbb
sub
lahf
sub
mov
jbe
cmpsl
pop
add
xchg
jns
movsb
add
out
mov
dec
testb
dec
push
sti
pop
out
adcl
lret
jmp
je
push
ret
int
pop
dec
fstpt
adc
out
or
scas
xor
inc
lret
xor
xchg
mov
pop
dec
and
inc
xor
sub
inc
mov
mov
out
notl
push
xor
test
div
sarb
xor
loop
mov
jbe
bound
mov
push
add
bound
sub
cmc
clc
push
ja
divb
inc
pop
xchg
jge
jae
ja
mov
sub
nop
mov
insl
pop
push
int
mov
cmpsl
in
mov
mov
xchg
xchg
test
pop
dec
jae
add
add
sub
loop
and
or
loop
cmpsb
divb
pop
sti
push
adc
lret
inc
pop
ljmp
sbb
mov
scas
cmp
pop
shlb
pop
xchg
sbb
fs
out
fists
jns
sub
jne
add
cmpsl
add
out
inc
pusha
xlat
or
loop
movsb
loopne
movsl
iret
orb
in
cltd
stos
mov
sahf
mov
aas
xor
jbe
pop
or
ja
shl
mov
popa
es
fists
dec
rol
data16
xor
add
push
inc
add
adcl
and
icebp
lret
lcall
sti
and
inc
imul
inc
out
push
mov
mov
xchg
addr16
jns
repz
out
inc
clc
sbb
lcall
lods
loopne
pop
jns
sti
cmpsb
repnz
sbb
jp
xchg
roll
out
pop
and
cmc
ds
jno
add
loope
das
sbb
push
xor
mov
inc
sub
call
cmp
lods
scas
mov
push
fldt
lret
popf
out
mov
int
xchg
or
adc
push
movsl
dec
enter
outsb
inc
xchg
xor
into
inc
add
icebp
clc
or
mov
push
adc
imul
pushf
mov
in
xchg
insb
shr
sbbl
insl
sbb
jno
jl
call
shlb
mov
or
dec
push
loop
mov
int3
jnp
push
dec
dec
rorb
inc
shll
popf
lods
int3
jo
lcall
shlb
jo
pusha
or
xorb
das
or
inc
pop
in
xchg
jmp
adc
or
mov
mov
mov
push
stos
insb
or
and
push
lock
mov
sbb
xchg
das
in
into
ret
movsl
mov
adc
mov
testl
aas
inc
scas
filds
outsl
dec
ds
mov
xchg
fisttpll
sbbl
bound
pop
jae
mov
test
mov
mov
xchg
mov
push
mov
sbb
daa
cmp
add
sub
mov
add
insl
repz
jo
sbb
pop
andb
enter
popa
adc
mov
mov
add
lods
orb
lods
lret
cs
sarl
ds
inc
mov
int3
aas
adc
mov
shrb
and
js
dec
push
fs
xor
and
stc
dec
bound
aad
shl
sti
add
imul
das
push
push
clc
nop
das
insb
dec
leave
mov
inc
loopne
out
sahf
mov
xor
insb
or
mov
pusha
adc
insb
adc
xchg
movsb
and
inc
sahf
out
cmpsl
or
imul
or
jne
or
dec
dec
mov
jbe
inc
dec
push
jg
adcb
mov
fdivrs
xlat
fstpl
scas
jp
test
xchg
xchg
gs
and
sbb
add
inc
jp
aaa
adc
jge
adc
dec
push
push
aaa
jne
fisttps
movsl
loop
cmp
icebp
movb
sub
arpl
push
stos
adc
adc
cmp
xlat
arpl
aam
jb
fisttpll
and
adcl
into
aas
inc
or
cwtl
inc
jmp
inc
lods
into
mov
and
cmp
imul
ljmp
sbb
jle
xchg
mov
roll
adc
mov
cmp
jl
sbb
sar
xor
mov
shrl
xor
incb
imull
adc
jae
add
dec
aad
push
out
je
dec
jnp
mov
pop
jmp
inc
mov
add
inc
cwtl
mov
dec
repz
or
push
push
inc
fucomp
sbb
loopne
paddusw
jg
push
sub
mov
mov
xchg
fstl
out
or
js
jp
pop
adc
cmpsb
add
pop
mov
and
jmp
fs
lods
mov
mov
xor
add
dec
dec
push
dec
mov
leave
ja
aaa
push
sbb
mov
and
fcompl
cmp
lock
cmpb
pop
rcll
adcb
aad
mov
cmp
loop
in
mov
xor
ficomps
loopne
pusha
test
add
hlt
ret
negl
pop
cmp
add
ljmp
cmp
inc
mov
mov
popf
mov
sbb
cmp
mov
aam
jbe
jo
fucom
mov
or
inc
std
sbb
inc
ret
idivb
and
aaa
xlat
incb
incl
lret
push
cmp
scas
and
sub
out
fdivrl
mov
push
xor
pop
je
xchg
mov
sahf
aam
mov
sbb
mov
xchg
or
jo,pt
mov
ret
movsb
adc
xor
lret
push
mov
jmp
aad
popa
dec
lret
lret
xchg
aam
fnstsw
fadd
ljmp
mov
jp
ret
aad
sub
xor
es
pusha
mov
aaa
adc
mov
mov
sub
adc
rcrl
hlt
mov
inc
movsb
cli
cld
das
jb
inc
inc
sarb
insl
jnp
jl
fadds
int
pop
xchg
inc
jnp
in
fmul
mov
jmp
lret
push
jae
mov
xchg
ja
repnz
lahf
and
push
fldenv
fldenv
mov
mov
jmp
and
pop
ret
sub
cmp
insl
adc
test
mov
rcll
sti
pushf
pop
ret
stc
fnsave
in
or
mov
jb
es
ljmp
cli
cmc
test
or
scas
call
leave
movb
imul
int3
inc
and
and
fwait
test
jae
mov
in
mov
rorb
adc
daa
dec
mov
in
mov
ljmp
cmpsl
lret
cld
push
or
lcall
inc
add
push
sub
xor
lcall
xchg
pop
push
jo
and
push
jecxz
and
rcrb
test
mov
ret
mov
out
aas
and
mov
ss
add
mov
clc
inc
xchg
mov
sarb
cld
fyl2xp1
mov
xor
cli
popa
lock
data16
lcall
mov
repz
icebp
daa
adcl
sub
loopne
ret
inc
rclb
repz
dec
xchg
lcall
scas
mov
xchg
cmp
push
mov
or
or
fisubs
test
xor
jb
push
mov
sbb
xchg
cli
out
mov
cld
iret
lret
mov
mov
stos
pop
std
sub
jb
cmp
adc
enterw
cmp
inc
icebp
mov
dec
cmp
jnp
mov
dec
pop
sbb
mov
pusha
dec
pop
inc
sub
cs
cmpsb
lods
pop
aad
fdivrl
nop
gs
cmp
push
xor
data16
stos
pop
outsl
adc
sub
mov
jle
cmc
mov
pop
dec
adc
int
sub
shll
cli
push
adc
pop
ja
lods
sahf
and
daa
arpl
sbb
test
arpl
aad
pop
jecxz
mov
mov
cs
jg
jno
adc
stc
mov
jmp
sub
mov
lods
fs
cmpsl
in
jno
cmc
push
push
jp
jo
cli
jb
xchg
imul
jl
mov
mov
lahf
ret
stos
imul
push
push
mov
popf
push
gs
mov
fcmove
rcrl
sti
cmp
ror
add
pop
in
cli
push
das
int3
rorb
cld
jle
mov
sub
mov
cmc
mov
push
sarl
add
dec
inc
cmpsb
clc
mov
mov
push
pusha
jmp
or
lock
fwait
rclb
mov
jp
test
push
addr16
mov
cmc
push
pop
test
xchg
and
mov
inc
bound
cmpsl
fdivl
cmp
pop
mov
loopne
testl
jmp
and
popf
out
pop
inc
lea
cmp
test
aam
push
cmp
sub
cs
fnstsw
mov
and
adc
shl
hlt
shl
ficompl
int
sub
push
adc
bound
mov
adc
xchg
fildll
cwtl
dec
xchg
push
xrelease
push
stos
mov
cmpb
mov
jmp
rol
repnz
call
dec
insl
loopne
push
das
sbb
mov
or
xchg
rolb
sub
gs
jl
push
xchg
lods
mov
add
enter
lret
mov
push
fwait
or
sbb
inc
test
sbb
or
je
xchg
xor
xchg
mov
lods
rcll
les
xor
adc
add
inc
bound
fiaddl
pusha
ljmp
adc
inc
sahf
xchg
push
add
aas
clc
inc
dec
and
cmpsb
and
fsubrs
dec
adcb
pop
pop
addr16
imul
adc
popa
leave
lret
pop
sub
and
mov
outsb
or
scas
sub
mov
loop
dec
sti
lods
cld
and
test
das
fwait
test
outsl
xchg
fidivs
sub
jae
ss
pop
dec
inc
push
mov
hlt
xchg
test
loope
call
outsl
push
orb
in
and
or
jle
mov
mov
aam
cmp
push
ret
or
sahf
push
ret
mov
push
jecxz
push
lret
out
cli
cltd
inc
bound
cmp
adc
mov
iret
repz
jg
cmp
aaa
shlb
ss
or
dec
lcall
hlt
dec
lcall
sub
dec
inc
pop
pop
in
pop
inc
and
addr16
xchg
je
cwtl
cld
fcmovnbe
ljmp
inc
rol
test
fdivrl
jnp
or
psubw
xchg
mov
or
leave
adc
mov
repnz
sub
sahf
inc
ss
push
dec
cli
mov
mov
stc
ficomps
leave
fbstp
mov
xor
lea
divb
dec
repnz
popa
test
xor
lods
and
xchg
push
hlt
lahf
outsb
mov
incl
add
out
xlat
rcrb
pop
add
push
out
fwait
mov
lahf
dec
enter
lods
add
adc
xor
jle
insl
adc
test
mov
add
out
int3
cmp
je
cmp
adc
test
nop
in
jg
out
insb
movsl
shlb
lea
pop
cld
xchg
rcl
xchg
mov
adc
es
nop
pushf
mov
sub
mov
out
pop
push
cmp
cmp
ret
es
lods
popa
aaa
xchg
add
xchg
add
out
enter
in
gs
sbb
or
push
in
adc
lahf
aaa
sub
push
xlat
nop
jb
ret
and
lea
or
xchg
rorb
mov
jp
insb
pop
roll
vmread
xor
lret
js
lods
sub
movsl
enter
mov
mov
into
pop
movups
leave
xchg
or
test
xor
pop
jp
jmp
insl
test
xor
fldl
mov
lods
outsl
enter
xor
mov
pop
push
test
loop
adc
dec
data16
mov
movsl
mov
movsl
dec
mov
mov
aad
out
pop
xor
les
std
xchg
out
adc
mov
cmp
dec
lock
insb
sub
dec
in
push
std
lcall
pop
std
aad
xchg
mov
fisttpll
push
add
xchg
scas
call
or
dec
adc
add
leave
mov
add
stos
outsb
xchg
sub
lock
inc
scas
xor
test
testl
aaa
mov
or
push
inc
cmp
ret
add
xor
xchg
cmc
mov
into
cli
sub
cmp
and
jecxz
mov
aam
jmp
cli
in
imul
pause
call
lret
push
mov
pushf
movsb
cmp
aad
xchg
ficoml
inc
push
roll
data16
cmp
xor
fs
int3
xor
fcmovb
push
lcall
ds
popa
pop
cmp
xchg
mov
mov
fstp
call
loop
adc
mov
mov
pop
jge
std
xor
jne
sub
jle
hlt
xchg
add
push
mov
sub
pop
es
adc
mov
sbb
sub
out
daa
scas
clc
adc
mov
negw
cmp
loop
popf
mov
ret
mov
push
jns
out
xchg
fsubs
mov
xchg
xchg
daa
scas
mov
cwtl
xor
jecxz
rclb
cmpsl
and
dec
and
cmp
icebp
xchg
subl
lahf
and
jmp
pop
sub
sub
arpl
rcrl
sbb
push
test
cmp
and
mov
into
ds
lods
cmpsb
insb
cmp
push
clc
mov
mov
mov
xor
mov
or
cltd
rcrb
aas
push
divb
lahf
inc
add
loope
lret
cmp
mov
popf
add
or
lahf
jne
dec
inc
imull
sub
or
fs
cwtl
xor
jb
enter
ja
sbb
mov
jns
jno
push
shl
inc
dec
mov
jg
push
push
adc
xor
addl
xor
scas
loop
add
dec
inc
or
push
sbb
cmp
inc
popl
push
test
and
std
pop
and
dec
cmp
popf
lea
sub
mov
and
xchg
fsubrs
sbb
pop
iret
and
rcrb
outsb
jecxz
jl
push
and
rolb
add
xlat
add
xor
insl
lret
gs
loopne
outsb
movsl
mov
fwait
push
inc
outsb
popf
sub
pop
push
out
ret
bound
in
subb
mov
insb
mov
pop
fistps
leave
cli
inc
mov
push
mov
imul
or
xchg
mov
or
cwtl
aad
xchg
mov
lcall
add
dec
das
dec
and
movb
bound
sarb
pusha
daa
fs
inc
bound
mov
testl
cwtl
pusha
jle
xlat
cmpsb
aaa
and
or
nop
jnp
xor
fisttpl
lcall
in
or
je
les
out
loope
pop
jle
popa
scas
or
dec
sarb
lret
sbb
or
jle
xchg
inc
in
jae
lret
mov
in
xchg
mov
push
xlat
pop
pushf
popa
add
xchg
sbbb
mov
mov
pop
push
push
mov
xchg
cmpsb
arpl
ffree
inc
pop
nop
mov
xadd
jae
xor
lcall
popa
mov
hlt
repz
sub
jbe
mov
rcll
sub
iret
decl
cmp
ficomps
int3
jo
sbb
orb
pop
xchg
dec
jl
pop
and
dec
lock
and
pop
jg
jo
jg
jno
add
cmpsl
out
lods
data16
sbb
push
sahf
rcr
adc
jl
mov
adc
aaa
sbb
push
mov
push
adc
sahf
ljmp
inc
sbb
sub
xor
nop
mov
cmp
test
pop
jle
out
cld
adc
xlat
jmp
scas
add
cmpsl
mulb
loope
pop
rolb
jno
xor
repnz
add
lds
mov
cmp
or
xor
dec
in
fadds
push
std
sub
roll
cld
dec
dec
ljmp
in
aam
mov
negl
call
int
dec
adc
orb
mov
push
lret
icebp
mov
mov
lea
ret
test
xchg
in
sbb
out
add
xchg
fwait
ret
cwtl
test
adc
mov
cltd
imul
push
sub
jmp
jb
add
mov
sbb
out
insl
lods
mov
inc
mov
rolb
fs
add
gs
xor
and
shl
movsl
or
jb
xor
pushf
xor
or
sub
or
mov
ljmp
sahf
mov
insb
add
pop
xor
dec
jp
mov
xor
xor
mov
fisubl
cmc
daa
lcall
xchg
mov
pop
adc
mov
pop
lock
mov
mov
cmp
dec
jo
sbb
xor
movsl
test
rcl
push
or
xor
pop
adc
xorb
lock
daa
pop
cmp
outsl
cmp
orb
gs
int
inc
mov
rcl
xor
inc
aaa
jmp
sahf
sbb
jecxz
int
dec
push
lods
jne
aas
jmp
mov
dec
aas
xchg
repz
negb
sub
fisubs
add
sti
adc
insb
scas
lds
adc
pop
lods
adc
lret
mov
sub
hlt
pushf
mov
lret
fwait
cmp
shll
cli
push
mov
cmpb
jae
jno
fildl
idivl
jge
outsb
xchg
test
xchg
psrad
push
lock
das
jnp
dec
clc
push
adc
dec
fs
cld
dec
sbb
jl
cmp
xor
pop
sub
adc
pop
xchg
fadds
xchg
mov
jge
cmp
or
pop
mov
icebp
test
arpl
mov
cld
sahf
inc
mov
fs
pushf
in
mov
insl
orb
les
mov
js
std
mov
lods
popa
in
movsl
adc
sbb
xor
xor
in
popa
shrl
inc
scas
sbb
decb
dec
in
aad
push
dec
jno
jp
mov
and
fisttpl
sahf
mov
dec
push
loope
xchg
mov
jge
scas
adc
call
sbb
js
dec
xor
in
or
inc
imul
cmpsl
xchg
cmp
out
jno
mov
rcrb
lret
outsl
mov
ja
xchg
int
mov
and
xchg
add
or
mov
outsl
in
inc
adc
call
mov
xchg
lret
pushw
aas
push
imul
aam
and
repnz
or
arpl
and
xor
fsubl
into
inc
mov
cmpsl
pushf
mov
mov
inc
arpl
mov
push
xchg
cmp
cli
cld
xor
lea
jns
pop
icebp
add
call
cmpsb
push
mov
or
cmp
outsl
cmp
dec
xor
and
inc
aas
or
or
and
fisttps
les
mov
pop
test
fcoms
jge
shr
insb
flds
jcxz
in
sbb
push
jle
xchg
cld
jae
adc
inc
and
test
pusha
inc
and
outsl
sbbb
dec
enter
daa
adc
add
cmp
pop
pop
jl
in
sub
adcl
add
push
mov
mov
notb
hlt
add
or
popa
mov
pop
sbb
pop
inc
xchg
fidivl
invd
repnz
and
hlt
push
jmp
sbb
shl
mov
dec
pop
dec
in
jo
push
data16
outsl
stc
fcoml
sbb
mov
add
mov
add
sub
pop
jle
das
mov
lds
mov
xchg
in
and
mov
shll
or
dec
sbb
cmp
jmp
adc
popf
sbb
add
movsb
int3
xor
mov
mov
into
jg
cmp
push
fistps
xor
mov
cld
pushf
push
inc
mov
gs
mov
mov
dec
cmpsb
dec
lea
loope
je
or
cmp
inc
subb
mov
sahf
dec
xchg
iret
cmp
or
clc
test
repz
nop
jl
jp
push
lods
fsubp
daa
push
cld
stos
dec
pop
pusha
lcall
pop
inc
testb
out
insl
cmp
bound
into
in
sub
ja
int
jns
jne
dec
mov
jno
xchg
outsb
scas
pop
jp
lret
push
setle
mov
fsubrs
or
cwtl
xchg
mov
dec
int
pop
fbld
ret
stos
stos
push
pop
fs
push
lea
cmp
leave
repnz
mov
stos
xchg
lcall
mov
xor
das
pop
lahf
add
sbb
nop
dec
jge
insl
mov
pusha
jmp
xchg
inc
andl
jbe
mov
hlt
jns
cmp
lds
lahf
and
pop
les
ret
fwait
movsb
sbbb
popf
fdivs
scas
inc
push
xlat
iret
cwtl
adc
dec
outsl
lock
lods
sub
stc
mov
cmc
pop
int3
fiaddl
jmp
mov
adc
scas
fwait
push
pop
jmp
cmp
pop
loopne
mov
sbb
fs
push
leave
mov
mov
lret
shrb
jmp
stos
cmp
mov
out
lret
xchg
adc
lea
or
inc
jo
jno
ja
movsb
fisubl
inc
pop
push
pop
sbb
cmpsb
ds
out
adc
test
es
jmp
ret
inc
stos
jp
pusha
inc
aam
mov
jmp
jl
pop
or
dec
imul
inc
lods
adc
movsb
shl
xor
lea
outsb
and
jns
push
fstpt
mov
fcoms
add
mov
mov
sti
jb
push
cmp
popa
leave
aas
aam
inc
xor
fstpt
xlat
or
inc
stc
lods
jb
sub
push
cmp
ljmp
sbb
sub
inc
insb
mov
rdtsc
mov
out
mov
pop
mov
stos
lods
xlat
mov
movl
fldt
adc
mov
mov
cmp
inc
shll
in
dec
ljmp
sbb
cli
mov
movsb
int3
outsl
fsubrl
sbb
or
pop
fucom
in
dec
in
dec
leave
std
sub
rorl
repnz
mov
pop
or
f2xm1
pop
icebp
and
scas
decl
icebp
mov
push
sub
insl
add
cmp
rcl
jnp
adc
jle
jge
fdivp
mov
je
movsb
push
cmp
mov
gs
mov
adc
ret
push
or
idiv
shll
dec
inc
jp
push
pop
es
adc
popa
adc
lcall
int3
mov
sub
hlt
nop
cld
sub
test
sti
repnz
lock
mov
or
pushf
cmp
mov
jmp
add
sub
mov
push
jb
shll
jns
out
add
and
jo
sub
and
push
xchg
cmc
jno
fcomps
mov
addr16
test
dec
push
lods
adc
mov
add
fisttpl
push
loop
push
sbb
add
les
or
and
out
add
and
mov
jns
out
out
dec
in
test
outsb
mov
addb
mov
pop
stos
sbb
pushl
cmp
mov
ljmp
dec
mov
movsl
mov
inc
and
test
sar
js
andb
push
repnz
jl
inc
and
dec
dec
or
out
sbb
sub
cmpsb
push
lods
subb
subl
mov
fildll
mov
js
imul
xchg
out
leave
inc
mov
sarl
fnsave
call
andb
cld
aad
test
push
lock
mov
pop
rcrb
mov
imul
out
stos
xor
dec
mov
push
or
or
xchg
pop
adc
mov
dec
sub
cmp
jb
or
imul
cmp
fwait
and
lcall
fisttps
addr16
pop
pop
iret
daa
cmp
adc
scas
cli
iret
ljmp
mov
cmp
sub
jp
pop
cwtl
xchg
mov
add
sub
cwtl
mov
lahf
ret
jo
jae
test
jle
push
ret
in
pop
cmc
and
cwtl
pop
in
mov
pusha
nop
mov
dec
mov
js
xchg
cli
mov
call
mov
xchg
cmp
fs
and
repnz
cmp
outsl
cbtw
data16
mov
xchg
adc
scas
mov
lods
in
sbb
mov
int
fyl2x
lea
xor
xor
adc
lock
mov
or
adc
and
add
or
fs
std
int3
movsb
aam
push
hlt
popf
push
sbb
rcr
scas
mov
mov
lods
lds
and
mov
out
jne
xor
movsb
push
in
xchg
loope
mov
push
add
frstor
add
outsl
jmp
or
fisubrl
inc
or
push
rcrb
cmpsl
xchg
mov
mov
cltd
mov
loope
aas
iret
mov
inc
mov
es
jl
xor
sub
test
jmp
rclb
pop
or
mov
int
mov
das
pop
cmpsl
ja
mov
push
test
ret
leave
insl
std
test
inc
lds
shrl
add
insl
cmp
daa
dec
lods
and
adc
pop
pop
push
push
in
mov
cwtl
test
xor
push
int
jle
pop
xchg
dec
test
sub
pushf
test
out
xor
push
imul
mov
faddp
bound
xor
jle
mov
dec
into
cmpsl
inc
pop
int3
mov
pop
push
aam
ljmp
jl
popf
rcrb
inc
test
es
lds
and
int3
fdivrl
shr
or
add
add
int3
fmul
cmp
sub
call
pusha
jecxz
out
cwtl
hlt
test
loop
roll
jge
or
dec
cld
cmp
aam
cmc
inc
jl
cmp
mov
mov
sti
mov
cmp
lcall
sub
mov
push
add
push
out
mov
outsb
jg
cli
add
and
xchg
fistl
fcoms
test
cmp
push
sub
cli
xorl
or
mov
sbb
lahf
in
inc
int3
repz
jg
push
pop
popf
cmp
scas
xor
ficoml
mov
mov
jecxz
repz
or
scas
cmp
fcompl
aaa
sbb
imul
movsb
out
pushf
xchg
rorb
lds
pop
push
icebp
sti
add
push
sbb
jg
sar
jg
addb
mov
and
out
pop
loop
test
mov
cmp
jge
pop
sbb
andl
repnz
or
xor
fistl
sti
lods
outsl
adc
inc
loopne
out
js
lds
jge
in
or
jbe
imul
xlat
adc
or
mov
add
adc
aam
rcrl
in
mov
test
pop
les
fcompl
cmp
in
sub
stos
jbe
aad
inc
push
stos
enter
and
push
insl
jle
dec
imul
repz
cmp
imul
leave
out
popf
push
repnz
sbb
push
in
or
pop
mov
push
andb
push
incl
call
hlt
pop
movsl
mov
aam
push
sub
mov
out
jnp
hlt
mov
inc
enter
ja
lock
pusha
ss
cmpb
jnp
mov
stc
and
mov
movsl
mov
push
jp
xchg
add
pop
adc
bound
data16
pop
jg
dec
hlt
sub
add
das
in
fadds
push
dec
sub
fisubrl
sub
addb
push
outsl
and
fmull
inc
mov
add
pop
addr16
jb
mov
imulb
jb
push
sbb
fists
aaa
add
xor
insb
jno
jns
pop
add
orl
pop
pop
shll
es
leave
lahf
xchg
or
mov
lahf
out
jmp
dec
adc
into
gs
push
sub
mov
xor
inc
testl
test
add
cs
fcompl
scas
jns
add
adc
cmp
fisubrl
cmp
cmpsl
icebp
inc
adc
cs
in
imul
sbb
add
jmp
push
and
shr
lods
mov
push
icebp
add
aam
scas
fs
mov
sahf
cltd
sbb
es
adc
push
xchg
movsb
mov
xchg
dec
addr16
mov
push
mov
xor
lcall
jb
testb
ret
popf
jle
mov
cmp
pop
jbe
sbb
cs
idivl
mov
xchg
inc
jp
imul
es
pop
dec
push
int
ljmp
test
rorl
les
rorb
mov
mov
mov
addb
xchg
mov
inc
pop
cwtl
inc
lea
or
dec
mov
inc
pop
push
stc
hlt
mov
stos
dec
xchg
dec
dec
jb
sti
jnp
mov
mov
fucomi
je
cmp
mov
push
cmpsb
stos
mov
fcmovne
jecxz
or
xchg
aas
ljmp
adc
add
pop
mov
mov
js
mov
inc
pop
sbb
mov
sar
mov
mov
loop
dec
notl
shrb
sub
dec
inc
das
lods
xchg
cmpsl
nop
lea
pop
mov
mov
jp
repnz
xor
xchg
inc
stc
mov
pop
xchg
popa
enter
data16
repnz
jno
mov
adc
push
stc
jl
xor
fwait
dec
pop
lret
push
mov
hlt
dec
orb
lods
sti
leave
add
pushf
fmull
sub
and
popf
push
dec
outsb
xchg
cs
stos
sub
xlat
aad
out
push
sbb
inc
xlat
xchg
fptan
inc
mov
test
addr16
testb
jb
adc
insb
pop
lret
scas
stos
cwtl
jo
fnsetpm(287
in
mov
lret
sub
out
mov
aas
add
inc
pop
pushf
repnz
mov
ret
inc
push
shll
xchg
jecxz
movsl
push
inc
dec
cs
in
xchg
imul
xchg
jl
rorl
addr16
mov
sbb
test
cld
xchg
movsl
lds
out
mov
arpl
and
pop
movsb
jbe
aaa
and
mov
aam
jae
inc
leave
aad
mov
xlat
and
cmc
mov
cmc
xchg
pop
aam
inc
dec
mov
inc
mov
inc
int3
call
sbb
xchg
movsl
or
rcrl
and
stc
xor
and
mov
mov
pop
mov
sbb
fidivl
add
dec
loope
mov
hlt
or
loop
and
xchg
aad
stc
pusha
scas
push
test
push
mov
pushf
icebp
js
in
dec
daa
pusha
lcall
loop
fs
mov
scas
jmp
imul
fdiv
add
sbb
insb
lods
push
stc
icebp
sub
lcall
hlt
pop
ljmp
adc
sub
sbb
push
iret
jmp
xor
ljmp
fmuls
das
mov
push
and
xchg
cmc
xor
lret
popf
loope
negb
aad
xchg
xchg
xchg
call
adc
inc
inc
and
or
aas
jbe
fdivs
enter
lret
jmp
push
outsb
movsb
jb
push
movl
fcmove
and
dec
popa
add
les
adc
in
test
lods
sbb
clc
mov
or
stos
in
mul
mov
mov
cmp
mov
outsl
in
bound
add
cmc
stos
cld
sahf
push
lds
cwtl
mov
push
cld
xor
loope
inc
cmp
cmpsl
fisttpl
lret
scas
jns
nop
ret
xchg
dec
pop
xchg
push
jbe
push
or
bound
ret
rclb
lods
test
idivl
ljmp
xor
jns
add
lds
jb
insb
xorb
mov
jge
std
enter
jnp
adc
mov
pushf
arpl
inc
mov
push
lret
cmp
mov
cmp
sub
lods
lods
jb
ret
push
roll
cli
mov
xorl
push
xchg
aas
ficompl
in
cld
sbb
pusha
imul
push
push
dec
mov
dec
sbb
mov
outsb
xchg
xlat
movsb
hlt
das
xchg
cli
cltd
sub
int
fnsave
inc
gs
mov
jae
and
push
xchg
es
dec
jo
jge
cmpsl
pop
and
dec
pop
push
adc
dec
mov
fsubrs
out
sub
push
jns
test
dec
bound
xor
push
or
dec
push
adc
push
sub
sbb
jnp
sahf
stos
in
add
dec
sti
out
lret
mov
jne
sub
rorl
lret
sub
jg
and
push
rep
in
cmp
into
shl
call
pop
mov
adc
dec
dec
push
stc
xor
hlt
push
lea
mov
dec
inc
dec
shlb
sbb
test
mov
xlat
dec
enter
mov
orl
or
dec
stos
inc
iret
sub
mov
aas
pop
xchg
mov
ret
mov
xchg
xchg
shll
outsb
rcll
sub
fisubl
ret
cmc
dec
cmp
cltd
xchg
aaa
roll
jae
sbb
adc
mov
repz
inc
addr16
jmp
mov
jge
rcll
cmpsl
into
fwait
inc
or
inc
repz
gs
and
fld
push
pop
mov
inc
cmp
ret
adc
shrb
push
lea
add
in
push
inc
cmp
fildll
cwtl
mov
sar
mov
mov
jae
setno
lods
push
fwait
mov
daa
ret
nop
jmp
mov
xor
sbb
fwait
iret
in
test
push
das
cmp
inc
in
sbb
xchg
cmp
idivb
or
leave
jmp
mov
jp
clc
push
les
test
fldenv
pushf
gs
test
jp
aas
xchg
mov
fnstenv
mov
stc
das
add
sarl
ja
aam
clc
push
ds
pusha
cmp
adc
pushl
cmp
mov
xor
fucomip
mov
movsb
js
adc
xor
movsl
mov
pop
pop
iret
ret
adc
push
pop
ret
pop
cmp
xor
sti
add
ss
jle
hlt
mov
aam
sahf
sub
xchg
stos
stos
test
and
mov
mov
cld
jae
adc
shr
push
jnp
dec
xlat
cltd
test
sar
add
mov
call
rclb
imul
or
mov
sub
mov
mov
dec
mov
enter
pop
mov
lock
ficoms
xchg
cmp
and
and
pop
xor
aas
jbe
mov
or
es
xchg
fldl
mov
mov
jno
dec
xchg
ud1
daa
insl
jb
pop
jbe
int3
fcomps
fdivrl
xchg
dec
inc
repnz
bound
insl
jmp
adc
std
leave
daa
mov
xor
lahf
jecxz
jp
enter
jp
sti
out
stos
loop
hlt
mov
xor
jle
fimull
inc
outsl
cmp
adc
or
dec
movsl
add
cmpsl
sbb
mov
rorb
push
dec
loopne
add
jae
dec
adc
pop
mov
popl
decb
ljmp
inc
and
adc
pushf
sub
popa
ljmp
ret
xor
sbb
dec
pushf
xor
ds
es
loop
and
in
pop
xor
pusha
xchg
mov
add
cld
mov
loopne
pushf
cmpsl
and
jae
pop
test
fisubrs
std
fdivrs
fwait
cmp
std
pop
mov
scas
mov
add
inc
sub
and
mov
mov
lret
imul
icebp
xchg
rcrl
pop
mov
push
not
jp
xor
cmpsb
xlat
movsb
xor
scas
nop
pop
imul
ja
push
xchg
add
fs
pop
jnp
jo
cmc
sbb
inc
addr16
push
xchg
pop
pop
insb
es
in
sub
dec
jmp
ret
stos
sqrtps
or
gs
inc
pop
leave
add
ljmp
or
pop
inc
roll
xor
icebp
rcrl
ja,pt
add
pop
pop
xchg
insb
mov
dec
leave
mov
pop
out
into
mov
xor
mov
pop
push
in
out
bound
addl
fwait
sub
jle
push
in
push
scas
negb
mov
mov
xchg
xchg
in
jnp
sub
insb
xor
sbbl
lahf
movsl
aaa
scas
sub
push
inc
cwtl
cmpsl
mov
lahf
adc
sbb
das
dec
inc
shl
out
lret
cltd
xor
push
sub
shl
cmp
mov
aam
lock
insl
push
and
inc
dec
add
push
je
mov
addr16
jmp
mov
cld
lret
sti
cmpsb
out
ja
sbb
xchg
sub
ljmp
test
cltd
shl
lret
cmp
jnp
add
movsl
xor
cwtl
sub
cmpsb
out
jmp
jnp
dec
rolb
inc
xor
loopne
repz
jecxz
arpl
dec
add
adc
and
idivb
mov
outsb
pop
aas
inc
gs
fs
pop
inc
or
push
out
add
es
faddl
movsl
inc
pop
mov
adc
adc
xor
xchg
fwait
mov
push
shrl
fldenv
mov
cmp
mov
aad
aam
mov
jb
mov
mov
iret
mov
pop
std
loopne
movsl
movsb
mov
mov
pop
imul
adc
movsl
jbe
adc
and
xchg
lahf
leave
push
lret
xchg
insb
in
insl
and
jb
mov
data16
push
stos
cmc
out
test
fs
push
and
and
jae
cmp
cmpsl
and
lods
cmpsl
sub
aam
call
mov
jl
daa
fs
mov
movsb
mov
mov
inc
dec
repz
jge
decl
movsb
shr
in
push
sub
pop
std
sbb
cmpsb
adc
mov
push
mov
or
lret
out
mov
into
push
or
push
test
fwait
cld
loop
mov
lods
pop
jge
mov
xor
sub
xchg
sub
mov
ljmp
lods
addr16
push
test
ljmp
mov
movsb
repnz
pop
jmp
dec
push
mov
sub
jge
mov
lea
or
mov
sub
inc
insb
out
push
xor
cmp
cmpsb
xor
lods
add
testl
sub
enter
jg
sbb
cmpsl
test
int3
pop
enter
mov
pop
fadd
outsl
ficoml
inc
lods
out
lcall
add
imul
pop
insl
aad
rol
and
ficoms
sub
je
fnstcw
jl
mov
jle
pop
sbb
sbb
mov
icebp
adc
adc
add
or
test
mov
lods
retw
dec
xor
rcll
sub
jno
subb
inc
pop
pop
stos
or
push
ja
mov
jns
mov
aam
int
movsl
dec
ret
push
sub
ljmp
icebp
fisubrs
jo
dec
je
inc
inc
sbb
movsb
cmp
sub
les
and
imul
sub
xorb
or
aaa
xchg
int
stc
enter
cmp
sub
xchg
bound
loope
loop
clc
mov
cmc
cli
mov
sub
sub
repnz
repnz
push
mov
jp
lock
sbb
dec
xor
push
or
xchg
add
sub
lcall
jns
scas
sti
dec
jae
push
sub
gs
das
in
jno
add
gs
int3
dec
xchg
je
cli
xor
fs
mov
jg
mov
xor
js
bound
cmp
pop
test
out
testl
mov
in
sbb
xor
test
stos
mov
jnp
lahf
jle
mov
cmp
daa
pop
inc
ss
xchg
mov
dec
xor
inc
mov
jp
gs
xor
sub
cltd
pop
cmp
push
xchg
call
jne
dec
cwtl
cld
pusha
adc
daa
xchg
mov
add
mov
mov
dec
jle
fidivrl
xor
jecxz
imul
fldenv
dec
pop
out
cwtl
ja
cmp
out
mov
and
and
les
inc
sbb
jo
push
mov
mov
mov
test
aad
or
shr
divb
or
lods
mov
cmp
adc
mov
mov
iret
dec
jae
jne
in
cmp
repz
lods
jl
and
push
adc
mov
xor
cmp
ret
inc
xor
xor
daa
xor
add
and
icebp
in
insl
lret
inc
lods
rorb
mov
sub
xor
sbb
push
push
fnstcw
in
sbb
cld
push
and
out
loop
andl
pop
cmp
xlat
adc
clc
stc
aas
push
and
sti
stos
mov
shlb
mov
and
and
jnp
cmp
addb
mov
dec
imulb
dec
xor
jae
mov
push
add
pop
jl
inc
xchg
jle
int
cmpsb
add
les
mov
stos
sbb
sbb
lahf
mov
imul
xor
ficoms
sbb
sub
pop
stc
mov
mov
lods
and
iret
pop
add
xchg
push
sbb
inc
dec
cmp
call
repnz
ljmp
dec
das
or
mov
stos
popf
pushf
pusha
jl
loopne
pop
std
or
lock
fmull
arpl
xor
cmp
dec
int3
jb
mov
call
ja
mov
jg
pop
into
fdivl
dec
jae
sub
ret
lret
mov
out
inc
inc
rorb
ds
insl
inc
cwtl
push
mov
pop
jp
mov
pop
lods
shrb
inc
jno
xchg
jle
sti
add
dec
inc
fs
add
xchg
out
lock
pop
sbb
jb
pop
and
mov
adc
mov
pushf
or
sub
stos
mov
sahf
adc
cltd
adc
mov
sub
lret
mov
insl
test
cwtl
les
sub
pop
mov
jl
pop
and
xor
dec
fistl
repnz
xor
cmp
mov
sub
das
dec
pop
adc
xchg
cmp
fistpll
aaa
fdivs
add
std
mov
dec
xchg
jo
clc
bound
cmp
ds
lea
mov
dec
aam
sub
enter
in
or
outsb
mov
push
mov
popf
mov
dec
out
hlt
jb
adc
mov
decb
inc
fwait
dec
xchg
or
cmp
jle
gs
jo
mov
rcl
dec
in
test
sahf
out
mov
mov
fldl
fwait
mov
int
nop
xchg
jmp
pop
mov
ljmp
mov
mov
or
mov
pop
xchg
inc
lcall
aas
and
mov
arpl
enter
add
fs
lock
cmp
jp
or
ror
dec
push
inc
out
and
and
cmpl
sub
mov
cmp
cltd
dec
cmp
rcll
stos
imul
sub
xchg
adc
insl
inc
mov
cltd
pusha
add
sbb
test
push
bound
cmp
js
cwtl
xor
xchg
mov
std
push
push
dec
fcmovne
fsts
out
mov
cmp
sub
sub
push
push
or
leave
movsb
fxch
pop
pop
popa
insb
or
pop
mov
aaa
xor
lock
or
cwtl
cmc
xor
or
push
dec
movsl
test
sub
movsl
pusha
das
inc
inc
in
sbb
mov
pop
sub
sbb
sub
pushf
pop
adcb
sbb
push
cmp
sbb
fs
and
stc
jnp
push
popf
mov
cmp
inc
mov
inc
daa
jp
sub
lods
add
pop
insl
cmpl
and
jne
mov
stos
jno
adc
xor
push
push
sbb
dec
ret
inc
in
in
test
iret
push
sub
xchg
push
pop
bound
lods
mov
mov
ss
dec
cmp
dec
icebp
pop
dec
add
xor
bound
and
fsts
sub
mov
push
out
jmp
iret
aam
imul
dec
pop
jno
ljmp
lock
mov
dec
movsb
mov
cwtl
scas
stc
pop
cmpl
orb
push
xor
aaa
sbb
dec
fists
icebp
xchg
sub
push
push
or
jecxz
incb
mov
adc
dec
pop
dec
cmp
fcmovnb
das
scas
mov
into
mov
jb
inc
int3
push
pop
pop
xchg
push
aad
imul
popa
jb
jmp
inc
adc
ljmp
inc
in
inc
lea
imul
or
cmp
insl
ljmp
aas
add
loope
out
pushf
pop
jmp
or
push
mov
popa
or
outsl
loop
cld
cmp
out
popa
pop
out
push
insl
mov
rcrl
sbb
sbb
pop
add
test
add
mul
inc
es
ret
cmp
rorl
mov
cmp
stos
or
addr16
mov
mov
cmp
cmpsl
cwtl
push
inc
popa
xorl
jmp
dec
xchg
mov
addr16
nop
adc
int
sbb
jge
jp
xchg
add
add
xchg
inc
out
mov
nop
popl
shl
jmp
outsb
out
subb
prefetch
mov
outsb
mov
outsb
mov
dec
or
push
dec
sbb
xor
and
push
xchg
adc
sub
pop
les
je
mov
jnp
inc
popa
shr
jmp
or
out
decb
shll
cli
out
frstor
insb
sti
xchg
popf
mov
ja
push
cmp
xor
jecxz
icebp
ds
rcrb
lret
arpl
jno
jmp
add
inc
into
out
pop
and
pop
lock
add
mov
mov
out
pop
jne
jmp
pop
inc
mov
stos
xor
push
push
mov
orb
jmp
js
leave
repnz
xchg
movsl
jg
or
in
shl
lods
and
cmp
orl
cmp
xchg
cmp
out
shlb
es
stc
out
mov
inc
aas
test
adc
outsl
dec
jmp
loopne
xchg
fiadds
ljmp
fwait
jp
mov
push
mov
adc
mov
movsl
fs
push
out
jo
mulb
test
pop
cli
push
inc
ret
push
ud2
sahf
dec
lea
jnp
inc
mov
jl
movsb
jns
sub
cltd
mov
sub
cld
sbb
jg
dec
iret
clc
insl
std
pop
xchg
dec
js
add
mov
mov
jns
lock
mov
loop
sub
inc
xchg
sbb
fs
mov
cli
jo
inc
nop
or
mov
and
ret
inc
push
inc
je
dec
mov
jns
imul
fbld
pop
pop
jl
jg
stos
cmc
insb
mov
inc
stos
mov
and
push
sahf
sbb
movsl
inc
dec
fidivl
and
cld
mov
shr
pop
adc
stc
sbbb
mov
and
mov
sub
mov
cmp
add
rolb
sbb
scas
in
lods
adc
popf
jno
sbb
rorl
ret
jae
push
aas
pop
push
and
mov
dec
mov
dec
jl
push
arpl
cld
pop
mov
sub
testb
and
jne
pop
fdivr
shr
add
push
sbb
xor
adc
cmp
inc
add
xchg
imul
lea
sub
mov
mov
pushf
dec
repnz
add
push
addb
sub
gs
sarl
loopne
rcrl
push
mov
xchg
pushf
outsb
lret
test
js
sbb
sbb
lods
lea
sbb
gs
xchg
xchg
pop
add
mov
cmp
mov
testb
mov
add
xor
int3
into
lcall
jnp
loop
imul
lds
xor
mov
xor
mov
lods
das
iret
div
outsb
jge
je
shrb
dec
sbb
int
or
enter
cmpsl
cmp
inc
ret
jnp
cmp
lods
dec
lods
pop
aam
adc
loop
pop
fsubl
mov
dec
loopne
push
lea
dec
inc
xor
arpl
fdivrl
mov
push
stos
lds
xlat
jmp
out
pop
ror
push
mov
in
stos
jbe
mov
lahf
cmp
icebp
lret
repnz
dec
mov
mov
add
sub
cmp
or
daa
mov
jo
leave
xchg
mov
jge
xor
and
sarl
inc
inc
pop
mov
xor
xchg
in
xchg
mov
inc
out
pop
pop
incb
jmp
jo
cmp
sub
cmp
inc
mov
out
jo
daa
mov
add
mov
pop
sti
xchg
insb
outsb
call
push
or
xor
andb
dec
pushl
jo
and
rcr
pop
dec
or
iret
mov
pop
mov
std
sbb
adc
xchg
mov
arpl
in
leave
adc
sub
repz
out
push
stos
adc
cmpsb
mov
add
repnz
stc
push
sub
pop
jb
jmp
int3
xchg
in
fsubp
outsb
and
aas
fnstenv
arpl
mov
jnp
or
sub
insb
lds
shrl
add
xor
xchg
push
add
cltd
addl
adc
cmpsb
outsl
rep
xlat
mov
mov
push
pop
int
or
popf
dec
push
and
movsl
mov
inc
jbe
sti
sub
and
add
into
in
dec
inc
loopne
and
mov
ret
pusha
mov
pushf
fwait
jecxz
pop
push
push
aaa
sub
jle
xor
scas
and
movsb
imul
or
pushf
aam
stc
adc
adcl
cld
mov
fsincos
inc
movsb
and
mov
out
fcomi
jno
les
pop
add
add
stc
mov
cmc
and
fs
movsb
jecxz
gs
test
ljmp
mov
insl
lock
cmp
aad
inc
arpl
outsb
cmp
loopne
or
sub
push
sub
lds
and
mov
aam
and
cmp
xor
dec
cmpl
int3
into
xor
ret
xor
in
mov
xchg
sub
jmp
cld
rcrl
or
push
addb
mov
imul
ficoml
pushf
fists
push
mov
std
xchg
cli
jmp
or
sbbb
les
mov
cli
jmp
dec
pop
dec
test
dec
arpl
das
inc
xor
insl
scas
shr
in
adc
pop
rcll
mov
mov
imul
fldenv
push
add
in
xchg
pop
addr16
hlt
jnp
in
data16
cmc
invd
lock
jmp
xchg
movd
cmpb
data16
adc
xchg
pop
std
div
push
out
imul
movl
mov
fwait
mov
bnd
in
scas
sub
aas
stos
sub
js
outsl
testl
das
call
les
xchg
and
lret
cli
xchg
out
sbb
sbb
or
or
ljmp
push
xchg
lret
scas
mov
jno
test
addr16
pop
sbb
jmp
inc
sbb
and
sbbb
cmc
je
leave
lcall
dec
flds
mov
lret
lahf
hlt
loope
js
jl
mov
scas
fs
or
sbb
nop
insb
rclb
leave
mov
add
jecxz
out
fdivrp
push
inc
pop
lds
push
mov
fs
ret
push
push
clts
push
shl
push
mov
sbb
daa
out
xlat
add
in
xorb
push
pop
sbb
data16
cmp
into
sahf
mov
test
sbb
popa
cmp
addr16
ljmp
cmp
movsl
enter
adc
xor
mov
cmp
add
adc
mov
pop
push
fwait
out
push
icebp
popf
xchg
in
sbb
dec
jbe
testb
aas
dec
ljmp
in
adc
mov
mov
mull
jb
and
mov
add
inc
xchg
lods
sub
jmp
xchg
fsubl
mov
clc
xchg
xchg
xor
jns
inc
jae
xor
ljmp
pop
fdivrs
push
das
mov
sub
pop
repz
insb
fcmovb
push
les
add
add
push
lret
int
stos
filds
add
inc
bound
daa
aas
jp
xor
and
ss
jne
inc
add
mov
inc
inc
scas
or
adc
sbb
mov
jo
push
sub
add
adc
negb
es
cwtl
icebp
mov
imul
lock
in
jecxz
pop
inc
pop
out
xchg
mov
mov
cmp
lret
out
adc
pop
xor
hlt
sbb
test
call
push
dec
mov
jecxz
sbb
pusha
jns
movsl
movsl
enter
outsb
pop
mov
push
sti
or
pop
bound
inc
xchg
divl
dec
cltd
xchg
dec
cmp
ss
or
push
sub
hlt
mov
jb
mov
ds
push
or
pop
fwait
or
inc
cmp
cmpsl
stc
pop
inc
xchg
es
fldcw
mov
jb
into
pop
inc
rcrb
inc
icebp
fdivrs
out
cmp
pop
outsb
decl
cmp
fnstsw
xlat
xchg
xchg
cwtl
mov
ljmp
xchg
or
mulb
clc
pop
jge
test
scas
cmc
jge,pn
cmp
ljmp
xchg
int3
sbb
pop
shll
jge
out
rclb
inc
idivb
mov
arpl
vmovntpd
jmp
push
adc
mov
ds
mov
or
mov
lret
shl
in
xchg
lret
mov
loop
out
mov
cltd
cmpsb
stos
fwait
int3
cmp
push
mov
pop
lock
subb
dec
push
lahf
ret
push
into
in
test
lds
loopne
xchg
mov
push
push
fdiv
pushf
fidivrs
inc
cwtl
out
add
push
fists
outsl
push
das
xor
loop
inc
out
aam
inc
insb
xor
stos
sbb
addr16
cmp
mov
inc
xor
scas
inc
add
lds
loop
icebp
cmp
pop
jg
mov
ret
add
mov
adc
pop
xchg
add
imul
mov
or
pop
jbe
and
std
jp
insl
mov
xor
ja
push
sti
mov
out
push
push
lea
mov
fistpll
or
cmp
xchg
aam
stos
pop
inc
mull
jae
pop
inc
fwait
mov
mov
popa
xor
ror
pop
in
lods
or
cmpsb
jmp
lcall
cmp
mov
pop
mov
lds
pop
cltd
mov
adc
adc
sub
pop
pop
adc
sub
shll
dec
insb
or
fistpll
fidivl
mov
idivl
push
pop
pushl
stos
push
jmp
jg,pn
scas
jns
setnp
and
inc
pusha
dec
addb
loopne
jns
fs
cmp
jae
xor
shlb
repz
sbb
ljmp
mov
jg
push
fldenv
push
sub
cwtl
insb
fidivs
icebp
lcallw
mov
pusha
push
cmp
and
mov
test
cmp
pop
call
xor
mov
mov
cli
fisubrs
pop
aas
arpl
pop
cmp
dec
test
push
jns
lahf
gs
sub
int3
mov
or
rcl
pop
mov
fsubs
lds
loope
pop
pusha
in
enter
test
adc
mov
add
push
mov
scas
movsb
xchg
shll
mov
cmp
shll
lahf
jmp
in
icebp
pushf
xor
dec
mov
inc
add
enter
cmp
lea
es
out
out
in
idivb
mov
pop
push
int3
or
push
mov
mov
stos
ljmp
popf
cmp
cltd
push
call
repz
cld
mov
inc
testl
clc
sti
aam
fwait
sub
fs
ret
inc
js
int
mov
add
mov
jmp
test
mov
popf
lcall
xchg
outsl
stc
add
ficompl
ret
xchg
sbb
in
popf
scas
mov
mov
push
sarl
jae
push
fwait
cmp
movsl
or
imul
out
aas
xorl
aad
int
imul
lods
fdivr
setg
push
insb
mov
ret
pop
fsubl
call
xor
mov
sub
or
dec
insb
mov
imul
sub
mov
mov
xchg
dec
stos
jns
mov
std
pop
dec
cmp
and
ret
lcall
and
sub
mov
jne
jg
stc
jnp
imul
sbb
lea
push
fstpt
rol
inc
out
jp
mov
mov
test
jo
inc
outsl
dec
cmovnp
shll
call
sbb
add
js
mov
sbb
iret
arpl
cmp
ret
mov
sub
push
in
outsb
and
in
cwtl
f2xm1
jae
fistpl
icebp
and
cmpsb
jbe
cld
or
pop
sub
mov
imull
lcall
adc
mov
out
pop
adc
or
bound
sbb
inc
inc
push
mov
sub
inc
rcrl
sub
mov
insl
cmpl
rorl
fdivrl
add
dec
in
inc
sub
xor
xchg
jno
cmp
out
jb
push
addr16
daa
lds
pop
pop
into
dec
outsl
jecxz
add
and
jmp
adcb
push
int3
dec
cli
jmp
jne
lret
gs
xchg
mov
mov
and
arpl
mov
xchg
repz
fimull
mov
cmp
pop
cmc
mov
mov
pop
loope
jnp
test
rcl
pop
adc
cmp
add
jmp
in
jmp
add
cmp
sti
mov
and
fs
fstpl
add
xchg
stos
out
outsl
ljmp
cmp
fimuls
jb
bound
xchg
lret
lcall
xchg
std
out
aaa
sbb
push
mov
cld
iret
push
aaa
sti
mov
mov
in
and
mov
cmp
lret
xchg
mov
push
mov
mov
push
mov
dec
mov
jl
and
js
cmp
movsb
pop
lods
xchg
and
lock
iret
xchg
mov
mov
jnp
jle
pop
inc
mov
xchg
das
or
inc
cmp
push
cmp
mov
in
cli
cmp
outsl
fstps
into
xchg
pmulhw
xor
pop
jp
cmp
pop
faddl
mov
insb
out
and
jbe
xorb
popf
inc
jns
and
pushl
sbb
xchg
jnp
enter
add
adc
aaa
fdivs
or
push
sti
or
addb
xchg
inc
aas
xor
inc
outsb
sti
dec
jp
adc
movsl
inc
xor
xchg
subb
test
dec
add
vpunpckhqdq
inc
out
inc
jp
pop
xchg
mov
mov
pop
mov
jle
mov
or
adcb
iret
fistpll
in
les
mov
test
jne
inc
cmp
out
testl
xor
daa
jmp
lods
mov
fcmove
cmp
cwtl
or
js
inc
imulb
push
mov
inc
lea
inc
dec
sar
adc
in
push
insb
pushf
and
adc
fwait
ror
popa
das
ljmp
sbb
dec
mov
jmp
inc
sarl
ljmp
xchg
cli
adc
xor
dec
xor
push
adc
mov
mov
dec
jbe
push
push
nop
scas
ret
popf
ja
lods
push
in
ret
jb
cmp
inc
or
xchg
mov
pop
test
mov
adc
imul
fs
push
push
aad
mov
push
mov
fadds
je
jl
xchg
bound
lret
adc
cmp
or
jnp
jae
js
das
rorb
je
cwtl
int3
mov
test
xchg
adc
jp
or
jg
inc
and
mov
shlb
mov
aam
pop
sbb
movsl
sbb
repnz
or
push
clc
pop
fldl
jbe
mov
je
scas
pop
xchg
push
sub
sbb
bound
out
addr16
ret
mov
mov
mov
insb
test
aaa
push
push
pop
cmp
jecxz
adc
sbb
lods
mov
cmp
xchg
mov
jae
and
push
movsb
fdivrl
inc
add
in
lea
mov
dec
push
xor
mov
mov
popf
out
ja
fcmove
addb
and
aas
cltd
push
loopne
xor
dec
std
sbb
mov
iret
sahf
add
imul
hlt
pop
cmc
inc
sbb
orl
inc
scas
cmp
or
xchg
sbb
mov
ljmp
dec
stos
je
lock
call
aaa
ds
push
mov
aaa
mov
pop
inc
enter
push
ja
icebp
das
xchg
fwait
daa
xchg
adc
sti
ljmp
mov
stos
fisubrl
dec
jg
dec
xchg
mov
jg
nop
add
movsb
mov
jle
mov
jge
push
sahf
add
testl
mov
jne
out
add
push
jge
xchg
mov
sub
mov
fiaddl
and
arpl
push
into
aas
and
lock
enter
jne
ds
cmp
in
out
lret
movsl
jnp
divl
pop
add
add
jae
lahf
adc
popf
fistpll
pop
lahf
in
cltd
cmp
xor
daa
push
fnstenv
and
mov
or
sbb
xlat
jge
das
arpl
dec
repnz
xor
popa
call
test
mov
iret
rorb
jno
pop
out
in
add
insl
fiadds
dec
sahf
mov
test
mov
or
pop
push
push
cmp
mov
lcall
sti
mov
stos
out
imul
or
jle
stos
cmp
fs
je
mov
int
testb
mov
pop
std
sbb
sbb
mov
add
lods
fstp
aad
cwtl
push
push
pop
jmp
mov
xor
mov
lods
leave
in
insl
pop
mov
jp
push
adc
or
xor
mov
mov
cmp
ficoml
repnz
int3
dec
push
shlb
xor
mov
cwtl
in
push
clc
sub
fcmovnb
jb
adc
inc
mov
and
mov
pop
mov
and
call
push
cmpsl
lahf
mov
pop
or
sbb
push
add
mov
movsb
stc
loop
mov
push
outsl
push
mul
leave
mov
std
xchg
jle
adc
sarb
pop
ret
pop
lcall
arpl
mov
jecxz
or
out
pop
add
imul
mov
mov
push
inc
ds
mov
out
fdivrl
aam
mov
popa
pop
fcmove
nop
mov
mov
in
sub
pop
movsb
pop
sub
xor
aas
and
fmuls
mov
mov
xlat
stos
fildll
cltd
insl
aas
stc
mov
sahf
call
jne
imul
leave
test
sub
xor
repz
lock
or
movsl
stos
mov
xchg
jge
inc
push
xchg
cli
adc
jecxz
push
sub
and
mov
fstl
sbb
les
jno
xlat
jb
inc
adc
lret
jle
mov
xchg
out
xchg
arpl
int3
stos
add
mov
call
mov
pushf
pop
jns
mov
cmp
push
mov
and
lds
cld
lahf
mov
out
xchg
mov
sar
aad
and
adc
je
push
cmc
sbb
and
adc
push
in
rcrb
dec
dec
and
mov
das
pop
outsb
subb
test
push
pop
faddl
xchg
cmc
stos
pusha
popf
sbb
notl
jecxz
aaa
or
jp
out
lea
pop
mov
ret
pusha
and
inc
lock
popf
push
std
aas
fstpt
lret
js
pop
fdivrp
mov
pop
add
mov
and
push
push
aaa
or
mov
sub
jp
pavgw
push
jmp
inc
or
push
jl
addr16
lfs
mov
mov
roll
imull
add
addl
insl
jl
je
movl
outsl
add
enter
mov
mov
push
movsl
jns
hlt
cmp
lods
xchg
pop
sub
jns
jns
inc
mov
aad
punpckhdq
sti
mov
aas
outsl
mov
repnz
les
xor
rorl
jno
jae
pop
xor
sti
xor
std
add
xchg
mov
mov
xor
jl
mov
ljmp
push
add
or
jp
cld
and
mov
sbb
cmpb
xor
and
popa
bound
in
xor
push
lods
adc
push
insl
xor
ljmp
jmp
add
icebp
push
push
movsl
add
sbb
xor
js
mov
and
cli
jge
ret
sub
or
dec
mov
ss
jne
cmp
movsb
push
jb
popa
mov
fs
clc
mov
mov
test
cmp
sti
nop
xchg
cld
push
lret
pop
aaa
iret
jl
sub
fwait
pushf
aas
pop
in
dec
pusha
jg
sbb
out
aam
leave
pop
adc
sub
clc
jno
movl
dec
mov
push
cmpsl
daa
hlt
jp
scas
lret
mov
test
push
mov
mov
mov
inc
icebp
imul
bound
leave
jne
loop
repz
xchg
cmpsb
jae
cmp
lea
mov
sbb
insl
inc
testl
push
lock
enter
pushf
mov
es
sub
lret
mov
dec
inc
xchg
dec
rcrl
aam
out
ss
or
push
clc
dec
addr16
jmp
into
aas
inc
adc
dec
cltd
pop
ja
movsb
mov
sbb
rcll
sbb
iret
adc
dec
sbbl
mov
leave
ja
test
inc
push
aam
popf
jne
ja
repnz
in
stos
adc
scas
insl
and
cmp
xchg
mov
inc
mov
cld
je
add
pop
nop
add
fstp
rcrl
fists
lds
sbb
jmp
test
jbe
call
mov
xchg
sbb
out
xchg
and
jg
xchg
rolb
push
icebp
and
je
int3
adc
je
push
loop
clc
repnz
iret
movsl
xchg
xchg
ja
jle
add
and
adc
pop
pop
ret
pop
sti
lret
mov
lret
cmp
jle
insb
jmp
dec
mov
movsb
lds
icebp
mov
fdivl
or
mov
lods
mov
xchg
ljmp
xchg
sahf
popf
iret
addr16
mov
xor
inc
xchg
cmp
adc
sub
in
sarl
inc
jno
add
test
and
mov
and
loopne
pop
pop
insl
movsb
dec
jge
mov
or
out
push
push
push
add
adc
xchg
sbb
je
imul
cltd
je
lret
ret
jbe
pop
js
bound
inc
xor
and
mul
xor
scas
ret
testb
call
iret
cltd
jo
shlb
mov
cltd
xchg
pop
aad
mov
sbb
leave
cwtl
pop
out
push
sbb
push
in
jbe
pop
add
adc
movsl
jbe
pop
aam
addr16
das
jne
xor
fistpll
ret
jbe
mov
jae
lret
es
rcrb
out
out
jp
xor
addr16
cmp
pop
jbe
rcrl
arpl
push
pop
xor
sahf
dec
in
jne
fcoms
jnp
dec
or
sub
stos
mov
mov
neg
arpl
or
ss
dec
adc
sbb
ds
sub
mov
pop
in
cmpsb
insb
scas
andb
inc
sti
mov
icebp
xchg
sub
mov
mov
and
mov
shr
mov
lret
test
xor
dec
orb
push
mov
adc
loop
push
je
scas
mov
testl
jl
sahf
inc
and
lock
mov
scas
iret
push
loopne
movsb
dec
or
call
and
daa
mov
sub
sti
sbb
pop
negb
xchg
or
mov
push
mov
fucomi
aas
sub
inc
in
inc
push
pop
imul
lcall
xchg
inc
lds
dec
out
and
and
push
push
add
jne
mov
and
gs
lods
stc
cmpsl
rol
mov
sub
aam
test
neg
push
addl
pop
xchg
mov
mov
pop
out
dec
je
inc
cmp
pop
adc
popa
xor
sar
imul
in
mov
imul
dec
mov
clc
pop
mov
test
popa
shlb
aam
jae
popf
mov
cli
out
pop
icebp
scas
out
and
adc
dec
fcompl
jb
adc
jnp
pop
fidivrl
out
xor
push
mov
rorb
add
cli
sub
insb
mov
cmp
pop
xor
test
les
shll
push
mov
pop
cs
sbb
testb
sub
add
imul
ret
std
fwait
lea
or
sar
xchg
repnz
leave
pop
je
mov
inc
fs
jnp
nop
cwtl
test
or
into
xchg
cmp
jne
xchg
push
aam
xor
xchg
lahf
call
out
lds
mov
and
jns
dec
mov
cltd
lds
sti
rcrb
lods
stos
push
jp
pop
push
lds
xor
mov
out
out
sub
test
add
push
and
mov
enter
adc
mov
sbbl
arpl
je
push
inc
iret
addl
push
dec
mov
xor
insb
int3
adcb
ret
pushf
mov
cli
lea
adc
movsb
jg
rol
arpl
repz
inc
lahf
and
ljmp
rorl
scas
pop
jmp
push
in
repnz
fimull
mov
jp
in
fisttps
cmp
push
mov
adc
mov
adc
adc
sub
es
xor
mov
ficomps
jmp
test
adc
insl
cltd
out
outsb
shl
mov
mov
fwait
outsl
adc
inc
and
mov
subb
cmpsb
cmp
mov
or
or
cmp
inc
add
push
stos
pusha
push
cmpsb
addr16
mov
pop
sti
repz
mov
push
orl
mov
adc
data16
jno
fptan
pop
pop
and
inc
pop
pop
and
adc
loop
mov
bound
ja
in
cwtl
jmp
push
jg
es
in
sbb
fwait
movsb
pop
xlat
bound
mov
push
in
test
add
inc
cmp
mov
and
rol
out
push
stos
ds
mov
test
int
pushf
pop
push
stos
cs
mov
in
inc
fnsave
xlat
lds
call
or
ficomps
pushf
and
leave
sub
mov
inc
jmp
cmovo
lea
mov
lods
insl
mov
movb
leave
fimuls
test
scas
je
lea
pop
mov
mov
popa
in
inc
or
pusha
nop
jge
add
cmp
sbb
test
jns
adc
and
dec
mov
cltd
cld
cmp
call
pop
xchg
lret
jecxz
enter
xchg
scas
ds
loope
xchg
mov
stc
cltd
rorb
push
sbb
inc
lahf
push
pop
jns
adc
dec
int
in
jbe
mov
ds
mov
je
es
xchg
mov
ret
cmp
repnz
sub
adc
and
mov
rcr
sti
mov
push
or
dec
incb
stos
and
dec
out
inc
mov
dec
xchg
mov
push
movsb
scas
jbe
lcall
push
lcall
jnp
fstl
leave
imul
cmp
outsb
gs
dec
jb
or
mov
out
pop
or
out
jmp
jle
push
in
sbb
jp
mov
lods
call
pop
insl
jmp
fs
sub
mov
mov
cmc
ja
xchg
sbb
fimull
addr16
mov
lret
jns
or
daa
jo
in
je
mov
inc
push
mov
rclb
sub
insl
adc
push
and
pop
cmp
mov
orb
andnps
push
aam
mov
pop
sldt
sub
shrl
dec
into
jg
and
sbb
xchg
jnp
dec
mov
xor
movsl
out
jmp
test
push
xor
xlat
push
scas
int
scas
ficoms
rorl
lock
insb
test
mov
xchg
nop
pop
dec
and
adcl
push
xchg
pop
stos
cs
mov
inc
mov
hlt
leave
cs
pop
loopne
fimull
cltd
xchg
icebp
xchg
pushl
mov
adc
jg
orl
mov
in
test
ds
dec
xor
mov
jmp
and
icebp
fistl
jp
jns
xchg
mov
lods
jp
shr
shr
inc
jne
mov
add
outsb
and
mov
lock
lock
xor
pop
inc
xor
dec
mov
sub
out
and
das
mov
out
shlb
xor
lret
jne
mov
movsl
mov
lods
dec
pop
stos
loop
inc
data16
aaa
stc
enter
call
enter
xchg
jo
repnz
and
sahf
std
sbb
lods
mov
rcrb
dec
aam
sub
bound
lcall
or
inc
jae
pop
jle
ret
nop
ret
mov
call
in
addb
popa
mov
je
xor
lods
ret
jge
mov
inc
icebp
ds
fs
js
pop
sbb
xor
mov
add
cmp
inc
cltd
test
mov
je
xor
test
or
test
jecxz
or
stos
ficoml
and
sti
cli
aad
pop
jae
lea
and
mov
mov
aad
insl
xor
add
mov
gs
mov
fs
das
cmpsb
sbb
dec
and
xor
jbe
dec
mov
xor
mov
xchg
test
or
dec
es
inc
int
or
adc
push
nop
idivl
push
test
sbb
lock
into
jecxz
add
fisttpll
shr
cwtl
daa
push
mov
lret
push
enter
jne
pop
dec
cmpsb
and
xor
sbb
lods
add
insl
imul
test
jle
pop
dec
mov
adc
shrl
add
xchg
xchg
add
hlt
movsl
jo
mov
and
sarb
jnp
mov
sbbb
clc
add
fwait
in
mov
mov
mov
lret
out
mov
cltd
pop
mov
test
ret
pop
sbb
addb
out
jle
jp
test
iret
decb
xchg
sub
repz
push
and
or
mov
push
ss
xchg
arpl
into
or
xor
inc
lods
vpackuswb
push
or
loopne
rolb
xor
les
push
bound
pushf
sbb
push
jecxz
jae
sub
in
aam
cwtl
mov
jg
cmp
mov
adc
in
xchg
pop
push
pop
adc
or
hlt
sub
fwait
dec
sbb
mov
das
sbb
adc
test
pop
lods
pop
popf
cmpsl
jae
test
mov
addr16
int3
dec
xchg
add
xchg
ror
mov
data16
test
cmpsl
mov
into
sbb
mov
pop
ljmp
mov
fwait
pop
adc
fildll
addl
mov
ja
ss
cmp
mov
stos
xchg
mov
adc
pop
lods
pop
out
push
imul
sahf
sbb
xchg
xchg
sbb
ret
dec
sbb
mov
sbb
jmp
and
jge
sbb
shrl
gs
pop
mov
faddp
cli
mov
fdivrl
les
and
push
pop
push
addr16
jb
in
aad
nop
loop
mov
or
xchg
and
mov
imul
call
lret
inc
mulb
and
jnp
repz
sbb
lcall
dec
mov
xor
iret
fiaddl
add
mov
push
js
mov
ds
sub
mov
mov
xor
iret
xchg
or
pop
test
pop
lret
pop
jg
pop
sub
mov
sub
xchg
sbb
sbb
int
clc
mov
jmp
in
nop
inc
ret
inc
mov
int3
out
je
cltd
pusha
pop
leave
jae
out
shlb
pop
or
pop
pop
ret
or
fists
shll
cmp
mov
int3
jb
dec
das
mov
mov
addl
lods
add
add
inc
in
fsubrl
jp
std
testl
push
sbb
xor
inc
popa
popf
scas
repz
orl
in
push
inc
push
imul
inc
and
call
shl
and
mov
daa
sbb
mov
push
jmp
lcall
sub
adc
sbb
cli
call
xchg
cmp
lahf
mov
sbb
leave
sub
insl
outsl
xchg
or
cmp
fdivrs
test
xchg
or
pop
cld
inc
pop
push
pop
inc
cltd
mov
loop
fsubp
xchg
addl
push
imul
sub
jns
add
mov
popf
mov
addr16
fwait
fwait
repz
je
int
mov
fiaddl
fimuls
mov
in
cmp
ds
sbb
negl
call
mov
outsl
dec
or
int
decb
cmpl
sub
jmp
insb
outsl
jmp
ljmp
hlt
mov
sub
adcb
je
test
or
cld
ja
xchg
dec
stos
push
fs
ds
imul
repnz
or
mov
hlt
jp
mov
imulb
cltd
push
xchg
pop
mov
adc
dec
mov
xor
xchg
jae
adc
sbb
adc
aaa
cmp
inc
push
sarl
dec
out
out
mov
test
jge
into
jmp
lods
rcl
sbb
flds
shrl
jae
mov
call
bound
sbb
sbbl
cmpsl
scas
mov
popa
mov
leave
lcall
in
mov
xchg
or
repz
sub
mov
outsb
xor
nop
and
sub
push
pop
pop
mov
rolb
mov
pop
fistl
gs
jle
xor
pusha
push
xor
xchg
mov
fsubrs
std
in
jmp
mov
sbb
inc
roll
push
movsl
lds
enter
mov
mov
mov
sub
mov
movsl
pop
dec
and
lods
xchg
cmp
push
or
mov
jp
pop
int3
and
xlat
jecxz
jne
bound
xor
push
adc
rcrb
rcr
in
stos
in
sbb
sbb
iret
insb
js
or
mov
add
nop
les
ss
daa
int
movsl
in
xchg
dec
jne
fmull
call
xor
sbb
adc
cmp
xchg
push
jae
pop
jle
mov
mov
ret
cmp
mov
dec
cmc
dec
and
js
add
lahf
cmc
add
mov
lods
and
inc
xor
movsl
shrb
xor
insb
push
sbb
out
push
jo
mov
int
movsb
imul
mov
fildll
cmpb
shlb
or
data16
dec
jl
or
sbb
lods
mov
jl
push
push
dec
inc
ja
mov
push
sub
xchg
sub
les
mov
jmp
insl
fs
pushf
mov
cld
ja
scas
push
sub
test
aas
sbb
xor
cmp
cmp
out
popw
xor
mov
and
stos
inc
mov
int3
jne
repnz
jecxz
cli
es
sbb
icebp
daa
push
lods
std
cmpsl
jmp
pop
cld
add
loope
bound
stc
ja
insb
and
sbb
push
push
inc
sub
jle
mov
cltd
mov
push
imul
sti
outsb
loopne
xchg
sub
add
fdivrp
adc
dec
hlt
dec
es
jmp
flds
push
or
jmp
sar
dec
xorl
jae
xchg
icebp
sub
dec
fldcw
mov
dec
cmpsl
mov
jle
outsb
clc
add
xchg
mov
mov
pop
sbb
pop
scas
movsl
addb
mov
lods
in
mov
and
push
popf
aas
movsb
adc
sbb
inc
int3
in
outsl
xor
int
add
or
mov
pop
call
test
mov
sub
cld
sub
in
mov
sub
cmc
xor
sti
add
call
js
stc
lods
cmp
hlt
notl
popf
and
adc
jb
or
push
sub
jecxz
andps
pop
dec
jle
mov
out
std
js
dec
jno
cltd
pop
xor
jns
ficompl
adc
fs
pop
mov
xchg
lds
aad
stc
xchg
mov
or
push
xor
jns
pushf
ds
fistl
out
jle
jmp
mov
mov
dec
jae
mov
fwait
inc
rorb
leave
cmpsb
add
sbb
nop
cmpsb
lods
lea
and
pop
testl
sbb
mov
int3
addr16
ljmp
mov
mov
cmc
cmp
into
testl
loopne
or
push
fsubrs
xchg
push
cmp
enter
jo
in
fists
shr
xor
mov
mov
jae
leave
inc
outsb
sahf
sub
add
shrl
mov
dec
mov
test
pushf
mov
dec
inc
rolb
adc
push
adc
outsb
loopne
xor
mov
adc
push
cs
aas
scas
in
cmpsl
bound
lea
mov
pop
mov
movsl
sbb
mov
cmpsb
out
popf
jle
adc
or
mov
cmpsb
cli
push
test
imul
xor
push
das
inc
pmulhuw
int3
shrd
mov
and
mov
and
mov
imul
add
jecxz
sub
jbe
lds
push
xchg
rcll
push
icebp
sub
lods
and
or
adc
jmp
push
dec
pop
mov
call
ss
mov
mov
adc
sti
cmpsb
insb
mov
xor
add
and
dec
jnp
dec
fisubrs
out
cmp
ja
jb
push
iret
and
cmp
fs
iret
mov
lock
and
inc
data16
mov
mov
mov
insl
pusha
clc
inc
mov
pop
xor
push
pop
lea
xlat
xor
repnz
jns
cmp
sub
lret
jmp
jecxz
jg
add
cmpsl
lret
adcb
jmp
sub
pop
mov
mov
fnstcw
int3
push
pop
cltd
xchg
insl
cs
jg
fisubl
movsl
add
mov
jmp
nop
xchg
lock
push
jmp
popf
pusha
pop
int3
mov
das
pop
pop
scas
std
outsl
xchg
out
inc
push
add
adc
popa
mov
cmpsl
pop
xor
cmp
lds
ret
xchg
inc
or
lahf
push
and
xorb
addr16
mov
lret
sbb
nop
ljmp
mov
sbb
sub
test
sti
int
push
and
add
xor
mov
faddl
pop
adc
pop
jb
stos
add
cmp
cmp
shrb
shrl
idivl
outsb
leave
jnp
les
mov
pusha
repz
xor
or
mov
sbb
inc
jge
cli
nop
sbb
push
dec
xchg
andl
das
ss
pop
ret
jnp
adc
and
mov
inc
pop
lds
out
push
xlat
mov
xchg
loope
jbe
inc
jmp
dec
fdivs
ret
and
inc
mov
dec
addr16
test
xor
inc
ror
add
cmc
dec
add
ss
adc
int3
mov
aas
mov
jge
mov
fbstp
dec
push
lret
lret
fimull
in
sub
jnp
pop
or
push
ret
xchg
sub
out
out
js
jp
xor
adc
push
js
repz
outsb
lret
pop
test
pop
rcr
data16
aaa
mov
jo
into
fiadds
xchg
and
xchg
in
mov
inc
or
pusha
pop
hlt
stc
addb
gs
or
gs
sbb
sbbl
mov
pop
ds
mov
mov
push
inc
fiadds
xchg
xchg
mov
cs
jmp
sbbl
fidivrs
adc
cld
cmc
or
jb
lock
cmp
les
xchg
das
inc
mov
enter
push
scas
fisttpl
pop
xchg
icebp
repnz
rorb
mov
mov
jns
and
pushf
fwait
mov
mov
clc
mov
mov
lret
jecxz
xchg
pop
push
roll
movsl
in
clc
dec
pop
cmp
imul
mov
and
mov
xchg
sub
mov
jp
fiaddl
xchg
push
push
int3
mov
in
icebp
movsl
xchg
inc
pop
ljmp
sarb
adc
inc
adc
bound
jecxz
je
lods
idiv
aas
cmpsl
arpl
sarb
iret
andb
lds
jae
sbb
jle
leave
sbb
mov
cmc
mov
shll
cwtl
sbb
int
mov
mov
mov
sub
jae
xchg
xor
xor
mov
shrl
inc
ret
dec
push
aaa
push
loope
push
push
in
das
jns
arpl
cmp
das
or
test
pop
inc
into
dec
and
sbbl
xchg
sbb
subl
loop
imull
mov
xor
mov
iret
pop
and
nop
push
push
sbb
mov
dec
push
mov
fidivs
das
cmp
lcall
pop
fsts
jmp
cs
or
push
repnz
sub
test
sub
push
lea
std
xor
movsb
jmp
mov
sub
jns
push
adc
lret
les
xchg
cmpsl
pop
push
push
inc
pop
movsl
rorl
push
pop
and
enter
dec
inc
cmp
mov
ds
repz
cmp
add
add
cs
add
imul
pop
lcall
xchg
test
or
xor
adc
xchg
push
test
mov
xchg
shrl
aas
sub
and
add
mov
inc
iret
je
ret
jp
dec
cmp
test
jbe
dec
push
jl
in
pusha
mov
jle
and
jno
cmc
sbb
mov
or
cld
cwtl
cmp
push
inc
std
ret
leave
andl
in
or
lahf
mov
xchg
xchg
inc
loop
enter
shll
adc
mov
mov
sub
and
fstl
add
xchg
cltd
lods
inc
inc
inc
jecxz
cli
ror
dec
cld
imul
out
or
mov
dec
jecxz
lahf
sub
and
mov
es
xor
xor
mov
insb
or
pop
gs
ljmp
xor
mov
mov
lret
ja
stos
push
adc
push
xchg
ss
mov
imul
js
sbb
jle
sub
xchg
adc
push
mov
fldenv
push
inc
ss
je
mov
xor
jne
pop
push
mov
ljmp
shlb
daa
lret
push
xchg
cwtl
sti
fsubrs
lahf
dec
xchg
cmp
popf
xor
es
cmp
pop
cld
push
test
jo
aaa
outsl
mov
insl
cmp
fwait
int3
sub
outsl
push
popf
and
mov
mov
into
sbb
jp
mov
cltd
scas
add
xor
mov
mov
scas
aad
mov
push
ret
jo
push
add
lods
cmpl
cmp
mov
jge
cmp
test
out
mov
test
outsl
adc
mov
sahf
lcall
jne
mulb
xor
pop
rolb
jnp
lock
inc
push
jp
aam
sbbl
push
xchg
push
or
xchg
call
les
repz
jmp
dec
mov
mov
inc
sbb
outsl
int
shrb
mov
jne
dec
cmpsb
cmp
jmp
pop
insb
cmp
xchg
jne
or
push
rcrl
or
test
pop
addb
adc
xor
xor
in
rcll
inc
into
push
inc
scas
cwtl
cmp
sbb
mov
pop
test
lret
fdivs
cmpsb
sbb
in
lods
dec
or
xor
jae
orb
and
xlat
adc
push
mov
aas
inc
popa
aam
mov
jge
pop
loope
fistpll
push
insl
outsl
lock
or
add
jecxz
push
sbb
std
cwtl
or
mov
cli
inc
loopne
subb
cmp
mov
imul
test
add
rorb
jmp
in
aam
addr16
out
cmp
dec
test
leave
dec
push
add
dec
test
rcr
hlt
pop
jbe
cli
cmp
stos
jge
jo
adc
pop
push
mov
push
jne
jb,pt
pop
add
jns
and
pop
lcall
cs
insl
jae
xchg
cmp
ja
sub
fmul
fisubrl
into
mov
lret
dec
xor
push
lahf
adc
pop
fistl
adc
mov
cmpsb
jl
pop
ss
cli
ja
jge
iret
ds
sub
in
pop
ret
fwait
dec
mov
loopne
test
data16
xor
ret
decl
iret
outsb
add
sbbb
and
and
mov
xchg
jo
push
or
push
rcrb
pop
stos
adc
jno
pop
mov
and
and
xor
jno
xchg
mov
fdivs
or
imul
popa
sbb
icebp
cmp
or
fisubs
cltd
lods
jmp
and
push
jns
dec
sbb
and
sbb
shlb
stc
shll
mov
push
pop
int
jae
mov
test
or
insl
jbe
pop
mov
and
xor
jl
xchg
lods
scas
js
inc
enter
cwtl
loopne
imul
lret
loopne
cmp
je
push
shrb
bound
sub
fildll
dec
loop
cmc
pop
cs
out
inc
stc
outsb
push
fs
in
lret
lea
cmp
sbb
movsb
loope
jno
pusha
push
jmp
rorl
ljmp
and
fmul
mov
fists
mov
test
hlt
lea
cltd
xchg
fcmovb
outsl
jbe
insl
pop
lds
or
std
lds
ss
mov
push
fldl
xchg
sub
stc
push
sub
nop
cmp
ljmp
and
or
jne
jge
insb
cmp
daa
fwait
xor
and
nop
sbb
push
popf
dec
jo
xchg
cmc
repnz
sbb
and
or
mov
repnz
lock
stos
mov
cli
mov
stos
adc
shrl
ja
jae
lsl
pushf
loope
aam
decb
in
fistps
sbb
or
and
add
aaa
mov
mov
orl
xlat
add
adc
inc
arpl
xchg
std
push
mov
jl
lds
scas
and
xor
xor
push
pcmpgtd
sti
mov
rcrb
sti
or
xchg
cwtl
xchg
xchg
xchg
add
xor
aas
xchg
xor
mov
int3
cmpsl
cs
ja
pop
aaa
jne
mov
jg
add
notb
out
mov
xor
mov
push
test
jl
adc
cltd
push
xchg
mov
nop
addr16
sbb
fmul
popf
xchg
add
mov
in
in
iret
cmp
cmc
cmp
ficomps
leave
fsubrs
xor
enter
adc
icebp
pop
mov
xchg
rolb
cwtl
lods
pop
stos
notb
xchg
pop
mov
jae
inc
cmp
pop
push
sahf
cmp
inc
icebp
pop
xchg
adc
ss
addr16
ret
xchg
les
mov
mov
xorl
das
push
fimuls
mov
lahf
pop
push
stos
inc
sbb
pop
jae
jecxz
sbb
jmp
gs
sbb
aas
inc
lea
xchg
pushf
dec
hlt
mov
es
sbb
mov
movsl
add
out
or
xchg
insl
cwtl
out
outsl
xchg
mov
inc
js
in
cmpsl
sti
mov
dec
shl
mov
adc
push
loopne
dec
in
pushf
pop
hlt
adc
jp
loopne
in
adc
out
psubw
aam
xchg
icebp
fiadds
shll
aad
xchg
sahf
mov
fsubs
stos
mov
ret
cmpl
sbb
stos
enter
inc
andb
loopne
push
data16
mov
sahf
lods
xchg
stos
fdivrs
sbb
mov
int
gs
push
fisttps
and
icebp
dec
roll
mov
xchg
popa
cmp
cmpl
lcall
mov
sub
sub
mov
arpl
push
clc
mov
and
movsb
sbb
enter
mov
push
dec
call
add
fidivs
lea
inc
and
out
inc
inc
inc
cmp
xchg
adc
and
aam
push
cmp
sub
cmpsb
xor
rorl
test
lods
loopne
bound
jmp
sbb
dec
dec
mov
sbb
rolb
into
push
sub
dec
or
push
dec
mov
pushf
fidivrs
xlat
cmpsl
into
inc
outsl
arpl
cmp
pop
ds
cltd
push
xor
clc
mov
or
add
jae
lahf
outsb
aad
dec
lahf
addr16
movsb
inc
mov
incb
xlat
push
sub
xchg
roll
dec
mov
and
cmp
lds
push
pop
ja
push
jb
xadd
not
icebp
idivb
push
inc
pop
lods
lret
aas
pop
push
cmp
or
imull
xor
pop
and
loopne
sbb
cltd
and
push
pop
fists
cmp
xchg
pushf
test
enter
movsl
les
mov
sbb
aad
jecxz
pop
sbb
xchg
xor
jmp
cmp
jge
cmp
inc
adc
out
imul
ljmp
or
or
or
fmull
nop
ss
mov
jbe
les
mov
mov
dec
lret
lods
sbb
sub
xchg
aaa
mov
push
lock
pop
pop
ljmp
sbb
or
sti
insl
cmp
push
jge
adc
push
outsb
dec
dec
popa
gs
inc
pop
mov
pusha
movsl
lret
lods
iret
jae
jle
mov
pusha
jmp
xor
das
insb
and
pop
andl
inc
or
fs
mov
mov
inc
add
and
test
jge
cmp
jmp
fcomip
ss
sar
sub
sub
mov
stos
mov
dec
cmp
je
std
inc
mov
adc
decl
cmpsb
filds
cmp
mov
repz
cmp
daa
jl
or
hlt
pop
popa
push
data16
sub
or
ja
xor
in
pop
mov
adc
pop
sub
pop
xor
sub
pop
lea
pop
fwait
cmp
dec
adcl
mov
cmp
mov
mov
mov
cmp
int3
andl
outsl
nop
ljmp
or
shr
xchg
frstor
ret
cli
push
mov
jp
mov
addr16
add
cli
stos
je
xchg
inc
insb
shrl
dec
xlat
je
mov
imul
nop
mov
mov
mov
fstpl
sbb
adc
xor
mov
aam
push
adc
frstor
shl
mov
add
iret
adc
mov
or
add
pushf
lahf
rolb
or
inc
cmc
jo
or
jns
dec
inc
dec
pop
push
mov
std
xchg
sbb
adc
push
sub
xchg
mov
or
mov
cmpsb
lods
inc
mov
xor
mov
popa
popf
xchg
ljmp
clc
sbb
lock
jp
xlat
outsb
adc
mov
test
mov
imulb
mov
mov
mov
xchg
push
aam
filds
xchg
push
xorps
imul
ds
icebp
mov
pop
sahf
add
mov
push
sbb
cmpl
pop
pop
push
sbb
sub
push
int3
inc
and
fidivrs
or
repz
fwait
mov
das
sub
orl
fmull
xchg
ret
leave
cmp
lret
sbb
repnz
lods
cmp
aas
xor
lret
xchg
and
out
add
jns
pop
orl
mov
pop
js
stc
mov
aam
clc
int3
out
add
sbbl
fwait
ret
xchg
xchg
bound
jbe
mov
ret
lods
insb
pop
mov
das
xchg
mov
lds
lock
and
ret
or
push
shr
xor
ret
mov
and
mov
cwtl
bsf
in
push
pop
or
mov
pop
sub
xchg
loop
aam
popa
mov
lret
xlat
pop
hlt
mov
jo
rorl
jnp
rcl
add
out
pop
inc
mov
xor
outsb
icebp
push
test
mov
add
inc
outsb
add
aas
scas
xchg
mov
jb
outsb
push
or
leave
mov
mov
pop
imul
shll
cmc
ja
out
or
test
outsb
jle
push
xchg
and
loope
jne
adc
lock
push
lods
xchg
fldl
and
cmpb
fcmovb
fcomip
in
lock
stc
dec
sti
push
lea
and
pop
aad
cmp
data16
shrl
jecxz
gs
push
inc
inc
pop
xor
fmull
dec
mull
or
xlat
mov
dec
fidivrl
pop
cmc
fcompl
aam
and
enter
stos
ds
cltd
sbb
lret
sahf
lds
adc
or
pop
lods
dec
dec
dec
in
mov
xor
adcl
lahf
mov
cwtl
in
into
inc
and
loop
inc
adc
push
stos
outsb
or
push
ss
adc
cmp
movsb
dec
ss
mov
roll
jecxz
dec
xchg
lods
out
aam
stos
pop
test
sbb
jp
out
jle
dec
sbb
pushf
bswap
jns
xor
cmp
xor
out
pop
xchg
adc
iret
cwtl
xchg
dec
or
pop
xor
pushf
gs
dec
mov
dec
loope
cwtl
ret
in
jb
lds
roll
sti
adc
jp
adc
xchg
je
xor
sub
xchg
push
push
inc
loopne
jmp
scas
jnp
mov
mov
xor
sti
pop
push
fsubr
lret
xchg
jge
inc
xor
xchg
fcom
pop
jecxz
and
insl
xchg
jg
add
mov
js
das
add
and
mov
movsl
popa
jns
out
push
movlps
mov
aam
in
imul
aad
adc
xchg
push
call
loop
pushf
stos
ficompl
scas
lds
roll
add
enter
xchg
jns
stos
call
inc
mov
inc
movsl
scas
sbb
push
movb
or
sbb
dec
movsl
inc
adc
xor
pushf
cmp
sub
mov
out
jae
std
popa
mov
push
dec
lds
pop
fistps
into
inc
sub
stos
fldenv
ret
aam
xor
loope
or
cmp
sbb
cmp
sub
adc
add
inc
jnp
movsl
cs
mov
arpl
inc
stos
lcall
aaa
xor
mov
xchg
cld
mov
jmp
mov
ret
xchg
lcall
add
sub
clc
mov
mov
sbb
in
mov
dec
in
push
xor
push
test
cmp
dec
or
cli
lahf
cli
lock
movsl
mov
icebp
daa
jp
pop
inc
shll
pop
adcw
popf
cmpsb
fiadds
negb
shl
mov
ret
popf
adcb
out
pop
sbb
mov
lret
into
icebp
or
or
jg
mov
fsub
inc
xchg
cmp
dec
loope
jmp
mov
dec
xchg
pop
jns
and
jo
neg
mov
stc
mov
xor
and
stos
add
cltd
lret
daa
std
jge
rorb
lcall
dec
xchg
mov
adc
fisttpl
jge
les
rcll
std
ret
pop
jns
divl
push
dec
fwait
mov
testl
lea
xor
fldt
daa
cmp
out
and
pushl
loope
out
jae
ljmp
jle
dec
mov
and
inc
jl
ficoml
sbb
jne
jns
push
mov
push
inc
inc
jecxz
int
sbb
dec
push
jl
xor
dec
lret
ret
sarb
jge
xor
es
shlb
cltd
or
jl
xchg
lcall
xchg
cli
lgs
inc
cmp
mov
push
inc
mov
test
ret
loope
lret
inc
add
xchg
jb
clc
mov
adc
leave
push
jecxz
jl
mov
mov
inc
mov
nop
cmpsl
dec
and
fiadds
jne
cltd
xor
scas
and
in
nop
or
stos
mov
jp
inc
subl
test
mov
stos
push
filds
sbb
fistpll
lods
adc
cmpsl
jecxz
adcb
xchg
sbb
leave
cmp
cmovp
arpl
addr16
test
sti
cmpsw
xchg
mov
call
and
sbb
shlb
fs
push
dec
push
into
lea
outsb
out
jb
sub
lcall
mov
xor
xor
inc
mov
add
xlat
jbe
sbb
movsl
lcall
bound
xchg
and
adc
neg
lahf
cmpsl
idivb
xorl
pop
dec
mov
or
and
andl
and
mov
jl
xor
out
ljmp
andl
jnp
repz
pop
test
mov
stos
ror
sbb
arpl
or
sbb
loopne
lea
pop
jle
push
cmp
mov
jae
addr16
out
mov
mov
mov
inc
dec
test
cmp
stos
push
stos
xchg
fistpll
imul
cmp
and
pop
jno
jle
inc
lea
and
and
cltd
outsl
lcall
loope
or
pop
sarb
cmp
rcrl
and
and
sub
jge
or
in
cmp
mov
and
or
cmp
pop
lret
movsl
test
rcll
scas
xor
aam
fdiv
sarb
and
imul
xchg
frstor
pop
mov
xchg
jnp
dec
jo
mov
bound
pop
pop
mov
jnp
scas
push
cs
cmp
popf
xor
sbb
sti
push
sub
leave
cmpsl
add
pop
lods
popf
jae
call
and
push
enter
adc
sub
adc
shlb
jp
inc
push
sub
repz
pushf
jl
out
mov
dec
jbe
push
jp
jae
push
out
sub
mov
clc
xorb
lods
jecxz
insb
mov
push
testl
test
and
ret
movsl
cwtl
scas
mov
movsl
sti
pxor
adc
sub
aaa
jo
sbb
out
add
in
xchg
sbb
mov
mov
rclb
or
cli
mov
xchg
sahf
inc
adc
std
dec
mov
scas
scas
xchg
mov
ljmp
xor
inc
sar
cmpb
fsubl
mov
add
xor
pop
mov
loopne
test
and
dec
dec
fisubl
inc
scas
push
sti
pop
and
xor
push
xor
rclb
imul
lcall
dec
nop
lret
push
das
or
out
jbe
imul
data16
inc
jb
cltd
push
adc
inc
decl
xor
movsb
cmpsb
xor
jnp
cli
cmp
popf
loop
loop
xchg
push
in
js
popa
aaa
sbb
mov
xor
outsb
movsb
lods
and
add
fwait
sub
adc
aad
frstor
outsl
fsub
ret
int
popf
bound
mov
or
mov
mov
mov
notb
adc
and
inc
stc
mov
mov
sbb
loopne
mov
popa
pop
sbb
hlt
daa
fwait
and
add
and
add
add
inc
sbb
xchg
std
push
popf
lea
pop
stc
dec
das
ds
pop
add
lret
ffree
pop
test
fistpl
shll
mov
lods
fidivl
aad
xor
push
lock
inc
and
stos
outsl
lea
sti
sub
arpl
in
frstor
testl
rcrl
mov
cmpsb
jo
jbe
and
cli
cmp
rolb
popf
and
outsl
pop
lea
xor
dec
divb
aaa
xchg
xchg
sbb
and
out
push
in
out
lahf
jl
sarl
jl
test
adcb
movsl
jb
lret
dec
stos
mov
not
and
lods
jno
fs
daa
mov
add
and
or
aaa
mov
inc
sub
dec
or
andb
pop
psubusb
sub
adc
mov
jmp
mov
outsl
daa
fwait
dec
bound
mov
sub
fdiv
or
pop
add
pop
mov
xor
sahf
inc
add
cltd
ljmp
adc
dec
cmpl
inc
lea
xchg
sarb
push
shl
adc
loop
dec
push
and
sbb
sub
mov
xchg
sub
mov
jns
sbb
xor
pop
and
cwtl
mov
and
jno
mov
jo
jae
xor
js
fs
dec
adc
fdivl
int3
inc
push
scas
xor
and
jb
mov
sbb
push
xchg
loop
fwait
and
lcall
cmp
dec
inc
push
jmp
mov
jae
mov
add
mov
int3
sbb
sub
out
sahf
add
push
bound
cmc
stc
lcall
and
pop
inc
jge
dec
popa
push
std
sub
jp
mov
sub
jmp
lahf
std
add
xor
mov
xchg
mov
pop
arpl
mov
into
lods
cmpsl
mov
dec
xor
rcrl
movzwl
call
and
shll
dec
cmp
mov
aas
sub
dec
fisubl
ja
xor
test
xor
loop
sti
mov
mov
sti
ds
divb
inc
jns
pop
popa
jge
mov
sub
pop
push
dec
lods
or
mov
js
inc
xchg
lcall
jnp
lods
sub
mov
orl
adc
inc
xchg
push
or
mov
leave
sbb
add
jmp
xchg
hlt
jbe
enter
test
mov
pop
movsl
pop
mov
lahf
xchg
ja
call
das
insl
fdivrl
inc
call
out
ja
mov
mov
pop
scas
js
scas
push
and
loop
xchg
xchg
imul
test
inc
add
cmp
fbld
push
pop
js
cltd
mov
lods
loopne
cmp
mov
test
fst
push
xor
xor
out
xor
call
cmpsl
xchg
lock
loop
pop
mov
ljmp
enter
add
lret
mov
in
test
lcall
xchg
addr16
jp
inc
lock
fwait
mov
mov
cwtl
sub
lret
push
fwait
inc
or
out
inc
ret
movsb
sub
inc
sbb
pop
rol
and
data16
and
fnstsw
xor
sbb
test
pop
dec
arpl
xchg
sbb
loope
movsl
shrb
inc
lods
rcl
push
or
sbb
dec
jmp
mov
adc
sti
push
xor
push
bsr
xchg
sti
push
sub
out
pop
mov
pop
loopne
cs
test
pop
das
cmp
jle
fmul
jl
mov
lcall
and
sbb
cltd
loope
xor
mov
sub
mov
adcb
jne
mov
ret
enter
cmpsb
sub
das
sbb
rcrl
gs
jno
or
jge
or
pop
pop
mov
sub
les
decb
in
iret
lods
hlt
shrb
lret
push
xor
hlt
cwtl
dec
lds
cli
and
cs
and
test
insb
je
shll
xchg
out
cmp
mov
push
sbbb
mov
ret
imulb
mov
aad
popa
movsl
testb
loope
jnp
rcrl
sub
lods
pop
scas
fcomps
mulb
popf
sub
pushf
jmp
cmp
fnstenv
imul
jg
es
sarl
sub
push
pop
pop
or
mov
sbb
adc
icebp
or
cli
std
rorb
stc
ret
sti
xchg
lods
insb
mov
and
rcrl
data16
std
int3
xor
jbe
pop
loopne
testb
and
or
sbbb
dec
mov
gs
cmpsb
movsb
ljmp
stc
push
xchg
or
daa
mov
add
mov
rcrb
fisubrl
out
iret
sub
fmuls
out
or
mov
pop
nop
cmp
stos
sub
lcall
jecxz
push
sub
push
cmpl
popa
xchg
imul
sub
dec
dec
pop
mov
jae
add
xchg
inc
cli
js
nop
cwtl
nop
add
pusha
cld
xchg
dec
hlt
and
sbb
cmpsb
jg
mov
mov
lcall
lds
ja
mov
mov
cmpsl
inc
fs
lods
mov
ror
push
ror
pop
fsub
in
push
xor
add
addr16
stc
push
or
out
repnz
mov
jnp
jbe
inc
sarb
gs
repz
jl
jl
or
rclb
repz
inc
fdivrl
push
std
ret
repz
jmp
push
mov
in
jl
decl
mov
fistps
adcl
loope
cmpsb
push
xor
fnstcw
repnz
popa
sub
or
jg
imul
out
aaa
xchg
push
adc
sbb
popf
add
js
sbb
loopne
bound
inc
mov
inc
ds
insl
je
stc
push
sub
in
xor
cmpb
jge
pop
push
cmp
mov
lds
adc
cli
shl
mov
and
sbb
cmp
adc
les
or
inc
jo
mov
add
call
imul
decl
clc
mov
test
sub
xchg
lret
or
adc
pop
mov
movsl
mov
inc
adcl
pop
jle
inc
cmc
addr16
and
cs
aad
mov
aad
jns
inc
push
xchg
lds
or
pushf
stos
xlat
fstl
inc
ret
mov
pop
xchg
inc
addl
sub
push
enter
test
push
shr
or
jecxz
mov
bound
and
cld
sahf
icebp
outsl
jae
loope
daa
fs
insl
sbb
jg
mov
sarb
gs
push
das
xchg
pop
pop
mov
nop
adc
mov
je
stc
stos
pop
sub
mov
loope
js
mov
test
out
scas
xchg
mov
mov
ss
push
vandnps
push
push
push
nop
jbe
and
out
sub
jbe
inc
xchg
inc
lea
cwtl
cli
test
das
adc
mov
gs
jae
add
adc
xchg
sbb
jo
jp
cmpsl
push
stos
pop
lahf
lcall
ja
jl
push
inc
cmc
adc
pop
or
push
inc
xor
in
xchg
sub
lcall
push
push
lret
push
xor
jg
push
shll
xor
shll
imul
xchg
fists
mov
add
enter
je
push
leave
and
mov
xor
push
sbb
andw
aad
pop
xchg
xchg
shlb
push
push
dec
fsubrp
ljmp
les
xor
call
nop
movb
dec
push
dec
and
je
sub
xchg
ret
mov
dec
cmpb
xlat
mov
stc
stc
fcmovnb
adc
jae
loope
aad
xor
stos
in
in
repz
xor
pusha
in
sub
xchg
add
jl
fisubrl
push
icebp
inc
mov
mov
add
xor
inc
xor
insl
insl
cmpsl
mov
sti
xor
adc
lock
xchg
push
mov
sub
push
fidivrs
outsb
push
cmc
jno
cs
movsb
jmp
mov
loopne
xor
cmc
sbb
into
and
pop
mov
mov
jp
out
adc
popa
jnp
ret
push
divb
jp
jecxz
xor
sbb
loopne
add
sbb
adc
cmp
ret
mov
out
insl
ja
xor
dec
sub
jg
mov
cld
ret
hlt
adc
imul
push
sbb
xchg
add
out
fwait
mov
push
xchg
mov
mov
sbb
cmc
mov
cld
test
cmp
sarb
dec
icebp
into
add
add
fldcw
imul
add
lods
dec
sarb
ja
fs
or
jg
scas
mov
xchg
je
loope
jno
out
in
cmp
push
xor
dec
pushf
push
lret
clc
push
mov
or
mov
inc
sar
dec
insl
or
dec
jb
in
stc
clc
sti
add
pop
in
insb
in
jg
jae
inc
pusha
movsb
xor
aam
leave
xchg
icebp
add
clc
loopne
jo
jl
repnz
lahf
adc
dec
and
dec
fwait
jbe
xor
cmp
dec
mov
mov
mov
mov
or
in
sbb
or
pop
lock
add
rcr
mov
into
add
jo
and
sti
nop
jecxz
cmp
sub
test
loope
pop
jo
rolb
mov
mov
mov
add
ret
mov
adc
dec
filds
addr16
pop
int
push
cmpsl
sarb
mov
xchg
lods
stos
push
aad
pop
lret
cbtw
ss
outsl
sub
ret
pop
or
cmp
imul
and
fidivrl
cmpl
and
and
mov
sbb
stos
out
repnz
xchg
shrl
xchg
fcompl
lahf
movsb
mov
mov
shll
scas
inc
add
or
mov
mov
leave
inc
rclb
je
mov
inc
andb
imul
cmc
adc
sub
rcr
sbb
rcr
dec
popa
cmp
adcb
xor
mov
orl
pop
add
stc
test
sbb
inc
mov
mov
shll
sbbl
push
shlb
fs
adc
xor
push
inc
ds
adc
clc
fmul
popl
je
movsl
adc
adc
testl
pop
scas
outsb
lcall
out
mov
hlt
mov
xor
inc
mov
xchg
sub
mov
or
shlb
imul
jnp
mov
mov
movsl
fnstcw
or
and
in
mov
lods
xchg
daa
cmpsb
mov
es
in
mov
jnp
sbb
adc
lds
jo
jns
stos
or
xchg
lods
cmp
lea
adc
aas
in
push
rclb
xor
js
jns
add
int3
and
mov
xor
insl
xor
cs
pminub
xchg
sbb
xchg
in
mov
xorb
or
pop
adc
xor
xor
shll
mov
dec
inc
aas
sbb
mov
jnp
mov
jbe
mov
jp
loop
push
enter
mov
inc
dec
fwait
pop
test
aam
dec
add
cmp
pop
insb
sahf
fwait
mov
movsl
or
sbb
cmp
or
fsubrl
fsubr
mov
out
cltd
dec
std
repnz
pop
repz
or
movsl
xor
xor
pop
mov
jno
stos
cmp
mov
sbb
fistpll
inc
dec
or
add
int3
fiaddl
es
ja
push
xor
pop
lods
mov
mov
repz
adc
out
mov
xor
fcos
insb
iret
and
rorl
or
sbb
mov
test
add
inc
es
mov
inc
adc
into
bound
mov
mov
mov
pop
pop
mov
mov
and
adc
fst
and
paddsw
scas
insl
push
push
arpl
js
faddp
test
shll
dec
cltd
gs
pop
sbb
add
das
mov
ss
jae
jg
jb
dec
out
jno
je
sbb
cld
fimull
sub
out
fsts
add
ja
push
fsubrs
or
jle
cmp
test
dec
add
xorb
mov
mov
and
mov
or
cmovge
jmp
repz
lcall
dec
mov
std
add
inc
adc
push
stc
les
sub
and
repnz
cmp
mov
imul
push
xchg
dec
jmp
jg
scas
sti
adc
aaa
dec
aas
mov
push
cmp
xchg
inc
pop
decb
xchg
mov
xchg
mov
mov
cs
repz
popa
dec
lea
icebp
cmpsb
stc
imul
mov
nop
into
in
imul
fistl
xchg
dec
bound
xlat
loop
outsl
sti
lods
movsl
xor
sahf
mov
sub
fstpt
cli
sbb
xchg
jl
xchg
cwtl
imul
cmp
roll
sti
mov
push
dec
mov
cmc
pusha
and
cld
movsl
repz
dec
cmp
push
sbb
inc
pop
jp
addr16
mov
dec
jecxz
xor
das
lea
pop
push
lds
or
outsb
int
jbe
jb
cmp
mov
out
xlat
fcomip
mov
ret
inc
ljmp
pop
xchg
data16
in
out
les
adc
jg
dec
pop
cmpsb
push
xchg
sbb
push
sti
push
push
xchg
pop
xor
pop
xchg
mov
vmptrst
test
adc
fstpl
mov
jmp
mov
dec
out
adc
mov
andl
out
cmp
mov
out
jnp
push
cmp
xchg
ret
mov
inc
dec
lahf
test
insb
add
add
push
sub
adc
pushf
add
inc
dec
mov
test
pop
test
inc
jnp
sbb
adc
sbb
hlt
xchg
adc
int
ret
stos
cmp
push
test
adc
mov
xchg
mov
dec
dec
or
pop
pop
in
xor
addr16
out
push
icebp
mov
jo
and
imul
mov
or
mov
int
out
jne
loop
jne
sub
sub
xor
adc
rcr
int
sbb
adc
push
scas
mov
imul
mov
push
and
repnz
jge
and
jns
les
push
push
push
jg
cmp
push
loop
xchg
dec
inc
fwait
dec
jo
xchg
insl
dec
je
mov
out
mov
idivb
or
pop
push
adc
cs
ror
fdivs
dec
out
dec
loope
inc
mov
push
inc
mov
icebp
inc
jg
arpl
movsl
gs
sbb
cmc
into
xchg
cmp
adc
sti
cmp
pop
pop
mov
xchg
mov
jmp
cli
xlat
xor
rcrl
jp
outsl
mov
jp
dec
pop
mov
sub
test
ficompl
imul
jo
cmp
inc
lea
push
and
cli
jl
test
jns
fsts
adc
push
mov
cwtl
in
pop
cmp
cmpsl
daa
dec
mov
lcall
dec
jnp
pop
or
ja
and
fdivs
arpl
sbb
rolb
push
and
push
out
sub
inc
divb
xchg
loopne
ja
test
mov
jge
sub
inc
out
aad
push
dec
sub
outsl
pop
jo
xchg
insb
rcrl
jp
lret
jae
mov
mov
cli
enter
and
aas
mov
and
sub
dec
mov
xchg
and
mov
jb
call
mov
pop
loop
inc
push
push
cs
jp
cmp
sarb
pop
jmp
sbb
movsl
call
pop
cmp
jne
inc
sub
or
out
shlb
or
jb
ljmp
loope
pop
add
inc
xlat
cmp
scas
dec
out
mov
incb
push
scas
xor
push
add
das
sub
das
jecxz
or
mov
jno
movsb
xor
inc
out
hlt
sahf
push
shlb
in
rclb
sbb
mov
inc
or
and
and
fists
daa
push
scas
jno
lds
jl
fnsave
xor
or
int
and
mov
not
pop
or
icebp
pop
and
outsl
test
cmp
movsl
sub
fwait
cmpsb
or
mov
dec
js
mov
mov
add
mov
scas
test
bnd
fists
and
lock
fwait
sbb
popf
inc
cmp
push
mov
or
out
loop
xor
push
add
leave
ficomps
fcoms
mov
dec
xor
lods
sub
in
icebp
pusha
jnp
mov
pop
pop
add
mov
shrl
call
mov
push
es
mov
push
out
add
ljmp
mov
call
mov
pushf
ret
or
mov
aas
pop
call
pop
clc
lret
cld
faddl
fs
xlat
adc
sub
mov
movsb
test
iret
push
addr16
in
xchg
inc
popa
sub
daa
pop
rcll
jge
fistps
clc
dec
pop
push
jecxz,pt
sahf
xchg
outsl
mov
data16
mov
add
xchg
divl
insl
push
rcrb
mov
jmp
mov
jb
mov
stos
xchg
mov
imul
dec
xor
daa
inc
mov
ret
mov
push
out
sbb
add
cwtl
inc
sbb
icebp
push
mov
pop
inc
mov
lcall
sub
int
into
xchg
out
xchg
push
cltd
movsl
or
jbe
les
pop
stos
cmp
fcompl
mov
cmpb
adc
sub
mov
jl
sub
jge
inc
dec
adc
jmp
sub
adc
ljmp
repz
cmp
rolb
arpl
std
gs
push
insl
cmp
mov
adc
test
imul
in
xchg
repz
movsl
xchg
jno
sub
dec
int
xor
in
sub
jns
mov
jno
cmp
addr16
lock
jae
pop
sbb
sub
mov
popf
pop
lea
cmp
and
hlt
xchg
sbb
sbb
jo
cmpsb
dec
sub
sbb
cmpsl
pushf
mov
xchg
sub
movsb
addl
mov
pusha
stc
shlb
or
shlb
jno
add
add
insb
pop
movsb
sbb
xchg
cmc
loopne
cmp
cwtl
ror
xchg
xchg
mov
or
scas
mov
test
mov
mov
mov
pop
insb
inc
cmpsl
ja
push
in
xor
sub
xchg
pop
cmp
ret
lcall
ja
rcr
dec
pop
into
addl
inc
push
shrb
push
xlat
ja
lcall
push
and
xchg
mov
and
imul
clc
les
cmp
pop
aam
test
mov
mov
arpl
cmp
adc
arpl
dec
jno
mov
bound
sub
jmp
cli
jns
ja
popa
xor
ds
sbb
jmp
int
jg
cmp
push
andb
stc
mov
out
leave
cmp
hlt
fildll
inc
adc
repnz
and
imul
dec
das
jno
or
cli
jg
outsb
aad
ret
fwait
cmp
xchg
icebp
push
cmpl
loopne
cmp
fnstenv
iret
loopne
sbb
mov
rol
mov
pop
dec
pop
xor
mov
in
repnz
rol
mov
jbe
or
lret
jecxz
fs
repnz
or
dec
pop
inc
outsl
mov
outsb
lret
add
sub
xchg
lea
insl
in
sub
icebp
loop
mov
fwait
gs
sbb
out
ret
cmp
lret
push
mov
pop
roll
cmp
cmpsl
lods
jl
sahf
jb
in
int
mov
xchg
cmp
mov
mov
dec
xlat
adc
lea
test
xor
sbb
lret
push
sahf
mov
insl
je
or
mov
sbb
add
push
mov
jmp
sub
mov
mov
jmp
loopne
add
push
iret
dec
pop
sbbb
mov
mov
dec
jns
ret
or
mul
dec
inc
jmp
repz
push
in
sub
jmp
or
in
lcall
inc
xchg
and
outsl
add
dec
xor
movsl
push
mov
inc
aad
inc
scas
jns
into
dec
and
xchg
in
mov
push
ljmp
and
adc
pop
mov
jb
ret
cmp
fcomps
out
or
push
mov
aas
es
adc
in
les
sub
pop
push
adc
xchg
lret
cld
xor
pop
iret
mov
test
je
lahf
cmpsl
addr16
test
fcompl
inc
pop
jno
inc
xchg
jbe
rcrl
ljmp
out
sub
pop
frstor
popf
mov
push
add
and
test
lods
fsubs
notl
pop
push
aam
subl
cmp
mov
aam
and
inc
imul
lcall
push
adc
fisttps
data16
movsl
loop
mov
gs
mov
mov
mov
xchg
faddp
outsl
mov
and
mov
push
shl
clc
iret
jo
jbe
and
mov
incl
insl
sub
push
or
mov
mov
in
ds
add
outsl
cli
repz
loope
jae
dec
xorl
cli
sbbl
sub
int
xchg
inc
sbb
pushl
jp
mov
aad
mov
pop
out
mov
mov
add
imul
sti
shrb
stc
gs
adc
pop
mov
shl
adc
inc
aas
pop
mov
cmp
and
dec
mov
push
repz
ljmp
in
sbb
xor
sub
lret
push
mov
adc
xor
loopne
movsl
movsl
inc
xchg
mov
mov
cwtl
sbb
mov
sub
pushf
mov
rcl
xchg
mul
and
fnstenv
sbb
mov
xchg
or
sbb
in
add
mov
pop
dec
mov
xor
inc
sub
out
std
push
fwait
clc
fiaddl
sub
mov
xorl
ret
stc
popf
jmp
sbb
pop
push
sub
arpl
call
cmp
popa
mov
add
cld
adc
out
pusha
mov
jp
test
sub
or
stos
jne
and
mov
rep
dec
mov
inc
adc
or
fstps
xchg
jle
mov
repnz
push
or
sbb
jmp
stos
mov
add
and
dec
mov
std
mov
aas
scas
and
jecxz
jp
jmp
call
pop
aaa
mov
mov
adc
cmpsl
xchg
sub
insl
loopne
clc
lods
fstpt
movsb
js
xor
adc
stos
orl
and
mov
icebp
mov
xorb
fiaddl
insb
sbb
repnz
inc
jg
push
les
cld
out
out
adc
in
jne
dec
fsubl
iretw
pop
in
movsl
xchg
add
sub
pop
adc
xchg
xor
xchg
or
inc
or
sub
and
lret
add
add
fsubl
adcb
fstpl
inc
stc
push
mov
mov
adc
cmc
fcmove
push
in
jb
mov
push
dec
cwtl
jns
cmpsl
mov
dec
jge
and
and
jbe
subb
sbb
add
or
test
jo
xchg
lcall
scas
movsb
mov
fld
iret
pop
jb
cli
sbb
dec
xchg
in
fs
mov
lock
push
aaa
ret
in
fndisi(8087
cld
xchg
andb
popf
push
orb
mov
mov
loop
fstpt
jmp
cmp
cmp
xlat
frstor
insl
fidivrl
pop
rol
inc
enter
aad
xadd
xchg
sub
xchg
xor
pop
xor
xchg
inc
push
xchg
pop
scas
test
xchg
pushf
mov
inc
xchg
call
fiaddl
dec
sub
stos
push
loopew
rcrl
mov
pop
lret
jnp
mov
push
in
jge
jp
jb
cmp
lods
pop
rol
bound
fsqrt
sub
push
mov
pop
dec
aas
stos
sbb
pop
lock
mov
hlt
js
xchg
cmp
lds
imul
daa
dec
mov
xor
inc
test
mov
pop
or
outsb
mov
shll
aad
jo
les
push
push
mov
push
jg
mov
xchg
es
rcrb
or
push
xchg
push
clc
repnz
xchg
mov
xor
aam
ficoml
out
add
mov
pop
dec
lret
gs
pop
repz
xchg
mov
test
mov
jbe
add
xor
mov
sub
jnp
in
mov
inc
pushf
imul
xor
jns
icebp
out
push
dec
gs
mov
and
fadd
ja
movsb
mov
ret
xor
sub
cmp
mov
adc
rcl
or
ja
mov
testl
sub
icebp
adc
hlt
mov
dec
pusha
frstor
negl
outsb
fisubrl
mov
xchg
movsl
cli
jbe
cmpsb
jnp
sbb
add
sahf
xor
lds
push
push
mov
mov
jno
jo
mov
in
lock
inc
pop
sbbl
push
adc
jbe
or
ja
inc
cmpb
fstl
and
jbe
dec
loop
jle
add
mov
cld
cmp
scas
push
jb
jnp
cld
cmp
pcmpgtb
xor
cmp
cs
push
pop
dec
sti
outsb
or
mov
das
loop
ds
nop
add
adc
cmp
sahf
push
add
js
mov
pop
xor
les
mov
mov
mov
push
repz
and
dec
in
decl
jae
push
insl
cmp
dec
and
push
adc
aad
pop
xor
pusha
test
jb
push
adc
cmc
add
lods
pop
adc
mov
xchg
mov
insb
jmp
jns
movsb
xor
add
leave
popa
pop
mov
pop
rcll
jge
cld
out
sahf
push
adc
stc
imul
aas
adc
mov
test
mov
pop
call
mov
xchg
mov
jg
or
mov
and
adc
sbb
mov
cld
mov
mov
std
cmpsl
push
adc
aad
out
rcrl
pop
in
in
and
xor
xchg
int
push
ret
insl
out
in
test
fucomip
pop
scas
inc
das
lods
lods
ja
sbb
std
jmp
xchg
cmc
sub
and
scas
mov
int
xchg
test
lds
loope
push
push
mov
lret
xor
fcompl
loop
nop
xor
fdivl
mov
out
ret
cmp
cmpsb
mov
fnstsw
fscale
das
mov
xchg
out
inc
fiaddl
call
in
imul
pop
and
push
sub
imul
inc
icebp
and
into
jecxz
sbb
and
or
cmp
lds
sub
xor
sarb
cmp
out
ljmp
stos
iret
sbbb
push
loope
movsb
pop
popf
cmc
mov
lods
jmp
adc
insb
ret
push
adc
sahf
mov
imul
mov
iret
sbb
js
mov
inc
rcrb
out
sbb
push
aaa
ljmp
inc
mov
loope
clc
xlat
addr16
mov
sub
jl
push
imul
or
mov
mov
cltd
or
dec
bound
xchg
out
sti
lock
sbb
mov
sub
pop
pop
jnp
and
mov
sub
or
stos
int
jp
mov
mov
leave
jp
test
test
fiadds
lcall
mov
xchg
fs
and
xlat
or
nopl
mov
jecxz
rcrb
imul
out
sahf
mov
ds
adc
iret
in
mov
movsb
in
insb
jmp
test
jg
and
sub
mov
icebp
jbe
imul
jmp
test
mov
sub
sbb
fidivl
adc
sbb
ret
inc
scas
pusha
jl
fisubrs
and
cwtl
out
inc
rcl
dec
mov
orb
or
outsb
push
cs
jl
add
xor
ss
xlat
pop
xor
sbb
dec
inc
inc
cmp
jle
xlat
cmpsb
std
dec
call
sub
pop
xchg
andl
mov
xchg
adc
sbb
int3
cmp
fdivl
dec
jle
lods
test
or
int3
push
fs
aam
cmpsl
in
add
and
arpl
int3
insb
lods
mov
std
into
imul
mov
movsb
lret
cmp
lds
xor
into
push
adc
mov
mov
insb
mov
int
dec
mov
sbb
add
lods
or
dec
xor
loop
add
add
loope
sub
pushf
out
lret
or
testl
lock
jl
inc
mov
mov
test
fs
cmp
or
inc
sub
out
sub
push
ret
push
xchg
sti
dec
jb
loop
imul
jle
mov
inc
gs
fwait
lods
dec
sub
or
iret
repnz
push
and
std
and
or
nop
jae
jno
mov
mov
jp
xchg
pop
lds
sub
push
or
pop
mov
sbb
lret
cli
out
sbb
jns
add
sbb
jge
out
mov
adc
add
ret
movlhps
jmp
fbld
jg
mov
lock
outsb
imul
icebp
pop
das
popf
mov
dec
cmp
inc
xor
mov
dec
pop
fcmovne
xlat
repnz
jbe
loopne
iret
sbb
xchg
push
pop
repnz
or
cmpsb
scas
lret
lods
fdivrp
sbbl
in
cmpsb
inc
pop
sbb
stos
push
mov
pop
shrl
sbb
mov
jge
pop
pop
pop
cli
scas
xor
jmp
pushf
call
inc
pop
jns
inc
adc
sub
or
les
dec
gs
shr
inc
and
add
pop
xor
cmp
sub
xor
fs
xlat
mov
dec
and
cmp
repz
int3
cli
repz
pop
sahf
js
jne
ljmp
mov
push
fnstcw
out
mov
out
xor
inc
cltd
jmp
sub
jo
cmp
mov
ret
mov
into
xchg
and
rcll
cs
std
out
bound
push
cmp
inc
loope
dec
arpl
stos
jmp
mov
mov
int
cmp
adc
dec
imul
jmp
inc
iret
nop
xor
int
cmpsl
push
cmpsl
sahf
jge
shll
lds
cli
pop
icebp
jne
xchg
push
outsl
les
leave
dec
or
popf
cmpsl
add
shll
lds
popf
imul
je
mov
cltd
push
sti
mov
inc
pop
xlat
scas
das
andb
xchg
outsb
cmp
and
push
aaa
add
and
mov
ret
push
xchg
mov
dec
sbb
xchg
sbb
test
loop
xlat
ficoml
movsl
xchg
xchg
mov
pop
xchg
dec
push
add
and
xor
add
scas
fs
dec
sub
cmp
push
popf
dec
jle
dec
push
in
xor
mov
ficoms
shrl
and
adc
or
dec
sbb
fnstsw
stos
loope
in
fwait
adc
or
inc
std
cmpsl
sub
mov
push
jmp
mov
jne
jmp
inc
push
repnz
and
ja
push
jecxz
mov
hlt
shrl
wrmsr
popa
int
stos
adc
rolb
aaa
or
aam
std
adcl
les
or
jmp
jecxz
aad
sub
adc
in
notl
test
les
xchg
dec
aam
popa
ret
xor
into
imul
jp
pop
enter
or
cmp
stc
or
inc
repz
xchg
call
mov
into
repz
sbb
jg
sub
lahf
fstps
push
or
add
stos
fcmovnbe
and
in
and
hlt
test
arpl
stos
push
stc
fucom
test
shlb
xchg
ss
mov
stc
xchg
dec
jno
pop
into
movsb
pop
ja
jns
xor
stos
mov
pushl
xchg
mov
mov
jns
out
imul
pop
push
push
inc
fidivs
inc
imul
xor
jecxz
aad
cmpsb
out
loopne
int
jl
imul
int
xchg
cmp
sahf
sub
cmp
cmp
mov
jge
stc
mov
cli
lret
jl
sub
stc
or
add
dec
sbb
inc
push
out
js
imul
add
cmpsb
xchg
test
or
dec
or
sub
push
inc
pop
add
in
pop
std
xchg
mov
and
shll
imulb
ficompl
cmpsb
leave
nop
inc
pop
or
and
lea
fadd
dec
mov
sub
push
fistpl
add
dec
int3
mov
leave
popf
ljmp
push
jnp
jle
fmuls
test
mov
or
inc
jns
lcall
int3
daa
ss
fdivr
scas
arpl
pop
add
push
or
lea
fstps
xchg
xchg
scas
pop
jb
and
in
add
inc
xor
lods
and
clc
add
jl
cld
or
in
inc
std
daa
int
xlat
bound
ret
push
sti
adc
mov
pop
inc
mov
push
out
and
shrb
or
mov
push
cmp
inc
sub
adc
mov
mov
add
sbb
xorl
mov
mov
ljmp
xor
dec
sub
je
repnz
mov
aaa
rol
icebp
or
xchg
dec
push
xchg
fs
outsl
cmc
lahf
push
mov
xchg
mov
lret
inc
xchg
js
mov
lahf
mov
repnz
xor
pop
stc
pop
daa
jnp
jecxz
cwtl
js
adc
jecxz
mov
inc
aam
and
add
sarl
outsb
mov
mov
inc
dec
mov
mov
jo
ret
ja
xchg
lods
fwait
je
loop
pop
aas
adc
cmp
sub
jbe
inc
dec
sbb
mov
jmp
jns
xchg
cld
cmp
jae
sahf
or
sbb
std
inc
mov
cmc
mov
aas
add
bound
mov
mov
push
fcoms
idivb
mov
add
cmp
xor
mov
div
jo
bound
jne
mov
out
mov
inc
xchg
aas
jmp
les
mov
or
or
and
gs
or
lcall
int
adc
scas
mov
insl
jns
mov
in
test
mov
push
loope
and
cmpsl
cmpl
mov
imulb
xor
add
mov
dec
dec
dec
sbb
jbe
cmp
sbb
jne
jnp
dec
dec
stc
test
mov
vpcmpeqd
movsl
dec
and
mov
push
scas
loopne
ror
xor
scas
aaa
les
imull
es
clc
push
pop
mov
jp
and
jb
testl
dec
fxch
shrb
mov
lods
and
jge
out
mov
dec
cmpsl
push
cmp
xchg
add
jmp
and
xor
add
fdivl
push
das
scas
hlt
xor
lods
icebp
inc
hlt
jle
sub
iret
aaa
lods
into
xor
push
push
jmp
push
sub
cli
sub
aam
pop
in
test
and
ljmp
pop
jg
fwait
mov
repz
jbe
imul
es
subb
je
pop
fldt
jmp
lods
aad
push
into
cmp
popa
test
pushf
jmp
clc
xor
mov
ljmp
mov
fcmovb
pop
out
cmp
push
lods
cmp
inc
fs
dec
jmp
mov
pop
ljmp
mov
aam
out
sbb
adc
pop
nop
xor
mov
sbb
test
or
xchg
adc
cmpsl
mov
inc
inc
sbbb
xor
ja
add
adc
in
mov
mov
cmp
mov
hlt
leave
shlb
ds
mov
sbb
mov
inc
sub
xor
in
pop
sub
aad
mov
push
inc
xor
mov
imul
mov
sbb
imul
nop
fsubl
fsubr
sub
sub
test
push
or
or
push
push
popa
mov
or
push
rcll
arpl
lret
sbb
cmp
mov
std
fistl
clc
xor
bound
and
imul
in
sahf
mov
mov
xchg
push
out
in
jns
mov
push
cmp
mov
mov
jg
jbe
sarb
and
fmull
ret
repnz
cwtl
jecxz,pn
cmp
mov
xor
mov
cmpsb
pop
and
push
sub
ret
mov
or
out
repz
gs
sahf
fisubrs
movsb
pop
mov
mov
mov
add
repnz
xor
push
mov
pop
pushf
scas
mov
sahf
and
bound
fnstcw
sub
clc
mov
inc
aad
mov
sbb
push
xchg
mov
add
lret
mov
out
shrl
test
or
inc
pop
imul
popa
rcl
push
lcall
jecxz
cmp
hlt
adc
sarl
jno
mov
in
jns
xchg
mov
stos
outsb
and
pop
cmp
jecxz
sbb
das
jmp
jns
les
cltd
and
mov
lds
adc
mov
xchg
clc
pop
mov
movsl
and
repnz
test
pop
ss
insb
cwtl
push
xchg
and
fwait
and
stos
pop
lret
jl
lods
lock
sub
cmpsb
add
jno
sub
testb
ja
xchg
adc
fbld
test
sbb
cmpsb
add
stos
sbb
sahf
mov
or
inc
sub
js
adc
or
in
mov
in
adc
lods
or
inc
sbb
sub
push
adc
cmp
add
dec
xchg
xchg
in
inc
sub
or
push
out
and
adc
and
outsb
and
dec
cmp
lea
pop
mov
shll
add
daa
negl
cmpsb
enter
testl
xor
shr
push
mov
lcall
lock
test
outsl
push
sbb
dec
pop
inc
adc
outsl
or
outsb
mov
jp
imul
sub
xor
dec
lcall
add
pushf
ss
lea
sbb
shlb
pop
xchg
xchg
mov
out
adcb
add
push
push
inc
lods
jp
mov
dec
stos
lock
sbb
mov
pslld
sahf
aam
cs
jl
cmpsl
xchg
inc
cmp
cmp
xchg
cmp
mov
data16
mov
test
jp
xor
mov
sahf
int3
cmp
and
out
insb
or
mov
or
mov
outsl
inc
jb
or
add
ret
mov
ja
sti
push
in
mov
push
lret
xor
and
mov
add
imul
sti
scas
xor
idivb
dec
jge
inc
mov
dec
dec
cmc
pop
cwtl
pushl
mov
hlt
lods
mov
adc
test
imul
jmp
and
fistpl
sbb
pop
and
aam
enter
jle
out
jno
aaa
in
inc
lret
and
mov
push
jns
ds
jp
decb
jp
push
cltd
add
or
je
xorl
or
jle
push
rcll
and
je
push
xchg
inc
mov
lods
xchg
movsb
adc
mov
jge
fisttpl
das
mov
and
mov
dec
xor
jns
jae
mov
mov
or
imul
movb
pusha
jb
mov
mov
and
adc
test
mov
mov
xchg
add
xor
out
imul
sti
mov
xor
mov
pushf
imul
or
in
mov
adc
roll
pop
mov
adc
imul
xor
js
out
addr16
jns
push
lcall
xchg
xor
aad
lahf
jno
mov
jns
insl
jg
cmp
out
adc
cmpsb
cmc
pop
arpl
xchg
icebp
xchg
inc
cwtl
mov
iret
xor
testb
jo
xor
cmpb
or
inc
aam
xchg
sub
add
stos
out
xorb
fbstp
pop
xchg
andb
fadds
clc
pop
pop
push
jno
jno
mov
inc
enter
addr16
rclb
inc
mov
jmp
cmpsl
pop
inc
std
cmp
outsl
xchg
jns
sbb
out
cmp
in
je
push
arpl
or
fs
sbb
add
iret
into
sub
jo
outsb
mov
out
inc
add
add
cmpsb
jecxz
jle
lcall
sbb
mov
pop
lahf
xchg
and
imul
adc
xor
mov
insb
popf
stc
test
das
adc
mov
es
cmp
enter
je
mov
fucomi
push
sub
push
stc
rolb
aas
push
mov
or
dec
test
ficoms
sbb
push
test
dec
sbb
inc
mov
stos
dec
test
aaa
jmp
and
pushf
insl
fldl
mov
popf
std
mov
fs
push
arpl
cld
mov
loop
lret
test
lret
pop
pop
cmpsb
adc
jmp
fistpl
std
rcll
out
jecxz
xchg
pop
mov
xlat
je
fsubrl
hlt
or
stc
push
xchg
ljmp
push
cld
push
mov
sub
mov
push
lcall
movsl
inc
repnz
jmp
xor
pop
cmpsb
xchg
int
cmp
js
sub
add
idivl
mov
inc
sbb
sar
mov
cmp
call
push
int
ret
jp
lods
shll
pop
cmp
in
pushf
fwait
jl
icebp
xlat
sbb
cltd
xor
scas
and
shl
inc
fxch
outsl
movsl
imulb
fstpl
dec
add
pusha
in
enter
jb
aaa
and
icebp
jg
mov
dec
outsb
or
lret
mov
add
add
jle
scas
lret
rcll
ja
jmp
gs
jecxz
out
xchg
adc
push
lods
push
mov
mov
hlt
mov
sub
add
sub
mov
cld
lds
popf
pusha
adc
clc
and
sti
cli
inc
mov
fwait
xchg
push
add
jl
xchg
sahf
mov
insl
xor
fldcw
sub
mov
insl
loopne
hlt
jbe
in
dec
pop
std
add
lahf
mov
or
fimull
adc
les
jp
inc
sub
xchg
sbb
jo
mov
xchg
sbb
sub
push
inc
fmul
out
jecxz
insb
mov
mov
cmp
xor
lea
in
fsubrs
mov
es
and
mov
mov
bound
testb
inc
and
xor
in
inc
dec
fsubr
fs
sbb
std
pop
fstpt
sti
fmuls
jle
mov
push
scas
inc
sbb
dec
je
testl
iret
in
shll
sub
push
mov
loopne
add
gs
add
xor
xchg
mov
add
aad
mov
lcall
in
sub
mov
int3
test
lods
sbb
push
mov
stos
pop
cs
fcmovb
repz
lret
aaa
xchg
pop
flds
filds
jno
filds
popa
cli
scas
add
nop
push
pop
daa
mov
cmp
call
xlat
call
inc
mov
cwtl
icebp
insl
pop
scas
xor
sbb
sbb
iret
jbe
jmp
sbb
inc
add
or
dec
pop
orl
rolb
add
push
add
cmp
pusha
jp
push
ja
sbb
and
sbb
test
push
leave
mov
fnstsw
fwait
mov
push
dec
addb
addb
inc
jge
test
out
xor
lds
mov
in
stos
jae
cmp
aad
add
pop
das
pop
push
or
or
out
mov
xor
add
je
fsubrs
dec
hlt
ss
call
xchg
push
popa
jns
sbb
cmpsb
sahf
lcall
mov
roll
jno
jge
push
imull
mov
ret
pop
add
and
in
jmp
test
mov
pop
mov
jnp
and
pop
sub
dec
jns
into
sbb
out
test
test
out
cmpsl
xchg
push
fisubrs
mov
ja
push
pop
stos
test
insl
adc
jmp
stos
mov
jae
icebp
push
jns
cmp
addr16
sbb
loop
aad
inc
out
aaa
test
ss
push
or
lock
imul
js
fs
jbe
insl
cmp
dec
inc
push
enter
pop
jge
lret
cmp
addl
das
cld
jecxz
add
and
repz
ja
test
out
test
sarl
add
divl
ret
jo
cli
jg
cwtl
xchg
xor
cmp
add
dec
adc
popf
xor
jns
mov
lock
insb
pop
leave
jae
add
cmp
mov
stos
es
out
and
arpl
jmp
mov
fmulp
push
std
fisttpl
js
xlat
iret
test
into
mov
lahf
mov
addr16
or
and
addr16
imul
cwtl
sar
xchg
fcompl
cmp
add
mov
sahf
jp
pop
add
out
cmp
cltd
addr16
ss
mov
int3
xlat
sbbb
in
loope
rcll
les
pop
push
jge
xchg
cmc
sahf
ljmp
js
stos
sbb
mov
jb
hlt
nop
jp
cmpsb
xor
mov
fucomi
rcl
in
dec
not
sub
or
sbb
dec
push
insb
cmpb
jnp
sbb
inc
inc
test
inc
jnp
jne
jge
sbb
int
out
mov
cvtps2pi
lahf
mov
dec
cmp
xchg
je
xchg
lret
and
test
mov
dec
ss
and
cwtl
inc
sub
mov
addr16
or
xchg
testl
mov
in
das
jecxz
hlt
or
push
jb
and
sub
shlb
subl
add
or
in
fisttps
and
in
rolb
dec
jb
add
movsl
dec
mov
icebp
and
loop
mov
xchg
test
in
cs
insl
in
leave
ret
scas
into
aaa
adc
lods
xor
xor
fsubrl
fldcw
push
or
aam
sbb
inc
and
mulb
or
pop
jmp
negl
mov
push
sti
adc
jnp
fsubrs
lds
cld
adc
sub
rclb
aad
jo
jae
pop
ffreep
pop
aas
adc
in
dec
outsb
add
mov
outsl
repz
es
stos
in
jns
sbb
in
adc
test
dec
nop
fiaddl
dec
sbb
sahf
lds
imul
adc
js
test
test
jns
pop
xor
xchg
stc
fcmove
std
roll
div
lods
inc
or
cld
dec
pushl
adc
adc
orb
mov
mov
nop
mov
sub
jge
testb
out
fdivrl
pop
mov
imul
iret
lods
hlt
ljmp
or
mov
in
cltd
decb
jo
xchg
scas
mov
test
add
adcb
sbb
xor
das
pop
adc
add
mov
sbb
mov
ret
mov
fbld
imul
mov
xor
lea
lahf
adc
sbb
mov
add
std
outsl
push
jg
rcrl
clc
lods
into
jo
sub
or
push
jle
xor
stos
xchg
out
mov
xchg
mov
sbb
mull
lds
iret
cltd
mov
cs
sub
fstps
mov
dec
push
pop
jg
outsb
orb
jl
push
repnz
sub
inc
and
inc
mov
push
cltd
xor
jae
inc
enter
mov
subl
cwtl
nop
pop
pop
mov
stc
jecxz
outsl
add
lahf
inc
cs
sbb
ret
sub
add
roll
mov
imul
mov
call
dec
mov
sahf
lea
jo
out
ja
add
cmc
xchg
dec
ss
and
adc
jl
insl
in
test
pop
jp
lret
lds
outsl
push
jae
xor
xor
repnz
sti
stos
into
leave
sbb
dec
dec
add
stos
jp
or
movsb
dec
dec
push
ljmp
add
mov
or
sub
pushf
mov
dec
ret
stos
lds
outsb
mov
rcll
out
popf
mov
ss
js
das
sbb
stos
and
sub
jge
ja
adc
repz
rclb
scas
sub
je
dec
pop
aam
mov
inc
or
inc
int
lea
lret
ret
clc
pop
push
sbb
sbb
push
jo
xchg
add
sub
dec
rcl
dec
and
js
fs
stc
or
push
fnstsw
dec
pusha
jge
scas
mov
and
xlat
int3
push
cld
add
loope
sub
into
cwtl
xor
pusha
push
sub
adc
popf
cmp
repnz
push
ljmp
stos
in
jl
dec
or
pop
xchg
inc
or
push
mov
xor
repz
outsb
rcll
in
adc
dec
cmp
cmp
imul
push
sub
mov
movsb
and
mov
out
jo
cmp
arpl
rclb
jge
dec
ffree
add
lcall
pop
sub
and
add
adc
lock
inc
push
adc
into
cmp
push
repnz
sub
sub
mov
out
scas
sahf
aas
push
inc
pop
mov
les
inc
dec
inc
xchg
mov
std
mov
xor
call
cmp
sahf
xor
jp
in
pop
add
add
lahf
mov
fstpt
sub
add
push
sbb
or
mov
pmullw
bound
test
inc
mov
xchg
dec
int3
arpl
mov
or
in
pop
sbb
push
push
sbb
std
sub
sub
jge
mov
das
jecxz
cs
sbb
pop
push
fidivrs
inc
mov
mov
xchg
xchg
pop
mov
clc
mov
lret
shlb
imul
clc
or
ljmp
hlt
popa
loope
mov
adc
movsb
xor
mov
sahf
bound
sbb
andl
cmpsb
insb
dec
in
out
and
sub
call
sbb
lock
sub
push
push
cmpsl
adcl
xchg
rcrl
jecxz
xchg
dec
ljmp
ret
sub
fistps
pop
mov
andl
in
test
repnz
push
mov
xchg
int3
xor
subl
dec
xchg
in
xor
xchg
or
rorl
xor
dec
jge
fcoms
mov
in
sub
xchg
fs
loopne
arpl
mov
pop
cli
lods
ficomps
sub
sti
or
call
or
pop
mov
pop
sbb
jb
in
dec
push
sub
dec
dec
mov
mov
inc
add
stc
sub
sbb
fs
sbb
in
jb
jb
mov
rcrb
inc
adcb
fdivr
sbb
dec
fisubl
hlt
push
ret
jae
test
call
lret
xor
mov
fldln2
mov
adc
sbb
pushf
ret
cmpsb
imul
ds
scas
arpl
ret
push
or
pop
fdivs
in
sar
frstor
cmp
jp
inc
stos
adc
outsb
jecxz
arpl
outsb
mov
mov
pop
lret
mov
addb
cmp
xlat
xor
inc
xchg
pop
push
jg
sarb
popf
mov
out
popf
fiaddl
pop
clc
imul
fnsave
inc
cwtl
and
mov
dec
les
jp
jo
das
add
das
and
arpl
adcb
aam
movsb
push
fisubl
aad
insl
incb
and
dec
pop
jp
mov
push
cs
xor
inc
jae
jb
sub
push
adc
ret
dec
dec
gs
and
mov
jecxz
pop
int
xchg
shlb
test
mov
ds
mov
daa
xor
call
inc
cmp
sarl
das
lret
idivb
cmp
cs
push
shlb
jp
fisttpll
xlat
jns
and
adc
mov
mov
and
mov
sub
je
out
and
push
stos
mov
push
lock
sub
cs
pop
addr16
mov
gs
and
push
mov
ret
sahf
or
add
lds
dec
inc
jae
adc
rcr
inc
xchg
add
ret
push
inc
rcll
xor
xchg
fldt
sbb
xchg
pusha
xor
ljmp
mov
into
js
pop
push
jae
sub
inc
xchg
imul
decb
pop
test
and
adc
test
stos
outsb
xchg
aas
mov
mov
push
hlt
ja
lock
and
out
adc
aam
jno
sub
jle
sahf
xor
mov
sti
xchg
insl
invd
hlt
pop
mov
dec
xor
clc
cmp
outsl
aam
sub
jl
mov
test
cmp
pop
sub
or
sub
dec
imull
mov
push
arpl
lds
adc
shlb
fidivs
add
and
nop
adc
jno
clc
gs
lahf
into
xchg
test
inc
ss
push
cmp
sub
loope
jmp
js
je
push
jno
sbb
push
cmpb
cmp
jge
jae
inc
adc
daa
mov
mov
push
mov
fs
inc
movsb
idivb
sub
shrb
mov
and
dec
add
sbb
pop
movl
pop
shll
arpl
cmp
in
xlat
pop
mov
sbb
testb
adc
popa
cmp
cmp
inc
cld
push
fwait
adc
addb
inc
lods
sbb
mov
cmp
xlat
lret
shl
xchg
loopne
or
mov
js
pushf
clc
lret
pop
pop
lret
jg,pn
cmpb
cltd
dec
push
ret
sbb
push
rclb
movsb
xchg
sub
inc
and
jecxz
cmc
test
sub
into
pushf
shl
fsubrl
adc
or
repnz
sbb
pushf
ja
addr16
mov
add
ret
movsb
into
and
loop
xor
cmp
mov
fisubrl
movsb
inc
js
jge
xor
and
cmpsb
jmp
int3
pusha
inc
jne
pop
sbb
pusha
jl
xor
xor
jbe
lods
mov
andb
and
xor
cmp
test
loope
cmpsl
aaa
lret
pop
movsl
outsb
push
mov
mov
jle
xchg
sbb
ds
arpl
or
jo
push
ret
sbb
gs
mov
dec
loop
xor
dec
mov
mov
cli
mov
pop
imull
or
call
iret
out
popf
xchg
sub
mov
test
sbb
push
or
sti
sbb
movsl
push
jo
idivl
or
or
pop
add
mov
push
sti
xor
cmc
insb
push
insl
mov
dec
add
pushf
lds
sub
ficoms
int
lods
mov
mull
adc
ja
inc
test
jmp
aad
test
mov
cltd
or
lcall
adc
push
testl
sarl
stc
lock
cld
jp
roll
and
inc
xor
xor
je
or
hlt
jns
popf
pop
add
mov
jns
les
aaa
movhps
fldcw
lods
or
outsl
pop
sti
lods
int3
js
push
mov
xor
adcb
push
xchg
jbe
pop
mov
in
mov
mov
les
dec
add
cltd
pop
cli
movsb
scas
jmp
gs
lea
mov
mov
aaa
add
cmpsb
add
dec
out
mov
xchg
out
add
jns
jo
dec
fiaddl
lcall
rclb
xchg
shrl
nop
jle
mov
cwtl
lret
aad
pop
add
sahf
add
pop
sub
fdivl
xchg
inc
mov
aad
shl
xchg
mov
cmp
xchg
push
enter
scas
xchg
stos
dec
pop
int
notb
xchg
and
jecxz
ljmp
dec
inc
sbb
fistl
dec
jne
es
or
aad
jbe
test
sub
mov
test
add
pop
ds
test
mov
sub
mov
mov
bound
aaa
out
in
push
movsb
adc
mov
icebp
insl
arpl
fs
clc
xlat
mov
andb
add
or
fdivs
test
mov
pushf
pop
fisubl
adc
stos
or
sub
loop
mov
xor
stos
xchg
cli
ja
mov
mov
jns
test
fisttpll
sub
ss
push
inc
shrb
cmc
sub
mov
dec
aam
stos
vpmovzxbw
jnp
bound
xchg
cmp
enter
outsl
cli
mov
xor
xchg
mov
pushf
shrl
dec
lods
or
xchg
xchg
roll
mov
std
mov
adc
imull
outsb
dec
lahf
fisttpl
mov
mov
clc
and
cmp
mov
and
mov
or
fists
fsts
lret
int3
jp
mov
cld
movsb
mov
pop
inc
out
xor
add
in
xchg
xor
mov
jns
subl
sarb
cmpsb
sub
daa
sub
pop
sbb
adc
dec
pop
movsb
pop
sub
mov
fnsave
sub
pop
testb
movsb
adc
outsl
sbb
mov
cmp
dec
mov
pop
mov
inc
or
arpl
cmp
cmc
leave
cmpsl
adc
add
jp
inc
pushf
enter
mov
pusha
inc
xchg
cmp
xor
dec
jns
aam
inc
pop
sti
lcall
mov
xchg
cmp
jo
jno
xor
and
xchg
mov
rorb
pop
add
iret
cs
lock
outsb
jnp
and
jg
push
adc
aam
aas
ja
aas
sbb
cmpl
inc
or
clc
adc
mov
pop
jbe
and
jg
sub
and
or
push
adc
mov
cwtd
dec
test
std
sbb
test
xchg
xchg
and
ja
mov
shl
xchg
mov
mov
icebp
push
lret
push
repz
xorb
outsl
dec
inc
pop
push
jge
ret
sbb
inc
mov
cmp
jne
dec
dec
pushf
inc
push
sbb
daa
adc
xchg
adc
and
dec
cs
sbb
ljmp
cmp
xor
sbb
imul
dec
icebp
mov
cmp
cld
xchg
jp
inc
jl
xor
dec
scas
inc
out
bound
xchg
inc
stos
mov
cmpsl
cli
mov
push
sbb
jnp
jge
cmp
sbb
xchg
out
mov
or
inc
pop
leave
jmp
inc
cmp
lods
loop
repnz
xchg
cmc
or
cmp
adc
push
push
test
sti
cmp
mov
lods
or
inc
jg
test
jne
loopne
in
out
fsubl
pop
mov
fwait
loope
push
and
repz
outsl
lea
lcall
and
cmp
shlb
cmp
xor
push
data16
dec
imull
xor
xchg
int
cmp
mov
pop
jnp
and
mov
cmp
das
add
sbbl
adc
mov
movsb
xlat
add
push
sbb
or
push
in
mov
xor
adc
jne
in
adc
cmp
cmpsl
push
cmc
pop
mov
idivl
inc
cmpsb
outsl
sub
cmp
ret
jp
in
aad
iret
insl
movsl
ret
repnz
dec
rcrb
mov
or
dec
imulb
rorl
movb
mov
jecxz
push
mov
aad
pop
push
mov
lret
aad
adc
fs
lds
jnp
jmp
test
or
test
test
insl
cli
push
cmc
hlt
and
push
mov
inc
mov
add
fstps
push
es
lock
and
pop
jno
xlat
out
mov
icebp
or
je
jb
xor
and
rol
mov
xchg
cmp
pop
dec
jmp
pop
test
lahf
scas
lahf
test
les
cld
je
shrl
filds
lds
ficomps
mov
push
mov
nop
sub
mov
sahf
cld
cmp
and
jns
mov
pop
sbb
dec
xor
jne
mov
in
cwtl
push
arpl
add
mov
or
pop
or
xchg
and
insl
mov
inc
xchg
hlt
xor
popa
push
test
arpl
push
aaa
and
dec
dec
ret
pop
cltd
out
mov
mov
bound
mov
jne
subb
mov
lahf
cwtl
scas
jnp
fsts
dec
sub
mov
lret
jecxz
aad
dec
cmp
jle
call
sbbl
jmp
jb
mov
wbinvd
inc
jge
push
outsb
sbb
fldcw
aad
rcrl
bound
fdivrp
fs
add
data16
mov
outsl
xor
cmp
scas
xor
dec
inc
jmp
adc
arpl
das
jbe
pop
clc
push
push
or
bound
lock
ret
insl
lea
jmp
push
loopne
movsb
inc
xchg
adcb
jo
sub
repz
or
mov
or
mov
sub
inc
jg
mov
pushf
ljmp
xor
rcrl
call
jecxz
fbld
xor
cmp
js
repz
inc
shrb
push
sarb
mov
and
xchg
sbb
mov
push
cmp
xor
jae
pxor
sub
scas
iret
loopne
iret
sbb
pusha
neg
icebp
and
subb
xchg
jnp
jle
sbb
stos
mov
add
cs
mov
xor
mov
inc
mov
sbb
loope
sti
cmovno
lret
jmp
pop
xchg
lea
insl
cmpl
mov
clc
lods
push
xchg
mov
iret
or
adc
xor
pop
xlat
jle
xorb
test
pop
dec
push
jle
mov
xchg
clc
mov
popa
jbe
dec
xchg
fs
mov
stos
test
cmc
dec
push
xchg
jnp
mov
ja
mov
popf
sub
fdivl
nop
orb
and
adcb
mov
mov
insb
or
outsb
cmpsl
push
ss
add
lods
and
mov
mov
shlb
mov
adc
dec
dec
push
addr16
out
pop
daa
or
sbb
scas
mov
in
pop
ret
push
fildll
push
test
rorb
faddl
clc
xlat
aad
jo
xor
lahf
out
into
div
sahf
lahf
xor
or
ljmp
into
mov
sub
mov
fdivrs
adc
out
sbb
xor
addr16
sbb
push
cs
xchg
mov
test
cld
test
cmp
scas
fnsave
inc
dec
jp
sahf
cmc
in
dec
ljmp
xchg
or
or
mov
lds
js
inc
pop
cmp
xor
cwtl
push
out
pop
or
pop
cmc
xchg
movsb
inc
fiaddl
adc
push
ja
dec
pop
or
enter
lret
stos
jb
inc
mov
call
popa
icebp
mov
or
mov
jb
pop
test
int3
mov
imul
cmpsl
xor
add
xor
xchg
in
push
dec
jo
push
int3
xchg
in
aam
out
loop
cltd
fisubl
imul
pop
fwait
push
add
ss
fbld
push
push
dec
xchg
adc
adc
or
xchg
push
das
cmpsl
cs
sub
mov
xchg
and
ret
xchg
xchg
or
or
pop
lret
mov
les
popf
repz
orb
cli
sbb
cwtl
dec
insl
add
icebp
inc
mov
addr16
ret
pop
mov
outsb
pusha
stc
mov
cmp
gs
mov
lea
cmp
push
add
sub
sub
inc
fiadds
jo
stos
pop
stos
or
leave
and
push
mov
or
test
sub
icebp
xor
xchg
lahf
pop
xchg
mov
test
out
lret
mov
test
shll
stos
or
adc
aas
in
inc
movsb
dec
fiadds
dec
ljmp
pop
stc
add
insl
fs
adc
xchg
jmp
mov
popf
test
jnp
ja
pop
or
sbb
dec
nop
jo
je
enter
inc
fisttpll
jp
or
rcrl
and
cs
mov
stc
out
xchg
fmull
iret
stos
in
ljmp
mov
adc
sub
jg
dec
xor
imul
fmul
shll
xchg
insb
and
or
add
fsts
mov
pop
cmp
mov
pushf
mov
or
mov
jecxz
js
mov
out
ljmp
out
add
dec
je
icebp
xchg
jmp
and
loope
cwtl
mov
xchg
mov
daa
enter
test
adcl
xor
push
adc
xor
mov
popa
mov
int
push
mov
test
adc
stos
push
mov
pushf
lods
pop
add
test
cwtl
cmp
push
loope
push
push
bound
test
push
shr
adc
mov
cmp
cmpsl
stc
push
jg
out
inc
test
add
out
push
aam
mov
mov
inc
rcrl
fiadds
xor
test
cmp
mov
test
subl
jmp
add
add
lret
push
pusha
ljmp
imul
mov
sysret
push
sub
in
cmp
jns
fsubp
lods
pop
mov
notb
inc
mov
call
xor
xor
jnp
inc
pop
insb
cli
test
dec
ljmp
out
sbb
or
xchg
imull
push
test
lods
test
push
nop
aaa
arpl
loop
pop
adc
sub
inc
mov
mov
push
sbb
cmp
jo
movsb
dec
cli
pop
inc
mov
cwtl
sbb
lds
mov
popa
into
push
xor
cmp
cmp
inc
jmp
pop
jle
jbe
fdivs
push
mov
lcall
rcr
scas
cli
int
insl
iret
mov
test
add
mov
stc
daa
ja
and
imul
lock
cmpsb
jecxz
lahf
mov
jle
jp
in
jg
or
xchg
loop
push
mov
test
pop
pop
dec
mov
stos
pop
xchg
loope
fisubl
stc
fs
fmuls
aaa
mov
scas
inc
inc
xchg
js
jg
rorl
roll
ds
imul
jnp
jmp
xchg
push
push
push
xchg
test
or
aaa
lods
xor
sub
sbb
or
insl
dec
addl
dec
popf
inc
jle
in
sbb
push
aad
dec
xor
dec
int
mov
mov
lcall
dec
in
in
imul
cmp
xchg
add
sbb
adc
push
sub
out
cli
lahf
es
pop
mov
mov
xchg
add
add
int3
pop
jae
cs
imul
outsb
fisubrl
mov
inc
ss
dec
mov
inc
dec
sub
daa
mov
pop
cmpsl
in
mov
mov
jle
dec
cwtl
xor
mov
std
idiv
repz
cmp
out
ret
loop
push
test
jb
xor
sub
mov
shlb
ffree
shrb
mov
sarb
movsl
add
mov
push
pop
cmp
ret
lds
jnp
pusha
cli
mov
sub
mov
cmp
pop
mov
pop
leave
mov
or
push
pusha
lods
pusha
pop
mov
add
rolb
out
mov
inc
push
gs
out
cli
sti
pop
int
mov
xor
jmp
int3
push
push
ret
jne
std
cmpsl
sar
or
movsl
pop
mov
call
test
push
ret
popf
xor
clc
cmp
sub
lcall
add
pop
lahf
popf
in
testb
jp
hlt
fchs
pop
cwtl
into
or
loopne
icebp
jmp
or
dec
sbb
clc
xchg
daa
pop
data16
fidivl
sub
and
lcall
dec
sub
mov
stc
shll
mov
jae
xchg
fistpl
lods
stos
cmp
and
pop
insb
in
data16
xchg
push
mov
xor
lds
lds
mov
cmc
fmull
mov
and
notl
imul
inc
lret
out
test
mov
mov
scas
mov
movsb
adc
push
jno
jo
cwtl
fmuls
ret
and
in
mov
iret
add
enter
scas
mov
mov
fdiv
sub
les
inc
inc
aad
xchg
std
xor
inc
add
dec
mov
movsb
ja
or
in
arpl
ret
outsl
push
adc
xchg
les
sbb
xor
dec
push
sar
xor
jo
fs
fldt
leave
mov
outsl
rorl
fdivp
daa
sub
adc
shlb
xchg
adc
ror
mov
push
or
aam
dec
add
add
sub
sbb
mov
xor
xchg
xor
call
and
inc
mov
stos
addr16
mov
es
loop
aam
bound
dec
add
sbb
das
and
mov
ja
popa
and
lret
add
mov
out
cmp
bound
insb
push
addr16
push
pop
in
loopne
sbb
repz
movsl
in
jmp
inc
add
int
std
adc
fdivs
push
dec
jecxz
cwtl
mov
mov
out
push
jns
out
mov
cmc
test
jge
xchg
and
scas
out
pusha
mov
xchg
arpl
xor
xor
lret
bound
fists
outsl
fs
inc
loopne
dec
data16
fists
rcll
push
xchg
dec
xor
test
roll
inc
mov
insl
sub
insb
jo
add
sarl
jbe
mov
lcall
subl
iret
lcall
xlat
xchg
stos
cld
cmp
push
jo
inc
ss
mov
cmp
or
loop
or
insb
or
adc
adc
add
fmull
push
jae
pop
and
ljmp
clc
lock
jno
xor
pop
dec
mov
adc
dec
sbb
adc
lcall
shlb
notl
pop
sub
movsl
bound
into
ja
in
mov
xchg
mov
in
mov
mov
test
pop
mov
enter
sub
jge
rcr
xor
sar
ret
repz
sbb
fbstp
xor
jb
xchg
imul
ja
pop
push
test
pop
test
push
daa
sub
push
gs
bnd
jecxz
lcall
adc
adc
xor
pop
cmpsb
imul
cmp
jne
rorb
nop
jle
jbe
lret
adc
xor
sbb
add
sbb
sbb
outsb
jl
ret
jne
leave
fldt
movsl
repnz
inc
or
je
clc
add
dec
data16
cmp
lcall
jle
out
aaa
pop
or
cmc
sarl
xor
cmc
cmc
test
fcoms
lcall
mov
cld
mov
fsub
jo
jecxz
lret
sbb
icebp
sub
andb
daa
xor
xor
jl
mov
clts
int3
sub
nop
cmpsl
cmp
add
or
in
inc
xchg
mov
aam
fmull
sbb
or
aaa
mov
pop
or
adc
cld
jnp
dec
jnp
iret
mov
fdivrl
aam
in
jns
xlat
das
sub
jne
inc
pusha
sub
pop
push
add
jbe
push
xchg
inc
icebp
push
outsb
mov
jmp
rclb
push
filds
int3
mov
inc
in
mov
xchg
push
and
dec
mov
push
mov
insb
out
dec
in
cli
adc
sub
sbb
addb
inc
mov
addb
repz
sbb
bound
roll
es
outsl
push
xchg
cli
xor
push
push
lahf
cmpsb
pop
int
or
adcl
jae
xchg
xchg
mov
mov
sahf
sbb
inc
mov
pop
or
adc
stos
imul
in
pushl
dec
lock
add
sbb
repz
test
lea
jg
fistl
repz
mov
or
cltd
mov
mov
mov
addb
pop
inc
xchg
xchg
cli
test
loop
sub
enter
xchg
cmp
mov
hlt
lret
lret
jo
inc
xchg
pop
or
lret
or
pop
push
notb
and
dec
mov
sarl
and
dec
arpl
xchg
in
jae
cmp
sahf
sub
xchg
aaa
es
add
mov
push
mov
mov
xor
es
decb
sbbb
lea
lahf
dec
std
xchg
sub
xchg
mov
inc
insb
pop
rol
les
xchg
add
xor
mov
push
addb
mov
cmp
dec
imul
les
push
repnz
sub
repz
ljmp
sub
push
mov
lods
mov
enter
inc
add
cmp
aaa
cmp
sbb
pop
shll
jg
mov
in
jge,pn
add
fs
aas
insb
and
fdivl
das
or
and
lods
jp
sti
fdivs
or
inc
push
sub
jo
in
mov
ret
divl
test
jnp
fstps
or
push
add
cmpsl
stos
dec
cmp
mov
xchg
outsl
fnstcw
push
adc
inc
sub
pop
out
dec
dec
dec
pusha
outsl
mov
fadd
xchg
ljmp
ds
push
dec
jae
mov
mov
cwtl
repz
push
jl
jge
movsb
dec
dec
insl
jb
mov
pop
ret
fsubs
cmp
cmpb
inc
push
pop
mov
and
pop
jae
stos
sub
movsb
jle
mov
sbb
cwtl
pop
mov
xor
stos
cmp
or
jnp
in
into
push
dec
dec
and
adc
jno
inc
fcomp
push
out
dec
mov
add
lcall
xor
inc
rolb
movsl
cmp
mov
mov
push
push
test
push
jg
subl
bsr
cli
sub
xchg
mov
lret
scas
mov
sti
dec
jnp
jl
outsl
imul
inc
insb
insl
js
mov
xor
lods
xchg
mov
cmpb
aam
add
or
jnp
dec
lods
push
or
mov
push
cmp
add
push
and
lcall
or
cltd
xchg
negl
add
adc
dec
daa
pop
push
roll
cmpl
dec
adc
int3
mov
jg
lea
xchg
dec
sub
push
fsub
je
ljmp
ja
mov
dec
inc
jl
cli
mov
mov
jle
mov
pop
mov
mov
mov
mov
mov
pop
cmpsb
pop
jo
jae
mov
jp
shrb
mov
and
je
xor
pop
xchg
popf
movsl
adc
push
aad
cmpsl
ret
dec
rcll
daa
inc
mov
cmp
push
daa
sbb
push
adc
and
loop
das
loope
pushf
and
push
rcrl
xchg
mov
xchg
lods
sbb
mov
imul
cs
leave
or
jo
cmp
jb
sbb
mov
push
imul
popa
add
push
sub
push
imul
in
pop
mov
mov
sahf
and
sti
push
ret
push
shrl
aam
iret
and
xchg
cmp
or
popf
sub
pushw
cwtl
push
lret
adc
inc
dec
adc
fwait
inc
mov
mov
pop
xchg
push
sbb
sbb
popf
int
inc
rcrb
faddl
lret
mov
pushf
sub
mov
jnp
mov
and
mov
xor
xor
inc
push
mov
out
aas
mov
popa
xor
xchg
test
in
out
mov
cltd
xor
push
pushf
cmp
mov
add
cmp
or
ret
rolb
jp
fstps
jge
sbb
movsl
or
enter
pusha
shr
adc
enter
cmpsb
sbb
and
or
loop
sbb
les
cmp
mov
shrb
cwtl
insl
mov
dec
pop
sbb
inc
movsl
jne
sub
stos
push
ja
adc
xchg
test
lret
mov
mov
in
stos
inc
popf
mov
mov
adc
jg
mov
test
repz
or
dec
in
mov
xor
dec
mov
nop
jne
lea
xor
xchg
jbe
mov
mov
push
decl
in
pop
std
mov
sub
repz
push
mov
inc
test
loope
or
loopne
pop
mov
movsl
sbb
scas
xchg
adc
ja
sub
sbb
inc
inc
lock
mov
sti
cmp
jo
popf
dec
cmp
loope
push
push
adc
xchg
stos
adc
in
ret
movsb
lea
jge
add
lock
mov
or
call
mov
test
xchg
aad
movsb
inc
inc
mov
movsl
repnz
dec
mov
xor
mov
popf
cmc
icebp
add
ss
adc
or
fidivrs
xor
mov
sbb
outsl
sti
or
xor
mov
in
gs
cmp
cmp
inc
push
cli
mov
mov
pop
gs
ret
lods
in
in
jle
and
mov
jbe
xchg
aas
push
xchg
pop
jge
xor
push
fstps
iret
sahf
std
fimuls
cmc
pop
xchg
das
and
test
mov
jmp
int3
pop
push
insl
fcoms
in
cwtl
dec
adc
dec
loop
arpl
add
lock
int
jecxz
mov
scas
sbb
in
cmp
enter
fiadds
out
int3
outsb
mov
jmp
nop
sbb
add
std
adc
xor
push
xchg
push
and
add
cmp
mov
mov
sub
stc
mov
inc
ficompl
mov
mov
loop
repnz
outsl
pop
movsb
pushf
out
fcom
pop
xchg
mov
or
fidivrl
jp
cmpsl
or
pop
and
cltd
mov
push
shl
mov
inc
aad
mov
add
inc
or
and
test
xor
popf
and
xchg
imul
xchg
rep
cmpsb
mov
into
or
and
jg
jne
xor
mov
pop
fisttpl
lea
jmp
inc
pop
movsb
loopne
sbb
mov
imul
stc
repz
mov
inc
adc
mov
cmp
push
mov
jnp
jbe
xchg
out
popa
je
mov
fcmovne
dec
lea
sbbl
mov
std
adc
add
dec
mov
cmp
aaa
push
mov
fimull
imul
leave
scas
popf
int3
je
dec
ret
les
adc
push
mov
mov
cmp
xlat
cmpsl
mov
push
adc
mov
jp
push
adc
fstps
inc
push
repz
pusha
sbb
xchg
mov
cmp
int3
mov
enter
adc
and
icebp
jmp
sub
movb
rcrl
adc
inc
das
cmp
mov
in
iret
add
in
inc
and
add
test
movsb
idivl
cmpsb
loop
scas
lods
ss
push
mov
je
fs
test
stos
jbe
movsl
cmpsl
add
outsl
fcoml
jns
fidivs
xor
test
xchg
dec
in
mov
add
mov
dec
lea
shll
and
pop
adc
or
pop
pop
xchg
mov
inc
lcall
mov
inc
inc
sbb
fs
outsl
mov
xchg
repnz
iret
jg
sbb
adc
sbb
testb
divl
push
sti
fld
and
repz
sub
adc
pop
mov
pop
mov
test
loop
movsl
fsubr
jb
mov
mov
in
adc
jle
imul
mov
push
sub
in
clc
lods
sbb
jg
scas
sub
ja
sbb
jb
insl
cmp
dec
aaa
xor
jg
in
loope
xor
xchg
lret
and
xchg
dec
dec
and
int3
sbb
int3
lock
xchg
fcmovb
or
stos
jnp
test
xchg
mov
sbb
ds
hlt
inc
jle
mov
sbb
daa
dec
cmp
mov
xchg
xchg
hlt
cltd
and
xchg
out
mov
out
xor
rclb
loope
cld
shrl
std
xchg
push
movsb
xchg
xchg
jns
inc
pop
test
sbb
cmc
jecxz
cmpsl
pop
xchg
add
test
sub
mov
sbb
imul
into
and
in
push
sbbb
pop
xlat
push
mov
pushf
dec
sbb
ljmp
hlt
push
rcrl
jnp
shlb
les
inc
mov
mov
push
lret
mov
pop
xchg
je
insl
adc
xor
cltd
fidivrs
rorl
or
xor
xor
mov
fwait
xor
sub
shrb
leave
ds
aad
outsb
gs
mov
pop
add
aaa
xchg
add
mov
cltd
arpl
subb
loop
xchg
pop
pop
rcrb
outsl
sub
cmp
sbb
insl
mov
adc
add
xchg
insb
arpl
lock
movsb
loope
popa
ds
push
dec
dec
mov
imul
scas
pop
mov
out
or
cltd
out
sbb
stos
lret
shll
add
imul
scas
xchg
pop
fsubrs
loopne
xor
repnz
or
loopne
aas
lds
rorb
mov
cmp
fcomps
repnz
cld
adc
mov
sub
clc
lods
cs
je
jne
gs
sbb
pushf
loope
mov
jge
jecxz
lcall
push
sub
popf
lods
dec
ljmp
je
xchg
inc
mov
push
mov
cmp
repnz
adc
jg
sbb
negb
adc
sub
and
pop
popa
xchg
orl
mov
inc
adc
lret
sub
jecxz
insb
xchg
stc
cli
mov
test
cmc
pop
jl
fwait
push
in
les
inc
jge
sbb
add
push
stc
stos
movsl
jo
popf
sbb
or
jmp
jnp
sbb
in
rorb
push
ret
inc
dec
xchg
hlt
std
and
push
sbb
sahf
fisubs
xor
ja
mov
jnp
push
push
xchg
aaa
sbb
test
mov
mov
scas
enter
dec
pop
hlt
data16
fwait
cmp
loope
or
adc
insl
scas
or
lahf
pop
xchg
and
sbb
arpl
mov
aas
fwait
jno
popa
add
xor
xor
push
dec
sbb
xor
sub
jge
push
mov
popf
mov
push
xchg
dec
push
cmp
mov
stos
mov
cmpsb
sbb
mov
jge
pop
jbe
dec
and
test
ret
xchg
add
int3
jnp
add
out
and
xor
loopne
push
dec
push
insl
sub
ss
sbb
ret
mov
test
ret
sub
testb
dec
in
sub
sub
cmp
and
dec
push
mov
cmp
out
or
mov
pushf
adc
scas
aad
orl
insl
and
int3
and
js
mov
daa
pop
cltd
cmp
jnp
inc
out
xor
lods
cmp
outsb
lcall
out
fsts
add
in
jno
mov
dec
xchg
pop
cmp
sbb
gs
cs
xchg
leave
lea
mov
std
and
xor
cmp
fisttpl
adc
xor
and
mov
adc
test
test
cld
les
shlb
sarl
stos
iret
xchg
stos
movsl
xor
out
nop
cltd
es
insl
call
je
mov
inc
cmp
sub
inc
in
jle
iret
subb
add
popa
or
pop
dec
ret
cld
push
or
mov
ret
lcall
mov
pop
fstps
xorb
cmp
or
inc
iret
push
sbb
cltd
or
or
std
sub
insl
or
and
jecxz
push
arpl
adc
mov
mov
sbb
data16
aad
xchg
imul
push
dec
out
imul
inc
stos
pushw
mov
jo
repnz
xchg
adc
adc
in
mov
pop
in
cmp
or
pusha
lret
lods
mov
xchg
xchg
sub
shlb
and
fcomps
pop
jb
leave
fstpt
xchg
mov
pusha
jno
adc
dec
push
pop
popa
div
lcall
mov
dec
dec
jl
loopne
es
and
shlb
adc
test
out
and
xchg
mov
sub
push
cli
lret
sbb
pop
mov
out
xchg
hlt
aas
popf
or
add
fdivrp
rcr
test
sbb
mov
mov
mov
hlt
add
mov
nop
out
out
sub
inc
mov
add
sbb
add
mov
jo
add
mov
fst
mov
test
mov
fwait
sub
sbb
lods
loope
icebp
sbbl
aaa
mov
sub
in
je
dec
adc
pusha
mov
push
cltd
fidivrl
mov
sti
dec
mov
or
orb
lea
dec
inc
inc
mov
hlt
xor
dec
jp
cmpsl
sub
or
push
mov
push
pop
inc
mov
mov
jae
xor
arpl
push
aaa
xchg
add
xorl
js
mov
mov
inc
roll
xor
xor
inc
insb
mov
xor
out
hlt
data16
mov
stos
sub
push
mov
pop
leave
xchg
and
bound
adc
repnz
xor
cs
sbb
ljmp
out
push
mov
fmul
sub
jo
cwtl
pop
sarb
mov
jae
push
cmp
fldenv
aaa
xchg
jb
stos
cmpsb
rorb
insb
notl
aam
mov
scas
or
frstor
xchg
xchg
imul
xorb
lcall
mov
xor
xchg
mov
mov
xor
cmp
stos
not
jle
test
xchg
push
cwtl
cmp
adc
in
sbb
movsl
adc
loope
loopne
jb
mov
mov
popf
hlt
mov
out
repnz
jmp
mov
mov
mov
out
sbb
mov
sti
mov
jne
shll
arpl
and
rol
mov
dec
jp
jno
and
mov
jp
push
lods
ficomps
jb
sub
bound
lea
iret
cld
pop
mov
ret
pop
xchg
call
sahf
pop
imul
scas
sub
xor
mov
inc
ror
cmc
cld
inc
daa
add
jns
ficoml
jae
pushf
rclb
stos
fs
shll
xor
jge
xchg
fs
pushf
xchg
sub
push
add
cmp
cmp
sub
push
jmp
pop
and
pop
popw
mov
popl
mov
aas
jmp
stos
jno
sbb
test
shll
xchg
mov
ss
xchg
or
adc
xor
sub
scas
pop
out
jle
jg
push
lods
lods
jle
ljmp
std
stc
mov
inc
dec
inc
ret
xor
lahf
mov
movsb
xchg
hlt
std
jle
cli
scas
pop
sub
or
jns
inc
int3
and
sbb
push
lcall
lods
mov
fstpl
sbbb
mov
xor
or
sub
cwtl
shrb
pushf
bound
lcall
xchg
les
sbb
push
mov
mov
xor
daa
movsb
or
sbb
push
mov
inc
rcrb
push
out
cmpsl
adc
jle
inc
sbb
dec
neg
fdivrs
push
outsl
fldenv
fmuls
xchg
call
mov
mov
scas
jbe
mov
loop
xlat
movsl
mov
rcl
ljmp
mov
ret
push
ja
mov
lahf
bound
inc
jne
aam
mov
in
lds
sub
dec
gs
push
int
fwait
and
xor
ret
mov
scas
ret
call
popa
test
fs
int
pop
movsl
imul
scas
mov
or
jle
or
fisubrs
stc
leave
push
and
dec
cli
mov
stos
popa
inc
jae
shrl
out
lods
mov
jmp
or
scas
int
push
jge
jne
xchg
jp
or
ret
adc
sti
daa
lret
pop
gs
cmc
pop
and
aaa
call
imul
rclb
xchg
and
mov
mov
inc
cmc
inc
xchg
icebp
ljmp
ds
aam
xchg
sbb
clc
or
out
leave
xchg
in
cld
jnp
mov
add
xchg
js
sbb
int3
sub
pop
out
jae
inc
imull
cmc
sbb
jl
dec
pushf
nop
jp
cmp
sub
add
lcall
or
cmp
scas
inc
jle
xor
and
xchg
xchg
inc
test
data16
or
fs
fsub
push
nop
mov
adc
stos
mov
mov
xchg
mov
cwtl
test
push
inc
popa
lods
fcmovu
scas
pop
lret
outsb
push
jmp
clc
mov
sbb
imul
jbe
scas
lock
bound
jbe
cmp
add
imull
sbb
mov
add
mov
jns
loop
and
daa
cmpb
add
imul
add
pusha
dec
or
adc
sarb
mov
imul
sub
arpl
enter
stos
jl
clc
or
insl
int3
adc
xchg
mov
outsb
ret
in
mov
and
leave
or
scas
push
jmp
jne
cmpsb
or
std
inc
adc
ljmp
pop
or
icebp
push
sub
cmpsb
call
arpl
xor
addl
mov
dec
imul
repnz
xchg
dec
jnp
sub
cmpsl
and
bound
push
ficoml
arpl
push
shr
stos
cld
and
add
notb
mov
mov
sbb
push
mov
iret
imul
sub
jle
notl
lods
decl
movsl
fchs
shll
mov
pop
cli
xor
aaa
pusha
or
leave
or
mov
test
repnz
mov
push
sbbl
pop
in
pop
insl
in
push
aad
lea
scas
adc
push
push
push
movsb
call
fwait
ds
inc
pop
xor
movb
fbld
xorb
add
out
mov
mov
inc
ljmp
cmp
cmp
aas
lea
lods
divl
insl
fdivrl
fisubrl
push
adc
shll
int
movsl
je
pop
sbb
mov
mov
insl
cwtl
adc
dec
mov
imul
adc
in
jnp
rcrb
mov
xchg
aas
inc
je
cmp
lret
leave
pop
dec
jnp
scas
shll
iret
jmp
pop
cmpl
push
xor
sub
sub
divb
daa
lea
push
in
aaa
les
dec
dec
xlat
dec
xchg
pop
xor
xor
std
in
and
mov
data16
jecxz
hlt
in
aaa
mov
mov
adcl
ret
mov
xchg
fisubl
and
pop
ror
jb
fwait
dec
sub
pop
lds
push
pop
stos
test
popl
or
sub
hlt
sbb
andb
pop
outsl
xchg
jo
loop
xchg
sbb
lds
clc
push
xor
push
or
jmp
add
in
xor
sahf
out
mov
sbb
lods
sub
test
scas
lahf
popa
mov
loopne
ja
testb
cmp
sub
imulb
dec
push
cltd
mull
jmp
and
push
adc
push
push
stc
rclb
movsb
adc
cmp
lods
xor
or
fdivl
sbbl
mov
packssdw
or
mov
or
dec
cmc
add
sub
in
inc
dec
jg
push
sar
push
xchg
fucom
movb
rcll
fdivrl
jb
jnp
mov
jae
inc
push
stos
in
ljmp
nop
cmpsb
imul
daa
pop
mov
fisubrs
jmp
pop
mov
mov
pop
pop
and
cmp
push
jp
outsl
mov
cli
data16
inc
ds
add
and
jge
movl
dec
jno
jb
je
xchg
rol
add
pop
xor
hlt
xor
insl
mov
mov
bswap
pop
xlat
or
pop
mov
jp
cwtl
sbb
mov
inc
push
jae
pop
repz
push
push
addr16
push
mov
xor
lock
push
lock
sbb
negb
and
push
ljmp
adcb
push
int3
hlt
out
cwtl
push
dec
xchg
and
addr16
adc
mov
insl
adc
sub
fs
int3
xchg
movsb
inc
mov
inc
dec
sbb
pop
jnp
stos
shl
xor
xchg
lea
push
sbb
adc
ja
lds
cmpsb
rolb
sub
jne
sub
lock
cmp
dec
inc
mov
xor
jge
fnstenv
xchg
adc
adc
mov
mov
jne
sti
cmc
sub
repz
faddp
sub
dec
push
popf
xchg
jb
std
mov
xlat
stos
jge
loope
aam
and
gs
xlat
xchg
mov
jae
push
aaa
adc
lret
xor
das
adc
hlt
shlb
mov
and
call
in
inc
mov
pop
fwait
pop
push
imul
mov
cli
lods
sbb
lea
addl
stos
add
cmp
aad
mov
push
fnstcw
outsb
mov
scas
mov
jae
fistps
cltd
and
mov
shr
push
je
xchg
call
andb
and
dec
mov
test
iret
push
and
xchg
fbstp
js
push
bound
fidivl
inc
add
out
xlat
nop
xchg
mov
negb
aam
push
icebp
cmc
fidivrs
lea
jecxz
insb
arpl
push
pusha
cs
mov
fwait
mov
or
sbb
fldcw
sbb
lds
mov
sub
aad
dec
mov
les
call
jne
cld
jbe
or
sbb
xor
cmpsb
hlt
add
or
pop
orb
out
decl
es
pop
push
aaa
xor
fstpt
loope
pop
pop
fstl
leave
mov
xor
mov
imul
ljmp
cmpl
jb
or
pop
cld
dec
pop
cmpsb
sti
movsl
fwait
out
popf
dec
push
push
lods
dec
sbb
mov
jno
push
push
movb
push
sbb
dec
ljmp
mov
loopne
aad
mov
cmp
push
xchg
xor
cmp
or
gs
jg
pop
mov
adc
test
in
stos
rorl
inc
adc
in
loop
mov
pop
rcrl
pop
dec
dec
cmp
inc
pop
ja
or
call
inc
lds
ficoms
dec
add
mov
xchg
xchg
or
pop
sub
pop
add
sbb
add
les
cmc
or
addr16
hlt
and
movsb
jecxz
sbb
imul
loope
cmpsl
xorb
pop
cmp
pop
ret
in
inc
out
nop
data16
out
pop
mov
sub
mov
sub
pop
repnz
cmp
dec
jbe
out
loop
icebp
in
adc
into
cmpl
lahf
and
leave
scas
loop
or
mov
lahf
adc
and
dec
mov
push
mov
xchg
mov
add
adcl
inc
jmp
popa
jmp
or
addps
jecxz
in
das
xor
cmpsb
jmp
or
cmp
mov
lret
addr16
movsl
shrb
cwtl
cmc
decl
into
test
repnz
stos
adc
adc
lock
stos
ret
sbb
push
mov
mov
xchg
aad
xchg
push
ds
xchg
into
xor
aaa
xchg
movsl
pop
sti
mov
pusha
mov
scas
test
mov
cwtl
out
sarl
mov
mov
test
dec
pop
mov
cmp
or
inc
sti
lock
push
push
aam
movsb
and
push
push
or
push
dec
mov
gs
repz
lret
loopne
fisubl
cmpsb
adcb
hlt
mov
aas
xor
mov
mov
jbe
sbb
pop
call
inc
cld
fisubrs
jmp
int3
mov
lahf
dec
mov
jmp
sti
sar
pop
popf
dec
add
clc
iret
inc
mov
push
push
out
or
xor
cmc
inc
insb
dec
dec
fsub
ss
jae
mov
cmp
adc
dec
push
es
sbb
push
aam
in
imul
mov
cmp
pop
js
dec
adc
popf
pushf
push
leave
pop
add
addr16
cmove
mov
sbb
mov
jb
mov
xor
test
pop
mov
and
test
hlt
dec
and
cmp
pusha
or
rcrb
bound
push
mov
push
or
shrb
dec
adc
push
pop
int
and
sbbb
sub
pop
jo
stc
movsl
loope
jge
enterw
rolb
sbbl
loope
fsubl
or
add
xchg
or
cs
jns
mov
fnstenv
cmc
sbb
icebp
das
stos
sbb
push
mov
lcall
jb
imul
fimull
cmp
push
lahf
movsb
loopne
xor
jns
sbb
jbe
inc
jle
je
xchg
xor
push
mov
inc
lds
inc
arpl
scas
fcomip
scas
in
fisttpl
xchg
lods
pop
addr16
push
cmp
sub
or
movsb
inc
daa
push
subl
sbb
push
mov
bnd
orb
mov
shlb
fstpt
mov
insb
arpl
stc
ds
add
mov
dec
jle
mov
inc
and
out
dec
push
pop
leave
test
outsb
mov
ret
mov
fs
cmpsl
xchg
jns
push
ljmp
lods
xorl
pop
cmp
xchg
icebp
outsb
mov
push
loope
fwait
mov
insb
jge
xchg
jl
inc
mov
xchg
repnz
sub
jno
push
test
repz
xor
xorb
add
and
das
sysret
or
push
nop
inc
sbb
or
int
aaa
nop
ss
push
sub
xchg
test
rorb
sbb
lahf
repz
cmpl
dec
pop
gs
and
cs
lcall
jb
adc
dec
test
dec
rorb
pop
fists
daa
fs
out
inc
inc
push
and
add
vcvtss2si
lcall
test
dec
inc
popa
push
mov
jmp
lahf
add
outsb
pusha
pushf
push
xor
adc
jl
in
sub
lock
mov
push
lahf
movb
xchg
pop
loope
push
sub
add
mov
in
setnp
pop
or
jle
adc
fwait
add
add
aad
ss
xchg
add
jno
or
int3
push
cltd
pushf
pop
or
adc
cmc
jge
movsb
bound
lea
add
lods
data16
iret
lahf
xchg
pop
and
or
adc
cmp
inc
outsb
adc
xchg
mov
xor
sub
lock
mov
popf
mov
stc
cmc
shrb
lock
jbe
fdivrs
pushw
int
fwait
out
adc
lcall
jno
nop
loop
jg
fstl
mov
xor
sbb
insb
xlat
xchg
in
inc
loop
push
mov
xchg
pop
inc
imul
xor
push
add
mov
xchg
push
nop
inc
jns
push
xor
sub
fwait
sahf
loope
sahf
das
pushf
dec
fnstenv
or
in
movsb
xor
arpl
or
xchg
push
xor
dec
mov
lret
fstpt
cwtl
rorb
add
xchg
sbb
mov
ljmp
shll
jle
xchg
leave
test
mov
dec
outsl
lret
mov
xchg
scas
je
jbe
out
stos
mov
xchg
jg
xchg
gs
fwait
xchg
jle
and
shll
jmp
cmpsl
sahf
cltd
push
and
inc
add
xchg
les
imul
fiaddl
push
push
inc
repz
test
bound
jns
popf
mov
loop
cwtl
xchg
outsl
sub
fsubrl
inc
xor
insl
mov
push
inc
fwait
inc
mov
idiv
or
and
imul
jecxz
shrl
cmpb
test
sub
add
mov
mov
fbld
lret
cmc
subl
cltd
outsl
popf
and
add
je
loop
das
imul
mov
or
aam
sub
adc
jo
adc
cltd
sbbb
sub
loop
dec
inc
push
inc
subps
jge
lock
jo
xor
loope
cltd
nop
cwtl
bound
inc
pushf
pushf
mov
jno
pop
push
vpsubsw
add
add
push
add
mov
ljmp
inc
xorl
aaa
js
in
mov
push
das
pop
push
xor
jnp
lret
sub
xor
xor
push
test
pop
cltd
and
dec
sbb
mov
jmp
mov
jns
testl
orl
dec
les
add
sti
leave
notl
inc
test
mov
dec
cld
pop
or
pop
lret
or
js
bound
cmp
icebp
push
push
xor
gs
sub
lock
gs
pop
jbe
jne
jbe
ficomps
and
inc
hlt
pop
mov
stc
in
push
jbe
and
std
lcall
or
mov
pop
or
push
or
addr16
add
cmpb
or
orb
or
ror
cmp
inc
mov
popa
mov
mov
lods
shl
enter
loope
int3
test
add
xlat
mov
fcmovu
addr16
sti
mov
sbb
arpl
xlat
leave
movsl
xor
stos
sub
cltd
xchg
shll
push
aaa
addr16
sbb
out
stos
insb
push
adc
sbb
aam
mov
roll
lahf
mov
pusha
mov
mov
inc
inc
xor
cmp
sbb
fsubrs
js
and
ret
clc
push
pushf
jl
das
lahf
in
call
cmpsb
cmpsb
dec
dec
bound
fxch
cmp
gs
loope
faddp
lds
das
add
dec
mov
insb
fbstp
movsl
sbb
lret
sbb
test
lret
push
leave
or
rol
mov
cwtl
or
repnz
mov
jmp
cmc
fildl
jp
pop
push
push
scas
add
rcrl
or
jbe
pop
sub
adc
sub
iret
out
icebp
jnp
mov
aaa
xor
xchg
cli
pop
inc
repz
adc
sbb
jae
mov
sar
ds
add
in
sub
mov
shl
or
mov
loope
shlb
pusha
lret
jne
test
rorb
int3
or
xchg
hlt
out
pop
dec
cmp
fcmovnbe
jp
mov
dec
insb
dec
lret
arpl
sbb
xorb
dec
mov
repz
lods
clc
cli
sub
je
pop
dec
add
dec
ss
sbb
push
movsl
xchg
mov
icebp
jae
ret
mov
xchg
movsb
test
shll
int
pop
iret
pushf
jp
out
jns
stc
fidivrs
popf
xor
xor
pop
rcr
cwtl
and
pop
lret
xor
cmp
inc
mov
hlt
sbb
gs
pop
fcoml
icebp
xor
cmp
les
push
mov
and
pop
fisubs
or
ljmp
inc
lahf
cmp
xlat
insl
repnz
insb
xor
inc
sub
and
fs
pop
iret
add
jle
lcall
out
mov
daa
or
jmp
iret
test
cltd
inc
scas
jnp
mov
das
cmp
mov
jno
clc
lcall
in
outsl
loop
sbb
jno
iret
jg
dec
hlt
sub
add
jno
cld
lcall
insl
sahf
cltd
aad
mov
pop
stos
push
imul
test
into
out
mov
mov
or
movsb
mulb
mov
lret
aam
inc
add
imul
sbb
out
mov
and
dec
outsb
mov
ret
les
sahf
xor
pop
xor
aam
mov
pop
sbb
push
enter
push
ret
movsb
ss
xchg
int
leave
inc
push
dec
jmp
repz
push
mov
xchg
addl
je
test
pop
stc
cmp
icebp
or
fdivr
push
add
or
inc
jae
decl
ret
and
pop
push
and
aaa
cmpsb
pop
mov
jle
repz
shl
std
inc
inc
fldenv
lahf
cmpl
mov
aad
jecxz
sub
jnp
mov
pop
inc
call
push
imul
mov
cmovg
dec
xchg
xor
push
and
leave
pop
add
in
add
outsb
mov
mov
add
adc
rorb
test
inc
testl
adc
add
stc
sbb
shll
inc
shr
enter
or
int3
mov
xchg
jno
mov
mov
xor
mov
fwait
leave
sub
adc
sub
mov
push
and
insb
jae
add
popl
inc
lods
push
add
and
push
sbb
insl
pusha
lea
add
mov
fcompl
mov
in
rolb
in
ret
imul
xchg
jmp
call
add
mulb
and
dec
imul
mov
adc
push
popa
jae
dec
push
and
stos
int
stos
jl
mov
ljmp
mov
leave
dec
into
sub
fsubl
setns
adc
xor
popa
xor
ljmp
lods
and
add
pop
leave
push
sub
sub
sbb
jl
ljmp
leave
dec
iret
push
inc
lret
sbb
or
repnz
sahf
decb
push
push
add
ss
jl
and
repz
xor
push
notb
fistps
daa
into
sbb
sub
push
ja
xchg
ljmp
notb
movsb
and
push
xchg
mov
jl
xchg
dec
jp
out
jns
and
js
popf
lahf
sbb
repz
cmpsl
loope
aaa
lret
fisttpl
ret
cli
or
xchg
fistpll
or
xor
xchg
pop
xchg
sti
aas
push
hlt
jge
ret
scas
inc
pop
mov
sahf
jp
pop
fisttpl
add
inc
fiaddl
out
pop
adc
dec
jnp
add
outsb
sub
cwtl
xchg
pop
mov
pop
mov
jo
pop
mov
test
xor
and
push
lds
imul
xchg
aad
fs
or
pop
dec
mov
adc
insb
xor
ljmp
sbb
push
jecxz
enter
in
lahf
cvtps2pd
cwtl
fnstsw
xchg
cmp
cmp
cmc
subl
cmp
lret
lods
lahf
lcall
add
inc
sbb
idiv
inc
dec
shlb
add
pushf
std
addr16
push
jl
sbb
xchg
gs
mov
push
push
mov
orb
xor
cli
dec
cmp
std
outsl
add
fbstp
out
mov
jo
jnp
mov
fisttpll
dec
pop
rcl
jbe
je
dec
cmp
outsl
xchg
pop
data16
xor
sbb
pop
fwait
repz
jp
cmp
xlat
popa
lret
les
ret
incl
sbb
mov
into
popf
inc
add
or
lds
pop
or
mov
out
or
flds
scas
jcxz
add
je
insb
in
decl
add
ja
fistps
push
xchg
jo
and
adc
xchg
mov
lcall
mov
xor
icebp
mov
add
lcall
add
mov
movsl
out
leave
xor
jb
roll
loop
adc
mov
movsl
sbb
xor
aad
jo
lret
or
insl
test
scas
dec
popf
ss
cmpb
mov
orb
js
cmp
cmpb
cmp
adc
out
mov
and
int
sahf
mov
loopne
adc
push
pop
xor
insb
or
out
cmp
cmp
repz
fcmovu
movsl
xchg
pop
push
rorb
pop
ja
inc
xchg
push
sub
and
out
dec
js
dec
test
sbb
sbb
sub
sub
xor
sti
orb
test
cli
dec
mov
daa
insb
pop
inc
lret
in
inc
movzbl
push
jge
xchg
push
lds
mov
fldl
cmp
jnp
pop
adc
fwait
mov
sub
pop
xor
je
inc
xchg
inc
sti
jge
mov
std
pop
movsb
and
out
or
jo
clc
js
fsubrs
ss
adc
movl
insb
andl
test
pop
push
dec
daa
imul
or
hlt
xor
gs
inc
daa
and
jae
mov
jge
dec
sub
test
je
mov
pop
rclb
push
pop
or
jl
push
sahf
mov
push
pushf
sahf
push
arpl
leave
push
jne
fistpl
pop
or
movsb
out
dec
pop
cld
mov
inc
cli
mov
sbb
out
addl
stos
inc
fldl
mov
addb
lock
aam
xor
lea
dec
mov
pop
or
and
popf
sbb
cmp
ja
fsubr
dec
test
pop
xor
loopne
mov
jl
cli
xor
sub
adc
data16
or
ss
pushf
in
xlat
mov
ret
or
pop
inc
inc
push
into
out
ljmp
dec
dec
in
hlt
rcrb
jge
lea
addr16
push
fwait
jno
data16
xchg
fcmovbe
inc
out
fidivs
cwtl
sti
mov
cld
push
gs
icebp
vshufpd
dec
xor
or
push
cmp
in
cmp
dec
cld
pop
mov
rcll
jecxz
fstpt
mov
cli
mov
and
mov
adc
cli
scas
add
sub
fstp
mov
rcrl
loopne
rorl
sub
incl
outsb
sbb
loope
lret
data16
mov
sub
mov
sub
pop
xchg
dec
and
jge
and
cmpsb
fstpl
loopne
jg
scas
pop
jbe
fldl
out
add
mov
das
cmpsb
or
xchg
adc
pop
sti
dec
leave
out
int
fiadds
mov
sbb
mov
cs
inc
cmp
pop
sub
movsl
aad
addr16
aad
inc
sahf
in
fiaddl
jbe
fidivs
mov
dec
adc
stos
mov
into
pushf
addl
cmp
iret
xlat
jp
xchg
mov
jne
nop
mov
add
inc
movsl
sub
mov
lcall
bound
leave
xlat
fadd
jecxz
popf
mov
iret
je
fwait
xchg
test
xchg
push
popa
enter
inc
in
xchg
cld
jg
pop
push
inc
xchg
xor
xchg
outsl
outsb
ss
jl
test
inc
add
and
mov
add
inc
jbe
out
lock
subb
lret
add
jno
in
and
or
fiaddl
or
pop
fldl
sub
xchg
mov
mov
add
jbe
mov
shll
mov
sti
pop
push
sub
in
or
movsl
cmpsb
imul
xchg
jae
mov
jno
xchg
jns
push
sbb
repnz
or
mov
lahf
add
enter
sbb
push
fildl
mov
ret
xor
hlt
mov
ljmp
pop
test
in
imul
dec
mov
cli
inc
cld
sar
pop
inc
loopne
fs
cmp
test
jns
jnp
xchg
mov
shrd
scas
enter
push
mov
addr16
xor
xor
inc
xchg
add
mov
cmpsb
xchg
aad
mov
mov
xchg
movsb
sbb
xor
xchg
test
pop
or
jl
or
imul
dec
outsl
jmp
pop
mov
inc
sbb
scas
ljmp
nop
sbb
mov
loopne
cwtl
jge
mov
repnz
xor
and
push
sbb
xlat
lcall
icebp
mov
jmp
lds
cli
and
pop
fldl
dec
and
into
addr16
xor
sbb
hlt
cs
fstpl
lret
frstor
cwtl
add
aad
adc
sti
push
mov
rcrl
ja
test
jno
push
scas
fildll
bsr
mul
xchg
add
cmc
push
arpl
xor
lret
scas
or
in
in
jmp
pop
mov
cmpsb
push
or
lods
mov
inc
into
mov
add
sub
cmp
pop
jne
movsb
jns
in
inc
dec
cwtl
xchg
orl
inc
ljmp
jecxz
adc
pop
out
xlat
mov
in
cmp
lea
pop
pop
les
ret
mov
jmp
lods
pop
dec
sbb
pop
pop
jle
xor
mov
in
lret
jecxz,pt
lcall
addr16
enter
stos
xchg
fcmovnbe
push
out
test
aaa
push
test
orl
push
mov
dec
lods
test
fstpt
insb
pop
add
jle
inc
cmpl
cmp
sbb
fs
test
rolb
imul
xor
mov
cltd
das
sti
mov
test
popa
mov
incb
jbe
mov
cmpsl
dec
stos
lods
mov
rcrb
adc
xorl
arpl
mov
lcall
pop
dec
cli
cli
jmp
pop
lret
fimull
xchg
or
jge
cmc
inc
cs
sbb
movsb
jne
mov
rcl
test
imul
mov
sub
aaa
adc
or
icebp
xchg
sub
out
test
xchg
popa
mov
fdivrs
and
in
div
stos
push
push
bound
pushf
or
xchg
or
push
cwtl
popf
test
aas
dec
gs
hlt
cmp
mov
and
insb
adc
movsb
insb
sbb
jecxz
mov
adc
jbe
jl
jl
outsb
mov
lock
inc
addr16
cmpl
xorb
pop
outsb
in
enter
mov
dec
popa
leave
add
or
decl
xlat
cmp
sbb
add
adc
sbb
jae
add
inc
or
xlat
inc
sub
sub
sub
sbb
xor
mov
xchg
cs
cltd
mov
imul
bound
and
pop
lods
test
and
std
cmp
lds
lds
call
aad
mov
xchg
push
outsb
pop
add
shl
pop
iret
jecxz
mov
shll
dec
mov
lahf
fnstcw
jno
mov
xor
test
jae
push
sahf
jne
movsb
lret
lds
mov
or
add
loope
adc
call
in
lahf
sahf
mov
fstps
adc
sub
daa
cmp
popf
or
pop
rcrb
mov
xor
dec
leave
pop
dec
pop
mov
xchg
jnp
pop
dec
pop
outsl
imulb
inc
loopne
jmp
cmp
sbbb
aas
fidivrl
mov
pop
inc
push
push
pop
fnsave
sbb
cs
jp
jg
bound
in
int3
sub
and
je
ss
mov
aam
mov
sub
mov
ja
cmp
inc
mull
out
xchg
mov
bound
jp
lds
leave
dec
shrb
fsts
pop
push
and
enter
mov
inc
daa
lods
push
adc
movsb
or
or
dec
js
sarb
mov
add
je
add
data16
mov
out
out
mov
cltd
aaa
mov
addr16
pushf
iret
add
sbb
clc
outsl
adc
xchg
in
out
mov
sbb
sbb
inc
inc
and
jl
outsl
jo
push
adc
mov
mov
xchg
cwtl
es
sbb
popa
jp
outsl
dec
insb
adc
inc
and
cmc
addr16
mov
mov
mov
sbb
push
loop
push
cmc
into
jb
lea
jecxz
call
sahf
lock
cmp
xor
mov
xor
mov
xchg
ret
adc
xlat
xchg
mov
push
xchg
pop
pop
idivl
push
lea
in
test
xor
pop
mov
outsb
xchg
dec
jmp
mov
divl
pop
jne
xchg
ljmp
mov
aaa
sub
or
dec
mov
inc
xchg
testl
xor
ljmp
fldl
and
sti
or
popa
and
mov
loope
loopne
imul
adc
sbb
dec
cmpl
sbb
sbb
and
call
repz
lods
mov
adc
mov
sub
jb
out
and
addr16
push
fcmovbe
and
adc
sub
sub
sti
xchg
call
cli
dec
popa
repnz
cmp
aas
lret
addb
mov
dec
mov
lea
fiaddl
jmp
out
jl
and
push
pop
es
ret
idiv
mov
xchg
addl
add
pop
arpl
sub
scas
xor
lret
or
test
sbb
in
movsl
outsb
lret
int
pop
ret
lock
jno
arpl
sub
lret
inc
pop
sub
push
pop
and
je
push
mov
aad
and
mov
jnp
les
stos
flds
test
jb
xchg
pop
mov
add
data16
sbb
inc
fmuls
pop
dec
cmp
leave
cmp
test
ja
push
lahf
or
jo
xchg
or
cmp
jl
stos
xchg
dec
jl
ljmp
sub
xchg
push
or
idivb
loope
fbld
or
mov
pop
shll
mov
jl
movsl
js
mov
out
mov
das
aas
mov
push
fdivrl
mov
and
fdivrs
fisubl
repnz
inc
xchg
xor
dec
ss
frstor
movsl
xchg
fsubrl
jle
push
or
out
lcall
xor
mov
pusha
cs
mov
mov
aaa
les
jp
xor
popa
ficomps
pop
leave
push
outsb
cmpsl
jnp
addr16
jecxz
loope
push
mov
imul
repnz
push
cmp
fxtract
push
mov
insb
pop
test
pushf
loop
rcr
bound
mov
jbe
dec
mov
or
mov
lret
push
clc
xchg
xchg
jmp
mov
inc
pop
arpl
sahf
mov
int3
sub
jp
mov
cmp
add
xchg
jg
lods
xchg
mov
cmp
insl
xor
xchg
xor
loope
ror
insl
mov
dec
push
jecxz
dec
test
jge
mov
mov
pop
pop
out
rorl
cmp
add
xor
into
adc
xchg
dec
je
xchg
mov
xchg
mov
std
adc
or
outsb
xchg
pop
mov
mov
leavew
arpl
and
push
insl
sub
sbb
sub
fs
mov
jecxz
test
inc
fistpll
jge
pushl
rorl
repnz
inc
in
dec
push
mov
xor
pop
inc
dec
cltd
ljmp
add
push
arpl
pop
rorl
ret
mov
enter
push
add
xor
lods
les
sbb
pop
bound
xchg
cmpxchg
sbb
sub
inc
mov
sub
test
mov
jmp
jbe
mov
lock
push
cmc
and
and
fcoml
orb
xlat
imul
sub
gs
mov
push
aad
clc
test
add
fildll
jno
push
xor
leave
push
jp
cmp
push
ss
mov
inc
sbb
pop
adc
xchg
xchg
jg
jge
jle
lcall
shlb
addr16
mov
jp
adc
imulb
lcall
mov
aaa
or
jne
outsl
lock
divl
or
sbbb
mov
fistpll
ds
mov
or
stc
pop
in
cmp
ds
arpl
mov
out
lret
inc
xchg
or
stc
out
or
ficompl
stos
inc
insl
push
jl
dec
dec
sbb
hlt
sub
std
cltd
mov
dec
pop
insl
subb
test
stos
mov
xchg
and
ret
js
jbe
mov
ja
scas
popf
pop
cmp
icebp
mov
aad
jecxz
ljmp
push
dec
test
mov
sbb
fwait
repz
out
mull
or
push
cwtl
popf
ret
imul
leave
out
cmp
mov
xchg
pop
and
xor
lahf
and
movsl
add
sub
xchg
in
jb
add
jg
ja
ja
fistps
mov
loop
mov
sub
stc
lret
fnsave
shl
pushf
fwait
sbb
inc
or
imulb
xlat
and
jecxz
sbb
xlat
stos
mov
mov
inc
dec
xchg
mov
shrb
lcall
add
jl
testl
fs
mov
pop
fldt
insb
or
jle
xchg
adc
xchg
js
inc
jnp
add
mov
cmp
mov
daa
inc
jns
fwait
ss
test
lcall
mov
ficompl
faddl
out
push
cmpsl
xchg
or
pop
shlb
sub
nop
xor
insb
jg
imul
and
jbe
cltd
lods
pop
xchg
repnz
or
or
test
out
dec
call
adc
mov
mov
in
cli
lds
dec
sub
js
test
test
xlat
mov
mov
jmp
ja
into
sub
stos
into
xlat
pop
orb
mov
int3
fs
push
arpl
std
les
scas
daa
and
mov
popa
pop
scas
addr16
lods
mov
fbld
jl
rorl
cmp
push
push
mov
call
ret
and
mov
cmp
imul
cmp
cmpsl
inc
inc
push
xchg
cwtl
mov
hlt
mov
call
or
testb
mov
mov
xchg
repz
cmp
xlat
dec
xor
cmp
cmp
mov
enter
jecxz
data16
add
xchg
idivb
fidivrs
lods
adc
xchg
or
xchg
lods
jo
in
adc
rcrl
icebp
ds
xor
push
and
inc
dec
push
and
dec
inc
inc
lds
inc
shr
int
ret
das
sub
sbb
lds
fwait
xchg
leave
push
xchg
lock
push
daa
add
int
loop
mov
adc
stos
addr16
xchg
lock
xchg
xchg
xor
lret
inc
xchg
gs
mov
stos
ret
jg
dec
mov
jle
aam
mov
arpl
xlat
shlb
push
lahf
stc
repnz
ljmp
mov
jge
cmp
and
xor
mov
inc
jae
sbb
push
or
pop
and
sbb
xor
or
sub
jb
xor
insb
mov
lea
xchg
sbb
dec
cmpsb
cmpsb
sbb
es
mov
and
test
arpl
dec
mov
das
dec
clc
pop
imul
mov
xor
popl
arpl
push
test
arpl
orl
or
pop
and
aad
xchg
aam
mov
pop
and
pop
inc
add
xchg
xor
mov
push
movsl
xlat
pop
inc
push
jno
xchg
je
mov
pushl
imul
lahf
addr16
sub
sub
popa
sbb
xchg
and
cmp
dec
ret
mov
mov
ja
sub
add
xchg
int
pop
xor
dec
jae
ss
addl
sub
scas
in
inc
rep
cmc
mov
hlt
ret
xor
rcrb
ds
sbb
xchg
sub
sub
cli
test
mov
add
and
sub
and
sub
icebp
pop
cld
adc
mov
adc
push
daa
jns
xchg
cmpsb
lcall
lock
mov
ret
clc
lret
sub
dec
jecxz
inc
divb
jae
stc
das
test
sbb
ror
fbstp
lock
adc
xor
dec
test
pop
in
sbb
insl
adc
xor
loop
pminub
sbb
pop
ror
inc
pop
pushf
stos
loopne
lods
dec
loop
mov
add
and
and
iret
push
jecxz
movsb
shl
popa
shlb
cmp
push
xlat
sub
mov
stos
xor
adc
inc
inc
mov
lcall
testl
and
cmp
adc
lahf
mov
gs
sbb
mov
mov
inc
push
jl
pop
sub
push
sbb
push
cmpsl
outsl
insl
pop
in
xchg
push
fidivs
push
sbb
jmp
inc
outsb
aaa
add
rol
push
fidivrs
cs
adc
aam
add
pop
add
pop
stos
outsl
inc
or
jmp
or
fdivl
cmp
test
pop
orb
ret
sub
and
mov
add
repz
mov
push
pop
pop
pop
fldl
inc
pop
ja
fld
stos
ficoms
lret
or
mov
dec
in
out
sbb
mov
pop
xorb
pop
mov
cmp
jo
mov
xchg
add
leave
fsubrp
aas
ss
inc
clc
xchg
push
push
xor
jmp
sti
mulb
ja
mov
adc
pop
jle
dec
inc
imul
xchg
mov
adc
aas
add
jae
pop
repnz
push
jmp
jns
mov
orb
dec
xchg
dec
ja
out
mov
fxch
fstpt
and
mov
int
out
add
and
rorl
pop
or
xor
push
adc
and
imul
or
dec
ret
sahf
lcall
sbb
and
xor
repz
xchg
xchg
test
je
in
cmp
pop
inc
add
sbb
push
mov
sbb
mov
mov
or
popf
mov
lods
lahf
mov
les
or
popa
pop
xlat
js
adc
inc
cmc
ds
js
into
jae
and
ja
and
out
adc
mov
or
push
cmp
stos
and
cli
xor
call
stos
jnp
adc
and
ja
fildll
push
shrb
jo
xor
adc
int
bound
js
enter
rdmsr
or
xchg
je
imul
movsb
jecxz
xor
xchg
jge
adc
ja
insb
sbb
loop
fdivs
cmp
popf
insb
jg
mov
icebp
and
shrb
movb
push
cmpsl
sub
out
loope
mov
stc
fdivs
dec
lret
std
int3
inc
pop
sub
ljmp
je
mov
ret
stos
mov
popf
pushf
shlb
fsubl
fsubrs
sbb
adc
and
ljmp
lahf
mov
sub
in
test
les
daa
mulb
pop
cwtl
mov
sub
cld
inc
movsb
pop
lcall
add
mov
rclb
adc
gs
mov
and
mov
cmpsb
test
pusha
dec
mov
jnp
mov
repnz
ss
test
int
xor
cli
in
std
scas
mov
pop
xchg
or
or
sbb
adc
jp
ss
movsl
cmpsb
jns
sbb
jge
clc
cmpsl
andb
jmp
data16
jg
adc
add
xor
cmpsl
pushf
rcr
xor
fidivrl
add
cmpsl
hlt
mov
cmp
dec
jmp
mov
and
jecxz
xchg
mov
adc
mov
aam
push
pop
mov
xchg
jo
leave
add
jae
cs
in
mov
bound
aam
xor
jmp
idivb
pop
xchg
push
jp
pop
adc
fsubrl
push
inc
dec
lds
aam
sbb
pop
xrelease
and
inc
cmc
nop
pop
inc
adc
sti
shl
stos
and
mov
sbb
adc
xchg
sub
mov
jno
stc
stc
xor
jecxz
xor
push
pop
and
jmp
ljmp
xchg
jb
mov
dec
sub
aad
arpl
xchg
in
das
mov
repz
mov
aaa
fdivp
pop
dec
lret
mov
inc
mov
sbb
cmpsl
sub
jo
adcl
out
scas
or
lods
jnp
das
jge
xchg
cmp
stos
mov
mov
data16
test
lahf
fsubr
data16
dec
stos
add
ja
mov
inc
daa
adc
call
cmp
jmp
or
js
sub
xor
jecxz
imul
shlb
orl
stc
mov
stos
js
fidivs
pusha
ja
jbe
jecxz
and
gs
daa
icebp
lret
push
xchg
pop
or
nop
mov
not
mov
ret
cmpsb
and
sbb
jb
bound
mov
push
dec
xor
mov
fwait
lock
xor
adc
negl
mov
push
push
popf
lret
ret
int3
popa
and
dec
sbb
dec
and
and
jo
aas
push
jmp
nop
sahf
pop
bound
sub
pusha
adc
dec
je
fmulp
testl
sub
xchg
scas
in
imul
mov
jp
inc
rcrl
or
ljmp
cs
sub
rcrl
push
scas
add
fstl
add
pop
mov
ja
adc
daa
mov
push
jo
adc
fs
rolb
inc
inc
cwtl
xlat
iret
call
adc
sbb
jecxz
dec
pop
mov
add
push
gs
or
fcompl
test
or
lea
sbb
outsb
dec
leave
int
into
push
xchg
fstl
jge
or
leave
and
xchg
pop
jno
pop
xor
pop
or
cmp
outsb
iret
outsb
movsb
add
aam
dec
addb
ja
xchg
fistps
aas
sub
mov
test
movsb
cmc
pop
fsubrs
jmp
aas
pushf
shlb
jge
std
js
pushf
dec
test
or
scas
clc
cmp
adc
inc
or
loopne
cmpsb
xchg
les
adc
scas
jmp
mov
bound
and
mov
ss
sbb
nop
add
sbb
scas
mov
push
test
insl
icebp
in
or
das
sub
cmpl
fistpl
clc
push
inc
cmp
fmuls
inc
push
mov
push
sbb
dec
loope
in
inc
dec
fsubrl
xchg
jnp
jb
test
dec
inc
jno
pop
or
gs
inc
xchg
sarl
mov
arpl
scas
add
mov
ja
int
or
xchg
add
xchg
jl
pop
sub
lods
int3
jmp
fs
stos
js
jne
cmp
mov
sub
sbb
fnsave
mov
in
jnp
sahf
lahf
mov
mov
mov
hlt
xchg
inc
pop
add
add
adc
lods
sbb
adc
mov
jnp
clc
popa
cwtl
subb
lcall
sbb
xor
aam
jo
dec
inc
popf
in
stos
pop
xor
mov
pslld
dec
sbb
cwtl
or
pop
pop
jbe
pop
sub
jl
in
sub
adc
xchg
add
mov
cmpsl
add
inc
xor
sbb
push
and
sub
jmp
dec
pop
ljmp
cwtl
mov
fsubrs
adc
sub
push
mov
fcomip
push
icebp
cmp
pop
inc
sub
pop
shr
mov
inc
cli
mov
lods
test
dec
cli
xchg
push
push
lds
xchg
rcll
iret
lods
dec
or
imul
pop
jmp
jae
lahf
mov
icebp
sbb
hlt
in
xor
sub
ficoms
or
jo
aam
lock
popf
lcallw
xchg
mov
insl
imul
push
lret
push
xchg
nop
out
ljmp
in
xchg
test
xchg
add
pop
clc
xor
imull
popl
data16
jns
xchg
pop
dec
mov
jmp
push
xchg
sahf
jp
xchg
mov
dec
add
daa
leave
pop
dec
repnz
mov
xchg
les
inc
jecxz
dec
sbb
xchg
lea
xlat
outsl
loop
lods
out
loopne
lret
decl
mov
es
test
jp
mov
aas
repnz
leave
or
dec
repz
pop
imul
jae
xchg
dec
in
repz
and
pop
stos
sub
xor
aad
clc
insb
mov
xor
xchg
xor
or
jecxz
jno
xchg
mov
jo,pt
push
cmpb
sti
mov
pop
sarl
mov
cmp
xchg
pop
push
in
sub
and
push
leave
and
push
dec
jecxz
inc
inc
inc
pop
pop
jne
mov
subb
repz
sbb
les
bound
pop
notb
mov
or
adc
and
adc
dec
les
jmp
test
pop
xchg
pusha
leave
in
lock
testl
mov
mov
stos
xor
aam
sbb
out
mov
cmp
add
nop
pop
adc
in
jmp
sub
or
outsb
inc
jne
mov
loopne
pop
je
jmp
pop
mov
or
mov
inc
xchg
and
lret
aam
add
out
mov
sub
jae
sub
push
xor
das
sbb
dec
in
mov
lds
aas
pand
mov
sti
popa
imul
clc
test
push
insl
test
flds
test
add
cli
sub
loop
fisttps
pop
jbe
jns
nop
pop
mov
aaa
sub
shlb
ds
adc
aaa
xor
pop
out
pop
loopne
push
jle
popf
mov
orb
mov
repz
or
xlat
jge
mov
push
pop
push
loopne
adc
aam
outsb
idivb
jecxz
mov
test
pop
jecxz
mov
mov
fcoml
icebp
mov
jle
push
xor
lcall
jmp
cmpsl
xchg
sbb
sbb
or
pop
hlt
rcrl
mov
mov
js
jns
cmp
insl
lock
aad
test
ja
test
lahf
movsl
cmp
test
mov
and
mov
inc
jbe
in
or
lds
int
ds
cmp
roll
and
and
mov
adc
dec
ss
cmp
jo
gs
fdivrs
popa
fs
jmp
push
sub
push
xchg
xor
and
sahf
xor
jae
mov
jmp
subl
loope
sub
mov
dec
je
mov
jle
gs
jno
dec
add
adc
sbb
inc
dec
xor
and
ret
mov
sti
ret
jg
cmp
inc
inc
push
cli
jge
inc
fstps
mov
push
xor
sbb
ss
sbb
popf
mov
push
pop
ja
arpl
aaa
or
or
aam
cmp
and
bswap
insb
imul
adc
xchg
fwait
push
lahf
and
push
loop
lds
lret
jge
dec
aas
cli
adc
shll
div
sbb
bound
adc
daa
add
add
stc
ja
andl
inc
cmc
xchg
fucomi
ret
incb
and
push
jl
imul
jg
inc
cld
push
dec
mov
adc
leave
mov
rcr
xchg
add
sub
insl
aaa
inc
cmp
jbe
std
ret
xor
lret
push
lods
jae
sarb
push
in
jge
fs
sbb
push
fwait
or
aaa
jb
pushf
divb
fmuls
test
ret
rcl
lret
dec
les
jns
enter
add
sbb
fs
sub
loop
addr16
shlb
imull
jge
pop
xchg
push
mov
test
out
jb
xchg
or
mov
fucom
push
sub
out
mov
mov
sbb
and
inc
mov
pop
lret
lahf
shlb
sbb
mov
dec
sbb
das
mov
in
dec
mov
popa
jmp
xchg
push
sub
mov
xor
cmp
insl
fadd
mov
mov
lret
cli
int3
jecxz
iret
adc
rolb
mov
push
andb
add
dec
icebp
adc
lcall
iret
shll
sbb
mov
aam
fstl
ljmp
inc
scas
sub
gs
push
jb
mov
inc
stc
jl
push
repz
xor
ja
inc
dec
mov
jl
scas
pop
rcrb
lods
out
fdivrs
mov
mov
dec
sub
iret
roll
or
pop
icebp
cmc
sarl
mov
xor
sbb
sub
mov
cmp
dec
push
dec
pop
outsb
jp
adc
cwtl
bound
iret
mov
rcr
cmc
fxch
push
add
clc
lahf
mov
popf
sbb
dec
add
repnz
cmp
lcall
mov
popf
lds
sahf
mov
dec
ljmp
out
popf
fwait
or
push
xor
leave
das
aas
in
or
push
out
repnz
push
xchg
les
ja
xor
adc
jle
mov
je
pop
lods
fldenv
xchg
outsl
aam
js
xchg
and
loope
sbb
rcl
out
int3
aam
sti
cwtl
xchg
sub
loope
aad
clc
pop
outsl
xor
addr16
mov
fsts
sub
ret
pop
sbb
and
int3
jmp
movsl
ret
test
jl
popa
stos
test
lea
add
mov
shlb
mov
das
push
pop
fs
push
mov
inc
xor
inc
mov
imul
bound
pop
and
inc
and
popa
clc
jnp
push
mov
pop
sbb
int3
add
push
mov
jmp
sarl
je
xor
pop
imul
and
mov
imul
inc
js
lret
mov
fcomps
add
leave
sahf
sbb
jmp
rclb
fstp
bound
int3
add
xchg
repnz
mov
test
imul
jo
pop
jo
pusha
push
add
outsl
fnstenv
rcrl
xchg
lock
mov
cmpb
loop
js
enter
movsl
adc
push
cmc
test
rcrb
jns
scas
jmp
mov
sub
mov
js
mov
jno
in
rorb
cld
ds
and
mov
pop
xchg
sahf
scas
inc
mov
popa
scas
pusha
mov
dec
and
clc
cmp
das
js
loope
leave
in
adc
jle
dec
xor
jne
pop
sub
insb
mov
pushf
mov
repnz
or
cmpsb
adc
test
and
push
pop
sbb
xor
or
loopne
clc
sbb
mov
jno
not
xchg
mov
mov
jmp
in
test
ss
cmp
dec
cmp
pop
popf
sub
mov
insb
sub
adc
fildl
cltd
push
lods
ret
inc
je
sbb
add
sti
pop
stc
dec
lods
cmp
pop
shll
fstp
xor
fwait
sti
movsb
sub
inc
aas
pop
push
loop
push
xor
xchg
push
and
in
lock
fisubrs
cmpsl
pop
ds
subb
lds
scas
sub
cmp
ss
mov
dec
aas
aam
ljmp
xchg
mov
int3
pop
out
out
inc
arpl
arpl
mov
push
stos
lcall
aad
pop
leave
std
cmp
or
lds
mov
adc
push
sar
lcall
add
jae
out
ret
or
ja
mov
xor
shlb
mov
hlt
fs
mov
mov
sahf
lods
dec
std
pop
in
int3
lcall
mov
roll
popf
inc
notl
pop
mov
ss
dec
xchg
je
cmp
mov
shll
fmuls
xchg
outsl
xchg
fsubl
hlt
jno
lock
mov
mov
mov
sbb
aad
sbb
sub
addr16
adc
xchg
repnz
jne
out
clc
sbb
add
mov
je
bound
push
xchg
inc
sbb
rcll
sub
push
push
push
sbb
xchg
push
xor
inc
sub
jb
xor
movsl
lahf
inc
and
xor
daa
adc
mov
cmp
mov
sarl
mov
mov
cli
addl
orb
mov
test
mov
sbb
sbbl
push
pop
pop
or
pop
cli
adc
daa
and
repz
in
pop
add
inc
dec
or
xchg
divb
loop
cmp
out
pop
scas
nop
das
and
shll
xchg
fmull
mov
cld
pop
cmp
mov
shlb
repnz
mov
and
pop
iret
push
not
push
mov
add
popf
es
mov
test
pop
lock
js
mov
cmp
xlat
add
mov
mov
sub
bound
jne
mov
mov
mov
das
jmp
inc
fwait
add
insb
loopne
cld
pop
out
push
cwtl
in
fnsave
inc
imul
push
pop
cmpsl
cmp
clc
xor
push
push
pop
dec
push
xchg
unpcklps
gs
mov
in
adc
add
mov
test
imul
pop
jne
mov
xchg
repz
js
std
daa
int3
sbb
and
imul
push
xchg
mov
inc
arpl
add
int
dec
mov
mov
lcall
pop
out
cld
movsb
subl
fsubs
sbb
cmp
cld
push
stc
cmp
insl
mov
cmp
cmp
xchg
iret
addr16
addr16
test
fsubl
xchg
fnstenv
fwait
push
adc
lret
test
inc
mov
icebp
arpl
stos
xor
and
hlt
into
cmp
push
or
inc
imul
lret
test
jle
push
fidivrs
xor
jle
lahf
mov
gs
pop
lret
sbb
ret
mov
movsl
adc
adc
add
jo
test
test
jg
aaa
aad
xchg
data16
pop
arpl
fcomp
sub
jnp
inc
jnp
push
imul
cmp
sub
imul
mov
rcrb
mov
repz
stos
pop
mov
push
sbb
imul
stos
mov
sbb
xchg
mov
jg
pop
dec
dec
xor
mov
icebp
cwtl
sub
call
xchg
cli
test
jo
cmpsl
test
imul
aaa
or
mov
inc
sbb
jno
sbb
aas
das
fwait
ja
mov
jecxz
xchg
pop
imul
dec
sbbl
jg
mov
ja
data16
xchg
imul
into
test
mov
adc
fdivs
pop
ljmp
jp
enter
outsb
jp
movb
subl
neg
dec
xchg
inc
das
int
orl
sbb
lret
rcrl
dec
xor
cltd
pop
sub
int3
in
pop
adc
add
inc
mov
add
add
inc
and
mov
dec
jo
push
mov
cmp
or
sahf
adc
or
cltd
pushf
inc
mov
cld
loope
cwtl
jmp
addr16
repnz
add
call
loop
cmp
mov
xchg
and
or
cmc
bound
xor
ret
pop
jge
inc
mov
mov
movsb
movsb
popf
stos
pop
or
pop
mov
cld
arpl
jae
mov
pop
and
push
pop
and
lods
adc
jmp
imul
inc
repz
out
inc
inc
aad
mov
out
cltd
test
in
in
xchg
xchg
rolb
sub
xor
je
push
push
xchg
push
lock
int3
data16
clc
mov
int3
aam
push
push
rorb
std
mov
jp
mov
mov
push
outsb
pop
in
sbbl
das
mov
mov
adc
cmpsb
add
pop
ljmp
cmpsb
loope
xchg
push
sahf
ficoml
repnz
hlt
ss
pop
cmpsl
mov
add
add
push
in
add
cmp
mov
cwtl
pop
adc
push
pop
aaa
sub
add
iret
and
aad
adc
xchg
ficoms
xorb
mov
loop
fists
dec
xchg
push
push
sbb
out
push
jnp
rcll
cmp
scas
mov
xchg
pop
mov
or
lock
push
shll
push
hlt
sarl
mov
xlat
ret
mov
int3
stos
jae
jmp
push
addr16
sub
xlat
std
xor
adc
int3
into
xchg
xor
ja
dec
les
dec
addl
mov
dec
scas
cmovnp
daa
dec
movsb
pushl
movsb
movb
jb
insl
nop
enter
inc
jecxz
mov
jo
or
insl
xchg
rolb
ret
add
mov
shrl
sbb
into
stos
or
xchg
mov
add
lock
sti
sub
inc
pop
test
sar
xor
cltd
sub
xor
jne
aaa
pop
js
fidivrl
jnp
sub
jb
dec
mov
push
dec
jge
xor
in
cmp
inc
pop
out
xchg
lods
mov
out
xor
cmp
cmp
xchg
dec
mov
pop
ret
xor
fdivrs
or
mov
and
mov
jecxz
xchg
push
flds
repnz
add
hlt
int3
daa
adc
ds
xor
out
ficoml
or
shlb
cmpb
pop
ret
lock
xor
fsubr
mov
fsts
mov
add
int3
xlat
jno
popf
jbe
push
cmpsl
sbb
in
scas
arpl
sahf
or
mov
and
xchg
mov
xor
leave
insl
aam
xor
mov
add
sbb
rcll
mov
sbb
xor
cmp
shll
stos
mov
mov
test
cmp
xchg
fmul
fcomip
push
adc
int
jl
sahf
fwait
nop
or
fsubrl
test
adc
add
ror
repnz
or
jnp
int3
mov
inc
shlb
add
jae
aad
loope
fcomp
ja
cmc
inc
or
mov
inc
scas
insb
stos
push
movsl
mov
add
jle
and
insl
jle
push
lds
ret
cmp
mov
int3
ljmp
outsb
lods
mov
add
dec
and
adcl
sub
lods
cwtl
push
and
lods
rcll
dec
push
aad
lret
in
sub
into
mov
mov
sti
loope
pop
mov
std
stos
push
pop
inc
mov
jnp
mov
xchg
scas
jae,pn
pop
jl
jp
jge
dec
ljmp
and
mov
adc
sbb
jg
jl
add
popa
sub
test
in
jo
addr16
sub
sub
pop
pop
push
push
in
jmp
js
mov
mov
repnz
insl
sbb
push
add
adc
jl
cwtl
mov
jbe
sbb
popf
push
jle
inc
sub
test
xor
ret
inc
sbb
out
xor
jno
mov
ret
ja
inc
cmp
aaa
xchg
icebp
out
mov
push
arpl
outsb
mov
mov
push
xlat
lret
inc
xchg
cmpsl
and
jnp
gs
call
adc
insl
jbe
xor
movsb
fcomip
mov
cs
out
out
out
rcrb
mov
or
icebp
and
jg
fucom
sub
je
js
loopne
cmpsb
pop
mov
test
movsb
jp
iret
loopne
aaa
pop
test
push
mov
cmp
pop
push
jl,pt
xor
in
cmp
inc
into
push
cli
mov
add
or
into
fwait
jp
aam
add
sub
push
xchg
cmc
xor
xor
or
fld
or
enter
aad
std
mov
ss
es
cmp
push
mov
xor
pop
cwtl
pushf
or
pop
stc
repz
sbb
jge
mov
xor
push
stc
sub
pop
push
out
out
xor
or
mov
fidivrs
add
inc
into
jp
sbb
mov
jae
or
mov
add
and
mov
mov
sbb
pop
mov
pusha
pusha
stos
adc
into
mov
aas
shr
sub
dec
jp
popf
adc
push
dec
loop
inc
push
and
sarl
pop
pushf
push
mov
push
test
sbb
dec
outsb
xor
jno
mov
sub
xchg
daa
mov
cld
loop
out
inc
call
mov
lret
push
data16
mov
stos
or
test
shrl
clc
shl
xchg
xchg
push
ffree
mov
mov
and
pop
test
lea
inc
dec
pop
or
outsl
xor
xor
xor
inc
dec
ja
cmpsb
int
cli
push
mov
stc
pushf
xlat
push
dec
pushf
test
dec
xor
cmp
jnp
lcall
mov
in
imul
sahf
mov
sbb
adc
mov
addb
push
dec
out
cmp
cli
push
and
popa
inc
jmp
ret
cmp
sbb
xchg
mov
int3
jae
xor
test
xlat
ja
or
mov
adc
adc
xor
cmp
jno
pop
incl
mov
mov
cwtl
mov
and
add
cmc
mov
inc
cltd
cltd
fucom
daa
xor
gs
rclb
data16
lcall
test
loop
xorb
xor
jecxz
aas
pop
push
fcmovb
rclb
fcmovbe
imul
mov
cld
bnd
out
push
enter
stos
ret
fisttpll
or
call
jne
push
das
jecxz
adc
nop
in
dec
fstpt
mov
push
or
mov
imul
imul
rcl
aam
out
jae
pop
xchg
inc
add
cmp
bound
and
add
ret
ss
jp
push
fdivl
mov
movsb
pop
adc
add
shrb
cltd
xor
push
stc
pop
dec
sarb
push
ja
push
push
dec
mov
fs
mov
push
jno
jp
add
jmp
push
cmp
fwait
test
pushf
data16
cmp
or
imul
rcrl
xor
and
fisubrs
xchg
jecxz
mov
xor
dec
sbb
mov
pop
fsubrl
xor
outsl
sub
push
mov
sub
shll
jnp
test
xchg
pusha
insb
push
lahf
sub
out
lret
push
insl
call
ficomps
sub
jmp
and
sub
or
daa
ret
mov
fmulp
cmp
pusha
xor
xor
scas
inc
inc
mov
sub
ja
ret
or
in
mov
subb
clc
sti
lcall
jae
fstl
lods
mov
or
pop
sbb
cmp
inc
push
fldenv
shll
push
fmull
jae
cs
fisubrl
push
push
mov
sub
xor
and
cmp
xchg
dec
xchg
pop
mov
idivl
jg
aam
aaa
cmp
int3
jno
mov
jecxz
inc
js
test
pop
or
add
jo
adc
movsl
test
in
jge
movsl
das
pop
sbb
test
pop
cli
mov
das
jge
mull
in
sub
xor
sahf
lcall
jns
mov
pop
lea
jl
pop
repz
and
subb
subb
call
sub
jns
lcall
or
nop
push
xor
mov
add
outsl
aam
pop
fadds
cwtl
cmpb
jmp
sub
cmp
ss
aad
dec
out
stc
mov
mov
sbb
shlb
mov
daa
mov
jmp
pop
sbbl
or
pop
stc
inc
mov
xchg
mov
pop
sbb
inc
std
jns
imul
mov
popf
adc
add
ja
sbb
daa
sti
push
ljmp
lods
add
mov
sbb
scas
sub
dec
std
ficoml
aaa
inc
mov
pop
sbb
loope
xor
adc
mov
cltd
jl
mov
inc
es
test
fcoms
cmp
jns
dec
xor
xlat
push
mov
fisubs
push
sub
das
and
femms
scas
fs
out
xchg
mov
add
pop
aas
jo
push
repnz
sub
cmp
int3
push
fistps
mov
movsb
add
add
cmc
inc
jno
xor
ja
inc
adc
jmp
pop
lret
dec
into
adc
cs
in
cmp
cmpsl
xchg
sub
addb
sbb
aaa
movsbl
pop
std
leave
les
adc
cmpsl
inc
movsb
xchg
add
sbb
outsb
pop
rclb
dec
cmp
aad
jnp
adc
or
scas
jmp
pop
add
inc
add
and
fsubl
cmp
stos
sbb
test
lods
and
into
xchg
fistpll
gs
ficompl
mov
loop
enter
dec
push
or
aaa
fs
inc
dec
sti
xchg
clc
mov
pop
mov
and
pop
ja
sub
movsb
cmp
inc
in
das
mov
pop
loop
insl
jl
jae
test
pop
sbb
sub
fwait
dec
xor
fnstenv
adc
rcl
sbb
inc
inc
cmp
sti
aam
fcmovnbe
push
xor
jbe
xchg
mov
push
sbb
and
cli
psllq
arpl
mov
adc
mov
pop
mov
inc
dec
jg
dec
mov
scas
lds
loope
dec
and
cmp
addr16
adc
addr16
mov
outsb
xor
jmp
mov
dec
es
int3
sub
cmp
xchg
pusha
push
stc
fwait
mov
xor
jnp
ror
je
cld
add
in
dec
lret
mov
sti
popf
movsl
jo
icebp
loop
rorb
das
mov
jno
sub
lds
imul
outsl
and
bound
adc
pop
clc
scas
lea
aas
jne
into
hlt
out
lahf
andl
jl
dec
adc
mov
ret
sub
pop
dec
fimull
test
mov
pop
add
test
ljmp
inc
movsb
lea
dec
and
nop
shlb
and
xor
jg
cs
les
in
sbb
scas
inc
adc
out
in
icebp
sbb
jmp
inc
xor
fstps
inc
mov
add
andb
mov
pop
fidivl
fidivrs
pop
sbb
iret
jge
sbb
fbld
lods
adc
xchg
xchg
in
push
ret
aas
pop
adc
sbb
or
dec
mov
cld
pushf
inc
pusha
xchg
cmp
insb
or
stos
mov
int3
ret
in
jg
xor
jno
movsl
mov
in
add
mov
cmp
mov
add
mov
cwtl
jnp
dec
ffree
jbe
jp
fadd
xor
cs
das
cmp
add
adc
sub
ljmp
push
jmp
xchg
dec
add
fwait
mov
mov
bound
push
jp
fwait
pop
ret
mov
fcompl
pushf
xor
push
adc
push
xor
mov
fwait
into
jle
js
pop
fdivrl
dec
cld
xchg
inc
rcrl
insb
into
sub
cmpsb
shr
pop
adc
pop
push
pushf
sahf
pop
out
and
and
ret
roll
jbe
jns
int3
jle
jno
mov
in
xor
add
fwait
vpslld
sti
sub
mov
and
xchg
and
enter
lods
divb
std
out
push
add
mov
add
mov
cmp
and
add
shl
or
sbb
test
mov
xor
xchg
addr16
push
dec
movsl
imul
jmp
lods
xor
jge
arpl
push
mov
lods
fistpl
cmpsb
fsubp
mov
xor
push
adcl
dec
int
or
mov
pusha
imul
movsb
icebp
gs
mov
stos
ret
rcrl
js
adc
sbb
push
sbb
mov
call
sub
in
dec
mov
pushf
enter
aad
inc
into
add
fiadds
nop
dec
adc
jb
pusha
ret
lret
inc
cltd
xchg
dec
loop
insl
stos
or
sub
push
das
and
mov
mov
test
jns
mov
or
hlt
jnp
cmp
mov
bound
cmpb
cmp
in
jp
fdivs
or
das
jns
daa
push
sbb
adc
das
push
jl
inc
dec
pop
jle
insl
jg
cmp
insl
mov
jl
aas
sub
mov
js
stc
or
jbe
popa
rcr
mov
xor
hlt
cmp
in
jbe
add
and
cmp
dec
sbb
fsub
add
mov
pop
rolb
mov
or
or
icebp
xchg
shll
stos
push
out
jecxz
ljmp
mov
mov
jo
mov
dec
ja
sti
ret
addr16
icebp
mov
mov
int
adc
cmc
fistps
mov
push
lods
push
adc
and
jb
add
and
push
sub
add
inc
sti
popa
incb
pusha
in
xor
or
pop
mov
and
fcoml
iret
xchg
fdivrl
push
mov
push
std
jmp
push
or
aaa
and
jg
push
dec
outsl
fsqrt
mul
xor
push
sbb
mov
sub
add
jg
in
push
pop
xchg
inc
jmp
xchg
push
or
xor
pop
lea
mov
jmp
dec
pop
ficoms
sti
sub
push
push
movsl
mov
lret
mov
into
cmpsb
sti
jp
lahf
mov
std
jp
inc
test
mov
daa
out
daa
clc
fimuls
push
psadbw
pushf
sbb
enter
fdivrl
std
jg
mov
cmpb
push
xchg
stos
inc
mov
xchg
fmul
jge
es
xlat
std
mov
mov
cmpsb
fs
inc
jl
inc
insb
jl
mov
and
jmp
mov
loopne
outsl
sbbl
cli
fwait
cmp
and
jecxz
cli
xor
xchg
sbb
in
adc
xor
pop
sbb
push
xchg
repz
mov
shll
sbb
lret
pop
pop
pop
lahf
push
fstpt
lret
mov
push
push
dec
fsubp
mov
out
mov
fnstsw
mov
xor
mov
cmp
push
mov
mov
adc
lret
push
inc
aas
in
xlat
addl
push
adc
cs
adc
bnd
mov
jle
shll
mov
mov
mov
jbe
in
push
add
out
and
pushf
mov
mov
push
addb
enter
and
xor
test
dec
pop
lret
inc
rcrb
dec
or
jae
dec
out
imul
les
fidivl
cmp
mov
push
jbe
push
and
jp
sub
das
xchg
or
movsb
arpl
fsubs
jo
sahf
add
shrb
test
xor
cmp
sub
clc
ljmp
cmp
addr16
fstps
or
aam
andl
cli
loope
cmp
add
divb
jns
cmp
repz
pop
sarb
fnstenv
pop
jge
add
lret
pop
shrl
xchg
loopne
add
in
mov
hlt
jns
pop
dec
fiadds
jge
adc
arpl
cltd
and
jle
jb
sbb
js
or
pop
mov
fwait
and
fadd
mov
sbb
pop
mov
hlt
pusha
sbb
lods
movsl
shr
dec
rorb
lret
rcr
xchg
dec
loop
jns
mov
in
dec
out
cmpsb
and
cltd
sbb
adc
mov
jg
mov
jns
fs
aam
push
jns
adc
lahf
int3
iret
test
call
mov
repz
push
mov
cmp
and
rorb
xor
addb
cs
pop
dec
dec
xorb
loope
ror
addb
stos
inc
sub
daa
adc
xchg
jnp
dec
aaa
push
xor
pop
jno
dec
hlt
inc
shlb
push
popf
adc
mov
vmovdqu
jp
cwtl
sbb
imul
xchg
push
push
lret
push
mov
test
jae
fldenv
lea
push
pop
loope
jl
jp
mov
xor
shlb
lods
repnz
sub
jae,pt
dec
xchg
movsl
push
mov
ret
and
adc
cmp
jge
ret
fadd
or
std
insb
cmp
add
mov
repnz
in
movsb
jmp
int3
lcall
dec
add
loop
mov
arpl
sbb
cld
fldcw
mov
mov
push
jae
xchg
movl
push
aas
repz
lock
xor
mov
popf
or
adc
imul
mov
cld
js
mov
push
mov
cmp
call
pop
fcoms
push
inc
into
stos
adc
mov
add
jbe
push
push
xor
daa
das
lods
repnz
xchg
mov
push
adc
fiadds
aas
rcrl
sbb
pop
dec
mov
mov
jp
test
cmp
into
dec
dec
cmp
icebp
pushf
add
adc
push
loope
adc
xchg
jle
arpl
cmpsl
js
andl
mov
pushf
mov
sar
sbb
pop
push
repnz
sub
or
daa
and
adcb
push
dec
jp
shl
aas
cmpsl
imul
repz
enter
std
fcomps
push
dec
xchg
cmp
outsb
inc
icebp
lea
sub
cmp
ja
loope
and
push
mov
sbb
loop
mov
pop
je
lcall
imul
pop
aad
mov
jae
lcall
in
movsb
sahf
add
adc
std
int3
pop
mov
sbb
jecxz
pop
mov
popf
push
es
pop
add
and
ret
lahf
adc
sarb
sbbb
scas
xchg
aaa
rcrl
fcompl
dec
sbb
mov
ret
or
pop
fisubl
ret
inc
out
jp
das
sub
ret
stos
sub
jbe
enter
ja
xchg
cmpsb
fbld
push
js
pushl
pusha
push
pushf
mov
addl
fs
subl
imul
or
jns
xor
cld
clc
mov
mov
jae
push
mov
into
xlat
pushf
sub
fadd
or
aad
or
push
pop
js
pop
sbb
pop
std
test
mov
out
jecxz
sub
mov
add
pop
les
leave
out
mov
in
ret
and
push
push
pop
jmp
jae
lock
sub
jle
xlat
jl
sar
aas
jl
outsl
shlb
add
fcoms
jge
mov
fnstsw
notl
adc
in
loope
in
pop
out
sub
insl
mov
jnp
xor
js
sbb
adc
jecxz
or
jp
in
add
cltd
add
fisttps
xchg
add
cmp
xor
jbe
mov
leave
bound
xchg
pop
push
jo
jle
sti
adc
mov
or
jae
ja
xchg
outsb
fisubrl
jp
add
sbb
pop
adc
xchg
pop
repz
mov
outsb
mov
add
or
push
adcb
and
jb
sbb
push
pop
sub
jmp
addr16
std
je
push
shlb
sbb
lret
das
out
ret
push
aad
and
cmp
fistpll
imul
and
movsl
in
pop
repnz
jle
daa
shrb
clc
call
jns
stos
and
rcrb
push
xchg
fcmovb
aaa
pop
sarl
dec
fs
xor
stos
test
and
push
ret
sti
jl
scas
je
jo
mov
cmp
int3
jl
and
stos
std
add
cmp
test
sbb
fidivs
cltd
jae
leave
add
xor
mov
pop
xor
push
test
je
pop
loope
lds
xor
lcall
hlt
fadd
sbb
lret
repnz
sub
inc
push
xchg
xchg
js
jg
mov
or
fmulp
jmp
loop
pop
into
sbb
cli
inc
mov
mov
and
dec
out
jnp
outsb
cmpsb
ror
dec
icebp
jmp
xchg
addr16
jo
arpl
adc
in
mov
pop
pop
scas
loop
jo
popa
ret
mov
enter
push
ljmp
sbb
call
dec
xchg
xor
lock
scas
lock
push
mov
xlat
mov
lea
out
jb
rolb
mov
mov
shrl
xor
loopne,pt
repz
test
test
add
mov
int3
add
les
popf
add
xor
es
adc
iret
movsl
flds
mov
cmpsb
stc
and
adc
orps
fs
jmp
or
jp
cwtl
inc
mov
push
or
add
insl
jns
into
dec
lahf
ja
cltd
mov
pop
das
in
mov
cwtl
mov
mov
lahf
lret
movaps
ja
xor
jle
int
mov
dec
movsb
stos
push
push
testl
outsb
ljmp
es
jo
pop
pmaxsw
jnp
data16
ret
xchg
fsubr
mov
nop
in
loope
mov
sub
mov
add
mov
es
je
into
jle
or
jb
lea
repnz
jl
out
repnz
aad
test
or
mov
popa
lock
add
pop
pop
mov
sbb
call
iret
inc
jle
popf
jb
stos
sbb
or
dec
dec
xlat
test
nop
test
mov
mov
jb
sbb
cmp
cltd
mov
loop
push
sub
or
and
mov
testl
mov
cmc
jecxz
inc
adc
inc
jo
out
test
ss
iret
xchg
push
jnp
cmp
fisubrl
adc
push
cwtl
pop
inc
in
sbb
ja
inc
daa
cmc
cwtl
popa
adc
pop
and
or
xchg
mov
lcall
add
js
jbe
or
jo
and
jmp
jmp
sub
push
xchg
das
popa
inc
ljmp
loop
mov
mov
mov
aaa
imul
sbbb
out
pop
push
fs
cmpsb
aad
push
sbb
xor
ficoms
int3
xchg
lds
mov
arpl
cwtl
mov
lods
mov
out
imul
test
rsm
dec
fwait
mov
das
xor
adc
xchg
shr
mov
mov
cmpsl
inc
test
mov
and
ret
lods
mov
lret
imul
into
or
dec
inc
and
sub
std
push
fnsave
ljmp
std
xchg
pushf
aam
inc
out
aad
jbe
lret
jl
jmp
mov
sub
mov
jle
inc
or
sbb
mov
cmp
and
pushf
dec
in
fmuls
adc
pop
es
pop
inc
jno
xchg
xchg
test
sbb
lock
dec
sbb
imul
mov
mov
cmp
push
push
add
dec
sti
inc
inc
test
or
pusha
inc
mov
push
dec
sub
fwait
incb
mov
enter
xchg
or
in
les
jecxz
xor
sub
mov
xor
lods
cmp
push
lock
xor
push
sbb
inc
mov
ret
ret
fmul
fisttps
pop
push
fidivl
xchg
and
cmp
ljmp
jp
add
adc
scas
in
push
dec
cwtl
pop
push
movsb
mov
stos
mov
lods
aad
add
mov
push
push
ljmp
mov
jnp
popf
test
xor
ret
fldenv
xchg
sbb
loopne
outsl
push
mov
jge
rol
enter
mov
xorl
cmp
or
mov
in
roll
cmc
inc
cwtl
ljmp
jge
inc
jae
gs
xor
mov
aad
fisttpll
cwtl
enter
adc
push
sarl
cwtl
sbb
ja
jne
mov
and
fldt
stos
mov
inc
rcr
in
scas
xchg
mov
xchg
loope
xchg
lock
fbstp
ret
cmp
xchg
and
push
and
insb
mov
repnz
mov
sbb
mov
je
mov
pop
xlat
mov
lea
data16
fdiv
iret
jne
jmp
fsubrs
popf
outsb
add
jae
divl
lea
das
adc
ret
sbb
test
pop
test
add
dec
mov
and
jns
xor
or
fidivl
jae
lods
xchg
out
daa
xchg
inc
loope
xor
fidivrs
add
leave
in
lods
jmp
ja
insb
cvttps2pi
mov
pop
mov
dec
sub
adc
jp
jp
xorb
cmpsl
sbb
push
divb
push
mov
arpl
cmc
int
jl
mov
mov
cwtl
pop
call
fadd
add
adc
clc
mov
dec
pop
fsubl
inc
mov
push
push
cmp
insl
xchg
inc
subb
mov
inc
push
sub
cmp
mov
repz
xchg
loope
jmp
jbe
lock
xchg
push
sarb
cmp
mov
sbb
shll
sbb
jne
hlt
sub
iret
xor
adc
mov
jmp
sub
jmp
outsl
pop
cmp
fsubrl
into
fsubl
and
mov
lcall
mov
pop
popf
lret
orl
int3
dec
mov
ds
or
cmc
mov
repnz
and
inc
xchg
sti
lret
sar
pop
popa
aaa
loope
ja
lret
cmp
push
lods
sbb
dec
sub
push
xor
or
repnz
xchg
add
ficompl
mov
clc
dec
repz
push
mov
or
push
pop
sbb
nop
rcrl
ljmp
mov
loopne
pop
cmc
lods
xor
loop
push
dec
arpl
sahf
in
fadds
sub
repz
lret
lds
cld
je
js
in
xchg
dec
in
int
and
jns
xchg
cmp
ja
test
inc
mov
out
cmp
sub
insl
jno,pn
sub
ljmp
cmp
arpl
out
pop
push
sbb
push
jns
cld
inc
mov
sahf
cltd
inc
xchg
lock
ss
in
cmpsl
in
mov
pop
add
stos
fwait
test
and
mov
mov
fs
mov
jmp
jo
push
xor
jo
je
imul
ret
xchg
cmp
fsts
xchg
jne
cs
pop
ljmp
roll
stc
cmpsb
jmp
ds
jle
xlat
enter
add
sub
pop
je
call
dec
enter
jl
stc
dec
clc
and
push
ret
mov
repnz
ds
fmulp
mov
jp
dec
mov
insl
or
mov
stc
add
shll
push
imul
mov
dec
ret
xchg
cmp
lock
cli
push
push
cs
add
jnp
xchg
test
lods
ljmp
shl
push
xchg
mov
insb
xchg
sti
out
popf
jecxz
sub
xchg
es
outsl
stos
scas
dec
addr16
pop
daa
rcr
pop
incl
mov
cmp
les
idivb
mov
add
xchg
sub
dec
outsl
popa
jne
mov
addr16
xor
pusha
or
mov
mov
imul
mov
sbb
out
cmpsl
or
push
xor
pop
test
mov
vpmovzxdq
imul
xor
adc
popa
mov
or
popf
into
cli
pusha
push
and
sub
shl
lods
jae
lret
xchg
push
idiv
ret
add
xchg
fidivrl
repz
ja
jns
and
sahf
scas
aad
xchg
adc
sbb
cmp
pop
mov
mov
mov
test
mov
jo
addb
test
out
sbb
pop
shr
test
es
lods
push
mov
loope
and
adc
imul
xlat
jp
lods
imul
add
cli
out
mov
xor
mov
fists
dec
inc
push
pop
mov
mov
mov
inc
sbb
sbb
test
adc
es
pop
xchg
mov
fwait
push
pop
js
push
mov
push
or
aam
mov
pushw
and
xor
int3
mov
mov
lahf
mov
js
cmp
xchg
pop
icebp
lcall
xchg
test
jg
fwait
xchg
sub
sbb
add
sbb
push
in
cmpsb
std
addr16
mov
pushf
mov
outsl
sub
xor
push
sbb
rcr
mov
pmaddwd
ret
aam
in
sub
fisttpl
imul
ds
inc
mov
popa
sbb
ret
inc
adc
arpl
xlat
stos
mov
mov
aaa
in
pop
or
xor
int
sbb
pop
pop
mov
loope
popf
or
clc
arpl
in
ret
aad
jb
cwtl
and
popf
push
and
into
cmp
cs
stos
adc
mov
xchg
dec
fsubs
add
xchg
je
lods
dec
into
test
mov
ljmp
or
mov
iret
fistpl
adc
push
jge
movsb
add
sub
test
dec
pop
pop
xor
cltd
iret
ljmp
ja
push
les
xor
andb
dec
cmp
mov
sub
mov
pop
dec
fwait
stc
icebp
loope
inc
in
outsl
cmp
icebp
mov
add
inc
lock
arpl
dec
add
inc
es
lea
cmp
popa
mov
jg
xor
add
test
loopne
les
insb
roll
dec
cli
stos
fstps
push
mov
nop
lret
insb
jle
int3
or
pop
in
enter
enter
push
pop
pop
cmpl
nop
push
dec
dec
and
dec
ja
ljmp
ror
sbbb
cs
es
data16
jl
in
and
and
dec
stos
cmp
fwait
or
xchg
dec
xor
and
and
jg
sub
out
fsubs
dec
dec
aad
mov
enter
mov
add
clc
and
adc
mov
stc
mov
sub
cmpb
bnd
mov
lcall
outsb
xchg
popa
xchg
inc
pop
ja
daa
std
fldl
xor
pushf
je
inc
push
sbb
sub
xor
ror
mov
stos
xchg
pop
lcall
cmc
mov
jbe
es
lret
test
mov
loopne
nop
aam
pushf
in
cmp
rcr
shrb
or
sub
sbb
repnz
push
sub
pop
push
xor
jae
add
out
fsubrl
xchg
aas
mov
aaa
mov
xor
insb
je
and
fucomi
mov
dec
pushf
mov
mov
in
sub
lock
dec
les
fucomp
jbe
loope
and
sbb
sti
xchg
mov
dec
mov
dec
xchg
cmp
xchg
xchg
add
xchg
out
pushf
aad
push
shlb
movsb
add
or
pop
mov
push
xor
jmp
add
dec
out
push
lods
ret
nop
and
or
std
xchg
loop
sarl
add
sbb
and
add
jne
imul
gs
test
adc
pop
mov
ja
notb
or
scas
xchg
pusha
cmp
push
jo
sbb
push
dec
inc
rcr
lds
aam
fdiv
std
fadds
hlt
cmp
add
movsb
inc
in
and
cmpsl
mov
and
pop
jecxz
cmp
jl
sub
sbb
enter
xchg
lods
jmp
cmp
fmuls
js
pmuludq
inc
pop
mov
mov
lock
mov
je
movsl
movsb
jge
mov
sbb
scas
insb
into
adc
inc
in
test
mov
xchg
test
and
test
or
sti
popf
adc
test
xchg
pop
insl
cli
sub
sub
or
mov
fisttpll
mov
xchg
iret
ret
inc
mov
or
xchg
or
outsb
call
ret
stos
mov
rorl
or
xlat
pop
imul
out
scas
mov
cmc
cli
adc
fcmovnu
add
xchg
add
outsl
scas
mov
jno
adc
les
inc
mov
add
xchg
mov
xor
cmpw
test
inc
mov
js
hlt
js
ret
cwtl
adcb
ss
push
mov
push
in
xor
setnp
mov
in
shrb
jl
cmp
push
fwait
call
cld
out
sbb
and
add
xor
lods
inc
cltd
fidivrs
cmpl
mov
idivb
xor
ror
shrb
dec
cmp
mov
sub
push
inc
aas
sbb
cltd
jnp
mov
testb
nop
xor
fdivrs
test
fwait
push
mov
inc
add
pop
pop
jmp
or
cwtl
add
pop
push
fs
adc
lahf
pusha
inc
dec
cmc
pop
push
lds
divl
sub
pop
push
mov
mov
add
sub
roll
or
mov
mov
push
cmp
in
sti
popw
mov
mov
in
mov
sub
or
jbe
in
shll
jb
sarb
ja
sbb
loope
inc
cmp
push
cmp
std
cmpsl
mov
mov
loope
inc
int3
cwtl
dec
stc
push
or
dec
mov
mov
push
outsl
xlat
and
push
push
arpl
xlat
into
push
shrb
lods
jne
mov
sub
add
fsts
iret
aas
mov
outsl
pushf
adc
test
jns
push
mov
sbb
dec
adc
jp
cmp
inc
ret
data16
shlb
xchg
dec
inc
inc
cwtl
mov
cmc
rolb
adcb
mov
sbb
jb
dec
movsl
add
add
pop
and
andl
dec
add
mov
jmp
xchg
cld
mov
and
jmp
dec
or
sub
outsb
push
into
or
hlt
cmp
out
cli
in
sbb
fs
xchg
stos
outsb
dec
test
lret
dec
pop
rolb
daa
in
jge
dec
aas
rcrl
inc
pop
sbb
out
rclb
cmp
dec
pop
adc
mov
pop
ss
loope
add
outsl
or
fsubr
mov
jle
push
stos
das
incb
xchg
dec
leave
push
inc
in
xlat
jne
mov
aaa
xchg
loop
out
sarb
jb
cmp
add
dec
sbbb
inc
jo
jecxz
sbb
jno
pop
fidivl
daa
mov
lret
jmp
mov
fcomps
movsl
mov
lret
cmp
push
out
sbb
sbb
loop
and
adc
in
sbb
fistps
clc
mov
mov
daa
gs
lcall
lea
cmpsb
dec
sbb
xorl
push
add
sarl
sbb
and
jge
aas
in
push
stos
cltd
jae
cmc
pop
sbb
scas
add
cli
or
mov
and
push
std
sahf
cmpsb
pmaxsw
cli
sub
cmpsb
rol
leave
lret
mov
cmpsb
sub
test
or
loope
mov
xor
rol
lods
movsb
cli
test
adc
dec
dec
mov
das
sub
stos
xchg
xchg
repz
pop
cmp
enter
lcall
push
mov
clc
les
inc
sti
mov
mov
lcall
mov
notl
popa
ss
add
or
push
adc
lret
jae
inc
xor
stos
pop
sub
xor
fsubr
ret
mov
inc
dec
inc
push
in
int3
inc
mov
or
jl
or
inc
notl
lcall
cwtl
sbb
sarb
push
popa
pusha
add
sarl
mov
mov
outsb
lods
xchg
sbb
pop
mov
xor
insl
adcl
mov
mov
inc
mov
pop
iret
mov
dec
mov
push
pusha
dec
insl
mov
adc
sbb
call
sbb
sbb
fnsave
in
leave
icebp
xchg
jge
add
shlb
add
pop
clc
mov
jmp
jg
push
or
aaa
mov
rclb
roll
int
sub
and
cmp
test
cmp
dec
xor
loop
push
and
loop
je
lcall
push
push
into
jnp
cli
out
mov
add
lds
or
outsl
scas
lret
enter
je
pop
outsl
xor
mov
ficoml
jmp
out
sub
movsb
cmp
into
cli
clc
push
incb
ja
js
pop
pop
fdivrs
pop
mov
sub
fwait
and
sbb
inc
push
inc
inc
out
push
imul
lahf
pop
xor
gs
enter
fs
and
movsl
fwait
arpl
mov
test
mov
pop
add
fadds
sbb
xchg
sarb
and
jo
arpl
jge
adc
pop
inc
fsubs
inc
icebp
mov
idivb
hlt
int
andb
sbb
pop
xchg
js
cmp
inc
mov
cmp
xor
mov
outsl
pop
mov
and
or
cwtl
push
add
loopne
inc
scas
nop
pusha
out
push
pmovmskb
out
les
sbb
cli
adc
push
mov
ret
and
out
and
xor
and
jnp
sbb
xor
aam
xchg
add
pop
cmpsb
out
jmp
sbb
xchg
add
pusha
xchg
ljmp
leave
cli
insb
mov
xchg
push
cwtl
pop
outsb
add
cmp
cmp
into
xchg
jecxz
mov
inc
jno
mov
and
es
pushf
test
pop
pop
pop
push
pusha
rcll
movsb
xor
and
mov
dec
int
pop
call
mov
dec
outsl
dec
popa
sub
andb
test
mov
jl
add
mov
sbb
adc
dec
add
loopne
insl
cli
mov
mov
mov
xor
or
mov
orb
xchg
cltd
add
mov
sbb
sbb
je
push
sbb
pushf
rclb
sub
pop
fnstenv
inc
movsb
addr16
test
cmp
add
fists
int
popf
gs
cmp
mov
in
fisttpll
jb
je
cmp
pop
ljmp
leave
into
sbb
ret
movsl
add
mov
icebp
movsb
inc
popa
lret
mov
pop
gs
sysret
push
test
lds
test
mov
mov
inc
hlt
mov
or
fdiv
inc
inc
outsl
mov
into
or
test
shll
sbb
sarl
pushf
sub
pop
cmp
ja
arpl
mov
mov
popf
movsl
js
gs
mov
insl
in
cltd
call
addb
cld
or
dec
pushf
xchg
loop
jnp
cmp
pop
aaa
aad
test
jmp
daa
xor
je
mov
mov
jo
or
aad
ficoms
inc
fcompl
push
rcrb
bound
pusha
stos
mov
jns
adc
jmp
xlat
add
imul
out
cmp
adc
lret
sbbb
cs
subb
lods
repz
test
push
fs
sub
sub
pop
jno
jle
jecxz
xor
repnz
fisubrs
int3
sub
out
xor
loope
pop
icebp
mov
js
push
shll
mov
mov
sub
lret
and
or
add
xchg
jmp
out
xor
push
jns
shl
push
pop
pop
fcoml
jns
stos
xchg
add
into
fstps
mov
mov
mov
and
sahf
aad
fcoml
pop
imul
mov
dec
pop
lcall
mov
mov
dec
jb
xchg
jb
xchg
int
jae
sbbb
xchg
push
outsb
fucomi
out
mov
mov
ja
push
and
ret
pop
inc
push
ret
out
mov
jle
out
in
push
popa
mov
xchg
fimuls
stos
cmpsl
fcmovnbe
xchg
pop
icebp
movsl
inc
popa
popf
fisubrl
adc
mov
xorl
or
jmp
mov
pop
pop
das
push
jbe
cmp
push
lret
xor
pop
repnz
js
xor
gs
dec
jnp
adc
les
sbb
push
push
insb
es
xchg
jnp
or
push
iret
jmp
mov
inc
lods
push
fnstsw
push
xchg
and
or
daa
stos
and
add
call
pop
pop
mov
sbb
in
xchg
test
mov
stos
inc
lahf
inc
sub
ss
jmp
or
add
dec
lret
push
icebp
add
icebp
sub
sbb
pusha
lret
sub
out
xor
divl
rcr
into
leave
clc
adc
fsubs
xchg
fs
jl
jno
loope
add
mov
sub
repz
pop
ljmp
inc
xor
mov
rol
cmp
xor
lea
mov
dec
cmpsl
pushf
sbb
arpl
cltd
mov
mov
mov
test
xchg
rclb
mov
out
inc
inc
scas
scas
xor
stos
jb
rol
push
sarl
pop
push
or
mov
pop
xor
fcomip
jg
cmpsl
movsb
adc
add
cmpsb
lea
mov
push
fnstcw
mov
dec
scas
ficomps
aam
sub
sahf
js
je
ror
xor
pop
mov
mov
xor
sub
loope
fisttpll
loop
mov
cwtl
inc
cmpsl
jbe
mov
cs
mov
xchg
jnp
popa
mov
bound
sub
outsb
dec
sbb
sub
clc
mov
push
jns
push
hlt
mov
popa
sub
mov
enter
arpl
add
jae
push
pop
cmp
and
push
push
sub
jecxz
gs
ds
and
push
push
jmp
cmpsb
jbe
mov
push
shlb
jae
pop
jp
lock
loopne
mov
and
jno
mov
xchg
or
and
pop
xor
leave
rolb
mov
cld
mov
xchg
inc
mov
pop
loopne
jge
inc
jge
mov
js
push
jae
ljmp
fwait
xchg
push
cld
daa
jle
nop
mov
push
mov
mov
pusha
ret
xor
jae
popf
cmc
cmp
stos
out
bound
je
and
adc
sub
cmp
inc
pop
testl
bound
cmpsl
pop
jmp
add
fistpl
xor
xor
fimuls
pop
xchg
bound
dec
sbb
sub
or
inc
pop
mov
pusha
xchg
cmp
adc
hlt
sbb
dec
movsb
stos
aad
jmp
fsubs
jno
mov
or
stc
fnstenv
mov
jae
and
lods
stos
cltd
movsb
cmpb
sbb
push
daa
and
push
xor
cltd
mov
fisubrl
jo
mov
push
cmp
push
push
in
pusha
mov
push
lods
lahf
jns
sub
sbb
cmpsl
sbb
dec
lock
or
or
fsubs
push
sbb
or
enter
or
je
cwtl
and
aas
stos
cmp
mov
in
fimull
rolb
sbb
mov
lret
ss
add
lea
push
xor
mov
addr16
and
adc
jo
mov
icebp
loop
fnstenv
fwait
jno
test
add
sub
mov
imul
jg
int
or
or
std
and
je
push
jecxz
mov
lss
mov
fistpl
shlb
sub
sbb
mov
add
lods
xchg
xor
sahf
mov
das
movsl
into
xor
pop
lock
pop
xchg
mov
in
xchg
aaa
psubusw
dec
mov
lock
popf
call
scas
jb
mulb
shl
cmp
insb
aas
addr16
loopne
outsl
dec
mov
mov
lds
cmp
ss
sbb
inc
pusha
aad
imul
fsubp
inc
jo
aas
test
adc
xor
sub
pop
sub
add
inc
fists
loopne
push
mov
add
pop
xchg
xor
xchg
push
rorl
shl
in
ss
and
jl
in
mov
ret
mov
aaa
int3
ss
jecxz
sub
push
notl
xchg
jb
mov
lcall
mov
lcall
scas
mov
pop
mov
adc
test
mov
push
dec
and
loope
or
out
sub
cld
sub
fsubrl
xor
cmovo
jae
inc
cmp
ljmp
scas
add
test
xchg
sar
cmp
adc
lcall
jae
popf
sub
clc
mov
add
add
xor
xor
and
dec
sbb
and
mov
cmp
inc
repnz
mov
cmp
xor
cmc
mov
jge
in
adc
sub
mov
test
ret
sub
sahf
aam
cld
pop
push
sub
push
xor
enter
mov
mov
sti
repz
pause
xchg
inc
nop
dec
and
or
add
or
or
push
cs
jmp
lret
mov
add
pop
in
mov
fs
iret
daa
dec
dec
mov
pop
add
mov
data16
xchg
aas
adc
mov
inc
and
mov
movsb
mov
fwait
bound
jecxz
mov
iret
sbb
dec
les
movsl
nop
fisttpl
pop
mov
add
cmp
lcall
adc
xlat
sarl
mov
lock
jl
adc
iret
cmp
lahf
sbbb
enter
cmp
mov
add
pop
mov
xchg
cwtl
xchg
fldl
loop
sbbl
lahf
mov
rcll
cmpsl
add
aas
adc
pop
cltd
jns
fnsave
pop
imul
pop
sbb
outsl
mov
ja
add
xorb
orl
test
jb
ljmp
jmp
sub
xchg
fcomi
lret
xchg
xor
in
dec
add
stos
outsl
in
ja
inc
lret
push
pop
and
mov
mov
jecxz
xchg
loopne
daa
push
inc
xor
mov
pop
pop
ret
and
repnz
imul
jle
stc
rcrb
test
or
mov
xor
cmp
push
push
test
cmp
push
lds
adc
pop
icebp
bnd
test
rolb
mov
leave
cli
or
pop
rorl
push
fidivrs
mov
out
mov
sub
arpl
ret
mov
pop
add
xor
pop
push
xor
adc
xchg
repz
imulb
xor
leave
inc
inc
mov
mov
adc
and
ljmp
pop
addr16
jl
out
mov
sbb
stos
jle
mov
sbb
fbld
mov
arpl
jmp
imul
sti
fsubr
inc
lods
push
cltd
shrd
xor
gs
outsl
out
pop
or
or
push
inc
cltd
js
adc
fcmove
stc
imul
and
mov
or
pop
adc
out
cmp
and
outsb
outsl
cmp
or
mov
xor
imul
inc
cmp
stc
mov
repnz
scas
dec
inc
pop
adc
push
ret
out
bound
out
jge
xchg
adc
or
mov
or
es
mov
bnd
push
fs
mov
ficoms
add
jmp
cmp
popf
lret
xlat
aaa
movsl
call
push
out
mov
adc
push
jmp
dec
pop
sub
inc
mov
push
aam
loopne
dec
xchg
xchg
daa
daa
xor
adc
sti
fdivrl
xor
in
fsub
insl
insl
jnp
dec
add
sub
inc
add
sahf
clc
pop
inc
xor
jl
hlt
xchg
outsl
dec
sahf
sbb
dec
mov
test
jecxz
or
and
mov
repz
lds
xchg
sti
xchg
sbb
and
clc
xchg
pushf
mov
gs
bound
into
ljmp
xchg
fmul
mov
jg
push
mov
adc
cmp
call
or
rcl
ret
sub
inc
mov
and
or
fistpll
gs
loopne
dec
pop
shlb
pop
addr16
in
jecxz
jo
mov
xchg
mov
jno
out
xor
int3
outsb
cmp
fbld
jns
imul
cwtl
es
stos
sub
adc
mov
xor
out
cmpsl
adc
mov
pop
pop
mov
adc
cmp
mov
lret
mov
loope
out
clc
cmp
sbb
sub
aaa
testl
jmp
test
push
insl
dec
test
add
sbb
mov
xor
imul
dec
mov
jmp
xor
arpl
rolb
inc
in
jg
sbb
cli
pusha
testb
jmp
test
cltd
jne
inc
add
pop
and
sbbb
push
shll
outsb
bnd
jb
cmc
jns
inc
das
pushl
jg
dec
clc
xchg
arpl
gs
cmpsl
dec
push
xchg
dec
in
inc
jb
xchg
dec
inc
xchg
lahf
out
popa
mov
shrd
gs
adc
mov
cltd
xchg
sub
mov
xchg
insl
pop
xchg
push
mov
ret
call
jb
cmp
into
pandn
mov
dec
cmp
rcr
cmp
lods
push
scas
sub
jmp
iret
sub
cs
jnp
xchg
xchg
cld
in
push
sbb
arpl
mov
pop
mov
jnp
xchg
sub
pop
out
stc
dec
mov
ds
jge
pop
pop
jno
mov
rorl
xor
xor
aaa
fmuls
lahf
and
xor
in
cmpsb
stos
jne
lods
and
sbb
lods
pop
inc
and
faddp
cwtl
pop
jp
pop
stos
jg
js
or
add
shrl
sub
ljmp
add
adc
and
pushf
daa
scas
in
and
dec
pop
pop
out
inc
inc
iret
jbe
inc
pop
pop
cwtl
movsl
or
out
pop
adc
das
sbbb
mov
lret
dec
mov
imul
xor
xchg
and
mov
cmp
jae
xor
mov
es
pop
add
inc
popf
xor
andl
pop
mov
rclb
notb
lods
lock
lret
scas
cmp
mov
mov
jbe
outsb
fsubl
in
clc
push
popf
daa
dec
xchg
xchg
and
and
mov
xchg
shr
je
popf
inc
cltd
stos
xchg
mov
inc
add
push
out
jecxz
movsb
inc
int
out
icebp
and
stos
je
xchg
fsubl
and
ds
shlb
push
push
mov
stos
push
clc
mov
dec
sub
or
mov
mov
cmp
ss
jle
insb
lods
test
dec
inc
push
mov
fisttps
mov
sbb
sub
sub
mov
push
mov
ljmp
es
xchg
xor
loopne
inc
ficoms
adc
xorl
push
push
cltd
inc
cmp
int3
or
pop
bound
and
sbb
cmpsb
xchg
aad
push
or
pop
jne
mov
pop
js
dec
sub
fldenv
pop
xlat
incl
lock
sub
cld
in
cltd
xchg
lahf
in
sbb
test
pop
cltd
sub
outsb
insl
mov
divl
in
lea
cmp
aad
mov
jmp
sbb
repnz
pop
dec
sti
mov
xchg
sti
int
stos
call
clc
push
in
out
mov
push
inc
jg
ret
mov
fadds
test
loope
mov
mov
loope
nopl
push
fsubrp
or
enter
mov
in
shlb
in
mov
mov
fstps
mov
test
popa
inc
sub
mov
cmp
scas
mov
jle
dec
xchg
xchg
shlb
and
lcall
insb
push
sti
or
xchg
cmp
sub
mov
or
jns
insb
iret
in
mov
and
clc
dec
or
sub
push
add
inc
stos
fisubrs
test
pop
es
dec
cmp
dec
sahf
testb
xor
ja
xor
sbbl
hlt
rclb
stos
pop
mov
insb
inc
mov
sbb
rclb
mov
sbb
es
add
xor
adc
test
mov
xchg
inc
adc
mov
cltd
xlat
pop
and
dec
lahf
xchg
pop
mov
ds
int
sahf
cmp
movsl
lcall
les
and
mov
in
pop
enter
jle
not
xor
fisubs
pop
mov
adc
mov
pop
pop
loopne
orl
xor
pop
int3
jno
push
cmp
ljmp
in
jle
sahf
fldcw
or
aam
dec
int
cmp
loope
push
dec
int3
out
repz
fdiv
scas
cmpsl
andb
push
cmc
inc
call
hlt
lret
push
adc
dec
insl
xchg
or
and
fnstcw
mov
and
inc
mov
fucomp
dec
test
mov
push
push
mov
sbb
mov
sub
push
js
pushf
clc
xor
lock
pop
lods
daa
out
cmp
pop
mov
cwtl
jg
lea
sub
mov
scas
test
repnz
xchg
rorl
cmp
les
jnp
fisubs
jne
cmp
fs
ds
shlb
sbb
imul
sub
fwait
and
push
ret
inc
test
pop
mov
or
xor
aaa
sub
jl
pop
clc
cld
cmpsb
sahf
mov
adc
mov
and
jge
jge
and
xorb
mov
test
out
adc
test
push
les
pushf
sbb
ret
jno
shl
mov
popa
hlt
adc
aaa
fcompl
aad
jmp
dec
stos
repz
jno
mov
sahf
call
sti
lahf
pop
xchg
gs
adc
push
scas
out
mov
jl
bound
je
mov
in
dec
mov
cs
andb
lea
icebp
out
and
jl
rcll
enter
movups
adc
flds
pusha
out
and
push
ds
insb
aas
fstp
shrb
xlat
ret
and
and
out
je
sbb
shlb
push
xchg
je
jne
outsb
jg
ljmp
mov
mov
pop
xor
or
lea
mov
es
out
in
jno
pop
test
sbb
inc
jb
popa
add
and
cli
in
nop
mov
fnsave
mov
xchg
xchg
fstpt
sahf
and
cmp
xchg
les
ljmp
dec
dec
mov
mov
repnz
inc
cmp
jl
or
pop
push
mov
push
ja
push
hlt
subl
push
mov
outsl
dec
sbb
rcrl
xor
or
lods
in
std
mov
mov
cmp
dec
pop
int3
and
cmp
push
loope
fwait
out
fldenv
mov
imul
daa
adcl
sbb
imul
fldl
mov
sub
inc
push
movhps
data16
cmpsb
arpl
jno
dec
test
divb
adc
rcll
imul
or
cltd
cmc
fs
lods
ficoms
jno
pop
roll
jne
sti
inc
mov
mov
je
mov
repnz
sbb
dec
stc
mov
jns
ljmp
iret
pusha
jbe
dec
or
sbb
mov
subb
fsubrp
lea
jg
sbb
mov
cwtl
xchg
and
jl
jmp
jno
add
jmp
aam
jge
jl
paddusb
into
pop
lock
pop
fcompl
jnp
std
xor
ja
sbbl
cmp
rol
add
bound
or
push
sub
and
pushf
sub
sti
in
or
cs
push
icebp
fisttps
mov
and
test
dec
repz
fnstcw
rcrb
inc
xlat
stc
xchg
stc
or
nop
sbb
mov
inc
leave
adc
js
pusha
ss
ds
adc
adc
imul
dec
push
mov
sub
jl
jg
adc
sti
xchg
jle
sub
cmp
mov
and
xor
cmp
add
pop
fnstcw
jo
jle
jne
inc
cmpsl
enter
hlt
xchg
cld
mov
or
loope
inc
push
push
mov
adc
sub
pop
jmp
shlb
sbb
sub
stos
pop
lods
cmc
pop
insb
ss
int3
lea
mov
mov
adc
hlt
test
loopne
add
pop
mov
aas
xchg
pop
xor
mov
xchg
jns
dec
pop
xchg
xor
hlt
jl
xor
imul
stos
xchg
cs
cli
dec
and
push
jae
idiv
jo
cmc
add
sbb
es
mov
jns
dec
jg
idivl
push
push
adc
mov
std
jp
inc
es
xchg
jbe
mov
pop
adc
sub
rcll
lock
jae
daa
and
shlb
jbe
inc
mov
add
jle
sbb
cmpsb
xor
and
inc
inc
push
stos
cli
inc
vpmaddwd
sub
ja
idiv
jo
push
pusha
into
hlt
inc
loopne
adc
dec
xor
dec
mov
cmp
xchg
mov
leave
inc
imul
ss
jp
mov
push
pop
mov
rcrl
or
pop
adc
test
aas
cli
jo
lret
xor
jp
icebp
fidivl
dec
lods
xor
push
xchg
repz
imul
testl
shlb
ret
shlb
sub
fldt
repnz
dec
sbb
inc
adc
xchg
in
add
xchg
mov
int3
popa
dec
repz
fisttpl
sbb
jl
pop
and
mov
dec
mulb
xchg
add
int
ficompl
cmp
sarl
adc
mov
repz
xorl
cmp
lret
jo
aam
test
aad
push
cwtl
sbbl
or
pop
test
fnstcw
mov
mov
mov
jg
adcl
in
test
push
outsl
cmp
js
jns
test
add
cwtl
daa
lods
loopne
std
mov
sub
xchg
cmp
xorl
cmp
cld
insb
mov
les
adcb
bound
idivb
out
pop
popf
sbb
lret
push
fnstenv
pop
fstp
enter
cld
and
mov
loop
push
frstor
mov
cmpsb
test
rolb
testl
test
sub
mov
cld
loope
fs
xchg
adc
sub
xchg
orl
stos
movsb
fcomps
jmp
je
adc
scas
leave
lahf
mov
inc
or
repnz
mov
idiv
out
inc
jg
leave
sub
es
es
and
sub
pop
cmp
outsb
aaa
push
adc
in
xchg
jge
movsl
aas
adc
jle
xchg
jae
pusha
int
test
pop
xchg
cld
fdivr
pop
jecxz
hlt
test
cltd
mov
dec
inc
shl
jnp,pn
mov
dec
outsb
inc
insb
inc
lock
addr16
push
push
divl
push
inc
sub
xchg
inc
insb
sahf
sbb
rcrb
mov
jmp
adc
es
loopne
shl
insl
stc
xor
push
cmc
jae
and
in
and
mov
ss
dec
arpl
out
mov
push
nop
aam
ja
push
cwtl
jp
lret
je
add
mov
bound
test
mov
jmp
mov
xor
cmp
xor
movsb
sub
ret
imul
xchg
je
sbb
push
and
sub
lock
add
cmp
pop
rdpmc
sbb
add
int3
repnz
and
pop
mov
jmp
and
in
add
cmp
sti
je
mov
lock
icebp
add
xor
xor
or
mov
fs
pop
pop
xor
pop
cli
mov
bound
lods
mov
jae
mov
adc
je
or
subl
mov
pop
ljmp
leave
es
aas
cmpb
pop
mov
pop
sub
sub
mov
push
pushf
adc
setge
push
test
pop
scas
mov
inc
dec
adc
and
sub
xchg
jmp
roll
push
ljmp
xchg
mov
xchg
repnz
lret
jge
orb
pop
xchg
adc
ds
jle
hlt
xor
jmp
adc
cmp
mov
andl
pop
mov
out
and
fwait
cmc
jb
sbb
call
dec
mov
fstps
cltd
shll
test
data16
and
sbb
dec
mov
in
jl
not
or
xchg
pop
loope
lahf
cmp
leave
in
xchg
mov
jnp
xor
and
push
loope
xchg
mov
inc
addr16
and
lret
scas
mov
jge
cmp
cmp
ja
loope
jg
notb
jge
mov
lret
dec
adc
outsb
cmp
ljmp
adc
inc
clc
push
jnp
cmp
and
mov
pop
mov
push
movl
sub
lea
stos
int3
cs
shlb
arpl
xor
lods
push
dec
xchg
aad
inc
push
push
retw
ljmp
sbb
aam
xchg
bound
mov
xor
jmp
inc
sbb
scas
call
fidivrl
fistpll
into
es
loop
adc
lock
mov
adc
sarl
add
mov
mov
stc
in
lret
scas
faddp
inc
jmp
jg
fiadds
mov
add
into
mov
jmp
filds
cmp
pop
dec
sbb
aas
and
jg
fcompl
and
push
sahf
shll
gs
mov
insl
cmpsl
popf
mov
sub
jecxz
movsl
std
cmp
cmp
cmc
test
add
pop
pop
cmp
popa
dec
cmp
pop
mov
dec
rorb
xor
in
jo
mov
mov
xor
push
lods
xor
aad
inc
ss
mov
sub
cwtl
hlt
cltd
or
mov
sub
lods
lcall
xlat
imul
push
mov
fcmovnb
xchg
mov
inc
popf
xchg
shl
test
or
pop
jg
stos
insb
mov
leave
xor
jns
clc
dec
cmp
ss
mov
or
dec
xor
pop
xchg
aaa
pusha
mov
mov
or
cmp
dec
cmp
scas
test
xor
ficoml
mov
jne
sbb
push
jb
jle
into
push
mov
rcrl
push
js
adc
stos
jge
push
cmpsl
adc
cli
loope
jmp
adc
jb
pop
push
dec
sub
xlat
sbb
sbb
inc
sub
jb
xor
jae
xor
out
push
push
ret
aas
cmp
xchg
or
and
inc
insl
mov
mov
sub
call
scas
jno
jmp
sub
test
xor
cmp
outsb
insb
ret
clc
repnz
cwtl
lret
imul
pop
dec
popa
movsl
mov
imul
js
mov
xor
mov
das
push
cwtl
jle
popf
or
push
pop
mov
add
mov
outsl
and
push
insb
arpl
les
stos
clc
insl
push
mov
mov
mov
clc
jno
popa
lock
enter
xchg
popf
dec
mov
data16
clc
testb
jae
mov
or
pop
jo
or
stos
xchg
or
fbld
mov
push
or
pusha
sbb
xor
mov
outsl
xchg
cli
sub
mov
or
jg
cwtl
pushf
dec
nop
and
jae
mov
xor
mov
push
sub
jns
stos
stc
movsb
out
mov
mov
sub
cmp
sbb
ljmp
adc
xchg
cld
mov
push
xchg
mov
stos
mov
xchg
mov
repnz
repz
xchg
mov
lret
xchg
push
fnstsw
and
and
xlat
scas
fsubrs
push
loopne
lahf
out
pop
adc
stos
in
movsb
arpl
cs
loopne
sub
enter
out
and
lea
add
push
out
stos
in
out
add
loop
pop
push
xor
xchg
rol
test
popf
and
das
pop
sbb
mov
popf
mov
dec
mov
pop
sbb
sbb
jp
out
cmp
push
dec
and
add
mov
les
das
pop
sar
test
ljmp
adc
pop
bound
pop
in
call
ja
sub
inc
mov
mov
xor
mov
pop
xchg
add
jp
aas
cmp
rorb
lods
test
push
add
pusha
or
sahf
xchg
mov
sub
movsl
and
jne
add
addb
mov
dec
push
inc
out
cmpsl
push
rorl
outsl
adc
push
jge
jb
xor
bnd
test
mov
jb
into
inc
adc
lcall
adc
nop
gs
frstor
out
push
cmp
add
hlt
shrl
pop
xor
inc
adc
dec
cwtl
cmp
faddl
jb
sbb
inc
das
ret
das
push
sub
pop
mov
mov
std
dec
pop
mov
aad
scas
repz
cmp
dec
fmuls
inc
popf
test
jo
jo
inc
cmp
mov
pop
icebp
shrb
pop
push
or
notl
jle
mov
hlt
push
insl
lods
sbb
ret
and
mov
popa
push
hlt
pop
rep
cmp
nop
add
popa
sub
andb
pop
popa
inc
add
xchg
xor
adc
dec
or
dec
xorb
adc
das
rcrl
adc
xlat
cmc
xchg
cld
mov
ret
dec
inc
test
stos
repnz
outsl
push
mov
pop
out
mov
push
jle
nop
fwait
int3
sub
xor
inc
jae
mov
ja
test
outsl
xchg
inc
imul
add
out
mov
mov
and
fisubs
sub
xchg
cmp
je
shll
inc
adc
push
ljmp
jno
ss
mov
xchg
shlb
pop
into
loop,pn
xlat
pop
shlb
movsl
push
xchg
dec
inc
inc
gs
mov
mov
cld
cmp
in
arpl
out
movsl
adc
ds
push
outsb
les
outsb
mov
jne
push
dec
cs
pushf
jae
pusha
cmp
shlb
push
xor
xchg
aad
mov
pop
sub
pop
outsb
or
lahf
incl
sub
shll
jae
aaa
mov
xchg
sarl
idiv
cmpsb
pusha
adc
ret
jno,pt
mov
movsl
gs
cmp
xchg
movsl
pop
pop
dec
sbb
mov
mov
popa
push
mov
mov
add
lds
push
jmp
mov
mov
cli
iret
sbb
xor
jl
mov
int3
dec
mov
and
cmp
dec
cmp
xchg
inc
sub
mov
cwtl
iret
cwtl
add
negb
mov
ret
sbb
xchg
andb
icebp
lds
cmp
inc
jnp
lods
mov
in
push
insl
aam
cmp
pop
adc
add
and
fwait
aam
lea
mov
les
inc
and
pop
out
and
dec
fstps
arpl
inc
push
inc
ljmp
xchg
les
ror
enter
xor
adc
mov
out
push
sub
inc
push
ja
mov
adc
sbb
repz
jo
roll
shll
fildl
sahf
idiv
pop
push
sti
cmpsl
jne
vshufpd
aas
push
pop
inc
lea
cltd
fdivr
mov
stos
outsl
sub
mov
mov
lds
xlat
loope
shlb
cmpsb
daa
negl
cli
jns
dec
mov
xor
repnz
stos
or
push
pop
pop
xor
loop
pop
lods
inc
shl
sarb
repnz
aas
mov
pusha
hlt
sub
sub
mov
xchg
mov
es
xchg
nop
fsubrl
outsl
ror
push
xor
pop
imul
and
xchg
mov
dec
mov
loopne
pop
int
das
in
and
loopne
js
adc
shlb
lds
clc
fs
cmpsl
stc
shrb
test
xchg
mov
xor
fs
imul
fs
inc
xchg
int
out
outsb
push
pop
xorl
stos
idivb
outsb
loope
mov
call
cmc
test
add
cmp
jae
imul
push
xor
rclb
dec
jae
mov
push
rorb
inc
and
sahf
dec
popa
rclb
popf
inc
ss
push
cld
daa
pop
jbe
xchg
shrl
sbb
xchg
xchg
or
inc
into
lret
popfw
out
mov
leave
mov
push
aad
insb
fists
es
fbld
xchg
sub
jle
or
lods
rolb
ds
pusha
cmp
pop
aas
sub
xor
bound
dec
ficomps
add
add
xchg
shr
add
addr16
sub
dec
flds
inc
cmpsl
js
pushf
jnp
cltd
or
popf
dec
cmc
repz
lds
push
leave
cmp
add
xchg
add
sub
aad
push
or
jo,pt
sub
ret
sbb
jle
jge
inc
fstps
in
call
int
imul
mov
fbld
sub
dec
stos
arpl
iret
mov
lret
inc
sub
movsl
inc
mov
mov
loop
jb
call
xlat
mov
in
jmp
pop
add
scas
icebp
mov
xor
mov
inc
bound
outsl
pushf
dec
outsl
xchg
mov
xchg
fwait
cmp
aam
pop
js
imul
pushf
pop
sbb
outsl
cmp
pop
lock
mov
xor
push
out
dec
pop
out
insl
cli
add
ss
pop
ret
test
xchg
push
lcall
inc
add
dec
jbe
int
hlt
cmp
les
jle
lahf
imul
fmuls
xor
push
sub
push
aam
mov
out
test
cmp
imul
lret
or
pop
iret
cli
arpl
jne
pop
mov
insl
ret
push
sbb
push
hlt
pop
jge
call
je
mov
sub
or
js
sub
sbb
leave
push
cltd
mov
inc
pop
test
jo
mov
inc
adc
jnp
inc
aas
insl
loop
imul
sub
or
add
aas
push
sub
cmp
cmpsl
push
js
jg
push
adc
inc
inc
cmp
fisubl
in
imul
xchg
aaa
cltd
xor
scas
add
sbb
jecxz
mov
scas
iret
cmp
sub
test
enter
jl
sbb
cmp
xor
cmp
test
loopne
jg
imul
add
sub
add
imull
arpl
push
jne
jns
cltd
dec
xchg
rolb
test
aam
mov
rol
sub
xchg
cmc
adc
and
scas
and
in
dec
cmc
xlat
dec
pop
sbb
les
jnp
js
and
icebp
movsb
xchg
cmp
lods
and
cmp
and
push
aaa
mov
jmp
xchg
and
cmpsl
inc
lea
ljmp
cmp
dec
inc
push
fsubrp
mov
xlat
sub
push
pop
cmp
xchg
icebp
popa
fwait
or
gs
insb
icebp
pusha
or
pusha
jbe
cmp
in
mov
leave
cmp
ds
xor
dec
lods
sbb
call
jns
jae
leave
xchg
daa
sub
scas
xchg
std
mulb
jo
icebp
repz
mov
adc
cmp
jmp
push
ret
jecxz
fildl
hlt
push
fdiv
xchg
xchg
sti
xchg
jo
andb
jae
in
pop
jns
mov
shrb
imul
lock
add
fdiv
in
loop
ja
ss
push
data16
jae
jns
fisubrs
mov
xor
cmp
fsts
xlat
lods
adc
push
in
icebp
sbb
xlat
xor
jecxz
cwtl
xchg
add
mov
xchg
push
out
dec
fwait
mov
pusha
xlat
xlat
jnp
mov
inc
push
ljmp
sub
mov
xor
inc
mov
aas
jp
pop
mov
mov
jno
pop
ret
and
icebp
mov
fimuls
inc
jg
dec
bts
data16
mov
adc
and
push
mov
es
sub
loope
cli
lea
pop
xchg
mov
pop
mov
adcl
push
bound
push
mov
xchg
adc
ret
lds
mov
cli
mov
call
mov
push
xor
adc
dec
outsl
cmp
adc
mov
in
adc
fwait
sub
adc
cmp
cmp
mov
jno
popf
pop
pusha
sub
test
pusha
inc
cmpsl
xor
push
pop
loope
jns
cs
rcr
dec
add
fldl
mull
or
xor
in
mov
icebp
push
or
popa
outsb
adc
sbb
pop
aas
inc
cli
pop
stos
ret
outsb
mov
rclb
adc
cld
sti
stos
in
mov
xchg
xchg
pop
in
pop
in
sbb
inc
cmp
or
fidivs
iret
in
dec
popf
xchg
ss
push
es
push
jb
push
mov
rcll
adc
in
ucomiss
push
cli
ljmp
pushl
ret
data16
loop
pop
stc
ljmp
je
jg
iret
test
pop
xor
test
xchg
fisubrs
mov
mov
insb
and
cs
rcl
sbb
jo
int
adc
lret
xchg
mov
in
int3
out
imul
jmp
repz
sbb
push
xchg
and
sbb
or
fwait
test
insb
stc
in
push
or
pushf
mov
lcall
loope
cwtl
xor
mov
scas
ljmp
pushf
push
xor
adc
add
jb
mov
sub
aad
les
lahf
int3
int3
mov
and
scas
mov
push
mov
xor
hlt
flds
aam
stos
mov
je
or
gs
dec
sahf
cmp
and
and
scas
dec
dec
mov
inc
repz
jp
lret
add
mov
sbb
inc
xchg
out
jge
mov
add
mov
jmp
or
ljmp
pusha
cltd
dec
mov
cmpsb
or
fs
mov
push
out
ds
popf
pushl
lock
incl
shrl
or
or
xchg
mov
mov
std
sub
mov
push
and
pop
pop
sbb
jno
xor
outsb
fnstenv
jmp
nopl
sbb
sahf
insl
shl
add
addl
jo
imul
cmpsb
push
in
push
fisubrl
cld
rcrl
iret
push
jmp
sub
xchg
ja
sahf
mov
gs
jge
sub
pop
jg
insb
loopne
cli
sahf
dec
ja
dec
inc
sbb
or
mov
out
sub
lret
iret
cmpl
cmc
push
sarb
or
scas
add
ja
rclb
cmc
lea
decb
in
sbb
popf
je
aad
jb
inc
lock
adc
ret
jb
ret
mov
sub
xor
sbb
int
negb
insl
ja
sbb
iret
repz
xlat
je
scas
xchg
lods
inc
imul
sub
mov
int3
or
dec
idivb
jb
lods
repnz
repz
test
mov
mov
fsts
es
xchg
aaa
mov
jne
mov
or
jns
fsubl
jmp
cld
and
mov
js
or
adc
xorb
or
dec
mov
push
test
icebp
mov
sar
decb
insl
cld
or
sti
nop
mov
mov
inc
push
lds
test
mov
daa
daa
in
push
sti
inc
mov
adc
addr16
push
inc
cmp
aas
pop
insb
push
test
cmpsl
lret
mov
cmc
popa
cld
jmp
imul
arpl
xor
inc
cmp
add
fcomi
ret
sbb
ss
xchg
xor
pop
in
fbstp
icebp
scas
inc
fcom
or
xlat
dec
ret
les
and
pop
fwait
lea
das
and
stos
xor
imull
and
sbb
cmp
ja
push
loope
mov
into
xchg
sti
out
inc
mov
aad
and
lods
push
aas
and
sbb
das
mov
xor
jns
jae
jmp
adc
xorl
mov
xchg
outsl
push
lahf
out
xchg
lea
fimull
cmc
cmc
dec
xchg
mov
repnz
out
or
xor
xchg
push
imul
neg
enter
pop
lods
repz
mov
sahf
push
in
ss
push
xchg
sbb
subb
mov
mov
imul
xchg
imul
out
inc
and
push
push
test
popa
mov
out
pop
push
out
mov
ss
xchg
stos
mov
outsl
inc
jo
mov
incl
mov
ret
add
lods
orb
xor
das
stc
fimull
push
out
lret
push
cltd
add
in
and
inc
cmp
jp
pop
push
pop
mov
hlt
xor
test
imul
lcall
jp
pop
ffreep
out
sub
stos
jmp
cwtl
fmuls
inc
dec
jno
mov
in
xor
call
add
fwait
loopne
dec
sahf
mov
mov
std
mov
test
jbe
jb
test
cmp
repz
mov
jl
fsubl
lea
popf
jne
dec
or
jnp
sub
aad
jle
dec
mov
cmpb
popw
je
add
lahf
cli
ret
movsb
loopne
fidivrl
inc
mov
divb
mov
adc
sbb
inc
loop
aas
cltd
adc
jecxz
xchg
jo
jb
shrb
les
and
test
dec
dec
cmpsb
and
loope
sub
push
mov
dec
nop
fs
dec
and
int3
or
in
inc
and
aad
stc
fcompl
mov
les
in
jb
ret
adcb
mov
mov
mov
push
shl
add
in
push
sub
jns
xor
jg
inc
sub
testl
fbld
mov
test
xor
add
test
lds
add
jmp
lods
clc
xchg
pop
aaa
clc
fwait
icebp
aad
jne
lock
das
mov
and
outsb
popa
xchg
mov
imul
enter
add
out
stos
cmc
sbb
bound
test
in
or
lret
xchg
xor
xor
fstl
mov
mov
and
mul
cmp
lahf
jp
sarl
cmpsb
popf
ljmp
lsl
inc
add
adc
out
jecxz
or
aaa
cmp
lds
mov
bound
fiadds
and
nop
lods
fcomi
repz
out
xchg
lods
pop
in
dec
test
push
imul
les
pop
lahf
lds
jle
sti
stos
pop
xor
and
fidivs
int3
cmp
popa
loop
aas
icebp
dec
and
mov
icebp
cwtl
add
xchg
inc
fimull
jmp
inc
arpl
mov
stos
pop
mov
dec
mov
cmp
mov
mov
sbb
incl
mov
jo
push
movsl
push
xchg
cltd
enter
js
iret
or
pop
push
lea
mov
stos
sub
xor
cmp
lahf
cmpsl
and
in
ror
xlat
out
fsubs
mov
mov
in
out
imul
xchg
adc
xor
cld
push
aam
into
mov
inc
int
fs
jbe
lahf
testl
inc
push
adc
add
mov
lods
pop
lods
enter
dec
sbb
daa
adc
movsl
fs
addr16
lret
add
fstp
push
hlt
sbb
mov
push
test
xchg
icebp
and
lods
in
movsl
data16
cmp
outsb
jl
and
repnz
xor
push
push
lahf
mov
repz
stos
pop
arpl
aam
data16
sarb
sub
mov
xchg
pop
fldt
push
lret
stc
fists
pop
mov
scas
stos
iret
inc
inc
mov
test
iret
mov
mov
adc
cmpsl
fwait
stos
push
mov
movl
sub
movsl
or
push
jmp
xchg
leave
jbe
xchg
adc
pop
pop
pusha
lea
adcl
loopne
pop
int3
cwtl
mov
shll
sub
stos
inc
sbb
mov
xchg
mov
std
ret
vpsubusw
jns
pop
in
loope
adc
aad
push
add
imul
sbb
dec
sbb
arpl
shrb
lods
and
aam
mov
fcomps
inc
in
out
pop
inc
lods
add
jl
stos
dec
xchg
xor
das
aad
lds
std
movsb
mov
adc
xchg
mov
sub
in
scas
push
mov
add
xchg
mov
or
int3
aam
into
or
nop
ror
add
jnp
aad
insb
mov
leave
fsubs
gs
dec
xlat
addb
pop
iret
pop
mov
outsl
dec
inc
sbb
call
mov
adc
scas
jns
mov
mov
leave
inc
mov
test
out
cld
in
mov
and
lcall
add
pop
mov
adc
movsl
call
imul
pop
fxch
lock
lods
std
fstpt
add
arpl
cmp
fwait
inc
andb
lahf
addr16
cmc
inc
push
cmp
jle
inc
add
fisubs
aad
adc
fstl
repz
imul
les
mov
pop
pusha
bound
xor
gs
movsl
add
stos
jmp
dec
daa
push
call
mov
outsb
mov
mov
out
push
xchg
push
je
subb
mov
sub
cwtl
inc
bnd
std
ljmp
aaa
pop
lret
fwait
cmp
loop
sahf
inc
or
and
pop
adc
pop
and
cmpsb
pop
or
sti
es
and
mov
roll
push
xchg
push
push
lods
jnp
mov
xor
clc
bound
jb
jp
testl
stos
sbb
cltd
repz
out
xchg
icebp
loopne
cmp
out
jae
xor
lret
and
lcall
mov
adc
mov
dec
fisttps
push
jae
push
int3
push
ret
and
fwait
or
call
xchg
fnstcw
push
dec
jl
push
mov
popa
cmpsl
jl
cwtl
mov
imul
pushw
bound
mov
out
push
sbb
loop
xor
clc
inc
stc
scas
sbb
in
out
cmp
sub
test
inc
sub
test
addr16
or
and
pop
xchg
popa
xor
jge
dec
inc
push
loope
das
xchg
dec
cmpsl
mov
jecxz
aaa
sbb
sbb
inc
xchg
add
add
or
in
lods
xchg
xchg
xor
jp
adc
adc
test
jl
xchg
lods
rcll
mov
out
aaa
out
mov
test
decb
iret
cmp
ja
repz
push
sbb
arpl
rclb
sbb
jo
or
jl
repnz
push
repz
ja
int3
pop
in
ljmp
push
cli
out
int
icebp
lds
pushf
pop
push
fidivl
and
add
xor
inc
je
lods
incb
lock
mov
sahf
dec
in
jg
dec
daa
js
push
sub
fstps
mov
add
sbb
cld
pusha
jle
aaa
inc
repz
pushf
aaa
cmp
jmp
subl
test
push
push
mov
mov
cs
aad
sub
ret
xchg
jbe
mov
repz
scas
shrb
pop
cwtl
lods
push
xchg
imul
fdivrl
arpl
cmpsl
push
rcll
roll
pop
jb
mov
fistps
decb
stc
mov
in
add
sbb
dec
cmpl
xor
jbe
shll
cs
gs
mov
arpl
push
js
outsl
lock
mov
or
pop
movsb
xlat
jne
fiadds
movsb
cmp
enter
fwait
push
mov
nop
je,pt
inc
test
xor
jecxz
test
ret
lods
out
hlt
leave
jmp
xchg
and
cwtl
sahf
xor
aam
iret
jle
pop
mov
pop
jecxz
mov
or
scas
inc
lds
inc
sbb
jns
imul
pop
sub
in
mov
lcall
scas
loopne
xchg
sbb
adc
cmpsl
dec
loope
xor
mov
outsl
sub
mov
push
hlt
subl
leave
and
hlt
dec
cwtl
cmpsb
aam
adc
adc
out
inc
enter
add
xchg
mov
sbb
outsl
lahf
sbb
lret
lea
sbb
cmp
es
xchg
inc
stos
xchg
inc
cmp
mov
cmp
stos
dec
push
movsl
sub
mov
mov
mov
mov
movsb
jo
and
jecxz
pop
dec
push
decb
add
sub
mov
jmp
outsl
leave
inc
dec
je
aas
push
or
out
xor
cmc
sbb
cmc
dec
shlb
mov
and
mov
cli
in
decb
jbe
sti
cwtl
mov
cmp
out
push
mov
push
sub
loopne
mov
mov
push
in
pop
push
add
dec
xorb
aaa
das
sbb
push
cltd
ja
in
xchg
inc
cmp
shrl
fcompl
jo
xchg
sahf
or
rcrl
xor
mov
leave
push
or
inc
xchg
pop
nop
cmp
in
pop
mov
dec
cltd
aas
arpl
icebp
push
imul
add
popf
and
fwait
inc
lds
xchg
sub
stos
es
lret
sub
and
stos
addr16
xchg
push
rclb
pusha
movsl
ret
adc
mov
notb
bound
lret
cli
mov
repnz
stos
mov
mov
cltd
and
shlb
lods
bnd
lods
add
test
test
cmc
xchg
xchg
push
aaa
dec
enter
pop
decl
mov
loopne
mov
int3
sub
dec
fisttpll
inc
adc
mov
xchg
inc
bound
push
repz
das
xchg
movsl
fdivrl
lret
rorb
leave
into
xor
nop
add
mov
scas
icebp
adc
fsts
sbb
jb
ret
je
mov
ret
xchg
cmp
int3
sbb
dec
movsb
pushf
mov
mov
nop
fs
inc
mov
adc
das
xchg
or
and
sbb
add
stc
movsl
sub
scas
cmpsb
out
pop
iret
xchg
mov
in
cltd
fucomp
push
stos
jb
sbb
xor
mov
jp
add
dec
fwait
in
mov
pop
lds
pop
mov
jp
popf
cmp
in
push
bound
fs
mov
xchg
push
inc
data16
rol
test
xor
int3
orl
mov
xor
mov
movsb
push
cmp
iret
jnp
shrb
dec
bound
and
adc
das
test
sub
inc
lods
push
pop
sbb
mov
cmp
mov
push
xchg
icebp
les
jg
cld
popf
pop
aam
mov
iret
in
sbb
jmp
adc
mov
or
sbbl
jns
cmp
outsb
xor
cmp
dec
xchg
rclb
mov
movsl
jg
inc
aad
xchg
mov
loope
add
dec
arpl
stos
arpl
and
rcrb
push
xchg
pop
sbb
fisttps
clc
dec
loop
jnp
lahf
lods
sbb
pop
lcall
push
insb
pop
sub
mov
cltd
addl
test
rolb
jp
repnz
out
mov
rcrb
das
ficoml
movsl
jmp
ret
cmpsb
and
mov
out
adc
test
in
imul
inc
xchg
addl
jns
hlt
rep
pop
sbb
icebp
in
daa
or
outsl
adc
stc
mov
pop
icebp
dec
cs
add
lock
lcall
add
loop
test
fisttpll
add
xchg
xor
sbbl
insl
add
cmpsl
cli
sub
sahf
ret
pusha
sub
cmp
repnz
or
push
and
pop
insl
out
adc
std
or
adc
mov
push
aas
mov
push
subl
aam
insl
test
cmc
fcomps
rcr
insl
sahf
outsl
and
push
dec
pop
pop
dec
mov
cs
add
std
mov
sbb
out
lcall
adc
xor
loope
jns
cmp
mov
imul
dec
mov
in
wbinvd
push
xchg
outsb
insl
mov
filds
mov
mov
mov
pop
ja
daa
adc
leave
fwait
xor
pop
out
pop
pop
push
pop
addr16
xor
sbb
fnstenv
cmp
test
mov
scas
clc
pop
mov
addr16
incb
sub
out
pop
stc
jnp
out
and
jae
sub
xchg
outsl
inc
stos
pop
or
xor
fs
mov
mov
sti
fcmove
mov
test
es
pop
fneni(8087
push
xchg
cli
dec
xchg
pop
inc
sub
bound
je
inc
inc
popf
fs
ljmp
add
loop
addl
es
mov
jmp
push
daa
popf
aam
icebp
icebp
inc
add
ss
jb
loope
subl
lock
clc
push
outsb
jecxz
mov
inc
ss
shrl
sub
and
adc
inc
lcall
stos
ja
sub
push
sti
sbb
rcrb
cmp
jmp
fldt
stos
cmp
lcall
loop
push
sbb
loop
bound
mov
inc
xchg
mov
inc
sarb
hlt
mov
cmpl
xor
ret
mov
gs
dec
inc
cmp
imul
dec
mov
popf
push
mov
or
pop
ss
sahf
insl
stos
mov
and
push
xchg
xchg
daa
and
mov
popf
dec
ss
xchg
mov
lods
cmc
ds
pop
shrb
mov
inc
and
jl
cmpb
movsl
sti
cmp
outsl
and
mov
in
dec
push
inc
inc
push
cmc
adc
adc
dec
jb
push
scas
ret
pop
scas
xchg
cmp
popf
dec
xor
jne
xor
sbb
lahf
bound
push
loope
xor
cmp
jmp
xor
fistl
fwait
cld
cmp
cmp
fadds
jo
cmp
push
mov
pop
jp
lods
icebp
sbb
pop
jmp
and
lahf
cmp
push
ret
mov
das
daa
fsubs
in
or
xchg
loop
nop
adc
loopne
xlat
and
orb
fcomip
movsb
jb
push
cltd
or
xadd
scas
and
push
push
and
and
movsl
adc
push
hlt
add
cld
imul
repz
lret
jge
stos
les
test
in
xchg
cmpsl
dec
jmp
stos
arpl
add
sub
in
fadd
xchg
push
out
cmp
movsl
mov
cmp
jnp
scas
xor
or
fs
repz
or
sub
iret
cld
sbb
push
lret
push
push
rcl
jp
or
inc
js
jne
or
es
pop
nop
mov
mov
aas
mov
jne
cmp
movsl
push
mov
inc
mov
test
add
cmp
stc
mov
hlt
pusha
loopne
or
jmp
and
aad
subb
sub
inc
les
jo
loopne
inc
xor
cli
arpl
push
pop
add
sub
pop
inc
and
lret
adc
push
and
in
xchg
xor
das
lret
mov
dec
repnz
dec
push
mov
inc
xchg
mov
push
repnz
jmp
mov
push
add
and
sti
inc
movsl
loope
dec
call
lret
cmp
movsl
imul
inc
and
ss
mov
subl
mov
push
xor
xor
iret
jnp
dec
scas
mov
sahf
push
out
insb
shll
icebp
cmpsb
add
fldcw
xor
cmc
loopne
pop
push
sbb
mov
sbb
repnz
pop
pusha
lds
and
cmpb
cmp
sbb
and
xor
push
jno,pt
jno
pop
stos
inc
es
scas
push
insl
push
add
adc
std
in
movsl
repnz
int
hlt
mov
imull
int
ret
pop
pop
push
adc
fsubp
popf
sbb
in
ja
scas
pop
ja
imull
dec
cmpsl
or
xchg
add
dec
mov
sbb
add
sbb
push
dec
push
cltd
cmp
xchg
inc
sbb
pop
stos
enter
fcmovnu
sub
jmp
pushl
aaa
gs
push
out
cmp
mov
mov
sbb
or
daa
adc
loop
jnp
sbb
pop
pop
movsl
inc
mov
cmc
cmp
push
xor
mov
or
jae
dec
stc
xchg
push
jg
stos
jl
loope
and
pop
mov
out
push
popf
sbb
in
pop
sti
cmpb
std
int3
adc
pop
dec
fdivl
test
and
pop
mov
or
in
loope
adc
push
addb
push
and
mov
xchg
mov
or
jp
aad
fildll
shlb
mov
pushf
scas
ja
push
push
xor
ret
xlat
cli
xor
mov
jns
push
dec
in
fwait
mov
push
cltd
mov
out
add
mov
in
add
sahf
addr16
adc
mov
adc
cmp
movsb
pop
adc
ljmp
xchg
fidivrs
xor
fcoms
sahf
rcll
adc
add
sub
mov
mov
mov
shll
cltd
push
dec
mov
mov
inc
lods
and
pop
xor
sub
aas
dec
cmc
adcb
pop
sub
mov
cwtl
add
mov
and
sub
pushf
rolb
jl
fldenv
xlat
addl
cmp
dec
outsl
cld
rorb
xchg
stos
scas
jo
popa
mov
out
or
cmpsl
mov
out
push
xorb
sub
int3
jmp
mov
out
loope
fistps
push
fidivs
cmpsb
enter
xchg
sub
xchg
mov
xor
jnp
cmp
inc
sti
xchg
fs
mov
add
pop
and
shrl
dec
push
xor
and
push
xor
jbe
mov
mov
adc
jb
repz
and
out
loop
flds
dec
xchg
lret
mov
mov
jp
dec
sahf
adcb
pop
subl
cmp
inc
jbe
mov
in
mov
xchg
push
int3
adc
sub
mov
fsubp
fs
js
xor
cmc
adcb
dec
mov
fldt
adc
mov
stos
and
add
xchg
mov
mov
mov
jns
shlb
js
cwtl
int
mov
out
xchg
es
push
sahf
inc
mov
rorb
jmp
mov
adc
sub
or
sbb
dec
fidivrs
dec
dec
push
sbbl
inc
in
test
xchg
mov
popa
sub
insl
loopne
sub
pop
inc
cmc
xchg
insb
or
loopne
jo
jl
lock
or
sub
and
pop
inc
mov
cmpsb
insb
out
pusha
and
pop
dec
int3
les
push
pop
mov
cmpsl
cmp
xchg
pushf
loop
adc
inc
mov
mov
adc
cmp
mov
mov
test
outsb
push
add
in
mov
mov
clc
movsl
arpl
xor
outsl
jmp
mov
mov
daa
sbb
inc
mov
mov
push
adc
adc
aam
cmpsl
cltd
imul
pop
rcrb
pop
jg
mov
add
and
leave
jecxz
jne
ljmp
setno
movsl
pop
arpl
aas
pop
pop
dec
pop
mov
rorl
push
cmp
and
mov
fcom
cwtl
add
test
jl
popa
nop
aas
pop
xor
xchg
outsl
shlb
je
cmp
push
cmpsb
pop
push
mov
add
add
mov
icebp
mov
dec
or
inc
jmp
dec
inc
xchg
push
or
mov
test
jne
jmp
shr
push
mov
fs
xor
mov
xchg
aas
mov
insl
movsb
add
xchg
pusha
cmpsl
jl
xor
xchg
jne
lea
aam
movsl
cmpsl
mov
repz
xchg
mov
add
sub
insl
stos
xchg
cld
mov
jae
into
xchg
and
out
rcrb
clc
pop
cmp
bound
test
fadd
in
sub
mov
add
pop
test
out
inc
pop
xchg
mov
push
or
leave
in
push
or
filds
pop
push
repz
adc
les
jo
scas
xchg
gs
push
mov
dec
inc
add
mul
loope
jnp
in
xchg
cmpsb
xlat
mov
cs
outsl
popf
sbbb
dec
fwait
jbe
sub
push
xchg
mov
xlat
sbb
mov
push
in
gs
inc
lock
mov
mov
cmp
repz
rclb
ret
notb
rcll
mov
add
mov
xlat
mov
in
push
push
xor
or
adc
inc
mov
lods
add
cld
loope
cmp
jne
xchg
pop
into
push
jno
push
cs
int3
stos
cmp
jno
adc
jl
dec
call
jp
cmc
xchg
sub
dec
cmc
push
mov
rsqrtps
or
imul
sbb
lret
pop
insl
sbb
cmp
movsl
adcb
fwait
pushf
jnp
arpl
cli
xor
jg
xchg
adc
and
jne
jmp
sub
cmpsl
xor
adc
std
pusha
pop
fadd
movsl
jecxz
out
pop
xchg
mov
das
push
cmp
sbb
inc
pop
fs
mov
popa
stos
mov
and
ret
xchg
jp
xchg
or
or
fcoms
sahf
pop
sbb
or
xchg
js
and
das
mov
jl
lcall
and
cmpsb
lea
xchg
js
int3
imull
mov
hlt
adc
add
std
lcall
mov
loopne
mov
add
or
mov
insb
cld
popa
fcomps
sti
int3
sub
mov
cmpsl
loopne
sbb
jno
mov
loope
lahf
lret
lea
inc
clc
sub
cld
push
test
les
pop
les
push
aaa
adcb
jp
xchg
fimull
aaa
adc
lahf
push
in
lods
in
xlat
cld
lcall
sbb
mov
stos
push
push
es
and
adc
and
jbe
jns
jecxz
lods
aam
int3
dec
je
imul
adc
int3
in
pop
ret
negl
dec
mov
mov
pop
add
mov
add
pop
mov
mov
pop
pushf
out
push
adc
cltd
xchg
mov
sub
cltd
inc
popa
cmp
repnz
fwait
mov
ret
lods
loope
int
pop
je
mov
cmp
xchg
mov
daa
rcrl
adc
jg
push
xor
dec
lock
or
inc
fsts
sti
adc
repz
jg
adc
in
mov
and
mov
cs
push
outsl
xchg
lahf
push
mov
popa
inc
cltd
iret
fidivrs
adc
pop
ret
aaa
les
push
aaa
jge
popa
dec
sub
xchg
dec
out
pop
repnz
sbb
dec
dec
jnp,pt
mov
mov
and
pop
push
push
test
ss
icebp
jbe
mov
dec
fcmovb
stos
dec
push
add
shrl
in
lahf
test
xchg
or
xchg
ljmp
insl
mov
jns
lahf
lret
jmp
mov
dec
sub
add
icebp
js
fcoml
fsub
ror
adc
bound
fucompp
gs
aam
pop
mov
cmp
data16
pop
cmpsl
sub
rolb
scas
outsl
push
inc
pop
int3
lds
test
loopne
testl
xchg
pop
int
loopne
mov
and
test
jo
dec
jo
cltd
xchg
dec
jnp
scas
add
aam
inc
pop
and
xor
nop
jb
jecxz
out
mov
push
int
cmpsb
dec
insb
inc
inc
xor
pusha
inc
dec
push
gs
outsl
adc
push
push
clc
mov
leave
flds
ja
xor
sahf
push
test
xchg
cmp
adc
icebp
inc
and
push
pop
mov
insb
bound
out
dec
jb
jp
push
or
cmp
xchg
inc
or
mov
mov
lahf
adc
add
iret
insl
ffree
pop
dec
pop
adc
inc
inc
mov
sbb
sbb
scas
test
ljmp
adc
les
sub
adcb
stos
xor
xchg
stos
pop
pop
fistpll
gs
pushf
addr16
repnz
mov
loop
cmp
arpl
xchg
or
or
cmpb
movsb
rcrl
push
decb
lds
es
enter
xchg
mov
jg
cmpl
outsl
sub
int
gs
imul
dec
adc
dec
dec
hlt
andb
add
pop
inc
xor
aad
repz
dec
jl
icebp
pushf
pop
sbb
loopne
adc
sub
int
in
and
adc
mov
adc
ds
push
mov
insb
or
in
sbb
mov
mov
jne
and
les
jg
xor
daa
arpl
dec
sub
jmp
mov
sub
pop
xchg
jbe
push
lret
fwait
adc
dec
mov
adc
in
aam
push
hlt
sbb
scas
mov
sub
or
jne
mov
shrb
add
mov
clc
test
xor
es
cli
mov
jnp
outsl
pop
mov
pop
dec
mov
fidivl
and
call
pop
jp
dec
mov
push
add
cmp
sbb
aaa
mov
adc
sbb
xchg
daa
ret
jle
mov
punpckhwd
mov
incl
in
scas
scas
imul
adc
mov
rolb
xchg
jne
jnp
add
ficompl
push
dec
cld
and
push
add
mov
push
inc
and
lea
mov
add
and
inc
jecxz
lods
mov
push
aam
mov
je
cmc
or
jno
adc
in
pushf
xchg
jp
and
or
stos
mov
xor
mov
jb
mov
in
imul
push
negl
fcoms
je
lods
xor
sti
pusha
mov
push
iret
xchg
int3
jmp
inc
fnstsw
imul
in
scas
mov
xchg
loopne
or
cli
xchg
int3
imul
jnp
sbb
fiadds
jno
add
int3
mov
hlt
test
jge
inc
jnp
in
out
or
lret
fmuls
es
in
je
pop
pop
xor
roll
push
sbb
dec
push
xlat
inc
scas
pushf
pop
popfw
mov
jge
mov
pop
fstpl
cwtl
and
mov
pushf
filds
into
into
jle
cmpsb
mov
loope
insb
inc
push
aas
hlt
pop
orl
xchg
sbb
xchg
add
fcoml
nop
dec
pop
sbb
mov
push
cmpb
insb
jle
inc
xor
mov
inc
sub
jmp
dec
mov
sahf
repz
or
lock
cmpsb
sub
shrb
outsl
lcall
xchg
pop
ucomiss
mov
fs
pop
xchg
sbb
cli
mov
xor
xlat
mov
dec
les
aad
bound
mul
xor
push
das
jle
cwtl
cmpsb
jno
movsl
adc
xlat
les
pop
jl
dec
cmpsl
jnp
inc
in
call
cltd
pop
and
sub
mov
sbb
cmp
es
test
cmp
daa
cmp
imul
mov
xchg
sub
push
or
cmp
outsb
es
push
out
mov
jl
mov
sti
xlat
mov
ret
and
dec
sub
rcrb
xor
pop
rorb
test
stos
lock
push
sti
lret
sahf
je
xor
jmp
das
dec
and
inc
rorl
xchg
dec
aas
test
and
xor
or
movsl
mov
xchg
xchg
push
add
xchg
scas
test
jle
divb
mov
movsb
lods
dec
cmpsb
je
ret
loopne
les
shrl
outsb
sbb
mov
das
leave
and
mov
out
stos
jmp
sbb
arpl
cli
cmp
sub
into
adc
in
inc
pop
out
pop
loopne
lods
pop
sub
mov
outsl
mov
mov
in
in
mov
push
aas
jle
pop
jge
xor
pop
jp
push
cmpsb
mov
loop
mov
fcmovu
das
aas
or
xchg
sub
arpl
xor
xchg
nop
xchg
cmp
popf
or
inc
fbld
dec
xor
in
lea
test
nop
in
ret
pop
or
and
daa
lock
push
or
daa
inc
fwait
dec
mov
xlat
jae
dec
fldenv
mov
sbb
dec
stos
sub
stc
ret
movsb
cmp
insb
sbb
pusha
jnp
lds
imul
adc
stos
jge
pop
pop
in
imul
cltd
mov
xchg
jmp
mov
cwtl
mov
cld
cltd
das
sti
mov
lret
aas
mov
xchg
push
pop
mov
cmp
adc
and
dec
dec
xchg
pop
imul
int3
ljmp
in
popf
mov
add
gs
iret
hlt
test
in
popa
push
fcmove
les
and
jp
add
push
insl
xchg
push
adc
repnz
aaa
push
jb
add
push
mov
cmp
repnz
fdivrs
dec
int
adc
sbb
repz
fldcw
adc
loop
ljmp
adc
cltd
mov
pushf
dec
ret
dec
add
inc
sub
rorb
sub
xchg
push
pop
jmp
out
lahf
insl
mov
xor
stos
fsubs
cltd
sub
and
and
and
jnp
call
fcompl
jne
sub
or
roll
dec
call
mov
pop
add
inc
cs
cmp
lret
jle
jp
push
mov
pop
xor
addr16
push
fdiv
jns
adc
mov
imul
idivb
push
xchg
ss
jb
das
mov
and
pop
dec
jecxz
subl
jnp
out
push
fsubr
inc
rcr
ficomps
xor
sbb
jecxz
fisttps
movhps
or
and
mov
or
jmp
cmc
fbstp
and
fcomp
mov
pushf
pop
cmp
dec
daa
jle
loope
lods
das
fcmovnbe
inc
xor
out
add
xchg
mov
jle
dec
jp
shr
les
inc
data16
mov
push
pop
lods
pop
mov
enter
test
push
and
sub
push
dec
mov
fildl
inc
adc
or
sub
mov
mov
mov
jle
push
subb
or
loope
ds
add
xor
jbe
push
and
sub
aaa
rclb
lock
xchg
xchg
mov
cmp
mov
sbb
or
add
dec
clc
adc
fbstp
movsl
jle
or
into
stos
adc
js
ja
adc
add
fwait
jmp
stc
or
nop
test
dec
std
cmp
cmpl
add
xchg
sub
arpl
ljmp
or
movb
dec
in
shrl
add
shlb
je
pushf
dec
sub
pusha
dec
in
ds
stos
call
mov
out
adc
frstor
add
sbb
outsl
cltd
xchg
ffreep
loope
cmpsl
cmp
sbb
mov
ds
sub
pop
mov
lods
add
mov
sub
filds
in
ss
xor
xchg
dec
daa
cwtl
mov
vcvttps2dq
and
fimull
outsb
icebp
jl
xor
rcl
out
push
aas
mov
xor
arpl
dec
fidivs
push
orb
xlat
stc
cmc
or
pop
data16
aaa
dec
popf
xor
insl
aas
inc
sbb
cld
pusha
mov
push
mov
jecxz
je
push
push
xor
pop
leave
fisttpll
push
inc
inc
in
fs
ss
mov
sbb
hlt
jo
nop
scas
negl
loop
xor
adc
sbb
jnp
mov
jmp
pop
out
sub
jle
and
notl
lret
cmp
pushf
adc
loop
mov
or
xchg
notl
sbb
aas
nop
or
int
jl
andnps
or
iret
rol
pop
out
addl
out
subl
pop
test
ret
adc
xlat
imul
out
nop
ja
mov
out
jae
push
lds
sti
push
lcall
int
test
jae
loopne
loope
lret
inc
fimuls
xchg
pop
scas
lcall
xor
xchg
mov
ja
repz
and
imul
cmpsb
xlat
inc
add
mov
adc
je
cmpsl
kmovw
and
and
pusha
sbb
gs
fwait
ja
xchg
adc
xchg
mov
sub
jp
mov
and
ret
xor
mov
fsts
cmp
aam
jno
xchg
cltd
in
and
sub
push
cmpsb
sub
pop
dec
jb
repz
mov
dec
jb
stc
arpl
in
cwtl
popf
loope
outsb
xor
lods
out
add
loopne
adc
sbb
jo
jp
mov
enter
andl
loope
pop
pop
push
cwtl
mov
je
arpl
lcall
mov
sbb
jbe
cmpsb
movsl
dec
movb
push
ja
pop
daa
or
lea
and
sbb
int
inc
add
cltd
jns,pn
adc
sub
out
pop
jge
aas
sbb
stc
xchg
inc
popf
cmp
aad
out
prefetchwt1
jmp
xor
jg
mov
dec
xlat
mov
repnz
xor
add
push
arpl
ja
inc
xlat
xchg
ljmp
jne
xor
and
test
in
mov
mov
and
shrb
sub
jo
adc
call
popa
or
aaa
or
stc
sbb
and
or
adc
mov
es
lret
xchg
xchg
xchg
scas
dec
adc
les
les
cmp
mov
or
mov
mov
lahf
jg
std
mov
lea
xchg
xor
jnp
ja
or
fwait
cwtl
mov
jle
xor
mov
jmp
mov
sub
dec
imul
xchg
mov
pop
clc
jge
pop
adc
adc
notb
push
xchg
jg
cmpsl
xor
xlat
mov
aas
push
js
push
cmp
mov
push
je
std
insb
test
shll
xor
icebp
pop
loope
fs
sbb
mov
mov
in
lret
gs
adc
fistpl
dec
mov
push
mov
adc
test
mov
mov
xor
fisubrl
mov
arpl
jb
scas
mull
dec
fs
jl
sub
pop
and
and
cltd
xor
inc
and
cmp
mov
mov
mov
ret
jnp
inc
insl
sti
dec
jl
sbb
pushf
inc
mov
sbb
ljmp
push
je
je
dec
jbe
pop
push
and
test
jne
outsl
sarl
cmpsl
sbb
add
push
icebp
pop
pop
sub
jb
lods
das
dec
hlt
imul
loope
xchg
adc
lcall
or
popa
stos
dec
cmc
cwtl
iret
rol
add
add
arpl
jo
daa
pop
adc
jbe
cltd
jmp
add
sbb
inc
sub
mov
push
cmp
xchg
push
pop
movsl
jne
sbb
nop
mov
jb
loop
cmp
out
push
enter
imul
mov
stos
mov
cmc
add
cs
mov
clc
push
mov
xchg
mov
or
mov
lahf
mov
psllw
cmp
roll
jecxz
push
test
clc
fsubl
inc
clc
movsl
inc
and
xchg
mov
pusha
dec
dec
jle
in
xchg
add
sub
pop
or
in
rcrb
add
in
sub
lea
xchg
pop
stc
xchg
sahf
repnz
pop
xchg
arpl
ret
sub
out
xlat
lret
sub
xchg
push
outsl
mov
adc
ja
mov
imul
cmp
iret
cs
adc
jmp
dec
addb
mov
popf
dec
cmc
icebp
fst
ljmp
outsb
sbb
mov
fidivs
sarl
dec
imul
mov
fidivrl
cli
arpl
fs
jg
dec
adcb
dec
adc
fwait
jl
stos
cmp
dec
sbb
sti
jbe
lds
push
or
sar
and
lods
or
test
and
dec
popf
push
cmp
lret
gs
aam
not
mov
mov
cs
add
mov
adc
cltd
pop
arpl
pop
push
cmp
push
mov
push
lea
fidivrl
or
xorb
rclb
xor
sbb
sbb
test
inc
arpl
dec
lock
or
lock
or
adc
dec
and
arpl
and
mov
inc
push
loop
dec
andl
stc
mov
decl
scas
xchg
jb
adc
push
sarb
repz
xor
out
jg
xchg
cmpb
pop
loop
mov
int3
xor
sti
sbb
roll
xchg
js
cwtl
mov
fistpll
popa
cmc
xchg
fcoms
repnz
xor
adc
imul
inc
xchg
cmp
push
test
pop
sub
and
jne
lock
lds
xor
or
sbb
in
pop
jmp
in
jb
addr16
jae
call
jmp
and
fldl
vpunpcklqdq
sti
mov
sbbb
popa
xchg
sbbb
mov
mov
cmp
gs
aas
mov
repnz
fstpt
jae
inc
sbb
xchg
mov
pop
out
xor
je
push
fcompl
das
mov
push
out
in
sbb
cmp
and
xchg
sub
adc
pop
push
pop
push
jae
divb
movsb
inc
xchg
addb
add
loop
mov
iret
aaa
loope
gs
repz
hlt
movsb
mov
xor
add
aaa
push
aas
addr16
fidivrl
out
xor
push
sbb
inc
lahf
sbb
gs
add
sub
mov
or
std
fsubrl
mov
pop
dec
loop
jmp
loope
push
jo
push
xor
mov
aaa
inc
movsb
mov
pop
lea
test
mov
cmp
or
fs
inc
stc
je
mov
adcl
mov
out
sub
jbe
ljmp
mov
fwait
les
xchg
rcrl
mov
sub
jbe
jb
ljmp
lock
xor
inc
mov
mov
cmpsb
push
and
or
pop
and
ljmp
lds
sbb
rolb
and
repz
movsl
cmc
sub
arpl
dec
rcr
out
or
jp
fidivrs
repnz
cltd
sbb
les
xchg
popa
sbb
dec
xor
adc
push
pop
pop
sbb
movsl
arpl
mov
or
stc
xor
sbb
add
test
xchg
jl
in
repz
push
xor
stos
sahf
pop
mov
push
cmp
mov
imul
cmpsl
push
pop
sbb
inc
add
sti
rorb
and
addr16
jge
cmp
pop
jb
lods
mov
stos
mov
fs
pop
lock
cmpb
cs
fcomi
movsl
and
inc
lods
out
pop
push
test
adc
mov
sti
repnz
inc
mov
into
shlb
clc
leave
xchg
je
cld
xchg
dec
loope
or
xchg
jno
mov
push
push
and
jecxz
sbb
push
mov
jo
push
rolb
dec
cltd
adc
xor
dec
cmpsb
mov
and
das
orl
add
rcrl
and
fsubrl
ficoms
mov
mov
fmull
rclb
xchg
cmp
shll
popf
xor
jecxz
call
mov
inc
and
jns
adc
cmp
adc
and
cs
in
add
xlat
test
das
cmp
inc
add
xlat
pop
es
jl
xor
les
fwait
fwait
orl
pop
push
and
push
movsl
pusha
mov
mov
jecxz
pop
dec
sbb
repnz
mov
fisubl
xchg
adc
enter
jle
push
pop
hlt
scas
cmp
shrl
cmc
std
mov
pop
or
xorl
out
jp
loopne
or
repz
mov
in
or
pop
aam
cmp
push
mov
adc
inc
push
mov
aam
sbb
mov
xchg
mov
xchg
jl
cs
shr
dec
test
das
push
js
je
hlt
mov
xchg
mov
mov
cld
dec
nop
jle
mov
fsubrs
aad
push
out
sub
loope
push
mov
sub
push
lea
jg
and
mov
inc
fiadds
cmp
test
push
pop
lahf
negl
fdivrs
ds
adc
push
out
pop
push
movsb
icebp
scas
iret
add
mov
in
das
xor
lret
add
scas
xor
mov
or
jb
dec
andb
mov
pop
push
xchg
aam
jg
and
sub
hlt
and
sbb
es
fsubs
js
push
inc
or
inc
dec
sub
and
andl
pop
movsl
lcall
in
xor
sahf
push
rolb
mov
fs
and
mov
dec
push
sbb
ljmp
stos
lret
in
movsl
dec
pop
and
sbb
mov
cmc
cwtl
out
inc
rorb
scas
out
xchg
push
xchg
lahf
notb
mov
cwtl
push
jmp
aam
imul
add
xchg
fisubl
push
pop
int
mov
push
pop
in
cwtl
sbb
xorl
mov
mov
sbb
xchg
lods
mov
and
fsubrs
leave
adc
sub
dec
jmp
rcl
lock
cmp
xor
push
sub
inc
xchg
inc
mov
push
xchg
and
sub
popf
ret
inc
outsl
repnz
dec
jg
inc
jbe
loope
push
imul
fadd
icebp
mov
mov
rolb
es
mov
jae
pop
mov
lea
notb
mov
aad
jecxz
push
mov
ss
sub
jle
cmp
ret
in
pushf
xor
rclw
push
lahf
js
lods
lock
mov
bound
mov
lea
and
popa
jo
lods
push
xor
add
rclb
loopne
push
daa
ret
sub
xor
inc
ss
jno
outsb
mov
stos
mov
out
push
fdivp
shl
jmp
out
addb
mov
cltd
mov
mov
fdivrl
gs
push
xchg
dec
jl
adc
push
xchg
xor
dec
scas
loope
dec
xor
xchg
ja
and
and
movsb
mov
sbb
in
sbb
and
lds
idivl
imul
mov
mov
roll
cmpsb
push
insb
cmp
ret
mov
outsb
add
rcrb
ss
jmp
inc
rcrb
stos
ss
and
gs
stos
lret
sub
jl
bt
inc
gs
fwait
in
mov
inc
cmpsl
jecxz
nop
pop
popf
scas
jnp
dec
and
mov
adc
and
lahf
jge
sub
ret
sub
popf
cli
push
arpl
inc
fsubrs
js
fsubs
adc
int
shlb
cmp
fidivrs
pop
ljmp
repz
out
bswap
push
ljmp
adc
mov
fdiv
ja
mov
ss
ljmp
enter
add
arpl
or
push
fs
out
aaa
iret
jmp
jmp
fucomip
hlt
sti
out
push
dec
add
xor
inc
bnd
mov
popl
ljmp
cmp
xchg
lahf
pop
fisttpll
out
fdivrp
out
cmp
enter
cmp
sub
inc
jno
test
inc
arpl
jbe
pop
jge
cmc
sbb
lock
inc
test
xchg
mov
aad
pop
imul
loope
dec
mov
xorps
and
sub
stc
stc
es
push
in
xor
xor
call
sti
jo
aas
mov
rcr
pop
or
lret
std
pusha
flds
leave
jl
xorl
gs
mov
dec
dec
iret
push
pop
pop
lods
sub
dec
gs
nop
xchg
or
es
mov
mov
out
call
jp
xchg
adc
stos
arpl
add
fcom
or
jns
rorl
cpuid
mov
inc
jle
xchg
xchg
lods
lock
ret
lret
sbb
mov
movsb
pusha
push
sbb
xor
ss
xchg
imul
ss
mov
dec
popf
push
dec
xchg
push
push
mov
jge
sub
addr16
mov
cs
adcb
mov
rorb
mov
lods
lcall
stc
lcall
add
cmp
adc
fstpt
addb
in
mov
imul
sub
ret
stos
movl
bound
mov
mov
stos
jmp
inc
iret
cli
aam
aad
lcall
mov
repnz
out
mov
or
hlt
or
test
push
jnp
and
mov
arpl
xchg
fisttps
inc
jl
sti
cs
adc
pop
xlat
inc
subl
jle
test
push
pop
push
out
cmp
mov
jbe
push
jl
fwait
prefetch
imul
cmp
scas
or
or
idivl
mov
fbld
jecxz
and
fwait
sub
sbb
jp
mov
icebp
pop
ret
inc
mov
cmp
inc
testl
hlt
xchg
cmpsb
jns
leave
xor
push
mov
xor
fst
jg
push
push
jb
shrb
dec
pushf
shlb
mov
jp
rclb
mov
mov
rolb
cmp
movsl
pop
clc
rorl
stos
xchg
sbb
cmp
mov
ja
int3
dec
bound
test
orb
push
int
stos
lds
jne
sub
test
sbb
movsl
test
shl
jno
jl
mov
jns
mov
dec
push
jge
xchg
loop
sbb
into
sahf
stos
adc
and
std
fwait
add
in
aas
int3
adc
sub
push
ficompl
or
pop
push
pop
loope
sbbb
shrb
and
mov
das
jp
pop
mov
mov
dec
ror
add
shl
cmc
cmpsl
pop
enter
push
inc
mov
ljmp
addb
mov
mov
cs
sahf
inc
sbb
shr
add
mov
or
push
and
data16
xchg
mov
fstl
pop
jle
pop
or
dec
pop
dec
stos
popf
out
inc
mov
aaa
dec
jecxz
rcll
push
and
scas
xor
sbb
mov
notb
pop
pop
inc
cmp
pop
inc
add
cs
fidivrl
mov
test
lods
mov
mov
push
dec
sbb
iret
clc
cld
push
mov
mov
jle
dec
popa
mov
leave
enter
fnstenv
shrb
push
rcll
push
imul
rolb
mov
stos
ret
mov
icebp
subl
dec
or
and
push
mov
rolb
sbb
mov
stc
inc
nop
fistps
pushf
test
ds
cmp
int
pop
clc
dec
lret
lods
aaa
outsb
rorb
out
jo
push
or
sbbb
inc
cmp
xchg
lret
xor
add
rorb
cmpsl
mov
jg
adc
aam
verr
inc
pop
push
jo
xchg
imul
inc
decb
jbe
les
stc
int3
pusha
sub
leave
pop
push
aaa
je
jae
or
test
xor
fdiv
mov
jmp
push
ror
mov
shrl
ljmp
push
movsb
in
loope
xchg
jbe
jb
lods
test
jmp
repnz
jbe
pop
scas
iret
je
add
push
adc
add
cmp
idivl
jp
out
fxtract
jb
inc
mov
fidivrs
popa
aaa
xchg
push
xchg
lods
cltd
jecxz
push
or
mov
ret
push
ror
lret
cmp
in
sahf
les
repnz
in
mov
xor
jno
push
pop
leave
push
sbbl
stc
xor
pop
or
pop
dec
cwtl
sub
pop
push
call
lea
fldcw
pop
xlat
xchg
push
adc
jg
test
inc
sbb
add
movsl
call
lahf
xor
movsl
int
cmp
call
sti
mov
mov
inc
xor
testb
jbe
push
mov
mov
jl
leave
lret
pusha
lcall
xchg
add
add
movsl
scas
int3
clc
mov
addb
leave
inc
xor
dec
movsl
lea
cmc
mov
inc
repnz
jnp
adc
ret
out
cmp
xchg
test
xchg
jno
jl
pop
adc
sbb
mov
sub
sbbl
push
movsb
push
aaa
lea
daa
adc
push
jne
push
sbb
cld
call
dec
push
fdivrs
dec
jnp
inc
push
mov
mov
shll
vmwrite
ror
fsubrl
dec
lea
int
sub
pop
popf
adc
dec
subb
imul
mov
fildll
xor
add
push
ret
mov
ret
xor
fwait
les
mov
mov
sahf
into
jmp
fidivrs
rclb
pop
mov
in
xlat
and
push
test
jns
mov
icebp
xor
imul
add
jae
aam
sbb
lcall
jecxz
or
leave
or
ljmp
fnstenv
add
into
aas
mov
and
lods
loopne
add
xchg
pop
sar
leave
adc
jl
fidivrl
fisubrs
adc
adc
notl
ret
inc
add
clc
js
adc
incb
fwait
test
dec
stc
pop
xchg
cltd
aad
shl
out
mov
add
pushf
icebp
sbb
stos
inc
cmpsl
cmp
or
push
shll
cmpsl
adcb
test
mov
jbe
push
mov
dec
lock
add
jmp
out
push
movsb
stc
mov
les
fistps
adc
in
int3
cmpsb
stos
pop
jmp
or
mov
push
add
inc
in
xchg
cmpsb
mov
sbb
imul
sbb
lods
mov
add
push
rorb
nop
out
stc
push
loopne
shrl
cld
mov
shl
inc
push
inc
or
and
gs
cmp
and
mov
mov
cltd
push
cmpsb
jmp
les
data16
jecxz
out
inc
mov
repz
mov
pop
cmp
pop
inc
pop
lods
fwait
sbb
mov
in
fnstsw
inc
call
push
push
leave
ds
cmp
das
filds
flds
adc
push
adc
ljmp
out
es
rol
xchg
inc
mov
adc
repz
rclb
popa
pop
rol
mov
cs
jg
xchg
push
mov
out
mov
push
pop
sbb
cmp
xor
xchg
pop
push
int3
jmp
lahf
push
movsl
adc
out
xchg
ljmp
jnp
pop
notb
sti
xchg
rcll
jo
cld
outsb
mov
fsubs
int3
inc
daa
fbstp
mov
mov
jnp
mov
addb
icebp
xchg
out
iret
sub
addr16
lds
test
outsl
imull
push
sti
cltd
inc
lret
sub
and
mov
and
test
fisubs
jnp
xor
int3
test
pop
pop
pop
das
rep
clc
ja
push
rcr
rcrb
jecxz
movsl
xchg
mov
lcall
push
ljmp
jp
fimull
mov
or
je
xor
ficoml
adc
jl
jl
insb
pop
in
pushf
psllw
repnz
fwait
mov
ds
xchg
sbb
jg
sahf
cmpsb
add
mov
sub
ret
mov
pusha
inc
mov
outsl
mov
inc
xor
jl
pop
push
dec
jno
outsl
push
bound
add
movsl
notb
push
xor
inc
pop
jecxz
pop
push
or
and
push
aas
rclb
and
sbb
inc
and
jnp
adc
cmpsb
sbb
insb
mov
add
js
orl
roll
and
adc
jg
jns
out
or
mov
adc
dec
inc
cmpsl
fincstp
rcr
jecxz
and
inc
cld
mov
sub
mov
mov
xchg
add
dec
mov
ja
mov
mov
ret
cmp
inc
push
cmp
dec
mov
fstps
dec
idivl
gs
cltd
mov
aad
rcrl
in
notb
movsl
mov
sbb
fsubs
leave
push
sti
mull
movsb
xor
adc
clc
popa
outsb
aaa
xchg
inc
dec
lret
and
jle
imul
arpl
xchg
imul
push
and
sbb
xor
ret
mov
jl
jbe
pop
sbb
mov
outsl
mov
xchg
adc
adc
cld
sub
dec
adc
sti
or
add
mov
mov
out
mov
cmp
outsb
mov
adc
cmpsl
jns
popf
mov
out
fsubs
adc
sbbb
pop
je
xor
hlt
mov
push
rolb
adcl
mov
ja
ja
das
lcall
iret
sbb
aaa
push
dec
imul
mov
pop
ret
fldenv
popa
pop
push
cmpb
and
int
push
and
shrl
pop
jnp
and
mov
xor
xchg
lds
sub
and
mov
sub
movsl
testb
imul
ljmp
sub
xchg
jge
cmp
movsl
in
jae
inc
push
mov
jns
sub
inc
lock
mov
add
sbb
xchg
mov
or
fidivl
pusha
xor
call
inc
outsb
rcrl
mov
aad
xlat
jl
mov
cwtl
adc
sub
int3
cld
inc
jecxz
loop
std
push
lock
das
jne
dec
push
cwtl
pop
cld
mov
movsl
fdivr
adc
stc
push
nop
xchg
mov
lock
inc
add
stos
pop
push
lds
test
lods
js
out
sub
fidivl
dec
or
gs
popf
divl
les
inc
xchg
dec
mov
lahf
fwait
jb
sbb
inc
ss
jns
mov
push
sbb
outsl
icebp
sbb
jp
or
dec
cmpsl
sarb
xor
std
pop
sub
dec
shll
dec
lahf
fs
xor
es
in
inc
mov
cmp
mov
jmp
lock
dec
test
adc
popl
cld
sub
rcrb
stos
dec
xor
pushf
sahf
rcrl
mov
fcomps
fisubrs
adcb
mov
adc
cmp
jp
test
pop
insl
jo
adc
stc
loop
dec
das
push
xchg
sbb
jecxz
shlb
stos
xchg
sub
ret
imul
xor
dec
popf
int3
inc
mov
mov
jge
jns
xlat
cmpsb
lods
imulb
ss
sahf
je
push
jae
mov
mov
lea
shlb
mov
gs
and
popf
scas
adc
fcom
xchg
pop
mov
sub
xchg
sbb
ss
mov
inc
adc
push
xor
and
and
je
add
dec
mov
cmpb
jmp
push
lea
jle
mov
scas
das
lock
xchg
jo
leave
outsl
popa
hlt
lcall
push
jns
outsb
mov
xchg
std
hlt
jo
fs
and
sub
popl
push
push
in
inc
int
shll
test
inc
dec
cltd
mov
push
stos
mov
in
ljmp
mov
add
insb
inc
lods
cmp
xor
test
movsb
out
cli
dec
sbb
pop
hlt
insb
icebp
cmp
incl
xor
sub
fidivl
insl
subb
mov
xor
popf
sub
xchg
push
mov
imul
cmp
mov
mov
lcall
cmc
test
daa
adc
or
jle
push
out
icebp
xor
xchg
push
jg
push
dec
in
js
mov
ret
pop
testl
mov
add
dec
xchg
dec
jl
sub
popf
call
fadds
loope
test
in
pop
test
dec
push
mov
mov
push
sbb
movsl
aaa
and
xchg
aam
cmp
mov
cmp
pop
sti
inc
lock
sub
adc
iret
and
insl
add
jl
or
loope
shll
rcr
loopne
sti
mov
cltd
pop
stc
inc
sbb
mov
divb
inc
adc
call
mov
lods
inc
mov
iret
push
xchg
mov
xor
mov
mov
and
or
mov
add
or
cmpb
inc
mov
push
mov
mov
jle
mov
in
xlat
cs
shrd
in
stos
pusha
mov
mov
adc
outsb
mov
push
push
imul
mov
pop
daa
idivb
fiaddl
jae
lods
push
add
inc
xor
das
fldl
inc
pop
cld
pushf
mov
pop
fwait
outsl
arpl
lahf
icebp
fwait
xchg
cmc
push
jmp
outsl
fwait
sahf
leave
in
loop
adc
push
insb
fnstenv
mov
mov
lahf
dec
adc
mov
adc
or
sbb
jno
cmp
xor
mov
out
jmp
cmp
adc
mov
mov
sub
cmpsl
arpl
adc
add
ja
xor
pop
mov
xabort
cmc
push
push
in
in
ljmp
and
and
scas
pop
jbe,pn
xor
loope
and
add
mov
dec
aad
jno
es
cmpsl
hlt
mov
clc
hlt
add
pop
pop
mov
fwait
imul
call
out
cltd
sahf
xchg
incb
adc
push
insl
adc
out
mov
or
repnz
mov
adc
ret
lea
insb
rorb
movsl
xorb
cltd
dec
lock
sti
mov
xor
dec
ficoms
and
jp
mov
and
dec
insb
test
ror
xor
lea
and
or
jl
ds
pop
pop
pop
mov
jl
rolb
jbe
mov
sbb
test
jg
jp
inc
scas
jle
mov
push
jno
int3
pop
lahf
repz
or
sub
mov
jnp
mov
xchg
dec
mov
pop
inc
addr16
dec
mov
pop
rep
imul
int3
jmp
movsb
leave
psubusb
icebp
scas
jle
adc
sbb
loope
aam
or
loopne
pop
and
daa
test
sti
aas
push
sub
mov
inc
movsb
inc
mov
lret
mov
xchg
mov
test
dec
ja
fists
ss
mov
push
fdivr
pop
dec
xchg
sub
pop
repnz
sub
fisubs
fs
js
fsubl
fbld
fwait
and
jmp
jmp
jo
dec
xchg
or
push
rclb
mov
xchg
iret
inc
inc
xchg
lods
clc
add
add
scas
js
std
mov
imul
repnz
xor
dec
xchg
aad
in
xlat
dec
sbb
cld
es
outsb
les
mov
sub
mov
jg
add
das
push
lahf
pop
sbb
lahf
cld
stos
inc
cmpsb
and
lcall
lods
and
fwait
xchg
push
jns
jmp
and
addr16
inc
lds
cmc
mov
sti
add
movsb
stos
hlt
insl
xchg
sbb
xor
add
in
mov
adcl
sbb
push
adc
icebp
inc
data16
jne
jno
cld
test
push
lods
adc
divps
das
xor
dec
sub
inc
out
push
dec
cli
fs
pop
inc
mov
cmp
stc
pop
cmpsl
cltd
call
cli
faddp
into
test
fwait
cld
pop
gs
rcr
flds
orb
cld
pusha
dec
ss
in
mov
xchg
movsb
lods
fscale
mov
add
mov
outsl
mov
sub
ja
adcl
adc
mov
or
fisubl
sarb
jo
adc
fildll
ficoml
push
das
jp
pop
clc
repz
xchg
jns
aad
test
pop
scas
nop
das
cmp
xchg
insl
push
cmpsb
pop
out
fwait
mov
mov
arpl
pop
xor
push
out
xor
js
not
xchg
cmpsb
or
and
sub
mov
pop
push
sub
and
inc
add
stc
adc
aam
mov
or
sub
or
dec
cmp
lcall
movsb
jg
push
faddp
decb
hlt
and
insb
fadd
rorb
inc
mov
int
push
ja
lea
into
daa
xor
enter
fwait
pop
addr16
out
bnd
mov
pop
lea
popf
cmp
jge
mov
sahf
jne
adc
xchg
sub
repz
daa
lcall
ja
mov
arpl
in
mov
pop
push
dec
xchg
mov
dec
add
cs
inc
and
mov
jle
jle
lea
jecxz
scas
or
aas
push
cmp
pushl
fldl
jg
test
xorl
cmc
ljmp
test
outsb
neg
jne
jne
jnp
stos
and
pop
nop
push
mov
sub
dec
mov
inc
mov
into
repnz
adc
aad
pop
mull
fisttpll
incl
in
shlb
mov
jbe
xor
push
cmpsl
dec
inc
push
add
push
inc
adc
loop
aaa
jnp
ds
push
mov
fnstcw
sbb
gs
mov
mov
sub
outsl
and
in
sub
or
add
pop
mov
lods
lret
or
sub
pop
int
test
fdivrs
pop
pop
push
or
andb
dec
mov
add
jg
std
pop
aam
and
inc
mov
addr16
inc
adc
inc
mov
psubsw
mov
fdivrp
mov
arpl
in
cmpsb
mov
in
leave
jge
dec
pop
xchg
into
pop
in
popf
int
sub
imul
xchg
jmp
out
mov
fsts
mov
pop
cli
mov
jno
ret
dec
nop
sub
cmp
repz
dec
push
and
jl
mov
cmp
cmp
fwait
add
lret
xchg
imul
cmp
push
hlt
mov
jmp
mov
cmpsl
dec
rorl
dec
bound
test
mov
add
fptan
xor
sbb
and
pop
xchg
nop
movsb
push
and
stos
mov
movsl
sbbl
mov
jns
or
lahf
mov
push
aam
pop
mov
leave
pop
sub
iret
ss
movsl
xchg
pop
mov
sub
sbb
dec
std
ljmp
addr16
jmp
dec
enter
cmp
ja
adc
jo
sbb
or
popf
jb
jo
mov
mov
cmpsl
jle
hlt
inc
pop
pop
rolb
gs
loop
and
and
fnstenv
inc
fwait
mov
cmp
into
xchg
aas
popa
shlb
or
ljmp
mov
jo
or
dec
mov
inc
into
insl
xchg
cmp
dec
movsb
shr
aad
and
gs
loopne
sbb
aad
scas
xchg
sub
ret
xor
and
inc
mov
subb
cmp
negl
xor
jo
stos
push
pop
mov
push
loope
jge
lahf
sbb
mov
icebp
xchg
rclb
mov
xchg
jnp
mov
scas
pop
jne
mov
sub
cli
movsl
push
rcll
ret
push
pop
sub
stc
jmp
stos
sub
inc
xchg
jnp
dec
xchg
inc
clc
outsb
outsl
in
mov
scas
xor
popa
movsb
push
imul
orb
cmp
mov
xchg
inc
aaa
adcb
clc
inc
mov
loop
pop
cli
scas
pop
cwtl
js
psrad
add
or
std
mull
sub
mov
sub
mov
outsl
jo
stos
fsubs
popa
subb
mov
xchg
mov
jp
inc
inc
mov
sub
outsb
xor
mov
mov
cmpb
in
addr16
rcrb
pop
xorl
loopne
fisttps
xlat
push
call
inc
daa
idivb
sbb
inc
pop
aad
add
jecxz
ret
pop
rcrb
xchg
ret
mov
daa
popl
jecxz
pop
mov
cmp
shlb
push
pop
into
cmp
mov
mov
inc
sahf
adc
outsb
add
mov
push
pop
in
out
push
loope
aas
mov
insb
mov
dec
insb
rorb
or
insl
ficoml
jecxz
mov
and
popf
mov
mov
pop
sub
pop
les
stos
jbe
mov
and
std
ja
inc
shrl
inc
mov
cmp
jnp
mov
and
jns
popa
fsts
cmp
xchg
pop
pop
fcoms
inc
cltd
popf
shr
dec
pop
arpl
push
inc
sbb
out
xchg
clc
sbb
add
jmp
push
pop
sti
out
xchg
rol
test
lahf
cmpsb
orb
adc
addl
rol
mov
adc
inc
jae
fcmovnb
cmp
push
fmul
jb
fs
mov
ja
daa
lock
push
shrb
pop
gs
adc
loop
mov
or
jg
fistps
push
push
jp
fdiv
adc
jb
popa
cmpsb
inc
aad
repz
xlat
lea
shl
jg
sbb
xor
jnp
cli
pop
or
icebp
jnp
xor
into
das
imul
jg
das
movsl
imul
xor
xchg
rcr
mov
xchg
out
scas
adc
stos
cs
out
in
fsubrs
and
addr16
cmp
ret
ficomps
in
sahf
lahf
sbb
jp
fcomip
cmp
xchg
and
cmpsb
pop
mov
fsts
ss
xchg
shlb
aaa
lock
cs
jmp
mov
adc
cltd
fldl
insl
daa
das
sub
loop
jb
negl
outsb
stc
mov
xor
sbbl
or
jnp
jbe
std
cs
xchg
scas
add
daa
cmp
dec
push
in
add
cwtl
fadd
test
xor
div
cwtl
xchg
popa
lods
and
pop
and
sub
pop
xchg
xchg
scas
jae
cmp
dec
fs
adc
icebp
sti
mov
imul
xchg
pop
jnp
outsl
adc
inc
pop
cmp
dec
mov
xchg
mov
cmp
adc
mov
ja
mov
ds
adc
stos
mov
out
lahf
sbb
sub
arpl
int3
das
movsl
push
pop
lret
cmc
pusha
ljmp
inc
mov
in
and
lcall
subb
xchg
push
mov
mov
add
fildll
enter
xchg
dec
loop
jle
aaa
shll
push
jb
add
xor
xor
jmp
jg
stos
mov
addb
dec
pop
out
aas
rol
adc
pop
lret
push
push
ret
mov
scas
jo
ss
push
pop
loope
push
dec
stos
test
mov
sub
jae
std
nop
sub
or
or
cld
lahf
adc
mov
inc
mov
xchg
lock
adc
or
jbe
jg
or
xchg
mov
pop
sub
and
data16
movb
dec
scas
dec
movsb
test
pop
jb
jnp
lcall
mov
cltd
scas
push
and
mov
fildll
mov
gs
mov
scas
inc
push
ret
daa
dec
roll
outsb
rcll
and
loopne,pt
or
xlat
pop
incl
xchg
dec
cmpsl
fisttpll
sub
sub
sahf
es
add
bnd
mov
pop
dec
mov
inc
jge
pop
stos
ljmp
jbe
jne
adc
sub
lock
xchg
stc
xchg
cltd
mov
mov
mov
rcrb
sarl
aas
inc
xor
pusha
xor
cltd
ret
xor
xchg
xchg
iret
fmuls
in
push
jl
scas
leave
rorl
jo
mov
lret
xlat
shrd
xchg
cmp
aaa
cmp
push
idivb
icebp
cmpsl
or
and
loopne
or
daa
xchg
pop
adc
xchg
popf
rolb
int
js
into
dec
mov
lods
pop
adc
scas
or
test
mov
jno
ss
pop
mov
push
or
out
cmc
sahf
in
jl
aad
cmpsl
cmp
insb
pop
lahf
icebp
xor
stos
in
js
xlat
add
pushf
pop
mov
sub
out
movsl
mov
mov
test
sbb
mov
lret
sub
sbb
xor
adc
sti
test
lods
imul
jmp
in
lahf
fsubl
fcomps
dec
xchg
push
mov
pop
push
cli
lea
mov
xor
push
cmpsl
sub
into
pop
in
pop
pop
jp
aaa
sub
repz
ljmp
ss
inc
aam
inc
sbb
adc
adc
sub
out
adcb
aas
xchg
cmp
lea
xchg
or
xor
sbb
pop
pop
mov
jne
popf
push
mov
orl
cmp
ds
fimuls
imul
addr16
in
dec
imul
jb
lcall
outsb
cmp
scas
out
test
adc
mov
shrb
mov
sbb
xchg
push
jb
add
jns
mov
sti
ljmp
ror
add
cmp
cmp
and
hlt
sbb
pusha
mov
add
and
sub
stos
flds
lahf
rolb
shlb
push
movsb
mov
les
dec
pushf
jo
xchg
jbe
sahf
lock
xor
xlat
es
leave
dec
andl
cmp
es
out
or
rcrb
outsb
dec
mov
rcl
dec
mov
arpl
imul
stos
fidivl
es
xchg
pop
mov
xchg
inc
lods
cmp
dec
jo
mov
mov
std
mov
shlb
sbb
bound
das
fwait
cmp
push
les
add
pop
je
sbb
add
dec
shll
fwait
mov
pop
and
aam
movsb
add
in
push
jp
lret
repnz
inc
push
push
scas
push
in
push
pop
jb
add
lret
jno
test
adc
mov
test
adc
inc
lcall
rorb
hlt
cs
or
loopne
pop
dec
into
xchg
mov
sbb
push
inc
lret
push
mov
bound
stos
icebp
cmp
mov
pop
dec
bound
enter
call
push
fnstenv
out
cmpsl
push
sub
in
add
jno
lret
fistpl
add
dec
dec
iret
mov
dec
adc
cwtl
jno
pop
inc
ds
jbe
mov
stos
dec
cmp
les
je
dec
imull
lret
add
jge
mov
adc
negb
dec
into
insl
enter
out
push
cs
pop
jno
jge
mov
into
rcr
mov
sub
mov
mov
sbb
inc
mov
mov
daa
inc
repnz
and
icebp
dec
dec
jmp
dec
mov
sbb
push
ret
dec
in
mov
push
pop
push
xchg
aad
sbb
or
xchg
jle
jl
nop
and
inc
or
psrlq
mov
jnp
dec
daa
xchg
dec
xlat
cmp
pop
and
pop
dec
dec
shll
ljmp
fwait
adc
jle
pop
and
test
jmp
lcall
popa
and
mov
mov
fs
mov
jno
push
mov
data16
inc
hlt
xor
dec
stos
push
mov
adc
testb
inc
cmp
repnz
sbb
lods
jbe
cmp
jmp
jl
mov
inc
cld
jmp
xor
push
bound
orl
pop
adc
lods
sbb
push
rorb
or
lock
jae
loope
data16
pop
std
fisubs
testb
jp,pt
popf
mov
fsts
add
dec
mov
gs
mov
pop
fmull
loop
in
imul
dec
call
jecxz
cmp
mov
out
push
jmp
mov
int
sub
sbbb
push
fidivrl
je
sub
jg
adcl
xor
inc
xchg
fstpl
in
stos
int
jp
stos
les
pop
inc
mov
daa
and
sub
stos
imul
add
cli
mov
cld
lock
sub
adc
adc
fldl
cli
js
mov
les
imul
fwait
add
sub
inc
xchg
repz
fsubl
mov
imul
ret
sbb
jnp
out
add
lods
pop
cmp
add
mov
mov
shll
stos
push
subl
das
mov
mov
xor
adc
aaa
sub
fists
sub
sbb
pop
rorl
cmp
cwtl
inc
popa
cwtl
or
cmpsl
xchg
add
pop
frstor
data16
sbb
aas
mov
push
dec
push
pushf
mov
ret
sarl
add
xor
insl
and
cmp
lcall
add
lods
dec
loope
xchg
insl
or
push
pop
pop
mov
in
outsl
scas
int3
xor
mov
adc
xlat
pop
push
dec
cmp
adc
cld
mov
fsubl
es
insl
push
pop
push
inc
mov
insl
iret
aaa
mov
in
xchg
adc
push
mov
dec
jne
jno
xor
pop
xchg
lea
and
repnz
aam
dec
je
pop
jae
pushf
cmpsb
lock
daa
and
lods
adc
popf
cmp
sbb
ficoml
add
mov
shrb
dec
inc
dec
loope
fnop
mov
sbbl
lret
out
push
or
fidivrs
xchg
and
das
inc
xor
fs
sub
adc
lret
ficoml
subl
fwait
ror
push
inc
push
popf
push
jb
test
dec
dec
imul
roll
push
xchg
jp
lods
jns
pop
and
mov
or
and
dec
dec
xchg
or
ljmp
sbb
jg
add
pop
testl
and
push
adc
fcomip
neg
jo
mov
mov
clc
and
jno
xlat
or
out
push
pusha
test
sbb
and
mov
je
pop
icebp
fmuls
cmpsb
add
stos
rcrb
enter
stos
inc
add
mov
jle
sub
test
clc
jne
in
lea
pop
pushf
out
and
push
addr16
add
icebp
out
push
daa
mov
fmuls
jo
dec
lds
or
mov
jl
js
stos
scas
fisttpll
cmp
mov
cltd
mov
mov
push
loope
mov
cmp
dec
inc
mov
leave
dec
iret
aad
or
fdivr
xchg
mov
int3
push
sbb
xchg
out
lods
pop
andl
and
xchg
push
add
dec
inc
lods
test
setno
gs
sub
fistpll
dec
dec
pop
and
stos
xchg
daa
aas
inc
out
pop
sub
mov
cmp
dec
xchg
lock
insb
out
sbb
jno
in
stos
add
push
and
scas
or
add
inc
cld
scas
mov
pop
adc
pop
mov
xor
cmp
sbb
scas
cmp
lock
sbb
jno
jmp
fdivp
dec
daa
shlb
xor
lahf
inc
negb
and
je
and
sub
mov
mov
fucomp
mov
wbinvd
outsl
inc
cli
sahf
push
movl
and
lret
inc
nop
int
leave
pop
cmp
mov
sub
push
imul
cli
mov
out
arpl
ret
lahf
aaa
aad
or
mov
test
jp
hlt
ja
inc
setns
cmp
jle
test
sub
cmp
pop
in
in
popa
mov
xor
std
dec
push
adc
scas
mov
lahf
lods
ret
imul
rorb
mov
fbstp
aad
hlt
sub
pop
jmp
ds
call
xchg
ret
adc
adc
icebp
shll
push
pop
mov
leave
cmp
sarl
cmp
mov
xchg
jb
sbb
jl
lret
out
push
push
pop
mov
in
icebp
ljmp
das
repz
repnz
xor
jmp
dec
xchg
cmp
sub
sti
cmp
mov
mov
xchg
lret
addr16
xchg
subb
cwtl
mov
adc
aaa
aam
int
daa
movsb
mov
jp
scas
xchg
lock
jae
insb
aad
lds
mov
fists
stos
dec
mov
mov
popw
loop
fistps
xor
adc
dec
xchg
push
mov
lea
subl
inc
nop
loop
shr
sub
sub
push
fs
mov
inc
push
or
inc
mov
cld
push
enter
dec
xor
dec
dec
pminub
dec
das
cmp
out
and
or
cmp
jl
inc
xchg
jbe
pop
mov
jmp
dec
popa
and
cmpsb
test
sahf
outsl
push
ljmp
inc
ficompl
lahf
push
fcompl
mov
clc
xchg
sbb
adc
flds
xor
outsl
ss
mov
mov
test
and
pop
jmp
sbb
lods
popa
hlt
popf
xchg
out
sub
stos
leave
cwtl
ret
shll
test
pop
jecxz
lea
lds
fs
sub
popa
jge
push
push
cmp
mov
movsl
outsl
and
dec
cmp
xor
jl
jnp
mov
jno
ficoml
ret
stc
cmpsl
mov
sbb
cld
jle
jg
xchg
jmp
push
lods
scas
aas
adc
icebp
pop
bound
jg
or
mov
mov
xchg
mov
fstpt
shll
mov
negb
ret
adc
insl
fmul
inc
fbstp
pop
mov
test
mov
sub
jno
push
cs
scas
test
xchg
lods
aad
mov
fdivp
in
jmp
cmc
mov
stc
and
inc
test
add
icebp
jp
out
add
adc
jl
ret
loop
mov
pushf
jae
sub
xor
jb
addr16
fmull
dec
xchg
ljmp
mov
bound
xor
jmp
lea
jmp
pop
les
rorl
mov
adc
push
xchg
mov
les
movsb
out
outsl
jno
and
mov
sub
inc
cmp
adc
xchg
mov
inc
cmp
out
stos
fimuls
sub
cmp
lcall
pop
call
cmp
out
inc
sti
in
dec
popf
mov
mov
push
push
mov
mov
movsl
out
loop
roll
aaa
repz
stos
xchg
inc
pop
mov
jmp
dec
ds
je
or
inc
xchg
mov
sub
add
dec
ja
les
mov
sbb
xor
push
jmp
mov
imul
mov
xchg
stos
rclb
repz
in
test
je
sbb
adc
jge
ret
out
and
iret
xor
dec
or
mov
jns
mov
test
xchg
lcall
loopne
adc
pop
rcr
outsl
jb
dec
mov
call
dec
push
cltd
pop
or
fsts
cld
push
xor
xor
inc
jecxz
adc
xchg
push
mov
push
xchg
lret
sbb
movsb
test
pop
pop
xor
enter
loop
cmp
sub
test
dec
or
call
or
xor
push
mov
sub
fdivr
mov
adc
ljmp
mov
mov
loop
loope
xor
fidivs
inc
mov
jns
jnp
lds
pop
in
mov
outsl
out
in
xchg
mov
dec
fcompl
fdivrs
xchg
leave
cli
xchg
cmp
add
orb
jmp
dec
and
adc
out
jns
subl
and
outsl
sub
cwtl
dec
movsb
dec
cs
dec
sub
dec
cmpsl
inc
pop
lock
cli
pop
enter
hlt
adc
mov
scas
sub
aam
adc
inc
shr
dec
icebp
test
fstl
sbb
lcall
xchg
mov
inc
adc
clc
dec
movsl
mov
cld
dec
dec
clc
addb
adc
xchg
mov
les
sub
xchg
xchg
dec
lret
stc
push
hlt
dec
jecxz
sbb
push
sub
aam
pop
fsts
int3
ja
stc
mov
sub
mov
pop
lods
lods
das
mov
test
push
out
mov
addr16
testb
sub
inc
mov
outsl
jnp
xchg
mov
dec
int3
leave
xor
push
push
jecxz
push
and
xorl
mov
xorl
jae
rclb
or
int
sbb
stos
add
stos
sbb
adc
jno
arpl
insl
xchg
lea
jge
inc
insb
sbb
popf
icebp
mov
jecxz
in
imul
jne
jge
inc
stos
out
jo
outsl
cld
mov
adc
icebp
mov
ljmp
scas
mov
xchg
addr16
xchg
sbb
movsb
je
sub
movsl
div
adc
xlat
dec
inc
jecxz
mov
xchg
cwtl
in
jmp
out
rorb
push
pop
or
inc
std
mov
push
fcomps
test
ds
mov
dec
xor
into
arpl
push
or
and
stc
stc
sub
je
pop
xor
mov
add
repz
insl
fstsw
je
fstp
sbb
out
sbb
hlt
jns
ret
ret
int3
mov
jnp
add
jecxz
fscale
mov
pop
fildll
dec
xor
and
mov
inc
push
dec
dec
lea
pop
cwtl
dec
pop
negb
sub
repnz
jp
popf
add
jmp
jecxz
dec
jg
es
adc
add
in
test
adc
dec
insl
pop
or
rcl
cmc
mov
subb
incb
leave
lret
fcomps
xchg
enter
jl
jae
repz
pop
and
fwait
movsl
outsl
push
pop
xor
sbb
jne
test
adc
stc
loop
adc
jb
sbbl
mov
pop
loopne
adc
and
lods
enter
add
arpl
sarb
scas
gs
mov
xchg
loopne
and
jne
into
daa
popa
bound
jo
pop
mov
cld
adc
dec
cmpsb
and
add
sub
movsb
test
add
add
out
xchg
jno
xchg
out
push
faddp
mov
adc
xorb
jmp
pop
mov
fstpt
scas
xor
es
pop
xchg
aam
imul
inc
adc
push
cmc
mov
aad
and
das
xlat
lret
or
lock
push
aaa
cld
push
push
dec
jg
adc
pop
aas
cwtl
cmpsb
push
icebp
add
pop
push
scas
fldcw
fsubp
stos
ja
mov
lret
lods
sti
jg
bound
shrb
fiadds
ja
test
ret
xor
jp
sbb
sub
mov
jecxz
push
sub
add
sar
divl
pop
test
jno
notl
xchg
xchg
adc
jbe
pop
rcrl
lret
add
dec
les
jecxz
or
mov
sbb
lret
mov
aaa
lret
lahf
js
xor
dec
pop
jae
lcall
cmp
ss
pop
or
dec
pop
stc
inc
aad
xor
leave
mov
insb
adc
repnz
sbb
cmp
mov
fidivrl
into
nop
xlat
and
loope
sbb
rorl
sub
inc
and
mov
mov
fdivl
xchg
inc
xchg
test
and
xchg
out
or
push
rcr
add
push
jg
js
adc
inc
xchg
je
shl
mov
push
movsb
repz
push
rcrl
mov
push
dec
addr16
xchg
out
test
icebp
mov
xor
mov
lds
repz
fwait
movsb
cmp
inc
inc
xor
sahf
data16
dec
loop
inc
or
movsl
mov
jb
and
push
hlt
dec
pop
or
sub
jnp
jg
lods
mov
outsb
mov
cmp
data16
jbe
mov
cwtl
out
imul
mov
sarb
mov
jle
fnstcw
aad
and
xchg
lcall
jns
shr
cmp
nop
xchg
scas
jp
adc
xor
ljmp
pushf
dec
add
out
imul
das
int
jg
insb
push
pop
shrl
inc
sub
cli
popa
rcr
shll
aad
inc
bound
jecxz
jne
or
fildll
test
daa
ret
jmp
and
xchg
cmpsb
lcall
test
mov
xor
push
dec
in
out
aam
lea
adc
fwait
cmp
test
sub
in
hlt
and
xchg
stc
and
ret
cld
fwait
pop
lods
mov
js
push
outsl
sub
mov
fsubl
fs
mov
adc
xchg
or
adc
shr
mov
jmp
sbb
and
add
and
lahf
jae
out
xchg
lret
lcall
imul
pop
push
imul
insl
cmp
jg
cmpsb
or
je
push
icebp
push
roll
cmp
add
push
insb
jns
js
and
adc
std
or
jb
sub
lock
pop
xor
ret
sbb
push
repnz
lret
xchg
into
mov
pusha
bound
imul
outsb
sbb
mov
js
xchg
mov
jno
pusha
sbb
sahf
lods
jmp
testb
ds
xor
clc
imul
and
sub
orl
out
jg
addl
in
adc
mov
in
aad
js
push
dec
imul
cmp
and
mov
lock
jnp
adc
push
push
outsl
xchg
lcall
mov
sub
stos
cltd
jbe
leave
dec
lret
mov
cs
xchg
mov
mov
adc
dec
sar
imul
xchg
add
mov
jg
mov
cwtl
push
out
sar
add
add
into
and
movsb
mov
fcmovu
add
pop
cltd
test
dec
pop
fnstsw
dec
cltd
and
mov
mov
mov
ds
fmul
stos
mov
jmp
pop
clc
sbb
inc
lods
push
mov
cli
push
cmp
insb
jns
mov
test
popf
sbb
inc
leave
std
mov
sub
mov
or
mov
test
orb
outsl
xor
lods
fldenv
pop
sub
pop
iret
pop
adc
mov
pushf
xor
adc
mov
cmp
fisubl
aaa
out
in
shl
and
pop
sub
aam
lods
pop
clc
hlt
icebp
dec
arpl
shrb
std
int3
push
mov
loope
int3
cmp
mov
aad
jg
dec
pushf
shll
into
push
sub
imul
xor
cmp
cmp
mov
fnstenv
sbb
push
test
lahf
and
add
pop
add
cmp
cmc
lods
adc
test
push
xor
test
dec
lods
xor
in
cli
popf
jmp
out
xchg
sbb
mov
jge
xor
movsb
gs
inc
in
sub
mov
pop
and
mov
add
inc
insb
popa
dec
and
sbbl
fprem1
pop
push
adcl
xchg
lcall
cmp
mov
ss
das
mov
jbe
mov
divl
xorl
imul
jbe
sbb
outsl
in
xchg
mov
cltd
pusha
aam
jbe
pop
mov
movsl
repnz
mov
and
pusha
push
out
jmp
loopne
fists
fs
jg
nop
cld
cmpsb
and
imul
mov
cld
jae
aas
push
repnz
fildll
cmp
inc
lds
inc
and
or
xor
bound
pop
push
cwtl
dec
ds
xchg
or
je
in
lock
mov
or
ret
sub
ds
xchg
scas
scas
testl
xor
jecxz
aaa
cmp
xchg
jb
fimull
enter
adc
sbb
xor
test
dec
lahf
cmp
lods
loop
sahf
stos
xor
lahf
in
out
les
xor
sahf
dec
lods
push
aas
xor
lahf
invlpg
sub
mov
aam
out
cmp
mov
pop
ret
lcall
out
lcall
lods
cmp
lret
pop
sti
cmpb
sahf
test
jle
jo
or
adc
sar
loop
mov
adc
sbb
and
sbb
mov
sti
inc
out
jne
inc
lahf
cmp
push
pushf
insb
mov
frstor
stc
fdivl
xor
lds
js
das
push
jnp
test
cld
nop
sbb
jp
testb
cmpsl
icebp
dec
arpl
adc
insl
jne
jno
in
cmp
inc
imul
lcall
icebp
jmp
pop
jno
fs
movsl
mov
mov
push
pushf
out
pop
or
movsl
pop
mov
push
push
aaa
inc
movsb
fdivs
les
fisubs
int3
mov
loopne
sbb
pop
into
xchg
jae
aas
jle
repz
das
pop
inc
dec
aam
xor
add
or
adc
loope
lock
ret
adc
shl
sarb
pop
mov
test
fdiv
data16
loopne
lock
das
push
adc
faddl
jo
pop
pusha
pusha
lret
jge
adcb
xor
shll
out
add
cmpsb
ljmp
mov
xor
and
clc
push
dec
daa
mov
rolb
lahf
bound
fdivrp
mov
leave
jnp
fnsave
rorl
push
jl
out
stc
outsl
xchg
pop
loop,pn
jmp
jbe
jae
fisttps
add
jns
fisttpl
mov
rclb
mov
sub
mov
jecxz
sahf
orl
xchg
rcrb
xor
sahf
pop
nop
rorb
or
mov
adc
mov
xchg
mov
test
dec
pop
dec
mov
mov
loope
cmp
add
fld
lahf
or
pusha
jne
mov
sub
inc
push
push
lret
and
jne
fimuls
jo
push
iret
lcall
xor
sti
inc
mov
sub
int3
ret
cmp
cltd
add
xor
pop
ljmp
pop
and
push
test
idivl
mov
ss
mov
cld
mov
jmp
inc
mov
ljmp
enter
sti
mov
lret
ds
or
jae
icebp
jbe
leave
push
mov
push
lods
es
mov
lods
and
fnstsw
mov
orl
inc
std
push
loopne
mov
inc
fucomi
cltd
cmc
scas
insl
and
push
pushf
fnstsw
pop
bswap
mov
mov
dec
pop
pusha
or
sbb
inc
jae
mov
outsb
mov
xchg
jle
mov
inc
nop
test
jecxz
jecxz
mov
cld
mov
out
in
cmp
mov
lahf
push
pop
dec
pop
and
inc
mov
pop
cmpl
shrb
leave
add
scas
jmp
xchg
int
andl
add
cmp
xchg
inc
xchg
aam
xor
out
flds
pop
out
mov
and
mov
sub
insb
or
in
add
xlat
aam
mov
and
push
shrl
push
cltd
push
sbb
das
fdivl
cmp
mov
mov
test
shrb
add
cmpsl
mov
mov
or
movsl
fld
mov
or
sbb
aas
jne
push
sub
insb
aam
and
shrb
mov
adc
cmp
mov
jo
cmc
fmuls
jg
stos
movl
insb
adc
aam
insb
insl
mov
pop
dec
jbe
fstpt
mov
push
cwtl
xchg
jp
cmp
ds
inc
frstor
outsb
repz
xchg
pop
sar
xchg
xchg
fdivrs
repz
jb
imul
jg
add
aam
add
pop
cmpb
inc
jmp
push
rcll
add
cltd
jle
mov
cmp
adc
adc
xchg
popf
xor
cmc
es
mov
xor
data16
xchg
iret
fcmovnb
sbbl
pop
sbb
add
xchg
roll
xlat
xor
xor
mov
and
in
hlt
gs
jno
fprem1
or
mov
mov
mov
xor
jo
rol
popa
lahf
sbb
mov
adc
mov
jno
stos
mov
gs
mov
test
fsts
leave
or
mov
sahf
stos
ds
popa
push
inc
std
stc
mov
sbb
inc
bound
and
adc
das
fcmove
test
pop
imul
mov
cmp
sbb
rcr
mov
jns
dec
mov
mov
popf
aaa
push
aas
fbld
mov
pop
sbb
and
fisubrl
sub
movsb
xchg
push
sbb
jns
jle
jne
mov
cmp
test
pop
cmp
cmp
push
incl
lods
lds
sbb
je
cmp
dec
test
lahf
mov
xchg
xchg
push
js
mov
lea
xlat
sub
mov
sbb
push
jb
out
cmc
int
fdivr
stos
in
xchg
xor
inc
outsl
cmpb
outsl
mov
fistl
fdivs
mov
popf
fidivl
jnp
pop
push
cmp
jmp
hlt
nop
bound
loop
xchg
ror
sbb
adc
arpl
add
fwait
xchg
aaa
daa
inc
in
push
inc
push
sbb
stos
fdivl
jle
test
fisubs
inc
mov
shll
push
add
push
mov
rcrl
insb
xor
scas
cmp
or
or
mov
sub
inc
mov
hlt
or
cmp
add
outsb
aaa
mov
pop
movsl
jb
adc
fildl
mov
out
shl
js
ljmp
pop
sarb
lea
insl
lods
lods
jle
inc
sahf
mov
cmp
cmpsb
adc
mov
outsb
adc
sbb
add
fs
dec
adc
push
add
mov
shlb
jbe
push
xchg
repz
aam
subb
pop
movsb
dec
imul
or
hlt
dec
popf
pusha
push
les
stc
dec
sbb
shll
leave
jg
jg
push
dec
mov
out
in
stos
shrb
dec
in
mov
scas
sbb
sbb
lods
insl
jg
bnd
ret
ljmp
and
jns
mov
add
dec
gs
insb
sti
mov
cs
out
cmovs
sahf
jmp
fisttps
jae
cwtl
mov
rcrb
add
fwait
nop
in
xor
push
fwait
stos
mov
imul
lds
pop
popf
loop
rol
mov
dec
mov
lods
sub
add
or
sub
dec
mov
sbb
insb
int
rcrl
jne
sub
jl
cmc
mov
adc
sbb
push
mov
imul
mov
and
jge
das
pop
inc
jns
push
add
cs
adc
out
mov
pop
jo
mov
xchg
sbb
mov
addr16
in
in
jne
push
add
bound
fmulp
xchg
or
rcr
out
xchg
lods
test
test
clc
fnstsw
stc
jo
sbb
js
stos
out
cmp
lret
pushf
sub
jle
dec
adc
imul
xor
js
daa
scas
adcl
mov
add
scas
mov
insb
inc
push
addr16
sti
push
and
negl
mov
movsl
sub
add
aad
iret
hlt
lods
popa
pop
out
call
mov
pop
sbb
aad
mov
jbe
jne
or
aaa
add
pop
scas
popa
adc
push
jl
out
ja
lods
xchg
mov
mov
movb
jno
mov
xor
imul
and
in
push
lret
imul
mov
sbb
sbb
xchg
aad
pop
out
leave
sbb
mov
lret
adcl
jno
or
lret
and
cmp
or
cwtl
add
loope
ja
les
cmc
out
ficomps
iret
filds
inc
mov
push
xchg
pushf
xor
xor
and
mov
sub
fldl
bound
add
jle
movl
jge
and
add
sti
xchg
test
push
roll
xchg
mov
jecxz
xor
rcrl
push
test
out
out
adc
test
sub
sbb
push
push
sbb
cmp
hlt
mov
adc
cmp
insb
jb
pop
inc
cltd
adc
and
je
mov
jmp
jmp
shr
test
jnp
sbb
mov
jae
inc
jnp
js
ffree
inc
jp
js
cpuid
jno
mov
cli
sbb
sbb
cwtl
outsl
add
mov
mov
adc
sub
mulb
mov
fbld
and
add
cltd
dec
sarb
shlb
aam
adc
or
sbb
outsl
sub
pushf
adc
add
pop
pop
add
lods
pop
mulb
stc
aam
xor
jmp
push
mov
cmp
xor
mov
dec
shrl
adc
sbb
cmpsl
sub
push
addr16
sti
lds
jbe
xor
mov
jmp
cmp
jle
mov
adc
js
lds
stos
add
jecxz
cmp
loopne
sahf
std
in
cmp
aam
jecxz
jmp
in
jmp
aaa
xchg
mov
push
aaa
inc
fxch
xlat
addl
xor
outsb
pop
cmp
aas
popf
jno
dec
add
pop
mov
inc
mov
popa
mov
mov
repnz
mov
out
fwait
lcall
add
lret
cmpsl
push
add
aaa
stc
push
test
xor
in
adc
leave
mov
lds
clc
sbbb
inc
ret
xor
sbb
leave
cmc
mov
mov
and
dec
jp
sbb
lcall
iret
lods
pop
fisttpl
push
out
out
cmpl
sub
jge
and
push
and
insl
or
in
call
std
xchg
add
pop
imul
pop
hlt
cmpsl
jge
add
sbbl
add
ds
iret
add
test
sub
add
mov
or
dec
ss
js
das
pop
add
cmpsb
mov
les
dec
xorb
pop
xchg
mov
andb
je
cmpsb
mov
ds
mov
xchg
std
fldl
sbb
outsb
bswap
faddl
and
imul
mov
rcll
arpl
push
movsl
xor
bound
fldcw
jae
dec
mov
dec
inc
sub
fs
mov
pop
lods
mov
jno
jae
mov
xlat
inc
pushf
scas
ja
lahf
xchg
cwtl
cmpsb
cmp
sub
sub
sbb
cmpsb
jns
pop
dec
push
mov
jmp
mov
int3
push
daa
pop
fnstsw
sbb
push
aaa
mov
aas
popf
or
int
sub
xlat
outsl
mov
pop
push
outsl
sbb
cltd
or
data16
mov
adc
ljmp
sahf
push
jno
ficoms
iret
fdivrl
xchg
lea
gs
cwtl
sbb
idivl
loop
loop
ljmp
add
lahf
imul
daa
sub
xchg
and
adcl
pusha
push
mov
cmpsl
xlat
push
pop
mov
icebp
jno
insl
mov
and
xchg
dec
and
push
xor
add
lret
jp
in
pushf
imul
in
out
ljmp
or
mov
fdiv
stos
cmpsb
pop
sahf
mov
add
cmp
push
bound
sbb
int3
filds
outsb
popf
and
mov
adc
cmc
in
cmpl
popf
inc
movsb
in
int3
xor
sub
mov
pop
lret
loope
xchg
in
pop
subb
xor
dec
jnp
inc
xor
imul
dec
loop
test
adc
mov
mov
pop
aam
jl
lds
cld
cmpsl
movsb
cmpsb
imul
rcll
add
mov
push
mov
js
add
or
dec
sbb
rclb
xchg
add
shl
adc
js
aad
xor
push
enter
mov
push
pop
and
sub
jb
push
insb
inc
xor
inc
repz
jecxz
ret
pushf
rolb
mov
stos
push
adc
mov
ljmp
xor
sbb
fwait
icebp
push
fbld
in
inc
mov
fdiv
mov
vmaxsd
add
fldt
xchg
or
repnz
adc
dec
sub
ss
lahf
sbb
mov
jl
movsl
push
cmpsl
dec
inc
call
mov
repz
inc
xor
in
and
inc
or
jle
push
mov
jmp
mov
fnstcw
cmc
push
push
scas
mov
mov
out
mov
pop
roll
sbb
lea
rcr
xacquire
in
std
ljmp
fstpt
xchg
sub
cmp
mov
add
negl
push
inc
or
jecxz
pushf
jnp
arpl
insl
adc
mov
inc
daa
dec
add
xor
push
and
pop
sbb
notb
aas
scas
imulb
sub
mov
cmp
stos
push
ja
sub
xor
pop
lds
ljmp
inc
enter
aas
cmp
xchg
in
pop
rolb
out
sub
fisttpl
out
iret
out
sbb
jecxz
sbb
pslld
pop
loopne
outsl
inc
scas
fmul
movsl
lcall
xchg
sbb
sti
scas
push
inc
xchg
jmp
or
sub
dec
hlt
and
scas
mov
ja
xor
fisubs
or
mull
sbbl
push
and
cli
inc
rcll
and
imul
and
mov
int
cmp
add
inc
ja
xchg
or
test
jp
repnz
repz
xorl
test
cmpsl
cltd
pop
jge
jnp
aaa
pop
adc
xchg
add
xchg
cld
fstpt
and
dec
dec
shrl
and
push
insb
ja
push
lods
movsb
mov
aaa
inc
ret
push
iret
jle
pop
push
movl
pop
inc
je
repnz
adc
in
lea
dec
je
pop
mov
add
nop
inc
pop
add
add
pop
pop
cmp
jge
cmpsl
clc
add
push
scas
dec
jns
and
inc
je
jle
jns
lock
imul
shrb
mov
sub
push
sub
sahf
test
mov
imul
and
cmp
into
aaa
push
jmp
testb
xchg
fidivrs
xlat
mov
sbb
repnz
xchg
inc
incl
adc
nop
clc
pop
mov
fs
stos
push
call
adc
xor
fisubl
out
lds
sub
stc
push
sbb
adc
mov
notl
cmpsb
mov
inc
jg
std
mov
mov
movsl
jp
jle
dec
clc
cwtl
int
lock
in
pop
ja
mov
roll
sub
mov
shl
adc
sbb
cmp
dec
scas
dec
sbbb
enter
xchg
xor
test
les
popf
fldenv
xor
pop
xor
outsl
test
sbb
imul
imul
ja
dec
push
loope
inc
pop
pop
xchg
mov
outsl
xlat
add
fwait
mov
lea
test
xor
test
in
mov
mov
dec
lahf
movsl
das
pop
fsubs
inc
pop
aaa
jg
xchg
mov
dec
mov
imul
and
dec
pop
fwait
lods
lds
xchg
xchg
ds
add
call
lock
stos
aas
dec
in
iret
leave
push
fiadds
es
jno
push
mov
cmp
push
aad
mov
repnz
cs
sbb
scas
cmc
push
outsl
push
pop
int
shrl
inc
mov
push
inc
pop
jne
inc
data16
lds
xor
idiv
ret
fs
adc
imul
jbe
test
cmpl
xchg
scas
fistpl
inc
mov
pop
pusha
cmpsl
rclb
popf
dec
shll
movsb
or
test
xor
jecxz
xchg
mov
int
mov
push
adc
movsb
dec
stos
or
pop
pop
movsl
pop
lret
or
loope
xchg
in
jnp
cli
andb
cs
es
fisttpl
movq
cmp
or
dec
call
test
cli
fistpll
mov
xor
stc
shrl
mov
or
xor
aam
cmp
aaa
inc
mov
xor
stc
sbb
adcl
xchg
xchg
mov
stc
jne
adc
and
xlat
mov
push
and
mov
pop
fstpl
or
cmovnp
gs
imul
repnz
bound
pop
popf
cmc
imull
paddusw
mov
push
ret
sbb
xchg
add
jmp
mov
lcall
idiv
roll
mov
and
fisttpl
fimull
xchg
in
dec
sarb
movsb
pop
jle
and
cmc
pop
nop
inc
out
repz
int3
add
push
inc
cmpsl
hlt
out
sub
cmp
rcl
mov
sarl
test
inc
cmp
push
mov
and
cs
xchg
inc
push
lret
cmp
dec
jmp
or
push
imul
pop
pop
shrl
add
inc
repz
andl
cwtl
mov
fldenv
pop
scas
cmp
lret
pop
dec
add
icebp
and
jge
imulb
adc
push
push
xchg
mov
ss
and
mov
int3
es
mov
stos
xchg
and
data16
mov
aas
loopne
inc
loopne
pop
ljmp
cld
xchg
lret
mov
pop
and
cmp
stos
push
sub
pop
cmpsb
mov
jl
jne
pushf
inc
sub
mov
cmp
xchg
cmp
dec
int3
fidivrs
movsb
pop
jbe
cmp
das
jno
iret
mov
pop
jmp
scas
stos
cli
or
inc
push
jge
notl
pop
adc
inc
push
faddl
cmc
cwtl
dec
add
sbb
mov
cli
int3
mov
int3
sbb
adc
fisttpll
or
cmp
out
stos
or
sub
punpcklwd
xchg
pop
in
cltd
aam
cmp
ja
pop
adc
xchg
fcmovnb
lods
xchg
ret
xor
mov
je
les
addl
jge
push
add
insl
sbb
sbb
sahf
loope
es
scas
mov
int3
pop
sahf
jge
lahf
out
xor
stc
push
lret
push
fstl
popa
pop
push
mov
cs
jp
rorb
ret
mov
stc
int
aam
test
insb
sbb
dec
or
xlat
mov
lret
sti
sar
clc
pushf
cli
adcl
js
push
jns
nop
repnz
dec
mov
sub
dec
dec
xchg
test
inc
test
or
mov
push
dec
cmp
pop
hlt
add
pusha
mov
adc
dec
xchg
inc
fstps
xchg
and
fimull
mov
shll
in
imul
sbbb
jmp
and
sub
stos
cmpsb
pusha
cmp
mov
fidivrs
insb
into
sub
push
mov
xchg
xlat
faddl
js
popa
sbb
stc
fistl
icebp
scas
push
and
pop
icebp
mov
inc
aam
lods
fnsave
cmp
mov
aaa
inc
int3
pop
insl
lahf
fisubl
outsb
jns
and
inc
mov
lods
push
in
xchg
mov
js
cs
add
das
add
sahf
pop
push
outsl
mov
jbe
mov
or
movsl
lds
mov
sahf
inc
and
push
mov
test
jmp
sbb
or
add
pop
inc
and
mov
xchg
dec
pop
int3
mov
and
mov
mov
rcrb
in
cmp
mov
jae
and
pop
loop
xor
shlb
aas
std
enter
mov
je
xchg
int
dec
stc
in
imul
clc
mov
push
add
sbb
loop
jmp
pop
pusha
or
adc
popf
xchg
lods
in
xor
xor
sbb
call
jl
mov
rclb
popa
mov
loope
lcall
jl
mov
or
sbb
hlt
dec
nop
sub
gs
icebp
mov
shlb
ret
cltd
jo
ret
jno
aas
xor
and
aam
ror
popa
shrb
rorb
xchg
int
out
mov
icebp
or
test
mov
cld
pusha
popf
add
dec
lret
mov
inc
jb
adc
pop
ss
repnz
test
dec
aad
or
hlt
or
pop
pop
aas
aaa
pushf
ljmp
movsb
jg
dec
xchg
and
xchg
cmc
jp
clc
and
xchg
pop
or
inc
fistl
pop
pop
inc
sub
mov
outsl
inc
jae
xor
mov
data16
cmpsl
xor
imul
sbb
addr16
test
cli
sarb
xchg
sbbl
push
cwtl
inc
jnp
shll
fldt
stos
and
xchg
shr
inc
mov
fsubl
daa
addb
sbb
out
hlt
in
jecxz
lret
jb
out
xor
mov
repnz
ror
mov
cmp
mov
lock
pop
inc
xor
inc
cmp
sbb
test
pop
icebp
loope
and
popl
xchg
cmpsl
cmp
add
test
pop
subl
xor
pop
fsub
push
pop
loop
lret
scas
int3
insl
sbb
repz
ja
popa
sub
mov
sub
push
sbb
movsb
into
ret
in
cmp
stos
ret
data16
inc
lea
pop
jl
fstpl
push
into
push
mov
dec
outsb
mov
jle
scas
jo
dec
repnz
es
pop
mov
inc
jecxz
test
insl
out
lea
loope
loop
xchg
mov
sub
adc
mov
inc
adc
lret
popa
jb
push
sbb
xchg
adc
repz
adc
test
aad
pop
lods
sbb
sub
dec
push
out
jne
xchg
and
lcall
into
pop
mov
aas
jae
xor
fidivrs
fidivrl
xor
sub
mov
jmp
dec
arpl
ja
leave
mov
adc
out
repz
dec
out
push
lret
lds
sub
jmp
aas
push
cmp
and
xor
hlt
cmp
movsb
es
hlt
jl
out
jnp
in
jne
out
call
lret
ljmp
push
outsl
sub
ljmp
inc
subb
dec
jge
inc
arpl
sbb
sbb
into
fs
mov
push
pop
test
dec
daa
pop
loopne
push
push
xor
inc
cmp
push
inc
stos
sub
hlt
sub
in
into
push
int3
out
cmp
xor
push
or
rcr
in
or
in
push
in
imul
cs
sbb
ja
pushf
fwait
outsl
inc
or
add
jmp
push
mov
call
push
pop
ret
xor
pop
cmpsb
sti
xor
inc
test
hlt
pusha
mov
lahf
mov
mov
mov
out
js
and
loopne
test
fucomp
jnp
push
mov
pop
adc
rorl
and
or
sub
lret
testb
aad
xor
push
pop
inc
push
lock
in
enter
mov
jno
fwait
mov
out
mov
loope
adc
pop
cmp
or
xor
lahf
je
int3
dec
inc
imul
mov
and
sub
push
sbb
adc
mov
das
mov
adc
and
std
jge
mov
jp
out
daa
and
xor
in
mov
sahf
mov
jl
mov
jae
mov
add
sub
pop
xor
push
subl
negb
cmp
pop
shr
jo
push
imul
dec
out
xor
rclb
repz
sub
mov
adc
movsl
pop
ja
mov
es
loop
in
sub
jecxz
aaa
jecxz
adc
xor
not
xor
ficoms
outsb
dec
push
mov
loop
jle
inc
test
nop
sub
mov
fisubl
cmpb
shlb
xorl
mov
add
orl
scas
icebp
or
orl
dec
imul
pop
pushl
and
inc
into
cmpl
push
push
psrlw
jae
mov
arpl
xchg
or
sub
ljmp
xchg
sarb
or
dec
push
loop
pop
lods
call
sarl
out
sub
mov
xchg
out
sub
mov
pop
pushf
iret
push
sahf
mov
xlat
idiv
mov
movsb
andl
inc
mov
test
push
rcrl
in
into
pop
and
nop
out
iret
lret
std
mov
mull
cmp
cmp
icebp
clc
and
std
mov
int3
ljmp
inc
sub
lret
in
xchg
insl
test
jnp
int3
rep
cmpsl
fiadds
fbld
loop
mov
push
pop
iret
adc
xchg
movl
in
pusha
jl,pt
and
mov
loop
rcr
adc
dec
lret
xchg
movsb
cmp
push
pop
jge
insb
add
rcll
mov
cmp
pop
adc
fstpl
xchg
sbb
nop
jmp
fidivl
sbb
xchg
dec
mov
outsb
adc
fimull
push
cmp
fldt
or
jmp
fcompl
cmp
cmp
jae
dec
pop
cmp
ss
aas
mov
and
fisubs
add
mov
cmp
leave
add
in
lock
outsl
out
jg
jno
cwtl
fs
mov
or
dec
adc
xchg
adc
inc
mov
mov
add
loop
and
cmp
insl
jl
adc
fistpll
cmpsb
inc
ljmp
dec
mov
sub
or
lahf
lcall
adc
cmp
pusha
clc
push
mov
ret
xor
mov
push
mov
in
cmp
inc
outsl
outsl
push
cmp
es
push
jge
fcomp
outsl
sbb
jge
mov
dec
psubw
lcall
leave
dec
nop
jne
in
sub
imull
mov
xor
mov
jecxz
pop
cld
sub
fwait
es
cmp
and
sbb
xor
gs
dec
pop
cmp
or
std
aad
add
sbb
cmp
pop
mov
xor
ss
mov
cltd
les
cmpsl
cli
in
clc
and
xor
mov
add
iret
mov
cltd
inc
mov
or
lret
fs
lahf
in
dec
js
js
and
mul
out
cltd
jg
push
xor
lock
lock
inc
mov
mov
insb
push
sub
xorl
das
push
sub
mov
and
xor
mov
int
cwtl
or
xchg
ss
inc
mov
lcall
lret
dec
fstl
cmp
dec
xlat
std
daa
icebp
inc
push
mov
xchg
add
pop
lcall
outsl
push
mov
jmp
inc
sub
shrl
das
fnsave
movsb
push
xlat
shll
inc
sub
mov
or
int
scas
push
std
in
test
test
loope
pop
pop
std
inc
bound
mov
mov
inc
dec
jg
and
les
pop
out
push
push
sbb
roll
std
mov
cmp
jb
or
cmpsb
mov
sti
push
ss
add
ficoml
es
or
push
and
ss
pop
pop
cltd
int3
shrl
int
fwait
lret
lea
xchg
xchg
sarl
mov
sub
pop
mov
inc
mov
jne
aas
lret
into
outsb
cmp
into
xor
cmp
sbb
addr16
inc
mov
mov
mov
pop
push
pusha
hlt
lcall
les
pop
xor
leave
popl
repnz
aam
std
aaa
xchg
sbb
dec
push
out
cmpsl
into
addr16
push
test
inc
outsl
mov
loopne
ss
in
rcl
sub
and
or
xor
jne
push
es
push
stc
in
xor
pusha
insb
push
pop
cmp
nop
jmp
add
lahf
push
test
imul
in
mov
sub
xor
mov
mov
mov
sub
fnstsw
sub
inc
inc
test
pop
push
in
dec
pop
test
rcr
jne
cmp
push
idiv
mov
in
pop
pop
pop
cwtl
leave
inc
mov
shrl
call
sarl
sbbb
inc
insb
xor
dec
xchg
sub
pop
inc
popf
outsl
mov
addb
mov
lods
lahf
mov
push
out
mov
add
push
and
xor
dec
xor
or
daa
in
and
add
adc
jne
sbbb
adc
icebp
js
cmc
pop
rolb
hlt
inc
xchg
pushf
sti
idivb
push
mov
mov
cwtl
fwait
cmpl
sub
cmp
icebp
test
pop
notl
cmpsb
stos
mov
xlat
mov
loop
inc
stos
sub
arpl
mov
fwait
push
add
fsubrl
xchg
test
repnz
out
cmp
lds
jnp
mov
jno
data16
mov
pop
mov
sub
repz
fsubrl
cmp
lret
xchg
aaa
stc
add
mov
sub
xor
ret
cmc
data16
mov
or
imul
xor
js
pushf
ficomps
xchg
push
in
std
push
adc
pop
loopne
sbb
xor
hlt
jno
bound
lea
loope
leave
cwtl
adc
shll
aaa
cmp
bound
dec
test
sbb
push
test
iret
jb
out
inc
psllw
cmp
xchg
xlat
xchg
aad
push
inc
gs
xchg
add
xchg
jmp
imul
mov
lods
push
sbb
pop
movsl
sahf
jle
mov
sub
stos
sbb
cmp
xchg
jge,pt
mov
scas
clc
fistps
ss
inc
sbbb
mov
in
and
inc
loope
movsb
push
shll
push
movsl
stos
aaa
xor
repz
icebp
jb
push
arpl
out
shrb
dec
cmp
lock
push
push
test
sti
adc
fdivs
leave
dec
bound
mov
iret
or
fsubrl
sub
xor
loopne
jl
push
sbb
xor
pop
dec
mov
mov
pusha
out
fsubs
cmpsb
imul
scas
ja
dec
lcall
push
call
push
addr16
inc
xchg
scas
lcall
jb
dec
jecxz
outsb
push
les
inc
add
ficoml
fstpl
push
add
fildll
int
mov
jp
in
mov
pop
pop
push
inc
sub
cmp
imul
jno
jp
push
adc
or
push
inc
push
lea
xchg
inc
iret
mov
cmp
mov
cmp
stc
sub
or
inc
xchg
sub
call
ljmp
pusha
sbb
mov
inc
add
adc
idivl
icebp
xchg
ds
in
imul
push
aad
pop
insl
notl
jns
cld
scas
pop
push
mov
dec
fsincos
push
lock
dec
mov
adc
xor
sar
xchg
xlat
add
cmp
insb
fidivrl
insl
xor
fstl
pop
dec
add
gs
jecxz
xor
fs
jecxz
pop
lcall
mov
cmp
out
int3
mov
or
push
pop
cltd
lret
lods
ja
and
cltd
lcall
and
sbb
lds
inc
out
fimull
cli
popa
xor
imul
cmp
and
pop
xor
pushf
jp
push
sarl
jno
push
lret
lret
add
leave
cmc
lret
int3
enter
inc
fmulp
daa
stos
cmpb
mov
sub
mov
enter
mul
and
adc
call
push
test
xor
pop
fldcw
mov
jae
jmp
lods
sbb
sub
cwtl
push
lds
jg
inc
inc
xchg
leave
xor
sub
andl
leave
loopne
in
and
cli
mov
daa
pop
sub
push
std
xlat
data16
jne,pt
lahf
xchg
jg
loope
add
loopne
push
sbb
movsl
dec
clc
cmp
clc
incl
arpl
xchg
push
jle
lods
pop
cmp
ss
scas
adc
dec
xor
push
popa
jge
je
xor
fisttpll
sahf
lds
inc
dec
lods
cmp
cmc
sub
rcrl
fcomps
mov
pop
cmp
push
fdivrp
hlt
lods
in
jl
jmp
loop
dec
ja
jo
ret
movsb
mov
lock
test
shlb
repz
into
sbb
shl
shlb
push
rcl
pop
daa
daa
mov
push
int
das
jno
cwtl
in
sub
pushf
in
aas
sub
xor
or
lods
pop
stos
sbb
test
icebp
push
xor
aad
mov
xor
inc
or
sbb
mov
or
jno
add
lods
fsts
xorl
repnz
enter
imul
jbe
sbb
adc
push
aam
mov
testb
cwtl
inc
out
fldt
mov
pusha
imul
les
pop
test
mov
mov
cli
bound
pop
cld
cld
mov
and
popf
pop
mov
or
dec
mov
cmp
add
xor
jg
test
jp
xchg
fldenv
jb
imul
mov
xchg
xchg
fistpl
xchg
ja
fimuls
js
mov
xor
xchg
jmp
xor
pop
dec
mov
scas
movsl
add
sub
pop
ret
pusha
insl
pop
fucompp
fidivrs
les
sub
jns
lock
dec
movsl
jecxz
lahf
sbb
xchg
or
scas
rorl
sbb
inc
cmp
jb
std
cmp
mov
and
in
xchg
jge
and
mov
mov
xchg
int3
pop
ljmp
sbb
imul
inc
jbe
sbb
lret
clc
mov
pop
mov
push
fldcw
jne
dec
adcb
pop
jecxz
jno
push
jne
cmp
adc
lcall
push
fwait
iret
lret
lahf
testl
in
sub
add
jns
sub
cmp
push
inc
stos
add
inc
sbbl
push
inc
in
rcrb
cltd
inc
dec
jle
cli
jecxz
jmp
cmc
ljmp
mov
test
and
jecxz
test
aaa
add
mov
mov
mov
lret
out
jg
fistpl
or
sti
pusha
movsl
orl
mov
jns
ret
out
cli
sbb
adc
cmc
mov
adcb
mov
lcall
sub
sub
ljmp
hlt
lods
push
les
addl
xor
ss
and
jne
std
pushf
cmp
push
push
shll
stc
ljmp
outsl
cmp
pushf
jae
negb
mov
shrl
ljmp
cltd
sbb
cmp
andb
movsb
or
imul
push
mov
pop
out
ds
mov
add
ss
jle
adc
push
add
iret
mov
xor
mov
jp
and
mov
jg
aam
sbb
xchg
sti
dec
jle
mov
into
ret
lea
or
jno
nop
push
inc
push
fisubl
dec
enter
dec
movsl
iret
ficoml
adc
and
std
out
and
add
jge
mov
pop
in
push
and
adcl
loop
repnz
inc
aad
mov
and
pop
aam
and
mov
xbegin
mov
mov
xor
scas
ljmp
ja
dec
fsubrs
push
and
push
jge
mov
ficomps
pop
dec
fs
sti
loope
pop
mov
aad
mov
fists
push
aad
mov
movl
inc
cmovbe
sti
jb
sub
out
icebp
mov
sub
mov
cs
sti
fidivs
les
xlat
add
insl
jbe
ret
push
and
and
xor
insl
fs
xor
iret
and
insl
jns
das
cwtl
ja
push
jae
add
mov
sahf
arpl
add
adc
sbb
xor
sub
sbb
jb
push
sbb
enter
jo
leave
adc
mov
sti
push
movl
flds
mov
adc
cs
mov
orl
push
add
xor
js
fs
lock
cmp
and
mov
aas
inc
scas
outsb
xchg
arpl
aam
jb
movsl
sti
and
push
lods
jmp
pop
or
or
popa
mov
icebp
lock
popa
lock
scas
test
pop
in
jge
imul
jno
lcall
loope
orl
add
stc
sub
call
in
fwait
xchg
sahf
jo
inc
pop
in
sti
out
push
fadd
pop
jmp
cvtdq2ps
or
movsb
and
insl
or
iret
call
lods
jb
xchg
fsubs
int
sbb
das
and
xor
jb
cmpsl
movb
jg
enter
xlat
aaa
cmp
push
int
sub
pop
and
xlat
xlat
outsb
js
inc
cld
push
out
into
mov
push
mov
xchg
cli
out
fnstcw
stos
movsl
jl
sub
arpl
mov
popf
shlb
je
mov
pop
pop
movsl
in
jl
and
sub
mov
inc
cmp
leave
mov
and
jle
pusha
add
loop
out
in
push
enter
push
mov
and
iret
das
hlt
dec
fcoms
push
push
mov
mov
loope
jbe
je
sbb
jle
adc
ljmp
mov
push
in
sbb
push
jl
mov
mov
or
cmp
xor
xor
out
jb
jge
movsb
orl
imul
fnstenv
inc
and
xor
in
xor
sbb
sbb
cmp
mov
jecxz
jnp
cli
in
inc
imul
addr16
adc
push
and
xchg
adcl
sbb
mov
mov
mov
jne
sub
xchg
sbb
insb
mov
clc
push
inc
movsb
and
into
cmpsb
out
iret
mov
add
inc
repnz
push
aad
les
dec
adc
arpl
loop
call
mov
mov
cmpsl
jecxz
and
inc
xchg
sub
or
das
pop
xchg
iret
sbb
test
cmp
arpl
push
loope
inc
pusha
nop
outsl
jae
out
mov
push
fstps
push
cmp
in
out
push
daa
or
lret
inc
jb
das
or
xlat
jl
mov
mov
jl
jecxz
pop
mov
cld
xlat
push
imul
jp
fdivr
movsb
pop
cmp
fnstenv
mov
push
mov
stos
aad
mov
mov
stc
sub
test
push
mov
push
and
xchg
push
pop
dec
aad
sub
sarl
test
mov
and
cmp
enter
mov
push
dec
mov
adc
mov
push
fists
cli
pop
jecxz
pushf
pop
loop
sbb
jae
pop
inc
xchg
ror
scas
jb
es
mov
loope
push
mov
aad
xchg
adc
hlt
xchg
into
or
and
scas
sbb
aad
into
dec
jl
idivl
negb
mov
pop
hlt
das
test
pusha
das
iret
cltd
jecxz
insl
mov
cltd
cmp
dec
es
daa
inc
data16
dec
xor
adc
loop
inc
cmp
ret
sub
mov
outsb
fnstsw
ret
push
cmp
adc
add
cmp
mov
imul
shlb
inc
shll
inc
lcall
add
addr16
mov
and
test
dec
push
jge
scas
in
jge
mov
in
push
in
push
mov
aam
mov
mov
sub
jnp
cli
jnp
add
cltd
scas
pop
and
adc
repz
mov
rolb
mov
adc
outsb
jo
stos
repnz
mov
dec
mov
iret
idiv
inc
gs
js
pop
inc
mov
and
and
popa
push
jbe
xchg
pushf
lock
mov
inc
cmpsl
gs
or
cmp
cwtl
lock
and
scas
fst
sub
jbe
int
xchg
dec
jp
dec
test
out
adc
sbb
loope
daa
mov
icebp
fisttpl
dec
pusha
dec
lret
xor
push
jp
add
adc
ret
mov
test
adc
ja
push
test
sbb
ret
inc
add
xor
xlat
cmc
xchg
xor
and
inc
lock
inc
mov
pop
outsl
xor
xchg
pop
pop
inc
xchg
js
insl
pop
or
adc
inc
in
sbb
jmp
xor
in
or
ja
jle
ljmp
sbb
stos
add
sub
in
and
fs
fstl
icebp
inc
and
add
and
mov
or
pop
dec
rcl
pop
mov
add
adc
inc
ss
js
int
pop
pop
xchg
sti
inc
push
loopne
cmp
pop
rcrb
lret
xlat
mov
sub
cmp
leave
jno
push
pop
hlt
hlt
xorb
jmp
mov
js
push
dec
pusha
ficomps
cmpsb
add
faddp
movsb
loop
lock
cmpsb
out
mov
cmp
push
into
pop
inc
icebp
adc
dec
idivl
sub
xor
push
xor
xchg
cld
add
daa
sub
int3
lods
push
fadds
xchg
lcall
pop
mov
popa
xchg
xchg
and
ror
adc
dec
dec
shrl
dec
mov
outsb
xor
and
js
dec
sub
and
enter
notl
jno
jmp
xchg
mov
aaa
push
fsub
push
jge
pop
cs
adc
jmp
das
xchg
cld
lods
mov
mov
mov
in
std
shl
fldcw
or
inc
push
hlt
idivb
cmc
daa
pushf
xlat
lds
aas
inc
fistpl
mov
nop
rolb
mov
imul
and
cld
daa
mov
enter
jb
ret
test
pop
cmp
das
lods
rcrb
push
xlat
mov
push
mov
cwtl
push
cltd
mov
add
mov
jae
sub
test
cs
mov
dec
push
test
mov
pop
rol
cli
jmp
inc
mov
or
push
loope
pop
pop
out
cmp
outsb
aad
imul
xchg
sub
jne
fidivs
sub
adc
outsb
mov
out
cmp
lock
push
xor
bound
sub
mov
outsb
xchg
and
sbb
sub
mov
xchg
lret
imul
push
frstor
or
add
xchg
cmpsb
xor
shll
int
lods
stos
pop
dec
jmp
or
dec
cs
sbb
dec
jg
int3
mov
add
sbb
cmpsb
cmp
lea
mov
pop
cltd
sub
xor
rcll
mov
clc
je
mov
fistl
mov
xchg
filds
mov
xlat
add
insb
add
push
iret
cmp
push
mov
mov
mov
push
sbb
adc
xchg
fldcw
movsb
call
test
xor
jge
pusha
push
cmpsl
shl
mov
mov
mov
lea
fs
iret
jnp
imul
out
pop
jl
push
inc
clc
adc
xchg
jmp
inc
jg
push
lahf
or
mov
xor
or
cmp
cli
mov
adc
clc
jns
shll
sub
enter
xor
push
adc
jmp
fdivp
cli
adc
mov
xlat
pop
pop
lret
mov
add
xchg
idivl
mov
inc
mov
cmp
add
mov
sub
xor
sub
sub
xor
push
test
jp
int
gs
stc
add
std
pushl
push
sbb
inc
setne
push
std
sbb
je
pop
je
pop
mov
add
and
movsb
mov
pop
lods
loope
adc
push
test
stc
or
or
xchg
stc
jnp
or
xorb
cmp
shll
fwait
rcl
cmpb
incb
sar
movsl
outsl
sbb
test
rorb
cwtl
shrl
mov
movsl
inc
cs
cmpl
es
sbb
lods
mov
push
data16
mov
xlat
pop
adc
aas
mov
mov
insl
jno
ficoml
aas
cmc
and
sbb
lret
rcll
dec
xchg
xor
xor
push
push
sub
nop
cmpsl
clc
jmp
in
pop
sub
insb
fbstp
movsb
test
dec
fdivr
mov
out
pop
jb
add
pop
push
fnstenv
inc
mov
or
jl
mov
loop
xchg
dec
enter
aaa
dec
aam
pop
test
and
stos
inc
test
imul
inc
sub
and
mov
in
fistpll
testb
jle
mov
fdivr
or
faddl
xor
leave
fimull
jl
hlt
ds
pusha
sub
push
andb
or
add
mov
and
int
xor
and
sub
xchg
repnz
lahf
mov
pop
mov
fxch
stos
jle
xchg
xor
test
add
fldenv
test
xchg
inc
adc
cwtl
cmc
push
jp
dec
cmp
xlat
adc
cmp
shl
adc
dec
int
cmc
les
inc
loopne
ror
loop
les
dec
inc
xor
pusha
xchg
xchg
aas
nop
fwait
sbb
jmp
cmpsb
jmp
cs
shrl
adc
xor
shll
xchg
test
xor
out
out
mov
push
ja
xchg
stos
xchg
insl
xlat
testl
jae
and
fdivs
push
rorl
or
cmp
inc
or
add
int3
clc
pop
and
xchg
pop
clc
out
sub
and
sbb
xchg
push
fnstcw
or
lea
lea
lret
xor
out
push
into
inc
mov
lods
mov
loopne
ljmp
daa
inc
repnz
push
jp
push
sub
hlt
loope
xchg
xor
push
xchg
jnp
add
imul
xchg
loope
sbb
xchg
dec
ret
mov
fs
push
cmpsl
fadds
or
fdivs
push
mov
add
cltd
cs
movsl
nop
icebp
dec
add
dec
lods
sahf
add
mov
sarl
iret
adc
lods
std
ret
outsb
lock
mov
stos
fisttpl
lcall
mov
insb
jp
jae
outsb
repnz
stc
or
out
xchg
popa
paddq
divl
push
es
sti
lahf
and
data16
mov
je
add
loopne
js
popf
mov
stos
cmp
jp
adc
sbb
repnz
sbb
mov
jle
pushf
cmp
inc
adc
or
push
adc
loop
mov
cmp
mov
adc
pop
stos
imul
aad
inc
stos
xchg
jae
sub
shlb
push
in
enter
cs
repz
mov
mov
sub
push
push
negb
mov
icebp
sahf
and
mov
push
jno
daa
test
pop
xor
xchg
inc
in
je
scas
ret
mov
jnp
cli
insl
data16
sbb
dec
movsb
push
in
lods
cli
out
ds
ret
lret
mov
push
shrb
loope
cmp
and
mov
test
sbbl
sub
push
icebp
leave
ret
push
addr16
dec
fwait
push
aas
in
in
icebp
pop
les
cli
sahf
rclb
shr
inc
je
imul
out
mov
push
pop
ds
lods
pop
rorl
cld
mov
in
repz
jns
jge
mov
ds
sub
push
gs
xor
in
lods
call
loope
or
shrl
addr16
scas
cmp
push
das
dec
aas
ja
lds
cmp
mov
fdivs
push
mov
push
bound
adc
in
mov
movsl
jae
sub
pop
lret
test
pop
add
jo
call
xlat
adc
rcrb
insl
movnti
or
pop
js
aas
ljmp
loope
sbb
int3
mov
xor
mov
pop
test
sarb
and
out
adc
mov
in
cmpsb
jno
adcl
adc
daa
xchg
sub
jne
fucomp
xor
sbb
sub
push
iret
cmp
mov
pop
sbb
cmp
and
push
adc
push
fcmovnb
sarl
cli
and
pop
mov
sbb
mov
lret
fidivrl
incb
sub
lret
int3
js
push
imul
and
xchg
xchg
sub
sbbl
xor
xlat
push
je
lret
roll
push
pushf
out
addr16
rcrl
sbb
test
sub
rsqrtps
sti
push
insb
loop
hlt
dec
shlb
push
lret
repnz
stos
jmp
andl
test
ds
and
out
adc
mov
into
in
jle
insl
mulb
push
cli
scas
push
das
lds
mov
pop
lret
test
es
xor
les
fnsave
mov
pop
inc
sub
out
dec
pop
cmpsb
fucom
add
fadd
mulb
push
cltd
in
jae
mov
dec
rolb
cmp
std
into
adc
pushf
in
arpl
or
jo
xchg
movsl
pop
lret
add
dec
mul
pusha
pop
aas
fs
repz
mov
ljmp
fwait
loopne
repz
fisubs
mov
loope
notb
cltd
push
in
push
ljmp
pop
test
mov
cmp
pushf
je
pop
leave
je
ljmp
inc
mov
xorl
inc
pop
add
pop
repz
in
in
push
lods
xor
or
mov
imul
jp
sarl
push
mov
cld
rcrl
mov
int
xlat
in
and
mov
fdivl
jnp
sub
xchg
repz
pop
ret
jno
clc
cmp
lret
test
sub
sbb
push
imul
cmpps
or
add
mov
cmp
fdivrp
or
jg
mov
sbbb
mov
clc
or
js
adc
mov
pop
push
and
mov
xchg
sbb
push
fldt
xchg
inc
lea
out
push
inc
and
enter
loope
push
stc
adc
aam
insl
jb
jmp
push
push
sub
mov
push
xor
jl
orb
shr
gs
nop
push
lea
lods
inc
out
dec
scas
rcrl
dec
movsb
jo
rclb
out
test
add
shlb
bound
fstpt
ja
aam
int
int
mov
rol
or
jno
cmp
mov
dec
popa
cmpsb
ret
mov
inc
lods
push
dec
dec
xchg
or
lret
lock
mov
push
xchg
adc
mov
mov
or
push
test
mov
mov
push
movsl
das
subl
sbb
mov
mov
arpl
in
add
inc
test
add
xlat
sub
cltd
es
pop
sbb
push
xchg
jg
sbb
shll
add
xchg
loop
dec
addb
mov
add
fwait
iret
shl
stos
sub
rcrb
add
rol
fcompl
leave
scas
add
js
push
and
mov
mov
mov
jg
lahf
out
jns
fmull
andb
cmpb
pop
sub
push
lock
inc
jae
sahf
adc
cli
ret
add
movsl
xchg
out
out
push
loop
add
jne
push
mov
push
push
pop
sub
inc
adc
cmp
xchg
mov
mov
lods
pop
pop
push
pop
push
push
push
or
and
mov
inc
push
fsubl
mov
push
mov
cmp
sub
call
pop
jno
lret
fnsave
ds
xchg
jp
fstpt
cmp
leave
psraw
push
int3
sbb
outsb
and
lea
in
xor
cltd
inc
enter
insb
inc
cli
pop
arpl
popf
arpl
add
test
add
jae
push
adc
mov
fwait
lods
push
test
jne
repnz
pop
mov
loop
jo
sbb
xor
push
push
mov
stos
shlb
scas
mov
cmp
or
bswap
cld
push
sbb
inc
lock
out
arpl
cmp
and
fadd
out
aas
add
outsb
stc
js
insl
stos
push
out
inc
rcll
jecxz
stos
hlt
jg
mov
fsts
sub
scas
test
jecxz
push
movsb
pop
lret
jo
lret
movsb
sub
or
cmpsb
push
push
jbe
pop
lds
inc
sbb
dec
icebp
in
sub
jo
jle
out
xchg
das
lds
loopne
iret
repz
sbb
add
clc
rcll
outsl
pop
popa
imul
loop
cmp
mov
or
int
test
dec
and
in
adc
or
into
xlat
sarb
xchg
xchg
push
stos
inc
sub
movsl
stos
cli
imul
inc
or
aam
jne
cs
xlat
push
mov
and
scas
xor
jns
jo
push
or
push
movsl
js
sbb
xor
jl
cld
add
xlat
outsb
adc
add
lds
lods
xor
dec
popa
jecxz
shlb
push
lock
mov
mov
mov
imul
push
mov
lods
mov
clc
xor
sbbl
adc
and
int3
fsubrs
dec
pop
cld
jecxz
cmpsl
test
dec
call
in
xor
cmp
pop
and
add
in
test
push
rorl
xorl
or
sbb
pop
mov
les
ljmp
lods
nop
sbb
and
push
pop
push
dec
jmp
cmp
cmp
testl
sbb
mov
sub
inc
push
pop
xchg
enter
ret
int
rclb
outsb
mov
fidivl
sbb
jo
sbb
xor
mov
call
inc
adc
inc
or
mov
stc
js
add
add
add
sbb
jo
sbbl
jnp
or
hlt
add
cmp
lods
jmp
lock
in
mov
push
mov
mov
outsb
xchg
ret
xchg
bound
xor
test
mov
sysret
int3
dec
jp
cmp
cmp
cltd
add
pop
adc
lret
mov
jle
int
xchg
loope,pn
add
jle
xchg
mov
in
sbb
ss
shr
ss
hlt
jnp
adc
pop
inc
inc
imul
cmp
and
inc
repz
pop
xor
or
insl
cwtl
push
cmp
mov
mov
popa
addr16
push
inc
sbb
inc
push
imul
mov
push
arpl
mov
add
dec
outsl
jne
cmp
loop
outsl
sub
adc
mov
repz
mov
add
xor
sub
test
sub
mov
fists
imul
ss
or
pop
cmp
bound
popa
shrb
aam
push
sti
pop
pop
pop
dec
xor
sbb
adcb
lock
jp
xlat
loopne
cmp
sub
fcmovnu
addb
xor
xor
xor
outsl
push
sbb
lret
push
cmp
repz
pop
xlat
pop
icebp
daa
int3
in
mov
addr16
js
push
or
arpl
pop
test
das
inc
sbb
enter
sbb
push
outsb
cmp
pop
sub
mov
ficompl
jecxz
in
mov
cld
mov
fisttps
ret
dec
sbb
ror
adc
jecxz
lods
xlat
test
inc
push
mov
adc
insb
jb
idiv
lods
adc
and
clc
jle
mov
mov
cmp
rcr
xchg
xchg
pop
xor
bound
and
inc
lock
jbe
into
xchg
jo
testb
loop
xor
or
js
stos
aam
pushf
lcall
inc
out
push
insl
dec
sbb
add
movsl
mov
sbb
mov
xchg
adc
fnstcw
sti
mov
in
xor
push
in
aam
lahf
jge
inc
push
and
sub
add
cmp
int3
xlat
push
sbb
sti
mov
push
mov
outsl
mov
lcall
mov
push
movsb
mov
or
fldcw
lcall
loope
adc
cmc
lcall
adc
inc
loop
cmc
mov
int3
ficoms
jbe
ljmp
arpl
push
add
inc
mov
push
cmp
and
shr
jle
movsl
adc
dec
pop
cwtl
ja,pn
sbb
stc
mov
loop
loop
sarl
loopne
cmp
lds
cmp
fsubrl
mov
iret
pop
in
or
push
pop
je
inc
pop
sub
fnsave
push
rcrl
mov
mov
shrl
mov
push
pop
outsl
push
pop
ss
test
inc
inc
aam
insb
xchg
inc
mov
or
std
lds
loopne
jecxz
cmp
dec
dec
or
xchg
lret
repnz
les
insl
loopne
lea
dec
cmp
mov
scas
push
add
cmp
mov
xchg
pop
popa
pop
cmp
jmp
mov
push
out
rcll
adc
out
data16
shlb
xor
sbb
dec
pop
lock
inc
mov
insb
sub
add
xor
push
push
in
jbe
xchg
mov
insb
std
mov
aad
int3
enter
xchg
aas
inc
ret
inc
lret
fbstp
gs
mov
ljmp
xor
popa
cmp
sbb
js
movsl
pop
jmp
xorl
hlt
xchg
cmpsl
scas
pop
pop
inc
loop
inc
mov
mov
jne
inc
mov
inc
xchg
sti
xchg
adc
je
dec
mov
pop
inc
out
das
loop
sbb
mov
dec
lahf
jmp
mov
lret
in
leave
push
jmp
xor
mov
mov
inc
cld
xor
decb
mov
in
repnz
call
popa
rcrb
sbb
mov
mov
or
add
inc
gs
std
xchg
ret
js
aam
es
sbb
lret
cmp
sub
push
hlt
popf
push
insb
jmp
out
cmp
pop
leave
test
aad
ficompl
std
pushf
shll
lahf
out
in
lds
int
js
lock
mov
jb
popa
mov
ljmp
imul
fsubl
mov
sbb
adc
call
and
popa
inc
xchg
xchg
sbb
std
xchg
and
subl
inc
das
repz
aad
mov
inc
dec
push
mov
inc
stos
dec
jle
das
data16
mov
sbb
sahf
jp
and
mov
je
fwait
adc
ds
mov
addl
cmp
and
sub
std
dec
push
dec
out
fcoms
cmp
mov
fcompl
lahf
es
mov
dec
adc
add
or
mov
in
jl
nop
pop
js
xchg
out
xchg
decl
inc
sub
xchg
and
or
cmp
pop
gs
push
outsl
push
adc
test
stos
dec
dec
inc
ja,pn
mov
sbb
mov
xchg
xchg
mov
cmc
adc
pop
mov
or
clc
ss
popa
in
testb
mov
loope
sub
mov
xchg
add
jno
or
xchg
pop
outsb
mov
mov
cmpsb
xor
adc
and
push
add
dec
je
shl
and
jmp
push
imul
adc
ja
adc
ret
cmpsb
jno
add
stos
and
pop
dec
imul
inc
push
les
xor
pop
inc
sahf
mov
inc
cwtl
rclb
add
xlat
out
sti
loop
mov
dec
loopne
push
lcall
out
test
sbb
mov
mov
dec
js
cld
xchg
or
aad
in
xchg
push
sub
rcrb
add
xor
lcall
fnsave
cltd
pop
xchg
leave
movsl
lods
dec
inc
push
sub
sbb
popa
xchg
mov
jnp
test
leave
gs
pop
push
out
and
and
fcomps
aad
imul
pop
cmp
or
sbb
fs
adc
mov
mov
ljmp
sbb
mov
ss
lret
or
lods
nop
push
sub
ja
ja
mov
pushf
xchg
cmp
or
gs
cmpsb
and
push
fmull
lret
stos
cmp
imul
nop
fsubrs
movsb
or
cltd
fsts
cmc
inc
sub
cmpsl
cmp
mov
repnz
xor
mov
rclb
mov
mov
push
cld
icebp
xchg
imul
hlt
or
outsb
das
cltd
cmp
xchg
xchg
gs
jmp
sub
push
repnz
cld
mov
pop
and
in
movsl
pop
inc
test
stos
jo
fucomp
jge
js
fcmovnu
lock
in
rsqrtps
loope
xchg
gs
xor
jnp
mov
bnd
stos
jnp
inc
xor
push
pop
adc
jns
or
iret
addl
jmp
ljmp
mov
jo
sahf
mov
mov
add
inc
push
adc
or
pop
aad
mov
dec
jns
jge
pop
mov
mov
and
sub
or
idivl
mov
adc
aas
xor
mov
notl
sti
sub
jmp
pop
pop
bound
bound
cmp
pop
mov
push
inc
testl
add
daa
rclb
sbb
mov
pop
mov
mov
ret
adc
inc
jo
dec
pushf
shlb
stos
pop
fisubl
mov
enter
mov
in
scas
mov
xor
and
ret
mov
lock
cwtl
imul
sub
mov
cmp
push
push
xchg
icebp
xor
xchg
repnz
xor
aad
and
inc
cmc
pop
es
xchg
addb
adc
aad
mov
sub
jecxz
mov
daa
daa
jecxz
cmc
xchg
jbe
lods
call
pop
add
pop
notb
repz
repz
push
inc
out
sbb
std
xchg
daa
pop
push
cmp
lock
aad
push
and
das
mov
push
xor
pop
fbld
aaa
sub
xor
fnsave
imul
dec
dec
jae
popa
cmc
imul
enter
xchg
in
rcrb
idivb
push
inc
divb
sub
xor
mov
dec
mov
loop
das
jmp
inc
shrb
push
addr16
sub
xchg
stc
mov
inc
popa
gs
shl
mov
jle
jmp
or
jl
mov
movsl
sbb
xor
push
shl
in
stos
adc
dec
outsl
or
out
repnz
ffree
add
cs
or
jbe
mov
fldenv
cmpsb
pop
hlt
add
aas
mov
mul
dec
jb
sub
jbe
jbe
sbb
adc
pop
fwait
xchg
cmp
dec
pop
fwait
jae
jnp
test
cpuid
mov
aas
inc
mov
push
mov
mov
push
inc
push
sbb
jnp
push
fistl
ror
xchg
mov
lret
gs
jb
jle
inc
xor
out
jae
je
and
test
lods
cmp
pop
iret
jg
fldt
dec
aam
mov
clc
mov
xabort
xor
cmp
daa
mov
in
es
adc
xchg
loop
lea
loope
inc
xchg
add
add
add
jne
scas
xor
fprem
pop
mov
gs
imul
sbb
mov
cmpsl
cmpsb
fcmovnb
insl
sub
fnsave
fidivl
pop
lods
dec
mov
inc
xor
repz
jl
int3
std
jl
test
mov
pop
lods
ss
pop
adc
add
add
ljmp
xor
in
icebp
xchg
push
cld
push
mov
lret
jle
inc
lret
ljmp
gs
and
jle
fsubl
cmp
xor
sbbb
xchg
xchg
mov
in
fidivs
mov
loope
roll
rcrl
jl,pt
dec
mov
sahf
out
inc
insl
std
insl
push
daa
aad
and
inc
ss
cld
adc
push
shll
fld
mov
leave
add
mov
loope
ret
xor
inc
rorl
les
jle
mov
movsl
dec
push
mov
cltd
push
out
cmp
pop
mov
icebp
xor
cmp
cltd
sbb
inc
ret
mov
mov
cmpb
call
lods
loop
incb
repz
fwait
push
stos
outsl
and
fldt
hlt
jg
pop
cld
std
in
lea
xchg
outsl
pop
mov
add
adcb
out
push
shlb
sahf
clc
mov
add
pop
xchg
repnz
lock
push
scas
aaa
loop
arpl
mov
mov
xor
and
mov
repnz
je
out
out
and
mov
loope
mov
pop
lods
push
imul
hlt
shlb
or
pop
sti
cmc
lods
cmp
mov
pop
jbe
lock
sub
das
and
stos
sub
loop
and
cmpsl
mov
js
lea
and
add
enter
adc
pop
push
xorb
mov
pop
movsl
sub
cmp
shlb
repz
gs
jp
inc
xchg
dec
inc
mov
lds
test
nop
push
adcl
addl
out
xchg
pop
jne
cltd
adc
inc
inc
lods
icebp
cmp
shl
fstpt
lret
bound
xor
scas
cli
pop
push
mov
sbb
add
jae
lahf
mov
push
js
orl
xchg
rclb
pop
inc
jae
ds
jne
leave
and
test
pop
mov
int3
jbe
cmp
rorw
cmp
and
sti
aas
outsl
ficomps
cmp
adc
add
mov
inc
cltd
jo
push
jecxz
sti
sti
mov
sbb
cmp
jg
mov
mov
shrl
bound
jmp
rcrl
fs
leave
pop
sub
cs
inc
push
add
push
fidivrs
inc
fnstsw
daa
xor
dec
jecxz
fisubl
xor
push
xchg
dec
jmp
enter
adc
icebp
aad
mov
or
out
inc
cld
into
mov
ret
enter
js
and
xchg
in
mov
or
inc
xor
int3
xor
ret
ret
and
sub
cmp
mov
movsl
xchg
test
and
icebp
mov
cmp
outsl
dec
nop
xchg
mov
dec
mov
out
mov
clc
mov
sahf
add
mov
push
das
movsl
lahf
xor
aam
and
roll
sbb
mov
mov
adc
mov
or
mov
inc
shlb
mov
and
test
pop
mov
jnp
in
sbbl
pop
shl
icebp
mov
jnp
aas
jno
jmp
cmp
fsubs
scas
jecxz
dec
pop
mov
add
mov
test
pop
push
pop
adcl
jge
faddl
mov
cs
inc
cmpl
jns
gs
call
lods
clc
shlb
test
rol
jns
jg
stos
out
pop
cld
xorl
sub
xor
in
jbe
aas
xor
push
dec
jb
mov
aaa
mov
ficoms
movsb
or
stos
push
jmp
imulb
mov
icebp
enter
daa
fwait
sbb
gs
js
bound
addb
cli
mov
pop
loope
sahf
arpl
out
sbb
cld
jns
adc
cmp
cmp
std
lret
push
adc
mov
jl
ss
dec
leave
mov
jle
stos
mov
cmc
mov
imul
and
fwait
daa
inc
xlat
jno
outsl
movsl
mov
push
and
jae
stos
je
je
jb
mov
mov
jle
aas
scas
jg
pop
subl
or
mov
in
stos
xor
push
adc
rorl
fstpl
rcr
xlat
pop
aam
mov
lcall
push
loop
cmpsl
int
xchg
jle
dec
or
or
xor
cmpl
lcall
ja
negb
repnz
std
push
jecxz
jle
inc
cmpl
sti
clc
inc
pop
fwait
push
stos
mov
xor
call
mov
inc
and
int
sbb
stc
call
mov
mov
mov
mov
repz
jnp
enter
test
repz
pop
xchg
arpl
cmpsb
je
xchg
pushf
pop
fiadds
fsubs
sub
iret
call
mov
pop
and
sub
add
mov
adc
xor
mulps
sbb
and
adc
sub
fs
or
gs
clc
adc
test
ja
xor
cs
xchg
icebp
out
cltd
loope
test
loop
ret
jb
dec
xchg
sbbl
mov
testl
shl
push
aaa
out
imull
sti
and
les
cmp
sub
mov
cmp
out
mov
sbb
repnz
adc
int
pop
bound
ljmp
movsl
cltd
dec
pushw
or
pop
mov
aad
cmpsl
jmp
lcall
inc
faddl
loop
mov
loop
je
inc
cmp
pop
ret
negb
je
sbb
push
insl
adc
mov
cwtl
les
int
ret
lods
daa
lahf
push
adcl
leave
cld
cmc
nop
in
push
cvtps2pi
inc
test
inc
pop
sub
adc
add
rcll
sub
inc
mov
psrad
xchg
mov
in
out
in
lock
test
addr16
bound
jb
std
pop
mov
dec
and
add
jns
inc
fdivrl
mov
xor
push
popf
mov
mov
ljmp
add
addl
mov
bts
dec
jle
mov
ja
fwait
xchg
xor
mov
das
mov
call
sbb
and
ret
xor
sub
jl
adc
scas
xchg
jne
sub
rcll
shrl
pop
jns
pop
and
js
mov
xchg
lcall
pop
aaa
into
push
and
cmp
aad
test
lea
cmp
mov
cmp
sbb
fcomi
xlat
shrl
dec
pop
cmp
and
fs
dec
out
inc
lahf
cmp
pop
push
xor
test
repz
dec
jbe
pop
cltd
flds
jecxz
xor
mov
inc
imul
fptan
mov
sbb
scas
sbb
fidivrs
inc
jo
ficoms
filds
jle
mov
adc
add
loop
or
jno
test
pushf
pop
call
add
outsl
sahf
xor
adc
mov
cmp
in
out
scas
sub
cltd
inc
xor
cld
add
xchg
sub
das
je
pop
adc
jae
cs
add
fldenv
add
mov
adc
sbb
mov
jns
pop
pop
sbb
aad
sub
add
sbb
mov
inc
push
data16
outsb
fdivrp
loop
jp
mov
sbb
ljmp
invd
xchg
icebp
loop
hlt
cmp
mov
loop
fimull
jbe
mov
insl
mov
cmp
arpl
mov
in
mov
ds
call
imul
rsm
cmpsb
mov
loopne
dec
mov
sub
adc
xchg
stc
aaa
movsb
xchg
jae
js
xchg
inc
fdivrl
arpl
imul
mov
cmp
and
mov
lret
orb
test
das
stos
mov
or
cli
push
pop
loopne
jae
add
pusha
out
xor
xor
pushf
add
cmp
decl
inc
pop
shrl
mov
pop
xor
pop
ss
pop
lret
jae
mov
xorl
movntps
xchg
add
daa
push
xsaves
cltd
pop
scas
cli
cmp
push
cmp
sub
in
pop
aam
cmpsb
hlt
lahf
pop
lock
test
adc
cs
add
rcr
cwtl
std
repnz
je
mov
sub
xchg
frstor
add
inc
mov
pop
pop
xchg
xchg
xor
out
and
inc
adc
inc
fcoms
arpl
dec
dec
jg
aam
jecxz
inc
ja
and
xor
cmp
xchg
jbe
xlat
mov
jnp
add
popa
xor
adc
sub
dec
aam
or
dec
and
push
out
nop
xchg
cmp
bound
addr16
insl
repnz
lret
outsl
inc
dec
shl
add
sbb
test
hlt
or
nop
das
push
pop
mov
sti
adc
shlb
and
loope
mov
sub
xchg
imul
fisubl
xor
cmp
clc
and
movsl
and
xchg
dec
push
jp
inc
cmp
cmpb
call
dec
imul
inc
lods
and
mov
jecxz
add
dec
ja
xchg
mov
dec
imul
sarl
push
into
fidivs
js
lret
insb
adc
sbb
mov
stos
dec
inc
cmc
decb
jne
sub
xor
scas
into
dec
dec
jge
mov
jmp
loopne
outsb
pop
in
and
cli
mov
into
lods
loope
je
xorl
pop
lds
fwait
mov
dec
popf
adc
fisubrl
adc
int
xchg
pop
mov
push
jmp
cmp
mov
pusha
sub
sbb
imul
imul
mov
in
mov
jne
clc
dec
int3
mov
jbe
mov
cmp
fsubrs
push
lea
jns
pop
xor
mov
jg
fcomps
pop
jle
jno
mov
out
orl
lret
sbbb
mov
or
clc
jle
dec
ss
adc
fisttps
inc
icebp
sbb
iret
pop
pop
stos
and
cmp
mov
mov
fsub
mov
pop
dec
mov
and
ret
fnstenv
mov
imul
fidivl
jl
jl
mov
lds
and
dec
adc
lcall
sub
adc
or
sbb
nop
inc
lcall
daa
xlat
insb
jne
imul
sbb
jl
mov
stos
and
mov
in
cmp
mov
mov
dec
jl
daa
mov
insl
jmp
jle
jmp
xor
arpl
movsb
loopne
inc
mov
push
in
adc
jb
add
or
cmpsb
or
mov
orb
sti
fistps
jge
adc
pop
jl
pop
daa
stos
repnz
scas
insl
ret
mov
pop
enter
sbb
loope
and
scas
and
loop
and
loopne
loopne
aaa
xchg
mov
outsb
in
repnz
adc
iret
int
popf
pop
aam
push
enter
xor
in
or
push
lret
jno
test
xchg
sti
scas
scas
mov
push
in
cs
lret
sahf
add
pop
xor
fdivrl
ss
sbb
push
bound
ret
imulb
call
inc
pop
jbe
mov
cs
pop
inc
addb
cmpsb
js
ficomps
clc
stc
xchg
aas
leave
xchg
dec
xlat
rorl
insb
pop
push
sbb
or
xchg
mov
out
in
pop
fwait
cmpsl
mov
push
mov
shlb
mov
fistpll
ljmp
and
jl
inc
les
mov
jo
inc
lds
xchg
and
test
sahf
mov
es
mov
jge
xchg
movsb
mov
test
sti
cmp
jg
mov
mov
stos
sub
push
daa
cwtl
jge
fnsave
push
dec
mov
push
in
mulb
jg
loopne,pt
fsts
mov
mov
das
mov
pushf
in
es
xchg
xchg
mov
sbb
and
ss
mov
mov
int3
xor
in
mov
xchg
lahf
cmp
pushf
mov
insb
sub
scas
xor
cwtl
dec
inc
leave
cltd
sbb
add
or
loop
xchg
test
out
into
cld
addr16
push
push
pop
sub
sahf
cltd
mov
and
orl
jb
fmul
test
lret
das
sahf
mov
cmpb
shl
cli
repnz
cmp
mov
adcb
jl
movl
jae
addr16
add
sbb
push
js
or
jp
pop
xrelease
insl
repnz
adc
sbb
stc
xchg
rorb
scas
sti
sbbl
push
adc
repnz
lods
mov
push
stc
pop
xor
test
mov
scas
nop
clc
scas
popa
aaa
popf
jo
mov
into
push
pop
push
mov
xor
jbe
movsl
pop
rorb
jns
dec
clc
dec
xchg
sti
pop
push
xchg
cmp
iret
cld
pop
mov
sbb
sti
push
popf
fnstenv
sar
jg
xchg
cmp
jne
or
popa
and
push
push
cwtl
int3
push
cmp
inc
mov
xchg
pop
mov
in
xor
out
xlat
aas
jl
lcall
mov
mov
mov
insb
into
std
push
xchg
pop
mov
push
jmp
xor
mov
mov
test
test
dec
add
shll
imul
nop
test
popl
cmpsb
push
inc
xor
jmp
pushf
aam
out
jecxz
hlt
bound
sbb
imul
inc
and
je
leave
jae
int3
xchg
repz
stc
inc
test
xchg
mov
sub
cmp
leave
inc
inc
xor
and
lods
in
rcll
ret
pop
xchg
movsb
xlat
test
xchg
add
andb
in
ret
or
loop
nop
shl
inc
into
out
test
cmpsb
sub
add
adc
cltd
fnsave
divl
lods
ficompl
enter
add
sub
jmp
or
fwait
xor
hlt
cmp
ljmp
fisubrs
dec
shl
mov
ja
adc
lcall
enter
mov
sar
dec
cwtl
jp
dec
mov
or
or
mov
push
movl
pop
call
jae
mov
loope
push
loope
xor
jne
dec
pusha
sub
mov
pop
jnp
aam
xor
xor
adc
ds
inc
mov
cmp
lock
mov
mov
aam
add
jmp
pop
cmp
pop
xchg
sarl
pop
xchg
pop
cmpsl
ja
pop
call
movsb
xor
dec
mov
es
fldl
and
mov
mov
xchg
cld
movsb
xorb
scas
orl
jmp
insb
fs
mov
aam
xor
push
je
mov
out
inc
in
mov
inc
daa
sub
pop
add
pop
cmovnp
or
stc
jae
imul
inc
mov
pop
mov
bound
es
lahf
push
xor
mov
int
jle
in
sub
adc
cli
sub
arpl
jo
xchg
mov
cmp
mov
mov
ljmp
jbe
mov
mov
jle
mov
xor
push
mov
dec
inc
cmp
lcall
dec
cli
dec
rorl
sarl
scas
in
sbb
imul
lahf
leave
sub
hlt
add
mov
inc
sbb
out
arpl
pop
sub
pop
cmc
mov
pop
jo
scas
fwait
jl
or
addr16
js,pn
dec
mov
jge
shr
mov
aaa
or
inc
jae
jmp
stc
int3
dec
jno
xor
adc
cwtl
xchg
or
or
or
aas
dec
clc
jae
or
push
cmp
sarl
adc
xor
xchg
popa
or
xorb
jb
jae
lcall
fs
adc
pop
scas
addl
jge
test
pop
dec
jo
jl
ljmp
jp
xchg
sub
repz
idivb
clc
xor
inc
and
jae
std
xchg
xor
cmp
xor
sbb
cli
stc
jae
loopne
in
mov
sbb
arpl
outsb
fcmovb
pop
hlt
dec
jl
and
out
sbb
ret
pop
ret
dec
sbb
insl
xor
pop
lahf
pop
adc
jnp
push
je,pn
sarl
push
repnz
pop
js
lret
mov
cmpsl
jmp
outsb
es
stos
dec
add
xor
test
iret
push
in
xor
das
cmpsl
add
mov
insb
ret
mov
mov
xchg
outsl
jmp
jp
dec
das
lcall
mov
or
ds
jg
xchg
mov
sbb
popl
jb
movsl
push
stos
shll
es
push
or
push
out
jno
cli
add
pcmpeqw
xchg
adc
and
push
and
test
xor
xchg
xchg
fdivrs
ret
and
lds
fstpt
aaa
xchg
out
sub
inc
and
repnz
aad
cmp
lcall
daa
repz
psubd
popa
inc
dec
lret
mov
ds
jg
pop
xchg
mov
mov
jle
cmp
lret
pushf
or
out
iret
push
lret
shll
adc
fs
mov
scas
aam
fwait
movb
mov
stos
cmpsl
subb
push
stc
sbb
aam
pop
jl,pn
cltd
loope
cmp
add
and
cli
roll
out
clc
ljmp
insl
test
rcll
test
icebp
xor
idivb
mov
pop
test
pop
sbb
push
cmp
xchg
pop
cmpsb
inc
cwtl
test
in
mov
inc
xchg
pop
sbb
ret
pop
xchg
jmp
push
addl
mov
mov
lds
scas
pop
mov
jg
mov
lds
mov
das
je
xor
adc
lret
daa
sbb
jmp
cmp
vphaddwd
les
dec
scas
mov
cwtl
insl
out
push
pop
fcmovnu
out
test
inc
or
int
sub
jo
and
or
and
cmp
mov
outsb
mov
xchg
iret
jmp
inc
lods
data16
shrb
adc
fs
loope
jae
pop
jns
and
sub
fildll
jmp
je
and
out
cmp
pop
pop
jmp
dec
mov
loop
sahf
cmpsl
mov
push
pop
je
sbb
sbb
jmp
inc
and
test
imul
loopne
xchg
xchg
mov
outsl
adc
add
sub
ja
push
int3
outsb
repnz
xchg
sbbl
dec
xchg
cmp
adc
mov
jbe
xchg
adc
jmp
xchg
dec
jl
sahf
in
call
and
or
jns
xchg
sbb
jecxz
or
lods
jnp
fcmovnbe
insl
cmp
sbb
aad
lea
nop
pop
sbb
mov
shrb
sahf
xchg
cmpsl
sbb
push
jg
ret
movsb
test
sub
mov
and
cmp
test
ret
leave
cmp
sub
insl
out
sbb
pop
fisttps
bound
pop
mov
cld
and
sahf
cmp
jg
dec
iret
pushf
jmp
push
outsl
sbb
dec
outsl
lea
jecxz
pop
sub
lods
out
push
or
dec
mov
adc
lods
inc
add
jb
fisubrs
out
jb
jp
or
in
divl
sbb
jl
mov
inc
push
popa
out
push
inc
decl
test
mov
cmovae
xor
add
rclb
fcmovnb
and
mov
out
rcrl
cmp
or
mov
daa
adc
cmpsl
push
mov
inc
sbb
push
add
jmp
or
mov
mov
add
jg
hlt
ficompl
rorl
popa
sub
or
out
call
movsb
lret
jmp
into
adc
loop
ds
push
and
pusha
mov
pop
xchg
xchg
and
cwtl
cmc
mov
add
mov
cmpsl
mov
cmp
ret
stc
bound
shll
inc
xchg
stos
mov
in
roll
xchg
cmp
popf
cmp
bound
fsubl
mov
lock
dec
popf
add
sbb
mov
cmp
icebp
mov
cmpsl
fidivs
cmp
dec
ds
stos
rcr
cmc
outsb
jmp
mov
or
movb
stc
hlt
mov
push
cltd
std
aaa
mov
sub
xchg
push
sbb
jl
dec
flds
test
and
pop
mov
jl
sub
hlt
mov
shr
leave
inc
xor
imul
hlt
mov
es
test
adc
sahf
pushaw
mov
popa
sahf
test
xor
push
test
xor
xor
mov
xchg
inc
testb
out
mov
fwait
ret
leave
loope
inc
sarb
sbb
push
cmpb
xor
out
xchg
adc
pop
lods
ds
sbb
test
dec
adc
sti
sbb
push
dec
fwait
xchg
lahf
nop
sarl
mov
jo
test
shr
dec
insb
in
inc
scas
xor
add
and
ljmp
icebp
aaa
ja
mov
xchg
pop
mov
scas
cmp
or
movsb
sbb
arpl
sbb
cmp
pushf
leave
xchg
mov
int3
push
and
sub
sbb
pop
and
stos
fnstcw
cli
in
std
shrb
loopne
test
push
shrb
insl
fsubrp
std
js
adc
je
xlat
daa
movb
inc
in
pop
push
mov
lret
cmpsl
inc
loop
xchg
scas
loopne
and
mov
mov
lcall
xchg
lea
mov
pop
cmp
push
std
mov
addr16
fnsave
popa
add
stc
mov
pushf
mov
xor
or
and
mov
and
xor
pushf
cmp
je
shlb
pushf
test
call
aas
lock
add
jae
xor
adc
jo
push
lds
negb
loopne
int
mov
pop
popf
and
adc
icebp
scas
sti
pop
pop
or
inc
xor
push
dec
sti
cmp
pop
inc
mov
inc
mov
adc
arpl
roll
xor
jecxz
or
sub
push
insl
pop
xchg
pop
scas
clc
repnz
rorl
and
xor
push
and
xchg
add
fistl
popf
xchg
push
adc
rclb
push
outsl
push
sub
inc
rcrb
rcrb
or
sahf
fisubrs
sbb
enter
jg
mov
loope
push
cmp
ret
mov
jo
add
inc
mov
dec
cli
repnz
mov
in
cmp
pop
icebp
mov
push
clc
dec
adc
jp
popf
sbb
insb
adc
je
pop
shll
in
je
dec
out
jge
aad
and
loopne
jecxz
xlat
ds
and
inc
cmp
lret
inc
push
jns
fistpl
jb
jbe
insl
inc
mov
jge
adc
add
jl
leave
xchg
lret
mov
adc
inc
inc
xor
jp
sub
xchg
jne
mov
fidivrl
push
sbb
jae
lahf
pop
nop
jae
mov
xchg
sbb
test
xor
mov
sbb
rcr
cs
sbb
mov
fmull
add
out
inc
xchg
mov
xchg
lods
in
dec
js
lea
push
decl
movsl
mov
sbbl
and
popf
je
add
shlb
lock
aas
je
pushl
mov
mov
cmp
jmp
push
ficomps
xor
jge
and
mov
mov
or
or
jbe
push
pusha
nop
mov
call
jle
sbbl
repnz
jp
jle
adc
fs
fcmovnb
aas
scas
jle
repnz
lods
add
lret
inc
sbb
js
push
ret
cmpsl
mov
dec
mov
cs
cmpsl
adc
xchg
sub
call
sbb
cmp
xchg
mov
andl
andb
out
mov
push
mov
cli
push
enter
push
mov
push
retw
lcall
add
aad
lret
pusha
inc
mov
jns
test
jne
jmp
leave
mov
or
pop
cmpsl
sbb
inc
xor
xchg
test
dec
cmp
pop
gs
push
xor
add
lock
mov
and
jecxz
pushf
repnz
cld
and
stc
mov
inc
test
mov
add
pop
jecxz
test
cs
pop
and
hlt
pusha
jecxz
fidivs
cmp
stos
cltd
fstp
mov
cld
sub
in
pop
mov
loope
test
out
and
push
sub
sub
lcall
aad
jmp
das
jb
movsl
mov
xor
test
and
fmull
in
adc
add
inc
sbb
sub
mov
loopne
call
or
xchg
push
adc
cld
flds
pushf
inc
shll
or
test
push
pop
push
dec
les
popf
icebp
stc
ret
xor
push
xor
mov
push
outsl
cmp
mov
adc
jns
pop
pop
add
push
mov
scas
push
shl
inc
sbb
mov
xlat
test
loopne
xchg
mov
or
rol
fcoms
jmp
mov
mov
lcall
sbb
testl
fists
pop
out
loope
jg
inc
arpl
push
iret
sbb
jno
cli
sbb
sub
push
inc
ret
out
sbb
xor
fmull
clc
adc
into
cltd
lock
data16
adc
xor
xchg
aam
je
xchg
jecxz
or
lods
outsb
nop
sub
arpl
dec
inc
cmp
and
pop
cmpsb
mov
mov
inc
cmpsl
das
lret
leave
lds
das
jmp
xchg
xor
dec
or
xlat
sub
outsl
pop
pop
dec
inc
in
xchg
lret
in
test
arpl
insb
xor
popf
xchg
aad
fidivs
inc
lret
pop
sub
inc
aaa
fnsave
push
loope
adc
adc
or
outsl
sar
cmc
inc
mov
push
add
sbb
rcrb
repz
rorl
aam
push
mov
int3
sbb
mov
movsl
add
daa
loopne
aad
mov
add
push
jae
sub
pop
mov
js
add
sub
jmp
paddusb
imul
cwtl
inc
fidivrl
cs
mov
imul
pop
je
lock
cltd
inc
lea
and
mov
jne
mov
inc
push
movsb
add
pop
testl
sbb
sub
mov
lea
mul
jmp
inc
jge
loopne
loopne
jne
adc
cld
ffreep
push
popf
mov
mov
mov
push
jo
lea
push
xchg
cmpsb
dec
mov
dec
and
cmp
insl
out
cmp
or
inc
cmp
addl
add
sbb
pop
xor
pop
mov
inc
mov
stos
push
lret
mov
shlb
pusha
jecxz
mov
es
adc
xchg
xor
jp
lock
mov
js
mov
pop
xor
mov
test
and
and
push
sahf
int3
cmp
clc
mov
arpl
call
es
mov
sub
jmp
push
mov
inc
fistpll
jnp
loope
inc
movsb
ds
xchg
test
mov
hlt
cmp
mov
mov
and
icebp
rcll
push
in
push
cs
sub
adc
push
xchg
rcr
icebp
pop
jae
adc
sbb
loopne
inc
lea
rol
ret
push
into
in
jmp
fstpl
call
lods
add
int3
mov
or
int
mov
mov
ds
dec
jg
dec
das
xchg
inc
dec
cmp
mov
push
lods
adcl
mov
out
imul
xchg
jle
jl
int3
std
pusha
mov
mov
fs
dec
in
ja
pop
test
mov
mov
jge
jmp
cmpsl
mov
xchg
or
out
cld
dec
jns
jae
cmp
popf
test
mov
xchg
ja
cwtl
jmp
xlat
fisttps
cmp
cmp
rcl
cmp
testl
jecxz
es
not
pop
leave
xor
add
lea
in
in
add
xchg
imul
mov
mov
push
sbb
rol
fdivs
push
dec
or
lret
mov
mov
or
sbb
fsubp
pop
mov
iret
xchg
pop
inc
push
fistps
mov
insl
out
gs
lahf
in
dec
arpl
adcb
test
and
cmp
jmp
push
test
pop
fwait
cmp
mov
dec
add
or
xchg
imul
mov
push
arpl
xchg
in
lcall
adcb
dec
sub
stos
add
and
cmpsb
lret
sbb
out
stos
jp
shll
adc
xchg
add
mov
xchg
fidivrs
shlb
loopne
push
jge
loopne
es
and
popa
imul
stos
mov
mov
stos
outsl
data16
sub
rcll
mov
jp
xchg
out
add
dec
xchg
xchg
jae
jne
sbb
insb
sub
jae
mov
test
dec
or
movaps
mov
sub
pushf
aaa
sbb
movsl
cmpsl
push
pop
outsb
xor
fcomps
xor
stos
arpl
pop
push
shlb
xor
jmp
jb
pop
stos
into
dec
movsl
cwtl
pop
int3
push
ret
test
mov
movb
xor
mov
dec
dec
xchg
xor
cmpsl
mov
xchg
xchg
shll
les
fcoms
ss
cli
popa
notb
fdivrs
outsb
into
jle
jp
jp
sarl
xchg
nop
push
es
push
sub
push
test
push
xor
sahf
jae
in
add
dec
add
pop
imul
xchg
js
lea
mov
cltd
inc
cmp
lret
call
pop
cwtl
fsubs
pop
dec
pop
and
cltd
pop
out
jns
pop
add
icebp
xchg
imul
jle
inc
stos
add
add
dec
mov
and
xor
jbe
push
push
fistl
loope
or
or
and
out
push
and
test
pop
or
push
xor
inc
add
inc
das
xor
xchg
sub
pop
icebp
jno
xlat
add
sbb
xchg
inc
add
std
xchg
ljmp
outsb
das
mov
rcrb
pop
je
rolb
and
imul
and
sbb
cs
mov
cld
fs
cmp
sbbb
pop
shll
enter
mov
cld
sbb
js
xor
cmc
roll
addl
cmp
int
fsubs
push
aam
cltd
inc
pop
and
lock
int3
push
lret
ja
inc
push
add
adc
xchg
loope
enter
or
popl
hlt
or
jmp
inc
jno
out
sbb
add
lcall
sbb
shll
or
xchg
icebp
ret
push
pop
daa
pusha
les
fsubrl
xchg
idiv
cld
xchg
jge
lret
sarl
movsb
mov
pushf
jle
or
leave
cmp
nop
dec
in
xor
stos
loope
int3
push
jno
dec
sub
mov
inc
lret
pop
popa
mov
mov
xchg
out
loop
push
and
aam
fnstenv
sbb
stos
mov
int
jns
sub
jge
mov
outsb
mov
jge
inc
call
aaa
and
or
mov
sbb
test
pop
add
and
mov
xchg
in
xchg
fwait
cs
aaa
lret
daa
or
in
leave
ljmp
xchg
daa
mov
test
pop
mov
dec
popa
add
data16
dec
pop
int
and
add
adc
mov
and
jnp
mov
jmp
call
js
xchg
xchg
push
cmp
and
mov
fwait
das
mov
iret
add
jns
cs
inc
ret
iret
insb
int3
jl
pop
jne
mov
repz
out
popf
cmp
mov
mov
xor
cltd
dec
jle
sbb
sub
add
outsl
fnstsw
pop
xorl
shlb
in
je
inc
cmp
adc
rcll
jp
adc
dec
mov
lret
jecxz
cmp
int3
add
xor
rorb
out
sbb
pushf
sbb
ss
adc
cld
cs
jo
leave
sub
sub
pop
pop
lock
imul
and
pop
imul
les
push
mov
cmp
cmp
add
cli
aas
adc
lret
pcmpgtd
dec
xchg
mov
push
sbb
mov
sbb
mov
sub
sbb
popf
stos
cmp
sub
aas
push
sbb
out
sub
pop
call
ret
mov
es
adc
jbe
jns
cmc
jl
sbb
push
ljmp
mov
call
lock
popf
stos
sbb
ss
test
push
and
cltd
xor
les
rol
dec
mov
xor
repnz
out
mov
and
in
mov
sub
pop
ds
jmp
jecxz
insl
mov
dec
mov
mulb
call
push
mov
data16
addr16
fadds
pushl
cmpsb
cs
mov
mov
inc
mull
pop
add
les
call
push
loop
dec
faddl
and
push
aam
lahf
int
test
flds
xor
fisubs
pop
mov
sbb
and
pop
push
shll
enter
fbld
pop
push
sub
adc
fidivrl
idivb
fildll
lods
or
sub
mov
xor
out
dec
imul
dec
inc
xchg
inc
lret
pusha
pop
jl
jecxz
sbb
into
xor
xor
xchg
mov
pop
xor
lods
fcompl
movsb
nop
inc
movsb
push
cli
loop
or
dec
pop
iret
and
adc
adc
loop
leave
divl
in
and
sbb
mov
or
inc
mov
mov
pop
stos
sbb
or
push
mov
cmp
lods
jge
mov
push
adc
lock
xchg
xchg
mov
pop
xadd
sbb
loop
imul
lods
stos
and
jne
sub
aas
sub
adc
cmp
loop
imull
mov
dec
imulb
jg
add
mov
inc
shlb
int
push
cmp
jb
in
int
gs
adc
lcall
dec
jno
mov
mov
scas
lret
pop
sar
sub
adc
sarl
fsubs
rorb
push
shlb
mov
mov
push
mov
and
jl
popf
gs
sbb
xor
jae
mov
adc
or
mov
mov
lret
in
add
ja
fstl
xor
mov
aaa
fistpl
dec
movl
lock
cs
rorl
adc
xor
aaa
mov
mov
pop
clc
sbb
xor
ret
pcmpgtd
dec
push
fistps
insb
mov
mov
vmovaps
das
fldl
push
xchg
lret
fsts
inc
and
and
cmpl
sub
push
in
or
sbb
jge
or
dec
jnp
mov
xchg
sub
aaa
loope
mov
shlb
jmp
cli
mov
push
fmul
aam
lret
and
repnz
test
sarb
mov
mov
cmpb
add
and
dec
sub
icebp
xchg
fisubrs
jns
jge
es
push
nop
ja
mov
mov
stos
add
lcall
cmpsb
lods
jle
mov
xor
ss
pop
decl
shlb
imul
sub
lds
push
dec
and
inc
xor
xchg
std
jno
mov
xchg
inc
test
jns
xchg
lret
cmp
add
jo
pop
xchg
push
or
orl
sarb
and
mov
ret
aam
and
dec
lea
shlb
dec
stos
or
shll
add
sbb
fldt
je
xor
sub
jmp
movsl
not
cmp
xor
push
rorb
mov
inc
imul
mov
xor
out
into
fidivrl
push
rcll
andb
dec
je
int
out
lds
jl
test
add
test
mov
push
sub
outsb
sub
mov
jnp
push
mov
xor
push
fwait
or
ja
xchg
inc
sub
cmp
les
xchg
fisubrs
xor
mov
data16
dec
push
add
pop
and
inc
dec
adc
aas
jg
negl
dec
scas
or
imul
push
cld
xchg
cmp
das
imul
mov
fld
aas
outsb
pop
adc
jmp
sub
test
movsb
push
xor
inc
test
icebp
into
aad
dec
jecxz
sbb
pop
add
xor
fiadds
dec
lret
add
sbb
mov
xchg
mov
push
clc
mov
mov
dec
test
insb
int3
sub
and
fnstsw
dec
lods
or
xorb
fwait
in
daa
test
and
adc
add
adc
test
fwait
jg
mov
ljmp
fisttps
jecxz
or
push
push
hlt
sub
or
jge
xchg
mov
sub
xor
xor
xchg
pop
dec
pushf
pop
or
neg
into
lods
xchg
in
sbb
mov
daa
leave
arpl
popa
sub
add
adcb
mov
sbb
stc
sbb
push
sub
imul
inc
ret
adc
cmp
xor
mov
das
mov
mov
adc
xor
mov
xlat
les
cmpsl
mov
xor
jno
sbb
insl
repz
in
roll
out
dec
addl
cli
cmp
dec
sub
andl
sbb
mov
rclb
mov
mov
stc
mov
fs
add
xchg
dec
pop
xor
inc
xlat
nop
mov
xor
imul
push
and
fnstenv
pop
sarb
ljmp
push
mov
sub
adc
in
mov
and
sub
sbb
in
dec
inc
push
fdivrl
ds
cltd
test
cmpsl
ret
push
xchg
sbb
sbb
or
push
andl
mov
jle
add
insl
sub
fisttps
dec
lret
inc
loopne
pop
call
fisubrl
clc
adc
repnz
jnp
sub
gs
xchg
xor
data16
mov
sbb
inc
pop
mov
les
add
gs
aaa
lods
xor
fwait
mov
mov
lret
aas
add
and
sub
add
test
jbe
loopne
mov
mov
and
pop
sbbl
xor
sub
xor
icebp
mov
xorb
or
andl
std
cli
leave
jnp
xor
in
jno
dec
or
in
insl
xchg
and
shll
scas
adc
insb
clc
sub
test
imul
addb
test
out
sbbb
jno
lret
test
addb
add
push
xchg
outsl
repnz
lahf
mov
into
mov
inc
mov
scas
imul
cmp
into
mov
xor
and
in
dec
popa
sbb
mov
push
repz
pop
mov
clc
sbb
jo
cmp
loopne
and
inc
mov
xchg
cmc
mov
adc
inc
inc
lods
orl
adc
pop
ret
sub
inc
clc
cld
mov
lcall
pushf
movl
xchg
jne
lret
mov
dec
and
aad
sub
vpmovswb
bound
mov
push
lock
push
or
shr
lcall
mov
push
out
jp
ficomps
mov
or
sbbb
xor
sub
in
out
lods
jnp
or
and
push
popf
jbe
frstors
xchg
in
ret
adc
ss
mov
dec
lret
mov
mov
xor
cmpsb
push
mov
inc
out
pop
push
fwait
cmp
sbb
mov
xchg
addr16
add
lret
insl
movsl
out
ret
cli
adc
loope
jo
test
stc
insl
adc
lahf
repz
out
mov
mov
mov
add
aaa
stos
pop
cmp
xlat
mov
push
xor
incl
bound
lods
ret
adc
insl
mov
sub
clc
je
movb
inc
outsl
dec
pop
jle
or
ss
mov
out
inc
lahf
test
xor
mov
fbstp
ret
call
add
stos
xlat
pop
test
stc
stos
cmp
inc
lods
ret
or
mov
lods
dec
lea
lcall
fstl
popf
adc
dec
sti
lcall
jmp
push
sbb
adc
imul
popa
leave
fnstsw
inc
nop
es
dec
pop
add
mov
jl
jge
mov
adc
or
lcall
cltd
dec
push
popa
sar
jbe
pop
jle
in
mov
adc
sbb
stos
adc
icebp
pop
imul
dec
sbb
pop
test
add
jb
push
jmp
or
adc
comiss
gs
mov
and
stc
sbb
sbb
mov
leave
leave
xchg
mul
cs
in
lock
sbb
dec
cmovbe
outsb
jbe
nop
movsb
aaa
add
nop
sub
scas
ffree
xchg
mov
add
dec
shll
roll
jge
pop
push
mov
stos
cmp
sti
cwtl
stos
out
mov
inc
mov
int3
loop
lods
mov
xlat
lcall
cmp
adc
das
mov
xchg
lcall
pop
filds
ret
cld
cmp
cmpl
daa
push
dec
mov
and
dec
sbb
mov
movb
add
mov
into
push
push
xor
inc
lods
mov
lock
in
into
jb
in
inc
inc
pop
mov
sbb
add
jne
jns
js
jle
outsl
pop
rolb
or
add
lcall
jge
sahf
cmc
xchg
add
dec
pop
mov
jbe
enter
mov
mov
js,pt
cs
dec
divb
jne
addr16
iret
insb
sub
icebp
pop
test
inc
sbb
inc
negl
loope
sbb
jno
mov
es
lock
jg
lods
cmp
insb
jge
cmpsb
push
mov
unpcklps
cmpsl
jns
cmp
mov
ret
divb
sbb
cli
adc
scas
fwait
out
cld
or
push
test
movsl
into
xchg
mov
lret
mov
jne
push
xchg
pop
and
jg
scas
pop
scas
mov
mov
or
mov
add
into
mov
fldcw
mov
xor
mov
inc
les
push
xor
xchg
jae
ret
adc
or
lods
adc
pushf
cwtl
xchg
dec
fdivrl
push
insb
pop
push
fnstcw
push
stos
pop
insb
ficomps
xor
sub
lods
pop
or
shll
in
sbb
mov
push
js
or
loope
xchg
xor
stos
mov
sub
xor
jle
clc
push
mov
push
lock
fmull
cwtl
mov
leave
addr16
inc
aas
popa
mov
fildll
leave
mov
cmp
cltd
pop
addl
les
adc
or
push
sub
dec
mov
push
stc
mov
mov
mov
repz
pop
test
aad
pop
test
adc
call
mov
adc
pushf
cmc
shlb
aas
xlat
ret
pop
pop
jl
inc
cmp
into
xor
test
adc
sub
push
std
adc
cmpsl
int
loopne
inc
and
ret
dec
insb
out
or
or
std
mov
xchg
movsl
mov
mov
rclb
xor
xor
cmp
push
dec
adc
pop
push
push
inc
cmp
jnp
pop
mov
cvtpi2ps
movsb
in
ds
sub
cmp
jnp
xchg
cmc
pop
out
jg
and
in
xor
imul
out
push
or
adc
adc
ret
sub
loop
dec
dec
xchg
popa
jo
xor
mov
mov
test
sub
pusha
dec
dec
clc
mov
or
fiadds
negb
test
fwait
inc
jns
movsb
lret
xor
adc
aad
add
push
inc
loope
sbb
add
inc
imul
insb
push
ss
push
loopne
mov
jg
fwait
sub
aaa
popf
pop
adc
sbb
cmp
aas
in
in
call
mov
mov
ret
adc
sbb
cs
sahf
orl
mov
xlat
adc
nop
mov
pop
lahf
add
inc
or
dec
xchg
repz
inc
out
or
and
cmp
pusha
sub
stos
mov
dec
idivb
fstps
loope
dec
adcl
pop
sbb
adc
lds
inc
sub
sbb
inc
xor
mov
cmp
mov
sbb
adc
jl
shlb
lock
adc
xchg
sub
push
out
xlat
mov
push
call
mov
ficoms
int3
lahf
in
add
mov
jg
and
cltd
ret
pop
and
fnstsw
js
push
cmpsb
cmp
fistl
rcll
lods
adc
add
jb
in
push
decl
int
xor
jbe
sarb
or
mov
shlb
pop
dec
mov
push
sbb
xchg
push
mov
loop
inc
sub
adc
imul
ret
xchg
scas
adc
rorb
adcb
xlat
cli
stc
out
stos
test
stos
jb
add
jo
mov
jns
cmp
jne
faddp
ss
fnstenv
fcmovnb
les
and
loop
repnz
nop
push
dec
je
popf
sub
mov
add
xchg
testb
push
insb
sti
xadd
mov
pop
fs
out
inc
mov
dec
nop
jg
ret
lods
xorb
xchg
adc
inc
nop
sahf
fmul
dec
addl
repz
fidivrl
and
jb
jmp
xchg
hlt
lahf
jmp
idivb
sbb
clc
rol
xchg
clc
mov
xchg
loopne
jno
fadds
mov
in
das
addr16
xchg
mov
or
imul
data16
cli
shrb
fsubl
lods
mov
inc
push
in
add
xchg
stos
and
enter
mov
mov
out
inc
dec
jbe
fldcw
jge
dec
das
push
aam
outsb
rol
sub
mov
xchg
roll
sbb
insl
gs
mov
pop
sbb
xor
in
shlb
dec
bound
mov
pop
pop
ds
sti
adc
fnsave
mov
pop
mov
sbb
stc
outsb
mov
or
pusha
aad
std
jae
or
ljmp
out
push
or
xchg
jecxz
mov
ret
ljmp
movsl
push
daa
nop
dec
scas
ljmp
jg
outsb
in
jno
lahf
pop
sbb
xchg
pop
in
fprem1
mov
sbbl
ljmp
xor
int3
daa
lods
es
nop
outsb
pop
mov
adc
mov
jle
cmpsb
jo
popf
jge
mov
lock
addr16
jl
pop
mov
adc
xchg
fdiv
nop
inc
pop
dec
stos
xchg
xor
mov
mov
pusha
rcl
and
mov
icebp
jecxz
xor
mov
xchg
clc
out
jae
in
mov
jo
jno
stos
lret
int
aad
pop
daa
stos
addr16
or
ljmp
adc
idivb
dec
mov
sar
adc
lret
inc
and
cltd
jnp
push
jmp
cmp
imul
jb
add
dec
pop
xchg
pop
or
mov
mov
fs
imul
inc
addr16
test
cmpsb
jmp
pushf
or
push
xchg
cmp
add
lahf
shr
dec
dec
aaa
das
add
bnd
hlt
sbb
popf
xchg
mov
mov
xlat
pop
push
adc
sti
cs
fiadds
popa
ret
pop
mov
arpl
out
or
cmp
sbb
pop
mov
pop
pop
mov
add
sbb
mov
lret
test
push
inc
pushf
into
or
add
mov
and
testl
loop
repnz
sub
aaa
leave
push
jnp
or
lock
dec
les
and
bnd
pop
jbe
mov
and
add
fwait
xchg
add
jl
movsl
insb
add
sbb
pop
pop
sub
jmp
and
insl
mov
cmp
push
outsb
inc
test
out
cmp
jge
inc
in
add
lock
in
ljmp
mov
out
or
inc
mov
insl
ret
and
js
dec
rcrl
jne
push
cs
dec
xchg
leave
loop
out
das
movhlps
mov
outsl
dec
fidivrs
inc
sbb
push
add
sahf
adc
inc
xor
mov
movsl
dec
enter
mov
pop
mov
push
adcb
jbe
adc
pop
dec
xor
aam
adc
test
inc
mov
pop
push
pop
sub
xlat
mul
hlt
mov
fistl
ss
pop
and
movsl
sub
mov
hlt
rolb
mov
jmp
mov
cmpsl
das
test
rclb
push
pop
clc
dec
call
imul
loop
inc
popf
lret
mov
gs
lods
nop
loopne
push
sub
cmpb
jnp
in
mov
push
xchg
fstps
lret
adc
dec
loopne
subb
fstps
mov
and
adc
cmc
repz
scas
push
out
cs
lock
in
xchg
mov
movsb
dec
pop
imul
addr16
jl
data16
sub
in
std
dec
xor
adc
or
int3
in
movsb
add
and
dec
shrb
jecxz
pop
lcall
cwtl
lock
test
in
xlat
scas
lods
insl
enter
mov
jp
adc
ret
into
sbb
adc
rcrb
add
add
or
and
stos
adc
dec
ret
out
mov
push
fdivs
jb
push
aam
cmp
or
push
push
xor
ret
rorb
fwait
aad
out
jl
push
cmp
jns
scas
pop
ret
sbb
mov
pop
or
out
js
popa
mov
loopne
rcrb
hlt
repz
pop
inc
aaa
xlat
inc
fimull
add
dec
xchg
lods
mov
rorl
and
adc
mov
rcll
adc
cld
cmp
mov
xor
jle
push
push
scas
test
inc
sbb
je
dec
in
arpl
sbb
pop
and
nop
std
nop
push
out
std
rep
add
js
inc
inc
out
push
lea
sbb
inc
data16
stc
dec
cmp
stos
and
or
nop
in
xor
adc
or
and
add
jae
ficoms
push
jle
mov
mov
mov
aad
adc
cmp
test
add
jb
push
inc
dec
mov
fadds
gs
dec
mov
cmpsb
jge
jmp
es
test
daa
add
inc
out
pop
out
sbbl
adc
aaa
jnp
ljmp
xchg
les
or
lea
xor
or
fistpll
and
dec
jl
pop
add
cmpsb
call
int
sti
lds
add
sbb
pop
xor
jp
add
mov
sub
mov
mov
xchg
mov
addr16
adc
inc
or
mov
or
push
sub
out
ud1
outsb
xor
in
jbe
dec
and
insl
int3
popf
cmp
rolb
ret
outsl
push
inc
cltd
push
insl
or
and
pop
test
or
imul
std
loope
insl
add
inc
addl
mov
cmp
mov
sbb
fstl
lods
xor
adc
push
xor
jnp
xor
sub
sbb
imul
jns
and
pop
xchg
and
mov
out
push
pop
xchg
sub
nop
push
ljmp
iret
sub
outsl
and
dec
and
cli
mov
mov
outsb
adc
hlt
or
push
jp
and
push
push
cli
lock
filds
out
xchg
pop
adc
xchg
popf
xor
out
dec
pop
andl
int
xchg
jp
xor
add
mov
outsb
mov
dec
rcrl
push
cmp
out
mov
adc
add
cmp
jp
out
shll
shrb
pushf
push
mov
lret
adc
xchg
testb
sbb
pop
daa
push
insl
mov
jecxz
mov
jg
aam
mov
pop
lret
mov
or
rcrl
movl
ljmp
inc
sbb
jmp
cmp
data16
mov
mov
pop
fsubl
testb
mov
shr
push
dec
imul
mov
jae
inc
rcrl
fs
out
push
pop
cwtl
enter
fdivrs
add
inc
inc
mov
addb
jne
pop
daa
push
xor
jb
in
and
sub
stos
sub
test
adc
lahf
fildl
addb
ja
jo
cmpsb
cli
jmp
push
push
xchg
std
dec
jp
jge
dec
addl
dec
mov
sbb
sbb
fdivl
insl
into
sbb
sub
pop
shrl
movsb
gs
mov
hlt
dec
push
les
push
std
mov
mov
int3
in
sub
fimuls
lahf
pop
sub
cmp
bound
adc
scas
xor
js
mov
mov
stos
sbbl
push
hlt
mov
pushl
xlat
xchg
push
pop
mov
pop
and
adc
subb
rcl
popf
push
sub
mov
and
outsl
mov
hlt
xchg
adc
mov
aad
lret
sbb
mov
fisttpl
mov
repz
loop
insl
fcomip
test
incb
or
or
fs
mov
mov
data16
and
xor
sahf
lea
notl
and
and
jp
and
lea
icebp
xchg
mov
repnz
jg
test
inc
jnp
add
cmp
jp
ja
pop
sbb
shrl
data16
xchg
pushf
adc
ret
negl
cmc
xchg
add
movsb
mov
imul
adc
dec
leave
loopne
xor
fisubrs
daa
shlb
add
jns
cmp
mov
ret
outsl
test
cmp
jns
add
pop
leave
or
cwtl
push
adc
decb
jl
shl
jo
sub
ss
test
mov
jo
add
mov
cmp
jnp
push
mov
push
test
je
mov
mov
mov
sbbb
inc
push
jno
movsb
cltd
mov
inc
roll
lods
iretw
mov
mov
mov
pop
cwtl
sarl
adc
adc
add
jne
jge
stos
mov
mov
lods
in
cwtl
adc
push
into
inc
in
inc
jp
rcrl
dec
cmp
dec
in
aad
fldl
sbb
lds
ffree
cli
cmpsl
std
push
cmpsb
xchg
mov
mov
xlat
sahf
pop
sbb
leave
adc
mov
pop
jnp
rcrb
and
and
dec
js
mov
mov
repnz
int3
xor
push
inc
ficoms
fcmovbe
and
icebp
mov
clc
into
out
orl
inc
mov
mov
cmp
outsb
mov
xchg
lods
xor
or
sbb
push
mov
mov
mov
inc
shl
cltd
sarb
addl
inc
sbb
dec
jns
lahf
dec
inc
fs
sbb
push
dec
mov
cwtl
sub
rcll
call
les
sarb
jge
xor
daa
inc
std
push
pop
fstpt
lds
imul
push
data16
addr16
dec
add
dec
in
inc
out
push
mov
outsl
arpl
xchg
sbb
mov
dec
sahf
psrad
mov
adc
stos
pop
mov
mov
outsb
loop
and
sbbl
sar
sub
int3
scas
xchg
int
cmp
notb
sbbb
repnz
stos
insb
loop
lea
ds
cmpsb
lret
ja
and
int
nop
sub
push
mov
dec
out
mov
dec
out
or
es
push
dec
inc
mov
or
mov
adc
mov
jns,pt
cmp
xchg
loopne
push
mov
cmc
loope
jmp
add
cmpsl
xchg
ss
cmpsl
add
insb
add
ret
dec
in
sbb
in
test
stc
pop
insb
jo
pop
repz
mov
sub
jnp
ret
leave
pop
repz
repz
push
sub
insl
add
and
sarl
mov
iret
mov
int3
sub
lock
mov
js
popf
lods
pop
pop
sbb
jnp
ret
sbb
adc
out
stc
mov
mov
idivb
aas
push
test
sti
sbb
jae
js
sbb
lahf
loop
pop
xor
in
xor
cltd
pop
movb
pop
dec
test
cmp
adc
gs
ja
adc
push
add
sbb
mov
or
mov
imul
rorl
mov
inc
dec
add
jmp
xchg
jmp
test
or
movsl
js
and
pop
int
push
or
cmp
arpl
inc
sbb
jns
aas
test
mov
imul
and
adc
rorb
out
sti
shlb
mov
outsl
orl
sti
scas
shll
aas
pop
es
iret
shrb
int3
mov
push
mov
jno
pop
xchg
lock
cwtl
push
add
frstor
xchg
lea
cli
xor
sbb
or
movsb
adcl
insl
xor
imul
mov
lret
or
jecxz
jp
nop
mov
and
mov
cmpsl
lea
loopne
and
jg
cmp
push
add
jnp
in
mov
fwait
aaa
sahf
sub
gs
cltd
addr16
cld
and
xchg
popa
outsb
rcrb
fistpl
sti
out
inc
xchg
test
inc
lahf
stc
adc
orl
jl
inc
popf
jne
aad
sti
cmp
in
inc
or
pop
mov
xor
pop
cld
std
cmp
mov
pop
outsl
rcr
add
mov
and
arpl
hlt
cld
mov
or
inc
push
dec
xchg
shll
je
xor
lds
ret
sub
je
rol
pop
pop
sub
fwait
xor
fimuls
xor
fmul
xchg
mov
mov
xchg
imul
jnp
jo
jno
iret
dec
je
mov
push
sbb
and
scas
outsb
xchg
in
pushf
fs
call
mov
pop
scas
sub
xor
mov
icebp
push
add
sahf
inc
mov
push
fbld
mov
or
jmp
xchg
dec
or
movsb
loopne
xchg
enter
ret
cmc
popa
out
pushf
or
enter
mov
dec
repz
push
je
sarl
gs
lret
mov
adc
ret
test
aas
jno
and
repz
in
ljmp
repz
add
ror
mov
negb
mov
pop
cs
push
push
pop
xchg
mov
pop
jnp
je
stc
jg
insl
inc
lret
mov
insb
sbb
mov
push
sahf
pop
add
cmp
mov
shll
inc
xorb
dec
dec
push
xchg
pop
add
loopne
jp
mov
xor
mov
mov
clc
sbb
fisubs
pop
insb
ret
imul
rcll
inc
pop
cmpsl
lret
popa
adc
push
add
cmp
fidivrs
ds
and
in
aaa
int
sub
sub
xor
lea
sbb
and
mov
or
test
lret
inc
ljmp
movsb
jg
cmp
xchg
arpl
fwait
js
xor
inc
mov
sbb
lea
mov
inc
inc
hlt
int
mov
push
inc
pop
es
xchg
gs
add
lret
mov
adc
adc
imul
neg
movsl
inc
movsl
mov
mov
dec
jge
inc
pop
push
outsl
mov
out
push
mov
popa
hlt
and
jmp
xlat
mov
cmp
xchg
dec
int
jp
lock
jo
ficoms
fidivrl
and
add
pop
daa
fadds
sbb
cmp
cli
into
push
outsb
adcb
imul
enter
cltd
jb
jbe
shrb
loop
inc
dec
and
dec
imul
push
jno
imull
dec
dec
push
dec
add
mov
xchg
cld
daa
test
xchg
push
cld
dec
push
stc
enter
cltd
pop
std
clc
jp
pop
hlt
xor
add
addb
fwait
ss
cli
orl
je
pop
ljmp
leave
pop
int
xor
push
pop
mov
or
add
jns
pop
sbb
ret
xchg
les
jmp
add
nop
aas
push
sbb
fdiv
cmp
dec
cli
inc
inc
add
dec
mov
lret
mov
mov
fadds
clc
jno
xor
scas
dec
push
shll
dec
int3
push
xorl
inc
push
push
mov
and
sahf
xchg
in
push
xor
sti
pop
or
mov
mov
mov
mov
in
jb
popf
pop
xchg
mov
jne
mov
mov
pop
leavew
xchg
or
mov
lret
insl
or
in
jns
or
call
pop
fstpt
ss
into
adc
clc
mov
das
out
dec
rolb
push
ljmp
ret
ljmp
xor
xchg
cmp
loope
sbb
popf
or
sar
or
push
jno
add
jmp
cmp
dec
mov
and
es
dec
mov
into
adc
adc
mov
sub
fisttpll
aam
mov
or
fisttpll
sub
xchg
cmp
into
add
mov
stos
subl
pop
push
ja
rcl
dec
xchg
insl
inc
jae
and
add
xchg
push
cmpsb
loope
inc
xor
sub
cmp
shrb
arpl
inc
cli
jo
jae
das
sbbb
pusha
fmul
push
movsl
cwtl
test
imul
iret
mov
dec
pop
dec
repnz
call
cltd
int
mov
fnstenv
cli
aaa
jno
test
scas
sub
jl
jbe
shlb
test
adc
insl
iret
scas
mov
pop
mov
push
inc
ss
lahf
sub
cld
pop
fiaddl
out
out
xchg
add
pusha
mov
in
pop
lret
enter
repz
lahf
sahf
pushf
cmp
addr16
mov
fwait
xchg
sbb
or
or
mov
adc
arpl
adc
sbb
bound
pusha
inc
jmp
pop
mov
sahf
dec
push
ret
ja
jmp
lret
les
popa
ja
mov
sbb
bound
test
test
mul
mov
mov
fnstcw
mov
int
movsl
and
loop
inc
pop
pop
lret
mov
xchg
push
ds
xor
pop
inc
add
pop
clc
lret
cwtl
js
enter
out
stos
and
in
push
mov
and
xchg
hlt
and
daa
ss
lock
xor
mov
jle
xor
iret
inc
cmpsb
mov
in
and
add
sub
shlb
arpl
push
sbb
push
push
cmc
push
addb
pushf
fisubs
das
pop
and
enter
andl
lds
mov
push
mov
adc
vcmpss
movsb
xor
rclb
cmpsl
imul
adc
inc
pop
inc
mov
or
fwait
mov
jnp
popf
aaa
insb
cmp
push
cmpsl
push
dec
popf
adc
push
xor
sbb
cwtl
mov
das
lret
out
mov
mov
push
mov
jae
int
sbb
jmp
pusha
sbb
cmp
mov
xchg
or
and
xchg
les
jp
cmc
fwait
push
pop
fsub
jae
shr
push
adc
lret
mov
mov
and
dec
fiadds
cmp
dec
inc
aad
cltd
mov
mov
and
xor
loopne
or
out
push
outsl
cwtl
out
daa
lods
mov
call
lret
or
jmp
mov
in
movsb
jmp
iret
mov
mov
inc
adc
sbb
dec
loop
sbb
out
hlt
or
pop
mov
jb
jae
mov
cs
mov
pusha
test
insl
jne
inc
addr16
cmp
arpl
notb
push
cmp
xor
out
mov
pop
test
xchg
or
jae
leave
lahf
scas
shr
out
mov
inc
lods
pop
pushf
sub
into
jo
mov
mov
mov
push
lods
xor
add
out
mov
hlt
imul
imul
inc
jecxz
cmpl
pop
fisttpll
data16
pop
jno
popf
mov
cmpsl
push
fs
lahf
xor
shl
loop
ret
mov
xor
lretw
adc
lods
mov
jle
cs
push
jnp,pt
lods
lahf
cmpsb
xor
into
pushf
xchg
jecxz
mov
and
mov
lcall
sub
mov
pop
jg
xor
pop
js
xor
dec
nop
lods
jo
mov
das
and
loope
push
jno
jp
jne
jo
sarl
fsubrl
dec
or
inc
sbbb
lcall
fcmove
dec
ljmp
cltd
data16
cmp
out
ret
mov
or
push
lea
jbe
cmp
les
mov
jmp
call
mov
jle
push
out
jo
and
shl
ss
in
popf
fcmovbe
popa
or
dec
mov
movl
xchg
adc
cs
add
mov
lock
sbb
out
pusha
leave
jp
xchg
xor
jb
and
repz
mov
mov
cmp
pop
aad
addr16
mov
in
add
jmp
shlb
jp
ret
adc
sarb
bound
add
popa
push
out
jg
shl
cmp
lcall
sub
inc
mov
fimuls
xor
dec
subps
mov
and
mov
sahf
pop
cmp
sbb
xor
into
sbb
push
lret
ret
inc
int
ljmp
inc
mov
or
adc
in
mov
mov
mov
ljmp
push
and
xchg
mov
or
mov
repz
and
aad
sub
or
call
xorl
cld
sbb
test
js
pop
ror
pop
jmp
dec
mov
cmc
lds
jae
pop
mov
dec
gs
sub
pop
push
insl
jge
cli
xlat
in
dec
clc
jp
xchg
outsb
pop
dec
dec
cs
xchg
jo
sub
test
pop
or
mov
jl
push
push
iret
xchg
push
sbb
add
test
push
iret
pop
mov
outsl
add
insb
popa
mov
test
dec
test
shr
add
push
cwtl
out
sub
pop
mov
in
sub
sbbl
sbb
mov
mov
xchg
pop
popa
pop
in
popa
sbb
sub
je
pop
push
cld
outsb
cmp
addb
push
sbb
pop
repnz
sub
sub
cmp
arpl
std
adc
test
shrb
inc
mov
adc
fbstp
cmp
rorb
sbb
dec
pop
lock
roll
xor
xlat
pop
pop
and
mov
test
sub
int3
fwait
hlt
iret
das
insl
lret
or
jb
and
sub
cmpl
arpl
test
fiaddl
xor
daa
push
mov
add
das
pop
pop
enter
sub
push
hlt
adc
sub
push
pop
lahf
or
mov
push
xor
popa
mov
mov
js
out
xchg
or
and
jmp
loopne
jb
int3
jecxz
insl
mov
testl
mov
cmc
or
roll
loopne
fists
insl
popa
mov
leave
outsb
fxam
cmp
test
or
xchg
push
scas
pop
sbb
ficompl
es
jo
in
ja
mov
ljmp
adc
cmp
mov
idivb
inc
sbb
sarb
xchg
dec
pop
fcomi
out
mull
xor
jmp
push
xor
mov
pop
xor
ljmp
test
xor
push
push
loopne
cmp
xor
sbb
leave
ficompl
push
es
or
enter
shll
mov
das
mov
sbb
mov
pop
insl
push
push
pop
lods
gs
cmp
sub
lret
and
xor
push
das
inc
pop
hlt
ret
addr16
pop
or
bound
jne
mov
add
jmp
xor
pmuludq
mov
lret
lcall
adc
ja
les
shlb
and
pop
es
lods
lods
inc
mov
mov
sub
push
inc
mov
sti
jo
mov
pop
daa
int
mov
push
cmp
sub
jecxz
iret
jle
movl
cwtl
or
dec
pop
in
mov
pop
insb
fistpl
pop
mov
movl
clc
jmp
dec
fwait
push
cld
into
dec
adc
push
je
cli
jnp
jp
cltd
push
mov
mov
test
outsb
cmp
decb
inc
adc
ja
mov
adc
adc
pop
lods
adc
inc
shll
int
pop
push
sbb
sbb
mov
aaa
in
out
aad
int3
jns
movsl
pop
pop
into
pop
mov
add
arpl
stc
cmpsb
sbb
mov
sbb
rcll
jae
idivl
outsl
pop
pop
cmp
push
pop
xchg
les
sbb
push
scas
sahf
incb
mov
outsb
pusha
cmp
cmp
mov
jge
xchg
push
loopne
rol
test
jb
mov
in
sbb
loope
andb
cmp
mov
lock
inc
cvtpi2ps
jo
pushw
in
sti
inc
dec
nop
movsl
dec
mov
dec
and
pop
adc
orb
shrb
shrb
sub
jl
jne
shrb
flds
std
sub
or
fidivl
jp
imul
push
push
pop
and
push
les
xchg
es
push
fidivrs
cli
outsl
test
lods
arpl
mov
jae
inc
mov
sbb
outsb
adc
aam
mov
loope
push
mov
loopne
jmp
loopne
adc
inc
xor
out
push
scas
dec
mov
loop
mov
cmpsb
push
rcrl
jecxz
pop
sub
push
mov
adc
scas
lea
and
mov
jne
fscale
fcomip
push
mov
mul
inc
movsb
scas
pop
pop
push
cmp
call
bnd
imul
mov
xor
incb
nop
negb
cs
mov
outsl
sub
into
jae
test
mov
xchg
imul
ss
sub
addl
or
les
pushf
mov
inc
jmp
lcall
inc
and
mov
dec
mov
sbb
fcomp
test
movsl
repz
adc
jbe
mov
jmp
lods
popa
sbb
lds
xor
cwtl
push
rorb
call
inc
sub
in
dec
mov
inc
mov
cwtl
sub
bound
sub
jle
lock
adc
jle
lea
nop
inc
movsl
cmpl
scas
fcmovnu
cwtl
movsl
adc
inc
pop
negb
cmpl
les
cmp
or
mov
dec
cmp
shlb
xor
and
dec
je
sub
adc
lahf
mov
adc
das
je
out
cmp
repz
daa
xor
fucomi
jbe
jmp
stos
dec
popf
mov
pop
dec
mov
sub
ds
mov
and
fwait
inc
popa
jne
rorb
mov
xchg
push
jno
filds
cmc
jae
mov
int3
cwtl
popa
out
inc
aaa
pop
fnstenv
push
inc
lods
sub
pop
pop
lcall
negl
scas
dec
mov
test
stos
in
rclb
and
inc
xchg
push
je
xchg
or
or
inc
or
push
push
cmp
cmc
jbe
in
scas
arpl
sub
stos
mov
ljmp
insb
cmpsl
stos
mov
dec
outsb
outsb
add
push
cmpl
sbb
pop
add
sbb
outsb
and
test
push
dec
xor
stos
pop
lds
push
fwait
orl
sar
fmull
scas
in
hlt
jge
repnz
mov
mov
xor
out
or
push
add
ds
jmp
scas
sub
cltd
inc
and
loop
insb
cmpsb
dec
outsb
jns
jmp
dec
push
lods
jo
ljmp
aaa
mov
sbb
ja
mov
stc
inc
add
jle
xchg
mov
cltd
mov
or
cld
inc
xor
insb
add
add
fcmovnu
push
xchg
sbb
fwait
pop
sbb
add
fs
adc
adc
dec
clc
lcall
loopne
fldenv
xor
xchg
mov
rorb
decl
mov
sub
push
cli
lods
ds
sbb
mov
jns
xor
pop
mov
mov
lods
scas
dec
inc
xor
nop
aam
pop
sahf
and
hlt
jmp
sbbb
mov
ja
leave
lods
mov
jecxz
pop
scas
mov
cmp
jb
xchg
add
test
lds
je
mov
imul
adc
mov
scas
roll
pop
mov
dec
scas
jae
arpl
lea
pop
outsb
pusha
jne
repnz
xchg
stc
rcrb
mov
in
mov
adc
popf
pop
jne
add
in
sahf
testl
cltd
movsb
incl
push
movsl
mov
fimull
push
pop
xor
mov
ds
jbe
and
das
stc
clc
lods
sbb
cmc
jnp
push
cmp
pop
loop
add
xor
out
push
xor
negb
cmp
sbb
add
adc
inc
rorl
or
sahf
scas
mov
jnp
mov
pop
mov
js
data16
sbb
pop
hlt
pop
mov
lea
and
jecxz
shrb
stos
fcoml
pop
push
test
inc
ljmp
in
or
push
divl
movsb
dec
pop
mov
pusha
out
outsl
xor
shl
add
aas
sti
test
xchg
sub
jge
pop
mov
xchg
out
fwait
lods
mov
and
jo
setp
fildll
movsl
inc
or
or
fidivrs
and
fwait
cmpsl
dec
ljmp
aad
into
mov
mov
fs
mov
jo
iret
cmp
fidivrl
arpl
ds
decb
ss
lods
lret
jecxz
arpl
jmp
mov
xor
jle
stc
cmp
inc
lock
mov
push
inc
pop
movsl
test
nop
hlt
xchg
int3
push
adc
arpl
jle
ret
xchg
jb
add
mov
ljmp
inc
push
fidivl
out
and
pop
cmpsb
jmp
sti
aas
pop
or
mov
fsubl
dec
xor
cmpsl
repz
clc
fsub
pop
cmp
pop
dec
add
js
cmp
xchg
rclb
mov
neg
inc
iret
jg
mov
imul
adc
stos
adc
mov
int
jnp
xor
imul
pop
mov
fnstcw
xorl
mov
jns
stos
xchg
dec
sarl
aad
outsl
dec
jns
cmp
fbstp
dec
lds
adc
xchg
icebp
loopne
add
jl
inc
je
pop
push
mov
jle
pop
or
jo
dec
xchg
aas
aad
sbb
sbb
inc
jae
fdivr
call
push
sbb
rcrl
inc
sub
xchg
stos
xor
dec
jl
and
ds
adc
mov
sub
std
mov
adc
mov
rcrl
push
lret
or
in
push
dec
hlt
dec
imul
cmp
testl
popf
sub
or
cmc
and
jbe
add
iret
repz
inc
mov
lret
outsb
bound
adc
xchg
loopne
loop
sub
pop
movl
es
loop
out
dec
in
in
and
sub
iret
int
sbb
push
cmc
mov
adc
outsl
sub
mov
push
jmp
and
jge
push
test
int
sub
repnz
xor
incb
into
test
mov
mov
dec
shlb
mov
arpl
xchg
mov
popa
jmp
inc
popa
stos
mov
or
clc
mov
jno
xlat
hlt
dec
mov
xor
mov
push
cmp
mov
sbb
mov
xchg
jle
imul
push
out
lods
add
repnz
in
jnp
in
bnd
jmp
shl
mov
lods
push
mov
mov
pop
cmp
fildll
sub
push
repnz
into
add
mov
push
xchg
mov
sbb
or
and
jmp
shrl
jae
in
sub
add
mov
enter
cmpsb
loope
insl
jbe
inc
pop
mov
bound
add
mov
sub
pop
and
mov
stos
xor
lock
or
iret
or
mov
sbb
xlat
out
ds
std
icebp
mov
ljmp
aaa
mov
cmp
pop
inc
jge
xor
mov
sbbb
sbb
cmp
lahf
push
fcmovnu
mov
or
in
out
add
jmp
adc
xor
jnp
insb
loope
inc
mov
fmulp
lcall
xor
jns
pop
add
es
jmp
iret
ja
aaa
adc
das
mov
jbe
cmp
jae
push
jmp
jne
and
inc
pushf
dec
xorl
dec
lock
jne
pop
in
loope
testb
aaa
cmp
aam
mov
adc
inc
xchg
popf
and
fisttpll
clc
xor
add
daa
mov
jae
imul
adc
mov
inc
or
aas
pusha
imul
jne
cmpsb
sub
jecxz
adc
xchg
fwait
sarb
rcrl
fwait
xchg
xlat
cmp
dec
push
mov
enter
inc
dec
or
or
pop
and
in
push
mov
mov
shlb
lock
push
in
mov
fucomp
sub
mov
negl
stos
or
adc
pop
or
inc
cmpsl
sbb
cmp
pop
xor
shlb
enter
jmp
scas
mov
fwait
shlb
xchg
dec
inc
sub
push
stos
lahf
outsl
test
mov
loop
pop
pop
mov
xchg
sbb
xor
inc
int
popa
data16
mov
enter
in
das
mov
jle
bound
pushf
fsubl
cmp
cli
xchg
sub
sbb
push
inc
add
inc
ljmp
mov
loopne
lds
inc
mov
xchg
imul
jl
fldl2e
xchg
std
lret
mov
inc
dec
ja
fidivl
in
cltd
push
pop
mov
jbe
xchg
mov
inc
and
mov
fsts
test
add
mov
mov
push
mov
dec
das
pop
add
loop
mov
lea
rcll
xor
adc
test
add
dec
icebp
cmp
fisubrl
mov
in
xchg
and
mov
iret
mov
jo,pt
dec
fisttpll
cmc
shrl
xor
popf
pop
shr
push
mulb
aam
lcall
mov
out
stos
sbb
push
adc
dec
add
test
inc
sbbl
adc
test
dec
jnp
add
sarb
and
inc
imul
mov
es
int3
and
push
mov
nop
and
outsb
test
cmp
cmp
or
lret
dec
ja
sbb
daa
sahf
mov
add
push
or
enter
and
adc
stc
in
inc
mov
xor
xlat
mov
repnz
jmp
outsl
jmp
ret
pop
int3
mov
xchg
aas
addb
push
pop
pop
xchg
push
mov
rclb
into
rcrb
out
and
sbbl
jle
inc
aas
test
mov
test
repnz
push
pop
pusha
js
orl
lret
call
loopne
cmpsl
mov
mov
inc
fnstcw
repz
aas
insb
xor
js
jle
fisubrs
ret
loop
pop
inc
std
inc
cmp
mov
in
inc
and
dec
jle
and
xchg
inc
into
scas
xor
push
lret
out
insb
cld
pop
sub
jecxz
cltd
sbb
sub
bound
push
cmp
clc
sbb
std
pop
push
cmp
cli
dec
inc
jl
nop
mov
pop
sub
or
jbe
lods
mov
jns
mov
push
push
imul
pushf
gs
ds
test
cmp
mov
add
mov
loop
into
mov
dec
rcll
dec
lahf
leave
test
cmp
test
loop
mov
adc
sub
incl
xor
gs
adc
popa
fwait
jmp
imul
call
out
pop
dec
sbb
sub
and
mov
js
movsb
push
movsl
out
sub
mov
loopne
shll
jo
push
jecxz
and
cmp
inc
cmpl
movsl
mov
in
bound
xor
stos
les
inc
xor
loop
cmp
popa
shll
pop
mov
adc
leave
push
rclb
lret
pop
lret
jl
stos
jmp
fcmovnb
leave
or
inc
cmp
pusha
ja
lds
test
hlt
jo
add
ja
repz
jecxz
lcall
dec
js
cmp
push
mov
and
and
shrb
cmpsb
fnstsw
push
je
popa
cwtl
and
mov
or
jne
loopne
jnp
xchg
xchg
insb
add
sahf
and
jmp
ss
xlat
ret
hlt
aas
xchg
adc
and
stos
out
mov
cmc
loop
xchg
addb
shll
out
dec
cmpl
sbb
out
and
mov
fildll
xchg
push
lock
into
inc
mov
dec
insl
and
mov
and
stos
stos
push
xorl
icebp
push
jle
mov
imul
inc
andb
add
loop
dec
loopne
out
jae
jle
lcall
inc
in
fldln2
mov
movl
repnz
loopne
add
push
push
popf
mov
push
daa
rorl
or
fistpll
xchg
add
stos
shld
int
and
mov
idivb
lret
and
fcmovbe
inc
add
mov
xor
push
aas
adc
leave
insl
fwait
xchg
shrl
pop
rcrb
mov
cmp
add
and
mov
jmp
in
dec
test
or
push
pop
mov
std
out
cmp
aaa
shrl
pusha
andb
sub
mov
into
call
stc
xor
sbb
loopne
fdivp
xchg
jae
jns
cmp
pop
js
inc
inc
nop
insb
ficoms
popa
lea
lret
xor
push
cli
test
mov
aam
into
push
inc
ja
dec
paddb
jg
mov
cmp
fstl
test
push
mov
jl
outsl
clc
mov
xor
mov
ficoml
sub
xchg
aas
or
jbe
xchg
jno
daa
mov
mov
xchg
enter
xor
ror
bound
sahf
cmp
jmp
xchg
push
inc
lods
in
jo
aam
and
cmp
sub
ds
test
clc
mov
aam
es
js
push
pop
jle
pop
dec
adc
mov
xchg
push
mov
cmc
gs
imul
or
mov
mov
add
sbb
and
lcall
cltd
push
test
lret
loopne
cmp
mov
out
shlb
or
xchg
or
cmpsb
addr16
xchg
jno
fdivr
cmpsl
lret
mov
pop
pop
sbb
push
sub
sbbl
jno
mov
ds
cld
inc
pop
mov
movsl
xchg
enter
adc
cmp
mov
push
xor
mov
aam
mov
pop
pusha
jl
ret
sti
jp
sarb
outsl
iret
pop
sbb
pop
movsl
mov
test
data16
xchg
dec
pushf
cld
mov
sub
insb
sub
xor
jb
repz
insb
push
inc
stos
rolb
push
lods
fbstp
inc
inc
mov
sbbl
mov
sub
shll
out
pushf
dec
cmc
xchg
mov
xchg
and
push
rolb
shll
cmc
dec
test
icebp
leave
int3
pop
popa
arpl
push
inc
cld
movb
fs
out
loopne
mov
push
pusha
add
das
ret
and
sbb
test
inc
pop
fldt
lea
outsb
mov
push
mov
aaa
dec
push
mov
sub
out
test
jge
iret
mov
inc
cltd
or
mov
jle
out
ljmp
mov
cli
sub
fisubrl
loope
push
loopne
pop
int
cmp
push
fs
out
maxps
iret
dec
popf
vunpckhpd
xchg
subl
xchg
aad
mov
sbb
pop
adc
sub
jp
sbb
push
jecxz
cmp
jnp
loopne
push
add
jb
push
mov
icebp
scas
xchg
stc
sbb
cld
pushf
es
js
dec
xchg
sti
and
cmp
push
push
in
adcl
imull
ljmp
add
mov
cmc
sbb
sub
mov
sbb
push
stc
pop
pop
bound
ja
push
stc
cld
mov
sbb
repnz
mov
push
or
test
leave
mov
movsl
test
xchg
mov
jo
inc
insl
pop
sahf
ja
rcrb
rcr
loope
out
dec
popf
int3
xlat
jecxz
dec
fucomi
outsb
inc
dec
mov
push
dec
cmpsb
cmp
push
push
push
ret
xchg
or
dec
cmp
repz
mov
loop
and
ljmp
lds
pop
popa
dec
ss
lods
sub
repz
and
inc
daa
add
sub
icebp
ret
lods
and
repnz
xchg
xor
mov
gs
stos
inc
stc
ret
mov
pop
or
adc
shrl
sub
sbb
mov
xchg
sahf
mov
test
aad
pop
mov
enter
test
xchg
ds
and
sarl
leave
adc
push
outsb
mov
jl
int3
jge
mov
dec
daa
mov
mov
fsts
add
pop
or
and
lock
mov
mov
adc
mov
js
arpl
repnz
in
flds
sub
and
js
lret
divl
lret
inc
cld
addr16
das
push
iret
add
push
pop
cld
mov
data16
aad
jae
lods
and
dec
cmpsl
jbe
mov
fdivrs
or
sbb
jb
sbb
inc
jo
nop
jno
icebp
push
sub
out
xlat
mov
lcall
dec
sub
mov
xlat
pop
cmp
rolb
pop
lods
or
call
icebp
sub
mov
mov
repz
sbb
leave
outsb
cli
imul
mov
add
icebp
dec
push
xchg
lds
push
or
clc
cltd
bound
cltd
cld
dec
movsb
sub
divb
cltd
sbb
pop
icebp
jns
divb
or
pop
mov
scas
inc
cwtl
xchg
adc
pop
aaa
bound
test
fwait
loope
ds
lret
movsb
mov
dec
add
pop
add
loopne
pop
vpsadbw
mov
push
xchg
and
jmp
cld
mov
inc
push
inc
pop
pushf
mov
push
inc
cmpsl
lret
mov
add
xor
add
jns
push
push
jmp
lods
pop
insb
aam
clc
adc
out
jb
enter
mov
icebp
mov
jns
lret
add
scas
pop
sarb
xor
notl
cmc
cli
sub
dec
movsl
aad
and
pop
xlat
icebp
add
dec
cld
cmc
jne
push
out
adc
je
adc
sub
and
test
lcall
pop
mov
jg
les
test
inc
dec
scas
out
jns
jle
mov
fst
rclb
mov
dec
int
scas
scas
jl
xor
xchg
lds
sub
movsl
stos
out
movsb
xor
stc
and
loope
inc
scas
xor
push
nop
adc
pop
cmpsl
shlb
data16
stos
push
mov
std
mov
xchg
jns
sahf
fmuls
cmpsl
stos
inc
out
pop
int3
inc
shlb
cmc
lock
push
sub
xor
lret
or
mov
mov
cmpsb
or
cmp
cld
je
add
les
pop
fs
xchg
aaa
pop
adc
dec
xchg
cmp
mov
jnp
and
aam
inc
addl
cmp
rorb
test
std
in
hlt
stos
lea
sub
stos
iret
popf
and
inc
loop
xor
pop
sub
mov
lods
jo
add
insl
inc
cmp
lahf
rclb
or
mov
les
je
mov
lds
in
sbb
or
fcmovb
jge
push
cmc
bound
dec
add
inc
movsl
test
cli
or
cmpsl
push
pop
loopne
subl
push
adc
cli
sbb
add
orb
repnz
xchg
push
or
or
clc
cli
sub
test
xlat
cmp
xlat
lret
fprem
inc
mov
adc
rorl
lret
jge
dec
push
fisubrl
push
je
test
adc
inc
cmp
mov
inc
dec
cmp
addr16
inc
and
jo
aad
aas
push
filds
lock
xor
inc
sbbl
mov
pop
std
loop
push
push
sub
repz
jnp
mov
out
mov
jmp
mov
pushf
mov
and
call
fsubr
popa
shll
in
adc
ficoml
mov
push
mov
sbb
mov
jae
push
stos
or
loopne
leave
mov
js
test
or
es
inc
jno
orl
or
jnp
xchg
fcmovbe
cmp
xchg
add
mov
mov
jnp
sub
xchg
icebp
mov
fiaddl
lds
pop
outsl
push
inc
push
adc
mov
jb
jle
pmulhuw
insb
aaa
out
hlt
mov
test
ljmp
mov
pop
roll
sub
push
and
fs
push
xor
jl
outsb
lock
mov
push
cmp
jnp
gs
loopw
call
jl
jl
lcall
adc
jge
cmp
xchg
or
jecxz
jne
add
add
mov
mov
inc
and
push
mov
lret
mov
jg
mov
lods
push
push
add
jle
test
mov
cld
mov
pushf
xor
into
xlat
mov
dec
push
or
cwtl
ficomps
push
jae
push
xor
add
aaa
shlb
sbb
int
lret
xchg
cmp
dec
jg
jp
stc
dec
pop
xor
fidivs
repz
lcall
pop
and
aad
push
scas
lret
or
sub
mov
fs
loope
repz
cmpsl
xor
adc
inc
sub
jge
lea
jp
out
fisttps
nop
int3
sub
sbb
mov
ret
nop
xchg
hlt
xor
inc
daa
mov
cs
jns
lods
out
call
mov
jnp
sbb
pop
mov
pop
hlt
sbb
shl
mov
dec
add
inc
imul
in
mov
mov
jle
pop
mov
mov
outsl
mov
pop
pusha
mov
ljmp
jnp
pop
jecxz
sbb
sub
ds
xor
insl
scas
aaa
jge
ljmp
sbb
mov
jbe
push
inc
pop
mov
lahf
adc
pusha
out
in
dec
fdivl
xchg
cmc
scas
jmp
fsubl
jge
pop
enter
xor
sub
dec
stos
adc
scas
push
or
fsubs
sbb
dec
test
out
mov
leave
stos
push
pusha
sub
cld
push
stc
adc
mov
xchg
pusha
pop
pop
mov
mov
in
movl
pop
adc
and
mov
pop
shr
aaa
sarl
outsl
cli
out
loope
adc
sti
sahf
mov
pop
and
inc
add
jg
ja
imul
test
in
call
shll
xor
or
out
dec
lods
push
pusha
movsl
pop
clc
loope
insl
mov
add
push
sub
sub
loope
aam
ss
addr16
cmp
subl
lret
js
ret
dec
mov
push
cli
cmp
jecxz
sub
repnz
add
push
lcall
stc
xchg
repnz
in
ljmp
in
test
pop
je
mov
enter
ljmp
and
jmp
jo
dec
inc
pop
and
outsb
add
push
shr
add
aas
sub
mov
xchg
inc
inc
jnp
jne
cmp
les
movsl
push
popf
imul
cmp
mov
mov
sbb
add
mov
mov
pop
or
or
out
repnz
cmpb
lods
inc
sub
and
mov
xchg
jle
inc
int3
sti
fildl
dec
sbb
loopne
sub
imul
out
xor
movsb
sub
cltd
xchg
add
repz
adc
enter
adcb
push
xchg
rcrl
rclb
shll
movsl
divb
fisttps
scas
dec
ret
sub
lock
aaa
adc
cmp
xchg
mov
int3
shrb
rcrl
push
test
mov
js
pop
insb
sbb
dec
lea
fdivr
lcall
xor
imulb
loope
aaa
mov
pop
or
loopne
mov
out
mov
pop
jbe
mov
mov
fbld
sbb
fs
ret
sbb
test
and
cmp
call
loope
int3
lret
movsl
out
pop
jae
push
mov
cli
dec
xchg
and
ljmp
pop
leave
and
out
jne
jae
xchg
test
jle
loope
add
in
out
aas
push
aas
add
dec
cwtl
fs
adc
cli
and
push
outsb
aas
cmpsb
mov
inc
fnstcw
test
mov
jno
cmp
push
popa
mov
dec
jg
repz
sbb
pop
shlb
cmp
jnp
ljmp
cmp
stos
inc
cmp
fcmovne
ret
inc
jp
fwait
scas
test
sub
xor
inc
pop
imul
fnstcw
jne
inc
lock
push
inc
dec
mov
mov
jg
and
push
inc
jae
arpl
addb
lods
jp
movsb
call
mov
pop
call
jmp
pop
and
dec
or
adc
aam
adcb
loop
inc
mov
sbb
test
jp
in
inc
adc
and
leave
dec
xlat
aas
xlat
nop
sub
out
pop
mov
cmp
fdiv
xchg
add
sub
aas
pop
dec
pop
arpl
xor
arpl
rcrl
mov
and
jae
cvttps2pi
fldcw
push
sbb
loope
gs
insl
stos
cmpsb
scas
jg
rcrl
int3
adcl
adc
leave
lock
das
add
andb
or
jae
imul
xorl
ljmp
pop
cmpsl
fisttps
leave
test
leave
xlat
jne
je
push
mov
pop
gs
cmp
into
and
mov
cmpsl
push
js
es
inc
jg
lock
inc
xchg
xor
push
int3
fisttpll
imul
stos
push
pop
xlat
ljmp
mov
imull
scas
sub
add
adc
jl
lret
xor
inc
jle
loop
daa
das
rcrb
and
sub
std
jnp
xchg
fprem1
gs
pop
add
daa
jg
jbe
sbb
lahf
fs
adcl
cmpsb
mov
ret
imul
ret
iret
push
pop
and
roll
mov
push
sar
adc
mov
ja
mov
lahf
mov
mov
dec
les
add
and
pusha
push
xor
fidivrs
frstor
dec
inc
push
pop
int
mov
mov
or
push
jle
stos
lret
nop
push
xorl
aas
shlb
in
mov
mov
pushf
inc
push
xor
mov
adcl
jmp
cmpsb
into
fisttps
cli
sbb
scas
pop
frstor
mov
inc
in
ror
sbb
out
mov
sub
nop
push
jne
pop
dec
jg
movsb
mov
lcall
repnz
mov
jg
hlt
jp
mov
cmp
or
adcl
inc
into
data16
lea
loope
push
xor
fisttps
insb
bndldx
cmc
sbb
cmc
add
icebp
cs
dec
xchg
pop
scas
lods
add
add
jl
push
push
sub
cwtl
and
lret
mov
jo
imull
jns
add
cwtl
mov
mov
fwait
mov
pop
adc
xchg
cmp
cmpl
push
adc
jne
out
push
out
pminsw
xchg
cwtl
test
sbb
insl
cmp
movb
enter
ret
js
lds
jne
xchg
cmp
mov
or
pop
in
mov
jne
test
mov
dec
hlt
adc
or
aam
lock
jg
fcomp
in
adc
xor
iret
push
dec
mov
pop
cmpsl
out
bound
or
stos
and
les
das
jns
loop
shrl
aas
rcll
das
or
into
jl,pt
add
and
xor
xchg
int3
fsubp
insl
mov
lds
sbb
addb
push
sbb
add
pop
sub
in
repz
mov
call
loope
scas
pop
lods
inc
mov
dec
cmpsb
or
loop
lea
adc
inc
xchg
fnstenv
dec
jg
lret
shll
dec
mov
fstp
xchg
jb
jecxz
mov
xchg
test
xchg
loopne
push
pop
in
xor
stc
cld
jno
fld
rcrb
sbb
mov
lea
jl
fnstsw
loop
xchg
in
sub
out
fsubl
dec
std
outsl
sub
inc
scas
cli
pop
fadd
outsb
mov
jmp
pop
mov
dec
mov
adc
push
cld
jae
sbb
iret
test
gs
cwtl
jb
xor
stos
adc
inc
aam
imul
cmpsb
lret
xor
ja
stc
push
mov
mov
dec
cmp
cmp
scas
jo
dec
cmp
jl
sbb
fdivrl
add
push
stos
into
je
sub
cld
jge
jle
cltd
addr16
dec
lahf
push
or
pushf
mov
cli
jbe
stc
push
jae
push
adc
scas
int
or
or
pop
lea
inc
cmp
negb
mov
mov
add
daa
fsubl
push
bswap
xchg
jnp
mov
imulb
sbb
adc
loop
ss
outsl
adc
cmp
popa
jmp
mov
jge
mov
out
or
mov
adc
bound
cmpsl
aaa
fbstp
icebp
mov
jne
les
int
push
pushf
push
pop
dec
repnz
cltd
mov
push
jp
adc
adc
mov
and
pop
in
mov
das
and
mov
lahf
dec
setno
jg
mull
cmpl
cltd
sbb
jo
mov
in
lahf
and
cmp
adc
jns
ret
cmp
or
inc
jns
movsb
xor
sub
mov
out
xchg
popl
jle
mov
pushf
loopne
sub
jae
fsubr
shl
in
fbstp
jp
cld
fdivr
pop
das
add
movsb
and
cmp
mov
xor
imul
inc
outsb
out
jnp
pushf
or
add
and
mov
es
ret
sbb
or
mov
jb
mov
pushf
mov
mov
xor
movsl
mov
lret
popa
sahf
dec
cmp
idivl
adc
jbe
into
fcompl
inc
push
andl
sub
inc
sbb
push
test
sbb
bound
pop
mov
cmc
inc
lds
or
mov
pop
js
adc
dec
test
mov
test
sbb
mov
jne
push
dec
xor
das
xor
push
int3
cmp
in
ds
dec
or
mov
dec
ja
push
dec
movsb
fdivrl
dec
cmpl
test
lret
jle
dec
dec
pop
mov
sbb
mov
adc
jg
daa
repz
xor
pop
je
repz
inc
fisubl
insl
loope
repz
arpl
scas
call
imul
popl
cmp
pop
push
in
cld
enter
jp
xor
jecxz
andl
call
iret
jbe
les
xor
sub
pushf
sbb
mov
dec
fcoml
repz
fldcw
cltd
inc
add
pop
xor
movsb
popf
jne
out
and
ss
adc
int
leave
xlat
shlb
cmc
pop
cwtl
dec
mov
popf
xor
sbb
pop
jbe
cmpsl
fdiv
out
in
jge
xchg
test
or
ljmp
xlat
imul
xor
sub
outsl
pop
test
sbb
jle
push
push
call
lret
sub
adc
and
push
out
mov
mov
cmp
movsbl
pop
dec
cmp
mov
add
push
lock
mov
repnz
insb
daa
pop
cltd
mov
cltd
xchg
add
ret
push
jne
test
in
subb
jae
notl
push
test
in
loope
mov
fwait
jp
and
xor
sbb
repnz
movsl
mov
sub
xchg
push
scas
or
xchg
or
cmc
lret
adc
xchg
subl
in
pop
pop
xchg
xor
adc
sub
test
int
sbb
jnp
and
pslld
mov
out
add
pop
ljmp
sbb
out
xchg
pusha
pop
int
pop
stos
push
cli
sti
push
test
inc
inc
rcrl
inc
cwtl
cmpsb
cltd
cs
pop
adc
sti
mov
sub
cmpl
mov
enter
sbb
repz
mov
mov
movsl
sub
loop
xchg
push
mov
fdivrs
mov
out
sti
mov
cltd
js
add
bound
outsl
or
sub
ret
push
and
mov
stc
xchg
stos
dec
inc
adc
imul
xchg
fucomi
loope
daa
jo
stos
ficomps
fbld
call
repz
add
das
rcrl
xchg
shlb
sbbb
popf
imul
pusha
aaa
cmp
aas
outsb
clc
pop
and
fs
jg
dec
cmpb
inc
fwait
add
xchg
fs
inc
les
pushw
loop
jge
mov
mov
lods
stos
loopne
jnp
mov
clc
leave
jl
lods
or
jmp
pop
mov
xor
and
into
nop
mov
push
push
push
out
scas
stc
xor
addb
xchg
mov
outsl
lcall
stos
in
dec
nop
xchg
idiv
rcr
push
push
scas
arpl
aad
and
std
sub
sub
ret
inc
pop
add
add
mov
adc
js
pushf
mov
xor
pop
jmp
imul
push
mov
adc
push
pop
pop
fnstenv
nop
clc
pop
mov
lret
xchg
repz
fwait
mov
ljmp
iret
or
lcall
lcall
xchg
xor
add
sti
imul
lcall
out
pop
add
sub
imul
sbb
xor
aaa
push
sub
sbb
arpl
cmp
lea
sub
cmp
dec
xor
mov
int3
sbb
mov
push
enter
fimuls
and
in
sub
inc
push
out
gs
test
test
mov
cmpb
cmpsb
push
mov
push
iret
icebp
inc
mov
dec
or
push
adc
adc
je
xchg
fdivrs
std
or
mov
in
inc
pop
lock
popa
fnstsw
stc
ss
dec
jl
push
xchg
cmp
int
xor
dec
not
sti
inc
in
sbbl
mov
fnstenv
imul
in
cmp
add
dec
cmp
push
in
out
negb
dec
xor
push
rorb
push
shl
mov
movsl
lea
jmp
pop
ud0
xchg
popa
sub
cmp
enter
cwtl
inc
lods
out
sbb
repz
mov
mov
nop
mov
sbb
ret
push
fstpt
push
jno
dec
jmp
xor
inc
pop
neg
cld
lcall
xchg
das
adc
cmp
lcall
pop
out
je
out
cwtl
pop
mov
test
push
inc
or
pop
jno
mov
lds
pop
adc
dec
syscall
cmc
imul
push
cmpsb
mov
shrb
mov
push
pop
loope
sbb
clc
inc
mov
cmp
cltd
pop
inc
clc
loopne
add
stos
push
xchg
mov
loopne
test
lock
mov
fimull
mov
mov
cmpsb
ds
rcrl
lret
shrl
nop
cmp
in
jae
mov
in
addr16
adc
xlat
xchg
add
mov
and
xlat
arpl
mov
cmpsb
push
xchg
int
cmp
jns
push
leave
pop
sub
add
lock
fs
popa
sub
sti
lods
out
stos
adc
cmp
scas
jnp
dec
xor
jae
jle
xchg
xchg
jmp
mov
lds
mov
mov
mov
mov
sti
sahf
lret
push
ficompl
int3
jg
jecxz
add
cs
jns
mov
and
nop
push
jns
mov
jno
and
ret
adc
lods
sbb
xor
shr
pop
mov
movsl
js
cld
pop
outsb
inc
add
inc
lahf
xor
adc
xchg
sahf
mov
mov
xchg
leave
mov
push
repnz
fidivs
dec
rol
sub
mov
mov
shl
and
cmp
ja
xchg
inc
cmp
popa
sub
mov
loope
aas
mov
into
sti
pop
inc
subl
jecxz
pop
sbb
lcall
and
jo
insl
add
and
and
shll
iret
mov
cmpsl
in
aam
loope
imul
stos
imul
jno
jne
iret
in
push
pop
popa
popf
jne
dec
jns
repz
xor
jle
std
push
int3
mov
int
cmp
jle
push
movsl
scas
cmp
add
lcall
mov
pushf
and
cmp
jno
movsl
and
fists
mov
jmp
mov
sbb
sub
cld
push
stos
mov
mov
scas
mov
or
std
jne
inc
in
dec
imul
mov
inc
and
int
cwtl
xchg
fwait
insb
stc
mov
aaa
std
push
roll
repz
xchg
imul
add
pop
aam
and
mov
xchg
je
push
push
or
dec
pop
inc
push
adc
sub
inc
pop
dec
sbb
lret
gs
adcb
push
adc
adcb
and
push
out
int3
adc
inc
pop
repnz
icebp
leave
add
call
mov
push
into
pop
dec
pop
cmc
inc
in
movsb
int
add
js
lds
mov
xor
mov
lahf
jnp
repz
nop
inc
test
cmp
and
das
lds
and
xchg
idivb
jle
xchg
xchg
andl
pop
cs
cmp
int
test
xchg
arpl
popl
iret
lock
xor
stc
das
or
popa
ret
cmp
lock
mov
out
stos
ret
ja
lahf
ret
and
mov
dec
inc
sbb
and
das
jo
dec
jp
push
adc
bound
adc
dec
add
xlat
cli
xor
jno
aas
xchg
stc
je
xchg
sbb
dec
jmp
imul
cs
xor
dec
je
adc
mov
cmpb
scas
test
cmp
dec
mov
mov
loop
arpl
ljmp
mov
xor
pop
xchg
mov
ja
sbbl
sub
sbb
xchg
xchg
out
pop
mov
xchg
roll
lods
sbb
aad
popf
dec
shrl
cmp
mov
gs
outsl
fdivrs
and
xchg
dec
dec
pusha
stos
jl
sub
enter
arpl
repz
ja
lods
pop
push
mov
stos
fisubrs
push
mov
inc
cmc
push
das
and
and
mov
jns
stos
pop
mov
imul
lcall
negb
or
je
or
dec
jmp
ret
cmp
and
arpl
cli
xor
movsl
idivl
inc
jo
jg
adc
je
loope
and
jg
mov
in
cltd
jecxz
mov
sbb
cli
push
ficoml
push
pop
jl
loop
outsb
mov
mov
adc
push
leave
cmpsb
ja
pop
mov
cli
int
decb
stos
shl
mov
mov
call
jle
pop
icebp
mov
jmp
sahf
or
mov
sub
ds
xchg
lret
outsb
mov
jno
jecxz
in
test
lret
pop
in
sbb
mov
add
pop
stos
ja
add
in
sarb
aas
dec
xchg
cmovge
popa
scas
jns
insl
or
enter
and
rorl
popf
and
je
mov
jle
ljmp
pop
push
movsl
js
mov
mov
cs
push
call
jmp
jl
fistpll
push
inc
mov
fs
repnz
insb
xchg
movsb
cmp
push
adc
pop
or
test
xor
and
pop
cld
inc
xchg
leave
lock
cmpb
xlat
aaa
in
ret
das
sbb
mov
pop
test
sarb
jns
flds
xchg
push
adc
lods
sub
xchg
jne
push
cltd
fcompl
cld
jbe
mov
lds
gs
ret
aam
in
pushf
pop
mov
and
add
xor
cmp
test
sub
add
or
sbb
lahf
push
xor
pop
xchg
inc
call
test
xor
add
xchg
push
inc
mov
sub
loop
das
into
push
push
int3
add
outsb
add
popa
mov
adc
clc
sub
orb
loop
mov
lods
clc
pop
imul
pop
mov
es
xchg
movsb
xor
mov
mov
rorb
dec
in
test
push
int3
mov
aam
hlt
pop
push
das
and
or
imul
loope
jo
mov
fldl2e
adc
cli
inc
xchg
push
fldl
adc
bnd
inc
ret
clc
add
fwait
roll
dec
mov
dec
push
jb
sub
test
xchg
jmp
movsl
cmp
inc
sub
or
dec
clc
adc
xor
cmp
fs
or
inc
aad
insb
js
lret
inc
out
ficompl
push
sub
jle
bound
inc
or
mov
test
xlat
out
lods
pcmpgtw
std
jb
dec
and
int3
cltd
jno
inc
out
jae
dec
rclb
or
dec
sub
xchg
clc
les
pop
aam
fists
outsb
adc
pop
and
sahf
divb
cmp
jl
inc
aas
cltd
xchg
mov
js
fwait
mov
enter
mov
sub
sbb
pavgw
imul
mov
and
push
fstps
or
imul
cli
in
insb
cmc
aam
add
xor
lahf
es
mov
and
xor
dec
loope
fistps
xchg
or
movb
mov
loope
dec
roll
int
push
nop
fdivr
fcmovnb
cmc
sbb
sbb
push
stos
in
sysenter
movsb
xchg
mov
movsl
xchg
pop
pushf
or
rcl
imul
int3
into
push
xchg
sub
sahf
lods
out
pop
adc
hlt
xlat
xlat
in
xchg
sub
push
lock
bound
lcall
sbb
pop
xor
mov
mov
clc
scas
mov
in
mov
jg
pop
pop
push
imul
cmp
outsl
dec
arpl
add
sub
pop
sbb
push
arpl
cmpb
xchg
adc
stc
into
idivl
xchg
aad
int3
push
loopne
fs
cltd
mov
andb
sti
sarb
pop
fnsave
cmp
adc
lods
and
daa
loop
mov
lods
push
inc
or
lret
clc
xchg
fidivs
adc
out
cmc
pop
mov
addr16
stos
fwait
insb
and
cmp
sub
dec
and
dec
push
rcll
ss
sub
jmp
mov
arpl
mov
or
jp
adcb
jp
add
mov
fisubrl
push
cmpsb
int3
cs
js
sub
cld
aam
jmp
loop
in
pop
std
xchg
inc
in
loop
movsb
jae
mov
jns
xor
sbb
in
inc
jns
mov
or
mov
fadd
andl
push
sbb
jecxz
mov
push
ljmp
ret
cwtl
xchg
sub
jecxz
fs
out
jnp
sub
pop
nop
cwtl
cltd
or
lret
js
or
sbbl
or
out
sahf
sub
js,pt
add
ret
xchg
loopne
lret
je
push
sbb
pop
lcall
popa
divl
inc
push
mov
cwtl
cmp
pop
sti
mov
mov
add
jno
insl
and
xlat
push
push
jg
out
mov
sbb
push
lock
pop
js
sub
or
lret
je
dec
mov
pop
xchg
sbb
push
jbe
push
pop
and
pushf
and
pop
and
out
and
int
or
cmp
mov
inc
out
sarb
xlat
sarb
add
sbb
fstl
mov
popa
jg
mov
das
nop
cmpl
mov
add
adc
js
imul
dec
and
sbb
movsb
mov
pop
push
jle
adc
dec
pop
xor
xor
leave
or
icebp
xchg
ret
pop
sbb
test
repz
jns
adc
dec
icebp
fists
arpl
add
sbb
outsl
or
jge
jle
orl
xor
add
xor
aam
iret
xor
inc
dec
fcoml
cmc
lods
loop
int
test
arpl
push
adc
or
push
push
jno
popf
mov
or
add
test
into
or
addl
dec
dec
pop
xchg
loopne
sarb
sbb
pop
lods
aaa
iret
push
stos
daa
mov
push
fsts
dec
sti
jno
xchg
xchg
movsl
mov
les
sbb
dec
add
sub
iret
sbb
pop
in
std
cmpsb
repnz
push
dec
jle
sar
sbb
push
or
and
add
sbb
xchg
push
or
add
mov
stc
sub
mov
push
xlat
mov
dec
lea
sti
pop
sahf
jbe
mov
scas
push
xchg
sbbl
or
sahf
xor
je
je
jmp
outsb
add
popa
addr16
or
in
xchg
fidivrs
test
lcall
adc
xchg
out
insb
pop
cmp
test
or
inc
jns
loopne
and
ret
fmul
jmp
cmc
inc
pop
xchg
jb
push
repz
test
push
rcll
push
leave
push
mov
ficoml
iret
in
fadd
outsb
dec
iret
mov
clc
jo
cmp
xor
push
movsl
push
or
ret
jmp
outsb
aad
mov
inc
adc
mov
dec
cmp
cld
incb
sub
fbld
lret
cmpb
lret
or
and
pop
dec
or
mov
pop
mov
sbb
out
jno
je
cmc
and
mov
stos
and
jae
or
pop
das
test
into
mov
push
pusha
push
insb
mov
test
das
outsb
ja
push
adc
into
cs
out
fs
scas
imul
in
push
sub
int3
or
or
out
into
cwtl
movsl
ja
jne
jl
mov
aas
xchg
mov
js
mov
jae
or
sbb
ljmp
cmp
xchg
or
adc
cmpsb
pop
mov
or
and
push
ss
adc
mov
addr16
in
sub
out
or
pop
dec
icebp
cld
subb
push
sub
and
mov
pop
push
in
es
addr16
cwtl
mov
addr16
movsl
gs
adc
fstp
in
pop
mov
inc
fadd
test
cli
lcall
test
ja
or
push
lea
stc
dec
mov
test
xor
je
adc
sbbb
adc
jecxz
cmp
cld
out
cmp
mov
jmp
insl
sub
push
stos
outsl
call
inc
movsb
sub
add
add
aas
xchg
dec
jne
cmp
cmp
out
ja
ja
orb
pop
ljmp
and
and
xor
aad
data16
popf
xor
and
push
divl
cmp
sub
or
aad
lock
push
push
cltd
enter
out
divl
imul
sub
sbb
aad
test
pop
aad
ds
fldenv
cmp
dec
xchg
adc
dec
pusha
xchg
addr16
in
out
push
fs
pop
loop
call
add
sbb
pushf
push
push
in
and
lcall
repz
decl
and
mov
dec
cmpb
imul
stc
jg
sahf
jmp
outsl
jg
lods
hlt
dec
push
mull
sub
and
mov
xchg
pop
mov
cwtl
mov
fnstcw
movsl
jmp
push
stos
cmp
imul
inc
cltd
pop
xor
jecxz
cwtl
popa
addb
push
dec
push
cmc
movsl
jp
push
mov
inc
fsubrs
add
orl
add
pop
or
daa
lods
mov
pop
xchg
fdivr
fs
and
mov
rclb
mov
mov
jg
or
insl
pop
fisubs
and
cmpsl
rol
or
enter
lret
pushf
mov
sti
fistpll
and
cmp
mov
or
add
xchg
add
mov
das
mov
or
out
aaa
in
outsb
inc
inc
inc
mov
icebp
test
hlt
pushf
mov
jo
pop
leave
adc
dec
cmp
lock
lahf
jae
stc
mov
jmp
add
inc
xchg
adc
gs
or
aam
and
mov
push
andl
and
out
ss
push
push
inc
adc
mov
lret
cmpsb
cltd
test
cmp
imulb
or
out
sub
add
pop
je
test
les
mov
mov
xchg
or
mov
ljmp
push
imul
pusha
cmp
sbb
push
loop
mov
push
mov
ss
add
jbe
ljmp
jae
jl
daa
or
jnp
es
sahf
sti
fildll
cli
popa
lret
sub
push
nop
sbb
jle
inc
arpl
cltd
inc
sbb
int3
cmp
scas
sub
fs
jnp
xor
push
notb
sbb
loope
int
test
mov
push
push
xchg
fcomps
in
and
loopne
adcl
mov
jecxz
lds
fadds
arpl
lds
xor
sub
push
rcr
add
xor
lahf
xchg
dec
push
sub
cmpsl
sbb
je
xor
jns
daa
repnz
pop
xor
sbb
mov
sub
xor
pop
sub
xchg
vpor
cmp
mov
out
ss
movsl
movl
enter
dec
decb
and
xor
xchg
mov
lcall
out
xor
lahf
jmp
dec
sub
pop
xchg
aad
pusha
sub
flds
repnz
and
out
lock
jo
inc
shrl
pop
lods
push
lods
xor
xor
fiadds
into
sbb
popa
adc
pushw
pop
pop
arpl
mov
mov
xor
xchg
dec
jmp
xor
lock
push
sub
test
ss
push
arpl
in
add
cmpsl
rol
dec
aam
xchg
pop
mov
aad
sbb
sti
fisubs
cld
mov
int3
adc
imul
dec
mov
cmp
shlb
stos
xor
hlt
pop
mov
sahf
mov
pop
pop
lahf
mov
lahf
incb
cmp
bswap
repnz
rcrb
xor
aaa
or
popf
pop
popa
cmp
add
std
dec
fcmovu
jp
mov
and
cmc
mov
dec
lea
ficoml
push
mov
pop
xlat
dec
popf
add
jnp
mov
sbb
sub
mov
shll
repnz
fstpl
cmpsb
xor
dec
pushf
sub
xchg
imul
jbe
and
aaa
sub
pop
mov
mov
fs
mov
lods
push
ret
adc
out
inc
pop
test
cmp
pop
add
jecxz
out
cmp
mov
push
andl
jle
mov
ds
mov
dec
pop
or
xchg
loopne
test
mov
push
mov
jge
sbb
std
push
cli
xor
cwtl
mov
xchg
movsb
cmc
sbb
push
dec
out
inc
stc
hlt
xlat
outsl
xor
xor
push
fildl
push
jno
clc
test
push
test
adc
adc
adc
adc
xlat
in
inc
sahf
mov
mov
cmp
mov
dec
mov
in
icebp
inc
cmp
movsl
les
and
pop
je
aaa
call
lret
mov
xor
dec
xor
icebp
enter
fisttps
mov
mov
or
or
mov
daa
pushf
cmpsl
and
js
xor
scas
xor
pop
pop
mov
and
mov
fildll
jmp
sub
pop
addr16
fwait
je
mov
insl
stos
add
xlat
sti
lea
adc
xchg
mov
lods
xor
or
lock
outsb
mov
fdivp
jge
cltd
inc
fbld
shrl
sahf
cmc
jecxz
mov
stos
pop
ljmp
xchg
cmp
sub
xchg
cmp
mov
out
cmpsl
xlat
jl
into
scas
inc
test
mov
sbb
pop
fwait
inc
movsb
inc
repnz
test
jmp
ffreep
movsb
adc
mov
jbe
shr
movaps
jns
sti
fldl
push
movsl
inc
aad
adc
out
fadds
popf
mov
cltd
mov
inc
add
neg
or
adc
add
inc
inc
les
pop
inc
mov
cmp
jo
xor
es
sbb
cli
cld
jp
xchg
cwtl
or
cwtl
cmp
imul
jp
pop
jp
xchg
pop
int3
jmp
or
es
popf
jb
or
out
mov
sbb
mov
mov
xor
inc
out
pop
int3
sbb
or
fidivrs
jg
jno
adc
faddl
rcrl
add
inc
mov
out
xchg
inc
pop
in
lock
fstl
stos
ret
or
xlat
xchg
lds
sbbb
and
cmp
and
mov
data16
or
fs
push
filds
mov
or
repz
out
out
dec
sub
out
loop
sub
arpl
inc
xor
sbb
jo
push
pop
mov
sub
or
mov
popa
pop
pop
hlt
mov
mov
xchg
mov
xor
sbb
ljmp
imul
jns
iret
sbb
das
insb
or
push
shl
inc
inc
jle
scas
ret
cwtl
jl
mov
in
scas
mov
pop
add
mov
push
push
jae
jne
mov
mov
cmp
fists
jb
mov
pop
mov
scas
std
cmp
push
mov
iret
int3
fs
repz
pop
in
push
sbb
pop
loop
push
fidivs
es
aaa
mov
cmp
or
ss
sbb
loope
inc
ffree
dec
mov
mov
sub
fistpll
pop
jnp
in
je
fistps
negl
mov
fsubrl
or
lahf
push
sbb
repnz
mov
lods
push
das
ljmp
push
sarl
jns
pop
in
pop
inc
enter
shrb
push
mov
lods
jb
inc
jnp
fdiv
ret
stc
cmp
xor
in
xor
rcr
or
scas
rorb
sub
mov
loope
shll
fistpll
mov
pop
sahf
popa
inc
add
or
popf
lds
shlb
sub
mov
or
push
jae
sbb
mov
sbb
enter
mov
stos
jb
lcall
jp
inc
mov
jl
fldt
dec
adc
or
jb
aam
cmp
push
xor
or
mov
popl
fbld
test
or
in
mov
sbb
repnz
jnp
mov
int3
or
cmp
and
inc
mov
mov
sbb
mov
shrl
xchg
dec
and
dec
dec
mov
cmp
int
in
aas
outsl
cmp
pusha
inc
lcall
hlt
cs
jp
or
push
enter
ljmp
cli
in
cmp
jecxz
or
leave
push
inc
or
cmc
pop
scas
inc
xchg
jl
dec
push
fstps
xchg
fdivl
int3
jbe
stos
data16
inc
daa
inc
sub
in
out
daa
loopne
jns
aam
pop
lret
es
fistps
fidivs
sbb
out
clc
out
mov
mov
cmp
jae
daa
arpl
xor
testb
xchg
lret
mov
xor
leave
inc
mov
dec
pop
cmpsb
sahf
push
fsts
out
sbb
pop
enter
movsl
jge
sahf
into
mov
mov
jo
inc
mov
mov
xor
inc
outsb
je
push
jb
lcall
pop
mov
enter
mov
es
pusha
push
jb
sub
cmp
ds
adc
divl
pop
rcl
or
out
sbb
daa
stos
inc
or
ljmp
repnz
sub
jo
mov
xor
ds
push
sbb
clc
mov
movsb
cmp
sbbb
hlt
add
jbe
xchg
mov
sub
imul
sub
out
nop
add
or
push
push
repnz
arpl
fdivr
add
rolb
xchg
fidivl
pop
lds
xchg
inc
push
mov
lahf
gs
lea
or
setne
dec
inc
jo
and
mov
sub
fistl
test
imul
sahf
fdivs
xchg
adc
push
lcall
mov
pop
xchg
movsb
das
xorl
sbb
xadd
js
les
cli
push
jo
sub
mov
adc
mov
pop
fisubl
sbb
imul
pop
test
subb
dec
es
jae
cli
f2xm1
inc
test
xchg
leave
pop
mov
xor
inc
push
lahf
or
mov
push
mov
and
sub
stc
mov
orb
pop
loopne
sub
cld
js
sub
lea
xchg
cmp
aaa
test
or
jb
fs
sbb
and
push
jg
fisttps
mov
cmp
stc
and
stos
js
xchg
bound
add
sub
cld
arpl
push
ss
ss
rcll
mov
cs
loope
and
gs
and
loopne
hlt
into
fs
cwtl
into
add
cmpsl
cmp
mov
aam
negb
loope
fidivs
jo
xor
sub
sbb
iret
add
pop
xchg
jg
cwtl
push
addb
ja
jbe
rorb
mov
pusha
in
clc
mov
int3
lds
inc
and
jne
push
dec
pop
repnz
data16
ret
jge
daa
jg
jno
decb
add
push
inc
xor
fdivr
jmp
fs
cmp
and
lods
nop
mov
sbb
sbb
jle
movsl
lret
push
out
jae
xchg
mov
add
pusha
cmp
sahf
mov
dec
popf
sub
inc
vmovss
xor
int
inc
jno
leave
enter
scas
sbb
jge
mov
fucom
mov
mov
imul
dec
leave
icebp
or
sbb
popf
lods
icebp
mov
xor
pushf
scas
out
sub
xlat
or
inc
cmp
sub
test
mov
out
or
sbb
sbb
xchg
fwait
xor
scas
mov
jbe
mov
std
cltd
ss
clc
fbld
and
test
push
pushf
fistl
mov
or
mov
sub
je
insb
adc
dec
xchg
cmc
pop
sti
movsb
lret
aas
add
sub
add
fs
or
out
dec
iret
orb
push
jge
lock
mov
repz
or
sbb
hlt
lcall
stc
pop
push
and
ficomps
repz
imul
mov
clc
jmp
cmp
cmp
mov
push
fcom
cmpsl
pop
inc
rclb
in
scas
cmp
mov
mov
dec
stc
addr16
and
xor
push
daa
jl
ljmp
mov
push
dec
lds
sti
lods
lods
jnp
inc
mov
mov
imul
dec
jno
push
jl
inc
ds
and
mov
call
push
pop
data16
aad
push
pop
inc
or
mov
and
sbb
rep
popa
outsb
xchg
adc
repnz
jp
inc
stos
das
or
cmpsb
add
scas
jp
mov
push
leave
push
insb
enter
inc
jle
ss
xorl
mov
xchg
dec
test
lods
test
jo
out
ljmp
or
stos
jb
adc
scas
pop
ljmp
lods
pop
jae
es
mov
invlpg
dec
pop
lock
jns
mov
adc
jnp
cwtl
outsb
dec
loop
aam
js
mov
and
inc
add
lahf
lods
and
jg
scas
sbbl
jne
out
insl
cltd
notb
push
inc
sub
mov
pop
mov
mov
daa
sarb
in
mov
ja
jl
and
dec
lcall
fbld
cmc
mov
ss
arpl
cmpsb
jl
mov
dec
cltd
cmpsl
fistps
filds
movsb
sub
and
mov
xor
andl
gs
int
push
pop
mov
jmp
idiv
outsl
xchg
cwtl
mov
fidivrl
pusha
xor
js
pushf
rol
das
js
cli
push
stos
push
mov
andb
inc
das
mov
gs
lahf
lcall
dec
imul
cwtl
mov
outsl
sub
out
lods
in
lock
cmpsb
into
out
pop
inc
mov
inc
inc
stos
sub
and
xlat
cmp
pop
test
sbb
pop
inc
dec
sub
bound
ja
jne
ret
fisttps
mov
push
mov
fwait
pop
cmpsl
data16
jl
insb
mov
jmp
fwait
jo
cli
enter
bswap
test
and
scas
jo
sti
dec
addr16
mov
mov
sub
mov
cmp
les
push
mov
jle
and
jp
fs
clc
push
test
mov
mov
inc
push
outsb
adc
fwait
jns
xchg
xchg
pushf
arpl
lret
call
mov
rcll
shll
call
xor
xor
in
jns,pn
frstor
dec
loope
xchg
sbb
mov
and
and
dec
hlt
mov
jbe
ret
mov
lods
lock
fdivs
jecxz
fcoml
mov
arpl
push
mov
xchg
xlat
loope
or
mov
fwait
xlat
dec
push
sbb
and
orb
cli
and
outsb
mov
sti
xlat
jmp
mov
fadds
xchg
push
xor
sbb
cmp
xchg
jnp
mov
fsubs
leave
mov
pop
dec
out
adc
cmp
inc
loopne
add
mov
aam
xchg
jnp
mov
lds
test
push
in
inc
sub
cmp
pop
aad
push
shrl
add
sbb
imul
mov
inc
idivl
lods
sti
icebp
gs
dec
mov
push
jae
stos
mov
sub
dec
repz
pop
int3
test
mov
cmpsl
dec
lock
xchg
rep
mov
pop
lock
repnz
aas
cmp
repz
or
mov
xor
jecxz
jns
jnp
xorl
pop
mov
push
scas
ret
insb
ljmp
test
pop
fimull
lea
fsub
shl
addl
cmp
jle
dec
ror
inc
sbb
mov
xchg
popa
pop
mov
jecxz
mov
nop
cs
lcall
scas
push
cmp
cmc
dec
adc
jae
lods
add
icebp
xor
adc
imull
icebp
and
xchg
jno
in
pop
push
lods
jno
popa
scas
dec
push
sub
or
ljmp
call
testb
mov
mov
fistps
mov
ret
pop
dec
stos
ja
cmp
add
repz
mov
mov
flds
or
sub
mov
mov
mov
mov
scas
cmc
arpl
inc
frstor
jge
jns
int3
push
push
inc
or
sbb
pusha
arpl
jo
and
cli
jbe
sub
psubw
adc
popf
sub
mov
imulb
push
popa
mov
cltd
pop
mov
insl
std
mov
dec
mov
popa
sub
out
cmpsb
mov
cmpsb
or
jge
mov
ret
ja
cmpsl
js
inc
int3
aas
dec
jb
in
xchg
gs
lcall
mov
sbb
pop
sub
out
aas
repz
jp
scas
andl
movsl
les
ja
pop
cmp
xor
mov
jge
sub
jb
aam
and
movsb
push
push
daa
or
inc
dec
push
dec
pusha
inc
fcomip
jle
pop
and
fs
cmp
andb
sub
and
or
jg
jno
xchg
jmp
stos
push
dec
xchg
addr16
mov
mov
and
test
push
jge
ds
jb
push
jb
fndisi(8087
cmp
xor
cmp
das
xchg
xchg
sbb
mov
sbb
enter
mov
xchg
shrb
pushf
inc
flds
push
lahf
adc
pop
mov
adc
push
ret
dec
lods
aas
jno
xchg
fscale
loope
cmp
insl
pop
test
add
stc
test
adc
push
dec
lret
dec
add
sbb
ja
mov
js
sbb
nop
jg
and
repnz
aaa
and
mov
fisubl
sarl
sub
cmp
jb
rcll
xchg
xor
sbb
inc
in
dec
mov
test
mov
xchg
pop
clc
cmp
pushf
clc
lea
call
mov
adc
fbstp
aad
scas
arpl
adc
cld
adc
or
insl
dec
lret
ds
int
push
addr16
dec
out
xor
std
xchg
rcrb
cli
jmp
adc
pushf
and
int3
sub
mov
enter
test
dec
dec
and
push
mov
fwait
sbb
or
in
adc
inc
in
lret
inc
adc
repz
pop
pusha
sbb
loopne
in
pop
test
mov
ja
adc
clc
test
push
loope
dec
ret
jmp
lods
mov
sub
inc
cmp
mov
dec
and
shlb
sti
call
into
mov
xchg
jno
add
in
divb
repz
cltd
fdivs
fdivrl
pop
mov
sbb
mov
cmp
lahf
fsubrs
jnp
repz
push
jnp
out
pop
lods
mov
mov
test
mov
xor
xor
call
pop
mov
scas
cltd
push
jne
add
mov
mov
pop
push
mov
add
insb
xor
pop
pop
out
cmpl
add
mov
jecxz
enter
mov
stos
pop
sub
push
pushf
cmp
cmpsb
je
les
or
dec
inc
std
sub
jge
xor
sbb
mov
sahf
imul
push
nop
imulb
fmuls
fcompl
aas
cmp
out
daa
and
mov
ss
movsb
sub
jbe
jecxz
decl
decl
push
icebp
cmp
mov
movsb
loop
sub
hlt
scas
sbb
jl
xchg
gs
mov
bound
cmp
insb
cmp
mov
out
mov
ljmp
stos
out
addr16
pop
xchg
jb
mov
mov
sbb
mov
mov
inc
mov
loop
push
mov
data16
xchg
jno
sbb
xchg
jbe
pusha
cmp
je
or
js
lcall
and
sub
and
repz
mov
mov
into
ja
xchg
inc
pop
jno
out
sub
push
pop
add
xchg
in
sub
jle
nop
jo
mov
leave
sbbl
inc
xor
scas
mov
lcall
xorl
ret
dec
scas
xchg
inc
shrb
xchg
aaa
xchg
sbb
mov
push
and
aad
push
shr
add
popf
pop
scas
jge
lds
xchg
mov
scas
inc
jne
fadds
shlb
pop
repnz
lods
mov
test
cmp
std
xchg
into
cmc
cmpsl
aas
lods
fadds
fdiv
sbb
pop
out
inc
push
pusha
cmpsb
addb
addl
xor
mov
mov
and
jo
mov
dec
mov
mov
clc
dec
aaa
popa
jmp
push
fadd
adc
inc
jbe
rorl
jae
lahf
andl
mov
neg
popa
data16
insb
inc
pop
out
cmpl
push
daa
add
sub
clc
pushl
xchg
daa
xor
mov
pop
mov
sahf
insl
mov
ja
sbbb
ret
mov
hlt
mov
fisttpll
mov
push
mov
fdivs
add
les
and
pop
adc
subb
insb
jmp
je
adc
and
leave
addl
mov
push
out
test
or
mov
rcrl
pop
aas
and
rcr
aam
lret
inc
rorb
mov
xchg
sarb
push
leave
movsl
jg
xor
pop
scas
int
js
and
mov
dec
imul
xor
shlb
repnz
push
ret
add
inc
loope
nop
cmpsl
or
sbb
pop
adcb
lock
push
push
jp
cmp
inc
push
sbb
nop
ds
out
addr16
daa
addr16
inc
sahf
dec
jnp
inc
xor
pop
leave
cmp
fdivrl
mov
jmp
xor
loope
sub
push
clc
rcrb
sbb
cltd
lsl
mov
lds
pusha
dec
jg
inc
orb
mov
in
test
push
adc
outsb
movsb
dec
fwait
repz
xchg
inc
call
insl
jmp
into
pop
cmp
fs
addb
add
movsb
shlb
imull
mov
jo
rcrl
xchg
loopne
leave
jge
ljmp
mov
and
and
pop
push
jb
cmpsl
or
jecxz
in
lods
shll
shlb
or
ljmp
shrl
push
jmp
mov
inc
loopne
insl
mov
out
out
xlat
iret
int3
mov
jl
push
add
aam
jle
cmpsl
in
adc
pop
or
movsb
inc
xchg
sahf
test
fsubrs
dec
aas
xchg
mov
movsl
fwait
mov
sub
sub
icebp
js
lock
xchg
aaa
js
stc
or
dec
ljmp
pop
mov
sbb
stc
shl
cwtl
rcrl
fs
rcrl
sti
jo
dec
jge
in
sbb
pop
shrb
cmp
repnz
and
clc
out
fisubs
cld
aad
aas
vpshuflw
ret
sbb
cwtl
cmp
ljmp
push
sbb
movsb
or
in
inc
adc
add
adc
pop
mov
out
nop
filds
xchg
dec
sub
sub
sar
xchg
ljmp
adc
aam
sbb
shrb
dec
sbb
mov
jg
lcall
and
stc
inc
sbb
dec
insb
es
repz
scas
cltd
jne
ds
xchg
cli
loope
xchg
fcomps
stos
je
fisubl
pushf
es
fcoms
out
xor
jmp
test
ret
push
xchg
addr16
or
pop
push
dec
fcoml
rol
pop
pop
xchg
pop
pop
cld
lret
pop
dec
push
cmp
pop
push
in
adcl
and
mov
mov
das
popa
push
cmpsb
add
ja
iret
cmp
xor
and
mov
jmp
jp
jecxz
dec
ljmp
sti
jno
dec
sbb
cltd
inc
mov
sub
mov
subb
dec
pop
imulb
cwtl
out
std
xchg
mov
stos
and
sarl
inc
mov
mov
dec
loopne
xor
jae
add
fcmovu
cwtl
mov
std
pushf
add
mov
cmp
push
xor
push
ret
lods
add
push
shl
pop
xor
push
ficoml
cmp
dec
push
imul
xchg
rorb
jecxz
outsl
xlat
add
sbb
push
dec
test
jl
mov
sub
xor
repz
ja
and
push
repnz
dec
roll
dec
not
js
or
jne
mov
push
jbe
sub
push
xchg
dec
scas
pop
mov
and
and
lock
fistpl
shl
hlt
pop
je
jecxz
mov
pusha
or
test
mov
popf
into
inc
and
cmpsb
xchg
push
adc
sbb
shlb
sbb
addl
popa
ret
mov
cmpsb
mov
xchg
bound
ret
xchg
xor
sbb
sbb
or
and
mov
xchg
repz
add
test
ficoms
repz
dec
stos
aas
fbstp
ja
lcall
mov
cmp
and
or
jbe
cld
sub
imul
mov
sti
shlb
mov
mov
repnz
inc
dec
dec
cmp
rorl
cmc
pop
je
mov
mov
into
add
adc
ret
sub
dec
nop
mov
and
xor
pop
out
pop
lods
xor
xchg
add
jns
insb
rol
fdivs
or
lods
dec
into
xorl
sbbl
cmp
sbb
bound
adc
inc
mov
movsb
imul
xchg
push
inc
test
sbb
add
xchg
or
jbe
cmp
fdivs
stos
sub
and
xor
mov
cmc
xchg
add
mov
ret
jl
mov
mov
dec
push
mov
notl
jo
dec
push
or
outsb
iret
movsl
pop
adc
les
mov
jo
dec
icebp
fildll
dec
and
hlt
jo
std
sbb
insl
adc
rcl
adc
cli
mov
nop
mov
into
imull
push
ja
popf
cld
jne
adc
pusha
sbb
lahf
add
movsl
xor
aam
popa
mull
andl
push
inc
xchg
shlb
mov
cmp
int3
stos
orb
adc
popf
cmp
xchg
out
cmp
enter
cmp
sub
lret
adc
pop
sarl
int
mov
test
and
mov
jl
and
jle
or
mov
cmp
not
pop
jmp
mov
pusha
sqrtps
imul
inc
test
lock
pop
dec
int3
in
inc
rclb
enter
cwtl
or
arpl
gs
hlt
imul
fsubrl
sbb
xchg
sbb
inc
push
xlat
lcall
out
sti
and
and
mov
push
add
inc
adc
or
push
pop
mov
and
push
imul
sbb
out
and
push
je
leave
out
jns
or
pop
inc
ret
lcall
hlt
inc
jp
mov
imul
mov
ret
cld
sti
push
out
sbb
ds
pop
add
pop
push
aaa
xor
push
push
fsub
xchg
aaa
stos
in
jno
jmp
lea
jno
nop
cmp
inc
mov
dec
cmc
cltd
mov
jns
and
ja
push
inc
mov
mulb
sub
push
and
push
xor
sbb
icebp
pop
sti
setp
leave
fdivl
xchg
lcall
orb
jp
pop
rorb
lock
sti
test
das
leave
add
adc
sub
cmc
adc
or
pop
inc
xor
adc
repnz
xor
xchg
inc
inc
and
inc
pop
dec
adc
xchg
sub
add
mov
and
cwtl
xor
mov
iret
push
adc
adcl
shlb
jmp
fwait
enter
xchg
fiaddl
push
dec
je
adc
pusha
subl
cmp
sbb
jecxz
cmp
mov
mov
or
adc
popf
addr16
cmp
xchg
shufps
dec
andl
add
cmp
sbb
mov
xor
std
dec
popl
dec
out
cmpb
pop
push
mov
gs
jg
gs
xchg
outsl
cmpb
lret
not
adc
add
pushf
cld
lret
cmp
popf
gs
pop
imul
and
adc
mov
xor
push
sub
ret
push
inc
xor
sub
cld
cmp
cmp
fmul
cli
sub
mov
cs
fmull
out
rcrl
and
xor
inc
mov
repz
mov
cmpl
xchg
xlat
iret
loope
insl
xlat
mov
adc
js
pop
and
fstl
inc
fstpt
pop
jo
mov
out
sub
sub
jno
mov
mov
mov
insl
ret
fcompl
add
insb
dec
sub
mov
jae
cmp
nop
adc
fmuls
inc
dec
inc
mov
lret
es
add
test
lock
adc
insl
push
fs
icebp
sbb
loope
jg
test
jbe
jo
xor
popa
push
cmpsl
inc
add
and
add
in
pop
pop
mov
mov
mov
xchg
dec
cmpsl
mov
lret
lahf
fisubl
sub
addr16
mov
daa
mov
dec
inc
adc
lahf
push
lea
mov
jne
lds
pop
in
or
inc
pop
test
mov
nop
call
jnp
or
sbb
icebp
mov
sub
mov
int
pushf
push
pop
and
fcompl
into
in
mov
lods
jge
add
out
sbb
mov
and
scas
shrb
xchg
fidivrs
adc
xchg
and
lcall
mov
adc
add
aam
cmc
sbb
in
dec
pcmpeqb
mov
jle
stos
std
mov
fsubp
ds
dec
iret
and
xchg
and
push
sub
mov
pop
jp
rcr
jno
sub
dec
xor
adc
int3
call
jnp
mov
jb
push
sub
push
imul
psubb
pop
or
pop
addl
rol
leave
mov
mov
sbb
mov
cli
fwait
je
fisttpl
sbb
mov
addr16
dec
mov
negl
and
repz
test
fwait
test
pop
ss
out
and
mov
mov
sub
mov
jp
je
insb
ljmp
add
jno
and
mov
dec
adc
out
fstpl
clc
and
roll
repnz
shll
pop
lds
adc
ficomps
and
inc
pop
ljmp
repnz
jg
add
jle
fisttps
jnp
lcall
mov
mov
pop
jno
in
mov
xor
ficompl
add
out
in
gs
out
cli
and
mov
bound
aam
das
mov
repz
cmp
imul
test
insb
mov
or
hlt
test
push
dec
aad
mov
dec
inc
fwait
int
add
fwait
aam
out
jnp
arpl
push
testl
bnd
push
fnsave
mov
xchg
adc
ret
sub
mov
movsb
push
daa
cmpsl
cmp
std
push
jmp
xchg
sub
adc
fcoml
jae
mov
enter
pop
xlat
popf
push
fprem1
jb
mov
mov
mov
and
in
mov
mov
ret
aam
popf
xchg
das
mov
cmpsl
outsb
pop
aas
mov
mov
jl
hlt
leave
sar
jecxz
pop
jmp
scas
inc
xchg
in
movlps
sub
shl
pop
push
or
sahf
ja
in
js
xchg
imul
ljmp
jg
fsubrl
and
add
addr16
loopne
xchg
inc
mov
adc
repnz
gs
add
mov
inc
cld
ret
aam
div
push
je
lcall
or
into
jl
xchg
insl
fildl
cltd
inc
mov
jae
adc
in
loopne
jp
add
inc
xchg
mov
pop
lods
pop
lcall
shlb
mov
dec
sbbl
pop
cmp
fwait
mov
inc
mov
data16
adcb
ret
sti
add
sahf
mov
jne
xor
mov
push
push
out
mull
jle
pop
xor
test
sahf
inc
popa
lahf
int3
adc
adc
and
aaa
push
fisubrs
ja
push
lock
daa
add
cmc
pop
inc
aam
addr16
shrb
sbb
cltd
push
add
inc
call
and
push
sub
cli
or
cmp
ja
fistl
adc
cmp
fsubs
ret
or
sub
imul
cmp
rol
subb
push
popa
sub
js
mov
add
sti
je
rcll
rorl
cmp
adc
mov
loopne
lock
sbb
mov
jbe
aaa
and
filds
std
sub
in
sbb
xchg
adc
cmp
jge
and
xor
cltd
adc
int3
sbb
popf
mov
dec
adc
cmp
mov
cs
vpsrlw
mov
adc
test
inc
mov
cli
fidivs
pop
shrl
cmpsl
and
mov
jns
xchg
mov
and
mov
addr16
stc
std
or
pop
scas
sub
pop
lahf
test
mov
or
iret
push
add
ret
or
popf
and
lret
xchg
pushf
or
loopne
inc
out
rorl
popf
sarb
pop
lods
sub
dec
out
adc
adc
mov
dec
lods
js
cltd
xchg
push
pop
push
cmpl
inc
cmpsl
leave
popf
jnp,pt
aaa
mov
mov
jns
sbb
jmp
nop
clc
push
fsubs
fwait
xchg
or
xor
scas
ret
mov
add
cld
out
push
leave
mov
ljmp
sub
loop
rep
pushf
clc
std
dec
cmp
insb
or
xchg
adcl
in
push
adc
ds
or
mov
das
and
mov
fiadds
outsl
into
push
xchg
jmp
out
call
xlat
bound
mov
or
outsb
fimull
sub
add
dec
popa
clc
inc
gs
xorl
dec
xchg
add
in
push
mov
mov
int
dec
xchg
pop
testl
in
call
pop
fs
xchg
scas
mov
mov
xchg
aad
xlat
xlat
xor
and
adc
or
dec
popf
lret
push
in
dec
mov
push
dec
and
jae
sub
pop
adc
ror
mov
cmpl
sub
adc
dec
xor
jo
repnz
jle
or
imul
mov
inc
mov
cli
pop
pushf
jne
aam
add
shlb
or
mov
out
mov
sub
push
mov
cli
push
push
sbb
in
cmp
popa
adc
sbb
loop
cmp
nop
mov
loopne
push
push
add
push
lcall
xchg
pop
cwtl
jo
aam
xchg
inc
fsubrs
cli
pop
cmp
sbb
inc
stos
je
bound
popf
dec
int
movsl
mov
mov
loop
jl
scas
fwait
xor
pop
and
test
mov
int3
pop
mov
imul
xorl
inc
fcmovne
out
adc
xor
out
add
imul
cld
push
inc
xor
ds
and
jb
or
movsl
pop
repnz
lods
pop
adc
bound
or
rcll
pop
xlat
dec
test
sti
out
lcall
cmp
in
gs
mov
inc
mov
aaa
faddl
inc
jge
das
xchg
dec
push
loop,pt
js
loope
mov
pop
or
mov
cwtl
cmp
dec
in
mov
add
imulb
leave
stc
scas
mov
sbb
mov
out
in
push
shlb
adc
push
stc
cli
and
xor
cmp
dec
mov
out
xchg
nop
adc
roll
adc
mull
inc
test
out
inc
aaa
add
popf
push
sbb
mov
sub
clc
push
push
mov
pop
mov
insl
sti
push
dec
pop
popa
in
dec
in
pop
loope
lret
xchg
jg
adc
sbb
push
jbe
or
lcall
mov
inc
subb
jne
ds
jl
add
cmp
pop
sbb
test
push
or
mov
adc
in
inc
ljmp
mov
mov
lahf
adc
push
sbb
jo
fsubs
sbb
out
pop
bswap
mov
and
xchg
xchg
sbb
dec
mov
and
addr16
push
cmp
ret
out
or
loop
adc
je
pop
cmp
add
mov
xchg
mov
pop
cmc
adc
add
mov
cmp
sub
push
lcallw
push
lcall
xor
sub
push
stc
loope
stos
xchg
cmp
xor
lea
mov
hlt
mov
in
jl
inc
xor
mov
arpl
sbb
scas
std
jge
jmp
jne
pop
aad
scas
iretw
xchg
int3
sahf
test
push
cmp
xchg
mov
mov
xor
adc
andb
pop
or
arpl
call
fildll
dec
or
out
loope
pop
mov
sbb
xlat
pop
adc
mov
repz
and
in
out
push
imul
into
movsl
mov
orb
loopne
or
jmp
lahf
or
pop
sub
cmp
dec
cmp
push
push
data16
pop
adc
negb
cli
cwtl
inc
data16
push
pop
sbb
jae
fidivrs
gs
dec
pop
movsl
daa
lret
cmp
add
cld
push
cmpsl
pop
or
sub
lods
stc
lret
push
outsb
push
jge
je
sarl
inc
fwait
sub
outsb
mov
mov
inc
lods
mov
mov
jb
add
ss
xchg
in
and
pushf
ficoml
adc
and
add
insl
aam
ljmp
cmc
inc
mov
shl
lret
scas
add
mov
push
push
mov
test
test
orl
pusha
repz
fldt
das
mov
stos
pushf
mov
clc
iret
cmpsl
cmp
lret
dec
add
add
nop
out
dec
cmp
lret
xor
in
mov
ss
dec
xor
mov
cmpsb
mov
stos
mov
xlat
cmp
popf
xchg
jmp
push
pop
ljmp
add
xchg
insl
testl
pop
inc
repz
imul
add
imul
popa
cltd
and
rclb
pop
sbb
or
push
movsl
inc
push
jle
fdivs
iret
rcl
xchg
and
rorb
inc
lea
or
push
je
or
push
lret
std
jo
or
stos
movsl
push
or
mov
jle
movsl
lds
dec
pop
sub
mov
cltd
adc
push
jo
in
mov
add
es
in
sub
test
push
xor
jae
xchg
fistps
lock
adc
bound
setnp
or
fs
rcrl
sbb
cmp
inc
hlt
repnz
scas
push
sub
add
xchg
sahf
int
mov
std
lcall
push
xor
jnp
jb
cmp
addr16
rol
pop
aas
loop
rorl
lds
sti
fstps
icebp
xchg
cmpsb
shll
loop
inc
xor
mov
mov
push
fnstcw
mov
ficompl
jmp
sbb
mov
mov
arpl
pop
daa
add
jecxz
nop
mov
insb
imul
stos
and
jl
aas
cmp
jmp
xor
push
iret
mov
in
xchg
dec
xchg
bound
cmp
sbb
call
sbb
pop
cs
push
shl
cwtl
mov
mov
les
je
push
imul
sub
fdiv
or
and
pop
mov
lods
mov
sbb
push
cmp
mov
ret
cmp
sub
mov
popf
lahf
aaa
movsl
pusha
sbb
sbb
dec
add
add
pop
mov
outsb
lods
insb
mov
ret
sbb
xor
mov
je
xor
stos
daa
pushf
repz
scas
mov
or
int
mov
dec
lea
xor
push
out
sbb
cld
inc
pop
inc
in
ljmp
jo
pusha
fistps
mov
mov
dec
insb
out
mov
decl
sbb
imul
xchg
cmp
dec
push
test
mov
mov
iret
mov
adc
push
stos
mov
ret
outsl
into
cld
sahf
cmpsl
mov
rcl
aaa
mov
dec
pop
pop
mov
pusha
cmp
mov
jl
adc
pop
add
ds
aaa
pop
subl
pusha
insl
pusha
les
and
sub
pop
popa
pop
push
jbe
pushf
sub
sbb
in
ficomps
out
cwtl
repz
jbe
shr
lock
scas
and
nop
scas
xchg
sarb
into
loopne
pop
fldenv
add
mov
jno
mov
jbe
je
sbb
mov
sbb
mov
cwtl
dec
cltd
fcomps
cmpsl
fdivp
inc
ds
je
pushf
roll
or
ds
popf
mov
outsl
aam
and
xchg
out
xchg
lock
jo
insl
push
insl
mov
popf
and
mov
lahf
xchg
xor
dec
inc
xor
ds
idivb
faddp
shrl
mov
pop
mov
aas
imul
lret
movlhps
add
mov
decl
jecxz
jp
jmp
mov
cmp
movsl
test
push
dec
inc
icebp
fisubrl
inc
adc
xor
fbstp
sar
mov
lods
sub
cmpsb
sub
jmp
insb
stos
and
or
in
inc
jg
addr16
dec
test
in
das
sti
sub
popf
sar
add
mov
mov
lret
pusha
cld
mov
imul
push
xchg
sub
sub
sub
xchg
add
adc
fwait
lods
test
xor
jle
insb
ret
jp
mov
inc
fucomip
ret
mov
test
dec
aas
pop
cmp
mov
xor
lahf
test
and
xchg
movsb
fstps
xchg
mov
test
mov
pop
int3
sbb
movsl
fmulp
shll
fsubp
dec
xchg
mov
push
rclb
or
adc
arpl
fmulp
mov
dec
or
and
clc
movsb
js
pop
pop
mov
or
mov
push
ljmp
inc
ds
flds
fs
in
jle
sbb
sub
mov
divb
mov
ficompl
sbb
fdivl
in
mov
add
js
test
shl
pop
outsb
dec
add
mov
aas
out
clc
xor
sub
inc
pop
inc
dec
mov
and
ss
xchg
fldl
cmpsb
sbb
ficomps
xchg
lds
cmp
sbb
adc
xchg
xchg
jb
cs
test
fsubrs
mov
enter
mov
lods
jg
xor
pop
jbe
cmp
pop
enter
inc
daa
cmp
leave
pusha
scas
fdivrl
cwtl
lock
in
mov
pop
inc
mov
xor
arpl
cmp
sub
in
nop
cmova
lods
in
sbb
push
sub
cmpsb
mov
mov
jecxz
shrb
sub
pop
lock
adc
int
and
jg
les
adc
inc
or
fmull
insb
xchg
sub
mov
inc
jno
jae
adc
insl
lds
push
xorl
mov
lret
xor
push
xchg
sub
cld
addl
mov
stc
sbb
ret
xchg
adc
jecxz
ja
jbe
pop
jmp
push
cmpsb
push
add
lock
or
cmc
fs
sbb
hlt
sub
cltd
cmp
jmp
out
inc
or
add
scas
jnp
pusha
mov
cmpl
jmp
mov
daa
mov
or
pop
cld
cltd
jns
fimuls
push
sub
aaa
adc
sbb
dec
fisttps
adc
jmp
add
cmp
xchg
cltd
lods
in
mov
int
xor
pusha
add
add
and
fiaddl
out
jb
out
test
xchg
enter
insb
scas
fcmovnbe
mov
xor
icebp
mov
and
jl
imul
xchg
cvtpi2ps
mov
push
sbb
fcoms
push
mov
mov
popa
cmc
insl
subl
mov
jmp
in
sti
stos
int3
mov
adc
scas
pusha
loop
jae
pop
adc
outsb
shrl
ja
scas
mov
hlt
loopne
xchg
popa
sub
std
pop
jl
loope
rcrl
cmp
jg
ret
xor
fs
into
sbb
inc
test
popf
sbb
or
mov
push
fnstsw
adc
loop
negl
or
jle
mov
sub
adc
mov
mov
pop
mov
pop
call
out
mov
cwtl
lds
mov
jns
shrl
ss
in
call
mov
into
lcall
in
push
jb
cmc
dec
mull
xor
push
push
lea
sbb
jno
fisubrs
cmp
jb
or
cmpb
fistl
mov
cmc
inc
mov
jnp
sub
mov
loopne
or
jnp
add
pop
and
jp
dec
sbb
sub
xchg
arpl
andl
aad
push
notb
dec
or
aaa
in
mov
rorb
test
xor
mov
dec
movzwl
mov
pop
sarb
jb
cmp
adcl
cmpsb
jg
pushf
imul
insb
loope
fsubs
push
mov
les
loopne
pushf
js
sbb
fidivrs
sti
out
rclb
mov
cli
jl
pop
rcr
pusha
les
pop
les
xchg
push
push
iret
insb
push
push
cmp
leave
popf
push
insb
dec
xor
inc
in
xor
aaa
loop
mov
insl
pop
sbb
aas
outsb
mov
ficompl
scas
add
sub
iret
das
lods
mov
gs
rcrb
test
jne
mov
mov
push
pop
pop
jns
stos
stc
repnz
ljmp
mov
lea
push
shlb
push
cmovb
scas
sahf
adcb
mov
fnstsw
push
aad
lods
seta
daa
mov
stc
mov
mov
lahf
cmp
push
xlat
jae
bound
push
pop
mov
or
push
mov
fcmovu
push
mov
out
aam
mov
add
cmp
imul
dec
lret
pop
pop
gs
mov
test
jne
mov
mov
inc
in
inc
xor
xlat
and
out
pop
imul
test
sub
stos
add
inc
dec
bound
pop
mov
sbb
push
rclb
mov
into
inc
movl
push
add
in
movsl
or
les
dec
lea
xchg
xlat
xor
pop
cwtl
std
subb
mov
or
or
ljmp
fdivrs
jae
mov
inc
addl
jmp
ja
dec
jp
push
xchg
stos
inc
cmp
jge
std
jle
or
pop
gs
pop
jge
mov
into
montmul
cmpsb
inc
pop
insb
cmp
pop
push
dec
push
mov
mov
insb
inc
or
icebp
lods
rorl
mov
push
add
cmp
nop
xchg
pop
or
push
or
ja
outsl
enter
add
sub
pushf
or
adc
inc
push
fistpl
dec
bndldx
stc
cld
sbb
aam
imul
fldl
les
and
ss
jbe
in
pop
and
pop
dec
cmpsb
sbb
test
jbe
test
sbb
loopne
imul
add
xchg
mov
aas
and
shl
sti
aaa
loop
push
pop
pop
sub
stos
js
shl
inc
insl
dec
mov
sbb
in
mov
cmp
cmp
sbb
xchg
cmp
sbb
hlt
out
add
xor
pop
insb
dec
ja
mov
out
lahf
cmp
inc
out
dec
mulb
inc
js
mov
jge
ror
xor
inc
dec
jge
and
mov
sbb
in
jo
stos
imull
js
test
xchg
or
mov
dec
iret
in
mov
xchg
out
aam
dec
stc
mov
push
xchg
mov
pop
or
xor
jae
dec
xchg
mov
xor
jb
mov
lahf
jae
xchg
daa
lea
cld
decb
test
scas
scas
shl
stc
cs
sbb
xor
lock
pop
js
jb
in
xor
aad
xlat
rcl
push
sbb
adc
lods
movl
adc
cmp
pop
push
xor
loopne
rcrb
adc
push
mov
fdivrl
jo
add
ret
mov
jge
xlat
sbb
outsb
test
fldcw
pop
js
adc
pop
scas
lods
push
ss
pop
cmp
jae
mov
movsb
push
movsl
jge
push
ret
fmuls
pusha
sarl
jnp
mov
dec
and
jp
test
mov
adc
mov
adc
scas
xchg
push
xchg
out
mov
cmp
stos
lea
in
pop
pop
sti
xchg
pop
hlt
push
test
fadds
aas
mov
mov
pop
pop
mov
jnp
ret
inc
fisubrs
cmpsb
scas
sbb
cmp
xor
pop
icebp
dec
dec
js
jae
xchg
pop
push
div
js
add
lahf
cmp
test
sub
mov
sbb
mov
pop
and
mov
andl
subl
jecxz
fcmovbe
mov
lret
mov
ds
js
dec
enter
xor
out
pop
es
scas
dec
dec
std
cmpsb
arpl
outsb
cmp
adc
dec
in
ljmp
ss
mov
xchg
jge
cltd
cld
call
hlt
xchg
pop
inc
mov
cmp
loope
cwtl
into
sbb
fnsave
mov
lods
sub
aas
mov
lcall
sub
lods
sbb
push
dec
inc
outsl
dec
ret
mov
addb
pop
lea
dec
and
xor
xchg
mov
mov
icebp
push
push
test
out
dec
mov
addr16
ja
cmp
insl
call
add
push
lea
xor
test
push
sbb
in
push
push
xchg
adc
mov
pop
lods
push
shlb
popf
mov
mov
add
sbb
lcall
mov
inc
dec
pop
fldt
in
cmpsl
cltd
aad
jb
pop
je
pushf
repz
lds
push
jnp
addr16
shrb
ffreep
xor
stos
insl
js
sbb
mov
imul
xchg
lock
pop
jb
movsb
lods
pop
pop
mov
lea
lret
andl
jle
loopne
mov
mov
mov
jnp
pop
inc
test
lahf
cld
fnstenv
inc
inc
pop
addr16
inc
mov
xchg
scas
jg
out
inc
jmp
test
pusha
pop
xchg
repnz
es
nop
sub
test
mov
pushf
leave
dec
fdivrs
loop
lds
or
xchg
sti
mov
dec
sub
cs
loopne
mov
adc
outsb
add
sub
dec
mov
cmc
inc
hlt
mov
xchg
sbb
js
ret
loop
fisubl
adc
cmp
mov
mov
jmp
or
jle
sbb
ljmp
out
roll
or
stc
lods
dec
jg
and
xchg
pop
in
je
sahf
xor
add
int
jb
and
negb
dec
imul
adc
shr
and
dec
or
mov
movsb
shll
sti
insl
and
jle
adc
test
mov
push
mov
scas
cli
mov
icebp
in
out
jl
mov
mov
inc
stc
sub
daa
fidivs
ret
into
stos
mov
inc
pushf
dec
notl
cltd
loopne
cmp
or
imul
scas
jp
jns
mov
cs
fistl
inc
sub
pop
inc
jecxz
push
xchg
xor
jecxz
rclb
int
push
hlt
gs
stc
push
sti
rol
push
dec
in
xor
push
icebp
insb
and
addb
adc
inc
ljmp
clc
ja
dec
inc
test
mov
cltd
or
add
adc
jnp
out
out
sub
dec
out
clc
stos
movsl
popf
inc
sub
movhps
pop
mov
jge
js
add
and
lsl
jl
pop
jb
and
sub
and
adc
ja
or
std
pop
hlt
push
dec
fcoml
sbb
lret
pop
inc
out
adc
sbb
bound
mov
outsl
xchg
push
fcmovnbe
inc
mov
xor
mov
cli
iret
xchg
dec
push
mov
out
adc
stos
fnstenv
add
mov
movsb
push
fisubl
int
cmpsb
stc
inc
push
sbb
mov
jae
shl
hlt
daa
dec
pop
jge
and
push
jecxz
push
sub
inc
dec
and
mov
loop
cmp
xchg
inc
shll
mov
ret
shrb
fdivrl
ss
test
insb
push
mov
jecxz
scas
inc
test
mov
pop
sbb
loope
inc
ret
inc
pushf
loopne
lret
fidivrs
movsl
aaa
xchg
inc
sahf
dec
pusha
sub
adc
inc
js
jbe
loop
pop
and
xor
out
iret
in
sbbb
inc
xchg
mov
pop
sbb
jno
xchg
pop
or
pop
pop
dec
dec
adc
rol
sahf
aam
outsl
push
cmp
int
mov
sbbb
fcomps
aas
add
pop
push
stc
cmpsb
nop
xchg
rcrb
in
repz
int3
lods
bound
test
das
sbb
les
jnp
push
xchg
rcll
adc
xor
dec
pusha
or
push
inc
and
cs
shlb
xchg
movsl
pop
or
fadd
pop
xchg
xchg
stos
stc
cltd
das
shr
daa
in
testl
pop
add
call
jge
cld
xchg
add
push
dec
mov
rcrl
pop
and
dec
pop
xchg
add
pusha
leave
xchg
jbe
ret
std
push
testl
cli
lcall
cmpsb
push
daa
shrl
push
ja
sub
repz
cmp
in
mov
mov
int
or
lahf
dec
or
dec
push
js
pop
rcrl
or
sbbl
imull
insb
inc
hlt
aad
loopne
push
sbb
push
cli
mov
sub
daa
push
sub
pop
xchg
repz
test
push
enter
fimull
mov
jbe
jbe
ja
insl
pop
call
enter
pusha
mov
sbb
add
jne
pop
negl
dec
mov
pop
rorb
mov
imulb
mov
push
lods
xchg
popl
inc
dec
cmc
dec
mov
ss
rorl
mov
iret
inc
fxch
lods
hlt
cltd
fs
or
or
pushf
mov
out
push
mulb
push
jae
fucomip
out
outsl
jns
mov
lcall
imulb
mov
push
in
out
das
das
out
mov
mov
iret
mov
setbe
scas
arpl
mov
cmp
test
test
lcall
aad
jp
insl
insb
mov
mov
mov
inc
imul
sti
daa
jge
ret
call
pusha
movsl
mov
push
mov
mov
fsubr
pop
jle
adc
mov
notl
and
pop
mov
int3
fs
enter
add
out
mov
pop
mov
enter
in
sub
insb
es
in
push
push
in
jbe
and
push
xchg
iret
jo
and
xor
imul
test
jp
add
out
jl
jo
mov
insb
mov
mov
rcr
int3
rcl
cwtl
in
loope
push
add
pusha
inc
push
lods
out
xchg
das
cmp
fistpl
mov
addr16
test
insb
add
jle
or
mov
incl
fdivl
mov
jl
ret
and
cli
out
sti
mov
lret
sub
push
xchg
mov
lock
cs
stos
push
xchg
inc
fisttpll
inc
clts
fldenv
inc
mov
je
faddp
mov
cld
shll
lahf
stos
pop
mov
lods
xor
and
pushl
insb
lret
aaa
xor
shl
out
roll
nop
mov
pop
pusha
fcmovnbe
call
lock
es
and
dec
jg
xor
xchg
into
ret
or
mov
andl
ss
fxam
inc
stc
pop
xchg
xchg
jns
push
jge
add
outsl
mov
jecxz
in
cmp
std
pop
hlt
xchg
rcrl
jmp
or
lret
cmp
das
hlt
test
cmp
dec
addr16
or
les
out
stos
ret
outsb
imul
or
lahf
cmp
and
int
pop
testb
or
adc
jecxz
cmp
adc
imul
rclb
js
cmpsl
scas
cmp
ja
mov
les
dec
dec
out
lea
xchg
cltd
stos
lcall
out
or
into
loopne
pmuludq
popf
and
arpl
das
insl
add
jle
fwait
pop
sahf
sbbb
sahf
and
sbb
bound
push
hlt
and
lods
icebp
int3
addr16
imul
rcll
clc
nop
jle
leave
cltd
and
ret
lea
sbb
mov
dec
int3
jbe
js
std
mov
pop
inc
scas
stos
jge
movswl
mov
movsb
flds
jne
push
lret
ret
inc
pop
addr16
iret
fisttps
xchg
clc
jmp
jecxz
jne
andb
jb
imul
ss
cmp
adc
xchg
lret
test
popa
std
in
test
dec
aas
jecxz
push
mov
dec
test
sbb
imul
movsb
adc
adc
adc
cs
dec
je
addl
into
push
es
sub
shl
xchg
jbe
xlat
mov
scas
rcl
and
xor
push
jecxz
adc
cmpsb
push
cli
sub
imul
lock
iret
divb
push
push
jns
scas
aam
mull
leave
into
xchg
xchg
dec
and
cmp
sbb
outsl
jle
out
js
inc
scas
fcomps
adc
fs
mov
and
fcmovbe
loop
dec
or
add
xchg
arpl
mov
mov
mov
int3
nop
and
ret
mov
cmc
xchg
ljmp
xchg
add
inc
pushf
testb
dec
add
mov
sbb
mov
cltd
imul
imulb
cltd
in
sub
mov
rcrb
add
cld
data16
mov
cmp
ja
pop
dec
jle
add
or
cmp
inc
push
cmp
pop
jl
cmpsb
sub
aam
popf
cs
test
insl
or
fldcw
cmp
fistps
push
add
mov
ret
repz
int
sbb
mul
aaa
bound
out
scas
sar
stos
ljmp
lods
mov
lds
sub
lcall
rcl
pusha
mov
cmpsb
inc
lcall
fiaddl
hlt
test
pop
adc
sub
pop
sub
mov
lea
mov
lock
lret
int3
mov
mov
adc
jl
pop
rcrb
out
hlt
jge
sahf
popl
xor
mov
icebp
fidivl
fwait
pop
movsl
mov
fdivr
xlat
sbb
ja
adc
in
push
cmp
cmp
call
adc
popf
enter
aaa
sbb
flds
pop
mov
repnz
sub
scas
mov
xchg
das
inc
xchg
or
jecxz
sbb
jecxz
jg
sub
add
dec
cs
out
hlt
xchg
jae
jg
leave
or
jmp
xchg
aas
out
xchg
ljmp
stos
mov
fsubr
lret
mov
push
adc
pop
daa
and
imul
jle
hlt
xchg
pop
add
int
roll
outsl
rcrb
fcmovnb
jge
jnp
shrl
sti
idivb
cltd
cmpsl
les
pop
cmp
loope
aaa
testl
fmuls
or
fidivl
lret
ds
pop
mov
shll
jg
jae
das
push
and
adc
gs
mov
jae
sub
add
cmp
xchg
cmp
cmpsb
imul
cmpsb
dec
cmp
and
fadd
mov
jb
in
push
hlt
insb
cmp
pop
xchg
cmp
adc
sub
out
cmpsb
or
fmull
mov
lahf
or
xchg
ljmp
pop
insb
inc
pop
inc
mov
xchg
mov
adc
sbb
lahf
and
pop
bound
enter
bound
add
in
ss
out
out
mov
cmp
sbb
bound
jo
icebp
out
sub
clc
push
jle
lock
nop
add
mov
stc
and
fiadds
fsubl
int
sti
or
imul
popf
sub
jbe
mov
and
jnp
push
cs
jecxz
cmp
inc
xchg
sarb
xchg
pop
or
inc
xorb
sbb
cld
xor
and
push
stc
sbb
fiadds
inc
in
lahf
jp
das
push
and
inc
aaa
ret
push
push
negb
dec
rcll
xchg
imul
in
setno
into
and
adc
mov
dec
and
test
or
insb
imul
int3
outsb
movsl
sti
mov
cmp
shlb
sub
push
cmp
into
pop
sub
ds
mov
sub
sub
imul
sbb
jae
repz
lea
dec
mov
iret
mov
mov
cltd
cltd
hlt
shlb
dec
rcrb
xor
add
call
test
pop
dec
xor
gs
int3
lods
jo
decb
loop
mov
mov
mov
roll
mov
jmp
inc
js
sub
loope
adc
and
pop
xchg
add
sub
rolb
jl
jge
js
ret
popf
mov
mov
hlt
aam
fbstp
inc
adc
dec
mov
loopne
movsl
and
pop
incl
push
push
aas
mov
adc
pop
clc
pop
out
cmp
sbb
movsl
sub
inc
sbb
gs
lods
mov
sub
pushf
mov
cmpsb
insb
mov
mov
xor
in
iret
insb
imul
mov
inc
pop
inc
inc
sub
sti
mov
and
pop
inc
movsb
and
mov
push
stc
jge
add
add
and
add
loopne
ficoms
fnstenv
daa
add
mov
mov
dec
in
sahf
push
jns
mov
xchg
jmp
bound
addr16
mov
cwtl
test
mov
sbb
sti
pushf
imul
idivl
rol
dec
mov
and
sub
xlat
inc
test
push
cmpsb
cwtl
mov
leave
iret
cmp
jnp
cwtl
jecxz
or
enter
jmp
insb
idiv
scas
test
add
ret
inc
in
pop
dec
inc
adc
pop
lods
cltd
jmp
cltd
sbb
mov
js
xchg
incl
aas
mov
push
mov
insb
mov
xorl
rcrb
mov
enter
out
dec
repnz
in
push
cmp
jle
stos
ja
lahf
add
or
add
outsl
or
pop
les
repz
and
sub
lea
and
stos
lcall
and
shl
pop
jb
mov
nop
sub
sub
xchg
jge
lock
adc
daa
jo
jns
add
stc
lea
cld
mov
fcoms
push
lods
push
add
mov
shl
sub
lahf
scas
jle
subl
addr16
addl
xchg
pusha
push
cmpsl
dec
iret
jnp
add
repnz
cmpsb
out
lahf
idiv
mov
inc
cmp
push
dec
mov
xlat
sub
lret
jp
leave
jmp
shr
push
mov
inc
stos
push
scas
lcall
rep
mov
cmpsb
sub
jo
mov
insl
pop
and
push
outsb
jnp
push
mov
imul
neg
sti
lds
xor
add
xchg
outsb
dec
test
hlt
addl
mov
sbb
sub
inc
notb
mov
and
popa
js
out
dec
push
loope
mov
mov
pop
rol
pop
dec
jns
mov
fimull
sbb
cmp
fst
loop
loop
lods
jle
mov
sub
inc
fsubrl
dec
pushf
in
push
mov
lcall
insb
xor
cltd
pop
sbb
mov
dec
data16
das
dec
scas
imul
loop
int3
adc
dec
pop
cmp
sub
lret
mov
lret
daa
fiadds
jle
dec
mov
sub
bound
cmc
pop
lds
lock
lret
ficoml
and
xchg
dec
repnz
mov
cltd
push
popa
or
test
or
mov
int3
fstp
dec
cmp
mov
cmc
xchg
jle
lahf
mov
idivb
pop
mov
and
daa
and
lods
dec
dec
pop
mov
mov
lods
dec
add
push
imul
push
outsl
xor
or
mov
cmp
add
add
push
fwait
jl
or
movsl
sub
lods
imul
mov
stos
jle
icebp
sbb
mov
push
sbb
in
and
lea
ret
dec
or
or
adc
loop
lret
xor
inc
cmc
jbe
insb
ret
cmp
sti
ret
add
pop
filds
xchg
sub
lahf
dec
mov
sub
out
or
inc
lock
xlat
jne
lret
cmpsl
lret
xchg
push
cs
jg
aad
dec
dec
xorb
aas
push
dec
fildll
js
nop
xlat
xorl
pop
or
jne
call
or
pop
jo
ss
idivb
sbb
inc
xchg
les
mov
int3
cwtl
dec
aad
push
xchg
into
jnp
cmp
xchg
addb
out
mov
jbe
dec
push
push
xchg
pop
fildll
ljmp
or
pushf
mov
xor
cld
rcr
mov
mov
push
mov
inc
stos
std
sub
ficoms
xchg
mov
push
adc
jno
lock
fld
inc
xchg
sub
adc
adc
adc
in
call
insl
pop
scas
pop
adc
mov
jl
in
push
dec
add
push
lret
fs
movb
ds
pop
in
mov
imul
loop
rep
adc
push
mov
jmp
and
push
push
pushf
dec
pop
loop
pop
dec
adc
das
aas
mov
dec
imul
mov
xchg
orb
mov
inc
pop
popa
mov
jno
sbb
pop
cmpsl
sahf
dec
arpl
popf
push
xor
ja
dec
inc
gs
push
dec
aad
notb
dec
mov
push
jnp
ljmp
jp
pushl
out
iret
sub
dec
jae
xor
mov
sub
int3
sarb
mov
cltd
lret
mov
icebp
mov
rep
fnstenv
std
fldt
jmp
pop
jg
arpl
loop
je
ficoml
dec
fcoml
push
push
hlt
es
pop
movl
dec
push
cmp
mov
out
je
pop
mov
dec
ss
lock
shll
pop
push
xor
mov
jmp
daa
xchg
lock
xchg
pop
dec
stc
mov
mov
mov
arpl
int3
aam
add
mov
mov
adc
ljmp
dec
and
shrb
mov
imul
cmp
jl
push
ljmp
repnz
ljmp
roll
sub
inc
cmp
ret
jbe
push
pop
cmc
cmp
xchg
addr16
out
les
mov
repz
pop
add
mov
shll
dec
mov
into
inc
pop
shlb
ss
jmp
divb
sbb
ss
test
cmpsb
nop
push
xchg
jl
std
add
sub
hlt
insb
in
xchg
xchg
stos
es
adc
xorl
pop
das
repnz
pop
cmp
jbe
mov
pop
cs
mov
stos
ret
mov
mov
jbe
arpl
inc
push
fs
jo
jb
aas
aaa
movsb
in
and
ljmp
shrb
xchg
je
push
dec
sbb
in
push
and
adc
inc
test
push
inc
add
inc
sbb
cs
nop
jecxz
xchg
jmp
das
add
mov
lahf
dec
inc
sub
aad
jp
pop
testb
imul
jecxz
pop
bound
sbb
cmp
mov
sbb
mov
sub
leave
lret
add
fs
inc
mov
fidivl
or
and
jbe
pop
test
pop
push
into
stc
and
cmp
mov
adc
xchg
push
mov
adc
mov
cmp
test
sbb
add
jns
or
jge
pop
in
mov
pxor
imul
stos
sahf
fcmovbe
sub
mov
pusha
stc
cwtl
addl
xor
int3
jae
pop
xchg
mov
bound
inc
or
inc
cld
aaa
sahf
jp
push
popf
call
lds
addb
add
scas
dec
sub
inc
clc
out
imul
dec
loope
testb
add
dec
or
pop
lods
inc
jle
aaa
and
push
clc
js
pop
xchg
and
popf
jg
xchg
ja
out
inc
push
cli
mov
sub
fcompl
popf
loop
out
lods
mov
sub
jno
mov
scas
rol
jnp
lret
subl
xchg
jae
pushl
dec
pop
adc
adc
mov
and
leave
jne
sub
sahf
xor
add
push
enter
jmp
push
xchg
xchg
scas
mov
scas
sub
push
push
pusha
fisttpll
add
sub
pop
sub
int
push
cmpsl
daa
push
or
in
ret
mov
outsl
push
fmuls
ror
mov
aam
xlat
xchg
push
mov
mov
and
cmp
inc
cmp
mov
lea
push
insb
dec
mov
cmp
dec
or
fiadds
dec
jl
inc
push
xor
jns
popa
inc
xor
rolb
ror
fstps
fs
jae
repz
gs
push
cmp
rclb
cmp
daa
push
push
adcl
sbb
jecxz
sbbl
sub
mov
sub
into
push
sbb
sub
pslld
das
test
push
test
mov
sub
loop
mov
mov
mov
insl
mov
hlt
movsb
mov
call
jecxz
inc
in
sub
stos
insb
jmp
push
imul
mov
shll
out
mov
or
adc
add
jle
nop
add
sub
test
lods
aam
nop
stos
data16
loopne
mov
sub
into
jae
stc
popa
sub
lret
ja
int
adc
and
push
rcr
mov
inc
in
dec
adc
ds
dec
fldcw
test
ret
dec
sbb
add
data16
je
fs
dec
adc
mov
test
in
mov
loopne
in
ficoms
mov
arpl
mov
sbb
and
xlat
cmp
scas
shll
cmpsb
push
ret
subb
adc
add
push
add
cmp
add
adc
mov
out
repnz
jg
ljmp
or
jae
cltd
imul
das
push
stc
push
fsubl
cmp
test
sub
or
lock
push
cs
inc
pop
push
hlt
xchg
adc
jl
pop
xor
push
lods
push
inc
int
icebp
mov
jnp
aaa
cmp
pop
or
and
fwait
les
lret
test
pop
sbb
das
mov
pop
fadds
pop
jge
es
jg
push
xor
or
sti
clc
sub
addr16
and
in
mov
dec
push
pop
xor
xchg
cmc
insb
ds
jecxz
mov
push
and
mov
inc
and
cmpsb
gs
inc
push
in
cli
int
fsts
int3
push
xchg
push
jne
jge
add
mov
lret
mov
xchg
pop
imul
in
pushl
jge
push
icebp
mov
jne
fistl
sahf
xor
shl
ss
stos
dec
hlt
ljmp
daa
pop
in
sahf
sub
dec
notl
mov
insl
ds
cmp
aad
pop
sbb
lea
in
jecxz
inc
mulb
sbb
leave
enter
pop
pop
sub
push
lds
jno
push
adc
das
push
inc
jecxz
les
ror
push
stc
iret
sti
das
jmp
sbb
pop
jl
jns
test
push
mov
jl
pop
and
mov
xchg
fwait
mov
mov
ret
and
push
in
add
xchg
lods
push
imul
lret
mov
cmpsb
xchg
lahf
fwait
enter
scas
mov
cwtl
cmp
push
jge
mov
rep
xchg
jnp
xchg
fwait
mov
add
mov
sub
mov
fsts
push
mov
lcall
iret
cmp
cwtl
sub
jo
xchg
sbb
imul
jae
xor
jl
xchg
in
sar
outsl
loopw
ljmp
test
lods
fcoms
pop
mov
cmpsb
popa
cs
inc
les
and
sti
xchg
scas
pop
cmpl
loop
mov
lods
sub
scas
mov
daa
mov
test
mull
in
orb
fmull
push
out
sub
xor
fistpll
xor
cmp
push
enter
or
addl
lods
lds
lahf
push
add
mov
addr16
xchg
sub
into
sub
aad
call
shrl
mov
mov
or
out
xchg
jge
and
dec
stos
xor
jmp
mov
lret
dec
call
xor
xor
adc
adc
leave
dec
in
adc
sub
pop
mov
pop
fucom
test
jg
sti
jge
test
mov
ds
adc
dec
arpl
loopne
or
mov
inc
lcall
lret
cmp
in
cwtl
push
shrd
mov
and
jmp
lcall
or
jle
aaa
idivl
sub
into
cld
shl
cltd
mov
dec
repz
push
xchg
pop
mov
jo
sbb
and
adc
pop
stos
icebp
jecxz
pop
movsl
adc
clc
addr16
and
loop
mov
xchg
out
in
or
bound
sub
insl
xchg
mov
mov
xor
call
sub
xor
fsubl
rclb
sub
int
or
add
and
insb
ljmp
adc
popf
sbb
adc
mov
or
lcall
fadd
dec
xor
lret
push
cltd
or
sbb
sub
sub
or
aam
sub
jl
adc
mov
sbb
inc
aas
push
adc
lret
pop
stc
pop
mov
cmpsl
in
xchg
mov
lea
sub
andb
dec
ja
rol
ja
sub
xor
cltd
lea
ss
stc
nop
lods
inc
cli
and
sbbl
inc
dec
je
test
push
push
sub
inc
jle
and
lahf
ss
push
and
add
aad
jne
ja
jns
dec
cmp
adc
test
dec
cmpsb
test
std
shll
stos
mov
ljmp
jl
gs
cmpsl
ss
xorl
nop
int
mov
jmp
testl
loopne
aaa
incl
push
inc
cltd
das
bnd
imull
cmp
cmpsb
push
bnd
adc
sub
stos
in
test
mov
popa
loopne
mov
repz
or
test
filds
xchg
dec
aaa
jecxz
outsb
aaa
fstpt
push
in
js
jge
je
jmp
dec
mov
add
lahf
mov
stc
lahf
dec
mov
fmull
stos
dec
sbb
adc
pop
ss
cmp
in
stc
int
adc
pop
aam
in
sarl
add
mov
sahf
dec
push
add
xor
adc
int3
mov
adc
sbb
jbe
in
jns
fbstp
icebp
inc
into
subb
mov
pop
jno
mov
sub
cmp
xlat
sbb
sti
fisubrs
dec
scas
pop
sub
mov
sub
lods
pusha
add
ja
daa
add
sbb
test
mov
stos
inc
out
jne
pop
mov
inc
add
cmpsl
mov
ja
pop
inc
ror
les
shrb
push
mov
mov
adc
jae
adc
pop
movsb
ficomps
rcl
mov
or
push
outsb
xor
dec
frstor
fbld
inc
outsl
mov
pop
adc
add
les
dec
std
pop
jp
test
pop
push
movsl
push
mov
or
and
dec
mov
in
out
shlb
in
pusha
and
mov
daa
rorl
fisubrs
and
xchg
dec
mov
and
pop
out
xchg
cmp
test
mov
push
xchg
add
pusha
std
and
roll
fdivs
pop
or
sub
ds
sbb
test
push
insb
sub
mov
pop
stos
push
jae
pop
jns
xchg
add
jl
adc
testb
test
push
push
lret
shrb
jecxz
sbb
stos
jnp
dec
xlat
sub
adc
aam
loope
adc
popa
mov
push
faddl
push
add
sbb
mov
pusha
sub
test
rorl
push
imul
insb
sub
rorb
popf
jl
dec
and
dec
lcall
scas
xor
cmp
ljmp
adc
js
pop
pop
cmpsb
in
jno
outsb
out
pop
insb
popf
mov
mov
aas
rol
es
xchg
movl
pusha
mov
cmpsb
rcrl
and
pop
pop
add
jnp
addl
mov
xor
aas
rolb
lods
jecxz
int
add
sub
faddl
jo
jl
aam
jnp
aaa
sub
jp
ss
aaa
push
sbb
adc
mov
or
cmp
add
insl
stos
and
sbbl
stos
xchg
cmpsb
sbb
int3
cmp
pop
clc
lds
fwait
jle
outsl
pop
insb
pusha
out
xchg
jge
inc
add
das
les
pop
aas
dec
push
jne
lret
addr16
xchg
scas
test
shlb
add
dec
daa
sub
and
faddl
les
jo
mov
or
cwtl
pop
jo
mov
test
jb
dec
mulb
mov
or
shlb
clc
mov
push
push
mov
cmp
xchg
jle
mov
sti
sub
icebp
add
mov
and
dec
push
and
addr16
movsl
adcl
enter
mov
inc
js
mov
xchg
mov
dec
mov
mov
mov
mov
fcomip
xor
nop
xorb
fstpt
loopne
movsb
aam
push
mov
rolb
adc
std
mov
leave
push
test
push
icebp
mov
roll
aam
add
mov
test
insl
mov
dec
loope
aas
out
lcall
leavew
xchg
data16
lods
and
iret
sahf
gs
jle
nop
imul
mov
push
lret
add
push
mov
and
jns
dec
or
mov
xlat
adc
mov
cmp
pop
rolb
test
sub
lods
icebp
int3
pop
xchg
orb
pop
push
insb
adc
in
mov
sbb
sbb
mov
add
insb
andl
bound
mov
in
ja
cmp
xchg
fnstsw
sarb
lds
mov
sbb
mov
in
pop
mov
and
jnp
and
push
lahf
xlat
sub
jge
xor
iret
in
adc
orl
xchg
sub
jae
rclb
cmp
repz
jl
sbb
xor
mov
push
jecxz
leave
mov
icebp
push
fiaddl
roll
adc
jo
push
icebp
xchg
xchg
add
sub
sti
add
lret
test
pop
lods
shrl
mov
adc
xchg
push
outsl
inc
loopne
sbb
imul
call
iret
or
adc
xor
insl
outsb
xor
decb
es
fwait
jno
dec
in
jmp
ret
adc
mov
ret
push
imul
int3
inc
inc
test
test
add
mov
mov
in
flds
add
xor
lahf
push
repnz
sti
sub
mov
xor
xor
lods
repnz
mov
sahf
jae
icebp
lret
add
inc
ja
xor
test
mov
aam
lret
addr16
inc
roll
in
inc
ds
mov
add
lret
xor
add
add
mov
inc
int
aam
xchg
stos
movsb
pop
mov
mov
lods
hlt
fbld
lea
insb
add
gs
es
push
pop
adc
rcrb
sbb
shll
int3
shrl
inc
popa
movsb
push
ret
mov
loope
out
lahf
fdivs
mov
icebp
jle
popf
jns
cmp
push
pop
add
scas
fidivrs
pop
push
data16
xlat
mov
inc
and
inc
hlt
mov
daa
movsb
data16
adc
xor
xor
scas
arpl
jmp
and
jle
addr16
push
mov
lea
inc
jo
jp
xchg
xchg
enter
imul
int3
jbe
mov
outsl
daa
aad
inc
jl
das
sub
pop
pusha
ret
insb
ret
div
adc
movsb
mov
es
cwtl
pop
fcoml
loopne
add
rclb
cmpsl
mov
shrl
cmpsl
add
mov
sbb
dec
xor
pop
xorb
scas
addw
add
lds
pop
push
pop
test
dec
nop
loop
neg
aad
loop
in
lods
icebp
pop
push
into
sub
cwtl
cld
jnp
fs
mov
add
aam
xor
pop
xchg
imul
ret
dec
jp
pushl
and
insl
and
xchg
inc
repnz
sbb
icebp
jp
xchg
adc
and
inc
mov
test
dec
inc
in
iret
mov
mov
xchg
lahf
hlt
adc
mov
rorb
xor
js
daa
and
int3
sub
pop
in
pop
jmp
test
xchg
ret
xchg
push
push
inc
xchg
and
shlb
pop
mov
mov
push
pop
sub
aad
repnz
sub
dec
pop
pop
aam
mov
pusha
jne
xchg
dec
push
mov
pop
mov
cwtl
xchg
ret
mov
adc
xor
push
inc
js
repz
gs
js
xchg
fldt
xchg
subl
out
lods
sub
jmp
sub
jne
mov
xchg
adc
cmpsl
inc
and
dec
nop
inc
mov
push
fs
xchg
push
mov
outsl
push
pop
in
push
dec
mov
cmpsb
arpl
mov
mov
aaa
test
sub
leave
push
stc
mov
dec
inc
cld
loope
lods
jns
test
or
enter
pop
xor
test
popa
pop
add
inc
mov
js
sbb
push
mov
out
sub
or
and
enter
je
pop
or
xchg
popf
pop
xchg
dec
dec
std
push
jecxz
shlb
cltd
xchg
mov
imul
xchg
add
cli
ss
cltd
fidivs
sbb
cmp
cmp
jns
xor
xchg
or
hlt
dec
ret
xchg
mov
mov
cmp
cmp
in
dec
sbb
cmp
mov
adc
fidivs
cs
push
lock
cwtl
rcrl
pop
insl
sub
jo
pop
aad
icebp
int
cwtl
xchg
neg
adcb
dec
mov
xor
cmp
and
fwait
add
and
jle
lcall
in
outsl
sbb
cmp
es
gs
add
mov
mov
mov
and
mov
subl
jecxz
inc
and
pop
push
sbb
data16
aaa
add
push
mov
xchg
mov
fldt
dec
pusha
pop
xchg
cmp
stos
push
cmc
mov
push
pop
cmp
cmpsb
lea
loopne
xor
push
jmp
mov
xor
push
mov
ja
mov
mov
push
dec
push
pop
rorl
cld
sbb
cmp
mov
add
push
or
les
data16
sbb
lret
out
loopne
mov
jns
test
mov
pop
fwait
insl
jo
push
add
repz
imul
cs
imul
icebp
sarl
dec
mov
cwtl
or
sbb
pop
pop
adc
data16
pop
mov
aas
push
fdivrp
jmp
or
mov
inc
outsb
lods
imul
push
mov
ja
mov
imul
adc
or
sub
inc
add
test
mov
add
push
loope
repz
outsb
add
and
push
stc
int
out
test
ret
add
sub
es
pop
adc
stos
pop
pop
dec
inc
inc
icebp
pop
or
push
jecxz
stos
sub
lods
in
inc
pop
pop
ds
das
add
or
lret
mov
iret
mov
dec
xor
jns
add
jge
push
cmp
test
sub
dec
sbb
aaa
add
sbb
pop
hlt
lcall
adc
andb
leave
inc
cmp
cmp
mov
fnstsw
pop
ds
fs
mov
inc
daa
mov
and
enter
in
test
jbe
mov
jmp
insb
adc
arpl
fidivrl
mov
lahf
inc
pop
aaa
mov
or
imul
jge
xorl
mov
push
or
icebp
pop
popa
int3
std
out
test
or
mov
mov
lahf
outsl
aaa
push
adc
xchg
pusha
addl
clc
adc
sub
mov
push
pextrw
mulps
cltd
popa
adc
lock
test
js
xorps
xchg
sbb
lret
xchg
sub
and
cmp
sbb
dec
push
je
ss
sbbl
mov
jno
push
movsb
inc
aad
mov
test
jno
cs
push
push
adc
jbe
sbb
call
dec
cmpl
in
adc
pop
cmp
mov
lahf
dec
in
and
pop
jmp
add
xchg
push
in
dec
xor
comiss
out
cmc
dec
inc
inc
xchg
dec
mov
subb
push
cmpsb
pushf
mov
imul
inc
es
mov
lret
add
xchg
in
scas
leave
mov
decb
jnp
je
inc
push
dec
insl
lret
mov
xchg
jne
push
adc
popa
dec
repz
inc
push
sbb
into
xchg
inc
ljmp
push
sub
push
or
sub
inc
and
imul
fcompp
push
aad
pop
mov
xchg
pusha
fstpl
mov
sti
or
stos
mov
popf
fbld
add
mov
and
push
add
mov
ss
jmp
or
mov
push
fistps
mov
ret
fwait
leave
sub
aam
pop
mov
fldenv
dec
shl
sbb
xchg
scas
les
mov
insl
sbb
sbb
mov
push
jnp,pt
push
test
jbe
lods
push
pop
ret
adc
jb
dec
shl
inc
pop
inc
les
jge
dec
adc
mov
jle
and
fadds
xchg
js
jl
xchg
lahf
dec
push
and
or
aaa
mov
mov
cmp
mov
cmp
loop
addl
hlt
jl
xchg
mov
adc
pop
adc
cmp
jle
xchg
or
mov
js
mov
or
pop
cmp
or
or
push
sub
and
daa
xchg
dec
call
sub
in
inc
pop
lcall
mov
ds
jae
ffree
jae
adc
fildll
jo
jle
dec
mov
leave
add
test
loope
jl
push
jne
call
jno
cli
sub
rol
pusha
jnp
lret
scas
int
std
ss
mov
out
in
scas
cmp
mov
movsl
lcall
loop
push
insl
mov
test
vcmpps
and
imul
ror
daa
subl
out
mov
mov
mov
mov
xorb
repnz
push
lret
pop
and
pop
mov
bnd
ficoml
jb
xor
xchg
aad
fwait
xchg
dec
insl
cmp
fildl
and
sbb
xor
dec
rolb
sub
popa
push
leave
add
outsl
insb
movsb
loope
push
popa
int3
stos
jg
test
xchg
bound
das
mov
xor
sub
push
adc
mov
out
inc
cmpsb
xchg
pop
adc
push
dec
mov
out
ja
les
mov
test
xchg
in
xor
sub
dec
sbb
filds
cs
pop
xlat
lods
or
add
cmpsl
pop
outsb
pusha
mov
or
aam
shlb
xorb
cmpsl
dec
in
xchg
sbb
cltd
dec
aad
fstl
xchg
out
stc
adc
lods
das
pop
mov
addr16
dec
push
rcrl
pop
fidivrs
popa
mov
test
adc
repz
movsb
mov
add
decl
shll
dec
loope
add
inc
sub
pop
dec
lods
repnz
cmp
les
out
cmp
outsl
mov
xor
or
ds
cmpsb
jo
insl
jmp
and
lods
inc
dec
rcll
std
mov
int3
jns
addr16
clc
jle
sub
xorl
dec
adc
pop
insb
into
or
pop
push
dec
xor
fildll
pop
and
jge
je
pop
add
les
aad
pop
pop
push
mov
outsl
inc
xchg
stc
lea
xchg
cmp
push
adc
add
cld
stos
or
and
shl
mov
cltd
outsl
mov
sub
pop
xlat
fsubrp
sub
dec
imul
jno
lods
push
mov
ljmp
add
dec
xlat
dec
push
jae
or
fidivrl
popf
fnstcw
fwait
in
jo
ficomps
mov
call
pop
movsb
mov
sbb
xor
inc
or
pop
int3
cmp
imul
push
mov
xchg
add
loop
xchg
in
fildll
pop
test
push
xchg
sbb
adc
aas
lock
add
xchg
pop
mov
and
sub
cmp
loope
sub
xor
notb
sti
sbb
mov
push
iret
clc
loop
aad
jno
jne
push
add
cli
gs
out
es
inc
jmp
push
jmp
sbb
push
leave
mov
jp
pop
mov
pop
in
rclb
lahf
sub
pop
push
sbb
movsb
mov
push
es
inc
les
and
jle
cli
push
repnz
sbb
xchg
sbb
mov
scas
xor
xor
addr16
and
mov
cmp
ljmp
sub
mov
mov
xchg
mov
mov
xor
xchg
and
enter
shlb
or
and
ret
cmc
add
mov
pop
sub
push
xor
xor
cmpsb
push
sbb
add
push
dec
mov
mov
or
leave
andb
xlat
mov
insl
cwtl
cmp
xor
sbb
mov
mov
adc
sbb
jg
ja
pop
pop
shrb
cmp
lods
cmp
inc
addl
sub
or
jbe
sti
sarl
mov
roll
into
lcall
add
iret
fistps
into
leave
mov
mov
inc
and
dec
pop
or
jg
loop
dec
in
jg
jb
and
mov
push
xor
adc
dec
push
lock
dec
aaa
adc
mov
les
xchg
inc
sbb
cmc
leave
push
outsb
mov
mov
adc
mov
movsb
sbb
shrl
mov
mov
mov
pop
sub
sub
sbb
mov
outsl
sub
clc
and
fcmovb
imul
xor
out
enter
aas
cmp
div
loop
es
cmp
or
cld
jbe
scas
sahf
ret
push
sub
bound
cmpsl
lret
leave
add
dec
inc
xchg
xchg
fdivp
sbb
xor
sarl
stc
dec
sbb
xchg
in
push
loop
xchg
lret
add
sub
add
pop
sbb
push
andl
mov
rolb
mov
xlat
addr16
out
jae
test
lods
repnz
mov
rorl
loop
or
dec
vcvtpd2dqx
add
add
add
je
gs
je
cli
sub
sti
adc
int3
push
mov
sbb
push
pop
std
jb
loop
ret
mov
cmp
dec
mov
movsl
iret
pop
sahf
sahf
lods
repz
stos
xchg
std
ret
lods
mov
xor
sub
mov
cld
fdivp
and
fisttps
fldcw
cwtl
je
out
dec
pop
inc
nop
xor
xchg
rcrl
cmp
aaa
push
ficoms
rcrb
push
add
ds
and
rol
xchg
push
stc
cmp
roll
ss
call
jno
cmp
mov
mov
int3
scas
out
sub
push
cmpsl
mov
gs
dec
mov
packuswb
and
mov
sahf
dec
mov
jns
cmp
or
jl
pop
and
xchg
push
mov
mov
cmp
xor
sahf
and
gs
add
fbld
cmp
add
or
or
xlat
and
pop
push
loope
mov
popf
cli
jmp
incb
insl
or
test
js
outsb
or
movsl
push
pop
cmp
or
inc
outsb
or
pop
and
pop
out
xlat
dec
mov
xor
sub
iret
push
movsl
mov
jl
mov
jge
aam
xchg
xlat
test
dec
outsb
mov
and
mov
adc
out
cs
sub
mov
mov
dec
xor
aam
jecxz
outsl
mov
add
jp
mov
pop
add
dec
sbb
cmp
ficoml
lods
hlt
and
into
and
adc
jecxz
mov
mov
xchg
jle
lea
xor
sarb
mov
xchg
jge
mov
xor
imul
ret
adc
cmp
push
ja
xlat
push
mov
jb
cmc
lea
addb
aaa
and
icebp
rol
ror
xor
add
xchg
ror
es
int
cmp
pop
test
adc
sub
jae
das
ljmp
rcr
jne
mov
rcl
decb
inc
imul
mov
daa
adc
jb
mov
test
call
mov
mov
outsl
jecxz
loope
cmc
pusha
or
out
insl
add
cmp
outsl
jp
out
push
jns
int
or
in
imul
std
dec
sbb
adc
lods
or
push
mov
lock
pop
xchg
cmpsl
mov
push
and
and
das
mov
sub
push
ljmp
dec
mov
pushf
and
and
sub
mov
popl
test
mov
rol
and
push
inc
or
scas
adc
fiadds
sub
adc
pushf
pusha
leave
lds
add
idivl
ja
or
ja
mov
add
xchg
test
stc
sub
sbb
adc
shufps
pop
jle
jo
mov
xor
outsb
decb
je
aaa
in
mov
or
aaa
lods
push
lods
popf
std
sub
fildl
arpl
int3
push
mov
test
ja
outsl
dec
andps
cmp
dec
fs
clc
dec
imull
test
sbb
jae
mov
sbb
xchg
cs
and
pop
jns
bound
mov
pop
rcrb
ljmp
loopne
or
sbb
gs
or
sahf
push
aaa
insb
dec
cmp
and
cwtl
rclb
xchg
cwtl
popf
imul
inc
in
xor
std
xlat
mov
adc
mov
inc
popa
mov
or
rorl
inc
dec
mov
aaa
adc
sub
fs
and
dec
sbb
mov
movsl
mov
pushf
call
jne
stos
inc
push
push
fnstsw
mov
ss
adc
and
jae
pop
push
in
push
jnp
pop
dec
or
stos
pop
popa
test
mov
lods
jno
std
inc
mov
testb
or
aad
stos
loopne
xchg
and
scas
aaa
into
sbb
cld
lret
data16
ret
stos
inc
aam
adc
repnz
rcrl
xor
adcl
sbb
mov
ss
push
mov
inc
ret
cs
mov
les
push
push
adc
cmc
test
mov
out
mov
push
inc
fisttps
jg
xchg
lahf
sub
sahf
js
mov
mov
add
leave
sub
in
pop
or
loopne
xchg
jmp
mov
sarl
jge
push
fstpt
fwait
shlb
cmp
dec
and
cli
jecxz
sarl
jae
jmp
jbe
ss
xchg
xor
in
push
xchg
mov
jl
shlb
lds
stos
imul
mov
imul
pop
ret
jl
pop
mov
imul
dec
mov
fdiv
jmp
xor
test
jecxz
jo
mov
or
and
inc
mov
xchg
loop
daa
es
mov
outsb
lahf
xor
in
mov
and
sub
adc
cmp
adc
xchg
pop
repnz
mov
or
cmp
push
daa
sbb
cmpsb
out
jmp
or
shrb
inc
loope
out
test
ja
xchg
dec
sbb
and
fwait
inc
fsubl
aaa
in
jo
mov
dec
insl
mov
pop
sbb
jg
cli
mov
loopne
xorl
inc
mov
loopne
cld
rclb
push
in
loope
test
std
movzbl
int3
mov
repz
test
mov
fwait
mov
gs
inc
jbe
mov
xchg
jne
pop
pop
fldt
outsb
sub
in
xor
inc
gs
pusha
nop
cmp
daa
imul
or
adc
mov
adc
arpl
bound
clc
in
divb
pop
jbe
pop
test
adc
cmp
mov
jl
mov
out
add
add
mov
mov
dec
orb
push
push
mov
and
aad
subl
arpl
jge
mov
mov
js
into
es
lret
sarb
push
push
jne
mov
scas
mov
jp
mov
add
loope
dec
in
in
icebp
mov
iret
ljmp
or
add
jo,pn
push
fwait
mov
xchg
sti
lahf
cmp
iret
daa
mov
outsl
xchg
push
pop
dec
movsb
jb
repnz
cli
divb
negl
push
xor
dec
rcrl
jnp
cli
cmc
inc
and
push
fadds
stos
imul
xor
mov
fs
hlt
icebp
enter
inc
sahf
and
cmp
orl
dec
cmp
adc
cmpsl
stc
out
movsl
pop
fstps
sbb
cmpsl
std
xor
pop
pushl
arpl
mov
loop
jge
je
in
mov
loope
ret
dec
mov
mov
xchg
in
xor
push
sbb
cmp
jno
sub
or
lret
test
in
cmpl
mov
ficoms
jae
imul
adc
dec
lret
mov
mov
xchg
insl
out
mov
pop
fsubl
cs
sti
cmpsl
in
in
sbb
test
xor
mov
or
pop
pop
pushf
sbb
stc
xchg
insl
xchg
popa
xlat
popf
int3
sbb
fldl
repz
xor
fwait
in
adc
inc
jg
in
loop
popw
sbb
xor
repnz
outsb
dec
into
inc
or
inc
add
fstl
sbb
lret
mov
adc
shlb
leave
dec
push
xorb
mov
pushf
movsb
jne
lods
sahf
pop
dec
xor
pop
mov
adc
mov
jno
lods
stos
pop
in
ja
out
jge
les
iret
aas
movb
push
xchg
data16
popa
or
and
rcrl
bound
mov
pop
push
push
or
mov
push
mov
pop
icebp
jne
or
sbb
sbbb
scas
mov
gs
sarb
push
inc
stc
aaa
lea
in
hlt
cld
cmp
lock
mov
add
ret
sbb
popf
dec
inc
dec
lcall
out
mov
sub
cli
xchg
xchg
mov
sub
xchg
nop
movsl
es
xchg
sarb
mov
dec
jmp
sahf
movsb
add
dec
push
lahf
adc
add
mov
cmp
fdivl
push
jae
pop
aad
jmp
sbb
mov
mov
or
mul
pop
mov
mov
adc
loope
sbb
pop
hlt
xchg
or
sbb
jns
clc
repz
sub
sbb
sub
mov
ret
test
pop
jmp
xchg
or
push
push
imul
add
mov
mov
daa
mov
pop
fisubs
jo
xchg
clc
es
lahf
insb
int3
jg
push
stos
mov
les
add
jnp
into
inc
and
lock
jl
nop
std
je
scas
les
out
sub
addr16
push
fs
rorb
shrl
rcrb
jb
sub
pop
mov
rcrl
or
jl
rclb
fiaddl
adcb
lods
repz
xor
push
lret
dec
xor
aad
sub
mull
push
jl
lret
clc
loope
add
lahf
push
hlt
rolb
ja
xor
adc
aas
dec
jl
sarl
and
cld
inc
sbb
stos
add
sub
sbbb
jo
call
mov
fdivs
pop
push
iret
pop
sti
xor
pop
ficoml
cli
mov
sahf
stc
es
pop
push
add
push
test
mov
cmp
cmp
icebp
es
test
mov
add
popf
iret
mov
fiadds
mov
xor
xchg
add
inc
int3
loop
jae
out
jns
cmp
xor
jmp
movb
addr16
mov
lret
mov
lcall
pushf
dec
aam
pushf
jg
pop
das
add
push
je
aad
imul
or
push
nop
nop
stc
and
jno
movsb
popf
cwtl
mov
test
scas
cmp
dec
lods
jmp
or
dec
mov
call
in
cs
cmp
sti
insl
jp
add
aad
push
pusha
test
das
adc
or
jge
sub
cmp
dec
fidivl
xor
add
stc
mov
adc
test
into
aas
mov
cmp
dec
mov
ret
popf
inc
mov
cmp
icebp
adc
cmp
mov
pop
fisttpl
sub
cmp
xchg
xor
pop
cmpl
sbb
mov
dec
adc
push
insb
jne
or
out
sti
jb
out
dec
jae
lds
bound
movsb
out
dec
add
jo
in
xor
jp
pop
stos
push
xor
push
mov
or
mov
cmp
jle
ds
or
dec
pop
mov
cmp
enter
aam
push
rcrl
adc
insb
cmpb
mov
mov
out
jbe
push
xchg
rcrb
lods
je
aad
xchg
pop
icebp
mov
dec
mov
xlat
ds
push
adc
add
divb
mov
mov
add
clc
inc
xor
pop
ficomps
into
imul
xor
neg
push
jmp
jg
mov
pop
dec
adc
testb
xchg
shll
icebp
xchg
and
or
scas
pop
dec
xor
xlat
xor
lods
xchg
pop
hlt
cmp
mov
aaa
inc
insb
hlt
and
mov
inc
scas
addr16
xchg
sub
mov
dec
mov
fwait
hlt
add
les
add
push
mov
pop
ret
movsb
xor
fstps
movsb
call
push
inc
xor
das
lahf
popf
dec
rclb
pushf
jo
or
cmp
push
fidivrs
lret
cs
inc
jge
and
lods
pop
inc
aas
xor
cs
jb
cmpsb
cmc
jmp
loopne
cld
inc
int3
sbb
mov
int
inc
add
iret
dec
data16
out
mov
push
and
mov
cmp
push
movsl
arpl
adc
or
testl
sbbb
mov
outsb
push
xchg
xchg
push
xor
ret
push
sub
addb
nop
xchg
arpl
fbld
icebp
scas
adc
add
imul
fists
jns
mov
jb
and
inc
and
cltd
mov
mov
jne
lahf
lods
push
dec
loopne
sub
cmp
mov
sarb
inc
aad
jne
jb
dec
pop
mov
push
xor
pusha
jl
pop
dec
xor
xchg
mov
add
lock
inc
jne
add
scas
pop
and
dec
ret
cmp
call
popl
fistps
mov
mov
jne
push
dec
ror
jns
test
adc
xor
push
dec
mul
push
pop
rcrl
fdivl
mov
mov
xlat
repnz
push
ret
sbb
and
inc
cmp
aas
push
mov
pushf
sub
pop
sub
xlat
mov
dec
orl
inc
int
xor
loope
jno
xchg
mov
mov
addr16
sbb
adc
ss
push
add
aad
fs
arpl
sub
xchg
pop
adc
and
adc
sbb
cmpsb
or
push
jge
sbb
jmp
xchg
sub
or
push
pop
out
and
dec
sub
dec
jne
cmp
push
sarl
add
or
cmp
inc
mov
rolb
lret
cli
mov
addb
push
xchg
and
daa
pop
pop
test
push
or
dec
es
rcrb
rcrl
enter
sub
or
fisubs
addr16
pop
insl
cmp
nop
das
jecxz
pushf
mov
fcmovne
je
mov
mov
jae,pt
cwtl
ret
jle
ljmp
jmp
mov
repz
iret
cli
gs
pop
sbb
push
ja
fisttpl
pop
stc
jle
and
out
and
cwtl
dec
xchg
shrl
lea
mov
sub
xor
scas
inc
pop
repnz
adc
and
and
out
jno
push
lcall
xchg
nop
loop
xchg
insb
andb
imulb
jecxz
scas
mov
mov
test
jo
cli
sub
mov
nop
push
jmp
and
pop
aas
cmpsb
hlt
or
or
cwtl
call
sbb
fsubs
fmull
addr16
lahf
mov
popa
mov
in
dec
and
dec
cmp
lods
in
cmp
and
cmpsb
movsb
sbb
clc
mov
les
inc
test
add
add
movsl
dec
or
movb
xchg
inc
outsb
mov
inc
pop
lahf
popf
movsl
test
enter
mov
imull
push
jge
cmp
add
jg
sbb
xor
mov
aas
imul
pop
ret
gs
mov
enter
fwait
mov
and
cld
scas
addl
hlt
fbstp
dec
mov
mov
and
cwtl
adc
pop
mov
add
ja
cltd
mov
mov
push
xor
push
jne
adcb
jns
sub
fidivs
insb
fidivrl
mov
jge
dec
and
xchg
cli
scas
pop
cmc
cmpsb
push
bound
cs
jmp
xlat
jae
jmp
or
mov
xchg
lret
and
jnp
test
jbe
aas
mov
mov
pushf
fstpl
fwait
scas
adc
xchg
add
inc
cmp
pop
mov
jecxz
mov
mull
hlt
das
ss
add
inc
addb
cmp
jo
icebp
mov
out
jbe
in
jg
xchg
xchg
hlt
es
scas
ret
push
xchg
push
imul
aam
sub
dec
pop
fdivr
push
das
or
outsb
mov
jecxz
iret
pop
xor
rcr
or
dec
scas
xor
ljmp
xor
mov
mov
jg
jecxz
imul
push
pop
fs
xor
pop
pop
stos
enter
lahf
pop
loopne
ret
xor
dec
repnz
adc
mov
pop
shrb
push
jl
inc
leave
add
dec
out
fs
das
int3
cmp
dec
mov
jno
and
dec
rclb
movsb
vpcmpgtb
mov
xor
addb
aam
cmpsb
cmpl
jnp
xchg
mov
cmp
es
pop
mov
cmp
add
dec
pusha
pop
xorb
adc
jbe
push
lcall
idivb
jbe
movsl
dec
mov
jg
lcall
outsl
mov
mov
stc
jl
inc
dec
mov
repz
fwait
fwait
int3
mov
hlt
fsubp
popf
aaa
cli
imul
mov
and
fdivp
dec
insb
stc
sarb
in
mov
sub
sti
stc
stos
jp
ljmp
popa
pop
xchg
xchg
ljmp
int
cmp
mov
push
sub
ret
mov
add
mov
pop
imull
fildll
mov
xchg
aam
bound
lds
imull
jb
mov
xor
cltd
orl
cmp
jmp
xchg
popf
loopne
jg
mov
add
fxch
daa
popa
mov
test
cli
loop
imul
dec
push
sbbl
shl
inc
cmp
rcrb
lret
lock
dec
pop
xchg
push
int3
jnp
jge
cmp
inc
filds
push
in
pop
movsb
dec
xchg
adc
shlb
repz
adcl
mov
jmp
scas
jb
stc
call
xchg
subb
mov
adc
add
mov
ret
adc
jno
iret
mov
out
stos
ja
sub
and
push
push
stos
sbb
pop
jno
lret
push
mov
add
not
imul
pop
stc
sbb
inc
ret
scas
mov
enter
fcoml
loopne
aad
rorb
dec
cmp
pop
outsb
cmpb
mov
clc
mov
pop
mov
dec
lret
sub
adc
nop
sbb
rolb
lcall
jg
pop
and
outsb
test
xor
in
lock
adc
icebp
sbb
inc
adc
lock
xchg
jno
lods
popa
or
sbb
push
insb
iret
shr
add
cmpl
dec
outsl
jbe
dec
cwtl
jnp
push
nop
sub
enter
dec
sbb
fidivrl
push
mov
mov
mov
mov
sub
jbe
add
pushf
adc
jo
repz
in
push
stc
flds
push
mov
loope
xor
in
es
fcmovu
call
mov
scas
xor
adc
jmp
leave
adc
stc
inc
stc
dec
push
in
add
inc
hlt
dec
fistps
xor
jb
shll
xchg
mov
xor
bound
jbe,pn
pop
dec
das
adc
mov
pop
mov
pop
pop
ss
jne
mov
sub
insb
mov
xchg
xchg
jno
imull
shll
inc
push
bound
into
fnstenv
jae
stos
sub
sbb
nop
add
outsl
mov
and
jp
xor
and
fldl
or
xchg
pop
jo
ret
mov
icebp
pop
sub
jmp
and
dec
adc
push
jge
xchg
mov
adc
and
xor
aaa
gs
and
arpl
xchg
in
mov
testb
sbb
jae
xor
fsubrs
pop
jnp
xor
and
pop
dec
add
pop
push
dec
add
xchg
bound
and
pushf
or
mov
gs
xchg
mov
mov
pusha
addb
fdivl
jle
add
enter
into
scas
mov
fcmovb
stos
pop
xchg
fbstp
push
mov
or
push
outsb
pop
stc
jo
out
push
sar
ljmp
mov
addb
cmp
pop
mov
pop
mov
lahf
in
xor
cmp
shl
sub
adcb
sbb
jg
cmp
cld
dec
adc
pop
or
pop
fmuls
or
lock
negl
jnp
das
in
push
stos
ret
push
sub
push
adc
xor
ret
and
dec
xchg
cmp
pushf
std
iret
add
out
ret
or
dec
stos
cmp
xor
movsl
cld
in
xor
pusha
add
inc
mov
pop
mov
ret
test
push
int
adc
shrb
cmp
cmp
lods
sub
int
out
mov
dec
and
std
cltd
ja
dec
add
leave
dec
arpl
mov
enter
or
xlat
and
jmp
add
pop
jne
arpl
and
fbstp
fnstcw
addl
in
mov
test
pop
sub
pop
clc
push
incl
mov
adc
fimuls
enter
cmp
mov
inc
or
std
cmp
daa
or
mov
in
xor
xchg
testb
mov
pusha
outsl
in
jl
sbb
fwait
lret
inc
add
add
nop
jne
add
jecxz
es
in
mov
adc
arpl
mov
mov
sbb
cwtl
dec
mov
shrb
sti
lcall
mov
test
int3
add
in
ljmp
popf
hlt
nop
mov
jge
mov
rorl
add
jne
and
fbld
cwtl
cmpsl
inc
mov
mov
mov
out
add
jbe
mov
ljmp
mov
icebp
test
xor
xor
aas
push
aam
ds
xchg
push
movsb
xchg
fdiv
jg
and
mov
in
adc
jge
mov
push
cld
sub
mov
mov
and
dec
imul
mov
dec
addr16
movl
out
push
lret
inc
out
cmp
inc
out
insl
popf
push
add
lds
inc
fcomip
push
adc
fldt
stos
gs
xchg
xor
cs
push
mov
xchg
mov
pushf
mov
negb
mov
iret
adc
lcall
dec
push
xlat
lahf
frstor
addl
loopne
dec
test
daa
sub
or
ljmp
rclb
sub
cmp
add
stc
inc
lods
lcall
je
dec
std
jle
leave
clc
mov
cmpsb
push
or
jns
inc
in
jecxz
in
add
sbb
aas
inc
cmp
leave
mov
jo
addb
cmp
jp
mov
rorl
inc
out
inc
int3
repz
gs
fists
jmp
and
pop
dec
mov
mov
stc
into
mov
inc
jl
loopne
fistpl
add
in
sbb
inc
stc
les
push
xchg
imul
inc
jno
and
mov
test
rorb
xchg
cmp
loop
and
or
and
jne
mov
push
sahf
pop
cmp
push
mov
cmpl
es
repz
sub
or
pop
inc
push
lret
jo
repnz
lea
pop
mov
push
xchg
xlat
cltd
jo
pop
xchg
push
dec
mov
adc
std
ss
les
push
or
movq
fmuls
xor
cwtl
pop
mov
mov
sub
pop
add
insb
jnp
mov
or
xchg
pop
cmp
inc
outsb
cmp
jo
test
imul
push
dec
and
pusha
outsl
inc
divl
stos
rcrl
out
mov
push
pop
jg
cmp
dec
sbb
adc
decb
cli
pop
sbb
sahf
jo
fimull
sub
int3
mov
push
sbb
cmpl
leave
js
mov
sarl
popa
xchg
mov
inc
scas
testb
sahf
xchg
inc
inc
testb
pop
jge
jo
sbb
xchg
dec
fdivrs
shrb
adc
mov
push
in
push
jl
add
ficoms
outsb
sub
ret
inc
add
pop
jbe
jae
inc
jb
js
cwtl
sub
jl
inc
mov
rcrl
ret
mov
mov
and
sar
test
test
jmp
data16
mov
mov
jae
sbb
mov
sub
shll
mov
movups
xchg
pop
dec
popf
aam
push
push
jo
sbb
or
or
mov
iret
outsl
mov
jl
mov
addr16
inc
enter
adc
xor
mov
pop
xorl
pop
jno
and
mov
sub
lods
push
or
push
int
and
into
sbb
aas
cmp
test
hlt
adc
cmpsl
fwait
pop
xorb
icebp
inc
fsubrl
cltd
add
call
cli
int
pop
xchg
xchg
fldcw
lea
fsin
fimull
hlt
sahf
mov
add
mov
sub
icebp
les
or
jns
shll
les
and
push
cmpsl
mov
cltd
jecxz
lret
jle
dec
dec
mov
clc
data16
dec
cld
cmpsb
push
ss
jnp
inc
xor
lcall
fs
stc
out
sub
adc
sub
sbb
mov
and
jo
mov
lcall
push
pop
sub
in
jb
insl
xor
cmp
push
hlt
imul
cld
xchg
out
pop
mov
dec
mov
xor
inc
xchg
repnz
daa
adc
mov
cmp
adc
mov
sbb
cli
push
adc
mov
faddl
jle
jp
in
mov
xchg
pop
into
xor
es
add
adcl
cmc
cld
jmp
xchg
and
cs
or
fstpt
stc
jl
insb
push
and
jns
aam
and
xor
pop
pusha
fdivrl
int3
push
or
lret
cmpsb
dec
adc
iret
pop
in
ljmp
sahf
fnstcw
mov
stc
xor
divl
xor
lahf
or
pop
pushf
adc
xchg
test
sub
inc
inc
outsl
pop
aad
push
pusha
lahf
adc
or
xorl
xchg
addr16
rorl
imul
ret
inc
sub
mov
sub
add
inc
movsb
add
lods
mov
pop
in
popa
test
lret
add
lret
add
loopne
outsb
cmp
mov
loope
mov
scas
fs
mov
scas
or
jo
ror
push
cli
mov
fwait
data16
mov
lods
mov
mov
aas
addr16
or
hlt
popa
push
sub
cs
out
dec
ror
hlt
or
jg
mul
dec
jmp
aam
cmpb
mov
dec
addl
es
sbb
stc
xor
out
push
icebp
add
sahf
mov
sub
push
arpl
pop
fs
and
imul
sub
push
add
mov
out
jae
mov
jge
fistpl
dec
movsb
xor
mov
ret
popa
cmpsl
ret
iret
xchg
sti
pushf
int
jae
push
xor
out
jno
fnstenv
dec
push
add
test
loope
xorl
adc
sbb
out
xchg
lock
jb
mov
mov
in
pop
pop
test
inc
stc
incl
mov
or
and
inc
cmp
into
lea
and
test
or
sub
imul
je
dec
and
ljmp
jecxz
jnp
aam
ss
int3
adcb
aas
push
lds
loop
mov
mov
sub
sub
mov
lock
iret
xchg
ja
add
cld
inc
imul
push
ljmp
xchg
push
out
cmpsb
pusha
mov
and
call
rep
pop
pusha
aad
sar
popa
lcall
dec
int3
cmp
xor
add
daa
push
pop
imul
sbb
insb
aas
dec
mov
icebp
sub
xor
lea
mov
dec
inc
mov
addr16
mov
mov
inc
push
pop
andb
in
cmp
mov
or
clc
mov
or
outsb
sarl
rcrl
out
hlt
mov
sub
inc
mov
add
dec
test
mov
xor
lahf
in
jle
fsubs
ja,pt
and
imul
pop
mov
sbb
sub
or
rorl
inc
rcrb
cli
xor
out
mov
cmp
add
pop
bound
pop
or
cmp
dec
xchg
in
push
xor
mov
test
rcl
dec
xchg
addr16
cli
or
lret
cmc
arpl
testb
ja
or
loope
xor
dec
fisubs
push
nop
mov
sub
cwtl
pop
cmpsl
nop
cwtl
dec
fmuls
outsl
iret
sbb
bound
pop
shrl
aas
mov
pop
and
or
test
outsl
movsb
adc
xchg
mov
aas
rorl
in
js
jmp
jle
cmpl
sbb
iret
sub
add
es
test
aam
jmp
push
sbb
add
fwait
mov
nop
jnp
sub
je
pop
inc
mov
add
mov
mov
rorb
mov
jae
xor
inc
xchg
xchg
push
push
xor
setnp
int
clc
or
jecxz
jae
ljmp
sbb
bound
pop
mov
adc
and
pop
lahf
into
fs
into
dec
or
enter
ja
xlat
sbb
and
and
push
mov
std
push
push
xor
mov
mov
filds
and
ficomps
sahf
cmp
imul
cltd
insl
shll
jo
dec
inc
test
stos
mov
inc
dec
mov
leave
or
mov
js
xchg
add
pop
lds
and
push
enter
in
xor
leave
jmp
or
popl
repz
into
fnstenv
repz
int
adcl
inc
xchg
aas
add
testb
mov
stos
and
sbb
notl
xchg
std
stc
jg
ja
out
pop
fwait
sub
sub
shl
sub
shrb
int3
and
test
sbb
arpl
jbe
cmp
mov
aaa
aaa
sbb
fidivrs
mov
inc
mov
jl
fstp
lods
enter
mov
adc
lcall
shlb
push
fldcw
fdivr
push
push
outsb
loopne
das
add
fisttps
test
arpl
popf
jg
mov
je
pop
mov
ficompl
dec
fdivrs
adc
pop
rorb
js
dec
add
pop
mov
pusha
adc
aaa
adcb
ds
test
cld
push
shr
repnz
jno
and
sub
xchg
jne
loop
lret
or
mov
mov
outsb
stc
jecxz
lock
filds
repz
movsl
mov
xor
xchg
push
mov
push
xchg
test
xchg
lock
sbb
mov
and
int3
dec
cwtl
jmp
movsb
xor
sbb
xchg
andb
sbb
cli
push
int
es
mov
nop
push
add
mov
pusha
fldt
aaa
in
rorb
add
popa
and
jne
lods
out
clc
je
cli
xchg
inc
inc
dec
sahf
xchg
adc
insl
cmc
xchg
lds
sbb
in
jns
inc
sbb
leave
sbb
nopl
pop
jl
xlat
imul
cmp
sbbb
stos
xchg
rcll
push
mov
mov
xchg
popf
cmc
jmp
and
inc
scas
cmp
sarl
and
dec
push
mov
jo
jae
mov
sti
int3
mov
lds
cmpl
inc
jl
enter
adc
jo
lock
push
shll
stos
test
mov
sahf
imul
inc
xchg
jge
or
in
add
push
clc
js
or
fistpll
lods
sahf
mov
add
sti
push
lds
sbb
movsl
mov
xchg
pusha
mov
sub
cmp
iret
les
call
add
imul
js
push
dec
mov
adc
out
loope
and
or
cmpsb
pop
ret
shrb
and
xor
sbb
imul
jo
into
icebp
loopne
clc
xor
insb
shlb
stos
lds
aam
jbe
fbld
adc
loope
push
sahf
sahf
scas
jge
mov
sub
xchg
inc
ljmp
push
or
dec
jbe
mov
mov
adc
stos
add
xchg
lret
ss
je
scas
mov
xor
mov
xchg
rcl
lock
aas
loop
insb
enter
sbb
push
jle
popa
xchg
mov
je
sub
enter
cmp
leave
dec
rcll
outsl
fmuls
mov
jbe
nop
adc
jae
mov
lret
add
scas
add
repnz
xor
shl
movsb
push
mov
xchg
push
repnz
jmp
ss
push
lods
and
lock
arpl
lret
ret
mov
jp
stc
push
push
xor
inc
dec
fistps
leave
xchg
repz
push
pop
xor
adc
sti
xchg
call
loopne
mov
mov
xor
cwtl
test
jns
jmp
mov
aad
mov
mov
shll
xchg
xchg
ljmp
jns
stc
ret
or
cmc
notb
mov
dec
test
cmp
adc
cmp
mov
je
adc
sbb
inc
insb
dec
adc
mov
in
je
jo
jmp
xchg
ljmp
xor
add
ss
sarb
sub
mov
mov
dec
xchg
push
inc
pop
popf
adc
cmp
sbb
jnp
inc
push
xchg
mov
inc
iret
in
push
xor
fwait
xchg
jno
pop
inc
cli
into
and
call
adc
push
jg
sub
and
aad
push
cmp
mov
inc
inc
in
pop
loop
xchg
lock
aam
data16
mov
xor
xchg
in
mov
nop
inc
fdivr
shlb
fmull
pop
sbb
data16
hlt
mov
add
icebp
jl,pt
test
xchg
sarl
fists
js
ja
cld
pop
jb
cmp
out
inc
es
scas
push
call
sbb
push
mov
fisubrs
call
inc
mov
aas
push
aaa
sub
pop
pop
cli
inc
jne
das
dec
lahf
out
lods
imul
andb
mulb
lea
xchg
out
and
movaps
lea
mov
into
add
cld
mov
add
dec
pop
jbe
insb
sub
sbb
cmpsl
lods
fildll
loope
enter
jge
ljmp
or
pop
ja
add
sti
test
mov
scas
and
icebp
jge
push
lods
leave
iretw
adc
jp
test
mov
ret
push
xlat
loop
es
fstl
pop
jle
shll
push
jnp
pop
xor
pop
sbb
cmp
jg
push
andl
test
adcb
jno
movsl
subb
pop
lea
cmp
pop
daa
int
adc
or
or
ret
repz
pop
xchg
out
xlat
jne
stos
or
sbb
rcrb
or
push
xchg
test
mov
pop
adc
shrb
jg
pop
or
leave
adc
pushf
sbb
js
jbe
mov
pop
orl
ret
push
push
or
int3
and
pushf
fnstenv
and
mov
or
pop
mov
cld
sbb
in
push
std
into
sub
orb
or
lea
and
flds
xchg
aam
xchg
pop
dec
mov
adc
cmp
dec
push
dec
xor
repnz
push
int3
js
pop
xor
in
pop
lock
sub
insl
mov
xchg
mov
outsb
mov
cmp
dec
sarb
shr
lea
fdivs
adc
lock
out
dec
and
fdivrp
iret
sub
pop
roll
jle
mov
aaa
rorl
outsl
and
cld
adcb
es
loop
aas
pop
xor
inc
jecxz
mov
xchg
data16
inc
lret
rclb
add
aas
mov
xchg
pop
aad
insb
push
movb
fucomip
xor
pusha
fistl
sub
jne
mov
ja
rcrl
jbe
cmc
fdiv
repz
movb
pop
adc
mov
shrb
cmp
xchg
push
xor
add
sbb
mov
fimull
repz
fstl
cmp
out
imul
in
outsl
ret
add
lods
addps
loop
sbb
cmp
mov
dec
cltd
ss
scas
or
pop
ror
xor
cld
sbb
pusha
pop
cmp
shrl
aad
punpckhbw
fidivrs
sub
and
test
jne
xchg
sbb
sbb
xor
pop
xchg
sbb
dec
jmp
dec
and
loope
mov
sahf
mov
xchg
mov
out
mov
pop
arpl
loop
fs
jge
push
cmp
pushf
dec
jae
scas
pop
popa
inc
pushf
mov
xchg
pop
mov
stos
push
data16
jns
mov
mov
daa
mov
hlt
xor
adc
ud2
add
sbb
stc
adc
mov
notl
adc
stc
cltd
subl
xchg
jecxz
or
jmp
stos
xchg
adc
and
or
sbb
shl
decl
push
adc
mov
ja
mov
xlat
push
mov
test
lret
jb
push
sub
lret
in
jle
test
test
jle
mov
sti
or
cmp
push
lods
jo
adc
idivb
out
pusha
outsl
push
jmp
loop
pop
out
mov
jno
mov
push
dec
imul
cmp
pop
and
xor
pushl
fcom
push
insb
pop
sub
lods
js
je
jle
jl
enter
sub
data16
das
leave
loop
shl
mov
inc
mov
jecxz
xchg
enter
data16
sub
lods
inc
xchg
add
pop
mov
push
inc
test
pop
inc
lahf
inc
lods
mov
pop
push
cli
mov
xor
mov
or
add
enter
cmp
mov
in
dec
outsl
data16
jbe
ljmp
xorl
mov
lcall
repnz
xchg
and
mov
subb
sub
lahf
fstps
out
or
cmp
mov
and
xor
mov
dec
inc
adc
jg
imul
and
jp
sbb
xor
push
stc
rcrl
inc
mov
shrl
dec
adc
pop
sbb
or
in
inc
mov
out
mov
mov
pop
test
xchg
movsb
push
int3
shl
dec
pop
cmp
fildl
sub
dec
sbb
inc
cmp
push
push
sub
jge
xor
xchg
outsb
sbb
inc
inc
leave
mov
pop
ss
inc
ss
adc
ret
test
fwait
nop
into
adc
lock
out
or
xlat
mov
jmp
cmp
xor
leave
xchg
lcall
daa
pushf
pop
jno
lret
jg
or
stos
sbb
sub
cmp
sahf
rcl
jg
popa
cmp
cmc
and
and
icebp
sarb
sbb
addl
lock
orb
test
add
xor
lds
rolb
sbb
cmp
jmp
adc
dec
mov
push
loop
fsubs
jg
lods
dec
inc
data16
jno
push
fadds
cmp
fdivs
decl
in
push
scas
ja
jb
fldl2t
adc
adc
mov
fs
scas
xchg
inc
push
xchg
mov
cs
lds
ret
into
popa
data16
dec
add
ror
hlt
fistpl
repz
sub
and
mov
inc
mov
or
push
int3
xor
cmp
xor
mov
cmp
in
inc
enter
loopne
and
push
sahf
adc
mov
adc
pop
inc
jne
jp
lock
shrl
rclb
mov
sub
jg
push
hlt
imul
adc
jae
imul
lahf
sbb
das
scas
pop
mov
dec
insl
sub
cwtl
jnp
lcall
data16
inc
mov
jae
notl
orl
adc
add
iret
rclb
adc
xor
xor
test
jae
mov
out
pushf
and
jo
jmp
push
lock
cld
lret
xor
inc
shlb
pop
push
push
mov
push
jb
ds
push
orb
mov
sti
rcll
inc
out
sbb
xor
jle
addb
and
repnz
or
lods
xchg
push
out
sub
movsb
or
scas
ds
addr16
xor
ljmp
lock
fistl
lret
and
mov
pop
adc
insl
out
xchg
test
test
scas
sbb
adc
mov
outsb
out
add
popf
movsl
push
or
push
sub
adc
xor
lock
jb
shrl
out
movq
mov
daa
gs
and
andb
pop
jmp
not
andb
or
push
and
into
sbb
incb
add
mov
sub
bound
in
and
pop
outsl
movq
or
shll
subb
ljmp
xor
jle
or
test
mov
faddl
in
lahf
cmp
ficoms
out
mov
mov
mov
mov
aas
xor
fs
scas
push
cld
or
outsl
xor
shl
adc
dec
lret
mov
aaa
mov
pushf
test
jae
daa
iret
ljmp
dec
lret
pop
dec
push
es
push
pop
xchg
push
cmpsb
pushf
mov
adc
rcrl
popa
inc
sbb
xor
cwtl
inc
mov
sbb
fnstcw
mov
fisubrl
mov
test
jo
lcall
mov
ret
sbb
nop
cli
cld
inc
outsl
xchg
adc
mov
jp
mov
in
shrl
stc
cmp
and
scas
outsb
mov
fiaddl
lret
pop
xor
enter
push
stos
mov
fistpl
inc
in
add
jl
or
lea
mov
cmp
rcll
fisttpl
bound
icebp
movsb
xor
incb
inc
in
out
dec
fs
subl
ljmp
in
fwait
adc
repz
clc
imul
sbb
aaa
cmpl
sub
and
pop
xor
mov
es
andb
inc
push
and
xchg
jl
int
in
lcall
cltd
pop
aas
mov
lock
mov
jg
aad
jbe
or
mov
push
xchg
test
addb
popa
std
imul
mov
hlt
sbb
cmpsb
dec
jne
data16
mov
notb
adc
enter
inc
fyl2x
das
dec
rcrl
repz
mov
test
gs
xor
adc
xor
scas
mull
cli
gs
orb
add
xchg
out
mov
sub
aad
dec
out
xchg
movsl
cmp
aam
or
ss
fld
dec
xchg
and
push
mov
cli
jmp
cld
inc
pop
jp
sub
xchg
push
insl
int
lret
dec
imul
loope
shr
lcall
pop
mov
xor
test
idivl
adc
les
xchg
fs
lods
repnz
or
sti
push
or
pop
and
pushf
scas
jb
mov
popf
inc
clc
mov
movsl
sub
lock
ljmp
lds
test
notb
stc
lock
xor
add
jge
test
outsb
cs
push
leave
in
aam
cmpl
lahf
cmp
mov
inc
pushf
jecxz
testb
xchg
lods
loopne
adc
cmp
ret
jno
jecxz
mov
sahf
mull
add
test
lea
lods
ja
sbb
mov
outsb
test
mov
and
push
xchg
orb
push
dec
es
sub
nop
cmp
fldz
push
lret
out
dec
es
mov
mov
or
out
mov
jle
icebp
xchg
mov
subb
loope
inc
gs
add
jae
ss
repnz
loopne
addb
cwtl
jp
in
mov
cltd
neg
mov
stos
fcompl
adc
inc
xlat
sub
cmpsb
insl
mov
in
das
rolb
sbb
out
sub
rclb
mov
jp
adcl
cmovs
push
rol
jp
pop
push
and
lods
andb
pop
lea
push
repnz
inc
hlt
adc
jmp
inc
mov
mov
aaa
mov
int
jo
inc
xor
push
and
sub
cmpsl
push
push
or
std
pop
push
aaa
pop
in
adc
outsb
inc
xchg
and
rorl
mov
xchg
outsb
aam
mov
mov
idivl
mov
pop
sub
or
inc
leave
lret
push
adc
sbb
pop
jbe
fs
insb
jns
dec
int3
inc
insb
inc
andl
mov
xchg
scas
sub
es
sbb
sub
xor
dec
push
stc
decb
test
enter
xchg
daa
xor
mov
xchg
outsb
test
inc
lock
mov
fs
lcall
stc
into
negl
cmp
dec
mov
jl
mov
in
push
cmpsb
or
sbb
icebp
mov
push
mov
rcr
push
lret
add
insl
out
jecxz
mov
xchg
pop
shlb
push
into
dec
push
sarb
popl
mov
ret
inc
movsl
dec
lcall
in
cmp
inc
push
ret
mov
cld
push
mov
popa
xchg
cmp
popf
sub
xor
xchg
dec
movsb
idivl
shrl
pop
cli
adc
xor
divb
fsubrl
xor
leave
cmp
and
outsb
dec
insl
dec
out
dec
jb
jle
push
mov
or
jp
jg
or
pusha
dec
and
push
or
lods
dec
test
cwtl
std
fwait
nop
push
pop
xor
rcr
fcoms
jnp
mov
rcll
cmp
mov
mov
scas
outsl
push
inc
test
ljmp
movsb
jb
mov
insb
xchg
xchg
lds
jne
jbe
cmp
imul
pop
adc
ds
dec
lahf
jne
sub
lods
pusha
mov
stos
inc
add
arpl
cltd
xchg
mov
loop
push
xor
push
jb
push
int
nop
movb
mov
cmp
adc
push
data16
sub
mov
adc
jmp
push
inc
ds
adc
cmp
and
aad
aaa
repnz
fwait
push
test
in
mov
jno
dec
inc
inc
xchg
xlat
hlt
mov
mov
and
xchg
fs
pop
jg
sbb
jle
cld
push
mov
mov
cs
mov
jle
cli
dec
mov
add
test
xchg
mov
mov
fdivrl
xor
dec
mov
je
lea
sahf
dec
or
mov
cmp
sub
inc
fs
add
push
lcall
scas
icebp
pop
sbb
cld
pop
pop
xchg
add
dec
adc
out
xchg
ret
adc
lea
call
push
out
aam
jle
hlt
pop
push
mov
jb
lods
testl
add
cmc
lea
xor
adc
aaa
loop
mov
cmp
subb
cmp
popa
fcmovnb
cmp
dec
ss
mov
mov
icebp
cmp
sbb
orb
loop
sub
or
sub
popa
aaa
push
sub
and
mov
imul
arpl
mov
fdivl
fwait
loope
fsubrs
mov
sub
dec
mov
cmp
jae
push
cltd
das
mov
adc
cmc
int
paddw
lcall
cmp
pop
push
mov
stc
push
adc
cmp
aas
mov
insb
jbe
aam
sbb
adc
aaa
loop
fs
outsb
je
push
fisttps
rorb
testl
sbb
cld
test
aaa
shl
xor
dec
xchg
fidivl
cmpsb
ja
or
imul
cmp
mov
cmp
lds
xor
adc
adc
sub
mov
jb
and
cs
in
mov
enter
xlat
push
loopne
ss
adc
pop
jbe
or
mov
xchg
into
add
dec
mov
sti
aad
mov
or
mov
std
stc
inc
sub
sbb
fwait
dec
cmp
cltd
out
adc
outsb
jne
sub
mov
ljmp
cld
mov
test
cmp
xchg
inc
les
nop
jns
addr16
sbb
xchg
push
sbb
fidivs
xor
pop
push
add
fildl
sbb
fstpl
mov
push
xor
inc
pusha
dec
cmp
stos
sub
sbb
fbstp
mov
jb
fs
icebp
loop
jb
addb
les
xor
add
jo
repz
cwtl
loopne
pusha
ljmp
mov
int
sub
add
fistpll
lds
or
enter
push
cld
jns
and
das
jo
sbb
push
cmpl
pop
stos
lcall
aas
cmc
jmp
or
rcrb
xlat
inc
lret
jb
dec
inc
negb
cmp
lahf
adcb
popa
push
add
sti
stos
sbb
xor
cwtl
push
sub
jo
sbb
cmpsb
int
in
sbb
sbb
mov
rolb
sub
dec
cmp
pop
and
mov
ret
dec
xor
dec
and
inc
jmp
std
jle
push
rcll
out
icebp
imul
jecxz
add
inc
adc
lock
jle
mov
insb
sub
aad
xchg
clc
data16
pop
lahf
dec
stos
loope
mov
push
ja
ret
adc
mov
shll
pop
lret
xchg
loopne
sbbb
dec
ficompl
call
mulb
pop
adc
and
cmp
pop
cld
pop
xor
pop
sbb
and
ss
xchg
imulb
ss
dec
cmpsl
cmp
loop
fstpl
shr
int
call
xchg
mov
mov
push
adc
inc
push
lret
xor
mov
and
dec
stos
std
push
cmc
dec
fmul
pop
adc
pop
aad
cmpsl
test
lahf
mov
inc
lcall
add
mov
mov
cli
mov
dec
mull
xor
daa
sub
imul
mov
shll
pop
inc
inc
adc
cmp
jo
movsb
fistl
arpl
movb
out
mov
mov
mov
lcall
cmp
push
push
xchg
pop
mov
add
movsb
test
pop
rolb
lahf
lods
push
bound
rcr
mov
sub
lret
and
in
jecxz
repz
cwtl
daa
data16
aas
mov
xlat
sub
add
sub
sahf
cmp
lds
das
jnp
push
les
addr16
add
repnz
and
xor
lods
mov
lds
sbb
mov
adc
scas
sub
ljmp
sub
sti
pusha
enter
aaa
filds
cmp
pop
dec
lods
adc
push
xchg
jb
addb
jmp
sub
xlat
add
enter
sbb
sbb
dec
mov
inc
xor
jle
arpl
out
sbb
shl
scas
mov
and
fsub
pushf
lea
mov
lods
int
push
sub
and
mov
insb
sub
ret
or
out
or
insl
jno
cmp
jg
jae
adc
sub
mov
jns
leave
push
ret
cmpsb
orb
cs
mov
jns
inc
mov
insl
xorl
pop
arpl
shll
subb
ja
stos
or
cmp
mov
aam
popf
xchg
ret
mov
imul
roll
pop
and
scas
jo
inc
mov
jl
adc
pop
push
shll
pop
mov
mov
and
jmp
outsb
out
fs
sub
mov
push
jecxz
js
cmp
std
sti
sti
adc
fidivrl
dec
rcrb
dec
popa
sub
xor
jns
mov
arpl
and
dec
lock
fildl
bound
hlt
inc
call
stos
std
inc
and
sbb
mov
mov
xor
mov
popf
test
cwtl
jno
call
fwait
inc
xchg
mov
sbb
pushf
mov
or
mov
xchg
mov
stos
nop
cmpsl
sub
into
sub
cmp
shll
inc
inc
rcrb
lock
xchg
jo
fwait
sbb
jns
lods
push
jge
dec
jle
dec
and
stos
dec
mov
push
pop
loope
xchg
mov
sahf
pop
ret
or
lds
sbb
mov
inc
enter
lahf
or
and
fcmovu
data16
out
insl
xchg
cmp
shrb
push
daa
mov
ret
push
sarl
jns
and
jnp
or
cwtl
loopne
sbb
je
mov
addb
icebp
xchg
arpl
out
dec
stos
xor
jge
or
mov
push
cmp
ss
sbb
fstps
dec
mov
je
arpl
mov
ffree
xchg
btc
adc
sbb
cmp
jo
lds
fwait
outsl
adc
mov
mov
push
and
mov
daa
pop
fiadds
jbe
fisttpll
sbb
in
ret
jecxz
dec
push
in
lcall
jmp
mov
out
enter
fisttpl
jno
sbb
push
aaa
pop
imul
mov
fsubs
jb
add
sbb
test
lret
data16
shl
pusha
xchg
add
mov
stc
mov
adcl
xor
and
lds
xor
dec
mov
es
lds
sub
and
adc
outsb
idivl
push
sbb
sti
or
inc
sub
or
fs
pop
sar
or
js
repnz
sbb
cmp
mov
arpl
imul
sahf
cmp
insl
pop
push
mov
mov
test
jb
js
ja
paddw
test
pop
stos
xchg
pusha
jmp
pop
jo
pop
xor
push
in
push
pushf
adc
cmpsb
xchg
dec
mov
in
in
push
sub
rcll
lods
cmpsb
je
pop
mov
mov
addr16
mov
insb
fisttpll
cmp
insb
sti
add
aam
inc
imul
push
xchg
movsb
sbb
pushf
mov
data16
sbb
fisttpl
fwait
insl
outsl
sbb
xchg
dec
xchg
dec
sbb
sbb
mov
xor
push
xor
mov
and
sub
repz
mov
and
sbbl
pop
and
adcb
mov
das
sub
and
stos
lret
js
scas
jbe
mov
cmp
aas
fldcw
mov
int3
lods
inc
dec
repz
lret
add
cld
sbb
xchg
daa
push
push
add
dec
ret
fcomip
sarl
imul
push
mov
dec
dec
pop
mov
cli
call
cmp
mov
pop
mov
adc
xchg
xchg
lea
cmp
test
or
repnz
cmpsl
adc
push
push
movsl
jl
test
movsb
popf
orl
fcompl
cmpsl
pushf
mov
jne
ret
push
outsl
outsl
std
imul
sbb
repz
stc
xchg
insl
mov
lods
mov
mov
mov
sbb
ret
cmp
imul
pop
rcr
std
insl
dec
adc
arpl
push
jg
and
adcb
dec
cld
sub
mov
xor
cmc
bound
cmpsl
mov
push
test
adc
in
push
dec
ret
mov
test
loop
xlat
rcll
xor
dec
and
lock
aad
mov
cli
lds
rcl
cmpsl
aam
jmp
xchg
xlat
sbb
sub
mov
es
pop
jne
arpl
xor
adc
cmp
xrelease
cwtl
faddp
pop
out
test
inc
add
xlat
jmp
or
sbb
frstor
fldt
testl
lods
cli
pusha
stos
jle
mov
mov
push
bound
push
pop
jp
mov
fidivs
inc
lds
insl
pop
shrl
loopne
sete
outsl
or
cmp
icebp
dec
sub
mov
arpl
mov
mov
idivb
scas
xchg
dec
sbb
scas
mulb
mov
addb
xchg
int
test
xchg
lret
sub
push
push
mov
cs
fnstenv
mov
cmpsl
lods
lret
rcll
outsl
pop
aad
pusha
sub
repz
lret
cld
push
insl
adc
pop
or
or
jnp
dec
ja
sbb
xchg
push
mov
fcoms
and
ret
cltd
xchg
or
add
inc
int3
sub
xor
add
xchg
shrb
arpl
outsl
mov
mov
xchg
pop
cwtl
lcall
popa
mov
jmp
and
loop
cmpsb
lea
outsl
pushf
dec
ljmp
shll
jne
addr16
or
mov
jge
cmpb
cmp
xor
sub
push
data16
decl
movsl
jb
mov
test
shr
add
cmp
push
insl
xlat
aaa
sub
ljmp
bound
pop
pop
movl
popf
iret
mov
mov
cs
push
sub
ds
push
sbb
cmp
pop
shl
xchg
mov
mov
adc
mov
loopne
enter
push
cmpsb
stos
xchg
pop
add
aaa
aaa
mov
mov
adc
and
ret
test
mov
cltd
and
mov
jmp
setns
fisubs
mov
xchg
sahf
lods
xchg
inc
mov
out
fldenv
ret
pop
ret
in
std
shr
aaa
cmp
cwtl
imul
add
outsb
pop
and
insl
in
jne
lret
mov
cwtl
jae
jb
inc
jns
pusha
mov
jo
and
je
jp
std
bound
push
push
inc
stc
repz
loop
pop
mov
adc
sar
js
aas
outsl
adc
mov
sahf
inc
push
add
mov
mov
xchg
mov
div
in
jb
std
mov
xchg
mov
jecxz
sbb
scas
mov
loop
mov
scas
insb
dec
mov
xor
xlat
int3
movsl
jp
rclb
cmp
mov
cwtl
popf
test
in
rcrl
jno
inc
mov
jo
dec
adc
popa
mov
inc
inc
jmp
popf
cmpsb
aam
dec
fxch
orl
cmpsl
mov
ret
mov
loopne
mov
shll
dec
sub
mov
push
sub
mov
jmp
jns
ljmp
add
xor
push
inc
fists
cli
cmp
mov
pop
jp
in
pushf
sahf
fnstcw
movsb
mov
enter
loop
loop
sub
mov
aad
or
add
inc
jle
push
pop
gs
push
clc
dec
jl
add
addr16
inc
scas
mov
scas
xor
mov
sub
and
mov
mov
push
in
push
or
outsl
xlat
dec
in
loopne
mulb
icebp
loopw
mov
pop
adc
cwtl
scas
pusha
scas
cltd
xchg
movsl
fwait
outsl
insl
and
icebp
cmp
jno
add
ficoml
pop
sarb
mov
dec
xchg
or
ror
jo
sub
leave
sbb
pop
scas
es
mov
push
adc
mov
sub
fmulp
loopne
jmp
fisubl
sbb
out
sub
imul
add
mov
out
jl
xchg
push
push
inc
ror
call
pop
pop
in
aam
fmull
insl
sub
lcall
scas
and
loopne
scas
mov
aam
nop
gs
popf
jmp
leave
loopne
add
enter
test
dec
adcb
jns
inc
push
mov
enter
insb
lds
xlat
mov
pop
in
jno
fucomp
xchg
mov
fs
iret
add
cmpsb
mov
nop
push
scas
ret
ficomps
inc
shlb
dec
adc
fwait
popf
adc
xor
cmpsl
out
into
js
cmp
lods
pushl
test
inc
gs
jo
frstor
sbb
cltd
push
and
mov
push
xchg
dec
arpl
or
lods
mov
js
pusha
icebp
lods
sub
pop
adc
fsubs
sub
cmpsb
popa
and
icebp
add
dec
dec
xchg
cmpsl
xchg
add
rcr
aaa
jno
sbb
in
push
cld
je
out
cwtl
ljmp
jle
cltd
into
pushf
popa
adc
push
ret
and
pop
mov
lods
sbb
lods
sub
pop
and
popf
data16
movsb
sbb
aas
sub
outsl
test
js
mov
int3
lds
in
sub
push
xor
js
nop
jnp
movsl
movsb
stc
pop
adcl
sbb
xchg
std
lods
in
jp
fwait
rolb
mov
loopne
fwait
mov
jno
pop
and
xchg
mov
add
jns
dec
iret
int3
jmp
push
nop
in
mov
push
pop
inc
lock
rclb
repnz
mov
rclb
pop
call
out
std
iret
push
mov
jnp
std
jnp
jge
iret
subb
in
repz
cltd
iret
out
in
push
push
mov
fadd
lods
dec
mov
inc
test
pop
push
ljmp
jnp
adcb
pop
push
or
mov
int3
enter
xchg
addr16
pusha
pcmpgtb
ss
cmp
ror
jb
xor
in
dec
imul
ja
mov
sti
xchg
mov
stos
stos
jbe
out
push
lea
pop
and
and
xor
xchg
je
jae
bound
in
cmp
jnp
mov
and
es
push
cmp
repnz
xchg
lods
popa
ftst
sbb
cmp
dec
lds
jnp
fidivrs
in
jbe
ror
out
jo
leave
ret
in
mov
and
add
mov
jno
adc
sbb
pop
lret
push
mov
repz
push
xor
xor
fnstcw
imull
cmp
jno
out
mov
jns
ret
inc
in
incb
stos
sbb
loope
jb
jp
mov
ret
sub
movsl
ret
loopne
icebp
arpl
bound
adc
xchg
add
lahf
dec
jns
pop
lock
cli
dec
enter
ret
out
filds
and
gs
cmpsb
mov
sahf
sub
sub
data16
sbb
or
adcb
xchg
cmp
shr
mov
sti
sbb
lds
daa
stc
cwtl
xchg
push
rorb
je
jecxz
int
out
dec
xor
jno
stc
inc
push
and
sub
std
adc
outsb
mov
fs
cltd
sub
pop
cmpsb
fnstsw
cmp
test
and
pop
pop
cmpsl
in
mov
fidivs
repz
mov
xchg
xor
hlt
pop
mov
frstor
sub
fists
mov
or
or
data16
sbb
int3
std
rol
and
add
mov
lods
push
mov
mov
das
adc
call
mov
xlat
xor
sbbl
sbb
xchg
sbb
test
sub
mov
pop
or
iret
jno
fidivs
pop
test
xchg
gs
movq
sbb
dec
gs
cmp
cmc
outsl
call
push
idivl
out
mov
pop
and
lcall
push
fstp
or
lcall
xor
fildl
and
xchg
sub
shrl
int3
lret
pop
cmpsl
inc
dec
outsl
push
adc
mov
lds
pop
and
inc
in
mov
inc
or
mov
adc
xor
rolb
pop
fcompl
imul
push
sar
std
and
shr
inc
or
ljmp
inc
cld
add
out
xor
pushf
jbe
out
neg
sbb
in
repz
popf
mov
subl
push
adc
mov
test
ja
mov
lds
sub
jnp
ds
sub
pop
dec
jecxz
jns
std
push
jb
test
mov
test
iret
imul
jge
lahf
xchg
sub
popf
lods
or
in
mov
inc
ret
or
dec
cmp
jp
ss
cli
sbb
ret
add
fidivrs
shll
aam
mov
pop
sbbl
cmp
clc
enter
test
sub
mov
dec
inc
je
fsub
push
xchg
inc
pop
pop
das
pop
xchg
or
sbb
mov
adc
cs
pop
or
jecxz
test
dec
push
call
lcall
lea
cmp
lds
aad
xchg
inc
cld
or
jno
or
push
xor
lahf
and
hlt
adc
add
xor
xchg
arpl
movsl
jbe
mov
sarb
cmpsb
bound
or
je
mov
in
dec
sbb
push
mov
lods
popl
testl
add
insb
cs
test
loope
leave
xchg
ja
std
cmp
push
stc
xor
sub
out
jge
sbb
pop
push
icebp
mov
cmpsb
shl
decb
in
lock
aas
in
mov
fiadds
cld
mov
shrl
fisubrl
in
testl
cmp
lret
enter
dec
in
dec
call
cwtl
adcb
inc
fs
push
pop
pop
int3
or
lds
mov
lahf
pop
cmp
dec
stos
imul
pop
ljmp
repnz
inc
addr16
insb
xor
aad
xlat
out
cmpsb
or
cmp
mov
insl
fcmove
es
stc
pop
pop
cmp
add
test
aaa
sbb
loop
ja
shlb
gs
fisubrl
cmp
push
in
add
repz
or
pop
arpl
jne
pop
outsb
or
push
stc
mov
pop
mov
mov
adc
mov
loope
sbb
sbb
mov
loope
lods
pop
jb
or
shll
inc
and
xchg
push
xchg
fs
xchg
or
xchg
daa
xor
lock
push
cmpsb
mov
push
xor
mov
stos
pushf
fs
scas
sbb
mov
lret
adc
into
pop
push
add
out
jo
sbb
pop
ja
outsb
push
cmpl
rclb
jecxz
sub
xlat
fsubs
cld
mov
fs
adc
icebp
nop
inc
fldl
scas
je
add
or
adc
nop
sub
dec
pop
mov
mulb
adc
loop
push
mov
stc
iret
mov
adc
sbb
add
or
or
sti
faddp
in
pop
mov
mov
sbb
inc
imul
sbb
jb
sbb
mov
es
mov
stc
ja
mov
sbb
jle
sbb
xor
test
pop
inc
lea
xor
push
push
pop
sub
into
jae
pop
out
pop
xor
shlb
pop
cwtl
inc
xor
inc
or
cmpsl
mov
push
pop
shll
jo
subl
xor
sbb
adc
xchg
jmp
dec
dec
mov
xor
sbb
shrl
cmp
adc
repnz
insl
xchg
or
mov
loopne
imul
aaa
xor
pop
test
sub
dec
rorb
xor
enter
sahf
cmp
cmp
inc
xchg
in
std
jae
ffreep
pop
fsubs
rcrb
mov
sbb
aas
fnstcw
or
xchg
xchg
cwtl
mov
or
pushf
cld
out
data16
inc
aad
ja
lock
testl
addr16
rorb
mov
inc
lds
mov
scas
loop
jb
imul
pop
movsl
cmp
enter
aad
pusha
lock
insl
mov
jnp
lods
pusha
popa
addl
cli
mov
mov
lret
inc
inc
xor
aas
jle
or
mov
xchg
repz
pop
les
or
mov
push
sbb
sbb
sub
mov
call
sti
pop
fisubs
loope
mov
xor
lods
pushf
push
jns
xchg
fildll
xchg
fisubrs
xor
popf
ret
leave
jmp
inc
push
inc
imul
mov
jne
cmp
test
mov
and
fwait
cld
out
pop
ret
arpl
cmp
dec
or
movsb
push
mov
aad
repnz
mov
aaa
pop
inc
dec
mov
fcoms
push
inc
movsl
loope
pop
lods
js
pop
test
cmp
push
inc
push
pop
xor
stc
daa
es
push
sti
outsl
mov
add
cmc
mov
or
pop
cltd
push
jmp
lcall
xor
test
loop
cltd
fcom
stos
xor
fs
movsl
iret
iret
and
aam
push
adc
add
push
popf
jne
cli
scas
push
call
aam
pushf
testb
fisttpll
ret
xlat
add
insl
movsb
dec
shr
adc
pop
imul
cmp
push
aad
sarl
xchg
push
ret
mov
or
xchg
or
dec
cmp
in
or
int3
sbb
or
and
popf
pop
jbe
pop
mov
and
repnz
pop
cmp
fidivs
sbb
test
hlt
jmp
daa
outsb
cmp
orb
ss
lods
cmp
mov
outsl
fidivrs
ret
cwtl
sbb
pusha
mov
and
xchg
jns
leave
mov
adc
adc
out
sbb
into
sarl
push
das
iret
call
jge
clc
aaa
dec
jno
pop
repz
jmp
sub
cmpb
stos
pop
xlat
testb
mov
rorb
and
sub
push
dec
test
dec
add
dec
adc
inc
orl
int3
daa
pop
or
and
push
rol
adc
into
aaa
sub
adc
xor
adc
addl
mov
std
leave
icebp
testb
sbb
and
adc
lcall
pop
daa
mov
mov
lods
mov
dec
in
pusha
add
cwtl
xchg
xor
and
insb
pop
bound
sub
xchg
pop
cmp
pop
and
fidivl
jle
jo
and
popf
mov
jecxz
dec
xchg
push
mov
add
xchg
in
sub
dec
cmp
je
mov
rolb
cmp
sub
xchg
cmpsb
scas
shlb
adc
scas
push
movsb
push
mov
repz
jmp
mov
dec
mov
je
jns
mov
sbb
mov
arpl
or
mull
loop
fs
cld
loopne
jbe
aam
es
fs
movsl
add
pop
sbb
xlat
mov
pop
jmp
push
mov
popa
lcall
popa
cmp
je
aaa
adc
mov
aas
gs
addr16
adc
fists
in
push
and
xchg
jne
add
jge
xchg
addb
fs
pop
cli
sub
hlt
adcl
negb
mov
in
sbb
cmp
and
dec
xchg
or
add
mov
loopne
sbb
dec
lods
test
or
lret
cltd
int3
aas
insl
mov
dec
push
sti
pop
incb
push
jnp,pn
fcmovbe
mov
test
sbb
xor
mov
fs
sbb
mov
mov
jnp
lods
push
icebp
xor
push
mov
testb
xchg
leave
mov
push
les
mov
lds
push
and
popa
or
stc
outsb
jl
pop
js
fistpll
ror
xchg
push
in
xchg
push
mov
sarl
and
pop
imul
add
mov
jecxz
add
pop
jae
lcall
mov
cmp
sub
sahf
clc
cmp
push
ficompl
xor
into
cmc
push
mov
sub
fsubrp
nop
ret
test
xor
sbb
jne
scas
cmc
lcall
scas
mov
adc
mov
jle
mov
dec
lahf
rorb
dec
testb
sbbl
repz
scas
jns
cld
mov
jmp
add
add
cmp
cwtl
movsb
inc
repz
jbe
and
sub
adc
mov
jne
mov
cmpsb
std
out
cltd
aam
mov
ja
ja
jbe
dec
iret
lret
stc
in
sub
les
add
rcl
int3
mov
add
in
data16
daa
fstl
xchg
int3
xchg
inc
sbb
sub
sub
cmp
mov
loope
push
add
push
ret
mov
sbb
ja,pt
pop
fcomps
or
movsl
push
mov
adc
mov
mov
incl
fisubl
push
adc
sub
jo
xchg
subw
mov
or
gs
frstor
and
xlat
lret
gs
xor
xchg
mov
out
or
std
sbb
icebp
xor
aad
cmpsb
ja
pushf
push
dec
add
popf
test
stos
xchg
mov
adc
je
lcall
in
sbbl
int
ret
xor
dec
out
cs
repz
negb
sbb
in
pop
dec
out
popf
xchg
lds
ret
mov
imul
push
mov
push
inc
inc
fadd
push
mov
xchg
xchg
sti
push
xor
mov
and
pop
jg
icebp
insb
xchg
out
loope
stos
mov
jp
iret
aaa
sub
mov
bound
xchg
hlt
test
cmc
inc
pop
mov
add
lahf
sbb
daa
mov
icebp
cli
inc
arpl
dec
dec
dec
mov
xor
jmp
adc
roll
vphadduwq
xlat
xchg
lret
adcl
idiv
cwtl
adcb
loopne
inc
dec
stc
out
int3
xchg
xchg
imulb
push
cmp
mov
clc
xchg
ret
sub
cmp
lock
cmp
adc
pop
xchg
pusha
mov
adc
repnz
sarb
adc
jo
or
sub
insb
hlt
sbb
nop
sub
xchg
mov
sub
stc
jns
xor
idiv
leave
int3
push
push
xchg
mov
dec
mov
call
mov
push
out
and
inc
xchg
fnsave
js
xchg
xchg
inc
ror
in
pop
or
enter
xchg
in
nop
pop
xchg
pop
jl
dec
inc
addb
mov
sarb
cs
mov
aaa
popa
push
adc
cmc
stos
push
insb
pusha
cmp
xchg
insb
pop
pop
mov
or
clc
mov
jae
lock
leave
lock
mov
mov
nop
inc
or
outsl
and
sub
out
enter
sbb
sti
mov
in
fld
leave
cmp
imull
adc
and
xchg
ret
push
pop
bswap
test
xor
pop
jmp
jo
bsf
push
push
dec
mov
es
outsb
pop
add
mov
cmc
inc
les
jmp
cmp
push
dec
mov
scas
gs
cmp
ds
dec
cmp
rcrl
daa
stos
sub
lcall
fcoms
and
aas
mov
push
sub
push
rorb
ds
mov
cmp
ss
clc
and
fisubs
pop
clc
xchg
js
push
dec
pop
and
fucomp
lock
jmp
mov
sbb
push
dec
jb
les
in
rcl
sar
push
daa
jnp
and
cmc
popf
leave
negb
icebp
mov
int
xchg
ja
in
sbb
negl
adc
rol
cli
pop
cmp
xchg
scas
enter
outsl
mov
sub
xchg
imul
cmp
mov
or
das
pop
adc
xchg
int
gs
mov
mov
sbb
outsb
pop
cmpsb
ret
cmpsb
or
sbbb
repz
inc
fiadds
jmp
nop
adcl
es
aas
add
out
ret
jg
pop
mov
sbb
lret
lds
jl
movsl
popf
sub
sbb
sete
or
lcall
push
xchg
mov
add
into
jmp
and
xchg
out
insb
test
jns
addr16
movsb
rcll
mov
cmpsb
adcl
out
xor
lods
mov
or
out
push
repz
mov
lcall
xchg
adc
shlb
loopne
test
lahf
sar
out
jbe
mov
leave
pop
fists
and
inc
fimull
jo
cmp
test
stos
mov
push
mov
dec
or
mov
mov
xor
sbb
xchg
das
jecxz
jecxz
notb
repnz
jecxz
mov
popa
jmp
mov
mov
sbb
mov
inc
popf
dec
aam
cli
mov
dec
out
push
pop
orl
imul
sarl
and
movsl
mov
pop
test
push
loop
das
cmpsl
je
repnz
popa
jle
lock
mov
mov
and
clc
fnsave
pop
test
mov
mov
jge
aas
cld
je
add
nop
js
push
stos
rsm
sahf
sbb
stos
ss
xchg
test
cmp
lahf
pusha
lods
fwait
adc
je
gs
fistps
fisttpl
orb
xchg
mov
pop
add
pop
lcallw
movsl
inc
xor
lds
push
rol
adc
loope
clc
jbe
int
repz
mov
jo
sarb
aas
packsswb
imull
push
out
push
sbb
test
jbe
xchg
xorb
imul
hlt
mov
enter
gs
lods
inc
loopne
imulb
push
push
cmp
and
cmp
test
lcall
sahf
and
pop
out
adc
cli
mov
pop
xchg
sub
mov
sub
mov
ret
inc
mov
xorb
ret
out
xor
mov
idiv
addb
or
inc
inc
xor
or
or
inc
adc
jne
in
mov
cmpsl
mov
aaa
out
and
das
int
mov
inc
sbb
push
mov
and
push
fwait
icebp
ljmp
insl
daa
sbb
cmp
cmp
iret
add
stos
dec
pop
aaa
scas
dec
inc
xor
mov
sbb
sub
mov
and
lock
xchg
adc
sarb
cmp
fdivrl
mov
cmpsl
in
sahf
inc
jae
add
loop
xor
es
jae
cwtl
jg
mov
addr16
ret
inc
xor
ds
mov
sbb
in
loope
inc
loope
in
dec
inc
inc
pop
jb
dec
mov
mov
sar
jnp
mov
bswap
xor
scas
gs
xor
pop
sbb
stos
sahf
sarl
outsl
test
test
sahf
data16
push
inc
xchg
fstpl
das
das
mov
cld
inc
mov
movsb
add
jmp
add
and
cmp
jbe
stos
and
jp
mov
aad
aad
cmp
pop
cmc
cmpsb
push
in
mov
jp
add
pop
mov
pop
fwait
mov
mov
inc
loopne
lret
mov
push
mov
insl
jae
int3
inc
test
xchg
addr16
scas
sti
inc
and
push
mov
lods
jbe
pop
fildll
inc
lods
hlt
les
jg
push
fimuls
mov
and
push
loop
mov
dec
popf
lods
mov
or
sbb
or
pop
sbb
add
sub
rcrb
and
negb
clc
test
shlb
cmp
mov
pop
jno
or
hlt
jns
push
jbe
mov
jbe
mov
xchg
xchg
xchg
out
addb
push
cwtl
xor
out
out
mov
xor
shlb
xorl
xchg
and
mov
rorl
testl
dec
pop
push
xor
aad
std
lret
movsb
jl
jmp
daa
inc
and
pop
popa
inc
mov
js
sub
cmpsl
push
adc
inc
fisubl
icebp
inc
dec
jbe
mov
fcoml
sti
push
clc
stc
sbb
scas
push
inc
sahf
bound
lds
push
push
shrl
inc
xor
sub
pop
mov
sbb
sahf
rclb
xbegin
pop
shlb
add
fwait
test
dec
ficompl
ds
xor
scas
js
mov
inc
out
pop
inc
jle
insl
bound
call
sbb
sub
in
test
es
push
lret
das
cmp
and
mov
insb
mov
add
push
cmp
cs
adc
xor
pop
hlt
sbb
icebp
int3
jmp
push
mov
pop
sub
cs
xchg
or
jae
push
addr16
xor
xlat
mov
in
push
mov
jl
or
je
shll
inc
xchg
stos
loop
pop
push
mov
sbb
aad
and
fsubrl
in
push
cli
cmp
sub
xor
add
pop
inc
in
movb
lock
mov
scas
mov
and
push
add
test
rcrl
int3
inc
adc
inc
nop
inc
xchg
adc
imul
cmp
jnp
pop
xor
mov
xor
xor
and
jp
int3
push
rcll
xchg
or
add
and
test
push
pop
xor
adc
cmpsb
dec
mov
jae
fidivrs
out
fcmovu
dec
jns
sbb
insb
and
adc
lret
xor
sbb
repz
jno
pop
jmp
outsb
push
fbstp
xchg
push
dec
pop
mov
repz
imul
push
mov
jne
push
add
inc
pop
dec
out
jmp
jecxz
icebp
pusha
lea
or
cmpsb
int
mov
push
xlat
inc
mov
xor
mov
out
push
dec
jne
fiaddl
sub
inc
pop
or
and
sub
cli
sti
clc
sbb
sub
movsw
popf
dec
aaa
sahf
sbb
mov
and
loopne
insb
pop
out
jbe
dec
cmp
inc
testb
ret
xchg
subb
push
xor
insl
push
testb
inc
xor
jo
cmp
or
out
sub
cmp
scas
adc
cmp
lock
push
std
outsb
push
repz
add
scas
hlt
jnp
cwtl
jecxz
jnp
mov
sbb
clc
mov
ret
mov
int3
and
lahf
and
sub
shll
jge
pop
push
packuswb
mov
jecxz
sub
fsub
pop
aad
and
nop
cmpsb
push
ret
call
mov
data16
adc
cmc
mov
lock
adc
xor
insl
mov
loope
lea
dec
ljmp
jl
cltd
test
enter
fsubl
pop
das
test
fidivrl
adc
push
cmpsl
xchg
aam
or
inc
ja
mov
jle
sbb
push
jo
sbb
xchg
sbb
test
std
dec
adc
hlt
xchg
xor
call
pop
movsl
cld
inc
mov
xchg
pop
je
adc
bound
stos
mov
dec
aam
clc
imul
dec
push
and
dec
subb
mov
jmp
push
inc
inc
inc
pop
xchg
lods
push
xlat
out
leave
ret
jb
popa
movsl
pushf
add
lds
fcomi
adc
push
scas
inc
add
pop
jle
inc
or
sti
dec
pop
sub
subl
xor
in
add
clc
inc
push
adc
ficoml
mov
inc
jae
testb
and
test
mov
cmpsb
jae
mov
push
pop
negl
out
jmp
inc
xrelease
jae
xor
mov
sarb
inc
or
pop
xlat
pop
gs
je
mov
mov
cmp
or
std
lock
scas
ret
mov
sub
jo
mov
mov
adc
and
push
push
or
bound
xchg
inc
xlat
and
jbe
lahf
fisubl
jnp
or
sbb
dec
push
sbb
xchg
pop
mov
mov
or
jmp
jnp
or
subl
insb
rcrb
or
sub
popa
xchg
pop
inc
add
fidivrs
sbb
into
aad
xchg
adc
lock
push
mov
mov
out
out
mov
iret
sbb
mov
sub
imul
mov
pushf
stos
mov
fisttpll
cld
movb
xor
mov
sarl
sbb
adc
scas
sbb
out
adc
cs
lds
or
test
or
add
stos
push
pop
lds
fisttps
popf
out
inc
mov
and
mov
push
adc
stc
push
shll
das
xchg
xor
or
adc
lea
sti
jne
mov
mov
or
idivl
xlat
inc
mov
icebp
xchg
sbb
adc
mov
iret
inc
pushf
xor
inc
arpl
sbb
cltd
dec
cmc
xchg
inc
pushf
fcoml
popa
ds
pusha
outsl
add
pop
mov
xchg
inc
or
mov
sub
inc
adc
add
sbb
jg
mov
cmpsl
push
push
out
sbb
fsts
mov
jns
popa
add
mov
cwtl
test
bound
out
xchg
aam
jg
negl
rclb
push
xchg
cmp
fs
inc
js
mov
nop
mov
ljmp
iret
cmpsl
sbb
and
and
lds
mov
mov
xlat
add
xchg
rcr
jp
leave
sarl
cwtl
jg
push
repz
sahf
jns
jb
inc
movl
push
cs
ja
jle
inc
jg
sub
loopne
hlt
in
nop
int3
jb
jge
pcmpeqw
sbb
or
fcomip
and
clc
add
loop
ljmp
push
push
stos
out
jns
cli
ret
hlt
gs
ljmp
push
push
push
mov
call
in
loopne
pusha
add
xor
add
xchg
cli
fwait
xchg
arpl
dec
mov
cmp
jmp
mov
jle
int3
cmp
push
xchg
test
mov
xchg
sbb
rcrl
sub
out
lret
mov
fsubp
sub
lret
lahf
scas
lock
jecxz
jmp
adc
out
hlt
and
arpl
fs
hlt
xlat
mov
pop
or
mov
inc
mov
adc
aaa
stos
push
out
cmp
loop
dec
dec
xchg
lea
sar
xor
add
movsl
out
aaa
out
xchg
popa
jmp
scas
insb
push
adc
and
stos
and
shrl
std
loopne
or
pop
popf
ds
nop
push
jno
or
xchg
aam
sub
jb
jl
into
xchg
test
dec
rcll
adc
andb
lea
push
pop
push
cmp
jmp
sbb
imul
and
mov
mov
mov
adc
lahf
aaa
out
mov
fs
push
sbb
dec
dec
xchg
inc
lods
adc
sti
jmp
pop
push
int
ja
push
mov
jmp
fnstenv
sbb
fcompl
repnz
lret
sarl
pop
pop
adc
addr16
sub
inc
scas
jecxz
cmp
ss
daa
push
inc
inc
shr
mov
mov
mov
cwtl
mov
push
mov
mov
xchg
add
adc
push
dec
mov
int
jle
sbb
push
lock
add
std
push
xchg
adc
add
lea
inc
in
scas
fisttpl
jp
push
sub
nop
fisubrs
rcrb
outsl
outsb
fs
arpl
xor
add
out
jmp
fs
mov
push
pushf
xchg
fisttpll
add
add
outsl
adc
lcall
and
popf
into
lahf
adc
leave
pop
repnz
mov
iret
insl
cmp
push
cltd
xor
or
stc
or
sbb
scas
jg
cld
xchg
xchg
inc
jecxz
mov
scas
bound
inc
scas
daa
out
cld
push
xlat
ss
inc
loope
or
insb
outsl
xchg
sbb
movl
std
aam
sub
mov
mov
cmp
mov
test
inc
in
loop
mov
xlat
ret
mov
in
jnp
mov
iret
mov
lret
jle
mov
pop
stos
push
data16
inc
cmpl
fldl
mov
xor
jns
jne
mov
mov
inc
xchg
in
xor
cmpsb
jle
mov
inc
and
shrl
fsts
movsl
inc
in
jne
shl
das
xchg
bswap
pop
cmp
scas
push
lods
push
aam
or
dec
sti
sub
repz
icebp
inc
gs
fidivrl
pop
pusha
jbe
inc
shl
dec
cwtl
ljmp
shl
sub
divb
pop
lock
iret
and
imul
cmpsl
mov
lock
rcrl
daa
push
mov
cmp
push
and
loopne
jbe
daa
pop
in
insb
cmp
and
mov
imul
mov
pop
ss
scas
sbb
xchg
mov
rcrl
pushf
mov
sbb
cli
jl
jp
gs
or
sar
pop
or
sub
mov
popf
mov
in
std
mov
fldl
fistps
ja
popa
mov
mov
mov
jmp
sbb
fwait
int3
push
les
mov
into
mull
pop
rolb
aas
jmp
adc
push
pop
xchg
repnz
arpl
mov
cld
in
push
dec
cwtl
out
mov
fisttpll
mov
push
aam
pop
dec
cmpsb
fdivs
outsb
push
aas
std
jns
repz
repnz
cmp
je
jge
mov
cmp
push
jmp
pop
xor
dec
js
and
xchg
cmp
shll
mov
lea
push
fldenv
mov
das
add
mov
cmpsb
mov
fucom
aaa
call
jmp
mov
imul
andl
jno
and
or
jge
cmpsl
arpl
mov
sub
mov
setp
adc
push
sub
mov
pop
and
mov
insl
in
nop
jge
pop
nop
pop
jb
imul
push
aam
fcoms
mov
in
popf
in
cmp
aad
push
data16
sbb
out
pop
pop
or
rcr
lahf
repz
mov
pop
inc
xor
adc
mov
cmp
sub
adcl
mov
mov
pop
and
and
mov
add
jbe
fnstsw
int
loope
mov
mov
dec
fmuls
test
jp
loopne
enter
xlat
popf
pop
jg
popa
add
dec
adc
xor
test
xchg
dec
jmp
push
ret
js
jo
push
lcall
cmp
call
cli
push
mov
popa
and
adc
push
jne
rcll
lea
nop
sub
fnstenv
scas
xor
das
xchg
std
js
mov
sub
jle
test
in
sbb
sub
mov
jnp
push
nop
lcall
lods
fistl
mov
jg
push
ss
lds
xchg
cmp
jae
inc
xor
xchg
lea
sbb
and
lret
or
mov
inc
xchg
xor
hlt
xchg
mov
pop
mov
pop
mov
mov
and
sarb
mov
inc
mov
xchg
les
fs
iret
ds
ficoml
or
mov
fdiv
mov
xor
push
inc
daa
jl
clc
popa
out
pop
test
jp
jbe
cmpl
cwtl
xor
mov
xor
pop
leave
xlat
and
shll
sub
cld
maxps
into
jecxz
stc
mov
outsb
xor
lret
and
sub
lock
dec
test
ret
pop
xchg
inc
push
into
jecxz
xor
push
jge
xchg
leave
fcomps
mov
add
insl
int
jno
pop
xor
mov
rcrl
loope
cmp
mov
and
add
leave
and
xor
adcl
loopne
mov
jo
sub
push
jmp
in
aaa
bound
jecxz
mov
in
out
ficompl
stos
fwait
cmp
enter
bound
push
aas
faddl
test
shl
aad
pushf
ret
adc
adc
and
arpl
and
xor
lock
pop
rcrl
sub
frstor
push
or
imul
push
lret
repz
shrl
mov
jl
or
push
in
movsb
push
into
and
or
fcmovu
outsb
push
mov
xchg
jmp
out
xchg
aaa
xlat
pop
sti
and
mov
cwtl
leave
jge
pop
xchg
int
mov
adc
cld
es
sub
je
ljmp
int
add
mov
popa
jo
repnz
popl
xlat
outsb
inc
addr16
sbb
and
sti
add
push
mov
push
in
test
lock
insb
mov
outsl
mov
fucomi
push
lods
push
lock
sub
pop
lret
or
push
mov
lods
sbb
inc
roll
decb
push
mov
ljmp
mov
xlat
outsl
xor
out
sbb
add
xchg
mov
insl
fldt
add
int
mov
test
cmp
add
lods
fs
lods
rcrl
out
das
pushf
pop
test
fadds
gs
mov
jno
dec
lea
xchg
jle
xor
imul
test
xchg
pop
je
insb
les
enter
pop
test
mov
mov
ss
cmp
pop
dec
mov
in
pop
jno
xor
nop
lock
adc
jno
cmp
mov
add
call
fidivrs
jg
int3
int
jne
js
sub
addb
adc
cmc
rolb
loopne
push
and
insb
loop
mov
cmpl
pop
cmp
inc
and
fs
jno
outsb
andl
dec
bound
or
mov
test
and
lret
sub
test
sarl
stos
push
pop
call
push
mov
fnstenv
int3
ret
sub
bnd
pop
push
insl
jns
out
inc
fstpl
bound
shlb
out
adc
adc
icebp
push
xor
loopne
mov
daa
mov
push
pop
pop
push
pop
xchg
mov
sbb
jp
test
sbb
mov
mov
stos
test
daa
and
ret
mov
shl
pusha
movsb
popf
aas
sti
sbb
inc
data16
test
ret
mov
inc
aaa
enter
cmp
mov
ret
inc
mov
ror
mov
insb
decl
xchg
jbe
out
ja
jl
pop
fisubrs
pop
mov
jp
dec
dec
imul
jp
jp
inc
pop
gs
orl
adc
mov
sub
cmp
pop
mov
int
fwait
mov
mov
push
add
scas
imul
cmp
add
adc
repnz
jnp
pop
dec
out
mov
push
rcrl
adc
jae
imul
jl
call
rcll
or
push
loope
dec
mov
xchg
jno
shll
push
cmc
adc
addb
out
lock
jle
in
std
jg
shlw
je
and
jmp
xor
sbb
cmp
ror
dec
push
loope
shr
push
ds
je
cltd
mov
bts
xchg
fwait
mov
negb
aas
and
fistl
and
adc
lods
shlb
pop
mov
clc
lret
xor
mov
daa
mov
dec
mov
jp
xchg
mov
mov
fwait
sbb
inc
push
pop
mov
or
mov
mov
int3
xchg
cmp
lret
sub
xor
iret
stos
mov
xchg
mov
call
jge,pt
cmp
pop
jle
cmc
call
in
outsb
outsl
or
popa
xchg
fwait
cwtl
shll
dec
loopne
imul
scas
adc
sub
pop
jmp
push
mov
and
lret
add
or
fldenv
test
ds
sbb
imul
adc
dec
jns
daa
cltd
mov
das
mov
int3
xchg
xchg
mov
frstor
push
movsl
in
popf
aam
bound
jb
mov
jb
mov
outsb
dec
mov
xor
negb
push
ds
lock
xchg
in
popa
dec
pushf
cmpsl
pusha
lahf
xchg
dec
or
rcl
repnz
or
sub
adc
jecxz
add
repnz
pushf
inc
jo
int3
mov
push
mov
mov
fcoml
dec
lods
je
loope
mull
jnp
out
cld
adc
pushf
clc
jbe
dec
jnp
les
jns
test
test
cmp
push
push
sbb
rcrb
adc
pushf
and
and
sbb
loope
rcll
push
nop
mov
cld
out
int3
add
mov
jnp
ffree
std
clc
push
mov
popa
jge
ss
inc
pop
cltd
add
mov
dec
mov
add
call
mov
hlt
push
test
arpl
sub
jbe
rcl
jno
test
lret
jb
inc
icebp
mov
es
sti
sub
mov
sbb
stos
add
mov
scas
mov
jp
rorb
mov
adc
imul
or
fisubl
mov
out
fstpl
add
push
xor
in
loope
addr16
sbb
inc
cmp
mov
sub
insb
mov
or
scas
lcall
inc
scas
cmpsb
dec
mov
xor
sbb
subl
push
and
sbb
cli
push
insl
dec
pop
je
adc
outsb
xor
outsl
and
adc
inc
or
fs
cmpsb
ja
mov
arpl
mov
sarb
push
out
push
in
add
ljmp
xchg
jo
aam
testl
out
leave
push
push
imul
cld
push
xor
pop
push
int
mov
jno
je
mov
cld
ret
fcoml
cmp
testl
iret
movsl
xchg
stc
adc
ds
loope
jecxz
cmp
mov
xorb
lods
dec
out
dec
lods
inc
repz
xchg
mov
mov
add
ret
sub
mov
xor
mov
fcoms
pop
popa
in
xor
jge
loope
aaa
push
ds
jge
inc
notl
je
ljmp
and
movsb
push
loope
testl
outsl
test
frstor
push
pop
popa
cmc
dec
push
xchg
outsb
mov
add
xchg
push
pop
jne
mov
pop
mov
mov
mov
dec
fldt
dec
ficomps
mov
jb
inc
sbb
mov
shlb
and
lock
dec
je
jo
push
das
push
fstl
loope
mov
lahf
in
jbe
xor
sub
sbb
ss
jecxz
aas
dec
aas
push
or
sahf
push
pop
adc
out
fdiv
jmp
movsl
cmp
fisubrl
pop
dec
mov
aaa
roll
test
leave
mov
cmc
push
out
adc
divl
arpl
add
movsl
xchg
outsl
dec
mov
pop
sbb
adc
fiaddl
jo
cwtl
test
faddl
inc
out
out
dec
jnp
mov
negb
xor
xlat
and
mov
pop
and
fldt
out
ret
shlb
and
jl
iret
inc
push
and
sub
mov
xchg
xlat
sbb
ret
outsb
jne
inc
jl
test
jns
and
ja
and
les
rcl
mov
loopne
mov
jb
mov
jp
cmp
add
mov
subl
mov
lahf
loop
sub
popaw
sub
xchg
mov
xchg
mov
pop
xchg
cmp
filds
gs
sahf
pop
pop
stc
out
ljmp
or
and
ret
mov
fcoml
or
sub
and
sti
lret
mov
mov
mov
enter
xor
dec
popf
jp
rolb
loope
jbe
add
cmc
sbb
xlat
dec
jg
cltd
mov
cmc
adc
mov
mov
inc
xlat
dec
xcrypt-ofb
cmpsl
outsb
push
fs
dec
ret
cmp
mov
leave
push
jb
mov
lret
mov
fisubrs
cmpb
sahf
and
lds
inc
cmc
and
fwait
cs
mov
int
mov
mov
and
dec
aam
inc
pushf
cs
sahf
ret
icebp
cmp
xchg
xor
cmpsl
in
mov
mov
incl
fidivl
inc
scas
jb
rcl
inc
sahf
cltd
lea
jl
mov
adc
mov
pop
or
sbb
fsubrs
js
jo
push
mov
and
insb
push
call
jmp
repnz
sarl
cmp
enter
or
sbb
xlat
into
pop
pop
jnp
lds
mov
pop
movsl
mov
jecxz
movsb
add
pop
mov
cmovle
ror
gs
push
mov
movsb
in
xor
pop
jmp
and
insb
mov
stos
int
test
daa
aas
jecxz
pop
cmpsb
mov
pop
loope
pop
mov
mov
cmp
mov
add
fadd
cmp
mov
or
andl
lret
mov
or
mov
sbb
into
xor
add
ret
adc
jnp
push
adc
fldenv
cmp
mov
daa
clc
mov
xorb
dec
fistl
mov
popf
aaa
bswap
sub
stos
jge
pop
mov
int3
addr16
fs
xchg
incb
mov
mov
pop
in
push
push
inc
and
jno
pushf
imul
or
lock
adc
rorb
test
in
shll
popa
pop
pop
adc
sub
jne
mov
int3
enter
xchg
dec
inc
out
mov
mov
mov
push
cwtl
push
mov
insl
pop
test
insl
and
mov
jge
add
mov
and
mov
inc
xor
aam
mov
xor
sarl
inc
movsl
cmpsl
pop
mov
ljmp
adc
fmuls
aam
mov
movsl
aad
cmpsl
stos
mov
daa
jg
cmc
dec
xchg
inc
cs
inc
push
push
mov
les
mov
xchg
sbb
or
movsl
push
push
call
and
test
sbb
dec
mov
andl
test
or
in
out
pop
shrl
stos
jmp
mov
mov
mov
xor
aad
cltd
mov
clc
adc
jmp
sbb
scas
insl
bound
pop
sbb
loop
jno
test
pop
push
push
inc
inc
ret
and
ds
lret
mov
lret
lock
mov
ljmp
hlt
pushf
movsb
fs
popf
add
push
pushf
int3
push
push
inc
scas
loope
xor
jg
clc
mov
sbb
or
push
mov
add
add
mov
ret
mov
sub
movaps
push
int
ljmp
sub
xor
adc
xlat
icebp
sub
add
push
stos
call
inc
in
loop
ljmp
cmp
pop
cmp
xor
outsb
inc
in
imul
push
pusha
ficoms
push
mov
insl
sub
pushf
dec
movsb
out
jb
dec
dec
inc
gs
cmp
sbb
cmpl
pop
mov
ja
out
dec
repz
cmc
testl
adc
xor
dec
mull
imul
or
sub
cmpsb
push
out
js
cs
insl
popf
mov
xchg
add
out
adc
in
xor
mov
push
push
dec
bt
push
adc
in
cmp
cmp
mov
mov
sbb
add
add
sbb
sub
test
mov
imul
pop
mov
cld
push
ret
in
sub
ret
and
lock
stos
xor
outsb
xor
fisttpl
repz
adc
mov
in
dec
pop
pop
pop
inc
mov
mov
cmc
jno
stos
push
cli
jl
ljmp
jno
sbb
jp
inc
and
dec
andb
div
push
sub
lds
in
adc
xchg
ficompl
ror
mov
leave
xchg
pop
mov
push
int
xchg
movb
push
inc
sbb
jg
movsl
lods
stos
loopne
jge
mov
imul
push
js
mov
dec
lock
pop
push
cmp
mov
cli
cli
imul
push
movl
popa
pop
inc
cmp
sub
imul
jo
mov
dec
stos
mov
movsb
out
frstor
mov
jbe
jmp
lret
mov
test
xchg
lea
nop
push
fwait
inc
into
in
jae
add
xor
mov
mov
jle
push
jne
mov
test
push
cmp
jo
jo
xchg
aas
pop
jae
addl
lea
push
js,pn
aad
inc
mov
inc
ljmp
jo
mov
xchg
mov
xor
sub
lcall
out
mov
and
jno
loopne
pop
fs
cmc
xor
aaa
test
adc
mov
out
shl
aas
jle
in
add
fdivr
dec
sbb
je
int3
dec
xchg
pop
jb
bound
lret
adc
pop
adc
fbstp
in
frstor
push
sbb
sahf
mov
scas
sbbb
lahf
mov
push
adc
cli
cwtl
add
mov
stos
pop
ja
mov
inc
push
jbe
dec
add
push
mov
xchg
push
pop
outsl
push
jl
push
add
xchg
and
push
outsl
jmp
icebp
inc
or
insl
sub
inc
xchg
mov
mov
push
sub
xlat
jnp
cli
out
stc
inc
pop
insl
mov
rolb
xor
pop
jl
jne
lret
out
cmpb
add
sti
out
lods
sbb
jno
pop
dec
pop
es
fwait
inc
mov
mov
loope
and
pop
scas
or
jg
mov
ret
inc
testb
daa
push
xor
push
push
sub
rolb
int3
and
pop
xor
xor
movsl
fsubrs
mov
push
mov
xor
push
cltd
adc
or
jno
cmp
and
cmpxchg
cmp
cmpsb
jecxz
inc
pop
pop
cmpsl
jbe
push
iret
xchg
fadds
mov
mov
insl
es
pop
mov
xchg
repnz
push
lcall
push
aaa
stos
sti
int
movsb
xchg
cltd
sub
cmp
pop
repz
inc
shlb
push
mov
sub
lret
in
xor
or
popf
push
rolb
push
bound
dec
xchg
lock
cmp
inc
cli
insl
add
sub
insl
xchg
add
mov
int3
xor
leave
jbe
aaa
test
sbb
sbb
les
xor
popl
dec
jne
out
scas
out
popa
sub
add
dec
fimull
cmpsb
in
aad
je
pop
fists
je
ret
pushf
fs
inc
add
test
push
lahf
ljmp
cmpsb
aad
repz
add
or
mov
xchg
xor
stos
pop
inc
sub
jp
sbb
nop
jle
inc
notl
jno
xchg
inc
stos
rcr
fmull
test
jbe
arpl
mov
filds
xorb
add
ljmp
sbb
lcall
call
ret
cwtl
mov
in
mov
dec
inc
cmp
out
inc
jp
icebp
sub
and
inc
adc
mov
fisttpll
leave
outsb
push
push
popf
push
les
mov
test
gs
int
repz
dec
sarb
fmuls
clc
imul
jle
mov
les
inc
xchg
lds
sbb
xor
jo
mov
cmp
sbb
cmp
test
adc
sub
push
cmp
pushl
daa
orb
inc
sub
clc
sarb
notl
out
or
call
dec
aaa
mov
test
jb
adc
shrb
jg
cmp
in
or
test
cli
sub
push
in
cmp
shl
jne
dec
icebp
push
cmp
mov
pop
repnz
mov
shrb
icebp
and
pop
jne
lret
lret
pusha
in
dec
mov
pop
lea
sbb
aad
js
stos
pop
pop
bound
pop
xchg
adc
and
push
sbb
bnd
or
xor
jle
das
mov
test
adc
ljmp
xchg
out
imul
xchg
push
stos
adc
pop
rcrl
dec
xchg
jno
loop
pop
sbb
sub
adc
mov
mov
push
xrelease
lds
pop
xchg
jb
ja
fildll
or
data16
popf
mov
xor
lods
sub
mov
adc
je
in
ljmp
scas
dec
push
pop
out
inc
aad
push
loop
mov
push
fdivrs
and
test
inc
dec
cmc
sbb
mov
jg
data16
adcb
push
and
js
sub
dec
mov
int
outsl
jae
mov
sbb
sti
cmpsb
push
sahf
mov
adc
sub
pop
ja
rcll
fs
movsl
sbb
mov
movsb
iret
mov
test
sbb
dec
push
decb
repnz
sti
push
call
sub
mov
into
sub
cmp
hlt
jge
sbb
into
pop
repz
mov
pop
incb
push
stos
mov
faddl
mov
xchg
mov
push
loop
sbb
ret
inc
cli
sub
sub
mov
adc
push
iret
jae
shrb
cs
and
aam
jp
lods
push
mov
hlt
lret
lds
dec
popf
int3
fimull
jmp
test
xchg
pop
xor
xchg
popw
cli
and
filds
mov
push
mov
xchg
xor
sarb
sti
pop
inc
mov
pop
sub
pop
mov
jg
add
mov
scas
sub
jecxz
and
repz
or
jo
lock
sub
or
and
add
jg
add
and
or
mov
jns
inc
mov
test
and
lcall
push
aaa
int3
mov
dec
loopne
and
and
fwait
sub
and
out
mov
xchg
insl
aad
fildl
out
adc
aad
bound
pop
movsb
bound
lods
insb
add
icebp
ljmp
lret
insl
push
out
sbbb
mov
jns
inc
test
or
div
setnp
in
cmp
outsl
clc
mov
mov
ds
in
inc
popl
jmp
mov
dec
mov
or
mov
mov
xchg
in
scas
push
mov
pop
in
mov
jns
mov
lods
pop
sbb
out
shrb
jecxz
jmp
jbe
jne
imul
dec
inc
inc
pop
push
pop
xor
cmp
pushf
jl
mov
leave
outsb
jge
hlt
jb
ss
lret
push
lods
sub
loope
xor
ret
insl
push
aaa
data16
push
addb
pop
sbb
jl
mov
lret
shl
out
lcall
icebp
inc
mov
mov
mov
jnp
mov
mov
sbb
xor
out
pop
push
fbld
repz
push
mov
push
sbb
or
xchg
nop
and
adc
test
pop
pop
xor
mov
cmp
push
leave
cmp
pop
fimull
or
rcrb
jecxz
cmp
push
pop
test
push
out
and
jecxz
sbb
inc
cmp
in
test
pusha
xchg
sbb
jo
push
in
mov
xchg
jns
test
int3
xor
cmp
mov
add
inc
scas
cmc
mul
jecxz
in
cwtd
and
add
fnstsw
mov
jmp
push
popf
mov
outsl
jae
fs
jmp
cmp
jmp
ror
mov
negl
imul
les
pop
cli
sub
mov
pop
lods
add
xor
pushf
mull
inc
sti
dec
lcall
xlat
cmp
test
inc
sbb
pop
adc
jecxz
cmpl
outsl
inc
vmulpd
mov
inc
shll
inc
stos
push
mov
cwtl
push
subl
out
inc
fwait
int
push
test
je
lret
xlat
cmpsl
jbe
and
sub
mov
es
xchg
push
pop
sbb
adc
loop
xchg
aad
dec
popf
xor
jge
fildll
push
loope
out
pushf
mov
ss
sbb
ja
lcall
cmp
fnstcw
ret
and
and
lea
sti
push
flds
out
xor
pop
mov
lock
out
mov
aas
push
jns
push
inc
enter
movsl
dec
dec
lea
mov
test
clc
iret
stos
mov
dec
pop
lret
testl
lret
rorl
or
js
subl
mov
jecxz
inc
les
loop
fimull
mov
dec
add
iret
pop
sbb
sbb
negl
test
into
adc
imul
test
inc
and
lds
loopne
mov
sbb
out
xor
push
push
cmp
call
clc
insb
sbb
lods
fdivrs
jae
clc
add
popa
push
inc
mov
xchg
pusha
test
sbb
in
in
das
insb
xor
inc
mov
xchg
loope
insl
ficoml
or
jno
sbb
pop
jnp
stos
test
inc
jns
mov
loope
jl
lea
or
jb
stos
or
aas
cmp
in
je
test
out
sbb
jecxz
mov
cmp
or
movsb
push
mov
inc
lcall
mov
jle
sub
adc
xor
lret
dec
fldcw
or
adc
insl
cmp
sbb
mov
jg
fidivl
shll
lret
sbb
mov
mov
sbb
test
push
push
sub
jno
pop
inc
fisubrl
adc
or
inc
xor
int3
jge
fisubrl
add
in
mov
call
aaa
push
mov
aad
inc
scas
iret
scas
xor
push
in
xchg
jmp
cmp
test
mov
mov
insb
aad
push
lea
in
pop
push
adc
jg
popf
lret
daa
scas
mov
rorb
out
mov
cld
call
repnz
push
cmp
popf
or
gs
testb
mov
or
mov
test
sub
lret
jb
addr16
push
fld
or
jmp
dec
repz
into
lret
xchg
cld
stc
sti
xor
jmp
les
ljmp
repnz
sbb
cmpsb
jmp
sub
pop
jecxz
push
sti
shl
jo
repnz
fwait
popa
cmp
les
inc
dec
cmp
inc
pusha
dec
mov
xchg
lahf
cmp
fisttps
mov
mov
jb
push
ret
outsb
mov
push
aaa
les
in
ss
movsl
xor
adc
fisttps
adcl
xlat
pop
jne
cmpl
cmp
and
cmp
pop
pop
mov
pop
call
inc
pop
inc
sbb
les
add
ficoms
aam
ja
jne
jbe
std
push
pop
in
in
xchg
xor
cmp
cwtl
outsb
mov
inc
inc
loope
xchg
nop
xlat
out
mov
nop
xchg
mov
fsubl
inc
cwtl
sub
adc
sbb
movl
shrl
cs
scas
daa
ljmp
jmp
sti
daa
sub
test
stos
shlb
push
movsl
or
popf
mov
orl
or
loope
pop
adc
mov
les
push
inc
sti
mov
loopne
mov
sub
lret
cmp
xchg
inc
loope
ret
mov
adc
out
mov
sbb
pop
std
mov
and
mov
pop
rcll
sarb
hlt
adc
sahf
xchg
add
lret
out
lret
ds
std
mov
mov
pop
dec
mov
bound
dec
jb
mov
es
int
xor
adc
inc
enter
loopne
push
or
pop
pop
stos
jge
dec
je
leave
je
sub
mov
nop
fdivs
imul
add
popl
clc
dec
push
adc
lret
and
xor
adc
xlat
dec
aad
xchg
scas
out
sub
nop
cs
lahf
and
popa
push
adc
or
cmc
test
adc
ljmp
bound
in
jno
jae
rcrb
pop
div
insl
repnz
lahf
call
sarl
mov
pop
mov
fwait
in
pop
cmp
sbb
dec
cmpsb
push
adc
jns
inc
in
inc
jns
mov
jbe
push
mov
push
iret
jnp
sar
int
jg
push
mov
add
xchg
sbb
fadds
add
test
cmp
and
sub
or
jge
mov
inc
scas
stos
enter
or
aaa
jmp
loope
lock
inc
mov
xchg
push
push
sub
push
xchg
in
ret
and
sub
lds
enter
mov
and
push
inc
jne
sub
daa
lods
call
mov
popf
ret
xor
push
xor
arpl
sbb
pusha
ret
dec
cmpsl
inc
mov
pop
mov
or
cmp
inc
out
mov
ljmp
push
je
sbb
and
ret
je
jp
sbb
sub
in
out
xchg
add
cmp
or
enter
ljmp
test
mov
roll
cmp
push
ret
sbb
push
mov
in
push
fwait
aam
mov
fadds
lods
pause
cmp
nop
xchg
roll
and
xchg
iret
ss
sub
jecxz
filds
cwtl
sub
repnz
sbb
mov
sub
data16
jl
lods
cltd
out
mov
adc
imul
stos
adc
push
and
mov
faddl
pop
fisubs
and
lock
mov
mov
add
mov
lcall
in
mov
ror
mov
fwait
clc
cli
jl
mov
testl
cmpsl
xchg
pop
push
shlb
in
scas
loope
loop
dec
dec
enter
fimull
test
aaa
sbb
jl
or
aaa
push
icebp
jae
fwait
out
cmp
addb
clc
repz
cltd
jne
subb
xchg
cmp
mov
adc
push
popfw
pop
mov
cmc
iret
out
mov
std
push
outsb
in
and
test
gs
addr16
push
das
shl
sbb
cmp
add
ffree
and
and
aas
add
adc
imul
sub
sbb
lcall
imul
ds
mov
arpl
lds
mov
test
addr16
xor
test
jns
inc
lds
sar
inc
lret
mov
je
pop
cmp
cs
lds
xchg
pop
mov
clc
sub
and
fs
scas
loopne
and
popf
dec
sbb
mov
fwait
push
xchg
shl
stc
jmp
testl
push
mov
pushl
ret
in
test
dec
aaa
sbb
fs
sbbl
inc
mov
test
jns
jne
push
mov
or
ds
mov
leave
xchg
scas
add
adc
and
dec
jp
mov
enter
add
add
mov
lcall
lods
lret
dec
loop
sub
sbb
aaa
push
add
mov
push
jae
adc
add
xchg
lahf
daa
ljmp
ds
clc
xchg
lret
clc
repnz
jno
test
inc
idiv
push
es
andb
pop
fidivrl
xchg
dec
pop
repz
aas
cmp
adc
xchg
mov
jecxz
aaa
cld
mov
dec
andl
add
nop
jmp
neg
dec
inc
dec
rcrb
push
shll
add
pushf
xchg
repnz
push
gs
sbb
out
mov
leave
sbb
loop
mov
out
adc
jne
jnp
out
shrb
inc
stos
sbb
add
add
nop
lahf
or
and
pop
mov
jecxz
leave
add
in
sub
bswap
test
sub
in
mov
sub
cmp
repz
shrb
jp
loopnew
push
rolb
cmp
jge
out
test
inc
nop
scas
jo
inc
cs
jg
in
jno
lret
inc
and
faddl
pop
or
mov
cmp
mov
dec
lret
xchg
jecxz
cmpsl
inc
and
mov
dec
stc
je
cmpsb
push
pop
pushf
mov
push
jb
mov
clc
mov
add
jle
in
outsb
and
fiaddl
push
adc
lods
inc
push
test
out
pushf
ss
fisubl
mov
dec
hlt
sbb
iret
scas
mov
add
andnps
notb
jg
daa
push
mov
mov
mov
xchg
popf
hlt
mov
mov
pop
add
lods
jp
or
sub
mulb
hlt
sub
int
xor
cmp
roll
lcall
lcall
test
xchg
sbb
or
add
mov
sbb
sub
shlb
xor
sub
int3
adc
int3
xchg
mov
xor
cmp
test
mov
das
xor
cmp
xchg
fidivrs
or
mov
sbb
add
cmc
nop
out
sub
mov
add
adc
cli
rcll
pusha
lret
repz
add
dec
in
add
pop
js
pop
sbbl
lods
mov
outsl
mov
loop
and
hlt
fimuls
int
push
sti
xor
mov
ljmp
push
test
cld
in
sub
sub
push
push
adc
pop
jle
xchg
and
xor
push
daa
decb
add
sub
fisubrs
and
dec
je
jb
or
pusha
cmp
test
jbe
mov
and
cmpsb
in
stos
int3
push
insb
sub
ret
sub
nop
ret
clc
addl
lods
ficoms
sarl
lahf
mov
mov
inc
mov
add
lods
fiadds
addb
dec
outsb
repz
sub
pop
jge
ret
in
push
lods
push
sub
pop
ds
aas
ror
insb
pop
les
add
in
icebp
pop
test
sbbl
xlat
vunpcklpd
sbb
dec
dec
adc
jp
aaa
cmp
adc
xchg
gs
pusha
dec
push
push
xchg
arpl
scas
enter
aaa
out
push
js
jl
out
mov
xchg
add
xor
push
out
mov
mov
fstps
iret
jp
out
jnp
jnp
loope
xchg
cmpl
je
test
rcll
push
lea
les
sbb
jns
divb
sub
xchg
fidivs
dec
rcr
sub
es
in
inc
inc
pop
jne
fnstsw
fs
fildll
leave
adc
add
mov
test
popf
cwtl
push
sbb
lahf
jno
mov
dec
in
pop
out
inc
out
pop
flds
dec
test
pop
jp
push
movsb
inc
jmp
pusha
mov
mov
loopne,pt
xor
add
dec
out
sahf
dec
sysret
xor
xor
fisubrl
sub
and
sub
sti
outsl
or
adc
int3
mov
cltd
adc
add
mov
repnz
mov
cmp
daa
aas
repnz
pop
xor
pop
lock
int
dec
jo
fldt
xor
sbb
mov
mov
adc
cmp
inc
jno
xchg
outsl
xchg
popa
add
jns
aad
push
mov
xchg
ds
stos
in
xchg
or
dec
and
sbb
sti
push
or
dec
sbb
iret
sub
int
outsl
andb
stc
cli
arpl
sub
les
xor
lcall
cmp
fistpll
mov
xchg
push
xorb
sahf
or
leave
in
pusha
clc
or
das
mov
xor
adc
gs
lods
inc
cltd
inc
jp
aad
xor
adc
sub
xchg
nop
out
xor
test
and
xchg
repz
pop
mov
mov
cmp
xor
test
in
jae
and
cmp
subb
add
hlt
lock
xchg
mov
daa
movsl
test
pop
mov
push
es
bswap
or
xchg
sub
arpl
jp
push
dec
mov
in
test
xchg
flds
fistps
xchg
pop
push
rclb
dec
mov
shrb
dec
xchg
dec
jb
fdiv
aaa
ljmp
cld
lret
fimull
movsl
stc
mov
js
pop
cmp
and
add
cmp
sti
xchg
imul
mov
sub
pop
fadd
and
insl
test
cmp
addr16
push
push
rcl
ret
fsubs
stos
lods
mov
shr
out
push
dec
test
adc
andl
xor
pop
or
call
and
sbb
mov
pop
cmp
enter
cmp
loop
incl
sub
fiadds
movsb
in
popa
mov
clc
fcmovnbe
in
push
mov
lret
lret
and
mov
sarl
ss
cwtl
fimuls
adc
or
sbb
push
xchg
jno
jp
test
cmp
adc
mov
xor
sub
jmp
test
repz
test
sbb
inc
mov
test
mov
fldt
loope
aam
out
push
xchg
dec
xchg
pushf
rclb
cli
mov
adc
imul
mov
pop
xorl
jl
pusha
shll
sbb
cmp
push
jp
jbe
dec
arpl
mov
xchg
mov
jl
sbb
lods
jl
adc
data16
es
xchg
fidivs
jg
popf
shrl
add
xor
addr16
inc
sbb
mov
sub
xchg
mov
xchg
sbb
fsin
mov
mov
pusha
push
sbb
imul
push
pop
test
push
inc
in
enter
mov
repz
or
sahf
out
leave
repz
mov
fisttpl
xchg
push
lods
mov
in
fnstcw
inc
fbld
pop
mov
ret
cmp
insl
adc
ds
outsb
and
dec
cmp
out
adc
push
jb
dec
inc
sbb
sbb
subb
dec
jae
hlt
cmp
repz
cmc
jno
int
xchg
push
xchg
push
pop
fs
inc
test
mov
ljmp
jmp
lock
jo
fldenv
imul
mov
add
movsb
rclb
jne
push
hlt
and
lock
push
pushf
jmp
push
ja
mov
ret
add
fbld
sub
jp
bsf
cmp
scas
sarl
sti
xchg
enter
mov
cli
repz
or
imul
pop
xchg
jo
mov
cmp
jo
and
jge
mov
testb
out
pop
mov
pop
sub
xchg
jg
lcall
cwtl
inc
xchg
mov
clc
fadds
mov
inc
xchg
hlt
push
jle
divl
cmpsb
nop
push
mov
and
xor
call
and
les
jae
mov
push
mov
test
xlat
push
shll
push
lock
mov
adc
xchg
pop
pop
and
sbb
fidivrs
cmp
jecxz
lds
movsb
add
or
push
mov
push
jge
fxch
subb
xchg
cmpsb
data16
repnz
and
cmp
and
jae
xlat
jecxz
inc
cmp
or
stc
lret
jo
in
test
rolb
lret
std
or
jl
cmpsl
addr16
js
imul
inc
mov
pusha
loop
mov
jne
loope
sub
or
sub
insl
mov
or
dec
imul
push
fisttps
jb
inc
arpl
mov
fcoms
div
sbb
xchg
sbb
xchg
sbb
ffree
jmp
pusha
cld
aaa
popf
jo
or
mov
mov
xchg
pop
arpl
fsubrl
loop
mov
cltd
adc
out
mov
and
inc
fistpl
sub
jbe
jp
push
or
cmp
xor
or
dec
xor
leave
inc
shll
dec
in
jg
cwtl
sub
push
or
mov
dec
nop
ss
xchg
int
sbbb
arpl
jg
insl
aaa
push
sarl
mov
in
xchg
mov
or
outsb
pop
stc
iret
xchg
sub
push
mov
repz
sahf
pop
sahf
bswap
jge
pop
xchg
es
cltd
test
popf
bound
fcmovbe
xor
negl
mov
test
and
push
les
pop
sub
lods
les
push
je
adc
inc
xor
mov
xor
cli
sub
stos
scas
sbb
rcr
cltd
cmp
jecxz
out
mov
in
xor
pop
inc
push
sarl
adc
repz
cli
xorb
test
stc
push
rcrl
push
gs
lock
push
fsubp
int
gs
cmpsb
xchg
test
lahf
leave
xchg
ss
ret
inc
loope
es
sbb
push
into
add
mov
cltd
pushf
push
sub
out
add
sbb
adc
lods
cmpsb
enter
cld
loopne
xorb
in
lods
jnp
xor
out
fsts
sahf
cmc
in
ljmp
xor
stos
and
loope
js
push
in
jp
jne
xorb
negl
dec
sbbl
enter
xchg
mov
popa
jl
mov
or
xchg
xor
std
mov
push
sahf
sahf
push
iret
lahf
loopne
in
les
fsubrs
out
les
inc
les
pop
pop
sub
aas
sbb
xor
add
xor
iret
mov
mov
shrb
leave
jnp
add
repz
loope
into
out
scas
jbe
push
and
pop
stc
leave
aam
xor
and
rclb
dec
jp
xor
es
mov
roll
data16
pop
jno
imul
xchg
xchg
sbb
inc
adc
xchg
loope
add
bound
add
es
jle
xor
push
adc
cmp
sbb
sub
push
test
mov
stc
pushl
jp
clc
mov
mov
in
out
ret
jno
lea
test
shrl
fisubrs
arpl
cmc
fldt
dec
pop
jo
dec
movsb
ret
fcoml
inc
in
test
pop
mov
mov
jge
xor
push
mov
repnz
test
adcl
out
cmpl
inc
outsb
jne
cmp
bound
add
cmp
xchg
vpsubusb
aad
xor
mov
stc
test
pop
xor
stos
xchg
lods
pop
cld
loopne
and
popl
and
sbb
adc
std
imul
xor
inc
push
fldenv
jno
pusha
mov
repnz
sbbl
sub
enter
sbb
cld
ss
mov
iret
mul
dec
adc
aad
cwtl
jne
mov
test
loope
rcl
mov
cs
dec
pop
sub
mov
outsb
clc
adc
pop
mov
rcrb
enter
arpl
xor
insb
dec
and
testl
lock
cs
pop
sub
shl
out
fistpl
leave
les
or
xchg
dec
in
pop
cli
sbb
and
pop
divb
adc
mov
repnz
popa
sub
cmp
adc
aas
cmp
push
sbb
mov
lahf
mov
mov
sbb
sub
out
pop
xor
popa
xchg
int
data16
arpl
push
or
push
in
int
scas
mov
pop
add
or
outsb
das
adc
into
sbb
dec
in
ss
mov
xchg
mov
daa
jp
into
mov
jae
stc
dec
pop
icebp
mov
aas
xchg
pop
cmp
ficomps
stos
in
shl
inc
inc
ja
sub
adc
rcr
xor
lcall
adc
xchg
push
lea
int
test
pop
sbb
mov
aam
addr16
push
push
imul
mov
out
clc
fbld
sub
leave
mov
dec
dec
mov
popa
jne
std
inc
jae
mov
leave
jb
aaa
pop
cltd
test
pushf
call
xorb
decb
sub
mov
mov
push
push
jle
xor
push
pop
ret
mov
pop
fisttpl
aaa
push
inc
mov
in
sub
push
mov
pop
or
ljmp
xor
lods
in
xchg
sbb
xchg
aaa
daa
scas
push
pop
insl
push
xchg
dec
fstpt
sbb
mov
popf
cmpsb
push
pop
cli
idivb
icebp
mov
inc
pop
inc
arpl
aaa
in
lods
popa
adc
jle
mov
out
testl
add
adc
fstpl
and
sbb
or
movsb
mov
and
in
sub
sub
xchg
js
push
sbb
repnz
push
xchg
mov
cwtl
dec
inc
push
jo
xchg
sub
pop
lds
mov
aaa
add
mov
negl
rcll
out
xchg
mov
fsubr
mov
xchg
popa
pop
push
mov
es
pop
xor
loop
les
shl
pop
xchg
pop
jnp
movsb
sahf
in
mov
leave
cmp
sub
loope
cmp
inc
fxch
adc
and
xlat
subl
xchg
loopne
inc
in
and
xchg
lcall
inc
and
xor
push
pop
push
and
enter
nop
in
call
push
jae
popf
cwtl
dec
jmp
test
lods
jge
jne
push
stos
int3
or
push
shr
aas
sub
or
addr16
dec
xor
aas
cmc
divb
in
subb
cmpsb
cltd
mov
push
aad
jb
add
dec
push
mov
mov
mov
mov
or
jp
daa
ja
and
in
je
xor
push
inc
add
hlt
push
rcrl
push
mov
sbb
and
mov
push
iret
add
and
out
xor
xchg
cmpsb
jb
stos
dec
and
sub
mov
jp
mov
push
cmp
add
sub
push
xchg
or
cmp
add
xchg
add
aad
push
mov
push
add
mov
daa
xor
inc
push
mov
pop
adc
jnp
sbb
mov
inc
rcl
jnp
push
push
shl
pop
lcall
jp
insb
cmp
mov
mov
outsl
div
lret
iret
popa
mov
jg
cmpsb
lock
out
ljmp
mov
call
and
and
inc
sub
mov
push
es
xor
jle
stos
lods
mov
ja
mov
sahf
pop
inc
mov
jb
jae
push
movsb
inc
scas
mov
ret
xchg
cmove
xchg
fsub
pop
inc
insb
cmc
loop
arpl
aam
daa
outsb
ja
call
mov
xorb
roll
or
mov
out
dec
pop
stc
gs
repz
jbe
inc
pop
pop
add
xor
stos
mov
mov
pop
mov
push
add
rcll
lret
push
insb
mov
and
ja
add
popl
cmpsb
orl
aad
push
popa
jno
movsl
push
popf
in
insl
pop
pop
xchg
fstpl
adc
in
dec
ds
pusha
in
popf
loopne
jo
cmp
pop
push
aam
add
pusha
sarl
lods
jne
int
xor
int3
test
xchg
jo
or
sbb
jae
lahf
jl
push
cmp
cltd
fdivrl
out
push
rcll
jnp
jo
fmul
cld
mov
insl
jmp
test
in
xchg
mov
sti
jg
push
insb
sbb
mov
dec
std
jno
lret
xchg
push
sub
cmpsl
push
lret
inc
adc
imul
ja
sbb
mov
push
xchg
adc
fnsave
int
dec
in
int3
inc
sbb
adc
mov
mov
cmpsb
pop
or
or
jmp
pop
pop
mov
mov
repnz
ret
jae
or
cmp
inc
mov
pop
data16
ljmp
ret
push
mov
xchg
je
pop
lock
push
mov
sbb
dec
sbb
adc
mov
inc
lock
adc
jecxz
jl
cwtl
mov
jl
jmp
sub
jge
mov
mov
ret
add
sahf
lods
add
xchg
push
andl
int3
jb
xchg
ret
push
push
mov
cs
adc
addr16
mov
sub
cld
clts
imul
adc
xor
sahf
out
stos
mov
xchg
mov
xor
dec
in
int
nop
repz
jle
add
push
adc
xchg
nop
pop
ficompl
imul
xchg
out
jmp
inc
cmpsb
loop
sub
xchg
daa
fisttps
mov
push
fwait
xchg
gs
test
test
addr16
lret
test
xchg
iret
mov
sbb
adc
adc
push
mov
push
jge
fwait
cmpsl
adc
cs
out
add
adc
shll
aaa
psubd
popa
push
pop
add
xlat
pushfw
xchg
mov
outsl
or
mov
sbb
mov
aaa
xchg
rep
test
dec
enter
cmp
fidivs
or
mov
std
jp
sahf
sbb
push
stos
into
loope
xchg
jg
add
or
movb
psadbw
rcrb
jnp
xor
lahf
into
sbb
jg
es
lods
mov
fiaddl
jbe
jne
sbb
loopne
js
inc
or
out
addb
jl
xchg
pop
je
push
js
push
xor
add
ficomps
sbb
fidivl
fs
call
subb
mov
mov
cmp
or
jle
into
pop
push
sbb
xchg
add
cltd
pop
and
mov
enter
js
idiv
push
xchg
fprem1
sub
add
lret
push
xchg
cmp
pop
lret
into
dec
test
repnz
lret
push
add
jno
pop
push
sub
aaa
pop
or
dec
addb
daa
idiv
fcomp
imul
scas
addr16
mov
and
outsb
nop
jne
and
test
in
jbe
mov
pushf
mov
cmc
xor
mov
adc
jnp
push
mov
insl
imul
or
sbb
leave
sbb
cmp
mov
arpl
je
jecxz
addr16
ds
mov
lret
inc
stos
jle
cmp
pusha
pop
loope
xor
ljmp
xor
js
mov
cmp
xor
xor
imul
lahf
jg
sbb
aas
lcall
and
sbb
push
push
xchg
daa
in
enter
xchg
inc
mov
jae
mov
mov
adc
or
push
xchg
aam
andb
and
popf
cmpl
or
scas
adc
push
popf
cmp
fs
fisubrs
push
mov
sub
cmp
imul
add
sub
popf
pop
leave
dec
and
stc
das
popf
jns
popf
fadds
cmpsb
mov
and
mov
inc
in
cmp
sbbb
fsubr
fnstsw
inc
fimuls
mov
js
mov
cmp
fstpl
lret
out
pop
or
xor
gs
jno
fdivl
scas
sbb
and
lds
dec
dec
sub
jno
inc
ret
pop
jns
push
leave
icebp
mov
movsl
jno
cmpsb
popf
loopne
mov
inc
adc
xor
and
jb
je
mov
inc
mov
insb
and
loope
stc
mov
add
movsl
sbb
add
cmp
outsl
out
dec
fwait
jo
mov
insb
cmp
add
mov
test
pop
imul
and
xor
rcll
adc
inc
mov
clc
loopne
sub
or
push
sahf
dec
inc
out
fistpl
cmp
dec
data16
les
xchg
addb
in
fcompl
lret
push
inc
xchg
xchg
sub
push
test
outsb
push
loop
inc
mov
adc
push
scas
or
out
stos
call
adc
jmp
leave
bound
out
rorl
repnz
addl
add
or
mov
fdivl
mov
aaa
adc
fstl
loop
fucomi
idivb
push
ret
cwtl
push
sbb
lret
jb
movsl
insl
inc
adc
xchg
jne
fdivrp
or
and
out
mov
xchg
fisubs
mov
jno
popa
adc
cmp
insl
mov
mov
xor
imul
das
addl
aaa
mov
iret
cmp
loop
dec
stos
pop
add
jle
or
cmp
push
lret
addb
popa
bound
mulb
or
sbb
and
addr16
mov
mov
nop
push
aam
and
push
xor
mov
jecxz
jne
dec
fs
in
fcmovu
push
push
dec
jp
sub
pop
sub
cmp
out
les
popa
jo
scas
mov
arpl
in
mov
outsl
imul
xchg
outsl
das
aad
cmp
data16
scas
int3
mov
in
pop
sbb
repnz
cld
outsb
icebp
scas
cwtl
fsts
mov
add
and
pop
repz
stos
fidivrs
xchg
mov
adc
ss
add
pop
mov
hlt
cmp
sub
shrb
scas
adc
jle
cmpsb
mov
in
push
mov
popa
dec
rolb
lahf
mov
mov
ret
adc
in
mov
es
sub
sahf
insb
xor
nop
push
push
jnp
cld
out
push
mov
out
push
testb
repnz
or
sbb
orl
adc
jl
mov
mov
fcmovnb
pop
xchg
mov
lds
push
js
mul
mov
dec
mov
pop
pusha
outsl
stc
jp
mov
in
adc
addb
std
and
jg
inc
xor
xchg
mov
jne
rorb
pop
jl
ret
add
out
stc
jmp
mov
into
xor
sti
enter
movsb
jle
hlt
loope
stc
hlt
xor
pop
mov
ucomiss
pop
andb
cwtl
insb
jl
shlb
ffree
xchg
fdivrs
cmp
xor
sbb
push
add
adc
mov
das
pop
mov
test
add
cmpsb
imul
sahf
pop
push
mov
and
mov
sbb
push
out
fimuls
loopne
imul
dec
jle
xchg
int
jg
jp
fiaddl
sahf
add
ret
clc
bound
out
fadd
mov
jp
or
ret
xchg
mov
add
pop
pop
mov
xor
and
mov
aam
popf
cld
popf
lahf
icebp
xor
mov
add
mov
mov
outsl
cs
push
jbe
fidivs
loop
mov
push
cmp
scas
sbb
or
fwait
pushf
sub
xchg
and
cltd
jg
xchg
push
stos
pop
mov
mov
js
rcrb
sbb
push
ds
adc
leave
insb
adc
cmpsb
insb
mul
fcmovbe
add
pop
or
mov
adc
adc
mov
sbb
add
fs
sbb
dec
add
loope
insl
repz
pop
xchg
inc
sbb
imull
andl
std
out
adc
out
outsl
jno
lock
push
mov
in
xchg
rorl
je
or
pop
mov
scas
rclb
cmc
adc
adc
pushf
inc
push
imul
dec
mov
mov
jnp
cld
ffree
push
gs
xchg
inc
mov
pop
data16
sbb
scas
mov
cli
test
cmpb
imul
loopne
pushf
dec
mov
rorb
lock
and
jae
jno
and
movsl
nop
insb
add
aad
or
sub
fcoms
lcall
or
push
shll
mov
inc
insb
imul
inc
repz
pop
xor
and
add
push
sub
cmp
cmovl
es
cmpsl
clc
test
sbb
and
aas
bound
arpl
lds
dec
mov
adc
xor
pop
mov
add
cmp
rorl
jno
test
dec
js
sub
add
out
test
cmp
cmp
iret
aam
aad
inc
dec
fisubrs
lret
adc
iret
sbb
cld
pop
jp
fiadds
ficomps
test
ret
inc
lea
out
idivl
adc
pusha
inc
aam
mov
cld
negl
cs
mov
sbbb
fnstsw
scas
imul
call
sub
add
mov
inc
mov
test
jae
jp
pop
adcb
pop
inc
push
dec
fisubl
and
cli
outsb
lcall
inc
mov
push
cs
push
cmp
lds
mov
arpl
mov
push
aam
aad
jae
orl
bound
xor
test
daa
cmp
cli
lret
subl
cli
in
je
xchg
loope
mov
out
jl
shrb
xchg
ss
mov
xchg
xchg
push
jge
pop
sbb
pop
mov
sub
dec
sub
enter
dec
clc
mov
jle
sar
adc
aaa
hlt
xlat
orb
das
jge
adc
insl
dec
pusha
xabort
push
mov
add
negl
jne
popa
test
lcall
inc
sahf
dec
hlt
js
jecxz
popa
lods
sub
inc
dec
mov
cld
icebp
or
mov
daa
dec
test
pop
jmp
jae
xchg
jge
mov
mov
js
das
je
insl
loope
daa
mov
cltd
out
mov
adc
adc
sbb
movsl
mov
add
jae
push
jmp
add
dec
fbld
nop
shll
stc
test
rclb
inc
pop
std
nop
lea
cmpb
dec
push
inc
fcmovnbe
in
dec
js
and
xor
fwait
xchg
mov
adc
loopne
mov
loopne
cmp
js
and
daa
jecxz
push
dec
sbb
shll
addw
xor
mov
add
sarl
mov
bound
imul
leave
shl
mov
in
enter
stc
xchg
xor
mov
call
or
jno
xchg
stos
ja
xchg
mov
bound
daa
ret
sarl
fcoms
hlt
fildl
in
ljmp
xor
xchg
nop
and
mov
mov
lcall
mov
daa
adc
cli
jno
adc
push
cld
cli
mov
add
cld
ja
cmp
lcall
and
insl
in
push
pop
clc
xchg
lcall
lock
gs
in
cmp
out
mov
fadd
scas
adc
jo
fsts
rorb
lods
les
in
insb
lock
or
mov
and
xor
call
or
iret
xchg
scas
xchg
push
mov
pushf
xor
fists
ret
adc
add
imul
xchg
ret
push
fidivrs
mov
enter
push
std
jb
mov
pop
dec
dec
mov
cmp
mov
add
scas
cmp
adc
mov
leave
daa
test
ret
mov
add
shlb
fs
cwtl
sub
dec
jmp
jno
xchg
push
mov
or
mov
pop
hlt
test
ret
or
sub
dec
mov
push
jg
adc
mov
cli
dec
lds
ret
adc
fsubrs
stos
iret
js
mov
nop
popf
ficoml
insb
and
xor
ror
cmp
add
adc
popf
arpl
mov
inc
dec
mov
mov
mov
mov
push
mov
in
ficoml
lds
xchg
mov
mov
sbb
stos
repz
iret
dec
xorl
push
mov
jo
xchg
cmp
jns
fidivl
mov
cli
jl
xorb
sbb
cmp
dec
call
call
fisubl
jle
pop
out
ss
cmp
out
jns
xchg
loopne
add
test
ret
cmp
ljmp
adc
data16
xlat
push
fildll
hlt
xor
int
test
add
mov
aam
adc
mov
loopne
pop
daa
xchg
into
inc
bound
test
outsl
adc
mov
fisubs
in
movsb
mov
aam
or
push
fwait
sti
inc
pop
dec
xor
roll
lea
push
mov
sarb
inc
pop
pop
mov
idivl
ja
das
mov
cld
and
fimull
sub
and
xor
mov
fsubrl
lds
lea
out
or
add
or
shr
pusha
inc
inc
popa
mov
rcrl
or
jge,pn
mov
cwtl
jno
mov
fnstcw
adc
mov
sbb
insl
push
push
pop
cmpsb
popf
fwait
mov
mov
fadd
sub
jl
je
icebp
push
mov
leave
lods
cmp
sbb
xchg
adc
cltd
addr16
lods
enter
lods
push
dec
test
pop
data16
cwtl
lds
xor
mov
ds
cmp
fsubs
mov
mov
cmp
cmc
sub
xor
and
in
icebp
ja
push
cli
pop
push
jmp
in
xchg
and
push
inc
cmp
sbb
iret
movsl
xchg
cmpsl
in
cmc
imul
outsl
nop
or
dec
dec
mov
mov
adc
xchg
pop
enter
movsl
push
cmp
or
lods
out
jb
push
jge
movsl
lcall
mov
xor
cltd
xchg
add
les
subps
push
imul
rcr
out
mov
loop
ja
sub
addl
test
shl
mov
daa
in
dec
popa
jl
dec
mov
lret
lods
pop
loopne
and
in
add
pop
inc
fdivl
lret
aas
push
out
add
ret
dec
cmp
sbb
mov
xchg
inc
add
lock
xor
inc
sarl
add
pusha
pushf
mov
mov
jmp
pop
xor
lret
fcompl
xor
pop
sahf
push
test
lahf
cmp
dec
xchg
repz
mov
lods
out
mov
out
pusha
daa
adc
dec
inc
or
pop
mov
jb
mov
xchg
adc
outsb
dec
sti
dec
cmp
rorl
cmp
outsb
out
xchg
mov
cmc
xchg
inc
aaa
lcall
xchg
out
test
inc
int
std
fmuls
jg
jge
ret
rclb
pop
sbb
mov
cli
testl
push
cld
dec
test
cmp
xchg
outsb
es
push
lock
sub
or
nop
mov
or
out
dec
aad
xor
pop
inc
std
mov
bnd
loope
stc
dec
sbb
xor
ss
cli
xchg
cmc
rclb
pop
das
dec
push
aam
pop
out
xchg
insb
cli
lock
lret
stc
int
adc
add
mov
inc
add
pop
jo
inc
ret
fists
mov
mov
mov
xor
aam
hlt
iret
mov
add
sub
out
fsubrl
dec
inc
pop
mov
lcall
imul
aas
cmp
aad
pop
add
clc
test
jg
ret
ja
push
ficomps
mov
mov
test
ret
cmpsb
mov
rcll
shrl
nop
bound
jno
mov
sub
push
sbb
lods
jnp
jp
sbb
out
movsb
or
lahf
mov
pop
subb
notl
in
cmp
cltd
ficoms
jo
rcrb
addl
lock
sahf
rorl
insb
mov
in
push
fsubs
push
cmpsl
or
loopne
xlat
fcmovne
aas
cmc
or
inc
lret
lret
pop
mov
mov
ret
push
and
mov
pop
ja
xor
or
insl
test
push
jmp
lret
jle
adc
imul
dec
cmp
subb
mov
notl
out
mov
push
mov
mulb
int
xchg
add
sub
aaa
mov
shlb
lds
dec
sahf
lock
insb
inc
add
cmpsl
fidivrl
sbb
mov
std
mov
loope
test
cwtl
adc
lahf
dec
jl
es
mov
inc
rorl
xchg
mov
rol
jae
jge
jno
fisubl
das
add
xchg
iret
sbb
loope
sub
movsb
sub
add
xchg
jb
push
daa
cmp
inc
ds
push
pop
mov
sbb
enter
ror
imul
inc
std
dec
test
sub
sti
mov
and
jg
add
xchg
xor
jne
mov
test
mov
gs
nop
into
xor
adc
mov
mov
test
fs
lea
lods
pop
and
xor
ja
cmpsl
xchg
fistpl
into
jae
lods
inc
int3
fs
inc
xor
add
aam
je
pop
cmp
xor
mov
push
lret
sub
push
popl
fcmovu
adc
in
lfs
or
jg
xchg
fsubs
enter
fistpl
jae
fldcw
jnp
adc
in
xor
or
xchg
fsubrs
aam
clc
inc
in
outsb
xchg
iret
aad
ret
movb
das
xchg
rcrl
mov
mov
lahf
outsb
dec
push
cmp
mov
hlt
mov
sub
imul
out
or
insl
lock
jae
xor
adc
adc
inc
mov
and
pop
in
cld
cmp
test
sbb
loopne
ret
cltd
or
fsubp
or
lret
scas
dec
or
in
loop
inc
push
ret
nop
das
lret
xor
icebp
das
mov
mov
cltd
mov
movsb
mov
ds
mov
ficoml
lcall
and
mov
lcall
mov
sahf
lods
inc
cli
xor
cmp
jecxz
aad
or
jo
clc
lds
mov
orb
jecxz
lret
jne
scas
mov
test
fldl
jge
push
cmc
les
movaps
ret
jnp
cmp
inc
js
push
jno
in
inc
sbb
mov
sbb
xor
xlat
xchg
sahf
dec
rcrb
mov
nop
int
decl
adc
mov
mov
mov
xchg
dec
xchg
mov
in
jecxz
jle
pop
pop
cmpsl
js
pandn
mov
int3
mov
sahf
lret
pop
fnstenv
loope
in
mov
rolb
data16
jle
cli
sbb
jl
das
ljmp
scas
mov
stos
mov
inc
sahf
inc
push
ljmp
jb
xor
mov
inc
lahf
test
idivb
inc
mov
sub
imul
push
sbbb
jl
mov
xchg
xor
aad
enter
test
xor
pop
inc
imul
sbb
sub
and
mov
xor
inc
pop
mov
decl
dec
leave
inc
xchg
and
add
dec
les
mov
rcll
fmull
pop
outsl
cli
test
lahf
push
lds
and
repz
pusha
pusha
and
push
test
shll
ss
loope
adc
stc
popf
popf
inc
pop
jp
jmp
out
inc
pop
xchg
stc
xor
and
xor
aad
push
mov
bound
xchg
fnstcw
stos
decl
jne
icebp
adc
add
mov
pop
lods
fs
das
jne
aam
sahf
in
ja
mov
jo
inc
daa
cmp
and
sbb
test
cltd
pushf
out
sbb
repnz
cmc
outsb
dec
sbbl
dec
mov
shll
repz
jb
aaa
aaa
xor
iret
and
cli
ret
xor
jle
and
xor
sbb
loopne
out
lods
jg
popa
jo
fcomps
enter
cmc
jecxz
pop
mov
aam
dec
sahf
jle
and
cmc
ja
sub
pop
push
icebp
cld
jle
jnp
lea
jge
stos
xor
sbb
nop
add
mov
shl
scas
dec
in
push
sarb
inc
aam
lret
flds
push
inc
or
rcrl
aas
sub
jp
sarl
fsubrl
mov
aaa
sub
icebp
pop
repz
mov
les
or
fsubl
push
pop
stc
pop
xlat
xor
xchg
ss
mov
lods
cmp
in
outsb
imul
call
repnz
shrb
test
dec
enter
int3
inc
mov
in
pop
aad
push
imull
mov
repnz
push
out
or
inc
sbb
arpl
sub
sbb
sahf
pop
push
mov
data16
test
stc
ja
xchg
loope
int3
sahf
in
dec
inc
faddl
and
mov
mov
inc
gs
xchg
mov
jno
call
sti
adc
fiaddl
pop
push
ret
lds
popa
fs
xor
jns
ljmp
xchg
shr
imul
mov
and
pop
lret
mov
mov
pop
and
test
jno
adc
cmp
push
out
push
cli
ss
mov
push
cmpsb
sub
or
fsubp
in
mov
insl
push
mov
in
mov
cmp
lcall
jbe
pop
push
pusha
push
ror
lahf
jg
leave
add
stos
adc
int3
ljmp
cmc
ffreep
ss
fwait
push
fisubrs
sbb
movsl
add
es
int3
mov
insl
add
movsb
jnp
movsl
and
ds
jp
mov
xchg
xchg
add
mov
movsb
adc
lods
gs
sarb
insb
loope
push
adc
aam
mov
int
fsubs
xor
push
push
pop
fstpt
out
jecxz
fildll
or
gs
dec
sarb
xchg
jae
cmp
or
push
cwtl
loopne
mov
rcl
sbb
scas
inc
jnp
mov
addr16
out
test
nop
or
jns
sub
lret
arpl
jp
es
sbbb
or
mov
push
test
mov
inc
es
dec
xor
xchg
mov
stos
rolb
xchg
scas
pop
fmull
pop
cltd
int3
sbb
pxor
mov
cmp
jbe
bound
fdivs
mov
cmp
loopne
mov
in
sbb
lods
xchg
xchg
stos
and
xchg
jae
dec
movsl
lcall
add
cltd
movsl
mov
xor
outsl
jnp
jge
lds
cmp
lcall
mov
ret
inc
jo
inc
jle
sbbb
negl
mov
mov
les
repnz
dec
lret
mov
push
ja
in
jne
add
es
mov
mov
dec
popa
loop
push
and
imul
hlt
inc
testb
mov
scas
enter
pop
aad
stos
push
pop
into
repz
or
pushl
and
dec
icebp
stc
mov
pop
fidivrs
xor
jbe
pop
lock
push
sarl
aas
sbb
push
mov
pusha
jno
xchg
sbb
into
jae
pop
popa
mov
shrl
cmp
test
int3
inc
mov
xchg
jl
outsb
add
mov
rorb
adc
pushf
jnp
dec
and
mov
mov
fcoms
jge
lcall
jmp
pusha
sub
test
sbb
jae
iret
lea
in
mov
adc
xchg
loop
dec
inc
jno
cs
xor
or
jns
rclb
daa
stos
std
mov
push
mov
pop
xchg
push
mov
push
shlb
pop
mov
addb
push
mov
jns
push
jp
ret
nop
adc
xchg
mov
mov
inc
cli
imul
sub
push
and
popf
pop
jmp
ret
loopne
add
xchg
mov
mov
prefetchw
lds
sahf
test
neg
dec
out
jle
addr16
mov
mov
mov
in
adc
push
xchg
cmp
enter
cs
adc
ljmp
lret
cmp
lcall
int
mov
mov
iretw
jle
push
call
mov
faddl
xchg
jp
aad
cmc
xchg
mov
adc
xor
out
jg
mov
ja
and
out
lret
push
mov
cli
movsl
cmc
loop
and
out
je
leave
mov
stos
lret
imul
jecxz
or
sbb
mov
inc
cli
dec
out
jle
insl
mov
sbb
adc
stos
ret
fldl
push
sub
test
mov
pop
loop
insb
xchg
mov
push
out
aaa
je
and
out
mov
daa
and
mov
inc
adc
dec
fs
movsb
mov
push
xor
lods
dec
mov
dec
inc
loopne
pop
aaa
xor
inc
push
clc
gs
dec
xlat
dec
pop
push
loop
mov
xchg
inc
leave
mov
adc
xchg
xchg
jo
mov
imul
outsb
sub
aas
xchg
and
lods
mov
repnz
push
push
or
test
std
mov
arpl
xor
push
pop
sub
mov
mov
cmp
mov
xchg
push
mov
roll
out
lea
stc
ret
arpl
jmp
in
mov
mov
je
pop
lds
inc
cltd
leave
leave
roll
push
pusha
cmp
adc
enter
mov
xor
sbb
mov
jg
icebp
xchg
dec
adc
imulb
movsb
outsl
mov
sbb
or
push
stc
out
pop
pop
mov
out
popf
dec
mov
jns
pop
add
fsubrl
imul
mov
mov
cmp
xor
push
xchg
push
push
lods
or
ret
jecxz
push
pushf
mov
cld
iret
mov
icebp
push
pop
push
mov
add
sarb
xchg
cmp
xor
imul
repz
pop
push
sahf
arpl
adc
pop
popa
fwait
push
pop
dec
mov
std
mov
out
push
and
lret
mov
lock
inc
test
sbb
nop
ja
inc
xlat
mov
out
mov
aad
jae
or
jmp
sub
mov
out
push
sbb
push
and
movsl
mov
mov
fistpll
inc
adcb
clc
sbb
or
fs
aam
repz
cmp
xor
iret
jg
adc
fisttpll
push
cwtl
cltd
movsl
xchg
mov
std
mov
jp
and
or
xor
xchg
sub
dec
shll
enter
pop
cmp
es
test
das
scas
adc
add
pop
mov
arpl
test
cs
rorb
int
loop
add
test
xchg
pusha
ljmp
mov
lcall
mov
sbb
shl
sahf
test
fwait
mov
test
or
push
push
push
rcl
lods
push
ds
push
pop
mov
pop
add
mov
jbe
or
addr16
leave
dec
gs
arpl
jns
sbbl
js
cmpsb
call
lods
scas
out
mov
int
cli
dec
das
out
mov
push
and
jp
ficoml
icebp
or
pusha
add
and
loop
xchg
add
loope
das
nop
mov
lods
mov
pop
sub
test
imul
mov
push
icebp
pusha
mov
das
sbb
movsb
pop
jno
inc
xchg
inc
push
jg
mov
push
aam
iret
mov
aam
sbb
jae
mov
pop
arpl
fmull
push
pop
cmc
lods
mov
dec
pop
int3
cmp
outsb
jae
daa
pop
mov
mov
js
test
out
pop
and
mov
mov
iret
xchg
cltd
inc
bound
cwtl
dec
adc
into
movsb
popf
arpl
loopne
mov
gs
cmp
push
dec
dec
mov
inc
xorb
cmp
popa
mov
jns
mov
lods
je
std
mov
dec
mov
lds
das
test
jne
and
lods
xchg
inc
push
mov
sub
ret
insl
imul
sbb
inc
adc
lds
mov
sub
mov
data16
scas
mov
je
fbstp
mov
jmp
pop
push
test
icebp
int
mov
push
or
fcomi
inc
add
hlt
fisttpll
sub
das
test
insl
sbbl
xor
push
xchg
xchg
ret
mov
push
popf
push
lret
lods
mov
jnp
jge
shll
jae
add
or
mov
jo
sarb
jo
sbb
inc
dec
adc
hlt
mov
pop
jmp
popa
ret
ds
xchg
mov
aad
cmc
mov
jno
sub
xchg
cmpsb
adc
cwtl
clc
cwtl
xor
ficompl
loop
sbb
sti
jns
or
mov
ret
test
pop
mov
dec
sbb
aas
test
push
cmc
pop
jle
jbe
movsl
mov
ss
leave
cld
jns
push
push
xchg
sbb
push
push
call
pop
scas
outsb
pop
mov
sub
cmp
ficompl
mov
xchg
loop
jmp
lea
sub
lds
gs
ficoms
dec
add
ds
xchg
out
fwait
arpl
add
das
xchg
cmc
loope
jne
es
jg
sub
out
push
out
mov
lods
mov
sub
push
or
push
push
sub
sub
lret
out
push
sti
stos
cmpsl
popf
lods
jns
jmp
ds
add
cmp
inc
xchg
jbe
outsl
mov
and
push
jns
mov
push
loop
mov
pop
scas
xchg
jle
mov
pop
sub
sahf
dec
and
inc
scas
and
out
mov
das
pop
cmp
sbbl
xchg
mov
and
das
and
add
mov
or
and
cmp
pushf
sub
push
cmp
aas
or
movsl
mov
pushf
pop
xchg
pop
mov
sbb
mov
cmp
lods
xor
icebp
and
loopne
jge
jmp
or
lahf
mov
add
imul
jne
int3
repz
arpl
js
dec
bound
repz
xchg
iret
pop
inc
xor
repz
and
and
jmp
gs
mov
flds
sbb
fistpll
add
nop
or
inc
sbb
cmpsb
test
jecxz
cltd
pop
adc
pop
repz
pop
pushf
sbbb
sbb
lods
lret
lcall
jge
bnd
incb
dec
xorb
push
sbb
fcoml
add
pop
outsb
mov
sub
dec
mov
mov
sbb
pop
mov
xchg
pop
mov
mov
pop
sbb
je
mov
in
dec
and
sub
inc
push
stos
cli
jle
jno
push
mov
aad
push
jecxz
mov
push
lret
jns
sbb
faddl
xor
jmp
sub
in
vcvtps2dq
mov
loopne
mov
push
cmp
pop
lcall
cmp
pop
cmp
sbb
push
inc
or
out
mov
call
aam
imul
push
add
cld
movsb
icebp
jnp
mov
xor
mov
jne
outsb
jae
repnz
jo
mov
mov
out
add
pushf
mov
inc
addb
int3
es
daa
xlat
bound
lods
mov
sub
add
call
sbb
std
cli
push
clc
scas
sub
cltd
movsl
lret
out
dec
dec
bound
adc
adc
fisttpll
sub
dec
popa
inc
adc
sbb
or
loop
adc
out
mov
pop
xchg
loop
pusha
stos
rcr
adc
inc
into
cltd
mov
jmp
inc
ds
xchg
and
clc
ds
imul
sti
dec
scas
and
jecxz
sub
xchg
push
loope
push
frstor
ja
mov
xor
rolb
aas
lods
fcmovu
cmp
jmp
pop
loope
insl
out
add
and
jmp
addb
out
sarb
ret
push
pusha
outsb
jle
cmovp
mov
call
shlb
dec
or
adc
xor
push
add
ja
gs
lea
cltd
inc
sub
test
out
jg
xchg
mov
adc
sub
pop
add
pop
lret
stos
and
add
cld
and
fsubs
dec
xorl
xchg
mov
mov
scas
dec
mulps
punpckldq
in
add
rcl
mov
mov
cmovo
mov
sub
aad
sub
pushf
pop
xchg
mov
dec
adc
and
insl
adc
movsl
jae
stos
add
ret
cmpsb
gs
add
outsb
inc
pop
inc
andl
movsb
test
icebp
jbe
std
or
mov
push
out
pop
mov
mov
mov
shll
xchg
mov
cmp
jno
and
xor
rcll
xchg
fsub
lar
jecxz
enter
pop
cmp
cltd
mov
or
out
add
dec
and
ja
pop
cli
pusha
les
inc
in
or
movsb
jns
jmp
dec
stos
adc
cmp
dec
inc
arpl
fsubs
out
loope
inc
mov
mov
out
sbb
push
or
mov
sbb
xchg
xchg
in
mov
push
fnstenv
mov
xor
cmp
stos
sbb
insl
inc
es
jmp
sarl
int
or
sub
mov
sbb
test
sahf
aam
std
ljmp
hlt
sbb
ljmp
stc
jnp
xor
mov
or
aas
xchg
test
pop
ss
sub
push
mov
pushf
fdivrl
out
fists
loop
push
pop
sub
push
xchg
outsl
pop
jbe
cli
iret
data16
fimuls
lcall
shl
shl
mov
push
jo
cmpsb
or
mov
or
aad
inc
mov
push
fidivl
stos
pop
ljmp
dec
ret
sub
cmpsb
scas
aas
and
xchg
jmp
mov
insl
cli
inc
mov
inc
popa
jg
cli
fisubrs
push
pushf
pop
mov
in
fbstp
xorl
mov
repnz
bound
lock
mov
cmpsb
das
movb
popf
stc
rorb
insb
lock
ljmp
cmpsl
cltd
popf
sbb
inc
lea
and
push
repnz
cs
call
enter
push
push
cmpsb
xorb
push
mov
sbb
cli
rorb
cltd
fnsave
negl
dec
xchg
cs
or
bound
arpl
fdivs
dec
shlb
dec
or
xchg
lds
jb
mov
mov
mov
hlt
imul
adc
dec
mov
pop
or
insl
mov
sub
repnz
cmpl
xchg
xor
and
mov
lret
ljmp
mov
mov
test
test
loope
incl
cmp
xor
out
into
pushf
into
add
lret
push
and
cmp
mov
jbe
dec
and
cmp
in
scas
mov
sbbl
mov
push
jmp
popa
je
test
pop
popf
pop
aad
inc
in
xor
test
aaa
fwait
mov
mov
test
test
xor
popl
rolb
test
cmp
insb
mov
add
popa
adc
insb
pop
out
mov
pop
bnd
cmpsl
lods
fcomp
xchg
test
loop
sbb
jmp
push
enter
faddl
cmp
loope
add
cmc
sub
fdivrl
repnz
test
mov
jl
cmp
shrb
int
and
pop
arpl
mov
adc
xor
jbe
xor
inc
stc
xlat
out
in
cli
and
dec
scas
add
out
and
insl
and
xchg
cmc
pop
test
stos
and
and
dec
cmp
cmp
adc
jg
ja
xchg
xchg
lods
inc
leave
dec
or
adc
dec
push
out
mov
int
add
sub
cmc
andb
inc
sbb
cld
xor
mov
jge
jb
pushf
sub
lods
add
dec
inc
cmpsl
jmp
sbb
xor
stos
push
or
rcr
add
mov
add
shrl
mov
out
jmp
in
mov
dec
rorb
cmc
mov
adc
or
stc
in
andb
adc
dec
sbb
fstpl
cli
inc
jne
ss
push
icebp
xor
jae
inc
sti
pop
jb
iret
pop
outsb
and
jle
push
imul
mov
xchg
push
test
jle
cmp
push
mov
or
inc
cmp
add
cmp
outsl
inc
xlat
add
les
arpl
dec
inc
pop
mov
popa
loop
mov
mov
js
dec
pusha
jns
dec
adc
jbe
insb
fs
cwtl
out
outsl
pop
dec
or
xchg
pusha
pop
adc
jns
fs
negl
or
push
int
dec
test
int
fsubr
xorl
push
dec
xor
les
mov
sbb
mov
and
outsl
jnp
mov
xor
dec
pop
xor
fbld
adc
aam
fsub
dec
dec
push
inc
cld
pop
aam
rcll
and
or
adc
lahf
jae
aad
bound
repz
sub
outsb
mov
mov
mov
mov
hlt
mov
pop
int
xor
jmp
push
scas
in
jne
sub
mov
xchg
jb
mulb
popa
or
mov
dec
dec
jbe
imull
push
push
subl
cmpsb
test
mov
test
outsb
or
mov
sbb
cmpsl
addr16
fldl
dec
mov
adc
mov
leavew
repz
push
adcb
inc
mov
dec
mov
pop
push
sbb
inc
scas
cmpl
fst
mov
dec
lret
arpl
dec
mov
loop
das
leave
popa
es
stos
xchg
push
xchg
icebp
shll
push
insl
jp
jno
cmp
jge
pop
inc
mov
add
fildl
dec
sarb
mov
add
daa
icebp
and
add
mov
mov
aam
fdivrl
jg
sbb
cmp
popa
cmp
popa
sub
add
push
addr16
fldcw
fidivl
leave
dec
adc
iret
arpl
mov
stos
mov
test
or
cmpsb
lods
push
jl
sahf
cmp
push
push
cmpsb
cli
in
push
mov
add
test
jo
loop
je
sbb
and
or
vshufpd
mov
fisttpl
xchg
jo
jne
mov
leave
bound
lds
mov
icebp
mov
mov
mov
gs
xchg
or
lods
lret
cmc
xlat
inc
les
push
xchg
in
cs
test
push
out
add
jne
push
lfs
lds
inc
ss
into
jle
pop
fdivrl
imul
jg
jmp
pop
jl
mov
shl
mov
mov
adc
cmp
ret
dec
adc
dec
ja
mov
mov
test
push
lds
push
mov
iret
sbb
jo
adc
ss
cwtl
adc
sbbb
aaa
push
rcr
pop
mov
in
pop
jge
or
subl
int3
int
mov
and
jmp
movsb
xor
mov
imul
xor
test
cli
cwtl
jno
jl
movsl
cmp
cltd
jae
aaa
mov
jno
or
inc
or
lret
push
iret
push
test
inc
decb
inc
ja
lret
mov
sub
inc
inc
es
sbb
inc
mov
lods
xchg
fbld
jno
data16
incb
and
and
sbb
lods
scas
xchg
mov
orl
loope,pt
sbb
cmp
and
mov
es
rcl
gs
cmp
inc
jp
into
inc
add
and
add
fwait
pop
or
jbe
ja
mov
jne
xchg
xchg
gs
pop
pop
cld
inc
subb
mov
push
sub
addl
aad
shr
dec
movsl
pop
sub
jb
aaa
push
add
xor
call
mov
push
cmc
sahf
and
test
jno
aad
inc
iret
inc
mov
loopne
and
fildl
fistps
daa
add
es
mov
cmpb
pop
es
scas
mov
push
adc
xchg
push
in
sub
call
fnsave
jp
dec
jae
xchg
inc
jb
push
sbb
sbb
xlat
cld
int
dec
and
push
jg
mov
aaa
rorb
aad
mov
pop
xchg
xchg
shl
mull
cltd
incb
pusha
and
add
mov
inc
push
in
push
sub
cmp
or
hlt
jg
ret
mov
dec
test
fcom
stc
sbb
push
sub
cmovs
divl
fldenv
dec
fs
xchg
add
outsl
hlt
test
decl
push
aas
push
enter
mov
inc
xor
cmpsb
adc
cmc
scas
lods
mov
leave
jbe
adc
sub
add
cli
subl
daa
shl
mov
aad
inc
lret
and
pop
test
xor
bnd
test
lods
pop
pop
jg
push
or
and
out
fisttpll
mov
int
cmc
in
outsb
jae
adc
xchg
mov
inc
addr16
testl
mov
xorl
in
dec
test
mov
loopne
or
pop
jmp
dec
out
dec
out
enter
add
int3
iret
inc
out
pop
lea
mov
insb
fcomp
insl
inc
jns
ljmp
ret
ret
fdivrp
jb
dec
or
sbbl
popf
and
mov
rorl
js
dec
shlb
pop
ret
in
inc
or
cmp
out
cmp
aam
add
and
fsubrl
jns
nop
rorl
pop
js
idivb
jns
mov
xchg
loope
add
inc
in
xlat
mov
jnp
scas
sbb
push
cld
mov
fwait
lcall
popa
mov
add
mov
add
adc
or
stos
xor
or
dec
repnz
repz
add
push
jecxz
jle
jns
xor
hlt
xchg
inc
divl
repz
jl
mov
add
mov
pushf
mov
lcall
sub
dec
sahf
pop
cmpsb
enter
fwait
aad
shl
std
mov
aas
add
jg
lods
jnp
inc
pop
or
add
cmc
inc
cmp
in
add
les
inc
push
filds
inc
pop
adc
dec
subb
shll
idivl
jno
mov
push
enter
xchg
sbb
imul
push
jmp
mov
popl
xchg
dec
or
psubw
outsl
pop
das
add
aad
pop
or
mov
jge
in
push
add
adcb
lret
incb
add
in
std
call
xchg
add
and
jnp
cmp
aam
xchg
gs
ret
push
fsin
ds
mov
pop
je
pop
orb
mov
fnstcw
aad
enter
jmp
out
stos
ret
jge
jl
pop
sub
mov
xchg
jle
ror
les
lret
sub
clc
cmpsb
add
enter
rorl
inc
cltd
mov
adc
loopne
dec
leave
jle
cltd
std
test
in
add
cmp
jmp
jae
out
outsb
xchg
push
stos
mov
dec
aas
dec
cli
mov
or
inc
in
daa
daa
vmread
xchg
pop
cmp
arpl
insl
xor
cli
daa
sahf
inc
nop
adc
push
and
int3
mov
lods
adc
hlt
lock
mov
scas
outsb
add
xchg
cs
repnz
subb
inc
ret
jns
mov
aaa
ret
inc
jp
loopne
add
inc
add
lea
push
cmc
mov
repz
adc
test
dec
pushw
add
and
jae
cmc
cmp
or
sbbb
adc
clc
pop
cmp
or
bound
loopne
fisttpll
ret
push
push
inc
xchg
xchg
in
insb
mov
inc
icebp
adc
mov
popa
into
mov
inc
movsl
xchg
xchg
adc
jecxz
cmp
loope
mov
cmp
sub
dec
pop
repnz
sarl
dec
mov
push
add
insb
jnp
notb
xor
mov
mov
jecxz
rcrb
mov
inc
jecxz
scas
mov
xchg
and
or
push
lahf
xor
cmp
ret
adc
mov
jmp
das
mov
or
imul
movsb
and
push
subb
iret
fcmovnu
jge
push
std
mov
mov
ret
icebp
frstor
loopne
xchg
add
mov
jnp
sub
pop
or
push
mov
outsl
jp
nop
dec
mov
orl
std
pop
inc
fildll
mov
in
bound
inc
pop
cmp
clc
jne
fsubs
int3
lods
cmpsl
pop
loope
rclb
sti
in
mov
dec
jg
cld
movsb
adc
clc
in
shl
dec
lret
lds
addr16
jp
dec
xor
and
mov
sbb
cmp
and
into
and
dec
inc
in
cmpl
cmpsl
out
add
mov
or
push
mov
cmp
push
mov
and
sbb
xchg
ljmp
out
ss
outsb
jp
loope
cs
shll
sbb
sbbl
xchg
mov
sarb
fwait
addb
js
and
lret
cmpsl
leave
inc
nop
aas
aas
push
or
push
pop
inc
jecxz
roll
fildll
mov
push
cmpsb
add
xchg
inc
mov
outsb
les
rorb
cmp
icebp
mov
into
iret
dec
shrb
call
fiadds
jns
cmp
xchg
int
jl
mov
aaa
popa
inc
push
push
decl
mov
cld
xor
insl
clc
mov
mov
xchg
cmpsb
adc
push
in
xchg
xchg
jo
outsb
aas
mov
and
ja
dec
inc
add
cmp
es
into
mov
pop
or
sbb
add
and
xchg
push
into
push
xchg
push
sub
call
pop
adc
imull
xchg
aas
adc
inc
addb
mov
jle
add
sub
lcall
jge
repnz
mov
mov
adc
push
push
xchg
or
cld
enter
xchg
mov
cli
cmpsl
shl
ja
jle
push
pop
cli
aaa
mov
fisubs
rcrl
push
in
xor
testb
std
out
add
les
das
mov
dec
stc
ss
sahf
arpl
or
mov
push
lcall
and
aas
mov
sub
bound
xlat
daa
mov
xor
divl
push
sti
push
into
add
xor
mov
inc
sbb
push
loopne
mov
mov
gs
push
fsub
int
jp
fldcw
shll
das
loopne
repnz
rol
jb
cmp
arpl
jmp
jae
int3
mov
in
test
scas
jmp
pushfw
jl
or
pusha
cwtl
and
repnz
mov
add
push
inc
mov
sbb
out
mov
dec
cli
pop
mov
push
call
test
jl
mov
mov
lds
inc
xchg
mov
loopne
stos
sub
fistl
imul
lahf
sahf
cmp
addr16
mov
std
cmpsb
loop
jae
outsb
or
sarl
jge
pushf
stc
aad
jg
or
and
and
mov
or
jne
push
cmp
popf
pop
cli
dec
sbb
fstp
aaa
lea
adc
fsubs
loopne
xchg
lods
pushf
enter
sbb
ret
add
jl
xor
xlat
or
mov
loop
enter
fidivs
mov
test
mov
stos
push
mov
addr16
mov
pop
and
dec
in
sti
mov
dec
cwtl
lock
push
test
scas
ficoml
arpl
add
xchg
and
lea
pop
cmp
into
mov
sbb
gs
insb
fcomps
inc
stos
and
ja
push
mov
stc
mov
or
mov
cmp
jbe
in
sar
dec
lea
sbb
mov
inc
test
fisubrl
sub
orb
mov
movsb
inc
inc
push
xor
adc
fcom
aaa
aad
mov
inc
push
xchg
arpl
jnp
pop
aad
cmp
and
fiaddl
sbb
pop
loop
xchg
mov
repnz
xor
sahf
fwait
mov
and
fidivs
jo
stos
push
sahf
notl
addr16
and
dec
fistpl
lods
jg
adc
cmc
sbb
mov
ljmp
pop
add
je
sub
dec
packsswb
push
pusha
lods
inc
push
pushf
jb
inc
sahf
or
nop
mov
divb
jno
hlt
shlb
add
pop
xchg
xor
mov
adc
repnz
jo
sub
jno
jp
sar
jecxz
sub
push
mov
push
out
xlat
xchg
rorl
or
xchg
adc
imul
loopne
loope
xor
adc
movsl
gs
addr16
push
jg
fiadds
rcrb
rol
dec
xchg
cmp
cld
jg
adc
push
adc
testl
adc
aam
popa
mov
lcall
frstor
jae
push
mov
testl
add
in
add
in
lahf
and
clc
int
inc
gs
lret
fstps
pop
push
cmc
js
in
outsl
addl
nop
loopne
movsl
push
mov
mov
aad
stos
and
fisubs
push
sbb
cmp
cltd
adc
and
icebp
out
push
lahf
and
and
roll
or
mov
jp
pop
dec
mov
lret
loop
jl
pop
jmp
enter
push
filds
fwait
cmc
ficoml
std
testl
add
adc
adc
repz
mov
xor
daa
dec
xor
ret
dec
insl
xchg
and
loope
xchg
andl
into
sub
popa
scas
or
pop
mov
push
aad
sbb
fsubrl
add
loop
das
fwait
sarb
push
dec
movsb
or
mov
push
mov
dec
push
mov
std
jne
mov
pop
faddl
xor
and
cld
push
jl
xor
out
fdivr
cmp
sbb
je
movsl
fisttpl
and
or
cmp
rol
test
inc
hlt
inc
orl
dec
dec
orl
cmp
xor
dec
ljmp
jp
adc
movsl
lods
std
xchg
clc
cmp
daa
cmp
or
incb
in
pop
outsl
movsb
popf
dec
fsubl
pop
cmp
or
incl
ret
out
jo
push
stc
bound
aaa
sbb
mov
jp
repz
xchg
repnz
nop
cmp
mov
pop
in
xchg
sahf
fistpl
out
int
mov
scas
fsub
xchg
pop
or
lcall
cmp
leave
push
test
and
and
cmp
pop
mov
es
push
outsl
cwtl
lret
inc
cmp
sbb
or
or
pop
push
jb
bound
aam
mov
or
int3
fists
sbb
dec
dec
mov
lds
rorb
inc
adcb
icebp
leave
sbb
mov
daa
seto
jnp
stc
out
loopne
in
add
sti
sarl
adc
mov
fnstcw
and
or
mov
mov
sti
test
mov
enter
jbe
pop
shr
aam
fdivl
inc
fdivrl
mov
pop
sub
aam
inc
xor
int3
sbb
push
mov
xchg
xchg
aaa
pusha
js
sbb
pop
add
addr16
xlat
cltd
arpl
and
gs
jnp
jae
and
sub
jno
das
clc
pop
ret
dec
fcoms
pop
xor
int
mov
or
in
ljmp
jge
sub
inc
xchg
mov
mov
xorb
lret
imul
inc
nop
sbb
jnp
push
dec
adc
add
hlt
add
stc
lahf
xor
mov
clc
jbe
rcl
push
inc
cmpsb
jp
mov
dec
mov
inc
mov
dec
lock
sub
mov
das
insl
lahf
add
push
mov
les
mov
stos
testl
push
mov
mov
prefetchw
or
aam
test
dec
fwait
gs
jb
stc
push
cltd
xor
xchg
mov
les
and
xchg
mov
mov
cmpsl
dec
incl
test
cld
mov
arpl
aam
mov
dec
shrl
out
mov
clc
jb
out
mov
into
add
cltd
lock
jg
ret
jns
stos
inc
xor
ljmp
iret
dec
sbb
xor
cmp
xor
movsl
pop
xchg
subb
mov
stc
imul
enter
sbb
jae
out
xor
ret
fimull
pop
adc
and
popa
adc
sahf
jnp
or
fnstcw
or
popf
sbb
inc
lods
sub
fsubl
jmp
lahf
pop
aad
cwtl
and
sbb
push
add
mov
pop
mov
ret
mov
jg
xlat
pop
fbld
adc
loop
jo
nop
fstps
addl
pushf
imul
int
sub
addl
jbe
mov
xchg
adc
push
mov
dec
pop
leave
and
sub
dec
dec
add
stos
aad
pop
push
inc
ss
out
mov
fidivs
ret
xor
arpl
cwtl
jns
mov
sbb
xchg
mov
add
xchg
aas
lods
mov
bound
in
jae
jle
addr16
loopne
ret
inc
orl
sub
mov
ds
sub
stos
pop
aaa
pop
sbb
int3
lret
fisubl
adc
in
shld
inc
test
xor
mov
ret
jnp
lcall
add
sbb
cmp
stc
stc
and
pop
pushf
ficoms
jle
and
push
test
fmuls
idivl
sti
xor
arpl
sbb
inc
inc
dec
sub
mov
in
jnp
pop
add
fistps
sti
pop
fwait
add
xchg
inc
pop
or
adc
xor
inc
roll
inc
jle
pushf
enter
fcmovnbe
pop
fcompl
jnp
mov
lret
mov
push
and
push
sub
dec
lret
sahf
je
inc
pop
test
inc
adc
sbb
mov
aam
insl
inc
aaa
push
ss
repnz
andl
popa
mov
sub
pop
jg
imul
aaa
data16
xchg
das
mov
dec
outsb
cs
or
dec
in
ja
xlat
ljmp
cmp
lret
loopne
je
dec
enter
sbb
out
dec
xor
mov
mov
and
ljmp
stc
dec
xchg
push
cld
inc
dec
call
mov
in
mov
fistpll
out
push
jecxz
sbb
lock
jge
loopne
xor
or
dec
push
xchg
xchg
movsl
pop
fldenv
sub
inc
stos
inc
mov
sbbl
push
test
stos
xchg
push
and
add
sbb
push
lahf
mov
mov
aaa
shr
pop
repnz
sbb
inc
mov
mov
xor
push
into
test
inc
outsb
aaa
mov
out
mov
int3
hlt
sub
xor
adcl
mov
arpl
insl
lea
push
dec
lds
adc
sbb
fwait
cmp
pop
into
dec
pushf
jae
sbb
push
inc
sbb
xchg
xor
inc
or
mov
xchg
mov
mov
imul
push
mov
addr16
xchg
cmp
leave
es
icebp
dec
testl
and
sarl
cli
into
mov
inc
mov
lahf
mov
lods
mov
hlt
mov
and
mov
dec
mov
push
pop
and
jg
xor
mov
out
lahf
jecxz
ljmp
jmp
mov
test
jecxz
push
out
xchg
xchg
dec
int
outsb
inc
lret
and
cmpsb
push
addl
fs
and
adc
hlt
popf
int
mov
in
pop
push
lcall
call
aas
in
cmpl
inc
push
imull
dec
fdivl
clc
mov
pop
sub
cmpsl
sub
xchg
xchg
mov
jne
neg
out
or
mov
sbb
cmpsb
xchg
cli
and
xor
mov
adc
add
lock
ds
xchg
push
into
rol
adc
je
sti
pushf
jno
dec
xchg
adc
stos
cmp
dec
xor
rclb
jmp
pop
in
jle
fsubrs
jae
mov
shrl
sub
sbb
popf
sbb
out
and
sub
aaa
dec
mov
fisubrl
jmp
xchg
repnz
leave
negb
sbb
cmc
cwtl
mov
mov
mov
push
ret
jae
or
push
inc
xchg
push
inc
xchg
ret
aam
out
pop
jns
roll
add
adcb
jp
inc
cmp
dec
xor
xor
fstps
xor
push
into
and
mov
cmp
js
cmc
pushf
out
test
mov
fiaddl
repz
iret
int3
ja
rcrl
fldt
and
and
pop
xchg
inc
pop
pop
ss
sub
jl
mov
ja
cmc
loope
push
adc
push
jecxz
xchg
and
insl
pop
sub
sub
lea
pop
in
dec
or
divb
nop
icebp
adc
pop
scas
mov
jns
adc
sub
imul
mov
lods
imul
sbb
rcrl
mov
jmp
pop
sahf
cmpl
cmpsb
adc
inc
out
adc
xchg
das
pop
xchg
loopne
mov
lahf
mov
xor
add
push
cmc
mov
pusha
sub
mov
mov
mov
and
sub
xchg
sub
xchg
pop
faddp
shl
lods
or
inc
js
xchg
ret
sbb
in
ret
sub
inc
clc
neg
rcr
sbb
inc
or
mov
cltd
bound
mov
scas
or
nop
xchg
rorb
mov
push
out
push
pushf
mov
insl
jbe
int3
adc
xchg
jo
inc
outsb
add
pop
shll
scas
adc
sub
push
jg
loopne
add
outsb
lds
jle
pop
pop
jl
lods
push
add
mov
in
mov
aaa
xchg
gs
ds
sbb
test
inc
into
pusha
jns
xor
imull
rol
popa
push
mov
push
mov
cld
les
jl
pusha
enter
cmp
xchg
push
mov
pop
fidivrs
lds
test
lcall
loop
scas
out
jl
dec
arpl
xor
into
fmul
jnp
inc
addr16
pop
mov
add
lahf
out
je
cmp
frndint
out
into
mov
ss
bound
push
mov
dec
sub
sub
inc
mov
or
ret
and
inc
add
in
mov
cmp
pextrw
inc
je
jb
or
pop
shlb
push
mov
insb
or
rolb
pop
pushf
jecxz
jl
adc
push
push
mov
mov
inc
or
out
add
mov
das
xor
adc
out
sub
dec
inc
aaa
xchg
test
outsl
aad
arpl
into
sub
pop
cli
or
fiaddl
fldl
pop
push
fadd
mov
lods
mov
dec
sub
xor
mov
xor
sbbb
sub
mov
xchg
jle
filds
add
jecxz
mov
and
movb
aam
ja
dec
clc
pop
lods
in
aad
popa
hlt
cmp
adc
gs
rorl
fldenv
adc
and
jnp
fdivs
fnstenv
sub
scas
scas
mov
lret
aaa
repnz
mov
and
fisubl
push
mov
das
push
sub
mov
aaa
lds
dec
data16
push
jo
dec
jge
pop
mov
jg
xchg
mov
ss
cmpsl
jbe
sarl
pop
lock
insl
pop
insb
jecxz
cmp
xlat
cmc
lods
mov
mov
ljmp
adc
bound
call
or
push
push
loopne
lds
inc
out
ret
mov
leave
dec
mov
pop
imul
pop
pop
pop
and
in
fsts
cmp
sub
gs
xchg
xor
xchg
fnstenv
fs
dec
pop
gs
mov
aad
popf
imul
pop
fistl
jle
sub
incb
and
jno
push
je
lods
outsl
sysexit
pop
or
lods
mov
xchg
aad
jge
mov
stos
lods
js
mov
movsl
mov
inc
icebp
lock
lahf
sbbl
jb
sub
dec
cwtl
xlat
pop
cmp
mov
lea
pop
mov
fists
mov
arpl
iret
leave
jl
xchg
sti
xor
mov
pop
sbb
xchg
or
aaa
lret
or
lcall
inc
pop
or
repnz
nop
sub
pop
mov
pop
test
int3
sahf
mov
flds
xor
dec
dec
sbb
data16
cmpsb
sub
fcoms
rol
jb
dec
cld
sub
das
pop
push
mov
test
push
pop
push
mov
sbb
ljmp
mov
inc
sbb
rcll
sahf
enter
aaa
testb
lds
cmc
fiaddl
pop
mov
ret
push
jb
sbb
pushf
push
adc
les
ljmp
iret
aas
lahf
dec
sbb
jne
push
xor
sub
mov
stc
cmp
adc
shll
mov
inc
ret
icebp
lea
inc
nop
lock
mov
in
sti
and
push
stc
sub
pop
or
je
fdivrs
fisttpl
rcll
lock
fcompl
out
rcl
adc
sbb
stc
mov
xor
or
mov
dec
test
imul
adc
nop
and
std
mov
aam
scas
adc
xchg
fiaddl
je
push
dec
out
adc
or
xchg
pop
lret
fs
xchg
and
push
xor
fbld
jp
sub
xchg
sbb
jo
cwtl
xorb
roll
push
mov
pop
pop
push
ret
pop
cmc
out
cmpl
jge
dec
push
stos
lea
sbb
gs
xchg
les
addr16
sbb
fwait
jne
sub
call
psllw
movsl
xor
roll
stos
sbbb
lods
and
push
mov
and
or
dec
arpl
pusha
push
push
dec
lret
sti
jp
sub
jg
and
jmp
cmpsl
inc
clc
sub
adc
push
xor
movsb
pop
jl
ljmp
xchg
fistps
les
in
lds
add
outsb
loop
sahf
mov
sarl
fwait
mov
gs
sbb
and
repz
aad
sbb
adc
cmp
mov
inc
imul
push
ret
imul
push
mov
jne,pn
sub
insb
cmp
pop
xor
aaa
jo
insb
jg
and
dec
jmp
xchg
or
and
or
push
xor
jp
xchg
aas
or
inc
jae
movsb
iret
or
mov
add
mov
jp
rcll
jnp
xchg
lret
pop
aas
add
aas
lcall
sbb
repnz
fucomi
lods
imulb
and
cmp
push
jle
jo
int
mov
notb
push
repnz
fcmovne
push
cmp
add
xchg
push
sub
jne
pop
push
jnp
fldt
lea
xor
insb
mov
pop
or
movsl
inc
push
xor
aaa
movntps
repnz
out
push
adc
inc
out
sub
adc
jle
aas
mov
xor
repnz
add
sbb
fiadds
inc
sub
insl
dec
clc
xor
fwait
cs
les
mov
into
outsb
ret
call
push
push
movsl
pop
or
insb
pop
enter
push
sub
adc
in
push
jge
int
jno,pn
dec
cltd
out
dec
fisubrs
sub
mov
aaa
xor
out
cmp
lds
dec
push
inc
icebp
sti
sahf
pop
mov
cltd
pop
aam
mov
cmp
ljmp
or
xor
or
xchg
inc
xchg
out
dec
dec
lods
in
push
or
hlt
lcall
sub
pop
fcomip
push
push
int3
or
push
cli
mov
sti
mov
mov
inc
test
or
scas
cltd
pop
pop
test
out
aaa
ret
lods
fs
lock
mov
addr16
inc
xchg
mov
pop
insl
out
pop
ficomps
adc
adc
pop
push
orb
std
gs
cmp
mov
xchg
jecxz
fdivs
and
lds
daa
adc
pop
and
leave
in
mov
pop
repnz
dec
fcoms
pop
ja
fs
dec
lret
ret
iret
stos
adc
pop
push
lret
pop
or
insl
ljmp
jns
cs
addl
cmp
cmp
add
nop
sub
sub
insl
sbb
sbb
push
or
adc
mov
lock
pop
pop
scas
insb
jle
jno
fsubrs
pop
sbb
xor
and
add
sub
and
stos
test
js
push
push
dec
sbb
in
and
insb
mov
or
jno
cmp
dec
xor
out
adc
inc
ror
aas
imul
dec
mov
jp
adc
jno
stos
in
fsubs
cltd
cmp
test
adc
aad
mov
repnz
fcomip
testl
mov
adc
sbb
push
lods
sub
loope
adc
jnp
dec
das
scas
mov
ss
add
daa
pop
xchg
and
pop
ds
mov
nop
push
popa
stos
mov
aad
pushf
outsb
adc
cmp
inc
ror
hlt
xchg
jmp
dec
rcrb
inc
jbe
xor
pop
int
imul
and
sbb
ret
xchg
jbe
mov
test
push
pusha
xor
cmp
filds
fsubl
jae
aad
popl
ljmp
ss
nop
pop
pop
mov
sub
paddsb
fcom
jno,pn
call
loop
mov
and
sbb
jns
lret
insl
sbb
push
mov
test
xorl
push
sahf
loope
pop
dec
sti
jno
outsb
out
pop
mov
add
lock
sti
stos
lcall
inc
push
stos
push
mov
sti
mov
or
cmpl
stos
mov
push
push
sahf
sub
pushf
sbb
sbb
dec
xor
ror
xor
pop
mov
sub
std
aad
inc
xchg
shl
add
jecxz
pop
dec
add
fstl
std
pop
hlt
xchg
xchg
add
ja
aad
and
into
je
push
add
add
rcll
lea
out
lods
cmp
imul
iret
push
test
xchg
data16
rcrb
jl
jnp
sbb
insl
cmp
rol
cmp
ret
mov
fimuls
xchg
mov
mov
jl
test
jb
nop
push
xchg
fdivrs
lret
out
out
cmpsl
iret
sub
sub
dec
jl
std
jl
mov
cmc
xchg
push
std
test
ja
xchg
inc
mov
in
pop
jecxz
or
dec
jne
outsl
adc
dec
repz
dec
inc
clc
mov
xor
ficoml
and
icebp
add
ja
adc
and
sub
and
sti
shlb
ret
mov
stos
test
xor
or
mov
icebp
mov
inc
sbb
dec
push
iret
je
ja
pop
jns
rclb
cmpsl
jecxz
jo
cmc
shr
fisubl
inc
or
int
iret
dec
ret
loop
das
xor
cmp
jge
xchg
inc
jne
ds
cld
cwtl
pop
out
scas
idivl
ljmp
push
inc
xorb
inc
xchg
jo
out
add
fidivs
inc
mov
sbb
lcall
pop
stos
ljmp
xorw
add
call
lahf
sahf
or
xchg
xlat
jno
out
es
inc
ds
mov
mov
add
inc
add
std
sbb
les
scas
scas
pop
scas
pop
add
mov
jne
cmpsl
rcrl
mov
xchg
rorb
and
arpl
jo
jecxz
adc
xor
sub
aas
std
push
jg
jl
int3
movsl
jl
xchg
or
dec
dec
xor
fcompl
jo
in
sub
stos
jbe
push
xor
fwait
aam
sbb
aaa
inc
loop
in
aam
jmp
push
xor
out
xorb
push
mov
lahf
cmc
mov
or
hlt
out
adc
fnsave
adc
or
outsl
js
rcrl
adc
scas
sbb
cmp
test
jp
test
daa
fwait
pop
add
xor
sbb
lahf
inc
jecxz
insb
and
dec
into
xchg
jns
sbb
andb
xchg
sub
cwtl
mov
shlb
sub
or
adc
jle
inc
xchg
enter
cs
fstpl
int
jno
fwait
inc
stos
lahf
movsl
shlb
hlt
mov
test
mov
lahf
stos
or
negl
xor
loopne
push
test
out
mov
fsts
mov
iret
add
push
pusha
daa
xor
push
pop
stc
pushf
or
pop
add
dec
imul
or
xor
xor
mov
pop
adc
pushf
cltd
sbb
sahf
inc
addb
scas
shrb
push
mov
movsl
jl
es
push
sbb
cmpsb
loop
pushf
shll
in
adc
shlb
cmp
mov
or
mov
cmpsb
or
jo
push
fisubl
xchg
xchg
mov
inc
pop
mov
ja
sti
std
aam
mov
push
push
out
mov
ds
fwait
pop
sbb
pusha
adc
fistpl
jge
sbb
addb
cwtl
mov
outsl
pop
int3
sub
lcall
into
or
sub
inc
mov
js
lahf
dec
ds
daa
aaa
cwtl
or
mov
into
or
xor
sub
jne
hlt
icebp
or
ss
outsb
fidivs
dec
adc
xchg
arpl
orb
xor
rcl
inc
das
sbb
fistl
push
jge
xchg
inc
pop
jmp
idivb
repz
inc
adc
add
insb
orl
lret
and
sub
xchg
mov
mov
add
dec
lcall
dec
mov
dec
xchg
lods
aaa
dec
push
lock
xchg
inc
xor
fistpll
sbb
push
mov
sub
pop
cmpb
xor
adc
inc
outsb
ret
push
test
lret
aam
dec
lods
cs
inc
sbb
int3
rorl
mov
insb
sbb
popa
add
negb
xor
jns
sub
repnz
cli
inc
or
sbb
cmp
push
mov
icebp
aas
dec
rcll
mov
jbe
fidivrs
sbb
shld
es
loopne
cmp
test
sbb
cld
mov
cmp
jae
es
les
push
xor
inc
cmc
mov
and
outsb
push
xor
xor
pop
test
arpl
cmp
jae
stos
xor
test
dec
out
pop
or
xchg
shl
ret
sub
pop
mov
cld
fs
push
jnp
ja
cmp
dec
int3
sarb
insl
std
cltd
jg
or
cli
sbb
and
mov
mov
adc
rorb
frstor
sbb
mov
add
imulb
xor
call
idivb
clc
jnp
dec
jp
jns
ljmp
aad
inc
adcl
stc
cmc
sbb
pop
xor
xchg
in
pop
mov
mov
cmp
lret
xchg
mov
ss
test
dec
mov
std
jne
lret
xor
sub
dec
adc
pop
pop
pusha
add
lret
or
pusha
mov
cmp
in
sbb
pop
mov
test
jp
mov
push
push
int3
ret
and
xchg
xchg
loop
xlat
or
imul
arpl
jge
and
leave
dec
xchg
jb
pop
push
into
hlt
mov
movsb
in
divb
jns
and
jge
inc
ljmp
dec
pop
xor
ds
shll
insb
daa
xlat
dec
punpcklwd
cs
dec
insl
adc
enter
cwtl
jp
cld
mov
push
or
enter
idivb
xchg
and
jae
dec
mov
cltd
test
stos
xchg
cltd
cmp
lcall
dec
cmp
ss
fsubrl
dec
xchg
int3
rcl
jl
push
dec
ret
push
into
cmp
cltd
dec
jle
pop
add
lea
jbe
in
aad
lahf
fmul
push
mov
xchg
xorl
test
add
icebp
xchg
sbb
pop
cmp
adc
jp
push
cwtl
ficompl
adc
inc
insl
enter
out
xor
sbb
lret
lahf
fadds
jmp
mov
jno
lods
loop
mov
adc
andb
pop
cmp
sbb
fldcw
sub
xchg
and
pop
mov
mov
std
mov
fucomip
aad
or
movsb
sbb
in
nop
pushf
mov
dec
inc
lds
inc
adc
lcall
mov
cmp
pop
mov
dec
or
sub
push
xchg
push
jge
addr16
push
mov
data16
pop
negl
subb
mov
mov
and
loopne
pop
jnp
outsb
cmp
lahf
jecxz
jo
scas
xchg
fistps
push
das
mov
or
aad
enter
jno
sbb
sub
dec
outsb
and
mov
sub
sub
bound
mov
mov
sub
pop
cmpsl
stos
push
inc
cltd
aam
daa
lods
jns
mov
mov
xchg
rcrb
es
cmp
mov
push
dec
fldcw
or
into
jp
adc
hlt
insl
push
mov
insl
xlat
mov
mov
jo
inc
subb
clc
aad
lods
inc
insl
pop
bound
inc
inc
inc
push
pop
outsl
das
push
cs
ja
and
call
mov
fisttps
inc
test
les
jl
adc
dec
or
shrl
cmp
mov
adc
pop
insl
hlt
les
xor
int
mov
ret
incb
mov
js
xor
shlb
nop
mov
jnp
rorb
jns
fwait
loopne
and
jmp
out
clc
sti
scas
scas
pop
adc
addl
loop
movsl
fcmovb
push
jp
and
iret
lods
jle
jne
or
pop
sbb
add
stc
iret
xor
xchg
rorl
cli
add
stos
sbb
sub
jle
imul
and
ret
push
scas
sbb
or
negl
popf
pop
mov
add
adc
add
mov
imul
or
lcall
fidivrs
jp
cwtl
xor
push
orb
xchg
mov
decl
sbb
insl
pop
std
xchg
fdivr
add
lret
bound
fisubl
push
push
icebp
mov
xor
fsubrl
push
push
push
xchg
cmp
imul
nop
cmp
push
add
cli
movsl
mov
mov
push
movsl
push
mov
divl
mov
pop
adc
xchg
mov
push
outsl
cmp
gs
jnp
enter
aam
sarl
fldcw
cltd
sub
or
or
dec
xchg
stos
jg
mov
addl
out
imul
sbb
hlt
rcrb
or
jno
test
ljmp
imul
xor
movsl
pop
pop
addr16
and
mov
inc
fildll
add
ss
psubusb
pop
mov
into
xchg
outsb
inc
cmpsb
mov
icebp
mov
in
lret
paddusw
xchg
inc
ret
xchg
jbe
push
aad
repz
mov
mov
mov
add
imul
sub
jg
fstps
jo
mov
xchg
pop
je
scas
push
out
mov
ljmp
fs
push
or
mov
sbb
xor
test
jp
or
dec
std
aad
ds
int3
or
ja
hlt
add
cmc
dec
jecxz
dec
xchg
cwtl
iret
loope
mov
shlb
push
lcall
jne
int3
add
push
jecxz
or
and
lcall
lock
push
cmp
pushf
and
movsb
pusha
add
mov
cmp
je
fst
popf
mov
ljmp
mov
pushf
ds
and
pop
pop
imul
and
cmp
shrb
in
cmp
ret
jbe
mov
pop
push
mov
lods
test
mov
dec
das
mov
xchg
test
imul
fcomps
fwait
test
aad
xchg
push
jne
pop
addr16
fucomi
adc
add
fisttpll
jae
gs
push
jle
xchg
roll
add
out
mov
call
pcmpeqw
adc
fsubrs
cmp
iret
hlt
sub
mov
pop
push
xchg
jbe
cmpsl
lret
pusha
test
push
dec
loopne
push
or
push
incb
fwait
cmp
test
es
int
lock
in
mov
jp
ja
call
in
daa
sub
push
xchg
loop
xlat
pop
xchg
fdivrs
dec
in
aad
in
sub
pop
cmpsb
mov
ja
rcll
mul
push
movsb
enter
dec
xlat
add
pop
ss
sarb
aad
xlat
and
out
mov
cmovl
rcrl
repnz
sbb
mov
pushf
je
fmul
addr16
out
dec
xor
movsl
jmp
data16
imul
mov
mov
dec
inc
int
mov
icebp
cs
mov
mov
xor
xor
les
mul
cmp
adc
xor
push
mov
pushf
and
fwait
sub
cmp
out
pop
jmp
sahf
push
sbb
push
ds
mov
and
stos
fs
int
shl
pop
and
mov
jg
cmpsl
push
mov
pop
mov
aas
pop
int
mov
xchg
rcll
pop
popf
idivl
cs
cmp
cmp
pop
mov
mov
ds
sbb
mov
sub
shr
jp
das
ret
mov
pop
mov
hlt
xor
push
jnp
adc
dec
inc
add
and
fistps
lcall
js
or
and
cld
sahf
push
mov
jmp
imul
cmp
out
jp
add
in
aam
or
shll
insl
jmp
push
out
out
int3
inc
nop
mov
mov
mov
jmp
xor
loop
inc
push
cmp
fisubrs
add
or
stc
lahf
jp
out
cwtl
xchg
jmp
mov
and
adc
mull
aad
sub
ljmp
or
outsb
test
outsl
ja
ljmp
adc
mov
shr
xor
pop
lret
push
cmp
lea
andl
sti
jne
sub
mov
or
iret
jp
jb
sub
cli
ss
out
outsl
aaa
adcb
mov
mov
out
int3
ljmp
or
les
outsl
loopne
loop
insb
in
push
out
dec
loopne
daa
sub
arpl
inc
or
sti
rcrl
push
clc
or
mov
test
adc
mov
inc
sub
mov
cmpsl
pop
sub
jnp
into
loope
or
out
jns
lcall
lea
test
mov
xchg
xor
popf
sbb
int
ss
mulb
xlat
imul
adc
popf
pop
mov
xor
outsl
cmpsl
cmpsb
lock
fisubrs
push
or
xchg
mov
xchg
push
scas
xor
rep
xchg
mov
mov
xchg
std
mov
cmpsb
aad
arpl
hlt
in
jb
adc
gs
pop
and
ss
xchg
push
in
mov
sbb
mov
mov
mov
nop
shrl
cmp
insb
les
in
mov
and
jne
aad
inc
int3
mov
out
xor
adc
stos
int3
sub
push
adc
ret
out
imul
roll
cwtl
jge
sahf
aaa
movsb
scas
jl
xor
add
pop
push
insb
imul
sub
mov
lret
popf
mov
je
xor
cmp
jns
add
push
lods
outsb
out
mov
jnp
loopne
shll
test
decb
neg
jo
js
push
frstor
add
daa
mov
cli
adc
fisttpll
cli
mov
adc
add
movsl
out
in
push
or
loopne
divl
push
push
jno
icebp
insl
inc
test
sbb
mov
cltd
mov
leave
movsb
jl
xor
mov
mov
lret
das
cld
jae
imul
aam
pop
push
std
pop
fildll
mov
cmpsb
xchg
call
dec
add
pop
leave
dec
push
mov
mov
lcall
repnz
sub
fwait
loopne
and
push
add
fisubrs
xchg
sbb
sti
mov
mov
xor
repz
pop
lcall
lods
jns
lret
pusha
scas
pop
imul
and
jle
sub
pop
mov
aad
inc
inc
fmul
les
add
and
or
scas
cmpb
aam
sahf
ds
mov
add
lret
pop
and
cmp
or
mov
adc
aam
mov
stos
mov
int
adc
push
sbb
sbb
push
std
lahf
mov
push
add
fwait
hlt
or
inc
je
and
pop
inc
mov
mov
pop
mov
mov
mov
sahf
mov
mov
jp
sahf
cmpsl
lock
jmp
pop
mov
dec
adc
inc
push
jno
jp
shlb
test
dec
out
dec
and
mov
in
xchg
and
jecxz
jp
pop
mov
xor
pop
xchg
fldcw
shlb
or
jbe
popa
fmuls
ficompl
movsl
inc
scas
jecxz
addr16
fcomp
bound
clc
and
test
adc
shr
and
ljmp
mov
inc
adc
lea
pop
mov
adc
in
xor
and
sahf
lds
push
pop
inc
cmp
lea
mov
mov
inc
mov
xchg
inc
jp
pop
add
or
mov
call
mov
sub
in
in
push
push
scas
idivl
mov
push
mov
sbb
insl
or
arpl
mov
stos
lret
imul
mov
es
jno
cmp
mov
or
push
sbb
arpl
ljmp
fadd
push
xchg
sahf
push
movsl
in
mov
cmp
cmp
add
das
add
lret
and
lods
movsl
mov
jecxz
lods
sub
mov
mov
inc
addr16
dec
andl
xchg
ja
inc
mov
pop
pop
add
movb
inc
fs
mov
xchg
cmova
movsl
mov
nop
dec
ret
pop
ror
jo
movsb
mov
jl
adc
xor
insl
cmp
push
hlt
daa
scas
data16
pusha
or
cmp
dec
adc
loope
mov
jno
lahf
push
mov
in
xor
push
mov
xor
jmp
add
dec
or
divb
mov
sbb
insb
in
mov
mov
mov
in
mov
or
insb
repz
jae
cmpsb
fistpll
mov
jmp
cmp
push
add
shll
inc
pusha
or
mov
enter
pushf
std
andb
in
insl
adc
jp
rclb
rcr
movsl
pop
inc
repz
push
mov
fisttpl
or
mov
xor
icebp
xor
push
enter
dec
mov
or
lret
mov
cmp
push
mov
cmp
sbb
clc
mov
inc
fsubs
gs
mul
push
add
pop
jmp
loop
in
das
and
cltd
in
sbb
ficompl
popa
and
outsb
daa
dec
lcall
mov
lahf
cmp
xchg
aad
out
sbb
aad
dec
aaa
loop
loopne
imul
inc
adc
imul
sbb
add
lods
fdivs
bound
push
insb
mov
gs
mov
sbbb
ds
and
pop
jmp
fdivs
fcompl
push
cmp
and
fsubrp
and
sub
or
lods
lds
dec
loop
ljmp
and
js
sbb
push
bound
mov
cld
inc
adc
fabs
push
icebp
aam
in
in
pop
inc
js
pop
ds
test
mov
fisubs
cld
xchg
and
push
lret
loop
jg
out
in
js
jge
cmp
sbb
mov
mov
sub
loope
sub
mov
add
jb
stc
sti
xchg
jl
add
cld
cli
out
mov
add
aam
fisttpl
out
jmp
adc
mov
add
ja
jns
dec
movsb
lods
ljmp
sbb
mov
lock
lahf
push
pop
addb
dec
push
loope
mov
adc
mov
leave
sub
addr16
inc
test
repnz
pop
cmp
xor
jo
in
fcompl
fstp
test
lock
pop
ss
cmp
sub
iret
in
cmp
pop
fs
mov
mov
xor
rorb
push
bswap
jg
push
add
outsl
mov
push
mov
adc
push
fmuls
sarl
pop
icebp
popf
icebp
or
outsb
pop
fsts
xor
or
jmp
sub
dec
xor
arpl
mov
dec
jo
mov
orb
loop
fdiv
into
cmpsl
test
lea
add
enter
pop
cmc
leave
xor
andb
pop
mov
dec
dec
push
out
sub
testb
pop
stos
movsl
mov
sub
int3
rcl
xchg
mov
psraw
pop
lods
adc
lahf
cmpsb
in
adc
inc
bound
daa
pop
and
or
shl
icebp
xchg
jae
push
pop
mov
add
sbb
mov
pop
mov
ljmp
or
lock
mov
cmpsb
or
inc
out
bound
xchg
filds
shl
ret
cmp
xor
fnstenv
mov
mov
fcomp
mov
push
sbb
mov
dec
sbb
push
scas
push
inc
jmp
and
mov
cmp
mov
or
inc
mov
cmovb
push
cmp
ret
xchg
fwait
imull
rorb
ret
aad
je
jmp
cmp
notl
adc
sbb
stos
pop
cmc
pop
aaa
sub
fimull
push
and
sbb
es
scas
and
mov
cwtl
mov
js
xor
jns
scas
mov
cmp
repz
iret
inc
mov
mov
cmpsb
mov
loopne
xchg
out
inc
rorb
pushf
in
push
sbb
fistpll
stos
fisubrl
add
jg
aam
lcall
push
fidivrl
mov
shll
lods
xorl
insb
lock
mov
das
push
test
adc
dec
mov
sub
movsb
fwait
pop
inc
inc
mov
push
loopne
or
dec
out
clc
adcl
push
sbb
ljmp
pop
and
cltd
arpl
repz
pavgb
cmpb
jae
scas
xchg
pop
cmpsb
sbb
mov
jnp
inc
or
mov
jno
jl
pop
inc
xchg
out
ja
adc
jg
imul
daa
xor
stc
lods
dec
fidivrl
shr
mov
rol
lods
cmpsl
push
fcomip
xchg
mov
adc
mov
insb
pop
cmp
es
outsb
xor
pop
in
in
inc
dec
push
fldcw
test
mov
jecxz
mov
popf
cli
sbb
and
push
je
push
jecxz
push
movsb
jae
cltd
enter
jp
sub
sub
add
jnp
mov
push
fistps
lahf
mov
mov
iret
roll
shrl
jnp
xlat
nop
loope
or
and
sub
jp
jle
inc
sar
mov
add
je
fs
fldenv
outsb
dec
xorb
ljmp
push
ss
xchg
bound
add
sbb
pop
jne
mov
inc
inc
out
cmc
out
jbe
mov
xchg
jbe
ja
mov
push
add
shl
inc
mov
shl
push
sub
jl
dec
nop
mov
xchg
jnp
ja
negb
in
inc
iret
push
std
mov
jp
jmp
imul
call
std
bound
into
jb
jbe
adc
jge
in
test
ljmp
cltd
inc
push
lret
jmp
jge
aaa
mov
popl
sbb
fiaddl
pop
push
rcl
mov
scas
xchg
mov
inc
cmc
mov
nop
ja
add
mov
loope
daa
jne
push
mov
dec
in
ss
dec
pop
jle
clc
aad
ja
add
xor
roll
into
or
pop
comiss
or
or
or
gs
lods
scas
ret
ljmp
test
or
jne
fcomps
fidivs
pushf
shr
push
cmp
jo
ja
cmp
push
sbb
insb
and
inc
mov
fisubrs
sub
addl
stc
bound
xchg
cmpsl
adc
pop
test
mov
push
js
addr16
dec
inc
into
mov
roll
mov
cmp
push
dec
movsb
xlat
jbe
call
lahf
in
xchg
xchg
ljmp
add
ret
adc
xchg
lcall
jns
fcompl
push
movaps
lcall
and
and
pop
jno
lods
outsb
sub
lds
lock
jne
test
aam
inc
jecxz
add
popa
mov
aam
out
mov
aad
aad
loope
cmpsb
cwtl
push
xor
dec
jo
fsubs
xor
pop
pop
nop
aas
xchg
sbb
jp
iret
sahf
lcall
pop
movsb
out
fisttps
out
aam
out
scas
into
pop
sbb
cmp
xchg
lret
stos
sahf
call
hlt
add
out
jge
les
add
dec
mov
mov
and
jno
xchg
in
scas
pushf
inc
push
push
outsb
inc
cmp
adc
leave
sahf
push
sbb
lea
stos
inc
xchg
adc
xchg
xor
pusha
mov
add
jo
in
imul
vmulss
or
push
mov
imul
clc
ret
ljmp
call
jo
lahf
test
sub
xor
inc
xor
or
cmp
orl
inc
fstp
inc
jecxz
iret
push
mov
scas
cmp
push
cmp
lods
in
loope
sub
cmpsb
and
aad
movsl
hlt
test
inc
popf
mov
rcrb
push
xchg
pop
ret
jo
dec
dec
shrb
jmp
pop
int3
dec
or
push
cmpsl
cmpsl
and
adc
sub
sub
cmp
push
in
insl
jbe
inc
and
add
xchg
mov
or
cmpsl
jae
sub
inc
loop
pop
popf
repz
repz
fcompl
cwtl
or
jge
pop
or
in
test
xor
xchg
xchg
inc
int3
xchg
mov
shrl
pop
pusha
aaa
xor
xor
enter
push
into
imull
outsl
pusha
aas
das
sahf
and
push
pop
sub
icebp
push
lea
mov
lcall
int
ss
xor
mov
cmpl
and
hlt
inc
jge
pop
std
adc
int3
outsb
leave
push
loope
into
jmp
rorb
mov
mov
xchg
jl
or
mov
pop
call
iret
mov
in
add
iret
inc
adc
pop
push
shlb
imul
push
dec
inc
cli
jno
ds
sbb
mov
out
pop
out
mov
ficoms
cmc
xchg
testl
sub
out
ret
ret
push
inc
add
enter
sbbb
loop
stos
or
shl
hlt
cmpsb
mov
or
movsb
cmp
jl
sbb
push
insl
lea
int3
jmp
bound
daa
nop
push
xchg
sti
aam
aas
mov
or
push
pop
mov
imul
fisttps
xchg
xchg
insl
shr
sub
inc
mov
pop
inc
sbb
add
inc
rcrl
enter
xchg
mov
enter
jle
lods
push
xor
pop
mov
pop
aam
jbe
jb
mov
mov
lds
cmpsl
adc
pop
ret
xchg
test
mov
fdivl
aam
in
ret
xor
rorl
or
scas
cwtl
lcall
push
lds
xor
cmp
fists
mov
mov
in
dec
test
movsb
sbb
sbb
xchg
mov
lret
lret
push
pop
pop
dec
or
faddl
add
std
imul
stos
xchg
xlat
dec
mov
cmpsb
mov
jns
xor
or
stos
add
mov
leave
ljmp
leave
and
cmp
mov
cli
push
subb
jl
std
outsl
push
pop
pusha
or
mov
pop
pusha
lock
push
sar
out
hlt
xchg
inc
and
add
insl
lds
out
add
xor
xchg
sbb
mov
xor
jecxz
adc
and
push
push
pop
lds
jge
xor
daa
arpl
xor
lea
inc
cmp
aaa
add
inc
loope
xchg
xchg
pop
js
cmp
push
call
gs
mov
mov
push
jg
out
scas
cs
push
int3
fnstenv
jmp
repnz
bound
shll
push
adc
std
sub
sbb
cs
movsl
sahf
lods
out
jp
filds
mov
movl
lock
add
in
add
test
fcomps
adc
popa
dec
xchg
outsb
cmp
push
fimull
cmc
jnp
loopne
and
lahf
push
and
int
mov
xchg
xchg
lret
negb
fmuls
push
test
pushf
cmpsb
mov
inc
fs
inc
push
mov
subb
jecxz
pop
lcall
nop
cmpl
pop
data16
mov
js
sahf
xchg
movsl
dec
adc
loope
cld
push
add
fidivrs
mov
cwtl
jecxz
mov
fs
push
push
xor
add
push
in
mov
jg
nop
add
std
and
xlat
push
jmp
mov
sbb
pushf
inc
xchg
cltd
rcll
inc
fdivrl
jo
inc
dec
aaa
lds
movsl
pushf
out
push
mov
and
mov
mov
test
pop
or
bound
cmp
stos
addr16
adc
add
scas
mov
push
xchg
xorb
adc
in
lret
inc
mov
mov
fcomps
jno
rcrb
push
or
and
lds
idivl
out
jl
rcl
sub
mov
ds
pop
aam
pop
sub
stc
incb
shrb
jae
in
enter
jb
and
mov
call
or
data16
std
or
xchg
pop
bound
lds
fildl
and
mov
pop
ja
cld
popl
scas
and
sbb
test
jo
adc
jne
aam
call
add
adc
dec
jnp
sqrtps
xlat
enter
addb
dec
js
test
jecxz
loopne
jbe
cli
sbb
cs
dec
mov
shl
cmp
push
rcll
insb
lds
aaa
neg
lds
push
ss
pop
add
loopne
sarb
dec
mov
int3
and
ja
pop
les
jnp
and
pop
stos
mov
pop
sbb
fcoms
xor
js
push
out
negb
in
lock
shrb
stos
loope
lahf
mov
jbe
sub
sub
cld
adc
lods
push
lock
lret
mov
xchg
add
pop
xchg
xor
pop
cmpl
sub
mov
fmull
cltd
dec
into
sub
dec
int
sub
inc
shll
xchg
cmpl
stc
in
fisubrl
popa
sarb
ds
int3
loopne
mov
insl
cmpl
js
jne
jne
aad
je
or
jnp
in
push
clc
sub
dec
mov
test
and
stos
mov
mov
pop
repnz
adcb
pop
loop
inc
mov
add
sub
cmp
or
mov
dec
js
pop
cmp
popa
in
and
push
or
pushf
inc
cmp
sub
xchg
nop
out
dec
data16
cmp
ljmp
scas
add
xchg
lret
mov
psrld
or
fidivrl
sbb
xchg
jp
cmp
imul
into
mov
ret
cltd
xchg
and
jne
rol
test
outsb
test
pop
iret
div
addr16
mov
bound
lock
adc
mov
lahf
rcrb
lods
inc
cmpsb
rcll
sbb
sbb
mov
roll
hlt
xchg
mov
aaa
adc
aaa
rcrb
insb
push
pop
jle
faddl
cmp
stos
clc
sub
dec
ffree
jle
fisubrl
cmp
push
lock
pop
xor
adc
insl
push
outsl
stos
inc
aaa
cmp
push
jo
arpl
sbb
and
xchg
movsl
xchg
cmp
add
pop
imul
lock
add
loop
jecxz
stos
add
dec
push
lret
lea
lcall
mov
lock
pushl
pop
dec
sbb
cli
rcll
jnp
jp
pop
fiadds
scas
lret
mov
mov
add
daa
jne
dec
lcall
pop
adc
imul
or
and
xchg
fnstcw
imull
adc
cmpsl
insb
push
ss
je
ret
pop
bound
sbb
lods
pop
stos
add
mov
mov
push
push
adc
sbb
sub
xchg
add
dec
ja
push
outsb
outsb
adc
sbb
loop
dec
cmp
icebp
aam
shl
push
pop
adc
xor
popf
mov
xchg
add
fcmovne
fstl
aas
repz
inc
idiv
cmpsl
or
cmc
ja
mov
adc
xchg
std
repz
add
test
out
cmp
jns
fstp
jecxz
iret
imul
dec
jp
insl
cli
lret
lret
fdivrp
push
adc
ds
xlat
cmc
dec
ret
inc
xor
push
leave
mov
cmp
mov
loop
cwtl
inc
sti
dec
iret
mov
popa
iret
inc
inc
push
lods
mov
fldenv
mov
inc
jne
add
xor
xchg
jecxz
mov
push
xchg
xchg
jnp
movsb
in
shrl
xchg
loopne
jge
je
into
popl
or
and
mov
aam
cmp
or
xchg
xor
mov
xchg
dec
test
cmpsl
test
jne
jb
test
testb
out
xlat
and
movsl
inc
je
add
adc
cmp
mov
stc
cmp
aam
loop
lds
sbb
lods
mov
lcall
sbb
ret
jb
inc
lea
dec
ljmp
jnp
lock
mov
add
lcall
sub
sbb
mov
push
mov
adc
mov
mov
dec
ds
aas
aas
insb
lahf
aad
outsl
aaa
xchg
mov
sti
add
negl
fistps
dec
jg
xchg
inc
lods
mov
adc
mov
lret
push
jb
and
pop
add
int3
cwtl
pop
jmp
cld
jle
cwtl
jnp
test
stc
lret
mov
insb
pop
add
sbb
inc
outsb
mov
sub
mov
hlt
mov
sub
je
or
repnz
mov
mov
inc
jae
rcr
inc
mov
test
test
xchg
cwtl
pop
jno
ljmp
push
dec
xor
sbb
cmp
inc
push
leave
and
mov
je
mov
lds
inc
inc
lret
mov
inc
pop
insl
call
dec
sti
test
movsl
enter
lahf
sub
pushf
dec
rolb
cltd
and
pop
cmp
mov
shl
sbb
mov
xor
and
mov
fwait
sbb
pusha
nop
pop
imul
ljmp
cmpsb
cmp
push
mov
mov
sbb
dec
xor
cmpsb
adc
loope
fwait
mov
jno
dec
cwtl
loope
add
add
or
bound
ds
xchg
mov
jno
mov
das
and
decb
sub
pop
push
jmp
int
xchg
sbb
fcoml
cmp
pop
push
imul
cmp
mov
mov
idivl
cmp
bound
adc
cmp
cltd
xchg
xchg
mov
and
inc
adcb
in
int
mov
xchg
addr16
adc
rolb
jmp
add
aas
pop
popf
dec
repnz
cmp
adc
push
out
dec
lcall
sub
shr
shl
cmp
cmp
out
lea
xor
mov
int
cld
mov
push
ret
rcl
arpl
cwtl
popa
xchg
mov
iret
and
mov
rolb
mov
test
pusha
cwtl
pop
nop
sbb
lea
cli
std
and
movsl
push
sbb
lds
in
shrb
push
mov
aad
test
inc
xchg
sbb
xor
mov
push
push
popf
push
push
mov
cmp
jbe
loop
jae
in
movsb
mov
or
cmp
pop
jbe
pushf
xlat
pop
cmp
pop
xchg
popa
addr16
pop
pop
add
and
scas
add
stos
mov
and
cmc
adc
pop
mov
jl
jbe
jecxz
cmp
sub
repz
or
inc
mov
cmpsl
cmpsb
add
ljmp
mov
das
and
pop
test
sbb
jae
adc
inc
xor
add
roll
loope
cmp
inc
add
stos
pop
and
and
cmp
jb
cmp
cltd
mov
push
call
dec
jns
lcall
xor
outsl
lds
pop
jnp
and
pusha
cmp
repz
pop
push
jae
sub
pop
dec
mov
or
sbb
sbb
and
in
or
shl
int
lods
loopne
sahf
inc
cmp
shlb
loope
mov
inc
jmp
add
fldl
push
lret
xchg
or
jne
and
cld
decb
rclb
jb
data16
jno
popa
and
mov
mov
lods
ja
cmpsl
dec
mov
push
repnz
sub
cmp
test
cmp
add
cld
pop
pop
cmp
mov
pop
scas
jno
xor
pop
jae
inc
in
jae
mov
or
test
add
aam
sub
fnstcw
adc
mov
shlb
sbb
cmp
fisubrs
jno
in
cmp
mov
and
es
push
nop
cmc
data16
dec
out
iret
xchg
sub
cmpsl
fbld
mov
pop
mov
dec
and
std
int
xchg
adc
sub
arpl
sbb
pusha
fcmovnb
jg
in
and
js
cmp
gs
test
mov
lock
das
int
loop
mov
out
sbb
aad
jg
es
jbe
pop
mov
stos
inc
shll
imul
bound
add
and
ror
test
divl
dec
sub
ljmp
push
or
pop
stc
dec
sbb
shr
xor
xchg
pop
push
testb
pop
push
xor
call
addb
and
rclb
sub
test
jbe
or
insl
sti
xchg
inc
pop
sbb
add
in
loop
incl
hlt
xchg
outsl
inc
in
add
mov
cmpsl
xchg
cmp
mov
lock
lret
mov
or
dec
inc
outsl
xor
cmp
mov
jmp
scas
inc
dec
push
mov
cmp
test
repz
mov
cli
or
inc
mov
jbe
popf
xchg
jo
loop
loopne
pop
ret
xor
mov
add
daa
jb
cli
xlat
pop
ret
sti
add
sbb
dec
pop
sarb
sbb
mov
shlb
inc
int
enter
lds
mov
push
push
push
cld
aad
or
mov
in
xor
xchg
icebp
cmp
pop
jmp
jmp
or
ja
popa
popl
cltd
inc
lea
lock
sub
sbb
mov
and
cmp
insl
fstps
andl
fnstcw
pop
aam
les
and
sub
addr16
inc
pop
subl
xchg
sbb
dec
outsl
mov
xchg
test
aaa
and
pop
xchg
and
insb
push
sbb
nop
mov
nop
or
sub
outsl
xor
out
rcrl
cld
xchg
ja
push
cmp
or
jns
or
loop
mov
or
pop
outsb
xchg
call
or
jecxz
ss
adc
add
fs
out
cmpb
push
push
xor
cmpsl
test
arpl
ss
std
mov
dec
sub
int3
addr16
imul
mov
jns
ljmp
lods
lea
pop
aaa
aaa
rcr
js
orl
popf
or
in
mov
movsl
aad
sbb
call
ljmp
and
jge
mov
sub
mov
or
leave
sbb
inc
push
push
cli
dec
mov
push
dec
jb
jno
cmp
stos
fwait
lret
mov
shlb
dec
push
jo
lcall
stos
lret
repnz
jbe
bound
dec
cmp
decb
push
push
test
jne
jl
cmp
inc
jmp
adc
jmp
or
jle
stos
sbb
insb
imul
pop
fwait
out
sub
cmp
fldt
popa
repnz
arpl
cmp
hlt
pushf
popf
pop
jne
mov
inc
mov
popf
ja
sub
cld
sub
imul
ds
and
mov
jmp
dec
cmp
push
lcall
les
gs
pop
sbb
adc
les
or
jne
mov
hlt
testb
sahf
lea
aam
out
adc
push
inc
pop
sub
fs
test
scas
pop
mov
mov
push
shl
xor
mov
in
cmpsb
inc
jp
jp
sub
outsb
lret
fcmovnu
inc
je
mov
jle
pop
mov
rorl
or
push
subb
int
xchg
int3
mov
popa
mov
sbb
shll
insb
nop
repnz
sahf
fistpl
pop
mov
in
push
mov
data16
jmp
lcall
int3
dec
inc
xorl
lock
lock
dec
nop
sbb
cmpb
lret
jns
jle
inc
subl
and
fmuls
push
pop
jae
bound
add
into
mov
and
sbb
daa
lock
dec
inc
and
pop
icebp
jmp
inc
notl
mov
mov
adc
push
lods
push
jl
imul
sbb
fcmovne
lahf
mov
and
mov
pop
xor
imul
push
fildll
stos
sub
pop
pop
data16
mov
hlt
jne
xor
jmp
adc
gs
fwait
xchg
int3
sub
pusha
xor
inc
add
push
sbb
dec
stos
adc
loope
mov
lcall
push
mov
test
jae
xchg
push
adc
negb
lods
rolb
cld
pop
fcoms
push
lret
popa
addr16
sub
or
xchg
fsincos
pop
jb
sti
repz
in
rcrl
or
mov
outsb
test
pop
xchg
cmpsl
mov
js
dec
or
rorb
jmp
mov
push
pop
mov
push
orl
inc
sbb
pop
bound
mov
sub
scas
mov
fcmovbe
aas
push
pushf
mov
lock
insb
das
out
add
adc
mov
dec
add
and
sbb
xor
and
mov
jle
outsl
cltd
popa
rcll
pop
push
fstpl
lcall
push
icebp
or
xor
add
imulb
ret
sarl
and
sbb
cmp
jb
push
jo
ja
leave
xlat
pop
test
xor
fcomi
xchg
sbbb
and
push
mov
inc
and
cmc
jb
movsl
mul
jge
mov
or
push
xacquire
fs
aam
fldt
sbb
or
xchg
outsl
jg
mov
push
mov
xchg
and
mov
fisttpll
push
sub
pop
stc
inc
and
popf
fs
xchg
pop
adc
pop
ds
lock
imul
das
xor
cmpsb
inc
cmp
bound
push
mov
sbb
add
jg
mov
addr16
cmc
insl
fidivl
aaa
shlb
adc
pop
mov
dec
or
int
xor
int
mov
mov
jg
int3
xchg
out
jg
jb
mov
push
dec
hlt
add
xor
mov
lods
sbb
mov
aas
aas
inc
mov
xor
scas
icebp
or
in
adc
sub
nop
mov
bt
adc
inc
shld
imul
inc
sbb
jns
jmp
int
ret
mov
shll
xchg
jmp
push
mov
jns
and
push
test
or
mov
pop
insb
jle
into
sbb
inc
jno
pop
add
push
es
xor
or
jb
xlat
stos
sub
in
push
inc
sbbb
fwait
mov
push
outsb
dec
subl
lods
jmp
loopne
inc
xor
jg
sarl
movsl
outsb
push
jp
jo
into
push
imulb
sub
mov
pop
add
into
jo,pn
inc
push
std
xor
jno
cmp
add
inc
sub
adc
jbe
jp
es
aas
rcrb
adc
sbb
pop
mov
xor
push
aaa
ret
aaa
test
adc
cmpsb
xor
rcll
add
sbb
stos
ja
cmp
sub
xor
fnstcw
fwait
sbb
clc
or
xchg
push
inc
adc
push
ja
jo
ljmp
cmp
and
dec
mov
clc
mov
inc
andl
cltd
xor
dec
lret
test
mov
pop
fcmovnbe
jae
push
push
mov
cmp
loopne
inc
test
adc
into
or
jns
add
mov
fbstp
mov
repnz
lahf
jecxz
push
mov
push
test
movsl
jo
aad
lods
outsb
sbb
sahf
push
aas
fbstp
aas
lcall
rcrb
mov
mov
push
mov
cmc
mov
mov
fiaddl
push
clc
incl
stos
popa
mov
sub
or
or
xor
fnstenv
or
loope
add
aaa
es
mov
add
sbb
rcrb
xchg
push
nop
push
and
dec
aam
pop
mulb
lods
sbb
or
in
mov
arpl
inc
aad
xchg
fsubp
cs
mov
dec
shlb
mov
and
mov
incb
inc
sub
dec
pushf
mov
mov
mov
pop
pop
mov
add
adc
push
out
cmp
inc
pop
and
dec
jle
rorl
int
push
lds
mov
int
sub
or
shrl
bound
and
leave
adc
jne
gs
cwtl
ret
sub
loopne
nop
jmp
jge
cmp
mov
test
xchg
push
mov
inc
test
arpl
pop
mov
or
inc
ret
inc
dec
and
sub
mov
rcl
xor
xlat
outsl
dec
aaa
cmp
jmp
stos
lret
call
xchg
aas
fldl
data16
sbb
ficomps
xchg
inc
je
pop
cld
pushf
pop
pusha
rclb
inc
push
stos
cmc
pop
adc
and
movsl
clc
mov
imul
jnp
setg
scas
ror
or
xchg
adc
es
in
adc
loop
sbb
adc
shrl
in
inc
movsl
pop
jns
in
mov
ss
les
addl
imul
test
add
fstpl
dec
test
into
jo
mov
xadd
xchg
lock
mov
lcall
pop
pop
lea
fimull
lods
rcl
sbb
and
adc
aad
jecxz
outsb
xchg
dec
pop
sub
xor
or
shl
and
pop
xchg
lahf
leave
push
sahf
ret
insl
popf
push
mov
add
or
pop
jl
push
pop
mov
sti
xchg
sbb
adc
fiaddl
ficomps
mov
adc
mov
add
sbb
mov
test
popf
dec
xlat
sti
subb
imul
push
dec
fimuls
int3
ljmp
adc
mov
add
outsb
dec
ds
or
push
mov
rcl
pop
fildl
sbb
mov
clc
fldt
and
xchg
cmpsb
push
movb
mov
mov
mov
mov
jp
push
outsb
jbe
and
lahf
sti
add
jle
mov
xchg
loop
xor
stc
xor
dec
int3
stos
sub
cmp
xorl
scas
out
dec
aam
push
rclb
cmpsb
sub
adc
lret
mov
cmp
iret
adc
or
sub
push
and
xchg
add
pop
jo
scas
jae
stos
cli
shr
add
pushf
ret
lods
clc
repz
sti
in
sub
or
xchg
inc
push
fwait
ret
scas
add
test
hlt
addr16
jno
fwait
outsl
mov
das
pop
mov
int
mov
fisubl
cmp
jb
int3
xor
jb
ljmp
push
pop
ja
or
dec
lret
or
mov
jge
movsb
call
push
dec
inc
sahf
xchg
push
mov
dec
add
sbb
xorb
andb
imul
daa
push
mov
dec
mov
jo
push
xor
adc
daa
test
les
sbb
shl
push
add
push
push
jns
mov
sbb
jmp
sbb
ficoms
dec
lret
mov
dec
jns
iret
jno
jns
sub
cmpsb
cmp
xor
xor
out
push
loop
push
lret
das
mov
push
cmpsl
cmp
pushf
sahf
and
jmp
cmp
or
test
ret
mov
int
push
xchg
jae
xor
mov
je
in
mov
cltd
cmc
mov
xor
mov
loopne
and
inc
jle
adc
and
call
mov
gs
in
mov
dec
enter
mov
insb
sbb
push
sbb
stos
lods
dec
mov
lock
cmp
push
xor
adc
aas
popa
xchg
mov
cmp
mov
inc
pop
inc
xor
adc
or
or
lret
lods
mov
cmpsb
xor
insl
daa
add
or
push
or
add
xchg
jnp
add
outsb
add
hlt
fs
add
sbb
bound
mov
shlb
push
and
and
dec
jecxz
jne
popf
pop
call
mov
dec
sub
ja
repz
je
mov
or
or
pop
push
mov
clc
mov
pop
and
lock
popl
fiadds
sub
push
stc
jl
or
stos
jbe
push
mov
or
shrl
cmpl
pop
sub
sbb
xchg
insl
sbb
sti
jle
cltd
sbb
in
mov
sub
mov
jae
jmp
shlb
and
or
pop
pop
fs
mov
scas
cli
movsb
loop
xor
cmc
dec
dec
add
test
ficomps
inc
mov
pop
pop
aaa
or
aas
scas
test
mov
not
fstps
jg
insb
jo
pop
fimuls
adc
fcmovne
rcl
pop
enter
filds
or
xor
push
xlat
fwait
mov
and
aad
mov
mov
pop
and
dec
mov
cmpb
mov
ljmp
cs
repz
or
test
rcrl
pop
push
pop
or
ret
cmp
cmp
mov
popa
rcrl
pushf
jp
ss
repz
xor
andb
mov
xor
sar
icebp
insb
xchg
lds
bound
iret
leave
fbld
jge
addr16
dec
repnz
int
push
xchg
repnz
push
push
sub
decl
jmp
jge
cmp
mov
inc
and
std
js
repz
pop
jge
rorl
ljmp
add
out
mov
inc
icebp
mov
aas
loope
out
push
mov
pop
mov
dec
pop
jbe
jmp
inc
cwtl
pop
call
stos
and
adc
rcl
inc
repnz
rorb
hlt
cmp
xchg
lods
divl
mov
sbb
xchg
negl
cmp
lds
inc
push
pop
outsl
mov
push
mov
int
mov
mov
popa
mov
in
into
inc
std
nop
outsb
fcoml
std
pop
push
xor
repnz
pop
adc
sbb
mov
cld
sub
repnz
popf
std
push
repz
mov
cmp
mov
push
js
ficoms
out
dec
imul
lret
xchg
popa
daa
pop
stc
movsb
jne
sahf
mov
cmp
xchg
mov
fdivrl
sub
mov
inc
mov
mov
dec
cmp
int3
rcl
stos
gs
dec
xchg
push
test
or
dec
and
test
icebp
jp
sahf
int
addr16
pop
mov
jo
inc
sahf
imul
push
sbb
out
loop
test
lock
imul
or
out
xorl
sub
fdivs
and
leave
loopne
xlat
pop
sub
daa
mov
jecxz
cmp
sbb
ret
cs
lds
shl
call
stos
aad
rcrb
cltd
fldt
into
mov
adcl
in
aas
and
stc
addr16
mov
adc
inc
std
imul
out
sar
rorl
in
ret
loop
cmp
inc
stos
push
jnp
cwtl
into
inc
mov
cmp
das
loope
fimull
jns
enter
dec
jmp
inc
xchg
dec
mov
sub
aad
popa
loope
adc
jb
cmp
or
mov
push
dec
aas
jp
add
push
pop
adc
cld
aaa
ds
sarb
lock
push
mov
add
rcll
loop
enter
xchg
les
adc
push
fcomps
hlt
imul
gs
loope
popf
in
add
cmp
rorl
loop
sti
mov
loope
dec
lds
movsb
call
and
add
cs
adcb
xchg
mov
push
mov
pop
fstl
jnp
js
outsb
lcall
sahf
sbbb
popf
fsts
fwait
jp
pop
pop
insb
negb
mov
mov
mov
mov
pop
cmpsl
adc
arpl
mov
mov
sub
dec
daa
mov
cltd
xlat
fstps
mov
test
mov
sub
or
inc
ret
int
xor
je
mov
sbb
outsl
dec
fucomip
lds
int
std
test
cmp
push
mov
sti
fwait
jae
dec
jl
or
in
xor
sbb
mov
cld
cmp
sbb
ret
cmp
scas
ret
mov
mov
cmp
test
subl
call
in
lds
dec
xor
adc
sbb
mov
orl
aam
pop
xchg
jle
sub
movsl
push
addr16
add
mov
stos
xchg
int
lea
add
out
or
into
in
stos
stos
mov
or
inc
in
pop
push
pop
push
dec
cli
idivl
insb
movsb
pushf
jecxz
or
jp
mov
fwait
push
xchg
mov
stos
sub
cmp
dec
push
addr16
dec
aas
flds
inc
push
cmp
cltd
mov
push
xchg
sti
wrmsr
jmp
inc
out
clc
jbe
rolb
or
lea
out
xchg
mov
lret
xchg
dec
add
scas
es
jge
inc
xchg
push
insl
pop
xchg
hlt
xor
or
dec
add
fdivrl
out
push
xchg
iret
mov
add
or
adc
in
test
inc
lcall
ret
lret
in
out
emms
xlat
ficoms
add
add
in
sub
call
mov
mov
mov
add
ja
out
lret
sub
dec
ds
push
or
lods
fdivs
jns
out
jp
jo
ficoms
dec
xor
sti
ret
xor
dec
popf
xchg
lahf
dec
ds
aas
cmp
sub
popf
mov
jbe
xchg
push
inc
ret
imul
mov
in
popf
push
pop
dec
movl
iret
outsl
xchg
inc
push
popf
jmp
or
jb
dec
jnp
adc
mov
xchg
cmp
jns,pt
cmp
sub
pop
cmp
cmp
aas
lds
mov
loop
cli
mov
xor
sbb
mov
ja
mov
push
mov
movsl
in
jae
mov
fidivrl
out
mov
repnz
mov
fs
mov
dec
out
arpl
in
outsl
outsb
repz
dec
subl
jge
xor
fistpl
cmp
xor
sub
xor
xchg
icebp
xchg
and
cmp
out
testl
sub
xchg
sub
sbb
out
adc
xor
aam
mov
or
pop
lret
mov
out
aad
mov
sbbb
inc
xchg
fwait
les
stc
fstps
mov
fs
adc
cltd
cmp
add
lods
jmp
mov
mov
jo,pt
add
movsb
fsubr
lret
rcll
movsl
mov
adc
inc
mov
incl
arpl
cwtl
mov
pushf
adc
call
scas
lods
mov
xchg
movsb
mov
sti
inc
add
daa
loopne
rcrl
sub
pop
inc
sahf
in
mov
cli
out
imulb
outsl
stos
xor
adc
add
mov
fnstsw
sub
inc
iret
xchg
or
mov
into
addr16
rolb
xchg
mov
add
fwait
rcrb
mov
push
enter
int3
adc
and
ret
fwait
xor
push
lret
dec
movsb
mov
jb
adc
and
repz
repnz
flds
std
or
lcall
pop
cli
dec
loopne
pop
shll
les
fildl
add
adc
add
and
pop
mov
sti
mov
pop
xor
bound
dec
mov
call
jmp
sub
cmpsl
inc
in
repz
mov
xchg
jns
sub
pusha
movsl
push
jl
xorl
mov
nop
fsub
jecxz
fwait
jae
mov
jp
fld
inc
roll
mov
cld
cld
in
lock
ja
sbbb
outsl
push
js
mov
faddl
dec
jo
jb
mov
mov
pusha
dec
movsl
pop
sub
arpl
mov
ret
or
pop
stc
xor
jg
std
xlat
add
dec
pop
jnp
decb
addl
xchg
test
xor
pop
xchg
mov
cmp
adc
stc
jl
jge
or
cmc
xor
loopnew
push
scas
xchg
sbb
sarl
lahf
pop
pushf
fs
inc
out
testb
clc
or
inc
lods
hlt
inc
xchg
mov
test
mov
mov
das
pop
fwait
dec
pop
pop
and
jge
lahf
mov
pop
adc
lock
mov
fcmovnb
aad
jge
lahf
cmp
lret
gs
pop
xor
mov
or
xchg
dec
ss
xchg
into
push
dec
dec
pop
lock
xchg
push
cmpsl
fistl
inc
pusha
cs
js
fcmovbe
jmp
scas
test
xchg
mov
cmpsl
mov
push
push
pop
sahf
dec
imul
pop
pop
xchg
push
lds
push
lods
cmp
and
lcall
inc
cltd
adc
xor
sub
loop
in
daa
mov
or
dec
cld
adc
sarl
or
test
push
cmp
lock
daa
dec
movsb
inc
imul
fstpl
sub
loopne
add
ds
dec
pop
fildll
cld
in
and
mov
push
xor
imul
in
cmc
pop
fs
add
mov
xchg
sub
cmp
stos
jp
shl
pop
xchg
rorl
test
fcomps
ficoms
movsb
push
add
mov
mov
and
jno
sub
xchg
pop
jno
movsl
push
fs
cld
add
cs
cmpsb
arpl
lcall
aam
insb
mov
sbb
dec
movsb
scas
lods
hlt
mov
adc
adc
dec
cs
orl
push
mov
push
dec
or
mov
gs
cmp
sahf
sub
fisttps
js
in
xchg
inc
push
inc
or
sbb
and
add
dec
negb
repnz
mov
pushf
aaa
leave
xor
idivb
mov
iret
stos
out
fcompl
sub
orb
dec
cwtl
inc
das
mulb
push
mov
cmpsl
cmp
mov
pop
test
xor
insb
dec
addr16
sarb
fstpt
cmp
inc
jmp
adc
call
pop
dec
mov
pop
or
push
push
cmp
fnstsw
repnz
mov
fnstsw
xchg
push
push
jg
mov
and
add
adc
mov
sbb
mov
cmpb
dec
push
sti
jmp
adc
in
add
add
fldenv
push
test
movsb
sub
jb
adc
fisubs
hlt
js
push
mov
testl
repz
mov
inc
fs
shrb
call
outsl
mov
jo
jecxz
lahf
cmp
sbb
jp
loopne
push
add
out
popf
sbb
mov
pop
lods
test
call
lcall
gs
fs
xor
dec
mov
dec
mov
mov
jmp
pop
enter
mov
sub
adc
add
lea
dec
imul
scas
scas
jmp
pop
adc
aaa
stc
add
xchg
jmp
dec
ss
cmpb
xchg
xor
xchg
test
outsb
dec
addr16
inc
cs
inc
adc
inc
inc
lea
mov
lret
aam
sbb
mov
fimull
mov
sub
xchg
out
enter
ret
sub
aaa
cmp
lret
les
loop
cld
mov
movsb
xchg
js
lcall
sbb
jp
test
mov
lods
jp
jg
testl
xchg
add
sub
cmc
mov
sub
adc
jg
lock
outsb
movsb
pop
add
and
lcall
mov
xor
mov
push
imul
mov
cltd
cli
sbb
mov
call
movsl
cmp
dec
aam
cli
sbb
cmpsl
mov
dec
or
xlat
rolb
mov
loop
sbb
or
fs
pop
xchg
jmp
int
adc
pop
lods
loopne
dec
push
test
das
inc
jl
fildl
movsb
ret
push
int
test
ret
sub
imul
inc
pop
into
mov
inc
mov
jmp
mov
hlt
inc
sti
lcall
std
sahf
cltd
push
lcall
pop
mov
dec
fbstp
xor
cmp
aad
test
shrb
pushf
jle
add
dec
jne
dec
cli
mov
cmp
sbb
pop
movsb
mov
rcl
sub
or
jno
stos
cli
jns
loop
dec
mulb
jle
cltd
sbb
shll
cmp
mov
sbb
out
and
lds
lea
dec
sbb
ljmp
cmp
push
jo
sub
xchg
test
push
pop
pop
cltd
fdivrs
xchg
jg
push
lret
loope
xchg
enter
mov
add
pop
pop
stc
inc
dec
cld
sahf
data16
pop
addr16
inc
xchg
mov
adc
mov
mov
mov
repnz
sub
push
cmp
fildll
mov
das
adc
popf
pop
pop
leave
adc
into
push
or
dec
and
mov
pop
test
mov
jno
and
sub
mov
adc
pop
sbb
jmp
arpl
iret
or
fs
cmpsb
sbb
adc
dec
shl
out
repnz
into
cmp
test
test
rcl
prefetchwt1
inc
xchg
lret
andb
add
add
arpl
or
stos
gs
and
negl
adc
mov
push
pop
lcall
push
stos
rsm
push
subb
dec
jl
pop
mov
jbe
push
shll
leave
push
jmp
add
ja
mov
faddl
push
push
addr16
cmc
mov
call
push
push
push
in
lods
lock
sub
jb
test
jmp
in
call
les
sub
shll
lret
sub
sub
xchg
loope
into
movb
sub
lahf
inc
cmpsl
and
cli
jns
repz
add
js
push
test
mov
sub
stos
sbb
xchg
sbb
xchg
xchg
add
xlat
jle
ljmp
sub
in
ror
repnz
adc
pop
mov
push
mov
sbb
add
sub
mov
mov
insb
push
andb
sub
aad
nop
imul
adc
jnp
sti
das
push
inc
cmp
sub
into
scas
lret
into
mov
adc
jg
sahf
mov
push
adc
imul
mov
jae
out
jns
inc
xor
sti
in
xor
inc
push
lods
add
mov
std
test
movl
enter
inc
scas
adc
or
adc
mov
lods
clc
or
jecxz
jbe
out
std
sbb
sbbb
aad
pop
mov
arpl
sbb
cmp
mov
pop
add
clc
push
or
pop
sub
gs
push
pop
test
ljmp
mov
cs
mov
outsb
jb
je
jne
lea
fimuls
pop
test
lret
inc
sub
mov
xchg
and
or
lcall
popa
adc
in
push
sub
sbb
rcll
mov
add
jmp
shlb
mov
sbb
xchg
add
dec
mov
fiadds
dec
and
and
jbe
push
inc
cmc
mov
in
add
push
add
cmp
or
rep
in
mov
sbb
push
or
sbb
mov
ljmp
aad
daa
jecxz
adc
pop
roll
das
mov
xor
sbb
or
fwait
pop
mov
nop
inc
leave
pop
je
pop
or
in
mov
sbb
inc
stos
in
mov
hlt
xor
mov
and
faddl
xchg
je
inc
shll
sbb
pop
out
jb
dec
decl
out
sbb
inc
stc
mov
cwtl
mov
ds
pop
inc
clc
ficomps
mov
shlb
cltd
xchg
paddq
insl
xor
xchg
das
imul
cmp
jge
rcll
sub
mov
jns
dec
xchg
aad
lcall
push
cltd
pop
mov
add
pop
and
test
sub
mov
pop
mov
ret
out
push
mov
cmpsl
or
mov
test
jg
jp,pn
add
pusha
xor
xchg
pushw
mov
fs
shll
into
mov
mov
in
rcr
mov
ja
add
in
sub
lods
lret
fstps
shl
sub
push
jle
ss
mov
sti
dec
or
add
dec
nop
out
jo
ljmp
scas
gs
mov
mov
imul
clc
push
inc
mov
adc
lret
dec
loop
inc
and
jnp
mov
jb
mov
filds
lret
inc
pop
lods
push
inc
adc
leave
xor
jno
cmp
outsb
aas
in
outsb
jp
std
mov
jg
jb
out
aam
ljmp
add
push
sbb
pop
xchg
gs
xor
sbbl
dec
cmpsb
cmp
sbb
and
jp
dec
adc
sbb
jno
test
push
sbbl
out
pusha
pushf
or
int3
mov
mov
ret
pushf
pop
or
or
jae
push
movsb
xor
fstpt
enter
or
ja
test
frstor
lea
pushf
and
jg
mov
and
cmp
aad
sarb
or
cltd
out
mov
cmpb
mov
adc
mov
cmp
dec
push
shlb
pop
pop
cmp
jnp
call
xor
pop
fisttps
pop
push
xchg
sbb
or
call
pop
enter
lea
push
iret
pop
inc
int
dec
adcb
pushf
or
hlt
mov
pop
dec
add
repz
cmc
flds
int3
push
scas
das
enter
cmp
loopne
pop
add
mov
aaa
pusha
or
jbe
jnp
mov
lret
adc
mov
dec
or
ret
add
xor
std
mov
pusha
test
xor
ljmp
mov
adc
mov
fists
scas
mov
mov
in
mov
jae
mov
scas
out
mov
lods
sahf
jg
cmp
cmp
in
icebp
inc
loop
sbb
stc
sarl
mov
clc
js
or
or
dec
dec
mov
pop
mov
push
lret
subb
mov
test
test
cmc
lahf
cmpsb
inc
add
inc
dec
call
and
mov
aam
mov
jge
xchg
add
and
push
inc
dec
cmp
hlt
sbb
jp
mov
stos
cmp
jl
push
test
cmp
ret
sarb
mov
push
sbb
xchg
adc
sub
cmp
jo
negb
adc
out
mov
cmp
shl
jmp
test
xchg
lods
scas
sbb
iret
jge
stc
iret
pop
jno
icebp
fwait
aas
fidivrl
lahf
and
jne
xchg
xor
add
and
pop
dec
cli
imul
shll
ret
push
push
in
dec
inc
fwait
xchg
jp
into
dec
dec
scas
rcrb
jge
pop
mov
push
sub
mov
or
das
popa
sbb
jl
adc
or
mul
clc
jne
in
xchg
cmp
outsl
sahf
test
pop
sub
scas
in
ss
mov
jo
test
jl
xor
out
xchg
loop
insl
and
cs
and
lods
dec
ss
cs
xchg
sbb
roll
mov
mov
mov
xchg
xchg
loop
mov
orb
mov
daa
xor
jmp
test
je
cltd
in
fwait
dec
outsl
and
in
je
push
sti
xchg
mov
add
and
sub
cltd
dec
cld
fisttpl
add
test
repnz
or
xchg
adc
push
push
sbb
pop
cmp
fbstp
fwait
adc
dec
fdivs
cmpsb
add
aas
dec
mov
pop
imul
imul
mov
and
push
mov
jg
roll
icebp
les
mov
jno
mov
add
and
mov
daa
popf
jecxz
ret
mov
pusha
inc
insb
pop
add
push
sub
pop
arpl
in
mov
dec
repz
das
out
lea
test
bound
pop
rcr
mov
repz
dec
daa
mov
push
add
mov
lret
ds
sbb
ss
mov
cmc
push
xor
xchg
test
mov
mov
mov
dec
jge
dec
test
movsb
adc
fs
leave
fdivrl
cmp
loopne
inc
adcl
adc
inc
xchg
xchg
adc
mov
ds
cmpl
shl
jo
push
dec
cmp
inc
movsl
xchg
push
mov
adc
mov
sub
jl
jae
mov
int3
adc
cmc
ja
xor
fdivl
xchg
stos
mov
adc
dec
mov
insb
pop
add
xor
jno
xchg
loope
stc
test
shlb
sti
popf
rclb
push
aas
cmp
jb
aam
and
pop
int
mov
insl
cwtl
movsl
adc
shll
cmc
int3
in
movsb
inc
sub
cli
pop
jmp
or
sbb
rorb
cmp
or
jnp
roll
inc
inc
lcall
roll
adc
repnz
cwtl
std
test
push
or
and
and
neg
push
mov
ficoml
test
in
das
aam
mov
into
pop
sarl
stc
mov
push
inc
ss
dec
leave
sbb
fcomi
sbb
cld
inc
inc
je
and
out
sarl
insl
or
mov
and
mov
inc
in
hlt
mov
stc
stos
insl
scas
mov
bound
sbb
adcl
cmp
pop
rorb
sbbb
cwtl
popa
sub
add
mov
into
sub
jle
cmp
dec
xor
push
ret
insl
repz
xor
adc
aad
and
push
push
insb
sub
mov
xchg
in
fmull
xor
push
xor
inc
lods
and
xor
adc
jnp
jae
bnd
cs
arpl
cmc
xchg
push
insl
pushl
push
mov
popaw
sti
push
dec
xchg
dec
arpl
sbbl
xchg
xchg
xor
add
idivb
popa
mov
in
movsl
jmp
stos
rol
xorb
es
popa
iret
pop
sub
inc
or
inc
mov
mov
aas
aam
scas
xchg
sbb
adc
sub
or
mov
inc
dec
push
sub
hlt
outsl
cs
addr16
test
repz
shrb
sub
pop
jnp
mov
adc
out
ljmp
mov
mov
out
and
cmp
mov
pop
xor
ds
adc
jmp
push
or
sbb
or
int
sbb
push
into
jo
mov
fndisi(8087
and
inc
mov
jns
push
pop
ljmp
mov
ja
lea
mov
add
popa
jmp
jb
lcall
mov
sbb
inc
cmc
out
push
cwtl
jb
mov
adc
ret
dec
insl
stos
lock
and
pop
xchg
sti
mov
sbbl
cli
pop
bound
insb
cli
cmp
jecxz
xor
and
jecxz
cmp
pop
cmpsb
sahf
jp
pop
fs
dec
and
adc
cli
lret
cmp
out
jecxz
dec
xor
outsb
shr
scas
mov
test
or
repz
add
pop
pop
add
nop
adc
jecxz
or
or
int
push
mov
jle
das
jno
outsb
and
xchg
xor
mov
push
lock
cmp
push
or
cs
cmc
fadd
add
xchg
xchg
sub
or
and
out
repnz
fsts
jecxz
pop
ja
int
rcrb
cmp
mov
mov
pusha
cltd
or
lcall
ret
jae
aaa
add
outsl
in
push
pop
fbstp
jb
sbbl
mov
shlb
aas
mov
sti
repnz
ret
lret
ja
xor
mov
gs
xchg
ret
or
cmp
jecxz,pt
push
mov
xchg
imul
mov
in
in
arpl
orl
add
pusha
in
dec
cmp
fcmovb
jb
push
je
mov
icebp
xchg
fisubl
imull
std
cmp
test
shrl
iret
jmp
jle
jne
fcmove
xchg
jnp
mov
pushw
rorl
out
sub
in
fs
xchg
inc
out
into
cvtpi2ps
scas
sbb
aam
lret
xor
jl
mov
push
icebp
lret
mov
inc
mov
sub
xor
scas
xchg
jno
jb
mov
fisubrl
js
xchg
inc
aaa
fs
and
mov
xor
das
xchg
add
mov
aam
xor
dec
xor
shlb
dec
rorb
rcrl
clc
cltd
sub
jg
idivl
data16
and
add
fisttpl
push
out
sarl
in
in
out
xor
sbb
bound
stos
sub
mov
fnstenv
mov
or
mov
adc
inc
das
cmp
xchg
pop
xchg
or
scas
sub
push
out
lds
and
inc
mov
push
mov
cld
test
leave
lock
movsb
sbb
scas
mov
mov
pop
inc
xchg
jge
dec
lds
aam
add
into
and
jp
xchg
loop
sti
inc
mov
pusha
notb
inc
push
ja
imul
mov
in
dec
inc
fs
and
imul
inc
pop
push
sarl
pushf
loop
lock
dec
cltd
cmpsb
aam
mov
loope
lcall
xor
movsb
ret
cmc
pop
icebp
push
sbb
mov
mov
adc
add
stc
inc
mul
jnp
cli
xor
mov
inc
sbb
xor
pop
xlat
add
or
cli
adc
mov
popf
add
insl
jns
jecxz
mov
xor
pop
dec
xchg
shlb
das
test
mov
inc
in
xor
push
push
icebp
jne
xchg
add
mov
add
rorb
repz
mov
test
pop
mov
xor
xor
fisttps
cli
and
and
xchg
outsb
dec
lahf
clc
xchg
stos
adc
aas
divl
in
mov
adc
or
jne
mov
lret
adc
add
or
mov
mov
mov
adc
bound
out
pop
pop
inc
mov
aad
in
adc
add
ja
add
call
inc
jne
loop
add
fnstsw
push
jns
repnz
mov
negb
inc
xor
or
es
xor
ljmp
cld
fs
cmp
loope
dec
inc
push
in
arpl
sub
popa
fucomi
xor
mov
xor
push
cmp
in
push
ljmpw
das
push
adc
add
pop
pextrw
cmp
es
lea
jmp
fcomps
cmpsl
stos
lret
pop
mov
lock
sbb
jecxz
mov
push
dec
push
mov
jg
xor
mov
pop
or
scas
push
popf
aad
xchg
jbe
cmp
dec
xor
out
leave
jp
pop
fildl
xor
and
adc
mov
add
jo
sbb
push
jne
test
add
out
and
jl
or
jns
mov
jle
mov
add
lock
fcoms
inc
mov
dec
daa
inc
aas
inc
daa
xorb
and
stos
inc
mov
inc
aam
xor
or
xor
xor
pop
pop
and
jl
out
popf
shll
ficoml
dec
push
xor
in
sub
test
rcll
cwtl
aam
pushf
aad
in
bound
adc
bound
mov
movsl
cmp
insl
mov
lds
xlat
and
negl
fs
xchg
insb
rclb
lods
in
imul
mov
xchg
notl
xchg
sti
xor
mov
or
aas
dec
mov
clc
sahf
pop
pop
inc
mov
bound
pop
jno
sbb
sbbl
add
push
xor
out
loope
xor
dec
lds
scas
sub
pushf
imul
mov
out
rorl
cs
mov
or
stc
push
loop
fsubrl
into
out
enter
hlt
and
and
shlb
sbb
pop
push
xchg
adc
jecxz
pop
or
dec
mov
cmp
adc
jmp
icebp
fs
mov
mov
jg
data16
jge
lea
negl
and
dec
rolb
add
cs
cli
dec
lahf
ficomps
imul
and
popa
std
fstpt
inc
jne
dec
mov
insb
push
fdivr
jbe
out
scas
and
adc
ret
push
sbb
out
inc
sub
push
mov
mov
scas
sbb
jns
inc
mov
pusha
push
dec
push
out
scas
mov
sbb
rep
cmc
adc
and
xchg
inc
rclb
xor
cmp
sti
scas
lret
push
leave
arpl
fdivrl
subl
push
lcall
mov
sbb
jno
aam
movsl
cmpsb
xorl
sub
popa
daa
dec
mul
or
push
in
les
mov
add
movsl
xchg
dec
mov
lock
adc
pop
xchg
cmp
jl
sbb
inc
stc
movsb
mov
sub
push
pop
push
insl
lret
pop
pusha
jecxz,pt
mov
pop
jne
inc
cld
lock
pop
leave
sahf
push
sbb
subb
insl
inc
or
in
dec
movsl
imulb
les
pop
add
enter
js
or
gs
scas
outsl
jne
adc
in
or
fsubl
and
dec
add
bnd
jb
cmpsb
sub
add
jae
mov
test
dec
cmpsb
cvtps2pd
lcall
pop
jno
fnstenv
jmp
aam
int3
push
mov
inc
dec
sbb
add
push
movsb
test
xchg
mov
psubusb
pop
mov
add
pop
add
adc
mov
add
mov
insl
dec
xor
or
mov
mov
ret
cmpsb
int3
popf
mov
sub
push
subl
test
sub
addl
aas
xchg
inc
cmp
add
fsts
loopne
ds
lcall
cs
orb
imul
pop
ret
adcb
sub
shll
les
scas
pop
lret
sub
popa
jb
xchg
add
mov
mov
xchg
imul
sbb
out
mov
sbb
add
stos
popf
mov
pop
cli
loopne
jo
xor
in
daa
pop
loope
fstl
jno
idivl
ret
mov
aad
inc
inc
pop
add
mov
jecxz
dec
xor
ds
lds
pop
int
adc
scas
rorl
addr16
mov
shlb
or
repnz
lcall
dec
xor
jmp
and
popa
jmp
sti
jae,pn
push
push
stc
xor
pop
lret
xchg
dec
push
in
fs
jle
mov
mov
xchg
sbb
mov
add
std
jg
cwtl
and
ret
and
popa
mov
cmp
cltd
add
cmp
insb
sub
fxsave
cwtl
cmp
xchg
popa
and
push
sahf
jo
imul
cmp
jp
cmp
jae
nop
imul
push
mov
ds
call
or
into
pusha
pop
cmp
call
rcr
int
add
adc
adc
lods
dec
inc
jb
xlat
das
lret
or
cmp
sbb
in
test
push
sarl
insb
push
xor
sbbb
jbe
mov
cmp
sub
imul
addr16
sbb
test
mov
das
or
das
test
dec
push
sbb
fwait
or
sbb
sub
stos
sbb
orl
test
test
outsl
add
or
dec
push
nop
sbb
dec
ficoml
int3
dec
jge
and
andl
jle
push
lods
xor
inc
out
test
testb
imul
and
pop
mov
repnz
lock
fadd
aam
sahf
shrd
cmpsb
mov
sti
cmp
fwait
movsb
push
enter
test
sbb
mov
push
fstl
inc
xchg
push
push
jnp
sbb
pop
lds
ja
sahf
or
push
arpl
cmp
fmuls
inc
xchg
ret
push
leave
pop
cltd
xor
rcrb
repz
mov
popa
js
stos
test
mov
xchg
mov
xchg
test
notb
pop
shl
aad
stos
lahf
cmpsl
arpl
ja
lret
fs
mov
loop
rorb
fwait
sub
or
insb
arpl
pop
loop
je
and
lods
ds
ljmp
popf
dec
and
adcb
xchg
aas
dec
pop
mov
testl
push
push
mov
mov
jmp
and
fcomps
jp
jne
int3
pop
push
mov
lahf
cli
cmp
mov
stc
into
fldl
outsb
pop
ret
adc
push
push
stc
dec
sbb
daa
out
daa
mov
sbb
push
or
jmp
push
shlb
std
mov
lods
pop
xchg
in
mov
adc
addr16
dec
xchg
scas
shll
push
mov
and
lret
push
xor
push
mov
test
shll
mov
aad
inc
call
outsl
mov
dec
inc
shr
cmpb
daa
add
into
pusha
add
addl
pop
xchg
mov
movsb
xchg
cmpsb
xchg
mov
arpl
dec
adc
lods
popf
or
lods
push
pop
inc
popf
lcall
lahf
notb
and
dec
movb
inc
mov
inc
jo
xchg
sbb
cmp
sti
add
std
cmp
push
lock
test
jb
orl
fisubl
les
mov
cltd
mov
jecxz
jne
out
adc
adc
pop
and
xchg
mov
lahf
mov
jge
pushf
pushf
ret
xchg
ss
cmp
jecxz
inc
rorl
addr16
es
or
into
jbe
sarl
or
cmovno
adc
jne
push
xchg
test
daa
dec
sbb
insl
into
inc
mov
dec
sub
outsb
xor
popa
daa
inc
push
dec
and
out
cltd
test
loopne
cmp
fstpt
adc
xor
xchg
dec
lcall
push
sbb
xlat
push
mov
dec
mov
inc
adc
jmp
mov
add
cmp
lds
adcb
std
xor
leave
cli
jbe
cltd
loopne
pop
movsb
mov
pop
f2xm1
subb
outsl
jmp
or
add
xlat
cmpsb
leave
jns
hlt
lods
inc
outsb
test
aaa
inc
imulb
add
jg
lods
fisubrs
sbb
ret
adc
dec
xorl
bound
pop
lcall
mov
and
cli
xlat
lock
pop
in
iret
aad
or
or
in
and
dec
addr16
fistl
jne
xchg
sbb
call
fisttps
cmp
mov
subb
lret
pop
cltd
pop
cmp
dec
sbb
and
adc
push
jge
lret
push
jns
jne
mov
adc
push
ret
jns
xchg
test
inc
pop
adc
cmp
sub
daa
sbbb
in
loop
aam
xor
test
jb
out
enter
inc
cltd
dec
mov
cmpl
js
mov
or
inc
or
cmp
jl
fadds
pusha
sbb
lds
movsb
fisubrs
pop
mov
icebp
test
mov
cmp
popf
mov
out
adc
shl
test
mov
sbb
mov
or
fdivr
lahf
and
jl
loopne
cmp
jnp
mov
popl
rorb
pop
arpl
std
cmp
or
sbb
mov
mov
enter
pop
in
in
cmp
imul
jp
out
outsl
mov
fmull
xlat
add
push
xchg
cwtl
mov
mov
lcall
aaa
add
pop
call
xor
popf
lcall
sbb
xor
sbb
inc
xchg
sbb
inc
adc
mov
pusha
shl
rclb
rclb
in
rcrb
adc
cmpsb
aam
jb
stos
inc
inc
pop
inc
add
sbb
fidivl
adc
pop
xchg
dec
popa
mov
or
push
insb
icebp
scas
in
push
mov
mov
jne
ret
loopne
lea
jno
jle
mov
jnp
jae
addr16
jne
cmpsb
sub
pop
rorl
fxtract
scas
push
addr16
pushf
adc
pop
xor
outsl
add
jb
lods
mov
faddl
sahf
dec
lcall
cmp
inc
leave
loope
ja
add
or
andb
pop
les
sub
or
test
cmp
dec
jecxz
rcrl
ja
int3
cvtdq2ps
imul
mov
dec
sbbl
sahf
add
jmp
cmp
and
cmpl
scas
xchg
sub
sub
inc
icebp
addr16
shlb
pop
xchg
leave
inc
loope
push
rolb
mov
cmp
lret
mov
dec
test
test
adc
hlt
outsb
sbb
scas
es
outsl
jb
or
mov
push
enter
mov
cmp
pop
push
or
push
add
mov
xor
and
push
aad
pop
adc
iret
lretw
jnp
sti
add
ret
ja
popf
sahf
mov
inc
je
jb
ljmp
jle
repz
sub
mov
mov
sub
in
lcall
std
mov
test
jb
mov
pop
mov
push
loop
ret
inc
xor
inc
and
aad
fdivr
lret
adc
iret
outsl
pop
push
push
pop
cld
bound
add
lret
loop
mov
mov
xor
sti
insl
sti
or
pop
scas
jg
rorl
sub
aaa
jg
pop
mov
aam
pop
and
ret
cmpsb
add
sbb
enter
out
push
dec
in
sbb
divl
push
pop
xchg
cwtl
fs
dec
loope
mov
and
jecxz
cmp
fs
cli
adc
idivb
adc
mov
push
cld
sbb
jbe
pop
cmp
add
jp
pusha
push
xor
adc
mov
sub
mov
or
in
stc
add
fstl
mov
rclb
sbb
xorl
adc
rcrb
or
popl
inc
shlb
jp
push
test
push
jb
leave
pop
mov
lds
dec
imul
xchg
sbb
xlat
inc
push
inc
mov
dec
mov
gs
arpl
out
pause
push
imul
add
cltd
or
ds
pop
loopne
mov
aad
out
ret
push
andl
push
stos
and
scas
or
add
adc
lds
call
pop
mov
inc
cmpb
mov
and
stc
add
clc
dec
lds
and
sahf
xchg
xor
sarl
inc
xlat
xor
ljmp
mov
jno
push
add
pushf
xchg
lock
push
xchg
out
std
ret
pushf
and
push
js
loop
adc
lock
xchg
jle
mov
xor
and
scas
js
scas
sbb
mov
or
jmp
js
add
dec
sub
and
scas
js
mov
sbb
int3
push
mov
testl
adc
or
push
stos
enter
mov
cmp
stos
pop
jb
jl
dec
not
stos
repz
pushf
mov
mov
mov
stc
pop
mov
inc
notl
adcl
enter
jnp
cli
xchg
les
pop
aam
cmp
mov
mov
pop
int3
fadd
fwait
push
nop
das
pop
lods
ja
adc
dec
mov
xor
mov
ljmp
or
mov
test
xchg
cs
clc
or
xlat
outsl
adc
xchg
pushl
or
cmp
pop
out
pop
push
in
jge
pop
xchg
adc
hlt
mov
cmp
test
push
add
lds
push
cmp
out
and
xchg
and
test
xchg
push
jnp
sar
pop
inc
xchg
or
or
test
jg
test
sbb
popf
in
push
cmpsb
xor
lea
lods
test
sbb
dec
xor
cmp
xchg
ljmp
in
jle
pop
shr
dec
or
rol
dec
cmp
cmp
push
jnp
push
mov
inc
jo
add
xor
xchg
and
das
add
jg
rolb
cmp
int3
dec
sub
sub
ja
pop
dec
cmp
call
cltd
jp
xchg
mov
xchg
jne
rcrb
ds
sgdtl
jl
jl
dec
ja
cli
dec
sub
rclb
clc
push
shlb
seto
cmp
sub
sub
aas
jmp
loope
xchg
jno
mov
mov
mov
mov
flds
sahf
push
sbb
mov
or
icebp
sub
cmp
aas
and
dec
xchg
movsl
leave
ljmp
bound
mov
and
mov
adc
das
divl
sbb
add
xor
jp
into
xlat
jle
jnp
xor
sahf
shrb
outsb
in
or
out
mov
dec
mov
lret
shrl
push
lock
sbb
add
pop
cltd
or
lods
outsb
mov
push
mov
mov
inc
pop
sbb
xlat
pop
inc
scas
mov
jp
das
fidivs
mov
xor
sti
shl
repz
add
mov
xchg
hlt
std
sahf
mov
addr16
xor
mov
int
jae
js
mov
dec
decl
push
fucomip
xchg
cs
jbe
jbe
xor
pop
aas
mov
aas
cmp
inc
or
push
adc
push
pop
mov
dec
mov
mov
dec
mov
rorl
ret
dec
mov
push
push
shr
test
push
insl
jae
pop
and
add
mov
test
or
and
dec
xor
rorl
sub
jmp
test
ret
lahf
insl
out
push
mov
stos
pop
dec
jmp
push
aam
sbb
enter
push
lea
sub
jmp
pop
cld
xor
adcl
jl
std
inc
inc
rcrb
mov
xchg
xchg
mov
insb
out
and
pop
shr
or
lods
mov
xchg
hlt
jl
subl
push
push
adc
out
gs
push
jo
jae
pop
xor
sub
inc
sub
jns
iret
pop
sub
lods
cmp
ja
clc
and
inc
xor
stos
mov
orb
pop
sbb
mov
es
push
mov
mov
push
lret
mov
rcrl
loopne
ret
ds
leave
scas
mov
je
pushf
dec
xor
jg
mov
sarl
sahf
push
shr
bswap
jbe
cmp
push
neg
xlat
clc
xchg
shr
fcmovnu
addr16
lea
dec
inc
cmp
xchg
scas
jmp
inc
std
sbb
pushf
push
mov
push
jnp
mov
jae
negl
mov
mov
in
dec
stos
cld
data16
add
fdivs
shlb
in
icebp
fsubr
jmp
popl
ret
dec
ljmp
shl
in
roll
shll
mov
jnp
or
movsl
xor
sub
cld
aaa
iret
and
or
xlat
nop
scas
jmp
subl
loop
mov
sarb
xchg
mov
imul
push
in
insb
xchg
test
icebp
in
inc
mov
pcmpeqw
stc
xor
sahf
mov
xorb
jno
sbb
cmp
cmp
jo
mov
int3
dec
pop
inc
push
sbb
mov
clc
out
sahf
aad
sahf
mov
jb
lahf
dec
adc
xchg
jnp
cwtl
sub
dec
loope
xor
jb
divb
sti
lds
sub
in
jbe
gs
or
in
arpl
cmp
ret
stc
cmp
mov
xchg
in
icebp
push
and
xchg
enter
adc
dec
dec
or
sbb
pusha
sbb
dec
mov
push
into
dec
adc
jne
xchg
cmp
popf
jmp
aas
ds
or
outsb
push
outsl
jae
shll
mov
popa
fdivrs
sti
cmp
daa
ret
sbb
jmp
pop
imul
ljmp
mov
inc
xchg
leave
inc
sub
mov
jecxz
ljmp
mov
jae
arpl
data16
adc
jg
jae
mov
pop
fsub
dec
dec
out
and
in
pushf
adc
imul
sar
xor
rorl
xchg
pop
cmpsb
ds
rorb
xor
pushf
pop
fwait
ret
sbb
call
pop
pop
xchg
dec
mov
jle
cmp
push
cmp
push
out
insb
mov
aam
mov
mov
pop
int
mov
mov
test
mov
loope
insl
sbb
dec
into
jmp
pop
cmpb
pop
shrb
movsl
or
mov
sub
sbb
xchg
imul
scas
mov
jp
call
mov
stos
inc
push
mov
fdivrs
iret
inc
or
jbe
in
mov
xor
mov
dec
fsub
sbb
mov
adc
dec
xlat
jb
sbb
in
push
inc
insl
int3
mov
clc
sarb
mov
shrl
pop
in
cmpsb
sub
in
pop
push
mov
pop
cmp
cwtl
cmp
mov
cmpsb
sbb
sbb
clc
xchg
je
pop
jecxz
sub
stc
mov
insl
in
jmp
out
out
roll
insl
lods
inc
push
mov
nop
in
add
sub
add
adc
adc
xchg
loop
inc
scas
sub
loop
jecxz
inc
loopne
sti
and
mov
dec
cs
fists
pushf
adc
out
adc
adc
insl
cld
adc
ss
lods
mov
mov
sub
std
or
mov
sub
jle
xchg
imul
lea
lods
idivb
cmc
sbb
adc
stc
pop
pop
or
or
cmc
jne
rorl
jmp
and
sarl
das
pop
xchg
push
cmc
ds
lods
jmp
dec
mov
out
ja
xor
jecxz
jns
sbb
rolb
cmpsb
fs
push
push
in
test
jns
inc
pushf
leave
int3
inc
sbb
outsl
push
dec
and
pop
push
sbb
add
mov
push
push
je
lahf
push
mov
popa
cwtl
imul
jg,pt
out
push
rcr
jl
adc
rol
ficoms
push
in
and
push
cltd
int3
outsl
icebp
movsl
lcall
pusha
push
outsb
outsb
std
cld
and
andl
arpl
lahf
mov
xbegin
psubb
and
aam
iret
and
call
mov
cmc
jb
cmp
sbb
dec
push
ficoms
cmpsl
xor
cltd
adc
mov
push
stos
int3
push
and
lret
xor
sarl
jge
cld
jae
lock
ret
jp
pop
mov
imul
and
pop
sarl
iret
in
push
mov
stos
cmp
lahf
and
rcl
jp
test
iret
push
xchg
and
enter
lcall
aaa
pop
fcmovnbe
xor
push
adc
mov
push
cltd
outsl
sub
aas
mov
xor
int
sub
adc
in
jno
jbe
daa
nop
push
mov
ds
popa
xor
mov
mov
lea
into
jle
int
jecxz
xor
push
test
xchg
cmp
cmc
push
pop
int
inc
mov
movsl
push
pop
in
jae
cmp
xor
int3
inc
mov
sub
fidivs
sbb
jne
aas
gs
xchg
fidivrl
das
mov
popa
sub
push
xchg
xchg
cmp
push
enter
out
into
cld
jnp
ljmp
or
lods
fstps
sub
xlat
out
sbb
insb
cmp
xchg
xor
cmpl
out
push
sbb
mov
incb
mov
es
cli
loope
in
cwtl
pop
pushf
cwtl
cwtl
push
dec
xchg
leave
push
xchg
mov
loopne
insl
sti
inc
aad
push
xor
pop
mov
sbb
and
cmp
mov
mov
pop
sbb
fisttpll
adc
les
fidivrs
and
fs
mov
sbb
jecxz
stos
lock
xchg
add
in
mov
mov
inc
aaa
sti
sub
pop
js
lds
hlt
lods
push
ret
fidivs
xchg
stos
loopne
cmp
loop
rcrb
mov
ljmp
mov
aam
dec
es
mov
mov
stos
sub
xlat
push
ja
and
test
test
or
imul
jne
scas
sahf
out
lea
xor
rcrl
fsubl
std
push
lea
xchg
test
add
jbe
push
test
or
mov
pop
mov
or
inc
ret
xchg
outsl
pusha
pop
cmp
inc
xchg
cwtl
xchg
divl
enter
arpl
push
sarl
add
mov
xchg
sahf
in
sub
call
jmp
mov
lcall
mov
js
iret
sbb
push
out
fisttps
xor
gs
or
jno
into
shld
cmc
pushf
sbb
out
xchg
xchg
fsubrl
and
fiadds
dec
mov
stos
icebp
inc
add
sub
ja
imul
mov
mov
sarb
nop
add
jmp
xchg
jg
inc
aam
hlt
dec
nop
pop
jecxz
cltd
pusha
shrl
ret
pop
cmpsl
push
pop
insl
mov
inc
sahf
arpl
sbb
push
sbb
cmp
mov
mov
les
js
icebp
xchg
or
daa
call
data16
lods
dec
inc
bound
dec
dec
and
cltd
fsubp
add
mov
ja
mov
mov
fs
fidivrl
mov
setp
in
arpl
iret
jp,pt
mov
and
inc
mov
loop
cmp
dec
stos
dec
into
sbb
sbb
lods
xor
outsb
dec
mov
jmp
mov
push
icebp
jecxz
cmp
or
sub
or
fidivrs
std
add
xchg
in
das
insb
lods
fildll
int3
js
jecxz
jge
sbb
and
mov
arpl
cli
add
mov
std
pop
jl
movsb
push
push
mov
cmpsl
mov
pushf
cwtl
lahf
dec
bound
jl
pushf
adc
roll
gs
iret
adc
in
out
out
test
rcl
adcl
inc
inc
test
xchg
insl
addl
pusha
jns
and
lods
clc
test
pop
or
popf
sub
or
ss
in
pop
pop
cmp
xlat
jae
push
pop
or
jnp
ret
mov
subl
push
shlb
int3
rcrl
ljmp
add
or
movsb
addr16
inc
xchg
ret
xrelease
bnd
sbb
xlat
xchg
outsl
jne
mov
out
jbe
push
pop
ljmp
lret
test
xchg
mov
jp
cwtl
xor
int3
scas
fimuls
ret
lods
add
fistpll
ficoml
xchg
mov
cli
push
push
arpl
push
lahf
addr16
fcmovb
dec
dec
lock
sub
ja
push
jne
mov
or
out
push
and
pop
ss
repz
sar
repz
adc
jg
jecxz
cmpsl
mov
and
jae
add
bound
fucom
pop
ja
mov
inc
push
pop
leave
add
mov
icebp
adc
jb
std
call
pop
mov
dec
into
je
push
jecxz
xchg
and
cmp
push
addr16
shlb
scas
out
aaa
rol
xchg
mov
mov
stc
insb
ret
ja
cmp
xorb
popa
sub
loopne
push
xchg
adc
aas
loopne
sbb
cs
mov
pop
orb
xorl
mov
fldcw
mov
out
scas
xor
lret
xor
nop
roll
in
inc
dec
loope
pop
xor
loop
lock
mov
int3
sahf
mov
scas
scas
cmc
rorb
aam
aad
lock
in
repnz
imull
and
dec
dec
fwait
pop
dec
inc
in
es
adc
inc
add
xchg
aam
fldln2
or
or
cmp
pop
shrl
or
mov
in
sbbb
pop
inc
sbb
les
dec
scas
insb
sbb
cmp
adc
add
scas
jmp
sub
das
jnp
pop
rcrb
mov
xor
xchg
clc
pop
adc
sbb
pop
inc
and
mov
sub
xor
dec
sbb
sbb
push
lods
je
inc
pushl
cmp
call
inc
sbb
xchg
into
pcmpeqw
mov
xchg
std
sub
pop
adc
sub
loop
cmpl
mov
stos
sbb
out
pop
inc
out
sub
add
xchg
mov
out
test
dec
sbbl
movsl
mov
scas
mov
adcb
adc
notl
aaa
outsb
shlb
push
jnp
cmp
sbbb
mov
jns
pop
inc
add
dec
daa
cld
cmpsb
rcrb
sbb
int3
cmc
das
out
ficompl
xchg
sub
adc
fdivrl
cmp
and
test
and
enter
cmpb
mov
test
and
pop
add
or
lock
pop
pop
out
inc
cmp
inc
xchg
mov
jle
arpl
out
hlt
xchg
jg
mov
mov
jb
gs
mov
push
mov
loopw
ret
push
sbb
xchg
daa
loope
mull
adc
lds
jle
jae
push
mov
cmpsb
scas
pop
or
inc
push
dec
pop
push
or
loop
in
lret
adc
jmp
lcall
int3
dec
jmp
sbb
mov
mov
jo
sbb
push
dec
jle
mov
push
xchg
stos
inc
leave
mov
aam
sub
jb
es
repz
and
pop
xchg
insb
loope
insl
loopne
xor
shlb
hlt
pop
sahf
arpl
ret
inc
pop
sti
lods
ret
jmp
fwait
rcl
es
jecxz
sub
push
ja
insb
sub
insb
pushf
mov
and
scas
or
scas
and
push
inc
adc
or
into
jge
popl
adc
xchg
subb
icebp
int
inc
out
xchg
jo
sub
mov
stos
pop
add
cvtdq2ps
xor
jecxz
or
jg
jp
lods
xchg
cmp
addr16
xor
and
push
popf
aad
push
and
ja
and
pop
push
out
mov
ds
jno
mov
out
xor
jnp
cs
pop
mov
pop
mov
gs
dec
orb
mov
insl
xor
mov
inc
icebp
sbb
adc
cmp
xchg
mov
sbb
sub
mov
sbb
adc
aaa
push
mov
inc
hlt
outsl
aas
pop
arpl
sbb
sbb
or
decb
jae
testb
jb
ficoms
das
jmp
inc
lods
jp
lcall
mov
pop
sbb
adc
dec
mov
mov
cmpsb
cvttps2pi
lods
outsl
fidivrs
cmp
test
jbe
repz
adc
lds
pop
scas
jnp
aaa
and
add
ljmp
out
and
enter
adc
aas
pop
jp
pop
add
mov
lea
jno
xchg
xor
pop
mov
ljmp
ja
loope
iret
mov
cli
insb
lods
mov
jns
mov
aas
mov
in
rep
ss
mov
movsb
inc
xchg
sub
xchg
aad
call
adcb
add
and
sbb
loope
cmpsb
sbb
xchg
adc
lods
daa
push
sub
adc
sub
jmp
sub
cmpsl
iret
xchg
dec
scas
push
addr16
std
sti
inc
push
lods
mov
pop
into
scas
xor
ds
addl
jb
mov
push
gs
sbb
imul
scas
std
jle
fxch
mov
jbe
gs
leave
out
outsb
bswap
loopne
dec
pop
popa
test
fs
call
fbstp
out
outsb
xor
scas
popa
or
sub
sub
mov
mov
fsubrl
pop
js
sti
mov
outsl
and
push
push
enter
add
push
sub
aam
repnz
sbb
in
pop
inc
add
push
mov
jmp
filds
pop
rcrl
nop
xorl
test
jae
mov
cs
out
cltd
daa
sub
inc
ss
fldcw
addr16
inc
cwtl
mov
fwait
dec
aam
sub
cmp
lods
test
popf
aam
jg
adc
xor
addr16
shll
jecxz
pop
fmull
add
adc
fiadds
add
add
fdivs
mov
mov
sub
push
xchg
addr16
adc
bound
fstps
sub
add
push
jo
movsl
test
push
call
mov
pop
test
test
or
mov
sub
inc
lret
pop
inc
loope
imul
out
sub
in
repz
jno
popf
dec
ret
outsb
or
push
mov
sbb
or
bound
mov
jecxz
pop
out
push
add
cmpsl
pop
xor
out
mov
mov
jle
ret
in
jb
icebp
jle
adc
push
jb
in
cmp
or
adc
out
sbb
mov
xor
push
fadds
fucomp
inc
rolb
or
aad
lcall
test
xchg
add
pop
addr16
es
mov
outsl
add
daa
add
pop
sbb
in
ret
push
add
xlat
fs
mov
test
test
rorl
mov
jno,pt
jmp
pop
xchg
sub
insb
jle
loope
shrl
pop
fldcw
cmp
add
repnz
mov
imul
ja
test
and
dec
fdivs
mov
jno
out
insl
out
mov
dec
aaa
cmc
add
std
push
adc
cmc
js
mov
mov
push
xor
pop
cld
push
sub
pop
loop
ret
sbb
jns
add
mov
inc
cmp
jecxz
sub
stos
inc
mov
lret
cmpsl
loope
mov
fwait
xchg
mov
stos
and
andl
out
sub
lahf
mov
sahf
int3
jnp
inc
lock
or
stos
dec
sub
dec
popl
fsubr
out
into
xchg
addr16
out
ret
xchg
and
mov
mov
stos
fwait
jbe
push
and
mov
inc
js
xchg
or
insl
rcl
add
pop
out
jmp
jmp
leave
outsw
lock
push
pop
ret
enter
movsb
shlb
out
and
in
push
mov
ds
pop
out
fwait
ret
xchg
or
cs
or
xor
adc
pusha
pop
out
dec
mov
aaa
stos
add
dec
ljmp
mov
cmpsb
xor
in
scas
adc
pop
loope
stc
scas
jp
mov
ss
leave
mov
pop
iret
aaa
mov
pop
mov
or
bound
repz
icebp
hlt
scas
ljmp
push
out
in
cmpl
je
xor
ficompl
movsb
sub
xchg
das
sbb
xor
push
outsb
pop
jbe
cmp
pop
je
dec
jmp
mov
fisubrl
jp
cmp
cmp
aad
out
dec
jle
negb
sub
and
ja
icebp
mov
negl
aaa
adc
das
sbb
mov
xor
xor
lret
pusha
lds
adc
add
mov
test
aaa
lods
sbb
adc
cmp
leave
add
and
mov
push
loope
pop
in
xchg
jns
add
adc
aam
mov
repz
adc
pop
add
decb
ljmp
lahf
sub
jle
pop
in
jae
hlt
aas
mov
fisubs
xchg
fdivr
mov
inc
cmp
scas
jecxz
and
xchg
lods
test
jb
sti
rcll
insl
jne
ret
push
pusha
inc
push
popa
push
lret
cmpsl
int
adc
movsb
xchg
add
pop
mov
cwtl
sub
mov
xor
xor
inc
lret
cmp
cld
lds
mov
cld
adc
jns
pmullw
insb
mov
sub
dec
jle
xchg
xorl
ds
xchg
mov
jne
pop
cmpsb
adc
pop
imul
mov
orb
lods
jb
call
popf
fmuls
jno
xchg
test
xchg
cmp
cmp
pop
iret
xor
push
shlb
cmc
stc
mov
fstp
adc
mov
icebp
xchg
dec
and
mov
cltd
enter
int3
xlat
in
mov
pop
outsb
cltd
pop
mov
pop
mov
jno
sbbl
mov
shl
lods
push
sbb
fcoml
das
pop
push
test
mov
jb
dec
jb
sti
inc
repnz
cli
ret
fdivs
mov
dec
inc
mov
outsb
movsb
jg
mov
inc
stc
dec
iret
into
clc
iret
ret
jae
cmp
sub
mov
pop
imul
mov
xlat
fildll
and
out
fcomip
mov
mov
or
mov
inc
les
push
shll
imul
incb
push
ret
cmp
push
mov
jecxz
rorl
mov
out
les
xor
xor
mov
dec
pop
jb
addr16
repnz
fsts
fisubrs
bound
and
notb
psrlw
push
iret
and
and
cld
mov
cmp
xlat
jne
les
dec
mov
ret
in
jnp
inc
mov
scas
idivb
nop
fstpl
sar
inc
fsubs
push
test
add
iret
dec
jg
xchg
ret
loope
mov
cld
lcall
fistpl
rcrb
mov
sbb
adcl
rcrl
jno
das
daa
js
or
stos
sti
xor
push
enter
xchg
push
pushf
sub
fcoms
inc
shl
dec
addr16
xor
sbb
xor
and
call
xchg
jmp
rorb
fsubrs
cli
lret
clc
inc
and
insl
js
pushf
mov
xor
xchg
gs
inc
repz
pop
es
cwtl
pop
sbb
jp
movsb
pop
shrl
mov
lods
push
pop
inc
inc
ds
lods
shl
scas
out
jb
xchg
add
push
jl
dec
mov
or
jno
cli
jge
roll
and
and
bound
dec
jl
mov
xchg
push
aas
inc
mov
pop
push
xor
add
jno
ret
sbb
daa
shll
jno
insl
xlat
mov
or
and
jbe
outsb
xor
jp
fistpll
iret
dec
test
sahf
dec
ljmp
in
ret
add
imulb
test
mov
mov
xchg
outsl
xchg
cmp
pop
pop
lahf
mov
lahf
or
mov
xchg
inc
inc
or
mov
pop
test
dec
and
in
sub
incl
jbe
mov
mov
jg
clc
or
std
xchg
sub
xchg
imul
bnd
mov
les
dec
dec
popa
or
sub
mov
fsts
movsl
mov
fimuls
lods
and
flds
xchg
and
jp
repz
jl
mov
shlb
mov
pop
xlat
stos
sbb
xor
push
jns
xor
and
cmc
in
mov
jmp
push
scas
xchg
inc
lret
jl
mov
inc
jo
sub
jle
pusha
mov
fldl
jg
test
inc
inc
pop
and
adc
loop
mov
fs
cltd
adc
push
and
mov
mov
in
addr16
fidivrs
push
pop
jne
repz
lcall
dec
mov
sahf
jg
mov
cmpsb
mov
add
gs
and
insb
das
sub
sub
je
mov
jmp
and
loop
add
lahf
xchg
mov
int
xchg
lret
push
jb
xchg
cmp
adc
mov
sbb
lcall
enter
stos
xlat
mov
mov
push
adc
xchg
enter
lods
sahf
xlat
testb
mov
and
sbb
or
mov
fldt
orb
adc
in
dec
pop
jecxz
mov
cmpsl
jge
push
cld
mov
mov
int3
dec
addb
xor
xor
sbb
and
fisttpll
push
jbe
lret
add
lea
cmp
or
aad
cs
fiadds
aaa
and
inc
ljmp
xchg
nop
add
iret
pop
aaa
jbe
mov
xchg
mov
jecxz
mov
xchg
sbb
dec
ds
aaa
cmpsl
adc
out
test
mov
jp
int3
rol
push
lds
dec
jl
or
leave
inc
and
xor
pop
movsl
sub
mov
icebp
cmpsl
sbb
inc
or
push
mov
out
stc
mov
push
mov
popa
pop
push
in
stc
cmp
dec
dec
scas
aaa
xchg
push
je
sbb
lcall
ret
hlt
mov
xchg
jnp
push
hlt
adc
lea
jb
dec
push
and
mov
test
imul
les
gs
inc
hlt
add
mov
outsb
sbb
inc
enter
imul
cmp
mov
repz
xor
dec
fcoml
push
cmc
lods
out
aas
xlat
rorl
inc
mov
mov
jl
jae
nop
cli
push
mov
cwtl
jae
fimull
dec
outsl
cmp
fcmovbe
sub
xor
push
ja
and
test
xchg
sub
pushf
inc
inc
call
int
cmc
sub
enter
addr16
and
int
dec
les
dec
xor
mov
mov
push
out
pusha
dec
jne
dec
pop
sub
pop
push
mov
insl
ja
add
sub
lods
mov
test
test
mov
std
mov
add
repz
inc
mov
faddp
inc
out
cs
xor
bound
cs
mov
push
sub
push
xchg
and
xchg
insb
add
popa
lds
and
pop
imul
pop
cld
sub
out
adc
mov
aas
icebp
call
mov
jmp
dec
fcmovnbe
mov
jp
ficomps
or
and
jle
iret
pand
shr
add
xlat
fcoml
push
test
movsb
pushf
lds
mov
icebp
lcall
xor
loop
cltd
adc
or
std
xchg
testb
rorl
mov
adc
leave
push
pop
out
xor
push
loopne
push
cmp
popa
in
test
shrb
jmp
popf
pop
ds
fisttpl
pop
and
or
mov
std
mov
mov
push
or
add
addr16
dec
mov
dec
aad
repz
pop
dec
mov
popf
test
in
sub
repz
adc
movsl
lret
dec
xlat
cmpsl
sbb
loop
popf
and
mov
sub
fildll
out
cmpsl
sbb
push
pop
and
lahf
sti
mov
mov
rcrl
movsl
mov
dec
jp
xor
sbbb
push
adc
scas
cld
cmc
mov
pusha
fnstenv
mov
bnd
shlb
fists
mov
jae
jmp
mov
cwtl
divl
roll
xchg
mov
ja
fdivrl
pop
dec
out
mov
out
iret
adc
test
sbb
cs
xchg
fistl
in
lods
xor
cltd
push
ja
inc
xchg
lds
cwtl
cmp
jp
adc
movsl
mov
inc
outsb
or
mov
push
add
xlat
loope
arpl
test
or
xchg
xor
ljmp
ret
xor
jno
fildll
gs
fdivrp
inc
fs
cwtl
imul
jae
inc
push
sub
mov
inc
ret
loope
inc
mov
test
mov
aas
ficomps
add
push
es
shrb
shrb
sahf
shll
inc
std
lock
int3
pop
std
push
inc
mov
sub
popa
mov
psubsw
vmovapd
les
pop
or
sar
mov
xor
inc
push
cmp
adc
mov
dec
repnz
push
test
or
js
sahf
notl
cmpsb
or
shl
fs
sahf
lock
int3
jnp
xor
aas
sbb
fbstp
jno
adc
xor
mov
imul
jno
sbb
push
xchg
pusha
push
lret
jl
add
shlb
cld
xchg
jae
in
xor
push
mov
cmp
dec
push
and
adcb
jle
iret
lods
negl
enter
adc
push
loope,pt
xchg
leave
ret
inc
stc
jle
xchg
ret
sub
mov
push
mov
xchg
dec
cmp
push
xchg
dec
rcrb
jl
ljmp
pop
fnstenv
test
dec
pusha
sahf
mov
dec
imul
ja
andl
sbb
push
sbb
clc
sbb
inc
in
hlt
mull
xchg
or
data16
jl
lret
cmpsl
push
jno
mov
iret
xor
leave
add
cld
repnz
add
ja
lahf
push
fcomps
popf
enter
sbbb
aas
outsl
frstor
test
jo
inc
pcmpeqb
repz
mov
lahf
fiaddl
stc
and
adc
addb
sub
push
loop
xorl
cli
adc
add
sub
cmp
sbbl
scas
pusha
outsl
pop
out
pop
add
push
xor
push
call
stos
jns
in
push
mov
xchg
mov
out
jl
inc
cli
movsb
add
pop
cmp
adc
out
jmp
mov
ret
push
sbb
in
daa
or
fidivrs
mov
push
in
or
ljmp
adc
ret
jle
sbb
xor
dec
pop
sbb
jecxz
test
jbe
addr16
cld
and
inc
pop
rorl
loopne
push
push
aaa
and
aaa
loop
mov
mov
ja
cmp
lcall
mov
lock
inc
mov
jge
loope
pop
dec
xor
xor
pop
xchg
rorl
enter
inc
jge
fcmovbe
pop
outsb
push
repz
add
sti
mov
mov
cli
ljmp
push
jae
xchg
mov
push
insl
add
cwtl
popa
pop
xchg
jo
add
loopne
cmp
sbb
xchg
fs
mov
int
iret
pop
popa
fbld
cmp
and
lret
test
cmpsl
or
mov
jle
ljmp
imul
nop
jns
dec
sub
xchg
sarl
jo
dec
adc
jmp
mov
leave
inc
dec
add
nop
stc
mov
mov
push
cmpl
or
xchg
jg
sti
fidivrs
and
inc
loop
hlt
cmpsl
xor
mov
jecxz
jnp
sar
push
insb
inc
jb
out
cld
outsl
out
mov
lods
aad
das
ds
iret
pop
xor
jp
mov
jge
and
lods
bound
push
and
push
aas
pop
orb
lahf
gs
adc
sbb
jo
nop
aad
test
add
pop
jl
cmpsb
push
lods
fs
lds
xor
cmc
jp
xor
sub
xchg
dec
push
xor
pop
inc
push
xchg
test
stc
scas
movsb
pop
sub
dec
int
sub
dec
push
mov
int3
mov
cmp
fnstsw
cmp
addb
jge
cli
jns
mov
out
lret
mov
std
inc
lahf
inc
mov
pusha
shr
or
test
int3
sahf
xchg
les
in
cmp
xchg
push
cmp
mov
les
aaa
leave
add
inc
cmpsb
lea
cmpsb
xchg
jg
incb
fsts
ret
push
stc
mov
call
lret
mov
daa
adc
adc
jmp
das
pop
push
pop
jbe
adc
add
in
inc
les
xor
sub
inc
inc
dec
sbbb
xor
mov
js
inc
rolb
push
out
cmpsb
fisttpll
xchg
test
push
jo
daa
sarl
mov
fwait
lret
or
jne
push
mov
mov
jae
int
mov
xor
lods
cmc
sub
cmp
xchg
dec
xorl
jnp
clc
sbb
jne
gs
negl
jp
fnstcw
mov
cmp
enter
jmp
out
inc
pop
shrb
daa
popa
movl
cmp
dec
mov
mov
ret
push
daa
cmp
pusha
push
xor
je
lods
lret
or
pop
shll
out
cmp
ljmp
mov
dec
add
out
mov
das
dec
outsl
dec
sarl
scas
jl
imul
xchg
andb
mov
dec
mov
pop
pop
insb
outsb
jne
enter
test
ficoml
dec
jno
loopne
cld
fnsave
adc
cmp
dec
mov
ret
inc
in
sbb
xchg
inc
adc
mov
movsb
mov
pop
dec
add
mov
inc
or
aaa
in
pop
ljmp
loop
adc
out
ja
xor
sti
sti
jle
push
mov
sbb
xorb
or
enter
dec
dec
cmpl
xor
mov
sti
nop
add
mov
adc
loope
cmp
je
cmp
stc
cmc
inc
roll
sahf
popa
pop
push
mov
lret
pop
loopne
inc
dec
pop
adc
mov
lods
xchg
sbb
mov
push
je
jmp
sub
shlb
push
mov
int
mov
pusha
sub
mov
out
xor
push
dec
outsl
out
xchg
comiss
or
pop
aam
mov
pop
mov
aad
sbb
mov
push
dec
xor
push
push
shll
push
jle
sahf
jnp
stos
lea
mov
inc
out
cld
adc
mov
lds
divl
and
dec
inc
dec
mov
mov
scas
out
xchg
fs
push
insb
lret
sub
add
add
or
jle
stos
rolb
scas
inc
cmp
pusha
rcrb
repz
mov
and
imul
and
stos
mov
mov
popa
pop
out
sbb
add
fistpl
nop
mulb
and
fildll
jg
xor
imul
and
lea
into
dec
dec
je
mov
inc
push
outsb
notl
push
sysenter
lcall
roll
mov
jle
inc
cmpsb
inc
mov
fwait
je
xor
lods
cmp
and
pop
xor
fisubl
xor
aas
adc
rolb
sbb
orl
cmpsl
orb
addr16
jns
ret
dec
pop
fsubrp
mov
cmp
and
es
bound
push
ja
aam
pop
dec
pop
scas
addr16
inc
push
xchg
adc
je
xor
es
rcll
pop
imul
rcll
aam
and
push
into
mov
and
xchg
push
iret
movsb
ss
sbb
dec
loop
data16
movntq
out
in
jmp
mov
iret
into
rcll
push
fistpll
mov
lcall
loopne
or
or
ja
xchg
rclb
sbb
dec
scas
inc
jo
pop
or
jmp
lock
and
into
inc
mov
fsubrp
sub
ljmp
push
add
push
or
pop
mov
aas
mov
outsb
sub
push
hlt
sub
mov
repz
cmpsb
shrl
jg
pop
mov
mov
inc
lea
sahf
pop
xor
jecxz
inc
jbe
mov
lret
add
or
in
cmc
jg
stos
int3
pop
sub
ret
loop
jp
add
dec
push
mov
idivb
jns
mov
dec
dec
testl
add
std
inc
pop
mov
mov
filds
je
loope
loopne
jg
jp
xchg
push
cltd
mov
lods
sbb
dec
or
adc
test
jl
jno
sbb
pop
in
popf
cltd
punpckhdq
mov
push
test
xor
xchg
inc
inc
push
lock
pop
movsl
lret
mov
aad
sbb
repz
xchg
into
xchg
cmp
in
and
clc
cmp
push
mov
and
mov
mov
mov
sbb
cltd
repz
ds
lock
xchg
push
and
frstor
out
mov
fists
inc
xchg
and
sbb
add
or
dec
hlt
push
pop
mov
sahf
add
and
out
xchg
int3
mov
jns
aad
stos
dec
daa
mov
test
lods
aad
pop
sbb
popa
test
daa
xchg
adc
repz
mov
or
push
lret
jno
pop
repz
js
or
and
cmp
push
push
shrl
mov
rcr
nop
leave
hlt
dec
dec
imul
mov
in
mov
sbb
jp
jne
mov
xchg
jbe
fldt
xchg
cmpsb
mov
push
pushf
xchg
aaa
inc
cmp
jb
pop
test
adc
ljmp
outsl
jae
xchg
sub
test
xor
mov
xchg
movb
lock
xor
test
mov
aam
filds
and
mov
jb
dec
xchg
push
das
pop
add
fnsave
cs
mov
push
clc
test
loop
mov
and
in
leave
lds
lock
shlb
ss
and
or
stos
add
ret
adc
scas
cmp
mov
or
outsl
sbb
inc
cmp
cmp
jns
fs
lea
test
sub
iret
outsl
dec
adc
aaa
clc
xchg
mov
mov
cmp
xor
in
sub
ljmp
mov
sti
loop
push
add
fsubrl
cmpsl
cltd
scas
dec
sub
or
rclb
sbb
clc
pusha
popl
cmp
pusha
or
ds
ja
leave
stc
addr16
jle
imul
popf
mov
mov
repnz
push
sub
aas
add
pushf
inc
cs
dec
sbb
and
ret
xor
sub
add
cmpsl
cmpsb
ljmp
fs
push
xor
inc
xor
sub
xchg
imul
add
pop
jle
sti
icebp
bound
movsb
mov
xor
fwait
shll
fmull
outsb
adc
push
sub
repz
mov
mov
sbb
loopne
pop
cmpb
pop
and
jo
sahf
popa
stc
pop
std
sub
daa
mov
pop
call
push
bound
sbb
lret
lods
lahf
jb
dec
cmp
push
push
push
push
gs
insl
popf
js
dec
mov
int
push
mov
cmp
dec
mov
das
adc
cmp
mov
xchg
lea
cs
xor
mulb
inc
das
int
js
cwtl
mov
cmp
adc
adc
pop
sub
mov
push
ja
jns
jnp
test
in
fwait
stc
loope
cmc
jle
mov
jge
push
dec
mov
jecxz
into
sub
cltd
push
mov
mov
ss
add
mov
inc
cmp
mov
repnz
pop
mov
fnstcw
sub
push
and
pop
aam
add
pop
xor
ds
imul
int3
movsb
nop
sbb
mov
mull
push
pop
scas
in
xchg
stc
js
pop
push
jno
shll
inc
dec
imul
sub
cltd
push
sar
hlt
push
sbb
sbb
iret
push
mov
in
jo
pop
adc
inc
cwtl
add
pop
jb
arpl
call
push
out
daa
xchg
sub
push
imul
lret
mov
push
fs
push
cwtl
push
or
mov
subl
cmp
leave
mov
xor
pop
sahf
mov
push
mov
push
dec
rol
adc
mov
jns
or
sub
mov
push
pop
addb
rcr
xor
stc
out
xor
hlt
and
call
lea
in
shrl
mov
lahf
pop
xor
cmpl
mov
popa
aaa
loope
xor
xlat
mov
push
and
adc
add
mov
inc
icebp
test
outsl
dec
mov
mov
ss
cmp
inc
testl
lcall
shlb
sbb
or
arpl
idivb
jae
or
mov
popa
std
and
adc
and
rorl
push
adc
test
loope
add
mov
aad
repnz
sbb
outsb
xor
movsl
dec
popa
and
clc
aam
enter
out
xchg
lods
add
sbb
lcall
push
push
cmc
adc
std
add
jb
out
add
fs
cmpsl
push
insb
jmp
repz
pop
jle
subl
inc
jo
cmp
mov
cmp
cmp
adc
add
and
inc
and
xor
inc
sbb
decl
test
shll
xor
call
dec
fsubs
inc
inc
xor
add
mov
ja
sub
mov
test
out
jne
arpl
dec
jmp
fwait
mov
push
icebp
hlt
xor
stc
mov
call
push
mov
fnstcw
sub
andb
test
jmp
sub
shrl
sbb
arpl
mov
push
popf
js
fsubrl
push
cmpb
and
testb
pop
xchg
stc
inc
cmpb
pop
lar
mov
shlb
jge
in
sub
lock
add
mov
sub
and
movsb
fdivs
divl
push
mov
inc
mov
mov
and
dec
data16
aad
in
cwtl
mov
mov
repnz
outsb
sahf
sbb
dec
sbb
push
jg
divb
mov
mov
ljmp
dec
dec
jge
je
mov
aaa
loope
jnp
or
mov
mov
popf
and
sbb
movsl
dec
dec
xchg
pop
repz
std
imul
iret
xchg
cli
inc
incl
push
enter
mov
pop
ljmp
sbbb
xor
inc
push
and
push
push
xor
mov
inc
fwait
xchg
pop
jne
add
push
sti
fcoml
lock
push
jle
mov
ss
xor
sbb
addb
mov
dec
pop
lea
mov
dec
add
rcll
stos
jle
jo
push
stos
scas
or
aam
inc
js,pn
mov
addr16
ret
sbbb
fisubrs
cld
js
fistps
orb
adc
mov
sarl
and
sub
movsl
mov
lock
jecxz
push
das
mov
adc
out
xchg
or
sbb
sub
sti
xchg
push
and
mov
jns
sbb
xchg
cwtl
ret
stos
jae
fldenv
add
add
cld
xchg
inc
daa
daa
hlt
mov
add
fimuls
push
iret
lahf
in
xchg
sbb
stc
ljmp
or
fucom
into
test
hlt
adc
cmp
and
sbb
add
lds
jl
lods
and
aam
inc
mov
pop
or
ficomps
adc
push
iret
mov
andl
xchg
inc
dec
add
adc
stos
daa
stos
xlat
or
cltd
xchg
mov
sbb
inc
mov
orl
in
adc
dec
pop
xor
stos
or
stos
mov
dec
ss
add
je
std
sbb
call
fstpt
sbb
cmp
inc
mov
pop
int
xchg
pop
jg
out
cmp
imull
lds
icebp
test
push
scas
or
jmp
lea
lods
sub
aaa
or
xlat
xchg
mov
ljmp
mov
stos
push
cmp
shlb
cld
lar
lahf
mov
adc
inc
js
imul
or
sbb
aaa
clc
xchg
cmpsb
bound
mov
pusha
mov
shll
mov
xor
stos
mov
in
clts
ljmp
dec
xchg
push
ds
xor
jg
loope
shr
pop
fisubl
or
push
dec
or
mov
clc
popf
lods
mov
sbb
jl
push
jl
incb
arpl
mov
aam
push
stos
pop
aaa
popa
push
jp
lock
or
fcompl
shrl
lds
jbe
lock
mov
or
jecxz
out
lods
and
push
mov
push
out
adc
cmp
scas
sbb
xor
cmc
dec
xor
mov
or
adc
and
cmp
push
out
add
push
push
fsubs
cmp
nop
dec
mov
scas
xchg
adc
pop
jmp
jl
push
pop
cmp
jnp
lods
sub
into
out
jo
xchg
dec
pop
sub
add
stos
in
sub
enter
mov
or
or
punpcklwd
jne
jo
xor
mov
leave
rorb
xor
ficompl
xlat
les
das
xchg
rcl
xchg
sbb
fs
fdivrl
dec
call
pop
lds
fstpl
jns
xchg
and
daa
xchg
scas
jo
push
xchg
mov
jp
mov
cmp
dec
xchg
in
lods
into
aas
cld
aaa
imul
xchg
scas
mov
cld
lods
sahf
mov
movsb
jmp
mov
push
sbb
sub
push
enter
ret
adc
out
mov
push
insb
mov
inc
xor
enter
aad
push
mov
push
addr16
out
rclb
jnp
ja
pusha
add
sbb
insl
cmpl
xor
es
cmp
in
ret
je
dec
mov
decl
enter
sbb
mov
lret
aas
inc
into
cmp
mov
or
clc
mov
cld
jae
addl
cmp
movb
dec
mul
dec
cmp
sbb
xchg
imulb
mov
dec
das
lods
aad
push
sbb
loope
push
cmp
aaa
call
cli
lea
push
xchg
sbb
fsubp
add
xlat
push
jb
jnp
push
add
and
dec
insl
sub
or
cltd
fdivl
adc
jmp
jno
or
mov
xorl
cmp
sti
ror
pop
lret
push
aam
pop
adc
or
xchg
cmp
mov
outsb
fsubs
lcall
in
jp
lahf
sub
pushf
mov
adc
pop
imul
testl
mov
dec
jge
pop
cld
xor
sbb
push
sbb
push
imull
or
add
stos
or
mov
andb
lods
daa
jnp
test
fbstp
outsl
xchg
add
sub
les
mov
cmc
cli
jmp
mov
inc
fimull
faddl
repnz
testb
rolb
mov
mov
add
inc
aam
mov
add
loop
inc
jae
aad
pop
sbb
aas
std
push
adc
jg
in
adc
subb
pop
dec
cmp
sub
nop
fsubl
call
insl
sbb
scas
ret
xor
xor
test
xchg
insb
loopne
and
adc
fdivrs
lock
cmp
out
hlt
dec
sbb
and
pop
cmpsl
arpl
fld
add
aaa
cltd
inc
into
test
das
jns
pop
clc
jb
sub
stos
stos
sahf
xchg
push
mov
aas
mov
fldl2e
movsb
dec
dec
inc
mov
mov
pusha
nop
dec
sub
inc
xlat
data16
add
pop
sub
fwait
loope
mov
scas
popa
pop
sbbl
lcall
push
push
lcall
stos
loope
sub
cmp
sbb
nop
stc
out
js
ljmp
int
out
xchg
sahf
fildll
push
xchg
das
mov
xlat
mov
mov
call
inc
gs
ror
enter
mov
pop
andl
xor
clc
pop
cmpsb
jb
outsl
imul
add
mov
cmp
xor
cld
or
sti
test
lock
outsl
and
daa
jno
std
fwait
or
fisttpl
xor
mov
sbb
or
frstor
rol
mov
xchg
jns
ss
outsl
ja
push
repz
xchg
sahf
xchg
jp
sub
mov
inc
sbb
data16
movsb
test
push
mov
xor
mov
cmp
decl
daa
femms
insl
lods
pushf
ficompl
dec
popl
mov
iret
int3
sahf
test
inc
sub
pop
rorl
lahf
rclb
int
push
test
lods
and
dec
ficoms
addr16
repz
xor
cwtl
jnp
push
mov
rorb
enter
data16
cmp
icebp
jl
dec
lds
jmp
mov
popa
rcrb
mov
push
cmp
add
add
mov
pushf
arpl
addl
inc
xchg
and
dec
out
cwtl
cld
imul
mov
imul
rolb
inc
jnp
push
mov
push
xchg
ret
imul
je
mov
pop
mov
cmp
pop
jne
and
sub
dec
xor
jns
or
mov
lcall
inc
and
and
ds
ss
data16
dec
rorb
mov
rolb
inc
sar
inc
call
fildl
shrl
jecxz
sti
out
dec
push
lds
cmp
rol
or
and
fld
mov
inc
add
lcall
mov
cli
lret
mov
pusha
bnd
jle
xchg
adc
and
enter
push
add
mov
pushf
je
arpl
adc
push
sti
inc
ficoml
and
fistps
mulb
dec
push
jl
and
data16
cmpsl
aam
jnp
nop
jne
aas
inc
mov
mov
push
dec
pusha
jmp
out
iret
mov
mov
or
add
push
and
test
add
or
sbb
xor
cmpsl
sbb
inc
adc
jo
sub
mov
push
aaa
mov
inc
xchg
pop
xor
sbb
fwait
test
aaa
and
loopne
or
or
inc
push
cmp
mov
es
mov
fstpt
int
les
pmulhw
stos
adc
mov
imul
dec
mov
or
mov
pop
roll
add
lcall
sub
jp
sarb
cmp
cmp
clc
lods
or
loope
adc
adc
clc
fisttps
xchg
out
mov
jmp
jge
xchg
call
aam
push
mov
xor
adc
ja
insl
shlb
dec
xchg
mov
inc
jmp
fcmovnb
sbb
movsl
dec
mov
inc
inc
xchg
push
pusha
repnz
push
pop
xchg
mov
add
and
into
in
ret
mov
addr16
repnz
in
vmovupd
loope
push
adc
cmp
ss
sub
sbb
sbb
cmp
dec
push
mov
mov
xchg
push
seta
dec
sub
stos
xor
subb
ret
mov
mov
pop
out
clc
adc
lods
lods
bound
xor
aaa
test
add
mov
xchg
add
pop
adc
rorl
int
pop
loope
dec
loope
mov
fwait
dec
xchg
dec
pop
or
pop
jae
int3
test
sbb
inc
pop
jb
outsl
mov
test
pop
iret
je
push
dec
xor
adc
jp
and
in
push
add
stos
pop
test
arpl
mov
jne
loope
xchg
lahf
daa
push
hlt
in
mov
sub
push
ficoml
insl
shrb
test
add
popa
mov
and
insb
xchg
movsb
dec
add
pop
ret
jmp
out
pushf
test
xchg
aas
scas
sbb
push
js
aad
rclb
mov
dec
icebp
scas
ret
clc
sbb
inc
adc
sahf
jae
adc
xchg
xor
lock
pcmpeqb
mov
mov
call
push
mov
push
andl
jg,pt
add
ljmp
out
push
cmp
inc
inc
aaa
push
add
cltd
lea
ficoms
jns
xchg
xchg
jge
or
aad
std
scas
imul
xor
cwtl
sub
sbb
negl
mov
push
lea
aaa
or
pop
stc
xchg
je
repz
lea
rcll
mov
jg
mov
fbld
mov
push
fucomp
ss
clc
dec
lcall
fstl
xchg
sbb
test
inc
push
repz
popf
and
sbb
sub
push
lret
iret
mov
push
repnz
cmp
and
dec
xor
cmpsb
or
addb
scas
jg
mov
push
and
push
gs
sbb
mov
jmp
add
dec
push
xor
or
fsts
lcall
dec
jo
hlt
cld
icebp
test
fisubl
lret
lret
xchg
jae
lods
in
pop
sub
insl
shll
mov
insl
and
or
fcomip
xor
and
sub
fildll
add
xchg
pop
outsb
mov
nop
jns
add
or
js
data16
movsb
adc
xchg
dec
xchg
pusha
dec
lret
es
les
jmp
insb
mov
xchg
lods
mov
pop
mov
push
dec
inc
jp
pop
adc
fbld
outsb
adc
movsl
xchg
aaa
xlat
and
imul
movsb
jle
sbb
mov
stos
adc
test
add
decb
rdpmc
fnsave
dec
mov
aas
sbb
add
stos
mov
leave
add
pop
cs
popa
push
pushf
pop
adc
adc
sahf
cmp
aad
add
fcompl
mov
shll
mov
vaddss
adc
sbb
mov
dec
bts
push
inc
adc
es
lods
adc
ss
jle
jmp
cltd
push
push
pop
add
in
sub
sub
jnp
lods
mov
iret
loope
pop
shll
js
adc
bswap
and
aaa
hlt
cld
les
roll
aad
movsb
ret
mov
loopne
dec
inc
xor
lds
sub
rorl
or
xchg
int3
loopne
mov
sti
sbb
out
loop
fidivs
cmp
call
and
scas
cmp
xor
ret
sbb
mov
mov
xor
notb
in
lret
xor
jg
int
and
sbb
inc
sbb
xor
xor
stc
jns,pn
add
and
pop
xchg
movsb
mov
mov
iret
push
sbb
xor
leave
cmp
imul
add
nop
hlt
subb
call
push
aaa
pushf
into
pop
cmp
add
add
jne
test
test
mov
jl
daa
pushf
add
pop
xchg
mov
and
rcrb
shrl
push
add
or
ja
fs
ljmp
or
arpl
enter
jo
movsl
sub
jle
mov
fdivrs
adc
jbe
or
into
mov
ror
hlt
cld
mov
pop
or
in
ljmp
divl
lods
lods
lods
jbe
int
jge
mov
xlat
fsubrl
and
movsl
sbb
jb
jmp
xchg
mov
or
loop
sub
pop
push
adc
rcll
lcall
sub
sbb
xchg
mov
cmpsl
xchg
mov
leave
or
xor
lods
je
aam
sar
sub
dec
cs
xor
cmp
pushf
xorl
mov
in
fwait
jo
fisubrl
xchg
inc
mov
in
lcall
jo
push
adc
mov
adc
push
push
pusha
jmp
lods
inc
popf
push
mov
or
mov
ret
fnsave
sub
nop
fwait
test
lds
in
xchg
jno
push
dec
shrb
into
shll
cmp
aas
cmp
popa
loop,pn
fdivrl
ss
clc
jo
int
repz
dec
jnp
pop
nop
pop
gs
ficoml
push
jmp
movb
daa
jns
push
das
fs
pop
and
rcrb
imul
mov
fnstcw
pusha
ret
nop
mov
in
cli
fbld
out
in
or
in
insb
sub
fnstenv
mov
jmp
mov
sub
stos
pusha
dec
sub
push
sti
cwtl
test
pop
mov
jmp
xor
movsl
inc
inc
popa
pop
ret
pop
dec
push
shll
jne
in
xchg
sub
leave
pop
rcll
jmp
push
mov
aaa
inc
and
inc
or
in
inc
jnp
cmp
fidivrs
sbb
and
inc
aam
fimuls
clc
fwait
pop
je
pop
sahf
icebp
cli
jnp
push
mov
push
sbb
xchg
adc
fdivs
xchg
push
test
test
xor
pop
nop
js
outsb
ret
shrl
mov
mov
insl
xchg
push
push
and
xchg
mov
add
adc
je
jbe
or
cmp
mov
addr16
notb
shll
cmpsl
pop
cmp
mov
imul
bound
rorl
jno
int3
cmpsb
cmp
adc
pop
lea
and
leave
imul
outsb
and
and
in
jb
bound
jae
sub
insl
pop
div
inc
pop
shlb
fmul
dec
or
es
mov
xchg
mov
dec
mov
inc
mov
mov
dec
xchg
dec
mov
cld
sarb
je
stos
jle
dec
lods
mov
push
jp
mov
mov
jge
lods
shr
ja
pop
or
sahf
pusha
jno
lods
dec
mov
dec
push
jl
mov
mov
sbb
hlt
scas
xchg
pushl
inc
and
jns
aam
jo
xchg
scas
leave
jp
in
in
movsl
mov
mov
nop/reserved
insl
pusha
lret
xchg
stc
dec
dec
jg
push
cwtl
jle
int
ja
dec
loopne
movsb
adc
fs
subl
or
pop
ret
fildll
jle
pop
adc
mov
push
mov
inc
mov
push
imul
dec
push
adc
sbb
lds
lret
jmp
xor
imul
imul
lea
dec
adc
stc
inc
pop
lods
outsl
mov
inc
mov
iret
cmp
mov
and
sbb
cmp
aas
and
repnz
sbb
jge
sarb
xchg
les
xchg
xchg
cmc
or
add
rcll
jbe
sbb
xchg
cmpsl
xor
pop
inc
adc
insl
sub
leave
rcrl
ret
mov
pop
scas
out
in
mov
cld
sbb
fwait
sbb
cltd
push
cli
fnstcw
mov
inc
leave
aam
lea
sub
repz
dec
sbb
inc
push
gs
mov
jno
pop
aaa
jl
nop
xor
data16
scas
pop
lahf
jmp
pop
push
or
sub
mov
fsubs
pop
dec
lret
lret
lods
hlt
or
or
sub
xor
cmpsl
or
lods
stos
and
dec
stos
flds
les
bound
fsubl
cli
push
int3
inc
mov
pop
dec
pushl
notl
mov
pop
sub
mov
adc
cmp
adc
data16
xchg
jno
clc
inc
sub
std
std
hlt
int3
cmp
jae
stos
ret
cwtl
popa
inc
sar
and
jns
cmp
mov
adc
mov
enter
jo
sbb
fcom
leave
inc
xor
lret
lock
ljmp
cli
std
cmp
jne
imul
jp
aam
fwait
mov
xor
ljmp
jnp
lahf
adc
cmp
push
inc
int3
dec
inc
xor
jmp
xchg
icebp
fadds
pop
cltd
leave
ss
in
cli
inc
xchg
hlt
mov
add
push
outsb
insb
dec
cmp
push
filds
adc
loopne
or
mov
imul
lea
pop
push
arpl
sbb
add
jp
js
addr16
pop
push
in
pcmpeqd
std
es
test
in
std
xor
mov
pop
and
xchg
sti
xchg
stos
js
jmp
cmpsl
push
lahf
pop
pop
and
xor
lea
push
cld
jl
ja
sub
int3
cmp
inc
adc
je
mov
je
xchg
aam
int3
jne
outsb
pop
popa
cld
out
xchg
cld
movsb
xor
adc
insl
mov
repz
push
pop
rolb
fiaddl
rorb
ret
adc
and
cmp
push
xor
pop
adc
frstor
cmp
add
pop
dec
jne
xchg
mov
bound
ss
xor
js
lock
add
sub
roll
push
scas
std
mov
das
jle
mov
ds
jl
mov
sbb
aaa
mov
sub
jb
and
mov
cli
dec
jecxz
mov
jmp
jnp
popf
stc
and
js
sarl
movsl
in
ljmp
xchg
jg
sti
sub
shrb
sbb
xor
notb
idivb
imul
lock
repnz
jle
mov
dec
mov
test
pop
icebp
sub
sti
lock
sbb
mov
xchg
mov
pop
loop
lods
cmpsb
out
adc
mov
or
mov
incb
mov
xchg
lods
lods
insb
out
sbb
push
dec
daa
cmp
push
sarl
adc
dec
xchg
cwtl
test
or
and
fdivl
iret
ljmp
sbb
push
push
mov
mov
push
sub
lock
shll
imul
fists
aaa
icebp
lcall
subl
in
cli
sub
repz
std
inc
outsb
inc
pop
outsb
sub
mov
push
jbe
into
adc
fcmovb
and
mov
mov
rcrl
dec
mov
sub
or
inc
and
mov
ficoml
dec
cmp
xor
pop
xchg
lahf
cmp
inc
or
nop
ret
test
dec
pushf
dec
add
scas
mov
aad
inc
cmp
je
fcoms
xor
cltd
aam
jge
js
push
push
jmp
cmp
sbb
pop
shlb
mov
and
xchg
and
test
pop
sbb
sbb
js
lret
cli
or
adc
leave
insl
push
jmp
adc
lods
sbb
or
outsb
adc
in
lock
sbb
lcall
loopne
shll
test
fstl
mov
pop
je
scas
insl
mov
clc
shr
xor
xchg
cmp
mov
test
sarb
mov
inc
ret
pop
add
or
addr16
mov
add
lods
xchg
mov
mov
cs
add
andb
movsb
das
adc
cmpsl
dec
xchg
adc
lods
add
adc
mov
mov
call
lcall
icebp
test
adc
loopne
mov
pop
pop
cld
and
int3
fsub
cmp
xchg
cmp
push
push
imul
cmp
ja
xorb
cmp
xchg
push
sub
pop
lret
test
cmpl
mov
lret
sub
sbb
cmp
jmp
xchg
xchg
and
dec
bound
sti
jb
sub
lcall
les
adc
jecxz
int3
shrb
mov
dec
rclb
sarb
js
xchg
or
out
add
sarb
stc
iret
test
push
stc
out
inc
and
adcb
insl
in
inc
movb
pop
cmpsb
jno
call
sbb
jne
in
addr16
push
jno
sahf
adc
push
and
jl
push
pop
outsb
pushf
sbb
jo
xchg
incl
dec
js
cmc
cmc
in
test
mov
jne
sti
rcl
or
fwait
adc
push
fsubrl
cld
cmp
jnp
scas
xor
inc
and
push
xor
js
inc
fmul
xor
cwtl
dec
add
jge
idivl
sar
jmp
xchg
sub
mov
or
test
cmc
and
enter
sub
addr16
push
inc
scas
sahf
push
mov
or
stos
int
add
out
or
dec
mull
fadds
sbb
push
jns
sub
mov
movsl
mov
sbb
cmpsb
arpl
and
xchg
loope
dec
xchg
movsb
imul
out
mov
cltd
icebp
jge
sub
jmp
mov
pop
xchg
pop
loop
sahf
jp,pt
stos
int
push
dec
leave
inc
pusha
mov
cltd
out
adc
push
aad
jg
mov
mov
iret
add
cld
jns
pop
loope
push
outsb
inc
dec
pop
cld
add
push
dec
or
divl
dec
arpl
cmp
sarl
in
or
pop
aaa
cli
dec
mov
fcmovbe
out
cmpsb
outsb
push
and
jp
mov
and
xchg
and
pop
popf
into
repz
inc
out
int3
in
or
jno
mov
bound
cmc
call
loopne
pop
mov
xchg
jbe
jmp
ljmp
shlb
sbb
repz
inc
iret
test
and
mov
fs
add
shlb
cmp
in
les
call
mov
xchg
out
adc
subl
pop
rol
sbb
rorl
ret
push
js
imul
xchg
xor
aaa
push
add
or
xchg
cld
lret
mov
push
fistpll
mov
mov
movsl
and
or
add
and
enter
adc
gs
add
clc
cld
es
jo
in
inc
pop
xor
adc
mov
inc
inc
ja
sub
icebp
out
add
and
fistpll
sbbb
mov
out
cmp
mov
int
std
mov
imul
pushf
test
xor
test
shlb
adc
and
loop
lret
mov
imul
cmp
pushf
shrl
xchg
out
pusha
pop
test
xor
aas
xlat
push
push
hlt
fwait
leave
insb
ret
call
in
jg
mov
into
mov
ret
and
sarb
pop
movsb
rcll
mov
inc
inc
sahf
fwait
stc
mov
movsl
pushf
sub
inc
clc
sbb
xchg
push
les
sub
add
jl
in
push
and
mov
add
push
cmpb
xchg
or
popf
xor
cs
pushf
arpl
subl
mov
add
cmp
pop
test
push
lea
adc
inc
sub
xor
cmp
jg
mov
adc
shr
and
xor
sub
dec
popa
lcall
pop
add
ds
add
icebp
std
mov
push
adc
stos
and
xlat
add
pop
sbb
inc
into
fdivrl
fistpl
lds
sub
lods
imul
adc
jns
xor
test
outsl
orl
adc
push
cmp
cmc
xor
sub
mov
cmp
lock
xor
cli
cmp
pop
repnz
pushl
das
fnstcw
arpl
shrb
pop
and
or
pop
aaa
dec
dec
insb
xchg
popa
mov
push
adc
dec
stos
xchg
xor
mov
add
adc
jmp
daa
push
stc
insb
sti
pop
xor
lods
jns
jne
mov
cmpsb
cli
negl
xchg
sub
cs
iret
xchg
mov
movsb
jo
push
dec
inc
cmp
jp
je
adc
mov
sahf
xor
jne
pop
mov
fwait
sti
shr
jl
or
jmp
cli
fdiv
jl
out
ret
add
shl
movsl
sarb
push
push
dec
out
fwait
inc
jge
dec
in
jno
ret
addb
jecxz
hlt
sti
loopew
out
je
stos
jb
bound
cli
adc
pop
mov
mov
jle
inc
mov
les
std
cmp
out
jmp
dec
cmpsb
call
add
and
xorl
stc
out
stc
aaa
push
sti
xor
jnp
xor
xorl
mov
in
fstl
test
es
rcrl
out
jns
cmp
scas
add
out
dec
pop
test
jns
fisubs
insl
scas
xchg
inc
jno
or
sub
sbb
shll
mov
repnz
nop
or
sbb
jl
inc
shlb
jle
cmp
ljmp
mov
dec
adc
lcall
shrl
mov
or
mov
ljmp
orl
inc
xor
jno
loop
sti
or
jg
addl
aam
scas
dec
lret
loope
push
jl
jae
inc
jmp
arpl
loope
sbb
jo
outsb
sub
subl
xor
and
ss
xchg
cwtl
fwait
lret
fbld
movsb
xchg
push
sbb
lods
xor
scas
jmp
lds
cltd
adc
test
or
sbbl
icebp
loope
andl
mov
sub
xchg
clc
fwait
sarb
push
int3
into
and
nop
popf
shrb
and
sub
cmc
xchg
sarb
add
add
in
out
push
cld
ja
cwtl
outsb
add
pop
mov
imul
mov
fs
int3
icebp
mov
push
popa
std
mov
push
lcall
push
inc
shll
cmp
push
xor
push
test
test
xor
repnz
js
lea
xor
scas
cmp
fmuls
loopne
mov
sahf
xchg
dec
pop
rcl
out
out
mov
sbb
fcmovnu
push
or
jp
popa
jno
jg
mov
stc
clc
xchg
sbb
mov
sbb
adc
cmpsl
int
and
jb
clc
xor
nop
mov
nop
ds
fidivrs
pusha
or
in
lods
adc
mov
lea
cmp
lret
xchg
xor
jmp
sub
mov
and
ljmp
insb
jmp
mov
mov
xor
cmp
cmp
add
cmpsl
sti
ja
aas
pop
or
inc
sbb
in
icebp
orl
insb
xchg
or
icebp
out
mov
mov
mov
ss
int
push
lret
lods
test
repnz
test
cmp
mov
pop
add
push
pop
jb
enter
call
gs
pop
arpl
loopne
jno
mov
sbb
test
cmp
aas
daa
sub
jmp
push
jo
int3
movsb
in
shrl
ss
int3
mov
push
and
adc
xlat
shlb
jo
ds
sub
sub
lret
and
arpl
aaa
fdivs
cmp
call
push
mov
adc
sbbl
in
imul
pop
aaa
dec
push
dec
fcmove
ss
orb
push
mov
lret
sbb
or
or
cli
mov
in
sar
adc
push
test
sbb
out
push
nop
inc
ljmp
mov
sahf
aam
sub
mov
adc
jmp
inc
cmp
fmuls
shlb
cs
inc
cmp
push
xor
loope
inc
push
bound
std
adc
shrl
js
out
push
movsl
push
pushf
cmp
stos
fidivrs
sub
dec
daa
inc
add
mov
mov
push
xchg
fsub
push
lods
cmp
push
nop
cli
or
aam
rcll
sbb
add
add
xchg
cmp
sub
jbe
xchg
dec
sub
dec
out
sub
imul
in
aaa
cmpsb
jmp
pop
shlb
push
inc
jb
cli
inc
and
cmp
sub
add
je
out
lods
pop
lock
xchg
mov
xor
add
dec
jo
test
push
bound
jecxz
out
fnstenv
and
sbb
mov
mov
cmpsb
out
ret
lahf
sub
cmc
ret
mov
add
or
mov
sbb
dec
xchg
add
add
sub
mov
je
aas
jnp
aas
iret
mull
add
loope
pop
dec
add
sahf
out
repz
and
dec
ljmp
push
jo
mov
and
sub
mov
add
inc
in
das
cmp
cmp
clc
push
jbe
jo
js
insl
int
cwtl
fnsave
push
push
popf
sbb
cmp
lods
mov
rol
jl
mov
xlat
and
ret
jle
pop
add
add
cmpsl
call
arpl
jnp
jae
add
sub
out
loopne
dec
hlt
ds
stos
rcrb
and
icebp
stos
mov
jo
rorb
repnz
std
mov
enter
jmp
fwait
pop
mov
insb
je
push
and
inc
sbb
out
lods
aam
and
cli
mov
jo
jb
jns
shl
push
mov
sbb
pop
out
arpl
sub
mov
push
pop
pusha
xchg
leave
dec
mov
push
xchg
adc
dec
cmp
int
sub
sub
inc
sub
ret
ja
dec
sub
dec
mov
sub
jnp
sbb
mov
xor
xchg
push
leave
insl
popa
fcoml
lahf
in
dec
inc
and
push
loopne
icebp
sub
jae
test
and
mov
pusha
aam
push
pop
mov
sub
xchg
test
ja
fs
sbbb
sub
fsub
adc
dec
pop
scas
cmp
sub
lret
fsubs
shrb
jns
xchg
sub
xor
in
xor
mov
mov
pusha
sarb
in
imul
xor
outsl
add
iret
icebp
inc
sub
or
in
jnp
push
add
movsl
and
xor
arpl
xchg
jno
sub
in
pop
je
xor
cmpsb
adc
je
pop
sar
xlat
ds
sahf
add
dec
or
stos
loopne
mov
lahf
daa
int
jae
idivl
out
sarb
mov
fisubl
xchg
es
cltd
push
lods
pop
inc
stc
lds
neg
xlat
mov
ljmp
inc
push
jecxz
ja
mov
rolb
mov
lods
lret
mov
cltd
jle
arpl
mov
out
shlb
rorb
sub
lcall
dec
sti
cmp
out
mov
dec
aaa
js
pop
hlt
outsb
jmp
shrl
mov
and
sar
mov
mov
int
lods
mov
push
jae,pn
shll
scas
lahf
lcall
mov
dec
xchg
insb
add
pop
or
fwait
cmpsl
mov
out
repz
sub
mov
movsb
movsb
int3
jecxz
iret
push
mov
fs
nop
jmp
add
sbb
and
or
mov
dec
test
lds
cmp
std
fdivs
nop
fldcw
and
lret
mov
mov
test
enter
rol
or
adc
sub
stos
mov
fdivr
in
arpl
add
cmpsl
and
mov
lods
loop
je
movsb
sub
and
ror
cs
inc
sbb
pop
pop
clc
jno
cmp
fs
fstpt
push
and
loope
popf
adc
aam
cmp
mov
bound
mov
int3
sub
aas
cwtl
cmpsl
fsub
icebp
sbb
xchg
ds
jecxz
out
fisttpll
repz
stos
ss
jo
repnz
mov
push
push
movsb
sbb
or
subl
test
jp
in
lret
mulb
dec
jg
ja
push
test
xchg
call
sub
lret
xchg
jne
sbb
inc
mov
mov
lods
lods
into
mov
or
cmp
adc
push
mov
mov
mov
push
scas
or
sarb
lahf
notb
fucomip
or
stos
push
test
cwtl
scas
sarl
cltd
xchg
fiadds
insl
cltd
mov
popa
sbb
hlt
jnp
mov
mov
insb
mov
xchg
call
xchg
int3
push
popa
adc
js
xchg
xchg
pop
mov
jns
push
lahf
cmc
outsb
mov
adc
mov
or
jp
jp
and
push
xchg
mov
sub
mov
add
add
cltd
into
push
dec
sub
pop
icebp
sbb
addr16
push
mov
mov
xchg
sbb
subl
sbbl
pop
call
xchg
mulb
leave
or
fmul
xchg
xchg
addr16
sbb
ficoml
idiv
sbb
je
dec
push
divl
push
sbb
inc
push
push
and
mov
jnp
sub
repnz
enter
nop
shl
and
sub
icebp
jp
xor
lea
xor
and
dec
jne
movsb
frstor
jp
lea
rclb
jne
fbld
ja
push
ss
mov
jl
push
mov
imul
sub
mov
fwait
or
xchg
adc
sub
gs
mov
mov
xor
push
add
clc
outsb
jbe
and
adc
push
mov
dec
ror
mov
push
fs
aaa
cmp
divl
inc
fisttps
and
jg
mov
cld
mov
aad
lret
cli
mov
and
adc
add
aad
dec
ljmp
add
cmp
push
rorl
adcb
add
in
jbe
add
repz
xor
jns
out
stos
iret
loopne
popa
clc
subb
add
sub
xchg
aam
pop
pop
inc
cld
iret
inc
jns
mov
mov
js
mov
ljmp
test
andb
stc
mov
icebp
xchg
ja
cld
push
add
xchg
incl
nop
cltd
mov
lret
test
imul
jbe
in
push
loopne
nop
lahf
and
mov
push
mov
loop
cmp
mov
cmp
xlat
xor
push
sbb
cltd
xchg
into
or
lcallw
pop
ja
es
loopne
je
cmpsb
leave
cltd
rcll
pushf
mov
push
cmp
fwait
xchg
shl
jle
adc
test
sbb
mov
into
enter
iret
pop
cltd
sbb
or
out
lock
pop
fwait
iret
or
outsl
aad
out
ds
add
mov
sarb
je
ljmp
lock
int
arpl
pop
in
test
outsb
sbb
mov
sti
in
xlat
test
lods
push
fldcw
stos
sbb
inc
mov
mov
dec
fbld
fnstcw
stc
mov
add
jo
sbb
in
push
sbb
or
push
in
push
imul
enter
neg
clc
scas
pslld
ret
out
sti
outsl
es
dec
sbb
rcl
push
leave
fwait
popa
or
push
mov
cmp
mov
pop
cmp
push
mov
dec
adc
enter
adc
jmp
mov
add
lahf
xchg
test
add
inc
xchg
addr16
xchg
pop
ret
pop
lock
pop
jge
insl
adc
mov
orb
negl
loopne
sub
stos
cmp
adc
loope
lods
dec
std
jnp
daa
jo
cmc
jb
cmc
mov
mov
push
bound
inc
mov
adc
adc
fsubr
aaa
fists
fisttpll
cmp
xchg
add
int3
ds
frndint
sbb
clc
xor
test
movsl
mov
nop
push
jg
jle
sbb
adc
push
aaa
fmull
jb
add
fwait
movsb
aaa
fnstcw
fcompl
mov
arpl
mov
add
pop
aas
and
cwtl
mov
aam
cmp
cmp
lret
or
and
cli
fwait
loop
pop
lea
cmp
cmp
jmp
das
shrl
es
mov
hlt
andl
out
add
mov
sub
inc
sbb
pusha
cli
mov
sub
inc
push
enter
outsl
push
adc
and
test
bound
push
push
rcrb
pop
mov
push
jmp
fistl
cmp
iret
adc
mov
gs
outsl
jge
js
insb
and
cmc
sbb
cmp
scas
lds
icebp
adc
sbb
xchg
pop
out
ss
xor
mov
lods
popa
negl
add
cmp
jmp
dec
mov
push
adc
aad
jl
test
jp
mov
xchg
ret
pop
jecxz
mov
or
jmp
repz
mov
push
cmpl
cmp
cmovb
dec
mov
aam
clc
lods
xchg
loop
insl
add
out
jle
lds
pop
lret
mov
add
push
inc
push
mov
jns
jg
or
cmpsl
mov
pusha
in
mov
ss
loopne
insb
out
ds
pop
aaa
xchg
pop
cmp
mov
sbb
xor
cmpsb
mov
rol
fnstsw
adc
rol
cmp
mov
out
iret
pop
out
xor
cmp
dec
fwait
xlat
cli
push
shll
mov
inc
xchg
jecxz
movl
sti
insb
fsincos
adc
in
fildll
mov
test
mov
rcrl
cmp
mov
sahf
pop
jb
stos
push
push
inc
ret
call
mov
xchg
ljmp
insl
add
stos
in
pop
xor
mov
es
sti
popa
movsb
bnd
ljmp
mov
lds
mov
mov
inc
imul
out
mov
push
add
pop
push
shl
leave
mov
stos
cmp
xchg
in
cmpsl
int3
into
es
pop
xchg
xor
dec
sub
cmpsl
andb
popa
addb
inc
mov
shlb
push
ljmp
push
hlt
into
jl
je
mov
cld
int
jmp
repnz
int3
push
roll
shl
pop
dec
xor
dec
jo
dec
ljmp
loope
cmp
inc
test
popf
enter
leave
mov
inc
shrb
imul
push
in
enter
rclb
adc
in
xor
shlb
mov
out
xchg
pusha
ds
mov
stos
pop
cmp
mov
loopne
in
mov
mov
test
push
xchg
lods
inc
inc
jl
xor
data16
sub
jnp
mov
cmp
add
dec
mov
mov
add
mov
push
adc
dec
int
shrb
mov
jno
frstor
sub
int
ret
adc
stc
mov
mov
pop
sub
test
mov
mov
jbe
push
mov
mov
or
shrb
xlat
sahf
je
ret
out
cltd
jae
xor
dec
cmp
jo
testl
pop
jne
daa
arpl
rcl
cmp
push
jns
xor
or
flds
xchg
fs
aas
mov
fwait
inc
lods
xor
mov
sub
xchg
dec
mov
and
push
in
add
ror
lock
add
test
loope
sbb
pop
shlb
enter
fcompl
dec
sbb
pop
mov
cltd
push
popa
mov
in
jae
lcall
add
and
xor
loop
xor
jne
stos
adc
or
mov
fildll
jns
popf
xchg
pop
lds
or
aaa
mov
out
mov
push
and
imul
cwtl
das
imul
and
push
insl
aas
in
decl
dec
jnp
sub
out
lds
and
or
mov
popa
inc
or
lret
push
pop
fsubrl
fbstp
mov
clc
andl
jnp
sbb
mov
bound
cmpsb
xchg
xchg
pop
hlt
jmp
adc
push
sub
ja
ds
add
call
mov
iret
cmpsb
pop
das
fstps
xchg
and
mov
add
data16
aaa
sbb
rorl
in
push
push
jns
cmp
insl
outsl
jecxz
js
dec
jp
lods
fsubrp
sbb
adc
movsb
push
pop
mov
xchg
pop
sub
sub
xchg
jp
pop
lret
lods
std
cld
sbb
adc
enter
add
mov
fildll
ljmp
sub
sub
int
dec
xorl
or
in
xchg
jp
xlat
in
xor
add
dec
push
lds
adc
cmc
cld
vsqrtps
jb
xchg
lock
loopne
or
fldln2
fs
rcr
in
mov
inc
ja
ret
adc
stc
mov
add
ficoml
je
sti
pop
xchg
push
test
cmpsl
mov
mov
jb
fwait
xchg
mov
js
cli
arpl
sti
jno
xchg
rcll
into
sahf
mov
out
jbe
mov
fidivrs
aas
fsubl
inc
lods
cmp
data16
jge
cwtl
and
pop
loope
pop
outsb
mov
repz
decb
fbstp
in
mov
cmp
cmp
rclb
push
sub
mov
push
cmp
mov
pop
fs
in
movl
js
dec
sbb
xchg
mov
cld
pop
xor
fistpl
outsb
xor
cmp
add
lcall
ljmp
fs
push
ret
stos
jg
loop
and
cltd
sub
push
jno
lahf
jp
and
idiv
and
into
and
int
sbb
adc
pop
ret
mov
inc
icebp
dec
xchg
fistpll
popl
pop
ja
mov
and
lock
mov
cltd
pop
scas
xor
pop
out
mov
cmpsl
cmp
es
push
jns
dec
inc
loopne
push
cmp
xchg
sub
rclb
jnp
mov
mov
lret
sbbb
dec
fbld
cmc
testb
jne
sbb
aaa
std
jo
fistpl
xchg
pusha
xor
push
lahf
mov
or
mov
sbb
lods
mov
pushf
cld
cltd
in
xor
mov
mov
jbe
lock
cld
pop
jle
cmp
inc
out
test
push
inc
inc
jb
push
das
sbb
mov
cltd
notl
xor
lods
mov
out
test
jg
pop
jecxz
aam
push
and
jb
cltd
ljmp
dec
push
fwait
cmpsl
cmp
aam
pop
mov
in
fcmovnbe
pop
sbb
inc
rcrb
pop
mov
xor
push
das
mov
push
adc
inc
dec
fwait
shll
sahf
je
test
jne
cmpsl
insb
sti
mov
cmp
into
in
and
lret
sbb
add
mov
jo
xchg
and
jle
pop
inc
jl
cmpsb
sub
out
lret
cltd
pop
imul
aaa
adc
xorl
or
mov
data16
push
clc
xchg
mov
sahf
adc
jbe
fs
xor
adc
or
int
sbb
mov
lret
xor
or
fbstp
icebp
mov
ret
dec
ret
cmc
stc
loopne
inc
lods
mov
xor
movsl
and
mov
sub
dec
xor
xor
push
fwait
roll
bound
inc
dec
sub
jno
jge
dec
loopne
divl
out
sub
dec
mov
add
lock
repnz
js
mov
mov
add
in
shll
xor
push
jno
loope
mov
inc
sti
cs
or
out
mov
mov
xor
add
psraw
cli
jnp
push
inc
mov
arpl
js
sahf
push
push
out
push
daa
sbb
imul
loope
lods
jmp
adc
inc
adc
shll
pushf
aad
gs
xchg
add
and
xor
pop
scas
mov
ja
and
les
or
jo
mov
dec
outsl
movsl
pushf
fstpl
icebp
inc
insb
or
sti
sub
cmp
xchg
mov
mov
repz
notl
push
int3
sub
mov
jne
popl
mov
lock
call
mov
dec
pop
mov
shlb
ds
mov
mov
enter
xor
xor
sbbl
and
dec
or
dec
mov
inc
jge
movsb
push
popa
push
add
push
mov
cmp
inc
pop
pop
bound
fcomps
rorl
lcall
inc
cs
aam
mov
cli
ror
repnz
cmp
loopne
test
jp
int3
jae
dec
jge
out
stos
stos
mov
lds
enter
fbld
clc
sti
inc
aas
movsl
xchg
jmp
movsb
addr16
fs
lahf
addr16
mov
push
sbbb
loope
pop
into
pop
data16
jns
shlb
addr16
packuswb
popa
jne
fisubl
sahf
in
jo
and
pop
dec
cwtl
mov
mov
sahf
bound
mov
xor
pop
xchg
les
cmp
pop
sub
pop
jmp
mov
repnz
jb
fwait
sahf
push
out
pop
fs
repz
inc
jecxz
fdivrs
inc
inc
inc
dec
fimull
dec
fiadds
push
mov
xchg
imul
sbb
nop
nop
pop
loope
call
movl
cmp
aam
popf
mov
into
fnstenv
in
mov
fistpl
adc
pop
xchg
cmpsb
push
push
add
addl
mov
ljmp
hlt
lods
shlb
dec
lock
shr
ja
hlt
push
push
pop
sbb
cmc
push
inc
mov
mov
call
sbb
cmp
std
jae
dec
inc
inc
lock
outsb
jg
sub
into
repnz
or
jg
aam
mov
sahf
js
inc
inc
cli
inc
and
fmulp
in
mov
std
pop
lret
arpl
xchg
insl
nop
cli
ret
into
movsl
lret
add
mov
fwait
mov
pushf
ret
jecxz
pusha
jp
bound
sbb
push
and
clc
scas
dec
stos
incl
or
gs
call
mov
sarl
enter
jno
xchg
ljmp
xchg
pop
jmp
xchg
dec
outsl
int
jne
dec
cmp
daa
dec
arpl
repz
in
pop
xchg
shlb
bnd
into
or
test
lods
aaa
xor
lcall
push
mov
xchg
imul
les
xchg
cmp
mov
pop
mov
jl
xor
lahf
xchg
stc
add
mov
orb
and
dec
pop
cmp
call
int
out
stos
cmc
or
hlt
jo
shl
in
xchg
sub
jl
mov
jbe
imulb
jecxz
mov
jne
mov
loopne
out
mov
daa
inc
cld
rcl
loope
out
lods
int3
cmp
cmp
sbb
fs
mov
out
mov
imul
push
inc
mov
xchg
ljmp
icebp
jnp
ror
cmpsb
insb
xchg
xchg
fidivrs
repz
xchg
loopne
js
inc
sbb
lds
ja
xor
xchg
sbb
pusha
mov
add
xchg
aad
sub
fwait
in
dec
ja
aam
neg
sbb
jae
jl
inc
jg
sbb
stos
addl
adc
inc
into
insl
push
stc
int3
call
in
repnz
mov
sbb
lret
xor
aaa
inc
lret
dec
jnp
pop
enter
sti
adc
es
in
imul
cltd
imul
repnz
mov
add
invd
sub
pop
cmp
sahf
in
push
and
shlb
inc
jge
enter
test
dec
mul
stos
cmpsl
int3
and
and
xchg
add
xchg
mov
jae
fldl2e
xchg
fwait
sahf
cmp
push
push
sub
cltd
fnstenv
add
test
pop
xor
test
imull
dec
mov
jb
cmpsb
cmp
sbb
jg
sub
push
pop
pop
mov
cmp
jnp
mov
out
xchg
jnp
mov
pop
xchg
outsb
mov
push
push
inc
leave
mov
mov
orl
inc
mov
jmp
mov
sub
stos
sti
push
imul
push
ret
loope
lea
cmp
and
jp
icebp
stos
rolb
cmc
movsl
aam
je
pop
jecxz
cwtl
mov
sbb
mov
sbb
mov
loop
lock
mov
stos
cmc
push
mov
cmc
xor
stc
jbe
lea
adc
call
cmp
or
xchg
pop
dec
mov
cmp
clc
sbb
xchg
xchg
xchg
cmp
out
scas
mov
sub
idiv
test
shl
mov
ja
dec
xlat
ja,pn
out
mov
push
xsha1
cmpsb
dec
sub
lret
out
dec
pop
mov
push
adc
cltd
loop
movsl
fldt
lcall
mov
mul
jbe
jno
leave
stos
jne
in
stos
jmp
lret
ljmp
add
pop
je
loopne
sbb
mov
adc
aad
into
push
leave
pop
outsl
adc
das
lods
insb
and
cmpsb
outsl
loop
xor
arpl
testb
push
xchg
je
and
imul
sub
imul
cmp
xchg
sahf
cmp
cli
adcl
jae
add
mov
into
sub
mov
mov
cmpsl
in
mov
in
les
mov
jbe
sahf
and
pop
mov
or
aad
aaa
mov
pop
xchg
inc
pop
fwait
aaa
pop
mov
sub
adc
pop
pop
xchg
or
cmp
imul
push
add
roll
adc
cltd
push
add
jl
dec
loope
cmpsl
out
add
test
mov
jne
sub
stos
and
cmp
sub
popf
int3
scas
test
inc
mov
dec
repz
lods
mov
fs
adc
mov
es
aam
cmp
mov
pop
lret
aaa
adc
xchg
xchg
cs
mov
fldcw
nop
pop
sub
test
mov
out
cmp
lods
fstps
add
lock
dec
repz
push
out
mov
movsb
test
xor
ret
mov
outsl
push
lea
sti
shl
pop
xchg
mov
outsb
pop
sub
les
dec
xor
cs
lods
pop
pop
cli
sbb
pop
mov
pushf
imul
stos
insb
test
pop
not
mov
cld
push
xchg
mov
divb
mov
mov
pushf
mov
vsubsd
out
pop
dec
lods
inc
mov
and
pcmpgtd
rcrb
iret
mov
jmp
aaa
push
cmpl
mov
pop
inc
pop
ret
xabort
pmovmskb
adc
mov
pop
shrl
stos
test
jecxz
cli
cltd
mov
call
adc
mov
arpl
fwait
lods
shrl
cs
mov
aas
pop
xchg
xor
notb
add
mov
hlt
icebp
repnz
fcmovnbe
xchg
lret
inc
sahf
push
notl
loopne
sub
mov
rorb
mov
jo
test
sti
sar
in
xchg
jbe
fiadds
sbb
jno
into
xchg
mov
xchg
push
mov
jp
adc
push
call
out
repz
inc
fimull
mov
mov
and
sbb
mov
call
xlat
and
push
add
add
xor
addr16
fdivrs
leave
cmpsb
rcll
cmp
fdiv
jle
jl
push
in
nop
and
jmp
je
sbb
push
dec
sub
push
mov
push
push
jle
imul
jp
mov
das
xchg
pop
or
lods
orb
imul
cmp
fistps
adc
lods
fwait
out
adc
mov
cmp
lock
mov
stc
mov
lods
fidivl
jmp
xchg
xor
scas
xlat
dec
adc
adc
test
pop
outsb
inc
jb
jnp
mov
mov
aas
aaa
cltd
sbb
std
loope
and
aas
jmp
fisttps
popf
testl
xlat
mov
and
jg
fnstcw
jo
jp
dec
popa
jge
pop
arpl
mov
jmp
or
sbb
mov
stc
imul
into
mov
jmp
pop
mov
loopne
push
aaa
push
rcll
xor
arpl
cmp
call
out
pop
sbb
hlt
mov
or
shlb
mov
mov
bound
sub
jl
sub
lcall
push
dec
xor
and
xchg
mov
xchg
les
arpl
pushf
jb
sub
and
mov
xchg
jmp
xchg
aaa
leave
inc
adc
cmp
daa
pop
movsl
jmp
xor
dec
jb
popa
inc
call
xrelease
enter
scas
sub
jb
lods
fstpt
repz
xlat
fistpl
fisubrl
outsl
addr16
test
icebp
cmp
dec
fwait
repz
mov
mov
adc
mov
mov
mov
adc
push
stc
cwtl
push
sbb
sub
mov
and
jmp
idivl
inc
jmp
icebp
sub
loopne
jl
mov
jge
out
adc
ljmp
orl
xchg
imul
adc
xchg
adc
adc
pop
adc
in
push
test
scas
rorl
mov
outsb
cmp
sub
xchg
outsl
mov
clc
mov
addr16
shll
xchg
dec
inc
push
xchg
jb
das
lcall
add
stos
out
das
inc
mov
xlat
test
xchg
or
and
mov
sbb
cmp
scas
jo
cmp
in
sub
nop
repnz
mov
adc
enter
and
int3
in
ja
cmp
jp
mov
fsubrp
leave
push
mov
aad
imul
cwtl
test
lret
rcrl
or
int
jne
ret
add
insl
cs
stos
into
imul
dec
sub
adc
sub
lock
xor
out
ret
ret
in
in
ss
les
addb
sahf
mov
sbb
pop
add
adc
jbe
stos
ja
xor
mov
mov
in
pop
sbb
or
jge
push
hlt
xchg
mov
aas
packuswb
repz
orl
jnp
mov
movsl
out
push
rcrl
or
mov
xor
rcr
xchg
inc
sub
sti
dec
ret
xchg
dec
mov
adc
xchg
xor
xchg
sub
xor
and
mul
push
mov
pop
lock
add
adc
add
xchg
cmp
fwait
adc
cmp
test
arpl
unpcklps
jno
repnz
and
loopne
sub
imul
jmp
stc
leave
cmp
arpl
mov
mov
or
mov
xor
add
sysret
ds
ljmp
lds
imul
bound
out
mov
pop
btr
add
sbbl
dec
shl
mov
cld
jmp
push
push
inc
in
scas
mov
add
or
mov
movsl
loopne
ret
jbe
mov
mov
cmp
aam
out
aam
jle
addr16
pop
faddl
push
sti
ds
mov
mov
mov
shlb
ret
add
inc
mov
pop
xor
cmpsb
push
lcall
and
and
ljmp
ljmp
mov
xor
cmp
js
xchg
notb
or
sbb
cwtl
je
jne
std
cwtl
out
int
cmpsl
std
call
imul
dec
jae
out
int3
cmp
mov
jnp
and
xlat
mov
outsb
repz
aam
rclb
and
mov
dec
dec
inc
adc
test
mov
lock
test
xor
dec
push
iret
adc
and
push
sub
ror
lods
int3
fists
sbb
in
dec
std
imul
cmpsb
xchg
jge
inc
pop
ja
add
push
fsts
xchg
inc
jl
xchg
inc
adc
loope,pn
popf
pop
lret
ds
mov
out
xchg
loope
and
jecxz
xchg
cltd
scas
daa
sub
push
movsb
push
sbb
jp
movsl
pushl
flds
mov
mov
in
mov
mov
or
jl
or
adc
fnstenv
mov
cmp
sbb
cmp
xchg
mov
add
fnstenv
and
pop
cltd
cmp
jp
mov
push
stos
jae
test
jle
xor
je
mov
pop
ja
mov
int
insb
pop
rolb
xchg
push
inc
out
jns
adc
add
sahf
in
add
cmpb
pop
add
lods
loope
loope
sbb
dec
lods
mov
imul
call
cmp
xchg
mov
ljmp
sub
pop
sbb
xor
lea
imul
icebp
into
mov
nop
addr16
loopne
add
mov
fisubrs
adc
xor
xchg
pop
add
sbb
fnstcw
or
div
test
jbe
cmp
xor
inc
inc
jl
cld
xchg
sub
insl
lods
outsb
mov
lods
adc
xor
xchg
sbb
add
es
sub
shl
adc
bound
add
scas
loope
cld
fcompl
pop
mov
jp
daa
adc
gs
add
insb
xchg
push
xor
and
fwait
dec
or
cmp
aam
sbb
push
add
pusha
push
fbld
ja
sub
fidivrs
xchg
cmpsl
imul
es
mov
push
mov
dec
push
sub
xchg
rcl
test
cmp
outsl
movsb
mov
ret
mov
shlb
jg
inc
loope
stc
push
stos
arpl
inc
jae
pop
pop
mov
and
jb
mov
lret
ss
xchg
lahf
movsb
icebp
jno
fisttpl
mov
repz
mov
ja
pushf
sub
inc
jg,pn
scas
subl
lahf
stc
sub
js
push
mov
std
adc
cmp
sub
fmuls
push
mov
scas
pop
xlat
mov
pop
std
hlt
out
cmc
sbb
ja
cmc
jns
pop
leave
sub
mov
and
lret
inc
mov
test
push
mov
scas
add
sbb
mov
pop
pop
addr16
jecxz
push
inc
cs
xchg
cmpsl
out
ds
xor
div
in
mov
jp
data16
fwait
inc
jecxz
inc
fstps
lret
dec
int
dec
outsb
xor
dec
imul
dec
mov
addr16
sarb
repnz
push
or
stos
pushf
push
clc
pop
dec
push
cmc
sub
mov
shr
rcll
pop
xor
in
popa
adc
mov
rorb
cmp
out
inc
es
cmp
fstl
clc
scas
hlt
add
std
xchg
lock
jg
pushf
inc
pop
push
jge
push
aaa
adc
inc
test
or
lods
mov
cwtl
mov
xlat
pop
mov
push
cmpsl
lods
adc
sbb
adc
adc
nop
lock
cmpsl
mov
adc
rclb
adcb
adc
pusha
outsl
mov
popa
daa
xchg
decl
push
and
je
rorl
fs
out
push
inc
into
sbb
lret
and
adc
xor
imul
into
popa
test
cmp
cmp
sti
jl
xchg
or
sbb
cli
push
shrb
sbb
add
in
iret
jge
xchg
xchg
sub
and
bound
and
xchg
jb
mov
cld
mov
loopne
jp
repz
jbe
push
adc
pushf
in
dec
sbb
sahf
shlb
push
jp
xchg
lds
jo
adc
push
cmp
aaa
fadd
cld
andb
incb
pop
mov
xchg
icebp
inc
adc
mov
imull
aaa
je
mov
movsb
mov
mov
leave
jl
lds
arpl
adc
imul
cmpsb
push
popa
fsubrl
push
sub
pop
mov
cld
sbb
push
xor
mov
push
jae
cmp
dec
nop
fs
pop
xlat
cli
sar
in
dec
nop
xchg
subl
or
mov
rol
jmp
mov
add
jge
cwtl
sahf
push
mov
and
popa
inc
and
stos
sbb
lods
sub
dec
ljmp
daa
out
mov
add
sbb
stos
jmp
sahf
jge
sarb
insl
and
jae
andl
cltd
xchg
and
out
cmp
xor
jg
dec
jl
mov
jle
and
pop
imul
pop
jg
inc
mov
sub
ja
mov
cli
xchg
mov
scas
cmpsl
dec
mov
shll
mov
xchg
inc
or
lods
push
popa
jle
push
inc
sub
pop
mov
push
fildl
cmp
into
or
pop
cmp
push
fisubs
cmp
sub
sub
iret
or
jmp
mov
fcomps
daa
cs
sbbb
dec
fidivl
gs
or
mov
lods
push
push
add
sti
inc
ja
mov
std
pusha
sub
xchg
pushf
fmuls
loop
dec
loop
sti
cli
mov
or
iret
adc
cmp
mov
in
std
data16
gs
sub
inc
dec
cmc
sbb
stos
imul
lret
cwtl
adc
fst
loopne
andl
inc
dec
lods
inc
sub
inc
xor
xchg
out
stos
dec
pop
sarl
insb
or
sub
inc
sub
cmp
adc
mov
jmp
cli
idivl
mov
lahf
adc
rcll
push
lds
and
jns
cwtl
or
insl
push
scas
hlt
and
movb
jbe
or
call
pop
add
mov
push
cltd
mov
out
or
daa
bound
jl
mov
push
cmpsb
je
mov
movsb
xchg
or
cld
or
jmp
pop
cmp
call
fs
cmp
lret
outsb
xor
lds
mov
scas
xchg
pop
xor
jae
sbb
inc
lret
inc
sahf
shr
adc
les
xor
lock
test
aas
icebp
fstpt
push
and
jmp
adc
pop
out
aad
ficoms
test
or
das
cmp
and
pop
idivb
mov
xchg
inc
lahf
jb
add
sbb
arpl
loop
cli
imul
dec
andl
add
imul
dec
les
push
sub
pop
je
loopne
out
jge
mov
mov
mov
pop
cmc
sbb
mov
sub
or
sbb
ret
lret
or
adc
dec
mov
dec
or
mov
sahf
daa
mov
das
icebp
push
mov
push
loope
lock
xchg
sub
and
push
or
loop
ret
int3
out
rcll
push
push
sbbl
jecxz
sub
add
int3
out
jg
sub
lea
arpl
jp
cmp
cmp
lds
cmp
cld
stos
mov
int3
sub
icebp
ret
mov
jbe
xor
cmpsl
imul
xchg
or
clc
inc
add
cmp
mov
inc
repnz
movsl
mov
jns
jg
dec
in
inc
sti
pop
minps
loop
push
je
xchg
stos
jnp
pop
popl
es
gs
test
adc
xor
outsb
mov
fisubs
add
nop
lret
sbb
ror
test
shrb
stos
cld
popa
inc
outsl
dec
mov
test
mov
mov
mov
scas
movsl
sub
pop
mov
cmp
mov
xorb
es
negl
adc
lahf
cmpsb
pop
test
jp
jns
jae
scas
lock
cmpsb
test
mov
inc
inc
pop
cmp
fnstenv
mov
cld
mov
cmp
push
mov
sbb
push
sub
xorb
mov
repz
lret
popl
arpl
shrb
mov
test
sub
push
pop
mov
xchg
inc
ja
add
ss
pop
push
add
or
mov
pop
into
pop
iret
orb
xor
aad
mov
or
add
in
insl
roll
or
xchg
test
fnstenv
adc
fwait
xchg
ja
push
inc
sub
in
mov
hlt
popf
sbb
inc
or
jg
daa
xchg
xor
movsl
js
pop
cld
ds
adc
jns
mov
out
and
ret
cli
jmp
dec
in
jns
xlat
or
sbbl
mov
jbe
enter
inc
bound
stc
dec
leave
cmp
inc
enter
inc
pop
mov
clc
push
mov
lods
cli
xchg
inc
add
cmc
arpl
repnz
push
push
outsb
xorb
pop
lock
push
inc
mov
mov
clc
dec
lods
push
cs
xchg
not
add
gs
xchg
xor
sbb
or
imul
lret
aad
push
mov
enter
subb
mov
fistpl
ret
mov
divb
sbb
ficomps
cltd
sub
jnp
mov
push
fldenv
rolb
mov
jle
lds
sub
pop
stos
or
jl
fs
fdivrl
push
les
lret
or
xrelease
jno
pop
loop
jle
sbb
mov
sub
pop
scas
cmp
int3
jno
jmp
sub
add
mov
out
pop
xor
js
cltd
sbb
adc
push
push
outsb
xchg
mov
mov
mov
pop
out
fcmovnu
dec
xor
imul
ret
mov
xchg
jmp
sbb
push
push
popa
ret
dec
int
js
push
mov
mov
pop
mov
fsubr
imul
adcl
pop
aad
ljmp
adc
cmp
lahf
sahf
dec
mov
test
mov
icebp
test
pop
cmp
movsl
dec
ljmp
mov
scas
int3
adc
nop
pop
jle
movsb
lock
pop
add
icebp
roll
int3
mov
and
ja
inc
cltd
sub
es
mov
mov
call
loop
jecxz
mov
sbb
scas
or
mov
mov
adc
in
sbb
and
xor
je
lods
inc
stc
xor
pop
lods
sub
rclb
bnd
je
ss
sub
ds
mov
fisubl
in
push
jae
rcr
inc
sbb
dec
jno
mov
jne
sbb
jnp
push
outsb
mov
jecxz
lock
mov
aaa
mov
cmpsl
mov
repz
and
pop
mov
xor
or
arpl
pop
jg
adc
sbb
rcrb
mov
cmp
xchg
adc
push
aas
inc
iret
push
mov
outsl
push
stos
scas
int3
mov
inc
xchg
fstpt
lods
andl
imul
cld
fstpt
xchg
in
fadds
test
xchg
cmp
adc
cmp
cs
aas
mov
and
js
negl
jecxz
scas
or
ficompl
push
frstor
mov
out
lock
mov
adc
fcomps
cmpl
repz
mov
push
andb
sbb
push
std
mov
or
lret
fnstcw
loope
sub
mov
call
repz
dec
cmpsb
cs
and
scas
leave
lods
aaa
xor
fldl
lahf
pop
pop
lret
lock
mov
das
jmp
stc
pushf
dec
lret
xor
mov
sahf
or
sahf
stos
xchg
mov
fildll
rcr
ss
inc
test
aaa
test
add
xchg
sarl
pop
xchg
add
test
pop
add
add
mov
jns
xor
pushf
adc
ret
stos
out
arpl
popf
das
xorl
mov
repz
divl
dec
lds
and
cmpb
out
cmpsl
pop
outsl
aas
int3
add
ja
and
pop
ljmp
jb
ja
mov
push
movsl
mov
inc
xor
mov
push
movsb
sub
repz
mov
icebp
add
xor
stos
movsl
data16
or
xor
inc
or
inc
inc
pop
lret
lods
mov
dec
xchg
popf
shlb
push
xchg
sbb
icebp
fs
divb
pop
mov
popf
push
mov
adc
scas
ret
mov
jge
and
test
mov
fstl
repz
adc
les
push
pop
mov
pop
imul
mov
insb
call
insb
cltd
adc
mov
add
dec
xchg
rclb
fwait
push
sub
cltd
inc
mov
daa
pop
pop
ljmp
lcall
dec
sti
cmp
push
scas
das
mov
out
add
in
cmp
mov
mov
push
enter
cmp
js
jo
and
inc
or
fprem1
adc
push
and
inc
fwait
xchg
sbbb
xchg
xchg
sub
jnp
std
push
inc
pop
fiaddl
cmp
mov
and
xchg
dec
push
adc
push
cmp
adc
hlt
nop
mov
and
popa
push
or
xlat
inc
or
pop
pop
cmp
pop
and
pop
push
xchg
fld
outsb
sbb
dec
pop
in
rorl
lahf
mov
mov
dec
mov
and
dec
push
cmc
or
jno
jne
and
jecxz
lods
das
cld
cmp
xorl
adc
je
dec
add
dec
in
lahf
dec
xchg
int3
andl
push
inc
xor
ret
fwait
bnd
sub
fcmovne
pop
or
mov
push
push
and
mov
push
adcl
jns
ret
inc
movl
js
add
pop
push
ss
mov
mov
xor
pop
data16
sbb
xor
cmpsb
lcall
scas
andb
dec
arpl
iret
xor
jmp
inc
cmpsl
lret
pop
xchg
jmp
adc
add
orb
jnp
xchg
dec
xor
mov
loopne
and
push
cmp
jmp
cmp
aad
pop
mov
fcoms
rorl
mov
pusha
xchg
jns
mov
pop
push
xchg
jp
add
jmp
loopne
jge
cmp
mov
adc
xchg
push
std
fdiv
mov
aas
fs
xlat
lret
adc
mov
xor
jmp
dec
jnp
fisubl
push
repnz
shll
aad
push
scas
mov
or
jmp
pop
sti
and
add
mov
or
and
int
lret
jns
adc
pop
pop
push
jg
in
xchg
ret
fwait
push
es
sbb
cmc
mov
pop
iret
sbb
or
aaa
ret
sub
test
jge
popf
mov
mov
push
insb
pop
pop
fnclex
movsb
cmp
ljmp
push
cltd
mov
cli
pop
jo
lcall
movsl
subb
or
inc
and
sbb
sbb
pop
lock
jae
cltd
idivb
jl
stos
cmp
sarl
lret
mov
mov
cmc
inc
divl
jecxz
mov
and
mov
xchg
ss
cmp
cmpsl
push
add
mov
gs
repnz
rolb
sbb
test
mov
pusha
in
push
mov
mov
lods
jg
inc
sahf
push
jb
add
out
leave
cmp
pusha
popa
into
test
xor
mov
lock
outsl
stos
adcl
fdivr
addr16
lahf
xchg
pop
aam
lock
xchg
mov
push
pop
mov
sub
pop
mov
lret
sbb
out
enter
bound
test
hlt
in
jp
mov
mov
faddl
imul
fwait
cld
and
sbb
xor
loopne
mov
jl
xor
cmpl
pop
scas
xchg
outsb
xchg
inc
adc
test
mov
pop
push
xchg
dec
xlat
ret
pop
aas
or
pop
andl
loop
and
mov
fisttpl
fstpl
dec
rolb
or
int
rcll
add
add
insb
pop
imul
loopne
mov
jbe
jnp
addb
imul
insb
xchg
lods
lods
addr16
fdivrl
mov
sbb
adc
add
icebp
cmp
pop
jmp
xchg
lods
rolb
hlt
add
adc
mov
fiadds
xchg
loope
js
push
pusha
movsb
mov
cmp
xor
data16
xchg
enter
mov
sub
scas
push
aas
cmpsb
ret
sahf
and
push
pop
push
add
nop
jne
test
les
outsb
add
sbb
push
mov
shrl
into
push
outsl
mov
fnstsw
mov
mov
int3
push
or
mov
pop
je
ret
cmp
test
jne
fstl
in
xchg
mov
mov
dec
lret
stos
lcall
add
mov
push
lret
ds
or
pushf
ret
pop
push
adc
dec
inc
xchg
mov
lea
lcall
cmp
mov
jnp
and
jl
in
std
sub
sbb
cmp
enter
gs
push
rolb
ret
test
das
jmp
adcl
add
or
mov
mov
push
leave
paddusb
pop
dec
test
fstps
sub
mov
int
cmp
sub
cltd
lret
mov
stc
or
mov
iret
push
mov
push
out
aad
cmp
push
fwait
aad
mov
fstl
outsl
and
or
adc
push
inc
mov
mov
jecxz
sub
addps
imul
dec
xor
nop
std
out
or
adcb
xlat
mov
in
pop
mov
and
jnp
ror
lods
outsl
jns
nop
push
sbb
mov
mov
mov
adc
es
lret
mov
orb
sbb
push
inc
inc
movsb
es
aam
sbb
jnp
mov
sbb
or
lcall
jmp
jle
inc
adc
or
int3
xchg
jl
cmpsl
and
inc
pop
arpl
jns
mov
in
flds
or
jp
mov
daa
cltd
hlt
xchg
jle
xor
push
mov
dec
adc
lret
or
dec
push
add
or
and
sub
repz
test
pop
mov
fldenv
sbb
mov
xlat
fldt
in
xor
mov
sbb
xor
stos
pop
add
dec
xchg
mov
lods
shl
js
push
sahf
pop
popa
sub
add
filds
mov
imul
addl
sub
add
addr16
xchg
dec
pop
dec
sbb
inc
stc
mov
pushf
or
mov
lods
pop
push
aam
int3
pop
and
mov
mov
pop
push
fwait
lcall
leave
pop
mov
add
dec
lret
push
mov
mov
insl
test
pop
jns
movsl
lret
xchg
mov
adc
dec
js
xchg
shrl
insl
and
add
repz
dec
fsubs
lods
xchg
push
inc
mov
push
repnz
cmp
scas
daa
push
and
push
fisubl
enter
shr
outsl
stos
sbb
inc
in
xchg
and
out
notl
sbb
ljmp
pop
mov
and
inc
lock
popf
pop
pop
pop
iret
push
test
cmc
pop
inc
js
sahf
mov
sbb
push
imul
cmp
shrl
inc
sub
mov
cmp
out
jbe
sub
pop
lret
psubsb
jle
add
sbb
sbb
pop
mov
xlat
jne
push
jecxz
in
fdivl
sub
sub
mov
jg
fnstcw
xlat
daa
inc
mov
inc
stos
xor
into
sysenter
addl
cmpb
orl
cmp
fisubs
subb
xchg
fnstsw
shr
rorl
out
adc
xor
or
mov
arpl
mov
popf
orb
mov
push
push
mov
add
inc
xor
hlt
out
mov
mov
push
rorl
xchg
and
je
or
mov
jno
or
push
sahf
xor
out
jl
adc
imul
hlt
push
in
xchg
sbb
scas
push
fwait
push
ljmp
pop
lods
daa
lcall
stos
jle
lret
aad
in
add
xor
aad
aad
loop
or
popa
add
push
xchg
xor
es
push
mov
pop
std
mov
or
xchg
push
mov
push
loope
and
cmc
cltd
and
cmpsb
cmp
push
cs
xchg
subb
sbb
testb
adc
int3
dec
loopne
scas
mov
dec
andb
push
add
push
cli
std
movsb
addb
lock
cmpsl
loopne
rolb
and
ret
dec
lret
lret
inc
pop
add
js
arpl
cli
lcall
pop
jbe
mov
or
jp
push
mov
in
and
scas
dec
popf
inc
test
loope
fildll
sbb
push
sub
mov
inc
roll
jmp
push
mov
cwtl
cld
int
mov
pop
mov
popa
mov
mov
or
in
lret
sub
add
repnz
mov
pop
fs
add
dec
push
out
roll
mov
push
das
out
cs
enter
pop
lret
enter
xor
rcrb
stos
iret
xchg
mov
cwtl
add
and
sbb
outsl
fstpl
sti
dec
sub
aas
inc
cmpl
pop
sahf
inc
mov
rcl
stos
mov
sbb
cli
push
daa
cld
les
insl
aas
sahf
lock
cs
push
ficoml
mov
out
dec
jb
xlat
pop
aam
clc
inc
es
xor
mov
mov
jg
mov
adc
mov
shlb
fldt
adc
xchg
lock
xchg
jb
mov
mov
sub
xchg
jno
cmp
and
pop
pop
or
mov
and
clc
xlat
into
cmp
cmp
push
imul
mov
mov
dec
jmp
movsb
xor
push
clc
lea
mov
mov
js
xchg
maskmovq
mull
or
vpor
cmpsl
adc
in
movsb
adc
repnz
insl
fscale
jle
mov
idivl
sbbb
lea
cs
xchg
push
push
pop
leave
enter
es
mov
fwait
mov
pop
push
pop
imul
pushf
out
xor
out
cmp
imul
mov
pop
and
js
mov
jecxz
test
sub
xchg
mov
mov
xchg
out
ret
pop
cmp
push
sub
leave
mov
pop
addr16
jmp
add
or
aas
mov
int
xchg
out
inc
notb
jecxz
into
popf
cmpsl
push
jmp
inc
pop
cltd
or
fcomi
nop
jb
add
int
shll
fcomps
data16
mov
flds
xor
insb
fwait
orl
repnz
stc
jnp
rcrl
in
cmp
fisubrs
pop
push
repnz
push
adc
icebp
fstpt
mov
dec
cli
dec
popf
xorl
pushf
lock
popf
adc
int3
pop
adc
cmp
daa
std
cli
outsb
or
stc
adc
loope
test
xchg
jnp
adc
mov
jae
mov
jo
aam
addr16
add
shr
xchg
jno
cltd
rcrl
and
xor
addr16
fsubrl
mov
or
fsubs
or
out
adc
mov
xor
xchg
xlat
push
ja
test
cli
daa
js
fs
push
fisubl
imul
sbb
scas
ja
pop
inc
sbb
cmpsb
and
fcompl
ja,pt
inc
andb
push
fldl
jns
popa
pop
xchg
cmp
mov
xor
cmp
sti
fucomi
mov
xchg
movsl
mov
jo
mov
mov
paddb
mov
inc
xor
fld
cmpl
je
je
jbe
and
sbb
imul
mov
int
or
test
enter
jg
orb
jbe
clc
je
lret
fisttpll
call
push
les
sub
into
and
leave
pop
scas
push
lret
cwtl
sbbl
sbb
arpl
cmp
lret
out
add
daa
inc
push
cli
lds
out
daa
icebp
dec
daa
aad
pop
icebp
cmp
sub
lods
dec
movsb
mov
cmp
or
xor
loop
pop
fcompl
mov
push
daa
movsl
cmc
nop
mov
cwtl
jns
mov
pop
mov
mov
fs
or
or
xor
aad
lock
fucom
xchg
cmp
cs
into
fidivl
imul
fstl
xchg
cwtl
js
or
pop
sbb
les
mov
cltd
mov
cmp
pop
and
insl
test
push
add
gs
push
je
dec
call
dec
cmp
rorb
rolb
jnp
arpl
cmp
pop
rorb
xor
scas
sarl
iret
loop
pop
mov
movsl
clc
cmp
or
mov
cmp
arpl
cmp
xlat
in
xor
leave
mov
fldcw
mov
sub
pop
fs
cmp
cli
add
mov
cmp
xchg
popf
stc
not
out
cs
xchg
push
aad
stos
cli
jns
cmp
jl
inc
dec
sub
inc
bound
mov
dec
aaa
dec
das
mov
leave
lods
pushl
xchg
or
setg
jmp
icebp
push
lods
movlps
sarb
aam
xchg
jo
inc
xchg
cwtl
outsl
dec
push
pop
and
or
sub
mov
js
test
jp
insl
push
mov
clc
dec
mov
push
jl,pn
adc
pop
inc
lods
test
ss
xchg
lcall
leave
sbb
leave
stos
mov
sbb
iret
popf
dec
mov
mov
aas
cmp
xchg
addl
add
jne
repz
out
xor
pop
inc
push
dec
pop
nopl
mov
dec
or
mov
mov
add
push
lock
push
jecxz
nop
gs
ja
adc
les
jecxz
pop
mov
stos
sar
pop
xor
mov
inc
and
jae
xor
sbb
lahf
popa
cwtl
insl
xor
sub
out
pushf
ret
sti
push
inc
mov
flds
add
mov
cs
loopne
arpl
pusha
adc
addl
add
pop
in
mov
scas
sbb
cld
fidivs
in
mov
push
dec
icebp
inc
push
push
int
popf
fists
push
das
negl
and
sbb
mov
mov
and
gs
frstor
mov
cwtl
int
out
pop
inc
pop
les
mov
xchg
mov
leave
addb
cs
imul
mov
mov
mov
push
roll
jg
in
in
pop
cmc
sbb
cmp
cmp
cmpsl
ret
outsb
psubd
int
fisttps
out
or
cmp
fisubs
stc
lods
sbb
ljmp
xor
or
jl
sub
scas
jp
push
bound
test
aas
and
call
int
adc
cmp
mov
push
fldenv
lret
push
xchg
lret
cld
adc
push
fldcw
add
rclb
lock
popf
and
pop
xor
clc
mov
push
cld
lret
or
push
call
sub
xchg
repnz
data16
rcrl
shll
add
pop
push
int
mov
inc
in
pop
push
push
addb
loope
sub
scas
mov
mov
test
sub
stos
xchg
xor
push
shlb
sub
movsl
js
cltd
and
imul
or
sub
adc
and
sbb
jmp
in
dec
mov
jmp
aad
xchg
mov
xorl
push
sub
and
jl
js
jb
gs
scas
cmp
arpl
jmp
cmpsb
push
es
insl
leave
lea
push
mov
mov
stos
orl
cmpsb
add
rcrb
sbb
jmp
sbb
jb
clc
and
fisttpll
faddl
adc
sbb
aas
jo
lea
sahf
cmp
adc
shll
in
pop
mov
jg
sbb
cld
or
cltd
jmp
fdivl
stc
es
hlt
sti
push
and
mov
jne
sbb
adc
aam
and
add
fisubl
cli
scas
lock
cmpl
sbb
cmp
scas
lret
jle
loopne
inc
in
jl
add
mov
adc
mov
mov
push
dec
ficomps
lods
sub
lods
popa
clc
xor
pop
out
fcmovbe
hlt
adc
jle
add
loop
add
nop
nop
adc
or
sbb
shrl
xor
adc
subl
adc
nop
cs
repz
fcoms
sub
mov
mov
sti
mov
jnp
mov
movsl
mov
in
dec
xlat
dec
aad
pushf
xchg
arpl
pop
inc
out
xchg
jo
add
and
repnz
and
mov
inc
std
adcb
cltd
jns
mov
lock
rorl
xor
testb
add
xchg
call
in
pop
daa
cs
dec
std
and
dec
add
btcl
mov
mov
arpl
jne
hlt
sbb
add
xchg
fwait
daa
gs
add
pop
cwtl
pushf
jmp
push
sahf
pop
movsb
cmc
fs
imul
dec
popa
mov
jmp
ds
mov
adc
std
jb
cmp
es
into
cs
bound
lea
xor
lahf
sub
lret
adc
fiaddl
mov
adc
in
fimull
int3
shlb
xor
sbb
pop
inc
inc
movsl
cmc
pushl
lret
orb
out
push
fimuls
and
mov
mov
jne
jg
dec
xor
out
lret
jnp
dec
inc
sub
or
fwait
mov
dec
stos
dec
mov
stos
lea
stos
in
repnz
sub
lahf
jmp
ds
add
mov
jge
sbb
push
push
push
cmpps
outsb
lods
push
jo
xchg
insb
xor
in
fs
push
inc
add
jmp
inc
jmp
add
test
mov
ss
sbb
mov
and
dec
lods
lds
pop
adc
jbe
mov
xchg
test
mov
jmp
mov
push
enter
or
push
and
fs
push
dec
jge
in
ds
mov
and
nop
jns
sbb
adc
mov
dec
insl
lods
or
push
push
and
jecxz
xchg
jne
cmp
fwait
mov
jae
push
and
mov
ror
add
rep
insl
jo
fs
out
add
sub
add
mov
or
lds
inc
int
sbb
sbb
fsubl
cltd
sub
pmulhw
das
jo
xchg
jnp
in
iret
adc
jmp
add
popa
divb
pop
loope
push
test
jae
pop
mov
test
push
inc
push
xchg
inc
outsb
push
push
jecxz
inc
mov
adcb
inc
jne
jmp
xchg
ja
pop
lret
add
sub
mov
insl
pop
and
mov
add
pop
push
rolb
iret
add
xor
adc
ja
mov
jb
xor
insb
xorb
ret
leave
jle
scas
cli
in
cmc
or
or
push
add
sub
ds
dec
jecxz
daa
stos
xchg
les
jl
ja
ss
mov
jp
insb
jmp
pop
xchg
aad
push
push
data16
sbb
mov
sub
sbb
aas
fwait
cmc
inc
std
orb
xor
sbb
and
lea
lock
mov
push
add
cs
cmp
fcoms
iret
popf
notb
subl
addr16
lods
lret
lea
jg
xor
sti
sti
rcrb
test
fists
mov
lods
jmp
ja
mov
pop
fbld
jo
enter
or
hlt
imul
push
jg
or
in
inc
push
add
jne
je
frstpm(287
jne
iret
sti
push
jnp
nop
loopne
clc
loope
mov
dec
loope
mov
xchg
push
mov
les
lahf
dec
sbb
dec
jge
pop
adc
dec
aaa
pop
push
dec
popa
cld
fnstsw
pop
push
ficoml
lret
divb
mov
xor
mov
jl
psubb
pop
or
shrb
mov
stos
jbe
mov
js
sahf
leave
dec
cld
mov
int3
pop
or
lock
xchg
sub
jle
das
push
iret
adc
sub
cwtl
xor
adc
mov
arpl
mov
lcall
mov
repnz
pop
jno
int3
movsl
arpl
cmp
in
repz
mov
mov
aam
xor
pop
fs
mov
xor
pop
xchg
cmpsb
push
sub
mov
xor
jl
push
loop
mov
fcmovu
dec
gs
std
inc
mov
sub
jle
cmpsl
rcl
mov
xor
sbb
sbb
xchg
int3
cmpsb
or
inc
and
adc
push
leave
pop
out
rcr
or
adc
adc
lahf
xchg
jecxz
mov
jae
mov
dec
loop
cmp
stc
ja
push
sbb
aad
mov
test
or
inc
sti
lahf
addr16
ljmp
mov
mov
xlat
movsl
mov
stos
fimuls
dec
inc
jns
mov
imul
enter
mov
mov
pop
movsl
mov
jg
in
leave
mov
mov
jp
xor
sub
or
popl
or
shr
fbld
sbb
ss
ljmp
mov
rorl
xchg
neg
pop
es
cltd
mov
mov
jmp
cmp
leave
xchg
adc
adc
inc
test
or
sahf
cltd
imulb
bound
dec
sbb
fs
push
xchg
loope
jbe
ds
mov
sbb
jl
mov
and
xchg
loop
adc
cmp
dec
add
ljmp
pop
push
mov
pop
in
jnp
xchg
ret
mov
enter
lods
or
imul
inc
loopne
jo
and
pop
ror
pop
imull
push
sbb
dec
aas
stc
dec
and
jle
arpl
sub
rcr
lods
shlb
sbb
movsl
pop
sbb
cmpsb
mov
mov
sub
pushf
dec
jle
or
pop
nop
sti
rorb
and
or
xchg
add
inc
das
popf
or
push
xchg
out
iret
xlat
sbb
fdivrl
aam
shll
pop
call
mov
mov
mov
jo
sub
sbb
and
nop
push
pop
lock
add
jl
rorl
cs
push
ds
cmpsb
push
push
bnd
mov
xor
or
inc
xlat
call
push
std
dec
enter
xor
hlt
push
shlb
ljmp
lea
js
jb
xchg
or
mov
mov
dec
insb
addr16
dec
imul
sahf
mov
xlat
mov
push
repz
sub
mov
cmpb
stos
popf
sbb
mov
aad
pop
std
xchg
mov
pop
divps
ret
shll
mov
pop
and
mov
or
adc
fnstcw
outsl
out
sub
lret
dec
fadds
dec
jmp
pop
and
addr16
push
push
xchg
mov
pop
clc
cmp
cmp
cli
cwtl
loope
add
sbb
push
sahf
les
xchg
and
inc
mov
dec
xchg
mov
mov
xchg
or
mov
jo
mov
ljmp
scas
fxrstor
loop
pop
pop
inc
cmp
add
inc
xor
fnstsw
lcall
inc
mov
xchg
mov
andb
adc
mov
dec
nop
int3
push
xchg
into
lods
xchg
inc
inc
mov
fisttps
mov
jmp
cmp
xor
xlat
pop
loope
shr
icebp
int3
pop
mov
inc
sub
add
cmp
sub
jge
xchg
cmc
adc
xchg
ljmp
popf
mov
ficoml
pop
xchg
push
and
jo
int
xchg
and
pusha
push
pop
shlb
and
dec
std
outsb
mov
add
push
aas
je
xchg
sub
xor
xchg
call
stos
dec
test
cmc
je
bound
cmpl
sti
mov
out
xchg
nop
push
mov
or
daa
in
pop
rcrl
xchg
int3
mov
mov
xchg
push
fists
daa
mov
les
mov
add
cmp
xchg
push
aas
out
aaa
enter
xor
fidivs
fistps
cmpl
cmpsb
aaa
cmc
mov
pop
pushf
cmp
hlt
xor
and
sarl
aad
imul
filds
daa
inc
into
and
sbb
cmc
fimull
mov
shll
xchg
xchg
ja
outsb
lret
mov
dec
jmp
lahf
push
dec
lods
add
add
adc
or
fwait
mov
mov
adcb
stc
repz
rorb
cmp
loop
pop
push
divl
mov
in
jnp
sbb
mov
push
push
pushf
leave
fs
loopne
es
aad
xor
mov
mov
adc
xchg
jne
fisubl
adc
cmp
push
xchg
adc
shll
add
adc
cmpsl
jl
fldt
adc
mov
push
jp
jmp
imul
lahf
pusha
jmp
inc
mov
stc
scas
arpl
mov
aas
push
sub
outsb
push
xchg
sarl
pop
jne
mov
push
scas
pop
pop
xlat
sub
sub
pushf
mov
daa
push
mov
inc
cmpsb
adc
fcoms
mov
adc
push
cmp
enter
jne
pop
dec
ret
jp
jnp
xor
xorb
and
inc
in
lock
loope
outsl
rcr
mov
scas
and
fsubl
dec
shrb
pop
popf
les
sbbl
pop
es
mov
ljmp
lods
push
clc
out
pushf
outsb
xchg
sbb
shlb
jns
or
testl
fisttpll
movsb
sbb
out
jae
sub
pop
xchg
sbb
in
pop
outsl
adc
push
push
inc
push
mov
jns
mov
push
pop
cmp
rcl
mov
add
mov
pop
sbb
xchg
cs
lods
loopne
push
repz
pop
out
scas
mov
imul
aas
imul
jbe
and
and
jbe
adc
push
pop
push
sub
dec
mov
mov
testb
mov
icebp
mov
pushf
pop
push
dec
fbstp
add
mov
inc
inc
movsl
inc
loopne
xor
out
add
jge
pop
push
xor
cmp
adc
or
sbb
nop
clc
mov
stos
in
add
enter
gs
add
pop
xchg
shr
inc
stc
mov
sub
aaa
mov
into
add
xchg
loop
dec
mov
dec
push
adc
sbb
cmp
jmp
mov
std
xor
cmp
testb
daa
mov
enter
syscall
or
lret
lock
cmp
ss
xchg
jns
hlt
je
leave
add
xchg
and
sub
and
inc
cs
lret
add
das
push
fisubl
and
pushl
or
les
push
xor
push
push
dec
iret
dec
push
leave
cmp
rolb
or
cmpsl
jb
imul
add
push
adc
test
hlt
rcrb
cmpb
dec
xchg
jo
out
cmp
or
daa
cmpb
pop
in
ret
jge
mov
scas
scas
xlat
cmc
mov
gs
addr16
and
push
pop
daa
xor
shl
fimull
in
ljmp
mov
dec
xor
and
mov
aam
dec
push
fisubl
fcmove
imul
mov
aas
sbb
sbb
push
mov
xor
mov
cmc
push
push
jl
ds
pop
jmp
xchg
mov
jl
and
push
dec
fwait
sahf
gs
cltd
xor
jns
jne
push
mov
or
inc
or
mov
aaa
xrelease
mov
pop
mov
or
pushf
out
inc
dec
nop
push
fidivrl
fisubl
or
ja
bnd
push
dec
push
sbb
sub
test
shll
and
sub
js
sbb
xor
sub
popa
jno
jo
pop
in
test
int
push
mov
xor
xor
xor
shr
hlt
aam
push
int
xor
sub
xor
sbb
mov
add
rcl
mov
inc
loopne
add
pop
imul
mov
jge
cwtl
outsb
test
imul
in
es
dec
ret
mov
mov
pop
xor
jge
pop
sbb
loope
push
div
xor
fidivs
sbb
lock
frstor
pop
push
stos
fld
mov
in
mov
hlt
ficoms
scas
ret
mov
jns
stos
aad
movsb
add
mov
mov
add
out
sbb
nop
insb
outsl
aaa
and
loope
adc
adc
bound
push
xchg
jae
insl
dec
xor
mov
pushl
jg
pop
xor
xor
sbb
pop
daa
data16
xchg
subb
mov
mov
sti
sub
cmp
jbe
nop
mov
xor
push
push
in
mov
or
jmp
sbb
pop
das
dec
or
and
mov
je
mov
out
mov
xchg
dec
cmp
and
clc
inc
jmp
jmp
loop
aad
fs
jl
push
js
hlt
sub
adc
mov
and
or
scas
lods
data16
sub
xor
mov
jg
pop
imul
in
jg
loopne
clc
push
mov
jb
mov
xchg
das
in
es
cltd
leave
mov
lock
sbb
cmp
lret
rorb
xchg
xlat
stc
jmp
xor
inc
leave
mov
mov
or
or
in
or
pop
xlat
jg
adc
xchg
dec
mov
inc
xchg
push
lret
jle
mov
cmp
jl
inc
pop
jge
mov
mov
pop
add
dec
sbb
xchg
mov
jae
mov
mov
xchg
jbe
add
shlb
stc
addr16
mov
xchg
into
clc
loope
push
mov
xchg
mov
into
ret
pop
inc
int
cmp
gs
dec
inc
rolb
inc
dec
or
pop
loopne
cmpl
cmp
or
and
inc
out
mov
cltd
out
or
rorl
pop
rolb
pop
into
jmp
mov
icebp
daa
pop
add
adcl
add
dec
or
inc
ljmp
and
mov
sbb
daa
pop
data16
mulb
xchg
adc
xor
pop
call
ret
rcll
jnp
dec
cmp
hlt
ret
mov
jne
gs
sti
sub
movb
push
mov
ljmp
or
xor
mov
mov
repnz
jle
mov
les
scas
icebp
mov
lcall
mov
cmpsl
in
cmpb
push
adc
push
dec
repz
jle
fildl
xchg
xchg
mov
loopne
fcompl
sub
push
pop
ret
and
xchg
cmpb
sbb
mov
mov
lods
pop
and
les
pop
xor
enter
packuswb
jnp
push
movsl
dec
mov
decl
pushw
cmc
jne
or
nop
jg
cltd
cwtl
pop
xor
adc
iret
into
xchg
adc
push
data16
pop
ficomps
setne
jmp
mov
clc
ficompl
push
fistps
pop
mov
fcmovnu
es
add
pop
arpl
ret
pop
adc
test
popa
pop
sub
dec
xlat
inc
rclb
sbb
orl
bound
push
push
mov
cmp
pusha
stc
stc
mov
xor
mov
addr16
scas
sbb
mov
adc
xchg
sub
dec
xchg
into
mov
xchg
movsb
adc
push
sub
hlt
das
sbb
fs
jne
fldl
mov
push
add
jmp
roll
loopne
sahf
cmp
aam
or
dec
pop
out
loope
and
addl
adc
add
xchg
mov
xchg
movsb
gs
pop
icebp
xor
nop
sub
xchg
sbb
dec
mov
xor
sub
push
mov
orb
mov
inc
inc
popf
push
dec
out
insl
jbe
sti
je
adcl
int3
outsb
xchg
gs
cmpl
cs
cmp
mov
push
add
jnp
imul
dec
adc
in
mov
movsl
pop
sub
jbe
jbe
sub
bound
stos
xor
jo
pushf
aaa
inc
cltd
lods
mov
in
dec
xlat
subb
inc
push
push
sahf
xchg
int
sbb
icebp
push
sub
ljmp
in
mov
std
dec
dec
les
and
inc
or
lret
ret
fdivp
jae
leave
hlt
pop
testb
into
and
jo
js
jge
jb
int
inc
fcmovnu
lods
mov
out
sub
lahf
fstl
pop
leave
es
repz
push
inc
push
outsb
xchg
nop
lret
sbb
add
nop
cmp
mov
pop
push
addl
out
test
cs
add
mov
pop
pop
call
inc
stc
inc
push
add
mov
enter
mov
test
gs
ret
mov
scas
lahf
xchg
push
sbb
call
movb
out
mov
mov
xor
cmc
cmpsl
popa
hlt
adc
int
cmc
adc
and
aas
jmp
sti
or
and
mov
inc
mov
mov
dec
xor
inc
bsr
cmp
loop
fcompl
ficomps
sub
adc
andl
sbb
shll
aaa
jbe
add
inc
sbbb
imul
pop
mov
imul
inc
enter
inc
popa
push
or
pop
xchg
cwtl
xor
stc
rcl
je
xor
outsb
jg
xor
inc
mov
mov
int3
xchg
xchg
in
and
cmp
lret
lds
push
pop
stos
push
out
sbb
ret
pop
cmpb
pop
scas
outsb
cmpb
push
gs
push
das
xchg
movsl
stos
cs
rcrb
test
aad
test
dec
nop
aas
cld
in
dec
in
jbe
adc
into
subb
fwait
jp
push
or
incl
and
pop
cli
mov
lcall
cmp
mov
lea
pop
cmpsl
arpl
ss
or
out
lcall
xor
push
pushf
push
and
orl
xchg
fwait
push
ret
es
sarl
mov
mov
xor
lahf
jg
inc
mov
and
sub
lret
cltd
sbb
push
or
mov
jne
ljmp
adc
jmp
jle
out
adc
cmp
and
xchg
adc
loope
int
and
inc
adc
add
test
imul
jb
loope
imul
mov
cmp
into
xchg
lret
sub
cli
shl
and
jne
std
lea
leave
cli
and
cmp
es
hlt
mov
adcb
adcb
cld
test
cmp
pop
out
mov
mov
daa
sbb
inc
push
xchg
jns
mov
loop
in
push
and
call
cmpsl
inc
iret
pop
pop
jg
int
stos
sarl
movsl
rcr
fmulp
sub
mov
pop
loopne
imul
cmc
mov
orl
push
xor
or
dec
test
or
jnp
in
and
dec
scas
pop
sub
fisttpll
lret
loop
inc
sarl
clc
cli
shll
mov
out
push
push
mov
pop
jno
shll
add
in
push
stc
adc
cmp
iret
jae
out
xchg
inc
out
jp
in
sbb
imul
daa
dec
dec
rolb
pop
loop
out
leave
jo
add
push
mov
pop
fdivrs
add
ljmp
sub
xchg
xor
inc
jl
mov
movsl
negl
addr16
xchg
lcall
push
jg
fnsave
cld
xchg
push
mov
mov
mov
negb
jbe
loop
jmp
inc
xor
popf
test
mov
js
xchg
cmp
in
dec
gs
xchg
mov
scas
dec
jle
xlat
sti
inc
movsb
cmc
cmpsb
fdiv
mov
push
addr16
inc
rcll
push
addr16
arpl
add
sub
mov
dec
jbe
cmp
jns,pt
andb
and
lods
jge
and
shlb
test
fimull
movsl
decl
ja
and
iret
out
rolb
fwait
daa
cwtl
add
sbb
lods
xchg
sub
outsb
push
sahf
outsb
lret
mov
test
sub
popa
mov
rcll
int3
adc
les
mov
jb
and
movsl
int
inc
lods
jecxz
jp
pop
int3
sub
mov
cmp
test
icebp
fdivr
mov
jmp
cmpb
lods
cmp
pushw
and
addb
lahf
cmp
clc
sbb
scas
push
cld
xor
sahf
idiv
test
cwtl
push
or
add
or
pop
dec
pop
jno
inc
test
and
mov
fists
mov
ljmp
xor
lods
add
pop
int3
addr16
mov
scas
inc
lods
cmp
mov
out
cmp
clc
sbb
fs
test
arpl
cs
lods
or
ja
stos
sbb
int3
movsb
and
ss
outsb
mov
add
movsb
cmp
jl
out
gs
addr16
mov
faddl
xchg
enter
sub
lods
and
popa
sub
ljmp
lret
rcrb
cmp
xchg
mov
cs
in
pop
jne
mov
cltd
imul
enter
sub
lret
xor
xor
jmp
xchg
add
xchg
pop
dec
mov
scas
push
pop
xchg
mov
fidivl
std
push
fucomip
popf
pop
aad
push
mov
add
rol
or
ficoms
les
cmp
xchg
rorl
pop
add
lds
cmp
xor
into
out
or
bound
cmp
xor
and
push
lea
and
fiaddl
push
out
mov
sbb
insb
call
push
mov
or
push
mov
fistpll
push
cmp
aam
xchg
push
les
pop
xchg
push
pop
xor
js
fmul
jmp
fcomip
adc
aas
fdivr
es
inc
lods
mov
push
je
arpl
and
jno
cwtl
call
ja
hlt
push
mov
pop
das
shr
data16
int3
ret
lods
les
cmp
testb
outsb
js
aas
or
jge
fcompl
loop
ljmp
es
sti
jno
and
lea
out
adc
mov
dec
inc
test
mov
in
rcl
dec
jge
mov
repz
rcl
or
stos
xlat
pop
xor
adc
in
cmp
inc
jne
loop
stos
xor
minpd
sbb
mov
testb
xchg
lods
sub
lcall
dec
mov
dec
mov
add
push
and
fdivs
add
mov
push
pop
sbb
sub
sub
shrb
fidivrs
push
jo
pushf
mov
adc
mov
icebp
cmp
mov
dec
xor
cmp
mov
fnstsw
jne
or
cli
pusha
lock
jno
xchg
ret
adc
xchg
pop
cltd
mov
pop
or
pop
flds
iret
inc
je
mov
movsb
xchg
mov
push
aad
fs
sub
lret
push
arpl
mov
xor
repnz
jb
idivl
cmp
leave
push
sbb
dec
jae
mov
sbb
shl
adc
popf
sahf
inc
xlat
adc
adc
xchg
cmp
push
mov
pusha
pop
xchg
arpl
xlat
aaa
pop
and
pop
jle
mov
cmpl
gs
adc
daa
add
je
lds
sbb
mov
adc
popf
xor
mov
gs
mov
bound
cmp
jb
hlt
movsb
rcll
fadd
cld
pop
cmp
mov
test
fidivs
or
out
jns
pop
loopne
mov
pop
cmp
in
mov
int3
in
ja
ja
in
and
arpl
aad
adc
xor
jne
jp
mov
lods
and
jbe
mov
jecxz
xchg
adc
mov
xor
mov
inc
inc
repnz
lock
lock
jne
pop
sahf
dec
sbb
add
bnd
test
cmp
add
lcall
je
mov
adc
and
jge
adc
pop
int3
jnp
mov
ss
mov
nop
and
push
jmp
fnstcw
or
mov
push
subl
adc
dec
add
push
push
push
stc
insl
pop
gs
outsl
or
sbb
and
data16
js
inc
mov
loopne
pop
jl
sbb
aas
lods
call
push
jmp
mov
cs
ds
xchg
mov
icebp
dec
cli
clc
push
cmpsl
pop
inc
jecxz
out
push
or
mov
sahf
adc
fidivrl
fwait
mov
stc
jle
inc
xor
hlt
in
sarb
lcall
xor
or
jae
fldcw
push
adc
imul
add
cmc
mov
sub
or
push
mov
stos
mov
ror
fsubl
data16
mov
inc
pop
iret
cmpsl
mov
cmp
call
outsb
sbb
sub
daa
pusha
xor
pop
jb
mov
push
jecxz
fldenv
ret
dec
xchg
mov
inc
bswap
adc
xor
mov
cmp
inc
jne
and
arpl
xchg
and
dec
pop
jl
dec
mov
or
xchg
pop
leave
mov
ror
out
dec
dec
dec
ret
lret
mov
test
aaa
dec
sub
es
xchg
xorl
ja
sti
je
cmp
jb
push
leave
leave
loope
fcmovb
mov
adc
jmp
cmp
fildl
and
lods
icebp
jg
and
notl
leave
push
pusha
dec
mov
clc
dec
dec
aas
pop
and
cmpsb
sbb
cmpsl
cmp
out
lds
das
outsl
mov
nop
fcomip
enter
dec
xchg
arpl
fs
or
add
ds
or
xchg
adc
and
mov
mov
aas
or
jg
sub
jns
int
push
jno
cmp
aam
add
push
sbb
mov
repnz
fdivrp
pop
ljmp
jo
sub
shlb
scas
enter
jp
je
sbbb
pop
imul
push
push
sarl
loop
push
loopne
ret
mov
rcrb
leave
clc
fisttps
jge
daa
xlat
sbb
shll
ja
in
mov
shl
orb
icebp
je
fisttpll
pop
add
inc
out
adc
push
out
in
mov
and
insb
xchg
stos
insl
in
test
pop
mov
jle
aaa
push
pop
out
cwtl
xchg
push
orb
shll
pop
jb
shlb
jmp
mov
inc
add
mov
ds
test
iret
fwait
sub
and
pop
int
je
mov
cld
f2xm1
jp
jle
add
mov
lahf
std
xor
in
ljmp
cmp
cmp
enter
gs
loopne
int
mov
sub
call
pop
jge
int3
in
test
outsl
sub
inc
xchg
sbb
and
mov
sub
cwtl
in
fnstsw
sub
mov
jmp
ss
xchg
jne
leave
stos
and
testl
adcb
in
lock
insl
dec
pop
add
jecxz
mov
inc
into
in
dec
test
pop
daa
push
push
imul
push
jo,pn
add
push
cmpb
lahf
dec
scas
sub
je
push
and
sub
sbb
lods
loope
or
jge
out
pop
fimull
xchg
pop
pop
xchg
into
adc
cmp
mov
and
ret
mov
hlt
mov
cmp
add
iret
jnp
push
lret
fcomps
cmp
push
lock
ja
mov
test
sbb
add
xor
sti
xor
sbb
cltd
sub
lcall
imul
insl
shll
adc
xchg
pop
push
and
stos
leave
cmp
popa
dec
loop
push
divb
mov
ds
lahf
dec
fistl
das
data16
pop
fistpl
mov
xchg
imul
rclb
test
pop
out
dec
dec
and
mov
pop
dec
or
push
jbe
out
pop
sub
movsl
cmp
dec
sbb
or
sbb
sub
xchg
jb
or
cmpsb
sbb
jbe
inc
mov
mov
and
jns
enter
xor
sub
mov
iret
aam
stos
add
in
shlb
and
inc
aas
cmp
mov
inc
bound
sbb
adc
rcr
out
aam
xor
movsb
movsl
or
cmp
clc
or
xor
outsb
mov
inc
imul
cmp
jmp
jg
xor
mov
inc
push
inc
imul
pop
and
and
dec
push
mov
aam
pop
insb
jmp
mov
mov
sti
sub
dec
pop
and
pop
js
scas
xlat
lret
xchg
inc
xchg
xchg
aaa
mov
les
std
in
icebp
xor
sub
cld
arpl
scas
jne
negl
add
inc
stos
xor
pop
mov
push
ljmp
mov
pusha
hlt
pop
adc
call
notb
movsl
xor
cld
outsb
add
loopne
mov
mov
mov
movsl
inc
pop
push
iret
lcall
mov
jmp
inc
adc
fstpt
leave
int
in
jl
jo
in
pop
mov
gs
jne
aaa
cmp
outsb
push
push
clc
incl
dec
fldcw
add
mov
pop
int3
ret
movsl
xor
xchg
in
test
rcl
xchg
or
sbb
hlt
mov
sub
fsub
or
mov
mov
xchg
sbb
ja
mov
mov
cmp
or
scas
into
pop
mov
cmp
js
bound
add
add
adc
imul
mov
gs
pop
out
sub
int
lods
dec
or
cmp
loopne
fadd
int3
mov
sub
adc
popf
into
inc
mov
jle
add
cmp
pop
mov
out
pop
movsb
jg
out
jl
cs
push
pop
mov
cmpl
rcr
test
jb
xchg
mov
sbb
jl
pop
jg
clc
das
das
repnz
jl
pop
pusha
pop
je
mov
adc
pop
movsl
mov
push
and
sahf
repz
lahf
xor
sbb
xor
stc
clc
stos
cld
add
and
bound
push
scas
pop
pop
add
push
dec
cmp
stos
mov
je
xchg
addr16
inc
mov
xchg
sahf
mov
adc
or
mov
pushf
scas
sahf
xor
dec
xor
enter
out
cmp
sbb
push
arpl
mov
mov
jae
cmp
inc
push
data16
dec
xorb
push
insb
inc
andb
roll
push
jae
dec
add
jnp
cmp
lret
cwtl
lret
sub
or
push
jl
jo
fdivrp
inc
pop
shl
mov
dec
out
pop
arpl
mov
adc
fwait
cmc
fs
jge
inc
xorl
xor
mov
lahf
mov
pop
insl
xchg
aad
mov
pop
gs
sti
and
lret
push
decb
or
lods
sbb
in
js
insl
sbbl
pop
outsb
mov
data16
and
mov
les
pop
test
stos
jmp
pop
jne
stos
xor
rorb
jg
sub
push
push
outsb
mov
roll
pop
push
xlat
jae
loopne
cmp
add
fucom
jg
jnp
sub
fnstsw
push
cmc
in
nop
rclb
dec
shll
dec
push
es
shlb
adcl
cltd
test
mov
push
dec
pop
aaa
pop
ja
aad
and
lods
dec
mov
cmpsb
addl
and
sbb
lods
sub
mov
jo
jns
jge
push
out
sahf
shll
icebp
mov
push
dec
pop
sub
lods
std
test
ja
push
out
mov
enter
loope
inc
cmp
shlb
inc
xchg
xchg
nop
or
call
clc
lods
sub
push
jbe
add
enter
jg
jae
mov
cltd
xor
popa
fcomip
jbe
popf
fwait
add
mov
pop
fsubl
lret
mov
pushf
test
mov
lods
divb
arpl
push
sahf
sbbb
mov
and
mov
fwait
sbb
icebp
in
lcall
cmpsb
fcmovnu
mov
aad
cmp
inc
adc
roll
sbb
xchg
fists
int3
jae
xchg
or
gs
push
or
push
sbb
ja
movsb
jnp
push
jge
mov
and
popf
shlb
dec
inc
xchg
cmp
jae
dec
add
out
fdivs
xchg
loope
fdivrp
mov
adcl
add
pop
lods
cli
mov
pop
popa
fwait
jmp
push
inc
mov
and
int3
sti
xor
inc
icebp
jne
sub
and
push
insl
jg
das
rcll
out
pushf
jbe
add
repnz
sub
scas
ljmp
rclb
jno
mov
jb
outsb
jg
xchg
mov
jmp
inc
mov
movl
movsl
mov
or
jno
scas
xor
inc
shll
pop
pop
jp
jb
adc
cld
xchg
fsub
adc
arpl
insb
fisttpl
jae
and
test
fisttpl
loop
ja
ret
xchg
scas
inc
test
out
pop
mov
jae
mov
loop
cmpsb
andl
cmp
push
mov
mov
lahf
fwait
pop
and
push
push
dec
ret
lods
adc
fldl
xchg
es
mov
sbb
out
jg
xchg
aaa
mov
mov
popf
pusha
lahf
std
orb
mov
adc
xchg
icebp
outsl
in
xchg
mov
subl
xchg
bound
push
enter
pop
pop
jb
out
xor
cmpsb
add
jnp
mov
enter
xchg
xchg
sahf
mov
mov
mov
es
popf
bnd
sar
ljmp
pop
fldl
int
adc
ja
inc
in
cmp
flds
stc
testl
pusha
adc
push
pop
pop
cmp
out
nop
mov
mov
imul
or
and
mov
ret
push
out
das
inc
pop
rorb
pop
aas
push
dec
sub
frstor
fwait
jmp
ja
mov
jnp
je
jmp
mov
push
mov
std
ret
mov
mov
adc
mov
mov
mov
dec
inc
popf
push
dec
or
dec
idivb
jb
mov
in
cmp
push
cs
test
lods
out
movb
jb
pushf
rcr
mov
cmpl
das
dec
mov
cmc
test
jmp
mov
cltd
movsl
rorl
je
xchg
add
jmp
pop
jb
ds
test
push
daa
hlt
fdiv
adc
stc
stos
mov
lcall
and
fistpll
sarl
sbb
pop
adc
mov
pushf
lock
mov
jbe
push
xchg
mov
lods
lds
dec
test
pop
pusha
push
mov
mov
in
divb
gs
jb
mov
lret
jns
inc
dec
push
jae
in
movsb
push
repz
cmp
pop
mull
dec
daa
cmp
mov
aad
push
add
adc
or
mov
pop
mov
and
sub
mov
shll
es
test
sbb
sbb
xchg
inc
pop
cmp
loopne
xchg
jnp
daa
rclb
dec
daa
lds
dec
cmpsl
sub
lods
pop
and
stos
and
fldenv
cwtl
or
xor
cmp
jnp
inc
int
cmpsl
fmuls
lret
or
push
push
cld
mov
rolb
adc
aaa
ret
xor
bound
sbb
cmpl
jmp
inc
sbb
lods
stos
inc
out
orb
inc
shrl
add
dec
int3
js
mov
test
adc
fldenv
mov
out
daa
fisubrs
jle
fcoml
sub
pop
test
out
inc
push
mov
add
cwtl
push
repz
and
repnz
add
mov
pop
ljmp
sub
mov
or
movsb
dec
push
daa
in
mov
pop
into
push
test
xor
jae
adc
pop
mov
mov
or
push
stos
into
dec
or
out
mov
xor
dec
dec
inc
mov
inc
iret
dec
xor
les
inc
fisttpll
mov
andb
jp
ja
pop
daa
test
pop
lret
xchg
sbb
mov
pop
movsl
cmpsl
addr16
pusha
xor
sbb
pop
jno
cs
subl
lea
adc
out
cmp
sub
sbb
cmp
or
daa
fs
ds
mov
cmp
int3
mov
sbb
dec
aaa
popa
lods
cmc
lods
dec
mov
push
addr16
ja
test
sbb
mov
outsb
mov
xor
leave
mov
push
addb
jne
rcrb
jbe
sbb
dec
adc
loop
add
pop
xchg
mov
lods
pop
lcall
hlt
inc
movsb
cmpsb
sbb
fisttpl
jecxz
mov
test
in
xor
sub
xchg
rolb
mov
sub
out
ljmp
out
jl
sub
fcmovnb
push
out
jecxz
and
sti
jnp
leave
cmp
or
add
ljmp
cltd
inc
cmp
dec
pop
dec
or
test
movsl
pop
xchg
sub
cmp
insb
mov
mov
loopew
add
test
or
and
mov
and
pop
push
dec
fwait
bound
xchg
clc
ds
in
mov
cmp
popf
cmpsl
pop
daa
mov
out
xor
push
scas
popf
xchg
fwait
add
cli
push
xor
das
daa
filds
push
int3
in
pop
cmp
and
loopne
pop
je
cmp
adc
sub
inc
dec
rclb
lcall
cmp
popa
or
js
rol
sub
sti
xchg
scas
xor
outsl
inc
pop
shlb
sbb
test
in
in
inc
lds
fwait
jne
add
lahf
push
push
pop
mov
addr16
icebp
leave
mov
ror
fnstsw
dec
out
mov
orl
mov
and
pop
rcl
sub
gs
movsb
push
leave
dec
mov
cmp
pop
les
test
repnz
mov
dec
jg
sub
push
mov
mov
jo
cwtl
inc
push
and
add
int3
test
icebp
mov
xchg
lcall
and
lcall
rcr
test
adc
sbb
xchg
mov
xor
cmpsb
mov
add
sbb
andl
mov
divb
jp
das
sahf
sub
insb
fs
push
cld
rdmsr
xorl
dec
pop
or
je
lret
popf
add
icebp
pop
lds
cmp
xor
xchg
jns
sub
and
call
clc
xchg
jbe
ret
fiaddl
mov
lret
jbe
out
dec
nop
call
aaa
or
outsb
insb
jns
cmc
and
cmp
jae
or
in
out
stos
mov
jmp
mov
mov
xchg
adc
lcall
ja
ret
cmpsb
je
in
movsb
lds
mov
nop
jo
fbld
scas
mov
push
mov
loop
iret
addr16
out
sub
jns
jmp
cmp
fldl
imul
ds
inc
lds
push
jne
fs
inc
push
imul
inc
stc
jne
jb
xor
dec
xchg
xor
mov
sub
mov
cmpsl
jmp
fildll
mov
push
xor
loop
arpl
xchg
daa
xor
dec
data16
sbb
xchg
fisttps
fcomps
adc
xchg
xchg
insb
inc
add
inc
test
decl
loope
jmp
lea
dec
push
out
scas
cld
mov
adc
sbb
mov
fistpll
inc
cmp
lahf
scas
addl
outsl
dec
mov
lret
icebp
repnz
and
push
daa
mov
jnp
push
into
testl
in
fisttpll
mov
je
push
leave
aad
fs
pop
and
inc
cmp
push
pushf
dec
daa
cmc
push
xor
cld
imull
mov
mov
xchg
cli
pop
sub
push
idiv
sub
js
pop
std
mov
insb
mov
xchg
mov
rcl
ljmp
jno
dec
push
push
out
xor
sub
repz
xor
daa
cmp
outsb
lods
xchg
sub
test
popa
jmp
in
sar
add
mov
stos
sti
jmp
es
xchg
xor
sarl
jne
adc
jp
cmp
cltd
mov
cmp
movsb
or
adc
mov
or
mov
sub
sarl
jmp
out
jmp
and
mov
or
push
in
scas
es
scas
or
sub
fcmovnbe
pop
cmp
xchg
addr16
adc
stc
cli
in
cmpsl
jle
mov
gs
mov
mov
call
cmp
out
gs
lahf
cmpsb
ja
subl
push
int3
and
jo
mov
fnstcw
mov
ds
negb
push
add
jo
mov
jl
imul
outsb
scas
cltd
inc
cmp
scas
testl
loop
mov
rcr
mov
jmp
scas
adc
push
scas
cmp
jmp
jno
jne
ret
mov
pop
mov
fmull
repnz
inc
jle
sti
add
mov
stos
or
mull
push
ss
sbb
jns
es
js
cli
sbb
push
clc
wrmsr
and
roll
aas
sbb
push
out
dec
xor
pop
add
jp
adc
or
mov
mov
add
bound
enter
sub
inc
jne
aam
fnstcw
xchg
jns
dec
iret
push
imul
aad
lock
mov
inc
or
ret
mov
xchg
jmp
xchg
lahf
or
sub
icebp
push
push
movsb
scas
xor
lret
cltd
in
push
mov
jnp
enter
cmp
dec
fcomps
leave
rclb
cmp
ss
lods
jmp
mov
adc
filds
pop
popf
loop
lret
and
mov
xchg
jb
sbb
mov
cs
pop
sbb
adc
pop
xor
lret
in
inc
call
addr16
into
jo
loope
or
mov
rorb
adc
ds
addb
adc
xchg
push
adc
adc
rep
insl
mov
movsb
add
mov
sarl
inc
ret
ja
pop
push
jmp
dec
mov
sbb
je
lahf
cmpsb
das
mov
cmp
call
iret
jno
cmp
xor
sbbb
mov
pop
sbb
dec
idiv
inc
add
aaa
xor
and
mov
aad
imul
or
stos
dec
scas
mov
cli
and
add
iret
push
jg
mov
into
imul
sub
loope
jle
imul
jbe
or
sbb
mov
jo
add
outsb
inc
pop
adc
bound
adc
sbb
bound
jnp
inc
std
mov
clc
jae
nop
sbb
leave
mov
lea
call
mov
or
fcomp
fildl
inc
shll
pop
pusha
cmp
cltd
pop
or
jmp
xchg
jbe
ret
or
test
leave
xchg
jmp
pop
xchg
xor
dec
fldl
fildl
scas
mov
out
lods
xchg
sbb
or
inc
xor
or
sbb
cs
sbb
roll
pop
mov
xchg
outsb
and
xchg
rorl
scas
jnp
clc
mov
fwait
ret
xchg
dec
and
inc
loopne
inc
daa
mov
dec
aaa
clc
out
lods
dec
movsb
in
cli
outsl
pushl
repnz
mov
pop
push
popf
test
xchg
pushf
outsb
and
fs
test
push
arpl
flds
lods
jmp
fdivrs
jbe
push
cmpsb
scas
xchg
fiaddl
or
cwtl
push
mov
xchg
mov
mov
frstor
xor
lret
cmc
jmp
pop
adc
mov
cld
jae
add
mov
mov
stos
fsubrs
stos
repz
lahf
push
repnz
lcall
scas
and
add
mov
popf
push
ficoml
in
not
mull
in
pop
out
gs
jge
pop
mov
mov
in
call
mov
push
sbb
mov
xchg
or
mov
stc
fxch
fdiv
jno
sbb
add
adc
es
cwtl
pop
mov
mov
pusha
lret
pushf
dec
add
or
mov
mov
fisubrl
add
pop
in
mov
adc
pop
repz
inc
or
or
sti
popf
fldt
adc
mov
inc
imul
ret
lods
pushf
or
push
inc
cmp
xchg
push
out
cmc
das
fwait
and
mov
pushf
adc
push
xorl
fiadds
in
imulb
mov
mov
clc
cs
sbb
sub
sti
mov
hlt
push
jle
cmc
rorb
adc
push
adc
ljmp
inc
xchg
int
jno
dec
mov
clc
cmp
xchg
push
popa
std
dec
mov
mov
in
sbb
mov
dec
test
and
test
inc
xor
mov
test
xchg
popf
repnz
std
stos
pusha
enter
jne
push
mov
aas
mov
mov
fldl
adc
fisubrs
sbb
cwtl
xchg
sbb
aad
movsb
cmc
xchg
push
jmp
popa
fwait
pop
jns
cmp
sub
mov
imul
mov
lock
es
jp
cmp
aad
outsb
imul
jg
or
mov
cmpsb
push
ss
scas
xchg
std
ja
sbb
push
ds
loop
sbb
insl
mov
popa
addr16
pushf
cmp
dec
add
movsb
dec
divl
nop
dec
push
stos
inc
repz
cmp
mov
lahf
dec
xchg
dec
pop
lret
icebp
clc
xchg
outsl
es
sbbl
fsubr
cmp
arpl
lds
xchg
jnp
orps
mov
adc
xchg
sbb
pop
js
push
and
loop
mov
or
mov
sub
jne
gs
int
std
mov
rcrl
fwait
cmp
push
loopne
out
shrl
sbb
mov
jl
loop
jl
sub
or
jbe
adc
fwait
push
cmp
mov
hlt
test
shl
inc
aam
sbb
ret
loope
sarl
or
xchg
divl
lods
and
out
rorb
bound
testl
mov
fildll
ja
cmp
fldenv
jno
push
insb
pop
sti
adc
stc
sbb
std
lahf
sbb
ds
ds
or
scas
xor
repz
add
aaa
sahf
mov
mov
jle
popa
frstor
cmpsb
pushf
mov
sub
sti
add
data16
mov
xlat
mov
fdivp
test
ds
mov
out
push
jnp
mov
aas
jl
pop
or
std
enter
pop
xchg
shrl
inc
xlat
clc
out
cs
fsubrs
out
aas
unpckhps
addr16
cld
xor
vmovupd
cmp
sbb
jg
cmc
test
jg
ret
pushf
xor
add
jle
xor
nop
jp
add
fidivrl
jmp
popa
arpl
and
adcb
add
mov
jmp
sub
clc
add
jne
lahf
cmp
orb
inc
mov
dec
sbb
jnp
fs
sbb
sub
mov
popf
bound
add
cwtl
and
mov
jge
mov
jl
ret
xor
fwait
scas
pop
cmp
sbb
dec
push
aad
mov
je
pop
pop
and
dec
dec
adcb
sahf
inc
add
xchg
ds
aaa
mov
mov
cmp
inc
scas
mov
mov
push
xor
enter
orl
sahf
xor
cli
mov
adc
pop
test
imul
sbb
mov
nop
push
mov
test
cld
jle
pcmpeqb
dec
mov
jb
fcoml
mov
sbb
mov
aam
push
xchg
out
nop
pop
mov
loope
adc
addr16
cwtl
xchg
sbb
jo
pop
shrb
mov
pop
int
inc
xor
hlt
rcrl
xchg
xchg
dec
push
push
mov
fcoml
hlt
and
mov
ja
loop
jge
inc
gs
addr16
or
jl
sub
ss
inc
das
mov
xchg
fcoml
xchg
movsb
mov
negl
ljmp
ds
dec
add
insb
pusha
adc
push
jl
fcomps
in
arpl
dec
ret
scas
out
sarl
cmp
fsubrp
outsl
push
sahf
loopne
int
push
mov
insl
cltd
fidivl
pop
adc
mov
sub
dec
addr16
xchg
insb
nop
dec
in
adc
and
gs
lret
inc
iret
and
aam
mov
pushf
or
sbb
sahf
test
outsl
mov
imulb
jle
inc
loop
push
cli
pop
pop
or
add
xchg
in
sub
sub
xlat
and
daa
sbb
clc
addb
insb
adc
movsb
xor
cli
std
jae
shll
xchg
lock
aas
mov
hlt
daa
ret
xor
mov
pushw
mov
inc
inc
sub
out
mov
xlat
loopne
inc
pop
or
addb
push
inc
sti
lods
repnz
shl
sub
mov
pusha
inc
xchg
mov
sub
in
push
loope
push
sub
iret
mov
pop
lea
scas
or
ficompl
xchg
ficomps
xorl
jp
jmp
mov
sbb
leave
mov
adc
jle
je
adc
adc
xor
xor
fwait
lret
inc
pop
rcrb
dec
clc
mov
outsb
out
rcll
add
fdivl
inc
mov
into
rcrb
jne
out
in
negb
scas
sbb
das
aas
cmp
insb
mov
dec
movsl
std
mov
push
xchg
jmp
out
cltd
mov
pop
push
pop
mov
sub
xor
inc
mov
adc
pop
mov
jb
in
loop
add
dec
mov
insl
test
ja
mov
fbld
orb
clc
add
shl
lcall
xlat
inc
mov
addr16
mov
in
lahf
xchg
or
push
loopne
outsl
add
xor
imul
and
xchg
sarb
pop
cmp
dec
cltd
hlt
cmp
pop
mov
stos
xchg
out
rorb
out
test
aaa
mov
mov
adc
cmp
das
adc
test
es
mov
push
or
xor
mov
enter
sub
lret
jne
not
inc
int
or
dec
dec
pop
out
dec
xor
arpl
mov
pop
inc
repnz
xchg
push
fistpl
clc
inc
arpl
lock
iret
gs
jnp
cmc
lods
sbb
mov
dec
inc
fnstenv
leave
jne
std
out
fstl
and
leave
or
out
xchg
jp
popa
inc
popa
jecxz
mov
daa
in
pop
jecxz
and
add
jl
push
pop
jge
aaa
cmp
addb
adc
imul
sub
adc
mov
sbb
jle
mov
lcall
mov
int
mov
cmp
jmp
imul
cltd
and
xchg
and
out
andl
shrb
out
pop
fimuls
dec
mov
push
cmp
gs
jmp
push
nop
mov
mov
mov
jge
dec
lds
xchg
xchg
lret
mov
out
repz
loopne
xor
in
jae
xor
fmull
jecxz
xchg
rorb
mov
push
pop
jp
jbe
pop
subl
pop
cmpl
stos
add
dec
out
loopne
xor
into
es
enter
mov
xchg
or
roll
movsl
xlat
mul
gs
aaa
sub
adc
hlt
pminub
dec
mov
xor
and
xchg
mov
fldcw
sbb
sbb
pop
test
fistpl
pushf
subl
adc
xor
jne
push
or
ss
fwait
push
push
jnp
leave
xchg
push
cmp
push
test
push
in
xor
sbb
cmp
cmp
repnz
inc
ja
pop
test
call
outsl
mov
sub
pushf
lock
out
push
sub
or
push
sti
push
outsl
test
jbe
std
js
pop
mov
lcall
jns
mov
lods
adc
fcoms
ret
xlat
pop
add
add
rol
rcl
ja
dec
xor
xor
dec
lods
pop
inc
lds
iret
cmp
or
jbe
lcall
dec
dec
out
adc
cli
sub
ljmp
loope
nop
stos
popa
pop
loope
jg
jg
push
cmp
mov
cs
cmp
adc
inc
outsb
fwait
xchg
aaa
loope
inc
pop
aaa
dec
push
adc
outsl
lods
out
push
adc
data16
add
std
ret
inc
fcmovbe
lds
push
popa
jge
xchg
das
cld
repz
rcr
fs
insl
pushf
mov
out
outsl
stos
sub
mov
std
ja
dec
lret
in
sub
aad
push
or
es
pop
push
repnz
push
sahf
and
pop
pop
mov
push
into
mov
dec
fisttpll
push
push
sub
pop
mov
scas
int
fwait
pop
add
sbb
push
insb
push
push
adc
js
call
cltd
cmc
fnclex
je
and
dec
je
mov
sub
lahf
cmc
xchg
ljmp
hlt
ljmp
and
ret
fcmovb
add
cmpsl
lret
inc
mov
cltd
fstl
dec
fildll
fsubrl
lcall
sub
sahf
ja
or
callw
into
pushf
rcrb
inc
xor
scas
push
or
or
mov
sbb
ret
or
out
push
add
arpl
or
mov
ljmp
and
pop
into
pop
test
icebp
pop
sbb
xor
push
inc
xchg
inc
ja
sbb
dec
out
stc
fadd
into
add
cmp
inc
sub
pop
nop
bnd
xor
sbb
add
fdivl
mov
and
in
adc
push
push
cmp
push
mov
pusha
arpl
stos
adc
popa
test
push
add
pushf
or
push
arpl
and
mov
xorl
mov
push
sbb
xchg
mov
dec
mov
mov
sub
jmp
add
insl
mov
ret
pop
sbb
loop
cmc
movsl
cmp
push
jle
mov
stos
or
dec
and
jae
inc
out
mov
test
and
xor
pop
movsl
in
sarl
dec
ja
cs
rcr
xor
rcrl
xchg
push
test
pop
sbb
aad
jecxz
shrl
test
fs
jae
jmp
test
mov
adc
pop
mov
out
cmc
push
mov
sub
jmp
test
sbb
add
bound
push
test
outsl
dec
pop
lods
nop
push
outsl
test
pop
adc
mov
imul
repnz
leave
pop
or
add
fistpll
pop
js
xchg
mov
in
sbb
pop
fsubrp
pusha
sbb
push
sets
mov
xlat
xchg
sahf
push
movsl
or
inc
mov
mov
jb
push
add
sbb
inc
pushaw
aas
mov
popf
push
test
aaa
sub
mov
arpl
jb
adc
out
stos
mov
popf
lods
jp
pop
lods
mov
inc
adc
dec
cmp
jmp
pop
cmpsl
pop
mov
sarl
xchg
and
popf
in
mov
popf
loop
cs
sbb
in
pop
xchg
mov
sbb
nop
xor
inc
loopne
dec
ss
jge
push
dec
adc
cs
and
and
addr16
mov
dec
sbb
jno
stos
sub
insb
cmpsl
inc
cltd
jmp
adc
and
sbb
xor
addr16
jmp
popa
movsb
push
pop
jmp
mov
cmp
jno
data16
popf
and
popa
xlat
and
ss
test
xor
std
stos
insb
dec
cli
mov
add
dec
data16
cmp
pop
in
in
clc
jae
mov
push
or
push
adc
mov
and
pop
pop
sbb
leave
mov
incl
ja
jae
sub
lret
movb
sbb
outsb
cmp
insl
fisubl
jmp
orb
in
test
add
jg
test
mov
ss
or
stc
pusha
and
daa
lret
and
and
xchg
jp
mov
jle
insb
pop
mov
repz
or
hlt
in
pop
jb
inc
clc
fwait
popa
call
jg
idiv
scas
cmp
sbb
jecxz
dec
cmp
mov
pop
loope
sub
sbb
push
xchg
jl
jb
roll
push
pop
mov
mov
arpl
pop
fistpll
rolb
xlat
inc
ja
cmc
fnstenv
or
jb
movups
lock
cli
xchg
movsb
mov
aaa
xor
cmp
mov
fnsave
sub
xchg
test
cmc
mov
sbbb
sub
pop
les
or
cmp
dec
push
in
daa
lcall
inc
push
mov
add
mov
test
mov
push
jmp
sbb
sahf
cld
pop
jp
fistpl
inc
add
ds
mov
push
sbb
mov
inc
ret
call
adc
lods
ret
add
dec
sub
mov
fwait
sub
sub
lahf
lcall
mov
add
and
daa
dec
cld
pop
leave
cmp
push
push
pop
or
cltd
test
cmp
mov
es
xchg
rolb
push
xor
int3
bound
add
sbb
mov
ss
jo
adc
icebp
cmp
out
mov
inc
push
insl
adc
push
mov
jbe
fbstp
inc
dec
push
cmp
adc
cmp
mov
xor
js
scas
lret
jp
xchg
add
inc
mov
sub
mov
out
call
cs
movsl
stos
dec
fimuls
mov
xchg
ja
shlb
mov
and
adcb
test
mov
sbb
dec
fdivrs
fildll
jbe
cmpsb
adc
gs
sub
enter
jmp
jb
cmp
mov
insl
ret
xchg
or
fmuls
decl
jl
int
push
aad
outsb
repnz
push
add
sbbb
sbb
rcl
je
pushf
xchg
jmp
sub
in
lahf
out
outsl
pop
idivb
jo
push
sub
je
inc
dec
rcr
mov
xchg
fstpt
sbb
xchg
jg
sub
test
push
push
dec
mov
dec
stos
push
shlb
fldenv
xor
dec
lcall
xchg
mov
pop
mov
dec
pop
sub
xchg
aad
aaa
push
adc
scas
loop
mov
call
push
and
add
aaa
and
jge
mov
lock
test
inc
jno
clc
outsb
arpl
pop
sbb
push
xor
jae
ficoms
out
cmc
adc
cli
aas
imul
aaa
pop
mov
lcall
pop
pop
mov
fs
xor
mov
xor
mov
cwtl
pop
jge
leave
adc
add
dec
mov
xchg
mov
add
mov
mov
cmp
sbb
std
ret
and
jo
dec
lds
mov
insl
and
lods
jl
xor
add
jno
push
scas
xor
pop
inc
repz
fcmove
repnz
into
sbb
jbe
pop
outsl
mov
inc
xchg
aaa
jp
push
aad
adc
pop
loop
mov
mov
add
sbbl
sub
mov
in
cmpsl
sahf
cmp
jge,pt
fstl
dec
popf
and
js
mov
adc
cmp
fsubl
in
in
scas
cmp
push
test
out
sub
xchg
inc
adc
jmp
int3
xorb
jo
test
pop
or
rcrb
shrl
insb
stos
mov
cmp
lcall
and
mov
cmp
add
sarb
xchg
add
mov
repnz
hlt
ss
out
or
xlat
iret
daa
sbb
sub
sub
cmpps
icebp
and
pop
add
push
inc
push
mov
mov
push
dec
cld
mov
xchg
movsb
pop
lock
cmp
icebp
sbb
inc
add
sub
mov
outsl
and
mov
ljmp
pop
pop
inc
icebp
sub
nop
arpl
lods
lret
push
push
fcoms
ret
sti
sar
pop
pop
pushf
mov
sub
fidivl
pusha
scas
or
rol
jae
testl
call
in
fstl
lds
mov
push
imul
cwtl
das
icebp
stos
ret
cmp
aas
pusha
loopne
stos
sar
cwtl
and
test
adc
push
xchg
push
loopne
sbb
jp
push
sti
aaa
in
cltd
mov
ljmp
daa
sub
repz
jne
icebp
inc
or
pop
pop
das
pop
jp
scas
and
test
outsb
push
sahf
xor
mov
aas
enter
repnz
sarl
jb
sahf
icebp
fwait
or
push
jae
sub
push
inc
or
in
add
and
sbb
push
fmuls
push
scas
sub
aaa
into
mov
push
pusha
dec
cmp
jg
mov
mov
add
and
jbe
pop
cmp
stc
cmp
push
mov
xchg
adc
push
xor
jne
jecxz
dec
cmpsb
pop
mov
int
je
loopne
jb
jmp
or
xorl
mov
in
sahf
mov
ja
aas
sbb
sahf
movsb
ds
fidivl
insl
aad
loope
in
int
sahf
mov
or
xorl
test
imul
pop
jbe
inc
cli
cmp
fs
sbb
or
dec
lahf
xor
test
cld
scas
mov
mov
cmp
add
jb
into
fcoms
dec
cmp
add
movsl
add
push
loope
stos
pushf
sub
cmpsl
sti
jmp
loop
outsb
cmpsl
inc
mov
fwait
add
loop
cmp
sti
popa
add
int
add
mov
push
leave
jne
cwtl
ljmp
int3
mov
gs
mov
dec
mov
std
repnz
movsl
out
push
sbb
jecxz
push
shll
sub
sarb
or
mov
mov
push
jmp
enter
loop
test
adc
inc
jb
in
mov
mov
mov
adc
dec
and
and
push
xor
test
pop
lods
jmp
mov
addr16
popf
add
outsb
lret
rorb
add
mov
dec
mov
ror
movsl
cmc
mov
push
mov
xchg
pushf
insl
xchg
adc
or
inc
shll
dec
std
subl
test
out
dec
jp
call
push
cwtl
data16
add
pop
inc
outsl
dec
add
cmp
and
sbb
popf
movsb
inc
push
aas
lods
push
push
mov
loop
sbb
fadds
sbb
loope
out
adc
insb
jae
jae
add
and
or
jle
jns
cmpsb
xchg
inc
movsb
cmp
loopne
xchg
adc
lcall
push
xor
add
shl
insb
jl
mov
in
add
mov
push
dec
cltd
inc
pop
sbb
mov
bound
in
pop
adc
ja
sub
outsl
cmpl
fmull
pop
add
mov
pusha
loope
mov
arpl
insb
cmp
hlt
cmc
inc
addb
incb
jmp
call
or
scas
popf
xchg
dec
stc
addr16
xchg
imul
pop
test
dec
adc
pop
gs
cmpsl
push
mov
sbb
les
ficoml
arpl
adc
test
aaa
mov
mov
jle
icebp
loopne
push
sub
jp
das
fiaddl
adc
div
daa
cmp
fnstcw
sub
icebp
mov
sti
sbb
ss
ret
sbb
sbb
add
mov
lock
xor
xorb
ss
jo
stos
cmp
xchg
dec
ljmp
jl
adc
call
push
in
stos
pop
rolb
sti
mov
mov
push
imul
sub
sub
imul
lret
cmp
pop
jmp
mov
push
mov
cmc
jb
sbb
int3
and
cmp
push
sbb
lret
xchg
stos
inc
lock
push
pop
or
mov
adcl
push
xchg
stos
pop
sbb
mov
xor
jae
mov
jo
push
lret
or
pop
cmpps
push
adc
xor
jae
cmp
xor
cmp
pop
add
js
sarb
test
jle
push
jecxz
and
push
cli
jnp
or
fs
xchg
pop
icebp
add
pop
dec
inc
scas
dec
push
mov
nop
xchg
rorb
cwtl
jne
pop
das
inc
dec
cmp
imul
decl
arpl
pop
mov
push
push
xchg
bound
xchg
out
or
xchg
scas
jecxz
rclb
mov
inc
out
xchg
fwait
mov
out
pop
push
pop
xor
les
jecxz
je
in
xchg
cmpsl
daa
jmp
out
hlt
gs
sbb
mov
mov
pop
ficoml
inc
fisttpll
adc
inc
fisubrs
add
xchg
mov
lahf
test
repz
nop
push
lahf
cmpsl
or
outsl
jns
cmc
leave
and
test
push
inc
mov
xor
fidivrl
cmpsl
lahf
pop
imul
in
lea
repz
jge
cmp
jnp
sbb
repz
movhlps
cwtl
in
insb
dec
and
lods
test
sahf
sub
jnp
xchg
cmp
push
push
test
negb
dec
testl
loop
push
imul
mov
and
jmp
push
add
popa
add
jo
test
mov
or
pop
or
out
pop
mov
ja
xchg
fnstcw
cwtl
les
nop
cmp
xchg
cs
movzbl
enter
ss
fs
imul
lock
sbb
je
xchg
icebp
xchg
pop
and
cmp
push
dec
or
cli
sub
push
and
pusha
lds
mov
aad
xchg
sub
xor
or
mov
or
subl
repnz
jo
fcmovb
pop
xor
xor
xor
imul
aaa
adc
cmp
xchg
mov
fiadds
rcrl
jmp
push
adc
aam
pushf
out
xchg
push
mov
jne
flds
fs
test
loopne
subb
addr16
sqrtps
mov
pop
cmp
insl
add
dec
mov
fnsave
repz
xchg
fnstsw
les
rcrw
cmpsl
push
rcrl
cmp
hlt
mov
gs
lcall
ljmp
pop
push
les
ficompl
sar
mov
jbe
aas
or
je
lret
icebp
add
dec
cmp
ds
ss
mov
imul
jno
cmp
push
ljmp
inc
aad
sub
jne
icebp
or
ret
cld
sub
xchg
outsb
push
inc
cmp
movsl
xor
out
shlb
xlat
std
cmpsb
mov
aam
shl
insl
adc
in
adc
decb
loop
sub
sbb
xchg
push
ljmp
addb
sub
or
xrelease
test
xchg
xor
dec
inc
mov
lds
xchg
out
or
scas
test
insb
fcoml
leave
cmp
pop
dec
out
call
movsb
cmpl
push
xor
or
lock
bound
push
out
pop
mov
outsb
fcoms
loopne
cmpsl
aad
pusha
adc
or
scas
jle
aam
clc
mov
lcall
outsb
dec
ret
or
mov
out
jl
pusha
hlt
add
aas
and
xchg
adc
dec
into
out
mov
inc
subb
out
inc
pop
inc
rcr
in
rcrl
push
mov
mov
sti
jle
sbb
adc
pop
cmp
fistps
jmp
push
pop
popf
mov
xchg
lret
sub
int
adc
mov
xor
std
mov
cmp
mov
mov
add
push
mov
mov
mov
vpmaddwd
sbb
dec
ret
dec
sbb
lods
inc
add
and
jp
or
inc
xchg
jne
lods
and
pop
jne
in
adc
fsubl
sbbl
push
mov
mov
outsl
sbb
adc
pop
nop
in
mov
daa
xchg
dec
push
data16
fmull
jno
aaa
add
in
jns
out
setno
repnz
mov
int3
pop
mov
scas
fwait
or
sub
and
clc
pop
add
jp
mov
lret
call
lahf
sbb
jecxz
das
lock
xchg
sahf
leave
cwtl
add
push
cmc
sub
mov
sbb
or
pusha
leave
movsb
jb
jbe
jne
imul
inc
int3
shll
bound
xorl
inc
mov
lods
push
sub
adc
pop
mov
mov
sbb
inc
xchg
adc
inc
sbb
cmp
sbb
jp
cmpb
lock
dec
adc
arpl
adc
push
aad
mov
js
inc
adc
mov
test
cmp
xor
dec
push
aam
dec
cltd
enter
cmpsl
hlt
adc
adc
dec
jno
mov
push
dec
lret
cwtl
push
sub
cld
rolb
xchg
dec
adc
add
inc
movsl
jle
add
fptan
out
stc
imul
cld
negl
dec
mov
sahf
push
or
push
and
add
inc
in
aas
add
pop
cwtl
fcompl
lods
pop
jo
dec
or
fnstsw
pop
out
mov
bnd
and
andb
int3
icebp
and
aam
testb
or
fucomp
fistl
push
in
repnz
addr16
stc
mov
pop
xlat
cltd
jmp
bnd
lods
fs
pop
dec
bound
dec
inc
inc
adcb
test
repnz
gs
adc
daa
pop
sbb
jl
mov
mov
push
fcomps
movsb
sbb
xchg
sub
mov
iret
pop
lret
andb
inc
in
jns
roll
cmp
jg
call
in
push
push
test
push
jno
lock
dec
sub
pop
stos
cmc
popf
paddd
add
sbb
and
cwtl
xchg
dec
cwtl
in
dec
subb
xchg
cmpsb
mov
andl
into
scas
push
das
ss
lret
sub
push
test
stc
xchg
mov
out
pop
imul
pop
lcall
xor
xorb
cmp
test
mov
xor
dec
jnp
shlb
sarl
mov
jle
shl
mov
clc
imul
psubw
scas
popf
xchg
add
pop
movsl
push
lahf
inc
xor
scas
imul
cli
iret
jle
cld
xchg
cwtl
xchg
mov
outsb
sub
clc
icebp
jns
inc
movsl
std
push
adc
insb
jp
pop
ret
loope
sbb
xchg
cmpsl
xlat
das
shr
xlat
nop
add
push
aam
or
xor
sub
mov
sub
aaa
mov
int3
lcall
stos
test
cli
adc
das
cltd
lock
xchg
lock
or
cli
stos
mov
stos
dec
addr16
inc
popa
leave
xchg
xchg
mov
add
dec
xor
cld
jle
icebp
or
mov
mov
xor
jo
dec
sub
repz
scas
pop
filds
push
filds
push
push
mov
lret
xchg
push
jbe
sbb
lcall
jge
bound
cltd
or
pop
cmp
cwtl
mov
dec
jle
adc
push
ficomps
jbe
pop
mov
insb
mov
jecxz
sbbl
lcall
or
out
test
push
cli
mov
das
sbbb
mov
pop
lock
daa
cmp
mov
mov
inc
pop
orl
mov
inc
add
push
cli
jns
sbb
jae
lahf
roll
fmul
xorl
adc
mov
adc
jns
cmp
mull
xor
hlt
inc
jl
and
in
pop
insb
sbb
xlat
icebp
les
inc
lret
sbb
out
rclb
movsb
cwtl
movsl
push
xor
imul
sub
sub
dec
fwait
adc
jecxz
mov
sub
add
mov
inc
out
repnz
repz
dec
push
outsb
insb
mov
dec
dec
lret
jae
dec
stos
out
outsl
sbb
push
mov
loop
pop
mov
jle
scas
xor
lds
outsl
flds
rclb
adc
inc
call
or
sbbl
fwait
call
push
dec
enter
adc
outsl
jns
aad
jo
xlat
mov
inc
mov
add
push
jbe
xchg
push
repnz
ja
nop
and
push
cmpl
and
movb
mov
jnp
test
dec
gs
in
xchg
bound
cs
sbb
mov
fidivs
push
xor
cmp
sbb
push
add
nop
mov
mov
cmpsb
jo
sbb
std
xchg
mov
call
sbb
insl
bound
mov
roll
ss
jle
adc
ret
sub
inc
outsl
pop
mov
adc
popa
fcomps
push
xchg
dec
imul
pop
aaa
mov
pop
mov
test
dec
gs
nopl
cmp
cmc
fwait
outsb
mov
int
insb
push
or
lds
frstor
sbb
cwtl
mov
ficoms
mov
dec
inc
dec
pop
aaa
xchg
clc
insl
lds
cmpl
movsb
dec
cld
push
daa
scas
fwait
and
mov
int
xor
fidivrs
lret
gs
repnz
cmp
add
in
int3
stos
inc
icebp
shrl
sarb
outsl
inc
nop
cld
mov
sbb
cmpsb
mov
add
adc
sbb
stos
sbb
or
lds
mov
cmpsb
cmp
jno
enter
icebp
jno
lret
outsb
mov
jae
subb
sub
sub
fcoml
jno
dec
inc
fcmovnu
jecxz
push
jge
lods
incl
or
pushf
cvttps2pi
mov
outsb
imul
and
sbb
and
filds
mov
mov
in
iret
push
test
into
cmp
push
aaa
data16
ret
mov
aas
adc
cmp
scas
dec
sbb
xorb
jle
mov
cmp
add
test
fmuls
icebp
pop
add
shlb
push
out
fisttpll
sarb
inc
sarb
jnp
mov
call
pushf
or
and
sbb
std
pop
in
xor
adc
clc
test
sbb
jmp
add
and
je
jbe
sbb
push
push
es
sub
pop
or
push
cmp
rclb
add
out
sub
mov
fstpl
stos
cmc
and
fdecstp
loopne
cwtl
popf
ja
mov
arpl
jmp
xchg
pop
nop
out
imul
jo
scas
xchg
mov
es
out
and
inc
and
inc
dec
sar
es
sbb
xor
xchg
rcrb
es
mov
out
lcall
ret
ret
push
ja
sbb
add
fsubl
mov
divl
jmp
stos
add
push
mov
sbb
sbb
stos
cmp
mov
sub
ret
adc
inc
outsb
scas
sbb
repz
sahf
xchg
pusha
inc
mov
movhps
out
xchg
mov
pop
lret
sbb
mov
sti
push
mov
pop
cmp
mov
movb
ficoms
cltd
bound
push
shlb
xchg
shl
adc
adc
sbb
fists
rcrl
sbb
or
push
imul
addl
sbb
mov
push
ljmp
jle
adcl
dec
lock
add
add
mov
jmp
jnp
cmova
mov
repnz
loopne
mov
ds
ja
mov
sbb
xor
std
enter
std
inc
push
cmc
and
dec
push
sar
outsb
adc
rcrl
mov
gs
ja
popl
stos
cli
ret
xchg
dec
aam
pop
cmp
mov
std
lods
xchg
jp
push
out
rcrb
imul
inc
int3
or
pop
in
cli
inc
and
push
pop
sahf
notb
mov
inc
xor
adc
dec
fs
and
les
arpl
sub
adc
xchg
inc
mov
cmpsl
imul
jo
pusha
imul
sbb
out
push
test
push
orl
in
sar
jge
xor
insl
and
jnp
cmp
sarb
sub
push
cld
dec
rol
movsb
mov
mov
fwait
sbb
loope
push
xchg
nop
add
add
bound
jp
jmp
addb
dec
ret
mov
xor
out
je
data16
out
pop
sub
mov
test
push
pusha
iret
add
jp
inc
dec
jp
pop
mov
or
xor
adc
int
sub
stc
or
xchg
inc
jp
leave
imul
dec
and
nop
sbb
fimuls
les
mov
sbb
mov
sar
inc
int3
iret
repnz
sarb
imull
aas
jp
insb
lods
cmpsb
fidivrs
in
mov
push
in
adc
cs
test
xor
xchg
cmp
dec
mov
les
pop
xchg
inc
fsts
jnp
int3
stos
push
sub
es
jo
mov
ret
lcall
in
add
jbe
pop
mov
data16
cmp
push
jl
arpl
dec
push
xchg
ss
fwait
jmp
int3
xchg
das
cli
inc
xchg
jns
inc
arpl
dec
mov
sbb
jno
sbb
pushl
xor
xchg
jg
xor
test
sub
fsts
add
adc
fiaddl
or
out
push
or
mov
dec
lahf
loopne
movsl
pop
dec
mulps
mov
test
or
enter
jmp
cmp
mov
xchg
cltd
or
inc
lea
cmpsb
sbb
sbb
hlt
aas
or
sbb
test
mov
inc
sub
aam
dec
xor
mov
jmp
push
shll
mov
pop
jg
jne
jb
xchg
dec
mov
sub
pop
loop,pn
lock
lahf
das
jns
add
cwtl
xchg
fdivrs
lahf
mov
push
dec
icebp
jo
xor
pop
and
jne
out
sub
sbb
js
mov
stos
cmp
sahf
test
inc
sbb
sbbl
out
adc
addr16
xor
insb
fneni(8087
jmp
test
adc
clc
jno
addr16
icebp
cld
inc
mov
das
sbb
movsb
push
or
bound
dec
cmp
enter
xchg
fstpt
and
dec
add
xlat
popa
jmp
adc
sub
inc
mov
test
stos
mov
lahf
inc
or
popa
popa
iret
test
mov
repnz
repnz
jmp
push
cmp
pop
push
hlt
push
fs
pop
ds
les
cmpb
daa
cmp
shlb
dec
sbbl
or
xor
jno
hlt
or
fstl
jg
scas
test
and
sbbb
mov
rolb
ret
inc
add
add
inc
add
lods
inc
enter
aas
push
xchg
ss
sbb
lahf
iret
push
cmpsb
mov
stc
addl
jo
cmp
in
jge
adc
cli
subb
ds
std
lds
mov
scas
mov
cmpsb
outsl
mov
adc
dec
pop
or
jp
add
inc
mov
iret
roll
out
rorl
push
movl
dec
sarb
or
fwait
popf
cmp
xchg
js
and
loope
adc
mov
addl
cwtl
xchg
addl
repz
jno
loop
pop
ret
add
cs
push
cmpl
call
pop
push
mov
ljmp
dec
cltd
jne
arpl
fldt
loopne
add
xor
cmp
add
jp
jb
fldenv
jmp
sbb
xlat
fisubl
cmpsl
in
sbb
dec
aaa
mov
mov
imul
push
adc
repz
add
ja
or
ss
scas
ret
call
xchg
hlt
div
movsb
icebp
mov
addb
jecxz
lret
jb
add
push
push
jl
xchg
lret
mov
in
cltd
ss
iret
in
pusha
inc
in
lods
sub
pushf
dec
pop
call
fwait
push
mov
mov
dec
mov
inc
std
cmp
push
cmc
ret
dec
mov
ds
pop
inc
or
mov
jno
dec
add
jbe
in
mov
popa
repz
inc
mov
xlat
testb
mov
jecxz
test
xor
dec
jb
sub
adc
hlt
xor
iret
sbb
sbb
mov
aam
pusha
pusha
in
or
icebp
jne
jo
mov
xchg
les
mov
pusha
insl
mov
sbb
lock
dec
mov
jl
insl
jns
inc
leave
or
and
shll
jl
sbb
xchg
hlt
je
testl
push
les
fistpl
and
in
cmp
dec
xchg
push
jmp
sub
enter
ret
xchg
fs
fwait
inc
popf
ss
inc
shll
and
jl
stos
aad
cmp
popa
movsb
pop
pusha
mov
int3
cmp
scas
imul
push
dec
jmp
pop
movsb
sub
lret
out
inc
fisubrs
clc
add
push
sbb
sub
jmp
add
jge
and
adc
xor
ficomps
insl
stos
rcr
jg
sub
mov
lods
loopne
lret
aam
adc
mov
shl
popa
das
dec
cmc
lcall
add
push
mov
push
jge
popa
xor
add
or
sbb
in
pop
mov
cwtl
test
in
fdivrl
cmc
aas
jno
popf
mov
pop
repnz
int3
cld
add
jnp
jno
or
mov
push
and
clc
mov
fidivrl
iret
cmp
ret
cmp
jo
gs
popa
test
sub
outsl
mov
in
xor
xor
xchg
mov
int
push
jae
cs
rorb
repz
and
lret
call
clc
dec
inc
inc
ret
arpl
push
es
je
push
mov
test
in
pusha
inc
xchg
ds
inc
stc
loope
leave
movsl
inc
es
lret
xor
out
iret
dec
mov
add
add
cltd
xchg
and
jne
mov
dec
stos
xchg
inc
scas
mov
sarb
outsb
or
dec
test
mov
hlt
inc
shl
xor
xor
repnz
or
div
repnz
insl
push
mov
mov
xchg
test
mov
sbb
jge
lahf
cwtl
cwtl
mov
push
jne
sub
adc
inc
dec
push
cwtl
loope
sbb
and
scas
mov
push
divl
inc
mov
mov
jno
scas
mov
inc
jbe
icebp
lret
insl
cmpb
pop
mov
lret
call
push
in
out
sub
and
mov
fmull
nop
shll
cltd
int
xor
lods
icebp
or
subl
mov
int3
icebp
fiadds
xchg
outsb
mov
mov
xor
push
inc
jae
fimuls
fildll
sub
cmpsb
int3
adc
stc
sbb
pop
cli
pop
and
in
stos
jno
js
iret
sbb
jecxz
adc
pop
sub
push
sbb
pusha
mov
pushl
mov
mov
cmpsl
mov
daa
mov
lods
filds
ljmp
xor
sbb
out
fisttps
scas
and
pop
std
pop
pop
xchg
scas
mov
mov
jmp
and
jmp
in
add
adc
push
repz
cld
jl
push
jbe
cwtl
fcomps
pop
mov
sbb
mov
dec
xchg
ljmp
push
jg
mov
in
lea
mov
iret
ljmp
inc
ds
popa
stc
push
cli
add
fwait
mov
dec
or
sarb
repz
add
cltd
movsb
sbb
and
and
repz
mov
arpl
mov
std
dec
push
add
imul
cmp
xor
repnz
adc
aad
in
mov
cmp
lods
sub
shrb
popl
xchg
or
push
shl
cmpsb
pop
cmpsb
ret
mov
sarl
fdivrl
and
hlt
fxch
pop
push
aam
dec
sbb
aaa
cs
punpcklbw
or
pop
rorl
in
xlat
and
test
filds
daa
cmp
fstpl
into
cltd
mov
fnstsw
mov
notb
inc
add
test
dec
xor
stc
mov
inc
push
and
cli
test
push
add
fidivrl
cmpsl
jo
shrl
push
lahf
movsl
sub
mov
cmp
inc
iret
push
xchg
lcall
dec
pop
add
cli
jbe
push
push
inc
test
fildll
dec
mov
lret
in
and
and
test
cmc
push
jo
arpl
dec
xor
xchg
mov
dec
sbbl
icebp
dec
sbb
mov
jno
pop
das
arpl
dec
sbb
dec
das
mov
mov
and
iret
insb
adc
pop
mov
leave
das
inc
frstor
ficomps
lea
cmp
inc
xchg
pop
fwait
clc
jp
dec
mov
shll
fmuls
cltd
or
movsb
dec
loop
inc
adc
push
xor
aad
lods
sub
lds
adc
and
stc
cld
stos
jmp
cmpsl
pop
mov
sti
daa
insl
negb
push
push
push
incb
mov
lret
mov
cmpl
sub
inc
fists
and
imul
sbb
fistpll
ret
stc
lret
sub
pop
pop
pop
jp
inc
jmp
cmp
ljmp
cli
mov
xchg
xor
test
shll
loop
outsb
movsb
in
push
stos
sub
das
pop
out
ja
push
mov
xchg
popf
daa
cmp
mov
xchg
push
push
test
mov
cwtl
aad
loop
fstl
pop
push
stc
shlb
imul
inc
add
xchg
jge
add
shrl
mov
and
into
or
movsl
sub
jae
jle
int3
dec
or
imul
fsubrs
mov
xor
insl
add
scas
inc
adc
outsb
cmpb
test
jge
jns
push
xor
cmp
out
pop
xchg
imull
fldl
scas
les
lock
and
shll
or
movsl
std
adc
fcmovnbe
dec
fildl
cli
int3
xchg
ret
mov
adc
popa
add
mov
push
adc
cmc
xchg
hlt
imul
fisubrl
leave
inc
mov
sub
pusha
andb
hlt
sbb
pop
in
jle
cld
and
test
xor
lahf
xchg
sbb
xor
ret
movsl
mov
jmp
cmpsb
pop
add
dec
or
call
push
inc
inc
adc
test
out
std
mov
cmp
sub
es
leave
xchg
outsb
pop
mov
leave
push
rcrl
push
xor
psrad
sbb
in
inc
cmpsb
pop
dec
mov
sbb
pop
xor
mov
jmp
and
or
out
mov
or
and
out
cld
shr
lock
or
jb
lret
js
sbb
pop
icebp
jp
out
inc
dec
rclb
pop
fisttpl
sub
sub
adc
adc
adc
mov
int
gs
scas
mov
push
inc
inc
repnz
fs
mov
xor
scas
mov
inc
arpl
das
sbb
in
sarl
aam
aaa
mov
nop
push
jmp
mov
push
stos
dec
and
hlt
push
sahf
cmp
and
ss
sti
rorl
pop
push
jb
xor
lea
xchg
shll
inc
popf
fisttpl
jl
xchg
lcall
or
dec
imul
frstor
sub
int3
add
into
xchg
repnz
aam
repnz
incb
dec
adc
imul
inc
bnd
shrl
xchg
xchg
xlat
loope
aad
lea
movsb
mov
loope
mov
mov
mov
out
adc
sbb
out
das
ja
sbb
push
jg
psadbw
adc
sar
sbb
inc
and
mov
xor
jno
sti
adc
outsl
fdivrs
ret
ljmp
in
or
mov
mov
jecxz
rcl
jp
push
pop
cltd
or
movsb
xchg
jae
pop
dec
push
jnp
xchg
in
and
stc
loopne
leave
enter
mov
xor
scas
xor
pop
inc
xchg
mov
popa
pop
dec
mov
mov
mov
lahf
and
push
and
or
adc
inc
cmp
xchg
xor
jecxz
dec
cvtdq2ps
cltd
jnp
test
in
sbb
mov
xor
push
mov
rorl
push
bound
das
cmpsl
mov
incl
sbb
in
sub
inc
not
pushf
das
leave
cli
testl
mov
dec
out
cmpsb
setne
icebp
pop
fisttpl
nop
xor
inc
loope
pop
sbb
movsl
adc
add
das
mov
jne
loopne
xchg
scas
fs
out
es
pop
int
outsl
jnp
inc
xchg
xor
and
out
cmpb
outsb
cli
mov
jg
movsb
cmp
ja
rclb
adc
mov
int3
les
add
jp
cmpsl
ja
cld
xchg
dec
test
in
outsb
sbb
clc
pusha
lea
mov
mov
mov
in
xor
repz
out
fisubl
sub
push
sahf
outsl
pop
xchg
and
jp
out
scas
cmp
sarl
rcll
out
lock
push
fcoml
adc
in
xchg
and
sarl
arpl
mov
pop
xor
xor
push
cmp
decb
jo
adc
add
ss
outsl
imul
jge
test
push
blcmsk
jns
dec
jg
ljmp
loopne
imul
test
pusha
jp
push
pop
inc
in
cmp
cld
mov
shr
clc
imul
lods
inc
js
add
push
mov
stc
inc
popa
jmp
cmp
mov
adc
cwtl
mov
mov
push
add
inc
mov
jne
xchg
xchg
push
int
mov
enter
sbbl
jl
sub
cwtl
dec
and
or
test
jmp
and
add
jnp
test
out
cmpsl
cmp
xchg
pusha
mov
leave
xor
pop
dec
ljmp
je
add
xchg
stos
cltd
fsubrl
or
test
test
popl
scas
jnp
scas
sub
mov
or
out
ss
testl
in
sbb
and
daa
fldcw
loop
jne
iret
lock
sbb
pop
push
dec
mov
jae
dec
xor
push
fcmovne
jp
add
in
in
scas
mov
fimuls
mov
jno
cmpsl
cmp
mov
out
or
mov
arpl
repz
std
mov
add
rcll
push
pop
mov
mov
mov
adc
cmp
shrl
imul
jno
ljmp
dec
movb
std
rorb
pop
jp
nop
adc
mov
lock
in
xchg
mov
adc
nop
cmp
andb
cmp
xchg
mov
scas
dec
cmp
mov
adc
leave
jg
sub
inc
pop
les
lds
shll
or
shl
xor
mov
jl
cmpsb
mov
nop
movsb
rep
loop
mov
add
xlat
push
insl
xchg
dec
and
mov
je
adc
push
xchg
test
or
and
sti
sub
mov
int
pop
xchg
sub
pop
stos
incb
pop
xchg
addr16
cwtl
sbb
jg
out
adc
mov
in
push
sbb
sub
sbb
rolb
pop
out
leave
jb
jge
mov
mov
ss
faddl
inc
mov
push
insl
jge
ja
mov
inc
jmp
aam
scas
sbb
aad
mov
rol
sbb
mov
ds
pusha
dec
aaa
cs
push
repz
inc
xor
das
or
jae
daa
dec
xorps
mov
inc
adc
imul
in
push
fstl
xchg
aaa
mov
rol
lock
cmp
sbb
mov
out
les
pop
ljmp
dec
pop
xor
mov
int
shrb
add
push
or
mov
inc
mov
cmp
into
arpl
add
jo
sub
or
test
jg
sbb
aaa
mov
add
lock
stc
xchg
js
pusha
mov
adc
cmpsl
iret
movsl
and
test
out
xchg
mov
mov
push
jge
neg
mov
call
sti
ds
push
or
pop
mov
push
or
adc
dec
push
sub
sub
push
repnz
popa
jecxz,pt
xor
dec
fsubs
pop
sub
add
cmpsb
sbb
mov
and
xchg
jbe
cmp
rcl
es
mov
inc
jp
xchg
mov
je
xchg
jbe
mov
mov
mov
iret
popa
testb
pop
loopne
enter
push
fsubl
sub
adc
dec
push
adc
and
test
jns
test
dec
loope
push
adc
test
fcompl
pop
outsb
mov
incb
jo
ret
cmp
jge
dec
xor
mov
and
shr
mov
in
add
pop
imul
xchg
pop
lock
dec
and
lcall
push
adc
adc
inc
in
negl
mov
push
push
mov
pop
xchg
loop
adc
out
int
xor
cmp
lods
xor
cli
roll
mov
out
inc
xchg
mov
dec
shrl
scas
push
faddl
and
xchg
sbb
jmp
mov
daa
hlt
sub
mov
xorb
out
pop
jecxz
xor
test
push
xor
into
mov
mov
push
dec
leave
inc
mov
pmuludq
dec
or
mov
pop
push
fidivrl
imul
inc
xchg
mov
cwtl
mov
or
xor
and
ljmp
mov
or
push
mov
mov
insl
mov
fwait
xchg
mov
fs
fists
shll
pushf
sub
sub
mov
cmp
out
or
lahf
add
aam
leave
inc
cmp
sbb
pop
mov
mov
nop
test
cmp
xchg
repnz
cmp
test
and
cmpsb
push
mov
iret
add
ficomps
jno
xor
or
push
jb
or
lock
inc
sub
inc
dec
xchg
mov
dec
jmp
fimull
loop
jle
push
js
dec
xchg
idivb
out
in
int3
mov
jb
pop
cmp
sub
mov
ss
shll
dec
mov
ja
jo
xchg
dec
cld
popf
dec
gs
xchg
iret
insl
cmp
inc
cltd
hlt
test
push
out
inc
in
ljmpw
pop
pop
imul
xor
push
mov
nop
nop
xor
sahf
xchg
mov
and
lds
push
push
push
rcl
jl
ss
ds
mov
sbb
inc
ds
movsb
push
aaa
push
test
push
push
cwtl
sub
lcall
arpl
xchg
inc
push
dec
lds
jecxz
xchg
insl
sub
adcl
mov
clc
dec
sbb
push
xchg
or
cwtl
sub
pop
xor
jg
mov
bndstx
insb
aam
cmp
rorb
orb
cli
pop
mov
mov
mov
xor
insb
or
cltd
xchg
sbb
jge
jecxz
xor
jg
xchg
sub
das
pusha
cld
push
xchg
push
les
xor
lods
xchg
push
xchg
test
cltd
stos
xchg
mov
inc
dec
ljmp
and
adc
adcb
mov
xchg
adc
repz
mov
ja
inc
das
mov
jne
lds
arpl
jns
xlat
push
arpl
fwait
xor
mov
dec
push
ret
push
test
rol
mov
cld
icebp
pop
ja
dec
test
xlat
lds
popf
jno
fwait
out
outsl
leave
jl
cmpsl
push
mov
movsl
stos
jecxz
jg
mov
push
or
cwtl
cmp
mov
mov
int
lahf
push
imul
call
popa
cmpsl
xchg
cmc
call
ret
mov
sbb
mov
adc
insb
cmp
inc
icebp
mov
cmpsb
xchg
rol
and
and
in
sub
imul
fistps
pop
dec
jne
outsl
mov
pop
in
sub
fidivrl
jnp
and
or
decb
ret
nop
sti
loope
sahf
adc
fcompp
push
xor
cwtl
sahf
add
or
dec
icebp
xor
aaa
inc
jb
sbb
jno
sub
mov
or
std
dec
sub
mov
push
xor
jle
jmp
or
jmp
mov
cmpb
les
lds
sub
sbb
sbb
pop
scas
adc
and
stos
popa
pop
lahf
dec
inc
pop
movsb
jg
pop
out
sub
mov
outsb
inc
mov
xchg
movsb
ljmp
pop
push
push
xchg
xor
clc
adc
into
ja
xchg
out
jb
lods
add
xor
dec
mov
sbb
xor
addr16
lahf
adc
lret
addr16
fnsave
imul
lret
shlb
fwait
jb
cld
mov
call
sub
scas
mov
add
lea
hlt
adc
insl
sahf
daa
sbb
std
fwait
sarl
stc
mov
dec
jae
push
fnstsw
int3
sub
mov
movsb
cmp
out
in
fcmovnb
call
dec
imul
js
call
add
xchg
sbb
or
push
nop
ds
outsl
jecxz
mov
mov
push
mov
jnp
lods
dec
or
jno
test
jb
push
pop
pop
sub
addr16
aam
adc
ds
xchg
xor
sbb
xor
ret
je
dec
dec
fst
les
ss
arpl
inc
lcall
fs
in
mov
sub
test
cltd
sar
inc
cld
sub
aad
sbb
sub
iret
cwtl
cmp
cmp
add
std
jno
xchg
aad
mov
cmp
stos
shr
jb
popf
mov
and
cs
nop
lods
dec
das
andl
add
cltd
cmp
dec
ds
js
mov
push
adc
dec
dec
cld
xorb
insb
mov
sbb
or
repnz
and
dec
rcrl
jno
shlb
test
popa
dec
popf
xor
mov
ret
xor
xor
lods
pop
andl
ss
add
push
push
sub
ljmp
rorb
or
jno
lahf
mov
xchg
cltd
outsl
jae,pt
xchg
add
aam
incb
mov
mov
rcrl
xor
mov
sub
leave
cld
push
sbb
in
in
mov
mov
dec
xchg
push
int3
shll
push
adc
mov
sti
movsb
cmp
jecxz
inc
cmp
into
movsl
addr16
pop
jb
pop
imul
iret
adc
vcvtsi2sd
cmpsl
jbe
mov
mov
cmpsl
cmp
push
sub
and
inc
mov
sub
nop
cmp
test
xchg
cltd
add
dec
and
in
fs
push
ja
lret
fldenv
lret
sbb
adc
and
mov
and
inc
sti
xchg
dec
push
inc
xchg
aas
xchg
mov
es
orb
add
xor
mov
xchg
push
cmp
push
jns
in
aaa
sbb
pop
lods
movsl
xchg
mov
inc
mov
push
lods
pop
sar
cmp
dec
leave
lods
dec
in
aam
test
subl
rorl
xor
mov
mov
bound
outsl
ljmp
jnp
add
xchg
sbb
cmc
inc
sub
and
jo
into
popf
lcall
push
shlb
push
fsub
push
test
pop
jg
loopne
sbb
bound
mov
sbb
push
and
int3
js
test
xor
cli
add
or
mov
mov
jge
test
pop
mov
cmp
sub
jge
jp
pop
outsb
jg
pop
adc
pop
cli
pushf
add
mov
lret
sti
mov
mov
lret
and
stc
sbb
and
mov
fwait
ja
sbb
bswap
mov
jae
push
fwait
insl
push
fiaddl
pop
or
mov
lods
pop
jbe
push
cmp
cld
movsl
jo
lahf
mov
cli
insl
rolb
xchg
mov
mov
les
out
xchg
test
push
lahf
mov
mov
cld
inc
repz
push
hlt
incb
xchg
mov
mov
stos
cld
adc
mov
add
insb
adcb
and
pop
adc
or
sbb
enter
or
lds
aad
jne
add
jmp
filds
test
jle
testb
daa
test
mov
loop
js
mov
lcall
jae
inc
cld
inc
fwait
and
scas
outsb
xchg
scas
pushf
lods
jmp
push
mov
sbb
cmp
mov
andb
stos
loop
ficomps
aad
jle
insl
xor
cmp
mov
jo
push
mov
dec
call
idiv
cli
mov
mov
icebp
loop
push
out
cmp
add
xchg
mov
ss
lahf
add
enter
mov
ljmp
lods
and
inc
sbb
dec
pop
xchg
das
add
sbb
lahf
popf
cmpsb
das
mov
pop
mov
mov
mov
pop
or
mov
jge
mov
push
fildl
or
xor
lcall
mov
mov
rcr
inc
push
repnz
stos
ret
in
xchg
mov
int3
jmp
aam
push
mov
or
mov
add
cld
pushf
outsb
subl
xor
xor
lods
aam
bound
dec
int3
psadbw
push
test
mov
add
inc
les
mov
sbb
sbb
push
xor
ret
bound
fucom
das
mov
adc
xchg
call
or
leave
sub
call
pop
inc
sub
lahf
cmp
lods
push
mov
jnp
cwtl
aad
repnz
pop
xor
shr
insl
adc
xor
add
jge
sub
mov
fld
xor
insl
adc
icebp
ljmp
js
and
fwait
sbb
add
pop
nop
in
js
bound
pushf
jnp
sbbb
popa
test
sub
ja
and
clc
icebp
pop
out
mov
rorl
mov
sti
mov
sub
vandps
jb
xchg
mov
pop
inc
shll
pop
lret
mov
pop
xchg
ljmp
scas
dec
das
aas
fcomip
std
mov
fdiv
push
or
loopne
je
outsl
pop
lods
cmp
fiadds
mov
or
cwtl
rorb
popf
dec
sti
insb
rcr
fsts
xor
mov
dec
mov
enter
fcomps
jo
push
or
faddl
dec
dec
inc
mov
cmp
xchg
mov
fmull
cmpsl
mov
sub
cs
sbb
mov
mov
dec
jmp
xchg
inc
adc
rcll
adc
cmp
pop
lret
jmp
lret
mov
loope
jg
imul
or
loopne
clc
jecxz
mov
mov
mov
pop
outsl
sbb
fdiv
into
dec
lock
fsubs
insb
push
mov
rorl
sub
sub
push
addr16
mov
pop
add
xchg
mov
outsb
mov
popf
xchg
movsl
add
cmp
test
sub
adc
mov
test
mov
push
inc
sub
fcoml
inc
leave
lret
cmpsb
jg
int3
mov
or
sbb
xchg
jg
mov
push
out
xchg
cmp
mov
shrl
and
jb
leave
mov
push
leave
lock
imul
lea
outsb
sub
out
mov
mov
jbe
push
testl
sbb
pop
in
imul
xor
je
xchg
cmp
pusha
dec
add
sbb
xor
insl
outsl
movsb
dec
adc
stc
cltd
jecxz
shrb
mov
daa
push
scas
and
mov
and
sub
rcll
into
mov
mov
nop
das
aam
push
dec
dec
push
std
jne
jb
pop
sbb
mov
mov
shrb
jg
outsl
mov
xchg
loop
clc
lock
scas
in
or
dec
jge
push
push
movsb
jle
lock
insb
jnp
add
xor
repz
icebp
sbb
sub
push
sbb
adc
scas
insl
insl
ss
lea
bound
stos
cld
jne
cmp
inc
xchg
idiv
adc
or
pop
out
adc
inc
repnz
outsl
out
jbe
test
or
xlat
mov
or
movsb
lods
cmp
movsb
inc
adc
ret
scas
jb
and
and
imul
dec
xchg
pop
pop
mov
pop
ja
js
lretw
icebp
fsubs
sti
jge
or
test
cmp
dec
or
ds
mov
idivl
call
add
add
sub
in
repnz
adc
mov
cld
jo
aad
hlt
lret
jb
scas
int
test
inc
lcall
jge
fwait
ljmp
sub
mulb
push
xor
pop
pop
je
shrl
xchg
mov
add
cwtl
jno
xor
mov
scas
push
or
scas
xor
adc
nop
cli
push
loop
cmp
jmp
std
pop
cwtl
mov
cmp
mov
adc
xor
lcall
xchg
out
pop
push
mov
bound
push
pusha
push
jg
ds
inc
inc
sub
movsl
lahf
mov
sub
dec
or
fdivr
icebp
cltd
lahf
addl
movsb
andb
xchg
jp
lock
in
push
dec
add
fistps
lcall
jns
rcr
fwait
das
sub
lock
ja
sbb
mov
sbb
faddl
mov
dec
adc
daa
or
cmpsl
push
or
mov
out
aad
ss
lods
wbinvd
fstl
push
pcmpeqb
lods
subl
fisubl
mov
outsl
js
jns
lods
xchg
insl
jb
push
int
mov
push
cmp
and
mov
outsb
ret
mov
out
mov
pop
inc
loopne
sbb
imul
pop
cmpsl
pop
arpl
mov
adc
fldenv
mov
and
cld
repz
sti
test
push
nop
dec
idivl
aad
fstl
inc
aad
das
adc
jge
outsl
stos
xorl
mov
sahf
sub
test
pop
and
mov
lahf
and
jle
test
mov
mov
jbe
data16
arpl
cmp
stc
int
jo
xlat
clc
lea
lahf
jnp
mov
les
adc
or
xchg
adc
lds
dec
cwtl
call
in
dec
imul
inc
out
leave
iret
ret
fwait
and
nop
pop
sbb
or
mov
dec
or
popa
fsubrs
flds
dec
fbld
enter
cmpsb
into
in
mov
add
jge
jb
push
lds
incb
fldenv
dec
push
adc
add
daa
int3
jae
mov
and
scas
sbb
mov
test
cmpsb
adc
push
mov
xor
mov
push
inc
pop
adc
xchg
lcall
and
in
mov
aas
loope
test
mov
jo
pop
jb
and
pop
mov
sahf
xor
or
hlt
mov
hlt
add
adc
aam
cmp
sahf
mov
mov
lahf
pop
cmp
mov
xchg
sub
pop
inc
sbb
mov
scas
cmpsl
push
nop
cmpsb
sbbb
pop
fwait
mov
pop
xor
jo
out
ret
ja
hlt
and
xchg
cli
or
add
pop
pop
cwtl
sub
push
add
scas
mov
cmp
and
cli
xchg
mov
sub
dec
jmp
inc
icebp
and
pop
imul
add
xchg
cltd
aam
pusha
pop
add
and
adc
add
and
sti
dec
inc
cmp
sarb
or
pop
lret
sbb
lods
adc
jbe
enter
cmpsl
xor
and
jecxz
sbb
pop
sbb
scas
pop
cmpsb
aaa
out
inc
push
jb
aad
jbe
dec
jbe
xor
mov
and
mov
sbb
xchg
dec
ds
mov
xchg
mov
popa
mov
xchg
push
cwtl
sahf
fwait
int
insl
lea
fcmovne
shr
lock
push
jae
adc
je
inc
in
jge
or
insb
jnp
xchg
arpl
pusha
add
fwait
sbb
jg
scas
test
sub
in
cwtl
inc
cmp
pop
sbb
xchg
notb
mov
or
nop
idivl
out
in
add
dec
mov
jbe
dec
pop
xchg
or
imul
jno
mov
and
lods
sbb
sahf
push
sub
adc
mov
xor
xchg
xchg
fdecstp
mov
arpl
pop
cmp
inc
popf
cmp
cltd
push
xor
in
ds
pop
cld
sbbl
clc
subl
pop
dec
inc
xor
ss
mov
sahf
rcrl
lock
rcl
in
lods
nop
and
or
fwait
xchg
mov
xor
pop
pop
jae
xchg
push
mulb
ret
mov
aaa
pusha
cli
sub
and
jle
leave
xorl
push
push
inc
jae
or
adc
je
and
mov
sbb
into
in
pop
dec
push
je
xabort
mov
xchg
nop
jmp
mov
in
xchg
sbbl
inc
jg
pop
jmp
cmp
cmp
fldenv
cmp
rcll
jl
mov
fsubr
nop
sub
jl
lock
ret
jno
fimuls
fiadds
push
cmc
fsubs
xchg
aad
ficompl
xchg
and
push
int
test
lds
nop
and
and
add
mov
mov
jp
xchg
loope
bound
insl
addr16
mov
insl
inc
mov
pusha
cli
stc
pop
push
cwtl
clc
or
push
xor
in
sbb
push
stos
jge
dec
insl
mov
dec
add
ret
or
loop
daa
xor
xchg
ss
movsb
rcr
xor
inc
mov
dec
mov
ret
aas
pop
cmp
andl
movsb
test
mulb
imul
cmpsb
cmp
sbb
cmp
sub
repz
scas
mov
jae
mov
push
adc
lret
mov
movsb
divl
push
sahf
in
aam
jmp
jle
push
mov
or
mov
sbb
jl
dec
inc
push
cli
ja
inc
pop
add
loopne
lahf
out
sbb
movsb
idivb
icebp
dec
gs
or
mov
push
sti
aaa
and
and
inc
out
jne
ret
sbb
push
push
mov
cli
in
jns
cs
xor
push
fists
sub
push
jno
xstore-rng
cmpsl
ret
adc
outsl
jl
mov
ds
inc
or
inc
mov
jne
inc
lods
mov
xor
nop
repz
push
lods
sub
popa
aad
jno
inc
or
loopne
dec
sub
test
cmp
ds
lahf
movsl
fucompp
das
mov
mov
pop
pop
dec
mov
cwtl
sbb
dec
les
sahf
adc
out
out
add
orl
cmp
push
ss
ja
xor
ret
and
dec
test
fnstsw
xor
push
enter
pop
divl
and
push
dec
and
xlat
sti
ljmp
out
xorl
mov
inc
je
jg
scas
jg
andl
inc
and
push
es
cmp
pop
dec
sbbb
addr16
lods
pop
mov
shlb
popa
jle
fs
jmp
jns
xchg
cmp
in
dec
addr16
lock
addb
test
sbb
push
scas
push
mov
adc
dec
lcall
adc
push
movsb
outsl
ror
dec
out
or
cmp
aam
inc
pop
adc
mov
jle
sahf
dec
inc
iret
movsl
call
mov
jmp
mov
mov
subb
andl
add
popf
adc
dec
mov
leave
jae
push
rorb
jae
andb
rcll
popa
test
or
mov
loop
aad
cwtl
mov
pop
pop
popa
add
mov
push
jecxz
lock
and
xor
loopne
xor
inc
adc
pop
les
adcl
push
push
cmp
mov
inc
mov
cwtl
sbb
mov
jb
sti
movsb
sbb
hlt
dec
test
ja
sahf
or
mov
mov
xor
dec
jmp
lret
xor
arpl
pop
cmpb
clc
sbb
mov
jo
roll
adc
pusha
xor
sti
inc
test
stos
insl
add
cmp
inc
bnd
push
lods
mov
int
rorb
mov
push
or
fs
push
nop
mov
in
fcmovnbe
push
adc
getsec
inc
dec
sbb
sbbl
push
outsl
cld
stos
inc
cmp
cltd
insl
push
jg
push
out
adc
leave
fcompl
jl
jns
push
sub
lret
or
push
loop
lret
sub
scas
jno
mov
fldcw
push
std
mov
inc
popf
mov
push
push
subl
pop
push
push
repnz
dec
std
dec
dec
dec
jnp
stos
xchg
cmp
mov
fistl
movsb
push
xchg
inc
cmp
arpl
mull
mov
loop
mov
popf
inc
cmc
sub
cmp
stos
das
sbb
arpl
movsl
mov
dec
hlt
mov
xlat
pop
clc
mov
out
fimull
rolb
xor
aad
sbb
movsb
cmpsb
xor
std
sub
dec
push
sbb
mov
sbb
mov
hlt
adc
int3
pop
xchg
adc
insl
insl
jne
push
adc
cmp
push
mov
jmp
mov
pop
mov
repnz
sahf
in
pushf
es
dec
dec
push
and
push
jge
testb
loope
daa
pop
push
push
and
dec
cld
loopne
xor
and
jbe
jno
in
clc
loop
mov
rcll
sub
xor
rcrb
dec
sub
cltd
dec
xchg
xchg
imul
mov
bnd
and
dec
mov
xchg
sbb
adc
jecxz
mov
mov
shlb
in
out
push
cmp
add
xchg
pushf
mov
and
std
jns
adc
inc
mov
and
cmp
jns
sarb
popa
xchg
adc
inc
mov
jo
xchg
add
push
push
fmull
adc
mov
in
faddp
add
lock
xor
dec
push
mov
inc
mov
pop
shll
out
lcall
inc
jne
pop
sub
enter
xor
sbb
push
test
push
lods
pop
dec
shl
cmp
xlat
pop
mov
mov
idivb
test
gs
pop
cmpsl
mov
mov
lret
out
aas
pop
repnz
pop
mov
adc
int
xor
or
adc
mov
jle
rorb
in
ljmp
imul
xor
sub
and
sahf
and
or
pusha
cli
sub
mov
mov
jecxz
mov
inc
push
push
adc
into
mov
mov
mov
push
push
push
fs
cmpb
vpaddb
loope
pop
repz
inc
addr16
mov
cmp
leave
rcrl
popf
cmp
iret
popa
shlb
or
and
stos
push
xlat
add
jbe
stos
push
addb
enter
outsb
add
cld
aas
push
popa
fistps
dec
out
in
je
mov
test
outsb
mov
cltd
pop
cwtl
cmp
aad
stc
mov
pusha
jno
sbb
mov
adc
loope
jecxz,pt
jge
sub
inc
rolb
cwtl
or
gs
aas
jmp
dec
xchg
popa
popa
adc
out
mov
cld
xor
out
les
mov
aas
or
add
lods
sahf
push
dec
aad
sahf
xchg
in
and
dec
and
xor
adc
outsl
dec
push
pop
jle
aaa
call
lock
mov
mov
fs
std
xor
pop
dec
xchg
clc
pusha
addr16
or
insb
mov
out
lea
pop
adc
add
pusha
fisubl
icebp
or
mov
popf
movsb
movsl
sub
push
dec
add
cmp
adc
popa
push
mov
lods
cmp
cltd
inc
jns
mov
and
das
xor
mov
jecxz
es
fwait
mov
ja
clc
mov
loop
cltd
sti
jne
cmc
call
insl
movsb
aam
push
std
push
xchg
iret
pushf
pop
loope
mov
dec
or
ds
add
or
lods
add
pusha
aam
pop
or
jb
stc
mov
call
push
and
jns
fsubl
bound
addr16
sbb
dec
divl
inc
les
or
or
fsubs
xchg
scas
outsb
out
ja
mulb
orl
shrb
repnz
xchg
cmc
or
jmp
jne
mov
aas
inc
cld
adc
or
fdivl
push
outsb
outsb
pop
lods
clc
cmpsb
push
jnp
daa
sbb
pop
test
cmp
dec
jb
clc
out
cmpsb
into
or
xor
out
fdivp
hlt
aad
inc
fmull
jecxz
inc
in
rolb
adc
subb
pop
addr16
sub
jns
lods
test
or
pop
xchg
aam
ljmp
mov
xor
jno
lret
ja
rcr
sub
push
mov
inc
push
sahf
dec
aad
mov
mov
xor
mov
mov
mov
mov
pop
sub
sub
push
mov
pop
add
mov
repz
bound
call
mov
daa
jae
fstps
fisubs
fists
test
stc
iret
scas
jno
mov
test
add
push
fisubrl
inc
fs
test
cmp
add
pop
sbb
inc
sub
loopne
cmp
in
push
and
and
ret
outsb
lea
sbb
sti
pop
ror
cmp
push
jae
test
mov
dec
or
inc
push
mov
movsl
movl
mov
sarl
ljmp
adc
out
loope
ljmp
mov
push
jl
sbb
cld
lods
in
test
push
and
dec
xchg
aas
cmc
dec
lret
not
push
mov
fsubrl
jo
dec
lahf
jmp
xor
mov
loopne
add
pop
xchg
dec
loopne
dec
pushf
add
shll
pop
insb
mov
cltd
and
fnstenv
sub
cld
fildl
jp
data16
out
and
sbb
jae
xlat
pop
cli
mov
push
ficoml
loopne
hlt
into
ss
push
jg
insl
stos
jl
adc
xchg
pop
xor
jb
cmpsb
xor
cwtl
enter
jns
roll
sub
jge
es
aaa
insl
inc
jae
hlt
adc
add
fidivrs
test
movsl
and
sub
mul
scas
test
into
push
test
or
push
adc
sbb
in
lahf
or
cli
in
cmp
aam
dec
call
sub
sarb
push
mov
mov
lea
ds
mov
xchg
fnstenv
aad
imul
lock
popa
insl
push
pusha
nop
mov
mov
mov
fidivl
loopne
xor
pop
xchg
addr16
jg
and
pushl
push
cs
lock
lds
dec
in
xchg
cmp
ret
rolb
ret
mov
movsb
pop
mov
int3
push
sbb
fcomp
sub
pop
push
into
test
negb
cmp
loopne
test
jno
rcrl
xchg
sbb
and
out
pushf
gs
addb
jns
dec
leave
inc
sbb
mov
movsl
data16
in
sbb
icebp
iret
fwait
or
jne
push
daa
sbb
jbe
mov
sbb
adc
lahf
xchg
fld
movsl
lahf
add
call
mov
xor
pop
fidivs
jl
lahf
std
aas
arpl
testb
jno
sbbl
loope
mov
jge
add
sub
sbb
loopne
std
pop
xchg
test
jg
mov
add
mov
xor
jge
pop
aaa
mov
call
imul
xchg
cmpsl
or
add
sub
add
dec
lret
pop
cmp
lcall
add
sbb
mov
insl
fs
test
arpl
ja
dec
xchg
jmp
in
shll
hlt
loop
cwtl
and
sbb
mov
sub
rorl
js
push
and
aaa
mov
out
call
xchg
mov
cmp
cvtps2pd
sbb
out
cmpsb
ret
ret
mov
stos
mov
addr16
call
rorl
push
pusha
jns
sub
daa
cmp
add
jns
mov
mov
add
jecxz
add
sub
inc
aad
les
test
add
ja
addr16
clc
fidivrl
aam
fwait
mov
ficoms
inc
pop
push
push
rcll
inc
adc
pushf
jns
inc
cmp
hlt
mov
pop
aas
mov
sub
and
lret
mov
jp
sbb
call
repz
inc
lods
cmpsl
sbb
fisttpll
sub
fnstcw
scas
jg
dec
js
fwait
xchg
xor
push
dec
push
call
mov
repz
cmpb
adc
jmp
sbb
fs
xchg
jno
push
mov
sub
mov
in
pop
mov
dec
sub
and
adc
inc
xor
scas
lret
out
xchg
insb
dec
pop
aad
leave
cmp
or
js
data16
mov
imul
cmp
dec
sbb
ret
mov
cmp
cwtl
xchg
insl
divb
and
sahf
shll
jg
ret
jnp
or
test
pop
and
add
sbb
popl
imul
divb
adc
and
pop
sbb
test
push
xchg
cs
pop
shlb
and
repz
jnp
aam
imul
ret
ljmp
mov
mov
mov
test
inc
mov
sbb
test
stos
icebp
adcb
repnz
dec
xchg
popf
and
aas
jmp
xchg
lds
not
ret
dec
add
sbb
scas
les
fisubs
mov
mov
adc
pushf
call
or
pop
inc
add
add
mov
push
repnz
js
stc
fs
inc
push
pushf
lcall
add
jns
sub
sbb
test
movsb
or
movsb
jns
push
outsb
xor
js
sub
pusha
cltd
test
sbb
dec
jno
out
xor
in
cmpsb
cltd
adc
sub
int3
jae
std
call
cwtl
xorl
cmp
mov
scas
xchg
cmp
push
pop
daa
inc
push
xchg
mov
sbb
in
cmp
dec
jmp
testl
adc
loope
xchg
andb
push
xchg
js
xor
repnz
fdivl
sub
mov
negb
sub
int
stos
inc
pop
and
in
jnp
dec
movsb
dec
cmp
mov
fincstp
xor
mov
fstps
or
dec
cmp
mov
test
fbld
pop
pop
aam
push
sub
mov
enter
jb
aam
cmp
out
cmc
jbe
into
popf
arpl
push
sbb
testb
and
xor
dec
ret
sbb
pop
adc
lock
mov
enter
inc
mov
mov
dec
inc
or
enter
sbb
repz
sub
std
call
inc
sbb
xchg
out
repz
jl
repnz
mov
out
mov
jbe
xor
cmp
mov
icebp
push
les
add
call
xor
pop
sahf
or
mov
incl
push
sub
call
movsb
fs
out
mov
inc
add
mov
repz
cmp
adc
jmp
fbld
add
int3
repnz
jl
and
sub
mull
test
clc
loope
jae
dec
add
movsl
mov
outsb
lods
cli
inc
xchg
scas
mov
adcb
pop
add
andl
jb
test
xor
stos
mov
or
inc
jae
jno
mov
shl
cld
inc
lods
cs
and
lcall
xchg
xchg
mov
add
movsl
adc
inc
js
frstor
add
scas
in
push
adc
mov
scas
aam
or
es
add
mov
mov
mov
cmc
xchg
jae
andb
fsts
cmc
jl
push
mov
mov
and
mov
cmpsb
insb
pop
cmpl
mov
fs
leave
xchg
addl
and
sarb
cmp
jg
aad
aam
jno
pop
popf
ljmp
rol
mov
jne
sub
mov
or
arpl
add
and
jbe
sub
dec
lods
repz
xchg
int
or
sub
mov
sub
icebp
gs
loope
fnstenv
scas
repnz
xchg
hlt
loop
adc
xchg
sub
in
push
or
xchg
dec
mov
add
xorps
jp
fistpll
mov
clc
jbe
loop
int
sub
xchg
cltd
int
loope
stos
notl
dec
push
inc
xchg
xor
enter
lock
repnz
dec
inc
sub
xor
push
pop
add
jp
ds
cs
addr16
add
int
cwtl
out
mov
mov
gs
mov
mov
mov
lods
mov
jmp
cmp
sub
imul
xor
aas
jecxz
add
js
jb
add
out
adc
pop
and
rcll
cli
aas
dec
je
jns
mov
and
sub
std
inc
inc
fiaddl
dec
mov
or
lcall
inc
push
nop
movsl
push
lea
xchg
mov
or
mov
mov
pop
pop
adc
int
aaa
stos
in
imull
pop
sti
xchg
cmp
mov
icebp
jg
sbb
mov
imul
and
inc
icebp
aaa
mov
xor
stc
pusha
out
sub
jg
fs
mov
leave
shlb
ss
or
shlb
pop
mov
sti
setns
jl
movsl
fisubl
sbb
cmp
dec
in
addb
js
or
shll
outsl
adc
mull
xchg
jnp
out
jnp
imul
xor
jp
std
movsl
mov
inc
lret
xchg
adc
cmp
es
out
lock
inc
jb
sarb
orl
cmc
inc
add
xchg
sub
inc
iret
mov
rcrb
lahf
push
xchg
bound
aas
loope
jle
and
in
rcrb
adc
jne
fnstenv
ds
mov
out
dec
loopne
mov
sub
loopne
pop
cwtl
inc
mov
in
or
ds
mov
push
popa
fwait
in
push
push
sbb
rorb
mov
xchg
push
sahf
jmp
dec
xlat
jnp
xchg
lock
aad
aas
jg
rolb
xchg
into
mov
xchg
pop
insb
into
or
outsl
xchg
scas
mov
push
das
cmpsb
mov
cmp
daa
insl
jbe
sbb
repnz
das
sub
iret
das
jns
fstl
ss
cmp
jo
xchg
push
rclb
sbb
addr16
dec
das
xchg
push
aad
ds
in
pop
gs
data16
lods
inc
and
outsl
sub
out
jb
cmp
loopne
in
add
and
fucom
cmp
xor
xorb
mov
lods
xchg
xor
sti
movsb
jno
ss
es
das
sub
jne
jae
mov
and
add
and
pmulhuw
loopne
shrl
sub
cmp
xchg
push
mov
jmp
inc
dec
and
int3
ja
pusha
xchg
lret
repz
or
mov
mov
clc
pushf
and
sub
hlt
cmpsl
xor
mov
lea
push
addl
loop
jmp
stc
test
mov
and
fistpll
mov
dec
mov
adc
or
xchg
adc
pop
enter
sahf
xlat
adc
add
and
inc
push
jo
mov
aaa
cwtl
imul
or
cmc
push
out
addr16
lcall
sub
fsub
in
sahf
push
rcr
push
and
cmp
cmp
or
cwtl
iret
lret
or
stos
ror
dec
sbb
xor
push
lods
xchg
mov
mov
inc
fistpll
repnz
adc
into
jbe
das
and
adc
sti
pop
jp
pop
jo
aaa
sub
sub
jns
jbe
adc
jnp
or
or
lock
sub
imul
gs
jbe
divl
scas
mov
sbb
xor
sbb
aaa
daa
push
and
xor
loopne
xchg
es
out
stc
and
jecxz
and
add
lods
and
add
xor
imul
sarb
inc
mov
jmp
and
xchg
and
movsl
dec
pop
cmpsl
mov
repz
pusha
mov
cmp
shrb
xchg
push
cmpsb
out
imul
cmp
inc
rorl
ljmp
jg
insl
clc
adc
mov
sub
loop
daa
in
call
fs
fwait
push
incl
cmp
sbb
pop
pop
scas
mov
stos
inc
pop
out
out
push
aam
mov
xchg
pop
inc
pop
imul
insb
adc
out
ret
dec
cwtl
adc
lret
fcompl
hlt
mov
shr
inc
inc
xchg
jne
sbb
dec
in
cwtl
sub
js
fcomi
inc
mov
int3
aaa
pop
aam
inc
push
negl
push
ds
or
mov
ret
cmp
mov
pop
push
or
idivb
cmpsl
mov
xor
stos
xor
les
xchg
test
mov
in
jne
cmp
sbb
pop
cmpsl
cltd
mov
sbb
mov
mov
cmpsl
pop
in
sub
sub
mov
repz
fcmovu
mov
repz
into
push
mov
inc
or
dec
inc
push
fstpt
inc
std
sub
sahf
lret
sub
or
sub
outsl
fmulp
adc
cwtl
out
dec
ss
pop
dec
xor
mov
sub
scas
enter
sbb
daa
pop
lds
imul
js
aam
cli
outsl
jecxz
mov
inc
jo
in
push
inc
fidivrs
push
sub
and
inc
hlt
inc
jle
inc
mov
enter
frstor
dec
cld
js
push
or
xor
adc
lahf
push
sbb
je
fiaddl
in
pushf
adc
loop
jg
lods
mov
push
dec
xchg
pop
mov
lret
adc
cmc
jecxz
mov
cmp
out
pop
push
inc
inc
mov
and
adc
loop
aam
push
jo
in
imul
mov
cli
xlat
jne
movsl
mov
ds
adc
sub
mov
push
cmp
xchg
mov
dec
sub
and
dec
sti
shlb
loope
fsts
and
test
pop
mov
adc
ret
popf
add
mov
cld
cmpsb
gs
add
xlat
xchg
and
ds
gs
add
rorb
pop
shrl
inc
incl
hlt
rcrl
push
inc
hlt
in
sbb
popa
negl
int3
pop
loope
lds
mov
sub
jo
in
or
dec
out
iret
mov
adc
sbb
insb
jle
mov
orb
shl
outsl
les
cwtl
xchg
pop
fsubl
push
mull
insl
shl
movsb
mov
adc
clc
xchg
or
and
out
popa
repnz
test
xor
fmul
sub
sahf
lds
xchg
mov
or
movsb
xchg
xor
hlt
and
sub
pushf
xchg
xor
bswap
mov
adc
dec
movsw
adc
add
lahf
out
loopw
and
sahf
les
test
pop
inc
filds
sbb
xchg
or
push
adcl
fwait
cmp
in
cli
pusha
cmp
sbb
scas
rorb
in
fcoms
sbb
fmull
icebp
push
inc
cmpsl
pop
test
mov
inc
mov
aam
ja
and
insl
xor
cmc
cwtl
add
ficomps
hlt
pop
test
cld
js
lea
dec
insb
inc
inc
jns
mov
dec
sub
adc
pop
dec
mov
in
fisubrl
sbb
sbb
fcmove
loop
test
insb
inc
xchg
sti
inc
mov
rolb
imul
sarl
pop
ret
inc
xchg
dec
jmp
and
mov
xor
insl
ljmp
cld
insb
insb
sbb
lods
jns
xchg
push
in
fcmovbe
es
jmp
xlat
rol
jg,pt
sahf
dec
pop
fcompl
and
test
arpl
sbbb
jnp
mov
pop
push
ret
cmp
inc
jle
mov
in
xor
push
andl
jb
or
movsl
addr16
inc
repnz
adc
jb
movsl
inc
out
dec
gs
lods
scas
xchg
scas
xor
fs
scas
add
stos
lret
outsl
shrb
jns
fimuls
ret
int3
add
stc
fldcw
es
sub
xchg
pop
mov
mov
fadds
inc
shl
loope
pop
shlb
aas
cmp
les
jo
pop
or
mov
mov
cmp
aam
adc
mov
pop
lea
repz
pop
push
and
push
pop
push
aam
dec
mov
add
out
push
add
cmc
mov
xlat
daa
cld
cltd
mov
adc
in
stc
sbb
jg
rclb
dec
sbb
lods
out
addl
shrb
add
xchg
in
push
jl
out
jecxz
scas
lcall
aad
cmp
mov
xchg
imul
pop
mov
inc
mov
mov
cltd
cmp
inc
pop
mov
xor
sub
mov
xchg
jnp
repnz
ss
lods
push
popf
lcall
mov
call
push
jle
fdivrl
xor
inc
inc
mov
out
das
add
jmp
inc
cmpsb
jp
and
repz
js
or
pop
adcl
stc
ja
es
and
cmp
out
dec
push
gs
push
cmp
outsb
mov
pop
cmp
add
out
cmp
pop
add
dec
pop
mov
lds
hlt
inc
xor
loopne
mov
fstp
or
js
push
sbb
aam
and
rolb
push
mov
sahf
imul
ret
sub
pop
mov
xchg
add
aad
adc
sub
push
sub
pop
leave
push
push
movsb
shll
shr
and
inc
rcr
enter
mov
mov
pop
repz
mov
add
jae
push
jnp
xchg
add
push
xchg
scas
js
mov
jmp
fmul
popa
loope
imul
or
mov
aad
or
or
add
fs
call
aas
mov
cmpb
xchg
jnp
mov
sub
test
fdivrs
imul
shll
push
inc
inc
add
bound
jnp
stos
mov
sbb
jno
jb
in
dec
outsb
sbb
adc
sti
and
jle
imul
mov
sub
mov
iret
dec
inc
jbe
shll
dec
mov
shlb
je
sbb
lret
jge
jmp
sahf
dec
adc
outsb
outsb
inc
push
fsts
std
clc
jo
and
add
mov
addb
sarl
pop
insb
cmpb
push
xchg
daa
jmp
push
cmp
pop
mov
mov
sti
movsb
das
scas
jmp
fmull
and
pushw
cmc
bound
jge
xchg
pop
xchg
and
pushf
fiaddl
jne
orb
es
mov
nop
mov
pop
cmpsl
cmp
jnp
adc
jne
aad
and
adc
xchg
sbb
addl
push
push
or
leave
in
jle
pop
nop
and
cmpsl
out
fmuls
fwait
out
or
push
mov
push
in
xorb
xchg
out
inc
fsubs
dec
out
push
testb
cli
xchg
sbb
stos
mov
pop
faddl
push
jmp
jne
js
fadds
mov
adc
jmp
ret
mov
sub
pushf
sub
dec
add
mov
ret
aas
mov
popa
sbb
fs
adc
push
sbb
xor
fnstenv
mov
xor
sbb
jae
loop
movsl
ja
dec
push
insb
mov
adc
sub
or
sub
jne
pop
and
adc
repnz
test
call
out
inc
fwait
mov
mov
dec
jmp
inc
mov
push
push
insb
xlat
lret
push
pop
adc
jg
sbb
ds
and
xchg
push
xchg
es
in
jp
sub
das
mov
in
imul
push
andb
in
out
bound
dec
data16
in
jns
cmp
jno
scas
adc
aam
dec
lds
and
and
movmskps
lods
or
mov
scas
das
cwtl
lods
cs
mov
push
call
cmp
xor
xor
jp
lcall
xor
fcomp
or
mov
lret
fwait
pop
and
iret
sbb
bound
xchg
or
cmp
pop
and
lret
out
roll
movb
inc
mov
jne
or
ljmp
push
mov
cmc
add
shrb
sub
jb
dec
jb
push
and
rcr
xchg
movsl
insb
or
sti
sbb
pop
xchg
loop
movsl
and
sub
stos
dec
or
icebp
add
int
movsb
push
push
es
ret
xor
stos
je
xchg
nop
stos
push
mov
cmpsb
sbb
int
adc
pop
adc
mov
aas
jle
ss
xor
das
xor
inc
loope
cmp
push
mov
js
sub
shll
cmp
mov
repz
push
add
jmp
or
cmpb
sbb
cld
and
shlb
jo
test
jne
mov
inc
shl
push
movsl
mov
sahf
adc
inc
xor
add
sub
test
jle
fwait
mov
cmpsb
in
xchg
xchg
cwtl
pushf
lret
pop
inc
xor
cld
jecxz
mov
lds
jo
mov
xchg
mov
push
imul
shll
fs
jnp
ja
adc
jne
sbb
movsb
pop
dec
xor
mov
clc
push
addb
or
cmc
xchg
movsl
aaa
and
pop
push
test
test
sbb
cmp
shll
leave
add
mov
mov
jg
std
arpl
jle
xlat
inc
lret
push
push
add
inc
mov
idivl
push
sahf
addr16
in
out
aad
imul
mov
outsb
repz
sbb
or
mov
ss
test
fdivrs
mov
ret
lahf
inc
ss
sub
pop
mov
fidivrl
jb
int
lea
or
xchg
inc
and
push
cmc
pop
jle
das
scas
lods
repz
fisubrs
push
jo
movsl
push
jae
sbb
imul
ret
mov
arpl
in
loope
mov
cmpsl
add
inc
jg
js
int3
test
ret
cmpsb
fidivs
pop
nop
mov
movups
into
div
lahf
cmp
sub
cmp
je
mov
adc
sub
int
xchg
push
mov
dec
es
mov
popf
and
mov
dec
inc
cld
sahf
imul
idivb
ja
and
movsb
xorb
gs
rorl
pop
mov
and
cmpsb
lcall
mov
pop
xor
cmp
push
sarb
xchg
mov
sub
out
pop
out
dec
dec
cmp
loop
jb
insl
es
iret
rorb
call
xor
fistl
ja
int
int
int3
add
sub
and
xor
xchg
and
add
pushf
xor
inc
hlt
xchg
sti
testl
dec
xorl
rclb
es
outsb
call
push
xchg
jae
push
push
adc
or
sbb
xchg
popl
outsb
out
aas
cltd
ret
scas
push
mov
out
imul
shrl
mov
mov
mov
cmp
gs
fs
mov
push
decb
clc
popa
pop
das
or
lcall
push
repz
shl
in
push
loope
nop
fstl
int
in
test
jnp
lea
inc
rcrl
in
aam
mov
fidivrl
pushf
in
cmp
sub
cli
dec
icebp
notb
bnd
pop
or
xor
sbb
adc
nop
in
out
sahf
sub
or
andl
pushf
jno
inc
lea
ds
lods
jle
mov
push
loopne
and
inc
sbb
mov
xor
out
add
divb
inc
and
xor
cmp
mov
outsl
js
add
xor
out
fsubs
lock
mov
fcoml
pushl
adcl
push
clc
inc
dec
lahf
xor
adc
insl
push
test
sub
fiaddl
mov
std
mov
int
out
sbb
stos
pop
les
ljmp
outsl
dec
scas
xchg
jge
xor
push
mov
mov
loope
ret
mov
sbb
pop
fs
jle
dec
jge
mov
cmc
mov
push
mov
lds
xchg
pop
addr16
mov
or
insb
out
stc
jne
pop
jmp
push
test
inc
or
aaa
filds
mov
inc
rolb
push
add
xchg
mov
fldt
and
pop
sbbl
aaa
adc
sbb
xchg
adc
fdivr
xchg
cmp
xor
pop
roll
lock
mov
and
aaa
out
or
lds
cmp
addb
loope
int3
sub
icebp
es
mov
leave
and
notb
hlt
lcall
stc
into
mov
fstpl
fidivs
stos
inc
cmp
mov
pop
xor
push
sbb
stos
jbe
mov
test
aas
fwait
or
es
ljmp
sbb
mov
add
test
jno
xchg
mov
loopne
jmp
popa
int3
sbb
jge
ret
psrad
fwait
jecxz
pushf
je
adc
movl
push
mov
sub
adc
jg
pushf
mov
imul
or
loop
ss
or
ret
cmpl
shll
cmp
push
push
push
sub
scas
loope
mov
popa
inc
mov
movsl
xor
jl
xchg
loop
push
push
xor
lods
pop
das
dec
sub
loop
mov
in
cmp
adc
repz
sbb
rolb
int3
xor
lods
aam
pop
push
ja
xchg
lods
cmpsb
test
popa
mov
gs
cmp
cwtl
jge,pt
roll
cmpsl
lcall
mov
push
leave
pop
test
out
in
les
out
mov
fisttpl
mov
test
test
es
rol
push
shlb
adc
fwait
adc
mov
call
repnz
xchg
sbb
jnp
push
nop
xlat
sti
aad
sbbl
xchg
lock
mov
fwait
jg
and
xchg
xchg
negl
pop
and
cmpsb
lds
arpl
jo
loop
sbb
cwtl
jns
mov
push
mov
sbb
loope
and
pop
test
jno
imul
inc
daa
lret
lods
bound
aas
cld
lcall
cmp
test
jmp
mov
in
fmull
in
add
xor
adc
jb
push
leave
mov
xor
stos
out
in
cmp
sub
cmpb
stos
leave
dec
stos
push
je
jno
push
aas
xor
inc
sub
and
push
jnp
dec
nop
in
jno
cmp
mov
inc
cmp
xchg
dec
pop
cwtl
fmul
fnclex
das
add
inc
fdivrl
jcxz
in
push
adc
mov
sbb
pushf
mov
std
add
dec
dec
out
ret
ss
stc
jmp
fcomip
outsl
xor
sub
dec
stc
sub
popa
rolb
adc
dec
movsl
pusha
sub
push
mov
pushf
xchg
mov
sbb
je
int3
mov
jle
push
push
test
adc
xchg
aaa
pushf
int
aaa
icebp
fdivl
and
cmc
lret
or
jnp
push
push
xchg
xlat
mov
xchg
adc
sbb
jnp
pop
jge
push
jmp
inc
jnp
cld
or
movsl
sahf
xor
fisttps
mov
sub
pop
testl
addr16
loope
aas
cmpsb
inc
sub
jbe
cli
add
popf
add
pop
jecxz
ds
xor
mov
xor
xchg
xchg
scas
pusha
div
sti
inc
sbbl
cmpsl
xchg
shr
out
jl
call
mov
add
mov
aaa
pop
dec
subl
mov
push
cmpsl
in
mov
cmpsb
adc
sub
inc
sbb
and
add
sti
sub
dec
xchg
push
call
sub
leave
pop
add
mov
push
mov
notb
mov
enter
dec
jo
jo
mov
or
in
outsl
bound
cmp
sbb
lods
imul
sbb
pushf
xor
xchg
cwtl
and
pop
xor
pusha
sarb
mov
dec
xchg
dec
je
cli
push
ret
mov
jnp
je
push
enter
mov
xchg
sbb
mov
dec
add
movsb
out
adc
cli
movl
lods
jb
cltd
push
inc
push
cmp
sarb
push
xor
sbbb
inc
push
push
cmp
aad
nop
xor
adc
xchg
jmp
sbb
test
jae
jp
pop
cmp
movsb
xchg
iret
pushf
lcall
movl
popa
and
mov
repz
popf
clc
dec
mov
dec
xor
pusha
popl
cmp
cmpb
mov
movsl
fiaddl
in
lods
fcompl
or
cmp
lock
ja
hlt
jecxz
adc
mov
scas
aam
or
mov
ljmp
mov
jecxz
cs
fsubs
push
cmpsl
mov
in
fidivl
pop
enter
daa
ja
xchg
push
push
mov
cmpsb
fidivrs
mov
sbb
push
push
leave
es
or
sub
pop
dec
push
mov
call
je
repnz
xchg
cltd
outsl
xorl
adc
xchg
imul
outsl
mov
loopne
subl
xor
jb
push
lcall
cwtl
mov
jp
xchg
sub
in
cs
rcr
adc
call
push
sbb
fstpl
mov
iretw
pop
shl
push
mov
sbb
inc
insb
cltd
mov
push
sbb
mov
mov
and
fs
jge
pop
dec
sub
mov
or
rorl
mov
rcl
gs
inc
pop
push
jne
xchg
dec
idiv
pop
into
shll
mov
in
pop
adc
inc
hlt
dec
jle
xor
inc
mov
mov
fs
insb
adc
add
add
sbb
mov
popf
push
idivb
lods
adc
popa
fidivrs
pushf
mov
fucomip
cmpsb
cmp
insl
sbb
lahf
jbe
dec
fstpl
out
rcl
jp
mov
aam
leave
adc
dec
dec
or
lret
mov
popl
inc
ss
cmp
xchg
pop
mov
xchg
outsl
dec
dec
push
lds
inc
xchg
and
or
pushf
lea
out
in
xchg
fadds
adc
gs
pop
cld
cmc
inc
xor
adc
pop
lds
cs
std
fwait
xchg
xor
mov
xchg
pop
mov
or
imul
repnz
enter
xchg
mov
test
pop
cs
outsb
adc
jnp
fimull
push
leave
sbb
mull
shrl
inc
lock
dec
add
cwtl
dec
shll
int3
popf
pop
fsubl
dec
test
mov
out
adcb
inc
test
into
push
in
lret
jl
hlt
adc
popf
or
ljmp
js
jnp
pop
mov
dec
xor
cmp
int
push
jns
dec
jns
mov
lea
mov
ret
cltd
test
and
lcall
or
in
dec
test
add
adc
lret
cmpsb
divl
rol
pusha
daa
mov
int3
loopne
pop
push
jnp
xchg
shll
fistpll
insb
cmpsb
mov
dec
push
pop
andb
sub
adc
jl
outsl
mov
add
test
jl
mov
add
and
mov
lret
loope
mov
ljmp
add
push
bound
xorb
sub
lahf
inc
mov
ds
pusha
mov
scas
outsl
test
or
je
fsubrs
xchg
mov
mov
lret
mov
int
ret
imul
das
jbe
out
mov
pop
pusha
and
dec
xchg
insl
mov
adc
adc
or
jge
mov
mov
jp
jnp
xchg
inc
nop
inc
pushw
dec
rcll
shl
pop
js
mov
imul
cmp
psubd
and
mull
ss
sar
aad
pop
mov
out
loope
negl
dec
and
not
mov
sbb
test
mov
test
mov
xchg
sahf
call
frstor
out
adc
lods
into
mov
pop
stos
sbb
jecxz
push
lods
mov
mov
dec
add
scas
sarl
jl
push
std
std
addr16
push
sub
rcl
in
jno
ljmp
xor
mov
pop
or
pop
jnp
push
out
addr16
in
sti
leavew
into
aam
or
mov
cmp
hlt
and
push
mov
and
add
aad
push
cmpsl
mov
mov
pop
mov
mov
mov
adcl
or
jecxz
in
data16
pop
jl
mov
addr16
fs
adc
stc
lcall
adc
jnp
ss
pop
lret
sbb
cwtl
aam
int
and
sub
or
or
xchg
mov
sub
cmp
push
rclb
sub
mov
dec
mov
bound
rcrl
mov
add
test
sub
les
fs
inc
out
xor
or
bound
jbe
pop
xor
push
dec
pop
loope
xchg
insl
inc
lret
pop
out
cmp
adc
aam
mov
jo
popa
outsb
loop
pushf
ds
fcmovu
push
inc
adcl
orb
mov
push
inc
add
adc
lds
testl
inc
jne
xchg
insb
dec
lea
pushf
mov
les
cmpsb
sbb
je
cmpsb
push
test
mov
xor
popa
sub
mov
stc
hlt
js
into
inc
jne
pop
daa
jae
cmc
mov
mov
push
add
xchg
dec
jae
cld
std
mov
repnz
cmp
jns
incl
add
xlat
scas
test
mov
sub
mov
fiaddl
inc
sarl
shrl
xchg
push
fisubs
mov
adc
mov
xor
mov
add
mov
inc
aas
js
mov
daa
jp
cli
inc
shrl
add
lods
mov
mov
add
stos
push
daa
popa
adc
hlt
xlat
shlb
out
clc
xor
test
xchg
scas
sti
push
or
jmp
mov
sub
fists
mov
dec
and
hlt
into
rcl
dec
movsb
sub
lods
lods
sbb
or
xchg
mov
push
addr16
sbb
add
loop
test
mov
xchg
sub
dec
js
rorb
xchg
stc
cmp
out
dec
jnp
movsl
dec
repz
cmp
xchg
adcl
push
into
popa
cmpsb
jge
das
movsl
aad
adcl
and
push
jecxz
sub
pop
popf
repnz
out
movsb
pop
xor
xor
mov
xorb
mov
push
ret
mov
mov
inc
mov
repz
mov
lock
sbb
sbb
fsubrl
cmp
jns
cmp
fsubs
fwait
iret
out
adc
andl
loope
lcall
mov
data16
jp
xchg
pop
mov
and
xchg
mov
insb
sbb
mov
cmpsb
fwait
mov
pusha
popf
adc
cmp
sbb
inc
pop
mov
aaa
out
mov
adc
sub
loopne
push
inc
ds
sub
in
dec
jecxz
pop
push
ss
mov
outsl
leave
adc
pop
rcl
sahf
dec
sti
fs
sub
push
dec
xchg
xor
gs
pop
dec
js
xchg
leave
mov
adc
push
sub
mov
pop
test
push
rcrl
fwait
push
fmulp
outsl
push
pop
mov
rcl
in
mov
out
jp
fidivrl
push
shlb
jecxz
ret
ret
lods
jo
sbb
push
iret
iret
les
xchg
test
negb
cmpsb
sbb
outsl
adc
lock
adc
jo
cmp
or
call
add
ss
sbb
add
add
js
adc
lock
mov
jecxz
fwait
dec
imul
sar
cs
in
dec
adcb
stos
xchg
dec
std
add
push
mov
ss
push
mov
add
call
dec
call
aaa
das
ftst
enter
subl
stos
cmpsb
outsl
hlt
dec
lock
out
lcall
sbb
sbb
xor
movb
gs
incl
jl
sbb
mov
rcrb
jns,pt
sarl
push
pop
inc
add
push
mov
mov
inc
mov
cltd
fisubrl
pusha
or
or
scas
icebp
and
faddl
xor
mov
pusha
sbb
dec
inc
mov
cmpsb
add
gs
enterw
nop
push
add
aad
and
insb
and
fcmovnb
movsb
lods
test
aad
gs
enter
mov
sbb
or
ljmp
je
movb
fmuls
pushf
or
and
dec
rcll
test
push
adc
je
mov
imul
cmp
push
push
pop
adc
sub
xchg
lcall
jp
arpl
insb
shr
and
pushf
ret
hlt
repz
lods
jne
xchg
or
js
sub
test
xor
sbb
mov
les
fstps
jno
std
scas
jae
cmpsl
rcrb
jb
andps
sbb
test
xchg
or
hlt
jae
cmp
pop
xor
repnz
stc
rclb
daa
push
dec
xorb
and
adc
or
xor
inc
sub
leave
dec
inc
push
add
aaa
fimuls
fdivr
cmp
loopne
inc
insl
dec
fmull
push
push
iret
lock
cmp
xchg
in
popf
shll
test
daa
leave
pop
scas
testl
hlt
push
jmp
xchg
and
add
inc
or
or
xchg
fisttpl
outsb
hlt
jg
int3
push
jns
int
add
imul
pop
dec
popf
dec
mov
int
out
call
mov
or
subb
mov
cmp
clc
dec
in
js
dec
pop
mov
dec
or
xchg
popa
clc
xlat
push
aas
cli
sbb
push
xchg
sbb
and
mov
jp
clc
outsl
inc
push
inc
sbb
sub
lock
cltd
mov
lods
push
xchg
les
loopne
cld
xor
cmpsl
insl
cli
xchg
test
xchg
adc
mov
jmp
xchg
iret
or
int
mov
test
js
insl
dec
dec
scas
cmp
sahf
xor
cli
add
pop
sub
jp
jne,pn
xor
test
outsl
rolb
jmp
cli
popf
add
lret
mov
stc
add
xchg
jecxz
shr
sti
xchg
push
jmp
sbb
sub
out
inc
jp
loopne
xchg
sub
jbe
push
es
test
inc
mov
rcr
push
or
pop
adc
mov
dec
test
mov
cmp
push
dec
jo
push
mov
push
ljmp
sub
fnsave
out
cmp
sti
push
clc
mov
outsb
ljmp
stos
push
mov
pop
les
sub
xor
pusha
cmp
sahf
sub
test
xlat
pop
pop
js
inc
jl
mov
lahf
cmp
xlat
lahf
push
mov
xchg
test
addr16
enter
mov
cmp
ret
mov
fadds
cld
jmp
imul
adc
ljmp
xchg
out
fiadds
sub
dec
stc
mov
mov
ds
fisubs
lods
sbb
add
outsl
add
add
cmp
sbb
mov
jne
lret
sub
jle
stos
pop
maxps
jecxz
xor
out
popa
push
lea
or
dec
push
push
xchg
and
shll
cmp
loop
push
jp
and
adc
mov
inc
push
enter
add
mov
repz
mov
jg
pop
test
sbb
arpl
cmp
jge
jae
jno
inc
jg
fs
inc
jb
inc
fnsave
jp
mov
xchg
ss
in
cs
enter
pusha
test
jae
mov
jg
arpl
lret
frstor
xor
popa
mov
and
jge
and
pusha
ficoms
add
xor
int3
and
cmp
popf
ficompl
jb
cmp
stos
mov
xchg
fwait
xchg
mov
xlat
lahf
out
sti
xlat
aam
loop
repz
sbb
test
cmp
shll
cmp
cld
loop
pop
pop
sbb
xor
mov
xchg
into
mov
in
and
hlt
nop
mov
add
push
loopne
cmp
test
add
add
in
shrb
je
sbb
cld
in
inc
int
dec
lahf
fs
fildl
popf
iret
mov
mov
repz
dec
cwtl
scas
inc
cmp
movsl
ret
sbb
cwtl
aaa
cmc
jns
xchg
jge
pop
adc
std
sahf
shll
sbb
mov
push
mov
dec
outsl
cld
jmp
out
lods
loope
leave
mov
sbb
int3
inc
mov
inc
cwtl
insb
movsl
shr
jno
push
aad
jo
cs
cmovge
cmpsl
mov
pop
ret
sbb
in
push
outsb
addr16
push
fs
xchg
mov
mov
add
repz
inc
sub
or
lret
lods
mov
aad
sarl
mov
pop
pop
in
cli
aad
enter
lahf
xchg
fists
sar
xorb
or
or
mov
add
int
popa
ret
loope
jp
mov
add
mov
insl
data16
or
out
popa
xor
xchg
daa
xchg
nop
mov
aas
pop
sbb
movsl
out
cmp
popa
adc
push
xor
mov
and
mov
stc
xchg
jbe
mov
pop
daa
fsts
mov
inc
mov
fwait
sti
inc
inc
inc
movsb
repnz
sti
sub
add
rorb
jne
mov
xchg
fstpl
aam
cmc
inc
inc
sub
fidivrs
xchg
jbe
std
inc
out
cmp
pop
imull
ja
int
sbb
push
pushf
fwait
cltd
loopne
mov
mov
mov
mov
mov
ds
lods
imul
daa
xor
and
stos
test
and
dec
sub
xor
or
xchg
cmp
lods
cwtl
movsl
mov
clc
js
sub
mov
fwait
mov
popf
test
into
pop
sti
xor
shll
or
xor
pusha
loopne
out
pop
cltd
ja
adc
addl
rcl
inc
cmpsl
stc
mov
outsb
inc
adc
push
jl
iret
push
lret
or
sbb
push
jbe
jno
mov
xchg
jnp
lods
pop
or
jmp
push
fistpll
fmul
hlt
pop
filds
mov
pop
popf
sub
and
call
popf
or
ljmp
cld
xor
sbb
dec
xor
add
xorl
xor
testb
xchg
jecxz
xor
ret
dec
les
pop
fwait
lret
mul
jl
add
sub
pop
test
lcall
sub
jo
jecxz
lcall
idivb
addb
jo
insl
shll
xchg
pop
jp
and
mov
add
stos
adc
mov
test
jb
mov
mov
lock
xor
mov
fidivl
mov
inc
jp
subl
jge
and
adc
pop
or
sbb
lods
adc
lret
lods
xchg
jle
and
lea
pop
pushf
icebp
in
pop
push
adc
inc
mov
loop
test
push
lds
popa
mov
fistl
push
movsl
fwait
jmp
shr
test
mov
cmp
bound
cld
arpl
xor
imull
rcl
mov
or
mov
rcll
push
mov
cmp
xchg
add
call
mov
xchg
ss
cmp
jb
pop
fisubl
cwtl
jae
ret
xchg
xchg
das
mov
sarl
sbb
add
aas
andb
lcall
stos
inc
sbb
loope
lock
xor
mov
jl
int3
scas
and
sbb
cmp
pop
mov
aad
out
hlt
add
xchg
mov
xchg
xor
push
adc
cltd
mov
xchg
xchg
add
icebp
rolb
daa
imul
jns
sbb
dec
cmpl
push
pop
andb
mov
ret
int3
into
jl
repz
popa
inc
push
jmp
pop
loopne
mov
push
jo
dec
add
mov
cmp
aad
loope
int3
inc
jp
incl
lahf
ret
popf
arpl
repz
jecxz
insb
cmp
fldl
xchg
sbb
sar
aam
cmp
mov
fdivs
icebp
sbb
out
push
cmp
movsb
mov
and
inc
std
xchg
xchg
sub
pop
stc
inc
cmpsl
adc
lahf
ljmp
test
and
lahf
ljmp
das
sbb
cmp
testb
and
mov
sbb
mov
mov
movsl
cmpsl
lock
jnp
movsl
xlat
fldenv
loop
xor
xor
stc
mov
fdivs
es
push
pop
mov
jno
daa
adc
jmp
xor
sub
mov
push
lea
test
outsb
add
push
loop
decl
jbe
lahf
and
sti
mov
pop
push
mov
mov
xor
and
icebp
int3
arpl
add
into
adc
xorb
sub
popf
mov
sarb
jecxz
xlat
push
cli
filds
adc
into
ss
inc
subl
clc
jmp
xor
fwait
loop
mov
roll
andb
push
cs
xor
mov
adc
inc
fidivrs
jo
pop
in
xor
inc
push
push
mov
out
push
sub
adc
mov
adc
das
bound
addr16
mov
loope
sub
push
cmp
imul
repnz
pop
lea
fidivrl
or
inc
mov
jns
sbb
pop
adc
ljmp
inc
mov
popf
and
call
push
push
fisttps
mov
fwait
dec
out
cmpsl
in
pop
cli
xchg
mov
push
xchg
out
stc
aaa
aas
iret
in
lret
popf
aad
mov
sub
gs
jbe
sbb
sub
or
pop
and
add
int3
sar
rorb
pop
fdivr
xlat
add
dec
pop
sub
rcrl
jns
fs
mov
fstps
scas
and
lcall
fstpl
pop
add
mov
sbb
and
mov
xchg
sarb
in
pop
jne
xchg
sub
mov
fucomip
or
addr16
add
mov
adc
push
aaa
into
xchg
adc
movsb
mov
add
cmp
lock
inc
scas
clc
inc
sub
jmp
scas
cmp
mov
sti
aad
insb
dec
jle
data16
data16
inc
loopne
jg
xchg
lcall
and
mov
or
jo
daa
cmp
das
shll
jbe
stos
push
xchg
fwait
or
sub
pop
or
mov
mov
sub
lcall
iret
cwtl
nop
inc
mov
insb
or
sti
stc
pop
hlt
enter
movsb
in
and
lods
mov
or
push
add
xorb
push
psrld
mov
jb
cmp
cmp
arpl
rolb
push
lret
fsubrs
fnstenv
dec
shlb
xchg
mov
mov
or
xlat
ja
or
int
mov
hlt
call
inc
pop
jle
int
inc
mov
pop
out
adc
mov
push
xor
mov
loop
cmp
repnz
xor
cmpsb
sub
daa
sbb
jg
mov
lret
lahf
pop
in
mov
bound
dec
rolb
pushf
movsl
xor
fadd
loope
push
nop
ss
testl
pop
movsl
fimull
mov
and
add
mov
ds
cmp
lea
iret
adc
mov
les
inc
ljmp
repnz
stos
fildl
mov
adc
outsl
mov
adc
mov
jno
mov
sub
mov
lea
mov
ss
addb
hlt
sbb
ret
cmc
lret
inc
lods
call
mov
loope
jo
test
sub
das
inc
int
and
daa
or
vhaddpd
imul
call
xchg
mov
pusha
lahf
fs
jmp
pusha
mov
and
mov
dec
ret
or
mov
xchg
jae
je
addb
aas
jle
inc
jmp
inc
sub
mov
pop
dec
nop
loop
inc
cmp
xor
or
push
bound
adc
or
mov
inc
lahf
inc
outsl
adc
lcall
sbb
mov
insl
movsl
jge
and
cs
adc
cmc
adc
mov
icebp
faddl
xchg
push
inc
pop
and
jns
mov
imull
call
int
outsl
clc
add
daa
scas
xchg
mov
pop
sbb
and
jns
cmpsb
loopne
andb
jo
inc
mov
dec
rcrb
fs
inc
jne
mov
imul
out
adc
popa
xor
imul
leave
das
xor
xor
dec
jmp
sbb
rcl
imul
iret
adc
or
ret
fistl
dec
loope
ja
out
das
and
push
in
lock
pop
insb
push
arpl
mov
outsb
xor
xchg
dec
xor
pop
mov
lcall
fiaddl
sub
ljmp
adc
or
dec
push
mov
mov
rclb
pop
push
dec
cmp
dec
arpl
cmpsb
aad
stos
fnstcw
mov
jmp
arpl
test
xchg
lahf
in
jbe
stc
cmp
sbb
outsl
push
pusha
jg
xchg
xchg
mov
push
push
push
jmp
rolb
es
dec
inc
pusha
in
xchg
lds
out
aas
test
add
mov
cld
push
ja
jne
dec
or
cmpsl
pop
dec
dec
out
idiv
cmp
fimuls
sbb
pop
jle
gs
xchg
lcall
mov
push
fnstenv
mov
mov
sub
sbb
pop
or
and
stos
dec
jne
adc
negb
test
ss
mov
shlb
sub
es
or
or
lcall
mov
and
gs
adc
mov
movsb
mov
stc
jo
jp
int3
dec
dec
sbb
arpl
pop
aas
call
repnz
xor
pusha
into
mov
push
insl
dec
jns
xor
xor
pop
push
out
pop
pop
mov
fcomi
mov
push
addr16
cmp
jno
cld
or
fidivrs
inc
mov
out
xor
or
in
mov
lret
push
loop
decl
test
adc
pop
mov
loop
in
arpl
mov
cmp
inc
imul
mov
xor
cmp
mov
xor
in
cmp
xor
push
sub
movsl
adc
or
pop
mov
push
imul
pop
push
pop
push
sbb
cmp
push
and
adc
push
cmpsb
cmp
dec
iret
fistpl
scas
std
repz
and
fsts
push
ret
pop
jne
adc
shrl
and
fnstcw
rcl
push
andl
ds
mov
pop
xchg
rcll
in
sub
lea
ret
stc
leave
pushf
popa
cli
jnp
jg
lahf
cmp
nop
mov
or
lret
mov
jg
in
xor
pop
adc
lods
or
cmp
je
adc
iret
popf
jo
in
push
outsl
addr16
jecxz
call
mov
sbb
scas
push
cmp
imul
mov
nop
ja
stos
and
lock
jecxz
add
cmp
test
and
jg
lock
cmp
test
inc
mov
sbb
cli
jo
jnp
add
mov
add
jp
jmp
outsl
adc
test
push
and
daa
loop
push
sbb
out
mov
popf
xor
lods
push
mov
int3
es
add
mov
dec
adc
cmpsl
rcrb
flds
add
inc
js
mov
mov
mov
sub
and
adc
aas
adc
insl
ss
int
std
pusha
das
movsl
aas
daa
mov
negl
jle
bound
int
dec
inc
testl
adc
sub
testl
stc
fwait
mov
roll
cli
or
movsb
outsl
add
addr16
sub
stos
bound
and
popa
sbb
out
jl
mov
xchg
sbb
inc
push
mov
mov
push
lahf
icebp
and
scas
insl
jb
cmpsb
add
inc
mov
inc
cmp
xchg
cs
loopne
inc
scas
jecxz
sub
mov
aam
ds
aaa
pop
or
call
mov
mov
imul
pop
rorl
push
dec
mov
shll
pusha
into
mov
add
xchg
roll
dec
test
int3
imul
test
inc
pop
cld
fsubrs
popf
sahf
pop
lret
add
adc
loopne
call
nop
or
xchg
adc
adc
repz
pop
call
push
sbb
and
pop
dec
mov
scas
shlb
jo
mov
stos
xlat
es
cld
xor
imul
or
dec
jg
lret
je
aam
xor
movsb
ret
adc
in
rcrb
insl
push
xchg
repz
pop
or
repnz
mov
fs
test
xor
daa
pop
gs
ds
jp
ret
mov
es
jne
adc
xchg
push
testb
jo
mov
add
lock
lret
or
xchg
popa
mov
jp
push
out
xchg
mov
fcomp
ljmp
int3
scas
pop
sub
daa
mov
dec
ret
ret
jle
and
scas
cmp
jno
mov
or
mov
xchg
jecxz
jbe
frstor
out
out
cmp
data16
mov
lock
scas
push
ljmp
sbb
ss
inc
push
mov
xchg
pop
loop
fmuls
xchg
jp
or
and
cld
ret
cmpsl
inc
test
sbb
pop
xor
dec
mov
mov
clc
sub
pop
insl
adc
leave
xchg
imul
xchg
mov
pop
cmp
ja
fdivs
data16
sub
jl
out
pusha
adcb
sarb
xor
lods
mov
inc
aam
dec
rcll
leave
out
rorl
add
xchg
sbb
shl
lret
sub
push
clc
scas
stos
jne
mov
mov
jbe
dec
ljmp
outsb
in
out
sub
notb
out
icebp
inc
dec
out
cmp
int
fistpl
iret
pop
pop
lock
jb
lds
jg
outsb
in
dec
jno
cmp
jne
mov
aas
outsb
es
cmpsb
roll
orb
dec
xlat
and
xlat
sbb
adc
mov
push
or
pop
iret
repz
rclb
insb
dec
imul
in
cmp
lds
fwait
jne
jne
outsl
jb
push
fldt
sub
mov
int3
bound
mov
inc
cmp
divb
or
mov
dec
in
xchg
lea
and
imul
mov
xor
cmp
nop
dec
adc
fidivl
clc
adc
or
sbb
mov
push
pusha
adc
or
add
pop
rorl
in
jae
out
sbb
add
scas
cltd
jl
in
cltd
inc
jp
imul
adc
pop
push
dec
mov
or
ja
adc
test
scas
mov
ret
mov
stc
bound
inc
rcll
inc
cmpsb
pop
stos
aaa
sub
out
stos
andb
sbb
add
sahf
ret
rclb
mov
fnstsw
jo
mov
jle
inc
adc
add
fbstp
jno
mov
and
mov
push
xrelease
pop
xchg
rclb
or
dec
jle
roll
cli
xor
push
jecxz
cwtl
lock
mov
push
xor
popf
iret
mov
loop
je
jmp
add
push
ret
mov
mov
add
xor
push
or
jp
fmulp
pop
out
dec
aam
into
in
and
adc
sub
add
repz
insb
mov
add
andb
fmul
cmpsb
into
sub
dec
push
call
sahf
jge
sar
ja
mov
jo
imul
mov
mov
push
inc
push
xor
outsl
jge
dec
repnz
adc
sbb
inc
fidivl
and
mov
push
jae
and
xchg
imul
cmp
adc
cmpb
popa
lods
div
lahf
hlt
inc
pop
in
loope
notb
sbb
cwtl
test
cs
xor
idivl
sahf
xchg
sub
xor
cmp
add
adc
mov
jo
xchg
and
push
add
mov
push
pop
enter
adc
jg
jbe
jmp
and
jg
aas
into
movsb
inc
imul
rorb
inc
popa
pop
jno
mov
orl
xor
bound
sub
sub
in
in
push
mov
ja
mov
sbb
repnz
mov
push
add
aad
mov
imul
lds
subb
les
inc
sub
lea
inc
sar
call
sub
rcrl
sub
dec
cs
inc
sbb
fildl
movl
adc
out
push
or
sbb
mov
cmp
pop
sub
xor
mov
call
sub
leave
mov
dec
push
arpl
mul
push
scas
mov
pop
adc
push
mov
lods
lock
test
repnz
rcll
pushf
call
mov
inc
lods
jmp
xchg
xor
cmpsl
jg
ljmp
lds
sbb
inc
push
jecxz
lret
in
test
hlt
jge
mov
pop
popa
jle
xor
xor
push
pop
push
int3
inc
xor
mov
ss
adc
hlt
mov
sbb
lret
cmp
int3
in
or
or
out
int3
jmp
jge
lcall
xorb
test
aad
jne
mov
add
mov
mov
pop
jge
cwtl
and
mov
ja
int
cmp
sub
xor
lahf
mov
sub
js
and
add
sti
mov
push
pusha
enter
mov
pusha
icebp
cltd
jg
pop
loopne
add
scas
fcoms
ss
jg
ret
jb
xchg
call
aad
lods
push
and
mov
cmc
add
add
cmc
fs
sbb
add
sub
sbb
pop
and
lahf
aam
ja
xchg
xchg
jmp
sbb
popa
shlb
mov
mov
push
jecxz
adcb
arpl
mov
lahf
adc
push
lods
inc
in
mov
rcll
jle
scas
inc
pop
nop
or
shl
aas
cmpsl
in
xor
out
sub
ja
xor
jle
cmp
jb
xor
xor
push
mov
neg
sbb
sets
aaa
adc
dec
movb
or
dec
cmpb
data16
pop
adc
mov
jmp
in
pop
movsb
add
sbb
mov
or
add
pop
in
lds
dec
mov
jo
mov
dec
iret
mov
jp
inc
pop
gs
shlb
sub
or
loope
mov
add
and
outsb
adc
cltd
outsl
cli
call
fistps
or
call
ret
dec
ret
mov
mov
add
and
sbb
in
adc
and
daa
sbb
push
or
inc
mov
dec
clc
and
enter
rcll
sbbb
xchg
jae
movsl
es
lods
pop
fidivrl
testl
test
fstps
jne
lret
lcall
imul
inc
jecxz
adc
cld
xchg
mov
fdivrs
cli
mov
cli
decl
in
and
fistps
xchg
pop
xchg
call
push
cpuid
xchg
lcall
insl
inc
mov
jns
and
cmp
jo
push
imul
pop
adc
daa
out
sub
aad
mov
icebp
dec
mov
pop
or
inc
scas
shlb
xlat
mov
xchg
xchg
repz
ficompl
mov
cmp
ss
sahf
fistpll
inc
daa
mov
outsl
mov
imul
mov
add
insl
push
mov
pop
xchg
shll
ds
fs
inc
push
lcall
or
fidivs
or
orb
dec
aas
jg
mov
in
ret
ja
popa
repz
cmp
push
xlat
jge
mov
bound
dec
in
push
jle
xchg
mov
imul
mov
cwtl
push
fmull
lahf
fs
mov
jns
stc
pop
lahf
xchg
xchg
push
lea
push
fwait
mov
hlt
cmp
sbb
imul
lret
push
flds
pop
sahf
imul
cmc
lret
xchg
xchg
mov
lret
mov
sub
movsl
in
mov
js
mov
mov
add
mov
pusha
xor
cwtl
mov
or
sbb
sub
or
lea
mov
bswap
adc
aam
push
sbb
dec
pop
jp
push
push
popa
sti
push
aas
mov
and
jo
aas
je
popf
push
mov
push
enter
daa
test
test
andb
fldcw
or
cld
sbb
adc
add
bound
mov
pop
rolb
jnp
inc
insl
jecxz
loope
rcrl
cmpsb
daa
lcall
jne
fsubl
push
xchg
push
adc
mov
and
cmp
fidivrs
sub
lock
xchg
xorl
ret
cli
es
ss
inc
in
mov
ljmp
aam
mov
icebp
int
ljmp
inc
mov
lret
pop
pushf
mov
mov
or
cld
in
add
mov
mov
and
std
dec
daa
adc
les
push
rcl
adc
mov
mov
mov
nop
ret
and
jp
sub
inc
xchg
jns
frstor
popa
cmp
inc
imul
fidivs
and
aam
and
sbb
adc
dec
sub
sbb
jge
mov
flds
dec
add
sbb
sahf
shld
cmp
stos
inc
aas
cmpl
test
int3
int3
jnp
in
addr16
mov
ljmp
roll
enter
lcall
mov
lds
push
xor
jnp
jns
fistpl
cmp
das
sahf
adc
add
add
dec
pop
ljmp
adc
cltd
ud2
jmp
data16
js
add
add
mov
cmp
ret
fdivrl
mov
ret
cs
sahf
pop
gs
jg
mov
cmp
adc
ds
sbb
stos
leave
call
sub
jl
mov
add
cltd
mov
test
scas
sub
adc
mov
enter
dec
cmpsl
insl
pusha
cmpsl
cs
lcall
and
mov
inc
mov
push
pop
or
test
mov
subl
rcr
int3
in
in
ss
pop
loop
push
add
and
add
push
inc
lahf
dec
xchg
sbb
loop
lea
packssdw
push
sbb
cmp
push
lea
insl
rcrl
jecxz
sub
add
stos
mov
mov
or
adc
pusha
fs
cs
jb
cli
stos
repnz
loope
dec
cmp
add
rcl
mov
ja
lcall
ss
es
cmp
push
lret
test
jge
push
push
hlt
cmp
enter
jecxz
fstps
push
add
fucomp
insb
mov
mov
insb
jle
xor
or
pusha
add
push
iret
dec
divb
roll
dec
push
shl
xchg
fucom
dec
cmpsl
shll
ljmp
pop
push
fsubrp
dec
mov
loopne
ja,pn
je
mov
sbb
push
cltd
mov
xor
pop
pop
adc
cmpsl
test
hlt
cld
or
pop
ja
push
sbb
add
lcall
mov
mov
mov
std
iret
sbb
push
ljmp
fiaddl
je
adc
aam
fwait
jmp
pop
fdivl
cmp
cmpsb
aam
jl
scas
mov
sbb
lds
add
mov
cmp
mov
jae
push
xchg
fstpt
jnp
mov
push
or
repnz
std
add
addl
cmp
ret
xor
and
xor
dec
jbe
inc
sub
imul
push
mov
jnp
pop
cmp
imul
fildl
cmp
stos
test
incb
adc
enter
inc
mov
or
cld
cmp
movsl
push
mov
aas
push
subl
and
icebp
scas
out
lods
pop
in
mov
into
push
pop
stos
pop
movsl
dec
sbb
xchg
mov
mov
out
jb
aas
int
jle
pusha
into
test
adc
mov
adc
jp
jne
cwtl
neg
dec
and
jo
inc
lds
decl
mov
xchg
pop
dec
inc
dec
lea
dec
sbb
xor
repz
lods
fisubrl
pop
fidivl
jle
xrelease
mov
jp
mov
loopne
and
cwtl
mov
sbb
xchg
sbb
mov
mov
mov
es
mov
mov
test
sub
xlat
test
inc
fidivrl
jns
fwait
dec
push
inc
adc
inc
ljmp
or
inc
cld
sub
sarl
cmp
test
fdivl
push
stos
addl
xchg
add
mov
pop
pop
rcll
inc
sub
mov
mov
adc
jmp
inc
daa
dec
dec
sub
pop
arpl
daa
add
xor
rcll
inc
cwtl
je
cmp
jl
stos
scas
cwtl
sbb
jbe
cmc
xchg
shll
push
mov
test
movsl
mov
mov
test
push
leave
data16
or
int
cmp
and
in
mov
or
sub
adc
cli
lret
jo
xchg
inc
out
xchg
dec
or
jne
push
ds
in
das
add
add
cld
cmp
pop
jge
push
push
inc
add
adc
popf
lods
fmul
dec
aam
lods
test
movsl
mov
add
jmp
sti
nop
call
arpl
repnz
int
cwtl
and
mov
adc
imul
or
push
mov
leave
pop
dec
add
popa
sub
in
into
jb
fadds
or
pop
repnz
pop
sbb
shll
add
and
inc
sbb
cmp
cli
out
mov
fwait
popa
mov
mov
push
into
jbe
inc
fnstenv
xchg
popf
push
pop
int3
xor
jp
insl
test
pop
xor
es
stos
and
mov
cmpsl
movsl
outsb
pusha
xchg
xor
sub
push
cmpsl
rcrl
movsb
inc
mov
xor
xchg
mov
std
inc
or
rorb
loop
xor
mov
inc
inc
clc
mov
push
pusha
cmp
fcmovb
xchg
or
sub
jmp
lea
xor
repnz
or
push
js
dec
shrb
inc
es
ljmp
or
sbb
push
mov
xor
and
xchg
cwtl
add
mov
ret
movsl
mov
test
fbld
cmp
cmp
xchg
sub
lods
ss
jno
scas
xor
sbb
lret
mov
pop
sbb
lods
mov
inc
popa
into
mov
loope
lods
cmpsb
lret
and
iret
mov
sub
mov
out
scas
or
jl
jns
lret
aas
and
mov
mov
arpl
insb
jnp
push
popf
out
ljmp
push
dec
mov
jmp
leave
fnstsw
xchg
jo
decb
stos
arpl
xor
enter
xor
dec
fs
xchg
or
imul
pop
fisubs
inc
cmp
add
fidivs
clc
xchg
mov
xchg
ret
inc
fldl
dec
call
rorl
adc
movsb
cmp
dec
sbb
push
jle
cmc
or
in
pop
lods
lods
cwtl
or
add
popa
test
push
sub
scas
dec
dec
shlb
jns
push
inc
xor
jl
into
jle
aaa
dec
push
adc
sti
lret
int3
cltd
sub
jecxz
das
fsave
fidivrs
pop
js
loopne
xor
dec
mov
cld
dec
xor
sti
push
adc
jl
xchg
jae
mov
inc
lcall
pop
sbb
pop
dec
add
mov
bnd
xorl
aad
mov
sbb
fmulp
pop
inc
mov
jmp
lods
addr16
aas
test
lcall
xchg
ja
jne
cld
imul
jo
aaa
jne
jle
ljmp
in
fstp
cli
inc
xor
dec
shl
and
faddl
adc
xor
lods
ret
stos
cmp
xor
mov
hlt
mov
fisubl
rcl
outsb
push
xchg
cmp
xchg
adc
jmp
add
pop
mov
test
cmpsb
fisubl
and
mov
push
pushf
repz
in
frstor
les
inc
adc
xor
sbb
adcl
push
stc
ret
fwait
call
xchg
dec
stc
pop
fs
lret
in
nop
rol
jecxz
movsb
scas
sarl
int3
ficompl
rcrl
and
mov
jle
scas
mov
and
or
and
mov
ficoms
mov
inc
shl
dec
shlb
xchg
adc
xchg
xchg
fcoms
xchg
dec
dec
add
push
leave
daa
xor
xlat
add
stc
xchg
aaa
inc
ss
xchg
ljmp
into
inc
mov
movsl
push
popf
dec
and
pop
sub
jne
int
push
pop
imulb
insl
testl
ds
call
jae
xchg
loop
lea
dec
push
cmp
test
pusha
aad
scas
add
cmpsb
adc
enter
stos
jno
insb
jle
push
jmp
push
inc
jecxz
mov
pop
imul
test
mov
notb
or
or
testb
or
aam
int3
sbb
lods
dec
imulb
or
push
dec
sbb
pop
jmp
adc
lcall
fistps
mov
rol
or
xchg
fsubrs
mov
jecxz
adc
mov
fsts
jae
jae
dec
xor
jb
stos
mov
or
xor
js
mov
sbb
pop
cs
and
shll
into
nop
push
outsb
imul
or
sbb
sbb
mov
pop
int
xchg
or
shll
cmc
or
mov
xchg
sahf
or
js
xchg
hlt
sbb
arpl
sub
sbb
jns
sbb
push
scas
mov
mov
push
mov
or
gs
jle
cmp
ljmp
bound
sahf
cld
or
leave
sti
fs
sbb
fsubs
loope
syscall
cld
roll
push
inc
inc
cmp
mov
mov
decl
stc
jbe
push
popf
stos
push
xchg
xchg
ljmp
inc
mov
push
lahf
arpl
pop
pushf
cli
dec
adc
jae
mov
movsb
movsb
icebp
adcb
imul
push
cmp
mov
push
fadds
loopne
ss
sbb
and
nopl
outsl
int
cld
mov
inc
mov
mov
dec
dec
inc
sar
nop
and
add
imul
ss
fldcw
jmp
addr16
and
pop
or
pop
xchg
pop
and
xchg
mov
popf
xlat
addl
sub
or
and
mov
inc
dec
es
jg
xchg
movsb
out
xor
je
and
ds
pop
pop
xchg
ret
cmp
sub
lods
mov
loope
pusha
adc
lea
sub
shrl
dec
in
gs
lea
in
push
push
and
xchg
cwtl
int
hlt
xchg
dec
adc
add
jge
jbe
ret
pop
adc
and
in
lcall
orb
mov
xchg
xor
mov
cmp
adc
decb
mov
sbb
lods
mov
push
out
xor
mov
adc
int3
cmp
dec
out
fdivl
sbb
fs
fistpl
sub
or
test
movb
push
adc
out
loope
mov
outsb
ret
das
sub
sub
cltd
sub
push
and
hlt
iret
bound
pushf
frstor
add
test
lcall
fincstp
nop
iret
adc
mov
sub
and
add
push
push
jbe
pop
frstor
icebp
sbb
sub
sbb
int3
pop
mov
dec
pop
jp
rcr
or
push
hlt
ss
or
push
cmpsb
sbb
and
loope
ret
dec
push
loopne
das
sub
rcll
inc
outsb
or
repnz
les
repnz
add
dec
xor
add
and
push
add
sub
xchg
fdivrl
in
mov
xor
fsubl
testb
in
lods
xor
sbb
mov
cwtl
in
int3
stos
add
jns
add
lret
jmp
inc
fildll
adc
sub
dec
inc
lods
pop
out
insb
lahf
dec
arpl
sub
je
inc
es
dec
mov
add
mov
out
cld
pop
or
jnp
mov
fisttps
outsl
adc
fcom
sbb
push
daa
pop
adc
cmp
pusha
jl
dec
in
push
daa
out
out
int3
or
scas
aad
test
dec
int3
sbb
cmp
jo
cmp
and
in
push
sub
cld
push
movsb
and
or
xor
shlb
popf
fs
jmp
popf
movsl
imul
ljmp
fnstenv
les
into
and
or
imul
movsb
icebp
cmp
sti
sbb
xor
stos
rorb
adcl
mov
dec
or
bound
xorl
push
sbb
stos
mov
adc
lods
mov
adc
xchg
sahf
add
in
sbb
ret
and
repz
movsl
in
andl
arpl
cltd
inc
mov
out
push
xchg
mov
xorl
dec
adc
push
enter
dec
in
xor
sbb
push
das
cli
dec
ljmp
push
push
add
aas
push
mov
push
sub
outsb
imulb
dec
fs
xor
xchg
xor
add
mov
insb
sbb
cmc
jo
and
movsb
and
mov
dec
inc
inc
cwtl
jg
cmp
push
ret
mov
sbb
call
iret
stos
cmpsl
push
pop
jno
xchg
mov
mov
jmp
fcompl
or
ljmp
dec
insl
mov
and
inc
mov
and
pop
icebp
mov
pop
mov
lret
popf
jmp
fdivl
ljmp
rorb
and
sub
cmp
xchg
jecxz
mov
clc
jbe
jmp
add
insl
shll
int
or
push
iret
push
inc
sub
les
cmpl
fcom
push
rcl
mov
lcall
adc
xor
push
mov
or
lret
cmp
cld
xchg
cmpsl
imul
imul
inc
jp
sub
je
lret
pop
and
mov
push
imul
fs
arpl
add
lcall
fldl
mov
adc
mov
xchg
mov
lock
in
cmpsl
push
out
or
cmp
loopne
nop
fnstcw
lds
xchg
mov
push
adc
pop
adc
dec
int
loope
inc
inc
mov
pop
cmpsb
or
xchg
or
loope
mov
push
leave
add
mov
aas
and
adc
sbb
push
mov
stos
jg
adc
je
je
daa
jp
xor
lds
dec
test
stc
pop
jmp
rcll
mov
imul
mov
imul
lcall
cld
mov
sub
inc
pop
adc
fcoms
imul
test
dec
xchg
add
iret
mov
cmp
sub
pop
mov
filds
les
mov
fimuls
lret
les
push
imul
and
pop
mov
repnz
lret
faddp
rcl
cmp
push
mov
scas
pop
mov
arpl
lods
xchg
mov
lahf
shlb
inc
xchg
cmp
xorb
add
xor
in
dec
mov
mov
cmpsl
pop
jecxz
push
movsl
lret
push
jg
sti
push
cmpsb
sub
cltd
mov
pop
stc
in
mov
or
push
fwait
shll
popa
sbb
pop
xor
jmp
push
push
push
dec
sbb
iret
jp
push
sbb
inc
rorb
pop
repz
or
les
fcmove
jecxz
aaa
jg
das
outsb
addb
sbb
sbb
call
mov
push
jge
add
lret
cmp
adc
mov
push
fildll
test
mov
xor
cli
jmp
test
sbb
aad
xorl
xchg
scas
xchg
dec
lock
ljmp
xor
clc
das
inc
dec
xchg
dec
push
cmp
inc
mov
bt
adc
mov
rolb
loope
lock
inc
fwait
inc
hlt
mov
int3
jge
xchg
mov
mov
inc
mov
xor
and
cmp
test
dec
out
lock
push
iret
pop
mov
xlat
test
leave
or
repnz
add
test
and
push
jne
movl
out
repz
arpl
pop
ss
shrb
arpl
jnp
enter
fidivrl
aam
ficompl
sbbl
xor
sbb
int
push
into
repz
cmp
addl
gs
sahf
pop
cmpsl
xlat
xlat
xchg
sbb
add
inc
addr16
ja
adc
add
clc
inc
imul
mov
pushf
es
sahf
jne
leave
fldenv
lock
loope
addr16
sbb
mov
into
xchg
mov
cmpsb
in
inc
pop
add
and
sub
lds
aas
jbe
cmp
inc
and
cmp
arpl
aam
mov
pop
fiaddl
in
iret
xchg
ffreep
insb
push
mov
jno
nop
stos
lds
gs
sbb
mov
xchg
cmpsl
pop
cmp
cmp
aaa
jb
ss
stc
adc
pop
fwait
pop
insb
and
in
lock
pop
inc
in
add
sbb
inc
iret
imul
adc
int3
in
sub
or
sbb
dec
push
pop
lret
outsl
and
scas
call
fwait
arpl
jae
icebp
aad
mov
push
rol
fsubr
inc
adc
arpl
rclb
xor
aaa
out
jne
jnp
aaa
or
test
stos
idivl
pop
movsb
outsb
pop
sarl
stos
lret
adc
mov
adc
and
stos
cmpsl
fisttpll
xor
pop
pop
mov
mov
and
lret
fbld
or
pushf
jne
scas
fwait
xor
push
xchg
sarb
lock
int
mov
adc
in
jmp
mov
pop
xchg
sub
push
dec
xchg
cmp
aas
cmp
push
push
lods
sbb
cmp
add
pop
add
scas
sbb
push
scas
add
pop
mov
daa
fcomps
aaa
cmp
stos
lock
out
test
or
test
movsb
pusha
xchg
out
adcl
cmc
shll
push
and
fs
test
stc
mov
je
mov
aam
in
pop
or
mov
test
mov
aam
fdivp
lock
pop
push
mov
ljmp
xor
mov
incl
pop
imul
pushf
jecxz
xor
xchg
adc
jmp
pop
mov
cmp
dec
out
dec
push
cli
cmp
jbe
subl
rcrl
movsb
hlt
sbb
pop
outsb
adc
sub
jp
sub
repnz
aaa
insl
in
mov
loop
push
icebp
push
xchg
insl
mov
outsl
int3
mov
add
rcrl
cmp
xchg
and
sbb
lea
sbb
test
mov
call
repz
mov
or
pop
push
push
fnstenv
jo
mov
xor
mov
pop
das
mov
cltd
dec
mov
outsl
pushf
ja
in
add
popf
ds
adc
lds
cmpsl
cmp
imul
leave
aaa
daa
ljmp
cltd
jmp
hlt
pop
stc
stc
push
jle
fs
cmp
imul
mov
sub
in
jge
test
or
inc
les
out
mov
enter
mov
cmp
jl
std
mov
jnp
scas
sbb
dec
cmp
push
lret
sbb
loope
lds
sub
popa
mov
jg
xor
movl
pop
add
adc
mov
movsb
lock
aaa
cmpsb
stos
mov
or
sbbl
mov
aad
push
sub
in
arpl
xchg
cmp
js
mov
fiadds
xchg
mov
lods
lcall
sahf
push
in
sti
mov
mov
add
es
inc
stos
inc
cmp
sub
jne
mov
shrl
stos
aaa
fwait
int3
fistl
jle
dec
sbb
lea
push
lods
int
inc
xchg
xor
xor
push
mov
lods
inc
rorb
pop
jp
decb
cmpsb
es
test
or
adc
push
jnp
pop
push
out
fildl
out
jne
loop
ja
aad
stc
into
dec
xlat
daa
cmp
cmp
lret
sub
push
or
mov
daa
sbbl
push
lods
lcall
pop
test
jb
xor
lock
stc
mov
pop
jge
jp
les
dec
cmpl
sbb
aaa
fcomps
adc
jmp
push
inc
fdivrs
call
ja
mov
dec
inc
outsl
push
sbb
pop
mov
movsb
cltd
rorb
js
repnz
sbb
and
aad
mov
mov
lea
jmp
cli
incb
add
mov
mov
out
aad
clc
and
mov
sbb
pop
stos
ds
adc
sbb
or
mov
addr16
es
cmp
push
sbb
lahf
cmpsb
mov
pop
hlt
js
sbbl
imul
adc
mov
test
sbb
jne
scas
jnp
rcrl
test
stos
in
jbe
mov
data16
jl
mov
pop
scas
out
mov
and
test
inc
jbe
add
cltd
ja
les
mov
xchg
and
or
xor
fiadds
kmovb
mov
sbb
mov
test
cmp
ja
vcvtpd2psy
test
pop
pop
add
adc
push
push
rcrb
push
ss
pop
jmp
mov
nop
lcall
out
mov
fisttpll
xchg
xchg
jle
outsl
imul
xchg
cmp
sbb
fdivs
into
xchg
jecxz
lea
dec
fbld
aam
xchg
popf
or
ret
jo
popf
mov
popa
xchg
sub
xchg
xchg
mov
jecxz
mov
mov
pop
jmp
adc
out
aam
cwtl
enter
inc
inc
ljmp
shlb
or
test
ds
std
sbb
xchg
mov
rsqrtps
inc
mov
xchg
push
mov
in
xchg
sub
movsb
scas
sub
inc
test
jge
in
xchg
push
mov
andb
loopne
and
cld
pop
leave
ret
pmullw
pop
push
lahf
stos
dec
jno
arpl
jg
inc
loope
inc
cli
mov
sub
ret
loop
lods
mov
lock
or
in
mov
shll
shlb
test
sbb
ja
loop
out
iret
dec
cmc
xor
enter
fwait
enter
inc
mov
sub
in
mov
cmp
xchg
or
fcmovu
out
into
insb
shl
mov
push
movsl
cmpb
ljmp
and
outsb
test
pop
push
jecxz
fisubs
stos
in
test
mov
and
xor
ret
jnp
and
cmpsl
bound
pop
test
push
std
popf
into
cmp
xchg
and
ret
pusha
int
pop
dec
das
push
ud2
ds
jmp
insb
nop
fnstcw
pop
push
push
mov
pop
enter
fs
andl
mov
cmp
mov
lods
or
cmp
push
mov
loope
arpl
xchg
sbb
xlat
aaa
mov
test
dec
dec
sarl
fwait
inc
or
inc
insl
lods
shll
pop
pop
cmpsl
add
addb
pop
test
or
cmpsb
add
popa
je
stc
mov
ret
bound
xor
mov
icebp
aas
mov
rorl
xlat
in
cmp
sub
or
fsubrs
stos
dec
cs
mov
mov
addr16
hlt
xchg
push
mov
xchg
jo
mov
in
sahf
adc
ljmp
es
lods
pop
inc
inc
into
out
outsb
lret
popf
int3
xchg
jae
sahf
ja
pop
mov
pop
iret
mov
cltd
or
sub
cwtl
sub
inc
sbb
sub
and
jecxz
aaa
cmp
outsl
call
add
mov
imul
cs
movsl
hlt
sub
or
xchg
push
lods
cltd
mov
inc
pop
sub
shr
jl
je
ss
jbe
movsb
jnp
pop
mov
in
cltd
hlt
in
fstp
dec
sub
ja
aad
inc
adc
jg
adc
jp
mov
dec
sti
sbb
out
loopne
mov
jmp
adc
iret
mov
iret
jbe
loope
mov
ss
jl
outsl
adc
shrb
mov
or
or
push
leave
add
stc
cli
gs
push
push
mov
in
xchg
xlat
add
repnz
add
mov
ret
inc
and
sbb
cmp
mov
imul
xchg
inc
ret
mov
jmp
inc
ficoml
adc
mov
sub
cli
jl
cmpsb
cmpsl
sub
mov
xchg
inc
out
pusha
test
es
pop
repz
sub
inc
jmp
movsl
add
mov
jge
xchg
nop
aas
das
fsts
sahf
push
pusha
mov
ret
dec
jo
dec
cmp
sahf
pop
mov
adc
insb
sbb
scas
jns
aad
xchg
push
js
adc
shlb
outsb
scas
pusha
adc
sbb
mov
fdivl
push
and
es
mov
mov
lret
or
stc
cmpl
fdivl
or
int3
icebp
in
imul
xchg
outsb
dec
cs
test
xor
aam
ljmp
mov
sti
jg
sti
test
mov
xor
add
and
loope
add
add
inc
insb
inc
int3
add
mov
loopne
or
js
inc
jmp
xchg
sub
adc
lds
pop
mov
pop
ja
xchg
int3
xchg
lcall
pushf
sarl
mov
repnz
call
js
aam
push
jo
lods
push
testb
adc
bound
sar
sbb
mov
fcmove
cmp
mov
lock
push
mov
xor
cs
in
mov
scas
sub
js
loopne
pop
iret
adc
loopne
and
loopne
pop
imul
out
inc
jo
mov
push
xchg
pop
cmpsb
fstpt
fists
test
lock
js
mov
cmp
inc
pop
lahf
imull
jns
pop
inc
adc
pminsw
xor
pop
push
jl
push
adc
xchg
fisttps
mov
push
fcomps
out
into
ficompl
pop
sub
cs
aad
jecxz
dec
mov
push
out
shrb
push
xchg
mov
jo
jnp
int3
cmpsb
xchg
cwtl
outsl
or
and
aaa
xor
jo
in
mov
mov
xchg
fistpll
jno
popf
nop
jnp
mov
mov
mov
les
fidivrl
jnp
or
sbb
pop
ret
xchg
add
mov
jne
pop
jmp
sub
inc
jl
and
sub
aam
pop
push
fistl
outsl
sbb
aad
mov
pop
xchg
jae
xor
cltd
enter
shll
jg
cwtl
push
leave
xchg
pop
test
dec
insb
mov
xor
jp
pop
imul
lahf
cmp
add
cli
testb
cmpsl
test
jmp
sbb
mulb
mov
push
in
push
les
sub
cmp
imul
mov
xor
sub
xor
iret
mov
outsb
movl
or
sub
adc
mov
push
inc
xor
jle
loop
sub
scas
pop
loop
in
lock
jo
lds
ljmp
inc
add
out
sub
leave
arpl
and
mov
adc
js
imul
xchg
mov
push
pop
sbb
jmp
push
std
and
push
into
in
xor
xchg
lock
jo
add
shll
ret
jmp
ja
neg
or
in
ds
fldl
mov
out
lahf
scas
mov
ds
out
das
or
mov
jns
icebp
pop
jp
ror
sbb
leave
loop
fnstsw
ret
mov
setno
jnp
xchg
cmp
fiadds
pminsw
jmp
repnz
xchg
scas
inc
jmp
cmp
stos
cwtl
in
and
dec
jns
movb
xchg
aas
mov
push
scas
mov
ja
cmp
imul
pop
insl
pop
movsb
pushw
xor
les
in
mov
xchg
cmp
jmp
out
inc
push
cmp
fwait
scas
fildl
sti
inc
push
mul
jl
fs
inc
push
or
insl
in
dec
in
xchg
fidivl
add
lcall
rorb
vpextrw
lds
ret
or
out
or
add
sbb
push
push
test
xchg
jnp
aam
outsb
adc
mov
fdivl
arpl
lock
ret
sub
mov
xchg
push
adc
rorl
inc
rclb
sub
insl
xlat
add
dec
jo
mov
xor
pop
ret
mov
xchg
out
sbb
mov
lock
pushf
into
in
cmp
or
out
in
sub
shl
push
movsb
dec
and
rcll
pop
incb
fistpl
sbb
mov
std
pop
scas
pop
mov
xchg
push
sub
pop
sahf
jne
loope
es
leave
aam
sbb
in
ss
in
mov
xor
pushf
jae
mov
push
add
adc
dec
ljmp
call
ret
lret
cmc
testb
nop
aam
xor
test
inc
fldenv
loopne
sti
mov
mov
bound
cli
out
popa
loope
out
repz
aam
inc
test
in
sbb
adc
sbb
sub
push
lods
xor
cltd
aaa
shll
fwait
xchg
data16
mov
xchg
adc
jb
subb
jb
pop
or
punpckldq
aas
fsubl
lahf
dec
pop
imul
sub
adcb
push
pop
test
mov
mov
adc
loopne
stos
inc
fwait
push
into
jno
sbb
xchg
cltd
cli
pop
inc
jno
xchg
mov
mov
test
pop
movl
sbb
mov
add
push
add
or
subl
xchg
jmp
push
ds
push
loop
test
lcall
inc
xor
iret
xor
xchg
mov
into
jge
ds
dec
test
pushf
xor
push
int3
cmpsl
pop
fistl
addr16
insb
int3
aas
stos
imul
cli
jbe
xor
out
fadds
arpl
pushf
xchg
pop
lcall
es
outsb
cltd
inc
cmp
scas
jno
inc
xchg
pop
inc
repz
sbb
xchg
fstp
and
mov
lock
sub
je
data16
lods
out
out
lea
loopne
sbb
mov
adc
outsb
mov
and
gs
imul
subb
inc
or
push
fbld
imul
aad
ds
es
scas
mov
jge
inc
insl
testl
int3
jecxz
jo
addl
and
rcrb
and
mov
popf
ja
dec
out
outsb
es
mov
or
inc
adc
xchg
and
shll
sbb
xchg
sti
daa
xchg
nop
mov
in
lods
sbb
mov
adc
or
popa
arpl
in
ret
movsb
cwtl
jmp
js
pop
lods
pop
int
cwtl
pop
fistpl
pop
loop
add
add
push
cmp
pop
and
dec
lea
popf
jo
sti
imul
testl
cld
mov
std
cmp
mov
dec
hlt
adc
fs
xchg
xor
pushl
dec
and
enter
adc
jno
sub
cmp
mov
out
lret
ret
cmpsb
dec
pop
cli
mov
xchg
xor
into
xor
mov
dec
sub
mov
jnp
shl
jbe
cmpsb
or
mov
dec
jg
pop
test
dec
sbb
leave
jbe
push
lret
aas
and
scas
xchg
movsb
sub
sahf
cmpsb
sub
mov
frstor
scas
test
mov
pop
add
les
mov
jno
bound
sbb
push
mulps
xor
adc
scas
jno
ljmp
xlat
sbb
xchg
and
ja
push
iret
cmp
iret
inc
or
cltd
cmpsl
jno
fcomps
and
jbe
test
mov
or
xor
mov
jb
in
mov
push
aam
mov
es
sbb
mov
data16
pop
pop
and
cmp
or
nop
and
push
icebp
add
or
xor
imul
jl
and
cmp
cld
push
gs
xor
js
mov
xor
mov
fidivrl
xchg
mov
cmp
nop
add
xor
mov
bound
jg
das
imul
inc
and
mov
stos
sbb
xor
inc
cmpsl
je
xchg
fwait
mov
je
jnp
dec
out
mov
sbb
aaa
adc
loopne
push
xchg
push
inc
jo
push
and
mov
ficomps
jno
test
roll
aad
ja
jp
ficompl
sub
cli
addr16
stos
xchg
cmp
xchg
out
jmp
jecxz
xor
mov
dec
test
sub
add
mov
push
inc
pop
jns
pop
mov
cld
xor
dec
lds
sti
leave
cwtl
aas
adc
dec
jecxz
cld
mov
cmp
les
or
decl
and
and
adc
andb
dec
mov
xchg
out
pusha
in
add
dec
mov
ss
inc
dec
les
jge
and
and
xlat
cld
push
and
push
lods
xchg
pop
call
in
lods
and
and
sbb
stos
sbb
fstpl
popa
sbb
cmp
lea
adc
cwtl
xor
data16
imul
mov
data16
cmp
push
shlb
in
mov
add
ds
cmpsb
xchg
mov
into
lcall
imul
shr
jb
xchg
test
test
xchg
xchg
or
or
xchg
aaa
cltd
push
mov
adc
add
imul
into
push
subb
repnz
mov
rcll
push
inc
xchg
rcrl
inc
sub
mov
adc
push
mov
inc
movsl
jbe
sub
mov
sub
das
arpl
cli
xor
add
jge
call
lcall
iret
nop
mov
fsubs
mov
lods
dec
xor
leave
mov
shlb
shrb
mov
or
jns
jp
test
jl
clc
inc
ss
jge
imul
leave
push
inc
sbb
stos
in
movsl
les
mov
sbb
jmp
js
mov
mov
adc
aas
popa
xchg
rcl
pop
out
pushf
pop
sbbl
xor
fisttpl
cmc
or
mov
das
mov
aas
fdivrl
loopne
in
inc
mov
data16
dec
xlat
popa
dec
and
push
fnstsw
mov
call
sbb
popa
lods
mov
pushf
and
je
imul
lods
xchg
lret
mov
xchg
ret
imul
pop
movsb
adc
rorl
int
cmpsb
lods
jne
insl
das
hlt
enter
dec
push
push
mov
cltd
sti
push
and
in
add
mov
in
xchg
inc
lods
mov
loope
and
scas
xchg
das
sub
aad
orl
mov
mov
sub
jbe
sub
incl
fidivl
mov
xchg
setns
add
fcoms
mov
mov
lret
dec
xchg
test
in
lret
adcl
pushf
mov
mov
mov
sub
das
out
repz
in
add
gs
xchg
data16
cwtl
orb
add
cmp
stos
push
loopne
mov
movsb
jmp
movsl
mov
scas
adc
sub
ds
adcl
push
in
cs
mov
mov
mov
adc
adc
fldt
dec
lods
int3
shr
insl
mov
leave
mov
mov
mov
mov
ds
dec
sbb
int
fisttpll
es
add
inc
in
stos
dec
xchg
mov
xchg
stos
and
fsubs
sahf
cmp
mov
jmp
push
subl
push
xor
push
inc
sti
sub
dec
outsb
inc
inc
xchg
aas
andb
lock
xor
mov
rorl
scas
sbb
or
nop
popa
mov
push
std
rcl
movsb
push
cmp
mov
stos
addr16
pusha
xchg
cmp
sub
cli
xchg
out
xor
push
out
push
mov
mov
repnz
mov
enter
wrmsr
mov
out
inc
sbb
lcall
inc
notl
test
jl
jb
dec
sbb
push
sub
mov
fistl
clc
pop
jbe
adc
add
adcb
je
xor
push
push
out
pop
ljmp
stos
add
add
or
xchg
outsb
movsb
es
cltd
mov
xor
adc
lock
out
pop
lods
xchg
movsl
xor
dec
xchg
data16
clc
loope
add
jnp
fcoml
jne
hlt
cmc
or
cmpsb
or
addl
pop
clc
jbe
push
iret
popf
fldcw
dec
pop
data16
mov
cmp
sbb
in
xchg
sbb
loope
xchg
pusha
push
scas
sti
push
xor
sub
sub
arpl
ljmp
cli
pop
stos
sbb
mov
imul
movsl
xchg
aas
insl
pop
aaa
cmp
mov
inc
inc
push
push
jae
les
cmc
inc
fistpl
mov
mov
lret
cmp
mov
lcall
mov
popa
and
popf
fwait
pushf
mov
stos
sub
in
lret
pop
cmpsl
and
xchg
cwtl
mov
xchg
jo
mov
jl
sbb
jo
data16
ja
jecxz
inc
xor
push
incl
adc
out
iret
ret
jmp
in
pop
xor
mov
jle
lods
xchg
stc
jg
fistpll
mov
dec
jo
inc
cs
popf
inc
test
mov
loopne
sbb
idivb
push
shr
mov
xchg
inc
scas
pop
adcb
mov
jp
cmpsl
arpl
fwait
dec
cmp
stos
sbb
lret
jnp
adc
dec
push
xchg
lods
adc
movsl
pushf
fldt
test
out
fimuls
mov
loopne
inc
addr16
and
test
roll
arpl
insl
pop
stos
jo
push
cmp
into
mov
into
adc
xchg
and
lods
mov
testb
sti
scas
push
daa
ret
add
lcall
inc
jbe
rep
and
and
cmp
dec
adc
mov
popa
jno
std
or
inc
sbbl
cli
and
jl
leave
or
push
fcmove
int
cmp
ss
mov
out
mov
mov
or
adc
mov
aas
xor
mov
shlb
daa
xchg
stc
mov
add
inc
data16
ja
jp
fcmovb
pop
cmp
in
mov
inc
nop
xchg
cwtl
add
jle
inc
xchg
out
movsb
jae
and
push
mov
leave
jo
daa
xchg
int3
jae
ficoms
mov
dec
mov
popa
aam
mov
dec
mov
testb
pop
cmp
icebp
clc
je
loopne
sbb
fucom
xorb
adc
adc
lcall
imul
les
sti
insl
fistpl
lods
in
jle
xchg
insb
in
ljmp
int
adc
jne
mov
jbe
mov
cmpl
mov
push
sbb
ja
push
int3
fwait
mov
add
mov
pop
mov
clc
in
push
pop
sbb
sub
or
dec
jb
dec
sarl
xor
add
js
test
mov
pushf
lock
jmp
outsl
mov
andl
fistl
cs
pop
loop
js
xchg
inc
dec
scas
int
add
push
fadds
arpl
pop
dec
pushf
js
and
xchg
cs
add
mov
imul
xchg
jo
jb
sbbl
aaa
lahf
cmp
rorb
mov
orl
sub
sub
sti
testb
cmp
pop
mov
and
pop
cwtl
jge
data16
jb
cld
or
xor
or
inc
push
inc
adc
sub
jmp
xor
mov
jl
inc
cmp
ds
rolb
dec
add
mov
sbb
jo
push
inc
je
lods
mov
cmp
mov
repz
sti
mov
push
imul
push
mov
rolb
add
fs
repnz
fbld
out
rorl
jecxz
adc
lahf
pmuludq
xor
imul
dec
mov
dec
aas
repnz
insl
xchg
or
cmp
jle
int3
stc
sar
jnp
push
mov
into
cmp
and
lods
cmp
inc
frstor
jo
fwait
popf
enter
add
xchg
dec
popf
inc
jns
dec
inc
push
cmp
jno
popf
and
push
mov
xor
in
lods
mov
push
adc
sub
push
mov
sub
movsb
lret
test
push
cmp
mov
idivl
lods
cwtl
flds
sub
mov
out
outsb
jmp
sub
gs
insl
enter
mov
ljmp
push
push
pop
dec
int
scas
xchg
mov
incb
pop
cmc
jbe
dec
mov
jmp
xchg
sti
pop
addb
ret
repnz
xchg
or
lret
out
xchg
mov
outsb
adc
cmp
imul
cmp
mov
adcl
fisttps
pop
pop
sbbb
loop
pop
mov
out
or
sub
cmc
imul
mov
movsb
fcomps
push
mov
ret
adc
jb
stc
pushf
das
jp
xchg
iret
adc
xchg
addr16
jmp
insb
stos
pushf
stos
daa
dec
insl
out
xor
or
pop
mov
jno
mov
aas
jns
or
adc
sbb
testb
pop
pop
shlb
subl
add
call
leave
lret
push
js
cld
stc
xchg
cmp
jns
sbbl
movsb
pop
scas
pop
popf
mov
lcall
jb
stos
pop
sub
jns
pop
clc
dec
shl
sahf
mov
xchg
scas
mov
stos
or
jnp
fcmove
sbb
das
inc
outsb
and
or
jnp
inc
dec
adc
mov
xor
inc
dec
mov
fs
js
es
leave
sub
pop
out
bndldx
cmp
mov
cltd
icebp
push
test
sbb
mov
sahf
mov
mov
dec
xorl
gs
in
jecxz
out
orb
adc
mov
or
dec
mov
ljmp
cmp
jmp
sar
jno
lret
aam
inc
mov
lret
mov
orb
mov
test
test
inc
nop
cmpl
imul
jle
add
xor
iret
mov
imull
int3
and
or
loope
adc
out
dec
and
popf
icebp
out
xor
push
negb
dec
push
push
es
inc
repnz
jbe
sbb
call
fsubrs
leave
or
fdivs
mov
pop
or
ljmp
div
js
cmp
aad
lahf
lods
add
xchg
sub
stc
out
and
rorl
rcl
lcall
xchg
subb
pop
adc
sbb
jmp
cmp
cld
dec
aaa
inc
les
add
cmp
cmpsb
ljmp
add
mov
mov
jle
or
sahf
xor
arpl
dec
les
mov
xchg
push
rolb
js,pn
je
adcl
inc
sub
pop
inc
push
js
sub
test
gs
ret
mov
inc
leave
sub
pop
fsubl
pop
pusha
movb
cmpsl
pop
mov
fnsave
lods
add
call
in
mov
loopne
xchg
aaa
pop
xlat
pop
mov
mov
lods
mov
xchg
inc
mov
popf
pop
push
popa
dec
bnd
push
clc
and
dec
dec
sahf
in
xor
loop
mull
repz
add
cld
or
ss
in
fstpl
bound
and
orl
jno
rolb
sub
cmpsl
adcl
rolb
inc
push
add
mov
cld
call
adc
jnp
xorl
jne
mov
pop
aad
sub
aam
les
daa
out
mov
push
hlt
lcall
dec
imul
xchg
jns
loope
dec
pop
mov
sbb
data16
push
call
add
ret
in
aad
adc
xor
or
push
adc
mov
and
sbb
pop
sub
push
aad
cwtl
jecxz
add
outsl
test
mov
jne
mov
jle
inc
add
xor
lea
fldcw
inc
pop
test
jecxz
xchg
or
fmul
jecxz
lea
jbe
xor
push
add
and
push
mov
xlat
enter
or
jmp
or
lods
xchg
mov
call
sbb
push
inc
sub
xorb
cmc
cmpsl
out
xchg
fnstenv
fdivp
loop
jecxz
mov
push
out
mov
xor
insb
lret
mov
fcoml
fstps
jl
jnp
push
fsubrp
flds
roll
adc
adc
mov
xor
cld
mov
repz
out
icebp
inc
push
adc
enter
or
xchg
test
inc
test
jnp
addb
jns
sbb
and
sarl
pop
sbb
add
inc
fwait
pop
dec
sbb
ret
pop
adc
adc
sub
pop
out
mov
mov
fstpl
xor
mov
jmp
movsl
arpl
sub
popf
xlat
mov
sar
fwait
cmpsb
aad
mov
push
push
push
lahf
lods
mov
out
mov
or
cmpsl
out
dec
dec
cmp
icebp
js
mov
mov
stos
add
mov
test
das
shl
fcoms
jmp
nop
push
mov
in
sbb
or
test
pop
movsl
and
dec
jns
js
fistps
movsl
fsubrl
mov
cli
cmp
sbb
lret
sarb
repnz
jo
or
in
clc
mov
sahf
cld
and
mov
mov
insb
das
jmp
fsubr
pop
jo,pt
xor
out
imul
loopne
fstpt
jns
out
or
and
mov
pop
subl
cmp
mov
lret
neg
fdivr
mov
mov
mov
arpl
ja
xor
in
fcmovu
ss
andl
mov
sti
pop
mov
or
inc
adc
jne
push
jbe
scas
pop
mov
jo
cmp
pushf
pusha
popf
jecxz
leave
addr16
movsw
adc
jl
pop
mov
test
into
iret
xor
std
pop
jo
fdivl
movsl
adc
adc
push
in
mov
adc
push
pop
mov
cmp
dec
stos
ja
jp
hlt
push
cld
scas
in
testl
das
cmpsl
adc
ds
xlat
push
lret
inc
out
imul
je
cmp
fcmovbe
aad
xchg
popf
sbb
jecxz
jo
mov
inc
cmc
mov
mov
sub
stos
pop
mov
gs
mov
inc
in
sub
fisubrs
and
cmp
ljmp
ss
pop
sbb
mov
and
clc
mov
pop
push
mov
loope
in
rcrl
lock
push
clc
insb
bts
imul
dec
xchg
hlt
xchg
fs
add
fdivrs
out
in
mov
shl
aad
dec
into
out
cmp
xor
popa
inc
imul
push
jle
leave
cmp
pop
mov
sbb
jecxz,pn
insb
pushf
mov
xchg
int
inc
dec
push
cmpsl
movsl
sub
xor
ret
pop
rolb
notb
les
cmp
shlb
and
aam
or
dec
push
bound
int
mov
enter
sub
pop
leave
sub
adc
mov
rcrl
ja
xor
mov
cmc
gs
xchg
faddl
inc
push
dec
mov
mov
sub
jae
jo
lcall
lret
xor
mov
fwait
pop
cld
loopne
lcall
mov
ja
out
out
and
push
daa
and
xor
popf
sti
and
sbb
pop
dec
scas
mov
dec
jp
testl
out
shlb
xchg
jae
jnp
lahf
xor
enter
in
mov
arpl
dec
aam
dec
jmp
jge
xor
jno
lods
fmuls
fnsave
negl
inc
arpl
mov
mov
xchg
imul
out
jmp
push
lea
add
mov
adc
scas
lods
push
jb
push
mov
jbe
pop
xchg
push
add
aas
xchg
mov
icebp
popf
mov
xor
insl
xchg
decb
stos
mov
stos
aam
push
cmp
daa
or
and
dec
sbb
cld
insl
jmp
and
fwait
incb
mov
ja
inc
pop
pop
xlat
bound
sbb
xchg
aad
push
xor
cmc
shll
mov
loopne
push
jnp
sar
push
test
lock
jecxz
inc
xor
mov
xchg
pmaddwd
andb
mov
sbb
and
push
xchg
jmp
inc
jmp
out
xchg
loope
or
outsl
in
int3
or
in
xlat
out
out
out
popf
sbb
sub
sbb
jecxz
lea
sub
push
sub
enter
add
test
pop
mov
dec
in
xchg
adc
mov
inc
lea
jnp
xor
or
sub
mov
fisttpl
out
mov
imulb
pop
xchg
lds
xor
pop
lret
mov
push
fisttps
ljmp
inc
pop
cwtl
cmp
adc
pop
sbb
mov
dec
in
cli
cwtl
mov
mov
inc
or
pop
mov
mov
adc
sub
ret
push
jno
pop
xor
std
js
inc
mov
pushf
or
push
in
pop
push
into
test
adc
cmpl
sub
cmpsb
outsl
enter
push
xchg
insl
or
sbb
lcall
bound
add
mov
inc
arpl
aaa
sub
lods
loop
hlt
pop
fsubrs
sub
xchg
mov
rcll
dec
mov
dec
ror
mov
popa
mov
bound
inc
push
cmpsb
sbb
std
addr16
xor
sub
cmp
mov
insb
adc
scas
mull
cmpsl
les
outsb
sarb
aas
add
or
mov
pushf
bound
jecxz
je
test
sbb
push
cmp
push
cmp
ret
push
add
aas
sbb
mov
dec
je
pusha
pop
jb
pop
mov
or
loop
or
cs
dec
push
or
and
jnp
mov
mov
inc
cld
negl
jno
aam
cltd
pop
pop
stos
inc
ficoms
mov
jmp
sub
mov
lock
cs
pop
mov
push
sbb
fwait
js
pop
icebp
mov
fwait
or
andl
out
rolb
aas
sarb
mov
sbb
adc
mov
mov
jo
cmpsl
lahf
cmpsl
es
rcrl
shr
jge
mov
push
insb
daa
mov
xchg
scas
push
icebp
rorb
dec
lret
mov
xor
pop
adcb
push
repnz
jge
or
mov
xlat
push
cltd
push
jb
or
popf
mov
pop
xor
arpl
jge
sbb
fs
jae
rorb
fildll
jmp
fs
dec
inc
sub
xchg
mov
repz
in
inc
sbb
sarb
adc
xsha1
cmpsb
dec
aas
cmp
sbb
shlb
ret
dec
inc
fldcw
dec
les
clc
shlb
sahf
int3
mov
mov
lcall
mov
insl
subb
ret
cli
pop
xor
mov
or
mov
ja
enter
mov
or
mov
and
cli
fwait
xchg
nop
jae
sub
nop
outsb
cmp
movsl
xchg
jg
jne
lock
or
sub
push
nop
insl
loopne
incb
lock
sbb
scas
movsb
lahf
bound
js
sbb
jmp
pusha
mov
in
lret
pop
in
mov
sub
bound
shr
sarl
cmc
mov
dec
xor
adc
stos
jno
xor
mov
xor
pop
pop
fsub
pop
repnz
cmc
xchg
dec
hlt
push
in
lds
es
push
shlb
movsl
inc
push
pushf
mov
mov
sub
push
push
sbb
in
mov
aam
or
nop
xor
subl
sbb
inc
int
cmpb
mov
add
movsb
adc
mov
movsl
in
sarb
jge
sub
dec
lret
xor
mov
xchg
mov
sub
dec
in
push
leave
cmp
pop
mov
cmp
cmp
test
cwtl
push
and
xor
xchg
and
imul
cmp
xor
pop
test
scas
add
imul
ljmp
stos
outsb
cmpsb
cmc
add
and
repnz
outsl
fdivp
xor
adc
mov
xchg
fsub
les
xchg
inc
pusha
cmp
or
repz
fcmovbe
fstpl
xchg
lahf
sbb
lar
cwtl
jne
inc
xchg
and
cmp
cmpsl
clc
test
jns
sti
mov
jnp
mov
aam
pop
or
adc
inc
pop
shlb
adc
pop
shlb
cmp
sub
loop
xchg
pop
or
jne
sahf
pop
gs
rolb
adc
loope
adc
mov
sub
and
cli
das
pop
lret
jo
fdivrl
xchg
sbb
leave
aaa
outsl
jl
and
aad
sub
push
push
mov
jne
jmp
roll
or
loop
sbb
pop
je
mov
push
out
ss
je
cmp
lods
dec
sbb
enter
pop
pop
mov
cmc
cmp
arpl
cld
or
fisubl
push
xor
dec
neg
sbb
mov
aaa
sub
mov
pop
xlat
aad
inc
adc
rcrb
subb
jecxz
add
mov
push
pushf
iret
insl
shlb
les
dec
xor
sbb
adc
push
and
mov
sub
sti
push
jae
cmp
and
fistps
pop
aam
add
sti
cltd
pop
mov
lods
insl
mov
push
pop
and
dec
jns
cmc
dec
ds
shll
inc
rcl
sbb
in
adc
aam
pusha
cmp
push
xchg
int3
data16
cmp
int3
inc
inc
dec
inc
adc
push
mov
dec
sub
mov
loop
filds
xchg
inc
and
inc
out
sbb
jbe
inc
cltd
je
jmp
cmp
leave
mov
xchg
xor
push
je
pcmpgtb
enter
add
mov
sub
jb
inc
jmp
rorb
notl
cmp
and
sub
lahf
addl
xchg
and
inc
inc
adc
adc
je
jl
mov
sbb
ret
loope
inc
and
popa
or
add
loopne
adc
adcl
or
cmovnp
int
loop
or
xor
push
decb
lcall
loope
mov
mov
mov
and
lahf
movsb
pop
push
dec
mov
cltd
add
push
sbb
rcll
imul
and
fxch
dec
js
repz
dec
sbb
cmp
js
shl
dec
ret
adc
mov
outsl
rclb
mov
jo
xlat
cwtl
leave
pop
push
inc
aaa
jl
lret
inc
mov
dec
call
dec
add
or
ja
lock
lds
xor
fisttpl
mov
fstl
sub
xor
add
es
mov
cld
cmpsl
and
loop
pop
xchg
fisubrs
or
mov
sbbb
and
xchg
sbb
jg
sub
pop
inc
dec
xlat
adc
les
dec
xchg
mov
and
movhps
ds
ret
pop
or
adc
add
inc
out
jne
stos
mov
and
stc
orl
test
push
fnsave
testb
mov
pop
push
sub
js
xor
inc
add
pop
mov
mov
int
fs
sub
aad
sbb
std
iret
mov
lcall
inc
cli
add
lcall
scas
fs
icebp
sub
mov
xchg
add
xchg
dec
lcall
cmp
mov
inc
ljmp
jp
jg
je
aam
shlb
sub
test
mov
lods
movsl
or
aaa
fdivrl
orl
enter
jne
pop
xchg
mov
push
push
gs
xor
inc
push
rol
repnz
subb
popl
or
xor
repnz
mov
dec
daa
pushf
mov
or
movsl
das
out
sbb
test
xchg
push
pop
add
stos
xor
pop
dec
adc
add
cmp
mov
sahf
push
testl
cltd
fsubs
sbb
xor
std
push
popa
in
adc
and
lods
mov
test
fiadds
pop
std
stos
mov
xchg
ja
mov
inc
mov
jg
daa
es
pop
inc
cmp
cld
and
fwait
repz
imul
in
jp
into
xlat
mov
imul
push
in
cmp
dec
in
aas
mov
adc
mov
loop
jl
cli
jns
sub
sub
lcall
out
int
xchg
jp
stos
ss
sbb
xor
inc
rcrl
je
outsb
aas
and
int3
adc
pop
jecxz
stos
inc
mov
pop
xchg
or
repnz
mov
xchg
hlt
in
fs
sbb
sbb
adc
out
sbb
inc
jae
lea
add
add
or
mov
cli
jecxz
mov
ljmp
daa
adc
icebp
shrw
inc
mov
adc
and
fisubl
outsb
xchg
dec
in
addr16
jnp
mov
xor
stc
ret
in
fstp
cmp
js
popl
jge
loop
lret
inc
add
mov
movb
cltd
inc
dec
leavew
shlb
sub
cs
xchg
mov
mov
xchg
push
xchg
add
mov
and
mov
out
cmp
jo
or
xor
xchg
js
popf
jne
mov
sub
lcall
mov
jb
outsl
mov
in
mov
pop
cmp
unpckhps
inc
push
xor
lret
adc
push
jp
xchg
repz
dec
xchg
imul
mov
pushf
jmp
mov
sub
repz
ret
pop
sub
lods
xlat
cmp
scas
leave
rcr
cld
add
sub
movsb
sbb
repnz
repnz
outsl
loope
fadds
popf
test
jl
in
cmp
es
aaa
lret
ja
xchg
test
outsl
outsl
popf
test
xchg
movb
adc
add
jnp
mov
mov
ja
clc
add
sbb
push
idivb
jbe
and
and
add
stc
mov
xchg
dec
dec
gs
fistpl
xchg
data16
icebp
lods
shlb
inc
inc
xlat
pop
js
xor
xchg
mov
out
adc
jle
and
sbb
into
pop
mov
pop
inc
push
inc
popa
cld
dec
call
mov
cmpsb
jbe
xchg
push
dec
and
push
cmp
add
lods
mov
lea
rcrl
outsl
xor
fisubl
movsb
mov
cmp
mov
cmp
add
outsb
push
add
add
js
jnp
jp
pop
aad
adc
xor
je
jb
pop
sub
push
js
mov
movsl
xchg
xor
sbb
dec
add
cmp
movsl
sbb
mov
ret
or
sahf
mov
test
push
pop
dec
xchg
test
push
fwait
insb
adc
mov
imul
pop
scas
or
ss
movsb
call
xor
sub
shrl
cli
xchg
fldt
je
aas
jle
andb
rorb
xor
mov
fimuls
repnz
mov
or
loop
test
imul
aad
pop
jmp
faddl
cmc
ja
sbb
pop
mov
mov
popa
leave
xchg
xchg
mov
bound
and
lret
ret
sub
loop
jle
flds
rorl
pop
adc
pusha
cmp
shlb
cmp
mov
cld
repz
inc
sub
jnp
ror
jo
push
stc
xor
insl
mov
mov
out
sbb
jmp
mov
gs
sahf
dec
pop
mov
stos
in
mov
mov
fcoml
mov
insl
adc
lods
clc
push
fs
shrl
xchg
xor
aaa
pop
push
shlb
dec
iret
ret
xor
adc
dec
sub
rorl
hlt
sub
sub
popa
mov
cltd
xor
jne
lock
xchg
xor
sbbb
lods
pop
mov
sbb
repz
inc
or
sbb
rorl
add
cmp
mov
mov
shll
lret
add
pop
ss
test
xchg
jns
push
inc
jmp
push
into
aad
ret
jmp
js
push
mov
subb
jmp
sbb
mov
popf
push
cmpb
sbb
insb
inc
xchg
jmp
mov
adc
push
repnz
fsubp
jge
inc
add
das
pop
int3
test
inc
add
test
loop
shlb
and
data16
ss
mov
aad
jge
xor
jo
jo
out
in
fsubrs
or
inc
inc
push
insl
push
mov
dec
insl
cltd
adc
mov
clflush
dec
and
shrb
add
and
adc
icebp
mov
push
scas
and
add
xor
call
ret
xor
out
adc
sti
in
insl
mov
jge
push
push
shrb
ljmp
jmp
imul
ret
mov
pop
arpl
xchg
flds
das
mov
and
xchg
jae
scas
lds
sbb
mov
adc
add
mov
adc
les
inc
dec
rorl
ljmp
push
pop
cmp
xor
outsb
xor
adc
cmp
movsl
jb
pushf
mul
jo
xchg
out
in
jb
dec
mov
sub
int3
push
xlat
xchg
mov
adcl
clc
lahf
les
and
sbb
test
aaa
es
iret
xor
jmp
sub
iret
jne
adc
cmp
fnsave
or
mov
loopne
out
jmp
xchg
lock
sarl
inc
ljmp
adc
bound
pop
incb
pop
sarb
nop
in
sub
sbb
dec
sub
mov
or
in
mov
cmp
out
push
in
xor
je
add
dec
xor
popa
adc
pop
outsl
jnp
jo
push
stos
push
pushf
push
out
out
push
rorb
in
into
mov
and
xor
cmp
loop
inc
test
pop
hlt
or
in
repnz
push
addr16
xor
lods
shll
sub
aad
data16
sub
lahf
call
mov
test
insb
add
cmp
test
cmpsl
jl
jne
nop
paddsw
mov
mov
and
dec
ds
mov
shl
jns
jle
xchg
fimull
dec
decl
sub
sbb
in
inc
dec
aaa
adcl
stos
xchg
xlat
xor
pop
notb
jbe
jl
icebp
call
fadds
popf
lock
test
lock
sub
aad
push
rclb
mov
enter
jg
pop
pop
jno
test
int3
or
lods
sbbl
int3
pop
lods
subps
ret
shll
push
dec
sub
cmp
sub
test
ficomps
rolb
pop
xchg
cli
fnsave
cmpsl
in
repz
pop
cmp
je
mov
movsb
add
andb
addr16
cwtl
xchg
jnp
cmp
mov
mov
test
lcall
ss
lds
mov
ret
sub
stc
sti
sti
fdivrl
gs
cmpsb
xchg
and
nop
jge
xor
popf
rorl
rcr
pop
scas
lods
sbb
sbb
jo
cmp
cmp
loope
ds
fnstenv
sub
mov
dec
hlt
and
js
test
data16
inc
mov
mov
fcomps
sub
call
clc
pusha
enter
lahf
mov
cmp
rclb
xlat
ret
sbb
dec
adc
mov
sbb
mov
inc
int3
pusha
popf
scas
nop
xchg
and
fbld
sar
aam
sbb
pop
in
movsl
push
andl
cmp
xchg
shrb
les
mov
xor
lahf
aad
mov
xor
test
sbb
icebp
dec
insb
imul
push
mov
xchg
movsb
jmp
repz
mov
jnp
cmpsl
jmp
pop
cmp
popa
push
mov
mov
int
jns
and
adc
mov
inc
and
shlb
ss
mov
push
mov
push
ss
mov
fmul
jns
lret
rclb
cltd
mov
jno
mov
and
in
pusha
inc
pop
xchg
js
sbb
pop
outsb
jae
mov
fdivs
xor
mov
push
jmp
xor
mov
or
dec
push
negb
mov
cld
xchg
je
call
scas
push
or
aaa
and
sarl
mov
cmp
popf
inc
inc
pop
mov
push
mov
out
popa
fisubs
sbb
es
daa
pop
push
setnp
jge
mov
ss
mov
xor
mov
or
sarb
or
add
pop
dec
mov
push
inc
adc
adc
push
sahf
dec
pop
pop
arpl
inc
pop
shll
xchg
cmpsb
das
sub
push
push
push
cltd
lds
add
daa
mov
mov
aas
iret
pop
in
push
ret
jecxz
sub
sbb
push
inc
data16
outsb
iret
push
or
adcl
movsl
adc
fidivrs
stos
jp
pop
mov
sbb
repnz
pop
addb
mov
pushf
adc
adc
sbb
mov
xchg
xorb
in
add
roll
sub
cld
adc
sub
mov
fcompl
push
in
in
mov
xchg
es
inc
pushf
iret
push
add
xor
sbb
xlat
pushf
rolb
gs
ds
xor
test
add
and
loope
xchg
ds
test
imul
sub
fwait
jge
stos
push
mov
rcrl
push
lock
js
and
sbb
dec
pop
dec
adcl
dec
pop
jae
insl
aas
std
dec
and
lock
and
and
add
cs
imul
movsb
push
pop
aas
mov
xor
adc
mov
adc
xchg
jmp
iret
add
cmpsb
push
loopne
jb
xor
cltd
fisubl
cmp
cmpsl
mov
mov
xor
and
movsb
aaa
xor
mov
cld
test
adc
jp
mov
inc
in
mov
xor
out
adc
dec
xlat
imul
mov
je
lods
lds
setnp
push
jmp
adc
lock
jp
leave
mov
addr16
nop
shll
xor
rorb
cmp
adc
and
cmp
les
in
mov
test
lret
pop
aas
cmpl
mov
inc
gs
ljmp
mov
xor
aad
push
mov
rcl
cmp
fisubl
fwait
cmpsb
adc
and
cmpsb
psllw
jecxz
je
in
es
scas
rcl
stos
aam
js
inc
call
lcall
xor
lret
mov
dec
test
adc
mov
add
mov
push
lret
jnp
xchg
je
pop
lret
aad
mov
xchg
lret
fnsave
out
xlat
shlb
outsl
sub
push
pusha
jae
push
fimuls
inc
xchg
jne
pop
pop
fwait
inc
stc
ret
cld
mov
pop
lds
and
dec
push
jns
inc
mov
xor
pushf
fwait
inc
xchg
sub
push
nop
add
xor
inc
xor
inc
pop
mov
adc
xor
cmpsl
jbe
sbb
and
loope
test
bound
sbb
xor
fadds
add
adcl
iret
mov
popf
add
cmp
lods
movsb
hlt
dec
mov
jo
or
xor
dec
or
fisttpll
aam
bound
js
incl
mov
mov
cwtl
shr
iret
add
jle
mov
cld
loope
lret
mov
int3
loope
sbbb
sti
insl
sub
pop
cmp
cmc
mov
push
sahf
cmp
call
inc
inc
cmpsl
scas
mov
pop
jns
inc
pop
int3
fistpl
mov
cwtl
lods
ss
push
xor
cltd
loop
inc
lods
aas
sahf
jg
rcrb
leave
lods
stos
jmp
pop
push
xor
lcall
call
or
sbb
lret
mov
test
test
sub
loopne
inc
test
lcall
stos
sbb
out
lea
push
add
push
mov
test
testl
mov
pop
jno
cmp
add
or
cltd
mov
adc
xor
insl
mov
mov
or
jge
cmp
inc
dec
sar
lea
hlt
cltd
fcoms
dec
or
push
sbb
pop
inc
das
mov
outsb
xchg
or
adc
neg
out
inc
lock
xchg
sub
push
jmp
and
imul
ds
fnsave
fmull
cmp
mov
inc
inc
push
jl
dec
icebp
repz
sahf
jl
inc
ja
cmp
cmp
dec
into
addb
cmp
jmp
adc
popa
fidivrl
loop
dec
cmpl
cmpsl
movntps
ljmp
dec
xchg
stc
adc
mov
inc
repnz
enter
lahf
scas
mov
cs
lret
lock
test
cltd
cmp
push
out
cmp
or
clc
jl
setno
jg
or
xchg
mov
mov
and
sbb
cltd
mov
or
sti
js
xchg
jle,pn
leave
dec
pop
cmp
idiv
adc
movsb
adc
stos
dec
dec
sub
sti
or
into
popf
not
ret
stos
into
adc
mov
mov
xchg
inc
in
test
mov
cmpsl
cmp
mov
and
out
xor
add
or
mov
add
scas
and
pop
hlt
int
pop
hlt
jb
cwtl
cwtl
icebp
lods
imul
sarl
sub
sub
cmp
mov
mov
loopne
and
sub
jmp
pushf
out
mov
pop
in
xchg
cld
push
mov
dec
mov
es
test
jne
mov
test
or
dec
andl
cmc
push
jne
xchg
icebp
movsb
js
cmc
popf
mov
add
adc
jae
nop
xor
rcrb
mov
mov
cmp
ret
lret
cs
mov
nop
cli
lods
cmp
mov
loope
push
xchg
dec
pop
cs
ljmp
mov
jbe
mov
fistps
jae
add
sahf
ds
mov
movsb
enter
fs
ret
and
loopne
loop
mov
or
adc
inc
ja
adc
test
cmp
ss
pop
mov
out
inc
pop
in
ja
xor
jnp
mov
push
push
pusha
lods
mov
imul
shlb
inc
int
xor
into
dec
xor
push
and
imul
sub
jmp
movsb
pop
das
aas
mov
cmp
sbb
adc
cmp
pop
popf
aam
cs
outsb
adc
adc
mov
mov
sbb
mov
ja
out
outsl
push
fisubrl
pop
loop
dec
ja
enter
sbb
push
sub
into
inc
and
push
in
or
repz
pop
mov
sbb
rcl
jne
cmc
lods
sbb
adcb
push
out
inc
nop
insb
mov
bound
test
mov
lret
or
add
test
leave
in
out
insl
imul
fstl
mov
sub
mov
stos
mov
lret
mov
xchg
test
js
std
push
test
ret
and
rorl
dec
mov
fsubs
fcoml
xor
inc
stos
stos
adc
sub
dec
aaa
out
inc
sbb
sbb
test
loopne
cmp
mov
testl
call
dec
xchg
push
mov
andb
jne
nop
adc
push
popl
jmp
negl
push
jae
insb
mov
imul
cltd
mov
add
lods
scas
call
jnp
ja
add
fwait
or
xchg
add
outsb
mov
mov
aas
cmpb
fsubrs
negl
cmc
fdivrl
push
pop
fisubl
push
xchg
adc
sub
enter
fsubs
mov
int
cltd
xchg
fdivl
xchg
cmpsb
push
xchg
iret
mov
subl
xor
test
adc
push
mov
leave
aad
adc
insl
nop
cltd
xlat
sbb
xchg
lds
cs
testl
cmpb
and
jle
sbb
test
xlat
insl
pop
xor
sub
icebp
xchg
cmp
pop
sbb
mov
mov
push
mov
push
mov
adc
xchg
imull
pushf
scas
cmp
repnz
mov
fcoms
je
mov
jb
and
add
mov
and
push
add
stos
shr
mov
movsl
inc
or
orl
out
mov
cs
cwtl
nop
cmp
mov
out
packssdw
add
sbb
ja
mov
and
inc
sub
adc
jmp
xchg
call
test
dec
cmc
jl
ret
mov
pop
loope
mov
push
cltd
pop
mov
dec
xchg
mov
and
mov
pop
arpl
std
ret
sbb
cmpsb
loope
or
push
nop
xor
ret
cmp
mov
push
into
push
sbb
xor
fsubp
dec
call
sti
xchg
mov
test
les
xchg
lret
sub
loopne
mov
mov
jg
or
insl
lock
xchg
and
sbb
mov
loopne
stc
sahf
popa
lods
pop
jnp
adc
sbb
push
aad
inc
sbb
jbe
sub
call
jg
push
lods
jecxz
ljmp
dec
dec
push
sahf
mov
xlat
fsubs
fadds
addr16
lods
adc
jmp
and
lock
das
jg
jmp
fldt
into
bound
addl
dec
ret
sarl
ss
jmp
lods
es
or
addr16
aaa
arpl
pusha
dec
jge
sub
clc
mov
dec
mov
call
cli
mov
add
outsb
popa
fsubrs
loope
jecxz
fnstenv
pop
or
test
jbe
xchg
push
inc
cmp
add
xchg
loop
in
je
mov
dec
imul
mov
xchg
dec
mov
jo
in
call
cmp
adc
adc
xlat
mov
or
repnz
mov
and
sbb
loope
repnz
xchg
mov
data16
fdivs
xor
push
jmp
pusha
xor
imulb
movsl
int3
cmpb
lret
loope
cmp
or
sub
mov
lods
addr16
pop
sahf
mov
mov
mov
movsl
push
bnd
add
cwtl
jbe
mov
sahf
lods
decb
mov
inc
cmp
loop
icebp
ret
ror
stc
into
dec
ljmp
push
mov
cmp
nop
shlb
and
loop
jbe
repnz
ss
sbb
xor
pushf
dec
lock
mov
loope
out
psubb
mov
or
sbb
mov
sub
sarl
into
lods
iret
dec
iret
repnz
mov
fsubrl
sub
mov
insb
cwtl
xchg
test
int3
sub
add
repnz
mov
pop
lds
inc
mov
scas
inc
mov
rclb
sbb
mov
push
jno
int
dec
add
xor
sbb
ss
pop
cli
jl,pn
xchg
inc
push
cwtl
dec
test
sahf
das
jae
mov
cmc
push
loop
js
stos
xor
mov
mov
and
icebp
sbb
clc
ret
outsb
lds
mov
add
jb
lock
mov
cmp
xchg
push
fistpl
sbb
shlb
sbb
or
pop
andl
mov
aas
insl
aaa
mov
in
mov
jo
jb
icebp
mov
pop
arpl
fildl
cmpb
mov
mov
inc
ret
sbb
sub
out
adc
xchg
cld
lmsw
sbb
rcrl
int
lds
aad
push
insl
iret
xchg
and
fsubrl
mov
lahf
mov
pop
roll
sub
xchg
test
push
ds
arpl
sbb
shl
enter
shl
or
aad
pop
cltd
and
and
mov
testb
imul
mull
push
sub
mov
mov
xchg
jecxz
mov
add
adc
or
pop
mov
shl
repz
das
jecxz
fistpll
leave
jb
inc
push
scas
jo
lods
movsb
cmc
movsb
mov
push
iret
and
jge
mov
mov
xchg
mov
dec
xchg
movb
addb
jp
push
inc
mov
push
push
out
ljmp
cmp
inc
cmp
shll
outsl
outsb
sti
jns
adc
imulb
loopne
pop
push
mov
push
das
outsb
sub
push
xchg
in
add
out
in
pop
ds
ret
int3
inc
sbb
outsb
arpl
fisttpl
ljmp
out
loop
movsb
jge
and
mov
push
arpl
xchg
add
cli
and
imul
jno
jge
into
aam
js
ss
mov
dec
or
add
mov
lcall
jnp
jmp
call
sti
insl
out
cwtl
cmc
push
shlb
cli
inc
pop
popf
cltd
pop
sub
lods
sbb
mov
jno
cli
inc
aaa
mov
push
cmpb
divb
pop
add
xchg
cmp
test
shrl
and
or
mov
mov
push
loope
scas
mov
sahf
xor
mov
pusha
xor
std
mov
loope
cltd
xor
add
scas
xchg
adc
or
iret
arpl
les
jle
bound
sbb
aas
cld
in
out
ja
decb
mov
inc
jl
sbb
adc
mov
mov
inc
xlat
jne
inc
jnp
dec
outsb
mov
sti
cmp
dec
pop
shr
mov
leave
rol
mov
mov
daa
xchg
adc
lods
test
mov
addb
nop
sub
mov
and
in
push
mov
push
jle
adc
es
lcall
add
push
sbb
ds
repz
outsb
xchg
cmp
dec
fisttpll
lret
out
sub
mov
xchg
aas
pop
inc
push
loop
mov
xlat
out
or
repz
adc
movsl
stos
adc
dec
cmpsb
mov
cmp
mov
and
mov
cmc
addr16
jne
insb
dec
aaa
pop
jmp
cs
push
mov
jno
pop
fistpl
rorl
push
add
stc
lods
cmpsl
inc
jne
jg
mov
inc
aaa
jb
test
stc
and
xchg
xor
call
adc
and
pop
or
in
or
popa
int
adc
mov
aam
mov
rcl
xor
jae
aam
xchg
fimull
jmp
xor
insb
sbb
push
test
adc
ret
pop
nop
aaa
cld
sbb
pop
lods
into
lods
mov
dec
mov
adc
dec
inc
icebp
mov
adc
cmpsb
jo
xchg
push
xor
icebp
insb
dec
arpl
and
les
lcall
and
adc
cmp
stc
adc
je
ret
ret
push
in
lcall
mov
mov
ficoml
mov
pop
jo
push
ja
inc
lret
fldcw
mov
sub
push
add
inc
jno
int3
push
inc
cmp
adc
add
int3
xchg
sbb
lds
dec
dec
mov
or
xor
add
fstpl
movsl
pushf
add
ret
mov
mov
aam
jbe
jge
lret
and
sbb
jno
inc
mov
mov
sar
inc
jb
and
push
adc
cmc
mov
lcall
sahf
int3
mov
cmp
daa
je
pop
push
add
fmull
mov
jb
mov
ret
and
pop
adc
xchg
es
xor
lds
lods
notl
mov
xor
push
push
in
lock
int
or
shll
adc
in
outsb
mov
push
rcll
leave
pop
pushf
lea
add
mov
sbb
mov
lret
lcall
lock
xchg
bsr
and
push
mov
mov
fidivrl
push
xchg
std
xor
repz
cltd
mov
outsb
fwait
mov
mov
cmp
add
dec
ja
xor
adc
inc
inc
sbb
leave
push
add
pop
dec
push
and
or
push
adc
pop
mov
jl
mov
add
push
push
in
fistpll
test
xchg
inc
sub
or
movsl
mov
lock
scas
inc
leave
xor
pop
sbb
mov
fsubs
cmp
out
test
enter
mov
inc
stos
fdivrl
dec
jnp
cld
gs
test
insb
xlat
in
jbe
xchg
into
inc
rcl
and
mov
mul
outsb
and
pop
out
hlt
sbb
add
cmp
push
push
mov
or
adc
mov
or
cmp
xor
mov
jae
dec
pop
pop
xchg
mov
icebp
mov
lret
sbb
pop
add
movsb
out
aad
inc
lds
loopne
sbb
dec
movl
pusha
gs
inc
sub
in
or
ror
scas
lret
call
inc
pop
cli
les
insl
outsb
aaa
test
insl
inc
sbb
adc
pop
xchg
das
sti
loopne
mov
mov
sub
lods
add
push
pop
adc
popa
mov
cmp
mov
pop
sar
es
jne
inc
fiaddl
jmp
bound
and
shlb
ja
loop
pushf
add
dec
inc
notl
mov
or
sahf
sbb
test
sbb
xor
cmp
icebp
sbb
iret
ss
xor
adc
mov
and
mov
cmp
pop
mov
repz
hlt
cmpsl
inc
push
mov
push
mov
mov
aad
es
pop
or
scas
push
push
rcr
mov
lret
adc
ret
mov
jnp
out
scas
lcall
imul
push
jae
test
pusha
push
cmp
and
imul
iret
mov
mov
adc
ret
dec
dec
hlt
int3
mov
call
xchg
lret
in
dec
sub
jno
and
ljmp
xor
mov
out
jge
cmp
out
lods
ret
stos
lcall
lret
cmp
push
xor
dec
scas
test
mov
dec
cmp
bound
shl
xor
mov
roll
push
xchg
push
cld
lret
lods
pop
xlat
stos
call
test
icebp
ljmp
lods
filds
cmp
mov
mov
mov
add
pushf
push
fisubrl
mov
aas
push
test
xchg
jbe
bound
loopne
and
cmc
add
jmp
js
inc
add
push
lds
cli
pop
xchg
scas
xchg
stos
jns
popa
jno
outsb
xorl
xor
fldcw
addr16
orb
je
daa
adc
ffree
fwait
cmp
push
fisubrl
sarl
or
dec
xor
lds
insb
call
mov
fs
addr16
std
xor
cmp
push
ljmp
jp
jae
shrb
mov
mov
clc
testb
add
mov
and
xlat
mov
adc
sbb
xchg
mov
jo
leave
push
mov
fnsave
mov
inc
jecxz
mov
add
js
testb
push
push
push
push
ds
adc
in
das
jl
punpcklbw
lods
xchg
sbb
orb
sar
jecxz
ret
decb
arpl
jp
rcll
mov
subl
adc
lods
das
mov
repnz
in
jmp
xchg
xlat
xchg
dec
push
pop
cli
xchg
ficoml
outsb
js
int
je
lret
ljmp
add
xor
pop
outsl
xlat
ret
sarb
xchg
leave
shll
mov
adc
sbb
push
repnz
scas
js
lcall
adc
negb
test
sub
ljmp
fmulp
popa
push
scas
add
jae
mov
into
into
sbb
clc
mov
or
data16
call
test
and
test
mov
psadbw
sbb
or
add
ljmp
mov
or
and
mov
mov
cltd
push
in
pop
insl
je
fcmovu
andb
dec
jmp
aad
repnz
mov
push
int
in
pop
xor
in
fwait
stc
stos
inc
sbb
test
push
or
mov
mov
jmp
test
sbb
mov
imul
jg
inc
mov
adc
dec
ljmp
dec
xchg
outsl
cmp
scas
ljmp
lods
pop
sub
or
and
fs
scas
es
jmp
mov
sbb
mov
lret
pop
xchg
loop
jecxz
jns
add
add
shr
sahf
out
jno
cmpsl
push
push
push
mov
mov
sbb
jmp
test
fbstp
int3
mov
cmp
cli
icebp
mov
push
rcrl
jge
mov
ror
mov
insb
push
stos
mov
cmp
clc
aam
ja
insb
sub
xlat
push
cltd
daa
pop
xor
xchg
aaa
dec
out
dec
add
fcmovbe
cwtl
lods
cld
imul
jp
imulb
xor
mov
cld
aaa
jno
mov
loope
popa
lods
mov
inc
adc
mov
lods
sub
shll
and
loopne
in
push
insl
or
pop
jns
xlat
movsb
pop
xchg
les
repnz
sub
ret
jbe
inc
in
call
dec
out
aam
scas
ss
adc
mov
stos
pop
popa
mov
xlat
mov
shlb
stos
add
int
mov
add
aam
cmpsl
dec
movsl
cli
iret
mov
mov
mov
sub
aam
loope
push
loopne
cmpsl
push
mov
xor
pop
xchg
sub
or
das
push
fucomi
push
aaa
mov
aaa
outsl
lcall
insb
pushf
sbb
hlt
daa
aaa
lock
dec
cltd
shll
call
pop
add
dec
jnp
int
and
arpl
add
dec
fstpl
iret
inc
mov
lock
mov
jl
rcr
dec
ret
mov
mov
jne
or
mov
jle
sub
or
data16
test
xor
push
clc
sub
faddl
mov
adc
add
lcall
aas
adcb
into
ret
fwait
mov
loopne
xchg
jle
mov
fimuls
mov
in
pop
xchg
xor
or
imul
pop
leave
xchg
mov
bound
mov
inc
fnsave
pop
mov
jb
movsl
enter
divb
test
jne
adc
adc
or
or
mov
push
jns
in
sbb
in
in
push
lods
arpl
or
bound
nop
sub
clc
add
mov
mov
dec
dec
xchg
lret
mov
dec
outsl
lea
cmpsb
push
pop
cltd
scas
idivb
mov
and
push
mov
push
add
xchg
pushf
imul
mov
add
jmp
fcomps
popf
ret
xchg
or
ss
shl
ret
cmovbe
xchg
sbb
jno
dec
imul
cwtl
hlt
jne
push
pop
insl
les
mov
jbe
xchg
xlat
mov
xor
mov
stos
xchg
scas
test
mov
les
mov
fcoml
sti
jge
pop
dec
pop
sahf
test
lds
rcrb
inc
xchg
inc
mov
test
mov
inc
lret
inc
mul
jg
testl
imul
jo
fs
add
ret
xchg
jmp
shlb
lcall
adc
fcompp
out
shlb
xor
sarb
mov
jne
jmp
mov
insb
lahf
insl
lock
outsb
jecxz
adcb
popa
mov
dec
cmpsl
addb
insl
dec
ljmp
nop
inc
ret
jns
cmp
push
pop
push
addr16
dec
fistpl
mov
lcall
testl
push
and
test
cmp
pop
cwtl
inc
xor
mov
shlb
xchg
dec
mov
mov
lods
mov
pop
push
and
dec
xchg
sahf
pop
pop
sarl
cli
es
cmpsl
scas
in
sarb
push
xor
push
iret
enter
add
mov
push
pop
jne
out
or
pop
scas
cmp
xchg
push
mov
push
jnp
or
xchg
jae
mov
add
int3
push
cmpsb
and
mov
add
cmpsl
dec
fwait
sbb
sub
ffree
mov
ljmp
pop
popa
int3
dec
lea
mov
pop
jae
inc
out
es
xchg
sub
lods
sbb
test
jae
inc
icebp
mov
or
or
jp
insb
xor
js
cmpsl
pop
out
sbb
loope
ret
sahf
hlt
inc
pop
pop
in
adc
fbstp
jecxz
and
shr
or
shll
jmp
inc
inc
dec
push
adc
or
sbb
int3
jns
cmpsl
jne
icebp
jl
push
dec
or
dec
std
mov
jmp
mull
xchg
cmpsl
mov
mov
in
test
adc
out
scas
inc
xchg
mov
fidivrl
lret
movsl
jp
in
dec
jne
ffree
pop
xchg
lahf
mov
ds
xchg
sbb
pop
popf
push
mov
lret
std
inc
mov
mov
call
lcall
cmpsl
lods
fdiv
popf
shrl
mov
push
mov
hlt
les
scas
mov
js
pop
test
imul
mov
lea
jae
pusha
add
fistps
or
fcmovnb
or
inc
ljmp
jb
into
dec
mov
rorl
mov
mov
in
cmp
inc
jae
sub
jo
xchg
call
mov
mov
in
lahf
dec
scas
and
push
pop
jecxz
cmp
pop
adc
fcmovu
leave
mov
insb
call
loopne
mov
pushf
negb
cmp
pop
cmpsb
mov
or
popa
push
jmp
cmc
pop
jp
neg
imul
push
fsubl
ficomps
and
and
enter
stos
mov
jg
sbbb
call
rorl
iret
push
cld
xchg
gs
xchg
flds
sti
stos
insl
sub
icebp
jae
nop
leave
pop
mov
shl
jae
pop
sub
inc
mov
sub
inc
mov
inc
repz
call
xor
jecxz
scas
jno
mov
rclb
sub
xor
sbb
xor
jae
cmp
dec
neg
push
add
pop
leave
in
push
mov
dec
sub
sete
xchg
cmp
dec
jne
mov
pop
xor
rolb
fsubp
mov
mov
cwtl
or
cmp
insl
out
xor
push
xor
enter
std
cmp
adc
fsts
or
push
data16
pop
rorb
sbb
jmp
in
repz
jbe
inc
gs
ljmp
mov
add
cmp
xchg
daa
or
pop
mov
lcall
imul
pop
and
int3
push
sbb
icebp
gs
sub
cmp
jnp
push
inc
add
subl
in
out
mov
out
push
and
mov
pop
xor
mov
jnp
sub
aam
xchg
push
lods
push
sub
push
in
in
pop
sbb
jle
lret
repz
mov
fwait
out
mov
fs
repz
pushf
sub
pusha
lret
inc
xchg
mov
sahf
call
sub
xor
xchg
fimull
jb
outsb
stos
shl
outsl
into
inc
lret
push
int
sbb
test
ret
hlt
or
ret
mov
mov
xor
jg
stos
sqrtps
pop
lods
and
mov
and
popf
pop
dec
mov
mov
xor
inc
sub
fldt
push
or
xor
testl
stos
cmp
dec
and
fwait
push
cwtl
test
inc
in
xchg
cmp
clc
add
imul
xchg
adc
daa
fcmovne
sahf
mov
xlat
xchg
sub
dec
add
test
jo
fs
bswap
mov
pop
imul
jbe
test
add
sbb
inc
aad
push
andb
xchg
clc
sbb
jns
mov
mov
dec
xchg
sbb
ret
push
pop
pop
mov
sub
push
popa
in
movsl
push
je
cli
inc
punpckhwd
pop
int
jle
or
pop
xor
lods
mov
push
dec
inc
mov
push
into
mov
mov
cltd
push
adcb
push
icebp
sub
jge
push
add
push
xchg
pop
cmc
push
adcl
cwtl
mov
testb
add
xlat
addr16
in
pushf
add
add
cmpsl
add
out
pop
pusha
xchg
push
add
adc
adc
jb
ljmp
insl
xor
xor
es
push
out
push
cmpsb
mov
sub
cmc
ret
dec
movsl
mov
adc
rcl
stc
xchg
jno
test
call
sub
ljmp
xlat
lret
pop
repz
and
and
add
push
lahf
imul
lcall
xchg
jno
xchg
fmulp
cmp
stos
xchg
sub
lock
daa
imul
call
pop
pop
leave
mov
mov
fwait
adc
cmpl
inc
test
sti
xchg
xchg
or
dec
rcll
sub
and
mov
push
mov
pop
or
pop
mov
inc
pop
cli
and
jne
aaa
mov
xchg
mov
test
inc
mov
in
lahf
dec
add
xor
inc
or
popa
pop
pop
pop
xchg
dec
les
xchg
idivb
ss
xor
scas
stc
push
clc
jle
xchg
fcomps
xor
sub
dec
test
inc
or
enter
adc
and
js
int3
jne
add
mov
or
cmp
loop
xchg
sub
pop
pop
outsb
pop
pop
xchg
stc
cmp
sbb
std
repz
fimuls
xchg
jg
mov
ss
and
push
subl
out
int
js
add
in
mov
and
push
test
xchg
xchg
sub
pop
vmovupd
inc
sub
push
jno
das
xor
dec
addr16
das
mov
jmp
or
xchg
adc
scas
sub
stc
inc
cmp
or
cltd
ss
push
gs
shl
jle
stos
loope
pushf
in
xchg
sub
xor
mov
es
jge
mov
pop
dec
in
mov
movsl
sub
push
xchg
cwtl
out
fsubrs
cmp
jmp
dec
xor
in
sbb
xchg
jmp
sub
fnstcw
xor
inc
inc
das
add
ja
outsb
inc
mov
ret
dec
imul
push
hlt
imul
push
and
jp
leave
in
inc
xor
xor
adc
imul
xor
pop
mull
pop
push
iret
mov
das
aad
add
adc
cmp
pop
jbe
rorb
ja
addb
mov
or
dec
mov
cmpsb
pop
inc
mov
adc
or
pop
push
push
les
adc
aam
dec
clc
lods
jl
or
dec
xchg
loop
and
mov
xchg
jecxz
push
adc
and
mov
mov
sub
cs
aas
jb
movsb
and
dec
mov
xlat
fwait
cs
push
pop
fwait
push
dec
cmp
cmpxchg
mov
jne
fsubs
iret
and
xor
repnz
lods
lcall
loopne
xchg
dec
fcoml
pop
test
xchg
add
pop
ja
int3
mov
sbb
dec
pop
leave
pop
out
xor
test
outsl
dec
repnz
xor
cwtl
fcoml
lret
pop
adc
xchg
cmp
dec
cli
xor
push
xchg
sbb
test
inc
sub
leave
ja
test
xor
sbbl
imul
pop
cmpsb
or
in
fcomps
inc
fnstenv
push
idivb
sbb
push
mov
icebp
pop
push
popa
cmc
std
enter
inc
je
shrb
mov
and
std
push
cmc
add
lods
jge
adc
lahf
jno
jb
popf
insl
in
mov
xchg
cmp
fsts
mov
mov
mov
dec
imul
adc
adcl
stc
pop
dec
mov
out
test
and
inc
inc
mov
push
test
enter
adc
xchg
iret
fnsave
push
fdiv
js
sub
mov
dec
pop
into
push
sbb
imul
jmp
mov
mov
mov
mov
push
mov
pop
mov
out
xchg
push
out
mov
mov
filds
outsb
into
aad
sbb
mov
mov
ror
sbb
fmul
xchg
push
insl
jmp
jle
or
ror
clc
and
fdivl
mov
fwait
mov
sbb
jne
mov
mov
sbb
and
lods
addb
iret
and
into
mov
aaa
mov
jg
sub
xchg
adc
inc
hlt
dec
fstpt
mov
dec
lods
ljmp
test
xor
inc
inc
push
jmp
hlt
test
cs
jmp
inc
mov
subl
icebp
out
and
fdivrs
xchg
cmp
loopne
int
repnz
xchg
pop
jmp
sub
andl
jle
jne
sarb
movmskps
sub
bound
insl
push
sub
mov
sbb
pop
insl
dec
xor
jb
mov
ret
adc
js
lods
jle
dec
cmp
or
jmp
add
add
shlb
adc
sub
adc
sbb
fldenv
arpl
data16
dec
sub
addr16
sbb
imul
ficoms
xchg
push
cmp
sbb
insb
sub
test
sbb
pop
pop
xchg
popa
inc
mov
clc
xchg
xchg
jae
sahf
div
loope
fwait
add
fwait
mov
mov
jmp
mov
fmul
sarb
and
fld
xchg
int
jg
mov
popa
fisttpll
test
mov
xchg
cli
or
mov
mov
ss
cwtl
adc
mov
fildll
cmp
jb
xlat
sub
pop
sub
xchg
mov
inc
jno
sbb
push
inc
mov
cld
lods
jl
aaa
in
fsts
lret
mov
mov
hlt
aaa
mov
movl
lods
mov
ja
mov
lret
out
sbb
adc
shlb
out
fmuls
pop
aas
inc
shll
push
sub
movsl
mov
stos
xchg
daa
jae
cmpsl
pop
add
add
leave
pusha
xlat
pop
lods
pop
push
mov
jnp
repnz
mov
mov
mov
pushf
mov
or
xor
add
jbe
in
div
scas
fsubs
fldenv
mov
adc
mov
xlat
adc
inc
movsl
sbb
add
rorl
cltd
scas
and
aad
xor
in
in
pop
mov
stos
movsl
cltd
mov
xor
sbb
xor
inc
pop
jno
cmp
lret
not
mov
cmp
sbbl
adcl
test
shlb
dec
ficoms
lods
mov
or
sbb
rcr
dec
cmp
je
mov
dec
pop
aas
mov
out
inc
js
inc
pushf
test
test
cmp
add
xor
out
or
mov
push
pop
in
mov
test
outsb
scas
rcr
mov
stos
add
adc
mov
push
fsub
rorl
push
jo
rolb
dec
fmulp
ret
inc
adc
jecxz
mov
movsb
popa
popf
movl
stos
aaa
sub
mov
push
or
inc
inc
sub
clc
and
jmp
jge
mov
pop
dec
lea
sub
sahf
popa
scas
adc
out
or
push
call
int
mov
data16
adc
dec
pop
ss
insb
ficoms
jp
adc
push
adc
push
or
jnp
ffree
cmpl
roll
aad
das
sbb
jno
dec
push
or
lcall
sbb
push
fs
sub
aam
mov
out
inc
mov
pushf
push
enter
adc
mov
ret
out
cld
icebp
jg
ss
add
xchg
push
mov
sub
popa
in
ret
pop
ret
out
cld
xorb
sub
pop
test
or
cmpsl
mov
xchg
inc
aas
sub
testb
push
cmp
out
pop
in
lock
in
pop
lcall
mov
mov
addr16
in
pop
xor
inc
inc
xchg
xchg
mov
sub
add
cli
out
add
mov
cmp
ficoml
sbb
call
jmp
jle
stos
movsl
insb
ja
data16
lahf
push
aam
pop
movsl
lds
mov
or
cs
add
in
cltd
mov
inc
pusha
fstpt
jne
push
pop
lock
imul
jb
rorb
cltd
push
mov
jp
daa
and
cmpsl
scas
scas
inc
xor
cmp
cmp
sbb
jecxz
xchg
push
mov
and
gs
aam
xlat
movsl
jne
and
cmc
adc
cmp
cmc
shrd
and
jg
jns
xchg
cmpsb
xchg
ret
add
in
jp
jp
mov
test
jb
div
mov
mov
repz
lahf
dec
pop
xor
mov
das
pusha
scas
push
test
or
fidivrl
aam
push
test
insb
xchg
push
rorb
fucomip
flds
out
sbb
jne
fs
sub
pop
mov
sarl
fs
add
lcall
and
pop
and
gs
outsl
pop
xchg
add
in
loopne
xchg
shll
pop
fwait
hlt
or
pop
adc
push
stc
decb
in
fdivr
add
pop
out
mov
jmp
push
pop
xchg
gs
sbbb
jne
mov
jae
pushf
xor
int3
arpl
or
dec
and
and
test
mov
hlt
cltd
push
mov
gs
mov
pushw
jns
stos
in
push
add
in
mov
and
jmp
mov
test
insb
sbb
jecxz
stos
push
mov
hlt
and
pop
mov
jbe
xchg
jecxz
sub
cmp
stos
pushf
ret
or
or
shlb
mov
mov
pop
mov
mov
mov
pop
lods
jmp
scas
in
mov
dec
fwait
push
jo
js
das
scas
push
push
xor
push
es
sbb
and
cmpsl
adc
mov
mov
inc
xor
out
xor
mov
fstl
push
pop
ret
scas
push
pop
test
xchg
push
idivl
xchg
and
push
push
cmp
adc
pop
xor
xchg
jbe
or
mov
jo
jns
fs
pop
or
dec
jne
cmp
cmpsl
fstl
add
xchg
inc
out
arpl
and
jp
add
inc
xchg
mov
mov
cmp
pop
loope
in
mov
fdivrl
and
mov
je
scas
push
cmp
stos
sbb
int
add
inc
lea
stc
std
dec
jl
aaa
inc
test
out
cmp
mov
sbbb
or
or
xchg
test
lea
xchg
push
fcomps
out
or
and
mov
enter
push
outsl
adc
ror
orb
int
sub
imul
jns
inc
adc
mov
ss
sub
xor
test
fwait
int3
xor
dec
mov
mov
or
adc
cmc
pop
mov
push
inc
dec
fucomi
cmp
ret
jecxz
dec
outsl
sbb
inc
mov
andl
mov
and
jb
jp
pop
mov
push
mov
lret
int
jne
lret
movsl
cmpsl
mov
mov
lea
mov
adc
push
movsl
divb
sbb
loopne
aaa
arpl
cmp
dec
xchg
aad
push
popf
pop
testl
inc
out
jb
int
inc
dec
pop
insl
bound
pop
mov
sbbl
xor
bnd
jecxz
xchg
or
jae
cmpsl
dec
push
or
scas
pop
out
or
out
les
ffree
push
dec
test
jl
int
push
xchg
pop
jo
call
test
sbbl
lock
mov
fildl
jno
pop
jo
push
aaa
jae
movsl
mov
loopne
sub
insl
aam
popa
mov
stos
add
aad
add
add
push
xor
shl
push
mov
lret
inc
xchg
sbb
and
call
jnp
mov
cmpsl
mov
jbe
test
imul
push
xorl
pop
jp
cld
test
stos
test
int3
jecxz
xchg
pop
ds
popf
add
cld
loopne
add
jl
stc
leave
icebp
adc
xor
hlt
das
ja
inc
test
push
insb
fildll
jle
lods
mov
stos
ss
pop
call
mov
rcrl
je
add
in
js
or
neg
test
nop
mov
andl
fdecstp
xchg
ljmp
in
stos
repnz
inc
cmp
ds
iret
test
or
push
pop
xchg
clc
and
int
jge
dec
mov
inc
mov
sub
mov
jno
out
popf
sbb
mov
ds
pop
test
out
mov
dec
mov
adc
xor
jmp
and
cmp
sub
jno
rcrb
rclb
xor
outsb
jmp
sbb
cwtl
ss
loopne
test
mov
or
adc
and
lret
fcoml
movsl
push
mov
push
xchg
lret
test
popf
sub
adc
jmp
sbb
popa
xor
push
jno
loop
push
add
cmp
mov
mov
jmp
int3
cli
cmp
dec
ret
orb
aad
jne
mov
jo
add
dec
pop
pop
add
stc
xchg
test
mov
dec
arpl
pop
add
cmpsb
les
fstpl
pop
and
or
add
data16
jbe
push
pop
cmp
add
jno
mov
or
sub
ficoml
xchg
js
out
das
mov
mov
push
or
dec
aad
std
outsb
add
lods
add
fs
xchg
mov
jmp
out
inc
push
sahf
fwait
dec
pop
mov
inc
daa
repnz
mov
sub
aam
xor
mov
test
mov
dec
dec
dec
adc
inc
xor
pusha
lods
outsl
std
push
dec
mov
cli
sub
das
and
fldt
hlt
xor
pushf
mov
negl
push
fmull
gs
jge
jp
insl
jae
mov
mov
pop
pop
sbb
push
aaa
inc
stc
jp
mov
jno
les
pushf
or
ljmp
sbb
out
sbb
adc
int3
lods
xchg
pop
es
dec
mov
icebp
stos
aam
xchg
lahf
das
jle
lahf
mov
inc
pop
adc
xchg
push
leave
adc
ret
push
cmp
pop
push
gs
addl
fcompl
shrb
push
xlat
push
mov
outsl
mov
fsubs
repz
stos
repz
out
pop
pop
fsubl
xchg
xchg
pop
js
arpl
movl
sub
pusha
loope
cmp
dec
push
sub
dec
lea
scas
push
push
mov
bound
fdivrs
lret
xor
and
xor
pop
jns
dec
lcall
add
or
mov
pushf
outsl
shll
incb
or
int
pop
ret
cmpsl
out
idivb
arpl
shll
push
mov
mov
sahf
or
sub
shrl
daa
sub
jp
out
lods
sub
int3
call
sub
push
outsl
xchg
dec
cmp
cs
insb
xchg
and
in
and
xchg
sub
outsl
xchg
xchg
fs
jge
pop
pop
mov
fdivrl
or
dec
push
out
repnz
aad
pop
dec
in
rcr
fwait
jle
mov
push
pop
jae
push
frstor
sub
mov
imul
gs
daa
xchg
nop
xchg
pop
jmp
mov
adc
mov
mov
int
test
or
dec
pop
push
push
test
mov
mov
cmp
int
adcb
test
dec
ljmp
add
or
ficompl
fwait
jge
xchg
sbb
dec
repz
jns
gs
aam
and
mov
leave
cli
mov
loopne
cmpsb
mov
add
inc
bound
adc
inc
jne
adc
push
cwtl
cmpb
jbe
ja
dec
or
adc
sahf
call
insl
add
pop
dec
cltd
test
scas
popa
xchg
and
pop
incb
out
add
or
insb
sub
sbb
ja
popa
pop
fimull
fmull
push
push
outsl
add
repnz
xchg
out
push
imul
fmuls
test
fbstp
fcoms
hlt
lods
pop
mov
ja
jns
aas
xchg
jmp
push
ja
mov
addr16
mov
mov
adc
xor
mov
dec
push
movsl
lds
pop
sub
sbb
movb
rclb
mov
push
pop
push
cmpsb
loope
rcrb
jecxz
xchg
shll
loope
jo
mov
test
xor
je
mov
pusha
mov
and
inc
add
int3
cmp
push
push
mov
mov
sub
jo
xor
cmp
mov
or
push
fnstenv
add
xor
clc
aam
cs
push
cltd
jno
in
push
mov
cltd
lods
lea
cmc
cli
leave
add
in
pushf
inc
mov
xor
push
icebp
inc
mov
or
clc
das
adc
popa
cmp
loope
dec
cmpl
cli
mov
lahf
idivl
xlat
out
out
addr16
xor
ja
cmpb
les
push
add
jns
push
pop
imul
je
test
add
sub
mov
mov
aam
sti
mov
xchg
testl
lods
jbe
aad
mov
mov
add
xchg
cltd
cltd
sbb
leave
lret
push
and
xor
leave
ret
loop
imul
addr16
inc
jnp
ja
divb
cmc
and
sub
ljmp
pop
lea
imul
xchg
pop
cmp
out
shrb
push
ror
xor
xlat
or
call
push
sbb
cltd
lahf
or
xchg
int
and
jns
dec
dec
jle
addl
arpl
ret
mov
add
ret
adc
jg
jecxz
cmp
adc
pop
push
stos
dec
in
push
in
mov
add
mov
push
insl
dec
das
mov
lods
adc
lods
shll
pushf
fildll
mov
xchg
sbb
insl
push
pop
mov
nop
std
or
call
stc
mov
test
addb
xchg
mov
jmp
sbb
repz
in
xor
xor
push
and
nop
adc
outsl
loop
stc
lds
pop
inc
pop
cmp
rcl
addr16
mov
ret
daa
mov
cmp
ja
orb
xchg
stc
adcb
pop
xchg
shl
testb
xchg
mov
adc
repnz
fistps
sub
dec
mov
xor
mov
adc
sub
xor
jmp
inc
in
mov
cmpsb
jle
mov
push
pop
cmp
aam
xor
or
xchg
js
inc
in
jae
test
hlt
mov
out
sbb
cmp
mov
pop
adc
js
rcl
sub
adc
fistps
pop
mov
jle
mov
mov
xchg
stc
dec
loopne
int3
cmp
push
int3
bound
mov
jle
mov
inc
scas
push
outsl
test
scas
icebp
lds
rorl
test
pushf
insb
mov
push
ficompl
xchg
daa
insl
cld
xchg
jne
push
add
mov
push
dec
pop
mov
popa
sahf
ljmp
fstl
addr16
sub
add
movsl
ret
jmp
jno
jns
xchg
mov
les
iret
and
out
cmp
pop
xchg
sub
fmuls
push
mov
jnp
cwtl
insl
push
imul
test
cs
mov
or
iret
add
aas
arpl
jae
andl
data16
cmc
aaa
push
sbb
dec
mov
mov
stc
stc
jne
dec
dec
cmp
pop
scas
and
imul
jne
mov
mov
mov
jbe
or
in
jb
or
aas
mov
ja
les
xchg
inc
in
jo
lods
rorl
and
shr
dec
cmc
call
je
insl
xlat
cmp
sti
repz
je
pop
sti
sahf
adc
insb
inc
fbld
mov
add
jl
xchg
dec
jbe
cltd
push
xchg
xchg
shlb
cmc
cmp
fildl
adc
mov
xchg
cmp
pop
pop
repnz
push
sub
cmpsb
mov
xchg
aas
cmpsl
comiss
adc
push
test
mov
inc
out
push
xchg
stos
mov
inc
sbb
adc
pop
js
pop
out
xor
rorl
ds
dec
jbe
mov
jae
negb
sahf
sub
sbb
push
mov
inc
sets
imul
xchg
shll
xchg
or
sub
inc
test
push
ret
repz
cmp
outsb
orl
jbe
sub
repnz
fmuls
mov
cs
mov
jecxz
sub
sbb
mov
mov
call
cltd
outsl
adc
dec
adc
pop
cli
mov
fcomps
xor
mov
inc
dec
and
ds
fdivs
cli
and
bound
outsl
hlt
cmp
bound
aas
fistpl
add
leave
stos
xor
mov
xchg
lods
icebp
cmp
cs
or
bound
repnz
lahf
mov
lcall
add
cmp
cmp
popf
mov
pop
clc
and
jns
insb
cmp
cmp
sbb
mov
imul
mov
shl
dec
add
loopne
jl
hlt
lods
cmovg
jae
sub
mov
insl
fistpl
mov
mov
scas
mov
push
pop
fldcw
or
outsl
pop
and
fidivl
mov
orb
popf
or
pop
or
cmpsl
stos
repz
lret
repz
cmp
in
xchg
jg
mov
pop
add
insb
daa
ljmp
shll
adc
stos
in
gs
adc
jne
jle
push
rolb
stc
cmpb
push
frstor
cmpsl
push
jl
mov
push
xor
sbbl
push
sbb
sub
stc
mov
pop
adc
ficompl
pop
aas
adc
dec
xchg
fs
pusha
xor
and
aad
iret
inc
mov
repnz
ja
movsb
mov
add
ds
dec
popa
mov
stc
push
aam
cmpsl
pop
out
push
sbb
jo
leave
push
arpl
dec
rorb
mov
mov
or
mov
xor
cs
in
inc
add
mov
add
stc
jg
scas
lds
mov
addl
push
mov
in
cli
xchg
decb
fs
mov
xchg
pop
jne
push
lods
out
repnz
mov
js
lret
cs
test
inc
outsl
mov
pusha
pop
fdivrs
xchg
push
pop
add
int
jmp
lds
movsl
stos
ljmp
fs
divl
ljmp
push
out
cwtl
mov
shr
xchg
cmpsl
mov
sub
in
pop
int
xor
in
push
mov
jp
jecxz
insb
fs
push
inc
or
div
inc
dec
or
and
jmp
push
inc
loop
out
and
cmp
sub
jbe
sub
and
mov
out
int
fcompl
push
push
pop
inc
in
insb
cwtl
dec
or
ljmp
nop
loopne
aam
mov
loope
push
call
jb
mov
mov
or
ljmp
pop
mov
inc
push
xorl
neg
jg
pop
repnz
imul
lret
dec
insl
push
repnz
stos
in
leave
pop
add
addr16
test
xchg
in
push
sub
in
pusha
fbld
nop
mov
test
jo
lea
dec
jne
add
gs
jo
mov
pushf
pop
pop
imull
jle
xor
leave
push
mov
popf
inc
scas
mov
cmpb
jo
pop
add
sti
pop
inc
call
cmp
add
dec
insb
pop
xor
xchg
stc
arpl
out
jmp
in
stc
push
inc
out
cmp
mov
xor
jp
sbb
test
xor
xor
fsubr
ds
cmp
aas
mov
cmp
fwait
mov
aad
jns
jnp
int3
jecxz
cmc
xor
or
cltd
or
and
jb
into
addr16
jecxz
divb
jbe
jge
fcoml
push
dec
or
test
loop
les
loope
jl
push
stos
bound
mov
aad
outsl
movsb
je
or
repz
test
aad
sub
scas
out
daa
cmp
mov
jnp
orl
loope
out
cli
sbb
cmp
mov
inc
sbb
adc
decl
aam
scas
xor
xor
loopne
nop
loopne
insl
cmp
subb
sub
cmp
ret
inc
xchg
ds
aam
or
sahf
pop
les
sbb
loop
pop
sub
pop
fwait
test
jle
jo
pop
out
cli
adc
test
mov
popf
jns
movsb
js
cld
popa
or
lds
xor
stc
xorb
sarb
in
lret
hlt
mov
int
adc
bound
xchg
pushf
std
es
outsl
aaa
lods
cmp
xchg
movsl
sbb
es
cmc
jb
push
sbb
xchg
and
imul
dec
inc
addb
js
cmp
jns
rclb
int3
pop
lret
scas
cmp
enter
movsl
cmp
fstpt
dec
ljmp
mov
and
inc
pop
mov
sub
insb
jb
or
pop
xor
repz
bound
js
adc
in
or
xchg
insl
clc
xlat
sub
cmp
push
std
pop
mov
daa
and
or
pop
out
repz
sub
or
xchg
add
sti
cmp
or
fcomps
and
and
ss
insl
mov
icebp
mov
push
jnp
adc
imul
pop
in
pop
js
cld
ret
adc
stos
stos
inc
out
inc
inc
imul
pop
sbb
mov
push
lea
movsb
ss
pop
xor
pop
sahf
mov
subl
sub
sub
mov
xchg
lock
mov
shl
and
data16
scas
test
xchg
jle
js
ljmp
outsb
mov
hlt
inc
cmp
lods
sti
jne
push
testl
cmp
call
xchg
adc
popa
repnz
add
out
push
push
movsb
xchg
mov
bswap
xor
pusha
xlat
daa
rcr
rol
rorl
inc
inc
adc
mov
lods
push
dec
addl
popa
cmpl
movsl
pop
mov
ret
leave
into
xchg
aad
jecxz
jg
add
xor
fst
orb
push
xchg
or
loope
popf
mov
rcrb
mov
cmp
sarb
add
and
outsl
je
sub
stos
cltd
daa
mov
or
mov
repnz
mov
stos
les
repnz
loopne
jge
lods
faddl
mov
and
mov
aad
aaa
seta
adc
jno
dec
lcall
cmp
ds
mov
arpl
jbe
sahf
xchg
push
pop
dec
fld
sub
pop
repz
gs
je
rclb
fcomi
xchg
mov
mov
push
jge
cmp
popl
popl
das
sbb
push
incl
dec
jnp
sbb
pop
ja
mov
pop
hlt
lods
push
xlat
loope
jae
cli
into
into
hlt
sub
ds
mov
lea
rcrb
add
xlat
rcll
jmp
or
add
adc
stc
add
int3
fimull
and
or
sbb
mov
scas
mov
jnp
and
cmpsb
nop
fwait
sub
cltd
mov
push
and
sbb
xorl
mov
int
repnz
iret
rclb
mov
fcmovbe
lcall
pop
mov
popf
out
lret
xor
repz
pop
and
mov
mov
mov
sub
mov
dec
lcall
ret
push
jb
mov
mov
aaa
cmpl
jo
jl
jg
mov
test
pop
imul
xchg
jmp
fmuls
sbb
add
jmp
sub
popf
insl
pop
pop
jl
jg
cmpsb
lods
xchg
pusha
insl
es
stc
jo
adc
ficoml
sahf
fimuls
cmp
add
pusha
stos
jmp
adc
sarl
xchg
fidivrl
or
lea
out
or
jl
inc
xor
jp
jg
hlt
xor
roll
adcl
sbb
adc
mov
loop
cmp
mov
cmpsl
js
mov
dec
rolb
fidivrs
pop
std
flds
sub
mov
sub
lea
lods
mov
mov
aas
scas
orb
out
add
inc
mov
fcoml
inc
push
ret
xchg
loop
mov
mov
fnstcw
jmp
push
push
cli
mov
test
mov
pop
insl
cli
fildll
pop
sub
lods
and
test
push
shrd
rcrl
in
test
cmp
ret
and
ss
fnstcw
and
or
jne
or
iret
sbb
mov
fdivs
or
outsl
and
in
adc
xorb
push
dec
jge
mov
ret
dec
pushf
cmovae
dec
jbe
data16
push
inc
andb
stos
mov
lods
sub
mov
cs
pop
sbb
dec
rolb
mov
sub
imul
fwait
push
push
push
add
jns
add
mov
icebp
xchg
hlt
push
add
std
jmp
stc
lock
dec
pusha
jnp
mov
test
scas
sub
mov
push
stos
or
lea
rcl
in
mov
jmp
mov
jge
sbb
jno
decl
loopne
xchg
stos
out
push
mov
sub
pop
cmpsb
jg
pop
or
push
and
aad
rcrb
sub
jge
jmp
out
inc
mov
call
sub
testl
iret
mov
sbb
rcll
pop
push
aas
push
jne
sbb
jbe
xor
push
stc
insb
lcall
or
subl
sbb
icebp
inc
mov
mov
add
sbb
bound
and
pop
add
mov
push
push
lret
decl
out
xchg
mov
jle
sarl
adc
and
ret
lods
push
lods
xchg
xchg
push
mov
xor
rorl
mov
loopne
fsubrp
fnstenv
push
imul
adc
xchg
mov
pusha
sub
and
dec
adc
dec
jno
pop
icebp
imul
jbe
push
popa
add
shrl
int3
mov
mov
repnz
xorb
lahf
loop
or
or
and
sub
rol
mov
out
sbb
lcall
push
push
and
shll
mov
pop
arpl
icebp
lock
xor
mov
jb
mov
mov
dec
adc
testb
adc
cmc
je
lods
sbbl
adc
imul
jg
mov
jnp
xor
and
push
out
mov
loope
outsb
push
mov
and
xor
push
and
push
xchg
ss
and
mov
push
sarl
pop
inc
mov
mov
xchg
cmp
push
mov
pop
js
popa
idivb
sub
roll
lds
inc
sbb
jno
fmuls
iret
hlt
enter
sbb
pop
xchg
xchg
incl
xchg
xchg
lods
mov
fucom
xor
pop
pop
aam
cmpsl
pop
add
testl
push
xor
hlt
push
movsb
pop
xchg
enter
lods
adc
repnz
jmp
jns
test
jb
xchg
cli
dec
pop
jle
xchg
push
sbb
out
sbb
sbb
xchg
push
xchg
xchg
or
xchg
dec
shlb
dec
sub
cmpb
pop
xchg
mov
mov
loop
in
jbe
xchg
pop
out
jbe
jmp
jmp
shrl
adc
fists
sub
sub
mov
sub
mov
aam
or
cmc
test
pop
xchg
mov
lds
enter
xor
push
cld
mov
mov
adc
rcl
xchg
adc
xor
fs
mov
in
mov
insl
adcl
fidivrl
inc
testl
jmp
add
mov
fisubs
xchg
shl
jecxz
pushf
jmp
push
lds
divl
ret
lret
jecxz
out
je
dec
test
or
je
sub
mov
int
sub
lret
inc
clc
popl
jl
dec
fisubrs
fdivrl
lret
cltd
dec
rclb
das
mov
lahf
imul
repz
jmp
sub
sub
fadds
and
xchg
cmp
sahf
cwtl
popa
imull
and
xor
xor
ret
pop
out
test
pop
mov
test
or
or
je
int
sbbb
outsb
mov
push
ret
jg
fsub
mov
xchg
enter
notl
push
test
inc
xor
cmpl
cmp
cmpb
out
sahf
repnz
enter
mov
aam
push
ds
mov
xor
aas
xor
insl
scas
add
ja
or
sbb
mov
mov
mov
mov
dec
outsb
mov
ret
push
push
cmpb
int3
adc
pop
jp
hlt
or
rcl
sub
sub
imul
xor
fildl
cmp
mov
push
scas
shlb
fistpll
cmpb
movsl
cmpsl
add
insl
leave
pop
scas
and
fadd
sub
xchg
push
mov
fildl
cltd
or
cmpsl
out
out
movsl
jnp
cmp
cmpsb
out
jge
mov
add
mov
jmp
popf
mov
jb
inc
fistl
sti
mov
insb
jo
aam
push
push
jp
loopne
out
fisttpl
in
scas
fsubrp
xor
push
dec
daa
lods
xchg
xlat
or
and
nop
fsub
rorb
outsb
xchg
fsubr
rcrl
dec
dec
and
xchg
cwtl
sub
stos
shlb
sub
not
and
ljmp
dec
dec
fdivr
popf
pop
ljmp
hlt
fsts
dec
mov
xor
stos
jne
pusha
dec
mov
pop
sbb
mov
inc
sub
sti
cmpsl
stos
lcall
mov
inc
adc
incb
shr
mov
into
sbb
movsl
adc
orl
enter
cli
or
mov
icebp
mov
movsb
lret
std
mov
jbe
rcll
and
cmp
jge
cld
into
add
pusha
cmpsl
jge
call
push
pop
out
pop
inc
sbb
out
popf
movaps
int
test
jge
push
test
push
rcrl
es
jo
xchg
cmp
cmpsb
mov
out
ret
push
lods
cmp
cmc
mov
lahf
orb
adc
jo
lret
popa
mov
mul
and
xchg
adc
aas
or
push
xorl
cmp
dec
jo
lds
add
flds
jp
adc
fwait
loopne
push
adc
push
mov
jo
aad
pop
sub
sub
adc
sub
sub
push
xchg
or
ret
pop
sahf
and
add
inc
icebp
lahf
fidivl
sbb
sbb
and
push
or
and
cwtl
icebp
adc
or
aad
xchg
jecxz
xor
popa
pop
test
movsl
fwait
jnp
shll
mov
rcll
movq
std
out
out
jb
xchg
leave
pushf
sub
shrl
or
pop
push
testb
inc
sub
and
mov
and
daa
push
ljmp
stos
arpl
jecxz
and
inc
enter
cmp
mov
testl
cld
push
mov
test
dec
or
aad
rcrl
sub
scas
adc
pop
pusha
xor
pop
sbb
adc
sti
pusha
jge
movsb
dec
out
cmp
push
and
sub
faddl
icebp
xchg
ret
adc
adc
stc
inc
out
jg
lret
mov
or
xor
mov
aad
outsb
mov
inc
jo
sub
stc
shrb
fs
inc
dec
imul
mov
cltd
test
jb
jg
mov
int3
mov
jo
push
fadds
test
push
sbb
cmpsl
dec
mov
idivl
cmpsl
sbb
jo
pop
clc
andl
jb
dec
mov
and
lcall
es
push
mov
stc
xchg
imul
xchg
mov
dec
pop
xor
cmp
in
adc
ret
inc
mov
add
insb
mov
cmc
das
call
pop
mov
jae
inc
mov
push
test
int
inc
fsubl
outsb
xchg
inc
lods
or
sbb
sub
lea
stc
push
mov
add
jae
ss
mov
push
scas
sbb
popf
aam
hlt
enter
sahf
lcall
and
sbb
jle
mov
mov
pushf
fcmovne
sbb
scas
push
call
add
xchg
jb
outsl
jge
out
and
bound
mov
out
sub
mov
xorl
push
jnp
fldl
jns
jmp
jmp
or
dec
and
mov
add
movsl
dec
cmp
loop
popa
stos
ret
sbb
das
jo
xchg
xchg
inc
xchg
fs
ret
xchg
into
cli
jmp
pop
cmp
pop
sti
movsb
test
sbbb
aas
outsb
popa
dec
cltd
jbe
out
jnp
daa
xchg
xchg
mov
fucomi
jae
aam
gs
inc
xor
mov
into
imul
sbb
out
jle
in
int
in
or
lods
into
pop
imulb
push
fildll
push
xchg
or
xchg
inc
ret
sub
sub
outsb
movsl
xchg
or
popf
xchg
frstor
cmc
enter
inc
sub
and
scas
cmp
mov
int
mov
xor
inc
fstl
test
xor
inc
mov
punpckhdq
pop
adc
jle
jno
inc
es
adc
cltd
sub
std
iret
stos
lret
mov
scas
sahf
add
lret
pusha
fildl
add
sarl
mov
adcb
clc
pop
arpl
mov
rcrb
adc
xor
inc
aas
stos
xchg
jecxz
fists
mov
pop
push
sti
pushf
out
stos
int
nop
xchg
adc
imul
dec
movsb
popf
scas
cs
adc
sbbl
sbb
fnstenv
xchg
subl
pop
sahf
aam
dec
jl
lret
cmp
dec
bound
pop
push
mov
sbb
std
outsb
cmp
xlat
fimull
pop
jbe
rolb
ret
pop
sti
inc
inc
lret
push
push
aam
iret
add
or
sbb
shlb
aaa
int3
es
mov
xchg
push
mov
loopne
out
test
aam
inc
mov
jnp
fiaddl
std
cmp
sub
xor
and
lods
cltd
cmp
out
jp
loope
aaa
lods
daa
and
imul
or
mov
jnp
in
mov
lods
cld
xor
test
dec
ret
je
mov
pop
ss
add
sahf
mov
inc
push
jge
and
ret
aam
mov
fucomip
cs
push
xchg
mov
xor
inc
dec
cwtl
bound
cmpsb
xorl
mov
mov
dec
out
fisubrl
lods
xlat
add
add
out
jmp
add
sarl
mov
js
bound
lcall
inc
mov
fildll
or
pushf
test
xchg
js
mov
cmp
inc
xchg
das
call
pusha
xor
dec
jb
dec
adc
in
fwait
jo
inc
inc
or
into
ljmp
xor
and
pop
daa
ret
jg
test
cmc
or
inc
and
pop
jg
icebp
in
dec
mov
fwait
ljmp
test
mov
inc
xor
and
adc
xor
icebp
dec
inc
dec
jl
xchg
rol
mov
mov
or
push
dec
out
xor
adc
push
mov
shlb
call
push
shrb
subb
cmp
xchg
dec
bound
mov
sbb
ds
shrl
das
push
sbb
in
iret
outsl
inc
das
pop
je
into
sub
mov
mov
cmpsl
mov
test
pop
and
lods
movsl
mov
xchg
cld
cmpsl
fildll
int3
repz
stos
mov
push
cmp
xor
inc
stos
imul
jle
fcmovb
fnstenv
in
cld
fstpt
ljmp
mov
cmp
mov
movsb
jne
sbb
fwait
mov
dec
arpl
int
adc
mov
xchg
mov
mov
xchg
sbbl
lock
mov
xorl
das
shr
jbe
jl
movsb
inc
xor
mov
psllq
and
xor
pop
mov
aam
in
fimuls
js
jmp
lret
ds
js
decb
aaa
cli
pop
inc
stos
jp
stos
cmp
mov
adc
inc
adc
jbe
inc
fldl
cli
stos
mov
mov
addr16
shll
sbb
inc
mov
ja
pushf
scas
jl
jo
cltd
mov
pop
inc
in
dec
xor
sub
sub
enter
xorb
mov
stos
or
in
in
mov
fwait
xor
outsb
sub
sub
scas
sbb
xor
and
enter
or
pop
loop
ret
xchg
cli
stc
adc
or
cmp
notl
add
pop
arpl
fwait
jl
xchg
aaa
popa
not
aaa
sbb
ds
ss
mull
test
or
inc
xor
inc
jae
push
push
jne
xchg
sbb
push
mov
cs
ljmp
push
ja
mov
int3
and
or
test
mov
in
sbb
mov
push
or
push
hlt
mov
mov
or
in
int3
sub
and
aas
outsb
and
aas
cmp
cs
and
mov
mov
push
stos
dec
mov
dec
ljmp
sbb
mov
fimull
lds
fldl
push
jg
orb
xor
shrl
push
mov
mov
mov
mov
inc
lahf
imul
pop
repz
outsl
popa
movsb
or
scas
xchg
sar
jno
or
es
ss
cmp
stos
pop
jno
out
int
mov
xor
push
stc
dec
stos
cmpl
cli
jmp
add
aas
ljmp
pop
xchg
inc
iret
cmp
or
mov
fcmovnbe
rcr
orl
push
and
jge
ja
jp
cmc
xchg
mov
sbb
cmpsl
addr16
jg
stc
ljmp
cmp
inc
add
push
inc
test
add
cmp
mov
test
cmp
fistpll
add
lods
mov
xor
jbe
test
loop
dec
rorl
mov
aaa
add
dec
mov
dec
mov
mov
mov
inc
shrl
mov
repz
xor
cld
aad
leave
ds
out
and
addr16
pusha
ror
xlat
cmp
cmp
mov
xchg
sub
out
jmp
data16
jle
push
or
mov
aas
jo
push
out
sti
sbb
mov
jecxz
sub
or
js
fidivl
xor
stos
sub
fcompl
jmp
mov
xchg
adcb
cmpsb
mov
inc
das
push
inc
xor
sbb
outsl
xchg
jp
mov
jae
mov
and
dec
fxch
loope
lcall
jns
enter
sbb
dec
push
jo
adc
mov
shl
jmp
in
rorb
jg
pop
adc
int3
push
cli
sub
outsb
icebp
out
rcrl
push
clc
sbb
into
pop
jno
lret
inc
mov
inc
into
sub
fs
mov
out
cmpsb
test
dec
fnstcw
or
jmp
popf
adcb
push
mov
and
mulb
adc
xor
or
lods
mov
pop
or
jae
jmp
sbb
jno
sti
neg
adc
cwtl
xlat
mov
scas
fwait
repz
loopne
xchg
dec
and
mov
jmp
jb
fldenv
mov
push
push
pop
lcall
and
mov
add
dec
add
addw
je
test
push
out
aam
xchg
mov
into
mov
mov
out
jb
sbb
xor
push
outsl
imulb
std
imul
fsubl
iret
pop
ja
movsl
jmp
mov
jle
outsl
mov
lahf
cmp
enter
fstpt
out
out
push
and
adc
push
test
inc
mov
push
mov
jae
jbe
loope
adc
xlat
arpl
jp
jg
xchg
mov
mov
andl
mov
push
jmp
cmp
int
std
push
jmp
sub
push
int
scas
dec
and
push
xchg
mov
mov
push
xor
xchg
xchg
jl
sub
ss
pop
data16
lock
les
pushf
xlat
push
ljmp
fistps
adc
sbb
movsl
jl
cmp
jb
pop
cld
sahf
testl
movsb
movsl
aaa
js
repz
gs
pop
or
xchg
or
add
jae
sub
xchg
dec
cli
loop
add
push
testl
dec
mov
xorb
cli
jl
mov
movsl
dec
and
push
rcrb
mov
push
fistl
adc
jecxz
das
dec
add
call
and
insl
in
imul
testb
add
mov
dec
clc
mov
mov
inc
pop
cmp
inc
daa
sahf
das
xchg
call
cmc
lahf
shrl
nop
ljmp
xchg
es
lcall
fwait
icebp
inc
leave
sub
pop
psllw
pop
pushf
bound
xor
pop
test
jle
scas
inc
sub
shlb
mov
push
in
jmp
pop
mov
aad
adc
or
inc
inc
push
jecxz
ja
sbbb
shll
insl
ljmp
add
cmpsl
push
xor
xchg
lock
xchg
adcl
les
ss
inc
inc
test
pop
sbb
sub
dec
or
push
clc
hlt
bnd
dec
push
pop
cmp
adc
lret
stos
push
push
fidivl
push
pushf
xchg
push
xchg
in
div
fdivr
inc
jno
into
aaa
pop
pop
negl
xchg
inc
addl
sub
mov
inc
lods
into
add
push
or
adc
dec
and
rorb
push
sub
pop
lret
and
or
push
xchg
clc
or
fstpt
mov
adc
stos
mov
cmp
aam
push
and
mov
les
xor
cmpsl
push
aas
pop
ja
cli
nop
push
pop
mov
xor
mov
dec
lods
popf
or
and
stos
dec
push
and
inc
lock
loope
into
imul
mov
jge
sbb
jecxz
call
mov
cltd
sbb
dec
add
pop
dec
add
xchg
mov
add
or
cmp
pop
iret
xor
ljmp
ret
loope
out
mov
jbe
mov
adc
adc
and
push
push
hlt
sub
adc
leave
pop
sub
iret
sub
and
cvtps2pd
pop
pop
sbb
or
xchg
shlb
mov
adc
xchg
add
neg
jmp
sub
fildl
pop
divb
inc
pop
daa
push
hlt
das
shrb
or
in
inc
fnstcw
add
dec
jle
sub
aaa
jmp
cmp
inc
cltd
add
lods
mov
dec
xchg
jecxz
insl
dec
nop
sbb
fiaddl
xchg
cmc
mov
xor
push
add
and
adc
dec
sbb
aaa
dec
in
loop
rolb
jecxz
mulb
test
int
sbb
mov
int3
cmp
ret
mov
in
loopne
xchg
adc
js
pop
pop
out
sub
leave
jmp
xorl
xchg
sbb
xor
add
sbb
push
inc
sub
and
divl
test
stos
xor
flds
xor
jl
and
shl
loop
fidivrs
mov
and
cmp
cli
nop
out
ds
sub
ljmp
or
repnz
add
push
insb
sub
popa
cmpsb
sbbb
jb
test
in
and
outsl
dec
test
add
mov
add
adc
test
pop
fs
sub
cwtl
je
in
hlt
pop
xlat
jo
push
bound
ficomps
inc
in
je
in
fisubrs
mov
xchg
lods
scas
daa
jo
sti
mov
xchg
add
insb
shrl
cmp
aad
push
repnz
mov
lods
xor
pop
pop
jae
xchg
and
outsb
repz
mov
push
mov
add
sbb
pusha
push
cli
call
mov
dec
adc
pop
movsl
xor
in
aaa
ret
int3
adc
out
adc
bound
pop
push
scas
int3
repz
in
mov
sahf
cmpsb
dec
ficoml
cli
nop
aas
jmp
call
das
mov
test
lret
xchg
mov
push
daa
pop
cmp
inc
jno
ljmp
push
std
cli
add
fcomi
insb
test
lds
sbb
mov
cmp
sbb
lock
je
mov
and
sub
sub
bound
and
mov
xor
adc
hlt
xchg
dec
cmp
adc
pop
loopne
mov
shll
jecxz
mov
mov
loop
adc
inc
ret
fbstp
cwtl
int3
add
mov
popf
push
cmp
shrb
xchg
inc
nop
cmpsl
add
push
dec
or
inc
push
ja
mov
imul
stc
ss
sti
sbb
out
int
lcall
cmp
pop
pop
xchg
cmpsb
pop
and
scas
jl
push
ljmp
inc
push
mov
lahf
outsb
pop
outsl
lahf
incl
call
mov
mov
adc
or
xor
lcall
roll
adc
rcrb
push
mov
testl
pusha
pop
ljmp
add
pop
out
ljmp
ds
sbb
add
loop
leave
pop
frstor
dec
je
sub
lret
mov
xorb
sub
adc
mov
outsl
je
ret
dec
add
pop
cmpsl
and
fstpl
sub
arpl
or
shll
or
inc
push
and
jp
mov
repz
repz
or
test
or
iret
xchg
mov
outsl
jne
push
clc
jl
pop
lods
das
shr
push
mov
dec
add
xchg
add
es
pop
dec
ds
mov
popa
std
mov
push
sbb
rcr
push
aam
out
mov
inc
mov
pop
push
testl
cmpl
sbb
inc
lods
jnp
mov
lret
out
je
into
push
icebp
inc
and
repnz
mov
arpl
push
cmp
xorb
out
xor
and
and
pushf
mov
pop
shlb
ja
cmp
mov
inc
mov
sbb
sub
cmpsl
xor
jl
lods
cltd
jle
add
test
xor
jge
jle
mov
add
adc
jno
fbstp
in
enter
arpl
sbb
mov
cmc
mov
mov
xor
fwait
xchg
pop
lods
adc
push
mov
xchg
add
xchg
cmp
push
jg
ficoml
push
addr16
adc
shll
xor
ja
ret
insl
loopne
mov
lcall
xchg
mov
arpl
inc
dec
inc
int3
and
adc
push
mov
push
xlat
cmc
push
ret
mov
or
insl
pop
imul
pop
jecxz
lods
xor
pusha
pop
enter
inc
rcll
jb
out
into
jle
xlat
and
stos
fiadds
roll
sbb
fstl
std
adc
or
pusha
pusha
lds
cmovle
cmpsb
pusha
jo
aam
subb
pop
sbb
fwait
or
xor
test
mov
push
iret
sub
mov
test
or
mov
sub
adcb
rorl
mov
pop
imul
aaa
fs
aam
inc
mov
push
loop
dec
pusha
aad
test
mov
cmp
nop
or
inc
mov
js
pushf
push
sub
int3
adcb
sbb
loopne
cmp
pop
call
xlat
push
push
test
adc
xchg
fsubrl
and
jo
dec
outsb
xchg
jmpw
inc
adc
or
cli
sbb
add
and
aam
clc
iret
mov
stos
jp
mov
xchg
mov
leave
iret
cwtl
movsb
jbe
enter
cmp
jne
inc
repnz
jecxz
xchg
xchg
loope
xlat
push
add
xchg
enter
or
ss
and
mov
cmpsl
in
push
sbbb
sbb
into
out
dec
shll
push
shll
add
lret
or
fisttpl
lea
and
cwtl
mov
loop
fdivs
ja
xlat
xchg
icebp
repnz
dec
frstor
jle
xchg
pop
dec
ja
xchg
mov
lods
pusha
add
add
in
testl
sahf
mov
add
mov
cmp
and
arpl
and
jo
mov
rolb
dec
shrb
roll
mov
leave
pop
sub
out
mov
insl
mov
sbb
push
nop
jnp
add
inc
cli
cld
iret
icebp
add
inc
inc
cmp
clc
stc
sbb
scas
stos
jmp
mov
sarl
out
lcall
sbb
aaa
ret
in
in
mov
fcmovnb
pop
outsl
roll
addb
in
push
push
fstp
cmp
add
fcomps
mov
cmc
sbb
xchg
xchg
andb
fucomp
cmp
push
sub
mov
fwait
sub
mov
arpl
sbb
push
pop
dec
outsb
push
arpl
testb
cmp
inc
fs
jg
jo
test
mov
sub
imull
sub
leave
les
int3
sarl
ret
mov
mull
push
mov
inc
fsubr
push
lret
mov
jmp
mov
jg
inc
adc
pusha
mov
sub
outsl
test
lods
and
loope
insb
aam
test
sub
imul
pop
sub
dec
iret
adc
inc
sbb
dec
test
fistpl
add
test
fldenv
mov
add
adcb
or
lahf
mov
cmp
jge
sbbl
sahf
xchg
xlat
sbb
dec
push
arpl
out
push
adc
add
pop
pop
or
stc
test
int3
mov
les
ja
xor
aas
mov
mov
inc
xor
mul
inc
inc
push
lret
daa
or
ret
push
mov
add
jg
jge
or
sub
jo
pop
jne
rcrl
sbb
loope
add
dec
in
insb
or
pop
es
shll
sub
std
jge
mov
shl
sbb
mov
adc
data16
popa
pop
fstps
cld
fsubp
lea
push
pop
or
dec
movsb
jo
insl
sahf
push
adc
jbe
push
dec
fstl
out
push
push
and
push
fildl
out
inc
xchg
insl
cltd
mov
xchg
fimuls
lock
inc
fisubs
or
loope
sarl
adc
mov
and
leave
cld
in
iret
fiadds
jl
sbb
sub
xchg
pop
pop
sub
or
aaa
mov
mov
push
mov
unpckhps
sti
fnstenv
mov
or
xchg
das
cld
xor
push
shrl
sub
or
mov
mov
fdivp
insb
pop
dec
xorl
mov
iret
mov
popf
mov
mov
sub
adcl
mov
mov
pushf
jae
rolb
jne
shrb
xor
jl
lahf
popf
lea
pop
adc
test
das
shlb
cld
adc
movsl
pusha
outsl
arpl
loope
mov
test
lds
sub
cmp
mul
xor
daa
cmpsl
mov
mov
mov
in
rclb
rcr
scas
movsl
fnsave
lret
daa
sub
push
xchg
mov
cmp
test
icebp
sbb
popf
push
xlat
push
or
test
ds
test
test
dec
mov
xchg
mov
xchg
or
test
xchg
push
dec
inc
testl
pop
ljmp
repz
jmp
adc
inc
and
sti
pop
scas
pop
mov
arpl
xchg
das
push
mov
ljmp
mov
inc
flds
push
test
das
call
xor
pop
xchg
cwtl
jmp
jmp
push
pop
jb
sbb
add
push
mov
xor
leave
xor
mov
push
pop
xchg
push
ret
inc
add
cmp
cmp
ret
sbb
lock
cmp
sbb
cltd
jp
icebp
pop
push
add
pushf
imul
xchg
mov
scas
cmpsl
fdivrl
pop
jo
data16
nop
pop
push
pop
fldt
cli
push
mov
and
enter
sub
imul
mov
fisubrs
nop
gs
test
ss
cmp
sbbb
cmp
cltd
popa
je
stos
stos
pop
insb
sbb
cli
and
push
xchg
insb
in
test
mov
cwtl
cmp
pop
mov
fisttpl
xchg
repnz
sub
and
ficoml
aas
sbb
mov
pop
cmp
aas
push
adc
inc
cld
jge
jmp
cmc
loope
pop
fisubrs
push
and
cmp
add
sub
setne
iret
mov
test
addr16
xchg
or
hlt
popf
dec
mov
xchg
mov
and
jle
repz
xchg
jne
ljmp
out
xor
or
movsl
mov
cmpsb
pop
adc
cmp
jb
or
loop
mov
icebp
addr16
lods
lret
stos
cmpb
inc
jmp
leave
maskmovq
cs
or
fistps
xorl
push
and
mov
fs
xchg
xorb
inc
test
pushf
popl
leave
sub
movd
dec
lea
ret
repnz
jg
add
jecxz
lds
xchg
stos
lret
xor
or
add
test
lcall
jb
jmp
pop
repz
cmc
lods
inc
pop
dec
mov
fdiv
adc
fs
in
mov
insb
scas
sub
and
insl
lock
jge
clc
fists
daa
and
flds
das
mov
jl
cld
fs
popa
icebp
xchg
cld
mov
jo
loope
or
aad
cmpsb
loope
bound
enter
and
cmp
rclb
jp
cmp
jecxz
lds
mov
pop
stc
xchg
pop
mov
je
popf
mov
and
inc
pushf
enter
out
mov
dec
sarb
or
dec
and
addb
pop
mov
movsb
and
dec
mov
mov
outsl
in
stos
inc
je
negl
enter
out
xor
std
and
dec
jnp
mov
dec
pop
push
xchg
ja
or
xor
sbb
xchg
mov
mov
sti
bswap
rorl
xor
mov
mov
lret
add
inc
inc
mov
gs
outsb
sar
iret
int
imul
in
pop
ds
mov
xchg
inc
orl
add
cmpb
out
repnz
xchg
xchg
mov
jb
jno
out
out
or
fbld
and
sbb
sub
cmpsb
xchg
ret
adc
js
inc
mov
dec
lahf
mov
icebp
mov
sbb
add
mov
idivb
adc
sub
loop
rcl
and
leave
sahf
push
cmp
loope
mov
add
or
pop
fwait
hlt
jge
outsl
sub
outsb
push
cmp
in
sbb
mov
lds
cmp
aam
stc
in
add
hlt
fimull
sbb
mov
push
mov
imul
mov
and
pop
std
in
xchg
out
mov
repnz
fs
push
popf
adc
xchg
imul
mov
cmc
decb
in
insb
sub
xchg
pop
imul
push
incl
mov
mov
push
in
sub
adc
data16
cmp
mov
and
out
xchg
daa
fisttpl
mov
fldt
sub
xor
adc
out
mov
inc
clc
sub
dec
and
dec
jg
lds
inc
adc
mov
inc
xor
xchg
lret
cmc
aas
jl
mov
sbb
lds
inc
imul
push
adc
xchg
loop
dec
adcl
pusha
jp
and
cltd
mov
mov
insl
test
sahf
xchg
or
loop
mov
out
dec
out
and
decb
jle
hlt
scas
cmp
mov
xchg
mov
int3
sub
popa
xor
iret
dec
mov
rorl
repz
aam
xchg
adc
cmp
lcall
stos
add
sbb
mov
adc
push
cmpsl
pop
loope
std
les
mov
stos
jmp
push
push
xlat
das
mov
cmp
dec
aaa
add
jmp
gs
cmp
lods
mov
pusha
fsubl
jne
cmp
cmp
dec
lcall
in
and
repnz
xchg
push
bound
movsb
negb
lret
xor
repnz
xchg
pop
movsb
xchg
mov
jle
roll
jge
pop
cmp
push
fcom
movsl
ss
popf
pop
mov
in
jge
pop
fsubrs
shl
inc
shlb
xchg
xlat
in
aaa
mov
dec
jmp
pop
test
stos
xor
pop
or
in
or
inc
add
inc
push
or
sti
adc
lods
push
orb
rcll
jne
shr
xchg
hlt
out
rcrb
mov
mov
add
cltd
pop
inc
push
inc
inc
loop
sub
push
jp
xor
scas
cmc
mov
and
cld
pop
pop
sub
push
shlb
push
daa
xlat
pushf
call
and
inc
sbb
jg
jmp
aad
jle
push
sbb
pushf
fs
adc
sub
aad
pop
out
xor
push
push
das
test
icebp
out
sub
stc
add
sub
mov
mov
loop
inc
ds
iret
mov
data16
fnsave
cs
dec
dec
popf
dec
aaa
lds
xchg
push
jbe
js
mov
push
sub
mov
iret
pop
dec
ret
cli
movsl
or
cmpsl
movsl
jmp
test
and
xchg
lds
pop
imul
stc
add
sub
stos
pop
add
push
xchg
add
jnp
cltd
mov
daa
test
lea
mov
pushf
int3
gs
mov
nop
into
add
xorb
cmp
xchg
xor
lds
jne
in
stc
push
in
aas
pop
int
xor
je
movb
ds
add
loop
es
jl
movsl
sub
mov
insb
cmp
lds
or
mov
daa
jg
pop
pop
into
out
idivl
xchg
jne
lea
sarb
ret
jno
rcll
sbb
sbb
push
sbb
push
dec
jnp
sub
frstor
repnz
pop
add
ret
das
or
mov
mov
cmp
fnsave
insl
inc
sub
or
loop
icebp
into
and
xchg
ret
cvtdq2ps
inc
mov
aam
movsl
insb
jg
rclb
leave
fsubrl
adc
adc
cld
rcrb
mov
lods
push
ja
jnp
or
dec
dec
xor
test
jo
xor
adc
jns
stos
cmpb
dec
push
pop
aas
jecxz
mov
inc
pop
xchg
in
test
lods
adc
arpl
mov
mov
mov
cmpsl
or
cmpsl
icebp
cli
pop
xor
xor
cmpb
mov
jg
sub
push
shlb
push
daa
xchg
lahf
cmpsl
push
sub
add
xchg
incb
outsb
pop
data16
push
rorl
cmp
dec
lods
adc
cmpl
and
fiaddl
scas
adc
push
stos
loopne
mov
xchg
jns
aaa
andb
sub
mov
adc
mov
add
lock
or
rcrb
inc
mov
divb
inc
in
cmp
sbb
push
mov
jmp
out
aaa
popa
das
xchg
or
shlb
add
or
daa
cmp
pop
cmp
push
mov
popf
lret
push
pop
and
stc
stc
pop
sahf
scas
xchg
lahf
mov
xchg
das
mov
pop
jo
cli
rcr
sub
dec
jp
movsb
adc
shrl
or
push
jb
jno
cmc
std
push
in
arpl
std
int3
fistl
pusha
loope
jge
inc
lret
and
inc
stc
in
hlt
ret
push
dec
mov
lcall
cmp
dec
jl
mov
movb
adc
scas
sti
inc
ja
inc
pushf
mov
je
cmp
sbb
addr16
cltd
cmp
imul
ret
loopne
filds
into
enter
lods
xchg
aaa
repnz
push
lcall
pop
and
ret
mov
mov
je
inc
imul
mov
dec
inc
fidivrs
fwait
ljmp
jbe
ret
mov
jne
inc
xor
mov
xchg
xchg
mov
cmpsb
cmp
cmp
js
and
ss
movsl
mov
sbbl
pop
in
movsb
shlb
popf
repnz
add
mov
xchg
add
mov
test
mov
add
les
and
jecxz
bound
pop
inc
inc
xchg
and
fldenv
push
adcb
pop
or
or
cltd
es
or
iret
mov
or
addl
adc
mov
mov
mov
push
mov
in
addb
in
xchg
mov
jp
mov
insb
fsubl
dec
jl
pop
sti
mov
mov
cmp
sarl
push
push
data16
movsb
xchg
mov
sbb
mov
out
cmc
push
scas
add
lahf
mov
arpl
push
inc
adc
arpl
lret
out
sbb
pop
lds
addr16
push
std
sbb
inc
sub
adc
add
outsl
movsl
stos
xchg
setbe
sub
ret
mov
adc
push
divb
add
adc
pop
cltd
scas
in
or
jp
mov
decb
aad
adc
and
pop
inc
cmp
mov
pop
jns
sub
loope
lods
or
jg
and
outsl
xchg
mov
xlat
out
cltd
icebp
lock
mov
add
jae
push
loope
int
cpuid
out
xor
mov
jl
adc
xlat
ror
addb
pop
dec
pop
push
es
sub
push
call
stos
xor
push
jno
adc
or
stos
mov
dec
xor
jg
push
mov
out
mov
xchg
jbe
outsl
pop
jnp
jl
sub
mov
inc
fsts
call
repnz
lods
lods
xchg
jge
es
insl
fs
inc
leave
js
cmp
mov
or
push
and
sbb
add
xchg
jnp
and
inc
sub
dec
scas
adc
inc
outsb
pop
ret
xchg
adc
int3
jge
lret
inc
xor
mov
xchg
fcomps
inc
jle
cltd
push
xchg
lods
dec
movsl
insl
jmp
jle
fwait
std
pusha
pop
jno
call
jl
jmp
clc
les
mov
mov
cmc
movsb
stc
fidivrs
xchg
push
fs
and
lahf
jno
fidivl
cltd
cmp
scas
daa
push
sbb
mov
push
cld
push
cwtl
mov
mov
push
xchg
dec
mov
jl
lret
mov
adc
push
movsb
sbb
adc
fwait
xchg
mov
xchg
bound
mov
mov
jns
stc
inc
xorb
jnp
cmp
pop
in
jbe
jae
jbe
aam
mov
inc
adc
movsl
std
mov
aaa
adc
xlat
mov
cwtl
stos
jnp
daa
insl
sub
or
movsl
cmp
pop
jmp
fwait
pop
lret
xor
std
xor
repnz
clc
lcall
movsb
cld
xchg
ja
jbe
rorb
xchg
in
orb
ljmp
popf
dec
hlt
jno
or
mov
mov
pop
leave
xchg
sbb
rcl
cmp
loop
push
xchg
jle
out
adc
dec
je
mov
inc
out
inc
jb
mov
push
cmp
xor
shlb
xchg
xor
addr16
rol
or
outsl
ss
icebp
loopne
mov
mov
sbb
inc
push
push
pop
pop
pop
test
aam
mov
leave
mov
jo
lods
shlb
inc
stos
and
lock
test
adc
cmp
mov
fwait
inc
hlt
pushf
inc
jnp,pn
xor
nop
sahf
inc
xor
push
insb
sub
push
and
lahf
jg
xor
mov
and
xor
stos
test
mov
pushf
or
jmp
rclb
pop
imul
lock
add
ret
call
cli
push
test
hlt
mov
mov
mov
repz
cmpsl
jecxz
inc
sbb
test
fdivr
cld
xor
jmp
das
lods
dec
pushf
cmp
lcall
sahf
jbe
in
pop
xor
inc
or
lahf
out
cmp
sub
and
cmp
sub
pop
cwtl
sub
iret
jge
clc
stos
adc
xchg
lock
mov
pushf
jmp
mov
inc
daa
mov
xchg
cld
xor
cs
adc
xchg
je
xchg
or
popa
inc
xchg
jae,pt
xchg
inc
dec
jle
cwtl
push
mov
inc
mov
or
ja
rcrb
cs
fs
push
mov
xchg
mov
mov
xor
outsl
adc
aas
xchg
negl
or
hlt
sbb
fidivl
dec
xchg
fdivrs
cli
inc
sbbl
out
xor
negb
jb
stc
mov
and
push
imul
lret
xchg
out
hlt
push
pop
pop
sbb
push
xchg
push
pop
sub
jb
aaa
int
pop
subb
mov
cmpsl
pop
push
aaa
mul
pop
jno
fwait
into
fdivrs
dec
or
jb
je
cltd
cmovno
xor
push
pop
mov
bound
sub
arpl
sbb
lret
imul
pop
das
ds
cmp
bnd
and
inc
push
lds
es
jo
dec
mov
xor
mov
xor
sbb
pop
push
adc
pop
mov
push
icebp
push
dec
cli
push
xor
imul
mov
and
fiadds
or
cli
add
jnp
and
lcall
les
mov
mov
add
out
lea
hlt
bound
xor
and
adc
nop
push
or
adc
xor
and
xor
sbb
and
jecxz
push
add
std
dec
xor
mov
dec
sbb
filds
lret
outsb
cmp
sub
fdivrp
mov
sub
jbe
js
aas
pop
mov
push
sbb
stos
add
test
push
fists
imul
and
fwait
pusha
in
xor
jmp
inc
sti
inc
test
test
inc
mov
mov
cmp
xchg
test
sub
sbb
and
sub
pop
push
jecxz
push
notb
push
sbb
nop
fsubrp
xchg
xlat
inc
cmp
jbe
add
mov
andb
sti
loop
sbb
xchg
in
sbb
and
cld
hlt
out
sbb
cmp
xor
push
dec
popf
inc
orb
test
xor
fnstsw
lock
cmp
push
pop
das
sbb
cwtl
mov
xchg
adc
loope
jns
int3
pop
inc
adc
pop
enter
in
cmp
loopne
pushl
testl
jne
ds
pop
xor
sub
pop
test
popf
pop
stos
fbld
xor
mov
pcmpeqd
adc
adc
cmp
push
inc
xchg
push
movsl
loope
pop
stos
add
cmp
mov
pop
adc
inc
inc
xor
inc
mov
adc
int3
cbtw
orb
mov
mov
pop
xor
cmp
mov
test
xorb
xchg
lods
shll
pop
and
jmp
flds
inc
test
movb
jle
orb
das
ss
es
jb
cmp
fidivl
pop
lods
push
fwait
dec
dec
xchg
fs
insl
enter
xchg
mov
and
and
pushf
ss
int
inc
imul
add
js
pop
xchg
push
cmpb
iret
sbb
into
or
call
pop
popf
cwtl
adc
push
push
fidivrl
pop
jne
push
xor
addr16
jbe
inc
aaa
or
repnz
incl
idivl
and
test
sbb
mov
sub
lahf
jg
dec
repz
cmp
je
mov
gs
cmp
daa
xchg
sbb
sar
fisubl
push
stos
dec
inc
sub
inc
insb
mov
dec
fdivl
dec
mov
aas
incb
insl
rcrb
subl
add
mov
or
stos
adc
adc
pop
out
lret
js
adcl
mov
and
push
cmp
push
lods
inc
mov
or
inc
mov
gs
jge
xor
sub
bound
lds
mov
sub
add
xlat
sub
test
lods
lds
insl
cltd
dec
scas
pop
in
pop
adc
push
dec
aaa
pop
stc
adc
das
jno
cmp
test
and
icebp
insb
pop
xchg
mov
push
ficoms
fwait
xchg
popf
or
in
push
cltd
daa
std
mov
cltd
cmp
lret
and
sbb
inc
xchg
and
sbb
lea
in
mov
fsts
sbbl
out
popa
jo
cmp
shrl
add
push
jne
popa
adc
push
push
jno
test
in
sti
push
out
hlt
ds
testl
les
inc
add
push
aaa
out
aas
or
pop
jnp
fst
jg
xchg
mov
ja
add
stos
ss
sub
cmp
push
and
push
aam
mov
mov
sbb
inc
cmp
shrb
or
insl
lods
push
mov
pop
add
push
mov
sub
cmp
test
dec
enter
sbb
xchg
sarl
ljmp
push
mov
inc
and
push
xor
imull
mov
fs
lret
pop
add
inc
and
fcomi
mov
add
rcll
xor
jne
enter
sub
faddl
pop
out
mov
dec
sbb
push
into
cltd
scas
mov
jo
dec
mov
inc
jmp
fs
pop
adc
outsl
lods
dec
pushf
pushf
sbb
mov
lds
movl
sub
sbb
cmc
mov
mov
push
cld
xchg
rcrb
xchg
mov
mov
sti
dec
and
pop
sbb
xchg
xchg
or
pop
xor
sbb
mov
sti
test
imul
jge
shlb
fs
outsb
das
pop
mov
push
sbb
xor
add
sub
xor
jae
popf
cli
outsb
test
inc
loopne
sub
cmp
xchg
icebp
jo
pop
out
dec
lods
mov
aaa
mov
mov
sub
pop
addb
mov
out
enter
into
js
mov
nop
and
xchg
cld
push
scas
cltd
push
cmc
fiadds
sub
pop
lcall
mov
nop
and
mov
jp
jb
ss
hlt
aam
icebp
mov
xor
ret
daa
data16
jl
push
jl
xor
cmpsb
cmp
outsb
cmp
clc
mov
and
xchg
pusha
stc
push
out
mov
pop
dec
jecxz
add
mov
cmp
sbb
mov
jo
imul
into
fucomi
pop
es
fmuls
gs
sub
pop
mov
cs
enter
pop
sub
notb
or
std
enter
mov
adc
fisubl
stos
outsl
mov
iret
cmc
sarl
popa
push
jge
aaa
and
testl
fs
add
and
sub
adc
adc
pusha
cmpsb
popa
subb
ds
push
sarl
xchg
cltd
mov
f2xm1
jae
inc
sarl
movsb
jnp
or
rclb
push
inc
sub
xchg
inc
ja
and
adc
mov
icebp
dec
jecxz
xchg
push
sbb
decl
js
mov
or
aad
jmp
in
mov
fistpll
push
mov
sbb
les
cmp
sbb
xor
inc
call
mov
xor
ficomps
stc
jp
aas
testb
jmp
xor
inc
xchg
ds
cli
cs
xchg
adc
inc
shr
insl
out
xor
insb
push
cltd
popfw
inc
jne
outsb
mov
pushf
cld
mov
push
fxch
dec
cmpsl
sbb
jl
imul
mov
clc
loopne
stc
in
mov
popa
xlat
sbb
xor
pusha
jno
stos
out
repz
es
xor
xchg
xor
xor
inc
pop
mov
xor
push
es
loope
out
out
adc
leave
add
dec
jle
cmp
ljmp
mov
movsl
int
loop
xchg
push
stos
or
movsl
push
iret
or
popa
daa
shrb
push
test
or
or
je
test
mov
stos
pop
aam
aaa
bound
ret
push
les
ss
mov
scas
mov
dec
fimull
xchg
add
js
ret
inc
cld
out
les
ja
xor
imul
push
jmp
scas
dec
neg
xchg
push
xor
jecxz
jg
fisubrs
sbb
stos
sbb
fdivrl
in
inc
sahf
cmc
cmp
shrb
or
leave
mov
popa
and
sub
test
cld
sub
mov
or
xor
lods
jmp
xor
adc
inc
cmp
xor
sbb
sub
mov
adc
pop
jno
mov
popf
sub
jecxz
dec
inc
das
sub
into
leave
pushf
lahf
lods
pop
mov
xor
idivb
push
loope
jns
xchg
rcrb
or
mov
xor
xchg
out
pushfw
sub
pusha
inc
pop
jmp
and
xor
clc
adc
clc
xor
mov
lret
sbb
or
lods
popf
mov
sti
cmp
gs
jg
jnp
push
call
mov
pop
jb
mov
push
jo
push
ds
sbb
addr16
dec
jp
hlt
stos
idiv
cwtl
maxps
sbb
jo
lods
jnp
call
cmp
sub
sbbb
rcll
dec
push
sti
jmp
sti
mov
fmuls
jnp
or
imul
cmp
les
in
lea
jne
jp
clc
call
cmpsb
and
gs
insb
inc
int
out
adc
negb
aaa
mov
nop
je
in
jl
adc
aam
lods
addr16
inc
icebp
push
hlt
hlt
repnz
nop
and
adc
or
or
rcrl
data16
out
das
das
cld
push
push
adc
adc
mov
fsub
xor
pushw
sti
data16
add
pop
or
out
xor
daa
adc
inc
and
repnz
and
call
test
mov
mov
lcall
std
dec
mov
pop
dec
mov
fadd
jmp
sbb
sub
jne
jns
mov
mov
int
loopne
xchg
subl
jl
clc
aam
in
out
jne
or
int3
xchg
add
rcr
adc
movsl
cmp
add
push
sti
mov
fnstsw
inc
pop
sbb
jbe
jno
out
sbb
mov
scas
mov
mov
jns
sbb
imul
push
and
mov
test
cmp
adc
adc
test
stc
or
mov
push
xchg
xlat
jb
xchg
mov
daa
xorl
dec
sarb
addl
jbe
out
and
sub
or
sub
lods
push
into
negb
cmp
inc
add
adc
mov
add
push
xchg
fucompp
inc
jmp
pusha
or
inc
in
dec
push
in
push
pop
xchg
int
inc
rdmsr
xchg
das
inc
mov
sahf
or
fwait
xchg
shll
pop
pop
cmpsb
cmp
orl
sar
pop
outsb
pop
lds
rcrl
push
outsl
mov
xchg
and
fsubl
sbb
push
pop
mov
leave
imul
fiadds
insb
mov
inc
jo
scas
incl
je
ret
adcl
fldl
mov
push
scas
int
leave
fldl
mov
push
fnstenv
cld
mov
mov
inc
cmp
dec
pop
cmpb
ds
fwait
cld
pop
mov
scas
xchg
sbb
mov
pop
mov
jbe
adc
fnstcw
call
gs
iret
pop
pushf
mov
inc
lret
lock
adc
adc
faddl
and
ljmp
pop
jp
jl
xor
cmp
dec
xor
mov
in
mov
mov
dec
sahf
or
push
xchg
ja
add
sub
loopne
mov
cwtl
aam
sbb
mov
or
xchg
nop
stc
iret
jecxz
or
sub
cld
std
mov
ss
imul
imul
shlb
pushl
int3
xchg
aaa
roll
aas
mov
xor
loope
je
push
adc
stc
lret
xor
jl
setae
aaa
sub
test
leave
mov
jo
daa
and
js
push
or
xchg
scas
and
adc
and
xor
adc
pop
es
lret
xor
push
add
add
test
pusha
push
inc
movsb
lds
fstl
or
jnp
movsb
out
sub
mov
mov
rcl
inc
out
shr
stc
dec
fldenv
push
jmp
pop
shl
loop
cmc
and
jae
jmp
mov
bound
mov
pop
jmp
xchg
xchg
scas
cld
mov
int
and
lret
stc
mov
andb
jmp
test
jge
pop
les
dec
cmp
movsb
loopne
shlb
cld
lds
jp
xchg
xchg
jecxz
rclb
pop
aas
aas
daa
sub
out
pop
das
lea
inc
dec
jnp
adc
ss
scas
das
mov
test
repz
jmp
fsubr
dec
xchg
call
in
xlat
mov
cmp
icebp
adc
xor
sub
push
mov
sub
int
dec
shrb
pop
sub
rcrb
stos
in
negb
adc
pushf
sbb
pop
pop
dec
aad
xor
rorl
inc
mov
mov
adc
add
ljmp
mov
push
test
mov
dec
xchg
add
leave
decb
mov
rcrl
jae
aad
xchg
push
add
ret
pop
cwtl
mov
outsb
rcr
xcrypt-ecb
cmpsl
mov
je
cld
mov
lret
adc
dec
pusha
inc
stos
jnp
jo
push
adc
mov
cmpsb
icebp
cld
bound
xor
mov
loope
jo
or
ds
mov
dec
test
inc
pop
dec
dec
cmp
mov
call
enter
dec
gs
call
add
adc
jne
jl
gs
pop
jle
and
rclb
cmpsl
push
xchg
lret
inc
rclb
xchg
addr16
inc
aad
je
pop
sbb
push
xor
pop
js
and
clc
repz
xchg
lds
int
add
ret
mov
xlat
xor
jp
cmp
pop
xorl
movsl
std
cltd
mov
mov
or
pop
orb
jecxz
stos
je
popf
push
mov
pop
psubsw
cltd
sahf
xchg
loop
mov
pop
mov
mov
in
cmp
ja,pn
fsubrp
cmp
fwait
mov
mov
mov
pop
das
out
test
mov
notb
jno
aas
fidivrl
add
xor
push
push
cmp
jns
jge
stos
or
popf
pop
jo
cmp
ret
loop
insl
aam
jno
or
cmp
dec
cmpl
enter
inc
lds
fs
movsl
imul
out
aas
adc
xchg
push
stc
xor
rorl
dec
or
leave
mov
aam
iret
je
hlt
fld
lea
das
xchg
jmp
je
sub
lcall
add
mov
int
push
icebp
push
aas
andb
xor
outsl
je
mov
pop
or
popa
pop
out
movsb
std
xorb
mov
inc
jae
inc
pushf
call
ds
jl
inc
out
pop
in
xorb
jl
mov
out
scas
mov
jae
xchg
rolb
xor
or
mov
sub
rclb
pusha
cmp
int
pop
push
push
mov
add
pusha
and
or
hlt
and
mov
push
call
or
test
xchg
inc
xor
xor
out
imul
mov
sub
fstl
dec
lret
inc
ficomps
jne
adcl
mov
stc
adc
or
xchg
subb
js
add
push
mov
xchg
pop
mov
mull
int
repnz
push
mov
and
jl
lea
add
addr16
pop
xor
push
shl
test
dec
pushl
mov
push
mov
pop
pop
xchg
scas
in
pop
mov
dec
fwait
cltd
jns
dec
rcr
aad
in
mov
imul
out
cmc
leave
cmp
jno
mov
inc
sbb
js
inc
inc
mov
sbb
sbb
mov
pop
data16
mov
push
iret
mov
iret
xorl
mov
aad
scas
mov
out
clc
push
mov
icebp
jb
sub
push
jno
adc
rclb
test
sar
jmp
xor
pushf
cmc
mov
mov
xlat
shlb
pusha
shrl
int
stos
or
popa
pop
xchg
sbb
aaa
mov
adc
jge
sub
sub
cld
rorb
pop
cli
jecxz,pn
jae
xchg
and
leave
inc
leave
cmp
xor
mov
add
add
push
push
pop
lret
lods
inc
xor
xor
xchg
leave
add
dec
sar
jne
xor
ror
outsb
mov
lret
in
sbb
mov
mov
loop
jnp
clc
adc
inc
clc
xchg
lcall
xor
cmpsb
sub
fdivs
loop
scas
pop
inc
pushl
inc
sarb
inc
nop
in
dec
jb
inc
pop
popf
fldt
fisubrl
pop
inc
pop
leave
cmp
loop
dec
jg
stc
cmp
mov
sbb
push
xchg
mov
lock
mov
dec
pop
lds
subl
mov
push
test
and
xchg
cs
fndisi(8087
sbb
adc
or
idivb
xor
daa
ljmp
jmp
push
popf
aad
out
movsl
lahf
inc
xchg
xor
sbb
push
xchg
sub
inc
pop
sbb
outsl
sbb
popf
xor
xchg
add
in
inc
or
sarb
out
sbb
mov
outsb
mov
ljmp
adc
jge
add
nop
sub
adcl
repz
dec
call
push
and
ja
cmpb
add
xlat
repnz
repz
jle
mov
dec
mov
inc
lods
mov
out
ds
fwait
and
or
sbb
push
int3
and
mov
adc
lcall
dec
dec
dec
movl
fs
sub
aaa
jp
xor
xchg
test
jmp
mov
inc
push
push
cs
or
or
popf
push
lods
mov
adc
movsb
lret
push
cmovbe
jecxz
push
stc
inc
or
aaa
mov
dec
jle
sub
lahf
or
stos
nop
adc
int3
mov
jae
mov
or
mov
add
sbb
stc
pusha
jecxz
mov
lahf
lcall
fcoms
xor
sahf
sub
add
nop
sub
cmovl
xor
jmp
shlb
lods
hlt
outsb
test
test
and
nop
or
dec
fidivrl
jbe
push
inc
add
data16
inc
pop
mov
mov
test
inc
popf
xchg
ja
adc
jnp
mov
mov
or
pop
adc
pop
shrl
push
sbb
sub
enter
mov
lods
pop
loope
add
dec
adc
imul
cmc
jmp
lret
mov
insb
mov
fs
js
dec
xchg
xchg
ret
cmp
lods
sahf
nop
mov
mov
or
mov
add
cmp
fldl
popf
jno
mov
mov
mulb
mov
mov
push
pop
rolb
not
loopne
imul
adc
dec
aam
pop
or
mov
out
roll
mov
lahf
jne
dec
dec
iret
clc
xchg
push
or
mov
jb
cmp
jns
add
leave
call
aad
fwait
xor
loopne
add
lea
loope
lret
or
scas
mov
jne
sbb
jg
addr16
or
sub
icebp
dec
mov
sbb
mov
adc
loopne
push
inc
mulb
and
ret
jle,pn
fwait
xor
xchg
mov
jl
in
mov
add
daa
push
ret
cli
jmp
std
fcmovu
fmull
push
mov
outsl
in
push
xor
jne
pop
xchg
add
sbbb
adcb
fldl
lods
aad
inc
bound
repz
inc
add
negb
fs
adcl
dec
and
mov
scas
andl
ss
sbb
cmp
orw
loop
outsb
xchg
xchg
shll
iret
mov
iret
cmp
and
add
fdivrp
mov
cltd
nop
push
xor
xchg
mov
ljmp
pop
or
fnstsw
in
inc
jl
mov
push
dec
mov
push
in
adc
mov
stos
and
or
push
push
push
or
push
fsub
pop
add
add
sub
sbb
jl
mov
ficoml
out
cli
loop
je
sbb
je
or
or
push
std
aaa
pop
add
mov
out
jo
shlb
xchg
lock
inc
cmp
mov
cld
sbb
xor
adc
push
cmp
fsubrp
or
xchg
pop
mov
jmp
insb
xchg
jno
subl
mov
inc
dec
push
nop
insb
cmpb
xor
outsb
add
lods
movsl
pop
mov
add
iret
inc
out
mov
sbb
mov
rcrl
cmp
jg
daa
dec
pop
xor
daa
pop
sti
cli
repz
rorl
mov
jecxz
dec
mov
pop
sub
push
imulb
popa
stc
sub
stos
mov
loop
sub
popf
sarl
jno
ret
lret
or
and
in
jne
mov
cli
jmp
notb
push
sbb
scas
push
xlat
stos
xchg
xor
or
inc
xor
xchg
adc
ret
mov
insb
aaa
push
in
mov
call
outsb
insl
pop
sarb
and
pop
insb
xchg
movsl
aas
adc
mov
les
mov
or
and
scas
cltd
mov
jecxz
mov
nop
sbb
xchg
add
jnp
jae
and
mov
cmp
push
inc
mov
xlat
mov
xor
pop
push
subl
jle
movsl
inc
mov
je
dec
aaa
and
cmc
fnstsw
push
fucomp
and
jge
repz
std
mov
push
pop
jo
cld
push
mov
pop
mov
fwait
mov
stc
daa
mov
mov
jb
jbe
inc
and
orl
fst
imul
jmp
test
cmpsb
int
sub
addr16
mov
lcall
xchg
dec
sahf
icebp
sbb
arpl
xchg
dec
xchg
sahf
jg
cmp
push
mov
cs
ljmp
jge
xor
push
and
add
mov
cwtl
lret
call
out
mov
fisubs
mov
adc
sub
push
jle
popf
rcl
or
push
add
cmp
push
ret
xor
pop
cli
adc
or
and
fisubs
addr16
pushf
imul
stos
loopne
lea
inc
enter
or
jnp
add
ret
in
xchg
add
mov
enter
mov
jae
dec
les
mov
es
lds
test
jbe
xchg
ret
inc
es
out
sbb
insb
lret
xor
test
je
inc
or
mov
or
xlat
sbb
int
adc
gs
xor
mov
mov
xchg
aad
push
and
inc
mov
sti
sub
fcmove
sub
nop
xchg
sti
adc
push
cmp
dec
adc
iret
sbb
cli
mov
outsl
adc
shll
inc
mov
sbb
mov
cmpl
ja
add
mov
adc
cmc
mov
xchg
pop
jae
pusha
xchg
xlat
sbbb
mov
scas
push
std
pop
jnp
movsl
dec
addr16
mov
movsl
push
dec
pop
mov
loopne
and
or
cltd
gs
add
xor
arpl
fmull
sub
ret
loope
mov
stc
in
sub
outsb
xchg
adc
pop
add
adc
cmp
movsb
lahf
push
push
push
push
lret
inc
js
repz
pop
shrl
in
cmc
mov
adc
fnstcw
sub
movsl
pop
xchg
aam
mov
lahf
or
scas
popa
out
xlat
sbb
out
mov
or
leave
and
and
inc
cmp
cmp
cli
jmp
shll
dec
and
mov
sbb
lods
sub
xchg
imul
jns
roll
orl
mov
jl
cmp
inc
sbbl
rcl
mov
push
cwtl
out
cs
cld
jge
push
sbb
sbb
lock
mov
cmp
test
sbbl
pop
in
aaa
mov
cmc
push
jg
add
pop
and
adc
adc
ret
rcll
mov
cmc
mov
pushf
adc
pop
into
jp
dec
push
mov
insb
xor
lods
jge
inc
scas
sub
nop
and
mov
xchg
jle
por
cld
push
inc
in
push
mov
xor
fmul
out
rclb
adc
and
sbb
mov
rorl
les
and
push
mov
lret
aam
leave
xchg
mov
inc
scas
and
cltd
stos
jl
in
adc
jbe
or
insl
push
stos
test
jne
fs
inc
xor
loopne
mov
sub
jl
dec
pop
rclb
nop
mov
fs
repz
lods
pop
imul
ret
addb
fwait
adc
and
sub
mov
gs
and
xor
mov
xchg
cmpsl
lret
cmp
mov
mov
lods
pop
xor
add
mov
int3
movsb
repz
dec
outsl
adc
js
pop
pop
jge
mov
cmp
fs
je
je
mov
cmpsl
xchg
dec
jns,pn
cs
out
xchg
mov
decl
ret
inc
loop
adc
inc
scas
sbb
add
mov
call
push
fidivrs
arpl
cmp
shlb
xchg
dec
sub
aad
mov
lock
cmp
mov
fildll
mov
pop
xchg
xchg
out
xchg
or
mov
adc
bound
and
pop
push
pop
adc
jno
mov
mov
or
imul
movsl
sbb
cmp
cmp
sbb
adc
add
push
test
cmpsl
lcall
cmc
leave
lods
push
je
popf
xchg
mov
setae
xchg
lahf
fmuls
inc
push
dec
push
mov
outsl
shlb
imul
cmpsb
jo
fsubs
cltd
cmp
xchg
adcl
jg
ds
cld
fcomi
cmp
pop
jmp
ds
sub
sub
sti
test
and
ss
xor
adc
add
mov
adc
cmpsl
subb
dec
rclb
xchg
out
shrl
jp
ja
mov
hlt
mov
dec
cli
aad
lcall
lret
outsb
mov
jg
xchg
jae
jl
inc
push
mov
and
mov
adc
inc
jg
mov
js
sbb
popf
out
inc
int
cmp
hlt
mov
sbb
cmp
xchg
xor
dec
out
notl
cltd
jnp
push
dec
add
xchg
jne
jno
mov
imul
std
insl
inc
xor
fxch
sti
stos
in
push
arpl
lret
gs
pusha
inc
mov
mov
mov
xor
fmull
insb
ja
sub
loope
leave
ljmp
push
jo
lcall
and
xlat
in
into
cmp
push
iret
aam
out
jne
int3
pusha
jae
cli
lock
inc
dec
mov
fstl
pop
shrb
aas
pusha
das
inc
jl
jno
dec
fists
and
cmp
lcall
xor
es
jne
sbb
cmc
mov
pop
sahf
dec
sub
adc
mov
xchg
fwait
pop
jnp
ljmp
pop
and
fidivs
jg
cmp
imulb
cmp
arpl
lcall
cld
rdmsr
inc
pop
inc
jmp
or
mov
jne
out
add
mov
and
cltd
addr16
arpl
push
push
mov
in
mov
mov
xchg
mov
jb
loopne
in
lock
lods
push
fwait
xlat
fdivs
lods
jne
jae
shll
ss
icebp
js
cmp
xchg
ret
xchg
jo
cwtl
push
fidivs
push
hlt
fwait
in
in
adc
bnd
pusha
pop
jg
mov
dec
aam
sub
lock
mov
enter
mov
sub
push
jbe
xchg
pusha
pop
ss
dec
pop
jbe
pop
popf
ret
jmp
dec
and
xlat
add
sub
jmp
sbb
testb
or
or
int
imul
lock
mov
fistpll
and
into
test
push
inc
sub
pushf
cmp
inc
dec
repnz
std
js
jo
sbb
scas
lock
pop
cmp
add
out
ret
std
andb
cmp
mov
arpl
xorl
nop
scas
lahf
in
xchg
into
jecxz
mulb
test
sub
sbb
fcmovnb
sub
push
rcll
and
shl
cld
jnp
sbb
or
or
add
jae
add
hlt
repnz
and
xchg
pop
dec
jns
popf
imul
lcall
hlt
scas
xlat
rcrl
retw
repz
jmp
jns
xchg
cld
mov
push
mov
mov
in
inc
orb
or
cmp
fst
shlb
inc
fildll
push
push
test
pop
in
jnp
lods
les
mov
lds
scas
jb
gs
icebp
cmp
hlt
das
lock
mov
in
jl
mov
and
adc
jmp
mov
xchg
cmp
fistl
push
sub
jno
bound
push
xor
ret
jne
fistpll
xchg
mov
or
leave
cmp
es
sahf
sbb
out
js
out
add
inc
mov
ss
movsl
jle
mov
into
jno
sahf
fists
arpl
push
mov
stc
shrl
mov
pop
pop
mov
dec
xchg
fsubs
jo
call
dec
stc
inc
inc
in
mov
xchg
and
cli
scas
popf
or
xchg
ret
int
jb
inc
xchg
cmp
lret
mov
xor
adc
pop
lods
repz
mov
mov
xchg
call
ret
push
adc
scas
sub
mov
repz
jp
sti
jge
in
std
pop
sbb
test
jecxz
call
pop
mov
in
call
or
cltd
adc
leave
add
mov
test
jl
xchg
xchg
sub
adc
mov
popa
int
popa
std
sahf
lcall
fisttpl
xlat
jmp
add
outsb
addr16
ds
cmove
xchg
xchg
xchg
ljmp
and
mov
aad
mov
aam
pusha
clc
inc
pusha
es
icebp
imul
loope
dec
test
mov
icebp
or
xchg
xchg
pop
das
push
inc
imul
sbb
pop
ljmp
rcr
pop
test
jne
imul
ss
imul
fbld
adc
dec
popa
rcrb
inc
sbb
repz
divb
xchg
cmp
xchg
clc
mov
sub
repz
out
loop
adc
mov
cmpsl
mov
test
inc
jle
mov
lahf
mov
dec
mov
inc
fwait
rcr
arpl
xchg
leave
stc
test
int3
bound
inc
pop
testb
dec
outsl
pusha
lock
jns
jnp
lods
fwait
leave
mov
rorl
push
mov
das
fnsave
cltd
push
cli
in
jle
nop
jmp
jae
std
scas
jl
test
inc
push
ret
jecxz
and
lds
sbb
fidivs
push
dec
fwait
stos
in
aaa
scas
pop
jb
push
cmp
in
add
mov
aas
std
daa
mov
mov
out
icebp
pop
xchg
cmp
lret
test
fisubrs
lahf
test
xchg
out
sarl
int
loope
test
sbb
test
lahf
leave
add
sub
mov
hlt
xchg
push
imul
pushf
pop
inc
mov
pop
cmp
jp
test
or
divb
sub
push
into
test
fsubr
stos
out
jae
sbb
push
cld
inc
ds
or
sub
stc
mov
cmp
jp
cwtl
outsl
or
ja
insl
pop
push
pop
jae
xor
xchg
pop
scas
sbb
aad
sbb
sub
and
out
xchg
cli
xor
or
fldl
lds
dec
dec
mov
scas
push
das
scas
shlb
in
xchg
imul
ret
lock
std
push
dec
mov
mov
sub
aad
push
pusha
adc
lahf
xchg
popa
fcmovnb
out
push
cmpsl
push
xor
push
stc
jge
mov
daa
push
push
jae
lret
xchg
mov
dec
and
add
push
cltd
or
and
pop
and
sbb
push
clc
jmp
pop
stos
cmp
pop
fisubs
mov
and
test
in
dec
fdivs
sub
scas
xchg
mov
add
lods
jge
jnp
sub
das
add
jnp
out
inc
das
clc
movsl
add
dec
mov
aas
jo
cmp
fsubrs
push
mov
jo
movb
rcll
dec
movsl
push
nop
mov
add
mov
or
addr16
add
data16
mov
shll
push
and
sbb
pop
or
flds
jp
out
test
clc
xchg
cmp
push
mov
mov
iret
sbb
inc
decb
mov
lcall
add
xchg
and
or
mov
popf
sbb
jns
in
pop
adc
inc
mov
clc
push
push
gs
pop
arpl
mov
sbb
xchg
repz
insl
lret
xor
leave
xor
xchg
pop
sub
out
add
pop
mov
and
adc
loope
lcall
lahf
mov
out
and
add
loop
mov
mov
add
and
hlt
daa
pop
and
ret
cmpsb
jne
dec
or
lds
dec
xor
inc
into
aad
fcomp
aas
and
or
ljmp
pop
rorl
cmp
sbb
cmp
and
push
pop
dec
xorb
push
mov
stos
xchg
xchg
ss
stos
pop
push
testl
js
fisttps
mov
xchg
rcr
inc
divb
mov
inc
in
js
in
dec
dec
fldcw
fsubrs
cmp
cmc
xor
lods
loope
jl
sub
lahf
cmc
bnd
dec
ret
js
inc
test
dec
xchg
popf
cltd
les
dec
adc
and
cmp
push
inc
and
std
sbb
push
fs
scas
aaa
stc
mov
push
cmpsb
data16
enter
mov
mov
js
addr16
cwtl
fs
add
push
pop
xor
cmp
pop
lods
cmp
cmp
add
xlat
push
xchg
bound
push
ret
sub
cmp
lret
in
cmp
mov
addl
fiaddl
negb
out
leave
mov
or
adc
xlat
call
cli
adc
mov
push
cmp
ja
ljmp
sbb
lret
rorb
movsb
nop
xor
mov
xor
enter
mov
push
mov
sub
test
mov
fstps
mov
add
adc
sbb
std
stos
rclb
jnp
sub
movsl
add
es
les
insb
mov
cmc
jp
and
jb
pop
sub
aad
outsb
clc
inc
xor
std
sbb
push
jp
mov
mov
mov
and
xchg
fsubrl
jge
out
fiaddl
stc
xchg
push
popf
popf
or
and
xor
fwait
lahf
push
push
xor
lods
mov
in
mov
sbb
lcall
ds
out
pop
ret
clc
int
jnp
movsl
adc
xchg
pop
in
fldcw
pop
sub
fbstp
add
jecxz
int
loopne
notl
enter
pop
lds
pusha
and
repz
ficomps
repnz
popa
push
sbb
lods
xor
lds
scas
rcr
xchg
jle
pop
dec
add
xchg
cmp
cmp
inc
test
bound
xchg
or
xorb
loope
aaa
push
sub
xor
and
push
push
dec
outsb
je
stos
inc
pop
popa
jo
in
mov
adc
push
fwait
add
movsl
and
mov
pop
lock
cmp
movl
inc
mov
cmc
mov
mov
push
jecxz
push
mov
dec
xor
sub
inc
mov
mov
push
cmpsl
xor
lahf
fmulp
mov
pop
mov
or
mov
mov
clc
cmp
sub
call
jno
cmp
es
xchg
push
jnp
fisubl
sbb
in
push
lock
cs
ja
stos
xor
jbe
jg
mov
out
push
jno
push
mov
lods
jno
outsb
clc
inc
dec
xchg
aaa
insb
popa
cmp
adc
int3
xlat
adc
or
mov
or
inc
sbb
fwait
xor
sahf
mov
ret
out
or
mov
pop
and
mov
push
pop
gs
stc
testl
dec
xchg
js
adc
push
push
push
xchg
imul
pop
dec
inc
popf
ja
popl
jmp
xchg
sbb
test
pushf
mov
mov
mov
test
cmpsl
push
pop
dec
test
inc
cmpb
dec
sbbl
add
jno
dec
das
inc
into
pop
sbb
push
sahf
sbb
enter
push
in
jle
movsl
jmp
insl
inc
imul
dec
inc
mov
or
and
out
loopne
push
test
or
and
push
cmp
mov
sbb
mov
fs
push
stc
mov
sahf
pop
es
ds
mov
ret
lods
cmp
or
xchg
mov
ret
sbb
notb
iret
loop
sub
adc
cwtl
mov
sub
or
ss
xchg
mov
inc
push
xor
adc
test
test
mov
insl
nop
and
insb
ds
and
adc
xor
pop
inc
inc
and
cmp
mov
loope
cltd
jmp
shl
je
sti
jbe
ja
arpl
out
les
aas
add
cmp
sub
loopne
xchg
pop
icebp
ret
adc
rolb
pusha
cmpsb
dec
pop
xchg
movsl
sbb
fsubl
xadd
ret
lock
sub
adc
imul
push
xchg
sub
jne
xlat
mov
mov
mov
popf
mov
xorl
or
mov
adc
mov
and
nop
and
mov
repz
inc
adc
testl
dec
mov
jno
sub
lahf
push
cmp
aaa
aam
push
or
cmp
clc
push
pop
jb
dec
aam
testl
mov
cmp
jecxz
xor
add
clc
idivb
mov
push
aas
cmp
out
add
push
inc
sbb
adc
out
sti
xchg
pusha
popa
push
lcall
xchg
mov
cli
xchg
and
inc
aam
cltd
push
sbb
pop
add
loopne
mov
imul
dec
xor
jge
dec
mov
loope
xor
orl
clc
sti
mov
pop
enter
sbb
push
out
cmpsb
js
cmp
fwait
xor
loop
push
pop
jo
sti
xor
mov
cwtl
leave
js
pop
leave
scas
or
clc
cmp
outsb
jle
xchg
push
pop
es
sub
in
cltd
call
xchg
mov
int
push
in
mov
sbb
ret
stos
pop
mov
mov
fwait
lcall
arpl
stos
loop
je
jg
xchg
inc
inc
in
cmpsb
cmp
icebp
imul
icebp
clc
pop
arpl
mov
adc
push
xchg
faddp
push
dec
pop
data16
or
sbb
push
mov
gs
imul
enter
push
popf
pop
fcomip
xor
int3
call
rol
lret
push
addr16
in
fisubrl
pop
das
cmp
insb
lret
jge
adc
dec
push
test
addr16
push
icebp
mov
ss
lods
scas
int
fisubrl
ja
pop
stos
pop
jbe
jl
mov
testl
outsb
in
mov
scas
neg
dec
jmp
jge
add
push
xor
mov
push
mov
test
mov
mov
sti
icebp
push
enter
insl
mov
pop
cmpsl
sub
movsl
push
push
arpl
mov
cmpsl
push
dec
bound
enter
fs
lcall
mov
dec
loope
lock
imul
mov
test
mov
aas
outsb
push
in
push
clc
sbb
add
in
cmp
jmp
sub
arpl
pop
adc
pop
push
outsb
xor
int3
arpl
out
push
lcall
jp
jnp
pop
add
mov
sub
shl
cltd
pop
in
xchg
push
leave
push
loop
push
imul
lcall
addb
dec
repz
inc
xchg
jmp
jns
test
xchg
lods
into
and
fwait
adc
das
mov
clc
shr
inc
sbb
pop
cwtl
je
mov
iret
pop
in
data16
xchg
lods
mov
fcomp
sbb
clc
js
push
sub
cmp
fildll
int
jmp
sbb
mov
imul
inc
pop
rol
and
push
cmp
push
les
adc
xchg
adc
and
push
les
and
xchg
xlat
push
xor
lcall
out
xchg
add
push
aam
sub
fwait
dec
lods
cmp
mov
cltd
test
lret
into
push
ja
lods
jecxz
hlt
mov
sub
cmc
xchg
cmp
outsl
inc
push
cmp
jae
in
adc
cmp
sbb
and
insb
jmp
sbb
fimull
and
sbb
fidivl
inc
adc
stos
jae
or
pop
pop
dec
push
mov
xchg
dec
pop
loopne
mov
shrl
data16
mov
sbb
mov
in
pop
mov
scas
int
jno
into
inc
xor
test
repnz
lods
push
dec
cmc
add
imulb
mov
sbb
pop
pop
dec
jmp
fsubl
cs
jne
inc
pusha
ret
dec
jae
cli
outsl
mov
lahf
mov
pop
pushf
dec
inc
jne
cmc
push
aas
xchg
fcoms
rcr
sarl
mov
mov
push
sahf
adc
hlt
mov
sub
call
rcrl
scas
jno
ret
sbb
stos
pop
sub
sub
add
dec
bnd
and
aas
xor
push
cmp
call
mov
sarb
xorl
fmuls
scas
cmpsb
and
mov
jb
mov
xchg
stos
sbb
jnp
inc
pop
ror
mov
lock
mov
pop
fidivrl
dec
shlb
sbb
fldl
ds
and
out
lret
sbb
mov
inc
iret
idivl
loop
add
xor
or
cmp
push
push
test
pop
jp
jmp
xchg
test
orb
imul
in
fabs
in
dec
shlb
test
sub
adc
int
jb
dec
flds
scas
and
sahf
sbb
or
pushf
cmp
pop
pop
enter
out
jo
push
repz
adcb
fimull
add
and
sub
pop
add
cwtl
jmp
ja
sub
cmpsb
or
mov
fs
dec
pop
sub
xchg
sti
push
data16
mov
jns
inc
and
out
insb
lods
sub
movsb
out
scas
mov
cmp
lods
dec
mov
fidivl
lret
adc
push
fnsave
or
sub
sbbb
repz
aas
jno
pop
cmp
stos
cld
sub
mov
loop
cmp
fidivrl
aad
shll
mov
test
insb
or
mov
mov
dec
ret
push
dec
dec
xchg
jle
decl
dec
mov
jb
icebp
dec
pop
insl
jg
loop
xchg
mov
test
outsb
push
cs
aad
cmp
pop
fildl
insl
test
iret
push
popa
push
fildl
shll
jge
lods
jae
addb
jle
mov
xchg
pop
stos
and
cwtl
loope
shll
imul
fldt
fstps
or
sbb
pusha
scas
bound
push
xchg
and
push
xchg
mov
out
mov
add
push
invd
lods
cmpsl
inc
sbbb
in
daa
incl
sub
outsb
les
lods
cmp
cmp
sub
jp
stos
and
ljmp
mov
xchg
jge
mov
mull
cmp
jle
jno
mov
jge
push
pop
push
xor
inc
push
movsb
mov
ja
or
mov
inc
xlat
sahf
jmp
addr16
ficoms
dec
push
sub
mov
insb
sub
imul
cs
xchg
mov
jle
insl
mov
and
or
jmp
test
pop
addr16
inc
xor
lea
inc
cmpsb
push
sub
sbb
push
gs
cmp
xchg
pop
jne
jb
subb
xchg
fwait
xor
shl
mov
mov
in
jne
jae
dec
jns
dec
mov
gs
popf
into
repnz
dec
inc
xchg
jg
in
and
in
test
loope
ficomps
dec
ss
mov
mov
adc
lds
mov
mov
or
roll
mov
cmp
out
push
call
dec
lret
mov
dec
pushw
loop
enter
sub
loop
into
test
enter
xchg
cmp
jae
mov
imul
shrl
pusha
cmc
callw
fwait
push
scas
icebp
loope
fwait
pop
imul
mov
add
mov
cwtl
inc
vmwrite
out
aaa
data16
pop
pop
out
getsec
shr
es
fdiv
sbbb
xchg
xor
mov
mov
push
mov
add
mov
ds
mov
cmp
pop
subl
cmp
out
aad
jmp
xchg
pop
push
push
and
xor
sbb
cs
cwtl
cmpsb
shrl
mov
push
xchg
jns
out
in
daa
lea
ljmp
aam
mov
sbb
dec
jg
lock
addr16
imul
ja
faddp
sub
gs
inc
mov
push
imul
xor
cmpsb
stc
test
add
jge
insl
mov
fistps
ret
mov
sbb
and
enter
mov
in
inc
aam
jmp
jge
je
xor
pop
jns
int3
iret
sub
test
fisttpll
xchg
movl
jl
mov
xchg
jge
cmp
push
mov
push
daa
or
sbbb
insb
mov
cmp
test
sub
cmpsl
leave
jmp
or
dec
ljmp
std
mov
push
aaa
xchg
jno
stc
inc
cmc
insb
or
mov
mov
shl
hlt
in
inc
loopne
jae
lcall
inc
and
or
inc
jb
cmpsl
fstpl
cs
adc
repnz
jnp
and
pop
sti
aaa
out
mov
cmp
push
in
mov
mov
cmpsb
xchg
outsl
mov
inc
xor
cmp
or
mov
mov
cwtl
divl
enter
andb
and
iret
outsb
adc
loop
xor
ljmp
adc
lcall
pop
xchg
sub
sub
xlat
and
icebp
pusha
xor
hlt
lahf
mov
rcl
cwtl
xor
mov
dec
sub
movsb
add
mov
addr16
xor
or
sub
sbb
scas
femms
fsubl
das
xchg
pop
mov
jb
sarl
int3
sarl
mulb
fistpll
adc
jp
xchg
xchg
int3
mov
adc
dec
insl
dec
xchg
sbb
jns
xchg
inc
xchg
or
lods
add
mov
rorb
out
hlt
js
ja
aas
mov
and
in
and
aad
cmp
inc
jb
hlt
insb
pop
cmp
ss
movsb
push
aam
sbb
jl
lock
and
lret
rclb
add
test
mov
mov
ds
in
mov
pop
push
jne
int
in
dec
jl
enter
push
mov
clc
mov
jns
aas
dec
out
lret
icebp
push
jnp
lret
jp
mov
xor
xchg
inc
and
mov
and
bound
jecxz
movsl
dec
sub
fcompp
pop
data16
lret
inc
jg
decl
ret
inc
xchg
inc
stos
jbe
outsb
pop
std
adc
mov
out
xor
push
jl
ds
fidivrl
jge
mov
mov
mov
xchg
cs
lock
xchg
stos
and
push
jp
sar
jmp
fmull
or
pop
out
cmp
popf
in
adc
mov
lcall
rcl
sbb
lahf
inc
shrl
movsl
and
mov
pusha
fsubs
sahf
fcoms
cwtl
sub
push
mov
sbbb
inc
lret
arpl
imul
ss
and
mov
jae
xchg
imul
cmc
pusha
mov
add
or
outsb
xor
jmp
fs
mov
mov
outsb
jnp
and
sub
repnz
xchg
jbe
dec
test
iret
xchg
popa
jb
add
and
or
pop
xor
xor
rolb
mov
scas
sti
outsl
lret
jg
lea
mov
adc
in
pop
xchg
pop
push
cmovl
movsb
icebp
fldt
leave
subl
aam
lods
sub
sub
enter
sbb
sbb
add
pop
push
adc
icebp
sub
sub
cld
mov
sahf
xor
imulb
add
dec
sbb
mov
ja
mov
push
xchg
jl
das
push
mov
int
cmpsl
xchg
aas
mov
rcll
add
push
mov
jl
fisubrl
jns
cmp
push
shrl
and
bnd
fisubrl
jge
cmpsb
fldt
mov
sbb
push
hlt
and
sub
leave
in
inc
testl
mov
push
jle
ficoms
ljmp
and
jl
fs
mov
mov
ret
loopne
sbb
adc
addr16
sub
cmp
sti
xchg
lods
push
fcoms
imul
shr
and
mov
mov
stos
cmpsb
shll
jae
outsb
insb
std
rcrb
xchg
sbb
sbb
jg
pop
mov
sbb
out
stos
lock
or
inc
insb
mov
movsb
imul
test
ficomps
dec
cmp
das
sbb
jle
xchg
push
shrl
int
fsts
bound
mov
loop
adc
icebp
jb
iret
add
mov
ret
cld
inc
into
and
mov
xor
repz
xor
je
loope
push
mov
test
js
mov
xchg
pop
cmpsl
mov
gs
push
sub
cmc
xor
addr16
pop
pop
jae
adc
xor
test
mov
jno
and
setb
negb
mov
je
xlat
in
scas
subl
mov
sub
push
in
enter
and
xor
and
popl
jne
test
lock
jns
jbe
pop
dec
cmp
insl
sbb
pushf
jge
insl
or
dec
shr
mov
icebp
jbe
test
addl
push
xor
adc
les
mov
add
sahf
in
out
mov
xchg
mov
int
dec
lods
push
stos
notl
cld
jp
jp
pop
mov
inc
jo
scas
daa
out
dec
push
dec
inc
mov
shlb
scas
out
xchg
jl
testl
jne
enter
mov
sub
cmp
ja
sahf
js
xchg
lcall
and
and
or
stc
dec
adc
dec
pop
test
inc
xchg
and
call
shll
jge
xchg
ds
and
jge
scas
mov
mov
xor
fwait
or
je
add
sbb
push
xor
mov
pop
dec
dec
lea
push
xchg
div
clc
inc
pop
cs
xchg
aad
mov
jno
inc
xor
dec
loop
adc
insb
cmp
mov
stos
inc
icebp
testb
scas
cmp
std
scas
mov
shll
pop
dec
mov
and
cmp
add
or
or
lahf
pop
xor
push
scas
and
dec
jge
loop
jnp
rcll
jl
mov
movsb
mov
push
or
push
clc
sub
popa
xchg
daa
xor
fsubrl
mov
enter
push
fcmovbe
in
pop
lock
movsb
jns
test
leave
jle
inc
movsb
stos
push
mov
xor
fs
mov
pop
leave
lods
pop
fs
int3
mov
mov
jns
test
add
outsb
decl
testb
xchg
shl
xchg
lret
movsl
insb
ja
out
xorb
pop
jge
adc
xchg
or
and
push
fxch
xor
push
enter
mov
fwait
loope
and
sub
sub
mov
cltd
jno
andb
push
sti
rol
mov
shrl
pop
sti
bound
in
loope
int
ret
test
add
jmp
loop
jnp
sbbb
movsb
push
and
push
push
xor
and
add
popf
adc
xor
pop
mov
sbb
push
imul
sahf
rorl
xchg
fwait
dec
je
cmp
ficoms
xor
jecxz
in
dec
repnz
xchg
enter
inc
sub
in
hlt
pop
imul
or
jo
loopne
mov
inc
aas
mov
add
int
inc
cmp
and
fs
jg
pusha
in
sahf
test
mov
sub
inc
jno
cmpb
mov
jp
les
stos
push
leave
orb
enter
and
nop
push
inc
test
mov
inc
jecxz
sti
dec
shll
in
fcoms
sbb
dec
mov
xchg
repnz
das
out
cmp
xor
in
sub
cmp
out
in
sti
xchg
ja
loope
into
out
leave
ret
sbb
cltd
lods
ret
fstpt
push
mov
adc
scas
out
jg
cltd
inc
daa
inc
lret
dec
addr16
xorl
iret
and
adc
movsl
push
sti
jecxz
aaa
ja
add
pop
fidivl
aad
mov
cmpsl
jp
fisubrs
mov
data16
or
jecxz
sahf
in
int
mov
fldt
inc
dec
sbb
das
push
or
dec
rep
imul
pop
and
das
hlt
or
or
adc
cmpsb
xor
cld
out
push
sub
adc
addr16
divb
mov
fmul
fxch
add
movsl
xchg
inc
mov
in
mov
jmp
xor
dec
xor
test
xor
adc
ja
lds
sub
arpl
inc
std
icebp
scas
ror
jo
stc
lds
pop
out
aam
mov
fcmovnu
call
mov
ror
rcr
xchg
stos
test
loope
fs
outsl
movsb
xchg
xor
fwait
add
fmuls
clc
inc
pop
imulb
lea
push
mov
jg
cmc
les
mov
jbe
adc
mov
js
int
push
stos
inc
shl
loop
sahf
cwtl
push
out
imul
icebp
mov
out
cwtl
inc
mov
mov
lahf
inc
mov
inc
movsl
movsl
mov
mov
mov
ret
es
xor
add
lock
jo
testb
rcll
iret
in
cmp
jp
jae
out
in
lock
mov
les
lret
hlt
jmp
xchg
addr16
adc
and
cli
das
sbb
insb
js
push
pop
stc
loopne
stc
xlat
sub
sub
cmpsb
sub
cmp
push
or
dec
imul
in
xchg
sub
xor
xchg
push
jle
inc
pop
test
or
lds
mov
cltd
outsl
test
mov
inc
adc
loope,pt
popa
mov
add
xor
mov
push
push
cmp
aad
xchg
jecxz
pop
dec
push
push
push
sbb
or
inc
movsb
std
push
fsubl
xor
shll
repz
push
popf
bound
fldl
pusha
aam
popa
lods
mov
and
das
mov
sahf
out
loope
pop
ljmp
and
sarb
mov
mov
out
mov
stc
js
pushfw
pop
insl
andb
add
lock
sbb
sbb
fisubl
nop
and
ds
dec
popf
adc
jecxz
lret
xchg
xlat
and
push
movb
ss
movsb
dec
cwtl
test
or
mov
jg
xlat
imul
scas
pop
neg
stos
lods
gs
icebp
mov
add
mov
or
inc
pop
stos
cmpsb
scas
gs
enter
jp
das
sub
lds
mov
hlt
or
movsb
pop
add
xchg
ret
enter
mov
sub
int3
enter
jae
mov
jo
cmp
inc
and
inc
mov
xchg
pop
scas
outsb
dec
dec
daa
mov
js
js
popa
mov
clc
out
testl
pop
jmp
leave
cmp
push
pop
out
push
bound
inc
imul
mov
test
pop
inc
inc
mov
sbb
cmp
rorl
shl
mov
sub
bound
in
inc
jb
push
bound
rclb
xchg
xchg
mov
add
std
xchg
call
aaa
inc
out
push
imul
imul
and
out
mov
dec
adc
ja
adc
pop
push
pop
push
stos
das
fwait
popf
mov
cmp
xchg
xchg
scas
inc
push
in
insb
inc
mov
and
jbe
xor
xchg
negb
sbb
xchg
jbe
mov
xchg
loop
flds
ficoml
cld
jne
push
lock
lock
test
aad
in
fwait
cmpb
adc
shlb
jo
cwtl
clc
mov
inc
test
test
lahf
gs
pop
pusha
mov
faddp
ds
sub
sahf
sti
loop
arpl
xchg
shlb
and
out
pushf
fwait
nop
jno
jmp
jge
ljmp
maxps
pusha
mov
inc
sub
and
sbb
mov
test
test
inc
jns
pushf
jo
rcll
lock
adc
out
rcl
stc
jecxz
in
mov
imul
mov
push
rcpps
push
dec
jae
insl
test
dec
xor
push
leave
in
jbe
call
dec
hlt
cmp
fstl
dec
ljmp
out
test
aas
mov
xchg
inc
in
mov
pop
in
pop
cmp
or
lret
jne
sbb
and
dec
and
mov
and
mov
jecxz
andl
sub
mov
and
flds
lahf
sbb
icebp
out
in
rcll
inc
jbe
jns
fidivl
js
mov
push
inc
cli
pop
sub
in
mov
or
sub
mov
mov
rep
icebp
mov
mov
fld
push
sub
inc
xor
popa
inc
pop
sub
jnp
xchg
xor
lds
fsubs
loopne
add
mov
jnp
cmc
loope
jo
jb
fisttpll
sub
jno
mov
in
arpl
xlat
mov
jecxz
scas
stos
push
ret
rcrb
scas
fisubrs
mov
adc
adc
sub
insb
scas
fbld
adc
mov
mov
jne
push
mov
cmpb
inc
lcall
inc
jg
cld
mov
test
mov
icebp
mov
call
push
mov
inc
int3
push
or
xor
add
fisubrs
lds
std
arpl
adc
cmp
call
jb
nop
mov
xchg
out
cli
mov
pop
xchg
xchg
aad
xchg
test
sbb
call
mov
js
sbb
jmp
rclb
adc
push
cmpsb
sbb
mull
out
test
jle
lods
mov
and
les
xchg
aas
fadd
xchg
push
popf
and
xchg
adc
loopne
adc
inc
rcll
mov
int
and
mov
lea
pushf
xor
mov
adc
leave
push
xor
or
mov
sub
rolb
sub
stc
lret
xchg
adc
mov
jnp
roll
les
xor
shlb
mov
sbb
push
xor
push
jg
lods
or
sbb
xor
dec
or
xor
nop
dec
xlat
and
and
leave
xlat
mov
dec
bound
ds
and
int
mov
int3
sbb
sbb
push
inc
mov
or
jb
scas
ja
mov
push
push
cmc
xchg
xor
inc
lret
jge
mov
mov
xchg
sub
mov
cli
mov
testl
push
add
jg
xchg
push
mov
iret
dec
inc
pusha
dec
insb
xor
lock
into
cmp
lods
mov
inc
gs
or
xorb
sub
insb
or
dec
xchg
imull
adc
pop
mov
in
fistps
add
aaa
and
sub
test
add
into
sub
lods
into
jb
call
jnp
ljmp
stos
mov
sub
outsb
je
pop
inc
or
test
jno
lds
add
leave
add
dec
mov
xchg
in
pop
out
std
mov
subb
das
andl
enter
mov
push
xchg
xchg
fcomp
pop
lods
cmp
pop
loop
aam
cmp
test
sub
je
sbb
jb
mov
dec
dec
fstpt
pop
jg
daa
xor
pop
dec
jo
dec
dec
hlt
ja
test
iret
or
icebp
pop
js
stos
test
nop
push
push
aas
test
adc
outsl
jb
pop
or
mov
ds
mov
shlb
out
jg
imul
dec
outsl
cwtl
mov
add
inc
xlat
mov
aam
cmpsl
add
pop
sti
in
clc
mov
pop
daa
push
jno
popf
dec
lds
enter
cmp
jl
sahf
in
push
scas
in
jae
mov
dec
jb
sub
mov
adc
ljmp
cmpsl
mov
sub
negl
insb
loopne
cmc
mov
sub
jle
adc
pop
dec
mov
dec
push
popa
repz
hlt
adc
cmpsl
inc
mov
inc
aaa
scas
dec
and
daa
add
popf
pop
or
push
icebp
pop
jno
les
mov
mov
xlat
lock
pop
sti
mov
or
sub
or
mov
mov
icebp
pop
adc
arpl
subl
xchg
push
dec
xchg
aad
or
mov
dec
sbb
xor
fld
sbb
sbb
cwtl
inc
fimuls
inc
aaa
push
into
scas
jmp
mull
jno
sbb
jl
xor
add
jns
pop
jnp
sbb
inc
lea
dec
and
or
gs
dec
cmpsl
enter
call
addr16
mov
test
mov
les
daa
push
and
ja
stos
mov
addr16
inc
push
push
jnp
jb
xlat
cmp
outsb
push
popa
mov
pop
inc
ret
jmp
faddl
jle
ss
dec
mov
mulps
mov
test
data16
xlat
and
aaa
cmp
iret
add
aad
dec
repnz
shll
xrelease
insb
jp
jecxz
add
dec
inc
mov
andb
inc
cmc
xchg
call
rorl
in
xchg
ljmp
hlt
inc
imull
repnz
testl
iret
mul
aad
cmpsb
pop
int3
add
shll
and
xchg
dec
mov
lea
and
scas
fcoms
jno
cmp
cmpsb
call
outsl
ss
mov
sahf
arpl
imul
ss
cmp
stos
lret
sbb
insl
and
adc
out
mov
jg
cltd
lods
call
setg
arpl
js
bound
push
mov
mov
mov
aas
pop
adc
pop
insl
es
xorb
in
inc
rorb
mov
out
stos
cmp
aam
stc
call
ds
arpl
movsl
sbb
loope
mov
lock
sbbb
fnstsw
xchg
jle
inc
fld
pop
rcrb
xchg
lahf
faddl
int3
int
add
sub
mov
iret
xchg
movsl
inc
cmpsl
ds
pop
jge
repnz
jae
mov
pop
cmc
pop
lahf
mov
xchg
lods
outsl
xchg
sbb
inc
cmp
sub
cltd
mulb
or
dec
jg
hlt
adc
insl
ljmp
cmp
or
in
sub
adc
adc
cs
out
or
or
xchg
xor
loope
xor
sbb
pop
stos
hlt
inc
mov
in
or
int3
push
fs
nop
std
in
xlat
sub
xchg
cmpsl
xlat
pushf
inc
jmp
addr16
cmp
mov
mov
sbb
out
push
pop
mov
lret
xchg
sbb
mov
sbb
loope
and
push
sbb
into
xchg
inc
addr16
push
add
mov
jb
xchg
loope
sub
mov
bound
mov
add
xchg
jp
add
pop
popf
dec
add
dec
mov
jmp
aas
mov
pushf
addr16
shll
mov
shrl
xlat
mov
bound
arpl
add
mov
adc
pop
push
dec
mov
scas
es
push
adc
pusha
outsb
or
cmpsb
mov
pop
fs
xchg
mov
out
aad
cmc
push
lcall
scas
jbe
sub
outsl
add
fs
lea
mov
loopne
not
lcall
lret
inc
pop
inc
cmp
pop
pop
outsl
cld
mov
lahf
adc
jns
adc
jne
cmp
and
dec
jnp
test
add
popf
xor
inc
test
mul
adc
lds
mov
mov
cld
shl
stos
aam
std
mov
es
jmp
lea
stc
and
popl
div
jl
adc
xor
nop
loope
xor
fwait
dec
mov
cmp
and
arpl
cmp
xadd
test
mov
sbb
std
mov
repnz
test
pop
pop
add
mov
xor
cmpsl
daa
fmul
cltd
repnz
in
stos
sub
shrb
xchg
lods
ljmp
cmovns
das
or
pop
inc
stc
xor
jmp
fs
repnz
ja
aam
mov
push
mov
roll
out
imul
dec
jge
and
pop
xchg
popa
pop
sahf
xchg
cli
fildll
jp
push
addl
inc
cmp
sub
cmc
or
jo
mov
stc
adcl
xor
inc
iret
cwtl
mov
int
push
pop
test
pop
inc
cwtl
sbb
mov
sub
cmpsl
movb
sub
int
adc
ljmp
sbb
cmp
push
ret
addr16
lcall
mov
adc
add
adc
icebp
xchg
imulb
push
out
xor
mov
bound
pop
sbb
jb
and
pop
adc
pop
fistpl
xor
mov
mov
int
dec
xor
inc
or
clc
add
arpl
data16
arpl
xchg
push
lret
fbld
outsl
mov
test
in
fcompl
insb
fisubrl
cmp
push
scas
pop
cmp
data16
sub
cltd
outsl
jle
cmp
add
pop
fdivl
loope
mov
inc
jae
cmp
xchg
jbe
ds
add
movsl
xor
xchg
pop
hlt
inc
in
adc
incl
adc
popa
jmp
sbb
xchg
fdivr
mov
dec
or
xlat
add
dec
outsb
fs
leave
adc
sub
cmp
xlat
movsb
in
cmp
test
ljmp
pop
add
lret
outsl
in
stos
adc
test
jno
push
jnp
jbe
sbb
xor
push
dec
imul
sbb
push
inc
xor
mov
push
fwait
push
out
int3
xchg
dec
mov
lret
in
out
pmullw
in
loop
pop
andl
enter
int
icebp
cmp
icebp
xchg
cltd
pushf
hlt
js
iret
push
mov
xor
jae
lret
add
inc
jbe
sub
adc
icebp
testl
enter
push
mov
idivb
loopne
scas
pop
mov
xchg
sbb
bound
cmpsb
push
stos
lds
xchg
clc
popa
and
test
pop
mov
pop
push
ret
and
mov
fisttpl
repz
push
cli
xor
xor
in
inc
mov
xor
popf
testb
test
outsl
arpl
mov
mov
xor
out
mov
insb
in
daa
and
sarl
or
fs
fisttpll
fs
test
push
xlat
xchg
xchg
js
flds
jbe
sbb
xchg
and
in
pop
aad
xor
mov
ret
dec
psubd
sub
xor
jns
mov
cmp
bswap
push
sub
dec
sub
mov
int3
mov
pushf
dec
aam
cld
xchg
and
adc
add
cmp
out
pop
pop
add
jns
cmp
pop
dec
cmp
adc
push
dec
adc
pop
add
cmp
iret
dec
mov
ret
cmp
je
rorb
inc
xor
jge
popf
movsb
push
clc
or
adc
lods
push
repnz
mov
inc
xchg
test
mov
inc
cmp
sarl
xchg
pop
loop
adcl
adc
loopne
int
data16
sub
movsb
ja
or
out
sub
dec
out
loop
jno
es
data16
pop
jl
int
stos
popa
mov
pop
testl
push
outsl
aam
arpl
jmp
in
notl
jo
filds
das
in
scas
xor
add
cmc
jae
arpl
xor
push
xchg
xchg
mov
push
jae
cwtl
xlat
ja
fstl
inc
and
sub
cmpsl
cmp
clc
movsb
jl
mov
mov
sar
push
add
cwtl
addr16
mov
cmp
ss
dec
in
jmp
mov
pop
mov
xor
sub
adc
das
inc
das
add
sub
sbb
repz
fs
hlt
jl
sbb
arpl
loope
push
xchg
or
mov
clc
mov
hlt
or
out
cmp
inc
out
lcall
aas
jp
or
fisttps
and
fbld
popa
arpl
shrl
lock
stc
push
mov
jge
or
and
outsb
push
test
int
inc
push
comiss
aad
or
xchg
sub
sbb
lret
fwait
sti
fadds
cmp
mov
mov
popa
mov
inc
fwait
mov
cmp
pop
std
adc
adc
jae
sub
lcall
mov
add
lret
inc
aaa
lret
lea
add
mov
mov
sbb
push
push
jae
pop
push
jb
stos
jle
lock
jmp
xorb
pop
mov
cmc
ret
dec
mov
cli
push
pop
cmp
fwait
scas
into
rclb
mov
jmp
mov
xor
movsl
arpl
ret
repnz
jmp
xor
call
lods
xchg
addr16
bound
dec
xor
imul
mov
mov
aad
inc
or
add
std
jae
jb
add
ljmp
test
fs
dec
sti
and
inc
or
add
add
fmull
xchg
sbb
mov
fildll
jns
testl
pop
mov
mov
insl
mov
cmp
inc
inc
mov
pop
or
in
repz
adc
or
dec
gs
push
sub
lea
fdivrp
aas
addr16
dec
in
dec
sub
xor
mov
mov
xor
imul
insb
sar
enter
sbb
arpl
lret
daa
adc
sub
mov
push
sbb
mov
icebp
imul
ja
loop
push
sar
mov
fnstenv
sbb
flds
in
and
mov
add
inc
sub
xchg
lds
in
int
cmpsb
lock
push
mov
and
outsl
sub
flds
or
or
sbb
imul
test
enterw
mov
pavgw
xchg
ljmp
or
rcll
int
sbb
adc
pop
shrl
outsl
aad
cmp
cli
add
aas
outsb
adc
mov
push
aam
test
inc
push
mov
ss
jg
jg
bound
in
fs
cmp
sbb
lcall
es
jle
ret
sbb
or
imul
ds
scas
jge
fstl
jno
pushf
inc
test
xchg
xchg
push
out
pop
push
push
jecxz
call
jl
lea
xor
adc
arpl
sub
adc
addl
std
movsl
test
dec
hlt
push
sbb
mov
push
inc
add
and
sub
sbb
dec
enter
jg
pop
cmp
andb
jne
adc
lods
pop
and
or
ret
mov
mov
adc
jmp
and
fiaddl
adc
aas
notb
ret
in
aas
mov
sub
test
mov
dec
adc
pop
outsb
jnp
out
pop
mov
add
jle
inc
jl
dec
xor
adc
add
jmp
xchg
aam
adc
sub
jo
inc
fs
sbb
and
negb
movsl
rolb
fdivs
mov
test
clc
inc
push
jns
fsubs
test
mov
nop
jns
sbb
mov
pop
lds
inc
xchg
jp
nop
jle
xor
cmp
enter
xor
sarb
lret
cmpsb
jns
test
mov
push
lods
outsb
and
sti
ja
jle
inc
push
fmul
cmp
xlat
clc
or
mov
pop
push
sub
xor
sahf
add
add
jno
aas
aaa
outsb
movsl
fnstcw
mov
lea
push
jbe
and
cmp
push
ret
mov
push
push
and
pop
cwtl
sub
xor
add
fsubl
add
out
pusha
ret
std
aaa
lds
sbb
fs
sub
dec
fadd
jbe
sbb
mov
enter
lret
cmp
xor
jmp
lods
fmuls
or
pop
push
cmp
icebp
lods
cwtl
in
insl
mov
loopne
inc
sbb
std
dec
cs
jecxz
loope
rclw
xor
push
or
pop
mov
cmpb
lret
movsb
inc
pusha
insl
loopne
cmp
pop
jg,pt
xchg
scas
stc
inc
and
adc
lahf
fdiv
lods
lahf
cmc
xor
cmp
sub
cmp
je
imul
sti
stos
jp
cwtl
in
movsb
xchg
imul
mov
fnstenv
test
sbb
aaa
ljmp
jg
sbb
jmp
dec
jne
jle
jae
mov
push
or
sbb
cmp
fisttpll
pop
out
mov
lock
les
and
loopne
test
xorl
jge
dec
js
and
dec
sub
inc
pop
dec
divl
cmp
cmovl
pop
fcomi
in
xchg
sbb
add
enter
jae
nop
imul
mov
mov
nop
sbb
shll
gs
cs
pop
jg
gs
aaa
xor
scas
jecxz
fdiv
popa
xchg
ss
push
xor
jbe
stos
push
xor
lcall
mov
dec
adc
in
shll
mov
xchg
sbb
mov
aas
mov
sahf
bound
xor
cmp
push
mov
cld
or
in
pop
movsbl
inc
enter
xchg
sub
or
fidivs
mov
das
mov
push
daa
mov
aam
add
pop
or
fcomp
mov
add
adc
ds
nop
mull
or
test
dec
jo
inc
rcl
sbb
adc
cmpsb
and
je
push
xchg
and
xor
sahf
std
or
jecxz
addl
loope
int3
lret
fsubrl
loope
cmc
dec
inc
gs
sti
dec
pusha
fstl
int3
push
jmp
cmc
sbb
xchg
xor
inc
jns
sti
mov
and
cmpsl
jmp
andl
cs
cmp
xor
rorb
or
les
popf
pop
sbb
into
cmp
addr16
cmp
call
rcrb
imul
xlat
jnp
out
inc
cmc
fldenv
mov
mov
cmp
mov
test
cmpsw
pop
out
jae
jle
jp
sbb
sub
adc
into
jg
int
cmp
sub
xchg
lahf
cmp
xor
andb
pop
loope
push
in
add
repz
mov
adc
cmpb
cmpsb
in
add
sahf
push
xor
dec
in
sub
enter
push
push
dec
mov
icebp
push
iret
cmc
iret
xor
xchg
mov
adc
adcb
jle
fs
xchg
ja
subb
pop
ret
inc
jle
icebp
les
cld
rorb
dec
in
aam
ljmp
fwait
scas
fcomip
mov
adcl
mov
insb
jne
ja
and
test
and
mov
sub
sbb
cmp
das
sbb
xor
pop
adc
and
out
fistl
xlat
jg
mov
lea
and
imul
add
clc
xchg
in
mov
xchg
insb
xchg
clc
gs
into
add
mov
out
mov
mov
xchg
xor
mov
pop
clc
mov
das
imul
xor
dec
jp
out
ja
cli
fistpl
in
and
fstl
rorl
inc
mov
sti
jns
mov
or
cltd
out
test
adc
pop
in
pop
mov
inc
fldt
add
nop
shlb
std
fcomi
dec
dec
xor
cmp
push
mov
sbb
testl
dec
faddl
xchg
push
sti
lds
sub
repnz
je
std
mov
mov
and
rcll
mul
sub
mov
leave
jne
inc
jo
lods
pop
cmc
mov
jnp
cmp
rcll
xchg
filds
adc
mov
push
xchg
sbb
inc
loop
or
cmp
das
sbb
sbb
pop
outsb
and
adcl
adc
mov
xor
add
jae
add
adcb
mov
into
mov
mov
mov
mov
adc
cmp
imul
pop
or
popa
dec
push
mov
cltd
pop
popf
mov
mov
jbe
jne
scas
fmuls
ja
iret
les
test
movsl
dec
dec
cltd
mov
mov
daa
dec
mov
sbb
mov
dec
fucomi
fidivl
mov
icebp
push
and
pop
sbbl
mov
imull
bound
push
fists
jnp
iret
imul
add
sti
lea
push
mov
pop
aaa
out
fmull
add
cmp
mov
jb
mov
outsl
add
daa
cmp
dec
scas
loop
mov
ja
repz
cmp
add
jmp
lret
push
fisttpll
fnstenv
call
or
divb
das
mov
aaa
mov
sti
stos
stc
es
js
pop
xor
xchg
bound
cld
arpl
lds
subb
mov
mov
or
cwtl
mov
push
mov
sti
sahf
shrd
cmc
into
xor
xor
push
push
mov
push
lcall
lods
jmp
adc
jb
pop
dec
push
xchg
cmc
mov
pushf
sub
fildl
jne,pn
mov
addr16
lods
scas
movsb
push
nop
and
adc
clc
cmp
lcall
sti
rcll
add
sti
jp
insb
sbb
js
push
jp
into
std
and
inc
clc
push
iret
test
mov
inc
sbb
mov
mov
pop
fisttps
lret
and
out
fmul
nop
cmc
ret
ja
jmp
adc
xchg
int3
xchg
dec
mov
daa
jne
mov
insl
mov
sub
and
mov
push
daa
sahf
outsl
adc
aam
or
shlb
into
lods
xor
push
cmp
pushf
add
push
fildl
xchg
and
into
add
insl
nop
test
lea
loop
and
arpl
or
popf
lcall
dec
int3
repnz
arpl
int
in
loop
inc
xchg
mov
dec
jmp
loopne
lock
push
pop
dec
xchg
pop
mov
cmpsl
testl
xchg
sub
sub
push
out
mov
sub
inc
mov
je
es
sahf
mov
repnz
adc
outsl
mov
fsubr
aad
ret
sub
imul
popf
mov
push
inc
shll
lahf
das
std
adc
push
jns
xchg
mov
aaa
test
cld
pop
sarb
iret
push
mov
hlt
cmp
inc
cmp
aam
sbb
inc
jl
and
aas
addr16
push
and
mov
xlat
insl
fcoms
call
aad
xchg
xor
ljmp
push
push
or
movsl
sub
imulb
lods
icebp
xor
add
repnz
xchg
stos
in
sbb
data16
pop
sbb
xchg
sbb
mov
dec
inc
push
add
mov
imul
fwait
xchg
in
mov
mov
dec
mov
inc
pushf
mov
cmpsb
xchg
mov
divl
mov
fwait
in
les
gs
xor
bound
adc
nop
test
stos
xchg
pop
cli
pop
mov
out
lock
adc
pop
or
rorb
lret
rcr
or
imul
push
leave
jae
insb
roll
ret
mov
jo
adc
cmpsl
sbb
outsl
xlat
jbe
xorb
cmp
test
jmp
popa
and
fdivrs
cmp
mov
in
rolb
sti
clc
dec
jmp
pop
lea
ficompl
xchg
push
shr
dec
pop
or
push
jb
push
sbb
or
movsb
lds
xor
mov
xor
adc
add
ljmp
into
outsl
adc
mov
adc
and
ja
stc
in
shrl
mov
ret
popf
xor
push
pusha
pop
fwait
pushf
xchg
sbb
xchg
or
sub
icebp
subl
mov
push
iret
dec
into
mov
or
or
js
cmc
and
faddl
das
negl
mov
mov
fbstp
bound
and
stos
cmp
clc
rorb
jecxz
ficompl
loopne
push
sbbl
rcrb
xlat
mov
notl
mov
iret
and
imul
das
dec
adc
and
popf
and
arpl
push
dec
push
mov
cmp
in
xchg
mov
mov
test
rcrb
mov
cltd
mov
cmp
cltd
dec
fnstenv
cld
outsl
pop
and
call
and
mov
loop
in
or
out
and
xor
sti
stos
lret
xor
or
test
push
mov
lcall
leave
push
lret
sub
pop
push
xchg
scas
inc
fs
ret
andl
push
adc
dec
cmc
inc
push
roll
pop
inc
out
fidivrs
stos
lock
xchg
or
inc
enter
fbstp
pop
push
out
hlt
mov
xchg
fsub
dec
cs
je
jle
push
push
fcomps
pop
arpl
or
dec
jge
pop
and
fsubrl
jmp
sbb
push
inc
mov
mov
data16
xor
aad
xchg
or
sbb
bound
cmc
out
push
mov
xor
je
cmpsl
push
popf
jne
jmp
sbb
in
std
out
push
aaa
jl
cltd
adc
std
movb
lret
imul
and
test
mov
push
scas
ficompl
int
xchg
lea
push
sbb
push
cld
in
mov
aas
dec
push
push
in
imul
sub
outsb
lret
mov
sarl
adcb
sub
repnz
js
pop
xchg
incb
cmpsb
stos
ror
icebp
cmpsb
add
movsb
ds
mov
dec
test
adc
mov
loop
xchg
aam
enter
xor
add
jo
fistpll
addr16
rcll
aam
gs
mov
imul
mov
xor
shr
mov
test
lods
cmpsl
dec
mov
out
mov
xchg
incl
lret
loope
xchg
mov
sbb
pop
rorb
push
cmpsl
xchg
push
ss
push
es
cli
xor
jae
push
jl
add
sbb
in
repnz
push
adc
mov
addr16
mov
sub
mov
jno
fwait
xor
dec
push
out
ljmp
inc
cwtl
sbb
fadds
lret
inc
jmp
fldcw
jl
jmp
rcrb
and
mov
pop
call
cmpsl
dec
mov
data16
push
mov
pop
pop
inc
cmc
mov
stc
ja,pn
cmp
jmp
outsl
and
pop
jl
adc
jl
adc
cwtl
loopne
rorb
push
lcall
dec
sub
mov
add
out
test
ret
popf
push
out
arpl
insl
mov
fstpt
sbb
jns
inc
and
mov
in
pop
dec
mulb
dec
addr16
fdiv
ds
loope
sahf
popa
outsl
shll
jmp
push
jle
hlt
es
cmp
or
ret
les
iret
push
xchg
mov
jg
cwtl
popa
inc
les
adcl
xchg
adc
ficompl
shlb
adc
lcall
push
pop
ds
jl
test
mul
loope
xor
mov
sub
pop
in
out
loope
push
push
outsb
xchg
push
jp
fs
stc
cmp
sub
xchg
push
in
xchg
arpl
repz
sbb
enter
into
ds
mov
in
or
mov
sub
cmp
pop
scas
mov
out
lcall
cmp
or
sti
test
mov
jg
btc
pop
orl
jno
mov
and
sub
scas
inc
int
and
cmp
jl
lcall
fdiv
lahf
mov
out
jp
daa
mov
call
xor
mov
cmp
mov
sbb
cld
arpl
inc
sub
dec
and
lret
lahf
push
sub
mov
test
pop
test
addr16
les
mov
cmp
sbb
cmp
adc
scas
arpl
cmpsl
inc
sahf
mov
out
in
repz
loope
rorb
mov
cmp
insl
loopne
aas
add
jge
lret
and
and
outsb
mov
jnp
fs
lock
mov
loopne
mov
or
aad
sub
mov
ss
mov
in
sarb
cli
jg
xor
add
outsl
sbb
adc
sbb
xchg
mov
imul
dec
mov
insb
aas
out
dec
outsl
out
sbb
inc
pushf
or
loopne
popf
jmp
xchg
push
mov
ret
sub
clc
jo
outsl
jle
iret
dec
sbb
outsl
pop
xchg
cmp
inc
int3
mov
inc
dec
mov
sti
outsb
dec
das
jl
xor
loopne
push
push
xchg
in
pop
and
pop
sub
hlt
sub
xchg
inc
sbb
cmpsb
jnp
std
jp
fs
mov
cmp
xor
mov
cld
dec
add
imul
je
adc
add
mov
ret
in
aaa
xchg
repnz
cmp
or
test
jb
rorl
mov
adc
mov
pop
cwtl
mov
jmp
pop
adc
shll
lods
sbb
shl
or
jae,pt
sbb
xorb
add
cwtl
stc
xor
jns
pop
mov
sbb
pop
or
dec
stos
adc
pusha
repnz
mov
fdivrs
daa
loopne
stos
xor
xor
icebp
mov
and
mov
jle
jb
jbe
cmp
mov
jns
xchg
dec
and
cwtl
xchg
mov
popf
jle
dec
mov
dec
orl
fwait
and
jecxz
ret
sub
dec
ss
xchg
dec
xor
es
add
push
in
push
mov
cmpsb
and
mov
test
push
lds
cmp
mov
sbb
xchg
xchg
sub
jo
inc
fwait
cmp
jns
call
mov
les
fdivrl
sbb
test
add
adc
popf
cmp
cs
out
xchg
mov
daa
std
pop
pand
pop
push
out
push
stc
cmpsb
push
sbb
sub
mov
movsb
fiadds
dec
jp
mov
in
jmp
cmpsb
mov
orb
gs
sub
in
das
addl
in
fstl
pop
out
cwtl
insl
inc
lea
and
out
jg
fnsave
xlat
jmp
cltd
popf
cld
imul
pop
adc
inc
inc
ja
adc
sub
in
rorl
cmp
loop
mov
pusha
push
hlt
push
bound
stc
dec
rcrb
pop
roll
ficompl
test
out
sub
aad
mov
xchg
outsl
mov
add
out
sbb
les
aam
jnp
mov
ret
adc
push
ss
add
mov
fs
fnsave
imul
lret
jbe
mov
xor
mov
or
mov
xchg
adc
popf
adc
mov
ja
add
xlat
push
popa
bound
push
ja
pusha
xor
and
shrb
iret
push
dec
jge
cmp
mov
dec
ljmp
push
in
push
pop
outsl
mov
mov
mov
int
bound
les
or
cmp
cmp
ljmp
and
enter
mov
dec
hlt
popa
sub
dec
mov
mov
stos
ret
mov
lcall
xchg
or
out
sub
mov
mov
and
pop
sub
jp
ds
adc
sub
fsts
inc
out
xchg
push
lcall
inc
js
lahf
and
in
cs
orl
dec
xorl
push
push
loop
lret
mov
aad
xchg
inc
ficoml
mov
lahf
cmp
out
adc
lds
data16
sbb
mov
inc
push
xchg
push
pop
sbb
xchg
addr16
jno
adc
daa
cwtl
pushl
sarb
and
movsl
pop
out
push
push
dec
and
scas
mov
mov
stos
sbb
add
sub
icebp
and
push
push
in
adc
test
jne
fists
xlat
and
ror
pop
enter
ret
dec
xchg
mov
cs
mov
jno
sub
outsl
sbb
or
mov
int3
jge
lods
mov
movsl
or
mov
dec
xchg
pop
dec
mov
pop
sub
out
stos
call
aaa
testl
jl
or
stos
pop
jno
or
xchg
je
mov
jg
call
in
inc
rcr
sub
lcall
loope
xchg
in
inc
hlt
in
icebp
shl
push
pop
jae
fsubl
dec
mov
pop
pop
lcall
jae
jge
xchg
nop
das
xchg
or
orl
in
outsb
test
pushf
add
adc
push
lcall
mov
sahf
and
decl
mov
dec
xlat
rcrl
fwait
loope
mov
cmp
xor
mov
rcl
cmpsl
lcall
test
or
ret
push
xor
cld
rclb
jnp
cltd
push
test
sub
add
pop
scas
xchg
rclb
test
mov
dec
data16
fwait
movsb
mov
loopne
pop
inc
mov
insl
xchg
mov
or
jnp
push
sbb
hlt
scas
cwtl
js
les
inc
call
inc
push
mov
add
mov
fisubrs
add
xchg
imul
inc
popl
out
pop
fists
stos
add
scas
mov
mov
xor
cmp
in
xor
mov
dec
dec
push
mov
out
push
add
cmp
cmc
pop
mov
outsl
lds
mov
in
scas
pop
inc
testb
push
btl
mov
sub
jo
sbb
aas
lock
push
pusha
lds
push
mov
arpl
shl
dec
jmp
outsl
xor
push
les
mov
dec
insl
incb
lcall
fadds
iret
add
loop
push
rorb
fsubrl
movsl
cmp
aam
testl
push
dec
dec
rolb
daa
repnz
testb
xorb
and
adc
cli
xlat
outsb
ja
fidivrs
sub
shrb
sub
dec
push
adc
loope
in
sbb
test
nop
xchg
cmc
rcll
sub
leave
repnz
test
xor
cmp
xor
push
adc
mov
adc
xorl
jno
test
xchg
fildl
aad
inc
data16
pop
les
nop
pushf
and
lret
or
mov
sbbl
sub
dec
pop
cmc
in
sbb
cmp
std
dec
fucom
rcr
sbb
notb
mov
roll
xchg
sub
inc
insb
sub
push
inc
ja
push
js
sbb
je
jecxz
inc
xchg
mov
xor
cmovge
pop
and
dec
push
add
fs
push
je
inc
les
aas
frstor
push
aad
pop
in
std
ja
sbb
repz
pop
dec
push
cmp
aam
lret
xchg
dec
mov
ljmp
xchg
hlt
mov
sbb
xlat
lock
dec
bound
mov
imul
stos
or
jbe
mov
lods
mov
cmpsb
ds
jg
cli
xchg
clc
or
imul
mov
in
xchg
jl
outsl
std
pop
loope
imul
mov
popf
imul
mov
mov
scas
add
xchg
call
or
mov
and
sub
fisttpll
inc
cs
jno
cmp
mov
mov
popf
out
mov
ret
sar
cmp
fildll
ljmp
dec
les
mov
jge
add
cmpsl
nop
push
mov
or
lcall
dec
outsl
loope
inc
fstpt
loope
pop
shlb
lds
andb
pop
dec
and
les
jle
adc
in
jmp
outsb
fstpl
dec
sub
or
cmpsb
scas
cmp
sub
push
scas
int3
xchg
imul
dec
add
std
jmp
jno
and
lea
push
adcl
int
push
mov
cmp
ret
pop
and
mov
icebp
ret
adc
cmp
mov
sub
dec
test
lds
mov
shrl
gs
insl
pop
and
ja
sbb
and
pop
in
jno
ds
cmp
adc
sbb
out
stos
mov
jns
out
jb
mov
sub
idiv
push
mov
push
out
push
inc
hlt
xchg
cwtl
scas
clc
dec
lock
test
push
ret
pusha
push
jne
add
cmc
bound
cli
jo
testb
call
ss
jecxz
cli
jecxz
jbe
hlt
sbb
insb
cmp
or
fwait
and
dec
sub
mov
cwtl
mov
and
lds
mov
inc
pop
shll
fisubl
imul
lahf
aaa
mov
pusha
jle
imul
sub
or
outsl
mov
mov
fstpl
dec
adcb
ret
mov
pop
lock
push
and
mov
add
int
xchg
movsl
sub
les
jno
icebp
or
shll
push
pop
mov
pop
aaa
enter
sbb
mov
add
or
cmpsl
sbb
sbb
lret
lods
push
mov
rorl
sub
adc
add
das
pop
in
xor
mov
stos
xorl
xor
fwait
mov
pop
mov
rorb
and
and
adc
or
xor
test
cmp
bswap
in
sbb
out
inc
xchg
xor
cmc
lods
hlt
cltd
bound
adc
sub
xor
pushl
sbb
xlat
inc
or
push
ljmp
into
cmpsl
test
imulb
popa
mov
fwait
sub
jns
dec
sub
or
and
addr16
push
mov
jp
xchg
hlt
push
jecxz
test
popw
and
aam
pop
lahf
mov
xchg
pusha
fwait
push
mov
movsl
pop
mov
push
xchg
inc
cmc
cmc
fmull
jne
xor
cmp
jmp
sbb
and
xchg
mov
repz
cs
cmpsl
dec
int3
in
daa
or
mov
sti
or
mov
lahf
push
mov
addr16
cmp
adc
das
push
iret
cltd
pop
insl
mov
test
test
mov
shl
lock
mov
pop
cmpl
cli
or
rorb
dec
fwait
mov
sub
push
jle
in
lcall
adc
add
inc
cmp
and
iret
cmpsb
insb
mov
jl
pushf
inc
scas
push
pop
cmp
lods
mov
lea
daa
aad
aad
and
xor
adc
pop
mov
insb
xchg
cmp
inc
pop
addr16
mov
lds
xchg
mov
mov
pop
test
mov
bnd
imul
out
sub
sbb
xchg
xchg
and
jp
inc
fstl
movsb
popf
adc
loopne
aad
icebp
xchg
imul
jg
int3
jl
add
stos
lret
jmp
fwait
insl
sbb
cmp
test
xor
jge
adc
out
fistpll
mov
cmpsb
daa
pop
es
adc
cltd
out
adc
std
xor
cmpsb
xor
outsl
sub
dec
shr
pop
test
mov
jp
packssdw
cld
xchg
pop
incb
pop
fisttpl
inc
aaa
sar
addr16
in
test
jecxz
out
dec
sbb
mov
adc
fs
pop
ljmp
ds
inc
mov
push
xchg
jmp
ja
push
mov
mov
mov
rcl
sub
repz
push
or
sarl
push
sahf
ret
shrl
push
das
mov
lea
sahf
bnd
outsb
dec
and
ds
jecxz
dec
cmpsb
inc
jae
andl
test
aad
jnp
push
ds
add
xor
pop
jne
arpl
pop
inc
push
dec
pop
jnp
push
mov
js
jecxz
add
into
or
out
or
and
fidivrl
inc
add
popa
push
out
stc
xchg
jp
jns
pop
clc
mov
or
push
daa
jge
addr16
cmp
rcr
test
inc
sub
test
xor
mov
jecxz
jmp
xchg
and
push
xchg
mov
js
jp,pn
loope
call
mov
or
pop
loop
int3
cld
adc
and
gs
push
leave
ret
inc
mov
sub
xchg
stos
xchg
dec
add
sbb
flds
scas
xor
in
cmp
sub
notb
xor
sub
jmp
adc
add
iret
js
sti
ljmp
sub
sti
ds
add
inc
cmp
jae
mov
cmp
mov
mov
sbb
xchg
ror
add
pop
dec
outsl
mov
andl
mov
outsb
arpl
adc
cmp
fucom
add
hlt
scas
std
jecxz
and
jno
push
inc
pop
repz
or
cmp
dec
jl
jno
fisubrs
dec
sbb
mov
arpl
push
rcll
mov
mov
adc
push
jb
mov
aaa
in
xchg
pop
xchg
insb
add
push
leave
jmp
jb
arpl
les
or
cmp
jns
ljmp
dec
outsb
dec
cltd
xor
pop
std
pop
jnp
adc
int
jg
or
movsb
cmpsb
out
push
or
push
scas
cli
pop
push
fnstsw
jp
sbb
data16
mov
fisubs
loopne
pop
adc
aas
mov
daa
mov
jns
sti
stos
outsb
std
lods
push
mov
ja
sub
fidivrs
mov
mov
pop
clc
jmp
inc
aad
psubsb
dec
je
sub
insl
aad
jp
pop
cwtl
sbb
ja
dec
stos
push
repnz
add
pop
jg
mov
rcll
dec
and
dec
leave
mov
push
in
jo
cmp
mov
push
push
dec
jbe
testl
cmpsb
jge
sub
cmp
fwait
mov
cli
rcll
inc
and
into
inc
mov
insb
cmc
add
mov
jecxz
pop
mov
inc
push
add
fwait
adc
pop
xorl
sti
out
push
sub
inc
sti
icebp
stc
mov
pop
push
sub
in
ret
xor
loope
test
ds
mov
mov
scas
test
popa
in
jbe
test
add
jnp
test
jmp
cld
jbe
mov
mov
xchg
add
out
popa
jnp
mov
mov
xor
in
xor
pop
mov
gs
jne
lret
jl
cmp
ljmp
mov
jp
push
outsb
stos
or
imul
nop
stc
push
xchg
adc
add
mov
xchg
xchg
push
cmp
mov
insl
or
cmp
incb
rorl
sub
jmp
dec
add
nop
push
mov
xchg
outsb
insb
mov
out
aam
stos
jbe
push
mov
js
das
push
push
jbe
dec
and
test
aad
mov
repnz
xchg
or
dec
das
mov
inc
xchg
fs
pop
das
jo
loopne
mov
push
sbb
xor
push
mov
testl
and
leave
sub
jecxz
add
xchg
daa
inc
scas
rcr
or
dec
ds
es
cmc
pop
fnstsw
mov
loope
push
insb
je
pop
xorl
test
out
out
cmp
into
pop
or
aaa
xchg
jnp
shrl
mov
nop
les
lcall
jbe
es
stos
and
icebp
xchg
sbb
or
rorb
lods
stos
push
jecxz
jno
fcmovnb
cmp
mov
or
mov
cmp
jmp
jnp
mov
popa
xor
js
jb
test
int3
add
pushf
hlt
sbb
popw
mov
ret
and
aas
fsubrp
ljmp
insl
nop
test
inc
sub
cs
jno
mov
xchg
loope
outsl
cmp
jecxz
stos
inc
std
ja
jl
inc
jle
rolb
xchg
enter
xchg
cld
xchg
out
hlt
sub
popa
movsb
and
enter
mov
vmovups
je
idivb
mov
out
jmp
sbb
aas
and
outsl
add
cs
and
lock
jg
xchg
hlt
movsb
mov
xchg
lds
aam
in
pusha
xchg
les
or
les
push
lds
jno
lods
out
push
iret
cltd
call
ret
test
inc
jmp
adc
cwtl
stos
ret
adc
sbbl
repnz
sahf
add
cmc
mov
into
pop
xor
pop
xchg
or
jge
fldenv
cltd
pop
mov
jle
mov
sbb
lret
mov
xlat
xchg
jae
jle
push
shll
test
mov
das
fidivl
clc
jge
inc
shll
lcall
cmpb
cmc
div
mov
mov
in
sub
stos
sahf
decb
aas
loope
fbld
jl
inc
mov
inc
out
jne
xorb
enter
lea
mov
jg
jae
mov
inc
pop
fstpt
mov
pop
xchg
jl
jmp
outsb
xor
dec
jnp
mov
sqrtps
xor
xor
xchg
pop
jmp
jmp
lcall
sar
cmp
cltd
loopne
rolb
mov
shrb
outsl
jmp
jno
cmpsl
cmpl
jecxz
adc
mov
mov
pop
cli
outsl
cmc
cmp
cmpb
sbb
nop
out
jo
mov
rol
scas
leave
sbb
xor
add
int3
sbb
scas
or
inc
movsl
pusha
ds
xor
sbb
adc
sahf
popf
and
mov
dec
cmp
sti
mov
xor
into
fwait
adc
movsb
loop
dec
push
pusha
cwtl
jg
sbb
lods
push
jecxz
clc
pop
pop
leave
lea
repz
hlt
jecxz
stos
sub
lods
dec
movsb
fneni(8087
push
push
in
push
or
je
mov
mov
incb
fimuls
xlat
mov
inc
les
sbb
jns
lret
sarb
add
and
daa
pop
pop
cmp
cmp
ss
mov
mov
mov
dec
inc
pop
fadd
add
sub
jl
fwait
dec
repz
js
fcompl
dec
cmp
in
jbe
and
mov
shll
mov
and
aam
mov
xchg
fmul
pop
aam
out
sub
iret
mov
inc
lea
and
push
add
pop
cmpsb
imull
aas
cld
filds
pop
test
pop
mov
and
mov
add
shll
dec
sarl
mov
mov
push
cmp
lock
or
aad
adc
fdivrs
test
jae
pop
push
out
das
sahf
jecxz
jb
loope
call
pop
push
in
jo
iret
lahf
and
sbb
cmp
das
mov
lods
mov
jo
fwait
popl
adc
lcall
push
adc
adc
push
xchg
jmp
ret
clc
fwait
sub
mov
rcll
addr16
aaa
aaa
fwait
iret
sbb
std
mov
into
loope
mov
negb
sub
pop
xchg
sub
and
movsl
jmp
cs
int
pop
mul
push
popa
pop
js
inc
mov
and
or
pop
ja
dec
mov
cmp
aaa
push
insb
push
and
cmp
arpl
sahf
mov
sub
aaa
cltd
or
je
shlb
pop
stos
xor
repz
js
movsb
shlb
inc
xchg
cmc
out
cld
adc
call
mov
call
push
cmpb
mov
inc
enter
repnz
gs
sub
dec
fstl
insl
jl
mov
hlt
fsubl
mov
push
ja
repz
jb
push
aad
es
jae
and
add
sbb
hlt
shrl
or
xor
mov
jle
inc
into
xlat
nop
pop
cld
testb
fdivs
dec
dec
in
subb
push
pop
daa
divb
ja
nop
add
jbe
mov
cmp
push
xchg
mov
popa
mov
xchg
adc
and
pop
jg
std
adc
lds
sbb
fistl
rorl
aaa
mov
and
lea
icebp
ss
lcall
cmp
or
in
rcrl
push
jnp
add
clc
icebp
inc
fwait
jne
rorl
mov
xchg
mov
mov
pop
sbb
hlt
repz
jp
xchg
jo
inc
ds
rol
mov
stos
push
imul
cmp
js
arpl
jecxz
enter
aaa
js
mov
das
push
mov
jecxz
fwait
sbb
sub
pushf
push
inc
pop
xchg
push
add
mov
mov
scas
int
aam
sub
mov
inc
dec
inc
push
pop
or
mov
sub
mov
push
pushf
cmp
loop
fisubrs
ret
add
push
cmp
sub
adc
add
in
pushl
frstor
out
repnz
movsl
adc
sbb
push
jl
xchg
cmc
rcrb
inc
mov
stos
cmp
mov
test
int3
pop
in
lret
pop
cmp
jne
mov
js
cmc
push
test
add
mov
pop
inc
xor
or
sub
pop
pop
inc
sar
pop
and
jp
sbb
sbb
fbld
daa
ljmp
pushf
stc
xchg
lea
imulb
out
stos
sub
outsb
pop
movsb
cmp
jns
mov
pop
les
fidivrl
jne
insb
fstpt
shlb
jno
sub
jp
hlt
dec
mov
dec
mov
gs
dec
push
xchg
and
in
jnp
aas
push
mov
jp
or
sbb
pop
sub
inc
ret
xor
sbb
popf
ljmp
aaa
inc
adc
push
jbe
pop
lds
int
movsl
mul
dec
jns
popf
shrl
ret
jns
iret
aam
jnp
mov
bound
subb
push
add
push
andl
ret
or
hlt
hlt
or
movsb
adc
cltd
xor
divl
cmp
sbb
pop
xor
popa
adc
adc
sub
jg
and
xchg
cli
iret
or
push
push
mov
xchg
lods
pop
enter
jg
faddl
and
or
push
ret
or
addb
xlat
repnz
sub
setnp
xchg
and
dec
fs
jbe
xchg
les
mov
adc
mov
mov
out
cmp
in
iret
arpl
cmp
sahf
sbbl
mov
ja
cmpsb
out
inc
int
rclb
pop
cwtl
dec
jae
sub
repz
adc
mov
xor
rcrb
cwtl
fisttps
and
es
mov
mov
inc
faddl
dec
daa
in
orb
xchg
outsb
mov
scas
mov
stc
mov
gs
push
bsr
inc
imul
int
add
in
cmpsl
ja
push
mov
fld1
iret
aad
inc
je
push
ss
pushf
cltd
push
pop
jle
sti
out
mov
pavgb
dec
aas
jns
and
mov
test
fstpl
and
or
pop
push
or
jb
cmc
xchg
mov
lods
mov
dec
sub
das
dec
std
or
outsl
xor
out
dec
pop
jg
insb
sbb
sbb
sahf
orl
outsl
mov
out
xor
int
mov
xchg
or
cmp
loop
mov
outsl
adc
cld
adc
adc
push
or
in
mov
sbb
out
jne
test
or
pop
or
push
pop
or
push
or
cmp
adc
jns
in
sahf
mov
stos
ja
sbb
pushf
insl
push
sub
dec
insb
mov
cltd
iret
in
mov
pop
dec
fistps
cwtl
and
pop
mov
mov
xchg
or
sbb
push
inc
inc
pushf
push
push
jg
out
push
ret
pop
lods
cs
cwtl
fcmovnbe
push
add
leave
dec
test
mov
mov
inc
sbb
inc
les
movsb
jmp
or
push
add
data16
leave
add
fimuls
test
sub
data16
dec
insl
adc
or
test
insb
mov
pushf
pop
xchg
ds
aam
inc
cmpsb
shlb
cltd
sahf
sub
ss
popf
jmp
jb
adc
jl
mov
sub
mov
das
inc
out
mov
jmp
in
pop
dec
pop
mov
or
mov
cli
dec
mov
testb
mov
push
mov
push
loopne
push
lret
jno
cmp
xchg
push
push
imul
sbb
or
mov
mov
push
ds
add
movsb
xlat
bound
push
punpckhbw
cmp
mov
jns
cmpb
lods
movsl
cmpsl
xor
xor
loop
sbb
and
add
cs
cmpsb
jnp
sarl
jge
xor
hlt
outsl
mov
sbb
sbb
and
mov
xlat
or
push
ficoml
leave
sbb
leave
js
push
jb
sub
out
and
out
hlt
shll
sub
push
dec
add
cli
sub
testb
mov
mov
and
mulb
scas
inc
adc
inc
icebp
pop
fcomps
iret
jecxz
pop
jle
jmp
ljmp
leave
movsb
in
push
cli
sbb
push
lahf
inc
int
lret
mov
dec
sbb
lcall
imul
push
dec
shrl
adc
neg
daa
or
inc
pop
cli
repnz
cltd
repz
mov
daa
in
push
cmp
push
pop
es
int3
xor
in
mov
pop
and
xor
ljmp
in
data16
push
dec
mov
hlt
jg
lds
mov
push
pop
loopne
push
dec
mov
movsb
or
sub
xchg
mov
push
and
cs
push
in
js
lea
jge
adc
je
jmp
fcompl
std
int
fldenv
mov
cmp
push
idivb
add
addl
xchg
mov
jbe
scas
gs
orl
scas
xchg
xor
cmp
xchg
cmc
out
mov
ljmp
mov
rolb
inc
and
sahf
outsl
div
push
cmpsl
imul
and
sbb
jmp
push
add
sar
sub
mov
imul
pop
or
mov
out
sub
mov
push
std
and
cs
or
int
jge
mov
dec
pop
outsb
adc
mov
mov
enter
jmp
push
movsb
in
xor
inc
loopne
add
out
ja
jno
jg
cwtl
mov
add
cltd
or
and
out
imull
jne
pusha
sarl
and
shll
imul
leave
aad
loope
stos
cmp
lahf
lods
in
jne
mov
lock
xchg
leave
out
add
or
aad
shrl
xor
xchg
loopne,pt
nop
xchg
add
xor
inc
sub
aaa
mov
inc
fisubrl
mov
out
lret
int3
cmpsl
jge
add
push
ljmp
xchg
push
add
pop
popf
and
idivl
fdivrl
scas
fidivs
sub
out
sub
fists
dec
nop
ja
test
into
or
push
addr16
jp
mov
cmp
xchg
mov
mov
sub
mov
fidivrl
mov
add
std
test
adc
add
add
adc
fcmovnu
repz
ja
mov
mov
xor
sbb
inc
xchg
xchg
arpl
mov
sti
xchg
stos
add
mov
scas
dec
pusha
push
scas
lret
dec
repz
adc
xchg
mov
sbb
xor
adc
insl
aad
loope
lock
add
daa
hlt
xor
jo
scas
sub
jno
add
loop
pushf
or
add
cmpsb
imul
stc
out
rorb
ja
into
ds
sbb
insb
hlt
add
aas
or
cld
lds
xchg
mov
enter
sbb
dec
cli
xchg
pop
mov
inc
in
aas
iret
loope
in
subb
push
arpl
notb
sub
push
sub
xor
cmp
insb
sub
loopne
dec
mov
mov
aas
inc
test
fwait
negb
pop
out
mov
inc
mov
scas
push
xor
clc
lret
xor
shlb
outsb
xlat
jns
cmp
pop
imul
lret
cmovs
sub
xchg
ficomps
jle
mov
mov
cmp
sbb
add
add
push
loop
add
sbb
and
clc
aad
stos
roll
and
bswap
jae
pusha
enter
pop
out
jge
loop
xor
pop
insl
push
outsb
cld
sub
mov
push
xor
loopne
jp
lret
inc
xchg
addl
fisttpl
add
leave
dec
push
test
add
hlt
push
adc
movsl
adc
push
cmp
aad
les
ret
es
mov
xor
mov
or
aad
mov
insb
xchg
les
cmp
sahf
dec
fdivr
xlat
or
or
clc
cmp
addr16
pop
mov
int3
mov
mov
dec
xchg
push
pop
add
and
negb
out
popa
jae
test
sub
xor
pop
lcall
mov
sahf
fcom
adc
xor
push
gs
xchg
leave
cmp
add
xchg
mov
add
xorb
mov
rorb
mov
or
outsb
test
ret
xchg
imul
popf
mov
ja
pop
push
mov
jnp
sub
call
adc
fs
pop
sbb
ja
jmp
xchg
movsb
lahf
add
pop
adc
je
jge
adc
mov
bnd
orb
mov
xchg
aaa
mov
in
add
out
test
mov
pop
stos
mov
jns
dec
mov
addr16
and
jmp
jl
and
data16
in
lcall
xchg
pushw
out
mov
xor
pop
xlat
mov
mov
or
push
sbb
scas
sti
push
push
pop
mov
mov
or
pop
inc
xlat
add
in
iret
mov
push
stos
fwait
and
lea
test
sbb
sarb
iret
xchg
mov
pushf
rclb
push
dec
push
int
out
sahf
test
cmp
out
cmc
jmp
xchg
popa
sbb
jbe
pop
lds
adc
jb
jo
dec
jb
jae
xor
call
dec
xchg
dec
add
hlt
je
mov
cwtl
dec
fstpt
lock
jo
dec
es
and
inc
loopne
inc
sub
insb
out
or
sub
fwait
xchg
ret
xchg
imul
xor
mov
mov
push
push
lret
jle
loopne
aam
cltd
rclb
sbbb
pusha
ret
xor
inc
cmp
cmc
incl
dec
or
jp
dec
inc
movsb
and
or
xor
jmp
loopne
jp
inc
rcl
jge
mov
stos
push
cmp
jge
fs
jp
jg
inc
dec
pop
jge
addr16
xor
inc
stc
js
ds
mov
sbb
sbb
cmp
lds
test
mov
xchg
jo
dec
sub
iret
mov
mov
pop
inc
xchg
inc
repz
push
adc
adc
rcll
int3
mov
negb
mov
inc
int
arpl
loopne
jmp
rolb
js
mov
mov
shrb
dec
adc
pusha
or
sub
jmp
cmpsb
repz
mov
jns
pmullw
or
sbb
icebp
push
mov
dec
call
sbbl
in
in
test
lods
dec
test
popa
mov
mov
jmp
rorb
cmpsl
inc
adc
mov
lock
add
mov
or
xchg
lcall
scas
mov
mov
inc
aaa
inc
ficomps
les
popf
nop
in
addb
cmp
sbb
bnd
fbld
test
jmp
mov
lea
sbb
xchg
push
out
mov
xlat
stos
subl
jae
roll
inc
mov
mov
cmp
insb
xor
out
ja
outsl
lods
xor
inc
and
cld
xchg
loop
ss
push
add
xchg
cld
enter
repz
popf
jmp
or
sbb
or
mov
popa
scas
in
rcl
mov
jl
lds
cli
mov
xor
push
stos
inc
movsb
add
push
notb
fidivrs
imul
mov
insl
lods
ss
cwtl
mov
and
shlb
mov
int
mov
das
sbb
push
fdivs
andb
dec
push
rorl
sets
shlb
or
mov
mov
loop
dec
lock
iret
out
mov
sub
loope
pop
jnp
int
cs
ret
mov
in
pop
ret
pop
sub
xorl
sti
sub
and
cmpsl
push
mov
sbb
mov
cs
aaa
call
xchg
bound
xor
inc
and
add
cmp
cltd
jno
sbb
std
sbb
push
pop
add
pop
aas
out
sub
cmpsl
das
sub
sbb
stos
shr
sti
add
ds
mov
in
leave
xor
stos
incb
pop
scas
sbb
add
lahf
push
push
fs
xchg
ret
mov
cmp
fidivl
jns
cld
lret
jmp
mov
fs
popf
or
and
insl
cmp
pop
sbb
inc
jmp
and
xor
loopne
cmpsl
pusha
sarl
push
push
in
dec
and
inc
jne
push
add
fldcw
iret
shrb
fs
out
bound
and
fsubrl
in
push
push
into
sbb
aas
push
or
jnp
xchg
aaa
xchg
inc
pop
mov
lods
call
sub
pop
push
xchg
iret
std
xchg
in
cmp
ret
or
cltd
sub
cli
aas
pop
adc
mov
mov
aam
pushf
jmp
sbb
repz
sub
pop
or
mov
cwtl
jle
xchg
stos
aam
sti
jb
jo
cmp
sbb
cld
or
ret
mov
sub
cmc
outsl
mov
inc
mulb
imul
shl
arpl
inc
cmp
xor
arpl
cmp
pop
mov
sbb
push
scas
mov
ljmp
sar
imul
outsb
jnp
repz
popa
testl
in
inc
add
dec
mov
es
add
pop
dec
daa
jecxz
test
dec
fs
cmp
sub
mov
daa
loope
mov
dec
push
sbb
negl
fcoms
add
jl
mov
out
jge
mov
popa
sbb
cli
es
lods
rcl
or
xchg
mov
push
add
addb
int
or
ss
push
testb
jne
push
add
sar
clc
outsb
pop
sub
xor
rorb
cmpsl
cmp
pushf
xor
adc
sbb
sbb
popf
popl
int
jo
cwtl
cmp
data16
mov
test
inc
mov
shl
aam
leave
icebp
lahf
xlat
fmull
icebp
mov
cmp
xchg
pop
loope
jle
mov
add
cli
xor
mov
pushf
lods
stos
push
xor
das
mov
or
xor
mov
test
push
dec
inc
movsb
ljmp
xchg
loopne
addr16
xchg
cmpsb
jle
scas
dec
mov
xchg
inc
imul
mov
sbb
fwait
in
repz
test
out
lods
repnz
loop
test
ret
frndint
or
mov
inc
sahf
pop
xlat
sbb
xchg
push
repnz
inc
cld
shl
js
mov
pop
sbb
dec
jmp
mov
lcall
in
out
gs
inc
mov
cs
fdivrl
leave
repnz
adcl
lret
es
js
xchg
ret
push
scas
out
cli
pop
sbb
jge
mov
divb
pop
xor
enter
mov
inc
in
xor
in
mov
jp
mov
push
outsb
stc
inc
mov
stos
rcpps
clc
arpl
mov
sti
icebp
adc
cmp
jl
adc
pop
lea
iret
js
sub
and
leave
ret
aas
enter
iret
roll
scas
jecxz
orb
sar
daa
js
mov
lods
scas
jo
fnstenv
jb
outsl
push
popf
cld
add
idiv
iret
out
fwait
mov
fcom
mov
leave
xchg
xlat
mov
add
xor
fisttps
mov
std
cmp
jl
ja
jmp
std
int3
mov
mov
sub
sahf
aas
mov
push
das
or
sbb
lods
xor
dec
cmpsl
jo
push
sub
loopne
add
popf
in
enter
jmp
xchg
and
inc
dec
or
xchg
loop
jg
xor
inc
arpl
pop
jbe
pop
adc
adc
ret
mov
pop
and
inc
movhps
int3
lds
inc
jb
imul
cmp
cmp
mov
xor
mov
xor
pusha
repz
and
je
lret
push
sti
stos
cmpsb
pop
pop
ds
iret
lret
rorb
jne
bound
faddl
or
cmp
cmpsl
cmc
sub
cmc
or
lds
in
outsl
jmp
adc
jg
sbb
mov
sub
mov
or
dec
rcrl
ret
xchg
dec
dec
bound
xchg
jne
dec
xchg
cmpsl
aad
jmp
xlat
int3
sbb
sub
sbb
clc
in
test
pop
fidivrs
sbb
stos
mov
fcmovb
in
sub
mulb
xor
loopne
cmc
adc
adc
jmp
adc
fs
sub
mov
inc
pop
push
test
and
into
and
mulb
pusha
fwait
scas
pop
adc
outsb
sub
mov
fcmovbe
inc
iret
push
mov
lret
xchg
push
mov
aas
add
lods
inc
mov
daa
insb
add
pop
fprem1
frndint
push
or
comiss
pop
enter
stc
push
or
int3
das
pop
fstl
push
xchg
into
mov
mov
or
rcr
clc
dec
outsl
jbe
jmp
aam
inc
into
and
repnz
into
nop
stc
jecxz
mov
stos
and
sbb
in
fstps
fs
cltd
dec
stos
aam
ja
dec
xchg
ljmp
dec
inc
lahf
pop
cmp
lods
xor
add
cmp
dec
inc
imul
fsubs
out
xor
xchg
jge
push
dec
andb
ret
jb
dec
scas
out
jmp
xchg
xor
add
sbb
daa
xchg
cmpb
insl
rolb
xchg
add
int3
xor
nop
shrl
dec
test
adc
pop
les
xor
popf
loope
and
xchg
fsubrl
or
or
stc
repnz
pop
pop
pop
or
pop
pinsrw
mov
pop
fwait
sbb
xor
xorb
mov
mov
out
adc
push
das
mov
repnz
mov
sbb
inc
adc
insb
fidivrl
pop
mov
inc
ds
xchg
clc
jmp
xchg
pushf
xor
mov
mov
lret
jmp
jno
mov
fildll
cmp
sub
jnp
orb
into
in
mov
nop
pusha
mov
mov
in
cwtl
pop
rol
clc
sub
inc
test
inc
in
pop
mov
adc
gs
mov
dec
bound
ja
mov
adc
pop
lret
orl
mov
aas
jle
sub
lret
lahf
sbb
dec
pusha
cltd
mov
js
aaa
subl
sbb
dec
jns
das
cmc
mov
push
sub
xchg
jmp
imul
inc
dec
or
pop
pop
stos
xorb
xlat
push
shrl
stos
cld
jae
es
es
test
and
aad
mov
sbb
add
sub
cld
xchg
mov
xor
fwait
sub
mov
or
fdivl
adc
mov
mov
adc
mov
xor
or
push
call
stc
pop
mov
div
jge
outsl
ss
fistl
xlat
or
test
popf
addb
icebp
pop
sarl
fisttpl
sti
jmp
jnp
jb
fs
mov
cmp
aam
test
add
inc
push
punpckhdq
cmp
mov
fs
cmp
push
jb
decb
aam
test
xor
fisubs
scas
mov
mov
pop
push
clc
xor
jl
lret
daa
sbb
aas
jcxz
mov
fisubl
test
std
or
or
jmp
aas
dec
lds
inc
or
cmpl
dec
sbb
out
icebp
add
outsl
pop
dec
adc
sbbb
xor
retw
xchg
movsb
les
push
lcall
sub
mov
xchg
mov
mov
pop
sbb
sub
fwait
jno
pusha
bound
outsb
hlt
sbb
test
lahf
rcll
lods
daa
in
les
cmpsl
pop
pop
mov
sbb
fimuls
in
inc
in
clc
xor
ret
subb
adc
mov
daa
cmp
jb
mov
and
and
test
stc
pop
xor
xor
arpl
insb
sub
repz
leave
sahf
fldln2
leave
iret
les
in
and
add
movsl
jae
pushf
sbb
mov
sbb
mov
mov
iret
cmpsl
mov
mov
mov
imul
mov
stc
push
and
cmc
or
adc
test
and
mov
clc
sti
xor
sub
and
aad
ret
add
je
call
push
xchg
cmpsb
mov
imul
ffreep
inc
rcr
aam
fisubl
add
jle
xchg
mov
pop
int3
push
cmp
mov
sub
push
jns
push
dec
stos
cmp
mov
clc
data16
jmp
sbbb
dec
mov
andl
sub
adc
fst
xor
mov
bound
dec
jbe
xchg
out
lahf
push
inc
pop
outsl
and
js
cmp
jbe
xorl
cwtl
aad
mov
lds
cltd
mov
mov
sbb
stos
notl
xor
push
dec
mov
and
mov
shll
sub
in
subb
mov
movsl
push
cltd
jns
aad
jne
cs
push
out
lret
shll
out
mov
fildl
adc
shrb
pushf
imul
add
les
fistpll
ja
bnd
in
lret
xor
inc
out
ja
or
xchg
jbe
xchg
or
aaa
iret
dec
push
sbb
mov
jne
pop
add
dec
cmp
insl
jae
sbbl
les
nop
shll
dec
jmp
jae
dec
lea
cmpsl
sub
and
fdivr
cwtl
loopne
dec
movsb
outsl
mov
mov
push
mov
in
push
cmp
pop
and
dec
or
jbe
jle
xchg
add
subl
ja
fadds
pop
ffreep
dec
es
fucomip
adc
sbb
iret
mov
fs
adc
sbb
sub
push
fs
sub
fnsave
stc
inc
mov
fwait
pop
cmpsl
cltd
in
sahf
fidivrs
sbb
xor
mov
sbbl
mov
push
in
push
imul
push
push
lea
fdivrs
jae
inc
inc
sub
lret
lret
xor
cmp
adc
mov
push
roll
sti
or
mov
push
sti
pushf
dec
imull
jo
test
adc
sub
scas
lahf
shll
fwait
aas
sbb
stc
inc
outsl
and
add
and
mov
jne
ffree
imul
mov
shlb
ja
scas
repz
pop
nop
js
lret
mov
push
call
idivb
lea
sti
inc
inc
das
je
xchg
sarl
les
sbb
mov
fpatan
adc
std
out
cmpsl
xor
jp
lea
xor
adc
pushf
repz
jg
dec
or
mov
fs
xchg
sets
and
or
jmp
jg
test
jmp
mov
inc
mov
push
test
fldcw
pop
out
pop
lret
imul
fwait
adc
fsubl
imul
jbe
ficompl
push
fs
or
sbb
xchg
mov
or
add
fidivs
cmpb
xor
sub
scas
push
and
sti
adc
jg
inc
pop
add
adc
stos
cltd
sbb
mov
mov
out
mov
pop
addb
ljmp
and
lods
pop
jmp
ret
add
push
ret
mov
mov
clc
fiaddl
and
fs
adc
decb
xchg
movsl
sbb
push
xchg
mov
mov
insb
jo
add
enter
jne
loope
or
xor
push
and
loopne
lds
repz
add
xchg
and
or
sahf
inc
sub
imul
adc
xor
sbb
pop
xor
pop
rcll
sbb
out
aam
mov
adc
and
lcall
dec
and
scas
pop
shr
mov
daa
imul
pop
jbe
inc
mov
cmp
fucomi
sbb
push
fidivrl
clc
cmpsb
inc
add
add
adc
mov
sbbb
dec
adc
mov
lret
inc
lock
push
cmp
mov
popf
push
mov
sti
mov
mov
add
out
mov
or
pop
mov
mov
hlt
push
mov
jmp
in
cltd
test
test
dec
fisttpll
insl
or
adc
mov
push
sub
jecxz
xchg
test
push
or
or
xchg
inc
sar
outsb
jl
call
addr16
sub
and
daa
repz
jmp
sarb
jo
sbb
cmp
inc
iret
dec
push
in
mov
mov
test
push
stc
ficoml
ret
je
push
push
and
dec
xor
sbb
jl
pop
negl
xchg
repz
pusha
ret
lds
dec
sbb
mov
mov
cmp
or
or
mov
insb
int3
sar
fwait
xchg
loope
aas
loop
xchg
add
and
pop
dec
mov
lret
leave
mov
xchg
fbstp
mov
xchg
loop
ljmp
mov
loope
xchg
dec
repnz
mov
ja
pusha
mov
xor
lcall
out
add
rcr
nop
mov
js
into
push
adc
push
adc
cmp
sarb
xorps
lea
fstl
inc
pushf
dec
sbb
mov
push
sub
push
dec
sbb
and
xlat
test
icebp
cmc
mov
gs
dec
ss
mov
jbe
jl
or
andb
iret
mov
movsl
add
roll
pop
icebp
fistpl
cmpsl
mov
push
jle
iret
pop
xchg
pushf
pop
mov
cmpl
xorb
adc
inc
out
frstor
pop
mov
xchg
push
sbb
jge
jg
fdivp
push
int
andl
xor
in
fdivs
ja
jnp
mov
xor
pusha
aad
js
je
test
mov
adc
add
mov
leave
adc
adcb
test
lds
dec
loopne
mov
into
xor
sar
int
inc
les
push
xor
mov
inc
jmp
fbstp
negb
push
jae
data16
adc
pop
and
out
jns
aad
gs
repnz
sub
lods
jmp
cli
pop
sarl
inc
cltd
adc
sbb
mov
inc
dec
das
jnp
fldt
movl
lea
gs
push
push
mov
jp
sbb
rcll
and
mov
out
fcoml
lods
lret
lock
std
and
arpl
incl
outsl
cltd
ja
or
mov
cmp
adc
icebp
lret
jmp
add
jns
push
mov
ficomps
lret
fwait
push
test
mov
push
push
mov
sub
jnp
scas
in
out
dec
cmpsl
lock
mov
pop
ret
iret
adc
jl
in
sbb
test
jae
cmc
popa
lds
lret
mov
aaa
movsl
pop
icebp
xor
pop
jg
mov
inc
addl
jmp
or
sbb
fldt
scas
sbb
mov
into
push
int
push
mov
mov
sub
pop
shl
xchg
stos
or
pusha
xchg
fdivr
lea
push
cwtl
aas
fwait
rclb
out
out
cmpb
sub
dec
int3
dec
mov
jl
popf
or
popa
xchg
mov
mov
mov
xchg
mov
jg
lret
imull
stc
mov
mov
daa
jne
push
dec
jle
jns
movsl
pop
xchg
dec
jae
adc
pop
popf
aas
inc
out
jmp
loopne
mov
sbb
fwait
pop
xor
leave
xor
add
mov
imul
inc
lods
push
out
shll
in
xchg
push
mov
shr
incl
arpl
dec
cmp
sub
cmp
jae
es
mov
xchg
jnp
adc
pop
das
pop
fs
or
out
inc
rcrl
je
in
insb
lret
and
fnstenv
arpl
addr16
shlb
scas
sbb
and
or
xchg
mov
jb
fisttps
xor
jg
ljmp
dec
rcl
mov
pop
sub
jmp
ja
dec
outsb
scas
scas
fisttpll
outsb
mov
rcl
aaa
test
dec
cmpsb
insb
lahf
sub
repz
jge
pop
pusha
mov
fldcw
sarb
xor
push
ret
mov
sbb
and
jp
add
cmc
dec
cmp
dec
in
test
lret
or
mov
popf
loope
push
and
mov
dec
into
fwait
and
cs
push
les
ret
movsb
clc
cmp
cmp
and
mulb
cmp
add
jge
int
mov
lock
shll
push
out
sbb
mov
movl
repz
out
ljmp
cmp
movsb
push
scas
dec
add
addr16
lods
dec
sub
jmp
xchg
adc
cwtl
nop
adc
cmp
popa
into
pop
test
and
testb
test
cli
dec
ljmp
lock
mov
loope
sbb
addr16
js
addr16
cwtl
mov
or
stos
and
or
ret
negb
xor
push
sti
sbb
mov
outsl
ficoml
jecxz
popf
or
mov
iret
shlb
or
es
arpl
dec
push
fisubrl
sti
flds
pop
pop
shrb
fadd
or
mov
cmp
outsl
pop
repz
mov
dec
iret
pusha
add
mull
push
pop
push
pop
movb
and
xchg
pop
and
mov
loope
xchg
jns
jno
scas
cmpsl
fcoml
xchg
sub
xor
daa
idiv
xchg
into
sar
cmp
xchg
cmc
pusha
mov
xchg
mov
sahf
inc
adc
mov
test
aas
xchg
pop
lods
shlb
add
ja
sbb
sub
sarb
and
in
ja
mov
push
mov
xchg
push
mov
ret
pop
push
inc
data16
mov
dec
push
pop
pop
push
int
inc
lds
sub
sbb
jb
in
adc
aaa
stos
gs
xor
es
cltd
shll
rclb
gs
jb
je
xor
mov
dec
xor
inc
rcr
push
adc
cmpl
scas
orl
ret
xchg
mov
add
jns
aaa
or
mov
sub
roll
xor
mov
mov
mov
adc
dec
fdivr
test
add
inc
cmpsl
leave
mov
jae
test
lret
cmp
pop
ljmp
repz
stc
jns
push
out
shrb
mov
icebp
sbb
in
lret
mov
or
fmul
and
xchg
jmp
add
pop
jno
cmpb
lahf
mov
or
sahf
or
inc
das
insb
ds
int
lods
gs
pop
cmp
mov
sbb
shl
loopne
push
rolb
and
mov
les
test
cmpl
stos
xor
inc
clc
xchg
dec
pop
add
aaa
popf
jg
cwtl
daa
mov
repz
cmpsb
fs
inc
mov
sahf
jno
fcoml
add
xchg
cmp
sub
xchg
loopne
push
adc
xor
adc
iret
je
sub
in
cmp
dec
add
jb
or
jmp
jb
addr16
dec
incl
movsb
lods
sbb
dec
jmp
in
mov
cs
pop
push
jae
js
and
stos
and
fucom
int3
sub
add
adc
imul
cmp
inc
xlat
shlb
sbb
mov
sbb
movsb
out
or
aam
sti
push
inc
daa
pushf
sahf
lahf
mov
ljmp
imul
push
pop
nop
clc
hlt
mov
imul
mov
clc
fwait
and
mov
movsb
test
lock
fldcw
push
jge
push
inc
mov
xor
jge
mov
movsl
jno
adc
dec
in
sbb
es
dec
xchg
add
mov
sub
cmpsl
and
into
sbb
shlb
add
and
inc
add
outsb
mov
dec
dec
addr16
dec
es
mov
cli
out
lods
mov
or
hlt
inc
and
mov
cmp
ds
xchg
cmp
dec
or
inc
nop
into
jbe
or
jno
lret
stos
push
cld
push
outsb
push
cltd
push
ret
sbb
push
or
sar
xchg
sub
notl
lahf
ret
sub
mov
mov
xor
adc
jb
or
std
pop
fstpt
stos
pusha
loop
inc
cmp
or
cmp
dec
sub
jno
pop
es
les
inc
fmuls
aaa
push
movsb
jne
rolb
mov
add
cs
cli
push
sti
mov
outsb
loope
mov
sub
push
mov
test
in
push
push
inc
std
cmpsl
sub
sub
mov
or
jmp
or
out
push
mov
je
call
and
pop
aaa
dec
xchg
push
sbb
dec
dec
insl
popa
sbb
pusha
in
sbb
and
pop
pop
xchg
add
sub
lahf
or
add
lods
mov
lods
insl
push
xchg
sbb
iret
ds
popl
notb
mov
jge
inc
loop
push
cmc
dec
inc
and
add
mov
sub
test
jmp
repnz
sub
in
jmp
ret
rol
out
push
xchg
jle
cmpsb
rcrb
push
cld
ficompl
les
cmp
je
jge
out
std
adc
lret
add
xchg
cltd
push
dec
hlt
imul
sbb
pop
mov
fs
jmp
enter
outsb
lahf
out
push
xor
in
or
fbld
mov
out
push
jno
inc
pop
aam
xor
or
push
pop
jmp
aaa
fcmovbe
repnz
fwait
mov
rcll
add
scas
cli
push
jo
js
lock
mov
lret
mov
iret
pop
in
inc
testl
push
mov
arpl
notb
aam
xchg
jg
mov
mov
push
xchg
cmp
mov
pushf
jns
xchg
cli
dec
sahf
ds
rcrb
call
sarl
rorb
repz
xchg
orl
cmp
mov
insb
mov
mov
sbb
xchg
test
mov
ss
xor
rcll
xchg
mov
add
and
into
dec
in
and
jns
std
aaa
stc
pop
lcall
cs
fnstenv
adc
std
xchg
pop
cld
adcl
adc
jno
and
pop
jae
jno
dec
mov
and
jmp
dec
imul
and
enter
iret
xchg
loop
adc
cmp
in
sub
and
mov
scas
add
iret
out
int3
rcl
pusha
fisttpl
mov
or
lahf
test
jl
mov
push
out
inc
dec
or
stc
iret
dec
in
add
xchg
pop
mov
sarb
je
or
mov
push
mov
fldcw
xchg
test
pop
jbe
mov
cmpsl
cmpsb
sbb
mov
leave
in
fwait
adc
call
xchg
out
add
addr16
hlt
mov
push
mov
cmpsl
enter
sub
jl
inc
xor
lret
mov
mov
pop
addr16
fcmovnbe
aam
aam
lods
sub
nop
dec
pop
ret
adc
repz
ja
xchg
cmpsl
sbb
insl
mov
clc
cmp
lea
ffree
inc
adc
mov
cli
test
jae
pop
or
clc
enter
std
sub
inc
inc
jo
dec
gs
outsb
out
ljmp
push
pop
in
insl
fcmovu
push
mov
addr16
pop
push
pop
and
repz
pop
fdivl
cmpsl
push
mull
or
add
stos
xchg
and
mov
out
int
pop
jnp
dec
jns
and
xchg
mov
pop
push
inc
inc
icebp
js
add
popl
mov
mov
push
dec
scas
arpl
std
jne
lds
aaa
jle
lret
scas
cs
add
jecxz
sub
rcl
jl
pop
js
or
outsl
nop
mov
aas
pop
fisubs
das
icebp
mov
inc
pop
fwait
out
xor
pop
in
push
cmpb
push
fildl
sarl
adc
and
insl
fldenvs
cld
push
push
xchg
cmp
jl
pop
imul
or
xor
jle
or
jmp
cmp
sbb
sbb
aam
jecxz
or
cs
xor
mov
push
retw
in
mov
jb
call
aaa
xchg
xchg
fstps
cli
push
mov
imul
jmp
add
loope
xchg
fcmovnu
mov
adc
in
psubsw
or
xor
je
cli
fcompl
push
sub
xchg
mov
adc
fnstcw
xor
pop
fcmovu
mov
fdivl
pusha
dec
ss
push
pop
push
rcr
cmp
add
mov
lret
mov
adc
sbb
iret
inc
lods
pop
pop
mov
mov
or
add
aad
popl
stos
fimuls
sbb
dec
or
subl
mov
xchg
or
call
add
add
pop
dec
hlt
imul
popa
mov
in
cmp
pushf
fnstcw
aas
dec
add
cmc
notb
push
lret
pop
test
add
jmp
jmp
fadd
pop
cmpsl
mov
lods
test
and
pop
movsb
inc
pop
cmpsl
mov
jne
repz
xor
mov
mov
movsl
and
es
pop
lock
iret
imul
call
arpl
dec
ret
in
repnz
in
push
mov
int
sti
mov
dec
test
xchg
pop
test
imul
loop
sub
hlt
lret
or
sti
xor
and
add
cmc
or
pop
call
stos
pop
out
or
cli
mov
sahf
nop
mov
jnp
shrl
ds
mov
mov
popf
stos
mov
aam
shl
sbb
arpl
fsubs
sbb
xor
pop
jno
stc
xchg
sahf
cmc
test
or
add
std
call
mov
out
aas
push
nop
lcall
inc
enter
incl
push
sbb
and
int3
and
enter
leave
ror
mov
ret
cmp
xor
aam
outsl
into
adc
pop
sbb
mov
test
and
jl
push
cmp
add
pop
aas
jp
xchg
scas
shlb
pop
jp
fcom
lock
xchg
cmpsl
aad
ret
mov
sbb
addr16
xchg
xorb
data16
jne
mov
adc
inc
cmp
jnp
mov
cmpsb
dec
rcrb
xchg
shr
mov
fldl
jle
push
dec
jns
push
jb
mov
dec
jmp
xchg
subl
inc
int3
xchg
and
mov
sub
mov
inc
imul
push
orl
sbb
inc
inc
push
rorb
push
xchg
and
iret
inc
stc
hlt
cmp
cmpsl
jecxz
daa
mov
push
adcl
int3
imull
adc
cmp
cld
imul
insb
mov
push
aad
add
cmp
cmp
sbb
add
xchg
enter
addr16
jmp
xor
mov
mov
mov
xchg
jl
xor
xchg
jno
cmp
stos
sbb
xchg
sahf
and
xlat
inc
jnp
sbb
stos
dec
mov
xchg
inc
or
gs
imul
aaa
or
jp
and
loop
fildl
pop
mov
roll
pop
jl
adc
inc
lock
pusha
add
or
push
fs
jp
mov
orl
mov
movsl
dec
imul
inc
lret
push
test
xchg
inc
push
adc
jo
adc
push
sub
repnz
scas
jno
jno
int3
popf
jmp
sub
xchg
lcall
and
in
xchg
mov
push
ficoml
sub
lcall
jg
ret
add
aaa
xor
dec
inc
xor
rcll
hlt
mov
xchg
or
xchg
sbb
decb
xchg
mov
insb
lcall
dec
int3
xchg
into
dec
icebp
add
insl
divb
cs
sbb
inc
nop
sbb
push
or
test
mov
call
call
adc
lods
push
iret
add
sub
dec
mov
mov
push
in
pop
mull
jne
pop
push
add
test
cs
sub
jmp
fisubrs
inc
adc
inc
xor
cmp
stos
mov
mov
pushf
jno,pn
ss
ja
ds
mov
imul
and
hlt
outsb
and
movsb
inc
cmp
pushf
xor
pop
sbb
lea
and
mov
loopne
scas
mov
loope
sbb
xor
push
jp
ret
movsl
les
mov
and
pop
movsl
rcr
scas
adc
shll
fsubr
inc
fwait
jno
dec
hlt
cmpsb
cmp
je
cwtl
jno
test
mov
jnp
dec
sub
push
test
mov
bound
dec
je
push
pop
fidivs
lods
jae
pop
scas
push
stos
orl
aam
add
cmp
add
add
jg
adc
and
pop
push
in
mov
ja
push
pop
data16
push
push
adc
cmp
xor
or
inc
test
mov
or
nop
push
xchg
pop
cmc
jb
addr16
cmp
stc
int
and
or
out
pop
jns
inc
mov
lahf
xor
ja
dec
or
ror
iret
jae
lret
sub
mov
jb
lods
xchg
int3
pusha
sbb
fcmovnbe
lcall
sub
and
cmp
std
mov
fnstcw
mov
loop
dec
insb
or
or
in
fwait
dec
mov
mov
jbe
arpl
sbb
lret
push
das
test
movsl
adc
adcb
sbb
jbe
xchg
jmp
insb
xchg
add
sbb
mov
sub
cmp
mov
inc
ljmp
pop
sbb
fstl
add
inc
inc
in
mov
sahf
mov
lcall
adc
lock
aaa
movsb
rcrb
fidivl
scas
ss
loope
jo
push
xor
pop
dec
xlat
mov
cmc
cs
shll
push
sarb
dec
lock
jecxz
movsb
ret
aam
and
pop
arpl
inc
dec
shl
shll
add
mov
sbb
pop
scas
inc
or
and
out
fnstenv
dec
fcmovbe
or
std
cmp
loop
out
cld
sub
lods
clc
push
dec
int
test
aam
in
sub
fstpl
jge
mov
hlt
xor
addr16
dec
sbb
ljmp
push
pop
pop
in
adc
cltd
mov
js
adc
pop
adc
lods
mov
loope
rorw
mov
mov
cwtl
mov
out
xchg
push
or
es
push
loopne
pop
add
add
mov
data16
dec
mov
xchg
popa
inc
jbe
mov
iret
mov
aam
addl
in
rolb
lret
call
push
or
cwtl
sti
sbb
dec
dec
sahf
cmovne
push
push
aad
pop
inc
data16
add
jl
sti
sahf
xchg
and
jbe
pop
addb
push
aaa
in
mov
loopne
das
and
pop
xor
pusha
push
ficoml
shlb
sub
jne
pop
inc
inc
gs
push
inc
adc
lea
and
test
js
out
pop
xchg
jmp
push
mov
cs
cmp
xchg
pushf
mov
test
shrb
popa
call
add
jmp
dec
dec
mov
or
sub
cmp
jp
mov
loop
insb
scas
rorb
shrl
or
shrb
rcll
fbld
movsl
push
out
insl
addb
call
data16
fimull
sub
add
jae
adc
cmp
je
jbe
xor
iret
data16
imul
popa
or
dec
lret
inc
icebp
and
stos
loopne
iret
jae
or
int
xchg
dec
sbb
outsl
mov
mov
divl
outsl
div
ret
pop
and
notl
and
fcoms
lcall
aas
mov
imul
inc
xlat
test
or
fists
imul
or
sbbl
shlb
lcall
outsb
ljmp
cmp
pushf
test
in
pop
push
pop
stc
fildl
cmp
mov
dec
jg
sti
cmc
mov
or
mov
inc
sbb
pushf
ret
xor
inc
jnp
icebp
mov
fsubs
cmp
mov
jg
and
jl
and
clc
mov
popa
xchg
xchg
pop
ss
push
daa
and
faddl
lock
mov
cmpsb
aas
mov
sub
das
ljmp
cmp
je
adc
jns
fnstenv
or
ja
mov
or
push
pop
or
lds
lods
js
xchg
add
pop
or
cmp
mov
mov
int3
loop
aaa
pop
jae
or
push
fdivs
adc
mov
xchg
dec
jbe
scas
mov
xor
dec
push
fsubrl
jmp
fwait
in
mov
sbb
cmp
out
or
pop
cmp
xchg
push
shll
jne
test
cld
fwait
or
ret
xor
aad
aad
inc
xchg
and
stos
add
sarb
xchg
outsb
and
por
in
xchg
adc
cmp
pop
les
call
mov
leave
or
aas
jl
pop
sbb
jp
out
rolb
add
push
add
mov
addr16
adc
inc
xchg
push
mov
xor
arpl
lds
adc
dec
xor
mov
mov
test
adc
cltd
xor
std
dec
xchg
mov
notl
sbb
imul
xor
dec
jbe
rorb
push
dec
adc
shll
mov
sahf
add
fdivl
loopne
ja
je
fimuls
or
outsl
out
imul
imul
stc
push
add
call
ja
call
push
jno
jle
into
sahf
fmull
aam
pop
mov
fwait
sbb
ljmp
add
sbb
xchg
push
dec
xchg
imul
dec
jns
dec
pop
out
add
push
out
sbb
clc
pop
daa
sbb
mov
mov
mov
mov
pop
repz
xchg
test
hlt
data16
dec
pop
outsb
test
sarl
jns
popa
lahf
icebp
lret
repz
sub
jle
pop
sbb
orb
pop
int3
dec
call
jg
pop
insl
sbb
push
cmp
xchg
and
adc
ret
popw
cmp
inc
mov
movsl
mov
sti
dec
addr16
sbb
fists
shlb
mov
fidivs
outsb
rcrb
sbb
sub
fs
sbb
xchg
lea
pop
pop
mov
enter
outsb
cmp
lret
aaa
mov
nop
int
mul
cmp
push
scas
push
push
je
mov
push
adc
adc
lahf
aad
daa
and
push
adc
adc
adc
pop
in
popf
call
rsqrtps
out
sub
ds
mov
in
inc
int
aam
popa
fsubrl
lods
mov
xchg
ret
in
cmp
xchg
mov
cli
pop
daa
je
lcall
push
xor
inc
inc
ljmp
stc
pop
jl
cmpsb
xchg
jl
fs
cmp
add
lcall
bound
stc
stos
ret
test
mov
mov
inc
jg
cmp
xchg
adc
lcall
insb
jecxz
push
movsl
xadd
roll
loope
pop
mov
and
dec
xor
insl
jns
orl
test
stc
das
lahf
fwait
insl
stos
mov
mov
nop
add
mov
aaa
out
arpl
mov
imul
jno
daa
sub
insl
mov
cltd
leave
dec
inc
aam
inc
in
adc
sbb
mov
cli
call
dec
cmp
movsb
cs
mov
inc
jl
insb
ss
jecxz
pop
in
mov
cmpl
inc
and
jno
jmp
cmp
fisttps
ret
fldenv
int3
and
aas
mov
les
je
outsl
imul
inc
mov
mov
fidivs
pop
pop
mov
negb
push
pop
cmp
pop
hlt
lock
cwtl
mov
aam
jl
inc
or
cltd
xchg
int
notl
stc
bound
js
pop
call
and
cmp
test
test
loope
sarb
jge
arpl
es
imul
lret
adc
out
mov
inc
popa
and
jns
pop
and
push
popa
cmc
push
sub
mov
xchg
jg
and
inc
jmp
cmpsl
das
js
rcrb
lock
lcall
xor
dec
ret
out
jnp
pop
inc
dec
imul
movsl
mov
pop
lea
inc
ret
xor
das
lret
lea
andb
test
mov
fucomip
nop
add
inc
lock
les
xor
jne
imul
pop
xor
shl
int
fdivrl
push
test
add
jl
nop
mov
dec
pop
mov
imul
jno
iret
insb
ret
and
adc
das
sub
call
outsl
push
xor
ss
push
mov
pop
push
sub
adc
in
mov
clc
xor
add
xchg
stos
shlb
pusha
out
fwait
lret
mov
mov
mov
ss
xchg
mov
push
mov
mov
ljmp
insl
das
sub
cmpsl
scas
cmc
cmp
ja
inc
mov
mov
test
movsb
ss
mov
lods
insb
push
mov
inc
dec
inc
mov
push
imul
outsl
sub
adc
pusha
aad
dec
pop
mov
ficomps
out
sub
dec
pop
dec
push
ljmp
fsubrs
gs
jno
or
and
loope
arpl
call
scas
or
and
fcmovnbe
add
xor
lods
xchg
jb
jmp
gs
push
jg
rclb
icebp
into
adc
mov
pushf
stos
movsb
stos
adc
dec
stos
dec
cmpsb
and
push
cmp
pop
notl
adc
lcall
and
aaa
mov
sbb
sub
dec
cmp
push
nop
mov
cli
xor
gs
jnp
pop
scas
pop
push
sub
xchg
cmpsl
pop
andl
mov
xor
ret
dec
fimuls
mov
lcall
mov
repnz
cmp
movsl
inc
mov
inc
popf
sub
dec
or
mov
repz
sub
mov
ljmp
lods
or
xchg
sub
jbe
cli
call
fidivs
mov
mov
jp
in
or
lds
push
subl
push
mov
jg
push
faddl
cmpsl
xchg
out
mov
adc
mov
mov
mov
xor
push
pop
push
push
rcrb
shll
popf
add
sub
adc
sbb
aad
pop
sbb
stos
clc
push
push
inc
mov
jmp
outsl
adcl
push
add
add
jle
xchg
pop
pusha
ds
adc
sub
lret
js
xor
dec
mov
sbb
inc
in
pusha
movsb
jae
mov
mov
mov
xor
push
xlat
imul
adc
aam
jae
push
cmp
push
jecxz
xor
aas
xchg
inc
in
cmp
mov
sbb
ret
sti
out
cmc
pusha
out
and
test
pop
lcall
ljmp
aaa
shll
lds
inc
call
movsl
cld
xchg
inc
out
pop
orl
int
in
add
xchg
aas
mov
negb
fcoml
mov
sbb
shll
xchg
aam
jecxz
push
xchg
imul
push
jmp
call
push
mov
and
setno
sahf
outsb
lahf
or
sbbb
inc
rcr
addr16
pop
jne
mov
add
imull
stc
mov
aad
jbe
xchg
xor
xchg
sahf
icebp
enter
into
je
outsl
xchg
mov
pop
aaa
jge
inc
fs
jecxz
mov
addl
jne
xchg
pop
mov
sub
ja
int
int3
adc
push
mov
or
subb
cmc
mov
push
fdivr
sbb
jle
test
stos
push
cmp
xlat
mov
sub
stc
imul
or
in
mov
dec
sahf
ret
divl
add
or
jmpw
pushf
jne
sub
cld
cmp
lock
aas
xorl
add
subl
adc
lock
icebp
cmp
and
jp
mov
inc
mov
sti
cwtl
dec
inc
out
shrl
xlat
mov
rcrl
outsl
cmp
push
lret
sti
scas
xchg
mov
push
push
fildl
movsb
jg
adc
mov
mov
jle
hlt
xchg
repnz
mov
mov
mov
mov
cmp
push
mov
xor
scas
mov
mov
jb
loope
jmp
sub
mov
xchg
mov
outsb
or
push
mov
std
seta
jecxz
rolb
mov
test
scas
repz
or
pop
icebp
sub
fs
add
xchg
push
mov
daa
sub
inc
and
jmp
hlt
sysret
dec
addl
mov
and
outsb
rclb
push
mov
rclb
and
rcrl
push
mov
sti
push
aad
lds
aad
es
push
inc
mov
rcl
cs
inc
inc
into
push
cmpsb
aaa
jle
ficompl
mov
movsb
jmp
mov
rclb
shlb
xor
call
sbb
psllw
ja
imul
aaa
mov
mov
je
add
inc
aas
cmp
dec
int
sahf
insb
lods
shl
cmpsb
aam
mov
and
adc
clc
out
lods
ret
shl
jnp
into
insb
aad
rcrb
popf
imul
lahf
shll
out
xchg
mov
pop
or
push
xchg
loope
dec
fistps
cwtl
add
push
push
adc
dec
icebp
add
iret
stos
cmp
fwait
insb
or
insb
repz
mov
lds
pop
mov
mov
sub
filds
add
dec
mov
ja
pop
daa
add
mov
mov
pusha
pop
mov
cwtl
addl
lcall
scas
clc
xor
movsb
mov
cli
push
fldt
dec
xchg
mov
stos
idivb
adc
jge
stc
addr16
clc
mov
data16
jne
popf
lcall
nop
xor
inc
imulb
sbb
push
pushf
cmp
js
pushf
ss
sbb
imul
ljmp
inc
mov
fisubs
pop
leave
decb
cltd
lcall
int
sbbl
sbb
arpl
mov
pushf
adc
lods
aas
jl
mov
stos
xchg
push
and
popf
fs
xchg
cmpl
andb
mov
xlat
dec
pusha
push
mov
inc
mov
stos
out
mov
or
dec
cmp
sub
loopne
cmc
push
ljmp
dec
negb
push
inc
lods
sub
mov
lock
xchg
mov
repz
pop
adc
cmc
in
in
jl
mov
push
je
jp
test
mov
and
pusha
in
pop
divb
mov
sbb
js
addr16
push
addr16
int3
or
stc
jo
int3
clc
dec
rol
mov
orl
nop
adc
mov
pop
mov
test
rorl
pop
cmp
pusha
xchg
pop
in
jo
mov
push
fadds
adcb
push
inc
sub
and
outsl
stc
nop
xor
sti
jmp
rclb
dec
cmovno
adc
out
faddp
sbbl
pop
jl
fcmovu
imul
xor
pop
xor
ds
jmp
sub
push
adcl
sub
mov
xlat
xchg
push
movsb
dec
mov
add
outsb
jne
std
inc
test
js
inc
mov
or
fmuls
jecxz
or
cwtl
ret
xorb
cli
mov
out
dec
cmpsb
lret
jb
mov
pop
add
arpl
mov
loopne
or
std
fcmovb
cmc
mov
xor
in
push
cmp
adc
or
pop
inc
dec
add
xlat
jns
fcmovb
xchg
loop
sti
clc
mov
push
mov
inc
dec
pop
lods
outsb
sub
mov
fists
sub
pushf
xchg
cwtl
shll
iret
movmskps
fsts
lahf
mov
dec
decl
push
popf
stc
mov
mov
mov
xchg
les
xor
fsubrl
ja
mov
daa
sbb
mov
movsb
out
repz
movsb
int
sbb
out
js
pop
and
leave
in
and
sahf
dec
clc
lods
push
cld
mov
fs
xchg
out
xor
cltd
mov
test
push
mov
or
dec
jmp
cmpb
cmp
push
dec
or
into
scas
dec
call
icebp
lcall
inc
shll
xor
mov
jno
shll
ds
pushf
jno
inc
lods
cmp
lock
sub
xchg
sbb
ljmp
jp
dec
aam
aaa
out
push
lcall
xchg
or
out
or
and
icebp
pop
mov
mov
int3
inc
sub
dec
insl
add
pop
sbb
push
shll
fnstenv
adc
dec
cli
inc
inc
inc
insl
cmpsl
push
adcb
sbb
or
add
flds
fwait
or
pop
movb
adc
mov
xchg
xor
inc
ret
inc
pmaddwd
mov
fistps
push
shll
xor
movsl
jae
inc
pop
mov
cli
scas
xchg
push
test
rorl
mov
loop
mov
dec
xchg
aad
jnp
sar
jge
push
ret
xor
xor
mov
xchg
or
pop
jbe
daa
bnd
push
xchg
pop
ffreep
mov
shl
xor
out
sahf
ljmp
mov
in
fldl
out
leave
add
stos
jmp
mov
dec
ljmp
testl
mov
xorl
lods
add
pushf
cmp
inc
xchg
cld
int
xchg
add
outsb
loop
xchg
mov
sub
fwait
daa
push
push
inc
adc
aad
out
data16
inc
or
xor
adcl
and
je
cmp
jae
xchg
and
ss
sub
xor
mov
imull
push
insb
xor
adc
in
test
int
xorl
mov
into
outsb
ljmp
stos
fldcw
aas
mov
fidivs
xor
and
fs
arpl
and
in
jo
xchg
cmp
psubsb
add
mov
imul
call
outsb
das
iret
test
in
in
sub
fists
pop
bound
jl
rcrb
adc
mov
sbb
cmp
adc
movl
imul
pop
shlb
push
mov
in
idiv
push
mov
and
add
sahf
enter
popa
cli
cmp
jp
xchg
fidivs
xchg
dec
xchg
mov
inc
loop
xchg
out
dec
cmp
jmp
pop
push
inc
fdivr
sub
aam
in
jle
in
push
in
jl
sbb
int
iret
inc
jnp
cmova
jle
int3
cld
inc
sbbb
lret
and
jbe
push
pop
mov
lcall
jo
in
adc
jns
imul
in
leave
xchg
inc
pop
pop
ljmp
jbe
pop
inc
popa
inc
pop
cmp
mov
adc
sbb
xlat
repz
push
fisttpl
mov
sub
scas
out
int
cmp
or
dec
scas
imul
cld
bound
or
insb
imul
enter
fisubrs
push
aad
push
sub
out
shlb
gs
je
jbe
aas
fucomi
pop
adc
push
test
imul
cmc
jnp
rorb
repz
lret
ret
out
dec
cltd
call
push
sti
pop
jbe
push
mov
in
jl
xchg
negb
xchg
mov
xor
mov
xchg
pop
sbb
lock
test
out
push
push
mov
data16
addr16
cmc
sub
aam
out
pop
jae
mov
xchg
mov
dec
nop
mov
pop
fwait
mov
fildl
std
jg
and
rorl
sub
xchg
mov
test
adcl
aaa
in
cmpsb
dec
movsl
cmpsb
lret
add
lods
pop
ds
mov
jbe
sbb
sahf
xor
and
jns
addr16
adc
loop
sbb
les
ss
sbbb
xor
mov
cwtl
inc
add
shrb
dec
push
jb
jg
lret
into
lock
inc
sbb
test
in
jl
and
sbb
notl
pop
jmp
pop
jnp
push
out
popf
push
push
cmp
fimuls
scas
mov
dec
pushf
pop
out
dec
shl
ds
repnz
sub
popf
movsl
adc
aam
inc
inc
stos
add
mov
and
hlt
mov
sbb
aad
rorb
shrb
mov
ficomps
aas
sub
mov
addr16
push
push
inc
mov
je
orb
cwtl
ret
mov
xor
lea
iret
jecxz
cltd
mov
out
or
jb
adc
xorb
add
or
pusha
insb
xchg
imul
lds
mov
push
push
and
dec
aam
daa
cli
adc
add
lods
sub
clc
orb
arpl
adc
fidivs
pop
jbe
cld
loopne
rcrl
scas
mov
pop
jns
repz
aas
jmp
out
xor
lods
daa
mov
and
std
xchg
lahf
jae
loop
icebp
xchg
out
rol
lds
shl
aas
je
mov
bound
add
jg
adc
push
sub
jg
jb
lret
xchg
loope
cmp
in
insl
mov
idivl
mov
adc
mull
and
loop
movl
jno
out
pop
mov
aaa
aas
sub
inc
lret
sahf
push
sbb
in
jg
inc
jbe
aad
and
jle
add
push
hlt
sbb
out
add
outsl
jge
and
cmp
dec
inc
jns
lea
stos
dec
mov
insl
divb
mov
scas
or
test
fidivs
inc
push
dec
icebp
dec
lret
loope
sbb
repnz
test
out
mov
data16
pop
adc
pop
xor
es
jb
roll
jno
inc
jp
adc
rol
data16
pop
fstpt
xor
mov
shll
icebp
das
cli
lds
mov
push
cmpsb
and
mov
pop
jo
mov
adc
stos
xchg
cmpb
adc
xchg
fnstcw
cmpb
cmp
mov
addr16
decl
mov
jbe
leave
jae
xchg
in
dec
pop
pop
sbb
xchg
dec
sahf
imul
stos
pop
push
push
cmp
inc
xor
pop
addr16
aaa
or
jl
or
pop
bnd
arpl
push
cmp
aam
out
mov
out
add
xchg
mov
cmp
sub
ret
flds
cmp
dec
lea
xor
decl
mov
fsubrs
cmc
xchg
mov
scas
mov
fadd
sub
jge
insb
mov
jns
push
inc
loope
or
adc
stc
xor
lret
mov
mov
shlb
aam
imul
mov
inc
mov
ror
cmp
push
mov
pop
sbb
imul
xchg
mov
out
push
mov
xchg
push
ja
das
popa
dec
scas
in
aad
in
pop
xor
push
int3
xlat
or
scas
inc
adc
pop
repnz
jnp
inc
or
jne
inc
repnz
clc
or
imul
jl
mov
jecxz
scas
int3
stc
dec
frstor
push
sti
cmp
push
stos
js
aaa
mov
mov
mov
and
push
or
lods
push
pusha
and
add
mov
push
xlat
and
xchg
arpl
mov
testb
push
push
sub
adc
nop
xchg
int3
push
jae
call
data16
pusha
fnsave
testb
or
gs
pop
test
adc
xchg
mov
int3
fdivp
into
push
pop
push
mov
out
dec
shll
test
add
or
icebp
jb
rorl
xor
jb
jne
aaa
jo
jle
mov
push
shrl
adc
pop
inc
mov
call
imul
scas
mov
enter
lret
dec
cmpsl
dec
mov
push
ds
mov
sbb
stos
subb
int
xchg
inc
aam
pusha
and
rolb
or
into
add
add
cmp
and
inc
pusha
cli
dec
stc
ljmp
pop
das
enter
xor
mov
bound
subb
xor
pop
shll
aam
push
jge
push
add
push
test
shrd
cmpsl
and
jns
and
mov
addr16
jnp
mov
les
stos
pop
shlb
cli
mov
lea
mov
jbe
sub
jecxz
sbbb
out
rorw
cmp
jnp
das
add
mov
push
mov
jo
jge
cmp
out
push
rcr
and
out
cltd
xchg
lea
incb
pop
out
mov
and
mov
insb
mov
jmp
into
mov
rcrl
or
xchg
adc
inc
mov
push
or
sahf
dec
xchg
outsl
das
pop
mov
dec
pop
add
mov
inc
push
jne
xchg
out
pop
hlt
test
pop
out
xchg
mov
cli
xchg
sbb
in
insl
and
loope
jge
aas
or
dec
hlt
xchg
mov
dec
xorb
dec
mov
hlt
pop
mov
stos
xchg
mov
ss
mov
mov
adc
xorl
xchg
movq
push
dec
orl
shrb
out
pop
and
xchg
lcall
inc
mov
add
adc
mov
rorl
xor
loopne
fisubrs
int3
shrl
fldcw
push
mov
mov
stos
cli
les
repnz
aas
leave
ret
sub
addr16
shlb
jg
bound
out
dec
sbb
or
ret
subl
les
sahf
xlat
or
test
inc
jo
dec
insl
xor
in
inc
add
and
inc
fldenv
cmpsl
pop
inc
push
xor
push
leave
hlt
jne
or
je
leave
mov
sahf
jb
mov
scas
xchg
ja
lret
inc
mov
out
adc
jp
lcall
jae
sub
jl
in
pop
out
out
fidivl
iret
mov
sbb
jle
mov
mov
pop
std
int
pop
mov
jns
add
jnp
dec
out
adcl
xchg
pop
fidivrl
jl
xchg
push
test
mov
in
or
cmpl
imul
leave
lods
outsl
andb
add
ds
sbb
pushl
pop
inc
add
mov
fcmovbe
ljmp
jb
sbb
mov
aad
cs
les
mov
insl
mov
xchg
dec
decb
mov
andb
lahf
inc
jo
dec
mov
mov
mov
test
adc
pop
insl
mov
push
mov
out
fsts
inc
leave
adc
ds
ljmp
push
outsb
pushf
adc
cmc
mov
loop
sub
mov
jns
inc
mov
adc
out
out
pop
cmp
clc
jp
sbb
mov
add
mov
mov
test
cmc
cli
fimull
int
imulb
cmp
sbb
push
add
inc
in
adc
fists
cmp
lods
pop
dec
jecxz
inc
xor
jle
shll
stc
bound
imul
inc
xchg
es
popf
daa
aad
inc
add
xor
sarb
adc
xchg
call
inc
out
inc
cltd
xchg
pop
and
pop
or
ljmp
insl
pop
je
clc
imul
outsl
daa
sbb
sti
adc
lahf
fs
jo
jecxz
sbb
fs
push
ficompl
les
fwait
pushf
std
aam
sub
and
push
shl
mov
sub
inc
lcall
sub
sub
lret
notb
jbe
outsl
inc
mov
lock
call
sub
mov
mov
call
fnstcw
mov
pop
arpl
popa
pushl
test
test
std
and
inc
insb
adc
cmp
fadds
cltd
xor
add
addr16
push
ret
and
mov
stos
mov
ret
cmpsl
dec
push
lcall
mov
in
xchg
pop
daa
loope
inc
sbbb
stc
dec
sub
repnz
rorb
jecxz
in
jmp
loopne
sbb
inc
test
mov
jp
aad
fstps
out
push
xchg
stos
mov
pop
add
mov
orl
jle
fcoms
inc
cmp
xchg
adc
or
mov
or
xchg
orb
cmp
lahf
div
insl
mov
mov
mov
sbb
ljmp
sub
sarl
push
jae
mov
imul
ds
pop
mov
je
jmp
sub
xchg
ljmp
add
push
sbb
push
pop
cmp
leave
push
fmull
jbe
push
add
dec
cmp
dec
gs
xchg
cs
lcall
or
pop
loope
test
loopne
inc
mov
gs
sbb
sub
fstpt
pop
inc
mov
lcall
repnz
jne
lret
stc
ljmp
push
ljmp
push
jp
dec
mov
sahf
lock
push
jb
fwait
adc
inc
fidivl
lock
dec
or
adc
sub
shrb
or
int3
cmp
pop
mov
mov
mov
shrb
mov
or
adc
pop
ljmp
outsb
push
mov
mov
cmp
mov
mov
mov
mov
mov
int
out
sbb
out
pop
rorl
nop
stos
xchg
fcoml
int
sbb
pop
push
sub
outsb
jecxz
cmp
cmp
jne
lret
lds
fistpl
mov
out
adc
jnp
pop
mov
jae
mul
mov
xor
pop
push
jbe
xchg
pop
popf
sub
jbe
adc
cmp
sbb
das
bound
cmpsb
loopne
add
xlat
lods
lret
pop
sub
pop
or
into
daa
dec
jnp
nop
int3
sub
mov
repnz
or
shlb
cli
out
mov
arpl
adc
pop
test
aam
cmp
rcrl
lods
sbbb
cmp
mov
sub
mov
sub
mov
add
sub
addr16
sbb
cwtl
mov
pop
sub
adc
int
push
shrl
mov
xor
sbb
push
outsb
shl
xchg
cmp
jmp
loopne
rclb
xor
push
push
aaa
fstl
dec
mov
jns
rcll
adc
push
cltd
cmp
sbb
lret
xor
lods
lret
inc
inc
sub
inc
addb
add
xchg
or
andl
punpckldq
xchg
push
sub
ss
add
adc
leave
inc
aas
adc
sbb
shlb
mov
jmp
mov
cs
fs
xor
arpl
and
jg
cs
addr16
imul
inc
xchg
fists
inc
add
test
shr
pushf
sub
scas
aam
subl
cmp
rolb
in
add
dec
arpl
mov
out
das
inc
addb
hlt
inc
ret
rolb
aam
popa
cmpsl
mov
push
cmp
cld
push
cmp
cld
dec
xchg
push
xor
stos
sbb
mov
dec
test
cmp
psrad
inc
fists
push
jb
sub
jb
dec
rcl
dec
cmp
mov
jne
pop
mov
cwtl
jle
jns
xchg
mov
add
es
xor
fadds
ss
cmp
negl
out
adc
jno
xchg
sub
fimuls
data16
imul
push
and
les
mov
movsb
negb
test
cmp
stos
dec
mov
aad
mov
repnz
jl
lret
sub
fwait
xchg
mov
arpl
std
shll
sar
cmp
jecxz
jge
pop
adc
call
jecxz
cs
add
sub
arpl
movsl
jae
add
sub
adc
cld
mulb
fnstsw
sub
inc
xlat
movlps
mov
repnz
inc
stos
cli
insl
pop
in
jmp
inc
mov
adcl
mov
aaa
mov
stos
incb
cmp
test
es
enter
stc
cmp
adc
cmp
mov
dec
popa
lret
pop
pop
mov
mov
cmc
iret
jp
pushf
sarb
in
adc
loop
mov
imul
scas
adc
push
mov
jnp
cmpsb
xchg
sub
sub
sub
cmp
mov
xchg
push
sub
pop
cmp
mov
mov
test
lcall
je
gs
push
test
mov
dec
mov
pop
push
cmp
inc
mov
pop
in
sahf
sbb
aaa
sub
fadd
add
aaa
mov
cmp
movsl
repnz
or
dec
cmc
cmp
frstor
ret
xor
mov
add
js
imul
mov
xchg
fs
cld
pushf
adc
icebp
ret
pop
push
mov
das
add
xor
shll
aas
iret
sbb
in
or
mov
inc
or
mov
je
adc
and
incl
push
divb
and
into
mov
fisttpl
das
scas
pushf
pop
mov
and
js
sub
and
enter
inc
xor
jmp
cwtl
pop
neg
popf
orl
xchg
lcall
or
faddp
movsb
xor
cmp
scas
and
pop
push
out
jae
les
pop
mov
jne
mov
push
sahf
dec
fbld
push
cmpsl
sbb
jne
cmp
sbb
xchg
out
popf
xchg
mov
mov
mov
inc
cmpsb
ss
xchg
je
pop
movsl
das
jmp
push
jge
xchg
mov
sbb
adc
cmp
popa
mov
hlt
ja
mov
in
rorb
pcmpgtw
mov
add
add
loope
xor
mov
push
or
or
repnz
icebp
mov
sbb
loop
dec
add
fsubs
sub
popa
mov
sub
out
fstpt
push
mov
cld
add
inc
jbe
jne
or
add
into
push
sbbb
mov
jp
add
insb
mov
sti
add
sub
sbb
cmp
rol
mov
jmp
into
inc
jns
mov
mov
inc
test
xor
bound
icebp
outsb
test
or
stos
ljmp
mov
inc
jnp
gs
adcl
mov
sar
dec
pop
lahf
xor
jmp
movsl
daa
xor
outsb
pop
paddsb
add
xor
nop
xchg
jbe
push
cmc
add
cwtl
dec
jo
jmp
cmp
lods
test
sbb
xlat
sarl
xchg
popf
outsb
test
loope
jecxz
fistpl
imul
jne
movsl
ror
pop
add
cwtl
mov
sbb
sarl
das
adc
mov
mov
add
andb
jp
pop
mov
xor
jns
jo
or
xchg
pop
jo
lock
mov
push
aam
xchg
jns
mov
shrb
test
adc
cmp
sub
or
icebp
outsb
push
call
mov
lods
mov
pop
lock
adcl
pop
fsubrs
ret
nop
inc
jecxz
cltd
in
jle
inc
push
fidivl
jns
or
in
je
push
jl
sub
scas
jo
sub
pushf
hlt
jbe
outsl
mov
pop
dec
mov
fwait
jge
add
cld
sahf
sahf
mov
xchg
out
and
mov
push
pop
xchg
pop
pop
cwtl
pusha
sti
enter
xor
movsl
movsl
inc
in
mov
push
and
xlat
push
xchg
aad
dec
les
outsl
mov
roll
std
xchg
add
sarb
cmpsb
aad
xor
push
daa
aad
loope
jbe
mov
lock
lahf
nop
or
clc
xchg
mov
ja
sub
mov
jns
scas
sub
push
loope
adc
pop
add
scas
mov
mov
sbb
mov
out
xor
std
or
push
pop
cmp
pusha
xor
aaa
pop
cmp
cmpsl
outsb
dec
aas
test
dec
inc
clc
repz
repz
rcrl
inc
xor
mov
and
push
shlb
ret
add
dec
and
repz
in
push
js
pop
pop
lret
add
adc
sbb
out
jecxz
pop
cmp
xchg
cmp
into
lds
insl
push
ds
jbe
sub
mov
pop
sti
sbb
sahf
stos
and
repnz
mov
inc
fldcw
imul
int
std
xor
lds
stc
mov
inc
mov
movsl
xor
aad
jnp
ss
pop
mull
fnstcw
fnstsw
ret
cmp
sbb
jl
shl
imul
test
mov
je
add
mov
aad
pop
pusha
outsl
loopne
sub
andb
dec
fwait
xor
in
sub
push
shll
outsb
cmc
push
or
jge
dec
mov
stos
pushf
lcall
lahf
mov
adc
scas
or
pop
outsl
mov
mov
test
jecxz
mov
xor
cmpsb
scas
les
decb
scas
loop
test
nop
dec
xchg
sub
fadds
and
pushf
rol
rol
cmp
sub
daa
into
jns
mov
fisubrs
test
pop
andb
insb
jae
cld
xor
mov
and
lret
adc
cli
dec
out
roll
adc
jne
jns
and
add
jno
aaa
pop
sbb
push
cmp
out
and
aas
cmpsl
mov
jbe
or
xchg
sbb
xchg
add
loope
add
xor
out
push
outsl
orb
sub
popa
out
cmp
arpl
dec
add
add
fistpl
inc
mov
shll
cmpsb
or
cmc
test
idivb
jg
les
mov
pop
dec
add
sbb
sti
ficompl
sub
fdivr
sub
mov
loopne
jbe
cmpl
repz
mov
aam
xor
mov
ret
push
sahf
insb
mov
pop
sub
lock
cmpsb
into
ss
mov
inc
cli
jno
sub
xchg
movsb
adc
sub
into
mov
add
inc
scas
outsb
out
das
cmp
mov
out
or
stos
mov
add
ficoml
xor
mov
add
pop
inc
mov
cmpl
jle
ljmp
rclb
aas
push
fnsave
test
jnp
ss
ss
and
pop
lock
sbb
call
dec
std
lcall
out
repz
in
data16
sub
pop
mov
je
push
dec
bound
loop
loop
pop
mov
mov
jge
les
fwait
pop
add
fsubl
push
mov
fstpt
xchg
std
fldl
dec
das
ljmp
mov
shlb
sahf
sbb
push
test
shrb
dec
jg
andb
jg
ljmp
xor
std
pop
push
mov
inc
xor
test
fidivs
insb
aaa
dec
ficoml
rcrb
add
mov
stos
cwtl
iret
dec
and
mov
mov
adc
iret
jg
push
mov
pop
mov
bound
lea
xor
push
imul
push
sub
lcall
sbb
jno
inc
or
push
and
inc
mov
scas
sub
das
lahf
jne
and
sub
lods
retw
int
sti
adc
xchg
push
filds
test
insl
push
sbb
lret
xor
testl
pop
lcall
lods
sub
xchg
pop
mov
lods
cs
jae
cmp
shlb
not
das
push
adc
jns
push
ret
xchg
sub
ficompl
pop
and
mov
push
jecxz
fisubs
imul
lret
int3
dec
pusha
sub
sbb
xchg
ffreep
adc
mov
dec
push
fsts
movsl
push
das
sbb
jmp
jo
pop
sbb
adc
jge
je
and
fst
imul
in
push
sub
pop
push
out
xchg
addl
test
cs
jecxz
push
push
jo
pop
pop
iret
das
or
mov
insl
out
lds
shlb
mov
rclb
out
gs
aaa
sti
loop
js
dec
gs
incl
mov
sti
lods
fmuls
scas
jg
movsb
ljmp
xchg
fsub
pop
xchg
test
and
dec
mull
lahf
mov
fidivrl
rep
jo
mov
ficoml
cmp
rcr
mov
add
popf
sub
insb
icebp
jno
mov
clc
mov
xor
insl
xor
add
xor
test
shrb
pop
int
and
out
imul
in
push
into
pop
bts
xchg
add
add
das
cwtl
mov
jns
xchg
adc
push
adc
jl
xor
adc
aad
fmull
in
mov
push
push
inc
mov
push
inc
pop
and
or
and
popa
mov
or
mov
orl
out
mov
adc
xor
sbb
aad
sahf
es
lret
dec
mulb
dec
in
out
dec
pop
xlat
jp
pop
sub
xchg
aas
dec
into
or
mov
insl
jmp
cmp
mov
fcoms
rolb
mov
adc
jbe
xchg
sub
stos
scas
xchg
test
jecxz
fistps
mov
or
cmpb
icebp
imul
adc
or
subb
mov
xchg
mov
movsl
add
and
xor
add
aad
insl
push
out
lds
jae
bound
mov
test
mov
jae
das
cwtl
arpl
mov
sbb
cmp
mov
cmp
je
pop
inc
repz
push
jb
push
shrl
or
add
lods
sub
out
push
popa
xlat
movsl
loop
movsl
inc
mov
sbb
stos
push
cmp
loopne
dec
cmp
movntps
sbb
jb
notb
cld
mov
stc
mov
int3
jle
int
arpl
push
cmp
popf
lods
je
cmc
popa
daa
push
mov
cmp
fmul
bound
cwtl
cmp
lea
mov
enter
loope
fxch
int3
repnz
std
xchg
into
js
push
sbb
jns
or
mov
mov
sub
dec
in
out
lock
cmpsl
imul
push
clc
insl
mov
orb
rcrl
or
fimull
adcb
add
std
test
jne
in
mov
scas
pop
lcall
dec
cmpsb
hlt
loopne
mov
add
leave
pushf
add
sub
xchg
dec
and
hlt
xchg
and
leave
mov
pushl
add
mov
pop
cmpsl
iret
stos
idiv
cld
xchg
stc
aad
cmpb
sti
mov
pop
xchg
push
pop
imul
jge
nop
aam
ljmp
es
jmp
push
lods
adc
out
daa
and
pop
or
inc
ror
mov
mov
jge
pop
in
xlat
lret
mov
mov
inc
push
faddl
in
mov
jnp
xor
mov
and
dec
pop
dec
shl
fsubrp
inc
pop
mov
inc
and
mov
out
jnp
adc
mov
jmp
fdivrl
je
push
bound
push
push
test
dec
inc
or
repnz
call
mov
filds
dec
add
sub
cmpb
pusha
lcall
sti
cld
bound
push
daa
jne
mov
adc
out
shrb
bound
dec
lcall
push
jns
hlt
cmp
lods
loopne
cmp
xchg
cld
adc
mov
ds
xor
in
nop
int
loope
test
xor
fsts
popf
leave
movsb
jecxz
cmpl
repz
sub
inc
adcb
pop
mov
es
fsubrl
cs
loopne
loopew
imul
out
mov
sub
gs
cmp
cmp
inc
push
cmp
pop
adc
scas
add
jmp
lcall
shlb
mov
imul
pop
call
sbb
pop
pop
ret
adc
adc
insb
aam
jns
lods
jmp
or
ljmp
pop
lods
xor
mov
pusha
loop
ffree
mov
dec
cmp
cmp
fwait
cmp
jno
int
ds
jmp
and
test
insb
pop
lret
in
call
cmp
sbb
lock
mov
cmp
roll
lods
push
int3
push
sub
adc
xor
inc
fists
dec
push
pop
repnz
inc
repz
repz
mov
pop
inc
inc
add
lods
pop
xchg
test
add
addl
add
inc
add
or
das
aad
add
sbb
divl
xor
push
dec
mov
and
inc
test
jno
sub
adc
or
mov
xor
push
cmp
je
pop
cli
adc
inc
aad
jmp
lds
adc
or
arpl
mov
pusha
cmpb
out
cmp
xor
push
cmpsb
xor
popa
sbbb
movsl
or
cmp
es
gs
clc
cmp
outsb
fs
fdivrp
mov
mov
outsb
lret
ret
lcall
pop
dec
xchg
mov
adc
daa
fwait
sbb
test
je
sub
js
mov
les
adc
pop
addr16
push
jp
push
inc
pop
mov
lock
mov
daa
jle
mov
mov
je
repnz
or
nop
imul
add
xlat
ret
pop
dec
aas
pop
xchg
mov
mov
push
nop
jns
mov
lahf
mov
jns
shl
sbbb
bound
xor
jbe
std
fnstcw
sarb
cmp
add
fwait
push
clc
mov
dec
fldl
roll
mov
mov
dec
push
clc
aas
popf
mov
cwtl
subl
cltd
add
pop
ror
adc
aas
mov
pop
outsl
mov
repz
push
inc
mov
add
cltd
mov
mov
sar
imul
scas
mov
dec
stc
inc
dec
gs
sub
mov
shrb
lahf
xor
notb
popa
js
pop
mov
sti
pop
fimuls
les
lret
fwait
arpl
out
sub
out
pop
sub
jae
sti
jmp
sub
test
test
mov
jge
sbb
mov
xor
popa
mov
xchg
cmp
jg
mov
mov
loop
pushf
and
loopne
mov
stos
mov
shlb
cld
aas
pop
cmc
or
mov
aaa
pop
jl
sub
out
adc
xchg
out
out
cmp
inc
inc
faddl
cmp
popf
lods
add
jb
jecxz
sub
cltd
pop
pop
lret
in
ror
sbb
roll
jle
or
add
ja
xchg
divl
cmp
push
lahf
jmp
dec
test
cmc
ss
dec
mov
scas
jo
push
cmp
enter
xchg
rclb
das
movsb
mov
push
fisttps
mov
sbbb
sub
iret
xor
incb
pop
loop
gs
mov
push
in
insb
dec
or
popf
xorl
ret
cmp
bound
mov
outsl
push
cmp
inc
fisubrs
and
adc
addr16
pop
or
mov
mov
and
dec
sub
addr16
mov
fstpl
inc
push
adc
or
push
gs
xchg
lock
mov
push
ds
mov
popa
xorl
stc
fsubrl
xor
push
mov
cmpsl
inc
push
xor
and
sti
fwait
es
call
scas
fsubs
jns
outsl
jnp
ficoms
and
mov
sub
popf
popa
dec
mov
inc
cmc
stos
push
cmc
shlb
movsb
mov
and
jne
scas
mov
outsl
fiaddl
clc
push
aad
xchg
out
insb
int
pushf
adc
adc
mov
adcl
out
xor
inc
test
and
pop
inc
scas
cmpsl
and
pop
and
fdivs
sbb
test
out
dec
jb
lcall
mov
inc
out
fisubrl
cmp
cmpsl
in
cmp
enter
mov
loope
pop
leave
hlt
mov
inc
roll
loop
inc
adc
cmp
in
popa
outsb
stos
arpl
das
xchg
jbe
aad
jp
cmpsb
std
outsl
sbb
addr16
pop
jg
fdivl
cmp
pop
lea
es
lcall
pusha
or
mov
adc
mov
jns
repnz
fadd
js
fistpll
jl
or
and
scas
cmp
cli
cwtl
ss
es
dec
sbb
jb
not
push
mov
clc
fwait
add
aam
hlt
and
lret
repnz
stc
test
out
sbb
popa
cmpsb
je
jge
scas
sbb
cmc
stos
mov
popf
rcr
jl
movsl
cmc
mov
xchg
cs
and
cmp
pop
pop
adc
and
aaa
sbb
inc
insb
stc
loopne
mov
xchg
fildll
mov
loope
outsb
push
cmc
mov
sub
jge
hlt
xchg
pop
test
out
addr16
mov
in
enter
jbe
icebp
pop
repz
sbb
mov
sbb
push
push
test
out
dec
push
mov
iret
add
push
inc
xor
scas
les
gs
ss
cmc
stos
loop
pop
mov
fwait
fwait
lock
pushf
test
dec
ljmp
adc
mov
dec
push
pop
jae
scas
jnp
xor
icebp
data16
ret
and
xorb
lock
ja
mov
push
cmpsl
imul
or
lods
inc
xlat
fnstcw
mov
dec
arpl
call
shl
dec
cli
add
cmp
test
or
in
int
cli
mov
movsb
ss
xchg
jbe
adc
out
sub
dec
or
sbb
or
sub
aam
cmp
sbb
outsl
mov
in
mov
cwtl
cwtl
lret
xchg
push
xchg
dec
jg
mov
inc
fsubl
test
movsl
adc
adc
loope
xchg
lock
xchg
pop
mov
mov
aaa
xchg
std
scas
repz
mov
or
mov
mov
sbb
ret
jle
data16
mov
out
jge
adc
jb
fdivl
lods
outsl
push
xchg
pop
inc
mov
pop
int3
sub
xchg
pop
fists
bound
sub
ss
mov
shlb
cwtl
inc
ret
lds
or
imull
mov
jne
fildl
div
outsb
pop
inc
pushf
fstl
cltd
jecxz
and
mov
sbb
ret
sbb
xchg
frstor
dec
and
fisubs
sbb
popf
inc
outsl
dec
arpl
imul
push
lret
adc
out
xlat
mov
int3
or
push
iret
push
adc
jns
insb
sub
add
mov
test
inc
xchg
mov
jo
xchg
jo
and
jno
lods
push
lods
aad
xchg
scas
fwait
rcrb
jne
or
sbb
movsl
mov
pop
adc
lahf
leave
mov
clc
cmp
mov
xchg
pop
or
push
mov
jle
jbe
mov
xchg
push
fmul
and
sbb
xor
mov
fistps
adc
inc
dec
bound
fwait
xor
ja
fstpt
popf
xor
les
in
mov
out
test
pop
pop
sarl
xor
push
out
pop
push
pop
adc
and
push
sub
dec
or
dec
stos
jbe
movsl
mov
jmp
jmp
addr16
xor
adc
cs
mov
mov
pop
mov
mov
pusha
std
in
shll
add
lds
ja
shll
movl
mov
fldenv
push
cld
jg
fidivrl
dec
stos
out
pushf
jno
dec
adc
stos
xchg
pop
es
push
mov
repnz
inc
fstps
cmp
sbb
sbb
imul
cs
add
or
jmp
jg
movsl
jbe
inc
push
or
es
mov
hlt
cmpsb
pop
or
or
dec
mov
mov
pop
add
fstpl
and
jmp
repnz
hlt
and
xlat
mov
rcl
popf
pop
xchg
incb
into
xchg
das
inc
pop
stc
aad
stos
movsb
mov
dec
stos
andl
lcall
inc
cmpsl
jge
scas
and
sbb
inc
popf
test
xchg
in
dec
movsb
mov
xchg
and
xchg
mov
add
inc
icebp
cld
sbb
ffreep
mov
decb
cli
popa
cmp
icebp
in
adc
clc
jne
lods
mov
cmpsl
mov
sbb
push
cwtl
cmp
aaa
shl
movsl
sbb
push
inc
imul
lcall
pop
inc
neg
aas
xchg
cld
xchg
mov
mov
adc
mov
lahf
pop
pusha
pop
filds
inc
inc
adc
push
dec
or
mov
or
dec
cmp
int3
out
inc
jne
and
lea
push
aaa
fildl
lods
inc
in
dec
xor
cmp
ja
xor
imul
stos
and
scas
mov
gs
lods
mov
xchg
or
clc
imul
cli
frstpm(287
xchg
mov
push
in
sbb
mov
icebp
iret
add
les
push
dec
jle
enter
adc
fnsave
outsb
adc
cmpsb
movsl
dec
inc
adc
sbb
sbb
std
out
mov
popf
pop
fmuls
xchg
xor
dec
dec
iret
fildl
es
mov
inc
or
test
inc
push
mov
fidivrs
add
clc
das
add
adc
lcall
enter
aaa
mov
cmpl
lret
sub
mov
jp
and
lods
xor
popf
lret
daa
testb
mov
xchg
xchg
int
xorb
mov
cmpl
xchg
aam
add
arpl
add
xchg
and
jnp
in
andl
inc
mov
and
fimull
adc
or
daa
adcl
xchg
std
push
imul
mov
fwait
jl
push
dec
ret
jo
popa
idivb
xorb
xchg
stos
sahf
pop
ret
push
sbb
insl
mov
mov
push
scas
fisttpll
inc
add
rcll
fsubs
pushf
data16
lret
add
in
push
sbb
mov
mov
in
xor
rcll
mov
cmp
rep
cmp
enter
dec
add
mov
fdivrs
jno
shll
lods
push
add
adc
mov
jmp
popf
int3
xchg
aaa
sahf
jae
mov
mov
inc
dec
adc
jne
cld
lret
sub
adcb
scas
mov
orl
add
adc
int
cmc
lods
sbb
jae
frstor
xchg
jne
daa
or
mov
push
push
imul
mov
push
push
pop
iret
mov
sbb
xor
mov
mov
test
mov
adc
setle
jae
sbb
add
repz
dec
inc
dec
or
add
push
aaa
cmpb
lods
cli
imul
and
add
lods
inc
and
in
test
lret
mov
xchg
dec
sub
push
out
daa
fsts
out
or
add
ss
leave
sub
jns
and
xchg
or
cltd
mov
sahf
test
sbb
sub
insl
mov
pop
jnp
lods
xor
fdivrs
push
dec
stc
cmp
es
dec
icebp
xor
loope
lods
adc
fs
push
int3
flds
jmp
mov
xchg
ljmp
pop
je
mov
aaa
cld
mov
insb
repnz
jne
mov
test
cmp
pushf
sarb
loopne
fs
sub
test
clc
mov
inc
scas
jmp
std
mov
cwtl
fbstp
dec
in
xchg
fimuls
mov
into
test
roll
enter
jecxz
dec
stos
sub
cmc
repz
aaa
mov
xor
hlt
ja
mov
mov
cmp
test
mov
dec
jae
cmp
or
xchg
sub
popa
xor
icebp
mov
testb
jle
mov
fisubrs
jmp
mov
movsl
dec
or
add
fucomp
lret
inc
jmp
roll
dec
mov
mov
sbb
in
adc
lret
ja
sub
lds
sarl
adc
icebp
mov
pop
fstpl
mov
xchg
mov
sub
sub
inc
and
in
lock
pusha
out
outsb
stos
xor
sub
jle
xor
sub
push
push
loopne
insb
js
jo
test
inc
dec
fmuls
and
mov
inc
cmovl
jnp
dec
movsb
pop
lods
pop
inc
cmp
sub
lods
cmp
frstor
dec
dec
popa
xor
in
and
jo
and
test
cltd
repz
dec
or
xor
test
add
cmpsb
sbb
fidivrl
push
test
fcmovu
sahf
or
add
movb
cli
ret
movsl
or
inc
jns
imul
push
insb
mov
mov
or
push
mov
sub
add
add
cmp
sbb
mov
jl
xor
ffreep
inc
xor
arpl
push
fs
mov
stos
xchg
popf
inc
iret
fcmovnbe
leave
sbb
xchg
or
pop
stos
shll
mov
es
leave
daa
dec
cs
orb
ret
adc
adc
and
xor
xchg
cmpsb
stc
std
mov
in
ja
lret
dec
mov
jmp
jno
mov
sub
addr16
sub
rorl
add
fnstenv
xchg
incl
add
push
inc
or
sub
and
and
cmp
test
cmp
xor
mov
push
outsl
ltr
scas
cmpb
test
sbb
mov
inc
mov
popf
sub
mov
push
cmpsb
lret
pop
repz
pop
mov
andb
shl
aam
add
hlt
xchg
jnp
and
xchg
cmc
jns
ss
push
push
sub
clc
gs
or
aaa
test
sti
dec
in
inc
repz
lea
cwtl
rcll
movsl
pop
mov
sbb
imul
sahf
call
jle
fcoms
fsubrl
add
inc
mov
lods
pop
push
lods
mov
fisubrl
jmp
push
ret
bound
lock
jnp
push
cltd
jnp
pop
jmp
ficoml
fsubrs
mov
int
mov
mov
aas
lret
lods
data16
shll
lods
lock
shlb
adc
imul
xchg
mov
shll
inc
outsl
popa
in
pop
sbb
scas
in
repnz
sbb
fs
testb
cs
add
mov
xchg
cld
xchg
scas
sub
adc
sub
subb
mov
stc
sahf
and
mov
adc
frstor
lea
insb
stos
imul
imul
sahf
pop
lea
pop
xor
mov
jmp
ljmp
mov
add
cmpsb
inc
dec
stc
aaa
jle
xchg
mov
test
sbb
gs
cmp
mov
cltd
adc
jno
jmp
jp
leave
xchg
sbb
inc
cmpsl
inc
sbb
fstpl
out
iret
sub
pop
adc
les
cmp
mov
xchg
inc
sub
push
stos
mov
stos
push
mov
push
jecxz
repz
cs
sti
movsl
xchg
mov
mov
adc
inc
aaa
xchg
hlt
aaa
sti
mov
push
mov
sbb
sbb
adc
sbbb
mov
push
cwtl
or
std
mov
nop
nop
addl
fdivrs
mov
icebp
inc
incb
and
push
out
push
enter
ds
inc
push
xor
jns
pop
lock
mov
out
and
outsb
sti
mov
ret
out
mov
jns
daa
fprem
xor
xorb
idivl
test
add
ss
sarb
pop
push
push
test
pop
pop
inc
int
jecxz
fwait
lret
push
aad
xor
dec
int
mov
ja
movsl
cmpsb
aad
incl
dec
fcomp
in
xlat
push
push
cmp
cmp
xchg
push
mov
pop
loope
xor
in
int3
and
pop
enter
push
iret
data16
and
sbb
fbld
imul
jne
mov
aad
sub
nop
aad
or
je
lret
add
out
rclb
xchg
sarl
push
les
enter
jae
sti
mov
mov
test
inc
ja
and
sbb
out
and
xchg
mov
pop
ret
mov
add
cltd
aas
pop
add
sub
mov
cmpsb
leave
imull
cmp
mov
stc
mov
dec
push
inc
push
shl
adc
cmp
sbb
dec
fwait
roll
mov
lock
add
rolb
js
add
arpl
mov
addb
xchg
lock
push
lcall
fldcw
je
outsb
int
js
shrl
xchg
pop
popf
roll
in
mov
jns
xlat
inc
xorb
fdivr
mov
or
add
or
sbb
inc
dec
ss
loop
or
xlat
shrl
or
aas
xor
out
cld
sbb
mov
jbe
add
jno
or
mov
pushl
sub
movsl
cmp
fbld
dec
data16
daa
mov
out
iret
das
enter
xchg
sub
add
pop
mov
into
scas
stc
jbe
fisubl
ds
and
mov
mov
pop
mov
aaa
mov
fists
inc
xchg
push
dec
shl
fiaddl
popa
push
xchg
xor
rcrl
xchg
stc
stos
daa
mov
pop
jb
arpl
bnd
pop
cld
jae
cli
ja
cld
cs
and
iret
call
sbb
je
mov
lods
adc
mov
neg
push
popf
dec
cmp
jo
aaa
repz
dec
pop
dec
testl
adc
xchg
daa
xor
mov
call
stc
jecxz
insb
pop
cwtl
out
xor
xchg
xchg
xchg
xor
mov
mov
push
cs
xchg
push
lret
cld
dec
loopne
dec
lds
jb
push
ffreep
xor
jecxz
stos
jecxz
jmp
lods
leave
inc
les
inc
sub
mov
cmp
das
std
mov
imul
and
or
aas
fistpl
sbb
roll
jbe
cli
jmp
data16
icebp
cmp
adc
xchg
or
mov
mov
es
and
mov
and
cwtl
ljmp
cmp
daa
lahf
nop
adc
cmc
sub
shll
mov
repz
mov
pusha
dec
outsl
lods
out
testb
iret
loop
adc
in
add
mov
inc
imul
in
mov
in
push
bnd
aad
sti
and
ljmp
dec
sti
mov
dec
mov
jecxz
sub
and
in
push
arpl
jb
aam
sub
pusha
xchg
xlat
cmp
push
and
mov
xchg
dec
and
repnz
mov
lods
test
add
mov
and
jecxz
mov
imul
pop
lock
sbb
push
inc
leave
ljmp
fstpl
mov
sbb
cmp
test
lods
aam
shl
xor
push
test
inc
mov
jns
xor
test
cs
pop
roll
add
addr16
shlb
jne
xchg
aam
xchg
pop
and
punpckhbw
cmp
adc
jg
movsl
fsubl
mov
leave
mov
clc
xchg
out
insb
pop
mov
mov
jo
pop
dec
mov
insb
std
mov
test
jle
iret
int
or
jne
inc
outsb
add
cmp
in
sub
pop
or
stc
sarb
xchg
xlat
ret
fucomi
push
xchg
mov
cmp
jno
ret
mov
and
push
out
push
lea
fidivl
pop
das
jo
mov
pop
lcall
cmpsb
cmp
pusha
sbb
sbb
dec
nop
sub
sub
jbe
or
scas
movsl
and
and
enter
add
aam
in
adc
hlt
mov
and
and
fadd
mov
add
mov
cld
imul
imul
inc
push
icebp
std
dec
mov
arpl
scas
int
mov
mov
test
xor
push
sub
adc
dec
push
mov
sub
out
xchg
adc
movsl
negl
and
sub
addr16
jge
mov
ret
arpl
std
sbb
mov
jecxz
cmp
cmpsl
dec
jo
mov
mov
out
xor
pop
jo
outsb
push
es
fwait
shrl
mov
dec
adc
inc
xor
lret
cmc
mov
sub
pop
jl
inc
movsl
popf
mov
pop
inc
pop
jnp
in
jg
jp
movsb
jnp
mov
or
les
ja
into
mov
jl
std
mov
xchg
fldl
sub
int
and
negl
lret
and
mov
push
mov
es
xchg
inc
pop
pop
dec
dec
lods
cwtl
insb
je
mov
iret
push
mov
js
jg
adc
fldt
jnp
lret
xchg
or
xchg
and
lods
xchg
out
push
adc
jmp
inc
push
enter
add
outsl
or
mov
fidivrl
mov
or
xor
sub
test
sub
les
bound
fcomi
sarl
cld
push
scas
js
ja
dec
mov
int
fldt
ljmp
push
imulb
inc
and
cmpsb
or
pop
push
lcall
sub
lea
mov
inc
xor
int3
in
add
sbb
data16
jge
fiadds
push
mov
fstps
imul
mul
shll
adc
inc
add
imull
lret
sbb
mov
fbstp
lds
repz
sub
add
out
mov
out
mov
das
mov
add
je
leave
lds
test
out
push
add
data16
lahf
shlb
mov
ss
dec
adc
popa
lcall
xor
shlb
inc
call
xchg
shlb
inc
cmp
imul
sub
repnz
add
sahf
scas
pop
cmp
testb
push
inc
mov
cmp
xchg
decb
js
mov
pop
insl
inc
sub
sub
out
rorb
mov
mov
jmp
mov
inc
mov
jbe
mov
adc
push
test
add
ret
sbb
aas
sbbl
stos
jp
inc
outsb
adcb
xchg
scas
int
clc
add
mov
jne
dec
rolb
orl
sti
xchg
leave
repz
rclb
xchg
add
in
std
mov
loope
push
fisttpl
jns
aad
sbb
je
jp
notl
mov
out
daa
pop
push
or
or
out
shl
jge
jg
xchg
cmp
clc
sarl
add
mov
movsb
mov
cli
jecxz
fnstenv
sbb
cmp
jb
cltd
jp
ficoms
aas
pop
in
dec
call
push
cmp
dec
sub
lahf
inc
sub
sbb
in
rorb
or
loop
mov
inc
sub
jecxz
sbb
sub
push
cld
fdivr
call
test
pop
leave
cmc
pop
cli
data16
dec
ror
or
stos
mov
jne
ljmp
adc
inc
lcall
adc
jmp
inc
or
sbb
enter
xchg
popa
cmpsb
test
push
popf
cwtl
xor
jno
lcall
pop
jmp
mov
mov
inc
stos
hlt
repnz
mov
rol
cs
int3
mov
test
add
insl
into
lret
inc
dec
stos
cli
or
dec
cmc
or
mov
xlat
mov
sti
jbe
hlt
out
insb
stc
add
xchg
out
inc
pop
jl
mov
and
xchg
out
xchg
test
lcall
lcall
pushf
xor
rcrl
mov
fcoml
jb
cmp
scas
pop
jmp
insb
enter
sti
enter
and
dec
mov
cltd
cmp
pop
std
aas
jge
mov
rclb
cmp
scas
push
push
xor
cltd
lahf
mov
push
adc
int3
inc
leave
icebp
sbb
jae
push
push
xorl
adc
mov
cmp
aam
test
popf
outsb
out
test
mov
push
xchg
pop
inc
jb
lock
dec
insl
pop
inc
mov
push
aaa
dec
cmp
push
ds
add
and
and
ret
test
int3
lret
cmpsl
imul
push
inc
movsl
cmp
out
movsb
inc
insb
daa
jb
lret
fildl
xor
xchg
push
mov
je
xor
push
fistpll
mov
dec
xor
in
dec
and
fwait
loope
and
push
mov
scas
test
repnz
fstpl
fadds
dec
xlat
add
jge
ficoms
int3
outsl
pushf
xchg
add
ja
push
sub
loopne
leave
lret
aaa
les
push
sub
push
sbb
xchg
or
jp
insl
and
cmp
and
and
xor
inc
lret
cmp
add
or
movsb
cli
mov
push
mov
lahf
pop
dec
js
lea
arpl
dec
dec
xor
mov
pushf
dec
arpl
stos
xlat
or
lret
cltd
add
daa
jno
ja,pt
push
repnz
daa
out
js
dec
and
xor
and
push
ja
pop
cli
sub
cmc
hlt
mov
in
stos
cmp
rcll
xchg
xchg
je
int
add
aas
mov
into
push
outsl
aad
pop
jno
jo
push
and
xchg
lahf
adc
jbe
pop
mov
cmp
test
pop
out
lahf
pushf
pop
mov
jae
shll
imul
jmp
shlb
push
adc
cmp
aas
or
mov
cmpsl
jno
das
je
ret
add
xchg
js
scas
int
std
sub
test
dec
inc
xchg
imulb
cmp
cltd
sti
xchg
pop
jnp
sub
in
lcall
push
mov
arpl
movsb
sub
add
jo
sbb
pop
call
movsb
cmpsl
scas
dec
and
sti
test
das
dec
push
jns
lahf
jecxz
icebp
push
in
adc
mov
in
scas
int3
sub
cmp
into
xchg
gs
push
xchg
inc
xor
popa
xchg
ret
mov
fildll
xchg
fwait
roll
loop
sahf
or
xchg
mov
mov
dec
jmp
repnz
pop
popf
push
cmc
in
xchg
mov
lahf
sbb
cmp
jo
je
push
sub
aam
addl
lds
mov
fwait
rcl
jnp
jecxz
aaa
fbld
xor
and
subl
pop
and
leave
mov
fisubl
js
fs
je
cmp
call
xchg
pushf
clc
pop
inc
pusha
pop
arpl
test
rcrb
inc
addr16
jns
shld
add
outsb
outsl
fs
int
push
out
and
xlat
push
ror
push
jle
sbbb
shl
sub
xor
popf
push
nop
fsubrs
mov
fwait
jbe
std
insl
dec
cmc
sahf
xchg
jle
das
jmp
lahf
xor
movsb
push
or
lret
add
jg
cmp
mov
mov
sti
imul
imul
daa
pop
jb
pop
enter
cli
mov
inc
hlt
pop
movsb
mov
cmc
sub
mov
out
and
jbe
lcall
fadd
mov
aaa
inc
mov
xlat
std
push
cmp
pushf
xchg
mov
int3
fcmovnb
fs
pop
jg
insb
out
sub
xlat
adc
outsb
inc
xchg
jns
mov
dec
jl
inc
xchg
pop
mov
inc
or
int
and
bound
in
push
daa
add
push
xor
aad
sahf
cmp
bound
dec
frstor
mov
ret
insb
push
arpl
lods
enter
xor
dec
mulb
jmp
mov
test
fwait
aaa
dec
jno
adc
daa
fldt
pop
mov
mov
xchg
int
push
cld
shlb
cmp
adc
jae
aaa
jge
mov
mov
hlt
in
xor
push
fsubs
or
pop
adc
clc
dec
xor
inc
xchg
es
cli
xor
pop
jno
cmc
addr16
rorl
clc
jle
daa
jp
mov
cli
push
adc
inc
dec
arpl
mov
iret
push
cli
enter
mov
and
mov
sarb
in
mov
mov
mov
mov
mov
scas
lret
xchg
jmp
mov
and
je
inc
sbb
push
jno
cltd
push
dec
in
cwtl
test
push
push
in
cmpb
test
daa
jb
mov
sbb
mov
call
notl
in
sbb
and
mov
fidivs
lea
js
xor
mulb
sbb
ljmp
popf
mov
jge
and
mov
std
mov
push
jb
dec
es
out
outsb
adc
mov
outsb
in
push
and
cltd
mov
repnz
mov
fistl
xor
sub
cwtl
aas
mov
xor
mov
push
stos
fstpt
inc
sarb
clc
add
fs
jecxz
pop
pop
jno
popa
mov
mov
dec
mov
cmpl
insb
push
data16
cli
int
push
add
pop
cli
mov
push
mov
repz
push
xor
jo
cwtl
cmpsb
dec
xor
sub
in
mov
mov
jecxz
aam
jns
fs
aas
sub
push
mov
mov
in
loopne
imul
cmp
rclb
inc
clc
ficomps
sub
jmp
cmp
mov
movb
and
insb
push
push
or
imul
and
movsl
and
cmc
lds
stc
mov
mov
out
cmp
dec
push
in
rolb
or
pop
sti
cmc
mov
fwait
dec
orl
imul
jp
movsb
and
or
je
vsubps
nop
push
out
rclb
cmp
js
xor
push
lods
aas
outsl
insl
push
cmp
dec
and
cmpb
sbb
clts
add
push
ljmp
jnp
inc
jle
pop
aas
push
rclb
pop
in
sbb
les
add
xchg
repnz
xlat
jg
jae
sub
mov
xor
and
jge
or
in
push
mov
lret
sarb
jbe
adc
sub
xchg
std
rcrb
or
push
fdivrl
and
cmpsl
call
cmc
or
test
push
push
mov
xor
arpl
adc
lea
cmp
jae
mov
rol
add
mov
inc
shrl
dec
or
sub
in
scas
fstps
pop
xchg
in
mov
pop
cmp
xchg
je
test
push
sti
mov
push
int3
lods
lahf
push
mov
inc
ret
lock
rorb
inc
pop
nop
mov
loopne,pt
repz
idivl
ret
or
sbb
cmpsb
jle
xchg
jae
out
cli
and
or
in
mov
mov
fisubs
jno
jne
adcl
cmp
in
shl
js
pusha
pop
loope
mov
jmp
cmp
jle
nop
xor
xor
sub
inc
icebp
inc
inc
cmp
loope
scas
sbb
fsubrl
xor
mov
add
push
call
aaa
and
cmc
push
inc
decb
adc
push
push
test
out
bound
shlb
out
ljmp
btrl
shll
pop
loope
leave
dec
fistpl
btc
xchg
jno
jnp
popf
sbb
repnz
jno
and
es
fdivs
or
std
push
mov
mov
inc
pop
es
push
adc
cld
pop
sti
xchg
shrl
ja
xorb
mov
cmc
lcall
ss
inc
je
out
repz
in
xchg
arpl
inc
cmp
cwtl
pop
adc
into
pushf
sti
xorl
xchg
sub
push
jge
dec
xor
pusha
cmp
fs
gs
stc
fistpl
ret
mov
testl
repz
add
inc
ss
jle
jno
insb
js
jp
test
cltd
inc
in
mov
sahf
fwait
pop
add
jae
push
xchg
outsb
lret
repnz
lahf
jo
popf
cmp
fcmovb
add
jno
das
cmp
dec
test
sahf
pop
jb
insb
sub
cld
mov
imul
mov
cmp
push
dec
fs
inc
lret
mov
pushl
stos
in
dec
xor
jge
sub
xor
test
add
xchg
daa
shrl
jl
jle
push
pop
enter
adc
and
loope
mov
xlat
xlat
addb
sub
data16
je
scas
fsubrs
xchg
sub
rolb
lods
andl
dec
js
cmp
sbb
pop
stos
inc
dec
cwtl
inc
div
insb
test
or
add
xchg
out
sbb
jecxz
jnp
stos
stc
pop
lods
shl
loopne
ds
daa
cltd
or
les
mov
ret
jg
hlt
out
mov
popa
pop
mov
cltd
dec
hlt
insb
lea
in
loopne
xor
popf
jo
jb
ja
jns
push
scas
sti
pop
lea
imul
std
fcompl
xlat
sbb
bound
dec
add
arpl
or
cwtl
icebp
inc
sarl
xchg
and
xor
rcll
push
mov
push
ja
adc
push
sub
push
lcall
rep
imul
or
and
add
dec
outsl
rolb
sahf
sti
les
inc
jg
jb
xor
arpl
jbe
jle
push
addb
mov
add
imul
mov
lcall
aad
push
outsl
aaa
test
xor
rcl
fidivrl
jno
mov
ficomps
dec
cwtl
jne
aas
aaa
mov
xor
leave
mov
push
rcr
cmp
adcl
jg
cmp
mov
mov
imul
cld
flds
fldz
mov
sbb
call
cmp
sbb
das
add
sub
add
imul
or
sar
sbbb
test
jns
mov
xor
mov
sbb
mov
and
stc
mov
add
imul
inc
dec
lret
and
sub
into
sahf
dec
hlt
inc
mov
fwait
push
jl
push
sbb
cld
dec
adc
stos
cli
push
mov
shrb
and
jns
jle
xchg
mov
jle
cld
out
aaa
jl
dec
mov
orl
jns
cld
aad
mov
jl
add
adc
jo
es
inc
popa
lock
push
adc
dec
xchg
aaa
sub
push
mov
mov
repz
fsub
aam
arpl
xchg
in
cmp
jp
xchg
jl
loop
dec
test
out
cmp
das
xchg
test
add
mov
pop
cmp
inc
xor
cmp
loop
shll
mov
mov
adc
mov
or
out
call
popf
and
fwait
dec
test
fs
push
mov
mov
cmpsb
sbb
cmp
pop
mov
mov
add
dec
hlt
inc
notb
pop
mov
mov
dec
xchg
sti
fcomps
or
in
mov
loopne
push
adc
mov
adc
or
mov
mov
les
pop
cld
cmpsb
enter
dec
out
sbb
mov
fidivrs
lret
out
adc
jg
xchg
repnz
dec
lds
mov
mov
fisttpl
sub
outsl
sbb
add
jno
pop
daa
stc
pop
stos
dec
push
xchg
addr16
lret
inc
cmp
sarl
adc
ret
mov
fisttpll
ljmp
sub
ds
ss
outsb
enter
test
jbe
cmpsl
sub
ljmp
xchg
ffree
pop
cmc
push
negl
ljmp
or
mov
jle
xlat
cld
jae
cmp
or
or
lods
imul
mov
sahf
cmpsl
icebp
mov
sub
lcall
mov
jnp
sbb
ficoms
and
mov
ljmp
inc
fbstp
cli
leave
and
pop
xchg
test
ljmp
jae
pop
mov
clc
flds
jmp
jns
adc
cs
pushf
jecxz
pop
xchg
mov
outsl
xor
lds
pop
outsb
shl
dec
ss
lods
aas
dec
push
mov
test
dec
sbb
repz
jle
sub
lretw
stos
push
jns
int3
xor
and
adc
repz
pop
js
shl
or
lods
cmp
sbb
xchg
iret
je
add
and
lock
sub
mov
out
std
push
sbb
pop
xlat
cmpsb
cmp
psubsw
jno
movsb
loop
les
ja
cmc
in
xlat
xor
sub
jns
adc
sub
cmpsl
inc
out
inc
stc
pop
dec
iret
imul
enter
fdivl
xor
sahf
jg
frstor
mov
aam
into
mov
mov
je
push
adc
cs
leave
aam
popf
cld
sbb
or
add
mov
or
es
mov
fisubl
cmp
mov
ja
cmp
or
xchg
loop
inc
push
push
sbb
into
sub
mov
jne
xchg
add
outsl
and
test
inc
xchg
je
repz
adc
xor
pop
shll
sbb
shrb
mov
mov
loop
ss
xor
mov
sub
pop
es
push
addr16
sbb
cmp
sbb
lret
mov
xchg
sarb
jle
fcomp
out
lods
pop
mov
mov
stc
or
dec
xchg
inc
call
lea
les
js
dec
sbb
ja
lock
and
add
sub
mov
push
cmp
daa
mov
in
or
xlat
sbb
rclb
sbb
shl
ret
fwait
cli
sbb
fsubrl
test
aad
xchg
inc
xchg
mov
push
and
loope
mov
test
ja
mov
stc
add
sub
insl
lods
hlt
sbb
test
xor
cmpsl
ljmp
loopne
cltd
mov
xor
rorb
aam
icebp
mov
icebp
jbe
ja
stos
aad
dec
mov
dec
imul
sbb
jp
sbb
leave
repz
test
jge
pop
adc
shll
shrb
sub
and
adc
movsl
pop
fstl
and
lods
cmpsl
out
mov
flds
jp
addr16
fisttpl
jb
repnz
add
or
lret
ljmp
or
dec
mov
ret
inc
jmp
sbb
das
aam
gs
dec
leave
insl
adc
jmp
adc
popf
repz
dec
stc
dec
mov
popa
add
adc
mov
arpl
addl
cltd
push
outsb
mov
or
lds
arpl
push
out
mov
ret
jne
bound
rclb
gs
dec
outsb
jmp
sbb
xor
or
push
lcall
dec
loopne
pop
stos
sbb
mov
mov
xor
int3
add
pop
les
mov
iret
mov
pop
sahf
test
shrb
ret
or
add
fdivrs
cmpsb
ret
out
fidivs
nop
pusha
xchg
mov
cmc
ds
fsubrl
adc
fdivp
adc
pop
and
stos
mov
cmc
rclb
or
out
iret
clc
mov
mov
jecxz
les
push
push
nop
lods
lret
cmp
jnp
sub
push
andb
aaa
push
jne
lods
mov
xor
or
sbb
je
aam
add
ljmp
push
add
int3
sub
xor
mov
inc
insb
out
inc
cmc
mov
ret
mov
xchg
mov
lcall
lret
mov
jg
je
mov
fwait
in
ljmp
or
repz
pop
jl
xchg
xchg
arpl
nop
loopne
xchg
jno
xchg
test
ret
movsb
mov
test
xor
imull
dec
aad
cmp
jle
movsb
jnp
aas
sbb
data16
mov
xchg
repnz
and
jo
mov
dec
es
sub
mov
sub
cmp
fs
out
sub
mov
fbld
sub
push
or
mov
lods
pop
mov
les
push
lock
pop
cmp
add
push
mov
repnz
stc
jl
pop
loop
mov
scas
push
lret
ficoms
or
inc
xor
push
ss
rorb
sub
cli
add
adc
adc
inc
xor
jecxz
push
cwtl
push
in
inc
hlt
pop
rolb
out
add
xor
imul
adc
fcoml
add
nop
inc
in
cwtl
enter
cmp
adc
xor
inc
jbe
movsb
and
xchg
and
mov
adc
jo
mov
xchg
push
imul
cmp
scas
push
out
inc
lock
jecxz
push
adc
sub
lret
jno
lock
push
imul
fidivrl
lcall
iret
subl
cmp
xlat
jbe
mov
add
lods
push
and
loope
pop
mov
mov
mov
jbe
aam
mov
pop
add
add
in
jae
inc
mov
nop
mov
test
in
es
lret
imul
push
outsb
sbb
jns
sti
push
mov
or
fsqrt
cmp
jmp
insl
pop
cli
sub
inc
and
test
pushf
in
sbbb
aas
cmpsb
add
xchg
xor
mov
xchg
ljmp
cmp
jecxz
mov
mov
jmp
lahf
mov
dec
and
rep
sarl
dec
shrb
repz
sar
mov
jne
sti
jo
dec
lahf
rcr
and
cld
inc
js
xor
mov
push
jle
setle
jbe
loope
inc
fwait
cmova
and
dec
aaa
cli
pop
mov
inc
and
cmpsb
subl
stos
mov
scas
movsb
int3
mov
mov
push
xor
xor
inc
enter
lcall
adc
push
jnp
push
inc
sbb
xorl
out
clc
mov
outsl
add
jae
ds
out
pop
mov
pop
cmp
pop
jge
je
std
sub
adc
outsl
jb
ljmp
push
enter
sub
dec
leave
jnp
mov
inc
ret
push
sti
out
jecxz
mov
cmpsl
dec
push
addr16
lods
popa
popf
test
outsl
daa
in
popf
add
divb
popa
addl
test
and
cmp
push
pop
sahf
push
mov
es
cmp
dec
js
pop
and
mov
xor
ss
sub
cs
je
enter
fmuls
dec
int3
mov
std
mov
push
inc
push
int3
cltd
cmp
call
jo
pop
stos
mov
stos
fstl
stos
dec
sarb
into
aad
mov
push
sbb
inc
cmpl
daa
sbb
into
push
scas
sbb
mov
loopne
scas
scas
gs
loopne
pusha
lods
mov
pushf
pop
call
xor
xor
shll
dec
inc
jp
jo
xor
or
addl
cmp
cmp
mov
iret
mov
lret
pushf
call
xor
mov
in
push
cmp
mov
jo
push
lret
mov
popf
or
sub
lock
jb
jbe,pt
inc
ret
aad
jb
jbe
push
imull
adc
mov
fsubrs
enter
push
pushf
pop
push
sbb
mov
ficoml
adc
sub
mov
sbb
jge
sbb
mov
add
push
enter
and
rol
jns
sub
jo
pop
xor
cmp
mov
cmp
xor
imul
es
loop
outsl
pop
roll
mov
test
gs
filds
mov
std
repz
dec
push
mov
and
mov
enter
sub
add
sub
add
jle
loop
rcrb
repz
sub
icebp
flds
push
add
lock
push
dec
xchg
sub
sub
cli
ljmp
adc
out
xchg
xchg
pop
sbb
push
push
lret
cltd
or
lods
test
les
aaa
jne
cwtl
cmp
cmp
insl
push
mov
out
adc
shl
inc
pop
and
dec
xor
in
cmp
sbb
push
dec
cli
insb
mov
mov
pop
jmp
test
inc
fcomp
das
jl
and
shl
or
pop
icebp
xor
xor
daa
jne
test
push
adc
fldpi
pop
mov
lods
cmp
and
or
iret
inc
pop
push
daa
test
cmp
add
push
fnstcw
test
pop
stos
adc
push
jnp
into
cli
pop
mov
push
jb
aad
xchg
rcrb
xor
aas
fsubl
sbb
pop
sbb
push
mov
or
fs
fwait
jne
sarl
xchg
push
cld
mov
jne
lahf
loop
or
loopne
dec
aam
jmp
jne
jle
push
scas
pushw
push
jo
adc
cltd
mov
pop
aam
cltd
pop
push
testl
push
outsl
sahf
mov
dec
sbb
cmp
mov
and
fadd
fists
push
pop
dec
nop
sub
cmp
lahf
pinsrw
pop
stc
ret
insl
and
into
mov
stc
jne
pop
adc
jle
mov
je
mov
mov
and
lahf
pop
loop
mov
add
fdivrs
sub
add
mov
inc
out
mov
xchg
xchg
ret
push
and
cmp
repz
jmp
out
mov
bound
js
mov
push
inc
mov
pop
and
pop
popl
and
leave
jns
cmpsl
in
dec
jmp
mov
fldenv
inc
roll
ret
jae
inc
xchg
out
jg
loopne
mov
imul
adc
aad
popf
cwtl
test
loope
lea
or
xchg
js
je
loopne
adc
cmp
adc
cltd
xchg
jmp
nop
mov
in
ds
dec
sbb
jle
dec
mov
sahf
xchg
add
cmp
inc
lods
jno
insl
push
es
std
inc
mov
divb
lods
dec
push
loop
loop
scas
and
loope
sub
scas
sbb
sbb
and
ds
sbbb
sub
aad
out
rclb
shl
xor
cli
push
daa
jmp
gs
stos
imul
into
add
jbe
rcl
pop
mov
repnz
in
imul
sub
sub
xor
loopne
jo
cld
icebp
cld
inc
cmpsl
addr16
push
not
dec
cmp
xchg
add
mov
xchg
xchg
mov
ret
mov
dec
cld
push
sbb
js
stc
popa
jo
mov
push
repnz
jmp
sub
sbb
jnp
xor
mov
sub
push
push
data16
cmpsl
push
cltd
cli
pop
mov
adc
push
mov
stos
repnz
cmpsb
dec
aam
arpl
lret
clc
lea
adc
or
push
imul
pop
push
in
xor
fisubrl
leave
jg
mov
push
enterw
repz
clc
or
add
xor
jns
xchg
aad
sub
mov
xchg
xchg
mov
jbe
aad
add
push
mov
fcmovbe
fiaddl
cmpb
pop
cmp
xchg
dec
je
fcompl
cmp
sbb
arpl
xchg
adc
sub
sahf
cld
add
add
adc
adc
pop
jle
cmp
imul
aaa
mov
jbe
nop
mov
leave
arpl
or
adc
insl
xor
push
or
cmpb
and
mov
push
xchg
std
and
sub
test
fstpt
sub
inc
sub
jae
les
pop
dec
jge
aad
cmp
shr
jne
dec
sarb
outsl
dec
add
enter
test
sub
sbb
sub
dec
rol
adc
sub
xlat
imull
outsb
cmp
or
aad
mov
shrb
sbb
or
test
cli
cmp
push
jle
ds
aam
insl
cmp
lds
call
sbbb
push
add
xchg
int
mov
xchg
lds
cwtl
lahf
scas
mul
stc
sub
add
push
enter
shrb
sub
mov
addr16
sub
stc
mov
xor
push
jb
or
cmp
push
repnz
fst
pop
sub
pop
cs
and
sti
je
adc
ret
dec
loop
leave
and
push
aam
inc
sub
fld
scas
ret
cmpl
lods
pop
adc
push
mov
pop
addr16
les
lcall
aad
or
int
inc
cmp
and
testb
dec
cs
movsl
and
push
test
or
daa
sahf
cld
jb
int
cwtl
inc
dec
mov
xchg
sbb
sub
push
xchg
lcall
sti
xor
fsubp
cmc
movsb
mov
xlat
cmpl
xchg
dec
mov
int3
loop
sbb
out
and
test
dec
sub
pop
cmp
mov
push
repnz
stos
lea
mov
mov
bound
mov
aam
push
insb
inc
in
ret
ja
push
stc
add
mov
test
mov
sub
sub
xor
test
inc
sub
jp
mull
leave
aaa
stos
jecxz
mov
xor
inc
aad
fisttps
sub
das
iret
xchg
lcall
xchg
icebp
sbb
stos
scas
inc
xor
test
repnz
add
push
or
and
mov
xchg
cmp
arpl
jmp
ret
gs
cltd
adc
into
pop
push
mov
in
sbb
in
popa
dec
add
lock
push
ja
push
push
ret
xchg
jl
mov
push
lods
cmp
addr16
adc
sti
pop
push
mov
insb
jbe
faddl
or
mov
test
scas
popa
cli
fcomps
inc
repz
cmp
mov
insb
loop
inc
out
add
sbb
or
stos
mov
push
stos
cmp
jle
imul
insl
aam
mov
and
inc
outsb
loope
shlb
mov
arpl
and
xchg
outsb
push
sbb
cmpsl
inc
fcmovnbe
xchg
dec
inc
shrb
mov
xor
test
pushf
outsb
hlt
sub
add
cli
imul
jl
inc
sub
add
mov
xor
sbb
cltd
popf
loop
repnz
loop
mov
pop
sbb
lret
arpl
xchg
pop
cmp
mov
dec
adc
push
andb
ljmp
daa
sbb
xlat
mov
pop
or
ret
inc
fildl
aad
hlt
jo
xchg
out
and
mov
jne
mov
dec
insb
stos
cmpsb
mov
stos
test
mov
pusha
leave
movsl
shlb
push
lods
addl
das
xchg
adc
loop
loop
lds
push
mov
imul
adc
mov
mov
insb
pusha
sahf
xchg
lods
adc
in
int
add
mov
pop
and
cli
adc
cmp
sbb
push
rolb
lret
push
notl
xchg
sbb
mov
jno
xor
and
mov
shrl
test
jno
stc
or
mov
pop
std
and
std
gs
fidivrl
fldenv
sub
or
imul
add
sbb
popf
sbb
jmp
iret
jb
out
out
mov
cmp
call
sti
add
call
or
mov
jnp
das
sbb
push
sbb
cli
es
sub
jp
bnd
pop
jl
mov
mov
adc
mov
cmp
cmpsb
jg
push
cmpl
ja
adc
insl
stc
sub
mov
adc
test
std
out
cwtl
iret
inc
outsb
mov
cwtl
and
out
sub
mov
push
add
lea
mov
jmp
push
push
out
je
pop
mov
imul
adc
gs
pushf
fstpt
lahf
imul
pop
cmp
stos
push
cmpsl
loop
test
psllq
mov
in
push
loope
idivb
xor
mov
xchg
cwtl
out
mov
sahf
fsubrl
imul
mov
xor
xor
push
add
cmpsl
jae
jo
cmp
cs
mov
leave
push
popf
cmc
pop
mov
push
test
cs
iret
test
outsb
inc
dec
lea
push
sti
lock
loopne
fldt
inc
mov
cmc
ljmp
cli
dec
fcoml
inc
andl
and
pop
out
mov
jno
int3
loope
filds
movsb
xchg
add
outsl
inc
fstpl
and
mov
jae
and
ret
orb
jmp
cltd
mov
adc
jo
pop
xorw
int3
push
cwtl
jb
jl
cmp
push
jmp
adc
sub
jg
fcmovnb
cmp
sub
enter
mov
cmp
xor
adc
fldcw
pop
arpl
out
and
jmp
fcoms
xchg
subps
hlt
mov
loopne
mov
xchg
in
adc
daa
popl
les
xor
xchg
cld
jmp
int3
xor
clc
popa
jl
fwait
push
mov
mov
fistl
ljmp
mov
jl
mov
sub
imul
pop
imul
out
iret
xchg
jg
sub
fcos
cltd
test
xchg
stos
mov
fsubrl
jl
dec
push
stos
and
fs
cmp
pop
sbb
or
sub
aaa
inc
and
push
lea
sti
or
hlt
or
push
cmpsb
jo
or
and
and
push
cmp
movsb
cmp
addr16
sbb
jns
mov
sbb
mov
aas
push
or
jle
mov
lret
repz
pop
cmp
lods
pop
cmpsb
insb
pop
inc
cmp
jo
repz
aad
fildl
add
in
inc
push
jns
std
clc
and
sarl
dec
pop
push
push
shll
jb
test
xor
add
rclb
loop
daa
loopne
rclb
push
out
pop
inc
mov
jns
inc
inc
sub
sbb
daa
push
mov
dec
pop
loop
aaa
pushf
mov
mov
jl,pn
popl
xor
push
into
je
ret
xchg
and
or
jns
and
inc
inc
adc
aaa
mov
push
pop
out
xor
sbb
scas
dec
bound
arpl
mov
mov
ret
push
push
add
jne
pop
mov
les
cmp
or
pop
adc
pop
outsb
xor
inc
add
mov
sub
cmp
stos
js
movsb
mov
sbb
mov
negl
stos
cmp
movlps
cmp
cmp
xlat
adc
mov
mov
lret
daa
mov
mov
jle
jge
stos
mov
gs
cmp
dec
mov
movsb
sahf
xor
add
aaa
hlt
jmp
inc
or
mov
inc
mov
lret
icebp
xchg
loop
push
jl
push
popf
mov
cmp
dec
cmp
ret
lcall
shlb
loopne
mov
pop
into
jbe
lret
add
lcall
adc
popa
dec
pop
or
jp
adc
cmp
imul
push
or
inc
add
xor
cmpsb
xchg
sub
push
jmp
loope
aad
aad
or
pop
sti
popf
xchg
mov
fcomps
cmp
movsb
cld
lea
inc
mov
orl
loop
sub
xchg
mov
add
push
das
inc
out
adcw
or
push
shl
mov
dec
xor
int
add
push
mov
std
or
cld
push
inc
es
and
loope
sbb
sbb
xor
and
std
pop
scas
pop
dec
in
pop
sbb
add
pop
pop
mov
cmp
cld
ja
xchg
cmc
aam
js
push
setae
sub
pop
movsl
inc
cmp
leave
lods
lds
or
push
fcmovnbe
rorb
inc
fscale
or
sbb
and
test
pop
mov
es
mov
fs
je
scas
mov
sub
cmpsl
popf
add
jl
mov
and
mov
push
pop
popa
and
sub
into
mov
pop
test
imul
mov
xor
mov
ret
shll
repz
inc
scas
cmp
cmp
pop
aas
das
clc
push
mov
loope
ret
push
lahf
xchg
hlt
insb
test
xorl
shrb
jmp
cmpl
mov
bound
lret
cwtl
fldenv
dec
aas
mov
push
ds
xor
ja
cld
repz
xor
adc
andb
fwait
aas
or
jo
jl
push
fsubrp
mov
pushf
movsl
sub
inc
jl
mov
pop
pop
test
lcall
jle
inc
jno
std
mov
or
testl
push
mov
loop,pn
loope
jbe
daa
mov
sbb
scas
jg
and
popa
les
addr16
adc
xor
sub
and
dec
lret
dec
xor
adc
mov
int
insl
int3
popf
in
pop
fcmove
and
or
inc
iret
sbb
out
scas
xchg
scas
fisttpll
mov
or
mov
jl
loope
or
jne
mov
mov
cli
jae
jb
mov
jle
inc
movsl
pushf
sbb
mov
fldcw
int3
ret
push
mov
pop
aad
push
push
scas
push
clc
add
mov
movsl
les
mov
bound
movl
push
xor
insl
mov
std
add
cltd
jg
daa
daa
cmp
sbb
adc
cmp
daa
cli
adc
insb
jecxz
in
pushf
rorb
xchg
mov
and
into
lds
cmpsl
movsl
mov
insl
enter
in
xor
jge
aam
cmp
fildll
dec
inc
pop
das
aad
les
pusha
and
in
leave
jg
sub
push
xchg
mov
addr16
das
mov
push
arpl
out
mov
out
loope
lods
mov
xchg
aam
sbb
cmc
or
sahf
pop
xorb
iret
fsubl
sti
and
into
sub
fcmovnb
mov
jbe
dec
or
stc
arpl
and
iret
xor
test
jg
jns
std
in
xchg
les
ljmp
sbb
call
jns
movsl
dec
mov
add
ja
shr
aam
dec
ret
and
adc
sub
jb
imul
testl
lods
mov
push
jae
inc
push
and
rclb
out
sti
sti
fidivs
push
adc
ret
aad
pop
cmpsl
sub
mov
xor
loopne
mov
dec
sbb
or
jle
ret
pop
xchg
adc
xor
jmp
bound
scas
scas
sar
not
mov
jnp
es
dec
push
push
aas
mov
mov
les
les
in
je
mov
fstpt
and
out
inc
mov
jl
cmp
adc
mov
dec
mov
das
call
cltd
mov
push
push
inc
outsb
mov
mov
lret
jmp
xor
jns
inc
or
mov
mov
imulb
cmc
mov
xor
fcomps
adc
and
mov
add
sbb
aad
mov
cmp
fsubrl
inc
loopne
push
test
mov
std
inc
sbb
scas
dec
jbe
inc
pop
jbe
xchg
nop
jns
ljmp
test
add
jbe
or
and
insb
cwtl
xor
shl
add
ds
xchg
imul
mov
mov
mov
cmp
js
enter
mov
imul
js
jl
mov
fists
xchg
je
cmpsl
les
dec
and
xorl
adc
cmp
pop
jmp
mov
xlat
jno
cmp
clc
pop
test
fmull
inc
ljmp
aas
jns
pop
faddl
mov
jmp
stos
repz
inc
add
xor
loop
bound
ret
mov
inc
popa
int3
mov
and
cmp
dec
mov
adc
aas
mov
js
ljmp
call
sbb
cmp
addr16
cmc
pop
mov
test
adc
add
add
cmc
out
orb
cltd
inc
pop
iret
jge
pusha
out
and
push
inc
push
dec
adc
xchg
xchg
dec
lret
sub
mov
int
test
sub
push
insb
fimull
push
jo
pop
or
sbb
jo
ret
mov
jmp
xchg
xlat
dec
rol
incb
xchg
out
jnp
lahf
sti
test
subps
or
sti
gs
ss
js
add
jae
jno
mov
jbe
rcl
out
dec
cld
out
jno
fildl
dec
pop
stos
repz
jnp
inc
jl
xor
add
cmpsb
pop
lret
imul
popa
inc
test
mov
out
mov
loop
stos
stc
pop
daa
jp
mov
sbb
je
popa
jecxz
jl
adc
push
stc
push
ret
imul
jo
mov
dec
pop
add
inc
xlat
fld
jne
daa
dec
rcrb
arpl
in
mov
pop
movd
jnp
xchg
add
mov
xchg
repz
and
xor
mov
orl
xchg
shrl
iret
mov
adc
jb
push
outsb
cld
negl
jns
push
mov
enter
push
shll
mov
dec
mov
insl
pusha
roll
cmp
in
jne
int
mov
loopne
fsts
pushf
das
out
jp
cs
pop
mov
fdivl
lods
fucom
push
les
hlt
lods
push
mov
push
shll
xchg
test
sub
fcoml
fadds
xor
dec
test
push
jae
outsl
push
cmc
test
invd
or
in
sbb
jno
nop
xor
xchg
addr16
inc
cmp
insl
outsb
les
outsl
xor
scas
pop
stc
mov
icebp
das
and
add
mov
jge
adc
cmp
dec
iret
add
mov
jo
in
mov
mov
pop
push
or
pusha
mov
jmp
fstps
push
rclb
icebp
or
mov
push
lods
lcall
je
push
fisubs
insb
daa
push
faddl
or
xor
inc
cld
bound
mov
push
loopne
std
sub
fcoml
push
pop
lret
push
daa
mov
or
test
adc
and
fimuls
negl
subb
jecxz
outsl
test
in
cltd
jp
pop
push
popa
mov
mov
orb
cltd
mov
adc
push
and
fisubl
popf
sub
stc
leave
dec
std
dec
push
outsb
xchg
lds
das
loopne
sbb
fldcw
adc
insb
dec
orl
mov
adc
push
adc
fisubs
jb
movsl
mov
lret
sub
push
cmp
mov
lds
fsubrs
cmp
xchg
xchg
jge
push
sub
lret
mov
jge
je
mov
push
cmpsl
imulb
nop
mov
mov
cmp
in
fistpll
leave
jb
mov
imul
test
scas
ss
test
nop
adc
and
dec
add
es
clc
mov
pop
adc
push
sbb
mov
or
jne
inc
stc
orb
cmp
cltd
or
fs
pop
stos
stos
xchg
sbb
aas
insb
xor
stos
jl
dec
and
std
push
in
pop
fidivl
loope
aam
jl
mov
idivl
mov
mov
adc
std
jne
insl
int
dec
mov
push
push
enter
lret
mov
dec
mov
in
cmp
in
mov
aam
push
rorb
stos
mov
imul
loopne
or
jmp
inc
or
dec
pop
pop
insb
fsubr
mov
sti
add
daa
in
loope
movsb
repnz
loopne
movntq
dec
fistl
xchg
fisttpll
into
imul
mov
test
fstp
push
rcll
adc
les
loope
sub
pop
xor
lods
sub
ss
nop
jg
aam
dec
xlat
ja
mov
mov
sbb
dec
ds
mov
rorl
movsb
sti
cmpsl
dec
xchg
pop
mov
dec
xchg
xchg
mov
inc
fwait
dec
jge
push
sub
out
jo
jno
and
shll
loope
cwtl
dec
xchg
push
fldenv
enter
push
mov
decl
lock
mov
pop
daa
mov
add
adc
xor
iret
insl
mov
in
maxps
inc
and
rcll
neg
jecxz
xor
js
incb
jb
inc
iret
mov
add
cmp
orb
mov
imull
aas
shrb
sub
add
pusha
xchg
gs
test
std
xchg
ljmp
add
lock
lods
outsl
jb
imul
loopne
hlt
pop
aam
cli
dec
push
dec
scas
xor
lret
mov
dec
and
jp
jg
es
mov
mov
add
adc
loope
add
js
push
cltd
adc
cs
jg
mov
dec
shrl
xlat
xor
decb
in
jecxz
test
bound
pop
js
lcall
loopne
ret
push
fsubrl
mov
jge
mov
cmp
cmp
int3
mov
mov
fisubs
test
sub
divb
cmp
mov
ljmp
insb
or
pop
test
clc
outsl
xor
pop
stos
mov
insl
sub
daa
xor
inc
mov
xchg
andb
xor
cmp
in
jb
inc
mov
sub
mov
scas
push
ret
testl
push
cmc
and
lods
divb
aad
std
inc
repnz
mov
es
inc
jecxz
pushf
jnp
cmpsb
pop
iret
jb
test
loop
insb
imul
fwait
cmpsb
add
mov
adc
add
jnp
rolb
cmp
mov
dec
dec
jno
mov
mov
aam
aam
scas
add
test
inc
les
aas
mov
sbb
xor
xchg
ficompl
mov
cmp
dec
test
pop
insl
rorl
jp
int
fs
adc
rcrl
adcb
mov
aad
daa
jb
lahf
jae
fstl
push
cmp
or
pop
pushl
and
xlat
sub
test
pop
push
test
xchg
clc
lds
adc
mul
sub
int3
sbb
jbe
xor
cmpsl
ror
mov
cmc
into
adc
lods
xor
sbb
rcl
into
inc
sbb
sbb
fldl
adc
xor
pop
inc
or
sub
push
pop
or
xchg
cmp
movsb
sub
sahf
sarb
test
scas
mov
dec
or
iret
insl
push
pusha
dec
test
adc
mov
movb
jns
das
jae
dec
aas
xchg
xchg
add
mov
adc
mov
les
pop
mov
mov
stc
jg
lret
ret
or
jne
jg
jecxz
pop
and
aaa
inc
push
hlt
ds
bound
icebp
fldcw
cltd
scas
xchg
pop
dec
pop
in
xor
pop
jmp
cmpsb
and
ret
fidivs
arpl
fldenv
stc
and
call
lcall
mov
or
shll
movsl
aad
mov
loope
sub
mov
mov
xor
mov
popl
dec
jne
pushf
and
outsb
jge
xchg
cmpl
gs
and
sbb
sbb
dec
sub
repz
adc
sbb
mov
popa
insl
lahf
arpl
push
mov
movsb
mov
mov
jecxz
pop
add
stos
pusha
loope
repz
and
enter
enter
xchg
jle
cmp
scas
dec
call
jp
push
and
dec
sub
xchg
xchg
pop
out
cmp
jl
dec
out
js
push
lret
pop
inc
adc
iret
add
xchg
inc
jg
test
mov
sbb
add
psrld
loopne
sahf
push
pusha
rolb
iret
outsb
lcall
xchg
mov
push
cmp
mov
stos
out
jl
sbb
iret
sbb
sub
sub
lds
std
mov
stos
cmp
cmc
fcoms
xchg
pushf
movd
loopne
cmpsb
xorb
mov
repz
lret
mov
xor
test
mov
movsb
jae
push
xchg
pop
shrb
jle
sub
shlb
dec
mov
mov
enter
mov
mov
in
arpl
xchg
dec
add
xor
or
cmc
int3
dec
add
dec
enter
ja
imul
xor
adc
loope
insl
cltd
rcrl
inc
es
fdivr
inc
outsl
in
lret
dec
scas
cld
and
aam
cmp
cmp
clc
test
mov
pushf
jl
arpl
in
nop
jmp
mov
jmp
movsb
das
jp
sbb
sub
jnp
pusha
mov
xlat
test
data16
sbb
out
mov
negb
jl
bound
jle
mov
mov
push
gs
jae
xor
jmp
pusha
dec
fs
imul
leave
pop
and
inc
jbe
xchg
xchg
sbb
xor
inc
fdivr
xchg
test
xor
pop
into
sub
mov
sbb
push
out
loope
push
scas
movsb
inc
adcl
scas
xchg
clc
sti
rcrl
xor
add
insb
mov
mov
mov
sub
aaa
or
pop
xchg
enter
enterw
inc
jg
lea
sbb
or
imulb
std
jno
out
jae
insb
inc
loope
addr16
jne
rcr
mov
movsb
dec
add
mov
pushf
rol
or
xchg
das
sbb
fisubs
and
jne
imul
mov
subb
out
aam
mov
repnz
rorl
xlat
std
test
mov
sbb
and
mov
add
scas
jns
xchg
sahf
icebp
mov
jp
adc
pop
cmc
push
pop
sbb
and
lret
and
jb
jbe
mov
ss
adc
into
sbb
mov
xchg
es
gs
cmp
pop
stc
sub
gs
adc
jne
push
loopne
stos
cli
rcll
or
enter
add
pop
in
dec
pop
sub
jno
xlat
bound
int3
sahf
jg
pop
fbld
das
push
cmp
stos
outsl
inc
add
or
sbb
xchg
adc
mov
push
sti
mov
out
sahf
add
mov
fistpll
mov
imul
xchg
das
sbb
mov
fiadds
js
push
lret
and
add
and
xchg
fwait
sti
inc
jo
push
in
mulb
lcall
pop
lods
or
cmpsb
mov
mov
hlt
mov
push
out
mul
inc
jo
adc
mov
les
jle
sahf
jae
stos
pop
cmp
cmp
out
inc
jp
ds
sahf
mov
inc
out
daa
jo
aad
pop
push
or
sub
loope
sbb
jbe
pop
and
ret
inc
into
cmpsb
xchg
stos
inc
and
jns
arpl
dec
ja
jno
inc
or
rol
inc
insl
add
add
xchg
mov
push
mov
push
mov
dec
aam
cld
punpckldq
nop
mov
sbb
mov
inc
ret
push
mov
lret
mov
mov
aaa
lret
xchg
pop
xchg
push
cmp
ss
pop
xor
push
out
test
xor
arpl
test
adc
sbb
fsubl
sub
pop
sub
jae
or
repz
sbb
mov
add
in
push
fsubrs
mov
push
mov
mov
sub
cmpsb
xorb
aad
enter
push
cmp
into
jle
lods
mov
xor
mov
push
into
int3
lret
adc
mov
inc
movsl
ss
pop
push
scas
dec
cwtl
fstl
das
cli
or
aas
aas
jnp
lea
xchg
xlat
fisubrs
sbb
daa
sahf
jmp
xchg
incl
xchg
mov
mov
pop
cmp
jo
mov
push
cwtl
std
out
mov
data16
jmp
push
or
jge
xchg
or
arpl
fcompl
inc
cmp
mov
jne
cmp
jb
lret
cmp
xor
aam
scas
je
cmp
sbb
lea
out
mov
mov
and
push
ss
movsl
dec
push
sub
xchg
xchg
lahf
daa
adc
sbb
jnp
aas
icebp
shll
xor
inc
and
outsb
sar
adc
pusha
hlt
jno
loope
xlat
pop
test
ss
inc
cmc
sbb
test
adc
push
fwait
jno
sbb
push
jle
jo
aam
scas
and
dec
pop
mov
dec
fisubl
hlt
adcb
push
test
or
push
mov
add
adc
arpl
jle
dec
insl
sub
fstpt
jge
jle
les
cmp
or
sahf
mov
lcall
xor
push
mov
outsb
fldl
lds
gs
push
out
jp
mov
jp
add
outsl
xchg
out
shl
js
pop
add
mov
xor
sahf
jo
shl
repz
adc
pop
fxtract
lahf
mov
lret
daa
inc
lret
ret
dec
mov
cmpsb
lahf
test
mov
std
jecxz
mov
or
call
jmp
scas
cmp
mov
mov
mov
adc
xorb
fmulp
cmpsl
mov
mov
imul
gs
movsl
pop
inc
jbe
mov
std
pop
aam
pop
hlt
sub
inc
cmp
aaa
je
lret
lock
mov
lret
sbb
js
pop
adc
inc
pop
mov
stos
push
insb
dec
or
imull
cli
sbb
movsl
dec
lods
pop
imul
scas
pop
mov
jnp
mov
push
js
ret
adc
jo
cltd
sub
add
mov
out
test
and
movsb
repz
sbb
mov
ret
jg
cmp
inc
mov
flds
mov
mul
xchg
adc
das
test
xorl
in
cmc
pop
sub
sbb
les
lock
mov
jnp
loope
clc
stc
ljmp
jg
lock
leave
xchg
mov
and
clc
push
addr16
out
dec
cmpsl
aas
shl
lea
mov
and
cmpxchg
dec
xchg
inc
and
sahf
out
and
fs
cwtl
add
movsl
or
fsubrp
dec
push
ficomps
pshufw
mov
divb
int3
ret
dec
mov
test
pop
jno
pop
ret
inc
push
dec
subl
cli
jno
into
mov
sbb
xchg
inc
ja
mov
or
cmp
lcall
xchg
jmp
jae
call
xchg
cmp
divl
cmp
sbb
lahf
inc
cmc
fcmovnbe
aam
lds
push
push
lea
push
jecxz
outsl
xor
mov
sbb
cmpsb
mov
dec
outsl
inc
xchg
daa
aas
lahf
dec
mov
sub
xchg
scas
adc
inc
bound
cmp
sub
jo
cs
mov
gs
loopne
arpl
pop
sbb
repz
push
aaa
cmpsb
rcrb
inc
hlt
sarl
repnz
xchg
fstpl
imul
jno
je
xlat
pop
inc
addr16
dec
cmp
jae
inc
lea
fidivrs
cmp
xchg
stos
pop
popf
addr16
adc
in
mov
jno
sahf
inc
addb
ljmp
inc
das
pop
out
pop
fiaddl
or
and
adc
and
xor
mov
and
fsubs
cli
sbb
test
subl
mov
sti
add
mov
fbstp
rol
testl
xchg
mov
sub
lds
cs
lods
in
stos
push
dec
ja
test
jo
pop
push
mov
mov
cmc
sarl
or
and
cltd
jns
and
and
icebp
cmp
lds
out
divl
cmp
lock
mov
popf
cmpsb
xchg
outsb
add
push
out
outsb
cmp
sbb
cmp
ds
test
ss
and
cmp
in
call
xchg
or
mov
leave
jne
out
ss
mov
es
fcoms
xchg
pop
sub
gs
mov
out
inc
add
xchg
sub
scas
les
or
mov
push
mov
pop
inc
mov
shll
decb
scas
gs
mov
mov
or
sub
subl
adc
stos
cmp
stos
cmpsl
daa
push
pop
aaa
daa
cmp
jae
aas
pop
movsb
not
mov
das
lods
addr16
inc
jmp
push
mov
fnstcw
mov
jle
mov
inc
add
add
mov
jg
rol
data16
jne
pop
mov
and
imul
int
subl
int3
mov
mov
xlat
fs
pop
jmp
pop
aad
add
jo
loopne
cmp
frstor
adc
pop
repnz
and
xchg
mov
pop
andl
mov
sub
push
mov
dec
iret
dec
sti
icebp
sbbl
mov
aad
or
fists
repnz
push
gs
mov
out
pop
outsl
mov
push
pop
pop
mov
popl
lcall
or
sbb
pop
lock
add
mov
sbb
jb
dec
jo
aam
popa
sahf
xor
fsubrs
mov
les
mov
loop
lods
dec
mov
push
push
mov
nop
lea
cli
cwtl
inc
push
ljmp
pop
sub
mov
cmc
pop
xor
adc
mov
fisttpll
imul
push
ljmp
fists
cmp
mov
jae
fisubrl
mov
shrb
cmc
stc
and
jle
shlb
ret
jne
cmp
cld
int3
mov
xor
mov
call
icebp
stos
loopne
loope
je
bound
xor
dec
fs
stos
mov
inc
orl
add
push
insl
mov
jnp
inc
cmpsb
cmp
mov
lds
xchg
scas
push
mov
insb
call
mov
out
ljmp
pushf
sub
inc
jmp
fwait
push
repnz
cmpsb
push
mov
mov
xor
sarl
lcall
scas
in
sbb
sub
mov
jo
fsts
cltd
mov
loopne
add
inc
mov
insl
and
fmuls
mov
dec
pop
jp
cmp
adc
imul
and
addr16
outsl
loopne
lods
mov
lea
lret
sbbl
mov
mov
inc
aad
xchg
lea
test
push
or
inc
mov
push
movd
fidivl
scas
outsl
mov
int3
lret
lahf
insb
sbb
jno
pop
mov
jecxz
fsubrl
aad
mov
jae
loope
into
push
xor
insb
dec
mov
ss
inc
scas
imul
mov
sub
cmp
sti
dec
iret
sub
adc
lretw
xor
arpl
dec
in
rorl
and
nop
adc
or
jl
dec
popf
inc
popa
scas
daa
cwtl
std
adc
mov
rol
mov
sarl
xor
rorl
ss
inc
stc
ja
addl
out
gs
sbb
jp
cli
dec
xrelease
ret
in
cmc
mov
and
pmuludq
mov
mov
pop
mov
scas
mov
cmp
mov
pop
xchg
jnp
sbb
inc
sbb
xchg
or
das
xchg
xlat
jecxz
lahf
fsubs
xchg
push
fwait
mov
addr16
jge
sarl
jl
cltd
loop
icebp
cltd
dec
rorb
dec
loop
mov
xchg
mov
rorb
in
dec
sub
arpl
loopne
jbe
mov
inc
subl
rorb
mov
sarb
add
pop
push
ds
or
out
pop
fcomi
pop
std
and
lods
mov
ss
outsl
fnsave
subl
aam
cmp
push
sbb
sub
outsb
imul
push
mov
fldenv
inc
cmc
mov
repnz
pop
leave
cwtl
pop
push
fs
lods
sub
push
mov
movsl
iret
jnp
xchg
push
rolb
mov
movsl
ds
inc
mov
dec
add
mov
lods
sbbl
cmc
insb
mov
data16
test
sub
mov
loope
fcoms
imul
notb
ret
repnz
in
test
lock
test
add
jne
mov
in
aaa
fadd
outsl
xor
das
mov
je
sub
xchg
push
sub
lods
fsubs
cmp
xchg
insb
lret
ficoml
dec
jne
cmc
inc
nop
in
fisttpl
inc
leave
in
and
scas
sub
shl
add
clc
test
xor
and
mov
shll
xor
jecxz
nop
es
pop
xor
loop,pn
ljmp
loopne
pusha
adc
jb
cmpsb
repnz
push
cmc
fstl
daa
decl
std
call
roll
jl
sub
lods
addl
push
test
adc
dec
fwait
inc
jecxz
jnp
sbb
imul
adc
xor
and
sbb
loop
pop
pop
pop
aad
and
or
or
xchg
imul
ret
pop
sbb
lahf
push
jge
into
jge
push
push
push
jle
push
sti
imul
orl
sbb
mov
or
push
and
stos
dec
xor
jmp
jmp
clc
shrl
dec
inc
bound
icebp
stc
and
aaa
pop
xor
stos
push
add
int3
test
mov
ficoms
sub
xchg
jle
popa
cltd
imul
adc
xchg
add
cmp
jle
inc
cmp
or
imul
icebp
adc
pop
xchg
xchg
mov
ljmp
repnz
lods
dec
lahf
aad
jge
aad
mov
in
clc
mov
rclb
jl
pop
and
call
lds
je
pop
lahf
push
jl
push
adc
add
inc
push
add
icebp
test
repz
sbb
push
js
jns
dec
lods
xchg
cmp
sub
sbb
xor
outsl
sub
jecxz
push
xchg
xchg
ret
mov
mov
push
sahf
shr
or
dec
lret
int
mov
lahf
mov
mov
vmread
lods
movsl
mov
test
sbb
sbb
xchg
push
stos
xchg
or
jl
sbb
adc
and
aas
jle
adc
jp
push
pop
cmpsb
cmp
xchg
xlat
scas
insl
jl
std
popf
or
adc
cmp
fcomps
fisubl
sbb
loopne
nop
or
out
stos
push
jmp
test
push
jle
arpl
lahf
out
ja
mov
sti
decb
out
data16
adc
push
in
jns
mov
jae
add
test
jns
pusha
out
or
daa
sbb
add
push
sub
cmpsl
jbe
nop
orb
bound
mov
imul
outsb
add
in
call
adc
add
jb
and
les
mov
aas
pop
adcl
mov
or
imul
xchg
in
mov
xacquire
lods
mov
cmp
or
lcall
ja
jbe
jb
in
push
mov
cmp
mov
and
sub
shll
es
insl
fsubs
xor
clc
in
jmp
je
mov
mov
or
sbb
push
mov
call
xor
leave
push
push
ljmp
cltd
push
dec
sahf
cmpsb
cld
sbb
inc
mov
inc
inc
mov
adc
imul
sahf
mov
repz
gs
in
add
ja
jmp
mov
jne
xchg
or
lods
rolb
sub
mov
lret
inc
call
cmc
sbb
ret
xrstor
popa
pop
mov
cmp
pop
xchg
or
lods
push
fsubr
adc
mov
gs
pop
inc
xchg
js
xor
fwait
out
aaa
sbb
mull
push
in
out
adc
lcall
or
mov
push
sbb
add
je
mov
out
mov
out
jl
cwtl
xchg
std
fisubrl
lods
pusha
leave
mov
int3
mov
imul
mov
push
sub
bnd
loop
xchg
enter
add
cmp
pop
cmp
xor
sub
push
xchg
outsb
and
and
sub
mov
clc
pushfw
test
cmp
adc
or
pushf
push
test
adc
inc
mov
mov
cmp
pushf
xchg
cmp
lds
ss
testl
lcall
in
fs
iret
sub
in
out
jo
ret
rcrb
mov
cmp
jmp
stos
test
inc
mov
jnp
maskmovq
testl
jns
dec
dec
adc
jae
adc
xchg
mov
and
das
xchg
sub
cmp
mov
pop
or
mov
dec
pop
adc
xchg
xchg
pusha
es
push
and
int
into
rclb
cmp
jb
dec
inc
fs
data16
xor
notl
push
in
shll
ret
jo
or
pop
les
cmc
pop
xor
cmp
roll
dec
xchg
or
rorl
psubd
lds
jecxz
arpl
sbb
inc
adc
or
lods
sbb
or
jb
sti
ja
mov
stc
es
jno
aaa
cmpsl
pop
or
jl
fs
inc
jnp
test
inc
gs
pop
imulb
out
scas
js
xor
and
lds
pushf
loopne
movsb
aad
aad
sub
nop
daa
cmc
in
pop
dec
je
and
popf
adc
sbb
sub
out
mov
into
ds
cmp
jb
fwait
add
scas
ja
movsl
lea
insl
icebp
xlat
sub
jle
bound
xchg
mov
pop
mov
fcoml
fwait
push
mov
test
adc
es
pop
lods
icebp
int
push
out
punpckldq
jne
dec
lret
push
pusha
xchg
daa
jg,pt
ret
mov
xlat
sub
jle
out
enter
into
dec
xchg
mov
std
xchg
jbe
xchg
ja
xor
mov
movsb
sub
pushf
mov
cmpl
fiaddl
orl
scas
stos
cmpsl
stc
out
js
sbb
test
dec
loopne
push
push
add
mov
cmp
loop
data16
cltd
popf
movsb
rclb
and
push
xor
jge
ret
xor
and
shll
ja
push
xchg
das
jno
adc
and
jb
push
aas
in
lods
dec
cmp
jns
inc
ficoml
inc
mov
cmp
mov
ja
push
or
xor
movsl
sub
xchg
add
adc
enter
and
into
aam
nop
mov
jne
mov
in
das
fidivrl
xor
or
add
inc
ja
test
ja
rcr
inc
mov
inc
jge
xchg
pop
mov
cmpsl
ret
jl
mov
adc
outsb
fisubl
inc
aam
insl
mov
sub
lods
popa
pop
and
shlb
jg
repz
xchg
xchg
cwtl
testl
aad
jmp
and
xchg
ret
dec
ret
xchg
movsb
mov
sub
or
sbb
out
popa
sbb
pop
xchg
divb
enter
stc
mov
cmp
out
push
ss
sub
xor
fldz
inc
in
sti
jg
test
mov
lds
adc
mov
or
push
cmpsb
mov
push
insb
inc
push
inc
and
loop
sub
std
xchg
insb
push
pop
xchg
pop
ljmp
dec
pop
and
push
hlt
into
arpl
shlb
dec
in
cmpsl
lods
and
pop
in
push
mov
mov
pop
into
cmpsb
push
and
jge
das
xor
add
pop
cmp
jbe
pusha
ret
or
loop
lret
int3
iret
xchg
adc
cmp
imul
sar
xor
out
dec
cld
es
dec
subb
sbb
adc
push
jle
xor
aas
fsubr
or
ret
jnp
xchg
sti
xor
ret
imul
mov
lret
rcr
jmp
xchg
call
testl
notb
imul
mov
cmp
push
lret
negl
adcb
test
aas
cli
insl
outsb
adc
imul
outsb
mov
rorl
mov
lea
je
mov
or
leave
xor
push
popw
jmp
das
lret
bound
in
mov
jl
jg
into
mov
ljmp
mov
mov
jg
dec
adcl
pusha
ret
xchg
jo
xor
inc
xor
fistpl
jge
mov
test
push
adc
push
lret
loopne
xchg
mov
sbb
dec
fisttpl
popa
ss
pop
jmp
rcrl
jno
in
dec
subl
inc
inc
fwait
cli
dec
adc
pop
sub
outsb
cmp
jb
jg
jno
call
xor
xlat
shl
ss
pusha
nop
shr
adc
mov
sub
rcl
sbb
mov
insb
shll
mov
mov
int
mov
adc
repz
int
sbb
dec
std
lods
loopnew
xchg
ljmp
xor
das
dec
mov
mov
sti
push
mov
sarb
mov
jp
movsl
in
ljmp
jmp
xchg
cmpsb
inc
adcl
push
es
or
rorb
std
scas
adc
mov
jmp
dec
ds
aas
mov
mov
pop
jecxz
ja
inc
mov
cmpsl
sub
cmp
aaa
pusha
out
cmp
xlat
sbb
sbb
insb
push
or
mov
mov
mov
cmpsb
inc
or
int
in
mov
out
test
xor
mov
sub
push
out
in
out
lret
dec
pop
push
call
ror
mov
pop
out
pcmpeqw
cmp
adc
pop
push
adc
dec
lret
mov
lcall
xchg
or
pusha
and
pop
mov
pop
lea
pop
je
add
mov
xchg
xchg
push
push
test
mov
repnz
dec
and
push
mov
ret
mov
push
sbb
movsl
aas
pop
and
stc
repz
out
inc
jge
and
scas
xchg
dec
sbb
shlb
add
mov
movsl
mov
jle
xor
outsb
fisttpl
xor
aam
arpl
aaa
xor
sbb
cltd
iret
add
cmpsb
mov
fwait
dec
or
xor
pop
loopne
and
js
jnp
lret
mov
leave
rol
xchg
fnstsw
sbb
out
dec
jp
mov
inc
outsl
mov
push
stos
shl
jne
mov
movsl
mov
or
in
dec
arpl
repz
add
outsl
cmp
je
cmp
lods
jb
gs
sbb
push
mov
lret
enter
push
mov
pop
dec
out
loope
push
cmove
push
ret
outsb
les
into
fldl
out
pop
jae
sub
add
mov
rclb
or
enter
les
jg
lods
cltd
das
in
pop
mov
sub
addr16
out
sbb
leave
scas
or
mov
adc
xchg
mov
jg
ds
shrb
aaa
dec
xlat
add
and
jo
enter
push
addr16
xchg
cmp
fldenv
and
outsb
inc
pop
push
es
inc
out
xchg
sbb
fldz
xchg
sti
fldcw
or
and
cmpl
mov
ds
shll
clc
lahf
add
mov
call
aam
movsb
mov
push
mov
popf
movsl
pop
into
pop
in
adc
adc
iret
pop
test
cmp
lock
aas
test
fcomip
pop
call
imul
sub
and
pop
xor
xor
xchg
push
mov
mov
pop
jge
sub
aad
sub
pop
and
sbbl
fsub
stos
stos
pop
bound
sbb
mov
clc
pop
outsb
adc
xchg
jbe
mov
mov
out
cld
jle
out
in
cmp
dec
xchg
sub
mov
repnz
jae
lods
and
pop
repnz
fstpl
cmpsl
inc
lahf
sub
push
insb
in
cmp
lods
mov
jbe
inc
ljmp
dec
inc
mov
add
in
mov
data16
push
pop
flds
cwtl
stc
mov
adc
push
repz
or
fisubrs
ss
sub
cmpl
gs
mull
mov
mov
bound
in
popf
adc
ss
cmp
mov
mov
cld
loopne
xchg
jg
add
push
addl
and
popf
mov
mov
pop
ficoms
stos
xchg
fidivs
icebp
inc
fstpl
cbtw
lods
sub
aad
and
mov
test
les
inc
jle
out
pushf
popf
insb
sti
xor
lods
movsl
dec
adc
aas
jl
movsb
bound
sub
dec
cwtl
pop
je
fsubrs
jnp
push
push
int
push
xlat
pop
std
fdiv
add
fs
lods
mov
outsl
sbb
or
sbb
popf
push
mov
adc
call
sbb
je
pop
pusha
cltd
push
xchg
pop
or
pop
and
inc
stos
lret
mov
push
or
cmpsb
notb
testl
call
std
in
cmp
mov
and
add
adc
cmp
cli
in
out
mov
rolb
push
mov
idivb
lds
cmp
ss
push
es
test
inc
pop
outsl
inc
sbb
out
mov
or
outsl
inc
pop
pop
movsb
mov
cmp
dec
jge
xlat
addr16
mov
pop
scas
hlt
std
adc
jne
and
lret
stos
jp
mov
sbb
bound
dec
xor
sbb
xor
aad
or
cltd
cld
shrl
call
fldt
jl
stc
cmp
ds
mov
call
or
in
inc
sbb
cmp
jbe
lds
sub
jmp
std
jb
mov
push
xchg
in
out
pop
adc
push
push
push
jl
es
mov
lods
prefetchnta
sbb
mov
jne
sarb
popf
cld
pop
jp
popf
inc
sbb
lea
fists
scas
int
cmp
mov
ret
stc
mov
icebp
jg
loope
mov
add
das
lods
lock
into
iret
mov
repz
jne
je
idivb
test
cmp
sbb
mov
lock
and
jmp
mov
sub
xchg
push
adc
aas
enter
jo
cld
mov
xchg
out
xor
mov
mov
xchg
push
xchg
adc
inc
test
mov
inc
popa
xor
xchg
inc
push
jnp
push
fistpll
push
out
pusha
ja
daa
rcrb
pop
mov
lcall
pop
or
insl
mov
dec
jl
sti
icebp
inc
mov
pop
inc
ja
jo
pop
mov
leave
pop
push
clc
aas
enter
cs
dec
mov
inc
mov
mov
xor
out
inc
hlt
gs
ds
inc
xchg
pop
fwait
xchg
or
sbb
adc
cmp
iret
mov
push
push
or
and
add
dec
and
mov
or
shr
mov
into
leave
pushf
gs
xchg
pop
lods
add
pushl
repz
fdivrs
cmp
jp
loope
fld
sbb
or
scas
pop
pop
jbe
mov
cmp
hlt
repz
nop
icebp
insl
sti
sbb
jno
stc
cmp
lods
aaa
xor
data16
mov
dec
outsb
in
push
jmp
cli
pop
insl
adc
in
jecxz
lret
pop
test
mov
jp
xor
addb
sub
std
pop
sbb
jo
inc
push
inc
lret
mov
inc
je
stos
loope
js
push
jb
cmp
pop
loop
outsl
ret
and
lds
sbb
mov
addl
cmp
fs
aad
pushf
lds
es
xor
les
and
dec
cwtl
or
lret
cld
jecxz
lret
cmpsl
outsb
sub
aas
vpaddq
sbb
mov
push
repz
mov
lods
sbb
stos
and
in
call
pop
add
pop
sub
inc
data16
icebp
add
jle
insl
pop
aaa
or
imul
mov
mov
scas
sub
xchg
or
add
xor
jno
mov
mov
dec
cmp
lods
clc
cli
dec
and
sub
mov
xlat
sbb
imul
push
fcomip
int
mov
loopne
stos
jge
pusha
push
icebp
push
jg
add
xchg
lahf
add
or
test
in
add
mov
and
popf
leave
bound
rorl
xor
popf
fstl
lahf
in
int
jle
add
xor
cmp
in
ret
push
lods
mov
or
jg
test
jp
jne
xor
mov
pop
jmp
jp
popa
ja
dec
in
pushf
lock
adc
hlt
and
pop
test
int
mov
out
jne
push
or
imulb
mov
les
xor
push
push
adc
pop
jmp
fistpll
pop
and
ror
inc
sbb
outsl
in
jae
fsubrs
jl
push
scas
divb
test
inc
stos
shll
je
xchg
ljmp
inc
scas
sub
mov
shl
lea
sti
pop
lcall
pop
jns
mov
adc
repnz
aam
mov
fwait
and
push
xor
int3
jnp
xchg
and
and
adc
sbb
adc
lret
test
cmp
inc
pop
cmp
sub
sub
loopne
cmp
jbe
push
sbb
mov
pop
adcl
js
dec
and
dec
and
ret
popa
outsl
jmp
and
mov
adc
outsl
pop
sbb
test
mov
jmp
add
mov
mov
dec
adc
insl
push
or
sbb
fcomi
mov
adc
cld
incb
sub
sub
inc
mov
or
ss
pushf
dec
inc
push
lahf
mov
orl
and
jmp
adc
into
mov
lds
cmpsl
sti
popa
sbb
jmp
sbb
mov
fsubr
adc
call
fdiv
and
mov
ja
lods
or
arpl
inc
adcb
fcoms
add
idiv
sub
and
dec
lret
mov
pop
inc
cs
imul
push
ds
arpl
cmpsb
sub
popa
add
dec
add
and
outsl
in
cmpb
push
popf
insb
insl
sahf
lods
and
inc
jecxz
mov
inc
push
adc
cwtl
data16
inc
mov
push
es
jns
mov
jp
xadd
shll
xorl
lret
movsl
ljmp
addb
filds
xchg
scas
xchg
dec
fbstp
test
adc
and
xor
dec
dec
ljmp
adc
dec
dec
loopne
xchg
adc
in
iret
mov
sbb
xchg
les
test
hlt
xor
cld
loop
adc
in
mov
mov
cmp
inc
popa
out
jg
imul
or
mov
xchg
fcoml
mov
pushf
push
es
movsl
out
pop
mov
xchg
nop
mov
fcmovb
push
and
loope
or
in
cmp
mov
push
ret
xor
scas
shrl
std
sub
faddl
cltd
ret
lahf
stos
cltd
fidivrs
fcoml
movsl
repnz
cmpsl
pop
push
jnp
push
add
dec
icebp
cmp
test
loop
or
jp
leave
aaa
sbb
sbb
mov
mov
ret
fldt
or
mov
dec
jg
ljmp
dec
mov
dec
fidivrl
and
jo
repz
repz
cmp
adc
ljmp
outsb
mov
cmc
jno
mov
or
bnd
mov
or
lret
push
xor
jmp
js
ss
xor
shll
pop
stos
add
jg
sub
sub
subl
fisttpll
and
aad
mov
fucompp
in
test
shll
mov
and
mov
sbb
jle
sbbb
xchg
cltd
jb
inc
decb
fdivrl
adc
add
push
mov
jecxz
or
mov
fsubp
fistl
inc
icebp
insb
lcall
aas
add
mov
pop
adc
or
jp
pushf
xchg
into
test
fs
fcmovnb
dec
inc
xor
fwait
cmp
push
mov
jbe
fwait
rolb
test
loop
add
je
adc
imul
jns
jb
imul
imul
aam
repnz
push
pop
xchg
push
popa
sub
inc
sti
and
sahf
dec
faddl
push
repz
xchg
stos
cmpsl
mov
mov
int
outsl
enter
in
rcr
mov
push
push
add
lods
inc
test
push
in
or
es
dec
and
lret
xchg
std
mov
jb
inc
sub
add
cmp
xchg
or
popf
orb
xor
mov
push
imul
ja
pop
and
pusha
test
push
enter
data16
inc
daa
in
ss
loopne
pushf
les
loopne
mov
cmp
les
xchg
xchg
sbb
sbb
push
mov
dec
inc
inc
addr16
in
add
popf
nop
arpl
or
movsb
daa
pop
jmp
mov
outsl
inc
loop
imulb
arpl
cmpsl
in
dec
lret
int
push
mov
sub
pop
pop
outsb
loope
push
jp
mov
jecxz
lea
movsl
xchg
xchg
insb
mov
jae
pop
jb
inc
mov
imul
ja
push
and
lds
mov
sbb
push
mov
shlb
lret
in
mov
push
push
xchg
inc
loop
jne
sbb
cmpsb
out
dec
mov
bound
pop
pop
push
cmpsb
mov
shlb
das
cwtl
mov
jg
xchg
fdivr
and
or
push
mov
ja
pushf
pop
pop
cmpsl
sub
sbb
dec
mov
cmpb
call
adc
pop
xchg
sbb
rorl
mov
fbld
mov
rorl
add
inc
ret
mov
push
rolb
sti
adc
adc
jno
popf
jmp
mov
push
cmp
into
scas
stos
das
lret
add
cmc
pop
outsl
movsl
popf
add
cmp
xchg
insl
sbb
push
iret
mov
loope
xchg
add
sahf
xor
jnp
jne
adc
sub
or
xchg
sbb
sub
mov
jg
fisubrs
inc
sbb
sbb
add
lret
ss
fdivs
push
and
and
iret
call
pop
cmpsl
je
flds
and
push
les
and
mov
sti
jp
out
leave
fnsave
in
in
xorl
movsb
or
xchg
or
and
pop
pop
xor
push
popf
jecxz
pushf
mov
int3
jo
mov
movsl
push
je
push
cmp
cmpsb
dec
jb
imul
xlat
test
and
scas
mov
fdivs
or
cmc
fsubrs
repnz
add
pop
push
nop
mov
push
or
pop
mov
and
adc
mov
vmovaps
js
add
jecxz
aas
and
adc
adc
inc
pop
adc
xor
fsubs
in
insl
sbb
xor
mov
add
dec
jecxz
push
adcl
fisttps
loop
inc
or
pop
aad
movsb
or
hlt
das
push
mov
jns
aas
in
mov
jmp
or
imul
cmp
out
adc
mov
dec
into
mov
lea
or
clc
sarb
xor
movsw
fwait
sbb
xchg
aaa
inc
jo
dec
cld
lret
mov
xorb
inc
xchg
add
iret
dec
into
lret
scas
iret
in
out
sbb
jne
xchg
mov
ja
subl
jo
loop
cltd
andl
mov
or
jp
mov
daa
jl
mov
cltd
int3
xlat
cmp
mov
out
push
stos
mov
xchg
nop
cmc
inc
sub
imul
call
xchg
bound
jbe
stos
xchg
mov
mov
shll
or
stc
xchg
adc
enter
fistps
adc
mov
lock
mov
mov
adc
rcrb
jmp
and
fmul
push
mov
ficompl
gs
in
adc
push
adc
mov
push
test
jmp
fimuls
fcmovb
add
sub
inc
movsb
mov
mov
mov
ss
push
sbb
inc
mov
or
inc
outsb
cmp
cwtl
adc
mov
sub
ret
add
lods
test
xchg
push
sub
out
adc
movsl
add
cltd
lret
mov
pop
mov
sbb
sbb
call
mov
pop
mov
scas
ret
test
cs
and
dec
or
jge
push
cld
pop
adc
and
insl
mov
xor
lds
xor
pop
and
mov
lahf
dec
sbb
fstpl
xor
pop
movsl
jmp
cmp
push
cmp
daa
pop
or
mov
lret
loope
out
push
cmp
adc
jmp
mov
call
cmp
jo
outsb
fs
movsl
out
fildl
into
push
aad
scas
pop
ficomps
stos
out
ja
incl
lcall
stos
dec
pushf
and
ds
or
out
adc
dec
push
mov
jo
mov
push
into
loope
imul
adc
dec
lahf
test
cmpsl
cltd
fnsave
cld
out
popf
mov
cld
xchg
sar
push
sahf
shll
shrl
fnstcw
lea
xlat
and
dec
lds
jle
insl
sbb
mov
xlat
mov
pop
aas
imul
push
xchg
test
and
sub
jbe
xor
test
es
xchg
cmc
mov
add
add
mov
lahf
scas
testl
fwait
push
jp
sub
lret
pop
leave
loopne
outsl
arpl
sbb
inc
mov
mov
pop
loop
sti
and
add
xor
lret
jb
xor
lret
cmpsl
adc
adc
mov
out
insb
or
repnz
or
push
in
xchg
ss
or
adc
bound
icebp
mov
mov
mov
nop
mov
ja
pop
stos
cmp
icebp
mov
les
bound
inc
push
shll
ljmp
jecxz
fldl
lods
mov
sbb
in
cmp
pop
ret
push
data16
stos
nop
pop
cmpsb
jg
jecxz
fidivrl
fdivp
ret
mov
mov
push
sbb
ss
jle
sub
xor
sbb
and
sbb
jle
sahf
mov
loope
into
mov
lcall
mov
test
insb
sbb
imul
andb
adc
in
stos
xchg
dec
aas
test
or
xchg
mov
inc
add
mov
cmpb
pop
inc
mov
pushf
fs
into
dec
dec
or
hlt
mov
push
cmpl
es
mov
into
aam
cmpsl
std
bound
jge
dec
adc
rclb
out
cmpsb
cmp
push
push
xchg
mov
mov
stc
pop
stos
stos
xor
pop
mov
in
les
out
aaa
repnz
mov
addr16
push
lcall
jecxz
mov
pop
sbb
lds
out
adc
sbb
std
in
cmp
push
mov
pop
push
adc
jns
out
cmpsl
scas
sub
lcall
lahf
sbb
dec
ficoml
je
mov
stos
negl
mov
push
inc
mov
pusha
stos
out
xchg
add
lret
push
mov
jne
sub
cmp
and
imulb
push
and
pop
out
sbb
jp
mov
push
xorb
mov
jp
dec
jae
mov
idivl
cmp
gs
sbb
pop
fisttps
or
lea
cmp
xor
icebp
hlt
loopne
xor
push
int3
clc
or
sahf
dec
cmp
and
xchg
fildll
fs
int
and
pop
cmp
iret
sar
inc
jg
dec
pop
inc
cmp
lods
or
mov
jge
rclb
in
mov
shll
cmpsb
or
pop
push
pop
mov
negb
dec
iret
mov
pop
sub
xor
outsb
lcall
cmp
inc
fildl
and
sub
imul
sbb
and
insb
and
imul
adc
fwait
xchg
adc
push
sti
icebp
mov
jns
out
or
ja
inc
mov
out
jge
add
jmp
outsb
cmp
fs
inc
cmp
sbb
fistps
push
pop
iret
push
mov
and
or
xchg
cmp
dec
push
pop
push
add
xor
mov
mov
adc
call
out
xchg
pop
rcr
inc
stos
outsb
inc
mov
push
cmp
push
jbe
or
mov
outsb
sub
lods
cmpsl
jmp
adc
lret
cmp
call
dec
ret
mov
inc
mov
pop
adc
and
lock
and
repz
mov
repz
adc
pop
cmpxchg8b
mov
bound
scas
adc
or
mov
out
sti
xchg
xchg
pop
stos
test
test
iret
fmulp
cmpsb
mov
cmp
sti
cmp
in
add
popa
call
test
jmp
sub
mov
in
sarl
lods
shll
push
fst
int3
dec
data16
fucomp
mov
add
pop
dec
fcompl
in
inc
sub
push
loope
cwtl
cmpsb
mov
subb
outsl
int3
stos
push
mov
jmp
xchg
mov
mov
lahf
add
mov
fsts
fldenv
mov
push
ljmp
clc
mov
ljmp
cld
scas
xchg
push
pop
push
cli
pop
aaa
push
cmpsl
mov
sub
les
scas
mov
adc
jmp
popf
push
leave
xchg
lods
pop
xchg
sub
ds
or
out
push
cmp
out
incb
sbbb
sbb
cmpsb
sbb
lods
sbb
ror
or
xchg
mov
dec
sub
sub
subl
shll
jb
stos
and
mov
mov
pcmpeqd
pop
pop
adc
inc
add
pop
fiadds
iret
jnp
mov
and
in
loop
lcall
les
cltd
inc
popa
or
aam
cwtl
incl
addl
pop
cmpsl
outsl
and
sbb
fimull
or
xor
sahf
lahf
cld
fistpll
fmulp
in
inc
adc
dec
mov
dec
sub
sbb
cli
mov
sbb
mov
adc
cmpsl
inc
jg
add
pop
sub
jle
jmp
push
cmp
aam
pop
rolb
sti
inc
daa
in
adc
pop
sbb
sti
add
push
lea
lahf
notb
lret
mov
fwait
mov
mov
imul
int
mov
shl
mov
lea
push
sbb
pop
jg
pop
cmpsb
cmc
ret
imul
sub
xchg
or
les
nop
je
insb
jbe
inc
iret
push
andl
mov
cmp
xor
pop
push
movsb
data16
int
arpl
mov
pop
dec
dec
hlt
leave
sbb
loope
xchg
xchg
xor
pop
jns
xor
xchg
fwait
mov
xchg
mov
cmp
ds
loope
jg
nop
sub
aad
fidivl
out
mov
jmp
out
xchg
aam
pop
push
enter
into
xchg
jp
enter
call
mov
insb
jl
adc
repz
call
vaddpd
xchg
dec
mov
jl
jns
inc
mov
rcl
mov
xchg
xor
jo
aaa
dec
fs
jne
xchg
das
sub
cmpsb
dec
cmp
into
test
mov
das
jne
sub
or
xor
in
fbstp
and
mov
sbbb
das
dec
xchg
pushf
cmp
mov
cmp
push
sbb
mov
pop
sbb
imul
or
lret
sub
addr16
adc
lahf
xchg
mov
mov
or
adc
or
mov
add
rcrb
loope
inc
push
add
sbb
call
cmp
xchg
mov
or
aaa
jae
push
outsb
mov
out
inc
sbb
iret
ds
aam
mov
inc
jno
fidivrl
scas
ljmp
inc
out
cmpb
incb
das
dec
adc
mov
mov
pushf
inc
jg
enter
sti
mov
insb
in
daa
dec
mov
jmp
ds
lcall
jmp
test
divb
jns
mov
das
push
push
ror
in
cs
mov
or
inc
inc
mov
int3
sub
jle
jecxz
scas
adc
repz
dec
out
lea
lret
test
in
inc
mov
ljmp
pop
lods
push
xor
test
add
rcrl
add
lea
lods
loopne
test
inc
daa
mov
mov
xor
call
lahf
hlt
sbb
xor
pop
dec
bound
sti
cmp
mov
in
shlb
mov
xor
add
imul
mov
xor
pop
fildll
mov
or
lret
pop
dec
jns
and
sarl
or
sub
cmp
std
mov
arpl
xchg
cs
or
pop
xlat
pop
mov
les
dec
lea
pop
mov
push
mov
mov
or
ljmp
fisubl
pop
xlat
bound
int3
xor
sbb
pop
stc
mov
xchg
test
mov
out
cltd
shll
ret
cld
dec
adc
lret
sbb
jns
and
dec
insl
inc
xchg
jg
fmuls
arpl
pop
lea
pop
or
pop
mov
mov
xchg
imul
cmp
pop
ljmp
push
jg
ret
lahf
das
scas
dec
pop
nop
jp
enter
pop
cmp
pop
xor
jp
jo
adc
mov
jo
push
and
cmp
xorl
in
or
mov
fldl
ret
icebp
out
push
jbe
mov
adc
outsl
mov
das
sub
pop
out
out
lds
add
cld
aaa
out
sbb
jnp
and
xorb
add
int3
inc
xor
jno
and
xor
fldenvs
sub
xor
pop
aad
fnstcw
insb
mov
lahf
cmp
paddw
js
mov
cmp
jmp
jbe
pop
cmp
data16
dec
cli
loope
or
jae
xor
push
add
push
inc
push
push
lret
fnstenv
jg
fnsave
mov
adc
jbe
sub
mov
pop
add
cmpsl
rcrl
mov
lds
rcrb
je
dec
incb
cmp
inc
mov
pop
jno
icebp
arpl
test
sbb
in
mov
and
and
inc
inc
jp
incb
test
stos
int3
jno
icebp
pop
adc
mov
or
sub
mov
mov
inc
push
dec
mov
sar
mov
inc
mov
sub
ljmp
add
pop
xor
stos
and
les
fbstp
mov
lds
movsl
pop
sti
xor
or
rolb
xor
je
ret
in
decb
adc
divl
push
es
imul
cmp
cmp
out
mov
out
mov
mov
scas
add
std
dec
mov
inc
push
les
dec
jmp
inc
adc
ficomps
adc
out
stc
mov
and
sbb
movsb
mov
mov
xor
nop
lret
sti
mov
adc
lahf
mov
clc
xchg
lahf
fistpll
lock
in
idiv
ja
sub
insl
lds
call
shrl
jb
out
inc
mov
out
sbb
cmp
inc
sub
loop
lahf
adc
insb
stc
aaa
adcb
outsb
outsb
cs
cltd
test
inc
stos
cwtl
mov
push
push
mov
ljmp
adc
cmc
push
lds
inc
mov
bound
inc
sbb
loopne
mov
dec
jns
lds
mov
add
fwait
fs
in
loop
dec
push
sbb
enter
dec
inc
fildl
movsb
mov
daa
and
dec
pusha
out
out
fsubr
cmc
out
cmp
enter
add
push
je
jge
pop
pusha
mov
loope
int3
imul
stos
push
add
and
mov
je
mov
jmp
and
or
rclb
and
mov
mov
adc
outsl
and
fsub
cltd
aam
lcall
dec
push
cli
std
insb
loopne
mov
pop
dec
inc
xchg
or
aaa
and
stos
xchg
mov
jbe
mov
orb
je
dec
mov
cmp
clc
dec
pop
pop
and
mov
adc
xchg
sbbb
mov
cmpsb
dec
push
xchg
adc
mov
inc
push
push
enter
cwtl
notl
in
in
lock
ret
inc
fidivs
stos
lret
loopne
iret
add
lea
pop
mov
flds
lock
mov
in
enter
or
cwtl
mov
push
mov
pop
adc
nop
cmp
nop
xor
mov
lret
addr16
mov
sub
dec
cwtl
fdivs
rorb
add
adc
inc
dec
xchg
pop
imul
das
add
sbb
mov
mov
lcall
and
out
fs
mov
xor
or
das
stc
fs
push
data16
inc
mov
subb
scas
dec
call
lret
or
icebp
push
push
loope
test
or
dec
aaa
cltd
sar
adc
orb
testl
lret
repz
aad
fcomps
mov
popf
es
cltd
les
mov
lahf
push
push
call
sar
cmp
xchg
out
pop
xor
in
jae
add
ds
jg
push
mov
loope
sbb
mov
fwait
lock
add
jmp
sarb
jge
sbb
stos
cwtl
scas
xchg
lret
add
testl
repnz
dec
lods
xchg
dec
pusha
rcr
push
fs
xchg
or
mov
int3
sbbb
ljmp
stos
loop
or
cmp
imull
mov
or
shr
adc
ss
imull
iret
push
out
xor
xchg
jno
scas
adc
pop
loopne
mov
cmpsl
or
lods
cmpsb
add
testb
pop
daa
repnz
sub
arpl
and
mov
arpl
sub
cmpsl
mov
jns
mov
or
ret
xor
sub
enter
frstor
popf
mov
dec
rorb
adc
lods
xchg
fsubrs
nop
cmp
push
mov
xor
pushf
gs
dec
mov
adc
ds
xchg
xor
ds
mov
jle
mov
push
scas
jno
loop
jl
sub
mov
adc
mov
xchg
push
xchg
cvttps2pi
mov
mov
cmp
inc
mov
and
push
xor
scas
test
addb
das
xor
in
jmp
cmpsb
jle
cmp
fs
test
and
dec
pop
sbb
aam
mov
inc
push
and
negb
sahf
lods
push
dec
inc
pop
or
dec
js
mov
popa
jnp
movsl
std
sbb
sbb
pop
stos
movsl
inc
push
cmp
inc
sbb
outsb
mov
sub
cs
cmp
jecxz
mov
gs
sarw
add
xor
push
or
jb
jo
push
adc
push
popf
cli
lods
scas
and
stos
jp
popf
les
outsl
psubb
dec
jmp
stos
inc
mov
fwait
inc
divl
and
imul
lock
imul
jbe
test
cmp
jmp
lea
cmpsb
idivl
popa
nop
xchg
or
loopne
lcall
jne
add
aam
xor
pop
mov
xchg
leave
jo
xchg
and
out
lds
pusha
fisttpll
movsl
adc
cltd
xchg
or
push
test
or
cmp
test
sti
cmpsl
andb
fcomi
addr16
pop
orl
pushf
mov
xchg
clc
jge
mov
mov
out
es
int
pop
sbb
cmp
lds
dec
int
mov
popf
jbe
cli
mov
mov
mov
jns
or
idivb
subb
lahf
add
imul
or
inc
inc
and
sub
xchg
and
pop
ficompl
mov
xchg
in
push
sub
inc
push
hlt
sbb
stc
dec
imul
cmp
jb
sbb
push
daa
movsbl
pop
lds
mov
pop
mov
roll
xor
fs
or
push
push
out
mov
icebp
push
sub
sub
fidivl
xor
mov
lock
iret
push
neg
cmc
jb
jno
fs
mov
add
sub
cmp
or
lods
ds
pushw
add
int
scas
xor
jnp
or
xchg
sbb
cmp
daa
and
repz
xor
add
mov
aad
movb
mov
cltd
mov
push
mov
sub
xchg
inc
in
sbb
outsb
testl
mov
stc
xchg
dec
and
mov
fs
xchg
add
jnp
call
mov
bound
inc
push
xchg
push
or
ret
sbb
sti
xchg
shll
sub
clc
jmp
push
cmp
or
call
add
pop
and
xor
sub
fiaddl
sbb
inc
cmpl
xchg
dec
adcb
mov
cli
inc
xor
sbb
jl
mov
pushf
mov
cld
stc
jns
imulb
cli
cmp
cld
or
mov
push
into
xchg
or
sarl
xchg
xchg
sub
scas
add
jp
ret
cmp
mov
mov
cmp
sub
repnz
mov
sbb
repnz
jle
xlat
movsl
int
inc
ficompl
lcall
out
mov
enter
fs
xchg
roll
cmp
jb
pop
inc
dec
scas
xor
push
enter
ret
aam
adc
mov
icebp
mov
add
mov
inc
out
jbe
mov
loope
adc
lods
lods
mov
pusha
or
fs
notb
push
sub
sbb
xlat
adc
cmc
popa
jg
arpl
jecxz
rcll
adc
stc
scas
lea
lss
cmp
push
pusha
push
jbe
pop
mov
ret
xor
ror
add
xor
fisubs
and
cmpsl
xor
dec
jle
call
fisubs
rorl
movsl
shrl
or
pop
rcrl
insl
jmp
cltd
hlt
out
xchg
out
push
xchg
push
loopne
jl
ljmp
sbb
ljmp
addr16
xchg
frstor
push
inc
pusha
mov
dec
inc
sub
nop
push
lea
in
xchg
stos
cwtl
std
cmc
xor
mov
and
and
cmp
sbb
aam
popa
cwtl
add
test
push
ljmp
lret
xchg
xor
fs
adc
out
adc
xchg
cmp
add
imull
test
pop
test
call
mov
sub
js
jb
fwait
xlat
movsl
jmp
jmp
mov
sbb
xor
xor
push
mov
mov
ljmp
xchg
mov
jbe
xchg
idivb
mov
and
jmp
cmp
jne
call
mov
call
icebp
iret
dec
adc
dec
fprem1
insb
sbb
add
sub
movsl
fs
dec
inc
mov
js
leave
jb
dec
dec
or
mov
in
mov
ret
push
dec
xchg
sti
leave
mov
push
rcll
loope
xlat
aad
xor
mov
andps
xchg
incb
mov
cmpsl
mov
lods
jmp
mov
shr
jmp
insl
xor
cmp
and
jg
pop
mov
mov
subl
adc
enter
cmc
outsb
mov
mov
int3
movsl
mov
adc
pop
or
xchg
add
je
push
cli
test
sub
data16
cltd
in
or
sbb
decb
adc
jo
jecxz
mov
popa
addl
pop
stos
mov
orl
testl
inc
pop
adc
pop
stos
movsb
mov
jb
sub
cmc
adc
ds
or
insl
xor
insl
jb
adc
insl
pusha
xchg
je
push
mov
movsl
xor
dec
jbe
aaa
icebp
lds
fcomi
sbb
pusha
jecxz
cmpsl
enter
mov
push
cltd
xchg
push
repnz
jg
xchg
test
fsubrl
inc
ret
js
jne
pop
jo
pop
sbb
jmp
mov
outsb
in
cld
and
ja
mov
rorb
pushf
mov
xor
jl
jmp
mov
inc
ljmp
nop
lahf
adc
push
roll
int3
pop
shl
mov
fcos
shll
mov
out
repnz
push
mov
lret
les
mov
adc
incb
and
add
out
xchg
out
cmc
dec
ja
or
pushf
aaa
inc
cmp
nop
jae
fcomp
pusha
into
pop
fidivl
push
cmpsl
fdivl
ljmp
addl
or
xchg
push
mov
fstpt
lock
adc
inc
scas
outsb
xchg
int3
pop
xchg
and
pop
fimuls
sbb
cli
jl
mov
enter
cs
fnstcw
bound
pushf
jmp
icebp
or
movsb
mov
xor
call
fwait
mov
jl
pop
cmp
les
xchg
sub
pop
cld
nop
mov
gs
mov
push
stos
dec
push
pushf
mov
xor
jnp
ss
xchg
orb
pop
sbb
roll
dec
and
in
xor
cmp
lret
cld
or
outsl
shr
dec
mov
insb
pop
ds
xor
ds
pop
inc
xchg
icebp
ret
rolb
pop
testb
push
lretw
lcall
push
popf
push
push
int
mov
loopne
pop
dec
popa
or
fsubr
imul
mov
ds
and
in
sbb
xlat
ja
cs
ja
dec
nop
or
lods
or
addb
xorl
ficoml
int
cmp
lret
aaa
inc
lods
mov
out
rcl
jbe
ret
loope
push
jnp
jo
push
int
or
sahf
das
cwtl
jne
lret
out
ljmp
bnd
lret
decl
mov
push
fmuls
pop
cmp
pop
pop
xor
pop
inc
mov
and
adc
fcmovnu
add
out
sarl
dec
push
jbe
mov
loop
add
pop
pusha
jns
add
shlb
sti
xchg
fucom
loope
mov
dec
and
int3
test
cmpsb
inc
adc
mov
rorb
inc
mov
jmp
dec
lods
cmpsb
test
add
xlat
cmpsl
scas
ja
into
cmc
clc
outsb
xor
jo
fs
jbe
arpl
and
mov
subl
loope
lret
sbb
jl
push
call
outsb
repnz
push
loop
ss
cmpsl
xor
fldl
pushf
push
xchg
push
adc
jnp
icebp
or
inc
cmp
pop
xchg
popf
or
gs
xchg
xchg
outsl
sbb
mov
lea
mov
xchg
lcall
cmpsb
jbe
movsl
and
jae
jbe
pop
pop
enter
cli
pop
xor
inc
sbb
xchg
jmp
adc
add
mov
jb
in
inc
pop
push
fcompl
mov
pop
imul
dec
in
outsl
sub
ja
aaa
mov
clc
push
dec
setl
sub
lcall
cli
xor
lea
negb
xchg
add
adc
mov
pop
xchg
mov
push
adc
mov
inc
sub
test
push
mov
lds
repnz
cld
lock
popf
daa
mov
add
xchg
add
jno
dec
rorb
inc
dec
addr16
arpl
lcall
jbe
aas
add
push
outsl
pop
jg
arpl
cmp
or
rcrb
movsl
enter
lock
in
jbe
mov
inc
pop
movsl
cli
shrl
cmc
xorl
fiadds
outsl
pushf
dec
sbb
enter
xchg
adc
repz
xchg
xor
inc
vpand
movsb
in
mov
mov
pop
pop
in
push
and
pop
fldt
dec
sbb
cmp
jp
push
cmp
dec
mov
dec
add
fcompl
cs
sub
ret
fadds
stc
in
push
test
xor
jnp
mov
jbe
std
mov
jbe
push
outsb
dec
mov
dec
popa
mov
lods
rcrb
dec
jne
adc
cmpsb
dec
or
xor
mov
dec
xchg
loop
into
enter
adc
xchg
aam
mov
inc
push
push
mov
sub
adc
push
mov
in
mov
lcall
ret
adc
or
fmull
pop
inc
cwtl
xlat
aam
mov
jo
add
push
push
xor
mov
pusha
pusha
dec
leave
fwait
lret
fnstsw
popa
add
inc
push
sahf
stc
push
dec
loopne
mov
push
dec
or
xchg
xchg
dec
fisubrl
adc
dec
flds
and
jnp
in
jnp
int3
jbe
mov
cmp
stos
jg
push
inc
push
in
mov
push
out
lods
shlb
stos
cmp
jbe
add
adc
dec
hlt
or
and
stos
in
sbb
lcallw
mov
add
push
int
mov
out
loop
pop
inc
sub
jg
mov
in
hlt
gs
inc
int3
dec
sbb
andb
shrb
pop
in
les
sbb
mov
sub
insl
faddp
cmp
mov
incl
out
test
adc
push
ret
or
adc
scas
adc
xchg
xchg
loope
outsl
stos
inc
test
mov
mov
jno
psrld
xor
rol
add
test
pop
mov
sub
mov
les
into
ffreep
gs
xorb
fmuls
sti
mov
std
outsl
dec
mov
insl
mov
daa
jle
cmpsb
jmp
inc
test
lret
sbb
xchg
scas
in
cmp
clc
bound
xor
or
std
mov
mov
cmpsl
in
mov
jo
je
add
fistl
and
fwait
mov
shll
pop
cli
sbb
jg
sub
mov
jb
out
repnz
or
rcr
call
fwait
sub
insw
int3
leave
pop
push
jns
push
adc
lret
sub
std
out
dec
dec
jae
jnp
into
xor
in
jb
data16
in
data16
dec
sub
into
lea
shr
jl
rcl
rep
dec
inc
jmp
sbb
add
sahf
push
pop
push
rcrb
test
pushf
mov
mov
xor
inc
cli
mov
test
mov
incb
scas
lods
jle
pusha
rorb
fistps
xor
jne
add
jle
mov
das
call
jl
stos
addr16
nop
notb
adc
pop
adc
fsubrs
fsubl
insl
lcall
aas
pop
ljmp
mov
int3
xlat
cwtl
hlt
fcoml
inc
push
int3
mov
inc
xchg
jge
cmp
into
xchg
push
loop
mov
adc
ret
dec
sub
loopne
pop
lea
dec
xchg
mov
add
jb
test
xor
fidivrl
mov
mov
shrl
in
inc
mov
imul
push
mov
out
fisttpl
cmpsb
bound
sbb
sbb
cmp
sub
call
or
test
xor
jne
jle
lock
int3
negb
lret
pushf
cmp
daa
loopne
inc
lret
xor
fisubrs
fisubl
gs
add
adc
in
into
jle
loopne
imul
dec
mov
xor
cltd
push
cli
jae
jg
sbb
pop
sub
ja
mov
fdivp
and
mov
popa
stc
data16
rcl
mov
xor
or
jl
jno
xor
test
push
jmp
enter
jecxz
mov
xor
jg
shrb
leave
mov
enter
inc
mov
add
adc
in
fcomi
insb
sbb
lret
ss
dec
ret
adc
bound
adc
mov
int3
loop
sbb
cmp
jb
or
adc
lahf
int
lcall
sahf
jl
aas
in
std
and
test
mov
and
stos
mov
add
xor
xchg
dec
loopne
sub
loopne
pop
mov
stos
mov
outsl
pusha
test
icebp
lea
and
cmp
lret
or
in
push
addr16
mov
daa
stos
shrb
mov
sub
cmp
sub
shl
lock
mov
sub
sub
adc
push
ret
loope
pop
int
and
xor
mov
hlt
cmp
loop
jp
mov
add
mov
roll
jno
or
js
ret
xchg
movsl
mov
mov
cmp
mov
dec
jle
in
stos
push
call
add
mov
ret
sahf
pushf
jg
sbb
stos
in
sbb
es
mov
dec
push
jnp
in
dec
in
xor
movsl
mov
push
mov
sbb
js
mov
into
and
dec
cwtl
aad
lcall
jp
cld
sbb
in
push
jne
push
roll
push
xchg
mov
xchg
or
cmp
adc
rorl
xchg
jp
inc
fildl
adc
inc
dec
inc
mov
and
js
testb
in
inc
jge
shrb
shl
sub
imul
cmp
mov
cmp
sbb
adc
dec
data16
pop
inc
imul
or
add
mov
lock
enter
lret
push
test
or
mov
sbb
call
or
mov
jmp
aaa
add
je
xor
xchg
jbe
jle
inc
cmp
or
adc
jmp
sbb
xor
cmc
push
insl
stc
popf
call
ret
xchg
mov
out
mov
jnp
loop
and
add
sbb
cmpsl
call
jmp
sbb
xchg
jecxz
inc
cmp
and
cmpl
mov
inc
fdiv
cmpsl
add
cwtl
int
mov
mov
jae
inc
mov
shlb
lds
lret
inc
jecxz
mov
gs
pop
test
xchg
jns
xlat
pop
cmp
push
in
and
xchg
das
add
ljmp
and
outsb
jg
pop
sub
ret
in
call
push
out
inc
xchg
sarb
sti
lahf
ret
mov
pushf
sub
fcomps
test
das
add
add
insb
inc
repz
mov
cmpb
repnz
pop
stos
sti
pmulhuw
and
xchg
sbb
push
cmp
push
adc
repz
and
add
jne
imul
push
arpl
lods
fistpll
in
push
pop
and
outsb
jb
bound
add
mov
sbb
ljmp
sbb
add
pop
xor
scas
ljmp
sbb
das
pop
mov
in
and
pop
push
in
rcr
lcall
in
add
push
inc
and
lock
pop
jbe
es
in
sbb
lods
outsl
cltd
movl
mov
and
loope
dec
add
add
roll
notb
sbb
out
sub
gs
mov
aas
data16
clc
xor
push
jb
int3
jb
lcall
and
and
and
fcomps
push
add
inc
push
addr16
xor
adc
call
in
fsubr
lret
or
push
out
mov
xor
sti
xchg
xor
leave
daa
andl
loope
loop
push
test
and
hlt
inc
stc
mov
das
mov
inc
add
cmp
stos
inc
and
xchg
fdivrl
xchg
or
or
clc
or
jp
ds
pop
inc
daa
fdivrl
cltd
aaa
fistpl
lret
enter
xor
js
pop
out
fs
mov
pushf
insb
mov
dec
mov
mov
or
decl
stc
jae
imul
imull
les
test
int
pop
imul
or
cmpsl
hlt
push
out
pop
add
or
loopne
nop
inc
test
pop
push
in
addb
push
gs
stc
sbb
les
in
adc
pop
push
in
mov
push
mov
cmp
xor
and
adc
or
adc
jg
xor
fwait
inc
adc
or
adc
ror
in
pop
repnz
xchg
in
sbb
and
add
in
lea
pop
sub
inc
ret
or
pop
sbb
push
icebp
shlb
lret
fldcw
rcr
xor
adc
test
cmp
sub
push
xor
movsl
enter
bound
test
int
icebp
dec
sub
pop
add
int3
push
ficomps
imul
cmp
pop
jo
jno
lahf
push
or
cmp
mov
lods
mov
mov
jbe
ja
and
mov
and
jmp
lahf
pop
in
push
jnp
push
xor
es
xor
xor
scas
nop
enter
sub
icebp
mov
pop
or
push
fcomps
xor
lds
jecxz
inc
mov
mov
add
js
adc
dec
ret
dec
push
push
pop
mov
sbb
and
aad
lret
pop
jg
mov
mov
int
test
sub
das
push
dec
jecxz
or
push
pop
sub
imul
jl
jnp
inc
and
in
mov
adcl
rorb
scas
mov
pop
iret
add
push
xchg
jne
mov
nop
mov
push
stos
out
lods
cmp
test
xchg
divb
dec
iret
xor
mov
sub
inc
lret
int
iret
and
insb
aas
repz
and
fidivrl
es
jge
std
in
mov
and
push
add
xchg
fisubl
lret
insl
sbbb
add
popa
cld
leave
mov
out
adc
lahf
insb
mov
adc
out
lret
out
cli
xchg
mov
popa
shl
lahf
cmpsb
push
gs
sbb
mov
fwait
lret
std
jg
add
test
and
dec
adc
js
dec
fidivl
test
dec
addr16
or
nop
mov
xchg
loop
decb
lds
dec
mov
add
xchg
test
arpl
lret
cmp
es
mov
jmp
fstl
pop
adc
fisubrs
cli
push
fidivl
pop
mov
insb
shl
je
add
mov
popa
xchg
jns
push
push
loope
pop
out
pusha
xor
xchg
iret
jmp
cmp
out
pop
mov
cmpsl
xchg
sbb
pop
mov
ss
push
jo
cltd
scas
ret
mulb
loop
push
inc
inc
push
mov
mov
push
ficompl
push
xchg
and
addr16
sti
cmp
in
push
mul
notl
ret
icebp
std
je
jnp
ret
inc
dec
pop
divl
mov
add
xor
popf
fistl
mov
mov
imul
ficompl
lcall
dec
shll
mov
mov
inc
cmp
sti
cs
mov
cmp
and
inc
mov
into
subb
mov
repnz
ja
jle
add
outsl
stos
xchg
fucomi
sub
lds
ss
xor
mov
jl
repz
fsubl
cltd
addr16
add
sbb
push
daa
mov
cs
adc
fs
sub
fimuls
push
cli
xchg
mov
sub
or
stc
xor
pshufw
dec
xchg
jno
sub
push
hlt
dec
xchg
jae
mov
repz
mov
les
xor
jge
cltd
cs
cmp
fdivl
mov
xchg
ljmp
sbb
in
xor
das
repz
int3
jg
fwait
push
inc
lahf
fsubrl
in
push
push
cmp
and
aaa
rorb
unpcklps
ja
shrl
xchg
push
xchg
fidivs
das
push
ja
pop
les
cmp
and
jne
aam
arpl
stos
adc
dec
and
mov
mov
aam
mov
cltd
pop
fs
jmp
push
xchg
sub
pop
aaa
arpl
jle
fdivrs
dec
xchg
jnp
jns
ja
and
cltd
jmp
scas
ljmp
lds
mov
xchg
push
cltd
mov
xacquire
mov
add
lahf
add
or
add
inc
adc
iret
adc
dec
test
dec
and
pop
mov
stos
xor
inc
mov
pop
fnstenv
xor
scas
pop
adc
divl
dec
les
out
icebp
cli
clc
cmp
xor
andl
or
cmc
mov
xor
sti
cmc
pop
ljmp
adc
mull
jl
stos
les
sub
popf
loop
jae
fwait
pop
aad
nop
mov
sahf
push
lret
xchg
pop
dec
arpl
jge
push
shlb
lods
jge
sahf
cltd
imul
jo
fstpl
jo
or
push
jne
jo
jne
setno
mov
push
aam
push
mov
add
add
xchg
or
mov
jb
jg
sub
adc
xchg
mov
xor
orl
jb
mov
sti
mov
je
orb
or
and
in
mov
outsb
sarb
and
dec
les
sub
or
sub
push
adc
es
cltd
dec
mov
mov
gs
loopne
ljmp
add
mov
cmp
xchg
push
sbb
cmp
arpl
add
cmp
cmp
loop
fdivr
nop
filds
inc
in
je
aam
sbb
cs
sti
or
sbb
mov
hlt
sbb
inc
mov
sub
jg
jns
xchg
out
fisubl
dec
orb
vrcpss
daa
xchg
hlt
nop
mov
rcr
xchg
in
test
jg
stos
in
out
stos
xchg
mov
shrb
sub
push
jmp
push
mov
repz
or
mov
push
lock
xor
push
pop
adc
mov
push
jbe
add
xor
adc
xor
test
out
adc
rclb
popf
xorb
push
cld
dec
add
push
ds
dec
outsl
inc
xchg
test
lahf
xor
sub
rorb
mov
popf
jl
xor
add
call
ljmp
push
out
or
mov
jbe
repz
sarb
cmp
fs
mov
mov
bound
xchg
ficoms
in
inc
mov
xchg
je
jp
in
sti
test
xchg
adc
leave
xlat
adc
adc
xchg
mov
aam
or
xor
jmp
cmpsb
and
dec
stos
fsubl
shll
xchg
jp
push
scas
mov
xor
push
add
xchg
inc
negb
stc
sarb
and
add
sbb
add
fsubs
jno
std
jb
rcll
fwait
or
lret
mov
adc
push
add
and
xor
in
or
stc
xchg
popf
pop
sbb
push
mov
pushf
idivl
mov
out
test
jg
or
popa
mov
mov
enter
adc
idivl
loope
inc
sub
xchg
repz
mov
cld
ja
xor
inc
sub
arpl
or
mov
add
push
out
inc
or
mov
lods
pop
sub
in
fsub
dec
lret
sub
mov
dec
out
aam
sbb
push
cmp
ds
inc
adc
xor
dec
pop
sub
push
test
mov
xor
mov
add
and
rcl
mov
add
jge
paddd
push
pop
jecxz
sbb
cli
push
out
hlt
mov
sub
shl
rcrl
fcomps
daa
adc
mov
das
loop
adc
xchg
jecxz,pn
fcmovu
add
push
sub
mov
cmpsl
pop
data16
sub
les
aas
pushf
sub
xchg
pop
xor
out
out
mov
sbb
adc
addr16
mov
sub
stc
mov
aad
movsl
jns
iret
out
sbb
or
cmc
add
dec
mov
adc
jmp
inc
clc
bound
nop
jno
mov
jne
ret
inc
std
sub
xor
jge
xadd
lret
stos
jmp
test
sarb
test
dec
std
mov
push
jge
ficompl
jg
enter
jecxz
mov
mov
mov
dec
aaa
fneni(8087
cmpsl
mov
cmc
ljmp
mov
xchg
cmp
sub
fdivp
iret
cmpsl
je
mov
cmpsb
ljmp
adc
filds
sub
cmpsb
movsl
subb
cmp
pop
lods
hlt
cli
push
add
les
xor
mov
jbe
lds
or
or
sub
cmpsl
fnstsw
ds
mov
es
lods
test
loopne
sbb
fwait
add
cs
inc
dec
sbb
sub
stos
loope
std
jg
xchg
sbb
es
mov
xlat
dec
clc
jo
and
mov
cmp
pop
inc
inc
movsl
iret
push
sbb
movsb
inc
scas
iret
cld
faddl
adc
pop
int
push
mov
in
das
xchg
loopne
inc
add
adc
sbbl
or
cmpsl
mov
mov
fdivr
mov
cmp
popf
xor
add
sbb
movsb
lret
mov
or
out
lret
dec
push
xor
sbb
enter
cmp
je
or
mov
mov
pushf
sbb
push
mov
mov
push
jne
push
cwtl
cmp
cwtl
shlb
push
jb
or
cltd
pop
adcl
push
pop
inc
icebp
push
xlat
ror
das
aas
mov
hlt
pop
inc
mov
nop
decb
xor
or
sbb
xlat
and
sub
sti
sbb
arpl
xchg
sub
popa
push
and
aaa
push
jle
push
movl
faddl
cmp
jbe
mov
fldcw
pushf
cmp
pop
ja
leave
fsubrs
mov
loop
ja
sbbl
jg
int
mov
push
add
dec
sbb
iret
cmp
cs
cmp
aam
inc
adc
cmp
mov
testb
cli
loop
jbe
in
push
pop
int
pop
mov
cmpsb
fnstsw
std
cmp
or
stos
sub
repnz
mov
fldt
sub
xchg
push
mov
inc
shl
and
in
mov
mov
add
mov
and
es
loop
in
xlat
sub
xor
clc
rclb
pop
mov
ds
fldcw
mov
sub
pop
rorl
mov
adc
pop
dec
sub
cmpl
and
ret
rcrl
cld
mov
sub
cmp
das
or
pop
pop
push
or
leave
lds
inc
inc
adc
jne
add
ret
jns
push
std
add
add
mov
jmp
pop
push
dec
sahf
daa
mov
push
mov
jne
pop
xchg
stc
gs
mov
cmp
xchg
mov
insb
scas
loop
out
cwtl
fidivrs
xchg
adc
orl
dec
or
pop
std
imul
and
jge
jl
mov
or
mov
lds
adcl
stc
out
rcr
lods
jae
fs
rorl
int3
mov
es
cltd
mov
mov
add
or
lret
push
pop
and
mov
in
fcomps
repz
call
loop
add
in
in
cmp
lods
lea
cmp
int3
ja
add
push
out
push
sub
dec
or
testb
movq
xchg
mov
adc
into
andnps
and
sbb
mov
cwtl
push
out
enter
lods
cwtl
js
shll
mov
rolb
ja
pop
mov
dec
cmpsb
jge
std
loopne
sbb
arpl
lcall
cwtl
xchg
dec
push
inc
ret
outsl
faddp
mov
xchg
xor
or
lods
jle
sub
sbb
dec
pop
imul
cli
loope
jbe
sbb
clc
int3
std
or
ljmpw
or
push
dec
and
and
xchg
movsl
repnz
popf
pushf
pop
inc
xchg
outsl
lds
sub
add
or
adc
xor
cmp
and
and
sub
jne
xchg
sub
xchg
inc
jno
sbb
dec
sti
cld
mov
xor
adc
cs
lcall
test
sbb
and
cs
test
cli
out
pop
imull
xchg
adc
ds
inc
adc
push
sub
adc
in
xchg
stos
and
jno
and
pushf
sbb
ljmp
mov
sbb
nop
and
mov
push
xchg
leave
jnp,pn
add
sbb
sub
add
test
jmp
or
xchg
jmp
sti
dec
cmp
fwait
sub
inc
in
xorl
push
pop
popf
or
lods
xor
dec
mov
andb
das
dec
cmp
aad
xor
add
adc
xchg
test
leave
dec
or
std
mov
iret
mov
push
dec
nop
mov
push
popa
fiaddl
and
inc
testb
cwtl
and
lds
mov
pop
xor
jmp
add
cmp
movsb
jp
shrb
nop
stos
sbb
cmpsl
cld
punpckhbw
mov
push
mov
loopne
and
sub
int
data16
outsl
inc
jo
insb
jl
pushf
sarb
fldenv
and
in
aam
daa
dec
das
mov
lret
pop
stc
pop
sbb
inc
ds
sub
sub
les
lods
test
mov
add
leave
push
sbb
scas
xor
sbb
cltd
jne
jne
push
lods
jmp
add
sbb
rol
sub
sbbb
push
fsts
outsb
dec
icebp
adc
ret
pop
or
jae
mov
cwtl
adc
xor
pop
xorb
cmp
dec
ljmp
daa
aam
mov
adc
ret
es
in
sub
or
leave
add
insb
pushf
cmp
mov
jb
and
test
dec
out
jnp
inc
xor
int
push
dec
adc
in
fwait
or
out
adc
insb
xorb
adc
push
mov
les
pop
in
insb
cmovno
pop
lods
iret
mov
push
and
rorb
mov
or
iret
dec
clc
mov
jecxz
lcall
or
pop
inc
cmp
cmp
cli
daa
movsl
bound
dec
dec
jmp
test
int3
test
and
filds
jo
cmp
lds
loope
scas
in
aas
dec
or
negb
xorb
and
push
push
pop
addr16
lcall
out
and
loopne
fdivs
pop
enter
cmp
xor
jle
popf
scas
mov
jge
xor
enter
insb
fisttpll
iret
push
jno
sbb
aad
test
aaa
mov
mov
cmp
push
cmc
aam
mov
xchg
lcall
repnz
xchg
call
es
rolb
out
shlb
xchg
imul
jb
shlb
lahf
out
daa
out
mov
pusha
test
cmp
daa
mov
mov
xor
nop
mov
push
and
pop
outsl
call
mov
lahf
imul
imul
mov
add
add
dec
test
adc
cmp
mov
inc
or
or
push
jg
mov
lods
push
lcall
inc
dec
mov
mov
sub
mov
ret
xchg
inc
mov
jb
push
std
iret
push
inc
loope
inc
push
les
fmull
mul
sbb
hlt
ljmp
cltd
pop
and
je,pt
out
int3
xlat
outsl
mov
push
add
cmp
mov
xor
cld
addb
or
and
movsl
setne
loopne
jp
jne
jno
inc
jge
mov
jmp
ds
mov
std
bound
ss
push
push
xchg
daa
mov
rorb
pop
xorl
addr16
and
dec
leave
and
test
test
jp
notb
inc
es
jns
sbbl
movsb
dec
xlat
mov
pop
nop
test
out
out
xor
in
stc
xor
fwait
xor
ds
das
cmpsl
paddq
iret
push
adc
scas
outsl
adc
imul
cmpsb
test
mov
sti
popa
cld
mov
jl
shll
test
inc
jne
bsr
mov
mov
inc
sub
in
int3
imul
lods
arpl
mov
xor
cli
fsubs
add
push
push
hlt
dec
mov
pop
aad
mov
cltd
or
pop
cmp
les
push
fistpl
adc
pop
jp
add
mov
add
in
mov
gs
lret
inc
dec
xchg
cmp
pop
aam
sbb
xchg
cmc
bound
or
das
sub
dec
mov
aaa
xor
call
adc
jle
xchg
fistps
je
stc
pop
pop
mov
mov
repnz
flds
imul
push
stos
test
mov
in
push
mov
push
mov
dec
pop
pop
pop
push
dec
jno
or
sbb
clc
data16
dec
or
in
aad
xchg
idiv
push
loope
lcall
mov
push
in
push
fidivrs
pop
insl
repnz
aad
xchg
fsts
lret
jbe
scas
sti
xor
push
mov
movsb
mov
mov
mov
stc
push
xchg
mov
lock
cmp
inc
out
arpl
inc
xchg
cmp
inc
dec
mov
jns
dec
dec
or
sbb
testb
sub
rcrl
popa
add
and
addb
inc
or
adc
xchg
shll
mov
in
cmp
adc
test
or
mov
inc
std
jp
inc
pop
pop
sub
dec
and
stos
mov
jmp
mov
push
clc
jmp
xchg
mov
xchg
add
mov
inc
sub
scas
mov
popa
aam
adc
idivl
inc
adc
outsl
je
sbb
fists
cmp
rclb
inc
fistpll
in
mov
mov
pop
outsb
add
loopne
out
add
outsl
pop
loope
ja
adc
lahf
or
sub
push
out
dec
adc
stc
sbb
jo
imulb
pusha
stc
lcall
push
stos
scas
push
pop
scas
outsl
out
into
fisubs
data16
fisttps
cwtl
pusha
dec
imull
mov
and
clc
dec
jmp
repnz
scas
inc
gs
jecxz
inc
add
jb
xchg
out
cli
pop
jg
mov
shrl
lcall
out
ljmp
outsb
pop
and
pop
dec
adcl
xor
adc
in
push
xchg
cs
daa
movaps
adc
nop
inc
aad
sub
sbb
push
pop
push
outsb
adc
insl
cli
lcall
mov
sahf
mov
pop
dec
ja
fs
iret
inc
mov
jo
popa
cmp
fstpl
lock
cmpl
adc
or
mov
addr16
popf
jmp
out
int
stos
rcrb
js
sub
jg
ljmp
aad
cmp
jecxz
filds
and
pop
stos
imul
xor
add
loop
jmp
mov
les
sahf
xchg
insl
or
push
push
mov
arpl
mov
scas
sbb
data16
adc
repz
push
mov
sbb
mov
test
in
test
repz
or
pop
sub
sub
repz
or
test
les
push
pop
cli
stos
insb
lcall
shll
aad
xor
add
inc
push
push
es
shrl
jae
and
jbe
fidivs
sbb
mov
arpl
je
push
scas
push
mov
jmp
ret
xor
movsb
stos
pop
push
fisttpll
test
mov
xor
pop
mov
scas
jmp
add
sub
imul
inc
insb
push
and
shlb
cmp
mov
mov
xchg
arpl
or
call
cs
and
jno
sbb
mov
test
cld
ljmp
orb
or
int
stos
cmp
cmova
mov
push
xchg
rol
movsb
insl
mov
sbb
pop
aas
push
mov
stos
clc
js
bound
inc
aaa
dec
cmpb
repnz
sti
jl
testl
scas
repz
out
pop
jnp
pop
add
rolb
shr
mov
sub
out
jnp
mov
leave
xor
jbe
ss
mov
xchg
mov
pop
mov
loopne
pop
jmp
int
shlb
mov
push
mov
rclb
mov
xor
pop
je
xlat
or
scas
icebp
and
les
jbe
fistpl
inc
out
mov
pop
test
push
dec
addr16
int
std
into
ja
inc
mov
repnz
mov
xlat
sub
add
adcl
sbb
popa
xor
pop
pop
jle
jb
mov
lret
and
in
cmp
xor
lahf
xchg
icebp
sub
fdivl
imul
cmp
and
pop
scas
insl
pop
loope
mov
test
lods
and
push
mov
pop
push
pop
jg
in
fwait
and
fists
in
mov
outsb
mov
jp
sub
push
lea
mov
inc
sub
xchg
pop
out
cmp
mov
call
dec
adc
push
pop
adc
fidivrl
mov
dec
ret
push
lret
mov
xchg
enter
rep
subl
in
push
stc
add
mov
cmp
shlb
les
xchg
inc
mov
adc
popa
and
insb
sub
dec
mov
loop
push
testb
push
pop
out
daa
jae
sbb
push
lret
push
and
ficoms
addr16
cmpsb
sub
xor
stos
ja
xor
jno
mov
pop
rcll
sub
ja
push
popf
xor
iret
fcmovu
movsb
je
add
add
inc
jno
dec
push
gs
add
pop
cmpsb
lret
mov
pusha
xor
gs
cmp
xor
outsl
adc
jg
add
and
or
fstl
cwtl
mov
jmp
std
xor
lret
stos
sbbb
push
bound
sbb
mov
sub
push
mov
in
cmp
or
jno
pop
in
push
into
out
outsb
mov
movnti
add
das
xor
fnsave
or
sbb
jbe
fwait
push
mov
sbb
clc
and
mov
cmp
push
out
adc
xor
test
fbld
cmp
inc
loop
ss
push
push
lea
test
and
mov
jp
pop
cmp
scas
out
fstpl
lret
dec
pop
add
cmc
and
stos
cmp
xchg
fucomp
sbb
scas
daa
das
jecxz
mov
mov
lret
les
outsb
sbb
scas
outsb
cmc
gs
enter
and
call
out
dec
std
mov
jmp
xor
popa
cltd
mov
xor
xchg
fcomps
loopne
les
adc
jo
adc
jp
mov
vsubsd
out
int3
jmp
stc
pushf
in
xor
sahf
shlb
sbb
pop
mov
mov
icebp
push
arpl
fs
outsl
je
and
outsl
pop
mov
fmuls
sub
xchg
mov
les
cmc
andb
xor
jecxz
xor
dec
hlt
imul
cmp
hlt
js
inc
int3
mov
mov
jecxz
pop
or
pop
dec
inc
cltd
push
mov
jnp
inc
leave
ja
mov
xchg
dec
mov
xor
es
push
inc
rcll
movsl
or
in
xchg
jb
test
aad
add
mov
inc
mov
mov
cmp
loopne
add
dec
pusha
and
adc
adc
hlt
add
mov
jbe
cs
sti
insb
push
ficoms
jl
sub
leave
lods
popf
cmc
jmp
push
aam
xchg
xor
xchg
bound
int
push
test
add
xor
push
into
insl
aam
rol
lods
pop
dec
popl
add
jge
and
lcall
or
dec
mov
and
add
test
dec
dec
sub
stos
lock
std
sbb
mov
jmp
cwtl
sbb
mov
fldenv
imul
or
test
loop
xchg
insl
pop
gs
mov
push
or
mov
adc
sub
cli
mov
movb
call
std
adc
ljmp
adc
divl
lods
mov
mov
dec
inc
mov
lahf
cs
daa
pop
cmpsb
out
hlt
sub
jb
jns
add
xor
out
jnp
xchg
movsl
outsl
and
call
dec
adc
jl
add
sbb
cmp
cli
ds
and
push
call
fs
mov
push
orb
jbe
call
clc
inc
cmp
mov
adc
mov
xchg
clc
cmpsl
mov
xor
sti
test
cmp
icebp
or
fsubl
sub
jbe
fs
or
add
lds
add
bound
lahf
mov
push
call
push
mov
jmp
into
cmpsb
inc
shlb
lods
sub
add
xor
xchg
stc
arpl
lcall
cmpsb
push
lcall
lahf
push
icebp
and
iret
mov
xchg
rcrb
daa
push
jae
lods
shlb
push
loop
pop
sub
dec
test
add
jno
shl
xor
and
mov
add
pop
cld
or
lea
push
mov
mov
push
and
sub
add
add
mov
data16
mov
xor
ds
cld
mov
scas
xchg
loope
or
jge
js
stos
imul
lcall
mov
cmc
push
clc
in
imul
jo
mov
xchg
jno
xchg
jge
ss
mov
test
movsl
add
sti
imul
stos
cmp
push
fistpll
mov
adc
add
fstl
add
popa
adc
imul
mov
add
aam
mov
or
or
pop
pop
or
aaa
mov
lods
lret
dec
adc
addr16
push
clc
mov
xor
arpl
jnp
add
inc
inc
daa
mov
mov
fs
dec
sub
jmp
aad
lock
mov
xchg
lahf
xor
mov
xchg
mov
std
iret
and
sbb
iret
std
in
ss
mov
loopne
mov
xchg
cld
cmc
mov
add
mov
mov
push
or
jge,pn
test
pop
or
iret
and
dec
and
mov
jge
data16
xor
scas
push
test
inc
and
cmp
lret
imul
jle
adc
shlb
pop
and
lds
adc
imul
inc
xor
pop
ficoms
inc
jne
add
mov
mov
pop
fidivs
jle
pop
ret
in
adc
cltd
and
lock
mov
in
jnp
push
mov
and
and
nop
mov
loope
in
in
cmp
scas
dec
imul
jb
bound
adc
out
lcall
dec
cmp
popf
dec
cltd
jg
fcmovnbe
stc
pop
ja
sbb
test
rorl
repnz
and
in
mov
into
out
push
xchg
insl
pusha
out
pop
sbb
jmp
mov
fmull
enter
dec
jns
cmpsl
pop
pop
add
lds
push
xchg
enter
aas
jne
add
js
in
divl
int3
mov
test
push
addr16
push
xchg
xor
jnp
loope
lret
sti
and
mov
add
out
pop
hlt
xor
jl
xchg
call
dec
push
jp
inc
sar
mov
imulb
notb
adc
repz
mov
daa
fisubs
arpl
stos
adc
xor
notb
add
xor
xchg
cld
jl
mov
inc
or
cmpsl
data16
push
add
adc
lret
int
int3
unpcklps
daa
dec
dec
add
testb
mov
jle
or
xchg
pop
cmp
mov
sub
dec
int
lea
push
mov
das
or
inc
jg
add
in
cmp
jg
shl
push
mov
pop
pop
cmp
negl
jbe
stc
fsubrp
mov
imul
mov
lock
mov
lcall
xchg
cmp
mov
xchg
cmp
pop
xor
pop
jbe
mov
and
sub
sub
mov
rclb
mov
mov
cli
add
lea
fwait
push
xchg
sub
pop
ss
ljmp
or
insl
icebp
add
pop
cltd
loop
clc
fistl
pop
jb
sub
inc
inc
sbb
ret
cmp
pushf
inc
mov
xchg
arpl
add
mov
push
fstl
and
push
mov
pushf
cmc
add
cwtl
shl
ror
lret
dec
jle
gs
or
push
or
out
cld
cmp
inc
xor
popa
mov
sbb
inc
mov
sub
lock
loop
call
imul
sub
ret
xor
adc
mov
and
mov
xor
cmp
or
rorl
pop
lock
out
in
lcall
out
xor
pop
incb
adc
out
xchg
in
add
push
filds
gs
jns
and
pop
inc
out
xchg
or
dec
and
dec
movsb
js
mov
sarl
mov
notb
push
pop
push
sarl
pop
aam
push
inc
loopne
or
clc
icebp
or
ret
mov
sbb
jle
dec
lods
sub
lahf
test
dec
mov
fidivl
ror
pop
push
add
push
in
adc
inc
sub
test
into
push
push
push
jp
jge
pop
lret
idivl
adc
sub
jp,pt
rolb
jb
inc
adc
push
push
xor
pop
or
nop
test
cmpb
mov
sub
and
fdivl
or
stc
sbb
cwtl
insl
and
in
inc
nop
inc
jmp
notl
add
in
dec
enter
push
dec
and
adc
cmpsl
sti
pop
cmc
adc
jmp
out
ds
inc
mov
fs
adc
stos
daa
xlat
cs
rorl
sar
repnz
mov
dec
pushf
jg
jne
pop
out
or
sub
lods
mov
iret
pop
push
lods
sub
rcr
xchg
aad
push
repz
icebp
jecxz
jge
lds
dec
jno
andl
or
mov
into
cmc
cmpsl
push
sbb
xor
adc
int
aas
and
inc
and
inc
iret
imul
movsl
mov
aas
push
and
push
xchg
mov
adc
or
addr16
adc
testb
and
xchg
je,pn
in
shufps
in
jg
pushf
pop
adc
sbb
and
cmp
pop
inc
xchg
push
leave
mov
out
out
icebp
jbe
into
clc
stos
lods
or
sub
jle
adc
push
call
pop
clc
addl
flds
gs
mov
mov
inc
xchg
lods
aas
imul
insb
and
cwtl
adcb
cmp
fwait
xor
lock
and
ret
pop
push
mov
popa
lock
dec
mov
xchg
hlt
xchg
sbb
and
imul
flds
mov
call
pop
push
mov
pop
adc
dec
sub
popa
mov
jbe
mov
mul
mov
mov
cmc
std
lods
in
bnd
push
aas
adc
mov
fadd
popa
push
and
jnp
cmc
pushf
bound
jno
xchg
xchg
dec
out
lds
push
and
sub
pop
mov
cmp
mov
dec
push
popf
xchg
pop
loop
push
imul
add
pushf
fnsave
and
push
imul
fistps
inc
mov
or
outsl
gs
jge
loop
pop
in
imul
xchg
adc
lret
es
xor
cmp
popf
pop
jl
mov
sti
loopne
adc
loope
out
jg
mov
int
mov
xchg
pop
mov
sub
mov
stc
iret
jp
js
pop
incl
fimuls
xor
stc
pop
push
sub
xchg
dec
fdivl
adc
adc
xchg
test
pop
push
ret
mov
ret
daa
lods
mov
mov
jns
fcomps
cld
imul
cwtl
aas
sbb
or
jae
adc
sarl
aaa
scas
inc
add
movsl
ss
out
cltd
dec
xchg
jno
pop
mov
mov
push
sbb
dec
test
js
jnp
push
in
js
cmpsl
push
test
fnsave
fwait
pop
mov
jno
jb
ss
rep
faddl
and
push
cmp
sub
jg
mov
xchg
das
sub
jg
out
push
mov
int3
pusha
scas
push
jo
lock
or
xor
pusha
lea
xor
out
mov
sub
jne
pop
nop
pop
pop
daa
stc
lods
cmp
push
push
test
aad
daa
movsb
xor
ljmp
adc
bnd
sub
adc
add
jns
xchg
fidivl
out
jl
pop
cmp
sarb
mov
mov
xchg
push
adc
nop
cld
in
stc
ljmp
xchg
pop
addr16
or
sub
and
inc
add
inc
jns
mov
out
rclb
dec
ss
scas
ret
sbb
and
loopne
mov
je
aaa
inc
push
lahf
push
outsb
push
push
pop
inc
pushf
stc
ss
lahf
daa
in
sahf
shr
sbb
fcmovne
std
jecxz
loop
clc
out
mov
ret
scas
pop
repnz
lods
cmp
je
cmpsb
in
out
sbb
loope
cmp
stos
cld
jae
imul
and
jnp
or
ret
or
adc
das
popa
jmp
inc
cmp
scas
xor
arpl
jbe
and
loope
into
cmpsl
ret
cli
clc
lock
nop
adc
daa
mov
cmp
push
adcb
test
sub
popf
push
sub
cmpsl
dec
call
add
xor
addr16
sub
and
cltd
lock
outsl
inc
dec
mov
and
call
in
sbb
dec
icebp
mov
sahf
mov
ret
lods
push
mov
add
jmp
mov
and
arpl
mov
cmp
cmpsb
cmp
cwtl
sbb
mov
sub
inc
mov
out
cmp
js
fldenv
popa
imull
cmp
std
xchg
popf
xor
enter
jb
stos
xchg
into
mov
inc
clc
fs
int3
dec
sbb
xchg
sub
sbb
popa
pop
dec
xor
sub
call
mov
cmp
sbb
jle
jno
xchg
push
sub
iret
mov
mov
hlt
lcall
sub
xchg
addr16
push
addr16
scas
sub
pop
stos
mov
outsl
xor
xor
pop
mov
jns
gs
xchg
push
cli
cmpsb
push
push
adc
stos
adc
cmp
icebp
inc
inc
lcall
mov
mov
andl
sbbb
sbb
int
pop
pop
adc
xchg
lahf
cld
xlat
ffreep
lret
ret
jb
arpl
lods
aad
dec
lret
xchg
hlt
shll
outsb
loopne
lahf
inc
mov
je
ret
fadd
push
sub
cmp
and
ret
movsb
lret
sub
outsb
cmp
sahf
inc
pop
sub
jns
xor
call
pop
das
or
xchg
jno
in
sub
cmp
jae
js
aam
js
inc
pop
cmp
and
mov
cmp
aad
or
push
xchg
dec
mov
pop
xor
cmp
or
and
icebp
sub
or
xor
push
dec
adc
in
push
outsb
outsl
hlt
cmc
dec
sbb
inc
jnp
mov
mov
insl
in
push
push
cli
sub
and
adc
jae
lcall
mov
mov
dec
loop
ja
imul
pop
in
sbb
xor
inc
and
push
dec
mov
cmp
inc
shrb
push
push
lods
cmp
push
std
fcompl
fwait
cltd
add
std
xabort
roll
leave
in
in
das
loopne
pop
repnz
add
test
repnz
add
sub
imul
in
in
dec
out
and
inc
shll
lds
inc
in
cmp
and
into
xor
addr16
lcall
fmull
mov
das
pop
add
mov
dec
adc
pop
inc
fwait
inc
inc
add
loopne
lcall
mov
xchg
xor
into
js
add
push
pop
push
sbb
imul
push
fdivr
out
imul
cmpsb
lock
push
push
in
push
out
mov
inc
xchg
orb
pop
popf
push
push
jo
push
lahf
ficompl
inc
mov
xchg
dec
inc
xchg
xor
movsb
add
xorl
cmc
test
movsb
enter
inc
xor
cmp
or
or
or
cwtl
xor
les
lea
imul
in
stc
jmp
push
rclb
jmp
jae
fnstenv
xchg
jbe
movsb
les
sub
push
imul
pop
cmpsl
clc
push
push
ret
xchg
repz
pop
je
out
mov
test
rorb
fisubrs
fcmovne
cmovne
mov
cli
push
mov
mov
imul
enter
mov
push
adc
xchg
xor
sti
js
jle
daa
stos
outsl
push
cli
push
int
xor
fwait
sbb
insb
add
andl
push
clc
sbb
aaa
push
jbe
das
imul
jne
ss
xchg
inc
ljmp
mov
mov
push
push
adc
cmp
jno
mov
mov
fsub
mov
aaa
pusha
mov
shl
sub
int
mov
push
dec
inc
mov
test
cmp
sub
rol
sub
push
je
xlat
inc
sbb
jmpw
cmc
jb
lods
stos
mov
dec
push
les
adc
iret
mov
mov
ja
add
in
pop
xor
cmp
or
popa
out
das
mov
and
lods
inc
lret
dec
loopne
sub
in
repnz
iret
push
inc
inc
mov
push
sti
xor
jp
ljmp
int3
xor
outsb
jg
inc
sbb
loop
ret
popf
out
loopew
test
int
nop
push
sub
dec
mov
pop
shl
push
sub
fsubrl
test
adc
out
insl
or
mov
push
or
lret
mov
or
xchg
and
fidivl
and
test
cli
and
push
xchg
jp
dec
dec
cmpsb
inc
aas
popf
out
jp
mov
push
jbe
pop
mov
mov
cmp
add
inc
andl
cmp
mov
jge
adc
in
sub
shlb
sub
ss
data16
cs
sbb
pop
lds
test
push
loopne
and
dec
jns
test
adc
shrb
cld
push
xchg
xchg
inc
into
mov
pop
loop
and
add
hlt
fsubr
pop
xchg
movsl
jmp
pop
add
pop
fwait
pop
mov
out
repz
xor
dec
mov
jp
xor
push
daa
sbb
or
add
test
fimull
iret
insb
ds
jnp
das
fstps
sar
mov
loope
rolb
jb
stos
adc
jle
inc
lods
and
stos
adc
test
pop
out
inc
out
add
icebp
int3
adc
dec
insb
mulb
movsb
xchg
mov
xchg
pop
sub
out
add
ss
mov
js
sahf
mov
adc
cli
rol
or
orb
push
mov
bnd
xor
rcrl
je
in
lret
into
xor
cs
xor
arpl
mov
pop
imul
cmp
je
mov
outsb
iret
je
aam
cli
out
int
lock
mov
sub
mov
xchg
out
xchg
jecxz
cmp
icebp
cmp
xchg
jmp
loope
push
add
mov
lock
lret
mov
aam
lods
push
inc
enter
sub
ret
insl
outsl
jbe
sub
ljmp
gs
addr16
xor
into
lret
xor
xchg
push
mov
xchg
mov
jmp
sbb
mov
xor
leave
adc
ja
repz
lods
xor
dec
pop
jae
icebp
jo
and
xor
push
shlb
idiv
cmc
cmpsl
sbb
je
cltd
shrb
jmp
and
sarl
aad
xchg
adc
je
pushf
push
cld
inc
incb
movsl
bswap
daa
push
or
pop
repz
sarb
xchg
cltd
mov
loope
loopne
mov
sub
pop
jmp
mov
out
xchg
mov
insb
xchg
stos
mov
outsb
push
jmp
jne
das
push
repz
out
inc
nop
js
xchg
jge
cmpsl
sub
inc
push
lods
sbbl
mov
xchg
pop
mov
rcrb
stc
sbbl
fdivl
dec
sbb
jmp
mov
iret
cmc
iret
pop
pop
push
ficomps
adc
jg
int
jge
inc
pop
xchg
pop
je
lret
sbb
or
jnp
inc
rep
out
testb
arpl
lahf
in
negl
hlt
push
dec
sub
jmp
cmp
sub
orb
inc
popa
mov
add
enter
mov
and
retw
add
incl
cltd
dec
popf
fcmovnbe
fdiv
in
adcb
iret
ds
jp
pop
ucomiss
jmp
mov
mov
push
sahf
jnp
cmp
outsb
pusha
mov
mov
mov
ljmp
fstl
test
test
std
adcb
pusha
xor
mov
jnp
mov
mov
adc
or
adc
jne
jns
lcall
pop
movb
in
mov
sar
ficompl
cmp
stos
ds
sbb
add
cmpsb
inc
jbe
mov
cwtl
mov
xor
xlat
outsb
push
outsl
cmp
adc
dec
sbb
js
mov
adc
mov
and
jno
mov
movb
mov
cwtl
fmulp
loope
dec
mov
fisttps
jne
sbb
mov
cmc
sahf
cmp
out
fstp
je
sbb
int3
lahf
int
pop
sbb
orl
pop
adc
nop
mov
fsubrl
test
sub
cmpsl
mov
fwait
iret
sub
adc
xchg
and
enterw
jno
mov
mov
jns
fs
cmp
out
fs
dec
icebp
push
mov
and
xor
bound
push
inc
mov
mov
add
dec
mov
fnstsw
std
or
dec
pop
cmpsb
mov
in
jl
mov
leave
push
shrl
mov
movsl
sarl
push
push
stos
pop
lret
cltd
mov
mov
sub
jmp
pop
mov
fisubrl
gs
xchg
xor
js
aam
in
push
icebp
xchg
rolb
dec
cs
mov
stos
js
xchg
xchg
push
divl
cmp
test
scas
int
int3
and
shr
add
dec
negb
mov
lret
or
icebp
lcall
dec
xor
pop
jp
inc
mov
pop
out
and
mov
push
mov
cmp
adc
jg
xlat
mov
adc
loop
pop
rcrl
adc
mov
add
jecxz
test
xchg
xchg
and
repnz
and
pop
nop
adc
adc
xor
and
or
lock
xchg
or
and
lods
xor
push
repnz
frstor
pop
movsb
inc
xchg
inc
sti
jae
outsl
outsb
test
fistpll
and
dec
or
fwait
and
lock
fistps
push
push
lea
dec
jmp
daa
dec
mov
xchg
in
jg
dec
cmp
mov
adc
push
mov
xchg
cmp
jl
or
lds
mov
jg
adc
int3
ds
aas
jmp
pop
aam
pushf
icebp
cwtl
pop
lret
mov
xor
xchg
sub
add
sub
pop
out
out
sarl
sti
adc
sbb
in
cmp
mov
pop
adc
mov
bound
rorl
pop
add
cmp
mov
cmp
mov
movl
subl
les
pop
xor
xchg
lods
inc
jecxz
or
or
dec
mov
ret
adc
imul
mov
inc
iret
lock
mov
daa
in
addb
fmulp
inc
and
cs
lcall
inc
repnz
mov
data16
inc
mov
rcl
jne
stos
shll
repnz
xchg
mov
aas
icebp
push
rorb
testb
sbb
mov
es
arpl
mov
sub
rcr
stos
lcall
mov
cmp
andb
inc
sarl
test
cmp
es
adc
mov
sbb
mov
outsb
insl
lock
adc
out
in
mov
hlt
arpl
adc
or
xchg
adc
aam
cmpsb
push
mov
inc
push
cmp
pop
mov
arpl
in
jp
mov
dec
inc
les
dec
pop
insl
sahf
daa
dec
add
push
xor
push
mov
pushf
mov
ss
cmp
and
push
jnp
jno
or
xor
sbb
ret
xor
or
and
xchg
pop
aaa
push
mov
or
xchg
jbe
iret
pop
lahf
cli
inc
dec
push
sub
mov
pop
pushf
mov
stc
jge
pop
xor
pop
mov
hlt
popf
mov
pop
imul
subb
cmc
addl
mov
shr
sub
cltd
jle
pop
cmpsb
aas
loop
vsqrtps
dec
cmp
ret
and
fsubl
sbb
enter
lret
ja
sub
jp
cmp
pop
mov
fistps
pop
outsl
or
rol
pusha
test
mov
xor
ret
cmpsl
add
xchg
jmp
rcrl
push
push
scas
pop
jns
lods
xlat
inc
push
lahf
rorb
pop
fsub
xor
add
push
mov
jg
jns
aam
dec
les
fcmove
shrb
push
xchg
sahf
mov
std
rcll
sub
mov
and
sarl
out
loope
les
out
repnz
out
pop
jno
cmp
pop
ja
rorb
scas
inc
xor
mov
add
movsl
sbb
dec
lea
xor
push
adc
push
jp
notl
int
and
sub
jbe
repz
mov
lcall
jmp
adc
jne
or
sub
sbbb
mov
sbb
add
sub
popa
rcrb
test
push
sub
jg
int3
loop
xor
stos
pop
mov
daa
mov
int3
rolb
lret
mov
std
iret
jecxz
lock
add
rcll
fs
aam
jge
mov
add
mov
sub
or
cld
push
xchg
cmpsb
mull
scas
lock
aas
cmp
dec
push
push
mov
cmc
cmp
adc
rcl
jae
loop
mov
sti
fcompl
inc
outsl
push
mov
fldt
cmp
or
sbb
lods
sahf
inc
aaa
loop
in
cltd
adc
mov
and
push
sahf
in
test
fwait
repz
dec
hlt
bound
dec
daa
movsb
in
and
icebp
cmpsl
mov
jl
inc
add
iret
sbb
mov
pop
aam
xor
add
xor
ja
and
or
imul
stc
scas
push
shrb
pop
push
fldcw
fsub
int3
fs
dec
adc
push
push
push
xor
dec
dec
adc
int3
jmp
and
mov
adc
xor
pop
lds
mov
shl
sbb
mul
imul
xchg
int3
or
and
mov
mov
aaa
sahf
andb
xchg
mov
xchg
mov
stos
xchg
aaa
sbb
imul
sbb
push
pop
sbb
mov
insb
inc
xchg
lock
mov
and
enter
fldt
cltd
das
pop
icebp
cltd
fisttpll
sbb
loope
xchg
and
cmpsl
ds
push
mov
push
or
cmp
jp
inc
add
add
adc
sub
push
mov
mov
xchg
push
aam
mov
or
sbb
loopne
inc
or
ret
mov
inc
sbb
rcrl
push
adc
adc
lock
mov
sbb
repz
jns
fwait
mov
ret
pusha
mov
int3
or
jp
or
repz
sbb
push
roll
adc
cmp
rcr
mov
orb
adcl
and
push
jne
cmpsl
testb
gs
stos
sub
sti
dec
fists
jge
loope
into
inc
xor
push
and
popa
aam
fwait
pop
cmp
scas
loope
out
stos
cmp
adc
mul
jp
xorl
lds
mov
movsl
or
dec
mov
pusha
jp
push
les
fcoml
dec
fsub
sbb
and
inc
das
xor
pop
adc
divb
or
cmp
xchg
and
pop
clc
into
mov
add
mov
inc
mov
bound
fs
ret
adc
aad
adc
js
push
cs
movb
xor
xor
sbb
mov
jp
push
jl
jl
xchg
cmp
movsl
int3
dec
or
cmp
ret
and
and
mov
mov
and
jmp
cli
shlb
push
jle
sub
iret
outsl
rep
dec
pop
xchg
jo
jg
mov
popa
xchg
pop
mov
movsb
inc
add
int3
jmp
sub
dec
enter
pop
mov
dec
dec
jbe
lahf
fwait
stos
cmpsb
clc
movsl
push
mov
outsl
shll
add
rcr
mov
dec
add
add
pop
js
inc
sub
and
ficomps
xor
test
pop
or
stc
mov
add
ret
jae
insl
repz
stc
out
cmpsl
test
mov
je
aas
rcr
dec
test
xor
adc
fnstsw
push
and
mov
scas
or
push
lret
add
cmpsl
inc
sbb
and
jb
mulb
in
mov
stos
ds
push
arpl
sub
stc
jecxz
and
scas
aas
fs
jge
push
jg
test
test
imul
out
pop
push
std
test
adc
imul
sar
pop
imul
mov
lea
mov
stc
orb
push
mov
mov
das
sub
jp
cmp
leave
sbb
mov
stos
cwtl
filds
sbb
int
jmp
cltd
int3
pop
inc
nop
add
dec
rcrl
std
nop
lret
ljmp
pop
jnp
in
sbb
leave
sub
push
outsl
add
hlt
mov
cld
dec
pop
pop
inc
imul
cmp
fmull
jg
scas
lock
cmp
repnz
call
insb
imul
xor
mov
ljmp
testb
inc
pop
popa
jbe
cmp
jnp
dec
sahf
adc
xchg
decl
outsb
push
push
cwtl
jmp
lcall
sahf
sbb
inc
in
xchg
leave
addb
sbb
stos
mov
in
cltd
addl
insl
add
imul
jge
repnz
out
jge
outsl
lahf
add
inc
sbb
or
or
jl
xlat
pop
or
or
in
jae
mov
inc
mov
cmpsb
in
outsb
add
sub
test
mov
sbb
dec
lret
rorb
pop
pop
dec
dec
adc
loope
mov
aad
iret
aaa
or
leave
mov
sub
les
jl
addr16
mov
cs
ss
pushf
xchg
movsb
push
push
hlt
rolb
push
stos
pop
stc
pop
or
ret
push
lcall
fistps
jl
movsb
mov
jecxz
jmp
lds
pop
int
imul
pop
xchg
movsl
ljmp
ficoms
popa
adc
jo
lds
cmp
mov
or
sub
mov
push
jno
out
test
clc
push
mov
sar
cmp
stc
lods
and
inc
dec
mov
shll
cmp
aaa
xchg
mov
out
out
into
xchg
insb
mov
mov
and
ljmp
lret
insb
and
xchg
push
jge
je
pop
and
int
jno
ljmp
xchg
inc
inc
cmp
enter
leave
cmp
cmp
cmp
jecxz
addr16
adc
push
push
mov
push
fisubs
adc
lds
sbb
aas
sub
or
jns
mov
xchg
pop
insl
mov
mov
icebp
sbb
jg
ret
mov
mov
fcomp
or
ljmp
add
adc
push
xchg
or
push
test
daa
jns
push
cmpsl
mov
jg
stc
cli
xor
mov
add
ret
into
mov
pop
aas
add
add
fs
dec
sub
and
repnz
or
stc
jae
sub
xor
fimuls
sub
or
aaa
jno
add
xchg
imul
rorb
ja
orl
xchg
cmpsl
addr16
and
or
dec
jb
inc
dec
xchg
inc
mov
arpl
loope
rcrl
inc
or
loopne
cmc
jb
xchg
add
dec
push
push
add
inc
mov
jge
xor
fisubs
sbb
out
stc
sub
sub
cltd
outsb
xchg
jo
sub
outsb
lret
adc
lahf
iret
mov
into
jle
mov
push
add
xchg
repz
out
or
sub
aad
imul
lods
pop
push
cmp
or
push
jp
add
add
movsb
push
dec
sbb
mov
push
pop
ljmp
cwtl
repnz
add
adc
mov
or
shlb
or
push
sbb
pushl
cltd
negb
add
dec
mov
imul
xchg
push
jle
xor
popf
mov
addl
or
fcomps
dec
and
or
add
scas
leave
js
add
ja,pt
fidivs
adc
rcl
ret
mov
adc
jge
xor
dec
popa
cmpb
outsl
pop
jmp
pop
sbb
rcl
clc
jnp
subl
pop
dec
loop
sub
lret
addr16
sub
mov
int
outsb
xchg
cmp
push
imul
insl
lret
and
pushf
adc
mov
mov
lcall
push
repnz
or
popa
rcrl
add
popw
jp
in
imul
and
add
pop
jne
loope
pop
and
ret
jbe
lods
add
bound
in
enter
push
int
mov
ret
xor
cmp
jecxz
popa
out
xchg
imul
sbb
cwtl
pop
imul
lds
dec
adc
stc
call
cmpsb
add
inc
inc
pop
ljmp
iret
pop
pop
adc
jecxz
in
mov
sbb
dec
mov
push
add
repnz
cltd
xor
dec
call
aas
int
xlat
test
adc
fdivrl
outsl
dec
or
push
jge
in
mov
mov
cs
pusha
jns
cmpsl
mov
add
push
xchg
enter
pop
jo
mov
es
leave
ja
test
lds
out
sbb
xlat
pop
cmpsl
adc
dec
mov
insb
sub
mov
arpl
dec
sti
test
xor
int3
or
insl
insl
call
jmp
mov
mov
test
mov
lods
sbb
inc
adc
jle
jmp
nop
fiadds
pop
and
repnz
sbbb
js
mov
lret
arpl
pop
push
and
aam
repz
sub
jl
fs
jno
inc
loop
sahf
stc
mov
cs
and
or
pop
jnp
lods
adc
iret
cmp
adc
jl
outsl
push
subl
das
dec
rorl
mov
jnp
push
sahf
push
cmpl
mov
movsl
jecxz
int3
mov
xor
inc
sti
es
inc
testb
ds
mov
and
fmuls
fidivs
fcompl
pop
xor
adc
repz
mov
mov
push
xor
cmp
subb
pop
pusha
mov
imul
xchg
insl
xchg
jmp
mov
test
inc
test
adc
mov
jle
das
add
dec
and
into
addr16
jl
in
mov
mov
fsubrp
xchg
fisubl
test
xchg
fsub
gs
mov
loope
mov
cwtl
je
inc
mov
popa
outsl
push
rcll
jmp
sbb
inc
stc
mov
pop
pop
ja
xchg
aad
mov
mov
into
in
xor
cmpsb
outsb
inc
scas
pop
out
jmp
into
xchg
jns
lahf
ja
dec
cmp
pop
subb
out
out
pop
pop
dec
mov
flds
xlat
push
outsb
mov
mov
std
test
in
lret
sbb
cmp
int
push
mov
or
stos
lcall
adc
pop
push
adc
je
movups
in
mov
or
push
fs
lods
arpl
xchg
lcall
mov
fwait
imul
cltd
jge
cmc
pop
subl
inc
add
sti
sub
cwtl
loop
es
loop
fidivl
in
bound
out
ss
loop
jmp
daa
out
or
push
icebp
ja
das
into
adc
cmp
add
sub
push
sub
push
sbb
aaa
fiaddl
xor
movsl
add
and
cmpsl
stos
stos
cltd
inc
hlt
lock
into
mov
popf
roll
jne
and
push
push
cmp
shlb
ljmp
loop
mov
repnz
cld
cmpsl
mov
test
gs
ljmp
repnz
test
repnz
decb
xchg
push
mov
test
or
sbb
sbb
mov
rcl
inc
mov
outsl
jecxz
rolb
and
jb
push
dec
notb
adc
xor
jno
and
xchg
adcl
test
pop
pop
test
imul
mov
pusha
std
aas
das
scas
loop
mov
or
add
leave
adc
clc
jmp
dec
push
xor
push
lods
or
popf
ss
ficompl
cwtl
sbb
pop
mov
xor
cld
or
clc
or
jl
sub
call
jl
sbb
mov
roll
cmp
push
lods
sub
out
adc
shll
xor
in
shlb
pop
into
inc
sub
sbb
das
addb
int
or
in
jle
xchg
imul
js
or
xchg
into
push
inc
pop
lcall
in
in
adc
iret
adc
sti
aaa
popf
popf
cmp
mov
jb
mov
loopne
and
lods
jl
lret
inc
popa
pusha
adc
mov
jmp
sti
sub
mov
std
xor
cld
arpl
jecxz
push
xor
adcb
mov
lret
push
movsb
sbb
xchg
xchg
lret
lds
nop
jp
sbb
jae
dec
xchg
cmpl
pop
jg
adc
dec
enter
add
dec
hlt
inc
cwtl
les
adc
cmpl
jge
mov
fs
je
in
mov
sub
les
cli
repz
hlt
movsb
mov
pop
pop
inc
push
mov
aad
ds
lahf
mov
and
stos
push
inc
fwait
sub
add
test
push
iret
and
mov
shl
out
insl
xorb
push
imul
cmp
cmp
xchg
jge
imull
iret
inc
fidivs
mov
iret
cmp
cmp
enter
ret
mov
xchg
jecxz
pop
sbb
inc
fmull
sbb
rorb
movsl
ret
aad
jo
jle
inc
xchg
cwtl
std
loopne
pushf
or
jle,pn
jne
fwait
in
or
cmp
outsb
sub
push
inc
test
push
sub
add
mov
in
mov
cmp
mov
pop
lds
adc
or
rclb
or
fsubrl
shll
xchg
int
fs
int3
or
lock
push
test
incl
push
add
dec
dec
jge
out
hlt
sbb
or
pop
inc
test
test
cmp
into
cwtl
fsubrs
mov
hlt
pushf
outsl
jnp
lcall
pop
jo
push
inc
lret
jb
stc
sub
and
repz
fisubrl
fbld
icebp
dec
addr16
into
sub
dec
xor
pop
roll
push
mov
icebp
cmpsl
jo
jge
xchg
cltd
sti
and
mov
bound
add
mov
cld
jb
cmp
sahf
jnp
sbb
cs
jo
or
in
pop
incl
pop
das
inc
inc
rcrb
pop
rolb
ffree
adcb
mov
es
dec
adc
pop
lcall
sbb
stos
push
or
fcom
push
xor
pop
mov
sarb
bound
lcall
push
loop
in
rcrl
test
add
cmp
mov
enter
fbld
and
test
mov
cmc
in
push
cld
das
popa
dec
insb
xor
shrl
lahf
movsb
pop
test
and
push
jno
fldl
pop
fimull
dec
cmc
adc
js
cmp
and
push
push
nop
ja
adcl
push
cmovp
jbe
cli
sub
rcrb
inc
mov
xchg
xor
lock
insl
xor
xchg
ss
mov
push
ret
xor
ret
cmpsb
mov
rolb
add
out
and
pusha
ret
shlb
lock
in
leave
ret
test
sub
ret
addb
insb
sub
jle
test
aad
inc
test
sbb
jl
sub
stc
inc
sbb
insb
push
jb
lea
into
sahf
shlb
sbb
dec
sub
push
xchg
gs
fdivr
mov
pop
arpl
arpl
imul
sbb
sbb
paddw
lds
sub
movsl
popa
xorl
jnp
lods
mov
fnstcw
cmc
call
mov
mov
into
dec
cwtl
scas
xchg
cmp
mov
jb
mov
xchg
and
stos
sub
ds
aaa
imul
inc
fidivs
aaa
xchg
push
pushl
cmpsl
cmp
jns
pop
dec
out
sbb
dec
je
pusha
data16
lea
xor
push
andb
push
cmpsb
and
arpl
lret
sbb
cmp
jbe
jo
cltd
jmp
das
jns
xor
pop
cmp
mov
xchg
out
pop
xlat
enter
adc
sbb
aaa
and
icebp
adc
jg
jae
add
xchg
cmp
mov
jle
and
sbb
push
lahf
out
jecxz
jae
jo
and
sbb
rolb
adc
rcll
xor
insb
inc
pop
inc
es
mov
lcall
inc
and
dec
or
and
test
jecxz
sbb
lret
fmull
or
xorl
and
dec
mov
inc
and
push
lret
dec
or
imul
or
aad
fildl
and
sbb
cld
and
mov
pusha
xchg
hlt
or
sbb
lret
jb
jb
fists
test
cmpsb
inc
push
xor
stos
mov
dec
pop
push
addr16
scas
outsl
pusha
xchg
push
pop
dec
xlat
test
in
push
rcll
push
xchg
lcall
pushf
fimuls
pusha
xchg
mov
hlt
pop
xchg
addl
dec
xchg
sahf
in
mov
pop
sahf
mov
and
in
jl
and
push
adc
nop
add
ficompl
fistpll
lods
xor
mov
and
gs
jo
adc
ja
js
int
stos
pop
loopne
add
ja
add
lods
jb
gs
or
cli
cmp
mov
insl
pop
int
in
inc
in
sub
lock
xlat
mov
xchg
test
loopne
stos
mov
lcall
notb
pop
adc
fsts
xchg
pop
mov
test
cmp
lea
cmp
push
jns
in
fsts
mov
icebp
add
xor
repz
push
push
into
idivl
adc
mov
pop
test
dec
cmpsb
add
pop
test
orb
pop
xlat
ss
cmp
and
push
inc
stos
mov
xchg
inc
xchg
mov
inc
je
mov
das
and
pop
push
xorl
mov
ja
cmpsb
js
nop
pop
push
je
push
xor
sbb
and
enter
sub
mov
push
jmp
out
pusha
fistpll
popa
cmp
jns
and
xchg
imul
mov
jbe
sbb
test
pushf
in
push
push
out
pop
xor
dec
push
addr16
outsb
jne
xor
or
mov
adc
sub
sub
call
in
mov
mov
push
mov
xchg
xor
sub
test
inc
jecxz
add
inc
movsb
in
or
dec
fldenv
pushf
cmpsl
loope
add
push
pop
cmp
xor
dec
rol
fwait
mov
nop
jnp
outsb
mov
shll
je
push
xor
sahf
or
into
mov
lods
push
in
lea
mov
mov
pop
mov
push
mov
test
loope
ljmp
jl
push
cmp
adc
insb
call
mov
add
lret
test
popa
in
insb
outsb
cwtl
fldcw
call
aam
call
dec
jo
nop
lock
movsb
cld
and
inc
push
test
lds
dec
les
add
dec
pop
jmp
pop
cli
mov
sub
adc
and
xor
repz
jge
mov
ja
sti
ljmp
sti
inc
cmpsl
jo
adc
mov
and
push
test
pop
push
imul
negl
int
iret
dec
mov
aam
jp
faddl
and
stos
rcl
mov
push
movsb
scas
inc
pop
dec
xorb
mov
je
mov
cmpsb
rcrb
push
ds
xchg
inc
fwait
repz
scas
mov
xchg
aam
or
jg
push
fstp
sahf
shll
je
ret
pusha
push
clc
inc
aad
mov
or
out
test
xor
jmp
jne
outsl
sbb
setle
out
aaa
inc
push
push
jae
xchg
ret
bnd
sub
pop
add
imul
mov
sbb
push
loopne
aam
fwait
pop
ss
insl
xor
ds
mov
jae
scas
sub
lret
aaa
cmc
add
sbb
leave
rcll
icebp
add
pop
cmp
sub
lret
mov
sbb
vrsqrt14sd
js
cmp
sub
xor
mov
ss
and
xchg
push
sub
pop
pop
push
cmc
dec
ret
testb
stc
and
insb
sbb
out
mov
cmpl
insb
mov
outsl
movsl
adc
cmp
xchg
sti
mov
push
andb
and
pusha
jae
sbb
sbb
nop
pop
xchg
jnp
mov
sub
or
adc
lods
enter
sahf
dec
stos
loope
fnsetpm(287
xor
sub
xchg
push
scas
adcl
xchg
test
push
xor
out
aaa
add
push
or
pusha
cmp
jge
xchg
stc
cwtl
cmp
aam
jecxz
mov
fdivl
xlat
stc
lret
outsb
outsb
dec
push
bound
xor
mov
mov
call
mov
sbb
mov
hlt
cmpsl
lds
or
jns
std
adc
pusha
mov
and
jbe
or
das
cltd
pop
dec
cmpsb
mov
subl
fnstsw
leave
dec
push
and
in
xchg
jno
push
lret
js
aam
mov
inc
jbe
loop
xlat
int3
inc
imul
dec
xchg
add
cltd
mov
mov
dec
orl
mov
in
mov
xchg
in
call
cmp
ds
mov
mov
nop
mov
add
fnstcw
fsubrs
pop
stc
or
jae
cmpsl
pushf
jb
fwait
jecxz
out
into
pop
jecxz
pop
out
sbb
dec
and
xor
push
test
adc
ret
or
sbb
push
stos
int3
jecxz
pop
and
mov
mov
aas
inc
int3
jmp
cld
lcall
hlt
jecxz
es
mov
aaa
jae
dec
cli
push
nop
xchg
lods
xchg
jmp
out
lods
std
mov
push
pushf
inc
push
dec
or
sbbl
insb
sub
jg
add
jl
dec
mov
fs
mov
insb
cmpsb
cmp
and
movsl
and
xor
or
out
clc
sti
cmp
test
icebp
loop
cmp
jnp
aam
andb
and
in
int3
test
cmpsl
iret
pop
mov
mov
dec
dec
inc
inc
out
mov
loopne
fimull
jb
add
loope
xlat
jmp
jbe
pop
lcall
mov
shll
adc
ja
jns
ss
arpl
leave
jb
push
pusha
ljmp
mov
lods
lahf
inc
gs
mov
shld
jge
icebp
js
das
nop
pop
push
ret
jmp
out
sbb
pop
cmp
stos
push
int3
dec
mov
xlat
lcall
in
aaa
inc
add
cwtl
jno
and
and
sub
fsubrl
xor
mov
ret
movsl
or
sub
xlat
dec
loop
stc
mov
ret
or
mov
lcall
call
fsts
or
jle
adc
cmpsb
push
pop
push
lea
cmp
jns
cmp
mov
popa
jecxz
sbb
push
bound
cmp
mov
jne
jle
sahf
lret
pop
cmpsb
add
mov
aad
cmp
cli
and
and
ret
xchg
ror
mov
sub
jae
dec
adc
mov
pop
jnp
add
faddl
popf
jnp
add
jmp
aad
lods
cli
cltd
xor
popf
aad
es
and
or
dec
loope
inc
pop
jno
or
iret
sub
bound
push
mov
fsts
and
xchg
mull
jp
in
aas
mov
mov
incl
in
aas
stos
sbb
fs
out
add
ja
mov
call
mov
repnz
mov
xchg
inc
mov
xchg
adc
mov
cmp
std
addr16
hlt
sub
sbbl
cwtl
cmp
mov
lret
or
xorb
xchg
aas
xchg
push
mov
add
std
lcall
shrl
ret
cmp
iret
arpl
sbb
xchg
pop
retw
cmp
divb
mov
nop
xchg
ror
mov
testl
push
fsub
ficoml
mov
mov
rorb
pop
adc
inc
pop
cmpsb
xchg
xchg
and
mov
idiv
test
mov
rclb
xor
mov
sahf
jg
mov
in
enter
push
xchg
dec
xor
mov
inc
push
push
mov
cmp
test
subb
pop
push
push
pop
ljmp
mov
inc
sub
pusha
add
stos
cwtl
loop
mov
call
repnz
hlt
imul
and
xor
repnz
leave
mov
xor
dec
and
jmp
iret
adc
stos
or
xchg
jmp
mov
cmpsb
mov
mov
add
jle
lock
sbb
std
roll
push
jg
rclb
pop
mov
push
jae
push
ret
inc
xchg
inc
adc
int3
or
dec
jl
add
sub
mov
jl
test
inc
sbb
insl
push
icebp
arpl
dec
lcall
lods
xchg
ss
mov
sbb
push
pusha
cmp
xchg
icebp
and
push
add
dec
cmp
dec
scas
mov
push
or
cmpsl
and
adc
addr16
scas
arpl
sar
xchg
cli
push
sbb
add
push
mov
popa
nop
mov
mov
out
mov
mov
pop
sub
call
insl
in
hlt
arpl
iret
mov
iret
rolb
loope
mov
mov
adc
divb
jo
rolb
clc
dec
out
lds
repz
arpl
adc
xchg
and
test
scas
dec
cwtl
xchg
dec
jns
lods
pop
ja
mov
and
inc
mov
sub
add
and
cmc
jmp
mov
pavgw
dec
lods
ret
mov
mov
daa
adc
mov
sub
xchg
jno
inc
pusha
fwait
adc
cli
fcomps
stos
mov
aaa
xchg
inc
ret
mov
mov
inc
pop
mov
ret
sti
mov
mov
out
pop
stos
mov
xor
daa
and
jbe
shlb
pop
lock
aaa
subl
dec
iret
rorb
xor
dec
pop
ds
pop
ja
rorl
lret
xchg
fs
sarl
pop
shrl
pop
loope
enter
push
in
fidivrl
push
cmp
push
cmp
pop
xor
rcrl
div
fistl
fisttpll
adc
pusha
jno
aam
add
dec
insb
insl
divl
loope
push
jae
fstps
mov
insb
stos
cmp
inc
std
daa
lret
sub
into
fists
cmpsl
mov
adc
dec
or
lods
iret
ficomps
outsb
cs
push
gs
xor
xor
xor
mov
mov
pushf
xor
lahf
dec
pop
arpl
test
xor
ret
bound
cmp
mov
sub
cltd
push
pop
push
call
xor
mov
sub
mov
adc
rclb
mov
fldcw
push
andl
push
add
or
cmpsl
cwtl
jmp
push
outsl
add
pslld
sbb
cmp
sarl
push
fstps
dec
imull
int3
hlt
cmp
outsb
cltd
int
fsubrl
xchg
nop
andb
addr16
jle
and
or
fldl
insb
rcr
and
rol
in
and
fcmovnu
popf
xor
ret
adcl
std
test
movsb
push
aaa
dec
in
inc
push
ja
jg
les
xchg
pop
mov
push
inc
inc
sub
cmp
pushf
cltd
jns
sub
mov
dec
push
mov
ja
inc
mov
or
jo
sahf
jae
xor
in
shlb
js
ja
inc
mov
dec
les
popf
call
sbb
roll
enter
stc
mov
mov
popa
adc
inc
mov
scas
mov
fcoms
mov
lcall
ja
inc
push
sbb
push
xchg
mov
leave
pop
outsb
or
dec
cmp
jo
mov
popf
aad
adc
mov
aam
ret
mov
xor
push
or
cmp
in
jmp
sub
inc
xchg
jns
xchg
xchg
lds
inc
mov
clc
jecxz
push
cmp
jo
test
sarl
scas
mov
adc
loopne
mov
fimull
dec
cwtl
inc
ljmp
ds
out
repz
mov
sbb
push
in
iret
fs
lock
cmp
scas
jo
shl
fcoms
jns
sti
xchg
movsb
push
mov
jg
xor
das
das
lret
cmp
std
adc
lcall
push
decl
and
xchg
add
pop
sbb
xchg
and
fimuls
push
popa
movsb
stos
mov
in
or
sub
gs
and
add
cltd
mov
aam
in
stos
insl
shl
lods
div
fxch
mov
and
cmp
xchg
push
in
filds
sub
in
xlat
in
mov
xchg
shl
test
fmuls
xchg
ds
fldenv
lahf
outsl
loop
sub
aas
sbb
repnz
sarl
fsubp
xchg
fs
repz
jbe
test
pop
cli
xchg
cmp
subb
lret
outsb
fsts
sti
dec
gs
xchg
addb
mov
pop
ret
mov
loopne
mov
popa
push
cmp
push
repz
insb
jl
sar
aas
out
out
popa
sub
mov
andl
mov
mov
insl
adc
lods
in
aam
mov
add
pop
mov
cmp
and
mov
lcall
push
das
stc
ja
sarl
nop
aam
bound
int3
sbb
mov
mov
sub
push
insl
or
sub
pop
orb
push
popf
mov
inc
inc
xor
incb
rclb
inc
daa
gs
dec
in
cmp
or
inc
out
and
add
push
lods
sbb
lahf
enter
mov
xor
shl
xchg
in
push
shlb
xlat
lea
ja
lds
imul
cmp
push
lret
pop
lret
movsl
cwtl
jmp
add
cmpsb
mov
fisubs
jg
dec
pop
dec
mov
mov
sbb
dec
jp,pt
sub
dec
ja
arpl
cmpsb
jecxz
jle
popf
lea
xchg
fstps
sub
out
data16
inc
inc
jecxz
or
popf
cmpsb
outsl
js
aaa
sbb
mov
xchg
test
ss
adc
jmp
lock
or
lret
incl
xchg
rcl
loopne
out
lahf
fidivrs
xchg
mov
xor
insl
in
jge
out
dec
leave
xor
loopne
xor
pop
pop
nop
sub
stos
into
push
cmpsl
in
das
sbb
dec
test
adc
popa
pop
cs
std
lods
aas
in
mov
or
inc
imul
push
loopne
lret
xor
adc
mov
popa
lahf
xor
das
mov
sub
rclb
incb
sbb
shrb
cmp
and
leave
shlb
test
sub
test
dec
pop
adc
mov
cwtl
jae
cltd
jp
dec
jp
inc
push
icebp
je
out
in
push
test
clc
adc
cmp
adc
jne
pop
jns
lret
in
adc
sub
lods
out
pusha
jns
mov
pop
lds
push
push
mov
insl
cs
xchg
les
lcall
scas
xchg
mov
cmp
xor
rorl
jno
nop
adc
fcoms
add
pop
or
mov
iret
jb
sbb
lahf
clc
and
push
dec
adc
and
das
pop
repnz
pop
mov
adc
mov
push
pop
sbb
pop
xor
mov
fcomi
fisttpl
jnp
arpl
in
test
arpl
mov
adc
cltd
int
fstpl
int
aaa
fimuls
pushf
add
mov
inc
das
les
stos
fsin
and
imul
in
sbb
pop
test
into
lcall
add
mov
negb
adc
mov
mov
call
sub
mov
dec
int3
cmp
sub
pop
push
cmp
cmc
rcll
xchg
rolb
add
jbe
es
sbb
xchg
nop
pop
xor
push
fs
mov
shll
or
mov
or
mov
or
outsl
xchg
test
cmp
xor
bound
mov
pop
jle
add
mov
lret
inc
into
loop
add
add
push
jge
jns
dec
or
adc
shlb
fidivs
mov
nop
ds
stos
rorl
and
mov
insb
xor
leave
data16
mov
notb
shl
xchg
adc
cmp
inc
inc
sbbl
test
in
mov
or
pusha
xor
or
icebp
sub
mov
andps
sbb
arpl
push
ret
repnz
mov
or
ret
or
xchg
adc
add
push
imul
lret
jmp
insl
sub
or
sbb
loop
mov
es
jp
add
nop
or
or
push
lods
dec
push
lock
loop
out
sub
mov
sahf
jno
out
dec
adc
add
xor
mov
je
xorb
cmpsl
stos
xchg
outsb
inc
mov
fdivrs
movsl
test
sbb
jne
cs
adc
popf
add
cmp
arpl
int
repnz
push
mov
imul
insb
inc
lcall
adc
or
push
add
adc
out
jp
mov
cli
out
add
xor
add
cli
jno
call
jmp
fists
xor
or
adc
push
fnstsw
jnp
fiadds
test
loop
dec
les
mov
sahf
out
push
push
test
fsubrl
sub
cli
frstor
adc
fisttpll
or
addr16
jbe
cmp
mov
sysexit
mov
bnd
leave
mov
call
xchg
loop
push
mov
pop
xchg
xor
enter
fstpl
in
enter
xor
std
int
adcb
call
adc
jle
sahf
hlt
roll
ret
int
mov
ja
das
cmp
xchg
imul
out
lds
add
imul
xchg
push
movsl
jl
clc
push
cmp
jne
int
dec
lcall
andb
icebp
fwait
ret
push
in
pop
es
dec
mov
stos
xchg
daa
add
jbe
mov
fldcw
cmc
pop
ljmp
idivb
out
ffreep
cmpsb
pop
in
or
les
mov
xchg
adc
sub
jge
xchg
orb
fidivl
movsb
ficoms
mov
xor
movsb
pop
das
mov
in
sub
in
lcall
loop
sbb
xlat
inc
loope
push
dec
stos
adc
dec
fs
pop
add
inc
std
cmp
pusha
enter
pop
add
xor
add
stc
scas
xor
mov
mov
addl
inc
enter
jecxz
lret
xchg
and
cmp
ds
andl
inc
clc
shlb
nop
push
jmp
shl
cmp
push
dec
in
dec
out
pop
mov
xor
xchg
filds
inc
mov
jb
inc
mov
jle
dec
push
lcall
adc
stos
xorb
in
sub
mov
andb
or
pushf
mov
adc
and
adc
repnz
lcall
xchg
push
lret
cmpsl
adc
aas
inc
insb
stos
aaa
int
scas
in
add
enter
lods
lret
movsb
or
pushf
pushf
popf
icebp
inc
lods
loope
add
xor
lea
xchg
in
xchg
push
inc
mov
jb
out
daa
xor
es
rcrl
jmp
outsb
out
int3
adcl
dec
sbb
test
mov
pop
pop
mov
sub
and
cmp
jo
dec
inc
dec
movsb
stos
inc
mov
cmp
cmc
xchg
xchg
inc
pop
enter
jle
cmp
sub
loopne
out
pop
idivb
adc
sub
xchg
and
lcall
cmp
popf
xorb
imul
fwait
notl
in
daa
ret
cld
mov
pop
and
ss
sub
add
push
mov
popa
mov
push
nop
js
push
xchg
add
mov
aas
add
sahf
mov
and
and
inc
outsb
lcall
push
pop
mov
shll
loop
popf
adc
mov
movsl
scas
or
xchg
fnstcw
mul
sub
sbb
or
int3
pop
pop
popa
rcrb
jl,pn
js
inc
sub
test
mov
fwait
push
fmuls
jmp
daa
sbb
cld
and
or
jle
popa
cmp
pushf
out
jge
cmp
js
xchg
xchg
cli
filds
in
or
pop
insl
idivl
jge
movb
xchg
xor
inc
xchg
cmp
jl
cltd
rorl
repnz
aad
insl
sbb
hlt
xor
adc
or
mov
repnz
sar
shll
mov
fdivr
ja
sub
in
aas
jae
jge
jl
dec
jecxz
cmp
xor
out
add
mov
pop
xor
mov
xchg
out
sarb
mov
xor
or
sbb
es
and
add
popf
dec
cmp
inc
cmp
loop
inc
out
ret
arpl
lahf
fs
out
pushf
inc
mov
and
in
fisttpl
pop
out
sub
ds
xchg
pop
sbbb
xor
int3
shlb
xorb
add
repz
cmpsl
or
mov
les
fisubrs
xchg
addr16
dec
mov
aaa
mov
mov
add
and
mov
jb
and
loop
mov
pop
adc
aaa
xchg
push
jl
mov
test
xor
lods
inc
mov
cmp
hlt
mov
cmpl
clc
test
sub
int3
or
sbb
push
jle
push
repnz
jne
inc
loope
inc
cmp
cmp
popf
and
add
shlb
mov
lods
pop
pop
cwtl
cmp
push
adc
scas
mov
pop
ss
jno
cmp
mov
sbbl
push
divb
aas
sub
mov
xor
xor
fs
sub
xchg
sbb
dec
int
insl
mov
xchg
mov
jne
push
jl
jo
pop
das
mov
subb
or
jns
int
fisttpl
repnz
imul
mov
push
xchg
mov
inc
popa
lock
fistps
daa
pop
stc
test
mov
in
sub
sbb
mov
pop
ret
dec
ja,pn
mov
sbb
or
adcb
xchg
mov
test
mov
pop
add
pop
nop
loopne
dec
repnz
jno
cmpsb
mov
pop
xchg
jge
jb
mov
xchg
inc
in
enter
ret
scas
fidivs
mov
adc
inc
dec
add
jg
fs
bound
fs
sub
push
jnp
or
cmp
pop
jge
das
and
xchg
adc
adc
aad
loopne
xor
and
addr16
jb
ficomps
out
sti
in
pop
lret
mov
leave
out
addr16
xchg
jne
jo
jb
mov
lods
mov
test
inc
leave
and
push
dec
sub
imul
mov
inc
out
cmp
jnp
mov
or
rclb
pusha
push
push
and
ss
gs
and
jp
adc
lea
mov
jb
mov
cmp
mov
sub
adc
lea
outsb
lock
ror
lock
jno
mov
cmp
movsl
fs
aaa
pop
dec
push
out
mov
std
and
or
es
enter
es
jnp
aad
lret
inc
stos
xor
nop
push
and
out
aam
cltd
or
leave
pop
pop
or
sar
test
add
adc
xchg
and
loopne
xchg
dec
mov
adc
inc
movsb
ss
inc
mov
mov
jle
mov
xchg
ja
xor
enter
or
dec
in
cmp
ret
outsl
lcall
or
call
test
add
or
enter
sbb
dec
mov
cs
lods
rcrb
repz
sub
rcrl
cmp
xchg
mov
rcl
mov
mov
pop
push
dec
pop
sbb
xlat
daa
lock
mov
jecxz,pt
je
test
enter
mov
or
ljmp
cmpl
ror
std
mov
mov
adc
inc
xor
mov
lahf
dec
sub
sbb
daa
sti
in
int3
sub
pop
stos
push
popa
and
mov
inc
pop
clc
push
flds
pop
repnz
test
fistpll
sbb
test
sti
icebp
mov
test
cmp
pushf
sti
in
pusha
lea
and
or
cmp
sub
aad
pop
mov
mov
int
clc
jl
mov
or
ljmp
mov
mov
mov
xlat
fisubs
movsb
xchg
and
fs
scas
inc
mov
jl
push
test
mov
mov
jbe
mov
pop
movl
xor
mov
shr
mov
mov
adc
out
imul
fs
loop
popa
fisubl
fwait
outsl
stos
arpl
xor
and
bound
jb
mov
icebp
ror
inc
pusha
jmp
ret
xchg
pop
xor
mov
mov
inc
stc
dec
lods
and
scas
loop
imull
fstpt
outsb
arpl
inc
lret
sbb
je
ja
xchg
push
mov
addb
cltd
repz
add
out
lds
call
fisubrs
es
xor
sbb
and
adc
push
sub
mov
lds
push
lea
je
daa
cmpsl
insl
mov
adc
iret
ret
pop
out
inc
mov
mov
mov
push
cltd
xchg
xchg
not
test
les
xchg
movsb
jo
mov
push
cmp
cmpsl
xchg
movsb
mov
loopne
add
mov
add
push
cli
jnp
gs
mov
cbtw
inc
idivb
jnp
sarl
pop
in
push
lds
jg
loop
fidivrl
sti
sbb
int
loope
xchg
adc
xchg
push
bound
mov
clc
push
insl
ds
mov
in
aas
jnp
pop
test
jbe
mov
bound
mov
lea
jnp
cs
lea
inc
mov
nop
dec
ds
xor
es
call
sti
cmpsb
push
xor
xor
sub
cmp
add
icebp
xchg
cmpsl
ficoms
icebp
xchg
call
and
aam
cld
or
push
in
mov
and
adc
xor
jb
pop
stos
inc
loopne
data16
push
mov
fsubrl
and
test
in
xor
add
in
jecxz
loope
jecxz
mov
addr16
lcall
test
cmp
fnstsw
movsb
das
ret
ja
mov
sub
xor
push
mov
dec
test
jg
aam
pop
or
sbb
pop
mov
pop
sarl
push
xchg
fdivr
ss
add
in
jg
mov
dec
sub
dec
and
js
pop
xor
lret
loope
pop
mov
ds
jg
xchg
lds
mov
lods
dec
data16
ja
sub
inc
fimuls
imul
mov
loope
movsb
push
loope
inc
pop
fisubl
rolb
lret
addl
dec
jp
jo
and
pop
dec
add
push
fwait
jl
mov
jo
jl
inc
ret
jge
outsl
mov
scas
cmpsb
inc
or
loopne
xchg
idivb
fimuls
mov
mov
insb
pop
and
xchg
gs
in
movsl
call
icebp
ja
xchg
mov
jb
leave
fcmovbe
outsb
mov
pop
or
adc
sbb
inc
cmpsb
mov
mov
dec
test
ss
negb
lahf
sub
cwtl
out
jg
xor
xor
adc
adc
and
aam
call
push
clc
inc
outsl
in
into
fiadds
sbb
mov
addr16
loopne
aas
movb
jno
xchg
jae
xchg
or
jno
mov
sub
sbb
xor
lret
inc
popa
add
push
fwait
lret
mov
sub
das
outsl
bswap
xor
mov
les
lock
mov
cmp
sbb
pop
sub
pop
adc
in
in
addr16
in
je
jp
ja
cmp
adc
sbb
test
dec
pop
popa
fs
cltd
sub
mov
dec
xlat
pop
dec
imul
mov
xchg
fbstp
cs
rorl
add
push
mov
mov
jnp
in
in
pop
mov
xorl
mov
inc
subb
mov
int
rcr
inc
test
mov
hlt
dec
je
fisttpll
lea
jge
dec
fcmove
pop
xor
popa
xchg
aad
mov
pop
bswap
fbld
xor
mov
jo
or
arpl
or
inc
arpl
or
rcrb
mov
shll
xchg
out
outsl
cs
mov
pop
inc
mov
push
adcl
lods
fcoms
stc
imul
lods
xor
int3
pop
pop
inc
fstps
pop
daa
mov
sub
xchg
into
inc
les
mov
pop
lds
jg
xchg
sbb
jne
dec
sbb
dec
fdivr
add
ds
jb
xchg
or
aam
inc
push
mov
push
push
pop
fildll
mov
cwtl
xchg
lcall
cmp
xchg
xchg
pop
ja
in
test
pop
xor
lea
mov
jo
arpl
cli
int3
push
mov
inc
cld
or
add
in
in
inc
mov
and
pop
xchg
sub
jmp
push
push
and
stc
pop
addr16
int3
xchg
xor
push
xchg
cmp
popf
xchg
es
loope
ret
shrb
jl
rorl
xchg
mov
xor
and
fistps
push
jge
imul
lods
jno
insb
int
nop
jns
dec
repnz
ss
jg
inc
out
xchg
add
pop
jbe
xlat
add
jbe
rcll
enter
mov
in
push
mov
icebp
in
sub
or
imul
fstl
movzwl
jge
inc
shr
adcb
mov
pop
mov
xorl
push
lods
jmp
dec
ret
ficomps
aas
add
jp
cltd
fildll
dec
xorl
dec
push
je
int3
pop
test
push
add
add
mov
jl
shufps
sbbb
push
push
push
and
movsb
add
jb
stc
shl
jnp
dec
add
mov
stc
mov
or
mov
hlt
lahf
fwait
movsl
inc
fcompl
dec
cmpsb
and
daa
jp
mov
imul
mov
lods
sti
or
xchg
jp
or
clc
inc
mov
and
decb
cmp
jg
add
pop
pop
sbb
xor
mov
nop
xor
lds
or
xlat
or
xchg
xor
and
and
aaa
add
in
mov
inc
pop
daa
cmp
xchg
ja
add
icebp
in
fwait
iret
sarb
xor
dec
jo
cmpsl
arpl
jge
iret
xchg
insb
int
nop
sbb
and
divb
xchg
mov
cmp
sub
cmpsb
sub
div
xchg
pop
sub
mov
jmp
insb
mov
cld
cltd
or
cmp
sbb
push
sti
xchg
les
or
pop
adc
xchg
imulb
mov
pushf
imul
inc
jg
daa
xchg
subl
pushf
es
repz
std
pop
outsl
arpl
and
addr16
xor
loop
push
add
sbb
and
pop
popf
test
pop
push
dec
ficoml
clc
pop
fs
dec
adc
cmpsl
cmp
popa
inc
add
jb
nop
into
pop
in
sbb
xor
xlat
mov
enter
sbb
lds
xorps
enter
mov
pop
mov
lret
push
push
lods
mov
inc
fwait
inc
mov
movsl
cmc
jb
mov
lcall
movl
imul
sub
cmp
mov
popf
jns
inc
repnz
xchg
out
movsl
aam
xchg
arpl
push
loope
fsts
xor
lds
jp
orb
clc
mov
incl
repnz
fs
cmp
pop
cmp
mov
push
and
loope
ficomps
int
push
jecxz,pn
and
add
addr16
pop
mov
outsl
enter
push
xorl
inc
imul
arpl
arpl
shlb
adc
shlb
push
adc
sahf
sbbl
icebp
xor
divb
jb
mov
sti
stos
cs
mov
mov
cmp
mov
popf
mov
rolb
or
int3
pop
fnstsw
daa
rclb
mov
stc
and
sbb
mov
sbb
fcmovb
cmpsl
fistpl
cltd
mov
das
in
mov
push
cmp
or
mov
lret
pop
loopne
popf
divb
stos
inc
xchg
jb
sub
mov
mov
mov
adc
dec
ficomps
mov
cmpsb
pop
and
mov
xor
stos
mov
lock
mov
pushf
inc
or
jb
fisttps
mov
je
aad
push
stos
mov
lea
mov
cwtl
repnz
jle
daa
cltd
es
es
imul
daa
fnstsw
ret
xor
fwait
sub
into
dec
inc
jne
and
mov
lahf
repz
inc
jp
ds
mov
cmp
mov
das
imul
mov
and
jecxz
mov
adc
sub
inc
adc
rorb
cmpsb
pop
jl
jl
stos
sub
adc
popl
aaa
push
repnz
int3
loop
cmpsb
test
push
and
xchg
fldenv
or
cmpb
fcomip
fsubrp
and
rorl
mov
jb
xor
pop
jl
cs
iret
xchg
and
push
mov
cs
pop
into
sub
lret
lcall
mov
clc
imul
adcb
xchg
jne
cmp
inc
push
xlat
sub
clc
sbbl
das
xchg
pop
sbb
inc
addr16
lahf
cmpsb
adcb
bnd
pusha
inc
add
mov
pop
mov
xchg
push
xor
das
lcall
cvtps2pd
sbb
cmpsb
dec
pop
fcmovu
pop
fisttpl
and
cmp
push
stc
pop
pushf
or
push
test
aaa
in
push
and
pop
mov
push
cld
or
testl
sbb
adc
cmp
and
ror
hlt
cs
stc
into
daa
insb
repz
sar
dec
test
push
stc
jge
in
adc
mov
movd
ds
sub
rcr
cmp
add
loopne
pop
pusha
inc
xchg
mov
mov
fimull
sub
out
mov
lea
mov
fmul
push
push
jg
das
mov
std
inc
insl
int
loope
or
and
lret
fmulp
xchg
jg
fnstcw
stc
sub
inc
sub
lock
lcall
test
leave
popa
cmp
fidivrs
fsubs
adc
and
into
pop
test
in
pushf
repnz
shll
push
into
inc
jle
adc
mov
repz
test
addr16
arpl
xor
dec
push
xchg
mov
fcoml
sahf
and
sbb
mov
and
es
or
ficoms
and
mov
out
repnz
pushf
jnp
repnz
outsl
dec
mov
aad
out
add
mov
enter
cmpl
mov
testb
sbb
test
aas
pop
test
outsl
add
mov
dec
rcrl
ret
ffreep
xchg
mov
push
or
jne
xchg
pop
mov
in
idivl
lret
inc
push
test
test
cmp
pop
icebp
in
lods
pop
dec
mov
test
xchg
cmp
cltd
shrl
pop
pushf
test
dec
std
cltd
mov
mov
xchg
inc
add
xchg
sbb
sub
ljmp
cltd
stos
add
popa
test
popa
lds
inc
inc
enter
jbe
imul
push
imul
mov
dec
insb
dec
aas
adc
loope
jb
aas
std
push
in
cmpsl
int3
fstpl
dec
cmc
xchg
jg
and
push
test
imul
mov
pop
pavgb
mov
mov
ja
push
push
adc
jl
xchg
out
scas
mov
cmp
in
jo
shrb
lods
aas
sub
adc
ljmp
out
out
std
int3
lods
xor
add
out
loopne
imul
call
cmp
push
call
lcall
rol
xor
mov
pop
sbb
xchg
adc
mov
mov
rclb
xchg
insl
sbb
and
push
cmpsl
mov
scas
imul
nop
push
mov
xor
pop
fimull
mov
les
orb
decb
les
sbb
jge
jl
and
and
push
addl
pop
push
loopne
dec
add
or
leave
jo
and
shl
fiadds
or
shll
inc
hlt
lret
and
aas
je
and
dec
lods
test
sub
pop
xor
lock
sbb
ficoml
cmp
mov
sub
fcoml
sti
inc
popa
ret
hlt
inc
popf
je
cmp
testl
xor
xchg
orb
jb
ja
mov
cmpb
inc
xor
jns
aam
pop
or
mov
mov
mov
push
dec
test
mov
mov
je
lods
push
popf
fcompl
and
das
sbb
incl
cmp
sbb
sbb
leave
push
movl
insl
ret
loopne
cwtl
enter
jb
fiadds
enter
cwtl
and
pop
or
push
mov
sub
xchg
lods
jmp
sub
mov
jle
loop
jmp
push
adc
jp
xchg
dec
dec
sahf
mov
fst
mov
or
push
xchg
or
xchg
outsl
iret
push
adc
add
loopne
call
divb
aad
jecxz
nop
pop
and
push
lahf
rcl
mov
sbb
loop
aaa
daa
mov
dec
fldenv
mov
push
push
cmp
push
lcall
jo
cmpsb
pop
and
imul
outsl
fs
fimull
outsb
scas
and
push
ret
cwtl
xchg
xchg
sete
jne
jnp
mov
int
add
pop
sbb
inc
lods
scas
movsb
insb
cmpsl
cli
add
push
js
dec
jo
movsl
inc
ret
dec
push
and
dec
fsubrl
mov
hlt
rolb
stc
push
jb,pn
mov
sahf
xchg
mov
enter
inc
cmc
or
push
out
and
jl
push
sbb
mov
inc
scas
jb
jnp
pop
fildll
fdivr
sub
jg
ljmp
add
or
dec
push
jmp
test
mov
xchg
push
push
and
repz
movsb
inc
and
rcll
cmp
jno
jg
lods
movsl
fistpl
add
mov
cld
pushf
lds
mov
mov
pop
mov
jp
out
add
xchg
fisttpll
in
jo
jge
mov
mov
mov
adc
or
add
jp
pop
inc
cmpsl
dec
sub
cwtl
aad
xchg
pmaxsw
aad
test
mov
fmul
addr16
add
movsl
push
mov
push
mov
mov
sub
loop
rorb
hlt
lods
ret
mov
lcall
rcrl
int
cld
out
repnz
push
cli
subl
sahf
push
addr16
loope
cli
mov
test
ss
ja
fisttpll
adc
enter
xchg
std
jo
or
iret
add
pushf
and
push
leave
add
push
xor
rcrb
das
lods
sub
scas
test
rol
xor
dec
sbbb
stc
add
les
push
in
sub
mov
and
xchg
add
mov
xor
xchg
mov
xor
fstps
adc
jno
adc
xor
add
pop
sti
dec
fsubrs
cld
xor
inc
jbe
inc
and
iret
leave
int
stc
stos
lret
iret
push
add
inc
or
xchg
test
adc
je
leave
mov
cmp
in
test
adc
out
xchg
es
pcmpgtb
jne
lods
orl
and
fildl
lods
cld
rcr
sbb
aas
xchg
imul
cmp
pop
xor
push
sbb
rclb
lds
cmp
ja
out
jae
in
fs
and
mov
popf
cmpsb
dec
or
jl
pop
dec
adc
and
pop
adc
sbbb
push
stc
mov
ljmp
or
bound
inc
and
jno
pop
fstpl
xor
data16
mov
mov
orb
and
fsubrp
sbb
stc
push
loope
and
and
xchg
mov
push
xchg
mov
insb
mov
lahf
dec
mull
out
pop
push
adcl
inc
and
iret
push
pop
test
sbb
mov
cmp
jae
and
xor
push
roll
xchg
bnd
sub
xchg
push
mov
or
das
je
and
faddl
mov
pop
data16
insb
lods
push
and
ja
popa
push
jb
jge
testl
xchg
mulb
loop
and
dec
cmp
shll
pop
movsb
in
sbb
add
cwtl
loop
push
xor
add
push
adc
outsl
cs
add
mov
pushf
push
xor
insl
mov
push
mov
fisttpl
cmp
and
divb
pop
mov
mov
aam
sbb
test
add
aad
movsl
cwtl
and
dec
pop
es
cmp
outsb
mov
jg
dec
xor
rcrl
lcall
cmpsb
jl
xor
mov
bound
bound
fcmovnb
jno
insl
pushf
sbb
xchg
sbb
mov
loope
aaa
sahf
xchg
xor
gs
dec
mov
js
outsb
lret
adc
xchg
mov
scas
dec
sub
push
pusha
xchg
int3
cli
cmc
mov
add
dec
lcall
aaa
mov
lods
mov
dec
pop
movsl
push
in
adc
xchg
mov
shrl
mov
push
shrl
fisttps
inc
push
mov
mov
lahf
mov
insb
lods
imul
mov
js
arpl
ja
lds
xor
sbb
dec
mov
cwtl
jmp
mov
jo
dec
lock
mov
or
mov
xlat
pushf
adc
or
sti
mov
nop
movsl
sbb
hlt
adc
data16
dec
std
inc
pop
das
cwtl
and
xor
in
jne
mov
push
dec
adc
or
inc
xchg
lods
sbb
xlat
inc
shrl
fistl
add
xor
xchg
push
rcrl
in
dec
inc
mov
xorl
leave
pop
jmp
scas
cmc
jns
xchg
flds
mov
dec
mov
sub
bound
adc
and
testl
jb
pop
sahf
jg
ja
mov
adc
pop
fwait
push
out
clc
das
xor
mov
imul
aaa
adc
js
es
lods
or
insl
ljmp
stos
icebp
cmpsb
iret
mov
cld
or
dec
add
hlt
mov
out
stos
in
mulb
cmpsl
loope
cmp
mov
fldcw
lea
xchg
or
push
stos
in
mov
mov
add
maskmovq
testl
add
inc
jnp
dec
mov
dec
nop
int
push
sbb
sahf
popf
xchg
pushf
and
ds
movsb
stos
je
cmp
loope
mov
mov
xor
dec
cld
add
mov
lahf
xor
fsub
xchg
insb
inc
and
jnp
mov
xchg
sbb
mov
insb
jno
std
aad
mov
pop
ficoml
xor
cltd
xlat
mov
jge
pop
lret
imul
push
add
mov
addl
inc
pop
push
jb
test
ret
lahf
out
jb
outsb
pop
pushf
dec
jo
scas
inc
cli
jae
pop
sbb
scas
cli
xor
fsubp
mov
lds
mov
mov
arpl
mov
fdivr
cmp
mov
adc
test
cwtl
sbb
dec
or
pop
and
sbb
cmp
xchg
popa
cmc
xchg
mov
fs
jl
xor
daa
aad
test
jae
dec
push
dec
mov
mov
fisubs
mov
dec
gs
jns
mov
push
test
shrl
cmpsl
fidivs
aad
inc
outsb
scas
mov
cmc
sti
mov
push
sbb
xor
icebp
mov
lock
ret
les
sbb
inc
int3
int
cmc
loop
test
es
leave
push
sbb
cli
push
loop
cmp
xlat
push
imul
iret
inc
mov
sub
roll
dec
test
out
test
jecxz
mov
int
ss
jecxz
std
jno
adc
push
pop
xchg
movsl
and
pop
popa
cli
adc
mov
cmc
push
jmp
mov
js
jl
jmp
lret
std
icebp
sub
cmp
loope
enter
movsb
sti
sbb
pop
mov
cmp
mov
sub
pop
in
cli
aad
mov
push
mov
jp
test
sub
add
inc
push
mov
mov
add
arpl
mov
push
jge
mov
addb
sbb
jo
push
push
insl
loop
push
addr16
call
xor
jnp
push
cmpsb
cld
not
dec
into
add
xchg
dec
sub
mov
incl
cmc
lret
mov
mov
addl
xor
adc
push
scas
push
mov
pop
mov
jecxz
cmc
outsb
push
push
mov
jns
sbb
jge
shl
lods
inc
add
test
stc
push
std
icebp
in
sbb
push
push
xor
gs
inc
cmpsl
pusha
pusha
pop
daa
dec
sti
mov
add
into
mov
xchg
sub
mov
push
dec
fsub
test
test
or
mov
jmp
push
push
jg
push
mov
clc
pushf
push
sub
mov
push
inc
ja
fs
mov
push
add
or
mov
sub
es
jle
jb
test
push
add
mov
sbb
inc
pop
xchg
lds
pusha
into
stos
cmpsl
sbb
scas
js
scas
push
addb
xchg
inc
daa
iret
xchg
or
lret
gs
and
adc
lock
enter
inc
xor
aas
adc
xor
or
xor
pop
xlat
xchg
pop
push
stos
inc
push
stos
jle
loop
sbb
mov
jne
into
cltd
clc
cld
iret
jbe
and
in
fadds
adc
orb
adcl
sub
in
mov
test
pop
popa
shll
xchg
adc
sub
push
pop
repnz
sbb
and
arpl
cmp
test
push
dec
in
mov
orl
fsts
jae
orb
adc
popf
ds
inc
add
xchg
cmp
xchg
rclb
and
dec
fsubrp
push
pop
cmp
dec
xchg
push
stc
mov
daa
call
rcll
cld
stos
and
rcl
mov
scas
ljmp
sbb
mov
adc
xor
sti
ret
jmp
inc
mov
cmc
stos
cmp
xchg
lds
push
mov
pop
add
stos
cltd
jne
outsb
xchg
aaa
mov
dec
les
and
mov
sub
and
cltd
pop
bnd
and
call
ret
notl
jns
or
xor
cmp
loope
sub
mov
cltd
xor
dec
lret
mov
stc
xchg
jb
pop
xchg
dec
sti
mov
mov
pop
sub
ja
sub
cmp
cs
mov
mov
loopne
xchg
fs
sub
push
jecxz
sarb
jle
adc
stos
fcomps
mov
mov
bsf
pop
mov
xchg
xchg
loopne
and
shlb
pop
pop
fimull
inc
adc
sub
and
lods
ljmp
cmp
loope
aaa
jo
sub
pop
fcoml
fnstcw
adc
mov
mov
xchg
sub
call
aad
stos
xchg
jge
pop
testl
cmp
insb
es
push
arpl
inc
push
push
lahf
fdivp
inc
add
in
jo
push
repnz
cwtl
push
and
push
mov
pop
sub
fs
call
or
and
cs
ja
and
xlat
out
xchg
cmp
orb
mov
ror
sub
jmp
lret
aam
jp
scas
jmp
addr16
mov
add
ljmp
aad
xor
gs
in
inc
lcall
sbbl
inc
mov
cmc
outsl
mov
and
xchg
adc
mov
std
aad
sub
sbb
es
je
loopne
sbb
loopne
ds
orl
in
mov
cmp
fbld
negl
add
jno
mov
dec
dec
add
push
inc
clc
xchg
sbb
dec
inc
mov
xchg
jmp
loopne
sub
clc
add
test
or
aam
enter
jge
arpl
ja
jp
aad
jmp
lea
lcall
mov
out
push
push
cli
push
fsubl
mov
xchg
or
mov
stos
mov
adc
cs
adc
icebp
cs
das
repz
test
xchg
mov
fnstcw
sbb
sahf
leave
cmpsb
or
test
es
orl
mov
sub
pop
sbb
cmp
aaa
dec
ja
rclb
addl
and
repnz
mov
insb
mov
pop
pop
test
cmp
in
adc
sbb
mov
jns
mov
imul
ds
je
imul
les
popf
xchg
clc
push
xor
cmp
xchg
lret
pop
xor
fidivrs
xor
mov
js
mov
mov
adc
repz
add
sti
sarl
fildl
mov
mov
loopne
aam
push
fistpll
hlt
add
or
or
test
and
test
pop
xor
or
pop
add
negb
push
lock
mov
loope
sub
cld
xor
push
aas
push
leave
dec
sub
stos
test
in
cmpsb
shll
dec
out
jmp
mov
and
or
adc
inc
xchg
icebp
push
iret
mov
mov
addl
js
inc
cmpsb
cmp
dec
insb
push
ret
fisttpll
or
insb
in
lcall
jp
and
mov
lods
xchg
rcrb
out
pop
sbb
jge
xchg
add
jle
or
sub
mov
mov
and
out
loopne
fwait
jg
iret
test
push
and
data16
mov
sub
xor
xchg
mov
out
sbb
ljmp
in
cmpsb
fidivrs
int
jle
adc
pop
or
rcrl
loope
stc
pop
iret
iret
fadd
xor
mov
mov
nop
arpl
mov
dec
sbb
mov
stos
sub
lods
jg
jbe
pop
lds
inc
or
jge
inc
xor
outsb
or
adc
adcb
andl
cmp
imul
add
lcall
loopne
dec
cmp
aaa
inc
xchg
sbb
dec
test
sub
sub
dec
scas
lds
pop
inc
sbb
cmp
push
loope
lret
ljmp
sbb
sub
mov
adc
add
cs
sarb
adc
mov
or
mov
movsl
jl
insb
xor
outsb
rclb
push
cmp
pop
push
xchg
std
mov
mov
inc
dec
mov
inc
sub
lock
push
aas
out
stos
cld
aas
jg
cmpsb
fistl
test
imul
mov
movsb
out
pop
adc
jnp
add
hlt
loopne
clc
pop
adc
ss
lds
iret
push
pusha
fistpl
sar
sub
xor
add
icebp
mov
sbb
ret
cmpb
cmpl
cs
pop
dec
or
mov
and
iret
add
mov
dec
out
mov
jmp
mov
repnz
test
rcll
insb
sbb
jne
add
mov
jl
or
cld
test
std
xlat
cmp
dec
push
movsb
bound
xchg
dec
xor
jmp
push
and
adc
push
inc
inc
loope
mov
out
aas
sbb
inc
into
dec
test
je
push
jp
mov
xor
out
aad
add
push
ja
sbb
jp
popf
add
fnstsw
xchg
add
ficoml
bnd
jnp
inc
repnz
dec
test
in
mov
cmp
sub
jle
cwtl
push
jnp
ja
fadds
push
xor
sbb
daa
test
cmp
mov
shrl
hlt
ret
fsubr
fs
out
xorl
xor
cmpl
rorb
fwait
dec
sbb
hlt
js
fistpl
and
add
inc
cld
mov
push
cwtl
inc
in
sbb
pop
cmp
retw
dec
push
jb
and
inc
aaa
sub
cmpsb
xor
xor
loopne
iret
inc
add
sbb
mov
xor
sub
mov
or
xchg
fs
jmp
mov
loop
insl
movsb
mov
enter
movsb
scas
and
inc
jns
ja
ret
aad
rcl
mov
repz
scas
outsl
or
cmp
into
lea
xorb
inc
shrl
in
fnstsw
jle
inc
fsubrs
mov
test
sbb
mov
andl
jne
xlat
in
loope
xlat
cmp
movsl
mov
jmp
mov
mov
cmpsl
mov
jmp
nop
add
mov
andl
sbb
stos
inc
sbb
xor
or
push
jl
and
popf
fimull
movsl
mov
dec
fstpl
jb
shll
setl
jp
or
mov
and
bnd
aam
icebp
inc
lock
std
and
xor
aas
push
xor
inc
sub
lock
jne
xor
xchg
push
add
clc
dec
xchg
out
shr
test
push
push
inc
inc
jmp
mov
sbb
mov
mov
and
lret
mov
sbb
lret
pop
mov
xchg
sahf
pushl
fmull
or
cmp
push
dec
sub
add
cmp
and
mov
add
mov
lret
inc
xchg
cmc
out
jmp
stos
sbbb
lea
test
js
lock
push
xor
mov
fdivr
sti
pop
sbbl
jno
mov
cmpsl
cwtl
mov
rclb
insl
adc
in
cld
fstpl
mov
adc
daa
jp
movsl
adc
pushf
ja
mov
mov
movsl
mov
in
sub
sbb
js
inc
push
movsl
fbstp
rclb
push
and
mov
xor
inc
int
shlb
cmp
xor
in
js
push
js
into
int3
jb
mov
stos
insb
jo
leave
adc
jno
pop
mov
out
fs
stos
inc
inc
add
fincstp
loopne
inc
cltd
xor
cmpsb
fcmovu
rcrb
mov
adc
adc
cmp
sub
cmp
cmp
or
in
rorb
push
fdivl
dec
inc
xor
sti
fisubl
mov
and
idivl
rorb
inc
lahf
or
insb
stos
mov
test
inc
rorl
add
stc
mov
sub
mov
jle
push
in
cmpl
sbb
enter
lret
imul
nop
ds
cmp
and
cld
xchg
dec
pop
push
mov
xor
mov
cmpsl
jnp
pop
int3
leave
scas
mov
fidivrl
push
jp
or
mov
in
and
inc
jae
loop
fwait
xchg
lock
cmp
es
popa
lret
addr16
cs
push
in
in
sarl
jmp
rclb
xlat
hlt
jle
popf
pop
loopne
or
lcall
mov
filds
mov
jbe
lret
icebp
add
movb
bound
push
clc
push
cmp
sbb
pop
cmp
jno
cmp
mov
push
lret
sbb
push
insl
and
xor
sub
xchg
out
mulb
xlat
rol
jnp
xor
mov
test
pop
and
int3
lret
clc
mov
and
lret
or
push
cltd
daa
stos
xchg
jmp
popa
jl
mov
aad
sbb
hlt
xor
je
pusha
sti
in
mov
in
dec
pop
inc
push
gs
xor
fwait
pusha
jg
cmpsl
xchg
icebp
popa
xor
je
dec
rcrl
dec
push
aad
loop
or
or
lds
push
and
mov
jge
mov
inc
jbe
ds
mov
pop
dec
push
rcrb
jno
cmp
inc
mov
out
shll
rorb
xor
lea
push
pop
sub
cld
push
add
mov
fsts
mov
adc
or
outsl
jno
les
push
aaa
enter
xor
adc
push
cmc
pop
test
pop
sbb
push
or
mov
stos
pop
jae
mov
repz
lds
sar
or
mov
fidivrs
cmpb
and
dec
mov
ljmp
pop
mov
mov
shr
test
push
mov
int3
mov
scas
ret
mov
cmpl
sub
mov
inc
pop
cmpsl
jmp
push
jmp
insb
or
fisubl
repz
push
divb
fwait
or
pushf
lret
mov
lret
sbb
cmp
xlat
jmp
pushf
call
mov
mov
adc
inc
adc
or
jb
lcall
cmp
jmp
pop
mov
xlat
repz
push
add
outsl
dec
mov
add
les
or
outsb
xorl
js
dec
scas
xchg
stos
inc
push
mov
mov
adc
mov
fsubrl
inc
repnz
scas
lahf
outsb
out
and
lds
ja
jg
ret
inc
add
push
ret
dec
nop
cmp
sbb
mov
push
cmp
jno
mov
adcb
sahf
sbb
ljmp
sbb
push
lods
fcompl
xchg
push
sbbb
mov
sub
insb
push
cwtl
out
loopne
mov
out
xchg
and
mov
adc
mov
or
jae
push
lcall
popf
repnz
insb
cmp
mov
or
rorl
ss
loop
xchg
inc
lods
incb
outsl
pop
jmp
inc
push
leave
test
test
lret
scas
movsb
mov
nop
mov
push
notl
sub
psrlw
mov
cmp
sbb
mov
repz
bswap
push
insl
jecxz
push
in
cs
loop
and
jecxz
mov
adc
lds
mov
mov
sahf
dec
js
cmp
fildll
dec
aam
pusha
add
mov
insb
push
das
into
sbb
jno
jecxz
sti
push
pop
lods
and
jnp
cmp
mov
push
mov
orb
inc
cltd
ret
xchg
xchg
dec
enter
arpl
xor
enter
or
inc
mov
sbb
inc
stos
scas
lods
sbb
addr16
bound
mov
aam
push
imul
outsl
rcrb
inc
adc
sub
mov
or
sub
push
mov
xor
push
pop
fidivs
sbb
dec
repz
cmp
pusha
pop
cmp
mov
mov
mov
lods
xor
rcrb
pop
cmp
jae
xchg
cmp
add
sub
mov
adc
jns
inc
mov
dec
sbb
and
jae
cmp
inc
jo
aas
sbb
inc
push
lahf
xlat
mov
push
push
cmp
add
sbb
inc
sub
movsb
imul
mov
cmc
dec
out
repnz
scas
sub
loop
mov
dec
in
shrl
xor
cli
jb
ss
inc
push
dec
call
mov
mov
push
dec
xchg
and
push
xchg
icebp
lock
ret
sub
out
lea
sub
int3
mov
or
popf
dec
cwtl
xor
aaa
adc
or
xor
mov
and
xchg
cmpsl
fld1
jne
lret
pop
mov
inc
cltd
jno
push
daa
fildl
inc
cli
outsl
test
rcrb
sub
icebp
fisttps
gs
mov
push
fsubl
sbb
sbb
sysenter
into
loope
mov
ss
inc
mov
dec
sbb
push
dec
lods
loop
sub
adc
sahf
notb
pop
in
sti
mov
push
xchg
cld
jae
lcall
inc
adc
xchg
mov
insl
lret
pop
loope
ds
sbb
aaa
add
stc
js
mov
and
pushl
addr16
data16
add
and
aad
cmpsl
out
xor
xor
dec
cld
jbe
loop
ror
adc
orb
inc
sub
cmp
imulb
out
scas
jo
test
push
call
sbb
fstpl
pop
shl
add
mov
aam
lea
stc
aas
mov
mov
hlt
xor
sub
mov
dec
fcomps
adc
cmp
push
and
and
mov
mov
mov
repnz
add
out
mov
aam
outsl
push
leave
pop
icebp
mov
jmp
int3
xor
shlb
stos
jnp
and
outsb
cmpsl
scas
mov
fmull
loopne
sub
pushf
push
std
jge
inc
test
and
mov
adc
cli
xchg
js
lahf
jle
movsb
cwtl
push
push
xchg
add
into
dec
out
scas
mov
int
mov
adc
pop
push
xlat
jecxz
inc
inc
sub
fsubs
jecxz
push
inc
jbe
push
or
pop
xchg
fucomp
push
out
push
cmp
xorb
pushl
pop
add
adc
aas
movsb
aas
jb
iret
xor
mov
shr
jg
pop
pop
cmpsb
cmp
icebp
xchg
std
cld
cmp
js
lahf
jmp
push
and
push
lcall
loopne
add
xchg
orl
stos
fsubrp
cli
or
fld
pop
pop
pushf
push
dec
test
mov
sbb
arpl
push
cmp
movsb
bswap
pop
cmpsl
in
push
pop
sub
dec
dec
fidivs
test
test
push
jo
imul
int
movsb
and
je
jo
sbb
sti
push
pop
ja
jecxz
cli
popf
das
push
push
inc
jge
jle
or
mov
arpl
rcl
add
mov
mov
fistpll
rcrl
ja
xor
dec
js
sub
std
int3
xchg
cmp
push
test
mov
bound
lods
arpl
inc
add
xlat
sbb
jnp
test
dec
pushf
inc
push
clc
pop
cmc
push
inc
xchg
jl
mov
sbb
out
imulb
sbb
arpl
mov
add
xor
aam
jno
lods
dec
pop
gs
lret
mov
iret
sub
xchg
call
dec
pop
movsl
shll
xlat
rorb
outsb
pop
ret
int
add
repnz
bound
add
pushf
stc
pop
repnz
pop
cmp
adc
cltd
dec
enter
mov
sbb
fwait
lods
mov
mov
push
addb
jo
push
mov
mov
push
test
sbb
or
loope
cmp
jnp
imul
push
lock
aaa
das
mov
fucomp
mov
xchg
cmpsl
fistl
mov
mov
dec
sarl
cmp
fistps
and
sbb
icebp
cmp
cmpsb
push
push
jno
pop
test
add
fs
lret
fwait
clc
outsl
push
xchg
cmp
scas
cltd
xchg
mov
outsl
lea
inc
in
jo
call
xchg
add
jne
pop
mov
mov
cmp
rorl
mov
xor
outsl
in
push
aam
cmpl
ret
pusha
xchg
cwtl
sti
out
pop
in
push
insl
adcb
inc
xchg
and
mov
or
pop
arpl
adc
scas
pop
les
add
in
nop
sbb
push
fidivrl
or
push
push
mov
inc
gs
xchg
mov
sbb
sbb
movsb
shll
mov
mov
fiaddl
insl
dec
add
sub
or
sahf
dec
pop
lock
je
out
push
mov
adcb
mov
xor
mov
mov
stos
stos
jns
or
lock
and
imul
add
lds
cmp
jmp
jl
push
mov
cwtl
cmpsl
popa
mov
sahf
mov
cmp
cmp
sub
popa
jge
rolb
xchg
les
hlt
in
xchg
adc
jno
call
repnz
and
dec
or
lret
outsl
jle
addb
sub
adc
mov
jns
pop
mov
das
adc
dec
xchg
int3
mov
jb
mov
mov
xchg
sub
pop
outsl
sub
fcmove
push
les
mov
sbb
mov
ror
loop
mov
les
xlat
push
fimull
aad
jnp
ret
or
jmp
add
lcall
repnz
or
imul
adc
mov
sbb
mull
nop
bound
mov
dec
fdivrp
mov
inc
enter
pop
mov
sub
and
insl
dec
cmc
cli
cmp
repnz
pop
xchg
in
cld
add
mov
and
sub
sti
ror
orl
mov
mov
mov
fcoml
adc
out
add
xchg
jle
xchg
fisttpl
sahf
jb
pop
inc
adc
scas
jo
mov
iret
cs
sahf
data16
push
mov
sub
fidivrs
rolb
dec
loopne
test
pop
xchg
and
gs
popl
addr16
call
test
or
movsb
xchg
pusha
mov
dec
cmpsb
and
fisubrs
jle
inc
xchg
mov
push
gs
loop
insl
and
nop
imul
out
mov
mov
push
into
xchg
sbb
jbe
cmp
popf
push
das
push
sbb
mov
xor
scas
mov
dec
aaa
jae
mov
and
pop
sti
lds
or
pop
es
adc
ja
xchg
in
movsl
mov
pop
cmp
popa
xor
sub
inc
cmp
mov
sub
add
pop
mov
xor
cmp
push
insl
insb
loop
add
into
sub
out
jg
dec
xor
nop
int
jno
lock
jnp
cmp
call
mov
stos
push
pop
das
adc
cwtl
vandps
mov
cmp
repnz
and
sub
sub
out
jne
outsb
incb
mov
outsl
dec
aam
out
inc
sbb
sbb
cmc
mov
and
fidivl
adc
xchg
ds
mov
cwtl
in
and
jbe
jns
pop
mov
std
push
inc
or
mov
xchg
adc
ret
mov
scas
sbb
in
leave
fsubs
or
jb
in
push
push
out
call
std
gs
lcall
inc
inc
sbb
aas
pop
cld
outsb
aad
out
jns
insb
pusha
push
aam
mov
fsubrp
push
es
adc
jae
ret
sub
jne
add
pop
mov
or
scas
mov
leave
nop
fcom
ja
add
out
mov
mov
mov
pop
dec
dec
mov
add
cmp
push
mov
out
addr16
outsl
rcrl
pop
test
inc
test
cmp
in
ja
adc
dec
mov
out
test
fs
outsb
sub
or
sbb
mov
mov
popa
and
insl
test
loope
sub
ljmp
xor
int3
dec
lahf
push
xchg
fmull
sub
cmp
mov
add
test
cmp
pusha
xor
and
mov
fimuls
in
stos
adc
push
rcll
aad
push
nop
data16
fisttpll
dec
sub
iret
push
pop
jg
mov
pop
stc
iret
lea
mov
sub
jno
out
imul
repz
enter
adc
inc
push
pushf
adcb
sti
push
ficomps
sub
push
js
imul
or
cmp
hlt
pop
insb
or
repz
pop
push
sbb
cmp
cmc
test
cli
sub
xchg
dec
jp
push
fs
jg
scas
xchg
fistpl
je
sub
pop
push
mov
jns
pop
inc
out
jg
dec
enter
cmp
sbb
push
rorb
pop
outsb
push
jl
fists
mov
sbb
mov
jnp
int3
fwait
jle
call
xor
xor
dec
movsb
rcll
jmp
jbe
dec
loopne
clc
stos
pop
pushl
and
or
push
call
pop
ljmp
out
ret
mov
mov
cmp
repz
xor
push
adc
cli
clc
mov
push
enter
mov
subb
jg
add
sub
jge
cmp
pop
xor
jge
stc
out
mov
mov
je
hlt
pop
dec
test
enter
enter
loopne
xor
sub
xor
mov
fnsave
in
scas
jge
jnp
adc
shlb
fwait
pop
je
add
cmpsl
dec
data16
fistl
les
jl
popf
pop
outsl
mov
mov
dec
jno
jle
xor
leave
cmp
jno
inc
pop
mov
jo
pop
pop
cli
test
xchg
jp
test
push
cmpsl
add
inc
pop
jnp
cmp
mov
fs
mov
cmp
cld
sub
jbe
push
pushl
mov
or
push
daa
test
add
in
pop
dec
xchg
adc
pop
ss
ret
push
jle
fisubl
fistps
sbb
ret
mov
xor
xor
adc
pop
lcall
cmc
mov
and
lods
mov
popa
or
fsubr
push
xorb
pop
out
lds
sub
imul
imul
push
fs
pushf
pop
test
fdivs
add
lock
movb
or
push
cmp
stos
adc
jno
imul
in
lods
mov
pop
pop
add
push
out
jo
mov
das
sub
jae
sbbb
cmc
jge
jns
hlt
push
fcompl
and
inc
sub
sub
rorl
pushf
in
sar
mov
ljmp
lcall
xchg
add
rep
ret
rolb
fld
mov
insb
xchg
mov
shrl
rorl
clc
adc
sub
fstpl
cmpsl
mov
sbb
bound
mov
mov
sbb
orb
sbb
sub
and
xor
push
lret
push
js
pop
cmova
push
loope
xchg
mov
ljmp
adc
shlb
xor
fstp
lret
sub
push
into
pop
hlt
mov
sub
inc
je
cs
mov
jae,pt
ja
in
addb
loopne
pop
incb
xchg
xchg
pushl
repnz
lods
scas
ds
int
push
lret
cli
insl
mov
push
inc
in
sti
flds
push
add
and
fwait
inc
iret
outsb
dec
mov
jl
push
sarb
lret
and
out
ljmp
inc
leave
mov
outsl
leave
and
sub
shrb
out
or
jne
stc
lods
jle
mov
mov
pop
sbb
scas
test
fsubs
jl
sbb
pop
cwtl
mov
fmul
subb
dec
dec
cmp
sbb
sub
test
cmp
das
lret
cs
fists
xchg
xor
faddp
fdivs
sub
sub
out
inc
jns
cmp
in
arpl
mov
adc
push
sub
pushf
jo
dec
nop
mov
out
mov
inc
lcall
dec
leave
or
xchg
push
scas
cltd
ret
rclb
pop
and
adc
loope
jb
sub
mov
test
loope
or
roll
fstps
fdivr
negb
loope
sub
scas
les
or
sub
out
and
xchg
xor
ret
adc
pop
in
jg
stc
pusha
sbb
inc
fildll
cltd
sbb
out
pop
and
mov
mov
pop
and
mov
add
stos
fs
imul
mov
ss
hlt
push
shrb
and
jp
jno,pn
repz
ret
addr16
leave
fstpt
test
sahf
fbstp
out
or
enter
ljmp
adc
xor
in
mov
icebp
clc
sub
das
sub
push
cld
cld
adc
or
leave
push
cmp
cmp
negb
leave
cmc
iret
stos
test
mov
popa
push
mov
dec
aas
addr16
inc
out
out
rorb
cs
push
fxch
bound
repnz
cmp
call
test
push
cmpb
xchg
adc
cmpsb
sbb
pop
xor
and
sbb
in
arpl
sub
mov
mov
in
je
movsb
add
pop
fldenv
enter
aad
mov
in
std
lcall
fsubs
fildll
jmp
sbb
lds
sub
and
push
sbb
fistps
scas
test
fcoml
repnz
push
ss
mov
ds
or
or
sbb
fwait
sti
sub
xorb
imul
inc
or
cwtl
and
in
xchg
pop
mov
loopne
pop
test
rorl
in
lds
pop
jecxz
test
mov
lret
lahf
inc
pop
aaa
loopne
movsb
xlat
mov
mov
bound
push
out
das
cmp
inc
adc
lret
sahf
fdivrs
rorl
push
push
mov
dec
insl
in
imul
out
and
lods
or
pop
fwait
pop
jmp
pop
dec
aas
fs
cli
int3
adc
pop
scas
stos
cmpsl
pop
icebp
add
pop
movsb
shll
pop
sub
lods
sbb
jns
loopne
testl
mov
test
xor
mov
ljmp
xor
lea
aaa
jg
popf
mov
jg
ficoms
mov
jns
iret
ss
inc
ss
dec
stc
xchg
push
mulb
inc
inc
cmc
cmp
xor
int
xchg
cmpsb
jbe
pop
mov
dec
icebp
pop
out
mov
sub
inc
push
cltd
sub
jb
repz
cs
nop
outsb
mov
add
and
pop
into
outsl
and
xchg
pop
and
cmp
xorb
pop
mov
dec
lods
test
cmc
les
dec
loop
test
mov
xor
out
je
ret
mov
movsl
lea
cld
push
movsb
push
inc
shlb
adc
cmp
jo
jmp
loop
cmp
and
ljmp
sub
iret
pop
inc
js
mov
test
dec
repnz
add
fcoml
dec
addr16
ds
sub
or
daa
loopne
sbb
jge
nop
das
mov
xchg
mov
adcb
mov
jns
sub
lods
xor
imul
pop
in
in
les
int
into
push
jle
jo
mov
add
dec
mov
add
sub
jg
and
cmp
mov
fdivr
sbb
cmovno
mov
mov
mov
and
sub
lock
jo
int3
mov
jae
push
clc
sbb
pushf
and
fimull
push
pop
es
and
and
sbb
mov
mov
and
stos
sahf
and
or
mov
xchg
in
imull
es
iret
jg
imul
adc
pop
mov
ljmp
mov
sub
push
adc
pop
push
jmp
mulb
pusha
add
addl
jns
mov
js
pop
imul
inc
mov
imull
mov
or
sbb
push
inc
ja
lret
lret
and
and
sti
fs
mov
mov
push
jle
push
xchg
sub
or
pushf
scas
push
out
mov
or
rcrb
nop
inc
aaa
cmpsb
pop
add
jg
pusha
clc
sub
xor
add
mov
vsubss
mov
xchg
mov
in
clc
mov
inc
cmp
cmpsb
iret
xor
lea
sbb
into
push
pop
add
movsl
inc
pop
mov
pop
stc
add
pusha
sbb
lods
stos
arpl
test
jecxz
adc
test
repnz
clc
and
jb
into
dec
int3
cmp
lret
cltd
cltd
mov
out
jbe
enter
push
aaa
int
daa
push
call
xor
aas
adc
stos
adc
mov
pcmpgtb
inc
sbb
repz
mov
pop
push
stc
xchg
xor
shrl
rcrl
pop
pop
jle
adc
mov
std
add
rclb
xchg
add
add
aas
xor
dec
dec
jns
clc
jbe
push
xor
into
lods
xor
insl
popa
test
add
push
or
adc
fisttpl
pop
gs
jno
loope
jns
jmp
filds
sub
sub
mov
xchg
jle
lea
lcall
mov
testb
ljmp
sub
mov
pop
jmp
xchg
sbb
xchg
lcall
inc
fiadds
sub
movsb
testl
js
aas
push
cmpsl
cmp
sub
aam
ds
sti
out
mov
push
cmp
daa
xchg
adcb
and
mov
cld
push
addr16
ljmp
push
sub
mov
enter
adc
pop
xor
out
pusha
sub
pushf
inc
or
push
in
mov
push
cs
push
in
cmp
clc
push
adc
cmpsl
mov
jg
out
in
or
mov
idivb
push
sbb
adc
xor
hlt
dec
jo,pn
ss
call
adc
push
add
inc
loope
mov
pop
jne
and
add
roll
insb
call
xchg
mov
adc
and
or
cmp
sub
dec
jo
imul
jle
in
sub
jnp
shl
push
add
adc
and
sbbl
push
jno
aad
cwtl
and
rcrb
hlt
ja
out
sub
mov
shrl
inc
dec
xchg
out
xchg
shlb
bound
inc
push
add
lahf
or
enter
in
xchg
addr16
or
pop
inc
mov
or
mov
sbb
out
jbe
sub
test
push
push
sbb
xchg
pushf
mov
bound
js
sub
inc
int
push
lods
les
stc
popa
sub
add
sub
dec
sbb
ds
testb
lret
sub
fistl
aas
add
mov
test
cmc
imul
cmp
fistl
lret
sub
clc
lret
jne
es
push
les
jg
sbb
popa
dec
cltd
shlb
push
inc
clc
or
stc
aaa
xor
leave
pop
mov
in
adc
add
or
test
inc
add
push
std
test
mov
test
cli
jno
pop
enter
arpl
pop
push
stos
xchg
andl
mov
and
add
add
jle
push
clc
movsb
test
adc
or
mov
inc
inc
fstl
sbbl
sbb
dec
lock
jae
xchg
add
scas
jmp
std
sahf
xchg
shrl
xorb
es
cmp
add
and
in
aad
push
sub
ss
add
inc
adc
into
sub
xor
push
mov
repz
leave
sbb
xor
mov
dec
movsl
sub
inc
xchg
std
movsl
cltd
sti
inc
decl
inc
inc
test
in
jb
sbb
fldenv
and
adc
shrb
imul
scas
or
push
jbe
mov
ljmp
and
inc
or
mov
cmp
xchg
daa
dec
dec
or
push
daa
pop
fyl2x
pop
hlt
xor
leave
js
nop
mov
scas
hlt
and
rcrb
jns
xorb
jge
push
insb
lcall
and
aad
rclb
and
jecxz
hlt
test
repz
cmp
push
cmp
and
lahf
das
pop
mov
cmpb
dec
xor
push
test
rcl
rorl
shrb
aas
dec
mov
aam
mov
mov
aaa
inc
cmpsb
push
incb
push
pop
mov
push
push
adc
push
andb
out
frstor
lahf
cmp
pop
movsl
or
cmp
dec
push
jg
jnp
adcl
imul
push
mov
push
lods
lret
or
push
jno
mov
shll
loope
push
adc
mov
xor
fadds
inc
xor
jbe
add
pop
popa
sub
and
scas
js
jo
subb
rorb
int3
cmc
mov
fs
xor
insl
test
xchg
outsb
mov
ljmp
adc
test
adc
into
pop
sub
cmp
jns
out
hlt
in
dec
or
int
mov
das
loopne
push
int3
cwtl
sbbl
jge
mov
push
dec
out
lret
jg
push
inc
adc
cs
das
mov
sbb
cmpb
dec
push
lods
loopne
imul
jle
jae
mov
push
xchg
inc
aas
aas
ljmp
divl
xchg
pop
mov
inc
mov
in
and
xchg
imul
push
adc
push
neg
scas
push
fimuls
fstpt
in
sbb
fildl
xchg
negb
or
pop
pusha
add
mov
repz
shlb
sarb
cs
dec
cmp
sub
xor
push
imul
and
push
adc
daa
lahf
lock
in
lret
pusha
push
mov
mov
adc
and
add
fwait
dec
push
dec
enter
rcrl
fsubs
cmp
mov
xor
test
lods
ror
loopne
btc
dec
les
fidivrl
mov
or
sub
in
xchg
add
cmp
fst
xchg
call
sbb
mov
nop
cltd
aaa
loope
addr16
frstor
sahf
xchg
sub
pop
pop
dec
or
in
sti
add
jg
mov
clc
adc
daa
fs
sbb
sub
mov
outsl
dec
test
xchg
repz
jnp
inc
push
daa
and
mov
stos
jl
imul
pop
jmp
xchg
pop
outsb
mov
mov
and
pushf
es
sbb
push
mov
je
cmp
dec
sti
push
dec
add
inc
cmpsb
pop
inc
dec
jb
adc
dec
push
mov
aam
sub
cmp
jle
outsb
jno
aaa
jecxz
in
push
sbb
int
sbb
out
imul
dec
or
mov
shrl
lahf
xchg
dec
or
inc
inc
fnstsw
ljmp
xchg
pop
scas
sbb
adc
test
jp
cld
mov
mov
out
adc
dec
pop
lds
add
lods
cld
pop
cli
mov
into
loop
and
inc
pop
loopne
mov
notl
in
fs
lods
gs
popa
lret
ret
fiadds
stos
sbbb
cmp
xchg
int3
sbb
adc
into
les
popa
mov
sbb
addb
mov
xchg
sub
ret
adc
add
mov
test
adc
cs
lock
mov
mov
sbb
and
pushf
push
mov
movsl
fwait
and
stc
dec
mov
add
mov
xchg
push
cmp
adc
stos
jp
mov
mov
je
scas
push
int
dec
mov
or
test
mov
cmp
cld
ret
not
cli
out
bound
mov
mov
loop
bound
sbb
jmp
arpl
xchg
sti
sub
push
adc
orb
imul
nop
push
cmp
pop
test
push
scas
cmp
sti
jl,pn
stc
pop
loopne
adc
lcall
dec
pushf
fsubrl
dec
ja
repz
xchg
pop
xchg
pop
hlt
adc
adc
cld
pop
mov
das
test
out
push
out
das
inc
arpl
sbb
mov
jg
xor
mov
shrl
fcomps
add
add
es
adc
lcall
insl
xlat
mov
lock
les
scas
and
pop
or
and
mov
fwait
movsb
pop
hlt
std
mov
stos
mov
es
aam
sbb
test
xchg
mov
and
sar
push
in
fstps
xchg
pop
jl
scas
sub
dec
xchg
out
stos
sub
cmp
ss
pop
or
jne
and
insb
lods
aaa
and
and
mov
mov
dec
push
cmp
subb
jae
push
adc
push
out
fwait
dec
icebp
orl
movsb
mov
shll
mov
into
xor
inc
or
or
jp
mov
xchg
test
outsl
mov
mov
imul
xchg
les
jle
cld
daa
testl
xor
rolb
ret
adc
push
dec
jmp
inc
sub
imul
and
cltd
popf
pop
je
mov
dec
orb
icebp
xchg
xor
cmpsl
dec
into
inc
mov
add
ja
add
push
or
push
dec
lret
gs
dec
lcall
jp
and
and
in
jge
fdivl
pop
out
rcrl
pop
inc
inc
adc
mov
mov
gs
mov
or
popa
test
call
cmp
mov
mov
cmp
or
pop
mov
adc
adc
add
and
insl
mov
mov
shr
jns
cli
out
push
jb
loope
cmp
fstl
cli
adc
mov
jl
or
or
aaa
push
xchg
inc
es
push
stc
mov
scas
lock
lods
icebp
xchg
mov
push
push
and
dec
inc
mov
mov
cmp
pop
mov
movsl
int
jne
mov
jle
rclb
sti
fcomip
int
icebp
or
cmp
jnp
cmp
adc
xor
cmp
fdivl
add
or
jecxz
addb
inc
ljmp
out
pushf
out
cmpsb
in
mov
cmc
or
push
xchg
dec
repz
xor
mov
fcoms
cmp
jo
mov
arpl
mov
addr16
lods
push
jb
popa
or
sbb
and
in
sub
xchg
les
mov
xor
push
mov
inc
sbb
test
dec
addr16
pop
lds
xchg
cmp
cmovo
flds
jmp
add
adc
mov
sub
test
push
pop
dec
sub
out
sub
ret
fs
dec
pop
sti
mov
inc
jle
add
dec
add
int3
test
hlt
or
fwait
ds
jb
push
ja
mov
outsl
fstps
ret
pop
movsl
lahf
outsl
test
mov
and
mov
mov
inc
mov
mov
out
cmp
rolb
test
aam
jns
pop
sub
xchg
ret
icebp
test
sub
xlat
xor
or
xchg
cs
aaa
or
sarl
mov
push
test
mov
lods
xor
sub
jg
xchg
fistpl
cld
and
loope
inc
sub
scas
lea
push
mov
xor
push
jb
cs
out
pop
add
loopne
mov
xchg
call
lea
ss
sbb
or
mov
das
mulb
dec
dec
aad
jp
int3
adcb
out
mov
or
repnz
mov
adc
mov
int
test
mov
jmp
fidivs
cmp
push
mov
jge
pandn
jne
mov
dec
ffree
mov
inc
dec
jp
xchg
insl
aaa
decl
adc
int
jo
sub
mov
stc
insl
sbb
cltd
jl
fldl
andb
and
and
xor
dec
aas
dec
or
shlb
sub
cld
mov
ljmp
push
jmp
sbb
frstor
sbbl
and
and
push
xchg
xchg
jg
mov
sub
push
mov
test
and
sar
clc
les
dec
add
sti
sti
cli
mov
dec
jmp
insb
testl
mov
in
pop
fwait
sar
daa
stos
pop
cs
sbb
mov
sbb
cmp
dec
cltd
adc
cmc
push
xchg
movsb
cmc
cmpsl
les
in
jo
jl
add
test
pop
inc
inc
test
xor
lcall
les
je
push
mov
pop
in
xchg
bound
mov
imul
negl
mov
jne
dec
add
pop
icebp
addr16
dec
add
icebp
rorl
mov
imul
adcl
jp
mov
clc
pop
mov
adc
hlt
mov
sarl
lcall
loopne
repz
push
in
or
movsl
xchg
inc
dec
xchg
aad
lods
shlb
mov
xor
xlat
inc
mov
js
xor
dec
test
lds
scas
inc
cmp
clc
pop
inc
in
fstpl
out
or
iret
sub
jmp
nop
out
ret
dec
aaa
sub
nop
mov
sbb
xchg
adc
dec
cld
imulb
outsl
fdivl
xorb
jg
inc
ds
mov
ret
out
loopne
jne
adc
incb
lea
lcall
movsb
imul
push
negb
cli
sub
cmp
aas
mov
shll
mov
cmp
push
dec
xor
sbb
in
imul
fs
push
je
fdivrl
xchg
call
dec
push
push
inc
cmpsb
pushf
push
jge
ret
fisubl
cmp
andl
push
adc
pusha
pop
sub
adc
jl
aad
inc
sbb
push
cmc
nop
imul
adc
ja
or
push
cmp
cmpsb
shrl
push
sub
cmp
or
fwait
stc
mov
aas
inc
or
mov
cmp
cli
xor
jbe
movb
pop
inc
pop
and
xor
sbb
lods
cmp
inc
jno
lods
ret
out
push
movsl
lods
xchg
les
sarb
mov
pop
out
das
xor
nop
or
mov
or
mov
imul
insl
mov
sahf
es
lret
out
movnti
dec
and
repnz
mov
fprem
lods
adc
gs
je
lods
pop
lret
rcl
popa
push
repz
movsl
sbb
fxtract
repz
leave
arpl
adc
cmp
inc
xlat
js
ret
call
dec
jge
lret
call
mov
dec
xor
xchg
frstor
cli
jecxz
stos
xor
adc
outsb
add
sbb
mov
pop
add
push
mov
mov
mov
setg
insl
mov
and
nop
mov
adc
add
cmp
jns
jns
sbb
mov
push
mov
std
xor
in
mov
xor
mov
cmp
fs
cmp
mull
adc
icebp
ficomps
add
pop
gs
paddd
xor
jae
dec
insl
psubw
mov
mov
icebp
and
jmp
mov
rclb
jns
xor
mov
in
push
out
rorb
push
pop
sti
fisubrl
loopne
adc
jmp
add
xchg
out
jae
adc
mov
xor
das
or
es
and
xor
jle
movsl
out
xchg
push
dec
add
cmpsb
bt
xor
sub
push
inc
repnz
push
clc
and
dec
rclb
inc
push
inc
xor
insb
mov
xor
add
push
insb
in
push
cmc
loopne
xchg
mov
and
es
and
xchg
mov
dec
adc
popa
pop
ficoms
push
sub
cmp
sahf
lock
fcmove
fisttpl
fnsave
je
addb
jg
shll
jnp
das
repnz
sbb
or
jae
and
mov
fimull
adc
cmc
push
jnp
mov
scas
lock
mov
test
fmull
mov
cltd
ficoml
test
sub
mov
popf
mov
lods
dec
pop
or
enter
sbbb
sbb
fs
mov
jge
xor
adc
cltd
adc
mov
inc
pop
mov
inc
rcrb
mov
mov
ret
stc
movsl
mov
jae
jecxz
js
xchg
jge
adc
mov
dec
mov
sbb
addb
rcrb
imul
std
shr
xchg
leave
insl
int3
adc
xor
repz
inc
mov
xor
decb
push
push
push
push
or
movsb
jg
cmp
mov
mov
sbb
ficoml
es
hlt
mov
pop
roll
pop
mov
shlb
jnp
int
mov
mov
pop
push
cmp
cmp
jge
gs
sbb
cmp
ds
jnp
push
lcall
shlb
adc
jns
push
insl
xor
sahf
mov
mov
sbb
ljmp
or
popa
lea
loop
xlat
ja
and
add
orb
push
repz
mov
add
push
fadds
clc
mov
adc
pusha
popf
hlt
pusha
test
xor
xor
jbe
loope
cmp
xchg
pusha
xchg
mov
aaa
push
mov
sub
xchg
ficoms
xchg
and
in
pop
and
or
mov
mov
pop
mov
or
inc
mov
icebp
mov
aam
cmp
dec
aas
or
data16
jns
imul
xor
xor
add
mov
hlt
js
int3
in
testb
imul
es
insb
jmp
frstor
pop
add
pop
cmp
sub
rorb
iret
push
test
cmpsl
add
shl
sbb
lret
fld
rcl
fwait
sbb
xor
negb
adc
push
dec
ljmp
mov
mov
testb
out
js
gs
sub
insb
gs
xor
and
mov
sub
push
out
movb
fs
cmp
add
out
adc
xchg
and
cmc
cmpsl
mov
nop
cmpl
push
push
popa
imul
and
mov
negl
xchg
xor
and
push
popf
js
lahf
sahf
xchg
test
push
xchg
movsb
aaa
jmp
cmp
mov
popa
les
ss
in
ss
aad
lahf
mov
xchg
adcb
dec
test
jno
sbb
sbb
push
pushf
scas
clc
in
repnz
lret
stc
outsl
fisttps
dec
das
test
mov
sti
sbb
jg
scas
adc
outsb
push
shlb
push
jo
out
les
call
data16
dec
xchg
xchg
ret
push
outsb
popa
cwtl
and
arpl
loopne
hlt
push
in
in
mov
or
iret
mov
lea
adc
ficompl
sub
add
in
inc
popf
inc
sbb
xchg
mov
loope
mov
aad
sbb
sub
fiadds
mov
pop
or
int
xor
imul
mov
shl
iret
fdivrp
jp
mov
rolb
cmpsb
mov
cltd
jle
mov
or
inc
fld
xchg
mov
movsl
mov
aaa
mov
push
sbb
sub
mov
mov
cmp
sbb
inc
sbb
mov
push
push
fists
pushf
jae
roll
push
jae
pop
pop
or
flds
pop
xor
adc
xor
mov
rcll
inc
mov
sbb
pop
int3
add
push
sti
or
push
pop
out
sarl
jo
jle
in
lods
jne
and
es
adc
lret
test
insb
js
ja
int3
cmpsl
repz
in
jmp
mov
es
dec
shl
jo
shl
testl
aad
into
add
dec
mov
insl
pushf
xchg
je
adc
mov
and
jne
jnp
sbb
dec
sbb
pusha
aas
mov
stos
cli
dec
imul
cmp
movsb
ss
jg
test
aam
imul
shll
mov
fs
adc
push
lods
or
sbb
sahf
and
ljmp
sti
pop
xchg
clc
or
out
add
arpl
add
sbb
ficoml
mov
dec
adc
dec
stos
xor
in
in
data16
out
xorl
jne
mov
xchg
sbb
call
lret
mov
mov
push
push
cltd
sub
xor
shll
inc
cmpb
stc
jecxz
xor
cld
js
subl
jb
punpckhwd
xor
add
push
lea
insb
aas
sub
dec
fdivrl
push
dec
nop
adc
xchg
cltd
aad
cli
dec
inc
or
or
movb
mov
sti
push
pop
sub
or
data16
xor
jecxz
sbb
xor
movsl
xor
call
mov
mov
push
notb
inc
clc
mov
xor
sbb
mov
and
aaa
jb
mov
adc
fnstenv
arpl
cmp
mov
fnstenv
pushf
sub
sbb
daa
into
mov
orb
or
lds
jge
sbb
js
mov
sbb
inc
add
dec
inc
lock
push
cmp
dec
shll
xchg
inc
stos
or
icebp
clc
out
push
xchg
clc
and
jns
pop
fsubl
arpl
pop
add
mov
xor
mov
sub
mov
ret
cmc
aaa
and
pop
iret
mov
sub
adc
inc
mov
mov
xor
ret
sbb
pop
scas
jno
test
nop
in
notl
popa
mov
push
sahf
arpl
mov
or
lock
sahf
stos
fdivr
xchg
insl
dec
addr16
in
lcall
mov
je
outsb
arpl
xor
jge
fnsave
js
loope
adc
es
inc
mov
mov
xchg
cmc
mov
mov
inc
dec
inc
aaa
lret
cmp
jbe
and
jae
jno
inc
fsubs
das
pop
add
jl
inc
pop
fsts
pop
lcall
mov
inc
cmp
add
pop
fs
sahf
mov
pop
ds
xlat
or
mov
and
xor
pop
xlat
arpl
sub
aaa
mov
mov
dec
inc
inc
in
add
pop
dec
scas
shlb
out
sub
lret
jp
fisubs
js
jne
fst
adc
pop
adc
les
popa
push
js
loop
std
push
mov
xor
xchg
gs
mov
ja
rclb
xchg
cltd
loopne
push
sub
push
rorb
lods
push
cmp
rcl
mov
xlat
sahf
jnp
lods
bound
sarl
adc
mov
jge
mov
sub
mov
loop
dec
push
mov
mov
and
xchg
cmpsl
call
outsb
push
in
mov
fwait
cmp
dec
inc
loop
leave
mov
ret
mov
cmpsb
push
xor
mov
pop
adc
or
cmpb
sbb
pop
xchg
lcall
jno
std
int3
sub
shrl
adc
dec
cltd
adc
orl
xor
cmp
je
dec
aas
push
jae
sub
arpl
insb
lock
lcall
mulb
movsb
fistl
adc
leave
adc
mov
idivb
dec
add
popf
in
pop
rorb
outsb
jle
xor
and
ljmp
push
push
mov
mov
push
outsl
jl
repnz
in
pop
push
inc
int
inc
pop
xchg
dec
dec
and
cmp
out
and
xor
xorb
mov
stos
pushf
stos
sbb
inc
jb
cmc
lret
mov
mov
pushf
adc
mov
push
cwtl
arpl
nop
dec
xchg
popa
test
and
or
bound
fists
addr16
jne
jl
and
lret
mov
rcrl
mov
aad
sub
mov
inc
sbb
xchg
push
cmp
or
sub
outsb
adcb
mov
adc
xchg
les
jecxz
sbb
adcl
xchg
or
lcall
cmp
mov
mov
add
cld
jmp
xor
gs
mov
dec
int3
and
sbb
mov
mulb
iret
pop
notl
test
les
jmp
lods
and
aad
dec
pusha
shrl
xor
fsubr
push
mov
test
mov
mov
aaa
fcmovnb
mov
mov
into
lret
scas
adc
xchg
jle
and
frstor
jmp
imul
and
mov
loopne
lcall
mov
test
xor
pop
xadd
pop
jle
pop
rcr
cli
push
mov
scas
jle
jmp
ds
scas
cmp
sbb
mov
mov
jmp
push
and
das
and
pop
loope
mov
dec
ds
and
cmc
push
jl
in
xchg
gs
mov
jb
adc
sbb
sub
pop
cwtl
addr16
sub
dec
pusha
and
inc
ljmp
mov
sbb
mov
lods
movsb
ret
pop
push
mov
mov
popf
aam
cs
and
push
lods
inc
push
and
or
adc
sub
jb
jns
fcmovnbe
gs
xchg
into
mov
mov
push
push
mov
sbb
les
mov
inc
es
hlt
jp
imul
stos
inc
imul
sbbl
lods
xorl
sarl
or
addr16
fsubr
sbb
pop
aaa
mov
jns
jge
push
pushf
pop
out
cmp
add
orl
out
call
loope
xchg
or
pop
stos
adc
jae
rol
loopne
jno
jb
mov
aaa
insl
pop
xchg
hlt
inc
cmc
pop
orl
xchg
into
push
shll
sub
arpl
cmp
in
pop
mov
fs
pop
or
mov
add
data16
cmovle
pop
sub
xor
push
fstps
cli
sub
out
add
mov
pop
xchg
pop
push
fs
xchg
subb
ds
insl
add
jns
xchg
ds
loop
arpl
adc
fmuls
fstpt
ficomps
jns
xchg
arpl
inc
lcall
or
notl
adc
sar
add
mov
add
dec
and
mov
div
or
cmp
insl
add
popf
inc
or
jae
and
fadds
inc
mov
sub
push
fmull
inc
cs
out
aas
add
pop
sti
stos
data16
and
mov
cmp
enter
sub
mov
outsl
mov
pop
aam
shlb
aad
clc
dec
xchg
xchg
cmpsl
es
xor
dec
aas
mov
push
addl
xchg
es
cmovno
or
sahf
rorl
jno
cmc
sbb
aad
jae
mov
popa
mov
cmp
push
sbb
push
and
cmp
outsb
int
adc
mov
jbe
xor
jge
mov
sub
lret
mov
into
addps
lods
jecxz
jle
pop
int3
inc
dec
pushl
nop
dec
push
dec
pop
xlat
popa
call
lea
pop
dec
and
stos
pusha
dec
loop
popa
pop
jp
adc
pop
lahf
mov
mov
stc
mov
fldenv
int
add
mov
mov
loope
jl
cmp
cs
clc
dec
inc
fldl
mov
sbb
mov
rcrl
xchg
nop
sub
sbb
sbb
aaa
mov
gs
mov
sbb
in
xchg
push
pusha
aam
fildll
push
pop
inc
xor
icebp
sahf
iret
daa
fstps
add
inc
xlat
test
mov
mov
lahf
outsl
mov
mov
fs
xor
iret
add
ret
iret
dec
pop
mov
fwait
je
dec
hlt
dec
sub
in
push
jecxz
jns
cmp
pusha
or
inc
call
cltd
xchg
inc
jne
and
mov
nop
xchg
fistl
pop
cli
out
xor
push
cltd
xchg
jl
test
mov
xchg
lret
cmp
fnstsw
inc
mov
jp
push
hlt
cli
mov
int
movsl
aam
dec
add
jmp
or
adc
xchg
and
sub
pop
sbb
push
push
xchg
sbb
pop
pop
or
xor
ret
push
ja
jl
sbb
inc
in
popf
ret
xchg
mov
ret
out
sub
pop
fs
mov
fdivrs
daa
je
shlb
dec
cmova
xchg
sbbb
in
loopne
mov
adc
cwtl
mov
daa
xchg
clc
sbb
xor
xlat
loop
jge
js
sti
push
mov
xchg
add
adc
sub
fxrstor
insb
cmpsb
ja
push
add
sbbl
cltd
mov
pop
cmpsl
sbb
mov
movsb
pop
movsb
in
sub
arpl
pop
mov
mov
xor
shlb
jge
cmp
mov
subl
subl
push
xor
cmp
loop
push
push
and
push
add
pop
mov
aad
add
cmp
pop
pop
xorl
clc
sbb
mov
mov
stc
sbb
add
push
mov
push
int
pop
fistps
sbb
xor
decb
movl
das
mov
pop
subb
cs
mov
mov
movsl
mov
shll
roll
addb
push
repnz
scas
fst
cmpb
jle
pop
movsl
push
push
mov
and
fsts
pmuludq
push
test
sbb
subb
cmpsb
roll
sub
int
adc
mov
gs
mov
aas
cmp
fisttpl
lret
inc
pop
scas
ss
lahf
cmc
jle
cmpsl
pop
add
cld
mov
data16
hlt
xchg
int3
pop
push
cli
outsb
je
cs
popl
add
push
add
mov
mov
xchg
nop
or
xor
cld
addr16
or
sahf
sbbl
mov
add
inc
ja
adc
stos
mov
add
mov
adc
divb
xor
mov
jne
lret
jb
and
ficoml
imul
jno
mov
shl
dec
ret
out
ja
int
loopne
cmp
mov
inc
adc
rcr
test
lahf
popa
cmc
sub
frstor
mov
outsl
pushf
lret
jmp
xor
pop
mov
sbb
sbb
fdivl
orb
in
xchg
jne
jl
lret
out
rcr
ret
je
cmpb
lret
pop
mov
push
jcxz
push
xchg
pop
jmp
xor
push
es
add
test
jnp
or
xchg
test
neg
dec
nop
loope
scas
mov
stc
in
or
addr16
mov
xor
cmpl
sti
js
jle
or
repnz
std
push
outsb
jmp
pop
push
ret
loopne
inc
or
xchg
sti
dec
data16
xchg
inc
mov
pop
dec
mov
xchg
or
sbb
xchg
aad
rol
xor
or
je
sbb
fcomps
add
in
out
cli
mov
test
cli
mov
inc
insl
jbe
inc
mov
jl
dec
insb
in
dec
stos
data16
and
dec
mov
ds
jae
testl
inc
int
in
sbb
test
xchg
es
and
adc
mov
and
jo
mov
mov
orl
push
xchg
roll
jge
sbb
jnp
pop
adc
inc
lock
adc
adc
cmp
das
clc
xchg
fs
push
lahf
jecxz
pop
bound
stos
add
adc
aas
jmp
das
repnz
jle
testb
repz
mov
ss
jge
inc
dec
ficomps
daa
lock
sub
cltd
aas
pop
in
dec
xchg
pusha
cmp
repz
cli
xor
mov
mov
pop
daa
cmpsl
mov
adc
xor
movl
jnp
pusha
xlat
pop
mov
js
mov
mov
mov
sbb
aaa
outsb
xchg
add
daa
adc
nop
rolb
es
lahf
sbb
xor
aad
ljmp
aaa
sub
or
push
jns
pop
out
fdivrl
inc
cld
ret
mov
mov
ret
pushf
ret
pop
addb
ret
in
jns
int
add
and
mov
pop
rcr
and
pop
push
sub
cwtl
out
rol
ret
add
shll
out
inc
sti
mov
pop
cmp
xor
test
sub
xchg
or
lcall
pop
repz
xchg
jecxz
int
pop
sbb
cmp
jle
pop
sarb
lahf
sahf
pop
xor
fnstcw
fwait
mov
and
sub
ja
scas
gs
and
lds
mov
in
sbb
or
repnz
xor
inc
mov
fisubrs
in
in
scas
and
add
test
outsl
mov
stos
adc
mov
sub
sbb
test
mov
xchg
movsl
sbb
mov
mov
std
sbb
mov
mov
jp
xchg
and
fwait
pusha
cmp
ficoml
xchg
jne
cmp
psllw
or
inc
push
nop
cs
loop
and
mov
xorb
sbb
lret
cmp
sbb
and
jnp
jno
in
pop
push
mov
pop
aas
mov
sbb
xor
mov
xor
aas
xchg
add
pop
lock
jg
lds
int
es
mov
xchg
dec
and
xchg
push
sub
stos
xor
mov
hlt
lea
imul
jge
in
pushf
arpl
pop
or
into
lret
xor
inc
pusha
adc
in
mov
repnz
dec
or
xchg
mov
ss
ljmp
cmpsb
mov
cmp
mov
inc
pop
pop
mov
scas
or
into
mov
xchg
insb
dec
hlt
dec
in
cmp
jmp
test
mov
push
outsb
inc
rolb
adc
jne
add
adc
in
cmp
ret
and
sbb
push
femms
xor
push
shll
cs
mov
mov
and
jmp
flds
mov
pushf
xchg
mov
fistps
sbb
dec
leave
stc
pop
and
stos
cld
call
hlt
and
out
mov
pop
dec
mov
jno
jno
lcall
sbb
sbb
add
orb
sub
mov
dec
mov
pop
jecxz
int
lret
adc
cmpsl
and
sahf
rcll
mov
mov
and
jno
jnp
decl
mov
jecxz
dec
fcompl
jae
push
fwait
arpl
jae
jns
pop
push
mov
fildll
inc
xor
js
mov
xorb
lds
les
pop
lds
jne
mov
add
jle
push
outsb
repz
cs
cwtl
dec
xor
lahf
xchg
loopne
dec
add
jno
cmc
fs
shll
mov
call
ror
mov
repnz
ds
mov
add
inc
leave
or
ljmp
xchg
mov
dec
les
xchg
repz
movsb
mov
cmpsb
or
pushf
inc
jne
js
aas
icebp
inc
int3
cs
subl
and
sub
cmp
cld
test
dec
mov
mov
sub
mov
pop
jl
xor
loop
mov
stos
fwait
xor
popw
push
mov
popa
push
pop
bound
lcall
fwait
mov
push
mov
push
pop
cld
out
out
loopne
daa
out
xor
scas
int
sub
jns
jecxz
insb
mov
push
fs
and
in
inc
test
adc
add
push
ljmp
pop
mov
or
clc
mov
test
in
sahf
mov
sub
rorl
lods
pusha
add
mov
jmp
fs
mov
pop
xlat
push
insl
stc
fdivl
push
xchg
aad
aad
hlt
loope
fstpl
test
lods
cmp
js
sub
inc
scas
icebp
sub
int
mov
sub
aaa
fstpl
popf
mov
mov
push
movl
in
popf
out
jp
and
int3
mov
cmp
add
movsb
mov
jecxz
aad
mov
fdivl
lock
pop
jnp
sahf
cmp
mov
fwait
sbbl
leave
sahf
nop
lock
or
xlat
adc
clc
dec
sti
mov
shlb
xchg
cmc
arpl
sbb
and
scas
jbe
out
lds
xlat
and
jmp
or
mov
lret
sbb
push
cmp
test
ja
mov
popa
xlat
inc
or
mov
and
xchg
insl
insl
call
andl
and
sbb
sbb
stos
xchg
push
mov
xchg
or
add
setbe
adc
rcrb
in
movsl
in
xchg
pop
xor
xor
push
adc
imul
ffree
fistpl
in
mov
fwait
sbb
sbb
movsl
mov
fisubs
or
sub
and
insb
sub
cmp
rol
cmp
jnp
cmp
test
into
mov
ja
and
cmpsl
jge
out
xchg
add
cmpsl
ss
push
pop
scas
sbb
out
arpl
pop
dec
jecxz
les
lcall
fxam
and
sub
mov
aad
aam
jmp
or
sarb
pop
jno
mov
in
ljmp
mov
sbb
shlb
mov
stos
jo
clc
ucomiss
push
dec
dec
mov
xchg
xor
scas
jp
aas
gs
lods
sbb
mov
mov
adc
adcb
jne
or
jne
jnp
cltd
int
rcll
out
jnp
xor
cmp
or
ficompl
lods
cwtl
aaa
aam
testl
std
dec
test
pop
arpl
shll
inc
mov
push
jns
mov
xor
push
sbb
inc
mov
lods
adc
ficompl
incb
inc
mov
test
pop
and
lock
repnz
lods
push
ficomps
fcoml
outsb
shrb
loope
push
inc
sarb
lods
add
mov
sub
loope
lock
push
loopne
cli
sti
push
popa
mov
cmpsb
mov
adc
inc
adc
test
push
pushf
jge
aas
ja
stos
jecxz
xchg
sub
dec
pop
xchg
in
jno
push
div
mov
lds
cld
add
mov
test
or
adc
in
push
std
sub
in
test
xorl
cmp
xorb
fbstp
xchg
enter
push
lock
jo
pop
xchg
pop
add
mov
test
jmp
inc
pushf
fucomp
cmpsb
sbb
xchg
jnp
jle
xchg
lods
popf
jns
cwtl
popf
int3
daa
xchg
nop
andb
jb
xchg
cmpsl
addr16
push
test
insl
arpl
lock
xor
cmpsl
jbe
mov
xchg
inc
pop
cmp
fwait
sbb
flds
scas
cmpsl
mov
push
das
loope
mov
loop
out
xchg
xorb
cmp
out
popl
or
mov
dec
pop
imul
xor
push
mov
jne
mov
and
pop
add
pop
popf
aas
or
or
mov
aad
adc
lret
fildl
in
xchg
int3
test
pop
popa
pop
mov
int3
or
adc
icebp
push
scas
stos
test
shrb
in
dec
sub
mov
add
push
mov
dec
mov
out
jecxz
mov
and
pushf
add
out
out
mov
rolb
adc
ljmp
jo
jne
inc
inc
mov
test
lahf
xorb
sub
cmpsl
lods
dec
cs
dec
or
and
mov
inc
rorl
and
push
setns
lea
xor
adc
movsl
and
arpl
jno
pop
mov
cwtl
push
dec
fucomp
mov
and
mov
pop
ficompl
jbe
mov
aas
sbb
mov
jno
fs
jnp
imul
sub
ljmp
pusha
ret
push
orb
mov
jp
insb
mul
mov
or
ret
push
inc
divl
rcll
sbbl
jmp
and
int3
mov
pause
pushf
jle
dec
pop
subl
pop
fldl
xor
in
test
clc
icebp
ja
repz
not
or
mov
idiv
xchg
lret
add
cmp
shll
cmp
mov
out
push
mov
movsb
cwtl
mov
ret
dec
adc
inc
or
cmpsl
jg
loopne
dec
xchg
xchg
ret
push
sbb
cld
cltd
hlt
outsb
movsb
push
pop
pop
xor
jae
jae
add
cmp
popf
in
dec
or
mov
mov
ja
sarb
adc
stos
pop
cld
pop
push
adc
into
test
mov
pop
icebp
lods
test
jb
js
rcrb
popf
les
adc
push
mov
leave
push
mov
cmp
andl
sbb
jo
pop
lcall
push
xor
aam
push
xor
jmp
sbbb
mov
push
xor
push
xor
mov
rcrl
fidivl
jp
test
shl
sbb
mov
out
mov
call
xchg
hlt
fldenv
xor
mov
jnp
or
push
add
adc
ficoml
cmpsl
in
pop
out
xor
ss
outsl
or
mov
mov
adc
adc
sahf
frstor
ret
xchg
adc
add
mov
into
push
scas
xchg
ret
jecxz
add
aad
leave
out
and
mov
or
les
jp
imul
mov
out
hlt
fdiv
cmp
gs
test
test
out
aam
pop
mov
pusha
ret
inc
inc
fsubrs
push
jb
dec
inc
fstpl
xchg
mov
xor
add
loopne
mov
xor
add
ret
cli
fdivrl
lds
jg
sbb
test
std
xchg
lcall
jns
push
sbb
stc
orb
inc
pop
into
pop
sar
pop
xchg
push
je
rorb
jne
jmp
or
loope
mov
sahf
cltd
in
mov
sub
and
mov
xchg
push
xor
aam
add
loopne,pt
xor
sbb
cmp
jmp
test
xchg
ret
cmp
mov
cld
pop
push
and
add
push
mov
sub
insl
lret
mov
repnz
pushf
data16
mov
sbb
shlb
and
mov
adc
cli
stos
mov
xchg
mov
inc
add
mov
push
inc
test
repz
and
pop
loope
and
out
mov
mov
jae
imul
xchg
sbbl
xor
pop
repnz
rcll
cmp
xor
rol
test
test
sbb
hlt
jecxz
es
aaa
jbe
adc
out
jecxz
sar
mov
push
xor
call
pop
pop
enter
add
aam
inc
pop
push
push
dec
sar
inc
ret
enter
jae
push
sbb
das
test
inc
add
stos
negb
shll
lahf
lahf
pop
mov
adc
imul
leave
mov
and
jle
lds
call
push
shl
push
add
shrl
aad
aam
je
inc
xchg
pop
je
pop
jecxz
adc
xor
mov
rorl
fistpll
stos
arpl
fbstp
xchg
xor
pushf
test
sub
inc
fwait
stc
repnz
sub
stc
push
test
pop
jns
enter
and
jae
pushf
lods
in
sub
pusha
fs
in
inc
fldt
add
mov
popf
aad
jmp
pop
clc
cmpsb
dec
sahf
xor
xchg
test
add
push
aas
or
testb
jo
xor
ds
loope
pop
ljmp
xor
rclb
push
sarl
or
cmpl
and
mov
inc
lods
lea
xchg
ret
fisubrl
loope
mov
or
in
cmpsb
mov
iret
mov
jno
pop
jbe
pop
ret
scas
ret
mov
dec
dec
mov
pop
add
mov
adc
push
dec
xchg
pop
jecxz
sub
mov
jne
fwait
testb
in
aam
cmp
or
adc
sahf
fldenv
cmp
mov
outsl
xor
lcall
daa
or
inc
xor
or
mov
adc
inc
xchg
ret
sub
mov
lret
bound
jno
test
jl
push
or
mov
data16
mov
jo
add
fcmove
inc
out
sti
add
out
sbb
sub
or
fistpl
xchg
jecxz
test
test
imul
and
jae
mov
or
dec
dec
jbe
pushf
cmp
arpl
sahf
push
push
frstor
inc
jbe
inc
push
ss
pop
outsl
fcomps
push
cli
cmp
ror
jle
jbe
sbb
mov
mov
pop
mov
aaa
push
scas
xchg
hlt
xor
cli
ss
cs
fiaddl
out
leave
push
outsl
in
mov
sahf
or
shrb
inc
repnz
pop
xchg
add
jp
movsb
stc
cmpsb
lods
cmpsl
testl
aam
leave
mov
loop
adc
sbb
xor
push
into
inc
pop
gs
test
push
subl
jmp
neg
ljmp
into
add
xchg
stos
lahf
lret
mov
xor
add
lods
fisubrl
sub
mov
mov
jp
mov
test
adc
pushf
add
xchg
push
pop
add
mov
scas
std
pop
jecxz
sbb
cmp
je
cs
jbe
push
stos
hlt
out
inc
xchg
or
flds
js
mov
mov
xor
add
xor
mov
push
xlat
cmp
fistpl
push
mov
out
fs
pop
sbb
jmp
pop
push
cmc
xchg
jge
and
outsb
sbb
lock
cmpb
push
in
fstps
pop
fst
push
andb
adc
cmpb
adc
sbb
dec
mov
push
add
add
push
push
and
loop
and
sbb
pop
sub
sbb
mov
push
popa
iret
jge
out
pop
fstl
xchg
xchg
es
sub
mov
jne
gs
ss
mov
loope
cmpsb
push
les
sub
add
loopne
ror
outsl
js
mov
xchg
repz
arpl
sbb
scas
bound
mov
push
iret
out
std
dec
mov
lock
test
xchg
mov
imul
shl
sbb
pop
ja
jle
jge
cmc
cmp
lock
repz
in
je
mov
fmuls
int3
mov
sub
mov
mov
pop
xchg
adc
aas
dec
stos
addr16
pop
mov
jg
push
cli
mov
push
test
push
adcl
loopne
pop
mov
or
mov
ss
inc
leave
xlat
cmp
mov
sbb
fcmove
sar
rclb
push
dec
fucomi
pop
enter
adc
enter
dec
push
ret
mov
inc
repnz
jo
sahf
xchg
xchg
mov
pop
insb
pop
lea
mov
sbb
pushl
pop
inc
sti
lods
or
std
push
in
push
xchg
jnp
icebp
mov
test
and
scas
sbb
leave
jb
das
mov
cmpsl
and
inc
or
xor
std
mov
dec
test
or
jl
jmp
pop
repz
out
cmpsl
xorl
cmp
push
cmp
pop
fsubp
mov
mov
stos
jbe
push
cmp
jl
push
out
mov
sarl
dec
sbb
inc
aaa
lods
jp
decl
and
xor
mov
int
inc
jmp
sbb
jecxz
into
xor
and
adc
clc
data16
int3
sbb
shrb
scas
sub
ret
int
arpl
addr16
movsb
fmull
dec
mov
xchg
push
daa
xor
in
mov
out
stc
hlt
lret
flds
movb
push
pushf
adc
sub
sbb
fsts
mov
sbb
idiv
push
fwait
lods
in
cs
fsubl
lea
and
sub
push
inc
imul
loop
sub
xor
test
shrb
sahf
outsb
cmpsl
add
jo
jb
mov
in
test
xchg
xor
js
mov
int
cmp
push
daa
loopne
inc
sub
push
mov
xchg
dec
mov
in
aas
mov
mov
iret
movsl
sbb
mov
movsl
insb
orb
inc
mov
sbb
cld
sti
xlat
sub
xchg
xor
jb
sbb
mov
jp
into
das
sbb
xor
seto
pop
and
fmul
in
hlt
testb
and
push
aam
fs
ja
mov
xchg
stos
sti
ss
dec
subb
push
jbe
sbb
std
lret
mov
xchg
jge
push
dec
stos
xchg
in
ret
adc
sarb
lock
mov
pushf
popf
ficoms
push
fsubrp
test
dec
push
mov
repnz
mov
and
packssdw
mov
add
push
cmpsb
mov
adc
data16
test
movaps
fstl
pop
cmp
xchg
dec
or
push
xchg
and
jl
pop
or
jge
mov
dec
lahf
mov
jg
frstor
fiaddl
xchg
jne
jecxz
in
or
lds
fldt
sbb
in
and
add
or
loopne
clc
repz
aas
je
fucomp
ret
push
mov
test
xchg
outsb
test
fwait
jge
in
test
push
mov
shrb
sbb
adc
xor
inc
scas
push
mov
data16
xor
icebp
popa
mov
jns
popa
repz
insb
xchg
xor
jmp
or
fistpll
pop
sbb
idiv
icebp
inc
lods
imul
test
add
fldenv
inc
arpl
orl
push
fisttpl
movsb
or
shl
arpl
fistps
ljmp
sti
enter
cwtl
in
jb
out
lds
add
mov
idivl
dec
scas
sub
xor
jecxz,pn
cld
cld
stos
jo
adc
fincstp
cmp
pop
pop
mov
xchg
lock
mov
in
push
push
shr
fisubrs
in
out
fiaddl
adc
lret
hlt
or
lods
push
fnstsw
adc
jbe
sbbl
lods
push
cmp
cmp
sub
test
fisubs
push
pop
pop
insb
repnz
mov
xchg
pop
add
jmp
outsb
loopne
movsb
sub
out
gs
push
sbb
lods
mov
pop
and
or
and
clc
pushf
xchg
and
ffreep
add
pop
lods
lahf
pop
push
jecxz
cs
orl
adc
add
pop
rolb
jbe
jae
enter
clc
mov
int
movsl
adc
xlat
xchg
push
push
dec
stc
xchg
mov
ficoms
mov
shrl
out
lds
push
cmp
mov
jl
jge
jno
loop
in
dec
out
mov
adc
aaa
mov
andb
or
inc
inc
andl
popf
faddl
and
push
out
int3
xor
sub
push
xchg
stos
cs
negl
int
fsubl
jmp
push
add
lret
loopne
xchg
popf
stos
xor
dec
xchg
fldl
lret
xchg
push
stos
push
push
bound
mov
xchg
js
sub
idivb
enter
xchg
sbb
repz
jecxz
sbb
je
inc
arpl
int
scas
loopne
pop
xchg
in
sbb
dec
aad
mov
je
out
cmp
iret
fisubs
sbb
lahf
pop
xchg
jo
and
sti
and
outsb
inc
mov
pop
fcoms
xlat
jb
xor
xor
rorl
jl
out
mov
and
xor
cmp
cmp
mov
inc
xor
out
push
popl
adc
xor
xchg
or
scas
push
and
idivb
sbbl
pop
call
js
repz
xchg
mov
loope
ret
and
cltd
ret
rolb
mov
sub
pop
fwait
outsb
divl
enter
add
scas
lock
add
in
sbb
adc
push
movsb
shlb
lret
xor
adc
das
sbb
sub
aaa
loope
mov
lods
jmp
call
stos
adc
pop
dec
divl
scas
xor
or
call
repnz
cmpsb
dec
push
ja
xchg
lcall
incb
or
shll
push
ds
fwait
nop
leave
ss
mov
add
cmc
or
es
int
lods
and
stc
sbb
in
loopne
push
sub
aad
loope
xchg
lock
rep
test
push
add
dec
push
int
mov
add
pop
test
mov
and
scas
repz
test
cmc
dec
xor
dec
stc
fisubrl
cld
and
ds
lret
pop
xchg
je
clc
or
data16
push
fdiv
push
lcall
sahf
mov
push
pop
lock
call
das
idiv
push
push
inc
inc
push
pop
xchg
lea
aas
cmpsb
mov
and
icebp
test
xchg
lret
lods
into
xor
add
int
shlb
daa
mov
cwtl
cwtl
jg
pop
cmp
pop
mov
sbb
enter
inc
sarb
pushf
mov
xchg
imul
icebp
popf
imul
repnz
mov
ljmp
xchg
xor
and
jne
lds
js
inc
ja
push
fstpl
pop
shl
or
xchg
call
jb
ja
xlat
addl
lcall
test
sbb
ret
out
cmc
sarl
pop
push
ret
mov
pop
icebp
imul
push
and
or
insb
push
pop
mov
mov
pop
pop
mov
cmp
enter
cmpsl
dec
cmp
add
and
out
dec
sub
sub
enter
jae
hlt
nop
mov
fbstp
xor
mov
je
mov
cld
lds
jne
jp
ret
inc
daa
movsb
idivl
outsb
pop
cwtl
loop
xchg
outsl
jp
cltd
loop
mov
imul
mov
test
lods
cld
ja
push
xchg
leave
xchg
loopne
mov
sbb
lods
adc
movsbl
mov
mov
outsl
mov
pop
je
ss
test
push
aas
cmpsb
mov
cwtl
bound
clc
cmp
pop
adc
call
mov
out
lcall
cltd
push
daa
jmp
add
cld
sti
pushf
lret
xchg
lock
mov
jne
push
cltd
movsb
popf
loop
add
pop
xchg
jmp
ret
test
std
inc
hlt
icebp
and
icebp
pop
scas
sti
sbb
or
ficoms
test
fcmovnu
jmp
sbb
jge
xchg
mov
ja
iret
fwait
jns
testb
testb
jae
fdivrl
out
outsl
ret
pop
jns
or
add
idivb
mov
subb
subb
rorl
pop
sbb
push
add
cmpsl
pop
mov
inc
mov
push
mov
mov
popf
repz
cmp
push
push
sub
faddl
rclb
lret
enter
jns
sub
loope
lds
ja
stc
inc
loop
dec
ret
sbb
sub
pop
fwait
imul
and
jp
and
insb
xor
icebp
call
or
dec
cs
sbb
in
cltd
xchg
jl
divb
aas
stos
push
add
icebp
mov
cmp
mov
inc
mov
inc
sbb
xchg
pop
roll
jb
fisttpll
and
dec
adc
dec
scas
inc
push
out
std
mov
mov
or
mov
sbb
pushf
lret
popf
test
sbb
movsb
hlt
jns
push
loope
adc
ss
jl
stc
adc
or
into
dec
xchg
jp
cmp
mov
ljmp
cmp
mov
xchg
sti
adc
mov
aad
into
dec
inc
cmp
lahf
cld
mov
xlat
cmp
push
addb
mov
adc
pop
ds
xchg
pop
adc
fdivl
je
in
pop
jne
out
jb
out
add
lock
divb
mov
push
jl
iret
mov
inc
sarb
cmpsb
sbb
in
dec
out
fsubrs
jecxz
add
sti
cmp
rorl
out
push
jl
int3
or
xchg
and
cmp
mov
cld
jge
cld
std
jb
mov
or
mov
addr16
add
jbe
cwtl
inc
push
and
loopne
and
scas
push
and
xchg
cli
adc
xchg
stos
sub
dec
leave
mov
adcl
in
test
mov
push
or
into
jge
cwtl
rorl
inc
jmp
xor
xor
push
ja
xor
stc
mov
adc
add
sub
dec
xchg
pop
sub
push
mov
jb
je
or
mov
sub
add
cmp
xchg
mov
mov
outsl
xchg
xor
pop
sub
xchg
dec
pop
sub
mov
icebp
mov
lds
mov
jmp
mov
inc
jno
inc
dec
inc
inc
out
jbe
cmp
shlb
push
and
mov
mov
jb
dec
ja
jle
cwtl
mov
mov
repz
push
cmpsl
cmp
xchg
add
jge
dec
pop
pop
aad
add
loopne
test
jbe
sub
aad
push
sub
fdiv
imul
fwait
xlat
pop
and
cld
scas
mov
mov
push
cwtl
shr
xadd
sbb
and
leave
insl
xchg
sub
repz
push
adc
jno
pop
pop
and
fcomp
fstpt
sarl
xchg
int
fadd
cmp
add
mov
out
outsb
das
xchg
jmp
mov
jge
addb
test
es
and
cmp
xchg
jle
xchg
xor
pop
xchg
xchg
xchg
lcall
pop
cmp
push
nop
push
mov
mov
std
jnp
inc
test
adc
jecxz
sub
ja
push
es
add
xchg
inc
mov
jp
pop
aas
pusha
cmpsl
repz
es
nop
mov
clc
cmp
mov
pop
hlt
loope
cmp
mov
pop
xor
add
cmp
xor
xor
push
nop
xchg
mov
inc
fucom
mov
ljmp
pusha
fdivrl
dec
inc
dec
stc
js
mov
mov
cmp
and
dec
fbld
jp
mov
scas
mov
inc
mov
sub
push
cmp
dec
or
sbb
xor
inc
inc
xor
mulb
xchg
dec
or
push
mov
adc
pop
sub
push
ljmp
shll
ss
xor
xchg
into
add
add
push
roll
mov
repnz
mov
mov
mov
je
pop
cli
lret
mov
adc
loope
mov
and
push
fwait
push
mov
loopne
gs
mov
movsb
gs
mov
and
dec
addr16
cmp
pop
mov
and
mov
pop
add
mov
lcall
add
ja
outsl
adcl
mov
je
loopne
mov
adc
inc
lods
lcall
fsubrl
fstps
movb
push
fisubl
jb
sbb
push
pop
or
addr16
popa
bound
cmp
inc
adc
mov
or
cmp
lock
hlt
xchg
icebp
aad
rcrb
jmp
adcl
pop
pusha
mov
jo
test
sub
cld
popf
loop,pn
lahf
fstpt
pop
arpl
rcll
mov
mov
xchg
mov
sarb
sti
inc
jne
dec
ss
test
mov
nop
jle
cmpsb
scas
mov
scas
scas
hlt
pop
cs
cmp
outsb
mov
jnp
dec
pop
mov
pop
rcl
loop
loop
mov
jecxz
pushf
dec
mov
test
das
shlb
dec
iret
push
btc
out
xchg
dec
or
fiadds
sub
mov
xchg
out
outsb
aas
jb
xchg
out
and
inc
icebp
lret
mov
sub
rorl
pop
faddl
or
inc
into
fimuls
fidivs
out
mov
and
pop
jge
rcll
and
das
scas
adc
ds
dec
fbld
push
xor
hlt
pop
pop
ss
xor
lret
push
imul
movsb
aam
cwtl
in
inc
mov
cs
sub
aas
mov
sub
imulb
test
xchg
orb
jae
fisubl
lea
lods
stos
cmp
pop
xchg
jb
and
arpl
xchg
es
pop
push
lea
fistpl
subb
movsl
or
popf
sub
stos
shl
nop
negl
and
testl
repnz
xor
push
arpl
push
aam
pushf
add
call
push
and
call
sub
or
fidivrs
xor
imul
xor
fiadds
mov
js
and
jnp
jg
and
stos
pop
xchg
mov
push
jnp
dec
mov
roll
push
imul
in
adc
jb
imul
cmp
and
inc
insb
cltd
push
push
dec
fidivrs
ret
aas
inc
push
mov
rcrb
in
adc
lahf
fldenv
add
xchg
outsb
xchg
ds
out
mov
lcall
in
or
aad
movsb
or
ds
aam
cmp
xchg
popa
cmp
in
mov
add
std
xchg
outsl
scas
pop
cmp
fstps
sub
lods
mov
lods
mov
das
sar
scas
outsb
bound
mov
pop
push
sti
inc
push
cld
pop
jne
sbb
std
test
pop
or
or
in
rcl
aaa
jge
and
lret
sahf
push
outsl
cmp
mov
adc
vmwrite
pop
pop
lea
negl
push
pop
push
out
test
cmp
add
jmp
cmp
out
pop
xor
es
loopne
in
jo
pop
mov
add
mov
cmp
and
addb
and
pop
xor
jmp
add
in
cmp
aam
ljmp
mov
ret
loopne
inc
and
imul
or
cmpsl
fldcw
pop
test
xor
fwait
pop
dec
int
std
sub
jb
xchg
and
loope
mov
fsubp
mov
and
cld
push
adc
xchg
lea
and
or
xor
sbb
xchg
invd
mov
pusha
sbb
push
cld
inc
in
jns
je
jl
popf
sbb
mov
ret
loop
mov
loopne
mov
pop
stc
xlat
push
pop
xchg
popa
cmp
jecxz
sub
or
test
mov
cs
shll
adc
dec
mov
mov
cld
js
cmp
repnz
dec
insl
out
add
enter
les
jns
push
loop
push
xchg
adc
inc
or
jg
jle
je
ja
jnp
sub
mov
daa
xchg
andb
enter
xchg
aam
in
imul
xor
pop
rcrl
mulb
loop
out
mov
push
int
mov
and
xchg
push
xchg
sbb
or
inc
jno
xchg
ret
jno
aam
mov
ret
or
rcr
cmpl
into
test
xor
mov
xchg
adc
xor
rorl
dec
mov
jne
cltd
cwtl
inc
sbbb
jecxz
inc
or
call
cmp
sbb
sbb
arpl
cmp
cwtl
jge
repnz
pop
mov
sub
dec
dec
jg
jmp
xchg
xchg
inc
mov
setae
es
arpl
cs
lret
jp
call
push
stc
sbb
test
lods
pusha
loopne
inc
sbb
add
xchg
add
stc
dec
std
out
jb
jp
push
sub
repz
xor
in
push
ss
outsb
xchg
cmpsl
pusha
les
push
pop
mov
int
jne
out
adc
or
fistl
push
dec
pop
lods
loop
pushf
xchg
call
add
xchg
cmc
xchg
cmpsl
push
cmp
xor
cmp
mov
test
in
pop
cmp
roll
xchg
mov
loope
in
xchg
fwait
out
push
dec
jbe
and
out
sbb
add
ja
paddq
les
xchg
dec
xlat
shrl
sub
pop
cmp
jp
aam
pop
jmp
cmp
add
imul
xlat
and
add
mov
jg
in
add
es
add
mov
pop
push
push
daa
xorl
push
fcom
adc
cmpsl
pop
mov
sub
outsb
mov
pop
jbe
pop
xchg
test
add
or
mov
sbb
xchg
jnp
xchg
insl
test
push
loop
inc
test
addr16
sbb
and
inc
fidivrs
aam
dec
ljmp
mov
mov
in
pop
cmp
fldl
mov
out
pop
push
fdivrs
mov
test
sahf
inc
imul
xchg
and
hlt
dec
mov
and
mov
dec
xor
inc
cli
sub
inc
sarb
cwtl
mov
lea
stos
rcrl
cmpsl
fstl
mov
adc
jne
or
cmp
mov
xadd
mov
ficomps
loope
cmpsb
call
pop
or
or
sbb
rolb
pop
pop
daa
mov
int
aaa
jns
shrb
cmc
sub
mov
int
or
imul
cmp
push
or
movsl
faddl
repz
mov
or
test
dec
jmp
icebp
std
push
scas
and
sbb
shr
xor
lret
cmpsl
int3
stc
add
sahf
push
test
mov
test
repnz
inc
mov
mov
or
lods
je
mov
cmp
sbb
movl
sbb
xchg
popa
cld
out
int3
negb
mov
cltd
sbb
mov
lcall
jae
data16
outsb
inc
mov
cmp
xor
xchg
jmp
lods
push
pop
cmp
dec
inc
insl
add
fistpl
loop
sbb
ss
or
and
aam
pop
mov
xchg
pushf
mov
sbb
sub
out
aaa
inc
fistps
mov
push
xchg
lret
xchg
add
jo
add
fsubl
cwtl
mov
lock
cmp
and
jecxz
pop
jmp
fs
inc
cmp
sahf
call
inc
mov
push
adc
out
int
lods
std
mov
sti
pop
mov
xor
jg
fs
push
add
adc
in
push
repnz
stos
cmp
in
lock
mov
xor
js
jb
add
es
xchg
mov
xchg
pop
jns
sub
add
mov
fiaddl
add
add
pop
push
push
notl
pop
cmp
fistps
mov
ja
es
in
mov
pop
push
pop
and
stos
shlb
cld
sub
addr16
add
sbbl
jge
pop
enter
out
inc
push
mov
push
dec
movsl
mov
ljmp
outsl
xor
out
and
inc
or
fistpl
mov
fildl
adc
cmc
mov
push
shlb
stos
cltd
aam
enter
xchg
movsl
xchg
jo
inc
jle
push
mov
xlat
mov
scas
notb
out
test
jb
fmuls
js
out
xchg
add
out
dec
sbb
call
or
adc
imul
jmp
sub
sahf
pop
add
sbb
push
lahf
scas
scas
dec
lahf
mov
mov
xlat
xchg
and
dec
xor
dec
sbb
insl
pop
xorl
leave
repnz
out
mov
and
lock
and
pop
dec
dec
xchg
dec
repz
ds
cmc
aam
pop
fwait
sbb
or
mov
mov
mov
out
add
fs
sub
sub
std
jg
sbb
out
mov
adc
loope
daa
das
xchg
loopne
dec
hlt
xchg
sbb
cmp
mov
insl
pop
popf
sub
lret
push
clc
es
push
pop
mov
ss
push
std
inc
inc
jmp
pop
push
sbb
sbbb
les
push
subb
lds
pop
cmc
and
aam
jp
icebp
lret
mov
jo
aas
xchg
fiaddl
sub
es
fwait
shl
iret
push
movsl
sub
push
adc
in
pusha
adc
pop
sets
sbb
data16
dec
test
aaa
inc
out
pop
mov
adc
dec
iret
lods
aam
jb
pop
xchg
sbb
dec
lea
jne
out
shrb
sub
push
cltd
add
xchg
icebp
ss
sarb
pop
push
inc
rolb
jae
sub
mov
xlat
push
addr16
xlat
cs
lahf
orb
and
sub
inc
adc
push
leave
pop
mov
xchg
in
mov
dec
out
arpl
jmp
dec
xchg
addl
push
jmp
jo
sbb
lahf
jns,pt
inc
shrb
cld
cwtl
sbb
sbb
ja
rcr
xor
mov
xor
sbb
test
loop
addb
shll
aaa
adc
mov
and
stos
mov
fwait
lods
ja
fbld
mov
mov
inc
mov
rorl
push
jl
push
mov
dec
inc
out
inc
push
lcall
loopne
xor
lds
sbb
loop
pop
insb
pop
test
lahf
push
lahf
mov
aad
sub
fcoms
pop
dec
inc
and
mov
pushf
icebp
xchg
bound
push
sub
test
out
and
push
pop
mov
out
aad
call
add
out
dec
fnstsw
shl
enter
das
in
inc
cs
or
arpl
repnz
xchg
fsub
lock
mov
push
int3
sahf
mov
loop
imull
std
and
pop
mov
or
push
add
cmp
sbb
dec
lea
sbb
push
out
mov
xchg
test
inc
sti
ret
xor
push
outsl
and
das
lcall
xor
jge
pushf
movsb
fwait
pop
into
sbb
xor
cmpsb
into
jb
xlat
lock
mov
dec
incl
stos
jmp
sbb
loop
out
cmp
pop
loop
sahf
bound
outsl
inc
imul
cs
out
xor
cmp
ds
sahf
cmpsl
aaa
sub
int
and
int
adc
pushf
jecxz
loope
addr16
mov
lock
aaa
sbb
cmpsl
ja
outsl
sub
pop
hlt
bnd
inc
sub
repz
jg
mov
jno
and
pop
cli
cs
ja
mov
es
aaa
leave
adc
sbb
sahf
mov
and
popa
or
std
sub
pop
aas
ja
cmp
sub
mov
fcmovb
imul
jnp
and
jl
cmp
sub
push
inc
mov
xor
inc
roll
inc
aam
adc
jmp
ret
mov
xchg
dec
jl
dec
push
cltd
testb
pop
pushf
mov
cld
clc
or
ficomps
xchg
enter
ret
jbe
jb
lret
dec
adc
cmp
xor
je
repz
jo
pop
iret
pop
test
and
jp
or
sbb
cmp
lret
movl
pop
iret
enter
enter
and
roll
mov
std
add
mov
cs
hlt
nop
test
or
mov
das
stos
pop
push
int
push
in
outsl
jl
fnstenv
lock
mov
jbe
and
pushl
push
mov
sub
mov
adc
addr16
fsubr
ds
sahf
test
mov
dec
xor
fmull
cmp
push
mov
mov
daa
or
mov
daa
or
xor
jle
jbe
enter
fisubl
test
cwtl
add
out
add
ret
std
inc
addr16
xchg
into
sub
int3
push
push
in
idivb
mov
cmpsl
jnp
mov
ficomps
inc
cltd
lcall
test
mov
scas
lret
popf
and
int
add
outsb
stos
daa
rorb
add
lahf
sub
push
xchg
loopne
and
jbe
or
xchg
push
xchg
dec
pop
mov
out
out
push
shr
sbb
dec
les
hlt
cmp
sub
dec
fwait
jne
das
sti
test
negb
fs
ret
jl
pop
pop
xor
cmp
shrl
scas
jno
cs
imul
shl
ret
lret
scas
arpl
push
and
or
cmp
jg
pop
pusha
pop
jb
inc
xchg
lret
fbstp
add
imul
divb
mov
imul
out
inc
in
push
out
mov
xor
scas
popa
fisttps
aam
mov
les
aas
jae
sub
popa
sub
out
mov
sub
cltd
cs
shlb
in
pop
divb
mov
pop
push
imul
ret
out
dec
shl
adc
and
pop
inc
pop
mov
das
mov
jnp
divl
adc
jnp
sbb
cs
mov
inc
popf
dec
mov
inc
push
jecxz
jno
enter
and
xchg
pop
dec
lahf
inc
fiaddl
pop
cmc
pop
ret
imul
sub
ret
and
mov
mov
adc
inc
lods
jne
fistl
ret
out
mov
adc
push
fldt
out
sub
sbb
mov
ud2
cmp
jno
cld
fnstenv
mov
push
ret
rorb
rcl
data16
std
mov
imul
lret
enter
repnz
cli
frstor
mov
xor
repnz
mov
inc
adc
lret
xchg
xchg
fs
in
cmc
fs
inc
push
mov
rcrl
xlat
iret
sbb
inc
mov
repnz
out
xlat
adc
jnp
pop
into
xor
lock
pop
mov
mov
scas
xor
xlat
imul
stc
mov
lds
mov
int3
xchg
mov
sar
sub
dec
pop
andb
mov
or
pop
stc
lds
jg
lock
mov
in
jo
outsb
jp
xchg
roll
jb
inc
insl
mov
or
dec
and
into
lods
jne
push
lds
fs
ret
andl
addr16
xor
subl
mov
mov
in
les
mov
dec
and
xor
jp
call
iret
jecxz
add
in
fists
addr16
add
xchg
xor
jmp
fisttpl
sbb
mov
insl
in
push
xchg
jmp
or
shrl
sbb
sbb
sbb
and
movsl
pop
repz
enter
pusha
mov
mov
aaa
push
fisttpll
outsl
cmp
outsl
mov
mov
clc
dec
mov
insb
test
adc
clc
pop
loop
cmc
jno
adc
jp
push
xor
rcll
shrb
mov
imul
lods
xor
or
or
addl
add
jmp
cmp
jnp
xchg
aad
pop
pop
push
addr16
sar
sub
sbb
add
arpl
push
testl
rcl
je
lds
gs
jecxz
push
rolb
icebp
and
xchg
ds
xor
jbe
cmp
push
xchg
lea
jno
mov
push
mov
pop
sub
cmp
and
test
faddl
outsl
and
andb
jb
fwait
icebp
mov
in
dec
insb
insl
push
lods
xor
pop
mov
xor
xor
lea
mov
mov
add
push
repz
sbb
addb
jmp
outsl
orb
out
pop
test
pop
repnz
xor
mov
inc
addr16
pop
fadds
idivb
mov
xchg
cmp
adc
popf
stc
and
push
test
js
xor
int3
dec
dec
inc
mov
mov
stos
mov
jbe
in
jnp
adc
add
mov
loopne
repz
xchg
sub
into
mov
pop
jne
pusha
int3
mov
fadds
loopne
xor
mov
nop
icebp
out
jno
jno
sbb
ljmp
sub
leave
out
mov
repz
dec
mov
push
xchg
or
leave
push
sub
sub
xchg
sub
jg
jle
sub
lock
push
pusha
rcl
scas
push
push
mov
xor
popa
pop
mov
loope
sbb
mov
dec
push
xorl
jbe
loope
sub
outsl
mov
adcb
out
cmp
lea
jno
xchg
lahf
fs
xor
xchg
rcll
mov
xor
cmp
pop
cmp
or
xlat
inc
add
dec
jo
pusha
movsb
notl
or
adc
les
test
stc
mov
pop
xor
xor
sbbb
push
push
shl
inc
add
xchg
rcr
push
xor
jge
mov
dec
and
xor
xchg
mov
inc
push
scas
mov
push
bound
test
insl
dec
inc
jno
mov
push
jnp
fidivs
cmp
and
inc
fistl
xchg
pop
mov
lahf
stc
inc
je
cwtl
mov
adc
pop
fwait
jb
ss
sub
out
jb
pusha
dec
aam
lret
push
xchg
mov
jecxz
popf
sbb
movl
or
outsl
mov
movsl
and
aaa
mov
imul
outsl
aaa
pop
mov
pop
in
cmpsl
add
lret
jb
lea
mov
js
data16
aas
loop
lret
xchg
loop
dec
stc
or
xchg
sbb
cmp
jmp
dec
mov
in
mov
insb
pop
jmp
mov
sahf
pop
mov
mov
repz
mov
ljmp
cli
or
fwait
mov
xor
push
dec
mov
je
sbb
mov
jecxz
rcl
mov
pusha
fidivrs
cs
ja
jecxz
mov
fchs
or
adc
jle
ret
mov
jnp
mov
jmp
push
and
pop
push
out
push
push
popa
pop
mov
add
add
out
mov
mov
out
sbb
mov
mov
or
cmpb
lcall
jb
sbb
cwtl
fadds
daa
inc
stos
dec
addr16
add
pusha
stos
jo
xor
push
cld
sti
mov
lcall
vpandn
sbb
rorl
push
adc
scas
mov
mov
pushl
jns
jbe
dec
sbb
es
cmp
sub
imul
or
mov
or
rcrl
and
sub
testb
push
in
pop
call
lods
mov
outsb
jno
xchg
cwtl
add
xchg
insb
out
mov
cmp
push
lahf
sub
aas
xchg
lret
cmp
jg
shlb
inc
mov
xor
ss
xor
stos
add
pop
insl
cli
mov
mov
dec
add
push
out
shr
out
fnstenv
ja
arpl
rcrl
cmp
shlb
gs
outsb
add
iret
ss
pushf
pop
mov
xchg
lahf
push
mov
unpcklps
and
push
lea
mov
mov
and
sti
push
insb
lods
aas
loope
cmp
jl
lods
stc
sub
push
stos
mov
push
fsubrl
sub
xorb
or
icebp
dec
repz
sub
ret
sbb
enter
sub
gs
sarb
pop
sahf
mov
testl
jle
jae
icebp
out
idiv
add
push
push
andl
add
loopne
push
sbb
pop
adc
leave
and
repnz
test
cld
loopne
mov
leave
xor
lcall
sub
pop
push
xlat
mov
jb,pn
and
cli
xchg
mov
push
stos
cwtl
movsw
cmp
jnp
movl
test
push
inc
movl
mov
lea
in
mov
cmp
cmp
add
out
dec
sarb
add
cli
aad
fists
stc
addr16
orb
movsb
fisubrl
or
xor
jmp
sub
hlt
inc
pop
adc
jp
fwait
pop
mov
enter
in
cwtl
inc
int3
enter
push
lret
pop
out
or
in
outsl
jg
mov
xchg
ljmp
rorb
sbb
xor
rclb
add
push
stos
xchg
sbb
push
psubw
xchg
cmp
outsb
out
mov
lea
pushf
fldcw
sbb
repz
dec
call
shlb
add
sbb
stc
andb
pop
cltd
pop
jmp
sbb
lahf
enter
sub
flds
jl
xchg
xchg
add
mov
mov
mov
shrb
sbb
cli
add
inc
jno
repz
hlt
push
fnstsw
cmp
pushf
or
sub
pop
addb
or
fs
sub
jg
testb
add
rcrl
test
insl
mov
sbb
cld
xor
dec
and
pop
push
dec
in
jo
arpl
sbb
push
stc
sahf
inc
push
mov
vmovq
rclb
cld
adcl
inc
xchg
imul
dec
out
push
mov
fsubr
or
inc
pop
aam
and
add
mov
sti
sub
jl
push
loopne
lock
mov
or
mov
mov
inc
mov
and
fwait
ds
xchg
sarl
rcll
fsubrl
and
clc
mov
shl
cli
adc
push
dec
sbb
dec
insl
inc
sub
mov
adc
arpl
loopne
xor
adc
cmp
inc
test
push
jne
push
jnp
cmp
outsl
adc
in
and
xor
cld
in
xchg
cmpsl
or
out
ret
out
and
xchg
xor
xor
cmc
shlb
and
adc
mov
sahf
push
outsl
inc
fsubrl
adc
loop
pop
jge
adc
rcrb
imul
cs
push
jp
outsb
sbb
fdivl
shll
test
push
jnp
sahf
jle
cs
fildll
outsb
xchg
cmp
sahf
pop
push
sbb
andl
mov
in
aaa
std
adc
mov
jns
cmc
push
repz
andb
cmc
sub
lods
xchg
lea
or
adc
sahf
mov
in
int3
into
or
xor
mov
jnp
xor
xchg
imul
testl
bound
and
popf
sub
and
adc
lahf
cmp
jle
xor
mov
push
cmp
mov
pop
or
mov
cmp
fs
inc
imul
add
je
test
jmp
ds
in
mov
mov
rcrl
leave
stos
inc
scas
jae
sbb
xor
dec
pop
jecxz
pop
xor
mov
incb
imulb
cmp
jnp
xor
stos
addr16
ja
dec
je
popa
cmc
int
cltd
fstl
push
mov
mov
and
mov
inc
jo
mov
add
dec
pop
and
out
and
movsl
mov
aad
jo
pop
xchg
add
cs
or
xchg
scas
movsl
jb
fnstcw
jge
xchg
loope
and
lock
pop
outsl
cmp
int
sbb
cmpsl
ud0
jl
fsubs
into
mov
push
and
out
inc
inc
lahf
sub
in
mov
mov
add
jbe
or
out
test
pop
xchg
js
psllq
cmp
and
adc
mov
adc
inc
push
rorl
int3
daa
jecxz
push
loop
jmp
cmp
lods
int
xchg
sbb
dec
dec
pop
or
gs
int
daa
push
into
mov
sub
test
popaw
addb
aam
dec
jge
gs
sub
push
int
call
leave
mov
insl
or
sbb
dec
repz
cmc
jns
lods
fcmovnb
repnz
or
testl
sub
test
push
js
sbb
jno
adc
inc
add
ret
add
mov
ja
out
ja
stos
mov
fldl
inc
arpl
stc
pop
push
ret
push
cmp
mov
dec
ljmp
xchg
inc
push
xchg
ja
aaa
stos
shr
mov
mov
lret
jecxz
xchg
and
mov
pop
aaa
les
int3
jnp
pop
pusha
js
sbb
or
or
aaa
into
movsl
ss
rcrb
xchg
inc
jl
sahf
fsubl
imul
or
mov
xor
call
push
es
inc
mov
inc
mov
mov
jae
adc
outsb
xchg
jb
lods
sub
scas
dec
adc
mov
cwtl
pop
xchg
push
cltd
ljmp
leave
cmpsb
mov
mov
pop
bound
or
shll
icebp
mulb
sbb
xor
or
mov
subb
in
les
xor
inc
adcl
aas
pop
push
pop
mov
inc
gs
arpl
adc
popa
sbb
movups
xor
fisubrl
jge
jne
sti
inc
sub
sti
into
mov
out
push
add
ss
mov
filds
movsl
arpl
mov
dec
adc
pop
insb
iret
dec
les
push
call
daa
jle
mov
test
xchg
or
xchg
lcall
mov
loope
mov
mov
fwait
dec
cmpsb
cmp
cmpsl
push
aas
mov
mov
xchg
lcall
outsl
cmp
cmpsb
jle
rcll
xchg
pusha
shr
and
xlat
fldt
fiaddl
pop
adc
in
jecxz
fimuls
scas
and
push
ja
test
ja
xor
outsl
leave
cs
lea
mov
repnz
pushf
dec
push
mov
inc
add
add
aad
jae
pop
aad
adc
aas
mov
cs
std
orl
arpl
insl
mov
sbb
loop
or
mov
jp
test
leave
aam
pop
push
sbb
lea
ja
pop
sbb
scas
dec
push
lods
aas
lcall
xchg
imul
dec
mov
loope
addl
pop
outsl
xchg
dec
push
push
jge
jne
xchg
xchg
xchg
cmp
push
mov
xchg
or
sbb
lcall
jmp
mov
loop
loopne
cmp
ljmp
push
mov
bound
jge
testl
enter
adc
add
inc
sbb
sbb
mov
icebp
das
mov
jp
push
push
sub
mov
push
inc
shrl
cs
inc
sbbb
mov
lahf
push
push
insb
mov
fldl2e
jb
or
cmp
test
adc
dec
pop
scas
sbb
xchg
dec
rorl
scas
mov
adc
xchg
jbe
pop
movb
nop
cmp
pop
das
push
gs
dec
popa
mov
cmp
ret
loop
cs
sub
stos
stc
xor
test
std
sub
push
ret
sub
lcall
pop
sub
in
adc
lcall
imul
mov
insl
xchg
add
stos
and
mov
dec
jp
imul
sbb
lods
sub
add
iretw
inc
push
xchg
mov
mov
or
xchg
mov
mov
ljmp
dec
and
fcomi
insb
push
cmc
scas
sbb
leave
jae
icebp
fsub
adc
pop
dec
mov
imul
jle
and
push
mov
push
insb
pusha
sub
lret
cmp
cmp
add
xchg
repz
out
leave
jp
movsl
das
mov
dec
mov
jno
push
lret
add
cld
call
or
out
dec
push
sbb
xor
jns
insl
ficoms
std
pop
cwtl
adc
popf
cmp
mov
stc
cmp
sub
adc
xchg
jns
scas
jmp
icebp
sbb
jnp
cld
mov
jmp
sbb
mov
jns
aam
out
lock
les
lock
and
pop
aad
iret
cs
mov
arpl
pop
lahf
inc
pop
xchg
mov
bound
cmp
jne
mov
or
es
repz
arpl
inc
jl
int3
out
insb
frstor
jmp
ret
test
cmp
lea
jb
fwait
and
cwtl
pop
decb
out
xchg
cmc
xchg
and
inc
xchg
aaa
sbb
or
inc
mov
pop
test
repz
push
insl
jmp
jns
adc
xchg
and
push
out
stc
xlat
push
std
mov
sar
mov
out
pop
xlat
cmp
sub
bnd
push
out
aas
ds
push
mov
sub
dec
push
nop
inc
adc
xchg
or
xchg
mov
mov
mov
cmc
sub
fnsave
stos
and
inc
jbe
dec
xchg
std
mov
iret
stos
das
dec
cmpsl
cmp
in
aam
out
xlat
mov
add
push
push
push
or
dec
pop
cmpsb
sbb
imul
lds
stc
in
cmpsb
cli
jb
inc
pop
fildl
pop
sbb
dec
cltd
cld
and
adc
mov
dec
dec
mov
push
mov
inc
sub
xchg
scas
rolb
ficompl
pop
lods
or
push
jns
xchg
ljmp
imul
imul
sbb
fdivr
jno
pop
add
jne
insl
sub
ret
pusha
xor
jp
jle
push
dec
cmpsb
add
push
dec
mov
in
ja
fildll
xchg
lods
push
push
jp
push
fimull
out
shlb
jp
pop
clc
jae
mov
xor
cmc
inc
test
out
iret
loop
mov
stc
scas
cli
ss
out
xor
and
stos
xlat
mov
stos
lret
pop
test
and
arpl
ss
pop
outsb
subl
mov
mov
jnp
cmp
and
xor
push
add
mov
dec
popf
cltd
pop
jp
sub
lock
xchg
dec
push
mov
adcl
mov
les
pop
cmp
aas
sub
jmp
dec
add
popa
dec
jne
das
sbb
out
scas
aad
sub
cwtl
dec
mov
jbe
pop
push
ljmp
sbb
mov
or
into
inc
or
adc
cmp
push
mov
in
loope
cmpsb
xlat
inc
aam
sarl
dec
push
dec
decl
xchg
shl
inc
rcrl
cmpsb
push
add
movsb
jb
xchg
cmp
pop
xor
mov
mov
in
adc
pop
test
repz
mov
in
adc
sub
pushf
test
enter
sbb
push
stos
xor
stos
jnp
jns
test
mov
sub
dec
push
outsl
mov
or
pop
pop
cmp
xchg
test
lods
ror
mov
aaa
push
push
es
jbe
daa
arpl
mov
sub
pop
mov
adc
test
jnp
js
xor
lds
pop
rorb
cmpsb
adc
jae
shlb
mov
and
insl
lods
cmpl
pop
add
loope
into
ret
adc
dec
sub
xchg
cli
call
or
pop
lods
test
and
dec
pshufw
repnz
lock
test
mov
std
leave
push
jne
sub
pushf
add
mov
scas
cltd
in
and
cld
xorb
mov
push
addr16
test
test
and
sub
jle
mov
mov
mov
test
cmc
jecxz
sbb
data16
mov
mov
sub
pop
adc
mov
lcall
orb
cmp
cltd
cmp
add
mov
xchg
aam
inc
sbbl
push
inc
or
xor
xor
lds
mov
and
mov
pop
dec
adc
mov
ja
pop
int3
adc
dec
pop
incl
cmp
jb
mov
pop
sahf
sub
push
in
dec
push
imul
mov
jp
pop
mov
jb
aas
xchg
or
roll
push
dec
test
cltd
mov
xor
lock
add
push
and
lret
movsb
cltd
sub
inc
rol
pop
pusha
mov
loope
loop
push
adc
xchg
frstor
sbb
arpl
lret
pop
adc
addr16
xchg
and
leave
pop
out
add
dec
mov
rcr
loopne
jg
dec
push
xor
outsl
idivb
push
les
js
testb
push
rcrl
push
ror
lret
dec
test
ret
push
movsl
out
inc
pop
clc
inc
loop
dec
pop
jbe
mov
pop
and
outsl
dec
fcomps
xor
and
int3
jb
mov
test
fwait
xchg
push
cmp
repz
inc
mov
sbb
arpl
dec
mov
fmull
jo
das
movsb
xchg
mov
rcll
mov
mov
inc
cld
sub
lcall
pop
dec
loopne
mov
mull
mov
push
out
rcrl
mov
aam
and
xor
mov
push
fs
mov
iret
add
mov
and
xlat
add
xorb
xor
js
in
mov
insl
adc
mov
and
ss
pop
cltd
adc
or
in
mov
sahf
push
stos
jmp
jg
stc
inc
outsb
std
out
xchg
test
xchg
out
mov
mov
daa
xchg
imul
lahf
shlb
pop
addr16
stc
sbb
adc
repnz
scas
xor
mov
add
add
jb
aas
sub
cmpsb
les
mov
mov
cs
xor
mov
or
sbb
mov
push
loopne
into
shr
xchg
xor
add
aad
adc
and
push
sbb
or
push
xchg
xor
mov
addr16
mov
lods
xchg
xor
cmp
into
aas
ds
lds
sub
fwait
ja
mov
daa
xor
mov
xchg
xchg
mov
ficoms
sti
iret
ljmp
sarb
dec
sbb
pop
push
inc
sbb
pushf
ds
jbe
mov
sub
pop
out
test
mov
push
repz
nop
sbb
mov
mulb
sarl
lods
dec
pop
xorb
xor
das
push
inc
lods
xchg
jnp
cmc
xchg
pop
mov
out
add
imul
dec
je
rclb
cwtl
mov
mov
sub
sbb
faddl
cmp
jne
outsb
sbb
inc
call
push
lea
xchg
mov
dec
dec
fcmovu
int3
ret
add
dec
and
aad
rclb
jg
and
dec
mov
push
lcall
movsb
cmp
adc
nop
ss
enter
sbb
dec
jle
ret
mov
lret
lret
xor
cmc
iret
pusha
cld
cmpsb
sbb
mov
jecxz
jno
xchg
jle
sub
inc
ljmp
call
mov
add
push
incb
xlat
divl
test
into
loop
cli
das
idivl
sub
mov
mov
fs
jno
rcl
or
dec
sub
pop
outsl
scas
adc
dec
test
jns
sub
mov
pop
jae
adc
loop
repz
iret
xchg
and
mov
push
add
mov
gs
mov
mov
imul
sbb
sbb
in
int3
jae
scas
push
mov
mov
test
adc
fwait
loope
xor
jns
fldenv
clc
iret
push
mov
jmp
jp
outsb
and
sbb
mov
lret
lret
subl
sti
sub
pop
pop
ret
sub
mov
fwait
dec
dec
sbb
pop
xchg
mulb
fdivp
mov
dec
sbb
fidivrs
push
push
pop
js
dec
ret
lods
sub
jbe
ror
loope
xchg
stos
add
fldenv
pop
fsubs
adc
rcll
loop
sub
sbb
lret
jb
scas
js
push
xor
into
loop
in
mov
stos
cmpl
movsl
mov
stos
cmp
push
lds
outsb
adc
aas
pop
push
sbb
jecxz
outsb
xchg
jns
shll
loop
dec
sub
bound
pop
dec
movsl
pusha
pop
add
dec
adc
cli
loopne
test
iret
or
inc
mov
jbe
pop
loopne
and
add
fcoms
sbb
sbb
pusha
add
orb
push
jnp
sub
data16
push
addr16
adc
push
fcmovnb
subb
xor
fnsave
ret
js,pt
sbb
or
xor
cwtl
and
mov
mov
in
xchg
sub
dec
adc
jne
lea
sbb
lds
mov
xor
cltd
and
sbb
dec
xchg
sbb
jbe
fcompl
xchg
fistps
jae,pn
pop
xchg
cmp
sbb
or
cwtl
scas
push
push
jmp
add
fidivs
pop
push
outsl
addr16
test
arpl
int
pushf
jns
in
arpl
mov
adc
int
js
mov
push
xor
cmp
mov
mov
sbb
or
add
add
dec
pushf
int3
push
mov
shl
outsb
sub
rcll
and
into
loope
cld
divb
pop
lods
popf
lcall
xor
filds
hlt
aad
pop
insl
lods
clc
in
das
outsb
add
lret
sbb
call
mov
rep
stc
push
sbb
jne
xchg
fdivr
mov
cmp
xchg
fwait
lret
xor
test
cmp
mov
int3
std
mov
das
das
vsubss
inc
cmpsl
ja
lds
push
sub
inc
push
call
lods
dec
outsb
dec
mov
pop
push
notb
mov
mov
xchg
lcall
jl
mov
test
push
sbb
dec
mov
add
movsb
mov
jae
xchg
fadd
in
cmpsb
shrb
scas
pop
and
pop
jb
stos
out
sbb
test
in
push
js
pusha
pop
jb
sub
das
xor
lahf
das
dec
outsl
jne
jo
cmp
mov
mov
fxch
mov
lahf
mov
fbld
clc
jecxz
test
sub
or
repz
aam
dec
sbb
mov
js
jl
xor
leave
ds
cmp
pop
mov
inc
lcall
pusha
cli
imul
xchg
lock
or
adc
push
fdivrs
sub
test
aaa
jne
daa
add
negl
mov
mov
add
add
lcall
out
pop
stos
push
fisubl
mov
arpl
and
jg,pn
popa
fcoms
xor
mov
scas
jl
fmull
movsb
mov
mov
mov
stos
pop
jmp
adc
dec
sbbb
xor
push
and
add
clc
pushf
xor
es
fs
aaa
notl
mov
add
lahf
outsb
data16
sbb
jne
bound
scas
dec
jmp
divb
jl
lods
mov
test
jo
vmread
int3
fisubl
jbe
adc
xchg
aad
xchg
roll
mov
pop
sub
push
push
negl
adcl
mov
fcoml
jnp
xchg
loopne
jno
adc
stc
jno
imulb
ret
adc
int3
fadd
inc
movsb
sub
enter
xchg
pop
push
adc
xchg
fcomps
into
iret
mov
sbb
jge
xchg
pushf
add
xor
sbb
imul
dec
push
xchg
int
xor
repnz
add
jne
push
out
xor
dec
mov
dec
jecxz
mov
pop
mov
or
mov
mulb
dec
jnp
incb
imulb
fs
ja
push
in
mov
mov
les
aad
mov
rorl
pop
mov
mov
push
lcall
xor
cltd
mov
mov
js
jns
js
mov
leave
sub
fldenv
cmp
stos
nop
cwtl
sub
hlt
sti
popa
cmp
in
sub
popl
xchg
lret
imul
lods
xchg
fwait
mov
xor
adc
or
sbb
arpl
ss
and
push
push
or
adc
xchg
inc
notl
scas
xor
test
test
fldt
ljmp
repnz
icebp
and
adc
pop
lret
sahf
iret
xorl
fsub
loope
mov
ja
insl
xorl
stc
mov
mov
je
loope
jg
lret
pop
cmp
fs
sti
shll
gs
movsl
in
rorl
lcall
outsb
loop
mov
je
mov
mov
mov
cmp
jge
test
sti
sbb
cltd
aas
sbb
out
movsl
loope
xor
pop
xchg
or
leave
popa
xchg
jle
mov
fisubs
scas
mov
cmpsb
imul
bound
xor
lea
sub
popf
and
mov
cmpl
test
or
std
scas
inc
out
data16
xchg
loopne
xor
jbe
pop
or
int
in
inc
mov
in
les
fisubl
xor
fldenv
cmp
mov
loop,pt
cmc
mov
cltd
fmuls
das
adc
adc
aam
adc
enter
or
lahf
or
pushf
mov
or
fildll
pop
fwait
sub
stos
push
mov
inc
sti
cmp
test
sarb
push
call
push
pushf
cmp
addb
test
add
sub
inc
adc
lods
fistpll
ret
mov
loopne
repz
push
add
cmpsl
jmp
xchg
sbb
negl
lds
js
sub
iret
nop
repnz
ds
add
movsl
fcmovnb
xor
cmp
cmovg
dec
adc
scas
mov
movaps
mov
mov
movsl
mov
bound
popf
or
fcoml
xchg
data16
sbb
xchg
jbe
jne
and
insb
dec
aas
or
leave
and
xchg
push
mov
pop
adc
push
jnp
xchg
lcall
in
xchg
pusha
cli
addr16
scas
add
ljmp
aas
jl
cltd
or
adc
mov
rcrb
fistpl
xchg
xor
jmp
xchg
push
sbb
popa
subl
lret
and
and
mov
test
xchg
adc
jne
mov
in
dec
imul
ret
inc
adc
mov
notb
popa
pop
pop
xlat
xchg
xor
pop
icebp
add
push
jae
std
lahf
imul
movsl
imul
pop
dec
cmp
mov
dec
out
sbb
loope
rol
outsl
imul
mov
lcall
scas
aam
jne
aam
les
hlt
xchg
mov
dec
ss
mov
les
xchg
js
clc
push
sbb
adc
cmp
xchg
and
xor
pop
jbe
sbb
cmp
add
ja
and
jae
and
push
pop
js
or
hlt
sbb
push
sbb
aaa
rcl
pop
dec
mov
sarb
pop
jns
cld
cli
mov
jae
sub
stc
mov
push
mov
pop
lcall
sub
scas
cmp
popf
lahf
adc
mov
aam
jecxz
push
shll
lods
addr16
popa
idivl
push
js
int3
aas
jne
add
push
mov
xorb
stos
and
sub
jae
cmpsl
std
sub
ret
and
nop
pop
dec
adc
clc
xchg
sbb
data16
imul
adc
dec
nop
push
sbb
push
clc
repnz
jmp
mov
jle
mov
dec
repnz
xor
mov
scas
mov
xor
cmc
lods
push
mov
mov
cmp
in
push
shll
mov
rorl
movsb
aaa
or
jle
mov
dec
inc
data16
int3
cmp
mov
xchg
lock
pop
notl
shl
int3
repnz
aaa
ret
nop
pop
inc
sti
lock
push
dec
lret
int3
lcall
fs
push
mov
xlat
push
aad
mov
mov
pushf
mov
xchg
out
ss
sbb
lds
das
int
xchg
pop
dec
addl
ljmp
push
andb
ds
inc
shll
cmp
jae
pop
mov
adc
xor
iret
das
ret
scas
aad
sub
sub
jge
xorb
jb
fcoml
mov
out
cmp
pop
or
cmp
into
sti
loope
dec
aaa
pop
push
push
mov
dec
sbbl
jl
dec
mov
scas
fs
mov
aaa
loope
inc
and
xor
mov
and
pop
sbb
xchg
push
xchg
mov
cld
mov
popa
cltd
icebp
mov
pop
dec
xor
mov
adc
dec
inc
push
jecxz
sbb
mov
rclb
or
inc
xchg
push
sub
clc
test
lds
lret
std
mov
ljmp
arpl
sub
xchg
mov
add
test
dec
adc
jo
mov
shrl
jae
xchg
cli
jnp,pn
or
bound
pop
rcll
popa
cmp
pop
test
dec
frstor
sub
imul
xor
mull
iret
mov
cmc
pop
adc
mov
pop
xor
push
sub
mov
adc
cmpsb
ret
mov
iret
aaa
test
adc
cli
fwait
mov
sbb
jns
out
lahf
xor
dec
push
arpl
mov
sbb
mov
dec
pop
xchg
mov
pop
mov
mov
ficomps
xorb
sar
ss
cmp
mov
pop
pop
popa
sub
pop
mov
cmp
data16
jns
loop
fstpl
jmp
xor
pusha
sub
stc
xor
cld
jno
pushf
add
mov
mov
lret
push
or
push
mov
jnp
cmp
flds
xchg
and
jmp
movsb
pop
out
into
jge
aam
stc
or
ret
lahf
xchg
push
sbb
fistps
outsb
or
popa
pop
xchg
in
or
cmc
aaa
in
or
orb
dec
cmpsb
test
xor
pusha
jne
out
add
pop
xorl
cmpsl
xor
or
mov
cmp
mov
mov
mov
xchg
popa
fabs
ljmp
mov
xchg
cli
xlat
test
sarb
fcomps
sahf
cmp
and
cmp
fiadds
cmpsb
in
repnz
lods
add
dec
out
cmpsb
stos
inc
mov
out
and
add
jb
dec
sub
xchg
je
inc
cmp
dec
in
mov
xor
pop
test
mov
push
lret
jp
sub
fnstsw
add
stc
dec
mov
xchg
mov
or
xchg
leave
xchg
or
inc
push
dec
scas
mov
xchg
leave
xchg
cmp
ficoml
xor
mov
xlat
into
es
testl
popa
add
pop
jns
bound
or
in
loopne
mov
stos
adc
mov
jecxz
xchg
inc
xchg
xor
in
xchg
dec
cltd
inc
or
adc
jno
push
inc
push
fldcw
test
leave
xor
ds
mov
and
aas
xor
cwtl
add
push
inc
adc
pushf
testl
sbb
mov
mov
mov
hlt
ret
leave
int3
aam
add
lret
in
mov
sbb
cmp
mov
cmp
mov
sarl
sbb
jecxz
or
clc
dec
in
loop
cwtl
fwait
inc
jecxz
fldenv
and
jle
jbe
mov
and
push
jno
inc
push
aad
ss
rcrb
daa
or
mov
push
pop
movsl
xchg
inc
mov
outsl
add
bnd
aas
dec
dec
jae
jns
jge
push
leave
push
enter
add
push
adc
jbe
out
popf
adc
subb
sbb
cmc
adc
add
jg
stos
mov
rcrl
or
sub
stos
inc
xchg
pop
mov
xor
lahf
pushl
inc
mov
adc
add
popa
mov
sub
and
stc
ret
and
fbstp
adc
mov
repz
stc
sbb
inc
inc
iret
addr16
pop
mov
jno
add
inc
push
ljmp
lea
mov
andb
pop
arpl
cmp
jbe
mov
ss
movsb
xchg
sub
mov
in
xorl
sub
xor
fdivr
ret
add
adc
pop
test
cmpsb
push
subl
outsl
xchg
sahf
imul
mov
shlb
mov
dec
xchg
pop
scas
dec
mov
shll
movsb
mov
fistpl
mov
pop
mov
mov
aam
mov
sbb
lea
repz
loopne
gs
pcmpgtd
pop
dec
and
data16
jnp
lods
add
or
sub
adc
xorb
jge
shr
aas
sbb
pushl
jg
dec
or
adc
fcoms
dec
mov
mov
add
jno
leave
ret
ja
popf
cli
cli
xor
arpl
in
das
pop
adc
sarl
and
fstps
mov
jno
xchg
mov
jno
ss
mov
or
xchg
mov
jb
jae
fidivl
sbb
dec
or
insl
addr16
ret
xlat
pop
rcr
inc
sbb
sahf
and
and
loope
inc
xchg
imul
scas
icebp
pop
loopne
mov
popf
jbe
inc
mov
fisubrl
push
ret
dec
push
mov
or
fists
cmp
mov
mov
mov
cmc
scas
push
add
dec
js
mov
mov
loopne
and
inc
ds
test
lcall
mov
aas
jnp
negl
test
lock
pop
mov
fcomps
icebp
pop
cmp
fnstcw
pop
or
ret
and
out
adc
mov
inc
mov
outsl
mov
jge
mov
or
fwait
scas
cmp
mov
sbb
mov
in
orl
pop
js
push
and
cmp
pop
mov
mov
push
dec
popa
xor
cmp
js
sbb
jns
sub
movsl
gs
push
outsl
dec
pop
add
xor
xchg
pop
imul
mov
and
push
jb
jo
popf
lods
imul
repnz
cs
inc
test
adc
bound
pop
inc
jp
sbb
les
add
cmp
mov
cmp
icebp
je
out
popa
movsl
movsl
outsb
insl
imul
xor
dec
add
mov
icebp
or
jp
cmpsb
push
dec
loop
jns
mov
repnz
pusha
or
cltd
idivb
xchg
ds
dec
les
std
shll
std
das
xchg
xchg
push
loopne
add
addr16
clc
icebp
aam
sub
dec
xor
cmp
fcomps
call
iret
testb
lcall
bswap
cld
in
mov
pop
imul
mov
lahf
xor
jp
xchg
xor
pop
test
jle
jl
mov
in
into
push
jmp
mov
scas
and
loope
add
subl
jb
mov
mov
inc
aas
jecxz
cli
sbb
push
sahf
or
mov
and
hlt
and
rorb
aaa
stc
jecxz
inc
pop
and
rcrb
shll
imul
jecxz
sbb
jbe
pop
add
inc
jb
std
add
cwtl
xchg
in
hlt
aad
push
fsubl
xchg
pop
gs
call
push
in
jae
sbb
mul
loop
or
pop
push
lahf
sti
jnp
sbb
mov
sub
push
int3
lcall
pop
dec
ret
cld
notb
mov
notl
imul
mov
jno
mov
filds
lock
stos
bndstx
fstps
mov
fistps
dec
inc
orb
cmp
nop
loopne
sti
jg
test
inc
in
fistps
test
and
cwtl
iret
movsb
cmp
movsl
inc
mov
outsl
cmp
or
fdivrl
xchg
loope
mov
push
xchg
out
in
ret
sbb
pushf
std
movsb
cmpsl
pop
out
sbb
jb
mov
pop
clc
jge
mov
dec
lock
dec
pop
xchg
outsl
jae
mov
and
je
jl
mov
cmp
jns
adc
ffreep
repz
aam
jo
pop
mov
out
jae
out
mov
cltd
xchg
and
negl
inc
and
aad
jp
mov
cmp
into
add
stc
shrb
mov
fndisi(8087
lods
shll
hlt
fildl
cs
shll
sub
clc
test
cld
movsl
mov
xor
jle
rolb
adc
imul
mov
jae
fldenv
mov
jp
sbb
mov
pop
and
fnstsw
push
sbb
add
pop
push
pop
jecxz
cmp
adc
or
inc
jno
test
or
daa
jle
mov
mov
dec
in
push
jne
mov
movsl
mov
pop
xor
pop
aas
sbb
mov
push
dec
lods
add
js
sub
or
push
shlb
sahf
or
adc
xchg
and
addr16
mov
cmp
adc
mov
mov
mov
mov
out
cltd
in
mov
jnp
pop
int3
mov
inc
adc
add
loop
cmp
fstps
adc
or
sbbl
add
mov
addr16
adcb
pusha
out
call
out
gs
lds
outsl
lods
movsb
into
cmp
clc
cmp
aam
adc
pusha
ret
push
in
testb
pop
add
sbb
mov
dec
ljmp
sub
adc
pop
cld
sbb
adc
xor
sub
rcll
or
lcall
pop
mov
hlt
clc
mov
aaa
fidivl
sbb
mov
repnz
ljmp
mov
lcall
or
and
xorl
adc
pop
stc
sar
jno
decl
or
xor
mov
dec
dec
mov
fwait
add
dec
bound
js
mov
rcrb
sub
pop
pushf
popa
or
out
cs
shlb
push
sbb
orb
repz
cs
mov
mull
xor
pop
mov
in
and
xchg
lret
dec
xchg
inc
insl
mov
fsubl
rcrb
or
mov
add
cwtl
cld
sti
push
fmuls
pop
dec
push
sub
push
lods
lods
enter
aaa
jbe
imul
test
add
adc
push
fsts
sub
jb
mov
mov
cli
mov
sub
adc
ds
pop
fs
lea
mov
xchg
lods
push
arpl
xor
jo
loope
push
fimuls
jbe
sub
jbe
and
or
popf
cmpsl
repz
add
jg
xchg
inc
push
push
movsb
jb
fmul
shlb
and
push
mov
xor
jnp
popa
dec
mov
sbb
and
cmpsb
push
insl
adc
pushf
mov
sti
popa
hlt
test
fsubs
jl
sbb
aad
cli
lret
xchg
jmp
in
insl
sub
rclb
ljmp
outsb
pop
ss
add
pop
loopne
and
xor
adc
sub
mov
jns
adc
ret
clc
or
inc
or
push
or
sub
and
mov
call
mov
test
and
loope
push
mov
mov
gs
popa
ret
inc
xchg
jle
sub
into
cmpsl
in
enter
insb
loope
and
xchg
mov
das
mov
rorb
enter
out
cmpsb
pop
mov
cltd
ljmp
lret
mov
mov
and
in
cmp
pop
cmp
rorb
jnp
sarb
ret
push
in
int
jae
ljmp
xor
popa
loope
mov
pushf
lcall
cmp
push
push
push
ja
pop
mov
mov
dec
aam
pop
xchg
out
cwtl
dec
mov
fs
movsb
mov
mov
test
testb
or
and
mov
sarl
xorl
flds
data16
fcoms
jns
pop
lds
ficomps
addr16
sahf
sbb
xor
out
xchg
adc
mov
mov
addr16
ret
mov
or
pop
jae
ja
cmp
xor
jmp
add
mov
subl
adc
pop
dec
push
add
out
in
and
jne
pop
xor
ret
dec
or
sub
cmp
out
xchg
mov
mov
andl
lret
dec
shrb
stos
movsl
aad
jp
ljmp
mov
cs
lock
lds
xchg
in
jl
movsb
or
loope
or
je
ss
int3
adc
jge
mov
cld
stos
lods
xor
test
jp
lods
sbb
mov
insb
mov
jp
testl
and
gs
hlt
cmpsl
sbb
push
add
sub
sub
mov
ds
xor
xchg
insb
rolb
test
inc
sar
cld
sub
aaa
and
pop
in
push
adc
xchg
mov
mov
xor
mov
clc
jb
add
int3
mov
cmpsb
sub
jle
movsb
lahf
or
out
loop
aad
aaa
cwtl
inc
loope
imul
imulb
inc
pop
xchg
mov
sub
or
repz
std
xchg
xor
dec
and
mov
adc
push
jge
in
fnstenv
xchg
jge
rcl
mov
and
in
adc
das
movsl
daa
das
jl
pop
cmpsl
sarl
jg
dec
pusha
sahf
and
stos
test
xor
or
stc
test
xor
xor
push
push
out
inc
inc
jns
jb
push
mov
dec
sarl
push
mov
xor
and
cs
xor
xchg
insb
ja
adc
or
mov
out
movsl
mov
mov
out
xchg
nop
or
enter
pop
mov
xchg
imul
lods
std
stos
sub
or
xchg
push
mov
adc
repnz
xlat
jecxz
imul
mov
fnstcw
jbe
inc
jle
test
cltd
jl
sbb
jmp
test
es
sub
pop
inc
orl
mov
xchg
aaa
xor
lahf
push
iret
lahf
mov
push
pop
lret
cmp
push
addl
mov
or
in
or
and
pop
pop
dec
jp
mov
sti
rorb
ljmp
sbb
xor
sbb
sbbb
sbb
movsl
sahf
jbe
rcrl
sbb
jg
mov
sub
movsl
ss
push
push
iret
and
dec
movsl
jl
jns
jl
insl
arpl
mov
mov
jmp
in
mov
pushf
in
stos
stc
insb
pop
adc
jg
aad
ss
fxch
lret
adc
xchg
lcall
and
mov
and
mov
fcmovnb
jnp
std
and
xor
xor
xorl
jg
mov
mov
insb
push
cli
icebp
fists
pop
dec
add
fs
fs
sub
loope
mov
jmp
inc
sbbb
addr16
and
stc
push
mov
push
cmp
pop
rcr
ret
repz
leave
shrl
push
push
inc
iret
rorl
leave
repz
enter
mov
add
out
outsl
dec
les
mov
outsl
sub
and
pop
aas
pop
mov
mov
stos
stc
or
in
popa
xor
mov
jnp
popa
pop
push
fidivl
adc
and
movsb
pop
mov
push
lock
fisubrs
bound
push
pushf
les
mov
lcall
insb
subb
cltd
push
in
push
int
clc
dec
mov
js
pop
inc
push
mov
stos
ja
inc
loope
movsl
lret
in
pop
into
aam
cmp
fsubr
and
dec
cmp
push
fmul
push
loope
hlt
mov
or
dec
jnp
inc
push
sub
and
jo
xor
push
or
mov
xor
jbe
lret
mov
add
andb
fwait
sub
cwtl
emms
cmpsl
ret
push
into
add
repnz
in
loop
add
xor
mov
dec
xchg
xchg
loopne
fdivr
lock
sub
dec
scas
das
dec
jne
cmpsb
outsl
shll
stc
insl
mov
sbb
sbb
sbb
scas
xchg
lock
cwtl
cld
lock
mov
data16
sub
lret
mov
rdmsr
sbb
aam
fcmovnbe
jp
jb
mov
data16
rcll
mov
cmp
xchg
jne
push
sahf
out
pusha
js
push
xchg
stc
mov
xor
mov
je
sar
add
cmp
or
or
mov
mov
xor
lret
pop
inc
ljmp
pop
roll
lcall
out
pop
scas
shrb
mov
lahf
jecxz
lahf
in
mov
jb
sub
je
outsl
inc
inc
mov
cmp
adc
in
data16
add
sub
shr
xchg
fnstenv
nopl
mov
sub
cld
inc
sbb
add
cmp
filds
aam
fildl
cmp
cmp
jge
repz
add
adc
sub
and
cmp
push
out
xor
aam
rcll
pop
repnz
cmp
sub
ss
pop
xor
ja
jle
mov
pop
pop
and
repz
and
mov
sbb
out
jne
inc
cwtl
jno
es
cltd
jns
add
dec
stos
inc
jg
test
pop
mov
and
scas
insl
push
push
inc
lock
xchg
rclb
sub
jle
cmp
sbb
fxch
test
sub
and
pop
addr16
dec
sbb
xchg
cwtl
dec
mov
adc
lret
mov
pop
sub
scas
sub
mov
call
cmp
mov
adc
mov
pushf
or
pop
cmp
stc
jnp
aaa
test
push
jl
sarl
cmp
jmp
gs
cmp
pop
lea
inc
lret
mov
movups
shl
jne
idiv
int3
jl
cmp
sbb
mov
cld
push
jnp
mov
adc
cmp
cmp
out
stos
jo
orb
icebp
mov
jl
jae
rorl
in
push
adc
sub
xchg
jnp
cmp
lds
sbb
insb
cmp
push
sbb
inc
mov
decb
fstpl
fistpl
sbb
dec
ret
pop
cltd
rorl
in
in
push
mov
das
sbb
cmp
jnp
push
jl
push
pusha
xchg
sahf
add
fadd
pop
inc
xor
add
ljmp
sbb
sbb
test
test
add
or
add
fwait
sub
popf
cmpsl
int
mov
xchg
insb
pop
jbe
pushf
mov
mov
aad
add
pusha
pop
sbb
dec
fwait
mov
jnp
movsl
sbbl
out
push
nop
dec
mov
fwait
pop
test
lea
popf
adc
push
loop
sti
dec
in
mov
movsb
jae
cmpsw
ret
xor
or
lret
add
add
popf
jle
cmp
mov
loop
jb
int
stc
scas
xchg
xchg
xor
pushf
clc
imul
and
xchg
fucomp
jo
mov
xchg
iret
mov
loopne
sbb
addb
sbb
inc
dec
ret
rolb
loop
shrl
cmpl
pop
or
imulb
aas
fcoml
mov
cmp
stos
popa
or
mov
data16
or
jmp
ret
inc
add
test
sub
out
mov
sbb
loope
fmuls
xor
sub
in
dec
inc
and
xchg
jns
xchg
icebp
mov
jo
cs
mov
dec
xchg
fnstsw
dec
in
or
mov
add
pushf
cmpsb
mov
jle
fisubrl
cmp
cmc
push
xor
sub
pop
sub
pop
jp
cmpsl
cwtl
ljmp
rorl
jge
andl
jmp
shr
cwtl
lret
push
push
daa
or
std
jl
je
inc
inc
cs
push
rolb
pop
mov
es
rcll
into
inc
pop
adc
movsb
mov
imul
testl
xlat
cmpsl
xchg
pop
mov
mov
pop
icebp
les
mov
stc
stos
gs
adc
xchg
push
test
ret
out
sub
xchg
sbb
mov
mov
lods
jle,pn
gs
adc
xor
test
pop
repz
out
test
data16
cld
shlb
outsl
imul
mov
sti
dec
xchg
dec
mov
mov
pop
adc
dec
push
fld
addr16
or
lods
in
arpl
xor
or
mov
jge
jo
ljmp
push
dec
xchg
inc
stos
loope
aas
jae
jae
xchg
dec
inc
test
jbe
jl
pop
mov
mov
inc
xchg
sub
fwait
addr16
xchg
enter
pop
adc
popf
inc
dec
mov
xchg
dec
xchg
push
mov
or
cs
ret
in
push
sub
shlb
xor
ljmp
jo
stos
dec
jecxz
test
leave
stc
fs
mov
or
outsl
popf
mull
jns
and
lea
mov
xchg
cmp
int3
push
scas
int
out
pop
pop
repz
inc
xor
lret
movsl
shll
push
mov
push
push
mov
in
dec
test
fldl
imul
loope
sbb
sub
mov
cmp
xchg
dec
arpl
daa
jbe
insl
inc
push
sub
jo
enter
add
mov
push
ret
int3
fs
outsb
jl
fstpl
sbbl
inc
mov
pop
jne
and
insl
sub
and
xchg
lock
stc
mov
mov
out
or
call
xchg
leave
fs
and
hlt
inc
lret
or
or
fldl
rolb
jns
lds
popa
jno,pn
adc
mov
in
nop
xor
mov
enter
xchg
inc
jbe
push
nop
cli
or
test
push
insl
and
int
test
or
xor
pop
push
mov
xchg
sbb
nop
roll
add
add
jo
fdivl
movsl
push
xchg
and
aad
pop
mov
daa
sti
mov
in
into
push
dec
cmp
mov
mov
cmpsl
je
cmp
push
mov
int3
nop
pop
lahf
cmp
pop
xchg
aaa
mov
in
cli
stc
jg
pop
loope
mov
pusha
addr16
push
int3
cmpsl
pop
mov
out
clc
iret
xchg
out
lcall
enter
push
sbb
inc
xchg
mov
cli
push
fwait
js
jl
js
or
xor
mov
fwait
xchg
mov
lea
mov
mov
push
repnz
pop
xor
shll
out
xor
sbb
jmp
adc
pop
fcomp
add
jle
dec
out
daa
cmp
adc
push
push
pusha
and
cld
push
push
int
jle
lahf
or
jmp
xchg
xlat
lret
pop
mov
jae
andl
jp
jge
mov
int3
pop
adc
iret
sub
add
jmp
arpl
icebp
adcl
outsb
frstor
jbe
fcmovu
jl
pop
sub
mov
gs
and
jbe
sbb
ss
ret
push
subl
insl
jl
and
out
sub
mov
fwait
out
push
psubusb
test
idivb
add
and
loopne
mov
pop
paddd
jae
test
dec
les
fsts
lds
and
cmpsl
sub
cld
push
xchg
in
rolb
lret
jecxz
pop
out
adc
and
push
push
inc
out
shl
and
outsb
repz
repnz
inc
test
jle
push
out
jmp
dec
in
pop
jmp
ffree
mov
jnp
loope
lods
mov
mov
fldt
inc
dec
xor
inc
sysenter
mov
ficoml
adc
fnstenv
fisubs
movl
loope
lods
add
sbb
mov
mov
outsl
add
push
sti
mov
imul
push
test
xchg
xchg
rcrb
mov
test
mov
stos
fbstp
sar
std
or
mov
xchg
and
xlat
or
mov
inc
in
idivb
rcrb
pusha
xchg
scas
popa
pop
adc
push
mov
and
jno
into
movsb
adc
in
jecxz
inc
jnp
mov
mov
mov
lea
sbb
inc
lods
arpl
mov
or
hlt
push
aam
andb
inc
arpl
inc
icebp
inc
dec
cmp
mov
mov
leave
jmp
jae
fnstsw
push
xchg
rcll
and
das
mov
xchg
ljmp
and
shll
push
nop
mov
cmp
aaa
jb
sbb
hlt
jmp
std
jns
jo
fnsave
test
xor
pop
or
in
es
sbb
inc
test
jno
inc
cmpsb
clc
cs
pop
xor
inc
das
nop
jge
cmp
les
repz
pop
dec
xor
ret
mov
dec
lcall
push
test
jg
out
mov
roll
or
std
dec
call
cmp
sub
fsub
aad
mov
mov
jle
push
subb
push
xchg
test
sub
arpl
orb
cmp
inc
mov
ja
scas
sub
jnp
int3
lcall
xchg
daa
mov
fimuls
pop
and
push
push
clc
jmp
mov
inc
adc
leave
jecxz
jne
jl
jne
jmp
pop
jae
push
es
push
add
mov
jp
dec
adc
mov
mov
je
or
test
scas
push
jg
out
fistl
inc
jle
inc
jae
or
or
xchg
push
popa
inc
xor
cs
fwait
jmp
jge
rorl
adc
popf
xchg
lret
mov
push
hlt
fsts
aad
and
adc
adc
pop
lret
cmc
mov
aad
dec
xchg
push
arpl
adc
into
dec
lds
cmpsl
sub
enter
aam
les
sarl
lods
dec
cmpsb
cmp
rorb
repz
mov
xchg
xor
outsb
push
frstor
push
jno
add
cmp
mov
test
loopne
lahf
sub
xchg
jbe
int
ss
psubsw
aas
jbe
pop
loop
cli
inc
mov
xchg
imul
sub
in
nop
fnstsw
insb
outsb
jg
enter
idiv
lea
outsl
inc
or
fisubl
push
sbb
sti
lock
mov
add
push
xor
int3
pop
pushf
cmp
cli
adc
aad
inc
jp
jno
sbb
add
dec
jb
cli
scas
sub
test
in
lods
pop
mov
loopne
ljmp
mov
adc
addb
inc
pop
shl
lahf
ja
fnsave
xchg
cmp
test
pop
pop
push
jmp
xor
mov
pop
inc
dec
cwtl
ret
jo
dec
repz
lock
sub
dec
adc
out
int3
xor
cld
sub
scas
dec
fnstsw
and
data16
and
frstor
movsl
push
aad
sub
mov
adc
test
outsb
scas
ds
ds
dec
mov
adc
fstl
lods
out
ret
lock
pop
jns
pushf
add
jl
sub
or
sub
stc
inc
test
mov
sub
sar
add
rorb
movsl
in
inc
js
and
add
xor
add
shrb
push
jno
add
out
inc
xchg
mov
mov
sbbb
hlt
mov
mov
sbb
pusha
sbb
inc
jno
outsb
xchg
mov
lcall
addr16
mov
xor
push
popa
aaa
test
inc
cmp
sarl
and
ret
cld
addb
lret
xchg
in
cmpsl
pop
jnp
gs
lea
aad
cli
dec
dec
sub
xor
sbbl
xor
or
cmc
lods
es
ret
xor
js
rcrb
lea
clc
sbb
cmc
cmpb
sub
push
rolb
inc
frstor
jl
xchg
cmp
push
add
in
insb
daa
cmp
les
int3
mov
fcomp
js
or
xor
sbb
mov
mov
in
dec
les
xchg
bound
popf
cmp
lods
out
inc
lcall
inc
lods
repz
push
or
test
repz
and
outsl
jle
out
sub
popf
lret
leave
mov
push
rcl
enter
xchg
or
shrb
mov
pushf
or
sarb
add
mov
nop
pop
jbe
sarb
adc
out
xchg
rol
mov
or
ficomps
sbb
pusha
daa
pop
decl
pop
ja
adcb
pop
xor
dec
adc
jmp
mov
insl
mov
cmpsb
or
ret
js
fisttps
sbb
jnp
es
mov
xchg
lahf
out
xchg
nop
out
imul
dec
xchg
and
mov
mov
push
mov
sahf
fldt
xchg
das
int3
std
sub
mov
iret
test
icebp
mov
shrb
lods
add
cltd
mov
aam
jg
xor
push
adc
movsb
mov
lret
add
mov
jmp
sbb
in
cmp
fwait
fwait
dec
mov
not
lds
xchg
or
xchg
sbb
push
fsubrs
inc
dec
mov
jb
popa
and
xchg
push
mov
sub
bound
ret
xchg
lock
test
sbb
shll
mov
mov
lcall
mov
sub
sub
xor
dec
xor
sbb
add
cmp
gs
fdivl
je
popa
inc
mov
pop
push
and
mov
jnp
mov
out
movsl
xchg
int3
aad
add
jae
sub
loop
jno
mov
mov
subb
mov
aad
xorb
cwtl
xor
ret
mov
mov
mov
jmp
fsts
test
iret
mov
xchg
sbb
and
push
cwtl
mov
jmp
jnp
outsb
out
mov
mov
cmp
and
sbb
mull
sbb
add
jo
fistl
js
xor
mov
add
sub
fsub
jbe
jne
pop
outsl
or
test
or
or
mov
std
es
mov
lock
or
mov
push
push
enter
sar
stos
cwtl
pop
lea
add
lods
pop
dec
lea
dec
jb
pop
decb
addl
ja
add
mov
push
leave
hlt
xor
cmpsl
inc
push
add
add
jo
test
sub
out
adc
push
inc
adc
mov
test
mov
mov
sbb
jns
shr
mov
les
push
inc
nop
cmp
mov
loop
into
and
ret
and
jo
mov
push
adc
loopne
dec
fisubs
add
sbb
outsl
jbe
ror
cwtl
mov
add
sbb
out
mov
or
fwait
jnp
scas
and
mov
sub
jb
add
mov
xchg
cmpsb
and
in
push
mov
test
jecxz
fadds
sahf
adc
hlt
xor
add
imul
ds
cwtl
arpl
sti
icebp
sbb
push
xor
pop
aaa
mov
daa
bound
inc
in
hlt
xchg
out
int
inc
pop
call
or
xchg
test
xchg
gs
das
push
push
ss
lock
leave
adc
insb
loope
mov
fnstenv
sahf
inc
fldenv
adc
sbb
cmpw
lds
mov
push
out
je
cmp
adc
nop
js
inc
xchg
jno
pushl
and
cld
inc
sub
stc
adc
xchg
jmp
lods
push
pop
xchg
cs
inc
add
pop
add
sbb
sbb
clc
inc
sub
or
xchg
test
sub
sub
cmp
push
xchg
fisttpll
lcall
aas
jno
comiss
loope
cmp
mov
hlt
fbld
sbb
xchg
popf
out
adc
inc
xchg
nop
mov
sub
mov
sub
inc
xor
add
movsl
xchg
add
xchg
sub
sti
mov
dec
jp
iret
xchg
aas
je
push
fistpll
ds
sub
popa
mov
mov
push
fildl
cld
popf
popf
cmc
hlt
cmc
mov
mov
scas
add
mov
out
jg
and
gs
sbb
xchg
xor
or
jnp
icebp
mov
or
push
xchg
jge
cltd
add
mov
or
inc
out
xchg
es
or
pusha
mov
xor
rol
movsl
popl
loop
push
sub
out
int3
and
ds
imul
inc
sub
jle
cs
push
jg
cmpsl
dec
cmc
sbb
add
push
loop
adc
mov
cmp
movsl
outsb
mov
adc
into
lds
mov
jle
add
sbb
sub
mov
aaa
out
add
lods
movsl
es
sahf
shll
inc
sbb
xchg
outsb
loopne
sarb
daa
lods
stos
inc
dec
xor
lret
ret
inc
loop
insb
test
inc
cmc
inc
sbb
icebp
cltd
jmp
add
fisubl
pop
sbb
into
pushf
int3
inc
adc
inc
mov
and
pop
dec
cli
cmc
xchg
xor
xlat
mov
imul
out
push
adcb
push
outsl
push
test
fildl
mov
mov
add
pop
sub
fiadds
xchg
jge
in
aaa
loopne
inc
sahf
lods
xchg
out
mov
outsl
andl
push
enter
das
mov
dec
lea
mov
je
push
fstpl
sub
cltd
and
jbe
mov
insl
shr
inc
xor
mov
and
xor
jmp
dec
inc
mov
daa
or
dec
and
bound
inc
sti
adc
push
loopne
xchg
jp
mov
andl
int
fistl
pop
fs
inc
int
xchg
pop
cmpsb
adc
adc
popa
in
ret
dec
clc
inc
jecxz
inc
xchg
dec
mov
stos
imul
mov
loope
popf
xchg
jmp
pop
add
sbb
sti
sbb
jns
push
outsl
dec
push
pop
lret
push
lock
insb
cmc
popa
repz
loop
sti
add
add
testl
and
dec
sub
push
mov
sbb
enter
mov
jns
aas
fwait
cmpl
repnz
adc
mov
sbb
in
push
dec
pop
jbe
inc
int
ss
fimuls
mov
sub
fs
pop
pop
mov
jge
rcl
xor
or
aas
scas
loopne
loopne
pop
test
mov
in
iret
dec
inc
xor
pop
adc
adc
pop
lds
push
pop
int
lds
adc
pop
inc
jecxz
or
mov
aam
faddl
cs
adc
or
jno
sbb
leave
xor
sti
mov
shr
test
add
mov
cmp
test
mov
js
fcomp
cmp
bound
aam
pusha
out
aam
lcall
inc
cld
mov
sbb
mov
iret
popf
cmp
lods
xor
aas
inc
push
ja
enter
inc
movb
mov
orl
mov
hlt
mov
mov
xor
mov
or
dec
ss
push
cld
hlt
jge
mov
add
and
rcl
mulb
dec
and
jns
dec
sahf
je
movl
dec
imul
insl
stos
fdivl
repnz
ret
mov
push
popf
jns
dec
jmp
cltd
mov
fs
xchg
lea
fldenv
jmp
fmuls
inc
pushf
xor
call
fld
shll
sbb
jne
out
xchg
pusha
shll
or
es
mov
sub
mov
adc
andb
dec
bound
pop
cltd
repz
dec
les
cli
orl
mov
add
lret
out
sti
cwtl
cmp
jne
adc
pop
ljmp
pusha
jge
xchg
sbb
pop
xor
dec
sbb
push
repz
pop
sub
pop
mov
fwait
xor
ds
jp
dec
xchg
ljmp
mov
add
push
mov
cmp
insl
cmp
int
mov
mov
sub
and
dec
dec
mov
mulb
jbe
push
xchg
jmp
jbe
cmp
sub
add
adc
pop
hlt
fs
sbb
insb
cwtl
rorl
cli
mov
xchg
xor
mov
les
lret
sti
out
and
fldt
xor
xchg
jb
mov
int
adcb
ljmp
ret
test
dec
jo
sub
pop
inc
enter
pop
xchg
idivb
loopne
add
shlb
add
in
int
cli
or
push
mov
fcmovnbe
xlat
or
push
and
lcall
mov
mov
cmp
ljmp
sub
lock
sub
xlat
jno
fcmovu
push
inc
sbb
sub
sub
sahf
jne
xor
dec
sub
sub
ror
mov
fxch
das
and
sbb
cwtl
orb
les
shrl
mov
movsl
aam
push
jbe
mov
add
fildll
ficompl
test
add
dec
mov
std
js
repz
mov
insb
nop
mov
xor
subl
push
xchg
xchg
aam
insb
mov
push
lret
scas
sub
iret
js
lods
adc
out
aad
and
mov
and
ret
sub
jg
cmp
mov
out
cli
and
icebp
dec
or
adc
fcoms
shlb
lret
push
mov
and
push
xchg
out
dec
arpl
dec
sub
shlb
mov
jp
fwait
adc
je
and
add
push
insl
out
cmc
and
lods
arpl
in
dec
cmp
nop
int
pop
aas
outsb
jbe
dec
inc
clc
fnstsw
lods
and
rcl
and
mov
mov
push
bound
and
enter
fucomip
js
icebp
sbbb
pop
or
push
fdiv
es
pop
cmpsb
pushf
adc
push
mov
aas
cli
divb
cmpsl
lret
mov
icebp
add
into
cs
xchg
mov
jg
xchg
xchg
or
cmp
lock
sbbl
cmp
iret
pop
fldenv
std
out
jns,pn
fcmovnb
into
stc
push
sbb
inc
shrl
out
pop
pop
lock
pop
ret
je
pop
leave
inc
test
mov
push
mov
push
xor
insl
loopne
push
mov
pop
xchg
imul
push
pop
mov
imul
pop
mov
mov
sbb
stc
or
pop
hlt
push
mov
out
xor
jbe
xchg
subl
inc
xor
push
in
inc
fwait
mov
sbb
ret
xchg
cmovns
adc
push
dec
icebp
pusha
mov
add
push
pop
dec
mov
loope
sar
xor
cmp
ja
lret
push
xchg
xchg
lret
in
dec
add
sub
orl
sti
movsl
push
mov
mov
mov
ret
imul
shrb
pop
jecxz
inc
push
jmp
cmp
mov
push
mov
sub
sbb
push
push
imul
andl
inc
fs
jbe
ficoml
fdivrl
and
std
ljmp
adcb
mov
and
xchg
jp
add
js
imull
xchg
shrl
add
sti
xchg
inc
adc
mov
pop
sub
out
push
mov
pop
outsb
mov
je
lcall
loope
lret
add
orb
mov
pop
insb
sbbb
int3
call
out
andl
xchg
ret
stos
push
fcmovne
mov
insb
cli
ja
jne
mov
fmuls
inc
movsl
in
xchg
loop
adc
ficoml
xor
pop
cmp
mov
cs
mov
mov
xor
call
out
pop
movsl
ja
add
mov
scas
mov
pusha
push
push
jae
pop
ss
add
popf
cmp
sbb
jg
lods
xlat
lret
mov
cmc
loopne
rcrl
les
xchg
jmp
and
add
fdivrl
cwtl
dec
loopne
add
inc
mov
arpl
sub
mov
not
push
mov
sbb
fisubl
sub
add
jno
int
xchg
dec
cs
adc
sbb
jno
inc
xchg
sarb
push
lock
ja
mov
sub
fs
sar
or
push
leave
mov
outsl
popf
insb
fwait
pop
rolb
push
and
js
cwtl
pop
fiadds
jle
adc
in
test
addr16
add
mov
fistpl
fs
sbb
or
mov
cmpsl
fwait
xchg
nop
sbb
cli
push
mov
or
iret
repnz
mov
pusha
add
add
out
jb
int
cmp
scas
jo
data16
pop
addr16
gs
repz
cmp
push
dec
aaa
aas
getsec
cmp
cld
fstps
shlb
inc
int
adc
sbb
jg
xor
mov
push
inc
js
or
leave
and
mov
testb
push
jbe
imul
stos
jp
loope
inc
imul
xorb
int3
out
cmp
cmp
lods
jns
mov
call
pushf
pushf
stos
cmp
icebp
xor
scas
pmulhw
daa
add
cmpsl
inc
dec
pop
jo
pop
add
xchg
insb
sub
outsl
inc
test
push
aas
add
push
jle
jo
pop
pop
push
or
xchg
dec
aaa
add
shll
mov
cmpsb
pop
pop
jmp
sarb
imul
mov
aas
push
mov
mov
loope
adc
ret
fs
rclb
mov
jnp
xor
movsl
loopne
aaa
sbb
add
sub
add
adc
imul
fsubrs
adc
ret
int
aad
and
repnz
push
pushf
shrl
cmp
call
mov
mov
dec
push
mov
jecxz
or
xor
popa
dec
js
test
inc
sub
gs
sbb
cmp
ljmp
pop
xchg
mov
xorl
rcrb
les
fxam
jl
dec
or
aam
sub
js
adc
push
std
inc
jne
jnp
jnp
inc
lret
sub
adc
pushf
add
vpextrb
jae
push
jbe
sub
jle
inc
mov
orb
mov
sahf
mov
aaa
les
pop
neg
inc
sub
shll
mov
outsb
testb
jmp
imul
hlt
adc
stos
jbe
cltd
or
iret
xchg
jb
mov
cltd
sub
imul
inc
and
pop
push
sub
aam
xor
out
fcmovu
adc
loopne
dec
mov
ss
sbb
scas
jmp
mov
std
in
sub
cwtl
inc
sub
inc
cs
lods
pop
or
mov
mov
pusha
sbb
mov
mov
mov
lea
je
sub
std
dec
cmpsl
add
sbb
cmp
cmp
pop
and
pop
jle
scas
adc
cmp
out
mov
adc
inc
into
pop
bound
add
mov
pop
jmp
push
outsl
leave
dec
fcompp
call
pop
jne
orl
ret
cmp
add
mov
clc
dec
out
shll
jg
fs
cld
cltd
sbb
aad
pushf
outsb
sahf
lcall
mov
in
push
adc
jns
data16
cmp
inc
test
in
cmp
mov
stos
mov
lret
insl
int3
lods
scas
loope
sub
dec
jo
and
jbe
dec
mov
mov
mov
mov
push
les
and
inc
adc
cmpsl
mov
fimuls
lahf
cmp
stc
lock
lret
notl
cwtl
popa
jo
mov
notb
inc
mov
imul
jl
icebp
pop
xor
dec
ret
xchg
ficoms
mov
testl
dec
mulb
push
lret
mov
out
lret
inc
sub
das
lcall
cmp
mov
mov
push
mov
lds
aaa
in
ljmp
ja
cltd
xchg
inc
mov
mov
gs
jmp
adc
loopne
adc
clc
ds
mov
pop
outsl
or
cmp
sahf
xchg
loopne
outsl
xorl
pop
int
jmp
ret
sub
jae
iret
sti
push
sarb
pop
sbb
xchg
dec
popa
mov
cmpsl
in
popl
es
aas
adc
push
dec
addr16
or
pop
cmp
inc
mov
loope
sub
inc
fldl
xor
push
repz
mov
call
push
or
dec
jmp
add
adc
pop
jl
mov
push
out
add
stos
mov
jbe
cmp
mov
xchg
aam
jb
dec
jo
mov
icebp
mov
jmp
insl
pusha
mov
clc
push
sub
aad
je
pusha
jno
pop
stc
in
lea
cmp
cmp
jecxz
ficoms
cs
subl
mov
xor
push
mov
pop
scas
sbb
imul
xchg
sti
mov
xlat
adc
sub
sahf
daa
cld
jb
aam
push
mov
hlt
ss
les
fcmove
pushf
ret
pop
mul
sbb
pop
addr16
push
sbb
outsl
aas
xchg
fstl
pushf
dec
mov
outsb
adc
out
mov
push
imul
mov
jl
lds
cwtl
je
or
fs
pop
enter
stos
aad
ss
adc
mov
aad
pop
cmc
hlt
mov
fistpl
pop
nop
sub
cld
int3
stos
sahf
scas
arpl
sarl
stos
data16
pmaxub
xchg
std
enter
icebp
mov
dec
mov
addl
lds
mov
cmpsb
out
bound
and
inc
scas
arpl
sbb
adc
and
inc
rclb
cld
cs
or
add
cmpsl
flds
std
test
fwait
sub
movsl
mov
and
ret
xor
or
add
jl
adc
adc
xor
es
cmpsb
sub
jno
imul
and
icebp
ljmp
movsl
pop
mov
or
jmp
mov
imulb
cmp
pop
dec
outsl
cmpb
icebp
jnp
ffree
stc
testl
inc
adc
pop
mov
vshufpd
pop
and
xchg
test
mov
cmpsb
mov
add
jbe
out
push
insb
cmp
adc
inc
push
sub
imull
jecxz
addl
push
xchg
push
faddp
fisubrs
push
and
cmpsl
ss
cmp
ja
or
adc
pop
pushf
and
mov
mov
cmp
jmp
sbb
hlt
adc
mov
rclb
dec
out
or
outsl
xchg
in
adc
fildll
cmpsl
dec
iret
jnp
mov
dec
sub
shrl
xchg
pop
dec
pcmpgtb
ljmp
xchg
mov
mov
pop
lret
xor
incl
cmpsb
and
pusha
icebp
popa
out
daa
cmp
mov
jp
iret
cmc
int
sar
mov
fldenv
push
pop
pop
cmp
dec
sbb
mov
sarl
dec
mull
icebp
fmuls
flds
adc
push
xor
test
sub
adc
out
fs
int3
outsl
push
aam
cmp
pop
out
cmpsl
jmp
sbb
outsb
sub
movsb
cmp
inc
mov
loope
loopne
enter
pop
jno
xchg
cltd
dec
mov
std
mov
insl
jecxz
ret
and
and
jmp
ds
or
scas
scas
cmp
lret
sbb
decl
jnp
jge
sbb
loope
mov
mov
inc
inc
mov
mov
cmp
decl
add
mov
std
xchg
push
lock
xchg
push
push
pop
inc
test
push
fdivrs
adc
xchg
dec
mov
push
int3
mov
xchg
xlat
mov
sub
jbe
jl
xchg
pop
inc
testl
mov
repnz
aas
jno
sub
cmc
jl
enter
mov
fimull
add
mov
fcomps
push
clc
shlb
adc
iret
insb
int
push
ret
xor
popf
lds
addr16
pushf
inc
lret
adc
ds
test
or
stos
in
adc
xlat
ficoms
and
test
xchg
stc
pop
jnp
mov
jne
dec
mov
and
idivl
daa
ds
pushf
push
aam
lahf
sub
mov
sub
mov
xchg
imul
fisubl
out
pop
adc
stos
out
jmp
call
push
jmp
fs
fwait
out
cmp
cld
dec
sar
subl
loopne
stos
jg
movsb
ja
mov
pushf
mov
insb
gs
inc
dec
pop
inc
iret
xor
call
mov
push
lret
mov
mov
and
call
decb
daa
jae
lods
xor
lret
pop
mov
sub
les
xor
add
jl
test
shlb
in
push
push
add
push
addr16
mov
mov
lea
icebp
arpl
mov
mov
push
mov
dec
xor
ret
dec
mov
adc
lcall
loop
fisubl
shlb
ds
lods
push
in
jnp
cwtl
jns
enter
imul
cmp
jge
add
movsl
sub
aad
bnd
test
inc
xchg
add
sbb
pop
xchg
jo
or
js
jns
mov
or
pop
gs
dec
dec
lea
dec
dec
out
icebp
test
push
inc
je
std
inc
mov
mov
hlt
call
aas
fdivr
mov
jb
adc
cltd
pop
pop
inc
mov
mov
sub
lock
inc
fidivl
iret
lods
pop
and
xchg
push
or
sbb
ja
jbe
cltd
int
mov
pop
fwait
push
cs
xchg
lret
push
pop
enter
js
jns
dec
push
cmp
dec
and
sarb
lea
and
or
ja
adc
and
mov
pusha
shr
je
xor
icebp
out
repz
push
jb
mov
xchg
scas
enter
or
push
fimuls
stc
stos
adc
mov
data16
and
add
fcomps
scas
mov
aad
xorb
into
pop
dec
add
popf
jge
insb
shl
aad
pusha
mov
mov
sub
addr16
mov
mov
sbb
xlat
push
cmpsl
daa
enter
addb
outsb
dec
mov
xchg
sub
lcall
xchg
fcomps
in
jbe
mov
lahf
incl
test
ret
mov
adcb
cld
xchg
aas
out
pop
cmpsl
pop
mulb
call
ds
out
pop
movsb
cltd
fildl
int3
pop
jl
cmc
ja
mov
xchg
pop
movsl
popa
out
push
pop
int
jns
ja
inc
cmc
xor
add
dec
xor
adc
fsubrl
pop
adc
aas
aas
arpl
nop
lret
cmp
insl
mov
std
fldt
pop
mov
insb
outsb
and
incb
mov
iret
in
sub
xchg
push
std
rcrb
xchg
xor
pop
mov
lea
add
and
jbe
or
popf
repz
pusha
mov
jmp
fidivrl
jbe
inc
sbb
popf
cwtl
cmp
cmp
aaa
insl
aaa
sub
add
pop
xlat
mov
es
aaa
iret
adc
icebp
xchg
pop
aad
sarb
adc
pop
ja
pushf
test
sbb
sahf
std
out
add
addb
push
sub
xchg
pop
test
fisttpll
loopne
cmp
xchg
aas
jb
cs
sub
in
pop
lahf
mov
xor
pop
and
adc
ss
jnp
das
jae
xor
jge
sbb
pop
out
out
nop
dec
dec
shll
loope
xor
adc
orl
xchg
nop
lcall
lds
in
in
or
lret
fsubrl
mov
add
lds
pop
je
loopne
cmp
subl
shrb
je
fwait
or
mov
fmull
out
fisttpl
adc
sub
loop
lods
ljmp
lods
inc
int3
push
sbb
movsl
sbb
popf
push
shrb
and
xlat
scas
jne
frstor
inc
lock
push
dec
xchg
and
scas
insl
pop
out
std
or
lods
popa
out
popa
fucomi
out
jne
out
inc
cs
mov
mov
jg
mov
ss
imul
ret
fmull
jg
jns
jge
cmp
add
xchg
bound
stos
fimuls
adc
xchg
arpl
gs
sahf
push
fsubl
mov
rclb
mov
and
andl
xor
dec
negb
mov
cli
stos
cmpsl
cld
test
dec
out
aad
add
xor
imul
aaa
js
inc
add
cmp
sub
mov
cwtl
icebp
mov
pop
mov
fstps
xchg
aaa
les
daa
dec
inc
mov
mov
and
pop
in
aad
lret
fmuls
mov
jmp
cmp
das
sbb
push
arpl
mov
ret
adc
dec
xchg
push
adc
loopne
pop
sub
not
pop
mov
stos
jae
mov
jp
or
push
lds
push
sub
lock
jecxz
and
inc
xchg
imul
push
stc
push
repz
cmp
outsb
add
fwait
shrl
mov
push
orb
sub
dec
jg
adc
or
or
cld
sti
inc
rclb
gs
popf
aas
push
sbb
test
repnz
mov
dec
lods
jo
aad
ss
add
jmp
fiadds
ljmp
out
outsb
inc
jno
xor
enter
sbb
insl
sbb
lahf
icebp
xlat
push
fs
sbb
in
fdivs
sub
push
add
int3
popa
scas
clc
ret
negb
inc
mov
lock
pop
daa
lcall
add
lods
lcall
std
mov
ds
lret
fiadds
sbb
test
arpl
xchg
mov
lea
mov
js
scas
sbb
cmp
popa
leave
shll
xchg
sbb
add
lds
add
xchg
sub
pop
cmp
xchg
clc
or
xchg
mov
or
push
xor
push
inc
aaa
sbb
dec
push
subb
hlt
ret
roll
pop
cmp
loop
jl
adc
lds
mov
ljmp
pop
fistpl
dec
stos
call
mov
addr16
mov
inc
pop
sub
das
cmp
hlt
push
fildll
cwtl
fsubrs
sub
pop
lret
test
xor
out
xlat
inc
xchg
or
dec
jb
mov
jns
lock
movsl
roll
jnp
outsl
pop
and
xchg
inc
sti
rol
inc
stc
inc
push
andl
jmp
xor
popf
ret
mov
xchg
mov
aam
int3
popf
and
jo
pop
les
dec
nop
xor
arpl
sbb
stos
popf
aaa
sgdtl
shrl
push
jge
push
arpl
cmp
xor
adc
clc
cmp
les
jae
test
cmp
push
cltd
push
andl
push
out
daa
jl
sbb
mov
test
fstpt
push
outsl
je
adc
xchg
xlat
sbb
aad
fxtract
cmp
jg,pt
mov
movsl
xchg
popw
cltd
pop
sub
repnz
lock
and
cs
jnp
jns
xchg
mov
inc
and
cli
push
pop
jmp
sbb
cltd
in
insb
aas
xchg
dec
add
std
inc
cmpsl
push
scas
lods
and
dec
loope
fnstenv
test
lea
mov
xchg
lods
xchg
into
jg
repnz
jae
adc
mov
mov
in
jb,pn
sub
pop
cmp
mov
lcall
outsl
pop
xorb
ja
xor
mov
xchg
dec
sbb
fcomps
fidivrl
fadds
or
xchg
aad
add
arpl
xchg
jp,pn
pop
xchg
sub
lods
push
mov
inc
movsb
push
pop
jnp
or
mov
add
icebp
xchg
sbb
repnz
pusha
fldl
mov
movsl
inc
push
bound
sub
hlt
jnp
xor
mov
sbb
adc
sbb
loope
and
cltd
push
sar
aas
and
or
inc
push
repz
imul
lret
lods
inc
xchg
ss
adc
push
jo
pop
pop
adc
dec
daa
repnz
mov
pop
jge
js
cmp
mov
into
repz
repz
dec
xor
loope
sarl
sahf
sub
and
mov
lret
je
dec
push
aad
dec
xchg
scas
testl
fcmovnu
sbb
out
inc
sub
out
mov
dec
fists
mov
xchg
int3
cmpl
nop
inc
repnz
popf
pusha
jg
into
ljmp
out
xor
fldenv
push
cltd
out
bound
fsubrl
xlat
push
call
popa
pop
inc
aas
jg
fnstenv
insl
in
jbe
lahf
shl
push
add
xor
and
adc
rol
roll
inc
jg
scas
js
js
cmp
mov
and
or
int3
cmp
ficoml
cmp
xchg
dec
pop
ds
bnd
jnp
lahf
in
add
mov
test
aaa
movsb
lea
jne
jae
cmp
mov
mov
mov
mov
adc
mov
gs
pushf
js
stc
movaps
int
sbb
js
loope
sbb
dec
xor
cmp
adc
daa
outsb
add
lods
xor
add
pop
std
fnstenv
push
adc
pop
mov
in
inc
aas
add
add
and
test
repnz
cmpsl
push
sbb
and
add
xor
or
nop
aam
sti
adc
mov
sub
cmc
mov
scas
dec
mov
mov
fbld
negl
cs
push
mov
shll
ds
pusha
loop
push
adc
push
push
gs
inc
pop
add
adc
icebp
sub
push
cld
mov
push
mov
lcall
lret
shll
cmp
adc
pop
xchg
ss
dec
es
popf
xlat
push
pop
jae
imul
loopne
push
cmp
add
lods
mov
dec
arpl
xchg
movsl
leave
sub
mov
jl
fdivs
or
clc
jnp
cs
pop
int
pop
fistl
outsb
mov
mov
add
in
adc
xchg
lock
cltd
pop
fs
call
data16
test
in
cltd
mov
pop
dec
mov
in
xchg
ljmp
pop
in
fwait
mov
jbe
popa
outsb
pop
popa
lcall
hlt
daa
ds
aaa
sbb
and
insl
int
stos
cli
int
stos
push
inc
inc
and
xchg
pushf
pop
stos
push
out
lds
sub
lds
in
cmp
jl
lea
gs
xchg
inc
mov
xchg
out
in
imul
push
dec
cltd
lods
mov
int
rcrl
test
mov
inc
ret
sbbb
insb
out
imul
in
daa
jnp
mov
fnstcw
and
add
mov
ja
xadd
nop
mov
je
xor
or
cmp
fstl
jge
inc
xchg
testb
insl
cmc
ret
pop
or
jecxz
neg
subb
xchg
or
lret
xchg
xchg
and
fwait
dec
sub
jns
stos
lds
jp
xchg
push
out
mov
in
subl
adc
inc
clc
push
mov
aas
mov
jp
aaa
divb
sbb
mov
sbb
inc
movsb
dec
pop
add
rolb
jge
xchg
leave
int
popa
inc
push
ret
out
push
pop
daa
pop
jae
push
in
xchg
sbbb
gs
mov
pop
jne
fcomps
rcll
lcall
shlb
push
pop
and
and
clc
xchg
adc
xchg
mov
stc
in
xor
adcl
hlt
mov
sub
inc
sbb
lcall
icebp
outsl
shll
or
in
repnz
movsl
mov
mov
mov
pop
popf
fwait
pop
sbb
lahf
les
mov
sahf
out
lea
neg
adc
jno
xchg
movsl
in
repz
je
jl
jbe
stos
cs
sbb
fs
out
insb
inc
loope
hlt
add
nop
xchg
inc
inc
stos
scas
mov
lret
mov
into
jo
pop
notb
push
add
scas
scas
mov
cwtl
push
outsl
out
repnz
shrb
or
popa
shl
cmp
insl
or
sarb
dec
mov
add
out
bound
xor
aam
jae
mov
add
shl
cs
push
mov
jle
inc
cmpsl
sbb
ret
lods
inc
clc
xor
xor
loopne
mov
dec
dec
imul
cmp
adc
dec
stc
xchg
xor
adc
mov
fwait
test
mov
or
push
mov
das
loop
and
or
inc
std
enter
cmp
mov
lcall
cwtl
ss
cmp
out
pop
xor
adc
rep
mov
out
jp
adc
fildl
inc
mov
adc
pushf
and
out
loope
outsb
adc
repz
cmovge
int3
sbb
fistl
ds
and
mov
push
popa
into
scas
mov
jnp
ja
lcall
inc
push
movsl
push
dec
test
arpl
jp
mov
or
std
inc
push
mov
popf
aam
push
pop
das
aam
mov
nop
adc
pop
sub
and
push
jbe
gs
cmp
mov
imul
cmc
xchg
sub
xchg
pop
jp
insb
std
xchg
lods
cmp
fadds
shlb
or
xlat
fcmovbe
dec
pop
cli
and
sahf
repz
and
popa
inc
in
lret
stos
mov
lods
movsb
aaa
out
push
cwtl
pop
cltd
out
lret
iret
push
jnp
inc
push
clc
movsb
enter
repz
mov
aad
adc
imul
dec
js
stos
cmp
jmp
lock
repnz
test
stc
jecxz
test
aam
clc
mov
and
adc
arpl
loop
cld
loopne
adc
stos
imul
add
shrb
sti
lcall
dec
mov
outsl
out
sbb
in
push
mov
dec
lock
jnp
inc
shld
cwtl
jo
lock
loope
cmc
outsb
ret
bound
test
sar
and
xchg
gs
push
hlt
push
inc
pop
sahf
mov
pushf
cmpsl
sti
jbe
push
mov
inc
bound
cs
scas
xor
fdivrp
sbb
arpl
push
lock
push
std
push
popf
cli
mov
push
mov
xchg
inc
adc
mov
push
dec
lods
insb
fiadds
ffreep
cmp
fists
into
mov
ficoml
loope
in
mov
dec
mov
xchg
or
les
fistpll
popf
xchg
dec
mov
dec
ss
jno
call
jp
inc
sbb
pop
cmp
out
fstl
lret
or
ljmp
lahf
jno
lods
sbbb
bound
cs
incb
dec
in
mov
in
pop
push
sbb
cmp
shlb
std
fnstcw
sahf
test
sbb
std
sbb
xchg
jmp
mov
push
or
adc
xor
fwait
mov
inc
sub
data16
jno
movsl
pop
mov
and
sahf
cli
xchg
cmp
dec
pop
pop
sub
das
pop
cmp
cltd
push
lods
and
dec
pop
mov
push
lcall
std
push
outsl
fst
adc
outsb
cmpl
inc
decb
jle
xchg
cltd
xchg
ror
idivl
aas
int3
xchg
mov
fmull
pop
xchg
movsl
imul
dec
popf
push
loope
mov
in
dec
jns
shrb
mov
lods
mov
frstor
rcrb
pusha
into
mov
sbb
cmp
and
loope
and
and
popl
in
cmc
loopne
cltd
adc
inc
inc
mov
and
mov
push
clc
mov
push
adc
sbb
jecxz
aas
push
out
es
enter
stos
cltd
dec
js
nop
mov
js
hlt
pop
jmp
mov
cmp
inc
or
add
nop
adc
sti
inc
jmp
xchg
jbe
and
stos
sarb
cwtl
sbb
fwait
push
mov
jbe
cltd
sub
adc
adc
rolb
cmp
inc
pop
fnsave
xchg
sbb
aad
add
aas
push
fsubrl
sub
and
mov
mov
out
jp
mov
xchg
cmp
push
test
and
pop
fcompl
mov
mov
xor
imul
sbb
dec
incl
insb
jl
test
nop
ret
dec
dec
push
mov
daa
popa
mov
mov
lret
in
or
movsl
jo
lea
adc
pushf
pop
hlt
out
and
movsl
pop
and
adc
arpl
or
sbb
stos
push
pop
mov
pop
inc
hlt
mov
mov
cmpsl
xchg
dec
fisttps
cmp
dec
sti
pop
mov
cli
rclb
push
insl
shl
or
lret
mov
lds
lcall
nop
rolb
fucomp
lock
mov
ret
fidivrs
loop
inc
fdivl
lahf
jb
cli
adc
dec
adc
out
addr16
jns
stc
bound
scas
clc
ljmp
xor
icebp
icebp
sbb
fwait
jns
lods
or
xchg
outsl
arpl
lret
dec
pop
movsb
lock
loopne
repz
push
das
loop
lea
mov
stc
push
scas
popf
cmpsb
lret
cmp
push
shrl
adc
addr16
jo
jno
and
sub
or
bound
xlat
std
xchg
mov
push
cmc
xchg
push
ret
sub
mov
sbb
mov
test
stos
dec
rcll
movsl
adc
enter
out
pop
sub
mov
andl
sbb
insl
lods
and
xor
pop
cmc
and
movsb
adc
das
das
pop
test
pop
lds
imul
jg
clc
rorb
pop
repnz
data16
in
insl
inc
vmptrst
add
fsub
mov
inc
cmp
inc
dec
cmp
leave
rorl
test
jb
adc
shll
dec
clc
xchg
dec
cmp
daa
and
push
fdiv
jns
movsb
cwtl
and
jl
push
jle
xor
cmp
jle
les
jns
pop
sub
sub
and
mov
int3
push
outsb
cmc
adc
pop
ss
in
ret
andb
xchg
adc
ljmp
jae
adc
xorl
and
adc
xor
cmpsb
sbb
or
repnz
fildll
dec
dec
insl
cs
sub
xchg
add
jo
push
mov
dec
pop
inc
add
mov
loop
jge
mov
sub
xor
xchg
inc
xchg
lcall
mov
mov
fstpl
mov
cmp
mov
inc
cld
add
dec
lret
je
adc
sbbl
mov
out
mov
outsb
jg
sub
xchg
add
mov
mov
cmp
dec
pop
negl
push
mov
mov
ljmp
xor
out
or
into
dec
mov
movsl
out
sbb
sbb
push
outsl
dec
arpl
dec
in
jle
sbb
inc
inc
mov
lea
cmp
popf
add
adc
loopne
add
dec
xor
in
sbb
inc
lods
popf
dec
pop
into
jl
popa
movsl
enter
ret
pop
inc
sbb
jge
mov
lret
lods
aad
rcll
nop
fmul
pop
nop
push
adc
mov
fmul
pop
nop
cmc
dec
inc
popf
dec
aas
cmp
adc
dec
jp
xchg
imul
fcoms
and
adc
pusha
lret
dec
ficomps
repnz
jnp
mov
jmp
lock
cld
leave
lods
jne
data16
int3
sub
mov
mov
adc
add
xor
xor
das
pop
and
inc
outsb
push
push
fmull
xor
pop
pushf
sub
movsl
cmp
fstp
push
jp
aad
mov
sub
mov
es
stos
mov
cmp
jmp
rcll
fwait
xor
or
push
addr16
movsl
roll
aas
sbb
sub
roll
jecxz
mov
pop
in
jns
push
add
lea
repnz
cmp
fnstcw
xchg
jae
das
xor
add
cmc
add
cwtl
and
cmp
pop
fnstsw
add
stos
cmpsl
inc
mov
inc
and
sbb
mov
xchg
clc
inc
or
dec
cs
scas
mov
aam
je
mov
adc
xor
jecxz
outsb
jmp
dec
pop
adc
stos
mov
cld
ret
scas
les
cmpsb
popa
leave
test
lahf
or
repz
test
mov
pop
sbb
and
push
or
out
pop
cmpl
lret
xchg
fwait
inc
mov
incb
mov
ret
arpl
test
pop
iret
jmp
push
pusha
xchg
cmp
fstpt
scas
je
mov
aam
hlt
mov
jmp
xchg
test
add
addr16
jbe
fwait
add
push
jp
mov
sub
lahf
mov
and
xchg
rorb
and
inc
mov
stos
cltd
sub
js
out
jecxz
aam
push
push
faddp
ja
js
push
fdiv
hlt
andl
rorl
sub
les
inc
push
enter
int3
mov
push
jnp
cmp
pop
pop
inc
xchg
or
push
mov
aas
bound
adc
xor
cwtl
pop
imul
cld
push
das
jg
rclb
adc
cmove
xorb
adc
cmc
das
in
ficoms
cli
out
adc
ficompl
std
sub
mov
cmp
mov
dec
insb
sub
jge
es
cmp
das
push
pushf
pop
mov
mov
in
in
pop
test
int3
jl
rorb
in
mov
repz
add
or
mov
lock
lcall
stos
sbb
pop
test
xor
dec
pop
xor
adc
lret
outsb
adc
sub
sub
adc
lret
in
sarb
int
xchg
mov
xchg
sub
sub
cmpsl
mov
sbb
in
fsubrl
inc
dec
xor
pop
sbb
mov
mov
fisttpll
out
mov
xchg
push
out
inc
into
ljmp
mov
iret
dec
shlb
popa
push
xchg
xchg
imul
push
ss
cwtl
insl
and
cmpb
mov
pop
fsts
fdivrl
push
pop
es
test
inc
repnz
rcll
sub
test
out
leave
lret
mov
pop
mov
clc
inc
sub
clc
cmp
mov
push
aam
out
xchg
xchg
lret
dec
jb
or
imul
mov
or
lahf
mov
insb
cmp
scas
xor
adc
dec
call
imul
sbb
adc
lods
pop
push
insb
les
mov
pop
mov
xchg
cli
jmp
cmp
lret
out
adc
cmpsb
and
pop
push
and
jmp
in
mov
cmp
ret
adc
aad
inc
aaa
loope
jb
cmp
cmpsb
imul
pop
popf
sbb
mov
ss
into
test
int3
in
push
in
dec
inc
scas
mov
arpl
jno
dec
pop
stos
inc
sub
out
dec
orb
mov
adc
add
jns
loope
loope
xchg
clc
sbb
inc
daa
pop
jo
or
outsb
adcl
fwait
imul
or
orb
mov
test
push
push
test
dec
dec
ss
fstpl
jo
leave
sub
sbb
xchg
mov
adc
loopne
es
lds
mov
push
mov
dec
daa
outsb
lods
or
mov
ss
inc
jae
icebp
std
jecxz
jnp
icebp
jnp
int
lds
out
clc
test
in
xchg
inc
push
pop
je
pop
add
inc
jae
stos
add
stos
pop
mov
fs
arpl
add
mov
xchg
sbb
loop
add
push
lret
xchg
cmpsb
and
jbe
push
adc
fbld
and
imul
sbb
jb
jp
lea
adc
and
jg
cmpsl
outsb
loopne
clc
mov
mov
hlt
push
loope
dec
loope
dec
pusha
mov
mov
fwait
push
jmp
add
outsl
test
jns
aaa
out
jae
sub
mov
dec
cmpsl
dec
push
test
pop
cmc
jbe
cmp
adc
mov
outsl
stc
loopne
addl
or
test
dec
mov
stos
pop
mov
dec
rcrb
mov
ss
imul
mov
stc
cwtl
out
in
lods
insb
mov
mov
cmp
pusha
daa
popf
mov
test
test
mov
adc
add
aad
orl
je
fistpll
into
aad
in
inc
pop
stos
add
xchg
out
mov
inc
sahf
or
xor
pmaxub
adc
cmpsb
mov
out
repnz
pop
inc
push
imul
xor
inc
test
dec
jecxz
out
push
icebp
mov
shl
lret
movsl
sub
out
xchg
hlt
inc
jl
cmpsb
xor
ss
jp
or
jle
lahf
push
xchg
xor
idivl
in
pop
pop
lock
in
sbb
or
mov
add
fisubrs
mov
mov
add
xchg
pop
fidivrl
sub
mov
idivl
cmp
mov
mov
push
mov
lcall
leave
popf
add
mov
ucomiss
lea
fldenv
es
and
and
sub
adc
imul
mov
ja
cmp
neg
das
push
xchg
test
add
mov
sbb
rcl
mov
mov
pop
sbb
and
insl
dec
mov
fcomp
dec
mov
pop
ret
std
jp
add
cmp
fchs
imul
pop
lret
xor
push
push
or
mov
xor
ret
push
test
movsl
test
dec
out
cmp
mov
jae
mov
mov
lcall
xchg
aaa
outsl
adc
fs
testl
loope
xchg
dec
rcl
pop
arpl
sarl
les
mov
cmpb
lock
lcall
int
loope
xor
xlat
pop
cmp
repnz
ja
add
fstpl
cld
pop
outsl
dec
xchg
pop
jl
data16
in
push
loop
lds
add
pop
pusha
pop
mov
imul
shll
scas
rcrb
lret
push
or
dec
and
cli
jne
les
mov
mov
cli
dec
out
stos
xchg
sbb
rcll
dec
cmpsl
sarb
cmpsb
cmp
in
sahf
adc
push
les
push
inc
iret
xchg
ffreep
cwtl
stos
ret
leave
xchg
mov
mov
bound
pop
fmull
clc
or
mov
jns
pop
out
sub
fisubrs
pushf
xchg
jecxz
mov
or
xchg
dec
pushf
fnstsw
iret
jge
mov
js
inc
mov
lods
push
xor
stos
shll
out
shrl
xor
or
insl
sbb
cmp
test
test
sub
mov
popl
test
mov
cwtl
mov
shrl
push
jge
movl
and
popf
push
cli
jb
cmpsb
cwtl
dec
mov
fistps
and
mov
jb
jecxz
xor
push
pop
gs
adc
pusha
test
in
mov
repnz
dec
xor
xchg
add
xchg
icebp
cs
xlat
xchg
push
jbe
push
rcl
adc
push
ret
or
jns
icebp
mov
loop
and
icebp
lock
bound
call
test
mov
sbb
mov
push
int3
cmp
sbb
daa
jbe
pop
pop
sbb
rorb
and
add
pop
xor
mov
fcompl
bound
and
jge
cmpsl
mov
jbe
out
inc
cmp
mov
add
xlat
cld
mov
adc
sub
mov
push
xchg
testl
mov
addr16
mov
cmp
jne
lcall
test
sub
je
aad
movl
jnp
rorb
cmpsb
pop
jns
aas
sbb
rcrl
filds
icebp
or
mov
in
mov
subb
imul
pop
jl
in
dec
xor
sbb
mov
sbb
sbb
les
sbb
mov
sub
or
adc
imul
leave
inc
mov
add
push
es
mov
loopne
adc
push
jne
aam
test
cs
jp
xchg
lcall
adc
cmpsb
inc
movhps
pop
arpl
sbb
sbb
call
scas
lods
mov
cmp
push
out
sub
inc
push
stos
dec
fldenv
xchg
pushf
lret
sub
clc
sub
jecxz
lea
push
ret
subl
xchg
negb
hlt
subb
insb
ja
and
cmp
sbb
int3
enter
xchg
jl
repz
sahf
sarl
cmc
push
push
cmp
adc
jns
mov
gs
add
mov
call
ja
and
add
aas
and
mov
xor
and
push
loopne
rcll
das
sub
mov
mov
and
xchg
imul
scas
jecxz
mov
push
jb
testb
jge
imul
sbb
mov
add
fdivl
cmpsb
add
ljmp
nop
in
dec
lcall
mov
or
inc
fs
int3
roll
dec
es
xchg
pop
push
data16
cli
lock
clc
sub
jo
lahf
mov
les
xor
cmpb
cmc
sbb
int3
mov
cmp
mov
mov
mov
outsl
icebp
xor
and
mov
and
mov
mov
pop
xlat
add
sub
pop
cltd
daa
enter
out
pop
std
pop
or
add
jle
push
cmp
push
imul
rcll
test
insl
cmp
rorl
std
jmp
popa
cmp
pushf
sub
jo
inc
aam
cmp
and
movsb
sbb
sub
negl
sub
int
cli
ds
push
jcxz
add
push
push
xor
es
adc
inc
xchg
fcomps
push
shrb
pop
mov
push
lret
sub
out
mov
pop
push
lret
cmp
jg
lret
push
adc
cwtl
loop
mov
mov
inc
nop
mov
jne
out
fucomip
sub
xchg
fs
push
dec
cmp
fistpll
pop
fiadds
inc
mov
vpmultishiftqb
bsf
jmp
mov
sbb
dec
std
std
xor
sub
les
fdivs
adc
cmp
in
xlat
mov
adc
inc
sub
jno
adc
jno
pop
and
push
data16
xchg
aam
sub
adc
loopne
push
test
loopne
and
leave
xor
movb
inc
xchg
std
jle
divl
pop
inc
add
and
rcll
sbb
movsl
scas
adc
sub
pop
push
std
jb
add
mov
xor
stc
push
push
jb
pushf
aad
mov
mov
in
cld
aam
mov
jns
jne
pop
xchg
mov
sub
pop
jnp
push
ljmp
cmp
imul
inc
adc
clc
add
dec
cmp
jmp
jae
fadd
push
sarb
fadds
sub
xchg
dec
sti
out
pushf
mov
stos
repz
jne,pt
or
fs
jnp
xor
dec
jb
sbb
jne
xlat
pusha
rcrb
bound
xchg
in
roll
sub
imul
stos
or
dec
xor
pop
fmuls
mov
psubusb
mov
out
add
sahf
shrl
mov
push
jecxz
push
mov
cmpsl
popa
fdivrl
stc
pop
xor
sbb
ret
idiv
mov
adc
test
push
insb
adc
outsb
arpl
add
loop
mov
adcl
ljmp
mov
pusha
enter
loope
stos
jnp
adc
mov
popa
cmc
movsl
cmp
mov
dec
lret
inc
mov
mull
movsb
jbe
out
mov
sub
mov
pop
mov
sub
out
xor
cld
adc
lret
mov
adc
jno
sahf
ret
pop
add
lcall
mov
push
push
push
mov
fs
call
scas
and
cwtl
verr
ficomps
mov
insl
repnz
pop
adcb
mov
mov
or
fistl
cltd
adc
push
aas
out
and
test
mov
pop
mov
adc
sti
cltd
fstl
rolb
subl
xor
in
jmp
gs
xchg
ret
sub
dec
xor
daa
das
mov
mov
lea
cltd
cs
jle
adc
adc
sti
insl
cld
dec
dec
inc
sbb
or
dec
cmc
ficoml
rorb
lahf
pop
push
cs
cmp
repz
xchg
gs
inc
mov
inc
mov
xor
inc
dec
jbe
sbb
inc
inc
and
xor
shrl
sub
xor
pop
cmp
and
enter
aad
cs
add
jmp
movsl
xchg
mov
dec
xchg
shrl
pop
or
insl
mov
gs
iret
test
mov
in
mov
mov
jnp
sbb
lds
dec
pop
and
push
inc
ja
jle
add
xor
xchg
bound
out
outsl
sbb
ficoml
icebp
movsl
aas
adc
adc
lock
inc
jl
dec
jmp
shll
dec
inc
pop
insb
aaa
mov
jno
shlb
lods
lret
out
in
outsl
movsb
and
lock
loopne
cltd
in
lods
mov
dec
adc
mov
and
adc
mov
hlt
js
fimull
cmp
push
movsl
xrelease
pop
xor
repnz
xor
adc
jns
adc
cmp
adc
sbb
bnd
test
rorb
or
test
popf
push
sbb
pop
mov
shrb
jg
adc
popf
insb
fcomi
out
sub
cmp
push
test
into
or
mov
pop
cmpsl
fwait
xor
dec
jns
loopne
jecxz
pop
enter
xchg
leave
fprem
mov
out
add
cmpsl
cmp
lcall
pop
cmpl
jno
data16
jne
mov
lahf
rcrl
cmc
push
adc
or
cmpb
out
or
dec
dec
push
push
popa
ficoml
icebp
stc
add
sub
mov
jg
in
pop
push
mov
jle
push
and
lods
mov
push
sbb
mov
lods
loopne
sbb
push
pop
movsl
sub
and
pop
or
test
mov
xchg
test
push
mov
push
das
stos
movsl
xor
dec
pusha
lods
out
xchg
fcomps
je
mov
sbb
mov
cmp
bound
cmp
jno
fmull
lcall
jns
pushaw
or
cmp
sbb
jp
jo
shl
lret
daa
or
in
mov
filds
sbb
inc
push
xor
or
sub
push
pop
xor
jnp
sahf
ds
jge
dec
adc
xchg
push
xor
shrb
aad
adc
aad
dec
fldt
pop
lods
jp
cmovb
pop
inc
dec
andl
out
stc
xor
in
insb
pop
xor
lcall
test
js
movsl
outsb
imulb
rorl
ret
inc
repz
add
addr16
enter
movsb
mov
xchg
pop
add
mov
mov
mov
mov
mov
stos
xor
sahf
test
push
jmp
xchg
inc
cmp
jnp
stc
xor
test
in
scas
int3
leave
lods
das
insl
fld
push
insb
dec
jl
pop
adc
stos
pop
aas
jmp
in
in
mov
add
and
add
cmp
lock
popa
leave
push
sub
jne
xchg
sbb
sub
inc
and
bound
mov
add
out
ficoml
bound
cmpsb
mov
mov
lods
jmp
adc
mov
out
jecxz
aad
loope
stc
ror
imul
add
xchg
inc
in
mov
leave
pop
inc
sahf
dec
mov
testl
jb
and
xchg
xor
xchg
out
ljmp
dec
repz
bound
cmp
arpl
xor
stos
mov
jo
mov
sbb
push
loope
insb
jmp
mov
or
push
cld
and
cli
inc
jo
sar
movsb
jae
sub
mov
adc
lea
ss
sti
shll
cmpsb
stc
rcrl
jbe
data16
dec
pop
jg
scas
imul
mov
xchg
xchg
mov
nop
jne
out
not
mov
cmp
ss
call
rcr
mov
mov
arpl
sbb
mov
adcb
sti
movsl
int
stos
clc
int3
push
or
inc
mov
ret
push
push
fwait
jp
outsb
leave
push
lahf
movsb
cmpsb
xchg
pop
inc
in
iret
out
test
lret
js
ret
jge
out
insb
mov
fists
dec
push
std
jl
pop
sub
mov
mov
xor
cwtl
enter
add
pop
pop
insb
jl
icebp
xor
in
dec
dec
lds
stos
nop
lea
rcll
stos
cmpl
xchg
jle
fisttps
and
add
cmp
push
jno
scas
ret
jb
stos
cmp
inc
fbld
mov
lret
popa
xchg
push
jnp
call
mov
or
mov
roll
fdivr
xor
pop
jg
add
lcall
aam
stos
aas
roll
sahf
mov
das
mov
in
fisubrl
cli
mov
jno
jno
cvtps2pi
js
pop
lods
xchg
jo
ja
jl
push
dec
fnstsw
xor
sahf
js
sub
or
jae
mov
fstpt
popf
mov
daa
lea
push
pop
xchg
pop
mul
std
jno
cmp
movsl
add
movb
mov
pusha
in
cmp
xchg
sbb
push
movsb
pop
cmp
pop
scas
mov
aam
xchg
hlt
ret
cmp
ja
sub
enter
movl
dec
insl
repnz
sbb
in
dec
ja
sub
ljmp
and
shll
mov
enter
push
xchg
out
xchg
fistps
jecxz
sarb
nop
in
pushf
jae
cmpl
and
mov
fisubs
leave
push
outsb
xor
loopne
mov
adcb
jbe
mov
add
pop
imul
lret
adc
pop
mov
xchg
inc
push
stos
add
iret
or
add
ss
or
scas
xchg
push
pop
fs
jo
xchg
stc
or
mov
mov
pop
cmp
movsl
xchg
jp
ret
push
and
jne
pop
adc
pop
movsb
test
inc
cmp
cltd
cwtl
je
cmp
inc
add
xchg
xor
xchg
jo
mov
mov
in
mov
sahf
pushl
repz
xlat
dec
hlt
popa
loopne
sbb
mov
or
pop
jne
movsb
add
adc
xor
jg
mov
add
mov
loopne
jbe
push
cld
inc
movsl
testb
rolb
xchg
pop
int3
stos
jns
ret
add
shlb
mov
pusha
loopne
xor
push
sbb
jnp
mov
scas
addr16
lods
int
inc
test
mov
mov
sbb
cmp
cmc
mov
cmp
cmp
leave
cmp
or
mov
pop
dec
jmp
jns
adc
mov
daa
mov
stos
test
lods
jns
cmpsb
addr16
out
xchg
sub
cwtl
xchg
add
jle
sub
jmp
outsb
push
cli
cwtl
rolb
dec
rol
mov
das
in
andb
adcb
lahf
pop
cld
jle
out
out
sti
pop
jns
pop
fimull
pop
fdivr
bound
and
mov
fldt
mov
inc
xchg
popa
lods
inc
jnp
scas
and
and
mov
push
mov
lea
fisttps
xchg
or
ret
dec
push
jbe
sbbb
xchg
and
mov
jge
movsb
nop
daa
icebp
fwait
pop
cmp
movsb
std
push
sbb
pop
or
mov
and
push
xchg
int
out
call
loop
fcmovnb
stc
in
cmp
pop
incb
mov
out
adc
rcl
fs
fs
out
pop
add
ret
ret
cmp
popa
sub
cltd
mov
mov
xchg
cmp
cmp
mov
icebp
cmpsl
ficoml
mov
stos
imul
dec
cs
add
outsb
shrl
aam
iret
sub
fstpt
push
cmc
jmp
in
movsb
pop
jge
mov
sbb
arpl
enter
insl
lods
mov
mov
pop
inc
mov
popf
js
pop
mov
inc
cwtl
pusha
jne
sbb
jne
fcompl
sub
dec
pop
and
xor
adc
mov
sbb
ret
push
mov
lds
sub
repnz
and
clc
mov
pop
jo
sbb
fdiv
cs
out
sub
sarl
daa
sarb
mov
cmpl
ret
dec
cli
jo
xchg
xor
lret
adc
in
cltd
push
dec
lods
xor
pushf
mov
les
add
dec
lods
mov
ret
into
movsb
mov
jnp
xchg
jb
rorl
rolb
jmp
xchg
clc
inc
sub
pop
ljmp
mull
or
push
jbe
inc
jle
fsubr
jle
in
sub
inc
cmpsl
sbb
mov
ja
pop
faddl
push
pop
clc
cmp
lods
or
and
xor
xlat
mov
adc
push
scas
inc
pop
cld
loope
idivb
popa
jmp
mov
cli
cmp
int3
in
aam
fs
mov
stos
rcrb
mov
dec
sbb
shl
sub
cmpsb
fdivp
loop
cmp
in
xor
or
dec
mov
call
cmp
xor
pop
out
gs
pop
pop
movsl
and
sti
pop
xchg
repz
cmp
mov
shl
in
imul
and
mov
push
jl
cltd
xchg
ficomps
bnd
nop
test
inc
sub
hlt
out
aas
cmc
subl
imul
lahf
pop
mov
add
push
fs
nop
jo
mov
insl
cmp
fistl
adc
adc
ret
cwtl
pop
mov
cmp
fucomip
xchg
sbb
fwait
out
out
popa
mov
lahf
insb
sub
xor
jl
mov
addl
sbb
sahf
aam
pop
or
cmpsl
mov
dec
pop
loop
push
das
adc
xchg
xorl
repnz
sti
scas
call
idivl
xchg
inc
inc
imul
popa
test
inc
mov
jp
ret
fcmovu
dec
pop
in
fiaddl
stc
fsubs
xchg
andl
lea
xor
sti
jg
into
push
xor
cltd
lock
cmp
lea
sbb
sbb
adc
cmpsb
mov
jne
cli
cld
out
shl
mov
aas
pop
push
sbb
ret
add
ds
mov
mov
add
xor
lcall
lds
fs
and
xchg
pop
jmp
out
sahf
jae
in
xchg
push
and
jp
sti
adc
cwtl
outsb
dec
orl
xchg
gs
xor
push
pop
ss
je
xchg
repz
imul
stos
xchg
jnp
cmp
stos
scas
inc
xchg
xor
jo
xchg
dec
rorl
sbb
inc
sub
enter
xor
adc
xchg
and
js
test
out
hlt
cmp
subl
mov
imul
sub
pushf
xchg
es
mov
mov
in
scas
jns
out
cmpsl
lds
inc
sbb
sarl
popa
lods
mov
cmp
rolb
cmp
sahf
mov
and
xchg
insb
ja
xor
ds
pop
enter
stos
xrelease
fcomip
gs
xchg
insl
mov
sbb
and
or
fs
xor
scas
push
aas
dec
dec
mov
mov
dec
shll
iret
out
test
add
fmuls
lock
sub
in
jl
fldt
mov
cmpsb
ja
lods
cmp
test
fldl
setb
xor
and
sub
push
push
adc
mov
push
inc
pop
mov
aam
fcoml
pop
in
ret
dec
pop
sub
mov
jne
sarl
pop
test
or
test
mov
pop
imul
cmp
cmp
mov
imul
imul
pop
ret
iret
int
pusha
push
push
repnz
mov
dec
idiv
push
pop
jp
lds
mov
jnp
pop
and
cmovne
xor
stc
mov
fisubs
ljmp
xchg
nopl
sub
popf
in
ljmp
jl
jg
leave
fsubrs
jmp
jge
cmp
inc
mov
ds
cli
in
in
les
decb
sbb
xor
inc
out
popf
xchg
rolb
sub
pop
and
test
scas
mov
aaa
test
and
xor
nop
cwtl
mov
lods
cmp
dec
mov
jle
clc
xchg
addl
xor
imul
test
push
dec
daa
push
std
add
push
fdivrs
ss
mov
pop
ds
lret
ljmp
enter
push
inc
out
cwtl
inc
mov
fwait
stos
lods
stos
xor
dec
push
jecxz
inc
mov
jb
fisttpl
lret
lret
movsb
pop
add
rol
inc
mov
sahf
adc
or
jle
arpl
int3
jns
lret
or
adc
fiadds
push
mov
scas
lahf
or
data16
adc
pop
stos
outsb
xchg
dec
enter
mov
loopne
push
test
pushf
jle
mov
sub
test
pop
cmp
pop
push
pop
push
inc
rolb
loop
scas
sub
xlat
push
hlt
jnp
dec
and
and
je
mov
mov
cmc
cli
jmp
out
pop
shlb
sub
or
addr16
adc
rcr
mov
lds
aad
pop
push
sub
mov
add
xchg
movsb
mov
sarb
pop
inc
das
fmull
mov
dec
jb
movsl
call
into
lds
mov
jbe
xchg
pop
push
in
or
dec
sub
es
lahf
sti
sub
stos
pop
cmp
mov
ja
cli
cld
les
add
pop
shl
dec
xor
rcrb
aaa
dec
xor
sar
pop
cmc
jo
mov
mov
fcmovnb
xor
popf
dec
scas
mov
and
mov
jae
inc
mov
fwait
xchg
shlb
pop
in
imul
addr16
jmp
add
enter
pusha
and
xlat
jnp
arpl
cmc
lret
movsbl
xchg
aam
aas
cmp
call
pop
js
add
rcrl
subl
popa
bound
arpl
jmp
and
pushf
push
test
and
fdivrs
pop
jo
mov
and
or
jmp
lcall
pop
out
jns,pn
sub
sub
inc
mov
push
pop
rolb
add
jmp
inc
mov
jge
pop
pop
push
dec
cld
mov
push
test
fstpt
lods
mov
sbb
mov
inc
and
mov
add
mov
les
push
ljmp
pop
push
or
or
test
mov
out
cmp
int
adc
and
pop
test
outsl
pusha
shlb
sar
sarb
adc
pop
incl
adc
mov
pop
sbb
add
shl
and
in
sahf
dec
xor
pop
mov
movnti
lods
add
xor
inc
pop
or
and
inc
xorl
daa
out
jecxz
adc
mov
cmpsb
mov
imul
rcr
cli
push
fidivrl
loope
cmp
sbb
lods
pop
adc
jne
inc
test
rolb
adc
and
dec
sbb
mov
and
loopne
jb
push
cmp
sbb
fcompl
mov
jl
or
mov
in
jg
stos
lea
sub
mov
mov
push
add
sub
and
jbe
repnz
lods
in
fidivrs
add
das
rorl
sbb
imul
xchg
or
lcall
jp
fldcw
pop
sub
lahf
shll
fisttpl
xchg
fists
lret
and
mov
and
jecxz
lcall
pushf
es
pop
daa
or
or
cmpsl
fsubrl
popa
mov
subl
xchg
xchg
sbb
pop
push
jl
jmp
dec
stc
jmp
in
test
je
lcall
dec
push
sub
jb
lret
lcall
xchg
and
push
daa
adcl
jns
jo
sub
daa
clc
fldenv
push
sub
xchg
dec
sub
fld1
mov
push
outsl
fsubs
mov
movsb
xchg
push
popa
lret
nop
fs
cmp
jl
push
dec
sbb
pop
mov
mov
push
clc
adc
out
pop
divps
enter
insl
orl
into
mov
shlb
orl
cmp
push
lret
and
and
push
add
mov
mov
cwtl
xchg
popf
jnp
dec
jmp
and
inc
xchg
mov
sub
xor
ss
fstl
add
insl
sbb
aad
iret
sahf
sbb
insb
fisubl
mov
xor
lds
mov
dec
sub
cmp
mov
adc
or
mov
mov
dec
andl
fldenv
pop
shrl
sbb
or
dec
sbb
ret
fimull
cmp
cltd
mov
test
insl
xor
xor
es
rcl
cmc
sub
cmpsl
add
mov
xchg
xchg
fld
stc
orl
movsb
sbb
aaa
or
add
or
mov
out
cltd
cmp
fldenv
xchg
inc
add
mov
loope
mov
rcll
mov
dec
loopne
or
xchg
aam
loopne
int
bound
or
xchg
testl
cltd
fidivrl
dec
aam
mov
xor
ja
neg
pop
and
into
mov
lock
mov
mov
pop
psubsw
arpl
or
mov
or
mov
add
test
outsb
cs
cld
pop
lahf
mov
jge
mov
stc
aad
dec
dec
aad
and
sbb
call
lods
pop
movsl
lahf
sahf
push
bnd
pushf
mov
jg
push
es
push
shrl
aad
inc
scas
xor
loope
pop
xchg
ret
in
jl
ficoml
xchg
mov
cmpsb
push
dec
arpl
xchg
andb
and
and
mov
cmp
pushf
pop
hlt
pop
inc
mov
mov
dec
lcall
ret
dec
movb
adcb
mov
hlt
pop
ss
icebp
add
test
into
and
inc
test
outsl
and
cmp
fwait
popa
ret
pop
inc
or
mov
mov
pop
subl
jp
lds
xor
inc
popf
dec
int3
js
cmp
lcall
mov
inc
fsubrl
cmp
mov
jo
fisttpll
fstpl
sub
loopne
dec
xchg
enter
add
xchg
cmp
add
dec
jbe
add
fstpt
std
out
xor
inc
in
clc
mov
lds
cwtl
shrb
imul
jg
mov
inc
dec
and
dec
mov
push
xor
sbb
mov
ss
mov
mov
add
dec
nop
xor
in
rcrl
ffreep
push
call
xor
loope
gs
and
xchg
mov
stos
rcrl
jge
bnd
xor
rcll
sarb
sbb
xchg
sahf
cli
mov
add
insb
scas
daa
sbb
imull
adc
mov
negl
mov
je
fnsave
dec
sbb
das
sub
aam
cmc
stos
mov
push
or
fwait
movsl
jecxz
push
outsl
mov
or
mov
and
mov
in
or
mov
in
jne
sub
lcall
mov
push
pop
push
insl
shll
or
or
or
sbbl
xor
pusha
jg
orb
xadd
shl
sahf
addr16
scas
addr16
jb
pop
xor
cld
inc
xorl
fwait
sub
xchg
popa
pushf
inc
xor
stos
add
and
rcll
and
jbe
movb
jno
addr16
cli
out
cmpsb
sti
push
mov
outsl
jb
stos
paddusw
fs
out
das
cmpsb
pop
mov
cli
and
dec
jmp
cs
in
push
in
sahf
std
mov
xchg
test
dec
fistl
mov
jmp
pop
pop
ret
add
mov
cli
enter
adcl
es
popf
add
daa
inc
push
std
dec
xchg
into
daa
movb
fcmovbe
ret
mov
mov
fisttps
sbb
mov
das
mov
mov
in
mov
cmp
cmp
in
scas
xorb
lcall
jl
inc
test
inc
lods
aas
or
fldenv
repz
or
out
lea
push
stos
cmp
xchg
mov
xor
or
mov
jmp
cmpb
bound
outsb
shll
push
test
pop
shlb
push
push
ret
push
and
inc
ja
xchg
aaa
jns
repnz
jle
mov
add
pusha
sbb
test
push
dec
pusha
sub
mov
call
jbe
inc
mov
cmp
test
jle
divb
or
sbb
cmp
ficoml
and
add
mov
lock
movsl
stos
xchg
sbb
jnp
and
inc
scas
sub
lret
and
aad
pop
insb
add
sbb
jno
mov
or
push
in
lahf
aaa
xor
mov
sub
bound
bound
idivb
rorb
lds
xor
and
sub
dec
call
stc
into
flds
inc
mov
cmp
add
bound
dec
cltd
push
xlat
aam
filds
jbe
rcrl
fstps
pop
hlt
xor
outsb
testl
addr16
in
lret
lea
aas
and
and
ret
add
xor
ss
and
addb
xchg
fcomi
js
mulb
add
sub
add
pop
cmp
cmpsl
sahf
nop
sbb
push
rcrl
ror
sbb
jl
mov
loope
test
sbb
xorl
or
das
popa
loope
clc
lock
sub
cmpsb
das
mov
sub
sbb
sub
sti
pop
pusha
or
add
jmp
push
lcall
pop
andb
scas
cmp
jbe
aas
jnp
cmp
pop
lods
ja
inc
das
repz
std
or
jl
mov
mov
sbb
enter
add
ficoms
sarl
mov
call
sbb
add
sti
xor
stc
jbe
sub
mov
mov
and
mov
push
addr16
stos
pusha
pop
push
shr
hlt
int3
shrb
mov
pop
sub
xor
pop
sbb
cmpb
inc
rolb
fcomip
data16
push
ja
out
push
ficompl
fs
push
fsubr
sub
insl
cmp
sbb
mov
int
idivl
cltd
xchg
fistl
lods
sbb
cld
std
ret
push
jle
jg
mov
dec
stc
fiadds
dec
test
sub
sahf
mov
sbb
cmp
cmpsb
push
into
dec
jns
movsl
stc
ljmp
out
lock
mov
inc
xor
xor
clc
inc
stc
mov
cmp
lea
xchg
and
fstps
xchg
loope
and
dec
stos
pop
jb
addr16
pop
dec
gs
bound
adc
add
mov
adc
and
or
iretw
mov
jg
mov
cltd
sqrtps
jb
sub
push
rorb
mov
in
cwtl
cmp
stos
jae
inc
shlb
jle
jns
mov
sub
test
sahf
mov
dec
in
aam
test
adc
fsubr
xchg
les
inc
jl
bound
aaa
popf
lret
mov
sbb
mov
mov
inc
jle
xchg
popf
js
mov
add
add
data16
sub
stos
loopne
fldt
loopne
imul
mov
fst
jmp
xor
xchg
adc
xchg
cltd
sbb
data16
xchg
std
sbb
mov
sub
loopne
jnp
in
xchg
jae
dec
pop
mov
inc
das
pop
mov
fs
pusha
xlat
push
cs
cli
inc
call
add
inc
push
aam
test
sub
inc
in
and
sub
les
add
movsb
test
insb
filds
mov
fmuls
repnz
sbb
dec
jne
mov
fxch
imul
lea
andl
or
loope
cli
mov
inc
push
psrlq
jae
push
cwtl
mov
in
je,pn
dec
dec
pop
push
push
mov
xchg
and
dec
ljmp
push
cmp
movsb
scas
pop
jbe
idiv
repnz
xor
cwtl
push
jg
shrb
ja
ja
push
adc
or
rol
ds
mov
adc
insb
cmp
scas
mov
inc
sub
fs
or
negb
xchg
pop
ret
std
inc
insl
lcall
jo
push
enter
push
lds
cwtl
jnp
sti
mov
lcall
push
xchg
or
dec
scas
inc
and
cs
cmp
iret
jno
mov
jbe
loope
int
push
arpl
sbb
popf
mov
js
imul
jecxz
test
mov
mov
js
or
nop
std
add
and
lods
inc
adc
mov
ficomps
pop
xchg
cwtl
sub
adc
fldenv
mov
sub
mov
mov
cmp
or
scas
dec
and
inc
test
icebp
and
xchg
cli
out
push
sub
stos
lahf
ret
jne
mov
pop
jl
inc
sub
lods
ja
fcmovnu
sub
adc
dec
mov
mov
mul
ror
and
int3
jmp
repnz
cld
cmp
add
js
push
fisubrl
int3
ficoms
out
xchg
in
cltd
sub
aad
call
and
jns
mov
xor
addr16
or
addl
xchg
aas
es
pop
dec
fimuls
pop
push
cmpsb
sub
stc
pop
clc
jnp
push
mov
lds
push
fsubl
outsl
push
repz
jb
pop
test
icebp
mov
jns
dec
int3
repnz
daa
cmc
lds
shl
adc
xlat
roll
pushf
jb
lcall
pusha
filds
dec
adc
fldcw
mov
inc
mov
or
out
jae
outsb
push
jbe
pop
pushf
add
inc
cmp
pop
ficompl
aam
pop
fs
clc
cmc
repz
lock
sbb
mulb
and
or
insl
sarl
push
in
test
lods
popa
lods
mov
push
inc
add
xor
in
xchg
jmp
mov
aaa
xor
jl
push
loope
pop
pop
jg
xor
ret
jmp
int3
xor
lret
jmp
aaa
xor
or
into
push
out
pop
xor
mov
adc
outsb
shlb
jl
pop
cld
jo
xchg
mov
test
out
add
lds
jbe
push
cmp
pop
clc
stos
gs
jge
aas
shlb
not
xchg
or
cmp
pusha
inc
adcl
pop
pop
dec
push
test
or
rcrb
orb
mov
pop
arpl
hlt
xor
push
xchg
pop
dec
pop
xor
dec
mov
pop
leave
fildll
clc
iret
sbb
movsl
in
or
xchg
fwait
mov
test
cmpsb
lcall
and
pop
mov
push
sbb
cmpsl
push
adcl
negb
arpl
mov
jno,pn
aas
lret
push
into
jmp
lret
imul
ret
xor
jne
inc
outsb
cmp
inc
push
pmaxub
pop
std
js
mov
roll
loopne
hlt
lret
js
jae
out
mov
adc
ret
incb
push
fs
daa
das
sbb
mov
adcl
jno
movsl
adc
push
push
shr
push
loope
stos
mov
fidivrs
xchg
pop
jbe
and
jne
outsb
in
out
pop
clc
loope
xchg
int3
xchg
imul
xor
movsl
in
inc
adc
insb
jecxz
stos
je
test
add
sbb
jl
sbb
int
jns
add
clc
mov
ror
shlw
insb
es
add
popa
inc
das
cmp
mov
call
push
lods
std
test
icebp
dec
lret
shrl
fimull
ss
push
mov
leave
dec
jg
adc
mov
adc
fstpt
cmpsl
je
test
lea
aas
sub
bound
fcomi
sub
push
push
sub
push
mov
loopne
xor
std
pusha
les
and
stc
nop
stc
rolb
adc
mov
outsb
sub
ret
aad
dec
fstl
or
loopne
ret
outsb
in
xor
lds
jo
mov
ljmp
jge
lret
insl
movsl
add
push
inc
aam
stos
fs
shll
sub
sbb
aaa
xchg
bound
dec
adc
push
pusha
dec
pop
into
insb
pop
xchg
test
or
mov
hlt
inc
and
mov
cmpsb
test
mov
loopne
mov
push
testl
sbb
xor
push
mov
out
arpl
pop
push
sbb
jecxz
mov
mov
adc
mov
iret
int
pusha
loopne
xlat
xor
jb
lea
popf
mov
nop
fisttpll
imul
xchg
ss
es
and
in
test
andl
xor
jl
fbld
or
movl
out
nop
push
pop
pusha
sbb
fld
call
sti
cmp
mov
xchg
insl
out
and
lahf
mov
and
push
cli
sub
jl
popl
pop
dec
daa
pop
push
rcll
loope
jmp
inc
out
mov
push
inc
sub
xor
outsb
jp
cmpsb
and
or
hlt
outsl
cmp
pop
add
xchg
ja
lcall
dec
cmp
xor
mov
sahf
cmp
jmp
sub
dec
mov
call
mov
subb
data16
fdivl
imul
jle
push
jle
fcoml
push
arpl
int
xor
pop
ja
mov
lret
shl
mov
lock
lods
push
fcompl
in
mov
xchg
decl
fwait
sahf
sbb
icebp
out
into
and
dec
out
pop
pop
inc
movsl
push
push
test
and
xchg
inc
aas
mov
mov
xor
xor
push
hlt
loope
cli
jle
fadd
je
ficompl
xchg
jae,pn
daa
insb
cmp
subl
rclb
fistpll
out
loop
dec
jge
xchg
out
rolb
mov
and
outsb
dec
push
pop
xor
jle
test
pop
inc
fdiv
sbb
and
push
rcl
mov
mov
out
stos
dec
pop
cmp
dec
mulb
mov
test
scas
mov
mov
push
xor
add
aas
sbb
lret
sbb
je
psubusb
xchg
cmp
nop
addr16
jle
int3
or
cmp
popa
cmp
loopne
jbe
in
sbb
cli
and
cvtdq2ps
fs
fs
inc
mov
dec
movsl
dec
loope
arpl
adc
cmc
lahf
std
test
ficomps
call
adc
ret
arpl
pop
dec
cmpsb
in
mov
dec
and
pop
shrl
mov
jb
mov
add
or
xor
adc
cmp
es
dec
divb
cwtl
inc
pop
cmp
jge
adc
in
hlt
pop
aas
xor
mov
push
outsb
pop
xchg
inc
mov
xchg
insb
scas
add
push
test
mov
test
out
gs
and
daa
pop
inc
pop
xchg
stos
mov
std
jns
or
push
outsb
jns
lods
paddsb
outsl
xchg
xor
jne
lcall
hlt
jb
lods
jbe
pop
jl
cwtl
pop
ret
orl
ja
mov
cwtl
outsl
mov
push
cmp
dec
outsl
scas
lods
rol
fists
das
and
fistl
sti
popf
jbe
stos
sbb
scas
pop
inc
fnstcw
mov
mov
dec
xrelease
sub
xor
outsb
push
lahf
push
cmp
pop
test
lret
mov
xchg
xlat
dec
sbbb
and
mov
or
andl
sbb
xchg
out
pop
mov
adcl
loopne
lock
cmp
or
fcom
pushf
sarl
stos
lcall
pusha
pop
int3
rolb
push
decb
lret
cli
or
imul
xor
addr16
test
out
sbbb
mov
cmp
rorb
add
mov
arpl
cmp
push
jg
jb
or
push
push
pop
xchg
inc
or
insl
jge
in
shlb
xchg
sub
into
in
js
jbe
or
and
push
rcrl
jb
cltd
test
icebp
jno
dec
stos
rol
punpckhbw
test
and
nop
pop
pushf
push
pop
push
lahf
xchg
into
inc
push
pop
dec
mull
call
sbb
bound
adc
push
add
stos
jo
cmp
lock
push
addb
mov
stc
ljmp
out
adc
sbb
cld
insl
cli
jb
movsb
sti
lret
adc
cmp
hlt
psllw
stc
adc
aad
adc
mov
jo
mov
xchg
xchg
mov
jb,pn
daa
dec
inc
pop
mov
aas
fisttps
xchg
and
lret
sub
push
fdivp
movsl
lcall
repz
fisttpll
idiv
bound
leave
mov
loope
fidivl
iret
imul
mov
mov
or
and
pop
push
xor
data16
mov
lods
dec
orb
mov
call
cltd
lcall
xchg
push
mov
or
movsl
cli
dec
mov
aas
pop
cltd
int3
push
adc
in
fcompl
test
pop
int
xacquire
dec
dec
clc
lock
sahf
add
call
es
mov
inc
fwait
rol
jle
in
and
iret
daa
inc
xor
cmp
mov
inc
inc
push
pop
bnd
sub
nop
insb
push
mov
pop
xor
push
adc
icebp
mov
jle
lahf
pop
mov
cli
add
movsb
jl
lret
dec
fistl
in
leave
arpl
ret
lods
stc
sub
mov
ljmp
ret
sub
dec
rcr
neg
or
cmpsb
aam
push
push
mov
inc
enter
stos
repz
xchg
ficoms
and
aaa
call
movsl
lahf
mov
das
xor
insb
lock
stc
test
shlb
mov
add
push
ljmp
jp
xchg
push
insb
movsb
mov
cwtl
lds
xchg
xor
jb
int3
jmp
xor
push
xchg
jae
sbb
mov
jl
fcoms
js
inc
mov
mov
fs
repz
aas
pop
add
add
rclb
lods
cmp
push
rclb
adc
inc
ret
div
mov
cmp
repnz
jnp
in
xchg
dec
movb
mov
jecxz
enter
mov
pop
in
rcll
pushl
dec
cmp
or
hlt
das
jns
xchg
dec
call
sar
xor
pop
inc
dec
inc
nop
bound
ja
push
das
nop
dec
es
push
xor
inc
cli
push
in
mov
fs
mov
mov
in
sti
and
cli
cs
push
inc
cmp
andb
dec
insl
in
stos
adc
cld
std
cmp
inc
mov
stc
daa
xor
add
call
inc
pop
cmpsl
test
pop
fcmovb
ss
stc
je
ret
add
xor
lea
mov
jge
pop
add
mov
ds
lods
inc
add
outsl
add
fcompl
inc
dec
bsr
push
sub
inc
ror
fs
lods
jg
add
rclb
or
sbb
mov
jae
fwait
mov
or
sub
jbe
push
fwait
orb
sahf
shll
adc
add
icebp
cltd
jmp
add
adc
add
pushf
mov
adcb
pop
push
and
ss
jmp
mov
pusha
ret
push
xchg
mov
in
mov
xlat
nop
inc
out
cmp
jne
fcoms
mov
cli
pop
jmp
lods
xchg
popa
aaa
jcxz
add
inc
sub
sbb
sahf
pop
dec
out
add
add
xlat
enter
cld
inc
and
jge
sbb
inc
xor
lret
shll
inc
push
test
lahf
or
stos
pop
add
jp
adc
jecxz
cmp
sti
xor
push
iret
lret
fdiv
dec
sub
inc
jecxz
mov
sub
dec
dec
cmp
insl
jmp
mov
out
cmpsb
js
mov
insl
lret
cltd
pusha
jl
sbb
js
cmpl
repnz
and
push
xor
adc
repz
xchg
push
cmpb
outsb
test
imulb
fisttpl
repz
push
or
adc
idiv
nop
dec
mov
test
push
adc
lock
out
dec
jne
movsl
or
lea
xchg
scas
movsl
inc
in
pop
cli
sbb
xchg
ss
imul
xor
cwtl
push
icebp
loope
or
cmp
adcl
fs
shl
mov
xchg
out
inc
arpl
call
int3
je
adc
mov
loopne
cwtl
or
push
or
rclb
mov
cmpsl
pushf
mov
lods
in
insb
iret
cmc
ja
scas
sub
pop
aam
mov
test
or
push
jle
xchg
fcmovnu
pop
dec
mov
xchg
in
bound
mov
xchg
jns
orl
adc
std
push
and
movl
into
xchg
in
into
loopne
aaa
andb
aad
lods
push
rcr
cmpsb
inc
jmp
arpl
or
or
movsl
add
fiaddl
mov
lret
jae
and
ds
mov
jle
bound
les
ljmp
jae
call
addr16
in
sbb
movsb
lea
aam
repz
or
outsl
jb
cmpsl
jns
sbb
daa
es
fadd
outsl
sbb
jae
mov
dec
adc
loopne
icebp
bound
push
mov
inc
adc
push
pop
lret
xorb
rcrb
pushf
scas
or
out
adc
pushf
test
mov
das
je
jbe
dec
in
adc
jge
cmpsb
std
rcl
sbb
xlat
test
xchg
es
data16
push
lods
add
js
lods
sub
or
push
test
dec
mull
xor
push
dec
inc
lods
pop
es
pusha
jl
insl
xchg
hlt
xorb
mov
xchg
pop
in
fcomp
daa
das
movsl
stos
push
fisubl
adc
aad
out
xchg
cmp
lret
les
push
test
pusha
fisubs
adc
popf
out
outsl
lret
fldl
je
test
mov
jno
test
ja
mov
mov
out
lahf
popf
in
pop
xor
imul
mov
push
cmp
movsb
jo
sbb
inc
mov
push
cmp
dec
cmp
jmp
mov
pop
lret
loop
and
stos
mov
in
clc
cli
fidivrs
adc
push
clc
pop
insl
mov
andb
sub
mov
and
sub
fcmovb
test
movsb
dec
outsl
and
das
xlat
sbb
stos
icebp
rcrl
push
push
gs
orl
push
push
or
sub
sbb
sbbb
out
popa
scas
xlat
dec
or
insl
xchg
or
sub
loopne
cmp
int
sbb
repnz
push
in
out
fsts
ss
sbb
outsb
lods
and
hlt
data16
lods
inc
jae
shlb
pop
sbb
fs
mov
pop
scas
xor
add
push
xor
xchg
inc
ljmp
sbb
cmc
pushf
mov
in
cmc
int
std
sub
adc
xchg
mov
mov
bound
push
push
in
add
mov
sbb
test
jno
mov
xchg
outsl
pop
mov
faddl
mov
shlb
iret
repnz
dec
ds
jbe
scas
xchg
fcoms
cmp
mov
inc
dec
or
add
jo
pop
inc
jge
inc
and
jns
mov
sti
in
push
xor
inc
pop
out
dec
cwtl
in
or
xor
adc
push
push
mov
out
add
les
jge
cmpsl
add
add
add
imul
es
mov
out
loopne
or
sbb
mov
or
test
xchg
icebp
sbb
lcall
xor
shll
movsl
xchg
int3
inc
fldenv
sbb
mov
sti
ret
fsubl
insl
pop
ds
pop
lcall
sub
inc
push
sbb
jnp
mov
enter
add
gs
mov
jmp
mov
bound
stos
or
ljmp
push
data16
inc
dec
xchg
inc
ja
aad
fildll
mov
pushf
mov
pop
adc
stos
cmp
out
mov
or
mov
sub
fwait
xchg
popa
mov
jb
mov
into
aam
call
dec
inc
bound
or
xchg
mov
lcall
xchg
scas
jb
mov
imul
or
pushf
lahf
arpl
cmp
mov
int3
xor
aaa
mov
and
out
or
idivb
ret
adc
xor
mov
adc
gs
adc
jmp
dec
dec
cld
sbb
loope
inc
je
jbe
cmp
repnz
mov
ds
mov
ss
push
dec
and
jae
mov
pop
push
mov
shlb
imul
sbb
xchg
jle
cmp
rolb
pop
jle
cli
std
out
jle
ret
jbe
pop
sub
mov
cli
pop
lods
add
add
cmc
mov
and
pop
mov
div
aas
xchg
mov
sahf
ljmp
and
cmp
mov
or
xchg
and
fwait
fwait
lret
outsb
gs
or
mov
loop
movsb
mov
xor
dec
into
into
pop
inc
stos
inc
jo
lar
inc
mov
leave
ljmp
sub
push
in
xor
inc
leave
pop
add
ret
int
cvtdq2ps
pop
push
shr
pop
mov
adc
inc
fsts
scas
xchg
jbe
aam
and
adc
add
sub
mov
sahf
arpl
je
xor
pop
lds
rolb
out
faddl
xlat
and
jne
mov
imul
fwait
push
ja
dec
add
mov
insb
push
push
sub
mov
fcomp
mov
jecxz
pop
sbb
shlb
mov
mov
xor
sbbb
aam
xlat
test
jle
shrl
or
pop
cmp
cli
mov
xor
shr
pop
add
mov
add
cmp
push
sbbl
push
js
mov
popa
sysret
sub
inc
jmp
pop
bound
jmp
push
jecxz
jb
in
mov
rol
mov
mov
fistps
xchg
insb
mov
dec
mov
add
fldcw
sbb
and
inc
adc
dec
push
xchg
inc
neg
xchg
dec
test
stc
push
mov
loop
inc
mov
aad
leave
pop
add
push
fldcw
das
xor
mov
sub
scas
sub
les
das
jbe
test
jmp
mov
dec
and
xor
or
xor
adc
fwait
arpl
or
pusha
into
hlt
dec
push
stc
cmp
mov
stc
popf
lahf
xor
and
or
lods
popa
add
or
or
jl
jg
outsl
fwait
add
xchg
mov
sbb
xchg
inc
mov
dec
and
nop
fdivrl
lock
sub
rcrl
jns
ja
adcl
outsl
test
icebp
adc
pop
stc
aad
xor
add
xor
mov
movsl
xchg
inc
es
mov
fld
popa
mov
push
stc
lods
sbb
ret
iret
add
lds
lahf
mov
xor
inc
add
fimuls
mov
and
xchg
inc
test
repz
fmull
adc
mov
jle
inc
ja
sub
loop
inc
out
cmp
imul
cmp
test
push
sbb
mov
xchg
data16
repz
dec
add
mov
negl
xchg
inc
jae
into
leave
or
bound
pop
inc
jns
mov
mov
jae
xor
dec
fisubs
in
sbb
aam
je
dec
jns
jle
push
sub
cld
repnz
push
add
lods
add
dec
in
rdpmc
data16
lds
push
sub
dec
xlat
dec
and
fidivrl
arpl
fldcw
pop
aam
mov
in
pop
outsl
pop
rolb
in
push
mov
inc
aaa
pop
test
imul
xor
fucomp
loopne
aad
stos
es
xchg
out
jg
jbe
sub
push
out
inc
pop
or
in
dec
sub
bound
testl
mov
aad
xor
lock
jl
stos
sarl
int
xor
cmp
test
add
bound
add
jno
jge
xchg
lea
add
out
jmp
pusha
sbb
enter
jae
in
xchg
fstpl
add
sbb
sbb
cmp
dec
outsl
int
xor
push
sbb
std
sub
push
ss
ss
aad
jg
mov
cmpl
sbb
scas
push
in
or
dec
dec
jle
adc
jge
adc
cmc
mov
loop
sahf
sub
push
or
jbe
movl
hlt
lds
ja
je
das
out
bound
cmp
sub
xchg
adc
sbb
mov
ret
pop
outsb
adc
das
jo
insb
mov
sub
outsl
lret
mov
mov
data16
and
xorl
cmp
out
jae
pop
lods
sarb
mov
aas
bound
jbe
mov
sbb
xor
push
gs
mov
std
iret
sub
iret
pop
pop
gs
test
jbe
push
imulb
out
stos
xchg
pop
xorl
les
jne
scas
aas
insw
fwait
xchg
imul
push
and
cs
stos
dec
jg
repnz
lock
mov
stc
pushf
in
push
lods
cmp
jo
fldt
pop
or
imul
fsubl
mov
and
dec
xor
xchg
pop
push
push
jns
imul
out
in
sbb
sti
jmp
jp
cmpl
push
int
rcrl
shl
gs
in
int
call
in
pop
xchg
mov
test
jno
cld
test
xchg
mov
jl
sarl
fimuls
adc
bound
fldt
sbb
leave
in
cmp
lods
gs
fcompl
jmp
or
push
mov
inc
fs
out
dec
add
or
mov
jecxz
xchg
loop
or
push
dec
cmp
and
adc
cmp
lock
dec
jl
js
pop
stos
incl
fucomi
popa
mov
loopne
out
jae
pop
sti
js
pusha
pushf
icebp
inc
mov
dec
icebp
mov
aam
mov
in
push
jge
mov
or
dec
fnstenv
inc
and
dec
cmpsl
lods
cmp
jns
adc
imul
xchg
addr16
add
mov
mov
cmc
shrb
dec
icebp
test
sub
fildl
and
inc
jge
cmc
pop
adc
inc
aad
pop
pop
pushf
mov
loope
or
int
cmp
cmp
jl
pusha
cmpsl
scas
fidivrl
ja
testl
pop
flds
pushl
nop
stc
mov
push
mov
sub
cwtl
xlat
and
mov
push
xor
add
and
xchg
adc
roll
scas
cmc
pop
adcb
ss
xor
sbb
cltd
dec
xor
leave
hlt
adc
lock
inc
repnz
or
pop
mov
adc
test
outsl
int3
xchg
inc
jnp
mov
icebp
into
inc
pop
inc
ret
shlb
cmp
jb
sbb
sti
jmp
push
imul
jg
jae
push
ffreep
pusha
aaa
xor
pushl
cwtl
sub
xchg
pop
jmp
or
inc
sub
pop
incl
sub
adc
icebp
push
int
mov
lahf
in
mov
je
and
sarl
fiadds
cmpsb
jl
xchg
xor
ss
arpl
jne
inc
push
cmp
add
push
mov
mov
lahf
test
mov
cmp
std
push
push
or
jb
adc
out
adc
lret
stc
ja
push
mov
mov
dec
cmp
das
pop
cltd
pushf
lods
outsl
out
mov
and
dec
xchg
push
mov
xchg
movsl
stc
ja
jl
es
pop
mov
je
mov
mov
movsb
subl
and
out
clc
jnp
negb
fidivl
ja
pop
mov
inc
in
fsubr
add
pusha
fsubrs
div
insl
les
mov
daa
cmp
push
or
pop
mov
xor
jo
push
hlt
sub
sti
adcl
mov
addr16
sub
punpckhdq
inc
xor
rclb
mov
je
call
sar
inc
push
push
test
pop
xlat
movsl
xchg
es
adc
jns,pn
shlb
loop
lcall
xchg
xchg
or
push
sub
sbb
das
xor
sub
xor
adc
adc
outsb
xor
in
jmp
icebp
es
xorl
std
loope
and
popa
add
ja
aam
jmp
lahf
mov
mov
jmp
adc
popa
push
xchg
rorl
xchg
int
lods
jecxz
lcall
cli
out
mov
out
add
out
jmp
sub
scas
sub
jge
addr16
push
mov
data16
cmp
jmp
stc
ja
es
xchg
xchg
scas
insl
aaa
pop
call
xchg
pop
ljmp
fadds
aad
rcll
jnp
cs
sbb
jb
and
fists
cmp
scas
lock
lods
push
adc
xor
ret
sub
mov
xchg
idivb
sbb
daa
adc
jae
or
pop
jmp
fsub
xchg
adc
adc
arpl
and
incb
cltd
dec
add
push
inc
fdivrl
mov
jnp
cmp
fdivp
stos
testb
int3
daa
aaa
adc
out
jle
mov
jnp
jle
push
xor
xlat
pop
cs
mov
popf
popa
lods
popf
movsl
scas
and
test
sub
cmpsb
sub
and
pop
mov
imul
sub
mov
mov
mov
jle
xlat
mov
adc
aad
cmp
mov
inc
lcall
int
inc
push
and
sti
loopne
adc
and
xor
lahf
sbbb
push
jle
jae
sub
fs
testb
lock
xor
scas
jl
das
orb
inc
xor
in
push
dec
cmc
sahf
adc
in
mov
jl
pop
xor
test
movsb
pop
push
lods
dec
or
out
ljmp
cmp
cmp
xchg
rclb
icebp
or
or
arpl
mov
or
lds
in
and
mov
faddl
push
lahf
aaa
mov
pop
xor
adc
xor
mov
add
lret
adc
ret
pop
popf
in
mov
add
inc
jge
test
adc
lret
bound
mov
leave
sub
sub
cli
fnstenv
jge
sbb
lods
push
jne
scas
adc
inc
daa
cld
and
fisttpl
ror
notl
fs
jge
push
and
and
popf
dec
leave
in
mov
xchg
arpl
pop
inc
mov
sub
xor
mov
and
es
xchg
stos
sub
aam
in
inc
and
lock
into
xchg
stos
and
mov
ds
stos
and
mov
dec
or
jecxz
sbb
cwtl
jbe
lods
jle
cwtl
cmpsl
stos
push
cmp
sub
push
xchg
ret
pop
int3
adc
xchg
cmp
pop
push
add
mov
sub
add
pop
sub
insl
xor
test
pop
mov
push
cmpsl
push
push
jne
repz
add
pop
push
and
mov
ja
xchg
or
jge
mov
cld
xor
fcompl
xorb
sbb
sbb
xor
test
push
jmp
fs
outsb
aam
xor
out
push
mov
imul
lea
jbe
cmc
mov
rolb
les
sbb
imull
jns
sub
mov
xchg
sbb
cmpsl
cmc
lcall
push
stos
into
mov
lods
push
fildl
dec
lret
and
xchg
cmpsb
leave
cmp
repnz
das
pop
addr16
push
outsb
lcall
sbb
outsl
iret
push
inc
sub
cwtl
push
mov
sti
jns
insl
dec
pop
stos
decb
int3
fcmovnbe
sbb
pushl
dec
mov
scas
xchg
and
mov
mov
pop
jnp
sbb
outsb
call
push
rol
mov
cld
jle
fidivs
push
lock
int
adc
outsb
inc
jecxz
int3
mov
xchg
dec
cltd
xchg
add
add
dec
pusha
mov
out
sbb
sub
fisubl
add
mov
cltd
cld
add
or
arpl
gs
xchg
fstpl
mov
jae
mov
mov
insb
jnp
xchg
push
dec
aas
outsl
sub
jbe
mov
jo
stos
jno
iret
fimuls
iret
popf
addr16
movsb
into
sub
out
pop
mov
imul
dec
aas
adc
pop
mov
cwtl
dec
adc
fcoms
into
lret
add
cmp
aad
std
sbb
and
mov
imul
pop
enter
incl
lds
and
lcall
push
sahf
imulb
mov
xor
jmp
es
std
dec
fs
imul
add
jp
mov
or
xchg
sbb
jl
cmp
loope
repz
rorl
call
jns
cli
ljmp
stos
outsb
std
mov
or
outsb
fists
sbb
cmp
cwtl
inc
pop
pushf
mov
inc
lret
aas
stc
cmpsb
cmpsb
fists
stos
pop
or
std
mov
in
call
dec
push
jns
mov
sub
loope
mov
arpl
out
scas
fidivrl
scas
lock
cmpsb
sub
mov
sahf
fwait
aaa
cmpsl
cmc
fdivs
push
cmp
test
jmp
stos
dec
and
xor
sbb
test
into
std
push
dec
xorb
mov
pop
push
out
daa
addb
inc
nop
in
cmp
ss
outsb
or
addr16
fmul
out
mov
push
jnp
mov
repz
punpckldq
sub
jecxz
stc
or
add
inc
es
or
dec
or
shl
repnz
add
sbb
xchg
inc
pop
fmulp
shrb
push
sbbb
test
int
push
fcomps
int3
sbb
add
push
cmp
dec
aam
aaa
jl
jp
arpl
stos
inc
sbb
jl
push
popa
faddl
lea
xchg
or
dec
pusha
adc
and
insb
mov
out
repnz
cli
xchg
stc
pushf
xchg
stos
mov
push
inc
filds
mov
into
inc
mov
popa
mov
fstl
sahf
and
push
hlt
mov
bound
mov
jae
fstpl
out
loope
les
in
pop
cmp
jnp
ljmp
pusha
or
mov
ljmp
fs
cs
add
push
adc
movsb
dec
inc
out
push
and
cwtl
sub
push
in
cli
add
int3
adc
push
roll
lahf
outsb
adc
push
mov
dec
push
out
mov
sbb
jo
icebp
pop
inc
mov
lods
adc
inc
xchg
daa
push
lds
add
xor
imul
test
outsl
aas
add
dec
push
mov
lret
xchg
jbe
pop
sahf
sub
mov
js
cmp
ss
mov
repnz
cwtl
jecxz
aas
inc
in
add
inc
cmc
cmp
pop
nop
pushf
xchg
aad
xchg
adc
push
and
cs
mov
mov
sbb
hlt
jb
add
movsl
ljmp
push
into
or
mov
xor
jge
lock
movsb
xor
mov
jno
cltd
push
lods
scas
pushf
xlat
push
push
cwtl
push
xchg
pop
shll
xchg
shll
mov
out
mov
adc
xlat
lock
mov
lods
les
inc
push
jge
mov
in
sub
sbb
imul
inc
xor
bound
in
xchg
pushf
loope
or
lretw
dec
aas
adc
popa
dec
rclb
out
and
ficomps
outsl
fimull
xchg
sub
lock
push
add
inc
lcall
and
pop
mul
pop
lods
jmp
xchg
mov
test
insl
enter
fwait
icebp
push
dec
mov
or
out
sar
cmp
dec
inc
push
adc
xor
hlt
lock
in
ds
jmp
mov
mov
ret
gs
jb
xor
testl
jg
mov
mov
pop
gs
in
cltd
and
sbb
mov
lods
fsubrs
push
mov
sti
jl
es
fisubrs
subl
xor
std
loope
imul
dec
call
xchg
xor
insb
sub
adc
cld
jl
jmp
push
lcall
sahf
jae
push
xor
xchg
push
aad
mov
out
rolb
mov
dec
mov
xchg
cmp
add
xor
loopne
mov
jmp
xchg
pop
mov
shlb
in
ja
pop
xchg
ret
cmp
lret
pop
rcl
dec
inc
pop
repnz
jbe
or
stc
insb
pusha
mov
lods
dec
push
pop
jge
stos
hlt
ret
negl
fs
mov
rorb
mov
addr16
les
ljmp
stos
cs
shlb
or
push
push
and
and
add
cmpsb
adc
mov
outsl
je
ffree
enter
mov
jns
pusha
jmp
mulb
sbbb
mov
scas
mov
jno
adc
int
dec
std
jl
jo
sub
cs
jno
xchg
push
ja,pt
test
jle
pop
jbe
repz
mov
mov
sar
mov
pop
or
mov
out
aad
dec
pop
frstor
daa
mov
and
test
sti
add
pop
adc
or
in
pop
dec
imul
lock
pop
cmpsb
push
in
out
gs
enter
decl
or
mov
push
stos
imul
arpl
pop
int
rorb
and
push
cld
mov
pop
pop
cltd
dec
popf
cmc
and
and
or
inc
adc
ljmp
addr16
jle
dec
adc
iret
jge
jle
in
cmpsb
out
popf
adc
in
not
cmp
rcl
popf
and
jl
cmp
xlat
mov
mov
arpl
popa
in
and
iret
mov
lret
inc
cmp
test
sbb
test
daa
dec
fwait
dec
call
in
sbb
mov
loopne
cmp
add
cmp
mov
xchg
into
push
mov
test
fnstsw
pusha
mov
dec
enter
inc
cmp
popa
sahf
cmp
insl
mov
xchg
inc
ret
dec
mov
outsl
xchg
test
fwait
lock
or
out
inc
or
xchg
es
outsl
push
jl
hlt
dec
jne
movsb
incl
mov
dec
mov
jb
sbb
mov
mov
xor
jmp
sub
push
lock
cmp
enter
dec
shl
subl
lods
lods
mov
dec
hlt
hlt
adc
lret
jae
cmp
loopne
shl
pop
mov
sahf
test
cmpb
xchg
aaa
xor
jb
pop
movsb
scas
movsl
xchg
repz
rorb
ret
movsl
aad
aad
adcb
xchg
pushf
xor
dec
xchg
aaa
movl
iret
lods
sbb
sbb
push
xchg
lock
sbb
adc
cmc
call
inc
lods
xchg
mov
js
mov
inc
dec
or
test
push
cmpsb
leave
std
mov
stc
mov
movsb
mulb
xorl
mov
dec
adc
movl
push
shll
imul
gs
shll
cwtl
jg
or
sbb
lods
add
xchg
pop
test
out
pop
jno
mov
and
in
rorb
pop
test
mov
pushf
mov
adc
shlb
pop
push
clc
sub
aam
and
loop
repz
push
xlat
outsl
jmp
lds
adc
cmpsl
mov
cltd
jmp
xchg
mov
mov
mov
push
pusha
pop
icebp
stos
cmp
xchg
imul
movsl
popf
sbb
ljmp
out
popa
pop
push
ret
fwait
cmpb
or
mov
outsl
sub
stc
jl
sub
sub
ds
out
lcall
into
fstp
lcall
outsl
hlt
push
loop
cmp
rorl
inc
imul
mov
push
enter
pop
fs
data16
fs
jl
mov
out
or
jbe
sbb
mov
push
adc
out
jae
insb
xchg
sub
test
pop
sbb
mov
imul
mov
out
cmp
mov
sbb
lret
push
fcom
mov
scas
cltd
pushf
mov
pop
lret
lret
mov
inc
push
and
pop
test
sahf
and
jg
add
push
xor
jecxz
cli
pushf
int
xor
jo
popf
xor
jne
mov
fcmovnu
jl
or
scas
jp
stc
push
pop
cmp
sub
cwtl
cmp
push
push
jmp
adc
aad
lock
push
fsubp
pop
pop
ja
jne
push
xor
cwtl
sub
pop
sub
int3
sub
cmc
adc
dec
xor
aaa
ficoml
lahf
jo
dec
outsb
adc
dec
mov
pop
aas
aaa
xchg
jp
std
fistpl
push
jno
aam
movsl
int
loopne
pop
xor
stc
jb
cwtl
xor
fsubl
cs
mov
jns
mov
fs
imul
imul
or
sub
push
test
cwtl
pop
xchg
sub
sahf
inc
pop
xchg
xchg
lret
mov
lret
imul
sbb
cmpsl
jbe
push
xor
out
jle
lock
pop
jnp
out
dec
lods
scas
outsb
and
inc
lret
sbb
fwait
icebp
stos
sbb
stc
iret
in
ds
jge
mov
jp
or
mov
cltd
imull
andb
inc
leave
add
or
std
mov
inc
repz
jno
mov
push
je
ret
dec
push
ret
fisubrs
movsl
cld
lcall
imul
sarb
jl
into
movsl
xchg
lods
mov
lock
xor
pop
lds
jp
sbb
jae
pop
clc
mov
arpl
dec
jbe
decl
pop
add
jns
jne
inc
sbb
push
jge
sbb
aad
jecxz
rclb
dec
outsb
jnp
mov
mov
insb
push
repz
add
lcall
push
dec
mov
cwtl
or
insl
and
stos
cld
mov
enter
cmp
xchg
mov
cmp
cmp
pop
movzbl
adc
xor
flds
test
in
sbb
out
int
jns
cltd
xor
rcrb
mov
mov
scas
repz
cmpl
rolb
push
mov
jmp
xor
add
mov
mul
pop
ret
dec
inc
fisttpl
fcoms
dec
dec
jl
jecxz
jl
or
lret
cmpsb
movsl
cmpsb
ja
mov
xlat
bound
enter
popa
mov
int
push
rclb
ljmp
cmpsb
imul
icebp
mov
mov
cld
dec
es
mov
jo
pop
xchg
xor
pop
rorb
jle
push
and
push
cltd
add
add
mov
cwtl
rol
jb
popf
loopne
jns
je
pop
or
sbb
addr16
sub
roll
stos
xchg
pop
push
aad
add
clc
mov
dec
in
cmpsl
dec
xlat
adc
shll
test
jne
or
push
jmp
popa
data16
xchg
aam
out
mov
sbb
inc
out
dec
cmp
add
lcall
jo
xor
subb
in
adc
lcall
inc
fistpll
daa
dec
push
mov
test
push
inc
jmp
into
dec
cs
sbb
int
push
xchg
mov
mov
imul
push
aaa
jnp
das
pop
jecxz
mov
movsl
jns
xor
push
cmp
addr16
ljmp
dec
insl
mov
or
jnp
mov
mov
inc
cmpsb
int
daa
mov
and
dec
in
mov
repnz
fstpl
xchg
mov
mov
lods
cld
cmpb
xor
lods
pop
push
lahf
lds
and
stos
sub
inc
adc
jb
cmp
xor
fiadds
mov
inc
bound
pop
lret
push
cs
adc
test
and
daa
popa
and
cmp
sub
movsl
sbb
loopne
daa
les
stos
in
xchg
sbb
mov
shll
add
mov
xor
add
lods
and
sub
cmp
testl
sub
jmp
iret
xchg
add
mov
repz
xor
push
sbbb
xchg
add
je
in
enter
push
test
sub
jo
addr16
cmp
push
pop
push
xchg
popf
je
lds
cmp
cmp
mov
cmp
add
decb
movsb
mov
fcoms
mov
mov
adc
shlb
cmovp
mov
arpl
jle
lock
sbb
clc
or
mov
repz
pop
xchg
clc
out
or
das
fiaddl
imul
xor
in
mov
popf
inc
out
sub
shll
shlb
hlt
in
inc
sbb
ja
mov
insb
das
sub
cli
jg
cli
push
cmpsl
popf
jbe
push
nop
rcrb
mov
inc
ret
loop
test
scas
imul
out
into
jle
cmp
xor
add
mov
test
xchg
rorb
adc
mulb
pop
inc
ret
pop
adc
mov
cmp
xchg
cs
push
sub
mov
cmc
mov
fwait
add
cmpsl
pop
insl
mov
push
push
es
mov
add
lahf
jae
pop
adc
shl
sarb
sbb
or
or
repz
push
je
dec
repz
fadds
pop
aas
xor
add
pop
icebp
push
psrad
dec
pusha
out
test
pusha
fstl
jl
cmp
sub
inc
or
pop
sub
xor
jns
ljmp
adc
mov
pop
push
mov
mov
push
jle
jno
mov
dec
je
stos
mov
sub
divb
das
sbb
fnstsw
popa
or
div
adcb
push
loopne
leave
lods
mov
mull
xchg
push
lcall
lahf
cmp
inc
shlb
cmpsb
out
ja
mov
popa
out
out
lcall
xorl
jne
xor
xor
pop
int
push
aas
pop
mov
daa
and
pop
fcoml
mov
stos
xchg
mov
enter
gs
lock
cmpsl
outsb
adc
push
in
fcmovu
add
lea
lods
adc
roll
inc
xor
cld
shl
pop
das
rol
inc
inc
mov
hlt
in
daa
sarb
arpl
jle
xor
jae
ljmp
out
ret
push
sub
mov
sahf
cmpsl
push
lret
jbe
pop
sub
xchg
xchg
dec
mov
or
sub
add
push
cwtl
inc
push
popf
adc
test
mov
inc
outsb
lock
cli
dec
movsl
clc
gs
dec
or
xchg
jae
cwtl
dec
xchg
fcmovne
and
enter
mov
cmp
lock
and
fists
and
mov
fstpt
or
push
or
mov
pop
dec
pusha
lahf
aad
cli
data16
dec
mov
jmp
jo
je
mov
adc
mov
dec
call
push
mov
in
adcb
xlat
xchg
and
rcrl
mov
jge
pop
in
adc
add
gs
and
test
shlb
adc
mov
fbld
jg
pushf
jmp
push
dec
sarb
add
and
sahf
pop
call
mov
jns
dec
mov
adc
mov
jle
icebp
sub
icebp
lods
mov
mov
mov
lahf
sub
inc
dec
jo
mov
sub
daa
jle
ret
mov
outsb
pop
lods
mov
jmp
daa
stos
aad
xchg
add
inc
xchg
mov
jp
add
cwtl
shlb
mov
cmc
ficoml
jo
and
loopne
pop
jmp
xchg
cmpsl
cmp
cs
or
fldl
pop
cmp
sub
mov
sbb
adc
ret
int
sub
mov
mov
mov
push
in
xchg
adc
xchg
xor
dec
push
xchg
xor
dec
cmp
mov
pop
mov
mov
movsb
orl
pop
jno
and
pop
push
movsl
mov
stc
jle
ljmp
ret
cmpsl
and
stos
loope
cmpsl
xor
mov
mov
mov
cmp
insl
xor
jp
add
sbb
mov
lock
imul
lcall
mov
xchg
loopne
cmp
daa
xlat
jg
dec
js
pop
sbbl
cmp
cwtl
loope,pt
xchg
add
add
sarb
xor
adc
cmp
movsl
cmp
sbb
cmp
notl
imul
xor
stos
cwtl
push
mov
outsl
imul
rcrb
aad
pusha
addl
pushf
pop
pop
out
sub
and
sub
faddl
pop
inc
mov
jbe
subl
int3
xlat
add
mov
stos
daa
push
mov
in
push
jg
mov
inc
inc
inc
push
outsb
adc
int
sbb
dec
fldl
loop
push
stos
pop
fstl
and
jne
or
pop
jmp
pop
andl
movsb
sti
jb
sub
fidivs
outsl
mov
pop
adc
inc
je
bound
lea
loope
ret
mov
push
xchg
pusha
xchg
jo
cmpsb
xor
ljmp
sbb
push
mov
sbb
decb
ret
adc
mov
fadd
adc
fcoml
inc
dec
xor
or
cltd
xor
sarb
add
mov
jecxz
out
arpl
test
or
imul
xchg
pop
aas
xor
sub
pop
lcall
lea
pop
and
add
mov
test
inc
fistpl
jecxz
test
xchg
xchg
sbb
inc
in
sub
mov
loope
xchg
cmp
stos
sbb
enter
push
sbb
adc
mov
mov
push
scas
or
jo
enter
push
repnz
int3
mov
sbb
sbb
arpl
jns
jbe
icebp
int3
jo
loop
mov
pop
rorl
rolb
jns
xor
enter
fisubl
jl
and
lock
xchg
or
jne
leave
mov
aad
arpl
pusha
hlt
jp
cmp
and
mov
push
xchg
push
out
cmpb
aaa
sbb
mov
out
adc
cmpsl
jo
xor
ljmp
jbe
mov
jl
mov
aas
inc
pop
adc
adc
pop
inc
mov
repz
or
stos
jns
xor
xor
cmpsl
mov
jp
pop
xor
gs
mov
out
sbb
in
mov
inc
fst
fisttpll
add
jle
and
add
xchg
cmp
mov
shlb
out
stos
xor
in
pop
lahf
xor
rorl
out
push
inc
jbe
fdivrs
push
inc
fst
jae
pop
jne
and
sub
mov
fdivl
jle
jp
sarb
test
and
adc
mov
lods
cmp
loopne
sbb
cmp
mov
sti
repnz
arpl
lods
daa
stos
jp
nop
pop
pop
sub
ljmp
mov
add
lea
loope
mul
push
or
popa
dec
jnp
fmuls
arpl
inc
or
mov
ret
fwait
jecxz
test
dec
xlat
int3
xlat
jle
lret
ja
mov
and
mov
jmp
rol
repz
jno
shlb
sub
aas
push
movsb
add
bnd
push
sub
loopew
int
rcll
cltd
pop
pop
mov
into
cmp
test
outsl
mov
or
mov
mov
mov
jg
lret
cmp
mov
stos
test
sbb
and
fdivr
dec
ljmp
sbb
push
jne
jle
and
leave
mov
mov
pusha
adc
sub
inc
xlat
cmp
mov
cli
inc
dec
and
rolb
xchg
jecxz
cwtl
sarb
fsub
popf
jbe
xchg
out
in
addr16
fs
sti
test
fstps
add
and
mov
les
lahf
dec
xchg
sbb
popa
mov
out
push
cmpsl
adc
je
cwtl
daa
and
jns
jg
inc
pop
ss
rcrl
ja
loope
repz
xchg
int
add
jns
jb
and
int3
xor
jecxz
into
push
aaa
jg
pop
bound
lods
test
and
pop
mov
pop
imul
into
cltd
xchg
pop
push
and
fstps
jae
outsb
fwait
mov
out
push
pop
add
leave
fstps
rorl
stos
sahf
mov
sbb
cmp
addr16
movsl
mov
lods
jo
jle
fiaddl
cld
or
loope
dec
jle
sbb
dec
cmc
sar
gs
mov
aad
push
and
dec
sbb
add
test
mov
pop
xor
push
xchg
outsl
inc
xchg
ja
dec
pop
adc
xor
dec
lock
pop
into
std
in
fstpl
cli
pop
lods
ss
lcall
clc
adc
div
arpl
mov
xchg
cmp
je
fidivrl
fsubl
ror
pusha
jne
xlat
add
in
push
ss
imul
sub
xor
lds
lods
aas
mov
adc
mov
pop
adc
sub
mov
repnz
xchg
mov
in
xor
and
cmp
imul
xchg
mov
mov
pop
sub
mov
pop
gs
fistpll
in
and
sbb
sbb
jbe
xchg
in
mov
jbe
pushf
ljmp
inc
aam
or
scas
pcmpeqd
xor
adc
ret
xchg
jle
icebp
jge
iret
inc
jle
movsl
pushf
and
mov
or
mov
add
mov
mov
das
ja
cmp
mov
decl
leave
sarl
xchg
dec
dec
enter
repz
fs
pop
xchg
xchg
roll
xchg
inc
es
xchg
pop
push
inc
icebp
mov
out
lret
xor
add
cmpsb
cmp
mov
arpl
adc
xchg
jmp
fs
pop
jae
lds
adc
jle
push
or
ds
add
ds
xorl
stos
lret
pop
in
dec
pop
xor
dec
pop
xchg
repz
icebp
mov
pop
mov
scas
jmp
imul
mov
cmp
jle
fmul
add
adc
out
bound
cmp
movsb
mov
adc
ss
dec
fwait
jmp
mov
inc
or
in
clc
mov
js
sbb
push
aas
jmp
div
xor
stos
pop
leave
cli
pop
push
inc
lret
add
in
stos
xchg
in
mov
pop
sub
xchg
add
ss
fnsave
xchg
iret
out
arpl
loop
sbb
cmp
push
or
int3
cmp
aaa
hlt
ds
neg
mov
adc
in
fsubl
pop
add
adcb
pop
inc
mov
jl
popa
mov
jp
nop
lret
ja
adc
sti
pop
sbb
inc
sub
push
stos
out
pushf
fdivr
leave
add
test
subl
int3
push
sbb
bound
int
mov
xchg
xchg
mov
outsb
jl
cmp
mov
pop
scas
dec
cmp
push
fcoms
iret
adcl
popa
lds
fs
add
xorb
cmpb
out
aas
sbb
call
movsb
int
inc
aam
cs
or
jns
xchg
out
in
mov
in
jnp
shlb
mov
inc
int
neg
sbb
int3
out
and
pop
lods
push
mov
xchg
pop
lcall
outsb
lret
into
clc
mov
dec
popa
test
movsl
es
push
aas
repnz
sbb
add
dec
mov
sub
mov
adc
cmp
int
fwait
in
ds
call
popa
lcall
mov
test
sahf
fisubl
jg
xchg
xchg
pop
test
jnp
ret
je
xor
outsl
sbbb
jnp
xchg
lcall
notb
add
test
push
notl
jb
cmp
lahf
xor
orl
subl
stc
es
dec
xchg
sbb
xchg
in
jno
pop
imul
dec
xchg
xchg
pop
xchg
sub
add
dec
xor
add
push
sbb
dec
sub
fs
in
in
lret
jnp
scas
inc
push
sub
jmp
cmpsl
stos
fistpll
scas
jg
cld
lcall
sbb
call
xor
dec
or
adc
mov
mov
outsb
push
xor
shl
pop
jnp
inc
mov
xor
mov
into
out
outsl
out
mov
movsb
andps
sub
mov
lahf
inc
pop
imul
inc
cld
jmp
sbb
xchg
pop
dec
out
push
mov
gs
fldl
insb
mov
jns
dec
daa
sub
fcompl
mov
push
dec
stos
xor
mov
jge
mov
cmp
sahf
insl
arpl
inc
pop
sti
dec
cli
lret
jno
in
popl
imul
orb
addl
lret
in
cmpsb
mov
sbb
sbb
add
jp
jbe
enter
mov
push
pusha
jo
sub
pop
xor
xor
sub
mov
xor
pop
popf
push
nop
xor
dec
cwtl
sbb
pop
xor
pop
mov
and
adc
fists
fucom
mov
mov
fdivrl
repnz
in
adc
aaa
test
orl
hlt
jmp
subl
ror
jp
push
lods
das
repz
leave
pop
xor
loopne
leave
add
mov
fidivl
ret
mov
fdivrs
shll
cltd
mov
and
in
neg
std
testb
jmp
xchg
jle
movsl
push
nop
addb
and
mov
arpl
ja
sbb
rorl
push
jmp
movsb
sahf
std
sub
adcl
inc
insb
inc
nop
das
xor
scas
fs
cs
in
test
sbb
fisttpll
enter
cmpsl
cmp
dec
fwait
or
data16
aam
pop
fs
data16
mov
pop
mov
popa
add
or
enter
cs
pushf
popf
call
imul
repz
repnz
inc
jnp
inc
stos
sbb
add
insl
xchg
or
mov
stc
jecxz
shl
iret
xlat
rcrb
sbb
sub
sub
xor
cmp
add
pop
lret
daa
dec
das
sbb
push
fistpl
sub
jp
lcall
and
push
outsb
dec
sub
iret
sub
mov
push
lock
xor
mov
cmp
mov
gs
jno
aaa
push
lock
dec
sti
cmp
pop
xchg
add
push
or
in
push
sbb
xchg
pop
iret
xor
inc
jnp
sub
jns
orl
xor
mov
nop
enter
push
dec
iret
sbb
or
pop
mov
es
rcrb
fstps
jp
inc
arpl
aam
mov
cmp
inc
call
ljmp
or
enter
iret
jno
les
cmp
ljmp
out
xlat
push
push
xchg
fcmove
into
and
pushf
scas
sbb
repnz
mov
pop
push
push
outsb
cmp
inc
xchg
negb
out
stos
adc
enter
shl
adc
push
xor
test
xor
xchg
stos
into
dec
je
lahf
xor
push
mov
rcrl
mov
push
xlat
ret
inc
pop
push
sbb
imul
xor
jns
sahf
push
popa
lcall
ret
cmp
sub
inc
jmp
pop
push
shll
xchg
xchg
sub
pop
and
pop
cmp
popa
mov
xor
into
pop
cmpl
mov
xchg
scas
outsl
add
mov
lods
imul
add
das
fdiv
cmp
das
loope
xor
or
xor
jb
out
xor
xor
xor
clc
jecxz
test
lcall
imul
jns
stos
cltd
fcomip
or
xlat
ljmp
insb
push
sbb
iret
mov
pop
adc
sbb
fs
enter
add
getsec
or
leave
mov
jb
push
inc
stc
cltd
loopne
xor
dec
aaa
subb
xchg
xor
cmp
xor
jo
pop
adc
pop
mov
and
xor
stc
jbe
add
sbb
mov
pop
dec
xor
in
dec
xor
push
dec
inc
sub
pop
jecxz
inc
push
es
ljmp
inc
fbstp
mov
in
mov
dec
leave
sbb
out
ret
hlt
mov
out
xchg
out
imul
cmp
loop
roll
mov
jp
mov
movsl
and
data16
lock
stos
stc
pushf
aam
sub
push
pop
dec
add
or
jae
jge
rolb
stos
inc
mov
cs
leave
loope
insb
fsts
dec
shlb
add
adc
sub
fnstenv
and
sbb
mov
lret
xor
aaa
add
out
lahf
aam
jecxz
mov
mov
stos
push
aas
push
inc
and
lds
add
sti
nop
xor
and
icebp
fstl
fwait
jns
sbb
loop
fwait
mov
dec
data16
lock
mov
cmp
inc
vminps
xor
add
adc
inc
mov
lcall
pop
xor
mov
inc
inc
dec
sub
rcrb
cmp
push
enter
negl
or
icebp
push
cmp
ret
fwait
cmc
out
or
or
push
xchg
mov
jbe
adc
add
cmp
mov
movsb
adc
mov
in
in
push
sub
jge
sub
jle
cmpsl
push
mov
out
mov
push
pop
mov
cmp
add
dec
fdivl
data16
sbb
jnp
lock
pop
adcl
bound
jne
std
shlb
mov
push
in
lcall
arpl
mov
js
stos
mov
aad
sub
pop
add
jb
sub
or
js
cmpsb
repnz
push
jno
mov
fdivr
push
inc
jle
push
dec
cmc
mov
les
movsl
adc
clc
adc
jg
cmc
lret
xor
gs
daa
aas
jg
cmp
test
mov
rcr
imul
dec
sbb
adc
sub
sahf
rcrl
dec
ljmp
sub
shl
pop
sar
inc
push
jecxz
xchg
cwtl
pop
scas
stos
mov
pop
notl
dec
cmc
repnz
sub
imul
cmc
pop
add
and
jle
or
inc
std
ss
cmp
pushf
and
lcall
sub
aas
rclb
popa
inc
adc
pop
test
int
fsubr
inc
pop
ja
fcoml
bnd
sbb
das
call
repz
hlt
jns
inc
push
xor
xor
inc
ja
pop
add
rorl
xor
add
mov
out
jge
xchg
mov
pusha
mov
shlb
inc
mov
cld
mov
sbb
mov
sub
and
iret
aaa
out
mov
stos
pop
mov
in
sbbb
inc
loopne
add
movsb
pop
adc
popa
sbb
pop
rolb
cmp
jbe
mov
mov
pop
movsb
jmp
loope
test
inc
fsubrs
in
and
insl
dec
ljmp
stos
clc
push
clc
dec
cmp
repz
add
inc
mov
mov
dec
scas
js
inc
push
aas
rcll
fwait
jns
mov
jns
fcmovne
pop
fidivrl
aas
push
jl
pop
sub
xchg
sub
add
mov
into
mov
mov
int
add
outsl
popf
hlt
cld
add
xchg
mov
or
cltd
mov
push
rolb
pushf
fdivl
xor
rcr
pusha
daa
xchg
lds
and
add
push
mov
mov
inc
rol
adc
sub
or
in
mov
xor
jl
pop
repz
sbb
pop
push
dec
mov
cmp
and
cli
xchg
aas
cmp
mov
sub
mov
jle
push
clc
mov
idivb
insl
mov
int
repz
mov
or
adc
add
daa
xlat
aam
mov
lods
cwtl
ja
loopne
or
jp
mov
jmp
mov
jecxz
cmp
push
repz
pop
leave
rcl
push
cmp
addr16
cmp
jle
sub
roll
mov
orl
ret
loopne
mov
push
xchg
loop
out
inc
mov
ret
ret
fldl
mov
push
xor
xchg
xor
clc
movsl
mov
xchg
cmp
cmpsb
popf
and
lods
dec
repz
loop
add
mov
fwait
shlb
nop
fwait
dec
pop
xchg
cmp
pop
dec
mov
lret
lods
jb
sub
dec
out
push
cli
mov
mov
in
or
dec
repz
jne
sbb
loopne
shl
jg
sub
push
inc
in
pop
pop
shrd
add
movsb
xchg
into
cld
hlt
sub
das
aaa
fsubrs
cmc
inc
mov
and
dec
imul
repnz
lods
jno
dec
xor
xchg
test
cmpsl
sbb
adc
iret
bound
pop
shlb
mov
inc
dec
cmpsl
cmpsl
mov
js
sub
inc
andl
or
pop
mov
mov
adcl
jae
in
test
mov
jle
add
fnstenv
inc
aam
jbe
or
push
push
sarl
sahf
and
test
xor
loope
scas
jne
lea
stc
adc
cmp
xchg
inc
push
fwait
xor
dec
jle
leave
mov
mov
sub
mov
in
insl
imul
mov
fidivrs
das
insl
lea
lret
in
std
data16
and
cmp
pop
mov
std
sub
lcall
cmp
mov
scas
std
out
cli
fs
mov
sub
push
push
leave
into
loopne
dec
arpl
pop
dec
dec
faddl
mov
xchg
add
push
and
out
in
lret
mul
jne
xchg
stos
test
inc
add
movsb
cli
mov
movsl
rcll
xchg
jecxz
or
pop
mov
out
lea
sub
mov
roll
das
lret
popa
jl
mov
addr16
fmuls
lds
int3
cmpsl
outsl
cwtl
mov
mov
inc
ljmp
aad
fcmovnu
push
add
stos
xorl
ja
in
add
pop
jbe
cmp
test
mov
adc
icebp
orl
jne
adc
fstl
in
add
test
lret
daa
mov
es
sub
xchg
and
inc
pop
loop
sub
mov
sub
mov
push
decl
xor
sbb
sti
cmp
jge
push
imul
aam
lret
jmp
adc
loope
nop
sbb
jecxz
mov
sbb
imul
mov
ja
jo
inc
nop
stc
jp
xchg
xchg
pusha
lcall
mov
shrl
out
dec
adc
pop
mov
mov
repnz
pop
cli
push
pop
xchg
jl
jnp
mov
test
mov
mov
mov
jbe
sbb
enter
xor
mov
jle
pop
dec
mov
mov
xor
and
test
aad
ucomiss
mov
mov
mov
push
sub
inc
scas
ja
dec
cmp
lds
jne
ss
jge
lcall
mov
mov
mov
jno
cmp
std
jle
popa
outsb
jne
fmuls
shrl
frstor
pop
mov
add
add
orb
xorl
arpl
push
jo
aas
and
ret
xchg
je
adc
jmp
mov
into
dec
xor
inc
mov
cmc
cmpb
xor
push
add
fldl
and
dec
stos
cli
mov
xor
dec
jb
mov
clc
dec
sahf
divl
pusha
inc
mov
das
sub
push
sbbb
or
xor
and
adc
mov
ds
negl
ja
jmp
test
and
ljmp
int3
sbb
add
sbb
icebp
leave
jae
mov
loopne
lock
repnz
and
mov
lods
adc
pusha
pushf
fidivs
add
fmuls
in
ljmp
imul
mov
jmp
sbb
aas
cmpsb
dec
js
int
jne
lock
bound
add
mov
repz
test
movb
jnp
test
daa
inc
movsl
loopne
xlat
icebp
push
xchg
rcll
adc
mov
arpl
add
cmp
mov
jle
mov
out
hlt
inc
addr16
jmp
outsl
jb
push
call
sub
dec
dec
jae
adc
out
andps
xchg
in
cmp
fwait
pop
jle
jge
xchg
jle
sbb
pop
in
popf
movsl
and
jmp
mov
fildll
stos
push
movsl
cs
data16
push
mov
mov
jl
gs
cmp
shr
sub
sub
bound
mov
jecxz
push
xchg
aam
scas
and
add
pushf
scas
cmp
fadd
or
mov
mov
push
xchg
adcb
add
mov
and
and
rcrl
mov
dec
fwait
xchg
inc
vxorps
mov
jae
mov
xchg
ljmp
test
sub
sbb
inc
std
mov
negb
les
into
icebp
sbb
out
add
xchg
push
repz
cmpsb
divl
insb
xchg
or
subl
sub
stos
dec
jae
adc
popa
mov
lods
lcall
jae
out
lahf
insl
adc
inc
arpl
push
mov
rol
xchg
cwtl
cmp
shll
mov
xor
jne
xor
add
movsl
xor
lcall
stos
push
lcall
or
inc
cmp
or
clc
in
xor
sbb
addr16
push
ja
pop
leave
sub
je
dec
ret
jle
push
push
xor
dec
dec
pop
mov
cmp
inc
sub
adc
dec
je
mov
and
or
fistl
inc
outsl
xorl
xchg
jg
mov
or
xchg
sbb
sub
adc
pushf
sub
or
inc
out
pop
and
inc
out
sbb
rcl
cld
jne
inc
xchg
mov
in
arpl
je
pop
les
into
add
frstor
xor
inc
aad
sub
out
out
sbb
jl
jg
pop
das
xorb
or
dec
sub
lds
sbbb
push
in
xchg
add
out
sbb
fidivs
stos
rcll
add
rolb
jbe
push
loope
jecxz
mov
in
call
add
and
int
push
dec
in
pusha
shrb
xchg
in
push
das
pop
mov
xor
dec
mov
call
sub
scas
pop
mov
jbe
test
outsb
aas
dec
pusha
cmp
out
xor
cwtl
sahf
xor
jge
push
mov
mov
push
push
es
mov
nop
js
lods
or
inc
nop
insb
and
ss
cmpsb
or
cmp
pop
sub
mov
shl
adc
fwait
jg
jg
push
mov
mov
dec
cmp
aaa
repnz
push
add
push
in
lea
mov
or
xchg
jmp
outsb
rorb
hlt
mov
fistpl
into
dec
inc
jecxz
sbb
aam
iret
lea
sub
test
les
shrl
outsb
or
mov
out
pushf
cmp
lock
jecxz
aas
sarl
and
push
and
add
ljmp
jo
or
fcom
loop
mov
mov
mov
lds
pusha
jp
add
stos
sti
lcall
add
mov
jno
mov
xor
mov
xchg
icebp
negl
js
cmp
mov
push
iret
fbstp
cwtl
add
mov
aad
inc
fnsave
daa
and
cwtl
test
mov
mov
mov
shrb
test
jo
sub
mov
loope
ljmp
and
cld
test
xchg
and
sbb
negl
xchg
test
pushl
jae
xchg
push
mov
lods
rolb
dec
jp
int3
je
mov
or
incb
sbb
insb
or
push
lods
xchg
hlt
mov
fldcw
repnz
cwtl
in
push
sbb
sbb
out
cmp
mov
pop
dec
loopne
jns
daa
std
pop
adc
mov
repz
add
test
cli
push
sahf
mov
inc
addr16
mov
ror
or
mov
xor
add
jecxz
je
push
and
inc
cmp
push
pop
lret
pop
fbld
outsl
shr
mov
xchg
mov
iret
js
mov
lock
sbb
stos
push
jle
daa
scas
and
push
mov
fucomip
div
scas
mov
sub
rcrl
test
push
and
fwait
mov
aad
pop
incb
xchg
sub
lock
test
sbb
fcmovbe
je
dec
jns
in
pop
adc
adc
insl
fidivl
das
psubusw
jnp
ds
fildl
pusha
mov
mov
inc
fsub
jns
ljmp
and
xorb
ljmp
lods
inc
fs
dec
sub
hlt
xchg
fs
xchg
mov
cli
sbb
sub
pop
push
loopne
inc
xchg
cmp
mov
loope
mov
ja
mov
cmp
cltd
ss
dec
or
or
loop
sarb
mov
and
pop
sub
popf
jo
lea
mov
sbb
jnp
popf
sbb
cli
jp
stos
fadd
and
imul
daa
mov
lea
test
push
sahf
push
mov
outsb
outsb
mov
pop
incl
adc
fnsave
push
and
and
test
fwait
mov
adc
in
inc
fwait
leave
adc
test
xchg
das
jb
jl
les
adc
fwait
push
adc
call
int3
int3
lahf
jecxz
dec
cli
or
stos
flds
add
cmp
mov
cmp
adc
stc
test
adc
pushf
testb
dec
push
insl
xchg
sub
xchg
fcompl
outsb
fldt
fcoms
xor
jbe
aad
jb
add
mov
es
inc
in
mov
mov
dec
daa
lods
mov
lret
out
jns
add
jo,pt
sbbb
fistpl
ret
fucomp
jb
repnz
mov
push
inc
mov
loope
lret
sbb
rclb
cs
dec
xor
lods
cmp
cld
inc
enter
dec
mov
fucomip
and
cmp
fstl
mov
pushf
test
mov
notl
pop
and
pop
test
inc
pop
push
outsl
mov
or
lock
push
sbb
sbb
fidivl
loopne
test
mov
jns
shl
xor
pop
loope
dec
adc
cmp
in
sbb
jno
cmc
sub
sbb
ret
cmc
aas
push
push
lret
pop
stos
sub
cli
mov
cmp
or
ss
cmpb
and
stc
adc
mov
dec
xchg
inc
pop
dec
and
aaa
clc
repnz
inc
pop
clc
adcb
rcrl
cmp
movsb
add
xor
rolb
push
add
nop
xchg
cmp
mov
fidivs
fdivl
hlt
outsl
push
fidivs
mov
xchg
mov
ss
aas
ja
pop
push
mov
mov
or
cmp
aas
inc
xchg
int
mov
les
scas
loopne
sub
pop
sub
xorb
sub
aaa
frstor
xchg
cmp
mov
bound
mov
ds
addl
ss
and
xor
bnd
rolb
sbb
push
push
ret
mov
sbb
jle,pt
negb
pop
dec
vmread
xor
insb
jmp
aam
xchg
or
std
rorl
add
mov
outsb
jl
jmp
mov
push
loop
dec
or
test
outsb
add
xor
push
outsl
imul
pop
cmc
xchg
call
sbb
fisttps
shlb
mov
in
and
std
stos
cmp
push
inc
xor
movsb
into
imul
bnd
pop
xor
jnp
arpl
adc
repnz
inc
pop
xchg
jge
movsb
aam
sti
test
fisubl
inc
mov
cld
xor
fistpll
adc
int3
push
or
cmp
sub
repz
movsb
jb
mov
inc
xchg
sbb
xchg
inc
and
xorl
std
test
out
fwait
pop
sub
call
pop
cld
mov
adc
dec
addl
rclb
mov
inc
stos
jb
and
mov
mulps
xchg
sbbl
inc
ret
rorl
je
js
or
adc
addl
call
fldt
add
pusha
push
inc
add
jmp
adcb
sub
pusha
das
dec
shl
lds
jg
addr16
clc
mov
dec
add
xlat
fists
jmp
pop
lds
int3
sbb
or
insb
inc
je
cmpsb
xchg
decb
inc
xchg
je
sbb
in
insb
sti
jns
arpl
mov
dec
push
jge
es
pop
xchg
aas
inc
cmpsl
das
pop
or
and
loope
cmp
mov
add
int3
mov
cltd
adc
inc
xchg
xchg
insl
cli
mov
xchg
repz
xchg
mov
jo
xchg
test
aad
cltd
jns
ret
push
ss
xchg
jecxz
inc
aas
xchg
dec
mov
sbb
jle
rorl
mov
mov
mov
aaa
jmp
inc
int
pop
mov
pusha
add
sbb
repnz
scas
imul
or
imul
jecxz
icebp
or
subl
fwait
outsb
ret
add
and
loope
sbb
iret
out
test
sub
cmp
gs
repz
lods
pushf
xchg
or
mov
pop
fmul
sbb
fidivs
je
out
jno
jnp
inc
shl
push
daa
loopw
imul
test
daa
dec
xor
and
popf
out
mov
mov
cwtl
sbb
fnsave
jp
aas
pop
lock
cmp
add
mov
insb
subb
sti
xchg
inc
jp
pushf
inc
in
cmp
cmpsb
pop
lods
sub
jecxz
push
push
or
iret
jns
jge
mov
int
rorl
sub
mov
into
andl
xchg
test
mov
mov
xor
lea
sub
movb
into
daa
prefetchw
or
outsb
xor
or
fcmovnbe
aas
test
xor
mov
std
popf
mov
bound
mov
shlb
sbb
dec
enter
es
xchg
lea
shrb
idiv
clc
xor
mov
jg
fdiv
loope
mov
jle
rcll
cmp
aas
cmpsb
in
sbb
dec
subl
sahf
daa
test
and
or
ret
mov
lcall
cld
or
popa
push
cmpsl
push
and
mov
sbb
dec
test
mov
adc
shlb
mov
fstps
lds
insl
fnstsw
push
xchg
test
and
cltd
dec
inc
pop
js
movsb
into
shrl
push
mov
xchg
enter
cwtl
jae
pop
cmpsb
lock
jbe
rcrb
mov
cmp
pop
push
iret
in
mov
lahf
stc
ja
add
in
sbb
jl
ret
lock
xchg
and
jecxz
int
adc
cmp
sub
add
dec
xchg
cli
add
in
pop
lret
jl
loopne
sbb
or
mov
enter
xor
fdivr
inc
and
pop
scas
fcompl
pop
aas
test
jnp
mov
mov
js
ret
or
std
dec
and
pop
rorb
daa
rol
add
addr16
call
repz
mov
mov
rcrb
xlat
cmp
enter
popf
push
xor
and
fs
push
push
fstps
arpl
jge
ss
xchg
out
jecxz
loopne
xchg
fcomi
pop
jno
xor
arpl
enter
fstpt
mov
jg
es
sub
cltd
inc
out
cmpl
mov
jae
lods
dec
or
adc
mov
push
mov
mov
sahf
addr16
push
cmp
xchg
aaa
pop
fcoms
sub
aad
mov
fildll
add
out
sub
fiadds
sbb
fisubl
sbb
xchg
addl
xchg
and
jge
xchg
mov
push
sahf
repnz
out
jl
sub
repz
pop
add
cli
bswap
sbb
sbb
or
mov
ljmp
jge
inc
adc
rcrl
orb
xchg
jnp
jbe
addr16
jo
insl
insl
lods
jb
inc
fldt
xchg
mov
add
or
pop
lahf
pop
or
movsb
mov
into
push
mov
mov
data16
push
or
setno
daa
xchg
out
int3
roll
adc
sti
loopne
fisttpl
lds
outsl
out
dec
outsl
inc
or
or
andb
xor
dec
xchg
rol
into
mov
popa
std
or
lret
into
movsb
adc
add
repnz
xchg
sbb
js
adc
and
outsb
pop
out
subb
inc
in
mov
inc
jbe
add
repnz
lahf
int
xor
testl
orb
add
test
pop
sbb
jb
cmpb
sbb
xor
sbb
nop
dec
or
mov
pusha
xchg
cs
mov
fld
lock
adc
dec
in
imul
inc
cli
rorb
js
mov
in
jo
pop
inc
mov
push
mov
in
jp
adc
pop
and
adc
inc
es
repz
rcrb
mov
fmull
xorl
mov
or
and
adc
dec
ja
cmp
pushf
in
adcb
movsb
cmp
cs
dec
inc
jecxz
mov
inc
and
cmc
jbe
adc
push
je
push
js
dec
xor
sub
mov
pop
out
mov
pop
xchg
mov
mov
mov
fwait
adc
pop
aaa
fstpt
mov
xchg
addl
jge
or
in
cmpsl
lret
js
or
sbb
daa
or
addr16
xor
stc
xchg
lcall
cmp
aam
fstpt
jge
test
fwait
test
shrl
int3
push
jle
sub
or
sbb
ret
xlat
sub
fisubrs
adc
xchg
add
popf
cltd
shr
xchg
dec
push
push
jecxz
push
pushf
mov
ss
jne
sub
cmc
mov
push
fisttps
inc
mov
jo
pushf
shrb
and
pushf
cmp
insl
es
mov
icebp
xacquire
jb
fisttpl
jmp
out
loopne
xchg
repz
aaa
stc
gs
lahf
adc
out
push
adc
shrb
cmc
negb
or
push
sbb
stc
ret
mov
jg
push
dec
mov
and
inc
xor
mov
cmp
cs
mov
lcall
pop
pushf
out
gs
xchg
xchg
movhps
lea
mov
pop
mov
cli
pop
pop
daa
rol
pop
nop
push
dec
test
test
xor
jmp
xor
dec
jne
dec
xlat
mov
push
movsb
not
sub
push
int
pop
mov
pop
cmpsl
mov
fildll
inc
cmp
sub
or
ss
mov
lret
pop
adc
xchg
leave
testl
jb
mov
pop
sahf
scas
orb
push
sub
add
int3
pop
dec
inc
std
push
push
aam
inc
das
lcall
mulb
or
fbld
xor
out
js
xchg
in
dec
mov
pop
lock
add
in
mov
das
sub
mov
push
xor
pop
rclb
pop
jle
pushf
or
cltd
imul
insb
fbstp
fdivrl
movsl
arpl
sbb
int
add
dec
aaa
or
sub
mov
xchg
int3
cwtl
cmpl
mov
and
int
mov
fstpt
pop
in
mov
addr16
push
sbb
xchg
bound
dec
inc
inc
rorb
pop
pop
inc
pop
adc
push
xchg
jbe
test
push
and
lock
push
lret
lods
mov
inc
mov
push
in
inc
lods
jg
les
stc
repnz
sbb
ja
dec
push
jp
ljmp
sbb
or
addr16
adc
push
in
cwtl
std
sti
lods
out
add
jge
shlb
aas
js
inc
leave
push
push
jae
fildll
in
in
bound
sbb
dec
or
xchg
repz
inc
mov
mov
fs
cli
mov
pop
data16
mov
jl
adc
adc
int3
jge
scas
shrb
mov
adc
pop
cmp
sahf
xchg
sub
xchg
pop
add
int
xor
or
sub
nop
xchg
mov
je
js
mov
xor
xchg
sub
lret
loope
repnz
jb
ret
imul
into
or
sub
sbb
jp
mov
mov
mov
push
pop
loope
mov
inc
dec
cmp
mov
push
repz
aaa
das
es
aas
mull
aad
out
fsts
add
mov
and
cltd
fsubr
inc
aad
mov
jae
cmpsl
aas
jb
imul
dec
testb
loop
test
cmp
mov
in
mov
adc
pushf
pop
mov
pop
scas
out
les
push
jg
insl
push
jecxz
cltd
mov
or
inc
sbb
jns
inc
mov
mov
or
dec
adc
xor
movsb
aad
outsb
lds
sahf
cmp
mov
mov
loopne
fstpt
clc
repz
shlb
xchg
cmp
inc
dec
mov
js
dec
jmp
ret
stos
nop
or
aaa
push
mov
jmp
lods
das
js
lcall
lods
in
cmpsb
jmp
clc
jmp
pop
push
mov
pusha
inc
adc
or
xchg
mov
stos
pusha
sbb
jae
std
sbb
test
xor
mov
xor
insl
clc
mov
mov
jae
cmp
sti
sbb
hlt
pop
sub
xor
xor
mov
shll
mov
lods
jmp
ret
ret
fwait
sbb
aaa
jl
shrb
and
mov
fs
and
ret
clc
pop
push
mov
test
outsl
ret
dec
lock
inc
xor
out
into
pop
xor
movb
pop
loopne
and
stos
into
push
pusha
outsl
xlat
scas
jns
fs
add
sbb
lahf
sbb
ja
sub
or
or
mov
out
xor
ret
stos
stos
and
sbb
aam
in
pop
hlt
sub
bound
rorb
push
mov
ss
xchg
fld
loopne
rorl
rcrb
incb
mov
and
std
inc
pop
test
push
mov
sbb
jp
push
fiadds
and
sub
add
sub
cwtl
fildl
es
push
sti
mov
test
je
fwait
mov
rcrl
mov
stc
dec
pop
cmpsb
inc
mov
out
cltd
xchg
gs
inc
sbb
jle
adc
pushf
lcall
sub
sub
shrb
fcomps
inc
mov
adcl
addr16
sahf
xor
out
cmpsl
insl
imul
int3
lret
mov
mov
inc
dec
pop
xor
and
mov
mov
cmpsb
loopne
pusha
mov
jae
xor
aaa
mov
out
mov
cli
sbb
mov
jno
adc
scas
add
and
sahf
mov
push
cwtl
jns
pop
fildll
mov
jp
and
orb
movsb
rcll
in
ja
out
test
cmp
shlb
cmpsb
cmpsb
push
sub
lea
fwait
out
cmp
mov
pop
add
pop
insl
aas
insl
sbb
lds
mov
lahf
mov
int3
fidivs
loopne
push
inc
push
push
and
iret
lds
mov
add
xor
int
mov
mov
movsl
mov
xlat
cmp
or
std
add
sti
push
or
mov
out
and
aas
jae
movsb
push
jno
mov
jne
xor
icebp
enter
mov
and
xor
mov
fldpi
adc
add
or
into
jne
pop
jl
out
cs
aas
jge
mov
fs
inc
add
mov
xchg
repnz
lahf
mov
js
lock
jecxz
nop
inc
fistl
cmp
das
xchg
lds
ss
adc
and
dec
popf
mov
or
dec
ret
ljmp
mov
inc
std
orl
pop
jbe
loopne
or
and
lds
or
loop
adc
das
out
aad
push
jg
and
sbb
mov
add
jg
mov
popf
fstps
fisttpl
cwtl
negl
and
push
cld
aad
pusha
inc
mov
mov
imul
mov
xor
test
nop
cmp
dec
mov
test
mov
xor
and
dec
cmp
ffreep
rcrb
mov
das
das
pop
push
sahf
stc
test
je
adc
mov
mov
subl
lock
jge
insb
fdivrl
cli
or
fildll
mov
lcall
inc
mov
jns
std
add
mov
sub
out
movsl
enterw
js
xchg
mov
xchg
lret
shll
push
mov
adc
pop
stos
aad
mov
xchg
lds
mov
inc
xchg
push
xor
call
push
xchg
cs
mov
adcl
adc
cmp
imul
lds
cwtl
dec
cmp
bound
mov
cmp
cmp
loope
jle
pop
ds
jb
out
mov
adc
insl
mov
fdivs
mov
push
aas
xor
js
vandps
pop
xchg
and
lods
sub
rorb
repnz
sbb
aam
xchg
out
dec
in
jl
lds
sbb
mov
loope
dec
out
jbe
adc
push
aas
jp
cmp
lret
push
imul
xchg
add
sbb
xchg
push
scas
dec
push
stc
mov
daa
dec
adc
xchg
enter
testl
in
mov
divl
in
cmc
insb
cmp
stos
pop
jl
push
jnp
xchg
ret
repz
sbb
ret
add
invd
adc
aam
or
dec
push
mov
adc
jge
xor
cs
or
mov
jge
inc
fucomip
jb
lds
sbb
adc
mov
ror
scas
pop
push
xor
je
mov
lcall
jo
lret
subb
and
les
sub
out
dec
or
dec
xchg
cmpsl
add
xorb
and
xchg
sub
pop
mov
xchg
cld
pop
lret
mov
insl
imul
fiaddl
jmp
loop
popl
cmp
dec
adc
sar
mov
add
loopne
outsb
push
lahf
jecxz
push
and
ds
arpl
mov
pop
push
dec
cmpsl
in
iret
in
int3
cmpsl
in
sub
popa
lret
cmp
xor
hlt
repz
add
pop
sbb
inc
rorb
push
jecxz
inc
or
fcmovb
daa
sbb
stc
bound
int
fs
mov
jne
adc
xor
add
insl
inc
sub
movl
xchg
fsubrl
push
or
fisubrl
int3
fstpl
insb
sub
lods
ret
movsl
iret
sub
add
sbb
outsl
lods
adc
fdivp
jno
or
dec
std
test
imul
push
lahf
jl
imul
movsb
loop
jge
mov
lock
cmp
adc
mov
sub
mov
mov
test
push
xchg
out
sub
dec
inc
push
xor
mov
dec
nop
cmpsb
xchg
outsb
add
cs
and
es
cmpsb
test
adc
stc
mov
fdivrs
ret
mov
fimull
sbb
enter
and
push
test
dec
inc
or
mov
daa
pop
and
and
fstl
int3
pop
fs
mov
cmp
pusha
aaa
mov
pop
into
mov
nop
mov
xlat
inc
mov
mov
xor
lahf
mov
adc
pop
les
fstp
stos
add
dec
and
mov
dec
clc
pushf
jg
fcoms
mov
cld
mov
sbb
loop
ss
mov
jmp
jbe
out
mov
push
push
dec
adc
and
sub
cmp
or
divl
out
or
cltd
mov
leave
aas
pop
jge
popa
cmp
or
out
mov
and
or
push
push
and
pop
inc
rorb
int
xchg
int
jmp
mov
repz
imul
js
nop
pusha
jmp
cmp
mov
cmp
cs
dec
daa
sbb
push
imul
mov
inc
rcrb
inc
call
and
iret
push
sub
roll
adc
repz
int
outsb
cmp
mov
repnz
cmp
fiaddl
push
sbb
mov
addr16
fidivrl
rcr
in
lods
cmc
pop
jmp
lods
jns
out
ret
adc
incl
jo
fmull
inc
imul
daa
cli
cmpsl
icebp
xor
mov
add
mov
mov
mov
out
push
sbb
loope
add
cmpsb
out
pop
jnp
int
jns
inc
push
mov
inc
fiaddl
dec
outsl
dec
push
mov
sbb
mov
mov
or
pushl
sbb
cltd
jne
push
lahf
pop
aad
sbbb
scas
or
and
repz
popa
cmp
lds
fwait
xchg
push
inc
lods
inc
push
aas
cmpsb
sbb
stc
clc
hlt
mov
adc
and
xchg
js
test
scas
xchg
or
repnz
xor
mov
iret
xor
fistl
cmpsb
adc
hlt
or
inc
jmp
pop
sarb
leave
sti
pop
sbb
push
push
stos
sub
sub
pop
rclb
mov
call
xor
sbb
mov
xchg
std
orl
push
cli
sbb
inc
lock
cltd
sub
pop
add
sahf
sub
sbb
mov
push
inc
cmp
pusha
dec
incb
popf
xchg
pop
xchg
cmp
repz
les
fucompp
cltd
in
or
xor
rorl
inc
ret
xchg
fs
xchg
shl
sub
fdivr
sbbl
xchg
scas
ret
jl
sub
inc
xor
jae
cmc
cmc
fiaddl
pop
cmp
stos
push
mov
mov
je
dec
insl
ret
fnsave
ficoml
fs
mov
pop
inc
dec
fwait
push
cmpsb
push
dec
adc
ljmp
lret
jb
cltd
test
call
in
decl
add
sarb
outsb
and
xchg
cmpsl
cs
divb
ret
test
or
dec
xor
sarb
roll
xchg
mov
mov
push
jp
rorb
xchg
sub
inc
ret
push
cmpsb
imul
in
pop
cmpsb
insb
shl
mov
out
inc
mov
mov
cmp
shl
and
mov
ss
push
xchg
push
sub
add
arpl
cltd
mov
pop
mov
fnstenv
add
ret
xorb
adc
gs
and
shrb
dec
inc
fdivp
pop
outsb
pushf
scas
insb
or
jmp
arpl
pop
inc
sbb
xlat
cwtl
add
xchg
lea
dec
into
push
sbb
jno
bts
mov
fnstsw
xor
cmpsl
xchg
insl
inc
ret
sbb
loopne
cmp
aam
int
fcomp
in
rolb
mov
mov
cli
push
shrl
inc
xor
mov
loop
in
lret
push
xlat
xor
cs
hlt
aad
xorb
or
clc
loop
daa
or
dec
or
jge
js
clc
xor
adc
jmp
mov
test
out
cmp
push
cmp
ret
inc
je
out
les
push
mov
or
adc
negl
xor
xor
pop
jnp
ret
add
scas
cmp
cmpsl
mov
adc
stos
lods
ret
popa
int3
bound
repz
popl
and
mov
outsb
sub
fucomip
cmp
jge
sbb
out
inc
fidivs
test
pop
adc
push
mov
mov
hlt
rorb
movb
push
cmp
mov
insb
push
data16
mov
mov
dec
adc
popa
aam
scas
push
mov
mov
mov
scas
and
pop
movsl
iret
imul
sahf
lcall
sahf
mull
cmp
mov
shr
dec
dec
adc
ja
cmp
push
es
out
push
xchg
adc
fistpl
ss
roll
divb
lods
movsl
and
rcll
fisubs
xchg
jg
test
call
push
lret
sbb
jmp
fdivl
pop
outsl
pushf
out
cmp
xor
jl
lea
or
shlb
out
fwait
out
mov
js
leave
cmp
cmp
add
test
sbb
adc
sbb
mov
fidivl
insb
push
cli
pop
das
xchg
cs
push
adc
aas
adc
ds
test
add
sbb
cmp
pop
add
mov
xchg
adc
add
adc
std
sub
stos
sbb
in
mov
nop
cmp
jnp
js
mov
and
stos
aad
dec
mov
aaa
jl
jmp
repnz
add
dec
int
mov
pop
mov
jnp
xor
fldenv
int3
fmul
mov
jge
ret
push
jge
gs
cmp
and
std
add
mov
inc
aaa
mov
fs
cmp
lods
pop
or
cmp
fsts
mov
lock
push
and
xor
lea
gs
mov
inc
jl
cmp
aas
xchg
add
jecxz
add
ficoms
inc
cli
mov
nop
cwtl
stos
sub
aad
fidivrl
out
pop
sti
leave
and
fwait
test
cmp
xchg
mov
mov
out
sbb
sbb
fiaddl
jb
adc
adc
fwait
loop
cltd
mov
popf
or
xchg
mov
loop
pop
lods
push
movsl
dec
push
sbbl
inc
or
dec
jmp
decl
or
pop
stos
add
insl
push
ss
xlat
mov
lahf
xor
in
fiadds
dec
adc
xchg
aaa
or
pop
imulb
pop
pop
xor
push
popf
bound
movsl
inc
xor
fdiv
out
push
arpl
mov
add
out
lahf
jl
push
popf
push
xor
mov
fwait
pusha
rorb
push
sbb
cli
in
mov
cmp
mov
aaa
pop
xor
lds
jle
jmp
lcall
aam
push
jo
mov
xlat
pop
mov
fwait
and
inc
cmp
push
sbb
vunpckhps
int
push
icebp
sbb
mov
pop
adc
fmul
or
aam
les
inc
xchg
fildl
rorb
iret
fsubl
addr16
int3
dec
xor
mov
pop
push
lret
push
sbb
sub
jmp
nop
pop
mov
inc
and
incl
xor
adc
push
adc
sbb
push
and
pop
push
imul
push
mov
pop
test
or
adcl
jo
stc
sbb
sbbl
mov
pusha
dec
lret
out
in
pop
rcrl
jnp
sub
and
aaa
mov
loope
fdivl
iret
add
nop
dec
xorb
cmp
or
sub
inc
out
or
ja
ret
dec
adc
movsb
in
ds
jo
and
mov
scas
xchg
hlt
cltd
aad
cmp
scas
sbb
movsb
pop
mov
fdivl
cmp
add
jbe
lock
test
mov
rorl
pop
pop
xor
and
imul
ss
pop
mov
jle
mov
adc
xor
or
movsb
jo
pushf
test
loope
repz
jb
jg
lods
jae
adcl
cltd
repnz
in
jecxz
push
xchg
pop
mov
leave
gs
xchg
ljmp
clc
sub
pop
cmp
ja
xlat
inc
mov
bound
pop
cltd
cmp
sub
cld
ljmp
pusha
cbtw
gs
mov
aaa
jle,pt
sbb
dec
cmp
test
sub
int3
lea
mov
and
loope
mov
push
inc
inc
rorl
das
loop
push
add
mov
push
jle
arpl
xor
cmpsl
mov
shlb
sbb
rep
test
pop
mov
and
cltd
sbb
push
adc
popa
jo
cmpsl
or
mov
pop
mov
iret
shll
arpl
gs
ret
adc
cmc
dec
xchg
adc
inc
jmp
jg
leave
adcb
cmc
and
push
fbld
xor
fcoms
mov
fimull
mov
push
enter
aad
js
cmp
sbb
sub
adc
sub
sub
xchg
jecxz
mov
cmp
daa
pop
fxch
xchg
sbb
xlat
ljmp
aam
add
insb
dec
pop
repz
outsl
imul
sub
pop
sub
movsl
lods
icebp
push
mov
adc
push
mov
mov
jl
mov
fldl
add
push
sbb
imul
into
mov
mov
jl
pop
adc
dec
pop
aas
or
dec
repz
dec
cwtl
cmp
jne
fsts
shll
insl
lahf
xor
addr16
jecxz
pop
and
stos
push
inc
push
test
cwtl
sub
in
add
inc
fstps
mov
sahf
sub
cmc
push
fnstsw
cmp
ret
sub
push
mov
inc
push
popf
lods
add
loopne
sub
roll
incb
cmc
mov
dec
ja
add
pop
insl
les
stc
ror
ljmp
and
jecxz
mov
xchg
push
cld
call
inc
sub
loopne
test
lahf
xor
mov
jbe
or
push
jb
or
js
cwtl
pop
roll
loope
ret
leave
mov
pop
leave
pop
xchg
pusha
xchg
aad
pop
mull
into
jbe
push
int3
dec
cli
xchg
pop
add
clc
int
je
call
adc
xchg
insl
xchg
es
jle
mov
leave
cmc
xor
or
stos
mov
mov
add
cmpsb
das
mov
mov
std
push
aaa
mov
jp,pt
cmp
insl
scas
mov
adc
adc
or
push
xor
sbb
mov
int
dec
or
sub
or
jbe
aad
lahf
and
repnz
ret
cltd
test
sub
lret
cmp
js
and
sbb
push
sub
mov
clc
mov
popa
in
in
icebp
xchg
icebp
scas
pop
movsl
cmp
cmp
mov
dec
push
cli
fldt
imul
xor
int3
and
xchg
gs
ss
ret
xor
ret
xor
loope
outsb
iret
dec
xchg
pop
add
ret
push
xor
xor
cmovne
lods
in
dec
pusha
push
cmp
cmp
sub
stos
stc
adc
mov
adc
mov
lods
cmc
fcoml
mov
mov
jo
sbb
xchg
aaa
lcall
ja
add
pop
loop
lcall
adc
outsb
xchg
insb
add
add
outsb
into
outsl
scas
pop
lret
and
sub
jae
add
mov
lods
shl
ja
push
sub
inc
and
ret
ja
out
mull
test
jnp
mov
cmp
mov
dec
dec
xor
pushf
pop
push
addr16
cmpsb
sbb
mov
mov
push
cltd
fcoms
push
mov
mov
mov
push
cltd
out
pop
lahf
ror
ss
pop
sub
test
xlat
cmc
sbb
jns
push
out
stos
or
cli
mov
ja
dec
pop
and
jecxz
jge
cmp
xlat
xchg
or
xor
cmc
push
testl
adc
dec
divb
cmpb
cmp
mov
xor
sub
pusha
pusha
xchg
sbb
adc
cmp
push
aam
jbe
or
lcall
ljmp
or
mov
test
inc
push
outsl
or
mov
adc
pop
jecxz
push
popf
mulb
mov
cld
xchg
xor
jb
insb
pop
insb
test
int
fwait
sbb
lock
enter
int
inc
inc
xchg
sub
data16
pop
bound
push
xor
mov
jno
sub
test
insl
mov
cmp
sti
push
lea
mov
adc
aas
sbb
pop
xlat
add
adc
push
mov
cmc
add
lea
jae
ret
dec
mov
jns
mov
or
push
dec
adc
lods
cmc
sbbl
cwtl
ret
daa
cmp
out
and
mov
pushl
loopne
pop
pop
movb
loop
pop
cltd
sub
aas
cmc
pop
outsb
xchg
dec
int
xor
fdivs
sahf
jp
sub
sbb
ret
sub
jmp
js
fisttpll
enter
test
insb
push
int
std
sbb
lahf
sti
sar
push
sub
cltd
jp
popa
pop
or
outsb
out
push
mov
adc
sahf
xchg
xchg
adc
fwait
lods
xlat
sbb
add
aaa
and
dec
and
daa
push
jnp
mov
popf
ss
mov
mov
push
sarb
rcr
dec
mov
mov
sub
jp
push
aam
sub
daa
mov
pushf
scas
std
fstp
fistpll
shrl
push
or
inc
sbb
popa
orb
aaa
pop
shl
or
aam
xchg
loope
int3
lds
push
int
lods
clc
pop
pop
fsubr
push
sti
adc
in
aam
insl
das
cld
lret
inc
jp
das
xor
mov
push
pop
or
iret
sub
sti
xchg
or
add
push
pop
cld
repnz
addr16
mov
cmp
out
jmp
add
jg
pop
lds
mov
xor
add
pop
mov
sbb
add
xor
pop
sarb
cmc
inc
idivl
lds
fimull
mov
xchg
stc
pop
hlt
mov
pop
test
or
jo
fstpt
in
daa
lcall
dec
pop
cmc
mov
in
lcall
loopne
loop
andb
mov
lods
cmpsb
inc
scas
fs
dec
lds
sub
mov
xchg
sub
xlat
popl
cmpsl
out
sbb
sarb
popa
popa
shll
xchg
mulb
imul
xchg
or
je
jmp
bound
sbb
adc
adc
mov
inc
jo
nop
in
cmpl
sub
and
inc
dec
popa
ret
add
and
enter
jnp
lds
xorl
lcall
jge
hlt
push
cmp
add
sbb
clc
push
fstpl
and
int
mov
shrl
loop
mul
iret
lret
jb
dec
and
fs
push
jge
insl
jb
xchg
or
mov
cmp
pop
push
xor
push
sbb
pusha
lret
inc
mov
sub
imul
stos
andl
cwtl
or
adc
pop
pop
rorb
out
test
clc
lds
inc
faddp
mov
xor
out
mov
pmaxsw
movsb
adc
in
sbb
xchg
outsl
nop
adc
xor
movsl
adc
xchg
push
stos
retw
jne
push
mov
pop
cmc
jge
mov
push
mov
in
pop
cmpsl
iret
xchg
sub
sbb
addl
mov
out
xlat
fwait
push
loope
iret
and
outsl
mov
xorps
sbb
mov
sub
or
mov
jge
aaa
mov
mov
stos
outsl
stos
insl
ljmp
jne
adc
in
arpl
dec
imul
std
aas
add
mov
dec
ficompl
jg
lss
les
mov
out
push
jne
les
lahf
pusha
add
movsb
dec
popf
push
sbb
fimuls
rorl
push
sbb
xor
mov
lahf
xchg
fbld
sub
or
daa
pop
stc
scas
std
scas
outsl
sbbl
xchg
push
mov
sbb
mov
or
mov
rorl
inc
lcall
push
ja
ss
or
cmp
rcrl
movsl
lret
ret
sbb
mov
imul
pop
push
jb
push
dec
mov
pop
int3
mov
xchg
mov
cmc
lahf
mulb
jae
mov
iret
jecxz
push
sub
pop
mov
lea
mov
and
mov
cmp
int
std
mov
fwait
test
adc
out
push
cmp
jmp
test
popf
push
and
pop
imul
xchg
jno
xchg
movsb
adc
or
jo
mov
fs
in
xchg
cmc
or
or
inc
lret
rcll
xchg
stos
push
out
ds
mov
xchg
int
clc
stc
stos
imul
fldl
lds
mov
jns
loop
enter
mov
add
test
pmulhw
hlt
sbb
pop
push
test
and
dec
int
push
sub
int
cld
push
inc
pusha
insb
inc
fcompp
pop
outsl
adc
adc
cmc
and
xchg
inc
cmpsb
mov
je
out
lock
mov
out
add
sbb
sbb
jp
ficomps
loopne
sbb
inc
mov
inc
mov
push
pop
imul
loopne
cmc
push
inc
xchg
cmp
pushf
mov
aam
sbb
enter
pop
push
scas
mov
imul
jnp
adc
imul
mov
mov
imul
inc
sar
and
push
sarb
push
jl
jae
add
enter
repz
push
mov
inc
jge
jl
push
xor
setae
mov
mov
test
rolb
out
add
lock
jg
push
lahf
xchg
cmpsl
mov
adc
push
jecxz
sbb
xchg
xchg
cmp
lock
shl
add
int3
and
push
pop
inc
sbb
fwait
lahf
mov
add
out
daa
jb
inc
pusha
imul
inc
fidivs
stc
cmpsl
xor
xlat
jl
cmp
test
add
xchg
pop
sub
inc
out
cli
and
loope
jecxz
xchg
sbb
das
inc
clc
inc
aas
leave
mov
lret
inc
sub
mov
test
lock
mov
sbb
sarb
arpl
movsl
pop
shl
stc
popf
cmc
mov
data16
sub
push
xor
cmp
xchg
outsb
ljmp
cld
mov
popa
sbb
mov
dec
sti
jg
mov
int3
das
dec
ret
cwtl
mov
push
in
pushf
aam
adc
fildll
fsubs
sti
mov
repnz
pop
out
aam
gs
idiv
mov
cmp
or
sub
jae
or
out
out
mov
add
xchg
xlat
pop
add
cmp
jb
pop
mov
cmpsl
mov
scas
lods
cmpsb
jge
gs
mulb
lods
dec
xchg
mov
inc
xlat
mov
insl
dec
adc
mov
repz
movlps
sti
scas
dec
and
loope
test
shrb
mov
xchg
mov
cld
scas
inc
jl
xchg
fimull
push
fdivrs
je
mov
cmp
or
iret
in
fs
xchg
ds
pop
mov
jg
mov
scas
je
aam
sbb
mov
add
mov
mov
nop
jo
adc
mov
enter
sub
lcall
fwait
or
cmpsl
pop
xor
adc
sti
pop
inc
xchg
lods
in
in
sbb
sahf
iret
in
dec
aad
sti
imul
pop
mov
mov
mov
and
in
jp
xor
popf
jne
add
or
inc
sbb
xor
jle
cltd
push
mov
xor
adc
ljmp
lock
jp
movsb
mov
pop
mov
xor
loope
push
jge
mov
sbb
inc
inc
ss
mov
and
movb
loopne
sbb
les
and
out
sahf
rcll
adc
insb
fbstp
ss
bound
or
movsb
stc
or
out
je
mov
lock
inc
sbb
push
scas
stos
sbb
dec
out
jae
inc
or
ds
popa
hlt
cmp
int3
and
add
cmp
cmp
pop
pop
pop
pop
add
xchg
and
mov
inc
lods
testl
nop
mov
or
dec
cmp
mov
testl
int
js
xchg
xlat
or
pop
cmp
cmp
xchg
mov
inc
shll
int
pop
cld
adc
and
lods
adcb
push
jmp
adc
push
aaa
out
ret
test
leave
sub
pop
pop
mov
ljmp
xchg
outsb
cmp
in
aas
jbe
xor
imul
sbb
pop
pop
stos
rorl
adc
imul
cli
ret
sub
mov
fsubl
dec
adc
repz
cli
push
mov
jae
imulb
xchg
xor
ret
jmp
inc
js
xlat
adc
sbb
loop
sti
pop
outsl
aas
lcall
lds
cmc
mov
lea
xchg
dec
jnp
mov
js
in
cmp
out
mov
test
fldenv
out
pop
add
pop
push
mov
and
jne
pop
adc
cmp
dec
pop
push
out
jae
ds
xlat
mov
mov
lcall
lret
ja
jmp
add
into
insb
sbb
pop
inc
xchg
mov
mov
cmp
aas
mov
dec
mov
movl
in
push
aas
mov
sbb
inc
lds
lahf
xor
pop
pop
cwtl
cmc
mov
dec
add
data16
fistpll
jg
enter
cmp
jno
shrl
dec
adc
roll
mov
push
addr16
sbb
int
inc
cwtl
js
lret
mov
cmp
or
ja
sub
jns
mov
ret
cmpsb
push
cmp
cmc
mov
aam
inc
movsb
fucom
add
add
negb
into
push
lea
scas
or
pop
push
inc
mov
stos
xor
push
ja
dec
cmp
loopne
aas
xchg
outsl
nop
roll
roll
push
mov
out
mov
xchg
les
shrl
mov
fwait
mov
das
out
cld
jg
push
pop
mov
cmp
stos
shlb
xchg
or
mov
les
pop
dec
jecxz
xchg
mov
mov
popa
inc
fstpt
pop
mov
push
sub
adc
sub
add
pusha
loope
dec
subl
scas
add
lock
xchg
sub
cmpsb
dec
xchg
call
shl
rolb
fsubl
dec
shlb
mov
test
lock
ljmp
rcrb
test
push
cmc
cmp
pop
sbb
movsb
aaa
gs
mov
test
inc
dec
frstpm(287
imul
imulb
enter
pop
sahf
and
mov
test
test
arpl
out
push
xchg
out
popa
out
int3
cmpsl
in
or
jmp
jg
enter
test
jae
mov
icebp
adc
mov
push
idivb
push
adc
cmp
arpl
imul
mov
ss
add
fdivrs
cmpsl
out
inc
cmp
and
push
mov
push
cmp
mov
or
xlat
and
xchg
repnz
ja
add
lods
rcrb
test
or
sbb
sub
xor
push
bound
dec
mov
sub
data16
pop
imul
fbld
mov
push
or
xor
fwait
mov
shll
adc
sbb
fisubrl
dec
insb
lods
push
jns
mov
mov
cld
movntq
stc
sbb
jmp
ljmp
mov
jne
push
push
push
mov
lahf
xor
lea
iret
jg
popa
jb
xor
rcll
push
out
mov
sub
stc
push
in
ss
aam
call
jb
push
shrl
test
popf
pop
xorl
scas
mov
imul
and
in
or
cld
fbld
movsb
mov
add
sarl
cli
cmp
mov
jmp
cs
daa
xchg
jecxz
fwait
leave
repnz
or
sbb
movsb
dec
popa
insl
in
mov
es
out
jnp
or
pop
ljmp
stc
inc
pop
in
pusha
xchg
aam
mov
data16
in
mov
sbb
pop
jecxz
fcmovnbe
enter
xchg
push
dec
fdivrl
mov
jns
dec
cmpsl
cmp
das
imul
jg
jns
dec
shrl
imul
adcb
dec
mov
jmp
cli
roll
mov
hlt
mov
scas
movsb
shlb
outsb
mov
mov
lret
arpl
mov
aas
mov
out
test
pop
xchg
mov
pop
jmp
cmp
imul
cmpl
pop
dec
test
ljmp
insb
js
lea
pushw
push
sti
dec
add
loope
out
stos
out
sbb
cwtl
out
test
aam
fcomp
cmp
jmp
mov
inc
fcomps
and
pop
xor
jecxz
add
lea
fnsave
lret
lods
xchg
data16
push
sub
out
fcmovnb
inc
sbb
bnd
inc
mov
xor
and
xchg
lcall
mov
insl
lods
out
out
in
pusha
and
in
mov
das
pop
pop
int
in
pop
test
test
loopne
shll
ja
pushf
daa
adc
aas
mov
mov
jge
mov
popf
es
clc
insw
xor
inc
and
test
xchg
xchg
xchg
adc
bound
movnti
fstl
lahf
adc
add
ljmp
xor
add
js
dec
xchg
mov
jbe
cmp
sbb
popa
fisubrl
push
enter
xorl
les
push
add
decb
ficoml
ret
mov
mov
movsl
pop
xor
or
pop
enter
adc
lock
cmp
aam
sar
aas
sbb
push
sub
and
rcrl
mov
sbb
mov
xor
cli
ja
mov
sbb
or
cltd
pop
jg
andl
lods
pop
mov
leave
add
push
sar
dec
jne
mov
mov
jae
sub
cwtl
sbb
shl
xchg
popa
aaa
add
test
mov
addr16
inc
dec
popa
ds
shrl
add
dec
mov
jg
mov
sbb
data16
sbb
mov
lds
lcall
mov
and
cltd
add
andl
pusha
jle
jb
push
mov
mov
jmp
cli
pop
inc
cmpsl
test
clc
jb
jle
aad
adc
sti
outsb
jbe
sahf
dec
xor
mov
push
cmp
xchg
notl
fistpl
in
mov
nop
jbe
fwait
std
mov
in
aaa
insl
js
andl
push
movb
and
das
jno
mov
xchg
sub
jae
nop
add
dec
cli
fdivrl
lcall
aaa
insb
pop
repz
notb
movsl
jle
loope
and
push
test
sub
xchg
insl
es
lahf
mov
or
xchg
sti
rcrl
jg
sub
inc
mov
mov
daa
mov
fldcw
js
aaa
repnz
int3
data16
mov
mov
push
lahf
mov
inc
sbb
push
ret
sti
and
scas
les
pop
notb
push
push
dec
and
fsts
sbb
iret
test
rcl
repnz
add
add
std
jnp
movsl
jmp
push
jp
push
fwait
push
and
lea
xor
lock
icebp
jmp
adc
mov
imul
push
mov
or
daa
leave
push
mov
jo
scas
inc
rcl
ret
mov
mov
pop
out
test
jne
mov
xor
rcl
mov
sahf
popa
iret
push
mull
test
jne
or
fs
adc
cli
cmp
or
fdivr
mov
xlat
mov
out
nop
sub
or
inc
add
xchg
inc
test
out
cmpsb
insb
push
lcall
imul
loop
mov
cmp
incl
test
push
imul
jae
iret
xchg
sbbb
pop
rol
or
cmpsl
bnd
int3
or
mov
and
imul
sbb
fdivrs
aad
mov
jp
cmpsl
dec
inc
mov
enter
les
pop
mov
add
jp
mov
mov
fdiv
pop
loop
int
pop
mov
fwait
add
mov
jo
lcall
mov
cmpsl
jp
jo
mov
adc
les
dec
xor
aad
jmp
popa
in
int3
dec
mov
les
fsubrl
pop
adc
lods
mov
loopne
cmp
add
out
lea
xchg
movsb
inc
mov
dec
addl
stos
lret
adc
xchg
sbb
mov
int3
inc
xor
pop
jecxz
dec
mov
test
jl
fs
sub
mov
lods
dec
mov
fsts
in
popf
scas
mov
test
jmp
mov
ret
inc
mov
add
loop
outsb
pop
push
inc
rcrl
int3
bound
pop
xchg
das
push
mov
das
push
xor
xchg
lret
pop
stos
pop
lcall
enter
add
ds
cmp
cs
mov
jmp
adc
mov
das
stc
int3
or
xchg
out
in
cli
fcmovu
jl
stos
nop
push
adc
out
and
jno
and
lahf
dec
jne
aam
addr16
loope
inc
xchg
cmp
mov
jae
xchg
arpl
jg
addl
pusha
outsb
pop
dec
aam
ret
inc
pop
jge
fnstenv
fldl2e
dec
daa
pop
fnstsw
in
insb
dec
sbb
repnz
jno
orl
lcall
pusha
or
movsb
pop
lcall
add
out
adc
ljmp
bound
or
js
fidivl
mov
cs
int3
inc
fnsave
lock
push
or
inc
add
add
pop
out
lock
shll
cmp
icebp
inc
push
jg
hlt
mov
pop
loop
mov
ret
pop
sti
loop
mov
or
pop
imul
push
sti
daa
cmp
dec
mov
ret
xchg
mov
aaa
aad
push
lods
pop
out
lahf
add
stos
cmpsl
add
cld
andb
adc
cmp
dec
jae
xlat
mov
sbb
mull
push
or
xchg
fwait
push
js
sbb
into
add
and
push
jp
lods
and
out
stos
jmp
cmp
jg
fisubrl
call
in
cltd
lret
mov
mull
shl
jmp
and
test
lea
ret
xor
ds
cmpsb
jge
sbb
pop
lret
add
fwait
pop
push
rclb
push
pop
xor
mov
mov
mov
sti
xchg
push
sub
mov
out
lods
add
mov
cmp
cmp
sbb
pop
mov
cmpsl
outsb
inc
sbb
cmp
fsts
cli
xchg
mov
mov
jns
mov
sbb
inc
sbb
push
stos
mov
cmp
add
fisubs
inc
ret
push
inc
aam
push
out
mov
push
sbb
aas
movsl
and
lcall
outsl
shl
jmp
jmp
or
cld
in
pop
aaa
mov
andb
pushf
inc
data16
loopne
loope
cli
and
sub
loopne
loopne
test
lret
xor
xor
and
sbb
and
jp
sti
and
xlat
fwait
clc
insb
jns
in
pushf
jo
or
jb
mov
insl
addps
jb
xor
test
hlt
sahf
push
loopne
push
mov
mov
cmc
lahf
lock
andb
mov
inc
clc
cmc
mov
mov
adc
xchg
mov
outsl
adc
mov
and
sahf
call
sarl
mov
pop
testb
lea
in
sbb
lods
test
xchg
lret
and
add
jle
cmc
mov
lcall
adc
imul
mov
xchg
xor
jne
xorl
push
mov
sbb
lahf
sub
xor
xchg
and
pop
xor
cmp
cmp
xlat
nop
repz
and
push
insb
and
jno
ds
and
sbb
clc
test
sbb
dec
sbb
inc
das
jo
sub
pusha
lods
xchg
jecxz
adc
cld
int3
in
add
iret
test
xchg
jmp
sbb
and
out
js
cli
sbb
push
cmp
pop
mov
sub
arpl
inc
stc
outsb
or
bound
inc
pop
test
sbb
dec
lcall
or
xlat
mov
insb
mov
ret
lret
xchg
outsb
or
adc
outsl
sbb
xchg
test
cwtl
scas
test
pop
int3
faddl
sbb
repnz
jnp
rcrl
mov
addr16
or
and
mov
jne
mov
cmpsb
xchg
shr
xor
adc
es
adcb
inc
jge
in
insl
loop
enter
pop
repz
stc
movsb
mov
xchg
dec
pop
jns
jb
dec
scas
cwtl
fcompl
sub
sub
or
mov
inc
cmp
or
cmp
aaa
adc
cltd
push
insb
push
js
sub
sahf
sbb
out
enter
in
into
cmp
das
rcr
rclb
pop
mov
gs
xlat
inc
pop
inc
aaa
push
add
nop
insl
jl
and
or
jbe
ret
inc
cmp
pop
mov
enter
out
pop
or
cwtl
jbe
stos
sbb
adc
mov
add
aas
shlb
mov
roll
dec
cs
out
cs
cmp
jl
xor
cmpsl
dec
cmp
jp
es
int3
mov
arpl
rcr
dec
in
dec
int3
call
jl
push
rorl
out
in
stos
rcrl
push
in
mov
xorl
dec
pop
cli
ja
inc
cltd
sub
push
adc
loopne
and
loop
rol
cmp
cwtl
stos
push
es
dec
cmp
sub
inc
sub
jb
faddl
mov
fcoml
imul
scas
scas
es
fistpll
pop
ljmp
jl
cmp
adc
test
or
icebp
fildl
and
push
repz
xchg
int
sub
add
sub
testb
dec
dec
dec
mov
lahf
sti
jb
jp,pt
jle
jmp
pop
movsb
push
fnsave
arpl
jmp
cs
into
mov
adc
insb
loope
or
push
rcrl
idivb
jmp
shll
xor
addl
cld
jo
inc
data16
xchg
adc
rolb
lahf
scas
jb
out
sub
ret
into
sbb
icebp
cs
movsl
mov
pop
or
inc
inc
pushf
in
xor
in
addl
shll
je
push
aas
notl
fxam
dec
mov
pop
or
cli
cmc
ja
dec
mov
pop
jae
mov
xorb
aad
mov
data16
sbb
cmpl
test
ret
sahf
mov
lahf
mov
push
and
imul
loope
addr16
bound
or
pop
cltd
mov
rcrl
insl
jg
push
js
imul
rcll
xchg
repz
pop
sub
in
dec
leave
and
inc
jno
lds
idivl
in
adc
fiaddl
in
inc
iret
mov
imul
push
or
sub
mov
aad
xchg
out
and
cmpsl
mov
sub
jnp
daa
jns
dec
fistps
and
adc
jae
notb
sbb
ds
mov
jno
inc
or
imul
test
push
mov
fiaddl
outsb
mov
sub
popa
dec
pop
out
ret
xchg
faddp
and
insl
iret
scas
or
popf
add
insl
stos
aad
mov
push
xor
pop
adc
sub
push
fsubl
aas
mov
mov
mov
or
jbe
and
or
push
insb
in
mov
lea
add
les
popa
sbb
in
mov
mov
in
aad
lods
and
cmp
shll
jnp
sub
pop
stos
sub
mov
pop
xor
fs
pop
jne
es
js
sbb
sahf
cmpsl
dec
les
adc
mov
xchg
sbb
into
negl
jle
cmp
dec
mov
xchg
adc
pop
adc
mov
lcall
xchg
xchg
xchg
push
ljmp
push
imul
les
xchg
xor
push
sti
cltd
stc
dec
inc
scas
testb
js
xor
daa
jmp
or
jl
hlt
cwtl
mov
xchg
sahf
mov
sub
in
aad
ficoms
sbb
xchg
in
jecxz
inc
stc
insb
mov
cld
hlt
out
pop
mov
mov
aas
rol
arpl
sub
xchg
mov
jnp
pop
push
pop
pop
cmpsb
fimull
pushl
jnp
sbb
notb
aam
push
or
push
in
mov
cltd
adc
inc
js
xor
jnp
push
pop
mov
sti
std
ret
cmpsl
es
add
xor
addr16
add
incb
int3
dec
dec
pop
scas
adc
sbb
nop
pop
stc
aad
mov
cltd
add
cmp
adc
hlt
pop
ret
dec
jb
mov
dec
dec
or
pop
test
xchg
sar
sbb
sub
xchg
into
sub
sti
inc
out
cmpsl
popa
lods
cmp
add
fstpt
cwtl
sub
and
int
pop
insl
dec
jge
pop
dec
into
mov
cmp
push
mov
inc
fcmovbe
test
insl
pop
jp
testl
aas
or
pop
out
dec
adc
xchg
cmp
std
jg
scas
sbb
nop
in
les
in
mov
jno
sbb
mov
inc
test
aam
lret
lea
pop
adc
lods
jno
add
jns
stos
lret
cwtl
stc
sbb
and
cmp
and
dec
lea
jl
rclb
int
addl
movsb
xchg
rcrl
lcall
xchg
loopne
mov
xor
aas
xlat
testl
sbb
loop
lods
in
adc
push
and
sbb
fldcw
scas
sub
shrl
in
cli
xchg
aas
imulb
push
arpl
shlb
outsl
es
xor
call
sti
push
lds
aad
pop
fildll
int3
mov
inc
jmp
add
pop
or
mov
into
int3
mov
adc
and
mov
push
xchg
daa
rcl
or
cli
and
adc
xchg
mov
outsb
mov
fwait
divl
bound
push
cltd
push
cltd
jmp
cmp
repnz
mov
imul
mov
cmpl
mov
mov
pop
inc
mov
mov
mov
popa
mov
jns
nop
cmp
cmp
adc
inc
inc
sahf
lock
mov
loop
push
cmp
pop
xlat
push
mov
cmp
sbb
jge
out
xor
call
mov
push
push
jmp
test
or
cmp
aas
xor
sub
mov
and
insl
aaa
or
out
xchg
or
test
loope
cmc
lods
sbb
movsb
inc
jnp
sbb
push
or
ja
xchg
stos
loop
jb
hlt
xchg
push
inc
aas
push
inc
xor
popf
pushf
test
insb
xchg
mov
pop
xor
fisttps
sub
scas
sbb
sbb
sbb
sbb
out
out
xlat
clc
je
lds
test
dec
mov
mov
cmc
fisubl
xchg
pop
dec
pop
lea
jmp
fistpl
inc
ffree
mov
dec
xlat
sbb
and
or
rcll
mov
cltd
daa
lahf
dec
cmpsb
push
cmp
mov
mov
lods
fcmovbe
mov
inc
inc
push
xlat
fs
loope
lock
cmp
mov
or
repz
ja
dec
int
xchg
xchg
enter
jge
pop
or
xchg
push
mov
popa
jno
pop
dec
in
pop
sti
mov
ror
out
jne
out
mov
std
mov
and
stc
arpl
adc
stc
aas
add
adc
fiaddl
ret
sarb
jnp
shrb
dec
test
adc
mov
jo
jmp
sub
jns
pop
push
xlat
outsb
xchg
jg
xlat
sti
out
fwait
lods
aam
negl
ret
jne
andb
push
dec
xchg
dec
adc
stos
inc
dec
sbb
xchg
in
lret
or
cmp
pop
pop
dec
dec
jae
fs
incb
mull
daa
das
pop
jp
test
cmp
out
xor
push
xchg
xchg
stos
add
fldl
jb
pushf
push
mov
mov
inc
inc
dec
std
test
push
fs
bnd
repnz
push
pop
mov
out
inc
stc
dec
inc
inc
cmp
mov
cmp
jnp
push
inc
aas
sbb
mov
lret
xchg
mov
xchg
adc
dec
cmp
incb
sub
clc
rorl
sbb
lcall
cmp
in
or
jne
adc
cmp
mov
mov
movsl
loope
dec
xlat
nop
mov
rcrl
cmpsb
test
imulb
cmp
xor
or
and
inc
loope
test
sub
ret
or
lods
das
cwtl
addr16
mov
push
fsubs
mov
fdivrl
xchg
jg
mov
mov
adc
lret
fsubrl
lcall
nopl
sub
lods
or
jmp
hlt
fs
pushl
loop
test
dec
cmpsl
ja
shrb
xor
dec
aam
mov
mov
mov
mov
mov
mov
int
jae
loopne
js
push
test
dec
int
stc
sti
jns
mov
aad
cmp
adc
arpl
ret
inc
imul
xor
scas
iret
lea
rcrb
scas
lock
push
shl
ret
mov
shrl
data16
mov
pop
mov
stos
mov
repz
xlat
pop
mov
repnz
jecxz
xor
movsl
insb
pop
test
pop
mov
mov
inc
int
lret
jl
fistpll
xor
cs
es
dec
mov
pop
or
jecxz
mov
sbb
sar
pop
aaa
repz
insl
cltd
aad
ljmp
and
in
movsb
lahf
mov
imul
fwait
lock
and
mov
xchg
negb
arpl
cwtl
xchg
test
popf
push
ss
int
jl
and
push
movsb
lcall
jns
sbb
mov
jo
xor
xlat
mov
outsl
jmp
jp
sub
push
ret
subl
lret
sbb
cmpsl
push
or
inc
shlb
imulb
dec
pop
mov
stos
int3
test
sub
and
loope
adc
sub
test
adc
inc
std
lcall
call
cwtl
jmp
dec
cs
lahf
imul
xor
test
lret
lret
nop
or
pop
xchg
cmp
sub
dec
jae
sti
xchg
jns
sahf
push
je
pop
insl
pop
test
jns
aad
mov
sub
in
inc
adcl
leave
jg
rol
sbb
xor
jns
and
push
imulb
out
sub
js
fs
xchg
aaa
push
in
in
fisubs
jge
jp
pop
loopne
xchg
fistpll
jno
push
lret
jbe
orb
mov
sti
mov
repnz
adc
cmp
sbb
push
dec
sbb
je
inc
dec
jmp
adc
xchg
stos
mov
test
mov
xchg
ficomps
xlat
aad
sub
out
fucom
outsl
fnsave
push
push
stos
movsl
cmpsl
popf
negb
loop
jnp
cmp
shll
fldenv
je
push
and
and
add
lahf
xchg
lret
xchg
mov
loopne
pushf
add
pop
fdivl
out
push
push
adc
aad
iret
pop
mov
iret
pop
jle
sbb
xor
fsubs
testb
mov
sbb
xor
inc
das
stos
lods
and
jg
dec
push
jl
xor
ror
pop
or
cltd
dec
mov
mov
sahf
sub
jecxz
leave
adc
and
aas
xchg
rorb
sub
stc
lock
push
ljmp
inc
sahf
out
jo
das
aas
xchg
sub
scas
jb
cltd
insl
cmpsb
xchg
xchg
mov
mov
cwtl
xchg
out
popf
mov
jnp
pop
je
dec
push
mov
jge
fwait
repz
inc
test
arpl
mov
dec
push
lret
cmp
shll
adc
stc
clc
xchg
dec
inc
cmp
pop
sbb
bound
and
js
jp
xlat
pop
push
xchg
into
and
scas
and
push
jge
cld
out
add
sbb
push
stc
and
pop
inc
lret
lds
mov
jns
mov
dec
call
mov
gs
sbb
movl
bound
mov
lods
sbb
movl
jle
mov
movsl
and
mov
cld
pop
mov
adc
cmp
pop
imul
cltd
sub
push
mov
adc
lock
clc
fwait
push
loopne
mov
xor
pop
jge
or
mov
shl
ret
inc
mov
inc
fldenv
cwtl
pop
hlt
fs
test
std
repz
sub
pop
xorb
add
jl
fidivs
cmp
dec
dec
sub
or
bound
or
and
ljmp
hlt
push
sbb
leave
stos
mov
cli
test
daa
jne
push
jge
aaa
push
rcrb
cmp
imul
popf
sbb
lcall
sahf
mov
ja
push
ficompl
dec
stos
jl
pushf
push
and
cmp
or
or
rcrb
in
clc
xor
xor
js
shl
xor
loop
jnp
sbb
insl
or
outsl
cmc
rolb
xchg
sub
mov
and
adcl
adc
in
call
push
pop
out
push
cmpl
mov
pop
mov
pusha
std
push
pop
xor
imul
jmp
int
adcb
pusha
or
xor
rclb
dec
inc
xchg
push
sbb
or
repnz
xchg
dec
mov
mov
pop
ret
pop
sbb
mov
nop
add
sub
bound
popa
sbb
movsb
out
dec
imul
mov
icebp
loopne
lock
lds
xor
mov
ja
mov
or
imul
dec
loope
lcall
add
and
jl
or
loop
movsb
arpl
jo
push
xor
xchg
jns
pusha
cmp
aam
fwait
repz
jg
pop
and
fcmove
je
xchg
xchg
or
iret
psraw
and
movsl
mov
mov
icebp
ljmp
jnp
cltd
insl
sub
xlat
popa
jbe
out
jnp
sub
enter
repnz
xchg
or
jne
xor
imul
dec
push
in
push
mov
push
pop
popa
mov
sub
cmp
pop
cmpsb
pop
sbb
ljmp
lahf
mov
push
enter
jbe
iret
add
xor
lret
rorl
sbb
lock
add
sbb
aam
out
inc
push
push
mov
mov
test
mov
in
cmp
scas
mov
enter
mov
xlat
sbbl
fistpll
pushf
sbb
add
hlt
xor
adc
shrl
imul
adc
ljmp
xchg
std
and
lds
mov
xor
xor
jecxz
push
pop
dec
add
xchg
mov
xor
outsl
into
addr16
clc
test
sbb
sub
sub
dec
jo
mov
lea
mov
mov
lcall
add
sbbb
push
push
jl
clc
mov
xchg
subl
cmpsb
jecxz
jne
loop
bound
xchg
mov
and
sbb
lcall
dec
cmp
out
pop
push
dec
shl
cmc
pop
out
xchg
ja
je
push
mov
push
lret
sbb
add
add
popf
push
mov
hlt
repz
jne
add
adc
fmul
mov
push
shll
out
out
adc
mov
cmc
and
repz
aam
cwtl
ds
and
pusha
dec
rclb
push
imul
cli
mov
vminsd
lcall
lock
push
adc
push
dec
scas
push
loop
xchg
sub
arpl
push
in
mov
pop
jmp
cmpsl
pop
xor
mov
push
stc
cmp
jmp
mov
out
dec
push
ret
xor
into
inc
sbb
fstpt
fbstp
in
lret
ret
mov
push
jmp
mov
push
orb
jb
adc
pop
pop
mov
mov
fwait
jecxz
xchg
inc
mov
lds
pop
jg
gs
xchg
imul
sbb
fnstcw
and
sub
repz
jnp
pop
daa
mov
pop
and
pusha
jmp
popa
movsb
fsubrs
lods
outsb
ja
rcll
aaa
push
mov
repnz
fcmovbe
or
sub
fadds
loope
les
xor
jo
fisubs
out
cmp
iret
out
push
rcll
data16
and
jo
push
jns
clc
cmp
out
loop
mov
and
mov
gs
jo
cmp
push
push
push
es
and
pushf
ret
or
cwtl
popf
sbb
mov
popa
scas
pop
sbb
int3
into
lea
add
dec
lahf
mov
js
lea
lret
dec
sub
fucomi
or
sbb
decb
inc
push
and
pop
sub
mov
inc
test
sub
aam
mov
mov
cwtl
cs
push
std
fsubs
lret
mov
dec
into
dec
jle
mov
cmp
add
adc
gs
push
lods
pop
shll
sti
mov
scas
in
cmpb
bound
sub
fsts
imul
call
cld
push
dec
sbb
loopne
rcll
mov
loopne
cmp
jge
mov
rcl
out
movsb
jecxz
andb
sti
xchg
and
jo
cmp
scas
pop
dec
cmp
pop
lcall
ja
mov
lret
loop
push
ljmp
sub
and
ficoml
in
dec
bound
stos
sbb
mov
or
xchg
and
cmpsb
dec
in
push
mov
pop
inc
imul
cmp
push
sbb
dec
fstl
outsb
inc
cmp
jg
sub
jmp
cmc
imull
push
push
xchg
jecxz
jp
push
cli
cmp
lods
stos
sarl
cmp
mov
adc
dec
js
notb
outsl
popf
sub
leave
and
add
mov
flds
popa
aas
shrl
jp
xlat
push
int
imul
xchg
inc
xor
adc
mov
sbb
lds
jl
cmp
and
sbb
jp
inc
xor
and
sahf
cmc
lret
mov
mov
inc
push
mov
cmp
or
adc
leave
xchg
ds
cmp
and
xor
gs
inc
mov
out
int3
stc
loopne
out
push
sub
lcall
int
out
flds
mov
lods
pop
std
ss
push
aad
mov
ss
jo
xor
jae
push
sbb
cmp
xor
sub
adc
push
and
lods
mov
incl
mov
jge
dec
insb
mov
jecxz
ljmp
std
lahf
enter
outsb
dec
push
sub
adc
inc
cmp
sub
lea
in
mov
push
push
or
dec
mov
pushf
mov
inc
out
xchg
ja
rorl
ljmp
nop
inc
adc
or
cmp
lret
test
adc
aam
cmc
pop
lret
mov
xchg
push
push
mov
inc
shrl
jnp
push
bound
ljmp
loope
ljmp
xor
ljmp
ret
movsb
data16
mov
add
mov
dec
pop
or
je
mov
xchg
pop
mov
adc
fstl
cmpsl
iret
mov
pop
leave
and
push
mov
mov
jo
adc
ss
je
ja
icebp
cmp
jb
xor
mov
lods
mov
sub
or
xchg
xchg
pop
dec
xchg
movsl
popf
jl
cli
xor
and
das
fs
sar
inc
sbb
in
pop
outsb
dec
push
jne
cmp
lock
loopne
add
movsb
mov
jns
imul
xor
sarb
lods
add
pop
lahf
pop
dec
fbld
xchg
outsb
hlt
xchg
out
push
outsl
sub
adc
out
sub
push
mov
sbb
ss
jle
mov
cwtl
mov
fisubs
push
inc
mov
in
out
xchg
divl
xchg
shl
push
insb
sbb
adc
incl
flds
ja
add
and
xchg
jge
jb
dec
dec
push
gs
enter
or
sub
lea
sarl
cmp
jmp
aam
mov
jmp
pop
push
and
mov
xlat
ds
lcall
ja
outsl
cmp
lret
and
pushf
movsl
mov
fwait
bound
xchg
xchg
out
aad
or
les
mov
and
pop
xor
cltd
sbb
push
daa
pop
xor
add
js
dec
sbb
in
movl
add
out
ret
lcall
mov
stos
fcmovnu
sub
fwait
mov
pusha
out
xor
out
bnd
inc
std
mov
incb
jle
movb
lea
pop
fstpl
and
mov
ss
leave
repnz
lret
or
cmpsl
popf
jmp
mov
int
sub
xchg
jecxz
push
jp
sarl
sbb
jne
outsl
mov
mov
popa
xor
xorl
test
jnp
rcrb
push
sub
addr16
xor
out
je
mov
add
adc
xchg
bound
jne
adc
jae
mov
inc
mov
pop
pop
adc
ret
add
mov
push
gs
mov
jbe
stos
loopne
jl
insl
mov
mov
mov
push
mov
mov
dec
jle
mov
add
fsts
add
mov
inc
mov
push
test
shrb
fnstcw
mov
aaa
add
xchg
inc
add
leave
xchg
inc
test
mov
adc
jg
daa
pop
cmp
mov
cmp
push
lock
js
fsubs
pop
mov
lods
rorb
enter
in
mov
cwtl
in
pop
mov
clc
aas
roll
pop
call
push
insl
jmp
add
repnz
ds
cwtl
adc
pslld
pop
nop
call
adc
int3
insl
loop
push
xor
cld
push
nop
pop
jno
jl
jge
cmp
cmp
pop
andb
xchg
sub
fdivrl
cmp
xor
adc
cld
mov
mov
outsl
inc
sub
sbb
in
mov
lea
pop
mov
or
cmp
loope
and
jo
pop
faddl
scas
inc
in
out
mov
int3
mov
lds
aas
out
aam
call
stos
xchg
xor
xchg
aas
pusha
imulb
dec
mov
sbb
pop
cs
cmp
lcall
push
add
pop
inc
sub
ficoml
xchg
cwtl
pop
dec
cs
and
loope
mov
rcr
mov
inc
sub
scas
pusha
dec
pusha
sub
sub
mov
mov
cltd
push
ret
aad
in
sarl
pusha
rolb
in
ljmp
stc
inc
xor
dec
add
inc
push
arpl
fisttps
add
sub
stos
xor
mov
sbb
and
iret
lahf
push
jmp
test
aam
loope
cs
imul
lods
xlat
shl
mov
in
mov
lea
sub
bound
or
loope
sbb
add
mov
rorl
lret
rcll
hlt
mov
rcll
sar
adc
pushf
stos
popa
iret
ret
inc
inc
sbbl
lds
sbb
das
xor
fists
and
ja
mov
cmpl
fidivrl
cmpsb
sti
aam
mov
sub
popa
mov
lret
insb
icebp
test
push
add
rcll
scas
mov
jmp
jno
fmul
dec
adc
std
mov
lea
cltd
xchg
dec
sbb
je
mov
add
test
add
or
mov
mov
cld
sbb
inc
cmp
cmp
pop
jae
adc
jno
icebp
icebp
pop
jmp
mov
jne
xchg
test
sub
add
mov
rcr
pop
repz
xchg
jp
cmp
ja
push
cwtl
jmp
mov
mov
mov
fs
lea
lock
mov
xchg
data16
push
jb
fdivrs
jl
insl
cltd
inc
outsl
lock
out
fadds
push
cmp
sub
out
in
out
xor
adc
fildl
outsl
pop
mov
sub
adc
mov
and
xor
test
lock
lcall
aaa
mov
or
pop
cmp
inc
pop
je
jp
inc
es
cmp
pop
jo
int
adc
roll
jb
jno
das
sub
rclb
ret
dec
scas
push
xchg
aas
or
and
adcb
pop
imul
add
test
popf
pushf
sbb
fistpl
adc
test
dec
insb
fstpt
or
loopne
add
xchg
adc
jmp
push
das
ss
mov
int
add
nop
test
test
jle
push
xchg
mov
rclb
cltd
ss
sub
in
das
test
mov
fs
and
sbb
jl
xchg
push
mov
dec
scas
lods
mov
test
fwait
lret
cmp
into
sub
in
adc
roll
mov
std
jb
xchg
js
dec
lcall
inc
adc
inc
xor
out
out
movsl
stos
jmp
pushf
pusha
leave
jbe
fdivl
or
dec
outsb
lcall
cmp
je
xchg
push
iret
sti
push
mov
mov
sbb
lods
out
push
stos
mov
push
sub
jo
ljmp
inc
rcr
int3
ja
jae
in
pop
dec
arpl
jne
cmp
sub
or
inc
mov
lcall
mov
aaa
or
out
or
jl
loopne
mov
je
xor
adc
sub
aad
stos
mov
int3
cmp
push
pop
rclb
cld
imul
mov
das
cs
lret
jbe
repnz
pop
push
dec
filds
dec
int
jnp
pop
sub
cmpsb
pop
ret
pushf
push
push
leave
mov
je
xor
sub
enter
sub
or
adc
mov
lods
pushf
leave
sbb
push
int3
lds
xor
clc
mov
adc
ret
leave
and
movsl
dec
xor
mulb
and
mov
das
lock
loop
cmpsl
lock
push
insl
add
fs
inc
cmp
xchg
int3
push
movsb
jl
adc
loop
mulb
mov
ror
sub
xchg
jno
into
sbb
mov
pushl
stc
sbb
cmp
popl
jge
sub
jecxz
push
sub
arpl
sub
xchg
js
pop
sbb
mov
or
push
and
cmpb
mov
pop
or
pop
jo
lock
and
mov
sub
cmpsl
lds
cli
inc
xor
out
loope
into
pop
lea
test
cmp
ds
mov
dec
ret
cmpsl
xchg
mov
pop
orl
enter
roll
push
jge
daa
rolb
xchg
lcall
repnz
imul
lea
cli
adcb
inc
cmp
inc
into
in
sbb
leave
mov
mov
int
hlt
and
mov
jmp
xorl
cmpl
inc
inc
dec
setns
dec
arpl
dec
std
icebp
ret
cwtl
rol
mov
lods
ret
int3
push
aam
ljmp
push
inc
aaa
inc
call
test
arpl
sbb
int
add
orb
mov
in
in
pop
out
pop
test
cld
lea
jmp
icebp
jge
pop
add
adc
mov
movsl
xor
add
xor
and
sbb
pop
or
mov
imul
adc
dec
loope
ds
pop
cmpsb
in
push
jnp
pop
add
shll
jnp
pop
xchg
ljmp
repz
test
jno
mov
pop
hlt
mov
inc
nop
sti
inc
pop
lock
jp
mov
aas
shl
mov
dec
jmp
mov
clc
push
jecxz
xor
in
jg
mov
dec
sbb
inc
mov
cmc
xchg
dec
leave
xor
xchg
imul
add
or
push
popa
addr16
inc
mov
xor
dec
dec
push
lds
mov
nop
jb
mov
cmp
mov
dec
mov
ror
in
les
sahf
movsb
frstor
cmovae
test
mov
hlt
push
nop
or
in
ja
mov
sti
fwait
dec
cmp
out
and
dec
into
adc
adc
in
and
pop
xor
or
lock
xor
stos
xchg
test
cmp
out
mov
ror
repz
and
test
mov
xor
pop
mov
push
mov
pop
cmp
mov
xorl
aas
and
pop
mov
imull
sbb
dec
inc
jo
mov
ja,pn
mov
and
jle
dec
or
dec
imul
or
jno
and
scas
xlat
sahf
lea
inc
test
pop
mov
xchg
shrl
test
mov
sbb
push
sti
bswap
cmp
inc
cmpsb
fsub
push
jnp
inc
sub
orl
inc
mov
dec
cmp
inc
add
xchg
mov
jp
call
cmc
fildll
jl
mov
add
or
sub
pushf
sbb
xchg
xabort
xor
test
jmp
mov
mov
popa
jg
push
call
bound
mov
pop
jmp
sub
inc
repnz
leave
pop
pop
les
aad
jo
jge
shrl
aas
mov
frstor
mov
or
iret
outsl
std
scas
add
mov
xor
in
aaa
sub
imul
sub
fdivr
inc
test
pop
repz
fnsave
push
jg
add
pop
imul
cmp
jle
and
aam
or
cmpl
or
pop
outsl
adc
fsts
add
imul
cmp
lods
pop
lds
cmp
sub
pop
inc
insb
sti
cmp
arpl
lret
mov
addr16
dec
and
lret
in
pop
mov
shl
inc
add
mov
std
repnz
out
lret
mov
dec
pop
mov
pop
adcl
sbb
repnz
xchg
mov
mov
test
insl
pop
pusha
xchg
iret
sbb
or
mov
lods
int
icebp
fnstcw
xorb
inc
repnz
lahf
mov
repnz
clc
ja
icebp
cld
sbb
into
lret
push
mov
push
je
insl
repz
or
lods
or
pop
xchg
aam
cmp
sbb
leave
and
sub
mov
mov
es
cmp
popf
cmpsl
push
addr16
push
hlt
pop
mov
xor
xor
cmp
xorb
jne
adc
fstps
fnclex
sub
dec
sti
inc
fnstcw
insl
add
jge
les
mov
cs
jg
jp
insl
jne
into
jl
clc
jg
outsb
pop
scas
fcmovbe
jae
arpl
adc
and
cs
scas
out
add
outsl
add
mov
dec
add
push
andl
fbstp
xorb
inc
inc
dec
repz
and
fsubrs
mov
adc
into
popa
sbb
lock
inc
cmp
repnz
arpl
mov
cmc
fdivrs
push
out
sub
or
cmp
pusha
int
push
sbb
dec
fs
scas
sti
push
inc
test
pop
jo
jmp
test
push
mov
inc
add
aas
push
or
sbb
adc
sahf
das
sub
imul
data16
and
xchg
jge
sahf
jle
cs
xchg
outsb
int3
mov
sub
cmp
push
xchg
test
fimull
pop
adc
lods
fstps
mov
and
push
jb
cmc
repnz
cmp
pop
pop
cmp
lea
xchg
xchg
je
mov
repz
repz
mov
imul
jmp
repnz
outsb
xor
xor
or
fsubs
popa
into
sbb
mov
pop
pop
jbe
mov
ja
sbb
loopne
shll
mov
sub
sub
inc
movsl
addl
inc
out
or
bound
or
rorb
lahf
insl
jge
sbb
add
in
test
add
out
adcl
sbb
xchg
push
icebp
repz
imul
add
scas
clc
arpl
mov
dec
ljmp
jbe
push
pop
fidivs
cltd
movsl
shlb
rcl
sbb
pop
es
call
dec
iret
insl
pop
adc
mov
sub
sub
push
dec
sub
xor
mov
cmp
imul
lret
es
stos
pop
mov
imul
pop
int3
pop
jl
ds
stc
out
dec
adc
push
cwtl
cmc
jbe
mov
int
imul
arpl
xchg
cmp
aas
pop
lahf
lea
shll
mov
movsb
pop
xchg
pop
insl
xchg
add
std
pop
pop
cmp
jp
popl
mov
testb
mov
cmc
test
pop
out
mov
fs
std
mov
jnp
sbb
push
mov
xorl
xchg
pop
lds
cmp
mov
sahf
fstl
jge
dec
lds
fistpl
rol
inc
mov
mov
xlat
lcall
push
inc
notl
popl
mov
rclb
in
push
dec
xor
in
scas
outsb
push
or
flds
out
dec
adc
mov
dec
xor
xchg
mov
fmull
clc
mov
cmp
fbld
adc
dec
sub
out
dec
pushf
dec
fsubs
xor
fisubrs
stos
jbe
mov
ljmp
sahf
in
jecxz
pushf
dec
sbb
mov
add
sbb
addr16
shrl
repz
inc
xor
push
cmpsb
dec
mov
das
xor
fdivl
rorb
test
movsb
aam
jno
sub
jl
add
and
inc
push
fildl
sub
and
andl
sbbb
push
ja
call
jecxz
stc
pop
outsb
sub
es
hlt
fnstenv
adc
loop
aad
mov
sbb
dec
nopl
icebp
mov
adc
mov
pop
pop
mov
xchg
and
sbb
add
out
push
arpl
xchg
test
xor
fsubr
adc
pop
insl
enter
call
mov
out
mov
lcall
scas
mov
mov
test
jno
and
mov
cmp
pop
dec
loopne
jbe
pop
ss
xor
mov
mov
and
mov
enter
or
jle
test
int3
roll
fstps
cltd
out
sub
cmpb
hlt
mov
inc
mov
mov
rcll
push
and
xchg
sahf
arpl
xlat
loope
loop
sbb
xor
lods
jl
bound
daa
sbbl
dec
xorl
or
push
fisttpl
cwtl
inc
imul
out
pop
jmp
in
cld
jbe
hlt
mov
leave
dec
jmp
inc
loope
push
mov
jmp
mov
mov
or
mov
and
jo
add
pop
int
cmovb
cmpsl
lret
movsb
jg
inc
int3
lret
addr16
mov
mov
bound
or
fdivrp
sbb
pop
in
xor
insl
in
push
sbb
lods
xor
insb
cmc
lods
testl
je
xchg
cmpsl
add
dec
or
and
addr16
and
xchg
pop
add
pop
adc
push
jp
fs
cmp
adc
jle
sete
dec
mov
pop
push
mov
loopne
xchg
xchg
adc
dec
shrl
xchg
clc
sarb
mov
iret
cmp
jae
push
and
push
into
std
iret
xor
ficoml
enter
xchg
sub
mov
in
fldcw
ret
xor
imul
or
mov
cmp
movsb
out
aam
out
loope
mov
lock
data16
xchg
pop
mov
daa
add
fcoms
push
mull
out
sti
loope
imul
push
push
jmp
testb
repz
jmp
fcmove
cmp
bound
xchg
xchg
xor
sarb
in
insl
sub
adc
push
mov
push
mov
movsb
or
jbe
pop
inc
insb
ror
mov
pushf
sub
shrl
ds
mov
sub
call
loope
daa
movsl
and
mov
cli
xchg
adc
sbb
mov
xchg
jle
add
popa
cmp
and
or
popf
push
push
out
movsl
xchg
mov
adc
cwtl
int3
pop
push
pop
mov
rcrl
sub
lahf
repz
into
loop
push
loope
xor
sarb
mov
shrb
cmpsl
out
fists
xchg
and
and
mov
mov
addb
shr
jo
push
add
nop
xchg
jae
adc
push
fisubrs
dec
test
inc
ss
xchg
inc
rorb
std
in
add
lods
sbb
pop
adc
addr16
or
das
dec
cwtl
fstpt
sbb
push
jle
enter
pushl
fwait
icebp
pop
push
je
lods
ljmp
iret
inc
mov
push
dec
dec
inc
adcb
and
out
daa
push
xor
ja
fwait
std
clc
mov
pop
add
fcoml
addb
push
push
mov
dec
jmp
test
add
xchg
insb
xchg
adc
mov
mov
dec
fimull
pop
movsl
loopne
cmp
mov
mov
in
js
lret
xor
mov
mov
or
orl
mov
jb
xor
sub
shl
or
push
cmp
divb
test
hlt
aad
or
add
dec
lcall
lods
fsub
fdivs
xor
aad
inc
mov
xchg
imul
jle
push
sti
int
repz
push
or
mov
adc
cmpps
aas
mov
popa
icebp
mov
push
lret
sub
js
jle
pop
dec
sbb
jne
imul
add
sbb
jg
repnz
and
loope
mov
and
cmp
jg
or
add
popf
inc
inc
stc
or
mov
mov
mov
push
cmp
test
leave
inc
pop
rclb
push
mov
clc
mov
or
imul
addr16
jl
jp
xor
clc
pop
loope
ret
pop
jg
mov
xchg
or
sbb
hlt
scas
mov
imull
or
leave
mov
xor
in
rolb
in
inc
push
jecxz
data16
outsb
adc
stos
mov
xor
sub
imul
imul
cmp
ror
movsl
mov
dec
push
pusha
test
aam
pop
cld
mov
test
and
iretw
loop
sbb
xlat
fstps
mov
inc
leave
lods
xchg
cmpsb
call
jae
xor
jo
enter
and
and
fisubrs
je
cmp
add
mov
lcall
mov
bound
rcll
pop
cmp
mov
pushf
aas
jp
mov
xor
out
outsb
insl
insl
or
jle
add
inc
popa
ret
icebp
das
mov
xor
sbb
cs
xor
cmpsl
sub
aad
sti
inc
mov
mov
mov
push
and
xor
adc
adc
leave
mov
hlt
mov
xor
or
dec
out
ret
aam
add
sub
scas
cmp
das
mov
stc
push
and
sbb
cmp
inc
pushf
test
movsb
stc
dec
fisubl
push
sub
push
test
inc
dec
stc
adc
jnp
sub
sbb
sbb
xchg
and
sub
aas
xchg
ret
or
xchg
std
out
push
fstpl
pop
jns
arpl
push
xchg
push
jae
push
mov
xor
and
roll
add
aam
push
or
cmpsb
or
mov
mov
mov
inc
fnstsw
andl
stc
and
cmp
sub
pop
sbbl
arpl
or
xchg
stos
icebp
and
clc
inc
inc
push
or
imul
std
cltd
mov
sbb
mov
xchg
in
fcmove
push
sbb
push
sbb
subb
stc
popf
popf
xor
es
dec
std
sbb
inc
pop
jb
fxch
jecxz
add
dec
push
inc
imul
cwtl
addb
mov
pop
mov
movsl
pop
fs
int3
add
fimuls
xchg
movsl
test
mov
adc
int3
mov
cmp
lret
dec
es
nop
dec
add
in
aas
jg
ljmp
pop
mov
andb
adc
sub
inc
fcoms
dec
or
mov
icebp
lods
stc
xor
pop
add
in
dec
das
aaa
mov
lods
das
inc
roll
std
add
es
lahf
in
out
jnp
sbbl
imul
mov
push
mov
cmpsl
and
sbb
sbb
rclb
in
ret
xor
aas
fs
pop
pop
sub
leave
xor
fistps
xchg
mov
lcall
cltd
xchg
add
xor
fcoml
clc
loop
pushf
sbb
gs
mov
stos
sub
es
sahf
subb
cmpsw
add
cwtl
in
shlb
sub
jne
scas
xchg
adc
ljmp
insb
enter
inc
in
hlt
rcrb
je
or
mov
or
adc
sbb
jle
or
pop
hlt
mov
adc
fwait
rolb
push
and
clc
xor
jg
xchg
mov
adc
xor
loopne
xor
idivb
mov
out
mov
mov
jb
movsl
jecxz
stc
push
and
mov
outsb
jle
das
sub
jle
in
daa
stos
sub
shlb
dec
sub
mov
lea
add
cli
mov
fwait
jae
jnp
in
push
testl
icebp
pop
lret
jbe
ja
out
sub
inc
mov
call
push
push
dec
mov
pop
stc
cmp
sbb
sub
push
dec
sbb
push
lcall
test
out
mov
mov
mov
insb
push
cmp
mov
cltd
idivl
cmp
std
mov
int
pop
mov
imul
arpl
shlb
push
dec
or
scas
jge
jbe
pop
jmp
in
jnp
aam
sbb
insl
dec
lock
pusha
stos
mov
cmp
mov
jle
sbb
and
mov
loope
movsb
inc
mov
xor
cs
jge
sub
cmpb
dec
and
jecxz
repnz
xorl
cmp
xchg
add
orl
stos
dec
or
dec
cwtl
and
mov
push
push
mov
push
daa
mov
pop
out
lods
inc
ret
mov
adc
sbb
test
xchg
mov
loope
lea
mov
xchg
mov
leave
sub
sbb
rcrl
push
ljmp
call
out
cli
ret
repz
jo
daa
jmp
cmpsl
or
shrl
stc
es
and
in
out
gs
lea
cli
fs
lea
mov
sti
addb
jl
das
xor
arpl
icebp
lahf
xchg
insl
repnz
jg
sub
aam
das
cmp
and
push
jmp
pop
pop
je
rcrl
fisubl
adc
sbbl
adcb
shlb
xor
call
popf
inc
mov
cmp
icebp
xchg
fisubrl
mov
insl
push
fsubrp
outsb
clc
add
popf
dec
je
pop
adc
push
ret
sbb
sahf
cmpsl
loop
jne
cmp
loop
jno
das
inc
dec
in
popf
bound
xchg
test
std
gs
mov
inc
in
mov
lods
xchg
cmp
mov
sub
pop
test
mov
xchg
and
add
sbb
add
div
cmp
jo
cmpsl
xor
add
std
mov
dec
les
fidivrl
out
pop
push
push
rcrl
fnsave
sub
xor
sbb
mov
push
jo
jp
int
dec
enter
and
mov
rol
add
add
bound
es
int3
and
out
inc
scas
dec
inc
pop
pop
bound
scas
or
std
or
pop
jmp
outsb
mov
popa
shl
stos
mov
cmpsb
jno
stos
into
lret
push
pop
sub
fwait
or
sub
inc
dec
mov
ror
adc
inc
inc
adc
aad
loop
arpl
push
jp
push
xor
les
mov
or
xchg
xchg
movsb
pusha
dec
in
inc
fnstenv
cltd
jns
mov
outsl
daa
sahf
movsb
aaa
sbb
xchg
sub
loopne
xor
pop
cs
leave
in
sbb
xor
xchg
lock
subb
lods
fcmovbe
subl
or
pop
mov
inc
iret
ja
mov
aaa
test
mov
fwait
inc
cmc
mov
aaa
mov
pop
mov
mov
jl
cs
aam
shll
mov
jl
cmc
enter
outsb
stc
mov
jne
or
cmp
ret
popf
call
lds
aaa
sbb
and
sbb
cli
int3
jmp
test
xchg
sbb
and
fisttpll
push
or
cld
orl
in
dec
add
fisubs
xchg
repz
pop
mov
stos
push
xor
cltd
lods
and
jb
or
mov
inc
add
repz
add
pop
mov
pop
xchg
cmc
cwtl
xchg
jle
or
add
cltd
and
push
aaa
push
or
pop
adc
push
enter
inc
inc
int
loop
jmp
fmuls
inc
rorl
cltd
addl
jp
xor
mov
inc
dec
movsb
and
cwtl
test
jmp
mov
bnd
out
rorl
pop
mov
mov
inc
loop
fildll
pop
jo
dec
movl
sarl
gs
ljmp
out
adcl
push
fcompl
clc
and
call
movsb
push
or
adc
addr16
push
int3
in
fidivrl
mov
jmp
cmp
test
pop
stos
inc
lahf
hlt
incb
pop
adc
jnp
jecxz
lret
cld
mov
push
xor
addr16
sbb
sti
xor
pop
lds
cmpsl
sahf
in
rcll
mov
std
push
xchg
inc
inc
dec
mov
inc
out
and
pushf
outsl
aad
push
fsubl
ljmp
mov
or
loop
inc
jnp
dec
sub
cli
dec
icebp
mov
stos
gs
pop
dec
pop
jle
xchg
jb
ret
iret
pushf
adc
loope
ja
dec
leave
ffreep
sahf
and
rcll
dec
xor
pop
rolb
pop
fisubl
and
icebp
xor
dec
test
jbe
stos
sbb
out
fnstcw
pushf
ljmp
mov
jbe
mov
jae
lret
xchg
adc
out
cli
mov
mov
dec
aam
dec
inc
loope
sub
mov
stos
idivb
out
cmp
cli
nop
add
loop
imulb
mov
inc
js
lret
adc
jnp
rol
inc
xor
nop
dec
or
or
xor
out
cmp
pop
lcall
pop
push
fwait
loope
add
cmp
test
mov
test
cmp
ljmp
dec
lods
adc
rep
rcr
push
stc
mov
into
clc
movsl
mov
int
push
imul
sbb
push
jnp
push
xchg
cmp
mov
and
pushf
push
lret
cli
or
loope
jmp
inc
add
lods
mov
cs
dec
cli
mov
into
pop
push
push
daa
inc
mov
jl
iret
add
icebp
iret
add
imul
incb
lods
gs
or
add
lock
daa
sbb
fxch
mov
add
or
lock
test
xchg
add
xchg
fldenv
xchg
pop
lret
jo
lahf
cmp
int
pop
mov
xchg
inc
repz
mov
test
mov
mov
xchg
mov
imul
std
mov
shl
lahf
xor
scas
imul
gs
insb
mov
lock
stos
out
and
sbb
or
fs
jl
mov
push
mov
mov
int
outsb
das
inc
fidivl
std
push
sti
pop
repnz
push
cmp
cmp
movsl
pop
jmp
cmp
cmp
aas
clc
adc
pop
cmpsb
addr16
cmp
into
xchg
jno
adc
push
push
or
and
cmc
or
push
add
pop
out
add
gs
test
jmp
scas
leave
stos
push
cltd
mov
ret
push
mov
inc
sbbl
xor
out
adc
arpl
xchg
pop
adc
popa
jg
test
and
stos
ret
divb
or
leave
sub
mov
jmp
jbe
sahf
imul
dec
push
and
jge
or
popf
cmc
aaa
rcrb
mov
dec
lret
arpl
or
and
fsubp
addr16
subl
jae
mov
cmp
shr
lcall
mov
mov
in
pop
inc
pusha
pushf
pop
xor
mov
mov
mov
inc
and
jns
rcl
insl
xor
xor
hlt
and
xchg
in
xchg
es
add
outsb
or
xor
push
dec
pop
mov
imul
adc
cmpsl
iret
fiaddl
sub
loopne
cs
sbb
sbb
pusha
xor
cwtl
mov
xchg
ljmp
sbb
lock
inc
ss
push
mov
cmpsl
cmpsb
cld
jbe
sbb
fmuls
jnp
fnstenv
scas
mov
mov
mov
mov
xor
fadds
jnp
in
subl
push
push
xor
lods
test
je
shl
jmp
push
int
sbb
or
mov
test
jle
push
out
dec
mov
mov
ds
mov
testl
fs
clc
sbb
mul
sub
dec
add
arpl
cmp
pop
or
pop
sbb
xchg
test
pop
xchg
xchg
aam
xor
mov
popa
cmp
aaa
sbb
add
mov
mov
jl
sub
xchg
mov
enter
mov
movsb
in
ficoml
sub
enter
int3
adc
sbb
xchg
pop
scas
imul
orb
add
lahf
in
test
dec
mov
push
lods
pop
cmc
mov
lds
xor
pop
add
xchg
cmp
push
sub
push
xor
ljmp
push
subl
push
cmc
in
or
xchg
pop
addl
call
pop
dec
jns
mov
js
xchg
clc
ret
sub
push
addr16
jecxz
and
mov
jo
js
pusha
or
lock
loopne
cmp
and
mov
fdivp
mov
sub
mov
test
loope
jne
pop
mov
ss
add
cmp
out
mov
jmp
or
mov
xor
ja
jmp
mov
arpl
mov
imul
adc
inc
cmpsb
adc
int
insl
jle
adc
mov
and
mov
and
sbbl
mov
arpl
xorb
fimull
mov
lret
and
push
pop
jne
stc
pop
and
outsb
rclb
xchg
lret
in
pop
cltd
mov
mov
or
push
xchg
adc
je
aas
mov
jl
sub
cmp
or
out
aad
aad
es
inc
dec
and
jl
inc
test
jg
fnstenv
jmp
sahf
push
loope
adc
or
lahf
xlat
pushf
adc
jp
xchg
sub
pusha
mov
mov
imul
in
jecxz
cwtl
cmp
in
sbb
push
jecxz
jmp
add
pop
mov
mov
dec
mov
pop
sub
dec
sbb
test
sbb
dec
xchg
push
sbbl
in
push
icebp
mov
pusha
loop
add
js
xchg
lret
jp
cmpsb
inc
or
scas
add
xchg
pop
xor
sub
or
aas
sbb
push
push
inc
movsl
es
inc
mov
jbe
jnp
gs
int3
in
lret
pop
add
cmpsl
inc
movsl
inc
adc
sub
shlb
or
fwait
dec
outsb
xchg
mov
adc
int3
ffree
mov
clc
mov
cwtl
repnz
add
inc
jb
scas
push
pop
inc
ds
and
cmc
sub
js
sub
and
pop
stc
in
inc
int3
cmp
adc
xor
or
push
push
push
sti
sub
add
mov
sub
xchg
movsl
addr16
stos
add
mov
dec
push
and
xor
call
addr16
fwait
pop
arpl
sub
mov
mov
xor
inc
xchg
inc
jecxz
push
xchg
push
int
mov
in
pop
test
jns
push
pop
cmp
adc
xor
leave
dec
aaa
rol
lds
push
xchg
popa
cli
xchg
mov
aad
data16
mov
subl
and
jl
ret
adc
rcll
and
inc
and
cmc
mov
sub
lea
mov
stos
jle
test
pop
xor
dec
imul
mov
jnp
sub
dec
push
int3
rcll
mov
in
jno
inc
mov
xor
lret
jne
xor
xor
repz
pop
leave
out
pop
mov
stos
scas
adc
push
pop
ja
or
cmp
aas
icebp
cmp
ret
test
imul
pop
call
inc
xchg
push
or
mov
jmp
sahf
and
lds
sub
ret
adc
dec
mov
or
jp
adc
pusha
div
push
mov
pop
ret
push
sahf
push
adc
imul
sub
lret
and
mov
into
mov
xor
adc
insl
repnz
cmp
or
cmp
cli
dec
push
cmc
jnp
pop
or
pop
lock
pop
add
dec
das
sub
cmp
jb
push
sbb
out
cmc
mov
pusha
scas
and
filds
and
and
sbb
pop
testl
inc
aas
sbb
cltd
inc
jb
stos
adc
mov
rolb
or
cmp
je
lock
xor
mov
outsb
lahf
lahf
popf
mov
adc
sbb
rol
lea
cld
lods
mov
adc
cltd
popa
mov
pop
jle
movsl
sbb
cmpsb
mov
lret
stos
or
xlat
push
mov
pushf
scas
lods
out
sub
mov
mov
gs
dec
sub
adc
or
sub
inc
test
push
jl
cmp
mov
inc
dec
mov
cltd
fs
aad
and
iret
xchg
stc
mov
push
mov
dec
or
insl
pop
lret
in
ds
sub
cmpsl
insl
adc
sub
subb
or
or
nop
fsubs
popf
sbb
inc
fistpll
stos
mov
imul
sahf
add
xchg
bound
stc
or
inc
adc
and
mov
or
negl
out
add
mov
lock
popa
aaa
and
mov
lods
push
adc
xchg
cmp
insb
xor
ja
js
push
insl
dec
inc
xchg
push
xorl
mov
xchg
lahf
ds
sub
test
enter
inc
rcll
ds
jl
mov
cmc
or
mov
mov
test
aad
or
fwait
rcrl
popa
fcmovb
vmread
jg
inc
fcom
in
fildl
divb
stos
sbb
hlt
aam
lcall
adc
test
in
mov
inc
cmpsb
xchg
pop
inc
sbb
mov
shr
mov
jo
aad
daa
and
adc
lret
sub
inc
test
push
mov
fbstp
stc
mov
pop
hlt
imul
xor
ficomps
mov
jecxz
jno
pop
pop
adc
rclb
out
scas
mov
cmp
mov
push
mov
add
enter
mov
cmp
int3
pusha
flds
repz
testl
int
pop
inc
fnstcw
das
mov
in
rclb
mov
rorl
mov
push
mov
mov
cpuid
rorb
jmp
and
pop
mov
adc
mov
shlb
mov
scas
mov
cmp
xchg
clc
and
pop
inc
insb
sbb
jbe
repnz
xchg
or
push
or
ds
mov
pop
inc
jne
add
push
pushf
cmpsl
cmp
test
filds
jns
inc
xor
mov
mov
fistpll
inc
mov
jbe
inc
cmp
dec
jo
push
mov
jp
xchg
divb
push
add
xchg
loope
decb
shll
cmp
sbb
mov
sbbl
loop
inc
mov
fucomip
lods
cmc
std
out
pop
repnz
inc
push
adc
mov
call
repz
ss
out
sub
out
inc
aaa
jp
mov
mov
repz
xchg
add
stos
add
push
xchg
xor
ror
pop
call
add
loop
mov
shrl
push
sbb
fcmovnu
cmp
inc
cld
mov
popf
sahf
inc
rcrl
ss
divb
and
das
adc
xchg
inc
rcrb
rolb
push
push
mov
push
rclb
jns
int3
and
lcall
xor
push
sbb
pop
movsl
aaa
jmp
xchg
cmp
xor
ss
ljmp
std
aaa
lods
jns
push
shlb
popf
fstps
fistpl
outsl
sbb
je
roll
cmpsl
out
inc
mov
mov
movsl
cwtl
repz
shlb
daa
jbe
pop
pushf
nop
dec
insb
aaa
push
int3
sbb
or
lock
pusha
push
gs
jmp
adc
stos
add
xchg
das
dec
push
in
cmp
adc
push
jl
aad
jno
sbb
xchg
xlat
fcomi
shl
pop
sub
mov
ret
push
je
push
pop
pop
mov
stos
icebp
xchg
adc
shll
pusha
movsl
jp
ljmp
push
xchg
sub
push
mov
stos
push
cli
mov
mov
inc
push
loope
sub
jb
dec
loopne
shlb
movsb
add
jbe
mov
xor
dec
and
out
mov
rcll
adc
mov
inc
mov
scas
pop
dec
jbe
pushf
add
push
mov
add
int
adc
jmp
std
sbb
out
adc
xlat
icebp
xor
and
dec
leave
lret
adc
das
inc
ljmp
lods
lock
pop
fcmovnbe
nop
int
cmp
cltd
pop
mov
test
lods
push
cmpb
mov
outsb
pop
cltd
call
push
push
push
xchg
adc
xorb
rcll
push
inc
rorb
es
sbb
mov
cmp
mov
mov
cmpsl
stos
pop
clc
js
lcall
mov
popf
lahf
push
mov
dec
mov
mov
mov
or
jne
xchg
xor
rcrl
imul
cld
in
aaa
dec
add
push
and
jle
push
xchg
push
add
stos
cs
pop
clc
cwtl
sub
push
fidivrl
dec
enter
repnz
gs
cmc
aam
jb
ds
inc
sub
add
and
cmp
add
fadds
pop
push
add
push
daa
inc
into
cmpsb
push
pop
loopne
loop
adc
jecxz
stc
sub
jno
rcrl
and
movsl
out
mov
int3
xchg
lret
enter
add
pop
shlb
sti
xchg
cmp
adcl
sub
cmp
adc
xor
mov
jnp
aad
mov
pushf
repz
inc
inc
jmp
daa
or
mov
jmp
mov
mov
or
insl
add
and
ljmp
dec
mov
in
sub
scas
out
mov
or
cld
jmp
out
mov
pop
daa
dec
adcb
in
and
push
push
xchg
xchg
jle
xlat
mov
jmp
inc
lods
or
xchg
pop
push
cs
in
xchg
xor
stc
adc
test
jl
xchg
mov
pop
imul
pop
aas
test
ds
ret
ja
in
xor
jno
daa
js
addr16
shrb
cld
fldenv
xchg
jecxz
lea
rclb
sbb
lea
imul
push
out
hlt
int
out
mov
jbe
sub
ret
inc
mov
test
int
inc
mov
xor
jp
fs
jo
sub
adc
push
jge
add
sahf
mov
fs
fidivrs
nop
rolb
xchg
bound
enter
sbb
push
xorl
repnz
xor
out
cld
ret
push
xor
imul
sbb
push
xorb
jmp
dec
scas
sub
mov
das
cmp
out
bound
idivl
in
mov
sbb
stc
loopne
movsb
adc
out
inc
adc
nop
lret
lcall
push
push
cmp
jbe
mov
adc
int3
mov
xchg
sbb
loope
xor
pop
mov
mov
sbb
enter
bound
pop
pop
mov
das
jno
cli
pop
dec
icebp
repz
cmp
inc
call
ljmp
cmp
dec
cmp
sbb
adc
repnz
xchg
loopne
sbb
push
jg
ficoml
addr16
or
or
xor
dec
add
cmp
fcomp
or
sub
fnstenv
adc
inc
pop
xor
xor
pop
and
cwtl
ljmp
fs
iret
adcl
mov
and
pop
aas
popf
je
fstl
fidivrs
and
daa
call
add
hlt
adc
lret
cmp
jp
xchg
test
and
hlt
shll
jne
add
lcall
in
test
mov
inc
xchg
and
inc
xchg
cmp
cmp
jo
loope
mov
pop
and
xor
fdivl
sti
push
pusha
ds
xchg
je
fstpt
xchg
dec
dec
pop
xchg
aam
rolb
lret
scas
adc
pop
fsubs
push
loop
inc
xchg
push
adc
sub
iret
dec
push
dec
testb
jmp
pop
dec
add
pop
pop
pop
idivb
popa
xor
movsb
inc
loopne
and
jae
sub
jns
mov
mov
shrb
fistpll
in
lahf
ss
call
or
in
jp
repnz
lret
push
orl
adc
sbb
lret
shll
cs
push
out
xor
test
mov
dec
mov
icebp
clc
fistl
popa
int
or
or
adc
int
shll
ljmp
mov
in
es
imulb
int3
frstor
and
dec
adc
lods
cmp
or
dec
rcl
lcall
jno
out
scas
mov
xchg
lds
ret
mov
ljmp
xor
dec
test
js
lret
inc
cmpb
aaa
add
lret
xchg
repnz
js
mov
popa
push
imul
int3
loopne
mov
or
aaa
push
aas
adc
js
mov
pop
pop
adc
aas
mov
in
add
dec
mov
dec
mov
ja
dec
lret
stos
xchg
cwtl
dec
sbb
xor
ds
cld
push
or
xchg
cld
stos
sub
adc
movb
jb
mov
jg
into
nop
sub
daa
fwait
leave
leave
js
push
add
in
sub
pop
mov
sub
ret
xchg
lcall
cmp
cmpsl
cmp
adc
cli
inc
mov
mov
mov
cmpb
in
sub
xor
shrl
push
outsl
xor
cltd
adc
loopne
inc
ret
push
cmp
std
or
fucomi
mov
adc
push
ja
orb
je
xor
sahf
xor
mov
scas
cmp
lret
loop
mov
mov
fs
push
data16
and
add
mov
mov
cmpsb
inc
stos
addr16
ret
or
inc
fcmovnu
xor
pusha
shrb
insl
ss
xor
cmp
mov
mov
jecxz
mov
mov
push
inc
lahf
outsl
push
mov
and
int3
sbb
pop
cwtl
cs
js
lods
call
xor
and
sbb
xor
pop
int3
cmp
pusha
inc
sub
jno
sbb
and
mov
pop
xchg
xchg
xchg
sbb
and
and
rcrb
loop
mov
mov
inc
jl
push
ret
faddl
sbbb
dec
push
imul
movl
jae
mov
sbb
fimuls
ss
xorl
push
pushf
mov
ret
lds
dec
adcb
sub
mov
xor
clc
lret
test
mov
sbb
loop
mov
push
xchg
and
mov
ret
fwait
out
adc
mov
cvtps2pd
pop
jge
dec
cmp
dec
pop
pop
dec
outsl
in
mov
icebp
outsb
popf
adc
test
mov
data16
sbb
enter
sub
fsubrl
icebp
push
xor
lods
sub
popa
imull
jmp
inc
sbb
insb
lea
add
push
jns
mov
mov
lea
cmc
loope
cmpb
sbbb
test
jbe
mov
ja
sub
cmc
mov
add
xor
andb
and
not
cmc
mov
repnz
cwtl
in
divb
mov
aad
jge
dec
cmp
aaa
imul
in
inc
inc
shlb
or
enter
shl
mov
into
ficompl
adc
mov
incb
aad
xchg
ficompl
inc
push
inc
xchg
aam
daa
push
pop
or
xor
adc
gs
fdivrs
les
mov
xor
or
das
push
stos
sbb
or
cmp
xchg
push
and
inc
push
das
loopne
orb
xorb
mov
arpl
push
jns
mov
out
aas
mov
cmc
sub
lahf
rolb
mov
int3
cs
sub
mov
xlat
in
jle
add
mov
daa
xor
mov
and
lcall
cli
repnz
xor
aad
unpckhps
adc
adc
mov
xlat
lret
sahf
xchg
mov
lret
or
jge
sti
jne
aas
sti
ss
insl
sub
dec
mov
push
insb
cmc
cmpsl
repnz
and
aas
inc
pushf
add
inc
cmp
stc
jo
dec
xchg
cli
aaa
sbb
jle
push
mov
sub
cmp
dec
loop
not
mov
fldenv
jl
push
aam
stos
inc
xor
mov
jg
inc
cwtl
sub
cld
pop
ffree
lahf
in
sti
dec
push
scas
xor
mov
cmp
inc
aas
in
cmpsl
dec
dec
popa
xor
add
jle
inc
ss
stc
inc
ja
dec
inc
adc
ljmp
cmp
or
imul
movsb
sbb
lods
and
add
dec
jns
xor
mov
xchg
xchg
pop
fcmovbe
test
mov
cmp
sbb
faddl
jno
push
inc
ret
dec
add
jl
loope
cmove
aas
ljmp
push
repnz
sbb
sbb
aam
add
popa
mov
cmp
pop
test
out
jmp
enter
xchg
dec
mov
cwtl
mov
inc
sbbb
iret
lds
xor
push
inc
add
mov
cmpsl
or
int
dec
pop
jg
dec
ficoms
mov
lcall
dec
movsl
ret
cmpsb
lods
dec
fwait
pop
sbb
mov
repz
pusha
js
inc
popa
cmp
lock
lods
sbb
push
mov
cmpsb
pop
popa
cmp
sbb
jg
insb
movsb
psllq
jns
pushf
jl
arpl
mov
jp
mov
jo
in
aam
mov
stos
sbb
and
out
stos
jnp
dec
movsl
fnstsw
aam
and
dec
xor
xor
movsb
xor
adc
in
cmc
add
cltd
addl
push
test
cltd
sub
ret
test
or
jle
sahf
ja
pop
xchg
add
shll
mov
and
fsubr
je
adc
sub
std
shll
ja
rolb
sub
sti
mov
enter
dec
nop
xor
xor
push
inc
cmpsb
test
call
jmp
sub
add
movsl
and
push
icebp
or
sub
mov
imul
or
xor
jae
popf
push
es
or
loopne
dec
jl
cli
ds
and
pop
rcrb
test
adc
clc
out
stos
dec
es
popfw
insb
das
ljmp
loope
ret
and
push
mov
icebp
push
pop
out
mov
pop
iret
movsl
or
xlat
orl
fbld
adc
ss
jmp
cwtl
adc
add
push
fs
js
mov
cwtl
sub
in
int3
rcrl
inc
test
xor
pop
les
cmpsl
shl
pop
xchg
lcall
aad
mov
jmp
push
stos
mov
mul
jns
add
movsl
jno
lock
lods
pop
fildl
leave
stc
adc
push
push
jmp
stos
rcrb
in
movsl
imul
sbb
and
nop
push
pop
out
dec
mov
pop
cmpsb
jno
sbb
test
iret
std
data16
xchg
push
mov
xchg
mov
fdivrs
dec
cmpb
mov
js
dec
cwtl
test
xchg
das
push
or
jne
lods
jmp
push
repnz
popf
or
jae
xchg
push
dec
mov
movb
xchg
jb
push
inc
push
popa
push
inc
adc
push
mov
fwait
mov
mov
mov
mov
sub
popa
jle
pusha
push
add
stc
inc
ret
jb
inc
adc
imul
dec
adc
scas
pusha
in
and
insl
fimuls
jecxz
incl
test
pop
adc
outsb
jle
es
mov
or
arpl
mov
imul
lret
add
pop
ljmp
push
adc
jae
adc
jb
lahf
lods
mov
cmp
jmp
in
arpl
stc
mov
or
insb
sub
loope
sbb
rclb
mov
addr16
scas
jno
dec
arpl
sub
int
insl
js
repz
xchg
pop
push
gs
sub
cli
push
aaa
in
movsb
and
mov
mov
test
and
sbb
pusha
pushf
and
js
stos
fisttpll
fwait
jge
add
adc
cmp
pop
or
sbb
cmp
outsl
inc
out
xor
inc
xor
fiaddl
scas
icebp
sbb
add
xchg
mov
sarb
dec
mov
xor
pop
negb
xor
icebp
lea
js
inc
es
push
pop
lods
fildll
push
ja
adc
inc
xchg
lcall
mov
inc
in
cmp
add
sbb
or
out
sbb
fstp
xor
into
xor
bound
orl
daa
jb
dec
out
sub
fidivs
add
out
jne
push
mov
or
setle
aas
out
dec
inc
in
xchg
out
jae
pop
test
and
or
pop
testb
insb
dec
mov
jbe
js
hlt
std
roll
sub
jg
hlt
scas
pushf
sbb
sbb
aaa
bound
or
xchg
mov
shll
pop
movsl
insb
call
loop
mov
pop
add
mov
mov
or
mov
xlat
sarb
push
xchg
lock
cmc
les
out
cmpsb
pop
xchg
xchg
ret
jb
enter
cwtl
mov
hlt
inc
jns
sbb
inc
dec
shlb
push
sub
push
out
pop
inc
xchg
xor
dec
and
add
fisttpll
dec
popa
aam
test
rorb
add
inc
or
in
cld
and
mov
outsb
loopne
and
cmp
xlat
pop
stc
lea
jecxz
inc
jp
dec
push
push
movsl
sbb
cmp
js
jmp
cmpl
insb
sub
clc
out
pop
fisttpll
mull
jmp
clc
mov
jns
mov
and
sub
movl
jle
xchg
movsb
pop
test
pushl
pop
sbb
nop
lcall
pop
lret
inc
mov
sub
bound
adc
push
mov
cmpsb
inc
lods
or
push
cli
adc
pop
ja
xlat
jecxz
ljmp
mov
cmp
orb
push
xchg
stos
xor
sub
mov
inc
xchg
sbb
test
sub
mov
sub
mov
add
sbbb
cmpsb
xorl
cmpsl
push
jb
out
sbb
mov
xlat
std
popa
dec
stc
jecxz
sbb
xchg
xor
mov
cld
cmpsl
or
xlat
mov
jb
pop
lods
int3
fdivl
insb
fadds
xchg
adc
mov
push
dec
ja
sbb
sti
fucomp
call
xor
mov
mov
pop
add
or
bndldx
cmc
fildll
es
push
mov
loopne
leave
inc
pushf
mov
mov
mov
adc
inc
and
call
xchg
ficoms
fidivrl
xor
jl
pop
or
mov
stc
icebp
mov
arpl
lods
jns
push
cmpsl
lret
out
test
xchg
sub
add
inc
punpckldq
test
xchg
push
data16
jb
out
ss
cmpsb
cld
scas
lods
leave
lcall
lods
sbb
mov
and
fnstenv
xor
aaa
nop
test
fcomip
lret
outsb
sub
xlat
in
lea
push
push
outsl
mov
dec
jb
enter
inc
adc
xchg
ficompl
mov
cmp
jnp
and
mov
popa
fwait
push
movaps
repz
ljmp
popa
dec
pusha
xchg
mov
or
mov
dec
fildll
pop
mov
subl
xchg
cmp
out
jg
repz
xchg
dec
push
jbe
daa
cmpsl
jno
push
std
adc
cld
mov
sahf
inc
xchg
sub
data16
inc
adc
adc
out
xchg
push
data16
mov
push
fsubl
jecxz
mov
xchg
pop
call
pop
jmp
rorb
cmp
movl
add
mov
fbstp
and
fwait
jg
push
imul
xor
fsubr
mov
sbb
push
push
pop
call
repz
jmp
and
adc
movsl
jnp
cs
out
push
mov
inc
push
sub
jns
loop
mov
mov
test
sub
dec
popa
stos
mov
jle
jnp
flds
push
jp
cmp
out
jae
inc
dec
mov
cli
pop
push
fdivrl
mov
fnstsw
sbb
and
xor
or
stc
or
hlt
mov
mov
push
scas
sub
pop
lods
and
dec
fcmovnu
push
adc
in
xchg
mov
adc
adc
inc
je
jnp
add
rorl
lret
sub
inc
jl
je
xor
sbb
scas
push
movsl
data16
cli
fisttpll
jg
ss
jl
pushf
mov
mov
out
insl
dec
push
push
mov
sarl
popa
loop
cmp
jb
fwait
movsl
cmp
push
ljmp
cltd
les
test
pop
jge
and
inc
sbb
xchg
shll
dec
pop
sahf
shll
push
mov
sbb
jae
les
rcl
xchg
and
cmp
xor
jl
mov
scas
pop
pop
pop
push
mov
or
add
sbb
movsl
sub
mov
mov
xor
mov
jns
stos
mov
or
mov
add
push
pop
dec
mov
push
out
xor
out
mov
test
int
sti
xor
loope
cmpsb
sbb
fsub
sbb
aam
scas
mul
jle
mov
jb
cmp
incl
add
mov
fisubl
in
pop
cltd
jo
out
and
adc
iret
shlb
addr16
scas
sub
pusha
jbe
xor
in
shll
ljmp
xchg
ljmp
lmsw
test
inc
jecxz
jno
xchg
inc
jb
test
shlb
sub
lcall
ss
push
pushf
mov
movsl
push
movsb
stc
and
push
dec
pop
and
test
pushf
xchg
xchg
data16
cs
into
add
aam
xor
ret
cld
sbb
jne
incb
jecxz
stc
xchg
push
in
call
add
push
push
into
int
sub
sbb
shl
cmp
daa
ret
push
in
push
jg
or
shlb
orb
stc
push
stos
dec
es
adc
sub
lahf
fbld
repz
hlt
clc
push
push
dec
xchg
test
cmpsl
cmp
mov
xorb
sbb
jns
scas
outsl
inc
cld
je
loop
mov
add
jne
int3
cwtl
inc
lods
les
and
mov
push
stc
sbb
sub
fstpl
notl
leave
mov
call
sbb
mov
add
inc
notb
cltd
jns
push
mov
mov
arpl
lret
add
in
cmc
push
push
jp
cmpsb
push
enter
xchg
and
mov
jp
xchg
imul
sub
ret
es
pop
and
or
outsl
divl
stc
sub
pop
mov
lahf
xchg
call
mov
fwait
pop
sub
cld
ljmp
lods
pop
cmp
add
fildl
sub
dec
popa
or
dec
imul
out
xchg
mov
test
pop
stc
and
or
mov
cmp
add
jnp
dec
lcall
daa
pushf
rclb
pop
lea
loopne
bound
xchg
idivb
test
jg
arpl
xor
cmp
imul
push
jle
rorb
add
xchg
notl
jge
and
adc
nop
push
test
mov
movsb
cmpsl
dec
sbb
sbb
lcall
push
das
stos
sbb
cmp
adc
fldt
or
call
mov
addr16
mov
bound
cmp
jne
sbb
dec
or
xor
fs
fbstp
xchg
aam
push
mov
scas
mov
out
push
lods
mov
cmp
rcr
into
int
outsl
sub
jae
popf
or
add
xor
stos
or
sub
push
pop
and
in
enter
test
std
push
mov
rolb
xchg
cmp
aad
lcall
xlat
and
pop
adc
dec
jne
rorb
mov
add
jbe
dec
jae
jmp
and
arpl
push
scas
lcall
inc
xchg
in
dec
mov
inc
or
loope
xchg
jne
clc
and
cltd
fcompl
mov
cs
sub
andb
cmc
sub
je
inc
sub
icebp
jp
int
inc
jg
mov
stos
daa
aad
and
lret
dec
or
cwtl
fmuls
push
mov
jns
sbb
ja
xlat
pop
andb
scas
sbb
icebp
and
sarl
cmp
xchg
mov
fsubs
leave
movsb
adc
fstps
sub
scas
xchg
outsb
outsl
push
jp
ljmp
ficomps
inc
push
push
sysret
add
mov
nop
testb
lea
pop
dec
ffree
and
fs
pop
fiaddl
xchg
in
ret
adc
lods
shrl
push
lcall
adc
mov
scas
xor
es
cmp
stos
lods
das
lods
push
cltd
add
jge
xchg
mov
lock
sbb
lcall
and
sub
pushf
dec
in
add
into
rclb
mov
outsl
mov
pop
pop
pop
jge
jmp
pop
ljmp
pop
fcmovbe
icebp
push
mov
sub
jmp
inc
mov
shll
xor
out
sti
xor
mov
andl
vminss
std
sub
sub
xchg
adc
xchg
clc
sbb
incb
lcall
sbb
enter
cmp
jecxz
mov
sbb
enter
and
arpl
adc
cmpsb
push
pop
mov
jb
pop
fucomp
add
frstor
cmp
bound
push
push
cld
insb
fnstcw
cmp
or
adc
mov
shrb
addr16
jmp
push
add
mov
stos
jmp
cmc
insb
in
mov
insl
addr16
lcall
aam
and
pop
sbb
fs
enter
mov
loopne
add
repz
loopne
push
sbb
fstl
cmp
mov
divb
dec
mov
jecxz
mov
push
pop
and
inc
ja
js
lahf
lahf
jp
adc
cs
sti
scas
mov
mov
add
adc
or
inc
and
stc
shl
sbb
fsts
fmull
hlt
cmp
xor
mov
or
push
jbe
mov
pop
sahf
arpl
mov
pop
xchg
push
daa
push
dec
lcall
les
or
in
addr16
push
nop
mov
and
cmp
adc
daa
bound
add
push
push
scas
push
inc
gs
mov
sbb
lods
test
cmp
pusha
lock
insb
cld
incl
in
xchg
int
lods
push
cmp
inc
lods
pop
xor
xchg
cld
adc
std
xor
mov
jle
mull
cltd
das
rcr
add
mov
mov
cmp
stc
mov
decl
jmp
call
sub
push
cltd
jno
ljmp
mov
stos
pop
pop
imulb
xor
push
lret
or
and
or
xor
dec
sub
subl
pop
push
sti
or
lea
push
mulps
dec
cmp
push
pop
call
ss
xchg
pop
xchg
xchg
adc
pop
pop
jns
pop
out
adc
xchg
ret
pop
inc
sbb
cmp
and
push
stos
daa
and
mov
push
add
lret
pop
xchg
jne
ss
aam
and
mov
dec
fstpl
inc
gs
push
mov
and
jp
movsb
fs
loop
cmpsl
inc
jmp
popf
pop
je
sbb
subl
lods
js
lods
sub
sbb
xor
fadds
sti
je
int
sti
icebp
cmpsb
xor
stos
addr16
mov
sbb
mov
pushf
jae
movsb
movsl
lods
fs
loopne
shlb
pop
and
cmp
mov
sbb
enter
pop
fxam
in
loopne
mov
rorb
cli
stc
subl
push
rolb
adc
imul
add
popl
fsubrs
inc
dec
fistpl
adc
pop
ret
hlt
adc
and
cmp
loop
fstps
inc
pop
cmp
ljmp
jne
mov
rcrl
hlt
xorl
cmp
xchg
xchg
popa
cmp
mov
xchg
sbb
push
shrl
dec
mov
cli
loope
ret
aaa
idivb
xorl
adc
and
adc
mov
into
push
and
sub
push
xor
jecxz
cmc
push
shll
mov
sbb
aam
fisttpll
mov
mov
in
xor
ficoml
sub
mov
cmp
mov
or
jnp
out
pop
in
pop
and
cmp
std
lcall
into
repz
cmp
bound
xor
and
fiadds
rorb
imul
xchg
jge
pushf
mov
mov
sahf
outsb
jle
ret
push
jae
stos
or
adc
mov
jmp
mov
xchg
add
daa
fidivrs
xor
cmp
dec
inc
es
mov
gs
stos
xor
int
mov
jp
jnp
stos
push
pop
mov
xchg
xchg
mov
inc
push
cmp
add
mov
mov
scas
push
addl
jns
jmp
cmp
pop
jmp
out
lods
sub
in
jge
sub
cli
cli
andl
outsl
mov
fisttps
jmp
add
or
int
inc
jmp
cmp
xlat
lods
lcall
adc
or
rorl
pushf
subl
repnz
loopne
sub
and
popf
dec
nop
std
and
xor
inc
fwait
inc
popf
adcb
leave
arpl
sub
add
shr
lret
data16
xor
lret
test
push
repz
mov
cmp
xor
jno
and
int
test
test
das
cs
mov
jg
or
popf
lods
jns
inc
rcr
sti
scas
mov
fistpl
fildll
jg
insl
jp
xchg
enter
add
test
mov
add
pop
ret
sub
sbb
add
xchg
data16
xchg
pop
sub
shrb
push
enter
jmp
sbb
push
mov
cmp
nop
je
lret
addl
popa
sahf
and
add
ja
dec
pop
in
mov
xchg
ret
es
call
sub
mov
xchg
add
or
std
mov
push
xchg
fcmovnu
insl
les
loopne
je
popa
mov
pop
stos
jle
cmp
mov
push
lcall
es
pop
out
insb
lea
cli
stc
pop
std
push
add
lcall
xchg
xor
call
shl
cmp
pop
jl
sbb
lcall
lods
inc
jb
ror
cli
leave
iret
jne
shl
into
add
jle
lcall
mov
cmp
notb
flds
add
shrl
jmp
mov
xor
mov
adc
insl
jmp
mov
icebp
xor
adc
and
jae
in
or
cld
outsl
test
ret
mov
xlat
jp
xorl
ds
call
push
pop
lods
pop
scas
mov
iret
jecxz
js
xchg
jge
je
into
icebp
into
mov
add
pop
xor
jp
add
sbb
jne
cmpsl
not
sahf
xchg
mov
push
xor
cmpsb
push
add
push
rorl
lcall
sbbl
push
pop
dec
loope
pop
fabs
out
jno
xchg
dec
jmp
in
fsubrl
data16
inc
xchg
out
mov
inc
xchg
cmc
arpl
mov
cmp
call
mov
cmp
xchg
pop
add
loop
pop
sbb
jno
xchg
and
js
mulb
mov
mov
enter
adc
xor
mov
popa
xchg
mov
or
and
iret
pop
ja
mov
and
add
je
push
hlt
mov
cmp
and
inc
rol
dec
in
mov
cmp
daa
aam
icebp
mov
jo
orl
icebp
ror
imulb
rcrb
cmpl
cmp
push
call
imul
sbb
call
add
loop
pushf
rcll
inc
adc
push
xor
repnz
incl
xchg
xchg
sti
fnstcw
and
pop
jp
mov
mov
or
movsl
push
mov
push
adc
inc
fidivrs
pop
sub
sti
fdivrp
lods
sahf
and
ja
jno
ss
mov
rorb
sub
in
adcl
je
xor
push
push
adc
fmuls
add
je
mov
push
dec
js
sbbl
fdivl
stc
push
fs
sbb
pushf
jb
inc
fisubl
sub
sbb
cmp
push
cmp
or
ja
pushl
sbb
adc
adc
pop
push
jo
rorb
rorb
pushf
aad
push
cld
mov
imul
dec
dec
and
icebp
pop
jg
sub
aam
mulb
cli
pop
rcr
dec
enter
fcompl
adc
mov
mov
mov
cwtl
in
pop
sahf
out
mov
leave
push
mov
sbb
clc
mov
jbe
pop
lahf
cltd
jl
sub
xchg
gs
shl
adc
inc
out
cmp
mov
rorl
inc
cmpl
dec
lcall
push
lock
mov
lds
icebp
push
cld
mov
jg
xor
pop
int
adc
inc
and
inc
mov
dec
inc
imul
cltd
outsb
pop
pop
push
xchg
jecxz
inc
sbb
cwtl
push
cltd
insb
out
cmp
outsb
rcrb
pusha
sbbl
adc
mov
dec
push
inc
mov
test
lock
lcall
mov
xchg
or
mov
mov
and
sbb
add
add
push
xor
dec
jbe
and
pop
inc
push
push
or
scas
scas
loop
and
sbbb
xchg
pop
inc
addl
gs
xchg
mov
sbb
adc
and
or
mov
cltd
sub
adc
idivb
cmp
push
or
sbb
orb
lds
cld
push
mov
mov
mov
add
fistps
push
bnd
adc
lods
dec
cmp
test
mov
fisubl
mov
ja
ss
cmp
aam
sub
es
sti
shl
lods
test
jl
lcall
adc
jae
dec
imul
fcmove
inc
stos
pop
jne
ret
mov
inc
lock
movsl
inc
xchg
pop
loopne
scas
and
or
mov
pop
out
pushf
jp
aam
pusha
jge
push
inc
pop
cld
dec
add
ss
fwait
push
icebp
arpl
push
sbb
ljmp
or
data16
inc
mov
cli
stos
add
inc
xchg
push
jae
jmp
mov
xor
mov
mov
mov
mov
movsl
addr16
clc
sbb
hlt
shrb
loope
jae
adc
xor
rcl
jne
bnd
icebp
mov
lahf
mov
out
sar
call
inc
fnstenv
xor
add
pusha
lahf
inc
cmc
jns
cmp
xchg
outsb
jmp
lea
push
js
xchg
inc
mov
cmp
push
sbb
gs
test
in
scas
in
jbe
loop
push
andl
sub
add
inc
sbb
cmp
mov
add
pop
mov
and
sbb
imul
dec
pop
pop
jo
sbb
fabs
das
lcall
add
mov
lcall
cld
lods
imul
cmp
jne
inc
jle
psllq
je
sbb
add
mov
adc
into
sbb
in
aad
push
sub
test
xchg
fnsave
xor
psubsw
std
pop
mov
out
mov
test
push
pop
js
lret
pop
leave
mov
mov
xor
add
pop
adc
and
push
aam
push
or
sub
sbb
pop
add
cwtl
jg
out
ret
xor
cwtl
mov
cli
inc
pop
jmp
pop
loope
cwtl
inc
lcall
mov
jle
jmp
cmp
arpl
push
mov
ficoms
ret
jecxz
jae
pop
push
xchg
jb
inc
push
lods
and
into
lcall
cmp
mov
and
jmp
das
pop
mov
scas
sbb
jne
fs
adcb
std
cli
pop
add
sbb
cmpsb
add
and
pop
addb
testl
jg
gs
gs
sbb
inc
adc
stos
ret
sbb
xlat
int3
sbb
iret
push
js
outsb
aam
enter
inc
pop
outsl
push
push
sti
push
outsl
fistl
ret
xorb
dec
out
or
lods
shlb
push
js
ret
in
fisubrs
mov
addr16
test
pop
sbb
mov
aam
popf
push
adc
lret
aam
pop
shlb
xchg
stos
adc
shr
xchg
aam
rorb
fstps
inc
sub
mov
mov
fwait
pop
lock
inc
int
pop
dec
imul
jnp
mov
jbe
call
jo
adc
jecxz
insl
mov
add
sahf
lods
inc
and
xchg
outsl
mov
cmpb
and
mov
jmp
lods
add
push
shll
pusha
outsl
add
fsubrl
test
subb
mov
and
jbe
pop
pushf
sub
lods
dec
fidivrl
stos
in
adc
pop
addr16
imul
xchg
sbb
add
cmp
sbb
popa
mov
push
and
sub
xlat
push
arpl
cmp
push
or
aad
in
dec
dec
and
arpl
das
pop
dec
mov
push
push
ljmp
pop
lahf
pop
dec
fwait
cmp
scas
dec
clc
pop
mov
jge
js
push
xchg
lods
stos
je
xchg
fistpl
insb
sub
stos
fistpl
popa
or
adc
sub
scas
stos
inc
dec
sbb
hlt
mov
jne
loopne
cli
jg
mov
test
inc
test
xchg
movsl
iret
sub
cmc
xor
mov
test
xor
out
mov
add
mov
js
ficoms
jecxz
and
loopne
xor
int3
jmp
cmp
jae
mov
ret
xchg
inc
fmul
movsb
sbb
add
aad
outsw
xor
mov
js
mov
pusha
stos
sbb
adc
scas
lods
repnz
push
inc
mov
xor
pop
in
pop
test
push
out
mov
pusha
fmuls
fldcw
in
pop
sbb
or
xor
pop
dec
mov
out
outsl
imul
inc
and
inc
cltd
test
sbb
inc
inc
jge
xchg
xor
cmp
repz
inc
sub
and
je
les
mov
leave
xchg
sbb
in
and
jne
sbb
jge
inc
pusha
cs
push
push
bound
mov
add
cli
movsb
imul
lret
shlb
mov
ljmp
xlat
inc
nop
ficomps
sbb
xor
push
lcall
pop
inc
sti
les
rcrl
mov
and
sub
aas
cs
mov
lret
lods
ret
shlb
movsl
cld
jge
xchg
mov
jb
aad
repnz
out
imul
lods
clc
gs
jbe
push
stc
lahf
mov
shl
push
pop
out
fninit
jg
cld
negb
iret
mov
in
lcall
push
fcmovnb
ja
test
ficompl
push
jle
popf
test
and
mov
stos
sbb
add
push
shll
adc
mov
xchg
dec
iret
in
in
jecxz
add
cmpsb
add
lods
mov
int3
xchg
int
and
xor
and
mov
notb
addl
inc
cld
sbb
adc
pop
dec
loop
mov
daa
mov
call
fs
xchg
daa
loopne
loopne
stos
push
call
iret
push
jle
mov
repnz
dec
in
cmpl
std
repz
or
or
xor
pop
sub
popf
mov
pop
jns
pop
je
int3
fistl
or
sbb
and
je
push
mov
enter
dec
les
pop
add
sbb
sbb
bound
jno
and
jnp
ljmp
and
aas
pop
cs
iret
push
scas
aas
and
mov
or
jmp
adc
mov
dec
and
rolb
outsl
push
popf
stc
out
rorl
xchg
or
fbstp
adc
int
test
lods
mov
push
fdivrl
or
test
jp
lret
nop
dec
or
pop
imul
dec
ret
or
mov
adc
pop
stos
popa
and
adc
jecxz
fwait
cmp
jmp
lods
std
adc
inc
lods
shll
push
push
mov
xchg
lret
cli
mov
mov
cld
loop
adc
stc
fs
decl
icebp
movsl
stos
pusha
sahf
subl
mov
loope
ret
pusha
aam
jge
mov
push
jno
lods
stos
cmp
pop
push
roll
inc
in
test
or
movsl
in
das
adc
jb
iret
push
jno
sub
cmp
xor
iret
adc
push
pop
fucomi
and
pop
sbb
and
push
pop
mov
popf
ret
pop
xchg
jns
mov
push
insb
lods
test
push
int3
push
orl
es
negb
aad
mov
das
push
jmp
xchg
mov
ja
mov
insb
repz
pop
mov
xchg
mov
xlat
pop
cmp
mov
push
mov
aad
arpl
jno
and
aas
rcrb
sbb
push
test
pop
js
or
inc
adc
mov
pop
mov
jb
dec
mul
cwtl
or
test
fnstsw
push
xchg
sub
decb
or
shl
outsb
dec
pop
daa
fildl
cmpsb
xlat
mov
andl
sti
push
pop
push
cmpsb
mov
out
cld
clc
outsb
lret
mov
push
adc
pop
push
sub
popa
popf
jne
mov
and
inc
mov
sbb
push
mov
icebp
xchg
bound
shlb
sqrtps
cmp
test
ret
inc
icebp
pop
addr16
ljmp
insb
pop
cmpsl
lods
xor
inc
xor
xchg
push
mov
jle
mov
or
cmp
call
hlt
lock
sbb
adc
sbb
aad
and
cmpsl
mov
push
mov
push
jns
test
movsb
scas
xor
int
cs
leave
mov
fadd
adc
ffreep
sbb
pop
in
sti
lret
rcll
sbb
ja
push
aaa
imul
or
aad
xchg
add
xor
sbb
and
iret
mov
stos
or
imul
jle
inc
xlat
cltd
push
dec
mov
fwait
jl
dec
incb
jnp
jno
pop
or
sti
push
in
loope
push
jns
cmp
test
movsl
xlat
add
testb
lea
add
jne
inc
push
loop
clc
imul
mov
fwait
push
ljmp
pop
enter
sbb
mov
and
ffree
mov
lds
or
dec
jmp
push
jge
mov
pop
inc
jns
rclb
arpl
xor
cmp
cmp
lahf
nop
push
push
test
sub
pop
pop
rorb
popa
xor
or
push
in
or
daa
divb
inc
pusha
pop
mov
sbb
pop
cmp
pop
mov
jno
jo
imul
loop
jg
mov
fsubrl
pop
enter
inc
ja
xor
push
pop
test
add
stos
outsl
icebp
lock
es
or
cmpb
adc
mov
stos
ss
mov
xchg
je
in
cmp
mov
scas
push
sub
and
inc
pushf
rcrb
pop
repz
jae
sbb
inc
test
ljmp
add
sub
popa
dec
mov
in
enter
dec
adc
add
sbb
pop
imul
gs
and
xor
xor
arpl
jo
mov
fincstp
into
bound
adc
push
and
add
push
repz
xlat
jb
push
stos
sbb
sbb
loop
insb
add
ljmp
or
sbb
sbb
add
ds
ret
std
lods
aad
jg
sbb
push
jo
mov
pop
jne
repnz
dec
orl
dec
push
int
mov
ljmp
ss
cmpsl
jmp
and
imull
pop
adc
out
pusha
call
jmp
out
popf
or
dec
cmp
xor
call
xor
xchg
mov
jo
push
out
jb
adcb
fiaddl
jno
in
cmpsl
xlat
and
pop
mov
ret
lods
mov
add
in
sahf
sub
inc
add
cmp
mov
faddl
jge
jge
xchg
pop
mov
adc
nop
push
jle
fnstcw
arpl
xchg
jno
pop
adc
mov
ds
mov
stos
mov
out
cltd
in
mov
inc
mov
scas
nop
or
push
jl
xchg
inc
xchg
lds
xor
inc
jb
sbb
mov
xlat
mov
in
jl
cltd
mov
call
sti
mov
mov
fwait
xor
adc
jnp
xor
jno
repz
lock
ljmp
andb
fsubs
add
push
sub
jae
xchg
xchg
fsubl
sub
notl
mov
mov
mov
bound
insl
xchg
adcl
xchg
call
test
push
lods
and
push
jb
pop
xchg
jge
sub
rorb
mov
mov
fxtract
add
fildl
cmpsb
fxtract
push
adc
out
adc
leave
dec
mov
inc
jne
jmp
loopne
sbb
xchg
cmp
lds
pop
loopne
sbbl
lahf
pop
sbb
add
in
cld
mov
mov
ficoms
push
popf
test
jb
rcll
sahf
adc
icebp
pop
scas
dec
daa
pop
fwait
mov
mov
adc
shrl
gs
loope
psubd
pop
cmp
jle
xchg
or
dec
gs
andl
jb
mov
cmc
xor
sbb
inc
and
inc
push
ret
rcrl
lods
adc
xor
cmpsl
push
xor
inc
pop
test
imul
dec
leave
scas
ret
jecxz
in
inc
mov
dec
fcoms
mov
pop
std
aam
sub
or
scas
dec
xor
ja
sbb
popa
shll
push
bound
mov
pop
test
adc
xlat
lods
adc
shrb
adc
in
xchg
notl
fsubl
jmp
or
pop
or
je
nop
mov
stos
mov
adc
xchg
mov
mov
in
adc
add
cli
jne
mulb
mov
pop
mov
insl
mov
jl
push
push
pop
push
mov
daa
icebp
sub
sbb
cmp
lods
dec
xor
adc
stc
jmp
xchg
test
loopne
call
sti
xchg
movsb
adc
cmp
pop
movsl
int
cs
xchg
or
pop
cmpsl
stc
jmp
int
sub
adc
ljmp
int3
or
mov
mov
repz
mov
leave
cmp
negl
fsubrl
jns
subb
test
jmp
shr
lock
je
in
test
out
cmp
insl
sbbl
cld
jnp
cs
push
aam
clc
lret
xchg
mov
call
testl
push
out
jne
jb
xchg
mov
icebp
shlb
imul
stos
pop
jae
fildl
mov
cltd
mov
jp
mov
ljmp
inc
cmp
mov
orl
xor
or
mov
hlt
jb
sub
jl
mov
lea
aas
push
pusha
push
outsl
ds
rolb
xor
pop
jl
movsl
sub
adc
dec
dec
lret
cld
sarb
add
repz
jp
inc
out
jle
mov
pop
or
or
mov
sub
xchg
out
pop
inc
jp
jecxz
aad
arpl
and
int
mov
lods
sub
jae
dec
xchg
and
stos
mov
es
in
loopne
and
loop
loope
xorb
lds
fs
sub
filds
movsl
nop
les
aad
iret
outsl
add
stos
pop
sbb
inc
fwait
sbb
dec
fcomi
and
xchg
pop
adc
xorl
aam
mov
jge
sbb
mov
sub
leave
movsb
daa
mov
xor
pusha
sub
aas
jb
ljmp
das
in
push
add
out
jmp
dec
test
and
cs
lods
in
and
jns
pop
es
xchg
jo
push
shlb
cli
dec
notb
test
push
inc
divb
mov
xchg
jmp
into
xchg
mov
js
push
inc
insb
jg
push
mov
out
ds
xor
cmpsl
dec
pop
scas
sub
mov
cmp
mov
jmp
jae
lds
xchg
addl
ret
cli
sbb
push
jmp
mov
mov
rclb
mov
or
mov
inc
mov
xor
pushf
mov
mov
xor
cmp
adc
dec
into
and
sbb
loopne
addr16
pop
ljmp
push
rcll
sbb
mov
outsb
nop
dec
jno
inc
or
pop
fmuls
inc
lret
popa
push
jb
sbb
dec
movsl
add
in
test
movsl
jecxz
pop
aas
pop
ljmp
add
addr16
mov
mov
imul
scas
sbb
mov
ja
pop
sub
outsb
inc
imul
pop
pop
mov
loop
mov
inc
pop
fnstsw
ret
je
in
les
sub
test
push
cmpsb
rolb
adc
xchg
inc
adcl
nop
jg
jnp
les
cmc
sti
pop
jl
sbb
dec
push
popa
lds
stc
lock
xchg
divl
lods
rcrb
sbb
push
or
dec
pop
mov
mov
arpl
fwait
test
inc
or
sbbl
jge
ret
repz
inc
dec
enter
aam
imul
xlat
push
adc
mov
lds
adc
iret
mov
and
mov
notl
bound
ss
and
mov
int
mov
dec
mov
pop
add
std
lea
fldt
clc
or
dec
adc
insb
mov
sub
sbb
xchg
mov
cmp
sbb
and
mov
testb
sub
in
sbb
ret
daa
rorl
lea
pop
shrl
pop
jnp
cmpsb
inc
mov
add
scas
aaa
stos
shr
mov
ffreep
lods
jecxz
mov
xor
mov
inc
sbb
xchg
jns
mov
jp
outsl
scas
test
jl
xlat
cmovne
dec
popf
or
mov
adc
add
jb
loopne
out
pop
jae
pusha
ret
dec
jo
push
inc
mov
aad
push
inc
jns
add
mov
popf
fstpl
fcomip
mov
pop
fxtract
scas
std
loopne
and
mov
sbb
lahf
fistpl
inc
mov
sbb
jno
add
mov
mov
popa
ss
incl
lds
pop
cmp
xor
inc
loopne
mov
pop
inc
faddl
inc
cmp
idiv
dec
push
fdivs
insb
aam
fwait
test
mov
lcall
push
es
in
xor
pop
xor
jne
adc
das
add
fs
mov
jnp
mov
xor
aad
nop
mov
loopne
pop
inc
pop
or
fcomps
adc
cmp
dec
loop
push
sbb
mov
push
fwait
push
jne
fbld
or
stos
inc
sub
mov
pop
adc
jge
and
or
pop
jl
push
lahf
mov
fisttps
imul
dec
mov
scas
gs
loope
std
mov
xchg
adc
xor
sub
sub
push
addr16
cwtl
out
jp
mov
add
pop
ffreep
bound
in
loopne
imul
stc
inc
and
or
push
in
cmp
outsl
loope
insb
cmp
or
mov
xchg
bound
sbb
xchg
push
sahf
or
jbe
lods
lds
xor
xchg
inc
push
in
xor
adc
cmc
add
xchg
or
imul
incb
pop
stos
daa
adc
or
inc
push
lock
ret
mov
mov
lock
aad
sub
jle
and
hlt
bound
iret
int
data16
imul
into
xchg
push
stc
and
jbe
xchg
or
pop
fwait
lea
push
pop
test
xchg
cmp
cmpsl
pop
dec
pop
loop
dec
mov
mov
xor
push
aas
fnstsw
sub
fwait
daa
movnti
pop
cmpsl
incb
fisttps
mov
cld
insb
into
idivl
adc
sub
out
jge
enter
adc
sbb
shll
push
pop
out
jae
sub
add
inc
jno
add
call
gs
adc
inc
in
cmp
push
std
inc
shrb
pop
fisubs
data16
and
imul
jbe
xchg
xor
repz
loop
imul
push
dec
xchg
sub
ret
adc
sub
adc
dec
in
xchg
cltd
inc
popf
pop
xor
dec
xchg
jo
lock
cld
or
push
popf
insb
in
data16
out
mov
fcomi
xor
je
pop
jmp
popf
stc
pop
and
shrb
inc
jle
insb
jno
xchg
sbb
add
pop
jle
xchg
fimuls
scas
pop
stc
pop
incb
gs
neg
xchg
outsl
adcl
ljmp
xchg
ret
add
shrl
xchg
in
adc
cmp
mov
test
sbb
mov
sbb
les
push
dec
mov
sbb
int3
jmp
inc
inc
jg
fs
ret
mov
stc
xlat
xchg
cmp
mov
cwtl
xchg
push
in
mov
push
sti
imul
mull
mov
loopne
inc
push
ret
push
fdiv
sub
mov
adc
lods
test
or
adc
cli
or
add
inc
fdiv
add
jns
sbb
orl
out
movsb
push
rcrl
and
mov
xchg
fdivrs
std
or
lcall
push
std
pusha
inc
in
lods
jo
add
add
push
lahf
push
les
stc
addr16
jle
cmp
push
ret
pop
inc
ret
push
push
cltd
in
push
bound
addb
pop
cs
or
outsl
pushf
mov
or
in
mov
aad
push
arpl
jo
imul
shlb
mov
aam
xor
xchg
cwtl
shrl
or
mov
test
sbb
aas
sbb
fildll
pop
dec
clc
lret
icebp
mov
pop
out
scas
pop
mov
add
and
adc
dec
mov
cmpsb
mov
fwait
icebp
loopne
cli
dec
lret
in
push
sub
in
dec
fisubrs
mov
aas
xchg
rcrl
les
testb
mov
add
loop
cmpsb
shrb
xchg
push
movsl
lock
aas
loop
test
fwait
jno
xchg
cmpsl
loopne
cwtl
repnz
fsubrs
or
dec
lock
sti
inc
scas
testl
fwait
and
sbb
push
or
insb
inc
xor
lods
inc
int3
rcll
insl
push
fwait
aad
aas
das
sti
jecxz
mulb
mov
add
les
xcrypt-ecb
cmpsl
push
mov
lahf
mov
jl
pop
jmp
jnp
scas
in
movsb
cmpl
imulb
sbb
mov
std
add
add
ss
sub
push
arpl
add
push
inc
or
idivl
mov
ljmp
jge
loope
or
scas
push
lcall
lcall
or
rorb
lock
leave
add
lret
pop
mov
sahf
out
xor
adc
inc
fisttps
pop
lret
insb
ret
imul
fnstenv
mov
and
dec
xchg
pushl
or
xchg
push
or
mov
fwait
icebp
aam
scas
cmpsl
cmp
mov
stos
loope
inc
leave
cmp
cwtl
mov
xchg
pop
sbb
or
dec
stc
push
pusha
and
mov
mov
int3
dec
sbb
test
jge
imul
push
jmp
mov
insl
mov
xchg
jmp
imul
adc
fs
dec
pushf
stos
aaa
shlb
or
sub
test
pop
push
sbb
pop
xchg
lcall
fisttps
movsb
lret
into
pop
inc
xor
xlat
rcrb
mov
cmpl
push
mov
fiadds
das
out
push
add
jne
mov
clc
lahf
pop
cmp
jbe
or
jne
push
ss
pop
adcl
popa
arpl
inc
push
cmpsb
and
and
jle
inc
scas
pop
add
cmc
andb
test
scas
pusha
xchg
xor
mov
mov
push
lret
or
push
test
pop
fldenv
jns
sub
push
fstpt
adc
stc
pop
push
inc
lods
mov
ljmp
or
nop
fisubl
arpl
rclb
mov
cmp
xchg
mov
call
int
xchg
lds
mov
sub
shlb
adc
mov
loop
outsb
out
sbb
mov
rcl
pop
sbb
dec
mov
ret
sub
ljmp
push
lock
adc
push
mov
cwtl
push
and
cmc
pop
jl
aam
jns,pn
shr
fxch
dec
lcall
daa
in
dec
inc
clc
mov
fnstsw
pusha
push
sarb
aaa
ja
outsb
cld
cmp
pop
into
test
testb
push
and
insl
imul
jo
and
aad
and
out
xchg
sbb
mov
sbb
mov
in
imul
out
mov
aam
imul
mov
push
add
icebp
sbb
sub
lcall
cmp
fildl
sub
push
adc
ljmp
rcr
movsb
add
add
es
or
popl
lea
or
jp
pop
stos
mov
adc
dec
scas
mov
js
enter
dec
pop
cmc
frstor
jle
int
bound
aad
fmulp
lret
sub
sbb
add
test
movsl
nop
push
and
mov
lds
mov
lock
repnz
rorl
stos
outsb
shrl
mov
or
insl
jge
popa
lea
insb
std
sbb
fildl
stos
inc
pop
bound
pop
test
push
mov
out
dec
push
mov
pop
lods
adcb
or
adc
mov
sub
dec
add
mov
leave
outsb
insb
jnp
pop
cmc
cmp
movsl
cld
dec
daa
sub
jmp
sbb
mov
jnp
cmp
mov
cwtl
stos
adc
push
insb
test
mov
and
std
sbb
subb
dec
inc
mov
cs
pop
divl
pop
fadd
jns
mov
inc
jnp
ficoms
pop
test
minps
push
xchg
inc
mov
push
stos
jg,pt
add
idivl
dec
adc
jo
int
dec
in
loopne
mov
in
xchg
call
scas
add
fcomp
in
iret
ret
rep
ret
fcmovnbe
add
movsb
ret
pop
xor
mov
insl
jnp
jbe
les
sbb
sub
xor
xchg
in
or
loope
push
roll
jno
mov
fldl
aas
dec
push
mov
mov
push
out
je
nop
sbb
sbb
pop
lret
xor
iret
sbb
pusha
rcll
aad
mov
repz
mov
fisttpll
mov
mov
mov
cltd
out
in
jmp
mov
sbb
xchg
sub
lods
jecxz
cmpsl
cmpb
jae,pn
mov
sti
sub
sbb
ret
xor
mov
cmp
inc
movl
movsl
mov
movsl
loope
sarb
push
lods
pop
adc
in
rcll
mov
sub
sub
aas
sub
daa
sbb
data16
loope
xlat
call
ljmp
cmpsb
out
add
loopne
inc
repnz
hlt
adc
enter
push
pop
inc
cltd
push
push
sub
or
fiaddl
scas
jg
out
xchg
fcoml
in
inc
mov
xor
test
cmpsl
out
es
outsw
int
loopne
imull
adc
mov
repz
push
xor
cmp
push
cs
mov
mov
ja
popf
enter
jp
mov
adc
inc
pop
xor
cmp
pushf
iret
scas
imul
and
jp
into
lcall
scas
inc
movsl
mov
jmp
dec
and
cmp
movsb
stos
mov
mov
lcall
pop
dec
xlat
jae
leave
repz
push
ja
stc
stos
mov
testl
daa
ror
add
ss
fwait
inc
jl
dec
push
and
iret
cmp
mov
pshufw
je
jmp
mov
dec
mov
xchg
or
repnz
push
call
data16
sbb
pop
loop
mov
arpl
mov
cmp
shrl
jo
push
and
ret
subb
cmp
repz
pop
jge
jo
loop
popa
sti
leave
mov
icebp
and
cmp
out
add
mov
jb
adc
aas
push
pop
enter
aam
sbb
xor
sub
xchg
add
cli
jae
pop
cmpsb
insb
push
sbb
fs
pop
sub
js
sbb
cmp
xchg
and
cmp
jp
hlt
lret
movsl
dec
inc
int
mov
xchg
addb
or
into
adc
mov
shll
adc
cmp
add
cmpb
nop
out
stos
jns
push
shrb
cmp
xchg
lcall
fsts
stc
dec
xchg
repnz
sbb
push
mov
jmp
xchg
das
mov
xor
in
mov
push
leave
dec
and
cmp
mov
dec
pop
movsb
enter
stc
lods
jbe
movsb
lcall
lret
and
loop
pop
xchg
jmp
testl
pop
push
loope
aaa
or
push
sub
fdivrp
xor
pop
adc
nop
mov
bound
mov
jnp
or
test
ds
add
pushf
or
pop
cmc
adc
cmp
xchg
jae
jmp
push
mov
xor
imul
out
and
add
xor
decl
push
sub
cmp
inc
fiadds
bnd
jbe
xchg
xor
lcall
sti
pop
dec
mov
and
call
xchg
push
and
daa
addr16
inc
out
iret
clc
rcrl
inc
cli
test
pop
and
mov
movsb
mov
rcrl
scas
mov
sbb
mov
push
popl
fcoms
xor
shll
inc
les
mov
push
das
mov
and
cmc
jecxz
jo
sbb
stc
idivl
std
into
je
cvtps2pd
icebp
call
push
ds
cwtl
jge
ja
add
mov
daa
inc
dec
fidivrl
aaa
xor
push
stos
mov
sub
fisubs
scas
jp
mov
inc
mov
cmp
dec
or
ficompl
sbb
push
dec
sbb
dec
test
and
cmp
test
sub
int3
push
gs
xor
xor
cmpsb
cmp
sahf
shll
pop
or
mov
inc
shll
mov
or
ja
dec
daa
inc
cmc
mov
push
push
xchg
pop
xor
dec
pushf
ror
sbb
mov
fimuls
hlt
push
cmp
mov
scas
sbb
cwtl
aas
adcl
jl
out
into
adc
shlb
ds
pop
add
outsl
daa
sbb
cltd
popf
cmp
scas
and
adc
push
outsb
pop
lods
mov
push
shll
mov
popa
out
cmp
int
push
fldl
jb
test
mov
and
dec
jno
sub
orl
adc
push
pushf
push
repz
arpl
cmp
mov
movsl
mov
xlat
and
lcall
sub
mov
lahf
mov
insb
xor
loop
dec
jp
sti
cmpsl
pop
mov
jge
stos
clc
imul
into
cmpb
adc
loope
pop
imul
push
xor
sbbl
mov
inc
adc
sub
andl
ds
mov
das
adc
jns
pusha
xor
lret
rcr
adc
shlb
scas
or
adc
push
lds
ret
lcall
test
int3
push
mov
sarl
dec
xchg
shr
mov
es
xlat
push
and
jl
sbb
cmp
and
xor
pop
dec
pusha
mov
jp
stos
je
dec
add
mov
jecxz
or
mov
add
arpl
push
in
lods
mov
or
or
pop
lcall
mov
jl
call
add
add
adc
xchg
sbb
inc
cmpsl
mov
sub
push
sub
call
cmp
xlat
xchg
adc
push
or
inc
dec
pop
dec
loopne
aam
pop
repz
inc
stc
mov
aam
pop
hlt
lahf
dec
pop
imul
stos
adcb
test
jb
sub
fsubrs
cld
fcos
xor
unpcklps
insl
fstps
imul
imull
push
sbb
outsb
leave
xchg
inc
cmp
cmpsb
inc
dec
pop
movsb
mov
mov
mov
call
sti
sub
imul
inc
push
sbb
call
mov
js
cmp
inc
cld
lcall
jl
jecxz
push
mov
xchg
unpckhps
mov
mov
cmc
int3
xchg
push
sbb
inc
dec
sub
aas
ljmp
in
add
addr16
push
insl
pushf
into
sbb
dec
mov
fcoml
pop
mov
mov
push
xlat
aaa
stos
mov
jmp
xchg
sub
sbb
int3
dec
dec
mov
cmp
add
into
xchg
fs
scas
lods
hlt
loop
mov
pop
insb
call
fidivs
push
xor
repnz
xchg
jb
faddp
mov
cmpsl
fdivl
ret
push
jge
xchg
sbb
dec
stos
lds
add
push
jmp
cmp
outsb
fs
inc
sbb
repz
aad
es
sub
fs
scas
shrl
sub
fs
xchg
lock
adc
adc
loope
fwait
cmp
dec
cld
inc
movsl
movsb
jo
inc
ret
test
jp
cld
mov
icebp
inc
hlt
push
jp
jbe
cmp
xchg
inc
push
movsb
faddl
xchg
push
repnz
sbb
lock
adc
loope
fs
dec
data16
pop
mov
adc
in
mov
xlat
aad
mov
add
jb
insl
and
dec
xor
mov
gs
in
scas
stos
adc
lods
clc
fiaddl
push
push
lods
popa
sub
xchg
or
pusha
mov
push
mov
inc
xor
mov
rcl
into
dec
arpl
lret
inc
push
mov
nop
pop
jmp
mov
push
xchg
aas
testb
or
add
into
js
sbb
xchg
lahf
int3
sub
fisttpll
xchg
cli
push
push
icebp
mov
mov
ja
jecxz
jp
sbb
ja
jle
popf
push
dec
std
mov
int
jns
mov
aaa
and
cmp
aad
mov
shrl
xchg
fdivr
in
fstps
mov
mov
sbb
inc
mov
int
out
int3
xorl
and
sbb
lcall
jmp
mov
les
and
pop
dec
or
insb
push
xchg
mov
mov
sub
xchg
lds
push
addr16
loop
les
add
and
cmp
mov
hlt
dec
add
cmp
push
cmpsl
sarb
mov
subl
and
push
std
rorb
shll
movsb
out
add
push
or
stc
adc
aaa
mov
mov
mov
fsubl
sbb
mov
adc
test
inc
imul
pop
mov
push
push
inc
outsl
leave
in
pop
loop
rorb
push
repnz
adc
mov
pop
cmp
push
mov
jg
in
int
sarb
mov
pop
dec
jmp
fisubs
sub
in
ds
or
icebp
icebp
imul
add
arpl
xor
cmp
xchg
addr16
xchg
insb
mov
inc
dec
sub
jg
xchg
out
dec
les
cltd
and
or
mov
add
std
clc
add
test
jne
iret
mov
cmp
icebp
leave
imul
push
mov
cmpsb
cmp
idivl
xor
mov
jge
stc
pushf
mov
out
push
lock
dec
and
push
xchg
push
sbb
das
in
lea
pop
cwtl
std
cltd
mov
scas
mov
inc
out
pop
push
imul
aas
xor
test
das
adc
arpl
cs
mov
movntq
cld
mov
mov
push
cltd
fiaddl
ss
adc
push
or
sarl
out
or
out
mov
inc
and
sbb
push
push
mov
lret
sbb
sarb
popa
addr16
mov
adc
pop
fidivl
cmp
data16
ds
mov
jecxz
int
or
popf
int3
stos
mov
aas
cltd
pop
call
rcr
in
fnstcw
les
xor
cmp
dec
mov
pop
dec
push
dec
dec
sub
jae
fiadds
gs
andl
nop
pop
jbe
iret
cwtl
mov
sub
and
iret
mov
cmc
pushf
or
fld
rcrl
xchg
data16
stos
adc
hlt
mov
sbbl
repnz
mov
adc
iret
and
sub
cmc
pop
dec
jle
cwtl
call
mov
cmp
sub
sub
xor
sub
xor
dec
scas
hlt
fisubrl
inc
pop
rolb
out
loopne
test
ds
icebp
test
test
sbb
jne
into
xchg
mov
cmpl
mov
out
jb
shlb
nop
jg
test
inc
sahf
jg
ret
inc
mov
adc
cwtl
stos
adc
mov
add
sbb
mov
std
push
xchg
fcmovne
lcall
push
push
adc
js
cli
xchg
xorl
pushf
imul
fldcw
int
lds
sub
push
sbb
adc
or
cwtl
out
jp
outsb
testb
mov
xchg
xchg
ja
int3
push
cld
cmpsl
push
scas
sbb
push
xchg
and
or
cmc
xchg
test
add
iret
fcmovnu
xor
mov
and
push
hlt
mov
hlt
pop
inc
and
sahf
testl
stos
cmp
rcrb
lock
dec
popl
les
add
add
lret
sbb
jg
jmp
push
mov
lock
or
jmp
or
pop
rorl
mov
xchg
pop
insb
test
mov
ja
iret
pop
mov
pusha
xor
xor
mov
and
jno
cmpsb
pop
sub
pop
mov
rorb
rorl
lea
in
or
pop
cmp
jg
mov
xor
outsl
jne
cmp
fcomip
cmpb
sbb
push
sahf
movsl
sub
cld
cmp
cmp
call
leave
lea
nop
fstl
pop
mov
xchg
leave
lahf
inc
les
sub
je
jnp
cltd
cmp
inc
adc
cmpsb
mov
mov
jmp
pop
jl
mov
into
test
or
leave
enter
xchg
mov
bound
adcb
cmpsb
inc
xchg
lcall
data16
jae
mov
mov
add
xchg
leave
jmp
bound
hlt
das
cmp
or
ss
pop
loope
mov
out
jb
mov
movsl
pop
leave
pop
xchg
fistl
out
in
fadd
or
mov
mov
sbb
loopne
test
sbb
pop
rcr
pop
add
xor
sbb
icebp
or
push
dec
notl
in
mov
cmp
inc
xor
mov
jae
cmp
dec
sub
mov
adc
in
xor
pop
outsl
add
dec
je
mov
push
sub
jl
fisttpll
sub
push
mov
mov
shll
or
lods
sbb
imul
mov
and
push
jle
cmp
mov
outsb
mov
and
mov
or
test
aaa
or
ret
fistpl
or
dec
data16
adc
jbe
mov
xor
out
stos
cmp
aad
into
je
xor
fstps
fs
pop
mov
or
mov
xchg
gs
push
incb
mov
jp
das
adc
and
mov
adc
call
sub
popf
aam
fstps
mov
inc
and
test
mov
push
mov
push
push
fs
aaa
jns
mov
xchg
repnz
dec
bound
or
sahf
rcl
je
mov
push
pcmpeqd
lock
jns
jle,pt
dec
sbb
cmp
fisttps
jle
lea
add
loope
popf
mov
mov
cmp
insl
sbb
adc
xchg
mov
arpl
and
mov
xchg
jp
repz
add
in
mov
lea
popf
ljmp
inc
aam
or
and
mov
pushw
out
pop
push
in
mov
sub
adc
push
or
jg
add
mov
scas
sbb
loope
test
mull
xor
std
or
cmpsl
into
outsb
andb
mov
push
fwait
pushf
mov
xchg
addb
fdivrl
sti
jb
dec
inc
rorb
inc
jno
in
fldt
adc
jae
adc
xchg
fsubrl
or
insb
js
cmpsl
xor
jbe
lods
cmp
or
loop
rcll
fwait
sub
hlt
inc
or
mov
jg
popa
jge
dec
mov
andb
fs
arpl
fnstenv
pop
dec
ja
dec
jmp
icebp
mov
adc
pop
cmpsb
lods
test
bound
fildl
testl
xchg
imul
push
addr16
nop
fcomi
hlt
cltd
sbb
sti
mov
test
insl
ret
xor
inc
or
mov
rcrb
push
daa
push
mov
fmulp
sbb
je
jmp
cmpsb
and
mov
jo
cmp
subl
fs
pop
fistps
pusha
adc
inc
adc
fiaddl
scas
pop
movsb
mov
pop
add
push
lds
jle
sub
psllw
pop
dec
faddl
imul
gs
adc
sahf
mov
test
mov
es
cmp
add
std
jbe
test
lods
mov
std
outsb
xchg
or
add
mov
jbe
sub
test
and
pop
test
or
xlat
pushf
rolb
scas
in
cli
adc
push
adc
jb
push
push
test
in
push
mov
and
inc
mov
leave
push
sahf
push
pop
sarl
data16
pop
scas
and
xchg
in
add
roll
push
xchg
out
dec
pop
jg
xchg
jmp
call
dec
jmp
in
add
sti
pop
xlat
cmpsl
insl
mov
add
sbb
mov
repz
in
or
jecxz
inc
insb
sarb
rorl
xchg
mov
fwait
leave
mov
std
outsb
xor
add
in
add
push
xchg
mov
jmp
pop
movb
fnstenv
or
jno
ds
dec
mov
xchg
mov
shr
aaa
test
lahf
mov
shlb
out
xchg
mov
jecxz
mov
xchg
push
and
pop
add
sbb
fadd
cmc
pop
push
or
lock
or
ret
and
fcoml
sbb
or
sbb
leave
cld
ret
iret
adc
mov
or
jmp
orb
aam
fld
lds
pop
adc
cli
dec
add
insl
cmp
mov
cmpb
mov
ror
and
cmp
cmpsb
loop
pop
xchg
mov
jnp
inc
popf
pop
jmp
xchg
fs
aas
sub
nop
popa
lahf
push
fstpt
inc
into
gs
mov
dec
inc
mov
pop
aaa
inc
cs
int
outsb
xor
cmp
stc
sub
and
js
dec
out
sahf
jne
lods
jge
cli
dec
mov
stos
ds
and
adc
lret
pop
xor
mov
emms
inc
movb
inc
lods
int
jecxz
mov
gs
ja,pt
push
pop
push
incb
rclb
or
or
repz
pop
imul
sub
daa
negb
out
or
hlt
cmc
movl
mov
push
roll
and
pop
fbstp
movsl
fnstsw
dec
cltd
inc
outsl
push
inc
in
xchg
jp
pushf
inc
inc
pop
shrl
adc
mov
pop
jns
inc
clc
pop
mov
xor
jp
or
jnp
lods
xor
sub
xor
dec
and
jne
xchg
push
jnp
mov
shlb
call
ds
xor
lret
xorb
rclb
sbbl
fwait
dec
jp
out
pop
imul
fstpl
loop
sarb
add
mov
mov
ss
sub
fistpl
pop
mov
jo
loope
inc
cltd
pusha
push
pop
inc
aad
dec
shrl
jo
in
ret
mov
xor
pop
pop
ret
pop
mov
mov
inc
pop
mov
mulb
jge
xchg
cmpsl
gs
in
inc
pushf
fnstenv
add
mov
fs
push
stos
xchg
or
mov
sbb
negl
leave
ljmp
ljmp
jo
leave
xor
adc
sbb
sbb
cs
cltd
and
decl
leave
push
xor
add
xchg
or
ficomps
cld
mov
xor
xlat
mov
scas
fistps
add
inc
fsubrl
imul
jge
lret
cmp
jge
pop
mov
loop
arpl
lret
mov
clc
in
das
jmp
cmp
adc
cmp
mov
add
ljmp
lds
sbb
out
fwait
jae
or
cmpsb
inc
sub
xor
sub
mov
neg
pop
xchg
sub
mov
jecxz
sbb
inc
lods
pop
mov
push
out
fcompl
add
jb
lock
addr16
pop
dec
andps
imul
dec
movsl
lods
lock
mov
mov
adc
icebp
push
movhps
repz
mov
lret
jecxz
loopne
outsl
and
push
dec
nop
jns
mov
cmp
xchg
enter
push
bound
pop
jecxz
mov
hlt
and
jmp
or
mov
mov
je
xlat
outsl
icebp
mov
out
in
gs
or
hlt
pop
sub
repz
out
gs
sbb
pop
adc
jns
mov
cmp
fldenv
mov
mov
mov
inc
xor
cmp
push
mov
mov
lock
dec
push
je
cs
mov
imul
mov
mov
loop
push
xchg
stos
or
mov
leave
push
loope
pop
ja
mov
sub
icebp
shrb
cmp
mov
jo
mov
lea
dec
adc
scas
movsl
lock
xchg
lahf
dec
pop
sbbl
das
cmp
xchg
into
push
int
pop
ljmp
pop
aas
mov
mov
mov
in
call
rorl
jge
loope
fisttpll
ja
cli
xor
mov
inc
mov
lods
push
sbb
out
mov
and
divb
insl
jp
testb
movsb
jnp
lret
mov
cmp
clc
xor
fwait
adc
sub
movb
movsl
and
pusha
cmp
outsl
cmp
push
cmp
dec
add
sub
mov
es
jg
jne
not
adc
out
je
jo
cli
jbe
cwtl
sub
mov
xchg
mov
inc
xor
sub
inc
pop
mov
cmpsb
sbb
jo
mov
cltd
insl
add
inc
movsb
cmp
data16
lret
stos
xor
mov
incl
inc
pop
movsb
pushl
sbb
add
sbb
push
mov
mov
xchg
push
je
sbb
adc
push
and
lods
xor
mov
mov
adc
pushf
nop
or
jo
aaa
movsl
xchg
cld
ja
scas
mov
pop
and
cmp
jb
mov
cmp
inc
inc
test
pop
lods
int3
push
imul
or
idivb
mov
lret
sar
mov
pusha
jmp
fildll
mov
cmc
je
sbb
mov
push
cmp
mov
xor
jbe
push
std
cmp
orl
dec
xor
jno
rcrl
mov
movsb
call
fistpll
sbb
in
mov
add
dec
add
into
xor
cmpsl
and
dec
xchg
mov
sahf
jp
push
mov
cmp
outsl
jl
adc
shrl
iret
leave
scas
sbb
cwtl
gs
sbb
int3
sub
mov
mov
cmp
sahf
pop
adc
test
rclb
and
les
pop
sub
xchg
xlat
push
pushf
push
push
shll
add
clc
xor
xchg
sbb
xor
dec
shrb
outsb
add
rep
adc
sbb
ja
mov
push
dec
fldt
mov
lods
subb
xor
jmp
out
lret
popf
loop
jg
sbb
push
dec
mov
insl
mov
dec
xor
mov
idiv
or
out
push
xchg
rcll
cmp
mov
dec
adcb
add
sub
add
mov
jl
push
cltd
adc
mov
adc
clc
sub
pop
dec
jecxz
out
ret
sbb
fs
mov
mov
jnp
or
fwait
stos
repnz
mov
negb
lds
imul
xchg
imul
fistpl
mov
mov
xor
sti
sahf
cmpsb
into
xor
fadd
pushf
testl
shll
inc
lock
pop
mov
inc
cwtl
aaa
pop
or
jp
sti
add
pop
cmp
lods
adc
or
call
pop
repnz
push
js
xor
int
xchg
popa
inc
pop
loop
loopne
and
lret
adc
xlat
leave
push
xchg
jbe
out
sub
mov
movsb
out
mov
sub
inc
mov
shrb
push
ret
mov
cmp
clc
ds
sub
cmp
pop
mov
in
loope
std
add
stc
jge
gs
or
xchg
lcall
mov
ror
data16
push
movsb
push
bound
out
mov
shll
mov
sub
cs
std
push
dec
test
rol
mov
cli
push
imul
test
xchg
jns
stc
sbb
pop
sub
adc
xchg
mov
inc
jmp
stos
scas
orb
sub
ret
pop
sub
xor
int3
cmpsb
pop
cmp
loope
dec
xor
jecxz
jp
cmpb
es
fwait
jg
into
mov
adc
ljmp
and
outsb
mov
mov
hlt
movsl
aas
cwtl
mov
push
add
jns
jo
out
sti
loop
cmp
loop
aam
jle
outsl
inc
cmp
popf
cmpsl
xchg
cli
xchg
test
testb
jnp
rcrb
cs
jbe
push
fwait
in
push
pop
pop
inc
nop
cmpsl
dec
or
aas
lock
sub
rolb
pop
iret
lret
test
jp
lahf
xlat
mov
add
shll
fadd
and
test
mov
fidivrs
enter
out
jle
lods
sub
repz
cli
jnp
adc
push
xor
inc
mov
dec
dec
mov
addr16
outsl
hlt
xorl
ja
jae
jbe
cli
inc
stc
xor
cwtl
arpl
lcall
js
mov
jl
xchg
negb
cmp
stc
dec
cmc
mov
add
push
aaa
ss
out
enter
ds
repz
cmp
leave
movsb
push
xor
mov
lret
sub
add
mov
sub
lahf
mov
pop
adc
and
jo
mov
push
add
imul
cmp
push
aam
and
stc
stos
cmp
jge
mov
arpl
and
cltd
ror
xchg
mov
push
int3
test
add
adc
dec
js
mov
add
bound
or
push
adc
dec
outsb
cmp
sbbb
pop
fadds
outsl
cli
mov
ljmp
mov
rolb
cmpsl
popf
enter
loope
mov
push
xchg
inc
lea
jno
loopne
cmp
fwait
mov
les
adc
mov
push
jmp
je
inc
push
arpl
into
sar
movsb
andb
and
pusha
jnp
adc
outsl
cmp
ss
adc
mov
lods
inc
js
dec
and
jbe
add
pop
mov
push
andb
cld
mov
test
dec
out
std
jno
sarb
jge
repnz
or
jmp
pop
cltd
dec
enter
adc
xchg
lret
cmpsl
enter
movsb
mov
mov
hlt
xchg
mov
dec
or
jle
cmpsb
fistpll
adcl
add
inc
dec
ss
loope
push
pop
nop
scas
js
loop
sub
jb
fs
jnp
in
xchg
inc
xor
dec
movb
pop
lret
jae
orl
sbbb
pop
rol
mov
sub
repnz
sub
inc
fwait
jg
fs
sti
cwtl
testb
aaa
adc
and
outsl
jp
je
pushl
insb
add
push
cmpsl
cwtl
sti
inc
cld
dec
push
add
adc
dec
movsb
loope
int
pop
stos
lea
jg
lods
cmp
add
and
pop
mov
push
rclb
xchg
adc
xchg
mov
xchg
and
push
enter
sbbb
inc
or
icebp
add
push
xor
xor
out
clc
mov
sbb
lea
cmp
pop
mov
jnp
jmp
xor
jg
sub
cld
push
and
pop
mov
mulb
jns
nop
rcll
mov
icebp
repnz
lock
inc
mov
sahf
mov
int3
pop
fisttps
or
cmp
shll
les
adc
inc
jo
mov
jmp
and
adc
sbb
rolb
adc
jl
add
cmp
neg
jle
hlt
xchg
in
mov
in
decb
inc
mov
cmc
out
jmp
loop
mov
fidivrs
pop
inc
das
push
fsubs
xchg
mov
xorb
lret
cmp
or
into
push
iret
and
adc
scas
clc
out
ret
xor
adc
cmp
jmp
dec
pop
push
and
mov
std
mov
scas
xor
addr16
rorl
mov
bound
jle
repnz
call
out
add
xchg
out
inc
sub
clc
in
mov
mov
or
add
adc
outsb
int3
inc
xor
test
fs
sbb
pop
call
mov
cmpsl
popa
fisubl
add
push
cmpsl
pop
outsb
push
stc
lock
pop
xchg
aaa
cmc
pop
aad
shlb
sub
mov
xor
inc
dec
je
dec
icebp
rorl
pop
loop
dec
in
and
inc
jl
shlb
mov
dec
pop
mov
fcmovnu
or
fmul
jecxz
jns
jnp
pop
dec
cmpsb
sbb
mov
push
push
jle
ljmp
es
cmp
fdivrl
inc
sub
sti
pop
lds
rcll
aam
inc
scas
dec
popa
cmpsb
fnsetpm(287
lret
push
cmp
data16
je
pop
lods
ret
jg
xor
test
in
add
inc
insl
cwtl
xchg
rcll
mov
iret
inc
adc
into
xchg
out
xchg
mov
adc
mov
inc
xchg
repnz
cwtl
or
sbb
add
jbe
flds
mov
popf
add
inc
mov
cli
mov
sub
pop
inc
pop
push
push
inc
ja
in
pop
loope
out
adc
adc
mov
sahf
repz
jnp
insb
push
sub
xor
pop
imul
pop
add
outsb
mov
sub
mov
rcl
mov
xchg
hlt
jecxz
ljmp
mov
adc
inc
sbb
faddl
outsb
or
aaa
xchg
sti
subl
addb
lds
paddusb
out
jecxz
gs
inc
in
cld
test
lahf
ds
mov
int
icebp
xor
jb
testl
cmp
enter
cmpsl
fldcw
inc
imul
fidivl
or
popf
jns
dec
xchg
or
adcb
inc
add
mov
jnp
jo
mov
push
rcr
clc
hlt
adc
jmp
popf
dec
std
inc
mov
xorb
stc
inc
mov
xchg
mov
xor
gs
inc
lahf
xlat
sbb
pop
mov
lahf
mov
xor
jge
mov
inc
or
jl
insl
ret
xchg
loop
int3
cmp
rorb
ret
insb
jecxz
lret
inc
insb
xor
filds
xor
mov
leave
out
xorb
addr16
popa
les
mov
mov
pop
loopne
xbegin
and
pop
ret
xchg
pop
sbb
dec
xchg
lahf
mov
mov
call
inc
int3
popa
jl
loop
mov
fs
or
outsb
je
adc
push
mov
inc
daa
or
pop
add
imul
cmovle
xchg
and
push
std
inc
popa
mov
mov
push
std
pop
test
mov
popf
sbb
test
mov
aaa
or
and
mov
mov
dec
mov
cmp
incl
pop
dec
je
in
push
dec
mov
lret
scas
and
inc
pop
cmp
jbe
dec
rcl
and
je
push
ljmp
mov
aas
ficomps
xor
push
adc
adc
jg
jb
out
sbb
repnz
mov
mov
push
pushf
dec
mov
call
cmpsl
cmc
cmp
sbb
rcll
jmpw
adc
adc
mov
sbb
test
in
dec
push
into
sub
out
cmp
stc
leave
test
stc
mov
hlt
adc
pop
sbb
pop
clc
out
repz
stos
mov
mov
ja
fldt
xchg
dec
mov
ljmp
cmp
cmp
ficoms
inc
adc
mov
cwtl
and
dec
lea
scas
rolb
dec
add
or
pop
fldt
lcall
mov
pushf
out
dec
mul
pop
test
adc
xlat
sbb
mov
insl
enter
jge
sub
mov
mov
addl
test
stc
push
cltd
mov
adc
dec
repnz
lcall
mov
sbb
mov
cltd
je
mov
xchg
ja
idiv
flds
dec
push
add
iret
test
dec
ret
mov
pop
xor
test
movsb
mov
push
xchg
mov
rolb
jl
in
rolb
leave
inc
sub
out
xor
jo
int
cmp
push
mov
adc
xchg
jnp
stos
in
adc
or
in
nop
cmc
xor
int3
std
scas
xchg
loop
jns
pop
arpl
pop
sbb
adc
mov
daa
jle
and
mull
inc
test
sbb
out
jecxz
sub
jne
jnp
xchg
push
data16
int
mov
jo
pop
aad
add
mov
and
outsb
movsl
rclb
stos
pop
mov
scas
adc
adc
xor
jp
mov
inc
jp
xchg
jb
mov
adc
fstpt
add
cld
lcall
dec
push
sub
out
mov
pushl
bound
mov
mov
aaa
outsb
adc
test
jo
inc
jne
cmp
xchg
xchg
repnz
mov
leave
aad
pusha
std
rcrb
push
fstpt
push
dec
mov
ficompl
mov
test
lea
push
or
inc
ss
inc
mov
jmp
mov
and
mov
dec
sub
fnstsw
fisubrl
cmpsl
es
xchg
mov
bound
js
adc
sbbl
fs
out
loopne
ffree
pop
shll
rcl
inc
push
out
shll
pushf
ljmp
nop
fiadds
adc
ja
aas
loop
lods
outsb
and
mov
and
or
fstl
adc
and
test
xor
arpl
imul
stc
fadd
jnp
movsl
cmp
jecxz
orl
pop
and
movsl
out
movsl
pop
or
cmc
sbb
sarb
ss
pop
pop
adc
and
cs
lods
mov
mov
sub
dec
pop
jecxz
in
arpl
adc
pop
fcomip
xor
jge
mov
xor
pop
cmp
out
pop
lds
lds
mov
sub
dec
arpl
sbb
push
or
mov
jecxz
mov
xchg
mov
jbe
loope
sub
pop
xor
rorb
cmpsl
jae
push
lock
or
mov
mov
add
or
jne
push
icebp
cwtl
cmpb
sub
fs
in
jecxz
loop
mov
loopne
lods
jo
shr
xor
lahf
shr
mov
xchg
idivb
int3
in
pop
push
dec
les
fldt
rcrb
sub
adc
or
or
mov
add
pop
lret
lea
xor
rcrb
int
bound
call
rcrb
or
ret
add
sarl
rcll
stc
jnp
lcall
sti
push
das
mov
jg
jae
inc
movsl
sbb
lahf
fcmove
jmp
add
xchg
and
pop
out
sbb
out
pop
fistl
fcmovnb
xchg
mov
popa
jge
and
arpl
nop
jle
ljmp
std
inc
cwtl
fdivs
mov
cltd
stos
push
mov
push
mov
push
leave
test
shl
jl
dec
dec
in
outsl
sub
mov
adc
mov
repnz
sbb
jmp
inc
stos
mov
push
xchg
fwait
loop
push
into
cmp
pushf
ret
xchg
pushf
das
inc
lret
call
sub
sbb
xor
jl
jge
mov
mov
and
fidivrl
or
mov
inc
xor
lods
in
mov
in
imul
fs
xchg
rcl
mov
cmpsl
jnp
sahf
or
push
lcall
jb
mov
sub
xchg
dec
mov
lods
dec
mov
mov
fs
sub
mov
or
dec
sbb
ret
pushf
iret
push
dec
or
enter
sbb
adc
negl
out
jno
out
mov
inc
cmp
xor
repz
cmpsl
fidivs
mov
inc
bound
jo
or
ja
test
xchg
dec
add
xchg
js
inc
pop
or
sbb
mov
push
cwtl
imul
push
xor
adc
inc
cli
xchg
pop
loop
es
mov
or
jns
sbb
inc
ret
jbe
pop
test
add
cs
push
jp
pop
or
pop
fwait
push
cmpsb
push
loope
or
mov
js
mov
jb
cmp
mov
cmp
inc
jecxz
sbb
mov
fldt
sub
paddd
push
dec
lods
mov
push
xchg
loop
mov
xchg
shll
pop
subl
pop
sub
cmp
div
repnz
mov
jae
mov
lods
test
pusha
test
push
idivl
fsts
pop
test
pop
icebp
ljmp
inc
xor
test
jnp
xor
inc
pop
and
data16
divl
fiadds
inc
in
nop
bnd
stos
jmp
mov
inc
push
mov
rcrl
mov
lret
sbb
adc
lcall
fwait
mov
jnp
pop
and
sub
outsl
mov
pushf
mov
stos
stos
shrl
mov
mov
or
mov
pop
adc
test
lcall
js
inc
dec
cmc
ret
dec
xor
hlt
pop
inc
iret
pop
std
decl
push
sbb
xor
lds
pusha
xlat
icebp
std
add
pop
outsl
sbb
test
mov
pop
or
out
inc
or
clc
mov
in
sub
test
xchg
jp
test
push
rol
js
pop
pop
push
jp
dec
dec
mov
push
and
jo
sub
cmpb
mov
hlt
fdivrs
bound
inc
cmpl
inc
rorl
mov
cmp
mov
or
fwait
xchg
push
dec
mov
pop
inc
cmp
add
ja
adc
sub
ja
push
fwait
add
sub
repnz
add
arpl
rorb
mov
mov
cmpsb
mov
or
arpl
sub
in
test
mov
dec
fnstcw
pop
add
jbe
std
cmpsl
or
outsb
mov
push
mov
int3
mov
xchg
mov
jg
cmp
pop
shlb
enter
mov
aam
sbbb
out
cmp
rcrb
jae
into
mov
mov
add
jmp
adc
push
lods
xor
orl
ja
pop
jno
out
in
arpl
filds
xor
xchg
jno
mov
aam
loope
cli
jb
int
scas
sub
xchg
sub
sbb
dec
cmp
add
icebp
fidivl
xchg
jmp
push
pop
xor
push
icebp
mov
sub
push
lret
xorb
pop
dec
inc
xlat
jl
roll
adc
xor
mov
out
fstpl
push
in
loopne
sbb
add
out
cld
xchg
or
jge
lcall
cmp
test
add
add
push
mov
jecxz
xchg
das
or
cmp
ret
mov
or
test
imul
or
xor
bound
or
pop
jbe
cld
out
test
sbb
and
lock
dec
movb
push
xchg
xchg
adc
sub
out
stos
dec
cmc
inc
pop
and
lret
sbb
dec
push
orb
lea
loope
mov
inc
inc
mov
mov
mov
inc
mov
out
fsubrl
push
jne
pusha
rcrb
les
push
push
add
adc
insl
loope
sub
mov
cld
fs
scas
pop
dec
insb
sbb
outsb
cmp
clc
push
push
mov
movsb
cmp
cmpl
xor
push
push
sahf
in
and
lret
lret
push
loop
inc
sbb
scas
push
pop
lock
cmpsb
fwait
jns
xor
mov
xchg
dec
outsb
je
mov
push
test
jge
lahf
cwtl
mov
xchg
dec
xchg
in
scas
nop
push
adc
idivl
aaa
fwait
mov
jge
dec
lret
sbb
cmp
cli
inc
and
inc
std
hlt
lea
jae
pop
pop
addr16
or
imul
lcall
push
bound
js
fistps
sbb
dec
pop
pop
dec
sub
mov
xchg
inc
rolb
fwait
hlt
adc
loope
dec
dec
pop
or
out
xorl
fwait
jl
xlat
pop
pop
sub
mov
and
lar
jle
and
aaa
push
pop
lock
push
fwait
dec
scas
out
out
or
imul
lret
cltd
hlt
cmpsl
inc
or
sti
mov
jo
and
out
mov
stc
in
outsb
out
popl
lds
or
mov
pop
hlt
frstor
lods
add
out
xor
inc
dec
stos
bound
and
mov
data16
loop
dec
jno
js
xchg
jnp
xchg
mov
pushf
or
pop
popf
fs
lahf
dec
sub
pop
push
movl
std
jmp
in
sbb
call
sub
loop
out
jmp
pop
cwtl
fstpl
mov
push
scas
mov
pop
dec
repnz
leave
add
lea
scas
movsb
push
gs
fsubrs
dec
cli
sbb
and
push
ficomps
out
fldcw
std
inc
jnp
or
aam
repnz
movaps
sahf
cmp
gs
cli
inc
pop
xchg
dec
add
xor
ss
sub
lret
mov
fwait
pop
jp
mov
test
fldl
leave
push
rorl
pushl
sbb
sahf
adc
inc
pop
outsl
divl
sbb
loope
push
aad
mov
dec
inc
xor
dec
jle
xorb
adc
cmp
mov
or
repnz
adc
outsl
inc
and
jne
fdivs
cmpsl
mov
aad
int
les
subl
cmp
cli
lcall
sub
push
pop
jbe
movsb
jb,pn
in
lret
mov
addr16
mov
dec
and
dec
mov
cmp
out
repz
mov
lret
or
jo
cmpl
mov
test
push
pop
mov
xchg
mov
inc
dec
cli
imul
or
enter
push
pop
push
in
or
cmp
lock
mov
repnz
gs
mov
push
test
mov
xchg
ljmp
leave
int
cmpsl
push
jbe
into
loope
xlat
jne
hlt
jnp
fwait
and
xlat
xor
stc
test
push
out
inc
pop
sbb
inc
fistpll
jmp
les
ja
sqrtps
dec
sub
jbe
and
pop
cmp
add
mov
stc
out
lcall
cmp
push
addr16
jecxz
mov
shlb
add
test
je
sub
push
add
nop
scas
mov
cmp
int
scas
ret
cmp
jnp
das
fiadds
scas
cli
add
xor
icebp
lods
and
jno
push
dec
popa
sbb
fiadds
cmc
int
aam
enter
cmp
cmc
mov
je
jnp
ja
movsb
test
stos
inc
lods
lcall
mov
cmp
cmp
pop
sti
fsubl
lcall
xchg
jg
pop
cs
jmp
adc
adc
popf
jns
mov
iret
test
mov
pop
cmpsb
xchg
arpl
popa
pop
mov
cltd
jecxz
mov
in
pop
add
xchg
or
cltd
insb
sbb
pop
pop
sub
outsb
dec
in
dec
leave
push
and
sbb
sahf
push
out
mov
add
repz
lods
pop
mov
fs
loop
hlt
movsl
popa
and
mov
int
scas
jb
orl
imul
push
push
rcll
fstpt
repz
stos
jmp
icebp
and
insl
jle
xchg
and
aaa
fidivs
pop
inc
cs
mov
mov
test
sub
sti
and
push
out
and
aaa
test
arpl
mov
sahf
inc
das
ret
pop
aas
rcll
test
xchg
ds
xor
lahf
sub
cmp
addr16
xlat
xchg
push
mov
aad
je
jl
popf
lcall
sbb
and
xchg
add
cwtl
cs
lret
mov
std
sbbl
adc
sarb
push
xor
pop
call
mov
sub
lods
enter
cmp
xor
cs
rol
add
gs
mov
jecxz
popa
push
jecxz
mov
mov
jo
insb
outsl
ja
in
xchg
lcall
cmpsl
outsl
mov
xchg
adc
push
into
cmc
lahf
mov
std
jns
mov
push
in
jo
jnp
data16
ds
popf
sbb
xchg
mov
jbe
aam
shll
cli
jae
pop
push
xchg
js
vpxor
adc
and
add
rcll
mov
or
or
or
daa
or
stos
bound
jbe
push
es
je
rcl
loop
out
inc
jmp
xor
push
xchg
lret
pusha
scas
addl
divb
sub
xchg
jne
scas
inc
ficoml
or
mov
sbb
fistpl
xor
aam
test
xchg
xor
dec
sub
add
test
and
test
lcall
stos
idivl
add
or
pop
leave
in
mov
rol
aam
fdivr
mov
push
lea
ret
in
xchg
stos
in
mov
pop
xchg
cmpsl
pop
sbb
insb
mov
shll
inc
xor
adcl
idivl
add
push
cltd
inc
mov
das
repnz
loope
mov
pop
rclb
aas
pop
add
lods
push
sub
cmp
jle
cltd
inc
inc
and
adc
mov
hlt
push
enter
jge
jne
mov
xchg
call
rol
and
xchg
clc
mov
ljmp
jae
pop
popl
les
test
leave
ret
adc
mov
idivb
mov
sub
add
loopne
icebp
in
fwait
out
or
pop
xor
bound
frstor
cwtl
or
mov
mov
fsubrp
push
jl
pop
pusha
incb
mov
cmp
mov
insl
pop
mov
push
std
das
int
pop
push
outsb
add
xor
mov
les
fldl
insb
cmp
gs
push
call
xor
insb
addr16
mov
push
mov
or
adc
and
mov
sbb
arpl
inc
bound
jecxz,pn
out
xchg
xchg
lods
cmp
lcall
testl
sbb
in
mov
cmpsb
je
movsl
into
lods
sub
cli
mov
das
sub
sub
jne
test
in
cmc
pop
fsubrs
rsqrtps
jmp
sbb
leave
pop
fnsave
ret
and
sti
arpl
imul
push
xlat
fucomi
push
xchg
pop
cmp
cmp
sub
inc
dec
cmp
mov
sbb
push
and
xchg
mov
mov
cli
cs
rcl
add
xchg
adc
lock
sbb
push
in
enter
int
adc
cltd
jmp
mov
sub
movsl
inc
mov
push
mov
jo
loop
imul
mov
mov
dec
sub
pop
inc
adc
loope,pn
gs
xor
in
or
ljmp
jo
icebp
pop
xchg
pusha
leave
sub
mov
jae
push
push
movsl
imul
loopne
xor
jge
frstor
lock
and
aaa
push
mov
popf
idivb
fldl
fistpll
test
int
mov
aad
xor
cli
pop
xchg
rcrb
inc
mov
pop
dec
addb
fwait
lahf
icebp
fdivrs
sub
jg
arpl
mov
mov
fcoml
or
insb
xchg
cmpl
es
loope
dec
push
repnz
in
and
ret
daa
rcl
pop
outsb
int3
inc
add
aam
insb
add
fldl
add
push
es
mov
out
outsl
je
adc
cs
jns
popf
cmpsl
xor
sahf
mov
outsl
jae
insb
xchg
cltd
xor
xchg
daa
dec
in
sub
ljmp
or
popa
ss
out
adc
imul
cmp
int
add
jbe
test
cmp
fcmovnbe
push
xchg
gs
pop
in
cmp
jo
adc
cmp
arpl
das
rcr
push
loope
sti
inc
adc
mov
push
fmuls
jmp
ret
pop
dec
jle
imul
jmp
push
dec
cltd
add
nop
ljmp
outsb
bound
mov
jp
and
fimuls
out
shlb
sub
cmp
dec
push
insb
or
or
sbb
xchg
cltd
fwait
cmp
sbb
dec
xor
iret
mov
dec
mov
lret
subb
sahf
fs
push
add
cmp
mov
stc
and
fistps
xlat
push
push
jp
inc
fdivr
pop
jge
loopne
bound
stc
rcll
sbb
icebp
mull
je
dec
and
mov
imul
jle
movsl
stos
lods
or
pop
int3
mov
pop
imul
sbbb
or
movsb
pop
sub
stos
rorl
neg
cmp
sub
in
scas
shll
loop
mov
das
js
jg
in
mov
repz
mov
into
pop
ret
xchg
xor
sbb
mov
cmc
mov
lahf
scas
test
sub
push
jb
xchg
inc
mov
mov
or
jl
add
dec
adc
sbb
fbld
cmc
mov
jl
outsb
mov
fnsave
mov
adc
out
pop
xchg
insb
insl
bound
and
jmp
push
movsl
push
outsb
std
jns
dec
aaa
rcrb
mov
std
xchg
jmp
lods
rcrb
movsl
xchg
pusha
and
sub
fs
mov
pop
xor
ljmp
pop
sub
scas
jg
pop
inc
orb
jno
and
jnp
dec
pop
or
add
stc
add
mov
sbb
sbb
in
add
insl
add
das
rcl
ret
movsl
movsb
xor
dec
dec
les
pop
xor
loopne
adc
mov
iret
add
xchg
fcmove
xchg
xor
insl
ss
fs
in
inc
mov
inc
jae
out
pop
dec
or
pop
sarb
inc
mov
fs
loope
and
jle
les
neg
inc
push
outsl
aad
popf
jl
and
jo
adc
lret
imul
stos
mov
daa
xchg
fmull
imul
fmuls
std
lea
pop
cmp
sahf
inc
inc
pop
sub
jmp
mov
sbb
push
and
fst
cld
fisttps
cmp
jp
cwtl
push
dec
push
out
fwait
mov
fildll
jne
mov
adc
pop
fdivr
cs
fwait
sbb
pop
push
cmp
in
mov
mov
adc
dec
shll
rcl
add
xor
pop
dec
mov
sarb
or
arpl
cli
bound
in
xchg
iret
mov
mov
mov
fwait
cmp
fcomps
add
lcall
add
sub
xor
xor
or
xor
dec
ret
sub
out
xchg
adc
push
scas
std
insl
xor
pop
xor
cs
jns
repnz
mov
in
pop
jecxz
xor
and
sub
sarb
popa
push
xchg
xchg
cmp
arpl
imul
scas
adc
cmp
push
test
iret
dec
imul
or
loope
xor
jae
mov
cs
sarl
push
pop
jns
jge
sarb
sahf
mov
push
je
ffree
jg
clc
inc
aam
imul
js
push
or
test
inc
push
ret
scas
mov
sub
stos
out
jle
xchg
outsb
test
sbb
mov
sub
pushf
leave
dec
inc
ds
pop
les
lods
mov
cmp
clc
cwtl
cwtl
push
push
mov
and
ficomps
fdivl
xchg
std
inc
lea
mov
adc
and
inc
cmp
or
out
daa
imul
stos
or
and
and
popa
sub
ja
add
call
push
pop
gs
sbb
cmc
mov
mov
imul
nop
mov
scas
jnp
pop
ret
cli
sarl
jnp
xchg
test
mov
jnp
jae
subl
add
or
inc
daa
xor
and
or
push
jle
fidivrs
mov
xor
dec
push
mov
fdiv
shl
inc
cmp
lods
adc
cmp
xchg
lock
push
jmp
sarl
dec
subl
movsb
je
retw
lock
add
pusha
mov
and
cmc
xchg
dec
jmp
je
mov
lods
ficompl
arpl
les
cmpsb
ja
mov
mov
inc
push
cli
pusha
push
or
sub
push
mov
test
mov
or
leave
addb
jmp
jg
data16
cmp
daa
mov
insl
cmp
add
jge
bts
xor
scas
mov
out
jmp
out
or
dec
sbb
xchg
cmp
std
sbb
cmp
dec
daa
in
sub
lcall
xor
outsl
jge
fsts
dec
dec
push
mov
jp
jmp
push
sub
xor
lods
fistpl
popa
hlt
adc
mov
std
mov
out
xchg
push
and
and
js
rcll
dec
xor
cmpsl
jo
xlat
lods
inc
lock
dec
mov
sub
mov
and
inc
gs
mov
push
jp
fists
mov
repz
push
jmp
shll
xchg
es
pop
in
std
jge
mov
mov
lcall
pop
xchg
loope
fucom
or
ds
negl
hlt
test
jne
sahf
dec
adc
xor
scas
cwtl
add
dec
dec
lret
out
jae
inc
push
daa
fs
dec
push
scas
iret
rclb
inc
sbb
hlt
lea
mov
mov
shrb
inc
jns
fucom
cwtl
inc
adc
adc
loope
fsts
mov
sbb
test
xchg
jp
xor
int3
sar
push
aam
mov
jns
jmp
sbb
fisttps
lahf
cld
sub
int
dec
or
insb
cmp
insb
add
jne
iret
rorl
lock
mov
aas
mov
dec
mov
inc
js
in
and
pop
dec
jp
inc
push
aam
insl
cmpsb
loope
jns
mov
xor
push
bound
insl
mov
out
enter
out
lahf
fisubs
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
sti
xchg
xchg
jo
pop
outsb
add
test
pop
loop
adc
sbb
lret
mov
je
popf
lcall
les
pop
icebp
and
enter
fs
leave
fldenv
in
xor
dec
push
lods
sbb
mov
add
adc
lds
loope
jns
xchg
jno
or
hlt
rcrb
xorl
add
lds
lds
push
mov
jg
jbe
dec
xor
lods
cmp
sti
rcrb
xchg
fisubrs
push
cmp
sti
outsb
adc
inc
inc
adc
subb
clc
sub
and
hlt
mov
call
insb
addr16
sbb
adcb
int3
scas
xchg
test
inc
jl
push
xchg
sub
nop
lds
fsubp
mov
movsb
scas
mov
movsl
incl
mov
jnp
xor
icebp
mov
mov
adc
adc
lret
das
add
sub
cmc
cld
scas
daa
jae
mov
mov
lds
pusha
jno
add
pop
sub
mov
fwait
das
xor
push
jo
pushf
aad
stos
addr16
sub
push
inc
sub
lea
ss
lock
lret
cmp
test
sub
les
xor
push
int3
in
dec
mov
sub
cmpsl
stc
pop
scas
aas
lcall
inc
xor
add
add
pusha
add
inc
xchg
cmp
add
cld
clc
outsb
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsb
add
outsb
