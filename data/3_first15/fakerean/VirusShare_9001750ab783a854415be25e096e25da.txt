jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
mov
test
or
mov
mov
sahf
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
lcall
sbb
add
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
stos
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
xchg
inc
add
cmp
mov
outsb
or
push
jno
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
xchg
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
stc
mov
sbb
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
add
add
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
push
push
call
mov
add
cmc
int3
add
jecxz
fiaddl
add
test
mov
lods
add
jbe
xchg
scas
clc
mov
add
out
add
pushf
add
fiaddl
add
add
loop
add
sarb
add
flds
cld
pop
mov
add
ror
add
fwait
push
push
jmp
test
add
add
add
scas
call
jno
add
fbstp
mov
add
add
add
jge
add
js
roll
stc
add
icebp
xchg
push
add
push
jo
pop
mov
cld
roll
xchg
add
rolb
cld
add
add
lahf
jmp
add
mov
add
mov
rolb
lret
loop
mov
add
pop
lahf
add
mov
add
call
add
loopne
mov
add
decb
add
add
pop
pop
cmpsl
out
mov
add
movl
movsb
sahf
out
cld
loop
add
lea
mov
add
cmpsl
mov
push
mov
ljmp
std
add
xchg
fiadds
add
gs
add
cmpsb
lods
add
cmpsl
add
test
addr16
add
int
scas
add
mov
lret
jnp
mov
lea
pop
movl
push
push
push
push
call
mov
xchg
pop
mov
stc
flds
add
pop
add
into
add
jge
imull
add
bound
push
add
lret
stc
ljmp
leave
add
jecxz
add
std
cld
jnp
add
add
lds
pop
in
filds
lods
push
cltd
mov
mov
push
jae
mov
lret
xchg
popf
add
popa
adc
inc
in
push
lea
push
call
xchg
in
stos
mov
popl
flds
mov
int
je
add
add
incb
movsb
pop
mov
add
add
je
fistpll
js
jno
add
pop
xchg
repnz
xchg
add
pusha
add
nop
add
jecxz
insb
push
add
call
add
data16
addb
add
add
out
add
add
sbbb
or
push
lea
push
lea
push
call
fnstenv
cmc
add
int
mov
mov
xchg
in
ja
add
push
shl
aam
filds
add
ret
add
mov
jb
lret
int3
add
mov
mov
pop
add
jnp
lret
add
hlt
add
add
mov
imul
mov
add
add
add
xchg
pop
test
add
popl
lock
add
add
or
push
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
enter
push
movsl
ljmp
add
add
mov
jae
subb
add
add
add
jbe
pop
push
jl
add
jno
rolb
add
add
add
les
add
add
add
pusha
add
fcompl
jle
lret
lds
movb
add
add
int3
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
loope
pop
ja
mov
cmpsb
mov
jbe
push
ja
cli
add
je
add
iret
mov
aam
jmp
add
push
bound
std
push
mov
add
ljmp
out
pusha
add
add
pop
add
mov
mov
out
add
gs
sahf
sbbl
mov
jae
popa
add
addr16
int3
mov
lea
pop
call
push
push
push
push
push
push
push
call
add
mov
add
aad
lahf
scas
movl
jl
frstor
mov
imul
mov
jb
imul
movsl
stos
nop
mov
push
add
add
add
hlt
popf
add
imul
push
mov
push
cld
test
lods
add
movsb
mov
add
add
sbb
call
push
push
push
push
call
add
mov
imul
push
jmp
mov
mov
fucomi
lock
add
add
popf
xor
add
add
xchg
add
add
cmpsl
add
add
enter
add
add
arpl
add
add
add
insb
lock
xchg
jmp
add
shl
flds
add
jb
into
add
add
add
pusha
add
lea
pop
push
call
jmp
push
push
push
lea
push
push
push
push
call
nop
xchg
add
aad
add
add
jecxz
lahf
jmp
mov
add
add
mov
lods
add
enter
jnp
out
pop
add
cmpsl
mov
mov
add
xchg
je
jecxz
add
enter
add
out
cli
in
enter
push
add
push
aad
add
xorl
add
jnp
lock
negl
mov
idiv
add
add
pop
ret
mov
mov
push
push
lea
push
push
call
add
andl
add
mov
add
add
lods
add
mov
add
out
lock
add
mov
mov
roll
jb
push
add
jle
icebp
xchg
testb
mov
mov
mov
add
add
mov
add
jecxz
add
push
xchg
lret
xchg
mov
lea
pop
add
push
push
push
lea
push
push
push
lea
push
push
push
call
push
add
rcrl
stos
add
ret
jno
pop
outsl
add
jecxz
out
ja
add
addr16
pop
add
mov
in
movb
add
lods
add
popf
add
add
add
add
pop
shl
xchg
add
add
mov
add
xlat
mov
bound
imul
les
ret
add
add
add
push
push
call
lods
jle
add
stos
clc
in
add
add
mov
pop
mov
lahf
xlat
cmpsl
cld
test
add
jb
leave
pop
add
rolb
mov
insb
add
pushf
add
roll
in
in
add
out
roll
mov
loop
out
jl
insb
xchg
hlt
scas
add
imul
les
imul
add
jne
mov
lea
pop
mov
xor
push
push
lea
push
call
jle
add
mov
add
les
add
mov
add
popl
mov
mov
jmp
add
add
xchg
in
movsl
mov
mov
add
add
add
out
mov
gs
add
mov
jl
push
jns
add
push
iret
rolb
movsl
gs
jbe
rcll
xchg
ja
add
add
pop
add
call
push
push
lea
push
push
call
add
repnz
add
stos
rcll
jl
mov
bound
popf
fadds
pop
cmc
add
push
add
int
mov
xchg
pop
push
ljmp
rolb
cwtl
add
bound
add
pop
arpl
add
add
pop
lea
hlt
add
mov
into
lahf
jmp
mov
lea
pop
mov
xor
push
push
push
push
pop
add
dec
lea
sub
inc
shl
pop
add
pop
push
lea
push
push
push
push
lea
push
push
push
call
lods
jo
rcrb
cmpsl
fsub
mov
add
add
jb
cmpsl
push
fldcw
mov
mov
add
push
lea
add
pop
mov
roll
add
fadds
mov
mov
jecxz
popf
shrb
insb
jno
mov
add
jb
push
test
imul
jge
jno
add
xchg
lea
pop
pushl
push
push
push
push
push
lea
push
push
push
call
xchg
rolb
imul
mov
xorl
jmp
add
sti
add
scas
div
add
lea
movb
add
add
fwait
add
add
mov
add
add
add
add
add
xchg
jae
add
mov
jle
add
add
je
mov
int
mov
pop
push
add
xchg
add
lods
add
xlat
mov
lea
pop
call
mov
movl
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
xlat
add
jl
imul
mov
lahf
mov
push
push
jecxz
scas
jb
add
fldl
add
lret
jge
test
int
into
scas
test
popa
aad
add
add
loope
mov
imul
add
mov
insb
add
pop
push
addb
push
add
out
add
push
add
mov
test
add
push
add
mov
mov
addr16
lea
push
push
push
push
push
push
push
call
inc
loopne
lods
add
lods
push
add
add
add
icebp
add
add
add
add
pop
jno
add
mov
push
lahf
jnp
int
jl
mov
scas
lock
jle
iret
fs
jne
add
add
pop
mov
fldl
add
add
fbstp
fmull
push
push
push
push
lea
push
lea
push
push
call
roll
add
les
mov
add
test
jle
jmp
ret
lea
ljmp
rolb
add
add
stos
addb
add
ljmp
hlt
icebp
addl
jge
add
add
mov
lahf
add
add
jo
add
ja
lcall
add
mov
lea
pop
pushl
push
lea
push
lea
push
push
lea
push
push
push
call
add
shr
jmp
cli
rolb
add
add
add
mov
ja
cltd
shll
shlb
add
pusha
add
out
add
jne
mov
lahf
pop
stc
div
add
jae
sahf
add
in
add
xchg
add
cwtl
xchg
cwtl
add
add
pop
fadd
push
stos
lcall
add
mov
lea
pop
pushl
call
push
push
push
call
pop
add
scas
pop
add
add
inc
add
stos
add
int3
add
add
add
pop
add
mov
les
add
pop
mov
jb
lret
add
pop
push
add
push
mov
jp
add
mov
add
add
imul
out
add
add
mov
lea
pop
pushl
pushl
push
push
push
call
add
add
rolb
xchg
cwtl
xchg
ret
call
add
xchg
add
add
add
push
pop
enter
add
mul
lahf
add
jnp
add
rcr
movsb
cmpsl
mov
push
jp
mov
xchg
add
xchg
arpl
scas
int3
xorl
sahf
mov
add
imul
or
call
push
push
dec
add
push
and
add
xor
ror
add
shl
sub
ror
pop
rol
xor
pop
push
push
lea
push
push
push
push
call
push
jbe
shlb
add
std
mov
into
mov
add
fisubrs
mov
add
ja
add
shll
subb
fildl
filds
lahf
arpl
add
add
add
mov
add
insb
notl
sahf
mov
in
mov
add
lahf
lea
jle
mov
addl
mov
add
add
flds
add
xchg
out
fisubl
sbb
jne
push
lea
push
push
push
push
push
call
jns
jbe
mov
int
imul
ljmp
cmpsl
fld
add
cmpsl
add
rolb
int
scas
in
pop
xchg
add
add
add
incb
filds
add
mov
add
into
faddl
in
add
add
add
mov
jmp
add
mov
mov
add
add
mov
int3
lea
pop
call
push
push
push
sub
push
and
add
xor
sub
sub
shr
pop
shl
ror
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
add
ret
jns
mov
add
stc
pushf
xchg
xchg
jbe
add
nop
push
addl
pop
mov
popf
leave
test
jmp
andb
in
icebp
add
sti
lea
std
add
jl
mov
popf
imul
add
push
roll
fiadds
filds
enter
popa
sub
push
push
call
pop
add
add
jge
add
xchg
popl
add
jb
add
rolb
test
fucomip
mov
jge
add
mov
push
movsl
add
add
lahf
test
pop
xchg
cmc
add
push
add
mov
pop
add
add
add
jae
add
add
nop
add
xchg
add
aam
add
add
mov
lea
pop
push
call
push
push
lea
push
push
push
lea
push
push
push
call
fs
add
add
add
cmpsb
add
add
push
arpl
test
add
add
mov
add
mov
cld
mov
fistps
mov
add
jecxz
add
cld
add
mov
add
xchg
mov
mov
int3
movsb
jl
cli
add
mov
lea
pop
mov
push
lea
push
push
call
add
add
xchg
add
arpl
add
mov
in
mov
add
in
jge
js
add
rorl
add
stos
test
xchg
mov
fildl
push
add
movsb
ret
push
xchg
imul
out
mov
add
add
mov
cltd
mov
mov
mov
or
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
jecxz
faddl
mov
add
add
hlt
int
pop
flds
in
jbe
add
aam
mov
call
out
into
cwtl
lods
hlt
mulb
ljmp
add
addl
mov
mov
pusha
fwait
mov
push
test
add
je
ja
add
out
bound
add
add
add
add
mov
pop
push
mov
push
lea
push
push
push
push
call
cltd
add
cmpsl
scas
add
add
add
jmp
push
in
add
testb
push
mov
pop
xlat
push
jae
mov
add
add
add
add
std
stos
jns
enter
data16
add
jnp
push
cwtl
add
jno
add
mov
mov
mov
add
mov
add
pop
add
push
push
push
push
push
push
call
add
je
hlt
loopne
enter
add
add
rcrb
add
add
push
roll
add
xchg
mov
add
jno
std
jle
imul
add
lret
shrb
add
mov
popa
xorb
fadds
mov
int3
lea
pop
add
add
mov
push
push
push
push
push
push
push
push
push
lea
push
call
arpl
add
push
add
add
mov
pop
fildl
rolb
jb
mov
shlb
mov
fisubs
add
mov
aad
add
add
rol
enter
add
add
xchg
add
add
in
add
cltd
arpl
loop
add
arpl
xor
push
push
push
call
ljmp
pop
cmc
aam
sti
pop
add
shll
mov
sahf
add
add
add
mov
mov
repnz
mov
shl
pop
add
mov
add
rolb
add
pop
add
loope
fistpll
mov
lret
add
push
mov
into
mov
add
or
add
push
lea
push
push
lea
push
push
call
popa
icebp
pop
xchg
add
add
loop
imul
add
add
add
pop
mov
lahf
mov
les
add
add
nop
cld
loop
lcall
movsl
roll
add
ror
add
add
add
mov
js
push
out
add
add
ret
add
mov
pop
add
insb
mov
fmull
jne
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
add
stc
scas
pop
sahf
test
jno
scas
add
add
testl
add
stc
sahf
jno
popf
mov
jnp
ret
xchg
push
pop
imul
jmp
add
cmpsl
xchg
mov
add
mov
mov
add
add
mov
pop
test
pop
mov
into
jmp
cmpsl
add
pushf
leave
insb
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
mov
lods
lret
add
push
add
push
add
mov
arpl
ret
popa
xlat
sti
add
bound
jne
out
into
add
fcoms
add
lock
not
cmc
test
jle
jae
add
add
push
out
mov
push
add
mov
add
out
add
mov
lea
pop
mov
push
push
push
push
push
push
push
call
jmp
lahf
add
test
add
add
je
test
jle
mov
mov
add
add
imul
add
repnz
mov
cld
loop
jae
add
ljmp
lds
add
stc
outsl
imul
jno
cli
movsb
add
add
mov
out
out
add
pop
lods
in
mov
lea
pop
xor
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
imul
mov
add
add
add
add
add
jmp
xchg
hlt
lds
push
add
jo
add
loopne
mov
add
lret
repnz
mov
lahf
jl
out
add
into
les
add
xchg
ljmp
mov
xchg
add
ret
xchg
pop
lds
addr16
add
push
lea
push
push
call
call
mov
add
ret
mov
shrb
js
add
roll
pop
int3
cmpsb
add
lret
movsl
add
roll
aam
ret
xchg
add
add
stc
gs
add
negl
in
jae
movb
roll
push
mov
into
push
add
clc
pop
mov
add
add
pop
add
mov
add
add
add
pop
add
pop
mov
push
push
lea
push
push
call
jge
int
jl
fcmovne
add
xlat
arpl
std
add
add
in
popa
test
add
mov
jecxz
add
add
out
test
mov
add
add
ret
add
add
mov
sahf
add
add
pop
imull
xchg
fiaddl
roll
add
add
aam
jnp
add
add
jo
out
mov
lea
pop
xor
push
lea
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
mov
movsb
std
add
add
add
add
add
stc
jecxz
add
xchg
jl
jo
add
mov
jno
into
jmp
pop
add
mov
divl
test
repnz
jmp
gs
repnz
add
test
mov
icebp
lock
shll
jno
jns
add
xchg
mov
add
push
imull
push
mov
mov
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
call
add
movsb
mov
add
add
add
add
add
add
je
jmp
add
shr
add
mov
add
jae
add
add
enter
mov
add
add
les
pop
stos
add
push
cltd
mov
add
mov
add
scas
scas
add
popf
in
test
add
lahf
add
add
add
add
fildl
xchg
add
and
push
mov
push
push
lea
push
call
aam
add
aad
mov
push
out
add
add
bound
add
cwtl
faddl
mov
shrl
cmpl
aad
scas
arpl
add
add
mov
add
add
add
add
cmpsl
add
mov
add
pop
mov
pop
add
mov
add
add
pop
scas
clc
add
fildll
aam
bound
pop
xor
push
lea
push
push
push
push
push
push
push
call
popf
add
je
in
lods
push
repnz
fsubr
xchg
test
jno
push
add
popa
outsl
add
fcmovb
lahf
sahf
movsl
xchg
jns
add
add
mov
mov
jecxz
push
sti
push
push
fsubrp
add
mov
push
add
in
icebp
add
add
movsb
mov
aam
bound
pop
add
push
lea
push
lea
push
push
lea
push
push
push
call
cld
enter
mov
add
add
ljmp
mov
add
ffree
insb
add
lcall
add
jl
add
rolb
add
stos
pop
fcoml
add
les
add
lock
push
fxch
mov
arpl
mov
fimuls
insb
add
push
mov
add
pop
sub
push
push
call
stos
add
in
fildl
add
add
pop
mov
add
bound
mov
jbe
mov
add
in
xlat
push
xchg
in
les
mov
in
add
mov
xchg
popl
add
jno
add
les
lods
loopne
rolb
add
add
scas
stos
pop
mov
lcall
mov
lea
pop
pop
rep
push
push
push
lea
push
push
push
lea
push
push
push
push
call
fst
jnp
add
movsl
add
negb
aam
cmc
fcoml
add
add
add
mov
loope
fildl
add
add
jl
mov
add
pop
add
mov
add
std
cli
movb
insb
add
add
pusha
testl
pop
testb
xorb
push
add
mov
lea
pop
pop
mov
push
push
push
push
call
sahf
js
add
data16
out
test
add
push
call
add
add
sti
add
add
cld
in
mov
jno
int
add
add
idivl
add
add
fildl
mov
jo
add
add
testl
loope
addl
mov
lea
pop
add
push
push
lea
push
push
push
push
call
mov
add
xchg
cmc
pop
mov
lret
add
add
loope
fmull
lock
icebp
add
insb
mov
mov
sahf
aam
add
add
faddl
roll
add
int
enter
roll
stos
mov
add
js
mov
add
add
aad
push
lret
add
add
add
roll
lea
pop
add
add
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
aam
hlt
shrl
mov
add
add
fiadds
push
add
lods
add
ret
mov
fsts
add
mov
pop
xchg
stos
add
mov
pop
lahf
nop
scas
fcoms
add
add
test
bound
add
fisubrs
add
add
enter
data16
add
push
push
push
push
push
call
add
add
mov
add
add
add
add
add
cmpsl
shlb
roll
xchg
add
xchg
add
pop
add
in
outsl
pop
add
lock
shr
addb
int
jle
add
add
add
out
add
fldl
rolb
loop
mov
mov
cli
int
fistpll
lea
pop
add
push
push
lea
push
push
call
jae
add
stos
bound
testb
lock
mov
addb
add
mov
jmp
add
fdivrs
mov
ljmp
add
add
add
mov
add
lret
pushf
enter
faddl
fildl
add
mov
cld
add
cltd
add
add
add
add
and
int3
lea
pop
mov
push
push
push
call
in
les
mov
push
add
iret
pop
mov
fldt
add
int
mov
add
add
js
mov
out
fnstcw
mov
xlat
push
push
add
add
add
add
add
aad
jge
mov
pushf
add
movsb
mov
xchg
pop
mov
add
xchg
out
cmc
je
fldt
mov
or
adc
push
push
push
lea
push
call
add
pop
fisubrs
xchg
add
add
cli
cwtl
into
fiadds
add
jmp
fprem1
mov
lods
neg
repnz
pop
movsl
add
add
fisubs
add
jo
call
pop
mov
notb
scas
add
sahf
jecxz
movsl
fistpll
test
xchg
rcrb
fnsave
add
add
mov
fwait
mov
add
add
roll
jp
fmull
les
push
push
call
add
push
xchg
fwait
aad
pop
pop
addb
mov
add
xchg
add
add
insb
add
stos
add
test
add
mov
mov
add
add
fisubrl
add
add
add
lea
mov
add
add
jecxz
push
xchg
enter
jnp
xorl
fs
aad
loopne
aam
mov
lea
pop
mov
push
push
push
push
call
add
add
add
pop
xlat
add
hlt
push
loopne
out
out
jmp
add
add
add
add
gs
add
add
push
mov
mov
add
mov
add
addb
roll
cmpl
add
lret
fsubrl
in
add
add
mov
iret
loop
add
pop
xor
push
push
push
lea
push
lea
push
lea
push
push
call
pop
mov
mov
in
aam
add
faddl
mov
add
push
mov
shll
add
jl
add
add
xchg
add
add
add
add
add
lock
push
lock
add
imul
in
add
repnz
add
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
pop
add
andl
mov
xorb
add
add
cli
cwtl
add
test
in
xchg
shlb
add
add
add
gs
gs
push
fxtract
popf
add
add
cmpsl
pop
mov
push
cli
lahf
mov
add
mov
notb
add
mov
lea
pop
add
push
lea
push
push
push
push
push
call
add
lods
add
sahf
xchg
pop
enter
mov
add
xchg
add
je
mov
lods
in
call
xchg
fistpll
movsl
add
mov
lods
xchg
flds
add
movsb
add
add
add
mov
lret
fldl
out
pop
cwtl
stos
cld
addl
rcll
add
add
cwtl
fadds
mov
lea
pop
add
push
push
push
push
push
call
out
sti
iret
mov
pop
add
add
insb
enter
je
pushf
popf
cld
mov
add
xchg
add
add
add
mov
add
in
add
ljmp
add
add
pop
mov
pop
aam
add
pusha
push
ficomps
jns
add
add
cwtl
lods
pop
add
cmpsl
rol
push
add
mov
lea
pop
mov
push
push
sub
dec
push
sub
add
sub
shr
sub
pop
shr
not
pop
push
push
call
pop
add
std
jae
stos
add
add
mov
push
add
fs
pop
movl
pop
fiadds
cmpsb
in
add
andl
addr16
add
mov
add
push
mov
jp
add
pop
mov
andb
add
enter
incb
jns
add
into
cmc
fisubrs
add
add
add
ljmp
fadds
add
lcall
lret
mov
fidivrs
mov
lea
pop
pushl
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
stos
jne
add
add
add
cmpl
cwtl
add
push
jp
mov
data16
add
add
push
add
jp
lock
in
ja
mov
add
add
add
add
jne
add
add
add
add
in
sub
mov
mov
add
clc
scas
test
cld
lea
pop
call
push
push
push
dec
push
or
not
add
shr
sub
add
shr
pop
sub
pop
push
push
call
mov
fnstsw
mov
ja
add
mov
add
add
add
movsb
rorb
flds
add
movsl
pusha
fadds
mov
out
leave
mov
add
mov
addr16
int
add
out
xchg
add
addb
add
jp
jno
add
add
subb
lea
pop
push
push
lea
push
push
push
push
call
imul
test
add
add
clc
add
rcr
jmp
mov
mov
mov
xchg
test
add
arpl
add
jns
add
sti
arpl
add
imul
add
add
test
add
pop
jle
fcmovu
add
mov
sahf
add
hlt
add
mov
mov
lea
pop
push
call
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
loopne
test
rolb
add
cli
nop
add
add
add
lahf
add
xchg
add
jns
mov
out
cmpsl
add
flds
add
add
lret
pushf
sahf
aam
lahf
add
add
pop
out
xchg
filds
shr
lods
add
test
mov
jmp
pop
arpl
add
pop
flds
call
sub
push
push
push
lea
push
push
push
push
call
imul
insb
add
mov
pop
add
lret
add
xchg
mov
fs
mov
mov
shlb
mov
lret
add
lahf
bound
int
jo
push
add
mov
add
add
mov
fildll
add
out
ret
add
xchg
test
movsl
stos
xlat
repnz
sbb
push
mov
push
lea
push
push
push
call
icebp
out
ljmp
add
add
in
mov
jnp
cli
jge
int
add
pop
clc
add
sti
jge
add
add
add
add
mov
push
mov
xchg
mov
roll
jne
lock
nop
add
xchg
movsl
pop
jl
mov
in
addr16
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
add
add
add
iret
add
add
add
scas
jp
xchg
mov
add
movsb
jnp
add
jnp
jne
mov
mov
fdivs
add
add
jnp
cmc
repnz
add
mov
mov
push
into
add
mov
add
add
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
cli
add
add
loop
pushf
add
add
iret
push
xchg
fwait
mov
add
mov
add
jno
pop
jno
pop
lcall
add
add
clc
mov
add
add
push
int3
jns
pop
std
jne
add
mov
lret
sti
xchg
loope
popa
out
rolb
add
into
add
sub
ret
inc
dec
add
push
push
push
push
call
pusha
bound
add
cmpsb
mov
sub
arpl
enter
pop
mov
test
sbbl
add
call
pop
aam
add
aad
add
xchg
mov
push
add
add
add
add
add
mov
push
add
add
rcl
fsub
add
add
xchg
pop
mov
add
jae
add
add
add
pop
mov
xor
push
shr
shr
pop
add
push
mov
xor
push
ror
pop
add
pop
push
rol
pop
mov
push
push
push
push
push
lea
push
call
add
add
in
add
xchg
pop
add
add
iret
jno
add
add
add
add
xchg
lea
add
jecxz
add
add
add
enter
mov
mov
add
add
mov
add
mov
add
out
insb
ret
movsb
insb
push
add
mov
add
mov
xchg
add
add
add
cld
lea
pop
xor
push
push
push
push
push
push
push
push
push
lea
push
call
test
add
mov
pop
add
les
nop
mov
movsb
xchg
add
push
push
add
gs
add
add
add
hlt
aam
movsb
jo
leave
bound
mov
test
add
add
push
lods
xchg
rolb
leave
addl
fwait
xchg
cmp
lds
fidivl
pop
popa
add
iret
jb
into
jle
mov
hlt
lea
pop
add
rep
push
xor
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
filds
roll
add
imul
push
mov
in
xchg
add
sahf
call
add
mov
data16
add
mov
add
mov
add
je
add
in
add
add
call
add
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
push
add
iret
add
pop
fnsave
xchg
mov
add
mov
add
addb
out
add
scas
jno
out
mov
loop
add
add
add
push
fldt
shlb
mov
add
push
shll
shl
ljmp
add
add
add
add
sti
add
add
add
xlat
scas
jp
stc
mov
add
mov
lea
pop
add
or
je
push
push
lea
push
push
lea
push
push
push
push
push
push
call
jmp
add
pop
mov
add
flds
xchg
xchg
pop
xchg
cltd
add
mov
jmp
jo
add
addb
xchg
add
add
add
add
lret
movsb
lods
add
js
callw
add
jle
jne
mov
add
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
loope
cld
int
filds
add
add
roll
movb
clc
add
jmp
add
add
mov
imul
cmpsb
mov
andl
cmc
xchg
filds
pop
add
add
xchg
add
jne
lock
add
loope
add
jle
add
add
add
mov
rolb
ja
add
add
in
jl
jns
ja
out
xchg
mov
lea
pop
xor
push
push
push
push
push
push
push
call
add
add
add
mov
add
ret
test
add
popl
add
fsubrs
add
aam
movl
mov
iret
add
pop
add
mov
add
mov
mov
test
add
lods
add
fsubrs
jecxz
lahf
rcrl
add
cltd
mov
lea
pop
add
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
out
cld
out
int
add
add
add
addb
fildl
add
add
fldl
outsl
jb
pop
add
mov
add
add
mov
mov
xchg
arpl
stos
add
add
push
add
out
aad
add
into
add
add
add
add
rolb
jbe
jecxz
mov
out
out
idiv
aad
stos
out
xchg
mov
les
push
xor
sti
push
push
push
push
push
push
push
lea
push
call
lahf
test
add
mov
add
loop
add
add
testb
mov
push
add
std
lahf
mov
mov
add
add
add
popa
add
mov
add
add
jne
add
lods
jmp
ja
add
add
pop
jno
mov
lea
pop
add
add
push
push
push
lea
push
call
add
int3
mov
fcmovnu
lea
xchg
stos
testl
add
mov
mov
add
mov
popa
movb
add
add
in
mov
insb
push
in
test
jns
add
fcmovb
add
mov
add
add
add
fildl
add
sbbl
add
add
enter
mov
lds
add
push
scas
mov
mov
sti
pop
addl
mov
lea
pop
push
push
add
not
xor
pop
mov
push
push
lea
push
call
pop
andl
jo
mov
add
add
add
add
fisubrl
jne
add
add
mov
add
add
mov
loope
imul
test
add
jae
popa
jb
xchg
lea
xchg
add
ljmp
push
add
pusha
add
into
stc
add
or
jne
add
call
xchg
add
mov
lea
pop
xor
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
ljmp
ljmp
add
mov
out
fs
je
add
add
add
aad
add
movb
icebp
xchg
push
add
jl
loopne
shlb
add
movb
lahf
lahf
add
cltd
add
jns
mov
iretw
pop
add
xlat
in
jne
add
mov
mov
add
arpl
add
push
sub
sub
lea
pop
add
push
push
push
push
call
jle
xchg
mov
hlt
mov
add
flds
incb
cwtl
add
mov
mov
je
pop
add
lahf
sahf
add
add
bound
mov
pop
add
int
loop
add
add
add
add
add
add
into
add
mov
pushf
add
add
fwait
testb
mov
add
mov
lea
pop
pop
rep
mov
push
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
shrb
in
add
pop
rorl
addl
fdivs
addl
add
add
add
cmc
leave
jae
loopne
add
mov
insb
add
mov
cmpsb
aad
add
add
pop
add
arpl
test
in
push
test
add
xlat
add
lods
xchg
rorb
push
fadds
data16
add
fmull
or
push
lea
push
lea
push
push
lea
push
call
rcl
add
addl
add
add
add
ja
push
rcll
data16
add
loop
xchg
add
add
int
call
add
imul
cmc
push
add
jns
fsts
out
add
add
pop
mov
add
add
xor
add
add
popf
test
add
shr
mov
lea
pop
add
push
xor
pop
or
je
push
push
push
push
push
push
push
push
push
push
call
imul
add
add
add
flds
cltd
ret
xchg
addb
stos
add
xchg
add
push
add
mov
add
mov
loop
add
add
add
add
add
scas
ja
insb
enter
jge
loop
loopne
in
add
jbe
mov
loop
out
int3
outsl
add
add
jle
add
je
int3
lea
pop
mov
push
rol
sub
pop
add
add
rep
push
dec
sub
sub
add
pop
pop
push
push
sub
push
or
inc
add
add
inc
sub
sub
sub
inc
add
pop
lea
pop
pop
push
lea
push
push
call
je
add
add
add
xchg
test
add
fiaddl
add
insb
add
add
ja
into
mov
mov
loop
lret
fcmove
lods
ret
fwait
mov
cld
js
xchg
pop
nop
jmp
mov
stc
leave
add
loope
sti
pop
xchg
int
rcrl
add
orl
add
addb
icebp
push
push
add
or
mov
push
rol
pop
mov
mov
push
lea
push
lea
push
push
push
push
push
push
call
xchg
cmpsb
pop
add
stc
add
add
test
loop
mov
add
hlt
loop
hlt
cwtl
cwtl
add
add
repnz
imul
jnp
iret
loop
popf
les
add
add
add
mov
add
pop
mov
mov
add
xchg
stc
add
js
movsl
repnz
add
pop
add
mov
add
cld
stc
ljmp
test
int3
lea
pop
jmp
push
push
call
out
nop
add
add
jno
pop
add
stos
add
add
in
shll
add
cli
add
test
mov
add
mov
xchg
mov
leave
jmp
push
movsb
out
pop
lcall
add
add
std
mov
popl
imul
popl
jp
outsl
add
add
pop
enter
stos
add
sti
mov
lea
pop
push
push
push
push
push
call
add
xchg
pop
fcomps
pop
add
ret
mov
add
loopne
test
loope
rcl
add
jge
loopne
sti
jmp
add
add
jae
add
xchg
imul
int3
add
pop
add
imull
add
add
cld
testl
add
push
add
add
mov
lea
pop
mov
push
inc
xor
rol
pop
add
push
push
lea
push
lea
push
push
lea
push
call
testl
add
aam
add
xchg
pop
iret
pop
out
add
pop
mov
notl
add
lds
aad
push
clc
lcall
mov
jcxz
xlat
in
add
sahf
leave
cmpsb
in
mov
jne
hlt
jae
fisubrs
lret
shlb
add
fmull
push
not
add
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
loope
add
mov
jnp
add
add
mov
stos
jge
add
addl
xchg
add
push
fs
roll
sar
jle
add
push
add
lods
aad
pop
add
mov
mov
in
add
shlb
add
add
fistps
fildl
shr
lock
xorb
add
add
mov
lea
pop
push
push
push
push
push
push
push
push
call
mov
add
add
cmc
hlt
out
pop
jb
add
ja
pop
add
lea
add
push
lahf
add
pop
mov
add
add
cltd
mov
testl
mov
add
ret
xchg
loope
add
mov
add
add
add
add
add
add
mov
push
add
pop
mov
ja
mov
lea
pop
push
push
ror
add
add
shr
pop
mov
push
shr
ror
pop
pop
pop
pop
push
push
push
push
push
push
lea
push
call
add
jnp
add
stc
mov
add
ficompl
pop
add
lods
add
jae
add
mov
out
testb
xchg
cli
add
add
add
std
out
add
xchg
ret
add
insb
jmp
add
add
add
insb
adc
push
mov
add
xchg
add
adc
sbb
pop
leave
push
sub
xor
add
pop
ret
push
sub
inc
pop
push
mov
push
inc
add
xor
add
pop
add
push
lea
push
push
push
push
call
pop
lock
push
mov
add
add
add
jecxz
jl
mov
push
je
add
mov
add
leave
pop
pop
add
jnp
add
xchg
clc
aad
fwait
into
in
add
mov
insb
jbe
jmp
add
aam
add
aam
lock
mov
fbstp
mov
cmp
scas
mov
int3
jns
mov
lea
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
add
jge
add
loopne
push
js
pop
sahf
add
lret
negl
add
jb
add
xchg
add
mov
mov
add
add
pop
push
rcrl
jle
add
nop
xchg
add
enter
lea
in
ljmp
test
add
push
aad
add
xor
pusha
sbb
movl
push
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
clc
jae
jge
cmpsl
add
into
add
cltd
adcl
lahf
jmp
add
add
clc
add
stos
jno
add
fstl
test
add
scas
mov
xchg
add
lods
add
ja
add
lock
add
pusha
add
aam
pop
in
xchg
mov
xlat
lods
test
les
add
icebp
mov
mov
lea
pop
addl
push
push
push
call
popl
rolb
add
add
jnp
add
add
je
js
cmpsl
push
add
add
scas
adcl
cli
call
nop
mov
enter
xchg
mov
mov
cltd
testb
add
arpl
add
lret
loop
add
fldl
add
mov
pop
enter
add
sarb
movb
mov
lea
pop
test
je
mov
pop
push
pop
pop
push
shl
add
dec
ror
pop
pop
pop
push
xor
shr
xor
xor
pop
leave
ret
push
sub
pop
push
mov
push
rol
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
out
jmp
in
stos
push
je
imul
mov
add
add
add
mov
mov
mov
std
xchg
lret
push
add
loopne
leave
roll
test
add
add
add
lods
lea
arpl
add
add
add
add
jae
icebp
in
imul
add
pop
test
in
add
add
pop
push
push
push
push
call
clc
int
stc
cmpsl
mov
add
in
add
lret
add
pop
ljmp
pushf
ror
lcall
add
add
add
add
add
add
stos
add
pop
add
mov
aam
xchg
add
add
add
add
out
add
popf
add
cmpsl
test
push
pop
jmp
ret
iret
add
shll
add
mov
lea
pop
push
testl
addl
push
ror
not
rol
pop
push
call
mov
push
push
call
stos
push
enter
lahf
add
mov
mov
mov
popl
add
mov
add
mov
add
jge
add
fiadds
mov
add
add
lahf
add
cmpsb
add
ret
pop
add
add
mov
add
add
xchg
mov
mov
mov
lea
pop
pushl
push
lea
push
push
push
push
push
call
add
add
mov
mov
insb
aad
test
add
xchg
add
add
add
loope
mov
mov
idiv
xchg
mov
add
mov
roll
out
xchg
imul
add
int3
add
add
add
movsl
add
faddl
add
xlat
jp
mov
lea
pop
push
push
call
push
inc
shl
sub
ror
pop
cmpl
jne
push
push
lea
push
push
push
push
lea
push
push
call
mov
xchg
pop
mov
pushf
jecxz
push
add
movb
add
add
lret
jecxz
imul
rolb
loope
add
mov
jbe
pop
push
mov
add
pop
jl
xchg
pop
add
fadds
add
mov
add
add
stos
pop
rcrb
add
mov
add
add
mov
lea
pop
pop
pop
pop
push
rol
not
shl
pop
pop
leave
ret
push
push
push
call
jae
int3
fisubl
rolb
pop
leave
add
add
xchg
jo
add
jnp
add
push
xchg
pushf
popa
add
push
cwtl
mov
bound
xchg
add
jae
out
pop
add
jne
lret
pop
sti
add
add
cmpsb
add
push
cmpsb
add
lea
gs
lcall
sahf
sti
xchg
stos
lds
outsl
add
sarb
add
movsb
mov
or
push
push
lea
push
push
push
push
push
push
call
fadds
mov
mov
add
add
add
xchg
add
sti
iret
lahf
mov
xchg
hlt
imul
add
fdivrs
imul
add
stc
add
push
test
add
repnz
add
add
add
loope
add
add
add
lcall
lea
pop
mov
add
push
not
sub
add
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
mov
jo
add
add
shl
add
add
fstps
xchg
mov
add
clc
push
stos
sti
add
mov
stc
out
add
cmpb
arpl
add
in
add
add
mov
jecxz
add
add
xchg
add
jmp
jno
add
pop
mov
lea
pop
push
push
push
push
push
call
rolb
mov
push
shr
pop
ficoml
mov
add
mov
fcoml
add
int
ficoml
add
push
rolb
rolb
mov
fsub
mov
add
add
call
add
add
neg
les
nop
call
add
shlb
mov
imul
pop
push
push
lea
push
call
mov
add
xchg
aad
mov
add
add
lahf
push
ffree
sub
stos
mov
int3
enter
add
fstpl
add
cld
add
stos
into
mov
mov
cwtl
mov
mov
mov
push
jecxz
rolb
sti
jl
pop
add
mov
sahf
xchg
roll
mov
data16
inc
cld
add
pop
push
call
push
not
pop
push
push
sub
pop
call
subl
push
push
call
fldl
mov
xchg
xchg
add
pushf
add
ljmp
add
loopne
lock
shlb
add
add
mov
add
lock
jno
addb
mov
gs
lret
lods
add
mulb
add
add
mov
cmpl
arpl
pop
cmpl
jne
pop
pop
push
push
lea
push
push
call
stos
add
pop
lahf
cmpsb
fs
in
add
add
imul
mov
xchg
add
add
fsubl
call
add
mov
add
add
add
add
in
add
loop
mov
add
out
add
ffree
addb
scas
shr
loop
add
mov
lea
pop
pop
pop
leave
push
push
lea
push
push
call
js
add
pop
stc
add
add
test
xorl
xchg
xchg
mov
lea
add
int
pop
pop
add
add
rolb
add
pop
add
lcall
add
add
cmpsb
stos
lret
add
add
jp
aad
imul
cwtl
hlt
int
xchg
in
push
mov
add
hlt
lea
pop
ret
push
lea
push
push
push
push
lea
push
push
call
add
mov
lds
add
xchg
cld
add
cli
std
sti
fdivp
pusha
add
add
add
add
mov
loope
ja
add
mov
movl
cmpsl
xchg
call
xor
add
fmul
icebp
add
add
add
add
test
notl
xchg
icebp
add
add
add
add
addl
pop
cld
add
lret
mov
lea
pop
push
mov
push
push
push
push
push
call
imul
add
cmpsb
add
add
aad
mov
pop
mov
scas
jl
icebp
aam
add
sahf
add
popf
ja
add
add
add
push
pusha
jne
add
mov
mov
cmpl
add
add
add
fdivs
add
add
add
mov
add
les
jge
xchg
add
pop
add
push
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
out
add
ficompl
ret
notl
movsl
add
add
stc
call
test
add
ja
add
add
pop
add
std
pop
add
add
rcr
add
push
add
add
mov
add
roll
mov
add
gs
sti
imul
arpl
add
popa
add
add
scas
icebp
movsl
add
pop
add
pop
push
push
push
dec
pop
mov
push
push
push
push
call
add
xchg
imul
lock
cli
mov
ljmp
insb
add
add
nop
add
add
jb
movsb
add
popa
add
iret
add
lret
movb
jns
add
add
add
push
add
int3
add
fsubrl
add
jae
sti
out
fildl
mov
jge
add
add
lea
pop
lea
sub
mov
push
shl
sub
xor
dec
pop
shr
add
mov
push
lea
rol
pop
mov
add
push
push
push
call
mov
add
fldl
add
ja
cmpsl
add
add
add
test
fistps
popl
mov
imul
push
test
add
add
lods
xchg
mov
leave
fsubr
add
loope
jle
add
add
mov
add
add
push
stos
push
add
add
in
cltd
mov
loopne
pop
mov
add
ja
mov
lea
pop
add
mov
push
add
inc
pop
mov
push
lea
push
call
push
jo
nop
iret
mov
mov
gs
cmpsb
mov
jle
add
fwait
add
pop
add
add
scas
js
add
jb
add
in
cmpsl
xchg
add
jl
fs
push
aad
cli
test
outsl
ficoms
shrb
add
add
loopne
add
add
add
push
add
mov
ret
test
test
mov
int
imul
pop
push
mov
add
or
pop
outsl
jne
push
lea
push
call
add
add
mov
add
testl
ret
cmc
push
in
mov
mov
aam
aad
add
iret
mov
in
lods
nop
ja
mov
jmp
shll
mov
mov
mov
add
push
add
jo
xchg
add
add
pushf
jo
lret
jecxz
add
sbbb
cltd
int3
scas
add
filds
mov
aad
fcoml
or
cwtl
fadds
add
jne
mov
push
rol
sub
xor
pop
movl
jmp
mov
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
movsl
pusha
jp
shr
add
add
out
add
pop
add
mov
jnp
mov
shlb
call
push
cld
mov
iret
in
mov
add
loop
add
push
add
push
stos
pusha
mov
stos
lods
add
mov
lea
pop
mov
push
lea
push
push
push
push
push
lea
push
push
call
cld
pop
int
cwtl
mov
stos
add
mov
mov
jae
add
add
jae
add
shl
add
add
add
add
add
adc
add
lods
in
mov
add
add
je
xor
jae
cli
add
add
popf
fsubp
mov
mov
lea
pop
sub
jne
push
push
call
mov
into
repnz
mov
test
add
cmpsl
pop
pop
fldl
lds
jb
roll
xchg
push
xchg
add
add
mov
flds
add
mov
add
add
jnp
mov
add
movsl
adcb
cli
jns
xchg
popf
pop
add
popa
mov
pop
add
ret
les
inc
adc
push
push
push
push
lea
push
push
push
push
call
add
add
bound
add
push
addl
add
leave
add
cmpsb
push
add
cld
mov
add
add
lret
add
add
xor
push
add
add
mov
add
loop
lods
pop
add
ljmp
imul
aad
lahf
lret
into
pop
add
leave
enter
add
in
mov
lea
pop
movl
jmp
push
push
push
push
push
push
push
call
add
add
add
insb
mov
sahf
add
add
add
add
addb
add
mov
add
mov
add
ljmp
mov
roll
hlt
add
addr16
jne
jp
add
mov
addb
mov
bound
addl
mov
mov
lea
pop
mov
push
push
call
xchg
outsl
pop
add
jo
jl
add
cltd
ficomps
imul
pop
stc
movsb
sahf
pushf
cmpsb
add
les
mov
add
add
add
add
xchg
xchg
fistl
sahf
ret
add
mov
aam
cmpsl
mov
add
add
push
clc
test
jb
add
fmull
nop
mov
add
cmp
jne
push
lea
push
lea
push
push
push
call
add
push
add
cli
add
pop
test
jnp
int3
add
jle
add
scas
call
add
add
mov
andb
mov
addb
add
add
add
neg
popf
add
add
add
hlt
mov
add
add
mov
push
fcomps
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
shll
ret
pop
out
add
add
je
mov
jbe
add
mov
stos
add
add
xchg
push
int
cltd
fwait
add
mov
add
add
cmpsl
imul
add
add
movsb
jle
add
add
xchg
lret
add
pushf
pop
add
loopne
int
int3
xchg
scas
add
xchg
add
popa
bound
clc
add
add
mov
lea
pop
movl
push
push
push
push
call
pop
add
rcll
xlat
add
add
scas
xchg
out
add
add
add
push
mov
cld
add
outsl
loopne
addr16
jb
add
ficoms
data16
xchg
pop
into
xchg
roll
jecxz
add
imul
add
add
add
mov
add
pushf
add
add
imul
add
int3
lea
pop
jmp
mov
cmpw
jne
push
push
push
call
jle
scas
add
add
icebp
lock
add
add
int
aam
movsl
out
adcb
lods
mov
aam
add
mov
test
fmul
add
pusha
pop
popa
jae
add
add
pushw
add
out
hlt
add
pop
mov
add
leave
add
mov
mov
cmpsb
mov
add
test
add
mov
lea
pop
mov
movl
push
lea
push
push
push
call
call
add
stos
mov
add
test
cmp
fildl
mov
ret
in
add
cld
add
add
std
mov
add
add
add
add
add
mov
add
mov
int3
push
fucom
xchg
rcr
add
outsl
add
out
add
imul
add
mov
mov
add
cli
add
add
mov
lea
pop
jmp
pushl
push
xor
not
shr
add
pop
pop
push
push
push
push
call
add
std
push
mov
add
shlb
gs
cli
jp
mov
mov
mov
mov
lds
stos
popa
stos
in
jmp
imul
add
cltd
xchg
add
add
lock
add
test
add
add
pop
add
add
jnp
addl
add
add
mov
imul
add
into
out
lock
mov
lea
pop
mov
push
not
xor
pop
mov
mov
push
push
not
shr
xor
push
or
inc
add
ror
add
add
inc
sub
sub
shr
dec
ror
pop
xor
pop
push
add
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
cmpsl
mov
add
mov
add
jne
add
mov
add
push
add
mov
add
rorl
jmp
gs
sar
add
pop
add
add
add
icebp
nop
push
add
add
add
xchg
push
cmc
add
mov
add
push
push
add
add
imul
call
cmpl
je
push
push
push
or
inc
add
sub
sub
sub
pop
lea
xor
pop
push
shl
pop
push
push
xor
rol
ror
pop
call
push
push
push
lea
push
lea
push
lea
push
push
push
call
xchg
add
cli
nop
add
add
add
in
mov
xchg
add
push
fisubrl
add
enter
leave
hlt
loop
add
add
add
out
popa
add
xchg
loop
loope
add
add
add
xchg
mov
hlt
pusha
push
fildl
add
add
jb
mov
add
clc
push
aad
call
add
ja
les
js
int3
fldz
ret
loop
add
push
push
xor
rol
add
push
push
pop
add
add
add
sub
rol
not
pop
xor
shr
ror
pop
push
pop
push
push
shl
pop
call
cmpl
je
push
push
not
shr
push
and
add
lea
shr
sub
sub
add
shr
pop
rol
pop
push
shr
ror
pop
push
push
push
push
call
push
add
jl
mov
lret
lods
popf
add
add
in
add
testl
out
rol
jmp
fwait
lret
add
add
add
add
add
jne
add
pusha
cli
add
icebp
add
repnz
jl
int
mov
add
add
jmp
add
add
cli
add
add
mov
lea
pop
call
push
push
push
push
push
push
push
push
lea
push
call
data16
imul
lahf
add
ljmp
add
xchg
add
add
add
fiaddl
add
add
aam
sti
add
jmp
pop
add
add
add
add
add
add
add
add
clc
scas
js
add
rorb
add
movsl
jmp
add
insb
lods
push
aam
les
pop
cmpl
je
push
push
sub
push
and
add
lea
sub
rol
pop
pop
push
push
shr
ror
pop
call
push
add
ror
shr
pop
cmpl
je
push
push
inc
shl
push
or
not
add
not
sub
shr
dec
pop
add
shl
sub
dec
pop
push
xor
pop
push
call
cmpl
je
push
push
dec
rol
add
add
push
sub
add
shl
shr
sub
ror
pop
dec
pop
push
lea
push
lea
push
call
add
fldcw
out
lock
add
add
test
loopne
std
add
add
pop
adc
loopne
mov
fucomp
add
rolb
jne
xchg
cmpl
cmpl
jo
add
test
sti
push
add
icebp
lds
int
push
loopne
add
xchg
add
mov
add
mov
lea
pop
push
call
cmpl
je
push
push
ror
shl
sub
push
or
not
add
sub
ror
rol
xor
sub
lea
pop
ror
add
sub
pop
push
push
push
lea
push
lea
push
call
rolb
hlt
add
iret
xchg
jecxz
movsl
out
subl
stc
leave
pop
mov
pop
jmp
ficompl
test
cmc
add
pop
add
add
lcall
add
add
rcrb
jnp
add
add
fwait
movsl
out
pop
pushf
flds
xchg
stc
sahf
movsb
mov
fadds
loope
faddl
add
lods
aam
mov
pusha
adc
push
call
cmpl
je
push
push
add
lea
push
or
not
add
add
add
inc
lea
sub
not
xor
add
dec
pop
not
inc
pop
push
inc
inc
pop
push
call
push
lea
push
call
fcoms
xchg
jns
mov
add
test
add
outsl
fcom
add
mov
add
add
sti
mov
mov
add
idivl
add
movsb
add
nop
icebp
mov
add
jecxz
add
add
add
mov
ficoml
add
scas
mov
cltd
icebp
rcrb
push
add
fldl
jo
aam
bound
pop
cmpl
je
push
push
sub
sub
push
and
add
lea
dec
sub
sub
lea
add
add
pop
rol
sub
pop
push
not
not
pop
push
push
not
add
rol
pop
call
push
sub
ror
shr
pop
cmpl
je
push
push
push
push
pop
add
not
inc
sub
shl
add
xor
pop
sub
sub
pop
push
push
shr
sub
pop
call
push
dec
sub
pop
cmpl
je
push
push
inc
inc
sub
push
push
pop
add
not
sub
add
sub
sub
pop
add
sub
pop
push
sub
inc
xor
pop
push
push
push
lea
push
call
add
add
bound
add
pop
add
js
cmpl
data16
jecxz
add
lds
add
add
add
imul
in
add
xchg
pop
aam
in
pushf
push
add
fisubrl
add
mov
cltd
push
add
add
add
xchg
int3
fsubrl
mov
lea
pop
call
push
add
rol
dec
pop
cmpl
je
push
push
add
sub
push
or
inc
add
sub
ror
lea
sub
shr
pop
inc
lea
pop
push
push
lea
push
push
push
push
push
call
repnz
imul
data16
mov
sarb
pop
fisttpl
add
addb
add
out
add
xchg
mov
add
add
add
mov
add
mov
pop
xchg
pop
add
jb
out
add
lret
ret
xchg
lods
add
add
add
add
push
movsl
lds
js
in
lret
add
loop
add
add
lea
pop
call
cmpl
jne
mov
push
rol
lea
pop
movl
push
xor
pop
jmp
xor
pop
push
add
pop
pop
pop
push
push
lea
push
call
jecxz
add
mov
mov
add
add
add
lahf
mov
pop
mov
add
add
add
xchg
fistpll
add
add
pop
lods
jmp
pop
leave
je
jnp
pop
mov
push
mov
xchg
sti
icebp
add
add
add
or
pop
leave
ret
push
rol
sub
add
pop
push
push
add
sub
pop
mov
add
cmpl
jne
push
push
rol
add
add
push
push
pop
add
add
sub
dec
add
pop
inc
dec
rol
pop
push
ror
not
pop
pushl
push
push
push
lea
push
lea
push
push
call
stos
outsl
iret
jge
aad
out
xorb
imul
xchg
mov
fldcw
cld
fldenv
add
lret
imul
add
jle
cmp
int3
add
leave
add
add
add
jae
add
push
je
stos
add
add
in
movsl
fldenv
mov
lea
pop
call
push
rol
pop
push
call
jmp
push
push
push
push
push
push
push
push
call
add
mov
test
fildl
idiv
test
not
mov
add
add
addb
sahf
shrl
add
add
xchg
push
add
fsubl
movsl
add
add
je
leave
add
add
jb
push
add
add
xchg
je
add
pop
fadds
mov
lea
pop
cmpl
je
push
push
call
mov
lret
add
rolb
add
in
test
mov
test
add
add
add
icebp
iret
add
add
int3
out
add
add
scas
flds
jnp
pop
add
popa
arpl
pop
fiaddl
mov
add
mov
in
lods
add
scas
lret
add
add
aad
fs
mov
mov
mov
jns
out
in
push
jnp
fiadds
push
mov
xchg
jmp
cld
lea
pop
cmpl
jne
push
shr
pop
leave
push
not
add
dec
pop
add
pop
pop
push
lea
pop
pop
pop
leave
push
shr
shr
add
dec
pop
add
push
sub
pop
ret
push
not
sub
pop
jmp
push
shr
pop
cmpl
jne
push
push
shr
push
xor
add
inc
rol
rol
sub
dec
pop
add
sub
pop
push
add
pop
pushl
push
rol
pop
call
push
push
add
ror
lea
pop
call
jmp
cmpl
jne
push
xor
add
shr
shl
pop
mov
push
pop
mov
jmp
push
dec
pop
push
push
shl
pop
pop
push
lea
push
push
lea
push
push
push
push
call
add
push
out
add
mov
testl
enter
add
sti
push
jl
mov
add
lods
in
cli
mov
add
add
add
xchg
arpl
xchg
add
mov
fs
loope
shlb
pop
xchg
add
xchg
add
mul
pop
loop
jb
fstpt
add
push
jbe
ficomps
mov
insb
jmp
add
pop
dec
jne
call
jmp
push
sub
inc
sub
pop
call
push
push
shr
rol
push
and
add
not
sub
ror
pop
sub
pop
push
add
lea
not
sub
pop
pushl
call
push
xor
add
sub
pop
push
push
pop
call
push
shr
pop
mov
push
inc
pop
lea
push
push
add
xor
push
push
pop
add
not
lea
sub
rol
dec
pop
inc
inc
pop
push
push
lea
push
push
push
push
push
push
call
jno
mov
mov
add
ficoms
jle
mov
push
lods
fbld
add
jge
pop
pop
pop
add
add
lds
aam
add
add
mov
jb
mov
enter
add
jno
push
stos
test
lds
cmc
add
jecxz
test
add
add
pop
add
ja
lret
fs
movl
add
bound
pop
pushl
push
inc
ror
sub
pop
call
push
push
pop
call
push
push
sub
add
shr
not
push
or
inc
add
add
dec
add
sub
dec
add
add
sub
pop
xor
pop
push
sub
pop
pushl
push
ror
xor
ror
pop
call
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
ja
mov
add
add
add
push
push
mov
icebp
add
add
add
fnstenv
arpl
addr16
mov
lcall
push
add
lds
xchg
loope
loopne
add
insb
xchg
imul
mov
push
add
add
mov
insb
sahf
jne
mov
lea
pop
call
mov
lea
push
push
add
push
or
not
add
shr
dec
sub
rol
shr
add
pop
sub
add
dec
pop
push
add
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
call
leave
pop
add
add
fstpt
gs
jae
mov
add
addr16
jp
add
add
faddl
xchg
aad
push
add
mov
mov
push
cmc
pop
add
in
add
add
push
lret
cltd
add
jge
movsb
stos
roll
idivl
in
add
add
pop
lea
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
cltd
scas
jb
add
add
add
xchg
jmp
roll
rolb
mov
add
iret
mov
mov
loopne
gs
add
ja
add
add
add
rcll
add
sti
add
sbbl
jae
xchg
add
ja
add
test
add
scas
pop
cld
xchg
add
fdecstp
fdiv
add
add
movsl
ja
fists
lea
pop
push
push
push
push
lea
push
push
push
push
push
call
push
loope
mov
xorl
push
stos
rcll
add
add
out
add
add
je
jmp
jl
add
jne
add
cwtl
rolb
push
add
add
aad
out
stos
scas
pop
add
aam
pop
movsl
mov
mov
add
cwtl
add
add
add
cld
in
imul
xchg
add
fsubrp
movsl
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
call
push
mov
mov
push
ljmp
test
ljmp
addb
add
add
xchg
jbe
test
add
imul
add
add
add
cmc
mov
fcoml
add
add
mov
cmc
addb
fldt
add
add
rcrl
iret
add
cwtl
arpl
pop
add
add
xchg
xchg
fwait
add
mov
add
mov
lea
pop
push
push
shr
sub
pop
pushl
push
push
sub
push
or
inc
add
ror
sub
shr
pop
not
lea
not
pop
push
push
lea
push
push
call
cmc
lret
out
pop
xchg
loopne
addb
add
mov
loope
add
adcb
add
hlt
add
jae
subb
push
divb
test
mov
call
add
in
outsl
lock
add
mov
test
add
sahf
xchg
int3
shl
mov
js
out
add
mov
lea
pop
push
push
lea
push
lea
push
lea
push
call
jnp
pop
in
sbbl
mov
push
add
mov
add
xchg
in
test
loop
mov
jge
enter
add
add
cmc
add
xlat
pop
test
add
faddp
add
icebp
mov
add
add
add
xchg
jo
add
add
mov
lea
pop
call
push
push
add
shr
inc
sub
push
sub
add
sub
shr
dec
sub
dec
not
lea
pop
sub
dec
pop
push
lea
push
lea
push
push
lea
push
push
call
add
rclb
flds
insb
add
cwtl
add
add
add
xchg
xchg
int
out
add
add
mov
hlt
add
loope
add
add
imul
add
popa
rolb
lret
mov
popa
fs
mov
test
popa
add
loop
add
mov
fildl
add
add
xchg
lret
add
add
add
add
lret
add
add
pop
pushl
call
push
push
shr
inc
pop
call
push
push
sub
push
and
add
sub
add
rol
sub
add
lea
pop
lea
inc
not
add
pop
push
shr
shl
pop
pushl
push
lea
add
xor
pop
call
push
push
push
push
push
push
push
push
push
push
call
mov
bound
shlb
add
nop
add
mov
jae
xchg
add
cltd
add
fcomip
mov
les
ja
nop
add
add
push
add
add
mov
add
xchg
rcrl
flds
fdivrs
mov
pop
jae
testb
aam
bound
pop
call
jmp
push
push
push
push
call
add
fwait
add
add
test
jp
jmp
loopne
in
enter
test
lock
in
test
add
mov
scas
add
add
add
add
add
add
add
add
pop
add
nop
add
add
jo
jle
add
sahf
add
adc
add
fiaddl
add
jecxz
loop
add
add
add
les
pushl
mov
jmp
push
push
ror
dec
push
push
pop
add
sub
sub
lea
pop
ror
lea
sub
pop
push
push
push
lea
push
lea
push
push
call
test
push
mov
add
add
enter
push
push
xlat
les
mov
add
cli
mov
mov
push
mov
add
mov
add
repnz
pop
push
pop
fcompl
cmpsl
pusha
add
jbe
add
mov
loop
mov
scas
add
in
int
xchg
add
add
cld
in
mov
in
add
mov
xchg
mov
add
fmull
jne
call
push
sub
pop
push
push
push
push
push
push
push
lea
push
call
lret
imul
xchg
int3
push
mov
pop
cwtl
add
scas
in
xchg
push
add
test
add
xchg
xlat
movb
imul
lods
add
add
add
pop
add
add
cmpsb
fldl
add
add
idivb
fistpl
add
jne
lods
add
add
ljmp
scas
fcmovnu
in
push
add
add
add
mov
popa
mov
lea
pop
call
push
push
lea
push
or
inc
add
lea
rol
ror
sub
dec
add
sub
pop
shr
pop
pushl
push
push
push
call
add
rcrb
iret
popl
insb
add
add
mov
loopne
test
add
push
lock
push
add
push
add
imul
mov
out
mull
add
xchg
cli
add
test
test
push
stc
shr
mov
add
add
in
test
fdivrl
les
call
mov
lea
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
add
int3
test
add
mov
mov
test
xchg
test
add
mov
pop
add
add
fiaddl
lods
pusha
mov
add
add
add
add
mov
fsubrl
insb
xchg
stc
repnz
add
pop
jle
xchg
add
arpl
jne
clc
pop
add
cmpsb
int
jmp
fistps
and
call
push
xor
xor
dec
pop
leave
add
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
push
add
scas
jecxz
in
jmp
imul
addr16
stos
repnz
add
add
add
mov
add
add
mov
add
add
aad
lock
rolb
add
add
cmc
xchg
test
add
add
pop
lods
fldl
add
add
jmp
test
add
jb
pop
add
push
add
movb
mov
cld
lea
pop
pop
push
sub
ror
pop
pop
push
shl
sub
rol
pop
pop
leave
add
push
push
call
add
lods
add
mov
push
bound
jge
add
out
mov
add
in
jbe
rcrb
sarl
push
add
fwait
fwait
je
in
add
lret
add
push
lds
mov
add
add
addl
add
push
jp
addl
add
test
scas
mov
std
mov
lea
pop
ret
leave
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
xchg
imul
scas
fadds
loope
add
mov
movsl
add
jge
push
xchg
test
add
add
mov
add
xchg
addl
push
add
cltd
rol
jne
add
add
fnstsw
rclb
lahf
out
add
in
add
mov
push
std
nop
jnp
movsl
enter
mov
lea
pop
ret
push
mov
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
lret
loop
in
sar
cld
jbe
rolb
add
add
xchg
pop
mov
fiaddl
add
test
add
mov
jge
add
fldl
add
flds
add
test
add
lock
rcl
pop
add
jmp
add
mov
mov
lea
pop
cmpl
jne
mov
push
add
pop
jmp
push
push
push
push
push
lea
push
push
push
push
push
call
clc
add
add
nop
add
add
rcrb
mov
in
jb
flds
data16
sti
rcrl
cli
lcall
mov
bound
in
add
divb
add
out
push
test
mov
add
nop
pop
lahf
out
add
jo
hlt
add
add
add
lea
lods
je
add
add
add
mov
add
sub
inc
or
in
or
jne
add
add
add
add
jne
push
addl
lods
imul
pop
lods
bound
push
outsl
add
testl
jl
add
stos
add
add
pop
add
jecxz
add
out
add
add
incb
pop
mov
push
push
mov
mov
add
xchg
add
lcall
in
mov
add
push
out
add
jno
cwtl
sti
loope
mov
popa
or
and
push
sub
sub
rol
pop
xor
xor
push
push
lea
push
push
push
call
add
add
test
push
test
fildl
add
add
call
xchg
add
test
add
mov
add
mov
cwtl
add
iret
add
popa
loope
test
push
int3
add
pop
add
add
add
out
lahf
fsubl
aad
fcmove
mov
fmull
rolb
dec
call
rcrb
sub
jmp
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
addl
add
add
mov
add
add
jmp
mov
insb
jge
add
jmp
add
xlat
bnd
add
test
add
xchg
push
clc
add
popa
int
lcall
mov
fnstcw
add
add
jle
clc
mov
mov
repnz
int3
mov
lret
into
out
mov
fcoms
popa
sub
add
add
push
rol
add
xor
pop
pushl
push
inc
xor
pop
pop
sub
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
movsb
mov
hlt
mov
xchg
rorb
add
xchg
js
add
add
xchg
in
pop
mov
add
add
add
mov
jp
in
add
std
pusha
add
add
jle
add
push
arpl
mov
add
insb
add
add
out
push
lock
outsl
jo
cli
xchg
lock
ljmp
lea
pop
cmp
jne
mov
lea
push
lea
pop
sub
push
ror
lea
shl
pop
mov
push
pop
shr
add
push
push
push
push
push
call
xchg
enter
add
add
cmpsl
pop
lret
add
add
add
add
jno
push
mov
add
add
push
jmp
add
add
push
cmc
jnp
add
add
add
mov
xchg
outsl
orl
push
add
push
pop
add
add
mov
addr16
sub
pushl
push
xor
lea
shl
add
pop
pop
shr
and
push
shr
shr
inc
pop
sub
cmp
jne
push
lea
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
arpl
add
lcall
add
add
data16
mov
call
add
test
cmpsb
aam
bound
mov
push
jle
lcall
add
out
scas
add
push
push
ljmp
enter
add
test
out
add
mov
jmp
add
pop
cli
mov
jae
add
xlat
cmpsl
rol
pop
add
mov
lea
pop
leave
ret
push
push
lea
push
push
call
lods
add
sbb
mov
add
lahf
out
add
flds
fildl
scas
pop
add
test
xchg
push
push
sahf
add
add
mov
scas
add
sti
add
mov
filds
xchg
mov
mov
lcall
add
add
add
mov
filds
add
js
in
push
test
lods
add
int
jmp
add
pop
mov
add
push
push
xor
pop
push
push
push
push
call
test
mov
ficompl
xchg
add
add
push
jle
add
loope
add
loopne
jle
mov
push
add
lock
add
jecxz
cwtl
mov
add
mov
add
loop
add
jno
add
pop
add
add
push
add
add
add
lea
pop
push
push
push
lea
push
push
call
mov
add
roll
add
push
fcoms
jle
add
fs
lret
mov
mov
add
jae
add
add
add
push
ret
add
xchg
int3
add
add
cmc
add
push
add
add
add
movsl
mov
add
add
add
push
shrl
add
mov
mov
lea
pop
push
mov
lea
push
dec
sub
pop
sub
push
add
not
sub
pop
mov
shr
push
sub
pop
add
mov
push
push
push
push
push
push
push
push
push
push
call
mov
add
xchg
scas
add
and
add
add
add
xchg
cmpsl
push
popf
add
add
add
add
in
add
cmpsb
sahf
jnp
add
add
mov
add
add
xchg
add
imul
jle
outsl
push
out
out
stos
add
add
mov
lret
lea
pop
add
push
push
push
push
push
lea
push
call
add
ret
cmpsb
loopne
xchg
add
xchg
lds
addb
pop
test
add
mov
jo
add
in
jecxz
lds
stos
lret
stos
add
xchg
push
add
pop
roll
add
add
movb
add
popl
stos
jnp
pop
xchg
test
jp
mov
mov
mov
lods
xchg
pop
pop
add
je
in
jns
add
pop
mov
add
push
shr
rol
shl
pop
xor
push
shr
add
not
add
pop
mov
and
push
push
push
call
xchg
xchg
add
add
mov
mov
push
add
add
add
out
add
loopne
add
xchg
add
add
mov
cld
add
lds
fisttpll
mov
jmp
add
add
scas
xchg
add
out
jno
add
lods
add
cli
insb
mov
call
test
les
sub
add
add
cmp
je
push
lea
push
call
add
mov
mov
add
iret
add
add
push
shll
add
js
jbe
mov
add
stos
add
mov
add
push
test
add
js
mov
lret
jecxz
cmpsl
add
add
add
loopne
fdiv
out
mov
mov
cli
faddl
add
xchg
movl
mov
jns
ljmp
or
ret
adc
jnp
add
test
lea
push
push
lea
push
push
push
push
push
push
call
mov
push
fcmovnu
test
add
add
sbbl
add
out
fwait
lea
push
add
shll
cwtl
add
ficoml
mov
add
loope
cmpsb
cli
stos
add
pop
aad
pop
add
mov
fsts
clc
add
outsl
add
flds
mov
lea
pop
xor
push
lea
push
lea
push
call
fwait
cli
add
add
lea
add
cltd
add
loope
sahf
fs
test
stos
mov
add
add
add
lods
add
shrl
add
xor
movl
add
iret
arpl
lret
add
jl
nop
gs
mov
jge
popa
out
xlat
outsl
jo
add
jns
clc
xchg
cld
js
js
out
add
mov
lea
pop
pop
push
add
inc
pop
pop
push
push
push
lea
push
push
call
add
add
add
xchg
add
mov
xchg
add
add
test
mov
add
add
add
add
add
add
lock
add
mov
xchg
mov
add
add
stc
pusha
sti
add
andb
clc
testb
roll
int
pop
cwtl
icebp
add
mov
popa
add
add
add
add
add
mov
mov
lea
pop
pop
push
push
push
call
mov
pop
push
mov
mov
push
add
add
cmpsb
loopne
insb
aad
sarl
jns
push
xchg
add
fadds
cmpb
lret
loope
out
add
loopne
add
xlat
push
add
jge
lds
mov
pop
add
in
fistpl
cld
lea
pop
pop
pop
leave
push
push
push
push
push
call
add
jge
mov
add
push
movsl
add
add
mov
cltd
in
test
imul
add
cmc
xchg
incb
add
add
add
int
add
add
test
stos
lods
add
sahf
hlt
jle
add
mov
push
insb
add
shll
lret
add
cli
out
mov
mov
js
add
pop
mov
mov
lea
pop
ret
mov
push
push
push
push
push
call
add
mov
mov
aad
outsl
mov
repnz
stos
std
add
jmp
mov
add
mov
xchg
xchg
pushf
loopne
popl
in
out
add
push
add
cli
add
mov
jno
add
lds
add
add
add
lret
js
addl
xchg
outsl
data16
add
add
add
xlat
add
lock
add
mov
lea
pop
add
push
push
dec
sub
shr
pop
push
push
xor
add
pop
pop
pop
mov
push
sub
pop
push
call
push
xor
add
shl
sub
pop
xor
pop
pop
push
shl
sub
pop
pop
pop
pop
push
ror
rol
not
pop
leave
ret
push
push
push
lea
push
lea
push
call
imul
add
iret
add
add
aam
pop
lock
add
mov
jmp
add
push
ffree
pop
xchg
add
roll
in
jge
jge
add
add
mov
repnz
out
mov
mov
add
add
imul
add
add
mov
add
leave
add
mov
lea
pop
mov
add
push
push
push
push
push
push
call
mov
in
add
roll
add
add
bound
icebp
xchg
pop
push
push
add
rolb
lret
add
stos
mov
filds
mov
les
add
test
movsb
ret
roll
roll
mov
add
add
scas
mov
add
in
scas
popf
add
cmpsl
add
pop
push
push
push
push
rol
add
pop
push
mov
push
lea
pop
push
push
shr
sub
pop
pop
lea
sub
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
pop
jl
add
add
aam
add
pop
lods
int3
pusha
add
xchg
xchg
jne
roll
loope
add
add
add
jb
mov
push
add
mov
xchg
jl
push
in
loop
mov
pop
add
add
pushf
pop
shrb
add
mov
pushf
ljmp
test
add
and
mov
push
push
push
call
mov
in
add
add
cltd
shll
stos
popa
push
add
ficoms
pop
in
filds
fldenv
int3
add
mov
fcmovnb
mov
add
pop
test
mov
scas
add
mov
add
mov
xchg
jmp
pop
mov
in
push
jno
test
ja
add
add
mov
mov
pop
jno
add
mov
lea
pop
shr
push
push
push
push
push
lea
push
push
push
call
pop
add
add
add
cld
fdivl
mov
aam
jno
mov
mov
jae
ret
add
add
ja
push
add
les
bound
lock
xchg
test
pop
lods
add
mov
in
add
imul
mov
add
pusha
add
pop
popa
nop
stos
add
fcmovb
push
in
add
pop
add
push
dec
rol
dec
pop
mov
push
push
push
push
push
call
jmp
jo
aad
nop
add
std
jb
aam
add
cmc
add
gs
enter
shrb
arpl
add
add
add
add
add
mov
add
push
add
stos
add
add
mov
add
pop
mov
addb
add
jl
xchg
jns
xchg
cmpsl
lahf
cmp
add
cwtl
add
pop
add
add
mov
lea
pop
add
pushl
push
push
push
call
lock
xchg
outsl
jns
sahf
roll
lret
fisttpl
add
jae
int3
jo
iret
mov
jo
push
leave
movsl
add
lock
xchg
loopne
ret
imul
in
jns
int
add
into
ja
out
add
xchg
jmp
add
cld
loope
mov
add
add
incb
add
movsb
test
mov
xchg
loopne
add
pushf
add
gs
lea
pop
popl
push
push
push
push
push
push
lea
push
push
push
call
lods
je
add
mov
xchg
mov
mov
add
pop
add
add
movl
fadds
fcmovnu
std
mov
fs
add
test
nop
add
mov
add
add
add
add
add
add
mov
loop
add
add
lods
mov
pop
add
filds
andl
push
add
pop
mov
push
inc
xor
add
pop
add
xor
push
sub
sub
pop
lea
push
sub
rol
pop
mov
push
pop
add
xor
push
dec
pop
call
push
push
push
lea
push
push
push
push
push
push
call
mov
add
add
add
loope
mov
mov
mov
add
add
sahf
mov
in
ffreep
into
stc
shl
add
subb
aad
xlat
addb
lcall
push
add
add
fildl
jnp
jne
xchg
mov
mov
add
add
pop
add
nop
push
push
lea
push
lea
push
push
push
call
add
cmc
std
add
clc
add
pushf
cld
clc
jecxz
pop
add
aam
add
xchg
testl
addl
rcr
cltd
mov
add
test
push
fsub
add
ret
mov
add
scas
out
add
add
lds
test
je
lret
add
loope
hlt
out
add
divb
in
add
addr16
lea
pop
nop
cmp
je
nop
push
pop
nop
push
sub
rol
add
shl
pop
inc
push
lea
push
push
push
lea
push
push
push
call
add
mov
add
loope
mov
mov
add
subb
add
mov
insb
ljmp
add
mov
loop
mov
jmp
push
add
mov
push
add
pop
lcall
fildl
pop
push
add
pop
pusha
xchg
mov
add
mov
lea
pop
nop
push
shl
pop
nop
push
xor
shr
inc
pop
cmp
jb
xor
jmp
push
inc
pop
mov
push
rol
xor
inc
pop
add
movzwl
mov
push
ror
add
pop
add
mov
push
xor
lea
pop
xor
xor
shl
push
lea
push
push
lea
push
call
add
cltd
pop
in
add
add
add
push
add
lds
fisttps
add
add
add
add
mov
mov
add
add
aad
pop
add
add
mov
add
add
decb
mov
add
add
clc
pop
add
add
leave
loope
add
test
mov
xlat
pop
pop
push
jge
out
mov
lea
pop
xor
push
shl
add
add
add
pop
shl
push
lea
add
pop
xor
push
rol
dec
pop
shl
xor
mov
push
rol
sub
inc
pop
add
pop
push
inc
inc
lea
pop
pop
pop
pop
push
push
push
push
call
jmp
enter
cmpsb
mov
mov
add
add
jl
lret
imul
cltd
add
test
add
in
add
stc
mov
add
xchg
movl
mov
xchg
fs
je
add
add
add
addr16
cmpsl
add
mov
pop
in
xchg
push
add
cli
mov
aam
bound
pop
leave
push
push
push
push
push
push
push
lea
push
call
add
fcompl
add
xchg
movsb
add
add
xchg
add
movsb
icebp
scas
lcall
test
pop
add
icebp
mov
add
stos
add
jp
pusha
loope
lret
pop
cmpsl
add
add
addl
push
add
out
popa
add
stos
mov
add
add
ljmp
jbe
add
add
pop
ret
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
loopne
pop
pop
movsb
add
add
stos
xlat
aam
out
fwait
add
add
popl
arpl
int
push
add
add
lahf
lods
lods
mov
lock
fwait
imul
add
fwait
pop
add
jmp
js
in
test
rolb
add
subl
jle
xchg
jbe
stos
add
pop
pop
std
add
data16
add
lea
pop
push
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
call
bound
xchg
add
add
add
add
add
jo
add
add
rol
add
add
movsl
add
add
add
add
add
out
jmp
xchg
mov
add
fcoms
testl
add
xchg
lods
push
add
nop
add
push
fwait
jbe
lds
xchg
mov
lea
pop
push
push
push
xor
shr
xor
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
jns
testl
stos
fiadds
jb
nop
lods
add
mov
rolb
mov
add
add
add
add
fbstp
xchg
fcmovbe
xchg
add
fstps
cwtl
mov
pop
xchg
test
roll
pusha
add
push
iret
add
sahf
add
add
push
filds
in
imul
out
test
stc
add
scas
add
hlt
lea
pop
mov
mov
mov
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
xlat
call
test
add
ja
roll
mov
pop
add
add
nop
idivl
add
add
test
mov
xchg
outsl
jbe
shll
add
add
std
mov
mov
pop
add
add
add
mov
xchg
add
add
orb
and
rorb
test
or
add
test
pop
mov
push
sub
inc
pop
test
je
push
push
push
push
lea
push
call
pop
xchg
in
movb
add
mov
add
add
mov
mov
std
add
in
add
pop
ljmp
add
add
add
mov
add
aam
add
add
add
cli
push
lcall
jle
lahf
add
lcall
fsqrt
mov
repnz
add
mov
add
lret
jecxz
mov
in
xchg
bound
add
pop
mov
push
push
push
push
call
mov
mov
rolb
mov
xchg
mov
mov
mov
xchg
ja
add
loop
mov
add
mov
clc
add
lea
in
add
jbe
push
jmp
loope
add
out
enter
add
mov
add
lcall
movsb
add
loop
add
add
push
add
mov
jmp
add
add
in
ficoml
lea
pop
mov
push
sub
xor
xor
pop
mov
inc
cmp
je
push
shr
pop
test
je
push
push
push
call
add
jp
call
mov
hlt
je
add
add
push
mov
lea
add
add
in
imul
xchg
add
add
cld
add
add
pop
les
fwait
add
add
jne
mov
add
add
jbe
lcall
shll
lcall
add
out
jns
mov
lea
pop
mov
inc
cmp
je
push
dec
add
pop
test
jne
xor
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
pop
add
pop
add
add
jns
in
xchg
add
add
push
movsb
leave
xchg
cwtl
cmpsl
add
shll
add
leave
jmp
ret
add
push
ficompl
add
add
imul
add
pushf
add
add
add
add
incb
fcomi
mov
mov
add
popf
gs
mov
les
push
shl
pop
pop
pop
leave
push
push
push
push
push
push
push
push
lea
push
call
imul
addl
add
test
add
js
fnstsw
rclb
add
add
iret
add
nop
add
rcrl
arpl
clc
mov
mov
lods
roll
add
push
jb
mov
xchg
add
fwait
add
add
fistpl
mov
cmpsb
push
add
add
add
xchg
jo
lock
pop
ret
mov
inc
push
shr
add
dec
not
pop
cmp
jne
push
add
inc
pop
lea
push
push
push
push
push
lea
push
push
call
rorl
add
xchg
add
repnz
xchg
jae
mov
add
add
mov
xchg
out
mov
mov
add
add
add
outsl
jmp
lods
ret
out
add
lret
add
fistpll
add
pop
cli
movb
rcrl
add
movsl
jb
mov
jb
mov
add
add
add
aam
bound
mov
push
sub
add
pop
test
je
mov
add
push
push
push
push
push
push
lea
push
call
add
add
add
add
add
test
stos
add
jl
mov
pop
add
push
add
add
outsl
pop
add
push
jbe
add
add
add
xchg
add
incb
mov
in
lds
loope
in
test
mov
add
mov
les
add
pop
cmp
jne
push
ror
lea
rol
sub
pop
mov
test
je
push
push
call
movsb
mov
add
jb
add
loopne
jae
adcb
add
add
add
add
push
mov
faddl
add
jbe
test
xchg
shlb
lds
out
push
add
lds
mov
add
add
add
add
add
mov
add
jne
flds
push
add
cld
lea
pop
mov
push
push
push
call
test
pop
mov
add
push
in
add
outsl
adcl
mov
add
pop
add
add
xchg
xchg
pop
stos
out
leave
rcll
add
jbe
xchg
push
pop
add
lock
jmp
add
ret
test
xchg
xorl
pop
xchg
shl
js
jns
jae
rolb
jb
add
mov
mov
add
test
lea
pop
add
cmp
je
push
push
call
mov
mov
add
lahf
add
aad
add
lret
xchg
arpl
add
add
mov
mov
rorl
pop
test
add
add
jmp
subl
add
add
std
insb
jo
add
xchg
outsl
jge
add
add
in
push
add
outsl
add
add
nop
mov
lea
pop
jmp
push
xor
pop
xor
push
push
push
push
call
pop
jne
call
ljmp
cmpsl
pop
add
add
add
add
ljmp
int
enter
mov
add
add
jge
ljmp
jne
mov
mov
jno
mov
mov
lret
cmc
add
fwait
jns
push
clc
jmp
in
sar
mul
xchg
jp
out
push
insb
lcall
pop
pop
push
push
push
push
push
push
push
push
call
add
pop
add
faddp
aad
pushf
add
enter
bound
lods
pop
test
in
push
xchg
add
add
add
cmc
add
fiadds
addl
mov
stc
add
add
add
add
add
movl
add
add
pop
jmp
loopne
jecxz
add
addl
jecxz
jns
test
stos
push
push
mov
add
add
pop
jb
add
pop
pop
push
shl
pop
pop
push
shr
inc
add
pop
leave
push
xor
rol
pop
ret
lea
pop
push
shl
lea
sub
dec
pop
pop
pop
pop
push
not
sub
pop
leave
push
sub
ror
rol
pop
ret
push
lea
push
call
add
cli
cmc
scas
ja
add
push
pop
xchg
pop
aad
jno
add
add
outsl
fldl
add
add
lds
in
add
add
roll
fsubl
add
leave
add
add
mov
out
stc
divl
andl
jmp
jle
add
filds
mov
lea
pop
mov
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
mov
add
lods
ror
add
jle
pusha
add
push
add
mov
cwtl
add
lcall
popl
mov
pushf
sahf
in
imul
add
scas
negb
cld
add
jmp
in
add
jl
negb
mov
add
add
add
jp
arpl
jmp
cmpsl
mov
aam
add
mov
lea
pop
pop
push
push
push
push
push
call
jge
out
in
add
mov
test
lods
add
jae
pop
lds
add
add
xchg
rorl
ret
add
stc
fsts
pushf
je
add
jp
lret
pusha
stc
mov
lock
add
lock
in
pop
pop
cwtl
mov
mov
add
lea
rorl
add
push
fsts
add
add
popa
adc
pop
leave
ret
push
shr
not
shr
pop
rol
rol
push
push
lea
push
push
push
call
hlt
add
add
add
in
jge
jae
lods
add
add
push
add
add
loop
add
leave
js
popa
std
clc
add
hlt
mov
add
scas
adc
pop
int
add
fistl
cwtl
bound
pop
ret
add
orb
add
clc
mull
data16
xor
push
lea
shl
pop
inc
cmpb
jne
push
ror
ror
sub
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
push
mov
sti
std
loopne
sti
movsb
loope
sti
movsb
xchg
mov
sti
das
mov
mov
sti
movsb
shlb
sti
cmp
loopne
sahf
xlat
sub
jno
ljmp
sbb
bound
sbb
add
fsubrl
inc
cs
pop
mov
lahf
test
shlb
xor
adc
jbe
mov
mov
add
mov
xor
cltd
test
inc
lcall
dec
imul
aam
nop
add
shrb
xor
adc
cmp
sbb
cmp
push
test
icebp
movsl
wrmsr
leave
ret
xchg
push
xlat
pop
shll
sub
and
loope
dec
mov
loopne
push
xchg
pop
loopne
mov
xchg
xchg
sbb
cli
sahf
arpl
jmp
pop
adc
ss
scas
mov
xor
sbb
mov
ret
push
ja
lock
imul
andb
push
testb
inc
test
bnd
push
js
std
dec
or
inc
addl
push
in
std
xchg
rcr
lret
pushf
mov
inc
xchg
lds
push
lret
test
cmp
mov
cld
addr16
or
sbb
sbb
ss
xchg
ret
xor
mov
sub
out
fists
mov
push
popf
push
jp
out
cmpsl
and
jg
stc
mov
mov
lods
pop
dec
add
lods
sub
stos
adc
jmp
dec
insl
push
in
and
or
outsl
loop
aam
inc
sbb
aaa
and
push
in
xchg
das
mov
sbb
jno
push
and
lret
imul
lret
sub
xchg
pop
mull
subl
adc
loope
mov
push
les
dec
mov
nop
mov
ficompl
testb
mov
dec
push
or
ret
movsl
add
lcall
insl
xlat
fiadds
xchg
xchg
adc
ret
mov
mov
rcll
lret
jg
hlt
int
inc
jb
fwait
cltd
test
call
dec
fimuls
add
pushf
loopne
sbb
sbb
ret
adc
mov
lret
outsb
or
jno
and
dec
sbb
mov
add
mov
sbb
dec
xchg
xor
adc
push
cmp
pop
inc
cld
sbb
imul
out
push
pop
rcrl
cltd
or
pop
xlat
or
shlb
xchg
sub
cmp
fs
adc
add
jo
leave
int
cmp
ret
out
adc
icebp
inc
loop
jmp
sbb
mov
add
std
lret
mov
pop
sbb
xchg
mov
adc
or
ljmp
mov
and
mov
sbb
mov
mov
mov
hlt
sub
mov
xchg
push
pop
dec
xor
or
pop
add
popf
movsb
stos
ljmp
out
fnstenv
loope
lret
ss
iret
sbb
outsb
loopne
jbe
mov
sti
mov
in
dec
cwtl
dec
in
in
and
cld
xor
sub
and
mov
push
jb
cwtl
xor
inc
xor
in
adc
ret
mov
inc
fs
adcb
rolb
add
pop
das
and
xchg
dec
repnz
cld
mov
sub
xchg
loop
xor
cmp
ljmp
and
fcompl
xchg
mov
aaa
fdivr
push
jmp
scas
clc
sbb
sbb
xlat
sti
inc
cmp
mov
in
in
divl
scas
or
cmp
outsb
ss
aad
into
shlb
es
and
aaa
sub
sub
or
cmp
or
mov
pop
roll
mov
ljmp
xchg
stos
cld
mov
cmp
sub
sub
into
jb
xchg
sarb
mov
or
inc
insl
dec
dec
mov
push
push
int3
into
shrb
rcrl
dec
enter
xlat
jb
xorl
adc
cmp
mov
jp
inc
ja
xorb
pop
stc
fwait
xorb
lock
jo
add
cmp
xor
sub
lods
jns
jne
push
mov
xchg
xchg
inc
leave
or
mov
xor
mov
sbb
and
ds
pop
je
push
aaa
and
mov
aaa
adc
mov
adc
sbb
mov
test
mov
cli
push
jbe
sub
imul
mov
lock
dec
mov
xor
sub
test
push
ret
daa
push
rorb
ret
mov
cmp
and
fucomp
dec
xchg
dec
nop
push
fcom
dec
pop
sbb
stos
push
outsb
je
add
ret
lahf
jmp
notl
pop
jle
mov
jne
mov
inc
movsl
or
fsts
dec
sub
cltd
push
adc
fisubs
jns
outsl
fwait
or
scas
lcall
daa
das
and
dec
mov
push
es
or
aas
or
imul
pop
sub
lcall
jbe
mov
mov
daa
and
dec
cmpsb
int3
pop
lahf
leave
shrb
cmp
test
dec
movsb
and
sub
out
test
add
iret
xchg
jae
pusha
mov
mov
add
mov
push
sar
xchg
ret
pop
loop,pt
mov
int3
and
stc
aam
and
in
test
pop
bound
pop
in
out
jmp
pop
inc
mov
pop
push
sarl
sti
rcll
xor
pop
add
jb
faddl
sahf
xlat
lock
dec
add
mov
lret
sbb
lea
int3
fidivrl
xor
xor
mov
frstor
dec
add
jg
iret
pop
inc
jne
lds
scas
push
jo
sbb
test
sub
mov
pusha
loop
test
mov
lcall
mov
mov
cmc
pop
lea
add
cmpsb
ljmp
xor
bound
lea
imul
xchg
popa
scas
int3
cmpb
adc
gs
int
cld
adc
addr16
mov
dec
mov
nop
pop
push
in
cmp
mov
mov
or
pop
mov
sub
insb
iret
cmp
mov
aad
jb
decb
arpl
ss
lret
dec
movsb
insb
out
pushf
inc
insl
xchg
and
rcll
mov
out
and
idivl
push
aam
cmpsl
call
adc
mov
or
les
fistpl
cmp
imul
sub
roll
xchg
jbe
jmp
out
pop
shlb
sub
push
push
in
push
mov
and
stc
std
fistl
loopne
add
pushf
inc
clc
push
pop
add
mov
stc
push
ret
mov
xchg
xor
lock
cmpsl
mov
sbb
daa
out
clc
cmp
mov
shl
dec
outsb
loope
push
loopne
inc
lret
idivb
mov
cwtl
or
into
iret
pop
jne
inc
in
xchg
aad
cld
inc
test
dec
push
cmp
xlat
insl
sub
inc
add
jns
mov
dec
jae
mov
arpl
sub
subb
shlb
cmp
sub
mov
pusha
mov
adc
or
pop
mov
cltd
lcall
or
orb
aad
mov
stos
pop
xchg
adc
fsub
lock
popa
sbb
bndstx
dec
jne
bound
inc
sub
adc
outsb
pavgw
in
insl
and
jle
sub
sub
iret
js
dec
add
cmpsb
xchg
fdivs
sbb
or
call
push
inc
mov
movsl
sbb
add
sti
cmp
add
data16
mov
or
mov
lods
inc
es
inc
mov
xor
push
cmp
int3
scas
sti
mov
aaa
cmp
clc
mov
mov
push
xchg
xchg
aam
rorl
dec
adc
ss
mov
imul
xor
sbb
cld
cmp
pop
push
pusha
testb
ret
in
mov
test
out
jne
shl
jmp
add
mov
fcmovbe
or
adc
lret
ja
xchg
and
cmp
and
mov
pop
mov
lds
ds
jg
int3
jge
int3
xchg
xchg
fsubp
ljmp
cmc
pop
inc
in
insl
jge
mov
adc
test
pop
add
jmp
out
jno
insw
ja
rolb
orl
cltd
insb
mov
cs
xchg
dec
push
rcll
sbb
lahf
mov
cltd
mov
daa
xor
mov
sti
xchg
mov
out
nop
adc
adc
xchg
xchg
xor
call
inc
ljmp
lahf
xor
pop
mov
aad
pop
pop
xchg
xchg
push
dec
imul
movl
pop
mov
mov
and
mov
in
mov
shl
sti
ret
cmc
lea
fisttps
cmc
sahf
lcall
pop
movsl
mov
mov
rcl
int
popf
mov
xchg
push
mov
pop
movlps
sti
mov
in
adc
jl
push
fdivs
negb
shll
jl
xchg
or
movl
push
push
hlt
lahf
insl
popa
sub
in
inc
pop
xchg
pop
pop
mov
test
mov
roll
inc
out
js
jl
cld
in
xor
mov
and
add
mov
lock
push
sub
pop
stos
add
dec
out
cltd
enter
movsb
cmp
sbb
mov
jns
push
push
mov
pop
sahf
stc
mov
in
loop
inc
inc
fsubs
lock
notl
js
sbb
notb
in
mov
cmp
fwait
dec
sub
sbbb
mov
rolb
es
and
cmp
or
sbbb
enter
rolb
or
xchg
dec
movsl
shrb
insb
cmpsl
ljmp
test
dec
mov
and
rorb
in
push
in
fisubs
movsl
frstor
lods
push
loopne
pusha
sbb
sbb
mov
stos
push
daa
push
repz
out
popa
sbb
ds
or
and
mov
test
lahf
mov
fcoml
movsb
push
push
aam
sub
xchg
add
gs
imul
inc
scas
pop
test
test
lahf
mov
xchg
ljmp
add
cmpsl
mov
or
mov
sub
jg
shll
push
jge
xlat
ja
sub
ljmp
addr16
sbb
jp
push
outsl
neg
scas
xlat
dec
dec
push
push
inc
pop
je
mov
jo
dec
push
sub
cmc
sub
test
ja
mov
in
adc
iret
mov
fs
cwtl
fisttps
icebp
int
inc
lea
jns
int
pop
push
lret
sbb
xchg
aaa
in
jne
insb
mov
adc
lret
mov
cmp
cmp
movsb
cltd
adc
or
pop
fdivs
jecxz
add
repz
xor
sbb
xor
mov
iret
and
in
out
aad
dec
and
shlb
stos
mov
or
jmp
imul
sahf
ss
loopne
rcrb
and
shlb
addr16
xchg
out
adc
xchg
test
scas
push
faddl
adc
jmp
and
mov
and
jecxz
insb
inc
adc
adc
pop
pop
mov
mov
loope
push
rcl
mov
test
adc
roll
mov
push
pop
adc
ficoml
pop
sub
xlat
xchg
ret
and
lods
loope
push
cmpsb
fildll
jp
dec
or
loope
inc
or
in
add
mov
lret
int3
out
std
xor
stc
test
fcompl
out
mov
mov
dec
int
cmpxchg
lea
xchg
iret
rcl
adc
adc
mov
add
jmp
adc
fucomp
subl
sub
or
fstpl
arpl
add
push
popa
and
bound
js
dec
cmpsb
push
std
int3
hlt
add
les
lock
iret
add
outsl
in
inc
jnp
mov
je
jns
shll
jl
sub
mov
clc
mov
test
cmp
leave
pop
ja
pushf
xor
xor
add
jno
push
xor
arpl
adc
sbb
pop
fwait
cltd
in
dec
popf
stos
adc
sbb
test
in
leave
mov
sub
xchg
sub
jmp
push
push
sub
add
repz
pop
repz
or
out
cs
adc
ss
call
loop
adc
aad
js
loope
pop
sub
popa
fldt
decl
sub
aaa
jle
push
push
mov
pop
int
push
test
sbbb
lahf
sub
sub
add
push
sbb
cmpsl
mov
loop
pop
lcall
cmpsl
popf
jb
add
add
fimuls
aaa
cmp
sub
in
sub
mov
xor
pop
fcomps
push
sbb
into
test
xor
test
popa
add
ficoms
add
dec
inc
movsl
xchg
cltd
shrb
mov
insb
sub
mov
repnz
sarb
mov
imul
lods
mov
xor
mov
test
int3
mov
sbbl
xchg
and
test
or
mov
jl
shlb
jmp
sbb
and
andb
or
test
cmp
fdivrp
mov
pop
cmp
es
aam
jge
pop
xlat
xchg
mov
inc
mov
dec
out
cli
push
pop
icebp
jne
dec
je
sbb
les
adc
pop
mov
dec
ljmp
stos
add
imul
icebp
stc
lods
lds
mov
and
das
jp
mov
nop
outsl
lahf
repz
sub
shrb
insb
iret
mov
rcrl
push
pop
xchg
scas
rolb
inc
xor
out
mov
rorl
xlat
lods
add
xchg
xchg
dec
jge
lock
adcl
mull
cld
pop
xchg
push
fstpl
shll
mov
mov
adc
popf
cli
leave
shrl
dec
lock
adc
add
nop
push
pop
les
mov
fbld
pop
mov
jbe
jae
sahf
pusha
rolb
insl
cli
jnp
adc
push
push
rorb
sub
mov
sbb
test
scas
stos
imul
jno
ds
sub
add
orl
mov
fsqrt
add
adc
mov
jmp
inc
popa
push
pop
jo
dec
subb
jo
jne
jae
mov
mov
sbb
xchg
ficoml
xchg
xchg
fwait
shrb
fnstsw
test
sub
dec
jns
arpl
adcl
or
mov
pop
addr16
inc
pop
inc
stos
jo
sbb
mov
shll
add
pop
fmul
out
pop
insb
cmpl
push
mov
push
ret
leave
xchg
stc
testl
add
test
add
push
ficoml
lods
mov
xchg
add
sbb
jo
aad
add
jp
adc
shrl
call
aas
loopne
push
fidivs
loope
jno
test
fs
mov
inc
lret
scas
xchg
pop
lock
pop
xchg
lret
insl
clc
mov
adc
or
jbe
loope
stc
push
in
call
sbb
inc
cmc
sbbl
push
pushf
jl
imul
ret
jecxz
or
push
push
push
cmp
push
jmp
xchg
and
cli
shr
pop
pop
jmp
or
xor
push
stc
mov
in
pop
dec
ljmp
dec
ret
inc
jo
xor
sbb
nopl
mov
fisubl
xor
mov
test
push
push
mov
stos
cmp
ficoml
pop
ds
pusha
mov
sub
pop
pop
dec
lret
mov
xor
or
dec
mov
jp
imull
cmp
add
and
iret
and
xchg
or
pusha
lock
int3
stos
mov
popl
mov
popf
int
inc
shrl
push
or
jg
push
aas
fs
andl
test
dec
cwtl
pop
and
rcrb
add
lea
jge
xchg
jnp
and
or
adc
jae
jb
mov
mov
push
je
push
repz
pop
loop
xchg
lret
jo,pt
sbb
repnz
jne
ljmp
and
mov
iret
pop
xchg
emms
bound
xor
int3
jg
push
mov
inc
mov
rcrb
jno
inc
arpl
push
add
pop
std
adc
out
inc
inc
sub
sbb
adc
xchg
add
push
les
fwait
inc
pop
adc
out
in
push
xor
call
push
mov
fldcw
addr16
div
add
push
push
pop
into
pop
loope
dec
gs
ds
add
mov
in
sub
insl
stc
test
lret
mov
js
jl
dec
cmp
push
ja
cwtl
imul
jp
aaa
mov
stos
je
js
cmp
jmp
pop
mov
mov
sub
jae
hlt
movsl
mov
jo
ret
cmp
ret
xchg
push
ret
mov
ficoml
xchg
ficoml
cmpsl
lock
inc
lods
es
pop
stos
push
push
jge
mov
sub
test
shl
bound
mov
lods
jbe
inc
inc
jecxz
dec
jo
loopne
std
repz
cwtl
mov
imul
lods
mov
xchg
leave
out
cmp
pop
or
mov
mov
jp
in
cmp
mov
mov
adc
pop
scas
or
add
movsb
out
pop
enter
mov
mov
inc
xchg
pop
mov
pop
and
adc
sub
iret
fildll
add
loope
add
jp
pop
insb
inc
out
dec
mov
sbbl
nop
lods
or
adc
jnp
push
mov
mov
out
arpl
std
out
ror
adc
test
stos
movb
insb
lds
mov
push
pop
out
loop
mov
js,pt
mov
insl
jg
aam
xchg
jl
or
mov
rcrb
jmp
jnp
cmp
jbe
rcrl
inc
push
lret
jno
mov
rcl
lea
pop
in
inc
sub
dec
leave
jg
lds
mov
sbb
scas
xorb
sub
test
push
fs
imul
adc
and
and
inc
gs
mov
mov
hlt
mov
or
xorl
rcr
cltd
inc
jp
sarl
mov
mov
popl
xlat
push
mov
pop
inc
sub
fisubl
fldcw
add
pop
movsl
imul
pushf
add
popa
mov
push
jno
loopne
lods
push
out
jae
mov
pop
xor
cmpb
adc
leave
test
mov
xor
or
insb
sub
pushf
push
push
idivl
sbb
in
adc
xor
xchg
lock
mov
mov
inc
jne
cltd
sti
dec
ret
ss
lods
pop
sbb
cld
push
addr16
dec
lds
adc
shl
fwait
pop
fmull
or
jb
iret
add
adc
sbb
je
in
imul
jmp
or
fdivrl
outsb
add
cmp
fldenv
cwtl
push
lds
cld
fists
out
fadds
jbe
das
xor
scas
or
test
pop
sub
xchg
pop
lods
mov
subb
icebp
sub
add
pop
in
outsb
test
lea
push
pop
mov
adc
dec
aad
pop
or
sbb
xor
cltd
popf
imul
xchg
jecxz
das
sti
imulb
iret
stos
bndldx
dec
push
clc
sbb
pop
enter
leave
insl
mov
rcrl
mov
mov
enter
cs
mov
invd
mov
mov
jle
push
inc
dec
fwait
sub
mov
imul
push
insl
mov
sahf
mov
out
int3
mov
mov
sbb
icebp
cmp
fwait
mov
inc
fsubl
out
jle
xchg
jne
adc
pop
and
es
mov
lret
sahf
xchg
bound
fistpll
cmp
loope
xor
dec
in
mov
push
neg
mov
sbb
mov
fcompl
mov
cmp
xlat
ficomps
mov
cli
xor
adc
mov
xor
scas
movsl
sbb
mov
xchg
or
push
stos
xchg
sub
mov
xchg
je
data16
jmp
data16
or
movsb
inc
jo
fiadds
cmp
dec
js
xchg
dec
push
xlat
std
sub
push
xor
out
mov
mov
adc
fs
out
inc
lods
addr16
dec
mov
lock
cmp
dec
push
gs
aad
pop
push
call
pop
lea
cld
jo
push
add
lret
aaa
pop
adc
sub
pop
sub
std
dec
mov
add
inc
push
gs
gs
aas
int3
subb
stc
and
out
imul
or
mov
add
ret
es
xchg
jb
and
dec
mov
in
stc
fbstp
pop
aaa
pop
jp
mov
int
lahf
add
and
daa
inc
dec
adc
testb
arpl
jge
imul
scas
fimull
ja
fimull
mov
scas
nop
lcall
into
mov
insl
mov
mov
xchg
ja
sbb
clc
daa
loope
das
push
pop
sub
cwtl
dec
mov
lret
iret
call
cmp
sbb
cmp
enter
scas
cmpsl
push
pop
jl
dec
dec
jnp
test
jmp
adc
pushf
cmp
pop
jo
mov
cmpsb
push
mov
mov
data16
sbb
jle
clc
xchg
cmpsl
lds
outsl
mov
push
xchg
lret
scas
add
stc
pop
push
jecxz
pop
cmp
fcoms
pop
repz
js
xchg
add
jbe
dec
and
mov
jl
pop
fucom
outsl
sub
add
jmp
push
add
sub
mov
pop
mov
jbe
xor
mov
imul
stc
loope
xor
scas
cmc
mov
add
mov
cmp
jns
dec
out
sbb
pusha
das
adc
or
sbb
into
cwtl
mov
pop
std
or
jns
cli
rolb
push
outsb
clc
lcall
sub
rorb
je
rcll
leave
push
jl
aas
test
iret
gs
imull
adcl
jge
repz
push
sub
enter
mov
icebp
xchg
divb
push
shl
call
inc
bound
vmwrite
pushf
int3
dec
jp
ds
int3
sbb
aas
mov
cli
in
cs
cmp
mov
and
pop
hlt
lds
dec
scas
mov
cmp
push
ljmp
mov
push
push
xor
imul
call
out
jecxz
mov
inc
push
adc
repnz
int
in
xor
pop
cmp
imul
rorb
jns
lcall
dec
add
test
out
dec
outsl
dec
inc
sbb
in
outsl
or
mov
pop
dec
pop
xchg
pushf
pop
lea
ljmp
scas
in
push
aad
xlat
lahf
xor
and
icebp
addr16
fldt
mov
cmp
mov
cld
lahf
lret
mov
mov
push
pop
clc
aaa
xchg
mov
adc
add
mov
jmp
xchg
cmpsb
and
mov
fbstp
mov
mov
repnz
jo
lods
lret
fiaddl
push
test
mov
sbb
or
sub
fwait
cli
lret
dec
adc
clc
mov
mov
hlt
push
outsb
jae
push
add
imul
or
iret
xor
imul
pop
cmp
xchg
mov
cmp
lods
insb
lcall
sub
inc
int3
outsl
test
scas
inc
mov
repnz
dec
mov
ds
pop
jge
lret
in
mov
push
sbb
ret
inc
xchg
jns
insl
and
cwtl
mov
adc
and
jne
jb
jae
mov
outsl
push
cmpsb
cmpsb
sub
movsb
mov
push
aas
or
mov
pop
lcall
mov
mov
push
lea
push
lods
sub
je
inc
or
mov
cwtl
cmp
dec
xchg
push
ret
cli
imul
int
mov
adc
hlt
in
orb
cltd
xchg
fsubl
sub
jmp
jge
cmp
dec
sub
xchg
push
push
xor
shrb
add
mov
push
fnstcw
cltd
icebp
bound
pop
aas
inc
xchg
test
hlt
jg
or
rolb
out
hlt
int3
decb
push
inc
cmc
incl
push
dec
sbb
jno
push
popf
jge
mov
xlat
imul
imul
lea
jmp
xchg
movsb
xor
mov
sbb
pop
and
out
xchg
adc
in
lret
add
icebp
dec
bnd
stos
mov
jmp
gs
out
xor
mov
cmp
mov
incl
fldcw
insl
and
cmpsl
in
xor
mov
push
mov
adc
mov
cltd
or
pushf
cs
push
cwtl
and
sbb
mov
mov
and
in
dec
aaa
jg
push
insb
ss
pop
ja
in
and
lods
adc
andb
pop
jg
lock
and
push
xchg
pop
jle
xor
adc
aaa
mov
push
lds
es
xchg
sbb
cs
pop
outsb
in
insl
jb
sub
es
mov
xor
cmp
cmp
rcrb
sub
push
fldl
mov
jecxz
sar
nop
ret
stos
push
hlt
subb
inc
adc
mov
into
xlat
push
rcl
test
fistl
sbb
fdivrp
loopne
inc
mov
imul
sub
add
xchg
jle
dec
push
stc
or
fimull
and
das
push
xchg
fwait
sbb
adc
cmpl
push
pop
add
pop
push
das
pop
inc
sbb
fs
fcoms
dec
mov
ret
sbb
mov
mov
mov
mov
push
out
push
jmp
jp
dec
push
insl
adc
mov
ficoms
inc
outsb
jg
xchg
push
into
cltd
jo
jnp
cld
and
sarl
add
cmc
or
cmp
push
pushf
adc
loop
and
lret
jle
fsubrs
shl
add
sahf
and
xchg
pushf
fwait
dec
jns
cmpsl
adc
les
and
add
rcrb
adc
sbb
nop
mov
stos
push
sbb
dec
cmp
aas
test
push
rclb
jmp
and
cmp
insb
sahf
xor
in
stc
pusha
imul
insl
loopne
lret
jle
push
pop
mov
fwait
nop
addr16
push
sbb
sbbl
cmp
and
jno
sarl
adc
mov
adc
inc
subw
jl
push
test
push
lock
mov
adc
jne
out
daa
in
lods
push
out
mov
sbb
pop
andb
and
sbb
xor
mov
ds
fisttpll
mov
pop
or
or
add
cmp
fstp
in
cwtl
fdivs
aad
dec
xchg
sbb
int
scas
sbb
xchg
xchg
movsb
dec
rcrl
scas
push
out
xchg
pop
mov
and
bound
mov
int
movsl
xchg
ds
js
pop
sbb
mov
or
in
cmpsl
cltd
stos
repz
pop
cmp
push
xlat
xor
out
lret
addb
ret
test
sub
add
lods
addl
loopne
adc
or
push
dec
dec
fs
lods
xor
mov
or
or
and
filds
inc
je
mov
ja
call
jl
mov
mov
pop
pop
aam
add
mov
rorb
push
stos
testl
daa
cli
vmread
shlb
outsb
icebp
cmp
notl
cs
cmpsb
fildl
sti
adc
int
pop
add
add
push
cmpsb
and
fidivrl
push
or
cld
or
addr16
adc
jmp
dec
pop
jg
ret
pop
or
xchg
fcom
or
clc
es
or
pop
movb
sbbl
add
cmpsl
dec
outsb
repnz
mov
stos
jle
imul
js
cmp
movsb
pop
bound
sbb
sbb
cmp
cbtw
scas
mov
cld
loop
loopne
mov
sub
loopne
push
cmp
dec
add
xchg
adc
adc
lahf
lahf
jp
sub
push
mov
int
lock
outsb
loope
xchg
out
test
xor
pushf
ret
cmp
ja
jge
mov
jge
dec
jp
rorl
mov
pop
mov
rcrb
and
sar
xchg
jle
pushf
xlat
push
adc
test
inc
repz
mov
in
and
rcl
popa
lcall
xchg
push
mov
pop
cmc
xchg
fwait
cltd
dec
jecxz
jae
add
push
cmovs
int3
in
aad
cwtl
pop
fwait
lret
lret
frstor
pop
xor
mov
mov
cltd
subl
inc
pop
std
jnp
int
test
cwtl
push
inc
jae
jae
inc
mov
cli
fisttps
cs
mov
pop
sarl
sbb
mov
mov
xchg
lea
xor
mov
jae
outsl
push
mov
mov
push
into
or
sbb
mov
dec
filds
fidivrs
jb
loope
add
add
ret
lcall
xchg
adc
mul
outsb
cmpsl
aas
push
mov
int3
or
repnz
add
or
mov
jns
mov
call
rcrb
jo
mov
call
js
lret
in
and
push
cs
mov
mov
adc
jnp
xchg
inc
xchg
mov
pushf
inc
jo
lods
cli
xor
in
mov
roll
pop
int3
sbb
fldt
pop
mov
cmp
xor
stc
inc
arpl
inc
mov
jmp
jbe
outsb
xchg
popa
xor
push
xchg
push
lcall
je
adcb
or
fadds
push
arpl
outsl
pop
inc
dec
test
or
cmpsl
shlb
jbe
aad
inc
imul
mov
or
popf
fwait
ja
ja
imul
xor
cmpsb
and
pushf
add
mov
clc
imul
and
jl
or
out
lods
inc
out
jg
icebp
icebp
movsb
repz
jbe
xchg
addb
inc
sbb
cmp
pop
push
jnp
mov
adc
out
std
lds
mov
or
in
push
mov
pop
cmova
ficompl
pushf
stos
xor
sbbb
cmpl
xor
and
adc
test
jg
lds
xlat
add
or
bound
inc
mov
outsb
jnp
and
pop
data16
sarl
dec
adc
sub
bound
sti
ds
repnz
xchg
jnp
xor
add
add
adc
inc
mov
sub
lret
xlat
mov
xlat
test
insb
and
insl
jno
jbe
jle
pusha
push
test
in
xor
jecxz
ds
xchg
in
ret
mov
pop
ja
popf
pop
sbbb
loope
add
cmp
movb
inc
lea
xor
lock
inc
add
hlt
sti
mov
inc
loop
or
cltd
or
idivb
xchg
insb
hlt
fwait
xchg
jo
cld
insl
mov
mov
jl
lods
test
sbb
in
mov
add
loop
mov
cmp
inc
test
and
loopne
fwait
mov
mov
sub
jnp
imul
aad
fldt
dec
out
or
add
shrb
les
out
xlat
xor
call
pop
jmp
xchg
push
or
data16
pushf
loope
sti
dec
test
sub
sub
cli
popl
mov
cld
mov
lods
mov
jp
xor
fnstsw
andl
xchg
call
addr16
mov
adc
or
push
dec
icebp
test
push
stos
cmp
sbb
jmp
xor
mov
xor
mov
fnstcw
xchg
mov
inc
mov
mov
ds
stos
aad
sub
mov
mov
add
cmp
jnp
pushf
ss
push
cmpsb
insl
inc
inc
aad
decb
and
sub
popf
mov
jmp
daa
arpl
aaa
pop
add
lds
push
xlat
pop
or
mov
lock
jns
push
jle
mov
inc
aad
jne
or
mov
mov
int
sbb
mov
ja
testb
rcll
jns
scas
mov
xor
inc
or
icebp
roll
icebp
sbb
sbb
jno
adc
clc
pop
lret
or
aaa
out
nop
push
push
mov
xchg
cld
xchg
fcmovnu
and
mov
jno
lods
movsb
add
and
and
int3
mov
cmpsl
pop
sub
mov
cmp
sbb
push
inc
inc
int3
xchg
mov
data16
pop
mov
loopne
test
dec
add
mov
leave
mov
test
mov
mov
mov
sbb
pop
in
sbbl
inc
out
sbb
push
fisttps
cmc
xchg
mov
cmpsl
jg
popa
adc
mov
jge
inc
inc
push
es
sub
aaa
or
aaa
and
inc
testl
pusha
out
jp
mov
dec
es
push
or
jp
test
xchg
movsl
adc
data16
daa
sbb
or
lds
pop
mov
adc
xchg
cwtl
push
xchg
cmp
in
int
jge
pop
call
dec
mov
xchg
popa
xor
cmp
or
cmp
push
cld
lods
incb
es
cwtl
fsubl
ja
out
pushf
add
lret
pop
iret
leave
adc
jae
adc
pop
push
dec
add
lds
mov
sbb
ret
fsub
xchg
ljmp
push
mov
and
out
mov
aam
cld
into
lahf
fcoml
jge
and
shl
sbb
scas
jmp
aas
jbe
and
push
adc
dec
arpl
inc
sbb
popa
iret
movsl
jb
std
pushf
jmp
aad
shrb
mov
mov
xchg
fwait
cmp
jns
dec
repz
das
rcl
add
sbb
jmp
es
jbe
pusha
outsb
test
or
jo
faddp
adc
and
pop
pop
jp
xor
pop
test
lret
or
shll
or
xor
mov
xchg
mov
lret
push
push
pop
and
mov
fsts
xchg
popf
dec
dec
sub
rorl
or
mov
mov
lret
jns
dec
cmpl
jno
fdivr
mov
mov
adc
pop
lcall
sbb
mov
adc
mov
lock
test
adc
xchg
mov
loopne
pop
nop
cmp
xchg
shll
enter
sbb
outsb
xchg
hlt
shrb
and
mov
push
in
pop
fbstp
dec
sub
fmuls
popa
lock
stos
imul
scas
add
cmpsb
cltd
xchg
sbb
lea
inc
xchg
sub
sub
bound
inc
jne
leave
and
mov
xchg
mov
push
mov
or
cwtl
sarb
mov
dec
mov
and
fs
in
bound
jle
push
pop
jae
cmp
and
call
dec
arpl
inc
test
movb
push
jg
cs
orb
sbb
shrb
mov
inc
ror
pushf
and
and
aaa
ljmp
call
mov
and
xchg
cmpsb
loopne
cld
out
push
stos
xchg
push
fwait
xchg
xchg
ret
movsb
test
fnstsw
mov
notb
call
imul
lret
dec
jecxz
fdiv
add
inc
mov
mov
mov
bound
jnp
and
sarl
mov
mov
sub
mov
add
jge
xchg
xlat
and
repz
jno
xchg
jae
clc
js
fdivs
daa
fists
shlb
xchg
shll
mov
imul
xor
ljmp
push
mov
jno
or
data16
dec
sbb
sbbl
jae
test
leave
stos
jp
imul
jge
hlt
mov
das
add
push
std
insb
push
adc
in
mov
xor
inc
cmp
cmpsb
jmp
scas
sbb
adc
xchg
imul
adc
mov
or
leave
xor
dec
adc
mov
cmp
mov
xchg
test
sbb
repnz
das
jbe
jl
push
rorb
nop
aas
ljmp
mov
in
rcrl
pushf
test
jb
jne
mov
xor
lods
loopne
in
fnstenv
fsubr
pop
shll
jecxz
adc
sub
and
jae
cmp
xchg
imul
jg
das
and
inc
call
mov
xchg
sbb
xor
push
sar
xchg
ja
mov
out
and
clc
cs
movsl
int3
push
loopne
push
jecxz
jg
adc
pop
ss
das
cmc
setno
fistps
adc
xor
cmpsb
iret
les
mov
cwtl
cmp
cwtl
loop
fistpl
movsl
lahf
ficomps
lock
dec
add
mov
jg
stos
lock
jg
jbe
pusha
lret
scas
daa
sbb
push
movsl
dec
rorl
fimull
mov
push
movsb
xchg
xchg
das
add
js
rolb
add
adcb
lea
xchg
pop
sub
fdivs
jb
mov
rcl
imul
mov
pop
sbb
sub
fbstp
mov
and
xchg
or
call
orb
adc
nop
icebp
test
mov
ja
leave
push
in
xchg
ds
ror
mov
mov
outsl
gs
inc
notl
add
popa
push
mov
mov
pop
pop
mov
lds
shrb
movsb
sub
xor
test
and
mov
loop
ljmp
and
jle
push
scas
and
stc
push
stos
in
gs
ret
movsl
fcoml
dec
and
pop
xlat
in
xchg
xorl
pop
lcall
push
xor
movsl
cli
das
ret
lahf
or
stos
outsb
adc
mov
ss
lods
or
lea
push
iret
push
pop
adc
add
addl
mov
out
inc
dec
call
sub
ss
cltd
cmp
outsl
sbb
jg
add
or
jns
orl
dec
or
inc
call
aas
fsubrl
cmp
sub
sub
enter
cmpsb
xor
mov
xchg
lods
add
cs
fs
fwait
rorl
fwait
mov
adc
mov
dec
int3
add
jne
or
sub
les
sub
js
fwait
clc
jbe
add
cli
das
pop
pop
sbb
add
out
loope
add
iret
jns
dec
or
ret
sbb
arpl
jno
mov
lods
sub
ffree
jp
jbe
ret
or
mov
and
cld
sahf
imul
dec
mov
sahf
cmp
push
mov
aaa
push
scas
jae
cmc
jp
imul
idivl
ret
outsl
lea
imul
stos
sub
mov
aam
fnsave
adc
sub
cs
lcall
mov
push
fdivrs
jge
gs
cmp
test
add
iret
jno
or
inc
rolb
jmp
adc
js
mov
mov
nop
jecxz
loop
dec
fmull
pop
push
pop
in
testb
insb
das
into
mov
addr16
fdivs
jb
adc
cmc
jne
jb
mov
mov
addb
xchg
mov
test
mov
add
sbb
sub
and
push
popa
push
jge
jp
and
insb
into
out
out
lret
push
lret
adc
into
push
cmp
pop
lcall
jge
jnp
dec
inc
scas
decb
mov
or
adc
or
mov
bound
jp
testl
inc
pop
push
xchg
sti
test
add
mov
cmp
xchg
jno
sahf
pusha
outsl
cmp
adc
or
icebp
loopne
jne
sbb
sti
pop
pop
sahf
out
push
push
jge
sbb
mov
nop
je
or
sbb
sarl
push
mov
sub
add
lret
lods
aam
ror
adc
jp
out
mov
andl
insb
adc
jge
iret
out
push
jo
pop
sbb
adc
cmc
aam
sub
xor
xlat
pop
inc
jae
sub
jmp
aaa
imul
mov
loopne
fcmovb
push
repz
or
mov
repnz
packsswb
jmp
xchg
and
test
mov
add
in
jecxz
pushl
sbb
enter
add
mul
pop
into
jne
pop
xor
xchg
mov
out
test
filds
out
sbb
mov
add
mov
stos
into
loopne
pusha
lods
outsl
mov
mov
stos
sahf
jo
pop
mov
aad
test
push
ret
cmpsl
mov
cmpsb
outsb
push
arpl
sahf
and
or
sbb
je
out
adc
mov
loopne
xor
inc
rcrl
out
push
mov
std
dec
xor
jge
pusha
fmull
ds
cld
test
sub
push
cmp
mov
stos
scas
sub
call
daa
ret
sub
test
pop
push
orb
outsb
jp
divl
hlt
test
cwtl
imul
adc
mov
add
mov
jle
aas
pop
roll
enter
jnp
mov
add
push
adc
movsb
push
dec
sarb
out
out
in
sub
xacquire
cld
emms
lods
ds
xor
and
mov
iret
xchg
adc
pop
dec
adc
sbb
lods
outsb
daa
scas
fldt
mov
in
cmp
jg
cmp
cmp
mov
je
jns
xor
cmc
mov
mov
popa
clc
mov
jg
out
mov
repnz
inc
xchg
lds
in
mov
xchg
xchg
cmpsl
jl
into
fistpll
dec
jb
inc
in
cld
cmp
inc
mov
iret
lret
nop
pop
sub
cmp
sbb
das
inc
icebp
xchg
daa
pop
test
out
mov
rcrl
add
jb
mov
add
fucomp
mov
jb
clc
aaa
cmc
repz
push
imul
mov
dec
xlat
lods
test
xor
xchg
inc
shrl
into
and
movsl
mov
cmp
scas
or
mov
push
insl
adc
mov
dec
xor
pop
mov
movsb
cmpsl
cwtl
jle
popf
ret
out
imul
xor
xchg
adc
jno
xchg
xchg
repnz
fs
and
pop
inc
adc
fdivl
sub
ds
and
daa
add
clc
ljmp
lret
jecxz
addl
push
sarb
push
mov
inc
sti
hlt
add
cltd
mov
das
cltd
jl
adc
imul
pop
leave
loope
adc
das
add
jae
mov
in
mov
ss
cli
pop
push
add
test
fistpl
xor
mov
jo
into
jnp
cs
sbb
ret
mov
scas
scas
mov
jecxz,pt
in
mov
sbb
enter
lahf
or
sahf
mov
xchg
adc
or
cmp
outsb
pop
pop
imul
fisubs
pop
insl
popf
hlt
or
fcmovb
cwtl
sub
movsl
dec
xor
in
out
gs
or
mov
adc
fistpll
and
cs
xchg
stos
pop
mov
push
lock
in
mov
push
bound
ss
and
inc
mov
xor
mov
mov
pop
mov
dec
out
test
push
in
dec
loope
daa
or
rorb
mov
pop
rolb
sbb
mov
mov
cmp
and
inc
inc
mov
out
dec
out
pop
sbb
push
xor
mov
std
popa
push
jp
and
mov
mov
add
sbb
inc
ret
pop
push
das
and
popa
notb
cmp
add
pushf
sub
and
and
sti
xchg
ret
mov
add
push
pushf
push
or
sub
push
mov
cmp
jl
mov
xor
adc
imul
nop
cmc
lahf
mov
sbb
sbb
mov
jb
nop
xor
cld
aam
sub
mov
mov
lods
mov
add
ljmp
scas
outsb
inc
or
roll
scas
add
add
std
pop
xor
pop
and
sub
jge
mov
pop
ja
testl
cmpsl
dec
xor
mov
push
mov
mov
and
dec
inc
stos
cmp
scas
mov
subb
and
ljmp
popf
and
xchg
sub
fnsave
gs
scas
in
push
adc
add
imul
or
fsubl
lods
aaa
cmp
aas
arpl
movsb
mov
jnp
js
leave
cltd
dec
mov
jbe
pop
adc
push
pusha
outsb
mov
mov
cmp
xor
pushf
xchg
out
dec
lods
cmpsb
je,pn
add
ljmp
sub
adc
js
mov
imul
dec
add
dec
scas
cmpsb
adc
xchg
mov
xlat
gs
sbb
xor
shlb
in
test
test
dec
andl
hlt
dec
ljmp
insb
xor
sbb
cmpsb
push
mov
dec
jge
push
out
rol
mov
movsb
outsb
jecxz
or
aas
jnp
mov
cmpb
jae
jb
push
sbb
pop
xlat
fstps
mov
and
iret
jne
xchg
cmc
push
rorb
xor
jno
shrl
mov
mov
setno
sbb
sub
mov
dec
mov
sub
inc
lock
adc
and
cmp
stos
add
jle
jge
add
sahf
fisttps
scas
xchg
sub
call
scas
sbb
dec
clc
icebp
cltd
mov
dec
lret
pop
aas
jno
push
cmp
or
cmp
mov
push
mov
mov
and
fildl
loope
mov
int
cltd
scas
sub
dec
sbb
jecxz
xchg
xlat
sbb
cltd
cltd
sbb
pushf
lock
ret
stc
lds
pop
loop
scas
lret
mov
addr16
lods
dec
push
imul
jae
enter
jae
mov
jg
mov
lret
data16
dec
mov
mov
fldpi
pop
mov
into
and
mov
dec
push
inc
cmc
leave
aaa
mov
pop
outsl
inc
arpl
jo
stos
jnp
mov
mov
sub
cmp
inc
ljmp
push
adc
pop
xor
or
mov
push
jno
or
dec
and
add
lcall
lods
mov
test
push
cmp
jle
idiv
into
mov
test
test
insb
pop
loope
sti
stc
adc
ljmp
int3
mov
inc
push
addb
and
xchg
xor
xor
or
cs
mov
mov
mov
mov
dec
push
aam
push
xor
test
outsb
pop
inc
mov
pop
jae
ja
scas
add
mov
aaa
test
out
add
mov
inc
push
cs
dec
lds
test
pop
add
jmp
push
jne
or
mov
lock
lret
pop
dec
sbb
movsb
push
lods
push
lahf
mov
ret
cmpsb
sbb
mov
shll
cmp
xchg
xchg
out
sahf
cwtl
sub
nop
inc
insl
adc
jae
fistl
iret
xchg
mov
stc
xchg
cltd
mov
cld
add
nop
call
into
in
repnz
sub
sarl
ss
cmp
outsl
add
mov
push
bound
nop
outsl
movl
push
xchg
add
std
dec
je
add
fwait
daa
push
sub
sub
mov
incb
frstor
dec
xor
mov
inc
push
sar
mov
jmp
dec
fidivs
jo
mov
repz
adc
inc
lds
push
fs
ljmp
lahf
gs
sahf
jnp
and
iret
and
mov
fs
sbb
aam
mov
lods
sbb
jbe
jo
xchg
push
sub
push
fnstcw
andb
push
aas
jg
imul
fs
js
test
lret
pop
out
xor
out
idivb
in
push
mov
cmc
mov
add
push
fstpl
mov
sbb
arpl
cmpsb
divl
stos
mov
cmp
and
sub
mov
xor
lret
mov
dec
pop
jns
js
jb
nop
in
xchg
ljmp
mov
es
lahf
sbb
jecxz
es
lret
cmp
push
pop
sub
mov
cmpsb
test
jl
jl
out
stos
push
shll
jp
jbe
dec
shlb
xor
xchg
inc
jge
or
jmp
ficoml
iret
loop
clc
psllw
call
xchg
xchg
fistl
pop
mov
cmp
inc
mov
and
or
fs
jge
add
jb
sbb
sub
fs
inc
fnstenv
mov
inc
lahf
mov
test
ret
push
xchg
xor
shl
outsl
add
ficoms
inc
cmp
stc
sub
sub
insb
inc
scas
sbbl
mov
xor
and
mov
je
cmp
mull
out
sarl
mov
xor
xchg
xchg
push
movsb
sbb
ret
aam
in
inc
scas
mov
fwait
popa
inc
ss
enter
and
inc
mov
mov
cmp
mov
ret
and
xlat
imul
in
mov
sbb
inc
sarl
mull
aam
xchg
sub
test
loope
dec
movsl
les
mov
mov
pop
popa
mov
xorl
xor
mov
loopne
or
imul
and
fisubl
fstpt
pop
jno
or
sub
addr16
mov
test
mov
xor
mov
push
xor
imul
inc
push
lret
repz
repnz
dec
jb
mov
negl
lahf
cmp
pushf
add
rcrb
std
imul
sub
adc
add
xchg
xchg
outsl
dec
cmp
lcall
fldcw
pop
lret
rclb
pop
sub
mov
adc
jno
arpl
ret
mov
je
not
dec
cmpsb
in
loop
leave
test
popf
pop
test
insl
push
sbb
mov
adc
sbb
pop
sbb
xor
into
xor
mov
lahf
jl
cmp
lcall
in
ret
jbe
xchg
int
xchg
sub
roll
jp
sub
lods
psadbw
inc
xchg
xor
daa
mov
fldenv
push
mov
iret
mov
add
mov
mov
pop
adc
lea
mov
mov
shll
stos
dec
sbb
mov
jnp
or
push
cmp
dec
pop
and
int3
pop
imul
mov
add
mov
sahf
insl
test
xor
add
clc
pop
sub
ss
push
jl
ret
outsl
int
push
test
add
stos
push
sub
push
cmpsl
aas
mov
xchg
pop
out
add
push
sbb
or
shll
pop
sarl
in
jo
mov
testb
addl
fmuls
cmp
sbb
call
test
xchg
sbb
jmp
mov
cmp
ljmp
mov
dec
push
pop
mov
adc
int3
add
jne
popa
clc
ss
push
pop
dec
jge
cwtl
xchg
mov
scas
lds
mov
sahf
imulb
in
sub
push
cmp
push
cmpsb
jl
inc
or
mov
in
mov
adc
jns
sub
mov
bound
mov
rcrl
fchs
push
stos
jbe
arpl
pop
out
out
push
rcrl
xchg
push
cld
in
scas
push
pop
dec
jle
and
cmp
rcll
cmp
les
push
lahf
lock
dec
jp
fs
mov
clc
mov
andb
jno
or
xchg
into
jle
pop
jbe
mov
lods
mov
enter
jns
xrelease
lret
stos
lret
jo
add
sub
in
mov
std
adc
pop
fcoms
xchg
or
clc
hlt
arpl
cmp
xchg
fwait
fs
mov
xchg
mov
mov
jno
test
jno
cmp
cmpsl
jl
sbb
cwtl
imul
mov
dec
popf
add
inc
push
add
xchg
sti
out
pop
mov
and
sarl
or
mov
cmp
sbb
mov
rclb
addr16
sub
push
sub
fisttps
mov
pop
addr16
testl
out
dec
leave
or
ret
mov
cmp
cmp
xorl
sub
jne
mov
fdivs
ja
aad
mov
clc
repz
sbbb
jecxz
lock
xchg
int
test
push
xchg
mov
sti
add
out
leave
inc
cwtl
adc
adcb
pop
pop
sub
mov
lds
cwtl
add
dec
mov
test
sbb
repnz
out
cmp
or
cli
in
push
hlt
mov
shlb
jno
xchg
jecxz
fstl
dec
inc
and
adc
or
xchg
lret
mov
and
or
add
fdivl
cmovo
stc
inc
out
push
and
mov
jnp
jmp
push
and
or
push
sub
shll
push
enter
cs
or
and
xchg
insl
repnz
or
sbb
xchg
adc
int3
pop
or
dec
rcrb
mov
sbb
pop
and
outsb
imul
jecxz
xor
popa
hlt
inc
mov
mov
cs
mov
and
stc
icebp
lods
add
add
mov
out
add
adc
dec
test
mov
mov
out
outsb
aas
paddq
lret
sub
mov
scas
cmp
add
push
call
or
fdivs
data16
dec
adc
push
addl
aas
jmp
cli
lcall
lds
ds
pusha
ds
push
sti
and
xor
inc
fiaddl
sbb
fists
cmp
lret
hlt
int3
pushaw
jg
std
insl
dec
or
sbb
dec
sub
sbb
adc
mov
dec
pop
mov
popa
incl
sub
or
lock
mov
push
xchg
pop
bound
and
xchg
shrb
inc
es
mov
aas
in
movsb
pop
cmc
inc
test
push
add
test
ret
repnz
mov
mov
ret
add
and
or
ja
inc
mov
adc
mov
ljmp
push
mov
mov
xchg
sub
jne
fiadds
daa
pcmpgtw
insl
test
int
lret
mov
cmp
or
rorw
repnz
ljmp
test
popf
lock
add
inc
pop
fwait
push
ljmp
insl
call
movsl
outsl
icebp
add
pop
sub
jns
mov
enter
sbb
jp
decb
mov
ret
js
sub
cmc
xchg
popa
subb
mov
loopne
fmuls
adc
mov
xor
gs
pop
pop
or
fs
test
jns
stc
fnstsw
into
mov
xchg
js
fistps
sbb
sarl
cli
aas
push
aaa
cmp
outsl
push
inc
push
repz
jle
lods
cmpsb
and
mov
push
mov
adc
andl
pop
pusha
or
icebp
loop
dec
stos
cld
shrl
bound
push
dec
jne
push
negl
clc
negb
cmpsl
dec
pop
or
pop
jge
jecxz
lods
ja
lahf
mov
jmp
pop
jne
cmp
mov
sti
jp
aaa
loopne
fistps
std
mov
enter
outsb
push
daa
push
scas
call
adc
out
mov
clc
lret
sbb
loopne
iret
outsb
rorl
inc
mov
dec
enter
add
and
movsb
scas
cmp
inc
sahf
adc
es
mov
aas
pop
movb
xchg
in
scas
dec
jl
jno
repz
xor
inc
test
inc
or
movb
arpl
rclb
and
pusha
mov
or
loope
lret
dec
arpl
or
loopne
cli
sbb
push
loopne
jns
inc
or
std
cmp
xchg
scas
into
iret
call
push
gs
jb
or
adc
jg
add
lcall
inc
pop
fldenv
aaa
add
or
enter
in
jae
push
and
push
add
pop
cmp
mov
xor
mov
clc
inc
repnz
dec
jmp
cmp
mov
orl
pop
lock
das
clc
cmp
shll
daa
sub
sub
dec
jecxz
jg
xchg
ret
imul
xchg
xlat
or
push
js
es
in
imul
das
pop
ja
dec
push
push
jle
jge
pop
lret
gs
insb
mov
push
xor
adc
mov
mov
imul
cwtl
push
inc
lea
adc
loope
adc
or
sahf
pop
rclb
aas
adc
shll
and
mov
and
inc
inc
mov
lock
nop
push
sbb
mov
xor
in
adc
pop
lahf
mov
inc
dec
stos
xchg
sbb
insl
add
xor
mov
cmp
mov
jecxz
cmp
ds
call
adc
or
pop
cltd
pushf
repnz
pop
jns
stos
or
loop
lods
sub
fs
hlt
out
cld
inc
rclb
hlt
mov
call
lods
lods
mov
push
cmpb
add
or
jbe
mov
cmp
test
loopne
addb
cmp
shr
sahf
test
imul
mov
sub
in
and
inc
jns
cmp
pusha
in
fldt
and
xor
std
icebp
popf
repz
mov
lret
push
inc
fbstp
sbb
push
iret
xor
or
shrl
xor
lahf
pop
add
aad
clc
fdivrl
dec
popa
jb,pn
gs
outsb
ss
adc
mov
js
sub
mov
ror
mov
nop
lret
inc
test
shrb
scas
in
fmuls
cmpsl
add
jnp
outsb
xchg
mov
movsb
enter
in
pop
or
sahf
in
mov
inc
leave
mov
inc
daa
daa
ljmp
scas
mov
add
push
adc
ret
orb
mov
or
jg
stos
push
cmpsl
sbb
es
pop
lahf
xchg
fcompl
sub
gs
cld
pop
xor
lret
int
scas
mov
and
lret
icebp
repnz
mov
mov
jge
or
push
sti
jmp
loop
and
push
jle
icebp
pop
dec
xor
mov
cld
mov
lcall
arpl
xor
xor
arpl
fsubrs
mov
pop
jecxz
daa
mov
xchg
sahf
movsl
repnz
pop
sub
in
cmpsb
cmpsb
nop
ds
push
ljmp
shl
les
shl
mov
ja
jo
lds
lcall
mov
imul
insb
xchg
cmp
add
xor
les
mov
stos
pop
adc
fidivrs
sbb
mov
repnz
lods
jmp
cmp
sub
jmp
push
daa
xchg
add
testb
pusha
rcrb
data16
repnz
out
lret
ret
aaa
nop
xchg
gs
or
pop
pop
mov
xor
and
test
les
pop
je
ljmp
imul
adc
sub
pop
jbe
in
add
cmpsb
pop
aaa
add
pop
cmpsb
dec
adc
out
push
fucom
dec
jo
jno
pop
or
frstor
je
shrb
add
and
aad
mov
inc
adc
sbb
sub
scas
int
adc
test
mov
mov
cwtl
sbb
push
or
xchg
sub
movb
xchg
roll
out
cmp
push
mov
inc
xor
mov
sbbb
xor
stc
sbb
jg
mov
stc
test
int3
scas
adc
es
add
dec
mov
mov
mov
sub
jbe
popf
or
jg
jle
outsb
sub
jbe
lcall
xchg
hlt
mov
mov
pop
and
fidivrl
mov
cmpsb
call
movsl
testl
or
test
jns
adcb
repnz
fiadds
ja
test
sbb
mov
sti
jecxz
loope
pop
mov
xchg
add
jb
gs
in
sub
push
data16
or
xor
push
xchg
push
cli
ja
pop
cmp
push
scas
cwtl
or
int
push
xchg
mov
sahf
je
jbe
aas
adc
push
inc
mov
push
ja
mov
xor
sub
sbb
push
std
xor
dec
stos
outsb
rcrb
bsr
jne
mov
ret
dec
aaa
mov
mov
mov
inc
mov
mov
nop
sub
push
not
fcomi
xor
hlt
push
add
inc
push
inc
je
mov
rcl
and
xor
test
ss
dec
icebp
je
gs
out
mov
cmc
shrb
out
push
xchg
pop
lock
or
push
mov
sub
mov
sbb
or
xchg
stos
pop
pop
sub
scas
mov
dec
inc
pushw
mov
mov
pop
lcall
cmpsb
sub
popf
mov
or
jo,pt
cli
add
jb
dec
lahf
inc
or
into
pop
jne
test
xor
push
fdivrl
push
fnstsw
in
xchg
imul
and
fldcw
sarb
mov
ljmp
in
mov
lods
aam
cmpsb
xor
push
xlat
adc
push
sub
add
lods
xor
mov
imul
leave
push
push
aad
cmpb
sbb
test
out
cmp
mov
iret
add
pop
inc
push
push
pop
dec
mov
enter
bound
enter
fisttps
icebp
jno
pushf
xor
push
add
inc
jne
jge
mov
insb
xor
cmp
push
cltd
ja
test
pop
jnp
popl
mov
dec
enter
pushw
dec
fs
push
and
mov
pop
mov
xchg
add
jle
push
push
push
push
sbb
sahf
or
xchg
stc
mov
mov
add
lret
push
xchg
mov
je
aam
outsl
dec
iret
fistpll
ja
mov
add
test
mov
arpl
dec
inc
push
push
lods
loope
mov
sbb
mov
adc
clc
ror
mov
insb
repnz
mov
fwait
or
fstl
push
or
dec
loopne
loop
out
sbb
cmp
xor
lea
cmp
sub
jb
adc
cmp
and
or
sbb
xchg
mov
out
sub
aad
add
aad
or
ljmp
loop
xchg
fnstenv
inc
in
adc
rcrl
add
xchg
inc
inc
aad
shll
mov
push
xor
push
xchg
repz
push
add
imul
sub
adcl
lods
xchg
push
sub
cs
shlb
fisttpl
add
add
push
mov
outsb
shrb
outsl
mov
pop
rep
icebp
int3
sub
mov
xor
dec
mov
dec
pop
lret
add
add
mov
sub
popa
or
outsl
dec
dec
push
outsb
fmull
jb
fsts
mov
pusha
cmp
insl
rorl
xchg
push
ss
scas
mov
out
or
adc
outsl
or
inc
xchg
popf
sbb
and
stc
xor
push
js
mov
cltd
lods
push
outsb
mov
lods
cmc
sbb
imul
fcmovnu
shl
add
je
xor
jle
fsubs
or
xchg
jmp
test
sarl
dec
imul
or
das
lods
imul
jno
mov
or
or
rcrl
jb
adc
add
xchg
scas
aam
adc
int
insb
sysenter
sbb
ja
into
arpl
jo
mov
pop
mov
imul
out
dec
mov
xchg
fsubr
stos
hlt
das
aaa
mov
dec
mov
daa
hlt
sub
mov
sbb
es
clc
mov
xchg
pop
dec
stos
pop
push
out
xchg
pop
dec
mov
push
stos
add
addr16
cmp
testb
sbb
push
lock
imull
and
adc
lret
pop
dec
fistps
and
mov
xchg
movsl
js
cmp
lcall
mov
push
ret
cmpl
mov
mov
pop
adc
rorl
rolb
sbb
sub
imull
cmp
fistpl
fldlg2
pop
dec
hlt
incb
add
adc
cld
mov
or
scas
scas
adc
stos
mov
push
aaa
inc
push
iret
push
push
mov
add
sub
xchg
and
movsl
sbb
mov
dec
loopne
inc
clc
mov
mov
testb
xchg
jge
xor
mov
xor
repz
jne
sbb
lahf
jl
lea
imul
adc
inc
pop
push
arpl
out
in
mov
push
pop
pushf
repnz
outsb
imul
imul
adc
adc
jo
fwait
dec
les
rcrl
mov
push
xor
pop
mov
xchg
fcompl
lcall
or
jb
xlat
daa
cmpsl
sbb
in
leave
jecxz
addr16
and
addr16
mov
shl
add
push
in
ds
lret
mov
mov
xchg
adc
outsl
or
frstor
jae
ret
cs
daa
jb
scas
mov
insb
lods
mov
push
xchg
and
xor
push
dec
sti
jno
ss
jp
fstl
jl
push
adc
stc
or
push
push
xor
fcmovbe
xchg
sahf
jge
sar
neg
std
cmp
and
pop
xchg
xorb
stos
jno
xor
mov
mov
push
push
xor
rorb
or
pop
adc
mov
aam
aam
inc
and
pop
sbbb
cs
loopne
ljmp
pop
shl
lcall
and
insl
test
pop
mov
push
jno
cmp
loope
add
lds
push
jnp
push
and
mov
xchg
ret
adc
testb
cmpl
sarb
fucomp
insb
loop
xchg
xchg
repz
sub
in
clc
dec
pop
push
xlat
mov
scas
outsb
push
out
imul
add
imul
inc
dec
in
ss
cmp
cld
or
jns
jb
add
mov
xor
mov
push
dec
mov
ja
adc
fimull
repz
movsl
cltd
inc
cld
leave
and
das
cmp
jae
inc
mov
fsub
negb
and
adc
hlt
mov
or
lea
fsubl
popa
pop
mov
loopne
cmpsb
bound
hlt
bound
lret
mov
pushw
fldl
xchg
pop
pop
cld
scas
ds
push
dec
cmpsl
ret
push
push
mov
imull
adc
in
pop
mov
push
fsubrp
divb
push
dec
mov
push
rclb
sbb
pop
fsubrp
fcomps
sbb
outsl
lods
test
aad
dec
push
shrl
in
sub
js
out
mov
cli
ret
add
push
imul
jbe
push
lock
cmpsl
fisttpl
and
ja
or
subb
push
jmp
outsb
xchg
push
xor
pop
iret
push
adc
sub
lock
cli
mov
mov
jo
adc
push
jo
mov
xor
sbb
cli
mov
es
sbb
movsb
dec
testb
test
sbb
jae
mov
cmp
dec
add
add
data16
insb
fiaddl
xchg
fisttpll
out
movsb
mov
in
sbb
mov
push
and
mov
scas
dec
mov
frstor
fsubrs
adc
es
push
ret
lcall
adc
insl
inc
inc
sbb
and
hlt
mov
mov
pop
and
repnz
push
add
pop
push
mov
das
xor
out
inc
ss
movsb
int
test
shlb
cmc
mov
sti
sub
mov
lret
lock
stc
mov
cmpsb
adc
or
inc
push
xchg
sub
or
bound
lcall
int3
mov
sbb
popf
mov
jb
test
adc
and
cwtl
test
aam
sub
test
insl
pop
dec
mov
shlb
das
adc
stc
clc
loop
mov
loop
pusha
bound
or
dec
decl
jg
mov
xchg
mov
push
ret
inc
xchg
mov
pop
lods
inc
outsl
popf
mov
jmp
cltd
mov
cmp
orl
rclb
test
pop
and
test
mov
or
pop
pop
xor
or
mov
adc
roll
call
and
incb
clc
les
xor
push
je
mov
push
mov
or
jp
aad
jmp
sbb
stos
arpl
jae
sub
in
lahf
pop
add
sub
scas
mov
mov
push
fs
add
add
mov
add
lahf
es
adc
and
xchg
test
dec
cmp
inc
sti
adc
push
arpl
movsb
or
or
clc
and
cmpsl
adc
mov
inc
jae
stos
adc
xchg
cwtl
loope
arpl
xor
push
punpckldq
xchg
popa
iret
rclb
pop
xor
or
sbb
addr16
inc
stc
jl
ljmp
cmp
stos
fldl
fisttps
lods
iret
stos
add
cltd
xchg
add
add
sahf
cmpl
and
fsubr
bound
and
cmpb
stc
push
aas
idivl
push
ror
adc
push
pop
xchg
fildl
outsl
rep
cs
shlb
cs
out
out
scas
ret
xor
mov
jbe
add
popa
mov
adc
xchg
shrb
xchg
shr
scas
mov
scas
repnz
add
ret
stos
sbb
sub
cli
push
sub
and
addl
pop
in
clc
xor
cmp
shr
pop
lods
sub
out
pop
pop
sub
outsl
and
inc
xor
push
rcrl
pusha
movsl
mov
mov
and
aam
add
ss
cmpsb
movsl
mov
inc
push
fdivrl
adc
pushf
and
cmpsl
fs
mov
xchg
aam
je
stc
hlt
inc
push
fwait
mov
inc
cmc
enter
fbstp
in
inc
ret
lcall
ret
inc
pop
out
pusha
mov
fwait
mov
out
iret
or
ljmp
mov
mov
push
push
mov
andb
xlat
sub
jp
out
mov
mov
push
loopne
scas
jnp
push
mov
imul
ds
add
test
cmp
inc
mov
es
nop
out
push
add
jae
add
ljmp
cmpsl
push
or
pop
repz
jns
sti
es
pop
je
dec
add
cmp
addl
xor
aaa
bswap
dec
jp
adc
nop
dec
fcoml
jb
mov
inc
cmp
xor
in
push
xchg
loope
dec
mov
dec
jmp
jns
dec
hlt
mov
leave
mov
inc
add
jmp
fwait
adc
out
in
lea
cltd
and
sbb
adc
enter
sbb
mov
fwait
stc
or
xlat
mov
sbbl
leave
xchg
sub
pop
dec
xor
cmpsb
mov
adc
xor
arpl
cmc
fistl
ret
mov
mov
cmp
xchg
ljmp
mov
and
or
adc
xor
and
icebp
jge
cmpsl
dec
stos
pop
data16
mov
and
cmp
jno
enter
pop
add
ret
dec
in
push
shlb
popa
cld
jo
std
test
lods
xchg
in
pop
pop
mov
inc
outsl
imul
pop
pop
fwait
insl
adc
mov
notl
aaa
sub
sub
inc
test
or
fisttpl
setno
mov
decl
or
jp
mov
cmp
mov
inc
mov
mov
push
popa
xorb
fdivs
mov
aas
inc
add
repnz
dec
mull
out
and
scas
or
xor
add
or
icebp
cld
lret
cmp
xchg
mov
fwait
jae
or
das
fcom
cmc
movsl
mov
aaa
iret
arpl
xor
jnp
js
adc
dec
pop
enter
dec
jbe
fstp
mov
stos
adc
cmp
jp
pusha
ljmp
mov
int
cmp
mov
push
movsb
mov
push
mov
lret
in
out
ja
jg
int3
nop
mov
mov
dec
pop
jp
leave
cmpsb
push
out
std
jmp
push
push
push
vcvtps2dq
bound
mov
mov
push
movsb
fcmovne
dec
mov
call
xchg
pop
jmp
lret
fcmovne
pop
fnstcw
pop
push
cmpsl
dec
repnz
movsl
scas
xor
shlb
in
push
in
out
outsb
push
mov
je
mov
stos
mov
jl
in
push
cld
repnz
arpl
sbb
dec
push
insl
div
jg
imul
bound
imul
cmpl
adc
cltd
or
mov
cwtl
in
mov
call
shr
arpl
mov
xchg
fucomi
repnz
hlt
cmp
mov
jp
shl
push
mov
pop
sub
test
or
in
movsl
jge
pop
mov
loop
xchg
or
dec
sub
into
and
repz
sub
push
sbb
lret
lret
pop
jg
addb
lea
pop
cmp
jge
mov
sub
and
push
aas
push
mov
stos
hlt
sub
push
xchg
enter
cmp
loop
cs
sub
loope
ljmp
xor
iret
mov
adc
imul
sbb
out
subl
xlat
push
repnz
in
stc
icebp
xor
mov
pop
shlb
mov
add
inc
xor
js
jmp
sbb
lcall
shll
lcall
mov
js
cltd
xlat
xor
icebp
jle
sahf
push
imul
mov
sbb
pop
lcall
jbe
pop
cli
add
rolb
lds
lea
pop
dec
lcall
mov
lahf
in
mov
adc
mov
insl
sahf
ja
xor
dec
orb
mov
in
xor
and
xchg
mov
xor
test
enter
jle
sbb
into
xchg
cli
xchg
into
adc
pop
fucomip
subl
mulb
adcl
jp
adc
sbb
pop
inc
push
and
or
fldt
push
cli
add
sbb
aas
arpl
xchg
sbb
cld
fcomip
xchg
popf
mov
cwtl
lock
cmp
pop
inc
stos
leave
ret
pop
mov
mov
inc
out
scas
cmp
xor
shr
rolb
pop
add
les
in
mov
cli
frstor
test
mov
clc
fdivr
popf
ja
dec
stc
es
jae
mov
sbb
fcmovu
inc
and
fcompl
mov
dec
js
insb
push
pop
cmp
stos
popf
mov
or
cs
in
xorb
icebp
sbbl
xor
loopne
mov
ljmp
xor
out
xchg
mov
stos
xor
andb
fisttps
outsl
inc
icebp
es
sub
dec
addr16
xor
sub
and
cs
mov
and
xor
pop
mov
daa
fld1
jmp
movsw
int3
std
je
daa
loop
in
rcll
pop
mov
xchg
dec
push
dec
xchg
rclb
iret
jno
pop
addr16
loop
jge
leave
push
in
pop
jg
cmpl
scas
leave
or
lret
xchg
cmp
mov
mov
popa
xchg
imul
or
gs
repz
push
mov
inc
mov
xchg
push
aam
mov
lock
pop
inc
fwait
lock
lods
jle
jle
inc
mov
popf
call
or
pop
sbb
dec
gs
cmp
out
sub
test
sub
jmp
pushf
shll
or
pop
xchg
push
iret
nop
lods
push
dec
movsb
fimuls
jp
int
or
or
movsl
fiadds
in
loope
and
sub
cmp
xor
dec
movsl
pusha
stc
xchg
xchg
pop
fidivl
sub
in
xor
xor
sub
jle
lret
jnp
and
cmpb
mov
ret
inc
jp
push
add
pop
inc
dec
lods
gs
push
arpl
adc
fwait
inc
cld
setl
ficoms
iret
mov
mov
lods
cmpsb
dec
fwait
sbb
les
jae
cmp
add
stc
lret
cli
add
loope
enter
cmp
mov
into
imul
out
movsb
mov
jo
fadds
lret
ret
add
xor
ret
push
sub
add
cmp
loop
std
data16
cwtl
pop
adc
cmp
xchg
test
lahf
mov
or
mov
cmc
jle
hlt
push
into
cmp
pusha
or
out
addr16
push
inc
add
scas
xchg
adc
jle
cmpsl
inc
and
push
push
cmc
add
aas
sbb
nop
mov
and
aam
xchg
addr16
movsb
pop
divl
push
jo
lods
imul
sub
fdivrp
jno
jge
mov
repnz
dec
loope
cmp
std
sub
sbb
sub
or
outsl
inc
or
add
fstpl
outsb
mov
xchg
pop
in
aam
inc
insb
mov
test
pop
lods
test
xchg
ret
imul
push
xchg
pop
and
xorb
xor
data16
inc
push
sub
cmp
jbe
movsl
cmp
hlt
dec
or
lret
shl
jae
call
fdivrs
jecxz
out
jle
push
pop
push
dec
xchg
mov
rorb
mov
je
mov
push
cmp
sbb
jnp
push
sub
push
mov
idivl
jnp
cmpsb
dec
mov
daa
fbstp
filds
orl
lods
out
and
cs
rolb
mov
cltd
jb
or
or
mov
inc
ds
push
dec
push
or
jp
adc
lods
adc
push
rcr
pop
aad
aas
and
fsubrs
cmp
in
pop
xor
mov
rcrb
push
mov
xlat
jbe
dec
mov
mov
mov
cmpb
lcall
enter
xor
push
fstps
dec
or
sub
pushf
fisubrs
xchg
dec
ds
scas
stos
sbb
mov
rcrb
and
jecxz
xor
lods
xor
shl
test
xchg
inc
outsb
push
or
fsubl
add
aas
int
push
andb
jb
jne
call
sti
xchg
lods
fstps
loope
fs
mov
sahf
mov
enter
lret
int3
fiadds
pop
push
lods
ret
movsl
arpl
cli
xchg
mov
shlb
mov
inc
int
aas
mov
aas
sub
clc
das
jns
xlat
jl
inc
sarl
push
das
inc
pop
inc
push
xchg
fwait
push
xchg
xlat
gs
je
imulb
cwtl
pop
add
sub
bound
popf
cmpsb
iret
cmp
fcoms
adc
jle
mov
push
adc
lcall
movsl
lods
outsl
gs
imul
mov
push
mov
lcall
imul
jns
ret
movlps
data16
xchg
and
pop
int3
fisubl
xor
cwtl
lods
lea
mov
ja
mov
stos
divb
xchg
out
std
inc
push
push
push
jl
into
mov
int3
mov
mov
push
aaa
mov
and
in
popa
enter
cmp
fadd
in
lcall
jbe
sbb
cwtl
sti
inc
dec
jne
xchg
hlt
hlt
fstpt
pushf
cltd
fwait
pop
es
and
decl
sub
adc
adcb
cltd
js,pn
into
jo
int
push
call
imul
push
in
pop
cltd
mov
cs
aad
lea
sub
outsb
js
and
adc
repnz
or
aam
mov
rcll
mov
sub
inc
subb
rorl
dec
sub
mov
push
jae
adc
mov
jb
fcomi
pop
fwait
push
mov
jecxz
push
cmp
insl
sub
and
lods
ljmp
cld
lods
jo
mov
jmp
fstl
jne
cmp
loopne
sub
js
fildll
mov
xchg
add
xchg
jo
in
or
and
inc
rcr
sub
cmp
test
sbbl
sub
xor
test
pop
or
jecxz
stc
cmpb
movsb
rorb
scas
and
xor
mov
pop
rcrl
sti
push
jno
mov
dec
jns
subb
in
push
fsubs
adc
scas
loop
pop
pusha
movsb
repnz
inc
out
popa
aaa
addr16
cmp
mov
xchg
in
push
leave
or
fisubrl
xlat
cld
rcl
xor
shlb
stos
popa
or
xor
push
insl
adc
mov
rolb
push
push
sub
cmp
xchg
gs
cmpsb
mov
jb
or
push
push
fnsave
fcomps
aaa
xor
lahf
pop
stos
fdivs
inc
push
pop
mov
aas
ds
push
insw
shll
mov
cmc
jp
inc
push
pop
xor
jbe
pushl
and
outsb
rcrl
push
mov
cmp
cmp
mov
jl
xchg
xchg
cs
mov
push
push
loop
test
rcl
in
push
cli
loop
mov
dec
je
gs
fsubl
test
sub
mov
jbe
add
insb
mov
add
pop
mov
movsb
pushf
mov
inc
mov
push
fiaddl
push
je
mov
test
popa
cmc
push
xchg
andl
inc
push
rolb
add
push
mov
je
movsl
cmpl
xchg
cld
mov
xchg
and
ds
xlat
cltd
inc
or
push
mov
ja
in
sahf
fmuls
and
shlb
jl
pop
fcom
cmp
add
testl
test
movsb
and
nop
repz
mov
ljmp
lret
mov
in
push
stos
adc
adcb
cli
es
or
mov
and
xor
pop
daa
aaa
insb
xorb
jne
movsb
lcall
jbe
mov
andl
lret
test
xor
movsl
clc
dec
lahf
xor
cmp
push
sub
pop
pusha
scas
or
popa
pop
das
push
pop
popa
hlt
sbb
dec
xor
aad
imul
adc
imul
test
xor
enter
push
xor
test
pop
aas
inc
cmp
jae
mov
iret
in
dec
fcom
imul
xor
sahf
test
sub
in
mov
pop
pop
xor
sbb
ds
pusha
repnz
add
stos
xchg
mov
scas
lret
add
mov
lcall
pop
inc
jl
fs
and
xchg
or
call
push
out
ljmp
jae
mov
pop
dec
or
daa
cmc
jp
mov
or
adc
xor
lods
out
cmp
insb
sbb
dec
mov
shrl
mov
loop
xchg
aam
lods
call
jmp
mov
aad
add
cmp
mov
xor
shlb
jbe
cmpsb
gs
inc
outsl
jecxz
aad
out
mov
fdivp
insl
pop
dec
pop
adc
mov
icebp
fists
cmpsl
pop
sub
xor
fstps
insb
ja
mov
shl
jne
jno
stc
into
adc
push
sbb
cmp
mov
sub
add
add
adcl
into
fisubs
sbb
movsb
jae
lods
jl
clc
push
push
in
out
test
lret
cmpsl
mov
in
lds
and
daa
cmpsb
cmp
push
push
sbb
and
jl
add
fimull
pop
and
jle
gs
add
mov
jbe
jl
sbb
push
cwtl
push
es
mov
loop
push
add
adc
js
inc
xchg
cld
inc
lret
ja
and
adc
pop
xor
dec
jmp
cmp
xchg
push
push
imul
adc
imul
mov
inc
enter
dec
lcall
push
stos
pop
push
sub
popa
mov
pop
lock
add
fdivl
inc
jns
push
push
mov
aas
loop
add
mov
inc
pop
add
fwait
lahf
loope
pop
pop
lods
add
xor
fists
les
lcall
aaa
dec
adc
stc
popf
or
lret
xchg
jmp
dec
mov
jo
and
in
hlt
jnp
xor
in
movsl
sub
add
jno
fldcw
mov
andl
xor
ljmp
call
scas
jl
movsl
mov
add
and
mov
pusha
adc
xor
mov
xor
inc
jg
and
pushf
inc
test
inc
fcompl
adc
mov
ficomps
inc
leave
nop
lret
cmp
sub
pop
cmpsl
xchg
mov
scas
fcoms
mov
cmp
mov
cld
dec
push
ss
pusha
ljmp
xchg
rolb
ja
pop
jmp
inc
mov
sbb
adc
mov
stc
mov
std
lret
add
and
iret
imul
mov
mov
xchg
outsb
push
push
in
std
mov
xorb
and
pop
aas
mov
cmpsl
filds
mov
lcall
cltd
stos
xorl
add
sbb
jle
mov
jp
inc
dec
shrb
or
inc
data16
xor
lods
pop
sbb
mov
dec
pushf
cmc
fadds
push
inc
ljmp
popa
xchg
pop
pop
mov
adc
and
add
jnp
inc
pushf
xor
fstl
jmp
lods
das
jmp
dec
sbb
cltd
push
dec
test
adc
and
clc
jns
je
cmp
je
or
inc
xor
pop
repz
inc
clc
jnp
fs
scas
imul
inc
in
xlat
push
or
fwait
aad
pop
pop
or
imul
int3
mov
and
pop
pop
pop
push
scas
sbb
inc
aas
int
sbb
xor
inc
xchg
or
pop
add
push
pop
loope
frstor
icebp
xchg
das
add
movsb
stos
or
iret
imul
es
leave
ljmp
jns
pop
pop
pop
xchg
aad
xchg
fldt
pop
pop
mov
xorl
push
popa
xchg
es
sbb
call
mov
mov
add
inc
mov
int
sbb
jecxz
mov
cmp
into
movsl
push
data16
or
cwtl
xor
push
lods
out
sub
ss
addr16
jmp
xchg
repnz
adc
imull
cmp
or
das
xchg
jp
fwait
mov
ficomps
jp
iret
addl
ret
push
fwait
sub
pop
ret
add
cmpsl
lods
jmp
adc
rorl
pop
mov
or
mov
dec
mov
or
divb
cwtl
mov
mov
cmp
adc
rol
les
mov
mov
fwait
jl
pop
inc
xchg
mov
das
or
push
xchg
dec
xor
pop
aas
mov
mov
mov
call
ret
inc
repz
rol
pop
jmp
sbb
cmp
arpl
pop
add
fmull
jns
inc
arpl
jle
inc
xor
add
loope
jns
bound
lahf
repnz
mov
lea
push
xchg
adc
and
ret
out
and
cmpsb
inc
insl
mov
imul
mov
cmp
or
rcrl
adc
cltd
cli
xor
scas
sbb
push
in
jb
addr16
into
add
inc
pop
sbb
lcall
mov
dec
loopne
inc
adc
call
rclb
xchg
les
mov
mov
mov
aaa
pop
or
or
sub
inc
mov
push
adc
fstpl
add
push
push
dec
add
pusha
jecxz
mov
xor
sbb
ljmp
mov
les
mov
add
inc
mov
lcall
addl
out
cwtl
rcrl
sbb
sbb
rorb
dec
or
pop
hlt
xchg
push
jmp
lods
mov
jae
cmp
xchg
fs
xchg
clc
mov
mov
scas
cmp
add
dec
jge
mov
and
ljmp
fbld
dec
inc
cmp
xor
lock
inc
ds
les
adc
mov
xchg
xchg
xor
bound
out
je
sti
int
int
rcrb
into
sub
mov
xlat
push
mov
mov
mov
lock
sub
xor
inc
mov
mov
xchg
mov
lods
sub
or
mov
add
jmp
orl
nop
pushf
inc
pop
pop
sbb
pop
gs
mov
cmp
mov
lahf
add
adc
fsubrl
dec
aaa
jp
sub
and
imul
sahf
adc
lret
ret
ljmp
jnp
mov
fsubp
jge
dec
sbb
shlb
outsl
adc
add
ret
or
pop
jb
clc
arpl
push
shll
les
push
jmp
jb
out
rcll
cld
adc
dec
mov
imull
stc
jns
sub
repz
outsb
stc
adcb
add
mov
out
dec
scas
out
sbb
lods
mov
in
rorl
pop
addr16
sahf
xchg
ja
dec
xchg
and
sti
cmc
stos
sbb
ds
adc
repz
xchg
fiaddl
rorb
mov
xor
lods
cltd
scas
xlat
sub
mov
stc
cmp
icebp
sti
jae
ds
scas
xorl
clc
cmp
xchg
mov
pop
icebp
test
sbb
ja
and
aad
in
cld
jmp
cs
mov
jno
dec
arpl
xor
aaa
sbb
js
mov
sbb
xor
mov
push
mov
arpl
add
jo
jb
cltd
addr16
js
scas
jns
loope
adcb
fwait
pop
lcall
sub
mov
cli
enter
adc
mov
adc
and
out
mov
mov
sti
inc
sub
cs
jae
jl
or
mov
or
sarb
mov
sub
js
das
inc
mov
add
stos
rcl
pop
clc
inc
push
fs
je
inc
jo
mov
insl
bound
fsubl
push
cmpsb
sub
inc
pushf
mov
xlat
ljmp
lea
aam
adc
in
test
cmp
mov
dec
test
iret
mov
fstpl
jg
stos
inc
cwtl
fwait
jo
iret
mov
outsl
adc
sub
cmp
fs
mov
inc
jge
stos
jo
jno
lret
mov
inc
jne
sbb
mov
aam
ret
push
sbb
scas
inc
int3
xchg
das
sbb
pop
rcr
orps
mov
sub
adc
jae
jl
testb
pop
xchg
mov
popf
test
inc
enter
pop
roll
fbstp
fisubrs
aas
fdivs
fwait
push
ljmp
movsl
jp
or
pop
cvtps2pd
xchg
xor
inc
pop
cmpl
push
mov
sub
xchg
fucom
sub
fimull
mov
test
dec
ja
jne
mov
cmp
xor
lock
xchg
mov
mov
imul
leave
mov
cmpl
fists
lods
sarl
jae
add
add
cmp
xchg
iret
sbb
sub
imul
xchg
push
push
std
adc
push
push
jb
add
test
sbb
cmc
mov
mov
mov
das
sbb
and
ret
or
fdivrl
jmp
inc
cmpl
inc
mov
push
xchg
dec
sbb
test
add
repz
add
aad
mov
aad
xlat
mov
cvtps2pi
ja
mul
inc
mov
adc
cmpb
mov
mov
xor
fnstsw
je,pn
insb
add
jo
je
cmpsb
mov
test
add
sti
std
adc
jnp
jg
or
js
cmpsl
mov
aas
iret
sbb
jmp
ret
gs
shll
and
jle
and
jb
inc
out
sub
pushl
addl
sbb
xor
dec
pop
lret
mov
out
add
jne
scas
mov
bound
repnz
sbb
mov
cld
aas
dec
xchg
adc
mov
xchg
xchg
and
adc
adc
push
mov
adc
cmp
cs
lret
cmc
cmpsl
push
mov
sub
rol
cmp
stos
sub
xor
and
lods
mov
je
fs
sahf
andb
jmp
jo
and
cltd
jo
adc
and
aad
jge
out
in
push
sti
clc
pop
dec
push
ret
call
cmp
in
test
roll
pop
out
jg
and
imul
cli
sar
push
hlt
mov
mov
mov
in
push
enter
mov
jne
test
pop
jmp
hlt
cmpsl
pop
leave
movsl
push
out
enter
xor
xor
out
push
scas
xchg
loope
push
leave
dec
mov
xchg
dec
test
sbb
push
imul
cmp
mov
jp
rcr
mov
inc
push
and
movsl
fadd
cltd
xor
test
lea
inc
je
int
loop
rolb
push
repnz
xchg
dec
cmpb
mov
inc
jns
adcb
pop
clc
fidivrl
xor
xorl
push
jle
ret
xchg
inc
ret
pop
in
push
inc
sub
dec
push
pop
out
dec
aas
sub
jns
inc
movsb
mov
stc
repnz
cmp
push
popa
pop
cmpsl
hlt
dec
xlat
mov
pop
mov
dec
fs
outsl
and
in
push
mov
pop
mov
repnz
testb
pop
call
test
scas
jge
in
pop
filds
mov
outsb
push
stos
dec
adc
fnsave
mov
cmp
xchg
sub
pop
mov
std
out
add
jmp
and
leave
mov
adc
std
cli
movsl
cwtl
data16
jp
pop
leave
mov
cmp
sub
push
inc
call
call
mov
jne
cltd
gs
push
cld
sub
sbb
popa
mov
aad
fidivrl
mov
xlat
cmp
ds
loope
mov
sbb
mov
push
arpl
adc
pop
or
mov
lea
ss
repnz
scas
ja
lods
sbb
push
push
out
xchg
and
add
int
push
pop
fs
lahf
fcoml
push
mov
mov
cmp
cs
pop
mov
subb
hlt
lret
sub
or
push
push
cmp
mov
rol
stc
mov
mov
cs
cmp
iret
push
xor
mov
jae
ja
sub
das
adc
stc
fistpll
lods
fxch
xor
add
adc
loopne
dec
xorb
imul
push
mov
push
dec
cmp
out
jmp
out
daa
jbe
orb
jae
ja
pop
mov
dec
loop
sbb
jne
int3
push
sbb
gs
cmpsl
cmp
movsl
mull
cmp
xor
sub
aaa
orl
outsb
fiadds
xor
outsb
fcoms
lcall
jne
js
gs
repz
push
push
sub
fdivrl
mov
and
gs
imul
push
out
pop
in
movsl
push
insb
in
fld
int3
rcll
pop
cmp
clc
mov
in
xchg
mov
mov
cvtps2pi
cmpsl
test
in
sbbl
popf
and
xchg
add
and
push
leave
pop
bound
decl
cmpsb
clc
imul
or
dec
pop
popf
sbb
in
sbb
pop
pop
dec
adc
pop
nop
or
jb
add
add
shll
jno
push
pop
add
insb
adc
inc
fnstsw
outsl
shlb
jge
pop
pop
aas
icebp
pop
pop
das
xor
sub
fbstp
lods
into
jae
ss
sbb
in
repnz
push
outsb
scas
test
scas
mov
push
imul
inc
ret
pop
jmp
pusha
and
jmp
cmp
insb
mov
rorb
mov
repz
xchg
or
shll
std
fbld
lret
lcall
pop
xchg
jns
pop
roll
stos
cltd
ret
add
cmp
mov
sbb
jae
movsl
and
pop
cmp
jg
cmp
cmp
movsl
push
cmpsl
insl
mov
cs
xchg
in
sbb
cmp
pop
xchg
cmpsb
mov
sub
mov
xor
mov
fildll
aam
stos
sbb
jge
inc
push
vmwrite
ret
jae
stos
into
js
xor
jb
cmpsl
pushf
lahf
inc
pop
into
nop
pop
in
sub
push
out
xchg
pop
or
mov
hlt
adc
leave
loopne
movsb
xchg
xor
mov
dec
jno
or
pop
lods
xchg
in
adc
cltd
mov
mov
sbb
inc
jle
std
jno
and
mov
cmc
xchg
or
fisttpll
and
jnp
test
pop
sub
xlat
inc
push
out
outsb
sbb
idivb
pusha
xor
movsb
stc
nop
repnz
mov
jo
test
jp
nop
arpl
fsubl
clc
inc
fs
pop
out
and
jl
arpl
xchg
sub
mov
repnz
mov
sbb
xor
cwtl
loop
xchg
dec
and
mov
pop
xorl
cmc
mov
dec
adc
xchg
and
mov
jae
sub
mov
and
aad
aad
xchg
aaa
fnsave
xchg
add
repnz
fsubs
ret
in
push
sti
sub
in
hlt
std
ja
out
cli
mov
stos
push
test
push
mov
icebp
hlt
outsb
cmovs
mov
pop
and
icebp
mov
push
jb
mov
or
xchg
push
hlt
or
cmp
pushf
sbb
jmp
add
inc
gs
push
and
push
cmpsb
cmp
inc
sub
and
es
and
push
or
or
jne
adc
repnz
or
cmp
fs
cwtl
cmpsb
fwait
into
loope
popf
xchg
cmp
dec
ret
into
mov
gs
fs
xor
lock
std
cmpsb
je
and
add
in
fwait
bsr
pop
mov
test
imul
mov
mov
in
inc
fcomip
pusha
push
cmpsb
loopne
cmp
dec
ud2
cmp
das
lahf
xor
sarl
andb
mov
scas
pop
jne
mov
les
cltd
sbb
sub
out
mov
mov
mov
sbb
pop
outsb
cmp
pushf
mov
cltd
jne
push
mov
sub
mov
mov
inc
jp
mov
stos
xor
or
cld
adc
cwtl
test
mov
jmp
das
cwtl
add
sub
inc
inc
adc
jg
pop
nop
fucomi
mov
cs
adc
imul
sub
mov
popa
mov
mov
push
fildl
jl
adc
adc
scas
mov
test
xor
xor
in
outsb
pop
dec
mov
loope
pop
xchg
addr16
sub
mov
jmp
ret
popf
mov
repz
jp
or
stos
jnp
sbb
cld
and
aas
pop
dec
mov
popl
inc
movsl
jle
ret
xchg
cltd
inc
inc
sbb
ja
sbb
push
addl
loopne
inc
movsl
cmp
push
pop
mov
lcall
mov
push
jl
jbe
jbe
sbb
add
loopne
pop
add
jnp
push
inc
jmp
adc
das
adc
stc
bound
lret
mov
mov
arpl
out
jecxz
test
xchg
add
cs
imul
cmpb
shrb
out
xor
xchg
cltd
and
add
jno
push
addl
push
daa
pop
and
jbe
mov
push
mov
sbbb
adc
xchg
sub
imul
mov
cmc
incb
xchg
cmp
mov
dec
hlt
xchg
sub
popf
lcall
ret
cmp
cmpl
sahf
pusha
mov
out
pop
icebp
or
popl
jle
sbb
sbb
test
je
out
push
lret
imul
popf
mov
sub
jae
pop
es
xchg
inc
or
inc
lods
lds
push
cmpsb
int
mulb
lret
and
loopne
gs
xor
sbb
sbb
and
mov
lock
test
sahf
cld
repnz
ljmp
cmp
dec
cmp
loope
cmp
bound
imul
mov
clc
mov
mov
lret
shlb
adc
add
mov
rep
xchg
jne
outsb
jg
sub
and
clc
inc
sbb
sbb
lds
dec
or
jb
jp
inc
inc
cmp
mov
jno
es
xor
jg
shr
adc
mov
mov
mov
adc
test
pop
lods
in
cltd
lahf
arpl
subb
cmp
inc
mov
mov
xchg
fnstsw
mov
lcall
or
sahf
out
jno
jne
adc
dec
push
pop
xchg
leave
mov
jg
lods
sub
cmpsl
mov
jo
pop
mov
pop
and
aad
decl
xor
pop
fldcw
xor
shrb
sub
cmp
not
out
mov
pop
shll
adc
or
xlat
and
pop
sbb
cltd
lea
sub
and
sbb
pop
sub
fwait
xchg
adc
je
test
into
mov
sbb
loop
imul
popl
mov
loop
cmp
mov
pop
pushf
inc
dec
pop
dec
jl
add
xor
nop
lods
jp
push
xchg
mov
repz
shlb
insl
and
fldl
sbb
fildll
insb
jnp
test
pop
jno
push
aaa
mov
push
sub
lock
sti
xchg
and
aas
push
fs
lahf
pop
movzbl
mov
lods
xchg
out
outsl
outsl
and
mov
dec
gs
lods
fwait
xor
xchg
in
inc
movups
out
cmpsb
lret
movsb
lret
jmp
ret
and
fmull
jb
fwait
mov
jns
cmpsl
loopne
xchg
cmp
mov
enter
jp
lods
xor
ljmp
mov
or
shrl
aaa
repnz
or
inc
push
stc
outsb
push
gs
lods
xor
iret
push
xchg
test
cmc
inc
lret
jo
push
xchg
mov
mov
pop
inc
in
popa
loop
test
mov
sbb
out
fmul
push
mov
pushf
jecxz
or
enter
cmpsl
pop
pushf
arpl
pop
adc
mov
sbbl
outsl
xchg
push
shrb
sbb
and
mov
outsb
sub
les
scas
xor
pop
fcom
mov
add
scas
fnstcw
inc
lret
push
inc
dec
loope
push
fwait
aad
popa
clc
jp
int3
pop
fmul
scas
jnp
add
in
ljmp
jle
lea
test
stos
sub
mov
sbb
test
fsubrs
adc
jns
cmp
or
jmp
pop
lods
xchg
add
nop
icebp
scas
add
arpl
dec
rclb
sub
sub
jp
pop
ret
gs
or
icebp
imul
pushf
xchg
mov
sub
sub
sti
pop
ret
add
lea
sub
shlb
cmc
xchg
push
in
inc
mov
cmp
or
inc
fwait
jnp
stos
mov
jbe
jae
xor
xor
cmp
push
mov
icebp
call
jmp
jg
jecxz
pop
aas
in
test
xchg
mov
and
inc
jecxz
dec
dec
xchg
sar
cmpsb
sbb
outsb
dec
leave
jge
jnp
popf
dec
js
push
inc
sti
daa
dec
sahf
rcrb
fdiv
cmp
sbb
cmc
push
jge
stos
xlat
jmp
mov
in
ds
imul
add
mov
cmp
movsl
test
fwait
ja
rorl
fistpl
mov
aam
popa
xor
pop
fsubrs
adcl
aaa
loope
dec
fmul
pop
pop
jo
push
hlt
cmpb
lret
adc
jl
push
pop
gs
loop
inc
xchg
add
xchg
rorl
fs
cmp
or
and
push
cmp
xor
xchg
ss
jbe
mov
xor
mov
jp
push
dec
popa
loopne
leave
repnz
pop
pop
jp
daa
jle
das
notl
lret
sbb
inc
dec
ss
loop
pop
pop
sbb
mov
loop
dec
das
lods
sbb
push
xchg
js
fwait
sbb
aam
inc
xchg
push
mov
mov
adc
out
ret
mov
sti
movsl
xor
pop
push
mov
dec
add
or
jo
cmp
lds
or
sbb
jmp
or
push
loop
and
xor
xor
cli
mov
daa
or
ret
sbb
xlat
out
mov
addr16
outsl
mov
cmp
dec
je
aam
xchg
pop
push
or
aas
push
cmpb
add
jge
roll
sbb
push
mov
cwtl
int3
rolb
aam
rcll
js
sbb
add
push
mov
stos
fisttpl
cmp
cmp
mov
push
sbb
fcmovne
scas
inc
gs
xchg
insb
sbb
push
mov
call
int
filds
lock
xor
out
sbb
aas
jg
jns
das
mov
cmc
scas
jo
lock
ljmp
pop
arpl
movsb
mov
movsl
repz
mov
mov
push
xor
movzbl
jns
shll
xchg
lret
sahf
pop
rcrl
add
lock
or
jge
nop
mov
gs
data16
mov
mov
push
jb
and
mov
fcmovnu
int
lock
xchg
and
incl
inc
jle
mov
fbstp
push
popa
fisttpl
loope
jb
fs
movsb
and
out
insb
push
sub
dec
add
test
aas
cwtl
enter
je
iret
test
xchg
or
mov
pusha
lcall
xor
adc
inc
scas
ds
push
sub
int3
movsb
pushf
xlat
popf
and
push
sbb
mov
dec
jge
popa
xchg
xchg
sti
rcr
dec
xor
popf
mov
test
sub
jns
push
notl
push
add
jge
mov
int
or
jg
jge
xchg
dec
sahf
or
cmp
popf
loopne
push
fucom
rclb
adc
dec
outsl
dec
cmp
jne
in
mov
mov
add
test
popl
pusha
sbb
and
xlat
add
push
adc
pop
jne
bound
mov
sar
xor
dec
subb
jmp
jl
popf
data16
mov
pop
or
lods
loopne
cmp
rorl
mov
sbb
adc
mov
iret
adc
and
in
test
std
adc
and
mov
or
add
jmp
sbb
push
cmpsl
add
cmp
js
js
scas
pop
call
in
jae
cmp
iret
pop
stos
int
lds
or
or
je
lock
test
adc
das
cmp
pop
or
iret
out
inc
xchg
push
mov
and
inc
repnz
divb
sub
jne
incl
pop
sbb
sub
imul
sbb
andl
js
inc
and
in
xor
inc
xchg
and
jnp
into
sbb
sbb
clc
xor
mov
xorb
addr16
popa
stc
rsm
xchg
xchg
movzbl
jne
imul
mov
notl
movsb
xchg
sub
xrelease
add
pop
add
push
pop
jb
mov
test
inc
out
pop
mov
mov
mov
mov
jne
push
mov
mov
cmp
icebp
cmp
sbb
and
mov
ljmp
mov
out
out
xor
or
dec
jnp
and
push
inc
daa
je
scas
gs
scas
std
fxch
imul
push
in
scas
rcrl
aas
mov
sti
test
inc
aas
xchg
push
sub
jb
inc
cltd
pop
shr
sub
aam
and
inc
out
les
xor
mov
push
mov
jbe
gs
stos
stc
sbb
dec
outsb
add
or
dec
pop
mov
jg
pop
inc
cmp
pop
mov
jne
mov
cli
imull
jmp
dec
addb
jbe
dec
icebp
scas
push
add
imul
push
ffreep
nop
sub
xor
and
sbb
out
test
aam
push
outsl
stc
popa
mov
idiv
xchg
xor
mov
cmpsl
inc
xchg
push
inc
add
adcl
mov
nop
push
negl
push
scas
in
push
mov
mov
mov
sbb
out
xchg
bound
jb
mov
sbb
arpl
icebp
mov
mov
fdivl
adc
push
jg
add
xchg
lods
into
pop
push
adc
pop
std
fs
pop
jne
jecxz
push
add
scas
bound
cmp
sbb
mov
call
dec
scas
ret
stc
icebp
sub
ljmp
dec
mov
adc
pop
test
loopne
scas
xor
xor
jle
xor
outsl
mov
and
movsb
lds
std
xchg
testl
clc
adc
cmp
movsb
pop
mov
cmp
cld
jle
push
repnz
cmpsb
dec
jp
adc
addr16
xlat
insl
mov
xchg
mov
mov
mov
cmpsb
cs
lret
aad
dec
sub
insl
or
lock
bt
cmp
andl
jecxz
push
cs
cmc
jnp
cmp
or
pop
into
sbb
sub
pushf
mov
es
jge
xor
adc
lahf
push
adc
ds
mov
xchg
clc
mov
cmp
add
lret
mov
xchg
sub
in
and
sbb
ss
xor
ret
fwait
adc
adc
cltd
insb
mov
and
xchg
cmp
rorb
mov
out
add
adcb
test
mov
nop
pushl
fildll
inc
jmp
sahf
imul
jo
and
adc
imul
sbb
scas
and
ljmp
lock
stos
cmp
inc
fisttpl
popa
pop
mov
aaa
xchg
xor
and
int3
and
adc
lret
sarl
add
shll
sub
jne
cmp
add
dec
xor
jo
in
sub
cli
pop
sbb
push
aas
jle
pop
xchg
cmpsl
clc
hlt
loop
sbb
jp
scas
in
movsb
mov
movsb
sbb
or
mov
test
xchg
sti
push
in
popf
fxch
dec
js
xor
sub
mov
imul
outsb
cmp
xchg
sbb
push
adc
inc
push
jecxz
add
jnp
mov
jle
insb
lock
daa
scas
mov
xchg
ret
pcmpeqb
add
jb
push
dec
adc
xchg
pop
iret
lcall
cmp
lret
push
pop
pusha
orl
adc
push
cmpsb
cld
es
mov
dec
inc
fidivs
push
jl
and
mov
mov
scas
into
mov
rclb
outsb
mov
add
sahf
mov
cmp
and
into
sbb
jae
adc
insb
xor
mov
out
inc
ror
sbb
xchg
fisubl
lds
and
xchg
mov
inc
xchg
add
push
out
cmpsl
incb
pop
mov
enter
mov
imul
xor
sti
adc
or
push
cwtl
mov
cmc
iret
jnp
mov
lods
mov
in
push
and
and
sbb
scas
mov
addl
cmp
sbb
and
lret
stos
nop
inc
push
cltd
or
stos
daa
pop
popa
cmp
js
fstpt
push
jno
hlt
jo
cmc
inc
enter
mov
je
cwtl
xchg
fsts
loope
rcrl
mov
add
push
hlt
js
xor
repnz
cs
loop
or
mov
add
xor
fcoml
sub
sbb
sbb
and
clc
stc
add
pop
mov
mov
out
xchg
push
push
loopne
insl
iret
mov
mov
lahf
adc
es
andl
movsl
cmpsl
mov
js
or
adc
jo
push
test
mov
xorb
cltd
out
or
mov
mov
sub
mull
cmp
sbb
bound
sub
les
inc
push
inc
test
jg
sub
sbb
sbb
mov
rcrl
cmpsb
sbb
inc
dec
scas
or
enter
adc
frstor
lock
lcall
lahf
dec
aaa
test
lcall
xorl
hlt
shll
stos
pusha
icebp
sub
push
pop
mov
lret
inc
aam
mov
mov
jmp
xchg
stc
fimull
mov
mov
cmp
push
pop
cmp
mov
lea
jb
and
mov
mov
and
add
imul
iret
mov
cs
cld
lahf
shll
mov
ja
sbb
xor
push
mov
into
xor
popl
xor
sub
mov
push
in
jo
test
or
inc
cli
fwait
push
or
xchg
movsl
jmp
int3
inc
adc
jge
test
xchg
dec
das
dec
scas
pop
insl
jno
inc
fnsave
add
popa
bound
mov
mov
push
test
mov
mov
shrb
jb
cmc
hlt
xchg
mov
enter
xor
dec
divb
lahf
lock
jg
or
insl
xchg
test
pop
imul
mov
inc
mov
pop
xor
cmpsl
aad
pop
pop
into
xlat
or
in
cmp
sub
ja
add
pop
inc
sbb
pop
sbb
cvttps2pi
outsl
out
pop
loope
pushf
sbb
mov
sub
es
sarl
insb
in
das
inc
imul
push
add
mov
jno
pop
mov
orb
lcall
inc
sbb
add
mov
mov
lods
mov
jle
pop
push
sbb
mov
push
ret
or
mov
mov
int
fsub
es
jp
push
mov
out
push
adc
xor
jbe
sti
adc
jg
dec
push
mov
test
insl
lds
cmp
icebp
xchg
out
xor
dec
or
arpl
dec
arpl
dec
sub
xor
loop
dec
xor
or
xor
dec
push
ljmp
shr
dec
hlt
js
or
outsb
and
push
mov
imul
in
jl
or
or
and
sbb
add
sub
insw
lock
mov
movlps
popa
stos
cmp
add
add
pop
mov
sbb
lock
mov
into
and
mov
mov
mov
pop
pop
jae
mov
dec
vunpcklps
inc
mov
or
dec
out
int
pop
arpl
xchg
movsb
lcall
or
and
cmp
cmp
idiv
add
hlt
pop
ja
cmp
xchg
xchg
mov
jg
jge
or
dec
repz
addr16
mov
xchg
push
and
outsb
xchg
jge
sub
fwait
pop
out
sbb
adc
jae
add
mov
and
das
insl
jo
and
clc
jns
scas
jp
movsb
cmp
fstpl
js
sub
leave
in
fdivp
pushf
jle
and
jmp
dec
sbb
iret
mov
or
loopne
div
lahf
lods
shll
dec
mov
sahf
rorb
push
push
mov
mov
lret
add
movsl
pusha
sti
dec
scas
cmpsw
loopne
pop
cltd
sbb
sub
xchg
fmul
setne
jns
out
jp
leave
jmp
or
mov
inc
inc
push
xlat
add
xor
pop
mov
mov
ljmp
push
xchg
lea
push
adc
and
ret
push
int3
pop
outsb
xor
adc
xor
or
push
push
int
test
xchg
and
mov
mov
aaa
fiadds
loope
int
movsb
xor
sub
jmp
xor
add
shlb
pop
pop
jns
dec
xchg
test
cwtl
cmp
lds
adc
mov
push
scas
into
xor
mov
inc
and
nop
add
aaa
mov
movsl
lock
outsl
sbb
mull
add
aaa
and
mov
mov
sets
loop
setge
jecxz
loopne
pusha
in
mull
xor
ja
mov
pop
mov
jb
or
add
in
movsb
inc
mov
sub
loopne
popf
pusha
dec
fimuls
imul
shrl
xor
loopne
orb
inc
adc
repz
inc
out
mov
iret
mov
sbb
xorl
and
xchg
xor
dec
mov
les
and
das
lret
or
dec
inc
jne
jecxz
imull
sbb
scas
dec
pop
add
xchg
addr16
idivl
bound
rolb
insb
fdivp
imulb
jg
cmp
xor
inc
arpl
mov
dec
jg
fldenv
adc
mov
test
sahf
dec
push
ret
xor
xchg
dec
and
dec
lea
and
mov
mov
pop
mov
sub
mov
rorl
fcos
inc
ds
jge
loope
xor
jp
push
push
hlt
mov
pushf
mov
jmp
mull
fwait
lcall
dec
sub
stc
mov
adc
iret
inc
gs
jmp
and
mov
adc
xlat
mov
mov
pop
add
repnz
xor
sub
add
out
sub
pop
push
shll
shlb
popf
adc
sbb
in
iret
daa
dec
stos
leave
xor
pushf
dec
ja
jne
and
into
cld
sarl
call
into
sub
push
stc
xor
insb
rcrb
fisubs
jmp
mov
push
repnz
test
notl
shrb
add
ds
push
xchg
add
jnp
sbb
xor
add
inc
fldenv
ret
mov
mov
shrb
ret
int
sub
pusha
lahf
xchg
pop
or
adc
icebp
pop
ss
push
sbb
ret
mov
sbb
aam
std
arpl
stos
daa
adc
sti
bound
jno
addb
rcr
mov
add
xchg
mov
frstor
ret
ljmp
cmpl
stc
es
cmp
mov
repz
out
andl
mov
add
dec
jl
out
push
inc
shrb
daa
data16
mov
call
in
push
mov
jno
or
fstl
aam
mov
outsl
out
ja
jnp
adc
nop
outsb
jmp
stos
jnp
sbb
outsl
dec
jp
inc
fbstp
mov
cs
cld
lcall
xchg
mov
imul
fmul
outsb
adc
loopne
pop
mov
popa
dec
dec
insl
mov
xchg
into
dec
and
popf
icebp
ffreep
dec
sbb
xor
lret
mov
mov
push
xor
mov
ljmp
fs
xchg
sbb
push
lcall
add
fisttpll
in
call
mov
add
pop
mov
pop
fidivl
int
adc
adc
sub
sbb
dec
pop
mov
scas
orl
mov
rcrl
and
adc
lock
dec
cmpsb
std
sbb
cwtl
fs
inc
jae
mov
lds
inc
cmpsb
stos
cwtl
rclb
mov
sbb
fisttpl
int3
int
xchg
jge
ja,pt
sti
mov
fidivrs
movsb
push
rcl
pushf
sbb
push
push
pop
pop
fwait
enter
jp
lods
cmp
push
pop
push
mov
pop
pop
jg
leave
lahf
or
xchg
mov
and
push
add
sti
mov
adc
sti
mov
popl
xchg
xchg
inc
xchg
shlb
pop
repnz
push
mov
mov
or
dec
loopne
mulb
inc
cmpsb
mov
add
lcall
mov
insl
mov
call
test
out
xlat
lods
push
push
or
mov
or
into
pop
cld
sbb
push
das
fbld
cli
roll
lret
aas
das
push
jns
xchg
mov
sarb
or
stos
ficoms
mov
movl
call
cmpsb
je
lcall
repnz
mov
gs
pop
aas
fidivrs
jmp
add
das
shl
cmp
je
push
bound
add
int
pop
cmp
inc
addr16
xchg
ss
insb
roll
sub
add
lds
push
dec
lea
xchg
fsubs
shlb
pop
int3
and
mov
sbb
mov
repz
imul
mov
inc
sbbl
jns
adc
cwtl
je
mov
insl
hlt
arpl
shrb
mov
dec
ss
pop
dec
lret
testl
xchg
es
lds
data16
stos
ret
divb
sti
cli
mov
incb
test
inc
inc
mov
sub
rcll
fisttps
jge
out
test
cld
ss
das
loope
int3
cmp
xchg
scas
dec
mov
lret
shl
sub
mov
fcomp
out
sub
mov
ds
and
jbe
add
lock
mov
cwtl
push
jns
mul
mov
loopne
jmp
sub
fwait
dec
xor
add
fcom
fmull
js
lcall
push
popa
or
and
hlt
jne
and
in
xchg
sub
mov
xor
enter
xor
cmp
xchg
fimuls
cld
iret
dec
ret
add
clc
lods
aaa
sti
push
add
lods
iret
xchg
sti
xchg
xchg
rolb
aaa
cmpb
push
movntq
sub
pop
push
push
clc
out
mov
ss
adc
cmp
outsl
insl
js
shr
jge
jmp
call
repz
sub
cmp
mov
dec
inc
add
dec
lret
into
adc
rcrl
sar
cmpsb
push
add
arpl
adc
test
cmp
or
in
sbb
xchg
sarl
fcoms
cld
mov
sbb
add
push
lock
fistps
adc
pop
leave
adc
outsb
sbb
clc
pop
pop
leave
and
jnp
inc
lcall
scas
sti
sar
sub
stc
lret
fwait
cmp
pop
enter
in
les
out
rclb
sbb
pmulhuw
cmp
addl
pop
sub
bound
inc
xchg
mov
enter
sbbl
or
enter
inc
pushf
mov
stc
sahf
add
test
add
push
push
pop
mov
cli
or
sbb
mov
inc
mov
imul
stc
jp
dec
xor
mov
shlb
pop
pusha
fistpl
push
and
jle
bsr
inc
sbb
push
stos
or
ss
push
push
pop
cmpb
mov
test
gs
cmp
test
cmp
negb
sbb
mulb
pop
add
inc
insb
ret
or
orb
dec
mov
pop
mov
lea
jg
mov
cwtl
stc
adc
add
scas
adc
dec
sarb
std
std
dec
or
add
xchg
mov
xchg
inc
outsl
pop
ds
pop
dec
inc
mov
and
pop
add
sbb
sub
std
jecxz
xlat
inc
push
jle
int
mov
xor
mov
mov
pushf
xlat
mov
xchg
mov
cmp
ss
jae
cld
lods
mov
push
xor
mov
cmpsb
cwtl
or
jno
sub
ret
ja
inc
xchg
mov
cmp
and
gs
sbb
rorl
mov
in
xchg
jb
mov
mov
cs
push
pop
dec
push
fdivrl
inc
pop
lret
inc
xorl
mov
or
outsb
jno
pop
push
out
xor
jl
sub
pop
scas
or
mov
xchg
sub
in
xlat
test
pop
dec
seto
mov
mov
push
lods
aaa
mov
imull
cmpsl
pop
fldl
inc
rolb
mov
stc
icebp
xchg
sti
aas
repnz
aad
ja
scas
mov
xchg
inc
rorl
or
mov
test
mov
mov
push
je
sbb
mov
xor
ret
dec
testl
in
fs
sub
pop
adc
fisttps
cmp
fidivrs
inc
or
cmp
sarb
lds
nop
and
mov
out
push
addb
sbb
shll
out
sub
fmull
inc
push
mov
cmp
fisttps
mul
stc
inc
push
push
stos
cmpl
push
mov
es
sub
push
pushf
pop
mov
adc
fldcw
lea
ffree
popa
bound
xor
lds
cmp
test
dec
mov
rorb
pop
mov
jbe
mov
sbb
cmpsb
mov
aad
popa
mov
andb
push
push
sub
push
ds
out
or
sub
push
int3
fstpl
dec
mov
arpl
das
orl
fstl
fstp
inc
stc
dec
pop
aad
adc
iret
cli
gs
test
cmp
push
jp
out
add
clc
mov
loop
xchg
jne
sti
adc
xchg
adc
pop
aas
iret
cmc
sti
sti
sbb
gs
sbb
scas
fildll
repnz
pusha
mov
inc
xor
and
clc
mov
push
xchg
mov
push
jne
cmp
jmp
movsl
iret
sbb
sahf
push
sti
fsubs
icebp
xor
xchg
scas
scas
mov
lods
daa
inc
ret
jno
mov
add
or
std
scas
mov
lcall
inc
sub
jae
lods
lea
imul
pop
xlat
pop
xchg
add
inc
pop
mov
imul
out
xchg
ja
fcomp
nop
mov
xchg
pop
pop
and
xor
mov
and
sti
mov
clc
xlat
lods
or
fnstenv
jnp
ds
lods
in
ret
jbe
jns
insl
pop
stc
cli
sub
addr16
lods
paddb
mov
xchg
lret
fdivrs
dec
call
push
inc
jp
adc
jmp
orb
enter
rcrl
xor
scas
sti
je
jp
push
ja
int3
shr
xor
test
adc
jb
add
or
hlt
mov
cli
cwtl
aad
xor
xor
inc
sbb
adc
and
divb
in
jno
xor
xor
xchg
or
push
popl
add
mov
repz
insb
add
sti
xchg
subl
sbb
xchg
lea
movsb
es
insb
adc
xlat
push
stc
stc
popf
cli
sub
sub
outsb
clc
in
into
mov
dec
mov
adc
into
fsubl
pushf
xchg
nop
add
sub
mov
sub
insl
add
mov
rorl
in
call
jp
call
flds
sbb
outsl
inc
mov
pop
fs
sub
outsl
loope
loop
jae
shlb
mov
ret
inc
pop
inc
aas
ljmp
stos
add
jle
and
and
sbb
push
lret
sbb
test
lcall
sahf
loope
or
ret
pop
ja
sbb
cmp
rcrb
dec
call
and
mov
fwait
xorl
cmp
jno
sub
cmc
jne
pusha
nop
lcall
cld
testl
pop
aaa
dec
ftst
stos
inc
ds
jecxz
cmp
arpl
xor
adcl
mov
sub
sbb
addl
popf
stos
add
ret
or
xchg
cmc
push
movsl
cmp
es
dec
pop
xor
cmp
das
dec
inc
xchg
mov
mov
push
test
mov
cli
xchg
into
fsubrp
mov
pop
pop
mov
cld
adc
decb
shlb
cmp
arpl
mov
add
cmp
mov
dec
sbb
and
sti
pusha
add
lods
dec
xchg
imul
loope
sbb
mov
mov
dec
sti
in
adcl
sahf
bound
sbb
adc
cmp
scas
rcr
aam
psraw
inc
paddusb
dec
les
jle
imul
ljmp
addb
imul
arpl
inc
seta
push
push
mov
loopne
jo
adc
lahf
mov
movsb
test
dec
lods
cmpl
xchg
mov
in
mov
inc
popf
loop
jbe
fsubs
test
bound
push
inc
cld
movsl
fnsave
jns
or
mov
lret
add
and
jge
mov
pop
add
sbb
inc
rcrb
mov
push
insl
cmp
bound
pop
or
stc
std
inc
inc
mov
push
pushl
pop
sub
push
cmp
dec
jo
add
push
push
xor
fwait
aaa
aaa
int3
inc
push
mov
adc
cmp
push
scas
mov
in
sbb
aas
or
and
lods
inc
push
sub
fidivl
xchg
jp
mov
rol
stc
dec
mov
in
in
nop
mov
cmpsb
arpl
lahf
mov
call
cli
lahf
sarl
xchg
out
ss
fadd
dec
jnp
popa
pop
lds
in
jae
adc
jno
test
xchg
ds
int3
push
ss
fxch
adc
dec
aaa
aas
dec
jg
mov
hlt
scas
and
lret
std
movsb
inc
icebp
sub
lods
dec
out
mov
sbbb
aas
cld
mov
jl
add
adc
data16
stos
pop
int3
sbb
stos
mov
push
mov
ret
pushf
popf
repz
and
push
outsl
xor
sub
stos
mov
jecxz
jo
or
xlat
std
mov
cmp
daa
mov
fwait
or
and
or
sub
insl
or
out
ret
decl
subb
lods
add
add
inc
in
rorb
mov
loopne
arpl
pusha
xchg
jmp
stos
jmp
pusha
imul
rorl
loop
mov
in
call
xchg
add
mov
and
lock
fwait
js
lcall
sub
dec
adc
or
fildll
jne
mov
adc
test
sbb
loope
aaa
es
xor
cmp
dec
pop
gs
xchg
lods
push
push
push
out
les
stos
xchg
pop
xlat
sbb
js
adc
sahf
iret
mov
fimuls
arpl
push
cs
lods
cmp
push
inc
incb
jnp
cwtl
xchg
push
ror
je
aad
xchg
cmp
mov
sbb
out
scas
and
insb
sarb
dec
mov
imul
mov
xor
xor
lock
mov
mov
push
and
fld
add
cwtl
ret
fimuls
push
pop
adc
shlb
inc
or
mov
inc
inc
cmc
nop
fdivl
into
mov
pop
mov
fadds
mov
and
fcmovbe
cld
and
ss
sarl
xlat
cmp
lea
fs
push
fisubrl
mov
into
cmp
ljmp
inc
mov
mov
sar
cmp
call
out
jle
ficomps
lcall
mov
sahf
dec
jne
scas
sbb
rcr
into
sahf
or
xchg
sahf
xchg
lods
gs
push
icebp
jmp
adc
lds
into
pop
int3
jge
out
in
sbb
or
pop
sbb
gs
dec
icebp
enter
pop
shll
aad
out
lods
pop
imul
cmp
sbb
addb
push
pop
repz
pop
aas
je
enter
pushf
adc
in
xchg
and
xchg
sbb
imul
xchg
jnp
ss
lea
je
lods
pop
inc
movsl
sbb
std
add
sti
jne
movsl
ret
ja
outsl
mov
push
je
lret
out
push
clc
hlt
leave
push
mov
incl
fnstenv
push
lds
clc
je
mov
mov
adc
add
ja
gs
cltd
xor
aad
ljmp
dec
xchg
jnp
shlb
outsl
jle
daa
aaa
in
in
ror
xor
pop
sarb
dec
mov
bound
in
cmp
rcrb
fs
jb
cmp
add
out
subb
push
pop
rcrb
insb
mov
xchg
out
push
jae
adc
enter
jno
xchg
rcll
cmpb
jp
pop
in
cmp
fisttpll
sbb
xchg
daa
loopne
sbb
mov
adc
cmp
push
pop
nop
sti
xor
inc
push
sbb
xchg
and
add
jae
sub
movsb
push
mov
pop
ss
sbb
clc
enter
es
and
es
jno
push
jb
insb
cmp
sbb
clc
push
jmp
inc
mov
aam
stc
or
ret
sbb
jne
fwait
push
mov
in
push
dec
inc
imul
and
scas
pop
pop
adc
lea
sarl
push
into
stos
fldcw
fistps
lret
mov
in
out
test
adc
push
sbb
xlat
loope
popa
test
sub
mov
inc
rorb
xchg
jle
mov
sbb
and
xor
mov
pop
sub
and
movsl
or
call
out
and
popf
ljmp
stos
push
movsb
in
mov
lret
jae
mov
jae
iret
cmp
ficoml
adc
and
loop
sub
xor
sub
mov
movsb
adc
or
aad
insb
loope
test
adc
out
xor
ja
dec
push
lds
bound
xchg
ret
mov
stc
fs
dec
pop
daa
in
dec
stc
jle
dec
sarl
imul
inc
scas
mov
lds
mov
lods
xchg
add
adc
push
mov
xchg
aad
insb
cmpsb
adc
in
loop
outsb
add
inc
rcl
push
mov
test
jmp
and
xor
xlat
pop
xchg
push
xor
loope
jp
xor
in
pop
add
mov
mov
shr
pop
jl
aaa
out
sbb
pop
out
cwtl
xor
push
aaa
pusha
add
sbb
pop
gs
jp
cmc
adc
in
pop
ffreep
popf
and
rolb
xchg
mov
int
adc
add
sub
dec
pop
push
xor
dec
lea
popa
mov
imul
faddl
cld
scas
push
sahf
je
pop
inc
rcl
cmp
ljmp
enter
or
mov
add
mov
mov
sub
push
rolb
and
mov
dec
cwtl
sub
scas
dec
scas
rorl
ret
ret
movsb
sti
pop
xchg
fwait
mov
les
fwait
mov
jp
xchg
dec
lret
mov
sbb
imul
test
pop
mov
adc
adc
mov
pop
out
lret
or
cmpsb
cmp
mov
jmp
pop
dec
ficomps
mov
xchg
ret
xor
adc
fsubl
mov
dec
add
outsb
jbe
xor
inc
fists
sti
push
and
imulb
and
shl
mov
lods
rclb
push
mov
jno
jle
sbb
push
icebp
call
fcmove
popf
jge
and
enter
push
jl
pop
dec
inc
jmp
andb
insb
dec
cmc
inc
push
mov
lock
test
and
fsts
ret
xor
sub
jbe
shld
jno
cltd
lods
stos
pop
cs
inc
sbb
mov
mov
loopne
mulb
or
enter
and
inc
mov
mov
call
ret
push
push
sbb
mov
in
movsl
scas
in
popa
test
flds
loopne
or
in
push
filds
repnz
mov
dec
out
out
insb
sub
outsl
push
mov
int3
jg
jo
cmpsl
jge
out
jecxz
add
sbb
xchg
dec
cmp
filds
mov
fsubs
clc
das
or
sti
rolb
bound
mov
enter
clc
mov
stc
cmp
ret
mov
inc
jne
dec
cltd
into
dec
int3
add
mov
or
cltd
push
imul
and
fstl
mov
fsubrl
jmp
add
push
mul
stos
ds
bound
mov
adc
fs
xor
mov
inc
add
or
cltd
xor
push
pusha
pop
testb
xchg
out
filds
jns
push
out
stos
lahf
aam
popl
into
jmp
inc
push
mov
push
mov
pop
aas
xor
stos
mov
iretw
mov
popf
in
rolb
lret
fistpl
mov
push
jmp
push
mov
dec
ret
sti
inc
inc
mov
or
pop
xor
mov
pop
fstl
xor
and
shlb
out
or
pop
bound
pop
cmpsl
pop
jl
push
ljmp
mov
xchg
xor
mov
inc
or
sahf
push
xor
fnstsw
jae
xor
push
mov
sub
push
jb
push
in
dec
hlt
frstor
in
popa
ficoms
dec
imul
sti
jg
cmp
out
je
mov
cmpsb
xor
adc
fsubs
cmpsl
push
repz
fimuls
or
and
or
jns
mov
pop
fldl
push
rorl
push
sbb
js,pt
xor
add
insl
rcrb
jp
pop
dec
jg
add
jle
jmp
pop
sarl
out
mov
xchg
dec
addl
test
bound
insb
push
jae
jmp
jge
push
ljmp
jp
mov
ja
hlt
out
mov
popf
xor
jge
lea
push
flds
push
mov
push
and
inc
xchg
or
mov
mov
cmpl
push
rol
gs
repz
push
xor
and
mov
add
xchg
pop
push
xor
jbe
cwtl
ret
xor
dec
or
inc
imul
std
cmp
test
fs
les
push
jb
das
pop
and
sub
sub
xchg
mov
push
nop
aad
dec
cmpsl
fldcw
add
push
fcomps
xor
or
inc
mov
adc
icebp
add
mov
mov
scas
lret
dec
cmp
cbtw
xchg
cmp
mov
xchg
outsb
fdiv
repz
test
xor
outsl
or
mov
xchg
movsl
jmp
or
notl
orl
pop
mov
rcpps
sbb
xchg
ljmp
pop
out
pop
insl
dec
dec
xor
and
mov
inc
loope
aam
and
mov
mov
stos
pusha
pop
enter
and
dec
push
test
pop
call
addr16
les
ljmp
icebp
cmp
into
add
push
cli
cmp
and
mov
or
lock
lods
mov
xlat
xchg
inc
dec
daa
out
hlt
pop
push
idivb
out
xor
insl
aaa
lock
xor
out
mov
dec
jbe
dec
aaa
pusha
fisttpl
scas
xchg
sti
cli
sub
and
out
outsb
add
jns
mov
bnd
into
clc
fcom
jno
cmc
xlat
xor
or
fcomps
mov
leave
int
mov
loopne
xchg
xchg
cmpsb
sbb
shlb
mov
adc
mov
xorb
popa
shl
jbe
adc
out
jae
mov
out
cmp
cmp
cld
adc
aas
push
xor
jno
insb
and
lods
aam
cmc
cmc
shll
mov
lahf
adc
test
jg
jbe
and
es
mov
andb
loop
jo
mov
pop
inc
nop
fbstp
sbb
ljmp
aad
ret
jbe
mov
in
lret
loopne
orl
mov
sbbl
cmp
cmp
sbb
sbb
and
sbb
pop
stos
stos
faddp
imul
pop
loope
mov
xchg
xchg
and
dec
pop
addr16
add
adc
adc
jne
or
cmp
nop
and
adc
out
repnz
sbb
jmp
inc
mov
add
jg
stc
neg
pusha
mov
jmp
fsts
dec
inc
push
mov
fldl
jle
and
aaa
mov
popa
test
xor
jb
mov
nop
pop
push
lock
icebp
fstps
into
cmc
stos
popf
repz
pop
in
jnp
mov
pop
imul
xor
adc
sub
js
mov
loope
push
and
cmc
push
rcl
in
leave
cmp
jnp
arpl
push
std
and
sti
lret
pop
cs
jmp
or
lret
push
pop
cmp
les
ja
adc
push
mov
in
jnp
daa
jmp
xchg
mov
call
add
xor
and
lea
mov
js
les
icebp
cmpsb
push
repz
jecxz
sahf
ss
std
dec
adc
das
ret
in
dec
inc
pop
stos
xchg
repz
xchg
xchg
lods
daa
pop
sti
out
clc
arpl
scas
sbb
push
mov
and
mov
into
lret
stos
xorl
jb
push
aaa
push
repz
mov
fs
fbld
in
scas
adc
jns
push
aaa
in
jns
scas
sahf
add
int
dec
lods
pop
xor
xchg
add
dec
fs
mov
push
ja
enter
sub
sbb
test
sub
ja
mov
cmp
addb
pop
lock
cld
xor
dec
loopne
pop
mov
repz
adc
push
call
fwait
imul
popf
jnp
and
test
lahf
jo
jecxz
sbb
cmp
mov
jg
lods
lcall
add
mov
jl
bound
mov
test
pop
cwtl
addl
push
jl
repz
imul
stos
movsl
enter
ljmp
push
jbe
or
fcomp
repz
adc
jecxz
fdivrl
rorl
fidivs
jge
pop
push
mov
popf
cmpsb
cli
dec
mov
dec
dec
test
mov
xor
mov
sub
call
cmpsb
xchg
adc
ret
insb
push
mov
punpckhwd
stos
mov
mov
sub
jne
cmp
dec
ret
inc
push
xchg
mov
push
dec
dec
mov
jnp
in
es
pop
scas
jnp
mov
ljmp
cmp
imull
sub
cmc
mov
jae
mov
pop
pop
pop
xchg
mov
push
cmpsb
hlt
dec
cmc
mov
dec
data16
jp
rcrb
jecxz
mov
inc
mov
daa
mov
cmp
das
sbb
roll
fstp
mov
sbb
and
push
imul
test
imul
test
adc
pop
pop
xchg
enter
movsb
mov
fistps
pusha
xor
mov
mov
out
nop
sub
jns
flds
hlt
dec
mov
push
ret
sbb
push
xchg
ljmp
loope
dec
sbb
sbb
mov
pop
repz
jecxz
xlat
add
inc
add
xchg
jmp
outsb
enter
in
and
push
loope
add
inc
mov
shl
pop
jmp
cmpl
repz
mov
cmp
rcll
add
nop
pop
sub
add
stos
push
test
sub
stos
pop
repnz
stos
ret
cmp
dec
lods
jecxz
mov
imul
pop
or
js
arpl
xor
lcall
bound
inc
dec
push
loope
mov
sbb
xor
lock
sbb
cmp
mov
aad
mov
pop
rcrb
mov
sub
ret
xchg
es
movsb
out
mov
ror
gs
test
sarb
les
xchg
cs
mov
outsb
sub
cld
lods
inc
sub
jp
sahf
adc
cmp
mov
inc
iret
repz
pop
dec
sti
mov
outsl
inc
mov
cmpsb
mov
je
idivb
pop
pop
fwait
cmpsb
push
shl
repz
pop
shrl
ret
in
push
gs
ret
movsb
add
pop
and
sahf
adc
adc
mov
mov
push
lods
jbe
shll
cmpsl
int3
add
jle
mov
mov
sahf
hlt
inc
dec
or
jo
and
sub
jns
add
jae
xor
js
imul
pop
sub
and
ja
dec
adc
jmp
and
jae
mov
jns
pop
test
out
mov
vfmaddps
fimuls
test
xor
push
dec
cmpsl
xchg
imul
daa
jl
sub
push
rep
pop
xor
push
xchg
pop
mov
scas
mov
into
xchg
and
or
cmpsb
xchg
pop
out
push
in
movsb
add
movsb
mov
ljmp
in
cwtl
xchg
fcompl
loope
rcl
and
push
xchg
push
lret
pushf
icebp
inc
das
fwait
jne
arpl
push
xor
stos
pop
push
and
in
sti
roll
fiadds
inc
pop
jecxz
mov
lea
sub
aas
divb
dec
enter
sbb
loopne
push
repz
dec
dec
sbb
jmp
inc
add
data16
mov
mov
add
mov
out
mov
sbb
lret
out
sub
or
inc
aas
cmp
push
xor
fmul
xor
ss
add
lock
loop
xlat
subb
fimull
clc
sarl
dec
test
fs
fmull
cmp
jmp
push
push
outsb
pop
xchg
xor
lret
push
mov
bsr
adc
mov
je
add
sbb
pop
or
xor
pusha
popa
call
adc
insl
cmp
cs
sub
adc
mov
add
pushf
push
push
out
into
xchg
fistpl
adc
inc
push
ret
mov
repz
imul
pop
jae
imul
inc
out
dec
and
cmp
push
jo
xor
bound
cmp
dec
test
sbb
xor
nop
mov
lret
xchg
outsb
es
or
scas
scas
nop
fistps
call
adc
jno
gs
je
and
mov
mov
mov
fs
dec
jno
jecxz
into
push
cwtl
testb
adc
jle
scas
jp
mov
adc
call
dec
outsb
mov
lods
jecxz
push
fstpl
rol
or
test
pop
sub
push
enter
adc
inc
clc
push
rcrl
mov
adc
scas
std
lods
sbb
lahf
insb
or
cmpl
notb
jno
repnz
rcll
pop
dec
push
hlt
les
movsl
lea
nop
out
and
clc
cmc
jns
mov
push
cmc
loope
dec
add
popa
jg
pop
inc
cwtl
push
jecxz
js
sbb
cld
cmp
jbe
jge
dec
adc
ds
mov
into
adc
lcall
adc
fldenv
std
sbb
mov
sbb
add
jns
pop
cwtl
fdiv
cmp
xorb
xor
adc
mov
cltd
ss
xor
jmp
rcll
scas
ljmp
inc
testb
aad
xlat
iret
imull
outsb
xchg
dec
push
aam
add
push
mov
insl
jl
daa
je
xor
in
xchg
sahf
les
cmp
out
dec
push
add
jmp
into
pop
fdivs
in
ja
shll
push
clc
js
dec
repnz
hlt
xorl
mov
cs
xor
mov
cmp
mov
js
jno
pop
jb
jae
shrb
rcr
mov
fs
ljmp
adc
xchg
testb
lds
lds
jo
push
sub
cmp
int
loop
adc
test
out
fisttpl
sub
lock
dec
icebp
pop
imul
cltd
leave
push
mov
push
jno
pop
call
bound
pop
push
pusha
bound
push
cmp
mov
add
cmp
xor
cli
inc
pop
xor
jge
push
push
jecxz
jl
or
cmpsb
push
pop
insb
in
call
call
in
sub
es
cmp
cld
push
aaa
icebp
inc
inc
cmp
iret
cmp
mov
scas
cmpsb
jno
jge
mov
scas
out
mov
or
in
ss
ja
mov
cmc
pop
xchg
pop
cwtl
xor
fdivl
pop
and
xchg
xor
addb
out
fisttpll
insl
sub
jbe
and
xor
lret
push
xchg
lahf
add
dec
pop
sub
movsb
push
and
je
pop
and
out
or
pop
std
jbe
sub
mov
sub
and
cmp
shl
sub
and
out
push
mov
insb
imul
cmp
mov
jg
insl
pop
stos
clc
ljmp
push
mov
add
xchg
scas
mov
dec
sbb
outsb
dec
adc
mov
scas
stc
cltd
cmp
mov
add
loope
shl
outsb
lock
mov
fwait
lea
pop
popf
in
mov
out
pop
jb
test
cmp
lret
ret
sbb
sub
insb
es
push
push
dec
inc
das
stos
shlb
pop
insl
sbb
and
pusha
rcl
fbld
in
mov
jecxz
push
cmc
cltd
lds
ficompl
mov
xchg
fbstp
sbb
or
js
shll
lods
push
mulb
sti
or
add
add
cmpsl
cli
add
lahf
add
jb
out
jg
sub
mov
pop
xchg
adcl
mov
mov
inc
cmp
lret
cwtl
inc
sub
in
nop
cs
movsb
and
sub
ss
adc
mov
jmp
in
daa
fcoml
outsb
jns
mov
aad
loope
mov
aaa
aad
jl
xorb
mov
lea
xor
fimull
shl
fisubrs
pushf
cmpsb
jno
xor
mov
ss
inc
adc
pop
lahf
mov
push
jl
lods
rcll
jnp
and
ss
cmp
xchg
jg
sub
loopne
call
mov
out
pop
push
add
test
dec
jecxz
ficomps
jae
sub
das
aad
in
addb
clc
leave
inc
and
enter
pusha
inc
loope
pop
out
cmp
lods
das
arpl
or
lret
scas
mov
lock
add
xchg
outsl
mov
cmp
push
push
cmp
in
sbb
inc
test
xlat
xchg
add
adc
mov
push
adc
xor
je
sbb
jge
jg
jge
add
sahf
inc
shll
or
push
mov
dec
add
mov
fs
scas
push
lods
cmp
jo
xchg
es
pop
jo
jg
lods
jnp
scas
cmp
int3
scas
sbb
push
pop
test
enter
jecxz,pt
cmp
out
inc
test
and
lods
fcmovbe
notl
push
sub
cmp
in
dec
xor
dec
mov
clc
cmpsb
int
adc
pushf
push
mov
cmc
fcompl
push
scas
lcall
popa
neg
sub
test
je
mov
push
jl
push
data16
adc
sub
mov
pop
pop
pushf
mov
insl
call
mov
xchg
add
pop
repnz
loope
pop
mov
or
push
xor
inc
aam
push
test
sbb
lcall
mov
cld
sub
in
repz
gs
ficomps
push
mov
arpl
cmp
jo
repz
imul
xor
cmp
adc
inc
and
xor
inc
jecxz
sbb
jae
je
cltd
fbld
ffree
dec
out
mov
or
cmp
dec
jecxz
loopne
mov
fldt
ret
fnclex
in
cmp
add
inc
jmp
je
call
mov
inc
divl
cmp
add
jge
aas
sub
sub
in
ror
outsl
pop
popf
mov
lret
jae
xor
stc
lock
inc
test
pop
loope
jle
ds
jae
outsb
adc
arpl
push
cmpl
cmc
stos
dec
jl
mov
icebp
or
and
push
jnp
aad
imull
rol
pop
lcall
test
aam
jo
insb
scas
pop
dec
into
and
add
sahf
mov
pop
xor
lods
xchg
mov
aaa
cmp
shll
fcmovnu
mov
orl
add
int3
add
adc
mov
outsb
add
jmp
mov
push
fwait
sub
loope
orl
pushl
mov
sbb
inc
lock
cmp
xor
repnz
fldt
lcall
sbb
inc
outsl
sbb
cmp
fstpt
int
lock
cli
leave
cld
and
mov
mov
inc
xor
rolb
sbb
fs
xor
jo
push
rolb
pop
jecxz
cmp
mov
cmpsl
jecxz
daa
arpl
cmp
fidivrl
arpl
inc
scas
int3
add
rolb
sahf
sbb
and
ja
push
lahf
rcrb
div
and
xor
jo
sub
imul
lock
sub
xor
inc
inc
cmp
jne
lods
push
jae
cli
sub
repnz
out
sub
bound
fcmovu
inc
dec
and
iret
mov
bound
sub
lods
jae
dec
and
out
sub
lods
add
adc
mov
ret
and
jo
rcrl
push
sub
loopne
in
sub
mov
lea
addr16
std
stc
mov
mov
jno
inc
les
adc
lock
mov
aad
mov
js
movsl
outsl
cwtl
jp
adc
jbe
js
cltd
scas
jge
sbb
add
add
xchg
fiaddl
adc
in
pop
xchg
sahf
sub
mov
rol
xor
mov
loope
cmp
sti
int
loope
movsl
movsb
scas
push
mov
inc
lret
cmpsb
gs
adc
mov
ja
mov
ret
cmpsl
sub
mov
or
xchg
xor
fdivl
daa
jne
cmp
cli
fnstenv
in
jne
cwtl
aas
bound
fadds
mov
cmp
jb
mov
jg
inc
out
std
pop
xchg
adc
push
ljmp
cmpsb
rcrb
aaa
inc
push
xor
jo
or
dec
push
xchg
adc
dec
push
subb
and
mov
outsl
rcll
sbb
rcrl
lret
dec
mov
fbstp
subb
pop
xchg
js
jb
cmp
in
les
popl
hlt
orb
sub
mov
lahf
loope
jp
jnp
out
push
int3
outsl
inc
ss
shr
rorl
dec
sub
fidivrl
push
push
mov
cltd
xchg
clc
sub
hlt
and
popa
xchg
xlat
shrw
sbb
pop
test
aam
push
mov
sub
pop
outsl
xor
pop
jl
mov
pop
inc
push
fcompl
mov
fbld
jnp
push
pop
push
inc
sub
adcb
mov
rcll
push
movsb
mov
cmc
jns
cmp
cwtl
rcrb
ret
mov
xchg
mov
mov
push
leave
jge
push
test
in
lret
cmp
dec
lds
fisubl
or
dec
mov
pop
decl
in
pop
testl
test
and
pop
inc
mov
jmp
out
leave
loop
jo
sbb
fsubrp
and
shl
pop
xor
mov
mov
sub
xchg
ds
mov
lret
in
push
rorl
xchg
sub
sbb
adc
popa
jae
ljmp
lret
pop
cmp
xor
pop
mov
mov
in
and
xchg
xor
cmpl
mov
andl
fsubrs
mov
dec
sbb
mov
and
fcom
popf
inc
sub
in
scas
adc
movsb
pop
fcompl
lahf
aaa
cli
sbb
mov
aad
sub
sub
ret
stc
mov
es
jl
or
into
pushf
cmp
or
ljmp
bound
ret
mov
rorb
mov
xchg
pop
cwtl
mov
inc
mov
cwtl
xor
adc
loop
sbb
mov
lcall
xchg
push
xor
jo
fstpt
or
cmp
imul
adc
push
add
xor
push
sbb
inc
cli
das
jno
or
aad
jbe
adc
push
in
in
mov
cld
popf
xor
aam
jns
insb
pop
rcll
or
test
aaa
repz
jecxz
or
imul
insl
or
sub
dec
mov
lea
leave
push
aas
add
outsb
jne
mov
pushf
clc
push
test
xor
fdivs
pop
sub
add
clc
lret
cli
movsb
scas
movsb
data16
out
add
and
push
or
mov
dec
in
arpl
daa
dec
popa
shr
int
pop
pusha
or
push
lahf
mulb
out
repnz
out
mov
mov
mov
mov
roll
jns
jbe
sub
fisubrs
push
lret
mov
stos
inc
out
addr16
lock
add
std
jle
imul
js
adc
stc
push
xchg
cs
iret
xor
jmp
jg
scas
cmpsl
cmp
adc
jno
pop
inc
add
loope
sbb
mov
lds
iret
rolb
xchg
mov
push
rcrb
cmpsb
dec
xor
test
lret
ret
loopne
pop
shl
cmpsb
cltd
push
sbb
mov
jl
loop
add
stc
xor
sub
pop
push
dec
js
aaa
dec
call
sub
jbe
add
aad
jmp
imul
lret
stos
adc
or
movsb
xor
mov
cmc
hlt
mov
inc
mov
and
and
cltd
jle
rcll
xchg
sbb
jnp
test
push
lea
rorl
rolb
mov
in
add
sub
orl
push
lret
mov
xchg
add
icebp
rol
push
repz
mov
fwait
add
js
adc
or
inc
sbb
testb
xlat
das
add
icebp
sbb
or
xor
rcr
mov
rcrl
dec
or
dec
cli
call
jb
inc
and
jecxz
test
mov
pop
cmp
push
and
pop
cmp
xchg
lds
loop
dec
push
sbb
mov
out
jo
mov
adc
xor
cmp
inc
jg
test
dec
lea
jbe
cs
pop
xor
pop
sar
in
int
mov
mov
in
cmpsl
jle
xchg
fstps
adc
mov
lods
sti
jge
ss
sub
ss
or
movsl
push
mov
and
mov
push
or
inc
mov
pop
popf
lods
pop
neg
sub
push
popa
arpl
push
in
enter
fdivs
adc
fcompl
push
je
fwait
daa
shll
sahf
xchg
es
mov
gs
add
jne
sarl
adc
push
push
mov
js
adc
cld
dec
xchg
pop
jg
enter
add
ret
and
ljmp
jne
sti
clc
inc
adc
jg
bnd
dec
outsb
std
pop
test
push
pop
jno
pop
iret
cmc
jae
mov
fs
mov
aaa
lcall
fisttpll
jbe
xchg
sub
loop
push
scas
jae
add
mov
dec
adc
inc
adc
gs
call
sti
pop
adc
data16
mov
jnp
lods
in
dec
test
adc
xchg
cmp
orb
jp
xchg
xorl
pop
imull
push
pop
mov
add
push
xchg
and
sub
add
pop
push
or
out
push
pop
cld
cmp
jb
pop
sub
in
ffree
gs
pop
mov
scas
pop
and
dec
mov
roll
adc
mov
xchg
gs
lret
dec
movl
inc
xlat
xchg
or
out
es
int3
cmp
dec
insl
insb
js
push
mov
test
insb
mov
adc
mov
fs
mov
or
mov
push
imul
clc
int
nop
pop
dec
add
in
cmp
add
xor
mov
subl
or
daa
cmp
cltd
sub
xchg
mov
mov
mov
enter
in
inc
test
out
xlat
mov
sbb
fldt
adc
adc
stc
xor
mov
dec
cmp
insl
xor
cmp
mov
out
std
add
xor
and
shrb
push
mov
push
mov
add
sub
sbb
dec
pop
jp
or
sbb
mov
jge
xchg
cld
inc
es
pop
outsl
push
lods
inc
test
leave
mov
std
fistpll
rorl
adc
cmp
outsl
add
je
js
inc
jmp
in
lcall
shr
mov
push
sbb
push
pop
mov
lret
pop
mov
inc
jae
stos
orb
push
sub
lds
cmc
mov
pusha
enter
loop
cmp
lahf
jno
xor
in
daa
inc
outsb
sbb
fwait
jb
aaa
mov
mov
pop
test
pop
repnz
inc
push
pop
xor
push
cwtl
cli
mov
lcall
sbb
jp
add
adcb
cmp
mov
ds
jo
fstpt
stos
rcl
jb
sub
add
test
sarl
ljmp
icebp
mov
loop
xchg
out
insl
lods
inc
pop
lahf
xor
dec
std
pusha
test
mov
mov
sbb
xchg
pop
imul
dec
inc
outsb
sti
mov
icebp
shll
lods
fst
or
repnz
jg
dec
pop
popa
mov
gs
icebp
popa
jne
ljmp
sub
xor
mov
mov
pop
jge
ja
pop
ljmp
mov
lcall
and
mov
push
fists
sbb
sahf
xchg
mov
mov
ss
std
mov
pop
jo
fimuls
bound
call
test
loopne
dec
pop
outsl
jg
mov
test
push
pop
xor
inc
xchg
pop
rcrl
jne
ss
xchg
andb
sub
dec
mov
arpl
xchg
out
or
lcall
shrb
rorl
imul
sbb
stc
sbb
push
icebp
inc
into
adc
aam
das
cmp
jne
pop
rolb
sub
push
cs
in
das
cwtl
inc
pop
leave
cmpsl
cmp
rcrl
movsb
mov
test
pop
mov
lock
inc
imul
add
xlat
push
pop
inc
and
sbb
testl
roll
jmp
cmc
push
sub
mov
sub
addb
dec
lods
sub
xchg
lret
mov
into
out
push
add
cmp
xor
mov
imul
xor
jl
imul
adc
dec
in
call
jecxz
jecxz
inc
es
fldt
cmc
stos
pusha
sbb
icebp
push
gs
das
out
mov
pop
or
stc
and
xchg
ljmp
lods
clc
movsl
push
insb
dec
mov
imul
pop
and
cltd
or
xchg
bound
out
sub
daa
addr16
xchg
pop
mov
inc
and
sbb
ss
push
mov
sub
inc
leave
sbb
dec
iret
movsl
sbbb
lret
daa
and
add
imul
das
and
sbb
mov
mov
mov
fsubrl
arpl
mov
sub
test
movsb
sub
cmp
mov
lret
mov
sahf
sbb
jmp
xchg
pop
fwait
lret
push
add
and
sti
std
stos
jns
mov
add
xor
mov
cmp
push
xchg
in
int3
loopne
mov
xchg
mov
xlat
out
cmc
int3
daa
lock
xchg
fdivs
xchg
mov
int
out
into
negl
call
pop
ret
xchg
rcll
cmp
add
push
pop
ret
scas
cwtl
pusha
adc
xchg
and
mov
and
loopne
std
test
and
into
and
push
mov
mov
in
inc
in
push
pop
jg
push
mov
jmp
xor
bound
sarb
lock
dec
cmp
leave
sahf
clc
mov
ja
in
jle
ret
lock
pushf
xchg
sti
shlb
loop
lahf
movsb
mov
jp
iret
xorl
add
or
cmp
fwait
int3
mov
lods
rcll
into
pop
dec
add
sub
setbe
or
fdivrs
mov
push
xor
dec
inc
arpl
cmpsb
adc
mov
add
rcll
jne
sub
lret
ss
adc
pop
jae
push
and
cltd
xor
nop
sbb
aam
xor
mov
ds
mov
inc
ret
add
out
pop
test
or
sahf
or
int
push
push
push
aas
inc
add
or
xchg
dec
dec
mov
pop
or
cmp
jb
jbe
cmp
or
outsl
sub
repnz
cmpsl
sahf
cmp
fsubp
inc
push
js
mov
arpl
repnz
xchg
and
mov
jl
cmp
rorl
jl
inc
cmpl
mov
xchg
mov
ret
xor
pop
sbb
xor
insb
cmpb
sub
cmpb
mov
mov
and
outsl
mov
xor
insb
cld
pop
mov
sbb
cltd
mov
cwtl
xlat
push
test
mov
repz
push
add
aaa
inc
fs
adc
sbb
push
addl
paddb
mov
xchg
mov
cmpsl
add
icebp
push
sbb
jmp
push
dec
dec
push
pop
sbb
push
mov
inc
iret
or
pop
pop
pop
mov
addr16
mov
sbb
scas
mov
jbe
pushf
aas
push
cwtl
movsl
jmp
xchg
push
ret
rcl
jae
mov
add
aad
add
or
fimull
inc
inc
xor
push
sub
dec
xor
jns
repz
lret
or
pusha
mov
or
mov
loope
lods
jnp
add
mov
push
aad
cmpb
mov
xor
xchg
and
pop
sti
loop
daa
cmp
sbb
jb
jmp
dec
and
js
mov
ret
jne
jo
pop
mov
nop
rolb
mov
inc
lods
movsb
stos
in
mov
and
iret
or
sbb
call
jle
les
movsl
sbb
dec
imul
wrmsr
in
mov
lods
xor
mov
inc
idivb
cli
jp
cmp
out
adc
popf
fisubrl
cmc
or
push
cs
fwait
adc
sbb
arpl
stc
dec
jmp
dec
mov
addb
xchg
mov
in
dec
lret
dec
sbb
imul
ret
sbb
shrl
inc
and
cmp
pusha
xor
push
jle
add
fwait
jae
pop
fwait
cmc
lcall
jle
fs
xchg
bound
pop
lock
cwtl
jbe
mov
add
mov
xchg
aaa
xchg
loope
into
xorb
addb
or
fistpl
pusha
sahf
adc
dec
push
int
push
lea
out
popa
test
dec
adc
fstps
iret
cmc
in
outsl
outsb
add
loopne
jg
pop
mov
imul
inc
hlt
sbb
js
push
pop
jl
sahf
adc
icebp
sahf
mov
dec
es
lock
mov
jl
jb
push
mov
cmp
outsb
lcall
adc
sti
or
mov
lods
stos
in
jl
sub
faddl
fldcw
xchg
loopne
or
daa
stc
les
std
ljmp
leave
jnp
cmpb
adc
insb
stos
xor
push
mov
sbb
pop
loop
lahf
dec
mov
pop
andl
jg
jb
cmc
jl
sbb
out
subb
dec
and
into
mov
xchg
fimull
call
les
mov
nop
pop
fdivr
push
ss
pop
scas
or
sub
es
aaa
fistps
js
sub
inc
push
inc
movl
jns
bound
mov
inc
jae
cmpl
rclb
jmp
adc
xchg
adc
frstor
ja
xadd
cwtl
lds
pop
mov
sub
sbb
push
mov
jmp
push
mov
mov
iret
sar
fcoml
mov
test
cmc
mov
clc
or
repz
pop
lea
lret
fmuls
sub
push
lret
xchg
stos
xchg
xchg
ds
add
dec
jne
jl
cmp
mov
xchg
pop
loop
in
sbb
xor
cwtl
test
mov
cmpsb
fcoml
sub
test
test
lret
mov
cmp
leave
fwait
cmp
sti
xchg
in
pop
out
push
pop
dec
jnp
fsubs
rcrb
sbb
xchg
pop
push
jbe
xchg
leave
and
sub
cmp
sub
mov
cmp
icebp
xchg
or
fsubrl
cmpsb
das
or
mov
add
lods
outsl
dec
lret
xchg
shlb
pop
push
test
cs
xchg
andl
inc
or
push
ud1
or
iret
inc
ret
outsl
add
je
dec
sbb
and
mov
cmp
mov
jecxz
cli
mov
loop
stc
sub
mov
or
jle
pop
jecxz
mov
test
scas
sub
mov
inc
sub
stos
cmpsl
add
pop
inc
hlt
sbb
loopne
sbb
ja
mov
pop
test
nop
stos
repnz
dec
add
push
popa
mov
cwtl
dec
cmpsb
arpl
add
mov
shll
or
mov
mov
mov
bound
out
adc
ss
movsl
xchg
outsl
sbb
aam
mov
repnz
fsubrs
push
push
inc
cmp
popa
mov
inc
xor
or
inc
sub
add
mov
movsl
xchg
xor
push
cmp
je
into
imul
std
pushf
and
loopne
in
cli
clc
lea
jbe
leave
rcr
popf
ret
add
dec
clc
push
loop
jecxz
pop
movsb
shll
add
mov
or
iret
sbb
outsb
dec
jae
add
xchg
data16
jge
lret
jo
insl
movl
add
in
jns
cmpsb
pusha
rcrl
jmp
xor
jno
jo
bound
mov
scas
cmpl
cmc
or
push
inc
lret
enter
movsl
or
sub
jae
aam
and
sbb
mov
sbb
cs
sbb
inc
inc
outsl
lds
or
sub
jg
popa
les
push
pop
jmp
mov
pusha
xor
jmp
mov
scas
pop
mov
mov
xchg
and
or
mov
adcl
movsb
subb
jle
sbb
cli
xchg
xchg
popa
bound
cmp
pusha
add
fwait
call
push
mov
xor
adcl
and
fldt
fistps
sub
push
imull
popa
loope
movsb
dec
test
ja
jmp
jo
mov
sbb
icebp
mov
pop
andl
mov
jne
jns
dec
out
pop
mov
fiadds
paddd
mov
out
lods
shrl
aam
sub
xor
dec
push
adc
push
incb
push
sbb
andl
sbb
mov
push
cld
mov
xor
out
jns
inc
mov
xor
int3
and
mov
and
mov
xor
pop
add
push
in
dec
or
js
xchg
ds
hlt
cmp
and
cltd
lahf
aas
subb
sbb
jp
mov
mov
add
mov
xchg
jb
or
jnp
xlat
inc
in
in
inc
pop
cmpsl
dec
adc
adc
filds
pop
xchg
ret
in
xchg
enter
xor
dec
in
xor
pop
arpl
cli
pop
xchg
xchg
mov
and
inc
divb
push
lods
lea
pop
arpl
ret
xlat
mov
sti
push
push
ret
das
mov
int3
addl
pop
in
xchg
out
int3
stos
adc
clc
jmp
jae
lahf
hlt
mov
into
mov
mov
cs
and
fisttpll
xor
scas
aaa
sbb
in
arpl
arpl
mov
call
xor
and
daa
cmp
les
mov
jl
daa
cmp
pop
xchg
orl
push
or
push
ds
push
add
jg
sbb
shrb
or
vphaddubq
lea
pushf
aaa
pop
push
mov
popf
sbb
iret
and
cs
push
js
pop
fnstsw
lret
mov
test
sub
pushf
jno
jle
inc
push
push
or
mov
xchg
mov
jb
mov
adc
rorb
dec
mov
mov
cli
sbb
fcmove
push
and
lret
jecxz
sti
inc
adc
push
sub
jo
sbb
mov
push
pusha
xorb
in
addb
push
or
mov
in
sbb
loop
xor
push
dec
xor
imul
mov
inc
mov
mov
and
cmpsl
push
lret
pop
jnp
sarl
or
into
sub
in
gs
mov
cmpsl
pusha
insl
inc
sub
sahf
jmp
enter
pop
cli
xor
push
xchg
lods
and
int
cmp
mov
xor
fdivs
xchg
pop
mov
dec
sahf
jle
push
mov
mov
jno
jl
div
mov
cli
fwait
jne
cmpl
xchg
sbb
repnz
dec
gs
or
ja
bound
rcl
loop
mov
sub
jle
mov
pusha
les
lods
daa
pop
pushl
dec
fmulp
sbb
jo
clc
cmp
jle
xchg
nop
pop
test
dec
cltd
aaa
dec
xchg
pop
dec
xchg
push
xchg
mov
ds
sbb
push
leave
pop
push
add
daa
out
xor
cli
lret
push
ds
shlb
sub
mov
adc
pop
outsb
pop
add
pushf
xchg
cmp
inc
xchg
pop
insb
lcall
xor
fwait
pop
dec
cwtl
loop
sbb
mov
jecxz
or
xor
mov
insl
jecxz
push
dec
pop
cmp
adcb
pop
push
lret
add
movl
jo
insb
lret
pop
add
arpl
fwait
les
xor
and
out
xlat
incl
jle
and
dec
xor
rol
cmp
mov
sbb
repnz
sbb
stos
es
js
adc
repz
fdivrl
pop
out
mov
and
leave
fdivr
mov
mov
ffreep
lcall
inc
fwait
int
cmc
push
movsb
jno
sub
cmp
lods
mov
mov
cmp
imul
ret
sbb
mov
out
cmc
aas
loopne
ja
mov
sbb
sbb
or
and
cwtl
sub
ret
and
in
int3
jo
or
add
and
jb
rcr
mov
das
outsl
lret
outsb
jns
push
test
or
pop
xchg
jno
jb
sbb
lods
add
cld
cmp
fldt
fistl
popf
cltd
ficomps
sub
push
cmc
cmpsb
sbb
hlt
sub
lret
adc
nop
push
arpl
cmp
fisttpll
ret
cmp
lods
fucomip
add
ror
shrl
orl
insb
les
ficoml
fmuls
pop
dec
mov
adc
test
add
dec
cmp
ficoms
jp
les
pop
aaa
push
loop
cmpsb
faddl
clc
mov
fisttpll
cmpsl
movsb
jg
in
inc
or
push
cli
push
ret
subb
orl
add
fnstcw
jns
ljmp
pop
mov
pop
adcb
jns
adc
mov
and
pop
inc
popl
fdivrs
adc
aaa
cmp
mov
ja
xchg
imul
insl
push
xchg
aaa
outsb
in
cmp
xchg
cld
xorb
iret
mov
pop
bnd
arpl
cmp
aaa
lret
faddl
and
fcompl
pusha
inc
add
push
or
mov
sahf
mov
mov
rorb
mov
hlt
push
mov
or
xchg
jl
in
and
icebp
mov
jmp
jmp
adc
pop
leave
or
insb
movsb
ds
das
jl
sub
js
es
pop
and
std
add
fisubrl
push
in
mov
inc
lods
mov
fisttpl
or
cmp
pop
rorl
ds
xchg
stos
dec
jg
mov
int3
aaa
les
adc
pop
sub
lcall
push
test
in
popa
loopne
add
ljmp
push
jle
or
jno
out
ds
daa
fadd
xchg
iret
pop
dec
pop
inc
imul
movsl
xor
xchg
out
repz
pcmpgtb
sub
fcomi
pushf
in
and
lret
mov
lahf
negl
stos
sahf
push
fistpll
mov
mov
clc
fldt
test
scas
xlat
fsubrp
jns
sub
push
and
mov
popa
sbb
or
test
jns
mov
sub
mov
lcall
lock
into
in
pop
jmp
add
dec
or
rolb
push
dec
sub
cld
dec
xorl
xor
xor
xor
add
xor
popf
movsb
ds
push
inc
mov
pop
inc
jmp
arpl
out
addr16
lcall
cmp
pop
cld
mov
pop
jl
mov
inc
fcoms
mov
and
pop
pop
rcrl
test
sub
and
pop
fdivl
sbb
and
pop
divb
pop
testb
lret
adc
test
in
mov
or
adc
lahf
xchg
xor
mov
jl
xor
fistl
xchg
lcall
pop
mov
push
mov
lret
sub
cltd
jb
push
insl
or
xchg
hlt
into
inc
add
stos
mov
aas
xchg
jl
test
out
and
cmp
ja
xchg
xchg
xchg
cltd
test
sti
test
pop
pop
je
imul
int3
push
pop
pop
sbb
dec
loop
aas
jmp
sahf
sbb
jmp
lahf
or
imul
cmp
mov
mov
js
push
cld
jnp
sub
or
xchg
pushf
fs
adc
in
dec
into
mov
je
push
mov
clc
or
mov
out
fs
and
test
add
sahf
dec
in
mov
jae
mov
fcoml
in
jmp
in
repz
xchg
push
inc
imul
pop
push
xor
repnz
insl
mov
fmuls
inc
or
roll
popf
cwtl
add
loope
push
mov
imul
ret
xchg
dec
dec
aad
sub
test
and
inc
xor
sti
xor
jge
dec
sub
in
bound
jo
add
xchg
cmpsl
or
add
jnp
jnp
sbb
push
inc
mov
mov
and
roll
or
mov
cmp
bound
mov
call
stc
nop
dec
xchg
jmp
cmpsl
sub
cmp
rcr
jae
mov
sbb
test
and
pop
cld
inc
cli
push
and
push
cs
add
push
stc
xchg
pop
xchg
dec
and
rorl
popf
xchg
sti
insl
addr16
pop
mov
add
iret
cwtl
int3
fldt
pop
mov
addr16
xor
rol
mov
jle
insb
sbb
aas
push
lahf
adc
lret
lods
pop
mov
jge
adc
mov
adc
mov
or
rcl
jle
rcrb
lods
mov
pop
outsb
cmp
dec
cli
fwait
sbb
pusha
jg
lcall
push
dec
push
cmp
in
adc
mov
ret
pushf
vpmovzxbw
test
push
jg
les
ljmp
adc
cwtl
inc
add
pop
sbb
xor
cmpb
in
gs
xor
and
push
mov
enter
pop
sub
stos
nop
dec
dec
negb
sti
adc
pop
jae
and
or
jg
divl
or
std
sti
push
jle
dec
icebp
lds
pop
jb,pt
out
lret
pop
lock
test
pop
inc
push
rcrl
sub
insb
dec
xchg
enter
test
int
jo
push
xchg
fxch
stos
push
xchg
mov
outsl
cwtl
enter
lds
js
repz
mov
jne
popa
scas
out
aam
das
inc
rol
sub
fsubl
nop
or
lahf
cmp
pop
mov
shrb
adc
inc
addr16
cld
adc
mov
jmp
pop
sti
out
pop
pop
loopne
into
mov
arpl
pop
xchg
mov
xchg
lock
push
andb
loop
rcr
pop
es
aaa
xchg
loop
and
cmp
shll
sub
dec
fcmovnu
clc
inc
pop
ss
mov
lods
sbb
into
dec
xchg
or
adc
pop
sarl
xchg
ljmp
lock
adc
inc
sbb
adc
or
dec
cli
xor
icebp
mov
jno
rcrb
movsl
mov
arpl
xchg
outsb
cmp
pop
int3
test
xor
dec
in
cmp
xchg
mov
sub
sbb
movsl
mov
mov
pushf
aaa
and
fcomp
ljmp
mov
xor
xchg
fpatan
lcall
xchg
imul
repz
mov
stos
mov
lret
fcoml
mov
mov
pop
cwtl
rcrl
jb
mov
xor
les
movsl
out
mov
push
sbb
mov
pop
and
add
mov
and
jge
push
call
sar
push
movsb
repz
cmc
adc
push
and
rol
in
je
data16
movsb
mov
fwait
int
fstp
adc
lret
in
std
es
lock
fnstcw
test
lods
clc
scas
mov
lret
sbb
xlat
xchg
xor
repz
pop
jecxz
mov
sbb
rcr
adc
mov
push
push
movsb
outsl
gs
jnp
aaa
cmc
adc
stc
xchg
add
sbb
inc
jnp
adc
pop
movsl
push
pushf
mov
inc
js
push
mov
and
dec
xchg
jo
xchg
and
sbb
mov
mov
aam
cmpsb
ja
dec
pop
mov
in
std
insb
and
leave
jg
adc
and
loop
pop
sub
cmp
orl
iret
push
sbb
mov
pusha
sub
cmp
adc
xchg
xor
pop
adc
push
aas
pushf
pop
mov
add
mov
jbe
out
cli
addr16
cmpb
sub
mov
aad
mov
stc
cs
mov
ret
stos
push
pop
repnz
bound
loopne
aam
stc
cmc
pop
push
aaa
shll
jmp
dec
push
push
sahf
movl
call
test
pop
dec
cmp
inc
push
ds
dec
mov
and
pop
dec
test
cmpsl
mov
inc
mov
sub
mov
jbe
or
pop
dec
or
adc
xor
movsl
sbb
aad
jo
dec
inc
icebp
lods
imul
test
sub
test
sub
in
sbb
push
mov
adc
roll
or
pop
pop
adc
mov
push
jle
orb
and
call
xlat
add
dec
inc
clc
iret
pop
push
dec
lret
inc
xchg
mov
xor
stos
test
stc
scas
loope
sub
jnp
push
insl
aam
and
dec
dec
sub
test
inc
popf
push
xor
jle
sub
dec
js
mov
test
out
cmpsb
cmc
push
xlat
ffreep
ficomps
test
add
gs
divb
arpl
loopne
adc
adc
cli
lods
decl
mov
loopne
sbb
pop
clc
daa
scas
int3
movsl
das
cmpsb
lods
xchg
mov
fimuls
push
jl
and
cmpsl
int
cmp
cmp
mov
and
push
pop
inc
push
dec
std
add
aaa
jae
inc
sti
std
out
jb
cmpb
movsb
test
lret
pushf
mov
repnz
mov
data16
lock
lcall
and
mov
rolb
jg
xchg
call
enter
imul
jp
push
out
outsb
mov
movsb
cs
mov
lahf
test
hlt
rolb
shlb
addl
daa
or
cs
movsb
in
cmpb
jae
in
lods
les
mov
cmp
xchg
std
inc
ds
mov
ret
sti
dec
or
test
sbb
dec
leave
cwtl
sbb
adc
add
out
mov
mov
inc
xor
fisubrs
push
lcall
cld
pop
xchg
in
call
mov
aad
and
dec
push
sbb
jns
jp
xchg
rcl
out
adc
inc
mov
aas
or
mov
imul
loopne
imul
jbe
shll
loopne
jne
push
dec
or
push
inc
or
or
mov
jle
lods
inc
add
inc
dec
sbb
push
pop
xor
aad
addr16
mov
addb
out
loop
js
test
out
and
mov
pushf
jbe
aaa
shl
sbb
repnz
pop
outsb
cmp
addr16
iret
fistpll
imul
insl
fistl
ds
jae
dec
jnp
cmpsl
mov
mov
inc
mov
pusha
push
outsl
add
loop
std
cmp
pop
mov
or
insb
mov
daa
jecxz
enter
outsl
std
jbe
mov
jp
scas
mulb
ret
cmpsl
fwait
out
into
lret
pusha
fistl
adc
inc
sti
pushf
mov
mov
cltd
mov
push
fbld
aam
clc
cmpl
inc
ja
and
xchg
mov
adc
out
or
pop
mov
lods
jne
fiadds
add
daa
jae
arpl
dec
cmc
test
test
mov
cmp
pop
or
jns
mov
outsl
sbb
inc
mov
outsl
adc
pop
clc
ja
mov
jmp
mov
xor
add
pop
mov
jl
loop
cmp
cmp
pop
mov
lcall
cmpl
jmp
jno
add
xorb
aas
ret
out
mov
mov
pop
fcomps
jne
into
dec
rolb
lahf
jg
push
inc
lret
jb
pop
stos
int
dec
pop
and
stos
ret
mov
or
sahf
xorl
js
call
or
sti
xor
test
xor
or
inc
bound
or
in
pop
dec
or
daa
mov
mov
fimuls
int
push
inc
adc
repz
xor
adc
and
add
or
outsl
fmulp
dec
xchg
jae
sahf
mov
mov
leave
out
mov
push
jg
inc
sbb
mov
ja
add
stos
lock
sub
inc
daa
in
lock
push
sub
sub
mov
dec
adc
jo
inc
lods
loope
mov
nop
or
cmp
repnz
adc
or
shlb
cmpsb
aas
mov
cwtl
mov
cmp
daa
in
pop
add
fnstsw
dec
orps
mov
fists
loop
xlat
or
repz
cld
mov
xchg
adc
rcrb
mov
and
jge
push
and
xlat
inc
mov
mov
or
addr16
loop
push
cmp
andl
std
adc
mov
mov
repz
sub
nop
xchg
mov
loope
inc
push
dec
testb
xchg
or
sub
mov
enter
leave
outsl
xlat
mov
pushf
lds
adc
push
adc
out
pusha
ljmp
in
insb
lcall
repnz
pop
or
sub
inc
inc
mov
and
mov
pop
mulb
jno
shll
and
jl
sub
outsb
aaa
mov
xor
sub
mov
rorl
and
test
aam
popf
scas
int
mov
sbbb
inc
outsl
aad
inc
xchg
jno
sti
inc
jecxz
test
out
xor
push
inc
xor
mull
outsb
fs
nop
and
std
sbb
iret
out
xchg
ss
jnp
sub
mov
sub
ret
ja
inc
xor
orb
and
test
mov
js
fisubrs
out
dec
mov
inc
mov
in
into
mov
inc
mov
push
aam
add
pop
adc
or
mov
dec
imul
push
movsl
movsb
mov
add
add
stos
xor
out
enter
mov
adc
dec
shlb
mov
jg
jmp
lret
push
xchg
pop
inc
pop
test
pop
mov
add
xor
rclb
sub
es
loope
fdivl
lret
mov
cmp
sbb
xor
cmp
pop
fxch
mov
mov
mov
and
repz
xchg
sarl
mov
icebp
ret
and
je
dec
xchg
imul
js
call
dec
pusha
adcl
popa
sub
mov
dec
test
push
js
xlat
dec
in
movsb
xorl
xchg
jl
cmp
inc
sbb
cmpsb
xchg
sbb
mov
jo
outsb
jno
inc
cs
addr16
sbb
dec
mov
ret
popa
or
lods
dec
cmp
cld
and
adc
push
cld
xchg
clc
jb
push
stos
push
xor
sbb
mov
rcl
sub
leave
pop
add
cwtl
or
mov
outsl
shrl
int
sub
jnp
jecxz
bound
shlb
xor
lods
fs
lea
inc
imul
xchg
xchg
mov
cltd
pop
cmp
pusha
movsb
sub
jne
rol
fadd
push
pop
testb
ficoml
dec
push
fimuls
fldenv
out
and
add
and
xchg
sbb
inc
fsubrl
pop
sub
add
cs
mov
std
adc
out
lods
cltd
loope
sbb
sub
adc
pop
cs
movsb
push
mov
lahf
and
ds
xacquire
inc
lcall
in
imul
adc
sub
nop
pop
jge
pop
imul
add
lahf
pop
mov
sbb
fiaddl
imul
cld
jns
or
jmp
fldl
lcall
lea
les
loope
lret
sbbb
fmull
push
lret
xchg
nop
and
test
sti
add
fidivrs
xchg
pop
les
fs
out
repz
imul
pop
push
test
dec
pop
scas
lods
and
fmull
xchg
jp
loop
aaa
iret
loopne
add
add
lods
push
jno
or
gs
xchg
cmp
icebp
test
xchg
or
wbinvd
ss
cwtl
sub
notb
roll
jmp
sub
stc
mov
lods
ja
pop
add
push
inc
mov
ficoml
outsl
mov
mov
add
lock
mov
inc
dec
sub
test
push
add
pop
fcoml
subl
lods
leave
xor
addb
xor
movsl
lret
jmp
and
mov
sub
dec
add
imul
leave
push
popa
les
dec
xchg
pop
sbb
xchg
rorl
sbb
inc
mov
sahf
dec
mov
and
push
popa
bound
repz
cmc
jmp
push
jns
xor
cmp
pop
pop
sub
dec
sbb
xchg
out
sbb
pushf
nop
push
into
cltd
cltd
adc
mov
lods
enter
xor
push
sub
jecxz
test
add
scas
lahf
je
andl
subl
sub
pop
mov
in
test
add
movsl
stc
dec
cwtl
add
dec
mov
enter
adc
das
outsl
lcall
pop
leave
punpckhwd
popa
push
js
add
xchg
mov
ret
test
rcr
or
insb
mov
pop
int
pop
mov
jg
sti
lret
pop
psrld
sub
in
or
lods
jnp
pop
sbb
ficoml
bnd
xchg
into
loop
mov
mov
sahf
aas
mov
jmp
cmp
sub
leave
pop
popf
cmp
dec
or
fdivl
lea
out
adc
in
insb
fidivs
sub
jne
or
out
lea
into
or
or
ret
rcrb
test
mov
aas
aam
pop
dec
popa
mov
mov
sar
mov
jmp
add
cmp
jge
movsb
andb
enter
lahf
pop
nop
pop
mov
mov
arpl
mov
adc
jnp
in
cwtl
xor
enter
lret
ja
cltd
imul
mov
das
and
lods
pop
push
pop
sar
xor
je
push
pop
popa
into
cmp
fldenv
jbe
sahf
sub
dec
stos
inc
je
jae
in
daa
enter
sub
outsb
sub
adc
dec
cmc
cltd
jg
mov
fiadds
sub
outsb
and
adc
movsl
in
mov
ljmp
testl
lds
adc
enter
aas
je
loope
xor
push
fcomps
scas
in
imulb
mov
sub
jge
lock
fcoml
sub
das
or
hlt
cmp
call
je
jbe
and
adc
push
push
and
into
mov
mov
insb
fstpl
adc
cwtl
sub
mov
or
rorb
lock
lea
fcoms
or
push
sub
dec
lock
cld
jg
lcall
arpl
push
stos
add
push
dec
mov
cld
jnp
vcvtps2dq
add
pop
movsl
movsb
das
dec
push
push
mov
popf
les
ficoml
mov
ret
cmp
fidivl
or
xor
in
push
add
repz
idivl
xchg
data16
adc
test
rorl
or
jle
pop
mov
stos
mov
add
sbb
in
std
jp
sbb
loopne
jne
jns
push
xor
cmp
loop
aaa
test
push
in
ret
cltd
inc
or
xor
scas
lods
fadds
popf
xchg
dec
insl
push
ret
add
divl
dec
lods
dec
in
daa
add
inc
and
pop
sarl
testl
and
pop
pusha
mov
fidivrl
cmp
jb
xor
rol
jne
mov
dec
add
outsl
mov
xchg
xchg
into
inc
mov
pop
cmp
pushf
sbb
sbb
sbb
cmp
lock
in
push
jge
pop
dec
mov
and
iret
aam
lcall
dec
stos
into
in
fs
mov
ret
sbb
and
mov
out
cs
lods
rcll
push
movsb
addr16
fs
mov
insb
inc
dec
sahf
jb
dec
icebp
test
das
repz
pop
enter
mov
lcall
sub
in
xchg
mov
inc
mov
fisttps
je
arpl
aad
popf
mov
push
int
xor
adc
xor
out
mov
mov
mov
fildl
sub
pop
cltd
jo
pop
int
cmp
cmp
jne
call
rdpmc
ficomps
jbe
imul
push
pusha
dec
lods
mov
inc
dec
sbb
dec
nop
cmp
pushf
cs
inc
dec
mov
mov
lcall
adc
call
sub
pop
icebp
xchg
and
outsb
jmp
sub
mov
int3
mov
fs
nop
jnp
mov
loopne
rcll
cli
sub
leave
ds
push
push
shll
sub
movsb
push
push
push
pushl
mov
cmp
push
push
popf
pop
daa
lods
ss
push
iret
repz
add
out
sub
sub
ja
inc
cltd
ficompl
pop
pusha
bound
das
add
mov
xor
sub
jne
dec
cmc
or
sub
inc
leave
fsts
push
inc
daa
ljmp
idivl
cmp
mov
sbb
jle
andl
call
adc
data16
ror
addr16
xor
cmp
xorb
jl
sbb
or
ret
sbb
and
jmp
fwait
add
leave
sub
pop
in
sbb
push
sbb
or
fistpll
push
ds
jo
dec
push
mov
fsubl
orb
sti
adcl
mov
stc
jl
cmpsb
inc
mov
je
cld
loope
jp
push
jnp
cltd
std
xchg
fwait
mov
push
xor
test
sarb
imul
div
lods
out
les
das
les
xor
sar
test
cmpsl
jecxz
xor
push
xchg
pop
out
adc
xor
sbbl
js
inc
in
or
mov
fwait
mov
sti
sbb
or
out
cld
and
push
jbe
cli
shrb
insl
js
push
xchg
ficomps
or
and
daa
jns
iret
push
out
loope
sbb
sarb
insl
sarb
in
mov
lock
int3
mov
aaa
or
js
lods
adc
icebp
aas
sub
adc
adc
xor
cmpsb
pushf
sub
mov
push
fnstcw
int3
jmp
jmp
mov
frstor
pop
iret
aam
call
divb
insb
pop
fildl
mov
sub
xchg
xchg
dec
fwait
in
xchg
lods
jne
push
pop
xchg
aam
fwait
xlat
jle
out
nop
adc
js
add
inc
or
fsubs
popf
adc
mov
filds
dec
dec
push
inc
xor
pushf
dec
sub
mov
imul
test
mov
stc
xlat
into
scas
mov
or
jbe
mov
xlat
test
and
cmp
loop
sbb
pop
ljmp
adc
sub
aad
test
jp
push
jnp
jno
cmpsl
cltd
jmp
mov
in
stc
fnstsw
push
mov
roll
aas
cmpsl
pop
inc
cmp
and
shll
into
out
pop
in
rcrb
jg
sbb
gs
mov
cmpsb
fistps
xchg
out
xor
pop
dec
xor
xor
add
push
pop
push
xor
sbb
mov
pushf
push
pusha
inc
mov
xchg
dec
sub
loope
push
test
out
fisttpl
sub
scas
pop
jno,pn
rsm
or
cmp
test
ret
sub
es
movsb
push
xchg
mov
call
loope
and
ljmp
in
es
aad
xchg
insl
mov
movsl
in
mov
cmpsb
test
les
subl
arpl
dec
lea
sbb
jle
mov
ret
gs
adc
mov
adc
dec
xchg
push
mov
bound
int
in
fildll
xor
jge
pop
popa
adc
xchg
fstp
shrl
insl
lds
pop
push
cltd
mov
call
rorl
pop
stos
mov
lret
mov
movsl
mov
add
add
cli
jb
dec
push
cmp
je
sbb
dec
inc
sahf
mov
repz
mov
cltd
and
pushf
mov
test
jns
mov
notb
push
ret
mov
jb
shlb
sub
shll
aam
pop
xchg
mov
enter
mov
and
faddl
sub
mull
daa
aaa
lock
movb
push
xchg
push
xchg
rcl
pop
mov
nop
das
and
lret
cmp
jno
push
add
lods
or
rcrl
cmpl
push
pop
out
xchg
jbe
cmpsl
dec
insb
cmp
ss
mov
sbb
out
mov
aad
xor
or
adc
xor
jno
pop
xchg
and
adc
sub
pop
pusha
or
movsb
push
in
leave
and
lock
das
aaa
test
push
daa
push
push
inc
leave
mov
push
inc
hlt
fcmovbe
inc
cmpsl
sbb
mov
stos
sti
test
mov
jp
scas
mov
inc
addr16
es
push
adc
mov
push
lea
pop
sbb
out
sar
dec
insb
loopne
test
orl
insb
jle
test
lret
cmp
xlat
stos
xorb
ljmp
nop
mov
clc
fcmovnb
cmpb
jle
add
xchg
xor
add
mov
push
es
mov
test
cmp
adc
test
or
jl
mov
fstps
cmp
mov
cmp
push
xor
int3
add
ss
stc
pop
lret
sub
adc
sahf
dec
mov
xchg
bound
sub
loope
sbb
mov
mov
cli
sbb
iret
add
and
mov
rorl
inc
push
ljmp
push
mov
jo
mov
lahf
mov
ror
dec
rolb
jmp
mov
push
fwait
xchg
push
push
jle
lahf
fucomi
scas
jnp
cltd
loope
pusha
loope
shll
fldl2t
mov
or
add
push
mov
sarw
stos
pop
test
push
test
push
dec
outsb
imul
add
xor
clc
cmpb
inc
sarb
jle
xchg
pop
xor
and
in
arpl
xchg
adc
out
jge
fdivl
popf
xchg
adc
aam
bound
adc
aam
mov
mov
shrb
jle
mov
pop
push
sbb
sub
and
das
repnz
xor
ljmp
mov
je
test
push
xor
hlt
repz
adc
frstor
fadds
out
mov
sub
es
in
lods
test
pop
push
and
jge
or
data16
test
adc
sbb
shrb
cs
mov
lea
xlat
addb
test
and
jae
sub
mov
and
and
dec
adc
or
cmp
sahf
enter
fs
pmaxub
xchg
into
inc
sbb
push
scas
jb
repz
push
inc
push
gs
fstps
push
cmp
and
sub
mov
lds
sbb
xlat
loop
andb
mov
inc
xlat
gs
sbb
lret
xor
pop
ljmp
inc
pop
pop
jg
xchg
cltd
xchg
cmp
dec
dec
std
cmc
push
mov
pop
inc
loope
jns
push
lods
call
aas
mov
movsb
enter
imul
mov
mov
shrb
mov
scas
out
int
push
mov
loope
inc
push
gs
dec
in
lret
and
ud2
mov
loopne
call
cld
add
out
fdivs
insb
movsb
push
es
xchg
xor
lret
out
test
pop
and
fwait
ret
mov
test
movsb
call
arpl
jge
push
fstl
dec
sbb
mov
push
jmp
call
push
lock
mov
mov
jb
xchg
add
pop
inc
aad
lock
imul
mov
and
cmp
cmp
add
aaa
cltd
sbb
imul
cmp
mov
shlb
call
bound
outsb
lahf
xchg
xor
les
pop
imul
ret
lods
std
or
loope
xor
push
jbe
cs
fsubl
and
rcrb
mov
shlb
mov
sbb
loop
mov
pusha
adc
stos
test
cmp
ret
ret
rorb
jle
lods
xor
addl
sub
or
mov
mov
mov
mov
adc
push
mov
adc
dec
dec
mov
cmpsb
adc
cmc
repz
add
clc
mov
inc
popa
jae
push
loop
pop
cs
jmp
rolb
jmp
sahf
xor
sbb
aam
fildll
mull
dec
int3
bound
add
xchg
add
lret
insl
subb
shlb
icebp
mov
scas
aam
mov
mov
adc
cltd
jmp
lock
push
mov
fwait
jno
enter
mov
inc
xchg
sbb
xchg
adc
mov
xchg
sub
test
pusha
or
and
pusha
dec
xchg
inc
mov
sbb
jg
xor
repnz
add
push
dec
arpl
push
aad
mov
xchg
mov
add
sarb
jecxz
cmpsl
repnz
jns
ficoms
jg
out
xor
adc
push
dec
push
pop
xchg
ret
shrb
outsb
scas
or
out
mov
sbb
sub
and
adc
popf
cmpb
sub
or
xor
mov
cmp
xchg
in
call
fldl
cld
stos
rcll
push
leave
mov
aaa
aaa
cmp
inc
push
fcoml
push
insl
pop
call
aam
jp
mov
shrl
and
xchg
push
mov
aas
xor
pop
add
adc
add
add
pop
cli
lret
xor
xchg
fs
fistps
dec
push
add
pop
mov
pusha
dec
jmp
push
dec
push
outsb
insl
aam
stc
mov
cmp
mov
mov
dec
pop
test
enter
shll
shr
and
adc
mov
cmp
rorb
cmpb
pop
ss
pop
cmp
cmova
or
movsl
inc
bound
adc
xchg
insl
loopne
fsub
xchg
rcrl
mov
sbb
mov
xchg
pushf
add
mov
pop
pop
jl
mov
mov
sarl
xchg
dec
lods
mov
push
sbb
lea
jns
stos
mov
mov
dec
or
jae
jns
fnstenv
xchg
mov
xchg
mov
add
mov
movsb
std
je
pop
nop
mov
lcall
jp
rclb
jbe
das
xor
push
lods
fldenv
cmc
cmp
test
sahf
ljmp
cmp
jg
xchg
xor
rcll
and
jg
aaa
dec
bound
lds
cmpsl
neg
jecxz
sbb
lret
push
data16
jmp
lds
inc
jl
outsb
in
fmull
jno
insb
sbb
aaa
cmp
mov
stos
imul
lods
sub
add
cmp
xchg
shrb
inc
ja
sbb
iret
mov
jbe
mov
gs
pushf
xor
push
push
sub
mov
outsb
fmuls
movsb
jl
mov
cli
icebp
cmp
das
arpl
test
fcmovu
push
fisubs
fnstcw
int3
inc
xor
dec
dec
cs
dec
jmp
mov
add
push
mov
sbbl
push
scas
mov
shll
loop
les
popf
js
add
xor
popa
pop
ror
mov
add
lods
rcl
jbe
adc
in
mov
mov
mov
add
movsb
cmc
ds
dec
pop
pop
jge
and
pop
cmpsb
dec
pop
and
xor
das
aas
stos
cmp
sahf
sub
adc
mov
mov
mov
add
divb
add
cs
mul
cwtl
pop
cld
repz
shl
inc
xchg
and
push
int3
xor
push
pop
pop
jle
sub
lcall
dec
mov
lock
push
stc
stos
ret
mov
fistl
mov
bound
cmp
jne
xchg
xchg
movsb
scas
cld
add
enter
inc
fstps
filds
lcall
dec
sub
ljmp
pop
mov
cltd
push
faddl
jnp
mov
mov
popf
and
int
xchg
mov
push
mov
xlat
nop
cli
inc
push
dec
pop
and
jge
cld
jb
or
out
pop
leave
xor
mov
jnp
and
and
mov
in
inc
xchg
push
push
xorl
pop
pop
adc
dec
dec
cs
pop
cmp
adc
inc
out
out
shll
push
push
xchg
lahf
stc
push
jne
mov
pop
mov
mov
lods
push
es
gs
cmp
push
mov
cs
mov
popa
cmp
data16
stos
fstl
jp
lds
add
pop
xlat
lret
loop
dec
cmp
push
adc
es
adc
mov
repnz
cmc
stc
xor
loope
daa
pop
and
or
out
cmp
adc
xor
out
inc
jb
xor
es
dec
mov
jbe
adc
mov
stos
cmc
loop
pushf
imul
es
push
out
dec
into
nop
dec
outsb
lcall
enter
dec
vmwrite
into
lea
ljmp
push
xchg
sbb
lea
sub
pop
in
test
dec
movsl
push
fisttps
ret
jo
out
push
loopne
bound
mov
shrl
lahf
pushf
pop
pop
sub
xchg
adc
testb
cmp
adcl
push
ljmp
shl
jle
popf
pop
rcrb
pop
adc
mov
jbe
nop
in
adc
mov
lahf
repz
inc
cmovge
mov
jbe
es
setae
pop
xor
push
icebp
add
pop
jle
cmp
dec
sub
sar
mov
jae
cmp
adc
mov
cli
sti
jne
mov
in
or
jbe
mov
add
jbe
push
std
aad
imul
jp
arpl
fcompl
aam
xlat
shrl
in
mov
sbb
and
xchg
cmpb
aas
pop
loope
popa
lea
xor
imul
xchg
roll
addr16
loope
add
push
call
mov
je
push
mov
pop
jnp
add
push
pop
mov
dec
and
addr16
js
mov
or
ret
adc
and
sbb
adcl
xchg
out
leave
sbb
dec
shr
cmp
lds
push
push
stc
sbb
mov
aam
lret
add
push
mov
add
call
sub
outsb
jg
test
mov
mov
and
sub
stos
test
sbbl
cmp
outsl
negb
cmp
sub
xchg
cmp
loopne
sub
lss
loope
add
dec
imul
les
shrb
mov
std
inc
imul
lods
out
or
call
and
out
or
int
ljmp
frstor
gs
jle
jle
cmp
lods
push
int3
adc
das
push
sbb
aaa
testl
or
loopne
dec
stos
push
or
or
outsb
mov
jp
int3
dec
mov
xor
jo
jg
mov
mov
popa
dec
cli
es
dec
jle
sbb
js
decl
jmp
and
adc
cwtl
aam
mov
xchg
lods
ficoms
popf
sbb
fisubrl
std
aad
xchg
push
dec
sbb
mov
push
jbe
jp
cltd
int
mov
xor
inc
out
clc
xor
xor
rcll
fwait
sbb
mov
lahf
mov
ljmp
aaa
cmpsl
in
lods
pop
jle
mov
jp
sbb
in
js
das
or
or
pop
mov
clc
inc
rcrb
aas
out
clc
pop
jae
sbb
cmpsl
cmp
std
orl
fwait
in
jo
and
xchg
inc
jnp
imul
cmpsl
mov
or
pop
sbb
daa
mov
cld
jno
cmc
inc
mov
mov
out
dec
js
sub
loop
pop
xor
test
pop
mov
inc
mov
test
pop
sbb
daa
hlt
jmp
mov
jmp
jge
mov
cmp
jne
rcrb
out
and
inc
adc
pop
push
push
in
inc
adc
push
inc
xchg
xchg
and
imull
pop
dec
outsl
into
xchg
pusha
bound
int3
and
sub
fnstcw
mov
cmp
adc
negl
jle
andb
xchg
fisttpl
les
fisubl
sti
arpl
dec
ret
lock
lret
out
outsl
jl
clc
mov
adc
adc
mov
pop
divb
push
mov
push
push
notb
jge
das
jb
loop
pop
sbb
jle
sbb
lahf
or
add
out
leave
jb
sub
xor
sbb
aas
push
sahf
cs
pop
or
pop
or
fcomps
lods
mov
clc
sub
inc
in
or
and
jo
jp
pop
enter
add
mov
inc
mov
aaa
setl
mov
mov
mov
add
mov
imul
mov
shlb
pop
je
pop
mov
int3
sbb
add
jno
std
test
hlt
and
ljmp
pushl
mov
xor
or
ljmp
sbb
push
pop
lea
sub
or
lahf
xor
cld
mov
fs
sbb
add
cmp
or
pop
aas
cltd
lcall
dec
cmc
add
mov
sub
enter
out
in
lods
push
mov
cmp
roll
sub
data16
push
rclb
int
sub
out
test
adc
js
rcrb
stc
adc
sbb
mov
icebp
aam
push
mov
and
sub
repz
mov
pop
push
pusha
and
jge
bound
jnp
repz
and
mov
enter
jbe
add
testb
jecxz
cmp
xchg
jae
test
repz
enter
inc
stos
xchg
mov
sub
mov
je
cltd
popa
test
mov
or
rcll
testl
dec
fcomi
mov
repnz
icebp
push
pop
ss
mov
cmpsl
sbb
fdivl
mov
cmp
xor
dec
xchg
mov
or
mov
sbb
mov
dec
fldt
dec
and
pop
xchg
xchg
hlt
icebp
dec
mov
loope
or
push
divl
in
dec
int3
ljmp
cmpsl
xor
jno
adc
pop
jne
cmpb
pop
and
push
pusha
inc
jge
push
lret
cmp
aaa
or
or
sub
xor
jnp
ret
lods
and
mov
pop
loop
adc
jp
xchg
xchg
repz
pop
bound
push
sub
cli
mov
arpl
xchg
shld
das
idiv
jle
cmp
lret
out
xchg
pop
hlt
add
loop
shll
lret
pop
push
fimuls
push
cmpsl
mov
push
mov
xchg
mov
leave
push
fcmovnbe
lret
ret
jmp
xor
daa
xlat
cmp
push
sub
xchg
mov
xchg
pop
cltd
and
repnz
push
dec
jg
mov
push
sbb
ljmp
push
push
cwtl
add
outsb
je
dec
ret
enter
in
idiv
sbb
inc
pop
cmpsl
mov
daa
mov
inc
or
inc
test
test
xchg
popl
adcb
adc
dec
cmpsb
std
scas
pop
pusha
push
mov
pop
imull
fstp
jo
jns
push
xchg
outsl
mov
mov
mov
pop
push
add
data16
cmpsb
repnz
adc
push
jb
inc
push
mov
loopne
jb
xor
and
scas
mov
sarl
add
jno
lahf
jecxz
arpl
jg
xchg
cmovle
dec
inc
lret
xchg
stc
sbb
pushf
hlt
xchg
xchg
adc
xchg
andb
dec
pop
fcomip
test
jecxz
jecxz
inc
inc
adc
and
jg
daa
fistpll
adcl
dec
insb
or
jne
and
pop
inc
les
andb
lret
dec
cwtl
xor
push
add
mov
mov
mov
lcall
dec
dec
lahf
ret
sbb
cmp
pop
outsb
les
hlt
inc
out
fs
sbb
cmc
cmp
roll
cmp
stos
push
and
daa
test
inc
adc
insb
cmp
idivl
mov
add
int3
push
inc
jl
inc
fadds
lret
jnp
cmp
fcom
sub
push
cmp
subb
scas
cltd
inc
jecxz
sbb
dec
in
insb
jne
push
cmpsw
leave
inc
jg
arpl
movsb
sbb
mov
in
pop
flds
mov
xor
jle
lcall
hlt
aam
inc
enter
clc
xchg
ret
lcall
inc
cmp
pop
pushl
cmp
gs
sbb
inc
shrl
push
fwait
sub
cs
lods
out
cltd
add
enter
nop
adc
xchg
push
in
mov
mov
sub
jne
add
xchg
jp
bnd
sahf
fistpl
push
push
repnz
xchg
bound
mov
fisubs
int3
adc
and
sbb
lods
adc
mov
push
dec
or
inc
jne
scas
pop
cmpl
jbe
adc
jp
cmp
xor
xchg
pop
idiv
inc
mov
jge
outsb
push
mov
mov
je
fdivr
aaa
stos
cwtl
push
mov
cld
jnp
jne
fmul
push
dec
pop
shl
rorl
lcall
pop
ljmp
fwait
cmp
mov
mov
inc
pusha
inc
inc
mov
jg
push
mov
pop
cmp
mov
cli
cltd
sub
aad
jne
fisttps
add
jp
cmp
jecxz
popf
mov
cmc
inc
push
sbb
add
aad
push
fs
sbb
jmp
xchg
xchg
sahf
stos
pop
cs
add
inc
test
dec
stos
jae
or
dec
and
test
add
pop
test
inc
nop
aam
aaa
movsl
jne
aad
nop
push
pop
mov
imul
pxor
cld
dec
iret
adc
popa
inc
sbb
rolb
push
stc
adc
cmc
add
inc
push
je
pushf
loope
xchg
rcrl
xor
sahf
adc
add
mov
jmp
test
test
pop
aaa
stc
lcall
dec
aam
mov
stos
jmp
adc
hlt
xor
jg
xchg
jl
aam
rorb
imul
bound
out
das
insb
daa
popl
adc
dec
rolb
cmp
in
and
stc
in
cmp
xor
cmpsb
sbb
sar
not
insl
cltd
or
sub
stos
adc
or
fcoml
jb
adc
and
mov
dec
movl
xor
in
in
xchg
sub
add
dec
mov
hlt
mov
cmp
inc
pop
xchg
jg
insl
clc
subl
mov
sbbl
out
cmpsb
add
and
in
fstl
mov
and
jl
jns,pt
mov
imul
das
cwtl
jbe
popf
stos
sar
xlat
int
jp
fsubr
filds
mov
gs
cwtl
les
stos
movsl
xchg
mov
and
insl
or
push
call
jns
xor
jae
sti
pusha
jo
popf
pushf
push
aad
sbb
stos
lret
xchg
push
lea
clc
es
jae
mov
fs
jge
mov
sbb
xchg
out
sbb
je
es
xchg
pop
add
mov
mov
jae
sub
cmp
and
push
jb
jo
add
cmpsl
mov
sbb
sub
xchg
mov
jmp
call
scas
lods
pop
icebp
mov
iret
sahf
scas
xor
xchg
and
loop
incl
pop
in
lcall
inc
dec
sub
sahf
js
jge
lret
test
fsts
cmpsb
in
std
inc
jmp
add
xchg
push
sbb
cmc
inc
nop
xchg
sub
sbb
push
add
push
push
jns
or
popa
mov
ret
cmp
and
les
icebp
push
mov
cmp
sbb
lahf
dec
sbb
push
xchg
jmp
jo
jne
inc
add
leave
add
mov
adc
mov
xchg
in
stc
divl
push
es
sub
out
mov
je
ret
push
lods
iret
pop
xchg
sti
leave
call
push
push
add
loop
ret
leave
insb
xlat
dec
dec
and
xchg
mov
dec
jns
js
cmpsb
out
gs
pop
nop
andl
std
or
data16
sbb
jns
ficomps
and
test
movsl
sub
inc
pop
insl
leave
cmp
sub
inc
fsub
out
cmp
js
cmp
xchg
pop
sub
mov
insb
arpl
xchg
sub
test
call
dec
mov
popa
leave
mov
aaa
push
test
adc
cs
jns
adc
push
shll
inc
dec
pop
lods
push
push
and
negb
daa
or
sub
push
xor
mov
icebp
push
addl
addr16
sub
jo
xor
mov
sbb
dec
pop
stos
out
arpl
xchg
jecxz
inc
add
daa
outsl
lods
xchg
sub
bound
arpl
pop
xchg
ss
fidivl
push
adc
and
fwait
repnz
sub
ds
mov
sbb
ret
mov
pop
les
xchg
shrl
mov
lea
mov
addps
adc
or
shll
xor
adc
inc
push
mov
pop
dec
sarl
scas
shl
addr16
ret
scas
mov
test
mov
stos
and
adc
pusha
pop
lret
pop
dec
mov
ljmp
cmp
xor
inc
icebp
call
lods
lds
xchg
leave
xchg
js
cwtl
add
xchg
ja
jae
hlt
fsts
push
test
jge
insb
in
xchg
loopne
stos
and
je
dec
cmp
arpl
mov
xchg
lods
sub
dec
in
mov
imul
and
sar
jnp
movsl
add
in
inc
and
sub
lea
lods
pop
add
xchg
push
lods
cmp
fbstp
fcompl
sbb
js
popf
pushf
add
cmp
adc
adc
lods
xlat
aam
dec
mov
and
jne
fiaddl
outsb
pop
xchg
jl
jmp
mov
orl
push
xor
stc
xor
push
jae
dec
cmc
mov
xor
jnp
pop
sub
arpl
jg
jle
mov
mov
fcmove
mov
push
cltd
jno
dec
jnp
and
and
stos
ja
jne
ds
outsl
hlt
das
in
mov
fsubrl
test
add
sbb
jmp
nop
ret
or
pop
ret
mov
movsb
xor
sub
es
gs
xor
cs
icebp
xor
xlat
cmp
ret
dec
dec
loopne
imul
jns
fstps
sahf
push
mov
xchg
add
pusha
jecxz
rol
movsl
xor
andl
mov
inc
mov
mov
cmp
dec
fs
aas
fdiv
nop
std
mov
mov
jp
movsb
inc
imul
adc
test
int3
in
xchg
mov
icebp
test
sbb
pusha
negl
enter
fadd
lds
push
push
sub
jecxz
dec
and
jb
out
add
xchg
cltd
lods
cwtl
dec
cmp
movsb
and
test
std
sub
es
mov
adc
inc
aam
test
scas
out
inc
mov
test
sbb
inc
mov
js
imul
mov
and
addr16
mov
sbb
sbb
mov
xchg
sti
lods
jbe
jb
in
push
adc
int3
xchg
shl
mov
push
mov
in
cmpsl
jle
push
pop
jge
pop
mov
dec
mov
cmp
inc
push
or
fs
dec
and
cmp
jb
adc
xorl
movsl
and
test
jo
sub
int3
inc
orb
cmpsl
in
insl
call
hlt
cmp
and
ficoms
mov
cmp
aam
aas
lods
repnz
mov
add
and
adcb
orb
nop
cmp
adc
inc
loope
push
cmpsb
lcall
xchg
incl
nop
mov
inc
or
add
data16
lahf
jno
push
arpl
dec
mov
in
sub
shlb
or
sub
or
insl
or
out
arpl
lret
inc
jmp
fmulp
push
mov
xor
xor
xor
ds
dec
insl
rsm
push
push
ljmp
lock
dec
movsb
es
dec
push
shlb
arpl
lods
sti
in
dec
and
xor
outsl
lcall
jo
fsubs
push
into
sbb
adc
ja
push
je
fsubrs
xor
dec
enter
or
and
mov
mov
mov
outsb
cmp
out
stc
xchg
adc
jg
test
sub
sub
cmp
add
out
xor
pop
gs
sbbl
xchg
loopne
out
pop
or
pushf
mov
pop
sbb
cmpsl
outsb
mov
cs
je
into
dec
hlt
xlat
std
xchg
adc
test
cmp
lahf
sahf
sub
mov
ds
icebp
push
pop
add
dec
xor
push
xchg
clc
lea
je
mov
fcomip
addr16
lret
jl
add
and
and
xchg
mov
negl
mov
and
jecxz
scas
fwait
mov
pop
xor
xchg
adc
in
loop
xchg
subb
jmp
lods
pusha
lcall
adc
mov
imul
lods
lock
out
out
cmpsl
dec
jle
adc
jo
je
iret
shlb
int
cmp
mov
sbb
mov
test
lret
cmpsb
sub
outsb
test
sti
sahf
inc
popf
mov
push
mov
pop
or
sbbl
in
adc
jbe
idivb
push
loop
test
call
and
mov
push
fwait
pusha
test
push
jg
mov
jns
mov
rclb
in
iret
jg
jmp
scas
lods
mov
push
sub
inc
imul
repz
mov
lret
xor
pusha
push
je
or
outsb
cmc
imul
adc
mov
clc
mov
fisttpll
icebp
mov
push
dec
sbb
imul
add
dec
scas
jle
adc
push
pusha
das
inc
pop
test
test
pop
and
pop
push
and
inc
dec
jle,pn
push
xchg
scas
pop
push
andps
inc
int3
repz
ja
sub
jo
imul
scas
push
adc
lcall
scas
lret
fiadds
lcall
fnstsw
aam
rcl
adc
sub
movsb
xchg
out
mov
push
fs
lret
jae
mov
negl
cmp
push
mov
sbb
daa
sbb
mov
inc
add
sub
test
sti
clc
into
in
xchg
xor
lods
push
stos
fwait
sbb
dec
fidivs
fwait
shlb
jecxz
or
inc
je
cmp
gs
cmpsl
push
inc
jl
jg
lcall
mov
stos
addr16
aad
push
int3
popf
push
int
int3
movsb
add
mov
and
pop
andps
aad
lret
cmp
comiss
xchg
roll
cmpl
xchg
enter
shr
pop
popa
jg
dec
out
push
dec
lods
mov
push
int3
adc
push
jecxz
add
mov
aas
xchg
push
sbb
pop
add
xor
in
addb
inc
adcb
scas
cmpsl
mov
pop
mov
add
gs
push
fisubs
sbb
pop
adc
push
lea
xchg
or
jo
xchg
lcall
pop
or
inc
lods
in
leave
jb
lock
jns
pop
out
mov
and
imulb
loopne
les
outsl
fisubrl
mov
xor
notl
push
clc
cmp
incl
ljmp
rcl
cld
das
mov
adc
das
add
andb
mov
pop
or
dec
and
jg
ret
inc
jo
cmp
stc
and
pop
imul
mov
mov
cmp
xor
and
aam
fwait
ret
xor
lret
jno
mov
add
jo
add
xorb
sahf
pop
pop
xor
je
sahf
jg
fs
in
xchg
das
es
nop
sti
add
cmpsb
in
jne
out
ds
ljmp
inc
stc
in
dec
cltd
negl
cld
dec
repnz
out
loopne
xchg
pop
out
in
dec
out
adc
dec
sti
xchg
mov
lods
neg
cmc
sub
jns
pusha
xor
pop
ds
sbb
add
fwait
insl
inc
cmpl
cmp
into
cmp
inc
cmp
add
loop
xor
or
inc
jp
push
mov
jae
les
jnp
cmpsl
sub
adc
mov
icebp
mov
xchg
mov
pop
outsb
cmp
push
adc
loopne
xor
jge
fwait
test
sarb
aas
mov
push
jmp
add
arpl
dec
mov
les
andl
cmpsl
outsb
stc
jle
jecxz
pop
mov
int
jge
subb
hlt
push
jns
pusha
sbb
sub
sbb
cs
mov
test
popa
jo
out
ss
push
loop
inc
add
jnp
mov
cld
fcompl
enter
out
movsb
ss
aaa
fcoml
int
xlat
lods
jnp
xor
jge
daa
mov
ficoms
cmp
adc
test
cmpsb
in
dec
sbb
sbb
pop
sub
xor
jmp
sti
into
push
les
inc
out
jp
xor
orb
aas
push
xchg
and
test
notl
arpl
les
fisubrl
popf
ret
jecxz
pop
jp
stos
icebp
mov
int
mov
adc
cli
sub
loopne
push
jns
dec
mov
lods
or
cmp
jns
xor
mov
inc
adc
adc
out
jmp
xchg
fldt
push
mov
mov
dec
add
scas
fmul
jmp
mov
cwtl
cmp
mov
xchg
leave
stos
iret
xchg
mov
xor
jbe
imul
icebp
sub
jge
mov
push
das
leave
add
push
push
addr16
push
jge
jmp
ja
sub
ret
dec
stc
leave
out
sbb
sub
lds
pusha
adcl
mov
jb
push
mov
repz
lahf
push
lcall
pop
rclb
insb
and
mov
les
or
pop
mov
iret
cmp
bswap
push
ja
jge
jecxz
mov
xchg
jmp
jecxz
adcl
fldt
rorl
stc
inc
pop
inc
subb
iret
daa
loopne
call
ret
xor
add
jg,pt
adc
push
mov
inc
addr16
pop
addl
roll
in
iret
popa
cld
inc
lods
sub
enter
jne
adc
dec
enter
outsl
into
ljmp
pop
mov
rolb
clc
add
clc
xchg
or
dec
repz
xchg
jmp
jmp
push
mov
or
ja
and
arpl
xchg
adc
sbb
lea
lock
mov
enter
int
pop
insb
ret
out
ret
iret
add
jp
out
cld
xchg
push
push
or
cmp
daa
jbe
adc
enter
cs
xchg
add
shll
pop
rclb
inc
dec
bound
jg
and
inc
pop
mov
call
push
inc
nop
cmp
push
or
in
or
or
jno
ljmp
xchg
arpl
dec
inc
int
popa
icebp
out
es
sbb
or
adc
fs
je
cmp
jp
rolb
outsl
loopne
jne
cmc
jns
mov
out
dec
jle
jl
xchg
sbb
shl
xor
jne
loop
add
iret
fwait
jp
les
call
ja
ja
popf
sti
std
mov
xchg
xchg
loop
adc
leave
fsts
imulb
popf
pop
out
sub
push
cmp
pop
adc
jae
loop
push
cmpsl
mov
call
ficoms
subl
pop
imul
inc
inc
negb
inc
sbb
arpl
lret
mov
lods
jl
repnz
gs
and
loop
jae
mov
stos
hlt
dec
mov
std
mov
mov
daa
test
cmc
and
imul
sub
inc
xchg
out
data16
mov
cmp
mov
xchg
aaa
xor
cs
scas
imul
mov
negb
popa
stos
push
and
cld
mov
test
xor
lret
int
into
imul
stos
fistpll
fwait
fwait
stos
sub
jno
test
mov
adc
push
jp
add
jge
sub
jae
adc
test
daa
xor
cmc
fwait
mov
lret
icebp
lods
bnd
mov
out
dec
mov
mov
movsb
into
call
xchg
inc
subl
int
mov
repnz
testl
push
cwtl
cmp
dec
movsb
adc
adcb
cltd
repnz
outsl
bound
stc
xchg
inc
iret
movsb
and
or
or
add
push
lods
icebp
xlat
push
daa
jns
repnz
fs
out
lds
xchg
mov
int3
scas
mov
dec
xchg
push
les
mov
fwait
cmp
fcomp
outsb
aas
mov
clc
sbb
dec
cmp
push
loope
cmpsb
push
clc
aaa
jl
adc
popa
in
idivl
cli
scas
addr16
test
repnz
add
mov
lock
xchg
rcrl
pop
push
jmp
or
jg
adcb
and
out
mov
xchg
push
xchg
jp
das
idivb
pop
mov
aas
scas
vshufps
push
lea
hlt
daa
jno
push
jle
add
scas
loop
sbb
je
push
frstor
inc
inc
adc
mov
fidivrs
arpl
jl
sbb
outsb
xchg
cmp
loope
ror
cmp
std
mull
mov
ffree
mov
jl
add
and
out
js
popf
add
sbb
test
push
gs
mov
mov
adc
xchg
cmpsl
fisubrs
scas
rcrl
mov
sbb
dec
sub
jne
test
fiaddl
jne
scas
dec
xor
push
adc
cli
setns
imul
dec
mov
cmp
sub
out
mov
sub
enter
lret
jae
push
cld
hlt
aaa
stos
aam
aad
sti
fisttpl
jae
lret
js
gs
add
fwait
xor
mov
mov
push
xchg
mov
roll
pop
idivl
pop
xchg
dec
aam
and
aam
stos
mov
popf
insb
roll
enter
cmp
push
in
push
jle
fistpll
cmc
sbb
test
mov
or
scas
pop
rorl
out
mov
fadds
fstpl
sub
repz
pop
loopne
test
ljmp
jle
add
mov
in
in
jae
roll
cs
clc
fbstp
iret
pusha
sbb
or
push
pusha
sbb
sbb
pop
sbb
addl
xchg
pop
jp
imul
xchg
lea
out
or
int3
mov
inc
pushf
cmp
xchg
ja
cmovle
lods
rorl
xor
mov
nop
inc
jge
addr16
int
mov
cmp
mov
inc
lcall
jg
cmp
xor
addb
or
and
xchg
bound
movsl
mov
test
xchg
pop
ds
mov
xor
inc
data16
cmp
or
sub
jle
and
loopne
inc
jmp
jns
xchg
out
imul
pushf
cli
loope
inc
jae
push
jg
add
mov
enter
loop
bound
and
jne
or
sbb
and
mov
mov
mov
mov
add
in
mov
je
pop
xor
subb
rcll
dec
sub
jge
iret
jns
rcl
xchg
sahf
orb
push
lahf
lret
ror
jmp
cmpsb
loop
shlb
cwtl
push
icebp
xchg
jb
lret
arpl
sarb
lods
sbb
int
mov
dec
ret
dec
cmc
xor
aaa
jo
pop
dec
jg
cmp
sub
xor
xchg
mov
pushf
sbb
mov
je
mov
and
inc
inc
popa
int
outsl
jne
xchg
cwtl
mov
jle
mov
lret
adc
rcrl
mov
iret
xor
or
xor
es
or
daa
in
inc
xlat
jo
lret
jnp
inc
mov
fmuls
bound
jmp
js
pop
movsl
dec
mov
in
rorb
imul
xchg
rcl
jg
sbb
pop
add
out
adc
hlt
iret
fcomps
xchg
jg
or
sub
ljmp
sub
fcoms
ror
push
mov
inc
sub
cmp
cmpb
mov
xor
stos
leave
fsubs
negb
mov
pop
out
and
adc
imulb
movsl
sbb
inc
push
push
xor
rorb
pop
mov
xor
pusha
mov
and
daa
sub
add
push
rcr
pop
xchg
xchg
mov
ffreep
scas
pop
fisttps
pop
mov
out
sbb
dec
cld
mov
call
mov
jp
xchg
iret
mov
into
and
and
fisubrl
loop
adc
xor
cs
outsb
sbb
mov
gs
adc
out
stos
fldl
out
mov
ds
out
jmp
mov
pushf
sbb
addr16
jmp
or
fcoml
mov
adc
sub
jno
mov
lock
dec
enter
in
sbbl
push
inc
clc
pop
or
pop
add
leave
in
loope
push
push
arpl
test
in
add
ret
rcl
mov
popf
jmp
int3
movsb
movsl
iret
les
xlat
xlat
hlt
cmp
scas
ja
movb
or
data16
jl
and
xchg
cmp
add
lods
and
cld
or
jns
stos
loopne
jns
lret
pop
dec
clc
pop
std
and
mov
sbb
lahf
lret
shrl
xorb
push
insl
jl
lds
pop
cmpsb
add
aad
dec
addl
outsb
cmp
popa
imul
lds
and
shlb
xchg
xchg
pop
adc
hlt
test
xchg
xor
sbb
lret
jno
stos
xlat
cmp
push
dec
out
divl
jnp
stc
leave
leave
adc
mov
fmull
mov
mov
into
test
lret
in
out
notl
add
jns
repnz
xlat
inc
push
mov
inc
sahf
adc
push
add
loopne
arpl
push
pop
pop
cwtl
mov
test
mov
mov
inc
xchg
push
imul
aam
in
test
jnp
xchg
lds
rcll
cmpsb
cmp
scas
push
mov
shlb
add
add
add
mov
stos
gs
add
cmp
out
pop
sub
movsb
dec
mov
dec
dec
mov
imul
xor
push
push
jae
fwait
mov
push
mov
test
pop
xor
dec
xchg
inc
test
decl
outsb
push
and
sbb
jle
sub
push
mov
inc
sbb
mov
sahf
subl
loopne
fwait
sbb
adc
or
and
and
push
pop
lods
pop
xor
mov
push
cli
sub
inc
jae
lods
scas
dec
sbb
lret
in
jg
scas
and
fcmovb
imul
aam
push
imulb
sti
lods
data16
cs
lods
les
div
ss
pop
add
inc
pop
jge
popa
mov
fwait
pop
out
mov
je
cltd
sbb
out
xchg
sbb
ja
mov
ds
je
cmpsb
shl
pop
xor
test
xchg
mov
in
dec
push
xor
mov
or
aam
dec
out
mov
sbb
bound
loopne
test
out
mov
dec
cmp
adc
add
pusha
cmp
sub
lods
push
adc
jns
or
cs
or
repnz
iret
inc
out
test
out
mov
popa
icebp
movsb
aam
rclb
fldl
stos
pop
mov
fnsave
mov
add
and
dec
and
inc
jae
popf
std
into
cmp
fwait
jg
pop
jae
lds
inc
dec
mov
inc
sbb
xchg
orb
mov
loop
insl
in
ss
jp
mov
ds
clc
or
push
add
pop
pop
call
dec
jle
cmc
sub
push
and
push
stos
sub
add
xchg
push
lcall
bound
adc
pop
pop
das
and
jge
push
nop
lock
xchg
pop
cmpb
dec
mov
inc
cmp
dec
jl
lret
nop
push
or
pop
lret
ja
jecxz
ss
syscall
jl
js
push
xor
add
push
sbb
fldcw
sub
fwait
in
mov
enter
push
xchg
xor
outsb
outsb
aad
inc
lock
fistps
ja
pushf
mov
data16
sub
loopne
cmp
mov
jne
jg
popf
dec
roll
das
testl
out
in
or
js
cmp
lret
adc
rcrb
cmpsb
cmp
jmp
test
fs
test
jbe
cmp
push
gs
sub
insl
jae
push
xor
xor
mov
ret
mov
ret
fdivs
inc
icebp
mov
pusha
bound
les
or
jmp
xchg
ret
lret
adc
pushf
mov
jns
fildll
repz
sub
or
incb
mov
xchg
decb
and
push
into
nop
push
out
inc
mov
imul
pop
add
or
dec
adc
lea
xchg
xchg
pop
pop
push
jne
nop
fwait
xchg
mov
xchg
imul
push
push
jns
lock
das
icebp
mov
or
push
rcrl
jo
pushf
shl
shll
es
mov
sbb
xor
mov
push
repnz
mov
dec
sub
pop
les
fprem1
mov
imul
jge
cld
sahf
mov
leave
shrb
xchg
push
les
movsl
cmp
dec
xor
mov
hlt
and
xchg
loopne
sbb
pusha
pushf
push
xchg
sub
inc
lods
loopnew
stos
lcall
xchg
aad
xchg
or
mov
inc
inc
lds
xor
cmp
lcall
movsb
popl
sbb
mov
and
scas
lcall
push
clc
in
loopne
mov
into
jg
sahf
enter
mov
push
dec
pop
mov
adc
mov
mov
sub
jle
rol
lret
jg
sqrtps
out
rcl
and
inc
je
dec
aas
iret
shl
sti
jmp
push
jbe
inc
cmp
pop
push
dec
gs
sar
insb
push
rep
clc
xchg
mov
loope
push
sub
adc
mov
je
and
and
cmp
aam
inc
outsb
stos
sbb
out
mov
sbb
push
sub
pop
int
mov
add
movsl
fsubrs
test
test
adc
jecxz
js
jle
bound
mov
push
sub
sub
data16
xor
aaa
jo
inc
fldl
scas
pop
and
mov
adc
xchg
add
xchg
insb
sub
mov
and
dec
jno
sub
sti
test
sub
mov
outsl
or
pop
ljmp
mov
out
add
sarb
inc
jo
jge
jb
rcrb
out
enter
jge
xchg
push
xchg
add
adcl
ds
in
push
fwait
sub
and
dec
and
and
jp
sub
adc
aad
ss
mov
add
lea
cmc
in
cwtl
jb
cli
stc
inc
test
outsl
je
mov
call
shll
mov
mov
aam
mov
jo
fsubl
dec
test
dec
jo
mov
add
cmp
dec
xor
insl
jb
inc
dec
pop
sbb
push
into
sbbl
xor
cmp
add
mov
sbb
pushf
inc
mov
loop
jo
mov
pop
adc
mov
mov
insl
mov
adc
inc
jns
xchg
shll
sub
dec
ss
les
cmpsl
idivl
fsubrl
jg
bound
fdivs
roll
jno
test
mov
dec
xchg
nop
mov
mov
cmpsl
or
xor
aad
fs
in
jp
pushf
and
adc
aad
xor
lcall
jbe
icebp
loopne
ret
insl
push
fldcw
mov
mov
enter
sbb
dec
dec
xor
lcall
pop
jge
jo
and
out
push
sub
jecxz
adcb
scas
xchg
ret
fcmovu
test
in
into
sub
dec
cmp
cs
aas
cmp
push
xchg
iret
xor
dec
lea
fisttps
stc
cmp
add
andb
and
mov
pushf
popa
mov
dec
xor
mov
outsl
loop
fwait
orb
or
inc
lcall
shrb
dec
sub
jns
pop
xchg
ljmp
pop
bound
pop
push
sub
jo
out
adc
mov
sub
in
out
test
fwait
xor
fsubrs
imul
test
jle
jnp
fdivp
pop
dec
jg
in
sti
xchg
and
in
mov
sub
push
and
or
mov
cmp
subb
cmp
xor
sbb
and
and
mov
or
outsl
in
jo
lcall
or
shlb
mov
pop
pop
xor
mov
cmpsl
xchg
pop
popfw
push
jl
movsb
mov
mov
jp
inc
dec
stos
sbb
sahf
fmull
xchg
add
jnp
filds
roll
mov
clc
push
add
testb
jecxz
xor
inc
into
jnp
cmp
pop
fidivs
ret
add
push
jbe
insl
pushf
jl
test
sub
pop
test
stos
jne
dec
test
fldt
test
int
dec
loope
js
or
cmp
stos
pop
out
aad
mov
fisttpl
sbb
dec
fcompl
pop
fcomp
or
xchg
in
ret
mov
rcr
arpl
cmpsl
stc
dec
fcomp
mov
mov
bound
int
cs
std
lock
push
push
je
ret
repz
mov
repz
cmp
es
jb
repz
pop
sub
push
test
mov
pop
insl
mov
push
xor
cmp
dec
aad
popf
fcmovne
cmpsl
pop
dec
mov
mov
popf
xchg
jmp
orl
jmp
sub
enter
jnp
out
ret
xor
xor
rolb
stos
imul
mov
pop
jb
clc
rcl
add
jl
pushf
sbb
nop
rcll
push
cwtl
and
insb
push
movsl
mov
push
jbe
add
inc
add
mov
nop
fstl
data16
popl
push
push
movsl
aam
ja
push
pop
test
mov
data16
xor
sbb
mov
aas
or
jge
jg
or
xchg
ds
push
mov
aad
pop
ret
andb
fnstcw
popa
loopne
xor
loop
cmc
cmpsl
aam
cmp
mov
pop
xchg
adc
js
lret
or
jo
lds
xor
movsb
hlt
jne
pusha
pusha
movsb
add
ret
ret
mov
pop
enter
and
fidivrs
and
push
insl
jne
sub
lods
data16
loopne
cmp
ds
pop
jnp
push
fnstenv
add
in
out
jae
mov
jbe
fdivs
andb
mov
loopne
mov
mov
sub
adc
lods
ja
mov
cmp
and
push
lret
xor
sub
pop
mov
jp
jo
mov
xchg
sub
or
adc
stos
cmp
or
pop
insb
mov
scas
or
add
mov
mov
pop
add
popa
mov
cmp
mov
sub
pop
aam
rorb
add
bound
xor
or
pop
push
inc
cmp
sub
rorl
into
pop
test
push
mov
loopne
pop
cmp
mov
jb
push
insl
mov
sub
mov
cmpsb
xor
cli
mov
fsub
mov
gs
mov
sbb
xchg
stos
out
sbb
stos
xchg
and
daa
xlat
jge
repnz
rcr
inc
add
and
mov
and
repz
xchg
add
negl
fists
xchg
adc
gs
fiaddl
sub
outsb
hlt
testl
sub
outsl
call
sub
testl
push
jle
movntq
in
loopne
std
mov
sub
pop
xchg
ret
push
in
jge
and
in
bound
push
jge
repnz
je
jae
fldt
xor
mov
dec
mov
mov
orb
pop
xor
xchg
add
in
sbb
andb
sbb
aad
cmp
ds
mul
ret
sub
popf
mov
add
sahf
cmp
inc
cld
loope
cltd
movsl
lahf
call
popf
pop
xchg
pop
cmp
rolb
fcom
jne
push
pop
and
add
mov
cmpsl
jns
int3
cmp
nop
add
mov
aaa
xchg
out
movsl
dec
jb
cli
inc
xchg
fs
ret
in
daa
cwtl
mov
stc
sbb
inc
lret
jno
cmp
xchg
stc
pop
ja
ljmp
mov
std
add
and
mov
mov
ss
pop
dec
mov
es
mov
cmp
sub
mov
jbe
xchg
cmc
dec
cmpb
or
sbb
adcl
jo
pusha
push
jno
int
inc
pop
mov
fwait
or
xor
ret
in
fs
lea
sti
inc
es
xor
std
push
addb
pop
jmp
in
icebp
sub
out
inc
push
inc
ret
lods
mov
jmp
aam
jb
test
push
dec
fcoml
popa
arpl
add
add
dec
xchg
outsb
mov
push
imul
lret
scas
push
or
dec
fcom
mov
movsl
stos
and
mov
cmp
orl
repnz
dec
addr16
pop
rclb
mov
in
sbb
ljmp
pop
std
aas
es
dec
mov
test
enter
mov
ret
int3
dec
xchg
pop
cmpsl
cmpb
inc
and
inc
add
fs
jnp
mov
aaa
lods
adc
mov
dec
sbb
mov
pop
add
jb
mov
mov
mov
mov
add
insb
lahf
adc
add
jns
scas
mov
xor
ret
xchg
xor
dec
sub
pop
ss
xchg
or
pop
pop
ss
cmc
roll
ret
gs
int
pop
lock
xor
pop
test
and
and
movsl
mov
push
push
movsb
arpl
aaa
sahf
adc
ret
out
xchg
sbb
xchg
call
xchg
cld
popf
pop
mov
pop
add
mov
jle
pop
int3
decb
mov
pushl
and
enter
adc
jmp
xor
adc
jb
pop
cmp
mov
cs
out
sub
xchg
pop
adc
jl
pop
push
pop
pop
fcmovnb
cmp
sbb
rolb
cmpsl
hlt
pop
lret
pop
icebp
ficomps
add
ret
sbb
fistps
mov
inc
add
mov
out
ret
pop
in
sub
mov
jmp
sarl
orl
xchg
sbb
sarb
push
out
notb
ficoms
inc
movsb
arpl
sbb
adc
jnp
cmpsl
or
pushf
shll
leave
insl
cmp
popf
push
jg
inc
dec
mov
dec
push
dec
add
aad
aas
or
dec
mov
dec
pop
inc
sbb
std
mov
xchg
loop
fs
in
mov
push
lods
cmp
ret
sub
push
scas
push
push
mov
fisttpl
std
push
cmp
pop
push
es
sbb
and
pop
filds
mov
jl
test
les
stc
xchg
adc
xchg
and
xchg
mov
xchg
sbb
ss
mov
jmp
ret
mov
ret
cli
mov
fcmovnu
loopne
and
push
out
or
xlat
mov
add
out
fldenv
leave
cmpsl
popa
rcl
into
push
loope
mov
aaa
mov
test
dec
cmp
in
ret
fcmovnb
push
leave
lock
and
sbb
outsb
mov
cmp
stos
or
mov
int
add
fwait
daa
lea
push
inc
sarb
push
mov
clc
jnp
dec
jg
hlt
js
es
lcall
mov
pop
mov
fisubrs
ds
dec
and
aas
int3
inc
or
or
dec
cmpl
xchg
fisubrl
and
push
mov
int
lret
into
or
test
xlat
shl
icebp
dec
mov
pop
and
pop
test
pop
lret
out
fists
dec
cld
rclb
shlb
sub
es
lahf
fsubrl
scas
loopne
dec
xchg
shlb
adcl
push
or
std
xchg
pop
mov
mov
mov
stc
xor
dec
xor
mov
ds
mov
fwait
mov
jg
movsb
fcomi
mov
in
cmp
push
push
aas
mov
pop
add
enter
lret
pop
ljmp
dec
sbb
dec
jg
mov
iret
cld
fiaddl
pop
and
jo
cmpsl
int3
push
inc
cmc
add
mov
mov
mov
andl
push
mov
push
jmp
ljmp
fldl
fldenv
inc
add
ds
or
mov
pop
ror
cwtl
lret
fadds
insl
insb
enter
cmp
cmpsl
stos
fwait
into
ret
dec
lcall
jne
xchg
mov
ret
loopne
xchg
mulb
sbb
dec
pop
cmc
mov
adc
aas
cmpsl
mov
and
fisubrs
dec
mov
in
pop
fst
adc
jge
mov
out
adc
jae
mov
jle
insb
mov
xor
insb
jle
mov
inc
mov
sub
in
fimull
shlb
int
movsb
or
or
sahf
mov
inc
push
cmp
enter
add
mov
inc
sarl
out
push
pop
xchg
or
std
iret
lret
pop
and
rcrb
mov
lahf
sahf
decb
jns
adcl
popf
adcl
mov
cmp
int3
xchg
xor
xchg
push
out
xorb
scas
test
adc
loope
or
mov
loope
fcomps
js
or
xchg
stos
sub
jns
cltd
inc
rcrb
sub
sub
xor
push
pop
sbb
shll
fisubs
pop
test
inc
js
xor
jno
sub
lds
pop
out
nop
jns
mov
negl
lds
pop
xchg
cmp
sbb
aaa
inc
jl
cmp
adc
enter
xchg
jmp
and
das
sub
and
cmpsb
jae
mov
lcall
cmp
daa
test
aas
pop
imul
insb
or
adc
mov
mulb
cmpsl
test
mov
push
call
ds
iret
cmc
inc
movsb
and
pushf
cmp
dec
adc
lods
inc
ja
pusha
xchg
into
cmc
lret
andl
xor
daa
test
inc
or
mov
push
pop
xchg
int
dec
jbe
cmp
pop
testb
adc
xor
sub
dec
rcrl
ljmp
ljmp
in
dec
ljmp
cmc
aaa
mov
in
adc
fidivrl
pop
stc
xor
mov
xor
in
sub
bound
jbe
cmp
pusha
les
mov
dec
addb
cmpl
pop
or
cmp
pushf
outsl
mov
aam
outsl
jno
mov
mov
push
inc
pop
daa
push
dec
insb
mov
xor
jae
jge
inc
testl
test
ror
xor
sti
stos
and
push
xlat
std
testb
dec
sbb
pop
add
lods
jmp
lods
pushf
outsl
xchg
xchg
hlt
jno
jb
lock
in
mov
pop
icebp
inc
sbb
sbb
sub
mov
aad
icebp
filds
dec
out
js
mov
jmp
rorl
lds
jl
leave
lret
push
stc
loop
xor
sahf
xchg
add
sbb
sbb
or
push
mov
sub
xor
adc
aad
lcall
jg
mov
aaa
stc
out
dec
ret
aaa
iret
icebp
gs
mov
cmpsb
outsl
push
pop
mov
sub
jmp
fs
in
mov
fisubs
test
insb
pop
movsb
mov
orl
and
xor
jnp
mov
shlb
or
aad
sub
mov
cs
or
adc
xchg
adc
pop
stos
sarb
and
dec
xchg
repz
mov
clc
out
loope
mov
pop
lret
into
push
cmpsl
mov
jb
inc
ret
sub
rclb
lret
cmp
mov
fwait
push
mov
xor
fcomi
imul
bound
xchg
mov
xchg
out
inc
call
outsl
xchg
pop
rcrl
jae
pop
jge
stos
mov
push
jae
adc
lcall
insl
jae
mov
xor
icebp
adc
ljmp
in
jno
xchg
test
jge
and
jl
push
mov
clc
test
movsb
sub
shll
inc
rorb
mov
inc
pop
mov
aas
lock
dec
sbb
jp
inc
pop
and
add
addr16
mov
lret
add
adc
fstp
mov
mov
pop
sbb
imul
mov
mov
fsubs
add
push
fisubrl
jg,pt
shr
lock
out
sti
sub
push
mov
push
jb
mov
sub
xor
dec
pop
xchg
sub
mov
mov
jge
push
and
cwtl
push
int3
gs
mov
stos
and
push
lods
sub
andb
repnz
add
dec
inc
mov
fldcw
mov
mov
setl
sti
pop
xchg
scas
push
in
and
movsb
push
scas
ficoml
shl
or
aam
xchg
push
add
jecxz
stos
sub
push
mov
mov
jns
jmp
push
loope
xchg
rol
push
mov
aam
push
and
popf
sub
mov
outsb
daa
imul
int
mov
lods
mov
arpl
or
cmp
xchg
in
xchg
frstor
xchg
mov
in
push
and
mov
xchg
add
mov
mov
loope
jnp
mov
sbb
cmp
dec
inc
adc
outsl
xor
adc
mov
das
fsubr
cmp
adc
mov
or
xchg
les
in
mov
dec
adc
add
push
pop
mov
sub
rcrb
sbb
jae
add
insb
add
or
repz
pop
pop
outsb
rcrl
loope
sti
leave
adc
inc
add
popa
cmpsb
pop
fldcw
mov
idiv
inc
mov
imul
and
dec
stos
and
sub
jg
mov
dec
std
lret
pop
adc
mov
or
xor
sub
jae
push
in
ret
loopne
mov
mov
or
cmpsl
inc
outsb
cmp
mov
popf
sbb
fsub
aam
and
insl
dec
pop
cmp
in
inc
dec
sti
push
adc
xchg
xor
or
cwtl
mov
cmc
mov
add
lds
push
jmp
mov
fidivrs
pop
sahf
lock
jmp
sti
mov
adc
aaa
adc
lods
pop
jmp
idiv
push
mov
cmp
repnz
or
enter
lods
test
mov
cmp
mov
loope
xor
mov
sarl
aaa
dec
xchg
ror
jl
inc
jb
lea
pusha
and
test
shrl
pop
xchg
push
outsb
mov
jo,pn
mov
daa
mov
aaa
idivl
mov
pushf
mov
cmp
mov
xor
xchg
mov
js
adc
aaa
lahf
mov
lcall
dec
loope
xchg
lock
xchg
gs
add
out
cmc
mov
pop
iret
call
dec
pop
enter
mov
dec
push
inc
shll
loop
sbb
add
dec
das
dec
std
cmp
pop
mov
push
test
mov
mov
leave
mov
mov
jns
negb
cmp
xchg
inc
and
aaa
sbb
push
push
cmpsl
push
pushf
mov
fsubrs
jge
mov
inc
or
scas
cmp
icebp
outsb
imul
jg
and
mov
cmp
pop
ficoms
push
cmc
dec
out
push
or
add
nop
std
inc
std
jne
test
push
out
mov
add
ret
inc
xchg
lock
arpl
pushf
xor
shll
and
movsl
testl
call
mov
stos
xor
and
les
xor
add
fwait
int
or
psrlw
mov
lods
daa
mov
xchg
and
xacquire
push
ret
stc
add
aad
test
push
mov
pop
xorb
xchg
inc
movsb
xor
or
mov
push
lahf
movb
xchg
adc
popf
fldt
sub
pop
xchg
push
outsb
adc
nop
xor
jbe
imul
sub
movsl
cli
jns
ljmp
mov
mov
fidivrl
in
cwtl
and
icebp
adc
movsb
js
push
leave
push
add
cmp
cmpsb
js
int
vpshuflw
cmp
pop
pop
mov
mov
jge
dec
push
add
add
dec
push
sbb
out
cwtl
mov
cmpsb
lahf
loopne
jne
lcall
int
fistps
pop
iret
rcrl
arpl
pop
mulb
jno
cmp
mov
mov
ja
mov
lcall
dec
je
mov
adc
pop
pop
mov
inc
popa
jle
call
outsb
into
and
leave
fsubr
cmp
mov
xor
xlat
and
shlb
in
lret
and
insl
dec
jmp
inc
aam
xchg
xchg
stc
push
sbb
cld
psllq
xchg
pop
lret
mov
or
test
inc
pop
fmul
popa
imul
pop
dec
inc
xchg
mov
clc
push
ds
movsb
adc
mov
sub
jb
inc
pop
in
shll
cmpsb
in
dec
inc
call
or
and
xchg
int
cmp
outsb
notl
mov
in
out
xor
pop
sbb
cmc
sub
bound
in
add
adc
scas
popa
ret
loop
and
add
aaa
or
xlat
add
test
icebp
fs
jge
mov
pop
mov
sbb
adc
popa
push
adc
fwait
test
aaa
jecxz
hlt
cmp
sahf
lret
pop
jmp
frstor
mov
pop
lea
stc
int3
inc
or
push
je
sub
pushf
outsb
stos
sbb
fists
mov
inc
insl
scas
repnz
mov
cmp
adc
hlt
jmp
xor
inc
cmp
or
mov
loope
negl
clc
dec
jge
fisubs
les
hlt
xchg
loop
shrl
add
sahf
stc
bound
or
mov
mov
pop
es
imull
lcall
or
sbb
xor
jge
data16
dec
mov
mov
inc
cmp
pop
in
imul
gs
lcall
fildl
and
cmp
ljmp
mov
pop
xchg
ljmp
mov
sbb
cmp
out
dec
shl
nop
mov
in
mov
mov
xor
sbb
cli
and
stc
ficomps
pushf
out
mov
fsubrl
push
lods
lea
dec
mov
and
roll
xlat
jmp
arpl
mov
lahf
jg
aam
cs
shrb
fwait
pop
or
xchg
pop
sbb
xor
or
js
jmp
push
xlat
lods
pop
ficompl
stc
jp
lcall
push
lds
popa
mov
mov
add
mov
sarb
imul
and
push
testl
iret
test
insb
jno
inc
xchg
sub
lret
ss
fisttps
adc
out
mov
outsl
xor
into
and
xor
jns
outsl
xor
push
jno
pop
pop
mov
sti
xor
cmpb
dec
push
cltd
stos
or
imul
xchg
test
fdivr
out
inc
frstor
dec
sahf
insl
orl
rolb
sub
inc
cmc
das
in
lods
test
fpatan
cmp
lahf
push
dec
jnp
xor
repnz
sub
icebp
xor
ljmp
push
pop
sahf
mov
pusha
push
insl
loopne
inc
cmp
and
mulb
inc
mov
insb
or
sbb
mov
push
rol
notl
outsl
popf
aam
sub
nop
push
and
aas
jne
imul
inc
enter
test
lea
aas
test
jge
ljmp
jns
loope
test
mulb
out
jne
add
ficoms
sub
mul
cmp
dec
mov
lods
xchg
cmpsb
cmc
sbb
stc
orl
xchg
test
sbb
loope
cli
sbb
jbe
xor
lahf
jbe
in
cli
dec
mov
adc
sahf
cmp
mov
or
mov
orb
sti
dec
faddp
sbb
mov
fmuls
mov
std
xchg
push
test
movd
jmp
mov
fs
xor
dec
add
test
sarb
mov
out
in
in
shll
cmp
jecxz
fs
push
sub
rolb
subl
sbb
rcll
inc
es
cmpsl
pop
inc
popa
and
dec
cli
cmp
loopne
aam
push
cmp
inc
or
movsb
out
stc
xchg
insl
pop
ljmp
mov
cltd
xor
dec
fidivrs
lret
push
pop
cli
or
rolb
flds
push
stos
fistl
lahf
setnp
mov
add
push
icebp
adc
dec
inc
jl
lahf
fsubs
pop
jno
test
push
leave
pop
in
pop
shlb
push
aaa
mov
jb
pop
fidivs
lods
out
dec
test
pop
cltd
leave
sub
enter
stos
or
jno
adc
adc
cmc
sbb
jb
add
lret
push
in
jg
xchg
xor
jmp
leave
ljmp
xchg
adc
and
fistpl
mov
cwtl
out
and
dec
push
adc
xchg
add
jo
pop
test
xchg
mov
fdivp
xchg
pushf
jmp
aam
call
jb
mov
das
repz
dec
jecxz
mov
insb
xor
add
push
push
mov
inc
xchg
pop
andb
jns
mov
mov
xor
and
mov
xor
insl
xlat
jb
aam
pushf
ret
add
mov
pusha
sbb
movsb
jmp
addl
das
es
adc
pop
ljmp
xchg
bound
testl
sub
dec
adc
xor
stc
add
andl
dec
sti
sarl
cltd
mov
xor
lock
clc
cmp
jecxz
xchg
in
movsb
shll
push
int3
xchg
mov
and
sub
pop
cmc
mov
fbstp
mov
sbb
in
jb
imul
call
dec
imul
push
ja
lods
mov
fsts
xor
push
or
mov
add
ljmp
jl
mov
dec
jns
push
adc
dec
jecxz
insb
add
or
sub
dec
jecxz
aam
lea
sti
test
cltd
insb
repnz
pop
mov
jl
jo
clc
push
dec
enter
push
xor
jno
mov
cmp
nop
xchg
fisubl
jo
jbe
nop
jb
push
mov
imul
pop
js
sbb
mov
call
xor
pop
cmp
xor
inc
fimuls
pop
mov
mov
ret
dec
int3
dec
push
dec
adcl
or
or
stc
adc
scas
xor
push
into
lock
lock
mov
roll
xor
mov
or
jmp
dec
ret
loope
fisttps
adc
dec
or
cs
mov
jno
xor
aaa
mov
mov
cli
pop
inc
push
jmp
pusha
lret
push
mov
pop
inc
out
inc
mov
add
or
push
adc
pop
outsl
sbb
lea
xor
pop
subb
shrl
jne
pop
push
jo
lret
mov
stc
int
mov
cltd
jae
sbb
jge
jle
inc
pop
lret
xlat
xchg
pop
ja
add
jmp
inc
inc
push
adc
mov
cltd
jg
in
xor
cli
outsl
and
dec
out
mov
fimull
jge
jl
popa
dec
xor
cwtl
jne
sbb
jge
mov
lea
add
cmpsb
push
add
clc
lret
dec
dec
xchg
push
je
shll
jne
sbb
inc
std
xlat
sub
mov
cmp
xchg
sahf
and
notb
arpl
cmpsb
sub
mov
add
shl
or
jno
addr16
cmpsb
mov
mov
lret
cmp
jmp
cld
xchg
mov
clc
or
xchg
mov
push
xchg
mov
popa
das
lods
out
fsubrl
fwait
adc
int
ret
push
popf
mov
scas
and
int3
sub
mov
jmp
stc
outsl
pop
ftst
xor
jno
jge
das
arpl
cmp
aad
pop
or
add
lcall
fnstenv
mov
jno
jb
mov
xor
popf
in
xchg
mov
sbbb
pushf
sbb
dec
shld
or
sub
test
push
sar
je
inc
push
and
aam
and
and
mov
cmp
mov
dec
inc
pop
arpl
push
jg
lods
imul
andb
xor
mov
mov
add
sub
repnz
push
pop
out
les
jbe
fidivs
pop
movl
pop
push
xchg
popf
sbbb
inc
orl
aam
mov
test
push
stc
add
inc
dec
iret
popa
lret
enter
mov
gs
jae
cld
push
mov
loopne
or
and
movsl
xor
call
mov
cmpsl
xchg
mov
pop
cmp
mov
das
jnp
aad
dec
cltd
cli
ret
and
shrl
sarl
aam
sub
cmpb
subps
test
pxor
push
and
or
lods
cli
jmp
int3
push
adc
inc
int
jb
push
add
and
cld
pop
addr16
mov
stos
push
pop
xchg
lock
jo
fcomps
sbb
dec
fidivrs
or
sub
mov
jge
pop
jnp
cmp
jl
in
xchg
fs
aaa
mov
lock
lahf
sbb
sbb
faddl
fisubs
add
add
push
cmp
cmc
aam
das
je
ds
sahf
int3
push
pop
and
std
xchg
jnp
and
adc
fdivrs
aaa
jbe
cmc
loope
xchg
mov
pop
es
mov
rcll
in
cmc
inc
and
fwait
in
mov
cmpsb
test
dec
in
xor
adc
test
mov
adc
jo
js
mov
dec
repnz
mov
ss
or
clc
lock
aam
or
cmp
xor
iret
mov
in
jp
ds
enter
les
sahf
lahf
mov
jle
push
pop
test
ds
jb
fcmovnb
sub
pop
add
fcmovbe
scas
sar
or
cltd
fstpl
out
repnz
sbb
test
push
sbb
in
adc
out
stos
cli
push
mulb
loop
cmp
xor
inc
in
mov
and
mov
scas
or
dec
aaa
mov
cmp
pushf
jae
sti
stos
jmp
and
push
inc
inc
lds
adc
frstor
test
shll
inc
insl
into
insl
add
jbe
sbb
or
adcl
mov
inc
xor
in
cmp
sbb
adc
rclb
clc
push
ds
mov
testl
cmp
and
mov
daa
aas
or
mov
jmp
or
xor
in
in
test
push
lods
xor
mov
adc
sbb
mov
lret
jo
and
xchg
andl
test
decb
mov
xchg
in
cmpsl
js
mov
push
jo
cmp
stc
rcl
jg
xchg
jge
cltd
movsl
dec
testb
add
mov
imul
jmp
js
les
repz
shlb
push
fidivs
loopne
xlat
daa
or
fmul
dec
jne
jns
icebp
sarb
scas
sbb
sbb
xor
in
inc
out
adc
mov
in
push
add
jmp
loope
mov
dec
test
push
jbe
mov
mov
or
movsl
out
cmp
jecxz
fdiv
mov
out
mov
inc
ja
aas
sti
jge
fsubl
mov
fimuls
js
adc
lods
inc
in
and
shl
mov
out
bound
xchg
add
hlt
inc
push
cli
mov
js
sub
sarl
cwtl
ja
inc
dec
mov
jmp
test
pop
test
jne
insb
fsubl
pop
lods
outsl
frstor
mov
pop
xchg
call
dec
rcrb
sub
inc
push
ror
xchg
loope
es
aaa
sbbl
dec
call
movsb
dec
sub
dec
fidivl
gs
push
sub
mov
add
sub
lahf
leave
mov
movsl
add
das
clc
inc
mov
call
or
ret
sbb
jg
adc
lret
ret
popa
int
and
mov
mov
sbbl
sbb
push
fisubrl
aam
xchg
movsb
inc
scas
es
stos
stos
pop
or
lcall
icebp
mov
xchg
jl
lock
xor
xchg
data16
xchg
lret
push
nop
jmp
inc
mov
icebp
xchg
mov
lds
mov
es
adc
pop
sbb
sub
fucomi
jmp
dec
xor
mov
addb
inc
and
lock
adc
fwait
mov
shl
mull
sbb
inc
xchg
movsb
mov
or
adc
sub
mov
hlt
sub
xchg
popa
push
jecxz
inc
adc
in
je
push
leave
hlt
push
int
std
test
jnp
pop
imul
mov
shlb
stos
xor
or
subl
jg
mov
sub
ret
cltd
inc
xchg
ljmp
lahf
sub
push
imul
stos
jg
ffreep
mov
mov
xchg
mov
loope
dec
push
sbb
or
imul
cltd
push
hlt
das
dec
inc
mov
add
cmpb
jl
pop
sub
jae
addr16
xchg
js
or
lock
stc
push
ljmp
cmc
fmul
pop
test
adcl
pop
imul
inc
sbb
ffree
pop
shrb
pop
dec
cs
inc
pop
daa
jmp
add
bound
pop
xor
pop
stos
or
push
lret
push
add
mov
out
pop
push
mov
mov
fmul
sbb
js
jnp
int
imul
add
sub
pushf
jno
test
jle
loope
idivl
cmp
jg
push
mov
ds
fsubrs
sub
enter
iret
xor
push
mov
jl
xor
mov
arpl
sub
sub
cmp
les
cmp
xor
inc
push
add
scas
pop
popf
cmpsb
mov
sbb
scas
jne
imul
dec
std
imul
push
loopne
insb
arpl
cmp
test
and
add
add
das
sbb
ja
pop
std
push
stos
aas
lock
mov
jl
pusha
gs
hlt
movsl
data16
cmpsl
hlt
pop
and
push
arpl
dec
cwtl
xor
and
jo
xor
outsl
xchg
push
movsl
pop
cmp
scas
jecxz
lods
pop
sub
loopne
cmpb
shrb
mov
fmuls
jae
stos
pop
pop
stos
nop
aaa
fiadds
stc
lahf
std
fwait
jo
stos
sbb
dec
cld
jbe
add
mov
into
pop
dec
cmc
sub
scas
repnz
cmp
clc
fdivs
inc
jae
cmp
cmp
inc
xchg
test
lock
out
jge
jnp
sti
roll
or
movsl
aaa
cmc
cmp
add
dec
in
xor
dec
inc
add
jno
sahf
jne
lods
mov
xchg
cwtl
inc
jle
mov
std
pushf
sub
outsl
pop
pop
push
mulb
sub
pop
mov
loop
dec
sub
mov
jae
fnstcw
mov
push
pop
cmp
adc
mov
push
sbb
inc
es
andl
jl
pop
test
subl
jmp
cmpsl
push
enter
xchg
and
mov
cmp
int
imul
xor
loope
mov
lret
xlat
dec
pop
addb
xor
and
pop
xlat
in
mov
dec
frstor
ds
test
lahf
cmp
mov
or
leave
pop
lret
mov
push
nop
imul
nop
mov
cmpsl
roll
ljmp
xor
cmp
jmp
cmpsl
ds
rorl
lea
je
pop
mov
inc
notl
imul
pop
fwait
enter
ss
lds
pop
pop
push
movsb
lods
pop
pop
pop
mov
cli
shlb
dec
ja
andl
mov
aam
pop
sbb
shlb
addr16
pop
repz
movsl
outsb
fsub
add
aas
and
rclb
mov
mov
int3
std
inc
test
and
jge
adc
xchg
xchg
push
xchg
push
frstor
dec
sbb
pop
sbb
test
pop
xor
ljmp
mov
add
cltd
pop
push
shr
ffreep
cwtl
mov
repz
bound
popf
daa
fdivs
lods
shlb
icebp
aad
xor
rorl
aaa
lds
sub
jns
push
or
and
out
ja
scas
stc
test
mov
and
adc
inc
hlt
in
adc
push
rolb
mov
lret
jbe
ljmp
lods
cs
stos
pop
fstl
popf
cwtl
xchg
jb
popf
cs
pop
mov
mov
hlt
fstl
aad
imul
lock
xchg
cs
f2xm1
pusha
sub
push
insl
fimull
push
adc
inc
xor
or
jo
add
jo
cwtl
ss
sbb
cmp
sbb
fcoms
ffreep
nop
mov
pop
aam
inc
or
nop
jp
mov
dec
in
repz
mov
push
leave
aas
leave
cltd
dec
out
dec
call
and
ss
repz
mov
jne
bound
dec
push
mov
inc
cmp
xchg
cmp
data16
jg
sub
fs
mov
sarl
sub
xorl
cmp
mov
repz
xchg
aad
pusha
out
pop
sbb
test
or
sub
cmpsb
ds
outsl
jge
in
pop
loop
rcll
jo
cmp
fisttpll
pusha
xchg
out
jnp
add
dec
jecxz
movsb
mov
in
cmpsb
lcall
aam
lds
xor
lods
mov
ljmp
mov
xor
inc
pop
and
mov
sbb
sbb
push
jo
rcrb
data16
jge
lods
adc
add
pushf
arpl
jg
sub
or
jp
mov
add
sahf
or
bound
loope
iret
popf
jp
xor
cmpsb
jmp
lcall
repnz
adc
jb
outsb
inc
mov
hlt
push
mov
pop
in
fcmovnu
mov
pusha
cs
jle
adc
cmpsl
inc
pop
loope
inc
rcl
sub
or
leave
sbb
or
sub
iret
cmpsl
add
xor
in
dec
std
sysenter
dec
jae
and
push
jmp
sub
mov
mov
cmc
jle
xchg
aad
dec
xor
push
pop
pop
jecxz
addr16
jg
rolb
or
xor
pop
mov
lret
jns
sub
outsb
xor
mov
rcll
das
xor
lods
or
popf
pop
mov
or
and
pop
rcrl
insl
pusha
pushf
mov
add
jns
jno
loop
insl
pop
sub
inc
pop
lcall
push
xchg
xchg
push
sub
lret
jle
push
jl
lock
hlt
or
push
mov
xchg
out
cltd
cmc
adc
cli
sub
push
or
lods
cmp
xchg
insb
push
or
sub
xchg
enter
out
jae
scas
mov
imul
xlat
test
adc
fcmovnu
ficompl
sub
mov
sbb
stc
test
sti
add
push
out
cli
mov
popf
inc
mov
popa
ljmp
outsb
jl
jno
fldt
cmp
fidivs
iret
loopne
jmp
lock
aaa
ret
mov
jnp
cmpsb
pop
sbb
push
mov
cmp
notb
xchg
dec
test
lret
pop
jb
out
push
inc
dec
sub
mov
mov
push
push
cli
inc
pcmpeqb
pushf
int3
andb
or
sub
inc
lcall
push
sub
fimull
ret
sub
push
fnstcw
stos
mov
sub
sahf
xchg
jnp
std
lock
out
loope
jno
and
xchg
movsl
fiaddl
out
or
mov
pop
arpl
outsb
cwtl
mov
jb
xchg
aaa
mov
and
insl
adc
stc
decb
push
xchg
inc
and
movsb
sub
into
add
jmp
out
jne
mov
adc
fdivrl
popf
int
cmp
lds
jbe
sbb
test
pop
les
neg
sub
rol
aad
push
in
mov
jecxz
imul
fisubrs
js
push
pop
mov
aaa
xor
and
jg
dec
jl
iret
dec
loopne
mov
shlb
in
jno
lcall
jns
sub
dec
push
outsb
fwait
jmp
and
jmp
or
dec
sti
rcrl
add
je
aam
xchg
cltd
test
int3
inc
cli
cmp
push
pusha
sub
leave
pop
or
dec
add
sahf
out
enter
imul
repz
pop
std
frstor
ret
repnz
inc
dec
test
imul
sbb
and
out
push
movsb
daa
mov
stc
push
and
push
jge
insl
jns
sub
inc
cmc
stos
js
mov
and
clc
dec
inc
test
mov
sub
push
pop
ds
push
mov
mov
clc
or
and
push
ss
popf
scas
jne
xchg
adc
xchg
fstpt
mov
inc
or
iret
cmp
pusha
sub
mov
stos
rcll
lock
out
cmp
push
int3
movsl
cmpl
js
rolb
push
stos
sti
pusha
pop
adc
xchg
rorl
ljmp
push
and
adc
cltd
stc
ljmp
push
stc
sbb
mov
in
sub
stc
scas
sbb
push
out
es
add
pop
lea
dec
sarb
push
aas
nop
push
xchg
lock
mov
lds
insb
xor
push
sahf
into
ja
adc
int3
adc
push
or
dec
std
push
jmp
repnz
or
mov
ds
filds
add
sub
int
shll
sub
fstl
adc
test
test
and
and
rorb
cld
sbb
add
pop
jb
fs
jb
add
je
aaa
ljmp
mov
push
push
cmp
shlb
test
outsl
pop
adc
dec
into
in
dec
inc
mov
mov
mov
dec
ljmp
imul
loop
adc
in
xchg
addr16
aam
lds
inc
outsl
arpl
xchg
xor
adc
popa
int3
add
aas
lea
jnp
pop
clc
int
xor
jne
ja
and
pop
es
movsl
les
inc
xor
shll
pusha
jmp
out
add
push
popf
lods
scas
pop
out
jecxz
pop
push
push
dec
mov
fs
mov
mov
cmp
jae
outsb
std
jns
pushf
nop
jecxz
je
aaa
in
ds
sahf
add
enter
std
shll
pop
or
dec
cltd
or
ljmp
iret
stos
adc
inc
jae
in
les
clc
cwtl
jl
jno
inc
add
and
dec
out
pop
xchg
fnstsw
or
xor
or
ja
mov
and
push
dec
sub
call
cmp
mov
jl
loope
popf
fidivs
adc
dec
test
andb
aas
pop
cmpsb
and
in
inc
scas
pop
adc
push
mov
xor
jle
pusha
aas
jns
scas
xchg
xchg
in
mov
loopne
mov
mov
leave
push
leave
nop
icebp
pop
jp
iret
jl
push
aas
dec
sarl
std
dec
xor
cmp
mov
mov
pop
scas
data16
sbb
or
mov
xchg
push
adc
arpl
imul
clc
repz
das
mov
add
test
jns
mov
and
cmp
and
push
lods
lcall
cmp
inc
xor
addr16
push
adc
hlt
fcom
xchg
scas
adc
cli
fstpt
xchg
mov
dec
dec
pop
mov
fcomp
add
pop
lret
dec
orps
cltd
cmp
enter
push
dec
dec
xchg
xor
cmc
shrb
cli
loop
test
xor
add
cld
lret
leave
sbb
ljmp
fwait
dec
in
and
cld
and
insb
lods
ret
scas
mov
inc
adc
push
xlat
mov
sub
mov
xor
movaps
xchg
cmp
xchg
sub
pop
adc
arpl
lods
fdivrl
add
data16
fldcw
out
pop
repnz
movsb
jp
divb
push
add
mov
xchg
or
outsl
adc
adc
idivl
ret
shll
lds
pop
or
fwait
scas
addr16
mov
inc
jns
ror
push
mov
and
xor
and
push
inc
jbe
lds
and
dec
inc
pop
jb
xlat
mov
inc
jle
ljmp
ficompl
pop
jo
mov
or
int3
in
jmp
xchg
and
icebp
lcall
icebp
pop
push
mov
repz
movsl
dec
ljmp
into
or
je
popf
pop
sbbl
mov
pusha
bound
movb
insb
rcr
jecxz
cmpl
push
orb
add
xor
das
and
cs
ljmp
or
inc
lods
and
and
out
leave
sbb
mov
mov
pop
pop
stc
or
sti
xchg
mov
int3
mov
dec
cmp
jge
jae
shlb
cmp
xchg
insb
jbe
dec
scas
cmp
outsb
and
jmp
into
icebp
pop
bound
xchg
push
and
cmp
repnz
sarl
movsb
popf
das
int
dec
sub
jo
mov
mov
mov
cwtl
pop
std
or
out
jl
lds
repnz
cli
lea
jg
adc
ljmp
jo
mov
ret
pop
jo
insb
popf
cmpsl
xchg
in
xacquire
dec
ljmp
out
sub
cmp
cmp
mov
mov
movsb
dec
xor
mov
test
and
push
jge
push
test
incb
mov
gs
push
pop
mov
hlt
sub
jo
sub
or
xlat
mov
sbb
gs
subl
aad
jno
iret
jmp
pop
mov
sub
mov
jb
mov
jno
dec
jmp
rcl
js
int
pop
ret
jb
iret
dec
aam
out
dec
add
xlat
dec
mov
adc
add
in
cmp
loop
sbb
push
cmp
ss
jle
daa
mov
push
dec
pop
lea
cmp
out
and
xchg
out
das
out
inc
aaa
xor
mov
and
inc
popf
dec
stos
and
lds
dec
sub
push
nop
mov
aam
push
cmpsb
call
ja
or
mov
bound
adc
std
mov
mov
ja
lock
jp
test
sub
pop
lock
hlt
adc
jno
sbb
or
test
lea
pop
shlb
sbb
int
cmp
aam
jmp
mov
lds
push
arpl
adc
add
loope
pop
arpl
push
mov
mov
sbb
pop
call
cs
sarb
adc
loope
xor
in
mov
sahf
mov
dec
jno
push
nop
sbb
scas
or
popf
ficomps
xchg
inc
icebp
jle
xor
js
movsb
mov
enter
faddp
push
inc
inc
inc
mov
xor
sbb
add
or
mov
xchg
pop
mov
test
cltd
mov
push
popf
int3
mov
push
adc
and
mov
xor
js
sub
ret
pop
mulb
xor
scas
and
ljmp
test
popa
cmp
ja
fisubs
je
xchg
and
mov
push
ds
out
push
or
data16
daa
pop
push
mov
push
mov
jae
negl
sub
lret
fildl
jmp
adc
jl
mov
mov
loopne
lock
lcall
push
mov
adc
popf
repnz
sub
inc
push
mov
xchg
cmc
dec
jp
insb
ss
xchg
xor
cmpsl
jae
mov
fistps
hlt
pop
es
xor
nop
jns
lcall
lcall
imul
pop
pop
lahf
sbb
pop
ljmp
xchg
aad
pop
fstpl
dec
lret
jbe
xchg
ss
cld
pop
arpl
roll
xchg
xchg
or
fucomip
and
mov
stos
cmp
push
sbb
dec
sub
sbb
ret
pop
pushf
lock
xchg
test
jns
add
mov
lahf
sub
scas
icebp
mov
cmp
and
jmp
push
cmp
fs
jmp
mov
aad
lcall
loopne
pop
repnz
scas
sbb
cltd
mov
jg
imul
sbb
movsl
lahf
jmp
lret
fistpll
enter
out
fisubl
pop
addr16
or
mov
and
xor
cmp
xlat
mov
pusha
cmc
xchg
test
arpl
mov
out
nop
inc
sub
clc
add
loopne
adc
in
xor
ret
jg
dec
das
roll
xchg
mov
sub
jmp
adc
mov
loopne
and
xchg
inc
loopne
push
insb
mov
push
pop
adc
inc
icebp
jmp
shl
add
mov
lds
xchg
bnd
lods
push
jbe
jg
pushf
jp
shll
mov
popa
push
sbb
sbb
hlt
xor
lds
pop
sahf
push
mov
xchg
mul
lcall
lcall
loopne
decl
loopne
or
push
ret
inc
adc
jp
cmp
loop
add
outsb
in
jp
push
add
lods
gs
popf
out
lcall
mov
arpl
sub
sbb
xchg
pop
inc
mov
imul
aaa
xlat
xchg
loop
jg
xor
fistpl
jecxz
xchg
and
movsb
xlat
push
nop
adc
test
pop
jp
add
xor
scas
pop
jno
cmp
sti
sbb
sub
or
cli
and
insb
into
pop
jno
call
push
insl
adc
dec
movaps
pushf
rcrb
and
push
or
imul
fsubrs
aad
les
dec
cmc
mov
pop
xchg
in
shll
dec
cmp
mov
and
cmp
sbb
imul
xchg
and
adc
mov
cmp
fisubrl
outsb
jg
inc
push
ljmp
jmp
sbbl
loop
add
jmp
sub
add
xchg
jp
lret
lcall
mov
aad
jbe
shlb
inc
mov
mov
scas
xor
dec
fs
lret
sbb
loopne
loope
xor
push
xchg
cld
rcr
mov
xchg
out
pop
mov
fbstp
aad
out
mov
inc
add
popf
sbb
lds
or
fiaddl
jp
ret
inc
jge
or
cmp
data16
jp
jmp
mov
sbb
push
orl
idivl
mov
mov
ds
out
std
lahf
push
test
leave
pushf
add
test
ret
sub
jnp
push
jo
cmc
jbe
jp
call
mov
cmc
addr16
int
xor
rcrl
jl
cmp
xchg
adc
call
lods
mov
pop
cltd
push
sbb
stos
xchg
mov
dec
pop
insl
add
es
lds
mov
jle
fwait
jmp
jg
and
nop
insb
test
jno
pop
fdivrp
bound
dec
xor
fiaddl
in
ficoml
iret
mov
pop
pop
xchg
iret
mov
fwait
int
fsubr
or
out
stos
mov
jl
pop
sub
mov
pop
sbb
pop
dec
scas
xchg
ret
fildl
inc
xor
jmp
jmp
adc
jl
outsb
cmp
mov
or
sub
pop
in
xchg
cwtl
push
mov
repz
scas
imulb
leave
arpl
je
xchg
in
jns
sti
xor
dec
inc
and
jns
roll
mov
sbb
pop
icebp
add
movsl
and
or
cmp
add
insl
ret
push
divb
or
out
je
pushf
and
or
inc
lods
cld
pop
hlt
mov
sysret
scas
xchg
cltd
mov
out
aad
sub
out
fnstcw
sub
xorl
or
push
mov
adc
es
lock
movl
jle
repnz
lock
cmp
pop
dec
jae
stc
test
dec
mov
cltd
adc
in
jl
push
repz
ja
push
lods
pop
addr16
jno
add
enter
aas
and
imul
outsl
jno
loop
pop
sbb
andb
jae
pop
imul
stos
cmp
in
pop
cwtl
sbb
cwtl
mov
push
adc
sbb
lahf
jl
xchg
cmc
or
push
push
add
cmpsl
cmp
add
jg
adc
ss
in
push
sbb
dec
movsl
cmp
sbb
hlt
xor
or
hlt
repz
cmp
lods
mov
sub
cmp
jae
data16
dec
xchg
rorb
fistpll
jo
outsb
hlt
xchg
scas
outsb
pop
addr16
and
or
and
cmc
and
movsb
in
xorb
push
in
mov
filds
mov
push
and
jb
xchg
inc
and
add
cli
push
jge
and
or
mov
aad
rcll
pop
dec
fs
push
js
pop
mov
ss
pop
imul
scas
mov
movsb
pop
xor
outsb
and
loop
lret
cwtl
js
nop
mov
pop
add
sbb
or
add
push
cmp
adc
js
cltd
mov
add
test
xchg
inc
notb
xchg
pop
clc
gs
jbe
cmp
test
lds
jl
or
or
hlt
dec
pop
and
add
xchg
lret
mov
add
or
addr16
in
push
cwtl
stos
add
rol
xchg
ret
mov
push
jp
dec
loope
aaa
sahf
or
pop
or
adc
and
popl
push
add
in
adc
mov
sub
jle
sbb
aam
cli
cs
add
push
mov
mov
sub
cs
jo
pop
cs
sub
xchg
adc
mov
js
adc
xchg
and
fwait
jle
add
dec
pop
outsl
mov
push
xor
add
xchg
lock
mov
pop
xchg
test
xchg
push
xchg
lahf
icebp
xor
daa
xchg
movsb
mov
pop
adc
inc
dec
ss
test
sbbb
fcoml
inc
test
stos
pop
xor
add
jle
fstl
jp
ret
in
rsqrtps
scas
mov
ds
pop
sbb
jnp
ds
pop
cmp
imull
inc
addr16
dec
jmp
loopne
jp
mov
xor
or
push
rcrb
sbb
in
dec
fnstsw
xor
and
hlt
push
lret
push
xchg
or
add
cli
xor
rcl
xor
stos
rorb
and
mov
lahf
and
insl
cmp
adc
jae
mov
aam
das
mov
mov
call
out
pushf
fisttpl
orb
push
or
jge
mov
or
mov
ljmp
push
pop
push
ljmp
xor
push
and
mov
xchg
pusha
jmp
int3
xchg
loope
fdivs
push
inc
xchg
mov
or
or
scas
sbb
sub
mov
xchg
pushf
shl
lock
iret
mov
imul
xchg
arpl
lret
push
popf
add
pop
mov
jno
out
adc
mov
adcb
xor
xchg
sub
pop
push
lods
xor
jb
movsl
out
inc
jae
popa
xor
test
and
gs
sbbb
rol
pop
xor
inc
pop
popa
inc
sub
and
bound
sub
pop
aam
in
stc
or
jmp
in
jb
jle
pop
aaa
movsl
add
dec
clc
push
out
mov
nop
int3
push
mov
popa
stos
jmp
jp
aam
xor
insb
or
in
jg
icebp
pop
in
and
pop
call
cmp
icebp
insb
sbb
pop
mov
es
push
pop
sbbl
inc
fcmovbe
outsb
sub
loopne,pn
dec
shll
rorl
jle
pop
inc
add
jb
push
mov
lds
and
fwait
jo
pusha
mov
outsb
inc
repnz
push
sahf
mov
scas
mov
cmp
mov
jge
ret
repz
nop
out
push
fildll
dec
cltd
push
push
mov
mov
fs
loope
clc
dec
mov
jecxz
je
push
mov
dec
sbb
lods
lods
xchg
roll
or
or
mov
out
cmp
push
xchg
leave
cs
inc
pop
push
cmp
ficomps
inc
cmovne
add
fmul
xor
bound
loope
inc
pop
pop
add
xor
outsl
cmpsl
pushl
and
mov
or
or
mov
add
mov
arpl
lods
stc
push
push
xchg
push
imul
cmp
movsb
mov
mov
imul
mov
lret
mov
das
jg
jns
inc
or
push
mov
outsb
inc
loope
fnstenv
rcll
adc
cwtl
xor
push
imul
push
addb
jb
les
arpl
int
lret
imul
push
leave
mov
loope
adc
push
rorl
jecxz
out
jp
jle
aad
nop
lahf
jnp
mov
cltd
fs
xchg
sbbb
je
push
mov
jecxz
fwait
hlt
xchg
dec
andb
pop
and
jns
fdivs
sub
push
fs
imul
or
rcl
in
out
loopne
dec
jmp
imul
mov
adc
jl
sub
leave
cli
or
outsb
pop
fnstcw
jle
adcb
cld
pop
repz
fnstcw
negb
cmp
ljmp
and
add
mov
push
imul
movsb
testl
dec
out
inc
sbb
and
mov
adc
rcll
dec
in
pop
or
ja
fistpll
pop
jns
std
testl
cmp
test
pop
push
xchg
add
cmp
mov
xchg
push
fsubrs
lods
jns
inc
mov
mov
add
push
adcb
add
inc
pusha
pop
xor
cmp
xor
stc
push
into
add
icebp
mov
out
push
xor
xchg
cmp
add
fnstcw
adc
mov
movsl
lahf
insb
fs
inc
dec
dec
pinsrw
fsub
inc
movsl
xchg
lcall
push
loop
cwtl
jo
js
pop
mov
xor
mov
or
cmp
imul
mov
gs
and
push
fsubr
jno
xor
sbb
ror
mov
xor
int
and
mov
sub
mov
inc
call
push
mov
js
and
inc
inc
xor
loopne
fcompl
cli
cs
push
dec
add
sti
push
scas
pop
or
clc
inc
fbld
loope
je
push
add
and
xchg
shll
daa
enter
test
pop
cld
test
popl
lea
jo
test
xor
into
cs
push
cmc
push
add
cmp
call
testb
adc
jne
enter
test
test
nop
sbb
loopne
or
jb
data16
xorl
cmpsl
outsl
dec
adc
fnstenv
mov
cs
inc
xor
inc
jecxz
lret
cltd
pop
mov
and
rorb
sub
sti
xchg
icebp
mov
cmp
fsubp
and
jns
pusha
stos
scas
mov
test
mov
xlat
out
sbb
add
jecxz
jb
and
sub
add
pusha
push
push
sbb
lods
hlt
xor
mov
mov
xor
dec
xor
fcmovu
mov
dec
outsl
andb
cmp
adc
aas
insl
lahf
repz
lret
cltd
or
lret
and
push
clc
cmp
add
or
orb
sbb
adc
inc
ror
add
scas
stos
rcl
sbb
or
sub
shll
pop
aam
call
std
enter
mov
xchg
cmp
add
scas
mov
or
xor
xchg
inc
ja
mov
mov
and
in
jne
les
lods
sbb
lock
stos
push
lock
sub
push
jns
mov
mov
adc
mov
out
and
jno
pop
pop
sbb
mov
fwait
rorb
or
lods
or
mov
add
mov
notl
jle
pop
adc
cmpsb
test
sub
test
lods
sbb
aam
cwtl
jg
inc
dec
bound
or
ds
adc
sahf
mov
subb
scas
fiaddl
inc
jecxz
ffreep
xchg
das
loopne
xchg
jle
dec
aad
sti
xchg
adc
ret
add
in
movsb
imul
adcb
aam
js
mov
enter
pusha
push
leave
imul
push
ret
std
mov
stos
jne
pop
cwtl
inc
jbe
loopne
adc
and
sub
and
mov
test
or
imul
dec
or
lret
and
dec
loopne
mov
arpl
testl
mov
sub
aaa
neg
negb
mov
jae
test
and
popf
call
pop
push
loop
cmp
lret
daa
jg
imul
adc
dec
jbe
adc
xchg
or
push
xchg
loop
push
jmp
das
mov
xchg
mov
jns
mov
jne
out
and
das
fucomi
fidivl
sbb
dec
cmc
test
fld
mov
sbb
mov
bnd
pop
mov
insb
in
push
ds
imul
push
push
fimuls
popa
lret
add
pop
movsl
and
test
outsb
xchg
or
sahf
xor
cmp
scas
mov
scas
es
dec
add
mov
dec
mov
push
pop
xchg
xchg
mov
adcl
fwait
xchg
or
cmp
add
adc
in
iret
xchg
mov
aas
fdivrp
dec
xchg
nop
mov
test
and
leave
cmc
sbbb
addb
xchg
cs
mov
into
jl
fiaddl
mulb
or
lret
jmp
jne
and
into
cmp
mov
pop
sbb
mov
scas
pop
movsl
test
jae
iret
pushf
scas
stos
andl
add
xchg
or
sbb
cmp
mov
leave
popa
add
mov
aaa
push
mov
cmc
outsb
stos
push
ficoms
lret
mov
insl
aaa
sahf
push
in
xchg
stos
sub
mov
fwait
bound
jmp
addr16
cmp
cmp
xchg
loop
mov
nop
inc
outsb
pop
call
sub
test
pop
dec
js
jp
push
and
out
movsb
aas
adc
fadd
cmp
test
sub
in
subl
xchg
xchg
mov
int
scas
out
shrl
cli
xor
mov
add
adc
fstp
jg
jge
test
inc
rol
and
or
cs
jl
adc
cmp
pusha
push
orl
mov
sub
mov
vpcmpgtw
test
dec
mov
push
loope
call
fucom
icebp
mov
inc
fnstsw
les
mov
loope
jne
push
add
mov
repnz
or
hlt
jnp
xor
mov
jle
pop
sub
sahf
push
pop
xor
mov
push
and
fcoms
popa
cld
sbb
xchg
into
dec
pop
mov
sbbl
xor
test
stos
sbb
outsb
mov
xor
inc
mov
cmp
pop
jb
stc
push
cs
call
inc
sbb
or
push
div
movsb
mov
xchg
xchg
mov
lds
xor
aas
mov
sahf
push
scas
shl
fnsave
imul
push
xchg
imul
into
cmc
mov
lret
adc
pusha
mov
jl
sub
inc
sbb
and
cmpsb
cmp
mull
cmp
and
scas
adc
mov
pop
cmc
loop
and
movsl
loop
lods
mov
push
xchg
sbb
dec
xchg
lods
inc
and
sub
or
adc
sbb
pushf
push
ljmp
and
decb
xchg
es
push
sbb
ds
rcrl
insb
cmp
call
push
add
bound
jle
cmc
pushf
inc
enter
adc
xor
notb
in
mov
cmp
push
outsl
lcall
mov
sub
jno
or
int
and
test
popf
cmpsb
jecxz
ds
jecxz
icebp
sub
mov
imul
jne
aad
in
cmp
mov
lock
xchg
loop
push
syscall
or
sar
dec
adc
adc
js
jl
data16
stos
in
movsl
xchg
mov
lret
push
cltd
add
pop
enter
icebp
nop
sahf
or
ret
fiadds
push
int3
cltd
fbld
enter
jecxz
and
inc
cld
mov
mov
fisubrl
lcall
xchg
jge
xchg
repnz
adc
rcrl
leave
in
inc
nop
jns
out
faddp
push
xchg
je
and
fst
test
fidivl
add
inc
sbb
jp
mov
xlat
inc
clc
leave
and
outsb
and
test
sub
ret
inc
rcrb
scas
ljmp
jp
rorl
add
pop
aas
cmp
xchg
mov
gs
and
lret
mov
pop
xor
jbe
add
hlt
arpl
and
nop
mov
jnp
daa
and
in
push
sbb
daa
stc
xchg
xor
mov
lds
cld
rorb
dec
jno
shr
add
inc
bound
or
lahf
enter
loope
out
jg
sbb
ret
push
fidivs
and
into
adc
les
out
lock
das
fsubrl
mov
and
mov
shlb
fimull
aas
and
adcb
ds
dec
push
pushf
fsts
lods
sahf
pushf
pop
loop
sbb
mov
cmp
mov
xchg
ljmp
adc
adc
mov
mov
adc
incb
sub
lock
xchg
pop
push
xor
popa
mov
out
test
cmp
push
adc
xor
shl
mov
mov
lock
dec
xchg
xor
xchg
push
dec
and
adc
xor
jno
cld
fsubrs
push
xchg
fwait
add
sub
sbb
or
adc
js
mov
jl
add
imul
std
pop
jl
pop
in
and
cli
in
mov
test
addr16
and
mov
aad
xchg
mov
pop
push
and
add
and
mov
pop
mov
inc
mov
add
rclb
lahf
add
sub
repnz
hlt
std
stos
out
out
xor
icebp
xor
sbb
fucomp
jge
xchg
fdivrs
sub
loop
sti
jo
stc
jmp
xchg
sub
lods
add
and
sbb
cmpsl
or
sbb
add
xchg
or
xchg
inc
push
movsb
bound
xchg
inc
insl
loopne
inc
pop
lahf
push
int
in
or
sub
mov
adc
sbb
jp
lea
adc
jbe
fildl
jl
cmp
xor
and
arpl
mov
mov
lcall
aaa
icebp
mov
jg,pt
sbb
dec
test
pop
cmp
in
loop
out
jmp
jo
mov
ror
out
int3
std
pusha
fadds
ja
and
out
clc
jnp
jns
xchg
mov
mov
mov
iret
les
test
and
push
sbb
icebp
rdtsc
ret
add
cli
dec
xlat
repnz
cmp
and
push
xchg
iret
or
lock
add
shr
in
jae
sbb
adc
popa
push
xlat
push
add
or
jb
gs
jle
add
adc
mov
jae
pop
push
aam
sbb
jns
test
ja
call
xchg
or
xadd
ljmp
xor
jecxz
mov
mov
mov
stos
imul
pop
and
imul
mov
jae
in
adc
pushf
bound
notb
adc
lret
mov
clc
std
sahf
stc
push
test
imul
aad
push
adc
dec
sbb
lahf
pop
scas
pop
sub
cmp
out
xchg
cld
push
lret
jb
pop
xor
rorl
ja
mov
pop
jmp
lods
and
cmpsb
push
jl
pop
sti
adc
xor
push
in
fdivl
int3
ffreep
cmpsb
pop
cmp
popa
inc
int3
fwait
leave
and
push
je
test
test
push
inc
lahf
lret
dec
cmpsl
jmp
add
sbb
sub
xchg
adc
sarb
mov
std
pop
mov
push
cmp
inc
mov
cmp
cmp
xchg
xlat
ljmp
mov
or
pop
lods
rorb
data16
pop
insl
jp
fimuls
cld
pop
sbb
scas
imul
inc
pusha
xchg
andl
xchg
loopne
fildl
loope
js
xchg
mov
pop
test
idiv
enter
sub
int3
lahf
es
ret
scas
dec
lret
pushf
sqrtps
adc
xor
mov
pop
arpl
mov
fadds
lock
cld
sub
lock
mov
js
popf
jo
shr
jl
hlt
test
dec
mov
mov
loop
xor
dec
dec
ja
bnd
or
sti
mov
inc
cmp
cmp
out
push
out
dec
jns
test
inc
xchg
aas
jno
add
pop
fstl
inc
inc
sbb
jbe
push
and
cmp
bound
pop
jbe
mov
sub
adc
cli
mov
lret
ret
movd
xchg
cvtsd2ss
adc
and
imul
mov
ret
sub
aam
pop
mov
popa
stos
pop
data16
xor
rcll
jle
fdivrl
push
and
xor
or
jno
and
pop
mov
pop
inc
lea
stos
test
and
int
or
fwait
ret
mov
mov
jbe
push
inc
test
insb
xor
adc
rcrl
jl
scas
clc
inc
and
or
rorl
hlt
mov
sbb
pop
sub
stc
xchg
or
pop
outsb
fisubs
stos
adc
cltd
gs
fsubrl
sub
ret
or
ror
in
aam
loop
ja
gs
push
mov
inc
cmpsl
pusha
mov
adc
daa
sbb
orb
inc
pop
mov
popf
in
rolb
push
movsl
fadd
leave
xchg
xorb
mov
ffreep
cmp
cltd
mov
sub
cmp
inc
stos
cwtl
jnp
mov
pushf
in
loope
daa
fdivs
rcll
pop
inc
pop
xchg
sub
sub
jp
sub
jp
arpl
jae
jo
xchg
cld
js
jno
imul
push
add
lcall
jno
mov
fisttpll
ret
lcall
testl
repz
and
in
pop
jo
popf
imul
and
xor
shrl
add
pop
pop
cmp
push
rcrl
or
cmp
and
mov
mov
adc
push
and
call
push
or
jp
fs
push
xor
dec
inc
add
inc
enter
imul
ja
inc
add
xor
mov
jae
cmp
pop
dec
xchg
jle
jge
dec
pop
sbb
push
pop
or
sbb
and
mov
sti
jae,pt
inc
int
pop
data16
shll
das
mov
push
int
push
inc
adc
adc
cmp
es
fistpll
bound
push
imul
dec
aaa
loopne
mov
mov
pop
sti
stos
mov
pop
and
dec
pop
fwait
xchg
stos
inc
dec
xchg
dec
add
mov
jo
sub
inc
mov
mov
imul
push
jge
xchg
dec
mov
scas
mov
push
daa
fnstsw
fldln2
mov
jbe
and
in
aaa
push
out
sbb
adcl
movsb
mov
fwait
popf
data16
enter
lret
jo
addr16
or
xorl
xchg
dec
push
jle
daa
cmp
outsl
imul
mov
outsb
sbb
add
les
insl
lahf
adc
dec
aas
roll
mov
jnp
aas
repz
push
cmp
repz
movsb
cs
sbb
xorl
jne
push
in
in
repnz
xor
xchg
jno
cwtl
insl
or
je
bound
inc
popf
fwait
imul
ds
test
dec
ffreep
lcall
pushf
mov
shr
push
push
xchg
dec
loope
aaa
pop
mov
dec
mov
shlb
fcmove
or
into
testl
sbbb
or
ljmp
push
aaa
cmp
scas
add
aad
inc
mov
mov
insb
dec
or
dec
mov
inc
outsl
push
jmp
fs
sbb
daa
fdivrp
scas
inc
or
leave
inc
daa
xor
xor
aas
mov
lds
push
xor
ds
mov
mov
inc
add
inc
mov
xchg
and
dec
mov
insb
hlt
cmp
inc
xor
pop
popf
je
loopne
mov
xchg
adc
addr16
and
outsl
xlat
mov
and
mov
or
mov
and
sbb
data16
dec
in
clc
push
int3
fs
movsb
dec
mov
inc
es
mov
mov
out
in
dec
clc
movsl
aas
outsb
jg
ja
dec
sahf
test
sbb
out
je
xor
test
shrb
rcl
repz
sbb
adc
jmp
inc
arpl
lods
into
int3
jns
mov
inc
iret
inc
aam
daa
mov
hlt
xchg
sub
fistps
cltd
pop
into
loope
dec
xor
inc
imul
and
pop
and
filds
ja
movsl
ret
cmp
sar
and
xchg
scas
aam
mov
xor
leave
and
push
fiaddl
icebp
cmc
adc
jne
add
scas
mov
popf
mov
or
mov
dec
inc
jl
icebp
and
mov
call
cmp
push
sarl
jns
ja
test
push
scas
lret
out
repz
mov
mov
xchg
dec
fldenv
sbbb
ss
out
cwtl
or
dec
and
jle
dec
xchg
add
jecxz
out
mov
daa
add
pop
mov
fldenv
push
imul
dec
jecxz
xchg
mov
mov
out
push
aas
add
stos
ja
popf
jne
call
adc
insl
jne
dec
ret
test
leave
je
lods
aaa
xchg
movb
push
adc
nop
mov
iret
stos
cmpsb
pop
adc
movsb
test
dec
mov
in
insl
pop
aam
push
aaa
push
dec
mov
cmc
stos
jno
jle
dec
popa
out
outsb
xchg
inc
jp
pusha
sbb
int3
leave
or
mov
mov
in
sahf
and
outsb
test
pop
add
negb
bound
out
jl
lahf
scas
jb
add
enter
out
rcll
sbb
add
addl
sub
loop
jnp
jp
clc
test
daa
jno
inc
pop
into
xchg
int
pop
xchg
sbb
aam
rolb
xchg
pop
in
mov
mov
or
xchg
jb,pt
dec
stc
mov
in
test
cmpsb
mov
je
insb
fcomps
sub
cmp
and
inc
sub
adc
jmp
scas
repnz
jle
ret
cmpsl
stos
jg
add
movsb
aas
outsl
jl
adc
cmp
in
mov
rolb
insb
loop
adc
sti
xchg
mov
add
sahf
xchg
pusha
or
push
jmp
push
js
scas
shrl
lods
scas
js
sahf
je
loop
iret
scas
add
jne
or
mov
cmpl
faddl
mov
out
xlat
xchg
das
mov
mov
imulb
cmp
jno
mov
and
or
sti
les
push
jno
rorb
mov
outsb
sbb
inc
ljmp
or
std
outsb
out
sti
mov
outsl
jb
adc
test
or
arpl
sub
testb
movsl
or
insb
repz
dec
out
into
inc
mov
hlt
jnp
cmpsl
dec
daa
cmpsb
addb
push
pop
pop
sarl
push
aad
nopl
dec
sub
mov
or
inc
in
shl
out
cmc
jae
les
cmp
mov
popa
xor
add
int
out
iret
add
jmp
lahf
push
cmpsb
push
inc
aam
fimuls
adc
inc
movsb
sub
lods
iretw
pop
fadd
daa
inc
adc
adc
dec
outsl
jl
lods
scas
movsb
imul
fimull
sbb
test
insl
shl
ficomps
mov
ss
cmp
les
cltd
jle
xor
in
enter
lods
js
jl
mov
jecxz
aam
and
add
insl
cmpsl
in
mov
mov
rclb
mov
mov
jle
pushf
ljmp
shrb
cmp
fistpl
mov
push
add
adc
mov
shl
data16
mov
daa
stc
mov
pcmpgtw
jge
mov
rolb
adc
ja
mov
getsec
xchg
repz
mul
and
cli
adc
fnclex
xchg
lret
jp
dec
inc
adc
stc
data16
mov
bound
inc
lds
inc
aam
mov
push
imul
jae
adc
aas
insb
loop
addps
or
roll
and
dec
pop
loope
out
stos
scas
inc
and
pop
dec
inc
test
cmp
out
movaps
hlt
xorl
iret
ret
out
fmull
jbe
push
andb
jns
mov
add
scas
vprotd
adc
aaa
cmp
dec
jecxz
test
jg
dec
sahf
jle
jbe
lea
lcall
daa
ficompl
fldt
sbb
cmc
cmp
icebp
cwtl
mov
inc
push
jbe
cs
mov
loope
lods
cmp
cmp
addr16
cmp
pusha
imul
xchg
loope
sub
xchg
adc
outsl
adc
mov
les
filds
mov
ja
fistl
lock
ret
sub
inc
bound
mov
mov
int3
sti
jmp
pop
sub
das
mov
mov
cli
int3
cmp
add
adc
in
ja
sbb
sbb
pop
rolb
pop
leave
dec
sbbl
cmp
shrl
out
dec
add
jge
rolb
dec
rorb
sbbb
mov
fs
pop
adc
adc
xor
xor
adc
mov
push
or
int3
lahf
mov
jae
push
or
std
push
xor
ficompl
dec
lock
jge
bound
push
dec
int
in
adc
ret
out
xchg
xor
and
ljmp
and
and
mov
lock
lret
int3
shrl
add
stos
or
out
pop
cld
aam
je
in
roll
jmp
mov
pop
xor
rol
fdivl
add
mov
shrl
sub
mov
mov
push
inc
popf
adc
rcll
xchg
add
out
hlt
cmp
mov
mov
and
jmp
nop
adc
push
add
scas
rcrl
xchg
jl
mov
push
sub
lret
ret
stos
stos
iret
popa
insl
add
arpl
mov
add
mov
aas
jmp
bound
int3
test
add
mov
scas
aam
mov
pushf
add
arpl
aad
jns
or
sbb
pusha
shr
xlat
sarl
add
js
imul
dec
out
pop
mov
cmp
gs
fidivs
push
mov
pop
roll
rolb
fstl
lock
ret
std
gs
cmp
push
push
frstor
pusha
sbb
lea
lods
and
inc
jge
cli
cmpl
jno
or
sarb
or
xor
push
insb
mov
cmc
inc
xchg
fadds
addb
inc
mov
jae
mov
fsubl
je
incl
xor
jmp
xor
push
add
push
stos
clc
inc
jmp
sub
or
dec
inc
jg
push
adc
dec
aam
mov
mov
jbe,pt
inc
scas
add
push
sub
in
xchg
xor
lret
sub
lock
clc
outsb
subb
lret
shlb
std
add
ja
stos
bound
lcall
neg
dec
shrb
lods
mov
push
xor
add
inc
or
mov
inc
jae
popf
xlat
fwait
and
add
mov
idivl
popa
aas
xchg
je
dec
mov
adc
scas
jp
jne
cli
or
and
and
es
and
pop
hlt
mov
push
psubusw
xchg
bndstx
sbb
and
dec
das
mov
or
xchg
pop
lea
sgdtl
sti
popa
pop
adc
sbb
lea
sbb
hlt
pop
jmp
test
enter
in
sbb
and
rclb
mov
or
call
inc
mov
insb
jp
fmuls
xor
outsl
mov
pop
lret
add
in
inc
lods
inc
aam
or
lret
insb
movsb
adc
ret
repz
add
test
enter
xor
lret
sbb
call
ret
or
es
and
scas
and
pop
movsb
out
loopne
adc
jae
adc
in
cmc
int3
xor
lods
jne
sbb
inc
jecxz
repnz
lock
into
pop
mov
nop
mov
cmp
push
mov
xchg
adc
sahf
lea
fiadds
stos
mov
sub
in
js
sbb
push
and
cltd
imul
rcrb
dec
jmp
out
add
orl
push
cmp
loope
adc
inc
add
add
dec
jl
daa
mov
icebp
jb
sbb
js
imul
in
inc
sbb
jg
out
pop
orl
push
cli
mov
pushf
insb
or
and
imul
lea
lock
stos
imul
movsb
xor
mov
xchg
sbb
or
fimuls
fstps
ds
pop
cmp
inc
out
dec
imul
ljmp
es
cmp
out
dec
mov
mov
mov
movsb
enter
or
stc
push
adc
mov
add
lahf
or
aad
add
sbb
out
negl
xchg
lods
ja
mov
cli
add
dec
int3
and
or
icebp
rcrb
xchg
out
pop
and
daa
xchg
lret
je
xchg
int3
jbe
arpl
mov
pop
jo
nop
pusha
sub
pop
jb
aad
pusha
repz
add
pop
push
ret
or
out
inc
or
imul
mov
fs
call
or
dec
movsl
mov
es
mov
dec
jg
jp
movsb
mov
cwtl
push
push
push
enter
dec
rcr
mulb
mov
add
stc
jb
push
scas
xchg
dec
shll
sbb
sub
stos
lret
movsb
mov
sbb
repz
inc
addr16
sbb
pop
push
or
jo
jmp
aad
sbb
mov
inc
int
xor
mov
dec
jg
aaa
pop
bound
gs
mov
out
test
pop
out
sti
imul
testl
outsl
adc
and
lahf
pop
sbbb
clc
sbb
mov
xor
cmp
inc
ds
pop
push
mov
add
pop
int
or
test
es
call
jmp
aaa
roll
shl
imul
push
sbb
jne
out
inc
cmp
inc
or
inc
jb
cmc
imul
clc
and
popf
mov
adc
pushf
ret
insl
imul
daa
push
ret
pop
dec
jno
pop
xchg
xor
sbb
arpl
sub
ss
inc
outsl
jbe
lods
stos
out
sbb
call
pop
sub
repnz
and
dec
cmp
icebp
cwtl
mov
cmp
add
movsb
dec
out
adc
test
das
mov
or
xchg
enter
mov
xchg
stc
les
adc
pop
mov
lret
sarl
xchg
shl
and
imul
in
fisttpll
and
es
xor
add
pushf
xor
movsb
pop
add
dec
or
add
jne
sbb
mov
in
out
push
dec
lds
call
test
aad
testb
scas
jle
cmpsl
adc
push
roll
jbe
jl
test
inc
push
inc
sbb
mov
fnsave
shrb
out
std
std
pop
rorb
inc
dec
pop
mov
cmp
pop
imulb
repz
mov
icebp
incb
xchg
addr16
add
aaa
push
lcall
sub
pushf
cmpsb
lods
mov
in
or
cltd
dec
inc
std
out
mov
repz
mov
xlat
pushfw
adc
int
les
push
shrb
stos
add
repz
cltd
js
push
fdivl
dec
mov
mov
push
inc
push
xor
sbb
lock
popf
mov
fsts
add
sarb
or
int
rclb
sar
xchg
outsb
inc
add
mov
loope
ret
aam
mov
movb
inc
mov
pop
cmp
testb
cs
es
push
cmpsl
mov
out
and
rorb
jo
push
mov
mov
mull
cli
insl
sarl
sub
mov
push
lcall
movsb
pop
movsl
pushf
dec
pop
cmc
mov
cmp
sub
dec
jns
xchg
xor
call
xchg
pop
cs
add
push
fldcw
das
ret
push
sbbb
aas
sub
test
and
sti
push
sub
shlb
jecxz
xchg
mov
push
inc
mov
divb
and
adcb
cmp
insb
add
add
xor
fildl
mov
adc
jecxz
icebp
leave
call
neg
mov
ljmp
cmp
test
cmpsb
leave
or
push
iret
lods
mov
jmp
in
mov
mov
add
aaa
xchg
arpl
insl
mov
sub
bnd
cmc
mov
mov
pushf
inc
es
xor
test
mov
mov
add
mov
out
gs
scas
adc
push
aaa
pusha
or
arpl
stos
decb
test
mov
insb
dec
adc
or
jle
sub
lahf
imul
in
aaa
mov
dec
movsl
xchg
pop
push
inc
push
inc
mov
leave
pop
out
