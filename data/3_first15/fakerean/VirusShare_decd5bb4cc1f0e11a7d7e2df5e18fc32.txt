sbb
add
mov
pushf
mov
add
cld
pushf
test
je
pop
cmp
cmpsl
xor
sbb
xchg
out
dec
fcoms
icebp
jl
adc
lret
pop
inc
fdivrp
adc
in
in
xor
push
mov
cmpsb
repz
adcb
add
ss
fs
jl
subb
sbb
mov
pop
lods
out
jnp
push
rorl
fwait
dec
out
lds
je
dec
int
jg
inc
std
or
lods
mov
stos
scas
xchg
or
adc
cmp
xchg
mov
jp
and
sar
xor
jge
adc
int
iret
mov
das
fsincos
dec
adc
scas
inc
lea
bound
sub
pop
lret
popf
push
xchg
dec
inc
jb
aaa
lcall
testb
jge
jmp
and
cmp
es
inc
dec
subb
ret
jbe
sub
fs
shlb
mov
jo
inc
fsubs
jne
lahf
push
in
xchg
scas
inc
lcall
jnp
mov
push
push
into
shrl
and
lock
add
pop
push
ja
cmp
iret
push
push
inc
cmp
mov
enter
jnp
pop
leave
or
add
and
xor
jne
test
mov
jbe
ja
cmp
cltd
and
dec
jmp
mov
es
outsb
pop
mov
xchg
sub
lret
clc
pushl
xor
push
ret
jge
addr16
cmp
call
les
adc
insl
inc
add
mov
test
adc
push
stos
popf
mov
arpl
push
daa
push
jp
jl
fs
xor
rcll
js
aaa
cld
mov
mov
fidivs
cmp
xor
fs
sbb
stc
fidivl
mov
jmp
mov
movsb
mov
jp
cld
test
mov
fiaddl
sbb
sub
scas
sbb
mov
icebp
adc
ret
mov
gs
mov
xor
adc
dec
xlat
and
dec
cwtl
std
fsubrs
and
push
clc
sbb
je
dec
mov
jle
xorb
adc
lahf
arpl
mov
movsb
shll
and
push
xchg
sbb
fs
call
or
fnstenv
xor
jne
mov
push
iret
jecxz
rolb
mulb
in
adc
pop
fsubl
mov
xor
sbb
mov
cmp
repz
pop
gs
std
cmp
imul
fldenv
push
adc
shll
mov
pop
mov
inc
testl
ret
clc
test
sbb
icebp
fs
loopne
dec
pop
inc
arpl
adc
mov
mov
je
stos
mov
or
cmpsl
sub
cli
sub
in
in
in
inc
testb
leave
iret
and
xor
sub
jg
pop
repz
xchg
mov
mov
fnstenv
fsts
push
jge
icebp
dec
pop
dec
das
adc
push
addl
xchg
cmp
sti
fidivl
cmpsb
insb
cld
xchg
xchg
scas
orl
or
stos
mov
mov
mov
fisttps
pushf
pop
cmp
test
xchg
popf
jne
push
xchg
push
pop
jp
daa
int3
lcall
not
xchg
ret
lods
vmovntdq
sbbl
mov
pop
pop
xchg
stos
mov
add
lds
lds
cmpw
mov
addl
shl
sbb
sub
sbb
cmp
mov
mov
les
push
mov
call
xor
sub
fisubrl
sbb
pop
fcmove
xchg
xor
out
mov
add
xor
jge
push
pop
add
scas
dec
push
inc
sub
jp
ja
loope
test
push
insl
and
xchg
pop
xor
rorb
add
and
inc
stc
jne
inc
inc
movl
jo
mov
or
out
shrl
enter
adc
sub
add
or
mov
push
xor
jb
inc
sub
test
insb
lahf
sub
pop
scas
dec
out
xchg
out
add
jg
jl
or
push
in
dec
and
add
sub
adc
xchg
sub
jp
and
lret
popa
fmuls
fldl
sub
push
repz
js
jp
push
scas
cli
js
sub
jge
sub
jmp
mov
mov
stos
cmp
lea
call
jbe
addb
xchg
xor
cmp
xchg
push
cmp
or
mov
loop
or
add
adc
pop
aaa
cmpsb
push
pop
push
pushf
clc
or
jl
cli
js
aam
push
push
out
daa
dec
aam
daa
mov
imul
stc
mov
xchg
sbb
lcall
push
push
into
mov
std
mov
cmp
cltd
jae
inc
mov
lret
mov
mov
cmpsb
dec
jmp
xchg
sbb
clc
notb
filds
mov
cwtl
mov
in
pop
mov
in
or
outsb
xor
mov
test
xor
push
add
or
ja
ret
fiaddl
aas
and
call
jae
ror
pop
mov
push
xor
sbb
cmp
jle
mov
jle
test
shrl
ljmp
mov
sbb
shll
xorl
mov
rcl
add
hlt
mov
notl
es
xchg
or
cmp
xor
mov
mov
push
jecxz
loope
xchg
sub
push
es
ds
adc
test
int3
scas
repnz
stos
mov
mov
pop
or
imul
stos
add
loopne
pop
dec
rcll
inc
xchg
jb
or
mov
fucomi
sbb
pop
cld
and
inc
pusha
xchg
lds
mov
aas
and
clc
stos
stc
das
cltd
scas
pop
jae
int
int
stos
pop
dec
pop
sbb
sub
and
cmpsb
xchg
lods
inc
fs
das
push
fcoml
mov
xchg
clc
out
pop
pushf
cmp
add
popa
sub
icebp
xorb
rcll
mov
std
mov
mov
lods
popf
mov
mov
mov
in
inc
mov
fidivrs
filds
mov
pop
nop
add
cmp
test
adc
ja
mov
ret
mov
xchg
push
push
xchg
testl
scas
test
aam
cs
in
lea
pusha
add
aam
push
sbb
outsb
cmp
lock
int
mov
pop
repz
fdivrl
mov
or
mov
xchg
nop
imul
xchg
loope
call
js
insl
mov
xchg
push
sti
outsb
leave
icebp
lret
or
push
lods
push
inc
lret
shrb
rcll
adc
add
adc
xadd
pusha
cmp
sbb
neg
xlat
popa
dec
xor
in
pop
xchg
pushf
mov
mov
out
xchg
aam
les
cmp
dec
lcall
pushf
aad
insl
in
aas
cmp
mov
push
push
sub
cli
push
leave
mov
xor
push
jns
or
and
in
push
or
repz
vshufpd
sbb
iret
jo
jo
xor
ja
ret
in
int3
inc
xchg
adc
push
push
pop
and
dec
dec
and
cmp
dec
dec
aad
or
in
inc
outsb
sub
pop
add
push
or
add
popf
lea
mov
cmp
shrl
stos
movsb
and
pop
adc
packssdw
or
sti
xor
insl
addr16
xlat
adc
sub
push
jmp
imul
pop
out
iret
pushl
or
add
insb
iret
adc
pop
bound
mov
call
rorb
cmc
int3
inc
aas
xorb
cmc
loop
movzwl
enter
add
subl
inc
pusha
xchg
test
jl
push
imul
lea
sbb
adcb
cmc
mov
cmpsb
imul
sbb
inc
lahf
in
jne
in
and
shrb
sbb
test
and
call
sub
mov
scas
out
cmp
dec
scas
in
jp
mov
cmp
adc
int3
mov
mov
popf
xchg
add
and
movb
mov
jbe
out
xor
outsl
outsl
xchg
sbb
ficomps
test
rcl
push
loopne
mov
mov
xlat
mov
outsb
mov
inc
fsubp
and
jg
cltd
lods
sbb
push
in
jo
cmp
repnz
adc
jmp
adc
ja
inc
ss
lret
push
ret
fldl
aam
mov
mov
inc
pop
rorl
cmpsb
jmp
mov
popf
nop
in
xor
lret
loopne
jbe
pop
movsl
mov
add
les
pop
cmp
pop
arpl
mov
mov
iret
rclb
mov
jbe
inc
push
gs
inc
mov
pop
iret
jg
add
inc
cmp
jmp
scas
jg
inc
jge
jl
jne
dec
sahf
lods
jl
inc
push
push
mov
pusha
or
push
das
into
xchg
dec
xchg
cmpsb
sbb
jmp
dec
fsubr
push
mov
sbb
add
loope
mov
iret
xchg
bound
mov
and
arpl
push
push
cmpsb
pop
movsb
push
xor
cmp
bound
iret
add
lock
gs
mov
fildl
js
stos
jp
cmpsb
mov
dec
cmpsb
imul
xor
inc
cmp
les
outsl
addr16
lea
ljmp
sbb
cs
subb
xor
mov
jns
mov
fwait
lods
mov
gs
or
add
jbe
mov
dec
push
addb
add
mov
sahf
hlt
stc
xor
push
movsl
add
mov
cmp
movsl
jbe
pushf
push
in
and
mov
add
ljmp
mov
push
sub
pop
sub
mov
addl
adc
dec
push
fmulp
pop
subb
stos
out
sub
xor
and
ss
loope
in
rorb
push
nop
in
cld
jl
popf
cmp
pop
clc
mov
jno
inc
das
std
mov
xor
out
lock
into
loope
fildll
jb
adc
push
stc
movsb
ret
in
test
pushf
mov
jmp
mov
sbb
sbb
jns
sub
jb
adc
lea
jge
add
cltd
mov
adc
ror
jmp
jno
push
xor
idivb
nop
sbb
movsl
sbb
fmuls
mov
adc
and
dec
test
imul
xchg
fwait
lods
sub
pusha
int
test
mov
stos
aaa
adc
push
fnstenv
adc
push
insl
out
outsb
mov
fbld
push
mov
push
jmp
xchg
sbb
inc
arpl
add
xchg
inc
push
adc
cmpsb
cmpsl
jp
js
es
cltd
pop
sti
xchg
inc
add
imul
dec
pushf
and
cmpsl
pop
add
mov
jne
clc
push
in
cmpsb
adc
sti
sbb
fnstenv
jb
icebp
insl
push
outsb
mov
push
push
jle
or
aam
lods
int
outsl
add
mov
stos
imul
xor
push
mov
das
pop
arpl
hlt
sub
lods
test
ret
xchg
fwait
sub
mulb
lods
into
stc
cmp
scas
pop
insb
movsl
ss
mov
push
cmp
jmp
test
dec
test
cwtl
dec
popf
ljmp
push
inc
jmp
rclb
roll
pop
xorl
dec
and
cmp
jo
adc
repz
stos
test
inc
sub
shrl
mov
je
mov
rcl
cmp
jmp
sbb
add
repnz
lret
stos
fisttps
out
lcall
leave
xchg
rclb
or
mov
mov
mov
add
push
cs
pop
loop
xor
scas
scas
cmp
sbb
jmp
movsb
xchg
jge
mov
imul
std
dec
insb
dec
jne
jmp
sti
imul
popa
cmp
outsb
cmpsl
sbb
icebp
inc
push
jb
aaa
pushf
popa
rcrl
aam
dec
xor
popf
rolb
out
stos
inc
adcl
lds
loope
cmpsb
cwtl
lret
xchg
scas
sub
test
adc
xor
mov
ret
les
and
xorl
loopne
ja
cmp
lret
add
aam
mov
xchg
add
cmp
mov
pop
adc
adc
mov
mov
xor
rcr
popf
ror
xchg
fisttps
pushf
sbb
test
cli
js
xlat
mov
cmp
fxch
aad
icebp
pop
test
fcmovnbe
or
in
adc
pop
pop
adc
es
xor
fistps
xchg
or
divl
movb
pop
lods
dec
imul
fdivp
loope
xor
xlat
push
or
dec
icebp
add
mov
xchg
dec
mov
ja
jne
pop
ss
enter
call
mov
jp
andb
fs
mov
lret
insl
mov
stc
js
push
adc
test
aam
fimull
push
popw
loope
cmp
xchg
call
insl
add
pushf
ss
jmp
adc
ret
insl
push
inc
add
jno
in
int
fidivs
and
popa
mov
incb
cmpsb
in
cmpl
xlat
inc
sub
sbb
roll
add
cli
xor
in
test
pop
and
xor
ret
pop
dec
push
insl
push
gs
fstpt
hlt
push
push
cmp
jmp
and
out
sbbl
iret
dec
pop
push
and
sub
gs
cmp
cmp
aam
adc
adcl
in
cld
testb
sub
and
push
fs
addl
push
xchg
ds
cmpsl
or
cwtl
addr16
pop
stos
inc
imul
dec
lods
addr16
arpl
mov
repz
push
add
push
in
mov
mov
popf
cmp
ja
ret
loopne
mov
stos
push
dec
xor
mov
mov
add
fcoml
dec
jge
fistps
sub
cmpl
test
mov
lret
xchg
fwait
iretw
pop
shl
lahf
push
inc
jnp
fwait
std
add
negl
jmp
sub
es
and
fstps
mov
loop
outsb
sarl
mov
mov
scas
inc
or
sub
out
leave
lds
dec
rcrb
xor
adc
and
sahf
sub
cli
movsb
jle
popa
xchg
jg
sti
das
outsl
jg
mov
movsb
mov
sbb
int
fadd
or
pop
adc
inc
mov
cmp
sarb
push
jmp
and
sbbb
push
xor
clc
xor
jecxz
dec
fildl
mov
ficoml
lods
xchg
xor
mov
jmp
sti
sub
mov
add
call
pop
dec
sbb
add
arpl
out
fs
push
popf
adc
adc
andb
mov
adc
and
push
pop
pop
adc
test
nop
cmp
xor
jo
cmp
shrl
lcall
adc
xor
sbb
sbb
mov
mov
sbb
pop
cmpsl
xor
xor
cmpsl
test
dec
addr16
rolw
fs
outsl
std
add
cmp
mov
jge
es
mov
dec
loope,pt
movntps
inc
adc
jmp
data16
inc
lcall
cmp
or
inc
add
jl
pop
outsl
pop
insb
out
or
rorb
pop
out
test
jge
mov
bound
sub
add
push
incl
jae
cmpb
int
addr16
dec
mov
mov
fcomps
adc
pop
lods
data16
mov
scas
mov
rclb
push
jp
ret
out
cld
pop
jne
js
and
adc
cwtl
jmp
lods
test
xor
enter
insl
add
xor
outsb
xchg
cmp
out
rep
leave
jo
adcb
jo
lret
pop
sbb
dec
cmp
test
bound
lcall
inc
sbb
cli
pop
stc
pop
aam
dec
lds
iret
mov
mov
adc
dec
pop
mov
iret
mov
mov
ret
dec
mov
stos
adc
xchg
sub
fadds
aam
add
dec
push
push
push
ficoms
lock
pusha
adc
adc
icebp
pop
lods
lea
repz
xchg
cwtl
dec
cwtl
jle
int
nop
mov
jmp
cld
dec
or
clc
xchg
iret
ret
sub
addr16
pop
xchg
inc
jecxz
xor
out
xor
sbb
jnp
ror
roll
dec
and
lea
mov
shlb
popf
push
sub
inc
outsb
adc
cwtl
addl
lahf
jmp
movsl
inc
xchg
pusha
in
stos
xor
push
lea
gs
jl
aam
lea
cmpb
pushl
cmp
mov
imul
les
xor
mov
in
inc
pop
cmpsb
ss
mov
cli
popf
leave
shrl
arpl
sub
adc
push
xchg
push
sub
ss
shlb
jp
lret
cmp
jb
sbb
mov
push
sbb
push
orb
cmc
mov
jbe
xlat
jnp
cmp
add
outsl
cltd
imul
das
movsl
xchg
dec
xchg
ret
cltd
lret
movsl
cmp
jnp
sub
dec
mov
stc
mov
in
test
loope
pop
dec
mov
in
lds
insb
add
push
pop
ss
gs
out
jecxz
sti
roll
jp
sbb
xor
hlt
xor
out
jge
icebp
xor
push
xchg
movsb
mov
popl
adc
ss
aaa
pop
cmp
mov
les
popf
mov
push
jg
into
aam
adc
cs
dec
je
test
mov
out
cltd
cmp
sub
sarl
test
movsb
xchg
cmp
rorl
jge
xchg
add
dec
stc
push
test
sub
dec
lcall
cmp
push
jg
push
inc
fldcw
imul
out
jns
adc
adc
and
shll
sbb
out
xchg
mov
xchg
je
in
push
and
icebp
call
in
addr16
clc
mov
sbb
push
and
mov
push
mov
mov
outsl
dec
into
xchg
ficomps
or
rclb
cmp
int
fistpl
loope
fincstp
mov
popf
ficoms
sbbb
pop
add
mov
push
das
xor
sbb
ffree
fisubl
stc
add
test
es
and
lahf
icebp
aas
jl
adc
and
sub
ds
cld
cwtl
adc
scas
and
and
mov
cmp
dec
mov
movsb
lock
and
ljmp
incl
mov
pop
inc
adc
mov
inc
cmp
and
int
enter
arpl
lods
add
cli
addb
sub
movsb
adc
out
bound
and
pop
dec
lret
sbb
mov
push
cmp
cltd
loop
es
push
or
sub
sbbl
mov
dec
lahf
popf
mov
pop
aaa
jno
mov
mov
add
ret
and
mov
mov
adc
or
jmp
sbb
pusha
ss
punpcklbw
push
mov
aas
gs
popa
cli
rclb
pop
xor
bound
cmp
push
stos
pop
lret
cmpsb
cmc
mov
arpl
push
pop
pop
movsl
mov
repz
inc
in
inc
xchg
fists
push
inc
loop
mov
flds
sub
lret
mov
rcl
xchg
das
push
movsb
jge
mov
dec
aas
repz
loope
pop
sbb
outsl
jnp
xor
test
mov
xchg
xor
stos
sub
mov
jle
adc
pop
notl
add
inc
ret
and
pusha
and
lods
sbb
lea
stos
clc
test
add
cwtl
dec
cmp
add
mov
std
mov
adc
test
imul
mov
or
lahf
mov
orb
loopne
pop
shl
mov
dec
pop
ret
mov
inc
mov
mov
adc
shrl
push
mov
dec
sbb
pop
test
dec
and
push
and
or
mov
xchg
popl
cs
mov
neg
in
cmc
sbb
pop
xchg
mov
outsb
call
lret
shll
daa
pshufw
dec
jne
cmc
mov
scas
dec
icebp
push
testb
clc
outsl
xor
out
dec
dec
jge
pop
cmpsb
sbb
push
mov
int
inc
push
cmpsl
and
xor
xor
mov
inc
or
cmpsl
cmp
sub
sbb
std
cmp
ja
sbb
scas
push
xchg
inc
shll
add
mov
jmp
and
push
jmp
sbb
mov
cmp
mov
adc
mov
xchg
out
in
and
lret
loopne
mov
out
incl
push
loope
and
subb
jp
adc
pushf
jbe
push
aas
cs
arpl
shl
xchg
inc
push
das
shll
add
mov
inc
pop
dec
loope
sahf
mov
xor
aad
cmpsl
and
jnp
add
mov
ficoms
orb
mov
les
leave
add
mov
in
mov
subl
push
mov
jnp
xchg
test
cmp
add
dec
dec
mov
sub
sub
jbe
cli
add
je
shlb
and
pop
ss
rolb
push
xchg
jecxz
bound
sbb
test
loop
cmp
incl
mov
or
shrb
out
xor
or
enter
mov
xor
gs
loope
js
scas
bound
int
adc
dec
rcrl
jno
lret
or
stos
enter
loop
fs
jns
mov
jb
imul
sbb
pop
mov
lret
popa
mov
jb
sub
data16
adc
xchg
inc
xor
mov
xchg
dec
adc
out
icebp
jle
and
sub
mov
jp
inc
dec
cmpsb
fcmovnu
in
lahf
mov
dec
lock
mov
testb
out
or
pop
push
dec
cmp
push
jl
vpaddq
jnp
jno
stos
pop
nop
jo
ss
push
div
fcoms
or
inc
cli
inc
jle
dec
stos
push
jmp
out
push
mov
fnstenv
push
stos
push
iret
add
aaa
add
les
jp
inc
icebp
mov
pushf
js
or
inc
pcmpeqw
sbb
lret
imul
in
xchg
mov
in
add
dec
sbb
dec
sbb
mov
rorb
pop
push
mov
loopne
xchg
lods
in
push
push
test
sub
jmp
push
sub
xchg
bound
cmpsl
scas
xchg
outsl
aad
pusha
imul
popa
add
mov
jb
xchg
bound
in
shll
cmp
jb
arpl
mov
aad
cli
scas
daa
cmp
jle
mov
icebp
xchg
stos
xor
out
js
push
xor
or
enter
jne
or
sub
push
fisttpl
dec
jnp
shrb
inc
jl
filds
and
mov
jle
jns
pop
jne
and
sub
jno
outsb
movsl
jne
movntq
sub
shrb
jns
push
push
xchg
fisubrl
icebp
mov
xchg
sbb
and
push
stos
jno
push
push
dec
push
pop
es
pop
mov
dec
mov
popa
xchg
in
sub
mov
push
lahf
and
cwtl
mov
call
repnz
loop
das
mov
adc
nop
outsl
outsl
or
cmp
dec
fsubl
fsubl
cli
sbb
jl
fidivs
xchg
inc
cs
jle
lock
fisttpll
cmp
cmp
push
lds
or
stc
je
dec
mov
cmpsb
jg
jns
inc
fs
or
in
mov
xchg
sub
insb
mov
incl
and
sbb
mov
cmp
mov
adc
mov
mov
test
rsm
xor
inc
dec
cld
movsl
ret
test
aad
pop
mov
dec
jne
movsb
sbb
or
and
mov
loope
psubsb
jbe
loopne
sub
daa
pop
scas
sbb
sbb
push
sub
push
push
adc
test
xor
sub
mov
mov
inc
jmp
in
pop
adc
jmp
push
jg
xor
xor
ljmp
out
ss
and
add
scas
mov
pop
add
lcall
dec
xor
add
outsb
pop
aas
add
mov
mov
cmp
xor
pop
or
mov
mov
jmp
movsb
outsb
push
imul
shr
jo
dec
adc
xchg
jbe
sub
mov
mov
icebp
jp
jecxz
insl
xor
mov
loope
cmpsb
lods
dec
fcoml
lods
jbe
cmc
add
in
cmp
mov
xor
jb
xchg
fwait
and
cmp
mov
imull
xor
out
push
pop
pop
pop
inc
push
ljmp
push
sub
cmc
out
jns
push
dec
inc
fwait
jbe
jb
pop
dec
xchg
sarb
insb
jmp
insl
push
and
movl
add
inc
shll
sbb
push
popf
nop
xor
push
pushf
jns
or
repz
push
lahf
add
lods
mov
aaa
jge
mov
cmpsl
mov
daa
pop
in
cmp
push
inc
add
mov
adc
lret
in
enter
movsl
mov
mov
adc
add
jbe
int3
mov
inc
sbb
mov
dec
sub
fdivr
scas
lret
shr
adc
inc
fisttpll
sarb
mov
inc
lock
aam
jmp
xchg
sbb
data16
inc
test
jo
rcll
cmpsl
mov
ljmp
xor
adc
insl
mov
mov
jmp
inc
dec
int3
pop
dec
pop
add
dec
pop
js
jae
dec
movsl
lahf
ds
fwait
cmpsb
push
das
movsl
roll
fcom
or
push
sbb
std
xchg
dec
insl
xlat
or
inc
in
jge
loopne
or
sub
xchg
andb
inc
out
icebp
cltd
out
cmp
les
divl
paddw
ss
fsubr
loop
mov
popf
sub
sbb
mov
lret
jle
sbb
stos
cmp
shll
and
ljmp
cli
out
push
push
dec
xor
pop
inc
ss
mov
adc
pop
sub
sub
outsl
arpl
rorl
dec
xchg
dec
inc
sbb
cmc
call
aaa
pop
mov
cmp
or
mov
sub
mov
mov
push
mov
add
mov
aam
popa
or
cmpsl
add
jne
push
bnd
pop
xchg
add
loop
daa
and
test
lahf
call
jle
mov
jle,pt
into
pop
sbb
jno
lea
push
iret
add
dec
mov
clc
sti
cmp
pop
daa
and
pop
std
call
or
fisttpll
and
call
sub
mov
jmp
insb
outsl
jp
xchg
call
mov
push
scas
mov
jb
pop
test
mov
jle
cs
jg
sub
insl
push
mull
repz
mov
cmp
mov
enter
jo
ret
xchg
les
cmpsl
int
in
sub
mov
je
push
sub
mov
cmp
mov
mov
rcrl
lahf
or
sbb
insb
shl
pop
push
add
imul
pop
xor
sub
push
add
xor
jnp
ret
dec
les
adc
insb
jae
test
jne
or
adc
adc
pusha
rcrl
inc
aas
adc
fisubrs
call
push
pop
outsb
ret
cmp
jmp
stos
pushf
movaps
loopne
lods
xlat
push
in
dec
and
jae
hlt
pop
mov
fisttps
push
dec
mov
and
pushf
jle
and
sub
or
jl
je
sub
leave
fstps
pop
adc
std
lods
pop
dec
jnp
xor
and
add
clc
repz
dec
sahf
dec
test
push
pop
mov
mov
inc
orl
into
pop
adc
add
ficoml
add
push
adc
mov
popf
cmp
and
add
cltd
test
xlat
or
add
push
sbb
xorb
pop
pop
pop
jo
push
pop
inc
mov
xor
mov
ljmp
jmp
mov
mov
xchg
push
jns
mov
inc
addb
mov
cmp
mov
xor
cmp
dec
and
mov
xchg
sub
xchg
das
dec
lock
mov
dec
iret
lret
repz
mov
nop
push
push
dec
cmp
xor
xor
inc
test
adcb
sbb
jl
add
lods
mov
sarl
and
data16
in
pop
pusha
pop
adc
jae
fistpl
mov
cmc
call
mov
mov
stos
rcll
imul
mov
sbb
jecxz
adc
mov
jl
ds
adc
mov
lahf
data16
sbb
mov
inc
and
pop
xchg
cwtl
xchg
scas
xlat
push
cwtl
mov
out
mov
sbbl
gs
js
lods
insl
clc
shll
adc
ret
cmp
mov
shr
or
shlb
int3
cmpsb
add
out
out
hlt
sbb
cmp
jecxz
lds
or
aam
push
jecxz
adc
dec
mov
add
push
icebp
fwait
ss
out
je
fisttpl
aas
loopne
add
cmpsl
scas
jbe
sub
pop
cmp
filds
mov
add
jbe
sbb
sub
add
arpl
inc
mov
lods
sbb
mov
xor
fdivp
insl
jno
in
cmpsl
outsb
add
in
stos
pop
cmp
sbbb
pop
sti
nop
cmc
clc
add
sub
gs
adc
in
add
rcrl
popf
insb
leave
sub
xchg
icebp
cmp
roll
dec
push
out
dec
dec
pop
hlt
leave
stos
pop
sbb
enter
jo
scas
test
insl
xchg
add
cmpsb
daa
out
xor
outsb
bound
sahf
ljmp
mov
lret
scas
int3
pop
out
fwait
icebp
xlat
daa
push
push
lret
pop
popa
inc
inc
es
popf
mov
push
arpl
int3
dec
in
xor
sub
sub
cwtl
hlt
pop
push
pop
scas
jle
push
pop
cwtl
lea
clc
repz
push
repz
lret
xor
dec
loopne
cltd
adcb
xchg
loope
test
add
aad
fs
xor
push
stos
cmpsb
add
jbe
add
mov
adc
pop
push
ficomps
adc
arpl
pop
loop
or
cli
imul
xchg
and
sub
test
rolb
sub
cmp
js
rcr
fstps
cmc
es
push
ss
jmp
jae
cld
cli
xchg
push
pop
xor
jecxz
push
jl
push
mov
mov
xchg
and
add
push
cmc
nop
repz
mov
xchg
mov
ret
xchg
sub
ja
aaa
jbe
xchg
cli
and
call
in
and
js
add
cld
sub
lcall
mov
sbb
xor
and
jmp
out
jae
mov
mov
repnz
or
jo
leave
cli
repnz
ljmp
lods
push
call
ret
sub
dec
pop
imul
inc
fmul
pop
ret
iret
push
push
les
push
sbb
sub
and
pop
test
jg
dec
cs
idiv
lock
nop
sbb
mov
push
andl
or
mov
rclb
out
sub
xor
push
fiaddl
movsb
add
sbb
ljmp
stc
cmc
addr16
and
fsubrp
pop
cmp
addr16
mov
add
dec
sbb
mov
ds
in
aas
out
or
mov
mov
insb
into
and
in
les
push
test
inc
cltd
pop
xchg
mov
dec
mov
in
int
xchg
lret
push
data16
mov
cmp
mov
icebp
lret
xor
xchg
mov
and
xor
sub
dec
lret
push
sbb
data16
inc
adcl
add
push
xchg
adc
jne
pusha
int3
subl
cld
sbb
aad
loop
lods
mov
xchg
push
xchg
sbb
rcrb
fidivl
xlat
movsb
jae
or
push
cli
ret
cltd
jno
aam
cmp
mov
daa
sub
js
fsub
ret
pop
mov
dec
repz
mov
ficoms
mov
dec
xor
xchg
fildl
or
push
cmp
adc
push
pop
repnz
mov
cltd
enter
jmp
arpl
ffreep
adc
mov
sahf
dec
ja
je
test
les
fs
xchg
sbb
data16
xor
dec
jg
sti
cmc
mov
mov
mov
scas
adc
or
ret
in
fmull
in
arpl
mov
stos
mov
cmpsb
mov
lock
movsl
add
daa
push
xchg
arpl
ljmp
xchg
lods
jp
sbb
rclb
daa
lods
mov
dec
sub
sub
push
and
sbb
sbb
pop
loope
or
arpl
inc
mov
sub
movsl
xchg
outsl
movsb
loop
push
test
xor
orb
pop
or
lds
jl
sti
inc
decb
movsb
adc
dec
out
push
ficompl
xor
pop
jecxz
xchg
repnz
fistpl
mov
ret
dec
insl
das
xchg
sbb
sbb
sbb
mov
add
xchg
push
lcall
or
sahf
mov
jno
scas
cwtl
mov
jecxz
push
cmpsl
xchg
pop
mov
dec
pop
int
push
icebp
xor
scas
jg
push
sbbb
test
pusha
sbb
add
out
sar
dec
jnp
dec
mov
push
adc
add
test
jnp
push
sti
inc
nop
and
add
pop
shll
and
fidivrl
xor
jecxz
dec
jge
lea
test
dec
push
lcall
xchg
outsb
adc
cli
rcll
sbb
nop
mov
sbb
addr16
gs
in
and
jae
or
jmp
aad
mov
mov
pop
pop
out
lea
cmp
mov
loop
push
jmp
cmpsl
mov
sbb
add
hlt
cmp
adc
lock
sbb
ds
pop
lods
adc
and
cmp
nop
cmp
jb
and
sub
js
outsb
and
loop
cmp
insl
xchg
mov
mov
push
sub
push
test
pop
stos
out
push
inc
sbb
push
and
movsb
push
push
std
jno
lds
mov
les
dec
out
adc
subl
ljmp
sahf
jno
cmp
in
mul
arpl
lahf
add
mov
push
and
loope
cmpsl
faddl
iret
int3
insb
mov
mov
fldenv
popf
xorl
push
daa
pop
sub
cmpsb
cli
cwtl
xchg
lock
daa
test
cli
dec
adc
pushf
pop
pop
dec
ja
aas
cmp
or
mov
inc
out
mov
cmp
push
fsubr
fcomps
xchg
pop
cmp
in
rolb
outsl
loop
lods
mov
int
sub
test
pop
daa
and
out
mov
pop
mov
in
jg
ficoml
jmp
jo
xchg
fs
mov
cmpsl
ds
sbb
adc
in
adc
and
movsb
mov
daa
and
xchg
lret
lock
dec
call
mov
jb
push
insb
pop
xchg
fdivrl
lcall
shrl
das
jl
or
imul
lods
cmpsl
es
rcll
sti
and
stc
lcall
pop
sub
sahf
movsb
jo
adc
sub
mov
daa
cmp
adc
scas
popf
andps
or
scas
adc
xor
sbb
xchg
loopne
cmpsb
sub
movsb
popf
loope
jb
cld
adc
stos
add
jg
sbb
shl
jo
inc
add
jne
and
and
add
fcomip
mov
or
dec
addr16
movsb
fwait
inc
cmp
in
lcall
mov
test
loop
mov
testl
rclb
mov
mov
sub
jge
xor
icebp
lahf
imul
pop
lcall
cmp
repnz
pop
xor
inc
add
or
sub
ret
or
lret
xchg
pop
lahf
mov
mov
movsb
inc
mov
clc
lret
pusha
ja
test
or
mov
sub
push
arpl
inc
push
fisttps
fnsave
imull
dec
or
ret
add
clc
push
xor
ret
adc
sub
cltd
cmp
adc
mov
int3
arpl
push
cmp
xchg
or
add
in
outsb
paddusb
sub
jecxz
and
inc
pop
xchg
fwait
xor
sarl
stc
jl
push
fisttpll
cmp
mov
ljmp
push
mov
cmpsb
or
pop
dec
dec
jecxz
das
andl
mov
mov
and
xchg
xor
or
adc
lods
sarl
cmp
adc
and
adc
lea
pop
pop
je
xchg
and
mulb
or
inc
ss
pop
int
cmp
imull
cld
inc
sti
pop
lahf
cmpsb
lds
movsl
add
fwait
leave
cmc
inc
aas
addl
das
xor
clc
sub
mov
aaa
pop
roll
xor
fdivrp
xor
int
xor
je
pop
arpl
fwait
inc
ds
es
lret
sub
test
dec
sahf
fs
inc
pop
rclb
xchg
inc
and
shlb
push
ljmp
lock
or
sub
into
sbb
addr16
aas
aas
mov
mov
jns
mov
out
adc
lds
inc
sub
bound
adc
mov
pop
mov
mov
pop
stos
outsl
and
fsts
mov
cmp
inc
jl
jl
pushf
mov
pop
mov
clc
adc
fdivrp
aam
bound
dec
jg
shlb
mov
in
js
aas
sbb
iret
sbb
push
and
addl
subl
je
cmp
pavgb
xor
mov
mov
popf
sub
sbb
or
stos
femms
dec
popa
pop
inc
xor
xchg
pop
int3
xlat
lds
or
lea
sti
bound
mov
jnp
and
push
punpckhbw
aam
insb
adc
shrb
lea
xchg
xchg
cmc
dec
sti
push
aad
mov
jbe
adc
bound
ss
xor
jne
cli
push
mov
dec
nop
adc
cmp
cwtl
jno
stc
shll
fbstp
sbb
xchg
imul
es
adc
aaa
les
and
adcl
mov
pop
ja
imul
ljmp
sti
push
xchg
sahf
cwtl
movsb
aaa
sahf
pop
push
outsl
aas
push
lahf
push
sbb
adc
adc
mov
mov
in
orl
rcr
mov
push
std
sbb
xchg
dec
fidivl
dec
mov
aad
stc
pop
mov
pop
lds
test
mov
and
push
dec
jmp
xchg
sbb
dec
out
jle
imul
or
repz
cmpl
mov
ds
cmp
lret
cmc
jbe
push
das
roll
pop
jo
movsl
xchg
dec
or
mov
mov
xchg
add
jno
xchg
fadds
in
int3
mov
push
dec
xchg
decl
xor
push
daa
or
adc
mov
test
push
rorl
lea
sbb
repnz
dec
imulb
daa
fldt
lret
ljmp
sub
mov
repnz
dec
cmp
mov
jo
lods
rclb
add
jp
out
fldenv
pop
push
jae
mov
mov
fcomps
mov
mov
mov
stos
jns
loop
xor
ljmp
sarb
outsl
mov
and
mov
inc
cmpsl
outsb
dec
mov
lods
enter
or
push
mov
repz
mov
cmp
mov
cmpsl
pusha
cli
out
rcll
outsb
lcall
add
adc
fwait
jecxz
jmp
shl
hlt
dec
cmpsl
jl
fisubs
pop
adc
mov
mov
xor
popa
stos
push
repnz
ja
adc
lea
push
sub
aaa
shrb
movb
add
or
dec
xor
mov
cmpsl
jae
sbb
data16
add
les
out
sub
vmread
psubusb
lea
dec
ja
jne
mov
loopne
xchg
xchg
and
dec
out
jge
mov
inc
loopne
inc
out
pusha
push
lds
cmpsl
mov
imul
stos
dec
xchg
ja
jecxz
xchg
arpl
call
dec
mov
cmp
rcll
pop
xor
cmp
ljmp
dec
pop
outsl
subw
sbb
fsubrs
fiadds
test
dec
xor
dec
cmp
pop
iret
cmp
jl
js
dec
int3
add
xchg
or
inc
cmp
mov
in
cwtl
or
clc
mov
mov
cmc
pop
pop
ffree
ret
aad
sbb
pop
mov
inc
push
inc
mov
push
pop
das
lret
lea
push
jl
dec
mov
rcrl
fdivrs
stos
adc
gs
adc
and
mov
popf
imul
cmp
stc
lea
xchg
adc
in
pop
mov
xor
js
shll
jge
fsubl
mov
mov
cmp
mov
jns
loope
xor
insb
xlat
imul
inc
repnz
fcomp
mov
mov
fwait
and
xchg
jecxz
insl
mov
or
fwait
gs
jns
ret
jo
add
leave
and
in
cmpsb
jae
mov
call
and
add
cmp
hlt
mov
mov
push
cwtl
outsb
scas
mov
js
mov
or
and
paddb
jns
rcl
loope
sahf
sbb
jl
xlat
imul
mov
outsl
pop
jp
adc
mov
enter
mov
pop
fildll
cmp
push
out
test
gs
and
mov
mov
add
mov
xor
lfs
in
jl
jg
icebp
jp
ja
mov
negb
mov
fldt
repz
daa
and
test
lds
je
cld
sub
mov
cmp
push
mov
rolb
dec
fmuls
push
test
std
mov
lea
rorb
or
push
pop
push
xchg
fstl
cmp
push
add
mov
jp,pt
inc
jno
les
cmp
bound
in
xor
and
mov
mov
adcl
test
test
iret
mov
gs
and
imul
jmp
push
daa
xor
and
xor
imul
dec
jmp
sub
jmp
mov
fs
add
mov
and
arpl
push
aaa
add
jns
sub
stc
and
adc
cmc
and
cmp
jb
inc
jo
ret
push
inc
ja
daa
lcall
aad
or
lahf
add
xor
enter
daa
jle
mov
outsb
fstpt
rcrl
xchg
es
and
pop
mov
in
mov
mov
mov
std
and
popf
jbe
jmp
cli
dec
je
mov
imul
iret
dec
div
jne
xchg
sahf
mov
dec
aas
int3
push
mov
jecxz
jns
xchg
insl
scas
loop
xchg
xchg
xchg
jle
shlb
loopne,pt
xchg
dec
jecxz
mov
dec
pop
sbb
leave
jl
push
negb
mov
arpl
fadds
bound
or
in
fisttpll
daa
sub
clc
loope
lock
sub
dec
and
insb
sbb
popa
imul
ss
jno
sub
ja
xor
mov
mov
push
add
inc
mov
icebp
mov
popa
push
imul
insb
mov
fidivs
repnz
sub
sub
out
js
sub
ja
dec
sbb
dec
mov
cmpsb
xchg
int3
xchg
push
into
aam
sub
in
pop
mov
scas
scas
pushf
out
lret
add
lcall
inc
jns
sub
ljmp
pop
dec
and
sub
xor
mov
cmp
add
fldl
stos
subb
and
pop
lcall
cli
insl
das
rclb
cltd
ficoml
jp
mov
cmp
das
ret
dec
jbe
or
add
sub
inc
inc
cmp
pop
leave
cmp
push
stc
popf
aam
std
sbb
push
xor
dec
shll
xor
aas
sbb
pop
orb
sbb
popw
int
int
in
repnz
push
loopne
adcb
mov
jl
fmul
mov
sahf
push
mov
mov
hlt
sbb
xchg
daa
sub
jmp
or
xlat
mov
sahf
mov
adc
cmp
cmc
loope
add
pop
rcll
mov
xor
inc
js
jae
lret
jge
sub
out
test
scas
outsl
xchg
or
adc
sub
push
ret
dec
leave
push
out
jl
and
mov
cmp
stos
dec
imul
mov
sub
lcall
sahf
in
xchg
xor
dec
gs
cld
gs
inc
cs
int
add
cltd
rcrl
bound
sbb
adc
imul
in
inc
adc
aad
sub
dec
mov
pop
dec
mov
dec
pushf
sbb
in
and
xor
push
or
insl
push
ds
or
subl
dec
cld
dec
hlt
movb
dec
aam
mov
and
mov
cmp
xor
mov
in
imul
scas
pop
mov
xchg
stc
jae
clc
xchg
push
shr
dec
mov
jb
adcl
fnsetpm(287
test
xor
adc
jl
sub
repnz
mov
push
scas
repz
jmp
push
xchg
xchg
sbb
mov
sub
dec
stos
cli
test
aas
ret
pushf
add
sub
mov
pop
xor
sbb
jle
cmp
fisttps
fimull
jns
idivl
in
adc
outsb
shll
imul
int
fwait
icebp
jmp
pop
jbe
stc
mov
je
xchg
pop
jae
out
xor
sbb
adc
inc
mov
addr16
dec
pop
adc
in
int
fcmovu
call
mov
aaa
jp
lods
dec
pop
adcb
add
or
push
sarl
into
int3
fdivrp
and
frstor
inc
cltd
dec
out
and
popf
leave
pop
dec
repnz
jecxz
sbb
push
out
jbe
xor
and
int3
push
push
test
sbb
icebp
outsl
or
ljmp
sbb
mov
jle
push
sbb
cwtl
test
cmp
loop
ror
sub
jnp
sbb
adc
mov
jae
addr16
jmp
cmpsl
jne
push
mov
dec
in
inc
pop
adc
mov
adc
fistl
movsb
popa
jo
or
pop
inc
jg
loopne
fsubrl
stos
test
mov
out
mov
pop
sbb
ja
loope
sbb
mov
popa
insl
jmp
mov
fnsave
jb
push
inc
test
loop
ret
scas
dec
cmc
inc
sub
fucomi
sti
sbb
shlb
out
mov
xor
xchg
jnp
pushl
mov
dec
and
cs
adcb
imul
lcall
inc
lods
inc
dec
lea
add
cmp
mov
jp
jno
push
jmp
hlt
push
fmuls
jo
jne
add
xchg
push
std
xor
adc
jmp
sub
nop
sbb
jb
dec
test
and
imul
fdivrs
es
adc
mov
mov
bound
jmp
ss
shl
in
loop
mov
cmp
lea
loop
into
jbe
cmp
xor
sbb
fidivrs
ja
jecxz
sub
jmp
jmp
adc
mov
push
jp
cmp
jecxz
pop
int
in
push
aam
jle
lods
enter
and
mov
enter
push
cwtl
dec
stos
cli
lods
bound
sarl
inc
cld
popf
xchg
lods
push
mov
das
fwait
jle
in
dec
xchg
stc
stc
mov
ljmp
clc
mov
paddusw
xor
mov
fldenv
call
movsl
stc
dec
ja
add
or
aam
jle
jge
or
mov
xchg
xor
pusha
je
mov
lea
dec
xor
mov
enter
xor
pop
and
add
fbstp
dec
inc
dec
sub
adc
scas
push
nop
push
or
mov
or
es
lret
roll
decb
popf
bnd
push
and
pop
sub
adc
shr
sub
sbb
aam
inc
mov
or
or
fs
add
xchg
sti
xor
mov
adc
mov
add
daa
jg
lods
inc
mov
dec
bound
cmc
sub
lds
add
and
rcll
xlat
jg
je
pop
push
ljmp
js
cmp
xlat
dec
sarb
test
pop
adc
push
sub
nop
ror
sbb
xchg
ss
cwtl
mov
cmpsb
mov
add
or
inc
int3
mov
dec
and
cld
adc
int
or
sbb
sbb
pop
in
push
or
and
test
iret
mov
mov
add
clc
adc
mov
mov
mov
int
pop
mov
jbe
outsl
xlat
or
and
out
fwait
jo
add
aas
out
inc
pop
jmp
lcall
dec
add
cmp
jno
repnz
mov
jnp
jns
hlt
mov
aam
or
add
sbb
outsb
sub
in
sahf
sbb
inc
add
loope
jp
jne
sbb
outsb
lret
and
pop
or
mov
push
fiaddl
addr16
cld
mov
push
sbb
out
lcall
fnstenv
mov
or
xchg
test
jl
sub
fwait
adc
push
and
cmpsb
mov
mov
cmc
movsl
xchg
fidivs
aam
mov
cltd
mov
mov
xor
daa
pop
jo
xchg
mov
aam
xchg
and
out
lods
mov
je
lods
pop
pusha
in
adc
sub
mov
cmp
mov
dec
pop
mov
jb
jge
icebp
out
arpl
push
add
or
sub
sbb
push
mov
jmp
adc
push
push
xchg
in
int3
push
gs
arpl
out
rcll
cmpsl
icebp
pop
adc
fwait
cmpsb
fwait
sbb
adc
jmp
xor
adc
mov
pop
fistpl
sub
cmp
outsb
movsb
sti
pop
cld
imul
ret
or
data16
mov
in
mov
pushf
xchg
jg
mov
jmp
push
push
fldcw
ret
or
jge
js
fmul
pop
cmp
cmp
xor
push
lds
xlat
jno
pop
pop
dec
and
outsb
dec
out
mov
arpl
cmp
mov
stos
fidivs
into
cmp
stc
int
popf
inc
loopne
cli
xor
xor
mov
lahf
jo
icebp
lea
or
sub
or
sbb
fdivrl
arpl
sbb
xchg
mov
imul
mov
mov
ror
jns
pop
cli
sbb
adcl
mov
imul
test
sub
sub
in
shrb
adc
mov
cmp
sbb
movl
test
xchg
mov
xchg
mov
icebp
inc
and
test
movsl
adcl
push
xorb
aas
movsb
inc
dec
inc
rorl
cmp
fcomps
arpl
lods
ret
adc
sub
push
sub
fstps
bound
bound
vpunpckhdq
outsb
lcall
pop
rcrl
dec
cs
sub
pop
inc
in
mov
rcr
sub
cmp
or
mov
pop
out
lods
push
das
or
mov
inc
aad
cli
sti
xor
enter
push
pop
or
insb
xchg
adc
mov
push
mov
adc
insl
pusha
ja
cmp
push
daa
mov
loop
dec
push
out
cmp
ficoms
dec
push
cs
push
fistps
sub
mov
test
repnz
dec
xchg
sahf
icebp
and
dec
fisttpll
outsl
xorl
icebp
idivl
icebp
lds
mov
xor
cmp
xchg
dec
pop
push
loop
xor
shll
jmp
push
leave
jmp
jbe
jbe
call
rorb
and
lret
inc
mov
push
stc
mov
dec
or
dec
fisubrs
jl
dec
fnstsw
mov
pushl
mov
xchg
in
cmp
shrl
fs
leave
inc
cltd
jmp
into
mov
lods
iret
mov
sub
sbb
pop
xchg
rcrl
and
outsb
je
aas
push
movsl
add
fisubrl
mov
add
adc
mov
lock
lret
in
jbe
inc
dec
test
pop
call
gs
fwait
cmpsl
push
mov
loop
lods
gs
rolb
push
insb
sub
sti
packssdw
xor
adc
jg
out
adc
mov
cmpsb
fadd
das
rcll
mov
adc
cmp
aad
mov
scas
add
outsb
add
jge
lds
test
out
mov
sbb
popf
or
fisubl
mov
popf
aas
xchg
stos
jg
sbb
enter
and
movsl
pusha
ret
cwtl
jne
and
out
xor
push
idivl
mov
jg
ja
lods
shll
call
sub
sbb
fs
stc
add
je
sub
or
xchg
ss
push
lcall
mov
or
cmp
adc
add
int3
mov
out
rorl
adc
incl
push
and
and
scas
flds
cmp
jecxz
xchg
cmp
rcl
neg
mov
mov
in
pusha
fxch
out
add
mov
jmp
and
xchg
dec
icebp
scas
imul
dec
inc
mov
mov
mov
jae
mov
cmc
mov
jno
mov
pop
push
test
bound
loop
mov
jp
or
sbb
adc
add
add
fisubrl
pop
xchg
mov
or
or
cmp
jb
repz
cwtl
cmp
in
xchg
jle
sahf
out
pop
mov
outsb
test
sub
adc
lret
stc
cmp
mov
xchg
outsl
jl
and
rcll
test
push
daa
jno,pn
adc
aas
mov
repz
ss
push
jp
into
aaa
dec
sbb
push
iret
mov
add
adc
in
jle
aas
mov
inc
mov
fldenv
je
and
icebp
roll
enter
xchg
hlt
aad
xchg
aas
push
xchg
jle
ds
sbb
xchg
imul
pop
sub
sahf
ret
adc
mov
rcrb
mov
stos
sub
push
insb
fistpll
cli
push
mov
ds
das
mov
sbbb
movsb
nop
mov
cmp
mov
xchg
test
sub
out
push
push
and
cli
push
cmc
xchg
jnp
testb
outsb
cmc
test
das
xor
xor
jmp
iret
pop
xchg
add
test
stc
lock
je
fnstcw
addl
xchg
or
movsb
ss
insb
sar
pop
xchg
dec
xor
push
frstor
pop
add
xchg
pop
leave
pop
movb
bound
movsl
nop
nop
adc
and
fists
in
or
gs
sub
outsl
dec
call
xchg
lahf
or
xorb
notb
out
sbb
mov
sub
lret
jle
movsl
mov
or
mov
loopne
leave
iret
mov
aas
cmp
js
xchg
and
xchg
outsb
add
mov
mov
push
adc
jo
imul
iret
sahf
sahf
sbb
mov
and
aam
imul
inc
or
xchg
inc
test
lea
or
lret
test
mov
sub
push
lods
xchg
pop
mov
cwtl
sahf
fdivrs
xor
push
leave
cmp
into
daa
push
loope
mov
rcll
mov
test
lods
ss
lock
scas
push
loop
mov
and
jne
xor
push
fisttpl
and
je
je
mov
arpl
pop
loop
sbb
sbb
test
push
fucomip
and
stc
orb
sbb
xor
sub
mov
repnz
dec
out
push
mov
jne
sbb
loope
pop
popa
add
outsb
std
sub
test
lret
jns
pop
dec
xlat
pop
inc
aaa
cs
in
mov
dec
pop
imul
cli
sbb
fs
fnstenv
sbb
pop
cmp
std
andb
lahf
mov
push
cmc
lret
fmull
ja
repnz
lods
pop
push
dec
repz
push
jbe
adc
add
sbb
inc
mov
jmp
das
jae
cs
push
insl
jmp
dec
mov
or
add
enter
or
js
cmp
fsubs
push
popa
sahf
int3
sarl
loopne
loop
jns
inc
repnz
jmp
aaa
add
push
cmp
mov
dec
daa
pushf
cmpl
cmp
jo
ret
add
int3
xor
out
cmp
jl
push
je
jp
mov
shrb
scas
push
mov
and
or
cs
xchg
lods
xchg
and
or
cltd
sbb
lahf
mov
shlb
adc
dec
dec
or
xchg
sbb
pop
cmp
adc
mov
fstpl
sbb
push
adc
cmpsl
inc
lcall
jge
xchg
cmpsb
mov
cmp
mov
sbb
push
insl
fcmovu
adc
push
inc
pop
fnstcw
pop
jne
ret
ds
outsb
jmp
mov
shll
or
cmp
inc
add
dec
in
arpl
mov
stos
mov
and
pushl
shr
bound
sub
fisttpll
mov
int3
movsl
sbb
pop
lcall
in
ljmp
hlt
lds
mov
mov
enter
adc
lcall
push
iret
pop
xchg
fisttpl
shll
setns
call
push
mov
das
cmp
cmp
ljmp
add
cmp
cld
data16
adcb
jecxz
lock
cld
cmp
jnp
mov
dec
cwtl
std
ljmp
sub
std
mov
sub
push
sbb
cmc
cmp
jnp
lahf
sbb
pop
sub
test
aaa
aaa
push
sbb
sbb
xchg
or
addr16
jnp
mov
mov
mov
shlb
popa
dec
aas
jae
dec
sbb
pusha
dec
out
add
nop
sub
add
mov
arpl
ss
inc
mov
sar
mov
imul
shl
and
mov
fdivrl
sbb
cmp
clc
les
std
test
jle
call
fcmovnu
cmp
cli
lret
xchg
mov
cmpsl
fsubr
mov
imul
xchg
sbb
push
icebp
sbb
sub
mov
jbe
out
cli
in
sbb
scas
jg
xchg
cmpsb
ljmp
mov
add
sahf
xor
jle
aas
add
xchg
pushf
shl
sub
add
divb
jae
cs
lahf
mov
sub
or
movsl
test
daa
fidivl
lods
repz
mov
jno
mov
mov
sbb
inc
xchg
xor
popa
pop
cmp
mov
fwait
testb
xchg
fsubrl
in
lcall
aam
sbb
rcl
fcmovnu
push
jmp
shrl
js
mov
sub
inc
mov
cmc
sub
cmp
push
sbb
sbb
jno
cmp
out
lea
lcall
lret
or
and
sub
and
xchg
and
outsb
cmpb
push
add
mov
outsb
pop
fstps
test
lret
adc
jb
xchg
fs
repz
cmp
stos
sub
nop
loop
divl
test
mov
fwait
sub
xor
es
sbb
pop
adc
and
fld
dec
imul
xchg
js
and
call
mov
adc
repnz
or
dec
cwtl
mov
int3
arpl
test
insl
out
dec
mov
dec
test
inc
test
and
in
mov
rcl
lcall
scas
push
and
mov
xchg
xor
mov
lock
loopne
xchg
arpl
stos
and
sub
js
not
xchg
inc
notb
int
in
insl
jb
jae
or
aam
pop
mov
ja
mov
xchg
lods
jp
ds
jmp
xlat
xchg
jne
fdivs
sub
push
outsb
inc
cmpl
mov
dec
xchg
mov
jb
adc
push
xchg
mov
mov
jno
test
xchg
iret
dec
sub
mov
repnz
lea
mov
test
aaa
in
pop
aas
or
aam
jns
repz
aad
test
js
rolb
inc
clc
xlat
jmp
sahf
mov
pushf
push
in
lahf
sti
lret
mov
sti
pop
scas
push
mov
popf
mov
syscall
mov
lods
fdivrs
add
iret
pop
je
lcall
daa
fnstcw
std
inc
loop
bound
push
pushf
xchg
add
add
push
and
ja
aaa
add
push
jge
xor
push
ficompl
imulb
sbb
pop
xchg
sub
stos
sbb
jmp
pop
mov
inc
pop
xor
sbb
xchg
xchg
out
rorl
jno
xchg
das
ret
popf
lock
mov
sahf
jl
punpckhdq
pop
pop
mov
idivl
insb
gs
hlt
xor
das
test
dec
mov
fildl
add
ret
cli
jb
push
insb
lret
sahf
or
inc
rcr
mov
cmpsb
xchg
mov
aam
pushf
fs
ss
pop
frstor
push
fnsave
int3
jne
popa
jno
pop
dec
shrl
adcl
loope
jne
lods
out
lcall
adc
ret
mov
inc
push
sub
fbld
pop
incl
aas
leave
lods
pop
mov
cmp
push
adc
gs
mov
adc
xchg
xchg
into
push
cmp
xor
mov
xor
inc
push
and
adc
jne
push
add
insl
cli
cmp
cwtl
sub
mov
mov
lock
add
xchg
dec
add
push
pop
test
mov
stos
cmp
loop
mov
xchg
mov
mov
mov
test
push
fidivrs
or
mov
cltd
into
shr
stos
cmpsl
fbld
xor
push
insb
daa
mov
xchg
add
shl
jle
add
in
sahf
add
mov
ss
insl
push
sbb
inc
mov
fildll
xlat
mov
jle
pusha
lods
xor
cmp
pop
adc
lea
shll
out
out
in
shlb
cmp
and
mov
push
cmp
mov
addr16
out
xchg
inc
pop
add
mov
call
int
mov
jno
sub
sub
enter
repnz
lret
in
insl
or
fbstp
scas
jge
sub
cmpsl
ja
or
cs
imul
stos
jge
movsl
mov
add
orb
stc
fcomp
sub
je
mov
les
scas
jp
inc
aam
lret
dec
pop
addl
movsl
inc
aad
int3
dec
cmp
jno
mov
ja
mov
jmp
xor
loope
push
enter
cmp
js
mov
stc
xor
mov
push
iret
fidivrl
lret
push
repnz
adc
xchg
faddl
inc
mov
xchg
push
push
rolb
xchg
xor
jge
inc
shll
sub
xorb
mov
dec
aam
adc
cmpsb
jns
subl
inc
sub
add
popf
insl
or
int
xor
mov
loopne
ficompl
mov
test
and
sub
or
pop
jbe
subl
lds
inc
jmp
push
add
inc
or
sbb
shlb
sbb
sbb
loopne
pop
push
sub
pop
out
adc
xor
fstl
dec
dec
rolb
imul
pop
mov
mov
sti
cs
insl
jmp
fistps
and
xor
and
lcall
mov
lock
and
dec
pop
cld
insb
repz
repz
pushf
leave
mov
dec
sbb
cmp
js
hlt
std
sub
adc
jle
shll
stc
xchg
mov
dec
mov
adc
outsb
mov
xor
mov
lds
das
inc
roll
mov
xor
in
test
jo
sub
notb
adcb
data16
shll
push
add
push
mov
lahf
cltd
in
cli
lods
jecxz
es
xchg
imul
mov
cli
inc
shll
repz
or
jb
in
jns
push
stos
enter
leave
loopne
push
xchg
xchg
out
sub
pop
pop
insb
popf
xchg
loop
testl
in
out
cli
dec
lcall
in
std
sahf
fstpl
and
mov
mov
lods
xor
ljmp
lret
dec
jmp
out
mov
addr16
push
enter
mov
nop
fldt
mov
adc
xchg
sub
xor
sub
icebp
push
mov
aas
stc
stos
push
test
push
cmp
movb
fstpl
inc
push
sub
dec
lock
jbe
movsl
mov
mov
bound
cmp
fildll
sarb
outsb
cmpsb
sbb
lds
loopne
mov
cmp
nop
mov
xlat
call
cltd
inc
rclb
sub
xor
mov
and
push
mov
ret
or
rolb
sti
sbb
bound
or
dec
and
jb
mov
push
mov
mov
xor
jo
fucomi
les
cmp
addr16
es
pop
inc
mov
push
ret
mov
push
sarb
sbb
cwtl
mov
orl
or
push
cmp
push
xchg
test
popa
sub
lods
ficompl
xor
mov
ljmp
scas
cwtl
xchg
sub
dec
cmp
and
sub
or
pusha
inc
dec
cmp
dec
mov
cwtl
jecxz
xchg
pop
adc
xor
mov
xor
das
push
lret
cmp
jb
push
adc
mov
lock
out
push
adc
sub
sarb
in
inc
je
frstor
ret
mov
add
enter
sbb
or
or
xorb
adc
jg
xchg
push
inc
xor
adc
mov
lods
fs
test
mov
xchg
ljmp
fs
stos
push
fcompl
mov
mov
ret
mov
lods
xor
add
cwtl
ljmp
leave
xor
cli
add
pop
insb
flds
testl
sub
and
adc
cld
test
mov
and
popf
pop
ret
repnz
xchg
mov
push
stos
pop
stos
push
sti
les
push
xor
and
mov
xchg
pop
aas
cmpsl
xlat
aam
jns
cmp
arpl
pushf
aaa
stc
fsubp
inc
ficompl
cltd
jo
shld
pop
cmp
notb
push
add
shrb
jo
rol
arpl
pusha
mov
jno
popa
add
outsb
ss
hlt
sbb
mov
cmp
cltd
cmp
rcll
repz
dec
icebp
cli
ds
sub
mov
int3
mov
out
out
test
pop
scas
jno
inc
jle
cwtl
js
pop
cmp
xor
mov
push
push
cmp
addb
jnp
cmpsl
clc
mov
jne
js
mov
push
sarb
push
or
std
cmp
sub
out
int
sti
loopne
add
roll
lea
cltd
cltd
dec
pop
mov
dec
nop
jl
into
or
out
addr16
aad
mov
dec
andl
aaa
arpl
push
cwtl
push
push
or
inc
out
mov
int3
xchg
lret
and
rclb
adc
jp
jg
sub
mov
push
sub
jg
inc
pop
mov
sub
sbb
mov
clc
lret
fnsave
xor
cmpsl
jmp
xchg
pushf
cmp
sub
xchg
xlat
ja
clc
or
xchg
xlat
fstps
into
minps
shll
sahf
andl
fnstcw
je
ret
mov
add
or
jmp
sbb
dec
int
jne
mov
outsl
into
xor
sbb
repz
addr16
jl
or
sbb
and
jae
xorl
mov
lds
dec
sbb
mov
int
repz
pop
je
stos
fcmove
orb
jnp
cmp
clc
cwtl
roll
je
aam
xchg
lcall
xchg
icebp
mov
push
add
in
add
push
sub
mov
scas
test
stc
mov
inc
leave
movsl
mov
movsb
or
push
jecxz
jl
mov
and
xchg
mov
fcompl
gs
int
push
push
pop
test
add
push
jge
nop
cmp
cmp
lods
cli
mov
popa
add
cltd
and
fcmovnbe
add
cmc
sti
pop
sbb
sub
gs
mov
mov
cmp
push
cmp
xchg
test
mov
ja
repnz
mov
shl
mov
cmpl
test
lcall
cmp
bound
rcrb
pop
fcmovnu
leave
mov
or
lahf
imull
je
mov
add
in
cmp
orb
xchg
inc
enter
jmp
in
out
and
fstpl
inc
jo
add
mulb
dec
mov
out
sarb
fisubrl
nop
push
add
pop
and
lcall
push
cld
dec
sub
xchg
sbb
mov
adc
test
xchg
xchg
sub
popf
mov
loopne
mov
insb
cmpsl
movsb
shll
cs
jecxz
push
and
nop
mov
adc
push
xor
shlb
mov
pop
ja
fwait
bound
xorl
cmp
push
push
adc
inc
add
pop
jno
mov
iret
push
xor
roll
xchg
in
bound
cmp
frstor
aad
and
adc
inc
imul
jns
add
je
sub
and
imul
pop
mov
xchg
addl
xor
sbb
inc
stos
cmp
sbb
popf
xchg
pop
dec
or
dec
pop
sahf
lock
xchg
loope
xchg
test
mov
repnz
test
das
dec
pop
mov
lock
shlb
imul
adc
les
inc
fldcw
nop
inc
imul
mov
pop
and
mov
mov
lcall
add
jge
mov
xchg
shrb
test
pusha
jne
adc
data16
or
stos
lahf
rol
scas
sub
or
cmp
pop
inc
test
scas
sub
je
loope
sbb
stc
adcl
sub
mov
push
and
jle
fidivs
push
jbe
lahf
rorl
push
popf
stc
popl
pop
pop
sbb
lds
mov
xor
cmp
das
popl
mov
pop
dec
ss
push
call
push
push
rorl
ficomps
fbld
out
sub
gs
sub
lahf
repz
addr16
or
insb
sbb
enter
pop
outsb
pusha
adc
in
pop
push
pop
rcr
neg
ljmp
pop
adc
in
lds
mov
push
imul
mov
aaa
mov
dec
pushf
ljmp
les
push
xchg
mov
jle
insl
sbb
subb
push
add
pusha
push
ret
outsb
or
push
sub
mov
pop
mov
sub
addr16
pop
jnp
sar
loope
call
pop
cmc
cs
or
and
loope
inc
fcomps
test
shll
mov
sbb
scas
aas
pop
out
hlt
push
ds
jge
fisttpl
mov
aaa
pop
sub
in
popf
add
imul
mov
out
fbld
push
sbb
fbld
mov
das
sbb
aad
mov
es
arpl
ljmp
cld
add
pop
out
mov
cmp
repz
push
or
repnz
call
or
sub
pop
adc
in
push
pop
mov
inc
mov
lods
ja
scas
adc
adc
popa
xor
popa
mov
push
mov
clc
jo
stos
gs
pushf
ror
rcll
xchg
aas
sbb
ret
loope
push
cwtl
fiaddl
enter
push
mov
sti
xor
jo
fldcw
inc
and
mov
mov
push
jp
jmp
jb
push
ss
int
and
adc
out
sahf
add
mov
lock
repz
cli
pop
inc
mov
dec
pop
clc
insl
pop
inc
in
aas
jg
push
push
lods
je
and
jns
xchg
jns
int3
or
leave
movsl
adc
mov
mov
push
mov
inc
add
jbe
dec
dec
push
jbe
mov
in
nop
cmp
mov
xchg
dec
and
lahf
stos
adc
cmpsl
insb
lock
add
or
int3
adcl
jmp
jns
int
das
lods
pop
adc
adc
insl
xor
pushf
das
divl
jb
push
orb
xchg
arpl
mov
adc
cmp
pop
and
or
sbb
cmp
inc
mov
pop
ja
pop
stc
cmp
push
cltd
repz
movsl
mov
jg
cmp
mov
dec
sub
outsl
sbb
or
xchg
jecxz
roll
fsubrl
lea
mov
rcr
pop
in
mov
push
jl
xor
jmp
sub
in
mov
xor
rcr
sub
jecxz
iret
cmc
aad
sti
adc
jge
dec
sub
fisubrs
lcall
cmp
stos
inc
test
cwtl
xchg
jge
pop
dec
mov
push
sarb
mov
jmp
mov
xchg
rol
mov
in
mov
inc
dec
div
jne
aad
fs
stc
xchg
inc
xorb
jns
test
sbb
adcl
movsb
loop
jae
push
gs
movsb
xor
xchg
sub
mov
xchg
push
fistps
js
fs
enter
out
lahf
dec
outsb
pop
lea
adc
jno
in
mov
mov
xlat
push
push
sbb
mov
cmp
popw
loope
push
test
arpl
ss
pushf
clc
sbb
ja
inc
dec
nop
add
dec
mov
cwtl
mov
call
push
or
xor
lods
cmpsb
jnp
and
lret
or
scas
out
inc
stos
jg
xchg
adc
test
mov
cmp
mov
loopne
sbb
std
sahf
scas
je
xchg
sub
icebp
ljmp
or
jbe
rcll
sub
stos
xor
cmpl
mov
mov
nop
adc
and
cmp
mov
mov
jmp
outsb
pushf
pop
xorl
clc
loop
adc
jae
pop
push
les
loope
sub
xchg
in
and
ja
sub
fiadds
fistps
mov
mov
xchg
loopne
ljmp
sbb
xor
sub
jae
mov
mov
loopne
das
dec
es
pop
out
insl
mov
out
enter
pop
mov
cld
pop
sbb
pop
inc
adc
mov
rcrb
test
dec
lcall
pop
push
xchg
out
dec
scas
int
aaa
add
push
jle
lahf
test
adc
xchg
sbb
and
fcmovnbe
inc
and
and
pushf
inc
std
jns
dec
mov
pop
fcomp
xchg
inc
xchg
out
or
xchg
fs
movsl
ds
cmpl
scas
cwtl
scas
inc
pop
aas
jns
inc
dec
sub
loop
push
dec
das
mov
sahf
mov
out
popf
roll
pop
fisubrs
popf
adc
out
sub
nop
cli
pop
dec
mov
lods
bound
add
xchg
xchg
es
es
xor
mov
les
cmpsb
sbb
add
xchg
xchg
jae
mov
mov
sbb
pop
out
scas
cld
add
jge
test
pop
pop
shll
dec
ljmp
cmp
cmpsl
es
mov
push
rol
loopne
jmp
push
adc
ja
xchg
pop
push
jg
popa
mov
cmp
push
das
pop
aad
ficoml
test
andl
cmp
jne
pop
mov
jle
jo
dec
mov
push
call
push
dec
push
stos
cli
mov
push
loopne
rol
adc
fisubrs
movb
add
xchg
push
insb
insb
mov
mov
jmp
xlat
ja
sbb
popf
jmp
mov
pop
incb
or
sbb
bound
enter
mov
jecxz
stos
test
jge
jbe
mov
leave
add
jecxz
xchg
es
mov
imul
or
stos
jne
mov
mov
jnp
call
shrl
lea
in
test
xor
xchg
pop
jne
in
cwtl
mov
push
lods
cld
push
stos
cmp
rcrb
push
xor
mov
adc
mov
pop
in
hlt
out
out
int
lock
xchg
mov
pop
test
xlat
xor
sarl
cs
xor
xchg
dec
push
mov
shlb
inc
fistpl
sbb
add
mov
mov
fldl
cmp
imul
jnp
mov
pop
gs
mov
jmp
arpl
sub
iret
mov
push
push
push
cmp
test
jbe
push
cwtl
and
push
jge
xchg
jle
mov
add
aad
mov
adc
cmp
and
out
pop
ljmp
pop
pop
js
sti
sbb
dec
scas
inc
cmp
stos
or
push
fwait
inc
idivl
jnp
in
stos
js
push
push
loopne
pop
jl
sbb
adc
mov
shlb
pushf
xor
iret
imul
ss
push
adc
clc
gs
test
add
js
inc
mov
inc
repnz
adc
or
xchg
xchg
or
test
testb
leave
jge
js
adc
push
fdivrl
pusha
jo
pop
std
lcall
in
popl
test
lcall
push
and
repnz
pop
scas
aam
ja
xor
pop
pop
lds
lods
cmp
push
mov
in
jno
add
xor
cmp
insl
mov
mov
lods
int
dec
cli
pop
sti
pop
cmp
std
sbb
outsb
fs
and
scas
outsb
or
xchg
mov
jbe
xor
lock
test
or
aam
rcl
imul
cld
loope
js
int
lods
mov
cld
fs
push
sub
lds
pop
jne
stos
pop
adc
lods
and
je
dec
jmp
mov
pop
pop
cmp
shll
popa
cmp
in
lods
jne
and
push
inc
adc
clc
jbe
mov
push
sbb
mov
xor
jae
sarl
mov
sbb
push
push
cld
std
repz
and
loopne
inc
mov
pop
cmpsb
inc
movsl
fidivrs
xor
mov
test
xor
sbb
fs
push
imul
xor
fwait
nop
and
mov
jne
fs
push
cmp
jne
add
jle
xor
loopne
mov
jmp
div
pop
repz
cwtl
dec
iret
xchg
inc
cmpsl
test
dec
adc
and
ret
mov
push
pop
push
add
movsl
inc
notb
mov
ja
repz
mov
xor
lcall
mov
popa
cwtl
and
fists
jmp
jae
pop
scas
mov
dec
pop
aam
mov
les
jp
xchg
pop
mov
arpl
sub
dec
mov
pushf
int
jp
inc
ss
dec
pusha
fcompl
aas
mov
xchg
mov
push
stos
push
in
movsl
sar
negb
call
arpl
push
sbb
pop
bound
enter
into
and
in
add
lods
mov
mov
rclb
jae
dec
mov
inc
mov
mov
ss
adc
sbb
push
xchg
dec
int3
shlb
sbb
sbb
inc
aaa
jbe
cmp
ret
pusha
dec
xlat
imul
in
jbe
push
fs
dec
mov
idivl
push
xchg
ss
or
push
ja
and
mov
push
cmp
insb
in
pop
in
arpl
pop
jb
hlt
jnp
and
ret
pop
mov
mov
test
icebp
jno
sbb
fcompl
jle
xchg
jle
insl
push
sub
fadds
mov
addr16
mov
xchg
aas
sub
scas
jecxz
jae
out
mov
and
xor
ja
and
and
and
xorb
fcmovnb
popa
lahf
dec
lret
sbb
jo
shlb
fdivl
jnp
mov
adc
gs
cwtl
adc
jp
lds
fiadds
inc
js
lret
inc
cmp
in
shrb
xor
lahf
cmp
sub
pop
push
adc
push
cmp
sub
adc
dec
cmp
xchg
scas
or
and
je
je
arpl
inc
imul
inc
loopne
sub
and
xchg
sbb
bound
mov
lock
mov
jne
sbb
xchg
cmpb
and
popa
add
xchg
add
pop
xchg
daa
jmp
dec
dec
into
add
push
xor
jne
outsb
xor
test
sub
lods
push
adc
add
dec
loop
lret
cltd
cmp
outsb
notb
lret
add
mov
inc
and
rorb
outsb
es
loope
push
cmpb
cli
pop
int3
mov
cmp
pushf
insb
jecxz,pt
xchg
pop
insb
lock
jp
iret
pop
mov
cmp
int
sub
xor
in
cmpsl
inc
js
mov
jle
cltd
fldpi
mov
push
pop
xor
popl
sub
lahf
cmp
out
imul
out
aad
mov
rorl
xlat
pop
aas
mov
lods
mov
or
lods
adc
mov
mov
iret
and
aad
adc
bound
adc
test
pop
stc
sub
pop
fwait
sub
xchg
sub
vpxor
push
cmpsb
mov
insl
mov
inc
out
inc
cmp
idiv
adc
sarb
iret
frstor
js
mov
bound
lods
or
or
xor
sbb
xor
je
sti
xchg
xchg
mov
fistl
push
jle
js
clc
add
sbb
dec
jecxz
mov
adcl
dec
shlb
pop
lahf
inc
aam
dec
cld
idivl
and
inc
dec
das
loope
in
dec
and
stos
call
xchg
mov
ja
jmp
adc
mov
lcall
xor
or
movsb
fdivrs
test
adc
jae
jmp
leave
stc
popa
adc
xchg
lods
or
data16
iret
repz
pushl
dec
subb
sub
or
sbb
sbb
push
cmc
add
loop
bound
dec
mov
and
call
or
cmpsl
ficoml
arpl
ds
fisubrs
xor
ret
xchg
gs
sub
mov
xlat
jnp
scas
jp
sbb
testl
pop
mov
test
pop
movsl
lods
outsb
push
mov
mov
inc
cmp
jb
sti
call
inc
sahf
inc
inc
jb
mov
cmpb
clc
in
mov
movsl
das
add
loope
mov
push
cld
push
out
outsl
rcrb
pusha
xor
and
popa
repz
lods
lods
daa
in
jecxz
lock
rcr
movsb
ljmp
out
xchg
jne
add
jecxz
or
mov
movsb
or
sti
mov
gs
cmc
lds
test
cltd
push
in
xchg
or
or
sub
pop
xchg
mov
mov
mov
mov
inc
mov
shll
add
mov
or
ja
jp
mov
push
sub
sub
call
out
cmp
lret
inc
mov
std
and
push
loopne
nop
push
ljmp
xorb
mov
mov
add
xchg
enter
jecxz
inc
xor
je
inc
enter
jecxz
pusha
mov
int3
add
ljmp
loope
je
outsl
pop
fwait
or
mov
aam
lcall
dec
mov
out
cmc
repnz
dec
int3
mov
ficomps
rcl
nop
in
fstpt
push
pop
es
jl
test
enter
mov
shll
fsubrs
pop
mov
sbb
jp
icebp
incl
add
dec
shll
orb
sub
lds
sbb
inc
fbstp
mov
mov
pop
push
lret
jbe
mov
sub
mov
dec
add
rcll
mov
push
pop
fisubl
sbb
hlt
sub
pop
inc
test
in
push
test
sub
pushf
stc
inc
sub
cmpsb
test
int
and
sbb
xchg
add
in
scas
and
roll
mov
pop
and
outsl
jbe
dec
stos
or
add
rclb
and
jae
imul
data16
mov
sub
push
cmp
mov
lods
ret
jge
shrl
mov
xchg
mov
fisttps
or
into
jge
adc
push
push
adc
cli
xchg
dec
das
sbb
bound
or
mov
stos
inc
popf
push
aam
push
push
outsl
and
ja
pop
out
mov
movsl
popf
sbb
out
movsb
orl
inc
pop
or
int
mov
jl
int
out
or
mov
shr
fidivl
mov
cwtl
fsts
out
push
push
movsb
loopne
push
xchg
pop
jmp
sahf
add
mov
mov
aaa
lods
lcall
out
push
clc
and
out
div
pop
test
dec
push
pop
mov
and
cmp
cmp
add
inc
andb
cld
inc
add
mov
cmpsb
mov
xchg
hlt
mov
mov
mov
mov
cs
and
orl
scas
cmp
pop
in
ljmp
shlb
fwait
inc
cmp
repz
loopne
xor
popf
sti
in
out
mov
push
iret
push
mov
sub
pop
and
add
shlb
pushf
orb
mov
rcll
mov
daa
sahf
inc
leave
mov
es
out
ret
aad
inc
movl
jb
and
sbb
dec
aad
xchg
or
rol
sub
mov
cmp
pop
sub
adc
mov
pop
movsb
inc
cmp
stos
push
iret
mov
scas
mov
lods
push
mov
movsb
jl
lods
pop
scas
mov
in
repnz
or
imull
add
jp
mov
jne
ja
or
sub
and
mov
ss
js
push
outsb
aam
jnp
xchg
insl
sub
iret
ss
sbb
push
int3
adc
sub
fdivrs
cmp
in
mov
jbe
lea
ljmp
stos
inc
add
and
cmp
leave
mulb
pop
pushf
fs
js
nop
ret
push
in
jns
or
push
std
adc
int
fdivrs
add
popa
iret
das
jp
mov
loope
ss
cmp
pop
xchg
mov
sbb
xchg
and
or
test
outsl
adc
enter
out
data16
sbb
adcl
inc
sbb
inc
sub
mov
jl
fucom
and
imul
cmp
sarb
jp
mov
dec
mov
leave
mov
dec
push
inc
es
leave
gs
lds
or
mov
stos
fmull
adc
scas
cld
mov
sahf
stos
or
fcmovbe
inc
sub
scas
cld
je
cmc
mov
sbb
xor
in
pop
scas
adc
mov
leave
in
les
cmp
mov
cmc
push
xlat
jbe
scas
xchg
push
cmpb
lea
fldl
adc
cmp
mov
mov
lods
daa
mov
sbb
push
dec
push
sbb
sarb
aam
mov
fnstenv
and
xor
inc
or
aas
sti
fucom
lock
mov
cltd
jge
test
dec
clc
sti
push
mov
dec
add
mull
xchg
dec
push
mov
nop
pop
int3
lahf
jne
xor
cmp
xor
sub
cmc
cld
imul
popa
fcoms
sub
or
xchg
leave
mov
aas
sahf
in
sbb
mov
call
mov
into
fsubrs
mov
sbbl
mov
cmp
cmpsb
scas
inc
cmp
jl
cmpsb
mov
arpl
xchg
repnz
cmc
sarb
in
in
lahf
xor
cmp
jg
jmp
adc
jne
xor
jle
lds
fidivrs
movsl
dec
inc
roll
test
sub
sbb
or
test
out
je
insb
mov
or
jl
lods
push
ja
mov
jp
out
addr16
jecxz
xlat
adc
pop
inc
jmp
sub
lret
mov
xor
int3
dec
addr16
xlat
dec
sub
dec
les
dec
out
fcmovbe
out
jmp
insb
mov
gs
movsl
cmp
lahf
dec
add
jmp
xchg
test
add
scas
inc
mov
mov
cs
inc
pop
mov
add
das
push
push
lahf
test
adc
pop
mov
mov
or
aaa
aam
inc
ljmp
out
js
aad
in
dec
fucomip
dec
test
aad
xchg
mov
xchg
mov
cli
decl
sub
jecxz
jmp
inc
and
push
inc
sbb
or
into
ficomps
popa
adc
inc
rcl
adc
lcall
sahf
arpl
andb
pop
fisubrs
dec
jecxz
in
daa
xor
xchg
mov
ljmp
test
addr16
das
lods
inc
cmp
dec
and
les
rcr
inc
or
sahf
push
cwtl
mov
aaa
fiaddl
lock
pusha
cmp
mov
and
enter
notb
loopne
sbb
and
pop
dec
sbb
push
xchg
mov
test
dec
inc
sbb
add
fbstp
sbb
in
mov
xor
shll
ss
dec
js
insb
mov
jae
push
and
or
sub
sbb
mov
loop
adcl
mov
pop
cli
sar
jo
lock
sub
gs
dec
mov
sbb
mov
mov
das
sub
in
add
and
pop
mov
mov
push
stos
pushf
shlb
stos
xchg
pushf
scas
fbld
pusha
dec
jge
aaa
and
xchg
adc
mov
je
adc
mov
aam
pop
dec
inc
hlt
mov
and
jns
aam
mov
insl
movsb
mov
xchg
xchg
lret
cmp
dec
les
jecxz
or
inc
mov
enter
stos
jae,pt
push
mov
jnp
and
gs
adc
jecxz
add
cmc
out
jbe
mov
pusha
push
outsl
push
mov
data16
scas
dec
hlt
shll
push
and
jno
push
add
int3
out
mov
out
bound
loopne
or
or
mov
cmp
add
mov
hlt
pop
inc
and
and
icebp
jae
dec
stos
les
stos
scas
pop
xor
dec
mov
mov
adc
sahf
pop
cwtl
or
ss
jle
mull
xchg
loop
call
movsb
ret
inc
adc
lcall
dec
sarb
pop
pop
imul
mov
or
mov
mov
push
je
inc
rcr
mov
in
bound
push
jmp
rclb
mov
test
fmull
mov
or
hlt
add
inc
inc
mov
push
jle
jmp
enter
lret
dec
xchg
jecxz
fldcw
leave
pop
dec
or
pop
rclb
jle
sbb
mov
repnz
and
leave
fimull
inc
testb
outsl
xchg
mov
mov
add
pop
pop
pusha
pop
push
and
pop
cmpsb
pop
std
jnp
cmp
ja
cmp
iret
xchg
addb
fmuls
loop
mov
push
cli
lahf
jg
mov
pop
sub
out
cs
sahf
and
popf
ret
push
mov
rol
pop
xchg
fistl
bound
add
mov
nop
shll
jae
adc
ret
xchg
mov
xchg
sub
push
test
test
sbb
ja
xor
movsl
aaa
loop
stc
std
imulb
add
je
lods
xor
int
xor
jo
sti
hlt
jmp
outsb
imul
fdivl
ret
in
pop
or
push
jb
fidivs
jle
loopne
repz
fistpll
divl
cmp
fisubrl
ljmp
pusha
mov
xchg
push
fs
sbb
and
stc
leave
push
loope
or
mov
test
stos
xchg
pop
test
mov
cltd
mov
jo
ja
adc
mov
xchg
iret
mov
loope
cmpsb
pop
push
or
sahf
and
cmpb
pop
pop
cmp
stos
js
adcb
std
inc
inc
inc
add
lods
mov
fsubrs
pop
xorl
pop
call
inc
bound
repnz
in
pop
jns
mov
shlb
mov
push
out
mov
scas
xor
xchg
xchg
push
push
lret
xor
and
outsl
data16
icebp
xor
notl
mov
and
add
mov
cli
int
test
sbb
mov
mov
mov
ret
nop
fimull
loopne
cmp
out
je
in
jg
push
sub
mov
rcrl
and
or
adc
lock
pop
ss
mov
xlat
dec
loope
mov
mov
scas
pop
mov
nop
cmpsb
jg
dec
rcl
and
or
jo
lds
pop
imul
shll
imul
mov
pop
pop
fdivrp
xor
xchg
int
dec
sbb
adc
data16
aas
push
add
adc
fwait
ja
aas
insl
mov
lods
rorl
jmp
cmp
aad
repz
fcoml
pop
jo
fmuls
mov
pop
test
je
in
fmull
xchg
push
sbb
mov
push
rep
xor
xchg
fbstp
jl
pusha
test
cwtl
sub
std
out
adc
fwait
decb
pop
jp
xor
inc
fs
das
repnz
push
je
sub
mov
mov
call
imul
movsl
aad
pop
jb
enter
and
xchg
and
xchg
sbb
cmp
adcb
in
pop
ja
fsubl
cwtl
ficomps
mov
inc
mov
xor
dec
fmul
repnz
dec
push
mov
fs
mov
fildl
jnp
adc
out
ja
cmp
in
pop
out
test
inc
sub
jnp
cs
mov
or
stos
sub
pop
jmp
mov
xchg
test
xor
fwait
mov
rorb
jmp
out
sub
pop
cmp
xchg
xor
jle
push
aad
and
fwait
push
jo
add
fimuls
jne
stos
outsl
loop
test
push
sahf
mov
dec
jl
xchg
inc
fmul
xor
push
jge
movsb
mov
push
sub
jne
or
scas
es
dec
add
mov
sub
mov
xlat
lahf
pop
sub
fsubrp
in
imul
and
inc
out
sbb
jae
cmp
push
mov
repz
in
scas
jb
dec
je
dec
add
jle
in
rcrb
int3
xor
jp
dec
jecxz
roll
movb
mov
mov
lret
test
rcll
push
loop
mov
push
jle
in
xor
jo
sbb
ficoms
push
jmp
xchg
pop
xchg
add
xlat
shrb
or
sbb
aaa
fisttpll
ss
push
lcall
gs
add
lock
jecxz
mov
xor
or
xchg
adc
mov
leave
or
add
jae
es
jbe
imul
fwait
mov
push
pop
cmp
gs
mov
dec
mov
popf
jl
out
hlt
inc
outsb
dec
ja
pop
les
sti
lods
pop
jne
mov
add
and
popa
pop
jbe
mov
xlat
add
in
xchg
arpl
mov
xor
inc
out
cmp
fildl
in
sbb
pop
or
sub
das
dec
pop
push
xor
popf
hlt
cmp
cmpb
incl
nop
and
test
push
call
mulb
lds
sti
dec
jmp
scas
shrb
sbb
fwait
pushf
lock
add
repz
sbb
xor
mov
push
adc
in
jg
pop
sub
lret
push
push
sbb
clc
jecxz
fs
into
test
js
repnz
sbb
or
lea
inc
dec
jo
mov
out
scas
jne
xorl
mov
adc
mov
cmp
or
mov
std
test
sbb
xchg
pop
fistps
adc
mov
call
pop
jp
js
fisubl
xchg
je
inc
enter
outsl
mov
add
arpl
vpmacssww
cmp
mov
push
in
mov
in
ret
outsl
jb
adc
hlt
mov
sbb
bound
pop
xchg
xor
mov
ljmp
out
hlt
aam
mov
sbb
aas
dec
inc
push
sbb
push
lods
sbb
xchg
jae
cmp
ret
jne
pop
outsl
add
mov
les
xor
adc
pop
bound
mov
mov
add
inc
sbb
pop
xor
push
mov
push
pop
mov
daa
cmp
push
xor
and
das
sahf
add
imul
rcl
sub
xchg
xor
mov
jnp
inc
bound
imul
and
cmp
lcall
shlb
test
push
sbb
sahf
push
or
push
lea
gs
rcll
es
xchg
jnp
lods
jg
mov
outsb
cmp
outsb
rclb
dec
ja
out
roll
int
enter
jle
mov
xorl
mov
daa
pop
mov
sub
in
sbb
cmp
mov
cs
inc
inc
aaa
pop
sbb
push
jle
roll
shlb
arpl
sti
xchg
push
cld
movsl
loop
arpl
scas
ffree
fcmovnb
call
mov
out
mov
xchg
and
test
in
popf
dec
stos
scas
jmp
ret
dec
push
pop
sbbl
out
xchg
adc
jg
jb
lock
clc
jae
sbb
add
gs
inc
add
push
adc
loopne
mov
jne
imul
clc
outsb
addr16
jb
add
stos
add
xor
inc
dec
push
scas
lret
mov
scas
jne
push
push
mov
movsl
outsl
imul
dec
insl
push
xor
in
inc
rorl
add
int
into
negb
inc
adc
fucompp
mov
xchg
xchg
jo
pusha
cld
imul
pop
inc
movsl
sbb
mov
and
shll
loop
cmp
lret
repz
mov
mov
add
aas
cmpsl
xor
xor
outsb
fsubrl
dec
inc
bound
cmp
mov
dec
lock
xchg
ret
shll
rorl
call
arpl
inc
mov
rorl
das
push
imul
push
outsl
lds
inc
pop
daa
imul
in
ss
jp
mov
pop
sar
mov
fidivl
jne
pslld
push
mov
xor
fstl
testb
pop
jmp
repnz
push
push
lcall
icebp
shll
ss
or
dec
dec
inc
cmp
jg
mov
call
adc
daa
and
fisubrl
jnp
icebp
xchg
or
and
push
add
addl
fmull
nop
std
aad
mov
pushf
sbb
and
int3
stos
pop
cli
leave
ss
out
xchg
cmc
xlat
les
jle
ss
daa
xchg
push
push
pop
dec
je
test
add
mov
sbb
mov
mov
lds
daa
out
scas
jnp
std
or
addr16
cld
outsb
inc
sub
fcmovb
ja
lods
dec
inc
mov
movsl
mov
int
sbbl
mov
cmp
xor
insb
cld
jg
cwtl
and
jle
and
jmp
jmp
xor
jl
dec
inc
pusha
pop
and
jge
and
out
std
push
out
addr16
push
sbb
mov
je
es
mov
scas
mov
into
clc
iret
push
pop
sub
pop
aad
push
push
cld
fdivrs
sub
jp
subb
stc
rcrl
cwtl
int
xchg
cmpsb
xor
xchg
pop
aaa
inc
insb
repnz
scas
popa
dec
inc
inc
cltd
mov
imul
pop
xor
cmc
adc
fcomip
imul
push
pop
push
xor
inc
xchg
mov
fidivrs
pop
fmuls
inc
sbb
pop
add
xchg
dec
sub
fmulp
in
mov
jl
cmp
mov
mov
inc
les
dec
imul
mov
inc
mov
fisubs
pop
mov
lock
xchg
jns
insb
lret
push
and
xchg
aaa
aaa
xor
mov
cltd
stc
mov
pop
roll
push
pop
mov
icebp
rcll
push
mov
sub
int
mov
cs
sub
arpl
xchg
dec
mov
add
and
stos
and
int3
ds
aas
xchg
iret
sub
push
fcmovne
je
push
decb
aam
test
je
imul
loope
push
xor
cmp
mov
add
pop
add
adc
mov
mov
cmpsb
inc
je
ljmp
mov
testl
je
cmp
jl
popf
shlb
aam
icebp
mov
xchg
pop
cs
pop
hlt
fimuls
xchg
push
and
popf
fwait
cmp
mov
dec
stos
mov
xor
dec
push
test
ret
out
insb
imul
sub
ss
or
mov
imul
int
jne
daa
std
jae
je
jae
lahf
cmpsb
xchg
sbbb
mov
adc
cs
or
add
push
jecxz
daa
pop
dec
push
xor
adc
sbb
mov
rcll
or
call
xlat
push
mov
inc
movsb
lods
inc
in
mov
sbb
push
into
js
das
int3
mov
dec
call
lds
push
dec
jp
cli
rcrb
mov
mov
gs
je
mov
js
push
loopne
mov
inc
jnp
lods
stos
scas
mov
xchg
pop
movsb
ds
cmpsl
lret
jae
movsl
xor
sahf
cli
cli
jnp
jbe
sub
pusha
xchg
xor
xor
mov
adc
lea
mov
ud1
rcll
lds
mov
lcall
iret
xor
push
int
inc
shll
sbb
mov
cmpb
daa
ds
dec
jbe
es
mov
push
add
ficomps
inc
inc
add
push
pop
repnz
lock
mov
add
add
mov
sub
jl
sub
inc
xchg
jno
xchg
jb
cmpsl
jecxz
jno
xor
jecxz
leave
iret
imul
cld
add
pop
sub
xchg
adc
push
push
xlat
and
kmovb
mov
or
push
roll
dec
jmp
mov
dec
test
js
incb
jne
je
test
sbb
xor
insb
fadds
mov
iret
mov
nop
cld
cld
xchg
sbb
in
push
pop
imul
push
or
add
rcll
xorb
sub
mov
jns
loop
or
xchg
imul
pusha
jmp
cmc
jge
or
pop
lret
adc
shll
push
mov
add
ljmp
ret
cmp
mov
fidivl
lds
jnp
sbb
sub
xor
push
pop
out
js
shlb
out
cmp
pop
sbb
lahf
jo
or
insl
lret
in
aaa
popa
out
fldcw
cmp
mov
les
add
inc
in
mov
rorb
dec
ret
rclb
test
rcrl
and
mov
jge
mov
push
movsb
es
leave
lcall
pop
push
cmp
nop
sti
in
sahf
pusha
cmpl
dec
in
mov
ds
stos
pusha
lret
es
movb
xor
loop
enter
je
mov
and
mov
xor
cmp
and
mov
out
mov
outsl
push
adc
test
jbe
les
jns
mov
out
mov
inc
icebp
pop
test
add
pop
inc
addl
pop
les
or
xlat
push
call
mov
mov
lret
movsb
xorb
add
mov
push
mov
cmpsb
mov
mov
loop
ljmp
das
dec
sbb
sub
cmpsb
fs
add
xlat
mov
repnz
mov
cmpsl
lahf
mov
addl
pop
nop
sti
push
lock
test
and
add
jp
test
fnstcw
xchg
push
jbe
mov
shrb
and
fsts
data16
rorl
pop
inc
into
push
std
lret
cmp
mov
shrb
cwtl
loop
xchg
pop
mov
sub
inc
xchg
pushf
cwtl
sti
cmc
stc
add
sbb
xor
push
or
xchg
adc
fsubrs
mov
cmp
movsl
cld
int3
add
in
push
mov
mov
adc
pop
pop
ds
mov
jae
fdivrp
add
stos
sbb
mov
push
out
addr16
and
and
xchg
out
jnp
cmp
aaa
and
push
insb
ret
fildll
sbb
lock
push
mov
data16
outsb
jl
testb
frstor
push
xorb
rcrl
push
and
test
mov
aad
mov
dec
inc
xchg
int3
jns
roll
test
out
add
push
pop
dec
dec
outsb
jns
mov
fimuls
add
add
cmp
mov
cltd
js
call
add
icebp
xchg
imul
scas
shrl
fmulp
dec
cmp
dec
xchg
imul
mov
push
in
pop
dec
push
aaa
and
pushf
push
stos
inc
imul
jne
pop
imul
enter
stos
mov
js
test
arpl
mov
jae
lret
mov
mov
outsl
out
pop
or
repnz
add
int
pop
lret
bound
xchg
jle
call
xchg
scas
or
loopne
xchg
adc
in
mov
cmpsl
call
adc
fisubs
scas
mov
je
mov
xchg
nop
mov
int3
add
adc
adc
sahf
and
call
mov
dec
xor
scas
insl
dec
jl
roll
add
notb
cld
lret
mov
sub
add
add
inc
cmp
out
repnz
out
daa
pop
push
mov
nop
mov
in
xchg
xchg
ret
cld
cmpsb
mov
jnp
scas
sbb
inc
fstpt
xchg
inc
adc
bound
sub
mov
in
dec
pop
enter
in
sub
push
cmpsl
inc
fwait
mov
and
mov
out
es
mov
call
ja
loopne
pushf
outsl
jne
jae
dec
dec
pop
icebp
add
lret
or
icebp
test
push
inc
and
push
xchg
lock
cmpsb
add
sbb
popf
sub
rcrl
int3
shlb
xchg
rclb
rcrb
push
in
test
ds
cli
idivl
lds
divb
jg
in
test
pop
sti
bound
jmp
xor
xchg
mov
cmp
scas
sbb
jo
push
in
and
cmp
inc
aaa
adc
daa
push
xchg
aas
jbe
cltd
pop
pop
xchg
xorb
in
bound
sti
decb
and
add
or
fcmovnu
ret
and
jnp
and
fsub
xor
cmpsb
sarl
mov
push
icebp
jo
ret
mov
dec
add
cli
sbb
push
pop
data16
pop
adc
pop
imul
xor
mov
bound
inc
dec
int3
adc
popa
jae
cmp
jmp
bound
cmp
jg
inc
mov
jno
pushf
int
pop
inc
push
cmp
mov
and
sub
jle
xor
mov
inc
test
ret
cld
out
pop
sub
inc
cmpl
popf
addr16
and
add
dec
push
cmp
pop
mov
icebp
cmp
and
out
xchg
shr
pop
pop
dec
jge
jl
dec
add
mov
dec
test
xor
repnz
xorb
jg
outsl
int
sbbb
pop
cmp
and
pop
clc
repnz
or
vhsubpd
cmc
xor
stos
jb
nop
out
in
hlt
fnstsw
out
pop
add
mov
flds
daa
sbb
fbld
loope
stos
dec
ret
add
pop
out
outsl
cmp
je
jp
cmp
rol
les
fisubrl
cld
sub
mov
mov
adc
pop
or
sbbl
jg
jge
leave
dec
lcall
in
cltd
leave
jle
push
sbb
cmp
jbe
lea
fmul
shll
xchg
scas
or
xlat
pop
adc
popf
inc
pusha
mov
insb
pop
bound
pop
inc
and
imul
push
rol
jne
mov
dec
lds
adc
cld
daa
dec
aam
push
xchg
outsl
cmp
xor
jg
or
flds
and
hlt
mov
mov
clc
xchg
push
jp
push
inc
push
lret
sub
imul
cwtl
stos
out
pop
out
cmp
xor
sbb
or
push
jle
mov
jecxz
aam
hlt
lods
or
rcll
xchg
mov
insl
inc
fcom
rol
inc
pushf
out
call
nop
aas
jmp
xorl
push
mov
jb
in
pop
xchg
xor
jp
push
in
insb
addr16
inc
insb
sub
jg
or
sarb
or
mov
adc
jo
clc
pop
sahf
push
and
in
add
outsl
dec
push
jle
test
mov
aaa
les
sbbb
stos
xchg
inc
mov
jmp
icebp
scas
jp
xchg
dec
cmp
arpl
fdivp
pop
repnz
cmp
mov
fs
add
mov
fsubrs
inc
cli
test
xor
inc
sub
sbb
and
leave
sbb
inc
xchg
dec
fisubl
mov
imul
mov
mov
ret
mov
dec
ds
imul
and
je
outsl
hlt
loopne
cmp
cli
fisubl
dec
in
das
dec
mov
xchg
cmp
jo
adc
stc
mov
sbb
xor
mov
into
mov
rol
xchg
das
ret
push
paddsw
sub
ss
inc
dec
movsb
test
xor
jne
xor
dec
xor
rcl
andl
mov
sbbl
jl
stos
inc
xchg
cmpsl
pop
mov
mov
ret
jmp
flds
mov
icebp
lret
push
in
ffree
push
cs
fdivl
fidivl
dec
lods
mov
ja
jo
ficoml
int3
cmp
sbb
pop
pop
xor
stos
xor
aas
repz
stc
repz
mov
jae
rol
adc
hlt
into
aam
mov
cmp
inc
lods
jl
lcall
sbb
js
fistl
orl
aam
jg
or
mull
pop
test
jne
xchg
xchg
pop
inc
mov
pushf
mov
es
filds
mov
fbld
pop
pushf
add
pushf
jno
nop
xor
adc
or
mov
fcoms
jno
js
je
lock
sti
pop
push
sbb
push
pop
int3
shrl
or
push
mov
sbb
imul
or
ret
decl
popa
in
xchg
cmp
and
insl
icebp
mov
mov
mov
ja
ds
aam
jae
repz
fs
jns
add
mov
pop
pop
cmpsl
decl
addr16
outsl
adc
sub
iret
out
dec
aas
jae
jo
xor
cmpsl
push
test
sbb
lret
xor
xor
jnp
fbstp
or
mulb
iret
cmpsl
test
data16
adc
adc
insl
arpl
push
mov
je
or
int
test
add
pop
nop
lock
sbb
sbb
fcomps
clc
xorl
mov
sbb
add
jne
xorl
icebp
fs
mov
fdivrl
mov
inc
pop
cmp
cwtl
inc
lcall
or
and
insl
jecxz
jp
mov
movsl
pop
std
sub
mov
lock
enter
inc
jecxz
lcall
or
jb
addr16
int
shll
sub
outsb
sbb
mov
popa
cmpsl
push
mov
jmp
push
cmp
jne
cmp
fdiv
lret
mov
xchg
int3
cmp
gs
push
in
lcall
sbb
test
xor
pop
adc
lods
push
lds
and
insl
pop
int3
les
loope
mov
out
push
fs
pusha
xchg
jo
pop
push
add
mov
push
push
out
in
cmp
popa
cmp
adc
pop
cmp
cltd
inc
pop
repnz
mov
fldenv
xchg
cld
stc
cltd
mov
loopne
stos
stc
das
in
fidivrl
notb
push
or
fcmovb
mov
or
cmp
xor
ret
mov
aaa
pop
fsub
mov
mov
pop
into
mov
int
dec
cmp
les
lock
sbb
stos
imul
popf
sbb
mov
test
ds
lret
mov
das
in
out
pop
mov
scas
add
jns
shl
lret
inc
rolb
xor
mul
fstps
sub
test
insl
fisttpll
mov
loope
addb
push
and
movsl
std
pop
nop
mov
mov
pushf
sub
xchg
and
xorb
and
insb
xchg
subl
pop
sub
jae
jno
sbb
les
clc
test
repz
push
mov
div
popf
out
imul
push
lods
and
sti
into
lds
push
das
or
inc
pushf
enter
sbb
stc
mov
jecxz
repz
mov
lahf
pop
adc
xor
inc
outsl
jnp
mov
ret
xlat
out
fwait
and
jae
sarl
jp
sbb
jae
stc
cmc
mov
cmp
add
scas
pop
enter
icebp
fisubs
decb
mov
xchg
xchg
stos
ja
jecxz
cmc
imul
outsl
hlt
lock
pushf
ficoml
imul
jbe
pop
pop
call
dec
inc
imul
sbb
inc
lretw
out
add
testl
js
mov
and
xchg
ss
adc
dec
sub
ljmp
pop
sbb
xor
popa
scas
or
outsb
mov
jno
add
lret
or
pop
or
in
enter
mov
negb
xchg
lods
inc
cs
js
shll
mov
push
fisubrs
pop
add
adc
jg
scas
and
mov
push
push
jns
mov
inc
repnz
sub
pop
dec
mov
outsb
gs
bound
fmuls
or
iret
nop
xchg
cmp
pop
sub
not
cs
xchg
jo
pop
leave
ds
jno
sub
jb
and
xor
jae
in
movsb
adc
inc
mov
add
js
loope
inc
or
loop
sbb
mov
scas
push
mov
repz
pop
xchg
jne
out
pop
cs
test
fwait
imull
mov
sub
lea
adc
mov
jle
pusha
fstpl
roll
adc
leave
xchg
mov
xlat
loope
lea
xor
dec
mov
enter
movsl
xor
mov
mov
xor
ror
sbb
mov
push
inc
sbb
adc
arpl
mov
add
js
xor
sbb
test
cmp
xor
lcall
lods
lret
pop
fisubrs
fistpl
xchg
push
push
sbb
out
roll
jb
movsl
sbb
lods
jge
adc
loope
loope
mov
push
and
shll
lret
fisubs
sbb
repnz
icebp
jae,pt
aam
dec
cmpsb
fistpll
js
xchg
mov
mov
jecxz
ret
cmpb
push
roll
out
roll
outsb
mov
mov
cmc
cmpsb
outsl
cld
enter
enter
sbb
pop
movsl
sbb
mov
mov
pop
adc
out
clc
outsb
jecxz
mov
xchg
xor
push
std
mov
hlt
mov
fidivrs
scas
dec
lds
popa
xor
repz
inc
jmp
into
ret
mov
inc
rcll
add
jbe
push
dec
std
das
addr16
aam
or
mov
dec
mov
adc
and
fidivrs
outsb
and
mov
loope
in
xchg
xchg
movsl
mov
pop
pop
fsubrl
es
iret
loope
fistl
jge
aam
pop
dec
outsl
sub
in
pop
stos
sbb
xor
inc
cmpsb
insb
cltd
adc
jp
fildll
mov
jne
adcb
mov
fcoml
popf
or
mov
or
loopne
and
es
xlat
jge
xchg
jns
loopne
dec
jbe
mov
mov
aam
fwait
stos
scas
pop
or
out
or
adcl
xor
push
inc
das
mov
int3
addb
push
jnp
loope
out
sub
or
repz
or
das
push
movsb
aas
mov
push
mov
or
bound
cmpsb
insl
pop
and
push
fdivrl
mov
mov
das
std
adc
dec
dec
rorb
fidivs
data16
inc
je
lods
mov
cwtl
sbb
leave
mov
xor
jge
inc
repnz
mov
sub
add
xlat
xchg
lcall
jb
and
jmp
cmp
sub
shl
out
jge
adc
inc
pop
lret
dec
stc
dec
ss
add
pop
sbb
mov
in
mov
push
pop
pop
add
aas
dec
sarl
add
jno
ret
inc
movsl
push
lea
lret
je
fisubrs
ds
mov
fnstsw
inc
mov
mov
movsl
and
jge
dec
out
xchg
ror
por
icebp
xor
xchg
and
out
push
ss
js
cmpsl
ja
dec
fdivrl
pop
pop
sub
fwait
push
push
xchg
cmp
push
and
in
add
cmp
testl
pop
push
pusha
and
and
mov
orl
xchg
js
xchg
push
xor
ds
push
xor
xchg
push
xor
xor
mov
and
clc
addr16
inc
data16
test
mov
insb
xor
and
shrb
sub
mov
cmp
stc
and
das
push
int3
xor
jmp
cwtl
js
xchg
je
lea
and
bound
sbb
mov
dec
cmp
in
ret
sbb
mov
jnp
inc
mov
icebp
or
jge
mov
jns
clc
push
ljmp
xor
lods
lds
dec
stos
push
loope
jp
aas
ljmp
mov
jne
fmuls
nop
inc
cmp
add
pushf
ret
add
sub
jnp
pop
lcall
or
lods
pushl
xchg
dec
jnp
lods
adc
pusha
mov
jns,pt
call
jbe
lret
lahf
mov
mov
inc
fdivrl
jbe
cld
cmp
cmp
pushl
pusha
jecxz
pushf
scas
repnz
cmp
insb
dec
cmpsb
fdivrl
idivl
cmp
shrl
mov
or
xchg
xchg
push
nop
push
xor
xchg
mov
adc
call
push
sub
dec
jle
xchg
mov
push
outsb
dec
popa
dec
fsub
insl
ficomps
std
sbbb
loope
and
bound
cmp
mov
mov
mov
insb
ss
cmovs
jae
outsb
mulb
dec
adc
lcall
adc
lcall
push
mov
shlb
inc
leave
inc
cmpsb
jmp
jge
add
xor
mov
ret
jge
ja
gs
jo
jnp
adc
xchg
xchg
arpl
pop
mov
lret
push
xor
inc
mov
and
lea
cltd
xchg
and
lahf
ffree
sub
cltd
loop
shl
and
inc
pop
out
call
dec
shll
loopne
inc
dec
add
jg
sbbl
sbb
sbb
nop
lret
lds
jle
pop
test
xor
test
and
out
ljmp
sub
adc
add
sbb
sahf
mov
repnz
jecxz
inc
cmp
loop
pop
icebp
mov
cs
cmp
in
adc
sbb
ret
aad
loope
sub
pop
mov
ret
mov
push
push
sbb
pop
or
lods
mulb
jbe
cmp
and
loopne
sahf
mov
jle
dec
add
add
iret
sbb
adc
mov
xchg
jp
mov
push
sub
pop
fcoms
jg
jge
dec
in
mov
push
int3
ret
xchg
mov
xor
push
adc
mov
xchg
cmp
sbbb
pop
out
ja
out
andl
dec
sub
mov
mov
jne
sbb
push
push
pop
pop
pop
sub
into
lods
mov
lret
ret
cld
clc
pop
cmp
mov
loopne
dec
mov
nop
adcl
or
mov
pop
xchg
jecxz
sbb
out
les
jb
mov
xchg
sbb
xor
push
sub
dec
push
or
sub
xchg
addr16
pushf
push
mov
cmpsl
or
pop
or
inc
or
repnz
xor
rcrb
pop
pop
in
into
in
mov
imul
mov
xchg
es
xchg
push
sbb
sub
insb
xchg
push
sbb
lds
scas
jle
add
outsb
xchg
xchg
cmp
pop
push
and
mov
ljmp
pusha
jne
int
mov
icebp
loope
iret
jp
clc
sub
add
repnz
jo
jbe
push
xchg
cmpsb
mov
cmp
xor
outsl
xchg
sub
outsb
pusha
sub
adc
pusha
mov
sub
pop
insb
andl
std
cmpsl
int
xchg
add
and
xchg
add
push
lods
inc
mov
nop
aam
push
fcoml
inc
jmp
lock
es
ds
xchg
and
jl
bound
or
sbb
leave
jp
lea
jp
jp
ret
repz
jge
add
jg
add
int3
cmpsb
cmp
jnp
arpl
scas
addl
pop
test
xchg
stc
cltd
xchg
cmpsl
fidivrs
test
adc
nop
sbb
out
jmp
cli
cmpsl
or
in
fldl
inc
jns
clc
gs
out
pop
fneni(8087
adc
insl
mov
or
adc
stos
fstl
mov
decb
out
mov
sub
mov
pop
pop
dec
enter
fldenv
push
dec
pop
xor
imulb
fisubrs
cmpsl
mov
aad
int
and
xor
ljmp
jno
sub
rolb
ljmp
shl
leave
add
inc
or
mov
js
sbb
repz
call
cld
pop
inc
clc
jl
xchg
jbe
jle
xor
pop
dec
repnz
or
jecxz
mov
dec
xchg
xor
fcoml
hlt
aaa
mov
repz
mov
jmp
outsb
ret
icebp
jae
add
test
pop
sub
push
bound
or
cld
lods
inc
mov
in
test
or
gs
aad
jae
aas
pop
rclb
jae
in
cmpsb
nop
cmc
pop
scas
mov
push
cmp
push
pusha
enter
in
test
je
mov
xor
or
out
push
fistl
loope
xor
mov
inc
data16
mov
outsb
int
aas
fs
bound
arpl
call
sub
and
stc
mov
xchg
jl
roll
or
cmp
icebp
orl
in
cmp
cmp
dec
loope
sarb
dec
push
mov
les
addr16
xchg
mov
sti
imul
pop
out
jmp
jg
dec
xchg
xor
test
cltd
or
cwtl
sbb
jle
jno
xorl
or
jbe
stos
dec
sbbb
xchg
shl
and
dec
mov
hlt
lock
icebp
cmp
sub
or
lock
sub
lods
and
push
scas
adc
pop
imul
or
mov
insl
sub
pop
pushf
sbb
faddl
inc
cmp
rolb
pushf
xchg
sti
xchg
clc
lea
push
or
in
mov
pusha
sbb
ret
cmc
aad
inc
sarb
and
fcoml
fld
pop
lahf
ret
mov
insb
pop
pop
lods
lahf
dec
sar
add
loop
inc
dec
xor
lds
dec
scas
xor
adc
cmp
pop
add
inc
sbb
mov
mov
sbb
pop
dec
pop
inc
xchg
in
dec
pop
add
jl
mov
subb
mov
into
add
push
insl
lret
adc
lea
push
or
push
push
icebp
dec
repnz
xor
xchg
push
xlat
adc
jmp
es
sbb
gs
inc
cmp
or
fwait
sbb
fdivrl
push
stos
pop
inc
or
outsl
data16
scas
divl
pop
xchg
repnz
dec
ljmp
xchg
sbb
push
push
je
mov
inc
lahf
xchg
fwait
or
mov
loopne
cmp
xchg
inc
pop
pop
xchg
aas
outsl
push
cs
mov
leave
adc
or
mov
test
cltd
pop
mov
std
xchg
push
xlat
add
mov
loope
mov
cmp
or
imul
xor
mov
and
xor
pop
fnsave
jno
clc
fildl
add
cvttps2pi
mov
or
sub
outsl
xchg
hlt
js
push
jp
xchg
mov
out
insb
mov
fnstcw
out
inc
arpl
jl
sub
push
xchg
jmp
push
adcb
sbb
scas
dec
pushf
xor
push
js
popf
pop
lcall
mov
cs
mov
push
pop
cs
mov
fwait
sub
sbb
rol
mov
push
lcall
dec
repz
sub
adc
in
cs
lcall
loope
insl
xchg
insl
inc
inc
fdiv
mov
xchg
adc
mov
add
js
es
xchg
aam
sbb
arpl
xlat
jns
mov
push
mov
out
push
lds
insl
aam
test
or
sub
mov
out
das
push
sti
out
imul
mov
mov
jmp
ss
mov
push
xchg
cmc
mov
shlb
pop
fcom
stos
nop
xor
sarl
xor
mov
ret
scas
mov
addr16
rcrb
cmpsl
pop
mov
loope
rcrb
popa
inc
jmp
call
sbb
test
jmp
mov
mov
push
jo
repnz
orb
mov
xchg
inc
popf
and
adc
and
xlat
ret
fndisi(8087
xchg
lcall
int
movsl
sub
fstpl
call
std
jl
sub
mov
int3
or
cmp
jl
xor
lcall
pop
push
ds
mov
adc
xchg
and
mov
mov
int
mov
movsl
sbb
lcall
rcll
cli
inc
and
ret
and
loope
imul
popa
cmp
xor
and
test
mov
fldl
mov
sbb
imul
sti
std
insl
and
cmp
les
adc
cmp
or
dec
xor
or
call
ss
shll
cld
adc
out
jne
mov
ret
and
jge
cltd
out
push
push
jbe
pop
or
xor
test
clc
lcall
dec
outsb
and
imul
cmp
adc
imul
aaa
jae
dec
or
lods
pop
fs
shll
out
lods
and
shlb
out
cwtl
cwtl
sub
leave
and
sub
or
lock
in
test
clc
popf
push
es
movsl
push
pop
scas
iret
andl
cltd
or
push
je
or
fimuls
gs
pop
sbb
outsl
add
sub
lea
add
fstl
loopne
testl
addb
dec
mov
fadds
daa
xchg
fadd
dec
xchg
pop
sub
pop
mov
xchg
addr16
shrl
sbb
lods
mov
adc
stos
js
mov
shlb
sub
pushf
fisubs
xchg
lock
inc
pushf
loopne
insb
fmul
out
pop
ror
adc
out
jo
cli
testb
xorl
sbb
adcl
jns
pushf
lods
sbb
frstpm(287
xchg
jg
jae
or
and
fsubrl
pop
mul
jg
movsl
sbb
cmp
cld
push
out
adc
sbb
sbb
int
rcrb
jmp
call
push
pusha
mov
rcrl
sbb
or
add
mov
js
push
cmpsl
jno
gs
xchg
push
pop
movb
inc
and
push
pop
fsub
sbb
in
je
pusha
test
add
sbb
mov
mov
ret
adc
or
add
adc
loope
ljmp
imul
ja
xchg
rcrb
movsl
flds
clc
xor
loopne
xchg
pop
push
lock
push
push
push
and
and
mov
mov
jno
jbe
push
cmpb
sub
fbld
mov
push
xlat
and
stc
fcomps
aam
gs
ret
negb
repnz
int
or
loope
js
sbb
imul
fiaddl
xchg
out
push
sub
pop
sub
xchg
movsl
jp
std
imul
or
xchg
mov
inc
fisubrl
leave
into
scas
sub
adc
inc
adc
outsl
cltd
shrl
lods
jp
xchg
lcall
jno
ffree
ds
call
addr16
gs
cmpsl
iret
repz
out
pop
scas
add
idiv
or
xchg
mov
lret
sub
stos
xchg
sbb
mov
adc
ljmp
adc
or
cltd
lock
sub
adc
rclb
ds
imul
daa
mov
dec
sbb
into
rorl
mov
pop
sub
dec
test
jae
ljmp
push
xchg
push
mov
out
xchg
jo
lahf
jae
inc
addr16
pop
jo
lcall
cmp
xchg
or
test
pop
pop
add
dec
sub
imul
mov
stos
shrb
cltd
mov
add
xor
adc
popa
add
and
pop
add
rdpmc
outsb
xchg
mov
push
jmp
rorb
imul
jo
jp
inc
iret
push
stos
jg
test
js
cmpsb
xor
mov
mov
adc
cwtl
xchg
in
push
movsb
cmp
sub
sbb
loop
lods
cli
push
mov
cmp
add
adc
bound
cmp
mov
ret
mov
xor
jmp
mov
pop
mov
jge
mov
faddp
jns
std
frstor
hlt
rolb
fisubrs
mov
and
xor
aam
jge
stos
movsb
fldl
andl
test
jp
dec
mov
and
aad
xor
lea
jge
mov
xor
aad
jl
aad
je
dec
xor
mov
daa
cmp
iret
pop
and
pop
dec
jo
or
ds
jge
or
fistpl
fwait
cltd
sbb
jge
or
mov
xchg
mov
popf
pop
out
pop
mov
inc
mov
add
inc
repz
stc
lods
repz
adc
adc
jne
out
sbb
call
dec
mov
sub
loop
popa
pop
lcall
rcrl
and
in
xchg
sbb
cli
and
mov
mov
lret
xlat
inc
fldl
adc
loopne
pop
dec
xchg
leave
pusha
sub
dec
add
aaa
mov
adc
add
and
das
mov
cmp
aam
cmp
subl
add
mov
xchg
movsb
iret
mov
inc
lock
iret
sahf
ja
adc
dec
xor
jmp
add
repz
adc
inc
lea
movsb
push
mov
mov
pushf
mov
mov
pop
mov
lea
dec
lock
mov
jmp
push
out
mov
lret
fsubrl
jp
andb
sbb
and
daa
xchg
gs
jecxz
sub
aam
cs
jns
stos
sub
or
ret
lcall
push
add
jmp
adc
adc
push
lcall
sbb
mul
orl
cmpsb
jmp
cwtl
movsl
enter
leave
fwait
mov
orl
sbb
mov
mov
pushf
and
dec
lcall
and
add
aad
stos
mov
lret
sbb
ds
mov
jae
scas
push
jo
pop
pushf
sbb
out
mov
mov
jne
lock
dec
cmpsl
or
or
hlt
inc
add
aaa
icebp
gs
adc
inc
addb
ds
cs
sub
xchg
adc
cmpsb
xchg
jge
popf
movsb
cld
adc
out
fwait
cmp
fdivs
push
push
cmp
int
and
push
lock
repnz
sub
int3
ret
adc
clc
sub
sbb
stos
sub
xor
mov
and
sbb
les
stos
xlat
pop
push
jle
stos
inc
sbb
out
fildll
inc
enter
int
test
jecxz
jae
mov
adc
sub
inc
pop
roll
ja
fsubl
scas
jb
mov
xchg
xchg
fwait
xchg
push
int3
leave
enter
out
jge
pop
shll
popa
xchg
popf
mov
fs
jmp
dec
pushl
sub
pop
stos
cmpsb
subb
cmc
add
pop
ret
pop
jnp
xchg
hlt
xchg
xchg
push
dec
mov
call
add
mov
sub
xchg
pop
in
push
push
das
xor
daa
test
jae
out
xor
inc
daa
pop
sub
leave
sahf
fsub
lock
mov
xchg
jecxz
xlat
ret
loop
arpl
je
das
add
ljmp
sub
leave
cmp
iret
push
sbb
inc
mov
adc
popf
pushf
xor
push
xor
and
iret
inc
aas
cli
mov
stos
shrb
pop
mov
out
mov
iret
cmpsb
mov
inc
jns
jl
pop
jecxz
or
pop
push
cmp
pop
xchg
fsub
cwtd
lahf
call
popf
dec
xchg
mov
push
push
adc
sahf
aam
push
push
aad
fcmovu
sbb
cwtl
mov
dec
push
mov
dec
sub
or
add
movsb
sahf
add
dec
ds
sub
pop
and
cmpb
push
loopne
popa
sbb
mov
test
in
notb
dec
mov
mov
arpl
fisttps
mov
push
add
addb
ret
inc
fldcw
fwait
es
ret
mov
mov
imul
in
stos
xchg
bound
mov
outsb
adc
and
ljmp
or
testl
jno
pop
dec
mov
dec
push
pusha
notl
pop
and
aaa
imul
shl
sub
and
jnp
loopne
and
push
repnz
xor
sahf
jb
incl
sub
je
mov
loop
fcomps
mov
xchg
cmp
xor
inc
jae
sbb
mov
ss
jmp
xchg
inc
jecxz
aas
cmp
xchg
xchg
jbe,pt
movsl
jg
ret
ljmp
mov
adc
in
mov
dec
sahf
push
or
inc
jbe
pop
gs
aaa
lret
jecxz
icebp
mov
aam
xor
movsl
inc
push
dec
popf
lcall
mov
jmp
int3
adc
shrl
gs
mov
mov
xchg
in
inc
pop
sub
rorb
lea
setg
pop
ret
push
in
push
pop
roll
jae
pop
inc
in
mov
mov
int
sub
dec
sarb
out
sub
mov
inc
cmp
bound
jle
xor
xchg
mov
dec
push
and
call
loopne
jge
cmovl
fsubr
stc
das
add
mov
rol
sti
outsl
and
test
sbb
rolb
xor
psrld
sahf
mov
sbb
pop
setg
sbb
cs
mov
xor
cmp
push
push
mov
int3
in
in
std
add
in
data16
and
jmp
xchg
stos
lock
xchg
mov
jp
dec
xchg
xchg
mov
push
std
fcompl
dec
push
cwtl
pop
xchg
sub
jb
jl
in
sbb
test
push
dec
adc
xchg
cmp
add
mov
scas
rep
out
jb
pop
push
stos
arpl
xor
add
mov
add
or
push
call
inc
fwait
in
stos
dec
sub
cmp
push
arpl
lret
lds
ret
mov
test
cmc
adc
sub
addr16
xchg
bound
lret
add
scas
shll
out
in
outsl
add
aaa
jp
xchg
mov
sub
movb
fimuls
add
pop
aaa
sub
das
sbb
pusha
inc
outsl
fs
pop
mov
jle
sub
jle
fwait
aas
jnp
pop
mov
je
std
xchg
jmp
mov
orb
adc
jg
movsb
mov
outsb
in
iret
cwtl
push
icebp
pop
mov
bound
push
in
int3
ret
or
testl
int3
std
adc
ss
in
jno
push
pop
xchg
mov
lds
xor
mov
or
enter
ds
aas
inc
sub
in
mov
les
xor
push
inc
add
push
xchg
sbb
xor
sahf
jp
pushf
pop
in
stos
into
loopne
out
pop
loopne
or
lret
or
popa
xlat
add
test
pop
ds
mov
sbb
and
and
jle
test
leave
jl
scas
fldt
and
popa
mov
dec
in
or
test
shrl
xor
movsb
cld
scas
mov
sub
enter
xchg
xor
dec
xchg
dec
cwtl
mov
push
and
leave
gs
push
test
data16
jne
dec
data16
mov
adc
push
adc
mov
fwait
xchg
push
push
xchg
cld
js
mov
out
scas
pusha
movsb
xlat
ja
ljmp
adc
cs
jg
pop
inc
movsb
movsb
cmp
scas
scas
call
mov
daa
movsb
lods
inc
sbb
dec
cli
pop
or
in
aaa
cmpsb
jbe
sbb
mov
push
shrl
xor
pop
lcall
loopne
pop
pop
jp
xchg
inc
or
orl
enter
out
xchg
hlt
inc
xchg
out
cwtl
iret
fdivrp
sbb
frstor
add
test
cld
xor
xor
jmp
data16
inc
ljmp
repnz
std
mov
add
pop
inc
cmpsl
xor
cmc
movsb
lds
dec
cltd
cmc
and
dec
pop
mov
stos
pop
mov
mov
movb
inc
pop
out
jae
mov
sahf
outsb
xor
out
js
outsl
sub
sub
sbbb
mov
fst
out
popa
push
and
punpcklbw
mov
mov
lret
movsl
sti
xchg
mov
cltd
xor
lea
test
xor
aas
push
in
stc
call
rcll
xchg
bound
add
outsb
mov
stos
pop
or
in
mov
in
push
xchg
int
addr16
sbb
adc
rorb
loopne
shrl
loopne
incb
testl
or
dec
mov
enter
cmc
mov
loope
inc
sub
je
mov
sub
xorb
insl
mov
aad
pop
mov
cmp
pop
mov
imul
xorl
push
ljmp
xor
inc
inc
shr
mov
or
jp
std
pop
push
int
xchg
sub
cli
or
dec
sbb
sbb
int3
add
sub
xor
push
xor
or
cli
cmpxchg
pop
in
mov
xlat
or
inc
les
sahf
imul
inc
rcll
adc
jmp
aas
inc
and
dec
xor
insb
cwtl
dec
ret
mov
adc
pusha
scas
inc
cmp
mov
fdivrl
inc
js
adc
pop
lret
mov
arpl
aad
std
aaa
sarb
scas
movsb
jne
fcoml
stc
and
pop
cmp
mov
and
ja
or
scas
and
mov
lcall
scas
call
movsb
push
mov
dec
popa
test
xlat
mov
es
xchg
pop
je
inc
add
les
aam
inc
sbb
mov
gs
lret
pop
lock
xchg
or
jae
ficomps
pop
jmp
pop
push
out
pop
adc
rcll
fldl
loopne
bound
int
xchg
sub
sbb
ret
cmp
nop
loop
add
adc
xchg
jne
sbb
fcmovne
ja
jp
cmp
rcrl
daa
mov
fbld
lret
test
fdivp
xor
in
ret
jl
push
xor
rolb
gs
adc
stos
js
dec
nop
mov
mov
test
dec
xchg
popa
or
cmpsl
icebp
enter
scas
mov
lea
mov
das
inc
xlat
int
xor
xor
pop
pop
jle
xlat
pop
xchg
das
int3
dec
loope
and
dec
mov
lods
mov
jne
scas
hlt
mov
fidivl
out
sub
push
dec
push
sub
test
xchg
imul
xchg
mov
mov
pop
cmpl
movsl
cld
xor
or
pop
lret
aam
add
test
out
cmp
dec
lret
not
adc
mov
or
inc
ret
lret
mov
iret
and
xor
add
xchg
push
add
pop
mov
or
test
xor
lods
in
mov
sarl
jae
stos
and
jg
arpl
pop
mov
xchg
outsl
std
out
and
inc
fcoms
cmp
je
adc
push
std
cmc
sbb
js
pop
adc
sbb
setae
add
mov
mov
xlat
push
sub
jo
or
add
mov
ret
call
sbb
pop
rclb
push
xchg
push
dec
out
jg
arpl
das
dec
lahf
jo
mov
jl
mov
mov
push
add
imulb
push
in
adcl
out
cmp
rorl
push
mov
insl
sub
sub
mov
and
inc
jp
add
mov
push
sbb
mov
adc
pushf
lahf
call
pop
es
sub
jle
repnz
test
movsb
add
add
or
in
adc
mov
ss
sub
sarl
hlt
inc
hlt
cwtl
add
js
mov
mov
int3
stos
popa
popa
stos
pop
imul
bound
in
dec
dec
pushf
imul
repz
sub
addr16
fcomps
cli
add
fstpt
mov
out
int3
mov
ss
push
js
ret
adc
jb
out
leave
adc
pop
sarb
xor
outsl
dec
je
lret
jb
add
pop
push
sbb
lea
jp
pop
cmp
clc
lret
sbb
xor
outsb
aad
mov
xor
dec
dec
mov
dec
imul
adc
out
pop
and
push
data16
sub
jnp
mov
loope
jp
mov
es
call
mov
add
adc
sbb
dec
pop
pop
fwait
jb
out
sub
cmp
leave
insb
dec
dec
fmul
mov
xchg
rcll
cltd
sbb
ja
mov
xchg
ret
and
jg
add
xor
aas
jmp
in
rcll
std
fs
jp
ja
fdivrl
fxch
xor
stos
shll
imul
shlb
cmp
sbb
jge
sbb
mov
and
mov
int
fdivl
sbb
xchg
mov
jecxz
mov
sarb
or
add
sahf
insb
mulb
adc
lock
es
stc
sub
pop
sbb
jl
lcall
mov
sbb
das
cmp
inc
decb
in
in
out
lds
bound
clc
cmpb
or
pop
nop
mov
loopne
je
fidivrs
cmp
cmp
push
or
aad
xchg
movsl
xchg
insb
cld
mov
movsl
dec
and
out
aaa
push
or
popa
push
pop
sub
sarb
pop
jne
sub
pop
inc
jge
shlb
mov
ret
mov
and
pop
or
xchg
dec
stc
sub
pop
push
fwait
les
sub
jmp
ret
push
out
adcl
and
leave
mov
into
aas
int3
out
flds
lock
add
jecxz
das
xor
pop
pop
cmp
test
push
mov
jl
mov
jb
sub
stos
sti
dec
mov
jmp
sbb
sbbl
lahf
loopne
sbb
fwait
jecxz
fimuls
adc
add
loop
bound
pop
or
ret
sub
in
mov
add
and
mov
adc
jl
fsubp
pop
sahf
pushf
and
adc
sbb
inc
pop
xor
jmp
mov
mov
pop
mov
mov
pop
decl
leave
push
aas
adc
enter
test
jmp
lea
mov
arpl
push
lret
xor
popf
push
sarb
xchg
dec
test
jecxz
cmpsl
imul
mov
xor
aaa
mov
loope
sarl
or
or
outsb
xchg
ja
mov
cmp
push
cwtl
stos
clc
or
sahf
roll
cmp
pop
dec
push
in
lret
out
push
out
push
or
jnp
sbb
mov
mov
xorb
mov
ficoml
inc
adc
repnz
adc
mov
dec
xor
loope
xchg
mov
lcall
mov
addb
push
in
mov
jmp
mov
clc
outsl
clc
lcall
popa
pop
jne
or
shll
mov
mov
mov
nop
xchg
xchg
adc
popf
test
das
pushf
or
sbb
sub
push
pushf
aaa
imul
out
dec
mov
sbb
call
push
push
test
jns
leave
adc
push
adc
loope
cmp
add
hlt
adc
push
vmread
mov
test
inc
shrb
imul
pop
stos
adc
cmp
iret
push
add
out
and
aas
jne
jb
ret
adc
ds
cwtl
pop
push
inc
cmp
mov
xor
repnz
in
imul
popf
cmp
loop
push
mov
mov
insb
fidivs
dec
or
jmp
xchg
adc
sbb
in
add
mov
dec
xorb
in
loopne
pop
cwtl
popf
xchg
sbbl
and
jb
cwtl
mov
jg
fisubrs
pop
mov
dec
movsb
inc
ret
push
rcl
jge
jmp
sbb
es
sub
dec
pop
mov
pop
std
add
mov
insl
iret
sbb
mov
shl
jno
mov
out
in
mov
fcoms
sahf
or
add
test
ds
jmp
insl
pushf
lds
das
ret
mov
subb
jns
adc
cmp
mov
ret
das
push
mov
mov
jecxz
movsl
add
pop
les
fmull
lea
jo
loope
push
and
daa
mov
cmp
insb
movb
mov
push
jo
push
push
loopne
cmp
and
mov
shl
sahf
jae
call
sbb
jmp
imul
mov
mov
int
ret
js
add
enter
insb
xchg
cmp
incl
stos
mov
push
pop
jmp
nop
insl
mull
sbb
std
ret
and
les
addl
in
mov
stc
test
inc
pop
dec
std
push
pop
push
sub
insl
ss
jmp
test
sub
in
cmpsb
adc
adc
adc
das
add
mov
cmpsl
ja
fistpl
daa
leave
mov
cmp
cmp
movsl
mov
push
mov
pop
jae
push
push
loope
mov
inc
or
xchg
dec
mov
fwait
pop
sub
pop
imul
add
push
orb
aad
xor
cmp
aas
stc
xchg
xor
mov
sbb
shrl
incb
xchg
mov
xor
xchg
add
insb
test
sahf
lds
js
sub
clc
inc
adc
fiadds
loopne
ljmp
or
stos
pusha
or
cwtl
adc
movl
xchg
xor
pusha
xchg
icebp
pushf
and
dec
add
push
sub
or
shll
add
into
inc
cltd
sbb
or
jle
mov
mov
imul
sbb
addr16
inc
push
push
mov
jl
xchg
mov
xor
mov
adc
lret
leave
pop
jecxz
cmp
xchg
ret
inc
decb
sub
pop
loop
xor
pop
negb
jo
pop
inc
je
cmp
cmpsb
ret
add
lea
push
cmp
lods
mov
out
push
daa
imul
ss
cwtl
mov
mov
push
xor
mov
xor
gs
fadds
dec
push
pop
xchg
out
add
xor
jmp
push
bound
data16
loope
ret
mov
gs
int3
aas
add
popf
mov
jge
xor
cmpsb
xor
f2xm1
mov
xchg
popf
lahf
adc
mov
mov
pusha
arpl
movsb
lret
cwtl
push
scas
rcrb
xchg
addr16
adc
mov
out
xchg
add
out
ret
sbb
lea
das
mov
lahf
sbb
dec
insb
add
push
and
in
pop
push
test
int
test
push
push
xchg
adc
lret
inc
notb
divb
imul
ret
ret
xchg
inc
pop
sub
in
xchg
rcr
inc
insl
cmp
or
cmp
jge
dec
negb
lret
in
int
xor
pop
aam
pop
mov
adc
pusha
sbbl
ds
pop
adc
fistps
negl
popf
in
inc
xchg
das
sbb
sbb
nop
div
cli
jge
shlb
dec
mov
int3
fstpt
and
loopne
mov
pop
add
and
xorl
pusha
cmp
add
push
mov
shrb
repz
aaa
dec
sbb
sbb
and
cmpsl
scas
jns
pusha
icebp
push
mov
sbb
cmpsb
lea
mov
mov
xchg
inc
sub
and
fsqrt
fidivl
daa
clc
xor
mov
push
arpl
out
xor
loopne
fmul
test
lahf
das
jecxz
fsub
mov
jbe
jl
lock
pop
adc
ds
scas
jne
je
jnp
call
test
mov
hlt
nop
push
adc
and
xor
and
in
mov
xor
jmp
mov
jg
nop
out
jno
pop
stos
shrl
popa
daa
add
dec
bound
cmc
mov
jp
cmp
cltd
xor
push
mov
push
push
dec
dec
jl
cmp
imul
pop
add
sub
leave
lahf
jne
inc
loop
cs
cmpb
jb
jo
call
das
fsub
pop
pop
xor
lds
pop
das
mov
fwait
and
in
fimull
cmp
aad
fwait
clc
push
jecxz
fadds
adc
pop
lds
or
ds
mov
clc
test
add
fidivrl
cmp
jp
mov
push
push
outsb
inc
mov
cmp
inc
inc
xor
push
cmpsb
sub
in
sbb
in
scas
test
clc
es
and
roll
jnp
sbb
sbb
jae
cmpl
dec
and
mov
shr
andb
in
test
ret
test
sub
scas
mov
jle
mov
pop
sbb
dec
addr16
mov
and
aad
dec
jle
dec
nop
mov
dec
enter
push
push
xchg
push
ss
push
push
pop
loop
mov
sbb
lret
imul
icebp
fcmovnb
lea
cld
fcmovnbe
xchg
aaa
xor
xlat
fstpl
cmp
mov
inc
lods
jb
cmp
mov
hlt
xorb
insb
inc
sbb
pop
ret
arpl
sub
xchg
fs
dec
adc
ret
into
out
nop
mov
mov
xor
jmp
inc
ljmp
jbe
ficompl
out
lret
add
mov
shll
outsl
out
dec
push
cmpsl
xor
fcoms
loope
nop
sbb
or
lcall
sarl
arpl
bound
cmpsb
fildl
push
mov
xor
and
xchg
push
xor
int
add
xchg
rol
lret
xor
test
repz
ss
or
push
jnp
xchg
sub
push
lock
jb
pop
sbb
out
stos
sub
or
mov
dec
int
push
repnz
pop
jne
std
add
xor
mov
pop
scas
into
xor
das
insl
mov
data16
sub
mov
jmp
jge
sub
cmc
notb
test
subb
pop
sbb
les
mov
fstl
cwtl
xor
gs
sub
imul
sub
pop
aad
jg
pop
mov
mov
fildl
add
mov
rclb
mov
cmp
int3
inc
or
jge
xchg
xor
and
jno
enter
jmp
int
pop
xlat
adc
insb
insl
ret
cmpsb
dec
pop
loope
jg
std
pop
cs
mov
adcl
adc
mov
jno
cltd
arpl
loopne
out
push
pushf
adc
fdivrs
shlb
push
js
xchg
es
xchg
sbb
sar
and
inc
shr
mov
bound
cmc
cmp
sarl
xchg
mov
insl
push
cwtl
pop
lahf
inc
jnp
pop
test
push
js
ret
idivb
sbb
dec
push
push
aad
imul
repnz
push
cltd
inc
and
mov
mov
lods
xchg
in
addr16
mov
or
cmp
ljmp
fsubs
lea
inc
dec
lcall
popa
and
jne
test
jge
mov
mov
ds
pop
mov
push
adc
iret
test
shrb
xchg
jg
jo
cli
adc
dec
jnp
fwait
data16
stos
mov
daa
mov
das
dec
xchg
mov
lret
mov
subb
mov
cmp
nop
cmpl
xor
xchg
jge
loope
imul
inc
lods
ret
cmp
jle
arpl
pop
push
add
push
imul
lea
movsb
xchg
pop
mov
jo
gs
loop
adc
lds
fldenv
mov
or
lahf
cs
or
sbb
dec
leave
loope
test
test
mov
daa
inc
xchg
cmpsb
and
pop
loop
call
or
and
mov
icebp
sub
pop
mov
mov
xchg
cmpsb
shrl
lds
clc
mov
cmpsb
out
pop
xor
hlt
sub
mov
outsl
sbb
ret
loop
push
sbb
cmpsl
repz
push
out
or
jg
idivb
jb
adc
into
mov
mul
dec
jne
cmp
pop
sbb
loopne
add
test
repnz
addr16
add
fisttpll
and
cmpsb
lret
cmp
add
mov
pop
test
filds
test
je
push
sbb
call
mov
enter
sub
xchg
sti
cmpb
lcall
lcall
xchg
lahf
stc
mov
stos
sub
or
lahf
test
movsb
dec
sbb
mov
sub
lock
mov
mov
into
stos
mov
or
pop
mov
pop
scas
add
lock
mov
loope
out
mov
or
ret
rcr
bswap
ret
mov
mov
jb
sahf
or
push
fwait
stos
ret
sub
add
cmp
int
mov
mov
ljmp
sti
inc
and
dec
lods
subl
in
xchg
pop
aad
jns
ss
fadds
mov
int3
adc
push
and
aad
add
in
mov
movl
shrb
fdivl
jmp
je
adc
xlat
add
xchg
or
subl
js
mov
or
inc
rol
push
push
sbb
xchg
adc
leave
pop
sti
gs
and
sbb
ret
jg
shlb
mov
fdivs
xchg
mov
jp
sub
jecxz
adc
xchg
iret
repnz
js
ret
adc
int
pop
dec
xchg
mov
or
or
test
mov
cmp
dec
push
mov
xchg
adc
fdivr
imul
mov
adc
push
sbb
adcl
inc
pop
test
cmp
rcl
es
adc
cmpb
aas
repz
lret
jne
adc
or
sbb
sbb
add
repnz
lods
lods
in
inc
fsub
sbb
dec
jne
les
popa
out
out
adc
xor
subb
dec
sbb
pop
and
iret
jo
clc
fisubs
je
jge
and
pop
xchg
push
xor
inc
xchg
sbb
mov
pop
pop
and
inc
mov
mov
pop
cmpb
cmp
sub
mov
xchg
cmp
std
jns
frstor
mov
hlt
rcll
daa
int
jecxz
and
ja
ret
mov
out
mov
out
inc
js
leave
mov
fistpl
testb
inc
or
hlt
test
mov
push
mov
int
pop
insb
es
es
mov
daa
lcall
inc
pop
adc
scas
hlt
dec
sti
hlt
adc
push
aam
jbe
pop
out
mov
adc
shlb
imul
mov
adc
int3
lods
clc
fstpl
cwtl
cltd
sub
xchg
aas
cmp
aaa
mov
popa
insb
xchg
bnd
push
lock
or
scas
lret
aam
les
shl
daa
data16
inc
lret
cmp
mov
out
stos
sbbb
stc
aam
ja
lret
cld
arpl
ljmp
clc
mov
fwait
sbb
sub
int3
sub
out
pop
negb
cmc
scas
lcall
loop
sahf
dec
adc
pusha
xor
add
pop
inc
nop
xor
push
mov
je
repnz
jbe
push
or
insb
lret
addb
dec
pop
adc
jno
lods
jbe
lahf
push
adc
lock
jge
mov
cmp
dec
frstor
push
arpl
pop
xchg
fwait
jle
adc
push
jmp
fistl
push
add
imul
mov
jmp
iret
dec
stos
pusha
lret
outsl
int3
mov
adc
les
cltd
outsb
jns
push
clc
outsb
push
add
in
je
add
cmp
cmc
call
cmp
mov
add
jno
pop
pop
divl
ss
sub
mov
lods
dec
movsb
nop
push
mov
mov
xchg
jg
sbb
ss
dec
loop
sti
jl
sahf
jle
cmp
mov
lods
push
rorb
movsb
outsl
push
call
jle
or
cmpb
inc
clc
push
pop
mov
dec
divb
ds
jae
mov
repnz
ss
out
enter
mov
lret
das
cli
push
in
push
add
cs
fisubl
xchg
orb
jae
ficoml
xor
jo
cwtl
leave
add
jnp
jae
inc
xor
jg
pop
sbb
shl
sarl
adc
dec
pop
in
mov
pop
int
repz
fisubrl
das
cmp
or
mov
jno
out
inc
fstpl
sbb
or
test
rorb
loope
sbb
and
jle
leave
in
loope
pusha
pop
movsl
adc
rcl
ds
test
addb
mov
mov
lods
call
pop
ljmp
xor
jno
dec
inc
fwait
ret
fistpl
cmp
dec
xchg
in
inc
cli
lods
insb
mov
idivb
ljmp
lret
fcompl
stc
pop
mov
push
push
dec
adc
dec
sti
mov
mov
out
jmp
mov
ss
repnz
iret
dec
xchg
filds
mov
in
push
andl
sbb
cli
add
mov
mov
inc
sub
push
mov
cmp
sub
ljmp
xchg
push
rorl
lret
sbb
jno
push
jbe,pn
arpl
inc
sbb
ret
lret
shl
iret
dec
jbe
jp
lods
lock
loopne
iret
mov
mov
pop
cmp
mov
xor
shll
adc
and
in
cmp
sub
inc
js
push
adc
inc
pop
mov
jae
mov
adc
mov
loop
repnz
out
xchg
xchg
aad
adc
inc
inc
pop
jp
outsl
mov
inc
dec
xor
adc
push
mov
xor
xor
dec
pop
sub
xchg
cmp
xchg
repnz
in
push
scas
aam
mov
jb
or
push
adc
xor
pop
lds
imul
sbb
mov
push
cli
push
mov
mov
ret
pop
lret
jne
adc
add
into
or
sti
clc
mov
jmp
inc
xchg
lods
jae
jmp
sbb
outsb
jmp
jp
xor
xorb
and
push
arpl
je
add
and
aad
jbe
or
sahf
lock
inc
int3
sahf
mov
sahf
bound
push
xlat
sbb
mov
jg
mov
inc
xchg
adc
pop
into
rclb
inc
sbb
stos
fwait
sbb
je
test
push
push
sub
jp
fidivl
sub
xor
scas
clc
fs
sti
nop
jmp
xor
add
or
test
cltd
cmp
jecxz
adc
lea
pop
xchg
loope
repnz
xor
jns
out
shrl
outsl
cli
cmp
enter
adc
dec
test
js
or
mov
dec
add
repnz
xor
gs
rclb
cs
adc
bound
dec
xlat
xchg
out
add
add
push
arpl
rorl
pop
adc
loope
pop
push
jecxz
daa
xor
mov
fcmove
xor
sub
sub
sahf
and
xchg
loop
test
xor
ja
sbb
call
sbb
pop
and
add
adc
pop
adc
jno
fcoms
repz
sbb
pop
add
call
xchg
mov
mov
cmpsb
test
movsb
add
mov
and
push
fiadds
dec
js
inc
inc
fwait
sub
and
jae
add
xchg
mov
mov
iret
imul
push
and
out
pop
int3
xor
pop
fwait
add
sub
push
sbb
mov
test
dec
push
lods
xor
frstor
rcrl
in
enter
pop
mov
lods
int3
sbb
cltd
fbstp
mov
cwtl
loope
subb
clc
inc
ljmp
jge
bound
dec
dec
mov
sbb
fwait
xrelease
imul
or
pop
fs
shl
push
bound
mov
enter
lahf
ljmp
adc
dec
mov
fbld
pop
inc
lock
add
xor
int
pop
dec
test
dec
daa
cmc
and
mov
or
mov
xchg
mov
pop
cmp
les
xchg
or
mov
xchg
cwtl
jge
jg
push
pop
jns
fldcw
cmpb
mov
pop
inc
mov
and
mov
dec
xchg
xor
shl
loop
mov
pop
jl
cmp
inc
aas
incl
lahf
inc
xchg
mov
hlt
mov
in
sbb
pop
pop
jp
inc
or
sbb
or
fcompl
je
xchg
jo
fisubrl
and
pop
or
rorb
xchg
outsl
loopne
lds
mov
push
outsb
jo
in
fwait
pop
aas
mov
rol
mov
and
fsubl
mov
and
fdivs
pop
or
test
subb
bound
mov
mov
pop
push
push
mov
mov
insl
or
nop
cmp
mov
dec
aad
std
test
xchg
push
mov
out
fnsave
push
sub
mov
outsl
addr16
pushf
push
xchg
xor
les
add
mov
pop
xchg
mov
pop
sub
xchg
cld
daa
fbstp
cli
je
test
xor
xchg
mov
in
mov
cld
into
mov
test
loope
dec
adc
mov
dec
lods
sbb
jl
movsb
sbb
iret
rcrl
ficompl
adc
int3
xor
add
lods
mov
out
push
xor
add
dec
mov
jo
stos
jbe
and
sbb
loope
mov
dec
xor
inc
adc
xor
iret
and
jmp
hlt
push
sub
stc
cli
fwait
adc
inc
push
jo
mov
push
sub
dec
leave
aas
ds
mov
jb
movsb
test
inc
mov
test
pop
lret
push
pusha
cmp
inc
insb
xor
xor
dec
mov
jecxz
push
cmc
jecxz
rclb
cmp
hlt
push
xchg
out
xchg
adc
adc
rcll
aaa
loope
std
je
clc
bound
or
inc
sub
jge
lods
xchg
int
in
sbb
mov
add
pop
leave
mov
mov
enter
mov
push
enter
std
andb
dec
xor
insb
inc
xchg
and
cwtl
push
int
add
cmp
pop
xor
cmp
jecxz
adc
ljmp
mov
jmp
fwait
push
mov
fildll
scas
sbb
push
je
and
test
loopne
loop
das
sahf
arpl
fnstenv
movsl
push
cmp
mov
mov
mov
xor
daa
dec
jo
pop
sahf
jb
ja
hlt
loopne
xor
push
xchg
inc
push
or
cmp
and
out
in
add
mov
pushf
add
out
dec
imul
or
movsl
cmc
mov
pop
jns
aas
imul
aad
push
mov
or
lods
inc
lds
data16
xor
lret
jo
out
imul
loop
sbb
test
shll
insl
and
loopne
js
mov
jle
jns
or
lds
int
mov
and
mov
mov
mov
pop
fdiv
sub
addr16
fadds
pushf
sub
rolb
loopne
popf
xchg
inc
dec
push
pop
and
divl
xchg
fisttps
mov
into
ja
inc
ret
data16
cld
and
inc
cmp
lods
or
mov
cmp
push
adc
jae
daa
mov
cmp
std
mov
imul
jl
cmp
cmp
cmp
inc
inc
pop
dec
xor
lea
popl
inc
stc
xor
loop
test
add
adc
push
mov
cmpb
adc
mov
cmpsb
dec
out
in
push
fstl
push
push
incl
inc
jle
shlb
sbb
mov
inc
xchg
adc
mov
stos
mov
js
and
dec
ss
pop
mov
aas
push
divl
jecxz
inc
fwait
add
and
shr
pop
arpl
sbb
fst
pop
push
pop
jnp
cmpsb
pop
inc
jae
pop
mov
lea
aad
fcmovb
movsb
jge
xchg
test
xchg
sbb
jmp
adc
imul
fldenv
dec
pop
cmp
fsubs
sahf
das
testl
sti
es
repz
arpl
cs
mov
xchg
outsl
fdivrl
out
mov
pop
and
out
mov
cmp
adc
or
shl
cwtl
mov
mov
ljmp
and
out
jmp
aaa
dec
clc
outsl
xorl
pop
in
aad
dec
lods
xchg
mov
inc
lods
mov
rol
rclb
lcall
adc
push
push
jp
or
sbb
rcrl
scas
push
in
imul
push
inc
push
push
imul
mov
lret
fmuls
fsub
cli
xchg
sbb
xor
fcom
imul
mulb
pop
pop
mov
mov
add
in
inc
xchg
jo
inc
jne
add
cwtl
nop
cmpsl
addr16
cmp
aaa
pop
fneni(8087
in
call
mov
call
pop
adc
fistps
shl
enter
leave
mov
push
ror
jo
or
jecxz
leave
mov
mov
xchg
aaa
test
cmp
lret
xor
cwtl
arpl
push
xor
shrl
je
hlt
sbb
pop
jne
stos
sub
imul
movsb
push
sbb
lret
outsb
push
hlt
hlt
dec
lcall
rolb
adc
cmp
je
mov
push
mov
ds
mov
inc
movb
mov
mov
rcrb
jecxz
dec
inc
mov
push
imul
addr16
out
js
inc
push
lods
mov
xchg
mov
stos
xor
fs
and
popf
data16
out
cmp
ret
pop
sti
sti
movsl
mov
sub
ja
stc
add
jbe
sti
loopne
cmp
repz
mov
imul
lcall
lock
mov
test
leave
push
inc
pop
repnz
xor
leave
outsb
mov
jg
and
inc
push
adc
mov
xchg
xchg
repnz
push
lahf
jg
xlat
addr16
mov
js
mov
inc
sbb
test
mov
int
ds
or
ss
mov
mov
xchg
pop
and
xor
push
xor
fstl
or
cltd
cmpsl
xor
cwtl
jno
mov
or
pop
adc
stos
mov
mov
fcmove
mov
insl
pop
mov
sbbl
xchg
nop
mov
or
popf
cmc
jge
xor
mov
push
es
int3
leave
inc
inc
orl
add
subl
mov
stc
fisubrs
mov
repnz
cmp
jle
arpl
dec
push
clc
inc
mov
and
inc
addr16
aam
in
cmpsl
push
and
or
stc
jnp
sub
test
mov
jmp
ffree
sti
sbb
fs
insb
push
pop
add
xor
pop
pop
arpl
xchg
add
and
cld
fstpl
pop
adc
outsb
push
fs
dec
sub
jnp
gs
ja
das
ljmp
push
xchg
cld
mov
fs
sahf
jl
test
popa
mov
xor
xchg
in
imul
rcll
rorb
inc
shlb
pop
jo
repnz
mov
push
dec
aaa
dec
dec
push
sahf
rcrb
sub
int
sub
sbb
mov
xor
mov
jno
jns
je
sub
mov
into
aad
aam
ja
jmp
adc
xchg
std
subl
aam
aaa
std
cmp
pop
jbe
pop
and
lahf
cmp
test
fldl
jns
scas
into
inc
pop
popf
inc
sub
pop
jmp
int
sbb
dec
mov
mov
mov
je
gs
xor
jg
mov
pop
cmpsb
scas
rorl
shll
je
popl
jg
mov
xchg
mov
lods
mov
xor
xchg
js
jge
out
sbb
xchg
xor
arpl
push
dec
xchg
mov
or
push
mov
jno
orl
mov
divl
enter
jo
adc
mov
movsb
jge
cli
ret
scas
in
and
scas
add
dec
sbb
adc
stos
mov
test
or
mov
fsubrl
xor
jno
jecxz
arpl
aad
mov
loopne
push
dec
lds
test
mov
jle
gs
or
mov
sbb
and
jmp
and
rorb
loop
into
test
cmc
adcb
inc
mov
cs
xchg
sub
jmp
stos
mov
jl
xor
and
test
jnp
cli
std
in
xor
std
cltd
sahf
xor
xor
scas
les
sub
lds
jbe
add
sbb
das
mov
scas
jb
or
popf
and
dec
dec
mov
pop
mov
xor
xor
or
fsubrs
mov
and
or
int3
call
gs
inc
imull
insl
xor
push
fisttpl
outsl
sti
cmp
or
cmp
add
add
sti
mov
shl
inc
lock
les
adc
cltd
pop
inc
imul
pop
xor
or
cmpsb
pusha
pop
inc
aas
test
aas
iret
sahf
jbe
gs
in
xor
and
pop
subb
ss
inc
subl
push
xchg
sub
add
mov
push
inc
cmp
subl
lcall
jmp
lock
fcmovb
and
jle
pop
or
rcrb
sbb
fsubr
fimuls
fwait
mov
shll
jge
mov
mov
mov
mov
inc
insl
inc
ja
das
xchg
fsubs
push
in
pop
push
incl
fwait
cmpsl
scas
nop
lods
push
xchg
pop
add
xor
je
daa
sub
cld
mov
mov
inc
in
aaa
aam
outsb
xchg
jnp
push
xchg
sub
or
inc
stos
sbb
push
mov
push
cltd
mov
jecxz
lret
stos
das
roll
rolb
fdivrl
add
add
xlat
aas
daa
test
xchg
cmp
cld
icebp
addb
xor
rol
sub
add
adc
mov
fisubs
fsts
cmp
fwait
ja
lods
xor
js
and
stc
imul
pop
addr16
cmpsl
mov
dec
out
and
es
jns
dec
mov
push
and
sub
xor
test
pop
roll
ds
std
xorl
arpl
out
sub
cli
and
inc
aam
incl
inc
xor
mov
cmp
shll
cmpb
std
dec
add
xchg
fdivrs
xchg
xchg
mov
imul
mov
jae
rclb
in
mov
lret
cmp
dec
push
mov
stos
dec
mov
add
adc
xor
cltd
mov
and
faddp
mov
inc
sub
in
into
jmp
test
pop
and
mov
loope
lcall
xor
inc
stos
add
mov
mov
addr16
jnp
lret
pop
in
fsubrl
cli
enter
out
push
pop
xchg
mov
xchg
xor
or
sahf
and
cmc
testb
data16
popa
cmp
data16
imul
or
imul
jbe
mov
subl
aad
cmp
cltd
decl
loop
dec
inc
inc
jl
add
insl
and
pop
dec
add
stos
sub
sub
jo
test
fdivr
xchg
aaa
pop
jp
repz
imul
icebp
ja
adc
jmp
test
andl
add
std
ljmp
mov
loopne
adc
int
popa
outsb
cmpsl
loopne
out
pop
scas
jnp
or
pop
sbb
or
int3
cmp
fidivs
iret
out
aas
cs
xlat
or
or
ja
rclb
test
mov
fnsave
jp
imul
cmp
jnp
add
stos
sub
xchg
pushf
enter
mov
push
inc
xor
ljmp
cs
popf
imul
ret
lea
xchg
mov
mov
lea
repz
inc
leave
imul
push
dec
mov
lock
fsubrl
sub
add
test
adc
in
xor
inc
daa
aam
or
pop
sub
jl
fnstsw
in
mov
sti
mov
xor
adc
and
pop
inc
mov
and
in
push
fistps
mov
pushf
mov
inc
mov
fsubs
xor
jae
sbb
jmp
mov
add
push
loopne
stos
mov
inc
call
inc
daa
add
cmp
xlat
cmp
stc
outsl
test
aam
test
dec
imul
xchg
test
mov
stos
in
adc
adc
lahf
dec
scas
xlat
push
andb
ja
xlat
not
outsb
pop
jmp
mov
adc
inc
bound
insb
sub
in
inc
sub
mov
xor
push
fdivrl
pop
lcall
xor
fadds
out
sbb
cmp
pop
push
mov
add
jo
hlt
sahf
adc
sub
mov
sbb
sub
lock
fdiv
mov
xlat
gs
inc
cmp
imul
lcall
mov
sub
and
in
enter
testl
mov
in
enter
nop
lods
sbb
push
dec
xor
push
cmp
jle
fcom
and
dec
pop
iret
loopne
sub
orb
mov
clc
clc
icebp
daa
pushf
cmp
mov
insl
mov
ror
imul
adc
xchg
mov
xchg
popf
jp
inc
xorl
jp
adc
pop
mov
sub
stos
xchg
js
pop
mov
movb
pop
in
mov
mov
xor
and
ss
hlt
clc
xlat
dec
and
out
mov
inc
repz
lods
sub
sbb
imul
or
data16
insl
repz
mov
xchg
pop
mov
sbb
test
cmc
adc
test
mov
pop
ss
dec
xor
std
mov
dec
dec
dec
xchg
imul
jnp
pop
sub
out
in
popf
push
lret
xchg
jo
clc
mov
lahf
movsb
hlt
dec
adc
jle
les
ja
or
lidtl
aas
movsb
adc
xchg
mov
in
cmp
dec
mov
xchg
push
imul
cmc
cmp
cmpsl
push
iret
lret
jge
pop
and
xchg
adc
negl
repnz
jecxz
sbb
clc
jmp
mov
adc
xor
test
or
adc
and
cli
test
add
sti
mov
or
adc
movsb
sub
movsb
shlb
scas
xor
mov
pop
insb
jo
es
or
lret
clc
dec
pushf
frstor
inc
jae
pushf
xchg
movsl
rcrl
imul
outsl
stos
icebp
and
or
pop
dec
push
rcll
xchg
inc
mov
aam
jne
mov
or
jnp
dec
or
cs
pop
out
xchg
test
xchg
fnstcw
test
mov
or
push
xchg
aas
cmpsl
xor
jl
sub
fdivp
sbb
arpl
mov
dec
out
roll
scas
or
mov
mov
out
shrb
adc
adc
das
mov
or
jne
flds
jecxz
aaa
lret
jne
xchg
sbb
lahf
jne
ret
pcmpeqw
mov
leave
test
xlat
adc
lret
jecxz
jne
out
adc
mov
dec
lcall
insb
das
jg
in
loope
and
jo
int3
cltd
test
nop
fcomp
test
sti
xor
sub
cwtl
test
and
lret
cmpsb
cwtl
cmp
fimull
sbb
add
mov
mov
dec
outsl
repz
popf
or
pushf
nop
bound
scas
and
xchg
fsubrl
imul
and
cmp
sub
or
lea
mov
sbb
push
add
jle
repz
iret
mov
lret
lret
xor
mov
repnz
jne
fists
fnstsw
or
sub
lahf
ljmp
js
xchg
lock
adc
subl
or
push
out
mov
arpl
into
sbb
inc
mov
outsb
dec
icebp
push
xchg
stc
mov
pop
iret
lret
adc
out
ds
inc
push
mov
jp
int3
mov
xor
xor
lea
jns
inc
add
add
sbb
pop
nop
enter
pop
cld
mov
mov
sub
rclb
mov
and
fsubs
push
icebp
lock
outsl
aam
add
ficoml
xor
pushf
inc
xchg
or
mov
insb
mov
adc
mov
pop
imul
xchg
sub
loop
shlb
xchg
fs
mov
fldenv
sahf
and
andb
pop
hlt
sti
fdivs
insb
cmp
cmp
lods
loope
sub
cltd
dec
std
pop
jg
fcmovnbe
xor
add
push
es
inc
adc
data16
add
xchg
xchg
ja
mov
inc
je
mulb
inc
mov
fcomps
lods
sub
repz
xor
lahf
in
adc
and
fists
xchg
fs
sbbl
psubsw
pop
lods
pop
aad
mov
stos
inc
scas
xchg
xchg
int
je
add
cmp
add
imul
cmp
imul
jp
mov
cmp
mov
aam
ret
and
jb
push
sbb
and
les
dec
add
pop
push
or
jno
daa
dec
rorl
xchg
fcomip
jge
xor
xlat
mov
js
xor
add
sub
adc
aaa
in
ret
push
mov
icebp
jle
fildl
enter
notb
pop
into
hlt
rclb
mov
xlat
sbb
call
decb
xchg
daa
mov
stc
fmuls
movsl
mov
nop
push
enter
sub
xchg
nop
je
add
jl
ss
test
mov
sbb
cmp
sbb
sahf
xor
jp
xor
stc
mov
in
pusha
and
or
shlb
scas
inc
dec
int
cmp
mov
mov
mov
testl
mov
mov
je
add
test
jle
lcall
push
jae
jle
sub
jl
cmp
adc
outsl
addb
or
push
and
cmp
push
int3
mov
call
xchg
cmp
lcall
je
mov
sti
mov
mov
popf
out
orl
dec
adc
mov
outsl
mov
pop
rorl
pop
rcr
xchg
inc
adc
movsb
les
out
lret
mov
sbb
lcall
inc
add
imul
les
fistpll
jg
loop
dec
in
push
jne
add
sub
scas
mov
mov
lock
mov
jl
fdivr
lods
cmovp
ds
push
aam
dec
mov
xchg
and
jp
and
mov
daa
jae
mov
mov
fwait
sub
int3
bound
xchg
push
dec
cld
aas
push
out
bound
adc
fwait
das
out
rcll
pop
cmpsl
mov
out
push
fldenv
jo
sahf
daa
fs
jle
lcall
push
outsb
or
lea
ljmp
mov
jmp
push
pop
insl
mov
sbbb
adc
pop
shrb
lcall
in
in
xchg
pop
xor
xor
ret
add
inc
or
outsb
jmp
fisubl
fcmovnb
in
adc
daa
xchg
hlt
pop
call
imul
inc
push
inc
mov
mov
inc
packuswb
lock
cmc
sub
loop
mov
mov
js
test
pop
loopne
stc
sbb
or
pop
sbb
movsb
sbb
inc
inc
xor
lds
mov
sbb
jmp
adc
lret
mov
xorb
sbb
fs
jo
xchg
ret
subps
dec
fiaddl
movsl
outsl
or
jp
orb
mov
ja
flds
fwait
dec
mov
arpl
lahf
xor
cld
mov
push
repz
out
push
or
dec
int
pop
adc
push
sub
pop
inc
mov
ficompl
pop
lock
das
cld
jp
enter
mov
mov
arpl
and
vcvtpd2dq
add
cs
cltd
add
dec
js
pushf
ret
xchg
lods
push
push
mov
repnz
stos
adc
addr16
inc
cmp
ds
xchg
xor
mov
and
or
imul
repz
int
mov
nop
cmc
or
xchg
cltd
outsl
add
sub
xchg
stos
mov
push
pop
in
mov
addr16
and
jne
into
mov
bswap
jbe
cmp
sti
stos
fisubs
mov
jge
or
pop
jnp
pop
pop
mov
push
nop
fsubr
xchg
jle
loopne
mov
inc
nop
iret
ja
stos
jae
xor
mov
sbb
lods
push
xchg
rclb
jns
js
add
out
push
outsl
push
mov
ret
sbb
mov
inc
mov
add
and
jb
cmpsb
fisubrl
test
popf
test
or
add
mov
mov
ret
addr16
mov
sbb
stos
insb
dec
dec
jnp
mov
mov
lods
add
dec
rcr
sbb
adc
sbb
insb
add
xchg
mov
mov
cmpsl
push
leave
das
xor
sbb
stos
ret
mov
shlb
roll
push
mov
adc
xchg
cmp
addl
lahf
sub
roll
dec
jb
push
mov
sub
mov
inc
ret
jp
push
lods
jge
xor
sti
inc
icebp
mov
arpl
push
insl
insb
xlat
cmp
insl
jle
fdivrl
repz
fildl
stc
dec
push
sbb
in
pop
pop
clc
mov
in
pop
int3
pushf
dec
and
iret
jns
lds
repnz
jbe
cmc
or
inc
xchg
cmp
adc
movsb
scas
mov
pop
dec
inc
ljmp
out
push
orl
cld
sbb
out
shl
mov
push
or
fnstcw
dec
dec
pop
fcomps
mov
jns
int3
es
cmc
and
cmpsl
jl
dec
lods
lcall
insl
notb
mov
xchg
scas
sti
mov
jmp
aam
cmp
add
gs
call
ret
lods
mov
cmp
mov
jbe
jmp
cmc
insb
xor
arpl
add
pusha
repz
lea
ja
repz
cmp
inc
ds
push
jecxz
or
stos
and
dec
arpl
pop
loope
sbb
pop
dec
xorb
adc
dec
push
clc
outsb
jecxz
jbe
fcomps
and
rep
inc
in
add
and
xor
jb
jb
shr
add
rcrb
inc
mov
adc
dec
inc
mov
movsb
pushf
je
cli
pop
pop
clc
sahf
jmp
push
in
pop
test
xchg
xchg
pop
mov
fisubs
pop
mov
adc
in
cwtl
inc
jne
stos
clc
je
loopne
jbe
clc
inc
in
pop
mov
jo
jns
int
aad
icebp
test
push
jns
xchg
mov
dec
insb
adc
xor
xchg
jle
pop
testl
je
add
mov
aam
fimuls
movsb
sahf
mov
addr16
ja
jb
jp
pop
pop
pop
dec
repnz
jne
adc
mov
out
imul
or
test
dec
dec
daa
jle
into
mov
inc
ljmp
jle
xchg
inc
cvttps2pi
jl
pop
jg
mov
in
pop
mov
decb
gs
mov
adc
pop
jne
fistl
add
inc
rolb
sbb
test
inc
movsl
cli
lret
fsubrl
jnp
mov
xchg
sbb
fdivl
clc
and
mov
mov
sub
test
cmp
mov
int
mov
cmp
xchg
testl
dec
inc
adc
insb
jp
push
xor
push
scas
mov
pop
mov
jle
popf
jae
mov
add
cld
or
and
sub
sub
out
loopne
or
push
push
lcall
jo
sub
adc
cmpsb
fs
popf
cli
pop
movsl
sub
xor
push
lcall
add
test
sti
scas
xor
adc
mov
and
aam
xor
inc
fs
cmp
add
popa
fbld
cltd
imul
sub
xor
loop
mov
in
add
and
xchg
inc
pop
popa
mov
xchg
jge
insl
cld
mov
lcall
stos
xchg
xchg
in
jae
mov
add
sub
dec
xor
push
daa
out
xor
test
mov
xchg
les
je
xor
jge
ret
and
or
mov
lock
mov
sbb
adc
into
add
jae
xchg
dec
add
call
dec
test
sub
clc
cmp
rolb
pop
pop
mov
xor
xor
lea
mov
int3
cmpsb
mov
xchg
cmp
xchg
rorl
mov
push
or
xchg
xchg
imul
scas
leave
mov
fucomp
sbb
test
or
cmc
jle
pop
jnp
add
jo
orb
mov
mov
lahf
in
mov
dec
inc
cmpsb
lea
xchg
popa
repz
add
pop
lret
jno
pop
mov
mov
icebp
out
cs
sub
add
mov
jecxz
jbe
or
aaa
jecxz
pop
repz
inc
xor
scas
dec
add
dec
pabsd
nop
pop
inc
or
fiadds
fstpl
loope
bound
outsb
pop
mov
push
sbb
stos
jns
dec
fildl
stos
push
clc
data16
and
mov
ljmp
jae
aam
fdiv
icebp
xor
xchg
xchg
cwtl
mov
in
xor
lret
cs
push
out
jo
xchg
xchg
mov
adc
icebp
lea
test
cli
mov
mov
and
dec
in
out
loope
insb
adc
mov
lahf
and
sub
sub
aaa
mov
inc
or
push
xchg
das
sbb
mov
sub
mov
nop
fdivr
vandps
sbb
lea
scas
jmp
mov
adc
jb
cmpsb
sahf
bound
stos
mov
ss
pop
jge
xor
mov
jle
mov
imul
stos
enter
or
push
sub
fidivrl
test
cltd
stos
mov
pusha
xor
or
in
cmp
pop
lahf
xor
repnz
insl
js
xchg
pop
mov
xor
mov
je
mov
cltd
aaa
push
sub
es
neg
xchg
lods
test
pusha
jmp
cltd
push
out
xchg
or
adc
jbe
sub
push
pop
out
and
jg
subl
jl
pop
jecxz
push
adc
test
rorb
lock
jecxz
cld
mov
lea
cmc
inc
incb
dec
stos
cli
and
push
dec
lods
lods
scas
or
jo
xor
shrb
ret
cmp
add
addl
repz
movsb
inc
loope
cltd
or
sub
cltd
dec
mov
mov
enter
mov
stos
push
mov
ljmp
mov
sub
xchg
sbb
in
and
in
cmp
aas
cmp
mov
fnstsw
into
or
sbb
enter
mov
jg
lret
or
dec
gs
or
mov
mov
mov
scas
sti
sub
push
aas
jge
rclb
xor
aas
push
scas
out
cli
das
inc
mov
ret
and
and
pop
xor
jb
push
addr16
xchg
xchg
cmpsl
xor
xor
cld
mov
shll
add
jns
or
push
lret
lret
add
mov
pop
mov
cld
out
pusha
in
in
adc
jae
push
fimuls
cmpsl
stos
mov
or
and
adc
xchg
cmp
add
adc
jae
xlat
or
loope
ret
shll
add
push
pop
imul
cmp
and
add
mov
filds
cmpsb
fcmovu
andl
and
push
sbb
ja
repz
insl
and
rclb
fiaddl
jnp
lret
sbb
jne
mov
icebp
das
arpl
sub
orb
out
lods
inc
jae
outsb
mov
imul
int3
mov
sub
xor
ja
jp
or
in
add
rolb
sbb
sbb
cmp
roll
dec
and
jb
mov
outsb
bound
xchg
mov
mov
loop
loop
mov
add
and
arpl
push
lock
sbb
roll
push
out
sbbb
decb
test
push
add
and
and
pop
popf
repz
pusha
enter
repnz
mov
dec
dec
mov
fisttps
mov
add
add
or
mov
or
sbb
adc
pop
jmp
mov
push
jnp
in
daa
push
inc
push
pop
sbb
or
negb
push
daa
test
cmpsl
pop
fdivrs
aad
mov
cmp
dec
add
inc
ret
out
enter
fldl
fnsave
repz
cmp
sub
stos
movsb
mov
cmp
outsb
push
aas
jne
mov
je
push
lahf
inc
jnp
xchg
lea
fadd
xor
imul
cmp
movsb
mov
mov
repnz
mov
mov
lea
cmp
fiaddl
push
ljmp
inc
cmp
movsb
in
xor
pop
push
fwait
cwtl
int
or
les
ljmp
pop
xor
mov
movsb
aas
aas
insl
in
mov
std
mov
dec
movsl
les
icebp
and
loope
in
jmp
jge
xor
addr16
sub
mov
in
addr16
mov
lods
shl
jmp
dec
sti
adc
das
jo
or
loope
lahf
nop
jg
adc
jmp
addb
mov
xchg
cli
xchg
mov
xchg
cltd
aam
popa
lahf
push
pop
mov
aas
popa
push
dec
leave
hlt
or
iret
add
imul
adc
push
sub
cmp
daa
and
sub
scas
adc
bound
dec
into
xchg
test
push
pop
fwait
sarl
call
sub
arpl
aad
cmp
mov
je
cmc
push
mov
orb
xor
gs
add
jno
sub
lods
or
mov
dec
nop
scas
pop
xchg
and
mov
xor
andb
loopne
jne
xchg
mov
enter
inc
sbb
jmp
pop
stc
sub
push
aaa
repz
ret
mov
xor
repnz
mov
adc
and
mov
aaa
data16
js
fmuls
cli
mov
cmp
mov
repz
cld
rcrb
pusha
mov
stos
push
and
dec
fiaddl
jo
insb
or
inc
mov
mov
cwtl
shlb
sbb
jne
jbe
mov
add
mov
and
btr
cmpsb
mov
imul
nop
push
xchg
xorb
push
push
mov
jne
into
hlt
cmc
cmpsb
add
jmp
hlt
insl
cld
adc
sarb
sbb
adc
sub
xchg
stos
loopne
sub
inc
out
cmp
cwtl
jle
mov
fsts
test
addr16
mov
xchg
push
and
lret
pop
pop
clc
jle
cmp
pop
inc
out
mov
cs
pop
stc
jge
bound
cmp
push
inc
stos
aam
mov
inc
pop
or
cltd
lret
jns
inc
jle
rorl
jns
popf
test
sub
pop
push
cld
cmpb
jbe
jne
icebp
js
in
cmp
xchg
rorb
add
mov
xor
lret
xchg
jnp
mov
jp
cmp
aaa
jmp
sub
pop
jae
cs
push
stos
or
shrb
rol
or
push
add
xchg
mov
mov
sbb
push
cli
mov
negb
into
jns
popa
xchg
out
shr
dec
sbb
fstl
lret
or
inc
pop
imul
adc
inc
push
add
mov
call
cli
cmc
icebp
rcl
ss
jle
je
enter
jp
sub
cmpsl
fsubr
roll
mov
enter
popa
loope
adc
cmc
jne
mov
int3
je
mov
pop
jo
pop
mov
add
mov
imul
ret
iret
add
inc
out
mov
and
dec
shrb
imul
jnp
ret
repz
inc
stos
jae
faddl
or
daa
push
scas
cmc
mov
push
test
movsb
add
aaa
or
xorl
scas
dec
enter
xor
xchg
in
adc
imull
cltd
loop
dec
add
push
loopne
xchg
mov
mov
shlb
ds
xor
movsb
xlat
sbb
sub
test
push
cmp
mov
push
inc
insl
push
orl
mov
ret
lods
nop
adc
popf
scas
fwait
test
xchg
fwait
aas
push
sub
lods
pop
sti
inc
sbb
mov
test
stos
ja
or
push
add
inc
mov
popa
notb
aaa
test
xor
pop
mov
aam
ror
cld
push
mov
or
shlb
mov
jne
mov
push
ret
mov
xchg
cmp
lods
push
add
sub
aaa
pop
sahf
inc
sahf
dec
mov
insl
rcrb
testb
or
loop
addr16
stc
and
sbb
mov
test
imul
sub
flds
and
aam
lea
sub
lea
cmp
mov
fcmovnbe
jbe
pop
mov
das
pop
cmp
out
adc
mov
fs
xchg
sub
pusha
loop
fcomi
dec
hlt
mov
aaa
jo
pop
xchg
or
js
aam
sbb
xor
stc
cmpsl
mov
push
clts
xlat
jecxz
test
fcomps
pop
lea
jg
in
aas
xchg
xlat
mov
pusha
ja
ficoml
cmp
int3
bound
mov
out
xor
inc
test
fidivl
andb
or
xchg
adc
inc
pop
mov
hlt
mulb
insl
scas
and
adc
xor
jp
icebp
jnp
mov
xor
push
dec
cld
sahf
aaa
in
sub
or
sub
ds
es
enter
xchg
loope
cltd
add
sbb
rcrb
dec
pusha
dec
arpl
dec
cmp
jp
icebp
cmpsl
adc
ficoml
mov
fistps
xchg
mov
pop
sbb
loope
in
imul
push
jne
outsl
xchg
or
and
jns
sbbb
dec
aas
pop
inc
mov
mov
movl
mov
xlat
jb
xchg
sub
test
test
rcrb
mov
and
mov
pop
mov
mov
push
mov
fcoml
lahf
xchg
mov
decl
add
mov
test
add
cmp
sub
ljmp
xor
cmp
test
frstor
mov
add
or
lret
aaa
fcmovne
notb
pop
mov
pop
add
inc
in
ret
cmp
sti
imul
pop
loope
testl
jp
push
jecxz
xchg
loop
jbe
fildl
pop
inc
push
xchg
addl
push
inc
les
mov
sub
dec
fidivrs
loopne
push
lds
sub
je
aaa
outsl
pop
adc
loopne
push
inc
jne
lea
std
das
lods
inc
aas
rclb
aad
leave
inc
mov
add
add
xor
add
in
fs
or
ret
jl
adc
mov
fildll
pop
fidivs
and
push
ss
out
jo
js
cmp
sub
cmp
xorb
mov
inc
sbb
lret
repz
sbb
repz
inc
jg
or
pop
aas
sbbb
clc
and
cmpl
xor
lcall
add
xchg
movsb
lea
insb
jle
es
mov
stos
inc
inc
mov
addl
push
repz
ret
push
data16
xchg
mov
inc
in
test
adc
inc
dec
arpl
std
cmp
sbb
test
xchg
clc
mov
jne
xlat
mov
lea
jmp
or
xchg
xchg
jge
out
call
gs
subb
bound
leave
adc
or
xchg
jge
cmp
cmp
insb
jbe
repz
push
add
mov
lock
subl
sbb
mov
shlb
repnz
testb
sbb
mov
or
movntq
or
fimull
fisubs
jl
adc
or
cmp
jg
mov
sub
push
cmp
test
roll
mov
pop
adcl
mov
iret
movsb
dec
call
movsl
push
inc
mov
ds
xor
call
movsl
notl
add
fs
or
push
xchg
or
test
mov
fwait
imul
sub
rorb
xchg
and
xchg
mov
call
iret
gs
aaa
popf
leave
jmp
add
jmp
mov
mov
sub
cmp
call
mov
mov
cmp
inc
sarl
mov
cli
jg
dec
push
push
cltd
cmp
scas
sub
fs
loop
jmp
dec
loop
cmp
push
ss
inc
mov
mov
inc
jno
xor
pusha
mov
add
fs
lcall
mov
notl
push
jnp
xchg
mov
cmp
mov
hlt
adc
add
fmul
mov
push
adc
sbb
gs
aam
pop
xor
into
mov
out
push
jl
and
mov
xor
out
lds
adc
fisttpll
cli
lahf
daa
xor
lods
pop
mov
push
ss
ss
and
mov
in
filds
mov
enter
jmp
imul
inc
dec
add
xchg
push
std
mov
sub
loop
mov
jnp
jne
sub
shl
icebp
add
cmc
or
fsubs
cmpsb
mov
jl
ds
xor
mov
mov
jb
sub
mov
xor
jne
mov
push
xchg
mov
sbb
out
jge
pop
or
add
stc
mov
stos
into
mov
or
inc
data16
pop
std
imul
lock
push
ds
adc
fstl
pop
xchg
xor
pop
add
sub
mov
insb
xchg
push
bound
push
cmp
ror
sbb
loope
lcall
ret
icebp
jbe
lret
repnz
mov
jmp
or
adcl
out
fwait
adc
sbb
call
and
and
jbe
xlat
cmpsl
in
push
xchg
jo
subl
sbb
add
call
mov
les
loopne
adc
or
mov
insl
repnz
inc
ret
mov
jg
mov
dec
mov
jns
daa
movsl
mov
or
mov
popa
out
in
mov
mov
shll
les
mov
out
popf
filds
push
dec
dec
incl
sub
push
push
ja
adc
sub
repnz
mov
sub
mov
sbb
inc
pop
pop
add
sub
mov
mov
inc
mov
ja
cmp
cli
in
ljmp
mov
push
cld
cmp
ljmp
addl
pop
test
sbb
dec
inc
sbb
adcb
test
jle
pop
mov
and
scas
aaa
push
mov
lods
pop
push
das
insb
rorl
mov
pop
adc
push
mov
mov
call
aas
inc
ljmp
and
out
fistpll
or
push
shr
loope
xor
inc
and
xor
daa
jmp
mov
hlt
cmp
insl
inc
loopne
add
insl
xor
fnstenv
jecxz
push
repnz
push
lret
pop
cmp
dec
into
push
mov
cmp
push
ret
loop
and
push
lods
repz
jmp
mov
xorb
mov
sbb
and
sbb
int
pop
push
decl
roll
jecxz
jnp
in
ja
jae
jbe
cmpsb
loope
add
jbe
or
nopl
lret
out
clc
sbb
add
outsl
push
lret
adc
out
out
pop
imul
lahf
add
sub
cmpsl
xor
or
adc
ficompl
addr16
mov
daa
mov
cmp
imul
ficoms
jns
jno
cs
neg
push
jmp
movsl
outsb
lcall
and
push
ret
and
and
in
cmp
sub
mov
into
pop
sti
add
sub
pushf
insb
daa
cmp
loope
xchg
into
jg
sti
rcrb
sub
mov
mov
pusha
and
aas
add
lss
xchg
call
push
ss
test
mov
inc
mov
mov
add
pushf
jno
cmp
out
loope
subl
pop
adc
pop
mov
loopne
aaa
ss
sti
push
or
insb
inc
xor
xor
cmp
in
rcrl
sbb
leave
ficomps
xor
cmp
cmpsl
into
push
iret
test
push
aaa
sub
or
jbe
test
insl
lahf
xor
cmp
mov
dec
lods
adc
popf
adc
out
test
fmuls
inc
mov
jmp
xor
in
insl
mov
out
mov
rcrl
imul
jb
pop
rcll
in
push
movl
filds
sbb
fs
or
cmc
lcall
sbb
daa
inc
xor
lret
mov
dec
insb
mov
mov
and
and
cmp
fldl
or
mov
pop
cltd
dec
in
inc
xor
sbb
cmpsb
popa
push
add
lcall
jne
cmpsb
pop
pusha
mov
outsl
lea
mov
or
adc
sbb
push
jmp
cwtl
lock
cmpsb
cmc
dec
lock
mov
fisubrl
in
mov
daa
rcrb
rolb
cmp
lods
push
jb
hlt
ret
loopne
and
and
lea
mov
xchg
lods
stos
push
movsl
enter
jo
mov
cmp
jecxz
leave
dec
xlat
hlt
push
adc
add
in
push
cwtl
sbb
xor
xlat
xor
xchg
mov
adc
sbb
sti
push
lahf
mov
push
add
xchg
push
fiaddl
mov
xor
outsb
adc
sub
inc
call
aaa
and
push
jge
data16
cmp
xchg
stos
xor
icebp
outsl
aaa
mov
sub
mov
pop
dec
std
and
mov
lcall
out
pusha
mov
cwtl
adc
xor
adcb
xor
in
push
dec
lods
xor
adc
xor
jg
mov
push
sub
int3
xchg
and
pop
lods
arpl
fldl
jge
sarl
fstpt
cmp
mov
rol
out
mov
jns
sbb
popf
sub
mov
movsl
stos
or
push
stos
stos
mov
sahf
mov
jns
lods
aad
mov
test
pop
mov
jns
push
aad
lea
and
jmp
lret
push
icebp
jb
mov
ret
pop
jne
stos
sti
push
jo
push
fcomi
stos
mov
subl
leave
into
pop
sahf
sub
xchg
nop
fldl
aad
fucomi
mov
ret
dec
jb
sbb
mov
mov
sub
cmc
int
cmp
pusha
rcr
mov
add
fwait
pop
jno
repnz
mov
mov
mov
jno,pn
negl
jle
inc
adc
mov
fnstsw
push
rcr
jmp
insb
cmc
sbb
inc
dec
or
subl
or
pop
or
pop
jmp
imul
pop
movb
cmp
fucomp
out
sub
movsb
out
ja
scas
jge
cmpsl
outsl
mov
jmp
lcall
cmp
mov
aaa
in
daa
jg
mov
sbb
cmp
inc
mov
cld
test
mov
mov
sub
inc
pop
stc
dec
or
adc
int3
lds
lret
mov
fidivrs
mov
sub
sub
mov
lcall
jle
push
adc
lcall
jo
sbb
or
int3
push
arpl
pushf
jns
pusha
movsl
inc
fs
mov
lea
pusha
int3
bound
icebp
push
jecxz
sbb
jp
jl
sub
cmp
movsb
andl
push
repnz
stos
in
mov
pop
push
jbe
or
fisttps
rol
adc
roll
test
mov
addr16
cmp
insb
adcl
adc
lahf
mov
dec
add
rolb
mov
cwtl
inc
test
ss
jne
aaa
mov
cmp
out
cmp
sbb
sub
adc
inc
loop
cli
into
in
push
jecxz
dec
inc
aam
xor
loopne
xchg
pop
fcomp
mov
push
shl
pop
push
sub
xchg
or
aam
inc
jle
inc
shlb
inc
or
push
jg
imul
sbb
or
add
cwtl
jne
or
mov
les
xor
xor
add
fucomip
scas
cmpsb
sbb
or
mov
xor
in
cmp
ror
movl
adc
aas
mov
cld
fbstp
mov
nopl
jnp
mov
mov
add
inc
lods
dec
ds
cmpsb
or
mov
bound
dec
inc
sbb
cli
ret
repz
mov
leave
lret
bound
and
dec
mov
push
inc
stos
adc
rolb
out
test
inc
inc
lock
inc
sbb
rol
jnp
dec
adc
in
mov
daa
mov
cmc
lret
sub
and
pop
inc
aas
xchg
aas
jae
faddp
mov
sub
push
lods
or
bnd
insl
and
out
cmpsb
ss
insl
pusha
mov
cmp
jecxz
mov
clc
cmp
inc
pop
add
imul
sub
notb
mov
mov
in
ror
and
pusha
xchg
jbe
inc
jbe
add
loopne
stos
xchg
cld
je
out
leave
pop
xchg
mov
int3
pop
and
cwtl
ret
add
out
mov
repz
in
mov
imul
ljmp
pop
dec
cltd
sbb
into
dec
cltd
mov
pop
loopne
cmc
lahf
mov
int
test
sbb
int3
out
sub
add
inc
pop
ror
stos
mov
aaa
outsb
fmuls
sub
mov
ror
push
int3
xor
jnp
cmpsb
jmp
and
fsubs
fidivs
out
loopne
sub
and
je
adc
das
xchg
test
out
sub
sti
cli
nop
mov
sbb
stos
sub
mov
adc
mov
clc
and
jns
and
pop
jb
fistpl
cmp
dec
cltd
out
mov
stc
ds
jmp
pop
mov
test
push
sub
je
add
in
movsb
pop
dec
lea
and
adc
and
pop
int3
filds
je
call
jmp
sub
lods
sbb
test
xor
fmull
cld
xchg
imul
ficoms
idiv
fstpt
pop
xchg
dec
je
xlat
scas
pushl
ss
leave
add
xchg
jge
fdivr
push
sarb
aam
mov
jno
hlt
aam
mov
lcall
pop
sub
jns
scas
stc
xchg
push
push
jecxz
fnstenv
jns
stc
xchg
pop
fwait
jmp
loope
cmc
aaa
pop
sub
imul
jae
jns
add
int3
insb
lock
add
cmc
dec
lock
ret
into
movl
outsb
mul
jl
pop
or
lret
inc
push
mov
sub
mov
jecxz
loopne
divl
jmp
inc
push
ds
stc
fnstenv
xlat
sti
jnp
dec
frstor
test
movsl
data16
das
or
mov
ds
cmp
adcb
push
mov
mov
or
sbb
mov
adc
ficompl
sbb
je
push
mov
cltd
aam
icebp
outsl
aaa
xor
cmpsb
pop
lds
cmpsb
imul
lcall
aas
call
jl
sahf
cmpsb
or
mov
ja
cs
jp
inc
mov
dec
push
lods
rorl
incl
idivb
sub
pop
or
xchg
dec
push
stos
aaa
fnstenv
repnz
movsl
stos
add
push
pop
repz
jnp
xlat
test
ljmp
sarl
loope
jnp
add
mov
loope
jmp
insb
or
adc
cmp
mov
mov
dec
add
ja
pusha
inc
shll
shl
or
ret
jbe
dec
mov
aaa
and
aad
pushf
in
sub
sub
jge
icebp
mov
mov
push
sub
xor
mov
sub
mov
sbb
xchg
js
jecxz
mov
addr16
mov
pushf
xor
stos
mov
mov
clts
pop
int
rcrl
test
xor
mov
push
ss
mov
jae
xchg
stos
pushl
shlb
inc
cmp
addr16
ja
cld
lret
push
jg
std
sub
mov
or
cwtl
fildll
test
xchg
sbb
xchg
testb
push
pop
pop
push
dec
dec
jge
movsl
cmc
jnp
out
or
sbb
inc
or
mov
leave
lahf
sub
mov
pop
push
adc
shrb
stc
mov
xor
fstl
fwait
test
mov
and
push
cmp
fidivl
cld
popa
ja
cmp
push
es
push
pop
sub
mov
add
lret
loope
das
add
stc
mov
add
clc
mov
ficompl
xor
out
sub
pusha
jno
pop
imul
mov
sbb
add
or
shlb
mov
jns
push
sbb
call
inc
sbb
xor
enter
pop
push
push
cmp
insl
add
nop
int
adc
xchg
pusha
cmp
jns
imul
cltd
mov
jmp
fimuls
loope
xchg
xor
cmp
mov
sti
dec
fisubl
cmp
pop
sbb
or
repz
push
imul
add
pop
lret
das
xchg
or
add
call
jmp
push
jecxz
loopne
or
fisttps
add
lret
sbb
pop
cwtl
jmp
shlb
push
testb
stos
jg
jnp
cmp
push
mov
sbb
outsb
sbb
sub
jne
mov
mov
stc
pop
daa
mov
das
add
cmp
imul
out
or
xor
lret
ret
inc
mov
test
sbb
and
mov
lea
adc
sbb
aad
dec
aas
or
les
mov
cwtl
outsb
jle
xchg
in
and
aaa
out
cltd
push
loope
roll
rolb
mov
lahf
scas
fwait
ret
movsl
mov
out
inc
inc
popa
pop
jp
popf
pop
or
mov
mov
test
movb
add
in
adcb
imul
lods
push
popf
ja
add
adc
jle
mov
mov
cmc
mov
push
icebp
adc
sbb
arpl
inc
out
pop
rcr
pop
pusha
mov
sbb
xchg
shl
xchg
call
inc
xor
cmp
sbb
push
inc
mov
xchg
push
clc
pop
es
jb
jl
sbb
insb
xorl
add
in
mov
pop
jnp
popa
sub
fidivrl
jg
push
repz
inc
and
sub
cmp
rcl
sti
lock
mov
jbe
pop
bnd
lret
jg
jnp
aam
and
xor
out
cmpb
das
push
or
or
and
adc
push
pop
loope
sbb
xchg
inc
subl
dec
pop
clc
mov
adc
jbe
out
pop
xchg
clc
push
dec
jmp
cmp
push
ss
in
cmp
xchg
lret
jns
std
cmp
xchg
dec
cwtl
insl
pop
sbbb
jmp
sub
rolb
sub
lret
cmpsb
sbb
mov
fwait
push
iret
sbb
push
inc
dec
cmpsb
mov
jnp
leave
test
push
xchg
mov
xor
xchg
test
popf
pop
mov
jmp
aam
xor
xchg
je
adc
cmp
lea
dec
adc
pop
dec
mov
add
ret
scas
mov
cli
xchg
jl
dec
es
push
and
mov
cmp
mov
je
mov
sub
pop
pop
xchg
ss
pusha
sub
push
inc
pushf
gs
push
stos
in
daa
popf
enter
xor
lods
daa
aad
push
jae
out
cmpb
mov
pop
inc
fcmovnbe
divl
inc
add
dec
and
out
lahf
imulb
aas
and
in
push
fidivrs
or
out
ljmp
fadds
cmp
inc
sub
xor
xchg
fimuls
pop
adc
orl
push
jge
out
xor
jg
scas
push
jb
out
pop
scas
aas
fst
in
fiadds
loop
and
adc
shll
aad
adc
push
cmp
lret
xchg
ret
js
xchg
fidivs
in
nop
ds
push
xlat
and
scas
mov
int3
cmp
rolb
dec
mov
dec
out
mov
add
pop
push
dec
push
insl
adc
idivl
push
cmp
inc
imul
mov
das
push
cmc
std
mov
push
dec
cmp
cmpsl
mov
adc
inc
hlt
in
jmp
xchg
xor
dec
repnz
popf
fistl
imul
lcall
dec
out
jle
jge
cwtl
lret
mov
pop
mov
cmp
pop
in
mov
cs
xor
dec
xchg
sbb
call
cltd
mov
mov
fmulp
and
imul
enter
fdivl
fs
lea
add
cmpsl
cmp
mov
gs
popf
pop
insb
andl
sti
mov
insb
sub
pop
add
outsb
pop
sub
xchg
add
cmc
test
ret
icebp
test
aam
jb
mov
sarb
test
es
cmp
outsl
std
dec
jmp
adc
es
pop
test
mov
and
xlat
inc
enter
sti
roll
sti
rcll
and
push
daa
movsb
hlt
pop
push
rcll
in
std
cmp
test
loop
lock
push
jae
ret
push
xchg
push
jne
pop
push
pop
lret
and
or
fsts
xchg
decb
push
mov
dec
cmp
leave
cwtl
inc
decb
imul
cwtl
loope
mov
sub
sbb
dec
jge
mov
cmp
shll
xchg
cltd
neg
test
or
cmp
mov
in
mov
ja
ljmp
or
add
stos
fsubrs
insb
call
loop
popf
mov
outsl
dec
push
call
xchg
or
loop
mov
pushf
or
adc
movl
filds
popa
and
cld
lcall
gs
adc
xor
mov
in
sti
jg
cmp
sub
sbb
sub
lahf
sbb
repnz
fdivrs
cmp
inc
flds
lock
mov
push
imulb
int3
inc
pop
rolb
dec
pop
lock
loop
adc
mov
in
call
aad
sub
icebp
pop
sar
fbld
call
iret
pop
bnd
adc
dec
mov
or
adc
cmp
xchg
adc
jmp
hlt
int3
outsb
push
sbb
cltd
add
icebp
xchg
mov
loop
movsb
int3
std
mov
mov
fwait
mov
js
clc
mov
mov
das
mov
inc
jbe
stos
sahf
dec
je
lretw
loope
push
pop
mov
js
dec
shll
into
pop
movsb
jae
je
in
lds
into
inc
iret
std
add
sub
mov
movsb
push
cld
push
or
or
std
mov
fsubrl
pop
mov
dec
xchg
mov
ret
inc
lret
pop
cmp
mov
cmpsb
shlb
cli
loopne
sahf
jb
dec
push
out
movsb
sbbl
sub
sbb
cmp
dec
and
in
mov
inc
jne
aaa
xchg
data16
xchg
test
push
cmp
add
outsb
sbb
adc
mov
fsubrl
aaa
cs
jo
stos
mov
add
mov
loop
add
dec
lret
adc
pop
jae
in
or
daa
dec
adc
push
sbb
leave
gs
dec
jecxz
ret
adc
jg
jb
pop
enter
adcl
inc
sbb
cmp
mov
cmc
xchg
xchg
mov
push
xor
jne
lods
mov
cmp
out
pop
lret
and
lret
xchg
subb
insb
xor
sub
sti
xor
or
out
mov
call
movsb
inc
pop
push
mov
jg
sahf
into
push
rolb
lcall
push
inc
imul
sub
pop
nop
pushf
clc
push
sahf
pop
pop
add
js
inc
push
bound
sar
int3
adc
gs
stc
das
shr
xor
les
and
gs
dec
addr16
xchg
stc
shlb
mov
ljmp
pop
xchg
pop
in
sti
clc
sahf
jmp
dec
repnz
mov
in
cmp
push
mov
cmp
mov
sub
sti
xchg
sbb
lea
and
adc
in
aam
adc
cs
adc
and
mov
push
stos
ds
and
loopne
out
or
mov
xor
test
and
int3
out
adc
mov
fnsave
mov
cmpsb
rcll
out
or
das
scas
or
pusha
dec
arpl
add
aas
xor
rorl
aas
lret
test
je
ds
into
add
inc
repz
add
out
jnp
aad
mov
sahf
mov
inc
gs
in
jbe
cs
push
mov
jecxz
pop
inc
mov
bound
mov
cld
int3
pop
fnstsw
out
int
js
xchg
pop
adc
cmc
in
das
mov
adc
fcmove
dec
lahf
lods
add
and
test
faddl
cmp
push
scas
fcmove
sub
cwtl
cmp
stos
aam
int3
sbb
mov
adc
lret
mov
cmpsb
mov
fistl
lret
xchg
xchg
je
fnstsw
movsl
int
addl
mov
dec
imul
mov
nop
xchg
mov
sbb
dec
repnz
sti
pop
fsubp
addb
sti
les
daa
cli
add
pop
jo
push
pushf
xlat
xor
inc
shl
adc
xor
or
jg
jne
aas
and
cmpsb
rclb
xchg
xchg
fwait
or
inc
loope
outsl
push
sub
and
addr16
xor
xor
or
cwtl
xor
frstor
out
or
movsb
cld
addr16
fcoms
repnz
mov
in
pop
xchg
jge
sub
lcall
imulb
daa
inc
adc
mov
fisubl
sbb
test
sub
cld
mov
cmp
sub
jbe
or
dec
push
lcall
rclb
pop
mov
jp
pop
out
push
xchg
shll
xchg
sub
add
scas
fs
dec
adc
in
outsl
add
pop
cs
outsb
mov
scas
push
mov
hlt
mov
jnp
jle
in
inc
xchg
test
les
rcll
lods
addr16
sbb
aaa
push
rcrl
jb
lret
mov
ss
push
cmp
lods
ret
dec
testl
loopne
imul
inc
add
push
dec
or
or
aad
jo
outsb
sub
mov
xchg
sahf
cmp
rcll
mov
cltd
into
into
hlt
inc
mov
jl
and
cmp
mov
xor
push
ds
jmp
sbb
push
mov
lock
or
loop
jp
jp
jns
add
inc
stos
mov
xchg
popf
dec
cmp
or
xchg
inc
dec
ja
std
dec
in
enter
sub
dec
cmc
jnp
fwait
sub
sub
xor
popa
ja
daa
jmp
data16
fmul
movsb
pop
and
fidivrl
fstpl
mov
and
mov
cmpsb
fwait
sbb
inc
dec
cmp
mov
push
fiaddl
rorl
sbbb
and
or
inc
mov
push
mov
int3
leave
cmp
addr16
out
out
mov
and
xchg
cmp
out
xchg
ss
daa
mov
arpl
out
push
jle
out
dec
data16
xchg
pop
cli
adc
lods
popa
les
xor
mov
inc
adc
jne
loop
outsb
jnp
aad
mov
cmp
movsb
xchg
pop
sahf
push
pop
jnp
add
sub
mov
mov
and
stos
cmc
addr16
into
mov
mov
xor
mov
mov
mov
pop
sub
mov
xor
sub
call
popa
pop
out
js
idivb
in
lods
xor
pushf
jae
push
aad
sub
repz
out
mov
test
insl
inc
jecxz
jo
int
cmpsl
into
xor
mov
fnstcw
lret
xchg
ret
push
out
ret
cmc
or
pop
push
inc
mov
test
in
popa
cmp
add
add
icebp
fcmove
scas
sti
call
jns
out
stos
dec
xor
je
pop
cmp
js
pop
mov
inc
push
xor
mov
mov
les
mov
sarl
sbb
inc
mov
mov
lods
ret
pusha
mov
sbb
mov
dec
cwtl
cmc
inc
sbb
icebp
dec
into
cmp
les
jb
in
xchg
sahf
fiadds
std
dec
cmp
scas
pop
cltd
popa
inc
jne
imul
sbb
inc
insb
pop
rcrl
loopne
lea
cmc
sub
cli
cmp
pop
outsb
pop
loop
sbb
push
adc
xchg
stos
out
sbb
call
push
int
xchg
cli
bound
or
sbb
add
pop
add
inc
jmp
xor
fdivrl
cld
add
adc
push
test
and
push
push
lcall
aad
ret
mov
and
fnstenv
lcall
insl
inc
aaa
jmp
test
cmp
inc
mov
push
loope
adc
dec
inc
pushf
rcll
mov
sub
int3
in
sbb
and
push
mov
scas
fcompl
adc
icebp
pop
icebp
dec
clc
mov
xor
sub
fsubrp
popa
inc
add
sub
fldcw
cltd
push
in
ficoms
xchg
fcomip
and
cmpsl
xorb
xlat
jle
inc
scas
xchg
xlat
jae
dec
hlt
ret
jg
cmp
stos
inc
or
imul
mov
mov
cs
cmp
sbb
dec
cs
lcall
xor
sbbl
cmpsb
lds
mov
and
je
pop
in
leave
addl
push
mov
jo
mov
fistpll
xor
adc
pop
jae
jno
add
jns
shr
sub
push
or
mov
inc
sbb
insl
shl
arpl
out
add
aam
aam
lcall
and
sub
mov
movsl
mov
daa
negl
sbb
dec
add
sbb
add
jmp
ljmp
adcl
fsubrl
es
or
sub
cwtl
push
xchg
call
adc
inc
les
jns
or
push
dec
or
pop
inc
sbb
mov
adc
sub
pop
pop
push
xchg
lea
loope
or
jns
inc
stos
push
movl
out
je
cmp
ja
push
xor
jnp
jns
cmpsb
in
jne
dec
mov
lods
out
aad
call
dec
aas
xchg
filds
and
cmc
mov
lods
out
rclb
repnz
clc
fimuls
in
out
add
dec
repz
add
and
sbb
outsb
fsubl
mull
mov
out
ds
push
add
loopne
addr16
andl
aaa
jne
push
inc
push
push
das
jecxz,pn
lahf
out
fnstsw
andl
push
xchg
aam
out
inc
nop
aad
jle
out
stos
inc
lret
and
std
sub
das
les
adc
mov
xchg
push
push
icebp
out
out
sbb
push
jnp
jo
cmc
sahf
and
loop
iret
mov
divb
sub
mov
mull
cmp
repnz
lcall
out
jns
jb
cltd
dec
lahf
cmp
imul
push
pop
push
idivl
in
push
cmpsb
jecxz
push
pop
mov
subb
jns
cli
cmc
inc
push
lods
mov
call
adc
fistpl
fcmove
movsb
mov
cs
test
xchg
pop
add
imul
enter
pop
pop
ljmp
add
mov
sub
cmp
pop
push
inc
leave
push
and
shl
das
mov
out
fwait
sub
enter
pushf
rorl
aam
xchg
jno
cmp
decb
mov
xor
ret
stc
dec
add
push
inc
ljmp
mov
ret
test
ret
and
aam
outsl
pop
mov
pop
inc
push
pop
enter
dec
mov
xor
xchg
fnstenv
or
cmpsl
dec
mov
push
mov
sbb
pop
outsl
fsubl
or
cld
out
dec
or
jl
push
jge
adc
xlat
rorl
xchg
pop
xchg
hlt
mov
jl
mov
idivb
pop
jno
movsl
push
jne
iret
pusha
mov
insb
call
mov
and
cmp
arpl
fisttpll
aad
adc
cmp
movsb
push
push
daa
stc
hlt
not
adc
xchg
sbb
lcall
movsb
das
pusha
imul
nop
xchg
cmp
stc
dec
mov
mov
out
das
jbe
insb
packuswb
cwtl
mov
dec
pop
push
or
test
inc
lret
aas
lods
into
and
add
lock
pop
push
mov
leave
test
push
jle
and
jge
xor
xorb
jg
cmp
push
aas
pushf
cmp
sbb
outsb
xor
or
push
das
adc
dec
and
out
movsb
jmp
xchg
movsl
loop
dec
mov
movsl
mov
sahf
jecxz
es
cmp
lcall
outsl
mov
or
push
xchg
fcoml
or
xor
pop
enter
mov
add
in
gs
insb
sub
in
shr
cmpsb
mov
mov
out
outsl
dec
pop
aaa
lock
aas
xor
ror
pop
rep
mov
enter
ja
lods
cmp
jle
es
xchg
lea
xchg
xorb
js
push
shll
xchg
mov
lcall
xchg
in
or
inc
jno
int3
inc
or
add
cmpsb
or
pop
sub
mov
lret
std
cmp
stos
xor
inc
negl
repz
das
sub
mov
and
xor
scas
call
js
adc
inc
xor
and
les
ds
mov
in
aaa
pop
pop
out
mov
addl
mov
nop
addr16
sbb
push
ss
scas
in
jl
push
dec
fchs
ds
or
scas
dec
mov
sub
jne
jge
out
cmp
inc
cli
inc
and
adc
mov
je
xchg
testl
mov
mul
lds
add
ja
inc
add
aaa
add
lret
cmp
or
std
adcl
dec
jg
scas
repnz
xor
sub
xor
mov
sub
mov
lahf
xchg
cmp
cmp
int3
jo
pusha
fidivrs
out
mov
push
test
sbb
push
shr
fs
mov
cmpsb
mov
inc
iret
push
and
inc
inc
add
dec
test
nop
mov
cmp
lock
dec
xchg
xchg
sbb
xlat
adc
mov
push
test
or
xor
lea
jne
int3
lea
push
jge
inc
jb
cmp
xchg
sbb
outsl
bnd
dec
shll
fstpl
dec
push
push
jl
pushf
lds
mov
test
cs
cld
dec
repnz
enter
push
mov
cmp
insb
push
gs
cmp
clc
mov
or
lahf
jns
std
jmp
add
inc
les
xchg
sbb
or
push
loope
mov
or
mov
xor
out
jmp
cmp
xchg
gs
add
mov
mov
aaa
loopne
sbb
jno
xchg
test
test
out
jp
mov
mov
mov
icebp
mov
flds
sbb
loopne
lods
dec
aad
outsb
dec
mov
jo
push
test
inc
or
xchg
sbb
sahf
push
out
jns
mov
mov
sbb
or
lret
dec
andl
xchg
dec
xor
mov
cltd
mov
out
adc
rol
rolb
movsb
mov
jge
sbb
fwait
inc
sbb
cs
pop
lods
cld
pshufw
stc
lock
or
outsb
mov
jae
repz
xor
mov
test
dec
jg
dec
pop
inc
and
jge
fiaddl
cmp
bound
scas
inc
cmp
pop
sub
cmp
shll
je
insl
adc
int
rcr
fiadds
inc
push
lock
rcll
icebp
flds
pmaxub
inc
and
jge
cmp
xchg
adc
mov
cmc
add
mov
sub
sti
mov
pop
push
or
loop
mov
push
xor
cmp
xor
outsb
push
sysret
imul
jno
je
pop
imul
sbbb
loope
or
cmpsl
push
rolb
in
or
insl
inc
out
sbb
lahf
lahf
rcrb
pop
and
inc
inc
add
insb
pusha
fisubs
and
dec
and
pop
inc
mov
dec
cmpl
jl
dec
repz
dec
jns
mov
mov
roll
roll
lret
xor
pusha
gs
or
fwait
pusha
out
outsl
lock
loope
jmp
es
fidivs
xor
ret
dec
movsb
pop
test
lret
lods
jne
inc
sbb
insl
mov
mov
cmp
out
xor
sbbb
dec
jbe
cmp
lods
mov
mov
popf
ds
mov
sbb
mov
adc
fisubl
inc
and
bound
push
test
and
out
inc
out
orl
loopne
stc
jecxz
out
mov
test
aas
dec
notl
lods
dec
mov
jne
fildl
jno
divb
jmp
inc
shll
popf
movsb
cmpsb
cmp
ljmp
fs
lea
sub
hlt
pop
adc
mov
cs
je
cld
rcll
xchg
ficoml
pusha
mov
push
lahf
daa
lock
pop
mov
aaa
cmpsl
fstl
mov
mov
add
inc
cmp
stos
in
sahf
dec
inc
lods
test
andb
jne
mov
orb
outsb
scas
xor
orb
jb
cmpsl
jnp
pop
outsl
test
xchg
mov
inc
lret
cmp
and
popa
and
xor
mov
sub
arpl
jmp
or
cmp
sbb
daa
gs
enter
ja
jnp
xlat
pop
add
ja
and
inc
comiss
repz
addps
sbb
fisubrs
pop
xchg
imul
dec
out
or
adc
inc
ljmp
sbb
out
cli
in
lahf
cmpl
or
repnz
lcall
insl
sub
inc
repnz
sub
mov
mov
mov
jecxz
xchg
icebp
inc
sbb
andb
adc
inc
mov
lds
xlat
and
mov
repnz
inc
add
push
scas
inc
stc
mov
adc
pop
jbe
pop
daa
mov
mov
pop
jae
ret
test
mov
cmp
mov
push
pusha
push
mov
xchg
adc
mov
push
incl
dec
mov
fs
fimull
push
jo
dec
clc
mov
imul
andl
or
sub
ret
cltd
into
out
sbb
pop
outsb
inc
cmpsb
mov
std
cmpsl
pop
ja
or
mov
pop
mov
mov
iret
scas
sub
mov
je
mov
mov
sti
sahf
je
je
dec
add
loopne
lods
cmp
mov
xchg
notb
in
xor
push
in
leave
sub
lret
mov
in
lock
clc
test
lds
mov
mov
test
pop
das
and
jnp
lret
adc
imul
rcrl
insl
sahf
mov
imul
pop
jo
add
push
nop
pop
lret
iret
loop
pop
and
adc
jae
dec
mov
inc
das
pushf
enter
leave
sbb
mov
pop
adc
add
inc
outsb
mov
lcall
dec
sbb
sbb
inc
stos
cmp
daa
rcrl
cmpl
mov
rcl
push
daa
pushf
bound
mov
cs
xlat
fisubl
jno
sub
icebp
jmp
imul
icebp
adc
inc
loope
test
cs
xchg
cmp
jg
and
sub
popa
fimuls
fadd
pop
in
lret
mov
outsb
and
mov
mov
and
dec
aam
inc
sti
add
movsl
pushf
fistpll
je
cld
or
int3
fdiv
or
lea
xor
call
lret
sub
daa
or
lret
in
mov
fdivs
fcmovnbe
pop
cwtl
mov
sahf
sub
clc
inc
mov
ja
leave
lods
stos
mov
into
les
fcmovu
xchg
adc
idiv
clc
or
cli
dec
rorl
ficoml
adc
lret
out
jecxz
ficoml
or
test
ret
pop
cmp
inc
or
lea
int3
pushf
test
es
scas
sar
pop
pop
pusha
cltd
dec
cmp
iret
out
cmp
xlat
mov
jbe
inc
cmp
or
dec
push
xlat
mov
fisubs
repnz
out
sti
pop
dec
inc
cmp
nop
fildll
cli
mov
frstor
fdivrl
insb
mov
cmp
jae
jp
cli
mov
or
xor
std
xor
mov
xor
mov
lret
sub
rorl
mov
push
ret
movsb
pop
stc
out
xchg
sub
es
movsl
cli
mov
popl
inc
test
add
lahf
leave
inc
sahf
sarb
subl
into
sub
cld
ja
sbb
sub
adc
in
and
cmp
test
sbbb
sti
mov
push
sub
mov
lahf
cwtl
jns
adc
outsb
lock
icebp
sbb
loope
addr16
adc
fcomps
test
lahf
push
cmp
fs
test
imul
das
mov
clc
pop
xor
nop
mov
outsl
scas
pop
cmp
push
shl
ss
fwait
sbb
push
lods
fnstcw
ss
jmp
divb
adc
hlt
sahf
movsl
pop
mov
lret
outsb
jp
popa
lds
xchg
test
in
push
nop
movsb
sbb
adc
mov
inc
mov
xor
xchg
clc
loope
cli
push
data16
sbb
xchg
daa
cmp
xchg
dec
ljmp
and
xlat
jl
das
imul
jb
mov
sahf
dec
test
mov
psubw
xlat
inc
iret
stc
ficoml
mov
fisttpll
xor
sub
push
test
call
dec
popa
lcall
xlat
adc
inc
leave
cwtl
lds
lea
mov
sbb
fcmovu
push
and
mov
jmp
jnp
adc
mov
cld
dec
push
rorb
xlat
push
jno
add
nop
bound
shrb
sbb
pop
shll
pop
sbb
cmp
push
lret
add
xorl
repnz
insb
mov
test
sbb
gs
inc
cmp
add
enter
jae
dec
dec
fs
adc
outsb
push
inc
pop
mov
loopne
inc
cmp
insl
mov
sahf
mov
or
testb
int3
adc
fidivrs
pop
fstl
xorl
in
loopne
inc
mov
sbb
fadds
addl
sub
cmpsl
dec
mov
cvtps2pi
dec
jle
insl
cvtps2pd
pop
mov
jo
fcoml
push
dec
mov
in
cmpsb
xor
stos
add
adc
shlb
xor
sti
lea
out
cmp
dec
mov
xchg
adc
lods
mov
ljmp
xchg
test
insb
and
mov
jbe
jecxz
paddq
andb
sbb
rorb
mov
xchg
jbe
int3
push
in
fistpll
aad
fwait
cmp
add
mov
pop
sub
aaa
cmp
push
lds
push
xor
cmc
cmp
cmc
rcrb
and
sahf
ja
sti
pop
movsl
out
rolb
push
daa
jecxz
mov
ljmp
pop
pop
aas
push
jge
pop
out
test
jnp
cld
into
push
push
jmp
fsts
je
sahf
cmp
mov
add
pop
adc
push
xchg
rorb
in
loop
not
iret
jg
push
addl
clc
popa
rcrl
push
push
add
stc
movsb
add
push
dec
push
fiadds
push
push
push
mov
mov
pop
jmp
pop
roll
inc
inc
dec
gs
adc
bound
ss
cmp
aam
mov
lret
outsl
leave
mov
add
adc
mov
cwtl
xchg
mov
pop
insb
mov
dec
dec
aad
mov
and
inc
jg
push
clc
iret
adc
sub
mov
adc
xor
dec
add
sub
ret
or
daa
out
icebp
adcb
add
nop
mulps
sbb
das
call
mov
add
test
addb
xchg
jmp
sbb
pop
and
mov
aad
jb
outsb
inc
and
adc
leave
jle
pop
jge
nop
js
mov
icebp
stos
inc
fisttps
jnp
into
jo
hlt
sbb
outsb
das
mov
ss
movsb
repz
testl
pop
mov
fsubr
dec
xchg
leave
xchg
les
jl
test
in
sbb
jle
fildll
jns
xchg
cmp
dec
sbb
lret
jb
mov
inc
cmc
sub
sbb
lahf
loopne
fsts
xor
sub
add
lahf
in
mov
jb
cmpsl
mov
inc
cmp
data16
jl
in
push
sti
jb
xor
fsubrl
add
cmc
pop
xlat
cmp
int3
bound
lret
es
call
mov
mov
leave
aam
sahf
pop
clc
test
out
scas
and
daa
leave
sbb
lods
push
and
pop
enter
test
pop
mov
mov
daa
xchg
sti
adc
mulb
sbb
xor
sbb
or
jecxz
jl
adc
fs
jecxz
fisttps
rcll
mov
aas
mov
cmpb
fwait
ss
and
leave
clc
out
mov
test
mov
pop
mov
sub
sbb
xor
gs
and
sub
scas
add
dec
jbe
xchg
sbb
cmpsl
iret
fsubl
hlt
shrl
and
aad
push
and
imul
inc
jge
sbb
pop
test
add
test
lret
jnp
lock
pop
dec
jne
jb
adc
mov
ds
mov
jb
mov
xor
mov
mov
aaa
jns
es
cmp
dec
and
xor
out
icebp
or
mov
das
iret
out
clc
bnd
int3
mov
jns
cli
mov
scas
orl
inc
shll
lcall
sbb
inc
sub
fistps
rcrb
add
das
shll
dec
jg
test
sbb
mov
xor
push
adc
xlat
pop
mov
in
and
or
and
hlt
in
pusha
inc
popa
cmpsl
xchg
mov
loop
loopne
adc
pop
add
pop
xchg
inc
xlat
lods
gs
sbb
adc
ret
xor
es
pop
aam
sarl
rcr
or
leave
stc
add
xchg
push
lds
arpl
mov
inc
adcl
mov
bound
js
inc
jg
and
es
imul
xor
inc
lods
sub
roll
call
loopne
test
push
inc
in
pop
cwtl
mov
lret
jns
mov
push
lret
adc
mov
lret
stos
fs
xchg
sbb
add
xchg
adc
lcall
stc
adc
xor
cmpsb
mov
mov
mov
sbb
fs
movsb
mov
sub
lret
std
scas
inc
or
es
push
sarl
sahf
pop
in
pop
nop
and
adc
xchg
sar
mov
adc
iret
lock
sbb
mov
jle
or
out
das
push
scas
fs
test
shll
pop
test
inc
or
jb
out
gs
mov
inc
sub
dec
and
nop
sub
aas
adc
sahf
loop
stc
add
mov
sbb
mov
inc
loop
fwait
lret
push
out
out
add
mov
dec
mov
scas
fisubrs
sbb
sub
push
cmp
insl
fnstsw
mov
mov
popf
pop
push
cld
lds
popf
jge
movsb
add
test
cld
mov
jecxz
dec
xchg
ret
push
sub
testb
xor
lods
sbb
and
push
mov
pop
cmp
in
popa
call
pop
or
mov
cmpb
bound
das
outsl
not
push
test
dec
jb
bound
xchg
sbb
push
jae
shlb
out
shlb
mov
jp
lahf
mov
or
and
in
outsb
aas
pop
cmp
sbb
jp
jnp
pop
mov
xchg
xor
mov
push
stos
add
je
stos
ret
fwait
adc
push
xchg
mov
mov
fwait
cmp
jne,pn
imul
fsubrs
ret
xor
sbb
test
mov
ffree
rcrl
push
cld
sarl
sbb
pusha
cld
mov
and
in
xor
sarb
fdiv
outsl
inc
stos
xor
and
xchg
sahf
push
out
dec
cmp
mov
mov
test
mov
es
and
push
xor
mov
dec
fidivl
push
sarb
pop
add
mov
add
or
jmp
repz
pop
inc
push
mov
pusha
mov
adc
sbb
sub
or
rorl
pushf
push
mov
add
cld
adc
sbb
adc
push
inc
pushl
cld
fstl
and
jb
std
cmp
addb
es
aaa
pusha
adc
mov
mov
into
inc
jb
adc
jmp
mov
movsl
jo
mov
iret
test
or
xchg
sbb
aam
inc
mov
orl
cmp
jle
dec
cmpsb
out
enter
pop
sbb
in
inc
xchg
mov
es
inc
in
pop
icebp
jecxz
fidivs
jp
adc
call
daa
call
jmp
xchg
sahf
mul
hlt
in
fdivrl
or
mov
mov
or
pop
leave
pop
lds
xchg
repnz
push
mov
lock
dec
push
jae
add
pop
fimuls
cmp
fldl
shlb
imul
sbb
xor
aad
or
xor
cmpsl
mov
add
dec
out
pop
and
popf
mov
mov
fdivrs
incb
cmp
mov
jmp
mov
fldenv
incb
cmpsl
in
pop
push
jecxz
fistl
push
add
or
stc
adc
jb
lods
lods
shlb
iret
fildl
ret
adc
popa
mov
adc
pop
dec
pop
pop
js
rol
sbb
aam
xor
imul
cmp
adc
push
push
or
scas
stos
xchg
xor
int
repnz
mov
ror
sbb
sub
outsl
mov
dec
mov
jb
sub
or
fdivrp
nop
aaa
ss
in
or
fdivrs
pushf
inc
add
fwait
xor
cltd
and
xlat
adc
sub
pop
xor
and
and
insl
add
sub
sbb
sub
data16
and
adc
mov
stc
gs
xor
fnstcw
cs
aad
imul
mov
lret
bound
mov
fisubs
adcl
xchg
hlt
mov
xchg
lods
bound
cmp
shlb
inc
pushf
cmp
xchg
push
jbe
fcomp
clc
adc
fstpt
sbb
sbb
decl
xchg
loope
bound
xor
das
aaa
push
cmp
adc
jp
sub
mov
cld
dec
pop
adc
push
jb
loop
mov
cwtl
push
daa
jg
rolb
mov
sub
fucomi
addl
popa
or
pop
adc
ss
add
test
xchg
repz
inc
add
mov
mov
lea
sub
insl
jg
lods
test
clc
adc
mov
mov
aaa
and
rol
mov
insl
dec
fstpt
mov
cmpsb
fimuls
dec
xchg
sub
nop
adc
lods
stc
inc
in
jns
xor
sub
leave
push
cld
pop
js
bound
pop
jle
fs
cmp
ret
mov
xchg
cmp
pop
jnp
imul
pop
add
sti
out
outsb
pop
add
insl
fwait
push
pop
out
inc
sub
xor
sub
call
mov
jl
sti
jae
lods
js
pusha
jns
loope
or
movlps
cld
in
ljmp
mov
mov
daa
cmp
shrl
push
mov
imul
outsb
mov
adc
xchg
stc
mov
dec
cwtl
jno
call
mov
mov
adc
or
adc
mov
or
sti
popa
mov
aam
cld
adc
cli
or
push
inc
aad
dec
push
or
subb
push
pop
lret
xor
xchg
outsl
lret
ret
stos
push
lahf
xor
stos
cmp
or
les
popf
cmp
fidivs
aas
fadds
fnstsw
lahf
sub
push
push
flds
inc
xor
jo
xor
pop
pop
outsb
gs
sub
cmp
popf
or
adc
sub
in
sbbl
mov
cld
lret
es
es
or
popf
out
lret
mov
jnp
or
std
pop
lea
mov
cmc
mov
das
sub
sbb
testb
cmpsl
sub
jno
sub
xchg
pushl
mov
icebp
cld
stos
mov
sbb
cld
hlt
lahf
mov
pop
mov
jae
push
jg
jp
push
add
dec
mov
lcall
fstpl
sti
jecxz
cmp
xchg
jns
out
sbb
xor
cmc
stos
dec
pop
cwtl
mov
inc
sbb
jae
push
loopne
jb
xor
jbe
xchg
mov
loopne
inc
cmp
xchg
out
std
rorl
popa
aad
push
push
les
movsb
rolb
cmp
aaa
mov
mov
movsl
pop
imul
pop
xchg
inc
mov
in
xor
punpcklbw
and
xchg
fisubrs
pusha
cmp
shll
sbb
push
sbb
scas
sarb
scas
jcxz
jmp
iret
bound
rcll
pop
cmp
popf
mov
imul
lods
mov
cwtl
mov
mov
mov
mov
dec
xchg
nop
cwtl
in
sbb
push
fwait
sbb
mov
cmp
mov
or
icebp
sti
dec
push
fnsave
mov
add
inc
fwait
aam
lahf
cmp
orl
fcmovnu
xchg
mov
inc
mov
imul
out
nop
je
out
jb
dec
cmp
xor
cltd
stos
loopne
jne
out
je
test
lea
pop
fimuls
xor
push
stc
and
out
sub
notl
inc
mov
mov
add
jne
inc
into
pop
sbb
fildl
aad
sub
jno
xorb
or
adc
cmpsb
sub
mov
add
sbb
or
inc
in
lahf
inc
pop
repz
pop
int
pop
ss
jb
pop
in
in
sbb
ffree
inc
or
cltd
aaa
psubusb
addr16
jg
cmp
imul
dec
scas
mov
xor
enter
aad
cli
cmp
shrb
dec
jg
leave
out
lret
push
xlat
pop
repnz
repnz
sub
dec
xor
push
and
pushf
adc
pushl
ret
aad
in
lea
sbb
pop
movsb
push
cmp
inc
xorl
lret
sbb
sarb
aad
cmp
pop
mov
cmp
lret
or
sub
ljmp
push
xchg
scas
jle
pusha
gs
punpckldq
sbb
ljmp
dec
sbb
jecxz
mov
mov
pop
mov
dec
loope
scas
ds
dec
jecxz
imul
pusha
push
cmp
lahf
in
icebp
or
add
dec
ret
cmp
xchg
and
ffreep
fdivl
push
push
jb
rcr
mov
dec
mov
jo
test
add
sub
push
or
and
xchg
fidivs
lcall
data16
mov
push
es
xor
scas
in
dec
mov
xchg
sbb
sub
pop
pop
rep
lods
push
xchg
xchg
jge
inc
cmpl
out
iret
dec
dec
cmc
mov
test
xorb
push
push
inc
ds
repnz
mov
pusha
xchg
mov
fimuls
pop
mov
pop
cli
jp
ret
fdivrl
ret
pop
and
dec
cmp
xorb
lea
in
mov
leave
ljmp
and
cli
push
test
add
rep
add
mov
dec
dec
ret
and
outsb
sti
mov
jae
repnz
scas
das
std
adc
jl
push
aaa
fistpl
and
vmovdqu32
loope
cmp
mov
jecxz
aas
lea
mov
adc
jg
test
les
dec
cltd
xchg
iret
aas
sbb
das
insl
lock
repz
addl
xchg
mov
jmp
or
dec
sbb
add
jmp
shrb
insb
loop
fstpl
ror
xlat
test
dec
stos
cmp
inc
mov
insb
cmp
addr16
push
stos
mov
xchg
cmp
jae
mov
mov
mov
sbb
jb
pop
mov
dec
or
cmc
out
std
xchg
js
adc
mulb
ret
leave
inc
push
and
addr16
jno
sbb
fadds
fldenv
push
mov
pop
push
pop
mov
push
and
mov
pop
sub
popl
mov
ljmp
pop
cmpsl
inc
arpl
movsl
xchg
pop
ss
push
cli
or
div
pop
add
sbb
rolb
jp
pop
in
mov
and
outsb
pop
icebp
mov
sar
test
add
aam
jl
repz
testl
jns
pop
stos
fcmovu
xchg
jecxz
pop
push
cltd
cmp
dec
mov
pop
xchg
inc
not
mov
fisubs
leave
cmp
jge
clc
andb
popa
lock
in
mov
add
push
jnp
inc
rcrl
mov
mov
aaa
hlt
das
nop
mov
es
pop
test
mov
push
loope
dec
scas
xor
test
jle
stc
jne
ret
iret
incb
add
and
and
sbbl
or
dec
fsubrs
jo
out
pop
dec
scas
mov
je
mov
fdivrl
adc
xchg
and
rcrb
and
mov
dec
sub
add
incb
sbb
icebp
sub
ja
lret
mov
jmp
jns
inc
sub
rcrb
lock
add
aaa
daa
add
lret
inc
mov
mov
pusha
loop
push
cmp
std
dec
push
or
add
ds
adc
dec
inc
out
xchg
repz
test
fsub
out
icebp
lcall
jb
push
cwtl
xchg
test
mov
ficomps
jg
sub
test
mov
or
in
push
mov
in
pop
roll
in
shlb
pusha
lods
leave
fbld
and
jp
add
fidivl
add
cli
inc
lret
mov
pop
and
pushf
cmp
sbb
cmp
aam
leave
test
icebp
lds
iret
stc
push
jle
push
jl
mov
insl
dec
cmp
lock
test
xor
add
xor
dec
sbbb
stos
inc
inc
push
jnp
mov
cs
std
sub
repnz
movsb
fwait
pop
into
in
lods
dec
ror
cmp
scas
stos
mov
or
dec
cmc
mov
add
pop
mov
pop
cmp
inc
fwait
outsb
jmp
jns
xchg
icebp
int
cwtl
cwtl
push
add
push
fs
inc
push
mov
jnp
adc
add
and
out
push
sbb
loope
adc
mov
insb
xor
loope
icebp
lret
dec
xor
dec
cmc
inc
icebp
test
or
xor
mov
add
or
sub
jg
les
les
add
fbstp
xor
cwtl
jl
mov
es
or
test
push
cmpb
cmpsl
rcrb
xor
mov
loop
adc
test
push
and
std
inc
inc
cmpsb
and
add
das
sti
add
into
testb
dec
inc
xlat
mov
iret
mov
fs
dec
addr16
call
inc
cli
das
ds
sti
nop
sub
xchg
mov
jg
mov
scas
pop
loopne
or
sbb
mov
sub
lret
jbe
mov
loop
pop
in
sbb
js
adc
inc
jbe
dec
nop
xchg
inc
adc
dec
or
mov
jle
mov
dec
mov
pusha
xchg
fsubr
out
lods
mov
xchg
mov
pop
dec
push
inc
jmp
mov
mov
ljmp
sarl
jns
push
ret
dec
outsb
rcrl
mov
mov
xchg
dec
push
repnz
pop
pop
add
cs
call
mov
jne
dec
in
leave
js
lahf
adc
cld
add
and
mov
fisttps
mov
xorb
adc
loop
xchg
pusha
add
xchg
scas
mov
pop
xchg
inc
pushf
les
adc
test
popa
subb
sti
inc
and
sbb
and
insb
push
jb
ss
dec
jge
rorb
ret
sbbb
iret
mov
mov
icebp
adc
fs
and
sti
push
out
cmpsl
fnstsw
and
xchg
pop
mov
fidivs
dec
cmp
fstpl
pusha
sub
enter
rorb
sbbb
pop
cmp
test
and
push
iret
ds
lods
daa
dec
in
cmp
xor
inc
inc
or
std
adc
aas
shrb
and
insb
or
cld
lahf
mov
mov
xchg
jne
aam
pop
scas
sbb
adc
leave
outsb
jl
fadds
in
sub
enter
mov
mov
and
scas
outsb
leave
out
insb
int
mov
cli
push
inc
add
xlat
sbb
dec
jg
inc
push
out
cmpsb
mov
mov
scas
xchg
ficompl
aas
add
popf
mov
xchg
push
mov
lock
xchg
fistpl
jo
in
popf
das
sarb
pop
jno
xor
xchg
rclb
jnp
cwtl
sub
jle,pt
or
lret
and
mov
dec
mull
and
addr16
fisubrs
mov
sbb
rorl
sti
in
xchg
repz
dec
push
test
and
repz
loopne
in
mov
push
movsb
jo
inc
ret
inc
jle
xchg
and
repnz
jl
adcl
or
cmpsl
jl
ret
lahf
decl
push
push
pop
mov
fidivrs
inc
loope
sbb
cmp
int
js
imul
repz
ss
mov
hlt
pop
in
mov
xchg
loope
jp
rol
cmpsb
mov
add
sarb
cld
pop
in
stos
lods
icebp
mov
aam
fsubp
sub
das
mov
pop
and
rcrl
mov
xchg
cli
int3
into
push
pop
cmp
push
push
mov
mov
movntsd
sub
mov
out
cli
cli
cmp
mov
add
mov
test
ret
push
jae
mov
je
push
push
das
setnp
cmp
cmpsb
jg
xor
add
test
js
arpl
adc
hlt
sub
pop
jmp
cltd
jbe
out
push
icebp
adc
fcmovnbe
pop
int3
push
mov
movsl
adc
in
jp
mov
stc
xor
stc
mov
pop
pop
dec
mov
mov
dec
shlb
mov
fwait
or
int
push
cmp
fldl
das
fidivrl
mov
dec
adc
aaa
loope
xor
xchg
push
xor
rorb
pusha
push
sbb
and
stos
out
mov
cmp
lret
jl
sub
or
data16
aad
jo
insl
xor
mov
pop
mov
mov
xchg
cli
cmp
pusha
testb
test
fdivs
in
lret
aad
inc
bound
les
cli
into
push
push
xchg
out
mov
mov
out
pop
mov
adc
test
mov
icebp
xchg
cmp
or
push
shll
or
pusha
loopne
pop
fmuls
jl
inc
jmp
inc
lds
cmp
pop
cs
leave
jmp
pop
sub
dec
enter
lods
fisubrl
pop
or
addl
cli
int3
and
pushf
mov
mov
mov
fsubs
pop
ja
rcrl
xlat
pop
or
cmp
imul
movsl
jns
inc
ret
push
cltd
enter
addl
mov
xor
aam
xchg
and
mov
add
addr16
subl
insl
or
mov
out
cmpsb
mov
jmp
jne
xchg
push
mov
or
pusha
xor
pushf
dec
xchg
push
hlt
addr16
mov
jge
sub
cmp
jnp
imul
adc
out
sub
dec
sub
mov
xchg
dec
add
mov
sub
cmp
lret
inc
or
jge
mov
pop
leave
fs
mov
mov
or
lods
pop
in
push
and
test
ror
jge
dec
mov
push
mov
sbb
lahf
adc
fcos
cmpl
test
cmp
fcoml
lods
xor
les
jge
adc
add
pop
imul
pop
xor
pcmpeqw
jmp
mov
notl
ds
mov
iret
pop
cli
mov
movb
inc
mov
mull
mov
mov
es
lret
push
arpl
and
and
jle
pop
inc
test
lods
lret
les
xchg
dec
ret
in
pop
inc
cmp
and
jl
int3
out
mov
pop
lret
add
jb
inc
dec
pop
pop
sbb
data16
mov
adc
jbe
push
test
mov
or
xchg
adc
sahf
dec
sub
pop
sub
push
cs
sahf
aad
cmp
pop
cmpsl
pop
dec
out
jmp
in
clc
add
jae
test
dec
jb
popa
loopne
fsub
in
lcall
mov
sbb
jne
mov
pop
mov
or
adc
in
pop
fwait
and
fldt
outsl
test
pop
pushf
iret
jbe
mov
push
xchg
shr
loopne
dec
lcall
in
mov
sbb
adc
sub
add
or
aam
xor
mov
shll
fnstcw
les
lods
ds
add
push
mov
out
push
xor
push
or
push
pop
pop
int
rorl
mov
push
ss
mov
cmp
mov
ja
lcall
fstp
and
icebp
out
sub
fs
cld
in
lods
dec
pop
stos
out
xchg
cmpsb
pop
xchg
push
pop
popa
jno
mov
cmpl
sbb
ret
out
adc
repnz
lea
dec
pushl
pop
pop
cmp
fcomps
dec
icebp
sar
mov
mov
sahf
imul
inc
repz
mov
lret
or
xchg
cs
cmp
fstpl
bound
push
or
push
pop
adc
imul
repz
mov
xchg
lods
xchg
mov
mov
into
shlb
fwait
cld
sbb
leave
in
jb
add
lret
sbb
xor
stc
scas
or
jns
enter
sub
add
inc
cmp
lock
pop
adc
imul
push
ss
out
inc
mov
cmp
xor
cwtl
cmc
pop
lret
lahf
aas
mov
mov
xchg
inc
and
neg
and
mov
int3
divb
test
mov
xor
jl
mov
jg
fucomi
mov
pop
pop
insb
mov
mov
mov
loope
jmp
sbb
xlat
aam
mov
push
add
sbb
cld
gs
or
pop
dec
stc
or
sub
outsb
cs
jne
aad
cld
or
xchg
into
dec
test
push
and
mov
lods
pop
sbb
xchg
mov
push
mov
mov
push
pop
imul
cs
and
inc
in
fadd
dec
je
lahf
inc
xchg
outsb
int
dec
ds
xor
inc
xor
cld
daa
mov
or
mov
push
fstpt
add
jns
js
sub
movsl
xor
shrb
jnp
jns
push
mov
insl
cmpsl
out
xor
or
or
test
cwtl
in
lods
imul
or
loop
lods
hlt
int3
push
mov
pop
mov
cmpsl
dec
cmpsb
fcomi
sbb
outsb
lahf
inc
sub
pusha
or
cmp
out
mov
insb
je
cwtl
mov
and
aaa
cld
clc
mov
inc
scas
aam
mov
pop
jmp
hlt
pop
mov
jl
or
popf
cmpsb
xchg
mov
test
cmpsl
cs
and
cmp
mov
in
out
fstpt
call
lods
dec
shl
jg
mov
insl
push
xchg
stos
xor
xor
pop
lods
imul
dec
sarb
int3
cmp
pop
and
lahf
inc
mov
jl
adc
icebp
sbb
sbbb
cltd
inc
in
fdiv
pop
roll
stc
mov
lea
xor
cmc
cmpsl
jg
sysenter
scas
dec
adcb
sub
mov
pusha
popa
mov
scas
push
outsl
movsb
imul
dec
push
mov
into
outsl
lea
fdivs
ret
jae
inc
shll
cmp
inc
mov
decl
xor
mov
fistps
aam
movsl
gs
mov
adc
ret
xchg
dec
cmp
daa
les
mov
fbld
and
dec
inc
inc
sbb
xlat
xorl
sub
pop
aaa
scas
enter
fsubp
cmpsb
gs
sub
or
xor
mov
dec
test
xchg
clc
sarb
cmp
xor
push
daa
push
mov
jl
pop
sbb
test
in
adc
cmovns
int
xor
lcall
dec
inc
mov
in
pusha
adc
outsb
mov
stos
rolb
data16
xor
outsb
or
cwtl
mov
fucomp
sub
push
lcall
jnp
mov
mov
cli
dec
xor
mov
xchg
mov
cmp
addl
stos
add
pop
xlat
pop
mov
mov
popa
nop
popa
shll
cwtl
ds
xchg
push
cmp
stos
sbb
sbb
or
sbb
test
out
cmp
pop
sub
lret
pop
cmp
jmp
out
cmpsb
dec
and
out
sbb
sbb
mov
mov
jo
enter
leave
pop
cmpsl
adc
cmpsl
data16
push
xchg
jae
sub
test
popa
mov
sub
xchg
out
inc
add
pop
mov
mov
dec
cmpl
cmc
cmp
dec
cmp
adc
fisttps
cs
pop
bound
pop
adcb
f2xm1
pop
mov
ret
jp
pop
mov
inc
in
adc
jb
adc
xor
adc
fists
rorl
push
bound
dec
sbb
loopne
cs
fbld
loope
out
xlat
sbb
repz
push
jno
jg
xchg
xchg
fninit
inc
movsl
sahf
ljmp
loope
shll
mov
gs
bound
xor
add
push
xor
sahf
sub
mov
gs
pop
imul
out
mov
loop
fisttpll
inc
sub
xchg
xlat
cmpsb
jge
sahf
cmp
xchg
insb
xchg
push
fimuls
leave
cmpsb
sub
or
sbb
das
cmp
data16
je
mov
pop
pop
mov
xchg
rolb
add
xlat
shrl
xor
inc
pop
push
fcomps
mov
push
push
mov
push
ss
pop
adc
xlat
loop
mov
adc
in
out
movsl
insb
cmpsb
pop
in
or
jno
aaa
in
scas
mov
sbb
xor
aam
fildll
aaa
pop
js
movsb
cwtl
mov
and
cmpsl
pusha
sub
lret
std
ret
mov
jns,pn
xor
js
dec
jg
sub
mov
ss
mov
add
testl
push
jecxz
lods
adc
push
or
xchg
fisubrl
jb
cld
xchg
cmpsb
dec
inc
outsl
cmpsb
xchg
inc
das
pusha
pop
mov
lret
rorb
pop
pop
dec
ja
fistps
gs
ficompl
jge
mov
mov
outsb
jo
xchg
frstor
movsl
xchg
adc
dec
ljmp
mov
aas
imul
into
call
insl
xor
and
movb
pop
inc
or
insb
fbstp
nop
inc
shll
test
aas
jb
push
aaa
xchg
cmc
adc
sahf
rorl
fcmove
jne
fs
xor
inc
sbb
and
and
add
divb
les
movb
hlt
hlt
pop
leave
mov
or
aam
sub
add
in
fistps
jp,pn
pop
nop
popa
mov
xor
mov
mov
add
pop
xchg
cmc
and
arpl
test
push
idivb
incb
cmp
sbb
mov
inc
pop
fwait
jns
jb
xchg
rcll
add
mov
int
push
movsl
int3
in
ficomps
insl
cmp
lret
dec
daa
mov
xchg
ss
ljmp
pop
ficoms
mov
mov
mov
dec
mov
dec
sbbl
lods
hlt
int3
pop
es
sub
data16
jne
mov
sub
mov
mov
mov
cwtl
mov
popf
mov
add
in
push
fildll
pushf
fidivl
and
dec
inc
cwtl
call
inc
xor
xlat
cmp
cltd
fldenv
scas
rcrb
lahf
sub
xor
lahf
incb
addr16
push
test
mov
sub
ljmp
lret
jecxz
ljmp
cmpsb
push
jbe,pt
mov
cmpsl
lea
ds
mov
xchg
sti
mov
das
sub
scas
sti
scas
fldcw
lret
fidivrl
jnp
sub
xchg
lret
cmp
fdivrs
xchg
movsb
int3
ja
loop
out
and
xchg
jns
fldenv
sbb
jae
add
les
cmp
lods
mov
stc
leave
jmp
ljmp
int3
in
push
xchg
call
sbb
into
sbb
and
sub
adc
pusha
das
jns
mov
stos
nop
push
push
jge
lea
add
mov
sti
adc
dec
jae
xchg
rorb
clc
jmp
mov
shl
pop
xor
push
inc
in
fsubr
dec
fidivrs
add
ds
xchg
mov
mulb
fiadds
leave
addr16
xlat
jge
add
insb
adc
pop
mov
mov
shll
jns
and
mov
add
repnz
repz
ret
hlt
inc
and
and
mov
mov
jmp
mov
inc
movsl
fldcw
sbb
and
fisubrs
pop
xchg
movsl
sub
repz
lret
dec
cwtl
lcall
fcoml
je
lods
pop
add
pop
mov
adc
fcoms
aad
lcall
push
sbb
into
jns
sub
sbb
xorl
test
fidivs
dec
aam
sub
les
mov
inc
adc
jge
inc
xor
cmc
cmpsb
leave
fcmovnbe
cmpsl
sahf
nop
xchg
mov
aad
xorb
jns
cld
inc
out
and
push
adc
xor
fsubs
shll
iret
mov
lahf
push
push
push
std
stos
mov
jl
xchg
sub
and
lods
roll
inc
inc
sahf
outsb
inc
mov
imul
lret
cli
xchg
notl
push
ds
fimuls
outsb
std
pop
bound
cli
xorb
pop
inc
jmp
mov
xor
fiaddl
decl
nop
pushf
adc
sbb
sbb
pop
fmull
data16
push
lds
push
jge
xor
sbb
cltd
fsub
lret
mov
in
gs
mov
insb
ror
fistpll
adc
sub
dec
push
jbe
enter
test
mov
sub
adc
fldl
sti
mov
scas
mov
aad
sub
and
out
push
jo
push
repnz
sub
cmp
cmc
test
jg
out
inc
pusha
stos
mov
and
mov
loopne
aam
dec
in
mov
lods
add
sub
scas
clc
fcmovnbe
mov
fs
aas
pop
adc
add
add
inc
popf
push
decb
mov
cmpsb
popf
pop
mov
mov
rcll
sub
movl
les
inc
jmp
push
sbb
cltd
iret
mov
push
cmpsb
push
in
xor
sbb
jl
inc
hlt
cmp
adc
xor
xor
push
add
icebp
scas
inc
and
outsl
xchg
in
dec
lock
cmp
aad
loop
push
push
vpaddsb
flds
enter
rcrb
ljmp
in
std
mov
popf
pop
repz
dec
dec
adc
addr16
jne
lods
jge
mov
add
inc
inc
xor
mov
mov
pop
cs
sub
or
loop,pn
mov
loopne
sub
xor
jecxz
cmp
push
movsb
adc
popf
stos
sahf
add
mov
adc
lret
cmc
adc
mov
test
xchg
bound
inc
pop
sub
adc
subl
jmp
cs
jg
cmpsb
divl
adc
push
pusha
cwtl
inc
ljmp
xchg
add
inc
arpl
out
mov
mov
cmc
pusha
inc
xchg
xchg
push
fucomp
loope
add
jmp
xor
mov
outsb
or
pop
xchg
arpl
push
sbb
jb
mov
rcll
or
ja
xlat
ficomps
pop
pop
or
outsb
sub
std
je
mov
inc
lahf
adc
lcall
bound
mov
bound
ljmp
mov
mov
jecxz
andb
imul
je
sahf
pop
cmp
fistl
add
push
outsl
ret
dec
dec
dec
dec
push
mov
sbb
xchg
nop
mov
aas
ret
imul
into
test
cltd
cmp
inc
xchg
inc
and
push
push
loopne
xchg
jg
ret
push
sbb
xchg
adc
aad
cmp
repz
imulb
mov
out
push
das
jp
push
mov
jb
push
loop
adc
ss
adc
add
jb
cltd
mov
mov
sar
cmc
pop
jae
loop
and
mov
ret
std
test
fs
push
fmulp
sbb
jge
imull
xchg
xchg
shr
test
dec
loop
jl
xor
repnz
xchg
xchg
outsb
pop
adc
inc
mov
scas
xchg
ds
cmp
in
sub
push
and
fisubl
nop
mov
inc
outsb
daa
test
pushf
fwait
and
pop
cmp
je
daa
addb
dec
rcll
lcall
cmp
pop
inc
insb
stos
data16
mov
pop
gs
xchg
mov
inc
xor
jno
loopne
sti
cwtl
dec
mov
push
das
ja
mov
cmp
xchg
iret
jmp
clc
ja
dec
icebp
mov
insb
rclb
or
outsb
inc
aaa
xchg
nop
mov
push
jb
dec
dec
pop
dec
push
pop
insl
pushf
xchg
das
out
imul
jp
negb
lahf
scas
aaa
aad
popa
xchg
sti
mov
aad
outsl
loopne
mov
dec
fs
and
push
push
push
hlt
into
jns
dec
push
out
cwtl
or
mov
mov
in
pop
add
lods
mov
xchg
push
jnp
xchg
mov
es
test
popf
test
xor
mov
scas
add
sub
xor
cwtl
jle
sbb
andb
push
xchg
aad
std
lret
mov
cmp
mulb
push
in
aas
ljmp
lds
rcrl
repnz
into
es
mov
mov
xchg
pop
mov
stos
jo
and
jl
rorb
xor
push
mov
push
mov
shll
sub
dec
xorb
popa
out
pop
mov
jmp
fcoms
sbbb
insl
lock
enter
out
movsb
jns
mov
push
pop
aad
rcrb
cwtl
gs
xchg
push
cmp
das
fs
test
cld
cmpsb
outsb
jno
inc
cmp
push
cmpsl
dec
lcall
pop
aad
out
lret
or
lret
imull
je
jle
bswap
jne
jl
push
test
xchg
cmp
mov
sbb
xchg
call
rorb
xor
jae
popa
add
pop
lock
rorb
sub
cld
push
jo
xorl
loopne
lds
xchg
ja
sub
lret
xlat
inc
adc
mov
and
and
fnstsw
outsl
out
gs
pop
jg
xlat
imul
je
sbbb
ficomps
cltd
push
push
sub
stos
inc
mov
sbb
mov
fdivrs
int3
sbb
cld
xorl
pop
inc
and
outsb
mov
scas
iret
jle
push
daa
cmp
xor
lods
movl
rol
movsl
lds
push
aas
sub
mov
out
shlb
push
das
lea
shrb
scas
pop
fstl
xchg
loopne
stos
adc
ret
inc
cli
adc
adc
dec
xchg
fnstenv
sub
xor
ret
pop
sar
pop
loopne
or
dec
sahf
push
adc
aam
ja
test
push
pop
inc
xchg
inc
mov
add
sub
fwait
pop
mov
and
and
xchg
and
inc
lds
jo
iret
mov
xlat
inc
and
pop
in
lds
stc
cmp
push
mov
out
aas
sahf
mov
inc
push
js
js
cmp
jo
xor
std
rorb
in
mov
add
mov
cs
enter
jge
push
push
dec
jp
ja
ljmp
in
dec
mov
push
inc
cmp
pop
cs
jg
mov
movsl
lret
pop
push
pop
outsb
call
xor
insl
mov
mov
lcall
adc
imul
or
data16
mov
xchg
jle
fmuls
movsl
jns,pn
cwtl
adc
in
cs
dec
and
jbe
fstpt
xchg
daa
xor
cld
inc
mov
outsb
ror
es
nop
insl
lods
cmpb
int
push
xchg
inc
mov
xlat
in
mov
loopne
cmp
push
pop
adc
or
repz
cld
inc
into
sbb
insb
inc
push
xchg
jno
mov
push
out
cmp
jns
xor
push
jns
xor
dec
sbb
jmp
push
pop
subb
pop
dec
adc
jbe
cmpsb
pop
cli
fadds
test
cmc
sub
sarl
imul
adc
aad
pop
cmp
sbbl
in
std
lcall
xor
sbb
sti
pop
stos
lds
mov
xor
mov
pusha
imul
jne
xor
sub
stc
xchg
aad
sbb
bound
scas
mov
and
dec
jbe
addl
mov
mov
jnp
inc
add
mov
movsb
icebp
mov
lahf
inc
lods
aam
adc
xchg
sub
and
hlt
mov
xchg
adc
rcrl
fimuls
loope
add
or
inc
repnz
aas
lcall
outsl
push
inc
push
in
fnstsw
sub
aaa
data16
out
sbb
sahf
or
sbb
mov
int3
aas
xchg
inc
push
jnp
jb
out
push
cmp
fistpll
dec
or
sbb
fsubrl
xor
insb
inc
mov
xchg
mov
sti
ret
xchg
sub
sbb
and
jle
xor
mov
xchg
cmp
je
xchg
pop
fdivs
jne
or
xor
bound
or
int3
aas
xchg
lret
aaa
inc
mov
xchg
test
ss
addb
hlt
test
arpl
xchg
jle
out
filds
adc
push
mov
andb
jb
add
lods
dec
lods
dec
and
mov
pop
pop
mov
in
dec
jnp
xlat
mov
sub
push
xor
and
jns
cmc
in
adc
sbb
add
sarb
pop
cmc
xor
adc
cmpsl
push
or
scas
lahf
or
andl
mov
fcmovbe
outsl
and
jb
adcl
xchg
mov
adc
fistpl
push
pop
pop
add
mov
fdivrp
scas
cmp
adc
and
cld
pminsw
xorl
cmp
xchg
mov
stos
add
fisubl
and
sub
xchg
cs
rcll
push
mov
psubsw
sbb
mov
mov
fwait
jecxz
or
fcompl
pusha
sbb
bound
cmp
or
pop
xchg
xchg
inc
cmp
stos
lret
fdivl
push
addr16
cld
mov
mov
arpl
sbb
xchg
sbb
addr16
clc
jp
push
lret
sub
pop
xchg
mov
cmpl
jae
in
ljmp
mov
cmp
loope
fwait
adc
cs
add
in
push
pop
jne
or
cmpsl
sti
leave
pop
inc
mov
xor
mov
add
lahf
jl
dec
cmp
lock
dec
ror
cmp
les
push
in
outsl
inc
lcall
outsl
mov
adc
stos
adc
mov
fwait
pop
es
cli
leave
xchg
adc
lretw
xchg
neg
pop
fists
loopne
mov
push
mov
or
lret
ljmp
hlt
xor
push
pop
aad
mov
xor
xchg
cmp
sti
inc
inc
cmp
pop
daa
sahf
fs
or
xlat
fstl
cmp
xor
dec
fucompp
sub
out
mov
sbb
jecxz
mov
mov
xchg
ds
ret
enter
push
mov
loope
cld
and
stos
mov
scas
cli
jge
mov
sar
xor
mov
push
pop
addr16
leave
jno
outsl
xor
ret
jo
fdiv
jge
insl
dec
insl
dec
inc
mov
lock
mov
leave
pop
cmp
lea
ja
jle
mov
lock
adc
sub
sub
mov
dec
mov
mov
push
das
mov
dec
pop
dec
add
push
repz
mov
cmp
push
add
cmp
scas
mov
mov
sub
mov
iret
daa
inc
incl
sbb
sbb
stos
fucomp
cmc
les
bound
pop
mov
loop
cmp
xor
adc
sub
adc
pop
outsl
test
push
sub
dec
inc
out
xchg
add
out
mov
mov
aad
dec
sub
pop
push
out
mov
xor
lock
push
stos
sub
mov
jg
inc
call
pop
andb
cwtl
adc
std
ror
pop
sbb
dec
xchg
xchg
add
ret
adc
xchg
and
cmp
adc
movsb
frstor
jmp
jmp
loop
add
lret
ret
fnstcw
out
dec
cld
inc
fsubp
sahf
int3
sub
ss
push
es
dec
loope
mov
out
dec
xorb
popa
cmp
xchg
mov
lret
pusha
das
sarb
xchg
pop
aas
mov
mov
stos
push
fistpl
inc
test
xor
std
les
lret
jnp
sarl
cmc
test
adc
push
mov
shll
iret
push
dec
mov
sbb
loop
dec
adc
lahf
inc
pop
repnz
pop
leave
stos
repz
lret
inc
fcoml
push
fdivrl
push
dec
int
push
fisubrs
and
push
dec
in
mov
jns
sbb
and
neg
or
outsl
into
push
pop
dec
loope
pop
cwtl
jle,pn
mov
fwait
stc
inc
sbb
gs
fidivl
and
pop
or
into
adc
ds
push
rorb
xchg
inc
fadds
push
push
mov
sub
cmp
in
inc
mov
in
dec
lahf
out
mov
loopne
push
test
mov
cli
sbb
mov
push
dec
add
testb
pop
mov
rol
imul
and
lea
mov
dec
adc
out
mov
loope
ret
push
and
mov
movb
mov
xor
pop
jl
xor
dec
gs
jo
repz
mov
cwtl
jle
dec
lods
or
test
loop
mov
mov
push
jno
push
mov
sbb
jge
cmc
test
adc
hlt
ds
jmp
lret
lods
or
add
ljmp
fidivrs
adcb
and
cmp
and
and
and
dec
xchg
pop
xorw
ja
iret
negl
lea
ficoms
jl
lret
je
mov
mov
add
pop
cmp
mov
mov
dec
mov
mov
adc
add
pop
sub
int3
std
jecxz
push
jo
push
push
sahf
adc
mov
popa
dec
dec
popa
cld
dec
rcrl
jmp
add
jnp
pushf
xchg
jns
cmc
add
cmpb
lcall
pop
stc
aaa
in
test
jne
sub
mov
add
mov
test
addb
lcall
jno
or
hlt
push
or
xchg
xor
fs
scas
out
xor
dec
ret
push
xchg
cmp
icebp
push
inc
aaa
xchg
cmp
adc
aaa
sub
pop
mov
push
ret
and
scas
cld
shrl
fidivrl
ret
sub
aam
dec
adc
notb
test
and
sahf
fists
mov
mov
xor
les
sbb
fs
dec
mov
jnp
test
xor
push
hlt
insb
test
push
inc
fildll
flds
dec
fidivs
pop
es
push
inc
xchg
imul
inc
cli
out
mov
jb
call
lret
add
insb
pop
add
fisubs
add
movsb
sbb
and
mov
and
inc
lods
or
sub
mov
iret
dec
idiv
xchg
sub
scas
jb
pop
inc
adc
pop
in
xorl
icebp
sub
ss
in
popf
add
lret
pop
movsl
pop
mov
cwtl
rclb
pop
stos
rclb
jmp
dec
push
sbb
shlb
xchg
pop
xlat
roll
or
xchg
jb
xor
lods
cmpsl
js
and
daa
lret
sbb
in
movsl
sbb
mov
int3
mov
mov
dec
jb
rcrl
movsb
sahf
sub
sub
enter
adc
roll
inc
xor
adc
mov
mov
and
mov
fwait
pop
aam
insb
and
cwtl
jb
jae
xchg
aad
enter
or
sahf
inc
loop
in
fsubr
repz
pop
into
sbb
or
arpl
lods
loop,pn
xchg
jp
sti
jle
cmc
lea
inc
insl
jl
cli
xchg
pop
neg
int3
or
push
fwait
push
sbbb
repnz
inc
rorl
faddl
pop
pop
dec
or
and
mov
stos
mov
or
cmp
xor
pop
daa
add
aaa
push
sub
movsb
inc
or
test
enter
in
mov
inc
jge
mov
xchg
stos
les
mov
mov
sbb
and
loope
loopne
incl
fs
push
add
rolb
cmpb
test
push
sub
ljmp
push
dec
sbb
dec
mov
sbb
push
and
push
adc
sub
insb
in
xor
js
cmpsb
sbb
into
sbb
daa
rclb
pop
rcrl
mov
add
rsm
adc
and
clc
dec
push
fmull
repnz
stos
test
pusha
cmp
das
jb
nop
stos
jne
hlt
jae
adc
lods
cs
mov
fmuls
xchg
push
adc
rcrl
or
inc
test
and
fbld
rcl
pop
xor
loope
and
ja
dec
lods
cli
and
inc
lret
rcrl
mov
add
inc
mov
or
ds
push
and
cmp
scas
push
aam
xor
iret
mov
aad
adc
adc
mov
fstp
jns
pop
add
mov
rclb
jge
and
test
ds
or
push
xor
enter
ja
sub
pop
jb
push
mov
lods
or
fnsave
ljmp
xchg
mov
in
cld
and
sbb
stos
lret
test
shll
push
inc
adc
inc
mov
pop
gs
push
sbb
and
shll
repz
inc
mov
adc
cmp
sub
int3
sub
arpl
fincstp
sub
andb
shrl
ds
inc
pop
pop
loope
movl
ret
stc
movsl
hlt
sti
mov
jmp
jle
add
add
imul
andl
push
into
repz
in
mull
push
mov
daa
sahf
mov
divl
dec
mov
cld
mov
stc
pop
push
jo
ja
cli
adcb
outsl
sbb
pop
in
les
outsb
ret
pop
push
mov
inc
or
inc
out
inc
gs
leave
nop
jg
test
xchg
insb
mov
es
xor
addb
les
lds
push
mov
mov
pop
cmpb
xchg
inc
sub
jmp
xor
push
leave
xorl
dec
jmp
adc
dec
mov
icebp
cmp
lahf
jno
cmp
xchg
xchg
sub
dec
add
xchg
xor
ljmp
movb
popw
cld
movsb
jp
xor
test
jle
and
mov
loopne
sub
out
and
push
call
fwait
sbb
call
aaa
xor
push
mov
fcoml
pop
aaa
enter
inc
cmpb
scas
dec
jbe
push
inc
jmp
pop
in
fbstp
es
out
jmp
mov
mov
dec
nop
leave
xchg
popf
mov
mov
arpl
adc
fistpll
les
sub
fsubrp
outsb
sbb
pop
test
or
or
inc
xchg
jp
push
lcall
add
sbb
test
aam
inc
jg
sbb
test
and
inc
stos
fisttpl
movsl
mov
ds
inc
out
push
jnp
mov
in
mov
mov
stc
call
aam
sub
mov
inc
push
sub
xchg
scas
fisubrl
sub
and
cltd
xchg
lcall
lea
lods
js
add
subl
xchg
sti
repnz
mov
mov
outsl
pop
or
jge
sbb
imul
mov
test
jp
adc
das
ljmp
push
mov
jo
adc
call
std
mov
lock
pop
mov
cmp
out
dec
inc
add
cmp
roll
dec
out
int3
push
pushf
push
sbb
mov
add
movsb
and
add
sub
pop
insb
outsb
fildl
lods
pop
add
mov
inc
icebp
jg
inc
leave
aaa
roll
push
xor
adc
lret
repnz
mov
mov
inc
sbb
jb
add
jns
mull
adc
fisttpll
fstl
imul
lret
fstpl
out
js
sarb
into
js
bound
pop
or
fisttpl
mov
add
sub
into
jge
pop
lret
cli
mov
add
push
aam
jnp
inc
jmp
and
in
lret
repz
mov
add
outsl
cltd
jnp
outsl
cmc
shrb
aaa
sbb
xor
add
push
push
rorl
lods
mov
mov
jbe
jne
xor
sbb
in
push
xchg
xor
rcrl
push
xor
xchg
les
fdivs
mov
jo
sub
jno
lret
stos
scas
xchg
sub
ds
pop
arpl
cmp
inc
iret
or
sub
and
loopne
sub
xor
mov
out
inc
mov
sub
and
jmp
jmp
imul
aad
inc
fstpt
inc
int3
adc
ror
inc
ret
hlt
cmp
ret
cmc
sti
sub
mov
mov
inc
in
xchg
faddl
mov
xchg
inc
inc
push
in
sahf
shll
fisubs
negb
into
popa
mov
xchg
aas
adc
xchg
shll
jae
fimull
aad
loopne
inc
sahf
pop
jae
aas
enter
ss
mov
mov
fisttps
push
jne
cmpsb
js
sub
push
lahf
bound
push
jns
lods
jg
lea
cltd
and
lds
push
push
out
jb
fprem
jl
push
cld
fdivs
mov
push
clc
push
ret
js
adc
add
loope
call
insb
adc
rcrb
cmp
push
jle
xlat
in
lods
pop
sub
mov
out
enter
mov
out
loope
sarb
shll
sbb
test
lahf
scas
aaa
jge
mov
filds
sub
mov
jl
orl
mov
adc
add
xchg
das
jecxz
les
pushf
cmp
ud0
call
hlt
lcall
scas
xchg
daa
fisubrs
incl
scas
fisttps
and
push
enter
shll
and
or
pop
popa
ss
scas
and
ffree
aam
jmp
mov
movsl
shrb
mov
fsubp
dec
cmpb
push
and
gs
pop
cli
inc
pop
not
int3
cmp
fisubrs
mov
stc
imul
pop
push
sbb
xchg
sbb
pop
jbe
mov
xlat
mov
test
mov
dec
xor
fcoml
add
mov
jg
fadd
xor
sbb
fwait
push
cmp
negb
push
mov
dec
int
shrb
pusha
xchg
sbb
inc
cmp
movsb
mov
add
out
adc
xor
and
psraw
cmp
pop
push
insb
pop
negb
xchg
ds
jmp
push
and
insb
inc
subb
daa
cmp
dec
add
pop
daa
int3
mov
lods
jmp
xor
pop
lret
mov
les
jge
sbbl
bound
ja
dec
mov
shlb
arpl
test
mov
fdivrs
icebp
orb
mov
pop
in
bound
scas
and
adc
pop
dec
and
movsb
xor
sub
leave
fstpt
out
in
mov
movsl
dec
adc
mov
jmp
stc
out
loopne
jbe
mov
repz
mov
iret
imul
jo
aas
cmp
sbb
mov
pop
or
xor
lret
jno
out
imul
inc
mov
loop
loope
insb
or
out
push
mov
pop
and
data16
pusha
movsl
movsb
dec
vmovss
adc
mov
pop
stc
inc
je
dec
addl
inc
scas
mov
lds
movsl
out
mulb
arpl
mov
adc
ljmp
sub
mov
fistpll
sub
inc
and
cmp
repz
lock
jno
dec
daa
cmp
or
sbb
jno
xchg
cmp
jb
nop
mov
fs
in
jns
fwait
movsb
mov
sub
test
jb
in
dec
inc
ret
sub
inc
sbb
add
xchg
add
fimull
arpl
btr
jg
mov
jg
dec
scas
dec
clc
add
es
sbb
cmpsb
xlat
fcmovb
les
jmp
ja
aad
repz
sub
sub
xor
inc
mov
adcb
add
pop
dec
mov
loop
in
cvtps2pi
xor
outsl
add
or
xlat
and
clc
stos
cld
sbb
out
sub
test
dec
pop
inc
filds
popa
pop
movsl
mov
cwtl
cld
push
imul
xchg
arpl
jecxz
lret
cmpsb
es
xlat
fldl
mov
shl
mov
or
test
jns
cmc
jb
dec
dec
mov
test
or
test
rolb
lods
aas
std
mov
xchg
inc
cmpsl
lds
xor
das
xor
aaa
mov
popf
fsub
ss
xor
dec
push
aaa
mov
or
sub
addb
movsl
jmp
pop
es
pop
inc
and
ds
daa
or
sub
push
pop
out
imul
mov
shl
in
inc
mov
pop
pop
adc
out
roll
xchg
sbb
xchg
push
outsb
std
push
lcall
add
fsubr
pushf
add
jne
out
in
mulb
sbb
data16
test
lahf
pop
popa
cld
add
mov
sub
ret
ljmp
repz
pusha
xlat
inc
pop
aam
ljmp
inc
loopne
ret
dec
jge
pop
dec
insb
out
scas
in
or
push
cmp
or
jb
add
outsl
mov
jns
jle
jae
or
pop
or
fildl
push
sub
rclb
ret
jne
mov
jmp
int3
pop
sbb
dec
rcll
sbb
int
xchg
cmpsb
push
mov
fidivl
mov
jmp
sbb
adc
mov
lock
push
out
test
std
mov
dec
aaa
outsb
enter
push
lcall
inc
in
movsb
mov
xchg
aam
cmc
jecxz
pop
sbb
enter
and
pop
ret
gs
pop
aaa
js
add
je
xor
adc
imul
jp
int
jle
jno
adc
xchg
lcall
mov
clc
mov
pop
and
mov
cmc
pop
xor
movsb
pusha
push
mov
push
and
icebp
test
leave
adc
or
es
sti
mov
leave
mov
xlat
push
leave
in
lahf
scas
jno
loope
cltd
and
lea
ja
stos
jecxz
daa
xor
jno
fcmovbe
cmovns
cli
xchg
das
les
jo
push
xor
xchg
push
cmp
out
in
addl
test
adc
add
pop
sbbl
push
cld
les
sbb
or
push
mov
jmp
sub
xchg
or
imul
in
mov
fmull
daa
xor
lea
pop
cmp
add
or
sub
pop
adc
xlat
out
rcll
push
iret
ljmp
aam
ror
ret
xchg
mov
cld
pop
xor
or
mov
mov
cmp
aad
clc
sub
push
mov
or
repnz
mov
pop
in
es
mov
sub
inc
je
daa
sbb
add
sub
sti
xchg
pop
add
insl
fwait
test
push
pop
jns
in
mov
lock
mov
push
cmp
push
inc
mov
adc
aam
add
add
sti
rcr
in
test
lahf
adc
movsb
and
xor
mov
dec
cmp
or
testl
push
mov
imul
int
jnp
les
xchg
fwait
sub
lcall
popf
adc
sbb
addr16
out
pop
xchg
cmp
add
xchg
out
lret
iret
sbb
add
mov
das
and
and
xchg
icebp
fucomp
out
into
in
sub
or
popa
fwait
xlat
dec
cmc
outsl
ret
pop
jns
loope
xchg
fmuls
movsl
fcoml
sbb
push
xor
mov
cmp
jmp
cmp
std
jb
loop
insl
mov
jae
pop
fdivrl
xchg
movsl
cmc
xor
fwait
pcmpgtd
pop
repz
add
call
push
jl
sub
push
inc
and
ds
jmp
sub
xchg
rep
ret
mov
nop
mov
test
xchg
xchg
cld
je
popa
dec
lret
cmpl
sbb
add
fcoml
sub
or
pop
jg
and
jp
sub
mov
stos
mov
mov
adc
adc
ja
jmp
pop
ljmp
mov
xchg
push
inc
leave
arpl
dec
pop
adc
arpl
pop
popa
cwtl
xchg
cli
lds
inc
aas
and
jmp
xchg
repnz
and
mov
adc
push
jo
lret
dec
out
inc
push
test
sbb
lds
push
mov
pushf
dec
out
adcl
es
xchg
in
stc
insl
push
stc
push
test
sub
out
cs
or
pusha
push
pusha
rcll
pcmpeqw
pop
aad
fildll
std
inc
shll
adc
ss
call
es
ffree
pushf
mov
add
add
adc
xchg
push
outsl
or
insb
jp
jmp
xchg
lahf
outsb
mov
pop
mov
mov
in
int
cli
jo
sbb
test
mov
push
into
lret
int3
pop
xor
jle
mov
sahf
int
push
loop
out
mov
cmp
add
lea
dec
cmp
sbb
dec
push
lcall
mov
push
scas
cs
mov
pop
es
add
movsl
pop
lcall
xor
cltd
dec
dec
sahf
mov
add
xor
pop
or
sbb
add
push
adc
iret
call
out
shl
inc
popa
leave
adc
in
pop
lret
mov
fdivrl
ret
pop
addr16
arpl
shll
idiv
xchg
mov
lcall
out
inc
aas
fst
fwait
adc
add
mov
xlat
mov
lahf
mov
sbb
pop
arpl
or
adc
push
sahf
mov
adc
jecxz
xchg
pop
mov
xor
dec
cmp
mov
movsl
in
icebp
iret
insl
fsubrl
clc
pop
inc
out
stc
jae
jnp
pop
test
sbb
inc
ja
fcmove
dec
cmp
jns
out
sbb
aaa
int3
jl
sti
cmp
inc
xchg
sub
out
out
push
mov
mov
pop
notb
adc
pop
movsb
out
jge
mov
shr
pop
aaa
jnp
dec
mov
das
aam
jmp
xor
testl
insb
gs
jo
imul
jp
jecxz
loopne
xchg
jg
jmp
pusha
icebp
dec
int
mov
mov
cld
xchg
or
stc
pop
ja
push
push
inc
mov
rolb
in
sbbl
xchg
push
mov
mov
mov
inc
mov
push
sub
jmp
lea
fwait
mov
add
test
sbbl
iret
outsb
gs
popf
cs
pop
and
mov
inc
or
ljmp
add
adc
pop
lret
xchg
dec
std
movsb
pop
sarl
mov
faddl
mov
loop
mov
into
mov
jle
jmp
and
pop
loopne
sub
rcl
in
mov
fwait
addr16
jbe
sub
add
push
pop
fisttpll
cs
lea
lret
jno
mov
dec
xchg
inc
orl
pop
or
cmpsb
sub
mov
movsl
ds
in
xchg
or
and
add
mov
xchg
ja
inc
imulb
pop
stos
lea
pop
pop
sub
addr16
nop
or
nop
cmp
data16
dec
loop
mov
enter
mov
int3
out
frstor
mov
dec
into
es
sar
push
or
stc
mov
bound
pop
sub
pop
in
adc
jg
iret
call
dec
ja
outsb
push
sbb
jp
dec
sub
mov
sahf
sbb
mov
scas
jl
inc
ret
xorb
jae
lds
std
cltd
pop
add
aaa
lret
into
sub
hlt
out
jg
and
aas
sbb
popf
adc
xor
inc
fisubrs
push
cmp
js
jns
cmpsl
aad
movsb
aam
adcb
xlat
mov
pop
add
mov
scas
and
or
cmp
repz
daa
cli
mov
push
cmp
xor
test
mov
cmpsl
mov
imul
int
push
imul
add
mov
hlt
cmp
bound
sub
js
inc
jle
or
jmp
inc
xchg
jecxz
sbb
mov
and
nop
xlat
stc
mov
pop
inc
adcl
jo
sbb
mov
jnp
and
cld
xchg
push
daa
adc
arpl
mov
push
add
test
cmp
cwtl
mov
aas
std
add
js
and
mov
or
mov
sub
ss
insl
or
roll
adc
inc
xlat
jl
incb
mov
lds
pop
adc
nop
outsl
xchg
in
arpl
fidivrs
sbb
ja
and
push
cmp
jle
mov
inc
das
je
movd
clc
cmp
xchg
cmp
add
jbe
sbb
jno
sbb
push
sbb
std
jge
imul
xor
sbb
adc
pop
mov
mov
cli
sbb
inc
mov
push
inc
jl
inc
sbb
mov
adcb
push
aam
notb
pop
lods
mov
or
mov
ret
test
jg
cmpsb
mov
xchg
std
orl
push
sub
or
cmp
or
movsb
pop
or
mov
mov
pop
sarb
or
aad
lret
pop
nop
mov
cmp
push
pop
adc
fldcw
and
xchg
mov
mov
or
movsl
aaa
je
mov
xlat
dec
stos
add
iret
xor
push
dec
push
pushf
fnsave
pusha
out
arpl
push
cmp
pusha
cmpb
push
xchg
inc
lret
jle
jecxz
mov
cmc
push
jns
jnp
sbb
ljmp
sbb
add
addr16
dec
mov
scas
mov
pushf
pop
roll
xlat
xor
jae
loopne
pusha
cli
push
dec
fldl
xor
fldt
jmp
sbb
push
clc
in
in
loop
mov
rorb
iret
mov
call
stos
repnz
xlat
and
in
scas
cmp
push
xor
xchg
out
inc
xchg
inc
insl
xor
and
stos
mov
shll
mov
pop
jbe
sub
setno
or
sbb
aad
jno
arpl
out
in
lret
aas
pushf
dec
and
hlt
sahf
fucompp
imul
jge
in
xor
adc
in
mov
aad
pop
rcrb
mov
add
cwtl
rorb
scas
hlt
jne
jecxz
add
dec
aam
push
jp
repnz
push
xor
push
xor
adc
test
xchg
push
lods
pop
xchg
dec
jge
mov
pusha
iret
sub
iret
cmp
jno
pop
push
pop
cmp
sub
pushl
and
and
xchg
dec
cmpsb
shl
aas
cmp
push
sub
repnz
inc
xor
test
mov
cmpsb
push
in
leave
cmp
lret
popa
clc
das
jbe
xchg
mov
dec
xchg
and
rorl
movsl
jb
orl
jb
jo
pop
and
repz
jae
imulb
addr16
lahf
pop
imulb
stos
adc
scas
les
test
inc
jns
mov
sub
push
xchg
inc
and
mov
leave
sub
sub
into
xchg
cmc
cmp
xchg
cli
jns
test
cmpsl
and
clc
and
popl
in
push
gs
jg
cwtl
pop
ss
push
fisttpl
lock
xor
inc
mov
mov
push
mov
or
mov
xor
sub
xchg
cmp
push
mov
dec
or
outsl
out
mov
cmpsb
cs
cmpsb
bound
fstps
pusha
repnz
aaa
mov
imul
jmp
jb
jl
push
mov
inc
cmpsb
push
int3
fwait
cmp
push
std
inc
fildl
cli
fxch
call
inc
adc
lods
mov
and
xchg
movsl
mov
adc
ss
sub
push
mov
mov
in
out
adc
or
aad
xchg
push
pushl
ljmp
sub
insb
repnz
out
inc
imul
das
rcll
pop
adc
or
rcll
sbb
sbb
adc
xor
dec
jecxz
rclb
adc
add
adc
ja
xchg
inc
ret
push
cltd
hlt
aas
rorl
xor
sub
fisubrs
test
in
loope
hlt
arpl
push
repz
les
std
cmpsl
and
push
add
jle
dec
dec
je
sbb
dec
or
in
das
push
lds
out
iret
shrl
mov
lock
lret
fwait
mov
inc
enter
jl
sub
push
les
or
ret
fdivr
sub
arpl
xlat
call
cmp
cmpsl
out
xchg
and
dec
rol
and
addb
pop
mov
dec
add
mov
sbb
test
in
push
ljmp
fwait
cmpb
xor
push
nopl
call
sub
pusha
fdivrl
gs
jae
cmpsl
xor
adc
icebp
inc
roll
popa
sub
jns
inc
in
inc
and
mov
pop
add
pop
add
mov
sbb
jecxz
xchg
sbb
mov
icebp
xor
jo
mov
jl
pop
icebp
mov
insl
mov
jne
add
dec
jge
dec
jge
mov
jl
mov
sbbl
mov
xchg
clc
loopne
mov
gs
fdivs
fcoms
cmp
sbb
fdiv
cmp
push
push
div
sar
sbb
adc
scas
mov
int3
jae
mov
repnz
adc
sub
or
and
pusha
mov
sub
mov
mov
push
xchg
into
add
dec
inc
adc
or
out
jbe
test
xor
sbb
sbb
xchg
imul
add
fnstenv
push
stos
xchg
hlt
imul
dec
xchg
pop
mov
mov
sbb
sti
out
or
fldt
pop
rcl
xor
fimull
rcrb
ret
ret
mov
mov
call
mov
cmp
add
out
push
jno
out
and
repz
inc
sub
lock
dec
pusha
clc
loop
out
xor
das
out
push
mov
push
and
sub
ja
push
in
xor
in
shl
sub
push
inc
dec
lcall
ja
pop
pop
pop
push
fdivrs
pop
sub
jmp
pusha
xchg
jle
or
cld
adc
jmp
pop
out
fwait
mov
mov
sbb
dec
fildl
imul
pushf
pop
ljmp
mov
test
jbe
xchg
sbb
enter
jne
movsl
cwtl
test
movsl
leave
outsb
loop
int3
inc
push
mov
call
xor
mov
and
dec
mov
fs
mov
fdivrs
mov
jge
popf
call
cmp
and
mov
dec
sub
mov
mov
and
xchg
ficompl
icebp
push
mov
push
sti
sbb
mov
pop
mov
mov
cmpl
cmp
mov
sub
stos
adc
fisubs
push
js
push
lock
aas
nop
xor
stos
inc
aas
jbe
mov
stos
pop
fxch
fwait
shrb
fstpt
iret
cmp
add
divl
mov
or
cmpsb
cmp
arpl
sbb
lret
or
xor
ss
mov
inc
fdivp
sbbb
pop
aam
iret
jle
mov
add
addr16
mov
push
sbb
mov
scas
mov
and
inc
add
popa
add
sub
mov
pusha
and
mov
add
xor
mov
sbb
sbb
call
or
adc
xor
movhps
mov
inc
data16
stos
push
loopne
xlat
inc
ja
repnz
mov
jge
fcmovu
dec
xor
mov
iret
xchg
hlt
mov
mov
push
mov
ss
ret
jae
data16
inc
pusha
mov
push
add
repz
ret
xor
insl
inc
cmpl
push
jg
int
mov
addl
sbb
or
adc
filds
xor
lret
negb
add
push
push
mov
mov
add
jnp
pop
add
fidivrs
pop
and
in
lock
mov
shlb
mov
hlt
pop
sbb
shrb
pop
out
ret
sub
mov
pop
mov
loop
pop
mov
iret
out
push
andb
stos
andb
clc
negl
fldcw
imul
cld
add
sub
adc
mov
jns
xchg
mov
fisubs
inc
pxor
shr
sbb
inc
mov
loopne
xor
and
repz
mov
mov
push
jg
rolb
lcall
xor
outsl
loop
adc
sahf
add
adc
mov
fimuls
adc
mov
mov
lea
push
push
jno
add
ds
or
mov
shrb
cltd
pop
shl
lds
sarl
repz
sbb
sbb
hlt
sub
and
dec
xor
dec
lret
rcr
test
int
lret
aas
test
adc
cmp
repz
adc
push
sbbb
jge
cmpsb
mov
sbb
cs
jbe
xlat
insl
adc
lea
je
out
popl
jmp
in
mov
movsl
adc
dec
cld
call
xchg
idivb
dec
adc
outsl
cli
loopne
lods
mov
enter
icebp
adc
dec
mov
add
xchg
pop
sub
push
jno
cmp
mov
iret
sbb
outsl
push
mov
mov
xor
and
negl
data16
dec
sbb
or
sub
lea
add
mov
sub
or
repz
xchg
orb
sub
sarb
push
fdivrl
add
mov
jnp
mov
sbb
repnz
pop
xadd
ss
cmp
push
mov
daa
mov
mov
inc
cltd
mov
sbb
iret
mov
lea
movsb
aam
sbb
xchg
ror
mov
in
xchg
in
enter
mov
shll
cmp
mov
pushf
inc
sub
aam
sub
cmp
mov
pop
dec
loop
push
inc
nop
sti
call
add
pop
push
in
repnz
add
out
push
loope
test
sbb
fisubrl
popf
sub
popa
or
aad
shll
test
pop
push
cld
out
dec
cmpsl
loopne
cltd
jno
shrb
ds
and
mov
std
fistpl
stos
aas
adc
test
and
pop
mov
icebp
push
mov
in
cmp
outsl
mov
cmp
adc
xchg
iret
push
inc
push
dec
inc
into
push
fcoml
and
sbb
loopne
in
add
mov
jae
sbb
incl
daa
ljmp
into
sbb
stos
nop
pop
popf
sbb
in
imul
rolb
push
or
and
xchg
inc
imul
push
or
jmp
shll
push
int3
outsl
into
xlat
fidivs
xchg
scas
sub
rorl
mov
hlt
fs
mov
adc
popa
into
mov
out
dec
shll
jns
jne
imul
lret
cltd
cmp
mov
and
rol
loope
shrl
into
mov
pop
call
cmpsl
cmpb
daa
add
shr
sahf
and
xor
test
cmp
loope
jl
loope
add
loopne
add
or
adc
mov
in
movsb
test
or
pop
out
outsb
fldt
dec
cmp
loop
fcoml
pop
ret
sub
or
cmp
push
neg
stc
inc
aad
in
fsubs
dec
imul
xchg
loope
add
adc
mov
push
rolb
xchg
lcall
mov
mov
lret
arpl
push
fidivl
pushf
pop
push
sbb
sbb
arpl
adc
push
mov
nop
jae
aas
call
xchg
xor
insl
fs
fimuls
or
dec
sub
sbb
mov
sub
ret
inc
cmp
enter
jne
lahf
sbb
inc
jbe
dec
in
inc
outsl
sbb
fwait
lahf
xchg
and
pop
or
popa
addr16
lods
in
cmp
jno
lcall
fwait
leave
test
mov
lods
imul
aas
and
mov
arpl
ficompl
repnz
lcall
jmp
jle
mov
sbb
cld
pusha
push
xchg
push
sbbl
xchg
sub
fsubrl
dec
fs
imul
pop
cmp
aaa
push
pop
xchg
push
or
mov
loop
out
jo
gs
xor
xor
pop
testb
stc
mov
or
adc
fcomps
stos
ja
mov
sbb
nop
xchg
mov
push
xchg
add
das
pop
mov
or
iret
jno
mov
out
movb
mov
dec
and
in
aas
iret
repz
inc
outsb
jmp
mov
sbb
mov
aas
mov
push
stos
add
js
cmp
cmp
inc
insl
mul
popf
adc
popf
pop
test
lods
push
bound
stos
sub
adc
push
fsts
sub
xchg
adc
mov
aaa
sbb
pop
es
cmpxchg
xchg
lret
jo
dec
nop
push
iret
cmpsl
jg
jmp
scas
insl
xor
lret
test
mov
sub
mov
add
lahf
xchg
outsl
adc
pop
repnz
ds
pushf
sbb
subl
sbb
or
fadd
lods
aam
jg
jne
xchg
mov
adc
mov
sbb
sub
inc
mov
test
out
jb
sti
insb
sub
popf
dec
inc
push
xor
aaa
mov
aas
mov
shll
imul
and
lods
pusha
inc
int
mov
es
dec
add
loopne
jns
or
mov
sub
icebp
aad
or
jp
and
popa
pop
pop
pop
dec
push
mov
jno
mov
loop
and
push
pop
js
adc
mov
xchg
push
daa
movsl
inc
inc
mov
and
push
sbb
xchg
fmull
dec
test
ja
xchg
add
xor
dec
adc
mov
std
push
dec
mov
pushf
xchg
jmp
dec
xchg
mov
cs
push
jg
sub
pop
in
sbb
mov
add
jbe
sbb
xlat
add
aam
fldl
pop
mov
dec
js
repnz
int
dec
mov
es
lock
add
test
inc
sub
sub
lret
lods
pop
jge
lret
pop
outsb
fnsave
sub
pop
js
lcall
scas
rolb
inc
es
sbb
pop
cmp
and
aad
mov
sbb
mov
or
push
insb
cltd
in
push
lret
lcall
testl
inc
xchg
or
or
loopne
iret
ja
jno
rcl
xor
adc
push
push
pop
lods
lods
negb
pop
lds
cmpsb
adc
call
mov
repz
in
adc
inc
push
and
or
repz
popa
into
xchg
mov
bound
std
shll
ret
push
roll
inc
push
sahf
xchg
cld
dec
sahf
cmpsl
int3
addr16
cld
pop
imull
inc
jp
and
sub
stos
mov
into
lods
add
xchg
pmullw
repz
lret
cmp
ret
lret
push
sahf
mov
sahf
cwtl
or
jb
push
xor
aad
mov
and
or
sbb
lcall
and
xchg
push
cmp
bound
nop
aad
shll
add
inc
inc
add
test
lret
adc
call
insl
adc
popa
xor
movsb
mov
lret
pop
mov
shlb
xor
jge
lret
cmpl
aaa
or
jb
mov
adc
mov
adc
sahf
in
xchg
xorl
add
jno
inc
jnp
mov
and
lods
lods
gs
leave
dec
mov
sbb
push
mov
iret
ret
je
sub
sti
ljmp
add
jmp
nop
push
nop
iret
jb
jg
push
imul
shll
int
nop
jbe
xor
push
sar
mov
mov
cwtl
xchg
mov
mov
nop
push
add
jo
scas
adc
adc
ljmp
xor
sub
aad
fnsave
orl
pop
pop
adc
test
adc
fdivrl
xlat
dec
cltd
das
pop
sub
stos
or
push
movsl
into
push
nop
add
imul
push
adc
mov
cmc
arpl
out
loopne
cld
lahf
jae
nop
popf
ja
xchg
or
mov
xlat
popa
dec
jl
insl
inc
fiaddl
daa
mov
mov
xchg
xchg
inc
inc
enter
xchg
cld
adc
push
fistps
cwtl
mov
ret
pushf
or
xor
cs
xchg
push
or
enter
jmp
in
sbb
int
and
cmp
lahf
subl
les
push
xor
mov
push
dec
push
js
mov
pop
ret
mov
xchg
int3
and
imul
scas
jbe
in
adc
divl
pop
out
push
jmp
pusha
shr
fwait
or
pop
popa
das
adc
leave
lods
jb
adc
pop
inc
xor
ret
je
imul
jo
mov
mov
xor
mov
ljmp
push
roll
push
pop
mov
pop
add
inc
or
ss
stos
xchg
push
sub
xchg
mov
cmpsl
jb
cltd
jmp
push
dec
jb
dec
mov
shlb
rcrb
pop
sbb
xchg
jno
stc
iret
sbb
fiadds
or
cmpsb
outsb
stos
repnz
pop
in
stc
and
lock
enter
cmp
mov
or
loopne
push
shrb
xor
jge
dec
and
xchg
aaa
shll
cmp
fs
push
add
decb
sub
pusha
jae
jno
xor
mov
jmp
add
xchg
in
mov
xorl
sub
in
outsl
test
fisubrl
rorl
pop
cli
jmp
scas
ds
stc
adc
pop
fs
test
lods
adc
inc
mov
sbb
cmp
xchg
fwait
mov
dec
mov
fldt
gs
or
inc
outsl
push
mov
jnp
cmp
int3
mov
push
adc
aam
xchg
jns
and
mov
mov
call
jecxz
xchg
cmp
sub
outsl
into
outsl
push
cmp
cltd
cmp
cmpsb
rcrl
push
repz
int3
cmp
fcmovne
sub
inc
jl
sub
dec
out
jecxz
cltd
adc
mov
dec
jbe
insb
mov
and
inc
loopne
dec
fisubrl
jbe
clc
icebp
pop
ss
rcrb
repnz
sbb
adc
mov
ja
xor
pop
pop
js
adc
popa
outsb
mov
movsb
adc
dec
xchg
push
mov
jns
or
std
sbb
aaa
jecxz
mov
loopne
fidivs
daa
or
fdivrl
xchg
out
sbb
xchg
jp
mov
or
dec
xor
outsl
outsb
test
ja
pusha
add
or
inc
cltd
mov
hlt
cmp
fsts
sub
out
mov
dec
push
pop
mov
enter
add
ja
mov
daa
inc
rcrl
enter
fwait
push
sub
push
inc
sbb
sti
or
pop
scas
sub
dec
xor
iret
cmpps
stos
cmp
adc
loop
lret
sub
dec
aaa
jmp
push
mov
data16
xchg
dec
lahf
mov
fists
nop
sahf
or
mov
jns
or
rep
jne
insl
sti
pop
cmpsb
aam
or
or
sbb
jl
push
sub
movsl
das
lea
xor
and
or
rolb
mov
iret
mov
cmp
push
test
xchg
les
mov
loope
push
mov
rolb
jg
adc
xor
mov
mov
pushf
push
push
sub
dec
pushf
inc
les
fs
enter
inc
outsl
hlt
inc
xchg
in
in
pop
mov
jl
call
mull
mov
or
outsb
xchg
inc
and
lea
paddd
mov
ss
sarb
mov
int
push
mov
ret
sub
leave
mov
daa
cltd
inc
outsb
push
and
sub
add
data16
ja
mov
lds
in
lea
in
jmp
sbb
repnz
jo
xchg
mov
sbbb
dec
jnp
decl
loop
jl
mov
dec
and
sbb
fbld
or
xor
std
loope
out
mov
lods
mov
adc
insl
cmp
xchg
push
jecxz
xor
sub
mov
mov
pop
test
push
inc
mov
lret
pop
cltd
xchg
push
shll
add
out
adc
cs
pop
movb
loope
dec
mov
push
jnp
inc
mov
or
lock
loope
push
clc
mov
push
ret
pushf
les
scas
mov
push
mov
stos
fnstenv
insb
divl
add
aaa
or
cmpsl
mov
mov
adc
mov
push
push
lret
movsl
or
mov
cmpsb
sti
inc
xchg
adc
pop
in
movsb
out
adc
cmpsl
mov
nop
orl
arpl
out
cmc
push
je
push
mov
lods
lcall
xchg
and
sbb
sbb
not
mov
add
jno
mov
jns
stos
adc
and
lret
sub
pop
shll
das
in
test
loop
popa
mov
mov
mov
imul
mov
insl
sbb
mov
ss
jg
das
add
and
insl
and
mov
hlt
jmp
adc
pusha
xchg
jge
insb
out
jg
adc
ja
repz
push
lea
nop
or
ret
scas
je
pop
and
sar
adc
or
cmpsl
out
jecxz
divb
push
rcll
outsb
cmp
lds
push
xchg
sub
xor
lods
xchg
push
test
xor
xor
cld
jle
sarb
daa
cmp
mov
fnstcw
les
in
mov
and
mov
arpl
mov
sub
das
inc
or
shl
xchg
pop
repz
out
push
and
leave
popa
repnz
xor
fmuls
ret
punpckhbw
push
adc
cmpsb
mov
mov
jge
rorb
mov
adc
cmp
xor
test
xor
addb
pushl
out
nop
sub
sti
pop
pop
mov
pushf
stc
pop
mov
stc
add
cli
shll
inc
stos
data16
adc
inc
sahf
scas
movsb
jo
dec
and
xor
lods
lret
insl
js
push
mov
or
rolb
bound
push
xor
jae
mov
pop
in
sub
cs
shl
mov
inc
xchg
stos
or
pop
adc
xor
out
inc
sbb
adcb
pop
mov
push
addr16
lock
add
inc
sub
xchg
or
sahf
popl
mov
fdivs
and
out
mov
lcall
inc
sbb
mov
insl
mov
movsb
out
jo
aam
mov
adc
pop
ds
jmp
ds
repz
test
arpl
fstl
mov
push
add
lock
or
mov
in
bound
push
adc
mov
cld
jle
inc
andl
add
jecxz
push
lret
enter
out
test
dec
xor
imul
jns
pop
mov
insb
adc
mov
mov
lock
int
cmp
sahf
push
lea
sub
ja
jno
adc
push
fdivrs
imul
pop
mov
sbb
xchg
adc
adc
adc
pop
sarw
cli
xor
lea
or
mov
dec
mov
xchg
or
dec
adc
rcrb
daa
pop
icebp
inc
pop
mov
int
xchg
daa
sub
ret
sub
cld
pop
adc
scas
jg
enter
testb
in
xor
imul
xchg
pop
aas
idivl
std
dec
rorl
mov
mov
mulb
push
push
and
push
in
jmp
sbb
mov
pop
jl
mov
test
dec
rorb
fwait
xchg
cmp
xor
pusha
ja
mov
cli
mov
jmp
mov
ljmp
xchg
xchg
pop
fnstcw
outsl
push
sbbl
cmpl
push
cld
jo
in
repnz
cmp
call
mov
inc
pop
sbb
aad
mov
mov
or
mov
leave
adc
out
pushf
sub
pushf
pop
out
rorl
sbb
cli
pop
jecxz
adc
cmp
shl
hlt
mov
and
out
gs
cmp
pop
xchg
add
aas
nop
mov
push
xor
lock
xor
pop
rclb
int3
lock
es
xchg
mov
fwait
mov
aaa
pop
loopne
sbb
mov
dec
fists
divl
cld
stc
cmp
inc
mov
add
mov
loop
mov
imull
pushf
adc
pop
mov
sbb
lods
sub
pop
pusha
push
int
scas
jnp
imul
cld
adc
and
sub
dec
jecxz
push
or
push
lret
inc
arpl
and
insl
jb
or
aam
mov
outsb
dec
loop
ss
dec
sbb
aas
fisubs
or
mov
or
lret
adc
and
inc
pop
ss
mov
fstpl
pop
push
pop
popa
cmp
hlt
sub
lcall
xchg
test
ret
inc
mov
pop
xchg
cwtl
lods
jnp
iret
cli
xchg
pop
sbb
inc
pusha
fs
imul
sbb
jae
mov
xchg
popa
data16
scas
jns
xor
andl
jnp
adc
sbb
leave
cmp
pop
sbb
xchg
push
pop
mov
jne
dec
lcall
sbb
mov
ret
sub
sbb
repz
fisttpll
pop
inc
xchg
shrl
and
aaa
mov
sbb
jmp
int
cmp
pop
iret
dec
lea
aad
dec
lods
pop
ret
nop
mov
imul
aaa
mov
hlt
adc
pandn
rorl
imul
and
adc
jg
rcll
ss
push
icebp
cltd
add
repz
rolb
xchg
pop
push
sub
stc
inc
mov
jno
jge
test
push
cmpsb
xlat
or
adc
enter
mov
xlat
xor
mov
popa
xor
ret
pop
stos
dec
push
pop
adc
pop
mov
js
or
dec
cmpsb
pop
push
addr16
sub
dec
dec
mov
bound
orb
pop
jae
or
sub
lock
stc
fiadds
jp
push
sub
add
dec
mov
std
inc
cmpsb
mov
xor
sbb
ret
jge
adc
mov
lret
stc
mov
xchg
iret
cmpsl
shll
hlt
inc
stc
dec
jl
out
xor
ljmp
dec
sahf
pop
mov
rolb
xchg
xor
repz
out
out
xor
repz
and
xor
jns
lods
jb
sbb
or
dec
in
sbb
mov
dec
stc
inc
jmp
cmpsl
mov
js
push
push
push
mov
pusha
jmp
jno
xor
sub
fs
pop
mov
sub
rclb
add
jle
addr16
inc
je
inc
mov
pop
cmc
xchg
xchg
adc
jecxz
mov
xchg
sbb
out
test
adc
test
add
or
out
ret
lods
in
xchg
push
push
imul
sub
repz
stos
out
aas
addr16
cmp
mov
loop
in
fimuls
in
xchg
mov
es
dec
cmpl
rol
jnp
push
lds
inc
mov
cmc
inc
xchg
fmuls
pop
popf
mov
xchg
lret
shl
daa
psubd
imul
adc
cs
add
mov
mov
or
pop
ficomps
movsl
stos
stc
shlb
xchg
dec
loop
adc
clc
or
pop
pop
jb
mov
int
in
inc
cmpb
mov
mov
shrb
push
inc
fsubrl
negl
iret
pop
outsl
aas
xlat
mov
adc
outsb
push
cmpb
push
mov
pop
sar
and
xlat
clc
dec
bt
sbb
jbe
frstor
lods
sarl
jmp
pop
cmp
inc
cmc
jae
lods
gs
push
or
push
cmp
dec
aas
jp
sbb
test
xor
jnp
lret
test
int3
stos
call
lods
and
sti
push
mov
jbe
outsb
sbb
notb
jae
add
mov
jl
xchg
xor
movl
testb
jns
shrb
pop
sub
and
ss
sbb
inc
xchg
sub
mov
jg
call
or
fisubrs
xchg
push
xchg
or
lods
or
dec
mov
dec
ljmp
fcoml
arpl
push
aam
lods
mov
xor
add
or
inc
mov
xor
adcl
pop
mov
insl
dec
call
add
mov
call
test
gs
je
xchg
pop
cmpsl
aad
nop
jo
dec
out
pop
fists
xlat
xorb
cwtl
push
scas
dec
dec
push
mov
mov
or
daa
sbb
mov
sbb
hlt
movsb
lods
ret
sbb
loopne
lret
push
mov
aaa
pushf
jno
push
enter
int
xor
cmp
dec
inc
icebp
sub
divl
in
mov
and
add
loopne
sbb
inc
je
stos
dec
jl
movsb
xor
cwtl
pushl
dec
mov
xor
cwtl
insb
dec
cld
dec
lahf
sbbl
cmp
sbb
jb
movsb
mov
mov
cmp
cmp
fs
stos
test
inc
dec
subb
mov
cmp
push
pop
xor
loopne
js
jge
inc
js
aas
lock
movsb
mov
mov
push
orl
aam
lods
cmpsl
jb
lret
addl
inc
add
adc
shl
divl
negl
push
popf
andl
xor
jl
push
ljmp
adc
hlt
pop
mov
mov
push
cmp
aaa
fimuls
or
ja
loope
mov
fisttps
movsl
xchg
adc
push
and
mov
in
icebp
jle
cmpsb
xor
dec
xor
xor
femms
fwait
inc
inc
dec
xor
insb
mov
adc
aam
mov
mov
lret
adc
imul
movsb
adc
lods
push
push
push
push
std
out
lret
adc
lods
push
xchg
imul
mov
and
icebp
pop
fidivrl
call
mov
cmc
pop
jbe
ret
xchg
cmp
pop
stos
xrstor
lret
dec
push
cmpsb
adc
jge
out
in
arpl
lret
push
lcall
les
fsub
mov
imul
jne
clc
sub
and
push
sti
jle
hlt
lock
rcrl
push
mov
jae
pop
gs
call
and
mov
lods
add
pop
mov
add
inc
jmp
in
mov
sub
fisttpl
jmp
adc
mov
xor
cmpl
and
jg
mov
into
cmpsb
mov
pop
sub
aam
mov
sbb
mov
out
cwtl
sbb
jbe
test
jnp
and
movsb
cmp
sbb
and
es
cmp
xchg
and
inc
adc
mov
or
jge
mull
shll
in
jbe
into
xor
mov
mov
xchg
xchg
sbb
bound
ljmp
push
iret
jbe
ljmp
shl
mov
jno
pop
jecxz
out
xchg
push
pop
iret
push
out
fsubl
push
in
add
cmpsb
divl
fildl
outsb
mov
adc
xor
arpl
pop
xor
into
mov
and
xor
adc
pusha
or
xchg
nop
pop
sbb
jp
test
movsb
dec
add
in
mov
enter
in
or
fcomps
sbb
gs
mov
clc
inc
test
mov
xchg
cli
and
and
outsl
adc
sbbl
fstpl
sbb
repnz
cmp
mov
outsb
fmull
mov
and
jne
jae
pop
cltd
div
sub
out
add
push
lods
xchg
push
inc
dec
and
xlat
pop
adc
data16
cli
rcl
fmuls
in
pop
adc
in
push
mov
adc
fwait
push
sub
cmp
adc
jge
mov
pop
sti
sbb
or
add
addr16
test
lock
fimuls
add
ret
dec
or
mov
xorl
sub
fs
or
cmp
or
mov
sbb
mov
mov
pop
xor
xchg
dec
ret
pop
jmp
or
cmpsb
out
push
icebp
sbb
mov
and
cmp
xchg
jb
cmpsl
in
push
aaa
dec
in
ljmp
stos
pop
pop
xchg
mov
insl
xor
jp
aad
push
mov
iret
mov
les
lea
cmp
mov
dec
sub
mov
loop
mov
and
out
mov
jle
jne
mov
cld
jmp
lea
scas
out
mov
add
xor
dec
or
loope
xor
xchg
pop
dec
or
mov
jmp
rcr
dec
jp
adc
test
test
and
sahf
call
icebp
lods
jle
lock
out
or
push
mov
hlt
dec
inc
lea
sub
mov
iret
cmp
out
aad
gs
add
jp
jmpw
mov
test
and
insb
sbb
push
outsb
shl
xor
leave
sbb
ret
jb
stos
inc
cmp
aas
inc
push
mov
lret
repz
stos
addr16
enter
cmp
sbb
push
push
push
jns
or
repz
daa
xchg
push
lret
and
xchg
and
mov
jg
add
mov
insb
lds
pushl
cli
mov
mov
sbb
xchg
cmp
sbb
dec
je
push
inc
mov
jge
inc
pop
mov
pop
push
cmc
test
js
aam
lahf
or
jbe
outsl
pop
orb
jnp
ljmp
push
xchg
pop
cmp
add
push
lcall
movl
sbb
inc
inc
add
lds
and
xchg
or
fcomps
or
stos
call
xchg
cmpsb
imul
dec
cmc
fsts
pop
push
out
repz
lcall
xor
adc
sub
or
push
cmp
mov
leave
jl
push
fcmovnb
out
lods
in
mov
push
data16
jp
jnp
lods
or
in
inc
add
cmp
add
iret
pop
in
enter
cli
call
jl
inc
dec
or
mull
mov
cmp
outsb
adc
dec
popf
aam
jl
or
xchg
or
pushw
pop
std
test
dec
rcll
mov
mov
nop
pop
bound
cld
movsl
fldenv
imul
mov
pushf
cmp
pop
ja
inc
inc
scas
pop
out
inc
hlt
push
sbb
mov
push
cmpsl
mov
push
xchg
mov
rcrb
pop
idivb
mov
lcall
pop
lea
jp
mov
xor
stc
add
icebp
pop
fsubrs
push
lret
popa
stc
sbb
or
mov
sbb
ficoms
cmp
cli
pop
mov
dec
scas
xor
scas
cmovbe
fists
arpl
enter
pop
jbe
xlat
call
pusha
mov
cld
mov
dec
lcall
sbb
addr16
gs
mov
and
lret
xor
push
sub
pusha
out
in
ss
mov
pop
cmp
mov
inc
rclb
xlat
pop
and
faddp
lret
add
xchg
call
insl
aas
nop
repz
data16
roll
inc
jno
ret
xor
and
in
push
or
lock
and
ret
mov
or
xchg
lahf
out
pusha
rcll
push
lcall
add
push
and
sbb
mov
loope
fdivrl
dec
fisubs
out
push
out
jbe
push
pop
loop
bound
jne
mov
cs
sbbb
or
movsl
xchg
popa
in
cmp
or
loop
add
arpl
inc
gs
push
xchg
cmpsl
repnz
dec
mov
addr16
leave
cwtl
loopne
xor
mov
or
dec
mov
in
xchg
mov
sbb
push
mov
xchg
xlat
and
lock
fdivl
xchg
inc
jnp
push
fcmovu
lret
xor
out
sub
add
xchg
out
adcl
leave
outsb
in
add
and
cltd
rorl
xor
mov
cltd
adc
je
pop
repz
push
call
leave
cmpsl
mov
jbe
ljmp
in
lea
bound
add
ds
es
lods
jo
push
clc
cmp
lret
mov
adc
or
mov
push
jno
push
add
fucomip
sub
xor
mov
inc
das
stc
aam
out
pushl
inc
lods
mov
cmp
int
pop
push
int3
fiaddl
in
sbb
pop
jg
fmull
pop
fisttpll
xchg
hlt
add
sbb
push
sub
xor
leave
insl
es
test
out
cmp
xchg
outsb
push
lret
mov
dec
mov
popa
add
rcll
ds
mov
jne
outsb
cmp
inc
jno
xor
xor
out
inc
iret
fs
jno
xchg
mov
imul
ret
stc
push
mov
pusha
daa
fisubs
or
sub
mov
jp
and
jne
rcr
add
mov
xor
mov
push
aaa
enter
testl
les
xchg
xchg
jl
int3
add
jle
sbb
sarb
inc
test
cltd
in
fs
push
lods
mov
jg
jl
lcall
mov
rclb
enter
mov
xchg
pop
loope
xchg
scas
xchg
dec
or
and
mov
cltd
addr16
aad
fs
cli
aam
or
mov
push
sbbb
dec
jl
mov
xchg
mov
pop
inc
push
mov
cli
mov
mov
mov
jnp
dec
xchg
inc
lea
daa
aad
stos
flds
ds
adc
cmp
push
imul
sbb
add
xchg
cmp
into
shll
cmp
mov
shrb
das
jae
repz
mov
pop
leave
outsl
imul
ja
lcall
xor
jo
sub
push
mov
cmp
rcrl
test
push
leave
aaa
cmp
imul
pop
js
push
xchg
add
xchg
stos
sahf
roll
loopne
leave
loopne
sub
push
pushf
in
test
cmp
jge
ljmp
outsb
sub
test
inc
mov
aas
pop
mov
sbb
roll
fwait
jle
sbb
jb
lahf
call
das
dec
iret
sarb
ret
pop
or
or
das
out
aas
arpl
lret
add
push
mov
test
mov
pop
mov
ja
sahf
push
fnstenv
sti
int
xchg
xchg
push
aaa
or
imulb
push
pop
mov
jno
adc
rcl
mov
outsl
fildl
into
in
int3
into
cmpsl
ds
push
add
dec
adc
iret
imul
movsl
subb
push
add
call
imul
pop
shr
xchg
pop
xchg
sahf
insb
xor
add
jno
popf
xchg
xchg
cmp
fs
ljmp
pop
push
push
fistl
cmpsl
hlt
add
push
pop
les
or
rep
adc
or
lods
adc
test
call
adc
mov
adc
repz
adc
mov
out
outsl
xchg
mov
pop
nop
pop
adc
out
pop
outsb
sbb
shrb
insl
dec
idivl
cli
xor
scas
and
xor
or
inc
cmovg
mov
push
xlat
jno,pn
test
mov
add
mov
inc
and
sti
mov
pop
xor
xor
mov
pop
fistps
in
pop
pop
or
jg
mov
sbb
out
pop
mov
hlt
xchg
cmpl
les
and
jge
cmp
xchg
cmpb
mov
push
mov
adc
shl
sahf
aad
fs
jp
leave
pushl
and
jge
icebp
int
inc
xchg
inc
in
loope
inc
fsts
int3
shll
push
aaa
fisttps
addr16
rol
jno
fst
stos
sahf
mov
dec
push
ljmp
pop
mov
dec
mov
and
xor
pop
xor
or
lea
std
sti
or
cwtl
dec
jnp
pop
mov
xlat
and
dec
jbe
lea
jae
rorb
mov
mov
mov
out
inc
cmp
xor
addr16
cmp
inc
jmp
and
pop
jmp
mov
xchg
movsl
out
add
push
dec
lea
add
out
push
cmp
dec
int3
clc
xchg
sbb
test
sub
js
cmpsb
lret
rclb
lret
dec
pop
mov
inc
fisubrl
pushf
scas
mov
mov
ss
ss
push
loope
lcall
shlb
push
jb
addr16
scas
in
adc
xchg
lret
test
nop
jo
gs
out
mov
push
test
adc
movsb
clc
xlat
lret
arpl
mov
insb
scas
inc
and
xchg
stos
cmp
fstpl
jo
add
pop
xor
cmp
cltd
dec
add
inc
mov
loopne
jecxz
mov
pop
stos
sbb
imul
xchg
cltd
pushf
pop
clc
dec
jne
and
pop
inc
mov
xor
sub
ljmp
das
insb
fwait
pop
fstl
push
cli
lock
xor
ljmp
push
arpl
repz
sarl
jge
test
dec
and
nop
xchg
mov
xor
sub
cwtl
adc
cmpsl
jmp
fnsave
mov
fdivrs
dec
and
push
sbb
repnz
mov
movb
add
ja
pop
mov
xchg
bnd
add
dec
cmp
and
sub
scas
std
jo
or
mov
outsb
negb
sub
dec
jmp
bnd
loopne
pop
punpckldq
mov
out
stos
outsl
jae
xor
loopne
mov
stos
push
xchg
pop
inc
sbbb
push
lods
sbb
adcl
sub
lock
push
cmpsl
outsb
les
adc
mov
rorb
xchg
sbb
sub
mov
sbb
fcoms
mov
push
jl
or
add
loopne
mov
mov
dec
push
in
jnp
repnz
jecxz
push
gs
ds
test
xor
lret
dec
repz
pop
sarb
sbb
pop
cmp
mov
inc
add
out
test
dec
xchg
sub
mov
adc
pop
aam
fcmovnb
inc
mov
loop
lcall
mov
jb
mov
cmp
inc
inc
add
and
or
mov
in
add
or
and
mov
push
push
xlat
mov
mov
mov
fwait
dec
mov
jge
adcl
sarl
nop
mov
or
lods
dec
jecxz
dec
adc
sbb
add
cli
xor
divb
pop
lock
jnp
adc
pop
leave
inc
pop
jl
pop
cmp
dec
cmp
pop
inc
adc
xchg
mov
mov
dec
in
aas
test
mov
and
cmp
ss
sbb
nop
testl
cli
mov
arpl
push
and
pop
mov
sbb
mov
and
outsb
and
stc
addr16
pop
sbb
xchg
lcall
jno
cld
cmp
mov
xor
pop
flds
lock
cltd
pop
jbe
scas
dec
sbbb
jp
movsb
scas
paddw
xor
out
xorps
xor
loop
lock
sub
mov
dec
mov
outsl
cmp
and
xchg
ret
push
scas
sub
sbb
mov
aaa
ja
add
pushf
cmp
add
jle
jg
ljmp
mov
mov
mov
imul
out
loopne
push
outsb
dec
dec
xchg
push
mov
mov
js
xchg
stos
mov
dec
push
loop
mov
sub
out
leave
add
cmp
mov
cmp
out
pop
cmpsl
jnp
ds
add
cwtl
cmp
and
xchg
cmp
mov
push
dec
loopne
xchg
xor
filds
aas
cmpl
rorl
dec
add
pop
aam
fistpl
cld
stos
stos
test
mov
sbbb
frstor
leave
out
sub
add
pop
mov
subl
dec
in
in
and
fnstsw
inc
add
add
xchg
in
pop
roll
fbld
test
sub
push
or
shlb
mov
fcomps
arpl
sub
mov
mov
and
push
popa
addps
aas
push
lret
add
lods
outsl
push
leave
popa
int3
inc
subl
cmpsl
and
mov
call
stc
scas
mov
xchg
pop
mov
add
jne
push
mov
mov
loop
sbb
push
mov
jnp
or
test
lret
jecxz
fucomp
popf
xchg
sbbb
xchg
in
add
lods
in
xlat
and
adc
lds
pop
cmp
dec
sbb
adc
lods
cmc
cmc
add
push
movsb
push
xorb
jno
xchg
fisttps
in
sbbb
out
pop
xor
cmp
sbb
cltd
cmp
divl
pop
bound
cmp
xor
xchg
test
push
or
adc
xchg
fcmovnb
mov
inc
inc
mov
lret
repz
push
mov
xchg
dec
aaa
aad
add
push
or
fldt
mov
push
cmc
adc
sub
pop
mov
and
dec
jns
daa
aam
inc
mov
call
insb
dec
loope
shl
pop
cmpsl
xor
dec
in
sar
int
jecxz
cs
fcomip
mulb
cs
mov
inc
popf
bound
shlb
mov
movsl
gs
mov
mov
sbb
lea
mov
adc
loopne
mov
pop
pop
idivl
add
xor
loopne
and
or
pusha
and
fdivrl
sbb
mov
push
jmp
and
and
jg
cmp
inc
cmp
insl
cltd
hlt
aam
sub
mov
mov
mov
outsl
repnz
xchg
test
divl
mov
outsl
pcmpeqb
mov
pusha
inc
fnstcw
rolb
popf
mov
push
je
std
stos
stc
adc
stos
sub
popf
jns
cmp
test
add
loope
push
dec
fs
add
daa
cmp
sbbl
adc
gs
mov
pop
sub
aam
daa
out
cltd
ss
shrb
in
sahf
stc
pop
loope
inc
jne
cmp
cmc
aam
mov
in
mov
push
jo
inc
imul
add
stos
enter
cld
pop
sbb
inc
jnp
in
fsubrs
xchg
loope
and
pop
idivb
pop
sbb
testb
push
in
inc
inc
pop
fsubr
pop
push
add
jp
sarl
push
out
ficoml
or
cs
lock
add
cmp
ljmp
fisttpl
rcl
push
in
add
popf
mov
inc
mov
cmc
rcrl
mov
jae
sbb
fsub
jl
sbb
mov
mov
repz
lock
pop
sub
fisubs
into
rorl
sahf
das
xorl
add
mov
or
mov
add
aad
aam
ljmp
inc
jmp
popa
pop
xor
incb
jle
loope
cmpsl
and
push
fistpl
mov
and
aaa
add
xchg
jb
sub
xchg
ss
sbb
rcl
pop
mov
push
add
hlt
push
lahf
xchg
test
jnp
push
lcall
push
push
js
es
push
xor
lea
dec
jle
les
sub
shlb
sbb
push
jg
inc
lods
xor
sbb
into
lret
mov
nop
xor
xchg
repnz
roll
das
aas
xlat
add
out
aam
enter
dec
add
outsl
scas
fisubl
mov
pushf
push
cmp
fidivl
mov
fs
mov
orl
pop
push
or
cmp
inc
pop
lcall
lret
movsb
or
jne
jg
das
cmp
jb
adc
loop
stos
xor
pushf
jle
lock
add
loope
xor
movsb
mov
mov
nop
push
jo
cmp
pop
in
sub
mov
movsb
bound
add
cmp
std
pop
jg
pop
xlat
dec
inc
cltd
sub
or
add
cmp
jg
fwait
push
invd
mov
adc
std
lds
stc
adc
adcb
fwait
xchg
add
pop
pop
sbbl
mov
stc
or
adc
loop
push
addr16
lret
lods
ficomps
sbb
loop
outsb
mov
in
cmpsb
xchg
and
cld
repnz
push
pop
mov
pushf
mov
pusha
es
sub
out
inc
ret
int
dec
jnp
mov
jns
push
xchg
jnp
jle
pop
cltd
inc
ret
mov
cmpsl
shrb
xorb
jo
jae
dec
mov
jl
popa
cmpsl
jbe
bnd
jg
jbe
inc
xchg
add
jmp
cmp
test
and
cmpsl
repz
out
xchg
cs
mov
cmpsl
std
add
fs
mov
add
out
pop
das
jp
popa
testl
and
idivl
insb
add
rcll
orl
imul
dec
dec
shll
xlat
jbe
test
dec
cmp
push
push
or
inc
cmpsb
mov
xchg
mov
incb
jmp
xchg
mov
cli
shlb
iret
ret
ret
jo
push
das
aas
test
add
call
inc
dec
pop
imul
test
clc
push
jno
popa
insl
inc
pop
sub
fiaddl
mov
in
subl
in
push
std
jg
pop
or
mov
cmp
and
dec
in
jo
jmp
clc
xor
inc
mov
iret
rclb
add
jb
xlat
shl
mov
sbb
cli
jmp
insl
add
pop
mov
lock
xchg
adc
xchg
lods
sub
xor
mov
out
sbb
fsubrl
sbb
ret
in
inc
mov
xchg
call
out
jo
push
ds
insl
pusha
ret
fiaddl
aaa
xchg
repnz
sbb
and
sub
cmp
ds
push
rorb
and
xchg
cli
ss
aam
sbb
fmuls
ljmp
ret
inc
fnsave
dec
insl
jp
or
faddl
stos
sub
and
test
and
lock
inc
rclb
mov
lods
or
jbe
loopne
inc
out
fildll
fmull
pusha
jne
and
es
cs
push
mov
pop
mov
test
xor
xchg
fnstcw
testl
daa
in
sub
jns
lock
jle
in
fldcw
jle
push
int
add
push
sarl
mov
cs
lods
cmpsl
add
inc
pop
add
ret
add
dec
jne
or
outsb
in
gs
pop
xor
in
adc
or
aaa
decl
stos
xchg
je
adc
inc
pop
xchg
sahf
push
cli
pusha
xor
outsb
pop
int3
push
sbb
enter
xor
mov
adc
and
jmp
ljmp
hlt
cmp
xor
ss
rcll
or
cmp
lea
daa
lret
mov
xor
cmc
add
inc
data16
test
cli
and
aas
mov
sbb
or
loope
outsl
push
ficompl
push
ret
or
stos
mov
xor
push
inc
les
xchg
xor
jbe
pushf
into
mov
sub
enter
popa
orb
dec
xchg
mov
jbe
pop
xchg
pop
test
mov
or
enter
ja
je
push
inc
adc
xor
jecxz
xor
add
in
aad
xchg
sarb
iret
inc
mov
jp
aaa
sub
dec
jg
mov
jnp
adc
fistl
loope
and
mov
dec
lea
insb
addr16
fstl
je
imul
cli
call
stc
mov
push
xlat
push
enter
aam
jno
je
test
mov
xchg
xor
and
daa
pop
lahf
sub
dec
cmp
cmp
std
sbb
cmp
and
addb
xchg
push
int3
shll
loop
inc
lods
cli
or
iret
push
and
cmpsl
xchg
add
inc
stos
fsubrl
imul
mov
mov
std
xor
sbb
into
add
xor
jb
xorb
pushf
fistpll
jecxz
mov
rorb
cmp
inc
cli
aaa
out
mov
or
enter
xchg
ret
adc
movsb
mov
nop
push
sub
xchg
repnz
movsl
pmulhuw
xlat
arpl
ficomps
into
jns
inc
dec
cs
movd
lea
cmp
test
das
jmp
insl
cmpl
sub
sub
inc
aad
mov
mov
sti
clc
mov
xor
cmp
sub
xor
add
xchg
jecxz
push
sub
imul
sub
ljmp
jbe
push
mov
jg
sub
inc
mov
adc
fadds
xchg
dec
pop
pusha
lods
leave
pop
xchg
jg
fdiv
ljmp
mov
push
testl
jae
jb
test
inc
or
ljmp
mov
mov
data16
pop
ret
sahf
setnp
jge
mov
sbb
pop
push
loope
mov
lret
lret
jne
pop
fnsave
sbb
inc
and
js
out
push
and
pop
test
add
fadd
pop
pusha
stos
add
jmp
inc
scas
pop
mov
xor
or
and
repnz
push
loope
rorl
jmp
mov
fcomi
insl
cmc
pop
push
ljmp
pop
test
xchg
lock
sbb
adc
dec
or
pop
xchg
lea
push
sub
rorl
lods
popa
nop
and
cmc
stc
fidivl
mov
inc
xor
pop
ss
push
jae
sbb
ss
push
fwait
scas
js
or
mov
icebp
mov
inc
mov
pusha
mov
rcrl
mov
fimuls
jl
sub
rcr
mov
and
mov
pop
pop
pop
inc
sub
shll
cmp
and
js
lcall
push
mov
xchg
pop
sub
in
rclb
in
lock
add
xor
mov
sbb
or
add
mov
pop
les
imul
jno
sbb
aas
push
lahf
cmovnp
mov
dec
pop
inc
mov
daa
cmp
pop
rolb
mov
pop
scas
mov
out
adc
xor
ja
addr16
lret
or
jbe
and
sarl
icebp
push
xchg
sarb
and
in
scas
pushf
adc
add
outsl
add
xchg
mov
and
cmp
pushf
test
fld
repnz
xchg
push
jo
aam
and
int3
insb
sub
rorb
scas
xor
pop
jmp
pusha
inc
mov
mov
push
sub
sub
cmpsl
xchg
clc
adc
and
adc
jecxz
aam
aam
adc
daa
into
das
hlt
lds
lahf
push
ja
outsb
xchg
dec
or
xchg
mov
mov
shll
cmp
es
scas
lahf
sbb
andl
mov
sbb
imul
dec
mov
repnz
push
fwait
push
or
fldt
fildl
mov
mov
ds
aam
lret
sbb
xchg
and
mov
pop
pop
add
ss
jle
lods
stos
test
inc
cmc
imul
inc
jnp
mov
adc
mov
or
fcmovu
push
arpl
adc
pop
adc
mov
ds
mov
pop
mov
fnstenv
je
or
jmp
movsb
lcall
fistpll
stos
ljmp
jo
enter
inc
shlb
cs
cmp
and
jbe
adc
adcl
fbstp
inc
cmp
aaa
and
fstp
shl
push
fldcw
xor
and
daa
repnz
fisubs
adc
jne
in
mov
addb
inc
dec
loopne
push
inc
add
psllw
cld
pop
aam
int
add
fcmovnu
notl
fbld
sar
jnp
mov
jbe
jg
call
push
cs
push
sbb
pop
or
shlb
divb
pop
and
stos
or
fcompl
out
jl
clts
imul
fadds
push
lret
data16
loope
and
fisubl
lahf
pop
jnp
rol
mov
jl
sub
punpcklwd
rclb
adc
or
sub
lock
shlb
lods
adcb
je
ljmp
cs
jle
lcall
push
sti
inc
push
cmp
xor
fs
push
push
sbb
inc
loope
clc
lahf
fstpt
jnp
sti
jmp
xor
sub
stos
lods
jmp
push
mov
xchg
fwait
jg
gs
test
sbb
mov
xlat
pop
push
in
clc
xor
cmpsl
mov
and
xchg
dec
std
jp
cmp
xchg
sbb
sub
xchg
sub
outsb
add
lods
xor
xor
lds
cmp
and
shlb
sbb
mov
dec
push
test
and
out
push
or
xchg
add
sarb
add
xor
add
ljmp
aam
jg
fwait
movsb
mov
xchg
dec
or
out
mov
mov
test
inc
inc
icebp
imul
in
loope
loope
or
addr16
fwait
sbb
int3
cmpsl
xchg
fisubrs
stos
popf
sahf
add
mov
fists
jl
loopne
stos
scas
mov
jp
add
in
add
jnp
test
xchg
jecxz
pop
dec
clc
std
push
daa
mov
inc
imul
jb
mov
adc
push
mov
mov
mov
push
xlat
fcoml
aaa
mov
das
inc
imul
add
mov
mov
lcall
sbb
outsb
sbb
test
add
push
mov
mov
push
pusha
loope
add
mov
mov
imul
xchg
push
adc
repnz
popa
jnp
sub
sbb
cwtl
or
jb
inc
jns
and
inc
fidivl
lock
mov
dec
scas
mov
mov
inc
into
inc
or
pop
and
jle
scas
ffreep
mov
add
push
scas
icebp
in
cwtl
push
insl
mov
push
ss
leave
leave
or
mov
mov
pop
ja
pushf
adc
mov
mov
enter
mov
pop
or
stos
fcmovnu
loop
dec
das
shr
adc
lret
mov
inc
shl
roll
cmp
in
xchg
shll
sub
and
outsl
sbb
push
mov
stos
icebp
add
nop
ja
sbb
fstpl
jns
pop
cmp
test
std
leave
or
repnz
cmp
fdivr
adc
das
jge
jge
cmp
sbb
push
ja
add
pop
push
mov
js
pop
repnz
or
sub
dec
inc
sbb
push
ja
fstpt
inc
lea
cmpsb
pop
sbb
add
std
es
push
in
lock
lods
mov
scas
pop
push
test
and
or
inc
push
ficoml
jle
js
cmp
jo
cmp
mov
jecxz
pusha
imul
xchg
test
or
stos
push
jnp
inc
cmc
pushf
popa
loope
movsb
popf
insb
mov
sahf
xor
mov
push
lcall
in
lahf
cmp
ret
sub
or
dec
sub
jo
enter
jle
loope
fistpll
bound
nop
test
push
xchg
dec
mov
inc
push
mov
mov
imul
xor
cmc
ret
ljmp
xchg
in
jns
mov
sub
jns
rol
sahf
pop
cmp
outsl
mov
ss
popa
out
fcoms
das
icebp
mov
stos
add
repnz
jbe
and
icebp
in
pop
scas
mov
daa
out
adc
lea
inc
fcoml
mov
xchg
pop
cmc
mov
xchg
sub
sahf
mov
push
repz
jg
add
test
outsb
popf
cmp
jno
jmp
addr16
jnp
dec
sti
cmpsl
mov
in
push
les
shl
mov
dec
jae
test
imul
pop
push
mov
or
and
add
or
dec
or
or
inc
dec
imul
iret
je
insl
lahf
xor
mov
fidivrl
repz
xchg
xor
daa
outsl
shl
mov
push
in
popa
incl
add
xchg
push
mov
mov
push
dec
enter
ja
jle
jmp
fnstenv
jmp
stc
andl
fucomi
cmp
mov
rolb
fcompl
dec
pop
xchg
inc
xor
jmp
lret
cli
test
mov
aam
into
test
in
pop
in
pop
aas
sbb
fs
cld
pop
enter
mov
mov
xlat
fiadds
jo
lcall
xchg
ret
cld
clc
movsl
xor
cmp
and
fs
or
rcrb
xchg
sti
daa
cmpsb
or
fs
sub
mov
dec
in
mov
xor
pop
dec
dec
sub
xor
popl
jbe
shlb
and
stos
jb
icebp
xlat
ljmp
dec
aaa
rcrb
test
cld
xchg
mul
mov
in
jbe
xor
int
aam
fsts
leave
ss
sub
xchg
xor
pop
and
cmpsb
mov
or
add
sbb
mov
gs
pop
mov
nop
jb
push
lahf
and
insl
mov
popa
loop
ret
test
inc
inc
fcomps
sahf
in
or
mov
xor
mov
adc
loope
into
rcll
sub
mov
sbb
sub
int3
jp
jno
dec
sub
mov
in
xchg
add
lret
inc
icebp
cld
bound
xchg
loop
cmp
lods
sbb
mov
xor
mov
mov
scas
pop
popf
lods
inc
jg
or
or
int
jno
jecxz
insl
mov
aam
adc
data16
sbb
push
pop
inc
xlat
imul
mov
xchg
sbb
sbb
test
mov
adc
insl
push
cmc
dec
xchg
sbb
faddp
movsl
repnz
popf
xchg
xchg
les
roll
inc
clc
fisubrl
add
ret
and
pop
data16
gs
das
call
dec
mov
das
cmp
sbb
and
fisttpll
mov
adc
mov
rcl
int3
mov
sub
adc
aam
xchg
and
fmulp
iret
sub
push
shlb
fwait
mov
cwtl
test
mov
adcl
pop
in
out
xchg
popa
xchg
ljmp
cmpsb
out
ljmp
push
scas
imul
push
pop
popf
jne
jno
add
daa
cmc
cmpb
in
out
loope
arpl
shlb
push
xor
xchg
sahf
mov
pop
sub
or
jge
add
xor
das
adc
popa
scas
inc
in
scas
jae
or
jnp
out
xor
popa
dec
cli
xor
and
fstpt
ds
fimull
jne
jg
dec
repnz
xchg
mov
jns
scas
inc
insb
popa
cmp
lods
out
cmc
fisttpll
gs
lea
mov
repnz
pop
inc
inc
cmp
jl
lret
lea
rorb
mov
mov
enter
cli
xchg
adc
jne
mov
sbb
fwait
outsb
cs
push
adc
and
pop
pop
insb
mov
adc
inc
stc
ja
inc
fwait
push
iret
xchg
fstl
dec
or
jecxz
fidivrs
and
scas
js
test
jne
call
test
jmp
adc
xchg
inc
mov
push
scas
jmp
shl
mov
add
insl
imul
cltd
dec
repz
insl
push
jmp
sarl
cltd
jle
inc
sub
dec
mov
sub
iret
aaa
sub
fisttpll
xor
test
and
jne
aaa
mov
jae
jmp
xorb
imull
cmc
inc
int
inc
rcll
sub
xchg
fidivrl
rclb
shrb
jle
or
mov
lcall
leave
and
inc
lcall
inc
das
sbb
cltd
dec
xchg
cmpsl
aas
popf
fmull
mov
test
push
lock
and
jno
sub
fwait
cmp
dec
cs
push
mov
pop
mov
inc
pop
sub
and
push
sahf
insl
js
clc
fwait
sub
dec
inc
insl
cmpsl
pushf
dec
pop
mov
sub
lds
adc
and
stc
pop
add
inc
mov
std
dec
mov
aas
pop
xor
cmc
call
adc
xchg
xchg
test
cmp
mov
subl
pop
inc
or
adc
hlt
or
in
rcrb
cmp
loop
sub
sbb
leave
fsubl
add
les
ja
cmp
imul
sarb
push
std
mov
scas
mov
idivb
outsb
xor
inc
insl
ficoms
fstpt
inc
je
jae
cmpsb
out
packsswb
test
sbb
push
sbb
cmp
fnstcw
cmc
flds
mov
rcll
icebp
sub
and
mov
fisubl
xchg
ds
fcomi
movsb
jbe
fcmove
neg
movsl
lcall
jne
sub
xor
xchg
dec
imul
mov
push
adc
pop
mov
add
loop
shll
int3
lcall
push
jbe
push
jp
or
ret
jae
and
push
add
jo
icebp
and
pop
call
dec
add
aad
fcmove
insl
xchg
jl
icebp
fcoms
dec
rcrl
outsb
mov
icebp
xlat
xchg
subl
add
pusha
gs
je
scas
sbb
lods
sbb
js
nop
xchg
xchg
lds
add
sub
test
mov
xchg
and
ret
push
ja
imul
ljmp
lds
xor
mov
arpl
lods
int3
cmpsb
loopne
push
mov
push
je
jnp
roll
cmp
mov
insl
inc
ss
xor
outsb
out
aas
addr16
pushf
decl
ljmp
xchg
sbb
rorl
xor
cwtl
dec
cmp
jle
cmpl
bound
sub
loope
jo
in
outsb
sarb
jmp
jnp
pop
vaddsubpd
mov
mov
fcomps
add
mov
add
movl
inc
stos
xor
or
push
dec
add
andl
or
sub
xchg
int3
sub
daa
ret
sbb
add
clc
push
mov
aas
or
push
inc
xor
lahf
and
mov
push
dec
stos
mov
mov
jno
cmp
xchg
xchg
fcmovu
jmp
jns
je
mov
add
dec
test
sub
inc
pop
roll
cld
enter
int3
test
adc
xchg
loopne
imul
shl
adc
sub
movsb
das
test
dec
fbstp
iret
push
pop
loope
jge
and
lret
out
adc
std
cwtl
testb
hlt
sub
pusha
icebp
loope
mov
inc
int3
push
fldenv
jne
jne
lcall
rorb
repz
mov
mov
xchg
daa
mov
inc
fisubrs
pop
sub
jmp
or
ror
imul
jbe
fs
lcall
jge
ja
pushf
sub
shrb
movsb
jb
push
mov
pop
cmp
cmpsl
lcall
lods
xchg
pusha
out
inc
test
jo
push
push
incl
iret
add
xor
loopne
popa
xchg
sbb
jmp
mov
or
aad
cmpsl
sub
fstps
jae
imul
ljmp
test
pop
filds
and
ret
cmp
pop
mov
lcall
mov
pop
add
mov
into
ss
lret
jle
lcall
lret
test
pushf
ja
push
sar
xor
cmp
mov
clc
push
sub
mov
stos
pop
push
testb
cmp
adc
gs
xchg
mov
mov
mov
notb
jecxz
nop
aam
mov
xor
and
cmp
lahf
xor
std
lahf
cmpb
or
outsb
fldcw
jg
jg
and
push
inc
lods
std
test
mov
std
mov
hlt
cmc
jnp
adc
pop
out
stos
jo
out
stos
add
adc
and
ret
imul
popa
push
mov
test
out
and
mov
lods
test
adc
fistpl
and
cmp
xchg
push
les
pop
push
xor
ss
jae
xor
cwtl
fdivrp
dec
jae
ss
and
add
mov
or
xor
inc
je
mov
jle
bts
dec
nop
add
inc
jmp
dec
dec
or
xor
movsl
in
xchg
xor
and
test
fisubrl
dec
je
in
bound
cmc
daa
shrb
dec
cmp
lahf
xchg
mov
pop
dec
repz
jecxz
pop
xor
iret
xchg
xchg
js
test
rclb
jae
xor
aas
out
inc
jmp
movb
push
cmpsb
test
std
cmpsl
add
push
xchg
adc
fsubl
inc
loope
out
ficomps
add
packuswb
ficoml
enter
shrb
sub
xchg
leave
testl
outsb
pushf
ficompl
faddl
imull
cmp
or
scas
leave
in
jno
dec
out
inc
sbb
subl
ret
insb
hlt
adc
dec
or
call
cvtpi2ps
hlt
enter
jno
pop
mov
repnz
cmp
inc
cmp
push
ja
mov
scas
push
cmp
enter
lahf
sbb
push
xchg
out
scas
cld
outsl
xchg
rorl
rol
scas
movsb
push
adc
xor
push
dec
je
xchg
data16
pop
push
push
push
dec
jno
dec
add
popf
in
cmc
push
mov
movsb
ret
adc
enter
divl
lods
insl
xchg
aaa
add
int3
mov
ds
adc
lods
inc
idivb
inc
ret
mov
pop
repnz
jne
cmp
mov
dec
jae
test
test
movsb
xlat
fdivr
cmc
ds
nop
ljmp
mov
clc
sub
fsubs
std
insb
cwtl
mov
pushf
pop
ret
mov
push
fs
fwait
stos
divl
decb
cmp
lahf
or
mov
adc
ljmp
dec
mov
std
xor
ss
mov
mov
shr
jae
shrl
and
fildl
pushf
pop
scas
push
push
int
sbbb
cmpsb
cmp
sub
fsts
push
add
addr16
mov
in
dec
pop
das
xorl
adc
outsl
popf
jmp
shrl
aad
xchg
and
ret
push
leave
shrb
notb
call
sub
xor
adc
int
in
add
pusha
aas
and
les
outsb
fistps
fdivrs
loope
jge
in
adc
lahf
and
je
cltd
movsl
mull
test
in
sbb
popf
mov
addr16
pushl
data16
and
mov
icebp
insb
lea
or
movsb
xchg
or
jmp
push
sti
repz
mov
xchg
push
insl
test
and
fsub
pop
lahf
mov
push
sbb
lahf
sti
push
mov
or
xchg
and
cmp
sahf
xor
daa
dec
jmp
fcmovnb
jle
cmpsl
dec
mov
dec
and
loopne
push
pop
lea
push
mov
fadds
add
push
scas
xchg
int3
cltd
jecxz
in
aam
xor
dec
jmp
fwait
inc
std
cmp
insb
add
dec
lods
xorl
or
out
rol
push
push
out
sbb
decl
adc
mov
sbb
je
sbb
popf
mov
int3
push
lahf
cmp
int
pop
mov
mov
cmpsl
lock
psubb
popf
in
movsb
enter
inc
ds
int
iret
shrb
lods
bound
cmp
adc
divl
loope
sub
das
push
clc
mov
adc
pop
cmp
jp
pop
aam
pushf
stos
xchg
sbb
sbb
faddl
add
mov
xchg
neg
jg
cld
dec
leave
add
cmp
inc
and
gs
inc
sub
out
jbe
jge
dec
insb
out
xor
sub
xchg
rclb
jmp
stos
mov
push
jns
mov
jns
outsb
cltd
sahf
add
mov
mov
or
push
dec
xor
clc
stc
rcll
push
aad
aas
addr16
mov
push
icebp
mov
adc
repz
mov
pop
push
fidivl
mov
sub
je
iret
das
rcrl
fcomps
dec
mov
cli
std
scas
hlt
stos
or
pop
jns
inc
add
ret
or
or
and
in
xchg
sub
aam
mov
shrl
out
addr16
cmp
sbb
cmp
jg
cmpsl
lock
cs
jmp
sti
xchg
xchg
inc
pushf
mov
cmpsl
fs
or
stc
cmpsl
sub
in
jno
aad
or
and
lds
push
icebp
rcl
adc
cmp
stos
push
lcall
imul
add
flds
es
mov
mov
inc
jne
or
mov
call
sarb
add
push
push
lock
cmpsl
mov
sub
gs
cwtl
movl
add
stos
fmuls
jno
in
jg
adc
mov
jb
push
cmpl
insl
jb
dec
data16
mov
aaa
and
mov
mov
ljmp
ret
ds
jp
fcoml
test
into
add
daa
vmread
cmp
pop
dec
xor
or
and
xor
jl
add
mov
dec
mov
push
hlt
lret
movsb
jo
pop
cmc
mov
ss
or
addl
mov
jno
pushf
cs
xchg
rolb
sbb
xchg
lea
inc
mov
lock
mov
insl
sahf
add
imul
scas
fmull
adc
arpl
inc
daa
in
jg
inc
mov
jnp
jbe
jle
fmul
daa
mov
test
loope
fists
in
stc
int3
mov
or
inc
sub
pmuludq
out
push
dec
pop
test
lods
pushf
mul
dec
mov
aad
jp
lcall
lret
xor
test
out
lahf
test
and
cmp
cmc
arpl
mov
loop
movsb
test
repz
nop
nop
int3
call
lock
jae
and
xorl
adc
sub
sbb
push
aad
test
movsb
outsb
sarb
addr16
jne
sbb
inc
lcall
jp
dec
push
inc
mov
hlt
mov
jl
cmpsb
mov
lret
adc
cmc
dec
jg
mov
jno
cmp
pop
jp
ds
sbb
lret
sub
sbb
imul
divl
and
es
and
mov
push
bound
je
push
cs
mov
test
je
negl
jbe
inc
dec
es
scas
out
push
xor
lcall
mov
int3
mov
xor
cli
shll
or
and
xchg
insb
mov
lret
xor
add
sub
cmp
ret
mov
je
xchg
fnstcw
cli
hlt
sbbl
mov
ret
dec
sub
je
negl
ret
add
and
push
test
jge
insw
out
int
push
mov
mov
arpl
push
and
mov
push
mov
rcrb
scas
xor
decb
sub
inc
lcall
xor
mov
scas
jns
push
mov
icebp
loop
jnp
ja
xorb
out
mov
sbb
outsb
fildl
sti
cwtl
sub
frstor
icebp
test
popf
mov
lret
mov
mov
lret
lods
jo
jge
jg
insb
je
aas
addb
mov
mov
jp
push
xchg
aam
in
add
packssdw
aaa
inc
jae
ds
cmp
sbb
inc
loope
inc
cmp
inc
ds
mov
mov
mov
daa
in
add
mov
inc
pop
aad
dec
je
sub
sub
xchg
insb
ficoms
jnp
in
mov
adc
test
clc
inc
nop
push
mov
xor
jmp
mov
lds
shrb
subb
loop
sbbl
push
cld
iret
outsb
iret
movsb
rorb
push
mov
divb
insl
divl
or
push
inc
sbb
nop
add
jo
or
das
out
adc
int
jle
inc
stos
fisttpll
out
fucomi
push
mov
pushf
dec
inc
stos
ret
out
rclb
sbb
pop
xchg
cmp
or
arpl
sti
mov
xor
js
gs
jp
mov
lcall
lret
imul
jne
fmuls
lret
xchg
mov
xor
aaa
mov
push
mov
xchg
push
dec
jne
or
popa
cwtl
or
dec
jo
mov
lahf
and
push
mov
bound
xor
mov
adc
sub
mov
cld
mov
or
out
dec
out
mov
lea
cli
outsl
jp
push
fisttpl
movl
cwtl
jmp
pop
das
jp
dec
mov
and
mov
bound
shrb
std
fnstcw
or
or
ja
insl
fisttpll
sub
lock
and
cltd
cld
mov
cmp
cmpsl
cltd
lret
pop
lea
mov
xor
push
mov
mov
jge
sgdtl
adc
cmc
cwtl
fisubrs
add
pop
into
sbb
icebp
jmp
xchg
dec
or
xchg
adc
adc
mov
xchg
dec
sbbl
imul
xchg
pop
sbb
or
scas
jge
jne
aas
das
push
xor
and
rol
idivb
cmpxchg
mov
push
xor
das
cmp
sbb
mov
fisubs
adc
mov
and
jle
mov
push
mov
xchg
dec
xchg
into
popf
test
mov
mov
sbb
xorl
jb
and
jo
xchg
jmp
fisttpll
test
inc
in
sub
jno
mov
subl
jge
lock
out
push
mov
pop
sbb
shll
adc
lret
add
rcrl
js
testb
xor
and
das
std
lret
cmpsl
popa
and
ljmp
push
push
addl
adc
push
pop
fs
sbb
mov
sahf
inc
addr16
fldenv
xchg
stos
ret
imul
ja
push
xor
loopne
stos
ret
xlat
mov
in
movsl
test
and
pop
mov
cmp
call
jl
sbb
add
std
sub
and
test
pushf
push
mov
mov
pop
ds
jp
arpl
repnz
push
int
xchg
xor
xchg
xchg
sbb
and
std
fidivs
mov
push
int3
adc
jecxz
ds
addr16
fnstenv
pop
mov
mov
dec
pop
mov
fists
adc
rorl
scas
or
xchg
ret
jno
add
sub
mov
out
dec
ret
call
cmp
repnz
lret
push
sub
clc
sahf
jl
cld
pop
sbb
pop
jle
sub
stos
mov
rcll
imul
in
repz
cmp
mov
fdivs
insl
loopne
dec
test
adc
pop
add
xor
adcb
inc
loop
lea
inc
or
adc
push
xchg
jle
aaa
into
out
sub
or
dec
mov
push
insb
clc
not
cmp
push
mov
cli
pop
ret
fsubl
jge
mov
sbb
mov
int
push
fs
movsb
aam
cmpsb
gs
nop
sbb
lret
sahf
mov
mov
push
repnz
stc
aad
mov
mov
cs
popa
outsb
xchg
push
xchg
leave
and
addr16
sar
pop
cld
cmp
shl
icebp
adc
lahf
push
mov
cmc
ljmp
mov
add
inc
imul
sbb
test
lods
adc
jmp
mov
cmp
lock
add
jge
sahf
popa
pop
shlb
insb
arpl
or
and
insb
movsl
lcall
cmp
lret
jg
pop
jp
dec
enter
lahf
pop
pop
aam
bound
sti
mov
push
das
out
std
ret
lds
inc
scas
or
or
popf
mov
mov
xchg
repz
inc
add
xor
hlt
or
inc
adc
pop
lret
test
mull
cmp
jae
cmp
lods
cmp
es
sub
ss
add
shlb
iret
pop
mov
and
pop
aad
fcomps
mov
and
mov
shlb
adc
push
in
fucomip
mov
add
fsubrp
iret
sahf
xlat
mov
fs
and
bnd
mov
out
fsts
jb
insb
xchg
outsl
nop
sbb
fsubs
mov
dec
daa
mov
jecxz
ljmp
mov
jge
and
push
cli
cs
repz
sbb
cwtl
test
fadds
sbb
mov
mov
inc
and
cmp
or
stos
or
xchg
sbb
jns
xor
popa
aad
mov
idivb
aam
sahf
divb
hlt
push
lsl
pop
es
mov
mov
int
pop
fildll
stos
nop
inc
push
add
pop
sti
inc
push
pop
mov
xchg
or
jo
dec
push
rcr
shlb
ds
insl
orl
mov
aam
movsb
outsb
mov
sub
cbtw
mov
outsb
xor
imul
mov
mov
lahf
in
dec
add
cltd
dec
pop
adc
or
lret
xorl
jnp
test
repz
jae
dec
cs
mov
mov
xchg
inc
xchg
fwait
lahf
icebp
or
insl
sbb
popa
cmpl
inc
ljmp
or
pop
out
or
mov
arpl
mov
add
cwtl
jnp
mov
or
outsb
xchg
jg
dec
pop
pop
pushf
jb
pop
insl
gs
mov
xchg
pop
cmp
mov
mov
fdiv
cmp
mov
imul
test
leave
cld
cmp
outsb
mov
dec
jns
je
stos
push
rcr
xor
clc
xor
xchg
mov
clc
mov
fcomps
fists
sub
push
pop
xor
xchg
pop
push
loop
in
add
pop
rolb
adcl
stos
aam
xchg
aas
outsl
jo
push
lahf
xor
ljmp
movsl
xor
xlat
xor
daa
test
jmp
push
sub
dec
fcoml
inc
jg
imulb
test
mov
jae
cmp
cwtl
or
or
cmp
xor
in
adc
ret
andb
push
out
dec
fwait
jecxz
and
sbb
jns
fcoml
fnstsw
lret
jno
pop
lds
mov
adc
addr16
dec
test
xchg
pop
std
popl
test
ja
xorl
push
adc
or
add
sbb
cli
add
cwtl
mov
mov
mov
push
xor
cmpsl
jne
or
fisubl
popa
xor
and
mov
jno
xor
dec
sbb
lock
ljmp
jge
rcl
sahf
rolb
scas
mov
mov
dec
ds
lea
stc
mov
adc
inc
mov
mov
arpl
xlat
push
notl
push
aas
jb
xor
les
sub
jl
adcb
mov
dec
cmc
addr16
cltd
clc
inc
iret
jbe
pop
lods
cli
xor
repz
push
pop
stc
je
xor
fwait
xchg
scas
mov
pop
cli
xchg
xor
insl
sti
popf
dec
sbb
outsb
aas
or
or
xchg
data16
movsb
lret
fiaddl
cwtl
cmp
inc
add
mov
sahf
cmc
mov
cmp
mov
jo
call
sahf
and
je
js
mov
or
lret
inc
fcoml
sub
mov
adc
repnz
stc
mov
push
test
out
mov
stos
lds
pop
mov
imul
push
inc
int
or
pop
ret
mov
inc
loope
jg
pop
push
inc
cmp
jmp
lock
pop
call
jns
faddl
loop
pop
adc
fdivrs
and
jmp
daa
xor
andl
sbb
movaps
mov
loop
sahf
ljmp
xlat
mov
jne
fnstsw
adc
test
aas
jne
das
notb
cwtl
mov
jle
pop
mov
inc
pop
adc
cwtl
std
in
lods
imul
cmp
movsl
cmpsb
scas
push
lcall
push
mov
mov
sub
adc
pop
add
xor
dec
inc
inc
fdiv
push
mov
cld
ljmp
xchg
daa
and
popf
lret
push
dec
ja
sbb
xchg
fnstenv
sarl
mov
cmpb
jns
add
inc
popa
iret
insb
repnz
fisttpll
fwait
sbb
push
push
int
add
jecxz
lock
fsubs
int
xchg
arpl
xchg
inc
inc
push
sub
xchg
inc
mov
dec
les
rclb
int
pop
dec
and
xor
daa
sbb
shr
bound
pusha
add
lds
mov
out
cmc
add
test
push
mov
push
or
fisubl
outsb
loop
xor
lods
lea
test
mov
push
mov
and
fucom
mov
js
movsb
xor
adc
seta
subl
add
iret
test
fucomi
out
pop
cmp
ljmp
mov
sbb
arpl
daa
jnp
xchg
cs
sbb
nop
idivl
das
leave
cwtl
xor
pop
js
fisubrs
adc
xor
xchg
leave
lcall
push
stos
sahf
xor
cld
mull
rorl
sar
cmp
push
fistpll
and
jb
mov
jl
adc
stos
cmpsl
or
cmc
loop
mov
ret
fstpl
aad
cmp
aaa
add
shrl
movsb
cmpb
cmp
jg
leave
push
scas
jge
ret
jb
dec
mov
hlt
xor
and
and
push
push
xchg
and
jg
jge
frstor
pusha
inc
jne
dec
stos
xor
jb
inc
jno
out
cmp
je
inc
mov
sbb
fdivrl
lret
repz
push
mov
add
pusha
movsl
enter
dec
dec
int3
push
xor
dec
pop
lock
jae
int3
nop
aaa
and
fs
clc
pop
jecxz
lock
xor
dec
stos
dec
in
pop
inc
negb
insl
ss
push
add
or
ret
repz
aam
sbb
push
dec
mov
negb
cmp
pusha
cwtl
jns
movsl
je
addl
mov
xchg
nop
dec
test
pop
lcall
inc
inc
and
enter
hlt
bound
push
inc
lcall
imul
in
nop
cld
mov
jge
pop
ljmp
in
pop
cli
orl
xchg
sub
sbb
cmpsb
add
xor
iret
xchg
mov
loope
sub
mov
push
in
or
jecxz
adc
sub
fcompl
jp
daa
fs
iret
test
pop
mov
iret
pop
dec
cmp
repz
mov
xor
cwtl
push
adc
hlt
cltd
in
ret
or
mov
sbb
fsubrl
rep
xor
arpl
sub
xchg
adc
pop
loopne
push
mov
inc
sbbb
xchg
pop
bound
or
mov
aam
push
mov
addl
fwait
adc
jp
sub
int
xchg
add
jg
dec
imul
fisubl
test
loope
push
insl
fsubl
sbb
xor
mov
cmp
push
insl
or
insl
pop
add
cmp
js
in
jge
loopne
jmp
jl
sbb
insl
neg
jb
cli
xor
dec
dec
or
popa
cmp
stc
xor
jne
mov
out
mov
sub
shlb
lods
mov
enter
push
cs
es
cwtl
and
mov
dec
stos
sbb
int
xchg
xchg
pop
scas
pop
jae
jmp
pusha
inc
incl
and
fstl
or
pop
shl
arpl
sub
and
out
jae
lea
pop
adc
out
test
in
fists
jl
xchg
loopne
mov
cmc
cmp
push
les
lea
repz
ja
dec
adc
add
loop
sub
sbb
fucom
aaa
and
stos
arpl
mov
sbb
popf
imul
out
aad
mov
aam
lock
and
inc
and
rcrb
jecxz
jae
pop
lret
ficoml
dec
xor
jecxz
subl
mov
das
push
idivl
mov
cs
xchg
in
and
test
arpl
int3
mov
jb
and
xor
cmp
sub
xor
ljmp
fidivrs
test
adc
je
outsb
mov
clc
ja
sar
xor
testb
in
add
inc
adc
popf
inc
lret
out
lcall
in
pop
test
fs
icebp
xor
insb
ja
jo
addr16
inc
les
movsl
lahf
sub
add
mov
fldcw
leave
punpcklbw
call
inc
pop
inc
shlb
dec
icebp
dec
fadd
int3
scas
push
jp
popf
test
xchg
neg
lock
data16
jmp
sub
mov
sbb
mov
xor
mov
les
mov
in
ds
pop
repnz
rcl
sub
adc
or
data16
scas
fcompl
aaa
cmp
scas
scas
les
xor
int3
ljmp
push
inc
jl
push
cltd
insb
scas
and
jne
leave
mov
mov
lahf
sbb
dec
out
sbb
test
or
aam
lock
dec
fiaddl
dec
add
pop
out
aas
and
mov
mov
push
cmp
icebp
loop
inc
sbb
imul
and
push
and
jg
dec
inc
xchg
lods
inc
subb
sub
pop
sbb
int
out
jl
cli
push
daa
xchg
fdivrp
bound
xor
jle
mov
std
push
cmp
sbb
pop
or
jg
aaa
xchg
int
hlt
xchg
pusha
dec
sub
pusha
leave
push
andb
and
loope
lret
push
xchg
std
negl
adc
movsl
inc
cmp
das
negb
and
and
adc
dec
xchg
pop
test
or
sbb
pushf
in
dec
dec
jmp
fcmovnbe
mov
data16
data16
xchg
xchg
rclb
stos
adc
push
jp
leave
into
stos
jnp
or
ss
imul
pop
push
pop
aaa
loopne
push
jns
adcl
dec
jne
jg
mov
adc
js
jg
je
jo
jns
pop
leave
mov
jp
pusha
sub
jb
test
mov
sahf
mov
cmp
lcall
push
fisubs
mov
stos
mov
cmc
push
mov
out
xchg
xlat
js
cmp
adc
imul
addr16
adc
jno
sub
iret
das
jl
out
or
addr16
cmp
or
data16
lock
insl
pop
add
fisubl
lods
dec
ror
adc
ss
xchg
pop
or
inc
dec
movsl
xor
das
jle
and
into
test
test
mov
in
aam
xchg
push
aas
shr
aaa
out
and
cmp
jecxz
add
into
outsl
movsl
jg
mov
inc
xor
push
maxps
iret
in
insb
mov
imulb
adc
sbb
adc
decb
aaa
add
stos
push
lods
sub
mov
push
aas
fwait
mov
inc
test
jo
mov
mov
mov
mulb
sahf
mov
push
sti
or
and
call
mov
hlt
cmp
xchg
rcrb
ljmp
mov
lahf
xchg
jp
lds
in
mov
inc
dec
pop
cwtl
xchg
push
ljmp
mov
mov
and
jp
mov
es
push
fcoms
mov
jl
push
mov
mov
fisttpl
dec
sub
rcr
mov
inc
adc
xchg
out
imul
loope
nop
and
es
sbb
sbbb
jle
test
jl
scas
test
inc
fistl
adc
xchg
int
outsl
xchg
inc
mov
mov
xchg
stos
cmp
mov
andb
mov
dec
inc
arpl
call
pop
int
jp
sbb
sub
stos
clc
aaa
xlat
and
repnz
push
dec
rcrb
imul
enter
loopne
mov
loop
dec
mov
or
pop
out
ja
int3
push
stos
jle
lea
repnz
mov
mov
xchg
or
leave
and
das
je
test
push
ss
bound
mov
in
and
and
mov
pop
sub
nop
and
mov
pop
dec
push
ds
adc
add
jb
jno
inc
push
sub
popa
or
loopne
scas
mov
sti
jae
jmp
or
mov
orl
pop
mov
test
push
pop
sahf
std
or
push
lret
mov
loopne
les
and
mov
shl
jle
adc
mov
pop
jo
lods
cmp
cwtl
out
cmpsl
test
cmp
xchg
xor
clc
lcall
loopne
dec
fsubr
movsl
pop
pop
in
addl
push
out
daa
mov
adc
divb
or
cmpsl
and
std
dec
loope
outsb
jecxz
in
popf
fsubrl
or
outsb
ds
sub
push
push
andl
mov
lahf
jle
jp
int
lods
les
repnz
pop
lods
push
xchg
loop
leave
jge
gs
aam
scas
xor
sbb
aas
sub
or
mov
jae
into
xchg
subb
outsb
xchg
cmp
fstl
push
mov
in
mov
ret
xchg
dec
inc
iret
or
xor
in
das
xlat
jo
mov
push
data16
mov
or
mov
sbb
aam
add
mov
or
pop
ret
es
stc
shll
lods
and
ss
stos
mov
shll
sarb
push
mov
mov
fstpt
cmp
dec
add
in
adc
pop
dec
add
ljmp
adc
subb
pushf
add
sub
imul
insb
out
jne
xor
mov
and
mov
mov
or
push
sub
lret
or
jns
pushf
adc
push
mov
in
imul
jb
cmp
je
in
lds
imul
mov
rcrb
xorb
push
mov
cmpb
aaa
jecxz
movsl
in
lret
lock
mov
push
push
fs
gs
mov
mov
pop
jmp
cmp
in
xchg
fldenv
test
ja
test
iret
mov
jne
bound
fistl
add
insl
mov
inc
loop
cmc
add
out
push
fdivrl
stos
fisubrl
jecxz
scas
nop
mov
out
or
inc
mov
shlb
data16
mov
in
inc
in
pop
mov
ret
cmc
fisttpl
jge
gs
xor
or
xor
outsb
mov
sbb
add
jnp
push
rorb
add
push
pop
sbb
pusha
mov
xor
dec
cmp
dec
pop
push
mov
cmp
mov
into
rcll
sbb
roll
leave
ficomps
mov
adc
dec
cmp
int3
add
push
aam
cwtl
pushf
xchg
xchg
push
mov
repnz
mov
fnstsw
out
hlt
movsb
jp
daa
lock
xlat
jp
dec
test
shll
dec
sbb
mov
stos
xchg
movsb
repz
pop
rolb
and
call
sub
mov
inc
pop
clc
push
and
popf
in
scas
stc
fdivp
adc
ds
ret
push
and
fsubrs
out
and
std
push
shlb
adc
aaa
jne
xor
std
gs
and
xor
mov
out
ss
dec
fwait
mov
push
mov
xchg
jb
insl
in
mov
das
ficoms
dec
sahf
cltd
inc
and
jmp
jge
xchg
daa
xchg
mov
mov
push
xor
dec
and
scas
mov
stc
jno
orb
lret
xchg
sahf
xchg
mov
icebp
loopne
push
out
or
push
nop
lods
mov
fs
pop
push
xor
orl
cli
popa
jg
mov
xchg
scas
dec
push
xchg
shlb
sub
jecxz
inc
lret
out
xor
ret
addr16
int
out
popa
and
scas
push
lret
dec
icebp
aam
pushf
icebp
pop
rcr
stos
xor
mov
sub
punpcklbw
ds
dec
out
jp
call
ficompl
mov
push
xor
push
add
push
dec
dec
out
push
fsubr
inc
in
sub
adc
xor
sahf
pop
imul
sahf
mov
fadds
xor
cs
mov
push
mov
mov
dec
cld
jae
imul
loopne
push
push
loope
hlt
mov
daa
notb
jge
movsl
adc
inc
lock
jmp
adc
add
xor
in
mov
hlt
outsl
jns
clc
lcall
sbb
or
testb
out
sti
ss
nop
xchg
ljmp
stc
jecxz
cmp
in
or
inc
sbb
add
cmpsl
je
push
in
xchg
jbe
leave
imul
addr16
mov
fsubrs
call
sbb
or
scas
and
insb
sub
pop
subb
out
mov
ficompl
add
rcrl
nop
push
xchg
repnz
das
and
setge
mov
lock
ljmp
mov
push
rclb
jge
orb
faddl
cmp
sbb
adc
inc
mov
das
int
mov
mov
pop
pop
repnz
imul
lock
hlt
lods
ljmp
es
arpl
jmp
mov
inc
dec
daa
insb
cmp
stc
xchg
xor
dec
mov
inc
iret
ja
or
sub
mov
arpl
out
xchg
or
sbb
daa
inc
inc
xchg
pop
pop
mov
sbb
mov
xor
outsl
ljmp
jle
leave
outsl
movsl
jge
cld
jle
data16
icebp
lret
popf
mov
fcompl
adc
ret
popf
fadds
insb
mov
sarl
push
dec
cmp
imul
cli
sbb
mov
mov
pop
mov
lods
pop
std
int
mov
repz
jmp
mov
inc
ret
xor
out
iret
arpl
mov
mov
fistl
adc
add
push
cmp
xor
and
adc
and
sub
stos
movsb
scas
fistpll
lret
jecxz
mov
outsl
popf
loopne
dec
aaa
mov
cltd
jge
test
into
add
and
bound
lods
push
sbb
lds
mov
adc
or
stc
aad
xchg
adc
insl
pop
je
cltd
push
mov
cmp
in
ss
add
sbb
in
adc
pop
ljmp
test
insl
je
adc
xor
add
or
flds
into
fisttpl
shll
test
jae
arpl
in
out
sub
sbb
jl
dec
notl
divb
test
icebp
cmp
mov
stos
add
pop
jmp
ljmp
jp
push
ret
in
add
ret
cmp
cmp
mov
stc
out
inc
fcom
scas
rolb
xchg
test
movsb
dec
lea
dec
jno
cmp
inc
jl
in
push
shlb
or
icebp
loop
mov
mov
mov
jno
bound
in
or
cli
cmp
loope
mov
sbb
or
les
call
cmp
sub
mov
and
xchg
arpl
mov
push
push
pushf
add
mov
ljmp
xlat
inc
into
in
imull
mov
push
mov
sbb
mov
hlt
cmp
in
xchg
insb
rorb
add
cmpsl
test
jg
sbb
jne
ljmp
std
decb
fists
in
scas
stos
fidivrl
and
xchg
in
sti
xor
sub
cwtl
jge
shlb
mov
cmp
ss
adc
mov
mov
add
leave
outsl
imul
mov
ljmp
cmp
loop
push
stc
adc
dec
cmpl
dec
add
adc
pcmpgtb
and
inc
loopne
aaa
add
mov
and
inc
dec
fidivs
aaa
nop
jae
shll
or
mov
adc
sahf
inc
int3
fidivrs
into
or
cmp
dec
xor
fwait
pop
or
fisubl
fstl
fisttpl
popf
mov
ljmp
push
int3
sbb
idivl
xchg
shld
mov
mov
in
or
jae
mov
ja
loope
inc
cld
mov
mov
pop
or
and
mov
mov
imul
stos
cltd
daa
outsl
jbe
jae
ss
pop
jb
mov
hlt
push
adc
jl
mov
add
loop
inc
outsw
jmp
pop
inc
cltd
mov
cmp
adc
sti
inc
stos
mov
sub
inc
dec
sti
mov
mov
add
xor
jo
ficoml
xchg
pop
push
xchg
cmp
lcall
push
mov
xor
and
in
sub
movsl
cmp
jbe
scas
in
inc
mov
xchg
xchg
push
insb
jne
sahf
js
std
outsl
inc
add
dec
push
std
fimuls
cmp
push
out
pop
mov
cmp
mov
xchg
test
imul
std
cmpsl
jb
fdivr
xorb
or
add
out
rcll
cmp
push
aaa
push
dec
lods
xchg
addb
dec
test
pop
insl
insl
sbbl
arpl
dec
lahf
jae
or
jbe
mov
add
mov
decb
insb
mov
inc
cmpsl
mov
and
push
mov
xchg
add
shlb
and
add
jp
dec
push
xlat
addr16
loop
adc
out
mov
inc
push
fsubs
sbb
vpmullw
sarl
dec
dec
int3
inc
push
mov
icebp
inc
inc
movsb
pushf
scas
jns
mov
cmp
call
mov
mov
sbb
xchg
divl
adc
xchg
cltd
faddp
es
jbe
adc
fidivl
mov
aas
mov
sub
lea
xlat
popf
adc
out
push
jnp
cld
adc
icebp
push
lahf
pop
adc
pop
repnz
sbb
shrl
push
fdivr
mov
or
xchg
pushl
pop
iret
mov
sbb
mov
or
xchg
push
sub
orl
out
call
clc
scas
or
xor
add
mov
imul
fsubs
jp
sub
fidivrs
pop
mov
cmp
mov
aad
jnp
cli
scas
aad
ljmp
or
mov
mov
push
sbb
and
icebp
test
add
jp
fnstenv
fsubrs
inc
nop
jmp
xchg
jb
xlat
popa
aam
lea
jb
cmp
xor
cmp
push
shl
faddl
lods
lods
xchg
in
sarb
enter
adc
adc
adc
xchg
add
xorb
pusha
sbb
mov
andb
jl
pusha
xchg
xchg
je
jp
sub
jo
iret
jl
fimull
stos
fidivs
sub
add
arpl
stos
cmc
sarb
pop
int3
pusha
and
mov
nop
movsb
add
sub
add
fstpt
mov
aaa
out
mov
daa
fcompl
cmp
xchg
in
pushf
add
ffree
test
imul
shlb
cltd
mov
sbb
jl
adc
inc
das
outsl
fists
popf
inc
sbb
and
lods
jo
xchg
out
xchg
icebp
loopne
sub
inc
or
bnd
pop
or
sub
inc
sbb
push
mov
add
in
mov
fwait
dec
mov
adc
push
pop
inc
push
inc
jmp
pop
cli
outsb
mov
test
and
mov
fwait
outsb
push
fs
inc
cmp
add
pop
cld
je
push
jg
and
cmp
mov
mov
jb
and
add
mov
popa
mov
popl
pusha
and
dec
pop
pop
test
sub
jge
xchg
xor
inc
ror
test
movsb
test
inc
add
jb
loope
ret
aaa
scas
sbb
jno
cmovle
aad
movsl
stos
xor
call
inc
cmp
pop
lods
jg
pop
jl
or
lods
adc
adc
test
insl
gs
xchg
addr16
sbb
subl
mov
test
test
sub
mov
pop
std
xorb
push
jae
stos
sbb
push
call
bnd
cmpsl
jae
test
mov
mov
cs
mov
jnp
or
jae
sub
enter
and
pushf
idivl
mov
loopne
xchg
popf
mov
lods
xchg
clc
mov
in
and
jnp
out
cmp
lods
aam
add
xor
in
mov
mov
push
test
jo
or
mov
fcmovu
addr16
or
test
adc
incb
xor
xchg
push
in
int3
or
es
pop
inc
mov
sbb
fsts
mov
inc
dec
cwtl
loop
add
movsl
push
clc
loope
data16
jmp
add
leave
sbb
divl
sahf
push
jns
inc
sbb
lgs
jl
xchg
dec
and
cmp
mov
in
in
mov
mov
mov
mov
xchg
cmc
testl
adc
adcl
jecxz
sub
hlt
in
jmp
into
mov
cmp
aad
sub
lahf
mov
push
adc
sar
xchg
cmp
fistl
dec
dec
mov
pop
scas
mov
aad
pop
or
jle
sbb
push
rolb
xor
or
rcrl
stos
adc
pop
fistps
mov
mov
cmp
fwait
mov
mov
xor
aad
xchg
sbb
shrb
lahf
in
cmc
aam
pop
dec
into
add
jo
mov
xchg
mov
inc
jne
pop
test
inc
dec
inc
push
pop
dec
jle
in
int3
repnz
push
cmp
repnz
les
push
stc
xchg
push
mov
das
sar
cwtl
adc
loopne
mov
arpl
dec
adc
sti
cli
adcl
mov
adc
xchg
xor
xor
in
pushl
add
jo
jecxz
lahf
ret
test
lds
push
mov
scas
fldenv
cmp
pop
andl
xchg
xor
or
push
xor
outsb
imul
dec
pop
aam
pushf
jp
mov
cmp
pop
stos
in
loopne
cmp
repnz
xlat
mov
in
in
divb
xor
mov
cmp
movsl
divl
or
pop
repz
mov
inc
sbb
sbb
pop
out
pushf
test
les
dec
iret
incb
cmpl
mov
or
push
in
cmp
aam
outsl
addr16
push
mov
mov
js
movsb
jecxz
iret
aam
gs
inc
cli
ret
inc
pop
ret
es
jl
mov
test
loop
jmp
ss
int3
xchg
xchg
jp
pushf
xor
imul
ja
dec
sahf
or
roll
xchg
pop
ret
mov
aas
sub
sbb
or
sti
lahf
sbb
mov
inc
dec
sub
iret
mov
dec
jne
lret
adc
mov
inc
jmp
sbbl
and
and
out
in
insl
mov
mov
insl
imul
js
mov
push
aaa
fstpl
imul
ret
push
xchg
jmp
shlb
ljmp
mov
dec
mov
push
rcll
popl
inc
sbb
aaa
cmp
pop
pusha
lret
hlt
call
adcb
int
push
jne
xchg
lock
cltd
insl
ss
push
inc
cld
push
sti
xor
xor
stc
loop
jecxz
dec
push
mov
not
adc
aaa
pop
or
out
cmp
inc
aam
lret
cmc
cmp
push
dec
lods
insl
mov
stos
push
sub
jbe
ss
bound
jl
cli
dec
jns
loopne
fstpl
mov
sub
xor
mov
jno
xchg
lods
cli
clc
rcl
xor
mov
pop
push
aaa
enter
sbb
iret
sti
mov
pop
leave
sarb
add
and
aam
cmp
add
or
mov
xor
xor
mov
div
jnp
ror
stos
xor
pop
jns
test
push
imul
hlt
mov
mov
sbb
in
shrl
push
inc
xchg
cmp
out
or
jne
popf
cld
push
add
in
cld
das
sbb
lcall
xor
lock
xchg
sub
cmc
fdivr
mov
addr16
call
rcll
push
mov
hlt
rcl
xchg
mov
cmpsb
mov
cs
je
into
insl
sub
mov
loop
jae
pusha
sub
or
push
ret
lret
sbb
add
adcb
jl
adc
ljmp
imulb
divb
sub
jg
mov
iret
push
pop
inc
test
nop
in
xchg
icebp
lods
test
jmp
sbb
loop
and
fdivrs
popa
roll
sbb
lea
push
sub
xchg
sbb
loope
enter
mov
sub
cwtl
mov
aas
shlb
test
inc
adc
xlat
lods
je
insb
jne
arpl
cli
add
rorl
push
lret
pushf
test
xchg
or
lret
jge
jnp
pusha
and
xor
pop
lret
pop
aad
out
outsl
dec
fbstp
cmc
mov
out
testb
leave
mov
insb
sbb
pop
inc
adc
adc
insl
sbb
mov
pop
add
dec
xchg
fisttps
jge
push
pop
fnstsw
imul
and
into
fsubrl
mov
push
and
mov
dec
sub
mov
daa
lcall
inc
sbb
flds
nop
sub
stos
sti
cmp
scas
or
outsb
out
psubq
ds
sbb
movsb
iret
xchg
mov
xchg
push
outsb
or
ja
and
inc
add
sub
push
sbb
sarb
dec
rorb
outsb
pop
add
inc
mov
add
dec
or
rol
das
dec
adc
aas
push
jno
lret
mov
xchg
les
ficoml
xor
fisubs
popw
nop
mov
out
pop
mov
jb
mov
mov
call
imul
cmp
sub
jp
xor
shll
or
bound
call
mov
xor
xchg
ficomps
mov
aaa
sbb
lock
addr16
aas
dec
xorl
paddw
mov
adc
xor
mov
pop
inc
jnp
inc
sbb
ffree
mov
sbb
dec
push
cmp
cmp
je,pt
mov
adc
pushf
jl
or
inc
imul
push
and
cld
dec
pop
out
jge
pusha
jmp
sbb
jae
fmull
stos
scas
mov
or
pop
ja
sbb
aad
and
lods
je
inc
xchg
mov
stos
cmp
and
pop
icebp
cld
sub
mov
pop
adc
dec
sub
push
pusha
dec
in
xchg
mov
jmp
inc
test
cli
daa
dec
inc
fs
loope
imul
cltd
push
mov
sbb
fidivrl
xor
in
and
bound
pop
in
xor
stos
dec
xor
push
jp
push
pop
int3
adc
shll
dec
cltd
lds
push
test
test
xchg
pop
sub
push
ss
xorl
sbb
mov
iret
ficompl
xchg
cmp
mov
insb
loop
scas
adc
push
sub
sahf
sbb
dec
idivb
test
pop
fs
mov
xchg
push
mov
imul
jns
push
divb
sti
push
out
inc
popa
lock
scas
mov
ljmp
mov
out
sbb
xor
dec
mov
popf
push
mov
mov
jnp
inc
jns
push
sbb
add
xchg
mov
lods
and
ja
sub
test
fcoms
popf
pop
cli
loopne
inc
js
test
shll
dec
inc
add
xor
mulb
cld
sbb
mov
jge
faddl
adc
mov
cli
sbb
shll
roll
jb
in
push
cmp
insb
cmp
dec
sbb
mov
fsubs
stos
mov
inc
aas
dec
pop
rep
scas
mov
xchg
mov
xchg
loopne
inc
push
xor
mov
sbb
daa
and
jl
dec
cmpsl
shr
push
shrl
loopne
dec
xchg
negl
or
test
movsbl
inc
push
sub
mov
cmc
or
inc
test
mov
push
cmpsb
aas
imul
xchg
lds
pop
jmp
jecxz
or
or
fsubr
push
testl
push
loope
and
in
movsb
pop
lods
inc
sbb
add
push
ja
jge
aam
idivl
xor
push
mov
repz
pop
xchg
jno
inc
inc
mov
xchg
dec
imul
int
push
sub
loope
int3
push
fwait
jno
cmp
mov
fiadds
and
mov
das
std
push
mov
insl
cwtl
jo
ds
adc
enter
stos
and
pop
xor
roll
push
jo
int3
xor
out
jo
mov
mov
xchg
or
sbb
xorl
outsb
pop
scas
ret
mov
gs
outsb
jl
stos
shlb
jecxz
mov
test
daa
mov
psubsb
mov
pop
and
rcrl
xchg
or
jg
push
and
mov
dec
xchg
fidivl
outsl
cmp
sub
dec
mov
jae
and
xor
dec
dec
xchg
inc
sub
lahf
dec
cwtl
aad
sbb
mov
xor
pop
fwait
add
mov
lock
mov
jl
cld
scas
and
dec
psrlq
int3
mov
movsl
jmp
stos
gs
or
jo
mov
xlat
movntps
xorl
scas
shll
push
pop
dec
add
xchg
pop
inc
in
mov
test
and
scas
push
lret
ret
cmpb
jo
test
outsl
js
dec
iret
xorl
mov
mov
xchg
or
call
loopne
dec
cmp
imull
mov
mov
dec
jp
adc
cmc
cmpb
ret
sbb
test
out
mov
ret
jbe
jp
push
pusha
xor
sub
fwait
repz
push
cmp
mov
dec
xor
adc
jae
loope
push
bswap
mov
or
fdiv
ljmp
xor
subb
or
pusha
outsb
push
pop
pushf
nop
mov
inc
in
cmpsb
mov
push
dec
xorb
sub
cmpsb
jb
and
push
jno
sbb
mov
jnp
jb
xchg
pop
sbb
sbb
push
arpl
xchg
popa
mov
lock
rorl
dec
pop
jg
inc
ja
sarl
lret
lock
jb
je
cs
and
or
mov
cmp
mov
mov
push
xchg
test
fwait
cmpsl
and
sbb
insb
aam
mov
lock
add
je,pt
cmc
mov
mov
dec
sbb
mov
mov
cmp
scas
stos
sub
mov
imul
mov
in
dec
xchg
inc
push
cmp
xor
add
push
sub
fisttpll
mov
insb
lock
or
sti
mov
lcall
pop
in
push
in
orb
std
and
sub
push
insb
clc
je
xor
in
loope
fucom
cmpsl
mov
mov
pop
xchg
into
lock
aas
jge,pn
push
insl
repnz
insl
cmp
inc
gs
mov
add
sub
movsl
jmp
fdivrs
imul
mov
adc
aam
add
inc
pop
push
rorb
inc
or
dec
cmp
jbe
mov
dec
xor
or
hlt
stos
inc
aad
cmc
push
mov
movsl
ds
mov
cmp
shlb
cwtl
gs
inc
cmpsl
and
fsubs
sbbb
rcll
mov
ret
outsb
aam
add
fisttpl
iret
and
or
xchg
mov
shl
mov
cmp
loop
in
call
arpl
iret
inc
mov
cmp
inc
out
scas
pop
inc
cmp
aam
push
xchg
lret
lods
push
shlb
insl
test
xor
in
jno
cld
enter
addr16
into
popf
or
jne
mov
mov
xor
xchg
jge
cmp
pop
rcr
sbb
sarb
ljmp
shrl
popa
dec
mov
aad
cwtl
lret
fcoms
mov
mov
js
addl
popa
pop
in
dec
les
imul
xchg
mov
jge
loope
es
call
loopne
lock
mov
and
xchg
mov
js
mov
jmp
pop
fidivrs
out
shll
mov
jge
mull
pop
dec
jno
in
dec
les
loop
in
int3
or
leave
movsw
mov
mov
dec
ljmp
or
shrb
mov
bound
and
rorb
add
popf
leave
sub
pop
push
cmp
add
xchg
out
mov
loope
outsb
loope
cmc
out
jmp
js
stc
insl
inc
mov
push
addr16
repz
data16
xchg
lds
aas
rorl
lods
mov
sahf
lock
sub
repnz
rclb
add
or
fisubl
pop
insb
mov
in
xor
mov
or
push
inc
jbe
jecxz
aad
int3
psllw
sub
int
jecxz
push
cli
idivl
pushf
in
insl
andb
mov
mov
cmpsb
orb
mov
jns
mov
adc
adcb
sub
inc
sti
cltd
iret
cmp
sarl
mov
or
cmp
int3
or
add
or
cmp
mov
cld
add
repz
sbb
fdivrl
xor
arpl
dec
or
xchg
adc
add
call
icebp
push
pop
pop
pop
and
stc
and
test
repnz
mov
adc
add
inc
lock
shll
push
enter
ds
in
mov
push
add
movsb
mov
push
adc
fdiv
inc
mov
stos
inc
test
ret
or
pop
jge
icebp
push
mov
lea
pop
add
mov
push
insb
iret
movsb
mov
push
sbbl
or
in
lahf
test
into
and
inc
and
cli
mov
decl
cmp
jo
fs
add
sahf
xor
lock
adcb
js
xor
push
jnp
subb
inc
inc
fcoml
idiv
stos
jae
inc
sub
add
push
leave
add
dec
roll
cli
je
lea
inc
add
xor
xchg
lret
es
sti
sbb
dec
addr16
pop
pop
mov
sarb
jmp
xchg
pushw
mov
push
ret
sarb
adc
xchg
icebp
mov
leave
add
popf
jnp
movsb
inc
es
dec
fdivrl
rcrl
mov
sub
je
das
cs
mov
mov
rol
js
ja
mov
mov
pop
and
hlt
xchg
cmp
mov
inc
test
test
add
sub
mov
cltd
or
into
pop
mov
xor
ret
inc
xor
xchg
mov
arpl
add
aam
sarb
pop
push
and
pop
xchg
das
pop
add
rdpmc
mov
je
jne
rclb
cltd
out
fs
clc
arpl
push
int
popa
mov
pop
ret
loop
dec
push
pop
xchg
fcompl
dec
cmp
pop
cld
neg
ljmp
jnp
sbb
or
cld
cld
mov
bound
push
cmp
jle
icebp
sbbl
mov
fs
and
inc
fldenv
inc
orl
cmp
sti
push
pop
fsubl
out
pop
xor
mov
ljmp
stos
push
mov
stos
out
cmp
fstpt
mov
mov
cmc
mov
pop
pop
sti
cmp
push
xor
pop
stc
sub
ja
hlt
mov
flds
addr16
repz
pushf
repnz
or
les
mov
data16
in
or
fcoms
or
lods
push
inc
lahf
cli
jne
fnsave
jle
js
and
shlb
test
cmp
pop
lret
dec
ja
jns
mov
add
hlt
xchg
jae
push
mov
insb
add
add
fcoms
mov
ss
int3
neg
bound
cmpsb
or
mov
cmp
mov
fisubs
push
sub
inc
inc
fmul
adc
xchg
inc
pop
xor
push
negl
mov
cmpsb
scas
pop
dec
adc
dec
ret
add
lods
or
adc
push
jno
xor
fstps
roll
xorl
jo
daa
mov
call
sbb
xlat
or
arpl
inc
cli
adc
out
push
std
inc
stos
hlt
xor
pop
xor
add
xor
movsb
xchg
divb
xchg
fadds
dec
push
dec
sub
jno
out
add
adc
pop
pusha
fimull
dec
push
aas
lcall
sub
adc
sbbb
int3
ret
shlb
xor
negl
push
mov
cli
lcall
jge
and
jge
pop
aad
xchg
test
shll
popf
sub
das
in
dec
mov
jl
and
xlat
push
jae
pop
cmovg
fildll
mov
sub
icebp
jo
shll
fidivrs
adc
arpl
xchg
loop
in
scas
jmp
pusha
loopne
inc
xlat
or
iret
ss
dec
addb
lret
stc
sahf
sti
loop
xor
fucomip
mov
popf
xchg
pusha
push
xlat
scas
out
sbb
dec
sbb
hlt
notb
jp
mov
ror
es
or
lret
enter
sub
enter
push
pop
and
ja
mov
adc
or
scas
dec
dec
push
arpl
jecxz
insb
jbe
sub
cmc
mov
dec
dec
jno
stos
sbbl
push
xchg
scas
xorl
pop
sahf
dec
mov
push
sub
jle
rolb
mov
popf
adc
fs
popa
loop
dec
aam
outsl
xor
loope
xchg
cmovnp
mov
cwtl
sub
cld
pushf
mov
inc
inc
fwait
js
inc
inc
jmp
outsb
rcrb
rcr
pop
pop
pop
jecxz
lea
repnz
jb
push
sub
jno
scas
icebp
bound
mov
pop
xchg
xchg
in
iret
ss
mov
loope
adcb
push
jp
cmp
push
pop
dec
pusha
cltd
ja
loope
pop
mov
test
jne
sbb
pop
rclb
repz
pop
lcall
std
loopne
adc
inc
outsl
pop
sbb
clc
cmp
jge
mov
jnp
aaa
lock
add
sub
lds
loopne
pop
mov
jge
mov
and
mov
aas
mov
xchg
mov
push
scas
inc
push
loope
xor
lods
lcall
or
and
add
push
and
cmp
sub
push
scas
ja
js
sbb
or
neg
mov
add
arpl
imul
mov
es
mull
out
and
mov
popf
movsb
sub
sbb
mov
jb
mov
jmp
je
add
mov
sbb
pop
je
out
pop
sar
inc
bound
aad
xor
cmpsl
inc
lock
mov
mov
mov
sub
and
inc
xchg
int
popf
inc
icebp
cmpsl
jp
test
cld
enter
enter
mov
lock
lret
pop
mov
std
arpl
sub
dec
jns
imul
and
adc
ja
xor
sub
mov
rol
mov
cltd
jb
jl
jb
jecxz
bound
ja
ret
rorl
sub
dec
or
cmc
inc
rcrl
or
outsl
jmp
popa
inc
xor
jecxz
lahf
stos
mov
push
int
pop
add
sarl
push
jae
pop
mov
andb
jnp
mov
mov
aam
lods
shl
or
or
cs
xchg
push
lock
pop
inc
stos
lcall
cmp
add
popf
ret
push
xor
dec
push
push
int3
cmp
pop
mov
sub
or
push
xor
sbbl
cmp
cmp
jg
sbb
incb
mov
popaw
xor
jnp
adc
rclb
mov
lahf
push
and
fidivl
es
popf
rcll
sub
mov
fwait
pop
fmuls
into
gs
and
test
pushf
and
nop
xor
mov
dec
ret
and
inc
out
push
inc
les
inc
cmpsb
add
cmp
sub
test
xchg
adc
test
sti
xchg
loope
push
decl
popf
pop
dec
cmc
add
xchg
jle
scas
bound
loop
ret
cwtl
cmp
xchg
popa
je
sub
xchg
std
xor
xor
sarb
fdivrl
scas
sub
mov
push
popf
mov
xchg
xorl
ret
mov
xchg
bnd
xor
sub
dec
push
cmp
cmp
push
mov
mov
xor
iret
dec
insl
stc
sub
std
sbbb
loope
ret
call
push
lahf
lahf
push
push
cwtl
inc
add
cmp
push
shrl
je
dec
data16
jbe
test
jle
aas
jno
inc
dec
imul
cs
pop
and
push
call
mov
fwait
jl
mov
push
sti
sub
dec
inc
inc
pop
dec
inc
dec
push
test
ds
bound
ja
adc
mov
jmp
aam
xlat
jg
rorl
or
cs
in
xor
ret
push
push
pop
fwait
mov
mov
stos
rorb
stc
ret
cmp
pushf
icebp
mov
fwait
and
insb
dec
imul
mov
insb
mov
push
jnp
test
mov
pop
jg
mov
rcrl
push
dec
xlat
adc
ffreep
mov
push
xchg
iret
mov
mov
repnz
pop
inc
mov
sahf
jbe
dec
pushf
sub
cmp
das
xchg
in
fstp
jo
in
movsb
jmp
jecxz
lods
xchg
add
pop
ss
addr16
mov
hlt
adc
dec
or
mov
jl
aaa
lock
clc
push
jnp
lret
dec
je
outsb
enter
xor
jle
inc
addps
xorl
enter
mov
inc
and
loope
pushf
sbb
add
stos
inc
jno
shl
pop
or
push
pop
mov
test
lcall
jae
clc
adc
mov
rorb
je
adc
mov
pop
sarb
pop
cmpsl
cmp
gs
les
xlat
in
hlt
fistpl
fisubs
mov
push
or
dec
scas
jmp
sub
xchg
pop
adcl
mov
dec
jle
dec
jmp
sti
sub
popf
popf
pop
addr16
push
test
addps
ss
inc
pop
loope
lret
mov
cmp
mov
xchg
imul
test
std
cli
lods
in
mov
out
or
sub
and
popa
fldt
jo
idivl
sub
push
jns
mov
inc
mov
mov
jecxz
jns
hlt
or
and
in
sub
add
cli
sti
inc
out
cmc
sub
adc
lock
lods
push
rorb
or
push
sub
adc
jl,pt
arpl
pop
int
mov
dec
xlat
int3
loope
or
ret
in
xor
inc
imul
int
mov
cmp
sbb
shll
pop
jmp
fldl
bound
inc
push
mov
mov
lret
clc
nop
inc
mov
out
negb
inc
dec
sbb
es
or
adc
test
loop
ret
lods
inc
pop
add
paddb
outsb
dec
int3
and
xchg
push
stos
out
or
push
xchg
lds
xchg
add
lods
jg
dec
stc
xorb
dec
dec
xor
cmpsb
subb
out
mov
aad
stos
bound
je
mov
gs
jmp
je
shl
push
sub
imul
jbe
fstps
cmpsl
or
xchg
inc
push
je
or
pop
pop
mov
stos
pusha
and
cmpsb
pop
mov
aaa
mov
jnp
adc
xor
and
mov
test
xor
arpl
std
arpl
push
loop
mov
imull
aad
mov
in
xor
lock
fwait
ret
cmp
push
and
or
fwait
pop
cmp
sbb
xchg
daa
dec
loopne
cld
push
push
cmp
ja
mov
xor
in
xchg
sahf
into
ret
jg
mov
adc
adc
jo
jge
repnz
push
int
stos
mov
inc
push
mov
pop
mov
out
xchg
xor
add
rorb
inc
scas
jl
repnz
cmc
jb
add
push
jl
push
pop
mov
int3
inc
into
movsl
movsb
mov
les
movsb
aad
shl
xchg
out
mov
lods
cmc
stc
push
data16
jnp
into
mov
std
mov
pop
dec
js
bnd
mov
pop
ljmp
das
pop
add
fsubl
and
inc
scas
inc
mov
sub
shrl
mov
pop
loope
out
frstor
pop
mov
int
mov
dec
xor
cli
mov
sbb
push
xlat
pop
mov
setns
xchg
jecxz
out
xor
push
mov
insb
or
ret
xor
test
and
pop
pop
xchg
test
sbb
jmp
dec
dec
push
add
mov
mov
mov
sti
hlt
outsb
data16
xor
and
push
jle
dec
mov
test
xor
enter
in
cmp
icebp
push
fxtract
dec
cmp
jo
imul
mov
mov
and
push
in
fsubrs
pop
mov
cmp
inc
pop
out
std
cltd
inc
push
xchg
cmpsb
into
hlt
stc
add
aam
mov
faddl
cmc
cmpl
sahf
push
xor
ds
xchg
jo
mov
test
jne
jg
ja
mov
gs
cmpsl
add
push
jns
mov
cmp
dec
xchg
imull
sbb
cmc
xor
stos
clc
mov
std
xchg
out
and
fistpll
negl
cld
stos
daa
outsb
inc
movsb
aad
cmpsb
jle
cmp
pop
inc
or
xchg
and
scas
arpl
dec
idivb
filds
fdiv
dec
sahf
add
adc
call
adc
jmp
jae
mov
mov
xchg
les
xchg
fldl
repnz
pusha
or
jae
xor
cmp
in
xchg
cwtl
and
mov
xlat
rol
in
or
cmp
sbb
hlt
popa
cmpsb
pop
sti
lods
inc
scas
stc
aad
mov
out
nop
insb
xchg
insb
hlt
and
inc
fistl
stos
rorl
mov
fwait
inc
xchg
dec
mov
out
sub
loopne
pop
pop
ja
pop
pusha
in
fdivs
pushf
stos
das
sub
nop
push
dec
lret
popf
int
data16
in
lret
pop
out
mov
and
dec
std
and
popf
inc
insl
dec
inc
imul
cmp
push
cld
xor
clc
lret
mov
scas
fdivs
pop
cmp
xor
int
and
mov
movsb
es
sti
xchg
mov
xchg
and
inc
jl
jl
and
xchg
jmp
dec
push
faddl
ljmp
arpl
mov
jb
and
fwait
fwait
sbb
cmp
sbb
jg
sub
cli
lahf
call
pandn
and
inc
imul
cltd
lea
pop
fldl
xorl
inc
mov
movsb
pop
mov
movl
lahf
mov
mov
mov
in
loop
rcll
rcll
mov
xlat
test
lock
dec
xor
sbb
dec
pusha
jns
loopne
lods
dec
fcomps
push
xlat
testb
xchg
icebp
into
rcrb
adc
mov
dec
data16
inc
dec
add
test
adc
sbb
loope
imul
mov
jp
cwtl
in
pmuludq
xor
and
xor
mov
inc
insb
movsl
push
rolb
popf
or
and
xchg
std
xor
mov
nop
out
mov
sub
mov
test
test
xor
jle
mov
mov
push
and
ljmp
rorl
lods
pop
fnstcw
add
jmp
test
test
mov
nop
jnp
dec
and
pop
flds
push
or
test
and
leave
cmpl
imul
lcall
jne
cltd
adc
mov
mov
and
and
sub
hlt
lea
aas
fimuls
dec
cmpsl
int3
xlat
sbb
out
and
shrb
in
sbb
sbb
test
ljmp
jne
sbb
mov
les
mov
shll
out
cmpsb
push
jbe
mov
jmp
inc
dec
adc
jle,pn
js
out
or
shlb
enter
repz
rorl
jl
cmp
repnz
cltd
sbb
imul
sbb
dec
adc
mov
dec
cs
jecxz
push
pop
mov
rcr
incb
mov
into
mov
push
bswap
pop
outsb
mov
push
jge
das
pushf
adcl
dec
enter
xchg
ljmp
adc
inc
cld
movsl
jge
inc
lea
inc
loopne
shll
or
and
xchg
dec
imull
call
inc
adc
xchg
fstpt
ds
cs
mov
icebp
push
lcall
mov
lret
out
fwait
or
lock
xchg
loopne
clc
mov
inc
cli
into
mov
xorb
lock
jmp
fst
cmp
inc
mov
push
push
rorb
call
incl
in
fcompl
mov
out
mov
ljmp
out
in
sbb
pop
sub
fistpll
or
mov
mov
gs
xor
push
dec
les
cmpsb
test
stos
movsl
xorb
out
lods
sbb
pop
pop
mov
outsl
sarb
push
inc
inc
mov
jecxz
mov
daa
xor
pop
xor
sub
adc
out
and
out
notl
xchg
mov
xor
and
pop
je
mov
setbe
adc
movsl
fwait
loope
ja
in
push
enter
dec
jbe
pusha
aad
dec
pop
cmc
mov
fdivrl
call
mov
adc
adc
and
mov
aad
leave
sbb
lahf
xlat
shlb
sbbb
test
inc
and
sbb
movsl
dec
mov
fiadds
xor
jg
or
dec
inc
or
pop
clc
adc
adc
sub
outsb
push
add
in
cmp
mov
cmp
adc
in
pop
xchg
add
adc
pop
push
xor
fcomi
imul
jne
cmc
inc
pop
ds
loope
loop
icebp
and
es
inc
xor
out
pop
stc
pop
inc
mov
inc
inc
inc
add
push
push
out
into
imul
out
decl
cmp
jbe
mov
xchg
fisubl
inc
popa
xchg
inc
pop
shlw
pushf
mov
push
xchg
mov
imul
lret
dec
adc
inc
and
pusha
jne
mov
lds
add
jns
pop
in
mov
lret
jg
dec
filds
and
push
repz
push
pop
pop
mov
or
mov
adc
pop
ds
rclb
in
aad
cmpsb
addr16
aas
out
insl
adc
sarl
mov
lock
and
dec
add
cmp
push
inc
cmpsb
xchg
mov
dec
imul
movsb
jno
das
xor
lock
jo
or
mov
mov
adc
out
sbb
fcmovb
fwait
lds
push
icebp
outsl
adc
inc
sub
xor
aaa
insb
pusha
arpl
cli
sbb
xchg
je
inc
inc
sub
ret
lahf
gs
jo
jmp
jge
loop
xor
sarl
sahf
bound
notl
sub
out
or
adc
adc
pusha
inc
inc
jp
jo
data16
popa
into
mov
push
loopne
or
push
cmp
std
xchg
pop
or
pop
jne
outsl
popf
sbb
repnz
push
or
mov
test
aam
add
sbb
pop
jne
insl
dec
add
jns
jae
testl
nop
pop
lcall
mov
stos
cld
sub
popa
pop
lea
mov
je
inc
dec
or
lcall
mov
mov
sbb
or
testl
jp
fmull
clc
mov
stos
xchg
xchg
xor
repz
dec
and
inc
out
pop
mov
lahf
js
dec
loope
cmp
dec
and
sub
cmp
movsb
fcomip
or
or
or
emms
dec
mov
mov
xor
cld
aam
cmpsl
in
xor
push
out
cmpsb
aam
ljmp
sub
and
adc
add
inc
add
cli
subl
cmp
movsb
jg
push
add
pop
xchg
insl
sbb
shrl
sub
popf
ss
add
mov
aaa
lret
cmp
repnz
sub
or
push
rcll
cli
jno
fdivl
hlt
out
jns
cmc
jbe
inc
xchg
push
push
push
pushf
inc
outsb
push
jl
leave
rorl
sub
push
cmp
mov
mov
xor
out
out
adc
mov
jne
xlat
roll
enter
xchg
inc
imul
add
pop
ret
mov
jb
pop
stc
leave
mov
push
pop
scas
or
into
mov
out
jnp
and
add
cmpsl
adc
xchg
divb
mov
jmp
lahf
in
stos
push
and
sub
stc
mov
aad
xorb
movsb
js
pop
out
sti
jb
popf
push
adc
dec
mov
outsl
hlt
sbb
imul
ror
and
movsb
pop
fsubrs
mov
lahf
data16
xchg
jo
ret
xorl
or
adc
or
call
ud1
cmp
or
leave
rcrb
or
xchg
out
push
pause
ss
cmp
xor
cli
push
lock
sbb
pop
aaa
push
loop
mov
inc
lock
dec
bound
in
dec
cmp
dec
sahf
jbe
pusha
pop
pop
push
and
sub
cmp
loopne
pop
mov
lret
add
testl
int3
fistl
sbb
mov
dec
flds
sbb
push
aad
push
lods
out
pop
mov
xor
dec
adc
pop
stos
jo
scas
mov
insb
add
push
xor
inc
cmp
mov
lea
and
sbb
fsubs
popa
push
lock
testb
cmp
cmpsl
fcomi
jbe
and
cmpsl
divl
cmp
lock
fstl
and
addr16
mov
mov
nop
int
push
dec
sti
xchg
sbb
clc
mov
mov
fldcw
ss
jnp
inc
call
jbe
or
push
xchg
mov
in
inc
pop
insl
adc
imul
pushf
xorps
cmp
pop
in
ret
sbb
pop
mov
pushf
sbb
xorb
rcll
push
and
enter
mov
mov
clc
lahf
pop
out
leave
dec
sahf
cmp
push
fdivl
addl
loop
mov
inc
sub
push
test
rcrb
les
xchg
sbb
enter
mov
or
push
jbe
shrl
aas
sub
inc
out
mov
nop
mov
fwait
out
arpl
neg
xor
lods
scas
repnz
sub
loope
sub
sub
repz
lcall
in
lods
lahf
daa
test
xlat
add
scas
addr16
test
sbb
aam
xor
push
aas
repz
dec
sub
jae
nop
sbb
xor
or
sub
dec
ret
add
lahf
cltd
inc
repz
mov
cmp
mov
push
adc
cwtl
test
outsl
pop
xchg
setns
or
jae
pop
cwtl
shll
cmpsl
sub
mov
fcmovb
in
outsl
pop
repz
arpl
or
das
popa
les
jno
popf
daa
rdmsr
mov
and
inc
pop
cld
mov
iret
inc
jg
add
jae
fucomi
push
dec
leave
and
lea
lcall
notb
or
push
scas
jl
arpl
mov
adc
pushf
enter
ljmp
jno
inc
arpl
hlt
pcmpgtd
sbb
and
mov
repnz
std
mov
jl
sahf
loop
test
pop
cmpl
inc
sarb
jnp
pop
out
xchg
push
shlb
mov
std
cmp
lods
mov
pusha
faddl
xchg
leave
dec
insl
rorl
fsubl
jge
dec
mov
xchg
inc
aad
adc
push
cmp
stos
arpl
or
movsl
jns
push
and
in
lock
jno
inc
int
fnstsw
clc
mov
loop
jns
xor
sahf
aaa
inc
jno
fildl
andl
xor
and
dec
das
xor
sahf
xchg
inc
jmp
rcrl
ret
int3
cmp
lret
xor
dec
add
mulb
sub
icebp
adc
and
mull
fdivr
and
fsubrs
push
test
adc
clc
fimull
push
xchg
fcomp
push
js
movsl
push
es
add
je
inc
into
cmp
pop
pop
adc
je
popf
ss
jbe
fsubrs
cmp
cmp
rol
adc
xor
stc
adc
stos
call
rcll
ljmp
jns
aad
hlt
or
cld
popf
stos
adc
fs
shlb
and
mov
or
clc
push
mov
stc
push
jne
lcall
aad
add
imul
push
push
jae
and
or
mov
sahf
adcb
stos
insb
mov
pop
mov
les
push
push
into
and
cli
sub
xor
push
mov
jnp
rcr
jl
push
sbb
movsb
xlat
cmc
inc
or
xor
inc
cmpsl
push
jp
pop
sar
mov
and
popf
xor
mov
sub
out
pop
mov
push
clc
sub
push
roll
or
jmp
mov
jne
test
inc
mov
lret
loope
lods
inc
or
mov
cld
jl
cmp
mov
inc
xor
jo
dec
sar
das
shrl
sbb
push
or
xchg
push
pop
ficoms
repz
push
in
sarb
test
xchg
mov
jecxz
xor
test
stos
sub
gs
push
xchg
mov
aaa
xchg
test
into
adc
push
or
pop
fimull
pop
dec
int3
in
mov
rcll
nop
loopw
sub
daa
dec
gs
pusha
lods
imul
loop
lahf
stc
shlb
jbe
pop
fs
push
cmpsl
scas
push
dec
pop
dec
sub
pop
test
dec
mov
cmc
cmpsl
or
pop
inc
cltd
jp
out
cmpsl
inc
bound
adc
mov
aaa
cmp
lds
xor
stos
fsub
mov
fisubrs
mov
sub
jge
lahf
ficomps
ffreep
lret
pop
ja
call
pop
cmp
adc
cmp
sub
decb
push
incb
push
int
push
ficoms
jecxz
and
mov
out
sbb
test
sub
or
jnp
push
mov
out
or
jg
pop
movsb
psrlq
test
xlat
add
sub
sub
mov
test
ja
push
jo
sahf
addr16
mov
jno
movsl
mov
int3
mov
fnsetpm(287
sub
rol
inc
and
inc
in
inc
push
outsb
jo
pop
xor
lcall
ds
je
cmc
nop
jnp
pushf
add
cmp
int
cmc
lock
aam
xor
adc
push
mov
and
test
sbb
jno
lret
scas
xchg
mov
push
adc
push
mov
cmp
pop
sbb
loope
jnp
xlat
and
adc
test
aaa
int
and
sbb
jle
sbb
fwait
sbb
xor
fstl
sbb
dec
xchg
xor
add
adcb
add
mov
out
add
add
jo
lds
sbb
out
mov
cli
add
xchg
xchg
jl
idivl
mov
cltd
and
out
push
movsl
pop
xchg
int3
cltd
repnz
inc
js
fldl
in
cmc
sbb
in
xor
imulb
mov
mov
lods
dec
insl
das
sub
mov
lcall
lret
imul
and
repz
push
sbb
out
mov
inc
nop
rorl
cs
cmc
dec
enter
mov
shr
scas
mov
pop
and
movsb
es
out
test
push
inc
mov
push
adc
movsl
cwtl
pop
xchg
clc
aam
loopne
cmp
inc
cmpsb
jae
ljmp
ss
addr16
jmp
fdivl
jge
push
data16
dec
pop
cmp
adc
cmp
popl
lods
pop
pop
inc
test
nop
ret
mov
mov
ss
mov
pushf
sqrtps
and
ret
js
test
loopne
mov
out
xor
or
push
cmpsl
push
pop
insl
xchg
jle
lds
jbe
sbb
push
mov
jno
pop
push
sub
sbb
into
ss
clc
fistpl
cmp
push
mov
out
loopne
fiaddl
lret
arpl
dec
jmp
cli
test
rclb
pop
inc
hlt
mov
add
ja
cmpl
insb
xor
xor
lock
out
mov
inc
fidivrs
fnstenv
bound
iret
fidivrl
cmpb
adc
shll
pop
nop
pop
je
or
pop
inc
lahf
insb
sahf
cmc
inc
aam
test
je
leave
sub
pop
adcb
popa
mov
int3
mov
leave
aad
sub
leave
mov
dec
hlt
mov
jle
inc
mov
inc
lcall
adc
cmpsl
mov
dec
jo
jmp
sti
and
outsb
decl
imul
bnd
cmp
mov
icebp
gs
sub
mov
push
mov
push
imul
and
adc
in
js
push
mov
jo
call
fwait
inc
sbb
mov
xchg
lea
xchg
outsl
and
dec
pop
cmp
inc
mov
iret
sub
push
es
outsb
out
mov
popf
jp
xor
push
jmp
add
mov
jmp
sbb
pop
gs
fcoms
inc
lea
sub
xor
add
ret
fwait
dec
mov
cmp
push
xchg
inc
adc
dec
movsl
aad
mov
cmp
cmpsl
sti
ljmp
xor
mov
adc
je
mov
jg
in
je
add
ljmp
testb
mov
incl
arpl
push
and
and
xor
mov
into
adc
mov
lcall
mov
and
insl
jmp
lcall
sub
mov
shll
lock
fiaddl
mov
mov
or
add
add
adc
pop
adc
out
shll
cs
sub
hlt
cmp
lods
bound
jp
jb
mov
sbb
mov
push
test
shrb
pushf
popa
dec
ss
ds
sub
xor
aaa
mov
jno
std
mul
push
imul
mov
dec
sub
and
mov
fdivrs
add
xchg
xchg
aad
jle
mov
inc
push
jg
sbb
push
fisttpl
pop
scas
daa
mov
rcl
adc
and
sti
jmp
in
movsl
push
ds
stos
lods
es
out
cs
push
out
pop
sub
and
push
push
xchg
ljmp
mov
imul
pop
mov
xchg
fstpl
cs
repz
sub
lahf
mov
stos
inc
fidivl
inc
cmp
test
insl
enter
fildll
daa
push
mov
mov
mov
jmp
mov
mov
iret
xchg
test
pop
and
xchg
pop
sbb
cmp
div
scas
test
jl
sub
fstsw
stos
hlt
dec
jb
xchg
sbb
aam
xor
test
sub
jbe
inc
xchg
iret
lcall
cmc
cmp
dec
mov
and
out
repz
push
stos
xor
fdivr
push
movsl
xor
inc
push
bound
mov
pop
pop
pop
negl
xorb
rol
pop
popa
jle
in
mov
or
es
ror
cmp
or
mov
sub
xchg
and
push
xchg
mov
lcall
mov
in
push
pop
insb
clc
mov
shlb
fs
and
cmpsb
int
xorb
loope
jle
jo
xchg
jno
inc
sbb
in
add
add
mov
movsl
dec
sub
stos
mov
cmp
push
popf
stc
push
cwtl
inc
sbb
mov
shr
xchg
add
cmove
cli
push
cld
lret
adc
lock
inc
daa
inc
scas
loop
push
xor
add
leave
ljmp
dec
cmp
xchg
int3
test
xor
cmpb
repnz
cli
inc
add
aaa
ret
ja
jg
inc
iret
popf
push
in
mov
mov
nop
and
xor
es
cmpsl
cmp
notl
setnp
push
shlb
jecxz
adcb
sbb
fmul
les
fildl
in
les
adc
jl
fwait
and
or
pop
out
and
mov
daa
or
jmp
jnp
stos
fimuls
shrl
and
mov
push
xor
add
sbb
clc
sahf
dec
mov
int
add
push
repz
addl
fimull
jmp
fwait
cmc
dec
lahf
pop
enter
fiaddl
dec
aaa
sarb
arpl
mov
call
stos
and
dec
sarl
inc
out
push
jle
adc
jae
pop
out
adc
inc
test
mov
sarb
xor
cmp
daa
inc
bound
dec
or
aad
mov
cmpsb
inc
and
xchg
test
clc
adc
popa
int
pop
mov
and
stos
lcall
mov
aad
and
fisubrs
mov
mov
loope
sub
stc
mov
shrb
mul
xor
push
push
push
nop
adc
movsl
pmullw
subb
or
fisttpll
add
test
out
addr16
push
out
pop
int3
or
dec
inc
fcomps
add
jbe
adc
stc
sbbl
cmp
jb
ds
mov
outsl
jmp
dec
mov
data16
daa
jge
hlt
dec
inc
add
xlat
dec
lods
notl
or
sub
mov
sbb
adc
lret
imul
xor
in
jecxz
push
push
adc
hlt
pop
and
out
cmp
outsl
lods
ffree
xor
or
jg
pop
dec
adc
xor
mov
jl
push
mov
inc
sub
out
jl
scas
pop
jae
xchg
adc
fidivrl
jne
mov
in
in
ds
pusha
mov
mov
movsl
scas
cmp
lret
loopne
and
mov
mov
insb
xor
shr
jle
mov
push
std
shrb
adc
and
insl
test
or
mov
xor
or
inc
incb
js
data16
iret
testb
lods
jno
leave
or
jmp
mov
lret
adc
xchg
or
pusha
inc
mov
movsl
and
insb
jno
sbb
ret
push
leave
dec
mov
cmp
lods
jge
cmp
leave
cwtl
sbb
popf
xchg
sub
jecxz
jle
sub
fcomps
shrl
push
jno
xchg
enter
xlat
push
mov
mov
cmc
mov
xor
sub
pop
sub
cmc
out
xor
sbb
bound
dec
mov
pop
icebp
jmp
testl
or
cmp
jb
icebp
test
pushf
and
fimull
fcmovnu
subb
cmp
mov
fadd
jl
lds
pop
test
in
dec
pop
lcall
aas
test
shll
pop
sub
insl
out
ja
mov
inc
lods
mov
and
adc
out
inc
stc
mov
int3
repz
out
pusha
pop
out
mov
outsl
loop
mov
fs
data16
jp
sbb
sahf
dec
jl
mov
repnz
bound
add
outsl
jge
inc
insb
dec
cmc
pop
mov
jno
add
dec
fwait
andl
popf
push
add
cmp
mov
fnstsw
iret
mov
clc
popf
or
mov
leave
mov
sbb
test
ficomps
xor
jge
fs
fdivrs
imul
push
jns
jo
daa
arpl
dec
popa
mov
cmp
mov
insb
outsl
es
out
lods
mov
xchg
fucomip
mov
push
add
mov
xor
sbb
or
loopne
jno
mov
pop
test
test
push
in
xchg
cmc
lcall
and
out
or
mov
lret
dec
and
jle
push
jmp
aam
icebp
adc
and
lock
lds
and
out
ret
in
dec
lock
dec
sti
mov
mov
movsb
inc
xorl
sbb
outsl
outsb
lret
shll
int
add
fadds
sbb
mov
scas
pop
jno
push
daa
fidivs
inc
cmc
cmpsl
sbb
ret
aam
ret
add
aad
sbb
test
jmp
inc
sar
jmp
pop
gs
mul
into
shll
pop
in
ss
iret
mov
rol
dec
pop
mov
jl
or
sub
and
push
inc
dec
rclb
and
mov
and
mov
imul
sub
ljmp
pusha
pop
stc
mov
pop
ret
xor
out
mov
roll
adc
ror
mov
xchg
jnp
dec
mul
dec
sbb
adc
pop
adc
xor
cli
mov
mov
and
adc
dec
add
push
jne
movsl
out
aaa
sub
imul
negl
and
aaa
fimuls
xchg
inc
in
fcomps
inc
dec
xor
adc
js
mov
popf
push
cli
lcall
imul
ss
pop
dec
stc
and
push
stos
pop
in
leave
in
ret
test
xchg
out
je
loopne
arpl
pop
jmp
lods
into
or
addl
lods
hlt
and
pop
push
inc
push
dec
mov
repz
sbb
mov
fldcw
cmp
aad
push
xchg
loope
adc
jp
jb
mov
imull
fisubs
lods
cli
jbe
add
add
inc
xor
inc
inc
mov
fsubrl
inc
pushf
mov
sub
mov
sub
sub
rol
notl
insb
adc
sub
cli
stc
mov
es
mov
pushf
inc
jg
pop
rorb
inc
into
jge
cmp
add
loop
ja
mov
sahf
stc
es
pop
ret
call
cmc
add
inc
or
js
push
data16
xchg
sub
xor
or
jg
jg
add
inc
add
cmp
jmp
popf
scas
aad
icebp
scas
cltd
popf
xor
mov
mov
add
movsl
sub
pop
pop
pop
inc
mov
testl
cmpl
in
add
movsl
mov
in
test
ret
insb
lods
xchg
xchg
cmpsl
xor
shrl
pop
aaa
xchg
mov
outsl
inc
mov
je
les
jmp
out
xor
inc
pushf
pusha
lods
push
xor
js
add
adc
lret
xor
xchg
xor
sub
fcmovbe
add
jp
aaa
loopne
loop
shlb
rcrl
jbe
inc
out
push
dec
loopne
cwtl
les
mov
addr16
mov
inc
add
sbb
inc
daa
fidivs
mov
inc
xor
and
sti
adc
push
mov
sahf
push
fcmove
stos
cmp
pop
adc
stos
jg
into
lcall
cmpsb
movsb
addr16
mov
imul
shll
call
xchg
cltd
jae
pop
push
inc
out
pop
add
mov
jge
orl
mov
and
jmp
inc
aas
jne
rorl
sarb
jno
jmp
mov
or
pop
in
adc
cmp
dec
push
pop
je
out
in
or
cli
mov
sarb
add
std
fsubrp
sub
pushf
test
cmpsl
sub
push
dec
daa
cs
popf
or
pop
daa
pop
mov
aam
push
lahf
imul
push
inc
ret
and
or
shrb
stc
add
cmovo
jmp
movsb
lds
pop
inc
ljmp
fsubrl
or
push
int3
clc
ss
or
and
shlb
pop
insb
sub
sbb
cwtl
repz
in
out
es
jne
dec
push
ret
test
pop
xchg
xchg
xchg
cmpsl
inc
repz
ja
sbb
push
lds
sbb
in
mov
sbb
cmp
mov
mov
xor
test
dec
mov
data16
and
push
jg
imull
and
sbbb
pop
and
and
jo
mov
or
pop
mov
faddp
out
sti
mov
add
sub
or
lret
inc
scas
pop
xor
lds
insb
bound
lods
cmp
pop
mov
cmpsb
nop
into
lcall
stos
cwtl
xor
out
js
data16
ss
push
xor
and
bound
stos
mov
adc
mov
or
add
xor
cmc
pop
mov
repnz
pop
pop
icebp
mov
xchg
fsubl
add
lahf
or
ror
adc
sbbl
add
dec
mov
cmp
xchg
mov
push
jae
push
js
lret
test
pop
aas
shr
adc
cmp
fildll
ljmp
jecxz
iret
icebp
fisubrl
sbbl
and
inc
jo
or
data16
lea
movsl
and
outsl
dec
push
lcall
lods
gs
sbb
andl
pop
sti
jl
push
lea
stc
loop
ret
into
add
orb
mov
scas
mov
pop
stos
out
out
pop
iret
mov
dec
mov
sbb
fsubp
pop
lcall
inc
outsb
mov
sub
push
cmpsl
adcb
ss
insb
jae
push
stos
cmp
mov
aaa
inc
in
push
out
subl
data16
icebp
test
pop
sbb
pop
push
push
jae
cs
fdivrl
mov
jmp
ret
adc
movsl
mov
sub
xor
sti
cmpsl
ret
or
push
sbb
dec
iret
outsb
push
ret
or
mov
dec
cmp
icebp
jge
scas
jle
ret
sub
je
sahf
mov
jp,pn
push
in
repnz
enter
or
jnp
pop
add
xor
js
mov
not
xchg
in
cmp
loop
rcrl
lcall
out
or
mov
pop
and
ljmp
nop
inc
mov
add
rolb
imul
enter
push
es
adc
fsubrs
loop
lret
xchg
pop
pop
xchg
push
mov
test
adc
jnp
gs
scas
jo
sub
cmp
jnp
mov
jno
jecxz
rcll
cmc
or
sub
lods
xor
cmpsb
aas
sub
negb
test
push
cwtl
mov
negb
pushf
rcll
ja
adc
ja
xchg
test
mov
int
mov
cli
loopne
sbb
xchg
xchg
adc
in
fbld
fucom
push
mov
movl
lcall
inc
fwait
mov
pop
pop
jmp
fidivl
sub
sbb
jns
out
xor
cmpsl
xchg
scas
pop
lods
cwtl
push
push
enter
xor
xor
sub
daa
loop
ljmp
es
pushf
sbb
outsl
or
stos
sub
das
mov
jl
sub
add
mov
loopne
cmp
bound
cmp
int
mov
jne,pt
pop
pop
out
add
jl
not
scas
mov
cmp
imul
dec
stos
fdivs
pop
mov
enter
mull
cli
add
pop
mov
cs
stc
adc
jp
xchg
cli
dec
push
pop
sahf
pop
push
jg
xlat
push
push
pusha
icebp
shl
aaa
jmp
xor
and
sbb
pop
push
pop
stos
push
xor
mov
stos
test
mov
mov
push
call
xor
scas
xor
xchg
push
add
daa
ret
inc
ja
repz
icebp
call
mov
sub
mov
cltd
adc
push
in
decl
cmp
push
mov
in
es
cld
fwait
mov
inc
jp
inc
pop
shll
gs
iret
fisubrl
push
pusha
ret
les
je
mov
hlt
insl
jg
xor
stos
pop
pusha
mov
popf
das
push
cltd
inc
loopne
cmp
repz
jb
shl
cmp
push
das
xor
das
pop
rorl
push
lds
sbb
lods
das
roll
in
pop
mov
adc
inc
fists
and
fnstcw
add
push
cmp
out
pop
xchg
inc
fs
xchg
xchg
inc
in
mov
sub
cltd
mov
loopne
add
jg
aaa
bound
mov
mov
xor
pop
cmpl
xor
iret
loopne
jne
cmp
jl
cmpsl
cmpsl
add
aam
pop
jmp
push
int
hlt
xor
div
pusha
sbb
jg
pop
add
pop
loop
cmpsb
mov
icebp
fsubs
icebp
inc
test
and
into
lret
mov
jo
es
outsb
cmp
aaa
sub
insl
out
jecxz
push
cmp
adc
inc
test
aad
lds
cmp
insb
movd
nop
rcrl
push
pmulhw
adc
mov
stos
sub
mov
icebp
and
mov
add
divb
xor
push
or
lods
adc
shll
cmc
stc
out
out
lcall
out
or
pop
mov
lret
push
insl
or
cltd
ficompl
jne
inc
rcrb
inc
mov
hlt
push
repz
loop,pt
scas
enter
popf
inc
shrd
xor
dec
jmp
push
mov
stc
inc
pop
jbe
mov
push
call
out
cmp
into
stos
sbb
leave
and
or
adc
stos
mov
inc
dec
je
mov
pusha
push
inc
sub
xchg
mov
into
xor
mov
sbb
and
adcb
adc
lock
push
ret
movsb
cmp
enter
sbb
std
push
lahf
movsb
out
inc
xor
dec
xlat
sahf
mov
out
imul
aaa
cmp
mov
in
inc
lods
cmc
jg
imul
push
jge
lret
mov
and
dec
movsb
das
popf
lcall
rorl
lea
xchg
push
lods
adc
mov
aas
cmp
shrb
sub
mov
mov
and
pop
or
cli
sbb
mov
adc
or
or
sub
inc
ja
xor
sub
cmp
idivl
fdivr
cs
fs
cltd
push
sub
xor
jp
inc
pop
sbb
mov
add
inc
je
test
sub
fisttpl
mov
inc
pushf
lods
push
mov
decb
ficompl
jno
dec
cli
inc
scas
cmp
cwtl
push
mov
or
pop
mov
lds
pop
add
insb
mov
scas
or
xor
sbb
clc
push
roll
xor
push
stos
xorl
sbb
idivl
dec
inc
enter
adc
dec
cmp
or
push
add
pop
iret
cmp
lahf
mov
pop
push
inc
xlat
jmp
fcomps
inc
dec
lock
loopne
or
sti
push
setb
or
inc
mov
jbe
repnz
add
les
pop
dec
in
push
and
push
fbld
mov
fildl
lea
cmp
nop
push
adc
scas
shlb
into
mov
icebp
into
cmc
clc
lea
xor
repz
lahf
xor
push
jnp
ret
je
or
cltd
mov
dec
int
fwait
cld
out
lock
push
jbe
icebp
or
shr
and
mov
insl
mov
lahf
mov
lds
out
idivl
idivb
imul
fldl
sbb
icebp
int3
jo
mov
ss
int
cmp
add
jns
ret
inc
rorb
inc
mov
sarb
mov
mov
jmp
jg
mov
in
sbb
js
jge
jno
or
jle
fdivl
lret
mov
pop
xchg
icebp
test
jge
lret
mov
mov
pop
movsl
repz
sbb
dec
inc
stc
sahf
sbb
dec
sbb
je
inc
mov
cmc
loopnew
daa
cmp
pop
and
sbb
inc
rcrl
fstpl
pushw
ja
cmp
call
mov
loope
pop
pop
add
rorl
sub
mov
sub
repnz
sbb
call
ret
and
sbb
repz
call
jne
push
xor
ljmp
dec
in
arpl
fiaddl
sub
add
shlb
insl
pop
daa
enter
stos
xor
jns
pusha
cmpsb
adc
int
sbb
and
popa
jne
cmp
leave
inc
push
sbbl
sbb
xor
mov
fwait
insl
out
mov
out
negl
mov
les
or
je
mov
jae
je
daa
into
xchg
sahf
pop
std
sahf
mov
xchg
adc
inc
mov
xchg
ficoml
xchg
push
or
sarl
cmp
stos
jb
scas
repz
jae
pop
bound
outsl
cwtl
scas
mov
push
fucomi
or
dec
lret
jp
add
cld
mov
adc
lock
sbb
mov
inc
out
das
movsb
fstps
je
dec
ss
leave
sub
jbe
aam
jno
pop
subb
js
mov
fdivs
push
pop
dec
ret
shlb
test
dec
movsl
push
imul
ret
fmulp
mull
bound
pop
jns
popf
out
mov
sbb
dec
dec
dec
and
add
std
xor
push
jns
stos
cld
lcall
sub
pop
lds
arpl
xchg
sub
lcall
dec
insl
loopne
icebp
dec
ror
sbb
and
ds
cmp
dec
mulb
inc
xchg
mov
hlt
mulb
dec
movsl
fimull
cmc
shl
enter
mov
cmc
fdivrl
out
mov
cltd
call
into
pop
add
fisubrl
fstpl
mov
xchg
test
pop
xchg
mov
dec
xor
enter
pop
and
dec
rclb
mov
lea
sub
insb
xor
out
mov
push
xchg
pop
pop
jp
int
push
add
xchg
mov
sbb
dec
inc
xor
or
dec
sbb
dec
jmp
pusha
movsl
mov
jnp
inc
scas
daa
daa
push
dec
aam
sbb
aaa
lret
xlat
cld
dec
mov
push
or
clc
aaa
mov
pop
lods
rcrl
cmp
push
dec
mov
and
pcmpgtw
sub
loope
xor
mov
sub
test
in
xor
and
scas
cwtl
repz
xchg
ret
ljmp
loope
jecxz
cmpsl
pushf
sbb
jno
pop
xchg
push
add
jp
sub
sbbb
inc
movsl
jmp
jp
adc
dec
mov
or
lea
jge
push
outsb
mov
ljmp
cwtl
xor
imul
fimull
fimull
stos
fcmovnbe
mov
jmp
mov
pop
jmp
xchg
idivl
cmpsl
mov
out
cmc
ficoms
push
sti
inc
imul
frstor
call
add
pop
xor
pop
jl
inc
movb
jo
fldenv
bound
mov
fisttpll
popa
in
stos
push
dec
xchg
fcoml
out
in
hlt
cmpsb
mov
fstpt
cs
push
lcall
cmc
inc
sub
inc
push
mov
or
sub
pop
sarb
dec
xchg
push
xor
pop
enter
int3
popa
cld
xor
xor
xlat
test
shrb
mov
inc
dec
das
mov
out
xchg
sub
adc
mov
cld
fs
or
jnp
sbb
cli
popa
push
cmp
inc
jnp
xchg
cmp
push
mov
mov
cmp
or
adc
ljmp
or
enter
and
xchg
lret
js
sbb
iret
fwait
and
inc
pop
push
jg
mov
push
daa
shll
mov
adc
lds
lds
mov
sbb
xchg
lcall
loopne
mov
add
mov
sbb
add
jae
mov
push
outsl
cli
jecxz
out
cmc
aaa
pop
ds
aam
sub
inc
jmp
gs
ss
add
push
imul
mov
adc
imul
aam
aas
adc
movsb
cld
sbb
dec
mov
mov
inc
push
out
push
push
inc
outsl
pop
pop
int
lcall
fcomip
aas
pop
lds
jb
jl
pop
add
fdivrs
mov
jecxz
pop
push
scas
mov
pop
ds
in
test
mov
in
cwtl
cmp
inc
rcrb
mov
pop
or
sarb
xor
lret
cmpsb
aaa
cld
mov
lods
or
sarl
insl
loop
addps
ret
out
mov
out
xlat
arpl
mov
and
jno
xlat
dec
cmp
sbb
lret
jno
pop
xor
jl
cld
inc
mov
sub
pop
sbb
in
xchg
mov
mov
adc
sbb
push
cmp
addr16
fidivrl
cmp
adc
push
mov
push
xchg
mov
mov
daa
pop
sub
loope
mov
aas
fcomip
stc
or
jmp
in
adc
mov
out
repz
sbb
xchg
cwtl
add
sti
push
andb
in
mov
add
fbld
mov
js
cs
dec
jnp
stos
sub
sub
ret
xchg
movsb
ret
js
filds
adc
or
xor
sbb
int3
dec
jo
cltd
loope
mov
mov
aam
out
into
or
stc
imul
dec
mov
sub
in
fists
mov
fs
sahf
in
pop
pusha
xchg
cmc
sub
mov
push
outsl
and
test
es
push
xor
push
outsl
outsb
xchg
jl
sbb
xlat
sub
inc
insb
mov
sarb
dec
cmp
lock
and
add
cwtl
pushf
and
dec
rcrl
sub
pusha
push
dec
inc
mov
insl
call
stos
and
adc
jne
mov
or
jnp
dec
add
bound
mov
inc
out
push
ljmp
xor
xor
in
ds
mov
lret
or
jae
sbb
in
inc
cmp
xor
sti
push
getsec
pop
les
xor
xchg
xlat
js
pushf
cwtl
btcl
popa
pop
mov
adc
aas
mov
fistpll
dec
pop
test
in
fisttpll
adc
dec
das
push
rorl
shr
icebp
loop
or
or
xlat
cs
sub
int
dec
ret
mov
cmp
mov
insl
pop
inc
cli
cmp
cmp
push
pop
push
push
pop
pop
xchg
mov
rcl
mov
and
jge
mov
xchg
jge
cmp
mov
sbb
outsl
fildll
int
cwtl
aad
sbb
lods
sbb
mov
in
xor
fwait
std
or
push
adc
mov
sahf
dec
jge
stos
pop
inc
inc
add
clc
adc
jo
jecxz
and
call
jns
and
cmp
xchg
mov
dec
pop
in
shll
in
ret
out
pop
andl
aaa
loop
xor
enter
fistl
and
das
jbe
mov
dec
movsl
jp
inc
lahf
cmpsb
mov
cmp
and
jle
pop
pop
sub
mov
cltd
fisubl
test
enter
les
xchg
dec
dec
movsb
xchg
rorb
daa
mov
pusha
daa
push
jo
ja
je
add
lock
sub
cs
xchg
adc
aad
push
and
xchg
rcr
mov
sub
dec
jg
xchg
mov
push
jnp
out
das
and
lahf
cli
push
outsb
push
nop
shrb
mov
push
pop
lret
pop
mov
int3
jns
sbb
test
int3
aaa
out
cli
fdivl
ja
sbb
dec
xor
xor
add
sbb
xor
bound
mov
adc
jle
std
xor
inc
push
jp
movsb
jo
pop
push
insb
das
sub
enter
decl
inc
sbb
xchg
sbb
push
vorpd
pop
cmp
out
mov
pop
sbb
mov
imul
adc
in
shlb
frstor
mov
cs
sahf
rcl
fstpt
nop
lds
mov
mov
mov
xchg
adc
sbb
dec
mov
lret
jmp
dec
mov
arpl
outsl
fcompl
cmp
xchg
inc
push
dec
adc
cmp
sbb
insb
xchg
int
addl
enter
jne
dec
mov
mov
mov
insl
sbb
fisubrl
fsubrs
iret
or
fiaddl
xor
jb
push
outsl
jb
push
flds
mov
stc
movl
icebp
addr16
push
add
mov
popa
xor
lahf
pusha
cmp
inc
cmp
inc
ljmp
or
mov
pop
sbb
sub
inc
dec
push
shlb
ss
pop
lds
mov
loop
adc
xor
cmp
fidivl
not
xchg
and
mov
enter
lods
pop
lret
xor
arpl
sarl
out
imul
add
mov
imull
add
sbb
cmpsl
fwait
hlt
inc
mov
xlat
in
int3
les
outsl
js
loope
cmpsb
mov
std
and
jg
sbb
or
xor
clc
mov
jle
and
mov
in
iret
add
int
xor
jno
rorb
sbb
ret
mov
jp
dec
pop
inc
mov
repnz
cmp
out
cmpsl
xlat
mov
pop
insl
es
idivl
in
in
ljmp
jae
adc
mov
ja
jge
or
cmp
jmp
orb
out
insb
jnp
adc
cltd
movsb
jecxz
inc
lcall
int
pop
rolb
mulb
cli
cmp
inc
movsb
lods
xor
jg
adc
repnz
and
or
test
paddb
scas
dec
sahf
mov
adc
nop
sbb
fs
jl
lods
scas
add
sti
rol
xchg
inc
fst
icebp
ds
mov
cmp
sub
and
je
xorl
sbb
ja
mov
push
add
adc
pop
sub
push
popa
sbb
aaa
lds
push
outsl
scas
xchg
adc
dec
addr16
cmpsl
add
add
popa
in
add
mov
jae
mov
test
mov
jle
push
shlb
lcall
adc
or
fwait
pop
inc
jle
jnp
fdivl
in
int3
outsb
sub
dec
mov
or
fwait
in
sbb
fiaddl
dec
inc
mov
push
inc
xchg
push
cmpsb
clc
xor
mov
dec
xor
inc
out
fxch
fs
insl
adc
mov
sub
jo
add
xchg
int3
fucomp
xor
lret
scas
mov
jl
fwait
mov
jl
test
push
andl
outsl
inc
shll
hlt
mov
shrl
test
mov
lock
and
clc
jns
xchg
xor
sbb
hlt
dec
push
lret
push
loopne
pop
push
das
pop
scas
ret
outsb
sub
pop
popf
movsb
sbb
add
and
or
vdivps
repz
clc
scas
fcomps
orb
cld
or
mov
lods
iret
cmpsb
sub
or
inc
mov
pushf
lret
pop
out
movsl
mov
mov
ret
push
mov
xor
mov
xor
push
or
pushf
fistpl
xor
jb
les
mov
fsubl
inc
mov
out
xor
in
mov
lea
shll
dec
loop
mov
jno
mov
lock
das
jle
and
adc
mov
cmp
dec
out
das
xchg
mov
push
arpl
jmpw
mov
pop
adc
mov
mov
pop
cs
movb
and
cld
and
pop
pop
push
shl
add
std
mov
mov
call
or
jnp
test
cmpsl
dec
xadd
lahf
mov
xlat
loop
push
shrb
inc
inc
outsl
dec
ret
dec
pop
sbbl
test
xchg
mov
mov
fdivl
mov
scas
xor
test
jp
xchg
push
or
cmp
cmp
lret
jl
ds
int3
test
dec
imul
leave
add
hlt
outsl
and
imul
cmp
jae
stos
cmp
lahf
or
or
push
std
mov
xor
mov
pop
pop
jno
mov
inc
or
xor
mov
jne
stos
sti
scas
pop
dec
mov
aaa
xchg
xor
jl
cmpsb
xchg
pop
and
sar
pop
pop
inc
int
rorb
adc
bound
test
aad
out
maskmovq
mull
outsl
mov
xchg
lock
xor
es
and
shufps
push
mov
pop
inc
movsb
cwtl
pop
pushf
sbb
add
jge
mov
popf
pusha
mov
jmp
sarb
jo
ss
daa
int3
daa
idivb
fs
in
pusha
or
mov
loop
das
cmp
fs
mov
sti
cmp
lods
xor
stos
mov
stc
and
sbb
leave
sti
mov
or
jns
sbb
cwtl
pop
dec
loop
std
pop
xor
mov
dec
xor
jo
in
jns
scas
xor
lods
pop
cmp
aas
inc
adc
mov
inc
mov
cmp
lgs
arpl
push
jae
int3
fistpll
cmp
sub
mov
add
jo
pop
xchg
insb
push
sbb
inc
add
loopne
lret
cmp
pop
pop
mov
les
lods
mov
insl
xchg
clc
popf
or
sub
inc
add
cmp
inc
xchg
in
sbb
popa
cmp
ret
pop
aad
add
ret
pop
arpl
jmp
lahf
mov
mov
dec
ror
in
scas
outsb
xor
fnstsw
int
or
outsb
ret
repz
sbb
xchg
repz
dec
adc
sub
out
mov
data16
icebp
fistpll
sbb
sub
lcall
pop
mov
fcompl
enter
js
sarl
out
int
andps
mov
test
scas
add
or
icebp
cld
fistps
sub
push
fidivrs
jnp
push
mov
call
sbb
jp
sbb
fists
loope
sbb
push
mov
jo
int3
leave
mov
out
cmpsb
adc
fucom
push
addr16
scas
add
jge
cs
incl
fdivp
cmp
sbb
nop
cmp
sti
lahf
mov
fldcw
test
pop
jno
push
jge
out
sahf
lret
sarb
in
sbb
and
sub
mov
in
outsb
aaa
sub
cs
cmpsl
fdiv
das
jmp
push
movaps
sub
ljmp
push
cmp
or
and
sarl
jo
sbb
inc
iret
xor
mov
mov
and
and
ret
popf
in
jmp
ljmp
mov
imul
call
pushf
xchg
iret
jge
cmpsl
subl
aaa
outsb
jmp
cmp
sbbb
push
jns
das
pushf
xor
xchg
mov
movsb
add
insb
imul
shlb
xchg
push
aaa
xor
loope
les
sub
push
test
pusha
jle
int
aam
mov
repnz
insl
push
adc
pop
jne
fcoms
cmovle
mov
inc
jge
fdiv
dec
xor
mov
or
rcr
ret
push
inc
dec
ja
mov
mov
std
loop
out
sarb
call
dec
mov
cli
andl
into
test
fidivrs
out
mov
inc
jle
rcl
pushf
cli
ficompl
shl
fucomip
xchg
sbb
ds
nop
sub
movsb
or
int
ud2
rorb
inc
std
imulb
scas
out
roll
mov
mov
jnp
cld
aam
jb
dec
addr16
aam
jno
xchg
pop
insl
jb
mov
jle
dec
adc
fwait
rcrb
out
lods
aas
adc
sub
jmp
fsts
mov
dec
mov
mov
push
push
push
fsubs
inc
cld
sub
int
mov
xor
mov
mov
push
sbb
insb
out
rcrb
jne
mov
mov
jle
jae
or
sub
adc
hlt
push
sbb
aas
andb
inc
mov
pop
in
or
sbb
in
in
adc
mov
jg
mov
mov
jp
pop
sub
push
mov
imul
mov
cmp
lahf
add
xchg
test
xchg
nop
lods
lret
fucomi
add
sbb
mov
sub
jo
xor
movsl
xchg
iret
scas
gs
insb
mov
sarl
popf
scas
pop
sahf
add
xor
cmp
push
fs
fsubrp
add
lock
test
cmp
bound
mov
fst
inc
in
mov
mov
mov
inc
sbb
mov
jp
dec
cltd
test
and
mov
jmp
sub
sti
pop
fbld
cmp
out
mov
push
scas
jmp
xchg
inc
jb
and
aad
movaps
test
fcmovnu
pop
xchg
jnp
push
cmp
jmp
js
call
das
lds
ror
jle
cs
in
cmc
pop
inc
lods
mov
push
pop
and
repz
and
and
shll
fs
dec
pop
jp
sbb
cwtl
rolb
mov
and
jo
int
sub
inc
pop
adc
jb
push
xchg
jns
outsb
ja
lods
int3
lods
xchg
xor
xor
fucomi
dec
nop
lret
xor
xor
pop
adc
ds
inc
add
push
mov
rcll
lret
jle
sti
sub
cmpsl
sbb
or
out
dec
xor
jg
mov
out
jmp
push
fidivrl
pusha
mov
inc
sbbb
mov
sub
ret
dec
xchg
jo
je
cmpb
pop
xchg
subb
mov
fwait
rorb
fisubrl
fsubs
rorb
cli
mov
das
clc
sarb
mov
cmp
ret
jne
mov
dec
popf
adc
jmp
sbb
aam
cmp
cmp
in
orl
xchg
lods
cli
repz
fiaddl
out
jmp
jb
and
xchg
jo
xchg
clc
mov
cmp
xchg
and
or
xlat
int3
clc
leave
push
mov
enter
inc
roll
cmp
xchg
sbb
jo
add
pop
in
int3
push
cmpsb
dec
mov
call
jmp
xchg
mov
jne
aaa
push
call
insl
inc
jecxz
int
popa
xchg
imul
fdivrs
inc
xchg
cmc
xchg
xor
inc
add
jle
dec
outsl
out
push
pop
or
xchg
pop
loopne
lods
or
push
lods
xor
sub
or
add
xchg
mov
dec
xor
loope
mov
out
ret
xorps
pop
das
out
mov
inc
shlb
les
les
ret
mov
movsb
mov
gs
cmp
pop
sbb
mov
jne
xchg
sbb
into
bound
test
push
lret
sti
testl
sub
into
xchg
jbe
pop
insb
adc
repz
icebp
or
sub
jle
mov
hlt
jmp
mov
add
mov
dec
and
sahf
or
jne
mov
aam
inc
xchg
and
adc
mov
jnp
int3
pushf
add
movsb
lea
pop
add
outsb
testl
in
mov
add
mov
dec
insb
sbb
ja
mov
mov
out
sub
ficoms
cmp
mov
mov
mov
rolb
push
lret
fsubp
push
imul
add
jmp
jne
leave
nop
or
mov
movsl
and
rol
les
sub
dec
pop
xchg
inc
rep
cmpsb
and
ja
mov
xor
mov
ljmp
les
jae
imul
push
out
mov
nop
aaa
xchg
jae
pushf
int3
mov
xchg
sbb
mov
mov
mov
mov
pop
and
popf
adc
aad
sbb
bound
mov
icebp
pop
cmp
mov
push
dec
pushf
movsl
decb
mov
and
fwait
cmp
pushf
or
push
gs
add
adc
repz
addr16
pushf
js
fiadds
jb
leave
inc
and
xchg
jb
push
rcr
dec
sti
push
cmp
cltd
jge
bound
je
test
imul
mov
out
dec
and
add
jp
adc
cmp
mov
hlt
sub
test
insb
jecxz
push
cld
sbb
xchg
ja
mov
out
int3
push
mov
push
in
ret
push
out
insb
mov
dec
enter
jno
data16
das
ja
popf
add
dec
push
mov
jno
xor
jb
jmp
mov
leave
jecxz
inc
mov
and
ret
rolb
gs
jne
rorb
outsb
sub
fidivl
into
cmp
jle
pop
testl
cmpsl
gs
xor
outsl
repz
imul
and
pop
mov
cmp
push
decl
bound
xor
rol
dec
pop
std
mov
and
gs
sbb
adc
ljmp
and
xor
mov
incl
mov
sub
xchg
mov
cltd
push
imul
lods
mov
sbb
mov
addr16
xor
cs
cmp
xor
stc
hlt
jne
pop
scas
cs
jmp
mov
outsb
cmpsb
ja
dec
jne
xor
mov
pop
rcll
jbe
ret
sbb
mov
inc
andb
je
cmp
pop
jge
mov
clc
je
cmp
movsb
les
repz
mov
jnp
mov
iret
xchg
cmpsb
cmc
xchg
xor
pop
jecxz
fmuls
movsl
push
jmp
ficompl
out
push
idivb
sub
popf
icebp
push
mov
jb
xor
or
testl
add
dec
lods
dec
cmp
aad
scas
sub
add
jns
stos
jb
xchg
leave
and
out
or
or
out
mov
mov
std
xor
js
push
sbbl
mov
adc
pop
lock
sbb
pop
dec
test
stos
dec
cltd
ss
insl
std
mov
andl
adc
in
sub
popa
into
mov
cmp
adc
lahf
inc
inc
faddl
ss
push
insb
xor
out
xchg
add
mov
jl
xor
pop
mov
sbb
jnp
loop
sbb
xor
add
in
xor
cmpsb
push
sbb
mov
and
and
adc
sub
push
aaa
fldl2e
icebp
movsl
outsl
sbbl
mov
test
xor
popf
cwtl
jmp
dec
cs
jne
ret
dec
jmpw
sbb
sbb
xor
imul
pop
es
fistl
popa
lods
popa
movl
cvttps2pi
test
andl
mov
mov
cltd
and
mov
js
cmp
in
hlt
inc
fwait
je
or
test
cmp
insb
xor
hlt
jnp
mov
mov
pop
or
add
into
dec
add
push
mov
xlat
popf
jmp
adc
cmp
rorb
push
xchg
cmp
in
int
dec
outsl
cmp
enter
sbb
lods
or
ljmp
ja
adc
je
adc
cmpsl
pop
aas
or
jle
mov
push
pop
push
stc
xchg
roll
xor
add
mov
xchg
push
insb
movb
leave
sub
push
into
inc
mov
movsl
dec
lds
dec
sub
mov
xor
push
push
scas
mov
mov
lret
movsb
mov
in
and
dec
outsl
aaa
cld
stos
int
sub
decl
arpl
xchg
inc
pop
mov
adc
pop
stos
and
cmp
xchg
stos
filds
test
popa
xchg
mov
and
xchg
adc
subb
cmp
into
or
inc
pushf
ficomps
sti
cmpl
fstpl
int
fdivrl
jno
cmp
shl
jmp
enter
mov
fimuls
dec
xchg
cmp
pop
dec
andl
cld
gs
bound
pop
rorl
stos
mov
jmp
lcall
dec
mov
xor
mov
xchg
cmpsb
js
push
pop
mov
pop
mov
bound
popa
out
shlb
hlt
push
xor
clc
bound
lds
xchg
clc
push
aaa
mov
xchg
cmp
out
ret
aad
sbb
pop
xor
mov
test
rolb
sub
mov
ficomps
movsl
and
shll
mov
or
cmp
repz
jns
imul
or
incb
cmpsb
outsb
dec
jbe
xchg
imul
outsb
add
fs
xor
xor
aas
ss
mov
cltd
sub
dec
cmp
int3
jno
movsl
insl
jbe
mov
fstps
inc
out
jl
push
int
jle
mov
push
sub
mov
data16
inc
and
jbe
mov
out
sahf
in
iret
lcall
cmp
lret
and
sub
filds
ss
xchg
or
iret
pop
in
std
pop
jns
fildl
xor
das
gs
jl
add
loope
mov
stos
fistl
adc
or
xlat
idiv
or
fdivrp
adc
sbb
push
adc
cmp
gs
loope
sbb
out
lcall
mov
ss
jecxz
inc
nop
mov
loope
inc
icebp
mov
inc
adc
insb
cli
hlt
sub
cmpsb
xor
cmpsl
lcall
adc
and
pop
push
leave
push
loop
imul
insb
sbb
xchg
or
xchg
sbb
mov
std
fs
add
pop
push
xor
mov
lds
or
jbe
or
xchg
dec
push
daa
rcll
inc
dec
aam
add
push
bound
cmpsl
stos
stos
adc
call
push
aam
inc
adc
inc
fidivs
xor
ss
aad
int
out
sahf
pusha
imul
fnstcw
cltd
ret
les
jmp
xchg
mov
comiss
fidivrl
out
inc
gs
inc
push
mov
neg
dec
adc
test
add
es
mov
lock
sub
lods
mov
lret
or
rclb
mov
fidivrs
cmpsb
and
pop
ja
jns
out
test
add
cmpsl
adc
loope
sti
notb
addr16
push
add
xlat
in
enter
pop
sbb
cs
lods
lcall
icebp
jp
cmp
add
pop
imul
lods
mov
and
imul
les
into
push
test
jmp
adc
and
or
pushf
inc
out
je
jns
in
jno
dec
cmp
leave
dec
cmp
inc
lea
scas
icebp
or
add
inc
cli
jnp
je
mov
xor
imul
jno
adc
loop
jmp
sbb
clc
jo
add
and
adc
lds
adc
jns
jb
or
jecxz
dec
clc
lret
movsb
loope
sub
jae
mov
push
mov
ljmp
adc
sub
adc
inc
pop
mul
push
xchg
aas
add
imul
adc
cs
gs
inc
mov
out
cmp
popf
and
inc
and
loop
idivb
dec
scas
adc
mov
icebp
push
xchg
xchg
push
stos
inc
push
and
xor
out
js
jp
xchg
scas
out
jp
repnz
mov
jecxz
jb
cmp
test
mov
gs
rol
in
cmp
mov
addb
andl
pop
fcmovnbe
daa
mov
addr16
push
push
pop
dec
inc
es
daa
test
cld
adc
in
lea
scas
fdivrs
loop
imul
lods
mov
sbb
xchg
xchg
push
loop
das
cmpsb
xchg
hlt
inc
mov
sbb
popf
lret
aad
fisttpll
ficompl
mov
das
cltd
push
mov
mov
pop
inc
lods
rcrb
shlb
ret
sbb
popf
add
lcall
mov
movsb
sbb
dec
out
dec
out
andl
jno
mov
nop
xor
rolb
add
cmc
mov
test
notl
xchg
xor
inc
and
sbb
adc
int
push
jnp
movsl
clc
fwait
je
cmp
jbe
sbb
sub
or
ficoms
mov
movsb
rolb
imul
fldcw
dec
loope
lcall
jmp
loope
dec
inc
outsb
or
aas
int3
adc
or
mov
pop
mov
aad
mov
pop
mov
dec
stc
dec
mov
inc
sbb
mov
cmp
pushf
sub
push
leave
dec
hlt
cld
jp
push
daa
stc
or
xchg
adc
out
ret
ss
test
lds
cmp
xor
mov
mov
lahf
stc
mov
adc
cmp
test
leave
outsb
mov
adc
orl
iret
out
mov
insl
xor
lock
imul
dec
pop
cmp
hlt
push
test
push
leave
inc
dec
test
pop
mov
imul
jns
shr
outsl
add
andb
movsl
inc
inc
adc
mov
cmc
in
in
testb
and
mov
ljmp
sbb
roll
pop
push
imul
jae
jle
mov
pop
call
or
mov
jp
or
pop
adc
inc
mov
pop
ret
pop
mov
xor
sbb
mov
jo
xor
and
cltd
xor
xchg
faddp
xor
inc
pushf
and
fcoms
stos
fbstp
mov
ds
sub
cmp
add
stos
or
cs
pop
enter
hlt
clc
andl
push
repz
fs
xchg
cmp
xor
jns
fistl
orb
dec
popf
sbb
add
fmuls
stos
ss
in
aas
add
dec
shr
mov
insl
push
mov
pop
fildll
mov
mov
pop
adc
mov
ficoml
fdivrl
fidivl
mov
les
testl
roll
data16
and
sub
repnz
xor
xchg
aaa
sbb
adc
sub
add
cld
test
addb
and
mov
mov
insl
jl
shlb
push
subl
sbb
test
adc
jns
or
jno
addr16
mov
sbb
inc
subl
andb
cld
mov
cmovl
pop
int3
and
push
cmpsl
insb
jae
or
mov
stc
push
js
sub
movsb
inc
cmp
cmp
push
jns
pop
xor
inc
jo
add
inc
push
dec
insb
scas
add
push
dec
loopne
dec
lock
mov
aas
dec
mov
jl
cwtl
or
out
inc
addr16
sbbl
dec
movsl
loopne
out
ret
xchg
rol
jnp
push
mov
jae
dec
pusha
jno
clc
das
inc
adcl
xor
gs
or
inc
nop
sub
popa
aaa
add
mov
fsubrs
stos
adc
jno
add
sub
sub
into
mov
stos
aad
add
fsubrp
movsl
pop
fsub
lock
rclb
mov
sbb
ss
test
jo
dec
mov
icebp
dec
les
mov
and
lret
pop
push
idivl
loopne
jl
addr16
sub
adc
pop
jno
scas
inc
push
xchg
outsb
and
add
insb
fwait
rol
fsubrs
mov
sub
in
sub
stos
xchg
xchg
rolb
xor
push
adc
int
cmp
nop
jnp
aad
arpl
in
and
push
sarb
dec
dec
adc
sahf
or
jb
cmpsl
adc
and
pop
cwtl
pusha
jg
dec
sarl
jecxz
aad
mov
pop
xor
mov
push
inc
mov
jle
enter
rcrl
mov
xchg
lods
clc
stos
sbb
js
jo
or
jbe
aas
jb
sbb
sar
sbbl
popa
xor
movsb
adc
push
cltd
cmp
mov
mov
repz
mov
lret
nop
aaa
outsb
leave
mov
xchg
add
stc
insl
mov
mov
cmp
sbb
push
cmp
rclb
fsts
jl
sbbb
pop
lods
push
sub
shrb
scas
pushf
or
dec
pop
jecxz
jmp
test
mov
xchg
test
rcrb
insl
lret
pop
xchg
adc
xor
mov
test
lcall
in
or
sub
mull
xchg
out
and
lock
lea
mov
jge
mov
addb
inc
leave
cmpsl
aad
xchg
pop
cli
xchg
adc
cmc
inc
lock
lock
sbb
add
scas
iret
cld
loope
add
push
dec
and
pop
mov
loopne
mov
jnp
int
adc
ljmp
sbb
iret
insb
stc
jmp
nop
in
add
test
and
scas
jnp
mov
sbb
lea
jg
mov
and
testl
xor
int
insl
xlat
jmp
jecxz
insw
mov
xor
mov
xchg
dec
or
mov
int
sbb
xor
sbb
loope
in
addr16
ret
popf
mov
dec
mov
xchg
cwtl
in
or
pop
nop
xchg
dec
dec
xor
imul
fcmovb
jns
or
cmp
lods
cli
mov
scas
adc
adc
shrb
lods
scas
insb
lret
pop
jb
sti
scas
pop
xchg
loope
or
and
outsb
insl
lds
push
or
test
movsl
fcmovne
rcr
repnz
xchg
dec
mov
lcall
jb
jg
xchg
stos
in
movsb
fisubrs
movsb
sub
sbb
dec
les
inc
inc
cmp
cli
sbb
dec
imul
aad
mov
push
fs
adc
iret
add
test
aad
xor
xchg
ret
mov
sbb
outsb
gs
fmul
pop
or
pop
jmp
in
xlat
pop
pop
and
mov
pop
in
lods
icebp
or
out
cmp
fdivrp
mov
imul
add
test
dec
jp
or
ret
sbb
sub
js
jge
insb
sub
shll
orb
xorb
test
mov
adc
mov
and
dec
pop
sahf
in
mov
cltd
and
fisttpll
dec
cmp
and
dec
lret
lahf
jno
adc
out
stos
xchg
imul
mov
cs
out
inc
push
xchg
xchg
cmpsb
or
fistps
xor
test
pop
out
loopne
sbb
or
in
int3
sub
mov
fiaddl
popa
lcall
adc
mov
mov
or
sub
or
and
push
jno
loope
pop
sbb
mov
inc
out
jno
or
subl
mov
es
jecxz
mov
mov
ljmp
in
push
xor
push
or
xchg
jnp
jae
mov
aad
les
sbb
arpl
ja
adc
jnp,pt
fstl
pop
cld
or
int
jmp
push
xchg
xor
imul
in
popa
add
push
sub
aaa
cli
add
stc
lret
push
jge
lret
mov
mov
mov
push
mov
adc
mulb
and
and
jae
jne
iret
or
sbb
sub
fwait
mov
lret
gs
clc
loopne
inc
js
mov
sbb
aas
test
xor
lret
insb
nop
cld
iret
mov
shll
ret
lret
and
mov
sbb
icebp
cmp
inc
mov
bound
jg
mov
add
daa
xor
push
shlb
enter
mov
sbb
mov
jbe
outsb
test
mov
mov
jg
std
in
js
pop
add
aam
pop
and
into
in
and
outsl
pushw
dec
stc
jae
xlat
mov
inc
dec
lret
pop
test
inc
jns
cmp
or
dec
inc
lcall
mov
in
int3
dec
andl
add
out
push
mov
and
test
pop
jge
mov
xor
out
jle
jge
cs
xorb
fiaddl
push
gs
adc
push
cltd
sbb
push
aam
dec
ret
cmp
mov
or
outsl
test
cmp
inc
mov
push
lahf
enter
pop
das
cs
cld
enter
shrl
leave
rcr
nop
fucompp
add
jecxz
sti
aas
ljmp
or
mov
das
adc
je
xor
aam
dec
in
xchg
push
jecxz
jg
iret
inc
or
cmp
xchg
cmp
and
out
sub
in
outsl
or
pop
rep
push
dec
xor
js
sbb
adc
ret
inc
xor
push
sub
cmpsl
imul
inc
popf
mov
stc
insb
adcb
movsl
ljmp
repz
das
scas
fs
call
mov
fisttps
dec
xchg
xor
jo
orb
stos
int3
test
and
mov
lea
jmp
jg
pushf
lret
cmc
jae
lea
outsl
fldt
insl
ficoms
mov
mov
or
sbb
mov
clc
dec
jno
xchg
cmp
push
mov
and
xchg
xchg
mov
js
push
jo
insb
aas
sub
das
subl
fistpll
pop
cmpsl
sbbl
or
push
rclb
mov
dec
and
inc
je
add
xorl
in
mov
lcall
ja
and
sub
addr16
push
arpl
mov
lods
int
sarb
mov
jns
dec
mov
add
and
aaa
mov
xchg
popa
add
and
aam
xor
daa
inc
mov
lds
scas
es
lods
inc
std
imul
add
inc
sahf
cmpsl
mov
in
lret
loopne
jmp
out
or
inc
push
push
mov
mov
mov
or
test
push
insl
in
jne
pop
leave
mov
lret
xor
mov
arpl
push
adc
pop
shl
jbe
or
popf
mov
mov
aas
jns
push
push
jle
ja
loope
cltd
cmp
ficoml
adc
pop
push
test
filds
pop
lret
adc
ja
out
xchg
shrb
fisubrl
xchg
xor
mov
cld
outsb
adc
test
ss
cs
cmpsb
cli
xor
fldcw
dec
xchg
dec
jp
imul
add
fidivs
lds
sahf
or
test
int
ret
mov
sbb
sub
aam
movsb
hlt
test
push
mov
fdivl
cmp
pop
cmp
push
jae
stc
jae,pt
xor
int3
in
fdivs
and
cmp
out
xor
dec
lea
dec
in
flds
ror
xchg
outsl
xor
jl,pn
mov
int3
leave
xchg
jmp
jecxz
cmp
pop
push
or
and
fcompl
js
mov
in
cmp
mov
xor
mov
mov
or
imul
rcr
mov
sub
in
add
ret
jle
cmpsl
jmp
mov
notl
jle
in
dec
pop
or
add
jge
ret
dec
loop
or
jo
js
add
or
jl
repnz
addr16
sbb
sub
jmp
sub
or
pop
fnstcw
mov
aaa
shlb
or
loop
ja
sbb
and
and
pop
int
xor
mov
or
in
mov
mov
in
jae
sub
sbb
mov
insl
loope
sbb
sbb
iret
loopne
dec
sbb
in
xor
mov
outsl
pop
test
and
movb
push
xor
imul
test
je
cmpsl
mov
add
fcoms
pop
in
pop
in
pop
gs
movsb
cmp
sub
inc
cmp
cmpsb
enter
enter
pop
mov
inc
lret
dec
sub
out
pop
mov
cmpsl
jo
mov
mov
sub
ficoms
sub
in
jp
jbe
call
sbb
mov
inc
cli
mov
or
inc
mov
xchg
bound
pop
ret
push
and
into
fs
lods
push
lods
outsl
sarb
jmp
mov
scas
aam
mov
movsl
xchg
mov
aad
adc
jmp
xor
push
add
mov
cs
vprotw
ret
mov
or
xor
push
out
and
lods
sub
and
in
cmp
mov
ss
sbb
insb
int3
int
jne
daa
xlat
add
pop
cmp
xchg
repnz
and
les
dec
testb
lods
pop
and
pop
jge
mov
jo
pusha
aam
jge
movsl
sbb
pop
sub
adc
xchg
int
mov
dec
pop
rorl
cmpsb
mov
add
pushf
adc
or
fisttpl
jno
std
cmpl
mov
call
cli
pop
adc
push
dec
lret
fildll
sub
lds
insl
mov
popa
movsl
cmpsl
ret
xor
mov
insl
in
or
add
adc
fxtract
gs
fcom
mov
outsb
ss
add
and
loope
shrb
jae
adc
and
jecxz
cwtl
jmp
xchg
out
retw
out
jne
ds
mov
addr16
xchg
sub
pushf
dec
andb
cmpsl
in
ret
int3
arpl
mov
cmp
push
adc
outsl
mov
or
leave
outsl
add
das
mov
shrb
and
or
daa
mull
movsb
loope
ss
lahf
rcrl
rcr
sbb
out
cmp
jle
js
xlat
push
test
inc
adc
leave
loopne
out
lods
imul
int
dec
pop
add
push
sub
lock
push
fnstenv
push
sbb
sahf
je
push
les
div
insl
pop
jecxz
mov
and
data16
shrl
out
out
mov
mov
ds
add
test
or
sti
pop
add
stos
xchg
mov
aaa
mov
push
xor
fdivp
hlt
sub
aas
xor
test
mov
or
repnz
inc
sub
xchg
mov
idivl
xchg
and
jo
jb
lds
add
pop
popf
sub
mov
or
daa
jbe
les
jp
repz
and
pop
mov
aas
bound
fidivrs
inc
sub
aaa
lcall
lret
rcrb
inc
and
leave
jbe
popf
dec
lahf
aaa
dec
and
dec
out
jge
or
clc
jns
add
xchg
push
fbld
mov
sub
pop
je
jmp
std
adc
iret
mov
mov
jp
rcrb
lret
add
fldcw
out
sbb
dec
int3
mov
push
xchg
stc
push
les
int3
adc
in
and
sarb
or
pop
lods
cld
xor
lret
inc
or
fbld
and
addr16
fisubl
xor
lock
ror
imulb
iret
xlat
stos
test
lahf
divb
hlt
push
aaa
jnp
dec
jnp
mov
sub
fbld
sub
mov
insl
call
dec
aad
adc
pop
fnstsw
clc
sbb
hlt
clc
push
and
pop
jbe
mov
jnp
fwait
jno
popf
inc
sbb
sar
mov
mov
test
stc
or
xchg
sbbl
fcomip
pop
mov
fwait
mov
iret
in
ret
jmp
pop
sarl
subl
jp
scas
jnp
mov
pop
xor
mov
pop
dec
lods
lock
popa
pushf
clc
push
fmull
shlb
shll
cmp
add
pop
out
enter
mov
jp
je
ss
mov
cmp
out
add
jo
dec
xor
fdivs
fstpt
in
cltd
nop
lret
pop
into
cmp
stc
xor
and
and
dec
icebp
cmp
mov
inc
mov
pop
dec
push
lret
pop
sbb
idivl
test
dec
scas
sbb
push
pop
ss
and
xchg
nop
pop
or
jg
out
popa
lds
int3
mov
push
add
push
xor
jp
mov
adc
popa
or
in
out
xorb
pop
scas
roll
orl
mov
jns
lock
test
add
sub
pop
icebp
test
lds
adc
pop
fwait
mov
pop
notl
leave
stc
clc
es
rorl
out
hlt
rcl
push
mov
mov
call
repnz
xorl
aam
cmpsl
es
in
mov
mov
xor
pusha
ficompl
inc
adc
xchg
push
adcb
sub
cwtl
mov
lcall
lret
mulb
enter
push
adc
cmp
mov
popa
dec
cwtl
es
jo,pn
sub
out
mov
aaa
or
repnz
mov
mov
xchg
sbb
cs
aaa
popa
push
push
enter
lds
sbb
mov
jge
add
and
rclb
sub
sub
cmp
xor
xchg
adc
leave
jns
cli
hlt
mull
mov
push
shlb
into
inc
sub
push
lcall
jo
test
insl
rol
push
dec
mov
sbb
mov
cmc
fisttpl
cmp
popf
movzbl
inc
pop
sahf
jecxz
sub
xor
mov
xchg
daa
inc
test
pop
in
movsb
lret
xchg
nop
sbb
push
clc
fxch
cltd
push
sbb
out
mov
imul
orb
out
push
pop
into
bnd
jbe
sub
fs
lret
sbb
sub
or
jne
in
mov
mov
inc
mov
xlat
fsubp
dec
mov
rol
dec
inc
cmp
jo
lahf
aas
repz
fsubrs
ja
imul
into
in
jns
mov
push
jle
pop
insl
push
leave
pminub
test
jnp
lret
push
add
leave
mov
xacquire
cmp
mov
loope
pop
add
xor
sbb
mov
nop
jge
lahf
xchg
movsl
mov
mov
push
or
push
jo
enter
cmc
xlat
or
pop
or
inc
mov
fwait
imul
out
push
jnp
hlt
daa
test
pop
jle
dec
lods
lcall
xchg
fbstp
cmpl
andb
imul
fwait
add
movsl
fisubrl
mov
push
or
mov
jae
jecxz
stos
mov
and
xchg
int3
rolb
xchg
jne
inc
pop
popf
je
pop
ja
adc
mov
mov
out
lea
xchg
lds
jl
fiadds
shlb
xlat
testl
jle
pop
cli
jae
testl
mov
xchg
mov
enter
mov
icebp
mov
push
lahf
std
add
and
or
es
in
arpl
insb
sub
jmp
jae
xchg
subl
add
push
test
psubsb
lods
cli
fnstenv
stos
in
xor
jo
cmpb
fildl
sbb
fstpl
inc
lock
stc
ss
aas
push
pop
cmp
out
push
sbb
imul
fldl
stos
jl
mov
xchg
pop
mov
mov
push
repnz
mov
mov
popf
push
mov
cli
xchg
rorb
ljmp
push
int
mov
dec
lods
and
sbb
xor
call
or
mov
cli
aas
dec
inc
cmp
bound
xchg
pop
cmp
outsl
push
cmp
sbb
or
or
xor
imul
xor
jle
int
mov
push
pop
dec
push
push
add
pop
ja
fisubl
pushf
shll
xchg
jbe
int
les
xor
jle
lret
push
xchg
repz
sub
imul
dec
aam
push
jge
aam
cmpsb
pop
shr
lods
inc
xor
dec
pushf
mov
lea
repnz
outsb
cltd
cs
jecxz
mov
js
or
inc
lods
adc
or
sahf
and
xchg
repnz
outsl
pop
mov
cmp
or
xchg
mov
adc
or
call
insl
or
adc
lea
outsb
cmp
les
mov
mov
dec
int
pop
mov
lea
aas
xchg
or
lea
mov
cmpsb
and
adc
lret
fbld
cmpl
iret
pop
cmpsl
daa
push
cld
or
hlt
rsqrtps
insl
imul
iret
cmp
test
sbb
loop
repz
inc
aaa
pop
push
and
and
cmpsl
sbb
pushf
jmp
push
mov
enter
push
js
insb
push
enter
clc
jae
add
rdmsr
cltd
jecxz,pn
sub
xchg
add
fdivrl
cmpsb
pop
push
cmp
ficoml
jle
push
xor
mov
cmpsl
jge
lods
dec
aas
data16
jne
aaa
mov
push
addr16
adc
dec
inc
adc
inc
xchg
add
jecxz
outsl
mov
sti
xor
add
push
rcr
inc
push
and
xchg
das
push
dec
icebp
pop
and
cltd
mov
test
xchg
insb
enter
and
fmuls
iret
dec
lds
xor
jmp
popf
rorl
das
mov
xchg
dec
adc
push
mov
nop
stos
ret
stos
mov
xchg
dec
push
in
imul
popf
or
idiv
subl
pop
push
in
mov
outsb
add
inc
adc
mov
xlat
in
jp
int3
push
xchg
ss
xchg
jg
sub
mov
gs
enter
fimuls
cli
loope
push
xorl
cwtl
insb
jmp
push
das
jle
add
xchg
iret
push
xchg
pop
loopne
fcmovnbe
pop
sbb
sbb
pop
pop
stos
or
test
cmp
cmp
pop
mov
and
jae
xlat
fs
pop
xchg
out
mov
arpl
ficomps
sahf
push
xchg
and
push
call
jg
loopne
cmp
sbb
jl
aas
sbb
sbb
popl
insb
xlat
and
mov
icebp
cli
lahf
enter
pop
adc
enter
mov
fcompl
mov
stos
test
mov
std
enter
jle
stc
movsb
push
push
sub
xchg
out
cmp
ret
daa
nop
inc
das
adc
dec
mov
sub
adc
sub
data16
sbb
inc
or
flds
adc
xchg
int
and
dec
push
and
and
xlat
sub
push
shlb
add
sahf
ss
inc
inc
int
out
xchg
xor
adc
and
in
push
stos
fcoml
mov
les
cmc
popf
mov
and
jge
ret
jp
in
icebp
mov
inc
jmp
in
lock
fyl2x
icebp
mov
inc
or
xchg
jmp
das
fbld
iret
popa
sub
pop
pop
lret
jle
xorb
jno
outsb
sbb
mov
decb
bound
or
out
insl
and
sbb
jo
or
sbb
shl
out
enter
rol
push
popa
adc
pop
ret
mov
cmp
jbe
xchg
pop
pop
enter
sub
push
jmp
in
xchg
xor
push
dec
inc
pushf
inc
sbb
and
adc
test
in
addr16
int3
sti
clc
cmpl
or
pop
sub
es
or
movsl
xor
and
jae
ret
ret
ljmp
cmpsl
mov
inc
iret
lahf
xlat
cmp
dec
mov
mov
mov
jp
or
pop
test
je
jl
add
mov
stc
repnz
lods
out
mov
clc
rep
adc
std
xchg
rolb
sbb
out
mov
ja
xor
adc
int
movsl
in
cmp
push
cs
int
mov
mov
out
mov
cmc
cmp
bound
cmpl
mov
pop
negl
addl
je
test
sbb
stos
in
stos
and
pusha
add
cmpsb
ret
repnz
fwait
add
sub
enter
bound
sbb
shl
insl
dec
sbb
or
or
pop
repz
stos
push
bound
inc
jle
sub
add
fistpll
jno
push
rorb
cld
js
xor
cmp
ljmp
xor
and
dec
in
dec
push
lods
out
cli
loopne
jp
or
loop
lds
insl
sbb
in
push
jb
fidivrl
mov
jl
add
daa
xor
sub
mov
or
fmull
ljmp
dec
pop
je
xchg
lahf
cmp
cmc
mov
mov
ffree
mov
in
in
test
ret
xorb
repnz
fbld
das
stos
movsl
mov
mov
cmc
fadd
push
mov
out
cld
pusha
dec
xchg
lahf
imul
sub
xor
bound
mov
popf
mov
imul
or
adc
pop
rolb
sub
jp
cmpsl
dec
jl
lock
ja
outsb
cltd
push
jne
and
iret
or
stos
adc
shlb
sub
shl
pusha
sbb
fistpll
out
in
stos
jae
cmp
dec
repnz
add
mov
pushf
or
hlt
add
nop
mov
xchg
nop
cmp
cmpsb
pop
add
pop
in
gs
push
jo
adc
jmp
xor
stos
shlb
push
test
and
test
or
cmp
mov
movsl
mov
mov
xor
shrb
mov
and
mov
or
push
ds
loopne
repnz
jnp
ret
and
mov
lock
bound
mov
jbe
mov
daa
shr
ljmp
enter
xchg
mov
cmpxchg
aaa
out
out
imul
jp
xchg
cmp
dec
call
lea
adc
pop
jecxz
mov
inc
sub
lcall
or
sub
cwtl
addr16
rolb
ja
out
sti
mov
lock
adc
nop
fsubrl
jl
lcallw
sahf
mov
scas
add
js
repnz
and
sbb
addr16
jae
scas
dec
push
mov
sub
popf
or
push
inc
bound
jo
loope
or
push
and
cmp
pusha
mov
aas
pop
les
mov
cli
imul
or
daa
ret
mov
mov
cs
pop
pfsub
inc
outsb
adc
adc
pushf
add
sbbl
add
imul
sub
fldenv
nop
add
in
out
mov
or
cld
push
das
test
das
mov
sbb
test
ret
mov
xchg
mov
push
inc
sub
loopne
and
mov
jp
test
sbb
cmpsb
enter
mov
jns
mov
pop
ret
rorb
cmp
out
fldl
stos
pushf
mov
rcr
stos
sub
pop
jno
push
jge
jmp
cmp
pop
stos
xchg
xor
inc
jl
rorl
inc
mov
xchg
push
arpl
cmp
xor
cmpsb
dec
jl
xor
ljmp
jmp
dec
cmpsb
pop
scas
inc
test
mov
inc
sbb
xchg
xor
in
inc
in
movsb
mov
mov
sti
jne
subb
mov
mov
push
dec
clc
jnp
fistpl
mov
sbb
adc
into
xor
cmp
in
mov
fnsave
adc
jg
loop
inc
sbb
adc
cs
orb
ret
mov
outsb
fcomip
push
pop
std
sbb
mov
scas
addr16
push
out
stos
adc
and
insl
mov
cld
mov
xchg
pop
in
or
shll
jae
adc
fwait
rolb
sbb
int3
fsubrs
iret
push
cmp
pop
dec
pop
ret
ja
outsl
and
lods
jecxz
mov
and
xchg
insb
es
mov
fcoms
push
ds
fwait
push
jecxz
out
sub
push
adcb
sub
stos
fidivl
inc
and
dec
mov
fs
dec
lahf
loopne
mov
xchg
mov
mov
inc
cmpsb
aas
ljmp
into
cmp
rcl
sub
sarb
scas
inc
inc
inc
dec
outsl
loop
jns
fisttpl
inc
inc
sbbl
aas
cs
leave
test
rcr
and
cmpsb
mov
push
fcmovbe
test
sub
inc
sahf
jl
cmp
mov
mov
jle
add
jb
jle
mov
mov
test
mov
ds
dec
in
xor
jle
notb
add
andl
enter
pushf
shrb
fcoms
outsb
popf
inc
call
sbb
jg
pop
dec
sub
cmp
arpl
stos
sub
add
adc
neg
inc
xchg
sbb
pop
xlat
adc
daa
sub
movsb
add
fstpt
or
mov
in
out
cmp
repz
insl
mov
repnz
push
dec
cmp
push
push
jno
push
push
and
and
fwait
cmp
xchg
jns
pushf
jmp
jmp
cmp
xchg
fs
cmp
jae
push
xchg
inc
mov
xchg
or
xchg
xchg
lods
pop
jle
dec
mov
adc
pop
popf
mov
and
cmpsl
repnz
or
fs
test
or
pop
lahf
jecxz
sar
mov
inc
lahf
cld
data16
insb
sbb
jo
mov
loop
aad
inc
add
icebp
cmpsl
and
out
sbb
cmp
cwtl
pop
mov
stos
stc
repnz
ficoml
mulb
push
and
push
push
cmp
scas
jmp
pop
out
inc
sbb
xchg
cmc
jno
jle
mov
jnp
mov
seto
test
data16
mov
test
scas
inc
cld
xor
popf
cmp
aam
mov
pop
mov
mov
sub
adc
shl
inc
cmp
stos
decl
jns
pop
pop
rclb
sub
test
imul
lods
jecxz
cmpsb
mov
fstl
mov
repnz
jge
inc
imul
xor
mov
dec
mov
int3
dec
xchg
nop
stos
cmp
hlt
xchg
mov
out
jno
cmp
cld
xchg
cwtl
mov
les
push
fs
push
mov
nop
popf
loope
pop
xor
mov
test
clc
xchg
insl
mov
lock
nop
dec
push
xchg
xchg
out
pop
xor
and
lds
call
push
or
mov
ror
cmpb
fdivp
cmpsl
mov
adc
leave
in
push
sbb
les
cltd
lcall
cmp
pusha
push
test
xor
xor
add
repnz
mov
fsubs
orb
push
mov
push
or
mov
add
add
shl
pop
sub
xor
push
int3
sbb
hlt
rcll
repnz
gs
sbb
cmp
addr16
test
imulb
jmp
nop
clc
sti
mov
out
push
add
scas
inc
adc
popf
sarb
popa
pop
add
push
jmp
repnz
roll
pop
jnp
jle
out
push
mov
mov
hlt
mov
add
adc
loopne
dec
jbe
mov
sub
lods
scas
aad
sub
pusha
jle
or
mov
test
aad
sub
in
stos
aaa
jmp
ficoms
fcompl
mov
mov
test
gs
mov
pusha
xchg
pop
cmpsl
dec
fcmove
sahf
dec
jl
clc
cmpsl
or
cmp
fdivs
mov
jp
dec
enter
cmpsb
push
lods
inc
stc
dec
cltd
xchg
loopne
loopne
repz
pop
sbb
xor
stc
mov
outsb
push
call
mov
test
pop
xchg
cmp
cmpsl
dec
sbb
js
and
imul
jbe
push
rcrl
orl
int3
test
push
add
lds
outsl
lea
test
inc
ret
cmp
and
negb
pop
mov
mov
popa
xchg
inc
pop
jge
jae
stc
inc
fiaddl
out
xchg
cltd
mov
stc
insl
dec
divl
sbb
push
sub
dec
test
negl
or
frstor
inc
test
push
ret
bound
rolb
repz
push
jno
push
xchg
inc
mov
cmc
clc
sbb
mov
loope
in
test
xor
mov
ds
mov
xchg
sub
popf
mov
mov
jo
lcall
sub
les
sbb
sahf
mov
repz
and
pop
sub
out
mov
inc
inc
lods
cmpsb
xor
shrb
pop
test
ljmp
shll
push
jo
dec
imul
mov
inc
push
jne
leave
repnz
data16
lods
or
pushf
fsts
clc
sti
movsb
sub
cwtl
inc
or
dec
sub
nop
int
pop
add
gs
xor
dec
pop
fdivp
cs
int3
pop
popa
dec
mov
push
push
jae
mov
add
xor
sbb
dec
aam
out
jns
imul
je
xchg
hlt
mov
std
imulb
mov
or
sub
jle
xor
pop
adc
cmpsb
idivl
sub
cs
pop
xchg
pop
add
mov
mov
sbb
cld
xchg
pushf
rclb
addb
test
hlt
lods
and
jle
stos
mov
icebp
leave
cmp
cmpsl
cmp
lret
pushf
inc
cmp
jle
cmp
and
and
mov
mov
add
and
and
xchg
jg
insb
push
sub
gs
into
pop
scas
add
sti
imul
popa
or
test
stos
pop
sub
xchg
mov
pushf
lock
nop
aas
inc
aad
jl
sbb
cmpsl
lar
insb
push
or
pushf
cmp
movsl
jb
js
sbb
fmuls
enter
inc
outsb
fnstcw
lahf
cmp
pop
pop
loopne
out
xor
fidivl
jecxz
adc
or
add
sub
mov
ljmp
sbb
lahf
dec
jbe
lock
iret
and
ss
fists
stos
adcl
xor
mov
das
cli
or
pop
mov
jp
jmp
shl
gs
pop
jne
mov
mov
in
fnsave
push
mov
inc
cs
int3
mov
and
enter
lea
lcall
into
scas
popa
dec
imul
into
mov
lea
rolb
dec
push
mov
sbbl
test
data16
or
and
stos
test
das
jo
outsb
out
decb
push
lcall
adc
add
dec
push
dec
mov
dec
imul
mov
dec
clc
pop
leave
stc
js
add
mov
leave
aaa
aas
in
mov
sbb
lret
lods
repnz
or
outsb
and
pop
out
es
add
sti
int
adc
xchg
pop
sub
push
and
scas
add
shr
cmp
push
mov
pop
test
and
mov
scas
inc
repnz
jo
insl
cwtl
test
mov
lds
divps
lods
xchg
stc
and
out
inc
mov
and
push
cmp
cmp
pop
repnz
cmp
pop
or
jne
and
outsl
mov
mov
fsubl
mov
out
movsb
inc
je
xchg
mov
insl
adc
stos
mov
inc
enter
and
jecxz
shll
repnz
and
push
lea
aad
aas
mov
sub
rcrl
pop
xor
add
push
iret
aad
jle
adc
cmpsl
add
xchg
xchg
or
sub
xchg
lods
or
fs
into
daa
shl
push
addr16
jge
mov
adc
push
ret
cli
inc
dec
xchg
xchg
ret
aad
mov
lods
imul
push
adc
sti
sbb
add
inc
ds
push
push
inc
cltd
or
dec
je
ja
popf
fsubs
call
pushf
cmp
es
daa
cmp
sbb
fwait
and
repnz
aas
sbb
js
cmpsl
sahf
repnz
adc
insl
jle
lea
shl
in
push
cmp
dec
inc
loopne
mov
scas
out
adc
dec
mov
loopne
sub
adc
lods
pop
or
adc
insb
mov
insl
sbb
lods
or
sahf
data16
mov
push
lock
push
inc
cmp
imul
sub
sbb
sub
jg
aad
cmpsl
push
cmp
adc
fbld
aad
mov
push
call
sahf
scas
xchg
mov
xorb
je
dec
sub
ret
lea
jnp
gs
dec
jae
add
pop
test
pop
add
push
mov
push
adc
cmpsb
mul
lret
dec
cmp
call
nop
adc
xor
movsb
nop
mov
mov
push
lock
inc
xchg
cmp
cli
movsl
pop
dec
flds
daa
or
int
jno
sahf
push
in
test
sbb
mov
dec
jb
iret
int
and
adc
mov
jbe
nop
mov
mov
in
movsb
sbb
mov
sbb
ret
lcall
xlat
mov
xor
in
push
out
push
push
lret
push
add
dec
imul
jae
xor
cmp
out
mov
and
mov
jno
or
in
les
mov
xor
jl
jae
inc
sbb
cmp
push
sub
and
pushl
mov
cmp
outsb
pop
mov
xchg
rcl
mov
or
test
pop
push
jge
sbb
ja
mov
adc
sbb
push
adc
decl
xchg
movb
lods
dec
add
xchg
out
adc
out
dec
mov
jb
pushf
mov
pop
add
fdivr
add
dec
xchg
rorl
ljmp
mov
sahf
push
lods
xor
add
jns
pop
addr16
movsl
or
dec
je
andl
fmull
mov
push
inc
in
jae
or
push
es
cs
or
cmp
and
inc
dec
repnz
negb
sbb
pop
mov
jo
jl
jecxz
jae
fnstsw
jl
mov
loope
es
xchg
adc
mull
jl
popa
push
add
pop
adc
fwait
leave
ja
bound
jge
sub
xor
dec
pop
mov
arpl
pop
imul
mov
shll
push
aaa
enter
pop
push
into
rcrl
mov
aas
or
mov
in
or
jg
inc
rolb
imull
or
mov
inc
aas
push
bound
cmp
test
ja
fstps
sub
jb
inc
push
repz
lcall
jns
inc
push
icebp
ss
divb
inc
jbe
hlt
jl
or
mov
mov
mov
loop
xchg
lds
cmp
popa
es
bound
cltd
or
or
mov
and
pop
jl
dec
sahf
dec
xlat
pop
fs
ss
testb
call
push
into
mov
dec
pop
inc
jecxz
cmp
cs
cli
sahf
test
imul
imul
aam
imul
fmull
aaa
mov
inc
lds
sar
inc
pop
push
sbb
test
out
sahf
addl
test
and
jle
mov
push
outsl
mov
xchg
jbe
pop
or
adc
mov
aad
scas
pop
or
ret
jns
add
imul
ljmp
xor
push
fcomps
aaa
push
cltd
clc
and
jle
dec
xchg
sub
jle
out
push
mov
mov
or
fs
xchg
jle
xchg
enter
int3
add
xor
inc
je
loopne
adc
cmc
mov
shll
rcrl
inc
jnp
pusha
pop
mov
addr16
cmp
or
fdivrp
ljmp
aas
sbbl
mov
repz
jo
int
mov
dec
pop
sahf
repnz
repz
or
sub
sub
ret
lret
mov
mov
lods
xchg
movsl
jbe
je
and
roll
inc
cmp
sbb
jb
mov
xchg
adc
inc
mov
mov
mov
out
test
aam
pop
push
repnz
dec
push
and
and
mov
inc
cvtdq2ps
outsb
cmp
xor
aam
push
ljmp
in
aad
and
pop
jge
scas
ss
jb
sahf
decl
add
jecxz
cmpsb
dec
dec
jmp
cmp
movsl
push
inc
adc
xchg
pop
lea
add
lcall
mul
ja
mov
addl
clc
mov
push
mov
xor
pop
add
mov
mov
cmp
cmc
push
std
int3
hlt
xor
xor
pause
adc
jnp
clc
pop
pop
push
pop
std
xor
push
gs
mov
fs
lret
fwait
loop
pusha
or
lds
lds
inc
dec
mov
pop
lea
push
and
mov
cmp
sbb
shlb
xor
hlt
pushf
cmpsb
inc
xor
jno
push
icebp
mov
mov
cmc
hlt
pop
push
and
pop
jle
fiadds
daa
sbb
shrl
pop
add
xchg
xor
adc
insl
xchg
rclb
fwait
push
inc
pop
cmc
push
dec
jge
sub
mov
mov
xor
mov
push
lods
icebp
cli
ret
xchg
sbb
push
in
dec
sbb
jbe
mov
sbb
in
decl
xchg
push
fcmovnu
dec
inc
orb
cmp
sub
jge
aad
ljmp
hlt
jp
in
int
leave
lods
pop
loope
ret
mov
aas
daa
adc
pop
cld
pop
pop
mov
sbb
data16
stos
es
mov
add
jnp
mov
xor
addr16
cmp
push
xchg
pushf
pop
xchg
es
or
in
inc
test
and
or
popf
push
mov
call
inc
jns
iret
repnz
mov
imul
dec
shlb
andb
push
icebp
or
and
pop
sub
jo
add
fisttpll
jp
cs
mov
add
push
daa
cmp
lahf
hlt
aaa
mov
xchg
lret
pushf
inc
xchg
test
fwait
jg
mov
aam
test
add
daa
cmp
mov
xchg
repnz
dec
data16
mov
int3
jge
cmpsb
stos
loop
imul
and
scas
pop
std
mov
mov
test
lods
bound
pop
shlb
in
jb
in
imul
mov
sbb
ja
cmc
bound
fs
divl
sbb
cld
push
stc
ss
aad
jge
adc
add
test
add
push
lods
sub
cmp
lods
xor
shrl
scas
mov
subl
gs
ja
aam
pop
ja
imul
jo
es
mov
cmpsb
rcl
jl
into
adc
xor
popl
sbb
push
xchg
fsts
jne
ret
dec
shlb
inc
xchg
cltd
out
mov
mov
mov
movsb
mov
xchg
mov
fildl
loope
out
mov
adc
push
lret
xor
sub
fistpl
adc
pop
iret
jge
push
pop
jo
mov
scas
xchg
jl
sub
outsl
sbb
pop
and
mov
bound
xchg
xor
pop
ss
fwait
xchg
test
xchg
jo
fisttpll
sub
popa
ficomps
push
es
and
inc
out
mov
insl
cli
jb
jmp
pop
scas
add
fsubrl
sbbb
les
jne
add
and
ss
aaa
arpl
xlat
shll
ljmp
arpl
xchg
jne
push
jne
pop
lret
into
dec
std
cmp
pop
cld
pop
jno
xchg
por
pop
or
mov
lret
hlt
adc
ret
and
cmp
xlat
jge
jge
sbb
ror
inc
mov
mov
cmp
arpl
xchg
or
xlat
xchg
call
cmpsb
cltd
rcl
leave
dec
cmp
add
add
mov
aad
jo
jo
cmp
inc
fstps
es
push
stos
cmp
fsubr
push
lea
add
cmpsl
pop
in
and
mov
xor
inc
jmp
sub
movsb
addl
lock
inc
mov
mov
push
repz
jo
xchg
sub
push
dec
nop
and
push
imul
dec
fistpl
into
xchg
popa
push
lock
test
and
mov
insb
mov
rcll
mov
pop
adc
sub
andl
xor
adc
shll
mov
or
stc
and
test
in
fstpl
inc
cld
stos
xchg
push
sub
xor
dec
pop
les
push
daa
push
inc
mov
xchg
xor
push
roll
cli
cmc
clc
jne
pop
pop
andb
adc
or
xchg
cmp
mov
xchg
xlat
cli
pop
addr16
dec
out
jmp
mov
leave
loope
fimuls
mov
xchg
in
cmpsl
or
dec
stos
in
mov
xchg
add
movsb
xchg
ljmp
or
je
hlt
outsl
cmp
jge
fists
hlt
nop
mov
fs
repnz
adc
in
cmpsb
inc
and
ffreep
mov
jns
push
fcmovnbe
xor
lahf
sbb
add
inc
and
in
xor
test
int3
cwtl
stos
sahf
and
movsb
cmp
pop
pop
sub
dec
xchg
adc
jecxz
sbb
adc
dec
stos
mov
jp,pn
push
mov
jg
sub
sub
loope
incb
out
fdivr
mov
mov
mov
push
add
add
cmpsl
dec
and
push
jp
mov
hlt
es
mov
and
cmpsl
adc
mov
out
outsb
data16
xor
sti
loopne
stos
mov
pusha
scas
fcomps
scas
jge
jno
data16
bound
cmc
imul
lcall
fidivl
testb
loope
adc
cld
cmpb
inc
inc
icebp
pop
push
pop
push
sub
push
adc
repz
stos
push
dec
enter
mov
push
add
lcall
mov
xor
cs
cmp
add
jg
enter
pop
lods
fildl
sahf
clc
subb
int
and
cltd
fwait
xor
pop
pusha
jb
adc
and
cmp
xor
sub
imul
popa
movsb
xor
ljmp
add
iret
sbb
rolb
dec
inc
into
les
lret
dec
adc
xchg
jbe
loope
cmp
aad
sbb
bswap
std
jmp
rcl
jge
imul
xchg
test
inc
ja
lock
shll
outsl
adc
jle
push
popa
in
push
cmp
les
icebp
cmp
aam
xchg
dec
clc
rolb
sub
test
mov
sbb
int3
rol
mov
mov
lods
dec
or
aam
jecxz
movsb
andl
mov
xlat
push
daa
cmp
rclb
enter
mov
jmp
cltd
xchg
lock
push
les
outsl
inc
sti
mov
sbb
in
xchg
scas
imul
loop
xchg
andb
testb
movsl
mov
and
out
out
push
ss
pusha
pop
in
inc
in
lret
adc
int
mov
fmuls
lock
add
cmp
add
divb
test
mov
sbb
out
test
divl
cmp
aad
leave
pop
push
divb
mov
gs
dec
or
mov
into
xor
cwtl
test
adc
cmpsb
cmc
shlb
mov
mov
lcall
repnz
and
xor
or
cmp
outsl
and
cmc
pop
sbb
pop
push
comiss
xchg
mov
pop
pusha
push
mov
rolb
loope
sbb
addr16
cmp
popa
arpl
add
aaa
xlat
mov
jecxz
out
rorl
adc
jg
cld
fsub
popa
inc
sub
mov
jge
xlat
neg
mov
mov
sub
push
mov
out
mov
or
cmp
mov
fcomp
xchg
pop
xor
or
rorl
fidivrs
test
jae
lret
jge
push
pushf
cmc
sbb
add
xor
or
push
scas
push
dec
rcl
xchg
xchg
inc
sub
ljmp
xchg
cmp
clc
adc
mov
pop
add
sarb
pop
ja
xor
and
push
jae
push
push
pushf
pop
add
cmp
xchg
sub
xchg
popl
fadd
loope
sub
aas
xchg
lock
cmpsb
jae
loopne
mov
and
adcb
dec
push
outsl
push
movsb
inc
cmp
insl
inc
test
pop
and
sub
lahf
or
incb
aad
push
arpl
mov
sbb
stc
cmpl
ret
test
vmread
pop
lahf
fcomp
call
xor
cld
popf
scas
jae
cmp
push
mov
in
popl
test
or
ss
jns,pn
lret
jmp
faddl
mov
test
push
aad
sub
mov
xor
cmpsb
inc
jl
xchg
subb
pop
rolb
cs
movsl
aas
cmpsl
loop
push
adc
ja
cld
shlb
loopne
mov
stos
daa
mov
adc
or
cmpsb
hlt
cmp
testl
cmp
incb
leave
lods
fldl
and
inc
in
out
ja
sub
add
pushf
inc
adc
repz
and
inc
lods
shr
jnp
sbb
divb
ja
sahf
sbb
xchg
fsubrs
or
rorl
xorb
cld
cltd
mov
and
xchg
xor
xor
mov
jo
out
pop
ja
cltd
push
cmp
aad
int3
push
or
lret
fwait
and
call
cmp
mov
adc
ds
aas
dec
push
repnz
ffree
pop
sbb
scas
add
movsb
loope
dec
cld
mov
jnp
add
jb
xlat
xchg
xchg
lcall
mov
jge
test
xchg
push
add
dec
sub
push
mov
mov
loopne
testb
fldt
xor
into
cltd
out
mov
repz
movsl
inc
ret
cmpl
or
mov
sub
mov
out
cmp
push
out
sbb
jbe
sbb
or
jecxz
outsb
test
cmp
popl
in
xor
ret
stos
loopne
fmuls
cltd
mov
fists
ds
fwait
push
cwtl
inc
sub
and
outsb
pop
inc
loope
lods
iret
inc
pop
or
dec
xlat
push
test
mov
sbb
pop
jb
sysenter
mov
ret
push
mov
cmp
push
outsl
sub
add
pop
adc
fidivrs
jae
mov
out
sahf
idivb
rcll
mov
jbe
into
aam
pop
push
add
cmp
xchg
push
insl
out
or
mov
mov
mov
cmp
out
mov
pop
xchg
mov
sub
push
jae
xor
fsubrs
pop
rolb
push
push
ret
push
imulb
xchg
inc
clc
ds
out
push
cmp
mov
fdivrl
jg
mov
es
inc
mov
addr16
jmp
mov
adc
cmp
mov
gs
cmp
inc
mov
out
mov
jl
adc
cmc
jne
gs
pusha
lahf
mov
adc
movsb
mov
das
stos
inc
add
mov
and
mov
xor
les
or
cmp
adc
inc
adc
test
mov
imul
xchg
and
in
outsb
fadds
nop
aas
inc
les
lds
in
jg
and
add
mov
xchg
pop
adc
out
add
push
lods
sarl
sbb
cmp
or
jno
cltd
popf
cmpsl
push
push
out
mov
and
dec
or
pop
mov
sub
cmp
adc
xchg
xchg
jge
in
sbb
in
es
lock
stos
mov
test
sti
mov
nop
enter
jg
xchg
adc
clc
lahf
push
mov
xor
inc
fwait
ss
jnp
ljmp
dec
inc
adcl
fstl
sbb
fisttps
sbb
clc
mov
cltd
jnp
jno
mov
pop
je
lods
stos
mov
popa
mov
cmp
outsb
mov
jbe
call
outsl
jne
adc
cmp
pop
xor
jo
sub
xchg
hlt
loope
call
mov
and
xlat
sbb
js
add
cltd
loope
loop
sbb
pop
hlt
push
mov
test
les
sarl
jp
xchg
rclb
repz
daa
mov
int3
xor
lea
sti
mov
in
call
xchg
insb
inc
push
mov
or
adc
xchg
shrl
or
jecxz
lods
sti
jno
movsb
xor
push
pop
mov
paddsb
or
call
ja
insb
sti
add
jmp
cli
mov
pop
das
xor
mov
and
insb
insb
dec
dec
xlat
out
iret
push
pop
or
mov
js
pop
xchg
jp
mov
insl
mov
jle
jle
mov
popf
in
fstp
pop
mov
xor
mov
dec
mov
dec
pop
xchg
insb
movsl
daa
aaa
cmp
or
rorb
and
int
adc
inc
xchg
adc
fdivl
mov
push
jns
fdivs
and
fimull
mov
icebp
jbe
lock
stos
out
pusha
cmp
jmp
popa
push
sahf
jbe
imul
stc
movsb
mov
cmp
xchg
inc
xchg
adc
test
mov
jno
push
push
mov
mov
adc
push
sbb
mov
jae
adc
pop
push
jae
jmp
push
jne
push
lea
pop
add
fsubrs
popf
push
lcall
stc
rclb
movsl
call
in
enter
push
mov
popa
lods
lret
cmp
mov
fsubrs
fcmovnbe
dec
mov
test
xchg
mov
add
lods
in
jbe
jne
sub
push
scas
xchg
adc
add
mov
push
xchg
xchg
cmp
lcall
insl
shlb
ret
pusha
insb
test
push
mov
popa
in
dec
enterw
or
lods
sahf
add
mov
enter
shrl
mov
inc
call
dec
push
bound
aam
adc
hlt
add
leave
xchg
add
out
ficoms
insb
cmp
inc
outsl
mov
inc
push
mov
lahf
les
gs
ror
nop
pop
lahf
jp
in
and
and
pop
repnz
xchg
cltd
loop
outsb
popf
push
xchg
rorb
repz
sbb
mov
in
mov
dec
aas
out
repnz
xor
stc
rolb
int3
jns
adc
jo
stos
rcrl
out
daa
pushf
pop
orl
cmp
ret
jmp
es
dec
hlt
cmpsb
movnti
sub
xchg
push
in
sub
mov
and
push
mov
ds
mov
cli
scas
and
cmpsb
lds
mov
cmpsb
mov
xchg
push
inc
aaa
out
mov
push
pushf
mov
mov
and
inc
cmpsl
cmp
iret
mov
out
mov
call
xor
add
daa
ljmp
adc
push
adc
or
push
inc
pop
dec
xchg
mov
fnstenv
int3
lcall
std
cwtl
adc
clc
cmp
push
or
xor
jmp
xor
add
jb
inc
andb
cmp
out
lcall
imul
je
mov
lret
push
mov
je
mov
mov
pop
cmpsl
imul
fldcw
jae,pt
mov
fsubr
push
jns
adc
mov
rcl
push
inc
push
out
mov
jns
imul
ror
pushf
scas
sbb
push
icebp
pop
out
xchg
insl
mov
cli
pop
pusha
adc
lods
sub
mov
sub
jle
add
dec
ja
cwtl
push
cmovl
imul
lock
popf
dec
lea
popf
pop
dec
rcrl
xchg
in
std
imul
stos
dec
stc
repz
lret
aad
mov
jmp
mov
gs
xor
cli
mov
popw
fs
mov
xchg
cmp
in
ret
sub
xor
rcll
mov
mov
cmpsb
jp
movsb
pop
and
fstl
icebp
adc
jmp
ds
adc
cs
ficoml
into
adc
mov
jne
pop
shlb
and
imul
dec
cld
add
movsl
adc
or
mov
add
sub
insl
pop
imul
push
xchg
dec
inc
dec
add
inc
or
data16
add
mov
bound
popf
cmp
xchg
cmp
test
sahf
cmp
dec
mov
dec
xor
mov
inc
repnz
pusha
push
or
int3
fnstenv
loopne
pop
push
fstl
pop
hlt
sti
cmpsb
jns
push
add
and
mov
jle
mov
lock
popf
xchg
call
and
push
sti
cmp
es
cld
mov
inc
add
test
outsb
mov
enter
cmp
add
enter
int3
push
stc
repnz
int
stos
fs
and
xlat
xchg
jnp
jecxz
jae
jae
ror
push
fsubrp
ret
jl
or
sti
xchg
or
popa
nop
data16
mov
ret
push
mov
cli
loope
mov
fsubl
outsl
mov
shll
lahf
dec
mov
push
pop
out
scas
dec
loopne
sub
dec
adc
cmp
in
xor
xchg
test
scas
nop
movsb
into
fwait
inc
inc
repz
test
push
js
icebp
adc
mov
xor
xor
push
jnp
cmp
jb
xchg
and
addr16
in
out
adc
sub
mov
inc
cs
rol
lds
cmp
sbb
xchg
mov
movsl
mov
sbbl
test
mov
es
sti
outsl
pop
xchg
or
outsl
mov
jg
mov
lret
daa
lcall
jl
cmp
popf
pop
xchg
fnstenv
icebp
insb
lods
mov
fidivrl
and
repnz
popa
jnp
mov
and
push
xor
js
cmp
mov
out
popf
incl
stos
push
cwtl
adcb
call
mov
cmpsl
popf
or
and
xchg
call
iret
leave
cmp
aad
pusha
pop
mov
clc
mov
scas
int
push
cld
dec
in
mov
push
cmp
sub
dec
dec
or
leave
mov
cmp
jne
mov
notl
adc
repnz
call
adc
test
loope
das
fisubl
jle
mov
push
cmp
mov
cli
xchg
jo
pop
xor
outsl
add
adc
mov
das
mov
fisubs
fs
inc
in
dec
fwait
lea
push
ss
call
xor
dec
ret
ljmp
daa
or
scas
test
in
adc
cmp
jne
inc
mov
std
cmp
mov
out
and
imul
xor
ja
dec
and
xor
xor
ds
lcall
sbb
ficoml
and
jne
pusha
dec
inc
and
test
sub
dec
inc
fwait
mov
in
inc
adc
aaa
mov
repnz
lcall
rol
and
pop
pop
push
pop
test
mov
and
ret
jno
lds
mov
out
dec
in
adc
scas
mov
add
add
sbbl
inc
xor
lret
testl
push
pop
ss
xchg
stos
xor
aad
sub
inc
adc
xchg
dec
stos
cs
fidivl
xor
test
movsb
iret
rorb
dec
arpl
lea
sub
xor
test
dec
xchg
jg
dec
pop
orl
cmp
pop
mov
jo
xlat
sub
add
in
sub
mov
nop
adc
lock
push
jp
aad
xor
cmc
orb
lcall
mov
push
shl
pop
int
popa
xchg
pop
push
jp
mov
in
inc
mov
sti
mov
sub
out
mov
fstps
iret
sahf
xor
pop
lock
mov
jnp
roll
popf
clc
and
add
aam
jg
add
cmp
ljmp
xchg
sbbb
testl
mov
mov
out
out
cmpsb
cltd
pusha
cmp
ss
fisttpl
xchg
sbb
add
in
push
or
push
pop
xchg
sbbl
xchg
aaa
mov
xchg
enter
inc
fwait
cwtl
add
mov
int
or
cs
test
test
xchg
pop
adc
jg
lret
cltd
sbb
insb
sub
inc
push
into
ret
pop
ret
mov
sbb
sbb
test
in
mov
imul
push
addr16
sbb
lret
mov
je
xchg
je
fst
in
push
cmpsl
ret
dec
inc
in
push
mov
mov
icebp
cmp
pop
pop
xlat
sti
fdivrp
xchg
fidivrs
les
fldenv
mov
divb
add
push
pop
jp
xchg
and
xchg
neg
dec
mov
rcl
rorl
aam
add
cmp
sbb
push
dec
shll
fwait
xchg
aad
mov
imul
inc
push
clc
inc
mov
xor
pop
std
cmp
out
rcrb
add
arpl
daa
in
aaa
jae
cmp
mov
adcl
imul
inc
stc
sahf
fwait
adc
adcl
pop
dec
aam
xchg
adc
cmp
sbb
mov
movsb
inc
jne
sub
aas
pop
int3
inc
shlb
push
cmpsl
push
sub
cmpsl
jno
sub
add
mov
in
add
sub
psubsb
in
insl
sub
sbb
push
mov
ss
mov
mov
add
and
cld
loop
adc
std
stos
inc
cmp
inc
jp
sub
cmp
push
or
stos
in
jnp
xlat
fadds
adc
mov
gs
sbb
inc
scas
sub
loopne
pusha
cmpsb
popf
mov
pop
or
iret
mov
xchg
mov
dec
pusha
stos
shll
xchg
loop
fldl
shr
mov
loopne
mov
lock
loope
hlt
jg
inc
movsl
cld
ja
inc
mov
test
xchg
sub
in
mov
push
clc
movb
call
jb
jge
imul
mov
subl
and
fldenv
mov
mov
ret
xor
repnz
hlt
call
add
pushf
mov
mov
push
push
in
and
add
mov
insb
pminub
adc
dec
inc
pop
sbb
jns
das
aad
pop
rcrl
push
ja
outsl
out
test
cs
adc
sahf
push
outsl
les
dec
mov
insl
inc
lret
cmp
sarb
stos
jbe
scas
leave
push
bound
jp
cmp
jl
fildl
data16
cmp
xchg
push
push
pop
dec
pop
andl
testb
rorb
popf
adc
adc
iret
aad
sub
arpl
and
inc
arpl
mov
cmp
sub
add
shll
pop
int
fadds
test
xchg
cmpsb
and
and
lahf
mov
pop
shrl
mov
mov
mov
push
cmp
jmp
cld
jb
aaa
xchg
cmp
ret
mov
aaa
mov
adc
out
pop
rol
sub
cmc
pusha
or
enter
inc
rep
mov
outsb
push
icebp
mov
aad
test
mov
xchg
sub
mov
mov
pusha
pop
mov
rorl
jb
pop
fdivl
loop
arpl
in
test
pop
lahf
cmc
lcall
fdivrl
xor
push
cwtl
test
mov
mov
dec
lods
push
pop
mov
out
ret
ds
fwait
push
lods
fs
lds
add
mov
std
inc
pop
mov
and
lcall
mov
jbe
test
movsl
mov
cmp
ds
out
adc
dec
mov
pop
out
test
jae
outsb
movsl
int
nop
out
popf
mov
repz
xor
dec
lds
sub
std
mov
das
add
and
mov
shlb
xor
clc
enter
and
popa
push
pop
std
dec
push
xor
xor
dec
xchg
sahf
dec
jb
cmp
mov
in
dec
xchg
add
lcall
cwtl
pop
push
scas
cli
mov
jno
jns
daa
movsl
mov
sbb
jmp
jnp
mov
lcall
jle
sbb
sbb
scas
sbb
movsl
cld
or
ljmp
pop
push
dec
outsl
dec
in
or
mov
jnp
dec
data16
shl
xor
in
je
fs
popa
outsl
lret
mov
xchg
repnz
mov
lahf
les
push
xchg
mov
jle
out
add
aas
dec
push
in
js
jle
mov
push
imul
xor
fildll
decb
pop
add
mov
inc
inc
push
test
inc
cld
pop
cmp
cld
or
or
inc
pusha
into
test
xchg
mov
out
push
out
add
cmc
loop
mov
xor
push
jb
mov
jbe
jge
call
lahf
xor
int3
sti
cmpsl
scas
loop
repz
sbb
mov
add
xor
outsl
inc
jg
inc
es
pushf
or
jecxz
inc
mov
and
stos
push
mov
insb
and
lcall
add
mov
xchg
dec
mov
int
test
cmc
scas
dec
movsb
pop
js
fs
bound
adc
xor
mov
ljmp
push
inc
jle
pop
and
jl
mov
mov
jp
loopne
dec
out
cltd
or
jne
hlt
inc
xor
cmp
or
pop
aam
push
sub
in
xor
into
shlb
ds
push
push
mov
sbb
push
xor
jl
gs
arpl
lods
popa
ret
test
xchg
popa
pop
mov
add
sub
scas
jmp
mov
ret
mov
outsl
jnp
bound
js
mov
test
inc
push
cmpsb
jno
pop
mov
xchg
pop
test
jae
imul
inc
int3
lcall
fldcw
loope
sbb
leave
iret
dec
and
cmp
mov
push
inc
aaa
arpl
lods
sbb
and
cmp
mov
addr16
int
pop
int3
lcall
clc
pop
add
pop
mov
push
dec
in
mov
xchg
jne
and
sub
sbb
sub
in
clc
xlat
dec
sbb
jle
jmp
xor
ljmp
dec
mov
cmp
inc
shlb
cli
and
fadd
dec
negb
cli
sahf
mov
mov
dec
test
mov
cmp
arpl
inc
push
psubusb
scas
mov
mov
xor
es
xor
push
adc
pushf
cld
xchg
hlt
jae
aam
cs
lea
imul
dec
jns
js
jo
jge
arpl
scas
jge
mov
lock
jo
push
movsl
out
pop
mov
das
in
and
mov
sbb
push
movsb
cwtl
pop
mov
fildll
out
xor
sti
mov
psrad
lret
sbb
adc
sbb
push
inc
mov
push
mov
prefetchnta
adc
repnz
inc
dec
inc
mov
lods
mov
out
ja
and
mov
cwtl
mov
xchg
js
add
int
call
dec
adc
adc
push
subb
pop
and
sbb
loope
mov
test
scas
xor
lea
clc
int
add
add
test
mov
lods
lods
and
fcompl
ret
cmp
pusha
pop
loope
mov
out
fdivl
push
ds
aas
jbe
es
cmpsl
imul
add
lods
jmp
call
cmpsl
das
add
pop
cwtl
pop
repz
scas
xchg
mov
mov
pminsw
xchg
push
cmp
mov
xor
dec
mov
fnstcw
adc
inc
call
push
cmc
pusha
cltd
movsl
popf
pushf
cmc
popa
or
leave
sbb
jae
std
xchg
ret
xor
outsb
out
outsl
cs
adc
dec
jb
pop
xchg
pop
dec
fcmovnu
cltd
movsb
or
pop
push
mov
out
lds
cmp
jge
xchg
xor
in
loopne
loope
inc
bound
cwtl
out
sbb
pop
data16
repnz
mov
jmp
dec
ljmp
mov
mov
adc
jle
adc
push
push
movsb
adc
aam
and
out
pop
addb
xchg
nop
jp
xor
out
ds
jge
pop
cmpsb
testb
addr16
mov
inc
or
mov
pop
cli
sub
jmp
mov
dec
xchg
aaa
lret
xor
xorl
sub
or
dec
movsl
mov
sub
mov
pop
cwtl
roll
mov
out
pop
incb
hlt
push
push
std
mov
andl
add
cmp
jge
repnz
lret
jmp
inc
mov
std
dec
jb
int3
mov
cmp
adc
call
cmp
in
decb
dec
and
cmp
ljmp
inc
ret
popa
sbb
cmp
push
loop
dec
test
fldt
push
gs
sbb
or
mov
std
loopne
stos
sub
pop
lods
sub
push
or
or
stc
pushf
push
insb
xchg
out
inc
jmp
xor
imul
xor
out
pop
inc
xchg
pop
cli
fwait
je
fwait
pop
shl
fldt
fwait
jns
sahf
pushf
imul
mov
aam
dec
add
push
sub
push
xchg
or
xor
adc
js
or
dec
hlt
jb
fwait
lcall
xchg
cmpsb
jbe
inc
nop
pop
mov
sbb
push
or
adc
sub
ja
movsl
pop
push
or
repnz
fildl
bound
loope
xlat
stos
addb
or
imul
dec
pop
in
imul
int3
dec
addb
fistpl
jb
rorl
das
pop
addl
push
cld
les
jmp
mov
adc
push
fildl
jl
dec
inc
dec
sub
pop
cli
or
andl
xor
scas
xor
sub
mov
push
aaa
dec
rcr
out
jne
jmp
add
sbb
rolb
push
bound
leave
sarl
scas
mov
lahf
xor
or
shll
decb
mov
cmp
mov
push
mov
sti
cmpsl
cmp
jns
loope
dec
enter
pop
js
mov
pop
push
lahf
out
adc
clc
jmp
adc
cmp
jecxz
cs
xlat
std
push
xorl
pop
movsl
inc
jns
js
pop
push
insb
stc
or
mov
jnp
shr
out
aad
cmp
sbb
test
call
mov
out
aas
lock
push
and
lcall
ret
push
js
cli
dec
rclb
xchg
lret
test
ret
loopne
aad
jae
clc
dec
enter
mov
in
cmpsb
dec
mov
mov
jnp
add
or
mov
dec
cmp
mov
data16
bound
ret
mov
jae
xchg
lock
shlb
sbb
in
fildll
rcr
xor
mov
cmp
add
cmp
cmp
leave
lcall
lds
imul
push
mov
pop
subl
cmc
mov
scas
pop
xchg
clc
mov
mov
loope
pop
les
imul
xor
int
aaa
fisubl
xchg
mov
mov
pop
push
repnz
mov
sub
scas
rorl
scas
sbb
insb
jb
dec
movsb
mov
mov
xchg
loopne
int3
add
sarl
push
in
add
add
pop
jp
mov
test
loop
jg
sub
pop
ds
push
cld
push
xorb
lcall
cltd
fdiv
stos
lcall
lahf
mov
inc
adc
repz
outsl
push
out
repnz
mov
pop
pop
dec
cwtl
adc
xor
test
mov
arpl
cmp
faddl
jecxz
sub
repz
test
jge
cmc
and
add
std
stos
mov
fwait
cmc
jno
rcrl
dec
sarb
mov
xor
sbb
and
popf
popf
popf
das
xchg
and
mov
sub
mov
subl
inc
pushf
dec
jp
int
jae
and
inc
pop
das
add
inc
mov
inc
leave
fsubrs
loopne
into
clc
push
xlat
in
cmp
mov
ljmp
jno
lods
mov
and
iret
pop
fwait
dec
xor
pop
push
imul
ja
rcl
addr16
sbb
loop
xor
shlb
shr
andb
lds
adc
sub
aad
outsb
cmpsl
cmp
xchg
shll
out
pop
fdivrl
xchg
and
fimuls
adc
jnp
addr16
out
xchg
subl
insb
cmp
jle
imul
cmp
add
jp
sub
neg
icebp
sti
cmp
mov
mov
in
xchg
fnsave
cmpb
sbb
pushaw
aas
sarb
inc
mov
inc
pop
lahf
lret
repz
inc
xchg
loopne,pn
jo
fld
test
mov
or
push
fldenv
lahf
push
pop
lock
test
std
rorb
bound
orl
pop
sbb
dec
out
dec
xor
push
mov
jae
sub
xor
repnz
cmp
push
push
xor
mov
shlb
push
dec
fdivrs
test
in
push
ljmp
sti
stos
mov
repz
outsb
pusha
stos
cltd
inc
mov
ret
inc
or
add
lahf
sbbl
xchg
cld
sub
pop
in
movb
mov
mov
or
pop
pop
push
mov
or
inc
push
out
add
hlt
movsl
sub
outsb
mov
js
fidivl
fldenv
ss
cmp
xchg
pusha
jecxz
lods
aas
or
or
pop
sahf
and
sbb
mov
cmpsb
insl
push
or
cmp
jne
pusha
jnp
iret
dec
cmp
fldcw
mov
js
xchg
std
cld
adcb
cmp
imul
pop
sub
movsb
les
outsb
jl
push
fmull
inc
mov
imul
into
lahf
cmc
sbb
inc
mov
push
std
mov
sbb
jne
in
xchg
popa
shlb
bound
add
mov
loop
repz
inc
sub
mov
xchg
out
mov
mov
pxor
adc
jne
sti
mov
cmp
xor
ret
ss
and
or
pop
inc
imul
mov
dec
shl
pop
xor
roll
mov
out
test
and
into
jnp
mov
scas
push
sub
jo
xchg
mov
jmp
mov
and
fists
out
jmp
adcb
leave
stos
in
addb
imul
dec
fmuls
sar
mov
movsl
in
jmp
sub
in
call
loopne
std
popa
sub
pop
insb
cmp
and
outsb
cmp
inc
insl
jge
cmp
pop
xchg
mov
leave
mov
lret
xor
xor
add
dec
pop
aad
negb
shll
xor
add
mov
pop
pusha
loope
add
cmp
enter
cmpsb
rcr
mov
pop
dec
iret
jg
mov
aam
orb
std
leave
in
push
cmp
cltd
rclb
hlt
mov
repnz
aam
and
test
xchg
jns
mov
aad
stos
pop
cmp
xchg
insl
lock
mov
test
cmpsl
das
sahf
xchg
in
mov
sahf
fstps
inc
in
push
roll
sub
loop
push
imul
nop
push
add
incl
mov
dec
and
jle
inc
xchg
pusha
adc
mov
and
cwtl
sbb
and
add
cmp
mov
adc
insb
xchg
lods
push
fs
pushf
scas
mov
out
sub
das
push
mov
fwait
push
loope
pushf
mov
fs
pop
cmp
fimull
sbb
jne
jo
adc
mov
je
jb
sub
jecxz
mov
shlb
pop
ret
mov
cmpsb
push
lahf
inc
cmp
or
add
enter
xchg
outsl
add
gs
dec
mov
popf
pop
sti
inc
popa
ret
dec
lea
adc
test
pop
push
aam
daa
or
rcrb
inc
jecxz
addr16
adcl
inc
cli
add
icebp
pop
pop
iret
pop
leave
mov
push
movsl
sbb
mov
add
jb
dec
rorb
inc
and
mov
stos
fstl
add
stos
imul
xlat
outsb
or
fs
daa
lret
addb
movsl
aaa
imul
sub
add
sbb
inc
mov
mov
add
pop
sbb
add
test
pop
cli
push
cmp
popa
mov
dec
add
cvttps2pi
fwait
dec
xchg
int
pusha
addl
push
enter
out
cs
fadds
dec
sbb
xor
mov
je
in
es
cltd
xchg
xchg
insb
or
cmp
dec
push
int
movsl
leave
nop
mov
jne
out
jno
push
and
shrb
xchg
and
adc
mov
negl
jbe
jp
inc
lds
dec
rorl
mov
push
xchg
aaa
push
insb
mov
inc
insb
sub
aam
daa
ds
and
sarl
push
sub
sbb
adcl
push
dec
cmp
inc
imul
or
pop
inc
fildl
inc
jmp
pop
mov
int
xor
mov
cmpsl
jle
repnz
push
mov
mov
hlt
jbe
fidivrs
push
mov
jb
jecxz
das
mov
bound
push
pop
push
sbb
mov
das
mov
xor
push
shrl
push
fiadds
roll
push
push
inc
lods
pop
js
xor
shll
mov
in
mov
fistl
scas
pop
rcll
or
mov
ficoml
imul
fldl
adc
xor
xor
jbe
adcl
aam
int3
mov
pop
jmp
fcmovb
jno
les
cmp
xor
arpl
mov
adc
sbb
or
mov
jbe
lcall
movsl
mov
xor
syscall
mov
sub
sub
sbb
out
push
mov
adc
loopne
inc
out
sub
cli
sti
jg
data16
cmp
and
sub
dec
int
sbbl
pop
jns
rclb
lret
outsl
add
xor
push
jecxz
pop
pusha
sti
lock
arpl
addr16
mov
inc
imul
sbb
stc
cld
test
add
test
xchg
inc
jnp
adc
and
and
lods
in
div
dec
pop
stos
loop
fnstsw
jo
jbe
out
das
sub
sbb
int
icebp
mov
aad
mov
out
add
jmp
mov
sbb
sbb
ljmp
test
jl
fwait
jg
jmp
mov
pop
repnz
dec
add
cmp
leave
mov
xor
or
enter
pop
dec
mov
mov
dec
lahf
sti
dec
xchg
test
pushf
xchg
sub
aaa
xchg
test
jp
xchg
pop
ret
scas
and
pop
mov
inc
sbbb
jmp
aam
fdivs
push
jae
mov
mov
mov
clc
push
mov
cs
gs
dec
jbe
sar
dec
mov
jmp
dec
cmc
aaa
and
and
push
lret
xorl
xor
and
hlt
inc
nop
ds
jnp
mov
lcall
pop
xorb
cmp
out
test
test
sahf
xor
add
cmp
xchg
cmp
ret
mov
es
pop
loopne
add
pop
arpl
cmp
mov
dec
sti
push
loopne
xchg
push
cwtl
aaa
fisttpl
adcl
cs
pop
fistl
dec
cmp
iret
lret
sub
inc
pop
sub
addr16
pop
mov
cmpsl
mov
test
outsl
arpl
inc
push
or
popa
pop
sub
enter
gs
cld
pop
ss
das
mov
out
xor
lret
or
je
lock
shlb
pop
fsub
mov
faddp
test
adc
jnp
xchg
imul
push
iret
xchg
jae
xchg
mov
push
bound
dec
div
jmp
xor
sub
mov
pop
adc
mov
mov
cld
repz
mov
sbb
aad
sub
and
out
inc
add
xchg
pop
push
dec
push
mov
fimull
push
mov
add
pop
jl
out
or
mov
lret
and
or
std
and
mov
rorb
add
int3
inc
in
xchg
int3
loop
and
pop
xchg
push
pop
enter
outsl
fldl
xchg
ljmp
outsl
mov
mov
push
fsub
daa
adc
frndint
mov
push
adc
xchg
dec
push
bound
in
fs
fsub
inc
push
mov
in
push
repnz
cmp
je
mov
movsb
cltd
insb
dec
mov
ss
outsl
mov
fucom
daa
xor
lahf
cli
mov
push
sub
notrack
in
outsb
push
jl
xor
ret
push
inc
fwait
lods
xchg
push
jecxz
fprem
daa
cmp
das
jns
add
and
dec
in
jle
dec
cmpsb
insb
icebp
xor
pop
es
pop
lret
pop
and
jns
adc
icebp
jae
repnz
pusha
ss
inc
iret
and
pop
cmp
incl
xlat
lret
sbb
nop
xor
cli
jmp
cld
mov
rcrb
inc
cmc
pop
and
push
xchg
jl
inc
aaa
inc
sub
sbb
xchg
outsb
ja
adc
xchg
lock
mov
adc
cmp
cmc
hlt
pop
xor
adc
mov
and
shlb
dec
xor
add
push
pushf
mov
iret
pop
popf
sub
adc
ficomps
pushf
push
mov
outsb
fs
rcl
leave
mov
and
sbb
pop
mov
aam
adc
and
sbb
or
in
rorl
call
loop
jnp
sbb
enter
cld
add
test
jb
xchg
in
leave
and
lahf
sti
leave
les
shufps
mov
add
shl
or
gs
fwait
push
mov
outsl
clc
repnz
xor
mov
cmp
pop
adcb
sbb
jp
cld
fadd
cmp
test
loope
fstpl
or
addb
mov
dec
outsb
std
jo
loopne
inc
jb
movsl
adc
bound
outsl
loope
pop
and
outsb
push
call
push
rcl
adc
mov
xor
stos
inc
mov
movsb
mov
pop
sub
flds
inc
insb
jne
loopne
jge
dec
fadd
mov
lods
aam
js
aam
in
sbb
imul
test
fcomi
xorb
jg
push
push
aad
dec
sbb
loope
mov
inc
std
dec
or
cld
rcrb
cwtl
sarb
dec
add
int
int3
clc
out
je
stos
add
dec
icebp
dec
inc
das
mov
mov
pop
lret
ds
nop
sbb
xchg
in
jne
out
roll
outsl
stos
adc
inc
adc
ss
lea
stos
aad
sub
repnz
sar
push
cmpsb
pop
sub
sbb
inc
loopne
add
pop
mov
iret
clc
adc
adcb
arpl
and
jg
adc
mov
adc
xor
mov
out
inc
push
movsb
pop
mov
rolb
fcomip
adc
xchg
out
dec
fwait
sarb
sub
jmp
cmc
es
daa
jge
scas
fcomip
adc
pushf
pop
xchg
push
pop
inc
xorb
shl
sbb
clc
mov
stc
sub
sbb
sbb
push
sbb
push
pop
jae
fs
test
jmp
inc
sbb
lret
push
mov
flds
sbb
lods
lret
rclb
das
out
adc
leave
mov
cmp
clc
mov
in
mov
mov
arpl
add
push
ficoml
pop
sub
test
ds
cmp
test
cmpsl
enter
jo
lods
aad
dec
jae
add
cltd
insl
lea
lret
cmp
sbb
aam
xchg
fisubrs
icebp
lea
fidivrl
jno
shll
mov
rcr
in
and
rorb
jge
jb
rcrb
gs
xchg
and
xor
fldt
outsl
inc
popa
daa
jp
push
jae
pop
out
stos
sub
xlat
jge
call
and
mov
into
mov
je
mov
lods
cmp
insb
xlat
add
popl
inc
dec
mov
or
inc
cli
fidivrs
stos
mov
or
xchg
push
hlt
fnstsw
in
je,pt
xlat
aas
mov
bound
jno
add
push
test
inc
xor
cmovge
imul
ja
adc
data16
sub
outsb
push
dec
ror
in
pushf
lret
mov
push
std
or
or
mov
negl
cmp
sarl
popf
sahf
jne
mov
out
loope
insb
idiv
in
mov
inc
stos
push
mov
std
repnz
jle
sub
addr16
incb
mov
test
rorl
fmuls
fidivrl
push
mov
out
fwait
xor
subb
xchg
scas
add
or
cmp
xchg
loop
adc
cmc
gs
and
aad
sub
subb
sahf
test
cmp
mov
das
cmc
fdivrl
ja
add
push
daa
push
cmp
push
fwait
or
mov
or
mov
jl
dec
sub
mov
push
ja
stos
arpl
movsl
fimull
xlat
dec
mov
cmp
pushf
mov
adc
jns
data16
xor
jo
popf
xchg
sahf
movsl
pop
or
aaa
hlt
fdivl
ret
jg
into
sbb
int
jg
pop
sahf
adc
xchg
cmp
xorl
xchg
daa
pop
in
jge
pop
jg
jmp
jbe
sub
xchg
lret
out
aam
cs
push
push
fildll
in
mov
mov
xchg
sub
xchg
outsl
pop
arpl
xor
jg
inc
addr16
out
aad
lcall
rorl
mov
das
adc
add
sbb
jbe
daa
push
inc
fisttpl
outsl
dec
fs
test
xchg
aaa
fimull
loopne
jb
mov
inc
loopne
es
dec
jecxz
lods
in
and
aaa
jmp
adc
and
push
das
stos
out
into
fbstp
subb
cmp
dec
or
fldt
inc
sahf
inc
and
imul
inc
lods
push
cmova
dec
ja
mov
sbb
sbb
shll
push
mov
jecxz
cld
push
mov
xchg
mov
loop
xor
jno
xlat
pop
iret
js
push
sbb
aad
sahf
mov
and
xor
dec
shr
jno
dec
mov
inc
ret
xchg
xchg
push
xor
push
sbb
test
jno
xor
pop
mov
cltd
xchg
into
lea
xor
fldl
repz
mov
int
sub
aaa
jg
dec
xchg
jle
movsb
mov
fstpt
xchg
les
push
cmpsb
inc
jecxz
pop
xor
ret
cmpsl
sub
fisttpll
loop
rcl
movsl
xchg
and
test
lcall
cmp
mov
jbe
aam
or
jge
sub
add
gs
push
ret
roll
jecxz
cmp
pop
nop
mov
jnp
and
push
aad
jg
push
and
test
jmp
clc
scas
mov
and
fistps
inc
mov
cmpl
push
rol
sbb
stos
pop
push
add
add
dec
push
test
xchg
dec
pop
daa
movsb
jmp
cmp
daa
xchg
aam
sti
es
jg
insb
sbb
int3
shl
add
xchg
mov
and
xchg
mov
stc
cmc
sbb
push
je
ja
out
mov
add
dec
in
or
fs
sub
add
ret
inc
mov
imul
jle
mov
adc
xor
adc
jbe
stc
inc
imul
xchg
lds
in
call
out
add
cmpsl
shll
fidivl
xchg
cmp
xor
lods
ret
pop
mov
pop
imul
aaa
mov
sbb
mov
test
jecxz
dec
sub
inc
icebp
xchg
sub
filds
xchg
jl
xchg
es
dec
aas
enter
add
mov
mov
and
cwtl
pop
sbb
xor
and
loope
cmp
repnz
sub
adc
and
sbb
mov
sub
or
pop
mov
inc
mov
roll
or
sbb
jno
or
mov
add
mov
stc
add
scas
lahf
xchg
and
insb
enter
dec
push
xor
jb
adc
sub
inc
dec
imul
nop
sub
mov
xchg
in
js
out
sbb
pop
insb
pop
or
or
gs
pop
adc
mov
je
out
ja
cmp
inc
cld
out
test
jp
sub
ret
cmp
mov
push
cld
jecxz
add
out
dec
xor
cld
rcl
adc
test
leave
gs
rolb
push
push
or
inc
rcll
cli
movsl
cmp
cwtl
mov
push
mov
push
loope
cmpsl
and
pop
icebp
inc
in
test
mov
jae
and
adc
xlat
dec
or
nop
stc
stos
out
das
ret
xchg
mov
clc
loope
lods
xchg
jg
in
in
scas
dec
add
adc
or
test
int3
xor
mov
lods
out
sub
leave
mov
mov
adc
mov
mov
push
xchg
adc
jmp
add
push
insb
ret
aas
call
andb
and
add
cmp
xor
and
rcrb
jmp
add
jbe
jge
mov
sub
lret
clts
jnp
fists
je
pop
sti
lock
out
cmp
cmp
dec
lods
xchg
push
popf
xor
test
push
cmp
leave
orb
stos
das
dec
jo
push
lds
test
cli
xchg
jo
pop
loop
out
call
sub
pop
hlt
mov
inc
mov
loope
inc
popa
movsb
rolb
rclb
inc
enter
lds
std
xor
and
xor
push
inc
sahf
movsb
les
add
insl
les
mov
cltd
shrl
insl
dec
data16
sar
xchg
xchg
xchg
fs
loopne
xor
fcmovnbe
dec
and
mov
jg
xchg
mov
jae
pop
out
adc
insl
cmp
lock
or
push
adc
enter
pop
pushf
xor
mov
or
fsubs
jne
dec
mov
xchg
lcall
hlt
aad
hlt
jb
pop
out
fldt
imull
jecxz
ljmp
pushw
loop
into
lahf
testl
pushf
arpl
lods
cmp
inc
lret
shl
cmp
cmp
mov
dec
shl
outsl
cmp
leave
sub
stos
test
xchg
lods
jno
push
inc
ror
or
adc
in
mov
mov
popa
mov
push
outsb
inc
int
outsb
dec
jb
popa
mov
add
xchg
nop
imul
jecxz
and
ljmp
and
popw
push
jmp
push
adc
cwtl
mov
push
or
cs
mov
fcomp
jmp
test
addb
shrb
xchg
into
mov
pop
mov
push
cmpsl
dec
mov
add
arpl
mov
mov
imul
fistpll
imull
dec
jns
push
test
cmp
adc
shll
pop
cmp
in
mov
fisubrl
arpl
stos
adc
mov
scas
xor
xchg
jnp
pop
out
je
cwtl
sarl
sbb
repz
insl
sub
jno
mov
cmpsl
cmp
mov
mov
ss
movb
and
push
xor
add
orl
xor
stos
pop
xchg
mov
mov
nop
in
cltd
mov
mov
sbb
or
add
cltd
out
dec
xchg
push
cld
pop
pop
pop
push
aam
mov
cltd
and
jl
aad
dec
pop
sub
pop
inc
mov
or
lock
clc
mov
scas
sbb
mov
cltd
mov
pop
sub
sbb
dec
xchg
pop
in
test
loope
outsb
jmp
xchg
rolb
jb
out
je
mov
mov
push
xor
dec
clc
pop
clc
popa
dec
cs
iret
pop
test
pusha
popf
add
xor
mov
dec
fcomps
adc
jmp
mov
jns
out
push
dec
cmp
sub
fnstsw
jbe
les
adc
add
cmp
cwtl
ret
aas
push
mov
cwtl
inc
es
jae
fisttps
mov
and
fcomps
push
sbb
push
or
sarl
out
into
xlat
cmp
mov
stos
mov
adc
pop
push
push
mov
or
pop
xchg
sarl
jecxz
leave
xchg
jno
pop
push
xor
jg
xchg
add
clc
sti
test
repz
or
movsb
orl
and
mov
lcall
mov
jo
xchg
enter
fbld
push
mov
and
imul
xor
mov
adc
cmp
and
mov
push
jge
jle
xor
out
cmpsb
lds
mov
push
and
les
mov
mov
scas
and
pop
push
jle
scas
rcrb
in
stos
mov
mov
int
stos
pop
sar
mov
movsb
das
sbb
xlat
sti
cli
fbld
jbe
loop
and
xchg
aad
mov
scas
push
movsl
lods
jno
mov
and
jns
mov
les
inc
sub
push
sbb
mov
dec
cmp
imul
and
jbe
sbb
mov
int3
sub
mull
sbb
mov
clc
in
lods
xchg
add
cmpsb
lods
sbb
jle
enter
fst
mov
test
aad
cmp
pop
pop
lret
mov
loopne
push
cmpsl
movsl
mov
test
pop
mov
shlb
mov
pop
and
and
jmp
jno
jbe
inc
pop
cmp
in
add
ret
jmp
jg
lcall
mov
xchg
add
sbb
xchg
sub
pop
xorl
adc
int3
jmp
mov
xor
shlb
bound
xchg
icebp
sbb
and
mov
xchg
repnz
xor
pop
add
jmp
stos
fnstcw
inc
push
rclb
add
jno
test
jnp
cmpsb
mov
jg
mov
sbb
push
mov
daa
mov
cmc
sbb
idivb
cmp
push
out
clc
and
call
mov
into
and
leave
sbb
mov
stos
mov
ret
das
jg
scas
adc
jbe
mov
sub
cmp
lret
sahf
repz
int3
sub
xchg
movsb
roll
and
lods
notb
and
inc
push
pop
xchg
xor
push
push
pop
jb
add
in
insl
in
xchg
sti
adc
or
aaa
inc
jb
add
mov
rcrb
bound
daa
sub
mov
cmpsl
pusha
cmpl
stc
lds
dec
jbe
mov
daa
jnp
je
xchg
add
add
dec
iret
and
or
out
mov
xor
inc
rcll
movsl
insl
lods
int3
roll
sbb
std
dec
add
cmp
pusha
nop
pop
mov
je
add
mul
pop
out
std
in
cli
shrl
xchg
sbb
es
fwait
dec
xchg
sub
xlat
adc
jge
adc
sbb
sbb
test
cmp
ret
in
mov
scas
test
push
sbb
pop
imul
sahf
fsubl
imul
mov
inc
cmc
ror
mov
aam
mov
repnz
sbb
sub
inc
jno
add
test
mov
or
out
push
mov
sbb
jns
lahf
into
loop
inc
xor
cli
cmp
or
test
aam
arpl
paddsb
jl
xchg
dec
and
xchg
and
sub
fdiv
out
movb
ja
dec
mov
mov
lea
outsl
cmp
sahf
pop
or
fcoml
sti
cwtl
xor
daa
adc
push
jns
cltd
mov
cmpsb
sbb
dec
dec
int
in
mov
and
addl
imul
dec
mov
outsb
fnstenv
xlat
scas
adc
or
shrl
and
jnp
jmp
jnp
addr16
sub
push
lds
sahf
cmpsl
dec
ljmp
fdivrs
aam
pop
ret
es
sbb
pop
loop
jnp
cmpsb
or
and
orb
jmp
mov
test
mov
test
and
mov
xchg
ss
mov
xor
scas
fmul
dec
cwtl
fldcw
repnz
and
mov
int3
dec
adc
std
scas
popf
pop
fwait
clc
fcmovu
fsub
aad
aaa
pop
roll
jecxz
inc
sbbl
push
add
daa
lods
negl
rcrl
lret
jae
mov
sbb
enter
mov
jne
sahf
xchg
xchg
sub
arpl
xchg
mov
test
ja
mov
lock
fs
and
ljmp
mov
ds
js
mov
fidivs
mov
mov
or
scas
fsubrs
cmp
sub
jo
adc
mov
inc
sub
aas
or
test
loop
jno
imul
sub
cltd
gs
inc
arpl
xor
jbe
pop
jg
decb
mov
sarb
iret
aad
sbb
shll
mov
jl
cmp
out
hlt
mov
shlb
mov
in
lahf
pop
pop
jmp
adc
xlat
in
mov
orb
mov
imul
sbb
mov
idivb
lock
lret
add
aas
outsb
js
fsub
pop
mov
ljmp
out
shll
cmp
je
enter
mov
into
mov
sub
dec
test
lahf
dec
and
rclb
jmp
pushf
mov
jle
out
repz
pop
push
fists
insb
aas
imul
adc
std
mov
flds
inc
mov
xlat
cmpsb
stc
ficompl
xchg
unpcklps
mov
pushf
or
scas
pop
inc
jo
mov
jle
adc
hlt
imul
fldpi
aaa
or
pop
neg
and
xor
imul
js
xor
aaa
push
xor
stos
call
mov
jecxz
inc
jne
jg
cltd
add
insb
xchg
fst
lret
popf
xchg
mov
xchg
cmp
imul
inc
jge
mov
jbe
xor
incl
add
dec
mov
lret
sahf
mov
shlb
jno
ret
dec
mov
std
jno
idivb
push
xor
inc
aad
fmul
sub
add
outsb
mov
aaa
into
add
insb
dec
dec
mov
jge
fcmovb
inc
xchg
cmc
lea
inc
inc
push
lods
push
js
stos
idivl
leave
cmp
push
movsb
arpl
adc
mov
xchg
stos
movsl
fisttpl
cmc
sub
or
pushf
xchg
out
xor
sub
aad
sbb
ja
jle
subl
aam
mov
jl
imul
loope
cmp
shl
ret
lret
enter
das
pushf
push
lea
loope
ljmp
cs
xchg
es
lock
xchg
fimull
sbb
ss
xchg
rcrl
push
and
repz
inc
dec
pop
mov
dec
les
xchg
cwtl
repz
lahf
sub
cmp
sti
stc
adc
out
or
stc
lods
add
insl
lock
fisttpl
xor
loop
mov
pop
test
inc
into
cwtl
pop
lock
shl
clc
cmp
stos
push
dec
mov
mov
xlat
mov
nop
test
fiadds
and
sbb
add
jb
and
gs
mov
add
fisttps
lods
lock
fsubl
xor
push
popf
sbb
sub
in
mov
mov
test
lret
pop
xchg
loop
lret
hlt
adc
mov
jp
ljmp
call
sbbb
aam
xor
je
cmp
mov
jecxz
sub
push
or
rcll
mov
pop
mov
xchg
dec
lcall
es
nop
push
fs
mov
mov
xchg
mov
insb
in
cmp
aaa
fs
mov
mov
and
mov
decl
scas
inc
stc
xchg
or
or
mov
bound
xor
sbb
push
push
cmpsb
sub
rolb
pop
out
aas
mov
mov
adc
jl
mov
pop
cmpsb
cmp
lahf
pop
loopne
push
cmp
in
sub
mov
xchg
mov
int
sbb
fisubrs
jae
outsl
fidivrs
push
push
loope
jle
jb
and
popa
mov
sbb
sbb
lahf
xchg
xor
add
andb
test
add
hlt
pop
xor
or
fstpt
jnp
in
mov
jnp
mov
mov
lret
pop
sub
xor
popa
xor
lret
pushf
and
fistl
pop
insl
sbb
push
idivb
pop
arpl
shll
fnsave
and
les
jbe
xor
shlb
mov
inc
hlt
adc
sbb
loopne
mov
or
imulb
pop
cmp
in
lcall
bound
out
or
cld
jl
fbstp
ffreep
out
pop
adc
lcall
or
fs
outsb
and
sub
rcrl
cltd
ss
mov
push
cmpl
xchg
faddp
insb
xchg
or
mov
pushf
inc
push
jl
inc
xchg
nop
cmp
ja
push
cwtl
repz
sbb
outsl
sub
subl
mov
iret
mov
mov
xor
je
sub
push
repnz
arpl
cwtl
and
add
aam
inc
jecxz
dec
insl
push
xchg
push
jge
jae
adc
mov
inc
dec
popa
mov
rcrl
movsb
gs
addr16
negl
pop
mov
in
sub
sti
and
sbb
jae
mov
shll
lds
frstors
rclb
push
or
jb
adcl
adc
ret
and
jns
das
pop
add
sbb
int
inc
xchg
popa
sub
movsl
adc
fidivrs
or
fs
in
mov
xchg
std
pop
xchg
stos
cmpsl
aam
pop
add
bound
imul
ds
fmull
mov
cmc
jg
xor
lea
cmp
loop
cmp
sbb
in
ljmp
xor
sti
add
adc
iret
out
popf
bound
test
sub
into
into
cmp
bound
inc
stc
mov
sbb
imul
pop
inc
xlat
ja
aaa
test
lods
adc
mov
movsb
pushl
daa
pop
test
fwait
mov
pop
lock
cmp
mov
lret
lds
lds
dec
pop
cmc
out
push
cmp
ds
sarl
movsl
sbb
mov
shlb
stos
sub
xchg
scas
insl
jo
les
push
adc
push
jge
mov
mov
aas
imul
mov
pop
jl
pop
test
xor
cs
enter
arpl
mov
popa
dec
in
mov
insb
push
cmpsb
cli
cs
xchg
mov
cltd
fbstp
jg
aaa
push
call
scas
push
stos
js
sbb
adc
cmpsb
xor
sbb
jne
push
aad
adc
mov
inc
xor
scas
cmp
cs
cmpl
pop
pop
jbe
jae
mov
xor
xchg
xlat
enter
dec
xchg
and
pop
sub
cmp
packuswb
mov
fsts
xor
jb
in
test
test
jle
enter
leave
and
fwait
sbb
mov
js
and
dec
pop
movsb
scas
push
inc
xor
fadd
inc
cmpb
leave
cmp
dec
fucomi
mov
cmpsb
mov
pop
loope
push
insb
jmp
push
movsb
js
cs
andb
out
xor
jo
pop
jae
dec
xor
mov
scas
jecxz
cwtl
jg
lock
test
push
nop
xchg
in
jbe
mov
and
jg
in
in
in
aas
mov
movsb
std
jl
call
pop
dec
lcall
mov
xor
mov
dec
mov
jmp
cmp
adcl
add
js
and
out
in
ljmp
sbb
mov
outsl
ja
aaa
jo
insb
out
jns
sbb
jg
fcom
or
fldt
mov
lahf
cld
adc
lahf
movsl
popw
lock
repz
leave
jl
inc
dec
fbld
std
ds
rolb
shll
cmc
mov
test
push
and
stc
inc
shll
fisubrl
test
xor
lds
xchg
js
jnp
movsb
arpl
fwait
jnp
cltd
into
mov
ds
and
sub
push
sub
sbb
mov
insl
movsl
lods
cld
icebp
jmp
jnp
xchg
fcmovbe
rcll
sub
cwtl
dec
pop
test
vmwrite
aam
test
jge
outsb
add
push
sahf
js
mov
mov
adc
add
sub
mov
lcall
jns
pop
out
sub
loop
pusha
adc
mov
inc
sarb
mov
push
pop
sub
xchg
hlt
test
mov
out
cmp
rolb
mov
mov
orl
sbb
adc
mov
mov
sub
imul
mov
push
sahf
sbb
lds
scas
sub
mov
insl
sarb
in
mov
xchg
hlt
or
fimuls
negb
lock
les
mov
dec
cmp
arpl
mov
inc
inc
inc
mov
gs
ret
add
pop
push
xchg
std
insb
push
clc
push
xor
pushf
dec
cltd
ret
adc
pushf
lock
and
sbb
cli
xchg
dec
ss
jg
imul
sbb
ret
jecxz
in
shr
pop
loop
mov
mov
push
gs
ret
sarb
fisttps
push
int
xchg
cmc
rclb
fnstsw
lret
push
jno
clc
iret
inc
jge
mov
hlt
or
imul
mov
sub
jp
lds
in
inc
dec
aaa
and
popa
aas
cmpsl
in
repnz
pop
shr
jnp
xlat
ret
sub
or
fnstcw
lods
mov
popa
sub
jg
je
sti
shlb
adc
adcb
sbb
leave
xor
and
pop
and
loope
ja
jmp
pop
mov
int3
lea
jno
jae
scas
cmpsl
xorl
jle
xor
movsb
or
lods
jle
aaa
lods
gs
fimuls
cwtl
shrl
pop
faddl
xor
dec
dec
dec
xchg
xor
cmp
jb
mov
and
mov
iret
jg
push
jle
mov
fstps
mov
aas
push
jb
adc
leave
call
out
idivl
xor
pop
pop
mov
jae
ss
repnz
mov
mov
mov
push
stos
xor
dec
mov
lock
ret
pushf
lahf
push
loope
bound
xor
outsb
or
jo
pop
add
test
inc
or
cli
push
lret
push
ss
xor
or
adc
push
dec
sbb
les
or
arpl
leave
out
jp
lahf
cmpb
jge
or
xor
mov
shlb
jmp
push
subb
jl
and
adc
inc
and
jmp
fildll
jg
push
into
mov
xor
loope
xor
and
fsub
lret
sub
xchg
sub
or
int
mov
mov
pop
pop
xchg
rclb
scas
xchg
adc
add
loop
stos
lods
xchg
xchg
cmpxchg
imul
aad
inc
test
xlat
mov
lcall
lea
int3
push
dec
xor
mov
cwtl
mov
mov
dec
insl
cmp
cmp
cld
test
cld
ret
loope
cmovle
inc
dec
rorb
pop
inc
and
movsl
sti
jl
mov
inc
jnp
lret
dec
shlb
adc
roll
xchg
inc
hlt
mov
aad
fldenv
pop
xor
clc
fistpl
je
pop
xor
mov
int
xchg
stos
je
push
orb
notl
and
nop
mov
cs
mov
int3
sarl
cmp
mov
jp
or
aas
fsubrs
stc
mov
cli
mov
xchg
push
add
dec
mov
fldcw
fiadds
mov
sub
into
js
lea
and
imul
push
mov
leave
fbld
and
push
jmp
jbe
out
imulb
insl
js
imul
push
mov
jb
test
lcall
mulb
int3
scas
sti
pop
push
push
call
mov
fstps
xchg
lahf
decb
pop
das
faddp
xor
cmpsl
bound
cs
rorl
and
cwtl
cltd
xor
ljmp
mov
jecxz
lret
hlt
mov
and
lods
dec
dec
loopne
xchg
adc
jmp
and
sarb
aam
shlb
jmp
int
and
push
into
enter
lcall
inc
mov
push
jmp
cmp
sbb
mov
jns
mov
jb
int3
cwtl
test
fldt
clc
mov
xchg
jb
add
cmpsl
jl
ficoms
xchg
adc
cmp
pop
sub
gs
lret
push
xlat
mov
insl
jg
jmp
rclb
push
mov
push
or
addl
xchg
lds
dec
das
jge
repz
les
arpl
in
pop
loop
and
cmp
dec
insl
out
mov
fldcw
mov
loop
je
icebp
jnp
in
push
jo
fidivrl
add
mov
lret
cmpl
inc
mov
jne
lret
pop
lret
xor
lds
sbb
cld
pop
int3
cmc
imul
fcomi
mov
cmp
loope
xor
insb
hlt
inc
push
frstpm(287
adc
xchg
ja
lods
push
mov
jge
cmpsl
pop
notl
pop
lret
fldl
push
fnstcw
mov
test
test
mov
orl
ss
lret
test
lods
cmp
ljmp
jl
push
xchg
sbb
and
add
xchg
and
sti
addr16
bound
scas
je
xchg
sbb
js
sbb
sti
mov
int
cltd
push
les
inc
dec
dec
inc
sub
in
adc
int
and
push
mov
push
mov
inc
xchg
sub
iret
pop
imul
and
push
add
dec
lods
movsl
rolb
xor
ds
ror
call
test
shl
push
adc
stc
and
jp
sub
dec
add
xchg
sbb
andb
cmp
imul
loop
addr16
inc
fidivl
or
hlt
cmpsb
push
decb
pushf
mov
mov
xor
lret
nop
aas
xor
in
or
jns
mov
fsubrs
dec
sbb
mov
mov
pop
cmp
lret
outsl
push
sbb
sbb
je
inc
mov
hlt
lea
adc
xlat
mov
orb
sub
and
addr16
popa
adcl
mov
push
and
push
inc
cmp
or
sub
data16
inc
mov
xchg
dec
sub
lret
pop
push
mov
jnp
lds
pop
call
mov
mov
inc
add
das
push
xchg
jecxz
sub
xor
data16
xchg
push
loope
jne
cmp
xlat
mov
inc
dec
push
jge
dec
lock
shlb
std
dec
std
mov
pop
mov
xor
rorb
jae
sbb
pop
inc
add
and
or
test
mov
rsqrtps
ds
insl
sub
bound
les
sub
test
sub
cmp
insl
adc
ljmp
push
aaa
or
mov
mov
mov
push
aas
jae
dec
fsubl
cmp
out
mov
sub
test
inc
hlt
sub
sub
lods
ljmp
inc
mov
stos
dec
inc
sbb
push
inc
xchg
cmp
in
mov
sub
push
mov
mov
xchg
in
pusha
cmp
lret
loopne
lock
aad
cmp
dec
aam
adc
pop
popa
mov
leave
ror
rol
aad
jno
negb
xchg
pop
ss
jecxz
xlat
jp
xor
gs
bound
aas
cmp
cmc
out
lret
scas
aaa
negl
xchg
dec
xchg
lcall
pop
pusha
cmp
fimuls
std
test
mov
test
fwait
imul
adcb
jge
lcall
incl
mov
xor
xor
inc
xchg
daa
dec
push
inc
hlt
pop
js
fstl
test
fwait
xchg
aaa
pop
pop
mov
adc
jb
jae
cmpsl
loopne
outsl
cltd
clc
add
shlb
movsb
movsb
ret
insl
sub
mov
inc
iret
clc
stos
mov
scas
loop
mov
gs
or
sub
sbb
cmp
ficoms
pop
adc
into
imul
sub
lret
cmp
cmp
imul
pop
mov
mov
rcr
xor
mov
insl
insb
pop
cs
pop
out
adc
xor
add
pop
insb
aam
jle
jbe
sub
add
inc
xlat
inc
xlat
inc
push
inc
lret
lock
std
lret
scas
xor
lcall
cmp
sub
inc
add
jg
lahf
mov
test
push
scas
push
bound
pop
lret
cmpb
pop
mov
jns
int
cwtl
pop
push
adc
push
push
testb
pop
mov
inc
mov
mov
adc
jp
sti
sbb
aam
sarl
inc
fdivrp
add
push
lds
mov
test
jecxz
sar
test
dec
jge
sub
mov
movsl
dec
push
xchg
sahf
or
enter
dec
and
xchg
dec
test
xchg
xor
sbb
xchg
clc
popf
xor
fmul
pop
xchg
lods
iret
ds
data16
adc
inc
fsubrp
mov
xchg
addr16
xor
cwtl
fcomi
cmp
or
loopne
jl
daa
mov
xchg
call
call
das
cmpl
add
pop
frstpm(287
adc
imul
push
xchg
push
dec
adcb
dec
aad
jge
scas
test
adc
in
pop
lahf
lahf
shrb
ljmp
jecxz
push
mov
push
xor
sahf
aam
imul
int3
xor
sub
in
testb
fsubr
fsubl
adc
loope
sarl
and
stos
iret
adc
enter
mov
sahf
cmp
mul
mov
imul
add
pop
push
or
cmpsl
pop
repnz
jae
cld
icebp
fwait
mov
jecxz
hlt
ret
fiaddl
xchg
xor
jmp
je
sbb
subb
cmp
inc
xor
xor
cld
pop
sbb
sbb
sbb
xor
shlb
lret
outsl
mov
shlb
sub
inc
pop
outsl
jnp
inc
icebp
cmp
call
rep
int
fs
ret
xchg
xor
jb
xor
and
fistpll
mov
sub
mov
jmp
sub
push
mov
roll
add
insb
add
xchg
pop
loop
jecxz
sbb
call
ret
popl
stos
mov
mov
lcall
lds
push
pop
cmp
and
dec
sub
icebp
shll
ret
jmp
pop
imull
mov
leave
mov
push
push
and
cmp
sub
arpl
cmp
into
add
push
cmp
push
jle
mov
inc
sahf
inc
rclb
not
and
movsl
int3
mov
leave
je
pop
addb
sbb
mov
xor
add
pop
jne
lret
repz
pop
jle
mov
call
mov
jmp
or
adc
sahf
mov
add
cmp
sbb
and
call
inc
mov
mov
adc
icebp
jge
pop
out
popa
xchg
into
push
pop
and
jne
xchg
cmp
call
sahf
xchg
inc
insl
aas
xchg
iret
fcoml
mov
movsb
shl
data16
sahf
push
push
shlb
jge
cmp
xchg
sbb
sub
xorw
inc
fisubrl
jl
xchg
fsts
adc
mov
popa
aad
add
in
and
push
in
adc
pusha
inc
shl
adc
mov
and
inc
xor
outsb
fcoml
dec
push
mov
mov
decl
ja
lods
cmpsb
out
dec
and
andl
cmpsb
loope
jo
dec
test
xor
sbb
push
jp
fdivl
inc
rcrl
dec
jae
mov
jp
arpl
popf
cwtl
out
mov
xor
inc
out
xchg
xchg
inc
dec
xlat
push
lcall
push
repz
cwtl
pop
inc
fdivl
mov
sbb
add
pop
pop
loope
xor
dec
dec
cli
test
lods
adcb
cmp
or
xchg
jl
push
clc
mov
sbb
sub
out
sbb
mov
imul
xchg
mov
fnstsw
enter
pop
jbe
xor
popa
decl
mov
jno
daa
inc
push
ret
in
lcall
lret
out
cli
in
sbb
sbbl
cwtl
push
cmc
inc
push
bound
imul
sub
inc
jae
out
jns
scas
and
stos
jae
adc
rcr
cmc
and
push
fnstsw
mov
data16
repnz
movb
jne
aas
jno
sbb
aad
hlt
sub
lds
mov
movsb
rcrl
xchg
jge
in
xlat
roll
out
mov
mov
cmc
fisubs
lahf
sbb
sub
mov
jae
testl
dec
mov
and
testl
push
lods
add
iret
pop
test
jno
add
bound
xchg
xor
push
sbb
cmc
sbb
bound
cmp
mov
fsub
sbb
psubb
call
xor
enter
std
mov
mulb
xor
sbb
out
rolb
and
ret
xor
jnp
adc
mov
mov
shll
xlat
cld
aas
testl
psubsw
call
out
jle
mov
jnp
mov
in
test
xor
add
lock
xchg
dec
imul
fldt
cmp
mov
or
mov
cmp
call
or
push
ja
jle
push
xchg
adc
mov
sbb
ret
and
inc
push
ja
mov
sahf
xor
out
pusha
in
add
lods
inc
in
std
lret
mov
ljmp
or
loopne
xchg
or
and
push
push
xchg
adc
je
dec
imul
and
outsl
imul
add
aas
out
sbb
dec
cmp
sub
insl
out
data16
xchg
sbb
cmp
mov
shll
xlat
int
pushf
loope
std
out
dec
lods
or
adc
sub
dec
iret
mov
ja
jns
in
jge
xchg
jle
popa
cwtl
inc
mov
cmp
adc
fcmovb
dec
sbb
sub
imul
cld
push
cltd
inc
inc
jne
pop
inc
xor
push
xchg
and
loopne
push
xor
fimuls
sbb
jge
repz
jo
loopne
adcb
xchg
sbb
aas
dec
lds
jnp
mov
pop
les
repnz
push
ret
mov
mov
xchg
cmpsl
or
data16
cmp
jno
xchg
je
out
mov
mov
notl
jle
mov
fidivrl
cltd
fnstcw
js
movsl
mov
lret
loope
cli
fisubrl
addl
fst
push
cmpsb
jecxz
fcoml
jo
test
mov
dec
cmp
ret
push
mov
jne
cmpsl
pop
in
mov
ja
wrmsr
js
lea
xchg
out
xor
lcall
ljmp
aaa
nop
sbb
jnp
sub
or
pop
xchg
cltd
sbb
subl
mov
push
mov
push
xor
mov
aad
add
mov
insl
inc
mov
mov
and
lea
push
mov
lahf
add
adc
int3
add
rep
das
jnp
cmp
adc
lcall
cmpsb
pop
mov
popl
fcmovnb
sbb
fidivs
xor
pushf
fisttpll
repz
scas
cmp
lcall
cmp
xchg
rcll
push
sbb
mov
sub
test
inc
jmp
mov
adc
cmpsl
mov
test
into
shlb
pushf
push
cmpsb
dec
mov
jg,pt
xor
add
mov
aad
sub
sar
jle
iret
arpl
adc
dec
inc
dec
into
pop
mov
sub
xlat
aad
lods
icebp
jecxz
in
add
ret
shrb
cmp
insb
outsb
xchg
fcmovnu
fsincos
add
sub
popf
ja
test
or
pop
dec
testl
arpl
xor
ret
ret
jecxz
fldl
fdivs
stos
les
test
stos
jg
stos
daa
push
dec
xchg
scas
cmp
cmp
lock
in
sbb
mov
rcrl
ror
lods
mov
inc
jne
pop
pop
cmpl
shl
into
loope
ja
in
pop
mov
stos
fsts
xchg
dec
sti
pop
pop
inc
sti
mov
xor
sti
out
dec
xor
pop
daa
mov
xchg
pop
mov
inc
stos
push
mov
inc
or
jle
iret
mov
lret
je
xchg
nop
jns
aad
xor
in
js
dec
jbe
mov
daa
cli
int3
push
test
jne
iret
fwait
mov
pop
int3
movsl
and
mov
arpl
mov
cmp
xor
lods
sbb
inc
ret
rorl
xor
addr16
arpl
repnz
mov
test
sarb
mov
xor
imul
sub
stc
xchg
fs
sbb
or
mov
or
mov
mov
xor
rcrl
mov
adc
insb
mov
jno
out
jg
and
xor
outsl
mov
or
std
aad
adc
pop
test
f2xm1
push
or
dec
ja
xor
imul
adc
in
or
les
mov
mov
xor
push
xchg
push
insb
pop
mov
mov
dec
mov
ljmp
jae
sub
sub
xchg
les
sbb
ss
call
sbb
aas
test
sbb
inc
mov
mov
xor
mov
mov
adc
inc
test
imul
sbb
pop
sub
xor
fnstcw
enter
mov
add
mov
pop
jle
push
jp
jbe
stos
cltd
add
xlat
mov
lea
and
bound
lods
mov
fs
loop
xor
add
scas
sub
dec
cmp
ret
daa
xchg
jmp
xor
or
xchg
pusha
push
push
push
add
pop
mov
push
stc
pushf
mov
ja
loope
cmp
jge
hlt
pop
xchg
mov
sbb
add
ljmp
scas
jnp
add
jns
into
cmc
mov
insl
xchg
and
imul
rcr
push
lds
cld
ret
ss
dec
dec
xlat
xor
fistpl
ficoml
cmpsl
mov
ljmp
inc
imul
dec
js
cli
addr16
fstl
lds
mov
push
jae
nop
out
outsb
int
push
lds
out
mov
mov
call
sbb
xchg
cmp
stos
xchg
push
mov
out
mov
sub
inc
xor
out
jge
add
icebp
xchg
repz
adc
pop
scas
mov
enter
jb
divb
ja
sarb
mov
in
or
sbb
sub
data16
out
sbb
loope
sub
ret
pop
push
das
pop
or
jmp
mov
movsl
test
mov
in
fistl
mov
shl
push
jge
out
cmp
lea
inc
pusha
xchg
add
xor
dec
or
loope
popf
shl
sbb
std
loop
jmp
xor
pop
add
or
pop
push
repnz
test
cmc
dec
les
lahf
ret
mov
push
push
mov
das
icebp
inc
jl
jns
mov
sub
push
lods
pop
into
scas
test
shrl
lock
and
push
cmp
pop
pop
ret
inc
push
mov
bound
das
fwait
ljmp
into
repz
pop
movsb
fcomps
data16
dec
mov
stc
mov
sbb
push
cmp
imul
aad
xor
pop
into
gs
inc
pop
xor
ret
mov
mov
shlb
insl
xor
inc
fldl
jp
pop
xchg
jge
or
adc
jb
lahf
mov
mov
ja
ret
push
inc
pushl
jecxz
inc
iret
std
icebp
pop
jne
add
ds
jo
aad
jmp
adcl
pop
push
push
push
xchg
int3
dec
pop
cbtw
imul
lock
fldl
loop
out
mov
outsb
enter
mov
push
test
xchg
push
push
sbb
jmp
lods
stos
inc
cld
lods
decb
fdivl
adc
xor
scas
pop
pop
inc
pop
mov
lock
mul
mov
pop
fiadds
daa
push
push
inc
bound
jnp
imul
ljmp
scas
mov
test
inc
jmp
mov
dec
mov
loop
xchg
mov
mov
cli
out
mov
and
gs
movsl
daa
inc
xor
js
roll
iret
in
fldl
test
mov
mov
jle
add
inc
mov
mov
or
xchg
lret
sbb
inc
mov
adc
stc
cld
sbb
roll
pop
cmpl
push
cmp
inc
jbe
and
stos
mov
outsb
lods
pushf
xchg
les
insb
js
idivl
sbbl
outsl
jge
addl
arpl
inc
sub
or
je
mov
push
xchg
scas
xor
jge
fistps
push
out
loopne
clc
dec
mov
push
das
daa
xchg
in
out
sahf
stc
inc
outsl
enter
and
imul
in
mov
js
add
mulb
int3
cmp
mov
xchg
jbe
inc
icebp
sub
xor
or
sub
sub
inc
rcrb
inc
adc
jle
sbb
adc
pop
add
or
out
mov
push
jle
sub
xor
stos
ficoms
outsl
lods
stc
incb
nop
push
dec
cmpsl
ljmp
sub
imul
cltd
lods
arpl
or
icebp
stc
out
inc
in
pop
inc
or
or
repnz
cwtl
xor
sbb
enter
add
jae
loop
sub
jne
bound
out
enter
lods
repz
nop
or
push
pop
fwait
add
push
bound
mov
pop
jae
in
loop
nop
push
xchg
pop
add
ret
gs
adc
test
mov
push
lret
inc
orl
xor
cmpl
mov
sbbb
pop
insb
repz
sbb
movsb
fsubrl
aas
out
in
push
jmp
popa
inc
adc
daa
mov
mov
dec
std
ja
add
clc
push
push
scas
or
jp
gs
clc
test
or
sbb
cmp
je
test
inc
mov
mull
inc
pop
in
and
cs
inc
mov
mov
or
mov
stos
cmpsl
mov
xchg
fwait
aam
and
add
and
aas
mov
fs
ret
fistps
jge
xor
xchg
xor
jg
mov
jbe
loope
jb
hlt
xor
and
aam
xchg
inc
lahf
xlat
mov
loopne
mov
add
adc
lret
bound
js
push
jecxz
iret
lds
lea
test
cmpsl
popa
inc
dec
push
jp
jne
imul
mov
cmp
fldl
cvtpi2ps
lock
adc
dec
or
mov
lock
sbb
sbbl
hlt
into
dec
add
mov
lret
clc
icebp
and
add
leave
jne
add
repz
xchg
mov
lock
cwtl
mov
add
rcrb
lock
imul
ret
fs
xchg
cwtl
lock
or
jmp
add
and
inc
sarb
insl
sbb
and
cmp
inc
jg
mov
dec
enter
fbld
mov
pop
loop
inc
clc
push
cmpsl
stc
data16
add
push
cltd
dec
arpl
pusha
outsl
icebp
push
cwtl
and
clc
or
out
add
aad
inc
movb
adc
popf
mul
bound
mov
cmp
xchg
and
js
cli
and
mov
out
sahf
jmp
repz
call
inc
in
or
dec
jp
cltd
ret
inc
inc
xlat
mov
mov
aad
adc
mov
sub
leave
sti
mov
push
bound
mov
es
lods
and
pop
jl
leave
jl
xlat
mov
jp
loop
push
xor
ljmp
sub
imul
test
and
popf
sarb
xchg
cs
or
jp
sub
xor
jne
add
cmp
es
mov
test
ja
and
stos
rdmsr
jecxz
lea
push
jmp
pushf
jl
jae
scas
jbe
adc
lret
call
subb
outsl
pop
adc
faddl
aam
outsl
add
idivl
xchg
mov
and
call
mov
dec
push
xchg
xchg
push
xchg
mov
fadd
sub
cmpl
repz
ds
adc
cmp
mov
inc
sbb
in
adc
pop
roll
sub
ds
das
xchg
mov
push
rcll
stos
addl
push
mov
mov
pause
dec
popa
int3
jne
sbb
push
jbe
sbbb
out
adc
add
mov
shlb
out
pop
cmp
mov
and
and
int
negl
and
dec
push
jnp
insl
loope
insb
xchg
test
stc
icebp
jge
add
xor
push
sub
out
test
roll
xchg
adc
xchg
push
pop
insb
lea
notb
mov
popf
lret
push
jne
pop
cltd
or
pop
xchg
call
push
mov
inc
cmovp
daa
and
ret
icebp
fnstenv
pop
fnstenv
test
xchg
cmc
jge
inc
out
cmp
and
mov
xchg
je
cs
jo
add
sub
cld
mov
cmpsb
jle
jns
mov
push
popa
inc
out
mov
mov
out
push
sbb
mov
pop
sub
cmp
sub
movsl
dec
cmp
repz
fimuls
push
push
mov
mov
repz
push
mov
xchg
push
ds
dec
xlat
cli
push
scas
rclb
mulb
xor
call
insl
dec
sub
enter
dec
and
je
das
and
and
mov
enter
xchg
xchg
and
or
push
fcompl
arpl
lahf
or
push
push
add
push
mov
dec
shr
xchg
pop
cmp
neg
insl
mov
mov
xchg
sbb
adc
and
cld
jmp
in
xchg
mov
and
cld
adc
xor
mov
scas
outsb
inc
pop
mov
out
or
in
and
cmp
mov
inc
fsubl
pop
mov
call
shrb
dec
mov
popf
rcr
mov
cmp
mov
and
fsubs
nop
cmpl
movsl
negb
or
addb
adc
or
faddl
js
inc
popf
push
jae
dec
push
or
dec
std
out
mov
adc
xchg
and
mov
bound
mov
icebp
cbtw
divl
loopne
mov
mov
adc
cltd
jmp
add
data16
jg
scas
push
pop
cli
mov
xchg
rcr
dec
xor
adc
ret
stos
mov
mov
lcall
mov
pusha
xchg
dec
inc
push
or
sub
ss
mov
repnz
test
out
push
dec
lock
gs
ja
lods
and
lea
addr16
mov
jmp
paddq
push
insb
jp
mov
sub
mov
jb
fs
sarb
rcr
push
push
cltd
bound
out
adc
loope
movsl
dec
sti
and
or
mov
sub
cmp
inc
or
out
cli
sub
cmc
mov
negb
enter
xlat
add
scas
out
push
test
int3
lods
xchg
xchg
mov
scas
shrl
mov
xorl
or
mov
pop
pop
leave
push
xor
cmp
in
insl
sbb
jmp
mov
in
stos
or
popa
mov
jno
movsb
and
loope
insb
ljmp
mov
imul
ret
shll
fldl
addl
sbb
rsm
dec
push
andnps
xchg
sub
aad
cli
add
sbb
daa
mov
jns
insb
sbb
inc
push
adc
lret
cmp
fs
mov
sub
addr16
filds
mov
int
xor
add
dec
or
push
popa
out
addr16
rcrb
mov
pop
into
ret
out
jp
ss
fnsave
cwtl
jecxz
test
add
jmp
out
xchg
stos
jge
xlat
or
enter
jb
out
jle
add
arpl
enter
mov
int3
addr16
dec
or
popa
ret
repz
fwait
dec
sahf
add
jg
pop
lods
xchg
mov
jmp
and
adc
fsubrl
int3
test
adc
pop
addb
jne
sub
push
vmread
pop
push
aam
dec
lods
insb
push
cmpb
test
add
inc
cmpsb
or
mov
std
xor
orb
stc
pop
in
cli
cld
es
xchg
add
jno
adc
xchg
adc
outsb
fisttpl
push
push
push
hlt
shl
inc
and
sbb
mov
sub
fs
cli
jb
loop
sbb
cmp
cmpsb
fwait
sub
outsl
out
insl
mov
subb
sbb
push
xor
xchg
inc
mov
xor
xchg
cli
sbb
rcl
lods
lods
add
cld
sbb
mov
xor
pop
dec
jns
mov
lcall
add
pop
jb
inc
push
or
pop
fdivrl
cmp
mov
leave
add
xchg
insb
xor
add
fwait
jle
and
mov
xlat
add
and
xor
je
and
bound
lods
mov
jp
sbb
inc
push
stos
xchg
test
adc
test
xor
mov
adc
mov
pop
enter
addb
dec
rorb
inc
lds
jmp
cmp
jle
jae
or
mov
and
leave
imul
mov
add
adc
sbb
cmc
add
in
out
sub
stos
jnp
fs
mov
ret
in
je
sbb
leave
pop
mov
bound
out
hlt
mov
jb
xchg
fstl
mov
ja
adc
imul
sarb
push
leave
pop
stos
jmp
add
sub
clc
xchg
xor
jo
push
xor
pop
push
ret
or
inc
xor
out
sbb
out
pop
xor
cli
and
xchg
leave
sub
push
cltd
sbbb
std
jl
and
pusha
cmp
inc
lret
icebp
dec
ljmp
xor
xor
ret
jmp
or
dec
das
mov
ds
enter
jno
fstps
or
mov
and
sbb
aas
div
cmpsb
roll
jge
and
mov
bnd
fadd
inc
rorb
pop
mov
lods
js
mov
shll
mov
mov
inc
lcall
mov
push
popf
jns
or
sbb
rolb
mov
imul
in
xor
and
mov
jmp
cmpsl
cld
mov
sbb
push
test
sbb
xchg
int3
or
pop
hlt
push
popa
push
mov
sub
mov
cld
nop
test
ja
pop
or
test
ss
imul
dec
mov
gs
push
ds
pop
mov
or
mov
and
sbb
jp
cltd
jae
lods
jle
stos
repz
add
dec
das
adc
je
push
adc
pop
push
push
dec
out
adc
mov
andb
fs
outsb
dec
sahf
jle
sub
mov
xor
mov
shll
cs
xchg
std
call
dec
jns
icebp
add
jb
mov
test
pop
lods
stos
aaa
stos
pop
shl
pop
sbb
js
insl
leave
and
shll
cld
cwtl
inc
sbb
adc
pop
idivl
and
push
mov
add
out
js
js
push
aaa
push
push
loopne
jg
fdivrl
or
popa
jb
sub
mov
cmp
and
outsb
xchg
sub
pusha
out
xchg
xor
and
xchg
pop
test
xlat
fisubl
cmc
adc
add
push
aad
lods
sarl
idivl
cmpsl
ret
xor
scas
or
jl
hlt
add
lods
and
lcall
or
mov
nop
jp
loope
in
jl
imul
jnp
jno
mov
jo
stos
add
pop
aaa
push
jp
hlt
mov
jmp
jo
sbb
mov
stos
jg
mov
outsl
jg
pop
cmpb
mov
xor
or
inc
int3
and
lret
push
aaa
bound
pop
in
lret
mov
ret
cmp
xlat
push
icebp
cwtl
sbb
sbb
jecxz
push
int3
xchg
sbb
in
xchg
shrl
mov
cmpsl
into
jg
dec
mov
arpl
mov
push
fs
xor
mov
xor
pop
inc
jmp
cwtl
shrb
pop
sahf
add
mov
addr16
push
shll
das
cmp
imul
out
in
scas
outsl
push
ret
adc
lods
dec
shlb
dec
call
pop
sbb
sbb
sbb
aaa
jmp
dec
pushf
push
cld
mov
in
lcall
push
adc
shll
xchg
idivb
test
test
daa
aam
cs
imul
mov
hlt
and
pushf
filds
adc
pop
or
dec
shrl
xchg
out
mov
adc
mov
cwtl
leave
movsb
popa
cli
stc
fldcw
aaa
andb
mov
outsb
sbb
insb
loope
sbb
movsl
cmc
scas
push
xor
fcom
or
jbe
mov
gs
inc
aaa
insl
xchg
out
sub
icebp
out
pop
mov
cwtl
push
xchg
mov
push
addr16
lret
inc
mov
jle
jno
aaa
leave
dec
cs
test
into
pop
xor
mov
aaa
lahf
imul
inc
or
mov
mov
mov
nop
fs
push
pop
dec
fidivrs
imul
add
mov
rcrb
adc
sti
loop
bound
bound
rcl
outsb
push
test
cmc
enter
test
mov
add
lock
psubq
fdivs
aam
mov
adc
dec
xchg
popa
loopne
pushf
rclb
cmp
stos
and
mov
cmovb
call
sub
fisubrs
add
mov
xchg
sub
mov
pushf
imul
cld
or
stos
ja,pn
inc
inc
and
inc
mov
imul
stc
je
push
test
mov
and
push
mov
fidivs
pop
push
push
and
sub
cmpsl
lret
fisubrs
in
xor
mov
sub
lock
mov
sub
add
dec
cld
sti
jno
sbb
ljmp
pop
mov
fwait
pusha
outsl
adc
loop
inc
outsl
pop
lret
inc
cmovo
xor
out
ds
lods
mov
add
pushf
es
xchg
jg
cld
sub
fadd
stos
and
adc
jno
mov
jge
pop
sub
xor
adc
push
popf
cmp
cmpsl
xchg
sbb
dec
pop
mov
adc
pop
pop
inc
in
scas
lahf
ss
test
cli
jb
sub
and
lret
dec
das
shrl
add
cmp
mov
push
adc
jmp
sbb
pop
mov
dec
repz
mov
push
faddl
rclb
movsl
sub
push
rclb
fs
pop
out
pop
jae
xchg
adc
mov
pop
push
sub
adc
lea
daa
mov
mov
shrl
push
out
jnp
clc
adc
push
adc
loop
imul
fisttpll
das
mov
mov
jnp
nop
leave
adc
mov
mov
inc
test
pusha
jp
enter
xor
fs
gs
clc
adc
and
andb
shrl
jp
dec
mov
cmpsl
sbb
cs
imul
jp
roll
shl
into
jg
pop
adcl
sbb
dec
loop
cmpb
clc
and
or
js
iret
fidivs
cld
pop
cs
lods
es
cmp
iret
or
jle
mov
dec
push
cmp
shrb
add
ficoml
mov
add
stc
les
ds
push
adc
mov
rolb
lret
dec
pop
movsl
in
ja
loope
mov
push
dec
inc
gs
jae
ror
jns
or
and
in
inc
cmc
push
cmpsb
xor
adc
push
dec
iret
adcb
shll
clc
add
sub
je
and
and
xchg
inc
inc
pop
gs
test
in
xlat
sarb
scas
jl
call
mov
xor
loope
xor
fsubrl
mov
lcall
cmp
inc
push
mov
pop
mov
mov
in
adc
mov
sub
test
pop
rcr
push
insl
mov
aaa
jbe
lcall
iret
scas
or
jne
imul
jns
stos
lret
push
xchg
mov
xchg
jecxz
or
mov
frstor
jno
and
and
pop
fmul
call
mov
or
cld
popa
pop
push
ljmp
mov
pop
test
test
add
lds
daa
add
call
dec
cmp
push
fwait
and
jp
mov
mov
out
push
loopne
push
add
test
cltd
add
sahf
cmp
mov
add
push
mov
pop
ja
fisttpll
lahf
mov
bound
leave
sbb
jle
stc
lret
fiadds
ss
xor
arpl
mov
les
pop
nop
adc
inc
lods
ret
in
xchg
adc
inc
jmp
push
js
shl
jo
add
pop
sbb
dec
sub
lods
aaa
and
xchg
mov
out
mov
add
mov
jb
loopne
xor
add
add
fs
andl
inc
shll
or
and
or
mov
aam
mov
sub
adc
iret
cmp
dec
pop
push
push
sbb
adc
mov
adc
fcmovnb
mov
push
fcom
or
xlat
mov
or
stos
or
or
push
loope
es
or
mov
test
xchg
add
mov
mov
mov
mov
push
and
add
jle
inc
enter
xor
bound
add
lcall
leave
mov
int
and
xchg
adc
test
and
xor
leave
sub
xlat
nop
js
and
and
add
jno
jb
not
or
stos
mov
orl
fsubrl
mov
ja
fwait
popl
scas
imulb
rorb
sbb
or
inc
mov
inc
or
pop
subb
fdiv
cmp
or
add
addl
push
mov
stos
aad
pop
mov
imull
sbb
repz
inc
aaa
xor
xchg
adc
push
pop
jmp
pop
nop
or
iret
xor
lret
and
mov
sti
stc
cld
cmc
jns
mov
fwait
testl
divb
dec
and
sub
dec
mov
popf
fwait
push
jmp
xchg
and
jo
mov
fcomip
mov
push
sarl
sbb
mov
in
mov
ret
push
sub
cmp
push
cmp
adc
dec
mull
mull
xchg
sub
cmpsl
dec
push
scas
int
ret
sbbl
jo
jg
nop
xlat
mov
push
nop
rcrb
lea
push
in
pop
inc
mov
sbb
mov
in
lock
xchg
jl
mov
pop
jle
sbb
mov
jnp
lret
cmp
inc
pop
adc
mov
cmp
pusha
test
aas
mov
jecxz
mov
lods
jmp
sub
sti
or
push
mull
int3
xchg
inc
and
aad
cmp
sub
sbbl
fists
dec
into
xchg
js
fcoms
inc
call
mov
mov
add
out
ds
mov
inc
cld
out
pusha
rorb
stos
xor
cmp
in
dec
shl
inc
add
or
int
repz
mov
fadd
cmpsl
ds
push
sub
mov
out
push
mov
xchg
loopne
ljmp
in
int3
dec
or
pop
xorl
test
aaa
push
lods
js
call
xchg
shlb
pushf
pop
js
push
loopne
shrl
add
jns
mov
repz
add
mov
test
sti
cwtl
xchg
pop
adcb
daa
jo
adc
hlt
or
pop
dec
dec
mov
repz
insb
push
insl
xchg
ret
inc
aad
push
dec
dec
cmp
push
adc
addb
fnstsw
insb
addr16
pop
adc
lock
lock
add
out
cmpsb
pushf
adcb
in
pushf
inc
jge
jl
inc
or
aad
mov
push
jnp
call
scas
les
and
sbb
cld
sar
ret
jno
adcl
push
test
pop
lahf
ja
add
xchg
leave
pushf
add
aaa
idivl
adc
inc
das
repz
inc
lods
push
ret
jno
mov
leave
inc
testb
sub
xlat
inc
shrb
sub
push
clc
decl
fadds
adc
sub
jo
insb
push
or
push
and
push
jecxz
mov
repnz
stos
jo
insl
adc
or
or
loopne
sahf
mov
cmp
cmp
mov
out
xchg
mov
popf
xlat
andl
adc
sub
fimuls
xor
ljmp
repz
add
loope
pop
add
mov
nop
sub
adc
xchg
push
cmp
jne
fsubrl
xchg
xlat
jmp
sti
nop
pop
scas
lret
pop
mov
outsb
mov
cmpsl
inc
adc
inc
xchg
jmp
xchg
es
mov
add
jb
xchg
jecxz
pop
adc
pushf
pop
addl
data16
sti
enter
mov
aaa
cmp
nop
adc
std
in
loopne
cltd
cmpl
jae
ret
or
adc
test
push
and
mov
jge
and
rcrl
mov
enter
in
and
in
lods
xchg
add
cmp
mov
fcompl
stos
fld
daa
jns
vpmaxub
xor
insl
jno
inc
daa
pop
or
lds
rcll
mov
xor
cmp
push
iret
sahf
mov
cmp
fsubrl
mov
and
mov
and
jnp
add
out
fs
xchg
pop
subb
test
js
sarl
mov
mov
or
sub
sub
mov
xor
popf
pop
dec
jnp
mov
jno
iret
jmp
in
nop
test
pop
push
mov
or
or
dec
pop
cmp
scas
cltd
repz
incl
sbb
mov
mov
inc
mov
cltd
push
lods
xchg
mov
lahf
inc
cli
out
xor
lahf
aaa
cltd
hlt
cmp
mov
jecxz
stos
addr16
es
sbb
popa
test
lods
jb
int3
je
rorb
jle
mov
sbb
test
sub
lcall
ss
ret
aam
lods
fadd
adc
sbbl
push
sub
sbb
add
in
push
inc
cmpsl
mov
jp
idiv
testl
xor
xor
mov
fldenv
add
popw
icebp
mov
andl
sar
mov
jecxz
xor
inc
rcr
nop
imul
sarl
add
daa
mov
in
int
sbb
xchg
dec
cmp
jo
pop
lock
add
js
ljmp
cmpb
push
adc
xor
inc
mov
roll
lock
lods
insl
call
push
xchg
jmp
fstpl
je
push
and
imul
fidivl
test
out
leave
push
cltd
out
cltd
rclb
jb
pushf
nop
sub
jl
nop
mov
orl
jno
dec
lcall
cmp
lret
orl
pop
adc
jl
sti
fs
pushl
sub
aad
sti
pop
cmpsb
test
fsubp
cwtl
aam
test
daa
rclb
stos
pop
lcall
cmp
cwtl
xor
incl
out
in
push
shll
movsb
addr16
adc
jecxz
push
push
jo
pop
test
aaa
mov
popf
cmpsl
lret
lret
add
mov
pop
jb
cmpsb
sar
or
aas
cmp
imul
push
pop
out
clc
test
inc
push
jbe
jl
push
nop
inc
pop
ljmp
pop
fcompl
mov
lods
cli
jns
xchg
cld
or
jmp
aam
jnp
shrb
push
jb
movsl
inc
adc
inc
add
jne
dec
test
dec
arpl
cwtl
dec
cmp
and
cmp
imul
mov
out
outsl
arpl
adc
ret
xlat
cmpsl
xchg
mov
xor
mov
xor
out
stc
cmp
jecxz
adc
scas
or
idivb
sbb
push
add
or
scas
dec
fstpt
jnp
and
fldt
cltd
ret
and
jnp
push
jle
jmp
cmp
mov
inc
xor
inc
mov
mov
pop
fs
cmpl
add
xor
setne
adc
inc
out
mov
mov
clc
rolb
jae
cltd
jo
ljmp
pop
sbb
aas
jo
shr
sar
adc
push
jmp
and
xor
sbb
jg
sbb
push
pop
mov
pop
aas
push
and
fistpll
dec
bound
cmpsb
pop
mulb
inc
sub
xor
or
nop
daa
into
and
lods
sbb
lds
out
inc
jg
push
popf
add
adcb
ljmp
mov
mov
jne
mov
lods
ret
insl
add
mov
xchg
test
or
push
test
cmp
notb
fldl
sbb
xchg
lret
cmp
shll
into
fadds
or
fmul
in
sbb
fwait
out
and
xchg
jecxz
fisttpl
adc
jnp
and
in
gs
sub
and
divb
outsb
movb
mov
sbb
xor
sub
push
repnz
mov
fs
xor
rcl
shlb
and
fildll
pop
lret
xor
int3
mov
push
inc
fwait
fwait
jbe
lcall
add
mov
lock
fisubrl
pop
lds
repz
imul
aaa
movsl
vandnpd
punpcklwd
repz
ret
cmp
arpl
or
sbb
pop
dec
lcall
stc
pusha
lock
or
fcomip
in
mov
xchg
test
add
mov
popa
fldt
arpl
inc
iret
jge
jo
repnz
and
adc
das
sbbl
and
test
jbe
jecxz
ret
pusha
outsl
jne
xor
add
iret
out
pop
xor
leave
jns
int3
sti
or
rolb
pop
add
sub
fdiv
cmp
dec
sub
add
cmp
cmp
fnstcw
loopnew
jp
sbb
in
pop
jle
test
in
insb
xchg
push
sti
stc
sbb
jg
pop
add
fwait
jle
in
mov
mov
mov
cltd
cli
jge
sub
sbb
shll
push
dec
push
pushf
mov
flds
mov
cli
bound
out
push
stos
and
icebp
sbb
cmc
mov
adc
idivb
sub
imul
xor
sbb
sti
shr
mov
inc
push
in
repnz
out
pop
and
xchg
dec
pusha
xor
in
adc
push
mov
mov
in
inc
testl
sub
cmpsb
aam
dec
movsl
loopne
popa
xor
push
mov
outsl
sub
subb
cmp
rol
stos
push
data16
stos
sbb
mov
stc
daa
or
push
mov
jae
sbb
jb
sbb
orb
lahf
pop
clc
sub
testl
push
mov
push
add
cmc
filds
addr16
stos
mov
fisttps
lret
repz
mov
inc
dec
fwait
inc
sub
lds
enter
sbb
or
mov
sbb
int3
sti
scas
xchg
adc
sbb
sbb
pop
loopne
je
sbb
and
cli
pop
xor
mov
dec
adc
cmpb
outsb
outsb
pop
xor
dec
sub
xchg
test
cmp
iret
jl
test
pop
mov
addr16
sbb
pop
jb
cld
in
and
cmc
mov
shrb
jns
fwait
pop
push
pop
stos
popa
mov
xor
fbstp
fucomp
out
dec
adc
mov
movsb
push
test
or
outsl
lods
bnd
mov
add
lods
dec
mov
push
lds
ja
enter
xchg
addr16
pop
fdivs
mov
nop
test
inc
insb
out
or
loop
mov
push
push
push
int3
sub
adc
sti
push
gs
das
mov
adc
loope
sub
scas
lret
cli
ret
pavgb
sub
push
dec
in
or
jl
sbb
pop
xchg
and
stos
scas
sub
popf
leave
or
push
insb
add
jo
add
pop
xchg
sub
aas
sub
jbe
iret
mov
adc
dec
shl
bound
mov
stos
stc
cmp
pop
sbb
mov
lea
stc
adc
add
jp
pop
das
lea
adcb
mov
fldcw
xor
push
cmp
and
push
movb
pop
dec
mov
xchg
or
test
lret
or
push
orl
sti
cli
pop
idiv
and
pop
or
loopne
cmp
jb
pushl
jns
lret
push
ret
xchg
pop
or
ret
dec
scas
and
cld
nop
cmp
gs
iret
xor
cld
mov
rcl
or
mov
push
hlt
add
in
fildl
jo
aad
mov
ljmp
sbb
mov
xchg
popa
and
je
and
int
jg,pn
fidivrl
je
iret
mov
rcr
in
scas
push
pop
ffree
push
pusha
sti
fdiv
cmp
lods
sub
mov
stos
imul
int
pop
cmp
inc
mov
mov
dec
lret
negl
pop
rcrl
adc
inc
cmpsb
clc
js
stos
je
pop
stos
jmp
shrl
push
lret
imul
into
mov
add
xchg
jns
fiadds
scas
push
pop
fs
insb
rcrb
jg
sbb
jg
xor
add
adc
push
dec
mov
push
push
mov
fiaddl
das
sub
push
cmp
mov
adc
clc
sub
insb
gs
movsl
ds
stos
int
rcr
ss
lahf
push
push
mov
sbb
xchg
jnp
mov
mov
push
fdivrs
cmp
cmp
repz
int
jae
dec
or
int3
and
jo
cld
sbb
xchg
andl
mov
imul
jae
pop
pop
lea
add
fisubrl
jno
nop
rcl
aam
popf
add
sub
jnp
cmpsl
leave
cmpsb
std
dec
rcrl
in
pop
sub
loop
rcll
adcl
xor
ror
adc
lcall
lods
adc
adc
loopne
imul
xchg
jp
add
outsl
enter
adc
and
outsb
xor
adc
enter
pop
sahf
adc
sbb
mov
in
mov
add
push
lods
pop
add
loopne
sbb
inc
add
sub
inc
push
xchg
fnstenv
mov
jno
test
mov
adc
add
xor
mov
mov
jo
out
lods
jbe
and
cmp
call
js
mov
jl
out
lods
fnsave
mov
sarl
aad
sub
scas
xchg
pop
dec
jl
inc
xor
xchg
js
test
push
inc
push
dec
sbb
sbb
cmp
sbb
mov
fsub
xchg
out
ljmp
xchg
cmp
ljmp
fs
xorl
orb
cmpsl
clc
jle
or
jecxz
or
fldl
pop
add
add
dec
fsts
add
aas
movsb
aam
cmp
loope
nop
out
in
imul
ja
shlb
sub
mov
insb
sbb
movsb
inc
test
sbb
mov
mov
push
stos
fstpl
jne
or
mov
fdivl
rcl
imull
dec
cmpsl
ret
orl
or
dec
les
push
ds
jl
in
fisttpl
jns
xor
push
in
es
lods
out
mov
pop
jle
jno
rcll
or
cmp
ret
xchg
xor
cs
mov
xorl
lahf
das
mov
cwtl
xor
xlat
mov
sub
cmpsl
push
mov
pop
out
add
in
jo
lods
gs
in
push
outsl
mov
rol
int3
int3
jnp
dec
out
movsb
xlat
arpl
push
repnz
dec
dec
lahf
xchg
std
jns
sarl
scas
push
mov
or
cld
cmp
mov
in
jo
add
lret
pop
icebp
cmpsb
in
add
add
enter
out
pop
sbb
testl
sahf
jb
and
pop
imul
push
sub
jle
xor
mov
hlt
scas
mov
mov
mov
test
mov
xchg
ret
sub
cmpsl
test
loope
clc
push
dec
xchg
aas
imul
xor
in
mov
mov
movsl
imul
inc
negl
xchg
and
repz
ja
movsb
std
jp
or
sbb
roll
push
bound
add
push
iret
notl
fst
xor
insl
or
aas
mov
iret
adc
notb
or
mov
sub
scas
subb
mov
jg
or
stos
rcl
mov
xchg
cmpsl
subb
pop
and
loop
jge
mov
jne
add
sub
cmp
repz
leave
js
jecxz
icebp
and
push
push
xchg
data16
cmp
stos
cmp
jbe
jecxz
push
adc
push
push
mov
test
adc
cwtl
in
sbb
gs
pop
out
pop
fs
mov
sti
and
addr16
xor
push
push
xor
mov
xchg
mov
inc
jge
cmp
xchg
hlt
sbb
int3
mov
inc
stos
scas
enter
bound
cmp
sbb
adc
mov
shl
pop
test
xchg
adc
daa
sbb
push
cmp
sub
pusha
adc
pusha
addr16
lret
loop
cvtpi2ps
fidivs
ret
or
dec
mov
loopne
and
packuswb
cmp
in
cmp
mov
dec
mov
sub
sahf
xor
push
movsb
jb
arpl
or
sub
hlt
mov
popa
popf
dec
loopne
sti
sub
repnz
mov
xchg
fwait
test
cmc
dec
loop
fwait
cmpsb
mov
lret
push
xor
mov
ret
rcl
mov
push
aad
push
and
mov
call
cmc
cs
mov
dec
sbb
pop
or
xor
lods
sbb
and
aam
cmp
outsl
or
sbb
mov
cmp
insl
mov
push
push
push
rclb
and
xor
mov
and
inc
xchg
cmp
daa
sbb
cltd
int
cmp
and
cwtl
loop
dec
lahf
aaa
mov
sub
mov
outsb
into
add
inc
clc
mov
sub
mov
out
pop
mov
mov
lods
xor
mov
xchg
add
mov
test
or
push
fwait
adcb
and
daa
cmp
lcall
test
dec
xlat
lds
mov
mov
lcall
adc
jecxz
dec
sbb
and
pushf
pushl
dec
cld
pushf
pop
dec
push
jecxz
sbb
xor
mov
aam
push
enter
int3
lds
mov
jmp
testl
adc
ss
adc
pop
sub
mov
stos
jecxz
mov
push
sub
fisubrl
xchg
cs
call
inc
mov
jae
add
jmp
imul
stos
shrl
jnp,pn
mov
mov
push
pusha
or
shrl
punpcklwd
mov
jle
mov
inc
popa
pop
sbb
out
adc
sahf
mov
inc
add
mov
int
mov
pop
dec
adc
sbb
pop
stos
push
pop
or
lea
xor
mov
popf
stc
mov
mov
mov
cld
fsubrl
ja
testb
or
imul
dec
sti
subl
cmpb
iret
xchg
dec
xchg
in
add
push
mov
cmp
push
les
and
adc
leave
arpl
and
in
les
pusha
out
je
inc
xchg
push
xchg
or
jno
into
jb
dec
xor
addr16
jg
lods
sti
leave
dec
test
aas
mov
insl
xchg
lods
ljmp
imul
inc
xchg
enter
push
mov
std
sub
pop
in
cmpsb
inc
mov
adc
les
pushl
roll
por
js
inc
sub
gs
sbb
in
jns
addl
je
jns
ret
fnstenv
mov
sbb
cs
movsl
adc
lds
scas
fnstcw
lret
dec
sub
in
mov
cmp
lret
into
in
je
xor
mov
stos
popa
ret
lahf
scas
push
cltd
pop
push
xchg
js
sbb
in
in
inc
clc
jns
push
cmp
inc
dec
stos
inc
sub
sub
outsb
and
pop
cmpsl
mov
pop
mov
scas
ja,pn
or
ja
inc
push
fdivs
push
push
inc
cltd
loopne
sub
push
loopne
lcall
js
cltd
mov
push
add
jp
sti
test
mull
xlat
mov
pop
pop
scas
orl
outsb
mov
jge
out
mov
mov
pop
adc
cmp
inc
mov
out
out
gs
xor
decl
mov
pop
jmp
movsb
adc
push
in
mov
rcrb
fisubrl
jnp
jl
std
xchg
jo
lcall
fcompl
sub
push
adc
pop
pushf
dec
inc
call
jecxz
push
mov
adc
repz
outsb
lahf
arpl
jg
cmp
jnp
xchg
sub
dec
subb
out
in
movsb
or
push
pop
cmp
push
ficoml
mov
mov
aas
mov
arpl
or
mov
xor
push
dec
mov
sub
jmp
push
pop
es
xor
xchg
out
int3
out
mov
adc
inc
js
adc
pusha
movsl
in
xor
xor
rolb
jecxz
mov
xchg
cwtl
ror
mov
sub
dec
jo
or
cmp
push
bound
inc
bswap
cli
add
add
xor
rcll
test
inc
xor
add
out
sub
jg
cmc
addl
dec
xchg
data16
push
aas
add
jb
in
sub
lret
mov
mov
shlb
adc
mulb
and
jne
repnz
inc
pop
in
push
ret
bound
jl
sbb
sub
fdivr
into
imul
imul
or
call
stc
mov
mov
cmp
inc
push
xor
in
sub
push
rclb
jle
cmp
test
and
stos
call
and
sbb
inc
pop
xchg
and
jne
jle
add
dec
push
fmull
mov
in
cmc
hlt
mov
jb
sub
fcomps
sub
ja
pop
mov
cmpl
adc
sbb
jae
movsb
lock
fldenv
add
out
xor
and
fstl
ja
mov
jg
std
push
clc
mov
popa
mov
gs
ret
xor
clc
notl
sbbl
ret
fwait
xchg
mov
pop
mov
repz
stc
mov
inc
mov
out
dec
adcb
push
cwtl
call
jns
cs
xchg
aaa
mov
pop
sahf
dec
mov
or
sahf
xor
mov
sahf
in
jle
cwtl
xchg
xor
sahf
dec
xor
adc
call
xchg
push
imul
mov
pop
push
dec
hlt
jl
mov
jg
pushf
or
fisttps
pop
xor
daa
adc
inc
xchg
lods
push
or
js
xor
in
mov
lcall
fists
pop
inc
push
sub
add
test
test
pop
movsb
sbb
leave
mov
mov
sbb
popf
inc
mull
push
mov
lea
cmp
sub
mov
cmp
jg
jbe
xchg
xchg
loop
cmp
imul
test
fiaddl
ret
adc
rol
test
and
fwait
je
loopew
xchg
push
call
push
ret
int
lods
outsl
add
and
aad
cmp
imul
cltd
das
push
lcall
sbb
mov
data16
mov
imul
mov
pusha
mov
dec
cli
loop
repz
neg
in
sbb
cmpsb
inc
push
pushf
jp
mov
pop
mov
out
hlt
xchg
pushf
in
dec
push
push
loope
gs
out
jecxz
push
jnp
xor
jae
jle
inc
in
out
xor
mov
adc
dec
push
cld
ret
jmp
push
sbb
not
loopne
mov
ret
mov
sbb
lea
inc
pushf
mov
fcmovbe
adc
pushf
lds
xchg
dec
xor
and
xor
inc
pusha
imul
jno
adc
enter
lea
mov
cmp
jl
cmp
push
jb
push
inc
sbb
out
fistpll
push
lods
fildl
mov
dec
fld
sub
mov
xchg
movsb
insb
std
loopne
mov
mov
push
sti
frstor
push
dec
je
ds
push
mov
push
fcoms
insl
sbb
add
push
ror
xorb
cmpsl
sub
push
je
cli
jge
sub
xchg
aaa
xor
movsb
lods
nop
mov
inc
jb
xchg
mov
fistps
das
int3
in
or
and
lret
sub
dec
mov
adc
daa
mov
nop
scas
xchg
movsb
je
stos
jne
cmpsb
mov
xor
push
adc
add
adc
jmp
jl
inc
mov
add
stos
aam
add
cltd
add
adc
pop
pop
xchg
pop
pop
sahf
mov
into
fisubrl
fwait
inc
sub
daa
repz
sti
jns
pop
jp
jle
pusha
popf
mov
jb
ja
pop
addb
and
fcoml
gs
fiadds
sbb
stos
pop
cmpsl
stc
xchg
inc
fwait
push
cwtl
movsb
and
mov
adc
les
test
sub
add
push
into
xchg
push
in
mov
push
sub
mov
mov
mov
cwtl
idiv
cli
cmp
gs
sbb
js
ljmp
mov
mov
sub
and
leave
xchg
out
fcompl
xchg
add
jne
jno
jnp
cmp
xchg
lcall
out
loope
adc
loope
mov
cmp
jl,pn
xchg
sbb
add
sub
cmp
sbb
outsl
insl
sub
jge
cmp
shl
sbb
nop
ljmp
add
fsubp
fcomps
pop
xchg
adc
lds
ficomps
movsl
push
xchg
push
sub
icebp
ja
xor
stc
movsl
xlat
repnz
mov
push
mov
lock
and
mov
aas
mov
xor
je
lret
pop
mov
test
enter
and
add
fisttpll
mov
push
addb
jmp
movsl
lods
inc
cmpxchg
test
insb
or
adc
mov
cmpb
pop
or
jb
inc
rclb
imul
lock
insl
loope
int
setns
shrb
mov
cmp
or
inc
inc
inc
sbb
sub
inc
stos
adc
out
and
arpl
push
repz
idivl
xor
bound
push
cltd
sub
xchg
cli
xlat
cmpsl
add
scas
inc
idiv
cmp
xchg
mov
scas
stos
pusha
cltd
fimuls
aam
mov
inc
dec
iret
je
push
sbb
pop
xchg
fs
xchg
push
out
sbb
popa
jb
adc
dec
lods
mov
or
fwait
jge
adc
xor
push
push
mov
fisubrs
bnd
mov
data16
cwtl
ret
xor
jo
lods
jge
pop
jg
out
in
push
add
iret
not
xor
xchg
inc
xor
xchg
rorl
scas
push
dec
aad
testb
cld
dec
xchg
clc
sbb
push
enter
mov
ljmp
aam
aas
dec
fadd
mov
roll
adc
aad
outsl
test
lret
adc
push
test
xchg
in
lea
cmp
push
sbb
mov
xor
lahf
xor
pop
imul
add
adcb
popf
sbb
rolb
daa
jbe
push
ljmp
lret
add
in
mov
fisubs
push
mov
cmp
addr16
pop
int3
in
imul
data16
sbb
decl
imul
cwtl
call
rcrl
push
shll
mov
sti
in
pop
push
sub
push
rcll
push
ret
lock
jg
jno
adc
sti
mov
push
aaa
decb
jae
dec
inc
adc
je
push
xor
out
mov
inc
enter
jg
rorl
push
cli
sub
negb
mov
rcrb
in
out
jge
cmp
jge
movsl
mov
cltd
mov
adc
fdivl
cmp
scas
fldcw
ret
fnsave
aam
add
hlt
lea
and
mov
mov
push
hlt
scas
adc
push
lret
mov
mov
cmp
pop
mov
dec
test
lret
loope
icebp
push
aas
lcall
lahf
lret
jae
add
or
mov
cmp
or
adc
ret
call
inc
das
xlat
in
icebp
inc
fisubl
cmp
adc
ja
mov
rcll
in
call
pushf
inc
lahf
push
push
fnsave
lock
jg
addl
adcb
mov
inc
dec
xchg
push
ss
out
ljmp
pusha
iret
lcall
sbbl
movsb
lahf
xchg
fwait
test
xchg
or
les
jne
pop
sub
push
cmp
paddusb
cmpsl
xor
fisubrl
xchg
aaa
movsl
jmp
dec
lods
or
stos
cmp
cmc
mov
jecxz
mov
daa
in
xchg
jo,pn
scas
popa
push
cmp
dec
pop
leave
pushf
xchg
cmp
dec
int3
test
push
outsl
pop
inc
lret
or
inc
cmp
mov
pop
adc
lea
jmp
aam
test
and
and
cwtl
xor
insb
mov
iret
pop
fcoml
aad
xor
pushf
ret
cli
or
or
out
lcall
std
mov
jbe
mov
lahf
push
xor
mov
and
outsb
testb
push
mov
jg
mov
adc
pop
xor
fcomps
cltd
jle
ljmp
sub
pop
loopne
fstl
push
cmp
or
pop
xchg
test
push
mov
repz
push
ljmp
bound
fbstp
gs
lahf
test
push
cmp
pop
push
sbb
dec
sbb
add
xlat
cltd
shr
std
xor
mov
mov
aam
pop
call
sbbb
sbb
sets
or
inc
inc
jecxz
repz
adc
in
sbb
mov
and
mull
push
pop
cli
mov
pop
into
mov
addr16
xor
add
mov
mov
sub
fsubrp
fwait
push
mov
bound
cwtl
mov
aaa
mov
xchg
add
adc
in
sarb
arpl
cwtl
fidivrs
push
cli
stos
add
xor
jnp
dec
ss
inc
mov
call
inc
and
jns
js
jns
mov
dec
and
and
add
xor
addr16
mov
xchg
ds
push
int3
push
push
adc
ret
jns
jo
shl
outsb
mov
or
mov
shll
in
push
popa
frstor
pand
add
lea
lret
ss
insl
jmp
in
xchg
sub
mov
rolb
fdivrl
mov
mov
push
adc
mov
test
and
sysenter
out
loopne
inc
vcvttpd2uqq
lahf
orb
bnd
aaa
mov
jne
sahf
test
loope
movsb
out
or
outsl
loopne
adc
lcall
mov
mov
test
and
ds
pop
cmpsb
sbb
inc
cli
inc
jne
leave
pop
sbb
inc
cmp
out
push
mov
shrb
and
sub
lods
sub
push
std
mov
jno
and
push
dec
sbb
call
xlat
jp
mov
incl
cmp
cmp
pop
mov
mov
sub
fimuls
je
icebp
inc
rclb
out
push
mov
je
pop
insl
int
cmpl
loop
loopne
jge
adc
xor
fldl
mov
dec
mov
sarb
lods
out
gs
sahf
xchg
adc
or
inc
sub
sub
rol
cmpsl
push
inc
jp
jmp
dec
es
popa
push
adc
test
push
add
mov
dec
xor
movsb
or
add
xor
call
add
mov
aad
das
repz
pusha
ret
daa
jmp
or
jns
movsb
push
mov
xchg
push
rclb
xchg
and
pop
sarb
xor
and
fldl
ret
jmp
scas
and
pop
xor
inc
stc
popa
lods
mov
std
xor
inc
fs
inc
jbe
mov
mov
inc
in
adc
fiadds
fcoms
sub
fcmovb
xchg
cmc
daa
sub
rorl
ss
es
jmp
add
mov
rorl
jnp
mov
divb
sahf
xorb
jge
test
fs
mov
push
or
ljmp
push
sbb
popa
loopne
stos
push
pop
ret
pop
and
pop
or
int
pop
loop
sbb
cmp
jp
xlat
dec
jns
pop
stc
dec
adc
sbb
xor
test
mov
xor
sbb
popa
ret
mov
filds
push
in
mov
lock
test
bound
loopne
cmpsl
xchg
adc
jae
insb
mov
fisubs
test
push
mov
addr16
jge
jne
test
push
cmp
lret
pop
push
ud1
pop
stos
std
cmp
mov
inc
dec
cltd
jne
or
dec
pop
lret
and
and
lret
sub
mov
in
cli
jle
jb
aam
mov
stos
fldl
dec
lea
lcall
dec
mov
sbb
cli
adc
addb
int3
or
inc
mov
enter
scas
xchg
mov
xchg
xchg
xchg
les
jmp
fistps
jne
cmp
mov
mov
jb
or
fistps
stos
dec
sub
fisubrs
movsl
xchg
fsubrp
inc
push
adc
cmp
loope
jbe
jae
xor
movsl
in
sbb
lea
lcall
jbe
dec
dec
mov
stos
daa
push
jno
push
lods
rol
popf
xor
cmp
push
in
out
mov
xchg
sti
lcall
and
test
sbbb
sbb
out
es
addl
arpl
js
mov
dec
cmp
or
cmp
sub
in
mov
cwtl
movsl
mov
loope
in
pop
std
out
mov
and
mov
add
fisttps
push
xchg
fidivrl
fildll
lods
and
nop
pop
xor
jle
fimull
scas
jg
cmp
or
xor
bound
inc
cli
mov
sub
imul
pop
sub
js
push
stos
aad
repz
test
nop
sbb
or
notl
shl
dec
js
cmp
add
pop
pop
mov
jp
mov
lcall
mov
push
xor
pop
mov
push
and
pop
insl
ss
fld
add
jg
inc
fcompl
dec
lods
jne
xor
xchg
cmp
movsb
es
lret
aad
mov
xchg
push
cmp
jle
dec
out
dec
push
mov
and
mov
int3
movsb
adc
add
inc
shrb
ret
adc
add
aas
cwtl
adc
sub
pop
xchg
shrb
pusha
mov
les
aas
hlt
adc
adc
mov
insl
add
push
push
sahf
inc
push
test
sub
fstpt
cmovp
inc
test
xor
cld
jno
dec
mov
jno
rorl
lds
pop
inc
add
cmc
mov
cvtdq2ps
icebp
hlt
sbb
sti
push
sbb
jo
inc
jno
add
sub
ja
cmp
inc
int
cli
lea
push
inc
cmpsb
and
push
test
pop
mov
ds
push
cmp
imul
cltd
out
sbb
incb
or
lcallw
push
xor
fnsave
push
mov
mov
stc
sbb
and
or
cmp
cwtl
pop
pop
and
fs
push
pop
mov
jno
stos
test
add
push
scas
shll
outsb
les
scas
test
cmpsl
dec
lret
pop
fidivrs
cmp
fsubrs
or
dec
push
addr16
int
bound
in
pop
lret
sub
incb
mov
push
std
pushl
inc
jmp
roll
push
fmuls
push
ret
sbb
scas
loopne
add
fdivrl
insb
xor
cmp
jne
out
int3
sbb
or
jp
sbb
aaa
sti
ja
movb
adc
in
ja
sub
or
popf
fisubs
fdivrl
inc
sub
mov
lcall
nop
pop
pop
in
scas
mov
adc
daa
mov
mov
cmp
sbb
lcall
jo
dec
nop
mov
push
mov
mov
lds
daa
inc
jg
subb
xchg
and
fidivs
xchg
pop
dec
int3
cmpsl
pop
jne
xor
push
lds
cld
pop
or
ljmp
daa
adc
fcoml
inc
lcall
addr16
mov
std
inc
mov
fdivs
inc
jg
or
enter
dec
mov
add
jl
and
lea
dec
cli
push
les
mov
fildll
out
adc
jl
xchg
mov
inc
push
inc
or
je
mov
aas
and
sub
stos
bound
or
idivl
je
in
je
adc
mov
jle
test
fldcw
lods
sbb
adc
shr
les
cld
repnz
adc
jo
push
xor
mov
lcall
xchg
xor
sbb
popa
add
lret
pusha
pop
int3
mov
dec
insl
fdivrl
nop
out
jb
pusha
aaa
ror
aad
out
dec
scas
rcll
int3
inc
fldcw
outsb
loopne
enter
mov
stos
pop
mov
xchg
pop
icebp
pushf
jns
add
fcoml
fcom
ret
popf
xor
sarl
fwait
push
sub
icebp
bound
push
mov
pop
in
jbe
adc
pop
incl
sahf
mov
iret
imul
aaa
cmp
sbb
jecxz
fs
cmp
mov
mov
daa
sub
mov
push
roll
scas
pop
shlb
sub
sbb
sbbl
jbe
hlt
adc
loope
xchg
inc
mov
test
push
lahf
aam
add
aad
pop
and
jle
mov
shl
cwtl
cmp
push
and
push
lods
daa
jecxz
lcall
push
sarl
mov
mov
aas
jnp
fwait
push
jmp
xlat
inc
test
xor
push
sarb
hlt
cld
push
or
aaa
mov
and
or
bnd
jmp
inc
sub
mov
dec
movl
adc
adc
js
data16
fmul
sbb
test
fidivl
bound
cli
mov
inc
movsl
pushf
mov
add
lcall
rolb
xchg
dec
xchg
fisttpll
mov
jmp
movsl
or
insl
jl
aad
cld
shll
in
ss
repz
jbe
enter
mov
enter
call
cs
pop
fsubl
dec
pop
dec
add
push
ret
sub
sbb
shr
jle
repz
data16
int3
push
ret
lea
or
xchg
insl
xchg
pop
pop
add
mov
insl
adc
jle
mov
jno
push
movsb
cmp
push
mov
pop
js
lret
lret
cs
fbstp
add
aas
ret
or
adc
push
xchg
movsb
repz
jp
xchg
or
push
add
adc
movsl
jecxz
xor
fldenv
mov
jle
inc
xchg
mov
gs
sub
cli
aaa
mov
repnz
aaa
inc
and
dec
popa
bound
js
imul
rorl
call
cmc
xchg
xchg
sbb
add
daa
cmp
add
push
jl
fisubl
call
jnp
or
aaa
js
scas
stc
scas
jmp
adc
mov
ret
je
push
int3
and
jae
push
sbb
into
repz
movsb
inc
pop
lods
fmuls
mov
in
in
adc
repz
stc
sbb
insb
mov
xchg
xchg
dec
adc
jl
in
pop
test
arpl
subl
xor
imul
mov
loope
iret
call
cmp
pop
cltd
xor
inc
push
inc
adc
sarl
cs
addb
xchg
call
pop
mov
ret
test
xchg
add
out
or
mov
xchg
or
and
leave
xchg
add
cmpsb
sbb
nop
int
jmp
inc
aam
cmpb
stos
pop
repnz
ret
popf
cmc
push
ss
pop
sub
mov
fsts
jle
les
negb
adc
push
mov
mov
loop
adc
rclb
ds
push
and
add
idivl
sahf
mov
inc
pushf
adcb
fistpll
or
leave
jecxz
daa
stos
popf
xor
or
push
dec
ffreep
mov
rcl
in
jecxz
xchg
push
int3
jae
and
scas
sahf
aaa
out
lret
insl
ds
pop
mov
into
outsb
popa
loopne
mov
mov
mov
xor
push
outsl
cld
jecxz
mov
aad
ja
push
push
mov
imul
jmp
ds
cld
pop
or
popf
cmp
fdivl
pop
sub
pop
mov
and
lds
xchg
or
bound
jne
andb
push
add
jae
flds
pushf
adc
nop
lds
movsb
pop
lea
pusha
shl
inc
mov
xchg
andb
fimull
std
or
scas
jmp
sbb
repnz
addr16
dec
mov
rcl
and
sahf
cld
adc
and
mov
popa
adc
cmp
or
or
and
dec
mov
inc
rcll
iret
cltd
mov
sbb
and
xchg
xchg
fisubrl
adc
sbb
aad
mov
mov
inc
mov
ret
or
fwait
mov
addb
imul
inc
daa
mov
lea
out
mov
pop
cmp
pop
xchg
out
outsb
decl
mov
mov
hlt
mov
sbb
cmpsl
mov
push
xor
dec
add
shrb
or
cmp
cmp
xchg
pop
mov
and
xchg
xor
ret
push
lods
fwait
out
dec
mov
aam
iret
test
or
mov
sahf
add
pop
pop
mov
ret
into
add
sbb
mov
jbe
in
sti
lret
movsl
sbb
cmp
cmp
in
add
push
jb
adc
ljmp
fidivrl
and
popa
jnp
sahf
adc
sbb
loopne
addr16
test
push
insl
cmpsb
fcomps
loopne
lret
jp
sbb
std
iret
pop
dec
jge
popa
daa
fwait
or
or
mov
mov
push
fchs
outsl
mov
or
icebp
dec
outsl
lahf
dec
jbe
mov
pop
aad
in
xchg
adc
stc
xor
mov
add
sub
push
mov
xchg
mov
fdivrl
mov
nop
jbe
cmpsb
add
push
out
ljmp
clc
aam
addr16
cs
pop
mov
and
out
fimuls
negb
cltd
dec
mov
mov
pop
sub
xchg
test
cwtl
ret
and
adc
stos
adc
repz
xchg
dec
mov
add
xchg
leave
and
insb
push
mov
inc
push
xchg
cmpsl
dec
mov
in
sub
adc
rorl
xor
sahf
outsl
push
xor
iret
mov
cltd
mov
lods
dec
jecxz
data16
repnz
jb
lock
dec
xchg
xor
dec
dec
mov
mov
in
adc
dec
mov
ljmp
popf
test
xchg
mov
mov
pand
xorl
mov
push
in
std
inc
xchg
int
xor
in
mov
or
das
xchg
or
hlt
pop
add
adc
cmc
daa
nop
aam
sbbb
mov
sub
mov
mull
xor
pop
pop
push
mov
add
jg
jbe
or
imul
adc
pop
mov
into
sub
adc
in
adc
and
adc
and
dec
jb
fadds
loopne
insb
mov
sub
orl
movsl
mov
jg
xchg
loop
in
jmp
popa
or
xor
mov
mov
insb
addr16
adc
add
lods
call
imul
pop
icebp
cltd
lea
js
push
mov
push
push
jl
cltd
scas
jle
lods
shrb
mov
lret
fisttps
aaa
xor
and
shl
loope
pop
xor
or
negl
mov
or
sub
test
call
leave
sahf
stc
mov
insl
xor
iret
pop
scas
sub
pop
jmp
push
xchg
fistps
jb
jne
pop
jl
fwait
loopne
icebp
mov
dec
sbb
mov
cmc
int
in
ss
push
inc
mov
lods
rcll
mov
sub
mov
cmp
sub
mov
roll
in
jbe
shr
aad
dec
mov
popa
sub
inc
inc
or
into
or
xchg
mov
xchg
or
push
add
inc
sahf
push
inc
insl
test
and
aam
fcmovnb
adc
inc
test
xchg
sbbl
cmp
scas
jecxz
pop
gs
inc
test
notb
int3
dec
push
mov
hlt
dec
inc
scas
inc
add
and
pusha
cwtl
jo
jbe
int3
mov
iret
out
xchg
dec
dec
enter
mov
call
or
inc
jne
mov
mov
inc
push
in
adc
stos
push
mov
or
and
push
pop
mov
flds
mov
aas
in
adc
jb
pop
call
mov
jns
add
std
push
mov
push
lea
lahf
int
add
imul
js
sar
sbb
add
and
and
out
js
jmp
pop
mov
and
and
repnz
aas
sub
push
push
cmp
push
add
out
mov
jl
pop
fnstsw
xor
loopne
push
daa
adc
fists
pop
data16
fiadds
rcll
out
mov
jnp
ds
sub
leave
out
stc
xchg
sbb
push
mov
xchg
jge
leave
add
ja
pop
rcr
repnz
or
mov
pop
push
jle
xor
xchg
icebp
dec
or
rcr
xchg
aam
clc
ljmp
lahf
ret
mov
push
lods
cmpsb
aam
stc
xor
gs
xchg
pop
xor
out
adc
mov
std
add
mov
inc
ud0
pop
repz
jb
insl
inc
ljmp
lret
lret
out
cmp
shll
popf
lcall
shll
icebp
std
out
testl
jmp
and
push
dec
lcall
aas
movsl
or
mov
jmp
sbb
call
dec
mov
cmp
iret
pushf
push
push
sbb
rcrl
int
int
pop
cmpsl
dec
xor
or
fbld
mov
loop
mov
dec
xor
fdivrs
dec
rcrl
inc
insl
je
rclb
mov
addr16
and
negb
js
jle
adc
add
xchg
bound
dec
int
mov
jg
sub
xor
pop
out
mov
fstpl
push
dec
pop
nop
test
ja
push
inc
sub
dec
mov
jle
fstl
jg
dec
lds
ret
fcoml
call
fsubs
jno
js
in
push
ja
jns
insl
sub
push
jmp
loopne
insl
and
pop
jmp
push
pop
lods
jmp
lret
loope
cltd
add
mov
mov
repz
call
repz
fmuls
sahf
cmpsl
mov
push
sub
pop
xchg
testb
mov
mov
add
inc
call
sbbl
repz
jbe
xor
lds
push
mov
push
out
gs
push
fdivrl
sarl
rorb
dec
push
dec
outsb
push
cmp
ret
inc
gs
push
mov
fistl
sbb
mov
jmp
and
cmp
fstl
fidivs
movsb
jae
stc
cs
cmpsb
ficomps
cmpsb
shlb
jbe
bound
push
ljmp
call
add
fadds
es
inc
sub
loope
sub
sbb
fnstenv
push
mov
lret
movb
in
jne
ss
insb
pop
pop
insb
lds
arpl
pop
pop
ret
cli
ss
cmp
jb
adc
stos
add
jmp
xlat
lock
mov
pop
mov
mov
fdivr
stos
jecxz
addb
popa
sbb
je
push
sbb
cli
push
mov
jmp
bound
adc
adc
dec
dec
fmulp
out
popa
push
mov
js
in
mov
dec
mov
lcall
and
sbb
mov
push
ret
repz
adc
sub
mov
sbb
ficoms
jle
movsb
push
es
jno
mov
lock
or
xchg
add
fistps
rorb
ja
aam
jecxz
add
lds
inc
push
inc
imul
stos
xor
inc
or
fstps
jecxz
insb
jmp
lahf
hlt
movsl
push
js
mov
xchg
jmp
push
dec
and
fistl
ljmp
xlat
cs
dec
fdivrl
adc
dec
jns
stos
js
xchg
vmovq
dec
mov
repz
xor
sbb
icebp
aam
shl
mov
and
adc
out
dec
int3
cmp
jg
mov
test
cmp
mov
mov
rclb
loop
aad
mov
stos
pop
cs
xlat
dec
push
xchg
pop
test
mov
lcall
xchg
cmp
mov
push
lea
cmpsb
sahf
sti
or
js
sbb
mov
dec
xor
pop
mov
pop
jo
pop
xchg
fdivs
mov
mov
push
dec
leave
dec
dec
mov
call
shll
adc
clc
push
popa
and
push
push
cs
xchg
mov
pop
js
je,pn
test
sbb
push
adc
xchg
int3
inc
loopne
das
dec
call
pop
fcoms
cmp
in
lods
sarl
out
aas
sbb
sbb
or
incb
push
loope
sub
adc
cmp
sub
pop
mov
std
cltd
mov
ret
sub
mov
lahf
mov
sub
in
fdiv
add
mov
pop
popf
mov
jns
jmp
loopne
xor
push
iret
mov
repnz
add
enter
fs
mov
pop
lods
adc
or
shll
push
cmpsl
rorl
cmp
dec
sub
mov
jne
jbe
mov
dec
add
out
xor
sbb
mov
adc
mov
insb
jne
aaa
insb
jo
cmp
lods
in
sub
or
int
sbb
xchg
lods
add
lods
cli
lds
sub
xchg
cmp
divb
and
adc
and
adc
dec
dec
push
xchg
jle
ja
mov
mov
gs
cwtl
inc
sub
mov
nop
cpuid
xchg
addb
mov
bound
push
or
fdivs
sbb
jge
add
push
push
or
cmpsb
mov
or
pop
and
int3
addl
notl
lock
jbe
fwait
inc
inc
cmp
outsb
insb
dec
cmp
int
popa
ss
bound
int3
fisubs
inc
inc
aam
xchg
add
mov
cltd
scas
testb
bnd
inc
sti
dec
inc
inc
negl
out
mov
aad
mov
mov
loope
or
lods
iret
jo
sbb
push
addr16
int
test
sahf
pop
movsb
and
aam
push
imul
mov
mov
out
push
bound
mov
popa
mov
or
or
inc
ds
inc
jne
sub
divb
cmp
dec
sub
scas
scas
cmc
xor
and
cmpsb
nop
push
lret
cmovnp
and
mov
ret
fmuls
jno
adc
icebp
pop
sbb
dec
mov
ficoml
out
jp
loopne
stc
add
mov
mulb
or
out
les
loopne
push
loope
add
rcl
mov
push
ds
repz
andl
call
pop
dec
inc
mov
push
testb
ret
jo
push
ljmp
or
dec
lock
sbb
mov
jl
bound
loop
cmpsl
iret
fcompl
cmp
mov
jl
out
inc
into
mov
push
add
mov
xchg
les
mov
into
pop
daa
aas
xor
movb
mov
push
pushf
ljmp
scas
sub
mov
xchg
in
dec
xchg
and
dec
fmul
ds
lahf
test
fisttpl
repz
push
out
aas
sbb
arpl
rclb
jae
pop
aas
stos
mov
ret
xor
inc
sbb
sub
xor
mov
or
jle
iret
pop
or
pop
mov
sub
mov
mov
decb
jge
into
sub
leave
movsb
stc
insl
in
pop
cmp
repz
mov
adcl
in
test
pop
sahf
cltd
sarb
xchg
jo
loop
lods
cld
and
stc
leave
insl
jno
jge
pop
or
lret
adc
pop
repnz
pop
cmp
shlb
movsl
scas
sbb
scas
jmp
movsl
ret
stc
push
lret
jo
les
and
ss
pop
lods
mov
dec
cli
xchg
in
jnp
fwait
mov
pop
sub
movsb
push
push
mov
push
cld
mov
fisttps
sbb
push
rorb
shrl
mov
xor
xchg
mov
xor
mov
sbb
xchg
sti
mov
outsl
or
negb
push
xchg
iret
test
jle
push
rcrl
lods
jle
es
jne
inc
mov
inc
sbb
stos
je
inc
xchg
cld
mul
lock
int
pop
inc
out
stos
xchg
in
insb
vpmacssdqh
cmp
rcrl
push
lods
push
push
or
mov
xor
aam
adc
lahf
sub
pop
test
sub
push
pusha
lds
rcr
daa
and
pop
xchg
mov
dec
lds
dec
or
push
aam
out
sub
push
ljmp
and
sub
add
sahf
xor
sbb
adc
push
sahf
leave
inc
in
neg
xor
xchg
cmc
pop
dec
xor
hlt
mov
or
out
or
xchg
adc
jecxz
push
les
sub
or
aas
and
aad
les
outsb
xor
sarl
xchg
and
sub
jg
sbb
aad
xor
xchg
inc
cmp
shrb
inc
pop
mov
xlat
arpl
sub
sbbl
ljmp
mov
sbb
xor
repnz
ss
jl
add
pop
jno
cmp
sbb
stos
ret
lcall
fs
push
sti
adc
bound
or
xchg
lret
lea
repnz
in
inc
gs
xchg
pushf
scas
or
out
mov
mov
gs
mov
sub
xchg
sub
push
sub
cs
or
push
in
sub
test
sbb
inc
jnp
lock
mov
mov
dec
loopne
sub
dec
out
outsl
into
or
scas
push
mov
fcoms
jns
inc
inc
enter
mov
fwait
sub
push
pushf
xor
outsb
fidivs
or
jmp
ds
subl
jmp
jl
cmp
sti
add
push
aaa
adc
mov
inc
js
outsl
mov
add
inc
add
in
test
lcall
fstl
sub
fcompl
movsb
jp
adc
das
sbb
dec
out
lret
xchg
inc
push
push
pop
inc
inc
add
add
into
sahf
loop
aaa
pop
adc
push
hlt
or
mov
repz
insl
jnp
mov
sti
push
call
or
sub
adc
popa
mov
push
fcoml
fcmovnu
cli
adc
xlat
mov
loope
cmp
pop
aad
jnp
in
jge
lcall
out
or
fcmovnu
loop
in
sti
add
xor
ret
mov
je
inc
sahf
daa
cmp
stos
mov
xchg
pushf
gs
dec
mov
push
dec
or
mov
imul
xlat
in
call
adc
popa
cmpxchg
sbb
and
les
call
push
enter
dec
loopne
mov
jg
test
cmp
out
incb
push
pusha
rorb
addr16
and
aas
mov
jg
push
add
xlat
ret
and
or
or
and
shrl
inc
sbbl
out
cmc
cmp
add
movsb
mov
jmp
sbb
add
fdivrs
cmp
mov
push
xchg
dec
cltd
in
push
imul
dec
mov
xlat
sahf
mov
mov
inc
rclb
mov
repz
shlb
mov
int3
pop
xchg
sbb
sub
cmp
iret
insb
and
andl
add
in
aas
pushf
enter
mov
ret
popa
push
outsb
sbb
push
sti
and
lds
cld
js
and
push
xchg
and
arpl
xchg
sub
cmp
jne
test
xorl
adc
pusha
test
pop
inc
xchg
test
push
or
mov
mov
or
insb
test
loope
into
sub
xchg
clc
jo
sbb
pop
push
cmp
pusha
ficoms
push
hlt
and
adc
leave
jno
cs
add
das
notl
mov
pop
jmp
data16
jmp
pop
or
add
sarb
fsts
or
fnstcw
inc
adc
dec
inc
and
mov
jmp
shl
lret
test
fwait
xchg
cs
mov
sti
pop
cmpsl
and
mov
stos
jbe
je
arpl
xchg
lcall
imul
dec
dec
mov
pop
pop
or
rclb
andb
test
repz
fsubrp
jno
inc
dec
xchg
addr16
add
loope
jle
in
push
cmp
lods
ja
movsb
lahf
jmp
push
pop
push
inc
and
mov
les
ljmp
inc
movsb
push
push
mov
and
fwait
adc
enter
sbb
sti
pop
in
out
dec
lock
pop
gs
mov
inc
xor
mov
rol
xlat
lcall
cs
imul
sub
aas
mov
gs
or
push
sub
cmp
shrl
push
pusha
jno
ss
push
mov
ret
cld
int3
ja
lock
xchg
sbbl
lds
mov
ret
push
inc
dec
lock
cmovp
lods
call
popa
sbb
or
shl
shrb
jne
test
mov
pop
push
or
and
push
jmp
jg
scas
leave
int3
sub
icebp
dec
mov
call
ret
test
pushl
adc
lret
mov
and
sbb
aad
jae
push
adc
push
mov
imul
dec
ret
aam
and
mov
xor
jl
jbe
xor
leave
ljmp
int3
rorb
lods
xor
sub
int
sub
push
lods
push
dec
push
bound
pop
mov
std
cmp
lcall
negb
and
xchg
jo
js
jmp
les
into
xlat
pop
cld
stos
stos
xchg
shr
fistl
mov
add
inc
popf
add
dec
movups
mov
or
lods
push
int
cmc
int3
sub
mov
fistl
cmc
xor
lods
cmc
cmp
cmp
insl
ret
scas
imul
mov
imul
mov
inc
aad
push
flds
in
lret
push
push
xchg
or
xor
or
pop
sbb
push
rorb
adc
lods
mov
lods
xchg
push
cld
loop
jno
push
popf
fs
leave
loop
dec
sbb
in
and
inc
xchg
movsb
les
imul
mov
xchg
stc
roll
pushfw
inc
jns
cs
cmpb
aas
xchg
leave
aas
shl
and
push
imul
fidivs
dec
pushl
jge
adc
sub
ljmp
iret
jge
je
add
shrb
mov
and
lcall
ja
insb
mov
int3
stos
shrb
dec
mov
sbb
scas
es
aad
imul
ret
sub
push
cmp
sbb
fldt
orl
into
lret
daa
and
fiaddl
adc
mov
sahf
int3
and
lods
fstpl
xchg
roll
in
sub
repz
loope
sbb
jb
stos
pop
inc
cli
mov
xchg
mov
sub
les
mov
es
xchg
dec
roll
mov
shl
stos
mov
daa
jge
mov
pop
stos
decl
inc
scas
and
mov
iret
and
mov
or
insl
or
aad
dec
pop
jle
shrl
adc
cmp
xchg
movsl
mov
sti
mov
lods
fsincos
into
and
ljmp
add
pop
pushf
stc
adc
outsl
incb
imul
movsl
out
mull
push
inc
cwtl
cltd
fbld
scas
pop
fbld
lock
movsb
das
pop
jbe
lret
pop
xchg
jecxz
shll
hlt
addb
sti
rorl
pop
dec
sbb
jmp
ljmp
stos
movsl
fwait
mov
jno
popf
xor
and
test
shrl
mov
cmc
fsubrl
jecxz
mov
mov
inc
pop
jmp
cwtl
inc
mov
lret
pop
jbe
or
mov
mov
ljmp
jmp
add
lcall
in
jg
ret
lcall
jmp
ljmp
imul
popf
cmp
out
adc
lods
jp
xor
lahf
pop
jb
sub
imulb
mov
mov
in
add
mov
mov
outsb
inc
or
xor
cmp
add
orl
fisubrs
fiadds
pop
sbb
inc
lcall
and
rorl
mov
mov
leave
into
dec
lret
or
loope
pusha
cmpsb
jmp
pop
aas
stos
not
jbe
movsl
mov
cltd
mov
pushf
fdivs
adc
rcll
in
pop
or
es
faddp
jle
jmp
sub
xchg
in
sub
data16
xchg
and
in
loopne
dec
xor
aam
cltd
rcl
mov
cmc
ljmp
xor
cmp
lock
push
dec
add
in
pop
gs
cmp
pushf
std
push
sarl
pop
mov
add
and
mov
sub
cwtl
fcmovb
popa
mov
pop
mov
mov
fidivs
cmpsb
xchg
push
push
sub
jp
mov
jmp
aaa
sahf
push
fdivs
mov
dec
loop
adc
mov
nop
push
and
jb
sub
jb
xlat
outsb
push
in
loopne
or
pop
jae
int3
int3
mov
clc
fs
notl
in
mov
andl
fstl
movsl
out
xor
mov
inc
add
rcrb
cmp
xchg
aad
fadd
pop
push
sarl
ss
stos
jns
inc
movsl
add
sbb
jmp
push
xchg
insb
lds
sbbl
nop
push
xorb
jp
sbb
inc
mov
add
clc
orb
push
xor
push
mov
push
inc
or
call
loopne
addr16
jb
xchg
jg
int3
popf
mov
sub
jge
cmp
in
mov
cmp
rcll
outsl
mov
and
mov
in
cli
not
insl
dec
jo
mov
pop
jecxz
adc
xor
mov
cmpl
adc
mov
call
jecxz
insl
mov
and
in
cltd
add
xchg
das
mov
cmp
cmp
xlat
loop
repnz
xor
pop
test
test
scas
sti
xchg
addb
in
rclb
call
in
inc
iret
cmpsl
pusha
lcall
fs
or
test
ficoms
icebp
lea
in
pop
push
inc
jae
gs
imul
jg
cmp
add
inc
cli
sub
shlb
ret
xchg
dec
adc
addb
fildll
aam
into
push
mov
inc
cmc
test
mov
cmp
rorb
pop
lret
ljmp
lods
mov
and
or
pop
mov
add
jno
xor
daa
sahf
or
mov
outsl
es
leave
loopne
jmp
push
cmp
sbb
stc
int3
cld
bswap
shlb
push
lcall
or
fnstenv
gs
push
popf
pop
pop
cltd
popf
aaa
jne
mov
fcompl
sbb
adc
pop
scas
mov
sub
and
rcrl
lea
push
hlt
std
fcoml
xor
add
cmp
push
sbbb
shl
cwtl
push
cmp
jno
lock
sub
pushf
lcall
sbb
sub
xchg
xchg
sbb
cmp
lock
jo
adc
mov
enter
imulb
pop
sti
cs
add
fisubrs
adc
cwtl
sbb
nop
inc
js
nop
jge
cld
cs
xor
sahf
mov
inc
lods
mov
cli
inc
fs
and
lock
mov
lret
mov
shlb
add
std
push
inc
std
xchg
dec
mov
scas
push
out
shl
mov
iret
mov
inc
in
jl
ja
arpl
inc
call
pop
or
dec
xchg
xchg
xor
pop
repz
sub
js
pushf
xchg
call
ret
pop
rorb
cld
mov
shrl
ret
mov
push
incb
lods
sub
sahf
add
outsb
out
cs
hlt
scas
notl
and
dec
pop
mov
cmp
outsl
dec
lods
notl
das
jecxz
cli
xor
jno
mov
sbb
mov
mov
outsl
pop
sub
cmp
or
nop
add
xchg
mov
sbb
lea
inc
mov
push
loopne
and
fidivl
mov
inc
xor
stos
jecxz
cmp
mov
out
cmpsl
rorb
leave
icebp
fcmovbe
pop
ss
pop
mov
loopne
lock
imull
scas
adc
shl
into
ror
jl
outsb
push
and
repnz
repz
rep
test
ret
lds
push
stos
mov
mov
adc
outsl
movsb
jl
inc
lret
or
pop
stos
sbb
call
fimuls
sti
bound
aam
dec
mov
test
cmp
movsb
test
cltd
jns
clc
xchg
arpl
pop
xchg
push
sbb
imul
and
pop
xor
pop
mov
stc
inc
dec
jmp
repnz
in
bnd
and
inc
std
lahf
in
jecxz
aam
std
into
sub
jmp
jmp
sbb
sbb
xor
sub
rorb
ja
ror
dec
add
orb
cwtl
popf
dec
int
ljmp
es
loop
outsb
mov
jl
test
xchg
jo
repz
jl
out
xorb
cmp
cmp
mov
shlb
pop
mov
enter
movl
loop
or
xchg
loope
xlat
out
push
filds
mov
cmpl
adc
rcr
inc
fucom
sbb
sbb
or
push
outsb
orl
jbe
jl
out
movsb
js
push
dec
push
sbb
pop
in
push
sti
pop
inc
mov
push
popa
or
fwait
mov
outsl
or
sbb
mov
aad
mov
jmp
dec
sbbl
adc
fstpl
dec
pop
add
add
mov
add
mov
add
nop
inc
mov
loope
sti
sub
and
rorb
xorl
add
pop
cmpsb
add
add
out
xor
lds
push
mov
jl
rorb
dec
arpl
push
jecxz
sub
or
add
cwtl
cmpsl
add
subl
inc
loopne
mov
inc
sbb
pop
sub
andb
mov
int
dec
jmp
cmp
bound
push
dec
inc
or
sbb
and
lock
mov
adcl
jl
paddd
inc
mov
in
push
xchg
insb
xchg
mov
push
mov
inc
mov
js
daa
shlb
das
mov
jg
add
pop
nop
movsl
outsl
insb
adc
pushf
fmulp
add
in
movb
inc
shl
test
dec
ret
dec
inc
aam
int3
iret
shr
stos
sbb
xlat
xor
push
out
mov
repnz
sub
and
cmp
es
frstor
mov
data16
fistpll
jecxz
loope
icebp
mov
and
cli
scas
fldenv
mov
lods
repz
fcomip
add
int
adc
js
mov
das
pop
lahf
dec
xchg
or
xor
sbb
jg
or
push
sub
or
add
sub
inc
out
xor
out
in
push
and
dec
std
or
dec
mov
leave
xor
stos
cmpsl
cli
mov
ret
aas
sub
jo
pusha
inc
ja
ret
into
sahf
mov
mov
mov
mov
lret
test
add
push
imul
mov
mov
lock
xor
mov
pop
call
xchg
xchg
std
aas
jno
pop
sti
or
add
inc
dec
jecxz
mov
sbb
cmp
test
test
pusha
scas
xlat
jbe
aam
pushf
cmp
cltd
or
dec
out
add
pushf
cwtl
add
gs
cwtl
loop
pop
lds
pop
fdivrl
sub
into
or
dec
mov
insl
pop
cmp
pop
push
adc
adc
mov
push
cmpsb
mov
jl
in
aad
pop
adc
dec
je
mov
mov
xchg
lods
outsb
mov
fcompl
pop
test
iret
mov
hlt
cmp
xchg
adc
fwait
sahf
pop
add
cmpsb
adc
push
and
shlb
push
or
jecxz
mov
adc
mov
stc
out
lcall
push
xor
outsb
jae
sbb
iret
popa
popa
fnstsw
add
les
inc
call
int3
lea
mov
outsb
andl
cmp
aam
stc
or
mov
sbb
outsb
das
inc
xchg
lods
and
sub
iret
adc
neg
pop
and
mov
mov
dec
movsb
test
sarb
push
stos
fisubs
cmp
jns
mov
insl
aad
in
sbb
pop
or
dec
jbe
pop
into
repnz
cmpsb
decb
mov
mov
gs
mov
inc
xchg
inc
cmpb
push
xor
mov
or
mov
call
xlat
in
xchg
push
cwtl
pop
jb
aaa
dec
movb
into
xor
mov
jp
xchg
and
lods
or
jns
jns
pop
sbb
and
fstpt
mov
xor
icebp
cs
fildl
mov
div
inc
jnp
dec
out
lods
shr
rcr
mov
notl
stos
les
pop
xchg
pop
push
push
insl
inc
jbe
inc
stos
daa
mov
push
mov
xchg
shrl
push
mov
test
stos
inc
dec
movsl
lock
cmp
or
fldt
rcll
das
imul
push
stos
clc
inc
repz
mov
inc
fnsave
stos
int3
pop
and
sbb
jb
mov
xor
out
push
movsl
pop
pop
push
popf
movsl
xchg
push
std
push
xor
xor
std
rcll
xchg
or
repz
mov
pop
int
bound
xchg
mov
push
and
pmulhw
and
lea
call
fisubrs
sub
fcompl
aas
lods
dec
jne
addb
mov
mov
leave
je
mov
xchg
lds
adc
in
sbb
cmp
push
in
lahf
stc
clc
iret
pop
mov
nop
sbb
pop
dec
imulb
cmp
inc
or
xchg
shrl
jg
neg
inc
sub
dec
inc
cmp
hlt
ret
jge
insl
pop
adc
inc
or
mov
jns
inc
insb
mov
in
mov
mov
cmp
out
inc
mov
ja
xchg
cmp
mov
lret
repnz
fcoml
xor
and
fdivs
jns
push
pop
xchg
aas
bnd
punpckhwd
mov
push
daa
inc
ret
outsb
cld
add
es
sbb
rcr
ds
lods
adc
jmp
and
jnp
add
jne
push
sub
and
js
addb
inc
mov
inc
push
pop
jo
fldt
dec
lahf
jno
stc
add
adc
enter
or
sub
mov
adc
test
inc
dec
testb
imul
std
mov
out
pusha
xchg
sarl
cmp
push
cwtl
test
mov
cmpb
shlb
mov
insl
adc
or
jg
pop
adc
and
sbb
mov
mov
sti
out
jg
ret
push
mov
pop
sarb
mov
mov
movsl
mov
sub
and
jle
xor
in
mov
or
sbb
cs
xor
jmp
jno
push
pop
pop
je
cmpl
cs
movsl
popf
packsswb
jb
out
pop
cmc
jns
xchg
sbbl
sahf
es
jl
cmp
insb
dec
pop
lcall
repnz
testb
mov
jns
ljmp
cltd
pop
xor
jp
shrb
cltd
call
and
inc
cmp
je
movl
jl
stos
pusha
int3
jb
mov
aaa
sub
lock
mov
cmpsl
dec
fwait
mov
mov
jge
mov
leave
cmpsb
sub
jb
adc
int3
inc
pop
push
icebp
mov
test
lss
pop
icebp
outsl
mov
xor
lods
sub
sub
test
lds
sahf
push
fwait
jl
orb
daa
cltd
ret
add
nop
lret
inc
add
rorl
movsl
sarl
mov
jno
hlt
xor
push
sarl
mov
push
xchg
rorl
sbbl
add
and
jnp
leave
out
mov
in
sbb
xchg
jae
test
clc
fcomip
out
movsb
inc
mov
movsb
hlt
mov
add
aam
mov
test
sub
cli
mov
js
mov
seta
mov
mov
jecxz
loop
addl
gs
arpl
mov
add
and
jo
nop
loop
adc
xchg
out
pop
xor
cwtl
insl
fcmovb
int3
cmp
jns
add
inc
xchg
inc
insl
dec
inc
ja
mov
std
repnz
testb
loop
mov
repnz
stos
pop
xchg
hlt
or
adc
push
mov
mov
add
mov
lret
xor
repnz
popa
sbb
mov
pop
rorl
inc
cli
push
loope
test
pusha
rcll
or
movsl
dec
xchg
movsb
xchg
bound
jle
ss
addr16
or
add
les
pop
fbstp
rclb
cmp
sub
adc
sbb
mov
adc
nop
mov
inc
mov
mov
cmp
add
outsb
xor
xor
pop
inc
les
cmp
pusha
add
sub
push
adc
jecxz
jecxz
jmp
push
mov
mov
std
int3
push
lock
imul
mov
cld
lock
popf
xor
mov
jae,pt
pop
fnstenv
and
and
xor
es
sub
mov
scas
leave
mov
popa
adc
mov
sbb
mov
leave
push
mov
mov
into
cwtl
aad
xchg
jl
jae
fs
xchg
pop
test
into
pushf
outsb
iret
adc
aad
xchg
adc
pop
adc
cmc
mov
fsubrs
jl
inc
add
pop
push
add
and
jns
xor
push
adcl
ds
fldl
aam
sub
aam
pop
rcl
mov
sbb
xchg
ret
addr16
dec
std
sbb
dec
repz
jmp
daa
cltd
imul
mov
and
cmp
add
xchg
outsb
push
notl
dec
sbb
mov
lods
dec
imul
jnp
andb
insb
gs
imull
pop
ss
rcr
jl
out
sbbl
lahf
xor
mov
pushf
jne,pn
xchg
xor
in
stc
xchg
sahf
and
pop
add
mov
pop
and
lds
fs
hlt
mov
out
jnp
inc
fdiv
in
or
test
push
xchg
daa
arpl
lds
fiadds
dec
mov
fs
cmc
inc
jb
sarl
xor
test
hlt
inc
test
mov
out
mov
jb
sahf
push
jmp
cmp
cmc
dec
jne
jp
mov
adc
rcrb
cli
pop
movsl
cmpsb
scas
dec
lods
pushf
dec
pop
push
pop
in
fadd
push
test
adc
jmp
xor
mov
lods
movsb
fisubrs
xchg
add
sahf
sub
mov
dec
jl
jbe
inc
cmc
decl
rorl
cmpsb
mov
je
mov
imul
push
mov
mov
xchg
push
aam
cmc
dec
push
sbb
dec
cmp
dec
inc
insb
mov
insl
fisubl
lods
loopne
cmp
mov
cltd
push
sub
jmp
lret
je
out
or
xchg
cwtl
add
out
jae
sti
jge
jno
int
mov
jnp
xorl
mov
mov
dec
dec
call
and
in
mov
adc
stos
scas
fidivrl
lret
loop
test
ret
repnz
lcall
push
cmpsl
cltd
xor
cmp
es
rcrb
pusha
aam
lods
lcall
jmp
mov
push
test
mov
xchg
lods
ss
xchg
lret
ss
xchg
fcomp
cmp
xchg
pop
inc
mov
loope
xor
mov
cli
pop
movsl
dec
sbb
mov
or
push
inc
and
test
sarl
push
mov
jo
push
xchg
fwait
jmp
xor
test
lcall
shlb
xorb
in
sub
xor
leave
pop
addr16
adc
fsubrs
out
stc
pop
shr
cmpsl
mov
out
pop
les
cmp
mov
jg
outsl
push
popa
sti
and
cmp
add
insl
dec
dec
jle
xor
es
pushf
mov
sahf
or
out
add
test
mov
test
xchg
push
inc
data16
push
mov
push
leave
mov
stc
mov
sahf
rorl
cli
pop
pop
pop
jae
fsubr
or
mov
call
gs
push
or
add
lds
push
push
stos
icebp
fdivl
inc
lods
and
adc
dec
insb
cmp
addb
push
xor
cmpsl
stos
cmc
cmp
cmp
pop
or
cli
inc
clc
pop
inc
orl
and
shlb
or
shl
jnp
sbb
xor
int3
adc
sub
fsubrp
stos
jb
fisttpl
push
dec
or
daa
mov
int
mov
jns
arpl
adc
movsl
xchg
adc
jae
fyl2x
mov
hlt
pop
jmp
jbe
stc
xchg
das
arpl
sbb
test
bound
mov
dec
int
mov
insl
fbstp
sti
jno
ret
sbb
push
stos
adc
or
jle
out
daa
repnz
stc
mov
les
in
jne
hlt
jns
xchg
sbb
dec
mov
sbb
cwtl
xchg
idiv
cmp
and
add
fwait
push
les
scas
and
fisubrs
inc
fidivl
scas
lcall
dec
pop
or
ret
out
xchg
mov
orl
leave
popa
fistpll
pop
push
or
push
sbb
mov
outsl
inc
mov
sbb
clc
pop
mov
xchg
addr16
xor
imul
dec
into
stc
pop
cmp
lcall
gs
insl
stos
dec
add
loop
xlat
and
pop
into
inc
dec
call
pop
mov
test
adc
ds
fcmovnu
leave
and
loopne
xchg
cmp
lahf
test
repnz
ds
xor
push
cltd
ret
mov
mov
test
lock
mov
fs
inc
aas
outsl
push
aad
mov
push
sbb
pop
jg
loopne
cmp
sub
push
xchg
jno
pop
in
xor
mov
jg
push
xchg
xor
inc
add
out
and
lea
push
nop
and
inc
jnp
and
mov
push
cmp
xchg
xor
dec
fwait
mov
movsb
imul
loope
shll
and
jae
out
dec
jg
jns
movsl
push
and
dec
sbb
jnp
aaa
dec
lret
sub
test
sub
push
mov
fiadds
sbb
cmc
jge
xchg
adc
mov
sub
arpl
jne
dec
imul
fs
jecxz
mov
add
dec
inc
sbb
movsl
mov
fmul
fsubp
aas
int3
aaa
std
inc
adc
pop
push
xor
jg
sub
test
inc
ja
add
fs
xor
or
sub
pop
faddl
pop
or
movsb
and
fcompl
popf
cmp
je
xor
jbe
xor
pop
lock
aad
imul
leave
mov
xchg
mov
movsb
cmpsl
movsl
xchg
icebp
mov
add
cmp
ret
repnz
xchg
sti
mov
sbb
jbe
xor
pop
adc
mov
repz
sub
and
fs
mov
fwait
leave
inc
mov
or
jg
push
fidivl
test
imul
sbb
mov
or
arpl
mov
hlt
decb
jle
and
test
cmp
stos
mov
fadd
test
adc
cmpsl
fwait
fs
in
mov
jno
mov
in
clc
in
mov
lcall
xor
add
sarl
cmpsb
leave
jmp
aad
push
jo
in
out
je
insb
ljmp
inc
sbb
imul
cmp
fwait
adc
cmpsl
push
ljmp
popf
lcall
outsb
ljmp
outsl
jmp
stc
push
mov
or
adc
in
dec
push
mov
pop
mov
loopne
movsl
inc
or
imul
xlat
insb
dec
fsubrl
xor
inc
add
dec
in
ret
mov
mov
cmp
cmpl
and
mov
mov
push
dec
pop
jo
pop
mov
data16
idivl
xchg
int3
xor
mov
cmp
ret
sar
inc
jbe
rorl
inc
pushf
and
int3
adc
adc
mov
or
lahf
cmp
cmp
mov
xor
lea
push
cltd
and
mov
out
mov
and
pop
fimuls
cmpsl
arpl
jno
rcl
icebp
xchg
xchg
cmpsl
inc
cmp
pop
scas
add
cmp
punpckhwd
add
mov
sbb
sub
mov
loopne
adcl
scas
sub
shlb
mov
adc
jp
cltd
or
jle
clc
pop
leave
pop
repnz
shrb
lahf
imul
jl
jmp
mov
add
ja
pop
pop
adc
xor
mov
jl
or
and
inc
movsb
sbb
pop
and
inc
in
lds
push
jl
aam
int
mov
lods
inc
pop
mov
lock
pop
xchg
scas
sbb
cli
call
push
jge
into
mov
in
in
gs
add
mov
das
mov
loope
xchg
xor
mov
jg
sti
jbe
xchg
ljmp
fstps
mov
ret
movsb
ljmp
push
ret
int
cmp
sarl
dec
test
rcl
xchg
inc
push
icebp
inc
movsl
std
push
loopne
lahf
pop
dec
mov
sub
subb
xor
negl
and
xor
mov
sub
add
sbb
pop
fwait
testl
mov
mov
pop
enter
xchg
xchg
and
jecxz
test
aas
xorl
inc
mov
stc
test
fldl
jmp
mov
arpl
ret
pop
dec
xor
les
imul
mov
add
pop
dec
test
outsl
negb
das
and
or
fisttpl
sbb
dec
ret
lds
mov
inc
xor
pop
push
sti
pushf
xchg
inc
jnp
fidivs
xlat
jmp
int3
sbb
cmp
mov
cmp
out
gs
mov
int
add
inc
mov
jge
mov
jecxz
xlat
mov
adc
or
in
std
cld
jl
sub
mov
push
bound
mov
gs
or
out
je
je
test
inc
or
jmp
sub
xchg
pop
std
add
icebp
decl
iret
es
xchg
loopne
mov
xchg
pop
push
inc
add
sbb
lret
cmpsb
adc
incl
push
sbb
inc
fimull
in
add
jnp
repnz
inc
or
insb
xchg
sbb
xchg
rolb
sar
sbb
fnstcw
in
lret
or
sti
xchg
ds
fmuls
mov
add
inc
fists
mov
inc
arpl
push
inc
sti
and
ret
or
xor
fcomps
popf
mov
jl
mov
pop
mov
bnd
fsubs
cwtl
in
or
sub
cltd
fsubr
mov
test
and
xchg
mov
sub
fidivrs
insb
or
cwtl
js
ljmp
push
repz
xchg
adc
test
cld
imul
inc
mulb
sub
xchg
shrb
adc
mov
insl
lock
in
push
lea
gs
js
adc
test
adc
mov
pop
add
add
nop
mov
ss
xor
sbb
data16
jbe
push
jp
jne
ret
add
cmp
inc
inc
mov
fistpll
fwait
sarb
dec
push
sub
add
push
xorb
stos
cmp
pop
rorb
shrb
loope
sub
nop
scas
sti
cmp
test
push
push
pop
icebp
sahf
das
in
pushf
sbb
jne
bound
lock
adc
imul
rcrb
cld
push
mov
jp
jl
mov
clc
cmp
pop
push
inc
mov
test
mov
in
xchg
ret
fmull
push
mov
jne
inc
cmp
push
enter
pop
aaa
jecxz
insb
mov
es
xchg
jbe
or
out
dec
mov
movsl
std
mov
mov
frstor
jns
inc
cmp
aam
jmp
in
pushl
jmp
mov
xor
out
sbbb
fst
lods
dec
std
adc
dec
call
ljmp
mov
dec
mov
shlb
into
inc
and
and
sbb
inc
cli
pop
cmp
mov
mov
push
dec
mov
mov
push
loop
inc
xchg
jmp
fs
fadds
cmp
inc
mov
mov
repnz
mov
xor
mov
ja
mov
or
dec
mov
push
cmp
std
xchg
sbb
gs
fistpll
int3
rorl
ja
adc
inc
jl
in
inc
jne
dec
aas
das
sub
xor
and
jmp
cltd
adcl
mov
or
add
lcall
fbld
fwait
insl
xchg
pusha
mov
fdivrl
popf
and
push
jg
push
pop
inc
cltd
pop
mov
addr16
dec
mov
sub
and
sbb
sbb
push
sub
or
fnstsw
scas
push
dec
pusha
hlt
divb
movsl
dec
addr16
push
sub
aas
dec
aaa
push
xor
sub
push
fidivrs
loopne
push
adc
push
lahf
outsl
xchg
test
push
test
adc
cmc
mov
les
pop
mov
mov
lods
push
mov
testl
adc
popa
mov
sbb
xchg
xor
out
push
aaa
xor
imull
add
test
push
movsb
fxtract
mov
sbb
enter
and
test
xchg
add
sub
sbb
dec
cld
test
leave
lea
and
jle
dec
jge
cmp
push
jp
mov
gs
jne
and
jmp
xor
xchg
dec
shrb
adc
loope
enter
inc
icebp
add
lahf
push
jmp
jle
sub
pop
sub
or
mov
lods
inc
test
inc
std
stc
mov
add
bound
mov
pop
nop
leave
inc
pop
test
rcr
pop
fnstsw
loop
push
and
outsl
xor
jge
mov
cmp
inc
cmpsl
mov
test
cmp
pop
jo
in
sbb
pop
mov
xor
popa
lahf
lea
jno,pt
bound
in
call
mov
dec
test
inc
or
stos
ljmp
loope
out
nop
scas
pop
mov
adc
jo
xor
dec
test
pop
and
sbb
dec
pop
cmpsb
cmp
es
clc
lock
jae
cmp
push
push
movsb
xchg
mov
dec
test
inc
mov
pop
adc
insl
stc
mov
punpckldq
int3
xlat
arpl
adc
movsb
fistpll
xchg
mov
push
push
fsubr
xchg
pusha
add
pop
cltd
add
divb
ja
add
mov
jb
sub
pushf
andl
cltd
jmp
pop
sbb
cmp
dec
xchg
xchg
adc
cld
sbb
cmpsl
or
jnp
cmp
in
ds
dec
movl
inc
fstps
or
adc
xchg
lret
lods
mov
lock
fwait
ja
and
sub
mov
add
jp
xor
and
test
mov
pop
pop
push
jns
cld
lahf
pusha
stos
into
push
adc
pusha
lret
xchg
pop
subl
and
mov
aaa
movsb
hlt
lea
gs
adc
add
mov
dec
jge
adc
jge
movsl
and
mov
cmpsl
data16
xchg
lcall
les
mov
fwait
gs
lret
pop
sub
xlat
push
loopne
outsb
sbb
cmp
mov
inc
insl
scas
pop
ds
gs
xor
loope
aam
rcll
xchg
dec
pop
add
mov
out
insl
push
and
inc
cs
push
insb
bound
mov
add
insl
adc
and
push
add
pop
jne
out
loop
jg
hlt
cmpsl
sbb
push
sar
mov
loopne
nop
ljmp
jno
loop
jmp
xlat
gs
call
mov
dec
sub
rol
test
ss
mov
cmp
xchg
leave
mov
jnp
mov
insl
mov
jecxz
push
pop
jns
out
dec
inc
hlt
inc
rorl
cmpsb
cmc
iret
cltd
sub
sti
xor
leave
mov
pop
xchg
xor
jae
loope
and
push
popa
inc
insb
pushf
push
xchg
mov
outsl
push
push
inc
mov
cmpsl
push
push
mov
xor
nop
mov
adc
add
cmc
incb
fisubrs
mov
pop
and
mov
das
test
int
fsubrs
cwtl
std
mov
jp
sarb
xchg
mov
adcb
push
notl
out
inc
xchg
mov
jp
pusha
incl
push
xchg
xchg
add
pop
in
rcl
repnz
scas
imul
pop
jle
scas
sbb
push
pusha
movsb
ljmp
dec
push
mov
pop
pop
ss
fcoms
sbb
jge
push
stc
pop
and
ror
sub
out
imul
push
scas
cs
insl
push
orl
jmp
xchg
jl
mov
add
mov
jl
out
mov
cli
int3
popf
roll
jno
into
pop
sbb
fldenv
push
das
add
dec
loope
mov
jmp
jp
rorb
into
nop
pop
xchg
std
jl
arpl
adc
jl
aaa
push
jno
bound
out
pop
sarl
fstpt
xchg
cmp
sbb
test
fidivs
jle
lahf
lret
outsb
ljmp
xlat
jnp
cmc
xor
dec
loope
jb
xor
into
jnp
push
push
les
and
xchg
mov
je
cmp
into
cmp
jns
dec
jne
sbb
pop
clc
shll
push
sbb
inc
fisttpll
pop
jp
stc
xchg
pop
je
in
cmp
dec
inc
aaa
sahf
push
leave
mov
mov
push
lret
push
ljmp
jecxz
data16
pop
aam
push
add
stos
push
jae
mov
add
pop
or
adc
fucom
adc
jg
or
insb
ret
jbe
or
jae
js
out
pop
jns
stos
inc
lret
add
push
push
mov
dec
test
inc
pop
scas
cmp
sub
out
dec
or
sbb
inc
sub
or
repz
inc
das
stos
andl
fisttpll
sbb
jns
andl
cmp
adc
pop
xrelease
pop
dec
int3
xchg
ret
push
sbb
xchg
sbb
jno
std
notb
mov
mov
pop
or
sarb
popf
push
add
jge
mov
xchg
fcompl
mov
jge
add
pop
jno
rorb
and
and
js
fdivs
cs
lret
iret
jle
inc
add
icebp
clc
lds
xabort
or
das
jbe
lods
fidivl
adc
mov
push
sbb
ja
push
sub
fbld
cmp
mov
xchg
inc
pop
cltd
cmpsb
outsl
test
sbb
jo
test
inc
rolb
es
insl
or
sbb
in
ds
in
adc
inc
pop
out
adc
mov
push
jl
cli
mov
jmp
fistps
movsl
gs
mov
adc
fdivrl
add
add
add
xchg
and
div
mov
ret
test
mov
pop
pop
movsb
pop
jp
sub
fs
mov
ret
and
mov
cmp
adc
or
push
fistps
bound
mov
shrb
int
push
mov
xchg
push
sub
or
push
dec
ja
fmulp
cmp
mov
push
and
arpl
in
into
cli
negb
dec
mov
mov
inc
cli
cmc
and
mov
das
dec
outsl
addr16
xor
into
xor
aad
and
or
scas
fcoml
mov
sub
xor
xor
pop
rol
push
and
scas
popa
xor
sbb
xchg
stc
fs
dec
and
clc
inc
ljmp
mov
push
and
fistpll
mov
sbb
in
jl
cmpsb
sub
mov
xchg
popf
xor
push
jae
mov
pop
jp
jno
xchg
mov
push
sbb
aaa
jmp
pop
xchg
cwtl
pop
push
cwtl
in
scas
scas
push
cmp
setne
mov
aaa
inc
ret
pop
jge
addr16
inc
mov
sbb
push
push
mov
cmp
das
jp
or
rcl
pop
js
push
int3
jno
dec
pop
dec
rclb
adc
insl
or
add
sarb
in
push
std
pop
mov
sbb
and
insb
pop
adc
dec
cmp
pop
add
lahf
shlb
popa
push
sbb
or
out
scas
je
int3
mov
andb
call
loopne
jo
pop
imul
or
ret
xlat
loope
daa
add
rorl
jns
pusha
test
leave
xchg
and
imull
dec
sbb
enter
fbstp
push
in
push
orb
int3
sub
jmp
add
or
pushf
out
stos
cmp
cmp
iret
sbb
loopne
and
test
pop
pop
test
jnp
cltd
into
mov
cltd
jp
sub
cltd
enter
ret
scas
lcall
push
pop
xor
jmp
aaa
shll
inc
js
je
fisttpl
or
adc
mov
push
xchg
sti
ret
fcomps
jae
xor
outsb
dec
push
fs
test
adc
mov
out
test
ds
stc
adc
in
mov
inc
cltd
push
iret
leave
push
cmp
and
inc
lcall
mov
inc
rcl
push
cmc
clc
xor
mov
sbb
inc
std
or
mov
lods
cs
aas
outsl
sbb
ret
std
andb
test
popf
xor
adc
into
push
jmp
loopne
mov
pop
aas
pop
inc
push
iret
sahf
fists
mov
mov
push
adc
test
mov
into
push
in
push
or
aaa
sahf
mov
xorl
jle
xor
arpl
mov
inc
cmp
in
sbb
sbb
ror
insb
inc
jmp
sub
sbb
es
rorb
js
arpl
jp
fstp
sti
lods
push
jbe
test
pop
dec
sub
lea
stos
cmc
sub
jnp
notb
inc
inc
pop
cli
outsb
mov
pop
cmpsb
mov
add
aad
mov
mov
dec
sub
call
sbb
add
jmp
sub
jge
push
nop
cld
inc
es
xor
dec
jno
dec
rclb
rorl
out
cmp
sbb
fmuls
push
stos
xchg
adc
ja
pop
mov
sbb
in
mov
leave
mov
int
xchg
sub
jecxz
inc
mov
sbb
mov
dec
test
cmp
mov
cli
mov
scas
and
mov
cltd
inc
test
imul
ss
pop
xchg
mov
push
je
jb
mov
shrl
or
repnz
cmp
arpl
push
and
fsubrs
outsl
aaa
int
add
mov
loopne
cwtl
cmpsl
dec
popa
fdivs
inc
rcll
or
add
daa
push
adc
sti
movsb
sub
or
ret
imull
mov
mov
xchg
testl
dec
mov
adc
lahf
cwtl
inc
imul
daa
repz
divl
xchg
repnz
adc
adc
sbb
sub
and
cmp
movsl
int
and
dec
inc
adc
addl
or
inc
adc
dec
dec
dec
add
daa
bound
nop
dec
pushf
adc
push
add
mov
mov
or
xchg
cmp
sub
sub
push
fisubrs
arpl
or
mov
test
lds
pop
stos
sub
adc
repnz
mov
mov
mov
pop
xor
mov
in
mov
sub
or
aaa
rcll
push
push
loope
or
bound
jno
out
movl
into
mov
cmp
or
fstl
cs
and
pushf
or
sub
xor
in
xor
lods
imul
pop
daa
push
inc
dec
adc
dec
je
dec
mov
add
xchg
pushf
stos
mov
mov
cmpsl
add
xchg
adc
add
test
stc
cmp
add
sbb
js
pop
mov
mov
ljmp
jg
mov
mov
mov
xchg
aaa
jmp
fildll
stos
outsb
mov
sbbl
loope
push
mov
inc
pop
repnz
jge
sub
aad
xchg
cwtl
jl
xor
je
lock
push
mov
pop
in
inc
jno
add
loopne
inc
loopne
dec
insb
dec
jecxz
pop
mov
pop
cmp
mov
mov
mov
inc
dec
rorl
pop
loop
cltd
loop
xchg
pushf
cli
sub
xor
push
cmp
sbb
popa
popa
mov
adc
out
sarl
js
sbb
mov
xor
fisubl
aas
jno
mov
adc
jl
xchg
add
out
jo
inc
ds
and
sub
fsubs
xor
std
mov
inc
inc
inc
or
lods
loop
mov
inc
rolb
mov
sub
popa
stos
and
add
jl
repnz
jns
stc
mov
jg
out
stos
xlat
mov
jl
dec
loop
dec
mov
add
int3
add
add
mov
mull
sub
mov
fwait
popf
and
test
stos
cmp
daa
push
jp
xor
push
loope
xchg
adc
scas
movsl
jmp
adc
mov
mov
stos
les
sbb
mov
in
jmp
jnp
fdivl
xor
dec
test
push
int3
repnz
lods
push
lods
aaa
and
xor
add
mov
jle
jae
and
sub
lock
sbb
dec
imul
es
xlat
scas
mov
loop
out
mov
xor
mov
lock
mov
fsts
dec
or
nop
insl
testl
push
pushf
push
out
adc
cmp
in
xlat
xchg
shll
adc
repz
sub
push
ljmp
xor
add
inc
lcall
lods
js
sub
mov
mov
pushf
adc
adc
xor
xor
pop
repnz
arpl
fdivrs
inc
pop
dec
push
ret
cmp
stos
add
jg
pop
in
fnstcw
enter
xchg
and
sbb
js
mov
lea
cmp
orl
adc
mov
cld
jbe
sar
insb
fmuls
push
push
mov
push
jno
test
lods
pop
adc
fbld
sbb
js
int3
cltd
mov
pop
pop
or
ds
pop
jmp
mov
dec
sub
movsl
pop
push
inc
jnp
push
mov
inc
cmpsl
sbb
lds
movsb
adc
dec
leave
out
push
lret
dec
fdivrl
shlb
jno
imul
outsl
xchg
jmp
out
in
test
adc
mov
icebp
cmp
das
lret
call
and
mov
inc
fwait
dec
push
je
inc
jnp
jbe
addr16
outsl
add
jge
pop
push
sub
rcll
push
sub
push
daa
adc
mov
inc
subb
ret
clc
mov
add
out
mov
jecxz
and
cltd
filds
test
jnp
shrb
sar
inc
mov
pop
mov
pop
mov
es
fdivl
adc
sbb
lods
sbb
mov
aam
cwtl
cmp
mov
flds
xchg
add
rcrl
mov
dec
mov
jp
fadd
syscall
inc
cmpsl
stc
bound
aaa
sbb
cmp
jmp
pushf
fmuls
xor
sub
sub
mov
mov
sbb
adcb
popf
sub
cli
pop
pop
bound
xor
mov
sbb
fdivr
mov
pop
push
mov
dec
or
mov
mov
lret
mov
xchg
repnz
loope
js
mov
cwtl
shlb
adcb
and
jge
imul
dec
jo
mov
clc
lret
das
push
divl
cltd
mov
pop
jne
out
int
cs
sbb
into
out
insl
sub
cmp
push
mov
sbb
and
xchg
mov
imul
dec
outsl
ljmp
daa
mov
mov
ret
xor
xor
mov
arpl
adc
shl
jne
cmp
insb
fstps
jbe
pop
add
sub
popa
shll
dec
iret
push
pop
mov
mov
add
and
push
rol
aad
adc
jb
stc
adc
jl
pop
push
mov
out
adc
aas
inc
fisubs
add
vmread
lods
inc
pop
out
pop
data16
pop
fsubrs
jg
lock
loop
add
lods
testb
jns
aaa
mov
cltd
mov
divb
cli
jecxz
insb
cmp
in
push
sbb
push
out
mov
jno
jg
lahf
mov
sub
mov
mov
lret
lods
push
je
inc
mov
cwtl
dec
scas
loopne
cmp
dec
push
sub
push
dec
adc
aad
imul
mov
js
sbb
es
pop
push
gs
and
pop
cmp
mov
mov
xor
xchg
scas
add
inc
sbb
fucomi
leave
test
cli
movsb
adc
pushf
cmp
jp
decb
lahf
fcmovbe
in
push
mov
dec
pop
js
stos
outsl
lea
cmp
insl
lods
fisttpl
test
inc
mov
ficoms
push
jp
dec
imul
pop
sub
mov
push
pushf
shr
sub
mov
push
mov
js
sbbb
fsub
or
jbe
inc
pop
sbb
cmp
movsb
pop
jns
pop
and
xchg
dec
aas
paddw
pop
fmulp
xlat
sub
add
or
popa
inc
jle
mov
mov
cmpsb
cmp
push
dec
nop
in
dec
sbb
and
andl
and
subl
cmp
mov
js
mov
ljmp
in
inc
pop
aad
jae
inc
mov
ja
pop
arpl
sbbl
std
jne
in
push
repz
and
cmp
or
leave
jmp
es
mov
leave
and
jae
or
push
jns
adc
dec
push
mov
leave
imul
xlat
fsave
xor
fwait
push
inc
xor
sub
aad
push
inc
mov
xchg
adc
test
cmpsb
rcrl
repnz
inc
xlat
xchg
loope
lock
mov
ljmp
mov
test
aaa
rorl
rorb
mov
enter
mov
pop
decl
stc
rep
sub
nop
cmp
int3
sub
push
bound
test
pop
mov
sbb
mov
pop
scas
mov
jmp
push
xor
xchg
aaa
iret
or
inc
ret
inc
fadds
adc
cltd
sub
or
shr
sarb
or
testb
add
sub
pushf
push
ret
push
and
in
stc
ja
int3
and
lcall
cmp
xor
pop
stc
xor
inc
int
loope
movsl
jmp
xchg
mov
adc
sub
and
add
jno
xchg
popf
call
xchg
lea
pop
test
dec
ret
sbb
pop
jecxz
aad
mov
pop
xor
sub
icebp
lock
cwtl
xchg
popf
mov
jl
push
shll
and
testl
ljmp
pop
lret
and
test
and
int
dec
mov
push
jle
sahf
xor
inc
int
and
pop
popa
sti
cmpsl
dec
lods
sahf
scas
push
cwtl
decl
sbb
push
push
mov
data16
icebp
sbb
repnz
arpl
lret
imul
or
dec
outsl
frstor
imul
push
fistl
jne
sub
cmpsl
movsb
in
stos
arpl
mov
hlt
mov
mov
pop
in
lcall
sbb
mov
inc
mov
dec
les
push
sub
loop
out
fcomip
and
fiadds
mov
clc
movsl
lea
add
inc
and
cltd
push
ret
aam
popa
stos
cmp
pop
mov
or
cltd
out
xchg
cmp
incb
push
popf
aas
scas
out
push
add
mov
push
adc
je
insl
or
orb
xor
repnz
sti
sub
ds
lret
mov
sbb
mov
mov
adc
add
mov
cmc
movsb
jae
pusha
loope
clc
sbb
movsl
popf
popf
xchg
sbb
dec
int
cmpsb
push
and
push
and
pop
jne
mov
mov
add
inc
loope
inc
push
mov
push
dec
sub
pop
push
std
mov
cmp
push
nop
filds
inc
out
mov
mov
pop
xchg
mov
rcl
sti
std
or
adc
pop
imul
pop
mov
cltd
mov
inc
or
or
pusha
xor
out
sub
fisubrs
in
pop
mov
lret
dec
leave
sub
jecxz
push
cmp
cmpsl
scas
std
gs
pop
adc
mov
roll
mov
xchg
pusha
stc
dec
push
sub
out
and
int3
rcrl
call
imul
clc
push
fnsave
test
sbb
sub
push
fsubs
adc
cmp
pusha
xor
scas
std
imul
mov
dec
sub
pop
das
mov
add
or
jnp
mov
push
shl
xchg
jae
jp
lea
or
dec
testb
out
adc
pushf
decl
or
mov
loop
mov
push
shlb
fiadds
cmc
ss
addr16
bound
sub
daa
pop
pop
clc
or
in
stos
addr16
xchg
lods
in
xchg
push
adc
xor
fisubl
or
jnp
sub
lret
cmc
mov
or
add
mov
lret
pop
dec
lret
std
js
sahf
inc
divl
sbbb
sbb
mov
leave
imul
push
mov
ret
data16
pop
xor
dec
mov
dec
scas
outsl
clc
jbe
jecxz
je
out
push
add
xorb
leave
and
lahf
xchg
inc
popf
cmp
repz
dec
in
dec
ret
xchg
cmpb
dec
leave
aas
add
mov
hlt
imul
xchg
cmp
cwtl
divl
sbb
mov
adc
dec
push
inc
add
xorl
testb
outsl
push
ds
cmpxchg
mov
add
outsl
push
mov
mov
loopne
adc
stc
clc
push
andl
aam
xor
sbb
andb
add
scas
popf
add
aam
push
inc
pushl
sbb
sbb
data16
clc
push
pop
push
mov
leave
out
ret
dec
sub
mov
into
subb
pop
inc
inc
dec
cs
or
sti
call
pusha
repz
fsubp
sub
or
cmp
stos
or
rolb
pop
xor
push
arpl
fcoml
and
mov
cmc
jo
les
add
and
out
dec
int3
out
rcl
sbb
mov
mov
lods
xchg
adc
popf
repz
les
pop
push
iret
pop
test
iret
or
pop
call
loopne
stc
mov
lret
and
jmp
and
push
int3
and
in
in
fisubl
inc
js
mov
pop
sub
lcall
xchg
jle
add
mov
rclb
gs
test
or
dec
jge
xor
loope
je,pn
inc
sbb
add
in
mov
xor
imul
lds
xor
outsl
add
pop
pop
jno
mov
add
in
jno
xchg
lds
rcrb
in
stc
pop
movsb
dec
daa
lods
out
jecxz
testl
setl
jnp
cmpsb
jnp
adc
rclb
clc
mov
pop
xchg
adc
imul
dec
xor
hlt
pop
call
pop
shlb
out
jmp
cwtl
outsb
mov
movsl
pop
lock
xchg
pop
arpl
pop
mov
dec
add
xor
call
jecxz
into
fsubl
sub
push
je
jnp
pop
xchg
fmull
mov
ljmp
pusha
mov
adc
pop
adc
scas
sub
loop
jg
push
jg
les
xor
push
aaa
sub
push
jno
xchg
nop
mov
mov
and
movsb
ret
lahf
lds
loop
mov
insb
shrl
cmp
sbb
dec
jge
mov
fwait
ljmp
lods
sub
cmp
sahf
int3
jmp
or
mov
cmp
inc
or
add
push
in
and
sub
dec
jne,pt
push
clc
jns
jb
and
arpl
push
and
push
or
loope
push
out
roll
movsl
negl
cmp
cmp
sub
sbb
outsl
enter
mov
ds
cmp
xchg
enter
out
mov
daa
mov
and
cmp
loope
push
or
push
ret
sarl
rolb
pop
movsb
push
cld
pusha
pop
jmp
mov
pushf
dec
and
adc
mov
mov
mov
lock
cld
ficompl
inc
xor
xor
outsb
hlt
pop
ret
pop
imul
outsl
xchg
xor
sarb
je
lahf
andl
jl
lcall
jle
leave
mov
or
int3
push
daa
insl
nop
pop
pop
push
pop
call
and
in
sti
jmp
sub
dec
clc
mov
pop
xchg
mov
cmc
lret
test
out
jb
add
sub
data16
aad
sub
sub
jns
shlb
push
mov
outsl
cmp
dec
sbb
sbb
icebp
cmc
addr16
out
mov
mov
dec
inc
fs
lods
cmc
insl
xlat
cmp
in
inc
inc
stc
jmp
push
add
lret
sub
in
imul
sbb
push
cmp
lcall
dec
jmp
jbe
insl
push
dec
test
dec
popf
mov
jb
scas
sbb
cmc
cli
inc
add
in
sub
lret
jb
xchg
gs
or
xchg
mov
insl
mov
mov
or
pop
popf
or
gs
nop
daa
testb
clc
pop
jae
sub
scas
icebp
cmc
aaa
mov
cld
bswap
sbbl
push
mov
inc
jno
xchg
frstor
xor
fs
iret
test
loopne
mov
sbb
outsb
jbe
jg
aas
fcompl
sahf
fnstsw
push
call
mov
dec
aam
cmp
mov
cmp
cmpb
and
rorb
sbb
testb
mov
dec
push
sub
bound
xor
lds
ficomps
xchg
cmpsl
sbb
ret
pop
into
aaa
imul
rcl
fcompl
incb
mov
mov
sub
mov
cld
vrcpss
xchg
jge
inc
repnz
or
scas
iret
and
push
sub
mov
push
xchg
inc
sbb
pushf
jl
dec
call
fs
mov
jle
rcll
shlb
push
ja
or
mov
add
out
test
adc
stc
cmpl
add
ret
stos
outsb
xorb
mov
rcrl
cli
dec
jmp
push
mov
stos
popf
lret
pusha
jg
or
icebp
or
fdivrs
jae
or
hlt
pop
pop
pop
lret
push
or
fimuls
fldt
adc
lds
cmp
xchg
dec
mov
notl
jg
xor
cmpsb
scas
mov
fsubl
lea
out
and
xor
sub
push
mov
test
repz
sbb
lock
js
out
adc
addr16
sbbb
pop
adc
addr16
std
adcb
jmp
and
cmpsb
mov
roll
clc
ret
lods
sahf
adc
jns
mov
cmpsl
aas
sahf
cwtl
call
dec
mov
and
call
mov
cmp
mov
fistpl
pop
jmp
dec
sahf
sbb
mov
xor
push
and
sub
lret
ja
aad
cmp
js
mov
fs
orl
rorl
faddl
lods
add
mov
stc
mov
pop
add
int
mov
add
daa
nop
push
xchg
cltd
addl
and
pushf
and
test
pop
rorb
lods
movsl
jmp
and
sahf
fisubl
inc
jns
out
ss
pop
mov
imul
cmp
ret
fidivrs
pop
shrl
xchg
out
fwait
ss
mov
repz
mov
or
ds
fmul
ja
push
dec
out
lret
ret
inc
mov
push
test
insb
push
mov
jns
xor
jno
xor
inc
mov
gs
inc
loop
push
dec
jecxz
insb
ret
dec
jbe
xor
pop
inc
ret
iret
cltd
fcmovu
fisttpl
scas
movsl
jl
adc
cmp
mov
push
jl
rol
add
pushf
cmc
sbb
dec
mov
shlb
into
cmp
jb
jae
sub
int
ljmp
and
sarb
sub
adc
stc
mov
pop
adc
lods
ljmp
adcb
dec
subl
mov
pop
xlat
and
mov
cmp
mov
lock
out
loopne
fiadds
inc
pop
test
jne
pop
pop
sahf
pop
adc
ja
in
loop
ficoms
inc
mov
xor
ljmpw
mov
sbb
cmp
sahf
xchg
cwtl
cmp
jmp
inc
adc
xchg
test
push
loopne
mov
adc
cmp
fdivrs
and
insb
xor
sub
xor
in
push
iret
push
mov
dec
lods
sarl
push
sub
add
xchg
enter
sbb
lods
xchg
jl
out
inc
pop
stc
push
mov
out
arpl
out
push
cmp
cmp
out
addr16
jae
push
jg
js
pop
mov
inc
jbe
stos
in
push
subl
xchg
cmp
push
jno
adc
dec
add
loop
repnz
mov
push
in
frndint
cmpsb
lea
es
cmp
add
fs
nop
lcall
int3
pop
push
shr
roll
add
and
add
ror
push
push
adc
inc
xchg
loopne
dec
addr16
sbb
ret
repz
stos
test
add
stos
push
jmp
xchg
mov
mov
sahf
mov
cmp
jge
sbb
push
inc
cmp
outsb
push
mov
outsb
test
loop
shrl
inc
push
lret
jle
and
fwait
movsl
mov
mov
sub
or
cmp
repz
dec
xchg
lods
ss
rolb
cmc
sbb
sbb
xchg
test
mov
ja
pusha
xchg
mov
out
mov
std
mov
loopne
sarl
cld
mov
mov
pop
mov
mov
xor
push
stos
shl
divl
ja
mov
and
bound
mov
or
pop
sarl
push
xor
pushf
or
pcmpgtw
inc
enter
jge
and
jg
movsl
fisubrs
or
repnz
negl
dec
xchg
pop
dec
mov
sub
inc
js
cmpl
leave
cmpsb
mov
dec
dec
loopne
test
gs
push
inc
repnz
mov
cmp
mov
push
sbb
add
xchg
insb
dec
mov
dec
int3
iret
cmp
rcrb
loop
call
bound
rcrl
inc
fistl
xor
test
int3
dec
inc
adc
sub
mov
pop
jmp
xchg
xchg
inc
fwait
clc
add
jae
test
xchg
fcmovu
popa
sbb
je
into
xchg
rcrb
in
pop
mov
xor
xchg
ds
rcrl
ret
and
push
and
pop
mov
mov
xor
aad
ret
insb
xchg
push
push
pop
mov
jb
cmp
in
dec
lret
test
pop
sub
xorb
jbe
dec
test
aad
imul
add
jb
test
fcomp
enter
xchg
mov
hlt
cwtl
nop
adcl
xlat
testl
mov
jmp
jb
orl
pop
shll
or
in
in
orb
or
jo
adc
test
lods
cltd
jl
jle
adc
mov
jnp
movsb
pop
dec
cmpxchg
daa
stos
shrl
jmp
cmp
sub
xchg
imul
imul
jge
icebp
cmp
mov
cmp
dec
ficompl
mov
jb
popf
jle
rol
out
xchg
or
sahf
bound
jno
xor
hlt
or
std
pop
xor
xor
cld
xchg
iret
sbb
or
leave
shll
pop
mov
add
stos
call
test
lods
fwait
in
or
pop
int
cmpl
xchg
hlt
and
xchg
lahf
xchg
xchg
fisubrl
xor
enter
sub
mov
pop
xor
scas
lods
fisubl
add
jae
repz
std
sbb
cmp
pop
clc
inc
pop
fwait
icebp
shll
sub
mov
fimull
mulb
cmpsl
hlt
sbb
sbb
adc
mov
lsl
das
es
push
lea
lret
dec
dec
popl
lods
sub
imul
clc
fisubl
sub
ret
movsl
faddl
mov
repnz
inc
mov
aad
cmpsb
inc
adc
notb
or
and
push
fwait
lock
add
imul
lcall
nop
enter
insl
jg
mov
add
cs
sbb
or
jecxz
add
jae
push
pop
jg
out
ret
push
outsb
lret
jae
pusha
xor
lock
dec
testb
and
ret
jno
adc
pop
push
mov
inc
je
movsb
xchg
jle
outsl
data16
mov
push
xchg
pusha
jg
jbe
pushf
jno
ss
xchg
pushf
jo
push
sub
jb
mov
add
fwait
sub
adc
int
or
mov
sbb
fsubl
shlb
nop
loope
adc
fdivr
mov
inc
adc
idivl
test
pop
jl
sub
mov
xorb
hlt
lock
aaa
rorl
cmp
stc
test
inc
adc
inc
push
clc
adc
arpl
nop
test
rorl
xor
setle
and
fisubrs
out
ret
lods
xchg
inc
popa
or
xchg
jge
sbb
popa
bound
fst
fxch
pushw
sub
cld
add
add
mov
ret
cmp
xchg
in
std
mov
scas
cmp
fs
pop
push
and
xor
shll
push
test
cwtl
cmp
out
repz
sbb
es
arpl
cmp
mov
mov
repnz
sub
mov
sbb
aaa
icebp
subl
fadds
jne
imul
into
imull
jge
mov
pop
cmpsl
test
fs
lret
adc
cmp
add
pop
testb
sbb
test
cmp
cwtl
push
cmp
sahf
out
mov
outsb
sti
pop
mov
push
fwait
pop
and
mov
jp
fs
mov
test
popf
rorl
mov
fcmovnbe
jg
int
out
sbb
ljmp
lods
cmovb
rolb
popl
inc
and
mov
pusha
je
xlat
jno
out
out
arpl
lea
pusha
imul
jns
sub
mov
push
insb
data16
push
popa
mov
pop
lahf
xchg
sbb
call
mov
inc
add
loopne
jnp
sbb
ror
mov
or
mov
sti
aam
fldl
add
jb
cmp
aam
jbe
std
lock
sbb
sub
or
loopne
jo
enter
loope
cmpsl
xchg
push
iret
xor
jmp
mov
jecxz
pop
mov
add
fdivrs
push
int
repz
das
ret
mov
mov
test
cltd
xchg
pop
sbb
mov
xchg
mov
lods
mov
rclb
push
sbb
xor
out
ret
js
insl
cmpsl
fbld
pop
push
ss
inc
and
add
push
sub
mov
mov
xchg
lea
xlat
pop
lret
add
adc
pop
clc
into
outsl
xor
mov
ss
pop
mov
push
bound
in
dec
push
out
jp
call
or
pop
mov
cs
jbe
shrl
filds
ret
mov
xor
lock
inc
out
ja
pushw
fsubs
xor
insb
lods
pop
sub
pop
cmpsb
mov
cmpsb
mov
xchg
mov
mov
adc
lods
mov
mov
addr16
ss
adc
pop
inc
imul
mov
sub
push
pop
sti
in
mov
out
inc
scas
test
pop
insl
push
insb
cmp
add
and
dec
pop
pop
pop
rcl
lret
cltd
repz
cltd
adc
mov
pop
lahf
enter
xchg
push
pusha
pop
mov
scas
roll
rclb
push
cmp
adc
in
out
cmp
mov
jp
arpl
sar
mov
daa
mov
cmp
and
cmp
je
imul
mulb
push
pop
std
lock
iret
or
orl
arpl
add
push
shl
jbe
xlat
mov
add
mov
jnp
inc
mov
sub
aaa
ds
js
pop
push
ds
dec
sub
scas
mov
pusha
cmc
xor
data16
fs
das
jns
pop
popa
add
mov
loopne
fsubl
pop
sti
add
add
mov
fmuls
jl
inc
mov
mov
setge
or
dec
mov
dec
popa
xor
cmp
mov
add
dec
es
jl
lock
lods
fstl
pop
inc
xchg
xchg
in
xor
or
out
int3
pop
jge
leave
adc
insb
cmpsl
insl
sti
aaa
fs
imul
ret
or
sbb
lods
xlat
mov
ljmp
bound
or
stos
add
xor
mov
xchg
xchg
aaa
jo
out
mov
subl
sub
jae
addl
cmp
or
outsb
push
sbb
mov
mov
lcall
mov
jns
xchg
mov
je
es
insl
mov
movsb
pusha
jne
lret
hlt
jmp
lds
mov
hlt
push
mov
xchg
sbb
xor
adc
rolb
lock
cmp
xchg
mov
pop
xchg
and
aad
lods
xor
and
sub
xor
inc
cmpsb
lds
dec
js
xchg
pop
add
pop
mov
sub
ljmp
sub
out
insl
dec
je
jge
nop
arpl
mov
aas
dec
int3
test
pop
mov
push
sbb
out
mov
jno
js
dec
rolb
jnp
mov
movsl
and
aad
lods
dec
xchg
int
outsl
inc
and
and
lret
sbb
inc
cmp
icebp
js
andl
xchg
lret
mov
mov
mov
cld
sub
xchg
mov
clc
ret
sbb
sbb
xlat
lods
xchg
mov
jnp
xchg
push
and
adc
cmpsb
cmpsb
loope
and
idivl
inc
dec
sub
dec
add
clc
stc
mov
sbb
cs
nop
xor
mov
fld
fmull
mov
inc
xchg
mov
mov
mov
pop
jnp
std
inc
imul
mov
iret
pushf
loopne
sarb
inc
and
or
xchg
ds
aas
imul
or
js
adc
add
xor
xchg
test
mov
or
or
sub
std
rorb
push
or
cmpsb
dec
pop
sub
aaa
mov
jae
ljmp
dec
cmpsl
pop
mov
cmp
inc
and
sti
mov
pushf
mov
mov
lret
push
outsb
ret
dec
mov
rol
xor
mov
ja
mov
pop
call
lcall
push
repnz
popf
jecxz
mov
repz
adc
jbe
jecxz
jne
push
ficomps
mov
jne
xor
js
sahf
arpl
fsts
stos
xlat
addr16
ds
sarb
mov
cmp
stos
xchg
mov
and
mov
or
call
in
mov
mov
cmpsl
pusha
fimuls
sbb
sti
inc
fcmovu
jecxz
mov
pop
add
enter
fsubrs
pop
jl
fwait
pushf
mov
cmp
sbb
lds
sti
xor
sub
aas
loope
push
cs
insb
movl
mov
mov
dec
or
mov
and
or
aas
mov
lods
fidivrs
pushl
jmp
pop
into
xor
ljmp
out
jns
dec
jp
cwtl
push
rol
outsb
mov
push
je
xor
sarw
daa
jg
jmp
mov
ret
inc
jle
inc
stos
cmp
aad
add
sub
adc
in
sahf
inc
and
jae
daa
lcall
decb
lcall
rcl
inc
xorl
incl
ljmp
cli
shl
data16
sahf
fisubl
xchg
mov
test
loope
xor
mov
add
jo
dec
loopne
push
push
cmp
mov
mov
outsl
cltd
sub
cs
sbb
mov
pop
and
mov
movsl
leave
dec
out
add
loopne
fcmovnu
cmp
pop
xchg
jo
cmpsb
sbb
lods
jl
hlt
js
sub
sub
and
push
test
mov
jge
aad
mov
or
or
and
xchg
mov
nop
sbb
movsb
dec
or
mov
cld
dec
or
pop
inc
dec
stos
jae
mov
and
mov
shll
lods
dec
inc
adc
jnp
scas
imul
xor
das
clc
daa
mov
sbb
adc
jne
mov
jae
and
mov
addl
cmp
mov
cltd
sub
out
loopne
sbbb
push
adc
jg
das
fstl
cltd
and
and
test
and
test
xlat
out
cmp
movsb
pusha
adc
lods
mov
or
pop
hlt
add
pushf
inc
sub
fs
xor
push
pushf
in
mov
pop
scas
sbb
push
ror
xlat
xor
cmpsl
mov
push
int
dec
lret
shrb
add
scas
mov
push
xor
mov
adc
lea
gs
loope
shl
les
lcall
and
and
neg
and
pop
or
jbe
scas
lret
scas
pusha
mov
scas
psrld
mov
xchg
out
ds
in
stos
dec
imul
adc
cld
mov
or
lret
add
mov
inc
pop
es
sbb
xor
cwtl
xchg
js
xchg
dec
adc
xor
xor
and
push
arpl
jo
sbb
shlb
popf
dec
sahf
jmp
outsb
in
xor
call
xchg
rorb
pop
pop
out
andl
mov
jecxz
stos
std
add
adc
xchg
pop
xor
sbb
fcomps
lods
adc
cmp
cmp
xor
or
xor
outsl
iret
mov
into
subl
cmp
sbb
jmp
dec
enter
or
xor
mov
add
adc
mov
pop
dec
cmpsb
addr16
xor
sbb
or
mov
pop
add
imul
pop
pushf
in
testl
xchg
cmp
lods
outsb
ss
dec
push
or
or
dec
xor
pop
jecxz
lock
pop
cmp
fwait
adc
ret
inc
sbb
icebp
pop
bound
cmc
xchg
sub
out
adc
stos
jmp
xor
sbb
ljmp
mov
xor
adc
lahf
jle
mov
test
jg
add
and
lret
cs
xchg
lock
test
push
test
push
imul
stos
aaa
push
pop
sti
and
cmpb
push
dec
xor
leave
data16
xor
push
aam
push
mov
adc
repz
pop
scas
mov
mov
and
mov
dec
jo
jle
outsl
stos
rol
and
jge
pop
hlt
les
movsl
enter
fcoms
pop
dec
sub
test
mov
cmc
push
pop
xchg
mov
into
adc
mov
push
sub
add
xor
jno
mov
push
jl
push
pop
inc
jl
cmpsl
sub
jns
es
xchg
adc
sub
jmp
and
loope
jp
mov
lahf
loop
lods
rcll
sbb
dec
xchg
daa
fists
xchg
out
setg
insl
out
loopne
movsb
xor
mov
fsub
sbb
iret
lcall
pop
test
dec
mov
scas
pop
rclb
pop
popf
and
outsb
mov
lret
sub
imull
push
sti
sub
mov
jmp
ja
mov
mov
mov
add
sub
movsl
in
ds
hlt
outsb
xchg
sub
out
fwait
inc
das
push
hlt
mov
data16
inc
cltd
or
test
insb
adc
push
lods
jge
inc
add
dec
push
idivb
data16
fcompl
cld
das
inc
dec
or
pusha
aad
mov
bound
jecxz
or
idivb
push
cmp
push
fcoms
pusha
pusha
add
mov
sbb
pop
stos
ror
ret
xchg
inc
xchg
inc
lcall
data16
sub
xor
sbb
setp
mov
xor
adc
sub
cmpl
imul
bound
lcall
repz
outsb
adc
add
dec
icebp
cli
hlt
lods
cmp
xorl
jg
out
pop
or
mov
loopne
negl
add
pop
test
adc
loop
mov
fmuls
xchg
cs
cmpsl
sub
adc
cmpsl
sub
xor
dec
mov
mov
js
lret
adc
jnp
mov
push
popa
pop
test
sbb
rclb
sti
pop
cmp
subl
push
or
scas
and
arpl
std
cvttps2pi
lock
rol
dec
arpl
or
add
xor
decb
inc
lret
insl
jb
popl
or
ds
mov
cltd
mov
arpl
bswap
or
mov
xor
xchg
cmovae
mov
cmp
mov
pop
or
sub
add
jle
js
xchg
push
insl
push
push
es
in
dec
in
cmc
push
push
sti
mov
stos
shr
scas
stos
stos
dec
lods
pop
out
pop
std
inc
gs
pop
dec
sub
jb
mov
jne
mov
icebp
pop
mov
stos
leave
adc
mov
add
and
shll
imul
mov
push
fnstcw
pop
mov
outsb
jne
push
inc
daa
pushf
test
add
out
sbb
push
clc
xlat
jge
add
aad
lea
push
rolb
cltd
dec
cmp
sbb
imul
push
and
test
sbb
jl
mov
scas
inc
and
mov
shrb
xor
sub
mov
aas
call
flds
into
mov
frstor
aam
lds
test
adc
test
cmpsl
mov
mov
mov
adc
loopne
xchg
adc
push
push
ljmp
and
pushf
cltd
cltd
sub
out
jno
nop
jle
mov
enter
lcall
push
mov
cltd
xchg
insb
cld
test
sub
push
inc
and
jmp
pop
std
push
pop
sbb
sar
pop
sar
inc
xchg
sbb
sbb
pop
inc
fwait
adc
jge
mov
mov
or
mov
mov
or
insl
ja
jns
rolb
push
test
mov
mov
cltd
popf
adc
mov
mov
ljmp
repnz
cmp
mov
fadds
testb
xchg
leave
xlat
mov
packssdw
mov
mov
mov
cli
adc
adc
mov
ror
xor
jno
jns
pop
add
stos
daa
jecxz
out
jl
pop
xchg
inc
jle
push
nop
fsubs
and
iret
jns
xchg
xchg
icebp
adc
out
inc
lahf
out
mov
mov
mov
push
pusha
mov
test
cli
jmp
enter
mov
das
push
insb
mov
xchg
movaps
repnz
int3
fdivrs
mov
mov
out
icebp
cli
fisubl
daa
loopne
xchg
daa
mov
add
cs
fildll
sbb
mov
fst
ljmp
out
pop
mov
icebp
cmp
mov
int3
sbb
sub
jge
jg
sub
je
outsl
add
loop
daa
in
mov
leave
mov
cmp
xchg
inc
push
fdivp
clc
cmp
std
iret
push
ret
aad
fwait
std
jle
mov
sbb
push
subl
mov
popa
repnz
push
shll
test
mov
jp
mov
out
cmp
push
add
fimull
aas
arpl
adc
das
dec
xchg
out
inc
cmp
lret
mov
xchg
cmp
pusha
push
push
xchg
mov
popa
repz
sbbb
jp
out
pop
decb
imul
pop
inc
xchg
popa
jno
push
jmp
div
icebp
movsl
loope
sti
mov
adc
or
leave
mov
jg
push
shrl
ret
out
cli
add
inc
loope
pushf
pop
push
sti
push
adc
and
cmp
pushf
fwait
cltd
test
mov
sub
inc
out
inc
mov
popa
cmp
inc
stos
pusha
repnz
nop
push
mov
xchg
inc
cmp
dec
jnp
les
mov
hlt
out
imul
sbb
adc
iret
bound
xchg
jb
test
mov
lods
cmp
inc
jns
test
cmc
icebp
andl
and
cmc
inc
pop
sti
cmp
mov
cmpsb
mov
xchg
push
cmc
sbb
xchg
out
out
lea
jp
cld
in
mov
pop
pand
ljmp
gs
aas
cwtl
in
sbb
sbb
xchg
aad
and
mov
xor
push
jecxz
jmp
rcrb
rcrb
std
cmpl
jle
xor
sub
jne
push
pop
xor
push
xchg
out
jns
or
test
mov
push
inc
xor
mov
adc
sbb
mov
lods
or
cwtl
sbb
push
lcall
sub
sub
or
mov
jle
shlb
sub
sbb
pop
cld
mov
nop
outsb
out
pop
jle
cwtl
mov
mov
xor
shll
lret
push
mov
xchg
pop
add
in
pop
icebp
mov
test
sbb
ss
xchg
cmp
dec
mov
pop
sti
cwtl
insl
inc
sbb
jp
adc
push
push
inc
add
jp
addl
mov
mov
mov
add
jecxz
jg
in
scas
xor
pop
inc
cmp
into
fbld
sbb
mov
inc
push
mov
push
insb
neg
pop
sbb
bound
fidivrs
sahf
and
je
mov
imul
movsl
out
aad
insb
es
insb
cli
xchg
andl
repz
fstps
mov
fwait
lea
mov
xchg
mov
push
int3
sbb
cmpsb
xchg
xchg
je
add
xor
and
mov
sub
or
aas
data16
add
and
aas
or
xor
jmp
inc
lods
loopne
ja
scas
in
inc
fiadds
cmp
mov
repnz
jno
pop
xor
addr16
dec
or
mov
shlb
ficompl
ljmp
mov
icebp
mov
mov
xchg
pop
mov
jae
bound
sahf
std
add
inc
lahf
lods
fucomip
dec
xchg
imul
add
sub
repz
daa
or
add
aad
push
int
int3
mov
call
rcrl
lock
push
pop
sbb
mov
adc
sti
mov
imul
push
insb
dec
add
and
jbe
aad
push
adc
test
repz
cmpsb
and
sbb
data16
push
xlat
push
movsl
xchg
lods
stos
mov
mov
das
and
cmc
popa
addr16
or
mov
xor
addr16
xchg
push
adc
mov
pop
gs
push
pop
loope
pop
out
adc
push
stos
aas
jb
ja
mov
cmpsb
sub
inc
cmovl
inc
cld
mov
sub
stos
cmp
fisubs
or
jmp
push
cwtl
push
sub
sub
sahf
popa
out
xchg
and
out
dec
xchg
test
inc
jecxz
pusha
inc
stc
mov
inc
xchg
mov
xor
sbb
or
push
push
xor
mov
xor
dec
ljmp
jae
add
jp
sti
adc
lods
lds
out
clc
push
adc
jg
test
loope
shll
cwtl
mov
das
nop
pusha
mov
jno
nop
rorb
xchg
mov
int3
pop
test
pop
push
mov
mov
push
lods
popf
sbb
pop
mov
ffree
cmp
jne
cmp
lock
test
push
insl
in
aaa
mov
mov
push
cmpsl
mulb
fimull
mov
test
ss
outsb
subl
mov
rorb
jae
inc
pop
lods
mov
fwait
jnp
daa
test
adc
inc
fld
pop
adc
cwtl
inc
addb
or
xor
lahf
stos
out
out
xchg
jecxz
hlt
roll
jecxz
daa
inc
jecxz
xor
xchg
pop
pop
mov
fcoms
repnz
push
cld
inc
adc
sbb
sub
pop
mov
mov
mov
cwtl
add
xchg
xor
int3
add
inc
and
jmp
mov
aam
inc
sub
hlt
add
aam
les
fcomps
rclb
in
pop
push
insb
test
clc
add
bound
pop
in
xchg
jmp
xlat
in
or
mov
mov
test
das
mov
outsb
in
xorl
jmp
mov
push
aad
jp
or
adc
pusha
fbld
f2xm1
xor
mov
fwait
mov
or
xor
or
fildl
loop
outsb
cmp
rcrb
sbb
lret
ja
mov
dec
cmpsb
arpl
arpl
xchg
pop
push
daa
dec
mov
mov
ss
dec
dec
dec
loop
dec
adc
pop
mov
push
loope
xor
int
sbb
lret
and
lcall
mov
xchg
adcb
test
imul
dec
outsb
push
jo
ds
push
push
imul
jne
xor
mov
int3
aad
add
xchg
jg
mov
repz
cld
out
sub
pop
push
leave
insb
jbe
mov
push
inc
push
cmp
stc
sub
data16
jo
xchg
push
sub
insb
cmpsb
xchg
xor
xor
sbb
dec
xlat
push
ss
in
mov
stos
xchg
inc
fs
imul
js
cli
mov
insb
jecxz
test
push
mov
fstl
imul
pop
xor
je
sbb
pop
fs
mov
repz
ret
sbb
push
gs
pop
adc
or
sbb
or
hlt
data16
rclb
je
popa
jge
call
out
push
enter
ljmp
es
cmpsb
jmp
es
lcall
mov
pslld
mov
lret
push
mov
bswap
out
cmpb
xchg
jle
cld
enter
dec
adc
mov
mov
nop
mov
inc
jne
in
xchg
mov
out
or
mov
lock
rcrl
fdivp
lret
fucomp
pop
enter
fstl
lock
inc
lret
and
pushl
arpl
icebp
push
xor
inc
push
and
jmp
add
mov
push
call
xor
orl
test
in
syscall
int3
hlt
add
push
push
pop
sub
rcll
cmp
sbb
clc
mov
mov
sub
pop
roll
push
cld
js
in
push
rcrb
dec
push
xchg
cmp
push
adc
ja
cmp
mov
jecxz
out
ljmp
dec
inc
jbe
mov
add
data16
dec
hlt
mov
imul
adc
xchg
dec
gs
sub
or
jg
xor
jle
adc
sbb
pop
enter
scas
movsb
xchg
mov
sbb
shlb
rcll
and
aad
arpl
mov
sti
mov
imul
xlat
test
out
out
fnstsw
iret
mov
mov
jb
popf
jb
testb
int3
jle
jp
movsb
scas
or
aaa
mov
in
mov
push
in
push
mov
sbb
rcr
out
push
gs
xchg
clc
cli
dec
cmpsl
lds
ds
insb
mov
mov
lods
mov
push
mov
add
addb
adc
cld
lahf
iret
lret
icebp
push
mov
jno
cltd
ror
leave
cmpsl
cmp
pop
mov
stc
fldenv
leave
adc
les
fidivrs
push
mov
mov
lret
sahf
jns
jmp
jbe
sahf
push
inc
sub
inc
sti
bound
cli
cltd
mov
enter
imul
sbb
pop
addr16
add
test
out
enter
add
inc
packuswb
mov
fstps
inc
rcr
loope
xor
loop
addr16
pushf
insb
xor
inc
test
iret
and
into
push
jae
andb
and
popf
push
push
cmpsl
outsl
jge
sbb
dec
mov
push
inc
or
or
test
cmp
sub
pextrw
push
push
orl
lods
adc
or
es
and
bound
leave
sbb
mov
js
mov
icebp
orb
push
rolb
cli
scas
lods
icebp
inc
sub
mov
dec
pop
shlb
inc
mov
jbe
inc
insl
sbb
mov
js
int
lea
loopne
arpl
mov
cltd
mov
push
inc
mov
inc
lods
jns
push
sub
xor
scas
pusha
pop
enter
pop
mov
xor
pop
out
hlt
aad
rorl
push
mov
cmp
and
stos
push
mov
int
ret
fisttpll
lret
imull
jo
dec
mov
out
dec
in
dec
jp
fnstcw
in
imul
insl
push
mov
sbb
push
enter
and
mov
fmull
pop
push
xchg
and
jecxz
jb
pushf
idivb
dec
and
pop
les
mov
jnp
cmp
mov
ret
jl
ds
xlat
psubq
mov
inc
hlt
or
les
lock
inc
cmp
mov
jo
out
inc
repz
in
in
testb
in
xchg
fcmovbe
dec
add
sti
xchg
push
sbb
sub
or
iret
mov
xchg
dec
mov
in
pop
sbb
imul
cmp
add
out
out
mov
push
dec
jp
call
xor
inc
lret
sbb
adc
cmpsl
mov
lock
clc
mov
ds
sbb
mov
push
stc
popf
pop
hlt
jae
ljmp
push
gs
movb
nop
mov
add
frstor
out
xor
out
lcall
fidivs
and
inc
pop
cmp
inc
dec
lahf
movb
push
in
xchg
lret
jb
test
cs
dec
xor
mov
jo
out
dec
mov
rcll
mov
mov
add
mov
fwait
popf
sub
dec
rclb
loope
sahf
fstpt
mov
dec
divl
cmp
aam
push
or
add
je
out
popf
pop
adc
ret
sti
xor
outsb
cwtl
cmp
push
pop
and
mov
xchg
ds
mov
xchg
xorb
push
xchg
mov
xor
inc
inc
sub
xor
adc
repz
out
sbb
jo
pop
out
inc
inc
pop
vorps
ret
lret
dec
mov
call
hlt
shll
pop
aas
das
cmpsl
aas
inc
repnz
mov
mov
xor
adc
xor
pop
add
cltd
stos
xchg
cmp
ret
les
mov
addb
not
movzwl
arpl
jg
mov
pop
inc
and
ds
sti
sub
and
pop
shlb
or
or
and
enter
lahf
pop
pop
test
jo
arpl
cmp
out
xchg
imull
out
movsb
addr16
dec
dec
adc
shl
enter
sarb
jae
sub
and
outsb
mov
pop
out
jmp
jo
test
hlt
cmc
int3
ror
cmp
cmp
out
popa
push
add
frstor
popf
mov
fisubrl
lea
mov
sub
mov
or
aad
cmp
jge
mov
mov
adc
cs
jmp
mov
jl
std
outsl
ficomps
jnp
xor
pop
mov
push
pop
insb
xor
push
aad
mov
int
pop
jge
frstor
sarb
push
or
shlb
or
fimull
or
pop
sbb
fldenv
push
pop
add
dec
aaa
dec
push
pop
sahf
hlt
jb
lcall
xor
imul
les
xor
sti
aam
push
adc
sub
push
stos
out
in
dec
in
outsb
add
loope
cs
add
out
jo
jg
sbb
out
push
fistpll
jle
sbb
jbe
aas
pop
daa
or
daa
pop
stos
in
sub
insl
pop
fidivl
pop
jb
mov
and
xor
push
sbb
out
pop
ret
pop
lods
lcall
daa
pop
stos
lahf
insl
and
orl
add
jl
xor
jo
shlb
cmp
movsb
mov
mov
idivl
jae
scas
dec
pop
rorl
inc
pop
jae
push
fdivr
cmpsl
cmp
xor
lcall
xor
cmp
jp
jne
add
lcall
sarb
inc
push
ljmp
movsw
xchg
pop
sbb
cmp
dec
push
or
sbb
mov
inc
shrl
cmp
stos
pusha
add
xchg
xor
and
cltd
mov
mov
out
iret
pop
add
repz
jl
mov
movsb
push
aad
push
flds
inc
ret
jecxz
sub
inc
aad
adc
fcompl
cmc
sahf
mov
mov
test
and
mov
pop
pop
or
inc
lret
lcall
push
xor
fidivrs
push
pop
sub
cmpsl
dec
pop
data16
jg
test
mov
es
push
imul
pop
fdivr
lock
out
xor
sti
rcrb
jecxz
out
add
into
lock
add
cmpsl
and
sub
lods
xor
hlt
lods
jns
addr16
std
js
outsb
mov
jb
pop
pop
insl
fcmovne
jecxz
mov
outsb
pop
out
sbb
push
cmp
mov
jae
dec
clc
jbe
mov
mov
movsb
or
mov
jl
lds
dec
inc
lea
or
sub
pop
pop
insl
mov
push
adc
popf
testl
xorb
or
inc
lret
ss
repnz
xlat
stc
cld
xchg
and
mov
sbb
lcall
stos
lahf
arpl
cs
cmp
mov
cld
aam
cmpsb
dec
adc
orb
adc
pop
std
cmp
cmp
or
aaa
cwtl
sbb
fists
jbe
xor
cltd
out
pop
rol
mov
mov
in
rcrl
sbb
sub
enter
jbe
mov
imul
push
out
test
cld
daa
stos
add
pop
mov
popa
mov
stos
jb
cmp
push
xor
and
jns
add
call
scas
sub
mov
nop
fisttpll
std
repnz
lret
fdivp
xor
sub
sahf
mov
aam
div
sbbl
insb
jbe
es
idiv
xor
xor
inc
inc
inc
sub
push
aas
call
test
loop
xchg
dec
push
inc
aaa
cmp
or
jge
std
ficoms
and
out
or
push
sbb
cmp
xchg
cmp
xchg
inc
xchg
sarl
icebp
xlat
test
iret
fdivrl
lcall
shll
and
push
xchg
adcb
jo
aas
ret
sbb
ret
inc
adc
sahf
insl
push
pop
movsb
bound
push
ror
pop
enter
ja
call
in
push
scas
dec
xlat
cmpsb
jle
cmp
ds
adc
in
cmp
sti
push
arpl
loope
inc
inc
mov
insb
cltd
dec
or
sti
jbe
pop
inc
repz
sbb
fcmovne
jecxz
push
sahf
and
sub
inc
jmp
ja
mov
in
out
mov
cmp
pcmpeqb
pop
test
cmc
mov
in
adc
xor
and
adc
cmpsb
lret
sub
add
in
cmp
inc
subb
pusha
sub
in
sub
push
pop
push
xorl
push
add
or
in
mov
push
shlb
arpl
arpl
push
aaa
sbbl
push
lock
push
mov
jae
jns
mov
mov
jnp
push
xchg
xlat
cwtl
mov
jb
pop
lcall
clc
jno
cmpsl
push
cmp
push
movsb
outsb
xchg
test
mov
in
in
shr
scas
out
in
xchg
and
lds
jge
mov
test
adc
mov
and
mov
inc
dec
test
insl
lock
cmp
aad
lahf
enter
lcall
lcall
mov
pusha
ret
in
rorb
and
hlt
movl
bound
xlat
sub
int
mov
aad
in
push
test
jns
rcll
pop
pusha
add
add
and
adc
and
cmp
jno
inc
jp
cli
inc
out
inc
xchg
testb
xchg
push
lods
add
outsl
lret
out
mov
xchg
push
jne
cmp
inc
loopne
fwait
outsb
addr16
push
sti
orb
test
sub
out
pop
lods
adc
cmpsb
adc
jno
in
orb
rorl
sub
adc
icebp
inc
mov
and
mov
loop
dec
ret
ret
and
cwtl
mov
test
jmp
pushf
fisubl
fcmove
cs
sub
dec
rol
pop
jecxz
push
mov
cwtl
push
pop
das
nop
scas
adc
pop
or
shll
push
addr16
sti
out
hlt
inc
pop
gs
orb
xchg
xor
shl
xor
cltd
mov
roll
mov
sbb
test
scas
or
jbe
inc
or
adc
pop
push
and
cmpsb
rorl
je
lret
xor
aad
inc
lea
adcl
fsub
in
cld
sub
mov
aas
ja
xor
insb
imul
fstpt
sti
xchg
shr
xchg
or
inc
in
scas
std
sbb
push
dec
inc
fstl
mov
fsqrt
cmp
sbbl
adc
cmpsl
mov
add
aad
repz
repz
pop
pop
into
adc
mov
push
jno
jmp
inc
mov
sbb
out
mov
jle
aad
setl
mov
dec
mov
sub
adc
push
push
and
sahf
ja
movsb
daa
adc
scas
inc
xor
pop
mov
xor
lods
and
ja
fwait
enter
push
icebp
aam
inc
sbbb
call
adc
add
add
ljmp
inc
fldt
jge
mov
jno
pop
call
cmp
and
out
xor
mov
repz
andb
aam
xchg
mov
xor
ror
mov
push
and
jl
rcr
and
inc
jbe
imul
ja
xor
fcomip
jno
aas
orb
push
aam
aam
push
stos
xor
or
shl
stos
fbld
push
push
mov
fnsave
xchg
dec
xor
icebp
test
mov
fsub
push
fwait
pop
dec
into
and
and
xchg
test
xor
mov
jb
add
sbb
sarl
mov
mov
fsts
std
jae
mov
or
pusha
cmpl
cmpsb
dec
aam
add
inc
cmp
in
xchg
aaa
add
mov
xchg
lods
and
cmc
push
stc
mov
outsl
popf
mov
pop
pop
mov
jp
cmp
lret
fcoms
sub
cwtl
add
int
call
cmc
or
cmpsl
adc
sub
fadd
mov
add
fisubl
paddq
inc
add
ja
pop
mov
pop
mov
cmc
xor
sbb
mov
and
mov
leave
call
ret
xchg
rcrl
inc
adc
aad
and
imul
dec
ljmp
push
lods
clc
faddp
mov
repnz
xor
push
in
pop
adc
jno
cmpsl
lods
xor
adc
inc
lds
or
push
nop
scas
std
cmp
in
gs
pop
pop
adc
or
jl
or
jmp
insb
lea
sub
inc
xchg
pop
cwtl
push
lcall
cmpsl
mov
jmp
or
call
dec
stos
notb
dec
mov
dec
sub
out
mov
xor
test
lret
insb
or
jae
enter
test
inc
scas
xchg
ss
sbb
push
lret
mov
xor
push
mov
gs
sub
lods
cmp
pop
je
clc
jb
clc
aad
clc
xchg
dec
negb
mov
and
stc
aas
mov
add
stos
xor
sbb
mov
add
out
pop
mov
add
jmp
jns
int3
daa
fisttpll
out
pop
inc
cmp
mov
cmpb
mov
imul
adc
mov
lds
call
xchg
test
push
int
rcll
add
cmp
dec
gs
dec
inc
mov
imul
mov
sbbl
mov
xchg
call
sub
mov
cmp
mov
xchg
jae
lret
int3
cmp
push
xor
add
addr16
mov
add
push
ja
or
pusha
sub
repz
movsl
out
jmp
jmp
imul
out
push
lds
sysret
aas
fiaddl
sbb
mov
shl
push
jo
rcll
jns
sbb
pop
jns,pt
lahf
sbb
roll
scas
test
push
in
mov
push
idivb
movsb
dec
ret
pop
cmp
mov
push
aam
loop
mov
pusha
pop
daa
pop
xor
sub
imul
test
lock
insb
dec
je
adc
mov
arpl
cmp
adc
movsb
aaa
mov
mov
sbb
add
test
outsl
push
jnp
ficompl
movb
xor
inc
mov
dec
xor
fildl
dec
xchg
jp
lods
xor
lahf
lods
sub
aad
inc
outsl
dec
push
xor
adc
sub
fidivrs
dec
jle
nop
lret
sar
sbb
jecxz
clc
iret
jnp
fimuls
movsl
jne
into
in
mov
pop
lret
add
jbe
movsb
lret
sbb
mov
out
cmpsb
dec
dec
rcrb
in
jecxz
int3
push
dec
dec
cmp
push
sbb
adc
fstpt
in
and
push
into
and
jp
je
daa
push
cltd
rcrl
std
pop
and
imul
idivl
repz
mov
sbb
test
mov
out
out
jmp
js
mov
inc
add
pop
shrl
icebp
movsl
lea
cmp
stc
dec
cs
xor
imul
in
sbb
dec
mov
cmpb
cmp
pop
iret
dec
dec
mov
push
jns
inc
movsb
mov
lea
jo
loope
push
add
and
ljmp
ss
mov
push
in
pop
ss
daa
cmpxchg
jno
ss
or
jnp
or
mov
dec
loope
movsl
xor
push
cltd
dec
mov
fistpl
addr16
lock
mov
mov
fists
pop
sub
sbb
mov
ds
inc
fwait
movl
stc
jp
out
out
ret
das
pop
cmpsl
xchg
push
je
jb
inc
test
cmp
in
mov
jae
mov
xor
xchg
test
mov
push
jmp
dec
mov
jns
lods
sbb
push
not
jecxz
and
push
daa
mov
test
add
jl
mov
cltd
js
jno
cld
popf
mov
aam
loopne
cltd
inc
xchg
mov
add
xchg
mov
cs
loop
sahf
mov
sub
ss
mov
mov
xor
add
jb
jo
lds
dec
mov
jge
mov
mov
ss
ja
rcll
insb
add
sti
pop
and
pop
dec
cmpsb
mov
out
icebp
pop
mov
push
jle
je
dec
or
dec
test
pop
and
cld
xchg
je
sub
and
scas
movsl
arpl
insb
xchg
mov
xchg
sbb
cmp
sub
cmp
or
rclb
lds
jae
insb
push
pop
cmpsb
ds
lods
and
mov
mov
subb
xchg
jmp
test
xchg
adc
xchg
and
bswap
in
pop
mov
pop
testb
daa
imul
sbb
call
leave
js
jp
sbb
ffreep
std
mov
xchg
stc
in
mov
test
loopne
mov
xchg
mov
jbe
push
jo
idivb
inc
mov
mov
jnp
std
sbb
dec
int3
pushf
lcall
mov
sub
test
pop
decb
out
lahf
into
jg
pop
adc
dec
inc
pop
ds
insl
scas
adc
xchg
ret
test
mov
sbb
fs
push
fadds
add
push
push
or
mov
out
xor
fwait
sub
insb
out
insl
ljmp
inc
andb
mov
or
hlt
jmp
push
dec
xchg
mov
ljmp
cmp
mov
pushf
push
in
inc
pusha
cmp
ds
push
mov
loopne
jl
movsb
fwait
outsl
pop
or
ficompl
adc
clc
sarl
mov
push
incb
add
xchg
sbb
in
insl
pop
and
mov
mov
sub
dec
outsb
push
pop
loope
mov
pop
xor
insb
arpl
sti
fwait
rcrl
jbe
movsl
pop
js
out
out
ss
cmpsl
mov
inc
add
lock
push
maskmovq
mull
mov
test
outsl
sub
les
jge
xchg
mov
repnz
and
call
rcrl
cmp
adc
push
arpl
out
cmpsb
xor
push
fs
call
sbb
in
push
mov
stc
mov
push
pop
dec
inc
adc
mov
int
arpl
or
jmp
and
out
rorb
cmp
mov
pop
movsl
repz
out
xor
sub
fs
xor
nop
mov
dec
mov
fs
pop
cmp
mov
jo
cmpb
add
add
pop
pusha
mov
movb
loop
shll
and
inc
dec
pop
shrl
mov
jnp
xchg
pusha
or
or
xchg
mov
sbb
in
mov
sbb
stc
xchg
aas
ss
les
in
mov
gs
xor
pop
mov
sti
movsl
xchg
mov
int
bswap
in
leave
push
push
out
inc
inc
dec
xchg
xlat
xchg
ret
ja
lea
mov
mov
jns
sub
ja
pusha
scas
mov
and
mov
mov
test
jns
movsb
cmp
pop
mov
out
jge
push
rcll
xlat
xchg
dec
cmpsb
sbb
shl
sbb
sub
mov
pop
gs
push
test
xchg
dec
ret
lret
ret
jae
xor
lock
xchg
addr16
aas
and
aas
push
sbb
mov
lahf
enter
pop
inc
jp
xor
iret
xchg
xorl
out
pop
fs
xor
mulb
xchg
pop
fucomip
pop
xchg
xchg
push
or
fstps
stos
mov
je
sub
or
mov
add
pop
shlb
das
cmp
out
lret
repz
jg
gs
adc
xor
pushf
shrl
scas
mov
lods
pop
lods
aam
xor
ss
and
lret
dec
pusha
pcmpeqd
or
aaa
mov
movsb
jmp
hlt
sar
sub
enter
negb
dec
jno
repnz
xor
pop
xchg
jmp
mov
fisttps
jns
pop
js
roll
shlb
in
hlt
sub
dec
mov
and
aaa
add
sub
push
push
mov
sbb
hlt
ds
jge
call
imul
es
inc
jns
ljmp
mov
out
cmp
dec
add
jle
jecxz
sub
insl
clc
push
or
out
xor
xchg
or
enter
xchg
aad
dec
ret
idiv
mov
pop
jmp
out
sub
xchg
lods
int
clc
into
rcr
cmp
pop
insb
aas
sub
imul
pusha
popa
addr16
ret
shlb
inc
xchg
subb
jmp
lods
out
out
ss
mov
lea
mov
xlat
pop
fdivs
xor
dec
mov
xchg
ficomps
mov
pop
test
mov
sub
in
leave
sbb
lret
rolb
shrl
sbb
push
sbb
fsubr
cmp
push
adc
dec
push
shl
insb
jne
cmp
push
lahf
inc
movsl
sub
mov
aaa
sbb
ficoml
pop
stos
daa
xchg
dec
mov
or
aad
sub
test
clc
ja
and
xlat
orl
dec
sbb
dec
jne
outsb
mov
cmp
in
xchg
movl
pop
push
stos
adc
jo
ja
or
or
icebp
mov
sbb
out
pop
sub
push
inc
fsts
add
add
add
or
mov
sub
adc
scas
pop
xchg
jg
shlb
add
jp
xchg
cmp
xlat
rcll
test
andl
shl
adc
out
add
jle
ficoms
je
orb
mov
ljmp
push
int3
int
dec
sub
mov
ret
sbb
aaa
ds
jne
icebp
rcrl
outsl
sbb
mov
mov
cmpl
pop
mov
fwait
add
fwait
mov
sbb
mov
or
lods
mov
in
sub
cmp
fiaddl
and
scas
and
in
jp
test
sbb
dec
pop
add
sbb
popf
mov
imul
orb
insl
imull
daa
popf
cld
xchg
jle
mov
adc
movsl
adc
cmpb
nop
push
movsl
lret
and
mov
sbb
jb
mov
cmpsl
xchg
mov
xor
and
jae
cmp
hlt
cwtl
test
daa
xor
push
out
mov
mov
lret
int
divl
out
icebp
sahf
mov
adc
stc
insl
cmp
mov
les
xor
movsl
jb
loope
fmuls
loope
inc
iret
push
push
scas
mov
fimuls
or
mov
imul
sahf
lahf
pop
jg
sub
sub
es
push
inc
push
std
mov
inc
inc
jbe
dec
xor
nop
mov
and
jmp
jle
nopl
in
faddl
lods
loop
xchg
push
fidivrs
adc
cmp
pushf
lods
xchg
jnp
mov
xchg
in
daa
out
xchg
jecxz
mov
popf
ficoml
rorl
movsb
movsb
out
push
js
sbb
pop
mov
repz
aad
sahf
inc
fdivl
int3
nop
sbb
push
cmp
jp
outsl
scas
push
or
mov
lea
out
dec
lahf
popf
sarl
push
jmp
xlat
ficompl
lcall
cs
ffree
sub
dec
inc
ljmp
daa
lahf
xor
xor
push
nop
or
lods
mov
insb
mov
inc
cwtl
nop
testl
pop
frstor
and
dec
flds
push
rclb
lea
inc
mov
push
cli
pop
sahf
and
push
repnz
dec
inc
shll
push
jb
lcall
bound
addr16
pop
mov
cmovo
mov
add
push
pop
outsb
loope
or
push
mov
hlt
loopne
add
mov
and
mov
mov
dec
and
mov
add
cmpsb
das
fldt
sub
adc
mov
mov
sbb
aas
pop
jmp
iret
mov
aam
push
xchg
pop
cs
jmp
ljmp
sub
dec
lret
xor
lcall
sbb
or
xchg
sub
inc
xor
sahf
sub
cmpsl
shr
gs
insl
loop
adcb
mov
int
mov
and
xrelease
pushl
sbb
scas
xchg
and
fbstp
pop
fwait
jp
out
pop
test
jg
and
adc
rcrl
lods
sub
mov
jg
scas
repnz
int3
pop
out
dec
jecxz
aaa
and
mov
shlb
ficompl
adc
and
cld
lret
ret
push
push
outsb
xchg
sbb
jl
fnsave
fldenv
ret
rcl
pop
addr16
fildll
push
mov
idiv
mov
subb
das
mov
jg
dec
xor
addr16
dec
jns
cmpsb
je
mov
shrl
repnz
adc
sub
ljmp
insl
stos
xchg
aam
leave
call
cmc
jmp
add
jl
mov
rolb
sbbl
push
cmpsl
fldcw
dec
dec
mov
ja
rorl
out
hlt
cmc
sub
pop
loope
in
loope,pn
sub
inc
push
jmp
xchg
mov
jbe
int
mov
xchg
cmp
out
or
push
stos
adc
int3
push
pop
cld
or
pop
pop
and
adc
call
ja
mov
mov
push
sub
mov
stos
pushf
arpl
adc
adc
mov
mov
out
mov
mov
push
jo
rorl
in
outsl
add
sub
mov
xchg
lcall
cmp
cmpsb
nop
pop
dec
ret
and
arpl
ljmp
add
inc
rcrl
or
or
bound
fwait
mov
loopne
push
dec
or
push
aad
sar
mov
loopne
movsl
jne
xchg
ljmp
shlb
test
cli
je
adc
test
adc
push
cld
mov
push
into
inc
pop
jo
mov
adc
inc
enter
lods
int
adc
xchg
sub
rcrl
xorb
das
xchg
xor
fwait
xor
mov
cmpsl
xorb
leave
pop
mov
das
pop
pop
js
fstpt
aaa
loopne
adc
loop
dec
cmc
test
inc
test
shr
minps
sbb
jns
inc
aad
mov
lea
and
push
mov
or
mov
flds
fisubrl
call
or
push
lods
dec
test
mov
insb
jge
divl
nop
jle
or
sbb
xchg
pushf
xor
xchg
int
xchg
test
dec
dec
jnp
xor
outsb
stos
rcll
dec
jge
cmp
insl
in
inc
or
test
add
shrl
adc
or
andl
leave
inc
inc
xchg
add
mov
add
scas
mov
not
pop
mov
roll
pop
jl
addr16
mov
leave
mov
xorb
inc
daa
cli
arpl
add
ret
pop
in
mov
push
sarl
negl
push
test
nop
inc
or
loop
and
das
pop
mov
push
imul
pop
repnz
jne
icebp
data16
in
fldt
rcrl
mov
inc
and
jg
hlt
out
push
and
inc
pusha
pop
dec
add
les
cmp
pop
cmp
int3
les
lahf
repz
sub
mov
stc
mov
rclb
push
andl
cli
outsb
ret
rorl
sbb
pop
sbb
xchg
std
sti
sub
mov
movsl
and
mov
rorb
fistpl
sub
add
scas
fisttpl
js
aam
arpl
fwait
ret
movsb
jne
iret
xor
mov
inc
js
push
das
sub
jge
mov
pushf
out
fldt
mov
mov
cmpsb
enter
or
aam
fmul
xor
xchg
inc
push
xor
in
shrl
add
outsb
imul
lret
sahf
dec
adc
out
jecxz
xchg
xchg
dec
cmp
sbb
jae
clc
push
push
out
frstor
jl
sbb
add
adc
popf
inc
xlat
dec
inc
ss
adc
faddp
and
mov
int3
and
cmp
ret
jbe
dec
pop
arpl
out
outsb
icebp
cld
out
mov
imul
lret
test
imul
jg
inc
cmp
fs
mov
push
loope
mov
int3
dec
lahf
sub
xchg
scas
xor
and
aad
dec
fwait
loop
dec
sbb
xor
xor
sti
in
scas
lcall
movsl
or
movsl
xor
ja
jno
pop
popa
inc
insl
pop
cmp
mov
scas
lret
mov
mov
mov
orl
add
enter
jmp
push
sbb
imul
mov
es
loop
add
pop
or
pop
mov
pop
cmp
sub
xlat
mov
popa
movsl
xchg
push
in
cmp
fwait
in
sub
mov
mov
repnz
jno
icebp
mov
test
fld
pop
icebp
fldcw
aaa
movsl
cmpsl
adc
sub
lock
mov
cmpsl
scas
adc
ja
aam
jmp
xor
std
cmp
inc
or
jno
adcl
sbb
push
mov
xlat
mov
sbb
stc
lock
imul
push
mov
mov
movsb
lea
jne
sub
repnz
subl
fwait
xchg
jmp
or
sub
xchg
shrl
mov
jbe
lds
shll
xchg
sub
lods
push
mov
rcl
test
jg
pop
lea
sub
andb
sbb
scas
xchg
cmc
shlb
data16
movsl
jle
das
int
cwtl
jmp
or
push
dec
daa
cwtl
sub
repnz
xchg
sbb
div
pop
pop
sub
ds
add
push
sub
fstpl
and
mov
stos
inc
test
test
nop
clc
and
jmp
into
sbb
or
enter
or
mov
in
imul
or
jns
xchg
testb
test
cltd
dec
call
pop
sub
test
xorl
mov
fisttpll
repz
sahf
fucomp
cvtpi2ps
add
call
sbbb
sti
ds
xchg
xor
sbb
scas
loope
and
or
xor
mov
mov
lods
je
dec
push
sub
stos
jecxz
jnp
xor
xchg
fsubrs
sub
mov
in
pop
dec
femms
shll
jae
enter
fcoms
mov
fstps
xorb
ds
pop
sbb
xchg
shll
bnd
std
jb
xchg
inc
push
jno
inc
add
lret
in
push
add
add
int
cmp
repz
xchg
and
leave
sbb
popf
and
test
pop
mov
add
sub
shrb
subl
out
jo
out
mov
adc
jp
and
dec
cmc
mov
mov
sub
mov
cmpsl
mov
ss
jno
add
incb
fisubrs
idivb
int3
repnz
icebp
sbb
cld
cli
sbb
fiaddl
mov
dec
mov
xchg
cwtl
add
jno
je
lods
inc
rorb
scas
pop
clc
ss
xor
imul
fldt
dec
popf
dec
scas
sbb
cmp
push
push
insb
outsl
jp
mov
inc
mov
scas
repz
inc
fsubrs
hlt
mov
add
or
stos
and
mov
inc
shll
lods
in
gs
insl
mov
xchg
mov
repz
call
outsb
pushf
ljmp
pop
push
mov
leave
push
mov
jle
aaa
cmpb
jmp
add
jae
aad
jge
jnp
add
into
cmp
orl
dec
call
pop
ss
jmp
int3
push
negl
aaa
adc
ficomps
scas
cmovae
mov
fistpll
jbe
pop
pop
fisttpl
mov
stos
decl
out
fwait
repz
in
jns
cmp
jmp
test
push
pop
xchg
pop
cmpl
rcr
lret
popa
aas
sbb
loop
shll
mull
mov
jns
xchg
add
sti
mov
sub
cmp
std
xchg
mov
hlt
pop
cmpsb
sbb
addr16
notb
je
addl
sub
shlb
rcrb
pop
leave
adc
jge
les
cltd
roll
es
outsl
test
jp
push
mov
fnstsw
das
mov
dec
sub
in
add
xchg
pop
je
pop
jg
jo
popa
jmp
mov
push
cs
not
and
icebp
popa
fwait
rcrb
inc
les
rol
int
dec
mov
mov
jbe
mov
push
and
mov
mov
and
dec
and
clc
imul
pop
xchg
adc
mov
mov
pop
add
jno
int
nop
pop
mov
cli
cmp
popf
add
jle
iret
and
in
sti
jmp
sub
pop
jmp
sub
cmpsb
adc
add
mov
cli
aam
andl
jmp
in
jae
insb
sbb
fnstcw
add
imul
lds
mov
jmp
mov
out
daa
mov
test
aad
mov
mov
mov
insl
and
lock
jae
mov
aas
dec
movsb
lcall
rclb
push
loop
xchg
push
ja
dec
out
push
rcr
ror
mov
into
popf
mov
xchg
push
jns
push
div
pop
jbe
fnstenv
outsl
je
rcrl
out
into
mov
or
stos
imul
addr16
in
loope
jnp
rcll
xchg
pop
and
sbb
inc
sbbb
roll
mov
stos
dec
pop
pop
mov
sbb
and
rorb
jl
in
in
mov
shl
pop
imul
jecxz
int3
xor
jno
mov
mov
test
fs
push
adc
scas
ja
xchg
xor
mov
test
xlat
ja
ret
inc
test
sub
rolb
in
js
jo
add
lcall
daa
fldl
or
inc
xchg
pop
outsl
idivb
shr
sbb
daa
push
repnz
aaa
mov
rcl
adc
sti
mov
xlat
test
dec
or
popf
push
rclb
movsb
ficoms
lods
sbb
push
dec
pop
add
inc
icebp
push
adc
in
orl
ja
push
scas
xchg
ja
addr16
inc
sub
pop
cmp
ret
sbbl
out
leave
ror
cmp
adc
mov
aam
addr16
clc
dec
dec
sti
sahf
cmp
sbb
shrb
add
xchg
mov
or
dec
lret
cmp
ret
mov
fadd
pop
cmp
movsb
int3
in
lock
adc
inc
les
mov
push
filds
jnp
lret
enter
cmp
movsb
addl
shll
sub
add
dec
mov
xor
mov
sbb
in
pop
push
push
push
jge
pop
pop
cmpsl
dec
xor
adc
push
xor
push
stc
loopne
mov
xor
pop
scas
and
aam
add
fs
pop
mov
adc
mov
adc
xchg
and
push
mov
xchg
mulb
cli
enter
jle
int3
sub
adc
test
stos
adc
push
mov
push
ret
mov
cmp
mov
cmp
fldenv
jmp
fstpl
mov
push
test
cltd
filds
pop
call
cmpsl
pop
ds
push
adc
mov
fnop
and
push
and
rorb
xchg
lock
lods
call
mov
jno
cmp
scas
mov
dec
dec
jbe
std
ror
add
inc
cli
cmp
and
or
push
sahf
push
jl
cmp
loope
push
cmpsb
mov
dec
sub
inc
out
cli
mov
sub
mov
inc
ja
out
or
fbstp
pop
mov
iret
enter
mov
pushf
sahf
cmp
popl
adc
in
adc
sbb
cmc
ror
sarb
mov
test
loopne
lods
mov
in
mov
cmc
notb
imul
mov
mov
lea
jmp
adc
adcl
repnz
aas
cwtl
lret
fisubl
in
int
inc
loopne
add
aaa
or
sub
xchg
fsubrl
js
sub
cmp
fiadds
jo
inc
sti
dec
pop
push
xchg
ja
repnz
xor
lcall
xor
mov
dec
mov
mov
dec
jg
dec
addr16
push
daa
cwtl
loopne
movl
popa
rol
fs
leave
inc
sbb
aam
fisttps
cs
or
pop
dec
xor
lret
das
es
sbbb
xor
loop
lea
mov
ss
outsl
cmp
jp
push
cmp
pop
push
fmull
dec
push
mov
repz
nop
pop
popf
les
add
fsubs
dec
push
cs
loop
cmp
aam
mov
adc
xchg
jb
notl
adc
jnp
mov
mov
clc
pop
mov
in
xor
push
adc
std
xor
mov
rcrl
dec
cmpsb
xor
xchg
addr16
loopne
test
cltd
xor
dec
das
add
lods
pop
lock
in
mov
in
sbb
adc
lock
mov
insl
sub
shll
mov
push
or
daa
imul
xchg
push
aaa
rcrb
shl
mov
js
daa
push
pop
or
lret
push
and
imul
in
insl
xchg
in
iret
xchg
test
push
mov
adc
out
ret
clc
and
fldl
cmp
clc
dec
fstpt
dec
shrb
cs
and
mov
ja
inc
test
mov
divb
mov
test
mov
push
dec
aam
xor
dec
icebp
stos
push
out
fisubrl
jg
into
sbb
cmp
loopne
rcrl
and
cmp
add
andl
mov
mov
popa
dec
rorl
fiaddl
imul
fidivrl
sub
dec
std
ljmp
fwait
int3
and
aas
int3
jne
sbbb
and
movsl
idivl
stc
data16
cmp
mov
stc
push
in
pop
pxor
pop
in
push
sahf
arpl
pop
ret
das
loope
in
adc
sbb
sbb
insl
fwait
jbe
negb
mov
xlat
lods
mov
mov
push
inc
pop
mov
inc
xchg
test
ret
imul
mov
out
lods
test
jle
aas
aam
in
mov
fdecstp
adc
dec
add
add
mov
nop
xor
test
jbe
and
dec
iret
leave
insl
sub
dec
aas
xchg
jecxz
test
test
rcrb
into
inc
inc
enter
lret
jno
arpl
in
out
ret
daa
cmp
dec
pop
and
mov
lahf
imul
aad
mov
mov
mov
mov
jecxz
mov
jg
ja
sub
pop
push
neg
fs
fsubrs
cwtl
lea
sbb
xchg
mov
outsb
jge
icebp
lcall
rcr
lods
loopne
pop
add
aaa
ret
fstps
mov
fnstsw
add
out
push
lahf
les
outsb
jo
sub
repz
xchg
mov
push
inc
dec
pop
mov
test
call
ficomps
hlt
cli
dec
movsl
movsl
les
and
push
sub
jae,pn
mov
add
adc
jp
mov
dec
test
cmpsb
es
std
mov
push
adc
sahf
xchg
iret
mov
inc
in
das
xchg
fwait
je
pop
je
and
adc
lods
out
jb,pn
fldt
jp
push
mov
mov
xor
or
lret
shrb
cmp
in
cmp
add
jo
cltd
cmp
sbb
fists
sub
sbb
pop
sub
lcall
mov
jns
std
in
inc
insb
mov
enter
sub
in
mov
push
jecxz
mov
test
jp
daa
outsb
mov
inc
lahf
xor
stc
add
mov
or
push
push
push
sbb
repz
js
aas
mov
jge
jg
out
jb
push
jns
rcll
lds
mov
js
mov
je
mov
pop
push
xchg
test
xchg
dec
xlat
pushf
mov
jbe
stos
jo
sbb
jnp
lahf
add
xchg
mov
dec
popfw
or
jl
lret
les
sti
enter
adc
jge
test
pop
inc
loope
idivb
and
movsb
cmc
into
fbld
ljmp
aad
dec
or
gs
or
cmp
fdiv
fldenv
pop
ret
call
lcall
and
add
sbb
sub
inc
xor
or
mov
dec
xchg
sub
sbb
pop
lods
std
mov
popa
mov
xchg
jle
inc
or
mov
or
orl
inc
cmc
mov
cmc
inc
clc
iret
repnz
xchg
ds
lahf
add
aaa
mov
jo
cmp
stos
ret
icebp
lods
jmp
shll
jle
mov
cmp
xor
push
pusha
mov
fcmove
push
outsl
add
push
mov
cmp
cmc
push
mov
jne
lret
ljmp
sub
mov
xchg
push
test
mov
movsb
mov
jb
add
jp
test
push
out
ret
inc
test
pushf
cmp
jae
push
cmp
inc
repz
aad
add
insl
enter
loope
sarb
cmp
mov
ret
pop
movsb
xor
sbbl
adc
loop
incl
add
xlat
dec
sub
in
xchg
fwait
push
lret
scas
cli
mov
fwait
pop
mov
in
jne
cmp
sub
cmp
int3
jnp
mov
push
jle
ja
je
adc
cmpsb
testl
out
mov
data16
jecxz
mov
popa
fdivrs
imul
sahf
inc
hlt
sarb
mov
fwait
repz
loope
jae
sub
mov
lret
and
arpl
adc
leave
mov
shl
jbe
lock
jo
fsubl
jge
inc
lret
cmp
inc
mov
int3
aas
sbb
dec
inc
ljmp
pushf
inc
sar
dec
or
mov
mov
js
xlat
and
clc
in
orb
fcmovnu
jbe
mov
inc
mov
sub
mov
pushl
pop
in
loope
push
cmp
fwait
mov
std
jg
jecxz
lock
pushf
push
adc
out
mov
pop
mov
xchg
orl
nop
loop
mov
dec
scas
dec
inc
fs
sub
arpl
outsb
xchg
stos
dec
mov
jns
mov
sarl
dec
cmpsl
stos
dec
dec
add
jmp
push
xor
insl
pop
fs
scas
xchg
pop
leave
add
jnp
repnz
scas
ja
xchg
scas
mov
inc
mov
push
gs
pop
pop
mov
popf
push
jl
mov
or
add
daa
or
or
fs
shll
mov
outsl
xorl
outsb
sub
lock
negb
sub
xor
lds
call
xchg
mov
popa
mov
lahf
jo
es
and
and
push
xchg
mov
pop
aad
clc
push
xchg
adc
stos
ds
jns
imul
mov
mov
iret
daa
xchg
xor
pop
mov
fstl
adc
movsb
test
xor
pushf
pop
jbe
xchg
pop
inc
or
aam
sbb
dec
fiadds
jbe
mov
or
testl
subl
push
mov
lea
jge
hlt
sti
in
lds
xchg
sbb
xchg
rolb
mov
and
push
jmp
cltd
enter
add
pop
add
rorl
pop
dec
icebp
into
and
in
daa
lret
sub
insl
lcall
push
cmp
test
cli
pop
push
sti
xor
movsb
sarl
shlb
scas
into
adc
mov
xchg
testb
mov
fisttpll
into
xchg
adc
or
inc
dec
mov
fcmovnbe
decl
aad
xor
roll
xchg
push
xchg
jb
lea
xchg
pop
shll
sub
cmovle
in
sbb
sti
sub
jp
sbb
imul
sub
hlt
pop
adc
repz
dec
mov
mov
adc
dec
mov
xlat
or
push
ljmp
ljmp
and
in
and
jge
int3
push
mov
cli
negl
pop
push
sbb
jno
add
cmc
aad
imul
outsl
mov
addr16
cmp
or
adc
and
sub
or
mov
jae
inc
xchg
pop
cmpsl
insb
sahf
fadds
push
stc
inc
pop
lahf
xchg
xor
leave
loope
or
vhaddps
xchg
ret
bnd
xor
push
xchg
inc
aaa
in
xor
sbb
adc
xor
adcl
aas
adc
mov
insb
cmp
add
mov
mov
test
ds
imul
imull
ret
xchg
adc
out
fwait
inc
sub
aas
add
loopne
lret
lock
xor
repz
or
dec
addr16
js
or
shl
test
xlat
mov
and
cmp
repnz
mov
sbb
cltd
push
call
inc
nop
sbb
dec
idivb
sbb
inc
xor
lahf
dec
xchg
inc
ljmp
ret
fs
test
xchg
outsl
popf
mov
mov
sbb
sub
outsb
sbb
iret
sub
sbb
popf
xchg
mov
test
ret
gs
add
fcoml
mov
adc
outsb
cwtl
sub
push
jle
pop
int3
adc
xor
test
pop
out
adc
jne
movsl
ds
loope
add
lock
xchg
in
and
fimull
fimull
push
dec
push
clc
mov
mov
ficoms
movsl
mov
fwait
pusha
out
sbb
push
mov
inc
dec
mov
iret
rorb
jecxz
sbb
subl
out
movb
icebp
fnstsw
adc
rcrl
add
xchg
mov
cwtl
cld
jge
iret
sti
dec
jmp
mov
ret
dec
aaa
jnp
xchg
push
xchg
pop
push
jnp
xor
clc
movsl
shlb
idivb
sub
cmpsl
or
jbe
pop
and
ljmp
adc
mov
xchg
stc
into
nop
decl
dec
das
dec
inc
xchg
xchg
cld
mov
repz
shrb
pop
fsubrs
mov
shl
icebp
aad
pushf
xor
daa
or
and
or
loope,pn
jmp
fiadds
fisubs
mov
pop
sarl
packsswb
or
and
lahf
bound
xchg
mov
push
dec
sti
or
cmc
sbb
push
dec
sbb
add
rorb
adc
push
mov
fildll
mov
inc
or
or
sbb
movsb
test
sbb
push
gs
fadds
imul
fistl
punpcklbw
in
mov
iret
xlat
out
scas
inc
mov
stos
push
mov
add
pusha
outsl
mov
test
pop
jo
adc
mov
mov
jmp
out
out
stos
mov
sbb
lock
and
popa
scas
jo
jns
adc
adc
ret
and
push
outsb
xchg
ds
testb
out
scas
xchg
sub
xchg
pop
insl
mov
cld
xlat
mov
or
repnz
into
pusha
dec
dec
repnz
mov
daa
jmp
add
bound
dec
xchg
ja
pop
sub
and
dec
dec
add
arpl
ds
loopne
jno
stos
cmc
cltd
ret
enter
nop
or
mov
mov
and
mov
cmp
mov
aaa
sbb
call
test
rcrb
shrl
notl
out
enter
addr16
cmp
enter
lret
jge
jno
fimull
adc
arpl
stos
std
fsubr
in
xchg
adc
pop
mov
add
cmp
mov
pop
leave
cld
mov
jmp
sub
cmp
cmpsl
repz
and
xor
mov
mov
lret
jle
ret
xlat
shl
cmpsb
mov
push
pop
add
aaa
out
in
mov
dec
fstps
jo
out
fs
les
dec
fwait
pusha
xor
scas
dec
add
and
dec
push
out
dec
repnz
xchg
je
push
inc
stc
es
jg
rclb
cmp
aaa
mov
fdivrs
xchg
xchg
adc
in
jo
fcompl
stos
jge
mov
or
outsb
or
pop
mov
ds
call
cmp
pop
or
loop
outsl
cltd
adc
sar
mov
ffree
xor
addr16
dec
mov
xchg
loop
addb
mov
stos
push
xchg
cmpb
out
repz
push
pushf
aaa
cmp
inc
xchg
mov
jmp
insb
jecxz
jne
mov
push
into
jo
fmul
sbb
imul
das
inc
movsl
mov
lret
sbb
rcrb
lret
mov
incb
aaa
stos
fidivl
dec
and
mov
rcrb
push
cmp
push
push
scas
repz
imul
popf
rcl
jno
pop
add
leave
ret
clc
mov
leave
jne
fs
or
adc
in
pop
add
cltd
subb
pop
sub
mov
fildll
xchg
lods
inc
shlb
push
call
mov
loope
mov
cvtps2pd
popa
fnsave
repz
pop
pop
ds
pop
xchg
or
shrb
outsb
shrb
out
jle
pop
das
fs
and
or
sub
clc
push
mov
push
dec
push
add
fidivl
pusha
movl
mov
inc
das
mov
xchg
jg
lock
jmp
or
sub
mov
mov
jnp
stos
sahf
ljmp
sub
fwait
mov
and
jp
shrb
cld
cmp
pusha
mov
cmpb
mov
dec
jae
loop
inc
add
stc
mov
and
xor
int
mov
cmpsb
dec
mov
std
fistl
inc
mov
pop
ja
stos
lret
jecxz
scas
clc
fdivrl
push
mov
and
push
inc
pusha
sahf
mov
pop
mov
into
insl
cmpsb
clc
rclb
test
jb
mov
dec
mov
out
into
xchg
je
test
pop
movsb
orb
sarl
out
pushf
stc
cmpsb
test
leave
or
cmp
sbb
lahf
mov
xchg
mov
aad
push
aas
mov
pushf
cmp
aaa
add
push
sti
mov
or
stos
adc
jl
lock
fdivrs
inc
test
dec
adc
inc
pushf
je
mov
icebp
mov
stos
inc
adc
jge
cwtl
loope
insl
adc
aaa
xlat
lods
nop
and
movsb
inc
dec
dec
dec
cmp
push
mov
mov
rclb
gs
scas
int
lods
mov
ficompl
cmp
popf
lock
xchg
mov
loopne
data16
outsl
lea
push
in
sbb
and
loope
inc
cld
insl
mov
xor
sar
lds
mov
push
mov
call
mov
push
adc
mov
jnp
mov
xor
bound
sub
jl
jmp
push
and
sbbl
push
mov
and
cmc
das
psraw
fcompl
daa
add
movsl
cmp
and
fistps
scas
xor
idivb
xor
dec
das
dec
cwtl
xchg
xchg
inc
cli
mov
jl
flds
inc
jmp
cld
loope
xlat
ds
subl
xchg
in
mov
push
add
pop
das
add
jne
mov
dec
lahf
loopne
repz
int
lcall
mov
mov
mov
sub
xchg
mov
aad
xchg
xor
pop
es
dec
push
pushf
mov
stos
test
mov
incl
jb
mov
sbb
mov
cltd
mov
orb
fists
jp
and
dec
loope
dec
inc
leave
ljmp
add
sbb
ss
nop
imul
mov
ret
inc
ljmp
or
push
sbb
mov
pusha
aaa
ds
xorb
es
jnp
xchg
pop
fldcw
loopne
aas
mov
or
loopne
xchg
sub
sbb
pop
push
daa
jnp
sbb
push
xchg
rorb
dec
jns
push
movsb
lahf
adc
fwait
mov
stc
aam
jnp
setle
dec
mov
xor
xchg
aas
inc
in
paddq
in
ljmp
xchg
sub
mov
adc
pop
cmp
mov
test
push
mov
dec
jne
push
rcr
mov
data16
pop
sub
loope
sbb
mov
pop
cli
fcmovb
cs
mov
loopne
test
outsb
orb
arpl
mov
pop
sbb
push
arpl
sahf
jo
pop
jg,pn
jp
push
nop
pusha
roll
add
add
pop
sbb
jmp
push
sub
cmp
sbb
lods
fdivs
mov
xor
adc
or
dec
int3
test
sub
jle
add
mov
push
insl
and
pusha
ljmp
cmp
cmp
les
or
add
test
out
aaa
mov
pop
outsl
xor
cld
or
loop
call
in
jmp
dec
push
loope
jecxz
insl
push
xchg
rorl
rcll
ret
ds
jp
ljmp
lret
and
loope
jp
cmc
cmp
enter
xor
and
mov
xor
shlb
pop
push
push
ficompl
pop
mov
cmpsb
add
sbb
inc
imul
fmuls
sbb
aam
pop
mov
push
inc
decl
test
int
gs
mov
xchg
inc
ja
adc
mov
xchg
frstor
xlat
sub
xchg
mov
adc
out
divb
sbb
xor
lret
cmp
shrl
int
mov
imul
mov
jecxz
xchg
sahf
repnz
dec
xor
push
add
cmp
rorl
jb
dec
mov
inc
leave
cmp
icebp
jae
call
pusha
add
lods
out
and
popl
test
lods
xor
push
mov
out
jmp
ja
ret
lahf
sahf
rclb
int
or
ja
das
inc
mov
mov
lahf
mov
ss
scas
add
lea
testb
popa
testb
sub
mov
std
push
lret
mov
push
sub
nop
ja
loope
inc
bound
in
clc
jnp
sbbb
out
or
jbe
icebp
jg
repz
pop
sbb
lret
mov
jno
pushf
cmpsl
push
lods
les
and
or
and
xor
lret
sbb
xchg
jle
rcrb
sti
les
jle
lcall
dec
mov
adc
mov
adc
rcrb
inc
and
push
xchg
jo
cmp
pop
jge
sbb
in
lret
xorl
pop
shll
sti
cmp
and
dec
push
les
cmc
mov
xchg
xor
lea
jecxz
xor
jge
and
jl
fists
or
or
jo
push
dec
mov
jmp
mov
dec
mov
lahf
mov
lret
sbb
in
add
insl
xor
mov
add
in
je
test
or
dec
inc
pop
cli
push
xchg
xchg
loopne
es
je
int
fs
mov
jbe
in
lcall
dec
pop
dec
xchg
xchg
sub
sub
dec
mov
or
jns
jecxz
icebp
data16
clc
inc
das
repz
pop
mov
mov
mov
push
stc
xchg
pop
cld
pop
and
aas
adc
push
out
stos
cltd
icebp
xchg
mov
pushfw
call
lea
lahf
adc
mov
fwait
stos
push
xchg
pop
into
or
lret
jnp
shlb
dec
pop
call
push
mov
sub
pop
fstp
mov
dec
push
xchg
jnp
fsubl
imul
call
add
and
pop
or
sub
mov
fwait
mull
add
fwait
inc
test
mov
insb
jae
repnz
dec
ljmp
pushf
and
notb
inc
shlb
xor
loopne
xor
cltd
fiaddl
sbb
pop
cwtl
or
je
cltd
cwtl
dec
jg
aam
xchg
shl
jl
cs
dec
xor
dec
cld
subl
movsl
movsl
mov
notl
mov
mov
clc
inc
mov
cmp
dec
ljmp
mov
out
adc
cmpl
and
sbbb
sbb
sbb
je
pop
inc
pop
mov
inc
jl
adc
sub
and
popa
int3
decl
aam
cmc
pushw
mov
lds
cld
add
pop
jbe
sbb
data16
in
dec
into
popf
jns
sahf
aam
stc
xchg
mov
push
test
jecxz
push
or
or
inc
pop
cmp
in
jo
push
loopne
stos
sub
jl
ljmp
andb
mov
cmpsl
std
or
mov
xchg
movsb
mov
mov
xchg
inc
rcr
mov
adc
lahf
imul
mov
cmpsb
dec
mov
jae
rolb
jecxz
jae
mov
add
add
fcomps
sbbb
xor
and
push
adc
cmc
mov
insl
sub
fsub
nop
in
xor
dec
ds
movsl
lret
and
popf
xchg
test
jb
lods
flds
pop
jle
hlt
js
sbb
jg
rcr
sub
dec
jae
mov
xor
mov
sbb
stos
gs
xchg
out
dec
sarl
xchg
loope
movsl
jl
roll
sbbb
ljmp
insl
inc
clc
sub
cmp
push
inc
call
test
push
es
aaa
test
jnp
adc
ja
push
adc
stos
push
mov
scas
push
adc
push
jbe,pt
mov
pop
jecxz
call
mov
out
movsb
inc
mov
adc
bound
ss
repz
mov
add
in
mov
add
add
push
dec
stos
push
call
mov
cmp
mov
mov
inc
shll
shlb
pop
xchg
jg
mov
out
push
adc
lcall
push
aam
xor
pop
into
mov
rclb
popa
shlb
mov
iret
fdivrl
jl
aaa
jge
adc
jecxz
fdivs
in
roll
js
cmp
or
pop
jnp
loope
add
mov
cmp
outsl
int
add
cmpsl
lcall
aad
push
jo
xor
int3
aas
mov
sub
mov
pop
jb
or
imul
sbb
movsb
fidivrs
xor
addr16
mov
mov
stc
fsubl
xchg
pop
mov
cmp
sbb
jno
aas
sbb
and
xlat
pop
in
out
xchg
in
lods
cli
enter
cmpsl
ret
das
int
es
ds
cmp
pop
out
lahf
mov
aad
inc
rcll
mov
aas
in
rolb
cmp
cmp
arpl
aaa
test
imul
dec
add
sar
mov
xchg
in
fistl
fiaddl
inc
mov
inc
imul
mov
pop
ja
js
outsl
mov
fwait
shll
icebp
mov
jg
daa
out
int
push
int3
test
es
leave
sub
aas
loopne
push
sbb
insb
fnsave
pop
cmp
mov
loopne
popa
dec
mov
pop
mov
inc
or
jne
out
fcompl
mov
push
sbb
je
jno
jae
shl
cmpsl
mov
jmp
sahf
pop
jle
std
jb
sub
cmp
xchg
add
sub
pop
or
fcmovne
and
pop
add
and
lds
repz
jne,pn
divl
gs
mov
sub
iret
call
rcrb
mov
lea
mov
xchg
scas
cld
dec
enter
testl
andb
xchg
and
stos
gs
inc
sbb
dec
xchg
mov
subb
int
dec
xchg
in
test
stos
mov
or
js
mov
ss
loopne
jl
das
sub
insb
pop
dec
mov
fs
outsl
das
mov
icebp
push
cmp
mov
mov
adc
xor
inc
pop
or
lea
adcb
aam
and
jb
clc
adc
loope
andl
rcll
outsl
popa
incl
jecxz
pop
push
push
ret
outsb
lea
inc
push
sbb
popa
sub
nop
push
insb
xchg
jb
push
stos
push
xor
cmp
xlat
scas
orb
cld
push
cmp
mov
xchg
testl
leave
sub
cmp
push
int
adc
stc
imul
mov
mov
or
mov
mov
ficoms
mov
xor
mov
mov
cli
mov
outsb
pop
cmp
stc
iret
lds
jne
cmp
mov
pop
mov
scas
in
inc
into
fwait
xchg
sahf
in
ret
fsts
out
and
cwtl
jmp
out
mov
lahf
xor
push
leave
xlat
cltd
mov
test
ret
loopne
pop
int
xchg
imul
push
mov
hlt
pop
and
push
xchg
icebp
hlt
adc
idivb
hlt
stos
sbb
cld
pop
or
push
daa
jnp
xor
jo
les
icebp
int3
mov
cmp
cld
outsb
ss
stc
lcall
jge
ret
lcall
ret
pop
xor
nop
ds
daa
loopne
mov
pop
out
into
pop
pushf
ret
mov
mov
pop
or
fldt
xor
out
pop
aaa
sbb
iret
xchg
testl
xchg
adc
std
add
pop
pop
sub
lods
sub
lret
cmp
testl
push
aaa
dec
or
mov
xlat
mov
mov
pusha
mov
cld
sbb
loop
mov
lcall
mov
orb
xor
push
test
cmp
pushf
jo
jns
xchg
dec
cs
dec
test
sub
mov
cmp
orb
fnstcw
cmp
jbe
fadd
cmpsl
mov
adcb
or
ja
mov
testl
pop
lret
mov
dec
and
rorl
push
xchg
pop
push
scas
aas
xchg
pop
and
push
aam
ja
mov
imul
inc
flds
es
test
mov
mov
add
jmp
xchg
push
inc
mov
jg
lea
jmp
shll
xlat
dec
xor
add
dec
sub
rol
std
push
push
fxch
scas
jae
xchg
or
add
fsubrs
das
cli
cmp
sub
cmpsl
adc
lock
in
fld
arpl
fisubs
dec
mov
subl
cltd
jecxz
adc
xchg
lcall
call
dec
test
insl
rorl
daa
fbstp
mov
push
xchg
les
aam
hlt
sbbl
in
inc
out
mov
adc
pop
adc
and
mov
loopne
add
jae
sti
xchg
mov
gs
add
aaa
sbb
mov
push
adc
sub
sbb
cmc
jns
dec
and
xchg
jecxz
inc
mov
inc
sub
or
xchg
ss
cs
sbb
arpl
push
pop
lds
adc
sub
cmc
jmp
adc
sbb
jmp
imul
sub
fwait
add
andl
arpl
js
push
loopne
jo
mov
xchg
ja
cmpl
data16
mov
imul
ficomps
dec
iret
add
dec
mov
call
lds
mov
rorb
andl
lret
sub
dec
fcom
jecxz
xor
pop
ss
cmc
mov
mov
mov
rcrl
jns
cmp
loope
dec
movl
jnp
push
sbb
push
jns
in
sti
and
testb
out
pusha
lahf
or
lret
les
mov
outsl
xchg
push
daa
xchg
mov
insb
lock
out
jns
outsl
in
adc
lret
add
in
adc
jno
inc
in
in
fs
adc
stos
add
and
jb
test
inc
xchg
sti
into
ret
push
mov
aas
sub
std
mov
roll
xor
sub
or
sarb
adc
mov
mov
outsb
sahf
loope
pop
fists
pop
add
push
add
jmp
cmpsl
xchg
xor
mov
sub
dec
iret
fstpl
leave
call
cmpsb
cmp
test
shrl
pop
in
cmp
xchg
dec
jne
xor
inc
fyl2x
add
xchg
addr16
repnz
flds
pop
or
dec
rolb
and
and
pushf
adc
push
xchg
lods
cmovle
mov
fdivrp
jmp
imul
fidivrs
mov
test
cmpb
adc
roll
add
push
lret
or
push
mov
xchg
push
cmp
jecxz
push
xlat
in
loop
movhps
in
cli
inc
cli
shlb
mov
push
popf
xchg
pop
adc
inc
jnp
jbe
sub
and
mov
mov
loopne
aaa
inc
cmp
mov
sahf
add
cld
sbb
fwait
add
fdivrl
add
je
out
ret
add
mov
daa
cli
das
mov
pushf
xor
fidivrs
and
je
mov
cld
cmpsl
add
jo
jecxz
jle
xchg
cmp
push
into
das
or
iret
sub
inc
sbb
and
test
mov
jnp
lock
mov
jno
aaa
mov
adc
loope
xor
sbb
dec
stos
and
mov
inc
xor
outsb
and
xchg
pushf
ret
je
dec
push
xchg
inc
nop
sub
dec
loope
fwait
pushf
int
mov
lcall
or
test
jno
xchg
sti
sbb
loope
jno
jg
inc
das
rdtsc
ret
mov
ror
jno
cmp
in
inc
fstpl
jle
fiadds
adc
mov
mov
jnp
mov
jo
and
in
lret
fimull
popa
xor
or
test
and
test
ja
xchg
jmp
inc
iret
ficompl
scas
jmp
iret
xor
ret
inc
sub
push
imul
cmp
adc
aas
inc
imul
or
mov
and
xchg
sahf
in
dec
inc
fisubrl
scas
movsb
imul
push
mov
loopne
mov
fcom
ret
enter
mov
out
mov
mov
in
divl
sub
daa
add
ljmp
jl
jb
js
mov
inc
and
mov
mov
mov
xchg
and
aam
pop
popa
xor
xchg
or
add
cmp
subb
fnsave
outsb
lods
scas
mov
stos
inc
cmpsb
mov
cmp
in
sub
mov
jle
loop
test
pop
mov
jb
push
add
movsl
incl
xchg
div
adc
jb
jnp
jae
aaa
imul
or
inc
mov
jecxz
xor
daa
in
xchg
jno
sbb
push
pushf
out
pop
lods
sbb
incl
mov
in
arpl
xchg
or
cmp
mov
cmpsb
stc
stc
lret
sahf
cmp
shlb
loopne
rorl
adc
xlat
dec
icebp
sub
adc
push
push
cld
jge
xchg
jmp
lret
inc
aas
repnz
idivl
dec
dec
xchg
pop
cmp
das
lret
hlt
rolb
mov
iret
jno
pusha
ss
in
lods
pop
push
add
shr
push
insl
int3
ret
cmc
stc
fsubp
shll
movsl
adc
nop
subl
scas
aad
insl
daa
pop
mov
out
inc
adc
cmp
adc
or
jle
sbb
adc
xor
lea
xchg
dec
hlt
stos
mov
ret
mov
add
leave
and
bound
xchg
fidivrl
imul
mov
call
push
xor
xor
pop
jge
cli
or
inc
pop
pop
bound
test
pushl
inc
adc
push
pop
sbb
or
mov
cwtl
lods
flds
mov
and
jge
push
mov
sbbb
and
jnp
fsts
push
sbb
shr
or
cmp
out
inc
sub
leave
movsb
and
bound
inc
adcl
fnstsw
jns
fbstp
aaa
adc
jno
aam
add
ja
mov
xor
ljmp
push
inc
incl
cmp
push
cmpsb
ffreep
add
xchg
and
dec
adc
inc
cmp
in
adc
adc
xlat
mov
pusha
sbb
in
pop
sbb
test
mov
jge
ja
in
cmpsl
arpl
xor
xchg
add
repnz
jge
in
pusha
ss
sub
or
inc
adc
mov
inc
fsubl
push
pop
scas
dec
nop
xorl
mov
mov
adc
bound
xor
out
cmc
sbb
out
out
jge
pop
xchg
xchg
mov
int
fimull
movsb
mov
xchg
sahf
add
or
mov
cmp
mov
sti
dec
dec
sbb
pop
xor
add
sub
dec
cmp
out
out
sahf
add
icebp
outsb
sarb
mov
test
pop
cmpsl
push
iret
mov
xchg
and
mov
adcb
sarl
add
ret
flds
scas
mov
mov
mov
in
adc
out
xor
loopne
adc
fisttps
push
push
loopne
lret
xchg
sbb
cld
cmp
inc
sbb
cmp
lahf
scas
imul
mov
and
dec
cmp
adc
mov
int3
ljmp
and
sub
or
cld
pushl
clc
dec
imul
pause
mov
mov
mov
popa
cmp
gs
out
sbb
push
cwtl
popf
outsb
push
pop
ror
pop
push
sub
mov
rorb
fsubrl
jg
push
pop
repz
push
mov
sbb
adc
jg
in
popf
inc
mov
mov
mov
std
imul
cmpsb
decb
pop
ret
mov
lahf
lods
mov
scas
arpl
clc
xchg
ret
mov
pop
xchg
dec
mov
add
fwait
call
in
fcomps
pop
loop
idivl
scas
or
lds
inc
in
add
cmovns
xchg
aad
insl
jg
daa
cmc
xlat
es
out
inc
loope
jns
std
cmp
rclb
movd
ret
jle
and
mov
ffreep
ret
adc
dec
sti
jg
nop
fldenv
mov
sub
testb
mov
ss
or
ss
std
daa
xor
es
mov
push
les
pop
mov
mov
fnstsw
xchg
add
jmp
pop
fucomi
xchg
jno
psubsb
xor
sar
xor
sbb
jo
out
xor
aaa
xlat
pushf
aam
test
gs
in
inc
mov
sub
ficomps
cmpsl
inc
imul
mov
pop
es
adc
mov
in
xchg
ret
jp
mov
std
rcr
ja
js
orb
and
je
jne,pn
mov
mov
in
jbe
fldt
sti
mov
sarb
ret
jp
pop
sbbb
adc
insl
mov
shr
std
daa
aad
sbb
xor
jns
cmp
jne
mov
outsb
mov
daa
jb
lods
xchg
idivb
sub
addr16
sti
mov
sbbl
xorb
jo
jl
push
fsubrs
bnd
mov
add
lock
lahf
sti
pop
ficompl
mov
inc
out
mov
mov
xor
in
jl
xchg
scas
ljmp
shl
push
mov
insl
cwtl
add
out
sub
xchg
adc
test
mov
sub
pop
sbb
mov
bnd
ret
imulb
mov
bound
ljmp
push
add
call
leave
mov
sbb
into
mov
add
xorl
addr16
movl
mov
push
dec
je
lea
ret
sahf
imul
imul
cld
dec
out
jo
jne
movsl
xchg
add
and
xchg
fcoms
xorb
imul
fwait
pop
mov
fcmovnb
loopne
addr16
push
daa
sbb
adc
cmp
inc
rolb
and
bound
into
call
loopne
sub
fildll
fnsave
dec
in
fistps
push
lcall
jge
jecxz
xchg
mov
lret
dec
push
sub
aam
xor
mov
lock
sti
bound
test
mov
ror
out
imulb
push
or
movsl
jmp
cld
sbb
sub
loopne
enter
ds
pop
or
fidivl
clc
aaa
test
xor
dec
or
push
dec
lret
mov
fdivrl
or
les
cmp
stc
orb
fnstenv
xor
adc
pop
mov
cmp
mov
cmpsl
nop
sahf
sahf
adc
dec
lcall
push
js
stos
nop
sahf
popf
into
cmp
and
pop
jo
mov
sub
adc
inc
sub
ljmp
and
popl
stos
std
push
push
insl
stos
xchg
out
push
lcall
enter
orb
push
push
add
xlat
xchg
sbb
or
arpl
mov
pop
cmp
stc
mov
leave
cld
and
pop
mov
sti
mov
lds
push
push
addr16
in
mov
movsl
xchg
or
stos
cmp
and
add
xorl
stos
lcall
add
cmpb
dec
imul
xchg
in
or
dec
fcoms
add
jmp
inc
sahf
rcll
xlat
jp
or
xor
movb
pop
ja
js
and
or
sbb
cli
scas
call
ljmp
inc
movsl
sbb
mov
leave
xchg
xor
fistpll
in
sbb
fdivs
mov
push
push
movsl
inc
mov
loope
shrl
push
repnz
pop
andl
fcmovne
sbb
test
das
lret
ror
nop
xchg
dec
out
in
lret
add
and
dec
mov
sbb
sub
int3
and
sub
ret
imul
mov
cmp
ret
adc
es
lods
gs
das
cmp
aad
mov
mov
mov
fcoml
cmp
ret
jno
adc
xchg
test
mov
insl
mov
or
aad
stos
xor
sarl
dec
in
jl
insb
paddsw
leave
adc
imul
dec
jb
xchg
jge
mov
cld
mov
in
cltd
scas
jno
cwtl
cmp
sub
jnp
or
adc
in
icebp
outsl
shlb
lods
cmp
ss
sub
add
lcall
dec
icebp
inc
mov
pop
das
arpl
enter
iret
sbb
jns
cli
mov
and
and
sbb
push
cwtl
popa
scas
roll
repnz
cmpsl
in
mov
mov
inc
mov
xchg
not
xchg
fdivrp
stos
lahf
leave
lock
mov
xor
or
loopne
and
leave
cld
lret
loope
push
xchg
push
lret
xchg
xor
mov
jle
inc
or
out
jae
ret
aad
fisubrl
sub
and
and
mov
mov
nop
and
popf
or
or
pop
cs
repnz
das
ss
loopne
or
ds
jl
aam
lods
pusha
outsb
pop
xor
dec
cmp
jge
movb
mov
push
xchg
and
mov
sub
jne
jns
es
sbb
std
cmp
pop
adc
mov
or
dec
loop
or
jmp
push
mov
sbb
psubsw
push
andl
or
jecxz
mov
or
or
and
mov
flds
sbb
xchg
lods
add
inc
mov
sub
jl
jecxz
inc
dec
fnstcw
rol
daa
adc
stc
je
push
jns
and
and
lcall
xchg
cmpsl
inc
cmp
out
jmp
push
or
jae
mov
lock
lea
dec
aaa
repnz
sbb
and
lret
dec
clc
loopne
xchg
movsb
das
shll
inc
sub
pop
pop
pop
stc
rcrl
jno
movsl
or
es
imul
mov
fbld
call
cmpsb
aas
sub
sbb
inc
sahf
push
mov
and
jae
movsl
cmp
mov
aas
add
jns
sub
inc
in
push
xchg
xchg
dec
cmp
popa
iret
jb
pushf
pusha
adc
push
int3
xchg
or
fisttpl
shll
in
outsb
jecxz
test
popa
aam
std
test
sbb
push
or
cltd
add
xor
and
outsb
mov
add
sbb
sbb
push
scas
jb
icebp
fstpt
and
mov
addb
cmp
in
loope
sbb
push
shl
xchg
test
aad
and
frndint
lret
add
jecxz
mov
into
out
jb
xlat
subl
pop
arpl
std
sub
adc
pop
xchg
je
xor
sbb
enter
add
fsts
mov
mov
pop
ret
mov
and
rep
or
lds
mov
mov
nop
ficoms
sbb
add
xor
xchg
out
testl
in
sbb
inc
mov
test
es
xor
mov
mov
inc
and
adc
data16
rcrl
pop
inc
daa
subb
xchg
mov
mov
testl
aaa
adc
cmp
push
and
mov
jl
jnp
sarb
cmp
cli
xlat
roll
push
jp
es
mov
sub
call
rcr
dec
jge
cmp
jmp
pop
jb
outsl
jmp
sub
pusha
push
int
out
inc
xchg
cmp
divb
mov
cmc
stos
ja
xor
cli
loope
jmp
xor
test
cmpsl
int
xor
sbbb
aaa
push
std
jle
pop
shr
test
push
or
aad
adc
fdivs
test
dec
rorl
inc
cmp
push
xchg
cmc
imulb
sub
daa
cmp
xor
sbb
adc
adcb
push
pop
sub
into
jne
xchg
mov
sbb
xor
dec
mov
ss
das
fimuls
sahf
imul
gs
stc
popf
xor
sbb
sub
push
push
and
mov
pop
enter
inc
mov
das
shll
movsb
pop
cmp
outsl
xchg
mov
or
pop
lods
mov
popf
mov
sub
and
xchg
jge
mov
inc
xlat
cmc
aas
mov
lret
repz
dec
call
jecxz
adc
stc
mov
gs
test
dec
adc
scas
push
test
or
sbb
jmp
mov
jl
shll
jp
aam
jae
pop
adc
rolb
clc
or
xchg
in
cmp
imul
push
and
xor
ljmp
loop
add
leave
jnp
mov
dec
lea
jbe
in
push
enter
push
pop
aam
sti
call
dec
xchg
stos
mov
jge
push
rcll
negl
cmp
lods
aas
repz
daa
into
insb
cmc
fcompl
repz
push
jle
jo
cmpb
push
inc
inc
std
icebp
movsl
push
repnz
pop
mov
aas
aaa
xor
pop
loop
cmpl
sub
jbe
out
shr
xor
cli
nop
jg
popa
fisttps
hlt
sti
cmpl
fildl
dec
orl
xchg
or
sbb
int3
jg
mov
mov
loope
adc
fs
sbb
lea
loop
inc
es
push
push
stos
push
sahf
xlat
fsts
push
adc
adcl
ficoml
out
stos
jne
ds
inc
fisubrl
pusha
xchg
and
mov
mov
aad
filds
lcall
je
and
pop
sbb
shlb
cmp
mov
roll
mov
adc
mulb
lret
fistps
ja
cmc
mov
std
add
daa
push
inc
aas
cmp
dec
xlat
setne
aad
cli
fisttpll
popf
scas
jmp
ds
cli
rolb
mov
mov
sbb
push
sbb
sub
push
je,pn
mov
imul
sub
mov
xchg
repz
adc
pushf
push
es
rcr
insb
cmp
jo
les
jle
fs
inc
faddl
cmp
mov
popf
icebp
std
int3
jmp
rorl
xor
gs
pushf
mov
or
sub
xlat
ja
jns
push
std
cmp
adc
fdecstp
ret
movsl
fld
les
imul
pop
xchg
adc
xchg
push
push
pop
lods
and
mov
int
mov
scas
mov
loopne
cmp
add
push
int3
lods
xchg
test
test
push
add
lods
dec
jnp
pop
jmp
dec
pop
neg
pop
dec
pop
and
fucomp
popa
ret
call
fisubl
mov
pop
pop
icebp
pop
adc
fwait
jp
or
aam
stos
mov
push
adc
sbb
inc
mov
scas
in
aas
mov
ljmp
mov
mov
xchg
sti
movsb
int3
aaa
ret
jmp
outsl
cmovns
sub
fcmovnb
push
sbb
jle
fistl
xor
std
mov
sti
fdiv
aas
pushf
xchg
or
dec
test
in
pop
aam
mov
add
ljmp
or
or
je
jecxz
fimuls
add
sbb
jb
and
es
ret
cmpsb
mov
cmp
repz
daa
jnp
sbb
jo
insl
nop
je
pop
sbb
or
dec
icebp
push
ja
xor
and
sbb
jb
pop
sbb
mov
inc
push
mov
ds
std
lcall
dec
mov
xchg
push
popf
movsl
pop
xchg
sbb
inc
mov
sbb
mov
add
imull
cmp
dec
addl
jne
insb
fidivs
jg,pn
adc
xor
test
inc
outsl
add
je
cmpsb
lret
add
pop
fldl
mov
lcall
mov
movsb
mov
jns
mov
dec
insl
dec
or
loop
sub
sbb
mov
cmc
mov
mov
insl
pop
cmp
stc
iret
inc
adc
sbb
shlb
push
insb
xchg
lods
jo
icebp
and
adc
call
rolb
xlat
add
popf
repnz
push
je
jns
mov
sti
cmp
mov
sbb
fnstcw
out
mov
rorl
sahf
xchg
iret
cmpsb
jmp
add
push
in
outsl
cmpb
popa
into
mov
jo
pop
idivl
fdivp
rorb
lcall
std
inc
push
xchg
sarb
fs
sbb
sub
int
imul
jae
dec
inc
jp
or
xlat
imul
imul
lods
mov
das
mov
mov
sub
inc
lods
adc
fsubs
fwait
adc
sbb
inc
mov
sbb
push
shll
push
push
test
mov
dec
int3
xchg
rcl
and
cmpsb
xor
cmp
test
mov
sub
jb
jae
movsl
sub
xlat
mov
mov
adc
imul
fwait
add
adc
in
pop
sub
push
lcall
rol
push
jae
jp
addr16
sbb
sub
ds
mov
cmp
fisttpll
add
push
jecxz
dec
dec
mov
mov
mov
es
xor
xor
sub
mov
repz
repnz
lret
jp
movsl
lahf
popf
sbb
mov
jno
cs
push
rorb
mov
aas
je
hlt
cmpsb
sub
ljmp
sub
mov
add
ret
loopne
mov
andb
sbb
mov
push
mov
cld
out
inc
xor
outsb
aas
ret
aad
mov
mov
pop
loopne
xorl
or
adc
mov
or
jmp
stos
xor
inc
xorb
shll
mov
in
pop
add
sub
sahf
inc
push
mov
sbb
in
cmp
imul
xor
xchg
and
test
cwtl
xchg
xlat
fwait
sub
hlt
daa
out
test
dec
push
and
jne
xchg
je
out
or
fldl2t
mov
push
fs
xchg
push
jo
in
pushf
movsb
pop
insl
fldl
sub
mov
lcall
sub
orb
fwait
sub
jne
aas
fwait
sub
fwait
adc
sbb
idivl
pop
out
jb
xchg
fidivs
popa
lods
mov
out
add
stos
shl
and
pop
bound
lds
cmp
dec
mov
insb
push
fisubrs
shl
xchg
mov
xor
cmpsl
and
scas
iret
cmp
sub
sahf
shlb
jle
mov
js
mull
xchg
jp
repz
insb
mov
jo
loopne
jecxz
inc
int
xchg
adc
push
mov
or
lds
fdiv
or
pusha
pop
adc
movsl
pop
out
dec
out
inc
push
rcrb
jo
fwait
add
addr16
pop
jp
xor
cmp
cs
and
cmp
add
push
jbe
fldenv
movsl
scas
dec
popa
mov
mov
mov
ret
pop
test
pop
push
sub
mov
mov
dec
push
addr16
jmp
mov
adc
loop
add
jecxz
addb
out
shrl
inc
sahf
stos
ljmp
movsl
sti
mov
ret
call
lret
pop
dec
iret
push
sub
cli
das
popa
jbe
push
pusha
and
aas
mov
lock
lret
ret
mov
aad
or
dec
xor
adc
mov
jae
sbb
lcall
loopne
xchg
dec
hlt
cmpsb
cmp
fisubrl
mov
or
xchg
addl
decb
loope
push
or
imul
mov
arpl
xor
clc
clc
mov
ljmp
jne
push
sbb
rcll
insb
mov
sub
xchg
xchg
fisttpl
aaa
aaa
in
cli
cmpsb
or
sub
lahf
or
addl
sarl
pop
pop
fldenv
ljmp
jl
popf
test
xor
mov
adc
sbb
lock
ja
cmpsl
sub
aam
loope
cltd
fists
mov
lea
aas
out
sub
scas
jmp
mov
jne
mov
adc
jne
jno
dec
sub
inc
xchg
fwait
jecxz
sbb
das
outsl
adc
mov
add
not
movsl
xor
popf
fiadds
push
test
shlb
mov
adc
add
inc
cmp
push
cwtl
es
jns
fstl
pop
addb
and
lea
in
ud0
fwait
mov
movsl
mov
pop
out
sub
push
inc
int3
or
and
ret
es
rolb
movsb
xor
mov
mov
and
rcl
imul
jbe
mov
jg
inc
dec
push
inc
dec
pushf
pop
in
cmp
outsb
add
leave
gs
mov
fwait
mov
lret
mov
and
dec
pop
and
je
imul
xchg
fistps
mov
fnstenv
aaa
loopne
add
mov
xchg
push
xchg
jp
push
jbe
jge
sbb
data16
inc
cmp
pop
push
jne
sub
sbb
push
cmp
sub
add
push
xor
mov
inc
jecxz
pop
jmp
dec
and
mov
and
daa
dec
mov
pop
jo
std
ds
fidivrs
mov
dec
adc
jnp
inc
insl
movb
xor
xchg
stos
xor
mov
dec
test
and
or
pop
xchg
cmovae
popf
mov
push
inc
pop
mov
in
pop
out
xor
out
mov
xchg
cmp
shll
cltd
stos
cmpsb
fcmovne
add
mov
push
sbb
mov
fnstsw
insl
adc
inc
insl
inc
lods
dec
and
cwtl
xchg
mov
and
pop
gs
outsl
push
imul
adc
sbb
push
imul
push
xchg
inc
or
add
dec
adc
xchg
adc
dec
out
movsl
pusha
dec
xchg
gs
loope
shlb
pop
scas
aam
outsl
loope
jo
pop
xor
les
stc
push
cmp
std
cwtl
insl
lds
or
or
xor
stos
lcall
adc
mov
dec
add
gs
pop
jmp
xor
lods
mov
test
sub
or
add
mov
xorb
push
jae
pop
cwtl
sub
sbb
jg
addr16
divl
dec
shrb
les
stc
lret
add
test
inc
loope
cmp
sub
or
xlat
dec
into
xchg
mov
lods
stos
cmp
pop
mov
mov
jnp
push
sbb
jg
or
dec
pop
lahf
into
push
push
push
cs
mov
add
lcall
xor
sbb
lods
push
loope
fcoms
jle
cli
sbb
jl
aas
arpl
mov
jb
mov
cmp
cmpsl
jmp
xchg
add
ret
jo
xchg
mov
xor
xor
inc
pop
cld
mov
inc
mov
mov
jb
jae
push
or
push
sbbb
sbb
cmp
insb
std
in
jno
imul
out
out
out
icebp
subl
hlt
fistpl
decb
mov
push
ja
sub
stos
ficomps
aad
lock
imul
pop
sbb
and
mov
pop
mov
testb
jno
jns
movq
adc
jo
cmpsl
mov
add
xchg
xor
jne
repnz
repnz
and
push
fs
shr
insl
add
int
pop
lock
lods
lea
leave
sbb
scas
cmp
arpl
xchg
xor
lret
stos
lds
xor
insl
scas
repz
or
adc
sub
mov
jmp
jb
xchg
subb
xchg
das
cmp
fisubl
loope
je
fs
jmp
xlat
or
mov
adc
sub
outsl
xchg
ds
cmp
lret
arpl
add
lret
adc
push
mov
aas
push
adc
and
or
fstpt
cmp
mov
fisubs
jg
mov
orl
adc
divl
shll
lock
or
pop
ret
pop
in
fwait
cltd
xor
ret
xor
or
add
jge
pop
sbb
decl
mov
push
cltd
or
xchg
in
pop
dec
cmp
fdivrs
add
dec
or
pop
sub
idiv
fbld
push
jge
shl
push
xor
rdmsr
jge
fstps
std
jmp
lcall
seto
cltd
fmulp
or
or
fs
and
in
or
pop
mov
repnz
mov
pop
stos
popf
arpl
cmp
pop
jg
xchg
shll
insb
or
lock
lods
push
inc
int3
lea
cmp
pop
sub
les
push
pop
dec
mov
xchg
push
aam
sub
std
adc
push
lods
inc
leave
notl
fimull
bound
and
iret
xchg
rcll
stc
and
add
pushf
xor
stos
imul
xor
repnz
dec
outsl
sbb
jmp
out
push
push
es
xor
dec
int
ljmp
jns
jo
scas
das
test
sbb
loope
pusha
adc
pushf
shll
mov
js
push
cmp
pop
int
clc
sbb
pop
dec
pop
mov
in
push
in
ret
fwait
cmp
xor
mov
stos
cmp
dec
cmc
lret
sbbl
int
mov
or
mov
xor
sub
ficoms
fcoml
xchg
xorb
inc
popf
push
sub
iret
cmp
push
gs
or
dec
outsb
je
std
stos
mov
test
dec
mov
hlt
lret
bound
adc
adc
xchg
push
cmp
lds
test
lock
test
in
jae
mov
dec
aaa
jns
stos
adc
mov
push
xchg
mov
and
add
adc
jle
sbb
popf
pop
sbbb
fisttps
in
insl
or
repnz
inc
dec
imul
test
xchg
pop
daa
xchg
mov
xchg
sub
mov
jnp
ljmp
clc
jb
lods
lret
mov
sbb
pop
cli
xor
hlt
stc
imul
ficompl
dec
xor
add
push
mov
repnz
in
aam
and
stc
adc
xchg
mov
outsl
xchg
cmpsl
test
sub
fs
push
int3
loop
mov
std
cmp
push
stc
shlb
push
addb
fsubrp
jle
mov
adc
jnp
xchg
outsb
or
into
das
pushf
pop
pop
pop
test
cmpsl
and
sti
xchg
cmpsl
cltd
ret
dec
mov
data16
inc
xor
jbe
iret
jbe
test
pop
cmp
push
movsl
jb
loope
mov
rorb
dec
scas
cs
lds
pop
push
cmp
jl
aaa
sub
add
pop
ret
and
leave
xor
loopne
jno
mov
ljmp
jae
pop
jne
shll
int3
in
daa
cmp
fdivl
sahf
les
add
mov
add
or
push
out
jle
cmp
scas
mov
in
loope
imul
fld
aam
or
sub
xchg
insb
sbb
mov
pop
and
pop
cs
push
adc
jge
pop
pop
sbbl
in
outsb
bound
lea
inc
mov
sti
push
adc
push
dec
sbb
cmp
int3
push
mov
and
inc
mov
lret
mov
sti
jae
mov
dec
jge
push
jno
inc
mov
js
mov
dec
orb
or
les
mov
fcoms
shl
mov
sub
sub
and
arpl
movsl
shlb
pop
addr16
jne
mov
outsl
fidivrl
jne
jo
cmp
jg
jno
jns
decb
push
lods
decl
in
add
fstpl
or
js
std
or
leave
call
xchg
outsb
lret
outsb
mov
xchg
mov
lcall
jo
lcall
rsm
mov
fwait
int3
sbb
inc
jns
dec
dec
or
mov
mov
mov
jecxz
jecxz
cmp
scas
lock
sbb
cwtl
das
lock
shlb
mov
stc
scas
mov
mov
mov
cmp
mov
pusha
or
sbb
rorb
inc
fsubs
pop
sarb
stos
in
lds
repz
jmp
dec
test
mov
call
cmp
imul
dec
int
xor
pop
and
sbb
mov
dec
cwtl
pop
orb
sarb
mov
push
mov
or
lock
dec
mov
loope
mov
lock
mov
loop
mov
hlt
xchg
out
repz
aad
mov
pop
pushf
out
stos
mov
mov
repz
xchg
mov
ficompl
cmpsb
gs
xlat
repz
sbb
scas
sti
ja
mov
fdivrs
or
push
fwait
dec
push
repz
mov
sub
and
push
hlt
pusha
mov
mov
jge
jg
insb
or
push
dec
ret
mov
adc
aaa
test
int3
inc
pop
jp
movsb
lods
or
in
or
xor
jecxz
fs
push
outsl
loopne
mov
loop
jecxz
andb
push
lock
jp
adc
mov
repnz
cld
mov
or
shl
pop
inc
movsb
andl
or
fsubr
mov
icebp
sbb
push
fcomp
jns
test
dec
dec
fsubr
push
or
lea
dec
jecxz
mov
jmp
sbb
test
jmp
or
xor
push
add
dec
stc
sub
movsl
mov
movsb
loopne
data16
adc
or
inc
mov
jmp
mov
stos
adc
or
or
cmp
or
or
jbe
sub
push
orl
adc
xchg
and
test
shll
insl
dec
add
fwait
test
inc
in
leave
mov
jo
xchg
sub
add
sub
addr16
subb
jne
outsl
pop
fnsave
popf
mov
cmp
sbb
test
add
popf
cmp
aam
cmpsb
inc
sarb
aad
shlb
mov
aaa
ds
fs
gs
cmpb
in
cli
out
in
and
fbld
adc
fwait
and
jne
push
and
or
mov
pusha
sbb
jno
xchg
sbb
mov
icebp
std
pop
orb
cmp
imul
cmpsb
adc
cld
sbb
push
xchg
mov
mov
adcl
xor
push
orb
jl
mov
das
ljmp
and
outsl
jns
int
fisubrl
sahf
out
mov
dec
lods
fisubs
inc
pusha
push
adc
cwtl
cmpsl
das
cmp
sti
test
jnp
mov
out
pop
repz
sub
sbb
stos
jo
pushf
imul
mov
mov
lods
mov
dec
inc
push
cli
push
jl
inc
push
lret
sub
or
adc
lea
mov
cmp
xor
daa
mov
incb
push
inc
xchg
adcb
jg
add
jnp
sbb
addr16
push
jecxz
push
stc
pop
jge
ficoms
jmp
cwtl
lods
adc
push
cmp
mov
mov
pop
fadd
mov
adc
pop
push
inc
imul
mov
pop
pop
mov
jmp
out
mov
test
mov
push
jl
sbb
xor
or
stc
fsubr
adc
sbb
mov
sub
mov
mov
filds
push
shll
mov
xchg
loop
outsb
mov
cltd
scas
fistl
jecxz
dec
into
out
sub
mov
in
sub
lea
aad
xchg
aad
push
adc
add
xlat
sub
xor
call
push
inc
sub
lret
xchg
stc
dec
test
jno
jno
js
cmp
lock
lret
ja
mov
xor
cwtl
mov
mov
cmpsb
xor
inc
pop
xor
add
arpl
add
add
std
jp,pn
mov
push
pop
fs
inc
push
int
cmp
roll
fmuls
aad
in
xchg
dec
inc
sbb
mov
rorb
jmp
jl
cmc
pushf
sub
test
test
addb
cmp
pushf
cs
int
xchg
or
ficompl
dec
adc
xchg
pop
adc
maxsd
sbb
mov
in
scas
xlat
loope
ja
and
pop
jbe
push
pop
inc
pop
cwtl
je
movsl
repz
inc
dec
rcrl
add
mov
xor
or
jl
test
cmp
js
mov
push
xor
xor
cmp
push
sub
js
cld
scas
mov
imul
sbb
dec
sub
add
test
push
in
ja
outsb
pop
inc
xchg
movsl
sarl
cmp
adc
inc
shlb
out
cmp
or
push
ret
cmp
push
adc
sub
cld
push
ret
hlt
test
dec
mov
fwait
das
daa
aam
fstl
insl
cmp
mov
stos
dec
mov
fiaddl
xlat
outsb
int3
in
fwait
jle
mov
mov
fmulp
outsb
mov
aad
pop
dec
pop
mov
push
incl
imulb
dec
mov
lret
js
xchg
push
xor
pop
add
push
fs
mov
enter
test
fadds
pop
in
push
sbb
out
mov
orb
jp
mov
xlat
es
inc
lcall
cmp
sub
in
fwait
push
nop
mov
fisubl
sbb
ss
fcmovnbe
out
push
fnstcw
in
dec
lods
cmp
push
mov
mov
mov
icebp
lret
add
inc
cmp
and
bts
or
xor
sub
roll
add
xor
fildl
jecxz
frstor
imul
cmp
add
div
jecxz
sub
or
mov
jmp
imul
and
out
sahf
mov
movsl
std
xchg
leave
or
pusha
fcmovb
or
xchg
out
and
call
test
gs
inc
adc
lds
xchg
inc
mov
jmp
add
scas
subb
test
mov
push
fs
ds
movsl
roll
xchg
fidivl
dec
ljmp
pop
inc
mov
fwait
pop
cmp
pop
mov
dec
fdivl
hlt
sub
jle
out
hlt
or
or
imul
iret
in
mov
inc
jecxz
lret
filds
dec
cmp
int
xchg
adc
dec
pop
aas
sub
cmp
pop
sti
mov
pop
dec
insl
cmc
sbb
lock
mov
xor
scas
aaa
pop
push
cmp
movsb
sbb
adc
mov
lret
mov
outsl
arpl
pop
movsb
push
ja
xchg
mov
int
pushl
xchg
and
andl
cmp
and
jb
nop
sbb
imul
inc
test
repnz
sub
push
mov
scas
mov
stc
mov
jp
enter
das
call
rcr
addr16
lock
xor
into
cmp
enter
std
dec
jle
pop
mov
mov
xchg
mov
and
cmp
jnp
inc
adc
inc
push
in
aas
pop
push
test
push
jmp
jg
jae
loop
imul
bound
xchg
movsb
pusha
cmc
jnp
negb
adc
xchg
cli
out
jg
leave
inc
add
lods
jl
cltd
adc
ja
das
cwtl
fimuls
mov
ret
hlt
pop
icebp
hlt
lret
fldt
mov
sbb
mov
inc
push
int3
inc
mov
pop
sub
push
jge
shrd
out
jmp
lret
rclb
mov
and
push
iret
loope
call
cli
addr16
sahf
scas
inc
cmpsl
stos
add
mov
cmpb
dec
scas
mov
in
mov
psrlq
sbb
cmp
mov
shl
add
pusha
dec
call
dec
leave
imul
out
and
cli
ljmp
mov
xor
and
jecxz
insb
cli
std
sbb
push
pop
test
stos
clc
aad
mov
mov
pop
arpl
dec
ja
and
mov
mov
fs
mov
xchg
cmpsl
mov
fisttps
sub
es
lea
jae
data16
mov
and
popl
enter
aad
inc
push
cld
sbb
movsb
cmp
fs
add
lahf
adc
adc
lcall
cmpb
sbb
pop
jae
cs
and
fdivl
push
dec
mov
mov
test
pop
gs
test
out
data16
adc
add
das
call
scas
mov
sbb
pushl
or
repz
movsl
mov
ja
fnsetpm(287
or
sbb
sti
push
push
push
lahf
mov
adc
mov
mov
mov
fldenv
xchg
mov
insl
leave
adcb
cmp
les
icebp
stos
lds
mov
mov
das
stc
dec
test
stc
jmp
mov
stos
xor
das
mov
leave
and
fistpll
lods
fbstp
push
popa
mov
dec
cmp
loope
pop
jg
fnstenv
out
stc
xorb
mov
push
leave
dec
and
adc
dec
fmull
sub
fcmovbe
dec
or
pop
ret
push
mov
push
sbb
dec
mov
pop
adc
pushf
ja
lods
aaa
push
loope
jp
dec
jg
out
push
hlt
sub
mov
ret
xchg
loope
ja
es
or
mov
jg
sub
push
pop
push
subps
cmp
or
cmc
test
push
mov
pop
mov
loop
jo
inc
or
push
pop
add
stc
ffreep
cmp
fdivrl
stc
cmp
inc
xchg
mov
out
movsb
cli
lea
jne
and
mov
jmp
mov
cmc
loope
sbb
xchg
stos
mov
mov
ret
insl
outsb
inc
orb
xchg
into
popf
sarl
mov
sbb
xorl
aam
lea
js
mov
stos
cltd
cmp
loop
outsb
lret
adc
xchg
xlat
imul
pop
rclb
sbbl
xchg
cmp
push
stos
jg
or
rorb
mov
lock
add
push
mov
fs
mov
add
cmp
daa
push
pop
xchg
adc
div
jno
and
push
sti
push
jmp
xchg
dec
mov
and
es
mov
push
push
pop
xchg
addb
mov
test
xchg
sarb
popf
ljmp
dec
jnp
cltd
cmp
jg
and
fmulp
fs
pop
out
daa
pop
and
pop
jg
ret
bswap
xor
dec
dec
cmp
push
outsl
cmpsl
push
test
lds
ret
jnp
xor
insl
mull
xor
test
push
fbld
mov
xchg
mov
add
mov
add
mov
loopne
xlat
inc
add
pop
int
gs
push
ss
out
jg
and
in
pop
xchg
hlt
push
idiv
dec
push
inc
lea
mov
xchg
inc
frstor
pop
or
cmp
mov
dec
mov
jae
jl
fadds
dec
jle
int
mov
jle
cmp
dec
loope
jno
shl
scas
es
in
mov
cli
iret
dec
cmp
adc
mov
dec
pusha
or
sbb
cmp
xorl
cmp
adc
inc
cmp
push
mov
call
scas
mov
mov
jo
aam
lea
cltd
pop
sbb
scas
out
push
fwait
adc
mov
daa
rorl
jbe
push
orl
ja
xor
or
imul
js
xchg
jle
dec
xchg
dec
insl
lahf
pop
nop
movsl
sbb
push
lock
les
mov
in
orb
lds
addr16
popa
xor
lret
sbb
adc
leave
cmc
fimull
xchg
rcr
pop
dec
xchg
pusha
dec
adc
xor
mov
test
sahf
ret
in
aas
sbb
jmp
push
pop
ja
int
push
mov
dec
movsb
nop
cmc
loopne
push
shlb
pop
test
xlat
aaa
inc
cltd
sbb
push
push
enter
mov
cmp
push
jb
mov
cmp
push
dec
imul
test
fbld
sbb
pop
sarl
or
mov
mov
iret
adc
mov
sub
js
inc
xchg
sarl
mov
test
pop
sbb
into
and
ds
jge
nop
movsb
inc
lret
in
in
mov
hlt
iret
mov
jbe
xor
and
dec
push
aaa
shll
or
jae
jle
sub
lret
into
adc
jl
pusha
mov
cs
repz
stos
mov
cld
lea
push
imul
cmp
sbb
cmp
cmp
and
adc
hlt
dec
cmp
aam
xor
dec
test
fsubl
out
jo
cmp
mov
jmp
inc
xchg
adc
jmp
jae
out
scas
jnp
lahf
jae
fistps
and
fildl
pusha
sbb
pushf
je
or
call
cli
xor
adcl
push
test
mov
sub
sbb
pop
fwait
outsl
popf
mov
dec
pop
add
test
sub
jmp
pop
push
int
adc
stos
aad
shlb
loope
mov
repz
fs
hlt
mov
std
lret
jne
dec
jp
mov
xor
in
fdivl
xor
mov
js
jp
ret
stos
mov
sbb
mov
sub
or
imul
enter
xchg
test
out
push
outsl
clc
xchg
jne
mov
and
scas
or
push
xchg
bound
ret
xchg
popa
cmpsl
jo
rcl
cmc
mov
sar
in
mov
out
out
jbe
loopne
adc
outsl
lcall
xchg
data16
clc
push
pusha
in
rclb
stos
xlat
cmc
loope
decb
and
mov
fcoml
cwtl
aad
repnz
leave
xchg
sub
cld
pop
pop
pop
xchg
shlb
xchg
push
cwtl
pusha
mov
sub
loope
xor
lcall
inc
fidivrl
sub
mov
in
sarb
arpl
sbbl
xor
mov
outsl
mov
pushf
aam
xor
lcall
jmp
in
mov
xchg
mov
mov
das
scas
lret
cld
loop
or
mov
xlat
pop
lahf
mov
sbb
ds
xor
mov
cmpsl
popa
mov
and
push
pop
push
cmp
mov
sbb
jl
push
pop
ret
int
pop
mov
arpl
lods
or
loopne
add
jg
ret
jle
push
arpl
inc
push
repnz
das
mov
or
dec
or
aad
mov
adc
mov
dec
xchg
mov
xchg
xchg
mov
dec
outsl
cmpl
add
lods
pop
stos
loopne
shl
out
test
xchg
push
lret
cmp
icebp
data16
loope
push
mov
pop
repnz
std
roll
mov
add
mov
popf
and
test
dec
cltd
dec
bound
mov
jns
pop
jmp
ja
pop
add
in
push
out
mov
add
roll
jae
push
push
jge
insb
mov
lahf
fists
jle
mov
push
sbb
sbb
jp
inc
or
sbb
lea
hlt
cld
adc
cwtl
sahf
adc
pop
pop
and
jmp
push
mov
shr
pop
mov
clc
repz
jge
popf
inc
sbb
dec
movzwl
sbb
pop
inc
cmc
scas
fst
xchg
cltd
lahf
ror
fadds
adc
jmp
fiaddl
push
inc
pusha
adc
mov
icebp
and
mov
cmpb
push
notb
pushf
push
and
mov
ss
mov
xor
fstpt
cmpsb
ss
mov
ficompl
call
jbe
cmpsl
pop
aaa
inc
jge
scas
cs
jno
xchg
test
xlat
mov
lods
ret
mov
lods
xchg
pop
sub
jae
rorb
mov
xor
sti
cmp
cmp
or
jp
int3
mov
fs
outsl
sbb
cmp
fstl
sbb
mov
xchg
pop
xor
jecxz
testb
sub
gs
out
das
rorl
pop
xor
mov
pop
xchg
fldcw
xchg
call
or
enter
xlat
inc
lods
leave
movsl
pusha
pop
sub
pop
add
cwtl
in
add
sub
sub
bound
in
sar
fdivrp
push
pop
ss
xchg
stos
push
test
into
popf
jmp
lret
aaa
xchg
iret
in
mov
sti
pushf
push
dec
arpl
xchg
jecxz
je
pop
shrb
dec
pop
sbb
sbb
mov
dec
xor
xor
cmpsb
hlt
mov
arpl
sub
add
scas
mov
and
and
or
mov
enter
xchg
cmp
lds
shlb
dec
jmp
dec
push
out
push
insb
test
pushf
push
loopne
pusha
push
inc
push
incl
pusha
mov
and
mov
sahf
fisttpll
push
out
sub
or
and
shlb
sub
xor
ds
jns
int
fiaddl
in
aam
and
pop
enter
mov
sahf
je
inc
sub
or
add
push
fidivrs
cmp
cwtl
movsl
test
stos
lahf
jge
jmp
push
clc
in
cmp
lahf
aam
outsb
fwait
mov
mov
mov
dec
cs
fiadds
xor
es
dec
cmp
dec
shl
insl
add
dec
sub
xor
add
adc
dec
mov
push
daa
das
add
lock
inc
and
dec
inc
cmpb
cmpsb
dec
ret
imul
addb
aam
ret
cmpsl
stos
repz
addr16
out
xorl
add
jno
push
inc
test
pushf
push
xchg
jl
lds
test
lods
dec
pop
int
ret
pusha
ret
xchg
mov
adc
adc
lret
ret
mov
dec
jns
jno
es
into
sbb
icebp
nop
inc
pop
sub
rolb
and
sub
jle
shrl
pop
pop
mov
mov
adc
out
sub
aam
mov
daa
pop
outsl
sbb
test
dec
xor
fisttps
stos
push
mov
and
pop
imul
inc
push
stc
rorl
fcoms
sarl
sub
mov
mov
cmp
xor
cs
mov
xchg
mov
sbb
pop
jge
cmc
aam
lods
xor
sub
cwtl
std
pop
adc
loopne
jae
data16
inc
repz
cmp
sarb
aaa
movsb
add
or
xchg
mov
pop
inc
xor
xor
lods
in
shrb
dec
out
xorb
push
adc
mov
cmp
dec
cmp
mov
scas
iret
fs
lods
mov
jge
lahf
insb
mov
sbb
lcall
push
xchg
movsl
and
decl
pusha
push
cmpb
out
sahf
out
mov
dec
lret
fs
mov
out
cmpsl
xor
les
arpl
add
mov
sbb
mov
movl
jg
mov
js
movsl
or
sbb
fidivs
stc
cwtl
cli
fstpt
dec
add
cwtl
pop
inc
popf
in
ss
mov
or
ljmp
loopne
shll
fs
daa
mov
mov
inc
insb
mov
fisubl
pop
push
mov
ja
cwtl
outsl
scas
sbb
and
add
in
jbe
sti
mull
mov
sub
fildl
lea
pop
rorb
aad
bswap
pop
fcmovnb
and
lret
jl
dec
add
fwait
sub
lcall
sti
in
sub
xchg
pop
stos
add
cs
int
jns
adc
cmp
push
sti
and
nop
jle
cmpsb
lds
fadd
mov
daa
jno
lods
rcll
cmpl
dec
mov
ja
add
mov
scas
adc
cmp
mov
outsl
loop
jne
pop
dec
adc
add
scas
mov
lcall
movsl
insb
in
fucomp
int3
clc
dec
jb
and
mov
sbb
imul
hlt
mov
inc
xchg
addr16
sbb
pop
or
sub
ss
pop
add
cltd
dec
mov
push
cmp
sbbb
or
stos
jb
sub
jns
out
sbb
add
mov
in
mov
divb
shlb
mov
cwtl
mov
movl
mov
sbb
fldt
mov
jge
sti
ja
stos
outsb
arpl
pop
call
shlb
push
mov
and
loop
mov
cmpsb
icebp
or
movsb
add
iret
or
xor
cld
and
gs
in
mov
inc
in
sub
ja
lock
cld
je
xor
aad
xchg
lock
cltd
enter
pop
inc
shl
or
mov
stos
jl
adc
or
into
push
jp
pop
pushf
stos
data16
mov
cmpsl
pop
insb
les
movsl
dec
or
jge
mov
jb
in
call
fs
ss
test
cmp
jbe
fsubr
pop
mov
push
popf
inc
xor
icebp
arpl
gs
inc
out
add
xor
ficomps
push
clc
in
xor
add
mov
in
mov
jp
adc
in
mov
pop
stos
or
mov
ret
cli
mov
aam
loopne
gs
mov
sbb
jle
inc
sti
sbb
in
push
loop
icebp
int
je
xchg
push
dec
lret
and
jb
add
sub
jo
sub
jmp
sahf
push
push
add
mov
add
jne
gs
adc
push
jecxz
das
inc
pmulhw
lret
xchg
mov
fcomps
sbbl
lahf
dec
pop
cli
jns
inc
sub
and
jno
sub
dec
or
loope
xor
sbb
push
cmp
dec
push
clc
loope
mov
sbb
sti
loopne
stc
out
inc
xor
sub
je
sbb
ss
insb
jnp
pop
dec
inc
xor
xor
lahf
dec
mov
ffreep
push
outsl
in
mov
pushf
imul
mov
xchg
mov
mov
or
and
inc
jl
pop
stc
xor
in
les
test
jnp
fcoml
sub
adc
cmp
hlt
sbb
scas
dec
cmp
fldt
sub
fistps
out
aam
or
mov
sbb
shll
mov
add
mov
js
cwtl
fwait
jnp
dec
inc
xor
es
sub
mov
jp
and
jb
and
pop
pop
cwtl
insl
jne
std
sbb
fdivrl
das
fsubrs
fmuls
imul
jle
add
shlb
sub
sbb
je
xchg
sub
daa
sbb
dec
test
mov
lret
imul
jmp
or
dec
mov
mov
out
sub
dec
push
into
std
in
adc
dec
push
xchg
add
andb
jg
xchg
push
dec
sar
mov
lret
popa
daa
es
mov
sbb
sbb
inc
bound
mov
push
xor
or
dec
jmp
push
pop
mov
push
repz
stos
mov
imul
jl
mov
ret
mov
xor
rcr
cmpsl
pop
loope
adc
cmp
sbb
imul
cs
push
mov
mov
shl
jecxz
inc
mov
inc
sub
xchg
mov
ds
mov
mov
jns
daa
testl
movsb
lret
jle
int
lds
push
adc
dec
xorb
test
jmp
inc
lods
push
inc
mov
dec
mov
lret
pop
ja
ficoml
sbb
pop
jo
loop
leave
mov
pop
cmpl
loopne
int3
xchg
test
jnp
test
mov
arpl
pop
sbb
sbb
xor
aas
mov
out
sti
sub
push
cmc
push
test
pop
addr16
or
adc
pop
adc
fstps
dec
dec
sub
mov
sub
adc
aas
lret
enter
shl
push
and
arpl
sbb
add
add
fimull
in
jae
ja
inc
sbb
push
sbb
jp
mov
sbb
inc
nop
and
mov
or
loope
pop
dec
pop
inc
xor
sbb
add
jl
mov
cwtl
or
call
jge
pop
loopne
jb
and
fdivrs
ds
ret
movsb
or
jp
pop
push
jno
stos
lock
test
rcrb
inc
pmullw
stos
movsb
adc
in
aad
sub
icebp
mov
cmp
jno
jle
loope
lds
out
cmp
dec
fcompl
aam
cmpsl
bound
in
das
mov
mov
jne
frstor
xor
in
mov
jp
loope
lcall
loopne
mov
pop
jo
pop
dec
mov
dec
mov
test
sbb
push
dec
sahf
es
loop
pop
dec
add
shlb
mov
mov
inc
outsl
sti
xor
repz
sbb
data16
mov
pop
push
mov
stos
and
push
mov
movsl
dec
and
ficoml
xor
push
mov
ss
cld
div
xlat
and
insb
test
or
fnstenv
dec
inc
xchg
ljmp
lahf
inc
gs
addl
sbb
xor
imul
je
stos
je
lods
sbb
xchg
sub
pop
fcmovnb
div
xor
repz
dec
frstor
popa
mov
mov
decb
test
mov
pop
lea
fiadds
arpl
pop
bound
daa
pop
add
into
fisttpll
stos
and
pop
adc
mov
fcmovne
mov
sbb
icebp
pop
dec
in
inc
out
and
arpl
sub
std
lret
in
mov
pop
pop
in
or
lds
jbe
test
mov
icebp
inc
shll
pop
push
lods
adc
outsb
int
jne
aaa
cs
mov
add
mov
push
bound
das
mov
dec
movsb
and
mov
icebp
sub
push
cmpb
fcomi
aaa
mov
jo
loopne
push
add
inc
std
inc
jmp
add
pop
in
pop
xorl
inc
xor
pop
or
xor
ret
stc
pop
daa
adc
mov
xor
in
mov
mov
fs
stos
dec
mov
ret
or
out
jno
adc
or
cpuid
push
dec
push
xor
fnstsw
pop
or
aas
or
in
incb
inc
arpl
mov
outsl
popa
sbb
xor
push
scas
pop
inc
js
test
cs
xor
ret
js
ss
pop
push
lret
pushf
xchg
pushf
cmp
cmc
sbb
fnsave
insl
loopne
push
sub
aam
ds
cmp
out
mov
fstl
xorl
xchg
jmp
scas
pop
xor
and
xor
sub
add
jmp
push
cmp
lea
push
daa
mov
pop
sub
lods
loope
xchg
push
sbb
jecxz
pop
adcl
scas
lods
mov
pop
cltd
or
fs
mov
add
sub
movsb
push
adc
pushw
imul
push
aas
mov
push
mov
les
movsl
inc
xor
push
ljmp
hlt
add
mov
pushl
arpl
test
push
stos
and
push
sub
in
dec
mov
js
pop
es
popa
aas
sbb
lock
cmp
xor
add
rep
xchg
divl
mov
loopne
loope
push
movsb
aas
push
cld
test
cli
fsubrl
pop
inc
mov
stc
inc
add
pop
mov
add
mov
fidivrl
psubd
bound
push
stos
andl
xchg
or
cld
fisttps
sbb
push
cli
and
bound
mov
fwait
pop
add
movsb
loopne
sub
cmp
xchg
les
aaa
sub
cmpsl
jmp
daa
test
pushf
push
sbb
in
loopne
or
cmp
inc
adc
cmp
stos
daa
add
mov
dec
fwait
mov
daa
aam
and
add
jl,pt
rol
or
pushl
iret
fiaddl
sahf
pop
inc
add
jbe
add
das
flds
bound
add
fadds
and
cmp
push
into
cmpb
push
subb
fsubl
into
ja
sub
loop
loope
iret
in
mov
fnstcw
sub
mov
pop
ss
jne
mov
and
dec
cmp
add
sub
popa
inc
imull
subl
cmpsb
mov
inc
mov
adc
repnz
popl
pop
mov
fsubl
ret
lock
cwtl
loopne
aaa
dec
xchg
add
fimull
lds
pop
popf
sahf
in
or
test
sub
pusha
dec
pop
clc
push
pop
xchg
inc
dec
loope
pop
outsl
cmp
jb
imul
jne
jle
lods
in
jno
and
sub
inc
arpl
dec
push
sbb
je
and
hlt
pop
mov
mov
repz
push
sahf
aas
dec
movsb
aam
mov
xor
xchg
push
pusha
in
mov
mov
flds
das
jnp
fcomp
pusha
add
push
add
sbb
inc
push
sub
add
out
stos
push
inc
into
movsl
add
bound
mov
in
lret
arpl
mov
xor
lods
popa
dec
fwait
jae
xor
out
xor
test
movsb
xchg
bswap
lcall
scas
test
es
ret
xor
cmp
jp
out
and
jge
mov
cmc
mov
fmul
sbb
xor
mov
cmp
mov
xor
mov
stos
shr
aas
leave
pop
jmp
fldl2t
add
adc
dec
inc
jmp
xor
sti
xor
jecxz
adc
cmpsb
cmp
notl
out
xor
or
jne
in
sti
inc
push
gs
arpl
cltd
scas
pop
cmpsb
adcb
mov
es
test
jns
enter
or
enter
push
xchg
incb
stos
dec
push
out
stos
leave
mov
fidivrs
nop
mov
aam
and
mov
xchg
vsubsd
lds
pop
lret
mov
ret
push
js
scas
lret
dec
out
loope
pop
sub
mov
incb
add
stos
or
aaa
dec
sub
mov
cli
lods
lock
sbb
cli
mov
and
push
imul
insl
lcall
adc
bound
sub
sbb
mov
jae
test
or
or
stos
jbe
mov
sbb
jb
fcmovne
fsubl
jmp
stos
sti
movsb
in
ds
jle
cmp
daa
out
mov
jo
ret
and
or
decb
sbb
sbb
cmc
inc
std
mov
ljmp
sbb
push
getsec
xor
lcall
mov
bound
push
and
test
arpl
sbb
lret
push
dec
push
in
jle
in
fistpl
out
adc
mov
cld
into
xchg
das
addb
js
sbb
gs
dec
xlat
cwtl
bound
mov
icebp
sbb
inc
pop
movsl
jbe
inc
xchg
pop
aaa
mov
in
and
sbb
ret
ljmp
sbb
fisttpl
sbbl
lret
pop
test
push
repz
outsb
jnp
mov
jp
sub
call
and
lds
shr
gs
rclb
aaa
jle
and
outsl
mov
push
pop
and
xor
in
test
cmp
mov
test
sub
loopw
pushf
or
sar
fstpl
sub
adc
mov
cltd
mov
pop
jmp
jbe
mov
test
inc
mov
arpl
jno
add
je
pop
pop
xor
sti
jg
lds
xchg
outsb
stos
daa
into
mov
inc
xchg
test
push
add
pop
jbe
movsb
mov
mov
pop
jl
cmp
dec
mov
dec
arpl
movnti
sub
testl
movsl
mov
xchg
pop
cmpsb
or
and
mov
js
aaa
js
pop
fistl
add
jmpw
push
and
add
mov
xor
scas
inc
ds
imull
lcall
fiaddl
adc
mov
mov
dec
sub
push
jno
add
jae
pop
movnti
mov
push
add
dec
or
sub
jp
repnz
adc
lahf
mov
and
mov
fs
and
xor
clc
popf
xchg
pop
xor
sub
bound
mov
and
mull
je
mov
rclb
fildl
stc
and
sub
int
hlt
cmp
imul
push
mov
adc
shl
lcall
lcall
dec
add
xchg
test
push
mov
mov
sub
mov
jbe
jle
push
xchg
bound
mov
mov
lcall
shlb
jo
mov
popf
mov
push
insl
fnsave
aaa
push
xchg
sarl
xchg
test
repnz
lret
add
jbe
repnz
adc
pop
or
aaa
lea
addb
sti
stc
repnz
dec
jmp
mov
loope
in
push
call
gs
xchg
jecxz
out
pop
lret
jne
cltd
popf
jno
inc
sbb
pop
jp
lcall
lods
test
xor
push
adc
mov
lea
xchg
loopne
mov
lock
dec
dec
fwait
inc
cli
fisubl
subb
ds
push
jae
bound
mov
sbb
or
inc
negb
lcall
gs
popf
xor
and
inc
mov
mov
jp
inc
jl
mov
sbb
lret
jmp
loope
xor
aas
clc
mov
cmp
xchg
adc
mov
mov
ds
mov
fs
pushl
mov
aas
jo
jp
out
mov
enter
mov
sub
dec
or
ret
sub
je
xchg
jmp
adc
push
or
pop
mov
mov
push
adc
cmp
inc
adc
sub
push
mov
jge
outsl
ljmp
lret
inc
sarl
mov
mov
arpl
xlat
lods
jp
outsl
xchg
push
push
addl
xchg
clc
pop
fisubrs
pop
inc
les
je
das
mov
adc
adc
lods
popf
fwait
out
iret
hlt
mov
add
rdtsc
iret
dec
popa
cmp
nop
push
fadds
lret
xchg
cli
xor
or
loopne
call
push
dec
mov
popf
pushf
enter
lahf
popf
negl
or
adc
call
testl
cmc
shr
repnz
testl
cltd
lret
stos
shrl
sbb
out
decl
mov
xchg
rolb
inc
push
push
mov
popf
sbb
mov
sbb
lods
out
enter
jno
cmp
idivb
daa
stc
jl
dec
iret
cltd
pop
test
xor
mov
push
inc
adc
jle
or
adc
popf
mov
mov
sbb
pop
data16
cld
mull
inc
out
gs
in
push
ljmp
or
push
test
scas
mov
xor
xor
mov
cmp
shrb
cli
das
hlt
lahf
push
or
sbb
ss
ja
lea
shl
icebp
data16
add
jl
popf
enter
call
dec
ja
pop
pusha
sub
sub
mov
or
mov
xor
int3
cmp
aam
imul
inc
jmp
fisubl
nop
sub
xor
and
and
lahf
test
mov
popa
add
xchg
scas
pop
test
int3
xlat
lret
sub
scas
push
pop
fimull
cmp
xchg
mov
aam
fsubrl
bound
push
insl
in
mov
xchg
xor
sarl
mov
cmpsb
aaa
fwait
test
call
lock
cmp
inc
pop
mov
and
in
cmc
pop
scas
sub
adc
lods
cmp
testb
xchg
cld
mov
fdivl
out
inc
cmp
xchg
cs
jno
lahf
cs
sbb
pop
out
mov
adc
nop
lods
inc
jg
ja
cmp
and
mov
fs
les
aam
stos
mov
setns
mov
mov
repnz
aaa
test
add
popf
sub
fs
lock
ficoml
xchg
clc
std
cmpsb
aaa
icebp
mov
fimull
cmp
xchg
loop
leave
outsl
push
cmp
push
popa
aam
sub
leave
inc
stos
jge
es
sub
out
mov
jnp
xor
mov
int
dec
movsb
push
scas
aas
sti
and
frstor
pushf
es
xor
and
cld
sti
aad
inc
jo
fcmovu
mov
mov
nop
pop
dec
cmc
loope
inc
or
jns
jne
rolb
inc
xchg
aad
and
xor
movsl
cmp
repz
dec
adc
mov
out
xchg
inc
xchg
outsl
mov
lahf
adc
pop
xor
aaa
jle
xor
leave
mov
mov
push
add
fs
xchg
push
cmpsb
test
inc
mov
add
jbe
mov
stos
sub
call
sbb
cltd
sbb
pop
add
mov
jbe
and
jg
sbb
test
addr16
pusha
sbb
mov
mov
pop
pop
lahf
orb
sbb
mov
popa
xor
mov
push
push
xchg
or
lods
add
or
lods
lods
jne
jecxz
adc
mov
lock
mov
mov
stos
sub
imul
pop
fldt
popa
pop
or
add
testb
inc
stos
pop
outsl
mov
loope
test
push
adc
lods
loop
add
or
mov
inc
mov
lea
mov
push
mov
movsb
add
jo
xlat
sub
push
mov
jge
mov
adc
xor
jnp
mov
aaa
test
mov
repz
xchg
or
sbb
out
adc
lcall
push
subl
push
fistl
in
xchg
jecxz
jae
adc
ss
ret
jae
insl
pop
pop
jo
je
iret
sub
xchg
shl
notb
out
pop
pop
or
aad
mov
sub
push
mov
sbb
mov
jbe
ljmp
out
or
les
pop
ret
mov
pop
sbb
lret
cmpsl
or
out
outsl
mov
out
scas
or
ret
lods
sti
cli
sti
jmp
jge
push
xchg
pop
pop
mov
jp
movsl
imul
jo
aam
sbbb
adc
hlt
push
dec
or
aaa
enter
sbb
inc
popf
dec
mov
test
or
sub
dec
aas
mov
scas
jp
xor
lret
lods
jno
jo
frstpm(287
movsl
jg
aad
popa
mov
lret
sti
mov
mov
enter
dec
inc
fucom
nop
or
jg
inc
mov
aaa
popf
jg
xor
push
pushf
add
je
xchg
xor
dec
inc
xor
cmp
and
sbb
std
push
mov
mov
dec
hlt
dec
out
push
adc
lahf
lret
aam
incl
push
pop
add
mov
dec
gs
in
push
or
sub
xorb
scas
push
dec
and
xor
loop
or
repnz
jge
mov
arpl
test
lods
and
push
lea
leave
dec
and
push
loopne
test
fbstp
mov
fmul
call
fmull
mov
mov
int3
jae
fdivrs
lcall
jno
sbb
jnp,pt
imul
loop
pushf
into
data16
shr
repnz
pop
sbbl
rorb
or
imul
pusha
mov
outsb
cmpb
cmovns
sbb
loope
mov
add
shrl
stos
sbb
xchg
bound
rol
pop
fildl
sbb
adc
fdivr
sahf
sbb
push
movsb
movsl
popa
cmp
ror
in
mov
jnp
or
dec
scas
mov
je
in
mov
dec
aaa
dec
icebp
popa
xchg
fidivs
shlb
pop
adc
cs
divb
adc
jbe
push
mov
aas
lock
mov
jbe
and
dec
andl
push
adc
push
cmp
outsb
dec
nop
xchg
rcr
push
xor
xor
cmc
in
stc
into
sbbl
xlat
pavgb
add
outsl
out
dec
lret
xlat
rorb
ds
test
test
pop
xchg
repz
cmpsb
jle
xlat
insl
subl
jmp
xchg
popf
stos
ds
xor
jg
fs
dec
movsl
mov
xchg
sub
mov
movsl
add
scas
mov
mov
xor
mov
xorb
adc
add
mov
in
cmp
adc
repz
sbbb
push
bound
xchg
mov
fists
xor
pop
sbb
loope
ss
push
out
inc
sub
shll
inc
adcb
insb
and
jmp
dec
inc
int
sbb
and
inc
adc
push
mov
movsl
push
pop
orl
mov
sub
xchg
xchg
shl
nop
mov
cli
xchg
mov
imul
pop
jns
bnd
push
test
das
nop
scas
push
cmpsl
mov
push
lahf
pop
inc
pop
inc
lret
mov
hlt
pop
iret
or
push
and
leave
adc
cmp
mov
mov
ss
push
and
mov
lret
jns
popf
push
mov
mov
scas
cld
sbb
dec
stos
and
dec
hlt
cltd
aad
jmp
je
aam
add
dec
pop
jo
mov
leave
cmp
outsb
inc
iret
xlat
pusha
sahf
or
cs
sbb
repz
rcrl
jb
sbb
addr16
aam
xorb
cmpl
and
ret
fs
into
pop
xrelease
bound
cmp
jp
dec
mov
xchg
lds
je
push
lcall
mov
adc
jge
mov
and
scas
xchg
fwait
les
adc
mov
sbb
jp
mov
stos
cs
ljmp
jne
xchg
mov
xchg
sbb
pop
rep
inc
add
dec
dec
mov
adc
es
hlt
fsubrp
out
or
xor
pop
jo
out
hlt
aam
fidivrl
mov
das
out
enter
xchg
jns
mov
push
fcomp
xor
jne
inc
or
loop
pop
mov
fsubrs
xchg
jo
pop
in
imul
jae
fldcw
into
xor
fcmovb
xor
das
dec
mov
push
xor
out
setne
out
push
mov
and
xlat
mov
sub
push
xlat
inc
stc
push
test
insb
and
cs
add
mov
xor
pop
iret
adc
xor
sbb
fildl
cmp
popf
mov
jno
mov
xchg
sub
push
pop
fidivs
mov
lret
lock
jle
test
xor
push
or
dec
in
mov
das
icebp
inc
jge
sahf
loope
xchg
mov
cmp
orb
push
pusha
or
ror
or
sbb
add
addr16
insb
push
dec
or
lods
or
jecxz
jl
sbb
and
shl
out
pop
mov
adc
mov
pop
gs
mov
pop
mov
arpl
xlat
movsb
lods
mov
stos
sbb
sar
xchg
pop
inc
mov
clc
popa
iret
mov
pop
pop
jbe
and
mov
daa
cmpsl
les
inc
add
pop
out
fists
stos
daa
loopne
lret
insl
pusha
out
ljmp
fcmovb
xchg
xchg
test
xchg
push
push
inc
sbb
pop
or
and
aaa
je
scas
shlb
jge
aam
lods
push
es
add
ja
mov
in
and
jmp
dec
xchg
aas
mov
pop
test
out
or
pop
loopne
ret
cmovle
ret
pop
sti
mov
in
aas
mov
push
nop
push
and
mov
repnz
stc
cmp
gs
cwtl
outsb
push
in
fstpt
cmp
jg
mov
insl
mov
arpl
xlat
idivb
pop
mov
pop
lods
sub
add
repnz
stc
and
push
clc
outsl
sub
sarl
aas
dec
mov
sub
jne
jmp
lahf
add
xchg
stos
lret
lea
push
imul
add
pop
insl
sub
mov
push
push
pop
call
adc
inc
bound
lret
push
jae
ret
das
sub
cmp
pusha
add
aad
divb
test
mov
xchg
jne
mov
cli
adc
in
xchg
scas
ds
sub
lods
xor
mov
insb
xchg
bound
into
into
ss
cwtl
popa
pop
ljmp
sub
out
xchg
cli
inc
loop
xchg
lcall
inc
mov
sub
or
inc
test
jno
rol
sub
movsb
mov
sbb
xchg
mov
or
enter
add
xchg
scas
mov
or
push
es
fs
xor
cmp
popf
leave
pushf
je
movsl
idiv
mov
aam
mov
dec
ljmp
lods
ljmp
add
mov
jnp
sbb
mov
int
pusha
mov
cmpsb
cmp
xchg
cmpsl
int
je
push
jmp
mov
xchg
xor
inc
and
cmpsb
outsb
ret
push
in
mov
xchg
mov
scas
ds
xchg
subl
paddusb
push
cbtw
cmpsb
icebp
std
mov
fiaddl
xor
adc
jle
out
xor
pushf
in
sahf
or
dec
rcll
scas
les
lock
jecxz
mov
xor
das
mov
je
imul
cmp
clc
ja
out
mov
sbb
sub
sbb
shrd
movsb
lods
daa
and
push
loop
testb
leave
mul
inc
popa
jmp
mov
mov
lds
icebp
pop
icebp
adcl
ss
xor
jg
pop
adc
hlt
and
shrb
cmp
and
ljmp
cmp
and
sub
and
pop
iret
add
mov
popa
fcmove
cmp
lds
push
mov
leave
xchg
test
out
mov
bound
push
sbb
jle
mov
aad
mov
cltd
loopne
scas
push
add
sbb
adc
lret
dec
and
xchg
xchg
and
test
and
mov
ds
inc
rorl
fistl
or
rclb
cs
scas
pop
mov
xchg
push
cld
scas
jge
jo
mov
dec
pop
inc
aaa
insb
mov
je
fucom
mov
fdivrp
adcb
std
imul
subl
or
xor
hlt
xchg
inc
lahf
insl
pop
jp
mov
jb
jae
push
inc
jno
inc
mov
mov
add
mov
jg
int3
outsl
xchg
cltd
in
sbb
jp
mov
pop
pop
or
call
mov
and
int
mov
jl
push
jae
fmull
xchg
popa
inc
popa
pop
push
xor
fiaddl
shll
addl
cmp
cmp
int3
and
cmp
and
mov
addr16
mov
nop
adc
ret
std
es
fnsave
xchg
test
fistl
mov
jno
push
jle
push
loopne
bound
repnz
sub
mov
lea
aas
das
jb
ljmp
push
in
arpl
mov
add
das
lea
sub
in
inc
lds
test
notl
je
jg
and
push
mov
push
outsb
push
int
sub
inc
rcr
cvtpi2ps
adc
mov
outsl
mov
mov
mov
jg
sub
scas
aad
mov
xlat
jb
inc
xor
movsl
rcr
mov
jns
pop
aaa
fldt
aad
push
adc
popf
cmp
or
mov
std
leave
shrb
movsb
pop
push
pop
clc
adc
aam
enter
daa
aam
jl
and
lods
adc
xchg
les
jbe
stc
movsl
push
je
inc
lea
call
daa
shl
dec
pop
sub
test
and
ljmp
inc
iret
add
mov
jmp
dec
out
ret
adc
in
js
jecxz
mov
and
roll
push
aam
je
jnp
jl
incl
cmp
and
jg
dec
xchg
test
cmpsl
rorb
and
pop
fwait
popa
jecxz
push
inc
loope
mov
cld
popa
test
stos
fstps
mov
jo
inc
pop
and
adc
cltd
mov
cmp
push
or
sub
pop
pop
push
jae
mov
rcr
jno
mov
ret
dec
sbb
sub
dec
adc
dec
outsb
cmp
cld
sub
insb
cmp
neg
lcall
push
pop
mov
pop
js
or
push
jno
push
pop
call
adc
iret
jge
nop
in
jns
mov
scas
jo
ljmp
mov
xor
and
iret
stc
decb
adc
movsl
mov
sbb
push
push
pop
js
xchg
adc
pop
repnz
xor
addr16
cmp
cli
subl
sub
mov
inc
ss
jbe
xor
push
xorb
test
imul
loop
movsb
hlt
sbb
fstpl
pop
jns
and
push
jecxz
outsl
jle
stos
out
or
inc
scas
outsl
pop
das
repnz
in
daa
iret
pop
xor
scas
mov
xor
sti
shrb
into
xchg
mov
ficoml
jnp
and
inc
fidivrl
jnp
cmpsl
sub
fldl
lods
loopne
sbb
jne
add
pop
or
mov
xor
inc
sub
jb
aas
daa
test
scas
dec
lock
mov
cmp
or
sbb
shr
int
pusha
push
xchg
push
push
pop
push
mov
inc
in
call
xor
fdivl
rol
ds
xlat
mov
movsb
dec
fistl
or
popf
mov
push
xor
sti
jl
incl
dec
mov
cmpsb
inc
jle
int
mov
add
aas
cmpsb
sub
push
mov
lock
out
xor
cltd
and
adc
ljmp
jno
test
pop
rcrb
push
dec
add
outsb
jmp
push
add
mov
cmpb
dec
scas
outsb
xchg
int
push
pop
fstl
es
ss
in
sarb
or
adc
push
lods
push
pop
or
loopne
cltd
dec
sbb
aaa
cwtl
cltd
mov
mov
xor
les
dec
push
imul
ffreep
xchg
loope
or
lock
sbb
mov
push
popa
adc
jo
cmp
js
xchg
pop
pop
xor
mov
ja
xchg
pusha
and
int3
jae
dec
xchg
pop
mov
dec
adc
das
popf
mov
cmpsb
jmp
mov
shlb
cmc
popf
or
jne
ja
pop
stc
push
xchg
mov
xchg
pop
mov
xchg
mov
push
in
inc
ss
shlb
mov
jne
jbe
pop
lods
in
or
lock
cltd
adc
sub
add
adc
addl
stos
popf
mov
cmp
mov
adc
es
mov
stc
out
sbb
ljmp
xchg
pop
xchg
sbb
push
cli
mov
mov
pop
loope
sub
sarl
cmp
xchg
arpl
fisttpll
xor
and
adcl
fimuls
jb,pt
adc
lahf
cmc
sahf
scas
fsubl
jb
imul
lods
aas
mov
pop
xor
pop
sub
loopne
inc
jge
popl
add
jl
ja
scas
jl
fldcw
xchg
repz
push
or
sti
subl
ljmp
daa
aad
mov
popa
push
shlb
into
or
push
adc
pop
cmp
mov
subb
clc
iret
daa
repnz
sub
mov
xor
stos
arpl
insb
jle
jge
imul
jmp
adc
add
cmp
xchg
xor
das
adc
dec
movsl
mov
dec
mov
xor
adc
or
mov
repz
inc
or
imul
insb
mov
push
cmpsb
pusha
lds
sub
adc
adc
ds
rorl
rcll
jno
inc
out
nop
sub
push
sub
or
push
ret
mov
test
adc
outsb
orl
mov
cwtl
sub
pusha
jmp
and
cs
dec
int
cli
push
and
xor
cmc
jae
in
mov
hlt
pop
hlt
adcb
dec
adc
rorl
mov
mov
out
jge
mov
mov
bound
inc
test
adc
mov
cmp
xlat
xor
out
enter
mov
xchg
leave
orl
mov
dec
or
adc
int
loopne
add
adc
and
cmpb
lcall
into
mov
addr16
xor
fs
jl
add
mov
bound
je
aam
or
and
push
fists
adc
cmp
lcall
out
jge
sbb
jg
sbb
jmp
out
pop
mov
mov
test
repz
outsl
jg
test
call
popa
pop
and
mov
bound
push
out
sbb
pop
test
insl
daa
push
inc
stos
push
mov
mov
lcall
mov
and
imul
cmp
gs
pop
mov
loope
add
ljmp
adc
lods
and
inc
loope
or
mov
jp
and
notl
dec
adc
mov
cs
mov
cmp
xorb
aas
cmp
push
cmp
and
dec
cmp
pushf
cmp
pusha
loop
jbe
add
push
ljmp
add
sbb
sti
pop
stos
into
fldt
dec
mov
pop
test
popf
mov
pop
ljmp
inc
mov
and
les
ds
pop
cmp
sarb
jo
cmp
cmp
adcb
add
call
imul
insl
cmp
lods
push
cwtl
test
or
jl
xchg
fbstp
data16
cs
jl
cld
out
pop
dec
sub
iret
or
mov
add
pushf
mov
insb
jae
pop
jge
or
repz
xor
push
mov
cmp
xchg
sbbb
mov
pushf
lret
inc
or
add
das
andb
icebp
rcrl
inc
sbb
or
sub
test
mov
in
xchg
push
ret
sub
cs
mov
ja
out
jl
scas
push
fwait
add
shl
dec
sub
and
inc
mov
cli
xchg
mov
xorb
xchg
jp
push
sbb
jg
bnd
add
adc
sub
sahf
mov
test
mov
ds
dec
dec
mov
or
or
pop
or
fsub
push
jb
mov
rclb
dec
push
sub
adc
outsb
out
jno
js
out
test
push
mov
leave
fstpt
cmp
xor
or
xchg
outsb
adc
push
xchg
fs
addr16
jmp
orl
or
inc
adc
inc
leave
scas
adc
leave
mov
adc
ficompl
jmp
pop
loopne
mov
icebp
mov
daa
adc
sub
inc
jp
push
jmp
fmul
pop
call
mov
sbb
aaa
mov
push
mov
xchg
cmp
push
scas
and
sbb
dec
cmp
xor
sbb
push
std
dec
xchg
repnz
call
mov
mulb
or
xor
jo
dec
lods
mov
popa
decb
sbb
test
arpl
mov
dec
sub
inc
out
and
dec
sbb
cs
hlt
lock
add
rcll
clc
dec
lret
pop
inc
xchg
arpl
cli
cli
mov
lods
lcall
outsb
popa
shrb
cmp
cwtl
test
mov
adc
mov
mov
adc
lds
cmp
jb
fisubs
adc
test
mov
xor
mov
les
shrl
pop
dec
xchg
or
xlat
push
faddl
push
das
cld
outsb
inc
add
aad
insb
adc
clc
push
lret
pop
movsb
lret
call
fmulp
cmp
scas
jo
ss
mov
jg
dec
or
xorb
aas
sub
ljmp
adc
lret
insb
add
jg
loopne
xchg
cvttps2pi
shll
or
add
xorl
aam
sbb
dec
scas
or
xor
stos
xchg
xchg
jle
inc
aas
insl
sbb
lahf
sbb
nop
mov
dec
jmp
xor
mov
inc
pop
add
std
or
lcall
es
pop
and
mov
inc
inc
mov
mov
fsubs
arpl
adc
pop
call
mov
in
pop
popa
jmp
mov
je
test
popa
mov
push
and
jns
pop
xchg
and
lock
jbe
roll
dec
xor
in
shlb
and
sbb
fiaddl
cs
dec
aad
cli
popf
mov
rol
ss
in
lret
push
jp
push
adc
scas
mov
pusha
push
push
je
ds
mov
dec
sti
and
cld
sbb
xchg
and
add
pop
push
xor
xchg
cmp
jg
ret
sub
test
or
push
xor
icebp
imull
xchg
fdivs
ret
push
ret
in
popa
int3
jge
push
in
mov
dec
inc
pop
mov
aad
mov
out
in
inc
sub
mov
arpl
xchg
cmpsb
test
popa
pop
push
cwtl
popf
mov
out
inc
sub
aas
inc
dec
sbb
test
push
nop
sbb
movd
lcall
lret
in
cmp
jmp
out
cmp
inc
or
aad
ds
out
in
dec
scas
add
xchg
popf
shl
pop
imul
add
mov
push
test
aam
lahf
xchg
addb
jg
adc
or
jne
ficomps
jne
xor
xor
bound
out
jle
jg
js
xor
jb
dec
arpl
push
in
mov
mov
mov
push
adc
mov
adc
and
in
dec
xchg
inc
adc
xchg
xchg
cmpsl
pop
pop
jb
xor
lahf
popa
popa
out
mov
sbb
cwtl
jle
xchg
stc
sti
fwait
int
cmp
inc
test
ret
fdivs
testb
xor
pusha
subl
pop
sub
fcos
and
mov
mov
pop
xchg
dec
fildll
lahf
pop
mov
jmp
jne
mov
dec
repnz
out
cwtl
sub
sub
push
pop
pusha
int3
orl
int
sub
sbb
cmp
add
popf
int3
xchg
stos
cmp
and
loope
or
xchg
pop
add
adc
push
push
shl
fsubs
inc
jl
jmp
mov
clc
incb
addb
shr
popf
add
imul
lcall
mov
adc
push
ret
pop
arpl
dec
sarl
jl
ficoml
mov
sub
lds
in
dec
xchg
adc
mov
cmp
movsl
lsl
and
ret
jg
jl
lods
scas
movsb
int
cmp
xor
jae
shll
mov
mov
and
sub
loopne
dec
mov
insb
mov
xor
call
dec
jge
xor
or
sbb
add
lret
jbe
xor
lock
and
rolb
cs
sub
movsb
jae
pop
imul
sahf
pop
and
outsl
mov
std
out
xchg
mov
pop
shlb
adc
xchg
jle
inc
and
scas
iret
add
sub
movsl
or
icebp
ss
cmp
mov
call
sub
lods
daa
add
imull
scas
out
outsb
mov
mov
dec
lcall
fnsave
insl
cs
hlt
lret
jge
cmpsb
inc
push
mov
jae
push
lods
xchg
es
movsl
inc
pop
inc
and
cli
test
pop
bound
and
loope
sub
jns
imul
dec
shlb
in
enter
jmp
pop
outsb
push
xor
lea
jg
sub
inc
jl
add
in
andl
xchg
sahf
xchg
test
and
mov
adc
hlt
repz
jo
shll
inc
aas
fwait
out
adc
jecxz
adc
jae
mull
in
lahf
xchg
stos
call
mov
xchg
dec
or
fbstp
data16
dec
jns
stos
xchg
js
mov
sbb
cmc
fwait
out
mov
sarb
int3
imul
inc
cmpsl
inc
xchg
into
ljmp
aam
inc
jl
xchg
mov
filds
cmpsl
jle
lahf
mov
cmp
sub
jo
jp
ljmp
test
pusha
out
jo
adcl
ljmp
jnp
cmp
inc
int3
insl
cmp
push
das
xor
aam
mov
dec
sbb
or
push
fisubrl
mov
and
xchg
sbb
mov
ja
stc
inc
inc
mov
sub
pop
out
arpl
cmp
add
das
mov
xor
pop
push
aam
fcmovnb
loopne
adc
or
lock
jo
in
inc
cmp
popf
scas
inc
idivl
gs
jbe
ret
or
push
dec
imul
jmp
cmc
dec
aaa
push
mov
push
out
addr16
shrl
loop
inc
fldenv
sub
fwait
orb
insb
push
ror
rclb
out
int3
or
faddl
loopne
in
mov
nop
ret
outsb
pop
and
int
pop
push
aad
jmp
add
jno
adc
dec
je
loopne
mov
mov
mov
and
jmp
jbe
push
pushl
add
lods
jns
adc
and
sub
mov
sub
xchg
mov
or
fwait
and
popa
dec
inc
hlt
in
mov
fwait
add
xor
push
jecxz
cltd
push
pop
cmpb
lret
test
outsb
mov
sahf
std
jg
lret
scas
inc
add
and
xor
outsl
cmc
jae
mov
test
and
add
cmp
jns
rorl
push
add
and
mov
jmp
and
mov
cmp
or
push
mov
jbe
xchg
cmpsl
xor
xor
pop
jp,pn
repz
xor
testl
pop
lods
outsl
je
xchg
adc
int3
jne
cmp
stos
inc
popf
adc
gs
inc
dec
adc
push
fsts
push
imul
aas
add
xchg
and
push
pop
sbb
fsubl
add
outsl
xchg
inc
dec
sub
xchg
mov
push
pop
xor
sub
mulps
movsl
rorl
adc
mulb
push
jp
and
mov
dec
jno
in
pop
int
or
out
in
shl
aas
bound
out
stos
sub
ss
adc
mov
cmp
pop
add
mov
mov
push
test
aaa
mov
aad
dec
loop
in
push
testl
shlb
lock
sarb
jmp
mov
adc
aas
in
cld
sbbb
push
loope
stos
in
div
mov
cltd
or
mov
lds
sahf
int3
cmpsb
xchg
and
jne
lock
dec
inc
insb
ret
enter
setl
pop
mov
xchg
adc
xor
jns
fsubs
mov
jmp
add
jge
pop
pushl
mov
push
lods
or
xchg
les
mov
mov
call
ret
iret
sarl
mov
mov
test
push
mov
mov
pop
sbb
stc
test
jnp
or
add
mov
fimuls
pusha
xchg
int3
leave
or
andb
inc
jns
icebp
push
dec
and
dec
out
sbb
roll
push
sbb
dec
mov
jle
jo
push
inc
insl
inc
clc
push
roll
mov
jae
leave
in
out
push
jge
movsl
mov
dec
dec
fsubrs
cli
or
mov
mov
test
pushf
add
jge
popa
addr16
scas
lods
xchg
lcall
dec
roll
sub
inc
dec
mov
mov
or
mov
aas
mov
es
ss
repnz
mov
jl
bound
dec
stos
outsb
inc
movsl
mov
lods
xchg
scas
add
in
std
mov
rol
mov
push
int3
xor
subb
fwait
mov
jg
adc
ret
jns
mov
enter
repnz
rorl
fnsave
fwait
out
pop
testb
call
dec
cmp
mov
xor
sbb
int3
sub
xor
inc
pop
push
test
xchg
mov
je
jo
mov
cmp
lea
lock
lahf
cmpb
cld
mov
cmp
nop
out
daa
inc
jb
sub
xor
sbb
xchg
repnz
cli
out
int3
add
ds
ljmp
xchg
jp
iret
call
mov
dec
scas
shrl
ja
xchg
hlt
sub
push
mov
lret
jae
leave
and
mov
push
lea
fwait
mov
test
xchg
movsl
dec
jmp
jne
mov
icebp
mov
cmp
cli
mov
xchg
inc
rcrl
ret
les
insl
cmp
test
xchg
adc
mov
negb
pop
and
and
or
mov
inc
leave
mov
and
jbe
add
cmpsl
pushf
or
inc
fidivrl
and
cld
shll
inc
sbb
js
xchg
popa
insb
xchg
mov
mov
and
mov
pmulhuw
out
hlt
xor
mov
enter
imul
adc
mov
out
lcall
daa
inc
ret
mov
add
in
ljmp
adc
data16
xchg
pop
lock
sti
mov
pop
loope
and
mov
cs
scas
sbb
push
js
dec
scas
insb
jg
sbb
push
adc
xchg
push
jnp
jle
call
ret
pop
mov
mov
xor
mov
mov
leave
lret
sub
or
ljmp
ds
and
jbe
xchg
or
jmp
push
pop
sbb
fwait
sarb
push
popa
aaa
mov
mov
js
sbb
nop
pop
xor
cs
mov
or
fs
dec
add
sub
add
shll
bound
xchg
repnz
adc
cmpl
ljmp
lods
pop
pop
xchg
out
dec
sbb
pop
lods
push
ja
repnz
ds
test
jge
ds
imul
and
test
imul
mov
sbb
into
stc
mov
stc
jecxz
fmulp
cltd
leave
lret
push
insb
loope
mov
in
inc
pop
adcl
rorb
repz
fldcw
push
pop
aas
mov
pop
divl
or
cmpsl
cmp
ljmp
jno
sahf
xorl
pop
adc
popa
pop
std
inc
imul
inc
ds
lret
addr16
data16
dec
jge
sbb
xor
fbld
inc
push
aas
lcall
adc
test
pop
mov
and
mov
fnstenv
inc
inc
ss
mov
sub
and
adc
test
xor
aas
mov
imul
add
push
xor
mov
adc
sbb
inc
dec
subl
push
mov
add
cmpsb
mov
xchg
add
mov
xlat
push
pop
stos
adc
into
sub
mov
repz
adc
jge
bound
sbb
mov
outsb
push
int3
cltd
fs
cli
and
loop
mov
sbb
xor
cld
fsubs
xor
xchg
cmpsl
xchg
mov
test
pop
cmp
repz
cmp
sub
fisubrs
cmp
inc
sub
dec
inc
dec
inc
sbb
insb
cltd
fs
imul
cmp
sub
repnz
fisubl
mov
es
mov
dec
aad
inc
push
hlt
or
in
mov
and
push
and
jle
mov
rorb
fistl
cmp
insl
dec
xchg
fisubrs
leave
fcmovnbe
leave
xor
mov
adc
mov
inc
push
ret
mov
arpl
shr
dec
rcr
out
xchg
dec
adc
cmp
or
lahf
push
inc
jnp
mov
sbb
cltd
arpl
ret
in
mov
mov
add
in
stos
loope
mov
push
icebp
call
lcall
jecxz
mov
popf
imul
scas
dec
jp,pt
sbb
mov
rcll
xchg
push
icebp
clc
test
add
fucomp
mov
push
movd
mov
gs
jecxz
lret
xchg
xchg
or
cmpb
xorb
push
insl
bound
loope
and
push
xchg
mov
xor
push
dec
jle
es
ret
mov
aas
xchg
addr16
daa
xor
popa
mov
xor
stos
pusha
or
cmc
mov
xorl
adcl
in
and
int
adc
test
jge
cmp
movsl
out
adc
mov
lahf
pop
mov
xchg
pop
frstor
insb
jle
cmp
cmp
add
in
inc
dec
out
sub
cltd
shlb
sbb
add
xlat
jg
push
fnstsw
ljmp
push
cli
xlat
hlt
push
lea
mov
inc
leave
mov
mov
int3
mov
mov
shlb
movsl
es
adc
push
mul
add
xor
outsl
clc
and
xchg
jno
jne
xor
sti
shll
and
mov
push
rcr
sub
mov
jno
out
inc
inc
xlat
sbb
loope
loope
clc
out
pop
arpl
push
add
and
scas
mov
daa
div
push
inc
in
inc
cli
and
loope
push
lock
mov
or
ds
outsb
xor
gs
loop
fs
ljmp
lahf
jae
mov
adc
jg
mov
lcall
stos
pop
sub
jle
fsubr
cmp
jns
and
dec
xor
dec
int3
dec
or
jl
aad
push
mov
insb
pop
adc
in
push
xchg
push
addr16
movzwl
adc
xor
outsl
stos
dec
lahf
imul
push
ljmp
mov
mov
and
bound
outsl
out
arpl
ljmp
xchg
adc
in
push
sub
mov
pusha
dec
inc
add
push
mov
adc
add
jae
xor
sub
das
cld
jp
lods
je
sub
cmc
hlt
mov
cmp
in
pusha
add
rcrb
push
ljmp
imul
iret
sbb
or
adc
mov
into
xchg
jno
dec
aam
lds
mov
sarl
mov
mov
push
icebp
das
ja
inc
xchg
movsb
dec
leave
out
enterw
pop
dec
mov
sbb
and
arpl
fwait
xchg
mov
jp
inc
cld
sbb
stos
fidivs
std
imul
mov
ja
jno
sti
or
xchg
lods
lods
xchg
sub
jns
adc
or
hlt
loop
xchg
das
cmc
out
es
ja
add
and
cmpsb
lea
add
clc
pop
and
sahf
movsb
jne
and
std
sarl
jmp
xor
out
enter
scas
cltd
gs
adc
rol
mov
shlb
aad
sbb
dec
les
clc
hlt
in
fistps
lods
xor
push
psubb
movsb
push
movsb
lret
pop
add
call
jmp
mov
push
or
add
stos
aad
in
aad
and
out
iret
push
lret
nop
pop
rcrb
mov
shlb
jne
mov
inc
push
subl
xchg
fisubrs
add
inc
xlat
or
jle
test
jle
fcoms
icebp
outsb
cmp
cmpl
fld
in
in
dec
out
loop
pop
or
xchg
mov
and
mov
lods
cmc
mov
pop
fisttpl
pushf
pop
sbb
int3
scas
hlt
std
jg
scas
lcall
test
loop
mov
fwait
inc
sbbb
shll
flds
sbb
fmul
mov
ss
popa
pushf
pop
dec
pop
jp
je
xchg
inc
jne
mov
adc
lock
mov
jae
iret
pop
xchg
lret
inc
jmp
inc
jbe
sub
lea
rcrb
lret
addb
jbe
out
xchg
mov
ss
ret
pop
cmp
pop
add
lods
subl
lcall
xchg
movsb
fistl
inc
int3
cmp
push
push
into
ret
pop
cli
movsl
sub
outsl
sar
cmp
mul
mov
leave
int
push
inc
data16
and
test
dec
adcb
les
fstpl
xor
lahf
repz
lods
mov
cmpsl
jbe
jmp
std
pop
popa
repnz
mov
iret
push
ret
xor
dec
out
outsl
insl
dec
mov
dec
in
pushf
repz
pop
xchg
repz
pop
out
popa
dec
mov
lahf
lret
ret
call
push
test
je
repz
cmp
in
or
inc
test
pop
fnsave
testl
cmp
loopne
dec
pop
movsb
xlat
jmp
shl
inc
push
aad
nop
popf
mov
adc
sbb
jns
adc
dec
jns
mov
mov
cmp
xchg
test
jg
out
sbb
push
mov
cmpsl
mov
mov
loope
mov
dec
hlt
pusha
push
add
insl
sbb
pop
cmp
fmull
sbb
pop
xor
lods
in
je
lahf
insb
mov
xchg
dec
push
jb
orl
ja
scas
outsb
pop
pop
fstl
scas
fcoms
cltd
xchg
js
xchg
dec
lret
cmp
leave
inc
jns
or
jnp
lds
incl
into
xchg
xchg
inc
movsw
sbb
and
mov
jnp
xlat
jmp
imul
dec
cmp
mov
in
xchg
int3
leave
pop
movsb
and
add
push
adc
sbbb
mov
test
movsb
enter
cmp
add
fcomps
adc
jmp
dec
xlat
and
gs
mov
sbb
pop
mov
call
sbb
jle
std
push
cmp
int3
sub
jo
push
divl
insl
mov
mov
sub
sahf
mov
mov
inc
jbe
fwait
xchg
divl
mov
loope
dec
push
adcl
lcall
jg
jo
loop
outsb
jge
or
xor
test
jp
xor
outsl
inc
cmp
fadds
addr16
dec
test
and
rorl
shlb
ret
jge
and
aaa
jae
or
std
cmp
addr16
aam
in
pop
scas
inc
pop
loopne
stc
ja
insb
adc
imul
outsb
cmp
ja
inc
sbb
push
mov
add
or
pop
cmc
push
mov
pop
pop
or
dec
jne
fstpl
mov
lret
mov
pusha
hlt
out
jmp
pop
out
mov
std
lret
and
xchg
xchg
push
cmp
fiadds
inc
into
stc
cmp
and
xchg
pop
imulb
cmp
incl
fldcw
test
fstp
aam
xchg
data16
or
out
rolb
jnp
js
lods
xchg
jge
lds
cltd
ret
or
dec
mov
pusha
and
or
aaa
imul
add
repz
ficomps
popf
push
mov
outsb
push
push
inc
sub
dec
jae
adc
push
xchg
ret
in
ret
lret
out
insb
ss
mov
cmp
jnp
sti
test
aad
adc
pop
pop
daa
rorb
mov
xor
test
scas
lods
mov
or
fsubs
dec
cmp
mov
sbb
inc
dec
movsb
push
jp
scas
xor
adc
adc
xor
push
xchg
aad
es
add
adc
pop
adc
test
fisubrs
xlat
jmp
out
add
stos
push
vminsd
out
mov
inc
jae
dec
mov
shr
lods
jo
xchg
lahf
inc
jecxz
stc
dec
jnp
shrl
adc
arpl
std
outsl
xor
xchg
xchg
push
cmpsl
cmc
mov
dec
pop
out
scas
mov
push
test
int
cmpsb
es
das
sti
add
imul
cmp
mov
dec
jne
xchg
jnp
shrl
pop
pop
sub
sbbl
jo
push
scas
icebp
inc
dec
andb
adc
dec
mov
and
add
aad
mov
mov
add
sbb
mov
hlt
cli
jge
rorw
test
clc
push
data16
cmp
inc
push
gs
loope
inc
adc
and
mov
or
clc
in
push
sti
add
daa
add
or
adc
inc
or
push
lret
cmp
aaa
ljmp
mov
cwtl
xor
cmpsb
js
sub
shl
or
loop
pop
sub
in
into
mov
push
popf
ljmp
loopne
fiaddl
mull
repz
push
in
sbb
ja
icebp
add
cmpsl
jo
push
cmp
ror
mov
sbb
adc
call
in
or
xchg
lret
xchg
fildl
in
xchg
cmpsb
test
jmp
test
shlb
rcrb
push
ficoml
mov
pop
clc
push
bound
jb
xorl
pop
pandn
negb
fwait
inc
mov
fnstsw
sbb
xor
call
jge
cmp
mov
dec
inc
add
or
mov
shrl
mov
add
or
fbstp
dec
ljmp
cmp
inc
jae
ss
mov
sub
or
jl
rolb
xchg
int
mov
mov
and
sbbl
pop
mov
or
and
into
setb
lea
insb
aas
frstor
or
sahf
ret
sbb
inc
jb
std
faddl
xchg
jmp
inc
mov
lock
jne
mov
out
lds
in
imull
fs
jmp
stos
lods
outsb
mov
jnp
lds
or
xabort
jecxz
test
in
pop
sub
cmc
cs
dec
mov
rep
das
pop
jmp
xor
int
addr16
in
std
pop
lcall
or
vrcpps
rcrb
decb
ret
dec
push
pop
je
push
sbb
sbb
addb
stc
dec
mulb
cs
mov
ljmp
jecxz
push
lods
xchg
insl
push
adc
and
add
jecxz,pt
cmp
ja
or
ljmp
jnp
scas
mov
push
hlt
dec
jnp
ss
fisubs
js
test
pop
mov
lds
xlat
adc
aas
rorl
jno
push
push
repnz
cltd
jne
push
repz
aaa
inc
pop
shll
outsl
adc
xchg
sti
lds
shlb
popa
incl
loop
into
jecxz
add
aaa
and
push
add
or
sti
movsb
lea
push
dec
mov
jo
cmp
jns
loop
sub
in
push
dec
lods
mov
xchg
fdivr
dec
and
aam
jmp
fstl
repnz
das
clc
or
fildl
orl
ss
push
mov
out
in
add
adc
leave
icebp
scas
adc
je
sarl
pop
fidivs
and
scas
jno
push
callw
cmp
adc
arpl
or
jmp
dec
imul
outsl
push
ret
ljmp
testb
mov
mov
push
push
inc
pop
out
mov
mov
jmp
scas
cmc
lcall
push
leave
dec
mov
sbb
fstps
inc
sub
adc
jmp
or
insb
lock
inc
hlt
dec
lcall
or
fisubrl
mov
stos
sub
adc
lods
jge
in
pop
popf
mov
loopne
pop
js
mov
sub
stos
int3
aaa
imull
dec
dec
add
add
outsl
push
dec
cmp
fcmovnb
xor
jmp
fwait
adc
adc
mov
sub
insb
imul
jno
push
fistl
cmp
mov
adc
mov
push
out
mov
mov
jbe
sti
test
adc
xchg
jge
inc
shl
push
fisubs
sar
dec
jae
test
adcl
sub
out
xor
pop
push
dec
call
jno
mov
loop
rcrb
rol
outsl
xchg
rolb
push
cld
xchg
clc
dec
and
outsb
gs
ss
out
sbb
movsb
cmp
or
sub
add
push
xchg
nop
mov
faddl
insl
addr16
lret
push
pop
dec
xchg
rolb
pop
sbb
popf
iret
out
fcompl
or
or
fsub
add
adc
pop
dec
inc
aaa
sbb
mov
jns
hlt
mov
dec
fisttps
sbb
jle
sti
fdivl
mov
pop
pop
rep
ret
xor
lahf
xor
or
rcrl
cli
loop
jo
jb
js
pop
dec
aad
pusha
lock
lods
cltd
or
dec
sub
pusha
mov
cmp
cld
xorl
add
dec
push
cmpsb
stc
rol
push
xchg
jne
jne
aas
hlt
xor
mov
addr16
pushf
mov
inc
push
jae
clc
pop
mov
add
mov
shlb
icebp
aam
mov
aad
mov
movsl
push
into
xchg
js
daa
cmpsl
xchg
fs
stos
test
xor
inc
pusha
ds
ss
jmp
cmp
xchg
sub
jo
cmc
das
popa
add
daa
repz
add
aaa
into
dec
fbld
dec
js
andb
mov
test
push
xchg
test
pop
cli
fs
in
lds
pop
jmp
int
je
addl
sub
lret
push
mov
sahf
fs
add
out
loope
sbb
mov
int
es
dec
loopne
mov
jmp
push
outsb
add
mov
inc
push
mov
shr
push
xchg
mov
or
pop
movsl
loopne
ret
mov
jbe
je
insb
jl
push
mov
stc
incl
mov
push
gs
jo
test
sub
shrb
sub
lea
or
push
out
out
push
test
sbb
inc
in
popa
sbb
icebp
imul
ljmp
hlt
imul
add
and
pop
pop
cmpsb
cmp
clc
test
mov
mov
or
mov
je
mov
xlat
in
aad
leave
hlt
push
mov
sub
adc
or
cltd
imul
mov
sub
jb
fisubrl
xor
pop
jo
push
add
clc
mov
out
nop
imul
fadds
pop
or
mov
inc
movsb
xor
inc
jecxz
out
cmovne
aas
fldcw
movsb
shll
push
dec
nop
icebp
push
sbb
mov
in
jmp
fsubrl
pop
jbe
mov
xchg
jl
cmpsl
aam
inc
pop
pop
mov
jge
sahf
inc
movsl
push
inc
addr16
mov
xor
xor
or
sti
inc
iret
xchg
sub
cld
test
xchg
cmp
daa
cld
dec
inc
sbb
xor
adc
in
and
and
loopne
xchg
lds
mov
out
sub
incl
xchg
out
dec
add
xor
ljmp
sub
jnp
call
add
ljmp
cmp
ud1
in
pusha
pop
pop
mov
loopne,pt
fcoms
popf
adc
or
jl
data16
pusha
test
int
sub
rorb
xor
cltd
dec
aaa
add
add
rcll
add
sub
and
dec
repnz
loopne
adc
sub
pop
leave
mov
mov
or
pop
aam
xchg
pusha
lret
pop
cld
adc
enter
xor
jmp
add
dec
iret
cmp
and
aaa
mov
sbb
test
push
adc
push
and
pop
gs
xor
sbb
js
pushf
ffreep
fs
rcll
cmc
fisubs
notl
ficoms
iret
imul
mov
mov
push
es
inc
sub
aad
sarl
out
popa
lahf
or
jge
xchg
nop
ja
or
sub
aaa
sbb
mov
inc
les
in
movsb
in
dec
mov
in
add
les
mov
sub
push
or
daa
aad
out
andb
jmp
sbb
adc
addb
xchg
mov
aas
mov
mov
push
inc
mov
add
pop
and
cmp
imulb
loop
cs
jl
sub
sbb
cwtl
push
test
xchg
and
xchg
or
and
fcmovnu
negb
dec
dec
xchg
outsl
add
movl
in
clc
repnz
imul
outsb
js
fisttpll
inc
fwait
and
sub
inc
push
mov
loope
mov
adc
dec
lret
sbbl
in
cmc
out
out
loope
or
push
inc
mov
lret
or
sub
das
jecxz
adc
lea
sti
inc
leave
cmpsl
push
adc
jl
enter
mov
inc
out
outsl
mov
adc
lcall
lods
xor
cwtl
jo
pop
jne
xchg
fistpll
popf
pop
add
outsl
xor
fwait
and
jb,pt
jb
xchg
fisttps
jbe
jecxz
adc
lods
pop
jecxz
ljmp
dec
jecxz
popa
loopne
ja
mov
push
daa
push
fisubrs
stos
in
repnz
ljmp
frstor
push
sbb
add
enter
lods
ds
sbb
jmp
ljmp
pop
sub
mov
or
and
test
mov
scas
xchg
push
sbb
loopne
loopne
das
pop
andb
cwtl
test
leave
xlat
addr16
aad
push
fnstsw
or
xchg
push
mov
push
shrb
cmp
cli
loopne
pop
or
lea
out
sbb
mov
and
out
cmp
stc
jle
mov
push
lea
mull
jne
lcall
sbb
mov
mov
sbb
test
xor
pop
and
add
popf
pop
sbb
cwtl
sub
sub
fcomp
mov
push
inc
mov
call
mov
sahf
adc
mov
jb
bound
shlb
iret
pop
push
cmpsl
daa
adc
push
cmpsl
mov
or
outsb
lods
fimull
shr
mov
pop
sub
aas
outsb
and
rcrb
jne
dec
and
fs
inc
add
pop
mov
fs
mov
pop
ffreep
dec
jl
add
nop
pop
push
mov
call
sbb
lock
mov
in
or
push
xor
fs
ret
aas
fldcw
int3
test
mov
inc
arpl
ljmp
push
and
stc
repz
les
ret
mov
imul
shrb
test
sub
lds
loopne
sbbl
or
sti
inc
adc
sub
xor
sbb
movsb
mov
lahf
addb
jle
pop
sub
mov
leave
jo
bound
loopne
icebp
fldcw
out
stc
xchg
in
leave
sbb
ljmp
rol
dec
dec
stos
dec
add
aam
xchg
pop
and
lahf
out
rcr
movl
xor
sbb
insl
pop
xor
dec
inc
xor
jecxz
pop
push
jae
jmp
sar
cmp
inc
mov
out
cmpl
pop
jg
sbb
add
imul
pop
pop
mov
cmpsb
shrb
mov
sbb
jno
dec
jnp
fstps
pop
and
mov
mov
inc
scas
cmpl
mov
movsl
or
mov
pop
sub
es
cmp
inc
mov
or
mov
or
or
cmpsl
add
popa
fimull
cmp
fstp
pop
iret
lea
mov
push
xorl
gs
mov
inc
adc
mov
push
mov
sbb
jo
call
pop
stc
pusha
jg
movsb
adc
orb
incb
push
out
cmp
pushf
cmp
jb
cmpsl
fcomp
nop
push
fstpl
mov
xchg
mov
incl
icebp
xor
test
mov
dec
cmp
sub
and
add
mov
xor
inc
pop
aaa
data16
test
mov
loop
out
or
hlt
popf
outsl
aad
int
and
insl
jmp
stos
clc
push
cmpsb
aas
adc
pushl
pushf
jl
aam
sbb
movsl
and
jbe
std
cmp
into
jnp
mov
and
xor
andl
lret
sub
mov
mov
mov
fistl
dec
ret
shrd
hlt
or
arpl
outsb
adc
xchg
aas
pusha
push
pop
pop
subb
inc
xchg
shll
inc
test
jecxz
pusha
sbb
jae
pop
sbb
sbb
jbe
lods
icebp
add
imul
rorb
dec
lret
push
xchg
dec
push
cmp
popf
adc
subb
lcall
mov
add
sbb
ja
daa
test
push
int
vpmulhw
xor
xchg
sub
xchg
and
pop
fnsave
dec
dec
addr16
jmp
bnd
sbb
ficoml
push
cmpsl
inc
inc
roll
push
mov
jecxz
outsb
or
int
jp
lret
cmc
rorb
jo
push
push
enter
pop
shll
jg
add
jne
outsb
push
ret
mov
and
push
and
mov
insl
adc
push
mov
push
and
lcall
ljmp
xor
xchg
push
test
lea
pushf
push
lret
xor
pop
push
mov
mov
int
pop
jne
lock
pop
cmp
lret
call
mov
stos
dec
int
pusha
push
jg
scas
mov
scas
jbe
fidivs
xor
dec
add
jnp
xorb
xor
in
xor
xchg
add
scas
aas
dec
cmpsl
mov
mov
add
mov
in
dec
dec
loop
loopne
fidivrs
jmp
lcall
cltd
ret
pop
dec
movb
push
pushf
cmp
push
xor
cmpsl
add
add
out
and
or
mov
mov
xchg
pop
ret
and
icebp
test
scas
or
or
pop
mov
mov
cmp
cmp
pop
aas
or
push
ljmp
mov
cmp
sub
and
push
or
dec
push
popa
pop
ss
xlat
ret
pop
or
imull
test
sub
mov
ret
outsl
mov
mov
dec
cli
lcall
xchg
dec
add
arpl
lods
in
xchg
cmp
jne
lds
mov
xchg
fisubrs
sbb
fisubrl
cld
loopne
or
jp
xchg
mov
iret
mov
movsb
lods
lea
adc
jns
dec
movsb
es
scas
dec
mov
arpl
cmp
test
jecxz
pop
js
fcoml
dec
dec
cmp
sub
pusha
jge
add
push
mov
and
stos
dec
xor
je
fwait
or
jno
push
sbb
rorb
lahf
mov
iret
xchg
jp
test
lret
mov
rcrl
jmp
bound
mov
outsb
cmc
leave
shrb
mov
pmuludq
pop
scas
vpsllq
insb
mov
jnp
mov
jmp
jle
jb
mov
fcmovne
addr16
test
mov
mov
enter
pop
movsb
pop
test
in
pop
loopne
jnp
pop
bound
movsb
cmp
rolb
jl
push
loope
sub
insb
adc
call
outsb
inc
cld
out
int
in
movsb
inc
jl
xor
sub
add
test
stos
xchg
lcall
and
sti
ret
sar
in
adc
and
pop
sub
jno
test
jae
jp
mov
ss
push
call
xchg
jae
test
sbb
call
sbb
jp
pushl
lds
neg
imul
inc
push
add
sub
hlt
cmp
xor
out
cld
dec
push
inc
mov
das
ja
das
jo
je
xchg
cmp
int
mov
mov
clc
inc
repz
outsb
test
jl
fbld
or
sbb
test
mov
mov
sub
ret
nop
movsl
cmc
orb
sbb
mov
jmp
mov
adc
sub
jno
cmp
mov
shlb
out
fcmove
fsubs
mov
imul
or
and
jno
shl
loope
addr16
push
mov
and
aaa
hlt
fisubl
popf
or
das
aas
push
lcall
add
roll
xor
scas
out
adc
imul
mov
pop
mov
add
iret
push
mov
bound
into
xor
xchg
lcall
xor
cmpsl
and
mov
pop
jae
adc
adc
pop
cltd
js
jns
out
mov
sti
imul
cld
fcomps
fildll
mov
ja
cli
lock
sub
cmp
mull
cmp
sub
adc
inc
cmp
add
ficoml
sub
adc
imul
rorl
jo
cmp
andl
cmpb
lcall
and
cmc
inc
xor
push
xor
fcoms
outsl
mov
push
add
jl
xor
inc
sbb
dec
pop
sub
dec
loop
test
pop
lret
inc
push
test
xchg
jns
rcrb
adc
jne
dec
add
popa
rcrl
inc
in
jbe
cs
rorb
pop
mov
pop
or
inc
sub
loope
test
neg
or
div
xor
pop
pop
cmc
dec
negb
mov
aad
adc
cmp
data16
xor
inc
and
push
sahf
in
cmpsb
sub
jae
bound
aam
into
and
push
ret
cmp
pusha
pop
adc
test
cmp
in
movsl
leave
lock
and
out
sbb
fwait
ds
mov
mov
adc
popf
push
fcoms
das
inc
adc
sbb
sbb
adc
xchg
mov
dec
pop
mov
lods
pop
mov
movsb
adc
or
add
gs
movsb
or
pop
push
lods
pusha
outsl
mov
in
jle
sub
cmpsb
repz
dec
das
lods
sbb
icebp
mov
sub
xlat
jns
sub
pop
push
dec
repnz
push
xchg
les
dec
cmp
lcall
std
sti
jb
daa
aad
mov
jae
mov
fmull
fiaddl
mov
pusha
sbb
rorl
sbb
inc
sub
les
decl
mov
lock
fldcw
cmp
insl
pop
aad
ja
add
or
aam
mov
cwtl
stos
mov
cmc
lock
xor
pop
jae
inc
sub
push
xor
push
sbb
js
add
adc
pop
out
fld
adc
and
cmpsw
mov
xchg
xor
inc
enter
fdivrs
lods
cmc
notl
jmp
iret
inc
push
pop
pop
sbb
arpl
fcoml
adc
loope
fs
fistl
movsb
cs
sar
sti
mov
std
mov
inc
adcb
mov
jne
fdivp
mov
jl
and
xor
addr16
out
mov
inc
pop
add
fdivp
fsubl
sub
jmp
xchg
xchg
xor
cli
xor
sub
cmp
mov
nop
dec
int3
sub
inc
jb
adc
cmp
imul
lahf
cmp
sbb
mul
test
pop
enter
sub
add
or
out
mov
call
inc
and
inc
scas
in
pusha
or
cmp
inc
popa
sahf
pop
iret
mov
pop
mov
jge
push
pop
mov
stc
fimull
mov
repz
and
lock
stc
inc
movsb
cld
mov
pop
dec
lcall
ja
loopne
inc
push
xor
mov
movb
pop
pop
cli
push
inc
cmp
loop
fcom
sub
bound
fdivp
test
fsubr
outsl
or
adcl
jb
or
add
fistps
sbb
xor
shlb
int3
adc
leave
aad
leave
cmp
lahf
mov
or
jns
data16
lock
lret
scas
cwtl
jge
sub
loop
jg
out
daa
jle
fs
fsubp
push
fcomps
pop
sub
push
and
adc
mov
dec
aas
cmc
in
arpl
fistpll
out
repnz
pop
aad
adc
ret
mov
pushf
and
mov
adc
repz
ror
movsl
xchg
pop
popf
cmp
inc
es
adc
pop
shlb
lahf
cmp
lods
xlat
icebp
cmc
pushf
scas
lret
pop
push
aam
insb
pop
push
jbe
loope
std
mov
push
mov
dec
sub
div
jg
lcall
pop
mov
add
ja
mov
mov
testb
mov
mov
dec
outsb
popa
je
leave
scas
jnp
scas
aam
mov
test
imul
pop
cmpsl
popa
rcrl
push
call
mov
cmp
popa
jno
cwtl
mov
jns
inc
rcrb
jbe
jg
mov
cmp
pushf
mov
adc
push
xor
inc
pop
jns
lret
inc
pop
mov
rcrb
outsl
outsb
cmp
mov
and
xchg
sbb
out
pushf
movsb
adc
xor
loop
int
mov
les
in
jmp
xor
in
sahf
inc
mov
push
xor
xor
sub
inc
and
mov
cld
xchg
jo
jp
mov
mov
adc
stos
xor
sbb
mov
fnsave
dec
add
push
xchg
mov
and
mov
xchg
inc
or
insl
xchg
inc
clc
int3
inc
lcall
push
jge
lgs
and
xor
or
pop
push
dec
pusha
sar
cmpsl
popa
loopne
int
pop
dec
adcb
mov
lea
sbb
pushf
or
xchg
sub
lea
mov
or
push
inc
mov
jp
insl
test
jg
cmp
jecxz
and
cs
mov
nop
mov
insb
stos
and
cmp
push
mov
mov
mov
jp
xor
sbb
dec
adc
cmp
xor
mov
sbb
sbb
pop
dec
inc
sbb
lahf
cmp
leave
mov
mov
fisttpl
adc
xor
outsb
sub
xchg
sub
cwtl
xchg
lea
sub
pop
adc
gs
in
rorb
cmp
adc
pop
mov
cmp
jmp
les
fistps
jmp
sub
das
xchg
or
std
sahf
sbb
xorb
push
push
pop
sub
mov
test
xchg
insl
shll
iret
sub
sbb
cmp
mov
ret
lock
sub
je
mov
cmc
ljmp
sbb
xor
jecxz
loope
add
inc
mov
pop
xchg
add
jp
mov
jne
and
pop
adc
pop
xor
jno
adc
fsubr
fcompl
in
aas
icebp
or
imul
outsb
icebp
and
rorl
sbb
lret
rorl
stos
gs
mov
mov
cmp
mov
dec
sti
pop
mov
pop
addr16
jae
out
sub
pop
scas
dec
adc
mov
lods
jge
lds
adc
das
fiaddl
js
and
sahf
fdivr
and
xor
enter
lock
xor
and
les
ret
push
out
xchg
mov
arpl
imul
rcrb
test
aad
out
or
cmpsb
test
add
mov
outsl
andb
sub
filds
and
ret
notb
push
and
or
into
out
cltd
xor
inc
add
adc
lcall
push
mov
jge
lds
int
scas
fiaddl
and
mov
repnz
addr16
sub
or
jbe
dec
ffree
ficomps
andb
sub
dec
sbb
push
mov
lret
or
mov
cmp
es
pop
out
adc
pusha
pop
xor
std
arpl
lods
xor
lret
outsb
mov
in
push
movsl
in
in
xchg
xchg
fnstsw
pop
jns
mov
mov
mov
jns
mov
fsubl
movsb
sub
das
mov
jle
addb
and
push
iret
mov
xchg
imul
cmp
lods
xor
sbb
xor
push
jg
xchg
arpl
mov
xchg
loop
js
mov
scas
mov
mov
ja
inc
repnz
fisubrs
lret
mov
repnz
adc
mov
jge
push
cmp
cwtl
stos
ficomps
out
loope
jl
bound
rolb
popf
mov
ss
fs
in
xchg
mull
in
pushf
pop
adc
jae
or
pop
xlat
add
int
mov
gs
jns
outsb
mov
in
imulb
cmp
xlat
insl
add
dec
sbb
lds
in
mov
push
sub
ljmp
cmpsl
jge
sarb
jmp
mov
addr16
xor
imul
fidivl
or
ficoml
and
jns
jbe
movl
insb
imul
mov
xor
in
sbb
xchg
sub
ds
into
push
jno
fnstcw
and
arpl
xlat
or
jne
loope
cmp
xor
xchg
and
rorl
dec
xchg
lods
or
mov
and
in
jl
subl
mov
mov
add
repnz
dec
cltd
mov
and
cwtl
cmp
jbe
ja
pop
sub
dec
sbb
int3
fisubl
xchg
push
mov
dec
cmpb
ret
iret
dec
jecxz
daa
cli
cmp
mov
pop
mov
test
cmp
arpl
add
mov
adc
mov
ljmp
inc
ja
divb
mov
jge
js
push
cmpsl
xchg
sbb
xlat
adc
mov
fidivs
out
sahf
cli
inc
xchg
es
xchg
add
out
xor
add
adcb
pop
and
int
push
mov
movsl
mov
cmp
jbe
cmc
cmp
jge
add
add
test
mov
sub
jb
das
inc
sub
and
les
ljmp
ja
das
or
and
scas
mov
arpl
or
fsubs
fcomps
pushf
xor
in
sub
jo
sar
loope
rcrl
cmovp
cmp
lret
lods
mov
push
or
xchg
outsb
dec
out
popf
xor
inc
ds
cmp
pop
inc
and
enter
cmpsl
mov
push
outsb
in
cs
bound
fidivl
dec
cmpsl
mov
mov
dec
mov
fs
in
dec
fldcw
pusha
sti
cmp
jmp
pop
mov
or
fdivrs
inc
sub
xchg
stos
xor
cmp
je
inc
movsb
movsb
mov
dec
cmp
sti
insb
add
lock
mov
jl
stc
icebp
lea
pop
xchg
rorl
shrl
xchg
sub
in
mov
imul
jle
pop
nopl
shll
std
push
adc
or
jno
sar
jbe
maskmovq
negl
sbb
lea
or
xchg
xchg
mov
inc
xchg
out
mov
jl
in
ljmp
or
out
je
js
pop
aas
test
lret
or
leave
mov
clc
mov
inc
loope
sbb
out
in
ret
aam
jne
outsb
mov
pop
loop
movsl
cmp
push
fucomi
xlat
popa
ljmp
dec
addr16
adcl
cmc
mov
loop
jbe
xchg
popf
sbb
lcall
loope
into
ret
cmp
nop
sbb
jno
cmp
icebp
std
movsl
pop
iret
rcll
test
and
rol
rep
mov
test
jmp
pop
int
mov
inc
mov
daa
add
stos
add
lock
fisubl
mov
mov
mov
test
xchg
enter
xor
jns,pt
mov
push
add
or
out
cmpl
add
insl
jb
fisttpl
imul
cmpsl
sub
cwtl
movl
xor
leave
inc
mov
rcr
pop
or
in
pop
call
imul
dec
xor
mov
xchg
popw
pop
mov
and
sub
data16
jno
stos
pop
mov
xor
mulb
push
inc
jl
testl
lds
lret
jns
add
mov
ljmp
shll
xchg
mov
xchg
fucomi
push
jno
sbb
aad
jl
or
dec
popf
ret
fbstp
lret
push
jl
sbb
call
inc
aas
movsl
test
sub
inc
dec
insl
add
addr16
push
insb
xchg
shll
cmp
sbb
call
cmc
aaa
int
mov
popa
ds
adc
sub
icebp
adc
jg
ficompl
hlt
mov
out
and
or
push
stos
fldcw
pop
cmp
adc
negl
pop
jle
xchg
add
xorb
ret
sbbl
mov
inc
stc
sub
add
movsl
int3
and
pop
aaa
ficoml
aaa
adc
arpl
adc
dec
loope
lea
add
sub
jge
and
jge
fildl
and
test
lods
jge
popf
mov
stc
jnp
sub
lock
rcl
fwait
cwtl
loopne
pop
test
dec
das
dec
xor
hlt
push
fs
or
andl
sub
test
cmp
test
in
pop
ret
mov
cmp
and
fdiv
cwtl
pop
mov
ljmp
inc
inc
fs
xchg
shlb
ljmp
cmpsb
rorb
out
xor
cmp
add
and
mov
shrb
addr16
popf
popa
push
ja
xchg
xor
jg
cvttps2pi
cmp
push
mov
fbstp
mov
loop
sub
dec
pusha
loope
enter
imul
sub
in
insb
push
icebp
push
jg
fldcw
outsb
sbb
scas
rorb
mov
pop
sahf
movsl
lcall
test
clc
push
push
add
mov
dec
jne
dec
mov
cmpsb
inc
sbb
push
outsl
mov
sahf
sbb
pop
rcl
add
ret
push
out
adc
movmskps
pop
pop
sub
vmovlpd
cmp
adc
in
xchg
inc
out
pop
icebp
out
dec
std
add
cli
cmpl
sub
and
mov
pop
sub
xorl
cltd
cmp
add
insb
xchg
and
sub
sar
mov
and
leave
clc
call
rcrl
fucomip
hlt
ficoms
test
mov
es
xchg
cli
cmp
es
mov
inc
lahf
fists
jecxz
ret
jmp
mov
push
push
fwait
std
cmove
push
xchg
push
jbe
adc
popa
inc
fstps
pop
jmp
movsb
movsl
sbb
cmp
pusha
outsl
lods
mov
dec
push
xor
fstpl
into
mov
mov
sahf
push
shrb
push
pop
mov
sti
les
sbb
iret
negl
inc
xchg
xor
std
mov
pusha
repnz
adc
xor
jnp
insl
gs
jbe
out
aam
pop
jnp
loopne
xor
inc
insl
mov
xor
cltd
loope
insb
dec
pop
outsb
and
inc
das
xor
cld
je
dec
push
xchg
inc
xor
scas
mov
aam
xchg
mulb
adc
mov
sbb
je
nop
sti
adc
sbb
inc
xchg
xor
or
cmpsl
pop
fdivs
aad
xor
adc
fwait
aad
sbb
jbe
cmp
xchg
in
add
stc
mov
popf
jl
dec
xlat
les
fcmovne
out
mov
mov
jmp
lock
adc
pop
sbb
jge
test
xchg
inc
fisubs
xchg
xchg
sahf
subb
push
xlat
fidivs
aam
lahf
mov
xchg
cmp
arpl
push
outsl
push
mov
xchg
cwtl
mov
enter
mov
cmp
mov
mov
sub
repnz
lods
shrl
push
add
loope
cmpsb
cmp
push
fmull
andl
mov
lret
and
dec
sub
mov
xor
adc
mov
jo
aaa
jmp
sub
repnz
push
scas
and
mov
loopne
test
in
mov
pop
fldcw
mov
shll
mov
push
mov
fcoml
jge
jle
idiv
out
bswap
shlb
inc
or
lods
push
fsubs
das
hlt
lret
or
sarl
or
mov
in
and
in
mov
mov
push
loopne
arpl
pop
push
fwait
adc
fists
test
sbb
leave
push
dec
aad
cmp
mov
pop
je
aaa
lahf
push
push
les
mov
loopne
shrb
xor
testb
add
mov
das
mov
leave
inc
dec
xrelease
inc
push
mov
insb
fsub
sub
loope
or
cmc
fimuls
dec
dec
adc
lds
dec
inc
add
sub
and
dec
dec
aam
mov
test
add
scas
fisubl
and
add
and
sub
sbb
dec
test
sarb
fldt
into
fisubs
mov
movsb
jmp
shll
ret
das
addr16
xchg
xchg
mov
repz
adc
cmp
cmp
push
ja
cltd
cmp
mov
insb
cmpsb
lods
inc
cwtl
jnp
ret
xchg
iret
leave
dec
and
push
inc
test
aad
ficoms
shll
fimull
jno
and
push
cmp
xchg
push
cmp
xchg
inc
pushf
mov
push
sub
ss
dec
repz
cs
sbb
lods
fistps
cmp
cmp
xor
sbb
sti
les
inc
in
xchg
xchg
data16
push
jle
test
and
adc
push
dec
das
scas
sbb
lret
cmp
jge
mov
loopne
mov
je
stos
ret
inc
xchg
popf
fcmovb
push
out
scas
mov
and
cmp
cmc
cltd
js
and
or
popf
mov
movsb
mov
jbe
lods
xlat
cwtl
cltd
push
inc
mov
ret
loopne
cwtl
or
or
insb
mov
mov
fistpll
xor
lahf
addr16
sbb
stos
xchg
cmp
korb
or
mov
arpl
rolb
pop
stc
inc
sysret
sub
data16
jb
test
jbe
shrl
aam
imul
xchg
push
popf
mov
xchg
jge
adc
nop
jno
xchg
sub
pop
jmp
in
iret
inc
lds
fnsave
dec
cmp
cmpsl
mov
lret
cwtl
mov
sbb
xor
add
jle
cmpl
insl
mov
jne
xchg
mov
cmpsb
nop
mov
imulb
mov
out
push
xchg
cmpsl
push
or
or
fcmovbe
int
shll
rolb
sbb
pop
pusha
adc
aad
xchg
pop
jae
ror
inc
popf
adc
insb
aad
sub
into
pushf
jb
and
sub
mov
sbb
in
aad
mov
das
jae
sbb
das
push
xchg
negl
inc
jg
lods
popf
fimuls
xchg
movsb
pusha
gs
mov
sbb
test
fmul
sbb
cmp
xchg
cli
adc
repnz
leave
jbe
jg
push
add
lods
add
push
push
test
loopne
cmp
sub
subb
shlb
lock
cmp
xor
sub
jg
scas
in
xor
push
mov
sarl
cmp
test
cld
cmp
test
mov
outsb
orl
int
dec
pop
daa
sbb
fucomi
or
sub
ss
ss
pop
mov
jbe
jmp
sbbb
aam
jns
lcall
mov
js
mov
es
shl
sub
mov
gs
mov
and
jno
sub
mov
mov
cmpsl
mov
pop
ljmp
xchg
or
popf
jge
and
jnp
fisttpll
adc
mov
imul
imul
jle
les
cwtl
or
arpl
je
cmp
hlt
fwait
add
call
mov
dec
rorl
mov
stos
js
add
jae
addr16
jb
sbb
xor
cmpl
pop
mov
push
sahf
les
icebp
or
jno
es
xor
ja
andb
sub
rorb
and
addl
sbb
add
lcall
xchg
dec
dec
cmp
sub
adc
mov
rorl
sub
push
jno
xchg
testl
sub
dec
push
adc
jae
jge
aad
mov
mov
rolb
scas
fisubrl
cmpsl
arpl
test
mov
ljmp
jb
mov
inc
sbb
pusha
dec
jg
sbb
mov
je
mov
xchg
test
pop
in
push
jl
or
repz
cmpsl
jle
out
adc
jns
in
pushf
insl
outsb
call
pop
sbb
inc
pop
dec
jno
int
jge
subl
js
mov
mov
shl
adc
mov
mov
dec
pop
cmp
mov
int3
rorl
mov
adc
pop
out
push
add
aam
jge
jmp
xchg
add
imul
and
mov
scas
mov
lcall
dec
cmp
cltd
in
jbe
mov
and
xor
add
clc
dec
xor
mov
xlat
cmp
fcmovne
out
ss
lcall
nop
mul
fcmovbe
jno
and
and
out
rolb
push
xchg
stos
sbb
pop
adc
inc
loop
daa
jecxz
mov
int
push
xor
int
jg
orl
jl
mov
lcall
out
das
imul
jo
addr16
icebp
adc
push
sbb
add
mov
mov
movsl
sub
dec
inc
mov
mov
xchg
repnz
sub
scas
xor
outsb
dec
loope
add
in
cltd
pop
sbbb
xchg
mov
xor
fdivl
pop
and
xchg
mov
negb
push
push
loopne
rcll
stos
in
icebp
repnz
push
adc
mov
adc
lock
lret
mov
pusha
mov
inc
das
jg
add
mov
lea
xchg
ds
les
fwait
dec
rcr
jmp
sbb
dec
xchg
lods
sbb
loopne
adc
outsb
inc
jge
dec
sub
sarb
outsb
lcall
popa
in
mov
push
outsb
adc
adc
xchg
cld
mov
dec
xor
js
stc
test
mov
jl
loope
cmp
das
fbld
adc
outsl
dec
mov
xchg
cmpsl
rcrl
xchg
sbb
cld
mov
sbb
pusha
jb
cmpsb
sub
ds
ret
aaa
mull
inc
movsb
jo
adc
sbb
mov
jmp
in
jne
mov
jmp
ds
fldcw
inc
stc
mov
pop
and
or
add
dec
adc
pop
loopne
inc
pop
lds
and
cld
hlt
pushf
loope
stos
jecxz
dec
mov
xlat
push
cmp
mov
dec
jno
sbb
dec
into
out
sbb
sub
js
xchg
ljmp
scas
inc
mov
mov
adc
pop
mov
add
bound
inc
push
repz
inc
ret
mov
dec
scas
test
rolb
test
fs
pop
cltd
or
pop
loopne
arpl
test
mov
dec
adc
cld
mov
push
fldl
jecxz
cmp
shll
xchg
data16
pop
pop
daa
ret
dec
push
cwtl
dec
and
mov
repnz
jnp
cwtl
test
pop
pop
ss
mov
cmp
pop
jp
or
lcall
sub
push
lret
fisubrs
xchg
mov
cltd
add
test
movsl
fucomip
or
gs
insb
push
jmp
stos
sbb
push
add
dec
jp
rorl
cs
ret
xchg
dec
iret
filds
out
cld
dec
push
jmp
sub
out
mov
or
xor
mov
loopne
inc
cmp
stc
sbb
sub
sub
dec
sarl
data16
out
std
aaa
scas
sub
orl
push
dec
inc
test
cltd
std
fs
movsl
jne
lea
adc
sub
or
lret
add
aas
les
dec
pop
pop
mov
mov
das
cmpsl
add
adc
jl
mov
jge
negb
and
cmpsb
xchg
pushf
push
fimull
dec
push
lea
ds
sbb
sub
mov
push
pop
push
fmull
or
mov
pop
xchg
es
fs
loopne
into
jle
lahf
cmp
and
mov
in
inc
fisubrs
mov
outsb
mov
sbb
aam
cmp
jns
jecxz
jmp
pop
stc
mov
cmp
insb
add
outsb
lods
fwait
int
movsl
in
lcall
mov
xor
scas
ret
iret
fwait
xor
sub
rorl
sar
mov
es
jbe
adc
mov
data16
call
cmpsl
jp
mov
cmp
pushf
std
mov
mov
and
jle
mov
insb
mov
mov
packuswb
or
mov
push
je
xchg
xchg
out
aaa
pusha
mov
int
cmp
insb
push
xor
sahf
or
xchg
out
push
insb
rorl
jns
mov
cltd
int3
xor
cmp
into
jb
dec
rorb
mov
jecxz
adc
xlat
scas
clc
xor
enter
scas
lods
pop
movsl
cmp
movsb
mov
sub
jnp
fcom
fisubrl
daa
lret
mov
addr16
outsb
xchg
add
dec
imul
js
jg
shll
cltd
fistpl
insl
outsl
ss
sbb
adc
cli
addr16
es
cmpsl
or
xchg
iret
andb
lcall
mov
repz
movsb
pop
cmp
mov
mov
in
pop
pop
inc
pop
into
cld
lret
pushf
dec
in
mov
sbb
mov
pop
mov
jmp
arpl
xchg
std
mov
stos
lods
push
data16
pop
fwait
dec
mov
push
je
lret
cmpsl
shlb
iret
add
movsl
mov
pop
pop
movsl
out
rcll
test
jmp
je
dec
or
mov
cmp
int3
lea
sub
fisttpll
fwait
rol
inc
dec
fidivl
inc
mov
mov
into
jle
cmpb
xorb
or
mov
pop
add
mov
push
mull
lahf
xor
mov
cld
daa
or
dec
lret
loopne
out
pushl
cmp
addr16
sub
mov
mov
ljmp
ss
js
jb
aas
fmulp
rol
mov
inc
mov
repnz
icebp
fwait
outsl
ss
loopne
push
push
lods
insb
push
pop
or
mov
cmp
mov
aaa
mov
lret
rcrb
sub
cmp
xor
jnp
lcall
mov
jecxz
cmp
or
jmp
xor
out
xchg
lret
dec
sbb
addl
push
rorl
push
pmaxsw
fidivrs
dec
jne
insb
jle
iret
addr16
jno
pop
test
stos
jle
mov
xchg
sbb
or
add
movsb
mov
popf
lea
jnp
xchg
scas
sti
scas
sarb
sbbb
test
xor
sub
jmp
cltd
nop
leave
lcall
and
xor
pop
iret
scas
xchg
add
cli
push
fnstsw
inc
in
mov
pusha
adc
lahf
je
mov
ret
ror
cmp
pop
shrb
sti
bnd
les
loope
aam
add
jmp
sbb
rcrl
lret
fnstenv
sub
shrl
mov
scas
jno
xchg
daa
rcrl
cmpsb
dec
jb
sbbb
or
imulb
mov
pop
es
leave
into
jl
dec
cs
inc
jnp
and
lcall
add
and
add
sahf
in
ret
dec
movsl
inc
insl
ret
bound
dec
mov
xchg
pop
xchg
arpl
addr16
scas
jo
push
mov
mov
cli
pop
mov
jne
and
jno
mov
add
mov
mov
push
and
dec
cmp
push
jg
pop
xchg
sub
call
cli
fsubl
ja
or
xchg
out
out
lods
loopne
mov
mov
jne
mov
push
inc
shll
push
es
cmpsb
mov
in
lcall
jge
sbb
sub
scas
xor
dec
repz
sub
dec
cmovb
dec
dec
or
repz
adc
sub
sub
imul
insl
jns
fstpt
int
jns
cs
jle
fmuls
pop
popa
mov
dec
dec
aas
mov
fdivrl
push
popa
mov
pop
imul
fwait
daa
adc
loope
test
add
into
int3
out
ret
adc
lahf
sbb
out
call
lfs
sahf
pop
mov
call
test
jae
xchg
jp
decb
cmp
jae
mov
mov
shrl
xchg
mov
lods
mov
dec
sub
or
cmc
adc
cmp
sub
sbb
add
pop
fwait
add
outsb
mov
mov
and
and
inc
arpl
ret
vpsubsb
mov
daa
sub
fwait
jmp
jno,pt
outsl
repnz
cmp
sub
sbb
dec
stos
xor
fisubrl
mov
fs
adc
push
xor
xchg
das
mov
inc
sbb
inc
jo
sti
ljmp
fwait
je
int
test
jmp
ficoml
and
cmp
mov
mov
push
insl
pop
mov
fwait
adc
inc
add
adc
mov
fistps
pop
add
dec
popf
lcall
dec
mov
dec
in
xchg
sbb
mov
sbb
xor
sub
lret
mov
push
std
cmp
aad
fdivrs
fildll
and
sub
shrb
xchg
pop
xchg
push
addl
push
mov
adcl
pop
and
and
push
cmp
and
xor
stos
dec
sbb
or
das
dec
andl
subb
faddl
shll
push
setno
push
add
sbb
xchg
push
push
mov
popa
push
dec
hlt
adc
add
test
cmp
xchg
mov
shr
add
ljmp
cld
addr16
or
jg
stc
sub
xor
andl
push
adc
and
fildl
pop
inc
gs
pop
mov
lcall
repz
xchg
lret
cmc
sbbl
mov
imul
mov
fs
adc
dec
push
scas
ljmp
add
jg
imul
pop
pop
dec
jmp
js
xor
push
cmpsl
jmp
movsb
jg
dec
mov
sub
lods
pop
mov
or
push
push
cmp
mov
add
imul
dec
push
scas
push
push
xchg
test
dec
adc
lods
mov
pop
leave
scas
xlat
movsl
filds
sbb
or
add
jae
xorb
push
setp
sbb
in
push
pop
xor
into
loope
imul
movsb
les
jl
push
jle
add
pop
pop
sbb
es
sahf
leave
fwait
sub
data16
inc
ror
sbb
adc
mov
fidivs
pop
mov
pop
ret
lods
jbe
xchg
fadd
fistl
mov
lcall
inc
push
scas
sbb
in
xchg
adc
mov
out
call
add
pop
pop
lds
xchg
mov
mov
arpl
and
loope
mov
mov
ret
in
mov
or
fwait
sbb
jb
ret
ret
mov
push
ret
cmp
cltd
jecxz
cmp
lds
int
test
cltd
pop
lods
mov
movsl
aaa
pop
or
and
ds
fdivl
adc
xor
mov
push
push
outsb
fucomp
in
mov
xchg
lcall
jo
xlat
mov
je
jbe
into
cwtl
into
sbb
pop
push
or
leave
leave
cmp
pop
pop
pop
add
or
push
adc
jns
dec
or
andb
test
mov
repz
adc
add
mov
push
inc
je
add
push
icebp
pop
sub
push
push
sti
push
test
and
mov
add
pushf
fs
shll
fisttps
loop
push
mov
dec
cs
sar
or
icebp
movsb
add
sahf
pop
sti
pop
or
push
and
adc
stos
in
xchg
ficompl
mov
push
gs
pop
pop
in
jns
lcall
stos
cli
mov
test
bound
fistl
scas
inc
mov
xchg
rolb
mov
cli
fisttpll
jmp
sti
jge
imul
lret
mov
push
mov
pop
mov
push
jl
nop
das
out
xor
xchg
sub
push
icebp
cmp
mov
xchg
js
push
or
jns
nop
out
pop
fildll
mov
mov
mov
imul
mov
add
xchg
cmp
xor
and
xor
add
cmp
or
lods
or
xchg
adc
les
xchg
jnp
aas
nop
add
xlat
cmp
fsubrs
fidivl
popf
add
repz
sub
xchg
jge
in
fiaddl
xchg
push
lret
fwait
xchg
aam
jo
jns
inc
adc
mov
push
sbb
add
dec
fwait
out
and
and
and
push
mov
mov
cli
xrelease
mov
rcll
adc
adc
fcmovnb
xchg
jmp
fwait
jo
sub
stos
inc
or
out
cmp
mov
push
mov
sbb
sub
mov
negl
cwtl
dec
rcr
pop
xchg
dec
dec
es
andl
das
ret
adc
dec
fwait
dec
mov
jl
cmp
pusha
push
sub
pop
xor
testl
and
loope
insb
stc
dec
dec
xchg
fwait
lock
int3
pop
add
pop
shll
push
sub
stos
sbb
dec
fdiv
cmc
repnz
xor
jge
mov
les
movsl
jmp
pop
roll
jmp
jmp
cmp
cmc
stos
orl
imul
jb
bound
test
ja
arpl
jecxz
out
xchg
push
aad
into
push
subps
add
loopne
int3
int3
movsb
add
out
es
fsubl
dec
sub
in
mov
sbb
pop
mov
sub
mov
dec
int3
repnz
repz
insb
xchg
xlat
sub
loope
inc
shrb
aaa
mov
add
mov
or
cs
inc
fidivs
adc
jb
cmpsb
xor
xchg
fstl
jno
les
xor
sub
ljmp
rolb
inc
pop
aam
inc
jge
pop
stos
call
cmc
out
cwtl
mov
xor
xchg
in
push
push
jl
cltd
inc
pop
test
movsb
mov
pop
test
lret
or
jcxz
mov
insb
cmpb
and
mov
icebp
inc
xchg
imul
mov
test
movsl
jl
das
out
adc
mov
push
sub
mov
sub
ljmp
and
fmulp
or
pop
aam
push
aad
gs
pop
xor
sub
ds
lret
xor
xchg
xchg
mov
mov
or
cmp
imul
in
and
repnz
lahf
sub
add
cltd
out
mov
jecxz
movsl
mov
out
xchg
shlb
and
lret
rcl
xchg
ret
iret
xor
push
fisubs
mov
iret
and
fildl
or
scas
lds
cmp
sub
fnsetpm(287
fisubrs
cmp
sahf
xchg
jae
outsl
adc
fcom
add
enter
adc
jl,pt
bound
daa
daa
ret
jmp
dec
mov
dec
iret
pop
cmp
stc
and
sarb
adc
dec
scas
ret
stos
fildll
fs
push
sbb
daa
pop
and
xchg
adc
mov
ljmp
int
sub
ret
dec
adc
adc
pop
lods
adc
pop
jge
movsl
dec
pop
mov
mov
jno
sub
ret
mov
into
mov
xchg
cmp
gs
mov
adc
mov
cld
shlb
sarl
out
popa
dec
loop
push
shl
mov
sahf
push
cmpb
mov
test
aas
pop
ret
fcmovnb
push
sbb
out
jnp
ljmp
lahf
mov
mov
ror
loopne
xchg
sub
mov
jg
sbb
jb
dec
inc
icebp
and
inc
and
dec
mov
xchg
xor
and
loop
mov
jge
aaa
lods
cmpsb
roll
sub
jge
in
loope
int
xchg
adc
ret
fiadds
imul
gs
into
adc
pop
in
gs
pop
lcall
mov
cmpsl
call
clc
loop
mov
fidivrl
push
movsb
and
bound
adc
xor
sbb
inc
cmp
lcall
and
ficompl
push
cmp
fbld
idiv
dec
or
push
pop
or
push
lahf
stc
lret
inc
inc
sbb
mov
into
roll
in
ret
loop
lds
and
inc
mov
imul
iret
add
adc
cmp
xor
xchg
sbb
and
pop
xchg
jle
xchg
xor
icebp
sbb
loope
fistpl
push
push
or
push
negb
fisttpll
insl
and
dec
inc
mov
sbb
jae
test
pop
mov
lds
dec
xchg
mov
dec
fstl
push
das
sub
in
mov
pop
mov
faddp
pushf
clc
sub
movsl
les
xchg
mov
jle
jno
outsb
xor
jo
ficoml
sbb
mov
pop
pop
jnp
lret
pop
sub
inc
fs
fstl
push
ss
fisubrs
pushf
push
xor
and
push
mov
push
push
int3
lea
jp
adc
arpl
aad
std
ja
mov
add
and
js
inc
jl
popa
rolb
jle
insb
mov
add
sub
sub
dec
push
mov
aaa
mov
or
cmp
rcr
enter
roll
fstps
fsubs
in
int3
out
jge
js
pop
loope
and
ds
adc
sub
mov
sbb
mov
lcall
sbb
mov
inc
sti
sahf
cmp
jecxz
xchg
std
punpckhbw
in
pop
mov
fxch
jne
repnz
and
sar
hlt
es
cld
out
es
loopne
insl
insb
popf
xchg
sub
sub
fs
jmp
pop
push
fcompl
imul
or
fcoml
movsb
push
xor
push
push
lret
inc
call
and
daa
movsb
push
cmp
arpl
ljmp
std
dec
imul
les
push
or
adc
stos
mov
and
mov
sahf
imul
ret
xlat
and
mov
cltd
xorb
stc
cld
rorl
ds
sbb
push
in
lock
clc
mov
add
cmp
icebp
xor
or
xchg
dec
dec
jnp
inc
and
out
sbb
fisttpl
mov
incl
add
lahf
roll
push
enter
jmp
mov
ret
jae
and
aas
mov
cmp
data16
add
push
cmp
movsl
insl
add
fwait
inc
aam
xor
clc
insb
fldenv
cmpb
fidivrs
add
dec
inc
mov
sub
push
inc
sbb
pushf
pop
sbb
leave
mov
and
xor
or
addr16
mov
pop
loopne
jle
pusha
rcr
je
pusha
fbstp
fildl
hlt
dec
mov
hlt
loopne
add
dec
mov
push
sub
inc
xor
mov
jle
mov
inc
test
nop
cld
sbb
dec
fldl
clc
jg
or
and
add
popa
decb
xchg
inc
xor
popl
push
xchg
mov
ret
fldl
xor
ss
out
xor
lcall
dec
lds
add
add
push
movsl
lret
mov
iret
push
jmp
sub
testb
popf
loope
sahf
call
mov
clc
cmp
nop
gs
gs
xor
popa
add
pop
test
in
dec
pop
push
imul
int3
xor
gs
jl
ljmp
mov
mov
pop
test
out
xchg
mov
fldenv
ret
pop
pop
fs
jne
push
dec
sar
add
stos
adc
pop
aaa
pop
lret
sti
dec
fwait
sbbb
xchg
jno
xor
jge
je
add
repnz
mov
cmp
ljmp
jmp
pop
push
push
xchg
jge
mov
cwtl
adc
add
sbb
mov
mov
cmc
mov
mov
push
in
mov
xorl
mov
fpatan
lock
push
mov
jl
inc
inc
ret
loope
ljmp
js
mov
add
push
adc
ret
push
mov
loopne
inc
adcl
sub
cmp
clc
iret
sbb
mov
pop
mov
cmp
push
pop
inc
dec
int
fcompl
mov
clc
mov
rcrb
test
lret
pushf
xchg
add
push
mov
xchg
mov
add
inc
sahf
xor
pop
scas
sub
push
adcl
insb
insb
mov
and
mov
fisubrs
out
test
dec
test
pop
cmp
and
cmc
add
cmpsl
and
cmp
imul
cmp
dec
mov
push
mov
or
pop
fildll
jns
pop
imul
push
push
insb
mov
jecxz
cmp
add
fcomps
xor
mov
cmp
lcall
inc
in
adc
mov
out
enter
pushf
adc
aas
sar
mov
popa
jae
pop
inc
ret
pop
movsb
jge
adc
sti
sbb
sbb
lods
mov
les
inc
arpl
xchg
testl
pop
and
sbb
and
ret
bound
jb
xchg
cmc
mov
sub
out
imul
data16
cmp
pop
data16
add
pushf
es
add
test
nop
cmc
scas
dec
test
pop
xchg
test
xchg
subb
sti
fistl
dec
jmp
add
adc
into
dec
and
inc
sub
aas
orl
test
mov
notb
cmp
jg
aam
add
sub
frstpm(287
fmull
pop
push
test
inc
pop
lea
and
mov
ret
shll
stos
push
push
sub
jl
mov
mov
cmp
jge
pop
arpl
in
ficomps
jnp
in
std
sar
jns
fmulp
xor
dec
and
cmp
stc
push
stos
push
gs
push
jb
mov
xchg
js
add
sub
arpl
jl
mov
in
aad
inc
out
popf
into
aam
lcall
adc
movsb
pop
or
out
pushf
push
cmp
rolb
addb
out
mov
mov
lret
js
or
cwtl
cmc
add
loop
aaa
mov
sbb
int3
ror
pusha
inc
cmp
outsb
loop
int3
je
inc
jmp
es
cmp
mov
jo
inc
mov
cmpb
adc
inc
test
xchg
mov
push
pop
cmp
call
pop
icebp
pop
adc
push
mov
mov
push
insb
xchg
or
push
push
dec
imul
and
stos
fdivrs
mov
jae
mov
movsb
or
xor
ja
out
dec
loopne
subl
aas
bound
std
pop
sub
ss
mov
sbb
mov
jae
mov
dec
popf
or
insb
hlt
or
jecxz
mov
test
add
xor
xchg
sub
add
sbb
inc
out
sbb
lock
and
das
cld
lods
int
imul
push
sub
pushf
daa
xchg
pop
cmp
cmp
je,pt
mov
dec
adc
lcall
cli
test
add
xor
cmpsb
mov
aas
lods
pop
push
aas
adc
xchg
mov
gs
shlb
clc
push
sbb
jle
scas
or
shll
negb
stos
dec
pop
dec
mov
shlb
mov
loop
clc
cmp
outsl
jnp
dec
loopne
jmp
adc
into
and
mov
ret
add
cmpsb
pop
and
call
aas
mov
pop
mov
ret
js
imul
mov
std
jo
inc
pushf
std
pop
mov
pop
test
xor
test
xorl
and
data16
adc
fidivs
mov
push
cld
and
sbb
push
ret
push
das
push
loope
adc
cmpsl
and
inc
mov
gs
mov
outsl
movsl
sahf
sbbl
ret
aad
push
popa
arpl
sbb
js
out
lcall
jb
jb
lret
adc
xchg
inc
inc
sahf
xor
inc
push
jecxz
pop
cld
mov
popa
cmp
cld
adc
fs
dec
dec
xchg
mov
out
lods
jle
sbb
idivl
gs
pop
mov
mov
push
and
lret
dec
and
aaa
cmp
out
sbb
daa
dec
test
notl
sub
sbbb
cmpsl
adc
aas
inc
fwait
sbb
adc
scas
inc
sbb
cli
sub
inc
out
idivb
shlb
dec
sub
sbb
add
mov
mov
mov
fsubl
and
nop
mov
enter
push
lock
sbbb
or
xchg
ja
arpl
lret
lea
filds
mov
inc
cmp
aas
or
inc
lods
aad
aaa
daa
mov
jmp
cmpsb
pushf
push
sbb
loop
rcr
pop
xor
stc
sbb
popa
push
aad
xchg
pop
cli
adc
frstor
or
cmc
inc
jg
sub
daa
mov
cld
int
add
sub
or
hlt
in
dec
cltd
aam
jbe
push
and
dec
ffree
andb
cmp
mov
and
fistpl
sahf
or
into
sub
sub
xor
mov
das
lods
fwait
or
aam
xchg
loope
mov
push
dec
cmpsl
sbb
xlat
in
inc
mov
mov
jno
cmp
nop
and
xor
xchg
cmp
pop
dec
nop
push
xchg
fucomi
in
push
adc
push
insl
sbb
out
xchg
loop
mov
clc
sub
lret
mov
adc
pop
mov
mov
loopne
xor
mov
test
std
jle
lret
sub
movsb
jmp
mov
pusha
icebp
lahf
inc
orb
pop
mov
loop
dec
enter
or
lods
xchg
scas
fildl
scas
test
js
rorl
push
jne
and
adc
fsubrp
xor
xchg
cmp
call
nop
out
mov
hlt
inc
xchg
fsubp
adc
pop
jae
and
inc
cmpsl
mov
jecxz
inc
out
jb
scas
in
xchg
mov
in
jmp
adc
in
movsb
mov
sahf
xor
movsb
sub
fmulp
mov
pop
adc
sti
icebp
mov
imul
nop
push
addr16
aas
mov
dec
pop
idivb
sbb
cld
nop
dec
fistps
and
push
sbb
stc
dec
push
sahf
mov
js
sub
aas
addr16
inc
mov
call
add
aad
les
xlat
in
pop
loopne
aas
xlat
jp,pn
in
jle
in
jbe
pop
dec
or
mov
xor
jno
pusha
xchg
xchg
xchg
or
out
das
xchg
test
adc
test
cld
loope
aad
gs
lods
push
jae
pusha
inc
inc
or
pop
push
mov
fisubrs
mov
mov
or
dec
cmpsl
xchg
or
jnp
and
in
fsubr
fisubrl
push
or
scas
repnz
insb
mov
xchg
xchg
test
jp
mov
push
pop
movsl
adc
stc
push
js
in
lret
mov
xchg
mov
cmc
mov
lds
hlt
test
loop
clc
jno
mov
jae
imul
pop
sbb
repnz
mov
pop
cmp
fwait
push
xchg
data16
cld
incl
and
movsb
lret
out
popf
cmp
adc
jbe
mov
adc
jecxz
stc
fstps
dec
stos
jge
xor
push
pop
repnz
scas
adc
mov
adc
or
mov
mov
inc
sub
fldln2
push
add
adc
arpl
icebp
jmp
test
adc
addl
mov
lock
dec
xchg
add
loopne
out
xchg
or
outsb
ficomps
cli
xlat
sub
pop
dec
ljmp
push
push
push
or
xchg
movsb
add
std
es
movsb
sub
sbb
adc
jbe
cmpsl
push
test
nop
dec
adc
fdivrl
xchg
add
dec
test
dec
aas
xor
out
clc
sbb
cmp
fimull
sub
rcrl
xor
pushf
vunpcklps
dec
jne
jmp
fcmovnu
into
xor
pop
sbb
fnsave
pop
test
fiaddl
js,pt
mov
pop
sbb
or
or
sub
std
jne
and
jmp
and
popa
sub
xor
cmp
mov
stos
dec
mov
dec
sbb
sbb
pop
loope
lret
push
mov
cwtl
out
push
cmpsb
shll
icebp
stos
inc
lods
imul
cmp
pop
jp
dec
les
jnp
pop
popa
mov
imul
jg
inc
test
test
mov
pop
sub
shrl
scas
inc
inc
mov
pushf
xor
int3
idiv
mov
imul
push
lret
adc
stos
mov
mov
bswap
mov
ljmp
fidivs
clc
outsl
fbstp
dec
scas
xchg
lcall
mov
jp
test
in
out
and
incl
xor
cmp
cmpsl
mov
push
in
daa
adc
push
mov
push
imul
jp
rcrl
xchg
fcomp
repnz
dec
mov
sbb
clc
dec
adc
xchg
bound
fyl2xp1
add
sub
jne
mov
mov
adcl
push
inc
cmp
fldt
push
jno
lcall
mov
pop
sbb
fdivp
jae
jp
negl
lret
insl
push
mov
ficoml
xchg
es
mov
imul
push
ficoms
xchg
xchg
fdivrs
int3
sub
lods
lds
out
sbb
lret
and
stc
in
fisttps
cltd
fists
mov
je
pop
xor
orl
insl
aad
cmp
cmc
push
and
inc
xor
jg
sti
aas
jge
jns
jb
mov
ret
outsb
scas
cmpsl
aas
ficoml
jnp
push
imul
push
lret
mov
and
mov
jns
test
or
gs
adc
hlt
ja
pop
xor
adc
mov
imul
mov
mov
mov
or
in
leave
loope
nop
pop
mov
jo
popa
sub
aad
mov
or
add
xchg
fcomps
xchg
push
adc
pop
and
mov
and
leave
cmpsl
sbb
mov
mov
test
inc
cmp
stos
lock
or
mov
mov
leave
ret
mov
out
mov
cmc
push
pop
mov
stc
daa
xor
iret
push
ss
mov
add
dec
mov
xchg
cmpsl
push
test
sbb
stos
inc
test
in
jo
inc
push
push
ret
pushf
mov
push
inc
or
es
fsubs
mov
adc
loope
dec
push
repz
inc
adc
push
jmp
imul
xchg
cmp
add
and
jbe
dec
aas
dec
mov
cmp
test
add
imul
inc
fcmovne
jl
addl
push
lds
aam
xchg
rorl
or
faddl
pop
test
out
subb
add
sub
lcall
mov
xchg
xchg
add
jecxz
mov
test
push
in
inc
jae
stc
loop
adc
mov
xchg
repnz
mov
mov
dec
fldl
jo
lds
push
in
rcrb
push
mov
and
mov
or
stos
jb
sbb
int3
fbstp
mov
ss
jno
fsubs
gs
scas
out
sub
jmp
imulb
mov
repz
cld
sub
les
popf
inc
adc
jl
xor
lods
xor
sbbl
push
test
jge
xchg
fldcw
and
into
mov
aaa
xchg
pop
and
lods
test
test
sbb
mov
push
xchg
loopne
and
fstpl
xor
into
mov
mov
sub
fildl
mov
adc
mov
mov
clc
lods
xor
adc
jmp
loopne
cmpsl
aas
mov
xchg
loopne
in
xor
sub
out
orb
sub
jg
pop
jno
jmp
js
aad
mov
xchg
mov
sub
cmpsb
jnp
imul
adc
jae
mov
xor
mov
lcall
or
enter
lods
cmpsl
dec
mov
pop
add
push
arpl
popa
out
lds
inc
ds
ss
rorl
movsb
lods
arpl
lock
pusha
leave
fcoms
and
jle
mov
jbe
dec
cmp
mov
push
dec
ja
lock
decb
test
xchg
mov
std
gs
mov
daa
sub
fwait
push
inc
pusha
rorb
and
sarb
out
mov
aam
inc
loope
sbb
push
jb
dec
xor
xor
pop
aas
subl
push
mov
subb
inc
push
in
push
sub
push
sub
inc
test
xlat
dec
fdivrl
dec
inc
repnz
mov
int3
jle
push
insl
xchg
mov
jg
push
iret
inc
in
and
cmp
cld
and
sbb
stc
add
jb
mov
push
xchg
fbstp
push
aas
inc
jbe
pop
jecxz
inc
adc
push
ljmp
add
xor
push
jg
mov
inc
mov
mov
jb
outsb
cmp
and
imul
jle
mov
lea
sbb
ja
mov
imul
and
aaa
and
mov
mov
shrl
sbb
sbb
and
cmp
test
adc
push
into
push
negl
clc
js
pop
ljmp
sbb
mov
movsb
xchg
icebp
jo
loope
jmp
ret
call
sub
xchg
test
inc
test
jp
dec
rolb
add
aad
ss
push
cmp
stos
je
sbb
mov
mov
gs
adc
sub
inc
adc
mov
add
lods
push
pop
imul
stc
loopne
xchg
push
data16
mov
enter
sbb
sub
sbb
jno
loopne,pn
mov
mov
rcrb
or
iret
xchg
in
in
mov
in
mov
cmp
push
cmp
inc
outsb
mov
pop
cmp
lret
jb
bound
clc
ja
pop
bnd
enter
push
sub
xchg
push
jno
push
decb
xor
call
push
jno
xor
push
adc
call
mov
loopne
pop
int
mov
lahf
into
outsb
aas
add
sub
jg
push
int3
aas
inc
jmp
pop
or
movsb
xchg
hlt
cmp
push
cmp
lods
sbb
mov
dec
add
addb
adc
xchg
dec
xchg
test
xor
rorl
jle
stos
push
repz
test
pop
push
or
cld
fstpt
imul
popa
sbb
and
pop
dec
dec
or
or
movsb
test
out
repnz
or
inc
mov
jns
out
jl
mov
jae
mov
sub
adc
insb
cwtl
scas
cld
push
cmp
mov
pop
nop
xchg
push
and
jmp
jg
das
aaa
ret
jbe
je
aam
and
push
push
pop
movsl
aam
insb
xlat
xor
scas
dec
add
call
xchg
int
jmp
xchg
loope
mov
adc
decb
pop
test
xchg
out
xchg
add
xchg
frstor
std
xchg
adc
test
mov
or
imul
data16
nop
xchg
jg,pt
enter
in
push
rorl
clc
cmp
pop
push
stos
jae
jmp
push
add
aaa
jmp
cwtl
push
cwtl
mov
fs
inc
mov
ljmp
and
xchg
scas
mov
orb
push
inc
iret
loop
arpl
loopne
sub
xor
jp
shlb
jns
xor
push
push
call
nop
les
mov
jnp
es
in
inc
mov
xchg
xchg
sbb
mov
dec
jbe
lret
jno
lret
or
adc
xor
pusha
iret
adc
movsb
negl
pop
out
mov
jecxz
and
push
sbb
cli
sub
movsb
repnz
test
mov
sub
cmp
lret
lahf
sbb
lock
fiadds
add
test
aam
shlb
in
push
fdivrl
adc
imul
and
mov
inc
push
pop
lahf
inc
mov
sub
fs
mov
bound
inc
push
dec
repz
inc
and
sarl
stc
aaa
js
mov
outsb
sbb
outsl
lods
push
push
mov
jne
arpl
or
neg
xor
mov
orb
dec
clc
sbb
ja
stos
call
mov
mov
movb
pop
adc
ret
gs
and
mov
add
and
or
sub
cltd
push
ret
iret
das
dec
jmp
jne
pop
fldl
dec
push
xchg
mov
arpl
aaa
push
and
nop
psrlw
mov
fistl
mov
jbe
sahf
pop
add
test
or
cli
cs
mov
xor
mov
aaa
out
aad
push
pusha
cmp
rcrl
inc
jne
add
xor
mov
pop
add
dec
jne
icebp
jbe
dec
mov
lods
inc
jnp
mov
or
and
sub
int3
dec
mov
xchg
jmp
inc
jno
in
add
movsb
andb
push
imul
mov
jge
jb
cli
adc
cmp
sub
adc
test
cmp
jmp
cmp
imull
push
loop
or
mov
cld
enter
mov
out
rorb
push
xchg
cltd
push
insb
cmovae
in
cmpsb
dec
clc
inc
pop
insb
jle
gs
jp
pop
scas
push
push
jo
data16
cwtl
int3
dec
fnstenv
jnp
pop
and
ds
cld
mov
dec
mov
sub
sub
jecxz
lods
push
mov
loope
jle
or
shll
mov
decb
inc
mov
push
into
mov
mov
call
xchg
cmp
dec
or
add
lret
aad
adc
and
movsl
ret
fs
sub
insb
rol
pusha
popa
xchg
and
popf
aam
cld
push
std
inc
fcomip
sbb
out
add
stos
movsl
inc
gs
jmp
enter
popa
ficomps
dec
add
xchg
cs
xchg
sbb
mov
cli
loopne
cmp
int
dec
mov
fisttps
adcl
out
jmp
xor
fdivrs
and
fmulp
push
movsl
sbb
sub
insl
mov
fcmovnb
jbe
sub
inc
push
std
decb
push
adc
in
pop
mov
inc
dec
lcall
mov
pop
and
scas
add
test
cmp
test
arpl
lods
xorl
fsubl
movsb
dec
aas
mov
mov
or
ljmp
cmp
or
add
mov
jae
test
push
push
add
xchg
call
pop
test
das
jo
inc
pop
push
dec
cmp
xchg
add
xor
inc
mov
aaa
rorb
ljmp
inc
movl
and
out
mov
repz
cwtl
cld
jbe
push
lock
sbb
mov
push
test
ss
add
xlat
pusha
and
push
pop
pop
aam
xor
adc
jo
jb
inc
xchg
xor
push
divb
enter
fsubrl
ret
lcall
fwait
jl
mov
push
outsl
sub
cmp
inc
xorb
test
pop
or
xchg
stos
push
cltd
xor
aam
xor
cld
mov
test
shlb
push
xor
inc
sbb
cmp
int3
ds
xchg
fcoml
icebp
inc
cmp
or
ficomps
mov
cli
inc
pusha
inc
push
ss
movsb
push
push
sbb
ror
repz
cmp
repz
scas
imul
adc
stos
test
out
sub
lret
ss
fisubs
inc
movsl
push
sahf
add
mov
cmp
add
mov
stc
jb
mov
fidivrl
push
repnz
ret
dec
jmp
imul
pop
enter
pop
push
pop
inc
push
inc
repz
arpl
stos
pop
jp
scas
mov
xchg
fwait
jnp
pop
xor
dec
pusha
fwait
std
scas
pop
or
sbb
jo
mov
in
ficomps
aaa
dec
pop
std
shrb
test
inc
pop
mov
icebp
sub
ror
outsl
mov
arpl
rorl
insl
test
xor
push
lret
and
data16
cld
lds
jbe
add
jae
sti
push
adc
mov
push
mov
xor
cmpsl
xor
rorb
stos
nop
mov
or
or
jge
int
xchg
ljmp
mov
sahf
cmpsl
jg
stc
out
test
mov
div
in
xchg
outsl
imul
lahf
pop
dec
cwtl
xor
or
ret
loopne
mov
sub
jmp
or
fs
repnz
sub
sahf
xchg
or
xor
fdivrl
popf
hlt
je
xchg
cmp
shl
inc
mov
xchg
or
popa
push
bound
cli
js
xor
das
das
adc
sti
cmp
inc
add
push
rol
push
lret
dec
cmp
pusha
pushf
mov
into
stos
adc
loopne
mov
fstpl
xchg
push
mov
js
push
das
mov
push
test
inc
imul
push
cmp
fbstp
cmp
xor
std
rcll
fimull
dec
test
fisubrs
jae
inc
adc
adc
add
push
lcall
dec
xor
adc
pop
mov
insb
jns
arpl
xor
and
pop
xchg
out
pop
rol
pop
xchg
inc
movsb
add
and
sbb
imul
test
das
bound
in
sub
bound
pop
inc
sub
aad
test
adc
pop
mov
cmp
xor
mov
sarl
sbb
mov
cwtl
push
jmp
gs
repnz
mov
hlt
or
fs
into
rcll
in
stos
push
sub
std
push
pop
icebp
sub
pop
mov
gs
sbb
rorb
test
dec
ds
cmp
pop
push
int
imul
adc
mov
cmpsb
and
cli
mov
or
shll
lock
adc
inc
sub
push
in
or
fstpt
ja
sbb
xor
test
mov
pop
lcall
sub
lods
mov
adc
mov
cmp
dec
hlt
out
jmp
clc
insl
insl
dec
enter
or
xor
xchg
cmp
mov
scas
mov
mov
gs
addr16
shlb
out
ja
mov
adc
adc
std
xchg
dec
adc
scas
adc
out
or
out
mov
ret
cmp
jbe
dec
sbb
sbb
lahf
cmp
mulb
movsl
dec
adc
and
or
cmp
adc
pop
loope
insl
inc
sti
leave
jp
sbb
fmuls
aas
pop
mov
sbb
cmc
xor
pop
xchg
fcoms
xor
addr16
fdivrl
xchg
dec
xchg
cmp
push
shlb
adc
addr16
pop
icebp
mov
pop
testb
or
ficoms
mov
mov
cld
lock
add
aad
push
and
pop
in
sahf
fwait
xor
cmp
shlb
mov
jbe
sub
mov
jle
test
jns
inc
cli
cmc
loope
pop
pop
or
pusha
mov
push
push
sbb
xchg
sub
jp
fsubrs
xor
out
jne
fstpt
stos
mov
adcl
push
cmp
cmp
sub
xchg
sub
pop
mov
dec
pop
iret
mov
int
les
xor
repz
sbb
gs
adcb
shll
push
sbb
xchg
inc
pop
mov
int3
movsl
mov
iret
not
call
cmp
rolb
or
jecxz
and
and
std
lods
xor
mov
aad
sub
pop
and
sub
xchg
jle
loop
insb
jp
jno
push
das
dec
cmp
dec
sub
push
adcb
test
fisttpl
lds
fdivl
movsl
mov
dec
fstpl
cmp
lods
mov
pop
xchg
mov
jb
test
cmpl
pop
scas
inc
out
stos
pop
mov
cmpsl
lods
jno
int
mov
hlt
cmp
or
adc
push
add
fists
imul
in
mov
mov
jne
or
scas
das
jb
dec
mov
xchg
aas
or
movsb
mov
jns
lea
fcoml
scas
push
pushf
add
push
mov
xchg
mov
mov
mov
mov
push
lcall
pop
inc
outsb
push
xor
lods
popf
jp
or
int
fsubrl
xchg
cmp
int
mov
mov
mov
loope
movsb
jecxz
sub
lods
pop
push
dec
jbe
stos
sbb
mull
dec
cmpsb
in
enter
scas
nop
movsl
cmp
int
push
inc
mov
xchg
pushf
add
roll
in
faddp
out
sub
js
mov
jbe
rcrb
cmp
in
mov
pop
pop
aas
jne
push
pusha
mul
sbb
ficoms
scas
push
call
fildll
jbe
dec
hlt
mov
repz
adcl
sub
pop
mov
dec
out
xor
or
movsb
mov
xor
jbe
push
je
mov
shrb
jns
popl
mov
mov
aam
mov
stos
jns
jg
jmp
out
adc
nop
sbb
xchg
push
movsl
adc
iret
sub
add
add
xchg
test
mov
sbb
inc
adc
shr
cmp
sahf
fnsave
out
push
in
loop
mov
popf
inc
cltd
xor
jae
aas
push
lock
and
cmp
fisubl
jnp
or
sbb
jbe
cmpsb
push
mov
out
repz
movsb
shlb
je
testl
jmp
sbb
lret
sbb
fcoms
mov
jmp
xor
rorl
sub
xchg
dec
enter
jmp
popa
pop
pop
mov
dec
mov
xor
push
sub
inc
mov
sub
popa
xor
cmp
in
or
pop
adc
in
add
aad
add
xor
mov
mov
hlt
xor
aaa
out
mov
adc
out
adcl
lods
mov
lea
out
push
xor
popa
pop
lahf
mov
out
dec
jl
cmp
lea
mov
in
dec
sub
cmp
js
dec
dec
cmc
cltd
xchg
adc
mov
cmp
jge
add
into
add
enter
jne
jge
popa
sub
inc
cmpsl
fidivl
daa
xchg
pop
call
lret
cmp
jb
movsl
mov
lea
sti
push
fstps
xchg
movsb
mov
push
mov
aas
xor
pop
les
test
lods
mov
xor
ret
je
push
cmp
movsb
ret
aas
pop
in
lret
cltd
aam
mov
repnz
push
xchg
xor
fldl
xchg
pop
add
mov
and
popf
mov
push
lods
adc
push
loop
or
mov
jb
sbb
lea
pop
ljmp
mov
ljmp
fstpt
jns
inc
into
inc
loop
cmc
pop
or
call
arpl
loop
cltd
jb
js
in
insb
mov
aam
inc
xchg
xchg
mov
xchg
sub
aas
xchg
inc
into
enter
mov
dec
jb
popa
add
xorl
jne
clc
nop
aad
iret
imul
imul
jno
mov
adc
lahf
add
imul
pop
roll
or
adc
inc
pop
cs
pop
push
dec
aaa
cmp
lahf
xlat
fcmovnbe
adc
cmpsb
inc
scas
insb
das
andl
jnp
sti
lahf
add
jmp
mov
mov
mov
jp
enter
ds
mov
arpl
lret
mov
push
mov
lahf
fst
test
xchg
add
fs
mov
xchg
mov
fcmovne
popf
mov
xchg
sub
xchg
shrl
ret
cmp
les
push
repz
mov
ret
inc
int
xor
loop
mov
or
xchg
lods
ja
and
adc
jo
mov
shufps
xchg
rcrb
lahf
pop
cmp
cmp
lahf
pop
mov
and
fimuls
std
xchg
faddp
cmp
les
adc
sbb
scas
repz
adc
sti
insb
mov
jbe
push
icebp
mulb
insl
cmp
adc
popf
mov
arpl
dec
loopne
lock
test
out
jbe
xchg
std
ret
mov
mov
mov
mov
adc
nop
roll
insl
rol
lock
nop
orb
popf
inc
xlat
ljmp
and
or
xor
loopne
subl
cmpsl
pop
subb
inc
jno
dec
jl
xor
fucomp
xchg
add
std
cmp
cs
mov
cmc
rclb
mulb
push
adc
cld
mov
lret
mov
adc
jo
mov
loope
mov
mov
add
out
dec
mov
jg
ss
and
mov
out
ret
mov
pushf
jae
push
rclb
xchg
sub
adc
stc
xor
mov
dec
test
cwtl
dec
add
dec
cltd
bound
push
mov
xchg
mov
shr
sbb
icebp
and
push
out
dec
pop
mov
rorb
es
lea
imul
or
jge
pusha
movsb
lods
lods
lcall
adc
lret
leave
adcl
xor
movsb
sahf
test
ds
adc
test
and
dec
lods
pop
mov
repnz
sub
dec
les
popf
xor
sbb
lea
mov
pop
call
je
cmp
or
jp
adc
mov
cmp
mov
dec
mov
outsl
bnd
cld
mov
cwtl
sub
pop
aas
out
aaa
test
xchg
push
cmp
std
mov
mov
subb
daa
jne
shrl
outsl
dec
popa
adc
repz
xchg
cltd
std
mov
sahf
test
dec
push
add
sti
push
add
pop
cmpb
sub
cmp
into
adc
mov
loopne
sbb
aas
sub
add
arpl
cmc
sbb
mov
iret
push
cmp
sarb
jle
pop
stos
loopew
arpl
xor
into
push
roll
sbb
rcll
sar
mov
cltd
rorl
in
aaa
aad
sbb
inc
call
arpl
pop
push
cmc
mov
aam
or
inc
jnp
xorl
fldcw
std
cmpsb
adc
gs
jmp
cmpsl
stc
cli
mov
sahf
fistpl
mov
int
mov
pop
jge
addb
into
fs
inc
add
pop
movsl
fnstenv
adc
mov
push
xchg
subb
jmp
clc
frstor
notb
test
int3
mov
push
push
sti
inc
xchg
push
test
jle
movsl
or
popa
push
adcl
xchg
xor
aam
adc
jo
out
and
or
dec
mov
fdivs
inc
xor
les
mov
sbb
roll
sbb
stc
jb
jno
sbb
loop
out
das
push
add
fiadds
lds
movsl
popf
jnp
mov
addb
scas
mov
fsts
aam
cmpb
dec
cmp
adc
lods
mov
mov
cmp
and
xor
sub
or
mov
jle
cmpsb
cmpsl
arpl
stos
mulb
mov
xchg
loopne
sbb
mov
rcrb
pop
dec
xchg
xor
push
rcr
xor
divb
xchg
call
psubw
push
xchg
dec
xchg
mov
out
jno
mov
push
sti
mov
push
faddl
dec
jbe
jne
aad
mov
xchg
pusha
out
mov
mov
pop
gs
shrb
mov
in
jo
inc
xor
out
cmp
or
adc
imul
stos
adc
js
mov
cmp
scas
cmp
xchg
mov
mov
jl
mov
inc
testb
ds
lea
push
push
lods
xchg
inc
cs
cli
xchg
rdtsc
cmp
cmpsl
xchg
mov
fwait
out
jg
das
jle
sub
sbb
loopne
xor
push
test
sbb
mov
xchg
cmp
clc
nop
ja
inc
and
fwait
sub
xlat
shll
cmp
or
clc
mov
lahf
dec
xor
push
jnp
pop
jmp
int
or
pop
lahf
lret
mov
call
je
xlat
pop
insl
loope
cmpsb
sbb
adc
add
push
jle
jno
sub
lcall
pop
rorl
cmp
arpl
jecxz
xchg
xchg
testl
inc
pop
fisubrs
lds
cmp
mov
mov
outsl
rorb
hlt
cwtl
mov
shll
dec
iret
inc
imul
jbe
inc
ljmp
push
and
stc
or
rolb
pop
push
push
dec
loopne
insb
jmp
mov
xchg
movsb
pop
mov
lret
dec
xchg
jae
cld
mov
hlt
push
xorl
push
arpl
cmc
xchg
sbb
cli
imul
add
adc
add
push
dec
lahf
mov
and
cbtw
loope
in
movsb
xor
adc
lock
add
mov
jge
clc
mov
cwtl
sub
out
cmp
sub
mov
frstor
in
sbb
mov
fistps
aaa
and
push
sbb
fldenv
pop
jne
rolb
cmp
rcll
rcr
cltd
xor
aas
aam
xchg
fdivl
rclb
push
rcr
sbb
leave
testb
push
push
std
xchg
push
bound
dec
cmp
std
adc
and
push
mov
lret
movsb
ret
dec
movsb
mov
ret
shlb
sub
sub
xchg
out
std
rep
fadd
imulb
lea
movsb
adc
cmp
cli
bound
mov
scas
out
push
nop
js
insl
and
cmp
dec
sub
mov
test
fwait
mov
adc
data16
insl
and
xchg
jp
bound
fs
leave
inc
fldl
stc
inc
jg
and
sahf
cmpsb
jge
mov
mov
mov
push
in
jne
mov
mov
notb
shl
cltd
mov
divl
and
sub
aad
js
aad
mov
pop
pop
xchg
add
lret
icebp
imul
mov
cmp
dec
push
and
and
cltd
xor
ss
and
hlt
sahf
lea
adc
dec
jo
ret
pop
loop
pop
cmp
outsl
push
test
add
mov
or
push
xchg
ljmp
aas
les
adc
or
addr16
mov
lods
jnp
push
jne
mov
push
rcrb
pop
adc
lcall
orl
mov
ret
lahf
xor
ja
pop
das
imul
mov
mov
mov
notl
frstor
jns
jae
push
jo
ficoms
hlt
jo
popa
negb
aas
or
clc
jmp
pop
pop
cmpsl
or
stos
mov
inc
push
bound
popf
sub
jecxz
pop
loopne
lock
jnp
push
sbb
call
es
je
add
add
adc
pop
dec
ja
ret
sti
pop
rorb
out
pop
and
cmp
push
es
rcr
inc
sub
sbb
fwait
adc
adc
in
sbb
cmpsl
cmp
mov
inc
int
cmp
bound
addr16
pop
mov
aad
push
xchg
dec
iret
jg
es
push
shlb
lock
fdiv
or
in
lret
jns
pop
sbb
inc
fstpt
mov
mov
sub
in
insb
mov
add
pushf
xchg
sub
mov
xor
gs
adc
in
and
adc
sub
mov
sub
or
pop
xor
xor
jnp
mov
je
ret
jl
orb
dec
aas
das
cmp
cmp
cmp
stc
pop
scas
add
xchg
lods
cmp
stos
imul
sub
and
sub
jmp
sub
stos
mov
jbe
inc
in
and
mov
mov
or
out
stc
pop
dec
and
imul
jno
in
enter
fcomp
movl
mov
test
leave
pushf
test
fsubp
out
fldl
pop
stos
pop
jge
ja
ficoms
xchg
sbb
xchg
lock
cmp
mov
divl
jnp
push
pop
test
cld
xchg
add
xlat
mov
jae
loope
xor
stc
push
fucomip
rorl
out
sub
aad
push
andl
js
push
push
adc
popf
cmp
call
movsb
imul
int3
sub
mov
lahf
lahf
or
lcall
push
sbb
scas
or
jb
cmpsl
mov
sbb
adc
stos
push
lea
dec
fisttps
aaa
dec
sbb
push
push
xor
movsl
scas
popa
jbe
mov
imul
inc
jae
nop
mov
push
jmp
cli
sbb
filds
dec
mov
cmp
inc
xor
mov
sub
push
sbb
xchg
jl
pop
lret
jle
jg
jbe
mov
xor
mov
in
push
outsl
jae
ficoms
int3
cmp
mov
jae
push
jmp
jg
sub
pop
andl
pop
and
cmp
push
push
mov
fnstsw
and
dec
test
int3
xchg
push
shll
mov
movsb
popa
push
xor
jl
mov
inc
sub
and
dec
and
jne
pop
iret
cmpsl
mov
mov
es
adc
dec
mov
pop
xor
ror
mov
mov
mov
sub
movsl
jne
sahf
mov
daa
push
jae
outsb
iret
pop
mov
test
sub
mov
pop
mov
jo
mov
enter
jae
ss
mov
ret
loope
enter
into
sbb
imull
icebp
cld
jle
rdtsc
add
xchg
pop
push
insb
xchg
call
popa
jns,pn
jle
aad
adcb
fsubs
outsl
insl
and
mov
enter
xor
out
fsubp
loope
into
rclb
dec
mov
test
daa
out
in
lcall
add
nop
aas
cmc
sub
pop
mov
mov
lock
in
addr16
iret
mov
filds
sahf
sub
fidivrl
leave
enter
xor
push
push
decb
enter
xchg
dec
mov
mov
and
outsb
ds
lods
jo
mov
icebp
add
jl
fldt
xchg
jecxz
out
je
inc
out
mov
pop
push
adc
mov
imul
mov
std
fwait
loope
jecxz
outsl
cmp
pop
sbb
pop
in
idiv
jmp
add
test
dec
rcll
fs
out
pop
cmp
out
data16
int
fcomi
jno
mov
je
repnz
fwait
jbe
ljmp
pop
or
cmp
add
nop
stos
outsb
ja
mov
clc
aam
add
int
jp
xchg
lods
mov
leave
test
out
or
dec
pop
push
mov
stc
inc
movsb
inc
addr16
mov
jb
pusha
repnz
outsl
lret
or
aam
mov
dec
xor
or
push
mov
mov
test
mov
mov
push
rcrb
cli
jmp
adc
in
cli
sub
cmpsb
bound
lock
aam
xorl
js
add
imul
xchg
outsb
dec
arpl
and
push
lahf
repnz
sarl
sbb
xchg
and
movsb
xchg
push
ds
movsb
out
ljmp
push
inc
dec
add
mov
fsubrs
add
fisubs
pop
and
adc
pop
fstpl
xchg
or
sbb
test
xchg
cltd
lret
pop
icebp
flds
repz
movsl
test
add
cmp
jecxz
mov
add
lock
insl
xor
and
jg
pushf
mov
add
or
mov
mov
pop
dec
aaa
subb
mov
bound
movsl
mov
dec
inc
fadd
ljmp
or
or
out
cli
jns
mov
add
loop
iret
cmp
push
add
clc
or
dec
mov
push
push
decb
sub
lds
xor
inc
out
xchg
insb
push
sbb
test
test
inc
adc
cmpsl
or
and
dec
mov
xchg
mov
pop
lcall
adc
dec
push
xor
and
scas
inc
fsubrp
mov
test
dec
test
cmpsl
loope
in
lods
sub
pop
daa
add
xchg
jne
rcl
or
pop
inc
or
or
sbb
push
pop
adcl
xchg
call
cmp
sbb
in
rcll
jecxz
mull
dec
jns
notb
jmp
repnz
push
mov
push
std
pop
pop
pusha
xor
int
or
in
push
ss
push
loope
push
movsb
ljmp
lcall
or
pop
icebp
enter
mov
dec
js
shr
inc
mov
mov
decl
sub
mov
std
lahf
aam
rcrl
hlt
jne
mov
int3
jne
mov
roll
mov
scas
outsl
and
cmp
sbb
cmpsb
adc
jbe
aad
push
xchg
add
inc
push
mov
sbb
mov
and
jge
es
test
fwait
or
or
xchg
xor
frstor
jl
lds
dec
dec
std
push
pop
mov
xchg
pop
fcmovnb
mov
xor
in
sub
sub
fs
lds
mov
shl
xor
pop
xchg
push
xor
stos
stos
adc
push
lcall
sbb
fildl
pop
int3
or
cs
mov
pop
stos
frstor
arpl
lcall
adc
mov
test
xor
movsl
rol
insb
mov
mov
lcall
aaa
sub
and
adc
dec
cmc
mov
fimull
jo
jmp
and
cmp
dec
cmp
lock
sub
sbb
sbb
insl
xchg
cmp
popf
lret
mov
arpl
sbb
mov
inc
jo
clc
imul
jle
push
sub
mov
bound
scas
add
pop
add
or
dec
mov
fstl
cli
hlt
mov
stos
jae
popl
bound
mov
inc
fidivrs
mov
out
mov
sbbl
pcmpeqd
and
mov
mov
call
pop
lret
dec
push
movsl
stos
ja
jle
pushf
inc
jge
pop
loop
inc
ss
push
pushf
not
les
ficoml
and
xchg
lock
call
sub
loopne
lcall
shll
cmc
push
insb
cmc
lock
ja
sub
cmc
jp
pop
xlat
test
in
test
test
data16
sbb
xchg
xor
shrl
ret
cwtl
pop
mov
out
mov
rorb
add
cld
ljmp
jno
fsubrs
lea
jo
jne
scas
adc
sti
outsl
xor
xor
and
and
xor
xchg
call
fstl
daa
lock
mov
data16
sti
jle
cmp
adc
test
loop
icebp
mov
xchg
cli
inc
imul
jne
or
mov
mov
xor
jne
shlb
push
mov
push
xor
adc
mov
insb
jge
rolb
lret
pop
repz
fwait
rorb
cmp
xor
shll
jno
sbb
mov
push
push
test
xchg
leave
and
rclb
mov
fs
cmp
negb
test
xor
std
cltd
or
aas
fldt
scas
ss
and
hlt
repnz
loopne
and
cmp
pop
iret
pop
mov
xor
or
test
xor
xlat
and
out
mov
int
cwtl
mov
xchg
xor
setp
jns
push
mov
cmovnp
negb
data16
imul
sub
incl
mov
test
push
out
cmc
cmp
mov
loopne
test
mov
inc
or
lea
xor
pushf
xchg
cmp
and
mov
lret
imul
aad
pop
push
cld
sub
sub
int
xor
sub
pop
fwait
sahf
mov
mov
out
mov
push
cmp
loope
mov
push
imul
shlb
aam
pop
stos
xchg
roll
popa
or
push
cmp
xchg
mov
or
jg
rcr
sti
or
lods
je
mov
gs
clc
loop
xchg
adc
cltd
jle
mov
jmp
sub
and
sub
mov
or
icebp
rep
mov
xor
mov
in
stos
sub
dec
popf
jae
jg
or
mov
mov
dec
cmp
push
pop
fnsave
repz
cld
lods
lds
stos
adc
pop
jle
mov
inc
gs
dec
ljmp
mov
dec
jecxz
mov
fsubrp
lds
sbb
inc
inc
jo
stos
or
or
je
shl
jo
nop
sub
divl
lds
mov
jecxz
pop
fisttpll
ja
and
scas
shlb
mov
call
mov
out
cwtl
and
push
into
lcall
mov
outsl
push
xchg
jnp
push
push
and
out
mov
mov
ja
fisubl
insb
rcl
mov
jne
cmp
lcall
mov
repz
test
int3
out
clc
xchg
and
sbb
lahf
mov
dec
push
mov
xchg
jle
push
popw
nop
fcompl
push
outsl
pop
jnp
mov
pop
aaa
push
push
push
cli
je
sbb
inc
outsl
and
mov
jns
adc
mov
lret
push
cmpsl
dec
cld
or
or
jne
stos
addl
sbb
je
sub
adc
sub
test
jb
inc
jne
mov
shlb
cmpsb
or
cmp
insl
xchg
leave
and
cli
dec
adc
pushf
mov
lahf
out
gs
shl
sarb
lds
mov
dec
hlt
jp
inc
xor
jo
pop
cmp
sbb
or
outsb
imul
fistl
adc
pop
adc
repnz
inc
inc
iret
mov
adc
dec
int3
js
fmul
sub
mov
addl
jo
mov
cs
and
je
fscale
cmc
cmp
mov
jg
push
mov
mov
filds
test
mov
push
cmp
push
leave
or
daa
dec
xor
dec
test
lahf
mov
fdivrs
dec
ret
or
fmul
fs
clc
ficomps
enter
cltd
jge
cmpsl
cld
mov
fsubrs
rep
in
mov
and
sub
pushl
adc
mov
or
cwtl
dec
into
in
sarb
lods
dec
cs
popf
mov
jb
pop
xchg
dec
notb
cmpsl
xor
cltd
movsl
xchg
daa
bswap
jmp
enter
cld
push
add
mov
mov
sub
dec
test
dec
or
fdivl
hlt
in
bound
popf
lea
int
imul
push
movsb
loope
cmc
mov
sahf
imul
adc
add
outsb
lods
idiv
xor
ja
push
cmp
add
nop
lahf
mov
ret
stos
lods
adc
test
movsb
add
repz
ficomps
push
or
push
inc
push
mov
test
icebp
or
xor
fstpt
in
pop
cltd
add
xor
mov
xor
mov
push
or
fisttpll
xchg
mov
les
lds
mov
pop
push
fnsave
dec
and
mov
addl
push
jb
inc
jecxz
leave
repz
in
add
sbb
jo
andl
out
jmp
getsec
adc
int
xchg
pop
sub
cli
stc
dec
fdivp
lock
xchg
sti
inc
lock
pop
dec
adc
cmp
adc
pop
sub
push
pop
out
cmpsl
push
mov
loopne
and
lahf
fcmove
push
int
sbb
je
inc
mov
and
xchg
push
fists
dec
leave
in
or
pushf
pushf
adc
xchg
das
std
pop
cmp
xchg
dec
fidivs
bound
hlt
lock
mov
aam
cmc
pop
loope
xchg
or
js
cltd
hlt
xchg
dec
mov
in
sbb
in
fsubp
mov
idivl
xchg
outsb
cmp
push
jge
scas
mov
or
mov
xor
fcomps
loop
pop
mov
fwait
jb
jae
or
push
sbb
mov
stos
outsl
or
lock
push
in
adc
push
sub
movb
scas
sub
mov
nop
out
xlat
push
cs
or
jns
fnstsw
add
and
push
cwtl
pop
loope
jns
shll
aaa
pop
repz
mov
push
and
sbb
jmp
enter
mov
adc
xor
mov
push
pop
pushf
enter
clc
inc
jge
and
int3
cli
icebp
scas
inc
push
movsl
sub
daa
daa
mov
jle
or
adc
mov
jle
cmp
adc
cmpsl
or
pushf
cwtl
mov
and
adc
mov
loopne
push
mov
loopne
mull
jbe
arpl
or
fildll
or
pop
mov
int
jnp
sbb
push
jno
mov
cmp
add
dec
sbb
and
and
mov
out
movaps
std
xchg
fcompl
inc
jl
xchg
into
sbb
push
sahf
mov
ds
out
fiadds
dec
outsb
test
and
rcr
push
jmp
dec
inc
xlat
inc
ja
stc
cmovs
repnz
imul
insl
out
dec
cmp
insl
cmp
rcr
push
dec
and
int3
jecxz
jge
aas
cmp
ljmp
cmc
jae
loopne
jecxz
std
data16
lcall
lcall
adc
mov
add
xchg
enter
stos
or
loope,pt
call
pop
push
push
out
xor
xchg
test
xor
xchg
das
scas
ret
add
aad
fcoms
outsl
pop
ret
jnp
sbb
cmpl
cmp
jge
lret
mov
xchg
lcall
mov
leave
iret
jno
orb
lea
inc
and
mov
mov
jb
popf
dec
mov
testl
call
mov
mov
ljmp
fildl
push
adc
ss
into
cmp
call
in
test
inc
testb
popa
repz
notb
js
xchg
enter
out
fisubrs
sub
mov
fs
cmc
inc
mov
or
xchg
lahf
in
mov
sbb
in
imul
push
sub
repz
push
dec
roll
pop
push
dec
outsl
popf
test
imul
jmp
pop
xor
in
mov
test
push
sub
mov
sub
cltd
mov
xor
shll
xchg
addr16
std
arpl
mov
fisttps
mov
xchg
jl
dec
adc
pop
popa
rolb
mov
stos
rcrb
cld
sbb
fldl
pop
xchg
cmp
js
shrl
xchg
adc
leave
shlb
clc
pop
jge
daa
arpl
pop
aaa
and
mov
jecxz
jle
push
clc
js
stos
push
jmp
and
stc
jns
loope
sub
aaa
inc
jg
adc
adc
dec
adcl
sti
jbe
sbb
cmc
sbb
int3
bound
repnz
xor
loopne
adc
fs
push
mov
dec
or
pop
out
pop
xlat
fsubrp
push
inc
inc
jp
fdivs
push
lock
fdivrs
mov
cltd
xor
inc
pop
jns
mov
dec
pop
push
and
jg,pn
jb
outsb
lea
sub
inc
add
pushf
rclb
sbb
fld
test
cltd
push
loopne
std
and
sub
sbb
push
clc
sbb
xchg
xor
mov
lcall
mov
shll
cs
inc
or
mov
daa
pop
ficoms
sbb
fwait
dec
nop
mov
push
or
out
dec
cmp
loopne
cld
lds
lcall
push
jnp
lea
fsts
movl
mov
mov
orl
mov
pop
adc
aaa
lea
jp
adc
push
push
sbb
mov
aaa
loop
sbb
jl
and
out
mov
hlt
shlb
cmp
test
imul
lcall
add
jg
push
lea
adc
inc
cmp
sub
popf
inc
sti
out
mov
mov
lcall
push
push
pop
sahf
sbb
scas
call
pop
mov
leave
mov
jl
hlt
scas
cs
loopne
add
jnp
push
and
push
sub
cmp
add
js
cmc
js
lea
cld
arpl
push
out
sahf
mov
adc
mov
mov
jecxz
mov
add
mov
sbb
repz
dec
loop
nop
mov
int
cmc
in
outsl
or
adc
hlt
add
lea
dec
sbb
mov
fisttpll
lret
inc
scas
push
pop
repz
or
pop
mov
lds
outsl
jl
push
das
mov
push
cmpl
push
je
sub
jge
call
popf
mov
xchg
push
add
sbb
in
xchg
lock
std
clc
or
je
int
sbb
mov
or
jg
mov
add
xchg
aam
dec
pop
push
mov
arpl
leave
cwtl
inc
dec
stos
and
invd
mov
mov
ret
sub
push
mov
jo
adc
ret
adc
lds
adc
pop
jae
cmp
leave
sub
subl
add
mov
mov
dec
lods
ret
int
pop
ds
dec
mov
jno
dec
add
shll
cltd
mov
inc
adcb
pop
pop
mov
cwtl
mov
dec
pop
std
adc
and
push
mov
inc
jnp
jp
adc
outsl
and
mov
xchg
rcrb
mov
iret
adc
push
movsb
sub
outsl
push
adc
hlt
jp
mov
addr16
push
pop
pop
push
shr
or
int
aas
fwait
rclb
add
push
adc
divl
scas
cmp
push
cwtl
xchg
xchg
mov
push
std
loope
pop
jbe
xchg
fstpt
inc
dec
or
loope
cmpsl
add
ss
xchg
jp
and
add
les
lret
and
int
jle
xchg
cmp
nop
jmp
mov
cltd
mov
sbb
xor
fsubrs
fstpl
lahf
and
nop
xlat
and
cmp
mov
sub
add
cmp
outsl
arpl
imul
ja
xchg
lds
cltd
adcl
in
mov
xor
dec
push
cmpl
out
xor
lea
cltd
js
js
push
mov
and
xlat
rcr
mov
stc
stc
or
mov
sub
nop
ljmp
xchg
arpl
dec
xor
out
jg
xchg
dec
add
mov
xor
into
push
adc
add
mov
mov
or
mov
aam
in
fucomip
mov
mov
push
loopne
jle
adc
movsl
xchg
int
sub
enter
mov
sub
imul
mov
subl
mov
xorb
rolb
inc
arpl
jecxz
lret
xchg
adc
mov
push
mov
adc
aad
jnp
pop
jbe
test
sti
mov
insb
lock
pop
aas
or
cmc
loope
ret
pop
xor
out
inc
pop
cmp
ja
out
xor
jns
leave
push
push
xchg
dec
leave
rcl
mov
decl
in
arpl
or
push
inc
inc
jns
fbld
sub
shr
xchg
mov
icebp
nop
push
sbb
aaa
lods
push
or
mov
sub
dec
in
add
push
fnstsw
sti
aaa
or
inc
fidivrs
stc
sbb
cmp
sub
pop
mov
fnstenv
xchg
push
hlt
sarb
mov
jp
pop
adc
aam
aam
mov
jmp
push
push
jno
aas
in
fisttpll
pop
roll
push
pop
std
movsl
rolb
mov
mov
jmp
mov
std
jge
ret
mov
in
push
or
pop
imul
lea
sarl
arpl
mov
test
pop
jae
mov
push
loopne
out
pop
movsb
inc
inc
faddl
nop
xchg
cli
cmp
pop
jp
test
stc
xchg
inc
in
pushf
push
fcoms
sbb
pop
pusha
pop
xchg
mov
int
mov
dec
aas
dec
insb
nop
push
shll
aam
and
pop
push
pop
call
add
cltd
add
ljmp
add
ljmp
scas
out
mov
addl
fwait
jbe
mov
or
inc
sub
mov
jb
push
push
loopne
cmp
push
sbb
aaa
push
stos
ljmp
pop
jle
jmp
pop
pop
jecxz
adc
jmp
push
rolb
adc
insl
sbb
pop
cmp
fcomps
fisubl
orb
xchg
or
push
rcll
dec
pop
jns
push
xor
inc
rcrl
cmp
xor
stc
movsb
inc
and
lahf
dec
jg
xorl
add
ljmp
js
mov
pop
lods
cmp
sbb
pop
mov
into
dec
loopne
aas
int
fisttpl
jb
orb
sahf
rolb
and
imul
push
cmp
jge
push
addl
gs
dec
jg
mov
sbb
dec
inc
dec
stos
inc
xchg
sarl
fcoml
lahf
mov
pop
lods
fsubrl
inc
xchg
push
fstps
and
dec
inc
test
mov
cmp
sub
sbb
sub
ret
inc
xchg
dec
out
fistl
and
fstl
stc
add
mov
push
xchg
test
or
lods
jbe
mov
ds
imul
fisubs
ja
xor
popa
insb
in
out
imul
fdivs
mov
mov
xor
mov
aad
fwait
add
outsb
jg
fwait
outsb
mov
ror
repnz
sub
pop
or
xlat
mov
lds
jbe
mov
cmp
lock
mov
call
aas
pop
pusha
sarb
xor
dec
lods
cwtl
xor
mov
rcrb
pop
xchg
scas
xchg
in
jo
daa
shrl
add
icebp
mov
aas
mov
sarl
xor
mov
mov
push
sbb
mov
xor
xchg
pop
stos
lds
jg,pt
out
sub
repnz
mov
xchg
jne
or
inc
jns
mov
loopne
popa
fistpll
sbb
and
orb
lahf
cwtl
orb
jecxz
push
pop
inc
aam
cmp
push
test
mov
cltd
movsl
xor
xor
shlb
stos
shll
fsubl
mov
jnp
adc
inc
xchg
pop
aam
mov
ss
popa
or
mov
mov
jbe
pop
cmp
sbb
cmpsl
and
pop
je
fcoml
or
xchg
in
popa
mov
imul
push
mov
mov
push
movsb
jp
and
sahf
jge
loopne
movsl
push
ret
test
jge
lea
sbbb
dec
pop
jae
mov
or
inc
mov
adc
jb
dec
xor
out
inc
pop
daa
mov
pop
push
and
ret
cmp
xor
jb
sub
jle
popa
andl
xchg
in
fwait
mov
jge
sahf
sbb
lret
fwait
pusha
sarb
push
pop
lods
and
fs
sub
ret
aaa
rclb
pop
push
mov
cltd
imul
ljmp
pop
xchg
outsl
std
daa
stos
mov
insb
pop
inc
and
sub
das
cmp
sbb
divl
lea
adc
jg
pushf
cmp
cmp
push
popa
lcall
adc
rorb
xor
xor
mov
lods
or
mov
imul
jae
push
mov
mov
inc
imul
arpl
test
or
out
ljmp
xchg
scas
sarl
mov
xchg
jae
rol
mov
incl
inc
mov
xchg
dec
pop
adc
es
jp
mov
and
movsl
sbb
xor
add
iret
dec
iret
push
fldlg2
sbb
sub
push
loop
mov
mov
pop
jecxz
divb
or
insb
stos
or
and
cs
inc
and
mov
aad
insl
fildll
bound
outsb
sahf
adc
imul
mov
divb
iret
es
arpl
mov
jns
pop
cmp
aad
xchg
lret
ljmp
aas
lcall
cmp
lods
jae
xchg
loop,pn
mov
ds
pop
mov
ljmp
leave
das
mov
test
and
inc
inc
cli
lret
dec
and
fdivp
jmp
je
clc
push
leave
leave
or
push
or
mov
lret
arpl
or
pop
out
sub
pop
test
adc
pushf
xchg
scas
mov
dec
jecxz
mov
pop
sbb
lods
inc
mov
xorb
jbe
push
jb
in
lea
dec
or
mov
mov
arpl
mov
je
mov
scas
mov
loop
imul
push
sbb
loope
int3
mov
in
push
sbbl
or
out
ret
add
push
lret
dec
and
pop
xchg
ljmp
mov
aam
fs
dec
dec
dec
stos
jb
arpl
inc
xor
aaa
push
xor
movsb
in
into
push
jns
int3
push
repnz
lods
vpsrlq
adc
cmpsb
lret
movsb
or
aaa
xor
and
xchg
jp
pop
sahf
test
fcoms
fwait
and
test
outsl
adc
mov
sub
xchg
repz
lcall
scas
sub
cmpsb
stos
adc
fbld
icebp
adc
sub
mov
inc
sti
pop
movsl
add
cmp
sbb
test
mov
and
call
fcmovb
sbb
pop
nop
sub
push
cmp
add
pop
es
leave
in
loop
push
add
pop
rcr
repz
les
pushl
std
bound
hlt
dec
mov
fmuls
jp
jecxz
lods
fdivl
nop
jnp
clc
inc
push
or
popa
mov
and
mov
sbb
lcall
and
out
pushf
das
addb
jae
xor
xor
pop
fwait
stos
stc
adc
sub
ret
sbb
inc
cmp
scas
dec
jae
lods
popa
mov
sub
jb
or
pop
int3
mov
mov
imul
mov
ljmp
xor
ss
icebp
adc
mov
xchg
imull
mov
movsl
xor
and
jmp
cld
jbe
jmp
ret
mov
add
mov
mov
jmp
jge
cmp
fidivrs
sub
outsb
std
lods
test
addr16
fistpll
sbb
dec
push
cmpsl
loopne
cli
push
movsb
cmp
pusha
push
xchg
push
mov
jno
pop
ss
js
cmpsl
in
and
pop
mov
fxch
scas
or
xchg
mov
mov
adc
lahf
je
pop
orl
inc
aam
ret
xor
inc
fsts
mov
mov
jg
fsubrs
push
cwtl
ss
fistpl
mov
pop
popf
fnsave
or
outsb
cld
subl
fcoms
aam
adc
fcmovnbe
test
repnz
mov
push
pusha
lahf
movsl
add
dec
dec
push
cmp
hlt
mov
mov
jl
data16
jge
mov
out
pop
xchg
das
cmp
push
sub
mov
add
push
repz
bound
jle
xchg
mov
jo
movsl
dec
and
mov
push
xor
iret
or
push
lds
mov
aam
push
shlb
push
cmpsb
aad
shll
sub
and
daa
cld
cmpsl
cmp
pop
jmp
sub
mov
movsb
movsb
fstpl
and
inc
cmp
in
outsl
dec
add
xor
mov
repz
popa
outsb
xchg
cld
in
sahf
cltd
sbb
cmp
inc
imul
add
adc
in
jns
pushf
jg
adc
popa
in
mov
nop
jb
sub
js
dec
cmp
mov
stos
cmp
ds
ljmp
jle
pop
data16
add
dec
cwtl
ljmp
lods
cmpsb
insb
add
cmp
dec
jae
pop
fdivr
jle
xor
loop
fcoml
mov
aaa
push
mov
add
push
pop
push
mov
ret
sahf
insb
jbe
out
gs
push
inc
sub
xor
int
addl
loopne
scas
jmp
dec
mov
push
clc
scas
mov
out
xchg
stos
push
adcl
idiv
xchg
idiv
jnp
lahf
mov
mov
out
loop
mov
sub
mov
push
popf
mov
hlt
xchg
or
adc
cmp
mov
data16
mov
or
dec
test
xorb
cmp
dec
test
aad
popa
jne
pop
iret
std
scas
mov
push
ss
jp
add
push
mov
fisubl
xchg
mov
push
or
cmpsb
dec
pop
punpckhdq
shrb
sarb
cmp
xchg
in
mov
mov
sbb
push
jnp
call
mov
das
adc
repnz
jg
aaa
mull
insb
pop
repnz
and
add
xchg
mov
dec
mov
nop
mov
pop
sbb
inc
test
push
lret
and
fcompl
xchg
ffree
add
pop
dec
mov
mov
fistl
lock
into
ret
loope
sbbl
mov
dec
loop
cmp
nop
loope
jbe
cmpsl
inc
call
pushf
loope
testb
mov
push
scas
sub
or
cmp
and
jp
dec
stos
cli
mov
scas
divb
dec
adc
adc
lods
xchg
mov
mov
cmp
push
mov
fcompl
pop
xchg
scas
mov
scas
inc
subl
inc
sbb
pop
mul
cmp
xchg
stos
sub
addr16
add
push
inc
jmp
push
push
stc
jae
in
mov
mov
stos
dec
jge
adc
jmp
scas
outsl
push
sbb
push
push
and
sbb
rcl
pop
mov
mov
push
es
add
stc
push
mov
idivb
int
gs
jmp
mov
cs
pop
add
imul
mov
add
push
repz
insb
xchg
xchg
xchg
outsl
faddp
scas
and
or
sub
xchg
lods
int3
cltd
stos
xchg
jb
inc
iret
lcall
jp
jmp
add
test
mov
loop
fadd
loopne
pop
lret
xchg
xchg
fistps
push
mov
mov
cli
gs
and
add
movsb
inc
sti
push
xor
inc
lock
mov
jp
imul
fst
outsl
adc
std
enter
xchg
fsub
mov
imul
xchg
pop
cmpsb
fadds
dec
pusha
inc
jbe
xor
xchg
dec
mov
push
mov
jle
mov
xor
pop
fs
mov
mov
fiaddl
cwtl
lods
addb
add
mov
dec
std
push
push
push
push
lea
lods
xchg
in
shr
adc
or
test
inc
lret
test
mov
mov
outsl
movsl
cmp
pop
and
lods
inc
jae
out
add
loop
inc
cmp
cmp
inc
jbe
inc
push
xchg
pop
cmp
jo
xor
cltd
repnz
jle
ljmp
aaa
cmpsb
pop
or
mov
nop
pushf
cmc
cmpsb
out
js
cli
shl
fnstsw
or
cwtl
ret
cmp
xlat
sub
fucomip
ret
out
dec
pop
stos
add
and
xchg
aaa
xchg
sub
and
sub
leave
test
add
test
rcl
push
and
sub
xor
inc
out
inc
popa
mov
jo
push
sub
or
ret
push
out
xchg
in
sti
fadds
jb,pn
addb
add
add
cld
mov
repnz
xor
repz
mov
rorb
mov
xor
push
stos
movsl
jno
dec
adc
cmp
loope
icebp
push
movsl
pop
pop
sar
jp
data16
push
mov
jnp
xlat
pop
lcall
push
fs
mov
xor
pop
xor
jnp
sub
mov
std
in
pop
aam
sar
sbb
jp
jns
insl
push
inc
mov
dec
sar
push
fsubrp
inc
mov
in
adc
movsl
nop
sti
dec
dec
mov
mov
lcall
outsb
mov
jg
jmp
or
xchg
nop
icebp
hlt
into
arpl
xchg
push
push
xchg
push
mov
jmp
jb
push
push
insl
inc
insb
sbb
shlb
or
jp
mov
repnz
repnz
mov
stc
cmp
xorb
inc
sbb
push
jns
adcl
adc
add
mov
test
data16
arpl
into
xor
adc
ljmp
es
xchg
pop
mov
in
mov
push
cs
pop
out
jl
insb
js
mov
rcl
loopne
xor
mov
rcpps
int3
lahf
and
std
aad
pop
repnz
xchg
out
outsl
fldenv
and
jb
into
mov
cwtl
push
fimuls
and
and
push
push
xchg
push
std
inc
push
sbb
movsb
mov
daa
imul
bound
dec
jae
cld
adcl
ret
xchg
sbb
mov
and
xchg
les
mov
inc
fldt
mov
jne,pn
je
pop
or
push
lods
rolb
movsb
xor
mov
in
cs
daa
sbb
sbb
pop
frstor
pop
pop
stos
insb
enter
mov
sahf
push
mov
movsl
insb
push
push
hlt
pop
jne,pt
std
push
adc
xor
push
cmp
scas
lock
xchg
mov
adc
out
xadd
mov
out
leave
push
int
lcall
leave
cmc
pop
pop
jne
imul
stos
lock
push
mov
ds
gs
bound
or
cmp
sub
inc
loopne
mov
mov
pop
js
sbb
pushf
cmc
xor
sti
jnp
int
aam
outsl
lcall
xor
pop
sbb
bound
inc
rorl
imul
into
mov
xchg
pop
dec
jle
dec
pusha
rcrb
xchg
cli
dec
popa
xor
aam
add
sub
push
stos
mov
dec
add
addr16
mov
xchg
jae
push
jg
scas
outsb
mov
repnz
sub
xor
xor
adc
or
push
fcmovu
pop
jge
sub
cld
ret
in
daa
cmp
lods
mov
mov
aas
std
push
imul
inc
lock
aas
cld
lods
add
ss
bound
fcmovne
ds
das
jge
pop
cli
pushl
push
leave
test
xor
add
fs
xchg
shlb
mov
decb
add
mov
out
pop
and
jp
repz
push
pop
insb
add
mov
repz
je
ror
mov
and
and
cmp
jbe
das
aas
push
inc
sub
mov
add
divps
inc
sub
sub
rcrl
inc
jnp
sbb
shrb
in
ds
outsb
and
jg
mov
loope
sahf
gs
inc
mov
insl
jp
std
shrb
pop
push
cld
icebp
ja
add
cwtl
dec
mov
inc
es
mov
dec
lods
xchg
lea
imul
mov
inc
jne
js
and
int
dec
adc
sbb
rcl
pop
mov
jecxz
mov
mov
cmp
and
lods
jno
outsl
ds
stos
outsl
push
push
outsl
or
cltd
mov
sub
adc
xchg
dec
pop
mov
pop
in
push
dec
ror
jmp
cmpsb
lods
fmulp
lock
enter
cltd
repnz
ja
movsb
pop
sti
jg
loope
cmp
lret
adc
rcll
mov
or
js
dec
outsl
jge
shl
hlt
lods
test
add
mov
lock
icebp
sub
or
inc
js
dec
inc
mov
cld
iret
das
pusha
lret
lret
int
or
cmp
es
or
repnz
movsb
es
iret
xchg
cmpsb
out
in
and
mov
mov
lahf
mov
sub
fisubs
xlat
cmpb
outsb
lahf
cmpsl
sbb
add
push
mov
stos
rcrl
cmpsb
cmp
gs
in
or
sub
and
adc
test
int3
jp
cmp
pusha
cli
scas
and
repz
sbb
inc
leave
aaa
inc
inc
je
cmpsl
inc
push
mov
mov
sub
add
repnz
jbe
sahf
mull
and
sub
inc
pop
and
adc
icebp
mov
jnp
dec
sbb
sbb
mov
push
out
mov
ret
mov
push
out
add
popa
aad
cmpb
sarl
cmpsl
movsb
leave
inc
sub
into
cmp
jg
xchg
hlt
and
push
loop
jecxz
add
ss
inc
movsb
xchg
cmpsb
sub
xor
adc
add
je
imul
cmp
adc
sbb
mov
pop
mov
xchg
cli
das
pop
insb
push
add
xor
dec
out
xchg
bound
cltd
inc
lds
and
loop
mov
subl
rorl
repz
mov
movsb
call
xchg
outsl
fbstp
sbb
sbb
inc
jae
sub
ret
lock
dec
and
cmp
adc
inc
ljmp
sti
or
sbb
cmp
xchg
xchg
std
pop
sbb
pop
es
adc
push
aad
dec
stc
push
sub
pusha
ljmp
push
icebp
cmp
mov
sahf
push
mov
clc
pop
lret
pop
lds
bswap
push
push
mov
jae
adc
aaa
sar
add
testb
ror
rcll
inc
stos
pop
sti
mov
outsb
ljmp
jmp
xor
inc
adc
mov
xor
stc
scas
test
dec
stos
inc
xor
xor
adc
into
mov
push
dec
gs
push
xchg
pop
out
test
mov
mov
sub
push
push
mov
cld
into
dec
cwtl
xchg
call
clc
pop
lock
jl
lahf
fucom
push
cmpsb
xor
or
pop
push
loope
jbe
adc
adcb
out
pop
pop
lcall
leave
shr
sbb
jle
xor
stos
xchg
popa
int3
aam
push
mov
inc
dec
sub
xor
adc
pop
or
int
add
in
jmp
jo
push
fucomip
shrl
sub
inc
int
dec
xor
adc
mov
std
push
xchg
std
leave
iret
addr16
dec
stc
xchg
jns
mov
push
mov
test
pop
jmp
jno
fsubl
xchg
push
sub
lock
fsubrs
in
or
mov
sarl
xchg
dec
xor
inc
inc
push
lds
and
sahf
adc
ja
mov
mov
xor
mov
mov
std
insl
fdivs
or
in
push
int3
pop
jne
dec
addr16
pusha
stos
out
xlat
adc
insb
rcrl
or
pop
aad
cmp
lcall
lahf
outsb
dec
dec
xchg
icebp
jo
push
pop
pusha
imul
imul
push
movsb
fnstcw
pop
sbb
cmp
xor
push
adc
dec
mov
push
and
pop
dec
std
cmpsb
inc
cltd
in
scas
fwait
xor
jbe
jae
or
push
mov
pop
repnz
xchg
shll
fcoml
push
cmp
cwtl
adc
stos
outsl
scas
leave
mov
and
adc
ds
pusha
mov
aas
push
mov
adc
ds
repnz
mov
arpl
out
inc
inc
out
cltd
ret
add
xor
fisttpll
repz
xchg
ret
out
mov
mov
nop
or
decb
loopne
in
pop
int
out
cmp
xchg
xchg
mov
and
pop
test
cmc
dec
nop
stc
outsb
cli
xchg
xchg
sahf
test
push
in
cmp
lcall
xchg
inc
sarl
xor
or
fidivl
jge
jp
fsub
rorl
andb
lahf
mov
hlt
or
add
pop
xchg
ja
lcall
sub
mov
xor
pop
ja
adc
movsl
in
movsb
push
xchg
xor
aad
mov
ds
insl
lcall
loope
mov
jl
lock
pop
xchg
scas
rcl
jle
xor
insl
pop
leave
xor
jp
xor
add
mov
xor
xor
stc
dec
mov
insb
push
js
cltd
xor
pop
or
or
jmp
loope
clc
mov
xchg
mov
sbb
popa
bound
popa
cwtl
jecxz
hlt
xor
mov
sbb
sbb
aas
pop
testb
fisubrs
push
gs
repnz
jmp
xchg
cmp
jne
xchg
mov
pop
xchg
lahf
iret
mov
popf
or
adc
pop
rorl
ds
jae
add
adc
mov
push
enter
dec
jmp
lods
mov
xchg
ficompl
push
scas
shl
jbe
mov
and
ficompl
xchg
int3
cmp
stos
push
aam
mov
jge
push
cmp
outsl
jns
sbb
adc
cmp
push
push
pop
adc
es
pop
jnp
pop
or
and
popw
jae
fcoml
dec
cmp
ds
sub
xchg
bound
xor
xchg
sbb
rclb
add
mov
push
mov
movsb
or
fst
jmp
mov
cltd
loopne
jl
test
es
rol
out
sbb
lods
jne
push
pop
xor
decl
test
sub
mov
hlt
dec
add
stos
mov
jecxz
pop
jmp
loopne
mov
cli
cmp
cmp
add
pop
mov
lea
lcall
leave
roll
adc
fs
insb
or
bnd
in
sub
pop
or
sub
icebp
adc
dec
ret
jne
adc
pop
pop
mov
and
push
cmp
popf
add
mov
mov
out
or
sti
inc
es
sti
sbb
xchg
es
lods
sbb
orb
ss
loope
sbb
xchg
jae
xchg
icebp
out
aad
js
pushl
mov
mov
ss
mov
cld
pop
mov
leave
sahf
or
mov
dec
mov
mov
xchg
mov
cmp
sbb
shrl
imul
and
sub
sbb
push
insl
out
test
inc
lds
jecxz
pop
cli
ret
mov
mov
cltd
fstpt
xor
int
test
cs
adc
popa
pop
jo
pushf
cli
xor
mov
incb
loop
sbb
shrl
nop
int
cmc
stos
jne
push
push
mov
sbb
bound
stc
sahf
pop
sbb
xor
dec
je
xor
fcomps
xchg
jns
jb
cs
daa
test
dec
mov
mov
push
inc
inc
and
fistpl
ret
ucomiss
scas
xchg
jg
call
push
dec
push
std
syscall
stos
insl
repnz
xchg
inc
adc
fs
pop
out
clc
lds
nop
jp
leave
arpl
mov
inc
cmp
mov
je
xchg
addl
push
bound
outsb
sahf
push
ret
push
cmp
mov
mov
dec
push
xchg
add
in
int3
mov
push
fnstenv
repnz
addr16
and
push
icebp
outsl
int
ss
cmp
jae
popa
mov
int3
sbb
cs
sbb
jae
scas
adc
les
fiadds
sbb
sahf
dec
adc
roll
ret
lock
and
ret
adc
xor
mov
mov
test
xchg
inc
test
aad
ds
xchg
addr16
cmp
add
mov
pop
inc
xchg
movsl
daa
xlat
sub
jl
out
out
mov
xor
mov
cmc
fwait
out
out
popf
push
adc
mov
test
nop
jo
sub
adc
in
add
dec
fldt
xor
sarb
jecxz
inc
fstpt
xorl
jbe
and
js
sub
in
test
mov
xlat
cmp
and
insb
sbb
push
add
mov
js
dec
mov
sub
cmp
pop
in
fistps
sub
cs
sbb
pop
cmp
add
cwtl
scas
push
arpl
in
pop
and
subb
test
or
outsl
jo
push
repnz
mov
sbb
mov
lods
mov
adc
popa
mov
jp
mov
push
sbb
push
insl
ret
lcall
mov
push
xor
jae
movsl
pop
add
int
jb
insb
testl
ret
enter
adc
sbbb
rcr
outsb
ljmp
fistpll
adc
in
repnz
and
mov
add
test
cltd
es
repnz
or
inc
data16
adc
sub
aaa
into
jo
imulb
jle
xchg
sbb
movsl
adc
sub
sub
sub
mov
scas
pop
loop
insb
or
inc
mov
scas
mov
or
mov
bnd
lret
pop
pop
jnp
xchg
scas
push
xchg
mov
pop
or
adc
fcomps
cli
shr
sbb
or
jmp
dec
movsb
loop
and
enter
push
cmpsb
int3
mov
mov
jo
popa
pop
aaa
mov
in
leave
fisttpll
mov
rclb
mov
xor
or
sbb
ja
std
dec
mov
pop
sub
push
and
jg
mov
loop
inc
push
outsl
jmp
gs
dec
inc
in
add
and
scas
adc
push
xchg
cmp
sbb
les
inc
les
outsl
dec
mov
xor
push
inc
ss
inc
sbb
js
addr16
lret
mov
pop
dec
mov
dec
sbb
cmp
dec
lods
fadd
ficoml
bound
xchg
mov
xchg
in
mov
int
movsb
inc
negb
ljmp
mov
push
leave
repz
mov
mov
rcrb
adc
and
jnp
lcall
inc
test
push
inc
pop
fdivrs
test
xchg
fcmove
pop
and
push
sub
push
out
test
jno
imul
sub
mov
in
jp
icebp
inc
jecxz
pop
fstpt
mov
mov
jge
dec
mov
cmc
or
xor
cli
mov
gs
mov
imul
mov
out
out
sub
dec
dec
dec
add
pop
out
mov
dec
aas
testl
fs
cmpsb
mov
in
shrb
fnstsw
adcl
push
jne
fs
sub
jb
inc
mov
std
push
jno
fwait
rol
sti
sub
movsb
adc
sub
inc
mov
dec
inc
pop
mov
or
cli
in
push
mov
mov
mov
in
test
mov
add
call
sub
push
in
movsb
loopne
sbb
cltd
mov
inc
lcall
lahf
ljmp
xchg
xor
inc
fwait
sbb
pop
dec
lods
fiaddl
nop
je
and
jp
test
dec
jl
xchg
xor
push
es
das
jo
jb
adc
subl
dec
lock
push
push
xchg
rclb
or
sbb
mov
incb
or
js
sahf
daa
jmp
jb
fbstp
sub
mov
jmp
pop
jnp
cli
cmc
or
mov
xchg
popf
sbbb
aaa
jg
pop
int3
jns
and
mov
push
pop
sbb
jmp
adc
inc
and
ror
pop
pop
sbb
mov
add
xchg
int
cmp
sti
mov
sbb
sub
repnz
int3
imul
out
fldt
cmp
and
lcall
repnz
cmp
or
in
cmp
std
jmp
xor
adc
mov
sub
cltd
pop
daa
sbbb
int
loop
into
add
fs
inc
jbe
and
jg
loop
mov
lahf
pop
imul
lret
cltd
lods
aas
and
mov
scas
mov
inc
push
stc
int
popl
and
or
add
insl
sub
imul
je
sub
xchg
imul
jnp
scas
pop
mov
std
xchg
push
push
push
push
cmp
popf
std
imul
in
xchg
cmp
mov
add
sti
pop
arpl
dec
push
sbb
inc
daa
xor
push
push
mov
dec
inc
cmp
shrb
aas
xor
ret
aas
jge
xor
cmpsl
jecxz
and
into
xchg
pop
jno
inc
inc
jo
xchg
lret
fcoml
iret
sub
mov
jmp
pushf
movsl
les
movsb
and
out
jecxz
dec
pop
sbb
std
lods
mov
add
adc
xor
dec
arpl
ja
cltd
cmp
fistpl
sub
aas
and
adc
repz
pop
push
xchg
js
je
adc
lcall
pop
inc
outsb
pusha
sbb
shll
test
icebp
mov
cmp
push
loope
mov
lods
cmc
in
lahf
in
mov
std
xor
xchg
dec
jmp
push
and
lret
arpl
popa
iret
fwait
enter
add
stc
adc
in
leave
outsl
xor
push
add
dec
cmp
je
lret
fisttpl
push
xchg
pop
jae
scas
stos
add
pop
push
popa
push
fisttps
test
daa
adc
cmp
shll
inc
mov
sub
sbb
mov
les
cmp
sub
xchg
out
or
push
lret
mov
fs
xchg
rorl
fnstenv
leave
fucomp
push
pop
lea
mov
sahf
sbb
mov
movsb
stc
lock
rcrb
inc
sub
xchg
cmp
rcrb
fstpl
mov
out
fsts
xor
fwait
pop
pop
daa
inc
enter
int
inc
xchg
imul
rorb
dec
scas
xchg
jne
in
xchg
xorl
pusha
cmpsl
lea
xor
lcall
lods
gs
push
jns
rcrb
pop
mov
test
sub
mov
out
aaa
lods
test
lcall
xchg
fwait
cmpsb
xor
scas
adc
call
or
pop
jb
mulb
mov
mov
lcall
mov
adc
divl
fsubl
or
jo
leave
call
mov
stc
ljmp
xchg
loope
pop
pop
sub
push
mov
outsl
int
adc
add
cmpsl
inc
or
xchg
cwtl
adc
dec
or
and
les
cmpsl
adc
ss
ss
stos
mov
push
rorb
test
xchg
mov
dec
sub
dec
fiaddl
sub
sub
jbe
popa
repnz
adc
mov
lcall
in
divb
jbe
into
pushf
push
loop
fisubl
jg
gs
xor
jae
mov
fs
aam
push
fstps
or
sbb
pushf
mov
fldl
cmp
sub
fldcw
outsb
add
pusha
movsl
xor
aad
mov
dec
mov
repnz
pop
sub
and
mov
in
adc
push
cltd
rcrb
cli
scas
pop
adc
jno,pn
lods
mov
stc
and
pop
inc
cmpsb
lret
cwtl
jnp
shlb
ljmp
ja
xor
rcrb
shrl
cmp
arpl
mov
sahf
dec
add
push
push
xchg
les
pop
clc
xchg
call
les
out
out
jmp
inc
dec
or
xchg
out
lahf
xor
int3
lret
push
adc
cltd
leave
xor
add
add
add
inc
mov
cmp
push
fwait
aaa
aas
sbb
xor
push
repnz
dec
adc
les
pop
add
ret
scas
shl
dec
mov
push
aas
mov
lcall
adc
mov
test
mov
push
add
mov
cltd
jmp
cwtl
dec
inc
js
lock
jge
movsl
lret
mov
inc
pusha
pusha
shlb
push
icebp
pop
fucompp
repz
psubusw
stos
rclb
outsl
mov
and
lret
movsl
adc
jp
test
inc
jae
mov
jle
pop
shll
sbb
loope
sub
fcomps
jne
jecxz
nop
jnp
jo
negl
loopne
push
jge
jb,pt
ret
sub
rorb
xor
fmuls
fdivrl
inc
in
push
mov
cld
int
shrb
mov
scas
daa
adc
aam
lods
lods
cltd
lret
inc
aaa
jge
xorl
fisubs
sbb
out
shrb
lcall
xor
daa
fildll
popa
push
aad
rcrl
inc
jnp
mov
sub
pand
fists
mov
stos
or
rolb
pop
loop
jne
dec
pushf
mov
sub
sub
movsl
adc
cmpsb
and
mov
jp
hlt
in
and
lcall
inc
cmc
mov
mov
push
pand
data16
sbb
test
fsub
out
sub
xor
sbb
xchg
int3
sbb
cli
in
sub
lods
stc
outsl
out
ret
mov
leave
gs
les
cmpsl
lret
jmp
or
test
out
mov
fwait
insl
dec
jae
inc
pmulhw
fwait
dec
and
out
data16
faddl
testl
lret
pusha
leave
insl
ds
imul
pop
clc
addr16
push
in
cmp
mov
int3
pop
ds
cmp
push
and
sub
push
fnstsw
mov
cli
fsubrs
cmpsl
sub
dec
add
mov
outsl
xchg
sbbb
shl
mov
mov
or
in
inc
cmpsl
mov
out
sub
mov
and
or
scas
xchg
out
sti
test
scas
cmp
pop
aam
testl
fcmovbe
fmull
xor
test
nop
jl
test
add
push
ds
lcall
mov
mov
mov
stc
and
xor
aaa
mov
ja
sbb
push
shlb
nop
das
push
fs
inc
insl
inc
dec
or
or
aam
push
movsl
movsl
mov
xor
inc
xor
rcr
dec
and
stc
mov
call
inc
jle
push
es
int3
mov
sahf
sbb
or
sub
xor
rcll
push
roll
push
cmpsb
xchg
ljmp
stos
mov
sbb
lods
sbbl
jae
aaa
sbb
shrl
sti
xor
shrb
push
shlb
push
lea
aas
add
mov
pushf
sub
jle
rorb
mov
dec
xchg
daa
xor
jns
lods
and
icebp
imul
mov
xchg
imul
cmpsl
xor
mov
ficomps
mov
cmpsb
ss
loop
add
inc
in
mov
dec
pop
out
adc
jmp
movsl
sarb
lahf
gs
psubusw
cmp
testl
out
adc
fstps
pop
fdivp
sub
pop
mov
and
sbb
scas
inc
push
lahf
mov
push
stos
out
mov
jmp
push
jecxz
xchg
push
xor
mov
fs
mov
sti
scas
gs
out
and
movsb
addr16
push
repnz
adc
insl
jbe
fs
dec
out
mov
sarl
xor
mov
mov
in
xlat
sbb
pop
les
sbb
cmpsl
mov
xlat
xlat
and
xchg
mov
pop
inc
les
pop
sbb
jne
pop
jge
test
push
mov
iret
or
cwtl
nop
adc
ljmp
mov
popf
addr16
add
cli
add
push
and
rclb
insb
mov
push
sbb
sbb
out
les
xchg
cli
push
movl
cmpsb
pop
xchg
pop
addl
in
or
push
xchg
rcrb
ljmp
mov
movsl
cmp
sub
in
pop
dec
das
scas
fs
push
fcoml
outsb
mov
jge
push
add
inc
adc
fisubrl
das
popa
add
popf
push
cmp
int
push
jo
arpl
clc
mov
mov
out
test
push
xlat
or
and
mov
or
xchg
push
scas
aas
imul
cltd
pop
mov
xor
xlat
mov
sub
xor
les
push
or
out
out
push
mov
cmpsb
mov
pop
sti
mov
pop
jno
cmpsl
pop
aad
push
push
add
orb
inc
cltd
lods
jo
int3
std
inc
inc
ss
stos
fmul
sbb
sahf
sub
or
sub
jo
pop
mov
xor
rclb
inc
pop
test
cmp
add
push
shrb
into
fbstp
jo
lret
jae
xchg
fwait
sbb
pop
push
adc
inc
bound
add
pop
mov
mov
call
lret
aad
cmp
test
js
sbb
cmp
test
sub
jns
dec
sub
mov
and
adc
add
xor
daa
jmp
enter
lods
out
cmp
jl
cmp
loopne
pushf
inc
mov
sbb
stos
adc
repz
sub
cmpsb
adc
pop
add
ror
xchg
cmp
adc
adc
test
xchg
rol
xorb
jl
mov
movhlps
shll
test
cmp
and
xchg
js
mov
lods
sahf
pop
jmp
stc
cs
popa
push
cmpsb
into
pop
nop
insl
repz
fwait
push
test
aas
mov
fistl
jmp
push
and
stos
inc
xchg
loopne
cmp
test
aam
and
and
jb
out
shlb
mov
adc
cwtl
jns
das
lods
adc
in
call
push
jmp
sarb
cmc
inc
fsubr
or
jmp
scas
xchg
or
xor
bound
pop
cmpsb
lahf
pop
jno
cmp
xor
imul
mov
inc
xchg
mov
popa
sub
hlt
lock
orl
mov
repnz
xor
pop
sbb
pop
and
xchg
xchg
loope
dec
jb
dec
jnp
lods
cmpb
es
int3
sbb
jno
addr16
xor
in
sub
pop
push
enter
out
xor
cmp
loop
or
push
aam
sar
jp
sub
add
leave
push
mov
and
std
jnp
data16
notl
in
pop
lods
sub
cli
mov
and
mov
jns
popa
xchg
sbb
mov
mov
shlb
adcl
mov
push
inc
jns
fdivl
adc
pop
pop
inc
insb
jae
jp
ja
lret
or
jmp
jle
inc
subl
filds
nop
mov
xor
jl
mov
js
add
sahf
popf
shr
and
orl
mov
jl
xchg
lret
loopne
push
add
xchg
inc
sub
cmp
inc
mov
mov
addb
sub
add
xchg
lods
in
in
or
pushf
sahf
repnz
and
pop
out
mov
sub
adc
in
pop
call
lock
fimull
cmpsb
fnstenv
jae
cld
dec
jle
cmp
cmpsb
and
or
dec
aam
test
mov
cmp
and
adc
push
cs
out
jb
stos
mov
dec
mov
jo
mov
sub
add
push
pop
or
sahf
xchg
and
and
cmpsb
outsb
testl
mov
mov
mov
inc
push
insl
int3
call
cmpsl
fildl
sbb
mov
inc
and
and
in
pusha
loopne
fisubrl
jbe
inc
jl
fdivl
push
rolb
mov
push
cmp
int3
mov
arpl
push
mov
cmp
inc
cmc
push
dec
fsubl
cmp
jl
mov
test
xor
in
push
lahf
jbe
mov
pop
sarl
dec
xor
push
push
out
repz
dec
push
movsl
imulb
push
sub
in
imul
dec
xchg
mov
je
or
inc
mov
orl
push
rcrl
cmc
test
push
clc
scas
pop
repnz
jp
mov
cmp
loop
sub
and
add
lret
cmpsl
rorb
aas
mov
rclb
in
jp
mov
imul
arpl
ret
xchg
inc
cld
inc
rcrb
mov
call
daa
mov
jne
std
xor
mov
or
insl
inc
inc
xchg
jnp
xor
pop
and
daa
imull
push
loope
mov
jno
sbb
test
mov
and
push
adc
inc
dec
mov
mov
fisttpl
stc
push
mov
lea
jmp
cmp
mov
mov
in
mov
fnstcw
hlt
cmp
cmc
push
cmp
xchg
frstor
and
push
es
adc
mov
repnz
mov
aaa
adc
and
pop
roll
into
lock
add
ficompl
xor
dec
test
adc
outsb
leave
jle
push
test
sbb
rol
mov
out
jle
pushf
dec
jne
or
push
xchg
jo
cmp
aaa
or
mov
xor
les
rcrb
cmc
fildll
or
scas
push
mov
ljmp
mov
fdiv
push
es
lret
mov
das
mov
mov
pusha
bt
add
pop
push
cwtl
mov
lcall
bound
sbb
icebp
imulb
dec
fmull
mov
xchg
decb
jb
test
stc
dec
cmp
add
and
outsl
arpl
mov
xchg
or
stc
add
dec
jne
loop
pop
stos
pop
lret
cmpsl
dec
rclb
jl
adc
dec
in
sbb
fsub
ljmp
mov
xchg
cmp
fdivrs
push
out
and
ja
mov
aaa
idivb
cmpsl
sti
inc
or
and
jl
and
pop
mov
aam
movsb
push
push
pop
xor
nop
sbb
out
jb
mov
pop
nop
shll
cmp
ret
jo
out
pop
inc
xor
ja
xchg
rorl
lret
add
gs
sbb
jg,pt
jmp
bnd
in
addr16
jl
and
lahf
lods
arpl
sbb
bound
aaa
cmc
mov
jne
scas
sbb
subl
mov
arpl
mov
jne
clc
sti
idivb
test
dec
mov
imulb
insl
sub
test
fwait
lds
xlat
mov
xlat
fdivrl
jge
sahf
mov
movl
js
sbb
out
cmp
sbb
dec
lea
mov
push
lds
adc
xlat
or
popa
shll
ljmp
aam
xor
test
cmpsb
call
mov
and
pop
add
stc
sbbb
and
add
jne
push
mov
xchg
cmp
pop
push
sub
hlt
call
xlat
and
mov
leave
pop
pop
cmpsb
rolb
dec
xchg
cwtl
aas
jecxz
repnz
jae
sbb
nop
adc
int
mov
ja
aam
pop
push
mov
push
and
jg
dec
xor
lds
xchg
call
or
cmp
imul
ret
lret
icebp
iret
mov
int3
ficoml
dec
pop
jnp
or
test
add
addr16
or
pavgb
repz
roll
in
aaa
shlb
pushf
xor
loop
add
popa
push
jns
pop
inc
inc
inc
in
adc
jo
adc
mulps
pop
in
sbb
int3
in
fcomps
mov
jbe
inc
dec
outsb
mov
dec
pop
sahf
mov
cmpsl
dec
sbb
mov
stos
flds
mov
aad
cs
test
lock
lds
dec
push
jl
jbe
fs
dec
test
mov
sub
pop
iret
sub
es
xchg
sbb
shrb
push
fistl
push
cmp
jb
add
mov
icebp
push
sub
sub
adc
outsl
iret
out
mov
int
sbb
xchg
sbb
pusha
lods
or
adc
testl
dec
mov
xchg
mov
test
sub
loope
jp
or
jecxz
mov
addr16
push
dec
mov
push
ds
sub
xchg
test
inc
xor
movsb
int3
stos
ficomps
out
subl
xchg
cltd
cltd
leave
stc
int3
inc
xchg
push
add
add
test
ja
dec
ficoml
es
repnz
fnsave
sub
fidivs
push
ja
movsb
or
aas
sbb
sbb
rcr
xor
repz
jl
shll
pusha
inc
aad
mov
push
sub
fisttps
ljmp
scas
divb
scas
xlat
pop
sti
sub
dec
inc
adc
test
sub
cld
or
lods
mov
push
pop
push
adc
call
jo
lods
mull
gs
shlb
sarl
mov
sub
ds
mov
cmp
mov
sub
pusha
in
mov
pop
xchg
xchg
aas
mov
mov
xchg
mov
jb,pn
push
ret
ja
xchg
rcll
and
sub
jne
bound
jecxz
cltd
scas
mov
or
pop
into
pushf
lods
sahf
lds
insb
xchg
in
addr16
iret
mov
insb
in
and
test
mov
icebp
pop
or
jbe
test
jl
lret
shlb
mov
jnp
jge
sub
mov
test
filds
nop
insl
popf
jbe
cmp
sub
sbb
xchg
lahf
outsl
or
dec
lret
cltd
sbb
lea
push
bound
loop
call
lock
lret
rcr
add
add
and
mov
fstp
xchg
inc
pop
lods
insb
mov
setae
jns
jmp
shr
xchg
cwtl
scas
sarb
icebp
jne
rorl
pop
icebp
or
pop
je
inc
ja
stc
call
stos
jb
mov
fwait
push
mov
jno
push
sub
in
out
mov
pop
dec
scas
jl
mov
mov
cli
insl
int
dec
xor
pop
mov
jl
inc
aaa
test
mov
mov
push
mov
inc
cmpsb
in
movsl
cmp
mov
add
jg
ret
mov
lret
mov
dec
sub
arpl
dec
sti
inc
inc
subb
leave
testb
movb
add
mov
dec
inc
and
addb
mov
sub
xor
xchg
and
stos
cs
push
jno
pxor
mov
and
popf
fwait
push
sbb
xchg
cltd
xor
pop
nop
jbe
sahf
stos
jl
inc
jne
les
mov
js
out
jo
dec
jge
mov
movsl
loope
call
lds
xorl
pushf
push
mov
push
mov
das
int3
stos
or
push
daa
xchg
push
stos
and
aaa
arpl
cld
repnz
pop
mov
mov
push
shlb
das
mov
mov
and
fmull
sub
ljmp
hlt
xchg
pop
gs
xchg
push
jle
push
out
jne
inc
sub
xlat
aam
mov
inc
enter
xor
ds
ss
dec
shll
repnz
cmp
jno
mov
ds
mov
and
jo
cltd
imul
je
xchg
cmpsb
jns
inc
push
sbb
popa
push
pop
aam
enter
les
add
roll
add
lods
lret
sbb
aaa
pushf
or
mov
inc
ret
je
mov
imul
mov
sub
loop
pop
inc
mov
sbb
or
inc
jnp
mov
add
cmp
in
mov
xlat
shll
xchg
mov
das
push
cmp
mov
cld
bound
and
js
xchg
fsubrs
lods
and
shl
aad
testb
inc
std
mov
jp
push
pusha
cmp
divb
cld
or
inc
lcall
nop
out
lret
jnp
mov
pop
dec
push
aam
mov
insl
sbb
push
push
and
nop
into
push
pop
adc
arpl
sbb
fcoms
jns
push
adc
jo
adc
or
mov
mov
inc
add
out
mov
mov
imul
push
mov
fdivrs
std
out
push
rcrb
loope
sub
inc
cmp
pop
dec
cmp
test
out
int3
lea
cmp
movsb
pop
mov
jbe
scas
jno
rcrb
es
jo
sub
stc
xchg
inc
loop
sbb
pushf
xor
dec
mov
into
int3
leave
mov
pop
es
ret
mov
loopne
test
cmp
ja
gs
cmp
arpl
mov
fs
ret
or
inc
out
xchg
xchg
push
movsb
lret
jne
daa
adc
push
je
lea
inc
mov
stos
out
ret
rcl
cmp
imul
xor
jbe
and
addr16
addr16
mov
cmp
adc
push
leavew
test
pop
lds
or
les
mov
adc
pop
repz
insl
lret
mov
mov
cmp
push
stos
and
sub
fistpll
lock
subl
cli
xor
jle
mov
mov
aas
stos
mov
mov
dec
lock
dec
pop
mov
or
add
xchg
jmp
out
aad
adc
adc
mov
insb
rcrb
push
cmp
daa
lods
bound
lock
push
jnp
push
loope
mov
lret
ljmp
icebp
pushf
add
mov
bound
xchg
loop
sub
mov
gs
out
jo
cwtl
pop
mov
and
or
sbbl
stos
pop
or
mov
mov
dec
mov
sub
adc
lahf
out
pop
mov
xchg
adc
sar
out
or
cmp
sahf
sbb
mov
outsl
outsl
sub
mov
aas
inc
add
mov
jg
add
push
dec
ds
fs
inc
call
jb
lret
mov
fmull
lods
jle
push
gs
in
fidivl
pop
pop
xor
js
arpl
sub
divl
cmpsl
and
jp
mov
add
jg
and
call
lods
mov
xlat
push
jmp
pop
out
setle
js
mov
loopne
out
lret
sbb
cli
inc
cmp
xchg
jmp
push
aas
push
popl
pushf
push
cmp
repz
movsb
pop
sub
repnz
es
ds
add
push
mov
mov
sub
mov
test
adc
and
sahf
mov
xlat
adc
mov
ja
insb
jo
lahf
mov
sahf
inc
loop
clc
and
pop
inc
daa
pop
or
test
data16
pop
imul
in
pop
popa
lcall
lcall
lods
inc
aam
xor
adc
mov
jne
push
nop
adc
pushf
or
sbb
pop
xchg
movsb
mov
mov
aad
push
cs
ror
or
jg
jnp
lds
test
addl
ds
cltd
ret
mov
jb
pop
jmp
add
rorb
movsl
sub
dec
pop
cs
daa
sbb
cmp
push
cmp
loop
add
test
popa
mov
test
sub
in
mov
icebp
es
mov
jne
add
out
and
pop
or
ret
adc
adc
test
test
or
aad
sti
loopne
inc
xchg
in
pop
mov
sbb
dec
add
inc
jmp
sub
mov
cwtl
cmp
pushf
cli
and
xchg
shl
mov
cld
ficompl
adc
stos
shlb
mov
icebp
mov
mov
movsl
dec
stc
fst
xor
movsb
mov
sub
in
adc
sub
js
lret
jo
pop
ja
inc
jb
jmp
fnstsw
repnz
rcrb
dec
out
pop
out
outsb
out
rorb
push
out
mov
outsb
std
cmp
rcrb
in
jo
mov
lret
fmuls
cwtl
xor
pop
aas
test
shlb
jbe
movsb
jnp
lea
cmpsl
jl
inc
fimull
sub
push
push
push
add
fs
mov
sub
pop
inc
mov
stc
cmpsb
add
pop
mov
jmp
hlt
loopne
imul
test
out
int
ret
xor
push
shlb
jp
mov
mov
out
add
fdivrs
fucomp
mov
mov
or
mov
jmp
insb
gs
sbb
pop
inc
stos
mov
test
cs
fmull
movl
psubq
stos
stos
hlt
pop
jecxz
cmc
icebp
push
leave
cmp
mov
cmp
inc
mov
pop
nop
xchg
into
dec
pushf
fcmovnbe
adc
inc
lcall
ds
mov
sub
xor
xor
repnz
jp
xor
dec
jae
sub
push
cwtl
xchg
adc
andl
sti
sub
dec
sub
or
sub
sbb
arpl
xchg
icebp
inc
lahf
stos
xor
outsb
add
ficoms
or
jne
out
das
fisttpll
int3
jmp
or
push
call
mov
rep
jnp
test
sbb
jge
pop
popa
arpl
sbb
popf
xor
add
bound
and
sbb
shr
data16
scas
fldl
push
adc
and
fldenv
jg
dec
xchg
out
ret
xor
push
leave
movsl
mov
mulb
mov
add
js
jle
xorl
lea
rcl
pop
stos
sbb
and
fldz
add
mov
mov
or
js
dec
enter
cwtl
or
in
xor
ds
mov
adc
inc
out
shlb
or
and
cwtl
stos
divl
sub
lahf
data16
adc
inc
or
inc
add
or
cmp
cmc
in
inc
cltd
mov
dec
popf
mov
xor
out
add
inc
cltd
add
push
mov
imul
jge
cmp
out
cmc
and
lahf
and
sbb
repnz
sub
push
stos
adc
sarb
fs
add
mov
cmp
test
sub
nop
xchg
insl
push
jae
pop
icebp
bound
in
mov
outsl
mov
push
in
negl
leave
fwait
xchg
xchg
mov
sbb
push
lea
push
ja
pop
out
mov
jne
push
jg
jmp
cli
ror
pop
fucomip
and
fs
pop
insl
lcall
out
shl
jg
sbb
std
and
mov
add
cmpsl
mov
add
cmp
orl
mov
mov
aam
jecxz
pop
pop
push
aaa
jge
outsb
push
lret
lea
dec
jbe
mov
mov
les
repnz
xchg
mov
mov
xor
fnstenv
pop
jno
sbb
test
and
out
call
fsubs
sub
aam
xor
cmp
in
lods
sub
movsl
out
out
xor
or
ja
and
mov
sbbb
addr16
js
sar
adc
fisubs
xchg
in
cmp
inc
sub
xor
aaa
jns
sub
imul
pop
add
adc
bound
shlb
fsubl
stc
mov
lcall
fnsave
jae
mov
sub
cli
faddl
sub
push
repnz
leave
xorl
mov
adc
negb
or
imul
dec
pop
adc
stos
cmp
mov
mov
ficompl
mov
sbb
add
xchg
lret
stos
mov
pop
add
scas
and
adc
pop
aad
cmpsl
mov
cmp
sub
imul
sub
lods
inc
mov
adc
mov
sbbb
orl
sarl
dec
stos
int
mov
aam
shr
jns
cld
pop
xchg
sbb
jl
mov
call
xchg
out
in
dec
xchg
sbb
cmp
push
popf
out
sub
dec
in
mov
mov
js
mov
cmovl
add
imul
les
pop
mov
jb
je
jnp
cwtl
aaa
popl
jle
and
push
lcall
sbb
cmpsl
and
mov
inc
pushf
hlt
ret
add
sbb
push
out
push
shrl
xchg
test
stos
dec
int3
cli
ficompl
add
in
and
addl
mov
mov
insb
jbe
inc
push
gs
adc
roll
imul
dec
pop
jg
jbe
inc
sbb
adc
std
push
mov
addr16
mov
in
sub
or
pop
ret
jne
push
cld
and
sbb
jecxz
or
dec
mov
mov
cmp
sarl
lcall
and
inc
insl
jmp
xchg
push
hlt
jmp
pop
xchg
cmp
sub
fistpll
mov
add
or
and
les
mov
adc
cli
in
loopne
sub
cltd
adc
insl
dec
sub
adc
lock
in
in
fwait
cmpsb
ss
lods
ficompl
jle
jne
xor
popf
cmpb
xchg
xchg
arpl
and
jno
xor
lret
rcrl
fadd
in
nop
or
rcrb
ss
lret
popf
je
sarb
js
mov
xor
dec
mov
add
loope
mov
pop
sub
sbb
push
mov
adcb
enter
mov
bound
add
fmuls
pop
sub
enter
dec
and
popa
dec
jl
lea
push
mov
in
iret
out
imul
pop
ret
jae
popf
mov
mov
pop
test
jmp
shr
decl
int
xchg
jb
jle
sub
mov
mov
imul
push
or
popa
xchg
jb
push
aam
cmp
lods
test
xchg
or
mov
xlat
sub
sbb
mov
arpl
into
add
outsl
sti
std
mov
jecxz
out
xor
les
inc
std
xchg
xchg
in
fdivrs
adc
xchg
xorb
lahf
lahf
sbb
cmp
or
lock
pop
push
pop
xchg
pop
int3
ds
ds
fisubs
in
aas
call
push
sub
inc
mov
gs
enter
sub
and
xlat
xchg
add
mov
sub
sbbl
cld
xchg
dec
mov
cmp
rcll
push
cmc
test
ss
icebp
mov
mov
rclb
dec
mov
push
out
push
leave
aaa
mov
mov
repnz
adc
cmp
scas
xchg
icebp
inc
xor
add
imul
loope
jae
or
dec
sub
mov
xor
dec
fwait
rcrl
cli
pop
adc
repnz
sbb
xor
sub
out
lcall
push
js
jecxz
pop
xchg
push
aam
in
mov
nop
mov
mov
xor
sbb
fwait
push
mov
int
fdivl
cmp
pop
inc
sbb
fildl
rcrl
lods
aad
sub
fldenv
fnstsw
jno
xor
xchg
dec
sub
enter
xor
push
mov
call
add
inc
cli
sbb
xchg
cmp
lret
notl
inc
lock
in
cmp
sahf
push
ret
icebp
or
testb
or
jo
pop
cmpsl
repnz
add
sbb
push
add
out
push
xor
mov
or
mov
out
xor
mov
in
fsub
aaa
roll
loope
repnz
add
int3
test
rclb
sbb
mov
addb
stc
inc
fwait
jnp
imul
sti
cmp
xchg
jge
das
xchg
cmp
fdivrl
fildl
pusha
loope
push
nop
fimuls
pop
stos
xor
and
icebp
inc
nop
push
je
jecxz
mov
mov
cmp
mulb
dec
es
and
jecxz
jae
sbb
jno
rcl
jmp
inc
enter
xchg
movsl
xadd
lahf
lcall
xchg
hlt
inc
sbb
cmc
mov
pusha
fdivs
jns
sbb
xchg
gs
inc
les
ficoml
jo
dec
loopne
adc
sarl
xchg
cmpb
xor
pushf
xorb
mov
pushf
sbbl
and
add
fsubrl
cmp
int
mov
jmp
fptan
les
inc
and
or
xor
cmpsb
loopne
int
cmc
xchg
es
pop
data16
leave
insl
test
mov
pop
loopne
or
mov
xor
call
mov
int
lcall
cmpsb
xchg
lret
xchg
adc
pop
and
adc
scas
clc
or
loope
xor
pop
std
push
mov
sub
test
lret
orl
sbb
or
hlt
jmp
gs
xchg
frstor
repz
push
dec
or
cs
outsb
and
sti
pop
mov
inc
jns
repnz
frndint
inc
sahf
aad
cli
sti
cmpsl
cmp
ljmp
lahf
xchg
lahf
pop
inc
andb
clc
cmp
push
lret
data16
lds
sbb
mov
rorb
jbe
ja
mov
idivl
dec
mov
add
xchg
or
lret
mov
fisubl
test
or
adc
xor
mov
adc
mov
sti
jmp
lahf
cmp
pop
or
and
in
mov
inc
add
cmpsb
inc
or
in
int3
push
xor
jecxz
mov
jo
xor
mov
dec
in
ljmp
das
xchg
sub
pop
cmc
mov
aad
aas
push
add
rcrb
scas
test
hlt
xor
in
mov
mov
fldt
mov
pop
test
imul
rorb
push
ss
mov
cmp
cmp
xor
stos
add
aam
mov
mov
call
rcll
lcall
sbb
adc
jo
fsubs
fldenv
movsb
mov
fimull
lcall
or
pop
loope
std
push
pop
mov
xor
lcall
pop
push
pop
pop
and
mov
mov
sub
popf
out
insb
mov
and
mov
sub
cmp
cmp
test
data16
inc
or
mov
jmp
hlt
push
inc
lcall
pusha
outsb
daa
xchg
mov
add
pop
mov
xor
sti
cmp
or
pop
loop
in
inc
add
xorl
sbb
jo
push
cltd
sbb
in
mov
mov
repnz
pusha
push
lods
xor
pop
sahf
out
xchg
inc
sbb
enter
test
icebp
or
std
xchg
or
test
loop
xchg
cmpsb
mov
and
das
fs
pop
data16
outsl
das
in
cmpl
mov
fidivrl
mov
dec
or
ret
xor
je
jg
add
sti
out
dec
stos
je
into
cmp
call
ds
lock
lcall
mov
dec
mov
mov
loope
sub
mov
or
mov
jmp
repz
out
imul
scas
adc
in
lods
adc
filds
sub
cmp
popf
cmp
dec
mov
iret
lea
js
jge
pop
mov
aas
dec
movsb
lret
cmp
pushf
jle
out
xchg
out
repnz
xor
jnp
xor
cltd
lret
push
sahf
inc
repz
push
mov
inc
pop
cwtl
or
dec
mov
ljmpw
enter
xchg
repz
cmp
jae
addb
sahf
call
dec
cltd
xor
pop
test
pop
cmp
sbb
stos
jge
in
pop
inc
into
fistpll
adc
xchg
jnp
lcall
std
jbe
adc
aam
shlb
fwait
mov
ret
sbb
jl
and
jp
outsb
fs
das
jo
popa
dec
andb
or
inc
filds
iret
test
xchg
stos
test
jbe
cmp
popf
repz
xor
dec
xchg
call
iret
jbe
mov
xchg
mov
pop
sub
cmp
jmp
jmp
into
dec
and
sbb
mov
movsb
loope
out
data16
cltd
clc
xor
fistpll
and
mov
mov
pusha
mov
jecxz
sti
cmpb
sbb
or
clc
mov
xchg
and
sahf
pop
call
xchg
ds
les
and
ret
mov
lret
clc
test
add
arpl
fnstcw
int3
rolb
stos
push
sarb
std
mov
inc
je
and
sbb
push
mov
inc
inc
pop
movsb
jno
sub
mov
pause
jp
mov
adc
cmp
outsb
pop
inc
push
inc
inc
mov
ljmp
les
outsl
jecxz
push
ret
or
pop
aaa
cmp
push
ds
addr16
pop
int3
jne
cmp
je
and
pusha
adc
inc
inc
fistpll
mov
mov
sbb
xchg
arpl
xor
push
mov
xchg
mov
mov
iret
shl
sbb
jb
cli
mov
cld
and
aad
xor
pop
jo
sbb
mov
inc
stc
push
repnz
adc
fsubl
sahf
adc
pop
lret
ficomps
aas
rorb
loope
setns
imul
hlt
jo
add
mov
mov
mov
lcall
ss
cmp
sbb
xchg
jne
fstpl
enter
js
push
pop
and
in
xor
inc
push
or
pushf
jno
clc
pop
cmp
in
xor
lahf
mov
int3
fs
dec
pop
fldenv
addr16
repnz
or
aam
sub
dec
mov
nop
jae
cmpb
je
scas
stos
nop
mov
jecxz
xor
fdivl
bnd
mov
mov
mov
mov
mov
or
out
push
cs
xchg
das
push
mov
fdivr
int
cli
jg
out
insb
nop
nop
mov
mov
imul
aam
call
jecxz
dec
cmp
arpl
mov
shrb
insl
pop
stc
mov
jg
stos
lret
es
jmp
lods
inc
rcll
js
fstps
lods
mov
pop
gs
and
arpl
xchg
mov
or
lret
idivl
clc
movsb
pop
or
mov
out
and
pop
push
mov
fs
xor
mov
scas
mov
in
aad
inc
adc
or
add
shlb
add
jmp
je
or
ja
xchg
xchg
mov
pop
ja
gs
xchg
mov
mov
repnz
popf
and
dec
or
adc
mov
xchg
js
xchg
cli
hlt
dec
les
cmp
int3
in
and
pop
jae
test
push
mov
mov
mov
xchg
aaa
ss
inc
stc
pop
movsl
sbb
or
and
xor
cmp
push
xchg
js
mov
arpl
push
dec
mov
dec
mov
push
inc
dec
sbb
jp
insl
push
outsb
jle
aam
pop
sbb
cmpsl
stos
mov
xor
imul
incl
inc
scas
pop
mov
xchg
repz
add
sub
mov
popa
add
jno
nop
xor
in
jl
lods
dec
xor
adc
hlt
dec
sarb
in
clc
sub
popa
sub
add
or
jne
and
add
sub
sub
cwtl
push
and
sbb
sbb
fst
stos
sub
jae
jl
cmp
fiaddl
outsl
mov
aam
stos
mov
mov
jl
mov
ret
or
das
pop
mov
sbb
clc
les
mov
fistpll
push
sbbb
andb
or
insl
adc
xchg
lret
push
or
cmp
rclb
fldenv
mov
imul
or
push
xchg
push
int
pop
sub
adc
push
loope
pushf
dec
xchg
push
cmpsl
and
jns
cmc
insl
pop
dec
inc
cmp
mov
fincstp
lods
cs
xor
or
xor
mov
pop
fiadds
inc
cld
mov
in
pop
les
mov
jle
hlt
fwait
jp
lea
int3
push
dec
adc
push
je
and
nop
jl
shll
ja
xchg
mov
sub
jnp
push
adc
mov
cmpsl
pop
jbe
je
and
shr
mov
push
inc
aad
outsl
jo
adc
inc
cmc
mov
cmpb
pop
imul
inc
jl
sbb
iret
jnp
push
jae
push
icebp
sti
cmp
cmpsb
sbb
decb
xor
pop
or
loop
push
sbb
cmp
mov
inc
sarl
mov
adc
mov
dec
mov
fnstenv
or
xchg
adc
xorl
mull
mov
adc
out
cltd
add
jecxz
and
sub
cmp
inc
out
sbb
jbe
sbb
mov
push
mov
inc
cld
sbb
push
adc
loopne
lret
adcb
jmp
sbb
jp
sahf
leave
inc
push
add
fbstp
std
mov
enter
lret
in
add
sahf
jmp
ret
adc
cmp
nop
cltd
in
xor
add
sahf
and
xchg
rol
cmp
in
cmp
inc
or
stos
xlat
ja
push
and
enter
icebp
sub
sti
scas
inc
pushf
cmp
imul
xchg
arpl
jmp
pop
out
lods
dec
and
inc
lds
xor
adc
mov
mov
inc
push
cmpsb
jmp
xchg
push
es
push
test
scas
and
or
mov
stos
pop
or
loop
scas
jge
adc
mov
movsb
inc
and
fldl
mov
add
jecxz
arpl
outsl
jle
insl
ljmp
mov
arpl
or
mov
cmp
mov
mov
xchg
push
jae
addr16
rolb
mov
cld
and
call
add
mov
lahf
add
andb
mov
xlat
or
add
or
cmp
arpl
mov
xchg
fiaddl
sub
jae
test
cmpsl
sbb
fsubrp
jle
lea
pop
push
in
add
adc
mov
jno
and
notb
test
nop
insl
loop
jbe
mov
mov
cmp
sbb
add
adc
test
pop
loopne
aam
inc
movsl
aad
adc
push
inc
xchg
shrl
xor
mov
sbb
dec
or
data16
aad
cmp
inc
jl
jno
sub
mov
xor
call
xor
pop
adc
ja
clc
jg
cli
sbb
adc
out
insb
rclb
fisttps
fidivrl
mov
into
mov
push
imul
inc
xchg
sub
fwait
sbb
in
inc
add
fwait
test
cmp
jl
popa
adc
test
xchg
in
and
push
pop
mov
xor
out
push
jbe
mov
fnstsw
lds
aam
jg
std
outsb
cmp
jmp
out
adc
sbb
add
pusha
test
imul
sbb
xchg
sub
cld
jmp
scas
mov
xchg
decl
es
xchg
andl
jnp
cmp
mov
cs
pop
push
jp
imul
iret
loopne
push
mov
scas
cmc
stc
push
out
loop
add
xchg
dec
test
sahf
mov
sbb
dec
nop
mov
fldl2t
jge
test
add
mov
fisttpll
cs
jle
sbb
cld
lock
inc
inc
add
ret
add
xchg
pop
scas
rcl
push
or
push
xorl
stos
pop
loop
sbb
data16
jecxz
xchg
or
test
mov
sub
ss
jmp
sbb
pusha
repz
ss
movd
jge
jns
sub
in
mov
mull
xchg
cmpsl
or
push
daa
into
movl
mov
lods
adc
jae
pop
jl
jbe
jb
test
loop
xor
inc
mov
dec
pop
xor
ja
sub
mov
xor
pop
xchg
mov
xchg
pop
pop
and
out
cli
adc
xor
shl
arpl
cmp
mov
push
mov
jg
or
and
fucomp
mov
or
repnz
and
jne
mov
fiadds
dec
imul
sub
sub
hlt
jecxz
xchg
outsl
fcomps
mov
jno
leave
cmp
push
fnsave
dec
inc
pop
pop
push
cmp
xor
pop
movsb
jg
cmp
push
sti
fiadds
outsb
pop
or
leave
adc
adc
mov
loopne
mov
sub
push
shlb
pop
aad
test
in
push
jno
xchg
push
adc
sbb
push
out
clc
xchg
dec
sbb
inc
jbe
sub
xor
rcrb
adc
addr16
mov
std
add
lahf
pop
test
leave
jns
inc
mov
or
in
mov
push
fisubrs
push
subb
push
mov
jns
fstl
addb
dec
rcl
sub
pop
ret
mov
mov
mov
mov
xor
xor
mov
dec
or
das
fistpl
aas
cwtl
jne
decb
dec
xchg
xor
push
pop
rclb
push
in
test
test
inc
loop
in
loope
mov
movsl
and
imull
xor
add
adc
dec
sub
popf
cmp
cmp
les
stc
mov
imul
in
rcrl
loop
xchg
push
and
add
pushf
sub
push
and
cmp
daa
les
add
sbb
adc
cltd
pusha
stc
inc
gs
inc
hlt
xchg
lods
daa
mov
push
daa
sti
insb
fwait
and
mov
mov
xchg
adc
es
repnz
xor
and
pushf
stc
sub
cmp
outsb
adc
mov
adc
leave
iret
test
push
loope
lea
cltd
stc
xchg
loopew
arpl
lret
dec
fadds
push
mov
mov
ss
pop
movsl
jle
and
push
out
jo
add
popf
mov
sub
int
xchg
daa
push
or
mov
int
pop
mov
jb
sti
xor
inc
shrb
mov
fs
lea
imul
mov
pop
imul
sbb
inc
pop
jns
add
mov
sub
dec
popa
test
stos
cli
sub
sub
rcll
xchg
and
mov
inc
jo
and
pop
mov
dec
in
xlat
sub
cmc
dec
dec
pop
jnp
xor
xchg
sarb
movsl
out
cmp
ljmp
ret
push
mov
push
mov
test
test
shll
in
lods
fisttpl
lea
sar
pop
cmc
cmp
iret
mov
pop
pop
or
adc
aaa
fwait
ds
pop
inc
and
sbbb
fsts
mov
in
adc
clc
and
mov
mov
test
dec
pop
pushf
jecxz
cmp
adc
add
sub
je
push
jecxz
xor
ret
stos
jbe
insl
in
fmuls
push
mov
xlat
sbb
das
fisubrl
xchg
jmp
outsb
dec
mov
push
add
hlt
adc
xchg
into
scas
and
inc
loopne
out
push
pop
stos
cmpsb
mov
xchg
xchg
les
add
xchg
scas
cmp
push
dec
stos
mov
pop
xchg
popa
sub
enter
add
roll
mov
enter
inc
cli
sub
lret
fldcw
loope
xor
ret
out
pop
loop
jle
fstpt
jne
je
ss
clc
add
aas
iret
enter
push
test
dec
cltd
sub
enter
xor
dec
idiv
lea
sbb
and
in
loope
or
mov
into
cmp
dec
into
pop
pop
test
xor
mov
add
jbe
xchg
popf
pushf
xchg
adc
data16
cmp
push
rclb
and
rorl
fldl
mov
inc
loopne
xor
test
sbb
data16
cltd
in
dec
push
test
push
pop
cltd
in
xchg
sub
cmpsb
xlat
out
jmp
xchg
mov
inc
jg
add
insl
ljmp
outsb
ljmp
sti
std
aam
xchg
cmp
dec
and
test
sahf
cmpsl
lods
add
push
jae
dec
fs
rcrb
outsb
cmp
in
dec
add
inc
stos
jne
pop
repnz
gs
aas
loope
xchg
xchg
lods
in
pushf
or
cs
not
pop
sarb
pop
jge
pop
les
loop
outsl
idivl
jae
sbb
push
outsl
mov
clc
or
sbb
or
test
inc
mov
cld
xchg
je
sbb
push
out
sub
stc
clc
je
xchg
mov
mov
cmp
out
jp
jmp
scas
jmp
push
scas
cltd
lea
add
xchg
fbstp
inc
ss
mov
mov
mov
xchg
cltd
add
sub
lret
and
xchg
dec
lods
cmp
dec
in
xchg
ds
inc
push
inc
pop
cwtl
fldl
lahf
js
jo
scas
xchg
orb
mov
dec
daa
mov
sbb
int3
add
jne
jne
jns
sub
sti
mov
sub
stos
fdiv
sub
dec
cld
sbb
adc
scas
jp
and
stos
lock
test
ljmp
or
pop
adc
adc
mov
mov
pop
ret
loope
or
in
dec
sahf
xchg
iret
push
inc
rcr
pop
aam
push
ret
xchg
pop
push
cwtl
sbb
cs
inc
mov
pusha
stc
pop
cmpsl
inc
dec
dec
jl
ds
je
adc
sti
dec
or
jnp
out
addl
and
stos
shll
pop
test
mov
adc
push
pop
cmp
sub
incl
xchg
pop
out
cmpsb
xor
divps
jo
dec
enter
stos
mov
stc
ror
fwait
push
mov
loop
and
jo
dec
in
pop
lcall
mov
mov
ret
pop
addr16
xchg
leave
jo
sub
mov
cmp
adc
icebp
mov
test
in
out
inc
lods
pop
ficoml
inc
mov
sar
inc
adc
out
sbb
lods
pop
mov
icebp
out
test
pop
ja
loope
xlat
loop
jmp
push
les
stos
inc
cmp
mov
imul
cmpsb
jl
leave
sahf
xor
pop
jns
jb
je
call
pop
cld
repz
je
xchg
fs
jo
test
sub
add
loop
xchg
sarb
pop
aas
dec
fistl
mov
cmp
roll
les
xchg
mov
xchg
aaa
je
xor
pop
mov
sub
repz
jmp
add
lret
or
cmp
mov
aam
loopne
mov
or
daa
dec
pop
dec
es
test
push
push
cmp
aas
test
test
xor
mov
push
scas
incb
iret
or
xor
xchg
jge
jne
push
jge
inc
in
pop
ret
pop
mov
shll
lods
push
or
sbb
fildl
xchg
test
movsl
push
push
and
mov
mov
push
lcall
leave
adc
mov
mov
jg
pushf
dec
mov
in
ret
shll
test
xor
inc
ja
xchg
mov
popa
movsl
and
xchg
insb
outsb
mov
and
pop
scas
shlb
iret
and
or
pop
imul
aas
sbb
lock
xorb
mov
cmpsb
cmp
xlat
xchg
inc
fistl
jg
cmc
pop
push
lods
ss
pop
jp
xchg
bound
test
in
and
cmc
add
mov
add
mov
cmp
add
in
sub
mov
xchg
adc
popf
mov
scas
jmp
movsb
movsl
mov
add
add
lds
aam
test
lret
dec
rcr
adc
cmpsl
clc
or
test
out
sub
call
sarl
dec
std
push
push
push
cmp
loopne
out
and
aam
popl
ret
shrb
and
dec
jp
test
ficoms
pop
xor
out
aam
popa
pop
xlat
pushf
movq
push
adc
ss
ds
je
cmpsb
popa
sub
sub
lcall
pop
int
shrl
mov
in
lahf
xchg
push
pop
pop
mov
pop
sbb
or
jge
loopne
pop
fcompl
je
jmp
sbb
and
stc
bound
hlt
mov
nop
cld
sub
sub
inc
repnz
icebp
bound
jge
pop
rorb
imul
jns
iret
ffree
mov
mov
push
jno
imul
aam
and
aas
sbb
loopne
jmp
in
cmpsl
sub
or
ret
outsl
push
dec
arpl
gs
lahf
sub
cltd
add
test
rcrl
test
cld
bound
mov
fldenv
cmp
shrb
xorl
mov
cli
stc
sahf
andb
insl
sbb
pusha
lret
es
inc
scas
pop
jbe
jno
push
fldenv
pop
rorb
ret
push
les
ds
inc
inc
sbb
pusha
inc
adc
mov
enter
jle
fsubs
inc
mov
jge
sub
mov
call
sub
adc
and
add
imul
fisubl
dec
and
fstps
negb
jmp
sbb
in
jbe
out
mov
mov
add
sub
jno
insb
push
mov
cmc
pop
jns
push
xor
ja
addb
les
inc
xor
jecxz
ja
test
push
push
pop
mov
push
jno
push
stc
cmp
fdivl
xor
and
cmp
add
subl
xchg
xor
mov
pop
repz
xchg
lods
loop
mov
lret
int3
cmpsl
loope
test
data16
push
mov
icebp
hlt
sahf
fstps
ss
sbb
cli
jne
enter
sbb
data16
jbe
mov
push
test
and
repnz
scas
cmpsb
mov
in
lret
inc
int
in
xchg
dec
sub
pop
fwait
dec
and
cmp
pop
scas
xor
push
push
xchg
add
inc
push
mov
or
xchg
aad
outsl
in
je
fs
or
adc
sbb
dec
mov
stos
mov
xor
jo
lds
mov
lds
scas
mov
sti
lret
or
inc
sbb
cmp
fbstp
sbb
mov
sub
xchg
sub
dec
lods
lds
cmp
dec
ficoms
ja
pop
xchg
or
mov
push
mov
cltd
jge
push
and
inc
enter
das
sub
pop
add
lods
dec
dec
int3
sub
push
jmp
inc
lock
cli
and
gs
sub
and
test
inc
xlat
jae
mov
mov
fdivrp
out
arpl
cmpsl
mov
jno
stos
pop
data16
repz
arpl
shlb
je
adc
add
mov
xlat
in
mov
roll
pop
jecxz
xor
pushf
loopne
mov
cs
lods
xor
jbe
movsl
int3
inc
xor
mov
clc
pop
jae
push
gs
xor
out
fbld
jmp
add
dec
rcl
push
es
movsb
cmp
cli
inc
in
les
scas
mov
jbe
xor
fbstp
scas
push
mov
mov
jae
mov
mov
jbe
jns
xor
js
repnz
inc
xor
mov
test
or
push
popa
mov
aam
stc
and
xor
bnd
inc
in
dec
rcll
cli
cmp
je
outsl
cmp
dec
cmp
dec
xchg
pop
dec
push
jne
cmpsl
lcall
adc
loope
cmp
hlt
pop
mov
lahf
shll
popf
sahf
and
pop
add
int
pop
adc
test
jge
xchg
stos
fwait
add
iret
xor
adc
jnp
stc
cmp
mov
jmp
cmpsb
bound
inc
and
in
aam
dec
pusha
mov
adc
jae
push
stc
lds
ja
sti
add
jecxz
mov
pop
lods
inc
loop
test
mov
xchg
fwait
cmpsl
mov
mov
ds
sti
test
add
les
hlt
mov
mov
test
ja
dec
cmp
sbb
jne
notb
xchg
adc
fs
mov
pop
jge
andb
or
sbb
push
gs
clc
shrb
and
xlat
in
push
incb
push
pushf
daa
in
sub
out
jo
dec
jg
mov
stc
and
xchg
mov
pusha
xchg
push
ret
mov
adc
ds
in
xor
mov
or
xchg
imull
pop
repz
scas
xor
jmp
mov
dec
pusha
outsl
sbb
call
lds
cli
stos
mov
cli
dec
int
mov
insb
and
gs
xchg
fs
and
cmp
adc
rcrb
dec
test
pop
sub
dec
jbe
inc
das
xchg
movsb
mov
cmpsb
je
xchg
sbb
aad
negb
push
daa
xchg
or
outsl
cmp
scas
pop
subb
out
sub
mov
jns
xchg
sub
mov
in
ficompl
xor
int
ret
nop
ja
stos
sub
out
pushf
outsb
daa
pop
sbb
xchg
fs
xchg
shrb
adc
jnp
jo
jae
repnz
int3
jnp
leave
cmp
adc
test
cltd
insl
xor
sbb
jmp
loope
inc
gs
dec
jne
jbe
mov
arpl
adc
cmc
cli
adc
and
in
jmp
pusha
ret
sbb
lods
sbb
cmp
movsl
movsb
ffree
arpl
dec
xor
push
push
pop
sub
jp
pop
testb
cltd
aas
mov
jno
mov
psubq
std
test
jecxz
push
cmp
inc
dec
and
mov
cmp
js
mov
out
aad
lock
mov
out
nop
push
loope
pusha
mov
sub
push
enter
stc
addr16
je
sbb
jbe
adc
mov
andl
into
loop
bound
adc
add
sub
push
rcr
test
pop
das
mov
jmp
inc
mov
jnp
stos
xor
cmpsl
xchg
jae
popa
and
loope
or
es
fdivr
adc
inc
mov
popa
pop
jge
pop
or
rcll
cmp
and
dec
jnp
int3
jle
xor
sbbb
gs
sub
ljmp
fucomi
xchg
xchg
xchg
pushf
cmp
rcrl
pop
pop
pop
sti
xor
test
dec
jg
xchg
add
mov
add
xor
lods
lcall
pop
cmp
xor
xor
call
cld
imul
push
xor
inc
add
xor
add
daa
icebp
fsubl
add
pop
inc
mov
lods
mov
fsubrp
sub
cwtl
movsl
leave
mov
push
or
cmp
mov
sbb
out
lret
sbb
ret
insl
cli
mov
lret
cld
jae
sbb
rclb
dec
subl
pop
repz
inc
iret
ret
inc
imul
pop
lcall
mov
mov
std
dec
lret
mov
or
or
push
inc
and
mov
mov
mov
adc
push
add
mov
iret
loopne
popf
push
push
mov
arpl
mov
pop
es
hlt
sbb
push
push
popa
sub
jge
mov
lods
andb
stos
pop
shlb
jb
pop
dec
dec
xor
scas
mov
aas
jl
xchg
and
adc
add
push
pop
dec
sahf
jmp
std
mov
cmpsb
ja
lods
and
std
sub
mov
push
cmc
pop
fbstp
dec
shlb
outsb
push
add
xchg
int
in
pushf
in
xor
cmp
fisttpl
mov
fsubrs
inc
out
jo
xor
aad
jp
out
mov
cmc
imul
push
fldt
sub
mov
inc
subl
ret
push
sub
cwtl
pop
popa
xlat
mov
dec
mov
mov
sub
dec
mov
sbb
aam
push
popf
mov
push
push
xchg
scas
and
dec
fisubs
mov
sbb
dec
xchg
test
lcall
popf
push
mov
aaa
or
dec
leave
in
icebp
outsb
lods
fnsave
sub
fiadds
js
push
repz
inc
insl
int3
cld
movsl
cli
jle
pop
addr16
pop
std
cmpsl
pop
dec
or
adc
and
add
stc
xor
movsb
out
out
xchg
mov
scas
fcomps
lods
xchg
push
dec
jnp
imul
in
push
sub
sub
sub
pushf
in
cmpsb
mov
add
mov
add
lahf
jecxz
jnp
pusha
mov
ljmp
mov
jbe
das
in
push
xchg
stc
pop
jg
mov
stos
pop
test
mov
ret
stos
mov
cltd
gs
iret
leave
push
repz
stos
pop
and
outsl
les
mov
sub
sbb
std
stc
pop
jns
xor
outsb
fnstcw
mov
leave
std
xor
jge
sbb
sub
xchg
neg
cwtl
xchg
mov
jae
xor
inc
jbe
xor
gs
xchg
pop
adc
sbb
and
sbb
into
jg
fidivs
and
out
xchg
int
cmp
out
mov
cmp
test
iret
les
addr16
into
data16
iret
cmp
inc
in
xchg
mov
imul
in
jns
mov
mov
in
les
shr
test
inc
sbb
mov
inc
lret
xor
shrl
mov
fdivl
inc
inc
push
jl
call
bound
es
or
xor
pop
call
roll
cmp
sub
xor
inc
cmpsb
ss
mov
jg
inc
mov
jecxz
arpl
mov
ret
movsb
add
out
lock
adc
out
enter
mov
adc
mov
xor
adc
xchg
repz
jne
into
stos
mov
cs
aad
mov
push
mov
xor
mov
jnp
cmp
mov
aam
cli
lods
ja
sub
movsb
in
adc
sbb
add
mov
pop
loopne
imul
mov
fmull
lods
xor
int3
add
ss
call
dec
sbb
xchg
dec
sti
jbe
add
lods
int
sti
inc
pop
stc
pop
cmp
out
rcll
push
xchg
out
pop
subl
test
mov
stos
hlt
pop
pop
mov
cltd
test
mov
pusha
ret
cld
mov
inc
xchg
imul
sub
mov
aas
add
cmp
xchg
jle
in
fidivrl
ficomps
inc
std
mov
dec
mov
xor
dec
out
xor
aam
push
add
mov
fldenv
aaa
jl
xchg
jae
mov
mov
push
push
push
movsb
outsl
or
add
add
fadds
xchg
add
adc
stos
and
pop
out
push
lahf
jle
mov
cwtl
dec
and
popf
cmp
jb
pushf
push
loope
sub
mov
inc
mov
lret
sbb
push
test
xor
rorl
add
mov
pushf
test
mov
cli
aaa
das
mov
iret
sub
rorb
push
mov
stc
out
add
rclb
clc
xor
xchg
out
xor
loopne
and
test
outsl
repz
mov
add
sub
in
jbe
fimull
in
pop
mov
int3
imul
mov
dec
adc
dec
mov
roll
fisttps
push
jnp
addr16
subb
xchg
cltd
pop
or
jne
aad
dec
pusha
into
mov
and
lods
test
sahf
inc
add
shlb
push
mov
pop
cmp
movsl
cmpsb
daa
imul
ret
test
sbb
mov
push
adc
sahf
lahf
and
leave
stc
add
and
divb
or
add
adc
cmpsb
nop
cltd
scas
sbb
and
sbb
pop
add
pushf
dec
sbb
sub
pop
inc
hlt
out
jno
lds
ljmp
jae
mov
ljmp
and
xor
cli
xchg
push
cmp
pushl
jle
ret
sbb
jns
sub
mov
pop
lcall
aas
inc
sub
cwtl
or
jge
loope
cmc
in
inc
fwait
sarb
movsb
push
jl
add
sub
xchg
mov
mov
sub
cmp
mov
loop
mov
cmp
sbb
push
dec
movsl
addb
imull
inc
inc
aam
add
inc
dec
xchg
loop
pushf
popf
and
cltd
add
push
daa
repz
and
mov
shll
mov
ror
scas
dec
sti
jp
rcl
xor
nop
cmp
std
js
flds
bound
enter
test
into
push
xor
and
mov
pop
filds
jecxz
fsubrl
push
lods
lret
cld
sbb
push
pop
jo
je
mov
cmp
or
ds
fdivrl
cmp
dec
fxch
pop
js
dec
data16
scas
jl
ja
push
mov
sbb
or
xchg
adc
ss
inc
adc
in
push
xor
cmpsb
lret
pop
jp
mov
data16
mov
cltd
xor
ficomps
cli
aad
aas
addb
out
push
subl
cmp
sub
and
xchg
sbb
inc
lea
and
cmp
add
pop
stc
xchg
insl
add
mov
nop
xor
mov
shll
sub
mov
cmp
dec
push
mov
xor
stos
or
mov
jle
dec
jg
sub
sub
andl
or
andb
xchg
divl
mov
stos
push
and
dec
mov
jge
adc
adc
imul
mov
jp
jnp
aas
pop
daa
int3
jbe
mov
push
or
adc
mov
outsl
xor
lret
dec
mov
stc
fimull
and
lock
movsb
and
pop
lods
jmp
dec
pop
stos
ret
rol
frstor
add
test
js
mov
data16
mov
enter
inc
xchg
dec
addr16
imul
or
jbe
gs
andl
gs
shlb
bound
jmp
cmp
jp
clc
sbb
jmp
clc
xlat
inc
je
pop
jo
dec
movsb
mov
jo
xchg
and
pushf
call
sub
or
xor
pushf
test
mov
mov
add
in
data16
adcl
add
lret
out
inc
lcall
xchg
pop
or
sbb
dec
lret
xchg
daa
mov
cwtl
xor
cmp
mov
and
mov
dec
scas
out
adc
sbb
push
push
mov
lods
pop
js
out
imul
mov
lock
jle
std
lea
cli
mov
xchg
mov
xor
push
repnz
fdivrp
movsl
mov
fwait
jecxz
test
scas
cld
xchg
insl
mov
jns
push
fdivl
lds
pop
sbb
fwait
add
mov
mov
add
subl
xor
jecxz
mov
cs
cmp
arpl
addr16
pop
fwait
and
pop
fistl
add
xor
cmp
inc
jno
xor
addr16
in
sbb
add
jnp
dec
sub
xchg
or
pop
adc
ss
arpl
in
fmul
sti
mov
pop
stos
in
dec
pusha
pop
test
ljmp
out
pop
mov
xor
mov
aad
add
push
call
pop
imul
inc
call
pop
call
push
shlb
jne
call
rorl
ja
xor
divl
xor
xchg
jae
in
dec
mov
sbb
mov
xchg
cmp
cmp
pop
mov
jmp
sti
jl
xchg
sbb
in
iret
xchg
les
shl
aam
lahf
orl
sub
pop
inc
xor
pop
add
arpl
xchg
mov
mov
push
rcll
movsl
sub
and
cwtl
adc
jge
rol
add
rolb
imul
push
mov
mov
and
add
aas
js
lahf
cmpsb
fs
and
sub
outsb
xor
jae,pn
sti
xchg
cld
roll
test
mov
bound
mov
incb
xchg
cli
inc
pop
dec
pop
jmp
movsb
test
scas
xor
testl
cwtl
imul
dec
mov
das
hlt
mov
in
push
mov
int
arpl
push
mov
jns,pn
add
neg
cmp
cmp
xor
sbb
test
push
loope
fdecstp
add
sbbb
cmp
out
lods
add
shrl
add
out
mov
dec
mov
sub
xchg
int3
imul
adcb
mov
lcall
xchg
and
cmpsl
ds
out
push
cltd
imul
xchg
ret
dec
clc
pop
pop
mov
pusha
and
frstor
leave
sbb
jbe
negb
mov
outsb
jle
sbb
jns
shll
in
outsl
ss
and
roll
scas
fmul
xchg
lods
sarb
sub
lahf
bound
popa
les
dec
or
sarb
scas
and
mov
pop
hlt
and
addl
xor
xchg
xor
shl
xorb
rolb
cmp
popa
out
cmp
imul
pop
stos
cli
mov
data16
xor
xchg
sub
stos
stc
pop
movsl
xchg
mov
mov
ret
inc
scas
out
pop
out
shll
push
cmp
in
fmull
pop
pop
push
in
gs
xor
sub
dec
dec
xchg
stos
mov
ds
adc
test
cmp
cs
sub
jb
inc
jb
nop
cs
cltd
sbb
or
or
cld
out
xchg
pop
xor
mov
jb
jl
or
std
popf
jmp
aad
scas
ljmp
and
ss
mov
xchg
je
in
jl
pop
dec
cmp
inc
jns,pn
iret
adc
sub
dec
cld
xchg
dec
ret
jp
les
popf
imul
insl
movsl
sub
push
cmc
in
setge
jge
pop
cli
scas
pop
int3
jbe
int3
xor
mov
xlat
cmpsl
imul
ds
ds
jnp
bound
mov
nop
pushf
mov
push
cmp
sub
mov
add
stos
lods
es
mov
adc
out
xor
adc
dec
inc
pop
insb
mov
xor
push
and
scas
mov
imul
repz
push
fs
outsl
xchg
pop
and
cltd
add
sbb
mov
push
out
lretw
dec
div
scas
push
xchg
adc
jge
dec
rcll
mov
cmpsl
stc
stos
nop
sbb
cmp
fdivs
xor
pushf
out
push
outsl
lret
xor
mov
fadds
nopl
dec
jle
insl
pusha
push
and
test
scas
pop
mulb
cmp
pop
ret
leave
jp
adcl
cmpsl
xor
pop
and
sbb
cmp
mov
fwait
add
fwait
push
inc
ss
aas
push
lret
sbb
loopne
cltd
xchg
inc
pop
mov
and
enter
add
mov
shlb
std
fdecstp
cmc
mov
in
push
sbb
jle
lods
mov
out
je
mov
and
push
cmc
in
pop
sbb
sbb
add
or
int3
jno
std
sub
imul
hlt
xor
cmp
push
pop
mov
add
dec
test
pop
mov
sub
enter
call
inc
push
ret
mov
cmp
add
push
mov
mov
stc
fwait
xchg
dec
mov
adcb
sar
cmovg
add
xchg
push
mov
rcrl
pusha
or
lock
pop
xchg
insl
adc
fbstp
xlat
sub
mov
call
into
or
mov
inc
call
add
cmc
sub
loop
or
fmull
inc
adc
jbe
repz
popa
enter
push
cmp
xor
mov
aam
inc
fwait
lock
stos
push
mov
int3
je
mov
sub
fimuls
mov
add
ja
or
sbb
mov
pusha
ja
dec
jbe
shlb
jmp
adc
sbb
in
pop
add
pop
clc
lea
movl
test
out
adc
bound
jb
js
in
cmpsl
addr16
loop
cmp
push
testl
test
pop
mov
mov
test
pushf
xor
mov
subl
jns
mov
mov
mov
nop
mov
or
mov
es
mov
jle
push
add
sbb
xor
lods
js
stc
lods
pop
mov
jb
dec
mov
insl
push
stc
addr16
stc
inc
scas
add
xor
adc
xchg
lahf
hlt
outsl
aam
shr
sbb
mov
cltd
loope
pop
xchg
aaa
clc
cwtl
aas
jp
out
rcrl
jbe
xor
xchg
mov
xchg
data16
adc
jp
inc
lock
int
jmp
xchg
pop
jle
pop
or
dec
jns
test
xchg
adc
cmp
mov
outsl
xor
aam
ret
addr16
push
lret
cld
push
cmp
mov
popa
ss
jl
aam
mov
cmp
push
sbb
in
mov
adc
sbb
jno
js
inc
adc
adc
aad
push
jns
or
inc
hlt
pop
jne
cmp
gs
xchg
ds
lds
mov
mov
push
lea
xor
add
mov
adc
push
leave
push
insb
test
rorb
lret
into
imul
into
push
mov
inc
orb
and
bnd
mov
sarl
xchg
scas
shlb
in
in
jmp
sarb
loopne
les
push
and
mov
inc
xchg
stos
stos
sar
ljmp
sub
jns
adc
xor
inc
mov
fwait
hlt
jns
xor
jno
stos
icebp
les
xchg
pop
ret
push
das
jbe
mov
dec
fs
mov
out
sti
lret
lods
pushf
dec
es
ret
addr16
jbe
jg
sbb
mov
popa
cltd
lock
mov
push
pop
aad
pop
mov
outsl
test
lret
push
cld
pop
add
pusha
out
xchg
dec
cs
push
out
xchg
adc
pop
mul
xchg
incb
test
add
mov
push
call
mov
and
and
gs
sbb
cmovbe
or
push
in
test
lahf
lret
arpl
cmp
mov
repnz
imul
sbbl
dec
mov
cmpsl
shlb
mov
enter
xor
add
es
stos
movsb
outsb
sbb
into
and
imul
jne
cmp
and
rorb
out
out
pusha
mov
inc
sub
ja
sub
sti
and
out
and
mov
testl
xor
in
in
push
or
imul
daa
push
scas
push
cmpsl
pop
lds
mov
inc
and
test
sub
repz
or
pop
push
push
das
sub
jmp
push
xor
inc
cs
call
clc
xchg
fwait
pop
ffreep
jecxz
push
jg
enter
mov
push
mov
jle
cmp
in
fs
push
loopne
lods
or
enter
mov
js
sti
xchg
ds
shll
fucompp
loopne
jp
sbb
in
addr16
imul
pop
ja
std
mov
push
jae
push
xchg
ret
push
shr
leave
dec
add
add
cmp
leave
lods
mov
xlat
and
pusha
in
dec
lahf
outsb
push
push
roll
xor
imul
test
jae
cmp
pop
pushfw
cmpsb
cmp
out
mov
sbb
fadd
jae
in
pop
dec
cmpsl
xchg
push
cmp
pushl
insl
popf
xchg
cmp
xchg
sub
orb
gs
fwait
sarb
cmp
and
dec
push
mov
jl
nop
mov
pop
out
and
shrb
jns
shr
notl
mov
out
test
jno
add
pop
out
andl
jae
mov
aam
push
adc
cmp
lea
xor
adc
stos
push
fwait
mov
push
cwtl
xor
and
out
push
xchg
xor
jecxz
add
dec
mulb
mov
push
jb
inc
inc
dec
into
jnp
pop
inc
rorl
dec
aam
mov
je
jno
cmpsb
jne
hlt
incb
ds
les
js
xor
stos
int3
xlat
cltd
adc
or
push
mov
pop
shlb
fs
mov
mov
lret
clc
fstpl
clc
stc
sahf
mov
call
mov
aaa
inc
sub
sbb
mov
stc
rorb
or
mov
std
mov
sbb
pop
dec
movsl
sbb
std
sbb
lods
jmp
jno
cltd
scas
and
mov
lahf
and
push
dec
xchg
mov
divl
test
push
pop
dec
jl
add
ss
ja
out
cmp
push
jmp
add
add
loop
push
cvtdq2ps
push
pusha
subb
inc
push
movsl
cmp
rorb
lods
js
aas
lds
push
mov
and
cmp
sbb
xchg
sub
dec
shrb
mov
add
movsl
or
adcl
sahf
aad
lock
mov
or
lcall
push
inc
xchg
pop
repnz
jecxz
clc
in
xchg
inc
inc
dec
push
dec
inc
loope
test
repnz
xchg
aaa
sub
jbe
cmpsb
cmpb
xchg
ss
int3
mov
mov
rcl
inc
sbb
xchg
mov
xor
je
incb
xchg
and
jnp
dec
fcoml
mov
ljmp
cmp
lcall
pop
xchg
cmp
mov
out
lds
sbb
repz
inc
push
dec
mov
mov
jecxz
pop
mov
adc
push
outsb
in
inc
xorl
scas
je
int3
out
push
cwtl
sahf
inc
sarb
dec
enter
push
ficoms
movaps
inc
ss
inc
inc
pop
mov
inc
mov
sub
mov
aas
jge
push
sub
rcrl
orl
lock
daa
mov
sti
xchg
sbbl
lahf
ret
pop
mov
xchg
inc
mov
sahf
das
or
ret
pop
insl
dec
test
sub
jne
fnsave
add
push
and
pop
das
xlat
insl
icebp
push
int3
sub
xor
dec
int3
cmp
xor
movsl
faddl
xor
int
add
gs
iret
xchg
jg
pop
xor
je
inc
cmpb
cmp
cmp
nop
pop
sbb
push
pop
push
mov
dec
push
pusha
adc
idivb
lods
jmp
or
pop
jnp
cs
repz
xor
dec
push
inc
out
xor
pop
jbe
jno
inc
mov
or
dec
mov
into
xorb
lock
xor
add
inc
cmp
jno
dec
sub
repz
push
sub
outsl
cmc
outsb
mov
mov
dec
and
mov
sub
adc
loope
imul
lcall
aaa
dec
fdivl
fnstenv
add
stos
or
jno
xlat
addb
jmp
scas
ja
lcall
call
xorl
dec
xchg
and
mov
cltd
popa
sub
sahf
inc
push
jne
fs
insb
cmp
sub
adc
mov
cmp
cmp
int
aas
in
hlt
inc
xchg
aas
adc
movsl
cmp
movsb
xor
jecxz
pop
pop
inc
push
lret
sbb
push
bound
push
das
pop
xchg
xor
pop
lret
mov
xor
cmp
lds
lods
lahf
and
ss
insb
fnclex
loop
stos
or
push
in
pop
in
lds
sub
pop
and
adc
into
ljmp
push
push
stos
insb
push
lret
or
scas
add
dec
sub
xor
push
test
mov
cmpsb
push
cmp
int
lret
aas
shl
add
inc
jle
shll
out
push
adc
cmp
cmp
mov
int3
mov
in
and
mov
or
nop
int3
jns
jmp
add
pop
mov
and
andl
mov
pop
insl
ret
adc
scas
push
sbb
out
pop
lret
push
loope
out
pop
or
or
pusha
sbb
and
cmc
mov
cmp
xchg
fdivs
xchg
stc
std
fnstsw
pop
sub
or
mov
jne
ror
mov
inc
lcall
push
mov
mov
and
ret
push
pop
fisttps
addl
movsl
sbb
jg
scas
cmp
test
mov
and
aas
xchg
jle
fadds
add
lea
pop
shlb
add
adc
lcall
fsubs
sti
and
idivl
jge
in
inc
int3
dec
sbb
cmc
test
xchg
add
cmpb
inc
xor
ja
add
cmc
lret
sub
pop
mov
lcall
shl
fwait
adc
repz
mov
lods
outsl
aad
push
sub
jb
or
add
nop
push
jle
int3
int3
sbb
mov
mov
sub
add
pop
outsl
mov
add
sbb
and
pop
call
xchg
push
or
xor
pop
lret
jl
cmp
cmc
daa
mov
add
mov
dec
sti
dec
or
rol
fbld
and
int3
pop
int
adc
cld
push
push
pusha
push
mov
xor
fiadds
scas
xchg
and
mov
mov
add
ds
jmp
push
mov
test
cmc
aaa
test
ficomps
lds
test
into
pusha
cmp
fistpll
insb
mov
xchg
jmp
in
pop
sbb
jle
es
loop
mov
push
cmpsb
mov
xchg
ljmp
repz
fldcw
call
sti
cli
mov
addr16
in
mov
pop
xchg
mov
or
xchg
add
and
dec
push
xchg
xor
int
int
sub
or
leave
xorb
inc
call
movsb
movsl
xchg
mov
jp
repnz
pop
movsb
ja
cmp
ret
imul
add
push
imul
test
loope
iret
imul
pop
pop
push
cmp
xchg
sub
inc
xchg
mov
test
in
popf
jg
les
lret
js
adcb
iret
das
pop
push
je
lahf
and
nop
cmpsb
sbb
scas
adc
sbb
rol
xchg
jmp
xor
outsb
stc
scas
fistl
loope
fdivrs
ret
popaw
or
cmpsl
sub
inc
int
inc
mov
les
clc
std
loope
addr16
fsubl
or
inc
roll
sub
cmp
jge
push
sbb
jle
or
sbb
into
push
lret
dec
mov
sbb
rcll
test
pop
mov
xchg
sbb
pop
cmp
cmp
in
sbb
add
or
out
fistpll
xor
xor
mov
dec
addr16
clc
testb
jp
iret
and
jnp
or
and
ss
adc
xchg
cmp
push
push
mov
inc
fmuls
enter
pop
push
jge
pushf
rolb
inc
fiaddl
mov
mov
pop
lods
push
in
sti
jge
faddp
jae
push
adc
adc
mov
mov
or
sti
decb
scas
loopne
cmc
cs
sub
leave
push
jae
data16
ja
lods
ljmp
scas
dec
enter
jl
xchg
adc
cmp
clc
or
sahf
mov
ret
notb
pop
inc
add
dec
imul
and
inc
inc
imul
in
mov
imul
aad
and
arpl
iret
out
and
mov
outsl
aam
icebp
xchg
ret
sub
cmc
adc
xor
mov
push
dec
mov
sahf
mov
std
shl
sub
adc
pop
xchg
dec
cmp
bound
pushf
popa
arpl
dec
in
pop
scas
cmp
cmp
dec
mov
out
jge
mov
cmp
mov
sbb
lahf
inc
sbb
and
mov
arpl
fs
mov
sbb
dec
dec
sub
adc
mov
cs
call
xchg
cmp
lret
or
out
sbb
cltd
fwait
adc
enter
in
and
mov
jo
data16
adc
sbb
and
loopne
lcall
push
cmpsl
pop
and
and
lods
inc
frstor
dec
aad
cmpsl
sub
addr16
cmp
popa
mulb
movsb
rolb
add
mov
das
movsl
mov
jl
mov
jmp
inc
pop
call
scas
hlt
push
popa
subl
mov
imull
or
imul
pop
jge
add
and
xchg
xchg
cli
shrb
shrb
jmp
sub
lods
sahf
push
iret
push
cmc
out
jbe
mov
icebp
adc
inc
jnp
cmp
aad
xchg
lret
scas
mov
dec
push
in
lock
lea
add
and
mov
pop
jae
and
cli
and
sarb
inc
mov
jne
cmpsl
push
lret
orb
pop
ret
cmp
add
gs
imul
or
pusha
add
mov
dec
imul
test
movsb
dec
lret
data16
mov
pop
imull
lods
pop
stos
outsl
stos
sahf
inc
stos
cmpsl
mov
add
rorb
lock
or
pushf
jno
fwait
mov
outsl
push
fbstp
pop
movsb
xchg
je
inc
movsl
cmp
dec
aas
popa
lea
pop
aas
add
es
pop
xor
shrl
mov
pop
lea
jmp
popf
clc
icebp
test
int
movsl
int3
mov
pop
ffreep
ds
divb
mov
add
fwait
fldln2
mov
push
stos
add
mov
push
push
fidivrs
mov
addr16
sbb
inc
push
xchg
aaa
popa
xor
repz
lock
fnstenv
pop
negb
js
outsb
fisubrs
repz
out
jge
dec
rorb
xor
mov
je
or
repnz
xchg
scas
out
mov
fbstp
xchg
sub
pop
ljmp
outsl
fwait
or
xchg
lcall
cmp
sub
and
js
movsb
and
or
icebp
je
xchg
and
cmpsl
xor
sub
push
fbstp
pop
jge
dec
inc
clc
adcb
sti
stc
icebp
gs
add
sbb
cmp
fdivl
shll
mov
ljmp
sbb
lret
inc
mov
jae
fmuls
outsb
stc
icebp
mov
sbb
lcall
mov
and
dec
into
jp
push
xlat
sbb
fnstsw
jle
mov
into
or
adc
mov
lret
loope
fsincos
lods
aam
mov
scas
hlt
cmp
mov
mov
mov
outsl
popa
mov
repnz
loop
push
dec
enter
push
push
xchg
jne
pop
pop
jl
xchg
pop
mov
xchg
outsl
xchg
out
shll
iret
and
cmpsl
add
and
shrl
mov
mov
ja
mov
sbbb
mov
push
inc
jecxz
sub
out
or
outsl
dec
ret
and
fisttpll
aam
out
xchg
clc
cltd
add
rclb
cltd
or
dec
push
call
inc
rorb
mov
mov
sbb
fidivrl
pop
pusha
movl
xor
inc
mov
push
push
mov
xchg
push
cmp
gs
xor
or
add
outsl
sbb
sub
inc
aas
daa
sub
mov
inc
xchg
mov
inc
out
int
cmpsl
cmp
gs
cs
sbb
inc
mov
ret
les
mov
mov
loope
icebp
pop
add
pop
leave
pop
loop
aam
pop
sub
inc
rorl
and
lret
stos
push
and
mov
rol
xor
out
mov
mov
push
ror
fisttpll
push
mov
mov
jecxz
scas
fwait
shll
mov
xor
rol
sub
jno
pushf
sbb
clc
sub
push
or
pop
xlat
pusha
sbb
mov
lock
cmpsb
shrb
pop
adc
insb
push
add
stos
adc
jp
sbb
jno
mov
testb
negl
imul
test
scas
cmp
mov
popa
sbb
lcall
cmpsb
jne
xchg
hlt
movsb
in
push
popa
cmpb
scas
sub
lds
wrmsr
mov
mov
sub
rol
push
push
sbb
or
mov
loop
mov
jmp
adc
int3
in
cmp
mov
repnz
and
xor
pop
dec
je
mov
lea
xchg
pop
jae
gs
je
adc
xor
sub
pop
push
mull
out
jge
jle
mov
lods
pop
xchg
popa
add
push
push
test
sbb
call
add
jno
lret
push
pusha
in
inc
add
sbb
repz
hlt
sub
adc
xorb
movsl
pop
xchg
cmp
xor
jmp
es
pop
ljmp
mov
dec
jbe
lret
or
jecxz
mov
inc
sbb
xor
sub
mov
xor
dec
les
pop
shrb
inc
jbe
mov
sub
ss
mov
push
ret
mov
scas
scas
mov
push
mov
in
pop
sbb
cmp
std
dec
out
sub
sub
add
mov
mov
push
adc
mov
xchg
mov
inc
insb
add
mov
adc
add
push
int3
gs
hlt
iret
stc
and
pop
stos
dec
or
cli
xorb
sti
orb
ror
inc
adc
mov
fsts
out
push
orl
jb
mov
lret
jns
sub
push
in
push
psubb
cmpsb
add
jae
and
inc
fs
push
push
in
sub
in
fdivrl
cmp
mov
inc
movsl
cmp
pop
aas
test
push
movsb
sbbl
mov
hlt
pop
psadbw
mov
pop
or
mulb
lea
inc
lock
out
adc
dec
test
xor
inc
stc
mov
stos
mov
lock
xchg
pop
adc
sub
xchg
and
xchg
popa
enter
push
fisubl
dec
jbe
scas
push
cmc
xor
lret
iret
sub
mov
xchg
add
sub
and
add
and
popf
gs
xchg
xor
mov
aad
dec
outsb
xlat
cmp
lock
inc
gs
test
mov
push
mov
pop
pop
pop
nop
repnz
popa
fidivrs
push
std
cmp
xchg
xchg
dec
or
adc
or
inc
aad
stos
jle
fwait
pop
adc
sub
push
outsb
sub
jmp
pop
fidivs
fildl
sub
fdivp
jne
push
or
cmp
arpl
inc
mov
adc
adc
shlb
add
inc
push
xchg
cmp
dec
mov
test
adc
or
jno
jge
addl
ret
push
aas
stos
cmp
push
adc
ljmp
xchg
lds
cmp
les
sbb
icebp
rcr
ja
pop
mov
push
add
mov
sub
out
jg
out
inc
or
fiaddl
mov
scas
out
cmp
out
cli
das
and
xor
push
enter
and
lock
nop
add
xchg
mov
jno
int3
sbb
pop
jg
sbb
popa
cmp
or
std
inc
and
xlat
push
cmp
sbb
fcoms
jl
jne
cmpsb
dec
popf
cmp
in
je
rorl
fdiv
mov
pop
mov
jmp
fmull
and
push
lods
sub
add
add
stos
ficoms
add
adc
out
test
test
dec
aad
cmp
sub
jnp
daa
fs
lret
jg
mov
mov
dec
sub
xchg
or
test
jbe
jle
adc
push
sub
bound
jge
xor
loope
cmp
mov
sub
jge
cli
mov
push
mov
sbb
push
sbb
sti
rorl
rorl
dec
lods
addr16
mov
or
insb
jp
aaa
roll
jle
fisubl
lcall
lret
adc
out
pop
imul
sbb
mov
call
mov
pusha
adc
jno
jecxz
mov
xor
mov
stos
stos
cmc
clc
dec
js
mov
pop
jmp
push
mov
cmpsb
leave
sbb
clc
xlat
je
fst
jbe
leave
sub
adc
and
lret
inc
adc
mov
pop
adc
jno
ret
or
push
mov
call
in
fldt
sub
sahf
fisubl
mov
cmp
jns
pop
cmp
push
stos
sub
or
insl
in
cwtl
jmp
inc
lds
pop
sti
lods
imulb
jns
add
xchg
mov
sahf
ljmp
jg
jp
mov
dec
dec
hlt
sti
sbb
repnz
pop
clc
mov
push
mov
mov
inc
mov
mov
dec
sbb
stos
cwtl
pop
pop
mov
xor
pop
adc
sbb
sbb
lahf
bnd
shrb
fildll
add
gs
loop
push
mov
movsl
cmpsl
cmpl
jg
and
mov
push
push
movswl
fwait
sbb
pop
stos
fisttpll
imul
nop
adc
cli
mov
xchg
or
mov
daa
je
xchg
popa
sbbl
xor
js
cli
mov
xchg
dec
lret
xchg
mov
scas
inc
and
lods
add
sub
mov
es
mov
push
ficoms
inc
sahf
inc
add
push
xor
mov
jnp
or
adc
sub
loopne
mov
mov
xchg
cmp
cltd
cs
leave
jge
loop
push
or
mov
mov
mov
outsl
ficoms
ret
pop
in
push
rcll
xchg
inc
out
mov
arpl
ffreep
dec
jle
adc
in
mov
aad
loop
pusha
dec
add
add
in
popf
ret
fsubrs
push
cwtl
xchg
movsl
dec
lcall
mov
js
and
nop
dec
jmp
fwait
sbb
test
inc
cmp
inc
and
aas
out
xchg
les
ret
clc
test
pusha
jl
fmul
rcl
push
test
jl
lret
adc
dec
loopne
push
lea
popf
aas
inc
adc
ja
movsb
pop
enter
mov
leave
and
std
push
jno
notl
inc
ljmp
inc
stos
xor
sahf
rorl
js
xchg
jbe
movsb
push
mov
push
push
outsl
js
sub
xchg
movsb
mov
add
pop
lret
pop
mov
cltd
pop
mov
cmp
adc
cmpsb
imul
xchg
jge
icebp
push
or
gs
xor
ret
push
sbb
sarb
sarb
or
pop
sbb
repz
dec
xchg
aam
cmpsl
jl
fdivrs
or
jbe
add
mov
fstps
je
js
movsb
mov
add
xor
mov
mov
push
daa
mov
jne
pop
xchg
xchg
pop
inc
gs
ss
xor
inc
aaa
dec
lea
shll
lods
push
shrb
leave
and
mov
lods
sbb
in
sarb
sbb
mov
inc
add
test
adc
lcall
mov
fimull
or
ds
in
inc
mov
mov
daa
jmp
xlat
popa
in
fld
adc
push
shrl
pusha
jne
pop
test
mov
sub
or
test
popf
mov
je
loopne
int3
lds
mov
xchg
insb
pop
repnz
test
pop
mov
stos
or
test
sbb
jle
inc
int3
add
jae
mov
arpl
ljmp
cmpsl
mov
or
and
sub
mov
aam
jnp
push
lahf
push
in
wbinvd
jno
clc
inc
sbb
push
cmc
or
xor
repz
or
mov
adc
mov
jle
sub
add
cli
add
sub
setbe
pop
jne
jmp
push
push
into
ficoms
xor
mov
sarl
xor
xchg
adc
adc
testb
or
add
scas
scas
sahf
and
dec
roll
push
cmp
jp
sahf
mov
xchg
mov
mov
sahf
or
repnz
lods
mov
push
scas
stc
jmp
inc
mov
mov
orl
cmp
dec
pop
lods
shl
push
mov
mov
nop
jnp
popa
xchg
inc
fstp
stc
adcl
fildll
test
mov
and
lahf
push
mov
gs
mov
sub
fstps
xor
xchg
jge
pop
movsb
mov
sbb
push
jmp
xchg
and
es
lret
ja
pop
mov
adcl
data16
xchg
outsb
push
mov
xchg
arpl
fmul
ss
push
push
mov
inc
cmp
out
pop
lcall
inc
xor
leave
push
ficoml
adc
insb
pop
dec
ret
fsubs
cmp
push
icebp
mov
lret
adc
pop
fidivl
jne
ljmp
or
leave
jno
jmp
lret
stos
dec
and
dec
ret
cmpsl
in
mov
test
sub
dec
jg
cmp
push
pop
mov
fcmovu
in
and
iret
and
mov
insb
notl
mov
jg
cwtl
in
jnp
pop
leave
in
hlt
lock
lock
gs
sub
ja
xchg
js
std
dec
pop
or
fbstp
inc
fnstsw
movsl
outsl
mov
adc
ds
test
pop
rcrb
xor
pop
lea
add
add
loopne
hlt
xor
cmp
push
jp
fsubrl
bswap
pop
leave
add
fimull
adc
dec
lahf
lods
in
jo
dec
pusha
test
in
inc
or
ljmp
and
ret
pop
cs
xor
rclb
andb
int3
sub
sbb
mov
int3
out
cmp
out
mov
dec
sbb
mov
scas
adc
inc
mov
imul
or
sub
repz
cmp
mov
jb
jbe
adc
out
mov
lret
xchg
pop
lods
push
jp
adc
icebp
ficoml
sub
mov
daa
into
cmc
dec
jb
push
adc
scas
push
popf
inc
bound
cmp
jge
push
xor
push
or
rcl
dec
test
xor
xchg
pusha
lods
js
jmp
ljmp
and
cmpsl
mov
sub
lret
imul
pop
lahf
inc
testb
hlt
stos
shr
fsubrl
xchg
pop
mov
pop
push
int
js
out
aas
inc
cld
outsb
stos
popf
xor
pop
shll
dec
add
dec
adc
les
dec
xlat
jp
mov
sbb
jmp
jmp
test
xchg
lods
jb
push
mov
sub
insb
fimull
lods
cmp
xor
daa
dec
xchg
fiadds
xor
xor
mov
loopne
cmpsl
in
int
aas
fs
arpl
xor
sub
popa
sub
xabort
xor
xchg
inc
iret
xchg
mov
shr
gs
leave
shr
addr16
inc
jge
in
and
fstl
jnp
popf
jno
cld
in
sar
cmp
sbb
outsb
cs
jb
sub
scas
sub
and
fbstp
hlt
dec
stc
pop
out
xchg
sub
cmc
and
jns
stc
mov
add
mov
push
mov
das
arpl
in
pop
inc
movsb
mov
push
mov
inc
popa
cmpsb
xchg
jnp
xchg
test
and
fs
sahf
movsb
adc
cmc
xor
inc
mull
or
mov
pop
ss
test
test
dec
mov
pop
pop
movsl
mov
jnp
test
cmc
pop
ja
fsubr
push
cmp
sub
inc
xlat
pop
inc
jo
pop
and
adc
pusha
loope
out
jb
andb
jp
jmp
in
je
dec
out
fwait
sbb
scas
rolb
mov
ret
mov
stc
mov
inc
cmpsb
cmc
xor
les
add
js
cmpb
inc
fs
insl
or
popa
pop
lcall
das
xchg
sub
cli
jmp
push
test
push
lret
dec
dec
mulb
cltd
popf
xor
mov
mov
popf
loope
pusha
adc
cmp
stc
in
movsl
xchg
int
in
es
and
xor
in
lret
and
xchg
pop
xor
adc
fimull
xchg
fdivl
ret
push
nop
lahf
lods
movsb
cmp
movsl
and
cmpsl
sub
xor
jae
adc
cmpb
iret
inc
jl
lcall
cmp
and
and
fnsave
rcrl
push
pop
push
mov
push
inc
jle
mov
jne
cmp
popf
lea
cs
clc
xchg
xor
mov
jg
mov
cwtl
mov
scas
xchg
inc
out
test
bound
nop
je
xor
stos
out
hlt
adc
jno
dec
adc
or
xchg
xlat
inc
pop
rorl
popl
dec
add
mov
popf
sbb
sbb
sbb
jecxz
push
push
lods
cmp
xor
cmpsb
inc
lret
lods
inc
xchg
xor
leave
or
mov
pop
test
cmpsl
sahf
into
addb
mov
out
ds
push
scas
mov
dec
jp
test
aaa
ja
iret
and
popf
out
ds
mov
testb
inc
or
enter
sbb
or
test
jl
or
push
jb
mov
push
stos
mov
sbb
or
xchg
mov
addb
or
jle
lods
fildl
and
fwait
popa
leave
dec
lds
sbb
jge
sti
outsl
jno
rol
iret
jge
dec
aad
dec
jno
sahf
aad
sar
popf
ss
push
jge
xchg
mov
add
push
mov
inc
int3
dec
outsb
leave
imul
mov
aaa
std
sbb
andl
movsb
int
and
enter
mov
mov
and
jecxz
and
pop
cld
adc
pusha
decb
shll
aas
jno
call
xor
dec
bound
xchg
rolb
int
ret
sar
loope
cmc
idivl
jne
hlt
jle
notb
imul
mov
bnd
mov
inc
in
std
mov
dec
push
jg
ret
js
ja
lret
lahf
mov
or
jo
sub
mov
outsl
movsl
sub
mov
decb
out
out
test
aaa
xlat
cmp
ret
xchg
xchg
popa
jb
mov
in
adc
push
push
mov
fsubl
jl
rclb
test
mov
and
and
add
and
cmp
pop
lds
dec
adc
das
repz
push
imul
mov
jno
adc
inc
cltd
inc
addr16
dec
inc
stos
pop
clc
out
mov
pushf
sbb
pushf
movsb
and
inc
mov
insb
lret
push
xor
imul
shll
inc
mov
mov
adc
imul
icebp
and
push
xor
andl
loop
pop
ret
push
and
cmp
loop
sub
dec
dec
pop
lcall
sbb
arpl
in
cmp
mov
scas
js
adc
lahf
jge
lret
cmp
jle
dec
jnp
mov
mov
dec
adc
mov
lock
xchg
pop
mov
out
lds
punpcklbw
push
push
outsb
cmovb
aam
ret
stos
dec
mov
sub
hlt
xor
bound
xor
fldz
inc
jl
shlb
pusha
mov
sahf
sahf
lods
sbbb
loopne
adc
or
outsl
inc
data16
sarl
dec
dec
ret
daa
jp
sti
xchg
jne
mov
pop
ljmp
out
push
lds
out
stc
dec
iret
insb
jns
add
xor
mov
imul
or
and
push
xor
test
and
imul
adc
sbb
outsb
adc
or
sbb
add
push
sbb
or
pop
cmp
test
fimull
lahf
rolb
and
push
fisubrl
cli
movsl
sub
pop
imul
mov
movsb
rolb
aas
fisttpll
push
push
and
fstp
test
xchg
inc
xlat
mov
add
cmp
lods
cmp
mov
imul
fwait
out
pop
aas
xor
add
outsb
add
aad
xchg
loope
mov
movsl
ret
bound
xor
push
out
add
repz
mov
jp
scas
mov
loop
xor
in
js
inc
shll
push
mov
jg
out
push
jbe
mov
insl
or
es
pop
stos
push
hlt
imul
cmpsl
push
addr16
dec
xchg
jecxz
sub
scas
xchg
add
pop
orb
js
lcall
les
ret
cld
jp
add
icebp
dec
mov
xor
pop
inc
and
mov
mov
data16
mov
rcr
or
das
mov
dec
fwait
ljmp
mov
ss
dec
jmp
dec
adc
testb
dec
cmpsl
ds
xor
cmp
outsl
ljmp
cmp
test
cmp
xchg
scas
cwtl
inc
fmuls
repz
aam
int
xor
sbb
jnp
mov
lahf
out
mov
cmp
aas
adc
xor
adc
aaa
std
daa
dec
mov
adc
and
adc
and
jge
cmpsl
test
jmp
sub
in
push
push
in
mov
mov
sbb
mov
insl
xor
pop
mov
aas
repnz
dec
lret
inc
and
jmp
subl
repz
sbb
or
ret
push
add
or
es
jns
fcmovne
sbb
or
aad
andb
lea
push
cmp
sub
sub
mov
jae
dec
dec
dec
enter
cld
cs
std
xor
popa
test
imul
pop
jmp
pusha
xor
jecxz
mov
cmp
outsb
scas
sub
mov
sbb
mov
sti
push
imul
mov
inc
stc
cmp
rcrb
les
ds
pop
pop
ja
pop
nop
lcall
lea
dec
sub
sbb
in
addr16
bound
mov
add
popf
mov
cmp
inc
xor
pop
sbb
leave
mov
xchg
mov
loop
mov
aam
enter
or
fnstsw
inc
cmpsl
addr16
mov
dec
in
sar
arpl
out
lock
xor
stos
xor
xchg
sub
pop
je
sbb
loop
out
imul
sti
mov
cmpl
mov
jb
xlat
jb
inc
push
div
imul
push
lds
and
xchg
and
lock
xor
xchg
jp
arpl
sbb
sub
mov
sbb
stos
inc
cs
das
cwtl
fs
int
push
xchg
fnstenv
dec
int3
add
xchg
sub
add
mov
and
mov
lds
inc
and
jnp
pop
jmp
inc
jecxz
add
fcmovnb
fists
adc
mov
and
aas
pop
hlt
loop
test
xchg
sub
aaa
btr
dec
je
icebp
xor
lret
adc
addr16
jae
mov
pop
and
adcb
ljmp
pop
call
inc
xor
or
push
pop
and
cmp
mov
sub
jecxz
ljmp
adc
jmp
jne
cmp
pop
inc
mov
aad
adc
inc
out
and
mov
sub
imul
push
mov
out
fidivrl
adc
lahf
bound
xchg
aaa
loopne
daa
mov
or
mov
jbe
ljmp
fsubrs
mov
jp
pop
pop
mov
mov
pop
push
cmc
xor
test
push
negl
and
mov
push
sahf
lahf
mov
jp
dec
js
fld
pop
icebp
pop
lods
dec
cmpl
daa
inc
movsb
sahf
imul
xchg
int3
cwtl
outsl
data16
dec
jns
mov
mov
dec
ret
add
pop
shlb
or
add
cmpsb
lahf
mov
sub
or
fs
or
mov
pop
stc
imul
xchg
incl
out
push
mov
mov
cs
mov
adc
add
dec
lds
dec
jns
insb
push
sbb
arpl
mov
dec
mov
push
cmpsl
movsb
dec
mov
push
mov
jo
call
add
sbb
jecxz
xorb
push
into
jl
je
cmpsw
imul
imulb
mov
lods
and
hlt
out
inc
push
and
add
xchg
and
out
jg
xchg
add
and
mov
cli
xorl
jecxz
jno
xor
and
push
xor
xor
in
fmuls
lahf
jmp
popf
mov
fsubrs
sub
pop
mov
mov
loopne
shlb
shrl
mov
push
xor
sar
out
call
movsl
push
mov
inc
inc
or
and
pop
sbb
jae
fldcw
sbb
jae
mov
leave
mov
push
jmp
inc
fdivrs
xor
int
lods
decb
sub
notb
xchg
lahf
xchg
add
adc
lock
and
movsl
nop
ud0
iret
fldl
or
and
sub
out
fdiv
shlb
xor
xor
insb
add
pop
test
fsubr
mov
xor
es
and
out
mov
fisttps
and
pop
roll
nop
jns
sub
cltd
andb
das
out
or
pushf
loop
test
filds
movsb
std
mov
sar
nop
mov
cmp
rcrl
jle
popf
scas
out
cs
daa
cmp
ret
sub
jge
xor
fidivs
sbb
bound
inc
outsb
push
mov
jl
cltd
xlat
xor
daa
push
inc
push
sbb
mov
dec
mov
cmp
xor
movsb
std
mov
xor
adc
xor
rcl
cmp
int3
test
inc
xchg
xlat
dec
shrl
jg
loopne
andnps
dec
push
inc
jle
test
and
fstl
hlt
or
sub
pop
incb
dec
iret
dec
pop
jg
mov
test
imul
insb
jno
inc
add
fadd
dec
bound
mov
inc
das
mov
lea
mov
and
sbb
sub
nop
inc
loopne
sub
push
cwtl
xchg
push
inc
outsb
cwtl
cmp
popf
pop
jecxz
mov
xchg
test
add
xor
pop
jmp
std
jmp
jecxz
in
call
inc
mov
dec
out
push
hlt
add
mov
jp
and
xchg
into
sbb
sti
insl
or
daa
dec
mov
out
data16
loop
and
sbb
inc
mov
std
mov
lods
les
jge
xor
mov
sub
ret
rcrb
add
add
mov
outsb
and
loope
popl
or
cld
push
loopne
ss
push
xor
push
mov
cmp
dec
xchg
mov
jae
or
loop
mov
or
dec
call
std
sbb
mov
xor
mov
test
jge
ds
fs
aad
es
inc
sbb
mov
pop
xchg
loope
aas
cmpsl
sbb
push
push
stos
pop
mov
jecxz
mov
test
pop
mov
gs
cmovs
or
enter
dec
mov
pop
jns
add
sbb
inc
jae
mov
int
cmpsb
in
ljmp
mov
out
loope
int3
jl
outsb
leave
out
fcmovnbe
into
mov
mov
add
stc
sbb
sub
js
cld
out
sbb
jg
mov
in
mov
movsl
ja
icebp
xlat
and
push
add
imul
mov
cmc
shrb
jmp
test
shlb
notb
mov
adc
nop
xor
inc
idivl
div
adc
mov
rcll
into
inc
popa
andl
jecxz
cmp
pop
dec
adc
popf
push
xor
js
or
fbstp
mov
jp
push
mov
and
mov
repz
pop
iret
push
push
shl
cmp
mov
sub
lcall
push
push
mov
aaa
mov
add
inc
shlb
lret
aam
mov
imul
scas
and
js
aad
movsl
aam
jno
jne
aad
clc
pop
inc
sbb
dec
sub
push
pop
cmc
adcb
jne
in
mov
faddl
int3
xlat
fstpl
xchg
sbb
jl
inc
imul
cmp
loope
push
pop
test
imul
jne
xchg
cmp
jae
cmp
sbb
jo
data16
clc
mov
inc
pop
inc
mov
add
popf
mov
add
inc
lret
jle
mov
inc
mov
jg
xchg
aam
mov
insl
lahf
addb
shrl
gs
mov
sbb
xchg
inc
push
jbe
mov
jns
cld
daa
rorb
pushf
fistpll
nop
dec
xchg
xchg
jns
lret
inc
xchg
fldenv
ds
cwtl
addr16
push
icebp
or
sub
lea
mov
hlt
push
movsb
add
orb
pushf
and
jae
cli
sub
mov
lea
xor
and
mov
arpl
push
pop
xorl
and
jmp
dec
fimuls
push
repnz
xchg
and
jg
xlat
xor
mov
addr16
fs
popa
pop
xchg
dec
sarb
stos
shlb
in
jl
jae
dec
jne
cmp
xchg
pusha
aam
mov
test
clc
arpl
call
sub
pop
xor
lcall
sahf
shr
push
xchg
push
loope
test
pop
scas
push
fsubrs
leave
rcrb
in
in
push
sbb
mov
dec
aam
and
jne
scas
out
sub
sbb
int3
mov
int
movswl
adc
dec
pop
xor
adc
adc
cmp
mov
data16
shrw
cmp
pop
jmp
and
mov
cmp
xchg
jb
lods
test
insl
add
cmp
icebp
push
mov
pop
mov
xor
bound
lret
ror
in
jp
subb
fld1
stos
cmp
adcb
arpl
push
hlt
inc
fimull
fstl
neg
adc
lds
mov
in
insl
sarl
rcrl
push
push
push
subl
and
hlt
sbbl
and
fsubr
ret
pop
pusha
sbbl
push
loop
imul
inc
sub
lods
int
or
aas
repz
jnp
or
xor
mov
lcall
mov
dec
or
add
sub
loope
xor
pop
in
dec
mov
add
sbb
std
push
pusha
and
push
gs
popa
mov
dec
jmp
pushf
insl
pop
jecxz
repnz
adc
shlb
jl
inc
push
out
mov
xlat
ret
icebp
pusha
xor
sub
dec
push
out
flds
shr
and
dec
xor
push
mov
repnz
push
test
mov
das
scas
cmp
sbb
lds
xor
iret
fstpt
arpl
shll
shll
sti
out
jmp
lahf
lahf
pop
rcrl
push
adc
lea
lds
cmp
popf
push
out
jnp
idivb
inc
out
in
negl
pop
push
xchg
xor
rorl
and
add
scas
mov
mov
flds
ljmp
ret
and
push
lcall
add
add
add
insb
cs
aaa
out
inc
jg
lahf
adc
sub
inc
dec
xor
cwtl
push
hlt
push
cmp
and
add
insl
or
add
xor
push
xor
mov
adc
and
lret
call
mov
ficoms
pop
dec
or
sbb
addl
add
in
xchg
or
pusha
mov
dec
call
frstor
call
mov
int
dec
sahf
mov
pushf
mov
enter
pop
cmp
icebp
jne
inc
push
cmp
sahf
fistpl
mov
scas
dec
pop
push
shl
cltd
cs
icebp
stos
outsb
and
inc
xor
pop
fists
into
jmp
mov
aad
lods
fldcw
add
mov
icebp
dec
lds
inc
mov
divl
cmc
dec
mov
cmpl
test
cmp
add
lods
leave
mov
lret
mov
aam
dec
mov
jae
xor
arpl
cmpsl
jae
push
sbb
push
ret
out
in
mul
pop
ficomps
insl
outsl
fs
mov
loope
sub
scas
pop
cs
mov
cmp
jl
test
inc
dec
mov
cs
jno
add
mov
rorl
sub
popf
xor
push
and
mov
add
xchg
insb
cmp
cmp
cli
xchg
out
sub
aad
lea
sti
out
aam
push
push
out
jmp
pop
pop
dec
lea
inc
xchg
xchg
leave
arpl
test
fisubrl
pop
lods
add
sub
push
andl
not
roll
vmulps
out
pop
lret
es
scas
xor
out
cmp
adc
pop
enter
ja
jg
pop
aam
add
sbb
xorb
dec
dec
adc
cmp
jns
call
mov
xlat
mov
negl
or
bound
in
rcll
es
scas
jmp
nop
cld
pop
mov
xchg
icebp
cwtl
cmp
das
lahf
xor
push
pop
xchg
loop
mov
adcb
pop
dec
sub
mov
cmp
pushf
adc
and
mov
cmp
dec
fcoml
or
in
mov
adc
cwtl
cmpsl
xor
scas
pushf
call
ret
icebp
jle
lret
sub
mov
je
pop
lret
mov
cmp
sbb
push
cmpsb
or
rcr
jne
adc
lret
iret
scas
ljmp
cmpsb
push
pop
mov
aam
in
fs
in
ret
mulb
movsl
inc
push
lods
sub
push
in
lods
outsl
data16
dec
mov
and
sbb
fs
cmp
sbb
ret
dec
enter
push
and
adc
leave
shrl
fisttps
pop
imul
ror
jno
sub
or
aad
push
jbe
dec
mov
popf
lods
jmp
jno
imul
jp
and
push
mov
ret
pop
adc
xchg
imul
add
into
es
stos
testb
fldenv
pop
lods
pop
outsl
int
or
xchg
add
divb
divl
or
insl
dec
add
insb
adcb
cwtl
clc
push
frstor
mov
shll
daa
adc
sahf
xchg
enter
inc
inc
and
inc
pop
push
rclb
stos
push
ret
jmp
popa
jnp
dec
jl
lods
ret
mov
sub
cmpb
inc
dec
loopne
aas
out
sbb
dec
std
out
push
idivl
mov
mov
dec
jae
pop
xchg
in
sbb
add
xchg
cwtl
lahf
cmpsb
pop
xchg
mov
and
mov
je
sbb
les
cmp
int
xchg
jp
ds
faddl
shl
dec
jbe
sti
popa
xor
adc
lret
jae
out
push
mov
fs
jmp
test
add
pop
lcall
sub
xor
or
jmp
out
and
jne
inc
mov
mov
pop
aaa
mov
popf
sahf
xchg
stc
mov
rclb
jg
dec
int3
push
push
in
or
test
pop
fstps
or
jbe
lds
mov
addb
ss
adc
mov
lret
cwtl
inc
pop
dec
out
ret
scas
xor
jns
xchg
ret
addl
sub
fs
mov
cld
mov
mov
fwait
scas
mov
add
jmp
lahf
xchg
sub
cmc
sub
xor
mov
jns
mov
in
pop
ds
fimuls
mov
aas
pop
idivb
mov
aas
mov
push
xlat
roll
mov
test
push
cmp
adc
xchg
mov
sete
add
adc
ss
popa
pop
dec
inc
sbb
or
shll
in
repz
ret
add
cmp
inc
loop
out
push
mov
je
inc
rolb
sbb
add
into
adc
jnp
push
pop
stc
adc
ss
adc
inc
aad
enter
jae
jl
hlt
pop
dec
mov
add
hlt
xchg
aad
cmpsl
pop
mov
or
shrb
das
jg
sar
sahf
pop
frstor
sub
call
lds
push
pushf
icebp
loop
jne
loop
inc
lods
repnz
or
mov
jo
lret
movsb
adc
add
pop
nop
mov
jl
inc
or
jmp
in
ret
arpl
loope
imul
or
mov
imul
or
or
cld
and
push
ss
adc
pop
mov
ds
jae
nop
fwait
inc
je
push
cld
out
xchg
lret
sbb
fucomi
test
outsl
or
cs
add
jmp
inc
xchg
and
imul
repz
jl
aad
sbb
test
push
in
jg
push
in
push
fistpll
xchg
movsb
pop
and
mov
and
lds
aad
nop
gs
mov
pushl
fistpl
sarb
jg
pop
inc
mov
subb
repnz
cwtl
das
scas
adc
and
and
jl
add
faddl
leave
iret
cwtl
pop
mov
xor
xor
int
or
xchg
sub
andb
push
fisttpl
inc
xor
push
jbe
add
xor
repz
test
jmp
sbb
mov
mov
pop
into
push
inc
and
and
ds
clc
mov
inc
mov
sbb
jecxz
sbb
mov
xchg
popf
lods
pop
xchg
xchg
pop
xchg
test
mov
mov
add
jecxz
sbb
cs
mov
fimull
unpcklps
xchg
test
sbb
fstl
push
and
mov
push
cs
push
mov
fadds
dec
dec
jae
stos
dec
push
mov
push
les
int3
mov
mov
call
push
into
fsubs
rol
jmp
test
cmp
jne
xchg
nop
push
out
xlat
xchg
in
pop
xchg
jnp
dec
test
in
sbb
out
sbb
pop
popf
inc
cs
jle
jne
rcr
adc
push
dec
test
adc
fsubl
out
pusha
jo
iret
sub
fnsave
leave
fwait
stos
pop
out
pusha
adc
rcl
test
das
jae
cli
jae
sub
jno
mov
cltd
scas
lea
lret
mov
jnp,pn
lret
xchg
lret
movsb
inc
and
aas
pop
mov
fidivl
xchg
mov
clc
sub
xor
jl
or
test
push
testb
xchg
out
fnstcw
sti
mov
je
and
xor
mov
xchg
loopne
out
sarl
add
loopne
jb
out
xor
push
outsl
xchg
xor
mov
int
cmpl
jecxz
dec
cmp
lods
push
mov
lcall
pop
inc
or
xchg
les
das
iret
mov
jns
mov
xor
cmp
mov
dec
mov
icebp
sar
mov
cltd
xchg
sbb
das
sbbb
mov
test
pop
mov
xlat
jbe
ds
mov
cli
lock
or
jg
dec
leave
nop
jbe
mov
mov
xchg
mov
pop
into
mov
arpl
dec
mov
in
call
dec
cltd
mov
aam
and
jns
loope
mov
pop
xchg
inc
adc
mov
lret
mov
ljmp
insb
fs
mov
push
loop
sbb
push
cmp
jecxz
addr16
addr16
and
cmp
test
cmp
sbb
and
sub
push
push
dec
cmc
mov
sbb
lret
test
pop
dec
cltd
lods
aas
jmp
jge
stos
xor
jge
mov
jecxz
movaps
mov
xchg
aaa
inc
rsqrtps
lods
andb
in
xchg
add
fcomi
faddp
and
rcrb
popa
pop
and
jbe
add
xchg
lahf
add
xor
ja
es
sbb
sub
mov
mov
pop
push
cmp
push
push
addb
or
icebp
outsb
ljmp
pop
push
xor
cmc
subl
notb
aas
or
lret
lods
xchg
xchg
rolb
add
addr16
push
pop
imul
cmp
cmp
adc
mov
popf
lods
loop
sbb
cmpsl
push
inc
and
nop
repz
push
add
sub
lahf
cmp
or
jno
mov
mov
fwait
dec
out
push
dec
mov
inc
adc
pop
test
call
in
aad
icebp
pop
mov
fwait
push
dec
aaa
lds
or
out
test
sub
test
or
aad
mov
mov
push
push
xchg
jbe
aas
jae
cmpsb
enter
movsb
repz
dec
sbb
das
aam
pop
fmulp
data16
lea
dec
fdivrl
icebp
aas
mov
mov
pop
je
repz
dec
orb
push
cli
addr16
cmp
std
inc
ret
and
fld
sub
popa
jge
push
pop
mov
pop
add
repz
cmp
pop
add
mov
mov
fidivs
rcll
loop
outsl
or
mov
dec
xchg
push
rcrb
dec
pop
loop
adc
sub
push
xchg
in
and
add
mov
lock
adc
cmpl
sbb
cltd
push
add
push
push
mov
adc
out
push
xor
mov
push
scas
out
adc
dec
sub
jp
dec
lods
insl
pop
sbb
mov
imul
dec
cmpsb
cmp
mov
ljmp
sarl
xchg
sarb
cwtl
push
fdivrl
jmp
pop
imul
inc
sbb
xchg
sub
jno
cmp
popa
pop
or
dec
insl
popf
push
cmp
add
fwait
mov
add
add
fidivrl
negl
mov
push
fmull
cmp
jp
fnstenv
fwait
add
dec
xor
or
pop
adc
adc
mull
sbb
scas
ja
xchg
dec
xchg
cmp
out
fs
arpl
xchg
jbe
xchg
insl
iret
ds
sbb
push
pop
or
mov
outsb
jle
sbb
adc
ljmp
sub
jb
rolb
sub
mov
jecxz
enter
aam
dec
push
cmpsl
out
xorb
fs
add
mov
and
movsb
sbb
fsts
jne
mov
imul
cmp
hlt
lret
enter
push
or
xchg
xchg
fstps
andl
sbb
outsl
sub
xor
cmp
inc
scas
inc
fdiv
pusha
push
jge
jp
and
icebp
adc
mov
adc
mov
xorl
mull
dec
jp
cmp
adc
adcl
dec
jg
aad
shrb
addb
push
xlat
push
pop
lahf
fisubs
push
xor
mov
sub
or
lret
int
mov
int
in
push
into
inc
iret
inc
mov
js
scas
in
bound
sub
jge
icebp
notl
jmp
icebp
pusha
pusha
xchg
cmpsb
insl
mov
loopne
mov
cld
sub
addr16
mov
sar
lret
aam
push
mov
mov
sub
pop
push
fildll
push
ficomps
rolb
mov
mov
iret
imulb
loop
xorb
out
dec
mov
and
imul
pop
push
mov
push
jae
adc
movsb
adc
push
mov
jne
or
xchg
push
fs
cmp
inc
out
jg
fnclex
push
jmp
mov
rcll
mov
out
pop
jbe
xchg
sub
dec
jge
out
xor
mov
stos
sbb
sarl
mov
int
pushf
ret
push
pushf
sub
cwtl
push
mov
ljmp
dec
ja
mov
repnz
pushf
push
xchg
and
dec
push
dec
xchg
aam
das
pop
sbb
repnz
shr
mov
sbbb
pop
sub
and
jno
jmp
stos
mov
out
inc
push
jp
insl
sbb
popa
cltd
xchg
data16
ret
lods
push
pop
sahf
lret
addl
out
add
fwait
test
xchg
cmpsb
pusha
pop
jno
xchg
std
push
das
dec
aaa
sbb
xor
inc
xchg
test
sbb
je
jge
and
or
fstps
adc
loop
movsl
fisubl
in
and
xchg
jge
movsl
lret
dec
jg
int3
push
repz
dec
mov
cwtl
stc
fwait
jg
jne
fcompl
lcall
mov
movsl
lds
ss
movsb
ja
and
dec
or
icebp
mov
sahf
push
fbstp
jle
sti
fldl
sahf
lods
adc
jno
pop
xorl
int
mov
and
mov
mov
pusha
dec
inc
mov
pop
or
out
jo
shl
in
arpl
daa
ss
cwtl
popa
mov
imul
adc
aaa
hlt
movsl
sub
scas
cli
int
sbb
dec
sub
loop
pop
and
xchg
je
aam
cmpsb
arpl
loope
mov
pop
jmp
scas
mov
mov
inc
andb
push
mov
or
mov
fldt
fstpl
lret
mov
inc
cmp
dec
xchg
sbb
sbb
mov
mov
test
mov
cmp
ret
imul
cmp
inc
mov
push
jle
pop
push
fldl
xor
pop
dec
inc
cmp
or
push
jns
cmc
jo
xor
outsb
mov
stc
mov
mov
cmc
out
jb
lds
and
push
xchg
sub
add
inc
jmp
es
adc
in
cmpsl
test
int
mov
stos
push
sahf
sbb
sub
jecxz
add
cli
enter
jb
mov
icebp
xor
fmulp
das
adc
inc
fists
dec
dec
jp
push
inc
imul
lea
out
push
arpl
mov
and
out
call
or
cmpsl
fbstp
call
nop
js
sbb
cwtl
fwait
hlt
mov
cmp
xchg
or
cmp
xchg
fdiv
and
stc
pop
loopne
or
mov
xchg
add
cwtl
xor
jae
int
fsts
repz
scas
test
insl
out
inc
push
pop
std
sbb
in
pushf
adc
cwtl
mov
arpl
dec
jb
xlat
hlt
xor
xchg
jmp
jnp
fsubs
call
test
aad
mov
push
lods
add
push
push
loop
repnz
in
cld
rol
push
jbe
xchg
mov
stos
fdivrl
shl
push
cld
sub
pop
or
loope
mov
leave
xorl
jnp
lahf
push
push
mov
or
mov
insl
test
cmp
aas
add
and
and
rcl
int
ljmp
test
pop
mov
rcl
add
sub
out
mov
scas
pop
fistpll
popa
mov
cmp
dec
lods
int
fsub
pop
and
ljmp
in
or
mov
repnz
das
repz
lock
test
push
adc
inc
lret
or
fidivrs
lds
in
sub
cmpsb
sub
push
fstps
movsb
pushf
test
mov
push
inc
or
mov
mov
divb
sub
mov
out
pop
mov
and
stos
xchg
and
push
mov
dec
stos
js
fildl
int3
add
mov
inc
pop
dec
cmpsl
adcb
popl
and
cmp
std
cltd
scas
push
ds
ret
scas
test
pop
sub
rol
or
imul
stos
ret
dec
in
and
or
sbb
pop
push
call
rorl
insb
in
dec
jno
mov
mov
or
je
xor
push
shlb
jmp
inc
push
ss
mov
lcall
cmp
xor
lock
pop
clc
or
popf
sbb
scas
push
jbe
jle
sub
cli
pop
mov
bound
adc
inc
pop
lods
inc
out
jo
pusha
mov
pop
sbb
test
shrl
xchg
les
mov
outsl
outsb
mov
dec
add
cmp
aas
dec
xchg
leave
test
inc
adc
mov
js
pop
stos
push
cmp
add
rcll
addb
mov
add
cli
out
pop
mov
arpl
sbb
mov
dec
mov
xchg
int3
pop
push
loop
je
sbb
sub
les
aam
ss
xchg
pusha
mulb
jmp
cmp
push
lea
mov
inc
mov
lcall
out
or
fcoml
int
push
int
add
xlat
pop
xchg
repnz
test
pop
adc
add
loop
xchg
jp
shrl
shl
pop
int3
mov
xor
cmp
ljmp
sti
dec
aas
xchg
inc
push
idiv
inc
inc
mov
cmp
sub
pop
and
bsf
cmp
lret
cmc
leave
scas
sti
subl
xchg
cmp
sbb
outsb
pop
xchg
or
scas
cmpsl
add
mov
sbb
jp
dec
mov
pop
xchg
stos
push
daa
sti
ds
xor
cmp
pop
mov
int
dec
sbb
sbb
mov
mov
aam
mov
cmpsl
sub
lea
or
ss
dec
fistl
outsb
mov
and
icebp
fcmove
cli
sub
mov
sub
dec
jo
or
cmp
in
xor
mov
jg
mov
jp
xchg
std
cs
mov
or
cltd
sbb
nop
es
mov
out
push
js
aad
xchg
imul
mov
inc
aas
scas
xchg
xor
push
jae
push
xor
cmp
or
addr16
cmc
imul
fbld
add
xchg
int
pop
adcl
add
xchg
js
or
push
fcmove
xor
and
sub
outsb
arpl
add
push
sbb
mov
jp
jle
pop
scas
rcl
pop
imul
xor
je
push
mov
dec
orb
out
jl
push
pop
pop
stc
jecxz
lock
cs
adc
movsb
test
mov
fistl
cmp
into
dec
subl
pop
cmp
lea
sbb
lret
mov
push
loope
jle
xchg
jmp
jb
js
cltd
sub
cmp
mov
rcrb
js
pop
fsubrs
inc
out
lcall
mov
pop
es
jno
filds
add
addr16
xchg
cmp
cmp
xchg
fbstp
mov
or
pop
sbb
mov
pop
mov
icebp
in
mov
push
and
xor
dec
and
sub
sbb
sbb
imulb
xor
shlb
and
popf
jno
lds
sub
push
movsl
popf
cmpsb
pop
sub
pop
fmul
xchg
adc
imul
dec
mov
mov
mov
xchg
cmp
jle
sbb
and
aaa
mov
pop
inc
loope
adc
movsb
jo
push
gs
push
shll
test
jne
in
test
xchg
leave
les
loopne
ja
mov
inc
jg
or
xor
mov
bound
ror
xchg
aas
push
pop
xor
dec
mov
lods
imul
cmp
mov
cltd
ss
sbb
sbbb
xor
cli
jnp
mov
dec
or
cmpsb
cmp
mov
data16
ljmp
aaa
testb
sbb
jle
idivb
stos
popf
cs
xchg
popf
and
mov
cmc
xchg
jle
popa
pavgb
ljmp
out
imul
inc
push
pop
jae
outsb
cmpsl
rorl
imulb
dec
call
std
mov
inc
int
inc
xchg
rorl
dec
stos
stc
popl
jl
sbb
lret
hlt
mov
int
dec
imul
xor
in
outsb
popa
fcomp
int
shlb
xchg
call
in
arpl
iret
addr16
xchg
cmpsb
xchg
pusha
add
or
xor
pop
jg
icebp
movsl
testl
dec
in
mov
jp
outsb
pop
rcll
lcall
mov
dec
jp
into
xorl
push
cmp
inc
jb
aam
jne
sbb
adc
filds
sbb
pushf
sub
sub
push
ja
pushf
fmuls
cmp
xor
push
xor
ja
stos
push
lret
xchg
loope
mov
dec
popf
push
aaa
and
out
shrl
cltd
mov
and
idivl
push
xor
add
or
movl
mov
lods
mov
fnstcw
insb
pop
xor
leave
sub
or
pop
xor
rorl
push
aas
add
fldt
fxam
jg
lret
and
insl
outsl
jmp
pop
fildll
sbb
mov
xchg
insl
mov
ss
mov
jne
push
jle
mov
nop
pop
sub
ds
mov
mov
ss
sub
xchg
les
jmp
int
outsl
xlat
aam
or
mov
imul
cwtl
lods
enter
cwtl
daa
inc
jecxz
adc
cmp
shrl
or
xlat
out
xor
add
mov
pop
aad
rorb
mov
cmp
push
fs
leave
dec
pop
lret
hlt
mov
movsl
pop
pop
pop
mov
stos
push
lcall
adc
repz
and
cwtl
mov
mov
rcl
mov
into
mov
add
jae
jo
fdivr
jae
add
arpl
sub
cmp
shlb
sub
or
imul
scas
sbb
mov
mov
xor
ss
test
dec
popf
push
inc
nop
movsl
orl
pop
sbb
int
sub
dec
aas
mul
adc
jb
sti
jbe
mov
enter
aam
push
jecxz
jnp
test
in
jae
je
outsb
adcl
dec
rcll
jg
aam
inc
je
jbe
sub
mov
dec
xor
ret
and
test
mov
out
lret
popf
subl
out
cmc
push
dec
push
pop
fdivl
cs
mov
das
inc
or
pop
sbb
mov
mov
push
pop
stos
add
repz
pop
mov
xchg
jge
lret
insb
aad
inc
pop
sbb
fistps
ss
mov
xor
loope
scas
orps
xchg
nop
jns
push
cmc
fsubrl
mov
stos
mov
sti
xchg
iret
jne
xlat
aas
xor
sub
cld
fsubrl
mov
out
outsb
cmp
ja
dec
inc
dec
jp
cmp
fwait
out
mov
lods
xchg
jne
inc
outsl
lds
mov
lret
loope
or
sub
shrb
or
loop
xchg
ss
pop
adc
jns
call
sub
xchg
lods
enter
cmpsb
test
mov
and
adc
insl
popf
fdivrl
bound
inc
leave
imul
xchg
jne
test
insb
pop
pop
in
rcr
sbb
xchg
test
jmp
mov
mov
or
and
or
scas
jns
lahf
xlat
inc
pop
push
adc
fistps
pop
sub
pop
push
lcall
bound
sbb
addl
scas
stos
push
fnstenv
stos
jae
ja
daa
andb
jnp
push
pop
inc
ja
lret
push
inc
sub
sub
push
push
mov
outsb
or
mov
stos
dec
jecxz
jbe
add
enter
sbb
mulb
movl
mov
mov
lds
jl
cli
jmp
insb
or
push
cmpsl
dec
jl
push
jl
dec
iret
rcrb
jbe
mov
or
sar
mov
mov
lcall
mov
jae
pop
sbb
sbb
outsb
add
retw
cld
ljmp
and
cld
lea
dec
xlat
xchg
and
cmp
hlt
call
clc
xorb
cli
popf
repz
and
xchg
mov
xor
xor
stos
lret
jns
cmp
mov
jecxz
int3
shl
push
scas
xor
fidivs
xchg
jg
dec
sub
out
cld
dec
enter
or
mov
insl
clc
fidivl
and
jp
and
aaa
adc
test
cmc
push
divl
aas
ss
cli
in
outsb
shrl
or
dec
mov
xchg
adc
aas
jle
mov
cld
in
adc
cli
jp
dec
je
dec
mov
mov
fidivl
imull
lret
stc
inc
adc
loope
push
add
aas
mov
inc
call
lods
adc
xor
inc
data16
ror
loop
jbe
lea
sub
lock
xorl
and
sahf
xchg
fistps
repz
push
testb
mov
bnd
mov
jl
add
xor
enter
js
je
pusha
mov
mov
xchg
mov
and
mov
data16
sarb
fildl
xchg
adc
mov
add
add
inc
jecxz
mov
mov
adc
pop
sbb
inc
std
jb
lock
or
xchg
jb
popf
xor
out
bound
repz
mov
jg
aas
xchg
inc
sbb
jo
xor
jns
mov
js
xchg
out
push
or
xchg
dec
mov
adc
pop
movsl
cmpsb
int3
dec
mov
movsl
call
shrl
push
pop
sub
flds
push
jne
inc
and
add
les
fdivrl
ss
rolb
cmp
xchg
sbbb
pop
mov
jbe
stos
scas
xor
cmp
arpl
stc
pop
mov
es
push
mov
fidivs
fstp
stos
pop
and
test
lret
jns
in
pop
xor
xchg
sub
sti
not
leave
in
pop
cltd
int3
lds
jno
sbb
pop
mov
push
xor
daa
adc
stos
scas
adc
rcll
iret
sbb
aaa
jl
mov
jmp
ja
gs
add
sbb
popf
push
loop
and
inc
jg
shlb
clc
cmp
jns
xacquire
fsubrp
dec
or
outsl
sub
call
rclb
in
scas
push
cli
mov
lds
push
jno
xchg
scas
jl
dec
notl
fsubrs
fimuls
push
mov
aam
std
ja
js
cmp
lea
ja
push
jl
add
pop
or
ljmp
inc
es
mov
sti
scas
scas
cmpsl
dec
pop
iret
movlps
ret
loope
mov
into
test
inc
sbb
inc
sub
loope
push
mov
pop
inc
mov
lds
shlb
cmp
andl
shrb
data16
sbb
xchg
imul
dec
fsubs
scas
arpl
xchg
sarb
inc
inc
adc
imul
sti
xor
out
loop
jge
loopne
insl
imul
push
dec
call
dec
adc
movsb
push
ja
popa
adc
push
popf
pop
stc
fisubl
sub
mov
inc
out
add
adc
xor
pop
push
nop
inc
push
addr16
jge
sbb
lahf
cli
push
or
sbb
ja
mov
and
pop
pop
out
stos
mov
or
movb
adc
loope
and
adc
or
add
mov
inc
cmp
addl
xor
dec
cs
rclb
sbb
ss
stos
xlat
push
mov
fnstcw
lcall
aad
xchg
cwtl
outsl
out
inc
js
popa
sarb
pop
popf
xor
aam
xchg
mov
jbe
mov
mov
movsb
testl
dec
fxch
and
xchg
fsubrl
mov
cmp
test
xor
out
jb
cmpsb
inc
mul
xchg
insl
add
adc
in
pop
sub
stos
xor
jo
ret
cld
jb
push
pop
scas
mov
test
lcall
xlat
mov
rorl
xor
mov
ljmp
int3
std
mov
xlat
sub
adc
push
push
aaa
cmp
dec
push
popa
lods
push
fcmovne
andb
mov
cmpsl
jns
je
clc
sbb
pop
fs
outsb
adc
mov
popf
and
dec
and
push
mov
fsubs
sbb
mov
dec
mov
leave
xchg
scas
xor
sti
and
or
icebp
cmp
cmp
gs
rolb
cmp
and
xchg
mov
lret
push
adc
and
addb
cmp
outsb
adc
mov
or
mov
push
mov
leave
xor
mov
pop
pop
or
rolb
mov
or
fidivrl
sub
jmp
aad
in
pop
cmc
jl
jo
loop
ja
pop
loope
sbb
lahf
push
sarl
fsubs
mov
and
test
dec
xor
cmp
or
xor
xor
cmp
dec
lds
sbb
add
movsb
icebp
lock
xor
ret
mov
ret
inc
mov
dec
pop
sbb
add
or
mov
pop
xchg
cmp
push
jne
or
adc
fisttps
bound
incl
xchg
mov
sahf
insl
jmp
dec
pop
pop
jae
pop
stc
and
jge
push
xchg
rcl
lods
mov
rclb
xchg
push
and
dec
lahf
pop
push
cmp
loop
fdivl
mov
dec
adc
mov
test
add
mov
inc
push
mov
or
adc
xchg
pop
cld
stc
inc
lock
sbb
mov
mov
out
mov
dec
fbld
push
xchg
fisubrl
mov
fnstcw
int3
sbbb
stos
mov
lock
xor
push
mov
das
sub
push
mov
in
cmp
mov
mov
inc
fstps
add
mov
jno
jge
sub
fimull
add
dec
xchg
sti
cwtl
call
mov
stos
cld
sub
lahf
xchg
aaa
jmp
cmc
jecxz
cmpsl
xor
push
iret
and
fcomip
mov
test
lock
ja
xchg
push
xchg
ss
test
pop
mov
mov
ret
test
mov
loope
pop
popf
and
push
inc
cltd
out
movsl
fldt
ror
lods
add
aad
xor
ja
push
push
lds
hlt
lret
pop
fcoms
jle
repnz
lods
mov
cmc
pop
rolb
js
scas
in
dec
lock
sbb
dec
int3
mov
pop
pop
bound
cmp
dec
cmc
icebp
ret
nop
sub
adc
cmpsb
fldl
daa
imulb
add
or
dec
ds
ljmp
scas
shl
pop
sahf
adcl
mov
mov
inc
call
mov
icebp
push
iret
out
cltd
arpl
or
xor
add
fdivrs
pop
aaa
sub
daa
testb
push
add
or
cmp
aam
mov
insb
mov
inc
mov
jge
clc
addr16
dec
jnp
stos
fstpl
add
loope
dec
insl
mov
rcll
jbe
and
bound
fistl
outsl
fistps
mov
sub
mov
pusha
add
jge
push
xchg
loopne
inc
stos
imul
jbe
stc
repz
pop
push
fs
xor
mov
movsb
lahf
cmpsb
and
nop
test
xchg
push
stos
pop
divl
mov
cwtl
call
ret
rorl
jmp
push
sar
shrb
xchg
cwtl
sbb
jl
aas
out
push
aas
andb
stos
mov
xchg
aam
fildl
aas
sbb
pop
xor
inc
cwtl
scas
mov
mov
into
cmp
mov
aas
fdiv
add
sahf
jmp
adc
jecxz
addr16
xor
mov
insb
int3
cld
lret
ss
fs
lods
dec
push
jp
push
lahf
mov
and
enter
movsb
and
faddl
mov
pop
loope
mov
dec
jns
insb
test
rolb
lds
adc
adc
int
sarl
cwtl
xor
sub
lahf
jg
in
imul
mov
lahf
test
sbb
mov
adc
mov
mov
roll
cmpsl
xchg
frstor
xor
mov
pop
pop
ficompl
sub
sub
jb
mov
insl
xchg
fwait
enter
sbbb
push
cmp
and
mov
mov
jne
mov
or
imul
xchg
and
fldcw
and
xor
or
mov
mov
inc
pop
das
inc
fadds
xor
mov
xchg
rorb
dec
icebp
push
jp
adc
inc
ficoms
rclb
inc
push
scas
jl
push
add
or
subb
cmp
test
je
repnz
pop
std
pop
lcall
fisubl
mov
mov
xchg
and
je
jmp
pop
ja
and
or
repz
sub
lret
add
cmp
enter
sbb
mov
mov
xor
mov
xor
shl
mov
hlt
pop
add
and
jb
test
xchg
iret
cmp
cmp
test
stos
add
dec
mov
adc
push
popa
jle
mov
cltd
shl
xchg
mov
pop
leave
insb
xor
and
dec
push
sub
sbb
or
adc
pop
movsb
pop
data16
addb
into
dec
cmp
sti
movsl
inc
test
jno
repz
cli
outsl
pop
and
rcrl
push
scas
adc
mov
je
add
idiv
adc
or
insb
jge
cld
aaa
test
jns
loopne
out
jns
jmp
cmp
sbb
jle
cs
push
test
sub
das
push
add
xor
lret
cmpsb
add
lods
push
dec
or
outsb
or
mov
pop
mov
loope
inc
daa
adc
and
lds
ret
mov
fisubrl
ljmp
pop
popa
ftst
push
shrb
adc
mov
xorb
inc
ret
push
rorl
cmp
or
push
push
sub
leave
push
jp
popf
mov
sub
jnp
xchg
mov
jl
jb
xchg
lcall
adc
or
sub
or
or
out
mov
mov
enter
idiv
lret
cmp
xchg
mov
cli
insb
xchg
neg
ja
popa
std
xchg
sub
mov
cmc
in
cmp
int3
pop
push
jmp
test
push
pop
sbb
inc
add
mov
push
mov
jp
test
stc
jo
in
stos
and
jo
add
add
xchg
push
repz
cmp
movsl
sub
pushl
add
pop
insl
scas
and
aad
xor
xchg
jae
sbb
lahf
loope
sub
jbe
pop
mov
pop
nop
cmp
push
and
pop
out
stos
out
gs
or
out
popf
inc
gs
sbb
xor
xor
aam
cmp
int3
cmp
add
out
aas
dec
jmp
and
int3
and
inc
mov
fs
push
aaa
jo
icebp
stos
sub
xchg
cld
int
es
jp
jns
ja
push
sbb
dec
popf
sbbl
xchg
roll
and
xor
out
lea
mov
push
jge
stos
clc
mov
xor
testb
and
add
mov
sub
mov
jge
repz
lcall
test
push
jecxz
mov
push
sub
sbb
cmpsb
loope
outsb
pop
lret
jno
int
sub
insb
mov
and
jp
lds
and
mov
adc
inc
dec
and
stos
mov
mov
mov
push
push
pusha
ret
leave
inc
movsb
iret
lods
sbb
dec
xorl
cmp
push
fistpll
in
dec
idivl
xor
test
xchg
iret
insb
lock
sub
lret
pop
subl
inc
jb
fldenv
xchg
sbb
jmp
sbb
mov
ljmp
pop
mov
or
xor
rolb
lcall
jmp
add
mov
or
pop
cli
test
jno
enter
adc
lods
daa
jl
xchg
popf
bound
daa
inc
pop
mov
jne
cmpsb
mov
pop
adc
adc
iret
jg
adc
cmpb
xchg
xor
adc
sub
nop
iret
cltd
test
sbbb
repz
mov
fnsave
cmpl
push
xor
mov
sbb
push
jmp
test
aas
cs
cmp
loope
xor
inc
adc
mov
and
lahf
push
sub
xchg
sbb
adc
lock
jne
sbb
pop
out
cli
add
leave
lea
outsl
inc
xchg
gs
mov
sbb
int3
jmp
or
arpl
pop
inc
dec
hlt
arpl
jg
mov
repz
movsb
mov
sub
enter
fiaddl
push
int
cmpsb
lret
xor
lret
mull
int3
mov
mov
or
xor
mov
out
aas
mov
lahf
idivb
dec
stos
xchg
fcmovne
nop
cmp
ss
out
cmp
clc
movsl
pop
xchg
or
testl
iret
es
int
loop
in
ja
push
faddp
out
loopne
daa
cmp
ror
or
pop
mov
scas
lods
xchg
and
dec
cltd
xor
or
pop
dec
out
sbb
lea
lcall
nop
cmpsb
add
repz
sub
xchg
les
or
sbb
fstps
add
stos
or
push
loopne
notb
loope
outsb
in
push
inc
dec
jl
mov
adc
adc
ds
hlt
push
cmp
cltd
lea
push
fsubr
pop
arpl
cli
mov
dec
add
add
int
cmp
mov
or
out
loopne
mov
xor
dec
hlt
hlt
xchg
xchg
push
mov
lret
push
mov
xchg
aam
cld
mov
popf
lea
and
in
cld
and
fcmovnb
push
fisubl
scas
test
mov
pop
into
dec
movsl
xchg
or
mov
jnp
or
pop
jp
mov
ffree
iret
lret
mov
adc
xor
xor
fwait
cmp
pusha
out
scas
inc
push
mov
and
lods
xor
sub
pushf
jne
fwait
add
add
push
adcl
sub
jge
cwtl
inc
mov
sbb
dec
sub
lret
push
daa
dec
cmc
cmp
leave
push
popa
push
or
sub
jo
push
jne
adc
push
leave
fcoml
rcl
push
pop
dec
pop
int
arpl
roll
jg
std
in
inc
and
lret
xchg
sub
lret
mov
sbb
fildll
sub
out
mov
rorb
lret
lods
imul
fdivs
ss
pusha
sub
mov
mov
fsubr
fisttpll
in
pop
std
ljmp
lahf
ja
adc
adc
xchg
imul
hlt
outsl
sub
std
jb
fnstsw
dec
icebp
add
xlat
jno
add
jno
pop
pop
and
out
das
xor
cmp
mov
faddl
orl
outsl
mov
lock
adc
inc
and
pop
or
inc
dec
lret
pushf
test
jmp
sbb
cld
cwtl
push
incl
lds
sbb
or
jb
testl
pop
dec
js
push
std
cmp
cmpl
inc
mov
nop
jmp
outsl
or
icebp
mov
fwait
mov
sub
std
bound
lahf
stos
mov
fsubs
mov
lcall
das
bound
xchg
jns
iret
pop
or
mov
dec
mov
cmp
jecxz
stos
dec
push
movsl
repz
pop
xchg
testl
into
mov
xchg
inc
ret
scas
loopne
mov
xor
push
in
cmpsb
xorb
jl
sbb
in
cmpsb
popf
dec
daa
xchg
sbb
and
shrl
fcmovnu
push
dec
std
dec
je
sub
adc
add
daa
cwtl
or
adc
mov
hlt
or
xor
sbbb
xchg
pop
lret
mov
inc
das
jns
notb
punpckhwd
aam
jae
cld
insl
xchg
repnz
mov
idivl
mulb
bound
cmp
movsl
push
xor
cmp
daa
fsubrl
shr
lods
popa
in
jle
lcall
mov
or
inc
shr
mov
cmpsl
add
fcompp
push
pop
lahf
or
xchg
and
push
or
pusha
jb
or
cmpsl
pop
jmp
xchg
lret
cmpsb
movsb
lcall
push
fsts
mov
pop
push
mov
pop
jmp
jecxz
push
repnz
add
out
jns
mov
faddp
ss
jae
pop
pop
test
cmpsl
loope
in
std
push
inc
jle
sbb
sbbl
dec
xchg
add
test
jne
mov
imul
ret
cli
add
mov
inc
fsubl
notb
xor
xchg
and
xchg
and
pop
rcr
fadds
rolb
cmp
fsubl
lock
ds
push
adc
xchg
mov
das
inc
mov
jge
scas
add
shrl
sbb
iret
mov
mov
clc
and
cltd
xchg
sti
xchg
mov
adc
scas
adc
mull
push
fildl
out
push
out
cmp
fsubr
jb
icebp
or
shll
mov
fwait
push
sub
aaa
aas
andl
das
iret
scas
pushf
loopne
loop
mov
mov
jae
dec
xlat
xor
lea
add
leave
js
pop
aad
shrb
mov
xor
orb
push
sbb
stos
push
or
dec
cmpsb
inc
mov
call
lret
dec
test
outsb
sub
mov
jl
mov
xchg
aaa
out
sbbl
std
rorb
jnp
insb
stos
adc
fcmovnb
xor
addb
int3
mov
adc
outsb
mov
movsl
push
mov
cltd
mov
xchg
dec
push
mov
cmp
imul
mov
push
push
push
sarl
inc
pop
adc
or
fcomp
xorb
inc
pop
sbb
add
cwtl
int3
cmp
add
push
push
sub
nop
push
sbb
mov
test
aad
sbb
pop
or
lock
sbb
mov
pusha
lss
mov
aaa
nop
cli
iret
gs
divl
cltd
and
dec
xchg
adc
xchg
outsb
mov
nop
pop
push
cmp
aas
int
divl
mov
lds
outsl
ret
shl
inc
fwait
or
sub
popa
sahf
js
cltd
test
push
sbb
sahf
ret
jno
out
push
mov
in
jbe
in
rcl
cmp
dec
inc
lock
adc
push
inc
or
in
jbe
sbb
sahf
or
ret
in
and
cmp
xor
push
test
sub
mov
pop
fldt
mov
int
sarl
les
pop
jecxz
jnp
add
xchg
ret
dec
and
add
repz
daa
jl
scas
pop
jmp
repz
int
aas
fndisi(8087
add
mov
leave
subb
test
cmp
jne
mov
rcrl
ror
or
ret
lods
repz
cmp
cwtl
dec
lret
jno
test
idiv
or
jl
pop
mov
les
and
cmp
pop
stos
and
inc
rorb
dec
fcmovnb
xchg
sbb
sahf
and
dec
push
inc
shl
outsl
and
push
and
inc
pushf
sbb
push
mov
add
ret
insb
lea
push
inc
int
inc
loop
das
pusha
inc
mov
leave
ljmp
jge
ss
adc
add
or
xchg
cwtl
aam
xchg
xchg
mov
adc
push
push
cli
out
outsb
adc
xor
cmpsb
aam
inc
adc
or
faddp
mov
outsb
lods
fimull
test
stc
mov
int
pop
or
test
pop
ljmp
fsubrl
jle
jmp
or
xchg
mov
mov
sub
lret
sub
rorl
jb
jno
sbb
dec
clc
test
jnp
mov
or
xchg
int
sar
add
or
jg
inc
and
pop
and
imul
cmpb
xor
lock
jne
jg
xchg
or
push
and
sub
jmp
lods
mov
xchg
ljmp
cmp
mov
adc
add
or
pop
cli
cmp
int3
push
pushf
nopl
cmp
pop
pcmpeqb
sub
imul
outsb
mov
popa
jl
jp
cld
call
mov
and
test
add
dec
sub
and
mov
in
cmpl
mov
in
pop
movsb
pushw
pop
lods
add
jle
or
arpl
mov
cmp
push
inc
iret
sarb
xor
imul
mov
dec
and
xchg
inc
fsubs
cmp
addb
fwait
out
test
iret
fsts
lret
cmpsl
outsb
cwtl
fmuls
add
sub
aam
divb
fstpt
insb
ret
push
iret
stos
xchg
mov
lods
sbb
fs
ds
add
adc
stc
inc
adc
sbb
gs
ljmp
mov
push
mov
mov
test
mov
pop
subb
loop
lret
add
ja
or
ljmp
out
mov
add
icebp
add
mov
mov
pop
stos
es
dec
inc
push
xchg
xlat
push
cmp
nop
mov
mov
mov
paddusw
push
cmp
pop
mov
inc
repz
bound
loope
nop
push
int3
inc
fwait
arpl
aam
xor
mov
popf
sbb
roll
lahf
ss
das
jecxz
rcrb
out
pop
add
insb
pop
dec
out
sub
mov
mov
nop
in
jnp
icebp
ljmp
insl
cs
xchg
loope
fistpl
loopne
xor
ja
cli
xchg
mov
mov
push
mov
pop
mov
and
pusha
jae
sub
mov
mov
ror
fildl
adc
jmp
shll
fcompl
out
push
sbb
stc
inc
pop
popl
scas
sbb
inc
push
and
sbb
xor
adc
inc
fstl
xorb
xor
mov
push
mov
jne
out
out
sbb
push
clc
lret
jnp
dec
push
lahf
and
aas
imull
rorb
es
jo
lret
lea
mov
adc
lcall
mov
push
cltd
pop
dec
mov
dec
or
sub
jp
fsubp
repnz
inc
and
mov
imul
lock
inc
sti
jns
push
inc
pop
push
das
iret
push
cmp
pop
pop
test
cmp
pop
push
leave
and
sub
xchg
arpl
cmp
pop
idiv
ljmp
lods
xchg
add
scas
jo
hlt
jns
decl
imul
mov
push
jae
add
push
rcll
inc
push
jb
pop
aam
push
aad
fucomip
arpl
and
mov
pop
jge
movsl
das
cli
int3
cwtl
jmp
inc
sbb
rcr
stc
aad
sbb
and
and
push
push
mov
arpl
pop
pop
push
and
mov
into
sbb
push
and
xchg
cltd
pop
lahf
dec
dec
iret
pop
cmpb
cmp
cli
loope
push
sbb
jbe
mov
in
cmc
in
jae
cmc
imul
inc
inc
jno
sahf
mov
mov
cmp
test
lock
xchg
fs
lods
outsl
inc
adc
inc
mov
jno
scas
jg
mov
and
popa
insl
fisttpl
mov
push
add
mov
rclb
in
loop
fdivr
mov
mov
imul
scas
lods
or
and
push
inc
mov
mov
loope
push
into
dec
mov
xor
mov
ljmp
fcmovne
aas
repnz
jo
fwait
adc
cmp
popl
and
repz
cs
push
adc
xchg
and
mov
fidivrs
jbe
ljmp
dec
inc
add
stos
mov
add
sbb
inc
in
xor
sti
push
das
repz
addr16
shrb
jb
dec
xor
mov
xchg
mov
in
xchg
stos
xchg
jbe
daa
dec
outsb
sahf
xchg
arpl
repz
cmpsb
sbb
jl
xchg
adc
or
pop
and
mov
sub
inc
pop
ret
cmc
pop
mov
ret
les
out
je
daa
stos
pushf
fldcw
jge
lahf
lahf
dec
mov
scas
sbb
add
pop
notb
and
sarl
bound
pushf
scas
loope
xor
adc
sbb
add
shll
mov
cmp
fldcw
inc
outsl
cmpsb
adc
add
lret
call
jmp
addb
dec
bnd
cmpsl
stos
inc
sbb
inc
xor
sbbb
adcl
psubsw
push
imul
sub
out
mov
adc
pop
or
aam
stc
push
call
mov
cmp
push
mov
stos
adc
pop
shrl
fs
add
repnz
imul
mov
rorb
and
mov
jecxz
pop
push
adc
adc
loope
std
xor
cltd
adc
add
jmp
mov
aas
out
dec
xchg
mov
inc
lcall
sbb
or
dec
jmp
xor
adc
or
fistl
adc
sbb
aas
pop
push
jne
sbb
jns
push
loop
inc
addr16
and
mov
xor
jae
or
adc
mov
jp
lea
insb
fwait
sarb
insl
adc
shl
lods
rcrl
push
inc
pushf
divl
ret
cmc
push
push
subb
push
loop
lea
pushf
xor
mov
or
loope
sub
mov
mov
int
rorl
cwtl
lret
jg
push
cmpsl
imul
fsubrs
in
mov
mov
fs
push
les
pop
push
mov
aad
jecxz
dec
mov
ljmp
fxtract
xor
mov
mov
or
pop
or
popf
daa
push
movsl
xchg
inc
mov
fistl
lds
adc
aad
fwait
mov
sbb
shr
push
addr16
sbb
sbb
lret
dec
push
cmp
shlb
inc
jnp
in
lea
cwtl
jg
mov
mov
and
xor
push
pushf
or
jae
js
sbb
cmp
sub
rcll
push
xor
sub
cwtl
out
cli
cmp
lret
add
and
xchg
bound
popa
fs
stos
or
sub
mov
movsb
xchg
push
mov
les
rcrb
push
pop
or
sub
popa
push
cltd
sbb
mov
inc
push
inc
scas
lods
or
push
loope
jmp
paddsb
out
cmpsl
dec
xchg
lock
mov
int3
mov
adc
cltd
sti
fisttps
mov
les
je
or
adc
fisttpl
dec
jge
bound
dec
jp
mov
mov
lods
pop
dec
adc
add
in
dec
or
sar
xor
cwtl
cmp
jl
sbb
sub
pop
dec
arpl
enter
movsb
cmc
push
inc
or
mov
clc
jp
mov
popl
sbb
rcrl
roll
arpl
ret
aad
mov
dec
clc
push
dec
call
int
adc
push
scas
bound
xchg
mov
pop
inc
es
cwtl
sub
pop
loop
mov
cmp
aam
jg
test
lock
sub
fdivr
lock
pop
cltd
adc
int
sbb
ret
ret
hlt
test
andb
mov
mov
pusha
in
fwait
xor
out
imul
sub
push
sbb
mull
push
test
pop
adc
in
add
loope
sbb
repnz
mov
jp
push
scas
sbb
flds
mov
sbb
daa
push
push
jmp
in
addr16
leave
inc
xchg
cmc
outsb
jge
sbb
push
push
lods
sbb
adc
cmpsl
sub
sbb
pop
inc
hlt
dec
xlat
out
sub
les
and
daa
leave
les
push
repnz
test
ljmp
xor
bound
pop
decl
iret
dec
pop
stc
lea
inc
jg
dec
pop
das
jle
cs
xchg
cmc
enter
pop
rcr
jnp
mov
sub
dec
fdivr
sarb
pop
popf
popa
lcall
std
pop
stos
sub
loopne
ss
pop
xchg
imull
loop
mov
pusha
mov
xor
add
and
fs
iret
add
jl
inc
dec
pop
xor
sub
hlt
jg
cltd
mov
or
inc
add
lock
or
jl
lahf
ret
mov
push
rol
movsl
jl
in
mov
adc
aas
scas
mov
mov
jnp
hlt
jno
pop
addb
popa
cli
cmpsb
mov
addr16
pcmpeqw
inc
xor
in
sub
stc
push
std
movsb
dec
es
push
leave
fmul
sahf
scas
xorl
inc
ds
lods
aad
ret
jb
pop
ret
nop
mov
mov
or
scas
test
idiv
inc
xchg
stc
orl
and
add
dec
mov
subl
mov
cmpsl
or
push
clc
jp
pop
imul
jmp
cmp
mov
jecxz,pt
popa
mov
movsl
mov
lods
pop
jp
mov
xor
imul
das
cmp
lret
push
jb
pop
int3
cli
and
xorl
test
adc
xor
insl
cmp
fcomi
enter
xchg
pop
xchg
add
movsb
sub
and
dec
inc
daa
cwtl
adc
lods
pop
add
ljmp
sarl
pop
mov
add
aam
push
testl
inc
dec
mov
call
movsl
pop
or
in
sti
mov
sbb
push
rcl
cld
loope
mov
int
jmp
in
ljmp
inc
or
in
insl
sbb
jno
stos
mov
packuswb
test
aaa
xchg
sbb
pop
jle
in
xor
fisubrl
lret
and
sbb
jb
imul
sub
sbb
scas
cmc
jg
lret
cmp
clc
inc
push
push
mov
cld
jmp
mov
sub
gs
xchg
fs
lret
icebp
mov
or
popf
ss
movl
xchg
es
insl
mov
and
clc
push
sbb
sub
lea
fcomps
lods
adc
js
cwtl
mov
ret
cmp
xchg
xchg
fnstcw
mov
outsl
xchg
add
push
xor
mov
popl
fbstp
sub
mov
sub
imul
cmp
inc
addr16
adc
lods
mov
out
add
pop
shlb
in
aam
mov
fistpl
xchg
mov
jo
cwtl
xchg
scas
popa
xchg
jno
shlb
sub
xor
cltd
inc
dec
xchg
mov
sub
jns
fsubrl
popf
gs
and
into
aam
adcl
mov
pop
pop
in
aad
cmp
movsl
ljmp
xor
rclb
push
jbe
call
xlat
xor
jge
dec
mov
xor
adcl
movb
es
push
fs
movl
repz
mov
pop
or
ret
lods
push
xchg
sub
inc
jne
gs
push
fimull
inc
mov
cmovl
cmp
cld
mov
les
adc
push
divb
and
movsb
movsb
jle
inc
jne
arpl
in
ret
pop
or
in
inc
sub
jne
not
cli
push
fs
xor
dec
data16
mov
and
mov
es
inc
test
insl
sti
addr16
imul
jb
pop
jo
lahf
and
pop
in
fwait
adc
pushf
out
les
or
mov
adc
push
or
ds
incl
sbb
adc
sub
add
push
mov
jmp
mov
rorl
mov
rol
adc
cmp
stos
popa
push
ficompl
mov
mov
push
xor
pop
push
inc
pop
out
mov
ficomps
mov
add
jle
iret
xchg
iret
and
dec
in
dec
addr16
xor
adc
cmpb
adc
cli
push
out
imul
adc
cmovp
mov
pop
adc
outsl
push
push
dec
mov
or
enter
xor
sbb
push
mov
mov
ds
cmp
xchg
inc
test
inc
and
jnp
daa
outsl
cli
inc
jmp
mov
movsl
xchg
or
and
lock
and
pop
shlb
movsl
adc
push
jle
fsubrl
scas
popa
addb
adc
mov
mov
or
push
xchg
dec
int
xorl
pop
jnp
std
xor
xor
int3
lret
xchg
in
or
xchg
movsl
push
cmp
mov
cltd
mov
out
lea
es
fs
fnsave
pop
loopne
je
push
sbb
mov
lods
ret
inc
js
clc
les
cmp
inc
jle
xorb
enter
dec
cwtl
mov
add
jnp
fwait
jb
cli
repnz
subl
into
bound
nop
sub
push
rcrl
mov
int
bnd
ljmp
mulb
mov
outsl
insl
mov
or
pop
cmpl
mov
xchg
lods
or
add
push
mov
mov
push
icebp
pop
test
insl
fcmovb
adc
and
xchg
xlat
push
bound
xchg
and
sbb
or
ret
hlt
fwait
inc
fs
sti
sbbl
std
cmp
movsb
jb
cmpsl
add
shll
xchg
invd
aaa
dec
andb
push
or
ret
faddp
test
push
push
mov
dec
or
test
xchg
repnz
ljmp
mov
add
loopne
and
fwait
sti
xchg
or
ret
cmp
mov
cwtl
bound
and
pushf
adc
xchg
cmpsl
lahf
test
xchg
push
sbb
sbb
enter
mov
xor
xor
leave
mov
pop
sub
or
mov
je
outsl
cmp
aam
nop
aad
cmpsb
adc
nop
imul
xor
cwtl
jmp
mov
rol
cmp
pop
jp
clc
repz
movsb
cmp
mov
fucomi
daa
pushf
xor
cmp
fsubrl
popa
pusha
int
stos
sti
mov
dec
or
aad
int
out
cmp
test
nop
imul
lcall
add
out
mov
mov
inc
add
int
xchg
ljmp
aaa
lods
and
nop
push
pop
jmp
xor
sub
pop
dec
mov
and
inc
inc
movsl
shll
adc
add
sti
inc
popl
scas
les
scas
mov
lock
or
xchg
inc
mov
lahf
xlat
pop
into
out
fcompl
in
jo
js
sub
mov
jae
jno
inc
push
dec
inc
dec
inc
sub
in
popf
cld
jmp
lds
ficompl
mov
or
add
in
mov
dec
cmp
xor
mov
lea
popf
push
dec
xor
jle
test
push
jbe
in
jb
in
pushf
dec
cmp
loop
ljmp
and
sbb
push
push
ja
popa
mov
sahf
pop
adc
pop
sub
and
xchg
jo
mov
add
nop
push
scas
mov
pop
add
js
dec
jo
lcall
repnz
cmp
jecxz
lahf
xchg
cli
jae
adc
xchg
jne
lret
mov
jecxz
dec
ret
dec
mov
adc
mov
inc
sbb
imulb
imul
jne
ljmp
xchg
jecxz
scas
scas
test
push
int3
nop
sub
adc
fcmovnbe
imul
pop
fildll
or
ret
imul
mov
mov
mov
xchg
push
fcomip
mov
xor
jb
and
cmpsl
mov
insb
insl
addr16
fsts
orb
es
pop
inc
mov
aad
pop
or
cli
iret
push
cmp
shrb
call
dec
call
rcrb
sti
xchg
inc
jecxz
push
daa
push
mov
scas
xor
mov
lock
mov
inc
lret
inc
xor
push
push
cli
ret
pop
out
out
add
iret
mov
in
fiadds
test
cmpb
add
fisttpl
xchg
cltd
sub
mov
aam
addr16
stc
xor
in
rolb
pop
call
roll
in
and
pop
test
icebp
jg
and
std
test
or
mov
cmpsl
jle
fcmovb
mov
loope
push
loope
pusha
or
push
in
inc
fs
inc
xchg
pop
add
xchg
pop
sbb
sarl
repz
adc
and
lahf
nop
fistl
adc
fcomp
shrb
and
mov
daa
mov
inc
mov
fwait
scas
ud2
mov
aad
mov
shl
dec
cld
rclb
add
xchg
popa
xor
xchg
loopne
movb
shlb
lods
fistl
jle
xor
out
cld
xchg
imulb
pop
scas
lods
outsb
lock
lea
in
sub
scas
cmpsl
in
xor
push
dec
dec
jns
stos
pop
xor
pop
or
imull
adcb
test
je
adc
sbb
loope
inc
dec
jmp
xor
mov
jnp
imul
lahf
cmp
push
int3
hlt
daa
enter
sbb
mov
dec
int3
fmuls
ret
and
out
or
in
inc
rcrl
fiadds
lea
dec
inc
insb
stos
cmp
fwait
mov
pop
stc
xor
lods
pusha
cli
or
xchg
adc
rcrl
jle
sbb
push
fldt
fmulp
mov
lock
rclb
and
negb
dec
pop
jae
sti
pop
cltd
add
inc
push
in
in
xor
test
sbb
cli
jno
push
xchg
fwait
js
hlt
push
pop
adc
popf
sbb
imulb
icebp
adc
in
mov
xchg
ljmp
aad
rcll
fidivs
cmc
mov
mov
insl
popf
jge
scas
sbb
inc
call
xchg
cwtl
xor
mov
mov
lcall
cmp
cmp
test
pushf
shll
xchg
out
outsl
pop
call
outsl
pop
sbb
push
jp
add
filds
ljmp
test
pop
fs
jbe
adc
xorb
adc
popa
ljmp
adc
test
pop
xor
cmp
xor
mov
cmp
fstpl
insb
lea
cs
ljmp
iret
xor
lds
push
lock
pop
adc
addr16
cmpb
jo
into
movsl
mov
sbb
sahf
cmp
sti
test
inc
pop
jno
imul
push
icebp
lock
adc
in
leave
mov
jne
inc
aaa
dec
mov
inc
sbb
mov
xchg
cmpsl
mov
and
test
pop
jg
add
adc
test
fwait
sbb
jmp
cmp
cmp
cmpsb
pop
dec
xor
xor
test
fs
fistpl
xchg
cmp
popf
imul
cltd
xchg
clc
idiv
dec
mov
xor
dec
int3
ret
sub
push
nop
mov
push
mov
inc
sub
hlt
lods
mov
outsl
enter
pop
aas
jns
jne
push
repnz
sub
imul
int
inc
jp
xchg
setg
push
and
fwait
negb
jnp
out
idiv
ret
adc
pop
xor
pop
push
inc
dec
xor
jmp
cmp
hlt
jo
rcl
imul
cmpsl
scas
insb
test
jo
and
push
jmp
out
inc
in
jecxz
jle
ljmp
mov
or
andb
jp
stos
lret
mov
cmp
xchg
adc
lds
hlt
mov
cmc
cmp
add
push
push
or
arpl
icebp
aad
cmpsb
ds
xor
pushf
aaa
shlb
hlt
adc
inc
cmp
jp
or
sub
add
adc
icebp
mov
and
gs
cmp
or
aas
jecxz
icebp
das
aam
pop
call
repz
movsl
fists
loopne
pop
adc
mov
ja
pop
fnstsw
xchg
test
dec
mov
cld
add
cld
adc
into
xlat
sub
xor
scas
int3
icebp
fsubrs
movq
inc
lcall
jge
jbe
jg
pop
sbb
cld
je
out
cmp
fnsave
cs
insb
popa
jo
rcrb
icebp
in
arpl
lods
push
xchg
sbb
jno
mov
jge
loope
inc
add
scas
icebp
inc
fcmovbe
lret
adc
iret
std
mov
xlat
pop
cmc
fisubs
das
jmp
psllq
dec
mov
add
sub
pop
mov
ret
aas
sbb
and
mulb
inc
faddp
cli
or
push
out
rcrl
insl
jmp
cmp
mov
outsl
dec
jbe
ss
inc
cmpsl
fldln2
push
mov
inc
mov
or
adc
add
in
clc
ljmp
out
mov
popfw
cltd
dec
sub
push
adc
cmp
jge
leave
in
ljmp
jp
arpl
leave
dec
sarl
cmp
lret
pop
aaa
xchg
pop
in
lar
adc
sbb
mov
idivb
popl
jp
fiaddl
xlat
test
jo
adc
push
cmp
pop
dec
shr
jns
and
push
xlat
mov
mov
imulb
imul
lock
leave
in
sar
jnp
xchg
xchg
or
popf
inc
mov
xchg
out
nop
push
mov
mov
ja
xchg
and
inc
inc
mov
fwait
inc
push
pop
xchg
fxch
xor
jae
gs
sbb
jmp
mov
dec
sub
jnp
jg
xor
add
dec
cmp
cmp
out
xor
lods
cmpsb
cmp
sahf
imul
sbb
pusha
inc
jbe
add
push
add
mov
dec
adc
dec
push
shll
scas
push
xchg
sbb
into
rcl
popa
clc
cmp
cmp
sub
scas
and
fwait
cmp
pop
mov
and
xor
js
sets
xchg
outsb
pop
fcmovb
pop
lea
ds
decb
out
jg
xchg
push
in
jnp
xchg
in
and
sahf
lock
xchg
adc
sti
loop
sbb
push
das
insl
xchg
dec
fs
and
pushf
fwait
lea
or
sbb
mov
aas
jb
sub
pop
push
mov
cltd
mov
cmpl
cs
aas
jbe
add
int
sub
xchg
xor
mov
icebp
out
mov
sbb
int3
stos
repnz
xor
mov
clc
xchg
cli
jo
adc
add
test
sahf
jp
inc
and
mov
ret
mov
cmp
xchg
inc
enter
pop
push
daa
push
arpl
or
push
out
and
fnstsw
sahf
pop
cmpsl
andl
shrb
inc
xorb
cmp
mov
fnstsw
xchg
inc
pop
xchg
in
cmp
aam
xchg
inc
lcall
jno
pushf
dec
cmp
mov
and
inc
pop
sahf
popf
addb
cs
shr
loop
inc
jmp
ljmp
in
fistl
pop
repnz
movsl
pop
xor
xor
or
xlat
enter
in
cmc
outsl
loopne
test
in
jmp
xchg
adc
cmp
adc
notl
in
rcll
dec
outsl
mov
jg
inc
pop
mov
mov
cmp
roll
sub
lock
rol
out
jne
xlat
pusha
mov
scas
jbe
sub
xor
jp
imul
test
add
sub
xor
push
cmp
xchg
das
repnz
subl
cld
sub
loope
mov
aaa
call
stos
cld
pop
das
sbb
adc
xor
lods
jne
imul
push
lcall
mull
inc
and
movsb
imul
clc
ljmp
popa
push
repz
sbb
and
mov
pop
or
popf
mov
fldt
stc
popa
gs
xchg
mov
loop
xchg
out
add
ret
fwait
xchg
fwait
push
cmp
mov
mov
jmp
das
sbb
aam
fimull
insb
gs
jbe
dec
push
in
jo
push
je
repz
in
mov
loopne
push
sub
iret
in
xlat
pop
cltd
pop
fwait
push
scas
aam
jnp
dec
pusha
add
lods
out
ret
mov
jmp
loop
inc
lods
xchg
adc
faddp
pushf
dec
inc
sti
push
mov
in
das
int3
jge
push
mov
sub
jmp
inc
push
stc
enter
mov
pop
add
jno
movsl
das
mov
mov
lcall
dec
mov
insb
cltd
push
or
aas
mov
cmp
pop
sbb
lea
add
bound
stos
into
rep
and
mov
shll
push
scas
jo
cmpsl
shrl
or
iret
shll
lcall
and
mov
adc
test
pop
jmp
jae
mov
pop
aad
sarl
push
dec
ss
dec
cmc
and
clc
mov
pop
sbb
xchg
pop
mov
fidivrl
lods
inc
lahf
jp
xchg
inc
subb
dec
rol
mov
and
or
mov
mov
push
arpl
ret
in
xchg
cmc
jg
sub
test
dec
xchg
popa
leave
stos
jmp
inc
aam
xchg
mov
stos
shll
xor
lea
out
addl
jmp
popf
mov
cmp
out
lods
and
mov
mov
js
nop
push
nop
jle
inc
or
xlat
mov
or
iret
jmp
je
or
rorb
stc
int
arpl
inc
sub
sub
xchg
adcl
iret
cmp
ret
inc
push
test
mov
insl
je
lcall
mov
push
mov
jae
jle
or
test
dec
xchg
idiv
nop
add
in
mov
fs
jne
add
cmpsb
push
scas
sti
ljmp
out
jmp
add
adc
cmpsl
lcall
or
sbb
daa
xchg
inc
sub
xchg
mov
neg
lret
xchg
dec
lret
adc
dec
test
push
movsb
adc
jo
sub
mov
pop
sub
test
imul
aaa
in
sub
loopne
fisttpll
clc
int
test
mov
dec
sub
pop
xchg
jns
pop
mov
inc
mov
into
inc
xor
inc
adc
sbb
pop
sub
and
fst
dec
cmp
popf
lds
loop
inc
push
loope
push
fld
lock
insb
dec
out
shrl
dec
jmp
push
mov
rolb
fwait
adc
dec
scas
int3
jnp
out
ljmp
lahf
and
out
jp
push
add
push
sbb
xorl
push
pushl
adc
mov
push
stc
pop
xchg
and
nop
lcall
aam
pop
mov
pop
je
adc
shrb
or
les
clc
testb
mov
and
outsb
addr16
fs
cmpsl
sbb
pop
icebp
xor
xor
inc
xchg
push
ljmp
mov
or
mov
and
pop
pop
xor
shl
xchg
xlat
add
inc
pop
pop
popf
mov
call
inc
xchg
pusha
out
cmpl
inc
inc
xor
sub
cmp
lods
push
dec
jp
das
sbb
dec
dec
jns
inc
sbb
sub
mov
loop
test
push
sbb
dec
cmp
cmp
pop
xchg
stc
push
xchg
push
push
mov
xchg
mov
iret
cmpsl
dec
iret
js
mov
js
out
mov
aas
imul
in
in
loop
lock
or
mov
in
cwtl
dec
das
fnsave
mov
movsb
push
push
mov
loopne
pushf
fsubrl
bound
mov
out
mov
xchg
sti
sub
into
lea
push
inc
outsb
xchg
mov
and
dec
lret
add
out
ret
icebp
xor
or
mov
sub
out
sbb
aad
sarb
fldl
jmp
stc
lret
out
aam
xor
push
aad
add
mov
pop
aas
jg
sub
dec
movsl
jno
lods
insl
pop
les
rol
inc
and
in
addr16
pop
xchg
mov
push
std
pop
mov
dec
stos
fstpl
xchg
pop
bound
lret
sarl
jle
cmp
jecxz
rcr
daa
fwait
inc
mov
mov
jg
add
sti
cltd
loop
nop
insl
xorb
shld
or
pop
data16
mov
sahf
in
adc
jle
gs
mov
fmuls
movsl
cmpsl
fwait
mov
xchg
pop
inc
fcmovnbe
jl
dec
ja
out
cmp
jbe
out
aam
lea
iret
scas
andb
sub
scas
pop
aam
imul
loopne
sub
stos
inc
repnz
jne
insb
imul
inc
push
outsb
jecxz
lock
test
sbb
pop
pop
pop
cs
sbbb
jle
xchg
push
int
sbb
xchg
push
inc
mov
loopne
test
jne
mov
aaa
fmuls
and
push
ficompl
in
leave
or
lods
mov
cmp
inc
dec
pmaxub
out
jbe
sbb
lahf
cmc
mov
dec
out
mov
shrl
mov
mov
and
roll
sbb
sbb
loop
rcll
push
ret
repnz
xchg
dec
mov
or
cmp
jnp
jmp
cmp
push
cli
lret
lret
repz
icebp
sahf
mov
notl
ret
push
int
addr16
jmp
adc
sti
mov
sbb
mov
shlb
aas
out
xor
push
mov
adcl
aas
xor
mov
mov
nop
out
pop
pop
aad
pushf
ret
test
in
loopne
mov
lea
xchg
cmp
dec
call
imul
or
adc
or
rcll
add
jae
jmp
icebp
or
dec
inc
insl
ret
popa
sbb
insl
dec
and
dec
repz
xor
pushf
in
jge
mov
dec
sub
leave
inc
loopne
in
push
cmpsl
sub
iret
sbb
pop
fs
mov
aam
sbb
mov
inc
inc
xor
fwait
jno
cmp
xchg
dec
loop
mov
push
or
adc
push
nop
fs
inc
adc
enter
out
sub
lahf
cltd
xor
xor
ljmp
test
cmp
jle
sbb
jno
orl
out
adc
cwtl
fsts
mov
sbb
pop
aad
cmp
arpl
xor
jbe
lds
sub
xchg
fildll
sbb
mov
movsl
stc
pop
add
dec
xor
pop
push
sbb
fnstenv
dec
repnz
js
pop
stos
call
mov
ds
stos
vandps
insb
push
inc
xchg
jns
enter
mov
popf
add
push
mov
cmp
sub
jnp
and
cmp
stos
jmp
inc
inc
mov
adc
mov
dec
jmp
cmp
inc
mov
mov
push
fwait
jp
and
repnz
int3
add
sub
push
movsb
adc
adc
jl
les
xor
fisubs
pusha
xchg
mov
lods
aam
and
por
fistl
xchg
arpl
sbb
call
sarl
mov
dec
es
rcll
pop
test
xor
in
add
xchg
add
out
dec
or
and
sbb
nop
xchg
loopne
lds
ret
jecxz
repz
jle
fisubs
jmp
mov
daa
pop
mov
daa
and
mov
rol
xchg
mov
stos
jle
mov
rorl
sbb
stos
cmp
jl
mov
repz
adc
stc
es
pop
cmp
or
out
jne
dec
adc
push
pop
mov
jp
sub
stos
sahf
mov
scas
aas
lcall
dec
sub
pop
aam
fcomps
test
ret
jp
inc
mov
and
push
jge
test
pushl
std
inc
mov
dec
or
test
je
nop
movsb
pop
or
addl
out
or
mov
gs
mov
or
arpl
fadds
push
and
mov
and
dec
dec
out
push
lret
andl
loope
jno
adc
cmp
cmpsl
movsb
dec
shr
push
es
ja
js
ret
mov
pop
push
jno
fwait
nop
adcl
call
test
movsb
lea
aas
xchg
roll
insl
dec
mov
push
cmpsl
add
dec
xchg
repz
jb
daa
xor
mov
gs
cmp
xlat
hlt
push
popa
inc
jge
mov
stos
mov
lcall
fsubs
pop
pop
add
int
jmp
push
and
dec
sub
filds
lods
lahf
psubd
pop
mov
nop
sbb
xchg
push
cltd
imul
icebp
adc
jmp
pop
imul
xor
out
xchg
or
mov
or
dec
mov
popf
push
pop
sbb
enter
std
addr16
fcompl
xor
je
cltd
jne
std
push
fimull
mov
jl
arpl
add
push
add
inc
inc
leave
es
imul
int3
or
pop
push
popf
sub
outsb
mov
cmc
int3
mul
cld
idivl
mov
das
adc
cwtl
notl
call
add
mov
roll
test
push
adc
repz
sbb
push
popa
pop
mov
mov
mov
fbstp
std
out
or
aam
fdivrs
lock
mov
mov
aam
pop
std
jp
xchg
std
jge
rorl
mov
int
dec
fnstenv
xchg
addb
gs
aam
mov
jne
jnp
cmp
add
test
cmp
jne
sub
fbld
push
jne
mov
pop
rcrb
lret
rolb
call
jb
push
pop
cwtl
dec
sahf
jno
and
xchg
xor
add
push
xor
sub
adc
and
out
enter
pop
jg
outsb
xchg
fs
push
test
jb
add
outsb
ret
das
jp
ja
mov
mov
jl
xchg
cmp
test
loope
and
insl
push
sub
dec
test
xchg
jnp
dec
and
rolb
sarl
dec
mov
repnz
outsl
mov
and
dec
and
push
mov
popf
or
add
data16
leave
mull
xor
lock
pushf
adc
and
mov
scas
inc
and
mov
lods
xchg
lret
into
repnz
dec
dec
lret
jmp
mov
nop
or
add
pop
mov
mov
mov
ja
xor
push
orl
popa
and
sarb
imul
xchg
mov
xor
aaa
mov
mov
mov
jo
xor
mov
dec
cmc
or
data16
or
and
push
dec
jmp
stos
jbe
daa
aaa
jns
sub
mov
mov
popf
ret
cmp
mov
cld
or
sub
cld
dec
orps
mov
jne
incl
insl
ss
loopne
repnz
lea
sbb
xor
sbb
jno
loop
push
shll
lret
icebp
sbb
loop
mov
cmp
push
xor
dec
ffree
jmp
movsb
xor
out
rcrl
or
cmp
inc
clc
dec
popa
xor
mov
adc
cwtl
mov
test
or
stc
xor
icebp
shrb
jl
mov
mov
adc
shlb
pop
es
stos
xor
and
push
ljmp
sahf
sbb
cmp
mov
inc
and
das
lock
int
dec
rcr
pop
ja
xchg
pop
fsub
jae
es
les
js
cmpsb
mov
cli
push
jp
and
mov
pop
outsb
int
xlat
push
jbe
cmpsl
imull
inc
mov
clc
cwtl
mov
loop
imul
nop
xchg
mov
insb
cmc
ret
inc
div
mov
out
inc
xchg
mov
mov
xor
mov
push
shll
dec
cmp
xchg
out
shl
lahf
sub
out
sbb
leave
ds
jl
fisubrl
ljmp
push
mov
mov
aaa
xchg
sbb
dec
stos
mov
inc
mov
add
aas
cmp
fidivrs
mov
stos
mov
cmp
lcall
leave
adc
shr
adc
ret
push
movsb
pop
and
popa
xlat
sub
jb
out
icebp
mov
fwait
sbb
fwait
mov
jmp
scas
sti
jle
je
imul
mov
lahf
mov
fs
loopne
mov
popf
xorl
les
sahf
sub
orb
ljmp
test
sub
imul
sbb
jbe
arpl
cmp
cmc
pop
insb
dec
jne
or
aaa
jb
cld
mov
ljmp
push
cwtl
mov
call
add
and
and
xchg
popa
cmp
jo
je
pop
test
popf
test
dec
test
imul
or
rolb
and
pop
lods
jne
mov
dec
pop
rorl
push
add
xor
sahf
mov
sub
and
imul
into
gs
or
jae
inc
lods
mov
jno
mov
or
push
lods
negl
mull
push
jecxz
in
aam
sbb
xchg
xor
into
stos
adc
xor
test
inc
rorb
cmpsb
xchg
mov
in
sti
hlt
pop
es
neg
fnstcw
or
popa
iret
dec
jl
pop
ljmp
jl
cwtl
addl
scas
ljmp
xchg
stos
cld
xor
mov
pop
mov
adc
data16
imul
dec
cmpsb
lods
inc
mov
pop
push
loopne
xchg
mov
fwait
mov
push
les
mov
jl
inc
lret
iret
cwtl
inc
mov
add
jp
mov
test
or
out
push
pop
dec
or
dec
mov
or
cwtl
inc
inc
into
mov
repnz
iret
mov
jb
jmp
jnp
int
jo
xor
outsb
sbb
hlt
push
mov
gs
sbb
mov
loope
inc
mov
dec
xor
push
addr16
jl
and
cwtl
out
mov
iret
loope
xchg
add
fstpl
add
pop
and
or
xchg
or
aas
inc
fdivrp
cld
aam
lods
mov
sbb
test
vpabsb
test
sub
test
cmp
mov
test
jl
shlb
fbld
mov
std
push
sbb
and
mov
or
fwait
leave
push
ficomps
inc
inc
dec
push
jmp
or
or
in
cmpsl
and
hlt
enter
xorb
rorb
out
lods
cmp
jp
shll
lret
push
jp
iret
dec
xchg
add
mov
enter
ljmp
int3
inc
dec
mov
push
lods
mov
in
in
pop
popa
xchg
add
xor
mov
mov
ja
pop
fsubrl
fs
jnp
push
je
inc
add
rcl
jnp
pop
fistpll
or
inc
insl
xor
jg
pop
inc
dec
push
or
push
sub
pop
pop
push
int3
test
test
pop
out
mov
ja
jns
es
out
test
or
mov
hlt
aam
pop
sbb
fs
ret
mov
mov
mov
das
out
test
test
in
mov
frstor
loopne
mov
popa
mov
arpl
adc
cmp
lea
lods
push
push
mov
mov
lret
sbb
adc
ljmp
sarl
imul
pop
jae
scas
dec
cmp
push
out
sub
enter
jp
inc
lock
nop
and
or
pop
inc
jns
pop
dec
push
xchg
stc
enter
pop
sbb
nop
ja
mov
xchg
js
mov
xor
jb
xchg
into
leave
shrb
dec
inc
push
test
jp
jp
xor
mov
mov
cmp
rolb
shrb
sbb
int
and
jo
mov
cmp
sbb
lret
flds
cmp
lahf
add
push
imul
loope
mov
add
or
push
es
dec
imul
mov
fisubs
gs
cmpsb
pusha
cmc
leave
mov
adc
bound
pop
mov
push
rclb
outsb
mov
inc
adc
bound
cmpsb
push
pushl
cmp
xor
xor
and
loopne
into
xor
arpl
shll
xlat
cmp
fidivrs
mov
mov
notl
xchg
mov
push
mov
lds
mov
test
dec
stc
movsb
pop
add
dec
push
movsb
xchg
stc
sub
adc
sub
call
xlat
aam
push
cltd
dec
call
xchg
fs
xor
jb
sarb
push
sub
cmpsl
cli
into
movsl
subl
pop
mov
out
pop
lcall
push
icebp
les
and
sbb
testb
sti
xchg
decl
and
repnz
jle
pop
sbb
jl
jp
das
adc
pusha
mov
xchg
out
jns
pop
popf
stos
out
cld
xlat
aad
jno
in
mov
insl
clc
jp
push
add
rcll
adc
jle
ljmp
rorb
lcall
or
xor
es
mov
pop
je
adc
mov
das
jp
jmp
ds
in
or
jg,pt
sub
es
mov
adc
out
daa
sbb
push
fidivs
sbb
divl
ret
lds
jl
sbb
xchg
imul
fs
xchg
inc
adc
pop
dec
scas
mov
outsb
dec
stos
add
es
scas
mov
and
jae
fwait
dec
stos
sti
sahf
loopne
mov
jecxz
jno
les
dec
add
xor
push
incl
pop
inc
inc
inc
xor
cli
pusha
imul
mov
clc
aad
jno
mov
insl
dec
push
out
repz
xchg
mov
push
int3
xor
dec
sarb
testb
ret
xchg
aaa
sub
inc
sbb
mov
mov
push
and
sbb
outsb
cmp
mov
xchg
lods
ret
int3
xor
adc
add
sub
mov
xchg
sub
mov
push
push
sub
insl
cmp
cmp
shlb
in
movsb
add
and
outsb
negb
push
pop
es
xchg
mov
adc
stos
sbb
lock
pop
add
mov
jmp
loope
xchg
sahf
hlt
loopne
xor
and
pop
inc
mov
inc
push
sti
ret
js
cwtl
fptan
cmpb
sbb
test
pusha
push
das
dec
daa
mov
pop
cmc
sbb
repnz
lret
addr16
dec
mov
mov
rcll
mov
iret
inc
mov
and
repnz
repz
incb
lock
lahf
dec
les
xor
jns
mov
sti
hlt
or
popf
andb
cwtl
out
mov
js
jg
lods
jecxz
sbb
add
mov
jl
imul
xchg
or
in
add
mov
outsl
repnz
sbb
xchg
mov
add
test
xchg
std
popa
jle
xchg
stos
dec
loope
cltd
enter
push
mov
pop
icebp
out
sub
test
jp
inc
jo
out
popf
pushf
imul
pop
mov
insl
and
mull
dec
pop
loopne
in
cmp
jo
sub
mov
cmpsl
cmpsb
lods
cs
pop
push
sti
jnp
push
push
imull
mov
iret
xor
or
xlat
fbstp
add
dec
stos
cmp
les
sub
nop
pop
int3
push
sahf
or
gs
sbb
mov
mov
cwtl
mov
xchg
xor
and
inc
dec
subb
mov
ljmp
jecxz
mov
divl
xlat
xor
push
rcrl
ds
mov
dec
xor
rcl
xor
outsl
ficomps
xor
cmp
pop
sti
mov
mov
sar
inc
out
aad
ret
clc
mov
or
sbb
rol
cmpsb
jl
popf
lods
bswap
cmp
push
fldt
test
and
mov
mov
arpl
movsl
ret
je
lcall
push
xchg
adc
rcrl
in
es
xor
loopne
sub
mov
cmp
dec
cld
ss
mov
and
dec
mov
les
jne
sub
clc
inc
cmp
pushf
outsb
mov
xchg
add
addl
mov
imul
lea
cmpsb
pop
xlat
sub
push
cmc
scas
dec
cmpl
cli
lods
clc
outsl
dec
fnstenv
addr16
or
adc
test
sub
clc
add
mov
adc
xchg
out
xchg
jmp
or
insb
push
cmpsl
mov
add
flds
xorl
inc
iret
dec
sub
mov
and
outsl
fsubrl
jge
data16
push
and
in
mov
mov
sti
daa
loopne
sub
xchg
int
cwtl
push
test
cmpsl
push
cwtl
mov
outsl
testb
leave
jmp
xchg
or
push
adc
mov
data16
roll
mov
fwait
sub
enter
jne
in
int3
mov
sub
xchg
ljmp
sahf
push
lock
push
inc
rcll
int
fbld
daa
fcomps
rolb
push
fstpt
test
adc
ljmp
icebp
stos
fs
in
cmp
dec
pop
test
adcb
mov
pop
mov
sub
cmp
rolb
jp
out
dec
dec
arpl
pop
cmc
cmp
adc
fs
jno
fsubrl
nop
aas
aaa
movsl
aam
cwtl
sarl
fnstsw
icebp
fistl
stos
es
add
adc
aad
mov
outsl
jmp
div
fcomp
xchg
aas
outsb
pusha
shlb
jnp
repz
iret
mov
cld
icebp
inc
pop
adc
or
cltd
das
rolb
mov
icebp
decb
push
adc
out
mov
cmpsb
xchg
or
inc
test
aam
jl
mov
sbb
sti
jle
bound
adcl
add
es
jle
mov
fsts
cmp
movsl
fldt
inc
andb
andb
mov
lods
sub
pop
decl
push
mov
pop
popa
adc
rcll
push
aad
push
mov
push
sub
imul
xor
inc
jb
leave
cmp
add
roll
adc
in
sbb
repz
sub
add
pop
inc
mov
mov
in
fisttps
adc
adc
lock
mov
adc
insl
incb
adc
cmpsb
lret
nop
inc
or
adc
push
jnp
ffree
mov
pop
mov
push
iret
js
pushf
mov
push
pop
into
icebp
jp
push
cmc
in
das
sub
add
les
lret
mov
dec
mov
mov
mov
dec
xchg
xor
jns
out
xor
hlt
adcl
xor
and
jns
adcb
cltd
inc
dec
sub
sbb
dec
cmp
push
test
nop
ret
pop
pop
or
mov
sub
in
popa
or
mov
enter
mov
scas
push
dec
out
fisttps
cs
outsl
sbbb
mov
test
push
pop
std
sub
repnz
icebp
in
data16
mov
pop
js
adc
mov
mov
or
dec
mov
test
rorb
mov
push
fidivrs
push
repz
cmp
fdivrs
cmc
repnz
mov
test
cmpsl
imul
push
mov
scas
inc
in
andl
shll
popf
sbb
and
cwtl
push
in
addb
out
xor
lret
mov
or
shrb
or
stos
or
negb
out
jp
hlt
adc
pop
pop
push
xchg
add
xchg
rorb
ficomps
bt
decb
pop
out
dec
ljmp
inc
mov
test
jae
cli
leave
xchg
iret
sbb
inc
sub
sub
xor
fidivs
sbb
sti
adc
xlat
gs
int3
or
mov
sbb
mov
mov
aas
into
imul
hlt
sub
data16
insl
movsl
xchg
sub
and
into
sbb
dec
fs
mov
das
scas
test
pop
repz
fnstcw
repnz
mov
mov
add
xorl
pop
andl
adc
jbe
and
mov
lods
jne
xchg
mov
movsb
lds
lods
adc
mov
xchg
out
mov
push
and
mov
in
fsubp
xchg
lahf
lcall
mov
daa
adc
sbb
sbb
movsb
dec
mov
stc
daa
cmc
es
and
imul
addl
mov
imul
sbb
xchg
add
or
out
cmpl
or
imul
aaa
outsl
outsb
packuswb
mov
mov
mov
shlb
inc
stc
pop
sub
or
lds
jge
repz
xchg
mov
outsl
mov
mov
fldl
adc
add
sbb
mov
push
or
rcrl
and
daa
lock
push
pop
out
les
pop
clc
cmp
jl
mov
pop
cmp
pop
insb
mov
pop
dec
shrl
mov
inc
xchg
rorb
jecxz
jns
imul
pop
mov
dec
ljmp
in
pop
into
mov
fdivp
fsubrs
inc
inc
sarl
push
inc
out
repz
lea
arpl
mov
sbb
outsb
pop
sub
mov
into
ret
xchg
adc
mov
mov
sti
sbb
daa
adc
mov
dec
add
or
push
jo
xchg
cltd
adc
jp
into
fistps
xchg
enter
ret
call
pop
out
ljmp
fnstenv
push
ljmp
cmpsb
adc
mov
jae
imul
sbb
xor
push
dec
pop
insl
popf
ret
push
push
imul
loope
int
xor
arpl
in
mov
gs
sarb
xchg
or
mov
mov
test
call
jne
push
sahf
enter
fcmovb
or
sar
xchg
sbb
mov
scas
and
cmp
jecxz
mov
ret
fimuls
ds
adc
mov
sti
arpl
adc
inc
add
aam
testb
or
fstpl
cli
mov
stos
mov
andb
bound
adc
lcall
outsb
add
negl
andl
and
xor
xchg
shrb
mov
sub
in
or
outsb
cmp
stos
fnstenv
rcrl
insb
sti
sahf
inc
pop
pop
or
fcoms
dec
adc
push
inc
sbb
sti
cld
ret
xor
sbb
push
mov
gs
ret
pop
pop
mov
ret
pop
cmp
jne
push
dec
mov
stc
jle
push
jbe
mov
add
es
mov
dec
add
outsl
adc
mov
adc
in
inc
sub
xor
dec
xchg
or
adc
int
fwait
lahf
add
insl
in
test
cmp
shlb
fisttpl
hlt
dec
std
push
xlat
aad
cli
bound
adc
notl
cli
mov
add
xlat
sub
add
adc
jmp
cli
cmp
pushf
int3
sub
or
push
out
fadd
xorl
int3
add
int3
add
pop
pop
js
into
add
cmc
push
mov
xchg
lret
sbb
jne
adc
jl
in
movsb
lds
xchg
in
push
pop
mov
aas
mov
movsb
push
sbb
shrl
cmc
int
mov
add
jge
xchg
inc
int3
cwtl
push
mov
outsl
adc
jg
xor
loope
test
mov
ds
cwtl
mov
sarl
push
pop
stc
inc
fstp
filds
daa
loope
enter
mov
sbb
inc
sbb
das
pop
jb
push
arpl
mov
xor
enter
js
sub
inc
pusha
repz
jge
mov
imul
xor
lret
leave
cwtl
xor
adc
cwtl
adc
jnp
mov
mov
inc
pop
test
mov
jne
lahf
inc
push
xor
add
xchg
in
adc
push
jmp
push
push
jge
add
jb
adc
or
ret
into
and
push
mov
pop
xchg
lahf
cwtl
jle
jnp
mov
add
xchg
stos
enter
push
in
clc
test
mov
stos
pop
fs
jge
lahf
inc
in
and
xchg
out
xor
add
movsl
scas
and
mov
fildl
adc
les
out
std
xchg
push
mov
lods
insb
inc
int
loop
bound
sbb
add
ret
inc
cmp
and
ret
jae
pushf
call
dec
cli
sbbl
hlt
mov
mov
xor
in
outsl
lret
dec
lahf
movsb
in
inc
lds
mov
sti
jne
jle
popa
push
fstp
fucomp
add
xor
insl
add
dec
js
sbb
push
pop
sub
jae
pop
rol
xchg
mov
inc
or
in
rorb
dec
shrb
adc
mov
cmp
xchg
js
into
imul
cs
ffreep
lock
sbb
leave
xor
leave
in
mov
adc
add
pop
mov
fistpl
loop
adc
mov
lods
push
pop
mov
fwait
pusha
adc
xor
aam
xchg
push
lret
sarl
gs
outsl
rcr
nop
in
test
mov
loop
push
add
lret
pop
xchg
out
push
int
jae
mov
loop
into
cmp
subl
dec
push
in
xchg
pushf
leave
or
adc
shlb
jae
adcl
cltd
pushf
inc
pop
jmp
mov
dec
out
lret
mov
sub
loop
inc
arpl
fdiv
daa
push
rcrl
or
popf
ljmp
inc
inc
mov
add
les
ficoms
xorl
iret
adc
ss
jno
cli
ljmp
out
jle
sbbb
xor
stc
iret
fldl
daa
sub
sub
repnz
out
test
stc
cli
push
fistpl
adcl
inc
loopne
sbb
in
mov
ja
xor
or
test
dec
xchg
les
dec
imul
aas
inc
cmp
test
sbb
bound
pop
push
outsb
test
daa
xorb
enter
popa
cmp
sbb
push
imull
mov
mov
adc
rcl
lcall
inc
icebp
je
jl
cmp
jbe
mov
jb
lcall
movsb
es
or
cmp
add
pop
sbb
add
in
add
insl
jl
stc
lret
push
stos
ret
push
xor
xchg
mov
inc
mov
pop
roll
rcr
addr16
int3
lcall
sub
pop
adc
fildll
push
inc
mov
xchg
idivl
ret
adc
lock
push
lcall
leave
pop
das
push
pop
imul
daa
lock
or
sub
adc
pop
push
mov
aam
mov
mov
negb
xor
cmp
bswap
jne
adc
adc
adc
push
xchg
cmpsb
cs
sbb
addb
pop
push
xchg
xor
or
sub
push
sbb
dec
push
daa
mov
pop
mov
sti
mov
in
nop
repnz
xchg
cli
inc
xlat
enter
into
icebp
movsb
lods
enter
xchg
lock
lahf
mov
daa
add
mov
lret
xchg
enter
notl
mov
jnp
push
jbe
imul
ret
das
lahf
add
inc
mov
outsl
ja
jae
adc
fcomps
fwait
push
mov
cs
mov
xor
fwait
stos
sbb
rcr
scas
xor
cld
outsb
or
rorb
xor
pop
dec
and
mov
int3
sub
sbb
and
sbb
sarb
mov
jl
xchg
aas
iret
in
jo
xor
xchg
int3
dec
ficomps
fs
icebp
push
cwtl
cmpsl
jbe
repnz
xor
mov
movsl
fisttpl
daa
inc
outsl
pop
sbb
jne
popa
aas
fmuls
inc
repz
icebp
pop
mov
sub
imul
cltd
lcall
std
inc
push
out
or
inc
cmpsl
jmp
jb
ja
cli
outsl
or
mov
sbb
dec
in
or
inc
repz
pop
dec
pop
sub
jae
add
mov
inc
mov
jo
sbb
mov
xchg
push
fwait
dec
sahf
cmpsl
shrb
sbb
daa
adc
leave
cltd
iret
or
or
popf
ror
pop
or
cwtl
inc
push
push
aaa
jmp
xor
jmp
xor
cli
loope
fdivs
aad
dec
push
pop
and
cmp
xchg
movsl
pushf
pop
aas
jmp
push
fs
jmp
loopne
loopne
and
das
icebp
mov
cld
push
mov
in
mov
push
ret
into
pop
outsb
cmp
jge
mov
xor
fsubl
std
das
mov
pop
mov
pop
mov
mov
mov
mul
jnp
fsubr
add
mov
arpl
gs
insb
jecxz
pushf
inc
add
es
imul
cs
dec
sub
add
add
loop
mov
aaa
cs
add
pop
repz
shlb
adc
in
lods
inc
sub
test
adc
add
fs
and
int3
add
mov
divb
ficomps
xchg
sarl
test
push
sub
loopne
or
and
mov
iret
int
repnz
scas
or
clc
mov
js
imul
mov
lret
lret
inc
cmp
mov
cmp
mov
popf
lods
mov
ss
xchg
cltd
jno
cld
mov
mov
inc
cltd
xchg
adc
lcall
xor
pusha
inc
dec
add
push
addr16
data16
shll
loope
and
push
mov
movsl
adc
lods
adcb
push
mov
pushl
and
je
jb
sbb
mov
clc
jl
or
dec
insb
pop
jge
clc
shll
insb
in
mov
add
xchg
dec
pop
and
jp
mov
ficompl
flds
adc
add
pop
test
sub
call
das
fildll
push
mov
lcall
cwtl
sbb
test
mov
adc
jp
sub
xchg
mov
xor
push
mov
add
cltd
or
pop
mov
pop
mov
fisubs
xor
cmpsb
jmp
fimull
jmp
push
ljmp
ds
xchg
adc
daa
loope
lds
pop
inc
xor
aam
popf
mov
ss
mov
stos
inc
pushl
xchg
push
pop
cmpsb
cwtl
cmp
cmp
fcomip
pop
mov
pop
movsb
adc
cmp
xchg
or
ret
out
xchg
pop
adc
add
add
gs
stos
sbb
cmpsb
sub
div
push
or
xchg
ficoms
ljmp
sub
ss
sbb
push
iret
mov
sbb
loop
insl
fadd
movsb
pushf
xchg
inc
and
xchg
xchg
add
aam
popf
out
jne
pop
dec
stc
mov
outsb
test
addb
outsl
adc
loopne
in
push
jno
mov
pop
lods
rorb
jg
fldz
mov
add
and
inc
repnz
scas
lahf
mov
lahf
pop
cmp
lds
and
int
sbb
sahf
xchg
je
ror
mov
sbb
pop
pop
jne
popf
nop
repz
sti
add
int3
add
jnp
add
in
cmp
adc
sub
mov
xchg
pop
sub
movsb
rcll
nop
xchg
jae
xor
xchg
jbe
cmp
mov
mov
jns
xchg
shlb
jnp
or
or
mov
scas
rcll
aas
inc
das
jbe
in
cmc
insl
inc
cmpsb
dec
das
add
lods
ret
pop
xorb
dec
add
popa
inc
jne
mov
mov
fsubs
test
or
es
icebp
test
jg
ret
jp
inc
or
pop
insl
ficoms
lea
push
icebp
testl
mov
daa
sbb
pop
adc
xchg
push
es
xchg
mov
push
pop
xor
mov
push
arpl
mov
and
jnp
cltd
mov
mov
outsl
lods
fistps
ret
or
pop
push
push
iret
mov
or
push
popa
scas
aaa
lea
and
add
clc
into
push
stc
shrl
lcall
inc
cli
rcl
mov
jae
push
pop
js
inc
sbb
fdivs
cmp
test
jmp
mov
outsl
push
dec
int3
push
popa
xlat
ret
or
mov
sbb
leave
jl
mov
mov
out
in
shrb
adc
jae
ret
imul
adc
cmp
push
sbb
jecxz
je
sub
mov
ds
cld
dec
pop
popf
mov
xchg
pop
sti
inc
addr16
add
ror
adc
leave
jecxz
cmp
dec
scas
test
jmp
stos
mov
ja
ret
add
push
adc
add
rolb
cli
in
leave
xchg
add
arpl
andb
cmp
fnstsw
hlt
loope
xor
jne
xchg
jmp
xor
lods
dec
btr
mov
int3
inc
jae
sbb
daa
mov
mov
dec
jle
test
lods
push
sbb
fmull
ficoms
pop
sub
sub
add
adc
jmp
shrb
push
inc
add
daa
mov
lds
lahf
inc
add
and
inc
push
mov
and
mov
mov
jge
jbe
lds
cmp
push
push
testb
out
rep
jno
xchg
sbb
loopne
adc
in
lds
adc
insb
fidivl
and
and
or
repz
das
test
int
push
adc
cmp
fiadds
push
sub
mov
in
xchg
loop
loop
out
pop
arpl
jle
pop
popf
sub
clc
lods
pop
jbe
adc
fisubl
ret
sahf
mov
je
ret
push
gs
fists
jno
or
xlat
xor
adc
mov
or
loope
dec
and
mov
lea
push
dec
mov
mov
mov
flds
sub
int
sub
cs
jg
sbb
add
mov
adc
dec
sti
mov
mov
hlt
jle
xor
adc
aad
mov
jecxz
jae
out
sbb
pop
minps
pusha
mov
popa
out
and
sub
pop
pop
ret
pop
inc
les
dec
adc
cmpsl
dec
lcall
jbe
addl
js
outsl
sbb
push
push
lods
movsl
and
insl
pop
fnsave
mov
repnz
je
test
dec
xchg
inc
cwtl
push
outsl
sub
mov
int3
pop
fidivrs
lds
and
push
push
jmp
push
mov
mov
out
pop
cltd
jl
cwtl
adc
in
inc
fwait
jle
cmp
lock
and
dec
int3
adc
nop
push
insl
xchg
and
mov
or
mov
leave
inc
add
xchg
add
test
jg
roll
mov
xor
mov
ja
xor
idivl
sub
rcll
out
inc
cmp
or
pop
dec
ret
mov
xchg
insl
ror
in
inc
sub
jne
outsb
ret
push
mov
insb
bound
dec
sub
ja
push
neg
adc
ror
out
cmp
xlat
loopne
mov
sbb
or
lcall
out
insb
sub
dec
add
mov
ja
jno
xlat
lods
inc
jnp
test
int
cld
ja
daa
push
dec
dec
fs
push
pop
int3
and
inc
out
popf
leave
mov
stc
fstps
rorb
in
mov
xchg
loopne
jmp
pusha
idiv
pop
dec
mov
xor
lods
mov
movsl
std
aas
mov
add
mov
ja
mov
imul
addr16
jmp
loope
dec
inc
stc
test
cltd
fmuls
adc
xchg
cmpsl
xor
mov
xchg
mov
cld
mov
test
ljmp
sbbb
or
fisttps
jp
jecxz
xchg
cltd
sbb
fistps
cmp
xchg
push
add
sahf
sbb
loop
sbb
or
push
jnp
push
inc
lods
mov
add
adc
hlt
and
or
dec
and
pop
sub
xor
push
divb
inc
fwait
mov
aad
bound
fmulp
push
ja
pop
sub
xor
enter
pop
sub
gs
sbb
jb
out
cmp
cld
popa
push
sub
jle
jnp
jg
xchg
clc
pushf
lcall
scas
fucomp
sbb
fcmovu
aaa
mov
outsb
and
cld
mov
sti
sub
jle
in
mov
rcrl
cmpsb
ja
sub
mov
inc
mov
in
imul
sahf
stos
shrb
popa
jge
dec
or
xor
xor
das
or
mov
les
sbb
dec
and
cmpsb
xorb
inc
jae
push
mov
dec
jne
outsb
in
jno
mov
xor
jb
dec
inc
sahf
or
mov
xchg
fidivrs
js
and
mov
adc
pop
pusha
out
leave
les
and
pop
iret
ret
mov
outsl
sbb
sbb
pushf
xchg
push
sub
adc
inc
in
mov
push
inc
mov
jb
inc
movsw
cmc
push
sub
popa
cmc
test
pop
dec
gs
jmp
or
arpl
test
inc
dec
repz
test
scas
mov
out
lret
inc
fisttpl
loopne
add
test
iret
push
adc
shrb
sub
ds
push
cltd
cs
xlat
xchg
or
jmp
dec
je
push
mov
sti
xor
jmp
and
mov
pop
dec
notb
rcl
icebp
and
adc
fstps
lcall
aaa
add
lds
cmp
into
pop
push
push
insl
cmp
xlat
push
dec
and
lods
jle
or
popa
ljmp
mov
leave
scas
in
nop
jno
cmp
in
shl
mov
mov
xchg
jae
out
scas
dec
test
das
scas
pop
lods
aas
adc
mov
pop
add
xor
scas
jmp
sbb
xchg
out
mov
clc
cmp
popf
mov
pop
stos
cld
mov
push
jmp
push
neg
aam
xchg
mov
insl
int
mov
test
cltd
jl
test
mov
xor
inc
movl
xchg
jb
icebp
scas
xchg
or
popl
int3
dec
inc
dec
sub
xor
add
stos
testb
filds
mov
jb
enter
cmpsl
and
xor
mov
hlt
roll
jmp
call
lds
decb
cmp
gs
ret
cmp
dec
out
ret
mov
pusha
test
in
rcrb
add
push
stos
cmpsb
daa
xor
lods
icebp
inc
ds
insl
push
xchg
pop
pushf
inc
jno
mov
dec
movhlps
jb
cli
inc
jnp
loope
leave
aas
inc
sbb
repz
mov
out
mov
int3
js
add
mull
adc
inc
sbb
mov
push
sbb
jbe
aad
jg
cmp
out
push
push
and
aad
xchg
clc
jg
sahf
inc
xor
push
or
pop
xchg
ret
jne
enter
sbb
call
add
or
sub
xor
pusha
and
pop
in
xorl
jle
lods
into
popa
mov
push
mov
cmp
stos
jecxz
mov
movsl
lods
and
insb
loope
sub
dec
bound
mov
jl
xchg
test
inc
adc
dec
dec
cli
lock
sub
clc
sbb
inc
sub
icebp
lret
add
mov
jge,pt
es
sub
jnp
cld
mov
jns
push
adc
push
xchg
pop
cli
lods
addr16
cmp
jge
sub
pusha
pop
jbe
es
xchg
jmp
pushf
lea
ficompl
xchg
jno
das
lock
inc
or
xor
push
std
cltd
loope
idivb
xlat
ret
ret
lock
push
mov
add
fbld
push
add
mov
inc
imul
rcll
arpl
filds
lds
inc
stos
lock
sub
mov
into
fwait
mov
test
in
jno
addl
test
int
and
scas
cmp
loop
adc
imul
scas
div
fisttpll
xor
popf
out
inc
xchg
fwait
addb
leave
popf
dec
mov
mov
jbe
imul
shll
lret
jle
xor
mov
jle
and
cmc
and
push
fnstsw
out
cmp
repz
push
sub
jle
and
lcall
mov
cmp
fstpl
adc
jge
mov
add
ja
je
mov
add
xor
aad
mov
mov
lahf
xchg
ja
cli
mov
pop
dec
sub
lods
aam
rorb
jp
loope
sbb
pop
idiv
push
and
or
cld
pusha
movb
in
mov
pop
cltd
fnsave
arpl
xchg
inc
inc
and
add
mov
cmp
pop
mov
push
push
add
fbld
incl
jno
jns
enter
jbe
and
fdivrl
adc
jp
les
imul
xchg
jmp
cmp
ds
xchg
ret
ljmp
or
inc
fimull
insl
push
or
inc
stos
mov
lods
jle
sbb
clc
push
dec
pop
loopne
pop
jae
or
or
int
popa
jg
sub
cmpb
imul
fcmovne
das
dec
mov
repz
das
and
cmp
loopne
push
in
lods
or
adc
shr
adc
xchg
cmp
movsb
daa
jnp
cmp
aam
mov
mov
call
push
addr16
popf
and
sbb
std
fiadds
sbb
rcrl
es
out
cli
fldcw
xchg
cmp
shll
ds
pop
jmp
sbb
jecxz
pop
cld
std
scas
lret
nop
sbb
push
add
mov
cmp
roll
repnz
arpl
and
mov
and
fsubrl
js
arpl
push
inc
imul
mov
sbb
imul
ret
enter
xlat
aam
scas
mov
xchg
jmp
dec
sti
mov
das
ret
aad
add
int
xor
push
mov
nop
addr16
fdiv
call
dec
das
jl
inc
mov
jl
inc
dec
enter
jecxz
jns
push
jl
xor
adc
pop
sub
cmp
and
adc
xor
ret
and
pop
add
cmp
repz
mov
pushf
xorl
loope
fadd
adc
dec
mov
call
inc
xorb
scas
mov
jl
loope
into
loop
add
in
lahf
rolb
cmc
pop
or
cmp
lret
xor
loope
jmp
push
jl
inc
mov
pop
jl
jb
iret
jecxz
inc
es
xlat
and
add
data16
nop
call
imul
stos
cmpl
loope
call
mov
xchg
jns
add
mov
std
std
and
rcrl
or
in
and
xchg
leave
mov
lcall
jne
clc
out
fisubl
into
mov
pop
repnz
jno
cmp
push
mov
inc
inc
call
scas
das
arpl
ss
mov
hlt
lods
rorb
xor
xlat
popf
mov
std
push
mov
fidivs
adcb
mov
sub
xor
roll
jo
jbe
adc
out
in
sub
mov
inc
cmp
imul
jbe
sub
add
scas
cmp
fidivl
jmp
add
popl
das
mov
dec
cmp
stos
sbb
loope
adc
cwtl
aaa
test
rolb
lds
shrl
daa
mov
xor
and
imul
fwait
mov
cltd
jmp
pushf
cld
push
in
pop
int3
adc
sti
and
imul
sar
bsr
shl
in
enter
xchg
push
jp
ja
xor
out
jne
in
dec
sbb
fistpl
push
inc
or
js
push
mov
adc
repnz
mov
sub
xchg
sbb
mov
enter
add
jle
repnz
xchg
repnz
daa
ficompl
jae
bound
iret
out
mov
dec
push
bound
push
inc
or
aas
xor
popa
cmp
cmp
fstps
fdivl
xor
jmp
das
popa
push
ss
test
shlb
movsb
fnsave
mov
mov
sbb
push
xor
jle
test
movsb
inc
pop
cmp
inc
shll
cld
movsb
loope
jo
movsb
mov
push
push
push
fwait
pop
mov
mov
lret
scas
push
push
ret
sub
xchg
push
adc
xchg
cld
push
and
pop
pusha
pop
scas
loop
aas
pop
test
cmp
rol
xchg
pusha
pop
call
pop
lcall
mov
dec
sub
out
mov
pop
pushl
mov
popa
add
cs
dec
push
mov
mov
cld
jbe
pushl
sub
push
shl
in
pop
ss
aas
imul
sub
stc
inc
insl
repnz
stc
out
enter
sub
iret
add
adc
push
cmp
push
pop
aad
jbe
inc
loopne
in
fucomp
mov
sbb
or
jbe
sub
jl
imulb
scas
push
sub
fwait
arpl
frstor
push
stos
testl
xlat
pushf
jb
inc
clc
lea
les
inc
mov
gs
orps
mov
adc
call
nop
jmp
add
scas
pop
shll
adc
xchg
js
pusha
pusha
jmp
jl
mov
in
shlb
nop
xabort
test
aam
mov
in
stos
rclb
sub
lret
or
xor
jo
test
mov
cwtl
adc
xor
clc
jne
add
lods
push
cwtl
adc
xchg
hlt
bnd
mov
push
ja
mov
xor
mov
xor
sub
mov
and
jecxz
stos
insb
fiadds
in
cmc
vpabsw
sbb
mov
push
add
cld
push
sub
hlt
dec
mov
xor
lret
sbb
loop
inc
outsl
inc
iret
mov
lcall
movsl
test
jae
add
pop
sbb
mov
xlat
mov
lret
or
sti
pop
insb
dec
nop
fistl
push
outsl
xor
sbb
mov
ret
stos
notl
push
and
or
ljmp
and
cmp
inc
push
ret
xor
loop
aaa
sarl
imul
dec
mov
int
stc
repz
sub
mov
adc
pop
loopne
or
or
arpl
inc
inc
adc
mov
imul
movsl
mov
rorb
outsb
dec
mov
or
insl
adc
cmp
xor
sti
or
shrb
sub
in
inc
xor
insb
add
pop
xor
mov
xchg
out
pop
jae
jae
dec
cmpsb
inc
rolb
pop
imul
das
jo
or
idivl
fwait
aad
push
jmp
pop
pop
call
loop
jno
mov
adc
into
lret
push
xchg
popa
scas
dec
lret
mov
push
xlat
insb
into
setno
dec
mov
ficoml
addl
xchg
push
out
mov
call
inc
lds
mov
dec
pop
sub
push
aaa
adc
dec
insb
sbb
push
or
mov
sbb
sti
pop
adc
aam
pop
mov
stc
ret
xchg
jge
jg
and
syscall
cmp
sub
mov
test
jns
jecxz
imul
imul
cwtl
out
sbb
push
sbb
outsl
mov
rorl
leave
scas
jb
ret
pop
add
xor
add
lcall
and
or
lods
adc
mov
aaa
dec
in
xlat
mov
out
jl
repnz
cmp
fadds
test
loope
mov
pop
jae
sti
clc
mov
loop
fldl
push
or
xlat
nop
dec
xchg
dec
xchg
lock
sub
mov
inc
ljmp
and
fimuls
cmp
jmp
test
ds
jmp
cmp
sub
insl
bound
test
inc
mov
jle
and
pop
test
aaa
inc
push
adc
lock
stc
out
mov
mov
xor
push
inc
shlb
xor
dec
or
lods
cmp
int3
cmp
inc
mov
insb
sbb
sti
popf
xchg
push
imul
incb
dec
cld
dec
dec
idiv
xchg
push
xor
adc
cmpb
lret
add
test
sbb
or
leave
or
insl
outsb
cmpsl
bound
mov
pusha
dec
cmp
movsl
mov
nop
mov
adc
aam
mov
andl
and
adc
testb
push
and
inc
inc
pop
push
mov
nop
cmc
ljmp
add
mov
neg
mov
fcompl
lds
xor
add
xor
dec
lods
push
aam
out
outsl
add
das
pop
jne
faddl
fstpt
push
push
push
nop
xor
sarb
xchg
fstps
or
daa
aad
cld
in
mov
mov
fdivrs
fxch
jmp
ds
je
jae
jno
add
fstpl
int
sbb
mov
faddp
insl
data16
sub
dec
out
sub
mov
push
push
in
and
pop
and
inc
sub
inc
jbe
daa
outsl
clc
mov
fldenv
mov
sbbb
mov
fsubl
sub
mov
pop
push
inc
cli
cwtl
lret
jmp
lea
loop
mov
test
sub
inc
loop
push
int
out
xor
lcall
xor
bound
push
fisttpll
in
aas
jecxz
pushf
loope
les
aad
imul
mov
cli
add
test
sti
pusha
call
sbbl
mov
mov
out
sub
mov
inc
push
movsl
xor
jns
jecxz
dec
mov
push
xor
sub
xchg
cmpsl
pop
xlat
or
stos
rcll
mov
es
mov
xchg
add
mov
sub
imul
gs
cmpl
insb
in
fldt
and
repz
and
jns,pn
cmp
aad
stos
xor
repnz
mov
outsb
pusha
int
sbb
mov
test
into
mov
aas
and
sub
shlb
push
dec
jae
sub
sub
test
ficomps
mov
into
lds
das
shll
and
xchg
aad
lret
aaa
iret
hlt
ljmp
cli
hlt
stos
lds
movsb
sbb
insb
rcrl
and
pop
sub
cltd
push
push
adc
test
cld
in
cld
loopne
cmp
jecxz
cltd
in
jmp
pop
test
cwtl
sahf
xorb
stos
mov
mov
dec
adcb
scas
push
jae
jl
xor
lcall
xchg
sti
lret
pop
aas
stc
mov
daa
xchg
dec
mov
bound
aam
push
sbb
dec
iret
push
int
jbe
ds
xchg
stos
mov
mov
test
test
mov
data16
cli
fcomp
or
inc
mov
push
loope
pop
push
mov
sub
ret
pop
ds
clc
icebp
xor
inc
mov
pop
out
pandn
dec
test
popf
test
pop
aam
adc
jne
leave
mov
sahf
popa
jecxz
jmp
dec
imulb
jl
mov
ljmp
xor
ss
inc
adc
sbb
out
cld
pop
xorb
out
jnp
fimuls
or
add
stc
int
push
or
cmp
in
inc
sbb
sti
sbb
or
fcoms
pop
add
xor
mov
adc
sbb
mov
cltd
adc
cmp
cmp
pop
lock
cmp
jne
out
je
ret
inc
lahf
sub
lods
dec
mulb
scas
outsl
leave
push
xchg
and
pop
imull
mov
mov
pop
cmp
inc
dec
in
and
push
mov
add
dec
cmp
stos
xchg
in
std
int3
fildll
rcl
lahf
leave
test
push
jle
jo
pop
cli
lock
xor
repz
xor
jnp
repnz
push
outsb
xlat
sub
leave
dec
pop
and
dec
ret
push
fs
dec
sub
bound
cmp
bound
xchg
dec
stc
or
cmp
in
ljmp
cmp
mov
push
icebp
jecxz
test
mov
call
int3
jae
mov
push
loopne
out
lock
testb
jmp
lods
cmp
ret
mov
jl
cmp
xor
into
add
testb
lret
fstpl
rol
push
fisubrl
mov
sarl
pushf
imul
mov
addb
push
sbb
dec
pusha
jns
addr16
mov
adc
icebp
fdivrs
testl
in
inc
xchg
lods
xchg
and
lahf
scas
mov
ret
mov
push
aas
lahf
pop
in
and
adc
data16
mov
popf
lret
xchg
xlat
sbb
adc
jnp
push
cmp
push
lods
ret
test
ret
xorl
gs
ja
mov
push
push
push
aas
mov
xchg
dec
outsb
fstpt
adc
ret
push
mov
dec
data16
add
in
inc
add
popf
cmpsl
push
cmp
mov
and
dec
lret
negl
jmp
imulb
jb
fs
mov
jp
sub
dec
dec
call
add
mov
and
movsb
popa
popf
add
insb
daa
insb
xchg
mov
pop
cltd
xchg
andb
adc
xchg
repnz
xor
movsb
add
sub
mov
inc
subl
inc
inc
mov
dec
cltd
ficoml
push
mov
mov
jecxz
cmp
xchg
iret
pop
sbb
and
scas
rorb
sete
fadds
pushf
popf
push
xchg
out
shlb
pop
call
mov
jo
sub
lods
add
xor
lods
inc
bnd
lock
jne
hlt
js
mov
ja
addb
push
cltd
aaa
call
jge
sub
dec
imul
pop
adcb
je
mov
dec
not
jg
mov
insl
popf
movsl
and
decl
and
rclb
xor
push
mov
mov
fdivs
and
out
or
add
push
in
aas
adc
mov
in
jmp
jbe
push
ds
mov
lds
loope
adc
mov
jne
add
dec
repz
cli
cmpsl
addl
pop
push
outsl
push
int3
orb
test
pop
addr16
nop
xchg
add
mov
or
sbb
scas
arpl
inc
push
jo
or
mov
add
lahf
jne
repz
push
aaa
aas
xchg
xor
xchg
divl
xchg
lock
scas
dec
movsb
xor
in
es
cmp
rorl
icebp
fsubr
inc
and
cmp
pushf
or
shll
scas
cmp
jne
add
inc
cs
js
mov
pop
inc
aad
mov
adc
mov
xor
add
mov
cmpsb
and
lcall
pop
sbb
in
stc
push
xlat
dec
sbb
int3
dec
imul
inc
loopne
pop
push
outsb
mov
les
rcr
cmp
mov
cmp
mov
lods
imul
test
int3
or
xor
and
fdiv
mov
fbld
jno
xor
adc
dec
shlb
stos
repz
dec
outsl
xorl
cwtl
movsl
rclb
jbe
rcll
fiadds
xlat
jmp
xchg
sub
cmp
mov
imul
aaa
imul
pusha
ljmp
and
push
push
xor
movsl
out
addl
dec
pop
sub
bound
addr16
sbb
mov
or
into
scas
nop
cmp
ret
jnp
es
fistps
fdivp
loope
mov
call
andb
arpl
xchg
imul
pop
nop
push
out
fsubrl
jno
aad
enter
hlt
incl
and
xchg
lods
jg
jg
mov
gs
push
xchg
cli
mov
cwtl
dec
movsb
push
jbe
jge
mov
or
xor
and
dec
cmc
inc
ret
pop
shl
jp
jg
clc
lock
mov
mov
sbb
push
lods
inc
jp
sub
clc
lock
sub
fstps
cltd
imul
jp
sbb
sbb
push
fnsave
adc
lret
or
adc
or
cltd
dec
aam
testb
nop
lahf
cwtl
push
cmp
push
jmp
adcb
addr16
roll
sbb
push
cs
adc
pop
sub
popa
fnstsw
mov
popf
mov
pop
es
in
nopl
daa
pop
aad
adc
icebp
add
or
pop
sub
inc
pop
lock
and
mov
add
pushf
xor
loope
mov
ret
cmp
faddl
cmp
jl
jo
cltd
pop
dec
rcl
sbb
in
ret
mov
nop
frstpm(287
outsb
pusha
loope
mov
dec
imul
shll
stos
sbb
pop
sub
dec
mov
les
fst
je
jmp
pushf
das
arpl
jbe
mov
js
push
movsl
jl
std
js
xchg
mov
jb
mov
mov
mov
cmp
fldl
cmp
stc
mov
pop
push
mov
inc
cmp
shrl
adc
test
lahf
int
fs
lret
nop
pushl
inc
or
imul
mov
in
stc
lds
inc
dec
mov
shrl
ja
incl
sub
test
and
and
xor
inc
sub
push
popa
outsb
mov
mov
subb
movsl
clc
pop
pop
inc
push
sbb
or
mov
movsb
fisubl
adc
inc
pushf
dec
int
jle
addb
lcall
stos
incb
outsl
push
jl
pop
aam
jle
data16
enter
testb
pop
push
mov
in
xchg
int3
or
divl
lock
negb
adc
fldcw
shll
outsl
fsubr
shrb
lods
dec
xor
mov
inc
sbb
sarl
test
sub
xchg
dec
push
gs
loopne
jbe
loop
fimuls
mov
jmp
and
dec
addb
inc
ss
mov
mov
or
mov
push
adc
cmp
pop
jno
push
dec
pop
xchg
sti
push
jae
testb
sti
clc
hlt
dec
add
push
xchg
jne
cmp
ret
dec
les
mov
jecxz
and
nop
ss
cmp
push
mov
push
imul
jecxz
sub
popf
scas
pusha
mov
addr16
push
xchg
push
xchg
gs
ja
push
jle
lods
push
xlat
das
mov
lcall
fmull
and
mov
cli
fwait
sub
cli
test
outsb
scas
sub
cwtl
adc
sti
jns
into
pop
je
xchg
lcall
je,pt
lds
mov
push
leave
ja
shl
fs
cltd
xchg
inc
nop
xchg
mov
imul
fisttps
dec
mov
pop
mov
shl
dec
icebp
dec
jae
out
mov
fnstsw
dec
push
loop
in
fcmovnu
xlat
nop
xor
inc
inc
cli
in
mov
or
pop
aad
pop
jge
loope
adc
insb
insl
dec
stc
aas
pop
mov
out
data16
rolb
jp
dec
out
mov
xor
jbe
pop
cmpsb
test
mov
ljmp
cmp
adc
xor
lock
fcoml
pop
scas
adc
mov
test
jns
pop
subb
mov
mov
push
pop
mov
jge
mov
push
sbb
test
call
inc
mov
sbb
test
inc
mov
mov
cld
cmp
mov
xor
dec
orl
lahf
inc
xchg
sahf
push
or
sbb
cwtl
andl
ret
jg
add
mov
push
xlat
out
mov
aaa
mov
pop
cmc
mov
jbe
pop
outsl
add
insb
jecxz
int
lret
push
jmp
mov
addr16
dec
and
mov
cmpsl
sub
xchg
data16
adc
pop
push
pop
push
imul
bound
mov
jbe
jmp
in
sbb
mov
mov
imul
xor
sti
add
pop
inc
out
adc
pop
neg
in
jae
xchg
arpl
and
jle
pop
fstps
insb
dec
stos
andl
push
mov
xor
sbb
movsl
and
sub
imul
out
stos
out
jo
jbe
lcall
pop
cwtl
inc
stc
dec
jns
sbb
jbe
add
scas
repz
and
pop
xor
xor
ja
push
xchg
iret
xchg
add
xchg
stos
mov
ficomps
pushf
push
mov
cmpsb
fsubrl
rcrb
dec
scas
call
and
jnp
rol
sbb
push
mov
shlb
dec
rol
aam
mov
sbb
inc
jle
outsl
pop
mov
add
jmp
rolb
fucom
push
leave
or
dec
test
aaa
or
fldenv
jmp
sbb
inc
ret
or
lahf
or
sub
fbstp
xor
popf
adc
mov
lea
psrlw
mov
ficompl
mov
scas
ret
mov
lock
fwait
adc
fcom
out
mov
sub
popa
pop
pushf
and
inc
mov
inc
and
das
or
push
ljmp
push
adc
sub
sub
fsin
pop
icebp
ficompl
fsubrl
flds
mov
enter
mov
jo,pn
inc
jbe
mov
dec
jl
mov
or
addb
inc
or
sbb
pop
sub
jno
pop
loopne
sub
iret
push
jbe
ja
sbb
lods
cltd
pop
pop
adc
aaa
mov
or
sbb
test
lret
sbb
mov
or
dec
rcrb
and
pop
negl
outsl
in
vmwrite
test
and
dec
in
jmp
divl
aad
stos
in
xor
pop
dec
sub
and
lods
loope
imul
aad
sub
lret
cmc
shl
insl
jne
jbe
xchg
and
inc
or
sbb
push
bound
cmp
xchg
cmp
add
jge
lods
inc
jbe
push
sub
cmpsb
add
xlat
xchg
push
add
popa
cltd
xor
inc
or
pop
mov
add
cmp
leave
jbe
jmp
in
les
insb
imul
sub
jg
sub
sbb
jecxz
hlt
arpl
popa
inc
jb
mov
pop
ret
lahf
inc
es
mov
lcall
nop
push
mov
js
rcr
and
sbb
inc
jno
lods
adc
pop
rcl
xchg
aaa
fimuls
add
and
mov
lret
fists
daa
add
sub
into
mov
mov
mov
xchg
xchg
cmp
push
loop
out
pop
stos
pop
jno
loope
sbbl
es
cwtl
pusha
sbb
aaa
mov
mov
push
imul
xchg
inc
jge
push
nop
mov
fimuls
add
ljmp
push
mov
mov
add
jle
aam
cmp
sbbl
xchg
jb
mov
in
scas
ss
sbb
add
sarl
insl
add
sbb
mov
or
xor
xor
fwait
dec
daa
and
jnp
jl
xchg
jg
shrl
jb
fdivl
jo
and
test
stc
jo
lock
push
jecxz
xchg
jle
movsb
mov
inc
add
icebp
add
fs
lahf
mov
push
movsl
mov
push
inc
es
and
ds
push
cli
adc
jns
test
dec
cmc
sub
fadds
adc
and
lock
outsl
xor
xor
mov
lret
ja
mov
out
pop
test
and
inc
dec
imul
call
aaa
insl
int3
repz
mov
adc
mov
test
in
sbb
pop
iret
testl
or
out
and
mov
fstp
into
and
aad
ss
rcrl
and
pusha
jae
sbb
mov
ficoms
pop
cwtl
mov
in
cmc
scas
gs
inc
push
cmp
scas
lea
inc
imul
test
and
lock
cmp
popl
mov
cli
js
sub
scas
outsl
stc
mov
push
pop
imulb
pop
imul
sub
mov
mov
aad
adc
adc
mov
sti
mov
cmpsb
mov
pop
popf
inc
loop
inc
jle
mov
push
pop
dec
push
imul
out
pop
jo
mov
adcb
aaa
jns
clc
popa
inc
insl
cmp
ret
adc
jnp
fsubrp
jecxz
insb
mov
xchg
lods
les
test
ret
jnp
je
sub
cmp
enter
add
das
imul
leave
pop
jge
rorl
push
dec
fwait
add
xlat
insl
fdivrl
xor
les
or
xchg
jg
xor
mov
mov
movsb
daa
psubw
or
fstl
pop
insb
sti
and
dec
aad
mov
dec
imul
mov
push
push
push
mov
lret
imul
pop
pop
mov
xchg
pop
je
les
nop
jl
iret
mov
jo
sub
push
popa
mov
hlt
loop
push
fnsave
outsb
mov
push
and
mov
mov
or
cwtl
mov
cwtl
sub
cmp
dec
sub
daa
ret
fwait
loopne
jnp
inc
popf
mov
xchg
xchg
or
pop
jnp
in
lea
and
sbb
push
add
ds
xchg
shrl
pop
movsl
aad
sub
xchg
flds
jnp
pusha
test
imul
dec
movsl
loop
inc
inc
pop
mov
filds
popa
xchg
out
test
iret
dec
outsl
xchg
xchg
pop
mov
inc
std
pop
jns
test
test
lods
scas
incb
push
cmp
out
pop
insl
pop
xchg
popf
das
in
adc
pop
mov
imul
das
fnsave
scas
jge
mov
leave
push
sarb
stos
icebp
icebp
jecxz
mov
imul
jmp
cmc
jno
jns
in
xchg
iret
mov
mov
inc
ljmp
adc
adc
cmpsl
and
add
sub
add
add
bound
push
stos
imul
pop
jmp
and
dec
mov
or
mov
jae
xchg
jl
sub
pop
xchg
pop
xor
andb
xor
and
int3
aaa
xchg
fisttpl
sbb
dec
xchg
in
sub
cli
inc
out
adc
pop
out
pop
jbe
adc
insl
repnz
inc
repnz
sbb
pusha
xor
mov
sbb
mov
hlt
cmpsb
dec
sarl
lock
adc
loop
mov
inc
xor
not
aaa
jmp
mov
imulb
lock
mov
lds
inc
adc
out
jno
or
rorl
cmp
inc
data16
mov
dec
push
clc
pop
mov
mov
vaddsubps
mov
push
sbb
jp
test
jbe
mov
test
sub
movl
mov
adc
cmp
lcall
xor
mov
sbbl
sbb
inc
push
mov
xchg
int
btr
push
imul
xchg
pop
aam
ljmp
cmp
sbb
dec
adc
lds
push
cld
inc
mov
mov
inc
out
push
xchg
mov
mov
push
pavgw
add
sbb
test
adc
mov
cld
sbb
fcmovnb
divl
or
adc
dec
sbb
popa
sub
aam
sub
cmp
pusha
push
popfw
inc
sub
idiv
ja
std
inc
push
in
aam
mov
lahf
ret
das
std
adc
notb
in
inc
aas
sub
arpl
pop
jbe
adc
cli
mov
add
cmpl
in
aam
iret
outsl
cltd
cmpsl
mov
fs
mov
push
adc
loop
adc
cmp
xlat
push
iret
sbb
pusha
frstor
lcall
jae
outsb
mov
mov
jp
loop
cli
ljmp
fs
mov
imul
scas
inc
into
sbb
sbb
fs
or
sbb
sub
sub
js
jne
push
xor
cld
jnp
pop
adc
mov
imul
pop
imul
add
rcrb
loope
cmp
fnstcw
cs
adc
fcoml
nop
fstpl
dec
or
daa
in
int3
imul
or
inc
lock
cmc
subb
sub
adc
andl
jle
add
mov
mov
xor
cld
mov
mov
add
or
mov
cmc
fisubl
sbb
and
imull
ret
ljmp
or
int3
xor
lahf
fldl
mov
aaa
aaa
fistl
jg
jne
stos
add
vxorps
add
cmp
cmp
call
push
push
fs
popf
imul
push
sub
pop
jnp
lret
adc
in
nop
jmp
jns
dec
and
cwtl
inc
push
jo
sub
stos
ja
lock
xchg
and
and
loop
mov
jbe
icebp
fcmovnu
push
or
outsb
loope
subb
daa
lret
leave
xor
in
jle
mov
dec
rcl
test
jns
push
shll
push
inc
insl
xchg
mov
lahf
add
sbbl
ss
mov
cmc
movsb
aas
jne
mov
jle
mov
xchg
out
data16
lock
add
sub
inc
ret
xchg
lods
adc
shll
test
lods
loop
or
fdiv
adc
jne
cmp
les
mov
je
push
xchg
push
push
jmp
dec
mov
cwtl
xchg
add
mov
stos
stos
jo
enter
pop
mov
mov
inc
xchg
rorl
fistpl
add
dec
cli
mov
sbb
inc
adc
movsl
add
fiaddl
mov
jns
mov
outsl
add
and
aam
adc
or
test
mov
hlt
push
roll
add
add
test
add
lods
sahf
jbe
dec
dec
push
add
das
lea
aad
dec
sub
inc
in
ja
sub
mov
pop
popf
sbb
out
sub
fistps
jg
cmc
mov
fsts
cmc
or
pop
into
cmp
mov
test
inc
out
cmp
fbld
push
xchg
ds
sub
sub
inc
loop
movsb
mov
xchg
adc
rcrl
add
sub
aas
int
cmpsl
xor
sbb
fs
lock
inc
adc
pop
je
sbb
insb
fcomps
mov
clc
imul
cmp
xchg
lods
xor
jns
add
cmp
adc
fnstenv
test
or
icebp
and
nop
out
push
rcll
cmpsl
lods
fistl
repnz
outsl
daa
jb
lods
dec
inc
or
adc
push
dec
xor
sub
inc
push
fdivs
sahf
add
inc
mov
mov
arpl
jbe
sbbl
popf
rolb
cmp
add
and
xor
jb
ljmp
imul
cmpsb
outsl
repz
xorl
mov
xchg
or
sub
testl
jmp
pop
mov
js
add
cmpsb
sbb
jae
pop
scas
lods
add
cmpsl
xchg
mov
loope
stos
sub
adcl
push
mov
pop
jns
sahf
lods
push
pusha
mov
bswap
sub
das
push
jg
push
push
jmp
cmp
stos
mov
pop
enter
mov
mov
lahf
push
test
mov
jo
adc
cmp
inc
clc
lcall
out
nop
popa
rcrl
jo
mov
mov
sar
testb
sarl
sub
mov
dec
or
pop
and
mov
mov
pop
mov
xchg
andb
int3
andb
mov
sub
sub
xchg
pop
adc
dec
stos
sbb
sbb
add
push
or
sub
rol
or
shl
jmp
inc
xor
or
mov
fisttpll
mov
sbb
lods
mov
bound
lds
push
stos
fwait
loope
pop
sub
popa
push
aam
adc
dec
jb
jb
xor
mov
sbb
test
jge
pop
jno
stos
fwait
je
nop
subb
xor
push
push
sbb
loope
add
cmpsl
dec
pop
sahf
cltd
sub
sub
add
push
cmp
cld
shlb
dec
shll
xchg
push
sbb
inc
inc
adc
cmp
dec
sbb
pop
in
jb
loopne
lret
mov
stos
pop
mov
mov
lss
pusha
add
movsb
mov
sbb
jle
jno
lods
mov
mov
cmp
cmp
movsl
jo
cld
into
pushw
ds
sbb
mov
mov
sub
inc
frstor
jbe
js
cmpsl
push
fcompl
dec
mov
jae
sub
call
add
sti
jl
or
push
dec
add
das
pop
push
inc
xchg
push
scas
mov
rorb
inc
or
clc
insb
idiv
inc
shll
into
aad
lahf
inc
dec
inc
inc
lock
pop
das
add
std
sbb
push
adc
fldenv
dec
je
sub
lcall
xchg
into
cmpsb
xor
mov
pop
cltd
add
sub
push
arpl
imul
andl
inc
sbb
xchg
rolb
int
lret
cmp
mov
jmp
jne
ljmp
or
adc
fidivrs
sub
test
mov
fstp
xchg
xor
sub
mov
nop
gs
jp
dec
movsb
sub
loope
idivl
sbb
cli
fs
dec
sub
lret
xor
sub
cmpsl
xchg
mov
jo
mov
and
es
fstpt
aad
push
xor
push
repz
or
dec
jae
mov
mov
push
sar
lock
mov
lods
or
mov
jecxz
push
lea
or
jae
mov
shlb
lods
jp
push
inc
test
test
inc
call
xchg
xlat
sub
movsl
fistpl
sub
into
or
gs
pop
sti
and
sti
insl
aad
popf
adc
gs
sbb
xchg
sbb
fst
cmp
lds
push
rcrl
sbb
popa
dec
insl
and
pusha
out
mov
movsl
adcb
xchg
fs
jnp
ret
lahf
xor
in
inc
inc
sti
mov
pop
lret
loope
push
in
and
pop
das
cld
xchg
pop
lock
xor
ret
cmp
push
pop
mov
js
cmp
sub
mov
push
in
sbbl
imul
sbb
jne
add
in
test
into
xchg
push
outsb
test
fmull
sbb
push
lcall
add
mov
mov
loope
mov
xchg
lods
aam
imul
lds
in
mov
pop
and
inc
lods
popa
or
pusha
sti
push
cmp
inc
push
cmp
js
jge
xchg
dec
mov
popa
hlt
jo
popa
stos
sbb
stos
lret
leave
xlat
jecxz
xorb
sub
adc
inc
je
dec
inc
cmp
cmpsb
or
sub
sarb
and
lds
cmp
xor
outsb
cmp
mull
jbe
enter
push
inc
sub
cmp
add
add
cld
jmp
mov
out
or
insb
loop
jg
orb
pusha
addl
inc
aaa
cmp
dec
nop
in
add
insb
or
cs
cmp
fcompl
adc
sbb
jge
stos
inc
or
inc
and
lods
mov
sub
pop
mov
das
sbb
lret
xchg
arpl
cld
data16
sub
sub
xchg
push
fisubl
dec
xor
dec
out
mov
mov
dec
or
out
add
xlat
int
fsubrs
inc
pop
loop
cmp
pop
mov
cmpsl
sub
ljmp
sti
mov
icebp
pop
mov
fmull
movsl
imull
push
mov
fstpl
in
stc
aam
bound
dec
xor
in
dec
push
mulb
inc
inc
fs
dec
push
and
ret
adc
push
jbe
insb
inc
inc
jnp
insb
shll
scas
add
out
rolb
imul
int3
xor
fiadds
xorb
int
push
pop
mov
mov
mov
imul
push
cltd
mov
xchg
test
dec
push
xlat
and
and
push
insb
call
comiss
xchg
fidivrl
or
dec
fbld
sub
ja
xor
fcoml
and
sti
jg
pop
or
push
xor
pop
pop
nop
add
pop
mov
call
mov
sub
push
inc
adc
inc
xor
cmp
scas
divl
out
adc
orl
mov
lahf
divb
dec
dec
pop
lret
cwtl
stos
les
sbb
pop
sub
xor
cmp
jno
mov
gs
pop
push
lcall
cli
mov
cmp
andb
and
in
dec
test
flds
adc
fdivrs
push
push
mov
loopne
clc
sub
jecxz
jae
andb
loopne
xchg
mov
ds
pop
cmp
xchg
ret
sub
sub
jmp
frstor
mov
int3
dec
das
mov
fcoms
sub
orb
cmp
in
jg
arpl
fcmovnb
mov
xor
iret
or
orb
or
adc
decb
cmp
cmpl
scas
mov
repnz
fistpl
jecxz
inc
loop
fsubr
cmp
cmp
les
andb
shl
push
mov
idivl
cmc
movsb
loope
or
push
leave
pop
es
shl
mov
lock
xor
dec
adc
xor
fdivs
mov
inc
cld
arpl
mov
sbb
push
repz
cltd
movlps
mov
dec
inc
adc
push
mov
fisttpl
fldl
ret
sub
dec
mov
and
cmpsl
movsb
push
inc
inc
popf
mov
fistl
mov
xchg
sub
push
jo
sbb
dec
pop
enter
cmp
push
mov
insb
push
andb
rcrb
cld
jecxz
jg
pusha
ret
clc
inc
mov
inc
push
pop
fimuls
rorb
mov
loop
inc
pop
mov
mov
add
pushl
lods
cmp
inc
mov
aas
or
mov
test
lret
add
sub
test
jno
adc
adc
cli
jge
sbb
in
test
mov
sti
xchg
cltd
fs
xor
lods
pop
insl
adc
push
ret
cmp
dec
fnstcw
repnz
test
test
xor
cs
pop
shll
dec
stos
shll
xchg
mov
mov
or
xlat
jne
xchg
jmp
sbb
mov
je
or
mov
push
cmp
ds
js
sbb
and
ret
mov
cmp
daa
cmpsl
pop
in
filds
ret
mov
leave
fisubs
hlt
xor
ss
aad
pop
xor
fidivrs
add
or
test
xor
mov
sub
das
sub
and
or
aas
mov
loopne
or
movsl
xchg
mov
push
pushf
sbb
adc
xor
push
inc
cmc
test
in
sub
or
xor
sub
dec
dec
shl
pop
xor
push
mov
fsubrl
aam
pop
je
xchg
flds
insb
lods
adc
jns
push
shrl
cs
jle
jg
mov
sti
mov
cmp
add
mov
scas
jae
loop
sbb
adc
stos
sbb
xchg
or
out
inc
daa
out
mov
daa
std
divl
jno
je
cmp
sbb
inc
dec
shrl
dec
mov
daa
fwait
orb
or
inc
dec
sti
and
cli
xor
jns
shll
xchg
cmp
pusha
fsts
dec
add
fs
push
dec
pause
mov
imul
xchg
add
push
stos
ds
fld
mov
lahf
movsl
cld
xchg
cmpsb
inc
sub
push
jle
bound
mov
jge
dec
fsts
mov
out
mov
andb
pop
jnp
or
cmpb
mov
neg
ret
nop
push
push
xor
cmp
cmpsb
xchg
jmp
out
cli
rclb
mov
mov
adcb
pop
rorb
in
negb
divb
pop
xlat
cld
dec
decb
xchg
lahf
enter
or
mov
xor
or
into
iret
out
xor
outsb
or
cmp
or
or
arpl
insb
push
addr16
mov
mov
imul
xchg
cmpsb
or
rcrb
or
lret
push
cmpsl
and
inc
sub
xchg
ss
sub
push
fimull
mov
into
xchg
and
inc
mov
arpl
mov
fwait
mov
push
imul
arpl
push
mov
scas
lock
testb
push
mov
dec
daa
imul
xor
pop
mov
push
pushf
fstl
push
sti
test
gs
js
cmpsb
sbb
test
dec
popa
and
xor
test
pusha
add
ret
cli
imul
cltd
addl
dec
mov
daa
in
and
addr16
sbb
test
stc
and
mov
out
lcall
or
jle
cmp
and
cmp
daa
hlt
cmp
mov
pushf
ss
test
sbb
pop
inc
fnstenv
cltd
jb
ss
pop
outsl
or
std
clc
gs
cli
into
in
cmpsb
xor
outsl
decb
xchg
push
idivb
sub
pusha
pop
jb
rcll
ficoms
ljmp
aaa
and
jns
xlat
test
repz
dec
lret
fcomip
sti
pop
stos
jbe
dec
jg
xor
lock
sub
in
test
pop
orl
sub
and
outsb
into
xor
sbb
cmp
lods
movsb
push
fcmovnu
xchg
pop
arpl
ja
jle
fnstenv
jae
mov
les
push
js
or
inc
not
stos
lods
jno
and
ret
into
add
test
iret
notb
sub
and
iret
inc
pop
pop
sahf
rorb
add
test
mov
sbb
pop
scas
xor
or
jmp
ficoms
and
cmp
mov
jb
adcb
or
stos
data16
std
pop
jl
mov
lods
adc
and
aaa
mov
mov
std
mov
cld
testl
pop
ret
insl
insb
les
or
lea
data16
mov
ss
and
xchg
pop
rcll
or
fcoml
mov
sub
xor
jmp
sub
lds
and
push
mov
leave
fs
sarl
adc
add
jne
mov
add
xorl
xor
shr
and
call
push
mov
insl
ss
test
std
subb
lret
lret
ficompl
outsl
je
jno
movsl
push
repnz
or
nop
add
iret
xchg
cmpsl
and
mov
and
les
pop
cmpsb
push
loope
jg
cld
stos
xchg
imulb
mov
lods
or
cli
test
push
jge
inc
mov
adc
test
popf
into
shrb
dec
inc
and
idivl
dec
push
sbb
loopne
int
aad
cs
mov
jo,pn
mov
bound
out
gs
mov
or
cmp
push
imul
inc
push
lea
fdivl
leave
shll
push
gs
gs
test
jmp
fwait
mov
lock
out
inc
dec
push
sti
pushf
pop
in
mov
inc
push
imul
mov
sbb
fdivrs
push
cmp
and
cltd
popa
icebp
mov
xchg
jb
in
movl
lea
loopne
cmp
sub
pusha
xchg
jo
fs
pop
mov
sbb
xchg
lock
jne
bound
hlt
popf
mov
rolb
inc
lods
push
mov
cwtl
inc
jecxz
ja
push
jnp
in
insl
push
xchg
dec
lahf
in
cmp
sbb
popa
mov
push
mov
sbb
clc
loop
or
js
xchg
sub
add
pop
dec
push
push
enter
jmp
fxch
inc
xchg
decl
movsl
adc
sbb
xchg
push
dec
mov
sti
in
shr
adc
daa
sbb
in
or
aad
mov
sbb
push
stc
adc
push
inc
sahf
xor
cmp
mov
sbb
movsb
repz
pushl
stos
or
adc
and
cwtl
sub
jle
addr16
repz
out
dec
ud1
sub
sarb
rcl
pop
movsb
cmp
push
adc
ss
dec
push
lcall
inc
repnz
pushf
adc
sub
xchg
xor
addr16
pusha
filds
imul
mov
and
xchg
mov
dec
xor
mov
add
push
push
lahf
xor
mov
inc
andl
jmp
inc
movb
ret
call
es
sbbb
xor
imul
push
enter
mov
mov
mov
loopne
pop
fcoms
push
dec
lods
xchg
jecxz
fidivl
test
mov
les
mov
jle
ffreep
mov
cmpb
pop
or
lods
sbb
xchg
dec
cmp
leave
and
mov
add
sbb
mov
mov
pusha
pop
lret
clc
jge
clc
push
test
js
add
cmp
aam
jl
dec
or
jp
xchg
xchg
xor
mov
push
cmp
jns
mov
mov
sbb
movsb
test
cmp
insb
inc
pop
add
mov
xlat
xchg
cld
lret
or
xor
mov
lret
aam
jnp
insl
ret
stc
inc
lea
loopne
outsl
fildl
pop
aad
ds
xchg
jns
xchg
andl
pop
bswap
stos
rclb
mov
dec
fwait
inc
and
loopne
cmpsb
pop
sbb
xchg
repnz
fwait
mov
int
lahf
or
mov
mov
test
pop
clc
fmull
cmp
lahf
pop
out
cmpsl
popf
gs
lcall
les
outsb
cmc
mov
mov
lods
adc
notb
lcall
repnz
inc
rolb
fcoml
dec
xor
nop
mov
jne
xorl
push
adc
mov
sbb
icebp
push
adc
sarl
repnz
push
test
mov
test
dec
arpl
imul
add
mov
mov
mov
popf
shll
inc
inc
pop
daa
push
mov
inc
and
dec
cwtl
aam
inc
sub
and
cmpl
add
and
sti
das
ja
push
in
or
daa
stos
loop
inc
and
sub
sbb
xor
mov
inc
arpl
or
mov
cmpsb
in
xchg
pop
jno
jmp
adc
out
cmp
enter
jo
lea
push
gs
jae
cmp
shll
pop
es
pop
dec
dec
mov
xlat
xchg
fcmovnb
jo
nop
fbld
leave
scas
add
jbe
sub
xchg
mov
sbb
out
inc
test
daa
roll
sahf
sbb
mov
mov
push
shlb
push
push
orb
sbb
inc
pop
mov
lds
ds
ss
cwtl
jg
mov
jb
jnp
fistps
jns
fsubp
test
das
cmp
shl
iret
mov
add
cmp
pop
pop
jecxz
dec
add
inc
sub
cli
fimull
adc
push
dec
dec
pop
mov
sbb
in
sbb
roll
jb
ret
test
jns
xor
jae
fcomi
mov
mov
mov
mov
orl
xchg
sahf
xor
pop
int
cmp
arpl
enter
bound
jb
adc
mov
add
aam
sbb
or
xor
mov
daa
or
sahf
pop
enter
xor
mov
mov
scas
cmp
test
shrl
xchg
sub
add
jb
fnsave
dec
push
pop
jno
fcomp
mov
and
xchg
jno
lods
inc
mov
dec
mov
mov
mov
adc
fnstsw
xchg
inc
daa
pop
hlt
pop
push
inc
scas
mov
mov
stos
sbb
lea
or
test
mov
and
mov
jmp
xchg
push
lods
cltd
sbb
orb
hlt
pop
scas
stos
repnz
shr
xlat
aas
clc
xor
leave
adc
enter
fiadds
jo
jo
mov
pop
dec
pop
aad
jns
into
inc
and
sbb
in
andb
fstpl
push
inc
adc
mov
mov
decb
mov
leave
lcall
dec
fnstenv
pop
insb
inc
push
mov
sbb
add
and
cltd
in
xchg
mov
or
icebp
out
push
pop
scas
clc
repz
repnz
cmp
imul
in
xor
mov
jbe
dec
pop
rclb
pop
test
sbb
lock
jo
push
add
xchg
xchg
gs
dec
xor
mov
movl
std
fbstp
aam
xlat
pop
pop
xor
push
mov
adc
sub
adc
sbb
sti
mov
inc
in
cvtpi2ps
push
sub
jno
and
or
lcall
push
add
stos
jecxz
fidivrs
add
mov
cmove
push
imul
dec
inc
mov
repnz
xchg
or
popa
push
cmpsb
data16
sahf
jl
mov
xchg
adc
sub
out
andb
insl
mov
mov
popa
and
mov
jo
adc
hlt
and
cmp
pop
lcall
cmpsl
push
leave
and
cltd
add
cwtl
or
pushf
cmpsl
aad
les
cmp
ss
addr16
js
iret
push
and
mov
popa
lcall
js
and
push
dec
adc
sbb
sub
icebp
loope
aam
fiaddl
adc
dec
sub
xor
out
mov
push
adc
and
xlat
add
jecxz
jbe
xor
out
inc
mov
mov
cmp
mov
sbb
js
aam
in
dec
pop
cmp
xchg
mov
push
mov
inc
pop
mov
dec
xor
sbb
mov
jge
adc
cmpsb
mov
jne
lock
ret
dec
ljmp
cmpsb
pop
ret
dec
pushf
xor
push
cwtl
lock
mov
and
adc
push
test
pusha
xor
leave
in
lahf
je
or
pop
cmpl
sti
mov
popf
push
pop
mov
icebp
mov
xchg
rcl
sub
mov
pushf
adc
adc
cltd
test
addr16
inc
test
push
xlat
in
push
jmp
jg
int
popa
mov
adc
data16
dec
shl
lret
lret
sbb
nop
mov
sub
nop
cli
or
xor
sub
mov
fiaddl
jae
mov
adc
jmp
lea
hlt
ss
xor
dec
xchg
sbb
dec
imul
adc
sub
aam
sbb
repz
lods
xchg
dec
push
push
cmpsl
or
jns
pop
mov
xchg
testl
mov
adc
adc
jns
fstl
sub
push
dec
mov
outsl
cltd
jne
xchg
sbb
jp
in
fisubrs
ret
inc
push
or
lock
sbb
mov
push
fwait
or
mov
fistpl
outsb
or
aad
mov
lea
mov
jo
xchg
leave
and
sub
sbb
dec
mov
and
push
fimull
lea
inc
jecxz
sub
test
adc
pushf
dec
mov
clc
fistps
out
scas
pop
jns
xor
inc
mov
mov
inc
and
lea
jmp
cmp
out
sbb
sbbl
insb
out
sub
inc
xchg
mulb
mov
sbbl
or
xlat
ss
test
loop
leave
mov
movsb
sub
mov
pop
mov
xchg
xchg
inc
adc
mov
out
insb
dec
lods
loop
incl
cmpsl
sub
imul
in
in
sbb
and
pusha
jb
xor
cmp
adc
push
daa
lcall
es
mov
cld
jae
insl
and
cld
repz
jecxz
lock
outsb
add
or
ljmpw
jno
push
loopne
pop
repnz
cmp
pop
fildll
stc
ret
popf
mov
jp
mov
std
push
mov
lods
mov
sbb
andb
sub
insb
dec
xor
clc
mul
pop
pop
push
jo
push
sub
push
mov
addb
nop
mov
popl
or
jecxz
enter
pop
push
xor
xchg
lahf
daa
cs
mov
jge
add
jno
mov
rorl
or
sbb
push
xor
enter
lahf
fsubl
icebp
rol
mov
lcall
xor
mov
test
into
xchg
fisubl
jecxz
fldenv
mov
movl
fdivl
push
mov
cld
jmp
addr16
pop
add
nop
rcl
cwtl
sub
adc
mov
pop
add
imul
lret
push
mov
cmp
xlat
lcall
pop
push
enter
loopne
jl
dec
mov
push
pop
add
mov
orl
in
cmp
push
in
std
scas
fmuls
int
popa
ljmp
xchg
xor
add
fnstsw
sarb
test
or
imul
jle
lcall
bound
mov
loop
and
mov
out
inc
mov
outsb
into
icebp
in
mov
lods
nop
dec
repz
mov
ds
lahf
mov
pop
pop
sub
movsl
hlt
xor
inc
outsl
xor
and
test
inc
repz
and
rcll
cwtl
lock
sbb
mov
bound
push
lods
mov
movsl
adc
decl
orl
in
icebp
cmp
xchg
ljmp
jae
mov
pop
js
and
out
dec
mov
push
fcmovnu
add
lock
shlb
sahf
rcrl
or
dec
adc
imul
xchg
xor
adc
cmp
adc
cwtl
add
cmp
imul
adc
rcl
imul
jle
add
dec
es
sti
jg
aad
mov
incl
rclb
das
mov
pusha
icebp
es
and
movsb
sarb
pop
xchg
or
cmp
sarb
mov
pushl
inc
mov
mov
jno
das
dec
sbb
sub
and
ljmp
xchg
sbb
int
mov
push
add
pushf
data16
or
fimull
add
ds
out
and
in
or
cld
shrl
lock
ficoms
and
icebp
xor
sbb
je
or
ficompl
fcomp
cmp
jne
cmp
cwtl
fs
pushf
xchg
inc
or
in
push
nop
jle
ret
sbb
sar
cmpsb
stos
leave
push
mov
pop
loope
or
mov
cli
sbb
push
int
xor
and
insb
pop
jnp
or
xchg
pushf
or
or
inc
and
xchg
jle
fisubl
popf
pop
mov
aam
xor
xor
rol
aaa
adc
and
dec
fnstsw
bound
dec
xor
push
and
mov
pop
cmp
pop
cmpb
sub
push
sbb
push
dec
sbb
lret
jnp
pop
xor
hlt
nop
scas
and
rcrb
fiadds
push
mov
test
out
mov
int3
mov
inc
or
mov
push
push
lcall
punpckhbw
pop
sub
push
cmp
pop
out
or
push
sub
sbb
xchg
pushf
pop
push
mov
xchg
push
add
lcall
inc
divb
or
test
scas
jmp
pop
scas
fcmove
outsl
pop
adc
std
or
repz
mov
loope
iret
addr16
mov
xor
js
or
fistl
cmpl
aad
mov
jnp
mov
mov
mov
xchg
add
pop
out
and
pop
jno
push
pop
sub
cld
ds
push
adc
xchg
and
xchg
daa
or
jo
adc
adc
dec
inc
repz
repnz
xor
and
pop
data16
das
fwait
push
cwtl
adc
mov
sub
push
movsl
sbb
adcb
mov
xchg
sbb
loope
dec
out
or
xor
pop
cmp
push
push
jnp
xor
stos
jne
stos
mov
mov
dec
insl
rolb
mov
rorl
add
mov
dec
outsb
dec
jb
push
lock
shrb
mov
clc
dec
xor
in
jp
ss
testl
lock
popf
adc
sahf
cli
lods
pop
xchg
or
xchg
je
and
dec
cld
cld
dec
dec
ret
push
data16
insl
xchg
xor
cld
cmpsl
pop
pop
stos
idivb
fisubl
cmpsb
icebp
push
mov
ss
sbb
ret
push
jg
aas
fcoml
xchg
mov
add
add
sub
cltd
movsb
std
iret
lods
push
pop
mov
and
cmp
jmp
jno
xchg
xor
mov
mov
and
sbb
sub
clc
jns
mov
add
sbb
adc
sbb
imul
into
pusha
mov
out
fists
aas
cld
movsl
adc
xchg
imul
iret
bound
test
and
inc
cld
pop
ss
mov
dec
inc
cs
in
test
insb
fdivr
mov
xchg
push
nop
xlat
cwtl
dec
mov
lods
pop
fsubrl
js
bswap
xor
dec
sti
mov
lods
and
daa
iret
aad
aam
mov
rorb
push
pusha
inc
cmc
iret
push
add
inc
push
push
cmc
inc
push
and
imul
int
and
int3
rol
roll
mov
jb
push
xor
pop
bndldx
inc
jp
sub
mov
push
cmp
xchg
mov
repnz
and
cwtl
xchg
mov
mov
cs
jbe
mov
or
dec
imul
sbb
xor
adc
mov
push
xchg
mov
pop
aaa
add
scas
int
std
and
sub
push
or
push
arpl
jne
dec
push
pop
mov
or
jecxz
xor
in
ljmp
inc
mov
icebp
roll
dec
jecxz
and
sub
fmul
xor
cltd
ret
jnp
jle
imul
jnp
out
fistpl
and
sbb
jge
rcl
dec
test
cmp
hlt
cltd
out
pusha
out
rcl
mov
ljmp
test
in
adc
lahf
stos
and
repnz
sub
aaa
add
and
mov
inc
dec
vsubps
pop
sbb
js
out
pop
sub
lcall
cmp
es
or
mov
test
insl
jbe
jne
dec
dec
mov
push
test
cmp
fistl
bnd
inc
insb
fildl
repnz
cmp
dec
push
ss
adc
and
outsb
orl
testl
and
dec
jb
out
mov
insl
hlt
mov
jmp
xchg
cltd
in
cmp
cli
mov
push
fsubl
push
or
ret
pop
mov
mov
adc
or
push
out
call
das
cltd
pop
add
repnz
jnp
and
cld
test
sbb
mov
sub
arpl
fidivrl
xor
mov
rcrl
aas
push
mov
mov
cmp
jmp
mov
inc
call
fcomip
or
test
sub
cmp
pop
xor
into
mov
add
mov
add
mov
cmc
pop
imul
cmp
out
ja
cmpsb
mov
lcall
sbb
mov
sub
mul
push
je
xor
inc
popf
mov
dec
lret
repnz
loopne
and
xor
xor
pop
mov
divl
rolb
aam
int
mov
ss
cli
or
lea
or
inc
pop
sub
ret
and
sahf
sbb
out
push
and
jne
sahf
movsl
push
fwait
ljmp
cmp
cld
bound
jl
xchg
push
cmc
mov
js
mov
lret
out
adc
sbb
nop
scas
xchg
xor
gs
ljmp
mov
pop
push
out
sub
call
or
inc
mov
inc
sbb
pop
mov
das
sbb
xor
mov
je
inc
repz
movsb
add
scas
hlt
dec
xchg
jmp
pop
jbe
fistl
jecxz
mov
push
and
inc
lahf
lret
aad
or
cs
stos
insb
out
rcrl
sub
outsb
push
push
imul
and
cmp
ljmp
hlt
fidivs
imul
les
inc
dec
pop
pop
lret
jmp
xchg
jae
sbb
push
aam
ja
mov
push
push
daa
push
imul
or
mov
pop
add
sbb
push
pop
loope
hlt
cmp
xor
xor
or
cmp
lods
add
pop
ja
push
out
adc
xor
imul
ljmp
and
in
and
test
aaa
adc
hlt
ljmp
adc
fcoml
jno
xor
adc
nop
jle
xor
subl
dec
cs
stos
add
mov
mov
rcrl
adc
dec
add
pop
adc
mov
aas
push
jno
stc
repz
mull
in
or
cltd
jge
or
movsl
insb
shll
and
push
es
pop
jae
push
cmp
sbb
pop
mov
aam
jbe
int
es
insb
out
lds
lea
jle
inc
out
ret
fcoms
in
popf
jle
jp
cmp
fisubrs
inc
sahf
sub
dec
and
into
push
xor
fistps
lock
shll
gs
inc
fidivs
filds
push
nop
push
insl
outsl
arpl
fsubrs
cltd
mov
jno
aaa
outsb
sarb
sti
ds
imull
pop
add
mov
cs
ja
outsl
add
fidivl
jb
jle
icebp
and
sbb
cld
lods
mov
cmp
inc
stos
inc
or
popf
in
nop
mov
pop
and
rol
pop
sarl
out
cmp
bound
stos
arpl
out
sahf
subl
lcall
lods
sub
cmc
jbe
add
sbb
jbe
jne
mov
push
pop
pop
push
loopne
inc
dec
add
fiadds
and
imul
mov
cmp
bound
insl
mov
enter
shlb
std
sub
push
lods
mov
pop
mul
rolb
inc
adc
pop
repnz
adc
jnp
jmp
pop
xor
jae
xchg
lock
jne
outsb
jne
in
add
lods
and
sbb
in
aad
xor
cmp
xchg
xor
cld
lahf
or
fwait
add
dec
rcll
pop
add
inc
repnz
jns
push
cmp
sub
mov
insb
lods
icebp
pusha
lods
sub
dec
imul
jmp
popa
out
repz
jecxz
mov
sbb
aaa
inc
movsl
adc
dec
out
mov
std
sbb
xchg
inc
adc
sub
pop
fistps
sbb
and
mov
xchg
mov
cli
ret
outsb
mov
push
inc
nop
or
add
xchg
inc
fdivrl
aam
jmp
pop
insb
adc
and
mov
jbe
mov
out
lret
jl
jl
dec
inc
and
shll
repz
jns
jp
cmp
push
jb
js
sti
jl
mov
jnp
add
or
inc
jg
lock
mov
mov
pop
adc
fnsave
push
lds
insb
loopne
out
xchg
add
fcompl
aas
inc
xor
stos
fadd
cwtl
movsl
adc
add
fcomps
sub
mov
cmovge
int3
scas
mov
mov
cmpsl
or
sbb
popf
adc
insb
add
xchg
push
sbb
push
or
cld
pop
mov
mov
sub
rorl
lock
notl
mov
int3
or
lret
cmp
sbb
jo
repnz
cltd
repz
fstl
or
add
xchg
mov
dec
jno
pop
call
mov
ja
jb
out
std
test
pop
push
pusha
jge
lcall
in
sahf
xor
pop
cmpsb
jge
pop
lcall
in
mov
and
fmulp
pop
adc
cld
rolb
pop
out
rol
mov
rclb
bound
sbb
add
popf
out
imul
js
out
cmpb
xlat
test
bound
ficompl
ja
xor
push
pop
stos
fdivrl
lods
fsubrl
push
xor
out
mov
mov
pop
stc
dec
push
mov
sub
xor
cmp
mov
lds
sub
or
mov
pop
cmp
js
push
sahf
fwait
sarl
mov
stos
in
push
mov
xchg
sbb
xchg
lds
shr
sbb
sbb
xor
es
test
xor
xchg
rol
fidivrs
add
cmpsb
aad
dec
setbe
cmp
or
or
aad
push
mov
fnsaves
js
lcall
or
xor
mov
fdivs
dec
and
and
mov
cmp
inc
js
pop
pop
enter
push
fld
pop
mov
inc
cmpsb
mov
aad
insb
sbb
lahf
mov
lods
ja
mov
ret
inc
lcall
xchg
sub
add
out
lods
stc
xchg
mov
push
xchg
xchg
cmp
or
stos
pusha
aam
lcall
aas
lods
jno
dec
and
xor
add
jo
mov
sub
stos
xor
pop
ss
jae
xchg
cld
xchg
cmpsl
sbb
std
jno
and
push
jbe
fiadds
push
cmpsb
xchg
mov
xchg
sub
xchg
mov
movsl
imul
xchg
popa
mov
in
lahf
mov
lahf
xor
sbb
std
adc
movsl
inc
mov
fisubrs
inc
sbb
sub
adc
jp
and
mov
call
sub
fadd
mov
hlt
mov
ficomps
test
cmp
out
ds
inc
repnz
aas
xchg
mov
lock
xchg
mov
rcrl
loopne
out
add
mov
xor
inc
popf
fistl
mov
sarb
and
xlat
scas
std
pop
pop
call
test
or
push
mov
cmp
cmp
mov
or
lods
sub
sti
inc
pop
repz
mov
pusha
adc
push
push
inc
fdivrp
jl
pop
cmp
es
insb
ja
imul
movsl
sub
cmp
andb
mov
xchg
gs
push
pop
inc
imul
dec
add
xchg
inc
pusha
repnz
xchg
dec
loop,pn
out
xor
and
push
fcmovu
mov
mov
imul
mov
addr16
jle
scas
popf
jbe
mov
add
arpl
rolw
mov
gs
push
getsec
xchg
push
push
sti
fldl
mov
lcall
hlt
insb
sbb
cltd
add
jb
subl
or
push
add
out
je
pop
jnp
inc
ss
outsl
xchg
pusha
mov
shll
fnstsw
sbb
out
cmpsb
xor
loop
xchg
cmp
rorl
xor
imul
sbb
push
jmp
mov
pop
push
mov
mov
push
popf
leave
fisubl
add
push
ds
shll
jle
cld
sbb
test
shlb
das
inc
popa
mov
ja
vmwrite
fcompl
pop
mov
or
sub
mov
das
into
lea
push
xor
inc
push
and
mov
cld
jb
dec
daa
pop
aaa
pop
cmp
mov
sub
lss
push
xor
cmpsl
sub
mov
cmp
mov
push
sub
lret
jno
push
cmp
mov
add
outsl
les
test
mov
notl
cs
push
cmpsl
or
sub
push
jno
push
add
inc
lock
in
movsb
lods
cmp
mov
stc
rcrb
loope
pop
jno
test
jnp
jge
cltd
dec
mulb
call
xor
pop
in
mov
ret
test
fs
push
adc
scas
clc
dec
push
fs
pop
in
jg
popa
rcrl
xor
mov
mov
xor
repz
scas
movsl
mov
cli
jb
inc
adc
mov
push
in
jecxz
sbb
mov
lret
jl
dec
ljmp
adc
sbb
out
xor
stc
cmc
mov
insl
fisubrs
xchg
or
stc
xorl
pop
scas
repnz
push
cmpsl
mov
inc
jb
mov
pop
lea
mov
sub
imul
pop
adc
orb
and
sbb
add
dec
inc
gs
dec
mov
inc
mov
lret
sub
lcall
sarb
filds
leave
dec
adc
sbb
addr16
sti
jnp
jne
bound
mov
movsb
nop
sub
mov
scas
mov
or
es
mov
cmpsb
mull
mov
out
push
add
sbb
ja
sub
add
shlb
mov
jno
shlb
xchg
movsl
pop
sub
push
loopne
aas
xor
shlb
repnz
mov
jno
test
add
and
push
in
add
mov
add
fnstenv
adc
jle
ret
call
sub
imulb
cs
dec
dec
cli
jl
mov
nop
mov
mov
cli
imul
fdivs
sarl
loop
mov
jo
popa
scas
cmpsl
or
mov
xchg
adc
cwtl
inc
cmp
cmp
mov
cmpsb
xor
out
testl
mov
rcll
jae
dec
push
test
out
pop
sub
rol
jle
lahf
jne
cltd
insb
cltd
into
dec
iret
pop
repnz
into
push
mov
pop
cmp
add
xchg
out
xlat
sarb
xchg
mov
push
cmp
cmpsb
aad
xchg
in
push
mov
lret
les
clc
push
adc
sub
lock
inc
imull
das
pop
push
xchg
andb
aas
sbb
cmp
mov
lcall
in
xchg
popf
xchg
mov
cmp
mov
xlat
cmp
cmpsb
popa
or
inc
xchg
dec
lret
add
scas
pop
adc
jnp
adc
xchg
cmp
adc
scas
inc
push
pop
add
lret
or
xor
cmpsb
dec
cld
fs
stos
cmpsl
mov
punpcklbw
and
test
mov
arpl
nop
xor
shl
in
add
test
dec
pusha
inc
fiadds
push
pop
daa
orl
xor
mov
ret
data16
scas
out
adc
aam
cmp
inc
push
mov
mov
int3
sbb
ret
lret
push
jnp
push
out
jecxz
test
je
mov
sbbl
loope
outsl
in
mov
pop
jge
mov
loopne
repz
movsl
and
and
loop
fnstsw
sarl
mov
inc
dec
dec
outsl
pop
std
shll
mov
adc
inc
jmp
jno
sahf
adc
aas
push
in
leave
in
mov
aas
int3
in
cmp
fs
test
xchg
aaa
inc
inc
xchg
int
sub
dec
lret
xchg
mov
pop
punpckhbw
cmpsl
push
dec
pop
cwtl
lea
cmp
lds
pushf
mov
cmp
push
push
mov
pop
inc
mov
and
push
dec
cmpsl
aas
cmc
adc
stos
int3
imul
inc
test
inc
gs
je,pn
popa
add
dec
lret
stos
mov
nop
aam
cmp
sbb
push
pop
popa
inc
je
push
ftst
xor
xor
loope
jb
xchg
in
mov
test
je
dec
into
mov
sbb
jmp
cmpsl
outsl
push
or
insl
mov
mov
dec
js
ss
add
das
fxch
cs
pop
data16
jnp
es
push
lds
jl
hlt
push
mov
iret
push
sbb
fdivp
jp
jae
data16
mov
dec
cwtl
mov
adc
and
cli
sbb
ret
fcomps
jnp
aad
cmc
dec
les
fld
addr16
push
cmp
dec
jge
in
shlb
jmp
jg
add
jge
in
sub
stos
or
fcompl
lea
add
jno
loop
sub
xor
fstps
cmpsl
jns
enter
repz
jg
loop
inc
scas
fisubl
jnp
icebp
out
loop
inc
inc
mov
outsb
dec
cmp
dec
xchg
mov
pushf
cmpsl
jns
jno
or
test
into
rorl
sub
jae
cmp
push
aas
or
adc
and
lods
rol
jle
xor
jbe
sbb
and
leave
inc
test
inc
mov
clc
jbe
fisttpl
imul
and
pop
cmp
scas
iret
imul
sahf
cmpsb
test
dec
pop
in
xor
jge
mov
pop
mov
jp
jae
jns
push
lahf
push
adc
push
inc
out
nop
mov
jl
add
sbb
adc
push
rcrl
data16
lahf
pusha
insb
dec
add
jmp
push
xor
pop
or
pop
xchg
push
xchg
movsb
lcall
or
mov
xchg
lods
sbb
sbb
subl
inc
clc
jg
fnstcw
scas
daa
add
daa
mov
mov
mov
arpl
es
out
xor
cmpsb
ret
push
push
lret
mov
jg
fcomp
movsb
mov
add
mov
sbb
icebp
jge
outsb
fidivrl
pop
test
xchg
cmc
lock
int3
fsubl
push
xor
xchg
sahf
ds
test
mov
notb
rcrb
cmpl
test
enter
lahf
lods
mov
rclb
es
lock
sbb
mov
pop
mov
test
rclb
add
jmp
cmpsb
sub
bound
shrb
addr16
and
loop
inc
jg
dec
aas
push
pop
mov
fdivl
loope
shrl
jle
inc
shll
mov
cli
sbb
push
lcall
jb
outsl
rcrb
stc
test
je
rorl
mov
prefetch
xchg
xchg
push
or
imul
or
or
mov
inc
mov
loop,pn
jle
mov
out
add
pop
movsb
jg
mov
bound
loopne
push
fidivrl
data16
pop
shlb
inc
icebp
lods
sub
lret
mov
lea
xor
push
cmp
mov
adc
imul
bound
dec
test
movntq
xor
popa
scas
push
test
cmp
addr16
repnz
jno
inc
out
out
mov
sbb
in
inc
push
lods
aas
xor
inc
imul
into
lock
and
add
mov
arpl
push
pusha
movsb
js
push
jecxz
aad
popf
push
lods
rorb
pop
xor
ror
iret
jne
or
and
add
cmp
lea
xor
mov
jl
aas
jg
or
faddl
inc
adcb
or
push
mov
dec
lret
cmp
jecxz
loope
insl
repz
lock
xor
add
sbb
iret
sbb
ds
out
clc
or
mov
dec
fists
pop
scas
mov
cmp
or
mov
adc
sub
bound
jbe
push
jmp
add
jg,pt
cmp
pop
cmpsl
int3
pop
jmp
mov
das
ret
fst
ret
out
hlt
outsb
push
dec
or
sub
dec
ljmp
movsb
ljmp
lcall
mov
les
cmp
pop
jne
int3
test
addl
leave
lret
ret
bound
push
xor
rcll
mov
test
mov
in
inc
lds
and
mov
push
in
mov
sarb
divl
iret
imul
dec
xchg
subl
jge
sub
mov
jp
xchg
or
dec
arpl
xchg
push
aaa
xlat
movsb
mov
js
bound
mov
out
ret
mov
lcall
and
shl
out
inc
cmpsb
push
test
or
xorb
cmc
push
jmp
push
dec
xchg
popa
fsubs
mov
leave
push
arpl
sahf
mov
xchg
pop
sahf
iret
fcmovb
and
pop
cmp
sub
sbb
insl
sbb
lds
movsl
lock
cmp
mov
hlt
mov
push
xchg
cmpsb
out
lret
fisubrs
rorb
out
ret
out
jecxz
out
stc
inc
test
int
das
and
push
popf
call
jg
jmp
aad
pop
fbstp
loope
add
cmp
adc
inc
mov
test
test
or
jg
xor
mov
cs
xchg
ss
mov
hlt
daa
aaa
cmpb
scas
shll
sub
das
inc
cltd
xchg
loopne
lods
outsb
clc
test
jge
les
popa
pop
out
mov
dec
cmp
das
add
outsl
pop
dec
insl
xchg
mov
in
push
push
mov
or
sub
sbb
adcl
imul
fmull
sar
les
adc
popf
ljmp
out
and
shlb
adc
xlat
cmp
pop
aam
sbb
sub
jle
data16
push
aas
jge
jno
add
xchg
imul
dec
rorl
into
sbb
adc
or
push
jle
stc
jae
adc
or
jge
fmuls
fchs
jg
out
xchg
or
mov
cwtl
mull
sub
push
cltd
sbb
imul
fwait
imul
jbe
fisubrl
jl
and
test
push
mov
dec
pop
xchg
adc
sbb
aas
popa
cmc
mov
or
dec
cmp
push
lret
je,pt
popf
ret
and
ljmp
cmpsl
xchg
dec
jmp
ljmp
andb
mov
test
aas
cli
lahf
lods
jnp
js
dec
cmp
and
xchg
inc
pop
adc
jl
mov
je
pop
cld
and
jg
pop
cmp
cmpsb
pop
lcall
mov
push
test
ret
call
sbb
sbb
cmp
daa
outsb
inc
xor
mov
lahf
sub
inc
ret
pop
ret
xchg
dec
sub
adc
pop
push
mov
xchg
cmpsl
mov
pop
jne
lds
into
xchg
sbb
scas
lock
insb
push
and
push
inc
lcall
into
mov
fwait
out
inc
stos
lea
xchg
fsubl
jnp
inc
mov
cmp
mov
out
outsl
dec
inc
stos
lcall
repz
cmp
mov
push
inc
inc
adc
jecxz
addr16
pop
repnz
cmc
pop
add
std
ja
arpl
ret
xchg
add
popa
fistl
push
decb
lds
xchg
in
mov
pop
pop
pop
lds
or
inc
add
imulb
inc
fimull
and
sub
mov
add
push
sbb
push
cmp
popa
mov
outsl
lahf
inc
adc
sbb
addr16
iret
xchg
pop
repz
push
inc
je
neg
jo
xlat
pextrw
dec
cmp
mov
or
sbb
pop
jg
jno
and
sbb
nop
call
sarl
pop
pop
adc
pop
rorb
nop
push
fstpl
xchg
aam
into
fisttpl
sbb
jns
stc
add
out
mov
pop
int
int
xchg
mov
push
sbb
mov
xchg
mov
mov
fnstsw
ljmp
or
js
sub
mov
jmp
ret
push
dec
dec
lcall
lea
jmp
inc
jle
jecxz
repnz
inc
loop
or
inc
xchg
repnz
enter
jp
cwtl
test
syscall
fbld
out
lret
sbbl
pop
testb
movsl
mov
enter
inc
mov
mov
cmp
add
mov
stc
cmp
mov
sbb
jno
cwtl
inc
pop
jp
pushf
pop
sub
sbb
outsb
xchg
incl
jns
lods
cltd
push
add
addb
orl
and
inc
pop
add
pop
test
cmpb
inc
lock
push
xchg
add
pushf
lods
xchg
shrl
leave
ja
rorb
sub
mov
cmpsb
faddp
cltd
mov
cmpsb
enter
cmp
repnz
icebp
loope
xchg
push
cmpsb
sub
pop
fldl
leave
out
ror
xor
loop
ljmp
and
xchg
out
loope
push
dec
fnstsw
ljmp
sub
mov
jno
outsl
cmp
mov
bound
dec
mov
cltd
mov
int
xchg
jge
mov
scas
ret
pop
out
jge
cmp
scas
mov
pop
insl
sahf
loop
out
aam
jae
pop
shrl
std
mov
jge
repnz
cmp
sub
clc
lock
dec
and
call
mov
stc
add
cld
push
insb
and
or
jecxz
int
mov
sbb
sub
stc
mov
je
lret
stos
stc
push
jae
push
and
jnp
mov
mov
mov
pusha
add
add
ds
pop
add
push
push
psubusb
push
cmp
mov
ss
ret
jns
sbb
shll
mov
inc
aam
stc
xor
mov
pusha
add
cwtl
loop
lock
xor
mov
and
dec
test
inc
or
in
xchg
and
cmp
sub
les
and
push
clc
push
out
mov
jmp
es
data16
mov
neg
loopne
push
inc
inc
repz
xchg
mov
pushf
dec
cs
clc
mov
inc
aaa
fsts
push
pop
movsl
push
mov
mov
dec
sub
inc
pop
cs
push
sbbb
out
rclb
repz
jge
lahf
jb
fsubp
mov
adc
in
imul
int
xchg
rcll
cltd
pop
inc
fldcw
inc
lea
gs
add
add
sub
imul
xchg
in
or
pop
fdivl
int3
mov
pop
ds
inc
fiadds
adc
sbb
jbe
xor
in
aas
mov
aad
cmp
inc
lahf
push
insl
sub
dec
dec
mov
ja
roll
and
and
stos
jb
dec
leave
mov
or
jecxz
fiadds
hlt
lods
mov
andl
mov
mov
test
xor
arpl
push
cmp
movsl
in
mov
pop
aad
js
hlt
cmp
icebp
jmp
mov
aam
push
jnp
stos
ret
xor
cmp
xchg
sbb
fidivs
aad
or
gs
negl
aam
das
pop
pop
sbbb
call
xchg
mov
or
mov
sub
dec
mov
push
pop
inc
push
setae
stos
push
dec
xor
sub
push
test
jae
cltd
push
mov
pop
loopne
lea
jecxz
std
pop
sub
stos
xchg
sbb
inc
dec
sbb
pop
xor
fidivl
stos
repnz
in
je
cmp
in
inc
int3
jbe
inc
and
cmc
add
js
addr16
sbb
fcompl
loopne
pop
ja
jmp
sti
stos
jns
out
jae
mov
lcall
mov
push
lods
or
dec
cwtl
mov
inc
inc
mov
inc
shll
or
pop
cmp
out
repz
inc
mov
loop
andb
pop
out
stc
push
adc
call
mov
out
add
or
enter
mov
mov
repnz
or
mov
dec
test
xchg
xchg
add
mov
cmp
jnp
pushf
call
push
data16
pop
jmp
sub
inc
push
lret
dec
std
inc
jo
jecxz
subb
mov
cmc
fsubs
mov
add
pop
adc
stos
pop
dec
mov
push
scas
push
into
std
negb
loop
out
nop
inc
jne
inc
out
repz
insb
gs
rclb
xor
push
rcr
mov
gs
cmp
xchg
ds
cmp
inc
jle
push
out
add
imul
push
add
push
mov
xchg
inc
fcoml
test
pop
add
adc
mov
dec
mov
inc
aad
into
push
data16
movsl
leave
ja
jp
sub
jecxz
cmp
xor
fsubrs
cmpb
and
fidivrl
or
push
xchg
shll
sub
in
xchg
movsb
rcll
xchg
mov
test
xor
cmp
or
aam
aad
into
or
mov
mov
movsb
or
or
jp
xchg
fsubs
cmpl
in
iret
jmp
test
sti
test
lahf
in
lock
enter
ret
fwait
sahf
arpl
jo
addr16
xor
insl
mov
test
sahf
shll
mov
lret
mull
test
mov
lret
test
iret
or
or
adc
dec
data16
rorb
push
jbe
add
out
hlt
dec
push
mov
adc
pop
push
cmp
std
inc
fs
jmp
xor
mov
pop
movsl
out
jno
add
aam
imul
sbb
mov
mov
orb
inc
dec
pop
in
imul
sbb
ja
adc
or
add
data16
pop
cmp
push
mov
cmpsb
addr16
add
stos
cwtl
ljmp
fwait
andb
orl
and
inc
xchg
inc
xchg
hlt
lret
jo
pop
in
call
test
xchg
mov
inc
xor
shrl
test
sahf
push
sbb
cmp
clc
sbbb
movsb
in
js
and
sbb
js
dec
jne
outsl
pop
lods
and
mov
neg
imul
cmp
xchg
dec
mov
mov
jmp
jae
xor
adc
mov
sub
jge
push
js,pn
add
push
bound
push
cmp
xor
in
loop
mov
aad
lods
mov
aas
orl
jne
ret
insb
fists
inc
cwtl
leave
push
push
xchg
incl
or
mov
imul
or
popf
movsb
fmull
mov
cmp
lea
adc
fs
les
pop
jb
jne
out
or
int
jno
popa
mov
lds
push
loopne
movsb
inc
mov
dec
aam
xor
sahf
pop
into
push
push
xchg
xor
rep
fcompl
jb
lret
pop
loop
sbb
mov
add
popa
fs
mov
test
mov
jp
ljmp
subl
inc
mov
mov
negb
inc
stos
loop
in
lret
ds
sahf
push
addl
push
or
xor
lea
mov
xor
fcos
test
int
loop
mov
popa
sbb
lods
dec
or
jmp
sbb
cld
js
or
sbb
subb
jno
int3
aaa
push
daa
mov
push
push
lret
lcall
and
mov
xor
mov
lea
test
mov
add
sub
in
es
cmp
lret
cwtl
dec
scas
sub
dec
nop
repnz
xor
out
push
inc
nop
cwtl
pop
fdivs
and
movsb
add
ret
jnp
and
dec
mov
leave
rorb
cmpsl
push
or
adc
and
cwtl
xchg
lahf
fs
fisubl
sahf
cwtl
fsubrl
mov
or
clc
ja
ljmp
push
dec
int
jmp
in
out
sahf
dec
arpl
loop
movsb
int
stos
xlat
je
ficoms
in
in
rorl
jl
adcl
pusha
inc
js
push
xchg
or
sub
sub
pop
js
pop
dec
aad
and
fs
aas
pop
add
rcll
jae
push
push
lods
sub
xlat
jnp
add
xorb
das
or
outsb
scas
ret
in
loope
test
mov
mov
cltd
std
adc
lods
stos
mov
sbb
pop
adcb
mov
enter
movsb
push
cs
mov
push
arpl
popa
xchg
dec
xor
dec
not
push
cmp
mov
in
ljmp
repnz
mov
insb
xlat
into
xchg
dec
and
arpl
aas
push
pushf
arpl
and
imul
repnz
mov
decl
push
mov
mov
sub
or
lahf
loope
es
out
or
mov
jno
call
test
dec
lods
mov
and
fwait
xchg
out
cmp
je
xchg
sub
fstpl
cli
jp
add
gs
cmp
jnp
fnstenv
or
lds
imul
add
jnp
test
push
in
testl
jp
adc
ja
movb
imul
test
lock
adc
dec
je
dec
rcrl
les
shll
clc
mov
imul
mov
stc
mov
scas
sub
lret
stos
pop
adc
sbb
or
movsl
fwait
stc
mov
adc
xorl
aam
mov
aad
aam
and
xchg
jo
xchg
push
mov
jb
lcall
fcomps
mov
cmp
and
mulb
ds
xchg
dec
repz
add
repz
in
enter
pop
stos
ret
mov
xlat
xlat
and
jp
stc
dec
mov
in
imulb
lds
xchg
push
jl
or
movsb
bound
jp
xchg
rcll
dec
cld
cmpsb
imul
adc
sti
dec
mov
rcrl
cmpsb
cmpsl
clc
scas
mov
sbb
outsb
popa
push
mov
mov
mov
and
push
inc
fmul
scas
jb
aad
mov
cmp
fs
pop
xor
mov
mov
fs
mov
jnp
repz
push
jg
aad
jle
push
push
sub
pop
rclb
lcall
adc
rorb
lock
movsl
sub
fisubrs
inc
inc
jno
stos
pop
pop
lods
into
cmpsb
leave
movsl
cmp
inc
pop
mov
mov
les
pinsrw
out
stos
sbb
repnz
imul
xchg
mov
mov
dec
lret
add
mov
cltd
mov
sahf
jle
pop
push
inc
testb
das
shrb
push
imul
add
pop
imul
add
in
add
test
lods
or
pop
inc
sbb
dec
bound
pushf
xor
fmulp
sbb
inc
or
mov
xor
xor
jne
inc
data16
test
push
popf
push
push
test
in
and
cmp
xor
or
dec
jg
mov
push
movsl
fcom
mov
and
add
mov
add
popa
sub
lods
mov
xor
outsl
testb
push
add
mov
xor
xor
test
ja
push
movsb
sub
inc
push
call
jb
cmp
int3
mov
inc
pushf
jo
ror
clc
mov
outsl
cmp
iret
push
aad
pop
fstpl
sbb
inc
adc
push
add
xchg
jno
mov
push
jecxz
test
mov
in
and
js
jae
cmpsb
addb
shll
mov
imul
test
xor
sbb
outsl
jp
adc
cmp
sub
pop
jl
jns
dec
mov
test
xor
popf
mov
xchg
mov
bound
fwait
popf
mov
add
jmp
in
popa
add
lods
add
push
jns
push
mov
mov
pop
pusha
and
fisubs
pop
and
add
mov
and
xchg
das
cmp
mov
push
dec
es
pop
xchg
cmpsb
sub
ret
sub
rcl
pop
addr16
jo
scas
scas
xchg
fdivp
stc
aas
out
add
xor
mov
inc
fstpl
mov
aaa
inc
roll
fistpll
sub
in
add
test
lret
mov
roll
cmp
xlat
bound
js
jne
icebp
sbb
into
lcall
jo
add
scas
add
inc
fs
push
orb
xchg
fs
clc
in
pop
mul
notl
and
or
jge
cmp
sbb
push
inc
into
fwait
dec
mulb
cmp
xlat
imul
inc
jae
jmp
lcall
sarl
ljmp
cmp
push
leave
fsubrs
mov
and
and
insb
adc
sub
inc
cmpsb
es
cmpsl
shrl
incb
out
dec
rol
daa
add
mov
das
je
xchg
cmc
sbb
je
xor
xchg
sbb
sub
das
fimuls
xor
mov
sahf
loope
insb
add
mov
jge
push
add
daa
cmp
add
sbb
sub
aas
pop
cmc
dec
push
jg
pop
pop
sbb
xchg
mov
sbb
icebp
mov
or
or
mov
xchg
cwtl
mov
cltd
xor
cmpsb
in
das
inc
sub
outsl
aad
in
push
mov
dec
scas
je
jns
sub
sbb
daa
repz
xor
pop
call
jb
stos
jecxz
jp
sub
push
mov
enter
push
and
xor
je
je
mov
enter
cmp
inc
lds
and
dec
sub
mov
cld
insl
pushf
xchg
or
and
lahf
bound
cmp
mov
or
cmp
jg
into
mov
stc
mov
xchg
add
scas
pop
outsl
ljmp
jge
fnstcw
xchg
pop
sub
or
push
add
test
fiadds
jl
push
lods
pop
dec
jno
pop
and
bound
pusha
cmp
jp
insb
push
scas
cltd
movsb
cltd
fisubl
shl
mov
aaa
and
ffree
mov
in
inc
test
mov
mov
xor
jns
xor
add
lea
adc
cmp
into
or
mov
cmc
add
into
add
mov
stos
xchg
pop
jl
aas
iret
push
cwtl
adc
cld
into
test
jle
stos
inc
nop
inc
lahf
addl
movsl
mov
mov
mov
mov
incb
mov
mov
loope
test
scas
aas
mov
sbb
cmc
or
jmp
xchg
jbe
imul
cmc
scas
adc
and
imul
or
sbb
cld
shr
add
pop
lods
pop
sahf
jle
aaa
outsl
fadds
xchg
xor
mov
cmc
jo
ficoml
movl
popa
aam
adc
arpl
iret
imul
pop
popf
lock
adc
movsl
stos
psllw
bound
dec
mov
inc
or
lods
fisubrs
push
hlt
ret
mov
repnz
mov
shr
inc
jg
push
cmp
mulb
and
lahf
orb
mov
push
or
xchg
mov
lcall
inc
sub
lock
jmp
int3
mov
jo
mov
mov
xor
xchg
mov
sub
jnp
dec
dec
lds
dec
add
mov
push
xor
int
loope
xor
xchg
or
mov
divb
pop
je
sbb
mov
sti
jnp
xor
cwtl
out
mov
inc
das
mov
xchg
sub
inc
sub
dec
mov
popa
test
push
int
sbb
nop
scas
mov
mov
push
jg
sar
iret
or
divl
gs
in
in
cmpl
or
jmp
fwait
sbb
fiadds
rcrl
fcoms
push
mov
push
mov
repz
push
imull
sub
jae
push
mov
cmp
and
jae
stos
cmp
and
mov
xchg
popf
jbe
xor
push
sub
movsl
jg
in
jbe
xor
lcall
mov
nop
adc
out
add
sbb
pop
mov
pop
mov
out
mov
shrl
fbstp
stc
push
mov
jb
sbb
sub
inc
rcr
inc
push
incb
daa
lods
mov
jb
aas
leave
scas
fmuls
adc
outsb
daa
push
inc
cmp
repnz
pop
mov
cli
sti
movsl
rorb
sarb
pop
daa
stos
or
ret
mov
ljmp
and
adcb
scas
jmp
daa
adc
ss
imul
rcll
inc
xor
ror
dec
adc
pop
rcrl
cmp
push
sub
and
xlat
pop
lods
adc
sub
jno
inc
push
ja
movsb
push
popf
dec
in
xor
jl
sub
inc
pusha
mov
in
push
aam
leave
jns
out
addr16
or
ror
in
cmp
mov
mov
sub
cmp
fistpll
jge
cmp
aaa
xorl
xor
jno
in
xchg
xlat
ljmp
out
jg
aaa
sub
loop
jnp
push
jle
out
les
gs
popa
mov
xor
shrl
sti
sbb
icebp
xchg
outsb
sub
cmp
mov
outsb
mov
lea
jecxz
lock
adc
or
inc
call
in
popf
or
mov
movsb
xor
dec
test
ds
or
jae
mov
js
push
in
ljmp
and
imul
push
addr16
xor
or
add
jne
jmp
ret
push
push
pop
fs
imul
addr16
mov
cli
test
scas
jns
fsubrl
mov
aad
loopne
push
push
clc
sbb
shl
pop
mov
xor
lea
das
test
mov
or
das
in
jge
push
cmpsl
adc
in
imul
dec
or
mov
mov
inc
or
mov
cwtl
fcoml
xchg
pusha
xor
loopne
cmp
je
adc
mov
or
fwait
dec
mov
mov
bound
das
rcll
packsswb
pop
jne
xlat
out
pop
and
mov
out
push
cs
inc
cmp
adc
sub
mov
popa
js
jmp
add
int
es
mov
out
aaa
jo
int3
adc
inc
jmp
jo
push
and
sbb
imul
push
loope
into
push
fldenv
scas
mov
add
jmp
cmpsl
test
leave
mov
inc
frstor
repz
or
std
lds
sub
cmpsl
jg
add
sub
push
mov
mov
jnp
cwtl
es
movsb
test
stos
loop
ss
pop
pusha
fisttpll
into
mov
loop
ljmp
pop
dec
lahf
sbb
ljmp
jp
push
fistl
jl
jmp
pop
into
es
popl
sub
jg
pop
cmp
add
fstl
je
mov
adc
xchg
add
mov
inc
jb
out
out
and
mov
es
adc
movsb
and
fiaddl
fnsave
loope
mov
mov
lods
mov
sub
out
scas
inc
push
mov
repnz
aaa
mov
xchg
out
aaa
xchg
out
pop
jge
sbb
out
sbb
sbb
and
fwait
test
xchg
xchg
jmp
in
sbb
rclb
xor
pmaxub
mov
adc
sbb
dec
xchg
lcall
push
test
mov
fisubl
push
inc
xlat
and
mov
pushf
jle
push
and
dec
mov
std
mov
out
aad
fsts
dec
imul
dec
les
arpl
enter
mov
leave
ss
xchg
pop
ret
adc
pop
stc
aaa
ret
cmpsb
cwtl
inc
shl
xlat
pop
movsl
fsubr
mov
jmp
and
or
inc
and
lods
mov
dec
outsl
adc
xchg
mov
xchg
mov
popf
stos
ljmp
movsb
out
mov
inc
push
mov
inc
fistps
repz
pop
adc
cmp
xor
adc
pushf
mov
cmp
push
push
out
in
jg
out
les
push
push
dec
fwait
int3
and
inc
sbb
jl
in
sbb
mov
cmpsb
xchg
adc
in
push
jb
or
decl
jns
ds
popa
cmp
dec
jecxz
lock
sbb
pusha
mov
lods
ficoms
adc
out
cmp
jbe
cld
mov
inc
lret
int3
movsb
movsl
in
mov
js
std
push
cmp
xchg
and
or
sbb
ror
leave
sub
les
and
ret
jecxz
stc
cmpsl
xor
insl
and
fs
into
lds
sahf
iret
add
lret
testb
xlat
cwtl
popa
add
outsl
cltd
mov
pop
test
mov
sub
xor
adc
jge
shl
push
push
push
or
les
insb
adc
xor
and
loopne
das
add
adc
jno
xchg
mov
loop
or
lods
jle
cmp
aam
outsb
sub
sub
iret
ss
std
dec
cmp
cwtl
das
mov
cmc
or
nop
fisubrl
cmpsl
std
mov
leave
lock
push
inc
lds
jmp
add
in
out
out
clc
jecxz
mov
dec
add
shlb
mov
stos
stos
ljmp
lea
inc
in
sub
jmp
fldt
or
sub
add
push
lock
inc
arpl
push
or
jmp
jne
and
and
mov
in
xchg
pop
stc
or
push
or
lods
pushf
aaa
in
dec
push
mov
dec
dec
and
ljmp
adc
movsl
rcrl
push
test
sti
cld
daa
cmp
push
mov
ljmp
hlt
jmp
addl
jge
mov
jmp
mov
stos
ret
daa
mov
scas
dec
mov
fisttpll
adc
imul
jle
push
jns
decl
cmp
lock
adc
movsb
popf
xor
add
in
ret
test
outsb
iret
aaa
push
fisttpl
dec
add
pop
adc
daa
jp
aas
and
scas
leave
sub
cmp
jne
jmp
jg
in
cmp
hlt
mov
xchg
mov
pop
out
pop
fsubrs
popf
mov
push
and
clc
imul
ds
call
cmp
inc
outsb
nop
out
in
stos
faddl
out
adc
outsb
ja
cmp
pusha
fs
mov
mov
dec
sbb
scas
adc
xchg
sbb
jne
testl
dec
sub
xchg
rcl
push
and
and
cmpsl
stc
or
jle
nop
test
sbb
jne
imul
add
cmp
adc
pop
sarb
nop
add
pop
movsb
movl
in
jp
hlt
ss
inc
outsb
int3
mov
insb
into
loope
or
and
mov
push
push
sub
cmp
xchg
les
cmpl
movsl
out
xor
pop
loopne
imul
xor
mov
scas
aas
es
dec
xchg
int3
mov
push
sub
loopne
rorl
cmpsl
sahf
outsb
add
pop
aad
cmpsl
das
or
out
pushfw
xor
pop
dec
pop
push
nop
daa
stos
lea
xor
adc
adc
push
and
mov
xor
fisubl
lock
fcomps
mov
mov
pop
sub
cmc
xlat
jp
mov
and
mov
cmp
pop
xchg
out
sbb
out
xor
sbb
xchg
lods
jl
xor
sbb
into
in
dec
rcl
repnz
push
mov
cmp
scas
and
lock
dec
fmull
pop
cmpl
dec
push
adc
pop
rcrb
add
sbb
fldcw
lods
push
xchg
push
out
xor
mov
ss
sarl
js
fadd
loopne
push
pop
outsb
add
mov
shll
inc
push
aaa
repz
aas
push
add
and
adc
pop
cmpsb
outsb
pop
mov
mov
push
cld
popa
push
pop
pop
fs
xor
push
push
push
lds
test
jnp
cli
dec
lds
xchg
xchg
into
mov
mov
xchg
sbb
and
lock
lret
sub
movsb
gs
fisttpl
or
xchg
xorb
push
or
cs
mov
out
or
xlat
fwait
stc
xchg
push
push
loopne
and
mov
sbb
and
lods
dec
inc
sbb
insl
sbbl
cmp
test
out
cmp
or
ret
push
sub
dec
in
push
push
xor
js
mov
std
or
mov
mov
mov
pushf
sarl
fbld
add
and
arpl
inc
movsb
leave
mov
mov
out
dec
xchg
test
pusha
pop
inc
add
sbb
testb
xchg
enter
dec
ret
add
adc
test
mov
mov
punpckldq
mov
data16
xchg
pushf
jo
jl
sub
cld
push
jnp
inc
mov
test
and
nop
mov
push
aam
int
sbb
lods
sbb
inc
rorb
pop
movsl
popf
fists
and
movsb
mov
mov
fisubs
cmp
pop
dec
jp
push
push
mov
jmp
mov
stos
mov
mov
inc
pop
shl
sub
outsl
cwtl
or
fwait
sub
aaa
add
mov
xor
fstp
adc
inc
rolb
gs
data16
inc
movsl
pop
sub
enter
rclb
in
fldcw
mov
lret
mov
mov
push
mov
push
es
xor
push
push
outsb
inc
dec
push
add
test
rorb
loopne
loope
push
mov
adc
jno
subb
xor
pop
push
call
fsubs
lcall
shl
sti
mov
sbb
cs
pop
xor
push
dec
hlt
adc
xchg
testb
dec
dec
shl
enter
dec
scas
cli
fldl
jmp
pop
xchg
pop
inc
pop
sti
int3
movsb
ja
imul
test
clc
inc
sbb
das
adc
xor
out
mov
xor
cli
mov
mov
stos
xchg
or
rolb
sahf
mov
adc
hlt
push
lock
and
ffreep
add
shrl
mov
sbb
mov
int3
stc
sub
xchg
jns
out
stos
ds
jle
outsl
push
adc
sub
insb
popa
sbb
jge
ljmp
and
mov
shll
jb
jbe
rorl
xor
and
std
push
fldl
pop
pop
cmc
popf
lds
xchg
add
ja
jno
out
fs
cmp
xchg
sub
aaa
cmp
mov
in
lods
xchg
mov
and
cld
cmpsb
xchg
int
stc
xchg
cmp
push
cmp
jecxz
jbe
mov
lods
clc
cwtl
lcall
out
mov
cli
fs
jg
pop
ds
mov
fstpl
xchg
inc
leave
iret
mov
lret
shll
cld
int
movsl
sbb
lock
leave
xor
loope
lods
enter
dec
leave
xorl
pop
das
and
xchg
in
pop
mov
push
in
dec
push
jl
sbb
dec
int3
test
aas
cli
push
fs
and
es
ss
push
js
in
pop
or
enter
test
mov
add
insl
and
das
mov
ficoml
add
call
inc
negl
faddl
mov
mov
out
sti
sbb
jo
out
inc
pop
or
mov
xor
adcb
sub
into
inc
fcomps
mov
mov
js
mov
je
aam
or
out
test
cld
fisubs
movsb
cmp
mov
dec
mov
adc
and
jb
lahf
mov
mov
imul
gs
sub
jl
sbb
ja
jge
lods
popf
sbb
add
call
cmp
add
pop
pop
shll
andb
sbb
addb
lcall
rcll
mov
inc
push
scas
movsb
aas
pop
into
dec
adc
add
ret
popl
adc
pop
mov
gs
dec
fiaddl
mov
mov
xor
aas
jg
bnd
lock
ret
push
and
outsl
cmp
xchg
sbb
sti
mov
outsl
xchg
inc
test
in
mov
jecxz
in
mov
bound
sub
xchg
mov
lahf
imul
test
inc
lods
cmpsl
inc
push
jb
rcll
jo
mov
mov
pushf
or
mov
lret
cmp
loope
fistpll
or
fisttps
into
adc
aam
ror
test
push
add
dec
and
sbb
ret
gs
mulb
fldcw
xchg
xor
sbb
push
int3
test
push
call
lea
sbb
and
fs
ret
jecxz
fsubrl
xchg
rcll
jnp
sub
ja
sub
pop
mov
pop
mov
adc
mov
cmp
fbld
pop
cmp
cld
ret
out
idivb
and
ds
out
push
mov
and
lret
push
inc
mov
filds
xor
and
sub
xchg
pushl
outsb
and
out
test
xchg
push
push
shl
es
fwait
mov
xchg
sti
cmc
push
adc
js
fcoml
ret
jle
out
push
std
aas
sbb
pop
push
outsb
dec
sbb
ss
sbb
ss
mov
sbb
mov
xchg
xor
pushf
mov
clc
sbbl
inc
jg
hlt
ret
xchg
lock
scas
jl
in
stos
add
ds
xchg
sbb
cwtl
pop
leave
xor
js
iret
pop
data16
aas
xor
cmp
popf
cmpb
or
daa
xor
shll
ljmp
dec
mov
cmc
stc
movsl
faddl
mov
stos
into
mov
test
sar
dec
roll
xchg
sub
imulb
loop
std
or
insl
mov
mov
pop
lcall
push
mov
sub
mov
and
mov
je
jne
int
lahf
mov
xchg
cld
fcmovne
ja
test
xchg
dec
pop
and
xlat
ror
adc
sbb
lahf
mov
ret
mov
mov
je
pushf
mov
add
xchg
fwait
aaa
cltd
out
cmpsl
fcomps
cld
and
and
adc
les
pop
mov
xchg
mov
out
data16
aad
sub
jmp
mov
daa
adc
xor
cmpsl
sbb
mov
stos
or
cmc
jbe
inc
js
cmp
jb
hlt
inc
movsb
mov
sbb
mov
jno
jge
scas
bound
outsl
ss
add
push
add
repz
lds
in
add
orl
mov
das
sbb
cs
fs
jge
movsb
cmp
inc
test
add
adc
adc
fmull
add
xchg
in
jns
and
gs
push
mov
and
dec
cmp
bound
cmc
sub
insl
fldl
adc
cli
shlb
imul
pop
xchg
dec
mov
xor
fnstsw
loopne
and
inc
pop
pop
movsl
inc
rcrb
push
aas
insl
xchg
das
stos
mov
insb
orb
ret
out
adc
mov
mov
sub
xor
icebp
dec
add
stos
sbb
push
jae
adc
int
mov
sahf
popl
call
into
not
mov
cli
and
jle
je
and
test
aad
repnz
dec
push
stos
lahf
pop
inc
and
and
jecxz
adc
popa
cmc
pop
and
das
push
leave
fs
addb
mov
jl
cmp
das
dec
mov
mov
pop
or
popa
xor
mov
out
fbstp
mov
shrl
jne
add
cld
jns
xchg
stos
cltd
cltd
in
shlb
and
fnstsw
sbb
or
and
cltd
push
es
xor
data16
xchg
movsb
push
lea
inc
and
in
test
and
or
popf
add
mov
jecxz
dec
and
cld
push
sub
add
rcrl
jecxz
or
mov
lea
jo
push
dec
sbb
sub
inc
push
out
cld
cmpsb
js
adc
into
rolb
inc
ret
jl
das
inc
ja
das
clc
fcmovnbe
stos
push
jle
adc
rorl
stc
sub
cmp
jg
loope
imul
inc
movsl
movsb
js
pusha
movsl
jne
inc
jmp
xchg
dec
push
add
push
push
inc
jg
jecxz
cld
leave
jmp
xchg
loopne
pop
hlt
push
sbb
pop
mov
xor
pop
cmc
cs
fimuls
fwait
out
add
push
pusha
add
add
cmp
dec
jae
push
sbb
mov
mov
push
and
pop
int3
fstl
repz
ficoms
pop
into
mov
sub
dec
dec
sub
leave
shlb
pop
gs
pop
adc
cld
push
pop
sub
dec
andb
xchg
insl
scas
xchg
aad
jne
inc
imul
sbb
ljmp
repz
stos
imul
leave
pop
cmc
push
clc
stos
xor
pop
daa
in
out
rorl
jns
cmc
inc
scas
mov
or
sbb
adc
nop
push
xchg
scas
xchg
shr
and
bnd
ja
gs
stos
mov
mov
sbb
jne
outsb
imul
sbb
mov
xchg
mov
mov
call
sarb
sbb
andb
in
mov
stos
sbb
mov
push
sub
aad
push
in
sub
repnz
test
popa
les
daa
adc
aam
leave
push
jnp
in
push
cli
aaa
fcomi
jne
and
das
sarl
imul
js
and
fs
test
adc
fsubrs
outsl
dec
xchg
pop
inc
add
sbb
out
lods
and
mov
adc
inc
rclb
out
and
sub
fldcw
stc
icebp
add
push
jg
fisttpll
xor
jb
dec
pushl
outsb
and
into
and
push
sbb
lods
cli
dec
cwtl
mov
cmp
dec
inc
ja
out
test
cmp
adc
or
dec
cli
or
ss
or
in
dec
fwait
leave
fwait
movsb
fldcw
or
jo
adc
stos
out
stos
fwait
popa
inc
sub
stc
mov
xchg
roll
inc
dec
out
pusha
mov
or
mov
lret
adc
fnstenv
push
sbb
stc
mov
popf
out
push
cld
in
push
lods
jno
loop
out
cmp
jae
or
nop
scas
icebp
fldt
sahf
xchg
push
out
popa
adc
dec
fcmovbe
test
clc
movsb
jno
cmp
pop
rcll
mov
pop
xor
inc
mov
shlb
add
cmpsl
jmp
iret
push
inc
mov
in
sub
pusha
ja
insl
adc
push
mov
ss
xlat
cmp
stos
xchg
pop
inc
add
mov
lock
incl
pusha
or
or
jecxz
in
sub
movsl
dec
push
sub
iret
enter
sub
out
mov
jno
fcoms
xor
sub
dec
mov
insl
scas
xchg
aaa
xor
fbstp
dec
cwtl
js
inc
daa
add
jns
adc
dec
xor
test
lahf
daa
jg
or
rcll
lahf
sub
arpl
clc
dec
xchg
test
mov
rclb
movsl
cmp
insb
in
cld
mov
mov
aaa
inc
mov
mov
jne
inc
cmc
add
or
add
loopne
sub
push
in
cmp
push
aaa
xor
jmp
sub
insl
in
je
xchg
mov
mov
cmpsb
mov
test
push
pop
imul
stos
adc
sub
or
push
push
sbb
inc
loop
xorb
or
push
adc
xchg
lock
and
fnstcw
test
fidivrl
pop
xlat
adc
sbb
movsb
push
mov
icebp
scas
lods
xchg
aad
add
ds
rcrb
stos
mov
out
clc
add
mov
and
insl
divb
cwtl
rcrb
sbb
sub
fcmovbe
hlt
mov
or
sub
inc
cmp
jg
popa
out
jecxz
adc
inc
or
addb
push
incb
add
out
sub
add
push
ljmp
sub
sahf
inc
sbb
xchg
jle
mov
imul
mov
movl
cmp
out
xchg
notl
lahf
xchg
pop
inc
xor
sub
aam
mov
leave
jle
jl
or
and
shrb
ret
dec
mov
test
loopne
push
and
mov
arpl
xlat
popf
sahf
std
incb
jno
lret
lcall
sbb
outsb
adc
ficoml
mov
dec
pop
dec
dec
jmp
lock
lods
cmc
and
and
lahf
fs
add
repnz
pop
aas
adc
sbb
pop
adc
scas
aas
cld
jmp
out
mov
insl
lea
popa
sti
ffree
lahf
lcall
xor
mov
lahf
add
adc
cltd
push
push
cmp
fisttpl
out
sahf
push
mov
out
push
or
mov
mov
inc
push
outsl
xlat
in
leave
push
xchg
mov
mov
cwtl
push
mov
cmp
sbb
add
jnp
mov
daa
stc
sti
int
mov
adc
cmp
add
push
xchg
mov
dec
cltd
es
or
lahf
xchg
cmp
out
fldcw
jo
jmp
push
les
inc
icebp
mov
adc
in
mov
daa
iret
adc
out
mov
push
fdivrs
out
xor
or
mov
pop
les
in
or
fildll
test
scas
fcoms
xlat
ja
and
aas
pusha
xchg
int3
imul
mov
cs
imul
jb
jl
outsl
xchg
clc
arpl
sub
xchg
decl
pop
clc
popf
mov
inc
pop
sub
ja
fwait
mov
sar
mov
sbb
shll
mov
pop
nop
filds
pop
stos
repnz
sub
adc
les
inc
fidivl
mov
and
ret
cmp
mov
pop
mov
and
lret
mov
pop
rorb
jno
aad
xchg
and
pop
shlb
cmpsl
and
dec
cmp
sub
mov
lcall
movsl
inc
repz
mov
mov
aam
mov
mov
push
std
dec
pop
popf
and
mov
mov
outsl
pop
fs
aaa
call
rorl
sti
mov
xchg
push
daa
mov
pop
or
cmp
push
out
push
js
inc
mov
les
lret
std
out
push
test
xor
loope
or
mov
daa
movsb
jne
popf
aaa
jbe
filds
dec
mov
mov
ss
pop
jnp
push
sbb
les
or
add
mov
std
or
xor
shlb
push
out
jo
fmull
sub
push
dec
into
pushf
int
insb
hlt
imulb
push
mov
and
and
xor
int
lret
mov
mov
ret
dec
lcall
push
aas
gs
pop
fldt
stos
dec
ss
test
xchg
lahf
dec
adc
xor
push
lods
cld
jns
push
pushf
sar
outsl
loopne
xor
dec
dec
add
out
push
repnz
lds
xchg
xor
imul
movsl
insb
dec
mov
add
divb
enter
mov
pop
xchg
xor
xchg
loope
leave
daa
cmpsl
je
stos
jno
stc
mov
inc
xlat
sbb
sbb
fs
pushf
pop
scas
sbb
mov
mov
push
jo
sbb
stos
out
or
inc
bound
imul
ljmp
sbb
pop
and
push
in
call
push
dec
test
out
stos
pop
mov
or
cmp
xadd
jno
out
mov
fwait
sbb
out
cltd
sbb
mov
lret
aas
daa
mov
sub
xor
push
lret
imul
add
push
jecxz
xchg
lea
sbbb
and
jns
pusha
push
mov
or
mov
mov
int3
in
push
loop
push
mov
popa
sub
jge
jmp
xchg
dec
scas
jbe
sub
jbe
mov
push
pop
test
jg
mov
xchg
test
out
inc
mov
mov
jp
jge
mov
mov
mov
lods
out
das
iret
cmpsl
push
xor
ja
stos
mov
mov
loop
popa
mov
fmuls
je
pop
lret
fsub
insb
ficoms
dec
and
es
jne
ret
jb
mov
clc
andl
mov
jge
pop
int3
bound
pop
shlb
addr16
std
fdivrl
or
jno
enter
push
out
movd
ss
push
into
sbb
adc
lahf
bound
rclb
mulb
push
or
xchg
fistps
mov
loopne
faddl
aad
pop
fbld
sarb
fstpt
lahf
inc
jae
xorb
or
lods
mov
jb
mov
push
negb
out
lods
inc
daa
mov
div
cmp
dec
dec
divl
pop
in
mov
push
fcompl
cltd
mov
jmp
cmp
out
xor
fnstsw
rcrb
xchg
daa
sahf
push
lds
outsl
mov
mov
mov
sar
adc
int
adc
xchg
xchg
push
pop
rcrl
loop
push
loope
scas
negl
jmp
testb
pop
push
je
mov
push
mov
or
mov
add
fists
cmp
or
fdivrs
or
push
test
mov
jno
and
test
push
jne
int3
mov
inc
push
xlat
daa
test
ret
ss
pusha
call
pop
add
pop
imul
mov
jnp
pop
dec
sbb
jle
jno
testl
jbe
aad
mov
fdivr
jbe
mov
mov
faddp
enter
mov
sbb
pop
add
cltd
ffreep
or
aaa
punpckhwd
inc
mov
push
loopne
xchg
jb
and
loopne
mov
or
aaa
push
pop
lret
push
lds
cmpsl
adc
mov
nop
adc
orb
jne
push
or
roll
sub
or
mov
stos
ljmp
cmp
push
sbb
out
cmp
push
mov
adc
insb
mov
add
outsb
jl
mov
in
or
leave
es
or
cmc
dec
cmp
jg
and
and
or
sbb
fbstp
rep
int
out
jno
cld
mov
cmp
jge
mov
clc
test
dec
pushf
jp
movsl
aas
mov
out
popf
sbb
mov
lret
ret
sbb
test
xor
cmc
stos
in
push
lods
sub
mov
inc
outsb
mov
movntq
and
arpl
jecxz
pop
sbb
jno
mov
jecxz
jbe
dec
push
dec
mov
sub
sahf
xor
aas
sub
xchg
ret
push
sbbl
pushf
lock
cs
sub
push
cwtl
and
lcall
loope
inc
add
out
lcall
addb
inc
test
not
nop
adc
sub
std
inc
iret
adc
data16
dec
sub
rcll
out
adc
insb
xchg
lds
add
adc
fs
xor
mov
icebp
add
fists
dec
leave
jg
pushf
iret
mov
data16
or
out
xchg
xchg
mov
add
adc
or
ret
test
lahf
fs
stc
rorl
xchg
fstpl
nop
xchg
clc
mov
lods
ljmp
nop
subb
xchg
sbb
negb
loopne
lcall
dec
cmp
outsb
es
outsl
das
iret
mov
or
or
test
ja
push
data16
stc
dec
mov
pop
dec
dec
pop
fldpi
out
and
inc
rcr
push
loope
xor
call
lock
dec
push
push
movddup
and
xor
jge
inc
test
inc
jmp
sub
movsl
push
int
add
rcr
data16
jno
cmc
or
fwait
icebp
xor
nopl
insl
out
fbstp
push
adc
mov
add
mov
mov
imulb
std
sbbb
popf
push
notb
mov
sahf
pop
leave
xchg
jns
add
adc
pop
adc
dec
mov
dec
push
es
add
adc
sarl
nop
movsl
and
ss
test
or
cltd
sbb
jae
lret
imul
pushaw
les
sahf
fstpl
mov
dec
lea
mov
inc
or
xor
andb
repnz
pop
loope
rcll
push
push
aaa
inc
add
inc
mov
add
sub
ficomps
repnz
outsl
add
pushf
adc
jns
pop
test
stc
arpl
loope
pop
lock
xor
int
jmp
cmp
insl
sub
mov
das
arpl
jns
inc
mov
inc
popa
mov
dec
dec
mov
or
pop
pop
imull
pop
fistpl
inc
hlt
cmp
pop
iret
pop
pop
xchg
cmc
mov
jo
xor
pop
xlat
fxch
lret
js
xlat
in
fidivrs
push
test
adc
ljmp
imul
fistl
and
and
or
loope
loopne
sti
push
push
outsb
ja
mov
rclb
push
scas
loope
aaa
lds
cmp
add
ja
mov
in
out
sub
push
cltd
fstpt
sbb
cltd
mov
movsb
loopne
jg
call
or
and
mov
or
push
adc
jns
cld
xor
sub
cwtl
movsl
outsl
jnp
dec
push
stc
push
std
lret
cwtl
je
xchg
and
push
mov
inc
lods
pop
hlt
out
jnp
inc
dec
xchg
mov
out
aam
cmp
bound
scas
jne
movsb
xchg
push
les
arpl
call
mov
in
mov
lahf
inc
cmp
pop
fmull
scas
decb
cmc
xchg
iret
sbb
mov
std
sbb
mov
test
test
mov
cld
xor
push
in
inc
data16
aas
mov
push
test
cmp
and
mov
pop
push
adc
aas
cli
mov
mov
pop
aaa
jecxz
js
lods
pop
cmp
insl
lcall
lahf
xchg
scas
sahf
in
clc
call
lfs
imul
jb
xor
xor
pop
and
inc
cmp
mov
mov
nop
or
ljmp
aam
mov
ja
jne
and
sahf
icebp
sub
add
sbb
mov
sub
xor
mov
adc
shrb
add
xchg
rolb
sbb
loopne
out
mov
sbb
fs
mov
scas
xchg
cltd
mov
xor
ficompl
ljmp
icebp
insl
inc
aas
sarl
repz
mov
bnd
sti
or
call
jo
clc
mov
cmp
ficoml
inc
push
push
cld
xor
mov
or
jp
pop
cmp
mov
out
mov
scas
pop
out
ss
jg
test
add
add
stos
sub
int3
notl
pusha
shr
sub
cmp
pop
xchg
in
movsb
or
pop
lret
fdivs
ja
movsl
nop
aas
jne
push
pop
add
insl
xlat
aad
fs
mov
add
sbb
int3
ret
jl
lret
out
inc
stos
and
inc
pop
inc
cs
dec
pop
push
les
popa
or
cmp
jl
or
cmpsl
aas
adc
rorb
test
cmpl
nop
neg
cmpsb
and
fdiv
dec
dec
shrb
jg
stos
mov
fbstp
xlat
insl
push
loopne
ret
pop
inc
mov
hlt
mov
aaa
mov
stc
cmp
sub
adc
adc
lods
fistl
sub
in
pop
cmp
lea
jnp
adc
mov
sbb
lds
das
test
mov
jmp
popf
push
mov
sbb
aaa
ret
add
jmp
adc
cmp
push
and
xor
push
iret
or
mov
rcr
sbb
jne
sub
insb
and
xor
xchg
pop
gs
pop
fs
mov
jne
adc
sub
push
cmp
test
inc
or
movsl
ss
jl
push
andb
inc
xchg
leave
sub
cmp
mov
das
cmp
dec
test
out
xor
mov
testb
test
ret
int
xchg
test
cs
gs
sti
add
adc
ljmp
jl
out
xor
jp
or
daa
mov
in
sbb
loopne
or
fwait
ret
dec
xor
out
stos
or
aad
pop
testb
jg
arpl
push
cli
xor
jecxz
pop
pop
ds
in
sbb
mov
ud1
outsb
insl
push
jp
popa
xor
jae
fwait
xchg
sbb
push
xor
mov
fisubrl
xor
push
sahf
or
push
loop
pop
int3
mov
and
and
jne
inc
xor
loop
push
mov
xchg
sub
mov
std
jle
sub
sbb
fs
add
mov
gs
out
cmp
icebp
cmpsb
testl
cli
adc
jno
xor
cmp
fsts
decb
seto
mov
into
jno
jecxz
movb
insl
gs
sti
rolb
jl
inc
stc
loopne
stc
pop
xchg
cli
pop
inc
stc
inc
jo
jbe
ror
cmp
fwait
not
out
cs
call
popf
lea
lsl
cltd
add
ja
jg
loope
inc
mov
or
push
cmp
aad
aam
inc
mov
lret
jmp
and
cmp
daa
insb
out
int3
add
jbe
daa
dec
sub
ja
fcmovne
or
cld
outsl
out
cmp
repz
push
repnz
cmp
cmp
mov
cmp
lods
jmp
cld
jle
inc
xlat
pop
rdtsc
dec
or
out
lahf
jle
sub
xor
add
js
cmp
xchg
jmp
jecxz
push
icebp
jl
scas
stos
add
out
lock
mov
sbb
lds
sub
mov
mov
cmp
dec
jb
jne
mov
nop
jmp
sub
stc
mov
and
mov
jecxz
sub
mov
add
push
fistpll
scas
jae
jmp
stos
fimull
inc
adc
or
sbb
fwait
dec
xor
push
pop
icebp
pop
outsb
push
sbb
add
std
lcall
test
imul
mov
les
sub
sbb
ret
push
mov
sbb
jmp
mov
addr16
mov
xchg
movsb
in
add
and
adc
xchg
xchg
cmp
cmc
repz
push
inc
test
inc
lods
outsl
xor
jo
add
das
mov
fcmove
lret
mov
push
push
push
sub
rclb
mov
loope
or
lea
std
lds
cmp
inc
dec
rclb
dec
xlat
je
sbb
dec
or
jecxz
xchg
mov
jo
cmp
add
pushf
xchg
mov
aas
arpl
outsb
insb
scas
mov
scas
jecxz
stc
push
pusha
xchg
xor
outsb
test
cmc
ret
adc
cmp
imul
or
sarl
negl
mov
jb
inc
push
in
jb
adc
push
lahf
loope
xchg
mov
pop
fstps
data16
inc
lock
jmp
push
jb
ret
or
dec
stos
jno
dec
out
in
cmc
xchg
jp
add
stos
cs
dec
shr
negb
aam
fcmovnu
and
ja
aam
loope
mov
test
fucom
sub
loope
dec
dec
push
adc
jp
push
gs
xchg
fsubrl
push
mov
hlt
or
mov
jnp
add
add
jne
add
fistl
lret
mov
rcll
rorb
push
adc
cmc
jo
cmpsb
idivb
shufps
jge
xchg
xchg
andl
gs
lret
ljmp
xor
push
dec
mov
pop
divl
jb
add
push
int
xor
lahf
jnp
xchg
sbb
repz
sti
in
sti
mov
push
fdivs
jl
lock
ret
dec
shl
lcall
out
xchg
sub
jl
pop
les
mov
lods
push
cmp
aad
fcomps
push
adcb
inc
mulb
mov
stc
movsb
cmp
push
fistps
inc
jecxz
fcmovu
mov
mov
insl
cmpb
push
test
jnp
js
loopne
sarl
rcrl
sbb
pop
out
cs
rcrl
pop
jl
xor
pop
lret
aas
xchg
pop
mov
mov
addr16
enter
andb
pop
pop
sbb
push
dec
lods
movsb
stos
mov
cld
mov
stos
idivl
in
in
cwtl
sbb
inc
xchg
das
cmp
inc
xchg
inc
sub
aam
and
or
ds
sti
dec
inc
jae
sbb
loopne
insb
jecxz
testl
dec
cltd
sbbl
push
ret
adc
jne
nop
and
sub
jmp
mov
jl
mov
pop
sub
jmp
clc
cs
sub
lods
add
idivl
in
fs
dec
repz
mov
aaa
xor
jbe
aad
inc
repnz
dec
dec
jns
sbb
std
js
orl
iret
mov
cmpsb
sahf
sbb
jbe
rcrl
fwait
pop
adc
cli
cld
xchg
jbe
test
incl
or
pop
cld
push
lea
cmp
test
add
mov
out
fiaddl
lahf
pop
mov
icebp
pop
decb
sahf
popa
push
clc
notb
sti
rcrb
xchg
jnp
aam
push
clc
addr16
or
mov
ljmp
inc
pop
lock
fcompl
testb
mov
mov
jecxz
bound
lret
mov
adc
lret
ficoml
nop
icebp
mov
sbb
fidivrl
pop
lcall
daa
aas
loop
sub
shlb
xor
rcrl
jnp
xor
movb
je
daa
mov
push
sbb
repnz
outsb
jbe
incb
sti
subl
popf
adc
push
mov
test
aas
f2xm1
mov
xlat
add
lods
sbb
cmp
mov
xchg
mov
scas
pop
cmp
jg
mov
dec
sub
or
sub
bound
xor
jns
pop
mov
insl
jb
addb
or
repz
je
ljmp
xchg
nop
push
jle
lock
xor
add
fsubs
cmpsl
test
out
push
fwait
lcall
mov
pop
stos
stos
or
cmp
ds
out
repnz
mov
mov
ja
je
rcll
sbb
cltd
lretw
inc
mov
movsb
cmp
icebp
xchg
insb
sub
xchg
xor
jmp
rolb
mov
mov
in
or
cwtl
push
fcmovu
mov
push
das
sbb
int
lea
xchg
sub
jne
xor
fstpt
test
lods
lret
and
out
pushf
lds
push
movsb
mov
or
inc
push
lret
pushf
enter
mov
sbb
mov
adc
xor
push
jp
lcall
pop
and
clc
push
xchg
nop
jo
or
pop
mov
pop
clc
push
mov
pop
sarb
inc
ljmp
sarl
cmp
xor
jmp
jb
mov
xchg
mov
xlat
or
push
fsubrl
pop
push
jmp
jo
push
xor
orl
test
mov
xchg
lds
andb
arpl
in
cmp
jl
or
orb
xor
sarb
shll
mov
imul
mov
and
and
dec
lret
das
or
insb
js
jmp
and
mov
add
loopne
pop
pop
mov
jne
jb
xlat
rcr
insb
dec
int3
xor
loop
add
mov
cmp
fnstcw
dec
leave
mov
mov
mov
sbb
mov
sbb
cvtdq2ps
arpl
cmp
adc
or
cltd
enter
inc
xor
mov
stos
es
mov
sbb
cmp
es
sbb
ret
lods
inc
in
test
adcb
cmp
sbb
mov
loopne
sbb
adc
cmp
test
mov
popf
push
xlat
jo
mov
or
push
jmp
adc
xor
movsb
data16
popa
and
scas
int
out
jnp
mov
testl
inc
lods
mov
add
inc
dec
jo
pop
std
mov
cmpl
das
cs
pop
sahf
jne
and
arpl
cmpsb
je
pop
ret
sbb
dec
cmpl
push
jne
xlat
cmp
mov
or
ret
daa
xchg
push
mov
jle
data16
pop
add
sahf
in
push
popa
outsb
cmp
stc
push
xor
and
iret
push
lods
sbb
adc
cwtl
or
pop
addr16
out
pop
mov
scas
sbb
lahf
sbb
mov
scas
sub
mov
out
repz
in
push
sahf
and
cmc
stc
jae
lret
pushf
test
inc
stc
mov
rolb
dec
dec
popf
popa
roll
lds
mov
ljmp
insb
sub
xor
mov
inc
pop
loope
mov
xor
fs
jmp
arpl
xor
cs
cld
or
mov
fisubl
lret
push
pop
push
ret
or
jno
mov
andb
mov
jle
xchg
icebp
jae
mov
jbe
fstpt
hlt
push
mov
lcall
addr16
int3
jecxz
outsl
mov
xchg
int
ret
push
xchg
aam
outsl
repnz
push
adc
mov
push
orb
and
jne
shll
inc
movsb
or
insb
in
test
sub
cmp
add
mov
or
lret
jl
mov
sbb
stc
test
mov
les
mov
test
sahf
xor
jmp
outsl
loope
les
cmp
jno
adc
push
sbb
lds
out
inc
mov
push
test
or
das
lea
or
dec
jmp
xchg
bound
adc
sub
imul
das
jns
xlat
xchg
int3
ret
in
jns
cmc
xor
sahf
xorl
jnp
jno
setp
pop
inc
leave
jge
lds
daa
jmp
ret
dec
jne
in
repnz
les
je
sti
dec
jmp
fsts
xor
shll
inc
pop
add
fisttps
add
xchg
adc
movsb
pusha
and
mov
sub
cmc
cmp
xchg
popf
sub
lock
rclb
cmp
negl
pop
xor
sub
arpl
clc
xchg
jle
sbb
fisttpll
xchg
repnz
pop
rclb
outsl
or
sbb
loop
xchg
and
cmpsb
cs
ljmp
jns
push
mov
into
int3
out
push
ljmp
pop
sbb
mov
cmp
fsubrp
mov
sar
mov
loope
or
sbb
in
dec
rol
fidivrs
shll
fistpl
lds
call
fwait
sti
dec
mov
stos
insb
ja
and
push
push
out
xchg
add
adc
scas
andb
jg
aad
add
insb
dec
adc
jmp
pop
loopne
and
push
sahf
adc
aad
shl
xchg
in
jo
xor
jmp
and
popf
fsubs
pop
dec
nop
add
ljmp
jnp
sub
inc
add
dec
das
shll
cwtl
js
push
int3
arpl
xchg
mov
cmp
xchg
jae
mov
jbe
fdiv
fwait
mov
xchg
lret
fdivrs
mov
fcomps
mov
push
xchg
mov
jle
les
mull
ret
popa
daa
data16
pop
cmpsb
in
aas
popa
cli
jae
xchg
imul
sub
cwtl
data16
outsl
xchg
adc
mov
inc
sub
sub
inc
xor
movsl
leave
mov
outsb
data16
mov
shrb
mov
mov
jg
nop
pushf
scas
push
inc
fs
push
and
bswap
jnp
mov
adc
mov
popa
adc
adc
jo
lods
xchg
mov
sub
std
xor
mov
pop
sub
jge
sbb
gs
repnz
jecxz
push
jbe
mov
rcrb
or
sub
sbb
push
push
popf
sbb
sbb
dec
int3
jbe
es
xor
mov
stos
jae
leave
lods
loopne
sub
inc
jecxz
push
lcall
inc
mov
mov
sti
out
sbb
mov
xlat
sbb
mov
fsubl
jmp
out
mov
cmp
repnz
dec
or
adc
xlat
arpl
xorb
inc
xchg
dec
jnp
mov
fnsave
movsb
jne
jns
add
test
mov
mov
sbbl
lods
push
adc
hlt
pop
jp
inc
inc
xchg
adc
mov
fsubs
xchg
mov
sub
inc
sti
adc
loop
aam
fucomi
mov
and
mov
mov
cmp
mov
and
inc
sub
enter
push
lcall
mov
mov
mov
xor
iret
push
daa
mov
lods
jno
jae
popa
dec
cmp
jle
jb
subl
and
xchg
movsb
imul
pop
idiv
mov
andb
or
sub
cmp
fs
mov
jns
cmp
xchg
orl
push
cmp
pop
shrb
cmp
sub
mov
dec
or
cltd
stos
fimull
cmp
pop
jp
test
imull
jg
dec
push
sahf
lods
hlt
lock
dec
pop
stos
cmp
mov
iret
push
sar
cmp
pop
pusha
aas
popa
jae
repz
jge
outsb
xor
push
lods
lahf
cmc
fnstenv
stc
mov
mov
inc
ja
jmp
movsb
mov
mov
lds
sbb
gs
sub
sbb
es
inc
jecxz
xchg
fcompl
loopne
push
xchg
insl
pop
int3
test
cmpsb
fidivrs
push
xor
cmp
cmp
jnp
xchg
or
push
les
jnp
push
ret
jg
cmp
mov
sub
pushf
inc
dec
cmc
mov
or
jge
jae
and
loope
enter
cmp
and
add
push
scas
dec
mov
test
mov
xor
adc
jne,pt
add
movsb
fistpll
repz
fistps
outsb
jb
out
jno
sbb
push
adc
in
mov
movsb
sti
mov
adc
mov
insb
or
rcrb
aaa
mov
lea
pop
mov
pop
jg
dec
adc
pop
repz
pop
jl
xchg
inc
xor
fisttpl
jbe
mov
adc
jae
xor
mov
inc
stc
sub
xchg
sahf
test
and
push
push
icebp
into
iret
pop
test
je
rcrl
inc
dec
adc
scas
call
mov
sahf
sbb
int3
or
add
mov
in
or
mov
push
insb
mov
fadds
and
fdivrl
iret
push
push
mov
pop
and
ss
sbb
sub
push
adc
dec
adc
insb
xlat
es
mov
xor
push
push
stos
mov
lcall
xchg
xor
es
test
and
outsb
and
mov
or
push
push
les
mov
test
add
jecxz
shlb
cmp
dec
and
and
popa
ret
mov
or
bound
sbb
lret
sbb
stos
lahf
in
xchg
cltd
leave
and
sub
jae
adc
sbb
sti
jo
mov
fcmovnb
leave
test
or
aam
arpl
cld
or
fsubrs
into
dec
aam
xchg
lcall
notb
xor
mov
jb
cmp
sub
jl
sbb
or
and
and
popa
aaa
inc
xchg
lods
sub
jo
pop
ret
scas
mov
mov
mov
lret
cltd
mov
push
mov
cmp
adc
xor
sti
mov
test
dec
adc
nop
sbb
loop
xchg
mov
cmp
sti
mov
add
outsl
or
dec
movsb
push
stos
cmc
sub
sbb
in
sub
ja
sub
push
hlt
sub
jge
movsl
stos
nop
or
pop
mov
adc
sub
adc
xchg
jg
mov
mov
xor
les
sti
add
or
aaa
push
fucomi
jge
jnp
xor
rclb
pushf
sbb
add
jge
nop
mov
mov
cmc
xchg
inc
rcrb
adc
scas
jecxz
jo
fisubrl
repnz
push
dec
mov
inc
test
cmp
and
ss
fidivl
adc
xor
pop
push
xchg
mov
stos
jno
mov
pop
push
adc
or
push
insb
jae
mov
push
xchg
add
aad
pop
dec
adc
inc
pop
lock
cltd
or
scas
push
stos
add
lret
stos
mov
out
jnp
mov
dec
xchg
loopne
pop
add
mov
sbb
fwait
inc
fsubs
sbbb
pop
mull
out
sub
jmp
or
fwait
or
cmc
popf
arpl
jne
insb
push
adc
ljmp
into
aad
jbe
cmc
cwtl
jge
mov
into
dec
shl
xchg
sti
mov
scas
sub
inc
push
xor
ret
xchg
jae
outsb
pop
inc
xchg
es
ds
xchg
and
lods
sti
daa
cmp
bound
popa
jae
xor
xchg
pusha
cmp
cmp
push
les
dec
mov
mov
rclb
fwait
xchg
push
sbb
outsl
cmp
ret
xchg
jl
jb
decl
xor
push
cmpsl
loopne
int
fwait
scas
std
loopne
insb
hlt
ffreep
push
lods
xchg
hlt
adc
mov
pushw
repz
shrl
jl
pushf
cmp
rcrb
lahf
test
shrl
inc
cmp
les
iret
addr16
cmp
mov
cmp
or
mov
xor
fmull
je
loope,pt
fs
cmp
and
daa
insb
lahf
aas
sbb
xchg
daa
sbb
jg
or
mov
icebp
sbb
jb
ljmp
push
sub
fstpt
loopne
sarl
add
in
jle
and
ret
mov
mov
xor
mov
in
push
adc
test
mov
sub
ja
sbb
pop
pop
sbb
inc
bnd
push
inc
mov
sub
mov
cli
adc
ret
pusha
cltd
shlb
aad
popf
cli
icebp
xchg
rclb
cmp
and
cli
lahf
mov
sub
loopne
pop
mov
mov
xchg
mov
sbb
dec
inc
xor
mov
in
data16
xchg
lods
jns
pop
push
insl
fs
pop
xchg
jg
mov
sub
add
ret
adc
loop
dec
mov
roll
std
xchg
lret
mov
jo
cmp
repz
sbb
sub
addr16
or
subb
pop
and
push
sub
or
pop
add
in
sub
test
in
loope
mov
mov
xor
inc
std
mov
push
into
xor
je
and
stos
cld
and
jmp
xchg
inc
xchg
pop
and
rorl
inc
hlt
orb
push
sbb
and
nop
fistpll
addr16
sub
nop
rcrb
ss
xor
std
jnp
scas
adc
je
clc
ds
mov
add
cmpsl
sbb
mov
sbb
aaa
push
inc
in
jg
shlb
ficoms
sahf
fdivrl
ret
mov
mov
popa
arpl
or
dec
inc
adc
test
aad
or
adc
jbe
xorl
jb
jge
rcrb
imull
scas
fimuls
mov
cmc
insl
pop
jmp
daa
rcrb
mov
sbb
lahf
insb
std
jb
cmp
mov
imul
jmp
stos
jmp
dec
sbb
xlat
mov
pop
jne
fs
jae
add
mov
jae
jle
cmp
mov
push
mov
aas
cmc
stos
and
ds
movsl
aad
mov
and
shrb
shll
xchg
lea
xor
adc
mov
into
inc
sahf
add
mov
mov
pushf
pop
mov
sbb
jmp
pop
mov
frstor
or
adc
ja
jbe
pop
test
pusha
fdivp
or
lock
push
daa
dec
cmp
les
xchg
xchg
icebp
or
nop
adc
mov
les
xchg
ss
jecxz
jmp
in
jns
dec
rorl
fadd
cmp
pushw
mov
loop
lods
push
dec
pushf
inc
call
push
and
or
xchg
fists
stos
dec
inc
adc
scas
mov
mov
pop
ss
cmp
adc
mov
cmpsb
dec
out
xlat
add
scas
jno
add
inc
or
jmp
cmpsb
sub
mov
subl
sbb
out
ret
sbb
adc
clc
jns
inc
rcrl
dec
scas
mov
sub
sbb
scas
dec
sti
test
fwait
cmp
in
mov
xor
and
xor
shl
daa
jo
cli
loopne
and
lock
push
rcrb
jb
hlt
jmp
hlt
test
or
xchg
pushl
or
inc
popa
out
pop
xor
xchg
mov
inc
pop
ss
scas
mov
pop
ret
ret
fcoms
xlat
test
test
sbbb
fcomps
dec
insl
pusha
xchg
es
insb
lock
adc
cmpsb
test
mov
lea
lcall
sub
pop
mov
out
mov
mov
jmp
cmp
cli
xchg
xchg
or
call
mov
mov
inc
inc
dec
add
push
inc
das
add
pop
inc
mov
ret
cmp
imul
out
pop
sahf
rcrl
dec
sbbb
es
mov
mov
enter
loopne
arpl
cmp
add
les
mov
sub
mov
push
push
sbb
sub
rcl
and
out
adc
in
xor
insb
arpl
xlat
in
arpl
add
dec
inc
jo
inc
push
mov
std
lcall
repnz
test
aas
mov
cmpsb
aaa
and
push
sub
mov
xchg
sbb
lea
jo
ss
or
icebp
and
dec
movsl
pop
push
out
pushl
clc
dec
xor
or
add
loop
xor
xor
stos
or
loopne
mov
sbb
loopne
inc
sbb
sbb
pop
cmc
iret
out
adc
int
inc
inc
or
xor
mov
div
scas
in
dec
std
adc
adc
sub
movsb
jae
test
sbb
and
sub
xor
mov
dec
xchg
shlb
pop
pop
xchg
lods
sub
test
loop
cltd
fimull
push
push
jg
dec
cld
xor
out
xor
dec
in
ret
inc
out
dec
and
mov
mov
stc
mov
push
jl,pn
faddp
jb
sti
rolb
push
gs
and
imull
repnz
push
mov
mov
xor
jo
jns
out
loop
sbb
sar
jne
add
sub
or
out
pop
add
lods
sbb
dec
loope
push
hlt
fisubs
pop
xor
cmpsb
adc
cs
inc
out
aaa
pop
or
pushf
xchg
ja
mov
imul
out
mov
inc
enter
mov
inc
xor
mov
popf
test
and
sbb
push
inc
mov
adc
fwait
sbb
mov
or
pop
mov
lretw
pop
mov
js
dec
push
dec
lock
cmp
stc
cmp
push
into
or
push
add
fidivs
push
inc
movsb
sbb
stc
ja
xchg
hlt
jg
stos
hlt
cld
stc
test
fdivrl
testl
dec
and
ror
cmc
cmp
das
or
xchg
dec
outsb
inc
inc
shlb
push
addr16
pusha
xchg
xor
dec
rcrl
nop
insb
out
cmc
inc
or
stos
xorb
mov
lods
repz
push
sbb
in
cmp
js
dec
outsl
ret
dec
add
cmp
or
nop
fwait
or
sbb
and
cmpl
push
xor
ret
add
or
mov
dec
adc
mov
icebp
popf
inc
lods
icebp
sbb
sub
lret
rcll
ret
aad
adc
fdivrl
and
cmpl
into
pop
cld
xorl
cmp
mov
xor
cmc
add
and
test
jb
arpl
cmp
sub
daa
adc
scas
ffreep
jno
xchg
mov
xchg
test
cmp
stos
xchg
pop
mov
sub
mov
cmp
ret
jns
pushf
cmp
xchg
cmc
pop
jo
cmp
das
or
je
sahf
mov
mov
mov
push
cli
or
push
loope
lcall
mov
test
jmp
test
inc
mov
push
and
push
mov
cmp
push
ja
mov
cmp
lods
aam
or
orb
mov
cli
in
jge
sub
addr16
popf
dec
jno
jge
adc
xchg
mov
pop
stc
and
dec
dec
cmc
mov
add
add
jbe
adc
or
mov
adc
or
lds
addb
xchg
outsl
lds
jge
cmp
mov
popf
imul
lret
cld
mov
imul
and
out
leave
xchg
add
outsl
inc
mov
les
xchg
pop
and
mov
pop
cmp
or
imul
rcr
cs
xchg
mull
cwtl
and
mov
sub
mov
pop
fldl2e
jle
pop
jmp
pop
lahf
stos
out
dec
jo
xchg
test
aam
movb
inc
into
scas
mov
push
pop
flds
and
js,pn
xchg
call
shrl
sub
pop
pop
scas
mov
addr16
pop
dec
repz
xchg
imull
sbb
dec
jp
mov
adc
je
mov
xchg
imul
and
pusha
test
mov
je
mov
lret
sub
pusha
mov
xchg
sti
ds
xchg
loope
jmp
imul
mov
push
jl
dec
mov
je
pop
push
lea
cmp
mov
rcll
outsl
or
push
jb
repz
mov
cli
xor
mov
jns
clc
into
ffreep
imul
loope
inc
pop
dec
cmpsl
mov
popa
movsb
or
mov
fsubrl
inc
push
fstl
jle
xchg
outsl
ds
movb
push
push
dec
xor
stos
pop
add
data16
stc
rcll
xchg
in
xorl
iret
push
lret
push
cmp
mov
shl
bound
shlb
add
jns
repz
adc
sbb
dec
lds
xchg
mov
cmc
and
mov
outsl
and
dec
jecxz
or
adc
fisttpll
or
mov
xor
nop
nop
mov
outsb
and
or
shrb
repz
or
in
push
test
addl
cmc
sbb
push
shrb
int3
sbb
lock
push
js
xlat
mov
aam
inc
push
js
push
dec
xor
sub
loope
adc
es
loop
out
in
repz
mov
sub
xor
xchg
ret
repnz
adcl
or
out
cmp
inc
or
cmpsb
out
mov
mov
fwait
stos
enter
bound
adc
test
sahf
lea
sbb
daa
clc
fdivrs
mov
xchg
push
cmp
cli
dec
lock
stos
adc
mov
add
pop
pop
leave
xchg
insb
sub
ss
mov
sub
sbb
push
pop
push
xchg
inc
dec
or
je
jle
adc
jle
push
pop
adc
aaa
test
sbbb
scas
mov
xor
inc
inc
mov
jnp
cmpl
ss
lea
xor
ficoms
cmp
cmp
imul
fwait
jno
dec
mov
int
dec
fstpl
jge
ja
fiadds
sahf
dec
add
cmp
popf
mov
loop
push
push
movsbl
fwait
xchg
retw
ficoms
inc
and
mov
jg
fsts
arpl
cmpsl
mov
fs
out
movsl
push
movsb
ljmp
pushf
xchg
adc
adc
inc
dec
or
push
not
dec
dec
mov
aaa
int3
test
jp
lret
cwtd
mov
xor
mov
add
xchg
into
push
inc
pop
pop
arpl
inc
mov
pop
pop
fdivs
and
aad
mov
inc
xor
dec
xor
aad
push
clc
out
mov
das
int3
inc
sub
adc
adcb
adc
mull
push
inc
pop
xor
fisubrl
dec
adc
popf
rolb
dec
fcoms
fmull
not
xchg
cmpsl
sarb
fsubl
adc
stc
and
inc
rorb
jmp
test
bound
sbb
lds
jl
xchg
mov
push
ret
pop
lret
or
mov
inc
sbb
movb
jne
in
mov
daa
dec
sahf
subw
jmp
je
fildl
xchg
rorl
or
stos
pop
and
push
xor
outsb
testb
xchg
movsl
jg
sbb
jne
popf
sbb
push
xor
pusha
xchg
stc
push
adc
push
mov
test
call
data16
jb
push
push
call
cmp
fistl
inc
jo
out
cmp
inc
iret
leave
lds
mov
sbb
mov
or
sbb
shlb
lcall
negb
mov
xchg
xor
sub
iret
xorb
sub
xor
add
mov
out
int
iret
and
xor
imull
push
and
loop
xchg
inc
lea
sbb
in
dec
sub
sbb
nop
out
xor
mov
shl
imul
jo
inc
mov
lahf
mov
push
int
clc
adc
pusha
push
fildll
sahf
add
ljmp
in
push
xchg
insl
mov
adc
popa
faddp
sbb
or
add
fidivl
or
mov
mov
jb
cmp
inc
into
loope
popf
arpl
and
cwtl
mov
lds
add
insb
mov
enter
adc
test
cltd
sbb
in
adc
imul
mov
cmp
xchg
fmuls
addr16
scas
in
pop
inc
testb
lock
inc
cmpsl
xchg
scas
push
les
jbe
leave
lock
fsub
out
sbbb
addr16
cmp
das
mov
dec
mov
jle
fmulp
into
cmpsb
mov
fsubrs
call
sti
rcll
roll
xchg
cmpsl
cmpsl
push
mov
mov
mov
sub
lods
fisubrs
inc
stos
lods
fwait
dec
lret
xor
or
out
cmp
lcall
outsl
xchg
sbb
mov
stos
loopne
xchg
sbb
or
js
in
jo
mull
sub
add
fisubl
sub
sbb
pop
pop
xor
mov
lods
test
mov
cmp
fnstenv
pusha
clc
dec
out
mov
mov
call
xchg
push
push
ss
mov
jecxz
lods
imul
mov
repz
dec
insl
repz
jge
pushl
mov
jno
data16
sub
dec
sbb
pop
in
pop
outsb
jmp
jno
in
push
loope
rclb
lock
sti
ljmp
sub
cltd
stc
xorb
lcall
mov
imul
pop
insl
ja
dec
inc
shlb
sub
xchg
stc
mov
pop
into
je
inc
mov
lcall
and
jbe
fbstp
inc
cmp
push
pop
mov
fcmovnbe
dec
inc
sub
popf
icebp
xchg
add
xchg
lds
xchg
mov
cmp
sbb
roll
xor
sbb
dec
bound
sbb
xor
lret
movb
add
inc
sti
in
cltd
or
call
add
bound
jmp
xchg
int3
rolb
aaa
mov
stos
fs
popa
mov
negb
pop
sar
pop
aaa
in
call
cld
std
nop
fs
addr16
mov
out
dec
sarb
popf
pop
jno
cld
shlb
fs
insl
mov
adc
xor
sbb
sti
ljmp
adc
lahf
sbb
jo
and
dec
sub
outsb
fisttps
stc
addr16
nop
ficomps
pushf
shll
fstps
jl
lock
out
lock
adc
xchg
test
inc
mov
and
inc
lret
pop
xor
imul
scas
push
scas
shll
sbb
mov
loop
pusha
dec
aad
jecxz
sbbl
sbb
pop
push
mov
xchg
xchg
cmp
cmovns
idiv
xlat
insb
in
popa
pusha
out
mov
jl
mov
orl
push
lcall
sahf
ficoms
jae
nop
gs
repz
xor
leave
ret
push
and
test
cli
xchg
xor
sti
aad
in
enter
fs
ds
cmp
xor
xchg
jbe
jp
mov
lods
dec
fwait
jg
or
repz
int
fidivrl
cmc
sbb
popf
test
push
jne
scas
cmpsb
arpl
rorb
clc
dec
and
push
out
add
mov
out
pop
dec
outsl
mov
mov
lods
fwait
jbe
jne
or
out
push
lea
add
aam
insl
imul
jbe
xchg
jnp
das
ss
enter
mov
aad
push
ss
fs
test
pusha
das
sbb
adc
cmpsb
fisttpll
cmp
dec
jl
loopne
adc
lds
pop
out
add
xchg
test
leave
aaa
pop
add
mov
push
movsb
jge
adc
stos
nop
aas
adcb
jb
and
jle
mov
adc
aaa
shll
cmp
popa
mov
out
hlt
in
test
mov
sub
iret
bound
pop
push
test
cmp
sbb
push
mov
dec
out
push
lea
sub
adc
inc
adc
movsl
imulb
mov
loop
mov
mov
pop
pusha
xor
mov
sarl
mov
mov
jno
add
mov
into
jmp
pop
pop
testl
gs
addr16
sub
mov
sub
add
stc
push
fisubrs
add
jnp
push
imul
lret
rcrb
jg
mov
stos
iret
popa
sbb
add
sbb
mov
add
cli
popf
loop
mov
adc
cs
mov
js
in
sbb
scas
inc
cmp
ficoml
dec
lea
mov
out
gs
sbb
outsl
jbe
mov
sub
and
jmp
aad
loope
repnz
sub
mov
dec
or
fldcw
rcr
jae
mov
into
push
stos
pop
mov
push
mov
js
lret
repnz
int
pop
stos
cmc
inc
ja
adcb
iret
icebp
pusha
std
mov
cmp
mov
xor
mov
xchg
fwait
das
fs
add
sub
jo
sub
addr16
lret
fimuls
or
sub
imul
cmpb
imul
sub
in
lcall
cmp
lods
dec
inc
xor
jno
cli
jns
inc
dec
fs
repz
mov
repz
std
add
nop
icebp
mov
enter
ficompl
jb
inc
insl
shlb
jnp
jo
push
push
push
mov
movsl
push
xchg
cltd
jne
ja
or
shl
pop
and
or
jno
in
in
jle
adc
icebp
and
mov
inc
push
clc
stc
pushf
arpl
or
dec
popa
dec
jb
cs
or
fcmove
sbb
out
cwtl
add
sbb
jne
std
enter
repz
imul
or
mov
mov
pop
mov
int
cmp
in
xchg
addr16
pop
in
out
xor
cmc
mov
loop
inc
or
xor
or
movsl
inc
sahf
xchg
test
mov
sub
aas
pop
fucomip
xchg
sub
bound
int3
aam
mov
cmp
shll
xlat
add
sahf
fildll
xchg
lret
push
jge
stos
jmp
sub
sbb
xchg
in
and
xorb
mov
push
and
inc
daa
les
jl
daa
leave
cs
add
pop
sarl
loop
lret
mov
jle
lods
scas
ficoml
frstor
out
cmc
sbb
fs
or
frstor
stos
push
popa
inc
xlat
repnz
jge
xchg
rol
repnz
daa
mov
mov
jae
mov
and
je
insl
imul
mov
xchg
shlb
sbb
dec
aaa
insl
out
jle
xlat
in
pop
rclb
out
imul
cmpsb
loope
jne
imul
imul
insl
mov
movsl
sahf
addr16
mov
repnz
jecxz
push
pop
mov
jle
sbb
pop
mov
push
inc
outsb
sub
cmp
sbb
insl
push
aas
enter
test
cli
dec
mov
xchg
mov
pop
addl
sub
sarb
sub
in
iret
fwait
xor
in
inc
outsb
and
pop
sbb
dec
aas
mov
pop
outsb
sbb
or
pop
lods
and
int
mov
mov
or
pop
mov
push
fldt
push
out
push
idiv
sbb
or
jnp
dec
cmpsb
push
and
pop
dec
and
pop
stos
mov
cs
fwait
cmp
mov
subb
scas
jmp
or
pop
fidivl
out
ds
stc
cmpsl
xorl
test
daa
xchg
inc
data16
sarl
mov
jae
sub
xor
neg
stc
xor
pop
aam
call
test
pop
push
addr16
gs
add
jp
les
repz
stos
mov
ret
adc
ss
popf
sbb
fdivrs
mov
in
jmp
lret
jb
aam
sub
adcb
mov
nop
push
cmpsl
into
mov
nop
mov
mov
inc
stos
mov
mov
or
cli
push
jb
gs
mov
cwtl
mov
fisttps
ret
scas
mov
mov
in
mov
lea
mov
lock
cmp
xchg
cmp
add
xchg
cmp
loop
shl
cmp
fisttpll
rep
sbb
idivb
lods
pushf
mov
movb
mov
add
das
in
mov
iret
dec
mov
or
xchg
fcmove
test
jmp
mov
fwait
xchg
or
and
push
bound
int
rcl
cmp
out
adc
or
xchg
pushw
orb
aas
mov
cmc
dec
fisubs
mov
rolb
cmp
push
aaa
popl
pushf
in
mov
rcrl
aas
jns
imul
adc
push
test
scas
shlb
movsb
scas
sbb
lret
jbe
daa
mov
pop
jp
ds
mov
iret
jne
pushf
sub
testl
les
sbb
ja
xchg
scas
andnps
push
call
std
fidivrl
leave
push
sahf
aas
pop
push
and
ja
fisubrs
sub
mov
pop
sbb
cmpsb
pop
mov
mov
les
pop
xchg
arpl
push
int
cmpsl
bound
or
pop
mov
push
aam
jge
push
sbb
adc
push
sub
std
iret
pop
fimuls
mov
imull
cmp
test
dec
rcl
jmp
jo
std
cmpsb
ja
push
mov
sbb
sub
das
mov
push
test
mov
sub
lret
mov
xchg
clc
push
aaa
sub
test
push
movsl
and
out
mul
mov
gs
jmp
push
xchg
push
jb
jne
loopne
jle
fdivrp
sub
xor
mov
bound
mov
loopne
push
cmp
jnp
mov
and
add
outsb
lahf
xor
jle
mov
fsub
sbb
mov
fwait
jbe
cmp
add
push
cmp
xchg
imul
dec
nop
mov
je
pop
cli
fcom
sub
andl
pop
insl
ljmp
stos
lea
jmp
xor
push
and
or
mov
repnz
les
jo
cwtl
pop
xor
jg,pt
das
inc
rolb
cwtl
cmc
xlat
sbb
cmp
fwait
add
jge
sub
insb
roll
mov
aad
mov
aaa
lds
out
cwtl
sbb
fldenv
out
scas
and
in
pop
cltd
or
inc
insl
ljmp
mov
xlat
mov
mov
jl
mov
or
xchg
outsb
adc
pop
push
xchg
fcoml
outsb
out
adc
imul
clc
dec
call
mov
scas
mov
xor
imul
or
leave
loop
dec
fdivrs
push
cmc
pop
mov
xor
adc
fs
cmp
retw
lods
xchg
pop
or
cwtl
les
jno
jg
in
aaa
rorl
aas
inc
push
lahf
scas
lcall
ljmp
and
xor
lcall
aas
adcb
add
loop
mov
rorb
jne
adc
fcomps
xor
pop
aas
outsl
aam
inc
lcall
or
mov
xchg
xor
adcb
sbb
fcoml
cmp
mov
inc
lahf
icebp
rclb
mov
mov
ret
cmpsl
jb
xchg
xchg
pushf
sbb
push
mov
outsl
mov
inc
or
or
pop
push
cmp
insl
push
sbb
mov
insl
or
cmp
xor
call
pop
pop
and
mov
cmp
dec
stos
adc
add
pop
daa
loope
and
jns
jmp
gs
std
push
push
adc
mov
xchg
and
movb
aad
push
and
insb
stos
mov
in
enter
fistps
mov
nop
out
shll
and
xchg
bswap
inc
incl
push
rcrb
pop
pop
pop
jnp
xchg
dec
outsl
sub
cmp
sub
test
jle
adc
scas
sub
lods
cmp
rorl
adc
inc
jnp
jbe
push
inc
cmpsl
cwtl
add
sub
sbb
mov
adc
jne
add
adc
fidivrl
xor
fadds
or
and
gs
scas
mov
arpl
fdiv
pop
mov
pop
adc
lds
enter
push
push
or
xchg
inc
jg
push
cmc
lods
call
pop
das
cmp
and
sbbb
pushf
adc
mov
and
sub
lret
aam
pop
stc
testb
stc
xchg
mov
es
pop
mov
dec
lret
cmp
shl
dec
cmpsb
fnstsw
jns
mov
adc
and
cmp
sub
andl
cmp
lods
daa
int
je
ss
ja
push
cmp
imul
ds
sbb
push
push
adc
xchg
stos
lods
sbb
nop
loopne
xor
mov
push
xchg
xchg
fisubrl
fdivl
cmpsb
push
data16
stc
in
rcrb
push
jo
sbb
adc
imul
iret
ja
add
jnp
jb
push
push
jo
enter
or
in
cmp
test
or
pop
fnstenv
scas
xchg
shl
into
lcall
pop
and
cmp
sub
or
stos
enter
aad
pop
jmp
leave
push
and
cli
push
jmp
jle
pop
stos
pop
shll
stos
sub
sahf
outsb
popl
int3
pop
adc
pop
adc
clc
dec
out
xchg
int
imulb
test
out
or
insb
es
das
sbb
cli
dec
pop
pop
jo
test
fnsave
hlt
fnstsw
cmp
movb
outsb
mov
or
lret
inc
add
mov
popa
pop
fs
icebp
test
cmp
fnsave
rorl
sub
ret
jle
cli
jo
push
movsl
rol
insl
imul
mov
mov
mov
js
mov
lea
pop
xchg
or
je
repnz
and
adc
sub
xor
jmp
sahf
mov
lahf
adc
leave
push
leave
mov
fs
js
push
lcall
ret
inc
inc
test
mov
jb
adc
dec
in
pop
pop
xchg
push
push
aaa
imul
add
out
pop
scas
in
pop
push
pop
mov
imul
cltd
fistl
test
xchg
dec
out
mov
push
in
movsl
pop
xor
loopne
sbb
cmp
inc
xor
or
adc
js
rorl
stos
scas
pop
mov
repnz
fadds
xor
lds
andl
push
xchg
sarl
inc
push
cmc
sub
aam
loope
leave
mov
mov
mov
clc
insl
sti
fidivl
or
andb
lods
pop
test
pop
pop
std
push
dec
ret
dec
mov
jb
out
loopne
sbb
addl
sbb
mov
mov
cmpsb
inc
cwtl
cld
push
bound
fnstcw
pop
cmp
leave
aas
outsb
or
mov
out
mov
adc
out
cmpsb
int3
pop
or
out
adc
subl
pop
lahf
fst
and
jnp
or
jle
cmp
out
rorl
cmp
pop
xchg
cmpl
xor
or
pop
test
pop
sub
fs
mov
fildl
lret
jo
jle
xchg
sbb
out
push
rol
mov
aad
rolb
test
sub
push
pop
daa
jae
test
push
ljmp
arpl
stos
loope
divb
rclb
insl
addr16
mov
add
mov
cld
addr16
mov
dec
cmpsl
std
jg
jle
fcmovnu
leave
fdiv
icebp
sub
push
jo
movups
sub
inc
in
mov
sbb
mov
in
push
in
inc
mov
cli
mov
rorb
lock
lock
aaa
aaa
mov
cmp
mov
lock
sti
xchg
popf
push
enter
sti
orl
in
add
cmc
push
dec
mov
push
sbb
xchg
and
jns
pop
popf
repnz
adc
mov
arpl
or
mov
or
addl
sub
xor
jnp
cmp
cmp
lock
out
push
or
sbb
out
outsb
fmull
adc
mov
push
loop
cld
pop
loop
push
xor
push
push
sub
add
push
sbb
push
or
xchg
mov
mov
sub
dec
adc
cltd
pushf
cwtl
test
sub
jbe
lret
mov
insb
scas
lcall
leave
mov
and
xchg
inc
and
mov
out
mov
out
push
mov
cmp
sbb
test
or
aam
sahf
or
mov
test
inc
and
sbb
mov
ret
stos
imul
pushf
lret
out
subb
jecxz
clc
sarl
ret
popf
and
and
or
cmp
enter
push
aad
or
frstor
fsubrl
jno
mov
mov
clc
loopne
aas
sbb
mov
ficomps
adc
test
shll
mov
scas
xchg
pop
inc
mov
mov
ss
or
mov
ss
jae
mov
ficomps
mov
sub
mov
daa
dec
stc
or
mov
or
cmp
mov
mov
jp
data16
test
dec
push
scas
mov
movsl
stos
test
dec
xorl
fidivs
ja
imul
xchg
and
arpl
mov
add
or
movsb
sub
sub
mov
sbb
scas
fstl
push
mov
ret
cmpsl
fstps
orl
addl
dec
adc
hlt
xchg
sbb
cmpsb
mov
mov
pop
int
push
in
sahf
xchg
and
and
icebp
scas
mov
jle
ja
or
cli
jmp
test
mov
aam
lret
dec
sub
inc
subl
mov
dec
fcomip
bound
inc
inc
popa
pushf
sti
adc
out
sbb
dec
popa
in
inc
test
push
ljmp
and
add
dec
arpl
ja
je
sbb
into
add
push
cmp
push
jmp
mov
int3
cwtl
cmp
inc
xchg
inc
pop
dec
xchg
jbe
pop
pusha
call
adc
movsb
in
xor
inc
nop
sbb
stos
lea
mov
pop
pop
pop
test
call
ds
cmp
in
stc
fcmovbe
cmpsb
xor
jge
lds
aad
icebp
stc
out
icebp
mov
call
fs
int3
push
dec
pop
sub
frndint
loope
jne
sarl
pusha
inc
add
mov
aaa
xchg
cli
push
out
cmp
mov
push
mov
pop
xchg
aas
cwtl
fs
leave
fstps
pop
and
mov
in
sbb
push
fisttpll
push
cmp
insb
mov
mov
pop
or
hlt
mov
or
addr16
ss
jne
pop
sahf
ja
pop
nop
pop
movsb
sahf
pop
or
movsb
aam
mov
insl
inc
cmp
fldcw
std
jbe
or
loopne
pop
mov
imul
lea
cmpsb
push
fdivrl
jmp
mov
sub
mov
xchg
pop
shll
subl
dec
xchg
movsb
fwait
imul
pop
scas
scas
inc
movb
adc
leave
cli
inc
mov
lods
movsl
and
fildl
fiaddl
out
push
pop
imul
iret
mov
sbb
jo
cmpsb
andl
inc
stos
orl
xor
push
inc
push
inc
bound
jo
mov
sbb
imull
movsl
adc
jge
stos
dec
push
jb
insb
mov
cli
adc
scas
cmp
lret
mov
push
rol
dec
adc
shll
sbb
sub
xchg
cmc
test
std
dec
cmp
mov
int
mov
cs
and
cmp
arpl
outsb
out
pminub
icebp
xchg
addr16
js
or
inc
and
fcmove
dec
xchg
call
cmc
sub
or
jge
or
insb
ss
jns
mov
pop
sub
fsubl
das
sbb
repz
lahf
insb
pop
mov
aas
int
repz
les
out
sub
push
jl
pop
lock
imul
adc
cmpsl
and
pop
add
pusha
cli
and
mov
dec
mov
ja
mov
aam
repnz
cmpsb
push
cli
testb
pop
sarb
push
fadd
inc
ror
pusha
cmp
push
aad
xchg
lods
adc
mov
or
lods
mov
cs
mov
sahf
mov
scas
mov
and
and
adc
mov
mov
mov
jb
call
xchg
jbe
outsl
out
sbb
into
push
xchg
hlt
testb
push
inc
out
mov
scas
sbb
cmp
out
ret
ficoms
adc
jge
cmp
xchg
mov
xor
pop
push
mov
imul
xchg
jo
paddd
popa
pop
sbb
mov
shlb
or
out
xchg
pop
mov
xlat
pop
push
aaa
jbe
sub
xchg
jecxz
pop
jnp
call
popa
jle
fwait
cmp
mov
aas
mov
cmp
popf
push
mov
mov
cmp
jnp
dec
pop
dec
mov
jo
in
imul
imul
mov
mov
xchg
add
negl
sub
cmp
stos
addr16
aaa
shll
xor
int3
pop
mov
pushf
mov
aad
mov
inc
and
and
mov
and
pop
popl
dec
mov
call
stos
push
movsb
mov
inc
or
insl
mov
fsubrl
pusha
sarb
add
cltd
dec
adc
cmp
sti
outsb
sub
sbb
ffreep
sahf
sbb
out
roll
enter
and
fiaddl
cli
cltd
push
ljmp
push
lar
mov
sbb
mulb
push
nop
adc
mov
sbb
and
add
jae
push
movsb
mov
cmc
fisubrl
sbb
xchg
test
mov
pop
shll
imul
adc
stos
xchg
or
cld
xlat
dec
outsb
mov
push
add
mov
lds
stc
notb
adc
xchg
cmpsl
jp
mov
imul
xlat
lods
cmp
mov
push
aad
mov
push
leave
dec
push
enter
sub
jnp
cmpsb
roll
arpl
popf
bnd
mov
xchg
or
in
in
mov
lds
lods
push
cmp
cmpl
popa
or
out
fwait
mov
pop
nop
test
aaa
cmp
arpl
and
insl
movsl
fst
jmp
mov
jnp
jecxz
mov
pop
mov
mov
mov
sahf
ja
sti
cmp
imul
dec
or
ljmp
ret
inc
jnp
mov
xchg
adc
aam
movsb
shrb
sbb
xor
pushf
scas
or
es
sarb
stos
cmc
add
push
push
into
push
sub
and
pop
pop
sub
in
push
add
xchg
inc
fs
dec
sbb
sbb
lock
loop
xor
lods
in
add
shrb
popa
in
xchg
mov
lret
cmpsb
inc
push
ds
xchg
cltd
in
cmp
into
mov
sti
fsubr
xchg
out
pop
and
addr16
outsl
add
cmp
cmp
cmc
xor
jmp
sub
add
clc
shlb
sbb
sbb
dec
push
inc
loope
cwtl
je
jge
pusha
sub
inc
sar
stc
fnstsw
pop
lods
xor
bound
xor
adcl
stc
popf
pop
xchg
mov
fs
pushf
lret
stos
add
and
mov
test
mov
pop
es
imul
nop
lcall
mov
sub
cmp
andb
add
rolb
sub
xchg
das
out
inc
cmpsb
push
inc
aas
test
jnp
cld
dec
test
dec
inc
jnp
or
cmc
sbb
xchg
sbb
push
js
cmp
or
xchg
pop
xchg
out
sbb
pop
lds
pop
and
insb
cld
cmpsb
imul
sub
xchg
push
out
clc
js
jne
add
push
outsl
xchg
daa
sar
lock
push
hlt
cld
xor
sbb
ja
push
adc
sahf
sbb
repz
popa
jl
in
xchg
xlat
movsl
mov
cld
pop
fistps
decb
test
adc
adc
data16
mov
cltd
xchg
pop
and
xchg
fmull
std
xor
adc
pop
push
mov
aas
xchg
mov
adc
loopne
push
dec
insl
test
jo
into
scas
cmp
rolb
push
sub
cli
leave
mov
out
popf
icebp
rorb
in
sbb
out
icebp
pop
or
xchg
lcall
shrb
out
popf
jbe
add
loopne
adc
andb
rcrb
movl
arpl
pop
ja
add
lock
cwtl
dec
fnstcw
jb
mov
xchg
xchg
fwait
jle
adc
outsl
mov
mov
push
sbb
decb
nop
sub
mov
stos
and
and
and
jg
sub
push
je
lock
add
insb
mov
cmp
push
add
push
mov
pusha
push
jmp
xor
test
lock
jne
cld
sbb
mov
dec
xchg
fwait
dec
mov
xor
cmovae
cmp
sti
shll
push
nop
inc
adc
mov
fidivs
pop
in
lret
pop
ljmp
lock
sub
cmp
inc
sub
jmp
sarb
dec
fdivp
jno
and
mov
insb
int
imul
pop
cmpsb
lods
push
jg
xlat
test
mov
repz
mov
cmc
mov
hlt
add
popa
and
lds
mov
mov
mov
jno
insl
pop
adc
aaa
aad
adcl
mov
xchg
xlat
fdivr
fisttpll
fsubl
dec
lea
jb
repz
sbb
adc
iret
sub
subl
data16
cmp
push
andb
xor
lods
fcom
addl
xchg
movsb
push
gs
inc
jle
rcl
lret
aam
sub
cmp
jge
push
loope
loope
mov
js
dec
in
mov
test
fisubrl
fldenv
in
sbb
pushf
and
push
shrb
lods
cmp
in
cmpsb
mov
out
cs
cltd
pop
add
scas
icebp
popf
adcl
mov
mov
sar
jg
movsl
stc
cmp
jo
pushf
cld
xor
daa
mov
bound
pop
pop
pop
adc
ror
test
pushf
inc
jmp
das
mov
jp
call
ja
push
repz
lods
lahf
cmc
jle
jb
sbb
loop
ljmp
lcall
sub
cmp
cmpb
hlt
mov
add
mov
test
enter
fwait
movsb
out
gs
mov
xchg
fldl
mov
push
fwait
ds
sbb
js
dec
and
inc
inc
dec
sub
out
fmull
mov
loopne
jmp
jmp
pop
cmp
sbb
test
aad
cmp
mov
xchg
cmpsb
std
cwtl
xor
xor
or
lcall
stc
call
div
push
and
out
push
sub
es
xchg
out
cmp
and
xlat
scas
cld
data16
cmp
pop
pop
sbb
lret
idiv
xor
in
popf
out
push
bound
imulb
rcl
pop
fsubl
insl
repz
outsl
xchg
inc
push
test
fisubs
jg
out
cmp
add
dec
dec
jnp
outsb
mov
push
and
dec
add
das
fs
push
addr16
gs
dec
xor
add
pop
lret
roll
mov
shl
jnp
arpl
fisttpl
and
out
lds
or
lods
adcb
sub
idivl
popf
out
inc
cmp
inc
pop
or
xor
sbb
pop
enter
mov
insl
outsb
out
xchg
pop
sub
xchg
cmp
pop
pop
mov
aas
out
sbb
shl
mov
out
aaa
sahf
xchg
adc
in
clc
adcb
xchg
subb
mov
sub
mov
int3
push
pop
xor
addl
cmp
mov
dec
sbb
add
pop
ds
push
clc
in
sbbb
outsl
mov
bound
push
in
lea
and
xchg
std
push
jmp
lock
jle
mov
repz
xor
jns
insb
add
pop
mov
mov
lahf
sub
pop
imul
test
sbb
movsl
ret
insb
lock
jp
dec
js
aas
leave
mov
add
ret
aad
push
call
jbe
arpl
cmp
or
jge
cmp
pop
ror
jmp
inc
jg
and
dec
jp
adc
add
popf
add
or
cld
cmp
aas
xchg
inc
mov
iret
mov
clc
sub
sub
aad
pusha
push
jp
xor
xor
fcmovnbe
loope
repnz
adc
nop
and
icebp
pop
popa
xchg
rclb
jp
mov
push
xchg
call
fabs
test
cwtl
in
add
ret
and
dec
fstpl
test
test
pop
insl
aas
fmull
call
sub
dec
xor
aad
sub
pop
movsb
shr
fistps
test
push
adc
pop
cld
cld
mov
sub
mov
stos
pop
push
movsl
mov
dec
xchg
jb
or
push
movl
xchg
cmp
pop
and
pop
mov
enter
fwait
jg
insb
sub
jmp
mov
mov
shr
data16
outsb
gs
call
loopne
sub
adc
pop
add
add
jmp
and
lret
push
push
aam
inc
cld
lahf
int
arpl
repnz
stc
lcall
aaa
dec
pop
and
fsubs
addb
ret
mov
add
cmp
xor
mov
fdivl
mov
cmp
dec
ds
cmpsb
aas
and
pop
mov
sarb
jae
cs
mov
pop
leave
adc
leave
add
xor
fdivl
push
arpl
adc
insl
cmp
lcall
jb
js
jge
jecxz
xchg
mov
rcl
pop
xchg
test
ljmp
sub
jnp
addb
popa
daa
mov
in
les
adc
or
cltd
mov
inc
movsb
pop
and
lahf
mov
ljmp
xchg
popa
push
lret
loope
xorl
sahf
insl
push
xchg
sbb
leave
and
xchg
push
mov
mov
dec
insb
cmp
mov
push
dec
and
cltd
mov
aam
xchg
push
movsb
dec
test
outsb
push
mov
into
sti
sbb
dec
aam
xor
mov
lock
cmp
outsl
insb
cmpsb
imul
in
push
push
sti
xchg
cmpsl
adc
lcall
loopne
push
mov
test
adc
cld
cmp
int3
pop
cltd
out
sbb
xchg
cli
dec
aas
pop
cld
jo
pop
mov
jmp
add
lods
adc
or
ja
or
xchg
jno
mov
sarl
xor
cmp
pusha
repz
pop
nop
rol
ss
push
lods
orl
test
dec
push
push
movsl
pushf
or
scas
ret
pop
or
pusha
scas
inc
fwait
adc
mov
dec
outsl
dec
gs
popa
push
jns
pop
jns
sub
pop
daa
fadds
inc
fdivrs
cmpsb
out
or
shrl
int3
popa
rcrl
cmp
cmp
shl
sub
jecxz
emms
dec
push
and
push
xor
ret
into
dec
addl
shrl
popf
add
inc
adc
loope
lds
into
shll
cmpsb
xor
pushf
or
les
sub
jge
mov
dec
push
ja
test
negb
jae
sub
rcl
lret
mov
sub
pop
jge
in
aaa
sub
fstp
cld
fidivrs
adc
enter
add
repnz
sbb
pop
cmpsb
push
fmull
mov
cs
aad
lods
xchg
and
lock
or
and
out
inc
roll
jecxz
mov
jle
fidivrs
in
shrl
lock
inc
jecxz
shr
out
adc
lcall
xchg
pop
xchg
and
xor
xor
sahf
xchg
jp
mov
jl,pt
push
pop
mov
xor
pop
test
pop
push
out
repnz
stos
fisubrs
insb
daa
mov
mov
loop
gs
mov
out
pop
mov
lods
or
stc
repz
xchg
ret
fstps
pop
jmp
cmp
test
inc
aad
mov
mov
loop
push
rcll
lock
push
cmc
xor
fcomps
xchg
out
adc
mov
xchg
insb
inc
xchg
sbb
sahf
xchg
sub
cmp
popf
pop
popf
add
pop
cwtl
xbegin
push
int3
add
xchg
mov
fs
xor
icebp
popa
push
sbb
push
xchg
add
inc
mov
push
pop
mov
push
aad
ret
addr16
jmp
test
mov
jl
mov
push
loop
imul
aaa
mov
mov
inc
mov
nop
sarb
push
jl
push
inc
aas
xorl
gs
cs
inc
js
icebp
in
fsubs
xor
leave
filds
fsubl
mov
sbb
in
lcall
xor
out
or
repz
pushl
nop
add
loopne
jbe
xor
add
js
test
outsl
sub
dec
dec
sbb
push
xor
dec
movsl
jge
pop
jb
test
add
imul
fcmovb
add
icebp
or
and
adc
das
dec
cmp
mov
sahf
sub
scas
mov
jmp
arpl
pop
xor
jle
jne
add
arpl
adc
testl
loope
dec
jae
sbb
in
iret
inc
jbe
mov
sbb
bound
and
idivl
mov
inc
jne
inc
pop
jg
test
xchg
cltd
or
mov
mov
rcrb
add
jge
aaa
mov
stos
dec
cmpsb
mov
call
scas
fsubs
pop
movsl
aad
lods
mov
fs
stos
loopne
lahf
cli
negb
mov
je
pop
sub
xor
pop
test
dec
addr16
cmpsb
xchg
sarb
push
xchg
push
dec
sub
imul
rcrl
pop
mov
jne
daa
cli
nop
hlt
mov
sahf
pop
add
mov
fsts
stos
iret
mov
cmpb
cld
test
dec
push
movsl
in
mov
jns
arpl
ss
fsubrp
repz
scas
mov
test
jnp
push
pusha
rcl
cli
push
jbe
mov
mov
pop
in
mov
add
pop
jmp
add
pop
inc
dec
adc
sbb
in
push
gs
aad
push
das
addr16
add
or
cmpsb
mov
pop
mull
sahf
jp
cmp
jb
adc
cmp
push
rcl
movsb
bound
in
sbbl
jo
lock
cmc
or
mov
nop
push
addl
jae
shll
orb
push
hlt
dec
into
xor
push
mov
inc
in
mov
and
cmp
int
xchg
int3
jl
jno
sub
jl
mov
loopne
jecxz
mov
data16
add
dec
lock
mov
dec
and
out
add
xor
and
out
fdivl
ljmp
sbb
pop
fiaddl
cmp
cmc
push
mov
imul
dec
pop
pop
ds
xor
jnp
sub
jle
sbb
ljmp
pop
mov
dec
gs
rcrb
imull
cmpb
rclb
push
insb
cmp
call
push
into
jg
pop
loope
xchg
ss
stos
outsl
inc
imul
pop
jno
mov
adc
adc
in
sbb
mov
jge
jo
mov
mov
adc
loop
hlt
add
faddp
mov
adc
insb
xchg
jo
mov
and
pop
icebp
inc
or
cwtl
mov
jge
ffree
sub
mov
xchg
in
mov
xchg
fcmove
xor
stos
jl
or
mov
arpl
xchg
insb
int3
sub
jne
push
test
cs
sbb
sbbl
jmp
sti
std
sub
bound
imulb
lods
dec
and
loopne
fstps
sub
fwait
push
popf
push
sahf
dec
cli
andl
pop
sub
sbb
and
jbe
or
pop
jl
pushl
clc
inc
push
scas
fcmovne
jo
popf
dec
adc
adc
xchg
leave
imull
add
cmp
test
shll
mov
push
or
sub
sahf
int3
mov
dec
add
mov
outsb
sbb
xor
add
cmpsl
imul
movsb
lock
lds
or
loopne
sub
popa
insl
xlat
loope
stos
loope
sahf
out
int
fidivl
insl
push
imul
cltd
sbb
cltd
push
popa
lret
push
dec
jmp
enter
ds
xlat
xlat
mov
mov
inc
lret
cmp
and
cmp
outsb
adc
shll
jl
adc
push
push
ja
mov
dec
loope
or
mov
xor
mov
lret
lods
mov
decb
lock
sub
mov
add
lock
xor
jnp
pop
shrb
add
mov
push
jmp
popf
sub
call
cmp
in
leave
ljmp
in
sbb
popf
pop
leave
cmp
mov
mov
test
push
add
sbb
dec
ds
pop
and
insl
fldt
mov
push
push
xchg
sbb
sub
mov
add
ds
shlb
mov
ds
pop
push
testb
fld
and
rol
out
push
insb
fldl2e
dec
sbb
pop
sub
inc
pop
pop
lret
jl
imul
dec
lds
out
inc
add
and
add
dec
shrb
push
data16
inc
add
jge
movsb
cmc
lahf
test
imul
jb
or
and
ficompl
aam
fstps
shl
sbb
int3
test
mov
icebp
movsl
gs
mov
js
or
mov
sub
fbld
faddl
push
mov
jne
lock
cmp
mov
push
xor
adcl
mov
inc
bnd
popf
shrb
js
dec
push
lds
icebp
push
ja
sub
inc
jb
insb
aam
mov
dec
loope
dec
lea
shl
inc
cmp
mov
mov
pop
sub
xor
into
clc
adc
fxam
lea
in
jne
mov
mov
imul
add
cmp
loope
rcll
and
cmp
pop
dec
and
les
sub
out
jecxz
inc
in
push
lock
in
xor
jb
fcomps
and
push
das
ficompl
cwtl
cltd
and
loop
inc
sbb
jne
sti
negl
inc
cld
jb
frstor
push
mov
push
push
test
jae
es
sub
push
push
inc
imul
mull
scas
daa
in
cmpsl
popf
xchg
repnz
sbb
movsb
in
add
in
jecxz
imul
mov
push
push
popa
mov
pop
inc
rcl
inc
mov
mov
or
push
and
push
jg
dec
lahf
out
sbb
pop
mov
jecxz
and
out
pusha
sbb
xor
lahf
sub
adc
mov
pop
sub
mov
sub
sub
test
dec
cmpsl
andb
mov
in
ss
push
xor
out
add
decb
xchg
mov
sub
outsb
mov
insl
fldt
stc
cmp
out
mov
cld
cld
scas
jle
daa
aad
pop
scas
outsl
adc
xchg
pop
mov
or
adc
arpl
stc
test
sarb
into
mov
xor
or
jp
adc
xor
mov
sub
pminub
scas
movsl
aaa
dec
cld
mov
pop
fs
movsl
scas
insl
mov
push
jg
mov
fldenv
jbe
inc
fnsave
jnp
insl
repnz
iret
inc
lods
movsb
push
out
fld
lret
push
dec
clc
xor
jecxz
lret
mov
xor
in
add
xor
cmp
mov
sarb
mov
sarb
shl
xchg
cmpsl
inc
cmp
fcmovb
mov
push
repz
xchg
outsl
ss
mov
popf
xor
das
ja
and
cmpsb
add
jae
loop
mov
and
dec
dec
sahf
out
adc
sar
movsl
xchg
dec
int
ljmp
jne
push
scas
sahf
roll
jp
dec
shlb
mov
div
adc
mov
xchg
or
popa
clc
mov
negb
mov
insl
cmp
mov
pop
cmpsl
adc
push
push
les
mov
ds
test
je
push
pop
push
imul
pop
jb,pt
shr
rcrl
out
mov
fisttps
popl
mov
test
test
mov
sbbb
cmp
nop
aaa
pop
xchg
inc
sbb
and
mov
sahf
mov
add
mov
popa
leave
aaa
js
sub
adcb
lahf
aad
loop
sub
mov
dec
rcll
int
adc
popf
push
pusha
mov
out
pop
xor
pop
mov
push
into
or
pushf
inc
in
cmp
pop
int3
aam
xchg
stos
lods
test
repz
pop
mov
ret
xchg
imul
subl
fwait
int
mov
jp
pop
add
or
adc
sbb
aam
adc
dec
sub
in
add
repnz
lcall
lret
ror
mov
cmp
sti
jnp
iret
and
pop
mull
scas
les
ret
jno
mov
push
push
jo
dec
dec
sub
ss
scas
test
data16
push
popf
repnz
sub
jne
popa
stos
call
pushf
sbb
lds
dec
xchg
stos
cld
or
cmc
int
insl
int
cld
mov
adc
add
mov
cmpsl
or
enter
cmpsl
aad
movsb
movsb
lcall
cmpsl
sbb
aad
cld
mov
dec
jg
mov
pushw
aam
inc
jbe
pop
sbb
aas
out
push
lods
imul
sub
pop
add
adc
arpl
mov
cld
or
pop
andb
jl
notl
das
mov
sub
xchg
xor
xor
insb
sub
repz
clc
jecxz
stc
pop
adc
in
dec
add
xor
or
adc
in
dec
inc
scas
outsl
push
sub
jmp
movsl
xchg
sub
insb
sub
out
xlat
mov
ljmp
xor
pusha
dec
jae
mov
in
add
and
loope
xchg
jae
cltd
lods
xor
enter
mov
dec
stos
test
cld
pop
sarl
inc
jnp
or
adc
mov
fsubl
sub
pusha
mov
adc
icebp
fimull
mov
dec
aad
xchg
popf
inc
sub
mov
mov
jbe
fxch
mov
or
adc
dec
xchg
cmp
sbb
outsl
dec
xchg
dec
imul
and
inc
mov
stos
cmp
jo
ss
and
sbb
scas
stos
cmp
pop
dec
dec
mov
in
xchg
and
subb
lret
popf
cld
adc
push
shrb
scas
lret
push
add
cmpsb
pop
or
inc
ljmp
imull
jo
dec
arpl
ret
xchg
clc
mov
dec
daa
dec
push
pop
mov
leave
dec
aas
lods
adcb
lea
push
xchg
pop
pop
cwtl
jns
mov
push
xor
insl
adc
call
sub
jno
xlat
mov
or
ret
lcall
fs
jmp
fimuls
stos
icebp
xchg
cltd
stc
cmp
fists
inc
add
jecxz
inc
ficompl
idivl
aaa
clc
das
cmp
in
sbb
lahf
dec
cmp
sub
int3
pop
dec
ret
push
dec
test
popa
int
daa
pop
sti
add
sub
sti
lods
inc
mov
jecxz
mov
jmp
add
scas
adcl
scas
xchg
push
push
stc
mov
shll
mov
cwtl
aaa
scas
dec
in
push
jecxz
xor
enter
pushf
aam
adc
addl
pop
sub
jns
rorl
lock
push
jg
xchg
fsts
insl
mov
and
out
sub
dec
test
scas
stc
inc
in
mov
inc
sti
call
pop
leave
hlt
repz
inc
lods
push
out
dec
ljmp
clc
mov
or
inc
movsl
lods
ss
shrb
pop
and
jns
push
orb
and
aas
pop
xchg
test
std
sahf
lds
adcl
fidivrl
add
mov
pop
dec
push
pop
imul
mov
mov
lock
lods
inc
repnz
dec
call
or
cmp
xchg
nop
jecxz
inc
scas
push
out
pop
lret
rorb
ds
adc
icebp
mov
out
push
test
loopne
imul
and
mov
jo
add
and
xchg
ret
clc
add
mov
adc
mov
in
fidivrl
sbb
subb
push
sbb
mov
push
test
ss
push
adc
lret
mov
cs
cmpsb
frstor
loopne
jge
inc
xor
mov
lock
adc
cmp
idiv
adc
jg
push
ss
cmpsl
mov
call
sar
add
or
call
add
pop
mov
verw
cmp
xchg
lret
sub
xor
pop
mov
push
or
bound
fldl
cld
out
out
xchg
ljmp
push
cli
cli
jmp
jecxz
pop
leave
push
and
out
push
mov
dec
pop
pop
pop
push
popa
or
shll
rcll
mov
lea
push
or
outsl
or
cmc
test
sbb
and
jecxz
adc
xchg
or
sbb
out
aad
mov
mov
inc
js
stos
and
push
mov
insb
cmpsb
and
fsubrl
and
jecxz
dec
pop
jg
ret
test
mov
push
stos
mov
dec
jecxz
cmp
inc
jle
add
xor
arpl
and
jae
std
jne
fists
push
aam
push
cmp
repz
pop
or
aaa
adc
repnz
scas
in
dec
cmpsl
fcmove
ret
jge
and
out
std
imul
les
pop
sarl
in
mov
cmp
xchg
cmc
cmp
pop
adc
stc
subl
pop
xchg
fisttpll
in
rolb
aam
sub
xlat
jl
and
jns
ja
xchg
addr16
mov
fwait
mov
leave
mov
jecxz
out
push
pushf
nop
push
sub
enter
ret
movsb
xor
out
adc
cs
cld
sbb
push
movsl
outsl
mov
inc
int
shll
and
clc
aad
mov
stos
call
mov
pop
adc
cmpsl
xlat
daa
cmp
fsubrs
cmpsb
mov
das
sub
push
test
out
dec
popf
adc
xchg
repnz
dec
repz
fwait
xlat
jg
sti
jge
movsl
subl
imul
orl
adc
lods
aaa
fcoml
pop
repz
lods
or
aas
add
ja
adc
fsubl
addb
mov
or
call
xchg
add
inc
sti
ss
dec
out
stos
clc
xchg
iret
jl
lock
das
sub
clc
lcall
sub
fiaddl
dec
xlat
mov
ja
pop
push
jmp
push
lcall
xchg
std
lods
push
xor
inc
mov
call
out
in
stos
leave
jmp
xor
mov
add
lds
imul
test
mov
sti
sahf
jae
lret
mov
mov
lret
sar
clc
vpaddusb
cmp
fistpl
flds
add
fsts
nop
les
popa
jge
jo
sub
cli
xor
cmp
inc
ljmp
pop
out
push
rclb
mov
jno
rclb
push
hlt
jmp
scas
lock
cli
ss
dec
add
push
mov
jne
sbb
sub
jl
hlt
mov
hlt
mov
in
xchg
sti
jno
and
pop
mov
jecxz
je
aad
sub
or
and
push
lea
mov
lds
dec
cmpsb
clc
jo
mov
lret
rcrl
and
jae
sbb
mov
push
dec
dec
sub
leave
popa
mov
pop
cmpsl
arpl
adc
or
in
fistpll
cmp
sub
lret
mov
shrb
pop
push
mov
rol
fnsave
icebp
or
add
mov
mov
mov
pop
add
pop
lods
cmpl
lcall
mov
fiaddl
mov
push
xor
aaa
mov
fldenv
and
mulb
mov
pop
in
pop
xor
mov
adc
std
imul
jmp
cltd
jg
cmp
mov
andl
loope
lock
add
jo
lcall
nop
outsl
rcll
add
repz
les
push
pop
and
sub
push
inc
cmp
jbe
or
popa
inc
pop
inc
xor
sub
mov
pop
mov
or
shlb
push
int
inc
fs
xlat
adc
je
call
add
test
pop
loop
mov
inc
dec
jno
sti
ret
or
jnp
fwait
inc
ret
sbb
sbb
inc
cld
sub
push
outsb
adc
jle
popa
rcrb
adc
shl
movsl
inc
ret
inc
subl
punpcklbw
adc
sti
and
stc
inc
mov
push
jle
mov
jns
fs
lods
xchg
sbb
add
dec
int3
mov
ljmp
mov
scas
adc
daa
in
iretw
dec
inc
lds
inc
xchg
and
cmp
pop
mov
add
xchg
pop
or
xchg
sbbl
or
aad
and
fs
push
movq
xor
or
mov
mov
and
rorb
mov
sub
or
lret
cmp
mov
jp
jno
and
dec
mov
sub
adcb
insb
xorl
mov
cs
mov
enter
mov
stos
rcl
mov
ficomps
mov
outsb
xor
xor
cmc
sti
mov
bound
xchg
xorb
add
out
push
shll
push
ss
test
mov
push
sbb
ljmp
xacquire
pop
imul
mov
hlt
dec
mov
xchg
test
xchg
lret
pop
cs
insl
leave
sbb
cld
mov
dec
push
nop
push
jl
sbb
sub
mov
loop
jns
jns
and
outsl
out
mov
or
nop
mov
test
sarl
mov
or
fldcw
out
xor
je
cli
sbb
jne
out
gs
rcr
in
test
xlat
sbb
adc
jg
insl
dec
loop
mov
mov
dec
xchg
adc
pop
enter
movntq
mov
mov
pushf
pop
sbb
fwait
scas
aas
mov
mov
ss
test
dec
or
jle
xchg
fs
push
aas
push
rol
push
negb
inc
xor
test
jbe
mov
sbb
inc
imul
xor
outsl
mov
mov
dec
add
xchg
add
cmp
out
pop
cwtl
hlt
cmp
mov
cld
jge
jmp
cmc
cltd
pop
ret
imul
cmc
jp
iret
jns
dec
jmp
arpl
and
and
jl
mov
adc
dec
cs
push
cmp
xchg
orb
shl
aam
sbb
leave
enter
in
lret
mov
push
dec
mov
sub
mov
sub
sbb
xchg
cmpsl
outsl
sub
jecxz
cli
mov
lahf
in
popa
push
cmpsb
dec
loop
mov
aam
cmp
bound
ficoml
pop
cwtl
out
fdivrp
fiadds
mov
es
imul
xchg
mov
aam
inc
aad
push
sub
or
sbb
dec
dec
add
sub
or
inc
xor
jg
push
jmpw
mov
inc
mov
mov
ja
sbb
mov
mov
dec
in
mov
dec
jmp
daa
mov
test
or
jns
dec
mov
sub
mov
aad
push
and
int3
mov
and
pusha
inc
mov
add
jecxz
arpl
sub
inc
nop
aaa
ret
pop
sub
imul
stos
insb
popa
ret
mov
sbb
mov
mov
sub
inc
xchg
cmp
bound
mov
pop
sbb
loope
or
and
and
stc
repz
add
mov
xchg
mov
sbb
and
inc
cmp
mov
repnz
in
sti
ret
loope
xorb
bound
sbb
dec
adc
insl
jecxz
sub
push
pushf
out
pop
cld
pop
insl
pop
iret
shl
cmpb
pop
xchg
insl
arpl
roll
push
xlat
in
mov
aaa
push
cmp
or
dec
hlt
pushf
sahf
sbb
out
mov
movsb
fists
pop
cli
call
std
jmp
xchg
mov
rolb
xchg
in
mov
sarb
roll
add
cli
lds
cmp
jbe
out
jae
xchg
fwait
hlt
xlat
jl
jnp
into
pop
adc
pop
push
clc
int
push
in
xchg
adc
pushf
sbb
push
loop
out
or
sub
mov
rcrb
jo
push
popfw
xchg
imul
mov
cli
dec
mov
repnz
int
and
roll
stos
lock
out
imulb
aas
andb
repnz
mov
push
jp
cmp
cmp
cltd
pop
mov
push
mov
lds
pop
pop
ss
add
xchg
lret
and
test
push
loope
mov
ja
inc
cmp
std
test
or
iret
xchg
mov
cmp
adc
js
lds
out
inc
jl
mov
xor
mov
pushf
cwtl
fsts
scas
mov
rolb
out
into
push
mov
adc
outsl
das
jp
dec
pop
adc
jne
scas
dec
negb
pop
pop
inc
mov
cmpsw
and
jg
jno
mov
addl
push
xor
or
inc
decb
jp
push
pop
jecxz
int3
mov
cmpb
inc
mov
push
jns
and
lcall
xor
arpl
js
int3
xor
xor
inc
sti
and
or
and
fisubs
pop
jbe
je
in
sbb
dec
add
jmp
mov
inc
pop
jne
add
inc
add
mov
dec
fs
pop
test
cmp
test
push
int3
push
rolb
fimuls
dec
fwait
icebp
xchg
addl
mov
sub
bswap
xor
mov
mov
sub
popf
inc
dec
sbb
pop
lahf
and
call
push
inc
pusha
mov
lea
sub
fs
cmp
jecxz
fdivp
lahf
inc
sbb
movsl
andl
push
mov
dec
leave
psrld
mov
inc
push
jb
adc
xchg
lock
cmp
dec
dec
sub
out
mov
pushf
mov
es
int
push
aaa
int3
sbb
ficoml
inc
adc
adc
test
pop
stos
loope
data16
push
test
xchg
test
jae
dec
dec
out
in
shrb
nop
or
xchg
xor
into
xor
mov
inc
or
fiaddl
mov
inc
add
inc
ja
pop
adc
inc
jo
ss
xorb
dec
test
jnp
pop
push
push
mov
lret
push
sub
int
ret
cli
mov
in
xorb
dec
adc
lods
jo
xchg
imul
mov
sub
lahf
xchg
sbb
inc
lret
je
insb
add
xor
pop
aam
repz
jge
mov
into
cld
ficompl
insb
mov
and
mov
jo
sbb
xchg
push
pop
push
arpl
ds
aad
in
jmp
aam
rcll
ja
sbb
ljmp
adc
xchg
jnp
mov
aad
into
hlt
gs
push
or
jg
cmp
or
ljmp
xor
xchg
movsl
cmp
sub
in
sbb
inc
aad
inc
sub
ljmp
enter
fiadds
movsb
imul
fisubrl
fadds
sarb
stos
xor
push
adc
push
inc
mov
add
mov
lahf
adc
mov
shll
xchg
xlat
lea
cmp
test
inc
sub
dec
lock
mov
ret
pop
dec
mov
add
icebp
dec
sub
xor
loop
cmpsb
dec
push
sbb
or
mov
adc
fcom
cmpsl
add
xor
push
aas
test
icebp
pop
pop
loop
mov
daa
push
rcll
shll
ret
iret
test
insl
fwait
iret
cmc
sbb
loope
add
out
pop
sub
hlt
xchg
enter
idivb
pop
ficoml
xor
rol
jmp
subb
and
jb
fwait
jbe
repz
cmp
into
fisttps
js
pop
mov
mov
sub
dec
loope
int
roll
xchg
xchg
clc
pop
mov
shlb
mov
repnz
xchg
adc
lds
lods
loope
inc
xor
push
jns
lahf
stos
and
mov
fimull
call
push
and
inc
fildll
lret
test
jmp
lds
ja
xor
std
pop
adc
jecxz
pop
and
mov
cmc
fbld
leave
fmuls
mov
lcall
mov
lret
inc
mov
out
daa
xlat
or
call
xor
insl
pusha
repnz
or
ss
scas
clc
fnstsw
jle
popa
scas
mov
inc
outsb
cmp
lods
rcr
ror
jle
fs
stos
or
add
sahf
or
js
pop
adc
or
mov
sti
inc
clc
out
push
cmp
neg
jae
mov
cld
mov
sub
enter
fsub
in
pop
outsb
dec
adcb
loopne
xor
jns
mov
jbe
cmp
adc
dec
inc
mov
cmp
jno
fsubs
mov
inc
push
movsb
adc
add
adc
pop
mov
push
mov
add
cs
jne
fistpll
inc
cmpsb
sbb
push
lods
sub
mov
mov
pop
mov
gs
pop
pop
outsl
js
push
jmp
add
jbe
pop
jp
jecxz
rcll
cs
push
cmp
sti
push
fnstsw
xor
jg
dec
insl
push
mov
call
cmp
sbb
fwait
jbe
jb
inc
sub
xchg
inc
push
jg
mov
outsb
push
jecxz
test
std
aad
aaa
mov
inc
cld
hlt
push
cmp
rolb
xchg
sbb
lock
xlat
push
jb
mov
in
push
ret
pop
clc
push
out
push
lcall
daa
push
pop
les
mov
or
sbb
sti
into
mov
sub
std
idivb
mov
jno
incb
shlb
push
int
mov
dec
push
jmp
mov
jno
fsubrs
sub
jmp
insl
xchg
jae
push
jae
or
push
call
pop
mov
lock
ss
ljmp
xchg
jle
mov
push
js
jo
mov
in
js
mov
sbb
push
mov
js
mov
insb
sti
mov
push
test
imul
mov
imul
roll
rolb
and
sub
and
lret
xchg
shlb
insb
ret
jo
popa
cmpb
outsl
and
rcrb
push
inc
and
jo
mov
lds
push
mov
or
gs
rcr
mov
in
mov
push
adc
adc
add
in
dec
mov
mov
or
pop
rorl
imul
xor
pop
icebp
notb
and
xchg
push
scas
je
push
ja
stos
fucomip
inc
cmpl
inc
fcoms
pop
lock
pushf
dec
dec
mov
outsb
int
pop
out
xor
loopne
loope
cltd
in
clc
lods
adc
jno
xor
sarb
pusha
daa
in
sbb
and
or
repnz
aaa
loopne
mov
add
das
push
dec
fs
movsl
ret
add
test
jb
dec
imul
lcall
jb
xchg
shlb
das
jp
and
cltd
loop
mov
mov
add
and
fnstcw
ret
into
dec
les
daa
mov
jne
into
pushf
leave
sub
cmp
pop
pop
inc
pop
jno
push
mov
rolb
mov
stos
int
ljmpw
push
sbb
xchg
fisubs
sbb
jno
int3
out
lods
cmpl
imulb
outsl
cltd
stos
aaa
cwtl
add
cmp
push
adc
rorl
insb
adc
sub
pop
sti
dec
cmp
mov
int3
mov
xor
add
cltd
push
xlat
cwtl
pop
dec
xchg
cmp
test
lds
in
or
xor
jbe
into
mov
mov
fcompl
negb
repz
sbb
lcall
push
int
mov
or
jmp
xor
xchg
jns
bound
cmpsl
cwtl
or
push
in
mov
inc
mov
aam
dec
xchg
pop
jne
loopne
scas
push
fs
pop
mov
inc
repz
popa
push
dec
mov
push
outsb
sub
sub
mov
push
cld
js
cs
pop
movzbl
in
cmpb
jno
jns
bound
push
sub
fcomip
inc
add
pop
in
lods
aad
iret
in
mov
pushf
sub
mov
mov
dec
fnstcw
addr16
inc
dec
dec
sub
es
jge
xorb
cmc
dec
lahf
mov
jmp
and
ljmp
pop
rorl
pop
lds
insl
aad
fadd
inc
dec
int
lcall
bound
xchg
jno
pop
sbb
cs
js
push
push
fisubrs
xor
insb
xchg
push
mov
adc
add
nop
xchg
gs
ss
mov
jns
pop
es
mov
addr16
xchg
dec
popa
ret
shrb
test
or
pop
faddl
mov
pusha
xor
xor
lds
dec
lods
xchg
add
push
int3
mov
cld
add
mov
jmp
jbe
ret
ds
orl
push
rcrl
cs
loop
clc
push
pop
cmp
insb
ret
pop
push
arpl
and
stc
adc
call
icebp
jne
fwait
stos
testl
dec
cmp
sub
iret
ficomps
jmp
das
movsb
or
in
xlat
jle
or
mov
gs
adc
xor
sbb
jg
out
jnp
lock
loop
mov
xchg
scas
cmp
or
lret
pop
ret
push
fdivs
aad
and
sbbb
in
sub
push
pop
lock
data16
int3
inc
add
and
pop
rcr
xor
mov
and
mov
or
fs
ss
mov
inc
inc
dec
sub
mov
xlat
pop
bound
loope
xor
push
cs
push
xchg
je
xchg
pop
pop
mov
adc
xchg
dec
mov
push
lahf
mov
push
jmp
es
nop
loop
pop
cmovp
sbb
xchg
inc
cmp
data16
imul
pinsrw
inc
mov
popa
pop
jno
jle
xchg
and
ret
fwait
inc
fldenv
gs
cwtl
pop
push
outsb
xor
push
pusha
push
imulb
or
inc
fsubrs
scas
gs
push
inc
pop
lods
lret
push
mov
add
mov
inc
inc
inc
xchg
fidivrl
les
cmp
pusha
mov
mov
mov
add
adc
mov
fidivrs
data16
mov
push
dec
cltd
inc
fidivrs
adc
pop
cmpsb
inc
sbb
insb
cld
push
sbb
xlat
mov
cmp
mov
dec
dec
idivb
into
shrb
shlb
test
into
push
repnz
xlat
xchg
inc
or
push
stos
jbe
icebp
pop
inc
insl
push
pop
test
xchg
addr16
jne
scas
loopne
loopne
sbb
js
orb
push
dec
outsl
push
cmc
xchg
rcr
test
out
scas
in
jno
inc
and
hlt
add
push
xor
mov
mov
gs
mov
pop
mov
pushf
sub
jne
nop
or
dec
js
or
aas
cmp
dec
sbbl
cs
outsb
into
xchg
pushf
inc
daa
or
adcb
add
sahf
fdivrs
add
stos
das
or
fbld
mov
adc
icebp
xchg
dec
addr16
add
add
loope
jns
xrelease
xchg
mov
in
daa
or
and
dec
push
xchg
adc
daa
dec
cltd
and
iret
in
out
popf
enter
into
pop
push
jae
cs
movsb
pop
sbb
xchg
push
fcoml
fistl
add
andl
es
imul
pop
xchg
ja
and
adc
in
popf
sbb
mov
jb
aad
dec
rcrl
scas
aad
mov
pushf
mov
cmp
testb
add
pop
je
mov
cs
and
sahf
lahf
or
mov
xchg
cmp
mov
mov
cs
jmp
or
adcb
outsb
add
je
jecxz
fnstcw
jmp
cmp
dec
mov
and
pop
movsb
insl
mov
dec
cmpsl
sub
push
cmp
movsl
roll
fdiv
aaa
cli
xchg
xor
into
loope
add
fsubl
or
dec
insl
push
or
push
or
jb
xor
mov
ret
and
dec
pop
xor
xor
cld
add
jl
mov
jns
pop
xchg
push
in
jne
mov
addl
lock
pop
pop
stos
pushf
in
std
xchg
ljmp
lock
lods
pop
in
sbb
xchg
in
mov
mov
clc
fimuls
iret
jb
scas
lock
cmc
into
fnsave
int3
rcrl
lret
nop
inc
in
repz
xlat
jge
xor
pop
fldt
sbb
cmp
rcll
repnz
and
pop
hlt
dec
aad
xlat
outsb
xor
jg
xchg
jge
imul
fisttpl
xor
leave
push
jg
fadds
push
lret
mov
test
std
inc
jo
fisubrl
mov
dec
jge
scas
jg
aaa
jecxz
fildll
mov
or
ret
sbb
mov
mov
mov
jle
inc
aam
pop
xor
mov
fs
pop
cmp
mov
dec
or
fisubrl
mov
movsb
inc
lret
shlb
int3
daa
xor
es
test
add
adc
dec
cld
cmp
mov
xor
inc
inc
stos
mov
in
xchg
outsl
cmp
ret
or
repz
xchg
and
stos
jl
pop
icebp
push
cltd
inc
dec
cmp
std
and
pop
jb
push
stos
lcall
sbb
pop
push
cmp
dec
add
mov
jbe
xchg
hlt
fsubr
in
inc
dec
and
stc
loope
add
cmp
push
sub
loopne
pop
call
jnp
add
jnp
lret
je
inc
aas
test
xchg
pop
jl
sub
mov
pmulhuw
cs
in
movsl
cmc
imul
loope
add
jge
push
dec
cs
jbe
sub
mov
xchg
shr
es
xor
test
sub
mov
cli
sarb
daa
ljmp
add
xchg
outsl
ror
jg
pop
add
push
mov
and
jo
insb
jge
xchg
fs
or
stos
xor
out
faddl
cmpsl
mov
inc
insl
jo
out
shrb
xchg
mov
subl
xchg
fcompl
or
clc
jecxz
lret
dec
fcmovne
test
xor
aam
jecxz
cmp
lods
test
leave
pop
sub
adc
or
lret
xchg
lea
iret
les
mov
mov
imul
or
loopne
int3
xchg
sar
dec
or
mov
gs
push
sub
xor
xor
insb
add
pminsw
jo
mov
loope
psubsb
push
js
popf
xchg
lretw
dec
rcll
lret
sbb
inc
stc
jg
stos
mov
fidivl
mov
jg
lret
ret
mov
xchg
and
icebp
fmul
mov
cmp
jno
xchg
mov
mov
pop
or
pop
sbb
dec
out
inc
test
add
aam
rcll
xchg
and
add
jbe
mov
or
mov
cmpsb
repnz
out
adc
fs
jno
movsb
rcll
mov
xchg
adc
mov
std
xchg
in
mov
bound
pop
mov
popf
mov
hlt
xor
mov
xchg
push
sahf
orl
xchg
mov
popf
push
insb
push
add
push
mov
imul
mov
out
aad
xchg
xchg
pusha
fisubrs
pop
popf
out
pop
push
and
xchg
inc
out
pop
imul
cwtl
xor
dec
add
fs
pop
push
cmpsb
or
push
insb
call
stos
cmp
push
mov
mov
dec
jne
mov
fidivrs
jmp
xchg
sbb
lds
sbb
inc
ret
outsl
push
jp
negb
mov
inc
xorb
pop
inc
lock
pop
scas
xchg
stc
mov
iret
int3
add
mov
adc
les
jne
faddl
lods
mov
out
int3
xchg
jne
lds
dec
sub
add
xor
loope
xchg
mov
sub
jge
out
les
pusha
pop
adc
movb
dec
scas
mov
pop
lods
push
fs
add
sub
daa
std
out
fcomps
mov
addr16
outsl
xlat
ret
in
or
cmpsl
dec
lods
adc
les
sbb
gs
pop
xchg
fcomps
adc
mov
pop
or
icebp
repnz
inc
mov
mov
mulb
pop
or
cmp
adc
adc
mov
push
call
roll
rcrb
hlt
mov
sbb
xor
sbb
xchg
sub
cmp
xor
shlb
push
push
mov
ss
sahf
in
movsb
insb
jno
rclb
dec
lds
sbb
mov
mov
add
dec
inc
push
and
or
ret
push
mov
mov
inc
mov
pop
xchg
cmp
xchg
mov
test
mov
sbb
lcall
roll
cmc
mov
fstpl
cmc
dec
out
ds
in
enter
mov
andb
outsl
or
fcoms
add
fwait
mov
pushf
fcmove
es
lret
jns
add
pop
lret
cmp
pcmpgtw
cmp
mov
adc
pop
dec
stc
stos
push
rcl
outsb
push
out
ret
inc
cwtl
lret
xchg
sbb
lods
outsl
xchg
popf
sub
and
or
outsl
inc
clc
push
enter
cmpsb
sub
or
leave
or
sbb
cmp
pushf
lret
sahf
push
lcall
sahf
add
mov
ljmp
add
clc
mov
int
sub
mov
ret
scas
adc
insl
daa
cmp
or
cli
and
cmp
mov
cltd
cmpsl
jb
loop
xchg
pop
adc
pop
inc
add
adc
das
push
push
mov
or
adc
repnz
push
divb
push
jmp
pop
pop
enter
jecxz
push
sbb
add
ret
imul
or
sub
imul
in
cmpsb
rcr
jae
sub
les
je
frstor
out
je
lret
call
sbb
mov
lock
xor
push
pop
fwait
push
and
aaa
popf
clc
xchg
imul
mov
in
andb
shl
ffreep
rolb
bound
loope
cmp
das
divb
add
rcr
mov
sub
stc
and
sub
aam
xchg
push
sbbl
lods
aad
mov
pusha
shlb
pop
dec
or
aad
inc
dec
and
into
addl
cwtd
aam
dec
or
not
push
js
nop
jbe
das
icebp
pop
out
insl
mov
repz
push
fldcw
test
mov
push
cli
test
sbb
jp
js
or
outsl
push
adc
dec
inc
movsb
imul
cmpsl
mov
and
mov
negb
inc
inc
in
xchg
leave
adc
insl
call
addr16
out
leave
pop
push
push
cwtl
jl
mov
je
movsl
push
pop
lret
dec
adc
cmp
pop
inc
fcoml
jb
sub
sbb
testl
movsb
jnp
push
xchg
hlt
cs
pop
sahf
ss
lock
lods
pusha
mov
ljmp
pop
add
mov
js
and
mov
mov
jae
adc
test
ret
mov
rorb
pusha
loop
and
cmp
ss
mov
scas
add
mov
push
aam
psrad
push
pop
sti
or
icebp
push
in
movsb
loop
popa
imulb
jl
jmp
push
ds
cs
mov
iret
ficompl
push
fdivrl
sbb
mov
and
add
in
incl
stc
push
in
push
pop
pop
lret
xor
sbb
repz
lock
daa
arpl
push
jp
outsb
or
add
stc
dec
add
shrl
adc
xchg
mov
jge
sub
cmp
lds
add
lea
jae
and
sub
insb
mov
push
jbe
pusha
push
push
mov
or
sub
mov
mov
dec
xchg
mov
cmp
and
push
adc
add
outsl
adc
fcoms
xchg
mov
sbb
lock
outsl
and
pop
dec
dec
out
mov
mov
in
mov
xor
data16
das
add
je
lret
push
adc
hlt
cmp
xchg
push
jbe
jg
popf
out
adc
out
loop
fucomi
sbb
and
push
mov
loop
sbb
in
popa
ds
rcrb
repnz
rolb
sub
jb
push
lret
cmpsb
arpl
push
js
sahf
stc
clc
int3
adc
insb
pop
sub
outsb
arpl
pusha
xchg
pop
xor
push
lret
mov
enter
xchg
ret
jmp
in
inc
pop
mov
ljmp
xor
and
jae
lahf
int
xor
mov
inc
cli
aad
mov
test
or
pushf
pop
out
jle
mov
fcompl
push
aam
imul
jmp
and
inc
popf
gs
lahf
test
out
mov
xor
add
xchg
lcall
and
shl
aas
add
rcrb
adc
fadds
incb
out
xchg
fisubs
push
in
add
adc
enter
cmc
dec
push
dec
mov
std
push
aaa
and
pop
inc
lds
stc
fs
mov
mov
mov
jmp
fidivs
into
inc
sbb
add
pop
pop
dec
xchg
jecxz
shl
jp
push
xchg
jge
es
mov
mov
sub
sbb
rcr
gs
in
movsl
jb
xorl
inc
fwait
jp
lahf
and
lcall
xchg
inc
xchg
cmpl
fucomip
xor
aas
int3
cmp
jge
clc
adc
shlb
leave
lock
mov
push
repz
pop
fldt
sbb
cmc
aam
idivl
ss
imul
mov
xor
scas
cmpsl
aam
call
das
adc
dec
daa
add
xchg
jmp
xchg
out
pop
jecxz
pop
mov
cmp
out
cmc
fistps
add
stc
pop
sbb
sub
inc
in
lahf
mov
push
movsl
pop
and
mov
mov
xor
mov
pop
cmp
icebp
minps
pop
pusha
cltd
cs
pop
cmpsb
push
mov
cwtl
scas
stos
inc
mov
sub
cli
mov
aas
aas
in
or
out
inc
xor
ja
les
inc
clc
es
lds
sbb
and
dec
cmpsl
sti
rclb
lods
mov
clc
addr16
mov
std
sub
lea
stos
rcrb
mov
sbb
imul
shlb
movb
stos
mov
inc
or
leave
lret
and
sub
les
pop
push
mov
sbb
sahf
repz
push
fmuls
jmp
mov
popf
dec
aaa
jge
loop
xchg
inc
cld
sarl
inc
sbb
xchg
cmp
add
gs
repz
mov
in
adc
cvtps2pi
cmp
outsb
ficompl
pusha
loopne
dec
ds
mov
push
xor
and
clc
imul
je
sbb
movsl
in
insl
mov
adc
pop
js
out
adc
aaa
fwait
xchg
les
lods
jno
les
mov
sti
or
pop
pop
fildl
nop
pop
xchg
push
push
mov
stc
push
bound
add
dec
cmp
push
or
pop
stc
sub
leave
cmp
orb
mov
adcb
bound
stc
aaa
pop
and
mov
mov
outsl
repz
fcompl
mov
les
adc
cmp
ss
pusha
int
ret
iret
ret
jb
push
inc
cmp
lea
out
dec
jne
push
mov
aam
xchg
popa
jmp
test
cmp
les
pop
adc
mov
pop
sbb
inc
sub
ljmp
adc
push
mov
iret
dec
repnz
int
insb
sub
push
xor
fildl
aas
push
ds
cmp
push
and
inc
dec
sbb
lahf
test
mov
outsb
stos
dec
mov
imul
ja
sbb
mov
fistpl
sbb
xor
outsb
adc
xchg
mov
push
mov
mov
cmp
addb
push
add
insb
ds
push
loop
rolb
cmpsl
pop
cli
lret
jbe
fildll
daa
pop
pusha
sub
xadd
xor
icebp
pop
cmp
jle
sbb
inc
mov
xlat
je
enter
pop
cmp
movsb
sub
repz
roll
ret
rcll
xlat
lret
lahf
lds
and
cmc
cld
add
push
mov
inc
icebp
loopne
sub
jge
test
repnz
movsb
in
mov
push
ss
bound
enter
push
xchg
inc
push
jb
lock
sub
cmp
or
cmpsb
into
sbb
xchg
or
filds
xorl
test
popf
or
jmp
dec
lret
ja
aas
js
sbb
jecxz
mov
add
jb
mov
dec
jns
shlb
test
xchg
imul
loop
dec
or
das
mov
add
pop
popf
inc
push
fisubrl
push
or
jecxz
pop
insl
negl
sub
loope
xor
test
add
lcall
add
jo
ret
mov
icebp
das
mov
sbb
in
jno
fcoml
pop
pop
cmp
push
rcr
sbb
or
ja
cmp
add
adc
cmp
xor
dec
enter
clc
sbb
xchg
mov
insb
sbb
rcr
dec
pusha
out
test
sbb
imul
sahf
push
out
adc
mov
in
rclb
push
ss
test
frstor
setno
leave
and
das
adc
sub
cli
lods
stc
pop
dec
add
mov
fildll
jmp
mov
push
cmp
mov
push
test
xor
push
lret
out
mov
push
sub
mov
jno
lods
sbb
loope
pop
jmp
pop
mov
sbb
mov
fisttps
loopne
aad
cmp
out
in
imul
or
adc
faddl
jge
aas
jmp
addr16
or
aas
mov
subl
pop
cmpsl
xchg
lods
jae
xchg
shl
or
add
xchg
in
clc
xchg
mov
xchg
insl
mov
int3
dec
sbb
fmul
xlat
xchg
movsl
adc
jbe
push
sub
loop
loopne
into
shrl
sbb
je
testb
xchg
push
sub
stos
mov
mov
jae
pop
jb
ret
ljmp
nop
xlat
sub
cmp
or
inc
xchg
scas
fdivrs
lret
aam
addr16
xchg
adc
adc
fldl
mov
lret
push
leave
ror
cmp
movsb
sub
mov
jb
mov
cmp
pop
sti
das
ret
aaa
notb
daa
jns
imul
push
das
mov
repnz
sar
lcall
xor
mov
xor
sub
test
movsb
cmc
push
pop
arpl
mov
and
sbb
sub
jmp
testb
loopne
aaa
sbb
ja
clc
in
int
movsb
adc
jecxz
jno
mov
or
push
into
mov
jg
jl
leave
mov
pop
sub
arpl
inc
insb
inc
sbb
lock
push
inc
fcomps
loop
sti
and
sub
inc
jmp
test
mov
mov
insl
cli
aas
push
push
xor
lcall
mov
shrl
std
pushf
pop
jge
adc
pop
jno
ficompl
addr16
movsl
push
mov
mov
mov
pop
dec
fs
jmp
jo
fxch
mov
test
aad
jp
in
movsl
dec
std
aad
or
add
adc
out
loopne
lea
xor
fstpl
xor
roll
out
mov
out
or
adc
fs
cmc
pop
mov
jmp
fisttps
pop
movsl
mov
cmp
iret
push
adc
xor
nop
sbb
insb
loope
mov
sbb
jbe
jbe
scas
xchg
in
pop
repnz
xchg
scas
lcall
inc
sarb
aaa
ss
test
fcom
mov
test
movsl
lahf
add
jmp
mov
test
jecxz
add
imul
movsl
mov
mov
or
lods
cltd
add
mov
push
int
pop
nop
jmp
adc
repnz
and
push
jle
mov
cltd
cltd
sub
sub
aas
outsb
insl
cmp
pusha
pop
sbb
cltd
call
cmp
mov
adc
adc
push
or
std
sub
sti
inc
inc
jecxz
cmc
aaa
push
xchg
jg
push
xchg
mov
mov
scas
mov
ja
pop
mov
jmp
imul
lea
ljmp
fiadds
jne
out
inc
jbe
outsb
cli
mov
outsb
cmp
add
adc
or
sub
pusha
outsb
or
dec
xchg
in
scas
je
aam
in
xor
sub
and
in
sub
lcall
xor
fwait
cmp
cmp
aas
lcall
sahf
jmp
js
cld
push
sub
mov
adc
sub
dec
and
repz
jg
add
cmp
dec
or
mov
ficoms
push
insl
and
sbbb
test
or
les
mov
js
jmp
xor
fisubrl
adc
dec
pop
mov
mov
mov
in
pusha
push
ljmp
push
mov
jmp
fdivr
add
add
sbb
pop
ss
fstl
mov
enter
xchg
or
xchg
jne
int3
fnstcw
push
jge
jae
aas
push
push
or
sbb
pop
call
es
fcoms
outsb
mov
es
pop
sub
movsb
pop
add
out
aad
mov
sub
cmp
pop
loope
jg
xchg
xorl
test
movsb
jo
test
fbld
and
icebp
ret
sub
sub
mov
pop
cmp
testl
repz
ds
jno
je
and
xchg
fistpl
push
xchg
ret
jmp
xchg
test
das
lret
movsb
mov
push
jbe
rorb
les
push
test
adc
rclb
sub
push
mov
in
cs
pcmpgtw
lcall
test
sbb
test
in
mov
mov
and
in
leave
or
pusha
pop
or
sub
sbb
adc
sarl
push
test
pop
sub
loope
in
sub
adc
and
fwait
ss
push
ja
pop
stos
dec
sub
repz
mov
dec
mov
push
xor
xor
add
mov
pop
stc
jge
jne
faddl
repnz
arpl
xor
mov
jnp
mov
sub
jle
pop
lods
clc
pop
mulb
add
jl
in
inc
movsb
fbld
push
xchg
leave
cmpsb
jo
mov
repnz
lcall
ljmp
lods
pop
lea
adc
test
inc
shlb
ffreep
cmpsl
out
out
stos
and
lret
pop
add
mov
js
out
cltd
and
jle
mov
or
inc
mov
imul
pop
adc
test
int3
add
add
push
sbb
dec
enter
repnz
push
in
push
shrb
out
xor
lret
dec
mov
jmp
popf
adc
lahf
imul
addr16
sbb
stos
cmpsl
jb
add
movsl
outsb
test
hlt
bound
aas
fwait
inc
pushl
into
push
dec
sahf
inc
lods
jne
aad
xchg
mov
cwtd
lods
fwait
shrb
dec
pop
add
xchg
push
mov
add
fs
adc
in
add
jne
jg
out
das
inc
rorl
fldt
mov
adc
sub
jmp
push
mov
cmp
jmp
mov
or
movsb
jbe
mov
or
pop
or
or
nop
and
insl
or
addr16
into
sub
add
int3
dec
popa
stos
fstpl
out
bound
aaa
mov
push
je
push
jns
lret
xor
test
int3
loop
les
rcrl
or
mov
ffreep
test
in
xchg
xchg
dec
jg
outsb
pushf
outsb
sbb
xor
xchg
mov
lea
mov
push
or
insl
jmp
xchg
adc
fsubrs
add
xor
mov
jg
popa
imul
lods
mov
js
daa
sub
xchg
dec
loopne
sub
sub
xor
loopne
insl
mov
mov
addr16
push
int
aaa
sbb
adc
adc
push
enter
gs
aad
pop
ret
shll
push
xchg
mov
pop
dec
popf
adc
ffree
jp
lea
mov
dec
jne
and
sub
mov
lahf
jmp
hlt
jns
stc
icebp
sti
mov
movsl
test
inc
sarb
mov
sbb
mov
xchg
insl
jo
xor
jo
jae
iret
fildl
aaa
pop
jl
je
mov
les
xchg
cli
xchg
inc
lret
es
xchg
sub
pop
fisubl
mov
dec
push
nop
push
mov
mov
push
jg
loope
pop
adc
stos
fwait
test
gs
mov
xchg
adc
mov
call
fs
push
jmp
lea
shll
jnp
rcll
xchg
mov
jecxz
rclb
pop
pusha
xchg
add
jbe
jb
jb
arpl
mov
cmc
xor
jge
lock
sub
std
aam
leave
xchg
fidivrs
inc
in
lret
jbe
pop
sbb
cwtl
push
pop
stos
mov
xchg
ret
out
lcall
aas
sarb
add
cmp
cmpsl
adc
testl
adc
cpuid
jecxz
into
sbb
pop
ret
jne
loopne
loopne
mov
pop
ret
push
into
test
insl
adc
mov
leave
in
inc
idivl
and
shrb
mov
mov
mov
inc
icebp
fnsave
push
int3
repz
daa
mov
push
xchg
push
mov
mov
lret
outsb
leave
pop
push
xchg
lcall
decl
jl
dec
rcll
xor
xchg
pop
mov
leave
das
xlat
into
test
xor
fistps
adc
jecxz
inc
inc
outsl
push
xchg
imul
mov
dec
inc
or
inc
sub
mov
loopne
arpl
sti
pop
cmc
or
mov
cltd
or
cwtl
lea
in
adc
imul
xor
cs
jge
or
mov
pusha
shll
iret
mov
mov
adc
and
daa
dec
rclb
ja
inc
xor
mov
movl
push
push
push
adc
inc
bound
aam
sti
xor
mov
sar
inc
inc
xchg
push
jb
cmpsb
dec
fsubrl
in
and
loope
or
xchg
insb
xor
jns
fmull
pop
gs
or
aas
stos
fcoml
popf
test
add
add
stos
lods
int
jp
outsb
xor
rcll
pusha
jae
inc
push
cmp
jl
adc
xchg
les
dec
add
mov
dec
cmp
sbb
jo
movsl
push
xchg
xchg
sbb
mov
dec
jmp
orl
std
js
addr16
fildll
repz
sahf
xchg
push
arpl
imul
fistpll
mov
adcb
push
pop
add
iret
sub
mov
pop
pop
adc
imul
inc
xchg
aas
adc
popf
and
mov
inc
pop
fisubs
test
in
sub
sub
jmp
pop
pop
dec
sbb
faddl
insb
xchg
pop
pop
aad
ret
inc
sub
dec
andl
repz
roll
and
inc
push
shrb
imul
pusha
and
arpl
stc
push
aaa
dec
bound
rcrb
cmp
pop
int
push
ficomps
ror
mov
mov
cmp
lock
cmp
sub
jl
jne
add
fiadds
ret
out
out
sub
add
cli
adc
mov
or
loope
mov
and
ret
imul
push
jecxz
ja
loop
or
jno
jns
inc
or
into
add
jle
mov
and
cmpl
into
push
mov
jo
mov
cmp
sbb
xchg
das
aas
rcr
test
inc
mov
sbb
mov
inc
mov
sbb
dec
lods
cld
sbb
out
jg
adc
ss
ds
mov
jbe
shr
jae
add
adc
mov
lds
lock
test
lock
ss
call
popf
jp
fadd
xor
dec
inc
pop
mov
lock
int
add
fistps
sub
repnz
lods
fistl
lds
cld
rclb
adc
sub
xor
cli
out
jae
out
cmc
out
test
hlt
shll
movsl
loope
sub
push
push
das
sbb
and
sarl
pop
fs
xor
push
imul
mov
mov
cli
sbb
stos
mov
mov
xchg
push
lret
ja
jbe
filds
sub
jae
outsb
pop
cli
popa
or
mov
or
mov
scas
or
fwait
mov
orb
push
test
sbb
repnz
cld
test
xchg
scas
jnp
sub
sub
testl
or
jl
movsb
sbb
mov
mov
sbb
xchg
cltd
cmp
mov
into
mov
int3
dec
je
inc
lds
dec
push
cwtl
setl
inc
fdiv
push
adcb
inc
pusha
jl
ficoml
lret
shr
test
push
add
push
jnp
cmp
repz
sub
pop
mov
xchg
call
jne
outsb
jecxz
ja
pop
pop
ja
lds
insb
std
xchg
inc
xor
nop
sbb
mov
je
inc
lret
sub
add
cld
repnz
popa
lret
mov
jb
bound
xor
rcll
outsl
xchg
fwait
aaa
xor
adc
push
mov
in
cli
jle
pusha
orb
ss
inc
scas
lea
sbb
stos
cmpl
orb
mov
std
push
in
xorb
cmp
dec
mov
sub
pushf
pop
cmc
popa
out
out
scas
pusha
inc
stos
cmp
inc
sub
pop
mov
cmpsb
inc
adc
add
jmp
xor
inc
scas
outsb
mov
mov
sub
sbbl
xchg
ss
cmc
push
push
cmp
push
js
or
out
sub
sub
pusha
lahf
fists
jecxz
imul
xchg
jmp
add
jle
lret
jbe
ficoms
jp
jne
or
aas
stc
jne
dec
xchg
orb
xchg
arpl
lret
aad
dec
sarl
add
cmpsb
aas
into
and
sub
dec
ljmp
dec
imul
xchg
dec
jb
stos
ss
and
push
daa
in
daa
mov
icebp
insb
push
mov
ret
push
cld
adc
push
jb
xchg
and
je
popf
adcb
xchg
or
cld
inc
add
pop
lock
mov
cmc
push
aas
ds
jo
or
xchg
xchg
adc
leave
mov
shlb
pop
pop
sub
inc
mov
xchg
xor
mov
push
enter
iret
jbe
je
loopne
pop
mov
lock
pop
pop
pusha
sbb
mov
outsb
jns
ja,pn
popf
jle
in
xlat
popf
cmp
ja
jp
scas
fcmovne
and
or
out
enter
popf
shrb
add
shll
movsb
out
es
xchg
test
aad
in
cltd
pop
cltd
mov
xchg
out
mov
inc
outsb
lcall
aam
stc
cmpsb
fs
cmp
femms
imul
jge
inc
fs
mov
cld
in
in
cmp
mov
push
mov
push
pop
cld
mov
pop
push
push
jecxz
xchg
mov
mov
in
and
movsb
inc
dec
inc
jo
sub
out
sbb
inc
loop
bswap
stc
and
ret
or
mov
add
pop
shr
jno
and
push
aas
fwait
push
xchg
add
pushf
xchg
ret
mov
std
js
sub
fisttpl
mov
mov
jns
out
dec
mov
mov
mov
cld
cmc
dec
call
insl
cmp
stos
sub
rcll
push
pop
mov
and
pushf
jmp
pop
out
test
insl
aas
pop
les
jae
push
clc
cmpsl
ds
jns
jp
scas
fistpll
push
sbb
int3
xchg
jb
mov
cmp
mov
jae
push
shll
int
cmp
mov
xchg
scas
rcl
imul
fiadds
sbb
add
sbbb
xchg
out
jmp
add
push
pusha
jl
fildl
inc
pop
or
clc
jecxz
xlat
pushf
mov
cltd
mov
stos
push
loop
add
les
and
sbb
mov
movsl
repz
nop
div
subl
mov
mov
div
xchg
jmp
pop
sarb
or
mov
cmpsb
inc
mov
mulb
je
dec
stos
cmp
pop
ja
push
cmp
lock
clc
call
outsl
push
or
hlt
mov
ret
test
fistpl
push
and
fstpl
and
cmp
ds
aam
xchg
cmp
jle
mov
mov
mov
out
xchg
fstpl
or
lea
inc
lret
add
inc
and
pop
in
test
fstp
xor
fs
mov
xor
pop
mov
aad
xchg
mov
push
pop
clc
pop
adc
repnz
jle
lahf
stc
mov
sub
jmp
out
sbb
xor
lds
pop
arpl
daa
mov
mov
ret
mov
test
mov
mov
push
scas
lock
sub
loopne
sbb
jge
iret
bswap
xchg
insb
mov
jle
int
movsl
cmpsb
push
pop
cmp
shr
mov
mov
pop
mov
add
and
ds
mov
mov
xor
lds
clc
loope
sbb
adc
push
lds
das
jne
xor
testb
inc
sub
ret
inc
and
xchg
mov
lcall
sti
sbbl
mov
and
dec
or
push
pop
outsb
sub
outsl
das
lock
data16
loopne
out
lret
mov
out
insb
dec
loope
stc
and
mov
mov
test
or
mov
xorl
icebp
popa
shl
scas
adc
bound
jo
add
jbe
pop
mov
es
jo
pop
sbb
push
test
rep
cwtl
push
cli
test
popa
mov
push
xchg
xchg
sbb
mov
jle
jmp
mov
sbb
std
lds
push
pop
popa
aaa
lahf
addr16
pop
addb
xchg
stos
ds
js
adc
cs
pusha
test
jge
outsl
dec
enter
sub
cmp
dec
add
mov
xchg
filds
lcall
mov
data16
mov
mov
sub
add
cmp
nop
jecxz
mov
sbb
adc
movb
data16
cmp
subb
sahf
cmp
pop
pop
adc
mov
std
in
addl
out
lods
arpl
fsubrs
mull
lret
xor
cmp
mov
xchg
xor
scas
stc
cmp
sub
mov
pop
mov
push
inc
std
xchg
mov
in
sub
mov
cltd
sbb
mov
fmuls
repz
lret
cmp
test
shrl
mov
sbb
inc
imulb
xor
mov
pop
xor
mov
scas
inc
jp
jecxz
cltd
adcb
sub
bound
fnsave
sbb
xchg
inc
inc
push
sub
push
shrb
bound
xchg
add
iret
xchg
dec
pop
nop
push
cmpsl
dec
or
cmpsl
lods
aad
jnp
push
rorl
es
mov
jl
jecxz
stos
loopne
out
gs
push
daa
jle
int3
and
sbb
ficoml
repz
pop
or
shrl
enter
add
lods
sub
aaa
std
xchg
stos
and
std
jmp
inc
stos
call
jbe
repz
jmp
es
stos
xchg
sahf
fistpll
jge
arpl
xchg
jno
fs
mov
mov
iret
imul
push
and
xor
jo
cmpsb
adc
pop
enter
fwait
dec
repz
xchg
and
push
xchg
push
mov
dec
xor
out
add
xchg
insl
sub
adc
hlt
pop
in
push
into
ficomps
jp
dec
or
out
in
pop
mov
ja
dec
fistpll
dec
cmp
fs
insl
out
and
bswap
nop
dec
loop
sub
inc
cltd
cmp
pop
xlat
inc
cli
loope
arpl
push
nop
sbb
cli
stos
cmpsl
jle
iret
ret
pop
mov
test
cmp
movsb
loop
cmp
sub
jns
dec
pop
scas
repz
rorl
adc
dec
iret
rep
xor
imul
and
cmp
mov
push
cmpsb
sbb
mov
dec
xchg
and
imul
in
repz
repnz
adcb
cmp
mov
sbb
xor
int
in
inc
push
divl
xchg
inc
rcrl
imul
in
popa
call
iret
cs
add
int
imul
sub
adc
lds
xchg
pop
orl
stc
adc
inc
mov
mov
xchg
repnz
mov
dec
hlt
inc
scas
jbe
sahf
dec
das
inc
inc
push
add
adc
cmp
les
xor
lock
lods
clc
dec
int3
pop
cwtl
imul
stos
push
stos
sub
popa
icebp
call
mov
cmp
sbb
push
jns
aas
fstpt
mov
dec
xor
jno
mov
stos
or
aam
out
mov
push
lea
xchg
jb
or
jmp
loope
xor
pop
cmp
movsb
xor
je
je
inc
xor
mov
jbe
filds
pusha
test
sahf
add
int
test
popa
and
cmp
cmp
push
or
mov
scas
push
rorl
stc
movsl
ret
cmpsl
daa
mov
cmp
fldcw
push
jp
cltd
fistl
arpl
and
test
push
imul
loop
jnp
pushl
test
pop
xchg
jmp
sub
xchg
subb
xchg
call
pop
and
add
or
jecxz
mov
pop
jecxz
mov
inc
xchg
andb
xchg
loop
in
mov
je
test
pop
ret
in
pop
sbb
fildll
arpl
out
or
push
gs
jmp
xchg
jle
cld
aam
popf
xor
in
sar
mov
adc
fxch
loopne
hlt
fcmove
jg
clc
jecxz
testl
inc
nop
stc
adc
fwait
and
mov
jp
clc
jecxz
dec
pop
mov
pop
jmp
push
jg
dec
add
das
arpl
mov
and
cmpb
jp
iret
ljmp
push
add
arpl
and
repnz
ret
leave
stos
jo
xor
in
cmp
xor
jl
mov
xchg
push
imul
and
ds
cmp
sub
add
popa
fmul
pop
repnz
arpl
xorl
sbb
scas
jno
stos
dec
clc
icebp
xchg
dec
arpl
jle
mov
xor
loope
and
das
imul
cmp
mov
jl
adc
test
jecxz
cwtl
fwait
add
inc
push
jecxz
lahf
jb
cmp
ds
adc
mov
xor
mov
cli
sbb
or
jbe
dec
in
and
xchg
xorb
shlb
insb
dec
xchg
push
int3
mov
in
loop
adc
xchg
je
mov
or
jno
sahf
das
mov
mov
adc
loop
outsb
ds
fldt
xorl
movsb
adcl
pop
out
aas
mov
or
jg
and
mov
push
ljmp
cmp
idiv
add
push
or
or
push
dec
cmpl
int
xlat
pushf
sbb
adc
push
test
movsl
ss
sub
pop
lods
fucomp
mov
xchg
movsb
xchg
repnz
arpl
lock
jae
movsb
insb
mov
clc
andb
iret
mov
in
iret
aam
std
repz
cld
xor
xchg
jns
sub
data16
pop
dec
lock
pop
mov
pop
loopne
xorl
mov
imul
cmpsl
cmp
mov
jae
andb
cltd
mov
iret
cmp
cwtl
dec
out
call
fst
or
xchg
scas
cs
jno
cmp
cmpsb
jge
push
and
mov
or
mov
push
daa
adc
xor
mov
add
dec
mov
repz
cltd
pop
dec
adc
xor
push
fisubrl
xor
popa
cmp
fdivl
pop
xchg
lahf
adc
sub
xor
and
mov
or
dec
insb
leave
rorl
inc
mov
out
mov
out
mov
cli
lea
xchg
int3
push
shl
cmp
and
dec
fsubrl
loop
mov
mul
stos
iret
mov
es
mov
inc
mov
popa
daa
leave
mov
pop
or
jnp
sbbl
push
and
sub
sub
iret
add
addr16
sub
sub
jmp
aam
fmull
push
mov
addb
cli
adc
repz
jae
test
mov
sbb
adc
out
xlat
lea
jmp
pop
inc
xlat
sub
push
iret
shll
shlb
out
sub
pop
push
stos
jne
int3
push
fbld
shr
add
fwait
dec
pop
lret
jl
pop
shll
call
sbb
mov
lcall
lret
pop
repnz
cmp
aad
dec
sarb
inc
push
cmp
and
inc
jl
inc
pop
jno
std
or
sahf
sub
mov
out
cltd
in
mov
or
pop
sub
xchg
out
or
jmp
xchg
cmpsb
mov
add
mov
dec
pop
in
bound
xlat
arpl
push
jnp
fbld
jns
js
nop
dec
cmp
push
imul
das
fdivrl
insl
add
aad
push
popf
fmuls
jns
sub
ss
pop
xor
ret
and
lret
hlt
outsl
pushf
imul
jle
mov
jecxz
stos
push
jae
ss
cmc
shlb
out
push
adc
divb
sbb
xchg
push
inc
xchg
leave
stos
add
outsb
inc
jno
push
repz
dec
sbb
jbe
mov
mov
stc
fstpl
xor
sub
gs
icebp
idivb
aas
jmp
data16
push
fwait
ljmp
mov
cwtl
push
popa
loopne
pop
push
or
add
sub
and
maxps
repz
lods
sub
sub
pop
dec
das
mov
dec
out
mov
xor
sbb
es
stos
std
sub
add
dec
iret
int
sti
jne
mov
add
test
cmp
lcall
cmpsb
cmc
in
xchg
cmpsb
mov
int3
out
jl
push
pcmpeqb
das
sbb
lret
movsb
fs
stos
loope
call
lret
fwait
pusha
test
ds
aas
pop
push
imul
aad
xorl
dec
hlt
and
or
les
xchg
add
xchg
cmpsl
insb
leave
int3
cmp
iret
push
insl
fcoml
sbb
push
push
cwtl
mov
aam
sysenter
lea
fs
out
mov
push
aam
repnz
int
rclb
adc
mov
jg
lock
dec
and
test
movl
out
shlb
pop
fneni(8087
andl
mov
inc
filds
scas
shlb
popa
leave
outsb
shll
daa
cmp
fstps
dec
sub
cmpsl
popa
push
inc
adc
push
lahf
daa
add
cli
scas
jmp
into
mov
xor
xorb
leave
loope
int3
or
loopne
das
xor
mov
rclb
sub
nop
cwtl
jns
jle
fs
shlb
push
inc
dec
push
xchg
jle
hlt
enter
fs
out
cltd
xchg
adcl
mov
cltd
int3
ds
mov
scas
xor
sub
lods
pop
fcmovu
add
icebp
mov
icebp
adc
je
lret
mov
lret
std
push
lds
incl
and
adcb
jno
stos
cmpl
jecxz
or
ds
mov
ss
push
mov
sbb
ljmp
pop
push
insb
jno
ljmp
bndstx
fisttpl
adc
stc
and
mov
in
int3
xchg
popf
popf
mov
call
dec
or
lret
xor
mov
fists
and
jbe
inc
xor
fcmovbe
out
mov
sub
fldcw
lods
out
mov
test
or
nop
out
je
rcl
xchg
movsb
loop
stos
xchg
dec
push
insl
sbb
aad
xor
push
xor
test
sub
into
xchg
test
sbbb
cld
imul
loopne
ljmp
xchg
cmp
dec
xor
mov
mov
insl
das
fisttps
das
mov
cmp
dec
mov
movaps
fs
push
pop
int3
mov
lcall
inc
enter
imull
inc
mov
mov
das
scas
leave
jmp
outsl
sbb
jmp
shl
mov
loope
stc
push
sbb
or
push
pop
lods
mov
adc
ficoms
inc
pop
rcl
cmc
ljmp
add
lret
outsb
in
shrl
int3
data16
sub
lahf
jl
sub
rol
sub
add
mov
mov
mov
cwtl
icebp
sbb
pop
testl
jne
mov
xchg
sahf
pop
scas
ficomps
ljmp
xor
stos
cltd
lret
sahf
out
test
leave
hlt
xchg
jl
pop
into
jecxz
stos
xlat
push
sub
loopne
mov
es
lret
cmp
jecxz
dec
fdivrs
pop
dec
ljmp
sbb
pop
out
outsb
pop
mov
jae
ds
jo
lea
fcompl
in
push
mov
jb
xchg
movsb
inc
das
enter
and
dec
popf
or
sarb
mov
push
sub
jmp
mov
xchg
rcr
sub
lock
add
jp
pcmpeqb
or
mov
js
push
dec
out
bound
inc
call
inc
sbb
repnz
fldcw
ficomps
stc
dec
jbe
and
call
out
dec
outsb
push
and
jp
mov
or
mov
mov
lods
cmpsl
dec
inc
mov
inc
mov
sub
cwtl
sahf
sub
lea
sub
stos
pop
testb
fildl
lcall
ss
in
pop
adc
and
jno
lahf
dec
pop
call
push
aas
out
out
xchg
insl
std
mov
jns
mov
mov
xchg
fcoms
and
xor
xor
popl
loop
movl
fstpt
xor
cmp
dec
rcrl
into
dec
jle
and
cld
cmp
pop
mulb
clc
or
imul
lods
mov
xlat
in
inc
dec
dec
mov
and
push
cmpsl
xor
stos
outsl
cld
mov
dec
pop
sub
cmpsb
loop
out
dec
xchg
add
jmp
push
push
ret
sbb
sbbl
leave
bound
leave
dec
mov
xor
xor
xchg
xor
gs
xorb
xor
push
clc
sub
frstor
and
jns
imul
sub
sub
data16
test
dec
push
and
jb
xchg
adc
in
adc
xchg
sbb
add
sub
in
fwait
outsl
inc
popf
aad
in
and
out
push
addl
ficoms
mov
inc
rcr
test
in
lods
dec
sbb
jle
push
mov
xchg
inc
dec
inc
add
call
sub
out
xchg
outsb
shrl
mov
ss
popa
imul
pop
ss
inc
and
pusha
sbb
ljmp
mov
sub
jge
pop
jmp
aaa
xchg
inc
and
mov
call
xchg
insb
lret
mov
insb
cmp
or
popa
sti
sbb
je
bound
xchg
mov
sbb
pop
push
pop
imul
sahf
jmp
mov
sarb
adc
sbb
movsb
inc
push
add
outsl
imul
push
daa
or
scas
je
fstpt
mov
fldcw
rcrb
mov
leave
and
testb
inc
lea
pop
adc
movsl
sahf
xchg
jge
cmp
mov
push
outsb
mov
xchg
or
js
lret
clc
lds
in
addl
lods
and
movsl
push
insl
dec
ret
fwait
imul
push
dec
cmp
dec
cmpsb
mulb
pop
leave
lods
mov
stc
repz
dec
stc
dec
ljmp
aam
or
lea
xor
jge
cmpsl
leave
mov
adc
jns
scas
das
mov
adc
and
push
call
jnp
imul
ja
or
outsb
repnz
jno
pop
mov
add
lds
pop
pop
lcall
aad
lock
fsubs
sub
dec
aam
or
adc
das
sbb
pop
xchg
inc
push
push
xlat
xor
xor
push
xchg
inc
dec
mov
and
sbb
aad
popa
cltd
jp
pop
cltd
pop
and
adc
addl
jb
cmp
mov
cmpsb
xchg
repnz
mov
and
add
loope
mov
add
mov
push
mov
jb
pop
jne
mov
adc
clc
cli
inc
jno
stos
adc
std
fmul
mov
ficomps
fs
outsl
cmp
push
shrb
or
movsb
inc
sbb
inc
jo
push
mov
imul
inc
test
aas
xor
stc
pop
arpl
xchg
mov
inc
fstpt
jo
in
dec
mov
mov
ret
fbstp
mulb
daa
sbb
ror
cmp
pop
in
dec
ret
rol
popf
cld
mov
inc
out
cmp
push
add
aam
cmpsl
out
lahf
and
int3
enter
sbb
jmp
xchg
dec
xor
or
or
imul
pusha
data16
xor
mov
mov
push
pop
dec
pop
mov
sbb
divl
mov
lods
in
lret
out
out
loope
push
scas
and
rcl
or
pop
pushf
push
inc
jb
rcll
xchg
jge
or
fidivrl
mov
out
sbb
xchg
shlb
mov
bound
enter
test
cs
mov
loop
aad
or
adc
and
inc
leave
dec
xchg
sub
mov
jno
scas
pop
mov
xchg
mov
jecxz
in
and
int3
sbbl
popf
adc
jecxz
fmuls
pop
outsb
scas
jp
outsl
mov
lret
sub
andl
jge
pop
inc
lahf
popf
mov
outsb
mov
cmpsl
mov
mov
loope
aas
push
out
xchg
dec
push
gs
adc
loope
add
or
mov
cmp
loope
in
ret
dec
xchg
cmp
out
aad
mov
shll
ffreep
lds
in
aaa
lods
mov
decb
or
push
aas
fistpl
mov
push
sbb
incl
push
mov
shll
bound
rcl
ljmp
mov
cmpsb
inc
lods
or
pop
dec
jecxz
es
fnstsw
inc
fwait
dec
push
loop
sbb
lahf
int3
xchg
aad
es
inc
pop
scas
mov
ss
test
jo
push
cs
in
sbb
shr
rorb
lret
pop
cmp
cmpsb
bound
xchg
mov
and
inc
sub
mov
mov
xchg
add
loopne
iret
adc
lea
mov
xchg
movsl
cmpsb
ljmp
dec
dec
loop
cld
pushf
int
and
pop
cmpsb
jmp
shlb
aam
out
mov
outsl
pop
in
pop
mov
mov
sub
js
mov
inc
adc
jo
dec
xor
enter
xor
or
je
push
aaa
cs
mov
mov
shr
xor
test
fisttpll
adc
call
and
mov
mov
pop
or
test
outsb
jp
in
mov
movsb
cmp
out
add
enter
sub
mov
push
out
cmpsl
inc
int
test
add
or
push
fnsave
jmp
cmp
inc
das
jb
dec
repz
mov
iret
and
mov
sarl
shr
add
loopne
xchg
sbb
sbb
add
or
pop
cmpsl
mulb
adc
pop
clc
jns
mov
xchg
bound
jmp
imul
jge
shll
std
adc
lods
cmp
xchg
and
enter
addl
mov
aas
leave
ret
addl
setno
or
cli
dec
shll
jle
mov
xchg
daa
les
fwait
iret
pusha
icebp
mov
and
in
mov
std
out
lds
nop
fwait
popl
xchg
push
push
mov
xor
arpl
xlat
add
sbb
leave
adc
inc
xor
int3
cmpsb
sub
xchg
dec
jl
sbb
mov
leave
fwait
insb
lret
cli
call
xchg
rorl
xchg
in
mov
inc
sbb
adc
movsl
out
add
mov
out
data16
jg
sbb
jmp
leave
test
mov
inc
jg
adc
fldenv
mov
popf
sub
sub
mov
inc
imull
cwtl
xlat
js
dec
dec
add
cmp
int3
in
mov
xor
and
sub
rorl
cmpb
cld
dec
das
xchg
mov
xchg
xor
and
sub
xor
popf
push
stos
mov
iret
int3
mov
push
iret
add
xor
scas
cmpsb
sub
xchg
xchg
jae
dec
mov
push
xor
jo
mov
jns
mov
cmp
popf
cmp
mov
scas
insb
cld
divb
push
mov
push
cs
ss
sub
and
cmp
fisubrl
rcl
sub
add
out
pop
adc
mov
add
push
pop
pop
push
iret
push
sbb
pop
jmp
inc
cmp
jp
fcoml
int3
add
inc
cmp
xchg
scas
pop
repnz
push
daa
icebp
inc
mov
popa
mov
outsl
jns
div
mov
and
ret
xchg
lcall
lahf
or
xor
pop
sbb
or
cs
add
add
mov
rcrl
leave
cmp
ret
mov
sbb
into
mov
js
push
in
les
enter
sub
testb
cmp
movsl
jmp
sub
ret
aaa
in
pop
aas
fldenv
lahf
or
xchg
lahf
ja
jmp
or
sbb
enter
imul
in
hlt
mov
lret
leave
inc
cmpsl
jg
mov
dec
les
icebp
add
mov
data16
jge
pusha
stc
sub
mov
mov
sti
lret
xchg
scas
int
push
jecxz
mov
jle
lret
enter
js
mov
rolb
push
aam
sbb
lods
adc
ljmp
pop
cmp
imul
lods
adcb
jb
mov
stos
xchg
sbb
clc
mov
xchg
fidivs
mov
inc
movsl
cmp
incb
je
cmp
andl
fdivrp
fbld
lret
fs
fwait
xchg
out
pop
inc
flds
dec
lods
cld
or
leave
lahf
bound
cmp
mov
sub
les
cmc
xchg
adc
lods
int
mov
push
push
cmp
orl
fistps
push
xor
cmc
xlat
add
jg
xchg
mov
int
fnstcw
and
lret
xor
sub
jne
jb
ficomps
push
popf
xchg
lahf
mov
aaa
call
in
rclb
pop
xchg
sbb
in
pop
bound
xor
outsb
or
push
pop
outsl
shr
adc
sbb
inc
mov
fbstp
ss
notl
jl
or
mov
add
data16
repz
inc
xchg
je
xchg
xchg
dec
pushf
dec
push
insb
notl
inc
dec
jo
das
cmp
out
pop
adc
lods
in
lahf
lret
xchg
xlat
jb
push
mov
push
shl
sub
inc
jp
ljmp
out
dec
cwtl
mov
popa
aam
in
rcll
aad
or
inc
sub
cmp
jns
and
jae
mov
inc
bound
into
mov
nop
notl
push
cmpsl
mov
xchg
ljmp
xchg
sbb
hlt
fdivrl
xor
xchg
jae
jns
inc
bound
mov
cmpsl
xlat
pushf
mov
and
add
mov
xchg
lods
sbb
je
mov
imul
mov
dec
stc
pushf
in
or
xor
imul
jmp
lock
mov
push
imul
and
adc
in
andb
cli
push
out
or
pop
mov
dec
insl
pop
sbb
push
cmpl
dec
or
loop
bound
test
aas
loope
cmp
add
xor
fmul
loop
cmp
sub
pop
clts
lret
pop
test
push
or
mov
dec
enter
int3
fistpl
sub
sub
xorl
add
es
ss
mov
cmp
adc
sub
mov
jp
mov
fcmovne
clc
mov
jl
push
leave
lahf
lock
ljmp
gs
pop
ja
add
stc
fs
push
sti
cmp
cmpsb
fdivrl
mov
lods
mov
and
psrlw
repnz
mov
out
push
out
shr
ds
inc
enter
mov
mov
adc
and
sub
shrb
xorb
ds
fs
mov
aam
jns
ja
pop
ficoms
cli
mov
test
insl
clc
mov
lret
fstpl
mov
pop
cmp
mov
xchg
adc
nop
mov
data16
test
fcomps
or
sbb
mov
shll
lods
push
testb
out
mov
push
inc
aad
push
adc
daa
adc
rcrb
add
xchg
lret
mov
or
mov
cmp
mov
xchg
and
sub
jg
fldl
stos
fstpl
dec
mov
leave
cli
in
icebp
outsb
inc
cmp
stos
mov
and
inc
js
inc
mov
fiadds
adc
jno
sti
push
or
and
or
jno
xor
mov
ret
stc
std
mov
push
dec
lahf
jge
dec
mov
mov
test
sbb
xrelease
adc
sbb
clc
scas
mov
cwtl
insb
fldl2e
out
cmp
ljmp
subl
ret
int
cltd
fs
data16
sahf
jae
imul
mov
test
mov
nop
push
in
inc
mov
xor
mov
loope
mov
daa
xchg
push
shll
imul
call
sub
fcmovbe
pop
test
mov
out
cs
xor
aad
cmpsb
scas
scas
cmp
enter
data16
pusha
adc
or
cwtl
or
scas
movsl
xchg
dec
js
cmp
cmp
shrb
fucom
int3
lock
cmpb
jb
jo
jbe
xchg
notb
mulb
popf
ret
out
loopne
sbb
jge
rorb
push
jmp
cmpsl
idiv
cmc
mov
ficomps
inc
lds
jb
xor
call
inc
mov
stos
adc
test
hlt
loopne
adc
movsb
xor
std
add
stos
ficoms
rcrl
in
xor
mov
sbb
rcrb
popa
loopne
prefetcht1
mov
cld
mov
outsl
xor
popa
inc
mov
lock
test
imul
mov
adc
jmp
gs
ss
add
mov
mov
lock
icebp
mov
lcall
jo
dec
outsb
sbb
sbb
xor
leave
sub
fs
and
aad
pop
movsb
push
xchg
xor
divb
scas
cmc
out
je
cwtl
outsb
lahf
lock
imul
fildl
xchg
inc
pop
andb
cmp
push
leave
cmpsb
push
adc
xchg
pop
jae
test
dec
movsb
clc
inc
out
jmp
scas
adcb
lret
lods
mov
es
xor
inc
outsb
mov
and
pop
scas
mov
or
sbb
aas
stc
mov
ja
repz
imul
loop
xor
mov
push
cmpsb
mov
ror
or
jb
or
push
jge
clc
xor
xchg
xor
aas
hlt
inc
pushf
fists
cld
cmpsb
out
jns
loop
jb
mov
out
cmp
cmp
cmp
xchg
sub
sbb
mov
pop
data16
ljmp
out
insb
jae
lods
mov
adc
jbe
imul
mov
adc
fwait
orb
dec
mov
and
push
adc
scas
dec
cmpsl
testb
movsl
mov
and
and
adc
xchg
push
dec
fsub
das
in
push
pop
push
faddl
arpl
call
push
icebp
outsl
adc
xor
push
pop
mov
mov
mov
fwait
ror
add
mov
pop
popl
mov
and
fcompp
loope
cmpl
clc
out
lods
fs
lock
clc
pop
ds
enter
push
inc
insl
jbe
lods
push
mov
gs
dec
andl
fwait
lcall
cld
lods
xor
and
roll
lds
ss
adc
cmp
lcall
sub
adcb
cltd
test
in
jp
add
pop
push
aas
cltd
lds
xchg
jmp
aas
dec
pop
out
dec
mov
mov
in
cmp
adc
adc
cmpsl
orb
cmp
push
mov
rcl
jge
jle
xchg
call
mov
inc
orl
pop
popf
jo
sahf
decb
jbe
adc
inc
testb
pop
jns
adc
pop
in
jl
pop
call
sub
inc
adc
dec
adc
iret
adc
sub
adc
testl
cmp
insl
mov
cmp
repnz
add
or
jmpw
in
lock
pop
out
addb
xchg
shrb
or
pop
or
je
imul
fwait
xchg
stos
das
in
sbb
and
leave
or
cmp
mov
xchg
stc
dec
jne
in
pushf
loopne
ljmp
pop
stos
sbb
rol
ret
cmp
in
pop
daa
rolb
sub
sub
xor
xchg
xor
cmp
push
add
and
mov
push
ds
stos
xchg
mov
pop
dec
cwtl
xchg
adc
mov
jmp
add
int
hlt
inc
hlt
mov
fstl
lea
push
fisubl
and
rcll
nop
aad
mov
mov
int
sbb
popa
jg
mov
aaa
pop
loope
xchg
mov
rolb
dec
push
mov
mov
mov
push
add
and
xor
inc
add
fldl
xor
test
mov
fs
and
ja
xchg
sbb
mov
stos
mov
pop
push
and
pop
push
dec
sub
pop
jne
cli
stos
inc
adc
les
jle
jno
jp
bound
std
subl
and
repnz
test
sbb
repz
sbb
add
lock
bound
loope
cmpsb
lea
cli
cmp
add
int3
sbb
fisubrl
or
out
cmp
jecxz
mov
aad
lea
lods
push
fs
fs
movsb
dec
sub
xchg
les
xor
inc
fdivr
outsl
mov
mov
sub
sub
int3
sub
test
and
leave
aaa
mov
dec
xchg
call
and
loope
mov
into
insl
xchg
sub
add
imul
bound
add
mov
out
fdivrl
xchg
mov
sub
jno
mov
int
xchg
popa
and
lahf
loopne
sub
inc
in
cmp
jecxz
cs
push
push
cld
test
inc
mov
xchg
outsl
sub
push
ja
popa
hlt
inc
and
cwtl
dec
mov
dec
mov
or
in
pusha
mov
push
in
push
aas
sub
cwtl
imul
mov
adc
mov
aas
test
addr16
push
repnz
dec
repnz
lock
scas
xchg
hlt
xor
sbbb
jns
xor
aaa
xchg
ds
mov
je
stos
scas
mov
dec
insl
pop
aaa
or
cli
xor
mov
aaa
fstpl
adc
lahf
aaa
rcrb
popf
sub
cwtl
xor
sbb
mov
jle
mov
sar
xchg
js
rclb
or
addl
arpl
lahf
dec
mov
stc
gs
jge
lret
daa
push
mov
cs
fdivrp
or
jmp
mov
or
or
iret
add
xorb
outsb
mov
dec
jns
test
sbb
pop
xchg
add
fbstp
and
es
jge
mov
imul
nop
es
pop
push
sbb
mov
cmp
std
pop
clc
jnp
mov
inc
dec
aam
incb
xlat
mov
div
mov
lds
inc
ficompl
jo
jle
push
int3
cmpsb
ret
xchg
xor
daa
mov
push
cmp
icebp
mov
roll
movsl
fidivrs
jne
cmp
icebp
rcl
and
scas
pop
pop
scas
fld
insl
ds
inc
pop
sub
or
mov
fmull
add
pop
imul
insb
sti
loope
push
jmp
pusha
cli
aam
leave
adc
and
mov
pop
pop
movsb
movsb
inc
xrelease
loop
pushf
dec
xor
icebp
in
lret
daa
jo
cmpsb
mov
inc
into
mov
push
mov
jl
inc
xchg
test
or
adc
xor
clc
decl
sbb
jle
fcomi
or
adc
cmp
jle
test
dec
mov
push
leave
in
mov
sbb
fsubl
aam
popf
dec
push
mov
frstpm(287
cmpsb
xor
mov
andb
inc
mov
jp
jno
xchg
inc
test
mul
bound
ja
mov
mov
cmp
push
xchg
dec
jbe
pushf
jo
xchg
popa
xchg
sbb
pop
leave
mov
sahf
repz
or
mov
sbb
popa
cli
test
mov
inc
xor
sbbl
fwait
or
xchg
jg
cmc
pop
fs
xorl
xor
mov
addb
xchg
inc
out
fnstcw
fldl
pop
arpl
or
mov
xchg
enter
jmp
jg
pop
mov
clc
inc
lea
adc
arpl
sbb
jnp
scas
fcompl
out
adc
pop
gs
movsl
fists
int3
mov
std
jns
mov
dec
pop
push
les
aad
sbb
pop
xchg
cmc
pop
push
push
dec
add
sub
mov
fcmovbe
jb
mov
sarl
cwtl
or
pop
scas
xlat
fwait
sbb
js
xor
xchg
out
inc
cmp
loop
in
into
and
aaa
lock
fsubl
mov
cmp
dec
test
cltd
xchg
and
mov
daa
fdivrs
xchg
stc
sbb
mov
fcmovu
pop
xchg
push
pop
mov
inc
sub
xor
xor
out
int
int3
dec
jo
clc
std
loopne
int3
and
and
mov
cmpsb
adc
dec
leave
cmp
mov
roll
jle
shrl
pop
jge
dec
aas
out
inc
bound
push
xor
in
das
icebp
sahf
dec
pop
adc
dec
lods
and
sti
daa
mov
pop
stos
jge
rcr
dec
dec
adc
notb
cld
mov
fnstenv
push
mov
pop
lods
cmp
mov
fistl
mov
mov
ret
filds
inc
movsb
gs
dec
inc
ss
aad
or
cmp
enter
das
fs
lcall
movsb
sbb
push
fldcw
out
loope
mov
mov
sub
enter
adc
jo
xor
mov
int3
inc
pop
and
test
push
in
orb
xor
enter
mov
gs
mov
adc
lock
into
jle
or
rol
pusha
lock
into
loopne
jns
pop
mov
iret
jb
mov
je
and
pop
push
cmp
fldl
mov
in
and
test
push
outsl
inc
fnstenv
inc
sub
negl
cmpb
xchg
pop
cmp
cmc
inc
mov
cld
cmpsb
in
popa
lds
fidivs
lahf
sub
js
aad
add
jg
lret
test
xchg
mov
frstor
out
cmpsb
inc
pop
pop
aam
fwait
sub
int
aad
add
rclb
cmpsb
xchg
shll
push
ret
mov
mov
jecxz
and
mov
add
es
and
in
jno
or
stos
out
mov
shlb
repz
or
xchg
mov
jle
fbld
adc
lret
fisttpl
xor
sub
push
push
pop
shlb
push
int3
scas
inc
xchg
jo
xor
mov
push
cmp
lcall
or
out
call
mov
jnp
mov
dec
or
cli
dec
lret
nop
lods
enter
mov
fs
xor
imul
popf
cmp
jne
sbb
lret
movsl
push
mov
jnp
clc
rcrb
and
inc
fisubrl
ret
mov
fs
ret
movsl
shlb
xchg
push
jg
ret
test
dec
ret
adc
and
or
popa
dec
fistpl
push
cmp
call
nop
call
xor
mov
and
add
cld
mov
in
sbb
or
ds
pop
add
mov
cmp
in
or
mov
xor
adc
or
push
xchg
call
mul
cmp
rcll
std
sub
cwtl
sbb
stc
xchg
xchg
rolb
dec
outsl
push
fs
mov
cwtl
xor
mov
aaa
bound
mov
pop
sub
aas
jne
add
out
mov
dec
movsl
subb
dec
mov
call
and
sbb
dec
jge
fnstenv
mull
push
pop
dec
add
push
inc
subl
lcall
sahf
jg
xchg
mov
mov
mov
mov
test
pop
sahf
jne
movsb
dec
sub
jae
xchg
inc
cwtl
hlt
es
pop
popf
js
pop
lcall
std
sbb
jno
stos
cwtl
test
iret
rolb
dec
dec
fiadds
jl
fisttpll
xchg
lds
insb
repnz
jne
shrl
orb
push
pop
sub
daa
jnp
pop
scas
sbb
sbb
cmp
inc
add
inc
lods
jae
enter
sub
pop
pop
dec
inc
loopne
and
mov
dec
sbb
inc
rclb
cmp
es
outsb
nop
into
push
xlat
pop
cwtl
outsb
or
xor
push
sub
rcl
sbb
xorb
mov
inc
cs
out
add
pop
xor
cli
or
pop
xchg
add
and
lock
std
jb
data16
loope
pop
cmp
scas
push
xchg
loope
lea
stc
stos
lcall
cmpsl
jne
les
sub
enter
test
sub
orb
out
pop
sbbl
push
push
mov
cmpsl
xchg
pop
jg
xor
sub
jae
iret
ja
into
nop
pusha
sahf
clc
movsl
inc
arpl
daa
lahf
jo
cwtl
mov
addl
mov
inc
imul
inc
clc
aad
xor
pop
adc
insl
ret
pop
jae
dec
aas
aaa
mov
nop
mov
adc
imul
das
jo
test
pop
sbb
scas
lret
lock
jnp
and
sahf
call
mov
sub
or
and
mov
loop,pn
jecxz
je
mov
outsl
xchg
aam
in
xchg
mov
mov
add
mov
inc
and
add
jmp
and
inc
pop
rorl
push
out
out
das
addr16
mov
les
dec
ret
repnz
dec
repnz
ficomps
sarl
cmp
jno
ret
jecxz
pop
jg
push
xor
lea
mov
sub
pop
sub
or
add
mulb
xchg
dec
shrl
repnz
imul
xchg
jg
push
mov
or
mov
cmp
js
sahf
mov
in
sbb
xchg
sbb
pusha
sbb
call
jecxz
sbb
in
xor
push
loope
mov
push
cmp
push
xor
fwait
loopne
add
test
pop
fst
sbb
dec
push
mov
mov
testb
push
cwtl
xor
cmp
iret
push
divb
pop
ret
or
push
nop
push
pop
enter
mov
cmp
fdivrp
adcl
shrb
xchg
idivl
sarb
jb
and
jbe
push
imul
fimuls
cltd
sub
stos
test
fs
out
in
and
cld
xor
movsl
sbb
das
sbb
imul
and
and
sti
dec
mov
mov
push
push
out
rcrb
xchg
test
data16
in
xchg
push
xchg
cmp
pusha
push
inc
mov
shll
aas
xchg
mov
adc
and
clc
rcll
jne
cmp
ret
ljmp
cli
lds
and
mov
and
add
nop
pop
mov
lds
scas
mov
pop
ror
fsubrs
mov
and
fsts
clc
mov
fistps
daa
or
scas
addr16
xchg
or
hlt
or
stos
mov
xchg
jne
cs
pop
pop
fmul
cmpsl
or
xchg
inc
pop
insl
inc
and
in
andb
push
sbb
mov
daa
cs
lea
mov
mov
dec
push
inc
adc
adc
loope
jge
lcall
xchg
adc
pop
inc
inc
call
pop
mov
inc
iret
cld
out
dec
sbb
fnstenv
ficompl
mov
bound
mov
and
rorb
dec
popa
sub
sarl
andb
push
rcrb
je
or
pop
or
mov
loopne
aam
arpl
loopne
enter
loopne
mov
and
pop
pop
test
int3
lcall
sub
sbb
pop
xchg
sbb
scas
sbb
clc
pop
in
scas
ret
dec
push
dec
push
lahf
ljmp
pop
repnz
test
imul
rcr
pop
test
or
inc
arpl
mov
lahf
xchg
inc
lds
shl
mov
js
nop
sub
cmp
rcll
mov
push
test
loopne
sbb
xchg
inc
out
lahf
jmp
repz
add
mov
or
stos
xor
mov
fsub
pushf
adc
adc
std
ljmp
xor
pop
jmp
lret
jmp
test
lods
cs
sub
jns
enter
sub
or
push
cmp
out
ja
test
dec
dec
inc
add
sarl
pop
and
js
je
sti
or
adc
clc
xor
mov
sbb
inc
cli
jno
nop
pop
imul
cmp
or
ret
std
out
lret
sbb
enter
insb
mov
lods
popa
dec
or
jmp
push
jg
xor
and
or
aas
test
dec
jbe
out
rorb
jb
jecxz
sub
push
mov
test
jns
stos
add
int3
in
in
shrl
loopne
out
loope
out
or
mov
inc
or
je
jo
and
ret
fldcw
mov
jge
hlt
test
pop
add
cwtl
mov
popf
lds
mov
fsubrs
int
dec
aam
jmp
push
movsb
call
jmp
cwtl
and
adc
xchg
stc
mov
xchg
xor
push
shl
ficomps
pop
test
idivl
inc
sbb
adc
nop
sub
int3
movsl
cmp
add
or
inc
frstor
cmp
test
repz
inc
dec
adc
and
std
scas
out
hlt
sbb
icebp
mov
mov
scas
or
add
ret
fstpl
xchg
sbb
fdivp
pop
je
dec
outsb
and
push
or
inc
push
rolb
mov
leave
or
adc
dec
dec
dec
shrb
sbb
fucomp
add
scas
orl
das
cmp
jge
clc
pop
iret
out
xchg
fstl
loope
lret
aas
and
sbb
push
push
sbb
lret
dec
xor
mov
xor
scas
lds
sbb
fstpt
in
in
add
mov
jmp
push
out
xchg
outsb
roll
cmp
lods
and
mov
arpl
ficoms
fwait
and
insb
xchg
sbb
loope
and
stos
sbb
xor
or
ja
add
scas
sub
stos
jno
test
jg
js
and
push
sbb
mov
fnstsw
push
or
fnstenv
push
das
mov
arpl
cltd
jmp
cmp
add
ret
imul
push
jl
scas
iret
xchg
loopne
ret
lods
xchg
pop
xor
loope
cmpsl
pop
dec
pop
rcrl
popa
cs
test
in
mov
or
lcall
in
push
inc
es
mov
lock
jno
das
or
pop
js
xor
mov
lods
icebp
and
jns
out
push
into
push
inc
in
or
cmp
adc
xor
out
push
bnd
lcall
adc
sbb
dec
stc
fcmovnbe
add
jbe
ror
mull
adc
push
pop
adc
mov
adc
fwait
push
outsl
dec
xchg
fcmovne
inc
fisubs
imul
jp
mov
cmpsb
mov
das
addb
shll
call
and
subl
das
adcl
fsub
mov
add
in
int
daa
and
aaa
xchg
cmc
int3
mov
jp
dec
jns
xchg
ds
xor
or
pushl
lcall
mov
mov
orl
push
nop
mov
std
ret
pop
insl
jl
jns
sub
add
jl
shll
movsb
sub
es
xor
scas
imul
nop
jne
inc
repz
lret
inc
sub
push
cmpl
fcoms
add
aam
mov
lret
inc
incb
scas
movsl
mov
push
and
cmc
mov
movsl
sub
sub
mov
xor
sub
mov
cmpsl
shll
into
mov
jecxz
mov
sub
test
add
ss
jle
xor
ret
xor
xchg
sbb
and
loopne
cltd
fisttpll
fsubrs
mov
ljmp
mov
jge
aaa
inc
icebp
lds
add
inc
xchg
jge
mov
pop
clc
fsts
dec
cmp
ss
push
data16
out
and
imul
jo
jl
psubsb
sti
push
sbb
pop
clc
mov
mov
pop
and
mov
scas
jle
sarl
ljmp
dec
or
loopne
rorl
scas
fwait
mov
aas
movsb
pop
push
dec
imul
popa
mov
loopne
shrb
pushf
lret
xchg
inc
sub
aad
pusha
roll
mov
inc
ljmp
ret
fmul
ja
jp
mov
movsl
inc
insb
sub
add
testl
test
pop
fwait
xor
scas
fidivrl
pop
xchg
mov
lcall
jbe
ja
cld
xlat
ljmp
test
inc
insb
ljmp
iret
inc
dec
aam
je
pop
or
xor
push
xor
loop
or
mov
adc
adc
int3
cmp
sub
hlt
fisubs
push
aaa
test
xor
mov
jmp
adc
mov
cmp
dec
in
xor
adc
das
jae
inc
push
into
inc
pop
ds
and
mov
lret
and
xor
sub
xchg
jl
and
pop
mov
jb
mov
ret
inc
sub
lods
xchg
das
or
je
push
imul
stos
addb
mov
xor
sub
and
mov
imul
inc
adc
adc
push
fdivr
pop
rcrl
mulb
jae
mov
jne
aaa
and
loopne
xor
sub
mov
into
dec
sub
nop
call
mov
cmp
push
lret
in
xchg
sbb
andb
inc
xlat
daa
cmc
adc
into
xor
dec
loopne
insl
icebp
je
int
ficoml
jl
push
les
in
push
mov
xor
and
xor
fistpl
pop
pop
jmp
popl
xchg
das
xor
cmc
in
sub
loop
inc
push
int
or
sub
cwtl
mov
scas
adc
into
push
sub
push
cmc
adc
loop
idivb
dec
mov
daa
mov
mov
dec
fucomip
leave
jne
or
jmp
roll
xchg
or
lahf
adc
cmpsl
mov
lods
push
sti
cli
stc
xchg
and
push
leave
add
inc
push
and
std
push
in
jnp
stos
pop
push
mov
and
sbb
xor
fbld
repnz
push
test
jle
xorl
xor
lea
jne
imul
notb
scas
ficompl
jo
or
and
stos
rclb
lcall
push
sub
jp
mov
lret
sub
out
divb
in
lret
adc
dec
lcall
scas
jne
pushfw
imul
pop
inc
fldcw
sbb
and
adc
add
inc
sbb
lds
imul
jne
mov
mov
ror
xor
std
and
jno
sbb
fwait
addl
inc
loop
and
lahf
jp
aad
adc
enter
insl
adc
stos
xor
pop
jb
push
test
pop
xchg
push
shl
rclb
scas
es
insl
jo
mov
sti
stos
xor
adc
cltd
das
inc
push
push
jne
movsb
inc
pop
dec
mov
sub
xor
or
xchg
lret
es
movsl
add
push
jecxz
mov
cmpsl
pop
mov
les
cs
cltd
xchg
mov
mov
sarl
xsha1
cmpsb
or
jbe
stos
jb
mov
fsubrl
aaa
ss
int3
jg
out
negl
or
mov
ds
xor
lods
dec
outsb
fsubs
insb
sub
daa
mov
repnz
and
push
jge
push
lret
xchg
adc
push
xchg
sbb
cmp
inc
sarl
shrl
pop
xchg
enter
add
cmpsl
lods
and
jg
in
push
adc
out
test
push
cltd
mov
sti
push
int
ljmp
inc
leave
push
fstpl
sbb
and
mov
xlat
mov
or
sub
lds
and
or
xor
mov
push
and
out
div
push
mov
mov
jge
in
addr16
push
cwtl
add
or
sbb
cmp
mov
sub
jne
scas
gs
mov
scas
mov
adc
hlt
sub
jae
add
and
dec
add
iret
or
aad
mov
jb
popa
xor
inc
pop
das
cli
sub
xor
sub
mov
jnp
inc
dec
int3
lret
lods
sahf
scas
sbb
outsl
mov
leave
rcll
jns
pop
lret
adcl
jl
jl
sub
mov
decb
add
cmp
push
xor
ret
xchg
cmpsb
loop
stos
ss
inc
je
ja
test
imul
loop
ds
bound
cmpsl
and
xlat
fistps
xor
stc
push
pop
scas
jecxz
je
xchg
cmp
outsl
mov
xlat
lret
add
sub
imul
and
push
dec
sbb
jecxz
inc
xlat
push
fcoms
inc
xchg
ss
loope
jno
jle
xor
cltd
test
mov
les
xchg
test
inc
or
push
add
imul
sub
mov
pushf
and
stos
daa
test
xchg
mov
inc
out
dec
gs
or
enter
add
sub
mov
in
cmpb
cmp
lahf
int
inc
cmp
mov
xorb
mov
sub
sbb
int
in
inc
popa
jmp
push
cmp
addr16
push
pop
adc
add
repnz
fwait
jne
ss
jne
dec
mov
scas
push
dec
xlat
mov
or
xchg
clc
ret
dec
fwait
add
adc
les
ja
out
aad
mov
sub
outsl
dec
inc
xor
fcmovb
jp
mov
lock
lds
sbb
ret
movsl
jbe
sbbl
mov
movsl
push
dec
add
xchg
jecxz
adc
cltd
xlat
mov
inc
das
js
subl
push
sbb
sahf
dec
xor
outsb
cmpsb
pop
xchg
cmp
cmp
push
xor
gs
mov
jns
jp
jo
ret
inc
mov
aad
sbb
sub
xchg
pop
shll
cmp
cmp
cmp
mov
insb
push
ds
adc
xchg
sbb
mov
sbb
dec
repz
or
js
sbb
sub
enter
cmp
scas
movsb
inc
sti
movsl
in
hlt
or
data16
pop
das
outsl
and
add
lea
pop
outsb
adc
into
stc
out
imul
push
lret
add
lds
sub
out
addr16
sub
enter
or
mov
fistpl
dec
pop
or
xchg
cltd
jnp
mov
jle
pusha
cmp
add
xlat
or
leave
push
adc
stc
lea
add
jp
jecxz
inc
aaa
pusha
aam
mov
and
mov
jp
cmpb
jno
movsb
jmp
cmp
mov
popf
pusha
push
imul
sbb
xchg
push
data16
pop
rol
fwait
or
data16
loopne
es
adc
and
xchg
pusha
leave
mov
cmpsl
mov
addr16
cmpsl
in
mov
je
add
stc
cwtl
repnz
jecxz
shrb
push
fstl
loopne
inc
and
pushf
scas
cmp
sbb
shll
dec
inc
and
popf
and
lods
nop
lds
adc
ljmp
stc
and
jnp
mov
mov
les
push
nop
and
pop
sub
aam
fidivrs
push
mov
movsl
mov
mov
push
adc
out
addb
mov
xchg
jae
fnsave
xchg
cmp
clc
clc
adc
dec
dec
repnz
pop
sub
push
xor
xchg
add
lock
push
xchg
sahf
xor
lock
push
mov
mov
int3
shlb
mov
or
mov
aam
pop
movsb
xchg
out
xor
cmp
and
adc
dec
cmpsb
add
dec
ss
mov
scas
jns
push
sti
jp
subb
popa
imull
shll
leave
lret
addr16
cmp
nop
cld
push
and
mov
cmp
js
pop
faddl
and
outsb
aaa
xchg
fbstp
jae
ret
push
pop
mov
in
pushf
push
cwtl
mov
push
cmp
cli
mov
pop
adc
add
fucompp
pop
mov
addl
in
xchg
fnstenv
fdivl
push
mov
mov
ficoml
sti
pop
sub
and
aad
jae
cmc
or
push
jg
fldl2t
and
aad
shll
mov
leave
push
add
pop
loope
jo
cli
inc
stos
and
xor
push
cmp
inc
cmc
push
shr
iret
sbb
adc
mov
loope
cmp
or
enter
fstpl
push
mov
mov
es
or
mov
inc
lods
mov
lods
pop
cmp
jle
test
xor
cmp
adc
dec
out
ror
mov
gs
mov
icebp
rol
shrl
fxam
fnstsw
sbb
je
ficompl
push
andb
fsubl
rorb
mov
jno
cmpsl
inc
or
mull
fimuls
push
inc
or
sbb
xor
stos
imul
pop
std
out
lret
add
mov
inc
jne
mov
pop
incl
push
jmp
ljmp
enter
add
mov
cltd
jmp
push
jp
mov
or
pop
adc
push
sbb
or
inc
inc
or
test
mov
out
and
mov
push
test
xor
jnp
sub
shlb
bound
jmp
xchg
cs
fisttpll
lcall
adc
es
push
popa
pop
mov
jbe
test
hlt
inc
push
mov
dec
pushf
aaa
enter
mov
mov
sbb
push
inc
mov
insl
fisubrl
pusha
popf
xor
lahf
out
inc
jne
and
test
sbb
test
loopne
lock
cmp
idivl
xchg
jbe
out
bound
dec
lock
fsubrl
loopne
sbb
jecxz
sbb
stc
xchg
sbb
mov
notb
push
add
ja
fwait
mov
dec
cmp
jno
popf
aas
notb
testl
out
test
jb
fdivs
data16
mov
dec
cmp
adc
repz
dec
icebp
cmp
mov
lahf
fxch
mov
shl
das
mov
call
mov
aaa
pop
mov
cmp
push
test
dec
push
fldenv
in
sub
xchg
test
test
fiaddl
push
add
inc
sti
icebp
pop
jge
xchg
das
fimull
int
xchg
push
es
ret
iret
imulb
push
outsb
inc
sub
imul
stos
insb
or
ret
sub
mov
adc
mov
adc
movsb
cmp
test
push
iret
mov
push
add
lods
adc
icebp
lcall
test
xchg
inc
in
stos
scas
xchg
pop
pusha
out
or
adc
imul
sub
adc
mulb
arpl
fcoms
sbb
aad
outsl
xor
sub
jge
mov
nop
mov
xchg
fsubrl
xchg
cmpsb
inc
test
cli
and
imul
sbb
js
dec
cmp
rcrb
fisttpll
and
mov
inc
js
xor
dec
sub
arpl
out
movl
ds
hlt
mov
repz
adc
xchg
jnp
dec
sti
adc
mov
int
cli
je
test
fsubrs
sub
sub
add
mov
and
pop
xchg
mov
pop
add
cmp
add
sbb
dec
sub
cmp
xchg
dec
icebp
jle
repz
fmuls
enter
inc
mov
jbe
and
sbb
xchg
push
mov
sbb
jg
xchg
leave
js
cmp
or
adc
fdivs
sbb
xchg
dec
daa
jl
xchg
lret
test
outsl
loope
jecxz
push
pop
test
daa
call
sbb
es
jle
jo
dec
jne
push
lods
movsb
jl
pop
pop
push
aam
fwait
aaa
sbb
xor
jo
fisttps
mov
push
loop
add
xor
mov
mov
ss
repz
xlat
fdivrl
mov
push
xor
je
add
xchg
cmp
cmpsb
xlat
and
and
adc
mov
sub
mov
in
pop
icebp
mov
scas
mov
pop
pop
jno
jnp
pop
pop
and
daa
and
push
outsb
adc
ss
outsl
out
xor
sahf
out
sub
outsb
pop
cs
imul
ja
das
out
dec
sbb
mov
jb
mov
jno
lods
push
icebp
mov
add
xor
je
lea
mov
mov
push
xor
push
arpl
xchg
mov
int
sub
jle
push
pop
sub
push
mov
enter
stos
loop
lcall
out
mov
call
push
lret
fucom
cmpsb
pop
cmpsl
mov
pop
fs
adc
dec
or
or
std
iret
sarl
xchg
test
insb
lods
inc
dec
js
jmp
jne
sbb
daa
daa
shrl
add
cmp
test
pop
mov
xchg
mov
int3
mov
fldenv
xchg
fdivr
and
sub
mov
lahf
pushf
aad
iret
ja
sub
pop
pop
ljmp
enter
cmpsl
aaa
fcmovu
out
xchg
icebp
enter
mov
or
pushf
jo
fsubrl
aad
fildl
aaa
ret
into
out
cld
in
das
mov
sti
nop
mov
out
adc
mov
arpl
push
or
push
rorl
push
sub
mov
jbe
push
out
adc
jmp
mov
add
cmp
jl
inc
dec
add
jbe
js
and
testl
sti
ljmp
int
push
push
jb
lods
jle
rcrl
sbb
fsts
sub
sub
add
adc
mov
imul
pushf
jae
adc
xor
shll
add
imul
outsl
fsubs
outsl
mov
loope
or
cwtl
iret
cltd
rorb
ja
jg
ret
aad
pop
jge
sahf
mov
shll
jns
lea
int
cmp
mov
insl
add
mov
rorl
lods
adc
mov
and
push
mov
clc
jl
cs
mov
out
out
sbb
mov
in
xchg
nop
xchg
fildl
inc
ss
xchg
bound
xchg
mov
mov
lcall
jecxz
mov
out
popa
pop
and
iret
in
push
imul
aad
sbb
lea
fs
shll
fisttpl
mov
icebp
fcomps
dec
push
pop
stos
roll
push
mov
fxch
fisttpll
or
adc
aam
aad
sbb
mov
daa
cmpsb
outsb
pop
nop
mov
aad
leave
enter
cmp
adc
mov
inc
into
push
jns
jo
adc
orb
add
lret
jbe
std
dec
bound
je
punpckldq
rolb
or
mov
insb
sub
out
jns
sahf
arpl
mov
xlat
outsb
xchg
sar
shlb
push
mov
in
lods
push
paddsw
and
repnz
or
outsb
addr16
je
mov
mov
enter
ffree
into
pop
in
lea
jg
jns
xlat
push
push
loop
mov
push
mov
xor
cwtl
adc
mov
lret
scas
mov
mov
jmp
stos
xchg
roll
mov
pop
inc
jge
jo
je
out
cmpsb
addl
nop
rcrb
cli
scas
cmp
filds
cli
add
xchg
fsubl
inc
bswap
cmp
add
fisubrs
inc
pop
in
mov
jg
lea
mov
out
cltd
aas
and
call
addr16
xor
xchg
mov
stos
scas
push
das
mov
mov
add
dec
cmp
sub
arpl
jae
jae
push
xor
vmptrld
call
lods
das
aas
inc
inc
jbe
and
shlb
jbe
dec
inc
sbb
outsb
push
insl
ret
mov
out
jnp
mov
insl
or
pop
xchg
mov
roll
fiaddl
icebp
test
mov
js
cmpsb
loop
mov
inc
sbb
inc
add
cld
jo
and
fistps
aam
clc
les
and
push
mov
jg
outsl
les
shll
xchg
dec
push
pop
push
adc
mov
stos
mov
mov
jo
fwait
dec
or
clc
xchg
pop
lods
lcall
cmp
inc
fbld
movsl
loopne
cmp
jns
xor
clc
inc
loope
xor
cmp
inc
pop
push
cmpl
mov
pop
mov
fsts
and
jp
inc
adc
mov
dec
addb
xchg
cwtl
xchg
dec
fucomip
adc
cltd
mov
xor
xchg
push
inc
int3
adc
fwait
daa
pushf
adc
cs
ficoml
push
popf
sub
insb
mov
or
cmp
sub
jg
sbb
into
loop
andl
testb
xor
outsb
mov
stos
jmp
nop
dec
jmp
jp
xlat
sbb
lods
leave
das
lret
std
in
shrl
cmp
dec
xor
jp
insb
sbb
sub
and
push
insl
inc
aad
decl
jl
inc
fwait
popf
push
inc
in
jb
add
jle
bound
sar
or
xlat
paddd
movsl
xchg
pop
mov
inc
test
outsl
inc
add
inc
jl
sub
pop
hlt
sbb
shll
mov
fs
movb
sti
cmpsb
daa
ss
mov
and
enter
cmp
sub
inc
adc
adc
movsl
mov
xchg
mov
ja
inc
pusha
faddl
movsb
mov
dec
pop
clc
mov
es
xor
test
lahf
cwtl
pop
ss
inc
jne
pop
push
aad
sti
push
sarl
add
jp
mov
dec
mov
cmp
loope
notl
cmp
and
mov
mov
cmpsl
sub
jno
pop
loope
mov
pop
dec
add
fistl
sub
mov
jl
jno
xchg
shlb
stos
arpl
jns
mov
cli
mov
xor
dec
mov
and
xor
xchg
jo
mov
aam
fstps
decl
mov
fisttpll
push
or
jnp
mov
cmpsb
inc
push
dec
jo
xchg
mov
push
std
in
inc
xchg
out
addb
push
lahf
pop
dec
sti
scas
popf
cmp
dec
idivl
cmovle
call
mov
loop
jl
inc
cmpl
mov
push
inc
fldln2
int3
int3
or
int
add
lret
jnp
popf
and
jle
fsubp
lret
sahf
xchg
mov
xchg
in
inc
pop
push
imul
popa
jle
jne
xchg
popf
ss
std
xlat
not
pop
mov
or
fs
adc
mov
pop
mov
sbbl
xchg
lea
into
frstor
dec
jne
insl
sbb
popa
xchg
xor
jno
insl
xlat
pushf
ret
fisubl
sarl
dec
mov
aas
sbb
push
add
mov
enter
mov
pop
jg
jo
daa
or
mov
xor
pushf
mov
cmpsb
rsqrtps
std
sbb
js
in
rcr
aad
and
inc
arpl
frstor
jnp
in
lods
mov
movsb
push
pop
dec
aam
fs
gs
pop
xor
add
fldenv
dec
inc
cmp
mov
pushl
jb
mov
ds
icebp
icebp
ds
imul
dec
iret
mov
push
pop
mov
cmp
pusha
ret
insb
pop
mov
xchg
jno
in
lds
imul
push
fucomp
add
xor
inc
leave
jp
ret
insl
and
inc
rolb
adc
sqrtps
ss
inc
call
into
jecxz
dec
xchg
mov
lea
inc
and
and
xchg
les
cld
xor
fdivrs
ret
das
cwtl
mov
xlat
cmp
ficompl
out
data16
xor
fs
mov
iret
xlat
lret
sbb
sahf
aas
xchg
pop
mov
sub
incl
mov
xchg
mov
lock
jge
call
sbb
inc
sbbl
and
repnz
into
xchg
xor
sbb
aas
sub
mov
add
adc
sti
in
jle
pop
and
inc
into
inc
movsl
insl
in
iret
dec
fcoms
das
movsl
jmp
popl
and
lcall
mov
inc
testl
outsl
bswap
dec
rcrl
fadd
gs
add
sbb
cwtl
enter
fmuls
setnp
and
add
sbb
adc
mov
adc
pop
xor
ja
add
inc
lcall
mov
and
movsb
push
aad
leave
jp
aam
jne
push
es
stc
lret
and
fstl
adc
mov
pop
add
xor
in
pop
inc
repz
sbbb
pushf
xchg
jae
loop
mov
jl
adc
repz
test
iret
movsl
xlat
aas
xchg
aam
pop
maxps
mov
imul
adc
je
xorl
mov
insb
push
ds
mov
mov
sbb
repz
and
jle
sar
cmc
ja
out
fsts
cltd
sub
mov
and
rorl
ja
js
frstor
out
jmp
push
pop
test
mov
push
aam
jle
xorl
push
movsl
lcall
jmp
movsb
or
lods
imul
add
lret
add
fdivrs
mov
stos
aas
mov
popf
das
jbe
rolb
mov
xor
leave
es
sahf
das
xlat
or
test
out
sbb
cmp
lcall
les
jnp
jmp
pop
call
add
outsl
arpl
imul
mov
gs
mov
sbb
mov
sub
mov
mov
cmp
ja
or
mov
or
popf
add
pop
xor
popf
sbbb
sub
add
repz
sbb
jbe
xchg
dec
fs
sub
and
in
sub
jmp
fiadds
aas
rcrl
cmc
cmc
test
in
jl
mov
out
adc
pop
mov
and
popa
push
push
add
sarb
outsb
push
adc
inc
and
xor
jnp
lea
lods
lods
clc
or
mov
or
mov
and
jo
adc
sub
int
push
and
mov
aad
push
addr16
sbb
loopne
adc
add
fsubrs
push
addl
sub
and
mov
push
pop
in
aaa
ror
or
mov
pop
xchg
xor
popf
ret
ljmp
mov
adc
pop
aaa
cmp
fmuls
insb
insl
dec
dec
dec
daa
lret
test
and
jnp
out
pop
jg
cli
notrack
mov
or
xchg
aaa
add
pop
arpl
sub
fsts
fsts
inc
out
xchg
sbb
divb
outsl
es
sarb
loop
mov
pop
in
stos
test
orl
insl
jno
out
pop
stos
jge
fwait
clc
jo
dec
lcall
mov
outsb
sub
dec
mov
dec
fnstsw
ffreep
pop
hlt
aad
pop
adc
cld
jmp
icebp
pop
push
loop
jg
sbb
mov
aaa
or
enter
jne
xchg
jo
xchg
pop
xor
mov
fwait
nop
ret
xchg
imul
imul
fs
fisubrs
jae
addr16
mov
add
mov
addr16
or
movsb
xchg
jae
fcmovne
sbb
shlb
adc
mov
std
mov
sbb
and
push
sbb
out
in
enter
inc
sub
mov
inc
jne
jle
mov
cli
call
jl
shrl
and
push
test
mov
sbbb
cltd
push
xor
stc
test
jl
lods
mov
inc
cwtl
mov
popa
push
addr16
push
imul
shrl
cmp
add
imul
sub
add
mov
out
je
xchg
shlb
imul
lahf
repz
jp
inc
imul
xor
jp
in
fisubs
lods
fstl
sub
mov
xor
sbb
rcrb
add
pop
jp
adc
adc
jge
lret
cmpsb
mov
sbb
xchg
mov
cli
dec
adc
xchg
js
je
scas
popa
dec
push
mov
sbbb
js
insb
and
and
sti
push
pop
xchg
ja
subl
dec
push
stc
inc
jno,pt
jmp
in
jecxz
das
pop
adc
stc
pop
cmp
je
xor
jmp
icebp
dec
movsb
pop
add
xor
cwtl
cmpsb
mov
cld
sbb
lods
mov
mov
jg
mov
leave
test
fucomip
ljmp
mov
test
and
pop
cltd
cmp
out
inc
clc
test
inc
sbb
pushf
test
out
jno
add
cmp
or
and
int3
nop
xor
lock
dec
lahf
gs
push
xor
repnz
dec
cli
xor
nop
mov
jns
repz
xor
in
push
sqrtps
lea
and
fnstcw
and
or
sbb
add
jnp
mov
and
push
xchg
fbstp
push
xor
push
cmpsb
mov
inc
testb
call
inc
sub
es
iret
inc
testb
popf
in
pop
add
repnz
xor
inc
into
inc
in
je
pop
test
xor
inc
nop
enter
and
jns
push
js
jno
mov
jge
jae
repnz
push
or
or
mov
es
test
mov
sbb
pop
xchg
scas
sbb
fiadds
sbbl
pop
inc
jno
aam
mov
cmp
mov
adc
push
outsl
subb
jg
mov
jnp
jg
adc
mov
adc
sub
jno
mov
inc
sub
push
sub
mov
xchg
mov
inc
or
push
mov
rorb
das
scas
or
inc
xchg
xor
jae
enter
inc
fs
cmp
in
in
movsl
push
mov
pop
sbb
lock
jns
cmp
mov
aad
mov
shr
movsl
cwtl
lea
sti
fwait
rclb
fsubrs
cli
jl
xchg
add
or
scas
test
leave
mov
cmpsl
mov
jmp
ret
xchg
cmpsl
xchg
and
adc
lea
cli
testb
cmpsb
mov
pop
popa
shr
stos
push
sarl
push
xchg
add
hlt
sbb
insb
add
add
pop
test
shl
stc
jno
lods
push
loop
aad
subb
mov
jne
movsl
inc
fwait
xor
arpl
cs
in
sar
outsl
mov
pop
mov
push
mov
scas
js
mov
xor
xchg
xchg
mov
into
repz
push
sbb
neg
fildll
pop
mov
push
notb
bnd
test
js
movsl
ljmp
or
inc
xor
lods
cmp
dec
jbe
gs
pop
movsl
mov
lods
dec
hlt
cmp
lods
mov
xor
dec
outsl
ret
jo
mov
in
dec
mov
in
xchg
ljmp
iret
mov
insb
xor
hlt
adc
sub
dec
jmp
inc
jecxz
inc
jmp
stos
sbb
jb
inc
add
lods
mov
pop
and
xlat
xchg
cmc
or
lods
mov
pop
mov
xor
cmp
movsb
aad
sahf
fisubs
pop
inc
push
mov
cmp
mov
xchg
mov
aam
jg
xor
mov
add
cwtl
jnp
inc
mov
lock
fildll
jae
cmp
es
and
inc
loop
icebp
out
repnz
imul
ja
push
shr
mov
ss
adc
push
xlat
lods
data16
jecxz
decl
fstps
xchg
enter
xchg
mov
addb
jle
div
inc
push
ret
sub
test
loop
lds
fldenv
leave
cmp
xchg
sahf
adc
cmp
xchg
xor
cmpsb
mov
mov
push
or
cmp
arpl
fcmovnb
addr16
repnz
adc
pop
fnstsw
jmp
addr16
fsubrp
test
cmpsl
push
sbb
adc
les
mov
xlat
mov
jnp
iret
cmpsb
je
mov
jmp
dec
rclb
pop
mov
jo
xchg
push
fs
es
push
inc
jbe
xor
out
push
popa
add
jns
dec
ss
push
aas
insl
sbb
add
cltd
push
test
mov
fnsave
ret
xchg
mov
das
call
jge
sub
cmp
in
pop
sub
lds
mov
or
aaa
adc
mov
fcmovu
push
jg
loope
test
movsl
mov
xor
push
mov
dec
mov
push
lret
pusha
repz
mov
xor
stos
jo
push
aad
and
pop
cltd
sahf
addr16
mov
push
mov
in
add
xchg
jne
shlb
add
mov
pop
leave
repnz
dec
gs
dec
or
sbb
lret
mov
jp,pn
xorb
mov
nop
in
out
add
test
dec
inc
sbb
je
cs
mov
and
push
mov
inc
cmp
pusha
in
iret
enter
ficoms
and
xchg
ret
jo
pop
std
or
or
sbb
and
xor
mov
cmp
sbb
xchg
or
adc
cld
adc
xlat
jae
sbb
fistl
iret
pop
daa
orb
sbb
clc
mov
cmp
lock
xor
out
int3
pusha
arpl
and
pop
das
mov
fstl
sti
hlt
sub
and
rorl
pop
xchg
jns
sub
in
mov
sbb
xor
inc
les
call
cmp
jbe
les
sub
sahf
dec
ret
fmull
fstpl
inc
inc
icebp
jg
fistpl
popa
or
cmpsl
push
inc
loop
pusha
push
mov
push
inc
mov
jb
loopne
inc
mov
pushf
xlat
mov
pop
add
cwtl
popf
les
das
aas
sub
push
rcrb
cld
or
jg
mov
jne
in
js
cmp
lea
fwait
push
cltd
ret
xor
faddl
imul
in
and
not
aas
add
xor
cmpsb
in
pop
pop
mov
xchg
cmpsl
add
or
sbb
iret
push
mov
aam
aad
xchg
test
pop
mov
push
mov
rcrl
hlt
daa
out
pop
std
mov
shrl
cmp
lods
inc
cmpb
jb
add
mov
and
out
aaa
sbb
xor
cli
cmp
add
and
add
stos
lds
inc
xchg
lar
pop
fcmovnb
xchg
out
std
add
dec
addb
dec
mov
popf
cmp
enter
rorb
adc
xchg
mov
lahf
pop
jecxz
in
push
cwtl
pop
inc
sub
bound
add
fnsave
fsubrs
push
or
mov
xor
arpl
scas
andl
cmp
sub
int3
jl
mov
sub
sbb
push
and
inc
inc
jle
lods
or
xor
dec
inc
test
and
and
jnp
jns
lea
push
mov
mov
cld
mov
inc
aad
call
mov
enter
jge
fs
addl
push
mov
lcall
xchg
add
aaa
outsb
mov
aas
adc
and
lods
dec
lock
movsl
iret
sub
pop
or
mov
daa
bound
add
sbb
xor
adc
out
mov
xor
mov
js
pop
stos
loope
js
jge
jge
xchg
pushf
lret
mov
repnz
lock
sub
sbb
subb
inc
mov
add
jbe
inc
sub
aas
fnstsw
rcrl
xchg
dec
jae
jmp
shl
dec
cmpsb
xchg
pop
aas
jnp
push
inc
push
aas
cmp
xchg
rcrl
pop
xor
jmp
fisubl
ds
decl
or
inc
and
mov
push
hlt
pop
cwtl
cmpsl
fadds
mov
xor
xchg
dec
mov
in
xor
mov
in
dec
jae
jo
jmp
imul
cmc
jnp
orl
testl
xor
jno
or
into
xchg
enter
cmp
mov
lods
fwait
test
sub
scas
fistps
mov
test
jmp
lahf
scas
dec
insl
adc
jae
fcmovnbe
jns
mov
pop
bound
sti
dec
ror
push
cwtl
pop
sbbb
cmpsl
imul
mov
jg
mov
mov
inc
push
js
push
mov
and
cli
or
addr16
cmp
test
xchg
adc
into
mov
orb
mov
or
test
or
cmp
icebp
popf
into
movsl
leave
or
jl
push
pop
in
push
out
rcrl
insb
mov
push
inc
iret
jmp
aas
sub
mov
jno
lods
add
lcall
les
out
gs
or
adc
xorb
test
push
mov
and
xlat
shl
cmp
scas
repz
arpl
inc
cli
das
loope
sub
xlat
xor
xor
jge
push
and
push
aas
scas
test
push
cmpsb
cli
ja
stos
mov
xor
sub
outsl
sbb
cmpsb
jo
jg
or
lret
sub
imul
jae
orb
stc
loop
pop
add
pop
fnstcw
fsts
push
in
inc
jbe
jno
inc
cli
or
in
push
add
rorl
jbe
iret
dec
imul
fisubrl
das
into
jp
inc
fstps
pop
arpl
out
int
shl
or
repnz
cli
repz
sbb
ds
cmpsb
pop
cmp
loopne
jle
outsl
mov
add
arpl
mov
mov
repnz
lds
push
out
add
ret
jecxz
outsl
adc
frstor
push
cmp
jl
or
inc
push
adc
rcrl
shrl
xor
xor
call
sbb
stos
jge
lret
push
add
dec
mov
mov
lock
sub
fisttpl
lcall
add
sahf
int
faddp
and
fisttps
iret
scas
xor
pop
fnstenv
jg
cmp
aad
mulb
xlat
jge
icebp
sbb
mov
or
arpl
popa
mov
cmpb
jmp
stos
test
loop
fisubrs
jle
xor
dec
lods
dec
rclb
or
popf
sub
mov
sbb
enter
cmp
and
in
and
or
adc
aas
mov
in
je
fnstcw
hlt
aam
xor
xor
xor
dec
xor
sub
mov
sarb
dec
pop
mov
imul
stc
xor
lds
xchg
mov
lahf
stos
ja
test
and
shll
xor
std
testl
mov
xchg
mov
insb
cmp
push
pop
add
mov
test
mov
lods
cmp
cmpsb
jno
add
add
enter
jl
pushl
xchg
das
and
nop
addr16
xchg
repz
sub
leave
cmp
dec
enter
and
xchg
leave
into
out
rcrl
adc
add
test
aam
repz
dec
mov
and
psubsb
jns
add
rclb
repz
and
lret
fisubl
fs
xchg
jp
lret
repnz
cmpsl
call
lret
jns
cs
cmp
lcall
or
lret
icebp
mov
test
push
fldcw
mov
add
add
icebp
mov
xchg
dec
lds
dec
ret
faddl
and
sbb
mov
pop
lods
push
lret
lds
in
sti
pop
cs
loop
hlt
xor
loopne
jle
pop
es
adc
aam
jb
dec
ret
imul
pop
xchg
jae
mov
mov
sub
js
xor
cmp
orb
add
push
lods
test
stos
in
bound
xor
aam
movzwl
fmuls
pop
jle
sub
jle
loopne
lods
das
test
stc
sbb
lock
lea
lods
push
lcall
cmp
mov
push
cmp
in
insl
push
adc
sti
sub
mov
xor
mov
stos
sbb
notl
xchg
mov
sbb
stc
repz
xchg
pusha
lret
int
mov
popa
or
xchg
cmp
rcll
push
mov
pop
cli
aam
pop
loope
mov
xchg
push
dec
sarl
mov
popf
outsl
jmp
nop
add
mov
mov
mov
inc
mov
insl
dec
mov
cwtl
pop
xchg
shlb
inc
push
jmp
mov
push
cmp
inc
or
mov
call
cmp
mov
pop
mov
ret
pop
add
sbb
xchg
mov
mov
movsb
mov
jg
nop
add
gs
outsl
repnz
imul
rcr
xchg
and
push
clc
cltd
clc
rcrl
fisttpl
cmpsb
movsl
xlat
imul
cwtl
adc
or
stc
cmp
sbb
inc
inc
popa
movsb
xchg
sub
push
mov
add
lods
test
sbb
in
aam
mov
rcrb
push
arpl
clc
pop
pop
test
sti
nop
add
jecxz
je
outsl
jp
mov
adc
mov
or
adc
fmuls
mov
lret
cmp
or
fisubl
pop
loope
int
insl
imul
scas
inc
xchg
mov
cmc
shrl
pushf
ss
cmp
fucomip
add
xor
cli
in
and
leave
rorl
dec
cmp
fsubrl
push
scas
ljmp
mov
or
fsub
dec
aas
inc
dec
xchg
push
add
into
clc
mov
dec
jo
sahf
push
aam
and
adc
hlt
push
sub
orb
xlat
cmp
stos
push
push
out
pop
push
cmp
mov
pop
jl
hlt
dec
fldcw
sub
sub
testl
xchg
mov
push
jnp,pn
insl
fmulp
mov
dec
jmp
or
pop
jmp
xchg
mov
fsubl
clc
xor
call
and
pop
mov
sub
and
icebp
in
xor
arpl
sbb
testl
adc
call
pop
fildl
push
pop
xor
pop
xchg
xchg
dec
sbb
mov
rcrl
inc
pop
aaa
fildll
ret
out
movsl
lcall
popf
rcll
push
lods
cmpsl
int
sub
fists
sti
arpl
test
jmp
inc
push
mov
cmp
nop
adc
out
cmp
sub
imul
aas
xchg
je
shrb
mov
shll
roll
jle
mov
xor
inc
adc
mov
mov
pop
dec
pop
test
jb
push
xchg
mov
stos
pushf
cs
add
jge
xchg
mov
mov
int3
or
pop
or
out
ja
xchg
or
scas
out
cmc
pop
shrb
and
int
dec
mov
jb
cmp
xor
insb
and
jecxz
jmp
cld
push
data16
mov
mov
sbb
rcl
jl
fstl
outsb
xchg
shrl
xorl
pop
push
imul
dec
cmp
cmp
add
mov
cmc
mov
jge
inc
aas
jnp
cmpsb
xlat
rcll
jg
push
in
and
inc
lret
lock
mov
loop
jb
cmc
fisttpll
pop
ljmp
xchg
inc
outsb
mov
sahf
lds
jmp
jbe
mulb
pop
push
push
fnsave
jecxz
mov
negb
xchg
ret
negb
sbb
sahf
sub
out
stos
lahf
add
jp
pop
push
mov
sbb
adc
aas
push
in
jne
mov
xorl
movl
lcall
push
xlat
pop
inc
arpl
repnz
push
les
fwait
pop
mov
daa
mov
mov
dec
mov
inc
or
mov
mov
adc
aaa
mov
or
adc
adcl
dec
xor
adc
xchg
inc
pop
push
rcll
sbb
jo
mov
push
lds
andb
jns
adc
pop
xlat
outsb
arpl
inc
pop
sub
and
les
jecxz
mov
and
mov
in
sbb
ret
mov
loop
arpl
and
fdivs
or
inc
xchg
dec
and
out
pop
mov
jae
out
cltd
popf
xchg
mov
xor
shrl
popw
xor
pop
inc
das
mov
je
cmp
inc
loop
add
decb
push
outsl
mov
pop
xorb
lods
push
addl
mov
pop
dec
xchg
mov
mov
cmp
cmpsb
xor
dec
aas
arpl
and
clc
and
sbb
scas
mov
mov
out
inc
mov
mov
bnd
test
icebp
mov
jnp
sub
add
test
adcb
jl
jg
fsubrp
pop
add
outsl
fwait
mov
lahf
mov
sub
mov
inc
std
xchg
sahf
inc
jbe
bound
inc
push
push
stos
sub
in
dec
shrb
cmp
push
dec
push
pop
mov
xor
push
outsl
dec
jns
loopne
idiv
jle
fs
inc
xor
push
push
dec
pusha
mov
jne
ficoml
mov
sarl
nop
fisttpl
push
add
rclb
popa
xor
notb
sbb
fistl
sub
push
mov
mov
inc
addr16
mov
push
mov
popa
shrb
mov
mov
rorb
jge
mov
call
push
hlt
cmpl
sbb
mov
pop
jns
cli
aaa
and
aad
das
loope
std
mov
push
cmp
adc
mov
das
add
stos
insl
jg
dec
mov
or
pop
aaa
mov
or
scas
aaa
dec
inc
push
adc
mov
sub
aam
ficoml
pop
or
xchg
xchg
fidivs
xorl
or
adc
and
push
xchg
fstps
insb
xchg
rcl
xchg
inc
aaa
inc
arpl
cmpsb
jge
negl
jb
and
dec
loop
inc
cltd
push
outsl
adc
or
call
mov
adc
pop
xchg
cmpl
in
xor
out
cmp
jp
fs
push
cmp
into
lret
addr16
sub
adc
xchg
movsl
xchg
popa
mov
lret
push
push
rorl
fwait
test
fs
aas
mov
negb
enter
inc
loopne
adc
inc
orl
mov
aam
inc
dec
dec
int
jns
xchg
pop
jmp
lods
gs
or
scas
fwait
test
cwtl
jnp
add
jnp
add
jb
xchg
mov
arpl
hlt
fldl2t
scas
jge
jmp
mov
ljmp
push
pop
hlt
mov
sti
fnstcw
mov
mov
insl
aas
xchg
subb
pop
jmp
dec
mov
int3
lret
xchg
lahf
xor
ror
ret
sbb
jno
fists
xchg
xchg
dec
xchg
shlb
repz
adc
sub
lcall
dec
or
push
mov
loop
sbb
dec
insb
sbb
ljmp
mov
pop
sub
dec
or
ret
push
in
xor
lcall
test
ja
dec
xchg
lahf
and
movsl
aaa
add
popa
pusha
mov
je
sbb
mov
mov
les
lea
rolb
inc
dec
push
pop
push
push
mov
dec
push
adc
cmp
leave
add
push
push
inc
icebp
mov
cmpsl
jns
xor
push
rclb
iret
imul
orl
sub
inc
fidivs
mov
push
xor
jae
adcb
pop
lahf
scas
int
std
pushf
inc
gs
pop
cmp
ljmp
pop
cmpsb
and
into
pop
std
mov
icebp
dec
mov
cmpb
mov
and
mov
test
adc
pop
fbstp
aas
mov
lret
sub
xchg
lahf
scas
xor
xlat
cmp
out
test
rcrl
push
xchg
add
lea
jo
lcall
pop
push
sti
cmpl
les
movl
sbb
mov
add
dec
push
movsl
sbb
nop
imul
xor
cmpsl
in
pop
sbb
xchg
insl
in
popaw
lods
fdivs
push
mov
dec
mov
mov
mov
push
leave
scas
ja
fcmovnbe
mov
in
rcrl
push
addr16
insb
jge
ret
mov
call
insb
jns
ss
scas
outsb
stos
jnp
jns
cmpb
mov
int3
sahf
pop
sub
shlb
add
fwait
mov
push
or
and
jb
xchg
mov
pop
in
notl
adc
dec
and
jle
jns,pt
call
outsb
cs
fildl
add
stos
scas
out
test
jne
in
test
adc
out
mov
sub
mov
sbb
push
in
adc
mov
pop
out
outsl
jo
in
mov
and
jg
jnp
mov
push
test
pop
xor
fcoml
pop
sbb
pushf
dec
jp
xchg
mov
fisubs
dec
jne
xchg
cwtl
das
out
outsl
repz
mov
in
push
jle
sbb
loope
adc
pushf
rolb
add
push
movsb
dec
jge
sub
add
sub
jne
xchg
loopne
in
fisubs
push
dec
push
fldenv
popa
out
lock
fisttpl
arpl
pop
jecxz
mov
pop
nop
test
sahf
adc
ret
add
adc
sbb
test
bound
test
sbb
insl
int3
fildl
pop
movsl
pop
mov
or
jne
sbb
pop
jp
dec
shlb
adc
cltd
mov
xlat
xor
mov
les
push
mov
cmp
jae
orl
jbe
add
jb
jae
jb
stos
movsl
jg
adc
std
mov
pop
aaa
adc
xor
pop
jne
lods
push
adc
rcr
sub
cld
sarb
pop
inc
adc
jo
or
testb
pop
mov
out
bound
cmpsb
xor
and
and
mov
fldl
mov
pop
xor
lock
sub
pop
jae
imul
jg
push
inc
int
mov
scas
or
in
dec
pop
sbb
popf
lods
aas
lock
push
jnp
ss
sub
mov
aad
sbb
push
dec
scas
jnp
pop
adc
pop
pop
mov
and
xor
clc
out
adc
ljmp
clc
xchg
jo
add
aas
int3
xchg
mov
stc
sbb
outsl
cmpsl
inc
push
dec
xchg
hlt
push
pop
sbb
mov
cmp
jmp
cmp
nop
rcll
xchg
fcomps
push
cs
jmp
in
jg
inc
ss
test
cmpsl
outsl
notb
xchg
ret
insl
jno
xchg
mov
out
push
fidivrs
scas
test
push
cs
repnz
loopne
adc
cwtl
test
cmp
lds
ss
inc
adc
add
sbb
test
test
xchg
pop
loopne
inc
out
repnz
or
push
sti
pop
gs
inc
test
xor
stos
cwtl
jnp
jg
mov
mov
out
stos
jbe
movsb
inc
imul
stc
lock
imul
add
dec
sub
into
fcompl
je
sub
test
fwait
inc
test
mov
out
std
popa
xor
sahf
rcrl
inc
inc
pop
imul
add
test
nop
or
jecxz
fdivl
inc
js
aad
movsb
movsl
or
outsl
push
push
inc
leave
outsl
and
outsl
bound
outsl
jb
aas
gs
sub
mov
and
iret
lods
mov
mov
and
mov
cmp
das
sub
movsl
rolb
mov
dec
fwait
lods
out
arpl
daa
dec
cmp
movsb
jno
and
scas
stos
add
popf
pushf
dec
gs
mov
or
sub
loopne
aam
pop
incl
fiaddl
or
and
lds
push
add
mov
iret
sbb
scas
xor
xchg
push
sbb
loope
out
xchg
cmp
inc
movsb
and
mov
pop
out
mov
sbb
pop
push
push
imul
bound
in
lcall
mov
jns
push
pop
frstor
nop
pop
jb
pop
cmp
inc
rorl
call
sub
fnstcw
cmp
insl
mov
movsb
out
mov
xchg
and
leave
movsb
addr16
fwait
xor
andb
lret
addb
push
mov
adc
mov
rcrb
mov
add
ljmp
sbb
dec
jnp
add
and
adc
and
pop
int3
dec
adc
movsb
jb
test
fs
aam
leave
dec
jne
add
cwtl
push
cltd
in
je
adc
fdiv
nop
daa
xor
push
aas
lea
xchg
lcall
in
inc
xchg
add
xor
jl
popa
mov
sbb
jl
inc
out
stos
sub
mov
int
imull
ret
rorb
out
mov
pop
xchg
xchg
add
cmc
rorl
dec
sahf
lods
pusha
mov
xcrypt-cfb
cmpsl
fs
test
pop
and
sub
pushf
fidivl
mov
jl
cmpsb
outsb
dec
arpl
pop
jmp
js
cmpb
cltd
pop
sub
andl
scas
loop
fmull
aam
push
cmc
mov
and
aam
fisttps
lea
or
mov
stos
hlt
jns
aad
jg
lahf
and
lahf
jne
push
ret
mov
dec
int3
popa
pop
pop
test
cmpsl
hlt
push
int
pop
outsb
or
xchg
adcl
in
icebp
shlb
pop
xchg
xor
add
sub
add
mov
mov
daa
imul
push
pop
popf
pop
sbb
stos
sbb
aad
leave
faddl
jnp
xchg
mov
in
inc
inc
ret
mov
stos
out
cmp
aad
lahf
mov
fildl
fwait
add
or
cltd
fnsave
addr16
fwait
js
dec
stc
push
adc
pop
je
jl
jp
mov
popl
int3
xchg
jecxz
jne
fs
nop
inc
orl
mov
nop
sahf
jno
fsubrs
jmp
movsb
xor
xchg
in
test
incl
jecxz
repnz
sub
dec
mov
in
cmp
inc
fistl
popf
fdivl
sbb
sbb
inc
insb
into
shll
outsl
xor
shlb
xchg
cmp
fiaddl
jb
mov
sti
pop
add
dec
jle
mov
or
xchg
insl
dec
xchg
jle
xchg
dec
out
icebp
icebp
dec
mov
or
test
jnp
jge
sbb
in
shl
fwait
js
and
or
test
outsb
test
push
cmp
mov
add
mov
stc
mov
jno
and
add
mov
fs
mov
mov
adc
ljmp
lahf
hlt
sahf
xchg
sub
movsl
out
shlb
imul
mov
lea
inc
ds
inc
fstps
int
lahf
repnz
jno
jnp
inc
adc
int
push
mov
cmp
cmp
push
pop
ret
cmp
mov
loopne
sbb
stos
dec
shll
add
dec
stos
incb
lods
into
push
cli
jae
cmp
cmpsb
adc
out
jge
xor
sbb
pop
fimull
aaa
or
cmpsb
and
cmp
repnz
dec
add
aad
in
mov
push
movsl
push
lods
dec
pop
mov
mov
fstpt
icebp
add
shll
sahf
lcall
mov
not
in
sti
das
scas
xor
sub
pop
ror
push
int3
jg
push
mov
add
cmp
repnz
insb
mov
bound
cmp
cmp
aad
or
cld
or
lds
jl
jl
push
push
icebp
aas
mov
jecxz
jae
inc
dec
scas
movsb
popa
repnz
enter
sub
adc
pop
int
xchg
and
leave
aam
push
mov
pop
insb
dec
repnz
lea
shrl
lds
add
sbb
pop
testb
imul
xlat
jne
cltd
jnp
push
or
les
stc
stc
inc
in
in
imul
mov
mov
ljmp
mov
mov
inc
movsb
dec
sub
movb
cs
int
daa
xchg
idivl
repz
scas
in
adc
aad
pop
cmp
mov
add
sub
add
inc
fwait
sbb
mov
or
add
out
imul
and
or
push
mov
xor
cmp
test
out
and
jp
lods
popf
popf
or
outsb
mov
aas
fisttpl
cltd
sbb
jle
pop
aam
inc
test
into
loop
aad
call
jg
aad
decb
xchg
mov
popf
idiv
jo
mov
mov
or
mov
insl
rcll
pop
mov
sbb
jmp
test
stos
xchg
inc
fistpll
fsubs
inc
xlat
jmp
mov
js
mov
aad
jb
test
dec
xor
pop
pop
nop
mov
pop
push
cmp
popa
jo
cmp
das
adc
jle
adc
jge
adc
xchg
cmpsb
shlb
lret
insl
daa
flds
clc
cmp
mov
and
sbb
ret
adc
mov
xor
notb
add
xor
lods
mov
inc
mov
mov
shl
adc
incl
aad
or
shll
cmpsb
pop
xor
xor
cmpsb
les
sub
push
mov
xchg
mov
mov
push
dec
add
test
mov
lods
xor
repz
push
xchg
fsubl
adc
sbb
pop
data16
or
rcrl
pop
push
ljmp
xchg
push
dec
lret
inc
add
or
jge
pushf
out
or
cmp
adc
dec
clc
out
push
scas
movsl
jp
fldl
jbe
fildll
sbb
pop
mov
dec
add
xor
js
push
add
aaa
mov
jns
or
jecxz
mov
ja
adc
fmull
outsl
cmpsb
pop
call
cmc
add
mov
sti
cmp
add
sahf
cmp
mov
fdiv
scas
sti
stos
lret
mov
lahf
fwait
sbb
mov
aam
inc
jnp
jg
cmp
repz
movsl
sbb
mov
clc
popa
or
jecxz
pop
addl
sti
mov
jge
dec
rcll
cmp
inc
les
xchg
push
je
out
mov
addr16
aam
cwtl
mov
fdivl
mov
idivb
out
jl
jo
mov
push
sub
ljmp
add
add
mov
jno
mov
dec
jecxz
ljmp
pop
push
out
pop
push
inc
clc
add
cltd
or
dec
in
cmp
in
testl
adc
and
push
xchg
adc
xor
mov
adc
push
dec
in
adc
xchg
xor
aam
rcrl
push
pop
xor
mov
xor
jg
sbb
pop
loopne
mov
arpl
mov
leave
mov
mov
add
push
jb
push
sbb
dec
mov
and
lret
inc
and
and
and
cwtl
or
and
jge
hlt
test
hlt
xor
push
mov
sub
jle
jmp
fcompl
arpl
fs
push
sub
push
xchg
mov
sbb
mul
and
sub
cltd
inc
ja
icebp
lcall
push
call
xor
hlt
fisubrs
mov
sub
leave
scas
cmpsb
loopne
in
lods
test
or
bound
sbbb
test
cmpsl
inc
shrb
das
xchg
jae
pop
dec
sub
cmp
pop
xchg
push
pop
int3
inc
jecxz
xchg
imul
out
mov
pop
orl
cli
ret
mov
add
xor
cmp
movsl
and
fdivrl
dec
dec
jne
and
loop
movsl
cmc
xor
dec
test
xchg
add
add
sahf
rclb
mov
loop
sbb
xchg
pop
test
repz
adc
insl
lret
rolb
xor
jno
or
jno
jl
repnz
out
cli
jbe
pop
ret
xchg
and
push
mov
pop
inc
dec
mov
mov
mov
loope
adc
arpl
lock
cld
dec
or
lods
sti
xor
fwait
mov
mov
fwait
add
daa
xchg
imul
jno
leave
sbb
pop
fidivs
mov
and
out
hlt
je
dec
jnp
jbe
bound
cltd
cld
inc
mov
xchg
push
loope
cltd
test
nop
sbb
and
mov
dec
insl
pop
mov
adc
mov
scas
cmp
sub
push
out
imul
jno
cmp
sub
add
bswap
movsl
cmpsl
xchg
daa
mov
push
push
or
pop
mov
aas
fwait
in
jae
clc
in
adc
mov
or
pop
add
sarb
ljmp
orl
mov
push
cltd
cmp
sbb
test
jg
pop
pop
dec
push
lock
les
stos
push
inc
xor
lea
imul
cwtl
and
push
push
lea
int3
xchg
or
nop
mov
mov
out
out
push
stos
out
clc
shlb
mov
sbb
ret
mov
inc
loop
push
push
cmp
xlat
repz
mov
pop
ret
lods
loop
mov
loop
stos
aaa
and
test
sub
xor
push
nop
jbe
in
mov
js
dec
mov
cltd
sbb
adc
fmul
rcl
data16
aas
int
pop
inc
movsb
xchg
xchg
decb
adc
stos
cli
jno
push
fsub
or
frstor
dec
lods
test
gs
xchg
add
dec
lahf
je
push
inc
shl
jp
dec
mov
stc
sarl
adc
jge
mov
mov
dec
mov
pop
movsb
into
xchg
in
sti
pop
mov
push
daa
and
push
cmp
clc
push
clc
data16
dec
pusha
and
insb
ljmp
lds
and
lcall
mov
dec
aam
jl
dec
and
inc
dec
out
fisubs
dec
mov
out
inc
clc
aaa
pop
sub
mov
test
loopne
rcr
ljmp
mov
into
js
xchg
adc
jmp
sar
adc
xchg
push
mov
rclb
jp
push
arpl
and
adc
test
ds
adc
fstl
aaa
sub
repnz
jbe
xchg
inc
mov
outsl
pop
push
fcoml
cs
lock
popf
dec
fs
fdivrl
mov
mov
movsl
rcll
add
jb
mov
xor
test
out
neg
aaa
adc
pop
inc
cli
mov
pop
lahf
clc
cmp
out
lahf
jg
inc
sti
mov
pop
push
ret
test
and
in
xchg
sarl
dec
call
mov
sbb
xor
dec
adc
add
mov
jge
fwait
dec
loop
cmp
xchg
cmc
pop
jp
sahf
loope
add
std
test
push
xor
ja
cld
push
popf
divb
jle
lods
in
bswap
adc
cmp
mov
ret
jb
xchg
repz
add
xchg
xchg
jae
mov
mov
aam
mov
fcomi
enter
lods
or
lret
xor
mov
mov
inc
sub
mov
sbb
mov
leave
rol
jne
loopne
sub
out
mov
stos
cmp
jecxz
int
push
jbe
pop
mov
test
jmp
mov
mov
or
add
fdivrl
outsl
pop
or
mov
mov
pop
mov
cltd
pop
add
mov
es
std
inc
adc
push
mov
stc
push
sbb
loope
ficoml
loope
cmp
enter
or
xchg
int3
ficompl
sub
imul
or
in
js
fiaddl
fst
pop
jge
fstpl
cmp
push
cmp
sub
imul
daa
pop
push
rclb
mov
sbb
frstor
mov
test
cs
movsl
adc
fcmovnbe
jp
aas
inc
pushf
push
sub
out
xchg
arpl
sub
cmp
dec
rcrb
mov
movb
leave
int
inc
sbb
mov
add
cli
call
pop
add
call
cmp
sti
lret
aam
xor
pop
popa
popa
mov
into
ljmp
pop
ljmp
sti
jmp
pop
xchg
xchg
jp
jne
mov
or
movsb
pusha
sbb
adc
jbe
xor
mov
les
nop
jp
cmpsl
icebp
call
mov
pop
in
xchg
or
sub
xor
mov
popa
cmp
mov
mov
iret
lock
popa
sub
add
sbb
pop
lods
pop
mov
cmc
loopne
imul
and
enter
cmp
sub
xor
xchg
scas
jl
and
js
dec
fwait
in
cmpsl
repnz
and
mov
xchg
popf
xchg
data16
or
and
fstps
jo
inc
jae
mov
mov
cwtl
pop
or
out
sub
xor
test
xchg
adc
dec
idivl
in
pop
push
push
and
out
enter
mov
lock
insb
mov
movaps
mov
aam
inc
xor
mov
in
mov
or
daa
push
xchg
sub
or
fstpl
aaa
dec
shll
mov
and
add
scas
inc
sub
lahf
sub
push
sahf
sub
lods
xor
sbb
ljmp
fs
sbb
xchg
subb
imull
push
int3
jb
sti
sti
lcall
popf
addb
imul
add
xor
loopne
bound
shlb
and
mov
lds
ljmp
cmp
add
xor
lahf
sbb
jne
pop
jecxz
xor
insl
out
sub
call
jle
jmp
jecxz
xlat
scas
ljmp
std
add
lods
mov
cmp
xor
and
mov
mov
xor
jle
add
lods
enter
xchg
mov
inc
stc
push
in
push
xchg
lret
test
mov
mov
cmp
pop
insl
push
shll
pop
jp
movsb
adc
mov
iret
insl
data16
out
fcoms
push
mov
adc
mov
cld
scas
add
dec
insl
add
jnp
dec
test
loop
inc
sbb
lret
inc
jae
jg
mov
dec
push
in
xor
lods
sub
push
mov
sbb
scas
mov
lcall
test
and
or
mov
push
jmp
lret
add
popa
and
pushf
jne
inc
pop
popf
test
push
adc
pop
mov
push
lods
filds
mov
lret
repz
lods
and
jne
mov
adc
rcll
jle
das
or
dec
push
je
jno
lods
int3
out
push
push
jns
aad
push
add
cmpsb
sub
fwait
loopne
out
aam
fs
leave
scas
lcall
cltd
stc
outsl
mov
push
enter
mov
mov
dec
inc
dec
jmp
xchg
sbb
or
push
int
outsl
cmp
inc
and
sbb
js
cltd
xchg
shll
jmp
inc
repz
lods
xor
jbe
inc
outsl
xchg
add
cmp
cmpsb
push
dec
leave
jmp
jl
add
mov
pop
rorl
adc
jle
push
adc
or
jl
sub
push
pop
daa
into
cwtl
movsb
xlat
out
inc
push
mov
loopne
push
sub
call
add
fs
fs
call
xchg
shrb
fdivs
mov
sub
sub
clc
and
mov
mov
xchg
sbb
enter
jmp
rorb
jmp
dec
adc
jne
loope
push
jl
mov
pop
add
mov
push
or
inc
push
dec
adc
mov
or
cltd
dec
cld
shl
repz
lock
shl
pop
sahf
push
add
cmp
fnstcw
cs
inc
dec
test
push
movsl
mov
xchg
pop
and
mov
pop
stos
push
mov
or
sbb
pop
stos
out
cmp
inc
rolb
jmp
xor
sub
scas
mov
shll
sbb
pop
loopne
inc
sbb
xlat
jae
mov
cmp
ficompl
inc
subl
xlat
test
mov
adc
in
aas
inc
mov
pop
xchg
xchg
xor
pop
jmp
enter
and
mov
push
pop
dec
les
xor
mov
mov
xchg
lods
mov
stos
aad
cmp
subl
es
xchg
gs
jecxz
mov
loop
mov
cld
xchg
or
pop
push
mov
pop
lea
mov
outsl
cltd
fisttpl
shrl
stos
sub
cmp
hlt
mov
add
or
dec
inc
or
ret
or
test
into
sahf
aam
in
clc
pushf
rcrl
pop
aam
cli
mov
jecxz
jno
das
dec
xchg
xchg
sub
cmp
out
dec
shlb
lods
or
xor
hlt
sub
mov
fnsave
arpl
xor
mov
js
mov
adc
xor
mov
sbb
or
cld
in
or
lahf
push
add
cmp
ja
jne
out
imul
pop
iret
shll
inc
adc
sahf
imul
test
adc
stc
push
mov
cmp
divl
mov
mov
lcall
outsl
add
jns
mov
jp
adc
lcall
aas
fildl
pop
sbbl
shll
and
and
dec
or
jecxz
push
out
or
xchg
out
push
dec
repz
das
pop
mov
and
add
outsb
jo
out
pop
xlat
or
sbb
fcmovbe
aam
inc
test
arpl
in
add
sub
les
jp
rcrl
jae
adc
loop
push
stc
mov
xor
mov
jb
test
push
sub
xorb
pushf
fildll
pop
insl
jl
data16
out
dec
push
pop
add
jge
sti
pop
popa
cmpb
imull
adcb
xchg
pop
je
add
xor
mov
rclb
push
leave
int
push
ljmp
xor
mov
pop
in
pop
stos
add
mov
pop
sbb
cmpsl
scas
add
imul
dec
sbbb
andl
scas
aaa
in
sti
cmpsl
pop
jl
jmp
inc
dec
test
inc
mov
nop
cltd
rcll
and
clc
fsincos
mov
enter
and
iret
fcompl
pusha
or
arpl
insl
xor
xchg
xlat
jo
cmc
out
stos
adc
daa
pop
xor
push
jmp
ja
mov
dec
adcl
ret
xlat
lock
push
push
js
popf
bound
insl
ret
inc
lods
loope
aam
add
adc
add
pop
bound
loopne
pop
or
jbe
add
popf
lret
mov
mov
les
push
fdivrl
or
or
push
adc
ss
xchg
testl
in
push
xor
mov
mov
testl
add
movsl
shl
insb
sahf
sti
add
mov
adc
push
addr16
dec
add
sub
fbld
icebp
jbe
test
adc
hlt
lret
rclb
mov
dec
mov
cmc
imulb
mov
rcl
lods
dec
pop
cmpsb
ret
push
push
icebp
dec
sub
fnstsw
inc
adc
xchg
adc
ret
add
outsl
rcrl
and
cmpl
decb
filds
shll
xorb
and
mov
mov
jmp
inc
adc
push
pop
push
aad
mov
push
pushl
out
scas
push
lret
popf
push
fisubrs
push
pop
test
mul
cltd
jg
dec
int3
mov
adc
movsl
or
jnp
paddd
popa
jns
lret
inc
int3
mov
test
xchg
push
rcrl
cmc
pop
mov
add
pop
sti
clc
jp
fs
lret
daa
push
push
outsl
insl
stos
jg,pn
out
ror
mov
dec
scas
cmp
dec
push
or
add
jo
lea
mov
mov
adc
push
push
pop
jae
xchg
ret
cli
and
or
sub
inc
cmc
jns
sbb
lret
xchg
lcall
ss
xchg
mov
xor
repz
add
cmc
add
ret
pop
inc
jge
lret
inc
sbb
jmp
jg
lods
pop
enter
imul
in
sub
push
jns,pn
ret
imul
in
dec
add
push
insl
sbb
loope
cmp
xor
adc
ljmp
mov
dec
push
les
sbb
xor
in
sbb
movsl
lods
dec
mov
dec
sub
mov
pop
call
or
mov
mov
mov
stos
pop
test
gs
xchg
inc
sub
inc
cmpsl
pop
push
das
mov
shrl
movl
ret
push
mov
fs
push
in
addr16
imul
cld
xor
add
call
lods
lock
and
mov
test
ja
cmpsb
cmc
push
jne,pt
ss
pop
in
loopne
imul
mov
mov
imul
test
pop
rolb
imul
dec
mov
push
dec
pop
or
dec
sub
xchg
rclb
pop
fstl
lretw
add
movsl
pushf
pop
cmp
mov
pushf
out
xor
pop
pop
xor
fucomp
xchg
sbb
ds
adc
rcrl
sbb
shll
xor
mov
mov
push
cmp
call
xor
and
xlat
mov
lea
dec
dec
sbb
cltd
xor
mov
mov
mov
mov
add
inc
adc
movzwl
ljmp
sti
rolb
movsb
rcll
leave
sub
shll
movsl
dec
in
jg
mov
outsb
dec
xor
ljmp
ljmp
sub
push
mov
xchg
jmp
pop
cltd
xchg
imulb
push
mov
push
inc
rcr
ss
ljmp
mov
mov
cmp
push
mov
ljmp
in
dec
adcl
enter
adc
pop
mov
lods
rcll
mov
sub
pop
call
mov
add
pusha
jns
shll
in
jg
stos
bound
inc
mov
cmp
jo
mov
inc
rcrb
enter
and
sub
mov
ret
jne
lcall
and
ds
or
xchg
scas
ficompl
adc
scas
ror
fcomp
push
xchg
insb
outsl
insb
aaa
or
jno
pop
ljmp
mov
sub
ficompl
mov
leave
xchg
out
push
cld
cs
push
pop
int3
xchg
hlt
jbe
out
fadds
push
xchg
lods
rolb
jmp
faddp
and
pop
fsub
movsb
leave
dec
sub
ja
pop
js
xor
adc
pushf
jno
lock
fidivrs
ja
mov
gs
stc
xchg
in
rol
out
mov
arpl
out
pop
repz
add
pop
xor
push
dec
push
fdivrs
xor
cli
sbb
sbb
sub
std
iret
jmp
add
push
and
jns
data16
adc
mov
movsl
jne
cld
dec
push
cld
cmpsb
mov
jle
dec
lock
push
push
jns
aam
sbb
sub
adc
sahf
jle
aam
out
sbb
push
mov
add
mov
xor
xchg
mov
cli
adc
lods
push
push
jnp
push
sbb
rorb
jns
repnz
xor
sub
jns
repnz
jl
xor
xor
aad
dec
lods
ljmp
rcr
subl
sarb
adc
inc
mov
add
adc
int3
lretw
dec
out
imul
cmp
mov
sbb
sub
pop
test
orb
dec
aad
xchg
int3
out
or
sub
mov
push
sbb
insb
pusha
test
repz
xchg
xorb
xchg
inc
popa
stos
scas
adc
add
popf
xchg
xor
ljmp
leave
loope
idiv
dec
je
mov
leave
cld
push
cld
add
out
mov
xchg
sbb
fldenv
mov
call
adc
jo
mov
jge
movsb
or
bound
jmp
jg
int3
test
ja
jae
fstpl
lret
mov
clc
push
sub
nop
jno
in
add
das
cmpsl
cld
adc
pop
add
adc
daa
jl
int3
xor
jbe
in
xchg
fmul
imul
lea
imul
mov
pop
cld
ss
in
in
xor
xor
cs
cmp
lods
ja
push
dec
or
bound
xchg
aaa
xchg
push
pop
and
pushf
pop
lds
out
add
loope
in
sbb
lea
mov
rolb
ss
mov
adc
lret
mov
pop
data16
fisubs
jbe
mov
xorb
xchg
scas
f2xm1
jg
inc
fiadds
jecxz
adc
inc
clc
nop
icebp
and
mov
add
mov
mov
fdivl
or
xchg
mov
into
adc
mov
push
aad
adc
rcrl
inc
and
adcb
or
sub
mov
sub
adc
outsl
jbe
pop
cmp
insl
sub
jns
icebp
cwtl
cmpsb
std
push
fdivs
sahf
mov
xlat
cmpsl
fwait
clc
ret
push
sub
or
lods
jb
movsb
cmc
jge
adc
ljmp
mov
mov
add
push
jae
or
dec
dec
and
cmp
push
fs
mov
add
gs
mov
mov
out
imul
ret
outsl
xor
sub
or
adcl
cmc
imul
add
pop
pop
xor
mov
or
testl
clc
adcb
shl
gs
mov
cmp
and
or
sbb
test
sti
xor
pop
mov
xor
cmpl
shrb
negl
fisubrs
rep
dec
mov
in
clc
stos
sbb
clc
in
push
movsl
jb
insl
pop
xchg
adc
clc
xchg
xchg
sub
mov
outsl
dec
xchg
lret
xchg
fldcw
andb
jnp
xchg
add
pusha
lea
jo
xchg
dec
in
or
nop
lock
scas
and
je
sbb
fimull
cmp
sub
mov
jmp
jp
xor
xchg
mov
cmpsl
test
hlt
mov
mov
dec
in
imul
iret
mov
inc
pop
aas
lret
push
sub
daa
fstpl
mov
int3
xchg
punpckhwd
sub
adc
das
adc
js
xchg
stc
lods
xor
xchg
repnz
jno
gs
push
xchg
mov
movsl
mov
jno
mov
jae
mov
mov
mov
sbb
shll
test
jge
sbb
mov
push
rcrl
in
push
jb
pop
and
orb
rcrb
int
pusha
pusha
mov
jp
cmp
adcb
clc
inc
sti
out
cmp
bound
lea
xor
cmpsl
loope
and
cmpsb
imul
shr
and
inc
roll
cmpsl
pop
sbb
lods
imul
jae
fsts
xor
cmc
mov
outsl
mov
shrl
pop
jmp
xchg
fnstsw
imul
add
roll
mov
and
lahf
push
or
shlb
pop
mov
aas
dec
fwait
pop
cmp
lea
fstpl
jbe
movsl
popf
xchg
xor
inc
add
mov
mov
pop
mov
les
push
xor
imul
lahf
fstpl
dec
add
aad
test
add
in
sahf
mov
sub
stos
loopne
rcrl
inc
mov
fucomp
lea
je
inc
mov
xchg
cmpsb
test
repz
loope
jae
push
nop
neg
js
cmp
push
pop
and
dec
std
or
ja
mov
or
xchg
imul
scas
add
cmp
notl
sub
mov
outsb
mov
sub
dec
mov
or
mov
pop
xor
mov
ljmp
xchg
xlat
imull
popa
dec
and
add
out
negb
nop
push
lods
popa
add
lret
mov
into
cltd
es
push
jae
xor
popa
and
and
test
mov
mov
lds
rorl
adc
and
out
cmp
inc
sbb
int
inc
lret
int
decl
ret
nop
xlat
mov
aas
cld
ret
dec
aaa
and
dec
and
fwait
push
je
fucompp
jno
sub
add
mov
mov
fsub
test
xchg
dec
fbstp
int3
xchg
inc
popf
cmpsb
test
leave
sbb
cmp
xlat
fsqrt
xchg
pop
mov
xchg
movsb
push
pusha
mov
push
push
push
mov
cmp
mov
enter
fs
mov
pop
and
pop
adc
push
inc
mov
mov
and
xchg
or
mov
add
mov
inc
add
mov
aam
aas
fs
xor
insl
push
mov
call
fsub
jp
ds
bound
or
fdivs
ret
imul
dec
les
jbe
out
scas
nop
pop
mov
mov
in
scas
pop
sbb
xchg
test
xchg
mov
fcom
mov
cwtl
cld
push
cs
lahf
call
dec
stos
jl
pop
jae
add
ret
inc
cmp
aam
mov
cmp
pop
push
vmovdqu
jle
sub
pop
call
inc
mov
xchg
pop
addb
and
cmpsl
fdivrs
xchg
gs
cmp
push
xchg
push
push
ret
push
cmc
xchg
xchg
cli
mov
sub
xor
push
daa
mov
iret
mov
es
insl
mov
push
xor
jb
xor
jmp
andl
shrd
sub
cmp
mov
ds
push
stc
push
roll
das
push
sub
aam
dec
xor
jl
pop
jo
xchg
loopne
xchg
inc
mov
jg
out
enter
push
mov
add
and
lea
push
dec
orl
es
adc
jbe
nop
fildll
push
push
adc
mov
inc
inc
sbb
xor
fs
enter
mov
shlb
in
sub
mov
pop
or
mov
out
les
loop
dec
stos
mov
or
mov
pushf
sub
and
mov
gs
mov
cmpsl
lods
repz
lret
ret
and
arpl
fidivrl
xchg
sahf
xchg
aas
add
xchg
fnstsw
inc
inc
adc
and
sub
lret
xchg
add
mov
cmpsl
jb
dec
popa
dec
addr16
hlt
xchg
xchg
lods
add
fstp
pop
push
sub
test
ds
dec
call
mov
fwait
and
add
jl
int3
ficomps
subl
pop
sub
lods
mov
imul
pop
add
repz
mov
scas
inc
jne
mov
xorl
pop
cli
jbe
inc
inc
or
push
repnz
mov
cmpsb
ja
sbb
adc
push
xchg
push
lcall
add
popa
lret
pop
adc
mov
push
mov
jo
sbb
out
mov
jle
mov
sbb
in
sahf
call
jl
scas
xor
lea
xor
ret
push
xor
add
scas
push
inc
test
xor
cmc
push
fnstcw
ds
xchg
sbb
lret
outsb
xchg
cld
imul
mov
jnp
outsb
scas
imul
mov
cld
mov
out
not
aas
pop
push
ja
sub
inc
shll
mov
cmp
cmc
rorl
shl
int
int
fcoms
push
dec
mov
push
test
dec
mov
test
jmp
cli
fs
nop
mov
jae
sarl
lahf
mov
mov
das
and
fistpl
into
hlt
add
enter
jle
arpl
shlb
sbb
mov
mov
rolb
stc
cmp
faddl
aad
mov
pop
nop
fisttps
lcall
addr16
jp
mov
sbb
push
je
push
fwait
inc
sub
or
pop
sbb
adc
pusha
adc
test
and
outsl
mov
sub
or
sbb
loope
aas
inc
jbe
lds
bound
shlb
mov
test
mov
mov
or
mov
cltd
xor
pop
aas
jnp
fisubl
xlat
loopne
xor
push
in
xchg
cmpsl
sbb
jnp
jl
into
xchg
imul
sub
sub
stc
je
lods
cmp
aaa
push
lahf
inc
or
sbb
dec
mov
es
push
fs
mov
xchg
push
test
bound
and
repz
pop
xchg
das
and
sbb
mov
jge
mov
negl
fdivl
cmpsb
mov
mov
mov
sbb
mov
call
test
in
pop
test
stos
add
or
sub
xchg
sti
cs
and
popf
cmp
or
out
bswap
dec
cli
xchg
add
out
ret
mov
dec
xchg
cwtl
shl
xchg
test
mov
cmp
call
shlb
lods
inc
sbb
and
hlt
push
or
sub
movsb
lock
or
repnz
out
mov
push
icebp
imul
push
bound
outsb
lahf
add
pushf
inc
repnz
dec
jmp
dec
jb
stos
in
mov
dec
sbb
loopne
mov
cmp
mov
adc
xchg
inc
push
sub
mov
jne
std
negb
rcrb
fmull
push
addr16
cs
push
rcl
push
or
or
rcr
jl
in
jne
add
mov
sarb
jno
jbe
jb
xor
imul
test
push
mov
clc
hlt
sahf
xchg
out
adc
fxtract
stos
mov
push
shll
jle
dec
call
push
cmp
pop
xchg
pop
ret
dec
aaa
jecxz
insb
add
iret
cmp
loopne
mov
jmp
push
jmp
inc
pop
xchg
pop
push
cld
and
jle
sbb
inc
loope
adc
mov
dec
imul
jno
aad
cmp
inc
or
and
test
cmp
lds
notl
es
imul
fcoms
iret
and
pop
int
fs
cs
call
les
lahf
mov
ffreep
sbb
and
mov
xlat
sahf
outsb
and
add
xor
pop
mov
insl
int3
cmpsb
outsl
shl
mov
mov
mov
jb
xlat
and
dec
inc
enter
xor
orl
pushf
imul
aad
adcb
cwtl
neg
adc
cmp
xor
jnp
out
fmull
aaa
mov
pushf
ret
sub
repnz
fcoms
mov
mov
push
repz
jnp
aad
push
ljmp
mov
or
jecxz
mov
int
cmp
leave
jo
jecxz
ds
fdivl
sbb
ljmp
jns
movsb
imul
hlt
aas
inc
push
cmc
ja
clc
mov
mov
add
lods
and
fistl
and
pop
cmp
leave
imul
clc
add
jo
pop
jne
cltd
pop
cmp
sbb
cld
mov
push
int
sub
lds
jno
outsb
lea
out
pop
xor
call
scas
sbb
cmp
data16
fsubrs
lcall
mov
pop
xchg
int3
mov
mov
mov
sbb
push
adcl
lods
out
sub
mov
push
mov
sbb
int
push
xchg
aad
pop
cmp
jmp
adc
sub
pushf
or
dec
ficomps
and
mov
dec
loope
and
pop
and
cld
and
cmc
addb
shrb
pop
and
aaa
jne
xlat
fbstp
ffree
into
adc
mov
ror
mov
dec
sbb
sbb
fistps
mov
push
gs
nop
jp
mov
cli
pusha
in
fisubrl
mov
rclb
cli
xor
dec
popa
mov
call
adc
and
xor
xorb
mov
mov
mov
data16
shlb
push
inc
loopne
in
inc
shll
movsl
xor
add
inc
xchg
icebp
or
mov
pop
pusha
and
insb
dec
cmp
push
mov
pop
sbb
sub
cmp
pushf
ret
imul
xor
push
mov
jbe
mov
cmpsb
jno
push
xor
push
jmp
mov
push
lahf
push
or
shl
cmp
jae
ret
sbb
xor
shlb
jae
andb
jne
jno
pop
imul
insb
and
aad
stos
inc
fwait
scas
cmc
pushf
jmp
aaa
jno
faddl
inc
push
lret
mov
shrl
or
out
mov
push
aaa
and
repz
inc
or
fisubs
jle
push
mov
mov
test
dec
jae
xchg
mov
mov
push
and
imul
mov
filds
add
stos
jo
dec
orl
cmp
ret
sbb
jp
mov
push
push
sub
movsb
cmpsl
aas
push
out
jl
popf
cmp
push
aas
ret
push
xor
or
xor
and
loope
lods
mov
mov
fsts
inc
adc
push
lcall
imul
filds
loop
xchg
out
jp
sbb
les
into
xchg
cmc
fisttpl
adc
cs
stos
rol
sbb
sbb
inc
aas
push
push
cmp
hlt
daa
xchg
or
in
fstpl
xchg
setl
or
add
jp
dec
jl
repz
inc
out
push
xlat
cli
es
sub
mov
not
lock
dec
cmpsb
loope
push
add
je
jle
nop
xchg
adc
xor
cmpsl
or
scas
jns
inc
test
addr16
ja
stos
in
into
sub
xchg
cmp
jno
sbb
imul
hlt
jle
pop
mov
jns
mov
nop
jecxz
and
mov
scas
jns
add
pushf
pop
scas
jecxz
cmp
add
out
sub
ds
add
or
pop
test
dec
cld
mov
ljmp
jge
xor
cmp
testl
dec
mov
xor
or
mov
insb
xchg
and
rorl
mov
scas
push
xlat
je
and
movsl
mov
mov
ds
jle
or
push
ljmp
push
bound
adc
mov
and
and
pushf
xorl
and
dec
sub
maxps
bound
ds
stc
mov
cmc
dec
test
jb
subb
dec
add
dec
xchg
fisubrl
jge
and
in
pop
adc
push
mov
jmp
aaa
enter
push
loop
jp
xor
add
xchg
push
jno
dec
cmpl
or
add
addr16
in
std
push
xorl
jae
inc
dec
lods
mov
lds
adc
ds
in
and
aam
and
pop
ret
lret
addb
out
sbb
cmc
and
int3
push
push
cld
movsb
jge
jbe
shrl
xor
pushf
or
adc
test
push
fcmovnbe
mov
data16
mov
inc
icebp
xchg
cltd
dec
shll
xchg
xchg
pop
jg
jg
gs
mov
mov
jno
fnstcw
cld
movsl
les
jge
movsb
pusha
dec
test
in
pshufw
rol
lret
shll
ret
dec
add
xor
adc
mov
xchg
punpcklbw
inc
popa
daa
push
int3
xor
mov
xchg
push
add
push
movsl
or
mov
stc
push
lahf
mov
mov
push
mov
xchg
sub
ja
addr16
xchg
and
dec
cmp
adc
push
test
stc
xlat
mov
cmp
push
mov
jo
and
loope
fistl
insl
pop
out
pop
rclb
xchg
pusha
mov
scas
push
xchg
les
lea
pop
mov
xchg
subl
sub
popa
and
mov
insl
imul
jno
loopne
test
enter
scas
cmp
inc
insb
imul
subb
ds
mov
add
push
xchg
jne
xor
mov
adc
rcll
imul
adcb
jo
or
mov
outsb
and
dec
cmp
addr16
sbb
or
sbb
inc
sub
add
test
movsb
inc
cltd
mov
aam
loope
addr16
and
xor
shll
sti
mov
inc
sbb
cmp
int3
xor
call
xchg
mov
ret
lret
dec
mov
mov
xor
aad
inc
jo
scas
lret
sbb
cld
stos
ret
lds
mov
add
dec
and
jns
daa
inc
aas
dec
int
mov
dec
mov
out
movsl
rolb
outsb
movsb
nop
lcall
cmp
rcl
fsub
ret
pop
enter
mov
repnz
and
sub
popf
test
push
popa
and
mov
adc
lds
cwtl
inc
sub
sbb
xchg
loop
je
rcrl
int
cld
jo
fiadds
decb
cmp
scas
inc
adc
imul
mov
ret
push
or
pop
push
lds
sbb
adc
popf
pop
fstps
ds
cwtl
mov
int
loopne
sub
and
cmpsl
inc
gs
or
push
mov
into
push
addr16
js
push
cltd
je
cmp
cmpsb
fisubrl
pop
lret
jno
cld
scas
cmp
mov
mov
aas
pusha
inc
mov
shlb
add
jbe
pop
mov
and
add
stos
lahf
outsl
aam
xor
and
mov
dec
sub
fcmovu
imul
mov
sub
shll
movsb
add
push
cmpsb
xchg
outsb
or
mov
add
jle
fisubrl
cli
adcl
aad
arpl
les
jp
adc
aam
aas
dec
hlt
add
sub
scas
gs
xchg
das
repz
pop
insl
or
shrb
pop
mov
push
inc
aaa
jbe
inc
dec
jl
loope
movsb
iret
stos
xchg
loope
dec
xchg
js
xor
movsl
dec
mov
js
inc
jne
sbb
insb
pushf
push
js
in
mov
push
xor
imul
xor
jp
pop
xchg
inc
adc
cmovg
repnz
add
daa
sti
cmp
les
int3
push
or
into
cmp
gs
std
jg
sahf
mov
js
movsl
xor
es
sbb
push
and
lock
test
test
and
mov
lea
daa
fdivl
jnp
pop
add
pop
inc
int3
fwait
mov
xor
cmp
sub
rcrb
std
movsb
fbstp
xchg
cltd
in
pop
cmp
jo
and
setg
push
fwait
xchg
imul
add
push
fldcw
dec
dec
jb
fwait
inc
add
mov
arpl
sub
mov
inc
nop
sbb
xchg
fsubp
inc
mov
jae
test
fcomp
fbld
pop
repz
clc
sub
fsubl
or
mov
fnstenv
dec
das
pop
insb
movsb
add
xor
xchg
sub
out
outsl
cmc
pop
mov
outsl
add
loope
inc
gs
gs
fldl
fnsave
adc
mov
lahf
ret
cmpsl
enter
insb
icebp
cs
dec
andb
int3
loop
aam
out
mov
jae
xor
lods
jmp
and
shll
xor
adc
xor
cmpsl
mov
cmpsb
stc
int3
push
jl
cmp
jmp
or
pop
out
fwait
dec
sbbl
in
adc
les
ja
pop
dec
xor
mov
icebp
jmp
push
pusha
jge
push
sbb
push
push
fldl
xchg
xchg
dec
and
mov
cld
push
mov
clc
push
aaa
sti
popf
xchg
insl
clc
push
sbb
out
pop
pmaddwd
int
push
pop
inc
call
stc
jnp
ret
add
sub
in
dec
pop
jne
xchg
out
adc
stos
add
jno
or
sub
imul
xchg
addr16
sub
cld
inc
jo
frstor
and
es
push
adc
test
pop
in
in
pushf
or
scas
mov
shlb
inc
sub
xlat
xchg
xor
push
xor
notb
mov
mov
jo
push
arpl
mov
jb
leave
jmp
imul
fistps
insb
xchg
movsb
dec
and
pop
fwait
add
in
adc
pushf
mov
push
insb
xchg
adc
sbb
mov
cmp
pop
add
xchg
daa
mov
repz
hlt
mov
ss
cmp
int3
xchg
mov
addb
xchg
ret
pop
push
jmp
xor
mov
push
xor
iret
int3
bound
clc
xchg
ss
pop
xor
dec
mov
mov
in
fnstsw
jmp
dec
mov
call
and
cs
cmovno
push
push
js
pusha
jg
push
pop
ficompl
shll
jne
clc
mov
sti
cmc
loope
lock
mov
mov
scas
dec
es
rcr
mov
push
xchg
xchg
pop
mov
gs
push
lds
sbb
pop
movsl
adc
in
xor
fcomps
movsb
dec
or
xor
notb
out
mov
ret
fs
jo
out
jnp
add
dec
daa
lock
mov
leave
adc
jae
jo
movsb
sahf
inc
mov
out
dec
jle
rclb
in
adc
push
cmp
imul
dec
push
jne
mov
and
xchg
repnz
lret
xchg
push
cmpsl
pop
outsl
xchg
push
sub
in
mov
test
jg
std
xchg
ds
int
xchg
dec
inc
es
mov
pop
sahf
pop
and
or
mov
pushf
cli
mov
repz
scas
out
cmpsl
inc
jae
xchg
inc
bound
je
inc
movsl
repnz
addl
cmp
out
and
test
xchg
add
insl
sub
add
sub
jno
fcmovnb
fwait
sub
nop
ficoml
hlt
ret
add
pusha
andl
sub
movsb
adc
das
xor
mov
pop
push
aam
movsb
xchg
sub
outsl
push
lret
mov
dec
loop
icebp
inc
cmpsb
idiv
test
fbld
iret
enter
aad
push
xchg
mov
or
or
sub
add
aad
mov
xchg
dec
dec
xchg
cmc
imul
pop
mov
or
xlat
push
cmpsb
mov
daa
addr16
pushf
fwait
insl
fmull
fsub
cmp
adc
push
int
sahf
loopne
pusha
in
sub
mov
div
dec
lods
inc
sub
mov
ret
cmpsb
ja
pop
mov
incb
imulb
idiv
test
std
push
jo
mov
mov
inc
cmpsb
jne
sbb
or
outsb
call
mov
sahf
pop
inc
push
clc
call
aaa
test
in
inc
or
pusha
movsl
insl
scas
hlt
sbb
cmp
sub
clc
addl
je
test
adc
and
inc
ret
test
ja
fmuls
mov
or
adc
out
xchg
call
and
cmpsl
dec
mov
and
fldt
fistpll
nop
push
jno
sub
mov
cmc
inc
dec
mov
rorl
cld
lret
and
dec
xchg
sbb
push
xchg
fstps
mov
cmp
int
sbb
adc
nop
pop
jbe
cmp
div
cmp
dec
fwait
or
leave
lods
out
inc
or
pop
enter
cmp
inc
push
ret
mov
lcall
mov
or
fndisi(8087
jae
fcmovb
icebp
insl
mov
test
add
cld
test
fidivrs
sub
fwait
sbb
movsb
push
ficoml
xchg
adc
cmp
lods
push
inc
jecxz
xchg
je
cmp
adc
sbb
xor
and
inc
add
push
adc
int3
mov
adc
in
mov
sub
inc
icebp
push
lods
cli
cmovo
cmc
mov
loope
fadd
cmc
mov
adc
dec
mov
push
sbb
mov
mov
cs
sub
push
movsb
sti
scas
movsb
jo
pop
xchg
addl
outsb
adc
xor
popa
mov
pop
adc
xlat
fsubr
dec
xor
std
pop
fsubrs
and
pop
sub
outsl
into
cmp
lods
push
mov
loope
jb
movsb
insb
add
inc
pop
in
fnstcw
nop
repnz
out
call
mov
mov
xchg
scas
nop
sbb
cmpsl
imul
push
outsl
jae
sub
out
sub
nop
in
or
jmp
or
inc
out
stos
xchg
in
cmp
dec
jl
icebp
push
xchg
push
faddl
inc
cmpsl
jl
jbe
jg
int
in
in
rcrl
test
and
adc
push
inc
inc
mov
in
push
lret
aad
jmp
mov
pusha
mov
dec
mov
clc
dec
enter
cli
adc
cmp
jle
pop
and
fldl
pop
inc
add
ja
hlt
cli
aam
jb
sbb
cmp
cmp
xor
push
cmp
pusha
sti
jo
push
repnz
imul
add
popf
jbe
stos
mov
push
int3
jecxz
sahf
adc
imul
loopne
mov
push
adc
inc
divb
push
mov
mull
dec
fucomip
scas
jmp
call
shlb
push
lods
sbb
xchg
xchg
jp
xchg
xchg
adc
test
pusha
sbb
jb
mov
push
xchg
mov
xor
push
int3
clc
fistl
scas
into
cmp
test
xchg
sbb
push
and
mov
jns
or
pop
mov
cmp
hlt
xlat
addr16
iret
clc
sbb
arpl
or
sub
fwait
and
push
xor
mov
sub
lahf
in
fisubrs
clc
xor
loop
mov
mov
mov
xor
lods
lcall
cli
mov
or
loopne
inc
pop
push
adc
cmp
pushf
das
cltd
xchg
cmp
xor
adc
inc
mov
mov
cmc
inc
mov
pop
ljmp
movsl
jo
inc
scas
iret
in
repnz
or
dec
iret
int
shll
fists
stc
lds
rclb
cmpsb
sahf
mov
inc
adcb
sbb
jmp
push
cmp
lcall
cmp
pusha
jne
gs
pop
xorl
dec
loopne
call
fcmove
in
sar
mov
out
mov
popf
add
mov
imulb
jp
stc
mov
outsb
test
addr16
mov
pop
lahf
cmp
mov
cmp
fiadds
sub
sub
push
pop
mov
sbb
lods
and
sahf
xor
mov
je
int3
data16
cmp
in
test
and
frstor
jmp
dec
shlb
clc
call
xor
pop
mov
xchg
pop
cmp
leave
jne
out
pop
mov
push
ret
cli
mov
cmpsb
das
arpl
dec
insl
fildl
or
add
push
lret
adc
jmp
inc
cmp
fmull
out
mov
or
cmp
ret
and
fcmovu
and
outsb
cmpsl
push
outsb
ret
xchg
push
jns
xchg
push
inc
push
add
aam
mov
dec
adc
jo
cmp
std
lods
pop
and
mov
or
push
xchg
push
clc
mov
jbe
lea
xchg
lret
push
fistps
sub
sahf
inc
inc
testb
mov
out
gs
ss
dec
mov
in
gs
sub
aad
mov
test
jne
xchg
repz
fdivrl
push
popa
lret
pusha
add
sbb
mov
xchg
loope
das
mov
out
mov
ljmp
sub
pop
dec
jbe
sahf
or
lcall
push
mov
sub
or
inc
int3
rcr
xchg
js
push
cmp
xchg
sbb
rorl
lods
push
out
pop
les
loopne
lods
pop
push
xor
shll
aad
lret
test
mov
inc
push
data16
addl
mov
push
mov
loop
sub
scas
jnp
insb
ffreep
shll
lahf
in
add
sub
mov
and
clc
and
ljmp
jno
adc
in
mov
nop
jbe
and
sub
in
aaa
inc
add
inc
shll
or
fstpl
mov
and
test
dec
xlat
sar
xor
sub
xor
loop
mov
ja
sub
xchg
sub
push
pop
mov
aad
add
sbb
in
and
push
mov
in
inc
aaa
add
sti
shrl
mov
mov
and
enter
jns
sbb
dec
adc
push
cmpl
clc
sub
stos
outsl
dec
fxch
adc
mov
xchg
mov
and
pop
insl
fistps
xchg
jmp
jnp
jmp
fiadds
pop
xchg
dec
leave
xor
adc
test
push
pop
or
sar
icebp
mov
jg
fdivrl
add
push
lock
lock
pushf
add
cmc
or
les
mov
lret
jmp
dec
data16
jl
mov
or
mov
lods
loop
push
push
dec
cmp
dec
mov
fs
xchg
sarb
or
sahf
mov
popa
test
mov
cltd
xchg
mov
rclb
adc
mov
cltd
or
cli
dec
js
nop
fsqrt
in
cltd
test
pusha
shl
inc
loopne
mov
out
sub
addl
xchg
dec
stos
lock
fisttpl
jmp
je
cmpl
add
cltd
into
xor
cmp
push
and
jl
lods
or
sbb
test
mov
inc
ljmp
mov
xchg
arpl
mov
jbe
push
fwait
mov
sub
xor
scas
xor
xchg
in
andb
es
xchg
sbb
shlw
arpl
push
pop
clc
movsl
or
fsubs
or
stos
add
out
adc
mov
arpl
push
popf
imul
inc
mov
add
inc
adc
loop
in
mov
mov
adc
arpl
lods
inc
mov
add
or
enter
jecxz
mov
push
aam
sub
gs
int3
movsl
add
cmp
adc
inc
xchg
int3
sti
or
xchg
pop
movsb
outsl
dec
and
push
stos
lea
push
stc
lock
test
es
test
adc
ficoms
scas
outsl
push
sub
mov
pop
xchg
or
ficoml
and
xor
pop
es
std
mov
bound
hlt
xchg
mov
mov
fs
cmp
stos
mov
hlt
fs
cmp
out
push
jae
imul
pop
dec
add
sarb
sub
and
inc
mov
lret
divl
pop
std
ret
xor
inc
mov
fcoms
fucom
into
fisubs
sub
roll
mov
out
push
mov
mov
sbb
push
cmp
dec
divb
sbb
add
mov
rcl
push
push
jns
pop
in
popf
in
lahf
add
lods
xchg
dec
mov
ret
or
ss
in
cli
jo,pn
pop
lahf
pop
icebp
xor
sub
push
test
push
mov
aad
lds
mov
inc
icebp
xchg
xor
xchg
dec
xor
sbb
or
pop
mov
pop
add
sub
xchg
lea
ret
lds
jbe
outsl
cwtl
mov
rcrb
mov
or
jge
ds
std
fs
or
inc
pop
pusha
cld
insl
out
push
sbb
fists
sti
repnz
lods
push
out
push
in
loopne
nop
imul
cld
add
ds
cld
sbb
xor
outsb
push
dec
inc
xlat
push
fdivs
in
sbb
jg
jne
ss
shrl
std
mov
fnstenv
jge
je
adc
pop
jae
clc
dec
xor
outsl
out
dec
sti
fwait
sbb
pop
inc
mov
aam
shrl
fdivrl
pop
sub
stos
jns
mov
test
mov
xchg
ljmp
and
mov
inc
cld
popa
orl
int
and
clc
sbb
fsubrs
cs
jmp
ds
fistpl
mov
jp
mov
rorb
push
into
addr16
pop
call
pop
out
sbb
or
out
jae
lods
fsubs
icebp
mov
xchg
push
popa
mov
pop
fcomi
cmp
push
mov
out
jns
gs
leave
push
and
inc
adc
aad
adc
rcl
fstl
sbb
sub
mov
jno
mov
adc
jecxz
fisubl
out
stos
flds
sbb
shl
xchg
cmpl
fwait
inc
sub
adc
mov
popf
lret
or
add
lock
inc
sub
sti
xchg
push
out
mov
and
push
stos
fstps
push
mov
ficoml
cwtl
ds
xchg
mov
clc
xchg
xor
bound
jae
pusha
cmp
aas
orl
movsb
cmpsl
xchg
cwtl
mov
mov
or
rcrl
dec
repz
imull
out
addr16
outsl
enter
lock
adc
out
in
cmp
push
or
aad
push
and
cmp
push
pop
or
xchg
inc
and
cli
fiadds
ret
mov
inc
movsb
scas
cmp
xchg
rcl
loope
mov
lds
pop
jb
inc
call
mov
add
ja
cld
in
mov
mov
push
ret
xor
mov
out
xchg
das
test
icebp
mov
rorb
mov
ja
ret
in
xchg
mov
lods
push
mov
sarl
sbb
mov
mov
in
xlat
popa
xchg
push
cmp
nop
pop
lcall
push
mov
insb
mov
movsl
jmp
and
cld
xor
mov
stos
nopl
and
mov
das
pop
adc
cmpsb
out
in
fs
decl
mov
adc
imul
or
and
lea
sub
pop
fdivr
cmp
and
shlb
outsb
cwtl
and
mov
aam
pop
mov
loope
push
pop
loop
pop
iret
scas
hlt
in
jmp
insb
test
or
pop
adc
lods
not
fwait
adc
inc
add
lock
sub
jmp
dec
lret
and
js
stos
notl
mov
adc
stc
push
sbb
ret
mov
add
dec
fidivrs
dec
mov
xor
lret
cli
scas
into
pop
fst
mov
popf
test
fisubrs
jl
pop
jnp
xor
inc
bound
or
xchg
mov
mov
mov
push
mov
pushf
mov
test
int
cmp
sub
xchg
mov
or
pop
lret
sahf
movsb
dec
mov
inc
repnz
movsl
mov
dec
loopne
xchg
pushf
jge
fsubs
aas
push
mov
mov
push
mov
pop
mov
loop
mov
xchg
mov
in
xor
fbstp
dec
mov
push
xchg
push
inc
dec
mov
ss
loop
scas
mov
movsl
push
repnz
dec
jle
addr16
lods
and
pop
aaa
lahf
mov
popf
xor
icebp
cwtl
add
sub
mov
mov
mov
lods
negb
dec
cmpsb
jo
add
dec
add
mov
daa
mov
sub
leave
cmp
enter
pusha
enter
xor
dec
out
mov
nop
enter
aas
jp
jns
push
dec
call
adc
jno
dec
adc
stc
mov
sti
rcrl
push
jno
add
xchg
xchg
push
lods
mov
ja
xor
test
enter
xchg
sub
cli
repz
pop
dec
movsb
cmp
xchg
push
vmovd
push
sbb
add
sub
inc
sub
add
cmp
xchg
sti
hlt
inc
mov
mov
jae
cmpsl
or
jle
sbb
and
out
lods
add
mov
cmp
data16
loope
fwait
push
or
xlat
enter
fnsave
in
push
pop
imul
shrl
dec
filds
dec
pop
fistl
fwait
int
jg
push
pop
xchg
mov
mov
pop
add
mov
test
jle
jecxz
pop
xor
ja
rcr
mov
in
add
in
lds
loop
stc
xchg
or
cmp
stc
into
in
stos
out
push
push
xchg
dec
mov
in
sub
lret
adc
sbb
fs
push
subl
aas
jecxz
or
cmpsb
dec
inc
pop
fwait
jecxz,pn
mov
sbb
push
nop
sbb
fs
loop
loope
andl
les
jg
stos
inc
mov
out
pop
add
xchg
stos
jmp
xchg
decl
cmp
mov
mov
add
loop
mov
adc
daa
in
mov
cwtl
outsl
push
and
sub
mov
in
inc
dec
jmp
jge
cmc
jmp
popl
cltd
movsb
mov
xor
out
mulb
sbb
jns
mov
jne
jae
mov
dec
sub
cli
popa
xor
push
add
cmp
out
imulb
and
xor
mov
mov
push
imul
aaa
xchg
push
loope
cs
jge
jp
icebp
stos
xor
cmpsl
imul
out
shll
pushf
push
or
xor
mov
mov
aad
cs
or
or
pop
mov
jp
push
cmc
dec
ja
test
lods
out
out
aas
fldt
popf
xor
lea
rcrb
or
inc
mov
push
adc
adc
cld
scas
scas
loope
daa
lret
scas
ret
mov
or
mov
cwtl
or
fstpt
sbb
ret
jmp
arpl
inc
dec
pop
ljmp
push
xor
out
xchg
pop
adc
xchg
adc
ret
cmpsl
lahf
lods
jo
adc
insb
mov
pop
sbb
jno
cmp
sarl
push
aaa
lcall
push
dec
mov
enter
and
jp
rcrl
mov
pop
aaa
andb
and
cs
movsb
pop
inc
repnz
jmp
hlt
pop
dec
xchg
adc
and
pop
subl
dec
mov
jge
clc
mov
sub
mov
mov
xor
movsb
fstpt
sbb
cld
bound
in
shl
je
cmc
lods
enter
cmc
mov
sbb
addr16
stos
inc
cmc
test
repnz
sbb
mov
cs
les
mov
mov
pop
test
es
test
and
jge
pop
jb
mov
fistps
rcrb
inc
aaa
out
mov
movsl
mov
pop
mov
mov
add
mov
jge
imul
repnz
mov
mov
jno
adc
dec
pop
mov
push
mov
imul
jle
outsl
or
out
pop
and
ljmp
repz
cmp
push
call
and
push
fs
imul
jns
add
loop
cltd
push
lcall
cmpsl
sub
jge
out
repz
jmp
xor
sbb
xorb
sub
int
push
call
push
insb
mov
shr
call
mov
cmc
pop
cwtl
inc
mov
sub
xchg
push
addr16
dec
test
add
int
in
int3
pop
movsl
popf
jne
dec
push
lods
mov
mov
sub
adc
sub
outsl
mov
mov
dec
iret
in
jp
push
loopne
mov
outsb
repnz
imul
mov
xor
inc
hlt
sub
pop
js
gs
dec
push
test
mov
decl
adc
test
or
mov
fs
inc
xchg
mov
xchg
lcall
mov
or
sbb
adc
jbe
jecxz
xchg
push
mov
xchg
les
orl
popf
mov
push
cli
rep
movsb
xor
xor
push
mov
sbb
push
fwait
pop
das
jmp
dec
les
sub
insb
sub
ja
cmp
mov
adc
xchg
in
adcl
sbb
pusha
cmpl
or
movsl
enter
cmp
or
cli
movsl
cli
inc
mov
sti
enter
lods
adc
or
mov
scas
mov
das
mov
out
cwtl
pop
jle
pop
xchg
sbb
imull
push
pushf
sub
fmuls
jg
mov
mov
xchg
mov
gs
fidivrs
inc
shrl
cmpsb
loopne
push
scas
cmp
cld
sti
push
push
loopne
daa
inc
ljmp
mov
cli
jge
sub
jo
shll
adc
cmpsb
shrl
pop
bound
cmpsl
aad
pushf
js
icebp
jns
or
jns
jns
je
test
movsl
mov
mov
xor
sbb
xchg
es
sti
or
lea
mov
xchg
sbbl
push
cmp
jge
pop
pop
fmull
jle
imul
or
into
lahf
xchg
or
aam
stos
das
pop
cmp
dec
xor
pop
mov
mov
pop
scas
icebp
dec
ja
jle
mov
fwait
pop
lcall
or
sti
in
sbb
dec
insb
push
push
push
insb
cmp
adc
std
mov
lahf
ret
rcll
test
orb
sti
jbe
out
push
int3
lcall
push
test
nop
push
loop
shlb
popf
mov
or
lret
mov
jmp
add
mov
add
in
popf
icebp
jle
subb
shlb
xchg
aaa
sub
cmp
lahf
dec
add
bound
add
fadds
int3
iret
ret
mov
mov
leave
stos
rcr
adc
adc
leave
addr16
into
and
add
aaa
or
cmp
and
insb
mov
aaa
mov
cmc
negl
pop
out
xchg
or
dec
aam
xor
stc
cmp
negb
pop
fs
or
sub
lahf
mov
or
hlt
cmp
pop
lret
mov
inc
xchg
cli
outsl
add
xchg
mov
insl
loopne
dec
mov
xlat
clc
lahf
pop
dec
xlat
das
cmpsl
in
rclb
call
mov
xchg
jg
hlt
mov
push
lcall
add
pop
lods
push
test
in
mov
push
fildll
pop
je
mov
mov
and
xchg
push
add
aad
lods
ret
out
dec
in
or
jo
cmp
mov
movsl
pushf
cltd
int
mov
outsb
push
sahf
and
jbe
push
insl
repnz
cmc
orl
sub
repnz
into
notb
stc
adc
in
dec
fstl
pop
call
mov
in
fldt
adc
lret
loopne
lret
mov
push
pop
add
cld
inc
ret
adc
pop
movsb
lods
inc
mov
jmp
cmp
in
insb
xchg
leave
adc
mov
push
shl
leave
mov
xchg
cmp
cmc
and
cmpsb
mov
sbb
scas
je
cmp
sbb
lret
sarb
out
std
xor
in
insl
pop
jae
add
mov
xchg
inc
mov
leave
add
xor
scas
and
stos
sub
fs
adcl
iret
popf
ror
push
rorl
std
pop
push
adc
adc
mov
sbb
cld
rcrb
fs
test
jmp
in
fwait
dec
or
popf
test
mov
pop
negl
or
sub
idiv
aaa
fdivrp
or
aaa
add
fistpll
xor
jns
je
xchg
pop
pop
jmp
sar
hlt
mov
adc
xor
imul
jno
lret
dec
push
mov
inc
in
and
lcall
mov
jno
and
xor
lods
lahf
stos
arpl
lcall
pushl
mov
fldl
les
inc
ror
push
jae
jmp
sbb
dec
shll
inc
push
sbb
pop
pop
push
in
cmpb
xor
in
pop
std
enter
arpl
jg
cld
mov
dec
inc
pop
adc
je
push
and
inc
leave
imulb
ja
cmp
lret
cmc
push
sbb
cmp
mov
decl
cld
mov
xor
daa
std
andl
add
fsubl
je
xchg
in
jns
xchg
jb
cmp
div
push
jp
fisttpl
cmp
pop
mov
fs
in
shrb
inc
lret
push
sub
ret
xchg
int
vmovups
aad
push
jmp
mov
inc
nop
and
inc
xor
adc
jmp
jne
pop
mov
push
sbb
aam
sub
leave
inc
scas
popa
out
cmpsb
imul
sub
fdivl
leave
lret
insb
sti
ret
mov
sbb
adc
fimuls
sbb
xor
sub
stos
outsb
aad
arpl
stos
cld
sbb
dec
ror
addr16
cmp
pusha
mov
fsubs
cmpsl
pop
loop
inc
lcall
xchg
je
cs
fwait
mov
sub
xchg
mov
and
push
mov
add
jecxz
sti
ficomps
cmc
cmp
in
in
cwtl
inc
cmp
xchg
or
lods
and
xchg
and
loop
int
fcompl
fcmovne
pop
push
mov
mov
std
fbstp
inc
xor
mov
inc
add
cmc
out
rolb
push
mov
push
cmpsl
cltd
pop
idiv
pop
loope
dec
dec
les
lret
inc
pop
or
jmp
call
or
data16
push
xchg
dec
gs
negb
or
pushf
cmp
push
clc
gs
pop
and
mull
cmpsl
repnz
ja
pop
movsb
cmc
sbb
jae
inc
clc
aas
add
cmpb
sarb
cmp
sbb
cmp
jb
gs
mov
clc
mov
cli
lret
rcrl
js
cmp
mov
enter
mov
adc
loop
sbb
movsb
pop
pop
xor
mov
incb
fimull
iret
sar
sahf
iret
lret
pusha
push
inc
mov
popf
sti
push
pop
insl
jnp
mov
ja
inc
lock
jmp
xlat
into
insb
fs
int3
add
jle
shrl
xchg
test
insb
mov
jo
adc
lock
jno
adc
add
or
das
leave
jmp
fwait
inc
add
jno
mov
mov
es
mov
cmpsl
ret
sahf
adc
adc
clc
pushf
jle
incb
frstor
aaa
dec
mov
pop
push
test
xlat
push
ret
xlat
in
lds
stc
iret
adc
stos
ficoms
and
cltd
adc
push
mov
loopne
lahf
mov
fistpl
sarl
sti
ja
ss
and
pop
add
dec
xchg
dec
ss
xor
xor
vpaddsw
or
out
lock
mov
mov
cmpsl
mov
pop
mov
inc
sbb
pop
aas
mov
adc
add
fnstcw
add
add
mov
jno
cld
inc
dec
or
and
test
aas
pop
mov
mov
jnp
adc
cmpsl
bound
xchg
adc
fcoms
jp
jp
ja
dec
jb
push
das
mov
inc
and
sbb
xor
inc
fwait
cli
or
repz
cli
negl
in
inc
aaa
dec
or
lret
ljmp
and
sbb
cwtl
cmp
cld
mov
cwtl
xor
inc
fs
shlb
xchg
cmp
into
mov
sahf
jne
cmp
cmp
in
mov
pop
xchg
int
add
mov
sbb
lcall
ret
jge
xchg
and
enter
xor
add
pusha
out
adc
cmp
test
aaa
inc
sub
cmp
arpl
xchg
mov
addr16
jns
scas
mov
leave
and
movsl
repnz
mov
mov
inc
adc
popf
leave
and
sub
dec
test
nop
dec
mov
lods
repnz
push
xor
mov
inc
dec
inc
icebp
ss
mov
lock
jp
arpl
inc
pushf
das
cmc
data16
std
mov
sub
xor
push
test
jg
mov
push
cmpb
out
je
dec
fcoms
icebp
or
orb
mov
xchg
push
add
adc
enter
daa
cmp
xchg
insl
push
xchg
push
sbb
and
sub
sub
jmp
repz
add
and
test
xlat
int3
jmp
mov
fsts
xor
mov
rclb
sub
call
cmpsb
shrl
mov
aaa
outsb
pop
ss
in
lret
mov
scas
pop
cmp
in
add
push
fnstenv
loop
push
lds
out
xchg
fidivs
scas
mov
addr16
shrl
pushf
push
push
int
lods
cs
pop
outsb
push
fwait
mov
es
leave
clc
push
mov
sahf
mov
stos
lahf
sbb
jecxz
shlb
mov
xor
push
es
mov
cwtl
in
mov
pop
push
adc
cmc
cmp
fsubrl
bound
or
sbb
std
outsb
cmp
sub
fsubl
ja
mov
adc
sbb
inc
cli
lret
jmp
pcmpgtw
lea
imul
jmp
jmp
mov
jmp
lea
arpl
fdivrs
or
mov
and
lcall
xchg
in
mov
in
adc
push
lock
divb
jmp
mov
dec
push
xchg
mov
inc
leave
rcr
js
inc
fsts
dec
test
leave
and
adc
sub
mov
pop
scas
js
add
pop
mov
jmp
pop
in
xchg
pop
lods
jmp
dec
push
sbb
addr16
das
add
adc
fmull
adc
jno
fistpl
insl
ret
inc
out
xchg
outsb
push
leave
movsb
jmp
int
sbb
scas
mov
icebp
and
mov
add
add
shrb
sbb
push
out
mov
sbb
push
push
jp
dec
xchg
jns
out
adc
shlb
xchg
testl
cmp
mov
jnp
pusha
aam
jb
outsl
dec
in
lret
mov
jge
sub
add
cmp
add
loope
mov
into
jp
outsl
push
xchg
icebp
mov
lea
cmp
push
arpl
inc
inc
sub
dec
push
sub
mov
xchg
pop
stc
mov
xchg
inc
mov
inc
push
pop
add
xor
lods
mov
and
xor
sub
or
adc
mov
loope
adc
xor
stos
or
hlt
outsl
outsb
lret
movsl
shlb
mov
repz
xor
aaa
push
dec
jmp
cli
stc
sub
mov
xor
dec
jne
push
mov
mov
dec
sub
sub
jmp
ds
jle
lret
cwtl
mov
jle
push
mov
or
xchg
sti
les
jmp
push
xchg
cmp
or
stos
outsl
xchg
xor
pop
sbb
xchg
popa
or
xchg
jl
sbb
push
mov
dec
xor
clc
idivl
test
sbb
std
xor
dec
daa
xchg
push
popa
aam
adc
loope
aam
pop
bnd
mov
sub
mov
mov
sub
and
shrl
push
inc
ss
std
inc
ss
test
xorb
mov
sahf
xor
movsb
adc
sbb
ds
insb
xlat
cmp
mov
inc
add
mov
or
xor
xchg
push
in
mov
push
dec
insb
mov
sahf
test
sub
ret
dec
xchg
and
mov
test
inc
outsb
or
xchg
rorl
ss
or
mov
shrl
insb
cmp
mov
movsl
popf
es
mov
mov
inc
mov
sarb
mov
xchg
jno
je
sub
jecxz
mov
add
popa
cwtl
cmp
test
add
adc
in
xor
sbb
or
pop
outsl
cmp
cli
push
out
sbb
imul
cmpsb
mov
sub
je
xor
out
into
cmp
sub
mov
test
loope
sbb
pop
pusha
mov
cwtl
sub
xchg
push
push
fistl
test
xlat
aas
stc
or
mov
cmp
jl
mov
orb
jbe
in
arpl
dec
adc
add
outsb
jl
adc
mov
pusha
adc
and
dec
faddl
jle
imul
add
mov
mov
xchg
mov
popf
lret
jae
or
jl
scas
adc
ret
movsl
ljmp
mov
test
inc
and
adc
movsb
xchg
aam
mov
lea
rclb
js
xlat
fisttpl
mov
pop
rcll
dec
sti
fbld
dec
sub
push
popa
lahf
and
jmp
test
incb
lods
push
movsb
pop
and
or
jbe
mov
cwtl
or
xlat
jp
leave
sbb
out
lea
or
std
outsl
pop
xlat
push
mov
int3
js
enter
clc
out
pop
gs
lret
lds
sbb
stos
sbb
les
mov
xor
push
sub
xor
mov
sub
outsb
cli
xchg
xchg
ret
xorb
rorb
jg
ljmp
cmp
into
sbb
jl
mov
cmp
ljmp
imul
push
movsb
cmpsb
in
pop
in
sbb
or
adc
jge
imul
jmp
cmp
int3
ret
mov
mov
iret
test
push
mov
cmp
inc
mov
adc
daa
pop
jle
dec
arpl
mov
mov
adc
xchg
jmp
xchg
inc
mov
mov
es
pushf
xchg
mov
add
stos
inc
sub
and
seta
cmp
lds
dec
inc
adc
mov
scas
inc
fs
sbb
dec
xchg
arpl
int
mov
inc
mov
hlt
je
mov
movsb
imul
out
insb
in
shl
add
in
push
ja
js
jg
add
mov
lock
cmpsb
inc
cmpsb
push
xor
imul
push
jmp
cmp
ret
push
push
loopne
push
sub
hlt
mov
cld
mov
movsl
inc
jnp
insb
adc
mov
in
sarl
inc
and
jmp
scas
ficoml
jno
sub
dec
fdivrs
jno
push
not
xor
jns
push
addr16
inc
hlt
push
dec
adcb
fnstsw
enter
rorw
jecxz
and
js
fwait
jnp
dec
sti
notb
mov
sahf
adc
shll
outsl
js
mov
jmp
pop
mov
sbb
push
inc
pop
pop
sbb
mov
es
push
pop
push
sub
ret
adc
pop
pusha
pushf
stos
lahf
cmp
sbb
loopne
mov
outsl
inc
jae
sbb
dec
push
cmp
int3
je
fsubrp
push
mov
clc
xchg
das
fmuls
mov
xor
popa
xor
movsb
cs
sub
or
push
xchg
out
movsb
in
push
out
or
ret
mov
ds
mov
out
sub
mov
call
jmp
data16
pop
cmc
cwtl
sbb
sbb
scas
cld
mov
adc
sub
mov
nop
pop
cmp
mov
sbb
divl
icebp
adc
dec
or
sbb
mov
xchg
insb
inc
popf
jmp
pusha
ja
mov
xchg
xchg
dec
jnp
lahf
or
jb
or
icebp
lods
add
jle
push
inc
cmc
dec
clc
xor
sub
ja
lret
xor
cmp
dec
cmpsl
mov
mov
sbb
push
mov
insl
inc
sbb
std
or
inc
adc
rcrb
xchg
dec
dec
in
push
jno
push
add
std
packssdw
adc
out
imul
sbb
rcll
mov
xchg
or
mov
jmp
or
cmc
jg
jmp
sbb
jmp
xor
jae
xor
mov
ljmp
xchg
or
shll
xchg
sub
cmp
int
clc
movhps
and
pop
inc
out
in
or
hlt
mov
fstpl
out
pop
inc
arpl
xor
outsb
fmul
mov
loopne
sub
in
mov
pop
push
add
popa
mov
movsl
xor
pop
inc
pop
pop
xchg
icebp
mov
in
popf
push
mov
inc
sahf
mov
imulw
inc
add
sub
imull
xchg
pop
movsb
ss
test
mov
dec
fidivl
loopne
call
ss
into
xchg
inc
or
cmp
xor
mov
int
clc
push
sarb
cmp
and
pop
fldl
dec
pop
out
aam
mov
cmp
cmp
arpl
js
dec
add
push
jo
sbb
scas
imul
pop
fs
xor
and
repz
push
jge
aam
or
mov
pushf
sub
daa
and
xchg
stos
jno
outsb
inc
push
cmp
push
cmp
add
stc
xchg
imul
add
push
lea
addr16
out
sbb
jne
cld
call
push
mov
sbb
imul
icebp
sub
add
inc
jbe
cmp
int
cmpsb
adc
cmp
push
subb
sbb
xor
popa
push
out
sbb
cwtl
mov
shlb
pop
xlat
mov
fstpl
out
shll
jne
push
dec
les
sub
nop
push
fdivs
insl
daa
cmp
rolb
shrl
adc
jl
rcll
inc
mov
xchg
leave
sbb
in
call
sahf
jne
insb
cmp
out
inc
repz
mov
stos
add
xchg
pop
pop
jl
and
das
adc
mov
nop
test
or
dec
pusha
xchg
loope
hlt
xlat
sbb
ficomps
cli
mov
into
shrb
and
loope
adc
aaa
mov
movsb
call
dec
and
daa
push
aad
jg
mov
fnsave
stos
mov
test
fmuls
mov
lds
jecxz
mov
ret
cmp
cmpsb
inc
jge
pop
rcrl
pop
dec
push
popa
mov
into
stos
rol
das
repnz
movsl
cmp
lods
rcrb
push
jmp
stc
les
jae
ret
xchg
aam
push
repz
nop
jbe
dec
jl
arpl
ret
jl
imul
in
or
sti
data16
sub
icebp
cwtl
xchg
stos
fisttps
ss
xchg
ds
fstpl
test
insl
stos
popa
shll
pop
push
mov
loop
iret
sbb
mov
lret
aad
mov
test
mov
xbegin
test
push
or
lret
mov
push
sbb
mov
cmp
inc
jo
shlb
cmpsb
fdivrs
in
mov
cmpl
cmp
adc
cli
xchg
cmp
xor
shrb
shl
pop
or
and
ret
sub
mov
int
iret
jmp
icebp
movsl
fsubr
lret
cmp
cltd
in
xor
adc
inc
push
arpl
stc
add
repz
pop
pushw
mov
xchg
sub
jne
and
shrb
lods
pop
or
jle
mov
push
clc
inc
fidivs
out
jo
in
out
test
mov
lcall
rclb
je
lret
fdivrs
push
fucomi
push
add
jmp
stc
xchg
mov
mov
in
icebp
sbb
jne
xor
and
stc
fistl
and
ljmp
mov
lahf
mov
jle
sbb
mov
test
lock
sub
jg
jl
sti
add
dec
bound
out
and
xchg
icebp
ret
ljmp
jns
cmp
and
lds
andb
fistps
push
push
jno
stc
outsl
andb
std
xchg
mov
dec
out
xchg
xchg
imul
hlt
sub
filds
movsl
lcall
jle
inc
aas
pop
arpl
mov
loope
mov
dec
add
cmpsb
cld
jno
lret
xchg
ss
stc
sbb
add
inc
cmp
xchg
lods
lahf
les
int
das
test
mov
inc
outsl
push
jecxz
mov
dec
mov
mov
add
sbb
mov
pop
out
cmp
xor
xor
xor
add
data16
cmc
xchg
sub
mov
xchg
or
cmp
or
inc
pop
int
fwait
inc
pop
mov
in
fiadds
xlat
pop
jmp
mov
cmp
push
arpl
or
les
or
mov
rcl
pushf
pop
lods
xchg
mov
mov
insl
sub
jnp
loope
jmp
addr16
mov
mov
xchg
ffree
mov
cmp
mov
mov
and
mov
jne
lock
imul
rorb
dec
xor
jg
dec
xor
fs
aam
sbb
les
pop
xchg
ljmp
incl
dec
cltd
add
sbb
xchg
fadds
in
lret
loop
mov
and
ss
pop
mov
push
mov
xchg
cmp
ret
stc
icebp
lock
jp
shl
jns
and
sahf
jb
mov
shrl
pop
stos
inc
test
les
sbbb
ret
push
or
sub
jns
cwtl
insl
repnz
pop
sub
pop
cmpsb
inc
jecxz
sbb
mov
jae
mov
mov
std
or
std
xchg
addr16
and
add
aad
jmp
push
in
fsubrl
dec
inc
sbb
test
add
insl
xor
sub
cmp
cmpsl
js
lret
xchg
push
lods
xor
pop
jne
mov
xor
ss
sub
mov
sub
jp
popa
lret
stc
add
lret
aam
jp
in
movsl
sub
cmp
rclb
mov
jp
xchg
mov
cmp
clc
fdivs
pop
add
mov
cmc
push
push
iret
mov
sub
and
cld
cmpsb
les
inc
into
fiadds
stos
pop
mov
mov
dec
cmpsb
aam
stos
mov
nop
mov
jne
int3
mov
mov
cmp
stc
inc
ret
cmp
test
cmp
push
mov
sbb
fidivl
and
mov
rcll
cmp
loopne
inc
jns
xchg
mov
gs
stos
add
lcall
mov
or
jle
mov
jne
shrl
xor
aam
cwtl
cmp
pop
shrb
in
enter
sub
adc
leave
out
movsb
hlt
rcrl
ret
sbb
sub
test
mov
or
ljmp
add
pop
gs
pop
int
inc
rclb
iret
test
inc
std
pusha
pop
fwait
hlt
cmp
or
int3
cmp
jae
jp
add
test
inc
push
jge
cli
mov
xchg
xor
roll
mov
stos
xchg
lret
aam
cmp
outsb
jge
fsubr
lcall
xchg
leave
mov
jmp
adc
nop
fldenv
cmp
pusha
addl
adc
daa
mov
mov
sub
adc
ljmp
mov
inc
sbb
jae
fsub
outsb
mov
pop
int3
int3
in
fcoml
fsubr
push
xor
jge
adc
jbe
cltd
ret
sub
pop
and
jne
dec
push
pop
xor
inc
jp
xchg
jo
scas
fisubl
popa
scas
aam
daa
and
in
push
cmp
lcall
mov
inc
lret
mov
push
mov
pusha
pop
push
std
add
orb
inc
pop
jne
jl
out
push
and
mov
pop
icebp
or
xor
cltd
xor
mov
add
xchg
xchg
push
inc
sbb
cltd
push
jno
mov
sub
movsb
dec
push
jmp
hlt
adc
clc
jg
in
addr16
in
xchg
popf
std
sub
xchg
mov
out
fcoml
xchg
xor
stc
cwtl
inc
sarl
cmp
ljmp
mov
mov
mov
xchg
push
add
and
or
xlat
in
jae
pop
pusha
pop
jmp
movsb
shll
rcrl
sti
lock
imul
in
ljmp
andb
and
scas
cld
mov
das
cltd
cmp
aaa
enter
jnp
adc
xchg
jb
and
sub
adc
jg
mov
cmp
xchg
fsub
loop
in
and
test
lcall
fnsave
loope
jmp
inc
std
ss
dec
sbb
repz
pushf
stos
inc
sub
pop
sbb
lods
sub
sarb
sub
inc
pusha
inc
xchg
sbb
outsb
popf
pop
out
mov
out
fwait
mov
and
inc
repz
je
sbb
sbb
test
pop
test
jo
inc
loop
sahf
out
out
pop
test
pop
shll
dec
and
jnp
sub
aaa
inc
sti
inc
jbe
or
push
jo
ja
xchg
pop
in
cltd
sbb
into
mov
outsl
sub
popa
push
push
mov
mov
dec
sbb
cmp
cmp
imul
inc
adc
mov
and
sti
inc
fcmovne
in
push
mov
dec
sbbb
cwtl
in
xchg
testl
inc
aas
mov
sbb
sub
jg
mov
push
repnz
cs
jbe
sbb
cmpsl
mov
clc
rorb
inc
push
out
popf
push
lret
xchg
mov
shll
sub
xchg
call
mov
cmp
lea
mov
outsb
subl
fdivrp
std
filds
xchg
data16
and
cld
add
cld
mov
fs
cmp
sbb
push
jge
pusha
jecxz
adc
or
into
mov
adc
icebp
xor
push
jo
std
inc
inc
pop
int
dec
push
dec
shl
pop
lret
lret
mov
pop
jl
inc
lods
xchg
push
lds
dec
enter
stos
loop
xor
in
loopne
ljmp
dec
mov
incb
insb
data16
jecxz
cmpsl
inc
add
les
fisubrl
mov
inc
pop
lea
testl
and
mov
jmp
lcall
pop
jbe
outsl
test
mov
scas
lret
ss
add
popf
dec
sti
daa
jle,pt
jge
adc
push
stc
xchg
mov
cltd
adc
out
roll
mov
xchg
sbb
mov
sbbb
orb
fcomip
add
insb
rorl
sub
xor
sarb
ss
mov
xor
sub
inc
ror
mov
sub
clc
jo
fwait
mov
cmp
ds
or
mov
xlat
or
cmpsl
loope
insb
call
ret
or
int
in
jnp
pop
test
cli
sbb
dec
push
loop
data16
pop
sti
jnp
hlt
std
add
or
sbb
add
mov
andl
outsb
sahf
inc
outsb
or
adc
fsubp
in
sbb
cmp
sbb
jp
popf
out
cli
xchg
mov
push
mov
xor
mov
adc
test
daa
push
pop
bound
aam
in
rorl
mov
mov
push
jns
jae
stos
pop
sub
mov
xchg
scas
xor
mov
mov
xor
push
das
cmp
xchg
sti
gs
leave
inc
test
jbe
dec
xchg
jo
xchg
adc
push
lds
out
cmpsl
gs
div
mov
jbe
loop
mov
sub
xchg
test
fstl
or
and
rcrl
xchg
mov
lahf
int3
ja
or
mov
bound
lock
cwtl
and
clc
cmp
push
or
lods
xchg
fwait
push
out
pop
out
cltd
push
enter
sub
sub
fsubr
test
push
les
dec
loopne
jb
lods
in
pusha
sti
fstpt
push
scas
sti
add
pop
imul
inc
push
mov
stos
ret
ss
adcb
fldl
jle
push
xor
ljmp
mov
mov
int3
inc
xchg
ljmp
addr16
xchg
ss
push
mov
xor
hlt
test
stc
lds
mov
into
jg
cmpsb
sbb
dec
data16
ss
cmp
dec
sbb
repnz
leave
ret
clc
das
sbb
mov
test
xchg
test
lods
loop
mov
fnstsw
mov
cld
pop
xor
inc
scas
hlt
xchg
add
mov
addr16
pop
pop
mov
jnp
mov
das
adc
and
fcomip
mov
cli
sub
loope
mov
pop
mov
movsb
cmpsb
scas
sbb
jl
push
xchg
nop
pop
push
dec
xor
add
nop
cmp
pop
into
jle
xchg
rol
outsb
lret
dec
aam
push
lahf
or
outsb
clc
mov
mov
inc
sbb
fstps
sbb
xorb
adc
dec
dec
pop
ffree
scas
icebp
push
aad
in
pushl
loopne
les
notl
dec
in
xchg
mov
inc
repz
mov
std
cmp
jne
pop
sbb
movsl
push
sub
subl
add
mov
xchg
pop
cli
int
mov
xchg
ret
and
dec
dec
scas
test
repnz
test
js
gs
and
sti
sbb
push
cld
daa
or
filds
jno
in
mov
out
enter
jns
pop
jns
iret
add
fcompl
mov
mov
pop
inc
lds
inc
sahf
and
add
sbb
fcmovne
xor
cmp
mov
daa
push
dec
not
daa
int
inc
aam
xor
mov
aaa
ret
lds
mov
aas
imul
popf
shll
inc
mov
add
gs
leave
rcll
insb
popf
sub
fidivl
inc
dec
aad
add
aad
jns
sub
std
pop
inc
jecxz
or
jno
inc
pop
rcll
lret
inc
dec
int
loopne
sub
rolb
das
ficompl
stos
mov
mov
cmc
ss
or
xlat
aaa
sub
or
cmc
imul
outsb
icebp
into
lret
or
stos
enter
pop
fstpt
mov
fdivrs
xchg
mov
mov
pushf
or
xor
mov
mov
mov
ret
cmp
jae
leave
jno
sbb
scas
adc
mov
cmp
mov
sahf
dec
add
push
mov
inc
cmc
mov
pop
loop
shrl
gs
add
sub
ss
movsb
push
out
insl
push
fcmovnb
sub
push
lds
shrb
pushf
out
adc
and
mov
fprem
mov
or
stos
cld
inc
mov
mov
out
jb
sahf
es
cmp
test
out
lods
mov
iret
xor
adc
push
cmp
jg
popa
jle
aaa
jae
outsb
dec
outsb
pushf
insl
inc
xchg
sub
mov
lea
jp
dec
jmp
aaa
out
or
dec
add
or
test
jge
push
mov
or
imul
in
inc
lods
sbb
and
stos
add
mov
f2xm1
cmp
and
loop
adc
add
or
into
out
fs
lods
out
shlb
test
mov
adc
jno
mov
mov
out
ficoml
xor
daa
imul
sbbb
push
mov
mov
cltd
dec
nop
cmc
sub
js
scas
js
flds
mov
insb
mov
adc
test
mov
jbe
stos
sbb
cmpsb
sbb
dec
clc
inc
cmpsl
fwait
adc
stos
sbb
push
mov
mov
xor
fistpl
loopne
dec
test
jne
cmp
jmp
ret
cli
push
cld
cmp
push
popa
fcmovu
sbb
xchg
in
ss
and
addb
xchg
jb
mov
push
or
repz
jns
out
push
cmp
mov
test
dec
mov
fisttps
lahf
lock
push
xor
stos
insb
leave
push
mov
mov
dec
fistps
pop
addl
in
cmp
or
cmp
gs
imul
pop
imul
and
cmc
lods
sbb
pop
jnp
cmp
aas
mov
mov
cmp
adc
xor
or
test
movsb
test
scas
cli
aaa
int3
sahf
mov
imul
addb
add
inc
xor
dec
repnz
loope
xor
push
fildl
push
out
insb
dec
pop
aas
xor
aad
mov
push
and
addl
jle
cltd
jge
daa
movsb
sub
roll
pop
mov
xchg
mov
gs
add
xor
jno
sti
sahf
jg
out
xchg
test
out
loope
psubw
lret
mov
or
push
loope
and
dec
add
subb
push
call
push
adc
pop
pop
lcall
pop
inc
sub
jp
pop
out
aas
jo
addl
negb
nop
add
repnz
aas
mov
jnp
pop
repz
sub
nop
shr
clc
ss
push
push
iret
dec
sti
inc
imul
fs
gs
jb
cld
mov
aas
sbb
cs
shlb
cmpsl
xchg
fidivl
xor
add
lods
adc
mov
cmp
jno
xchg
aas
test
roll
jae
sub
setnp
daa
mulb
push
mov
sbbl
cmp
jb
cld
jmp
cld
add
test
or
inc
std
pop
fstps
lods
ret
adc
int3
mov
inc
in
in
je
data16
jle
pop
dec
add
aaa
and
cmc
pop
das
xor
sub
daa
adc
mov
jne
jle
outsb
sbb
outsl
fdivl
xor
dec
or
ret
mov
sbb
sub
jnp
mov
pop
nop
xor
lods
xchg
adc
lret
xchg
jae
jecxz
sarl
or
add
hlt
lret
mov
mov
mov
pop
insl
and
jo
add
outsl
lock
mov
jp
lds
outsl
movsb
shrb
xor
and
inc
aad
nop
rolb
push
js
cs
xlat
dec
or
and
fsubs
cwtl
sbb
inc
in
dec
icebp
or
mov
movsb
fimuls
pusha
fstp
jl
cwtl
test
push
pop
xor
jmp
push
or
fwait
jl
pop
add
scas
and
jns
sub
cmp
std
push
movsb
pop
pop
sub
mov
mov
sub
cmp
jno
mov
mov
cmc
push
mov
out
popl
and
adc
push
mov
sbb
push
xchg
imul
sub
pop
cld
add
div
push
lret
stc
js
push
lret
pop
ret
inc
cmp
mov
or
bound
cs
sbb
add
incb
fsubrl
jne
cld
or
push
jno
dec
pushf
sub
jmp
jecxz
pop
gs
sub
jae
inc
out
orb
push
dec
das
fwait
add
fnstenv
dec
int
fdivr
sti
mov
sub
adc
shlb
test
or
inc
xchg
loop
sub
shr
and
sti
insl
sbb
mov
mov
cs
jge
test
inc
or
mov
pop
enter
mov
or
insb
ret
ficoms
or
in
pop
dec
lahf
dec
cmp
cmpsb
sahf
inc
mov
into
mov
or
out
loop
aaa
arpl
cmp
mov
movsl
push
and
inc
cmpsl
bound
in
inc
push
add
cmpsb
xchg
xchg
arpl
out
lods
cmp
arpl
test
lcall
cld
daa
push
lahf
in
adc
cmp
adc
jg
cmp
nop
pop
xchg
test
loope
xor
inc
inc
mov
xchg
insb
xchg
add
mov
sub
push
push
lret
repnz
loope
mov
mov
pop
fcoms
inc
dec
mul
pop
adc
out
xchg
pop
mov
aam
ror
mov
fwait
sub
mov
je
adcb
roll
xchg
popa
jb
xor
push
add
dec
bound
mov
cmp
or
cmp
xchg
fs
inc
ret
icebp
mov
adc
xchg
lea
shlb
ljmp
popf
cmp
mov
pusha
imul
cmc
ds
imul
ficompl
sub
sbb
push
dec
inc
mov
jl
pop
mov
jp
push
cltd
cld
loop
jmp
or
pop
add
cmp
out
mov
lahf
jb
in
mov
adc
lcall
add
pop
fdivl
xchg
scas
xor
push
add
test
adc
loopne
push
ljmp
ror
xor
fiaddl
mov
scas
int3
mov
lock
out
aaa
aaa
xor
cmp
push
outsl
and
sbb
js
add
or
xchg
adc
cmp
dec
mov
xor
ljmp
mov
push
xor
movsl
add
and
push
inc
mov
or
mov
nop
sub
push
shll
js
add
insb
scas
push
in
cmpsb
sub
repz
and
rclb
inc
xchg
clc
popa
xor
mov
shl
aam
mov
mov
aas
int3
sbb
push
xchg
jnp
aam
pop
popa
xchg
loope
outsl
mov
mov
fcoms
adc
mov
gs
jns
mov
pop
pop
stos
mov
push
mov
sub
add
dec
and
jnp
cmp
xor
jl
push
fldenv
mov
xchg
mov
or
push
jg
cmp
mov
insb
fwait
jb
ret
fwait
jo
mov
and
xchg
xchg
mov
add
or
fcoml
jae
andb
aaa
inc
mov
fisttpll
or
xor
pusha
clc
movl
xchg
fidivs
jmp
ss
adc
andb
pop
insb
cli
mov
push
mov
bound
sub
in
xchg
pop
dec
xchg
mov
iret
ficomps
jmp
dec
push
iret
sbb
loope
cmpsl
icebp
jle
loope
test
fs
cmp
pop
or
test
bound
add
or
sbb
repz
inc
and
push
mov
pop
dec
fcomps
mov
dec
mov
cmp
dec
jb
adc
cmp
mov
mov
mov
mov
pop
ja
mov
ret
jg
negl
sbb
fcmovne
stos
stos
and
add
icebp
pop
lcall
push
fsubrl
daa
in
lret
sub
scas
dec
shll
pop
inc
stos
repz
mov
pop
adc
clc
das
sub
sub
addr16
hlt
fs
incb
dec
jae
or
pop
mov
ret
mov
sarl
mov
pop
adc
outsl
mov
hlt
iret
dec
mov
movsl
stc
mov
cs
mov
sti
fimull
fldt
jae
pop
cmp
cmp
bound
mov
lret
dec
sahf
mov
jno
mov
fiadds
inc
fwait
cmpb
push
pop
pusha
mov
adcl
jmp
mov
inc
fnstcw
stc
fimull
das
notl
jmpw
test
and
repz
add
test
call
imul
xchg
or
pop
push
sub
int
imul
mov
out
js
xlat
xchg
sbb
and
jbe
nop
push
mov
ja
sub
out
cmpl
jl
bound
popa
xor
popa
fcoml
bound
and
lock
cmp
ficoms
mov
mov
xor
lahf
fxch
dec
push
imul
and
scas
lea
pushf
insb
outsl
jle
enter
roll
adc
sub
cmp
jbe
lcall
rcll
xchg
push
mov
xchg
pop
arpl
test
dec
xor
xlat
std
or
imul
xchg
xchg
cld
out
or
jle
pop
sub
jmp
or
sub
mov
ljmp
pop
fmuls
adc
mov
and
mov
cmp
insb
push
jecxz
add
sbb
cmpsl
adc
shlb
stos
mov
sub
popa
sub
inc
jns
dec
jg
push
or
cmpxchg
out
xchg
test
and
loope
aam
mov
out
filds
inc
adc
dec
sar
pop
stos
inc
or
sub
shlb
fcomp
cmpsl
xor
mov
adc
aaa
push
enter
pop
into
sbb
and
fcompp
fwait
jle
in
les
xchg
xchg
stos
loopne
sbb
repz
std
jecxz
aad
aaa
push
ret
and
fcomps
shlb
mov
push
jge
enter
in
notl
dec
xor
fucomi
stc
aam
daa
jb
add
int3
std
push
pop
das
inc
jnp
es
or
or
ljmp
rcll
push
insl
gs
and
mov
lds
stos
lcall
jecxz
xchg
fsubl
cli
sub
fcoml
lods
inc
je
stos
ljmp
mov
stos
jbe
mov
sub
test
int3
inc
lds
jp
lods
push
jge
ss
mov
shlb
jmp
shll
xor
cld
int
lret
ds
mov
sbb
rep
addr16
push
notb
rcl
nop
mov
dec
ret
sbb
ret
adc
mov
mov
aaa
jecxz
mov
lock
xor
cmpsb
xchg
sbb
jge
pop
js
icebp
imul
sbb
data16
sahf
pop
dec
repnz
pop
jae
and
sar
adc
in
add
jo
sarb
hlt
out
pop
mov
mov
int
sahf
cwtl
or
insl
xor
pop
sbb
push
loope
xchg
xlat
out
jl
aad
dec
inc
imul
push
js
push
cmp
mulb
or
bound
int
stc
adc
jns
pop
shlb
mov
pop
xchg
sub
mov
jmp
xchg
idivl
sub
add
sbb
ds
cmpsb
das
ret
out
mov
mov
aas
inc
mov
loop
cmpsb
pusha
lock
sbb
cwtl
xor
das
or
pop
or
adc
sbb
ss
les
pop
pop
jbe
les
pop
add
add
add
dec
test
inc
je
and
into
inc
lret
mov
push
scas
dec
sub
push
bound
das
movsb
xchg
lret
dec
mov
pop
aaa
popa
enter
insl
xchg
ret
adc
push
daa
jmp
es
test
movsl
adc
dec
adc
jg
pop
xchg
jne
loop
mov
jbe
push
mov
jnp
jl
push
scas
mov
adc
jle
pop
xchg
ret
and
mov
stos
je
mov
addr16
cli
pop
xchg
adcb
inc
sbb
in
mov
mov
cld
push
call
in
inc
inc
dec
neg
xor
cmp
rolb
pushf
mov
clc
xchg
call
pushf
insb
mov
testl
mov
rcl
push
fidivrs
mov
jp
mov
jo
jbe
sub
test
js
iret
jbe
sahf
dec
adc
sarl
imulb
jg
bnd
or
les
dec
mov
leave
dec
cmp
and
cs
aam
xchg
xchg
inc
jno
scas
in
scas
test
cmp
jne
xchg
loopne
pop
mov
fnstsw
inc
push
dec
repnz
insb
and
cmpsl
cmp
pop
mov
adc
jns
or
jbe
out
das
scas
in
add
mov
fwait
xor
mov
adc
and
fwait
mov
test
push
icebp
inc
aaa
xchg
sbb
jle
in
xlat
xchg
ds
insb
and
mulb
jl
push
es
fsts
add
xchg
or
inc
fwait
call
jo
pop
adc
pop
sbbl
dec
or
or
cmc
push
mov
xor
testb
mov
testl
xor
mov
mov
mov
adc
push
add
and
mov
lds
rcr
xchg
call
out
add
loop
or
inc
xchg
jae
or
cli
loope
inc
orb
push
mov
fisubl
fists
jne
fisttpll
out
add
mov
lcall
aas
ret
test
jecxz
cmpb
pushf
push
fcmovb
iret
mov
shlb
dec
lock
xchg
push
movsb
jmp
sti
inc
and
xchg
out
dec
and
push
or
sub
add
rorb
idivb
negb
subb
push
cmp
xor
sub
je
push
xchg
inc
jp
scas
sub
mov
insl
or
adc
imul
sbb
or
mov
jo
movsl
cmp
xchg
xchg
popf
add
add
xchg
add
pushf
out
jmp
pop
sbb
cld
stos
negb
and
aas
xor
jl
jl
push
sub
fildl
lds
mov
adc
and
add
adc
lods
mov
in
idiv
lea
nop
sub
jle
or
xor
cmp
inc
jns
mov
pop
push
mov
push
push
js
mov
ret
dec
push
test
mov
or
or
xor
fst
push
mov
jns
pop
cmpl
insb
lcall
xchg
push
or
dec
adc
pop
jo
or
arpl
xchg
das
xor
jo
mov
cmp
popf
mov
and
insl
push
mov
aam
adc
ret
xchg
stos
mov
movsb
xchg
aam
hlt
mov
pop
fistps
sbb
add
mov
mov
jge
mov
sbb
sbb
ret
add
add
jp
lret
mov
or
pop
loope
dec
mov
jle
and
jae
clc
mov
cltd
and
sub
xchg
pop
xchg
aad
addr16
repz
fwait
sbb
sub
loopne
mov
or
mov
daa
int
dec
add
sbb
fnstsw
pop
mov
inc
stc
sub
and
sub
inc
mov
mov
ds
mov
mov
sti
test
mov
mov
sub
jno
push
int
jp
scas
cld
cmpsb
fsubl
ja
inc
pop
cmp
imul
push
adc
fmull
add
jae
ss
cwtl
sub
xchg
push
dec
lahf
aad
mov
mov
dec
pop
subl
jno
add
inc
sbb
sub
ljmp
adc
insb
cmp
movsl
addl
dec
add
movsl
sub
inc
pop
sub
sbb
int
push
ja
in
sub
ljmp
and
lahf
sbb
push
pop
imul
jmp
pop
cmpsl
jno
ljmp
sbb
cmp
add
xchg
out
fdivr
out
push
add
hlt
or
stos
repz
arpl
iret
daa
aam
add
outsb
clc
aas
mov
and
mov
pusha
jmp
adc
sahf
mov
pop
imul
sbb
aas
dec
icebp
mov
mov
push
loope
aad
pusha
dec
jbe
cmp
dec
fstl
pop
mov
or
adc
test
stos
add
or
cmc
cmp
sbb
dec
xchg
lret
push
mov
ja
insl
or
xchg
sbb
xadd
lods
xlat
jge
loopne
in
push
test
push
add
mov
add
sub
mov
pop
insl
hlt
shlb
dec
lcall
xchg
fs
xchg
es
fsub
aam
in
aam
in
dec
in
test
add
rorb
and
push
sti
insb
cmp
es
in
pop
test
loopne
adc
out
and
cmp
adc
xor
cmp
mov
fstl
popa
aam
scas
mov
mov
sub
cld
inc
xchg
pop
mov
xor
adc
fwait
dec
or
iret
daa
inc
ja
cmpsl
ljmp
sub
pop
sbb
pop
cmpsb
dec
movl
leave
xchg
and
cmp
push
pop
adc
out
add
or
mov
imulb
stos
jae
mov
cmpsl
pop
mov
push
scas
adc
mov
dec
sub
je
ret
out
inc
mov
ja
pop
add
sub
lret
aam
pop
sub
jo
dec
out
sub
movsb
data16
in
and
js
jnp
in
hlt
shlb
hlt
cmc
shll
or
push
pushf
jne
std
jle
pop
xchg
in
jb
pop
add
js
adc
xor
or
xchg
das
fidivrs
adc
enter
jbe
cs
sahf
arpl
or
fs
mov
pop
sbb
xchg
sbb
andl
mov
mov
repnz
repz
mov
xchg
shll
and
or
inc
jbe
cmp
outsb
add
leave
lods
add
cmp
out
sub
inc
push
arpl
inc
jb
jno
mov
gs
cmp
pop
mov
or
ja
sub
test
xchg
mov
push
xor
mov
adc
ficompl
jg
ljmp
repz
jecxz
jo
push
pop
mov
mov
inc
cmp
push
jno
inc
fs
or
cmc
mov
fprem1
dec
sbb
jae
xor
xchg
lahf
inc
add
inc
push
mov
and
adc
sbb
test
cltd
sub
aas
xor
pop
movsl
jle
mov
js
fs
cmpsl
nop
repz
mov
jb
repz
mov
jecxz
lods
dec
adc
fnsave
test
sbb
sub
adc
inc
push
out
mov
fsubrl
cmpsb
inc
push
insl
addl
stc
jb
mov
mov
dec
aaa
in
lds
sbb
mov
ja
cmpsb
or
xor
inc
sti
xor
sahf
xchg
popa
inc
inc
sbb
add
mov
mov
hlt
test
ss
aad
jmp
jae
lock
push
sub
cmc
xchg
cld
or
and
dec
mov
xchg
jno
xor
adc
bound
pop
or
icebp
in
pop
call
imul
fbld
adc
adc
adc
and
dec
out
loop
imul
rcr
out
sahf
pop
mov
jl
aas
xchg
sbb
mov
pop
xor
push
fisubrs
push
cmp
bound
inc
dec
je
pop
sub
dec
aad
loop
pop
mov
iret
cwtl
xor
xchg
push
daa
jb
xchg
lods
cltd
mov
pop
push
fnsave
repz
cmp
scas
fistpll
insl
cmpsl
sbb
pop
ss
dec
add
rorl
mov
lret
pusha
test
call
insb
mov
test
cltd
sysenter
ret
xchg
xchg
cmp
xor
sbb
inc
mov
push
sub
cmpsb
xchg
out
jnp
and
cmp
out
shr
dec
mov
cmc
jmp
add
cmp
mov
insl
gs
push
push
pop
mov
ja
orl
fsubp
fnstcw
jno
push
xchg
stos
mov
xchg
mov
mov
jl
inc
pop
cmpsl
aam
popl
es
sbb
xor
int3
pushf
sub
jmp
adc
mov
test
sbb
xchg
lea
dec
and
jmp
sub
out
dec
and
push
rorl
mov
mov
pop
outsb
lds
bound
sbb
cmpsl
mov
lods
call
sbb
xchg
and
clc
repz
dec
out
xor
mov
fucomip
pushf
lahf
xchg
cmp
cmp
and
js
jmp
push
push
fsubp
leave
imul
das
arpl
mov
test
ljmp
dec
push
aad
adc
sbb
cmp
test
mov
mov
jb
inc
or
lea
in
data16
popf
push
in
push
fadds
scas
iret
jp
imul
sbb
sbb
imul
fs
in
dec
pushf
mov
or
pop
pop
mov
cwtl
incw
pusha
fs
outsb
mov
push
je
mov
xorl
in
shl
stos
js
add
sbb
mov
and
inc
mov
loopne
test
jge
std
add
dec
das
dec
inc
repnz
and
int
mov
inc
lods
adc
test
cmpsb
lods
call
repnz
mull
sub
rcll
jo
fldl2t
xor
subl
or
call
in
dec
neg
stos
int3
mov
inc
xchg
xchg
stc
cmp
into
negb
inc
test
data16
pop
push
popf
cmp
cmp
xorl
mov
int
scas
fwait
lret
in
cmp
cpuid
ljmp
dec
cmp
push
inc
add
push
addr16
lods
fmull
lcall
mov
push
sbb
aam
test
xor
in
ljmp
arpl
mov
push
mov
mov
nop
add
orb
pop
insb
sub
mov
lods
sar
push
and
mov
and
fistps
ret
mov
adcb
mov
leave
fdivrl
and
lahf
jle
call
xor
jbe
fdivs
or
push
cmp
pushw
mov
loop
mov
cmpsb
int
aad
int
inc
mov
dec
dec
cmp
test
hlt
inc
adc
cs
sub
push
out
les
and
movsb
cli
out
je
mov
push
mov
pop
sbb
mov
bound
add
and
or
cmp
mov
and
jae
lahf
bound
and
cmpsl
mov
mov
daa
lock
pop
sub
push
stos
idivl
mov
cmpsb
rolb
push
dec
fcmovnbe
mov
sub
add
icebp
ja
insl
mov
sub
test
or
xor
stc
push
test
push
hlt
jg
jbe
es
aad
cmp
test
fiaddl
fistpl
les
fnstenv
ss
jnp
lds
push
mov
xor
andl
shll
xchg
cmpsl
sub
je
mov
mov
hlt
popa
mov
hlt
pop
adc
inc
insb
mov
mov
and
test
ja
pushf
mov
add
sbb
inc
mov
lret
mov
lahf
lock
ret
repnz
test
cmp
inc
and
inc
repz
and
hlt
scas
ja
sbb
jns
mov
stos
sub
clc
or
push
cmc
fcmovnu
push
cmovg
inc
jg
pop
daa
imul
xor
adc
push
sbb
test
mov
enter
das
dec
outsb
sbb
divb
mov
popa
aaa
or
push
dec
push
jb
xchg
jnp
fwait
into
xlat
bound
push
add
addr16
or
clc
sub
mov
cwtl
imul
mov
push
push
pop
pop
js
mov
popa
dec
push
bound
xor
mov
or
push
mov
sub
addr16
xor
and
mov
sbb
sub
imulb
maxps
mov
cmp
or
pop
pusha
aad
mov
push
repz
inc
mov
jbe
jg
cmpsl
bound
popa
cmp
push
sarl
ffreep
inc
jl
push
pop
lds
dec
stos
rcll
test
mov
fs
inc
gs
enter
rcrb
faddp
mov
outsb
mov
mov
add
mov
dec
and
pop
cmpsl
jbe
mov
pop
sub
pop
fcompl
pop
or
adc
xor
inc
in
inc
out
inc
pop
in
call
icebp
adc
inc
mov
inc
daa
scas
lods
int
cld
or
or
shr
push
insb
mov
jne
leave
or
fcoms
mov
fchs
repnz
mov
js
push
ja
push
dec
aam
andl
ja
xchg
sar
je
dec
enter
in
or
stos
mov
shr
pushf
fisubs
mov
stos
mov
ret
fidivl
cmpsb
jae
xchg
test
pop
arpl
int3
ljmp
adc
out
fwait
mov
and
dec
repnz
jl
cs
fstps
jae
pop
out
in
adcl
aad
test
dec
mov
outsl
outsl
cwtl
out
pop
jnp
rcll
pop
dec
fwait
shr
call
pushf
pop
paddd
jg
pop
sbb
dec
dec
adc
push
les
cmc
mov
jmp
sbb
xchg
inc
insb
pop
xor
jo
mov
clc
dec
xchg
jbe
in
mov
mov
fsubrs
daa
fstpl
inc
sarl
push
inc
and
add
call
cli
ss
or
inc
add
test
repz
rorb
cld
dec
notl
aaa
cmp
pop
stc
pop
pop
jge
xchg
imul
add
lahf
push
mov
pop
mov
add
negl
sub
call
call
xor
ja
in
cmc
push
jge
ljmp
cmp
mov
test
je
sti
cmp
jnp
push
mov
xor
out
and
or
dec
jl
outsb
adc
lds
add
and
ds
out
inc
mov
push
cs
in
les
nop
int3
sub
mov
cmp
movsb
lds
mov
mov
jae
icebp
add
scas
jmp
ss
push
mov
xor
mov
xchg
adc
or
std
pop
lods
ret
ret
bnd
les
cmp
or
mov
pop
xchg
jecxz
sub
rol
mov
pusha
test
add
or
xor
pop
rcr
pop
dec
int
jle
loope
imul
jne
add
outsl
jp
sub
mov
cs
xlat
cmpb
ja
or
add
xchg
add
fimull
cmp
outsl
adc
pop
aas
stc
dec
dec
in
mov
cwtl
mov
xor
mov
aam
mov
pop
imul
mov
and
bswap
xor
sub
pop
push
cmpsb
imul
xchg
push
cs
jmp
pop
aad
pop
pop
lock
dec
lcall
inc
dec
pop
loopne
adc
pop
cli
pop
jne
pop
sbb
cmp
int3
dec
adc
xchg
loop
and
add
dec
mov
pop
aaa
fdivrl
mov
rol
dec
lcall
push
ret
sub
sbb
out
lods
xor
lahf
xor
dec
jl
or
sbb
scas
loope
dec
jb
test
cmp
sub
stos
mov
mov
sub
push
lret
pop
enter
or
out
adc
xchg
pop
and
push
mov
inc
sbbl
sub
mov
sbb
dec
movsb
dec
scas
add
add
and
pop
xchg
ss
mov
rcr
push
fwait
adc
jl
fsubl
cmp
add
dec
es
inc
mov
xor
or
dec
pop
arpl
jae
testb
int3
stc
xor
scas
lods
push
inc
into
jae
call
stos
and
pop
cwtl
lock
lods
cltd
insl
shll
out
mov
and
cmp
pop
xchg
out
fcmovnb
mov
push
xor
mov
adc
in
cmc
fisubl
sub
cmc
call
xor
and
enter
inc
add
in
sbb
jp
test
sti
sbb
fisubs
pop
lret
adc
lahf
mov
outsb
inc
loop
rorb
push
les
mov
out
cmp
sbb
xor
add
jbe
std
adc
adc
and
dec
int
mov
cmp
cmp
mov
cmp
jo
hlt
rorl
test
mov
stos
pushf
inc
jne
out
orb
stos
ds
loope
lcall
jle
lcall
out
xor
cmp
sbb
ss
cs
in
mov
ds
popf
cmp
lock
in
add
into
cli
adc
mov
loope
inc
xchg
push
aam
mov
sub
addl
imul
in
cmp
cli
jmp
je
inc
jae
iret
fcmovnbe
push
push
ss
adc
les
sub
movsl
mov
out
pop
push
jmp
sti
jmp
dec
idiv
push
insl
jnp
repz
scas
cmp
ss
out
cli
xlat
data16
pop
int3
jbe
mov
inc
sbb
or
rorb
fbstp
mov
dec
in
enter
sbb
dec
sbb
int
sti
fucomip
cmp
or
xor
out
fisttpl
fwait
out
scas
fbstp
xchg
data16
aad
out
sarb
rorb
push
mov
lea
jg
jae
fistpll
xchg
repnz
sbb
inc
mov
dec
leave
fmuls
gs
sahf
xor
neg
lret
mov
mov
or
add
push
inc
test
cwtl
inc
orl
movsb
pop
and
daa
xchg
inc
xchg
dec
and
out
cmp
js
pop
xchg
aas
pop
test
popa
pop
mov
xor
push
jmp
cmp
push
repz
push
fstpl
adc
mov
push
and
xchg
xchg
inc
dec
or
mov
xchg
clc
jmp
xor
js
jg
push
int
sbbl
gs
lcall
jb
mov
pop
cmp
sub
cmc
mov
mov
cmp
xchg
stc
sub
lret
bnd
lret
int3
insl
sarb
push
cmp
mov
or
cmp
jb
lret
lea
test
pop
das
xor
sub
cmp
pop
mov
popa
outsb
xchg
stos
xor
dec
ss
outsl
and
outsb
repz
cmp
rclb
lret
int3
cmp
or
adc
seta
sbbb
ss
and
divl
or
pop
pop
jne
sub
cwtl
fdivrp
sub
inc
ror
ret
in
sbb
out
vpshld
pop
stos
gs
iret
icebp
mov
inc
sub
cs
push
pop
mov
sbb
add
test
fiaddl
cmp
ss
hlt
in
jo
outsb
xchg
sbb
dec
add
iret
fwait
je
add
and
mov
add
cmp
and
pop
add
jl
pusha
mov
insb
hlt
imul
pop
call
cmp
andl
pop
imul
inc
loop
cwtl
push
lret
lock
pop
out
rcl
fcomip
in
cmp
mov
popf
ror
je
push
add
adc
ss
adc
sti
jns
std
sbb
ja
lret
roll
push
cmpsl
repz
repz
out
dec
sbb
jmp
jle
dec
push
jnp
sbb
xchg
jnp
push
inc
jp
rcll
mov
dec
mov
or
sub
stos
cmp
inc
pop
adc
xor
iret
push
into
cmpl
aas
cld
test
fs
add
and
jg
rcl
scas
mov
jp
rcl
dec
pop
adc
out
out
lret
in
jecxz
push
ja
rclb
cmp
cmp
jmp
mov
add
mov
fisubrl
dec
push
sub
jmp
bound
mov
dec
cmp
out
lret
sti
xchg
mov
push
adc
cwtl
subl
mov
scas
sub
rcrl
sub
inc
std
je
push
cmp
fwait
add
rsqrtps
inc
mov
jnp
jns
xor
xchg
movsb
push
xchg
test
loopne
mov
xlat
and
jge
sub
fidivs
adc
test
cwtl
add
pop
sbb
rol
add
cmp
stos
iret
or
popa
lds
cld
ja
pop
or
push
push
bnd
or
mov
and
das
jns
or
inc
cmp
pandn
cld
rol
ja
jae
jno
aam
mov
dec
jp
sbb
xchg
jno
in
outsl
stos
lahf
aas
call
dec
mov
int
xor
push
ljmp
sbb
mov
mov
xchg
inc
xchg
pop
inc
inc
inc
les
fsin
lret
mov
sti
lahf
insl
push
shrb
xor
add
cmp
lret
inc
inc
sub
es
imul
pop
movsb
inc
sbb
mov
inc
cmp
mov
jecxz
mov
push
adc
out
mov
fsts
das
push
mov
push
inc
jb
or
aam
inc
pop
mov
setle
pop
inc
clc
les
arpl
flds
add
scas
add
enter
or
push
sub
adc
or
mov
pop
daa
movsl
mov
gs
pop
test
mov
or
clc
ljmp
orb
mov
or
test
lret
pop
out
jle
das
mov
cmpsb
clc
mov
inc
leave
test
stos
aas
movsb
jmp
nop
daa
fsubp
and
adc
push
xor
mov
outsb
xor
imul
fcmovb
in
in
addb
out
lock
inc
mov
mov
xlat
jg
sub
bound
inc
pop
pusha
add
out
push
adc
les
xchg
mov
push
je
mov
mov
dec
out
cmp
lret
sub
fs
ret
pop
mov
and
lret
pop
in
cmp
insb
cmpsb
cmpb
pusha
aam
int
loopne
outsl
dec
xchg
mov
js
orl
cmp
cmp
jmp
xchg
cmpl
push
push
cltd
jle
into
lcall
ficompl
addb
in
nop
adc
dec
ljmp
xor
push
push
imul
dec
mov
cmc
or
or
push
xchg
movsb
daa
push
in
jb
cmp
outsb
ja
lds
fimull
loope
add
sub
out
enter
jb
dec
cs
popf
pop
rcrl
mov
adc
push
pop
lea
sar
bound
out
jns
inc
xlat
movups
lret
mov
das
and
mov
in
aas
jge
lea
push
fcmovnbe
jg
flds
and
fldcw
iret
popa
mov
pop
cmpsl
es
cld
outsb
or
lret
stos
dec
jmp
sbb
adc
shlb
sar
xor
dec
dec
pusha
jle
es
push
loop
pop
pop
or
adc
cld
dec
mov
add
jp
sbb
iret
flds
xor
mov
or
push
and
or
adc
mov
mov
jl
pop
sbb
imulb
adc
imul
sahf
xchg
cs
outsb
push
mov
adc
xor
rcrl
in
out
mov
rcl
xor
adc
mov
lret
sbb
sub
and
cmp
or
and
pop
sub
sub
xchg
ret
mov
shl
mov
pop
xor
out
xorl
sahf
imul
bound
test
add
fs
push
xchg
and
test
sub
movsb
sub
sar
mov
mov
test
in
mov
mov
aam
jnp
sub
push
cwtl
lret
mov
out
mov
sub
jge
into
xchg
mulb
and
xor
push
insl
sbb
cmpsl
call
ret
cmp
mov
jmp
loop
out
cltd
loop
mov
ret
mov
or
imul
jo
fildl
mov
outsb
mov
pop
mov
mov
fistl
clc
bound
mov
mov
insb
pop
mov
inc
iret
cmp
and
mov
inc
roll
in
imul
pandn
xlat
dec
and
imul
mov
int3
push
sub
mov
out
sub
icebp
fisttpll
inc
and
adc
addr16
daa
pop
cmp
ja
xchg
add
dec
or
mov
cmc
arpl
outsb
ja
sub
icebp
inc
add
out
imul
inc
std
xchg
xor
lahf
dec
mov
pusha
mov
imul
insb
mov
leave
cmp
inc
loope
not
rorl
out
pop
rcl
int
push
adc
jae
test
mov
cmpsl
inc
imul
or
mov
je
sahf
insb
jno
push
sti
push
loopne
aam
mov
jae
pop
loope
shl
sbb
jecxz
xchg
inc
push
stc
pop
jno
mov
stos
mov
sti
push
add
popa
jae
aam
sahf
imul
pop
popf
or
sbb
fs
xchg
clc
xchg
mov
das
movsb
and
scas
out
arpl
in
push
mov
rcrl
inc
mov
std
lods
jns
cltd
sbb
inc
faddl
rol
test
jne
pushw
pop
xor
fsubrl
push
inc
lret
inc
sub
pop
jae
repnz
add
sbb
fdivp
call
add
pop
inc
loope
dec
je
add
lahf
jns
bound
mov
insl
int3
jg
loopne
dec
sbb
sub
fidivs
sub
rcll
jb
add
divl
jp
mov
xor
in
mov
or
mov
aaa
mov
popa
enter
mov
jle
sbb
push
mov
and
mov
test
shrb
ds
push
shl
xor
int
xchg
out
inc
inc
pop
push
push
hlt
xor
xor
or
ds
or
push
test
dec
add
mov
int3
cltd
pop
subl
push
lcall
mov
js
xchg
imul
sbbl
js
fwait
xchg
cmpsb
aas
ss
loopne
mov
sbb
daa
hlt
cmp
xchg
das
mov
insb
aam
mov
enter
fiaddl
add
pop
test
testb
aam
fsubrl
arpl
or
dec
jmp
push
sbb
mov
jle
lods
aas
mov
xchg
out
std
test
mov
testb
jecxz
cmpb
mov
icebp
xor
xlat
leave
xor
mov
sbb
repnz
negb
xchg
pop
jbe
cmpsl
aaa
lret
shlb
jp
stos
cs
daa
pop
or
aam
mov
scas
enter
fwait
add
dec
pop
rorl
stos
xor
adc
iret
es
bound
test
jl
jae
xchg
and
sub
xor
stc
and
and
fidivl
sub
scas
lcall
and
sbb
loope
inc
jge
mov
dec
and
cmp
dec
hlt
jl
jge
adc
outsl
jp
mov
pushw
and
cwtl
mov
push
mov
dec
add
shrl
jne
gs
decl
fadd
repnz
pop
lcall
xchg
mov
ret
scas
fidivrl
ss
adc
jae
cli
mov
lahf
add
inc
xorl
sbb
cmp
ds
xchg
dec
xchg
cmp
jns
push
cmp
dec
cwtl
mov
jns
pop
xchg
bound
loope
in
cmpsb
add
cwtl
add
dec
outsb
ja
jge
movsb
add
int3
inc
push
jo
or
hlt
adc
jb
inc
adc
arpl
dec
ss
mov
mov
push
gs
dec
xchg
inc
hlt
imul
xchg
jbe
enter
pop
cld
ret
int3
rclb
and
lods
test
imul
push
test
mov
ss
mov
xor
adc
push
or
lods
rcrl
adc
push
sub
jmp
test
sar
cmc
xor
scas
jge
arpl
in
bound
sbbl
pusha
dec
jmp
pop
xor
mov
jns
mov
cltd
idivl
pop
sbb
mov
shl
ss
out
push
pop
dec
sbb
cmp
pop
sub
ret
xchg
mov
pop
pushf
mov
sbb
sahf
adc
pop
mov
adc
call
lahf
outsl
push
jo
lods
daa
hlt
leave
cmc
xor
jb
push
dec
inc
xor
insb
inc
lcall
cmp
dec
test
mov
lahf
test
shl
mov
inc
jno
push
faddl
ss
cld
ret
mov
mov
and
xchg
popa
paddb
xor
ret
push
cmp
stos
cmpsb
cmp
aaa
pop
jo
sbb
aam
sub
icebp
mov
mov
adc
and
dec
mov
adc
repnz
or
daa
sbb
iret
fstp
xor
int
ret
ss
and
xor
mov
repnz
and
cmp
sbb
mov
js
push
repnz
cmp
xchg
cli
mov
idiv
inc
dec
mov
inc
mov
rolb
inc
mov
int
aaa
daa
push
pop
xchg
adc
rcll
push
jle
fucomip
mov
pop
sbb
dec
subb
mov
and
gs
mov
dec
addr16
xlat
cltd
pop
mov
lods
js
mov
out
jae
scas
and
lret
dec
fstpl
xor
push
xor
xchg
lcall
sub
jns
dec
arpl
out
hlt
shll
js
inc
mov
ljmp
arpl
dec
lcall
pop
rolb
rep
fcoml
mov
sub
shrl
dec
pop
mov
pop
xor
and
xchg
into
popf
lods
cmp
add
sbb
pop
gs
dec
test
or
inc
pop
stos
xor
fsubs
or
pandn
call
dec
adcb
xchg
bound
adc
popf
fwait
add
inc
enter
ljmp
addb
dec
xlat
sahf
and
mov
nop
push
sub
les
in
divl
inc
mov
mov
gs
xchg
insl
sbb
je
jns
and
mov
add
add
lahf
cmpsl
inc
inc
stos
ds
loope
push
cs
lods
cmovae
xchg
add
xor
adc
push
inc
add
mov
lods
je
dec
mov
jl
jmp
lcall
fdivrl
add
hlt
mov
add
inc
cmpsl
add
aas
fs
mov
or
mov
bound
jb
fcomps
sub
in
sbb
jge
sub
push
mul
outsb
and
lods
dec
pop
arpl
outsl
in
js
or
mov
dec
stos
push
pop
push
aas
push
icebp
arpl
sbb
xor
int3
fldt
inc
ror
lock
jne
add
fdivl
jmp
cmp
repnz
stos
mov
mov
cmp
int
push
cmp
jle
push
idivl
inc
lock
lahf
les
xchg
daa
xchg
aad
lods
sbb
adc
cmp
roll
cmpsl
jo
fiadds
push
and
or
pop
adc
inc
xor
movsl
xchg
mov
inc
rorl
and
mov
xlat
sbb
ret
cmovne
jo
pop
test
mov
mov
in
out
jne
decl
mov
fnstcw
pop
outsb
or
mov
push
out
sti
pop
rcr
mov
rcr
test
pop
or
add
adc
pop
lret
mov
adc
mov
mov
ja
push
and
rcll
fstl
xor
mov
inc
aas
pop
adc
dec
sbb
xor
sbb
inc
nop
push
push
dec
pop
lret
mov
or
push
les
in
ret
daa
das
mov
hlt
test
jae
xor
sbb
mov
xor
adc
mov
out
jle
pusha
sbbb
push
push
sbb
jl
iret
xor
fisttps
push
lcall
jbe
repnz
sub
dec
lock
xchg
fwait
ret
ljmp
inc
rcrl
sub
mov
ss
or
mov
pushf
mov
stos
das
pop
ds
shr
mov
jmp
sbb
add
and
mov
icebp
out
pop
fcoms
aam
repnz
daa
fisubrl
mov
dec
jl
repnz
mov
scas
push
add
inc
pusha
leave
pop
test
adc
push
pop
mov
jbe
dec
ljmp
das
sar
push
stos
outsb
inc
sahf
sbb
adc
push
pop
std
int
loop
adc
andl
sub
adc
or
in
and
inc
adc
xchg
and
lcall
pop
lcall
jno
xchg
call
lret
dec
stc
insb
pop
cmp
imul
xchg
shl
gs
mov
fsubrs
popf
add
loopne
pop
fsub
clc
insl
push
fidivrl
xor
xchg
sbb
cwtl
inc
pop
notl
ja
pop
div
xor
dec
mov
sbb
ljmp
divl
out
pop
xchg
pop
aaa
xchg
ret
inc
aas
push
jle
inc
inc
sub
jecxz
xchg
dec
pslld
es
fisttpll
mov
adc
out
insb
and
int
adc
ss
dec
popa
and
and
popf
mov
cmovl
lods
mov
loope
pop
in
push
mov
adc
mov
adc
out
popf
push
xor
int
aad
and
cmp
inc
lods
rcll
mov
in
lret
imul
dec
push
mov
push
or
aaa
sbb
test
in
xchg
ja
outsb
xchg
pop
mov
scas
dec
nop
jle
adc
subl
pop
xchg
stos
inc
std
inc
sub
sbb
or
test
push
adc
pop
push
add
adc
outsl
add
test
inc
push
clc
cs
xor
jg
jmp
add
jl
sahf
mov
icebp
push
add
cmpsb
jmp
into
movsb
add
jne
mov
xchg
cmp
dec
lret
int3
dec
pop
xor
and
jp
push
dec
clc
jae
mov
sub
imul
es
sti
pop
popf
jns
lahf
sbb
pop
test
popf
sub
mov
or
mov
mov
dec
push
mov
and
pop
inc
sub
push
dec
fidivs
xlat
pop
test
out
push
cmp
xchg
lahf
pop
test
rcr
mov
xor
fiadds
mov
mov
movsl
pop
test
out
xor
inc
adc
lahf
and
add
mov
adc
aaa
ja
mov
xchg
cwtl
xchg
jbe
pop
iret
xor
ljmp
sub
imul
mov
sbb
testl
jecxz
pop
in
push
fwait
dec
add
psrld
push
push
ss
xchg
mov
mov
mov
into
std
xor
jns
cmp
jp
push
xor
jecxz
xor
out
mov
into
adc
dec
sbb
xchg
fmulp
outsb
mov
add
inc
cmp
fildll
or
dec
outsb
or
stos
fisubs
js
and
mov
addb
test
fadds
xchg
cli
ss
jle
xchg
mov
lret
jmp
into
out
clc
xor
jg
pushaw
push
cmpsb
stc
ljmp
imul
xlat
cs
xchg
out
push
mov
mov
xchg
xchg
leave
push
cmp
ret
adc
ficompl
mov
adc
movl
mov
sbb
sub
ficompl
adc
sub
xlat
xor
fwait
sub
scas
push
fiaddl
cmp
or
and
adc
andb
fstps
cmp
mov
mov
sbb
add
sbb
add
sbb
rcr
sbb
mov
jg
lcall
pop
inc
mov
nop
pop
dec
std
repz
in
inc
push
int
repnz
adc
nop
imul
mov
ds
es
xor
push
movsb
dec
and
imul
mov
pop
or
mov
imul
sarl
xlat
jne
mov
adc
nop
add
icebp
lods
push
xchg
fisubl
add
jg
xorb
sbb
push
icebp
and
adc
sub
cmp
fadds
cmp
add
mov
adc
mov
movsb
shrb
sbb
dec
mov
out
cmpl
in
cmp
mov
jnp
fwait
outsl
fnstenv
pop
faddl
test
loop
in
iret
jge
push
sub
clc
lea
in
jns
add
rolb
fistpll
hlt
cmp
insb
pop
adc
mov
xchg
mov
push
addb
rcll
dec
inc
dec
jno
mov
pop
jp
or
mov
nop
into
dec
dec
add
imul
insl
jbe
inc
dec
hlt
inc
aaa
xchg
inc
iret
mov
loope
inc
orb
jb
rclb
data16
rcl
jne
inc
pop
aam
lods
xchg
stos
mov
push
or
es
mov
push
inc
leave
adc
xchg
and
push
out
xchg
mov
sbb
cmp
mov
dec
jl
and
push
sub
pop
fnstsw
clc
push
jle
cmp
jae
dec
sti
pop
cli
test
out
clc
sbb
imul
jo
xchg
adc
incl
bound
jl
cmpsl
and
pushf
sahf
xor
jnp
sbb
jbe
dec
stos
dec
add
test
cmp
loope
and
sahf
subl
test
idivb
mov
lret
xchg
lds
and
add
lret
ret
testb
or
andb
jne,pn
clc
mull
mov
dec
xchg
aaa
ja
sbb
mov
dec
dec
popa
loope
push
sahf
not
dec
cltd
fldt
adc
mov
cmp
xor
xchg
ss
mov
lds
cmp
and
sbb
rolb
add
sub
fisttps
sti
out
push
out
js
sub
in
or
mov
mov
cmp
lahf
ja
icebp
or
jmp
add
mov
adc
push
xchg
mov
into
and
iret
lret
fstpl
clc
mov
cmp
adc
fisubs
mov
jo
cli
aad
mov
loope
mov
cmp
addb
fisubl
adc
cmp
add
mov
ret
inc
insb
push
out
subb
rol
int3
pushf
lods
push
push
aam
fs
mov
je
sahf
aas
mov
out
stos
inc
fwait
stos
or
fimull
mov
test
jno
or
fiadds
test
and
gs
fldt
fldenv
fdiv
mov
mov
xor
and
sub
iret
xor
mov
ret
pop
or
out
loop
inc
loopne
push
aam
xlat
dec
aas
ret
jl
inc
sbb
cmp
cmp
push
cltd
and
pop
fmulp
sbb
cmp
jl
sbbl
jns
sbb
sbb
int3
fbld
out
jns
push
cld
and
jno
cmpsb
popa
push
jle
jmp
out
out
cmpsb
jge
insl
inc
jle
xchg
xchg
lea
xor
rcll
push
xor
scas
idivl
sbb
fimull
dec
push
fidivs
test
xor
ja
mov
mov
xchg
push
stc
outsl
inc
sub
cs
out
mov
fnstenv
xor
xlat
cmpsl
xor
push
or
inc
xor
push
fdiv
inc
mov
ret
rcr
mov
or
outsb
out
xchg
inc
push
clc
outsb
in
notl
lahf
std
jo
jmp
data16
pop
push
pop
popa
fwait
push
add
and
out
mov
sub
dec
divl
stos
add
test
sbb
pop
ds
arpl
ds
ja
jnp
inc
jp,pn
mov
mov
cmp
mov
data16
int
jns
in
stc
add
add
pop
rcrb
pop
pop
mov
ret
out
push
aad
daa
cmp
and
or
notb
jb
mov
shr
pop
nop
mov
mov
sbb
insl
adcb
nop
pusha
test
add
jbe
stos
aas
pop
add
in
mov
cltd
add
sbb
mov
cmp
es
fnstsw
pop
testb
sub
mov
test
fnstsw
int
loopne
ja
adc
sti
xchg
lock
out
test
scas
push
mov
leave
jo
xchg
jp
cmp
lods
fdivr
jp
xor
call
test
out
imull
das
inc
call
iret
fnstenv
pop
jbe
mov
xchg
sub
inc
inc
mov
out
test
jo
and
push
pop
out
add
pop
aad
mov
cmp
lods
xchg
bound
push
jnp
ss
mov
mov
cmp
dec
dec
aam
cltd
inc
std
mov
lret
adc
hlt
orl
fistps
popl
or
push
inc
int
mov
lds
sbb
ret
mov
gs
sahf
lret
ret
add
cwtl
repz
xor
jae
fisttpll
into
add
jecxz
add
xchg
bound
inc
sbb
mov
rcrl
fstpl
out
pushf
test
mov
clc
mov
or
xchg
rol
xor
stc
rcrl
in
mov
adc
xchg
pop
dec
push
call
imul
data16
xor
in
incl
lea
in
add
pop
cmpsb
cwtl
cmc
add
insl
mov
adc
xchg
and
sbb
jl
pop
popa
or
pop
popa
orl
popa
ja
mov
and
mov
dec
scas
aas
neg
mov
mov
sbb
repnz
in
sub
stos
jmp
or
imul
jne
xor
xchg
cmp
int3
push
xchg
inc
push
data16
or
imul
insb
dec
push
xor
loopne
cmpsb
test
sub
loope
test
cmc
xor
js
dec
and
mov
sub
jae
pushf
insl
sbb
add
fsubs
mov
lods
mov
adc
sbb
aas
aas
lock
add
xchg
and
lret
into
and
pop
lret
lock
xor
out
jne
sub
stos
clc
cmc
fwait
loope
cmp
add
fwait
lea
jb
pop
fmulp
sbb
adc
adc
imul
xor
mov
pmulhw
dec
js
adc
stc
mov
stc
cltd
out
outsb
xchg
leave
jae
pusha
int
pusha
shlb
repnz
fdivl
in
das
pop
movsl
cmpsb
out
xor
jo
cmp
sbb
xor
in
xchg
push
pop
dec
inc
add
mov
inc
loopne
and
addb
test
out
inc
hlt
inc
lds
jle
adc
jl
iret
cmp
sub
popa
mov
icebp
outsb
pusha
pop
sub
jmp
push
xchg
gs
mov
outsb
sub
sub
outsl
mov
cmp
ret
popa
rol
inc
and
movsl
pop
testb
mov
xor
stc
mov
or
xor
ret
aas
sbb
push
call
push
dec
out
cmpl
push
jecxz
xor
sub
mov
insl
popa
inc
test
sbb
popa
push
lock
lcall
push
shl
or
cs
fisttpll
xor
sbbl
test
mov
add
ds
mov
std
or
popf
or
xor
cmp
xchg
sti
pop
fstl
ljmp
and
stos
sub
or
push
and
mov
and
add
jecxz
mov
xchg
stc
fwait
jbe
ret
in
or
jl
imul
daa
daa
cmp
loope
jns
fcoms
test
wrmsr
inc
int
inc
xor
adc
lock
jne
push
icebp
fldcw
stc
test
add
sub
movb
das
mov
es
and
jno
out
sub
rcl
mov
mov
adc
xor
or
mov
mov
test
nop
cmp
stos
pop
jecxz
cltd
add
adc
or
inc
je
mov
dec
cmp
pop
cs
int3
adc
fpatan
and
cwtl
sti
cli
pop
mov
adc
pop
add
rol
je
aam
jns
add
iret
pop
inc
jmp
in
sbb
pushf
lret
push
popa
mov
pop
int
or
jle
sbb
nopl
in
cld
and
dec
out
sahf
push
add
sahf
sub
sbb
mov
pop
dec
mov
jnp
xor
pop
arpl
cwtl
xor
fnstsw
notb
sub
adc
fucomi
mov
xchg
sub
dec
cmp
xchg
or
imul
xbegin
mov
subl
es
test
neg
scas
xchg
jp
decb
pop
mov
out
test
lcall
sub
outsl
lcall
mov
cltd
jmp
popf
ja
cmp
aas
es
dec
cld
push
mov
out
stc
sbbb
push
dec
lods
inc
scas
adc
dec
mov
test
xor
in
repz
out
dec
dec
int3
adc
subl
push
lcall
ds
je
xchg
cmp
test
or
mov
rcr
popw
les
movsl
mov
bound
cmp
push
dec
inc
dec
fnstsw
lock
add
outsl
cmp
cwtl
iret
jp
mov
xchg
gs
dec
call
test
cmp
fs
test
push
stos
test
andb
or
aad
jmp
adc
in
jmp
push
test
sbb
lock
call
sub
add
daa
aas
adc
sbb
aaa
dec
in
lret
jp
jp
jne
cmp
lahf
sub
repz
insb
lods
and
decl
stos
lock
fdiv
mov
les
out
imul
pushf
mov
mov
insl
or
loope
aad
adc
mov
or
int3
jo
aas
lock
and
xchg
mov
lret
cltd
add
and
popf
pop
shrb
pop
adc
stc
gs
mov
xor
imul
push
add
mov
xchg
xchg
push
stc
cmc
sahf
xor
add
xchg
xchg
xor
dec
pop
and
lahf
or
and
mov
adc
sub
xchg
jge
pusha
jge
xchg
dec
xchg
push
iret
and
adc
xchg
pop
xchg
xchg
insb
lock
in
jg
lock
mov
ljmp
push
adc
pop
sub
mov
mov
sub
loop
adc
xchg
cmpsb
xor
xchg
fnstcw
pop
mov
lahf
lcall
xchg
dec
stos
jp
push
xor
cmp
mov
stos
arpl
sub
mov
jo
cmpsb
xor
aam
adc
adc
sbb
lahf
cmp
fcomp
sub
aam
int
cmp
push
lods
jp
adc
clc
loop
test
pop
cmp
and
movsl
rol
ret
fdivrs
outsb
cld
jecxz
adc
mov
nop
pop
xor
mov
call
rorl
cli
insl
lret
add
loopne
aaa
pop
mov
jp
mov
fildll
or
push
dec
in
sbb
xchg
dec
shll
test
scas
gs
inc
roll
arpl
xlat
lods
addl
jo
sti
insl
fs
inc
xor
inc
mov
add
add
ljmp
sbb
cmp
cmp
hlt
in
out
xchg
fs
fwait
jle
dec
aam
mov
xor
and
scas
sti
mov
xor
test
das
push
fs
push
mov
jmp
xchg
sub
dec
push
fcomip
adc
imul
fs
and
and
cmc
adc
push
mov
call
jmp
or
fnstcw
arpl
or
dec
cmc
cmp
cli
ret
into
iret
lret
out
rclb
imul
iret
repz
in
int
jmp
pop
pop
push
filds
aaa
data16
mov
xor
inc
sbb
and
jb
clc
mov
jne
cmpsl
fdivs
movsb
mov
shll
imul
in
sub
adc
neg
mov
dec
add
test
stc
cs
mov
push
mov
or
cmpsb
lahf
mov
or
insb
out
cmp
jae
das
rorl
movsl
push
add
mov
mov
sbb
xchg
ret
fbstp
push
clc
push
add
push
in
inc
push
iret
rclb
scas
lods
inc
and
ret
lds
or
int3
mov
inc
xor
insb
cwtl
sbb
aad
xor
pop
push
push
xor
mov
in
cwtl
push
pusha
test
mov
clc
pop
test
sbb
sti
mov
out
mov
divb
adc
jo
aam
test
xlat
push
int
mov
add
jmpw
sub
jnp
dec
ret
les
push
sarb
not
inc
je
std
movsb
xchg
aas
push
xchg
cmp
xor
outsb
mov
cmp
sbb
sub
or
jb
shlb
enter
and
shll
or
insb
mov
mov
jae
std
pop
sbb
rcll
pop
cmp
cmp
movsb
leave
xlat
adc
notb
pop
mov
rol
sahf
mov
pop
stos
xor
popf
adc
pop
cmp
sbb
iret
xor
push
stc
mov
xor
fwait
sarl
jns
dec
mov
push
and
xchg
in
mov
or
pop
out
notl
lret
test
repz
lods
enter
call
iret
arpl
add
fwait
int
call
lahf
movsl
lcall
movsb
cltd
sub
push
movsb
mov
xchg
popa
fnsave
aad
addr16
outsl
push
mov
mov
xor
insb
xchg
xor
sahf
mul
js
data16
or
cld
push
inc
arpl
cmp
aad
xchg
out
fwait
shll
mov
clc
imul
fdivl
test
mov
pop
data16
popa
adc
out
fldln2
cmpsb
sbb
lock
movsb
arpl
jb
out
pushf
sbb
hlt
in
mov
xchg
adc
jns
sbb
or
insb
inc
mov
add
jmp
repz
mov
out
mov
gs
aas
pushl
cmp
xor
pop
xchg
out
bound
out
cld
cld
mov
jg
sti
sub
cmp
std
sbb
jns
inc
xor
shrl
pusha
cmp
cmpsl
mov
lods
pop
and
mov
cmp
xchg
aas
push
mov
inc
or
in
lock
in
fxch
iret
mov
or
mov
testb
jle
add
inc
adcl
pop
movl
fnsave
push
fistpl
cs
inc
fisttpl
sbb
popa
sbb
int3
jle
sbb
ret
movsb
or
test
sub
inc
lds
andl
inc
xor
sti
mov
data16
or
push
cmp
pop
insb
aad
xchg
sbb
mov
and
xchg
push
sbb
test
and
adc
mov
jp
or
stos
icebp
xchg
mov
cwtl
adc
xlat
cmpsb
test
or
insb
decb
movsb
cmp
movsb
and
cltd
mov
or
mov
pop
in
and
outsl
add
fnstcw
shlb
out
push
call
or
aam
xchg
mov
data16
ljmp
sub
lahf
nop
out
push
inc
fdivrs
and
pop
jbe
inc
mov
cs
add
pop
in
pushf
insl
inc
xor
cmp
pop
pop
enter
int3
mov
push
or
dec
mov
adc
push
cltd
fcomp
or
adc
or
outsl
push
out
ja
push
aam
addl
add
mov
inc
or
mov
xchg
cli
fdivl
mov
popa
shrl
mov
cmp
in
xchg
loope
sbb
pop
hlt
pop
adc
mov
or
jl
fistpll
mov
rolb
jne
pop
jb
inc
fsubrl
sbb
jbe
mov
and
push
cli
xor
mov
int
lret
ljmp
mov
enter
adc
cmpsb
call
cmp
test
push
mov
adc
and
scas
nop
xor
mov
and
test
lods
fdivl
addl
push
stos
jnp
xchg
add
push
movsl
mov
out
inc
mov
pop
inc
push
vpsadbw
lcall
rcrb
mov
ljmp
cmp
mov
mov
pop
xchg
sbb
jns
or
enter
test
ja
cwtl
and
mov
push
jecxz
jne
insb
sbb
popa
fs
push
ret
das
pop
lahf
das
movsl
loopne
cs
jb
inc
addb
sub
mov
daa
fstpl
popa
push
in
push
jb
or
jo
scas
jge
add
xchg
inc
cwtl
mov
sbb
pop
in
clc
adc
dec
imul
outsb
lret
shlb
adc
jle
sbb
fcmovnbe
push
lcall
sub
push
dec
sbbb
or
xorb
insl
iret
test
cmc
add
stos
enter
cmp
or
mov
popf
xlat
cmp
addl
jo
and
or
ja
mov
es
xchg
push
dec
mov
xchg
test
int
dec
pop
mov
in
mov
pop
insl
enter
mov
or
cld
push
sbb
dec
rcrb
roll
add
add
xor
dec
loopne
pusha
shlb
fwait
jge
sub
push
repz
jp
mov
sbb
lods
xchg
push
dec
imul
mov
aam
scas
dec
scas
pop
pusha
pop
lcall
sub
add
imul
in
stos
inc
shlb
inc
nop
mov
pop
pop
jmp
and
fcompl
jmp
and
adc
lods
mov
insb
and
cltd
mov
pop
int
inc
cmpsl
daa
ret
divb
push
pusha
je
mov
jp
or
jb
popf
sbb
inc
push
shrl
dec
or
movsl
cmpsb
inc
es
sbb
pop
cltd
mov
ss
popf
adc
leave
dec
add
pop
xchg
pop
mov
mov
pop
sbb
adc
pop
andb
fucomp
scas
lahf
or
mov
fwait
xor
fmull
adc
je
aad
jle
push
in
cmpsb
push
pop
sbb
addb
pop
sbb
pop
xor
loop
cmpsl
sub
xor
mov
pushf
xor
mov
out
sbb
scas
lret
mov
and
pop
fistl
mov
dec
iret
adc
sub
lods
xchg
and
xchg
das
es
fistps
mov
push
test
movsb
xor
mov
push
xor
pop
jle
scas
out
rcrb
and
lock
icebp
rol
hlt
rcll
das
sub
xor
push
sbb
mov
jb
and
jl
inc
shlb
lock
and
pushf
fnstenv
push
push
mov
test
out
lock
add
bound
push
xor
orb
loop
or
mov
shll
inc
jl
jle
in
push
lcall
push
or
js
nop
xchg
fscale
jns
adc
fdivs
std
ret
dec
pop
and
icebp
loopne
jbe
arpl
push
lret
inc
pop
xor
xor
pop
cmp
loope
mov
rcrb
gs
inc
pop
inc
and
push
insl
inc
cli
leave
push
andl
aaa
shll
sub
push
xchg
pop
lcall
xor
out
push
pop
ljmp
dec
xor
inc
lcall
lods
mov
nop
or
sbb
and
rorb
cmp
cltd
cmc
int
out
pop
aad
shlb
xchg
fldenv
jle
lret
jp
mov
add
sti
gs
dec
mov
cmp
xor
setno
std
loop
popf
repz
pop
push
in
notb
ret
push
push
pop
cmp
insb
mov
fnsave
shll
inc
stos
mov
lcall
loope
sbb
jmp
ret
ds
pop
cmc
xbegin
xor
mov
jnp
sarb
add
add
mov
bsf
pop
xchg
pop
jl
mov
in
repnz
mov
mov
sti
sar
cmp
push
jmp
icebp
add
insl
arpl
adc
fs
dec
ret
fmul
xchg
mov
loop
adc
bnd
ljmp
je
icebp
add
or
add
fsubl
sub
int
sarb
lock
ja
fidivs
xor
pop
push
push
pop
mov
jno
lock
jl
adc
sbb
xor
xor
cli
and
es
xor
hlt
jno
nop
std
sbb
mov
pushf
push
cld
in
add
xchg
into
dec
int3
outsl
mov
popa
aas
xchg
sti
out
into
out
stc
push
inc
adc
lods
mov
rcrb
das
push
sub
in
into
pop
mov
xchg
outsb
in
push
data16
cmp
insb
lcall
rolb
xchg
mov
sub
daa
xchg
jo
xchg
inc
fnstcw
arpl
add
push
cltd
or
xor
fnstcw
mov
fists
inc
loop
pop
fildll
dec
divl
std
dec
fistl
test
aaa
xchg
les
lret
sti
jo
clc
mov
mov
mov
mov
xor
adc
or
pop
mov
fnstsw
or
outsb
icebp
jmp
mov
mov
cmp
out
inc
test
or
pop
aam
sarl
xlat
xor
ss
xchg
push
fdivrl
ja
mov
jp
sti
fdivrp
pop
push
jg
xchg
jnp
jnp
xchg
in
pop
cs
xor
mov
in
dec
adc
xchg
scas
aaa
push
jbe
in
cmpsl
orl
pop
cltd
int3
dec
stos
fisubs
in
orb
jno
lds
mov
add
mov
sbb
fs
and
mov
xchg
fsubrl
loope
pop
fldl
push
dec
cmpsl
cmpsl
divl
movsb
pop
out
ds
cmp
mov
pusha
jge
jne
mov
push
jle
sub
push
push
adc
nop
pop
stc
in
jle
sarb
enter
xorb
mov
scas
push
rcl
repz
fsubl
add
xor
cs
orl
dec
sarb
fstpt
jmp
and
fimull
mov
lods
cmpsl
add
or
cmp
out
mov
aas
and
jae
jle
jge
dec
sub
lds
and
push
imul
fmuls
push
pop
aaa
mov
xor
or
xchg
mov
mov
sahf
xchg
push
cmp
adc
ret
mov
pusha
insl
cmp
mov
pop
dec
gs
push
adc
cmc
add
mov
lret
stc
aam
mov
aam
int
jl
out
je
popf
arpl
dec
in
mov
jge
mov
scas
ja
mov
dec
les
lock
es
out
out
je
aas
push
dec
lret
add
inc
cli
iret
xchg
mov
xchg
or
nop
ds
fimuls
push
fidivrl
jne
sbb
filds
sbb
pop
dec
mov
adc
add
inc
call
lret
repz
push
xor
pop
scas
pop
out
insl
mov
push
jmp
in
lea
jl
gs
sbb
test
push
clc
xchg
hlt
dec
xor
test
sub
dec
into
xchg
int
inc
fs
mov
popa
push
push
xchg
sub
aad
push
mov
pushf
aas
xor
push
cmc
inc
mov
adc
add
push
jp
arpl
xor
sub
je
sub
push
test
iret
aad
adc
pop
clc
frstor
lcall
xchg
adc
enter
outsl
movsb
clc
sbb
push
xor
dec
add
arpl
jmp
popf
icebp
pop
adc
lcall
movsl
or
aad
ss
loope
sbb
push
pusha
jbe
dec
add
shlb
inc
xchg
cs
sub
jne
or
push
and
mov
ja
inc
cmpsl
js
inc
sub
sahf
stos
push
in
and
dec
bound
mov
push
and
insl
and
push
sub
insl
inc
or
int
jb
mov
mov
mov
inc
in
push
incl
mov
adc
adc
and
pop
mov
xor
scas
out
inc
push
mov
icebp
sbb
or
popa
sub
or
pop
add
lret
push
dec
mov
popa
and
pop
shll
lock
jbe
pop
arpl
stos
sub
pop
push
sbb
push
sbb
pop
icebp
lcall
xchg
movsb
sub
cmp
stos
in
lods
mov
pop
mov
and
push
sub
xor
in
jno
inc
orl
xchg
and
pop
repz
inc
push
inc
mov
in
hlt
and
jecxz
adc
mov
mov
outsl
js
lock
out
loop
add
mov
cmpsl
jnp
or
dec
daa
in
pop
imul
shll
iret
pop
incb
test
sbb
out
inc
sbb
dec
push
ds
aad
shlb
fbld
xlat
mov
repz
mov
lahf
xchg
jle
push
ss
jle
mov
pop
pop
enter
mov
imul
jnp
test
xor
data16
es
mov
repnz
rcr
push
lea
lods
cmpsb
scas
and
inc
xchg
cmpsb
adcb
or
cltd
pop
mov
sub
aad
cmp
adc
aad
push
lock
sub
repnz
clc
in
and
aas
mov
xchg
loopne
push
loopne
cld
out
pop
data16
inc
hlt
mov
pop
pop
pop
mov
cmp
push
xor
sub
arpl
mov
cmp
jnp
mov
scas
inc
rol
push
or
hlt
test
sub
test
sub
std
dec
popf
js
insb
push
push
inc
popf
jge
push
fbstp
js
jo
lcall
mov
lret
loope
out
sbb
mov
mov
popf
cwtl
sub
int3
push
call
and
aaa
call
mov
push
and
int
pop
loop
or
dec
out
clc
mov
push
adc
pop
shlb
xchg
mov
ret
icebp
sti
and
loop
cmp
add
xchg
iret
push
lds
mov
xchg
jbe
adc
jmp
aam
jg
stc
cli
fsub
or
cmpsb
testl
pop
test
sbb
add
aam
rcll
push
xor
ja
pop
lock
imul
jge
mov
lret
cmp
mov
and
dec
pop
xor
shl
sahf
stc
jle
subl
mov
aas
arpl
in
scas
stos
push
mov
cmp
inc
inc
inc
or
adc
ja
scas
es
add
lret
test
and
js
cmpsl
sbb
fcoml
sahf
and
jnp
xchg
sub
fsubs
or
and
enter
daa
xchg
stos
scas
mov
inc
sub
int
sti
xor
pop
and
cmp
arpl
call
pop
inc
cmc
pop
or
lret
rorb
mov
jne
sub
sub
insl
in
push
cmp
loope
mov
or
js
repnz
add
jno
jo
pop
dec
lods
loop
push
sahf
jnp
push
add
pop
add
mov
push
nop
push
lahf
xchg
cld
add
push
pushf
lret
and
fimull
dec
out
fldt
add
push
out
adc
adc
or
stos
movups
xor
je
or
addr16
cmpsb
loope
lods
test
xchg
lahf
loope
adc
lret
inc
xchg
mov
insl
in
dec
mov
and
and
mov
and
push
fildl
push
es
mov
push
xor
mov
add
jmp
add
mov
popf
mov
cmp
sub
xchg
sub
dec
insl
or
inc
mov
cmp
ret
xchg
add
fiaddl
nop
dec
sbb
adc
les
or
bound
adc
sub
lret
movsb
clc
pushw
and
ret
inc
call
jne
hlt
jo
sub
loop
addr16
inc
xor
and
pop
jno
xchg
dec
andl
popf
sbb
mov
pop
ljmp
dec
sub
jno
aad
fnsave
mov
addr16
std
call
push
inc
loope
jg
and
mov
cli
mov
mov
fsubl
int3
cmc
mov
stos
dec
imul
mov
daa
test
dec
pop
popf
test
inc
test
movsl
or
sbb
daa
icebp
adc
adc
push
cmp
cmp
inc
xor
loopne
loope
fistpll
pop
push
push
test
sbbl
or
pop
or
xlat
xor
cmp
xchg
inc
sbb
dec
adc
jl
cmpsb
fcomi
dec
pop
ja
mov
xor
outsl
xchg
lds
pop
pop
push
inc
push
test
pop
cmp
rcl
mov
push
fucomip
mov
rcll
xchg
repz
xchg
test
push
sti
fsubrl
aas
divl
mov
mov
shl
xchg
push
push
push
pop
mov
xchg
mov
jmp
test
mov
das
sarb
pusha
jbe
mov
cmp
mov
sub
dec
mov
and
jge
mov
cmp
inc
cmp
dec
fdiv
ficoml
arpl
or
sub
mov
es
sub
jmp
ret
test
flds
sbbl
inc
push
xchg
and
add
scas
jns
adc
mov
icebp
mov
dec
jecxz
movsb
in
adc
mov
or
add
das
imul
jecxz
std
pusha
mov
sbb
lahf
cltd
xchg
or
add
ljmp
push
or
mov
inc
ja
mov
aam
in
imul
sbb
fildl
cmc
iret
enter
arpl
test
hlt
pop
loope
int
mov
adc
imul
push
mov
popa
std
lret
cmp
push
out
xorl
xchg
mov
mov
lods
add
icebp
push
lcall
jb
es
test
hlt
loopne
sbb
push
stos
or
xlat
pop
mov
ret
xor
sub
out
ss
pop
in
call
in
hlt
decl
rorb
jp
sbb
repz
test
mov
int
data16
and
popa
xchg
lahf
lret
movsl
jecxz
out
gs
lcall
dec
adc
jle
push
xor
ret
cmp
sub
mov
and
out
xchg
in
jb
push
cwtl
sub
clc
dec
and
push
mov
psllq
adc
out
jno
sbb
sub
scas
fwait
dec
aaa
addr16
xchg
push
cmc
sub
imul
aad
pop
daa
push
insl
sub
loopne
int3
lret
inc
add
add
inc
mov
divb
cld
ljmp
push
shr
pop
sub
repnz
jp
cmp
es
jae
push
or
shl
test
cmc
mov
xlat
mov
popa
sbb
lds
cwtl
push
pusha
xor
movsb
test
test
jge
in
inc
dec
scas
addr16
pop
fcmovne
inc
leave
add
add
sbb
xlat
js
fwait
pop
xchg
in
imul
jb
xchg
lds
fisubrs
adc
sub
cmp
out
cmp
add
fwait
mov
cmp
sbb
mov
rcr
mov
int3
pop
dec
jecxz
jp
sbb
and
cmp
dec
push
sti
push
mov
lret
je
inc
popf
sub
mov
test
pop
dec
jmp
and
in
inc
xchg
orb
imul
js
jge
imul
adc
cmp
mov
pop
mov
out
outsl
cltd
outsl
push
sbb
int3
sbb
cmp
jmp
je
mov
addr16
xchg
jecxz
jmp
fs
jb
inc
jmp
cltd
or
and
out
popa
rcr
fsubr
ljmp
jnp
xor
sahf
imul
add
sub
sbb
pushf
insl
fidivl
mov
in
mov
sti
fistpl
cmc
or
mov
adc
movsl
jmp
cmpsb
pop
loopne
jno
cli
and
in
jge
dec
cltd
sub
mov
rcl
dec
rcrb
or
xor
xor
cs
mov
sahf
lods
inc
stc
mov
in
adc
fwait
data16
imul
push
leave
pop
aaa
adc
pop
jl
pop
mov
lods
cmc
cmp
pop
push
ja
and
mov
call
scas
push
in
pop
mov
js
adc
add
out
jne
mov
movsb
push
push
sbb
mul
add
lock
pushf
sar
aaa
sbb
std
push
sub
xor
or
add
bound
std
cltd
in
loop
fadds
lea
xor
callw
pop
test
sub
popa
into
daa
js
xchg
mov
or
or
pop
jnp
lret
stos
scas
cld
sbb
je
in
test
push
leave
inc
pop
push
fadd
jbe
out
movsl
pop
popl
jb
mov
xchg
mov
xor
jmp
ss
aad
rclb
ret
pop
popf
ret
fldcw
adc
and
add
cmp
jge
das
sbb
scas
fisubrs
sub
inc
iret
lods
push
mov
xor
sub
gs
push
adcl
add
mov
aas
lcall
in
jnp
adc
in
lret
ret
fistps
mov
clc
adc
cmpsl
shll
cmpsb
mov
xchg
xor
add
mov
lcall
cmpsb
push
push
in
jb
divb
lea
popf
xchg
push
jge
les
inc
scas
dec
add
orl
jle
call
xchg
iret
pop
fsubl
mov
xor
sar
loope
mov
mov
mov
out
pop
cmp
insl
das
les
pop
in
adc
cmpsb
mov
in
es
push
hlt
les
xor
int
mov
outsb
insl
mov
xor
test
inc
jne
push
sbb
cmp
pop
cmc
cmp
jmp
adc
ss
scas
ret
mov
pop
sub
adc
in
xor
lock
call
inc
shlb
push
sub
push
int
xlat
push
arpl
lcall
aam
mov
in
adc
sub
lret
mov
dec
dec
inc
dec
mov
mov
jle
mov
sbbb
inc
xchg
gs
mull
pop
mov
add
dec
movsb
les
jle
xchg
pop
leave
mov
and
and
mov
adc
xchg
call
outsl
iret
in
push
pushf
push
out
xor
adc
repnz
arpl
mov
in
ds
xchg
or
push
jbe
pop
fwait
mov
cmpsb
aaa
out
mov
jl
testb
popf
push
jmp
testl
mov
cmp
cmp
les
cmpsb
iret
and
xchg
jl
mov
pop
cmp
ja
mov
aaa
push
push
imul
int3
push
icebp
push
stos
or
pop
cli
data16
push
fmul
in
mov
lcall
rcll
or
into
lahf
push
ret
pop
hlt
leave
lcall
leavew
sub
mov
pop
jne
pop
enter
rolb
sub
jno
pop
pop
popf
or
std
mov
shlb
repz
or
mov
fdivl
lahf
inc
sbb
jno
xchg
repz
pop
jo
pop
rorb
mov
dec
or
int
push
bound
fstps
fcmovne
insl
fs
test
sbb
jecxz
dec
mov
xchg
push
mov
shll
repz
push
xchg
mov
mov
sbb
xchg
cmp
mov
lds
ljmp
sbb
and
inc
cmp
into
cs
aaa
xchg
sub
repz
mov
fbstp
push
inc
sub
xor
xchg
aam
adc
aam
and
out
xchg
movsl
test
je
lods
icebp
push
push
std
out
or
ret
cmp
and
int
test
xchg
sub
sbb
roll
lds
ss
loope
cmp
test
outsl
nop
mov
subb
jp
lods
bnd
adc
mov
in
ret
push
mov
mov
shll
clc
jg
xchg
mov
xor
std
ss
frstor
es
pop
inc
adc
or
rol
mov
xor
push
and
sub
push
and
pusha
or
cmp
mov
add
out
mov
imul
ja
rclb
inc
fistl
cmp
loopne
xchg
mov
into
and
and
pushl
ret
or
jl
jecxz
mov
xchg
fcmove
rcrb
sub
lea
lds
ljmp
jns
jmp
push
cmc
xor
push
sub
adc
dec
pop
cmpsl
mov
addr16
mov
or
jl
pop
cmpsl
notb
pushf
jb
mov
push
fiaddl
or
jg
mov
inc
push
jne
cmp
add
push
sbb
jl
stc
jmp
call
and
es
pop
fidivrs
daa
dec
std
daa
loope
testb
mov
daa
loope
push
mov
loope
xchg
movb
xchg
testb
cltd
movsl
jo
imul
outsl
dec
or
ljmp
xor
lods
fstenv
shr
sbb
adc
rcrl
repnz
mov
mov
lahf
mov
ds
jg
sarb
push
fadds
andb
sbb
leave
std
pop
mov
dec
mov
and
es
push
jecxz
mov
imul
arpl
loop
or
mov
imul
push
xor
ret
mov
add
sarl
cmp
lcall
mov
loope
dec
ret
bound
cmp
or
sarl
pop
xchg
arpl
in
mov
adc
daa
jl
adc
jg
in
fmul
dec
and
xor
push
mov
imul
repnz
sbb
or
mov
shrl
mov
setne
xchg
movsb
dec
fldenv
in
xor
leave
lret
mov
mov
mov
sbbl
mov
push
scas
shll
jae
sbb
sarl
ja
inc
dec
call
jae
adc
or
roll
int3
cmp
pop
test
cmp
fs
dec
pop
pop
out
repnz
nop
movsb
cmpsb
push
push
sub
data16
push
sub
xchg
and
das
pusha
outsl
mov
aaa
ljmp
jns
add
or
arpl
imul
pushf
push
negb
jb
rolb
xor
bound
mov
push
aas
insb
or
loope
sbb
inc
shrl
sbb
mov
sbbb
cwtl
or
jae
mov
out
jge
jle
mov
dec
push
jbe
jae
sub
jae
pop
jp
lahf
lahf
push
pop
pop
or
mov
loop
jbe
dec
push
xor
add
dec
movsb
leave
adc
and
pmuludq
repz
pop
out
xor
and
leave
mov
cmc
push
fsubp
loopne
lods
pop
inc
sti
test
jle
jecxz
fnsave
push
inc
lret
adc
nop
xchg
inc
jns
js
fdivr
xchg
xchg
cs
nop
mov
lods
popf
pushf
adc
cmp
jl
sbb
mov
mov
jne
fisubl
xor
and
repnz
call
and
testb
fisttpl
add
push
movsl
lret
pop
add
mov
adc
insl
cwtl
les
outsb
dec
pop
jp
and
sub
mov
or
loope
das
loop
lcall
push
mov
and
xchg
adc
out
xchg
ret
cmpsb
and
push
cmpl
mov
popf
pushf
dec
adc
cmpsb
sarb
test
out
ss
int
pop
fistl
and
mov
pop
repnz
xchg
iret
inc
daa
out
cmpl
jno
and
or
push
sub
cmp
inc
stos
les
lahf
mov
push
test
or
popf
or
cld
enter
ds
clc
cmpsb
jmp
nop
add
cmp
shrl
push
push
pushf
push
xor
cmp
mov
cs
fcomps
insb
and
aad
test
inc
xor
xchg
mov
mov
jg
mov
mov
pop
inc
cmpl
push
call
aad
je
popa
adc
xchg
sarb
cmp
xchg
scas
and
jg
add
xor
dec
outsb
stc
ficoml
jno
jl
cmc
scas
sub
inc
jae
addl
mov
push
out
add
cmp
xchg
in
push
test
fcmovnbe
mov
test
pop
outsl
add
add
test
ljmp
addr16
popa
and
or
inc
jb
xchg
insl
fwait
push
mov
or
dec
outsl
push
data16
lret
inc
add
mov
lahf
mov
mov
pop
inc
jb
loop
movntps
and
add
in
dec
hlt
push
mov
sbb
test
out
jge
jnp
daa
mov
or
outsb
cltd
push
loopne
and
mov
addr16
lahf
add
sbb
sahf
jg
jnp
sub
addr16
adc
pusha
mov
rorl
data16
movsl
xor
popa
iret
sbb
data16
cmp
hlt
sarl
sbb
inc
daa
pop
mov
imul
add
iret
pop
call
sbbl
out
nop
xorl
jge
pop
cltd
xchg
xchg
adc
add
imul
shlb
jns
mov
and
and
adc
pop
mull
fiadds
out
push
adc
pushf
pusha
rclb
add
mov
xchg
int3
je
hlt
xorl
xor
jmp
cmp
adc
xor
fstl
xchg
and
cwtl
stc
psllw
push
sub
adc
mov
mov
mov
inc
cli
push
addr16
stos
mov
aam
imul
push
movsb
adc
sti
sbb
popf
lahf
stc
mov
push
pop
and
cld
test
jne
leave
pop
popa
dec
pop
fsubl
xchg
shll
mov
pushf
xor
xchg
sar
rcrl
mov
mov
xlat
pushf
adc
xlat
mov
mov
push
ljmp
inc
adc
pop
mov
repz
in
push
and
adc
in
cmp
pushf
and
out
mov
or
das
into
and
scas
push
adc
pop
rcrl
pop
pop
adc
xor
data16
repnz
adc
xchg
adc
jo
outsl
cmc
out
push
daa
cmp
sub
sub
or
popa
jae
mov
loopne
bound
sarb
std
adc
pusha
xor
out
adc
cmpsl
stc
add
mov
fiadds
ds
mov
inc
ror
and
adc
pop
popf
movsb
mov
outsb
cmp
ficoml
stos
call
lret
xchg
xchg
or
xor
dec
inc
rclb
stc
xor
dec
and
das
aam
pop
inc
mov
repz
xor
movsl
lock
xor
daa
pop
mov
push
enter
xchg
cli
pop
fcompl
sub
fbstp
and
sbb
sbb
imul
outsb
roll
adcl
pushf
mov
push
fiaddl
lret
scas
mov
icebp
mov
pop
mov
sub
cli
loope
data16
inc
fstp
dec
les
mov
jmp
mov
clc
or
or
cs
xchg
jge
call
shll
push
stc
jmp
mov
cmp
sbb
jge
in
mov
rcrb
bnd
ss
add
loop
stos
xchg
push
mov
pushf
add
int3
xor
test
pop
jge
or
cmp
push
repz
sub
xchg
movsl
dec
imul
int3
leave
testb
pusha
fimull
fwait
es
cmp
ss
loope
dec
pop
inc
lret
mov
xchg
dec
jno
push
nop
xchg
cwtl
mov
shrl
add
faddl
fsubl
pop
pushf
mov
cmp
ret
push
neg
xlat
inc
les
sub
test
adc
sub
inc
mov
inc
clc
sahf
pushf
insl
or
leave
cmp
sarl
xchg
jns
test
outsb
mov
imul
mov
xchg
pop
cmp
or
in
cmpsb
push
xchg
mov
mov
cmp
aam
cltd
jb
pop
push
or
fcmove
jne
sub
out
push
gs
pusha
mov
out
jmp
into
jns
sbb
pop
popf
int
jg
idiv
in
mov
pop
cmpsb
push
push
test
xchg
mov
loope
je
mov
adcl
test
in
mov
xchg
jbe
xchg
sahf
jl
pop
lret
add
inc
pop
mov
pop
scas
lret
insl
xor
mov
jbe
dec
cmp
gs
ret
fcmovb
push
push
fisttpl
aaa
stos
inc
mov
lcall
pop
dec
rorb
jmp
int3
sarb
pop
mov
hlt
jp
push
addr16
mov
stos
movsb
sub
jns
into
lret
sti
arpl
daa
ja
mov
lretw
jns
cli
or
cmc
sbb
cmpsb
std
fidivs
sahf
add
jl
jno
dec
mov
xchg
popf
inc
jo
pop
scas
jno
add
shll
cmp
or
lods
cmc
les
movsl
mov
mov
lock
push
lods
add
std
stos
sbb
enter
aas
out
sub
lods
fdivrl
xchg
mov
dec
jmp
adc
mov
cli
fiaddl
pop
xchg
xlat
xlat
ds
push
sub
xchg
push
and
cmp
push
cmc
jg
pop
movsl
call
or
test
hlt
adc
addr16
ret
ljmp
movsl
pop
push
xor
int
push
lods
lods
pop
xchg
push
ret
rcll
or
test
pop
xor
jle
mov
pop
cmp
adc
jne
scas
test
loop
jns
das
push
into
ds
mov
adc
mov
test
xchg
and
fnstcw
nop
pop
mov
clc
mov
movsb
jnp
ljmp
popa
jo
or
add
cmp
inc
std
out
iret
out
jle
test
int3
je
dec
into
cmpsb
jbe
inc
and
xrelease
insb
repz
out
xor
aam
cmpsl
adc
mov
mov
cmp
dec
arpl
pop
stos
insb
roll
jnp
mov
repnz
into
add
mov
push
loope
inc
xchg
mov
and
mov
sub
out
repnz
jle
xlat
frstor
add
and
mov
push
dec
idiv
addr16
jmp
mov
mov
push
xor
add
je
mov
out
and
pop
aam
dec
inc
and
adc
and
stos
push
sub
pop
imul
mov
push
sbb
xor
inc
je
or
mov
rorb
ret
enter
add
les
xchg
push
neg
pop
repz
cli
adc
xchg
jecxz
jmp
ja
sub
imul
mov
cltd
push
jg
cmp
or
adc
pop
imul
pop
mov
xchg
push
cltd
jl
aaa
out
inc
shrb
dec
vpmaxsw
cmp
sbb
dec
inc
sbb
xor
inc
mov
xor
leave
ja
aas
jne
into
jnp
lds
cmp
cmp
pop
adc
fdivs
mov
cld
inc
jmp
fdivrp
out
enter
mov
pusha
add
push
call
shrb
ljmp
sbb
lret
dec
mov
xchg
jge
fidivrl
ficompl
dec
jnp
sbb
lret
pop
bound
inc
pushf
push
dec
stos
in
sbb
jle
lcall
not
mov
jnp
jbe
and
jecxz
jns
jb
push
mov
test
sub
sub
xchg
loopne
fisubl
dec
mov
in
arpl
in
dec
jb
push
push
jae
mov
cli
add
stc
cwtl
movsb
mov
xchg
in
jno
cmp
nop
mov
or
inc
int
aam
stc
lahf
dec
xor
push
xor
aad
call
fsubs
cmp
cmp
sub
int
pop
sub
in
sbb
adcl
jb
cmp
jle
jle
lahf
jl
jb
sbb
scas
or
test
pop
add
aas
enter
ljmp
mov
push
je
loopne
pop
in
push
push
nop
dec
mov
loop
mov
cmpsl
and
cmc
push
xchg
jle
xor
mov
stos
inc
ljmp
fisubl
mov
fwait
dec
in
dec
add
outsb
int3
sbb
pop
std
arpl
lret
arpl
or
sti
mov
cmp
cmp
xorb
xor
hlt
or
inc
aas
xlat
jp
pop
mov
pop
aam
out
ret
lock
pusha
xchg
sarb
add
out
jle
ds
adc
jge
mov
add
daa
jge
dec
inc
pushf
js
push
repnz
lret
shrl
ds
addl
cmc
inc
test
mov
mov
stc
fsubs
imulb
inc
jbe
sbb
inc
adc
insl
add
ficoms
sub
shlb
jg
sub
and
mov
mov
cwtl
data16
loope
mov
inc
repz
fdivr
ja
ficomps
stos
mov
lahf
cmpsb
sbb
pusha
xor
sbb
fcoms
mov
pop
ja
inc
or
pop
in
sbb
xchg
sbb
adc
sub
jo
push
jns
mov
cmc
xor
adc
mov
mov
lret
rorb
mov
fs
popa
mov
ja
filds
push
divb
mov
adc
pop
cmc
movsb
adcl
sub
fisttps
mov
xchg
popf
adc
jo
sti
rcll
mov
dec
das
outsb
or
dec
lea
dec
stos
push
cmc
inc
push
incb
inc
mov
insl
ljmp
adc
push
sti
les
loope
cmp
and
adc
dec
pop
cwtl
cmp
arpl
xchg
lcall
cmp
imul
adc
mov
inc
adc
pop
jmp
gs
mov
inc
inc
push
dec
fstl
lret
mov
xchg
sbb
inc
outsl
jge
out
jle
xor
xchg
rcrl
hlt
insb
xor
push
out
push
jns
or
mov
cld
pusha
push
pop
sub
or
sub
xor
dec
adc
ljmp
adc
les
push
cmp
pusha
movsb
mov
lods
inc
lea
addb
ret
loopne
and
mov
cmc
mov
inc
adc
cwtl
js
aaa
cld
fnsave
or
dec
rorl
js
pop
xchg
sahf
and
movsl
mov
pop
pop
adc
pop
xor
add
sub
xor
mov
ja
adc
cmpsb
mov
and
cmp
test
in
out
out
add
cmp
jg
sbb
push
xchg
sbb
pop
hlt
jecxz
subl
hlt
out
or
push
jl
dec
dec
test
inc
adc
lcall
mov
jmp
clc
scas
push
push
out
iret
cmpsl
aas
push
in
pop
pusha
mov
stos
mov
mov
pop
xchg
loope
push
push
dec
mov
outsl
push
dec
ret
jg
dec
mov
addr16
cmpsb
cmp
movsb
push
mov
ja
pop
aas
lea
cmc
lock
sbb
shrb
pushf
loope
adc
cmp
ds
mov
mov
cmpsl
pop
out
imul
mov
inc
push
fs
mov
cmpsl
loopne
jbe
cmpsb
push
cmp
adc
push
sbb
fadds
cmpsb
jge
data16
mov
fdivrs
lock
adc
aam
xor
loopne
xor
pop
mov
imul
aas
or
mov
adc
mov
mov
lret
sti
imul
ljmp
sbbl
sbb
nop
cmpl
mov
jb
gs
pop
mov
test
cmp
pop
test
stos
popa
xchg
je
inc
popa
xchg
pusha
mov
jb
push
pop
jns
xchg
scas
shll
push
sti
add
pop
shlb
fcom
pop
push
adc
mov
lahf
inc
cmp
push
push
sub
cmc
push
or
jge
jp
or
sbb
add
outsl
test
aaa
inc
push
mov
jge
xchg
cmc
mov
test
pop
jae
das
and
adc
movsb
out
pop
lods
pusha
iret
dec
jmp
mov
or
lods
jae
sub
mov
fildl
pop
adc
dec
sbbb
xor
push
dec
add
int3
mov
sub
scas
adc
cmc
mov
sbb
jmp
rep
sub
js
outsb
xchg
fs
fwait
int3
je
mov
loope
xor
popa
pop
inc
scas
push
inc
jp
mov
aam
testb
aam
leave
xor
mov
dec
adc
dec
jmp
dec
pop
or
cmp
fldenv
rcll
push
jmp
adc
xor
pop
mov
mov
fsub
mov
push
sbb
and
pop
pop
das
cld
aaa
mov
loopne
jge
inc
add
push
dec
xlat
fimull
mov
mov
push
test
addr16
arpl
or
test
sub
cmp
cli
push
xorb
cmp
stos
xchg
arpl
sub
push
mov
ds
hlt
adc
sbb
push
data16
mov
mov
ja
test
sub
add
rcrl
popf
rorl
mov
cmpsl
jge
nop
sub
in
imul
xorb
sahf
push
dec
mov
loopne
jne
cltd
xchg
push
aas
xor
addb
xor
fcoms
stos
aam
jnp,pt
pop
sub
test
sub
dec
ljmp
xor
push
adc
mov
jle
mov
lds
pop
dec
jle
sub
xchg
push
xchg
dec
in
repz
subl
aad
jmp
mov
std
pop
popf
insb
sub
xchg
cmc
jns
push
pop
push
add
sub
xchg
cmp
pushf
test
sbb
mov
decl
xchg
fldcw
test
pop
addr16
fwait
movsb
stc
scas
jb
lret
mov
hlt
pop
loop
adc
loop
or
xlat
bound
in
add
mov
fwait
test
push
and
add
ret
and
mov
mov
ds
mov
test
xlat
iret
mov
aam
mov
lret
sub
xchg
pop
jle
dec
outsl
sub
push
bound
adc
loope
sub
addr16
inc
sbb
mov
inc
fcompl
or
add
add
add
popa
mov
xchg
push
mov
repnz
dec
pop
ja
push
push
mov
rcrl
shlb
xor
mov
add
ds
inc
lds
ret
mov
mov
adc
jbe
pop
mov
data16
pop
pop
xchg
add
fstl
mov
stos
cmp
test
and
loop
insl
in
insl
mov
cmp
fldl2e
stos
js
pop
and
decb
sub
mov
jge
sub
sub
mov
or
cmp
notb
adcb
add
cmp
mov
nop
hlt
dec
and
pusha
fdivs
cmp
xchg
pop
pop
jmp
lea
jbe
jb
mov
xchg
cli
mov
inc
daa
push
lahf
jns
stos
nop
fsubrl
jb
lcall
xor
dec
cmc
xor
nop
push
test
insl
cmp
dec
ret
fisttpl
mov
add
lods
pop
cmp
movsl
test
cmp
or
aaa
rorb
dec
pusha
dec
mov
sub
scas
outsb
sub
push
mov
push
loope
sbb
mov
sti
roll
xchg
cmp
push
cmp
cmpsb
sub
jle
cmp
cmp
xor
cmp
sbb
out
arpl
and
ret
movsl
mov
jae
sub
or
icebp
jo
ljmp
mov
xchg
cmpsl
inc
mov
sub
idivl
and
add
pop
lea
add
into
xchg
imul
sbb
lahf
cli
fsubs
pop
pop
movsb
leave
add
outsl
ret
pop
jne
fidivl
adc
aam
xlat
pusha
inc
test
repz
mov
xchg
jnp
das
pusha
repnz
mov
dec
sbb
lret
push
or
sbb
mov
dec
outsb
movsl
iret
jnp
pop
mov
adc
nop
fidivs
loopne
stos
mov
jecxz
pop
mov
fwait
popf
push
das
mov
les
out
cltd
cltd
lods
les
int3
out
adc
xor
xchg
rcll
cmp
mov
shlb
add
dec
sub
mov
and
cmp
testl
insl
stos
sub
mov
add
aam
inc
cld
cmc
jno
sti
jo
insb
jecxz
ljmp
ja
out
push
jge
xorl
pop
nop
mov
dec
fldt
out
lock
icebp
mov
or
ja
mov
repz
aam
pop
js
jno
out
mov
bound
and
icebp
imull
jmp
scas
test
imul
jecxz
mov
jnp
es
jl
aas
sub
push
pushf
xchg
call
movsl
mov
iret
jne
adc
push
mov
sbb
jecxz,pn
aad
push
pop
xor
push
cli
pop
xchg
popl
mov
mov
bswap
cmp
fcompl
outsb
in
jl
fadds
cmpsl
or
clc
movlps
aas
jl
nop
add
negl
andl
mov
insl
dec
cmc
mov
fildl
adc
fdivl
in
clc
inc
jnp
jmp
sbb
aad
pop
movsb
je
pusha
out
insl
stc
cmpsb
sahf
js
mov
in
mov
jl
fstpt
movsb
push
add
loope
shrb
xor
sub
lods
xchg
mov
xchg
inc
push
jo
mov
jnp
gs
pusha
add
cmpsl
lret
dec
aas
cmpl
test
xchg
lock
sbb
int3
fadds
dec
sub
movsl
mov
adc
ljmp
out
mov
in
mov
scas
aaa
mov
cltd
sub
mov
push
pushf
and
nop
mov
pop
scas
jmp
popa
push
mov
xchg
adc
fidivrl
push
push
jp
or
mov
sbb
adc
popf
fstpl
fadds
push
sti
ret
mov
test
cmpsl
inc
push
pop
in
cltd
fcomps
mov
fistpl
mov
mov
mov
add
mov
jle
jae
sbb
jecxz
daa
js
xor
cwtl
clc
sbbb
aaa
inc
mov
mov
jmp
jnp
push
mov
enter
and
mov
cmp
push
outsl
inc
jle
mov
aad
xchg
imull
mov
push
aam
mov
sbb
pop
jmp
mov
shll
cmc
xchg
cmp
or
cmc
jmp
and
xchg
fsubrl
stos
lods
add
leave
adc
addl
adc
loopne
xor
enter
cmpsb
aaa
lds
inc
and
sti
push
push
movsb
jno
gs
or
scas
mov
adc
out
ds
outsb
in
test
sbb
adc
movsl
out
push
leave
imul
cli
push
adc
xor
adc
sbbl
rol
cmp
dec
or
add
push
lock
mov
fmul
xor
arpl
adc
cmpsb
jns
pop
sub
jbe
cmp
and
sub
insl
mov
or
fisttpl
out
cmp
shl
jnp
cmp
inc
es
ficoml
bound
and
inc
mov
lret
sbb
dec
jne
sbb
sbbl
jp
or
push
filds
add
push
lea
sub
dec
pop
imul
clc
push
xor
fsubrl
mov
xchg
inc
nop
int
and
pop
push
pop
mov
jge
iret
xor
sub
pop
mov
das
inc
mov
sub
sub
push
loop
dec
pop
rclb
push
movsl
xchg
mov
loopne
arpl
inc
inc
sub
pop
inc
sub
pop
jno
pop
and
mov
fsubl
repnz
add
sub
adc
mull
arpl
out
mov
jl
jl
gs
lcall
sub
arpl
in
mov
mov
pop
std
push
outsb
inc
pop
jb
aam
add
push
and
jne
sbbl
out
sub
in
hlt
and
aad
mov
test
nop
dec
sahf
rcll
push
cmp
std
jb
mov
enter
repz
add
mov
scas
mov
push
inc
cmpsb
shrl
fwait
or
inc
jb
lds
sbb
mov
and
xor
xor
shll
lahf
pop
scas
mov
inc
sub
push
sbb
dec
insb
dec
pop
sbbb
repz
bound
adc
or
push
push
pop
mov
jge
pushf
aad
test
sub
push
mov
lahf
xchg
mov
out
xchg
and
xchg
in
leave
xchg
and
ficoml
xchg
cmpsb
sbb
das
cwtl
insl
repz
cwtl
arpl
mov
ljmp
fwait
nop
int3
stc
pop
cmp
mov
aas
mov
sub
xor
fs
or
mov
mov
hlt
jmp
sub
xor
mov
stos
or
inc
xorb
xor
repnz
mov
cmp
xchg
mov
dec
inc
xor
adc
dec
mov
push
jae
inc
outsl
in
xor
fisttps
adc
pop
insb
cmpsl
mov
mov
jbe
mov
ljmp
ds
test
pop
ds
outsl
push
mov
sbb
insb
push
inc
cmp
cli
add
xor
ret
les
sbb
inc
dec
shlb
lods
xlat
mov
jg
xchg
repnz
add
addb
add
pop
aas
jno
mov
cmp
stc
rolb
scas
hlt
pushf
rcll
fs
adc
mov
nop
pop
mov
xchg
sub
loop
sub
xchg
add
mov
js
in
int3
out
fcoml
bound
mov
call
add
stos
lret
testl
andb
lods
into
dec
stc
addr16
mov
add
mov
ja
imul
scas
lcall
mov
popa
jg
es
aam
aam
add
jno
scas
xor
push
lods
leave
jmp
push
jb
jp
dec
test
push
push
jmp
int3
in
xchg
enter
test
test
adc
test
fs
iret
outsl
addr16
xor
pop
xor
test
push
jle
jbe
scas
repnz
out
push
and
pop
aaa
adc
jns
js
aaa
stos
add
shlb
or
sbb
mov
inc
out
test
fldl
fcoms
sub
lret
pop
jp
jmp
stos
test
sbb
ljmp
and
cmpsl
lock
jnp
cmp
sbb
adc
mov
pop
loop
bsr
shll
das
popf
push
sbb
sub
std
inc
xchg
imul
mov
testb
sbb
mov
sub
sbb
xor
sti
sub
sbb
daa
mov
data16
popa
xor
and
hlt
push
sbb
sarl
mov
adc
repnz
sub
sub
aam
jns
mov
stos
mov
into
fldt
push
cmp
xchg
and
imul
push
test
push
cs
aam
addl
test
movsl
jmp
cmp
jl
imul
mov
int
cmpb
mov
xadd
ret
lods
adc
out
sub
std
adc
pop
jbe
and
xor
shl
push
enter
xchg
test
int3
jmp
insb
lea
shrb
imul
movsl
sti
fmuls
in
lods
lock
pop
rcrl
orl
add
jbe
adc
dec
rcrb
mov
jb
pop
xchg
cmp
and
dec
mov
mov
ja
incb
out
push
es
repnz
push
push
xor
or
inc
mov
add
inc
jl
outsb
pusha
mov
stc
iret
xlat
icebp
imul
je
leave
cmp
shll
or
es
jge
out
lds
stos
test
out
mov
mov
adc
lret
test
fidivs
fwait
outsb
mov
cmp
sub
jno
das
mov
mov
shl
outsl
xor
test
addb
or
test
mov
push
mov
pop
xlat
sbb
fsubl
jecxz
mov
xor
movl
mov
xchg
fldcw
mov
data16
call
fisubl
push
xchg
test
lock
adc
add
leave
jne
dec
mov
mov
js
mov
cmp
stc
pushf
push
testb
inc
xchg
or
add
add
add
out
xchg
loopne
cs
xchg
mov
push
stc
dec
fdivs
sbb
or
xchg
rcl
jl
push
btrl
sbb
fwait
andl
mov
mov
lea
jmp
mov
jns
call
add
pop
adc
mov
loopne
mov
movsb
cwtl
faddl
pop
inc
decl
scas
or
xor
xchg
call
mov
mov
stos
shll
inc
jg
mov
lods
inc
aaa
adc
iret
leave
push
lods
add
add
repz
jae
inc
xor
mov
pop
stos
aaa
pop
popa
mov
filds
iret
adc
mov
inc
dec
mov
cltd
push
jge
orb
jno
shlb
loop
addr16
sbbb
rcrl
int3
in
push
ret
lcall
shll
xor
out
sbb
insl
mov
xchg
insb
ficomps
push
ret
daa
fsubl
jbe
cmpsb
mov
fldenv
adc
gs
sahf
cmpsb
lods
imul
mov
ficomps
in
cli
and
stos
and
inc
mov
fbld
add
test
aad
dec
sbb
in
ja
push
cmp
pop
push
mov
aam
add
dec
stos
int3
in
jmp
sbb
aaa
jae
jns
sti
aam
or
loope
stos
mov
ret
add
and
adc
pop
jg
cmp
mov
jns
jecxz
fcoms
rcl
mov
stc
out
test
push
push
jae
cltd
adc
out
pop
or
pop
mov
xorl
push
ret
frstor
cmp
or
aas
sarl
and
flds
mov
pop
inc
lahf
repnz
add
js
in
shrb
sarl
repz
movsl
inc
call
test
into
movsb
sub
fstl
sti
or
adc
rorl
pop
mov
mov
test
test
xchg
pop
xlat
das
or
mov
arpl
mov
mov
jb
cmp
cmp
cmpb
jl
repnz
repz
push
hlt
mov
insb
and
cltd
and
int3
mov
xchg
ja
fistpl
rcr
adc
jb
xchg
pop
sub
lods
dec
pushf
sbb
outsl
int
and
mov
add
dec
or
xor
xchg
mov
inc
fs
enter
jmp
mov
dec
xchg
mov
cmc
js
inc
stos
inc
push
mov
lret
push
pop
push
xchg
and
add
pop
arpl
pop
enter
jmp
mov
add
mov
xor
push
ljmp
pop
int
dec
test
jb
push
push
jmp
popf
dec
mov
nop
inc
mov
inc
push
insb
add
pop
outsb
lret
inc
filds
sbb
adc
push
or
cmp
push
mov
ds
mov
cmc
aaa
andb
dec
out
fadd
adc
adc
pop
pop
adc
test
and
and
enter
test
loop
imul
les
nop
negl
sbb
fadd
fisubl
mov
xchg
test
mov
mov
inc
rolb
dec
mov
popf
jno
push
xchg
jl
inc
dec
jg
test
push
dec
dec
add
add
push
iret
pop
dec
inc
xor
add
xor
rol
add
icebp
dec
jne
push
jl
outsb
fisubrs
les
std
int3
xor
xor
mov
outsb
fxch
xchg
sbb
stos
sbb
lods
mov
sbb
clc
push
adc
pop
jno
loope,pn
das
pop
xchg
outsl
mov
xchg
notb
out
lret
push
fdivrs
clc
out
addb
jno
push
xchg
and
out
sbb
or
stos
in
mov
jg
mov
dec
cmp
lods
jae
cmp
pop
xor
xchg
xchg
pusha
mov
cmp
lock
xchg
xchg
mov
arpl
fs
mov
pop
aas
test
aad
cmp
sbb
lock
sar
iret
gs
rclb
mov
jmp
loopne
out
add
mov
mov
enter
sub
hlt
jmp
dec
cwtl
adc
repnz
shl
sbb
out
rcrb
jne
ret
xchg
lods
jne
lea
imul
vpcmpgtb
pcmpgtw
aas
addr16
icebp
mov
push
push
mov
les
stos
iret
ds
push
and
cmp
nop
or
inc
lock
pop
cmpl
inc
add
xor
mov
fs
adc
xor
dec
pop
xchg
add
sbb
sbb
test
xchg
adc
sub
lahf
stos
cld
sbb
test
dec
xchg
arpl
cli
rep
call
sbb
sbb
mov
js
add
adc
mov
add
lock
dec
dec
add
or
cmp
cli
cmpsb
mov
arpl
orb
cmp
jl
sub
mov
sbb
jns
pop
sub
mov
pop
stc
jns
xlat
rcrb
push
pop
xchg
inc
xor
icebp
push
xlat
shlb
cld
ds
mov
jae
cmc
cli
add
jecxz
enter
mov
imul
fwait
pop
cmp
xor
fwait
sub
or
add
adc
jp
mov
out
ror
adc
std
add
mov
cld
jo
mov
mov
cmp
mov
mov
xor
in
repz
in
add
gs
inc
test
movsl
cld
aad
sub
push
ret
push
sahf
je
xchg
ds
sarb
icebp
std
pop
jge
bts
fisubrs
pop
aad
std
pop
xorb
in
mov
push
mov
add
and
into
cmp
lea
inc
mov
js
or
push
xlat
imul
fidivrl
cmp
jmp
les
push
mov
mov
inc
sub
shll
cmp
dec
push
or
popf
pop
out
adc
out
xor
jnp
out
int
shl
pop
pop
push
loope
shll
test
sub
xchg
push
fidivs
mov
bnd
test
lcall
sub
inc
jne
icebp
ss
jbe
popa
out
rolb
mov
mov
sub
int
int3
sbb
jge
lea
and
jns
push
test
ja
stc
sbb
pop
lods
jp
inc
jmp
sub
add
dec
cs
test
push
jg
xchg
mov
adc
stos
inc
out
inc
inc
add
nop
fcompl
sarb
push
negl
mov
aaa
mov
aad
fyl2xp1
dec
imul
jle
jne
out
testl
popf
or
mov
xchg
je
mov
test
pop
push
jmp
fstl
movsl
sbb
mov
nop
stos
lcall
shll
pop
or
jp
pop
jnp
aaa
into
pusha
test
in
push
aaa
sub
fbstp
je
sub
jae
cmpsb
cmp
test
loope
shl
dec
mov
mov
cmp
push
xor
mov
outsb
cmp
push
shrb
cmp
sbb
cmp
int3
push
scas
test
lds
sub
mov
add
and
loop
cld
xchg
inc
shl
faddl
xchg
test
mov
clc
jg
or
xor
imul
xor
and
mov
push
mov
sub
dec
mov
or
lret
mov
sahf
repnz
mov
adc
sbb
pop
loop
ljmp
sbb
inc
test
mov
mov
mov
pop
js
lock
mov
lock
sbb
scas
icebp
incb
icebp
mov
sub
inc
xor
test
cwtl
lds
sub
out
shll
xor
pop
xor
daa
cmpsl
dec
mov
dec
push
mov
fdivrs
push
outsb
std
les
int
mov
fidivs
xchg
push
pop
xor
push
fsubl
sbb
or
addr16
ja
push
mov
stos
inc
push
or
outsl
jbe
sti
dec
rcrl
int
xor
xor
sarl
es
je
insl
ljmp
inc
pop
clc
sbb
lret
pop
push
adcl
pop
aaa
lret
stos
xadd
mov
cmpsb
dec
jmp
mov
mov
add
adc
xor
xchg
adc
stos
fldcw
inc
push
xchg
xchg
lea
sub
in
clc
jns
adc
inc
into
pop
push
dec
and
xor
lods
or
mov
aas
into
mov
insl
xchg
aas
iret
sbb
mov
movsl
fisubrl
aam
sub
jbe
cli
in
xor
mov
aas
inc
cmpl
and
mov
dec
adc
aad
addb
movsl
leave
pop
dec
lods
and
bound
test
aam
jg
add
cs
addl
jbe
dec
xchg
mov
test
shl
in
mov
ss
adc
lds
mov
nop
out
bound
cwtl
push
ja
les
pop
cmp
sub
push
cli
xor
push
jmp
mov
mov
into
fcmovb
ss
inc
ja
add
inc
mov
mov
sbb
mov
mov
sarl
or
je
jmp
xor
cli
cmp
fwait
pop
mov
push
in
adc
iret
dec
ss
add
mov
stos
adcb
das
push
stos
call
cmovne
inc
jb
lods
inc
dec
mov
inc
add
fisttpll
jae
scas
scas
cwtl
cmc
jnp
test
jge
test
add
cmpsb
into
pop
cwtl
imul
into
cmc
aaa
stos
adc
xor
aam
in
pop
std
clc
lods
xchg
sub
stos
xchg
sub
movsb
outsb
sahf
ficoml
jmp
add
mov
push
mov
mov
adc
leave
mov
jmp
pop
sbb
popa
mov
sub
xor
or
dec
rorb
mov
fstpt
cmp
aas
jp
dec
popf
adc
jns
int3
pop
repnz
test
push
les
ret
cli
dec
int3
jle
sbb
rcl
popf
imul
ss
push
mov
ja
fs
xor
sbb
adc
sbbb
int3
out
les
jle
push
fwait
xchg
cmp
fbstp
lods
push
out
push
or
popf
xchg
jne
pop
adc
cwtl
int
jae
sub
dec
cmpsl
out
add
ds
and
pop
ss
repnz
lds
and
mul
aaa
mov
lahf
xchg
sbb
xchg
jo
push
jb
sub
push
data16
aas
test
fwait
push
push
std
filds
int3
or
push
arpl
xchg
mov
bound
lds
negl
std
mov
test
and
dec
aad
ljmp
sbb
repz
cmpsb
mov
scas
push
pop
dec
enter
mov
cld
negb
les
lret
shlb
mov
cmpb
fld1
fmul
push
inc
mov
xor
lods
pop
xor
jnp
push
fistpl
ljmp
fsts
es
pop
sub
push
pop
xor
outsb
cmp
in
movsb
pop
popa
shlb
lock
mov
pop
xchg
scas
test
ljmp
fwait
push
iret
inc
or
add
das
js,pn
pop
add
push
inc
xor
popf
pop
ret
sbb
jb
inc
push
shrl
xor
mov
popf
lods
lods
cmp
mov
xchg
in
sub
jmp
mov
stc
int
pop
jg
mov
loop
inc
push
xchg
int3
mov
hlt
xchg
cmpsl
pop
call
enter
add
out
inc
stos
jge
add
xchg
add
shll
sbb
repz
sub
mov
xor
leave
jmp
and
jp
gs
jl
push
shlb
pop
xlat
rcrl
outsb
dec
out
rorl
push
adc
insb
sub
int3
jp
sbb
ljmp
out
push
test
sub
imul
in
repz
jns
ret
sbb
sbb
ror
add
mov
cld
dec
sbb
mov
jg
push
pop
fmul
xor
xor
cmp
or
fisubs
add
imul
sbb
js
fcomps
adc
lock
fucomi
lods
pop
in
fstps
mov
dec
xlat
divb
ret
adc
mov
cmpsb
lahf
sbb
lods
add
dec
xchg
xor
neg
fs
jbe
cmc
xlat
lcall
ja
sbb
jmp
mov
mov
scas
movsl
inc
pop
dec
xlat
test
daa
mov
push
lret
out
sbb
sbb
mov
int3
xchg
mov
test
mov
sbb
jns
cli
hlt
ret
push
les
loop
jle
cmc
mov
dec
sti
pop
xchg
add
jecxz
loope
hlt
dec
enter
ror
jae
gs
dec
cmpsb
sbb
shlb
mov
dec
pop
mov
xor
cmp
sbb
pop
cmp
sbb
outsl
test
inc
in
fwait
cmc
test
sbb
mov
out
loop
sub
add
into
jl
cmpsl
lcall
push
push
setns
mov
repnz
je
inc
icebp
dec
cmp
xor
shrb
cmp
lret
mov
ljmp
xor
and
mov
jge
dec
aas
test
fdivrs
pop
sbb
mov
dec
xlat
adc
mov
int
ficompl
sbb
fidivrs
cmc
gs
dec
push
dec
int3
sub
adc
mov
dec
aas
push
out
add
fidivrl
mov
xchg
cmp
loope
imul
pop
cmpsb
fisubl
and
xchg
movsl
loope
xor
sub
into
int3
decl
ss
adc
ficoms
pusha
insb
inc
push
push
pusha
cltd
sub
xchg
jp
into
int3
push
lahf
popl
and
jne
mov
xchg
fsub
pop
xor
cmp
shr
xor
or
sub
shld
fidivs
pop
add
inc
nop
xchg
and
mov
inc
add
shrl
mov
xor
add
dec
mov
and
outsb
sub
test
add
imul
out
cmp
and
addb
mov
scas
xchg
outsb
xor
addl
inc
cmp
into
scas
jb
out
mov
mov
lahf
clc
jmp
mov
or
mov
mov
aas
add
add
inc
cmpl
stc
inc
sbb
dec
stos
cmp
push
jne
mov
call
fstpt
shl
dec
mov
xchg
lea
mov
cltd
dec
movsl
in
aas
std
js
call
out
mov
add
push
popa
les
add
xor
fwait
aam
jbe
jp
cld
jmp
cmc
xchg
xchg
fwait
or
repnz
addr16
data16
mov
mov
loopne
cmpl
xor
dec
mov
flds
xchg
les
sub
cmpsb
movhps
or
cs
sti
int3
cmpsb
or
clc
repz
lds
jge
imul
adc
push
lds
mov
sub
sbb
insb
pusha
insb
clc
clc
fadd
push
out
cmp
in
or
mov
es
ss
jns
ret
imul
cmc
dec
cmc
and
mov
pushl
push
lret
stos
dec
mov
fdivl
subl
in
addb
roll
mov
dec
fcom
mov
xchg
rorb
inc
mov
and
sbb
xchg
orb
cmp
dec
es
in
aaa
push
test
mov
imul
stc
cltd
xor
ss
and
cmp
in
pop
out
jae
push
cmpl
clc
jae
loopne
xorl
clc
rclb
shl
dec
pop
pushf
cmp
jbe
add
insl
pop
mov
mov
push
inc
push
pop
adc
sbb
cld
mov
nop
pop
int3
sub
arpl
imul
insb
mov
dec
das
jo
add
lret
out
fbld
pop
loopne
test
xchg
int3
out
icebp
xor
xor
push
push
filds
pop
sarb
xor
notl
ss
bswap
js
cmp
inc
xor
ds
or
ret
jne
js
fidivrs
xchg
cmp
adcl
mov
insl
movsb
mov
cmp
adc
xchg
and
pop
jp
mov
repnz
ret
popf
insb
cmpsb
shll
pop
inc
dec
mov
dec
int3
insl
dec
je
cltd
lods
aaa
dec
or
scas
lea
cmp
cmc
dec
jno
inc
loop
cmpb
pusha
cli
in
popa
add
js
lcall
dec
sbb
fildl
mov
mov
dec
pushf
lods
fisubrs
mov
sbb
iret
add
xchg
aas
test
dec
cmpsl
and
cmpsb
stc
fstpt
enter
xlat
lock
mov
xor
jbe
jmp
xchg
pop
push
adc
mov
mov
popf
sub
ficomps
pop
aas
leave
enter
das
jo
popa
adc
aas
inc
out
adc
mov
xor
add
testb
cmc
adc
xchg
jg
cmp
cmp
lock
mov
mov
jo
xchg
enter
iret
iret
xor
test
testb
mov
movsl
sub
jp
js
idivl
mov
add
pop
lret
stc
fs
shlb
popf
int
imul
mov
in
pop
cs
jns
movsb
ror
mov
push
popa
cwtl
stc
lret
sbbl
mov
inc
or
adc
and
push
stos
dec
out
jno
nop
xchg
dec
push
insl
sub
push
sub
sub
ror
inc
ficoml
xor
int3
add
fwait
addr16
lock
pop
sbb
mov
sub
mov
or
sbb
mov
and
inc
jnp
jbe
shrb
pop
dec
sub
sbb
add
dec
addl
sub
fisubrs
cmp
stos
mov
dec
dec
pop
fiaddl
xor
xor
and
mov
pop
aad
cwtl
jmp
xchg
xchg
cmp
aam
mov
rcr
out
jb
and
inc
lea
lock
mov
dec
fwait
ret
cmp
js
ljmp
and
bound
stos
mov
or
jge
lret
xchg
fs
pop
mov
out
mov
xchg
stos
inc
adc
adc
dec
cmp
loopne
rolb
orb
daa
gs
sbb
shrb
in
fidivrs
cmpsb
jo
out
enter
insl
sbb
jp
lcall
xor
incl
xchg
fwait
mov
cld
divl
sbbl
adc
out
mov
in
inc
sbb
mov
aad
shrb
inc
cmp
add
sahf
jle
push
push
xchg
and
out
cld
cmpsb
dec
pop
fisttpll
cmp
xchg
icebp
movsb
in
inc
mov
adc
push
lret
and
mov
jge
orl
dec
push
fs
lahf
inc
pop
push
cmp
insb
out
jmp
test
data16
mov
es
inc
or
xchg
mov
out
cmp
cwtl
inc
dec
shrb
imull
rcrl
sbb
push
dec
jle
inc
iret
mov
sarb
mov
les
fcmovnb
bound
dec
sahf
addb
or
sub
lods
pusha
setne
je
je
mulb
data16
xchg
dec
cmp
dec
setl
adc
lmsw
scas
call
dec
shrl
push
jns
inc
cld
sbb
or
repz
repnz
movsl
dec
inc
pop
clc
adc
lock
dec
pop
xlat
js
hlt
rolb
jne
push
jp
dec
ss
xorl
dec
xorb
cli
mov
pop
leave
pop
lret
jle
notb
leave
jecxz
rcl
xchg
or
movsb
push
push
jg
movsw
insb
lret
lcall
xchg
test
cmp
dec
mov
lock
in
icebp
add
outsl
bound
iret
jo
fsub
scas
lds
in
jne
push
repnz
and
or
mov
lcall
popf
imul
imul
dec
int3
aaa
scas
fnstenv
sarl
lcall
dec
sub
mov
push
add
mov
cmc
xchg
or
fldenv
fidivrs
lods
scas
pushf
pop
fbld
int3
lcall
sub
pop
inc
jl
dec
cmp
xchg
pop
and
lahf
jb
add
lret
ss
xor
jne
out
pop
movsl
ret
xor
xchg
aas
inc
ds
adc
cmpxchg
aad
and
sbb
hlt
and
cld
dec
rcll
scas
mov
push
cmc
xchg
pop
in
nop
mov
xchg
ret
js
jle
mov
and
stc
mov
insb
loop
cmpsl
in
nop
inc
stc
ja
sbb
pop
add
sbb
mov
cltd
pop
push
scas
sbb
insl
test
pop
xor
jp
sub
cmpl
stos
jge
xchg
scas
push
aas
mov
das
cmp
idiv
mov
sbb
lock
daa
call
jg
push
nop
dec
jb
jge
xchg
adcl
jne
sbb
in
out
and
push
xor
gs
stos
cmpsl
cwtl
mov
fiaddl
sub
pop
pop
or
push
jno
dec
sbb
add
xor
mov
mov
imul
clc
dec
popf
sarl
push
cmpsb
sbb
loopne
stc
dec
in
bound
outsb
ds
andb
data16
and
lock
lods
cmp
stos
and
ja
push
inc
out
push
and
xor
inc
clc
insl
mov
pop
mov
push
imul
pop
cmpsl
roll
pop
sbb
shll
mov
pminub
adc
jg
inc
stc
sub
mov
jge
in
sbb
pop
nop
std
mov
sub
icebp
pop
lock
mov
ds
jl
into
aad
adc
jecxz
out
and
mov
cmc
iret
arpl
jge
pop
sub
mov
mov
rolb
add
mov
std
mov
jmp
or
fmulp
push
shlb
pusha
out
xor
fiaddl
sahf
mov
cli
adc
mov
pop
xchg
pop
mov
or
out
pop
jl
stos
subb
das
jbe
int
dec
lods
shrl
fxtract
out
cld
xor
test
jno
add
cltd
sub
cmp
and
arpl
xchg
cltd
mov
jnp
dec
sahf
test
xor
push
dec
mov
push
and
das
sub
cwtl
cwtl
xor
mov
out
push
ss
xor
xchg
mov
into
pop
inc
les
or
inc
in
pop
adc
sub
in
shr
leave
test
mov
adc
inc
loop
bound
lock
cmp
daa
pop
js
aad
xchg
in
or
fdivs
sub
push
lods
pop
lea
daa
adc
add
test
insb
inc
jo
repz
rcr
outsb
inc
fcomip
pusha
push
and
cmp
xor
pusha
loope
addr16
insl
dec
jmp
ja
xchg
repnz
hlt
cmp
test
ds
mov
inc
ja
js
lds
imul
lods
ror
psubw
popf
or
mov
pop
movsl
shr
in
fwait
clc
mov
in
mov
xor
adc
mov
and
jl
mov
jg
scas
cmp
xlat
jg
cmp
jnp
xor
lods
ret
mov
into
pushl
cld
inc
and
add
xchg
outsb
in
dec
in
mov
cmp
dec
scas
test
stos
mov
lcall
mov
notb
sub
mov
inc
imul
xchg
inc
repz
incb
cmp
test
jnp
lea
popa
adc
cmp
stc
cmp
mov
rcrl
dec
pop
and
imul
push
inc
pop
outsl
insl
int
jp
push
jp
or
add
pusha
aaa
fdivrl
in
and
fisubl
lea
gs
pop
jl
inc
mov
add
xchg
pop
ja
jnp
mov
movsb
fnstenv
loope
xchg
repnz
mov
push
sbb
pop
sbb
or
push
inc
mov
cmpsb
aam
cmpl
pop
xor
mov
idivl
jl
cmp
rcrl
xchg
xchg
and
or
xchg
clc
lds
shl
sub
lahf
or
fs
xor
jmp
xchg
xor
imul
aad
adc
adc
add
lea
inc
and
sbb
push
in
movsl
add
pop
imul
nop
inc
adc
inc
xor
cmpsl
add
or
popf
sub
jne
fwait
inc
pop
xchg
out
fcmovu
adc
dec
cmp
dec
fwait
adc
cmpsl
outsb
mov
pop
fdivs
pop
add
sub
stc
add
push
inc
cmp
adc
iret
fst
ss
in
push
mov
mov
test
cmp
push
adc
imul
test
sti
sbb
cmp
fnsave
movsb
jbe
sbb
mov
lret
sahf
lahf
xchg
mov
pop
inc
sbbb
cmp
mov
shrl
bound
mov
movl
es
loopne
mov
imul
xchg
mov
cmp
jae
std
sarl
in
pop
je
jmp
xchg
fdivp
mov
imul
jnp
int
sbbl
sbb
fs
mov
lret
daa
out
lods
test
cwtl
ja
sub
out
movsb
pop
xor
mov
sbb
pop
idivb
orb
and
and
jl
andb
cwtl
mov
aaa
arpl
out
and
je
push
out
ret
iret
js
pop
imul
adc
cmp
sub
arpl
shrb
dec
aam
cmpsb
in
mov
jp
ret
add
stc
fildl
sbbb
push
sub
test
push
fs
or
xchg
popa
test
icebp
xor
loopne
test
loop
lea
fwait
cmp
mov
add
and
jb
imul
mov
rcll
cmp
jecxz
jb
std
push
and
daa
or
sbb
scas
dec
ds
xor
inc
push
sbb
jnp
ret
push
ss
inc
bound
pop
mov
movsl
das
fistpll
ret
jo
outsl
sub
or
dec
mov
icebp
mov
push
xchg
cmp
or
mov
ffreep
lret
sbb
cmc
xor
nop
and
mov
sub
mov
scas
aaa
mov
imul
mov
in
inc
dec
lea
mov
fistpll
xchg
add
imul
mov
push
popl
test
push
idivl
sub
popf
mov
inc
test
rorl
jp
xchg
gs
int
cwtl
mov
inc
test
inc
mov
in
push
inc
or
jne
or
add
push
and
inc
sub
imul
and
sbbl
xchg
pop
jne
orb
popf
mov
sub
mov
sub
arpl
outsl
adc
jbe
mov
mov
jp
adc
insl
out
sbb
idivl
lret
and
in
cmp
sub
cwtl
mov
dec
adc
inc
jmp
clc
lahf
sub
dec
stc
aas
aas
stos
lret
cld
mov
pop
or
jmp
pusha
mov
nop
lds
xchg
shlb
push
sahf
jne
mov
jbe
gs
in
vmread
hlt
pop
insl
outsl
out
mov
int
sub
loope
xchg
sbb
sub
or
cmp
jb
ret
movsl
loopne
push
and
pushf
inc
mov
ja
dec
xorb
jmp
out
sbb
stos
pop
adc
xchg
and
loope
test
push
xchg
push
fcmovnu
jo
inc
sbb
icebp
xchg
mov
sub
xor
js
out
cmpl
rorl
sahf
sub
push
je
mov
pop
stc
cwtl
adc
movsl
les
std
lahf
cli
jbe
push
dec
movsb
mov
int3
sub
mov
or
ds
sub
add
loopne
pop
cmc
cmp
rorb
mov
ret
mov
mov
xchg
rcr
pop
or
or
pop
fldcw
dec
inc
add
testl
out
pop
mov
faddl
lods
jae
mov
sbb
subl
movsb
inc
test
mov
dec
cli
ja
pop
push
inc
ret
jnp
jbe
aaa
repz
shrb
mov
mov
out
div
jge
mov
pushf
mov
sbb
adc
js
xchg
cli
push
sbb
out
adc
jge
jns
pop
sub
ljmp
add
popa
lret
lcall
sub
add
bound
mov
xchg
loope
jae
xchg
stos
imul
scas
add
int3
outsb
test
xor
jo
out
add
cmp
sahf
sbb
test
addr16
test
xor
jg
xorl
push
stos
or
rorb
push
mov
insl
jg
cmp
push
mov
js
pop
leave
mov
outsl
sahf
cmp
sbb
mov
mov
pop
cmp
iret
ja
mov
mov
mov
cld
es
loopne
xor
jl
xor
shrl
insl
sub
pop
sub
fdivrp
stc
pop
sub
insl
push
icebp
cld
es
shll
xor
mov
sub
push
test
adc
dec
cmp
fsubl
rol
jae
and
jo
shl
inc
add
xor
push
dec
jmp
push
or
leave
jb
ds
neg
test
mov
and
pop
mov
sbb
das
rcl
lods
mov
bound
add
pop
lahf
push
ret
imul
jae
push
pop
push
pop
jae
aam
out
in
mov
mov
inc
adc
lods
push
int3
cmp
mov
sub
inc
add
and
cmc
and
mov
mov
pop
pop
stc
pop
aam
jae
fbld
sti
leave
pop
add
loope
arpl
and
sub
push
pop
jmp
inc
subb
ds
iret
pop
mov
push
mov
cld
test
scas
mov
mov
jae
pop
loopne
xchg
stc
in
ds
mov
fistl
xchg
cmpsb
aam
xchg
inc
std
or
sub
dec
jp
jb
adc
out
cmp
shrb
popa
out
call
mov
loope
or
unpckhps
data16
dec
push
xchg
call
orl
jo
popa
cwtl
pop
pop
pop
cmp
lds
lret
push
scas
aad
aad
mov
fs
mov
mov
push
push
xor
pop
mov
xchg
out
pop
das
mov
fs
cmp
scas
mov
sbbl
xchg
adc
ret
inc
ja
test
push
lds
loop
add
xchg
adc
loopne
fnstcw
push
int
stc
dec
std
xor
xor
int3
ljmp
push
mov
cmpsb
or
dec
push
or
mov
push
adc
pop
pop
test
adc
mov
cmp
testl
ret
cmp
pop
and
and
popl
push
ret
outsl
mov
int
repnz
pop
cmpsb
pop
fdivr
xchg
sbb
lcall
pop
ret
stos
push
xchg
cmpsl
pushf
xor
or
mov
xchg
das
je
scas
aam
inc
jge
popl
inc
pop
jle
in
add
inc
cltd
in
jle
or
aad
ja
data16
adc
mov
stos
adc
pop
sbb
pop
push
mov
jle
sahf
dec
mov
arpl
lods
push
test
in
jno
pop
aaa
pop
mov
outsb
mov
dec
imul
fldl
mov
in
sbb
decb
nop
sahf
mov
jae
pop
fstl
insl
xchg
add
mov
pop
scas
popf
lods
movsb
mov
cmpl
rcrb
inc
push
adc
imul
hlt
cmp
lcall
sbb
pop
sbb
ds
sbb
cmpb
sbb
jne
cmp
add
mov
test
or
loop
icebp
js
out
in
mov
out
adc
xor
mov
jb
fldl
pop
stc
sahf
mov
mov
repnz
add
and
cmp
pop
rcl
xlat
arpl
out
faddl
add
and
or
dec
xchg
mov
je
adc
cmpsb
mov
mov
clc
std
call
add
adc
add
movsb
loope
push
cmc
inc
mov
fdivrs
aad
inc
sub
test
inc
xchg
cli
pop
inc
mov
loopne
pop
cmp
sbb
xor
aaa
sub
rol
stc
addr16
inc
imul
call
pop
xchg
lcall
pop
xor
dec
call
mov
outsl
xchg
sub
xchg
jg
movsb
pop
addb
sahf
adc
shll
dec
rep
mov
repz
cld
daa
and
out
xor
adc
test
das
fimull
xor
cwtl
add
jne
sub
xchg
lcall
ret
mov
add
xchg
sub
dec
int3
cld
inc
test
popa
movb
xchg
fwait
arpl
mov
mov
fsubl
mov
push
sub
int3
xchg
scas
add
xor
push
mov
test
int
push
stos
mov
xlat
shlb
xchg
xchg
pop
hlt
push
sbb
or
push
out
cli
fdivrl
xchg
out
rcl
mov
aas
adc
xchg
mov
fisubrs
push
xchg
mov
xor
mov
lods
inc
sbb
sbbb
dec
cmp
adc
out
pop
xorb
inc
fs
rorb
jmp
push
and
and
mov
inc
pop
xchg
sub
sarb
push
dec
add
or
pop
out
ljmp
push
jecxz
cmp
add
lods
jo
lods
mov
test
insb
inc
cwtl
dec
jge
test
cs
dec
sub
loopne
mov
inc
jae
jge
shrb
jne
sti
out
add
add
sbb
push
cmp
fcoms
outsl
test
mov
test
aam
rep
pop
sarl
or
call
jp
ss
nop
clc
sub
imul
mov
mov
imul
cs
dec
bound
pop
ja
ljmp
cltd
mov
jb
cld
popa
arpl
jo
jp
dec
pop
in
add
popf
fs
int3
mov
add
fidivrl
mov
cmp
in
icebp
pushf
leave
or
lock
shrl
test
dec
aas
jbe
dec
or
jo
mov
sbb
mov
aam
and
push
movsl
call
fmull
movsl
mov
arpl
pop
jbe
pop
cli
sub
dec
mov
pusha
adc
stos
pop
repnz
repz
add
push
fs
rolb
ss
rcll
push
aam
pop
cmp
test
js
adcl
ret
stos
cmp
mov
push
jecxz
xor
test
mov
add
or
pop
sarl
mov
cld
mov
push
xchg
jp
sbb
jo
and
insb
pop
and
or
decb
cvttps2pi
mov
movsb
pop
repz
call
mov
and
add
into
push
xor
lret
nop
out
xchg
ss
xor
sub
int3
outsb
push
push
les
stos
jp
push
fcom
dec
jnp
imul
repz
cmp
shll
gs
pushf
mov
ret
or
int
mov
int3
add
jne
jg
jae
iret
popf
bnd
push
daa
stc
sbb
scas
loope
data16
insl
icebp
sub
jo
inc
ret
hlt
or
sub
xor
test
pop
fldt
mov
xlat
shl
push
lret
pusha
bound
pop
fimuls
cmpsb
mov
mov
jnp
xor
lret
jl
outsl
fwait
repnz
pushf
clc
xchg
adc
sbb
xor
sub
int
sub
fbstp
ss
mov
ja
aas
jecxz
cli
mov
loopne
int
and
and
jecxz
ss
addr16
jg
rcrb
jmp
mov
rorb
dec
aas
pop
mov
movsl
repnz
fdivl
adc
jle
pop
movsl
cmp
stos
cli
adc
rolb
test
shrb
push
inc
fs
inc
es
jmp
xchg
popf
dec
cli
fwait
xor
sahf
jo
jecxz
fsubrp
sbb
mov
data16
push
inc
popa
adc
pop
inc
and
movsl
fcoml
pop
dec
dec
xor
bound
rclb
scas
fisubl
insb
mov
call
xor
add
arpl
sbb
pop
mov
bound
cmp
xchg
scas
mov
xor
sbb
repnz
insl
sub
push
cmp
mov
sub
sub
aas
jne
dec
sbb
jle
mov
stos
dec
sbb
xchg
pop
push
mov
cmp
inc
jp
mov
xlat
dec
outsb
cmpsl
jg
movsb
pushf
sub
xchg
movsb
push
call
enter
test
fildl
mov
dec
mov
pop
repz
pusha
inc
out
cmp
cmpsb
hlt
mov
out
out
aam
outsb
add
pop
xchg
insb
shll
dec
inc
sub
mov
mov
xor
xor
test
push
push
inc
jno
jl
lock
cmp
jecxz
push
ror
dec
fildl
jae
push
mov
jmp
mov
lret
and
pop
repnz
addr16
xor
aas
in
data16
fistpll
push
push
movsb
js
outsl
fidivl
mov
movsl
arpl
fidivrl
jno
es
sub
jmp
imul
or
fwait
inc
dec
in
push
stos
popf
adc
cmp
sahf
push
jae
insl
out
push
aad
dec
cmp
pusha
mulb
cmp
dec
xchg
xor
js
stos
lds
mov
arpl
push
gs
push
es
cs
test
push
fnstenv
imul
je
test
jns
in
mov
add
fcomip
add
test
adc
arpl
pop
jmp
clc
xchg
adcb
cmp
nop
lret
dec
addr16
fnstsw
push
insb
jns
jp
jnp
mov
scas
dec
mov
into
push
xchg
push
in
mov
mov
repnz
test
mov
push
cmp
jae
popa
mov
jno
mov
and
in
je
ds
es
bound
psraw
pop
jge
rol
pop
or
inc
in
daa
test
movsb
out
push
xlat
mov
mov
cltd
adc
jge
mov
mov
mov
inc
lods
and
dec
pop
cmp
push
out
xor
xor
xchg
std
fidivl
push
bound
xchg
lea
adc
jns
dec
push
sti
test
push
out
or
mov
or
push
leave
xor
cli
pop
jnp
shll
sbb
popf
jle
out
push
push
lahf
sub
cmp
mov
inc
leave
inc
ret
ficomps
aam
cmp
out
movsl
mov
pop
or
lcall
pop
xchg
rorl
jns
aam
mov
xor
ret
jmp
stos
pop
xchg
popf
aad
data16
popa
test
mov
xorb
fldenv
jo
stos
ficomps
hlt
loopne
adc
aaa
subb
or
test
jbe
popf
leave
cmp
in
jge
mov
cmpsb
jl
xor
jbe
pop
divl
cmp
dec
sbb
iret
sub
sbb
sbb
lds
add
dec
stos
xor
jae
and
pop
mov
iret
ds
xor
or
outsl
loopne
pop
outsl
pop
cmp
aas
xor
cmp
xchg
mov
movsl
add
nop
cli
rcrl
jae
cmpsl
lea
lea
stc
nop
js
xor
js
ja
mov
in
mov
stos
pop
dec
jbe
sub
mov
push
jle
sbb
jl
mov
xor
lcall
inc
adc
arpl
out
in
jecxz
es
inc
adc
inc
mov
sub
sbb
sbb
pop
stos
aas
in
lret
cmpsb
pushf
mov
pushf
add
xchg
dec
or
mov
jb
mov
mov
push
mov
data16
push
loope
jp
inc
lret
lret
sbb
xchg
xchg
js
mov
seta
cwtl
insl
fildl
ds
jns
call
xchg
push
sub
int3
rcrl
sarb
aad
or
outsb
lcall
pop
mov
stos
push
sub
daa
mov
inc
and
cltd
cmc
outsb
push
popf
outsl
add
jno
or
mov
mov
out
jmp
mov
mov
mov
out
in
push
jno
cmp
adc
imul
mov
xchg
dec
xchg
xchg
xchg
ja
push
test
adc
mov
cmp
das
push
mov
ss
sub
add
cmp
lret
sti
lods
push
into
sarb
inc
cld
orb
adc
cmp
out
ds
js
inc
lea
hlt
stos
mov
fcomip
or
shlb
ja
adc
or
xlat
push
push
loop
push
insb
repnz
xchg
push
xchg
jnp
xchg
add
mov
lea
enter
jl
ljmp
push
jne
shrl
es
dec
pop
ficomps
ja
out
lock
cmp
js
lret
insl
mov
add
mov
cmp
outsl
xchg
das
push
and
out
jnp
in
fisubs
es
in
testb
inc
push
pusha
push
sub
xchg
test
dec
andb
adcl
mov
dec
sub
scas
push
fmull
inc
nop
fdivr
sub
js
not
ret
mov
inc
pop
subl
jbe
mov
ret
push
in
hlt
xchg
mov
pop
mov
xchg
xchg
add
movsb
dec
loop
dec
cmp
inc
out
sbbb
cmp
into
stos
cs
lret
xchg
je
and
call
fwait
dec
sti
arpl
out
cmp
xchg
dec
inc
aas
mov
cli
repnz
mov
pop
adc
data16
jb
adc
rcll
popa
xlat
cmc
push
inc
insl
maskmovq
mull
push
push
nop/reserved
adc
mov
pop
mov
or
cmp
ljmp
inc
fwait
stc
cs
ss
lods
mov
pop
or
mov
jl
mov
or
outsl
pop
pop
mov
shll
sub
popf
popa
pushf
test
pop
jl
int
pop
loop
jmp
pop
scas
js
dec
stc
dec
pop
xor
jp
pop
jecxz
dec
andl
adc
xor
outsb
mov
jbe
jecxz
icebp
mov
mov
fnstsw
je
xlat
push
lret
iret
mov
xchg
pusha
test
into
rorb
lods
sub
scas
insl
cmpsb
int3
jmp
pop
ret
insl
xchg
xchg
mov
gs
sbb
and
int3
push
push
mov
cmpsl
js
xor
aaa
stc
jge
inc
pop
scas
push
ret
imul
iret
les
xchg
and
and
add
mov
lcall
es
xchg
push
repz
enter
xorb
in
sub
dec
lcall
push
mov
int
add
or
lret
jp
mov
mov
add
addr16
inc
out
add
push
loope
pushf
int
ret
ret
in
sub
or
push
xchg
pop
orl
push
add
mov
aad
xlat
out
push
dec
lret
and
and
sub
test
inc
test
jbe
push
ss
in
cmp
mov
adc
fwait
ss
jne
out
clc
xchg
xchg
mov
jns
out
or
inc
insl
pop
mov
adc
xor
lock
mov
mov
xchg
cmp
leave
xor
into
pop
insl
lcall
int
or
cli
push
stos
call
xchg
xor
notl
jmp
jns
sub
push
cmp
pop
outsl
push
fisubs
call
or
pop
xor
pop
lods
sub
dec
mov
lahf
fldt
leave
push
into
in
jg
fdiv
loop
mov
pop
and
repz
repnz
loopne
push
loope
adc
jecxz
mov
and
test
clc
jl
inc
add
jnp
adc
mov
fs
rcrl
pushf
aaa
push
dec
iret
and
std
jns
addr16
xchg
js
mov
movsl
add
or
push
adc
fcmovnb
mov
leave
rcll
xor
add
out
jg
pop
testb
xor
lahf
and
sub
cmp
popf
xlat
cmovle
iret
int3
in
icebp
mov
sub
inc
rcrb
cltd
popf
jle
jo
nop
lret
cltd
pop
fdivrl
movsl
mov
dec
pushfw
pop
mov
dec
into
mov
xchg
xchg
aaa
xchg
pop
fsubrs
inc
push
cltd
out
ljmp
imul
fisubrs
pop
or
insb
popa
in
scas
xchg
jmp
add
xor
sarl
insb
fadds
push
dec
mov
dec
rolb
ja
mov
cmp
sub
cs
xchg
inc
jae
push
test
and
jl
pushf
xchg
outsb
inc
aas
ljmp
fisubrs
in
push
rcl
mov
dec
ss
pop
dec
shlb
lcall
lret
cwtl
and
xchg
xor
mov
test
es
jge
mov
in
imul
pop
test
xchg
cmc
lahf
lods
test
leave
mov
and
pop
add
mov
fs
rolb
push
mov
pop
pop
or
jle
insl
and
leave
or
jge
stc
xlat
movsl
xchg
dec
xlat
mov
mov
arpl
lock
imull
out
mov
sti
or
imul
dec
ss
rcll
or
and
push
outsb
cmp
movhps
adc
sti
es
in
out
jne
scas
mov
add
sub
sahf
inc
test
int3
dec
jmp
mov
and
cmp
ljmp
cli
gs
xchg
push
mov
adc
lock
and
and
mov
push
cltd
idiv
pop
shl
adc
or
add
lock
lret
mov
pushf
insl
sahf
loopne
push
cmp
lods
repnz
repz
or
inc
stos
mov
stc
inc
pusha
je
sub
inc
imul
mov
jnp
jne
ret
cmpsb
enter
imul
fwait
rcll
adc
ja
test
and
stos
ss
test
push
sub
test
add
mov
dec
lds
in
fisubrl
pop
mov
mov
in
pusha
imull
fsubr
inc
or
push
ss
mov
movsb
add
xor
mov
ret
leave
pop
xor
push
and
aaa
dec
rcrl
adc
insb
cmc
mov
je
insb
jg
jg
xor
out
and
push
dec
pushf
xor
movsb
sub
cmpsb
scas
test
dec
lods
fiaddl
pusha
iret
cs
sahf
mov
fnstcw
jno
xlat
add
adc
dec
das
out
dec
adc
jge
xchg
cmp
push
leave
out
fiadds
test
or
sbb
push
dec
or
jbe
fldt
push
mov
and
inc
cs
adc
popa
ja
int3
cs
dec
mov
in
add
sbb
adc
lea
in
inc
andl
daa
and
jp
mov
add
mov
rorl
push
in
dec
ret
jle
cmp
inc
subl
cmp
pop
push
into
pushf
and
pop
cltd
movsl
pushf
xlat
jl
sub
sub
movsb
mov
arpl
mov
lcall
jnp
xchg
mov
pop
inc
inc
jb
jbe
xchg
mov
xchg
imul
gs
xchg
scas
js
or
pop
adc
push
pop
test
jbe
sub
leave
mov
sub
jecxz
adc
or
mov
pusha
fisubs
fsubl
add
dec
jmp
insl
fimull
inc
jge
rcrb
xor
bound
dec
lahf
imul
frstor
dec
xchg
add
loope
jge
inc
mov
rcrl
mov
mov
mov
cltd
mov
popf
xchg
clc
in
jl
mov
repnz
fiaddl
mov
sub
push
and
or
ret
stos
xchg
jo
gs
dec
mov
push
mov
aam
xchg
stos
pusha
int3
or
inc
ljmp
stos
mov
outsl
ret
pop
push
and
dec
mov
xchg
rcl
add
fisttpl
fnstsw
jmp
lods
inc
inc
movsb
jmp
loopne
aas
inc
or
movsb
lods
cwtl
or
jne
rcrb
sbb
negl
and
stos
xchg
cmpsl
inc
imul
cmc
adc
pop
inc
mulb
xchg
adc
test
and
lea
add
cltd
push
call
sub
mov
mov
mov
imul
sub
shl
in
adc
loopne
xchg
dec
mov
pop
jg
inc
mov
mov
sub
sub
add
push
leave
in
mov
pop
push
mov
add
out
test
rcl
jb
rcl
push
das
jo
xor
add
mov
mov
mov
jmp
cmp
fisubs
cs
and
mov
nop
push
adc
loope
mov
xchg
cwtl
push
inc
push
dec
popa
add
in
lods
push
add
int3
pop
rcrb
roll
addl
loopne
lods
ret
push
sub
leave
sti
jl
push
lods
push
cmp
xchg
cmpsb
dec
sub
ret
aad
add
mov
scas
jbe
fldcw
mov
pusha
sub
mov
in
mov
sub
xchg
pop
cmpsb
mov
fwait
int3
stos
adc
add
or
and
xor
cmp
jmp
lea
push
addl
rcll
or
sub
xor
sbb
xor
pusha
in
cmpsb
xchg
cs
cmpsb
xor
out
scas
or
dec
push
cwtl
fs
ds
inc
out
xchg
repz
cmp
xor
push
jns
mov
jae
add
pop
sub
icebp
dec
repnz
shlb
scas
dec
stos
repnz
sti
cmp
fnstsw
jg
mov
xchg
pop
hlt
mov
inc
jnp
add
outsb
js
call
cltd
das
aam
mov
fcomps
fadd
sar
repz
mov
pop
push
xor
push
cmp
ficompl
fwait
stos
les
pop
dec
les
es
andl
mov
dec
sahf
mov
pop
pusha
xor
mov
xchg
lds
pop
push
in
push
sub
adc
and
inc
mov
sub
popf
xchg
or
fwait
iret
sbb
xchg
mov
fsubrs
inc
dec
repz
inc
sbb
xor
or
jmp
lret
xor
cltd
rcl
out
cs
mov
pop
fadds
push
sub
cmp
push
rorl
test
jp
inc
xchg
and
out
sbb
jb
adc
adc
pop
repnz
jge
pusha
gs
inc
call
in
dec
mov
dec
add
sub
enter
mov
imul
mov
jmp
mov
sbbb
push
dec
push
cmp
pop
mov
imul
fistpl
shl
mov
pop
inc
mov
xor
cmp
jbe
jmp
or
and
xchg
and
pop
adc
push
mov
jecxz
outsb
pop
xchg
mov
xchg
lcall
insb
inc
pop
or
shrl
push
flds
xchg
lock
fwait
loope
and
pop
shr
rcl
fnsave
fwait
mov
add
fs
fdivs
jns
inc
scas
mov
push
xchg
mov
and
push
pop
mov
call
scas
inc
jns
mov
jne
ljmp
push
push
adc
push
push
xor
mov
dec
jle
fs
push
lock
gs
loope
sub
lret
aas
jge
push
ret
sub
mov
aad
mov
push
ss
dec
mov
out
fcompl
sub
imul
jle
loopne
pop
subb
stos
stc
iret
sub
ds
outsl
popa
insb
imul
adc
dec
sahf
lret
scas
int
sub
out
push
cmp
xchg
pop
fwait
bound
out
hlt
inc
pop
fwait
ja
mov
dec
push
ja
sbbb
into
dec
jge
sbb
es
aaa
mov
ljmp
loop
mov
and
inc
cmp
xor
sbb
push
loop
rorl
dec
jge
fcomps
mov
outsb
xchg
or
adc
stc
and
push
ds
push
mov
ret
ret
add
mov
movsl
mov
mov
xchg
and
pusha
mov
hlt
fs
push
mov
ss
jle
add
sbb
and
push
repz
mov
cmp
jge
sahf
out
lret
cs
cmpsb
fcoml
dec
iret
cmp
inc
jle
das
out
je
pop
and
pop
shlb
out
nop
jne
xor
or
aaa
addr16
mov
icebp
ss
and
inc
dec
mov
and
dec
scas
cltd
pop
mov
cmp
in
cmp
mov
aad
data16
jae
jns
mov
aas
mov
popf
add
movsl
xchg
adc
clc
ljmp
pusha
sbb
push
mov
mov
dec
popf
std
or
add
jecxz
jmp
cmpsl
es
ds
in
pushf
aad
mov
aad
jle
dec
fadd
lret
jb
in
pop
nop
adc
adc
enter
adc
mov
mov
sub
sbb
dec
xchg
aaa
mov
imul
je
xchg
in
push
or
cmp
inc
fiadds
mov
scas
cmp
test
and
aam
stos
and
enter
pop
shll
cmp
fidivrs
mov
mulb
push
pop
sbb
ret
mov
xlat
add
shrl
mov
stos
ljmp
lcall
stc
and
inc
mov
sbb
insl
lret
pop
xlat
or
leave
in
fmuls
test
hlt
iret
dec
jae
mov
lahf
pop
jb
jl
jbe
jns
add
mov
out
xlat
pop
in
xor
jb
jecxz
ljmp
or
cli
ljmp
nop
loope
test
sub
push
jne
adc
cltd
repz
pop
imul
jae
outsb
out
mov
lods
imul
push
xor
and
xlat
clc
imul
mov
fstl
and
xor
incb
out
data16
sarl
or
dec
and
cmp
ja
pusha
xchg
mov
shll
add
adc
jb
mov
rol
aaa
imul
xor
sub
sbb
fstps
adc
inc
cmpsb
les
cmpsl
lds
addr16
xor
and
ljmp
adc
je
mov
pop
adc
push
fwait
mov
jg
in
pop
fucomi
sbb
je
xlat
push
sbb
insb
and
mov
inc
push
cwtl
push
xor
notb
dec
std
pop
inc
test
sbb
pop
jg
or
stos
cwtl
lahf
ret
xchg
sti
mov
and
xchg
cmpsl
pop
cmp
lret
imul
cmp
cs
mov
inc
jns
pushf
mov
xlat
imul
dec
js
adc
loop
sbb
sub
test
bound
mov
xor
cmp
add
fdivrl
mov
adc
adc
jnp
js
mov
mov
inc
mov
pop
jbe
lcall
sarb
imul
cld
jns
add
sub
insb
dec
mov
call
in
ja
sbb
shll
push
cmp
xor
ss
adc
mov
sub
pop
cmpsl
in
xlat
sub
pop
jmp
lea
flds
dec
aas
jecxz
or
cmpsb
out
or
rorb
or
repz
xchg
pop
and
or
inc
xlat
sub
int
xor
test
cmp
push
jl
outsb
pushf
add
pop
push
dec
sub
sub
lds
cmpsl
daa
pop
xchg
pushf
xorb
sub
push
mov
mov
xlat
call
cwtl
sub
jl
sub
push
add
adc
add
mov
dec
xchg
das
imul
aam
imul
add
imul
pop
push
mov
into
cwtl
dec
xchg
cltd
nop
rolb
xchg
mov
es
dec
pop
sub
imul
jno
loop
fcom
shll
pop
cltd
lahf
nop
mov
and
adc
rolb
fmuls
sahf
insb
loop
in
addb
xchg
mov
mov
push
je
jbe
sbb
nop
int3
in
xor
jno
sbb
roll
push
xchg
iret
cs
mov
sub
sub
adc
cltd
jmp
loope
mov
or
fwait
push
adc
sbb
aas
mov
xchg
cmp
loopne
gs
loopne
inc
das
aaa
push
adc
cli
sub
adc
pcmpgtw
xlat
mov
lcall
push
inc
pop
inc
mov
cmpsl
mov
repz
out
hlt
add
cmp
insb
rcrl
jae
dec
add
pop
addr16
sti
mov
push
idiv
mov
push
sub
sub
movsl
mov
shl
xchg
out
jne
arpl
sbb
iret
ss
loopne
cmp
sub
or
test
xchg
cmp
sub
cmc
jb
movsl
jl
std
call
in
add
xor
mov
dec
aam
ss
add
mov
call
pusha
mov
shll
mov
int3
jno
sbb
test
leave
add
test
xchg
sbb
inc
in
in
es
das
pop
data16
aas
cld
xchg
sbb
roll
mov
jae
mov
je
test
push
inc
pop
cs
into
inc
sahf
bound
mov
push
rolb
aam
sahf
int3
rorl
data16
bound
lock
or
cmp
sub
call
inc
pop
adc
shl
xor
sbb
jo
clc
ret
cmc
cmpsb
sub
xor
inc
lods
jno
ret
bswap
push
mov
xor
call
leave
mov
es
mull
push
jg
jmp
push
xor
pop
mov
inc
test
fwait
pop
adc
xor
movsb
mov
enter
dec
rol
mov
jne
cmp
jno
pop
inc
inc
loope
cmp
scas
imul
inc
and
jo
pop
popa
pop
mov
mov
in
gs
mov
cli
mov
testb
inc
mov
xor
inc
shr
cltd
cmpsb
outsb
lds
push
int3
jb
shrl
test
bound
outsl
or
subl
into
adc
add
xor
dec
pop
cs
xor
roll
mov
aaa
imul
adc
xor
jnp
add
or
mov
mov
push
xor
rcrl
jae
xchg
or
lea
sarl
in
mov
and
popa
add
push
and
cltd
test
or
adc
orl
gs
lock
adcl
push
sub
xchg
xchg
mov
adc
adc
fsts
add
movsl
mov
cmpl
pop
lret
jg
sbb
mov
stos
cmpsb
fidivrs
mov
or
rcll
in
adc
mov
aaa
lods
pop
aad
dec
imul
mov
mov
xor
dec
jmp
jo
out
lret
jne
adc
mov
or
mov
movl
sarl
inc
xchg
push
imul
lods
arpl
filds
jno
stos
inc
mov
loop
les
lahf
cld
xchg
aam
out
cmp
clc
or
mov
lods
push
shlb
cli
add
xor
jmp
jns
decl
mov
jge
add
push
ljmp
push
push
cltd
adc
pop
lret
sub
jo
les
xor
cli
mov
jle
ds
leave
add
pop
mov
repz
test
jmp
lcall
std
adc
jbe
sub
and
or
pop
repnz
in
sahf
das
lods
push
sbb
movsl
pop
sub
xchg
or
jo
dec
outsb
push
inc
adc
pop
mov
ja
imul
addl
out
sbbl
jbe
iret
push
ret
push
adc
push
cmp
in
adc
stos
mov
fisubrs
lahf
adc
ds
xchg
sbb
andl
jnp
xor
rolb
pop
jp
js
mov
test
cmp
roll
call
jb
xor
adcl
ffreep
and
std
or
fcom
inc
jbe
iret
jo
pushf
movsl
mov
iret
cmp
cltd
sub
jo
jae
xchg
or
xor
push
xchg
jg
pop
mov
jle
inc
jbe
popa
dec
mov
aad
adc
xor
in
addr16
loope
mov
lods
xor
sub
xchg
lods
outsb
jecxz
stos
popa
testl
nop
pop
fcomp
inc
mov
das
out
ja
mov
aad
mov
mov
dec
push
xchg
fidivrl
out
sbb
add
bound
outsl
push
xchg
and
sub
or
xlat
lea
mov
sbb
fimuls
or
jl
mov
adc
sbb
ret
cmc
gs
cmp
pop
push
sub
popl
push
inc
jp
cmp
sub
inc
cmp
shlb
jno
aad
sub
test
leave
outsl
mov
push
insb
adc
into
leave
nop
pop
sbb
insb
mov
jge
gs
aas
jb
lcall
pop
scas
cmc
cld
dec
sbb
cli
nop
rcrb
xor
push
pop
fcoml
and
imul
testb
push
mov
shlb
popf
mov
ficoml
sub
int
mov
cmpsb
mov
and
scas
inc
aad
je
cmc
movsb
adc
mov
in
fucompp
jnp
push
cmp
repnz
mov
and
loopne
cwtl
pop
jecxz
or
or
in
mov
cmp
mov
xor
pop
xor
idivl
xor
test
pushl
mov
sub
jecxz
jg
rcrb
js
loope
jmp
loope
or
jg
wrmsr
or
into
pop
pusha
pop
scas
lea
jne
or
push
mov
sahf
mov
cli
dec
inc
out
ds
push
add
mov
lret
fisttpl
adc
loopne
sub
nop
int3
mov
cmp
or
movd
jno
out
sub
testb
aas
jnp
adc
test
movsl
mov
pop
add
lcall
add
insb
pusha
mov
jge
add
adc
pop
sub
nop
sub
xchg
ret
cmpsb
mov
sarl
adc
das
jl
pop
push
push
jns
push
clc
adc
add
repz
insl
jbe
dec
cmpsl
dec
enter
and
add
mov
imul
mov
dec
inc
mov
cmp
test
xor
mov
outsb
xchg
adc
test
push
mov
mov
pop
adc
lods
les
xor
fnstsw
ljmp
stc
fsts
pop
test
inc
inc
aam
xchg
andb
and
sbb
mov
cmp
mov
jl
popa
aad
cmp
push
call
jb
aaa
jmp
pop
fildl
jle
push
aaa
mov
jmp
dec
push
and
dec
jns
test
pop
inc
jns
dec
mov
lret
push
or
dec
mov
sbb
movsb
and
out
popf
sub
sub
xchg
mov
fistps
mov
or
and
push
insb
jl
dec
sbb
in
je
cmp
cmp
dec
and
push
inc
out
mov
cmpsb
jge
adc
add
jmp
push
mov
xchg
aas
pop
clc
inc
jae
cli
out
inc
ds
push
loope
sub
shr
sub
das
icebp
sti
fldl
push
fdivrs
bswap
push
sbbb
jmp
stc
add
pop
add
flds
aam
push
ss
incb
or
push
xchg
out
xchg
push
and
push
sahf
jns
lods
in
loope
or
adc
mov
mov
and
push
xchg
lock
test
or
ljmp
jmp
and
adc
enter
repz
nop
cli
pop
mov
sbb
lahf
cs
jle
cmp
jmp
and
add
mov
xchg
push
movsl
sbb
pushl
inc
cwtl
sbb
xlat
cmp
cwtl
test
cmp
fs
xchg
fst
ret
dec
push
enter
fwait
sub
dec
outsb
js
sub
push
ret
pop
mov
add
dec
mov
sahf
and
push
xor
add
subb
in
jo
jl
push
sti
jecxz
xchg
pop
movsl
mov
push
stos
mov
xchg
loop
sbb
adc
xchg
mov
and
aam
xchg
mov
mov
je
push
cmp
add
loopne
cwtl
adc
cmpsb
cld
test
rcrl
fildl
shll
outsl
push
hlt
test
dec
ret
and
mov
and
dec
inc
ljmp
jl
push
mov
fstl
ds
push
xor
jo
inc
and
pop
jb
and
fst
pop
ss
aaa
pushf
or
lods
mov
mov
dec
push
jns
iret
inc
xchg
shll
pop
lds
int
cmp
jg
xchg
jmp
jnp
sahf
adc
add
out
pop
cld
pop
das
fistps
fwait
or
cmpsb
dec
outsb
xchg
movsl
stc
adc
fwait
iret
cmp
ds
ljmp
sub
cmpsl
pushf
xor
xlat
out
mov
mov
stc
jl
nop
je
out
mov
sti
inc
xchg
sbb
incb
jo
dec
or
jl
inc
adc
popf
jnp
jns
mov
inc
cmp
xchg
stos
cmp
jne
lcall
mov
mov
inc
push
scas
clc
and
cmpsl
jno
and
ljmp
sahf
xchg
sbb
adc
fcmovnb
sbb
aas
hlt
scas
sbb
cmpsl
lahf
lahf
fildll
dec
sbb
lods
fadds
cmp
mov
cmp
cmpl
push
ror
xor
in
bound
cmpsl
lock
adc
fsub
sbbb
xchg
nop
pop
nop
enter
test
loope
cmc
rclb
pop
push
je
dec
sbb
jle
or
mov
inc
lcall
insl
scas
cmpps
repnz
xor
fdivrs
mov
fadds
cmp
popf
sbb
into
imul
in
shl
daa
test
jnp
scas
push
das
or
sub
xor
sub
adc
fidivrl
pop
mov
add
xchg
clc
mov
idivl
mov
ss
out
das
stos
aam
insl
outsl
test
cmp
xchg
hlt
pop
fstl
adcl
xchg
aaa
ss
or
push
insl
push
and
sarb
lahf
adc
fbstp
sbb
xor
js
mov
pop
adc
push
test
mov
or
fnstenv
and
stos
jge
js
stc
inc
fstpl
inc
and
adc
test
cld
jl
pop
idiv
loop
fwait
and
out
addb
popa
sub
add
inc
and
es
sbb
xchg
add
fwait
insb
dec
sarl
push
add
push
adc
jne
jle
push
jl
daa
adc
mov
or
mov
pop
and
cltd
mov
jbe
adc
pop
sub
aam
loop
ret
leave
fldcw
sub
sub
add
frstor
mov
or
cmp
decb
push
ss
divl
inc
mov
cs
xchg
ja
les
repz
std
popf
fucomp
call
in
mov
jmp
cmp
push
aad
mov
dec
sub
xor
inc
jne
xor
mov
and
enter
xor
xor
ja
xor
xchg
movsb
das
xchg
xor
lret
add
jge
mov
dec
in
cmp
inc
jmp
add
mov
bound
pop
adc
lock
popa
aas
in
push
ds
mov
dec
rolb
sub
rorb
adc
test
dec
jae
xchg
arpl
adc
push
inc
push
ret
sub
pop
sbb
mov
push
xchg
ds
pop
mov
les
pusha
adc
dec
call
cltd
adc
mov
push
test
rol
push
das
hlt
or
sub
sub
jo
mov
or
outsl
sbb
in
repnz
lock
push
mov
aad
shlb
outsb
sbb
ljmp
mov
adc
scas
and
movsl
jp,pn
mov
fildl
jnp
mov
mulb
xor
hlt
mov
mov
sub
cmp
xor
les
mov
or
add
sub
jp
aad
ss
insb
add
jbe
scas
mov
xchg
ja
pop
pop
cwtl
in
in
cmp
cmp
sub
mul
insb
les
push
fisubl
add
pushfw
push
aaa
cmp
mov
add
add
xor
ljmp
lcall
ds
xor
in
mov
mov
cmp
or
out
popf
mov
out
and
adc
or
xor
sub
push
sub
cli
add
cmp
sub
inc
clc
fwait
xor
aad
lds
mov
and
sbb
in
inc
out
push
stc
lret
pop
ljmp
inc
mov
nop
mov
pop
push
mov
ljmp
mov
outsb
inc
mov
inc
fidivs
push
jb
stos
push
inc
add
mov
loopne
or
push
daa
jo
dec
mov
loopw
mov
aaa
pop
sub
popf
cmp
mov
jo
je
enter
out
xor
adc
pop
adc
fwait
repnz
or
xor
jle
push
negb
out
addl
add
loope
outsb
pop
and
inc
icebp
pop
je
mov
test
or
subps
adc
ja
sbb
sub
jnp
push
jg
and
ja
inc
jmp
xchg
sbb
mov
dec
xor
pop
mov
push
jb
lcall
lods
test
aam
or
mov
push
daa
mulb
ja
push
rcrl
ds
jbe
or
mov
outsl
ret
mov
dec
jnp
mov
lods
negl
cmp
mov
or
sbb
in
xchg
dec
xor
movd
popa
mov
in
rcll
jg
dec
inc
fs
adc
bound
push
push
xor
xchg
mov
in
mov
adc
out
aam
imul
dec
stos
js
sub
xchg
jbe
aad
sub
out
outsl
mov
jo
incl
add
cwtl
test
out
mov
adc
out
mov
jecxz
inc
lea
sub
ljmp
push
in
jmp
mov
mov
jecxz
adc
into
xchg
push
stos
mov
inc
lret
cmpsb
xchg
push
test
jae
pop
jno
lods
jge
cmp
js
popa
pusha
jl
push
enter
sub
push
je
sub
add
enter
mov
xor
jecxz
xor
sub
jo
addl
ss
add
dec
pusha
jg,pn
xchg
mov
fmull
xor
mov
and
daa
inc
call
getsec
shll
icebp
stos
adc
enter
lods
pop
jae
fcoms
mov
or
inc
inc
jne
sbb
adc
test
pop
sub
fwait
xor
cmp
popf
or
int3
push
cltd
gs
mov
or
mov
lods
jbe
mov
in
aas
push
jmp
mov
lcall
fnstenv
mov
std
xchg
ja
int3
jg
dec
inc
xchg
ret
mov
out
aaa
push
xchg
inc
shl
std
les
mov
pop
push
cwtl
mov
rcl
loope
dec
je
jno
loop
sbb
jno
inc
inc
int
mov
subb
xchg
xchg
xchg
cmovns
les
and
add
aam
mov
cli
or
fisubrs
ljmp
dec
in
clc
jp
cld
out
pop
xor
lods
mov
pusha
cmp
cmp
lds
pop
stos
ds
mov
add
movsb
insb
inc
in
xchg
push
pop
push
aad
loope
les
xchg
inc
ret
push
rcll
mov
mov
shlb
lret
decl
or
inc
mull
test
dec
mov
jg
and
mov
mov
je
mov
sbb
adc
mov
loop
jno
cli
push
ret
or
mov
scas
xor
cmp
mov
or
pop
add
push
add
adc
cli
dec
cwtl
mov
sub
cld
testl
movsl
enter
mov
jnp
push
push
psubsw
xlat
sahf
push
lock
movsb
cld
fnstsw
push
js
adc
and
cmp
out
sub
and
push
cmp
sbb
sbb
mov
int
lock
adc
push
adc
xchg
xchg
shr
or
fsubrp
sub
lds
mov
add
and
ja
mov
dec
and
jge
sbb
cmp
add
sub
ret
xor
cltd
imul
xlat
jle
push
movsl
mov
in
repz
mov
cli
cmp
mov
or
jp
inc
dec
or
dec
mov
cmp
cmp
and
unpcklps
fiaddl
pop
push
out
or
lahf
pop
sub
xchg
mov
adc
xchg
sbb
inc
outsb
sub
mov
mov
mov
jl
ss
insl
jno
sarb
adc
jnp
in
xchg
test
push
out
cmp
sub
js
inc
mov
mov
int
and
and
mov
xor
aad
or
es
cltd
insl
stos
add
mov
outsb
into
dec
add
ss
hlt
fbld
movsb
add
outsl
push
fiadds
sbb
loope
lock
or
jl
mov
pop
pop
lods
pop
xchg
mov
cld
cltd
pop
or
popf
add
mov
stos
push
sbb
das
inc
test
dec
sbb
jbe
dec
and
mov
insl
push
xchg
fsubrp
push
add
mov
mov
testl
aad
lret
mov
or
and
in
scas
loop
adc
add
inc
aas
pushf
lods
jns
or
outsl
dec
mov
and
into
adc
mov
pop
out
dec
test
nop
insb
sub
out
in
cmpsb
jo
aas
jg
or
daa
adc
push
xchg
and
std
sub
sbb
xor
pop
and
scas
ficomps
push
sub
cld
mov
push
xor
mov
pop
add
cmpsb
cmp
sbb
dec
xor
cmp
hlt
fwait
shll
sbb
xor
icebp
fwait
popa
push
cmpsl
xchg
jmp
adc
inc
test
out
enter
pop
inc
dec
jns
outsb
add
jp
push
nop
jge
loop
add
dec
fidivrs
mov
fcomps
stos
mov
push
testl
sti
cltd
lds
test
in
or
imulb
push
inc
pop
xor
lret
dec
icebp
pop
and
jg
add
in
pushf
test
jno
pushf
xchg
arpl
lock
lret
jl
jbe
lods
dec
push
sti
mov
dec
mov
add
push
jnp
movsl
push
daa
mov
jmp
pop
xchg
pop
jo
or
xchg
out
leave
mov
rorl
cmp
xchg
aaa
lret
adc
xchg
xchg
les
mov
add
add
arpl
sbb
jno
push
jmp
hlt
inc
xchg
out
xchg
ja
adc
popa
icebp
fsubrs
jle
xchg
rol
movsl
mov
push
je
sbb
push
fists
mov
or
mov
mov
repnz
pushf
pop
test
ret
jecxz
sbb
daa
mov
xchg
lcall
lcall
sahf
jmp
jmp
scas
adc
push
shrb
es
loop
jnp
xor
hlt
js
das
mov
dec
out
icebp
sbb
in
sub
mov
mov
pop
loope
clc
sub
cwtl
dec
mov
sub
imul
push
pop
pop
lahf
nop
lods
and
or
lret
or
jbe
push
pop
mov
sub
adc
ljmp
pop
xchg
repz
xchg
mov
cmpb
mov
dec
cmc
push
nop
xchg
jbe
aam
test
movsl
mov
inc
sub
leave
addr16
scas
lret
jae
adc
and
pop
mov
loopne
pop
sub
pop
sbb
imul
and
in
push
das
decl
jecxz
daa
das
pop
lret
mov
push
addr16
lcall
jp
xchg
cmpl
push
cmpsl
andl
loop
loop
repz
in
ret
or
sub
aas
rcr
lcall
addr16
mov
movsl
jbe
jecxz
dec
and
aad
mov
test
stos
xchg
nop
inc
test
inc
sub
and
and
mov
iret
cltd
gs
icebp
repnz
adc
shlb
push
int3
test
hlt
and
inc
push
test
movsl
push
shlb
clc
insb
jne
ja
bnd
repz
mov
pop
xchg
mov
faddp
in
into
dec
movsl
xchg
arpl
dec
fnstsw
inc
ds
add
mov
xchg
mov
out
jno
movsw
or
push
fisubl
cmp
aas
push
aaa
mov
mov
jle
sub
movsl
mov
dec
jo
cmp
arpl
pop
sub
jno
divl
and
fucomi
inc
mov
jb
test
imul
test
int3
inc
mulps
aaa
and
sub
pop
mov
push
xchg
sbb
pop
jbe
sbb
xor
test
pusha
cs
ret
inc
icebp
lds
test
add
testb
xor
jmp
mov
cmp
mov
mov
in
sub
dec
pop
inc
or
cmpb
sbb
inc
cmc
fwait
in
jns
faddl
sub
and
xchg
mov
xchg
repz
cmp
bound
addb
das
cwtl
icebp
addr16
ss
mov
inc
roll
shrl
ljmp
pop
dec
add
push
lods
sahf
shr
mov
sbb
leave
fstpl
mov
icebp
call
ss
dec
test
xchg
leave
lock
shrb
inc
subl
sahf
sub
mov
bound
in
ljmp
jns
ret
cmpsl
cmp
jg
clc
testl
fiaddl
fistl
xlat
jmp
cmp
mov
test
inc
mov
mov
jne
cmp
xor
out
mov
in
cmp
mov
mov
cs
xor
add
lods
outsb
decb
in
sti
mov
jmp
pop
mov
lahf
mov
add
sahf
mov
mov
hlt
inc
pop
mov
inc
lods
jns
shll
mull
sub
and
jge
fmull
jbe
cmp
test
push
pop
cs
sbb
dec
pop
in
mov
stos
cwtl
add
and
xchg
stos
sarb
adc
add
lods
jl
sub
adc
xchg
xor
inc
push
mov
mov
xor
movsb
jle
fbstp
jae
or
clc
stos
push
idiv
aaa
dec
pushf
rcr
cmpsb
pop
std
sbb
pushf
fmuls
fnstsw
outsb
loop
pop
cld
cwtl
inc
repz
rclb
push
jbe
hlt
test
mov
gs
pop
cwtl
jno
xchg
mov
inc
cmp
lret
push
movsl
jg
cs
stc
push
dec
adc
mov
mov
sbb
int
mov
in
outsb
loopne
rol
jecxz
mov
test
jmp
test
mov
lahf
xchg
cmp
cmp
xor
popf
add
inc
cmp
mov
xor
loope
xchg
sbb
stc
inc
xor
and
imul
cmc
sub
ds
ljmp
mov
iret
pop
xchg
roll
ss
inc
dec
stos
gs
jb
cmpl
push
fldcw
adc
sbbb
lock
cmp
jne
sbb
aas
fnstcw
mov
testb
mov
jp
fiaddl
or
or
or
in
sub
in
pop
ss
mov
add
pop
aas
pop
xchg
xchg
cltd
test
jmp
and
jecxz
int3
aas
ror
jecxz
loope
das
leave
and
mov
sar
add
pop
je
sub
sub
icebp
mov
shll
add
or
mov
xchg
fidivrl
mov
iret
jae
clc
mov
push
in
push
xchg
arpl
sbb
lret
cmp
xorl
dec
xor
into
cli
cmc
cmp
mov
movsl
ret
ret
or
sbb
mov
sub
das
push
sub
lcall
adc
les
ficoml
lea
dec
out
stos
jne,pn
icebp
pop
mov
out
in
jge
mov
popa
fwait
xor
or
add
add
mov
jl
std
cmpsb
test
cmp
push
and
std
stos
or
loope
enter
aad
xor
insl
dec
data16
in
outsb
shll
imulb
pushf
xor
push
dec
jg
inc
mov
stc
pushf
and
clc
pop
mov
lds
jmp
xor
push
aaa
mov
mov
jno
or
nop
mov
jb
pop
jne
and
test
push
mov
lock
dec
mov
fwait
test
in
mov
or
jne
cltd
xchg
adc
mov
aaa
mov
dec
jnp
jne
add
adc
sub
int3
or
xor
dec
movsb
jne
test
scas
in
shl
mov
daa
test
add
imul
bound
divb
mov
mov
scas
out
aas
lods
outsl
jmp
jecxz
sub
adc
add
mov
out
outsb
fdivrp
and
adc
pop
pop
jecxz
lea
sbb
or
jge
mov
xor
insb
jmp
sub
outsl
cmpsl
mov
lret
mov
xchg
fisttpll
repnz
xor
je
dec
mov
mov
mov
mov
in
in
mov
mov
or
and
mov
rorl
or
sub
imulb
add
movsl
pusha
ret
add
xor
jns
jns
dec
loop
xor
dec
dec
nop
jle
cld
xor
mov
mov
aam
sbb
int
test
cmp
scas
decl
mov
cvtps2pd
test
jl
xor
jge
scas
pop
addl
or
pop
jmp
dec
xor
jle
xor
xchg
shlb
lods
test
les
dec
add
ror
test
inc
mov
les
lahf
xchg
inc
enter
nop
mov
or
andb
and
mov
sbb
pop
mov
or
mov
aas
imul
out
dec
mov
mov
push
xor
xchg
out
cmp
push
outsl
push
mov
fs
call
scas
push
mov
stc
jecxz
mov
das
add
cmp
pop
scas
fwait
and
lods
sahf
or
cs
xor
movsb
pop
enter
flds
push
int3
sub
push
jge
cmpsl
jno
arpl
dec
inc
and
cwtl
inc
arpl
ja
jmp
sub
mov
gs
jmp
ljmpw
push
and
sub
loopne
ljmp
in
fwait
or
fs
stos
mov
sbb
push
or
sbb
fcmovne
test
mov
repnz
push
aad
stos
loope
mov
mov
out
adc
jge
sbb
push
push
jbe
out
addr16
and
int
in
cli
xor
mov
int3
xor
test
fwait
mov
push
pop
add
sbb
in
out
adc
in
pop
and
mov
outsb
or
mov
adc
mov
jne
jecxz
nop
cmp
adc
add
sub
loop
xchg
or
mov
mov
movsb
aad
mov
xchg
sarb
repnz
and
inc
lock
jne
in
dec
mov
fists
shll
xchg
jo
sahf
inc
xchg
push
jbe
sarb
aaa
pop
adc
ja
repnz
fadd
addb
xchg
pushf
mov
movsb
insl
and
sub
bound
fldpi
inc
imul
sarb
and
adc
test
and
lret
lahf
daa
popf
and
inc
loope
dec
sets
pop
mov
fdivp
inc
pop
aas
add
pushl
cmp
fxam
inc
inc
je
pushf
out
jnp
push
call
lods
insl
movsl
in
xor
test
sti
stos
push
mov
and
scas
gs
dec
push
cmpl
notl
mov
icebp
je
dec
xor
jg
hlt
add
in
or
xor
dec
movsb
lcall
fdivrl
dec
push
or
mov
jne
fs
and
mov
cwtl
mov
ja
and
cmpsb
xchg
les
mov
mul
dec
mov
mov
add
sbb
sbb
in
stos
mov
sbb
out
ljmp
add
push
xchg
xchg
repnz
iret
xchg
lahf
shrb
lods
mov
cmpsb
add
icebp
movsb
aaa
cmp
ds
pop
sbb
jnp
iret
mov
sti
movsb
jo
jb
pop
cmp
rcll
xchg
lock
sub
aad
sub
push
ret
push
ret
outsl
adc
xchg
dec
xor
aam
ret
aam
lea
rorb
xchg
adc
in
lahf
dec
fwait
pop
mov
test
and
sbb
clc
fdivrl
sbbb
xlat
dec
or
sahf
push
mov
pop
mov
jp
pop
mov
insb
push
pop
xor
mov
rcrl
scas
mov
pop
ret
and
int
or
sub
loop
add
int3
pop
pop
cmp
sbb
xor
stc
leave
adc
aad
xchg
push
cmp
inc
test
jg
sbb
and
stc
xchg
and
mov
or
jo
gs
mov
xchg
cltd
jne
cmp
outsl
xchg
add
cmc
pushf
sub
cwtl
ljmp
mov
loope
aaa
bound
xchg
lods
add
test
inc
loope
push
js
mov
cmp
pop
mov
pop
addb
in
enter
cld
xor
pop
daa
mov
cwtl
jbe
test
pop
sar
mov
rorb
pushw
sub
movsl
enter
sbb
ds
test
jle
xchg
jne
leave
xchg
adc
movsbl
xchg
pusha
fmuls
add
jecxz
popf
mov
lea
xor
inc
gs
adc
aaa
mov
push
cmc
and
lret
jle
cmp
mov
add
ljmp
pop
sbbb
jnp
mov
xchg
rcll
imul
add
jle
push
xchg
scas
call
rcrl
xor
arpl
rcrl
icebp
mov
or
cmp
fmuls
or
test
shll
js
xor
jp
and
lret
mov
jp,pn
hlt
jle
pop
repz
dec
xor
xchg
add
cmc
mov
out
add
inc
pop
mov
pop
cmp
push
sbb
imul
mov
aaa
sbb
cltd
or
lahf
xchg
lcall
mov
or
mov
cmpsl
jbe
jne
xchg
push
and
les
sub
ljmp
jb
outsb
sti
mov
mov
pop
test
inc
mov
sbb
xchg
mov
mov
jl
xor
ret
mov
sub
cwtl
xchg
pop
xchg
jmpw
jg
pop
aam
sub
daa
push
test
icebp
loope
mov
shr
notl
lock
adc
cs
jmp
jbe
gs
push
pop
or
jns
push
rcl
out
out
mov
loop
sbb
dec
or
pusha
cmp
dec
pop
cmp
mov
aas
xor
mov
push
pop
cmp
sbb
leave
insb
cmc
lahf
jno
sub
pop
mov
mov
sub
int3
imul
data16
outsb
andl
jmp
jno
dec
pop
xchg
fs
cmp
shll
fdivrs
sbb
cld
mov
jg
jns
dec
xorl
mov
mov
pop
add
xor
mov
out
and
lret
cmc
loope
jmp
enter
aaa
mov
in
add
std
mov
cmp
int
xchg
inc
push
pop
mov
pop
fcoml
xor
subb
push
lret
mov
dec
pushf
xor
jae
ret
pop
in
jns
data16
add
xchg
imul
fwait
jg
std
or
pop
ret
mov
cmp
loope
into
movsl
fs
rorl
pop
or
shrl
cmc
int
rcll
fsubl
push
out
xor
sbb
out
ret
lahf
pop
inc
outsb
push
ret
pop
andl
lcall
in
mov
adc
and
fistl
std
pusha
mov
adc
fisubl
lret
sub
adc
mov
mov
mov
sahf
and
xchg
loop
or
jmp
mov
sub
dec
out
daa
scas
pop
fs
mov
push
adc
jae
fisubl
in
gs
push
mov
and
mov
addr16
or
mov
inc
sub
filds
add
and
pop
popf
sti
test
stos
popf
lret
scas
xchg
xchg
outsl
mov
adcb
xor
insb
addb
jp
or
mov
movsb
ss
fnsave
inc
addr16
and
ret
and
pop
std
cmp
mov
aas
loope
icebp
mov
fmull
xlat
sub
fildl
jne
mov
mov
pop
fs
jecxz
inc
dec
enter
mov
and
add
dec
xchg
insb
mov
std
pop
adc
or
pop
ficoms
data16
aad
idivl
int
gs
nop
insb
or
lcall
cmpsl
iret
shrl
pop
es
test
jp
fwait
or
push
lret
lock
jl
rcrl
out
mov
clc
pop
jbe
pop
sahf
adc
adc
ljmp
jmp
cwtl
sub
jns
cwtl
fwait
pop
es
add
push
xchg
out
out
mov
outsb
add
ss
push
cmp
adc
aas
mov
popa
pusha
mov
das
hlt
add
mov
pop
pop
add
test
push
mov
aas
fldenv
xchg
ljmp
daa
pop
insb
popf
add
and
mov
sub
rolb
jbe
shrb
lea
jae
xchg
sahf
xlat
sbb
test
xor
sub
imull
jns
das
jge
sub
pop
rcrl
jl
test
xchg
xor
frstor
fadds
out
inc
mov
mov
in
arpl
std
mov
rcrb
push
add
test
cmc
jl
into
and
out
or
xorl
xchg
test
jmp
cld
mov
or
jecxz
fs
xor
dec
into
fildll
icebp
scas
mov
shll
sbbb
sbb
add
cmp
mov
cmp
pop
loop
lret
dec
mov
movsb
xchg
dec
dec
push
xorl
inc
dec
push
scas
push
cmpsb
fucomi
jbe
jmp
add
lods
lret
and
pop
mov
cli
mov
nop
idivb
add
sub
mov
sub
dec
cli
ret
adc
cld
imul
int3
sub
inc
test
incb
mov
shlb
dec
dec
js
gs
mov
pop
cmpsb
sbb
cs
add
mov
xor
lahf
cmp
loopne
jmp
leave
out
adc
shlb
ljmp
or
cli
out
fxch
jg
mov
add
mov
inc
xchg
insl
pop
cmpb
test
pop
roll
mov
es
sbb
pop
adc
add
pop
push
outsl
sbb
sti
mov
add
sub
cmpsl
outsb
push
lahf
inc
cmp
aad
lahf
subb
mov
mov
xchg
mov
inc
lret
dec
icebp
mov
lahf
jecxz
nop
ds
jge
js
pop
shlb
add
lock
arpl
rcrb
adc
push
mov
mov
add
dec
imul
in
dec
inc
stos
stos
mov
jno
and
sbb
xchg
push
and
xor
jbe
stos
movsl
ja
mov
ficomps
and
sbb
xor
xor
ss
je
mov
mov
mov
inc
mov
push
test
sbb
inc
popf
jecxz
xor
sbb
clc
popa
cli
outsl
inc
enter
sub
push
adc
sbb
call
test
cmp
inc
sahf
lret
cmp
or
orl
jb
outsl
xor
mov
and
insl
dec
sbb
mov
sbb
iret
jmp
mov
push
mov
cmp
cmp
nop
in
stc
jp
leavew
sbbl
sbb
fdivrp
lahf
dec
mov
addr16
cmp
rorb
les
xor
lcall
pop
sub
jne
arpl
aas
daa
or
repz
and
rdmsr
int
fdivl
jecxz
mov
push
and
ret
enter
add
xchg
cld
cmc
push
and
int
addr16
bound
and
jmp
mov
ror
pop
cwtl
mov
packssdw
imul
sub
mov
bound
mov
cld
cmp
hlt
in
es
mov
mov
sbb
enter
int3
movsb
push
ss
mov
jns
jge
scas
jb
jbe
stos
mov
test
xchg
andb
dec
mov
adc
cmp
lods
push
xchg
cli
mov
jns
xor
lods
mov
push
in
shl
xor
push
addr16
clc
data16
mov
jg
cli
lods
test
das
in
sbb
cmp
sbb
add
test
push
loope
sbb
mov
das
cltd
pop
xchg
and
roll
add
sbb
ret
adc
in
lock
pop
lahf
inc
out
je
test
lods
jecxz
xchg
out
adc
subl
mov
sub
pop
dec
es
jnp
add
stos
clc
dec
adc
adc
sub
xor
out
dec
and
not
iret
mov
sub
adc
scas
insl
or
xchg
roll
inc
pop
mov
into
repz
div
ss
cmp
lds
jmp
rcll
mov
push
mov
lods
adc
loope
push
xlat
pop
enter
sub
cld
xchg
or
imul
add
adc
inc
pushf
je
xchg
mov
jno
fsubrl
inc
xchg
or
push
scas
xchg
xchg
mov
mov
xchg
xchg
lock
pop
stos
inc
xchg
stos
lret
fbstp
mov
popa
shl
push
sahf
and
xchg
pop
outsl
fldl
lcall
and
jb
pop
hlt
mov
push
sbb
hlt
subl
ds
xchg
pop
push
outsl
and
xor
sbb
dec
push
es
jmp
cmpsb
mov
out
xlat
mov
sbb
jbe
xchg
jno
insb
decb
jecxz
arpl
mov
and
cltd
mov
loopne
push
into
dec
les
pop
aaa
sbb
cs
addr16
out
cmpb
jne
add
movsl
xor
test
fs
jnp
sti
xor
jmp
xchg
hlt
test
fcoms
loopne
test
inc
cmp
movsb
adc
sahf
cmp
mov
aam
rcr
ljmp
nop
insl
mov
into
pop
loop
scas
in
jns
adc
nop
dec
ds
orb
xor
sti
mov
scas
lret
mov
in
adc
movd
int
add
js
xor
test
ret
adc
call
jle
sub
lods
fwait
ret
add
addr16
inc
adc
mov
adc
push
xchg
xchg
inc
in
sbb
inc
stc
movsl
mov
ss
stos
sbb
imul
inc
add
add
out
inc
movsb
mov
xlat
ficoml
repnz
push
inc
scas
test
pop
data16
xchg
push
idivl
dec
int3
sub
cmp
lret
jg
test
pop
sbb
adc
xor
pop
or
push
and
lcall
jae
ljmp
or
out
cmp
jno
xchg
xor
ret
lcall
dec
sbbb
xchg
jnp
lods
rep
mov
nop
cmp
sub
add
cltd
and
clc
and
push
xor
mov
sahf
fimuls
mov
js
xchg
mov
orl
lock
adc
cmp
jae
ja
daa
mov
scas
dec
push
je
pop
push
push
sub
mov
dec
pop
sbb
iret
popf
les
sahf
lods
fistps
mov
rcrb
ds
out
ljmp
jmp
mov
insl
stos
idiv
push
sti
loope
xchg
movsb
pop
pop
in
lret
adc
rclb
inc
clc
setne
imul
mov
jno
ja
leave
clc
xchg
pop
mov
addr16
dec
aam
mov
loopne
push
clc
outsb
lds
adc
mov
xchg
hlt
icebp
stc
movsl
add
jb
push
cmp
dec
and
movsl
jbe
push
lcall
dec
mov
lret
jge
and
hlt
adc
iret
pop
std
lds
mov
sbb
add
iret
insb
cltd
rolb
or
mov
mov
and
fistl
xor
imul
jnp
stc
hlt
dec
test
scas
xor
push
mov
lock
push
je
fs
jg
mov
cwtl
xchg
mov
out
mulb
int3
xchg
xchg
jecxz
jle
cwtl
out
mull
movsl
loopne
cmp
fildl
mov
dec
or
fisubs
rclb
lret
lods
xor
or
into
dec
or
iret
fbstp
jg
adc
push
adc
add
fidivl
pop
dec
pop
mov
lret
movsb
cld
pop
jne
out
std
je
aaa
fndisi(8087
jmp
inc
xorl
sub
fcomi
aaa
mov
pop
jns
adc
pop
dec
fldt
or
pop
dec
mov
xchg
out
push
pop
dec
cmp
add
and
test
ret
loopne
mov
sub
mov
inc
aaa
xor
mov
out
dec
push
call
adc
shlb
xchg
mov
ficoms
inc
jb
insl
and
and
jp
adc
push
or
push
push
cmp
leave
pop
cmpsb
mov
pop
lret
sub
pop
daa
sti
repz
add
adc
in
xchg
xorb
pushf
cwtl
cmp
xor
das
xchg
mov
insb
or
xlat
lods
int3
mov
scas
movmskps
pop
mov
cmpsl
and
xchg
inc
shll
jp
gs
pop
nop
mov
aas
cli
scas
jns
cmp
push
adc
aaa
lds
inc
pop
jo
arpl
jl
scas
add
out
sub
loope
pmaxub
inc
lahf
cmp
or
inc
sahf
rolb
and
enter
imul
adc
popf
imul
es
movsb
xchg
and
iret
sub
cld
lds
in
add
jnp
sar
pop
inc
icebp
dec
xor
in
mov
je
ret
fcmovnbe
fwait
ss
rcr
and
aam
fstpl
aaa
adc
mov
xchg
test
jp
cltd
jmp
dec
add
jbe
and
pop
int3
cmpsb
pop
xlat
clc
pop
daa
inc
mov
clc
mov
fistpll
pop
js
mul
test
mov
jl
fsubl
scas
icebp
add
pop
sub
arpl
call
pushf
jg
dec
pop
mov
xor
inc
loope
sti
push
int3
sti
jl
in
push
mov
mov
dec
movsb
xor
xor
gs
fistpll
test
push
int3
pop
test
dec
push
fmuls
push
sub
daa
push
lock
push
xchg
loope
loop
lret
cli
sti
adc
pop
adc
lea
pop
dec
or
or
es
jb
push
mov
mov
mov
push
adc
out
jp
or
les
jp
in
hlt
inc
scas
jb
aam
cs
addl
adc
sar
js
adc
lret
xlat
pop
lahf
fidivrs
repz
outsb
cmc
mov
cmpsl
ret
add
insl
les
and
mov
push
dec
push
cmpb
in
stos
dec
loop
push
cli
rolb
sub
jns
sti
fldt
shlb
daa
mov
call
jmp
sbb
pop
ret
and
sbb
sub
dec
mov
fldt
xchg
mov
cld
mov
push
mov
scas
lds
mov
mov
xchg
popa
ret
js
mov
je
sub
subb
cmp
orl
push
movsb
addb
or
lds
mov
adc
fs
ss
mov
jmp
xchg
std
sbb
dec
xchg
repz
lcall
int
push
cltd
xchg
jnp
enter
dec
add
or
cmc
mov
push
xchg
xchg
lret
jno
sub
sti
add
mov
and
mov
add
into
adc
push
dec
dec
sub
push
or
dec
daa
dec
popl
adc
aaa
fiadds
xor
pop
and
scas
insb
adc
sbb
xor
push
sub
pusha
mov
ret
je
mov
cmp
rcr
push
call
fs
clc
jns
mov
loopne
cltd
adc
and
and
insb
mov
fadd
fwait
iret
pop
push
adc
movsb
inc
out
std
cmpsl
andb
dec
lcall
and
push
out
jnp
jns
cmp
mov
xchg
adcb
stos
push
lods
xlat
push
mov
or
test
mov
lods
xchg
shl
stos
lods
out
ret
popa
dec
push
mov
mov
insl
call
mov
pop
or
jno
insl
int
scas
data16
out
xorb
shlb
ret
loope
push
cwtl
xchg
dec
hlt
jnp
sar
shlb
mov
push
in
decb
mov
scas
in
lret
enter
or
xchg
sbb
lock
and
ret
movsb
scas
mov
push
les
pop
sub
push
out
pop
adc
add
inc
int
sbb
or
cmp
mov
js
rcrl
xchg
fiadds
or
adc
or
cmpsb
pop
lahf
and
iret
and
dec
data16
jo
bound
jb
jg
or
sbb
or
jo
addr16
rcll
lret
movb
sub
daa
inc
je
test
add
hlt
outsl
adc
mov
mov
mov
adc
test
sbb
loope
ret
and
mov
jne
dec
mov
pop
xchg
dec
rcl
cmpsl
jo
inc
xchg
test
push
mov
add
mov
sti
add
es
shr
mov
pop
xor
or
fs
mov
ret
popf
out
jge
push
inc
insl
faddp
lock
dec
bound
je
insb
fnsave
xor
movsb
jno
mov
mov
cmp
jle
cwtl
popf
call
adc
inc
mov
mov
fdivrl
les
iret
inc
hlt
or
add
pop
push
mov
mov
lahf
aad
mov
sbb
jle
shll
ljmp
dec
and
lods
icebp
out
pushf
imul
lea
lret
inc
sbb
clc
push
mov
sbb
sti
lods
pop
add
cltd
sbb
xchg
cmp
ja
or
push
adc
shrl
mov
lods
std
out
jp
enter
arpl
iret
in
stos
cltd
imul
push
sbb
rolb
cmp
int3
ja
dec
insb
mov
pop
mov
bound
rcrb
mov
sar
push
aas
jmp
and
mov
add
addr16
ret
repnz
fmull
cmp
cmc
repz
divps
and
mov
sub
fidivrs
out
or
jns
pop
and
mov
xor
icebp
outsl
inc
mov
xor
dec
jnp
idivb
inc
pop
fidivrl
aaa
jb
fwait
stos
loop
pop
addr16
xor
mov
push
xlat
xor
jl
inc
int3
push
xor
jecxz
mov
jno
imul
inc
fdiv
sbb
fidivl
stos
xchg
sbb
pop
xor
add
dec
fdivrl
shlb
fistps
outsl
adcb
xchg
mov
negl
pop
mov
mov
push
scas
stc
out
sbb
outsl
sbb
xor
and
xchg
lods
sub
into
fcoms
js
fsubrl
outsl
xchg
add
sahf
iret
mov
or
es
adc
insl
jmp
adc
xchg
mov
mov
mov
rol
shr
sahf
mov
mull
leave
xlat
adc
nop
dec
sbb
test
arpl
test
push
scas
sub
fstpl
icebp
sar
repz
mov
cmc
fldl
sbb
push
inc
int
xchg
add
adc
mov
data16
mov
fsubp
pop
push
test
in
inc
adc
addb
add
lahf
or
push
or
jp
les
js
andl
cmp
dec
mov
adc
aaa
movl
xor
adc
jle
imul
adc
jle
repz
std
jno
mov
pop
xchg
jbe
push
mov
sub
lock
incb
push
clc
and
popa
sub
add
adc
pop
fstps
xor
xor
xchg
and
mov
or
lods
lcall
pop
into
xor
dec
mov
add
mov
cmp
add
cs
cmp
adc
jmp
sahf
sbb
mov
ret
out
push
jno
stos
add
ret
push
loopne
jb
pusha
insb
je
fdivrs
std
mov
add
add
sbb
xor
fldl
leave
leave
lret
sahf
push
sbb
mov
fs
mov
push
add
dec
adc
push
lods
int
pusha
mov
pop
and
out
lods
lds
xor
add
jns
cwtl
pop
jne
pop
jmp
int
ss
sub
xchg
inc
in
sarb
jae
xchg
aam
cmpsl
mov
xchg
and
lea
rcrb
adc
jae
jge
pop
aam
mov
dec
cli
dec
jl
movsl
push
test
sarl
xchg
movsl
mov
cltd
mov
pop
jp
jae
out
xchg
leave
dec
shlb
pop
jnp
pusha
cld
jmp
adc
rorl
push
inc
in
imul
imulb
mov
push
lods
mov
sub
lock
dec
mov
dec
jp
enter
ljmp
sub
mov
push
pushf
xchg
pushf
rcrb
pop
mov
ss
dec
add
out
lcall
and
or
cs
cli
mov
fs
jno
stc
and
lock
dec
mov
pop
imul
mov
loope
loope
pop
mov
dec
data16
mov
pop
xchg
xchg
xlat
mov
sbb
sub
cmp
aas
push
xlat
daa
push
es
insl
mov
xchg
xor
mov
roll
pop
inc
cmpl
orb
int3
jge
dec
popf
repnz
cli
dec
pop
pop
mov
lods
call
clc
push
add
fsubrs
push
lret
or
xchg
sub
aad
ret
mov
dec
shl
lea
mov
aam
pop
adcl
sbb
pushf
js
push
or
mov
int3
int3
pop
add
xor
idiv
push
mov
andl
pop
imull
cmp
mov
lods
mov
cmp
sub
push
xchg
pop
push
insb
jno
gs
adcb
cmpsb
add
push
insb
inc
mov
xor
arpl
dec
scas
test
sbb
sbb
div
loopne
repz
xchg
enter
mov
fmuls
es
rclb
pop
pop
aad
pop
sbb
mov
add
cmpsb
in
in
sub
push
or
mov
sbb
push
mov
mov
sarl
ja
dec
inc
pushf
add
add
xchg
cmp
or
sub
cmp
out
imul
test
out
repnz
daa
jge
mov
xor
stos
in
xchg
jne
jge
outsl
xchg
ficomps
sahf
js
imul
jae
int
icebp
inc
mov
fidivrs
adc
js
ror
cltd
pop
rcl
xor
jl
shll
xchg
sub
or
lods
fildl
mov
adc
jle
jmp
dec
mov
jb
or
sbb
mov
movsl
push
mov
dec
pushf
fnstenv
push
aaa
sub
mulb
mov
js
je
das
fucomp
iret
mov
in
or
fcoms
lea
xchg
lcall
mov
push
xor
push
mov
cld
dec
lods
leave
pop
or
push
adc
repz
fstp
mov
dec
loop
insb
pop
push
repnz
and
sti
rol
pushw
out
xor
jno
scas
repnz
dec
int
ja
shll
add
push
insb
push
xchg
pop
push
mov
in
dec
or
leave
xchg
mov
sbb
xchg
inc
dec
outsb
lock
out
push
test
lcall
repz
inc
mov
or
xchg
and
ss
jle
push
cmp
push
sbb
inc
rcrl
fbld
stos
mov
mov
cltd
jge
mov
cmp
pop
xchg
movsl
addr16
orl
out
testb
into
fucom
or
gs
adc
fisubrs
mov
add
into
lea
push
and
pop
fwait
outsb
dec
pop
add
adc
cld
jl
push
sub
mov
loope
in
daa
cmpsl
xchg
inc
stc
xor
cmp
jns
cmp
cmpsb
push
xchg
adc
jle
popf
mov
mov
aaa
aad
sub
push
mov
xor
arpl
repz
inc
sbb
fiadds
xchg
adc
sti
pop
mov
jno
jp
fabs
jl
sub
addr16
cmp
cld
inc
imul
in
mov
inc
in
dec
imul
mov
adc
xor
in
gs
add
hlt
mov
push
or
dec
jae
push
xor
xor
cmp
xchg
mov
sahf
add
inc
mov
jb
test
sub
movhps
sbb
mov
jb
xchg
add
frstor
test
cmpsl
push
fwait
pop
cli
cmp
xor
insl
jo
mov
add
mov
in
mov
sbb
in
movsl
add
ret
dec
nop
or
cmc
mov
sub
mov
fnstenv
ljmp
fisubl
lods
mov
xchg
fcompl
push
lcall
mov
insl
aad
ljmp
int
arpl
mov
cmp
and
cmp
cld
or
shll
out
imull
dec
mov
pop
cwtl
push
int
sub
sbb
sub
dec
push
adc
das
push
jbe
bound
aas
or
test
mov
jmp
loopne
repz
pop
enter
jl
pop
lods
mov
and
lea
bound
jno
inc
mov
sub
jno
divl
std
sahf
pop
shl
and
out
add
xor
cmp
sti
pop
cmpsl
sbb
push
out
lods
fidivrl
xchg
mov
lea
sbb
mov
aad
add
push
add
das
adc
xchg
and
push
push
push
and
jmp
jp
xlat
mov
out
push
movsl
cmc
loop
add
xor
and
pop
inc
cpuid
or
fsts
or
enter
add
cmpsb
loopne
xor
lahf
pop
aas
adc
aad
sub
fcom
repz
pop
cltd
dec
stos
cmpsb
popa
xor
sbb
outsl
shr
sbb
xchg
or
inc
fisubl
mov
repnz
insb
inc
mov
iret
outsb
push
sbb
flds
add
fwait
shrb
adc
inc
inc
out
pop
test
xchg
in
sahf
add
cld
pushf
cmpl
hlt
sti
push
arpl
jp
inc
adc
adc
scas
lret
lods
daa
jb
xlat
xchg
hlt
xchg
inc
cmp
lret
cmpsl
pop
data16
lock
int
clc
pop
mov
sub
adcl
in
mov
sbb
jae
pop
dec
push
lock
lock
jb
jecxz
shll
fwait
clc
gs
push
cmp
arpl
pop
mov
push
loopne
adc
imul
andl
cmpsb
sub
sub
xor
mov
mov
adcl
sbb
push
mov
jns
dec
jmp
fsts
pop
subb
add
sub
xchg
bound
sarl
and
dec
dec
push
mov
popf
out
mov
mov
mov
inc
sti
sbb
mov
insb
dec
inc
or
pop
pop
shll
xor
loop
add
inc
and
out
inc
mov
scas
dec
pop
test
in
dec
xchg
je
aas
mov
adc
fildll
add
ficoml
movsl
push
jo
and
jo
aad
sbb
sti
cmc
cmp
sbb
add
addr16
mov
cltd
js
rclb
dec
mov
jo
sbb
ret
sub
xchg
or
cmpsb
add
add
out
cs
jne
mov
fistps
ficoms
and
inc
dec
adc
imul
out
shll
xchg
sub
mov
xchg
mov
or
jne
es
mov
jno
out
bound
pop
and
xabort
movsb
push
dec
sbb
adc
out
add
testb
xor
add
adcl
jns
repz
pop
and
je
loope
leave
cmp
setne
out
sub
mov
sub
out
pop
push
lods
xchg
push
outsb
jecxz
cwtl
mov
fstp
lods
inc
or
mov
int
jg
out
insb
neg
pop
xor
pop
xlat
push
sub
cmpsb
xor
push
push
inc
insl
jnp
mov
sahf
add
push
sbb
inc
test
rolb
cltd
dec
shlb
jno
in
mov
outsl
fninit
aaa
push
je
cwtl
pusha
loop
outsb
inc
icebp
in
adc
out
vmread
push
inc
xchg
dec
test
pop
xsha1
cmpsb
dec
insl
mov
dec
xor
dec
jp
xor
dec
cwtl
ficoml
fidivl
lret
jae
mov
imul
icebp
mov
fdivrs
les
rcll
ds
stos
pop
push
fidivs
pop
popa
dec
int3
sub
sbb
sub
rcrb
lods
enter
adc
cwtl
inc
sub
xchg
addr16
rcl
jno
pop
popa
and
and
mov
xchg
xchg
js
rolb
out
movsl
in
je
inc
jno
push
lahf
ljmp
add
mov
fs
clc
add
call
pop
sahf
out
xor
out
dec
mov
fwait
and
jno
int
ds
lret
out
xor
das
lods
pop
inc
int
inc
xlat
dec
or
jle
xchg
jo
push
aam
inc
aad
cld
mov
addr16
mov
push
inc
bound
and
dec
jbe
sbb
nop
sbb
mov
movsb
xchg
xchg
out
ljmp
and
adc
hlt
cmpsl
xor
insb
lcall
mov
test
mov
std
out
sbb
jae
lea
mov
scas
inc
mov
xchg
test
adc
shlb
xor
mov
std
lds
mov
leave
mov
sub
sbb
pop
xchg
mov
jmp
xlat
push
lods
push
dec
push
pop
loop
mov
xor
sbb
ffree
jno
repz
stc
jg
filds
fiadds
scas
and
xor
jne
push
xor
sbb
mov
data16
int3
imul
or
outsb
rclb
jmp
jge
adc
mov
pop
sti
fstl
insb
imul
fstpt
cmp
adc
dec
lods
or
insb
jns
hlt
xchg
xchg
out
xor
sbb
push
push
lock
test
in
and
ss
jle
and
inc
test
mov
xchg
or
imul
aas
movsl
inc
in
add
dec
insl
test
mov
fimuls
aaa
and
movsb
push
lea
pop
lods
push
arpl
in
sub
fisttps
dec
test
xchg
dec
cmp
int
call
mov
jnp
out
mov
xor
and
inc
rorl
lcall
adc
stos
dec
lods
lock
lods
out
rclb
or
dec
pop
int
adc
xor
dec
add
xor
mov
movsl
pop
push
and
int
mov
ror
repnz
outsw
add
adc
js
aaa
mov
sti
xor
pop
int3
loopne
adc
jle
insb
jmp
mov
mov
push
dec
cli
lret
mov
jno
xor
mov
sub
mov
int
jne
jne
jo
jle
loopne
movsl
lds
rorl
arpl
jns
lcall
add
cmp
cwtl
xor
cltd
jb
dec
js
iret
out
bound
aaa
jp
mov
mov
fcomps
mov
out
pop
xchg
cmpsb
movsb
xlat
sub
out
push
rcl
imul
movsl
sub
adc
push
pushf
imul
or
mov
orb
jb
xor
xor
and
sahf
inc
jbe
mov
sbb
enter
pop
dec
pop
add
inc
out
jnp
rcl
mov
cwtl
mov
dec
mov
nop
test
adc
xchg
push
dec
out
fstps
lds
adcb
sub
gs
in
or
push
sbbb
jnp
aad
push
call
enter
stos
jne
sbb
fnstcw
fisubs
push
mov
fldl
js
mov
mov
daa
stos
adc
fcompl
ret
cmpsb
inc
sub
adcb
xchg
test
xchg
cmp
das
fnstenv
ja
xor
lods
pop
mov
xor
sub
leave
mov
mov
xchg
movsl
jns
xchg
push
sahf
int
sbb
roll
mov
je
jge
push
repnz
testb
or
pop
out
adc
les
mov
dec
in
mov
jg
scas
push
pop
subl
or
xor
loope
or
dec
scas
dec
jbe
mov
popw
mov
push
loope
fs
fnstsw
fmuls
aad
stos
fsubp
push
adc
shrl
cwtl
mov
sahf
adc
aas
mov
icebp
fsubr
ret
enter
sub
loope
lds
xchg
popf
dec
adc
adc
mov
add
and
sbb
imul
cmpsl
movsb
cwtl
das
mulb
je
pop
push
push
addr16
xchg
loopne
sub
inc
std
arpl
pop
and
add
push
aam
or
and
pusha
xor
mov
jne
cltd
push
cmpsl
mov
addr16
xchg
lods
xor
sub
stos
subl
pop
add
cltd
and
cmpsl
cmp
or
ljmp
out
pop
nop
loop
xor
cmc
xchg
mov
xchg
fwait
push
aas
sti
adc
mov
pop
int
mov
das
cmpsl
cmp
jo
pop
aas
cmc
mov
add
fcmovnb
xchg
cld
test
dec
add
push
mov
and
and
sbb
xor
mov
jns
pop
push
testl
pop
adc
fidivrs
popa
cmp
sub
mov
aam
shr
or
loopne
insl
mov
cmpsl
mov
push
iret
mov
sahf
popf
addr16
pushf
push
pop
pop
dec
and
cwtl
or
dec
mul
int
inc
movsb
imul
sub
gs
xor
pop
or
call
in
inc
cmp
push
lods
push
inc
mov
decb
loopne
jbe
jno
push
push
xchg
fimull
sbbl
lea
add
push
ret
and
fwait
inc
enter
imul
sti
mov
cwtl
std
push
add
cli
repnz
js
out
jecxz
les
sbb
cmp
js
xchg
stc
inc
push
adc
xor
pop
sub
daa
rorl
cmp
clc
pop
fidivrl
test
sbb
or
cli
in
pop
adc
sub
jg
mov
push
inc
cltd
inc
add
jmp
sub
movsl
mov
stos
adcb
cmp
shlb
insl
out
xchg
ljmp
fsubrs
inc
leave
cmp
js
jle
jo
popf
aaa
repz
xchg
ret
cmpb
push
push
popa
rolb
out
popa
add
sahf
ja
xchg
mov
add
fistl
out
jmp
icebp
insb
sub
xlat
add
dec
fstl
adc
cmp
push
xchg
jmp
out
xorl
add
lahf
test
adc
lret
jns
pop
jle
fs
push
data16
cmp
out
aaa
and
sarl
xchg
popa
out
jnp
xchg
lcall
idivl
enter
nop
arpl
loopne
push
push
xchg
mov
aad
test
es
shrl
xor
insl
scas
or
mov
jae,pt
jg
sub
jle
mov
adc
inc
cmpl
jecxz
testl
mov
jl
dec
jno
mov
cmpb
cltd
mov
icebp
hlt
mov
inc
enter
push
into
or
or
inc
rcrl
icebp
mov
insl
mov
jge
xor
add
mov
pop
inc
mov
das
sbb
and
xor
hlt
shlb
sbb
sub
jnp
cmc
je
out
loopne
int
fldl
jo
xor
out
jns
sbbl
mov
pop
repnz
xchg
add
sub
sub
ljmp
mov
mov
stos
sub
add
inc
sub
pop
xchg
subl
adc
cmp
iret
dec
int3
or
push
pop
pop
inc
and
repnz
fwait
jns
xor
sti
xchg
add
xchg
mov
ret
fdivs
cltd
adc
clc
subl
jecxz
sub
sub
mov
sub
cmp
dec
gs
lret
mov
lret
push
dec
lret
cltd
push
addl
lods
xchg
jb
sub
dec
pop
fldl
cmp
push
repz
dec
movsl
xorl
xor
in
sbb
add
or
xlat
ficomps
add
stos
cmpsl
adc
pop
push
fstpl
xchg
cmp
sbb
inc
ret
test
jns
fistl
dec
in
je
lods
sbb
fcmovu
push
push
pop
cs
ror
or
push
es
ja
cli
and
and
sub
xor
ret
aam
icebp
fsts
in
std
push
sub
cmp
push
test
inc
scas
xor
test
mov
xor
xchg
sub
lret
fs
sub
push
inc
mov
pop
jo
pop
mov
cmp
fidivrl
adc
out
lds
hlt
lahf
jns
push
test
dec
add
inc
loopne
insb
filds
push
jge
in
xchg
daa
rcll
outsl
mov
lcall
and
das
shll
data16
pop
outsl
fcompl
jp
pop
outsb
insb
out
add
fidivrs
push
sbb
jbe
out
push
neg
shl
shrl
ficomps
cmp
arpl
xorl
mov
jae
imul
enter
sub
and
shl
mov
lcall
ljmp
add
inc
outsl
test
ret
ror
insb
lahf
pusha
call
aaa
pop
js
sub
addl
push
loopne
xchg
cmp
ljmp
outsb
mov
xor
insl
rolb
cmpsb
into
add
out
mov
test
hlt
jmp
pop
int3
cmpsl
sbb
xor
mov
add
pop
int
loope
xchg
xlat
fnstsw
inc
dec
or
test
jge
sub
movsb
fildll
cmp
inc
sbb
stos
xchg
mov
or
repnz
lret
xor
aam
xchg
outsl
lods
push
inc
cmc
out
pop
xchg
add
inc
ja
inc
mov
jb
dec
mov
push
outsb
loope
movsb
xor
subb
out
xchg
push
lock
lcall
sub
cmp
inc
cltd
adc
aas
fadd
jg
mov
xchg
mov
leave
int
outsb
pusha
dec
add
mov
cmp
aad
into
aam
mov
mov
ljmp
pop
rorb
lret
lock
cmovns
inc
cmp
in
mov
xchg
scas
popf
mov
sbb
inc
or
mov
mov
cwtl
mov
cmp
js
fnstcw
in
aas
jae
dec
jmp
lcall
and
inc
pop
mov
jg
or
test
jno
ds
rcrb
scas
imul
jp
mov
scas
insl
int3
mov
jb
aas
xor
test
push
hlt
jmp
loopne
xor
xor
push
loopne
lds
call
pop
call
mov
xor
mov
aad
mov
cmp
ljmp
into
test
inc
cld
icebp
or
rcrl
and
cwtl
sti
or
add
mov
jne
ds
test
cli
xchg
mov
mov
ss
jo
ret
jmp
jb
andb
data16
fstpt
das
push
inc
sti
leave
or
add
adc
push
jmp
adc
mov
int3
fsub
fnstenv
add
xchg
cmp
adc
jg
repnz
popf
and
sbb
push
cwtl
pop
push
ret
jg
mov
xchg
or
dec
sbb
xchg
popf
inc
mov
or
jmp
lcall
mov
dec
aam
stc
sub
mov
mov
push
sbb
sub
ja
add
inc
mov
jmp
cwtl
loopne
fdivrl
and
iret
adc
lods
xchg
repnz
mov
in
xlat
fwait
or
mov
in
jmp
add
cs
test
add
cli
dec
mov
popf
adc
cmp
outsl
or
inc
aad
pop
inc
notl
mov
lahf
int3
fadd
cltd
movsl
pop
imul
mov
rol
dec
mov
or
subb
test
xor
or
stc
ret
cmp
fdivrs
inc
mov
adc
push
jae
cwtl
mov
in
xor
add
cmpl
add
mov
mov
add
jns
inc
adc
imul
das
sbb
popa
hlt
std
push
ljmp
jbe
jmp
repnz
aad
inc
sahf
xor
mov
sub
add
cmp
pop
movd
xor
inc
push
and
and
fcoms
push
das
sub
mov
loop
push
in
je
cmp
cmpsb
xchg
jmp
cmp
jae
push
imul
pop
nop
into
pushf
xor
or
orl
lcall
pop
loope
push
outsb
or
mov
mov
mov
loop
inc
lea
bound
lcall
aad
lret
lea
xor
enter
out
push
ja
andb
test
popf
xor
imul
leave
pusha
sub
dec
add
ss
and
dec
mov
xchg
jge
xchg
mov
mov
jg
push
addr16
ror
and
fdivrl
mov
imul
push
mov
ds
ja
xchg
cmp
ss
pop
jbe
mov
lcall
out
dec
clc
dec
jmp
jo
sub
in
cltd
xor
add
sti
or
add
mov
ds
pushf
jb
mov
inc
sti
insl
aaa
sahf
add
sub
or
sbb
nop
data16
mov
cmp
jle
push
jecxz
dec
int3
bswap
jne
sti
jp
daa
adc
ficompl
adc
pop
icebp
mov
cli
dec
scas
aas
aad
or
sub
in
mov
popf
pop
jle
fadd
cmp
rcrl
sbbl
lcall
ret
in
mov
ret
imul
adc
aas
addr16
sub
movl
clc
and
in
lea
sbb
cmp
mov
sbb
ret
xchg
int
mov
clc
push
test
mov
jmp
dec
pop
sub
add
pop
jae
dec
push
sbb
daa
xor
loop
push
xor
push
pop
shlb
pushf
repz
rcrl
scas
mov
pop
cltd
lds
cmpsl
xchg
fwait
sub
imul
orb
aam
push
mov
popa
push
lret
lea
cld
inc
out
lock
cmp
jbe
sbb
std
and
xchg
dec
sbb
mov
dec
jmp
sbbb
cmp
mov
ljmp
sti
push
push
xchg
push
cvtps2pi
ljmp
repnz
mov
pop
pop
xlat
hlt
lock
ljmp
mov
pop
cltd
inc
lea
lock
popf
mov
sub
mov
push
mov
mov
test
cmp
push
sub
xchg
lds
and
stos
xor
pusha
movsb
loop
cmpsb
mov
sbb
mov
adc
and
dec
imul
int
fcompl
ss
adcb
xchg
fcoms
add
sub
jb
daa
mov
lds
int3
jo
adc
adc
mov
sbb
in
in
les
mov
push
add
xor
sub
lcall
cmp
es
jnp
ja
jge
push
pusha
push
sbb
fiaddl
mov
fildl
or
mov
outsl
sbb
cli
jmp
insl
pop
jg
cwtl
mov
jns
fcompl
es
xchg
cld
hlt
fistpll
stos
test
pop
stc
stos
js
mov
in
aam
add
pop
mov
iret
inc
lcall
fadds
push
insl
testb
fsubs
xor
push
push
xlat
xchg
icebp
or
lods
jbe
add
cmpsl
daa
adc
sarb
ljmp
pop
not
adc
add
add
into
pop
ss
bound
clc
pushf
pop
scas
jp
dec
and
push
lods
push
out
mov
nop
cltd
cli
movsl
xchg
xlat
jp
mov
fistpll
or
xorb
ds
add
mov
scas
cwtl
std
icebp
sahf
stos
shr
imul
mov
mov
pop
out
push
mov
add
arpl
xchg
pop
movsb
js
and
or
adc
shll
inc
cld
inc
lea
jl
inc
je
sbb
push
sub
je
push
sbb
push
leave
jae
ljmp
jo
ljmp
nop
sub
push
push
repnz
push
shrl
pop
idivl
stos
lds
mov
inc
mov
inc
shll
insl
fildl
push
xor
test
xchg
popa
mov
jne
xor
ja
out
jg
xchg
mov
mov
int3
pusha
jmp
scas
mov
push
fistpl
push
cli
pop
fildll
je
stos
sub
inc
subl
jp
pop
insb
mov
dec
fsts
mov
scas
pop
and
in
repnz
cmc
cmp
mov
pushf
imul
inc
test
cmp
les
in
lds
imul
push
cmp
fcmovnbe
imul
movsb
pusha
iret
shll
sbb
cli
out
xchg
mov
scas
mov
sub
mov
add
hlt
adc
sbb
lods
cmp
ds
mov
and
xlat
jae
sti
mov
je
xor
in
leave
in
mov
ds
mov
cltd
push
add
inc
sub
in
mov
lods
ffree
adc
test
cli
dec
cmpsb
pop
or
push
and
inc
hlt
je
inc
cmp
test
sbb
mov
xchg
and
dec
xchg
push
ja
pop
movsb
ss
or
orl
js
sbb
in
testl
out
add
add
lods
addr16
adc
scas
mov
es
inc
or
mov
sti
mov
jge
xchg
fisubrs
aas
pop
das
xor
push
neg
rorb
dec
push
cmp
and
fsubrl
xchg
fwait
xchg
mov
leave
add
filds
lcall
sub
push
loope
pop
cwtl
dec
and
mov
mov
jns
sub
std
pop
pop
inc
add
cmc
sti
cmpsl
xor
aad
mov
call
pushf
pop
pusha
sub
or
ret
cmp
add
bound
iret
sti
adc
push
or
mov
cltd
xchg
sub
jo
mov
out
jg
mov
mov
cmpl
xchg
mov
mov
jmp
movsl
addl
xor
mov
push
bound
insl
aad
je
notb
imul
mov
cli
xchg
cltd
xchg
jns
and
loope
add
adc
xchg
cld
dec
cmp
pop
es
icebp
sbb
cli
pop
jbe
jo
cwtl
mov
ret
test
scas
push
mov
out
addr16
xor
add
fwait
dec
mov
xchg
mov
pop
mov
dec
stos
inc
jne
xor
xchg
mov
fsubrl
pop
sbb
sbb
aas
je
mov
daa
mov
xchg
adc
lods
lds
pop
jge
in
xchg
movsl
push
shl
pop
inc
jmp
repnz
incb
mov
outsb
mov
xor
mov
cld
aam
mov
cmp
int
inc
es
jl
arpl
push
xlat
decb
jge
jne
lds
pop
insb
adc
fstps
fcoml
jmp
cmpb
pop
jo
jns
push
insb
hlt
insb
jo
into
stos
or
jle
fildl
xor
add
loope
call
inc
fbstp
ret
jns
clc
mov
or
or
das
and
inc
xchg
lds
or
mov
jmp
int
fs
push
aam
mov
mov
pop
inc
xor
aas
fidivs
sub
pop
cld
push
cmpsl
pop
push
bnd
outsb
leave
mov
scas
mov
std
cmp
cmovae
mov
sub
iret
shll
out
inc
ds
dec
adc
mov
push
fstps
popf
xor
sbb
xchg
jp
sub
inc
divl
mov
cltd
fmul
inc
xchg
jno
ds
mov
pop
cwtl
movsl
mov
mov
adc
xorl
sbb
and
loop
notb
jb
subb
lcall
adc
push
shl
mov
cmp
insb
jbe
jg
and
inc
dec
js
xchg
xchg
pop
add
push
jecxz
leave
mov
cmp
mov
or
leave
cmp
inc
insb
pop
push
gs
fsubr
cmp
test
arpl
push
adc
fcmove
test
mov
xor
adc
fcmovbe
add
mov
jmp
pop
aad
sbb
dec
data16
cmc
sub
lcall
daa
pushf
dec
jo
xchg
dec
test
das
xchg
xchg
lea
sar
pusha
call
scas
sbb
cmpsl
xchg
add
sbb
in
jl
das
ss
rcrl
testl
sti
adc
cmpsb
mov
push
mov
xor
xchg
jl
pop
popa
add
test
out
lcall
imul
pop
or
aam
in
ficoms
inc
movsb
and
test
push
arpl
and
jge
xchg
mov
add
pop
cmp
loop
sbb
lea
cmpl
sahf
loop
lods
and
hlt
ja
loop
xor
data16
mov
aaa
push
outsl
xor
sarb
sbb
fcomi
xchg
add
in
or
mov
das
push
mov
xor
dec
test
push
jecxz
mov
and
mov
push
add
sub
ljmp
xchg
lret
adc
xchg
mov
sub
dec
push
mov
mov
call
inc
mov
mov
pop
clc
dec
divb
add
lcall
jmp
test
roll
out
popf
cmp
mov
test
jp
mov
aas
sti
into
adc
push
mov
rorl
xorl
add
dec
or
test
out
jmp
sbb
jo
jecxz
push
pop
adc
scas
jne
sub
lea
imul
int
sahf
mov
movsl
dec
popa
pop
push
and
mov
data16
jnp
mov
jecxz
xchg
sbb
mov
jno,pn
xchg
mov
jae
mov
push
jp
lahf
mov
aaa
outsl
inc
outsl
jne
inc
fistl
mov
sub
jp
mov
imul
push
and
sti
jns
in
pop
add
jp
xlat
cltd
call
notl
or
jns
ret
cmp
mov
in
decl
scas
jo
dec
inc
ljmp
test
inc
mov
lods
lods
fstpl
and
sbb
inc
sub
push
addr16
ja
mov
out
mov
imul
lock
cmpsb
movsl
movsl
mov
rclb
adc
adc
ss
mov
inc
xchg
or
xor
ds
and
push
in
push
pushf
mov
mov
push
sbb
jne
mov
std
outsb
aaa
xlat
repnz
stos
sbb
cmpl
adc
insb
and
mov
sbb
jecxz
insb
mov
pop
and
std
lock
shlb
xor
gs
pop
repz
sti
fs
into
ret
dec
dec
push
fs
fmul
pusha
add
in
test
xor
iret
mov
cli
pop
cmp
mov
ss
cli
fimuls
xchg
or
or
daa
cltd
out
mov
and
pop
dec
mov
notb
sarl
push
ljmp
add
add
add
repz
loope
sbb
addb
pop
repnz
add
jmp
imul
in
cmpsl
mov
mov
rcrb
dec
shlb
sbb
mov
xchg
pop
insl
jae
mov
stos
xchg
shrb
out
sbb
test
sbb
push
pop
rcll
mov
movsl
test
outsb
pop
mov
cmpsl
lods
or
xchg
sbb
xor
xorb
pusha
mov
insb
jp
jns
fdivrs
pop
pop
xchg
push
rolb
and
movq
jae
mov
mov
in
inc
push
push
sbb
out
and
leave
lret
fidivl
mov
adc
inc
ljmp
cmpsb
es
jb
and
mov
xchg
or
call
cmpsl
xchg
xchg
push
int3
push
nop
dec
cli
imul
cwtl
dec
cmp
push
push
push
enter
fimuls
dec
xchg
lock
sub
mov
mov
cmp
fldt
subl
out
sahf
sbb
mov
insb
cltd
testb
inc
sti
cmc
in
neg
cmove
mov
in
and
push
xchg
cmp
sarl
pop
jno
add
mov
xchg
cmpsl
mov
or
mov
mov
pop
rcrb
xchg
dec
into
fst
pop
js
xlat
xchg
aad
idiv
mov
jbe
mov
jbe
add
lea
lret
sub
dec
sti
in
jnp
xchg
clc
jo
int3
in
outsb
fs
insb
mov
xchg
push
cli
inc
and
adc
in
xchg
push
inc
cli
popf
add
add
sub
jecxz
pop
test
loope
xchg
push
and
pop
cmc
push
fimuls
mov
enter
jns
inc
xchg
jns
push
xchg
add
nop
mov
imul
js
into
xchg
lcall
push
insl
insl
mov
sti
cmp
ds
mov
dec
inc
or
mov
push
jae
cmpsb
sub
out
pop
adc
sub
sbb
and
out
and
inc
xor
in
cmp
inc
cltd
pop
pop
xchg
add
cmp
js
xchg
sub
pop
sbb
fildll
cmp
pop
xchg
sbb
xor
gs
jmp
mov
mov
cmp
cmp
nop
loope
mov
insb
out
xchg
shlb
mov
sbb
sbb
aaa
xlat
add
or
add
sbb
sbb
mov
test
fidivl
sbb
movsb
ds
push
aas
sub
lahf
pop
inc
fnstcw
mov
loopne
xor
movb
mov
sub
sahf
int
mov
inc
mov
mov
xchg
je
add
test
ficompl
fwait
test
test
sub
dec
xchg
adc
aaa
dec
cs
mov
outsb
inc
ret
mov
incl
or
scas
add
cmpsl
mov
arpl
and
push
add
mov
cmp
jle
loope,pt
fsubs
push
sti
jbe
sub
lahf
arpl
mov
stc
sub
bound
ret
call
dec
ljmp
negl
ljmp
adc
pop
xchg
xor
xchg
arpl
dec
cwtl
sub
mov
mov
stc
cmp
roll
cmp
ret
jl
rolb
pop
pushf
mov
lret
push
sbb
pop
fiaddl
xor
mov
in
cvttps2pi
or
scas
xor
mov
cmp
jle
push
add
lea
cmp
xor
pop
ss
cld
add
lret
mov
dec
sub
mov
and
les
xorb
cld
out
push
pusha
test
hlt
jmp
jg
std
xor
inc
add
sbb
and
mov
adc
lcall
mov
mov
jmp
xor
sahf
push
jmp
push
add
adc
dec
inc
fucomi
ret
test
fdivl
shrb
or
cs
mov
add
daa
repnz
and
adc
add
pop
pop
or
mov
lods
xor
push
or
lret
dec
inc
mov
pop
repnz
sahf
pop
xchg
stc
lret
cld
pop
pusha
and
sbb
loopne
mov
stos
fdivrl
lea
sub
mov
mov
jae
lock
and
sub
push
arpl
js
mov
loope
dec
lret
pushf
leave
inc
in
call
pop
xchg
in
sti
test
cli
cmpsl
or
or
add
sub
aam
or
fcomip
pop
mov
mov
loope
sub
inc
jecxz
add
and
ljmp
shrl
pop
sbb
clc
cli
and
in
js
pop
rcl
jo
adc
cmp
inc
jno
pop
pop
fwait
pop
mov
cld
inc
int3
imul
testb
nop
repnz
push
ret
mov
repz
jmp
rcl
and
mov
loope
cmp
and
sbb
iret
push
roll
push
nop
pushf
inc
notl
pop
popf
loop
mov
shll
push
xor
shl
int
pop
pop
push
pop
rolb
push
cwtl
dec
fidivrl
scas
inc
ljmp
jnp
jge
jecxz
ljmp
xor
dec
enter
adc
lock
lcall
push
lods
inc
test
fidivrs
adc
lods
test
pop
scas
jae
je
pop
movsl
jmp
inc
adc
push
or
mov
test
inc
xchg
lcall
jnp
cmp
mov
ljmp
cltd
aad
inc
icebp
push
insb
xor
shlb
movsl
scas
sub
movsl
movsl
movsl
stos
pop
sub
sub
repnz
or
pop
test
inc
enter
add
loop
call
rorl
lahf
cwtl
and
and
pop
enter
dec
jns
push
jno
mov
mov
leave
insl
testb
mov
lret
jo
fwait
ljmp
sbb
push
and
add
nop
adc
std
mov
lods
sahf
jo
or
cld
ret
jmp
dec
mov
incb
cltd
fsts
dec
stos
mov
mov
repz
mov
movsl
mov
fwait
jnp,pn
popa
movsb
int
dec
sbb
rcr
push
mov
mov
jp
inc
mov
inc
pop
inc
pop
sbb
bound
sub
rcrl
sbb
xor
divb
and
popa
mov
pop
mov
out
fldl
cmp
rol
pop
sti
mov
bound
sub
sbb
mov
jl
adc
sbb
mov
xor
fstpt
mov
int
mov
dec
push
aad
int3
mov
xor
andb
or
push
cmc
mov
fadd
int
mov
cmp
adc
or
sub
pop
xchg
lret
lds
daa
fistl
xor
xor
dec
stos
jb
jnp
mov
cltd
dec
lret
push
and
jae
sahf
push
or
sub
lock
stc
add
aam
loop
mov
iret
cwtl
jb
in
sti
repnz
mov
or
in
cli
xchg
les
scas
std
in
bound
dec
adc
int3
in
pushf
xor
lahf
push
das
xor
call
es
test
out
lcall
cmc
mov
sbb
in
bound
mov
adc
stos
ret
movsb
movsb
jp
adc
popa
mov
push
loope
ret
cmp
lret
lret
xor
sub
movsb
xlat
add
jbe
and
movb
sahf
sub
lock
clc
sub
loop
adc
xor
adc
cltd
dec
inc
aas
fildl
mov
xor
inc
sti
sbb
adc
repnz
aam
and
mov
into
push
fs
repnz
jmp
mov
pushf
adc
xor
jne
dec
push
stos
adc
xor
fnstenv
lea
sub
dec
imul
loope
je
dec
and
sub
jns
sbb
sahf
daa
push
repz
xor
sahf
push
push
mov
pop
push
xor
xor
sti
jg
or
js
sbb
jne
pop
fcmove
js
pop
int3
cmpsl
jecxz
dec
mov
nop
inc
rorl
push
sbb
or
out
clc
add
push
mov
outsb
shll
adc
lods
jb
jne,pn
xchg
pop
ljmp
xchg
push
or
js
or
out
cwtl
cltd
rolb
push
loope
pop
bound
cmp
imul
scas
and
push
xchg
ss
in
pop
xchg
mov
sbb
dec
daa
or
and
jnp
bound
sbb
sub
mul
movd
mov
lds
pop
mov
lahf
sub
int3
jbe
mov
sbb
dec
insl
mov
dec
lods
out
xchg
aam
mov
cmp
or
add
test
mov
xchg
sbb
xor
imul
pop
adc
adcb
mov
arpl
lcall
ja
pop
or
incl
sbb
fs
outsl
jmp
xlat
mov
cmpsl
call
loop
adc
mov
fisttpl
sub
lods
mov
jl
fistpl
pop
pop
into
stos
sub
jecxz
or
xor
out
cmpb
add
dec
scas
enter
out
cmp
mov
push
mov
mov
push
outsl
mov
scas
sbb
xor
in
shr
mov
sub
pop
daa
pusha
pop
lods
push
test
imul
cmc
xchg
out
cli
sub
aad
mov
mov
sbb
adc
mov
insl
xchg
dec
mov
jb
sub
jecxz
daa
and
cwtl
rorl
cmp
popa
xlat
mov
enter
adc
xor
cmc
popa
icebp
push
mov
xchg
jmp
loop
cwtl
mov
nop
jne
cmp
dec
mov
mov
loope
mov
jb
adc
popa
push
andl
es
cmp
mull
bound
call
inc
ja
dec
daa
push
xchg
dec
fstps
pop
pop
jp
push
fucomi
dec
xchg
popa
out
popf
fnsave
jl
dec
lahf
rclb
dec
lock
ss
mov
mov
mov
adc
mov
jb
and
cmp
sti
add
loopne
mov
adc
inc
and
gs
pop
cmp
jb
and
jg
lock
jns
outsl
cmpsb
cmp
in
and
jbe
cmpsb
icebp
data16
gs
pop
js
push
jo
cld
roll
xchg
lea
pop
pop
pushf
dec
mov
in
fidivs
mov
mov
shl
pop
dec
mov
xor
in
lods
fdiv
out
lret
jne
and
pop
movl
mov
inc
and
mov
inc
dec
sub
pop
rorl
sahf
cli
mov
cmpsl
popa
adc
fcoms
test
mov
movsl
xchg
pop
fucomi
ja
fildl
dec
gs
dec
in
dec
movsl
sub
mov
jge
in
repz
loopne
push
sbb
enter
sbb
pop
out
in
dec
mov
mov
cmpsb
xor
pop
dec
outsl
xchg
test
pop
int3
das
out
add
mov
arpl
lahf
call
fcom
loopne
lahf
aad
fwait
int
or
jnp
mov
out
cmp
lods
insl
mov
lahf
lcall
fldl
jge
cmpsl
mov
sbbb
or
sbb
dec
xor
cmp
xchg
sub
jb
mov
inc
pusha
pop
lock
push
push
cmpsl
cli
out
add
push
popa
jo
sbb
lcall
int
inc
inc
or
mov
xchg
or
and
push
or
rclb
mov
jb
sub
dec
pop
cld
xlat
ror
inc
repnz
sbb
xor
pop
xlat
or
iret
cmp
pop
mov
ja
jle
stos
cmpsl
sub
fldenv
push
mov
inc
mov
inc
ljmp
decl
ret
lea
ja
fbld
fnstenv
xlat
sbb
jp
sbb
in
cmpsl
push
js
or
pop
ficoml
daa
mov
push
inc
pop
iret
mov
bound
adc
pop
call
dec
lahf
sbb
adc
negb
cmpsb
xor
movsl
xchg
dec
stos
insb
push
ror
das
fmull
xchg
popf
xor
out
pushf
orl
fwait
in
icebp
jbe
aad
cmp
sbb
repnz
leave
in
push
in
sbb
pop
inc
pop
jge
jmp
lods
mov
shrb
ja
cld
mov
bound
test
inc
aaa
cmp
fadds
cmp
cmp
sti
pop
mov
ja
and
test
push
and
dec
subb
jbe
movsl
decb
test
enter
push
imul
ss
ret
jge
and
pop
lds
ds
pop
aaa
mov
mov
add
sbb
xchg
dec
mov
push
sbb
xchg
cmp
dec
aad
test
mov
cwtl
sub
and
xchg
scas
pop
lret
call
mov
dec
subl
cmc
rcll
sub
cmpsb
call
adc
mov
xor
ret
push
mov
fiadds
lds
inc
lock
mov
or
sbb
xchg
pop
mov
pop
pop
or
push
popf
mov
or
cmp
nop
in
push
push
ss
cmpsl
fwait
push
jo
in
outsb
pop
fs
repz
aaa
test
rorb
orb
into
test
cmp
out
push
jle
clc
addl
and
in
lret
pushf
das
les
inc
je
out
pop
mov
mov
pop
les
inc
mov
mov
loope
insl
lods
xchg
cmpsb
jge
icebp
stos
insl
cli
out
cmp
nop
jne
jmp
push
mov
and
outsl
hlt
rorl
push
cs
dec
xchg
mov
std
les
lds
cmp
pusha
mov
mov
push
adc
lahf
add
enter
gs
sub
dec
stos
push
ret
xchg
std
jae
loope
scas
scas
xchg
lret
das
jb
shlb
fcmovb
cmp
in
sub
adc
pop
mov
lcall
jno
fisubs
xor
cmpxchg
mov
mov
dec
dec
and
out
rol
jmp
push
ja
xchg
fsubs
pusha
mov
pop
shlb
outsl
mov
in
mov
stos
movsb
imul
testl
lcall
cmp
add
cli
cmp
adc
push
int
add
sub
clc
imul
xlat
out
mov
divl
popf
mov
loope
pop
rorb
jo
mov
movsb
jno
outsl
and
jmp
rclb
mov
mov
inc
jnp
cs
dec
xchg
jmp
nop
rcrl
lds
repnz
xor
and
pop
lahf
mov
cld
call
dec
lret
fs
and
mov
jbe
pushf
sarl
sub
jb
cmp
add
pop
ret
in
jne
ds
loop
push
outsb
loopne
sbb
xor
and
in
outsb
mov
and
mov
pop
xchg
lahf
fs
rcl
adc
sti
cltd
jne
mov
inc
pop
aaa
mov
dec
xor
inc
jnp
orl
insb
inc
or
mov
jecxz
lret
and
jb
rcrb
mov
mov
push
push
xchg
aas
cmpsb
insb
popa
shll
repz
mov
out
mov
push
addb
clc
jge
inc
aad
popf
into
int3
mov
in
aad
pop
arpl
sbb
adc
test
test
in
add
addb
repz
inc
xchg
dec
add
dec
imul
iret
movsb
jno
cli
push
push
loop
cld
mov
stc
pop
mov
cmp
mov
lock
xchg
ss
insl
and
add
xor
push
jmp
lcall
std
dec
xor
xchg
mov
dec
adc
imul
clc
sbb
add
push
and
sbb
inc
cli
loopne
pop
xchg
adc
pop
add
orb
xchg
dec
scas
and
imul
dec
sbb
sbb
call
sub
fs
jl
pop
cmp
mov
xor
stc
shrb
insb
push
fwait
mov
popf
in
xor
sahf
add
mov
loopne
pop
and
rcrl
inc
inc
divl
in
inc
ljmp
test
pop
shr
nop
sbb
ljmp
test
xchg
and
push
dec
add
jo
les
fsubrs
outsl
les
mov
sub
sahf
fcmovnu
addb
xor
sub
jno
push
das
movsl
dec
jno
fldl
sub
lret
cmp
out
sbb
subb
in
das
mov
ret
test
aaa
push
imulb
mov
xor
push
stc
out
arpl
dec
mov
dec
add
dec
add
test
push
movsl
loopne
or
push
mov
xlat
cmp
loopne
or
movsl
jbe
std
mov
cmp
sub
ror
xchg
cs
push
mov
addl
loopne
in
popf
cli
insb
sbbb
cmpsl
jae
xchg
lds
popf
or
add
xchg
cmp
cmp
adc
ds
add
aas
ret
jp
stos
sub
rorb
aas
ds
lahf
sub
pop
push
xlat
pop
adc
cld
cmp
bound
push
xor
cmp
xchg
loopne
cmp
pop
test
roll
push
lock
stc
or
out
lods
push
dec
rcl
dec
int
rcrb
scas
and
cmp
mov
cmp
push
aaa
push
aaa
iret
xlat
das
mov
stc
adc
stos
test
pop
js
leave
sbb
add
or
shrl
lock
and
xor
cmpsl
xor
test
inc
sbb
aas
push
jge
dec
mov
xor
and
movsl
sub
outsb
mov
shlb
shll
gs
mov
mov
bound
cld
sbb
fnsave
or
pop
jno
lods
mov
int3
fwait
mov
xor
movsl
pop
daa
pop
mov
ljmp
jp
fsts
mov
mov
addr16
arpl
and
out
or
rol
data16
aad
jecxz
ja
sbbb
fisubrl
xchg
out
out
dec
lret
movsl
in
pop
fsubp
sti
xor
inc
mov
cwtl
pop
ss
mov
mov
popf
and
xor
push
fdivs
dec
or
or
rcrl
pop
dec
repz
add
shll
mov
or
mov
scas
fisttpll
add
int
std
xorb
dec
jg
jp
mov
lahf
cmc
cld
xchg
cmpl
call
mov
mov
xor
stos
jge
sbb
mov
sub
test
mov
xchg
sti
cmp
and
divl
movsb
call
mov
adc
ja
shrb
fstpt
in
movsl
sbb
mov
cltd
stc
js
add
or
fldcw
mov
cmp
pop
cmp
cmp
jecxz
ficompl
pop
mov
movsl
xchg
jne
cmp
dec
or
xchg
push
xor
sbb
enter
popf
pop
movsl
and
cmc
in
add
cltd
pop
cmp
jge
arpl
lea
and
outsl
pop
push
movsl
jg
out
je
test
inc
lea
je
xor
inc
mov
xor
shll
into
bound
xor
out
mov
sahf
lret
adc
inc
dec
in
mov
pop
lcall
add
add
lds
adc
fs
fcomps
jecxz
mov
incb
pop
cmp
mov
shlb
mov
jns
or
cli
int
popf
push
leave
xrelease
jb
sti
push
pop
xor
push
push
out
loopne
xor
mov
repnz
dec
mov
hlt
bound
arpl
lea
dec
cmp
and
push
clc
leave
pop
lods
andl
test
imul
jbe
pusha
xchg
adcl
cld
adc
mov
imul
mulb
setno
cs
std
mov
lods
cmpsb
or
mov
push
mov
fldenv
outsb
cmp
nop
aaa
das
addb
sub
adc
inc
dec
cmc
or
sti
push
xchg
lock
out
cltd
enter
loopne
xchg
xchg
leave
xor
cli
lahf
adc
mov
mov
in
xchg
ljmp
jecxz
jl
and
jae
or
push
mov
loopne
dec
add
scas
sbb
adc
je
lea
jae
inc
repnz
in
and
inc
fistpll
jne
ficoml
mov
stos
push
popa
call
pop
inc
pop
sub
sti
pop
dec
stos
inc
cmpl
jp
popa
xor
mov
and
stos
imul
ss
cwtl
rcrl
xchg
push
xchg
inc
jae
jnp
fistpll
aam
push
adc
cmpsb
push
popf
scas
scas
aad
int
in
out
xchg
aad
scas
mov
ss
icebp
ljmp
in
dec
lds
addl
xchg
push
dec
in
jb
mov
inc
mov
inc
pusha
and
das
sbb
fstpl
in
mov
adc
aaa
bound
and
or
icebp
outsl
adc
cmp
mov
out
push
jecxz
test
jns
stc
jmp
out
push
xor
fwait
icebp
cmp
cmp
and
and
push
mov
test
xchg
jmp
lret
xchg
shl
sbb
ds
sub
fiaddl
ja
cli
loope
sti
push
and
movsl
mov
pop
xlat
mov
lea
enter
xchg
lea
adc
adc
pop
push
inc
sbb
fnstsw
test
das
xor
mov
push
add
stc
daa
xchg
dec
popf
dec
pop
nopl
jo
mov
pop
mov
leave
loop
inc
mov
popf
ljmp
mov
gs
inc
mov
inc
inc
outsb
xchg
rcrb
cmp
xchg
mov
mov
fiaddl
repnz
sub
jp
nop
div
mov
xchg
mov
mov
data16
or
push
in
outsl
jge
lret
es
rolb
shl
imul
cmp
and
shll
es
ljmp
push
aam
mov
push
aaa
sahf
jl
sti
lods
inc
outsb
dec
loop
js
lcall
pop
push
outsl
scas
add
mov
lea
ljmp
aad
dec
mov
pop
pushf
arpl
ja
add
sbb
loop
sbb
nop
sub
repnz
push
sbb
cmp
mov
cli
or
negb
sub
push
pushf
pop
fdivr
rcrb
xchg
push
mov
mov
scas
repnz
push
mov
gs
aad
dec
je
arpl
push
dec
dec
mov
mov
pop
inc
orl
leave
inc
jge
cwtl
iret
lods
sbb
les
jae
sub
add
call
mov
mov
sahf
dec
repz
mulb
sahf
xchg
or
imul
mov
xor
pop
mov
inc
add
pushf
mov
jecxz
mov
in
mov
rcrb
adc
or
aad
in
rorb
lahf
mov
xchg
or
xchg
jmp
fcomip
pop
mov
imul
adc
and
jecxz
jge
sbb
dec
mov
add
mov
push
xchg
loop
fisubl
mov
call
and
repnz
out
shll
sbb
leave
xlat
xor
andl
in
ds
dec
hlt
fmuls
mov
sbb
jmp
mov
sub
mov
xlat
cmp
pop
push
scas
scas
enter
insb
xlat
sti
insl
adc
push
lcall
jp
ret
adc
insl
sbb
mov
ret
popf
or
pop
fcmovu
int
aam
mov
cmc
dec
rcll
ret
mov
pop
sub
ljmp
daa
push
xchg
mov
stos
and
and
es
xor
dec
inc
std
mov
fdiv
aas
aad
scas
mov
xchg
xchg
sti
flds
xor
cs
jne
je
inc
jns
pop
mov
jae
and
pop
mov
loopne
jb
push
out
psubsb
aaa
mov
pop
mov
popf
or
mov
mov
iret
push
add
out
xchg
sub
pop
sub
mov
and
and
loop
sub
icebp
jg
jge
or
jo
les
fistps
fbstp
es
int
lahf
outsl
sub
in
cmpsl
mov
test
enter
lret
cmp
jnp
rcrl
fistpl
sti
nop
aad
das
jns
jmp
adc
lea
add
mov
loop
outsl
mov
jl
push
out
paddusb
inc
mov
sbb
mov
push
mov
xor
rcrb
out
scas
mov
inc
cs
in
stos
and
int
jbe
pop
jecxz
inc
loope
dec
cmp
andl
push
cmpsl
cltd
cmp
xchg
iret
mov
icebp
scas
ret
mov
push
xor
lahf
out
dec
pop
pusha
add
stos
xor
mov
int3
test
mov
inc
lods
call
push
and
pop
hlt
fadd
in
inc
fcomp
adc
cmp
pushf
shrb
push
outsl
in
mov
mov
cli
cwtl
dec
decl
loop
aad
sub
cmpsb
sbb
dec
jns
dec
or
mov
divb
popf
sbb
adcl
lret
stc
mov
stos
xchg
pop
sbb
push
int
jge
jne
mov
ret
xchg
repz
cwtl
test
das
imul
repnz
dec
xchg
out
inc
dec
fisubs
stos
jae
int
out
leave
sbb
jge
int3
and
pushf
adc
pop
sub
push
lcall
es
ret
fistps
rclb
mov
push
and
push
inc
data16
shl
int
sbb
ja
out
stc
mov
stos
fisubs
test
sbb
sbb
dec
fistpl
cmp
sti
jecxz
xchg
xor
into
in
xor
sbb
gs
mov
xor
dec
rol
xor
jns
sbb
adc
push
jle
sti
pop
jp
lods
pop
cli
testb
xchg
adc
dec
out
lods
jmp
push
cltd
and
out
sub
ja
xor
mov
pusha
pop
and
test
roll
sbb
sub
stc
fstl
popa
setg
popaw
and
icebp
inc
inc
jo
add
add
or
jecxz
or
xor
adcb
pop
pop
cmpsb
daa
jge
cwtl
mov
mov
ja
pusha
pop
xor
mov
push
popf
jle
cmp
fsubrp
lds
pushf
and
cwtl
inc
mov
add
inc
rolb
jge
inc
jno
mov
out
lret
inc
pop
daa
aaa
shrb
sbb
clc
cmp
and
pusha
aad
pop
movsb
ret
mov
aaa
js
adc
inc
cmc
aaa
lret
push
xor
out
fisttpl
sub
insb
cmp
imul
inc
insl
push
and
in
jnp
test
pop
inc
arpl
xchg
push
iret
cmc
cld
xchg
jmp
out
ss
adc
jno
fiaddl
movsb
pop
push
nop
mov
mov
insl
iret
in
out
fadd
dec
mov
mov
add
xchg
cmpsl
push
mov
pop
xchg
test
out
and
xor
sbb
leave
mov
lods
push
xor
sub
in
cli
fst
aas
cs
mov
inc
mov
pop
adc
jge
imul
ja,pn
movsl
cmp
in
icebp
xor
xchg
or
cltd
outsb
inc
mov
pop
inc
leave
fistpl
cmp
cmpsl
hlt
iret
fcmovnu
outsl
ja
pop
mov
push
or
or
in
andl
shr
jp
lds
testl
lock
xor
sbb
pop
sbb
add
jp
add
inc
or
mov
jp
push
mov
inc
icebp
jecxz
xchg
mov
jge
sub
cwtl
xchg
ret
sub
fcmovu
push
aam
add
xchg
pop
fcomps
fnstcw
and
scas
pop
nop
inc
andb
and
stos
filds
clc
xor
fists
mov
dec
pop
adc
sub
lock
add
push
xchg
mov
sub
lcall
mov
pop
push
lods
in
xor
jmp
jmp
mov
out
je
out
dec
repnz
in
sar
loop
cmp
dec
xor
int
insl
xlat
mov
xchg
cmpsb
push
scas
call
xor
pusha
mov
mov
subb
addr16
pop
dec
adc
jmp
aaa
repnz
push
out
jae
mov
gs
jnp
shlb
mov
ljmp
out
xor
in
jge
clc
dec
push
fmul
mov
cmp
push
inc
sbb
lods
loopne
add
stos
mov
mov
sub
sbb
add
mov
mov
out
lret
movsl
insb
xor
dec
out
push
sub
js
outsb
and
push
jge
pop
dec
das
jecxz
or
data16
push
add
push
sbb
lods
dec
arpl
jne
add
stc
scas
std
mov
imul
adc
aaa
adc
fsub
pop
add
stos
adc
push
out
test
xchg
rcll
mov
add
hlt
push
cmp
xor
and
lahf
div
ret
ret
jnp
jae
mov
div
cmp
xchg
in
sbb
add
ljmp
add
cmpsl
inc
lds
js
bound
xor
xchg
push
stos
dec
jno
xchg
incb
adc
aaa
adc
adc
sbb
repz
fsubrl
insl
pop
push
sub
bound
jge
xchg
jns
mov
sbb
add
mov
inc
adc
stos
cmp
cmpb
pop
mov
mov
imul
test
out
js
xor
outsb
loop
push
icebp
fdivrs
popf
ret
enter
jl
sti
popf
mov
roll
aaa
xor
das
jg
mov
and
mov
in
adc
cmp
les
or
and
cmc
fs
iret
push
inc
jp
bound
call
test
scas
push
int
cmpsl
data16
mov
inc
in
lahf
pop
jae
push
xchg
sub
and
jmp
fcmovbe
lret
dec
pop
push
sbb
clc
into
sub
jle
fcomip
ficoms
sbb
dec
lcall
daa
xor
push
add
xchg
out
fmul
popf
xchg
xchg
mov
xchg
ss
mov
push
mov
inc
and
and
or
shlb
xor
fimull
clc
or
mov
inc
add
mov
insb
repnz
movsb
sub
push
arpl
jnp
test
stc
lahf
jecxz
fsubrs
sti
je
dec
daa
imulb
je
lcall
gs
add
or
mov
jge
adc
pop
push
cmpsl
imul
inc
or
pop
ljmp
je
jae
xchg
cld
ror
imul
add
cmp
idivb
cmp
mov
push
sbb
int
push
and
mov
cwtl
mov
sub
fwait
cli
repz
pop
or
lea
imul
aam
pop
and
jo
mov
sbb
add
sbb
pop
ror
outsl
pusha
mov
and
stos
out
sahf
jo
dec
push
jp
mov
stos
ds
es
xor
mov
mov
mov
mov
jno
imul
mov
cmpsb
mov
test
jns
in
aas
add
cmp
fidivs
pop
sub
mov
mov
mov
std
in
lock
arpl
xor
ret
fwait
cmp
cmp
dec
enter
addr16
mov
test
lret
rcr
outsb
cwtl
push
pop
xor
enter
adc
cmp
push
adcb
stc
mov
je
sbb
dec
clc
nop
add
pop
loopne
pop
fndisi(8087
fwait
xchg
pop
jbe
inc
push
cltd
xchg
out
xchg
jmp
outsb
shrb
mov
gs
out
inc
xchg
rol
or
cmp
test
xchg
jle
hlt
mov
cmp
ds
test
adc
test
adc
and
mov
jmp
clc
das
fdivrs
push
rclb
popl
mull
je
sub
fs
cmc
adc
and
aaa
ljmp
push
xchg
clc
sub
mov
jbe
cld
movsb
mov
bndldx
adc
add
cmp
dec
rcl
movsl
in
push
push
add
rorb
jmp
and
mov
push
loope
je
mov
inc
cmp
pusha
clc
jbe
cmp
jg
dec
cmc
mov
mov
sub
cwtl
repnz
stc
cmp
lret
dec
sub
jg
out
add
sbb
xchg
int3
or
adc
mov
mov
js
adc
insb
xchg
add
lock
and
push
xchg
push
push
mov
stc
and
or
add
pop
fsubr
sub
and
movsb
sbb
jns
out
mov
sbb
and
fwait
lea
cltd
add
mov
add
mov
iret
jle
ds
sub
lret
jl
test
fwait
mov
add
ds
jle
sub
xchg
push
inc
pushf
lds
aad
push
ljmp
shlb
aam
movsb
iret
hlt
leave
int3
mov
pushf
push
cli
lock
pushf
mov
in
fstpt
push
rcrl
out
dec
aas
sub
inc
fdivrl
pop
iret
cmp
into
pop
outsl
or
or
shll
and
data16
cmp
dec
mov
inc
mov
fdivs
ja
mov
or
sti
and
mov
jbe
mov
fsubrl
lret
adc
xchg
jo
and
idiv
fwait
lahf
in
push
xor
sahf
rcrl
shll
stos
xchg
adc
stos
cwtl
lcall
or
int
push
mov
push
cwtl
jo
sub
mov
or
sub
push
test
mov
fldl
lock
jne
js
syscall
fistps
test
sbb
and
pop
inc
into
or
std
les
mov
adc
cs
mov
sub
push
aaa
mov
ret
cmpsb
xlat
push
sbb
lods
jl
cmpsl
outsb
sbb
add
divps
xchg
icebp
push
ds
or
pop
les
jb
sarl
cli
int3
rorb
add
xchg
pop
lfs
aas
jae,pn
mov
push
pop
pop
adc
sti
xchg
and
pop
jb
imul
sub
pop
sbb
hlt
mov
push
push
into
mov
jle
rolb
mov
outsl
and
adc
rorl
pop
jmp
xchg
mov
lods
cld
jnp,pt
ficomps
cmp
pop
test
mov
sbb
mov
ss
jb
hlt
inc
test
scas
movsb
fidivs
je
and
std
push
mov
test
cmp
sub
jne
sub
or
push
lahf
stos
leave
or
dec
or
inc
or
push
cmp
jne
jnp
aas
out
int3
jne
mov
rolb
icebp
or
pop
sahf
xor
lds
clc
dec
sbb
pusha
mov
xor
jne
sub
add
and
jns
xor
jmp
mov
push
pushf
sbb
call
adc
mov
cmc
sub
cld
lret
mov
insb
idivl
outsl
out
frstor
imul
outsl
imul
and
or
fwait
and
mov
in
mov
pop
cltd
lods
mov
mov
in
push
xchg
sbb
jl
adc
fldt
mov
pmaxsw
cld
fwait
mov
das
mov
lahf
cltd
adc
movzwl
push
add
mov
jmp
dec
dec
cmpsb
add
sbb
push
fcmovbe
andb
pop
mov
jecxz
out
sub
clc
adc
lret
int3
sbb
stos
push
mov
inc
bound
lea
add
fmull
jnp
aaa
sub
dec
push
sbb
xchg
inc
stos
mov
das
add
data16
sub
inc
mov
mov
fsubs
jnp
add
rorl
xcrypt-ofb
cmpsl
das
inc
daa
into
loope
jle
pop
addb
hlt
pusha
addr16
jae
xor
and
sbb
sahf
rclb
fisttps
mov
sub
cld
fldl
ja
icebp
pop
sub
in
dec
pop
adc
lcall
fwait
mov
imul
cld
add
ja
push
enter
lahf
cltd
mov
push
pop
stos
add
mov
aam
adc
push
xchg
xlat
mov
mov
scas
leave
push
sub
mov
lds
lret
mov
add
loope
mov
es
test
dec
mov
cli
loope
xlat
fdivs
sub
in
pop
push
cmpsb
and
mov
mov
popa
pop
push
pop
fstp
jmp
sarb
js
jns
xchg
into
repz
cmp
or
add
dec
xor
ret
shlb
pop
ficompl
or
and
inc
jl
cmc
incb
cld
fimuls
arpl
lds
fidivrl
ja
mov
mov
shlb
sbb
pop
fisttps
sbb
repz
aas
push
in
stos
mov
xchg
xor
inc
push
rorb
std
inc
ljmp
push
add
in
xchg
lea
sub
outsl
sarb
cmp
mov
cwtl
int3
dec
pop
loopne
inc
adc
lock
push
dec
fadds
mov
cmp
xor
insl
or
inc
data16
aaa
decb
iret
pop
mov
or
fldl
sbb
xchg
xor
jmp
dec
pop
icebp
pop
mov
es
cltd
push
push
mov
mov
dec
xor
rcl
lea
xchg
jge
sbb
not
jnp
cmp
shl
jmp
pop
mov
xchg
inc
call
cmpsb
out
jnp
das
jmp
or
xor
mov
cmp
xchg
daa
lcall
or
lds
jno
or
add
cmpsl
or
mov
popa
dec
mov
out
jo
add
test
fwait
xchg
mov
push
push
adc
xor
pop
pop
dec
or
retw
pop
pusha
or
jmp
repz
pop
inc
mov
xlat
ja
mov
xchg
mov
test
loopne
lcall
jecxz
sub
icebp
leave
sub
lcall
lcall
loop
les
cmp
ret
shll
aas
add
call
jae
cltd
lret
push
push
mov
push
ss
loop
dec
ficoml
jb
jb
push
xor
mov
out
push
pop
inc
xchg
xchg
cmpsl
mov
inc
stos
out
movsl
lea
pop
or
jge
mov
and
jne
push
sub
jo
cwtl
pop
aas
lahf
push
movsb
stos
pop
inc
test
or
cmp
sbb
add
pop
stc
stc
lcall
xchg
in
lods
or
nop
lahf
jecxz
jge
mov
mov
arpl
pop
xor
cltd
adc
ret
or
out
adc
xor
loopne
das
leave
xchg
dec
in
and
jg
or
sub
std
les
and
cmp
enter
pop
mov
mov
mov
fisubrs
mov
pop
or
je
pop
inc
pop
mov
mov
xchg
pusha
out
stos
xchg
push
addr16
xchg
add
movsb
xor
ret
sbb
aam
jecxz
cmp
divb
xor
dec
gs
pop
xchg
jmp
pop
mov
pop
pop
aad
cmp
dec
cltd
fmull
or
xchg
lods
jae
pop
stos
shlb
out
icebp
push
sub
push
dec
call
ds
outsl
mov
int
js
je
fnsave
jbe
les
arpl
mov
imul
bnd
popa
cmp
insb
xchg
jp
xor
pop
inc
or
add
imul
dec
push
xchg
sbb
popa
adc
outsb
push
jmp
repnz
cmp
mov
hlt
sbb
add
add
adc
mov
leave
cmp
xor
adc
lcall
psrad
movsl
out
nop
pop
insb
outsb
cmpsl
outsb
push
dec
mov
stos
jno
push
inc
sub
cmpb
call
xlat
xlat
xchg
jbe
sbb
jo
mov
add
cltd
and
jp
out
test
dec
mov
xchg
dec
push
xor
xor
mov
jmp
jo
test
jo
mov
push
iretw
dec
stc
adc
fsub
dec
movsl
insb
orb
mov
sti
lods
sbb
inc
jbe
fimull
inc
fsubs
inc
push
add
repz
cmp
sub
out
push
dec
inc
insb
inc
jecxz
pop
jo
scas
sbb
and
cmpsl
loope
jne
shll
mov
push
xchg
mov
repz
lret
inc
in
cli
cmp
push
fwait
shll
ror
repnz
scas
out
adc
sbb
mov
aad
xor
and
dec
in
inc
mov
pop
xlat
pop
xlat
and
add
mov
cwtl
mov
scas
jle
or
push
jo
inc
inc
imul
xchg
inc
lcall
addr16
dec
nop
test
add
pop
sub
lds
cmc
mov
mov
enter
jge
push
cmc
movsl
inc
enter
mov
adc
jmp
dec
lods
xchg
in
jne
cmc
jnp
dec
push
mov
push
pop
pushf
cld
ret
mov
bound
adc
ljmp
dec
mov
scas
xchg
lds
mov
clc
xor
sub
je
lods
out
push
cmpl
dec
loopw
roll
fstpt
pop
sbb
jge
cmp
xchg
rcr
dec
sti
insl
cwtl
mov
dec
jecxz
pop
test
xchg
sub
xchg
xchg
sub
cmc
push
neg
hlt
xorl
push
or
mov
mov
push
inc
fistps
dec
push
hlt
in
inc
add
mov
fbld
sub
mov
or
xchg
outsl
out
jne
mov
push
nop
jno
rdpmc
lods
jge
dec
sbb
jo
aad
mov
js
jne
test
push
lret
jmp
das
sbb
in
mov
and
das
xchg
lods
cmp
enter
imul
push
push
cmp
dec
cmpsb
lcall
adc
pop
xchg
out
icebp
addr16
push
jo
xchg
push
loopne
xchg
in
adc
repz
mov
cmp
cmp
nop
dec
mov
into
push
cmc
movsl
jno
stc
pushf
gs
in
lret
scas
inc
shl
mov
idiv
outsl
fimull
fildl
loope
mov
insl
lret
push
add
xor
jge
jge
sub
xchg
mov
cmp
mov
mov
adc
pop
nop
scas
jmp
add
data16
adc
popa
mov
es
test
adc
ljmp
repz
mov
dec
push
pop
push
test
sub
lcall
pop
insl
lahf
sub
inc
lret
fcmovbe
cltd
sahf
xchg
fsin
mov
cmp
movsb
ja
xlat
push
lcall
cs
ja
or
push
inc
shrb
and
pop
adc
mov
sub
rcrb
out
inc
jp
int3
lods
push
sar
fwait
ret
stos
cmp
jg
push
push
subb
aaa
dec
inc
arpl
shrl
push
mov
xor
mov
repnz
ljmp
pop
dec
sbb
rclb
pop
inc
sbb
fdivp
sub
cmp
in
int3
cmp
fbld
push
fdiv
jnp
fwait
ds
test
jecxz
push
test
and
inc
repnz
jnp
in
ret
push
pusha
xchg
add
enter
xor
mov
scas
leave
bound
push
mov
inc
jmp
sbb
dec
sbb
rolb
pop
add
mov
into
sub
jae
jae
sub
cmp
adc
roll
xchg
inc
int3
and
jecxz
dec
mov
adc
and
push
dec
pop
sbb
daa
imul
inc
push
mov
fcmovb
leave
mov
shll
sarb
dec
icebp
int3
out
ja
sbb
repnz
xchg
test
leave
popf
jbe
mov
movsl
je
repz
xor
int3
lods
xchg
inc
call
xchg
mov
push
ret
cmc
cld
icebp
jno
cmc
add
out
out
cmp
add
testl
addb
lock
in
cwtl
mov
testl
ja
shlb
ljmp
gs
xor
mov
cs
add
inc
cmp
mov
orb
call
mov
mov
test
cli
mov
sbb
das
mov
mov
fisubs
out
xor
lods
xor
sbb
out
jmp
push
mov
movsl
inc
data16
sbb
or
sarb
clc
push
jnp
lds
iret
rcrl
aas
js
mov
and
and
pop
and
cs
mov
divps
xchg
cmp
aaa
push
bound
sub
and
push
jmp
xor
and
int3
sub
dec
sub
pop
cmp
mov
in
lds
jl
clc
lods
cmp
pop
pop
pop
fstpt
popl
mov
xchg
mov
add
pop
pop
popa
push
fs
push
inc
subl
or
mov
jo
js
loope
bound
jmp
data16
ret
cmc
negb
jmp
mov
ror
ja
add
pop
mov
cmp
notb
mov
cmpsl
mov
xor
push
stos
loop
repz
xor
dec
mov
sbb
inc
xor
into
bound
cld
jae
sub
leave
sub
xchg
sbb
sbbl
xchg
xor
cmp
xor
scas
imul
stc
icebp
mov
mov
mov
xor
addr16
movsb
sbb
xchg
xchg
inc
mov
insb
sets
xlat
or
int3
ficoms
xchg
dec
nop
or
pop
icebp
lods
std
cmp
or
mov
pop
lods
in
cli
xchg
mov
jle
lods
andb
stc
inc
jo
xchg
rclb
sub
xor
inc
xchg
ljmp
inc
cmc
inc
in
xorl
in
call
push
ss
test
push
jb
cmp
add
std
pop
and
or
stos
dec
push
pop
cli
xchg
out
pop
jno
and
outsb
add
mov
sbb
push
mov
jecxz
pop
outsl
repnz
data16
mov
sub
scas
mov
in
inc
cmp
mov
pop
inc
mov
jecxz
test
add
xorl
dec
jae
or
call
inc
sub
or
sti
popa
out
enter
popl
or
pushf
mov
mov
or
cmpsb
adc
push
inc
pop
stos
sbb
frstor
push
mov
and
cli
push
subl
int3
fbld
and
lret
sub
gs
fimuls
pop
aam
outsl
jmp
adc
loopne
leave
add
cltd
loopne
fwait
cmpsb
daa
popf
or
push
jns
add
mov
call
push
adc
cli
push
xchg
fildll
cli
mov
in
fisubs
clc
subl
iret
flds
roll
out
ja
jecxz
xor
fistpll
mov
mov
inc
jb
nop
sarl
jle
xchg
push
mov
test
push
mov
dec
out
in
dec
sbb
mov
jno
jge
jmp
shrl
push
push
dec
das
insl
dec
aaa
sbb
jns
iret
stos
inc
xchg
dec
in
pop
ds
jo
jle
mov
push
sbbb
add
sbb
pushf
and
test
cmc
nop
ja
inc
mov
sbb
mov
in
xchg
jg
or
push
movsb
mov
out
ja
pop
pop
lcall
mov
shlb
test
sub
rorl
add
pop
jp
pop
mov
std
test
xchg
push
dec
push
rclb
cwtl
test
lea
ret
mov
xchg
ret
and
test
out
sbb
jae
inc
mov
xor
cmp
xchg
sahf
test
cmp
fsts
out
and
xchg
push
mov
out
call
pop
dec
mov
sbb
mov
jmp
mov
cmpsb
xchg
mov
dec
mov
flds
pushf
aam
test
push
mov
cwtl
mov
fcoml
mov
movsl
inc
mov
cs
and
cmp
xor
cmp
mov
push
jo
pop
imul
repnz
push
es
xchg
cmc
mov
sti
leave
and
add
out
inc
jge
push
js
lds
addr16
or
mov
movsl
test
scas
mov
push
sub
hlt
not
popf
mov
sub
popa
cwtl
pop
xchg
cld
scas
in
dec
mov
mov
loopne
xor
or
jle
inc
mov
inc
inc
leave
pop
outsl
fsub
jno
or
sub
lret
sahf
pop
sub
pop
jb
sti
fwait
lahf
mov
xlat
lret
xor
inc
push
or
and
mov
cmp
jmp
jmp
or
fldl
sub
or
lea
mov
fs
adc
addl
xor
fimull
xorl
cmp
xchg
jg
lcall
adc
in
insl
jmp
jns
test
pushf
fcompl
dec
mov
add
mov
dec
loope
fistl
pop
aaa
imull
imul
or
push
mov
dec
lods
mov
hlt
jae
mov
es
ret
aad
or
das
fistps
sarl
roll
dec
jmp
sbb
movsl
das
sbb
mov
popa
bound
sbb
cld
mov
xchg
xchg
jp
sub
ss
or
push
xchg
divb
jmp
push
dec
jnp
popf
outsl
cmpsb
nop
mov
in
mov
int
and
cmpsl
mov
lods
stc
std
popf
sub
adc
sub
push
xchg
jecxz
add
push
daa
or
cmpsb
push
neg
adc
mov
daa
gs
bound
push
xchg
test
sub
cmpsl
jnp
and
std
cmp
hlt
repnz
sub
ss
faddl
jl
cmp
sbb
cmp
jb
sar
in
pop
movsb
test
in
cs
cld
fwait
sahf
and
mov
ret
iret
scas
fyl2x
and
int3
mov
mov
mov
cmc
les
xchg
mov
cli
xor
mov
dec
sbb
clc
push
jl
cmpl
mov
in
adc
insl
cmp
hlt
mov
push
cmp
push
and
clc
push
test
sarl
mov
mov
fwait
dec
and
ja
jg
mov
sbb
lods
xorl
cmp
dec
insl
es
test
loop
loopne
loope
sub
mov
pop
loope
mov
adc
dec
push
pop
inc
dec
std
sub
movsb
push
out
adc
sar
fs
or
fldenv
mov
mov
xor
add
sti
push
iret
imul
cmpsb
stos
xor
movl
ljmp
fcomps
jo
nop
leave
mov
ret
pop
xor
test
mov
jb
adc
xabort
inc
bound
outsb
sub
stos
stc
lds
push
xchg
cmpsb
cmp
stos
jb
push
cmp
aas
xor
mov
add
pop
push
or
call
pop
es
mov
xlat
pop
add
outsl
ret
test
out
lcall
xchg
cmc
inc
dec
push
shl
movsb
das
mov
js
dec
lds
sbbb
jno
arpl
pop
jl
and
add
or
insl
imul
int3
lods
outsl
cmp
or
pop
std
mov
mov
sub
and
cmpb
add
arpl
xchg
fcmove
faddl
stos
movsb
sub
repz
dec
rol
in
jne
mov
outsl
outsb
sti
icebp
mov
lcall
push
hlt
push
sub
stos
sub
lret
xlat
arpl
mov
xor
stos
out
jne
mov
js
sti
inc
cmp
cwtl
sbbb
cmp
fsts
lods
push
inc
nop
pop
clc
mov
pop
imul
cmp
rol
dec
mov
cld
sahf
xchg
dec
sub
and
insl
lods
or
mov
hlt
daa
and
inc
xor
ret
test
jle
or
adc
iret
mov
lret
sub
lods
mov
in
cmp
mov
outsb
fbld
rcrb
push
es
inc
sbb
mov
fildll
mov
insb
push
fnstenv
sahf
jecxz
mov
pushl
icebp
cmp
test
adc
push
aam
cltd
loop
prefetcht0
mov
sub
sarl
adc
popf
pop
fisubrl
mov
and
push
sub
or
mov
iret
das
push
and
aas
dec
adc
je
data16
std
ret
adc
sahf
jp
and
call
lahf
xchg
fnstenv
cmp
divb
inc
jl
ja
jp
mov
push
fistpl
lods
stos
cmpb
roll
xchg
xchg
leave
rcrl
jp
push
in
clc
aas
cmp
in
enter
popf
adc
mov
mov
xchg
add
ja
xchg
sub
stc
filds
test
jno
push
pop
out
push
mov
es
and
or
mov
cld
fldz
imul
xchg
mov
out
add
jno
cld
cmp
dec
or
lret
fdivrl
xchg
or
xor
imul
mov
xlat
mov
add
mov
push
sub
ljmp
icebp
into
sbb
push
mov
loop
jle
pop
xchg
mov
fdivr
mov
mov
xchg
xchg
xchg
sub
roll
push
or
mov
lods
push
adc
jp
push
addr16
icebp
hlt
int
ss
mov
adc
mov
mov
sbb
loopne
jnp
sti
jmp
push
inc
pusha
jbe
mov
jecxz
mov
jg
ljmp
xor
xchg
add
lock
sub
xchg
mov
sahf
movsb
iret
sbb
inc
xlat
or
xchg
fistpll
xorl
andb
out
jl
xchg
insl
xchg
addr16
xchg
ss
cmp
pop
adc
or
je
es
test
fdivrp
leave
aas
std
sbb
loopne
dec
int
lahf
jge
sbb
cwtl
and
ss
sub
stc
les
or
inc
out
mov
xor
or
jle
push
iret
xlat
fiadds
repz
and
cs
div
jl
pop
int
lods
shl
leave
call
mov
mov
jo
mov
sbb
test
loopne
shll
movsl
arpl
mov
rolb
push
pop
popf
sahf
cltd
mov
jnp
mov
jb
and
dec
jecxz
dec
lret
imul
test
mov
imul
out
xchg
jbe
arpl
call
lods
leave
data16
in
ss
into
sbb
xchg
xchg
movsl
movsl
add
push
pop
das
mov
inc
dec
das
nop
mov
jbe
test
pop
sbb
jge
push
and
xor
scas
inc
hlt
lcall
mov
jl
mov
in
push
cmpsb
dec
popf
adcl
cmp
jp
movsb
fistpl
movsl
data16
dec
xchg
sub
sbb
stos
sub
xchg
int3
icebp
cmp
cmp
mov
rcrl
test
jo
cmpsl
jb
mov
loope
popa
int
sti
out
mov
notl
xchg
mov
out
adc
sbb
fidivrl
push
push
lcall
cwtl
ss
jb
outsb
mov
or
ret
push
fwait
cmp
addr16
ret
xor
push
mov
xor
call
repz
mov
out
stos
mov
mov
lahf
or
mov
inc
call
aaa
out
pop
sbb
push
cmp
in
andb
jle
adc
outsl
and
std
call
pop
jmp
dec
les
jge
ficoml
call
mov
cmpsl
or
pop
fidivrl
jns,pn
outsb
cmp
lret
mov
lahf
flds
sub
mov
mov
js
rolb
push
dec
ljmp
stc
cltd
and
mov
add
outsb
xor
push
jnp
mov
inc
cmc
dec
adc
push
pop
cmc
push
jp
mov
insl
mov
nop
ret
and
popa
fdivrs
repz
in
decl
repnz
pop
out
test
mov
pop
clc
add
mov
cvttps2pi
pop
test
pop
add
daa
mov
inc
fs
arpl
imul
fistpll
clc
dec
adc
cmpsl
cmpsl
inc
mov
iret
aam
xchg
mov
pushf
pop
inc
insb
jmp
shll
dec
cmp
jge
jbe
and
jnp
dec
imul
jb
mov
dec
adcb
mull
fxch
sti
roll
mov
int
cmp
jmp
pop
mov
mov
int3
sub
es
out
sti
or
jne
jg
sbb
dec
bound
xor
rcr
mov
lret
mov
shll
and
sub
mov
and
dec
xchg
ret
nop
cmp
mov
mov
mov
jmp
cmp
rol
xor
inc
scas
js
jae
stc
dec
or
decb
das
xor
jmp
shll
mov
lret
mov
mov
rclb
rolb
daa
jae
repz
dec
jae
mov
jge
inc
and
mov
repz
pop
jle
popa
push
sbb
push
and
and
sti
repz
pop
mov
and
adc
and
pop
test
sub
dec
jb
lea
inc
loop
sbb
movsb
loope
leave
push
fbld
inc
je
jo
outsl
out
aaa
and
faddp
mov
dec
mov
jae
sub
xchg
adc
dec
inc
pusha
stos
shl
das
mov
mov
cmc
push
cmp
test
xchg
adc
mov
push
std
rolb
mov
ljmp
and
sub
inc
ja
shrl
xchg
and
int3
arpl
pop
inc
daa
inc
lods
aas
sbb
jle
ljmp
xchg
pop
daa
scas
repz
cmc
mov
test
push
mov
iret
andb
and
pop
and
add
jp
fldl2t
aad
jle
dec
mov
sbb
mov
mov
cmp
sub
sti
lcall
sbb
or
xor
movl
out
fidivrl
sahf
jno
adc
adc
sub
sub
xorl
push
cmp
bound
icebp
cmp
push
mov
mov
sub
hlt
mov
mov
or
mov
or
sbb
jne
movsb
mov
xchg
xchg
add
xor
adc
xlat
dec
pop
jbe
jecxz
iret
fnstenv
jl
andl
lret
jne
scas
mov
cli
test
cmp
xchg
fcmove
fwait
adc
cwtl
push
sub
mov
test
ljmp
movsb
imul
pop
lahf
pop
and
subb
outsb
div
sub
mov
test
push
loope
xlat
add
pushf
mov
cmpsl
fisubrl
gs
pop
dec
mov
mov
dec
aaa
sbbl
mov
pop
push
loop
push
mov
arpl
mov
icebp
negl
or
cmp
jns
aad
loopne
xchg
test
inc
mov
or
les
jge
pop
movsb
mov
mov
jecxz
lret
mov
fcmovne
loopne
lods
fldt
shll
mov
testb
mov
sbb
xor
shlb
cs
lret
push
repz
mov
in
mov
mov
xchg
and
or
and
or
cmpsb
push
imul
mov
clc
dec
adc
roll
sbb
insb
xlat
or
hlt
dec
mov
mov
sbb
insl
dec
push
test
adc
dec
icebp
loopne
jmp
sbb
add
pause
idivl
lcall
mov
sbb
lcall
ret
sbb
cmp
mov
dec
das
and
jno
mov
test
mov
jnp
add
cmc
roll
xchg
fisubrs
fimuls
iret
fdivs
jg
test
add
sub
pop
ret
and
es
stos
outsl
cmp
out
imul
jo
aam
adc
or
mov
mov
jecxz
test
test
aad
adc
jbe
inc
push
adc
xor
or
testl
test
out
mov
fwait
cmp
idiv
or
les
pop
fwait
insb
insb
ret
jns
dec
enter
les
pop
lds
pop
xchg
pushf
mov
mov
cmpsl
sahf
mov
dec
and
xor
sbb
aad
mov
or
mov
daa
inc
inc
dec
inc
mov
mov
pop
aas
std
jmp
pushf
jno
rorb
rcll
lods
xor
sahf
and
or
in
xchg
push
sbb
out
aad
leave
xor
inc
adc
cli
dec
fwait
sbb
cmp
inc
cmc
scas
lcall
mov
xchg
mov
dec
dec
push
xor
push
lods
pop
inc
std
or
in
dec
outsl
ficomps
jo
imull
sub
add
xchg
mov
lea
mov
lock
inc
mov
or
push
add
sahf
xchg
idivl
mov
push
ja
ret
inc
fidivrs
lea
loop
pop
lret
fldl
imul
jmp
aam
lcall
daa
iret
outsl
cmpsl
add
jae
jno
sub
aaa
jns
frstor
aaa
sti
push
sti
push
popa
add
and
sti
push
xor
sbb
mov
cmp
dec
jo
adc
stos
push
push
push
stc
inc
sub
cmp
lea
hlt
bound
cmp
add
incl
add
out
jae
and
or
movsb
dec
adc
jbe
test
lret
xchg
xchg
or
notl
ficomps
xlat
jle
xchg
jbe
aad
cmp
push
cmp
dec
push
push
or
inc
notl
ds
sbb
mov
les
repnz
add
inc
lret
cmc
idivb
mov
jbe
add
xchg
or
fistpll
xchg
xchg
fmuls
inc
arpl
sbb
pop
outsl
sub
xor
jge
shlb
sub
fcoml
push
in
jge
cmp
mov
lret
test
into
jb
push
mov
mov
mov
dec
sbb
orl
xor
cmpb
mov
hlt
jecxz
jb
mov
jb
mov
and
mov
out
call
jbe
mov
insl
aam
insb
out
incb
jbe
nop
adc
in
cli
nop
aad
push
pushf
adc
push
int3
adc
sarl
pop
inc
in
fidivl
fcmove
jmp
xchg
adc
loope
sub
xchg
inc
jmp
ret
or
imull
pop
aam
add
aam
sbb
in
jl
insl
push
lcall
out
inc
lahf
movl
mov
fcompl
jae
push
adc
mov
int
xor
add
shlb
jb
xor
cs
add
jnp
out
out
fs
sub
sub
mov
add
jecxz
add
div
and
aas
or
subb
fiadds
cmp
cmovge
mov
or
inc
cltd
pusha
inc
adc
fwait
or
adc
into
xor
adc
mov
test
mov
adc
mov
push
fwait
mov
stos
add
pusha
sub
jl
dec
dec
jmp
push
mov
leave
mov
ja
mov
flds
and
hlt
xor
scas
fs
jecxz
mov
ds
and
sahf
and
jno
fldl
in
push
xlat
add
pop
push
shlb
or
popf
movb
adc
push
add
fadds
jno
pop
je
xlat
push
xchg
or
cs
push
pop
lahf
push
or
scas
dec
jbe
pop
xchg
mov
stos
cmp
xchg
jecxz
jmp
call
notb
aam
jmp
cmpsb
and
popa
fsub
jb
mov
add
push
ja
insl
ret
lods
cwtl
mov
das
sbb
mov
test
mov
test
leave
mov
push
pop
xchg
dec
ret
les
aaa
xchg
jae
je
cmp
rcrl
popf
xchg
sub
data16
pop
cld
dec
decb
push
and
movsl
cmp
aaa
jle
jecxz
lods
xchg
xor
adc
xchg
ljmp
or
mov
cmpsb
sub
cmc
mov
sub
inc
imul
xchg
and
enter
nop
out
adcb
adc
sbb
cmp
push
dec
cwtl
stos
fsubs
jg
push
mov
loope
rol
sub
pop
adc
js
lds
loopne
fiaddl
out
js
pop
mov
and
lods
xchg
xchg
fwait
repz
lods
mov
push
add
sbb
or
inc
stos
insb
fimull
xchg
xchg
rorl
icebp
xor
push
sub
aaa
ficomps
mov
cli
jmp
and
inc
pop
rcrb
mov
cli
xchg
out
setg
lret
xchg
ret
rorb
fwait
or
push
ss
sub
popa
fisttpl
mov
out
xor
ja
and
cli
cmpsb
jg
movsb
mov
cmc
push
mov
xorl
test
nop
cmpsl
shl
xlat
bswap
dec
orb
in
jmp
dec
and
lea
sahf
sub
daa
dec
gs
je
adc
bound
pop
out
lret
fdivrl
sbb
sbbb
aad
into
mulb
lcall
cmp
pop
dec
shrb
jae
push
fmull
mov
arpl
insl
rcll
in
loop
aam
mov
or
or
lods
sub
clc
pop
lock
loopne
pusha
mov
mov
cmp
cmp
testb
movsl
adc
loope
mov
pop
clc
es
dec
add
adc
lret
cmp
push
pop
xchg
leave
mov
push
loop
or
xchg
or
jle
and
imul
scas
cld
fsubrl
mov
xchg
ret
enter
out
push
sub
divl
jmp
in
push
outsb
in
add
sti
or
push
push
out
mov
and
ds
fcompl
mov
push
lcall
and
dec
mov
cmpsb
insb
adc
je
in
sbbl
or
movsb
sub
and
or
pop
inc
insb
mov
lods
add
mov
outsl
cmpsl
cwtl
mov
sub
iret
pop
test
sti
ja
xchg
jnp
mov
pop
movsl
test
loop
and
or
push
das
scas
jmp
sub
cmpsb
ja
in
xchg
inc
aaa
arpl
loope
adc
xor
dec
fiaddl
sbb
lahf
dec
adc
mov
inc
dec
push
out
popa
pusha
jmp
lea
cmpsb
repz
push
inc
jns
mov
mov
and
out
and
addr16
add
das
mov
xor
lcall
push
movsl
mov
test
test
xchg
cmpsl
enter
nop
lds
and
cli
dec
dec
cmc
scas
cmp
loop
fildl
xor
rclb
lret
clc
add
adc
and
clc
mov
fstl
pusha
jns
imul
fisttpll
add
sbb
dec
sbb
inc
or
movsl
mov
dec
clc
push
xchg
cmpsl
pop
and
inc
adc
jge
push
in
lock
rcr
cld
arpl
std
mov
mov
dec
sbb
fdivs
mov
les
mov
pop
arpl
outsl
roll
sbb
push
xor
leave
xlat
mov
pop
mov
mov
ret
ljmp
ja
jnp
and
testl
cli
ret
lea
movsb
js
xchg
push
push
out
int
inc
xchg
imul
xchg
ret
mov
and
lret
push
sub
fisttps
sub
shrb
and
push
bound
fistpl
test
stos
jp
mov
pop
hlt
xchg
lea
jbe
les
psubq
loopne
enter
jecxz
dec
addl
dec
lea
adc
pop
fists
filds
xor
and
adc
outsl
sbb
movl
je
mov
dec
call
push
xchg
mov
outsl
inc
xor
pusha
sub
mov
imul
in
stc
xchg
dec
push
in
arpl
push
and
inc
pop
mov
xor
or
cmpl
lods
pop
pop
sbb
fcoms
stc
ret
faddl
and
or
xchg
jge
pop
mov
mov
xchg
or
enter
jnp
jp
xchg
add
sbb
xchg
paddusb
scas
adc
loope
mov
insl
repz
vunpckhpd
mov
xlat
les
add
xchg
nop
inc
sbb
cltd
leave
or
cwtl
cmp
lret
mov
push
cmp
call
jnp
mov
call
test
and
outsb
pop
fsubrl
jae
fistpl
popa
test
aam
sbb
fwait
mov
xor
aas
fwait
mov
jg
test
cmp
xchg
nop
xor
jg
xor
jecxz
push
ss
arpl
inc
xor
xlat
das
adc
ja
iret
pop
out
dec
call
jo
push
push
aas
data16
sub
aaa
test
and
fwait
adc
cmpsb
loope
mov
pop
retw
jns
inc
jmp
filds
inc
sub
fldcw
sub
mov
and
mov
andb
sub
into
lret
xchg
xchg
sub
repnz
das
scas
hlt
pop
push
mov
mov
scas
push
jae
and
mov
int3
xchg
pop
xor
push
in
mov
pop
sbb
cwtl
xor
adc
inc
inc
aaa
insl
pop
addb
push
sub
xchg
lods
ljmp
in
aas
pop
pop
and
addr16
and
insl
shrb
sub
dec
leave
stos
sbb
ret
mov
push
fstpl
mov
push
ret
mov
enter
sub
add
sub
jns
test
jmp
mov
in
lcall
adc
mov
mov
fadds
cmp
fmul
sarb
cmp
fdivrs
nop
int
out
pop
cltd
nop
mov
cli
jmp
sarl
adc
repz
ret
in
je
lcall
adc
sub
pop
pop
out
push
fstps
push
ljmp
jl
adc
sub
jg
mov
pop
stos
jecxz
cmc
and
pop
lds
xor
adc
stos
stc
xlat
ret
jecxz
and
jl
je
and
mov
push
push
jnp
xor
inc
loopne
movsl
cmp
add
dec
xor
cmp
ja
cmpsl
loop
cmp
out
push
jge
nop
jl
mov
jnp
jno
ds
pop
sbb
aaa
lods
lea
enter
into
xor
mov
out
add
cs
repz
xor
js
out
shlb
jge
pop
shll
push
pop
add
mov
fistl
xor
sbb
push
cmpsl
iret
add
mov
sbbl
lcall
lock
ds
or
pop
sahf
pop
jno
jo
cmpsl
add
js
sbb
inc
popa
jno
adc
sbb
lea
add
jmp
aas
xchg
cs
lret
adc
pop
and
stc
adc
test
cmpsb
sbb
lret
sarb
hlt
push
cmp
movsb
loop
fcomps
aad
adc
sub
pop
add
js
fcomps
xchg
mov
pop
decb
lahf
and
add
inc
int3
dec
insl
ljmp
test
cmp
xor
in
nop
jnp
sbb
pop
or
and
in
inc
mov
add
xchg
test
cmp
jb
iret
pusha
mov
test
mov
arpl
add
mov
dec
xadd
adc
pop
or
dec
leave
mov
gs
adc
mov
add
cld
mov
cmc
push
or
add
fcoms
fbstp
andl
pop
push
push
iret
xchg
xchg
std
ds
nop
jge
aam
xor
cwtl
add
addr16
cmpsb
adc
aad
mov
addb
aad
divb
nop
cmc
int
sub
iret
xor
pushf
aam
fildll
jl
pop
fdivrl
aas
push
xor
cmp
mov
out
arpl
or
mov
or
cltd
aaa
arpl
bound
jne
fsubrl
loopne
mov
sub
subb
in
outsl
popl
mov
jmp
imul
cmc
adc
fcomip
jmp
xor
or
pop
ret
xor
jp
aad
lahf
ret
test
inc
out
or
pushf
scas
insl
lea
jno
pop
ret
jecxz
jl
rclb
gs
lahf
mov
inc
loope
mov
xchg
loopne
jo
out
xor
fsubrl
mov
jnp
in
add
out
sbb
cmp
adc
std
push
push
shll
mov
scas
jle
fs
mov
test
mov
sub
mov
loopne
pop
jae
mov
test
inc
and
repnz
add
jp
or
test
sbb
enter
int3
adc
sbb
push
adc
leave
jl
rcll
cmpsl
mov
imul
lock
mov
adc
mov
push
pop
sub
pop
pop
xchg
es
xor
fildll
imul
and
jecxz
frstor
daa
sub
test
push
cld
add
xchg
adc
fcompl
je
pushf
cmc
in
cmp
dec
mov
or
jl
repz
insb
mov
popa
aam
jne
push
fnstcw
add
lods
push
sub
bsr
dec
lret
xchg
fisubrs
mov
dec
add
outsl
mov
repnz
push
popf
pusha
fstps
mov
inc
hlt
push
lret
or
jge
adc
push
push
mov
dec
scas
sbb
mov
mov
jae
sub
lea
jae
or
or
adc
jmp
pop
push
lret
out
push
pop
in
mov
mov
xchg
neg
mov
psubw
outsl
or
pop
mov
lods
xor
int
add
xor
in
test
shl
pop
jge,pn
repnz
shr
pushw
stc
jg
push
lods
dec
jno
aaa
and
les
repz
adc
repnz
push
int
sbb
sub
xchg
ret
xlat
testl
and
push
ss
fbstp
int
in
jg
pop
popf
cmp
std
popf
insl
jl
xor
adc
daa
xchg
outsl
jge
push
scas
data16
jl
fidivrl
sub
outsl
add
lock
ds
std
lea
sahf
mov
loopne
shlb
xorl
scas
pop
xlat
jecxz
and
mov
sahf
push
jo
sti
xor
lahf
scas
inc
leave
cmpsb
inc
andl
and
arpl
mov
lock
ret
les
cmp
cmpsb
scas
mov
adc
popa
in
ret
cmc
mov
loope
mov
sti
mov
adc
lret
pop
inc
dec
pop
enter
roll
adc
push
push
bound
add
mov
fildll
add
adc
inc
jp
jp
ss
jae
fcoms
mov
mov
lcall
test
inc
jle
mov
shrl
and
sub
and
aad
das
jl
dec
imul
mov
jnp
orl
hlt
movsb
stos
out
sbb
mov
pop
dec
push
or
jge
lea
js
sub
push
mov
push
mov
mov
out
xor
loopne
das
add
jnp
inc
fs
jae
addb
xor
jmp
push
and
insl
xchg
lret
cs
inc
insl
gs
faddp
aam
cs
gs
sahf
loop
xor
jg
lods
aad
pop
loop
xchg
outsl
and
ljmp
testb
jmp
iret
testl
dec
jbe
sub
jno
xchg
nop
push
mov
out
and
mov
jns
mov
jge
jbe
iret
fwait
scas
enter
adc
popf
or
das
push
fs
fs
mov
push
sub
jb
popf
add
ret
dec
iret
mov
xor
jecxz
cmp
enter
std
and
sbb
sbb
sub
sti
mov
outsl
push
enter
or
testb
lock
cwtl
in
xchg
stos
mov
sbb
bound
imul
jg
cltd
pop
sub
jae
cmp
push
sti
dec
inc
sub
scas
and
xchg
jbe
xor
or
adc
mov
xor
xor
test
xlat
mov
in
in
addr16
dec
lods
mov
mov
movsb
push
inc
push
pop
add
cld
xor
pop
adc
inc
adc
dec
out
cmc
push
pop
aam
push
push
dec
jnp
out
lods
jno
mov
cli
pop
ss
push
nop
xchg
sbb
pop
pop
jnp
daa
ja
test
orl
xor
or
jp
cmp
mov
add
jae
jne
mov
xchg
sbb
dec
jp
inc
pinsrw
mov
jmp
hlt
xor
cmp
insl
xor
lret
shrb
ja
dec
mov
shl
ja
cmp
cmp
decl
fidivrl
add
pop
add
addr16
out
idivl
orl
lahf
xor
push
and
sbb
inc
jmp
and
inc
sub
xchg
pop
push
mov
push
xchg
test
jnp
mov
inc
xchg
test
add
fs
filds
jp
mov
iret
jmp
xor
mov
inc
jae
jg
inc
jne
cmp
cld
mov
xor
add
outsb
jb
pop
sbb
cmpsb
ja
sbb
mov
mov
stos
inc
adc
or
jmp
jl
mov
dec
sbb
push
mov
int
inc
insb
xchg
loope
inc
je
leave
xor
nop
and
mov
or
addr16
rclb
push
sub
popa
aaa
leave
fmul
or
cmp
pushf
xchg
scas
inc
xchg
in
lea
push
mov
rclb
push
mov
dec
or
cmp
dec
imul
clc
or
call
xchg
xor
dec
mov
add
inc
stos
enter
jnp
cmpsb
add
notl
mov
jmp
cmpsl
cmc
sub
inc
jae
mov
movsb
xchg
pop
add
dec
jnp
cmc
xchg
adc
push
add
jno
cmp
shrl
jmp
xchg
mov
pop
rorl
push
sti
std
lret
incl
push
xchg
mov
sub
fdiv
fcmovne
push
mov
in
movsl
push
jle
or
arpl
lcall
movl
aad
mov
fstpl
adc
out
dec
adc
loopne
jb
fldl
push
mov
pop
fstl
or
mov
mov
or
ss
mov
out
cmpsl
clc
int3
or
xor
pop
and
push
sbb
out
rcrl
dec
in
sub
cwtl
stos
aas
dec
mov
xor
repnz
dec
loope
stos
mov
or
repnz
sub
jae
and
test
lret
jo
fcmovu
jno
into
enter
add
fdivrl
aam
lea
xchg
xchg
mov
xchg
cmp
aas
mov
repz
and
push
xchg
dec
movb
mov
and
xor
cmpsl
sub
fdivs
xchg
movsb
hlt
xchg
ror
cmp
mov
cmpsb
jns
imul
sub
into
cmp
notl
int
xlat
jmp
sbb
xor
mov
adc
mov
arpl
stc
mov
dec
pop
and
and
inc
push
adc
add
inc
aas
sahf
jb
jp
stc
adc
lea
mov
fcmovbe
mov
call
outsb
jbe
sti
jl
mov
in
sbb
jge
or
fldcw
insl
outsl
xchg
xchg
fidivl
adc
xor
pop
je
call
imul
adc
jae
sub
adc
mov
shl
ja
dec
mov
js
rolb
lds
mov
stos
daa
pop
lds
lock
lods
adc
stos
xchg
inc
push
adc
fidivrl
outsl
sti
gs
jo
lds
or
jne
clc
xor
add
lcall
dec
cli
fnsave
push
jno
add
outsb
test
adc
lcall
dec
stos
add
push
icebp
test
and
std
cmpsl
orl
adc
inc
dec
mov
or
jbe
pop
sbb
xor
mov
jns
or
sub
insl
cmp
adc
iret
neg
xor
sbb
push
das
addr16
or
shll
movsb
or
sbb
and
jns
aad
in
xchg
sahf
push
sbb
rcrl
pop
lcall
insb
filds
sub
inc
into
sub
rcll
jecxz
mov
ds
aaa
mov
js
dec
mov
push
jne
aam
dec
adc
shrl
mov
mov
push
fwait
cmpsl
ret
mov
clc
mov
xchg
cmpsb
fdiv
jmp
arpl
dec
addr16
jno
fwait
cmp
mov
pop
out
and
fmuls
mov
and
repz
xor
mov
inc
inc
cwtl
test
mov
test
pop
pop
pop
add
test
leave
cmp
jne
sbb
push
lock
sub
and
lahf
sbb
andl
dec
xlat
sbb
fstpl
add
adc
xchg
xchg
daa
xor
push
push
sti
cmp
int3
pusha
xchg
xchg
and
les
pusha
cmp
shlb
pop
scas
jns
mov
outsb
aas
repnz
shl
icebp
mov
adc
inc
pop
lcall
mov
mov
addr16
gs
data16
mov
push
sbb
mov
jmp
inc
ficoms
mov
pop
repnz
or
lret
mov
jns
fwait
jb
nop
scas
xor
test
pop
mov
jp
outsl
movsl
nop
sub
mov
jo
sbb
sub
das
or
mov
mulb
cmp
push
fs
loop
outsb
sarb
sahf
fimull
mov
cltd
sti
test
xchg
lods
push
mov
fstp
cmp
lods
pop
das
movsb
sub
adc
xor
hlt
dec
mov
roll
sbb
fdivl
add
js
pop
jo
pop
and
adc
cmc
addl
add
xchg
roll
js
mov
xlat
cmpsb
dec
fs
adc
clc
test
lods
cmpsb
sub
scas
imul
push
mov
sub
cmc
jl
aas
inc
movsl
pop
pop
data16
dec
jo
add
xor
inc
test
dec
mov
xchg
pop
push
jmp
inc
adc
adcl
and
mov
xchg
out
push
push
out
mov
lahf
cli
jno
fmull
sarl
btr
cmpsl
push
setle
into
push
jnp
bound
leave
or
outsl
xchg
fidivs
jmp
mov
mov
out
ficoms
dec
cmp
add
dec
repz
xor
imul
mov
addr16
or
je
cwtl
daa
adc
hlt
cmpsb
lahf
sbb
sbb
dec
push
shrl
or
jae
fidivrs
out
popa
sub
jge
cwtl
mov
fsts
fiaddl
mov
hlt
xchg
xlat
hlt
je
push
push
dec
jae
aas
in
outsb
imul
and
movsb
xor
roll
push
cmp
sbbl
mov
std
xchg
aas
inc
stos
adc
bound
nop
sbb
dec
xor
test
rcl
adc
lea
sahf
inc
mov
pop
add
xor
fs
cli
jl
scas
push
pop
mov
jnp
imul
pop
insl
sub
jmp
xlat
mov
and
adc
lock
fwait
add
std
inc
push
outsl
pop
sbb
addr16
jb
das
imul
rclb
push
mov
cmp
lods
repz
clc
xor
dec
pop
sar
inc
movntps
mov
cltd
jne
mov
mov
ret
lods
das
testb
scas
sti
repz
inc
scas
pop
test
iret
inc
add
inc
iret
push
mov
push
inc
adc
cmp
xchg
jb
sbb
or
xor
popf
xchg
std
js
sub
cs
mov
test
add
shll
cmc
pop
out
xchg
mov
sahf
out
dec
adc
insb
rorb
dec
das
repnz
std
push
sbb
enter
inc
subb
dec
sub
and
retw
pop
dec
cs
add
sbb
cltd
fdivs
leave
outsb
adc
call
cltd
mov
fistl
and
xchg
les
mov
out
insb
mov
jnp
lret
and
mov
mov
outsl
sub
or
xchg
ficoml
mov
ja
mov
in
repz
xor
mov
decl
sarb
out
ja
shrl
cli
pop
xor
sub
mov
roll
push
pushf
or
push
lds
movsb
sbbb
out
jecxz
inc
pop
jnp
jne
sbb
push
add
jp
repnz
jbe
sub
and
icebp
mov
negl
call
jl
neg
xor
xor
repz
xlat
prefetch
push
mov
or
or
pcmpeqb
leave
sub
inc
lret
xchg
mov
xor
movsl
sahf
mov
xor
jnp
add
lock
pop
jbe
fstps
cmpsb
pop
pushf
pushf
imul
scas
imull
test
xor
shrb
pop
rclb
push
mov
dec
jmp
add
outsl
pop
pop
outsl
xchg
shll
mov
pop
sbb
add
push
mov
pop
inc
hlt
xchg
sar
fsubp
pop
outsl
into
fisubrs
sub
pop
mov
dec
xchg
jo
push
mov
lret
push
outsl
dec
les
jnp
xor
mul
frstor
stc
mov
arpl
cltd
shll
fdivrs
sub
mov
shll
and
adc
out
add
dec
add
pcmpgtw
jbe
jo
jb
sbb
jl
nop
or
jo
and
in
out
test
cmpsl
xchg
int
popa
imul
stos
and
add
adc
int3
lret
mov
inc
xor
pop
mov
lret
out
mov
mov
jecxz
push
call
mov
pop
xchg
adc
sub
mov
lock
and
add
and
addr16
mov
idivl
mov
mov
imul
adc
push
add
sub
out
add
rcrb
insl
sahf
sti
xchg
xor
mov
jg
fcoml
cmpsl
cmpb
xor
add
mov
adc
ljmp
stos
data16
je
mov
push
shr
add
pop
lods
lea
jnp
test
cmp
std
aaa
scas
push
lods
and
push
dec
mov
aam
fadds
scas
dec
push
sub
repnz
jnp
hlt
xor
imul
sbb
sbb
adc
push
mov
dec
xlat
adc
mov
enter
mov
ret
and
les
sbb
addr16
cwtl
hlt
mov
lods
shlb
dec
loope
cwtl
pop
mov
push
push
pusha
test
push
lods
mov
xchg
lea
nop
mov
ja
out
test
addl
sbb
cmp
and
ja
dec
fwait
sysenter
clc
div
in
dec
jecxz
sub
lods
out
mov
insb
sbb
cmp
pop
xchg
mov
jge
in
push
xor
xchg
loope
sub
repnz
popf
add
out
jg
cli
addr16
sbb
inc
mov
test
inc
xchg
inc
pop
dec
push
or
rcrb
xchg
mov
pop
stos
xor
fisubs
cmp
sbb
fmulp
inc
jecxz
movsl
ret
dec
loope
scas
xchg
mov
add
mov
add
das
adc
mov
out
clc
hlt
lret
push
addr16
loope
cmp
adc
test
int3
cwtl
jp
sub
addl
pop
sbb
out
sub
jo
adc
inc
lock
add
or
inc
mov
pop
aas
xchg
loop
js
ja
xchg
push
and
movsl
lds
push
sbb
and
mov
into
ret
dec
shrd
icebp
sub
push
in
cld
or
fadds
adc
rcrb
xor
inc
nop
ljmp
inc
add
shr
shrl
sahf
daa
pop
fcomps
add
aas
mov
cmpsb
sbb
xchg
rcl
mov
mov
fstl
xlat
cltd
cmp
fs
insb
adc
and
add
push
pop
or
adc
cmc
add
movsl
push
or
scas
scas
mov
mov
mov
gs
scas
pop
cmp
push
pop
mov
jae
ret
add
cmp
cmp
or
scas
sti
inc
jo
insb
ds
jns
lods
adc
push
cmp
xchg
lods
inc
test
repz
pop
sbb
inc
push
inc
movsb
mov
sbb
jns
xchg
push
cld
or
adc
sub
loopne
scas
adc
adc
hlt
test
sub
mov
sub
lret
mov
xor
jae
test
sti
dec
fisttpll
pop
jns
es
mov
inc
ljmp
pop
loop
dec
cmc
xchg
or
mov
ficoms
pop
or
mov
xorl
lret
ss
andl
pop
lods
cli
ja
imull
mov
call
ret
and
stos
das
inc
push
cmc
jg
sbb
mov
in
ficoms
mov
inc
out
lods
ja
aas
jl
or
out
pusha
or
or
out
fldt
add
dec
adc
mov
add
fsubr
push
cs
mov
movsl
test
pop
int
ret
fmul
add
lods
addl
popf
in
das
and
xchg
aas
scas
push
out
fadds
es
cmc
mov
aam
xchg
cmpsl
xor
fs
insb
adc
test
outsl
dec
and
leave
movsb
aas
stc
test
loopne
adc
and
lock
mov
xchg
lods
movsb
notb
mov
mov
add
int
fnstsw
fmul
js
mov
xchg
fxch
mov
push
pushf
mov
push
gs
cmp
icebp
adcl
dec
sub
stos
jbe
inc
into
mov
add
or
sbb
pop
adc
sbb
popl
and
gs
stc
in
adc
cmp
and
sub
scas
fwait
ret
xor
add
adc
ret
lock
or
sbb
dec
pop
jg
mov
cmpsb
inc
jle
int
push
cltd
and
or
or
outsl
add
dec
in
es
lds
int3
rorl
mov
ja
mov
int
sub
adc
test
shl
add
lock
cmp
mov
push
pop
lods
popa
pop
jnp
stc
sub
cmp
lcall
repnz
loop
lahf
lret
mov
mov
mov
cmp
loopne
xorb
dec
rcrl
sub
pop
mov
or
fisttps
stos
cmpsb
or
in
mov
push
std
mov
fisubrl
mov
lods
sahf
mov
mov
cli
xchg
push
pop
add
incl
addb
pop
ss
pop
mov
shll
jbe
xchg
ret
or
loope
insb
subl
rcll
cmp
aam
pop
xchg
mov
jge
push
fstpt
in
fsubs
cmc
mov
cmp
sub
xor
sarl
jnp
pop
repz
loop
jl
or
or
and
mov
xchg
jl
in
adc
cmp
mov
xor
call
sbb
clc
mov
or
mov
cwtl
add
ljmp
ret
mov
mull
xchg
cs
std
testb
and
xlat
repz
add
lds
shrb
movsl
mov
push
loope
insb
andl
insb
adc
stc
js
cwtl
js
push
fisttpll
lds
cmpsl
mov
pop
lcall
in
in
pop
xchg
icebp
xchg
mov
adc
sbb
and
ficompl
dec
jnp
sbb
mov
xorl
adc
pop
mov
xchg
wbinvd
int
xchg
xchg
shll
sbb
pop
imul
adc
mov
stos
push
sahf
or
mov
sub
pop
fimuls
mov
mov
test
adc
test
loope
cs
mov
fisubrl
push
repnz
add
out
ljmp
aaa
mov
push
cmp
in
scas
test
sbb
mov
lock
push
popa
pop
fsubrl
adc
movsl
mov
sti
xchg
cmpsl
fisttpll
outsl
dec
xor
add
jo
in
inc
pusha
rcl
sahf
push
insl
push
push
push
dec
xor
js
ljmp
jge
dec
and
push
push
sub
jg
out
gs
pusha
cmp
inc
call
icebp
outsl
icebp
test
mov
jge
into
lcall
inc
jno
xadd
pop
mov
cltd
jle
pop
rorl
cmpsb
insl
addl
test
mov
dec
sahf
cmc
jns
push
mov
popf
lahf
les
std
adc
je
clc
shr
hlt
xchg
test
sub
pop
pop
shlb
jmp
add
mov
dec
inc
dec
jns,pn
fcompl
jae
call
idivl
push
push
xor
xchg
pop
daa
xlat
mov
inc
fimull
stos
inc
cmpsb
mov
stc
mov
mov
cmp
jmp
sub
test
dec
sub
lods
adc
addl
push
idivb
jge,pt
fldcw
xor
push
sub
int
sbb
mov
xlat
mov
xchg
cmp
mov
inc
and
cmpsl
pop
dec
lds
sub
xchg
or
mov
xor
cmpsb
adcl
stos
add
out
mov
pop
mov
lret
add
cld
xor
rcrb
or
rcll
push
std
imul
and
into
pop
or
mov
or
fists
es
ja
lret
inc
fnsave
mov
mov
insb
push
lcall
les
test
or
xor
sub
arpl
in
test
mov
push
jbe
fs
in
jbe
lcall
out
jle,pt
cmpsb
sbb
lods
mov
shrl
jns
mov
xchg
in
lock
mov
xor
jecxz
adc
enter
lock
lods
and
scas
std
mov
test
pop
xchg
out
mov
pop
cmp
lods
jbe
jge
stc
ja
adc
push
rolb
cmp
shrb
imul
xchg
arpl
add
add
es
add
lahf
sub
in
les
mov
hlt
inc
ja
jae
loop
mov
cli
adc
test
lock
imul
sbb
add
mov
std
sbb
lcall
xorl
ja
sub
sarb
pop
scas
fwait
sti
mov
in
pop
mov
lret
jns
mov
sti
iret
pop
and
inc
add
mov
adc
sbb
dec
mov
out
jb
sbb
es
in
test
popa
cmp
sbb
fsubs
mov
jb
fsubs
popa
xchg
sbb
sub
push
add
hlt
xor
dec
fwait
outsl
and
sbb
aam
shll
addr16
push
push
jle
ret
add
iret
popa
xor
retw
ss
push
shr
xor
and
or
movsl
testl
mov
xor
xchg
pop
popa
es
jl
mov
push
and
dec
cmp
mov
jle
push
cmp
mov
das
push
mov
popl
sub
divl
cmp
xchg
nop
pop
ljmp
inc
mov
loopne
and
loope
stos
js
xor
fwait
mov
lods
push
xor
bound
hlt
fcmovnu
roll
or
cltd
shrb
cwtl
pusha
dec
sub
lock
jecxz
sbb
inc
sbb
call
out
mov
mov
adc
cli
sti
mov
shrl
jg
jnp
mov
lea
adc
scas
js
pop
mov
dec
je
in
rcrb
pop
pop
out
mov
testl
scas
pop
mov
push
imul
mov
push
das
subl
jl
cmc
cmp
jno
mov
fsubl
pop
inc
pushf
xchg
fwait
movsb
sti
outsl
shlb
stos
add
movsb
lea
in
rol
jae
xchg
or
mov
into
negb
jb
mov
test
push
les
xchg
adc
fcmovnbe
sub
xchg
cmpsb
scas
sahf
or
shrb
xchg
imul
xchg
fdivs
lcall
idivl
addb
fdivl
sbb
mov
cmc
cmp
and
sbb
flds
pop
rclb
jl
shrb
call
mov
sub
cmp
push
jge
mov
sub
mov
xchg
lahf
arpl
imul
add
les
stos
enter
add
sub
fisubrl
mov
cmp
sysexit
das
cmpsl
pop
sbb
rcl
lea
insb
pop
lret
jbe
xchg
sbb
adc
mov
sub
jmp
add
out
loop
cmc
jo
pop
sbb
sarb
ret
adc
push
mulb
aas
dec
outsl
es
mov
cmp
pop
pop
or
xor
and
and
add
and
xchg
cli
scas
insl
sbb
imul
dec
jge
nopl
add
add
inc
leave
fidivs
scas
shr
in
adc
scas
push
jae
outsl
cmp
mov
std
or
cmp
mov
popf
dec
push
fdiv
cltd
push
push
cmpsb
inc
push
adc
into
lahf
loopne
stos
push
cmp
sub
push
leave
dec
sahf
add
lods
xor
decl
cwtl
jbe
push
neg
repnz
dec
sub
ror
push
sub
push
or
mov
xor
pop
mov
and
bound
pop
aaa
or
mov
mov
icebp
jl
pop
mov
mov
iret
cmp
out
jns
mov
mov
leave
sti
stos
pop
pop
sar
add
incb
push
dec
xor
bound
or
scas
jo
je
pop
ss
inc
es
adc
insl
decb
sub
or
mov
hlt
sub
pop
out
pop
inc
or
add
cmp
bound
lock
sbb
out
push
sti
xchg
adc
outsl
xchg
inc
jmp
iret
push
rcrb
jae
insl
insl
xchg
and
and
arpl
in
adc
pop
sbb
cmp
cmp
or
lods
in
xor
lods
mov
cmp
mov
dec
aad
repnz
or
ss
aaa
adc
xchg
jecxz
or
addr16
movsb
cltd
sahf
xchg
das
lret
fwait
lret
ffree
adc
fidivl
xchg
mov
adc
mov
add
add
inc
add
rol
or
out
jp
dec
cmp
mov
inc
or
inc
or
aad
lahf
mov
sub
cmp
or
jne
inc
inc
dec
mov
hlt
dec
mov
adc
mov
jae
xchg
mov
push
js
movsb
cmp
jae
out
and
mov
std
mov
jbe
cmp
and
clc
jge
add
mov
jcxz
mov
test
pop
repnz
push
mov
aad
in
cmc
jle
fcmovne
mov
enter
ds
pop
loope
jnp
xchg
or
out
dec
add
jg
or
cwtl
push
insb
sub
sbb
imul
adc
push
out
sbb
and
mov
mov
mov
jl
insb
inc
inc
dec
or
jo
aaa
insb
mov
inc
loop
aam
pop
js
mov
nop
mov
xor
scas
mov
lock
mov
xchg
push
jg
push
ret
bound
lods
sarl
push
or
aas
call
in
mov
xchg
mov
call
movsb
testb
daa
rolb
xchg
jmp
jle
mov
fists
push
xor
dec
enter
dec
jecxz
mov
or
repz
adc
lret
mov
lock
pushf
xchg
sbb
or
xor
jne
pop
adc
inc
loopne
ret
mov
mov
lret
mov
add
mov
dec
xchg
jbe
mov
dec
insb
mov
cwtl
sub
repnz
xor
xchg
lret
daa
ss
stc
repz
push
fiadds
xor
cli
mov
js
sti
push
and
push
mov
or
into
dec
mov
adc
ja
adc
add
pop
pop
mov
xor
jl
cmp
mov
push
loopne
mov
mov
pop
arpl
push
or
in
aam
lcall
aad
xor
add
movb
shrb
fwait
loopne
xor
imul
imul
inc
mov
sub
mov
xchg
mov
lods
mov
sbb
xchg
pushf
jo
dec
mov
bound
jne
addr16
mov
aaa
jno
out
out
sub
adc
pusha
mov
and
movsl
push
push
in
mov
pop
out
adc
or
adc
scas
fwait
dec
fldcw
jle
ds
push
sbb
dec
popf
enter
fnsave
stc
dec
inc
or
add
iret
fidivl
xlat
icebp
mov
test
mov
push
cmp
and
add
and
pop
mov
out
or
mov
cwtl
mov
mov
sbb
es
rcrb
xchg
sbb
loope
push
sbb
mov
fidivrs
sarl
nop
jg
adc
push
fldcw
adc
jecxz
jge
xchg
mov
nop
push
jg
add
jnp
lahf
ja
pop
xchg
pop
push
loopne
lea
push
icebp
pop
push
or
jle
mov
imul
mov
aas
mov
fistps
jns
inc
push
pop
and
rcrl
dec
or
es
inc
cmp
sbb
das
dec
data16
lcall
xchg
dec
in
aad
cs
or
das
xchg
jno
or
dec
sbb
pop
inc
fistpll
inc
xchg
xor
divl
add
arpl
std
jmp
or
call
mov
movsb
mov
pop
outsl
mov
xchg
mov
arpl
fnstenv
fwait
stc
mov
adc
sub
push
vcvtdq2ps
mov
xchg
enter
adc
or
xor
pusha
pop
stos
es
sub
pop
test
cmp
es
daa
add
mov
movl
fdiv
call
mov
popa
mov
jne
inc
dec
fbstp
xchg
add
negl
cmpsl
xlat
stos
mov
adc
mov
jae
outsl
insb
stc
insb
testl
mov
jns
jno
sub
cmp
push
inc
or
leave
jmp
sub
xchg
mov
xlat
cwtl
popa
jae
add
test
mov
std
sbb
xchg
jle
and
cmp
aam
mov
dec
ja
ss
jle
mov
fadd
jmp
sub
jne
pop
sti
sbb
fucomi
or
call
jns
jns
stc
fadds
pop
in
mov
lock
mov
xlat
pop
aas
mov
imul
and
pop
mov
ret
iret
inc
in
dec
sahf
mov
dec
ret
fyl2x
aas
xchg
jne
xlat
outsb
outsl
int3
adc
test
lcall
lods
jbe
arpl
int
addb
dec
push
inc
sbb
push
das
fidivl
cli
lea
and
fwait
jb
shr
push
repnz
js
insb
cmp
pusha
push
sbb
xor
push
leave
xor
add
stc
scas
sub
pop
push
jecxz
imul
daa
daa
mov
stc
push
lea
push
mov
add
jl
rcrl
sbb
jecxz
inc
int
inc
popf
fsubl
mov
dec
adc
or
mov
push
dec
fwait
or
movsb
push
aad
in
xor
in
dec
in
dec
mov
jo
mov
push
ja
lods
mov
jnp
in
xchg
push
pop
testb
test
pop
pop
imul
lock
xorb
jne
sahf
push
arpl
fisubs
pusha
adc
test
xchg
xchg
cli
popa
lcall
fdiv
arpl
jmp
hlt
addr16
clc
pushf
inc
fisttpl
xchg
call
outsl
inc
in
shl
xchg
popa
fstpt
adc
pusha
pushf
movsb
sahf
dec
and
push
dec
cmpsl
push
cmpsb
in
xor
shlb
pop
stc
ficoms
pop
test
cwtl
mov
shll
mov
test
adc
test
mov
inc
popa
mov
jnp
pop
xchg
sbb
call
loope
xor
sbb
lcall
mov
js
inc
xchg
int3
sarl
mull
pop
and
test
dec
frstor
cmpsb
push
mov
in
hlt
cmp
iret
lds
ljmp
jle
mov
data16
jmp
test
and
popf
xchg
xlat
aam
sbb
pushf
jg
mov
pop
cwtl
into
and
inc
cmp
xor
mov
ret
xor
or
ja
daa
clc
test
aas
mov
popf
and
push
daa
mov
mov
inc
mov
push
pop
leave
lcall
sbbl
mov
mov
sbb
shlb
dec
or
or
imul
ret
jne
pusha
jmp
mov
add
enter
cmpsb
jmp
inc
inc
sbb
lock
lahf
fmull
sub
adc
xchg
lahf
das
loope
shlb
xor
jmp
out
mov
jnp
and
daa
test
js
jne
lahf
pop
jg
imul
int3
push
jge
int
ss
xchg
in
pop
mov
icebp
orl
notl
mov
jb
les
addb
gs
jne
aas
enter
dec
mov
push
cmp
test
push
leave
rorl
hlt
out
mov
push
in
add
lret
and
movsl
movsl
mov
js
imul
bound
mov
enter
and
rorl
pushf
adc
xchg
mov
ficompl
jp
dec
inc
pop
ds
mov
insb
dec
call
push
fstpt
inc
lret
inc
out
fistl
add
outsl
xchg
push
add
mov
icebp
test
outsl
js
pushf
ja
push
jne
jmp
cmpsb
shl
or
adc
xor
fwait
daa
arpl
ja
adc
xchg
adc
mulb
cld
pushf
mov
scas
into
mov
sahf
rclb
pop
xorb
sub
add
sbb
inc
and
leave
leave
fdivs
pop
sub
push
iret
lret
inc
pusha
mov
or
je
inc
rcrl
jle
popa
aaa
cmp
xor
dec
jae
jmp
push
nop
jb
cmp
or
outsb
stos
pop
jnp
xor
popa
iret
decb
rol
mov
clc
mov
lret
sub
fldenv
loop
cmp
lret
sbb
cmp
mov
adc
fldt
xor
inc
xor
inc
inc
in
and
mov
cmpsb
fdivrl
adc
cs
and
inc
sub
sub
inc
pop
cmp
lods
xchg
jge
pop
xchg
movsb
or
jo
push
mov
cld
adc
jl
sub
test
imul
mov
pop
ja
jns
pop
sti
dec
mov
ds
xor
push
fdiv
pop
fmull
push
movsb
adc
mov
cltd
test
and
inc
adc
rolb
push
cmpsb
enter
insb
sti
mov
and
inc
adcl
pop
hlt
pusha
or
clc
aaa
popa
in
and
add
pop
push
popa
fcmove
outsl
test
test
xchg
xchg
mov
jmp
cmp
addr16
pusha
outsl
daa
lods
add
dec
sar
mov
xchg
fisubl
lahf
into
mov
adc
mov
je
xlat
aas
movl
dec
pop
cmp
leave
cmc
addr16
loopne
icebp
mov
rcl
push
lret
scas
mov
and
mov
lds
pop
fcmovnb
dec
jnp
or
adc
call
cmp
xor
repz
mov
sub
or
jns
nop
pop
aaa
std
hlt
mov
test
cmp
or
pop
add
dec
sahf
adc
popf
mov
out
fsubrs
arpl
shll
in
push
arpl
mov
pcmpeqb
movsl
jns
or
and
enter
xor
gs
add
fucomp
add
jge
xlat
adc
or
dec
mov
das
rorb
jno
xchg
in
pop
jp
outsb
shr
push
mov
in
rclb
add
sbb
push
xchg
inc
out
pop
fldl
test
xor
leave
cmp
pusha
std
popf
adcb
fcoml
dec
lds
mov
std
dec
mov
mov
lea
mov
jns
dec
push
test
sbb
pop
mov
std
add
cld
push
popa
xor
dec
cltd
add
push
adcb
sub
push
repz
or
mov
aaa
xchg
pop
clc
sub
inc
xor
mov
jnp
ficomps
repnz
mov
arpl
xlat
lret
test
dec
sub
push
adc
mov
call
mov
cmp
jp
mov
mov
pop
and
scas
jecxz
add
sahf
das
pshufw
mov
pop
fldl
xor
dec
and
sti
push
cmc
pop
jb
addb
xor
rcl
mov
push
sub
adcb
sbb
or
hlt
mov
fcmovnu
scas
in
jne
push
cmp
mov
sub
mov
mov
loop
mov
nop
sub
add
inc
shrb
out
xlat
call
fists
dec
jno
imul
lock
xor
cmp
les
mov
push
adc
jle
jmp
out
jno
ds
pop
mov
or
and
popf
mov
add
stos
xlat
sub
jle
outsb
sub
pop
int
ljmp
mov
adc
mov
test
mov
push
add
ds
jae
loop
sub
jb
in
aas
mov
test
jle
rorb
jp
clc
nop
cltd
outsl
pop
stc
daa
out
adcb
mov
jb
int3
xchg
cmpsl
jb
in
sub
add
cmp
mov
ss
push
sub
out
fsubr
inc
das
dec
cld
andl
test
mov
rclb
mov
notl
xchg
pop
jg
cwtl
stos
jge
pop
dec
pushf
notb
dec
mov
clc
pop
lds
jno
add
cmp
mov
adc
test
test
pop
loope
popf
push
sub
mov
mov
lock
loope
xor
iret
ffreep
xor
push
cmp
dec
repnz
push
pop
ss
push
out
jl
sub
mov
sub
sbb
pop
mov
cmp
ret
inc
adc
inc
push
fdivr
fcmovnb
js
dec
inc
jnp
sahf
sub
mov
ss
fcmovnu
insl
adc
pop
jno
lret
fs
jnp
insb
or
pop
outsl
inc
inc
cmp
aaa
pop
shrb
inc
sub
aaa
or
push
pop
mov
pusha
pop
test
sbb
das
cmp
cmp
xchg
pop
in
push
jnp
push
mov
ja
mov
std
cmp
adc
dec
mov
push
pushf
out
jns
mov
rcrl
fidivl
pop
sbb
add
mov
sbb
cmp
sbb
adc
add
insb
lods
add
push
mov
push
ret
sub
hlt
inc
lods
cmp
and
sub
push
ss
aas
mov
mov
sub
mov
adcb
imul
push
mov
dec
shlb
imul
cs
dec
pop
bound
adc
and
pusha
call
cmp
test
dec
or
mov
nop
in
aam
or
mov
jns
or
add
in
lcall
test
cwtl
or
mov
int
ret
mov
mov
cld
arpl
negl
pop
fcompl
loope
dec
or
sub
out
sbb
jbe
mov
insl
stos
testl
mov
je
leave
jnp
mov
cmp
cmpl
addl
orl
bound
in
das
mov
pop
addr16
push
dec
js
mov
mov
lods
and
testb
out
mov
inc
jns
xchg
ficoms
adc
outsb
aaa
test
aas
fsubrs
out
std
and
pop
test
fmull
pop
pop
add
cmp
inc
loope
cld
jmp
jb
popa
scas
xchg
mov
adc
daa
out
loope
inc
mov
mov
scas
js
mov
dec
cli
in
adc
jmp
cmc
js
loope
jne
xchg
jmp
aam
into
xor
or
sub
inc
dec
lea
mov
iret
mov
pop
ficoms
cmpsl
sub
je
and
enter
lods
push
loop
mov
sbb
jnp
mov
and
movsl
push
push
lret
jl
and
das
shrb
mov
gs
addr16
enter
cmpb
dec
cwtl
scas
lcall
cltd
dec
xchg
loope
adc
adc
lods
cmp
mov
pusha
add
mov
mov
into
je
stc
test
add
das
lods
imul
dec
ss
pop
adc
sahf
outsl
lock
inc
pushf
lea
xor
int
and
xor
aas
fisttpl
mov
test
mov
call
shl
push
test
lret
lret
cmp
push
test
push
xchg
addr16
mov
fsubs
cwtl
push
lcall
jno
jle
inc
imul
jnp
cmp
popa
sbb
xchg
ss
fimuls
data16
lea
cmp
pop
or
es
mov
or
mov
jbe
imul
repz
imul
mov
jecxz
scas
movsl
xor
test
dec
pop
sbbl
push
xchg
or
push
jg
iret
jl
loopne
lods
je
rol
aad
mov
scas
fstps
popa
jae
pushf
and
push
mov
outsl
cmpl
sbb
cld
jno
cmpsl
mov
mov
lcall
jb
jl
out
jb
imul
mov
pop
sbb
lret
jb
pop
push
add
xor
xor
add
xor
add
sarl
cmp
inc
data16
xor
or
repnz
mov
sar
mov
fisttpll
mov
shlb
ljmp
push
mov
fisubrl
inc
push
test
shll
pop
adcl
outsb
or
cmc
and
imul
inc
sub
aas
push
iret
shll
mov
int3
cmp
mul
iret
push
dec
push
sub
clc
inc
ret
cmp
adc
fwait
jecxz
and
mov
lock
inc
sahf
loope
test
mov
mov
aad
pop
in
loopne
jmp
xchg
mov
mov
jp
stos
and
std
out
js
add
inc
xchg
sbb
pop
cmpsl
daa
jbe
jg
rcrb
add
pop
push
movsb
jo
iret
xchg
test
and
fucomip
ja
dec
pop
mov
setnp
lcall
arpl
test
dec
adc
shlb
in
in
scas
xor
negl
push
in
pop
jecxz
pop
fisttpl
inc
push
dec
movsl
dec
mov
sti
jmp
popf
cmp
in
xor
popf
pop
jb
add
push
in
ss
xor
and
aas
imul
cmp
xchg
ds
loop
or
sbb
or
jmp
xor
cmc
stos
mov
push
mov
fistl
inc
mov
test
insl
and
pop
mov
shlb
lahf
mov
adc
push
xchg
fnstenv
mov
cmp
cmp
sbb
push
sti
or
das
ljmp
cmp
push
sbb
pop
xor
cmp
dec
xchg
xlat
add
gs
loope
decl
xchg
imul
jnp
sbb
mov
jecxz
add
scas
or
dec
mov
sbb
or
pop
sbb
inc
pop
decl
cmp
mov
fisubl
outsb
pushf
ror
pushf
mov
mov
aam
sub
insl
xchg
cli
jp
cld
mov
dec
inc
sub
lock
mov
jbe
sbb
xchg
pushf
fmull
int3
jnp
push
dec
inc
dec
adc
shll
mov
and
mov
fwait
cmpsb
js
sbb
leave
mov
cwtl
push
mov
dec
ret
adc
outsl
insl
mov
pop
int
orb
jg
and
xchg
adc
ret
pop
mov
mov
push
inc
xchg
sbb
push
sub
repnz
xchg
js
movsb
mov
mov
sti
leave
pop
adc
fucomip
daa
aas
aaa
cmp
scas
jb
add
adc
mov
mov
xchg
jl
push
call
inc
xor
or
mov
test
sub
push
jle
scas
std
add
mov
xchg
push
and
sbb
fnsave
cwtl
xchg
fdivrl
jle
mov
out
stos
push
cmp
popf
cmpsb
outsb
in
rcrb
sbb
adc
insl
pop
lods
jb
jae
adc
push
lods
push
in
cs
push
xor
xchg
or
or
mov
sbb
xor
mov
xchg
cmpsb
pusha
adc
scas
mov
jge
jo
or
mov
dec
and
mov
xor
push
xchg
mov
rclb
add
loope
xchg
sub
cmpsb
and
lret
mov
mov
sbbb
and
scas
xor
scas
inc
pop
sub
push
mov
mov
mov
jp
inc
mov
push
push
pop
dec
xchg
int
mov
loope
mov
pop
mov
xorb
and
and
adc
hlt
addl
mov
std
scas
lea
push
stos
mov
xlat
inc
sub
pop
and
fwait
repz
jb
cmc
orb
mov
divl
mov
sub
inc
test
push
jns
nop
cbtw
repnz
sub
push
adc
dec
xlat
pop
les
stc
inc
xlat
outsb
cmp
xor
or
pop
mov
shrb
mov
dec
mov
scas
loope
sub
push
push
lock
xchg
leave
mov
mov
fwait
mov
movsb
fdivrl
mov
jl
pop
dec
cli
mov
jge
add
pop
popl
xor
out
mov
repnz
lret
sti
shrl
mov
ja
mov
ret
out
mov
inc
mov
loope
and
pushl
outsb
scas
dec
repz
in
imulb
pop
orb
rcr
push
out
or
dec
stos
mov
dec
or
push
ret
cmp
ror
or
out
cmpsb
sbb
mov
mov
aam
pop
pop
loop
int3
repnz
bound
es
dec
mov
xor
xor
push
and
rol
imul
jmp
jb
or
scas
inc
loopne
out
icebp
xor
inc
xlat
aam
pop
add
int3
and
arpl
stc
pop
dec
pop
stos
into
outsb
mov
movsl
in
sub
sbb
xchg
adc
fisubs
jae
in
pop
cmp
mov
out
mov
add
xor
pop
push
jl
mov
adc
xchg
push
and
jle
lds
lock
xor
stos
dec
test
outsl
jge
pop
push
jnp
ljmp
push
inc
sti
cmpl
and
sahf
sub
push
pop
lea
inc
test
xchg
leave
mov
xchg
or
fists
pop
jecxz
out
sbb
mov
pop
in
ss
adc
outsl
jae
movsl
push
push
lods
cli
jae
cmp
pop
mov
ud1
and
cpuid
stos
xorl
sbb
ret
cli
lea
inc
call
mov
dec
loop
ljmp
scas
jmp
fcomps
sbb
popf
loopne
xor
aaa
push
mov
andb
aam
arpl
mov
ret
mov
scas
cmc
push
sbb
lock
in
repz
push
mov
mov
mov
jbe
push
adc
lcall
sub
or
and
adc
cwtl
mov
lcall
aas
pop
aam
jecxz
daa
repz
xchg
lahf
and
fwait
cmp
data16
fbld
sub
xchg
jae
sbb
sub
add
bound
test
mov
mov
sarb
cld
data16
xchg
shlb
fsubrs
daa
xchg
or
inc
lods
or
data16
shrl
cmp
sub
icebp
shl
scas
je
aam
or
jnp
push
pop
sub
xchg
cmp
icebp
add
daa
or
fisttpl
lahf
cmp
adc
jg
xchg
cmpsl
sub
dec
repnz
scas
mov
xor
and
into
jg
mov
inc
inc
mov
and
inc
add
in
fcmovnbe
andl
popf
mov
pop
fstl
lock
cmp
repnz
ret
ljmp
loope
pop
xor
pop
mov
dec
aad
inc
mov
add
popf
cmp
popf
nop
arpl
or
nop
cli
and
push
inc
xchg
clc
faddl
or
push
test
inc
adc
hlt
push
imul
and
dec
mov
ret
pop
icebp
int
or
mov
decb
popf
sub
sbb
mov
dec
stc
add
das
sbb
fstpl
sti
adc
aam
imul
ds
rcrb
pop
xchg
push
jecxz
mov
cmp
inc
stc
push
cld
repnz
mov
push
shlb
lret
sbb
mov
pusha
mov
sub
or
pop
push
ds
out
repnz
push
daa
dec
add
mov
rorb
cmp
or
lock
cmp
sub
jmp
sub
or
sub
xor
fistps
xlat
add
ds
cmp
xchg
pop
movsl
scas
pop
outsl
iret
das
inc
into
jae
stos
dec
push
rcrb
outsl
jle
sbbb
jle
mov
mov
sub
push
push
cmp
outsl
rep
mov
push
dec
cwtl
mov
mov
sahf
in
repnz
call
pushf
aaa
ss
add
out
lods
mov
pop
fsubrs
xor
pop
rorb
int
cmp
scas
xor
ds
or
orb
mov
shrl
dec
cmp
mov
icebp
xor
xchg
ss
pop
mov
mov
cltd
ret
inc
out
jb
fsubrp
repz
popa
push
popf
pop
pop
ds
outsl
inc
lods
mov
xchg
lcall
addr16
cmp
or
mov
push
repnz
sbb
jns
insl
nop
in
dec
add
nop
mov
sub
cli
mov
icebp
xor
lret
inc
mov
xchg
aas
mov
ret
shlb
dec
rcr
push
les
lret
loope
mov
lea
cmc
clc
stos
mov
mov
push
hlt
std
call
scas
sub
shlb
cwtl
arpl
fadds
pop
pop
add
out
fiadds
js
inc
mov
enter
mov
mov
jmp
xlat
mov
addl
movsl
or
push
mov
aaa
jge
jp
loope
and
test
cmpsb
shrb
roll
xchg
mov
cmp
xor
mov
das
mov
sbb
xchg
lock
mov
std
mov
pop
cmpsl
insl
jmp
or
cld
ror
das
inc
xor
sahf
arpl
xchg
xchg
and
push
jo
les
add
adc
pop
add
popa
ficomps
aam
adc
cmc
fwait
idiv
imul
xchg
push
dec
pop
cmp
mov
xor
mov
ljmp
pop
pop
cmp
and
mov
faddl
pushf
das
cmp
sub
add
adc
call
repz
fists
jae
or
mov
push
mov
call
test
inc
cld
jl
push
pusha
repnz
sbb
movsb
shll
cmp
aad
cmp
in
mov
in
jge
xchg
mov
addb
adc
ds
mov
arpl
ljmp
mov
int3
repnz
push
xor
sbb
iret
push
xor
sub
xor
jp
add
jns
jge
test
mov
out
loopne
call
mov
jbe
fisubrs
or
int
das
xor
mov
jae
mov
test
mov
adc
popf
push
cmpsb
out
add
jmp
jae
mov
push
test
or
push
sub
ljmp
cmpsl
repnz
popf
or
dec
dec
xor
mov
push
lcall
sbb
push
arpl
pop
rcll
sbb
xchg
xchg
lods
aas
xchg
outsb
fdivs
stc
xchg
jmp
notl
mov
sub
xor
mov
push
nop
xchg
cmp
cmp
push
adc
ret
in
dec
dec
rcrl
xor
insl
out
rcl
add
pop
fs
and
adc
push
cld
fcmovnbe
add
mov
and
mov
jns
stos
and
rolb
repz
call
xchg
inc
in
cmp
loopne
sub
lcall
imul
mov
es
cs
sbb
adc
jo
xchg
rcr
push
jbe,pn
rolb
pop
xor
adc
outsb
pop
mov
or
jae
sbb
fsubrl
repz
inc
sti
ja
push
lahf
push
aad
or
dec
pop
add
inc
jg
xor
in
mov
adc
xchg
and
icebp
lret
adc
test
jle
addl
roll
test
push
loopne
out
popa
aam
idivb
idivl
push
or
mov
sbb
sub
imul
mov
subb
xchg
mov
mov
rcrb
repz
xor
pushl
out
or
les
inc
pop
mov
pop
mov
packssdw
repnz
insb
repz
mull
icebp
aaa
mov
push
pop
out
popa
or
loopne
testl
and
sahf
push
push
movsb
pop
inc
sub
lods
push
int
push
jl
xchg
mov
rclb
lcall
sti
test
xchg
adc
xor
inc
lea
jnp
xor
in
sub
rorl
mov
fldt
fdivrs
pop
or
push
mov
xorb
sub
inc
in
mov
sti
inc
jge
cwtl
sub
jp
call
push
dec
lock
mov
rol
sbb
scas
lods
faddl
xor
fxch
fwait
hlt
ds
aad
cmp
pusha
mov
repz
int3
sub
cltd
fstps
sbbl
pop
xor
mov
or
out
cwtl
in
xor
sbb
add
pop
outsl
mov
mov
arpl
cs
push
mov
mov
roll
push
pusha
xchg
jb
outsl
ljmp
or
mov
cmp
fdivs
pop
cld
dec
mov
adc
sub
decb
sbb
psrad
dec
cmpsl
lea
sti
xchg
loop
imull
pop
pop
addr16
pop
mov
mov
jne
in
shrb
aam
fnsave
in
fs
mov
sbb
xchg
xor
add
jbe
pop
pop
ljmp
cmp
leave
xchg
mov
cmp
int
pop
mov
jp
fsubrl
jae
push
adc
int3
and
sbb
loope
jecxz
ljmp
cmp
push
or
shl
and
push
addb
into
in
lahf
mov
inc
inc
add
mov
dec
mov
aad
cs
xor
ret
sbb
incb
mov
fisttpl
lods
mov
imul
in
jo
mov
pop
add
mov
mov
xor
loopne
fisttpll
xchg
pop
repz
cwtl
rcll
dec
fldl
ret
lahf
pop
std
dec
fsubrl
fiaddl
popa
mov
xchg
imul
push
xchg
aad
jae
push
mov
idivl
dec
mov
push
call
adcb
outsb
aas
movsb
add
sub
loope
je
or
lret
int
sahf
out
or
iret
mov
int
lea
mov
lods
rorl
mov
mov
cmp
cmp
rcrb
in
in
mov
adc
neg
adcb
pop
mov
ss
push
popf
cs
pop
es
ja
lods
sbb
inc
pop
popf
outsl
pandn
jns
cmp
xchg
mov
inc
lods
mov
imul
out
sahf
pop
loope
call
pop
jmp
out
mov
cltd
mov
int
jecxz
aas
outsl
loope
push
cwtl
push
sti
jp
ror
mov
dec
xor
mov
xorb
std
jnp
dec
icebp
flds
mov
das
sub
lods
decb
mov
push
mov
and
loopne
mov
push
add
dec
pop
pop
jg
lret
mov
sbbb
fadds
ret
shr
sub
mov
add
aad
movsb
jl
rcrb
rcl
loope
xchg
xchg
lahf
add
rorb
cmpsl
jno
aam
push
push
shr
jb
outsl
repnz
cwtl
jge
std
or
clc
push
loop
into
cmc
pop
cwtl
out
add
outsb
ljmp
or
mov
popa
push
out
jp
int3
out
imul
push
dec
int3
jg
out
inc
loop
popf
faddl
adc
sbb
test
push
aas
fstl
aas
scas
push
inc
or
xor
jno
adc
xor
xchg
mov
std
loope
insl
in
mov
jnp
pushf
ja
pop
xchg
push
and
xor
in
pop
sub
scas
imul
jnp
mov
mov
pop
jns
lods
cmp
das
mov
ljmp
outsl
int3
lods
adc
rsm
negl
loop
fisubrl
andb
push
cli
mov
push
dec
aaa
push
loope
mov
inc
sbb
lods
pusha
ds
pop
rcrl
sbb
xchg
xchg
pusha
sub
cmp
sbb
or
dec
in
cmp
les
xorb
cmp
insb
mov
push
push
mov
sub
cmpl
das
add
pop
sub
rcr
aam
xchg
push
cmp
jno
loope
jp
call
inc
ret
lahf
inc
push
add
enter
imul
cmp
inc
outsb
mov
test
adc
xor
xchg
std
sbb
dec
repnz
mov
push
arpl
cwtl
roll
dec
ret
test
scas
pop
or
enter
sub
aas
adc
fstpt
fs
nop
dec
popl
int3
jecxz
xor
and
stos
movsl
adc
xor
or
or
pop
push
fcomps
cmpl
cmp
xor
cmc
adc
dec
sbb
add
out
add
jae
lods
movsb
inc
sbb
cmpsl
in
sub
mov
pop
lret
mov
xchg
stos
jo
pop
cld
rcll
orl
fwait
inc
push
inc
sbb
xor
xchg
call
xchg
dec
xor
sar
lret
sbb
pop
mov
jecxz
mov
adc
mov
sbb
mov
dec
mov
lock
xlat
mov
pop
and
imul
loopne
insl
arpl
mov
std
sbb
sahf
mov
icebp
sbb
icebp
xchg
xlat
scas
cmp
jl
les
scas
add
xchg
insl
daa
out
pop
ret
jnp
jbe
mov
or
aas
outsb
leave
cs
cld
inc
mov
movb
iret
mov
notb
or
insb
shlb
or
push
leave
dec
mov
or
cli
dec
jecxz
scas
sub
call
sub
push
test
je
lods
fiadds
mov
xchg
push
pop
mov
hlt
pop
ret
jo
pop
adc
mov
cmp
jbe
aam
in
nop
or
clc
add
int
lcall
add
stos
mov
dec
add
jmp
jl
mov
fidivrl
cmp
xchg
push
xor
insb
xchg
mov
lret
xchg
and
jle
mov
jbe
xchg
hlt
in
jo
js
leave
lock
add
sub
stc
xor
jecxz
cmpsb
cmp
xchg
or
mov
sarl
iret
je
sbb
mov
jge
je
outsw
dec
fsubl
aam
lods
xchg
testb
and
jnp
js
out
add
xor
mov
loop
xor
insb
xchg
add
cwtl
mov
stos
add
xchg
sbb
fcmovb
insl
js
sbb
lods
outsl
in
enter
and
and
in
cmp
pop
adc
cmc
fisubs
adc
faddp
inc
mov
out
in
xlat
sub
cmpb
adc
xor
and
and
fildl
test
or
jecxz
lahf
xlat
bound
mov
cld
xchg
sub
jo
hlt
jno
fwait
add
into
fwait
gs
test
sub
and
push
sbb
lock
loopne
add
push
sub
shlb
xchg
inc
aam
test
pop
jmp
mov
sahf
stos
jmp
inc
fistps
cli
adc
mov
add
mov
sbb
fnstsw
enter
jg
enter
loopne
cmp
and
xor
mov
iret
mov
and
out
push
inc
int3
jnp
rcrb
std
mov
test
push
call
xor
lahf
cmp
push
imul
mov
movsb
aaa
xor
sub
xor
pmulhw
mov
sub
inc
jp
mov
lcall
push
gs
jle
bound
lea
or
push
mov
mov
js
cmpsb
jnp
sbb
cmp
lea
js
psllw
cmpsb
push
fwait
xchg
jle
xlat
rolb
cmpsb
ja
lea
leave
xchg
push
insl
xor
lds
mov
imul
orb
cwtl
jmpw
jbe
jmp
push
in
add
mov
sub
out
fidivrl
dec
pop
je
mov
rcl
ret
test
in
dec
rorb
addr16
mov
subl
roll
mov
jae
and
das
xor
stc
loop
stc
fwait
cld
cli
push
xchg
mov
lods
rcrb
xor
int3
in
pop
out
jno
inc
mov
jmp
jne
dec
and
rcr
repnz
and
dec
movsl
adc
add
jae
sahf
rcll
push
lcall
jno
pop
aaa
mov
cwtl
test
inc
popa
sub
aad
andl
scas
aas
fstpt
xor
and
gs
sub
std
add
cmp
gs
cmpsl
push
mov
out
shlb
in
int
mov
shl
out
shlb
ja
ffree
cmp
pop
mov
mov
pop
test
and
xchg
push
leave
xor
leave
pop
sub
gs
popf
adc
pop
cwtl
xor
clc
leave
inc
icebp
sub
sub
xlat
inc
sbb
mov
adc
mov
test
jl
lcall
pop
pop
lods
addr16
sub
sbbb
cmpsl
das
ret
jecxz
jecxz
mov
xchg
pop
push
std
aaa
adc
lret
push
outsl
sbb
sub
shl
in
mov
cli
dec
push
movsb
pushf
pop
ds
ret
nop
fildl
lock
movsl
imul
mov
mov
cmp
mov
pop
in
int
hlt
lods
stc
pop
xchg
aad
fwait
cli
or
daa
stos
add
add
push
jns
daa
lea
push
hlt
fistl
bswap
dec
aam
int3
inc
cmp
jge
cmp
dec
cmc
xor
cmpsb
pushf
sti
fwait
or
jne
sbb
sbb
dec
sub
sub
hlt
cwtl
loope
fisubl
aam
sarl
insb
xchg
imul
mov
and
nop
leave
push
xor
shrl
mov
and
fisttpl
pushf
pop
dec
dec
dec
xor
les
sbb
bswap
pop
pop
push
mov
outsl
adc
lcall
dec
pop
loopne,pn
xor
shlb
add
add
sub
adc
movsl
push
mov
into
cmp
dec
cmp
adc
jns
fsub
lret
add
xor
mov
sub
dec
xchg
fldl
cs
aam
mov
js
or
dec
sbb
ljmp
sti
orl
xor
add
es
shrl
xchg
mov
js
insl
shl
adc
sub
rcrl
sti
xor
adc
sti
mov
xor
mov
movsb
and
sbb
lcall
sub
adc
push
cmp
mov
push
push
jne
imul
stc
sbb
push
repnz
ds
test
mov
idivl
xchg
iret
cli
js
frstpm(287
mov
movl
mov
jecxz
mov
cmp
xor
frstor
rclb
mov
add
das
sar
add
xchg
xchg
fisttps
subl
xchg
fisubl
adc
dec
xor
std
mov
mov
inc
cmp
stos
mov
insl
mov
dec
adc
cwtl
jmp
loop
mov
or
pop
xor
in
scas
mov
sbb
test
sahf
push
dec
dec
ljmp
test
cmp
or
cld
pop
testb
inc
shlb
sbbb
aas
add
arpl
ret
xor
add
dec
cmp
shlb
pop
sub
aam
ret
dec
add
sahf
in
call
outsb
pop
nop
lret
pop
inc
in
test
lret
jle
loopne
pop
adc
inc
jo
or
into
out
mov
adc
cmp
imull
jg
orl
push
das
dec
cwtl
lcall
cmp
and
add
int
pop
bound
fs
aad
push
std
cmpsb
mov
mov
inc
pop
sbb
add
jg
pop
xor
and
ret
adc
dec
std
jno
inc
dec
and
xlat
sbb
sbb
cmp
adc
sbb
cmp
add
sbb
addr16
lea
data16
fnstsw
mov
add
in
xchg
lcall
push
cmp
mov
adc
inc
in
sub
sahf
sub
inc
outsb
mov
mov
lea
xlat
shll
dec
push
imul
cmpxchg
ja
cmp
pushf
imul
mov
pop
and
ror
mov
push
xor
xchg
popa
int3
sbb
xchg
fwait
sbb
pop
aas
mov
mov
jb
out
ds
xchg
cmp
cs
popf
add
inc
xor
xchg
adc
andl
dec
or
fwait
jb
into
add
or
ss
mov
mov
cmpsl
mov
test
test
scas
sarb
aaa
pop
fsubp
or
xchg
mov
cs
push
je
imulb
popf
orb
jl
push
mov
pop
cld
or
mov
or
shrb
mov
add
lods
out
push
mov
mov
orb
jnp
mov
push
aaa
mov
test
icebp
mov
inc
cmc
enter
push
arpl
cli
loopne
push
push
mov
sbb
and
sbbb
scas
and
pop
mov
add
mov
or
xor
sbb
pop
out
mov
push
cmc
getsec
mov
dec
dec
int3
neg
pop
and
sbb
dec
push
inc
aas
pop
xchg
add
or
jecxz
jmp
inc
xor
dec
mov
mov
cs
jl
leave
inc
loopne
je
je
int
cmpsl
xchg
push
clc
rorb
xor
lea
or
enter
imulb
fnstsw
add
aam
ljmp
scas
push
sub
cli
pop
push
mov
jg
js
add
mov
test
icebp
aaa
fdivrl
xchg
or
rcrb
in
inc
ja
xor
rcll
xor
sub
mov
hlt
aaa
dec
out
add
bound
std
inc
andl
ljmp
imul
pop
cltd
jecxz
dec
pushf
push
shlb
mov
loop
imul
bound
add
adc
mov
sti
inc
mov
enter
hlt
fcoml
push
sbb
inc
pop
pop
enter
into
push
addr16
jmp
hlt
add
testl
xlat
lds
out
in
jecxz
orl
fldt
push
andl
mov
mov
sbb
shrb
pop
icebp
lods
and
jp
mov
jae
sbb
imulb
inc
fwait
jg
das
sti
mov
int3
xor
mov
cltd
ret
and
test
cld
sub
or
into
addl
fcmovbe
dec
jecxz
jo
ret
shlb
mov
fistl
inc
cmp
xchg
scas
jns
clc
repz
push
leave
inc
sbb
out
test
sbb
repnz
jecxz
add
xchg
aam
enter
pop
popf
jne
sbb
repz
mov
psubb
lods
mov
or
lock
lahf
sti
fmull
mov
js
rorl
jo
cmp
in
mov
lret
sbb
fs
leave
cmp
jae
dec
push
in
jmp
and
and
jle
add
sub
repnz
neg
push
sahf
mov
call
inc
sbb
jnp
in
cltd
enter
loopne
lods
mov
rcrb
fisttpl
pop
mov
stos
fadds
insb
frstor
into
pop
lcall
xlat
add
push
jnp
notb
mov
std
mov
int
out
pop
xchg
inc
xchg
pushl
je
into
jno
outsb
rcl
popa
js
stos
jmp
xchg
dec
int3
divb
call
pushf
fcomip
cmp
push
fmull
ljmp
lret
push
stos
add
inc
jnp
inc
insb
xchg
pop
cld
dec
in
fimull
mov
sbb
inc
xchg
ljmp
and
add
fadd
pusha
mov
js
repnz
adc
adcl
xchg
cli
sub
call
xchg
decl
cltd
ret
into
jbe
hlt
jno
sbb
imul
sub
push
shll
arpl
test
call
cmp
lods
mov
dec
in
sub
xor
jp
sbb
jne
mov
insl
xchg
fmuls
inc
inc
mov
adc
ljmp
stos
dec
jne
mov
dec
cmp
test
inc
loope
out
pop
jbe
lock
push
jge
pop
push
aam
scas
data16
out
stos
test
or
les
cmp
jge
xor
and
mov
movsb
push
leave
jge
xchg
ret
mov
mov
or
jno
xchg
fsubs
xor
cmp
loop
fiaddl
fisttps
jecxz
xchg
das
push
mov
fcoml
in
call
xor
adc
sbb
outsb
popa
cmc
jb
jl
imul
or
and
mov
push
inc
adc
push
imul
xchg
jno
cmp
outsl
push
and
jle
dec
sbb
inc
or
cmp
fwait
mov
jno
cwtl
pop
sub
and
loope
and
mov
dec
dec
dec
jp
jge
stos
addr16
and
and
test
xor
pop
out
sub
xlat
loopne
xor
xlat
testl
xchg
repz
gs
clc
push
call
loop
xorb
in
gs
xchg
subl
out
xchg
test
fs
xor
pop
ja
test
aaa
sbb
in
test
and
mov
outsb
aaa
enter
or
jnp
mov
fs
cld
ds
xchg
mov
dec
dec
push
movsb
sub
dec
sub
fcomp
add
jmp
pop
fsubs
or
pop
xchg
and
test
cli
and
out
je
outsl
jns
inc
or
nop
aas
xor
inc
push
das
insl
into
and
jb
lock
sahf
xor
xchg
int3
xor
jno
ljmp
add
pushf
cmp
mov
repz
popa
push
adc
movsb
sub
push
enter
cmp
jge
mov
arpl
push
ret
xor
mov
lods
sub
scas
sbbb
inc
or
dec
add
sarb
cs
push
cmp
daa
pop
in
out
inc
push
cld
bound
out
push
in
pop
in
in
inc
sub
cmp
pushf
in
daa
dec
add
lahf
inc
lock
mov
pop
negb
aad
sbb
not
out
sahf
push
dec
ficompl
mov
pop
mov
outsb
rcll
outsb
mov
cltd
lahf
push
mov
clc
insl
rorb
movsb
scas
ja
pushf
test
fisubs
negb
inc
ljmp
loope
hlt
push
lods
sbb
xchg
rep
out
mov
xchg
lea
cmpb
sub
popf
lret
sub
mov
dec
mov
adc
pop
flds
ljmp
xchg
clc
imul
cld
pop
loopne
addr16
dec
sub
adc
gs
dec
fs
inc
jbe
push
shl
lcall
fsubs
jnp
xor
push
jl
shl
ror
xchg
rcrb
fcmovnbe
jge
jbe
shlb
jle
jl
negl
xchg
movsl
pop
repz
mov
fsts
push
xorb
aas
jge
ds
or
fldl
push
aad
imul
jmp
popa
dec
jae
mov
xchg
adc
push
cld
cmc
cmp
lahf
or
xchg
stos
push
or
sbb
enter
into
jns
xchg
adc
xchg
mov
imul
cmp
test
or
adc
mov
jb
leave
xchg
dec
xchg
xlat
fistps
je
inc
inc
int3
adc
notb
nop
mov
mov
push
adc
push
jmp
repz
pop
pop
cs
cmp
push
stos
mov
in
cmp
and
xabort
adc
xor
decb
imul
or
push
dec
adc
hlt
cmpsb
push
das
ret
mov
adc
std
cmp
inc
insl
shrb
inc
adc
dec
insl
ja
idivb
or
sub
out
inc
xchg
test
pop
push
and
test
adc
dec
jmp
jle
jle
or
leave
mov
iret
xchg
fiaddl
mov
jae
sub
mov
sbb
xchg
shufps
mov
testl
pop
gs
add
js
vsubpd
mov
loope
push
push
idiv
dec
add
shl
lret
adc
or
push
mov
outsl
mov
push
nop
in
out
mov
mov
daa
jge
fistpl
add
das
fwait
jp
xchg
mov
movsl
loope
mov
sub
mov
mov
or
insb
rolb
dec
in
mov
push
fsub
xor
mov
cmpsb
aaa
xor
mov
mov
lods
movsb
cltd
and
cmpsb
scas
sbb
pushf
int3
or
in
and
into
lea
adc
adcb
repnz
or
xchg
pop
cmp
imul
sbb
xchg
mov
fdivl
and
push
dec
push
add
stos
inc
hlt
repnz
xchg
adc
dec
insl
mov
sub
outsl
xrelease
outsb
mov
pop
mov
or
mov
cwtl
cli
les
mov
cmp
stos
test
jne
mov
cld
aam
int3
push
aaa
test
lods
repz
pop
inc
mov
xor
into
add
rolb
repnz
maskmovq
imull
sub
or
mov
mov
mov
jne
add
xchg
icebp
int
std
or
xchg
cmp
pop
imul
scas
xchg
inc
or
jp
pavgw
xor
inc
aas
cmp
jmp
sub
add
scas
xchg
mov
mov
xor
cmpsb
out
pop
mov
mov
cltd
addr16
out
out
jle
std
or
lods
dec
jne
xlat
mov
pop
cmp
pop
add
and
sarl
enter
or
dec
adcb
xchg
push
mov
rcll
scas
out
leave
or
inc
repz
jp
movsl
xchg
das
push
lock
xchg
mov
cmp
mov
mov
mov
push
outsb
cmp
adcl
xlat
and
xor
mov
hlt
sub
cs
mov
or
jno
or
fwait
cmp
mov
jo
pop
pop
cmp
movsb
cmp
push
movsb
bound
and
scas
push
scas
stos
inc
ja
and
jo
ror
and
das
mov
mov
sbb
in
sub
rclb
popf
ljmp
es
add
jbe
outsb
jmp
mov
sbb
orb
mov
xor
insb
sbb
dec
inc
and
jno
es
outsl
push
clc
cli
push
xchg
decl
imul
xor
pop
jmp
fbstp
jo
cmc
sahf
faddl
xchg
inc
xor
xor
mov
std
xchg
ret
fnsave
sub
rcrl
mov
stos
insl
sbb
pop
or
not
jle
mov
lods
pusha
frstor
inc
add
push
add
mov
or
pop
or
add
cmp
in
jns
dec
mov
or
xchg
mov
shll
xchg
jl
in
dec
in
sub
int
adc
call
jle
pop
dec
dec
popa
xchg
cld
fs
imul
aas
jl
jno
adc
add
cmp
push
xor
fwait
mov
sub
inc
das
mov
xchg
xor
popa
out
dec
xchg
int3
call
jge
mov
xchg
fistps
cmc
aam
rcll
idivl
leave
cmp
dec
cmpsb
roll
jmp
and
cwtl
rorl
dec
pop
loopne
mov
ljmp
push
jnp
push
xchg
xor
js
scas
or
test
cmp
push
clc
les
dec
mov
mov
add
cmpsb
loopne
dec
jge
lock
bound
jge
repz
sahf
add
mov
cmp
js
sbb
xor
add
xor
fnstcw
add
ror
insb
fisubrs
push
and
pop
lret
mov
mov
mov
dec
push
fildl
in
int
movsl
add
repz
mov
xchg
push
test
push
dec
test
pop
and
js
or
jl
and
mov
jp
sub
mov
in
adc
adc
dec
lret
xlat
cmpsl
in
or
xchg
cmp
stc
faddl
movsb
daa
jno
and
jmp
and
or
cmp
add
cs
lea
imul
sahf
out
fidivrl
push
lcall
popf
in
jmp
xlat
sub
pop
jle
movsl
pop
rolb
ljmp
mov
out
cmpsb
pop
faddl
aaa
xorb
cmp
shl
cmp
jge
dec
jmp
sub
or
rolb
loopne
and
repz
imul
dec
mov
adc
negl
push
push
adc
stc
leave
ficomps
xor
inc
and
icebp
xchg
sarl
inc
and
xor
cmpsl
xchg
mov
push
std
add
xchg
or
lods
jecxz
ljmp
and
adc
loop
les
inc
les
pop
mov
ret
cltd
orb
insb
push
push
xor
xchg
mov
mov
mov
test
sbb
push
xchg
imul
ljmp
aad
insb
jg
aam
add
push
jae
dec
push
pop
sub
sarb
nop
inc
xor
mov
cmp
fcomps
stos
jge
or
pop
fisubl
stc
scas
push
cld
decb
jl
in
fwait
or
hlt
jbe
xchg
sbb
mov
test
iret
xchg
rcrl
mov
rorb
or
jae
and
mov
pop
jp
sahf
xchg
mov
aad
and
scas
push
mov
gs
jnp
loope
daa
ljmp
or
inc
push
mov
cwtl
add
push
and
and
jecxz
mov
lahf
and
js
jle
cmp
xchg
dec
clc
sbb
push
push
subb
jecxz
mov
xchg
std
js
mov
cmp
mov
jg
inc
push
sahf
sbb
rclb
nop
push
inc
sbb
loope
mov
inc
sbb
in
ljmp
sub
and
xchg
pushf
and
sub
insb
and
dec
sahf
jmp
sub
ljmp
imul
xorb
aad
fadds
je
stc
fisubs
stos
dec
or
xlat
testl
xor
scas
fdivrs
fdivl
push
iret
repz
fildl
out
jbe
js
xchg
xchg
add
pop
out
dec
sbb
negb
mov
xchg
into
push
jns
mov
dec
jo
inc
mov
gs
js
xchg
dec
mov
or
je
xchg
imul
imul
aas
xor
insl
push
push
mov
cmpb
je
test
ss
or
loope
aas
sbb
into
pop
push
xchg
and
test
pop
popa
dec
fstp
fs
sbb
pop
mov
jle
sbb
popf
fnsave
fisubrl
add
xchg
or
cmp
sti
xchg
iret
lods
mov
sbb
lahf
loope
cwtl
ds
pop
xchg
decb
mov
int3
add
shlb
or
jb
push
inc
lods
add
int
inc
ss
xchg
xor
les
mov
sbb
pop
addr16
ds
sub
xchg
outsb
cltd
mov
sbb
mov
sbb
test
das
inc
push
dec
sbb
push
push
scas
das
fildll
mov
mov
bound
add
popa
movsl
adc
mov
pop
adc
cmpsb
sub
mov
mov
lods
lret
aad
and
mov
xchg
xchg
dec
or
stos
cmp
sahf
push
mov
call
sub
in
cwtl
jge
cmpsl
nop
aad
xor
outsl
iret
mov
arpl
in
cld
lds
in
xlat
out
xchg
gs
cli
sub
outsl
sub
shrb
lea
pop
push
scas
cwtl
dec
inc
ret
push
jns
push
in
jle
dec
xchg
push
shll
out
dec
pop
decb
daa
dec
imul
stos
in
sbb
push
cmpsl
fincstp
add
cwtl
inc
dec
xchg
lret
xor
sbb
stos
xchg
jge
mov
mov
dec
repnz
push
push
fstp
dec
call
xor
mov
xor
es
std
scas
in
xor
xor
sub
mov
and
jbe
mov
subl
push
js
pop
sub
jl
lret
push
in
lahf
or
adc
lss
lret
adc
inc
daa
xor
inc
sti
jecxz
push
jae
inc
mov
pushf
and
daa
dec
fcomps
sbb
int
nop
rcrl
and
mov
mov
fmull
add
mov
mov
scas
repnz
mov
jle
scas
adc
xchg
pop
test
pop
cwtl
sbb
test
mov
ss
jo
mov
out
and
out
push
pop
shll
lds
aas
fcmovne
leave
loope
gs
mov
xchg
aaa
mov
outsl
xor
adcl
dec
xor
adc
mov
and
mov
fldt
fs
leave
ret
arpl
adc
add
out
pop
inc
repnz
movsl
int3
push
outsl
int3
and
mov
jne
cmp
insl
cmp
sbbb
adc
mov
cmp
sbb
stos
lds
jge
fwait
or
pop
popl
les
sti
add
xchg
scas
cmpsl
xor
clc
pop
popa
std
and
mov
sub
ljmp
add
movsl
cwtl
sub
pop
cmp
cmp
xchg
insl
mov
or
loop
jle
rorb
mov
cmp
fwait
imull
lods
mov
rclb
mov
cmp
cmpsl
std
dec
das
sub
sbb
pop
lods
mov
sub
test
mov
in
int3
sub
cltd
or
fidivrs
stc
xchg
mov
mov
out
mov
cmpsb
xchg
js
jnp
xchg
sti
xchg
aad
and
cmp
nop
adc
lock
pop
adc
je
pop
inc
cld
cmp
fstps
iretw
pop
repz
cs
repnz
sbb
repnz
pushl
dec
mov
mov
jmp
int
xchg
mov
dec
in
push
bound
aas
stos
and
test
push
inc
jmp
jmp
dec
push
test
xlat
ja
pop
out
jg
scas
xor
pop
outsl
cmp
sub
mov
lcall
fildl
pop
ljmp
int
cmp
mov
fisttpl
push
loop
fsubr
mov
stos
das
and
into
jne
fcos
iret
popa
ja
test
gs
and
iret
pop
pusha
cmp
xchg
xchg
sbb
jmp
xor
cmc
jnp
lea
mov
push
popa
sub
les
jecxz
jmp
jecxz
xchg
jbe
aad
loope
rclb
cwtl
test
jp
push
mov
out
dec
push
add
iret
invd
cmp
test
and
adc
dec
scas
xchg
dec
jmp
clc
and
fcoms
inc
aas
ret
mov
ss
enter
cmp
sub
jg
mov
movd
and
mov
and
cmpsb
sbb
or
push
inc
push
mov
cmp
mov
movsl
mov
cmp
inc
add
and
pop
pop
pop
add
ror
push
emms
cmp
add
mov
fisubrs
mov
add
call
pusha
mov
rcr
fstpt
mov
out
mov
scas
xor
push
inc
mov
and
cld
push
imul
mov
sub
push
jb
lods
nop
lahf
test
sbb
pop
cltd
repnz
les
ljmp
lods
adc
ret
add
push
pop
cltd
in
fcoms
scas
add
daa
or
jmp
mov
bound
sub
shll
xchg
xlat
mov
aad
or
js
repz
cmp
adc
mov
inc
test
dec
insl
lret
test
stos
fbld
cmp
jnp
std
aaa
jb
std
lods
scas
outsl
mov
sbb
cmp
xchg
jno
xchg
xor
jle
sub
es
push
sub
xor
cmp
filds
pop
mov
into
and
mov
mov
in
jnp
repz
mov
inc
popa
inc
lock
push
sbb
sub
clc
into
dec
pop
testb
cmpsl
out
xchg
jmp
ret
fcoml
pop
and
fcmovnb
or
jo
cmp
cltd
cmp
mov
adc
pop
add
xchg
jae
push
outsb
test
decb
gs
xchg
cmp
pop
add
cmp
sahf
push
das
jl
orb
inc
mov
sarl
loop
xchg
pop
mov
not
inc
ja
or
inc
dec
add
mov
push
mov
sbbl
inc
clc
pop
ljmp
adc
lcall
dec
aam
out
pop
push
test
push
fbstp
xchg
jl
xchg
repnz
jp
push
xchg
lcall
sarb
in
ss
jg
mov
mov
mov
mov
cmp
pop
imul
xchg
fists
and
and
inc
cwtl
jecxz
push
inc
sbb
jmp
iret
push
insl
lret
testb
pop
dec
mov
inc
mov
xor
mov
sbb
out
bound
add
dec
shlb
cmp
jmp
mov
dec
pop
je
mov
div
in
push
shr
jno
mov
inc
aam
fbstp
cld
sub
cmp
ss
out
out
sbb
int
sub
mov
shlb
sub
andb
mov
jne
push
lods
pop
jno
in
pusha
pop
jg
push
jno
sbb
inc
fcoml
jne
jge
jge
psllq
add
mov
cmp
into
int
pop
mov
dec
pusha
rorl
aam
or
xlat
mov
call
mov
xor
pop
ret
pop
in
push
pop
sub
gs
pop
adc
or
subl
adc
pop
dec
cmpsl
das
out
adc
mov
popf
sbb
push
clc
xchg
fdivr
mov
push
cld
ret
mov
lock
gs
push
jg
fsts
mov
clc
mov
fs
sbb
sub
xchg
cmp
movsb
pop
adc
je
icebp
lds
jbe
mov
xchg
mov
popf
mov
cmc
and
stos
pop
idivl
lea
cmp
pusha
xor
bound
or
mov
ja
in
loope
int3
push
data16
cwtl
mov
mov
test
cmp
pop
pop
sub
ja
bound
cmp
das
xor
jns
push
jecxz
negl
pop
add
repz
lea
ret
inc
xchg
in
ret
push
into
in
stos
mov
shr
mov
idiv
icebp
cltd
cltd
aad
xchg
outsl
pop
dec
imul
jl
dec
fsub
mov
sbb
ss
fwait
outsb
dec
inc
xchg
fstpt
pop
dec
add
inc
repnz
inc
stc
xchg
push
movsb
ss
xor
or
scas
push
into
xor
cltd
inc
pushf
push
fcmovnb
out
pop
leave
push
enter
lods
loop
xchg
pop
lods
sub
dec
or
add
push
or
jne
mov
mov
push
inc
int3
std
lods
lock
or
jmp
mov
pop
lahf
xchg
lock
repz
xor
or
jmp
jmp
repz
pop
mov
cmpsl
iret
in
dec
ja
outsl
fcomp
repz
call
test
repnz
gs
dec
dec
jg
rclb
xor
inc
shll
fisubl
in
cmc
cmp
sub
sub
pop
pop
nop
jmp
es
cmp
int
testb
out
lret
arpl
fisttpll
xor
loopne
or
sbb
xchg
xor
dec
xchg
test
adc
jnp
ljmp
inc
outsb
add
xlat
je
adc
mov
hlt
xchg
xlat
adc
sbbb
loop
pop
hlt
cli
xchg
arpl
adc
push
jecxz
mov
sub
mov
mov
cmc
jbe
clc
push
rclb
xchg
hlt
stos
xor
loope
xchg
fwait
cwtl
fldenv
xchg
in
ljmp
jb
dec
inc
adc
ljmp
pop
popa
addb
pop
pushf
cmp
lahf
jmp
dec
mov
cli
push
imulb
sub
add
fsubp
out
jns
mov
mov
jecxz
mov
push
lret
lcall
inc
xorl
les
mov
jp
sbb
loop
adc
xchg
adc
out
pop
decl
in
sub
or
mov
push
scas
and
dec
sbb
fiadds
push
cmp
mov
pop
cld
lcall
adc
insl
jns
popf
es
ret
loopne
and
inc
pop
lock
lret
jnp
inc
inc
pop
call
mov
movsb
fucomip
or
rorb
or
dec
cmp
out
push
mov
inc
sub
xor
pusha
es
xchg
dec
addb
movsl
movsl
jnp
movsl
add
xor
dec
sahf
rolb
pop
mov
mov
push
dec
lock
sub
lret
or
inc
inc
lds
imul
test
ja
xchg
xor
out
movsl
stc
negl
daa
push
getsec
int
or
outsl
test
sarl
pop
xchg
mov
add
scas
lret
gs
call
and
hlt
inc
clc
push
addr16
clc
movb
dec
loop
fwait
mov
ss
es
ja
pop
std
sub
push
mov
jecxz
push
jnp
adc
sti
stc
sbb
mov
cmp
pusha
cmp
das
jge
lock
rcrl
das
sti
dec
es
mov
jp
jo
xor
cmpsb
cmc
mov
sti
add
add
dec
ljmp
and
mov
nop
mov
sub
pop
movsl
push
mov
jl
test
outsl
jmp
pop
mov
cltd
mov
fwait
xchg
insl
mov
pop
roll
mov
les
ficomps
lods
dec
aad
scas
imull
sahf
push
gs
fwait
movsl
sbb
push
std
jl
sbb
ds
sbb
mov
iret
xchg
adc
fcompl
dec
sbb
js
push
js
xor
loopne
cli
sbb
adc
lea
xchg
aas
sbb
or
sbb
pop
cmp
cmpsl
jbe
ss
sub
ds
je
inc
mov
push
sub
jecxz
lahf
push
fnsave
jmp
xor
pop
push
leave
xchg
cmp
mov
push
in
dec
cmpsb
add
in
jns
xor
xchg
loop
jnp
lock
ja
or
add
jno
mov
stc
xlat
add
cltd
or
leave
fbstp
lahf
loop
and
pusha
out
and
js
popa
sub
mov
call
pop
push
push
jg
lea
es
xchg
std
add
ret
mov
je
in
cmpsl
adc
lcall
or
test
sub
and
sbb
aas
and
jno
test
xor
sahf
pop
icebp
leave
add
es
mov
call
push
jb
aad
inc
mov
loopne
or
out
cltd
push
jmp
pop
push
jno
xor
andl
and
inc
cs
popf
jmp
inc
mov
xor
lods
lea
cmpl
in
cmp
or
adc
cs
bnd
adc
cmp
mov
arpl
clc
and
xor
aad
jo
xlat
mov
mov
inc
cwtl
into
xchg
inc
pmovmskb
pop
aas
push
sti
dec
in
xor
dec
jb
icebp
in
out
and
lahf
push
pop
int
sbb
or
pop
mov
cmpb
nop
fcmove
sarl
mov
fimuls
mov
ss
fistpll
pushf
adc
mov
jmp
mov
out
push
in
mov
xor
addr16
sub
outsl
shrl
jecxz
xlat
bound
sbb
arpl
loop
popa
lahf
sbb
mov
popa
jno
outsb
push
sub
jecxz
push
mov
jp
les
repnz
jbe
cmp
cmp
cmp
das
pop
xchg
dec
movsl
out
dec
inc
enter
scas
mov
push
pop
and
dec
std
shll
out
inc
cwtl
rcll
jge
loopne
hlt
adc
into
push
out
mov
inc
enter
push
gs
sbb
push
data16
pushf
shll
push
repz
roll
adc
jne
cmp
adc
push
cltd
adc
je
add
adc
xor
fnsave
insl
and
mov
or
adc
mull
cmp
movsl
add
dec
sbb
sbb
cli
jle
out
mov
daa
mov
push
fwait
cmp
and
xchg
sbb
cmp
sub
daa
mov
daa
xchg
test
push
imul
mov
shlb
or
mov
leave
mov
mov
rorl
fistpll
ds
push
stc
jle
xchg
jge
cmpsl
js
xor
icebp
sbb
mov
scas
sbb
aad
or
jg
mov
mov
ljmp
pushf
and
fcompl
xchg
cmpsb
or
jbe
bound
sbb
xchg
or
cmp
inc
jae
insl
inc
inc
cmp
mov
pop
not
lods
call
aam
add
and
ljmp
jno
dec
add
cli
jo
loopne
lods
jle
xchg
ret
popl
loopne
inc
push
add
add
or
cmp
mov
mov
rolb
and
xor
dec
pop
xchg
int3
cwtl
je
xorl
test
popa
negl
mov
cmpb
push
out
addb
dec
sar
mov
sbb
pop
test
xchg
stc
and
pop
cmp
iret
adc
dec
stos
pusha
outsb
in
popf
push
cld
sbb
imul
std
and
call
ja
out
xchg
add
orl
sbb
inc
lods
in
lea
dec
xor
xchg
sbb
mov
shll
iret
cmpsl
mov
mov
fwait
imul
push
pop
mov
and
mov
cld
mov
int
movsb
jmp
imul
jmp
jle
jle
pop
mov
rorb
and
stc
nop
lret
out
or
jg
mov
cmp
call
pop
lods
cmp
pop
cmpsb
jbe
mov
adc
rep
cmp
pop
pop
sbbb
ja
inc
add
insl
mov
lock
add
fsubrs
xor
fisttpl
jg
mov
aad
adc
jecxz
jb
int3
jb
bound
xor
sub
pop
dec
test
xchg
jno
std
loope
dec
xchg
enter
mov
xchg
movsl
dec
dec
sbb
and
xor
jge
jne
and
ljmp
add
cli
sbb
stos
cmc
push
nop
insl
sti
fcoms
scas
jmp
aam
inc
outsb
or
add
inc
jnp
leave
sbb
bound
popf
inc
inc
jp
mov
or
push
lock
adc
mov
out
mov
adcb
cmp
inc
mov
das
clc
add
inc
jg
pmuludq
sbb
mov
aad
and
in
les
fmull
pop
lock
sbb
mov
pop
jbe
cmpsb
enter
jge
repz
jp
jo
call
push
inc
cmpsl
mov
mov
jne
xorl
inc
mov
dec
in
xchg
jp
pop
dec
out
mov
inc
sub
popf
ret
xor
pop
push
repz
add
sub
add
xchg
out
xor
push
xorb
push
lret
fs
jle
or
dec
popa
sub
xchg
rorl
mov
mov
pop
sbb
sbb
insb
pop
aas
add
nop
sub
sbb
mov
mov
pop
lret
mov
cmp
ja
cmp
ret
xchg
cmp
ljmp
test
fcoml
mov
adc
das
lock
jmp
sub
mov
push
enter
mov
sub
inc
in
cmp
xchg
repnz
xchg
std
mov
push
cs
std
andl
mov
push
jbe
mov
test
cmp
mov
mov
test
dec
lahf
jo
mov
xchg
aaa
les
mov
mov
pop
cmpsl
adc
sbb
cmp
idivb
bound
mov
mov
push
adc
xor
popl
mov
imul
sub
sub
adcl
jno
ror
les
sub
int3
scas
loopne
pop
push
fildl
int
sub
adc
xor
xor
in
rcrl
jge
jp
pop
and
adc
xchg
cwtl
pop
or
add
aaa
fldcw
movsb
xchg
or
jmp
ficomps
or
or
cmpsb
lock
lret
rorl
nop
push
dec
arpl
out
incl
adc
xchg
mov
or
test
cld
inc
rol
inc
lock
iret
mov
dec
sbb
mov
lcall
or
insl
pop
adc
push
sub
loopne
scas
jns
mov
out
scas
inc
add
xchg
adc
imul
in
stos
scas
and
jnp
addl
push
jecxz
stos
push
pop
cmp
mov
pop
and
pushf
shl
test
xlat
ds
sub
lods
mov
int
cmp
sbb
in
xchg
push
ret
sbb
cmp
mov
jl
sbb
test
es
ljmp
imul
xchg
out
mov
sarl
adc
mov
sbb
sub
aam
jecxz
imul
cmp
xchg
adc
das
movsl
aaa
ficoml
sub
push
inc
decl
rolb
dec
cmpb
hlt
gs
or
mov
inc
mov
sbb
dec
data16
and
jmp
or
or
lcall
mov
daa
std
mov
addr16
jmp
pop
ljmp
in
lret
add
mov
test
inc
sbb
mov
out
test
cld
push
aam
out
sub
mov
mov
rol
mov
lahf
jmp
ds
jecxz
lds
sbb
int3
cmp
xchg
out
imul
jle
push
dec
jbe
mov
sub
stc
jecxz
fsubl
mov
lcall
jo
xchg
push
orb
sbb
mov
fwait
push
push
pop
int
mov
inc
inc
jp
fisttpl
add
loopne
icebp
inc
inc
out
cltd
lea
sub
subl
mov
mov
add
mov
xchg
fdivrl
push
test
or
scas
jo
push
jno
pop
mov
dec
and
inc
and
pop
ja
icebp
andb
mov
imul
fists
loopne
and
xor
mov
cmp
filds
in
lahf
mov
cmpsl
push
xchg
push
cmp
jnp
sbb
or
sub
push
pop
int3
sahf
pop
cltd
inc
fsubrl
mov
aaa
insl
iret
fwait
jnp
aam
jne
inc
call
popa
mov
dec
test
push
sti
dec
push
lods
int3
icebp
out
xchg
mov
jns
pop
in
xor
imul
jp
mov
jnp
mov
mov
xchg
mov
mov
daa
cmp
or
insl
xor
xchg
repz
fs
pop
pop
sub
cmc
push
inc
push
ljmp
cmp
or
out
jae
popf
sub
outsb
sub
mov
aaa
test
sub
dec
shrl
adc
sub
and
xlat
nop
mov
out
aad
jecxz
mov
and
push
dec
xchg
mov
mov
ss
and
outsl
sbb
sub
fisubs
sub
or
insb
fstpl
repz
negb
xorl
pop
cmp
inc
dec
loopne
insl
loop
movsb
fcmovne
pop
pop
push
into
cmp
outsb
dec
jo
movsb
cs
andb
jbe
push
inc
sub
aas
fwait
push
jnp
addr16
loop
sbb
sbb
stc
jl
xchg
add
cmpsl
imul
outsb
imul
cmp
jns
aas
pop
enter
pop
stc
sub
xor
test
fdivl
push
sbb
aad
mov
xor
dec
mov
scas
dec
mov
fstpt
lret
cmp
push
popa
arpl
jo
jl
add
scas
mov
xchg
cs
cmpsl
fisttps
cmp
loop
add
data16
or
adc
add
push
adc
jp
adc
pop
out
daa
add
les
es
lret
sub
lcall
int
or
lds
cmp
in
hlt
push
in
cwtl
imul
out
xchg
mov
inc
fdivs
and
mov
cmp
lock
imul
inc
call
divb
outsb
mov
in
or
add
leave
pop
sub
fldt
scas
clc
inc
lea
sbb
cmc
filds
pop
int
adc
test
jl
pop
adc
mov
cmpb
and
popa
mov
sbb
jl
jae
mov
mov
push
ljmp
pop
leave
cld
push
jecxz
gs
push
rcrb
push
cmp
fcmovnb
filds
pop
add
roll
sbb
mov
cs
xchg
xchg
jle
mov
fidivrl
mov
inc
dec
sahf
aaa
xor
dec
aam
jl
outsl
sbb
ds
in
pop
ljmp
sbb
bound
sub
cmpsb
pop
xchg
sbb
pop
aaa
jle
roll
inc
imul
jp
repnz
into
push
fbld
mov
cmpl
jnp
and
inc
dec
cmp
sub
dec
xor
daa
add
pushf
sub
ret
lds
sbb
xchg
sbb
pop
aad
stos
push
cmp
mov
cmp
mov
jnp
enter
insb
addl
pusha
repz
jne
mov
repz
flds
shl
leave
jle
mov
test
mov
shrb
pmovmskb
xlat
xor
jmp
sub
or
or
stos
xchg
rorl
push
pop
in
ds
lret
popa
jnp
lahf
mov
inc
rcrb
enter
mov
mov
cmpsb
daa
xor
fildl
lock
dec
int3
sbb
test
pop
mov
jmp
idivl
ja
cld
jno
and
push
cmp
in
or
xchg
int3
fsts
xchg
xchg
lea
jp
sub
push
pop
jns
cmp
es
and
and
sub
sahf
jno
inc
and
loope
sub
movsl
mov
fcomip
aad
shl
pop
leave
sub
adc
cmpsl
sbb
xorl
fadds
aas
jae
sbb
pushf
mov
add
pop
and
push
add
cmc
ljmp
cwtl
in
fstps
lret
mov
mov
sub
lcall
fldt
cltd
std
dec
pop
int
cmpl
add
mov
mov
mov
mov
and
jne
into
std
incb
dec
aad
pop
mov
int
vmwrite
mov
imul
cli
or
insb
cmp
sub
cmc
je
xchg
or
pop
jo
adc
mov
push
lea
int
cmp
lcall
lahf
pop
pop
fidivl
test
cmpsl
inc
loopne
insl
leave
js
inc
popa
jae
cmp
testb
rcrb
fmulp
das
out
jecxz
shll
dec
outsb
ja
int
xor
dec
arpl
push
pop
cmp
xchg
xor
adc
jbe
adc
inc
mov
lods
dec
push
add
iret
cmp
sub
or
push
scas
movsl
addl
repz
gs
jl
lods
insl
test
jg
lea
xor
xlat
in
jg
dec
mov
mov
rcr
lock
sbb
or
adc
gs
push
mov
xchg
add
sti
adc
cwtl
mov
imul
mov
xchg
lcall
dec
dec
sbb
xchg
pop
sbb
inc
cmp
out
ret
add
dec
mov
add
lods
and
jne
push
out
insl
hlt
rcr
insl
leave
ljmp
iret
jbe
cmpsl
stos
aam
bound
mov
inc
movsl
cmp
shr
add
add
sbb
fisubl
lahf
mov
inc
movsb
cmp
adc
orb
mov
mov
push
pop
or
dec
or
or
pop
sarl
mov
xlat
push
stos
loopne
jle
addl
xchg
ret
cmp
xchg
sti
les
or
fidivrs
cmp
iret
sub
add
mov
orl
ljmp
lock
inc
and
in
xor
les
iret
inc
pop
dec
mov
mov
jo
jle
ljmp
lret
js
stos
adc
jbe
inc
pop
test
js
test
mov
mov
call
adc
movsb
xchg
les
pusha
and
scas
mov
das
sub
fisubl
or
enter
cwtl
cmp
fs
mov
data16
or
xchg
pop
addr16
fldcw
sar
jne
out
mov
mov
or
cmp
jb
mov
jmp
cmp
fs
imul
cmp
jbe
outsb
movsl
mov
and
pop
arpl
and
mov
cli
push
xchg
adc
xchg
sub
inc
inc
xor
out
testl
mov
mov
or
aam
mov
or
push
push
xor
adc
nop
jge
leave
in
ds
cmp
and
push
cs
scas
mov
and
pop
dec
push
roll
popa
or
aas
adc
jne
sub
pop
adc
fldcw
js
inc
cmp
adc
lret
pop
and
xor
xlat
les
and
in
faddl
jl
add
add
cmp
pop
or
cmpsl
popf
sub
loopne
insl
jmp
pextrw
and
int
sbb
fcoml
xchg
repnz
jmp
mov
pop
nop
add
outsl
mov
insl
jecxz
jle
ficoms
in
adc
in
mov
mov
bound
fst
jns
mov
inc
mov
pop
ja
adc
add
mov
cmp
mov
mov
or
pop
cmp
mov
and
pop
and
adc
ret
mov
cmp
bound
stc
add
pop
ds
push
loop
or
mov
xor
mov
mov
test
popa
or
sbb
cmp
pop
divb
fstpt
sar
push
fsubrs
xor
push
pop
scas
mov
sub
jne
push
int
lods
inc
jnp
pop
cmpl
scas
loop
scas
iret
outsl
pause
xchg
orb
daa
sub
adc
and
out
dec
jle
aas
pop
push
ja
mov
sub
sub
push
movsb
lock
jmp
outsb
or
icebp
test
ret
jle
and
js
push
mov
xlat
and
dec
filds
xor
addb
inc
cmpsb
out
dec
mov
mov
pop
mov
insb
jle
mov
aas
pop
dec
mov
dec
mov
and
mov
adc
aas
je
addr16
pop
mov
fstpt
pushf
sbb
jns
push
xchg
mov
mov
and
xchg
cmp
cmp
push
cmpsb
lds
sub
jg
repz
xchg
fwait
arpl
jmp
push
ret
ss
jg
sub
sbb
outsl
ds
sahf
test
rcr
jae
cmp
xor
add
pop
fsub
and
rcrl
sarl
imul
mov
int
shl
sbb
int
and
icebp
enter
cld
sti
lock
mulb
nop
ja
bnd
test
lods
cwtl
clc
je
scas
aam
push
stos
test
cli
aas
add
test
cmp
add
xchg
imul
mov
imul
lea
aaa
rcrb
mov
dec
fnstsw
cmpsl
add
scas
add
lahf
mov
movb
mov
cmp
inc
dec
jecxz
sahf
xor
dec
fnstenv
dec
dec
lcall
aad
pop
stos
std
jno
mov
jmp
cld
pop
mov
sarb
xor
mov
xchg
loop
cmc
adc
adc
xor
nop
mov
cltd
jle
jae
push
sbb
lds
xor
dec
fsubl
fstpt
mov
jnp
ds
add
push
cmovg
xchg
movsl
out
inc
cmp
mov
pop
jge
pop
lahf
mov
jmp
outsb
ss
mov
xor
inc
pop
insb
decb
inc
cmp
mov
sub
pop
and
mov
and
roll
mov
mov
scas
popa
pop
shlb
mull
sub
add
faddl
mov
dec
and
into
scas
mov
or
pusha
sti
fucompp
aaa
cmpsb
and
lahf
xor
stos
rclb
pop
pop
adc
sbb
cmp
push
sbbl
mov
insb
js
inc
gs
jp
in
cmp
dec
out
test
test
jle
aam
sbb
mov
divb
and
out
and
out
dec
aam
mov
xchg
xchg
cmp
fimull
subl
adc
sbb
stc
dec
jl
das
push
call
pop
leave
xchg
mov
adc
add
ficompl
aad
outsb
outsl
mov
test
lret
lret
aad
xor
xchg
mov
pusha
mov
add
daa
mov
es
jecxz
jbe
jle
jecxz
mov
rep
lahf
jo
mov
rcrb
cmp
js
mov
out
lods
jae
push
fwait
xor
push
testb
dec
js
repnz
nop
fistl
femms
mov
test
dec
stos
mov
and
stos
mov
fdivrs
pop
inc
bound
add
jl
mov
add
and
add
idiv
xor
pop
adc
xor
ss
cltd
sbbb
xor
jae
inc
dec
clc
push
call
mov
xor
fcomi
into
jge
mov
leave
fistps
int
fistpl
out
imul
cwtl
fdiv
mov
mov
es
jle
dec
nop
cmp
les
pop
jmp
mov
cmc
xor
loopne
rol
lods
adc
in
lds
push
movsl
push
mov
mov
inc
xchg
mov
pop
outsl
sti
xor
sub
cltd
sbb
xor
loop
shlb
cmp
mov
and
rolb
loopne
jo
imul
cmc
push
mov
arpl
bound
leave
inc
mov
dec
adc
pop
push
or
pop
and
loope
lahf
xchg
push
add
fnstsw
test
mov
jmp
cmp
das
das
dec
jg
aas
insb
mov
fwait
push
testl
mov
mov
and
je
fcomps
test
fadds
pop
jnp
sbb
pop
and
divb
mov
mov
xchg
inc
insb
out
pop
or
or
test
dec
testb
jnp
daa
test
mov
xor
ffreep
leave
lcall
mov
lds
dec
xchg
popf
mov
xor
inc
es
push
inc
repz
add
fsubl
fimuls
ds
loope
aam
xchg
cmp
or
das
pop
mov
sbb
fisubs
mov
movsb
dec
cwtl
sbb
call
mov
in
adc
sub
mov
popa
aaa
inc
inc
cmp
dec
sub
bsr
fs
mov
mov
iret
bound
mov
or
xor
push
or
sahf
mov
mov
sub
mov
sub
dec
push
push
enter
and
lret
jne
pop
pusha
xchg
std
sub
pusha
adc
std
adc
pop
inc
test
sbb
mov
or
mov
mov
push
mov
push
jb
test
inc
or
leave
gs
sbb
loope
push
mov
insl
int3
imul
test
pushf
icebp
out
shlb
xchg
jae
xor
repnz
jo
mov
cmpsb
rcll
sub
aaa
jne
stc
mov
dec
or
xor
nop
popa
outsl
cld
lods
ret
bound
fsubrl
popa
sub
sbb
icebp
in
loope
lcall
mov
iret
mov
inc
test
and
lcall
imul
aaa
loopne
aam
jmp
int3
add
jo
clc
inc
xlat
movsb
push
push
stos
and
sbb
shlb
in
je
jecxz
xor
push
into
lock
push
mov
dec
out
cmp
inc
icebp
mov
lock
cmpsb
xchg
addr16
pop
cmp
adc
dec
in
jle
scas
mov
jb
aas
pop
movsb
xchg
dec
subl
mov
repnz
push
push
aas
andb
cli
test
mov
sbb
jecxz
xor
adc
xor
insl
mov
test
xsaves
je
repz
clc
das
mov
lcall
xchg
sahf
stos
rol
fxch
inc
ftst
jnp
hlt
jae
cmp
clc
or
loope
inc
sub
js
inc
lahf
push
adc
and
ret
fiaddl
cmpsl
test
es
mov
out
fidivrl
rolb
cltd
lock
orl
lock
mov
xor
cmp
ljmp
in
std
push
pop
mov
xlat
cli
sub
insb
flds
sbb
jb
ror
mov
push
jmp
inc
enter
lods
pop
sti
mov
and
and
sbb
in
call
inc
jne
push
dec
int
dec
adcb
out
xchg
mov
add
lcall
pop
sbb
xor
ss
lret
inc
aam
jge
nop
push
xor
in
sbb
mov
inc
shrb
jns
out
mov
roll
adc
lcall
sbb
lret
notl
or
int
in
fstpt
shrb
dec
stc
mov
lret
ja
subb
rcll
test
cmp
push
into
sar
mov
out
incb
arpl
mov
xor
ret
pop
mov
push
outsl
jb
arpl
mov
repnz
xor
add
mov
and
inc
mov
imul
divb
sub
fistps
adc
or
dec
es
pop
cltd
lock
mov
jg
and
push
mov
jp
adc
dec
stos
insl
mov
push
imul
inc
pop
dec
rorb
push
or
popa
fs
jne
dec
jp
std
aam
jnp
fnsave
inc
jno
ds
mov
std
add
imul
rcrb
js
shrl
data16
xor
dec
mov
pop
inc
jb
fildll
add
insb
andb
and
adc
cwtl
ret
xor
push
inc
or
das
sub
out
push
sbb
incb
push
and
int
testb
or
add
adc
outsl
add
js
roll
fsts
xchg
xchg
mov
xchg
cmp
js
mov
fbld
mov
pop
sub
mov
hlt
mov
or
dec
add
xchg
addl
mov
jecxz
dec
fstpl
xchg
mov
xorb
movl
ret
insl
or
mov
pop
sbb
jnp
jmp
push
adc
int3
sbb
add
sbb
adc
xor
icebp
pop
test
xor
add
adc
cmc
repnz
push
ljmp
mov
pop
je
lcall
adc
test
mov
sarl
outsl
mov
mov
xchg
lea
mov
mov
scas
adc
pop
clc
jg
mov
add
dec
push
lods
xor
push
lock
and
or
incb
xchg
stos
xor
adc
cmc
bt
test
ss
iret
and
jns
mov
push
adc
push
rcl
pop
mov
repnz
inc
jp
lahf
xchg
push
mov
popa
mov
mov
movsl
scas
fcompl
inc
idiv
test
xchg
jecxz
sti
lret
mov
stos
add
jmp
inc
outsl
stc
icebp
xor
in
outsl
outsl
mov
mov
adcb
sub
out
iret
movsb
sahf
outsb
add
outsl
xor
mov
push
adc
jbe
and
movsb
sbb
addr16
icebp
iret
add
lcall
inc
imull
mov
adc
mov
mov
popa
inc
pop
adc
push
xor
push
sub
ud0
and
inc
aam
mov
mov
arpl
cltd
adc
es
sbb
sbb
xchg
pop
sub
sub
test
mov
jne
mov
push
fwait
adc
or
pop
mov
sub
shrb
cmpsb
addr16
mov
test
xor
pop
mov
je
addr16
pop
lret
dec
stc
nop
int3
push
cmp
fcomi
notb
movsb
pop
rolb
and
call
and
sbbl
xchg
test
in
push
int3
adc
push
fmuls
dec
cmp
test
clc
adc
outsb
push
pop
jp
jae
xlat
clc
call
jp
dec
rcl
data16
nop
int
scas
pop
lcall
lock
mov
clc
mov
jnp
adc
cmp
cmp
mov
lods
sbb
add
fnstcw
mov
andl
mov
xchg
scas
ficomps
mov
pop
cmp
pop
test
mov
inc
mov
dec
jns
sub
setge
data16
lret
mov
inc
jo
mov
add
rclb
mov
cwtl
into
push
lods
stc
sbb
nop
xor
push
xchg
rol
jb
xchg
mov
stos
loopne
clc
mov
push
xor
cmp
dec
mov
mov
scas
mov
pusha
xor
sbb
loopne
clc
mov
pop
aaa
or
mov
mov
dec
rcl
cmp
and
inc
mov
lods
lods
shr
in
pusha
push
push
insb
xlat
adc
movsb
push
xchg
xchg
subb
fisttps
dec
inc
nop
sub
and
js
pushf
mov
xlat
mov
lcall
and
mov
mov
mov
lcall
sbb
sbb
aam
sahf
mov
jmp
orl
shll
sub
mov
sub
pop
insb
pushf
out
xchg
inc
repz
add
add
shrl
fnsave
pop
test
sbb
xchg
inc
pop
xor
scas
add
sbb
pop
jno
or
dec
sbb
stos
inc
pop
mov
frstor
jp
sbb
xchg
push
out
into
xchg
scas
pop
dec
inc
lahf
dec
fistpl
cli
add
rol
jo
xchg
lock
cmpsb
sub
and
mov
lock
mov
mov
ja
mov
mov
xlat
or
cli
mov
mov
mov
mov
enter
sbbl
push
ss
fbld
clc
or
shrb
in
mov
mov
jns
daa
cmc
out
cmp
das
sbb
push
jl
ret
adc
repz
data16
movsb
xchg
andl
icebp
pop
push
sahf
aad
dec
jge
xchg
mov
lret
fldenv
ljmp
call
call
hlt
cmp
into
push
std
mov
filds
ret
aas
pop
inc
fildl
icebp
inc
push
rcrb
xchg
cwtl
mov
mov
pop
mov
dec
les
lahf
mov
mov
xchg
mov
jg
xchg
lahf
les
adcb
pop
mov
vmovntps
adc
enter
int3
fildll
inc
fs
out
xor
movsl
mov
rol
dec
xor
push
push
adc
push
jg
inc
and
ret
mov
std
mov
adc
add
sti
push
mov
push
aam
or
and
dec
shlb
dec
lcall
call
lretw
clc
xor
jmp
xchg
scas
cmp
imul
cld
iret
mov
dec
mov
daa
adc
sbb
nop
pop
adc
cld
adc
adc
cmp
cmp
dec
data16
jmp
arpl
add
fwait
outsl
ds
pop
dec
enter
stos
outsl
je
jnp
decl
sbb
int3
clc
shl
stos
adc
clc
std
cmpsl
fcomps
or
jo
jle
push
xor
ja
lock
sbb
in
inc
add
aad
push
out
dec
fwait
jecxz
stos
jo
mov
xor
lea
repnz
cld
or
jg
sub
ss
sbb
mov
xorl
push
daa
std
lds
lods
pop
push
shlb
dec
pop
insl
pop
cmp
lret
pusha
stc
mov
inc
cmp
lds
fnstsw
mov
shll
hlt
cld
push
sub
andb
rorb
lcall
mov
nop
cld
rcr
jnp
aas
lret
test
frstor
jl
hlt
push
loopne
push
loop
mov
and
dec
mov
pop
stc
jbe
xor
imul
push
sub
add
sbb
adc
add
lret
mov
mov
mov
es
sbb
or
mov
clc
shll
shll
inc
fs
pop
pop
jns
dec
sbb
pop
pop
add
pop
xchg
sbb
pop
cmpb
xor
inc
xchg
cmc
adc
cld
cs
xchg
mov
orl
in
cmp
or
lahf
scas
aad
popf
or
cmp
xchg
sahf
xorb
add
lea
pusha
in
pushf
adc
lahf
pop
loopne
xchg
loope
and
shll
cmp
push
repnz
adc
pop
dec
data16
sub
mov
int3
test
lret
rcrb
ja
xrelease
cltd
and
pop
loopne
insl
pop
in
fildll
add
dec
mov
mov
scas
xlat
cs
popa
lea
stos
icebp
stos
fisttpll
mov
call
sbb
jns
data16
xchg
cli
and
fwait
fwait
mov
jl
sbb
aam
adc
push
jae
andl
lret
testl
aas
add
loop
jle
in
xchg
ret
mov
das
loope
sub
jl
pop
pop
bound
dec
sbb
inc
push
pop
or
inc
and
lahf
pop
leave
jae
aaa
aas
inc
push
inc
push
cltd
inc
pop
frstor
movd
lea
pop
in
bound
jp
mov
mov
loope
adc
mov
pop
xor
into
ret
aad
lods
in
xchg
outsl
fadds
cmpsb
pop
inc
scas
mov
inc
xchg
push
mov
mov
jmp
or
mov
pop
adc
sub
enter
adc
mov
frstor
lret
adc
es
dec
in
in
jbe
cmp
add
cmpsl
dec
sbb
scas
in
pop
xor
fcmovb
mov
and
push
lcall
dec
fildl
push
sub
push
nop
sbb
or
cmpsl
ds
scas
inc
movsl
lock
sub
loope
imull
dec
push
add
lcall
and
fadds
movsl
push
sub
sbb
lcall
xchg
cltd
pushf
jno
adc
sub
or
push
lcall
mov
sub
cwtl
bound
push
stos
aaa
cs
jecxz
push
add
out
jo
insb
js
fstps
xor
pop
mov
mov
in
dec
and
adc
cmp
pop
push
jb
je
sbb
lds
lcall
pusha
call
jp
adc
inc
icebp
popf
pushf
sarl
scas
movsb
ret
mov
xor
fwait
iret
mov
outsl
xorl
in
sub
push
jl
loop
xor
loopne
or
icebp
dec
bound
call
mov
shrd
lods
pop
jge
mov
cmpsb
popa
pop
das
mov
lock
pop
outsb
stos
pop
xchg
jnp
inc
insb
mov
in
das
sub
popf
xchg
mov
call
or
push
insl
xchg
push
mov
push
cwtl
mov
fbld
pop
jnp
or
test
rcrb
std
mov
sbb
ds
sbb
mov
lcall
sub
sahf
inc
jns
loop
sbb
sub
mov
aam
adc
pop
xchg
out
add
sbb
inc
mov
pop
ret
negb
push
adc
mov
mov
inc
aas
sub
in
insb
loopne
test
cmpsl
lcall
xor
cltd
cmp
xchg
cltd
mov
push
stc
push
adc
sti
pop
ss
mov
push
pop
dec
push
lods
push
cmp
mov
out
pop
dec
add
mov
xchg
sbb
dec
aam
push
cmpsl
mov
dec
jmp
les
xchg
es
lock
std
dec
mov
mov
mov
adc
repz
cmpl
jmp
into
cmp
shlb
scas
dec
int3
fcom
add
call
insb
rorl
ret
mov
ffreep
sbb
ficomps
fimuls
or
add
sub
inc
leave
push
in
lret
xchg
pop
xor
dec
sbb
pop
xchg
movsb
sbb
ss
int
xor
sub
orb
cmp
push
ss
mov
nop
lret
sbb
xor
and
sbb
loop
jb
fs
ss
cmp
xchg
push
testb
or
mov
pop
iret
sbb
adcl
dec
push
inc
pop
inc
xor
rcl
or
dec
sahf
adc
int3
aas
cmp
cmpsl
jle
je
cmc
stos
jge
jo
sbb
jl
mov
mov
rcl
cmc
movsb
add
xchg
push
xchg
in
sbb
push
push
jae
adc
mov
mov
mov
xchg
adc
iret
mull
adc
aad
lret
mov
aad
repz
lcall
mov
jns
into
movsb
fst
repnz
cli
ss
dec
int3
or
movsb
mov
adc
or
cmc
push
lcall
dec
and
jnp
imul
ljmp
adc
call
add
aaa
enter
push
pop
cwtl
mov
scas
movsl
mov
loop
sbb
or
push
loop
sarl
mov
pop
imul
adc
sahf
mov
cmc
or
sub
out
mov
repz
jnp
xchg
dec
fnstsw
leave
adc
xor
sbb
negl
sbb
cmp
jle
test
out
adc
fwait
fwait
xor
popa
add
cmp
sti
mov
and
add
jl
loopne
fcomi
mov
mov
insl
dec
add
out
out
stos
sti
mov
sarb
sar
addr16
arpl
adcb
daa
pop
loope
push
lret
pusha
ja
inc
xchg
inc
loop
insb
mov
or
scas
cmp
sbb
pop
enter
push
mov
adc
repz
mov
adc
cmpsb
lods
popl
xor
cmovg
mov
xor
cli
fs
shl
mov
test
popa
push
faddp
call
mov
adc
dec
mov
mov
dec
mov
jne
mov
xlat
dec
icebp
loop
jns
sub
xchg
adc
cmp
inc
push
mov
aaa
adc
adc
mov
iret
vpavgw
test
mov
test
outsb
or
adc
cli
push
repz
dec
inc
mov
gs
cmp
xchg
lahf
inc
push
mov
xchg
cwtl
rcl
sbb
movsl
xchg
mov
sub
addr16
mov
ss
push
mov
adc
aam
dec
lahf
fldenv
sub
out
sti
dec
pushf
xor
clc
xor
notb
cltd
cmpsl
jl
jle
mov
sar
dec
cli
test
xchg
decb
stos
mov
dec
push
dec
jge
or
mov
add
icebp
sbb
inc
and
mov
and
rclb
sub
insb
sbb
xchg
stos
push
jge
inc
mov
cld
jge
cmp
mov
insl
iret
push
push
pop
insb
lret
cmp
mov
out
jae
or
fldcw
shl
cld
fistpl
cmp
arpl
inc
rorb
ja
dec
mov
mov
mov
xchg
mov
sbb
repnz
cwtl
jbe
mov
pop
xchg
push
mov
idivl
inc
cmpsb
pop
cmp
ja
outsl
push
xor
inc
inc
ja
arpl
je
cmp
movsl
add
add
cmp
or
mov
dec
jo
lcall
mov
sbb
xor
popl
into
push
mov
jae
inc
mov
dec
or
inc
and
mov
dec
cwtl
mov
cmpsl
out
mov
inc
fwait
out
lods
fsts
xchg
dec
cmp
cwtl
or
fisubl
dec
lock
xor
jge
jl
inc
jnp
out
sti
movsb
mov
add
mov
lock
mov
out
mov
stos
pop
sub
lea
xchg
in
imul
inc
sbb
xchg
outsl
int3
sbb
push
xor
in
jbe
mov
incl
int3
sbb
int3
or
dec
add
loopne
or
pushf
sahf
cmp
and
mov
mov
mov
test
xchg
pop
dec
push
mov
jne
cwtl
pop
insl
test
mov
movsl
loope
adc
aas
ja
icebp
xchg
mov
addr16
cmp
imul
in
mov
mov
cmc
rclb
lret
leave
scas
test
push
xchg
lea
cmp
push
cmp
pushf
jp
adc
cwtl
pop
jns
ret
add
sarb
and
rorl
nop
pop
pushf
dec
cltd
add
adc
pusha
and
mov
sub
mov
dec
fisttpll
push
out
inc
not
sbb
test
sti
ja
ds
mov
test
sub
jecxz
mov
cmp
inc
out
xor
sbb
repnz
mov
ljmp
pop
sarb
inc
sti
add
mov
adc
add
idivb
jne
enter
fcmovne
xchg
jnp
or
xchg
sub
cmp
bound
into
pop
lds
stos
jbe
mov
inc
outsb
int3
fs
fcmovb
das
popf
in
ret
sub
dec
insb
add
jmp
push
mov
out
call
int3
and
and
dec
fbstp
sub
cmpsb
popa
push
or
lret
daa
stc
loopne
mov
in
push
out
pop
stc
push
xchg
push
cmp
cltd
decl
dec
cmp
xchg
es
xchg
bound
xchg
and
call
mov
adc
mov
iret
dec
notb
dec
pusha
xchg
mov
mov
pushf
leave
or
fdivs
ret
sbb
adc
adc
imul
lods
in
push
push
das
fiaddl
andl
cmc
mov
xchg
pop
div
jae
out
fdivrs
das
clc
roll
imul
xchg
push
add
rolb
and
mov
push
imul
gs
cmp
or
dec
inc
in
xor
fcompl
mov
leave
and
hlt
push
lret
cmp
pop
jno
les
xchg
inc
imul
loop
rcrl
inc
mov
loope
push
cmp
xor
mov
mov
stos
aas
jge
xchg
xlat
mov
icebp
test
mov
push
mov
je
mov
cmc
loopne
cltd
mov
loope
jg
loop
ds
cmp
add
sub
inc
lret
xchg
jo
lcall
imul
push
dec
push
pushf
nop
push
lock
lahf
inc
add
cmp
in
sarb
jnp
push
dec
es
sub
jmp
pop
add
mov
fcoms
dec
pop
sbb
or
mov
int
sar
xchg
pop
inc
in
mov
mull
pop
int3
lds
and
xchg
mov
test
lcallw
adcl
repz
data16
inc
scas
xor
jo
outsl
mov
jo
andl
mov
inc
testl
jnp
nop
or
repnz
mov
cmp
out
add
int
enter
lods
cmp
insl
mov
inc
lods
push
sbb
out
cmp
cmp
fucom
pop
sbb
in
jle
in
and
mov
and
pop
es
rolb
mov
fiadds
xchg
fnstenv
mov
adc
fs
test
bound
push
lret
jl
loopne
sbb
repnz
xor
sbb
xor
repnz
rcrb
fsubrl
or
adc
inc
orl
call
cwtl
jl
mov
mov
sbb
fisubs
xchg
pop
aad
mov
cld
cmp
add
scas
pop
push
int3
fs
pop
jns
cwtl
pop
cmp
std
sti
loopne
inc
jg
jp
pop
sub
fistps
loopne
test
out
jmp
jns
fwait
jno
cmp
cmp
scas
push
sar
mov
xchg
pop
cmp
mov
adc
or
xlat
icebp
add
xchg
jl
mov
or
sbb
in
lcall
fwait
mov
out
push
aad
aas
lea
cmp
out
into
jmp
sub
test
jp
mov
adc
test
jo
out
mov
xlat
fwait
and
jb
add
xchg
add
and
add
mov
pop
mov
out
aaa
rcrl
js
das
mov
xlat
or
add
jnp
lahf
pop
inc
or
xor
cmp
xchg
nop
cmp
xchg
cli
mov
jg
fyl2x
fcmovnu
dec
loop
shrl
clc
ds
mov
inc
mov
hlt
stc
aam
jg
decb
mov
gs
lods
dec
lret
xchg
pusha
scas
xor
jns
push
stos
sbb
aam
ret
sub
pop
lahf
jecxz
decb
push
xor
xchg
sbb
pop
cmpsb
pop
int3
mov
scas
insb
mov
out
test
inc
out
shll
in
mov
jae
inc
pop
push
cltd
movsb
incb
mov
rorb
mov
fildll
cwtl
jo
sbb
mov
stc
and
js
icebp
jmp
inc
dec
mov
and
pop
xchg
pop
ja
mov
xchg
mov
xor
cld
xchg
jno
and
xor
in
shrb
push
jg
mov
inc
mov
sbb
xor
popa
xchg
insb
das
mov
out
mov
xor
mov
xor
aad
mov
or
cli
stos
rcrl
add
dec
orb
jnp
sbb
xor
pop
mov
pop
into
sbb
or
and
sahf
scas
ss
dec
sub
jb
sar
or
push
into
pop
mov
cli
clc
jecxz
push
xchg
cmp
ds
or
mov
or
testl
add
rcr
or
add
dec
fadd
dec
push
btsl
fisttps
pop
pop
sub
aas
cs
jmp
in
push
sbb
mov
adc
lret
xor
mov
ss
dec
sbb
rol
aas
mov
stos
aad
dec
sub
ljmp
loopne
jo
jb
es
ja
inc
and
mov
les
addr16
insb
inc
cmpsl
rolb
dec
or
dec
pusha
cmp
inc
popf
mov
or
jb
ror
stos
or
jp
mov
mov
inc
cmp
mov
ret
test
or
sub
mov
insb
mov
and
adc
int
push
test
lds
inc
mov
dec
cmp
lock
mov
jo
cmc
jno
pop
add
cmp
pop
in
fisubrl
mov
xor
dec
mov
mov
jg
mov
in
pop
hlt
jb
cmpsl
dec
ret
movsb
aas
dec
or
movsl
and
into
pop
push
clc
leave
adc
xchg
push
mov
shrb
div
mov
ss
sbb
fimull
outsb
push
xchg
ds
loope
sub
mov
cmc
icebp
mov
test
xor
xchg
call
addr16
adc
mov
imul
lea
push
push
adc
add
enter
es
test
jp
cmpsb
push
sbb
mov
je
jmp
mov
push
outsb
das
pop
shl
sub
push
cmc
ret
adc
dec
adc
scas
and
or
mov
sub
pusha
fstps
movsb
push
jbe
lret
inc
dec
add
xorb
mov
adc
insb
dec
and
or
icebp
outsl
cmp
mov
mov
cmp
dec
test
pop
mov
cmpsb
mov
xor
fistps
loop
and
dec
lock
sbb
rclb
insb
xor
jns
xchg
push
xchg
in
sub
aaa
cmp
int3
xor
hlt
mov
popf
inc
cwtl
and
fsubrs
mov
in
pop
mov
sbb
pop
push
adc
cmpsl
and
lret
ds
push
push
sub
popl
imul
clc
xchg
xchg
shlb
cli
xor
add
push
ret
nop
jmp
mov
imul
out
mov
jl
mov
inc
pop
bound
push
sub
dec
jmp
ret
push
inc
push
in
lret
mov
or
stos
lock
imul
inc
adc
or
rcrl
pop
mov
test
xchg
loopw
push
sub
scas
jecxz
icebp
cwtl
lret
xchg
push
cltd
stc
or
push
loop
cmpsb
or
mov
pop
dec
repz
adc
ja
or
xor
pop
cs
dec
and
adc
xchg
stos
inc
xlat
cmpsl
call
pop
add
cmp
aad
enter
je
adc
adc
mov
shlb
cmp
and
add
icebp
mov
iret
push
push
aad
ret
subl
bound
sbbb
xor
jg
div
and
imul
fcmovbe
cmp
stos
pop
aas
into
into
mov
adcb
mov
lds
lahf
lods
jge
sub
enter
mov
mov
arpl
mov
jae
jbe
jnp
arpl
in
jg
pop
jno
lcall
mov
test
jnp
das
pop
push
mov
cmpsb
scas
aad
mov
in
ret
mov
loope
jae
sarb
and
mov
cmp
push
xchg
mov
cmpb
inc
pop
aas
jno
mov
mul
add
outsb
sbb
repz
cmp
lods
stc
fimuls
push
movsb
and
or
or
xchg
lds
push
test
imul
out
sbb
imull
adc
ss
iret
sub
push
sbb
push
mov
xchg
inc
add
shrb
insb
stc
lds
loopne
inc
dec
mov
test
lds
in
push
inc
mov
mov
push
add
mov
fwait
add
pop
inc
popf
ret
dec
xchg
lods
xor
mov
sbb
mov
gs
mov
frstor
cwtl
popf
jnp
arpl
ja
lcall
adc
jne
or
nop
cmp
cmp
nop
jge
pushf
or
iret
adc
sub
fisttpl
push
and
xchg
shll
scas
mov
push
add
mov
jb
cli
pop
adcb
push
xor
daa
fildl
cs
xchg
mov
mov
sub
mov
rcrl
stos
mov
xchg
jg
inc
mov
add
push
mov
mov
mov
and
stc
inc
cmpsl
mov
mov
mov
sahf
xchg
icebp
and
pop
subl
sbb
or
fsts
xor
clc
mov
cmp
jp
loopne
push
loope
iret
pop
int3
adc
mov
aam
daa
xchg
pop
jb
xchg
push
push
mov
movsl
push
gs
shrb
cld
push
or
adc
bound
xor
xchg
jge
test
push
ds
adc
dec
mov
ret
push
add
ljmp
dec
sahf
shll
and
push
aam
loopne
test
jge
sbb
jne
lahf
ja
sahf
decb
cmpsl
std
arpl
xchg
popf
cmpsb
jbe
xchg
dec
cmp
xchg
in
ja
jne
push
out
lcall
outsl
pushf
std
adc
fs
mov
push
xchg
movhps
xchg
or
imul
jge
stos
fdivrs
jmp
xor
test
inc
push
fcomps
xor
test
jle
cmp
and
ds
mov
jp
jb
dec
cld
mov
es
add
inc
lcall
scas
cltd
jno
cmp
mov
and
adc
jne
push
stos
rorb
pop
std
xchg
cltd
sub
mov
cmpsb
pop
push
call
ljmp
movsb
sbb
sbb
leave
mov
mov
mulb
sbb
lods
inc
fidivl
add
add
mov
leave
dec
ret
cmpb
jecxz
in
aas
cmp
sub
stc
dec
xorb
iret
mov
out
adc
popa
inc
daa
enter
mov
cmpsl
iret
sub
loop
ja
xlat
add
cmp
jg
and
cmc
ffreep
mov
nop
xchg
pop
xchg
test
mov
add
ja
out
hlt
pop
mov
push
push
das
push
pop
fidivrl
mov
imul
fwait
aad
addr16
push
inc
sub
loopne
lgdtl
push
or
je
and
jmp
push
xor
enter
fdivrs
cmpsb
sub
xor
call
sub
insb
mov
or
rolb
jl
xor
sub
out
movsb
add
xor
and
loopne
mov
add
fucomp
test
cmc
cli
ljmp
mov
inc
xor
and
in
sub
mov
pop
cwtl
icebp
fldenv
pop
add
lock
ret
pop
dec
jecxz
stos
repnz
dec
add
push
repz
push
es
mov
stc
jg
repnz
ret
leave
imul
js
xor
cmpsl
mov
xchg
shlb
sub
and
test
das
inc
xchg
push
fsubp
and
cmp
repz
mov
roll
out
push
cmovg
cld
idivb
data16
pop
repnz
jb
dec
and
or
inc
sbb
frstor
cmpb
pop
and
jne
sbb
std
loop
adc
pusha
int3
int
or
dec
bswap
mov
enter
inc
imul
loopne
iret
lahf
addl
sbb
jae
ss
fldt
lds
movsb
rcrb
jge
mov
and
lock
test
sbb
and
xchg
sbbb
out
shl
xchg
out
adc
fildll
adcb
and
pop
dec
js
mov
sti
sub
out
xor
sub
push
imul
dec
mov
js
mov
mov
cmpxchg
aad
mov
add
movsb
pusha
outsb
insb
cmpl
loopne
pop
sbb
adc
sub
jns
cmc
test
fsubl
nop
pop
cmp
jge
inc
and
nop
inc
sub
popa
cli
iret
not
cmp
daa
ret
stos
lods
inc
mov
scas
and
mov
stc
mov
cwtl
pushf
lds
pop
stos
mov
stc
push
aas
mov
add
in
pop
inc
lret
cmpsb
xor
loope
mov
xchg
mov
mov
ja
cmc
ljmp
mov
es
mov
sbb
stos
mov
ja
cmpsb
ljmp
insb
sbb
movsb
xchg
and
shll
mov
adc
xor
cmc
dec
arpl
adc
arpl
pop
outsb
or
adc
lahf
pop
shrl
pusha
ret
popf
cmpsl
dec
lock
or
push
mov
mov
jge
jo
xchg
aaa
outsl
jmp
mov
repnz
sub
mov
shrb
sub
and
pop
cmpsb
mov
mov
stos
xchg
into
mov
pop
mov
sub
dec
push
or
mov
inc
cmpl
enter
rorb
push
fdivrl
cmc
in
movsb
dec
sub
xor
mov
sbb
and
mov
pop
fs
pop
inc
out
or
mov
and
les
add
mov
xchg
jbe
xor
popf
jle
movb
test
les
icebp
pop
xlat
mov
xchg
mov
outsb
into
or
pop
cs
xchg
lods
pop
lods
cmc
es
push
es
inc
cmp
inc
jbe
push
hlt
jmp
mov
jno
jo
pop
mov
push
dec
add
dec
mov
jns
shrb
adc
mov
inc
sub
inc
pop
or
add
dec
loope
arpl
rorb
sbb
dec
or
popa
in
mov
les
repnz
hlt
stc
mov
pop
insl
popf
and
in
add
dec
mov
cltd
int
insb
mov
mov
sarl
mov
sbb
notl
fsubrs
mov
fstpl
inc
aad
jecxz
insb
addr16
cli
daa
pushf
push
xchg
add
loope
mov
jecxz
inc
push
jnp
sti
fdivrs
push
add
mov
sti
or
and
xlat
test
or
inc
xchg
mov
lods
outsl
fistpll
outsl
mov
or
cwtl
iret
outsl
xchg
adc
and
lods
sbb
mov
sbb
insl
xchg
push
leave
inc
cwtl
fwait
dec
cmp
lea
xchg
mov
xor
add
insb
jmp
pop
sub
imulb
push
outsb
cmp
push
nop
jb
sub
sbb
cmpsb
testb
push
xor
scas
mov
fwait
and
aaa
mov
outsl
call
rolb
cmp
cld
test
rep
stos
cmp
and
dec
sub
sub
ja
ficoml
hlt
jo
jne
mov
xchg
mov
pop
sarl
test
ret
aaa
push
loope
or
or
sbb
outsl
cltd
jo
xor
data16
cs
jb
and
lock
imul
les
adcl
lds
lcall
jl
insb
push
pop
push
mov
jge
subb
stos
xlat
data16
mov
mov
xchg
cli
lcall
push
pop
sbb
outsb
and
in
mov
cltd
scas
inc
xor
xor
inc
lcall
sbb
sub
lds
pop
sub
fldcw
or
or
aaa
sub
fnsave
push
sar
lret
inc
mov
movsb
push
dec
mov
pushl
pop
mov
jecxz
shrl
xadd
pushf
ret
ret
push
jecxz
cmp
sub
jle
cli
ficompl
aaa
leave
mov
loop
loop
adc
inc
adc
inc
mov
add
mov
cmp
sarl
lea
lret
popf
or
mov
mov
int3
adc
mov
enter
addr16
into
mov
pop
add
push
mov
ret
mov
aas
fcoml
rol
cmpb
jo
jno
jae
testb
add
cwtl
call
sub
mov
call
ja
fmuls
xchg
cmpsb
out
jno
shr
cs
xor
jae
cmp
int
dec
out
push
mov
mov
jne
inc
xor
or
or
mov
gs
jnp
into
movsb
jecxz
dec
inc
fisubrl
repnz
jne
das
fmuls
outsb
inc
lock
push
fisubrs
cmp
pop
jg
in
dec
andb
cmp
dec
lods
pop
mov
push
pop
rcr
push
sub
jno
out
or
and
movb
bound
push
cmpsb
inc
outsl
out
xchg
mov
inc
xor
test
mov
rcrb
loopne
mov
fcom
sahf
idivb
pusha
xor
stos
stos
cwtl
push
js
xor
push
cmp
aam
test
ror
test
outsl
lea
fcoms
add
out
mov
xchg
cmp
inc
cli
enter
sub
mov
inc
pop
inc
push
ror
and
dec
clc
or
cmp
jp
loope
sub
mov
add
test
add
mov
push
mov
mov
jbe
sbb
stos
lret
pop
or
sub
inc
in
movsb
push
orb
fcmove
push
out
xchg
inc
mov
lret
sub
push
das
or
test
cmp
mov
fmul
stos
arpl
cltd
adc
mov
jecxz
push
fldl
dec
lcall
scas
test
mov
loopne
inc
xor
jmp
ds
stc
lcall
push
test
leave
out
lcall
icebp
lcall
hlt
and
insl
mov
adc
sub
cmpl
std
popa
mov
mov
int3
inc
push
mov
decb
jbe
stos
bound
je
test
and
stos
sub
mov
jecxz
cmp
movsl
lret
pusha
lds
xchg
jg
push
jbe
lods
adc
pop
cmp
test
pusha
sub
and
in
in
and
sbb
jno
mov
outsb
lcall
add
jbe
clc
inc
mov
mov
or
lds
into
fistpll
cld
jle
dec
push
jmp
ret
and
outsl
dec
mov
repnz
outsl
sub
lret
enter
push
iret
sbb
sub
adc
out
rcrl
js
sbb
jl
mov
jl
outsb
cmpsl
mov
dec
pop
mov
icebp
repz
pop
cmp
loopne
xchg
dec
add
in
imul
mov
jge
xor
in
sub
out
xchg
std
call
jnp
add
movsb
lahf
xchg
jle
sub
jns
and
and
call
mov
cmpsl
dec
loope
fs
ror
in
push
push
or
orb
mov
push
ret
pushf
rorl
dec
jge
adc
cmp
pop
lcall
sub
icebp
in
leave
hlt
xlat
ret
movsl
popa
add
jae
pop
les
jecxz
dec
mov
pop
in
adc
addr16
arpl
adc
mov
cmp
in
cmp
daa
mov
sbb
fmull
arpl
jns
pop
sub
pop
in
imul
shll
mov
cmp
xor
jecxz
test
mov
dec
in
mov
sbb
push
inc
lahf
outsb
push
scas
imul
ret
dec
cmc
pop
and
xor
mov
jno
popl
push
push
push
cmpsl
dec
jnp
aas
outsb
sbb
or
lods
mov
jnp
jne
in
movsb
pusha
adc
js
jne
dec
in
popa
xchg
jne
adc
inc
std
std
leave
outsb
loopne
push
mov
lret
cwtl
inc
pushl
push
call
mov
push
gs
fsub
loope
sbb
aas
jmp
dec
push
mov
sahf
mov
xchg
notb
mov
add
popa
add
adc
movsl
stos
aad
int3
int
mov
pop
aad
cmc
sbbl
add
push
xchg
stc
jmp
mov
sub
adc
push
inc
push
add
or
adc
sbb
jbe
inc
in
cmc
cmpb
inc
jbe
xchg
xchg
jnp
fnstsw
jl
xchg
loope
andb
inc
bound
in
adc
aad
lods
sub
mov
mov
or
and
dec
aaa
pop
int
iret
push
mov
xor
pop
pop
or
leave
sbb
cmpsb
dec
jne
popa
mov
lods
ja
test
orl
mov
or
sbb
pop
fimuls
xchg
push
adc
fcomi
stos
stc
xor
adc
pop
mov
cli
sbb
push
test
push
push
roll
xchg
xchg
and
jmp
or
push
mov
popa
out
sbb
das
aas
leave
pop
ja
data16
cmpsl
dec
addr16
sub
rol
jg
incl
int3
inc
int
inc
xor
cmp
int
inc
fidivs
test
pop
and
out
dec
adc
lds
psllw
jle
xor
icebp
decl
push
rorb
or
xchg
mov
loope
push
lods
mov
out
jle
scas
insb
out
adc
div
aaa
xor
lea
das
push
das
test
sub
aad
cmpsl
push
cmc
test
push
fdivrs
mov
aam
xor
stos
push
push
int3
mov
inc
lods
sbb
jmp
shll
sbb
lds
cs
adcb
push
pop
ret
and
cli
loopne
dec
jo
pop
xchg
xchg
cwtl
push
sbb
mov
adc
pop
mov
jmp
dec
loopne
sub
sbb
mov
jbe
mov
xor
lcall
jmp
sbb
adcb
mov
mov
ret
sarb
pop
jle
aad
scas
or
push
cli
mov
and
add
fcompl
mov
sub
mov
sbb
dec
mov
cli
xchg
out
mov
add
add
xor
xor
push
outsl
lds
test
ljmp
or
or
add
jge
xor
push
dec
scas
lahf
movsb
cmc
cli
cmp
push
cwtl
cltd
jp
shlb
mov
fadds
jecxz
xchg
cmp
pushf
mov
rorb
or
push
push
test
push
call
adc
xchg
push
adc
dec
cltd
dec
fidivs
and
mov
dec
cmp
in
ror
or
shlb
aaa
lret
push
push
stc
cwtl
lret
add
sbb
scas
push
add
mov
and
sub
or
jnp
pop
scas
mov
push
ret
sbb
leave
jns
mov
cwtl
repz
test
mov
sti
xchg
adc
ficompl
cmp
rorl
mov
jno
jge
sbb
stos
lret
mov
dec
mov
push
ds
cmc
dec
in
rolb
arpl
push
cmp
aad
pushf
enter
lret
sub
ja
xor
sub
ret
dec
jnp
imull
fxch
push
sbb
mov
cltd
and
lret
pop
xchg
dec
xchg
orl
cmp
rcll
ds
mov
icebp
inc
sbb
lea
pop
shlb
push
stc
push
int3
mov
sbbl
test
dec
outsb
mov
icebp
ret
or
sahf
pushf
lock
js
jmp
test
or
pop
rorb
sbb
cmpsb
test
mov
dec
xchg
lds
xor
jns
pop
sahf
jbe
push
mov
jg
add
inc
xor
shll
mov
xchg
mov
inc
cmpsb
sbb
cmp
xchg
test
or
mov
push
roll
sbb
mov
movl
jmp
scas
lods
jge
mov
or
lods
cmp
pop
shll
repz
inc
jmp
push
cmp
pop
mov
mov
enter
and
divl
xchg
aad
jge
jmp
lcall
or
js
fcomps
and
loopne
dec
pop
adc
sbb
cmp
sbb
push
add
cld
xor
add
adc
inc
pop
push
insl
push
xchg
in
cmpsl
inc
pop
jmp
mov
cli
stos
sbb
and
arpl
cmpsb
dec
and
jbe
pop
outsb
jp
shlb
arpl
lock
jns
icebp
fisubrs
sub
pop
pop
mov
push
xchg
mov
outsl
ficoml
jno
bound
icebp
lret
push
mov
aas
pop
xchg
sub
mov
leave
mov
popa
inc
int
cwtl
lods
scas
xchg
xor
sbb
call
xchg
dec
dec
push
xchg
push
jg
gs
push
cmp
mov
sbb
ret
repnz
in
scas
pop
fs
roll
push
mov
aam
jle
out
xchg
rcrb
jbe
ret
dec
mov
jns
mov
xchg
inc
mov
mov
add
loopne
inc
mov
dec
pop
or
push
inc
sbb
mov
pop
adc
loope
xchg
mov
push
ja
mov
mov
setbe
lods
mov
loopne
mov
icebp
pop
mov
sbbl
xchg
and
lret
movsl
sbb
push
rcr
ret
inc
push
push
or
lret
outsb
ret
lods
ljmp
aad
jg
cmp
mov
fcomps
xchg
or
fistps
pop
int
mov
jbe
push
jno
fstps
repz
addb
pop
icebp
cmp
add
and
sbb
shlb
pop
add
dec
mov
insb
je
jp
or
mov
inc
dec
cmp
data16
mov
call
push
push
rolb
pop
sbbb
sub
inc
cmpsl
add
test
repnz
out
and
push
in
lods
scas
sub
mov
pushf
mov
nop
sbb
dec
pop
imul
in
xchg
out
addl
imul
in
or
fbld
jle
je
pop
fldpi
cmp
sbb
fnsetpm(287
je
fcomip
dec
and
call
loope
loop
cmp
and
inc
mov
adc
and
and
mov
pusha
adc
pop
jecxz
mov
pop
inc
mov
xorb
sbb
data16
mov
cmp
or
add
inc
into
add
jle
test
jae
push
in
pop
mov
fsubrs
lods
jns
scas
lahf
jae
lods
sbb
leave
test
add
cmp
pop
adc
leave
es
push
out
or
lret
popa
ds
shll
pop
pusha
les
into
incl
inc
pop
inc
xchg
xchg
fidivrs
ss
xor
adc
gs
adc
inc
xchg
xchg
and
and
dec
xchg
dec
fstp
lods
nop
mov
add
pop
mov
out
xchg
mov
mov
inc
xor
push
ljmp
dec
fcmove
movsl
and
inc
ret
sub
mov
insl
cmp
lcall
shrd
add
mov
or
cmc
cmpsb
int3
mov
jno
enter
or
hlt
add
inc
jg
or
xchg
pushf
inc
test
pop
push
movsl
icebp
sbb
loopne
xchg
clc
in
add
es
cmp
jns
mov
cmp
mov
cmc
jmp
and
les
stos
mov
es
test
cmc
rclb
mov
pop
sbb
mov
jbe
mov
sub
fbld
mov
and
mov
bound
les
test
enter
lcall
fidivs
jno
inc
call
mov
pop
sbb
push
aam
les
negb
arpl
aas
lcall
sbb
pop
pop
rclb
aas
dec
adc
movsl
mov
adc
repz
scas
stc
and
cld
pop
or
test
jg
cwtl
jns
xor
incb
sub
ret
mov
ds
jg
push
js
jb
push
jns
or
xchg
mov
xlat
mov
fimull
push
lcall
data16
lcall
jns
mov
aad
or
and
push
bound
mov
mov
mov
xchg
stc
adc
push
movsb
sbb
pop
pop
mov
cmpb
and
or
and
int
ds
negb
sub
mov
mov
push
repz
int3
mov
roll
xchg
jle
ret
sbb
inc
cmp
loop
sub
fnsave
mov
pop
in
inc
shrb
or
adcl
scas
pop
pop
mov
andl
and
mov
and
in
push
push
xchg
mov
cmp
in
mov
repnz
pop
cmp
lret
mov
js
fdivs
sub
pop
les
imul
xor
xor
sbb
lahf
rcr
popf
jp
xor
jp
jnp
popf
out
sbbb
xchg
push
jmp
inc
in
add
cmpsl
and
jae
fs
cli
popa
jle
out
cltd
or
or
into
cld
jnp
pop
push
xchg
lea
pop
mov
ljmp
add
mov
inc
xchg
sbb
addl
adc
notb
movsl
scas
inc
add
jmp
mov
and
push
xor
lods
adc
fwait
inc
in
std
adc
xor
mov
pop
push
add
sub
push
out
cmp
test
dec
arpl
mov
or
or
shl
push
nop
xchg
das
adc
inc
mov
mov
in
jbe
xchg
or
outsl
cld
or
jl
or
mov
aam
pop
out
inc
cmp
lods
push
pop
shlb
and
pop
adc
outsb
les
dec
dec
add
repnz
or
rcrb
cli
lods
popf
clc
fwait
mov
mov
mov
dec
or
in
jbe
push
subl
dec
ret
imul
push
xchg
stos
scas
push
daa
hlt
jae
xchg
lock
dec
fwait
inc
push
sbb
xor
shll
mov
pop
inc
out
cwtl
adc
adc
aaa
push
dec
mov
sub
push
pushl
mov
lock
adc
imul
pop
mov
rclb
sbb
pop
clc
shrb
lret
jbe
fcomps
std
ljmp
mov
leave
mov
data16
ljmp
mov
imul
ss
pop
fmul
fistl
adc
stos
pop
mov
mov
out
mov
fwait
mov
lcall
in
iret
xor
out
xor
bound
push
adc
ret
add
out
shrb
push
in
aas
pop
adcb
sub
xchg
lret
mov
cmp
xchg
adc
repnz
jae
xor
mov
jl
cmpsl
cmp
dec
or
push
in
pop
fcmovnbe
and
gs
int3
xchg
andb
bound
frstor
and
mov
push
dec
shll
outsl
mov
test
mov
cmp
inc
loope
das
aaa
mov
xchg
xchg
dec
mov
mov
lock
cld
cmpl
movsl
dec
or
ret
sarl
sub
mov
xor
xchg
aam
push
or
pop
sub
xor
fists
dec
inc
movsl
mov
push
in
mov
mov
das
mov
sbb
xchg
push
fcompl
pop
cmc
shll
pop
clc
or
andl
int
mov
das
sti
xchg
mov
arpl
fldl
lods
xchg
shlw
rol
inc
jge
adc
rcr
lret
mov
push
cltd
rcr
mov
and
add
stc
or
aas
push
notl
pop
arpl
xchg
cltd
data16
mov
jb
dec
call
nop
lahf
jbe
movsb
jecxz
and
xchg
and
sbbb
stc
add
jle
dec
data16
jno
ret
jge
aaa
roll
jno
cmp
inc
in
clc
out
pop
xchg
cmpsb
mov
repnz
mov
mov
mov
out
std
sbb
mov
jne
dec
add
adc
lcall
mov
movsl
and
pop
adc
mov
adc
lds
out
shl
enter
rcr
cmp
out
rcpps
js
insb
jmp
ljmp
jp
lahf
lds
mov
repnz
sbb
add
mov
insb
divb
shlb
enter
je
in
in
or
subb
aam
popf
movsl
fucomi
pusha
movsb
sti
cmovo
lahf
sahf
cli
pop
push
enter
push
xor
lods
inc
xor
cwtl
roll
jnp
arpl
jae
push
in
cli
jg
add
fstpl
add
dec
dec
sub
loopne
xchg
dec
test
sbb
or
mov
pop
sub
mov
inc
sub
pop
add
aam
outsl
mov
movsb
mov
das
jbe
mov
push
and
pop
sarb
inc
jnp
sub
ret
jns
loopne
test
add
ljmp
mov
jp
fmuls
mov
jno
out
repz
clc
push
enter
cmp
popa
jnp
sub
adc
or
cld
inc
xchg
jle
sbb
fisttps
xchg
or
enter
clc
or
popa
jae
or
jmp
push
daa
fisubs
nop
inc
mov
mov
adc
pushf
out
mov
mov
stc
and
pop
sub
pop
repz
xor
jb
sahf
fidivl
ds
das
cmp
cmpsl
fsubs
mov
push
and
cld
mov
leave
hlt
pop
mov
fldenv
xchg
mov
stos
jns
test
les
jle
ss
xchg
cld
add
mull
mov
mov
fisttps
out
cmc
jle
sub
loope
loop
inc
stos
aad
dec
test
aaa
push
sbbl
inc
mov
jl
pop
and
inc
mov
adc
lret
fdivr
jmp
in
sub
mov
dec
pop
sub
pusha
iret
sbb
cmc
mov
in
loopne
stc
sarl
or
lahf
dec
pop
fwait
outsb
out
dec
sbb
es
mov
cltd
test
scas
fdivrs
in
pushf
and
add
int
push
out
pop
aad
popa
xor
adc
or
pop
mov
jg
ret
out
lods
push
dec
add
adc
adc
and
bound
lods
xor
das
mov
mov
ljmp
jno
mov
xchg
add
out
shrl
or
fidivrl
dec
adc
setno
test
sbb
lds
aaa
sbb
add
jo
lds
mov
outsl
icebp
mov
aaa
sahf
inc
cmp
lods
es
pop
push
pop
mov
imul
stos
mov
fidivs
pop
mov
loop
add
rcll
dec
pop
mov
mov
sti
les
mov
fidivl
je
popa
je
lock
fimull
out
iret
nop
pop
outsb
mov
mov
movsb
lock
in
sbb
cltd
jecxz
aad
clc
lcall
pushf
or
sbb
ja
cmp
bound
fildl
movsb
pop
ljmp
inc
or
sub
dec
in
jo
je
fldcw
rorb
out
sbbl
roll
js
cld
cmpsb
xchg
faddl
int3
mov
aas
test
movnti
mov
sub
frstor
dec
leave
sub
mov
ja
jl
sqrtps
cli
cmp
mov
sbb
xchg
mov
test
or
int3
inc
push
les
dec
jns
mov
adc
jp
cmp
ss
rcrb
enter
push
pop
pop
push
adcl
jecxz
jg
andb
and
icebp
and
inc
movsb
ja
mov
mov
dec
clc
mov
jmp
out
sbb
jns
mov
push
or
repz
in
je
or
es
push
imul
push
inc
mov
std
outsb
lahf
pop
xor
sub
fistpl
and
outsb
aaa
xchg
mov
mov
or
add
cld
lods
sub
fisubrl
push
dec
and
adc
test
mov
jns
pop
js
xlat
test
pop
mov
add
jmp
xchg
mov
shll
and
pop
jae
mov
fdivl
test
arpl
sub
imul
stc
xchg
mov
xchg
mov
jae
cmp
mov
shlb
jb
inc
fisttps
dec
mov
jle
mov
jnp
in
fnsave
mov
ret
scas
and
pop
cltd
xor
dec
addr16
movsl
xchg
mov
test
test
sarb
jecxz
dec
add
cmpsl
addr16
fcomps
loop
out
pop
lds
jg
test
mov
lret
aaa
adc
sub
push
add
sub
movsb
push
pop
cmp
mov
adc
or
push
sub
dec
in
push
loope
loopne
dec
or
push
inc
adc
mov
mov
push
inc
mov
cmpxchg
std
sbb
dec
mov
cli
test
mov
and
int
pop
push
sub
inc
push
jl
xor
test
or
sub
add
and
test
jmp
push
xchg
mov
xchg
push
pop
mov
movb
xchg
pop
add
jbe
xchg
cltd
pusha
jnp
dec
push
mov
push
pop
cld
cmc
and
push
test
add
imul
movsb
arpl
fisubs
mov
mov
mov
daa
xor
jl
sbb
dec
adc
inc
out
inc
jle
lods
pop
add
pop
add
mov
dec
sti
fwait
call
mov
or
adc
outsl
jo
xchg
pop
sbb
pop
adc
cmp
out
fisubrs
daa
push
nop
jecxz
out
mov
pop
or
inc
and
push
loope
jae
popa
xchg
and
ds
fstl
call
lds
sarb
stos
pop
ret
ficomps
xlat
repnz
out
stos
xor
mov
subl
xchg
out
jno
inc
lret
xor
divl
mov
jmp
mov
test
xchg
sub
pop
ret
loope
mov
xor
shrb
sub
fidivs
xor
das
lds
sbb
fisttps
mov
ficoml
mov
insb
lods
add
int3
scas
xchg
cmp
sub
mov
add
lret
and
and
inc
int
fadd
out
mov
dec
xchg
aam
jnp
pop
nop
push
outsl
psrlw
or
xor
fdivrs
insb
imul
out
cld
sbb
arpl
pop
cmp
cmpsl
cmp
push
cmpsl
iret
aaa
or
dec
xor
push
adc
fildl
stos
popa
push
mov
dec
sub
sub
stos
outsl
lret
cwtl
out
psubsw
aas
aam
stos
aaa
out
push
or
inc
add
movsl
clc
fistpll
insb
fcos
movsl
stos
stc
inc
mov
lret
inc
adc
or
stc
jmp
adcl
cli
cmp
push
add
mov
loope
divb
scas
adc
dec
xor
arpl
add
fs
pop
pop
jg
cld
mov
stos
fidivl
cmp
add
dec
bnd
ljmp
pop
scas
xchg
dec
adc
mov
movsb
push
xchg
cs
icebp
out
loopne
mov
jns,pn
or
xchg
xchg
cld
clc
stc
loop
das
cld
out
mov
and
pushf
mov
and
repz
cs
adc
mov
lods
adc
adc
lret
jb
sbb
or
mov
sahf
fdivrs
in
inc
and
add
jnp
mov
movsb
sbb
push
imul
sahf
sbb
out
mov
loope
inc
data16
jne
jae
xchg
filds
mov
popf
cmp
aas
inc
jnp
pop
ret
jno
mov
push
rorb
xor
in
mov
loopne
rol
sub
jb
sbb
lret
xchg
rcrl
push
lds
or
mov
dec
bound
divb
ja
adc
pop
cwtl
mov
dec
jecxz
xor
push
xchg
daa
ljmp
add
add
mov
fidivrs
adc
mov
cwtl
imul
add
adc
inc
push
scas
pop
insb
dec
cwtl
and
fxch
push
pusha
jle
loope
aaa
add
lods
in
xor
repnz
jbe
push
adc
inc
adcb
inc
iret
mov
rcrb
jb
mov
outsb
and
enter
mov
xor
mov
repnz
ficoml
push
cmp
mov
lret
push
and
enter
jmp
fists
inc
inc
push
lret
shll
ds
sub
les
or
int
sub
sahf
shr
push
or
sbb
repnz
icebp
xchg
mov
out
in
push
frstor
stc
rcl
lods
sbb
jge
roll
fcoms
nop
sub
loopne
pop
les
repz
xchg
jns
lret
and
ljmp
repz
mov
out
pop
icebp
cmp
icebp
in
dec
xchg
mov
jae
stc
lret
subb
movsb
inc
jge
data16
stos
sbb
jne
or
or
int
jnp
pop
dec
hlt
stos
hlt
inc
inc
mov
adc
mov
sbb
sub
inc
lock
xchg
popl
dec
divl
aam
inc
push
adcb
or
ds
add
jmp
inc
jg
sahf
or
push
jle
je
jbe
pop
jmp
scas
dec
fisttps
xchg
mov
push
test
clc
cwtl
mov
iret
cltd
sub
sub
mov
imul
push
mov
adc
mov
sub
jae
jl
inc
adc
xchg
pop
andb
jge
movsb
sub
adc
rcr
ljmp
pop
fimull
nop
cmpsb
out
test
mov
inc
rclb
call
or
outsb
sti
popf
cmp
sti
data16
mov
xchg
lods
repnz
es
jnp
add
pop
pop
dec
cltd
push
std
rcrl
mov
loope
add
mov
imul
xor
jns
fisttpl
bound
sub
or
sbb
mov
hlt
and
cs
fwait
inc
xchg
adc
adc
adc
pop
inc
mov
lods
mov
xchg
pop
fisubrs
jns
js
cwtl
fisttpl
sub
mov
dec
mov
std
push
cli
int
push
xchg
pop
std
lods
sbb
or
xor
in
lods
fisttpll
bound
cltd
shll
or
aaa
dec
or
out
mov
lret
test
ret
push
adcl
jno
xor
ret
and
popf
xchg
cltd
mov
fwait
pusha
call
aam
aaa
js
pop
stos
sbb
jo
add
or
hlt
loop
enter
sbb
je
sub
sbb
cld
add
inc
pop
jg
enter
dec
xchg
adc
xor
mov
hlt
daa
inc
in
jno
jl
xchg
cmpsl
ss
mov
nop
add
push
lock
movsb
mov
daa
sub
rorb
xlat
push
pop
loopne
and
icebp
aam
int3
or
sub
jmp
mov
mov
mov
push
jl
fmuls
xor
mov
xchg
flds
movb
divb
mov
cmp
xchg
mov
rclb
ja
sti
fsubrl
and
test
ficoms
movsb
mov
ret
and
out
nop
ds
iret
sbbl
pop
lea
push
push
into
notl
jb
int
ss
inc
cltd
xchg
aad
iret
mov
dec
test
xchg
push
mov
sbb
incl
mov
mov
xchg
in
pop
dec
xchg
dec
imul
mov
js
pop
loop
adc
sbb
add
adc
lock
cmp
xchg
cmp
inc
lahf
cmp
int
cld
xchg
mov
mov
cmc
iret
das
jp
shlb
adc
call
test
xlat
inc
pop
or
dec
iretw
xor
movb
adc
lock
add
popa
std
mov
mov
dec
mov
js
into
iret
in
shrl
mov
fs
push
mov
cli
aam
into
dec
adc
adc
fldenv
push
mov
leave
sbbl
pop
jne
jg
xor
call
out
cmpsb
in
jne
and
or
sub
mov
out
dec
fildl
bound
cmp
pop
cmp
stos
or
mov
cmpsb
cmp
xor
ja
cmpsl
test
dec
mov
js
sub
mov
and
mov
dec
test
sub
inc
lahf
es
frndint
and
push
xchg
xor
push
mov
add
lret
adc
push
mov
and
inc
lret
mov
xchg
sbb
mov
jo
out
cmp
inc
shlb
xchg
repz
adc
jns
lods
push
dec
test
jge
rol
inc
sbb
js
jl
and
push
lea
call
fisubs
ds
stos
ds
out
mov
dec
sahf
lea
or
aas
inc
andb
xchg
xchg
push
hlt
cmp
cltd
xor
inc
lret
dec
mov
pusha
adc
std
jo
or
inc
push
fsubl
inc
jge
sarb
ja
fwait
pusha
xchg
fdiv
les
das
adc
jne
out
js
cmp
xlat
cmp
mov
dec
lahf
xchg
or
jmp
xor
stos
add
dec
je
loope,pn
test
aad
daa
pop
push
adc
pop
out
pop
cmp
hlt
xor
mov
sub
mov
jbe
ret
push
mov
xor
and
push
cmp
shrb
shll
sub
std
lcall
ljmp
pop
sbb
pushf
mov
cmp
inc
shrl
aas
aad
dec
pop
cld
repz
hlt
dec
scas
mov
rcll
jmp
test
mov
dec
mov
cmp
ja
sbb
pusha
cwtl
pop
enter
sub
je
lods
notl
int3
fcomp
lock
in
push
test
inc
fidivrs
mov
cmp
mov
lret
inc
test
outsl
cmpsb
sahf
cmp
ret
inc
pop
pop
push
mov
fisubrs
ror
out
fildl
mov
mov
and
clc
jle
data16
inc
adcl
es
bound
dec
pop
dec
xchg
or
into
jne
sub
mov
dec
aad
jg
es
test
ss
cmp
clc
insl
mov
imul
int3
push
out
ror
mov
iret
jb
add
push
lahf
movsb
aas
inc
jae
and
rclb
jge
xchg
lds
sub
mov
cwtl
pop
dec
lcall
pop
imul
pop
jle
jne
insb
fcoms
jg
xchg
jle
repz
pop
xor
dec
xlat
decb
stc
shr
aam
fs
ljmp
test
sub
scas
sbb
mov
and
loopne
daa
mov
mov
xchg
mov
fidivrs
std
fdivp
aad
pop
clc
add
sub
mov
inc
sub
inc
ret
jecxz
pop
es
push
cmpsl
js
jle
imul
addl
into
fdivr
aad
push
add
or
sahf
cmp
es
outsl
mov
sbb
enter
fiaddl
fcmovbe
call
or
dec
mov
jecxz
ljmp
inc
icebp
or
mov
aas
aad
nop
pop
and
and
jle
fstl
fistpll
jns
je
out
jecxz
out
in
xchg
repnz
sub
add
jb
mov
pop
mov
mov
cs
stos
push
mov
xchg
inc
cmp
push
jle
imul
ss
pushf
fsub
iret
mov
mov
cmp
mov
ss
and
cld
imul
mov
inc
cmp
add
sbb
mov
in
cs
adc
push
cmp
sub
cmp
adc
in
push
aaa
sahf
sub
mov
mov
xchg
lahf
es
subb
ljmp
jl
cmp
ds
test
out
loopne
ds
xor
dec
push
call
insb
inc
mov
jns
dec
mov
out
push
mov
sbb
or
in
repz
into
in
loop
or
flds
mov
cli
daa
xchg
int3
clc
dec
cltd
dec
jnp
sbb
rcrl
mov
cltd
inc
adc
mov
out
fwait
jge
mov
sbb
mov
ja
sub
bound
jp
hlt
out
add
mov
add
adcb
mov
test
es
lret
mov
inc
stos
movsb
jne
xchg
aam
leave
pushf
aad
leave
pop
xchg
sbb
pop
xchg
mov
orb
pop
add
pop
xor
sbb
pop
push
test
nop
add
jl
ljmp
hlt
test
rol
xor
add
cmp
cmc
int3
pop
movsl
jp
lret
inc
or
sub
in
rcrb
xor
push
adc
dec
sti
sub
or
inc
cmp
lret
xchg
fnsave
fmuls
dec
ljmp
add
push
push
insb
and
or
and
adc
dec
xlat
push
xlat
nop
push
shlb
xor
xor
jmp
xor
je
or
adc
daa
scas
stos
cmp
jp
in
sbb
pop
ljmp
adc
or
push
push
adc
pop
sti
int
int
mov
pop
mov
in
xor
mov
dec
cli
pop
mov
push
loopne
sbb
push
xlat
icebp
sbb
sarb
arpl
xchg
call
inc
lods
cmp
cmp
fwait
push
je
hlt
xchg
cs
or
outsb
subl
jns
sbb
sub
push
add
adc
loope
pop
and
insl
jb
sub
sahf
sbb
and
cld
jb
pop
sub
mov
jmp
cmp
push
jbe
pop
pop
xchg
push
clc
mov
cmp
dec
sbb
jo
dec
stos
lock
leave
or
xchg
add
rol
or
out
jo
xchg
push
mov
pop
repz
inc
or
popf
dec
xor
jecxz
mov
int
pop
iret
std
sahf
testb
aaa
ja
and
stos
sbb
loop
pop
pop
and
mov
bnd
xlat
ja
push
lods
dec
out
push
dec
mov
push
in
imul
icebp
mov
loope
inc
mov
push
sbb
cmp
int
lret
stos
inc
aas
mov
aad
insb
in
fs
cmpsb
dec
pop
and
loop
and
insl
dec
adc
jno
call
cmp
jns
fld
icebp
insl
mov
inc
mov
int
lds
jno
xor
inc
jecxz
je
and
mov
fyl2x
inc
xchg
pop
int
or
icebp
mov
add
stos
xor
mov
stos
xor
adc
mov
inc
pop
or
xchg
sbb
jnp
jnp
cmp
cmp
or
xor
xor
stos
push
sahf
or
out
std
xchg
jg
leave
and
jbe
push
push
mov
dec
sbb
sub
pop
lods
push
std
int
lds
mov
adc
lcall
shll
fidivs
push
cmp
inc
fidivrs
fsubrs
sub
sbb
lea
add
stos
add
fsubs
add
and
scas
xchg
adc
adc
arpl
pop
xor
jns
dec
pusha
sbb
jmp
mov
mov
aad
add
shrb
imul
inc
cmp
cld
call
sahf
cli
adc
cmp
jo
push
cmp
orb
shl
inc
loopne
insb
bound
pop
and
xor
push
or
add
in
push
xchg
dec
out
jecxz
adcb
pop
or
add
lock
out
push
pop
mov
xchg
js
pushf
decl
mov
aaa
jge
cli
scas
mov
addb
push
add
cltd
sarl
mov
clc
fwait
les
xchg
mov
sub
std
in
pop
sahf
aaa
fs
repz
xchg
fnstsw
lds
mov
js
inc
data16
pop
out
cmp
jne
out
stos
int
xchg
cltd
sbb
shll
push
cmpsb
pushf
mov
clc
lods
sub
jecxz
out
roll
pop
fdivl
and
and
data16
cmpb
mov
pop
out
jl
out
cmc
arpl
fstps
mov
xor
add
push
std
adc
add
push
sub
aam
test
mov
fsts
in
xor
push
mov
adc
mov
jb
xchg
pop
inc
push
test
mov
mov
or
add
push
in
mov
mov
rcrb
icebp
push
idivb
mov
lcall
jno
or
cmp
add
and
in
xor
out
cli
fstl
repnz
mov
mov
and
rcr
and
mov
int
loop
lahf
bound
mov
icebp
js
mov
sbb
mov
mov
xor
aam
in
clc
daa
jo
mov
mov
mov
imul
flds
jnp
push
clc
ret
and
fldcw
pop
pop
enter
stos
aad
xor
popf
repz
or
jae
jne
gs
jl
jnp
popf
mov
cld
dec
ds
dec
arpl
mov
testl
aaa
sti
dec
and
and
lock
mov
pop
out
add
pop
fildl
es
add
dec
mov
shrb
push
pop
pop
push
arpl
insb
mov
xcrypt-ofb
cmpsl
outsl
jno
call
insb
dec
pop
cmp
ficoml
add
arpl
xchg
sbb
mov
inc
movsb
std
adc
fistps
in
and
pop
mov
js
xor
mov
push
mov
loopne
movsb
dec
push
je
jmp
jae
lret
cmpb
shlb
mov
jge
cmc
dec
jl
xchg
sub
pop
in
data16
lods
jnp
fldt
cwtl
imul
cs
dec
ds
fs
sub
inc
aad
out
push
mov
push
cmp
and
sub
mov
imul
dec
scas
mov
les
loopne
push
and
cmp
in
adc
or
xor
gs
xchg
andb
scas
je
mov
popf
cltd
lds
pop
mov
mov
fldt
clc
repz
mov
cld
cwtl
mov
sti
jnp
mov
push
mov
mov
xor
daa
sbb
adc
lods
fs
push
pop
icebp
into
or
ja
jg
inc
push
mov
cmp
imul
in
mov
and
xchg
mov
jp
adcb
dec
pop
lds
test
mov
inc
outsl
out
mov
fistpll
sub
or
call
sbb
mov
addl
or
dec
adcl
inc
pop
enter
xchg
xlat
lds
cmp
pop
sarl
rcrl
sub
lods
xor
icebp
test
push
sar
dec
xchg
pop
sub
out
nop
iret
arpl
pop
cmpsl
cmp
int
ret
mov
inc
sub
call
cmp
push
inc
lret
test
rclb
popa
inc
out
inc
int
xor
jns
add
test
dec
mov
sarl
rorb
mov
push
mov
aas
sbb
movsl
sti
dec
xchg
cmp
stos
mov
or
vpaddsw
sbb
in
sbb
xchg
add
outsl
sub
jl
js
popa
dec
aas
mov
lcall
outsb
shr
xchg
dec
insb
mov
cmpsb
rolb
insl
mov
add
orb
imulb
mov
pop
loopne
data16
cmpsl
ret
enter
lods
imul
push
push
cld
jge
dec
adc
pop
insl
nop
cli
mov
xchg
call
mov
inc
xchg
mov
fstps
sub
fs
cmp
push
adc
mov
mov
fcomip
cmp
inc
pop
fistpl
sub
out
nop
icebp
jmp
pop
inc
adc
mov
sub
das
dec
add
cmpsl
jno
sub
out
test
inc
aaa
jp
push
cmp
or
andb
fwait
sub
enter
ror
mov
push
xchg
jo
push
aaa
sub
cld
mov
push
jno
add
adc
in
cmc
pusha
sbb
sti
push
hlt
leave
xchg
movq
sub
dec
xor
xchg
fistps
add
test
dec
outsb
ss
dec
decl
xchg
or
xchg
push
jne
loope
mov
mov
aas
mov
ss
insb
test
pop
adc
jns
fbstp
test
xor
test
dec
pop
push
sub
jg
scas
shrb
or
inc
jno
jae
push
and
xchg
xor
push
sbb
cs
add
hlt
pop
adc
dec
loop
aad
add
cmp
push
add
pop
iret
scas
ffreep
scas
testl
sbb
enter
mov
mov
push
in
push
arpl
push
fisttpll
loope
xchg
mov
jp
sbb
pop
sti
push
aaa
dec
outsl
test
rclb
cs
or
pop
dec
fstps
cmpsl
clc
mov
in
lret
jle
jecxz
call
test
fcmove
sti
add
leave
mov
xor
inc
es
mov
ds
cmp
adc
outsb
pop
out
outsb
push
pushf
push
mov
jne
lahf
and
les
dec
mov
in
xor
fwait
imul
lods
out
movsb
jmp
add
and
xchg
pop
jnp
stos
outsb
daa
adc
pop
adc
fstp
adc
cmp
ds
pop
cmp
pop
add
xor
push
ds
movsb
or
push
mov
sbb
popf
mov
add
inc
pop
lea
mov
jle
stos
sbb
pop
inc
xchg
add
shrb
or
shrl
mov
arpl
add
jge
pop
and
pop
jae
addr16
into
xlat
je
sarb
stos
xchg
in
repnz
pop
lret
ret
sbb
push
fisubrl
aad
fidivrl
push
cwtl
xor
stc
pop
test
iret
jg
cmp
inc
inc
outsb
mov
mov
test
pop
sub
xor
adc
and
popa
scas
inc
movb
mov
sub
idivl
repnz
lds
jae
lahf
cli
or
lock
bnd
lret
cmp
sub
jecxz
iret
push
sbb
icebp
cmpsl
push
jmp
cmpsb
ret
or
lock
scas
sbb
xchg
int3
into
pop
mov
clc
lods
push
hlt
pop
pop
sbb
adc
or
adc
testb
in
je
mov
movsl
notl
cmp
cmc
dec
pop
or
sbb
fmuls
jecxz
add
push
movsl
stos
dec
fwait
popa
in
sbb
pop
adc
in
call
mov
adc
inc
stc
inc
stos
mov
fdivs
xchg
mov
add
xor
mov
xchg
jns
pop
mov
in
dec
cmp
add
jle
xor
push
aam
adc
push
scas
popa
mov
sbb
hlt
jmp
xor
inc
xlat
test
xor
push
dec
jl
or
pop
sub
pushf
fcomps
sbb
filds
cld
mov
pop
in
fdivl
sbb
in
jmp
cmp
incl
data16
mov
or
test
or
mov
xchg
xchg
sub
or
stc
adc
negl
jmp
test
adc
lea
inc
jne
xchg
push
aas
fnstsw
and
push
xchg
les
stos
ss
out
clc
pusha
outsb
aaa
cmpsb
pop
xchg
aad
or
les
cli
outsb
js
push
jns
xor
in
lea
sub
or
lret
mov
mov
sub
das
mov
aas
into
stos
test
xlat
or
bound
mov
cli
rcrl
add
jge
popf
or
mov
into
jae
xlat
mov
scas
pop
fadd
mov
lahf
mov
dec
fimull
int3
jg
aam
and
clc
testl
push
or
call
mov
push
mov
imul
shrl
lods
mov
lcall
icebp
add
pop
adc
loope
jb
inc
jg
jbe
aas
pushf
fstpl
sbb
ret
adc
js
and
rcr
jmp
add
cmp
and
mov
test
das
insl
movsl
mov
lret
cmovo
fadds
inc
or
sahf
lret
rolb
ret
jl
sub
xorl
inc
cmc
adc
ldmxcsr
adc
popa
jbe
mov
pop
das
xlat
fmuls
sti
inc
and
cmp
test
jmp
jnp
inc
jb
jmp
dec
or
jne
in
sbb
jnp
js
pop
out
mov
dec
add
mov
mov
push
xlat
adc
xor
dec
pop
xchg
add
repz
dec
and
inc
or
adc
lock
fidivrl
ficomps
mov
insb
ljmp
ljmp
adc
inc
imul
test
rorb
sahf
xchg
mov
fs
mov
nop
sub
pop
xchg
push
repz
data16
jp
pushf
and
xor
aaa
sub
push
and
xchg
xchg
xchg
xor
mov
push
aam
insb
test
or
lock
cli
daa
push
cs
xor
xor
adc
push
sahf
jb
mov
pop
xor
push
dec
imul
hlt
rorl
fdiv
xchg
pop
cmpsb
popf
test
lods
push
lock
mov
sub
pop
lds
int3
inc
addr16
jns
icebp
jmp
iret
data16
pop
mov
cs
push
lret
insl
nop
subb
sbb
xchg
orb
mov
aas
repnz
cmp
pop
add
aam
mov
mov
add
adc
orl
add
push
add
lods
pop
push
cmpsl
jmp
fsts
sub
jae
sbb
mov
inc
sbb
xor
xor
jb
sbb
or
add
jecxz
mov
sbb
test
faddl
out
mov
or
shll
inc
adc
inc
and
pop
cmpsl
lods
in
xor
cmp
lock
jg
xor
push
cmp
dec
inc
jg
imul
rclb
test
and
lods
push
cmc
mov
and
sub
inc
enter
adc
out
int
lock
ret
rol
les
andb
shrl
mov
xrelease
lock
roll
sub
adc
add
xchg
jbe
xlat
mov
test
push
mov
arpl
pop
pop
out
or
xor
orb
cli
lcall
rcrl
sub
in
jb
dec
clc
pop
rol
outsl
gs
sarb
mov
out
inc
aas
push
mov
ja
xchg
je
dec
fwait
pop
mov
dec
push
jl
addr16
hlt
sti
adc
sub
xlat
fprem
aaa
push
dec
or
mov
lods
xchg
adc
lcall
mov
loopne
sub
das
sbb
dec
cli
inc
fdivs
testl
sbb
rclb
and
xor
pop
dec
jb
fnstenv
inc
inc
in
movd
sbb
arpl
js
add
scas
lcall
add
out
lock
or
outsl
loope
jmp
xchg
cs
enter
mov
adc
jae
xchg
subl
hlt
fadds
loop
js
pop
xor
adc
dec
jbe
mov
fildl
je
testb
push
mov
lret
xchg
mov
cmc
loope
sbb
pop
cld
leave
mov
sub
xchg
out
daa
and
or
inc
lret
xor
jg
jne
jmp
xor
sti
aas
and
xchg
aam
int
xchg
movsb
insl
push
aad
mov
les
mov
mov
shll
in
in
mov
add
push
nop
jns
pop
fidivrl
nop
fs
cmp
pop
mov
add
or
add
lods
scas
push
inc
push
ret
adc
cmp
mov
push
dec
pop
arpl
imul
es
int3
movsl
xorb
testl
pushf
iret
testb
in
movl
jb
cmc
pop
in
jbe
js
adc
ds
iret
inc
sbb
pushf
mov
lds
push
popf
leave
and
fidivl
test
pop
ljmp
xchg
scas
mov
xor
inc
jnp
into
adc
out
pop
iret
mov
out
dec
std
rclb
mov
out
test
push
fidivrs
jo
out
jmp
jo
fstl
push
repnz
aaa
dec
fnstenv
cwtl
jns
iret
lds
test
dec
cmpsl
adc
and
mov
out
mov
aad
repnz
jno
and
sbb
mov
add
in
push
mov
test
aam
jbe
xchg
push
cmpsl
fldt
pop
popa
inc
jb
and
repnz
dec
mov
jbe
loop
jge
icebp
dec
popf
ss
ja
push
mov
out
pop
and
das
cmpsb
movd
in
aaa
dec
pop
add
test
sbb
aas
sbb
cwtl
subb
out
xchg
jne
jg
gs
xchg
bound
inc
sbb
js
pop
iret
enter
sbb
es
or
pop
dec
sub
repnz
or
xor
je
lods
xor
pop
stc
mov
or
fcoms
xchg
popa
inc
adc
clc
mov
cmpsl
inc
mov
jecxz
sbb
outsb
popa
std
jb
loop
mov
push
sbb
jecxz
dec
cwtl
push
imul
mov
jno
push
mov
jge
dec
jp
std
and
mov
imul
outsb
cmp
inc
out
in
xchg
add
push
add
mov
sbb
test
mov
in
cmp
fisubs
adc
insb
and
nop
adc
in
lods
leave
scas
or
lods
sub
repz
mov
out
inc
lds
out
push
jmp
cld
test
inc
xor
and
imul
pushf
orl
and
xchg
mov
ss
fsubs
inc
cmp
repz
lods
int3
aam
jae
push
xor
and
xchg
stos
push
xchg
fstp
pop
and
pushf
lahf
sbbb
mov
arpl
imul
roll
jle
popa
xor
int
repz
popa
stc
dec
push
fldenv
stc
bnd
sub
push
mov
push
popf
fists
or
imul
pushf
jb
daa
mov
xchg
mov
rcrl
or
repnz
push
pop
les
jns
stos
out
sahf
jno
push
clc
int3
mov
push
movsl
ffreep
mov
fwait
inc
dec
xor
sahf
xchg
push
dec
lret
pop
outsb
adc
cs
dec
jle
jae
dec
lds
sub
sbb
cld
or
mov
loop
adc
jns
inc
mov
mov
lea
sti
dec
loope
imul
inc
sub
mov
xlat
push
adc
scas
ss
cmp
hlt
and
insb
clc
leave
mov
jbe
loopne
loopne
mov
xchg
xchg
pop
ljmp
jle
jl
sarb
popa
sub
pop
lock
jnp
hlt
cmc
mov
imulb
iret
dec
add
sar
jl
inc
mov
sub
adc
xchg
fdivs
xchg
in
jb
stos
add
mov
add
inc
and
sbbb
mov
or
push
push
sti
aad
mov
fsubr
pop
cmp
sub
lods
outsb
loope
jle
mov
mov
jmp
rcrl
mov
in
out
loopne
cmp
in
push
pop
outsb
dec
popf
clc
inc
add
stos
mov
in
pop
lds
mov
add
sbb
and
add
add
nop
xchg
inc
fmull
mov
xchg
inc
stc
mov
jmp
stc
lahf
mov
mov
lea
mov
push
cli
fdivrs
push
push
aas
bound
outsl
insb
push
rep
add
xor
inc
notb
shr
mov
mov
stc
jb
push
mov
xchg
jae
push
push
enter
cmp
xor
repnz
jmp
in
and
daa
arpl
lret
push
push
fists
and
jmp
sub
lea
aas
rcpps
pop
aaa
in
lahf
mov
cmp
mov
adc
lea
push
jno
js
scas
xor
jle
repz
mov
mov
lock
push
scas
out
xor
dec
xor
cmp
jl
dec
sahf
icebp
das
xor
fs
cli
inc
and
cmp
jo
sbb
fidivs
mov
subb
and
pop
pop
negl
scas
pop
xor
cwtl
inc
stos
orb
jb
xchg
inc
jg
jne
es
xchg
out
imul
ss
push
jp
stc
jo
aaa
std
rcl
adc
cmp
int3
adc
mov
and
pop
fistps
xor
jnp
jno
imul
add
jg
and
sbb
cmp
repz
nop
mov
and
and
cmp
xchg
and
or
lret
cmp
adc
adc
sbb
adc
imul
repnz
lret
jg
sub
es
push
push
data16
cwtl
addr16
and
ror
xchg
jnp
aad
sbb
mov
xor
subb
pop
sub
sbb
loope
dec
push
pop
cmc
arpl
xchg
hlt
cmp
out
fadds
nop
fldt
or
jge
ss
cmpsb
push
ret
push
int
cwtl
mov
ds
jnp
ds
rcrl
iret
inc
call
rorb
or
hlt
dec
dec
shrl
add
fisttpl
mov
xor
les
mov
aas
push
cs
dec
push
xor
stos
add
fsin
sub
mov
cmp
pop
cmp
mov
iret
add
ljmp
mov
fnstcw
mov
es
bound
les
push
aas
lcall
arpl
xlat
add
lret
xchg
dec
jl
enter
aaa
mov
imull
dec
cmp
test
fcmovnbe
cmpsb
fisubs
ret
aaa
testl
test
lret
xchg
mov
jge
clc
xchg
dec
xor
xor
sbb
cmp
imull
cmp
inc
dec
out
xchg
sub
pop
ja
adcb
cmc
and
aad
les
mov
add
stos
xchg
mov
fisubl
ret
mov
pop
jae
sahf
out
pop
mov
mov
enter
sub
xchg
sbb
inc
stos
test
xor
mov
in
outsb
jae
cmp
xlat
pop
rol
add
bound
and
xchg
jb
push
inc
push
into
add
mov
jae
cmp
imul
call
je
pushf
or
out
dec
cmp
push
mov
cmp
orl
scas
lret
sub
mov
es
adc
mov
aas
dec
mull
sub
pushf
sbb
cmc
je
ret
push
and
das
push
lcall
jmp
xor
sbb
mov
adcl
xchg
call
sbbl
outsl
or
inc
test
aas
in
arpl
inc
jl
mov
mov
pop
jle
lea
movl
jp
loop
sbb
dec
fiadds
imul
jl
into
or
out
ds
test
stos
int3
cli
in
aad
inc
sbbl
popa
in
add
cmc
mov
sbb
add
and
fcomps
imul
inc
mov
mov
incb
pop
test
ds
fdivr
mov
scas
mov
ret
push
idivl
test
rcll
pop
adc
imul
mov
mov
sub
push
push
inc
xchg
stc
fbld
jp
mov
js
jl
mov
cmp
xchg
rcl
arpl
push
sbb
pop
leave
mov
mov
mov
ret
add
xor
test
pop
mov
push
rcr
into
adc
shrl
xchg
fidivl
or
cmp
jne
jl
pushf
mov
cmp
movsb
inc
dec
pop
dec
lahf
in
dec
dec
test
leave
jns
dec
lret
int3
sub
lcall
pop
inc
shlb
dec
sti
mov
shr
dec
bound
sahf
div
jae
dec
lcall
ss
imul
push
lret
jecxz
ja
mov
jo
outsb
aas
inc
adc
lahf
sub
mov
cmp
and
je
xchg
push
xchg
in
mov
clc
aam
mov
sub
xchg
jmp
pop
out
cli
insl
dec
sub
adc
out
cmpsl
add
inc
loope
lret
scas
jmp
inc
mov
rorl
repnz
push
cwtl
jge
dec
pop
stos
xor
and
mov
pop
mov
push
add
xchg
pop
cli
push
ljmp
jle
out
in
mov
sub
mov
xor
mov
ljmp
add
cmp
jg
cwtl
pop
adc
sbb
imul
sbb
mov
je
mov
cmp
xchg
jmp
jmp
sub
ss
pusha
or
daa
pop
cmp
decl
add
cld
sbb
lea
test
mov
sbb
jg
xchg
mov
mov
jl
fcomps
cmp
stos
cmp
inc
scas
cwtl
test
mov
in
in
enter
cwtl
fcoml
lods
inc
or
cmc
jne
and
and
lret
hlt
push
or
and
ret
adc
mov
inc
dec
cmp
inc
add
dec
add
fisubs
jmp
aas
movsb
lahf
inc
movsl
mov
jo
mov
push
sarb
add
lret
mov
in
xchg
outsl
dec
add
lret
jmp
fsubs
jb
in
into
cmp
sbb
cmc
jge
lock
mov
mov
jmp
lods
mov
mov
sti
xor
es
in
sub
pop
aam
sarl
or
push
add
xchg
in
cmp
inc
lods
je
outsl
adc
lret
sbbl
add
mov
xor
pop
xorl
and
jne
mov
sbb
sarb
loop
xor
lea
dec
mov
xchg
add
lods
xchg
fidivs
lahf
rorb
dec
negl
and
inc
mov
xchg
idivl
sbb
xchg
clc
out
pop
mov
or
out
je
cmp
add
andl
adc
jb
psubsb
mulb
ret
sbb
mov
and
lock
jns
xor
ret
out
mov
cmpsl
pop
rclb
fcmovu
dec
mov
adcb
ss
inc
and
mov
repnz
mov
jae
mulb
enter
push
jge
or
mov
punpckhwd
xor
push
mov
lea
notl
ss
dec
out
out
outsb
sbb
das
mov
iret
adc
pop
test
lea
mov
repz
shrl
add
call
mov
hlt
ja
mov
dec
clc
into
outsl
lret
jne
add
sub
or
in
adc
pop
aam
mulb
out
sahf
mov
or
in
ret
mov
add
loopne
fistpl
adc
jns
or
mov
ljmp
xor
dec
mov
adc
xchg
in
cwtl
insb
add
je
jbe
lret
mov
inc
cmp
lcall
stos
repnz
les
and
or
xlat
test
push
pop
xor
sub
rcrl
lds
aas
aad
jbe
xchg
mov
lcall
inc
fstl
mov
fstpt
inc
lret
or
and
test
fnstsw
lock
mov
aam
sbb
mov
and
lahf
inc
in
rolb
sbb
sbb
cmc
push
mov
cmpsb
mov
test
int
mov
push
lret
pop
fbld
or
in
int3
mov
mov
fnstcw
loop
mov
iret
out
sbb
sub
add
pop
mov
ja
int
into
call
int3
stos
cmpsl
add
pop
loopne
cmp
iret
ds
aam
sahf
lret
sbb
lahf
push
sbb
std
jno
push
outsb
mov
imul
mov
sub
cmp
stos
imull
adc
push
psadbw
push
jmp
jg
cld
jns
push
in
xor
mov
rolb
xchg
sub
dec
add
or
xchg
and
dec
cltd
fsubrs
mov
aam
push
cmp
ds
jg
add
xchg
int
ja
out
add
mov
and
fimull
jne,pn
inc
stc
dec
iretw
rcl
cmp
js
pop
outsl
in
push
mov
lods
mov
jne
adc
mov
packuswb
fwait
mov
mov
push
outsb
inc
faddl
xorl
filds
ljmp
dec
dec
je
cmp
repnz
jecxz
xor
aam
xor
add
dec
pushf
std
or
shll
pop
sub
pop
rcll
jg
imul
shll
mov
and
shrl
clc
bound
add
popf
push
pop
lods
jmp
inc
shrb
roll
cmp
jg
push
pop
mov
imul
in
out
dec
stos
mov
xor
lds
out
cmp
xor
or
lea
loopne
fldcw
push
pushfw
xchg
lcall
or
mov
test
addb
sub
jmp
aaa
scas
clc
fidivrl
adc
mov
mov
inc
mov
or
test
leave
dec
jne
mov
sub
xchg
out
sbb
into
shlb
and
arpl
cmc
je
jecxz
push
mov
jbe
adc
pop
pop
inc
push
push
xor
lcall
data16
loopne
dec
imul
dec
mov
rclb
push
inc
mov
loopne
inc
es
cmp
popa
dec
lea
pop
nop
cmp
xor
loopne
dec
cmp
lods
jge
mov
in
int
pop
ret
ss
sub
inc
arpl
aas
ret
xchg
adc
cwtl
insb
pop
shrl
xchg
rol
fwait
mov
pop
jbe
pop
sahf
mov
jle
push
push
ljmp
int3
pop
ror
mov
mov
cmpsb
sarb
loope
push
sbb
pop
adc
jl
mov
jb
out
repz
leave
mov
cmp
adc
insl
into
sahf
adc
roll
and
stos
xor
lcall
sub
mov
xchg
push
mov
rorb
sbb
movsl
in
mov
fdivl
sbb
jle
fstps
sub
add
and
clc
sbb
in
imul
sub
out
aas
mov
cltd
jbe
add
mov
or
rcl
xchg
movsb
push
std
int3
mov
shlb
daa
and
sub
push
fsubp
fildll
and
orl
rcll
dec
mov
lea
inc
inc
into
dec
neg
add
sti
ret
xor
popa
xor
pop
and
cmp
unpckhps
push
jl
push
pop
ds
cmp
popf
fs
jl
add
cmpsb
cmc
sbb
xchg
mov
faddl
add
shrb
mov
xor
cmpsl
aas
sub
outsb
and
test
or
mov
les
mov
push
jmp
cli
cmpsl
lret
adc
daa
leave
mov
mov
lcall
andb
cmp
mov
add
decb
or
or
jmp
pop
push
pop
push
mov
xchg
jge
pop
cmpsl
movsl
les
cmpl
sbb
stos
mov
lret
xor
int3
stc
jno
lock
fisubs
dec
jmp
dec
dec
sub
cmp
ret
out
stos
push
dec
sub
adc
fisubrs
repz
mov
hlt
push
sub
inc
nop
movsl
pop
adc
sti
in
push
iret
call
lret
mov
aad
rclb
xor
dec
paddsb
xchg
insl
mov
movl
arpl
shll
sbb
xor
inc
sub
or
mov
fadd
mov
std
and
jecxz
or
fs
dec
or
jecxz
adc
out
sbb
jl
push
push
test
in
std
cmp
jg
enter
call
push
fsubp
pop
add
fsubl
or
lods
mov
mov
lea
aas
insb
das
sub
mov
pop
jle
data16
pop
je
js
movsb
ret
push
dec
cltd
sub
shlb
stos
push
sub
jmp
scas
or
push
mov
mov
enter
dec
jbe
pop
inc
es
in
in
cmpb
mov
iret
movsb
mov
inc
pop
ja
push
sub
js
or
jne
orl
inc
ret
out
or
inc
mov
or
mov
inc
into
cmp
jb
add
jmp
mov
sbb
and
mov
push
imul
xor
xor
out
stos
test
leave
enter
hlt
call
ret
rclb
pop
and
xchg
inc
test
jp
cmp
mov
mov
fidivrl
adc
cmp
push
dec
iret
adc
idivl
insl
ret
es
rcl
mov
ss
lahf
outsb
pop
les
push
loope
add
das
add
sub
stos
ja
out
mov
jbe
adc
stc
test
rcll
push
cmp
loop
fsubrl
scas
and
mov
sbb
mov
xchg
decl
or
imul
into
addr16
push
idivb
test
xor
mov
push
mov
addr16
dec
xchg
add
push
sbb
jmp
sbb
fldcw
mov
pusha
cmp
pusha
xor
addl
jmp
mov
sub
adc
mov
movsb
push
cmpsb
shl
adc
jnp
fs
rclb
sbb
sbb
mov
push
loop
into
mov
sbbb
test
int3
lcall
mov
js
xchg
les
pop
pop
jle
mov
or
mov
loop
lods
in
daa
xorb
loop
test
aad
jb
enter
outsb
repz
idivl
sbb
cmp
sbb
jl
ja
outsl
pushf
push
loop
ljmp
mov
inc
clc
or
lahf
repz
in
jl
and
dec
xchg
and
mov
insb
add
int
adc
je
sbb
pusha
shll
mov
cmp
repz
out
movsb
mov
cmp
jge
cmp
ret
and
xor
or
movsb
mov
mov
push
and
test
test
adc
push
push
xchg
mov
xchg
rorl
lods
fdivrs
add
sub
mov
out
imul
adc
imull
fs
mov
sub
ja
add
inc
dec
cmp
rclb
push
jno
fbld
push
jle
leave
cmpsb
icebp
mov
out
sbb
fisttps
das
mov
xor
lods
xchg
mov
or
adcl
or
inc
push
in
pop
add
call
or
and
push
or
push
insb
pop
cmpsl
mov
add
das
and
loopne
push
andb
add
dec
xchg
add
outsb
mov
addr16
cmp
lret
mov
sbb
pop
cli
bound
popa
and
loop
mov
push
mov
popa
loope
and
mov
pop
andl
bnd
add
aaa
outsb
cwtl
lea
pop
xchg
xchg
xor
jle
movsb
pop
cmp
cmp
mov
subb
arpl
push
mov
gs
cmp
cli
jbe
xchg
adc
fidivrl
push
dec
xchg
popa
arpl
outsb
inc
mov
fs
pop
cmp
aaa
adc
xor
jns
xor
pop
jge
cmp
shll
mov
lret
mov
lds
jb
scas
in
cltd
sub
cltd
fstp
sbb
cmp
jecxz
mov
sbb
daa
test
test
sbb
ror
mov
cli
xchg
jecxz
leave
popa
pop
adc
cmc
ret
aam
dec
push
xorb
sahf
inc
push
dec
cwtl
out
leave
mov
sub
js
adc
xchg
cmp
gs
jmp
xor
aaa
ret
in
cmovb
sbb
in
loopne
inc
lods
push
push
and
lods
mov
jns
jo
xor
or
outsb
inc
notl
sbb
and
test
scas
xor
pushf
fsubl
cmp
pop
stc
and
adc
in
ret
popf
out
lods
stos
jne
push
mov
jo
test
sarb
sub
mov
mov
repnz
loop
hlt
daa
xchg
cmp
adc
fisttpll
pop
inc
mov
adc
adc
movsl
nop
call
je
mov
xchg
pop
push
outsl
xchg
adc
aaa
jmp
lret
es
lret
dec
jnp
dec
inc
jb
sub
cwtl
sti
popf
jo
push
pop
cwtl
push
xchg
add
mov
out
push
xchg
lods
into
fstps
lret
pop
jne
mov
cld
or
lods
jo
push
xchg
int3
mov
lods
mov
dec
pop
xchg
or
jo
es
mov
sub
repz
mov
ljmp
push
lods
jno
jmp
jl
inc
or
scas
imul
inc
leave
push
stos
out
push
das
test
lcall
cmp
mov
xchg
leave
stc
ljmp
inc
adc
insl
mov
xchg
sbb
test
jo
rclb
pop
adc
bound
add
dec
jmp
les
adc
pushf
outsb
data16
or
in
or
enter
and
adc
inc
xor
jb
lea
std
cld
lret
xlat
jb
pop
scas
stos
sub
es
fwait
mov
xchg
sub
outsl
xchg
cs
jbe
mov
in
xor
pop
lock
and
lret
cmp
in
mov
pop
ljmp
arpl
jmp
outsb
jno
mov
fstpl
add
ret
jne
in
jae
aaa
int
xchg
movsb
pop
aas
add
iret
daa
ljmp
dec
sub
call
xchg
lods
ja
mov
mov
and
ss
sub
inc
in
lea
adc
push
pop
add
andb
xchg
and
sbb
pop
add
push
mov
aad
and
sbb
push
out
mov
imul
or
loope
outsb
lret
cmp
aaa
leave
xlat
divl
scas
mov
fwait
push
call
stos
pushl
les
xor
adc
ljmp
and
xchg
xchg
xchg
popa
push
xchg
dec
xchg
inc
fistps
jbe
lock
or
sbb
daa
cmp
xor
pop
out
and
icebp
hlt
mov
mov
lds
xchg
testl
jge
ljmp
insl
mov
mov
add
sarl
add
add
adc
push
imul
xor
mov
daa
pop
sbb
xor
cmp
fstpt
mov
push
mov
add
pusha
gs
jbe
jne
sbb
adc
cmpsl
lahf
adc
sub
stos
mov
lret
mov
data16
sub
cmp
pop
cmp
dec
out
rcrl
xor
pop
add
cmpsl
imul
js
int3
pop
jge
dec
cli
fldenv
jl
test
ljmp
enter
sbb
sti
add
dec
sub
adcb
add
daa
lcall
popa
fmul
xchg
xlat
xchg
mov
jae
ss
adc
pop
fst
adc
cwtl
dec
pop
jl
repz
stos
mov
pop
mov
dec
sarl
movsl
sbb
jecxz
mov
add
fildll
cmp
pop
lar
out
pop
lret
push
xor
cli
push
xchg
cmc
xchg
adc
and
push
xchg
cwtl
insb
mov
xchg
fadd
enter
xlat
xor
sbb
stos
jp
and
mov
dec
pop
xchg
pusha
cmp
or
es
outsb
push
into
inc
xchg
jb
jae
push
mov
jae
in
mov
mov
mov
push
and
mov
cmp
xor
sub
push
sub
mov
jg
xor
dec
out
lock
repnz
rcrb
sbb
or
in
imul
xor
loope
cmpsl
lea
push
jecxz
pop
sbb
rol
and
shl
push
icebp
jp
cmp
into
lods
adc
sbb
outsl
sub
iret
dec
aad
sbb
dec
cmp
push
imulb
jo
out
mov
dec
sub
in
mov
jbe
popa
adc
xchg
fwait
or
push
fcmovnb
xor
fcmovnbe
mov
stos
bnd
adc
mov
inc
push
push
add
call
sub
into
jge
gs
js
mov
mov
mov
push
mov
dec
in
inc
lds
jo
push
test
dec
nop
shl
lahf
fildl
mov
jnp
lds
fistps
inc
or
push
cmpl
mov
addr16
jle
push
jns
push
aad
cld
jecxz
jp,pn
sbb
lea
fsts
dec
loope
sbb
xchg
mov
or
mov
test
sahf
mov
mov
and
lcall
push
push
enter
sub
dec
repnz
or
fsubl
or
and
clc
decl
pop
dec
mov
sti
pop
incb
cmp
scas
fcomi
inc
xchg
lahf
packssdw
dec
sbbl
test
mov
xor
sbb
outsb
cmp
jecxz
stc
outsb
pushf
fldcw
mov
push
adc
lret
fwait
into
pop
adc
push
mov
popf
dec
cmp
imul
inc
scas
sbb
dec
cmp
jge
jnp
mov
stos
xor
or
in
push
cmovs
jno
out
ds
pusha
mov
inc
in
mov
dec
sbb
popa
jl
or
lods
testb
repz
dec
cmpsb
lcall
int
lea
jbe
orb
lods
int3
sub
cmp
lret
scas
pop
xchg
mov
out
jno
push
mov
movl
ds
mov
mov
add
bound
cs
cmp
mov
loopne
lock
pop
push
push
push
dec
jno
mov
lcallw
jp
cmpsl
outsl
dec
xchg
ret
lret
pusha
xor
jmp
push
fwait
mov
and
mov
enter
cli
jle
fldl
xlat
test
pushf
lds
xor
inc
adc
inc
loopne
cmp
xchg
cmpsb
cmp
push
negb
imul
cwtl
sub
rcrl
and
or
testl
lahf
pop
xchg
xor
lret
insb
cmp
data16
outsl
mov
jo
mov
fwait
jge
dec
sarl
movsl
cmp
cmc
mov
xchg
or
fstps
sbb
xor
ljmp
adcl
xchg
out
addl
cmp
das
push
mov
icebp
ljmp
dec
fnstsw
fcompl
and
pop
into
add
add
mov
sub
inc
adc
int
add
pop
add
sub
jmp
lahf
pop
les
ds
mov
cmp
in
lret
in
iret
jo
test
jnp
imul
mull
push
lahf
mov
xchg
cltd
lcall
lahf
in
inc
in
fs
clc
jo
pop
lcall
call
ficoms
insl
shl
sub
pop
pop
ss
in
sub
movsb
adc
push
xchg
stos
jg
js
mov
in
sub
xchg
lods
sbb
push
dec
add
adc
leave
jmp
inc
int3
pop
scas
je,pt
les
icebp
push
ds
or
sub
pop
adc
notb
or
rorb
pusha
push
or
sub
mov
out
xchg
jnp
adc
inc
stos
shr
dec
pop
dec
add
loope
in
push
jp
pop
ljmp
mov
out
lods
sbb
neg
jg
es
pop
flds
enter
mov
xlat
fmulp
cmp
lea
sub
mov
inc
in
xchg
adc
shlb
test
jo
cli
xchg
xchg
sub
daa
mov
mov
jp
jg
xor
ja
mov
mov
push
xchg
mov
ret
dec
scas
cmp
xor
adc
shlb
ret
fbstp
push
mov
cmp
jg
pop
mov
jle
imul
dec
mov
sub
pop
and
dec
pop
cmpsl
and
push
fidivrs
xchg
jno
xor
adc
mov
mov
sub
mov
fmull
je
cmc
ficomps
mov
andl
push
dec
les
movsb
adc
xor
cltd
sub
mov
cmp
sbb
sub
aam
rorb
popf
mov
test
push
dec
inc
mov
push
pusha
xchg
icebp
lahf
movd
loop
in
sbb
dec
add
addr16
xor
movsl
push
in
and
or
je
jbe
jnp
mov
dec
cmpl
in
jno
pop
lahf
mov
push
fisubrl
sub
sub
data16
out
xchg
jno
leave
in
push
insb
jb
adc
pop
jbe
mov
push
lret
test
cmpl
ret
clc
mov
and
jo
sub
sub
inc
int
push
pop
adc
dec
add
dec
sub
inc
or
and
pop
or
adc
insl
xor
sahf
cmp
fs
bound
cmp
loop
int
lods
jbe
cmpsl
xchg
and
dec
sbb
jecxz
test
mov
adc
cmp
movsl
xor
test
shlb
sub
mov
mov
enter
idiv
mov
xlat
out
jp
ret
aas
mov
out
and
push
imul
dec
pop
and
or
mov
xor
adc
jmp
and
dec
lods
insl
sub
mov
shrb
dec
test
incb
xchg
pusha
pop
sahf
jl
outsl
xlat
lock
lret
or
push
in
dec
add
pop
jo
xchg
jg
icebp
movsb
movsl
enter
test
mov
and
stc
lret
fcomps
lea
imul
int3
push
ja
push
dec
insl
xorl
inc
jno
push
add
stc
jp
cmp
add
popa
stos
icebp
sub
sbb
test
ss
xor
add
popl
repnz
clc
xchg
repz
push
jns
or
je
jne
out
xor
mov
out
insb
in
fidivl
add
lcall
loope
sub
xchg
rol
and
mov
hlt
pushf
cmp
pop
xchg
sahf
cmc
ja
jmp
outsl
imull
outsb
flds
ficompl
push
lahf
loop
aad
out
jmp
or
add
aas
sbb
sahf
inc
dec
mov
fistpl
stos
data16
fimuls
inc
push
pop
test
or
lock
cmp
mulb
xchg
aad
and
pusha
mov
stos
dec
test
call
push
jge
nop
jbe
imul
sub
and
aad
xchg
sbb
test
stos
jle
mov
ja
pop
mov
int
in
dec
jb
stc
and
xchg
mov
dec
xchg
cmp
popf
clc
test
shll
int
or
cwtl
lock
mov
mov
rcll
xchg
mov
hlt
push
jb
bt
out
xchg
sub
cmpsl
xchg
in
sub
fprem1
aad
lods
or
icebp
or
in
xchg
push
bound
sbb
mov
ja
loop
inc
pop
push
xchg
movsb
xchg
mov
pop
ljmp
and
xor
jne
inc
xchg
cli
stos
push
jp
inc
mov
aad
jg
repnz
mov
scas
pop
idivl
insl
jb
addr16
or
and
lods
ja
mulb
push
clc
call
inc
cmp
sub
adc
jg
inc
shr
fisttpll
cmc
and
cmp
push
aad
mov
insb
icebp
cmp
mov
lods
out
fiaddl
mov
test
fs
aas
out
adc
push
enter
test
scas
cltd
and
sub
fisttpl
fimull
lock
ret
jg
insb
into
mov
and
adc
addl
mov
jle
add
imul
or
pop
jo
lods
movsb
in
adc
jae
mov
xor
movsb
fildll
stos
shrl
mov
fldenv
adc
int3
add
inc
aaa
pop
and
inc
orl
inc
cmc
jp
dec
stos
lock
or
sub
sub
and
aad
jecxz
pop
mov
icebp
jecxz
aam
pop
xor
jge
int3
cmpsb
ret
inc
push
mov
mov
out
push
cmpsb
fnstenv
mov
pop
inc
nop
popa
inc
inc
aad
outsb
cwtl
out
fsincos
mov
cmp
flds
fsts
fcmovnu
add
sahf
ss
aas
loope
cltd
dec
ret
push
test
jb
jp
fwait
push
cmpsb
pop
scas
loopne
testb
aas
int3
xor
xor
xchg
pop
loop
insl
mov
pusha
lea
incb
push
mov
es
jge
ds
mov
sub
or
std
int3
jne
rcrb
cmpsb
push
push
sub
fsubp
push
jne
pop
enter
mov
jge
xor
pop
fisubs
out
stc
xor
les
or
mov
aad
or
loop
mov
adc
cmpsb
dec
sbb
sbb
fs
jmp
mov
sahf
mov
scas
push
insl
andb
xor
jo
int
aad
clc
xor
jae
push
mov
into
cwtl
mov
in
in
dec
mov
pop
ljmp
jle
pushf
sbb
push
insb
cmovl
xchg
xor
lret
fnsave
and
adc
adc
mov
out
fstps
imul
inc
shlb
sti
sbb
mov
scas
repnz
hlt
clc
xor
pop
lds
scas
mov
pop
lret
mov
jno
sarl
pusha
sub
fdivrl
push
jge
cs
arpl
sbb
jp
incl
dec
lret
lods
mov
rcll
shll
out
lea
pop
neg
in
sbb
and
or
cmp
sub
add
adc
mov
imul
out
fiaddl
and
rorb
icebp
inc
fwait
pushf
or
push
cmp
mov
push
push
push
xchg
mov
xchg
xchg
int3
xchg
mov
loope
adc
cmp
push
repz
into
push
push
mov
adc
sbb
mov
and
test
push
out
aam
mov
jecxz
mov
sbb
sbb
inc
lea
pop
imul
fwait
xchg
push
inc
outsl
pop
jge
mov
movsl
mov
es
xor
mov
gs
xor
jo
leave
lods
xorb
add
sbb
aas
out
add
cmp
call
test
std
cmp
sbb
jecxz
mov
out
in
xchg
jl
jl
and
test
pusha
cmpsb
jge
pop
pop
mov
cs
and
add
sbb
xor
inc
cli
jno
xchg
shrl
mov
push
sub
leave
das
inc
dec
cmp
addb
xchg
mov
in
imul
jb
sbb
clc
or
test
dec
enter
xchg
scas
fidivrl
mov
leave
pop
fs
push
sub
ljmp
fstpl
imul
jns
int3
add
roll
mov
stos
sbb
addl
lods
jl
xor
mov
xchg
jp
or
mov
aas
pop
sub
dec
arpl
xchg
stc
dec
mov
dec
stos
iret
cmp
in
mov
sbb
inc
out
inc
xor
xchg
daa
jge
or
repnz
shl
push
pop
lods
or
adc
movsl
push
sbb
pop
imul
jecxz
xor
fstp
movsl
mov
sahf
inc
in
pop
cmp
pop
jl
mov
cmc
mov
and
std
outsl
lock
das
mov
mov
lcall
sub
mov
call
pop
add
mov
pop
xorb
stos
mov
xchg
dec
or
into
sbb
sub
push
xor
rorb
xchg
out
cmp
pop
and
mov
sbb
jecxz
pandn
lods
adc
xchg
inc
insl
fcompl
aad
shl
mov
aas
jmp
pop
and
add
fwait
lret
mov
mov
and
add
pop
or
ret
xchg
out
sub
dec
add
pushf
into
adc
inc
rorb
pop
punpckhwd
cmp
add
jb
mov
cmp
or
in
inc
jp
sbbl
ljmp
les
sbb
pushfw
push
cmp
ficoml
mov
ljmp
shll
rcrb
sti
cmp
push
mov
ret
ss
jle
outsl
mov
pushf
loope
bound
add
std
dec
jns
icebp
add
fidivrs
and
pop
or
insl
mull
mov
stos
mov
push
push
cmp
cmp
xor
mov
mov
xor
imul
wbinvd
pop
push
push
aam
fdivl
push
jb
mov
push
adc
rol
inc
and
xchg
jae
adc
jp
push
cwtl
mov
pop
outsl
dec
mov
cmpsl
ficoml
xor
sub
xor
test
out
std
pushf
push
mov
and
loop
adc
jle
cmp
mov
mov
pop
push
lods
cmpsl
je
xor
inc
addr16
mov
add
cltd
or
fldt
fs
xor
push
push
lahf
or
sbb
iret
test
cltd
add
in
mov
jo
sub
inc
lods
add
jb
xor
fxch
fwait
enter
nop
test
fcmovnbe
iret
xorl
in
mov
push
movb
loope
mov
xchg
jecxz
mov
or
cld
scas
sar
xor
cld
sbb
lock
out
call
mov
adc
pushf
sahf
lahf
cmp
int3
ret
lret
hlt
dec
pusha
sbb
push
ljmp
cmp
xchg
fwait
mov
xchg
movsl
jnp
test
ljmp
addr16
jne
dec
insb
scas
call
add
xchg
out
adcl
pop
push
sbb
pop
mov
sub
cmpsb
pop
pop
xchg
mov
test
add
popf
mov
add
je
xor
xchg
insl
mov
fdivl
std
mov
jmp
push
rcl
outsl
cmpsb
imul
insl
lods
lret
cmpsl
cmpsl
adc
enter
push
jbe
stc
pop
cli
dec
xchg
mov
les
xchg
mov
jle
cmpsl
subl
sbb
add
aas
sbb
fs
mov
ds
push
adcb
pop
loope
cmp
out
sub
dec
jns
sarb
frstpm(287
xor
pusha
sti
cmp
or
dec
movsl
cmp
xchg
bound
gs
push
paddsb
dec
dec
lds
imul
movsb
xchg
mov
outsl
fs
sub
mov
cltd
xchg
fwait
loope
leave
xor
loope
push
cld
aas
xor
dec
scas
out
sbb
dec
fidivrl
push
imul
testb
ja
mov
sub
outsl
mov
sub
mov
sahf
testb
lahf
aam
jecxz
loope
movsl
cs
or
int3
adc
or
loop
fdiv
loop
mov
notb
sti
ljmp
sub
cld
sbb
imul
dec
inc
dec
filds
bound
adc
inc
pcmpeqw
or
or
push
fistpll
dec
fwait
add
push
mov
cmpb
cli
cmpsb
faddl
dec
dec
jp
cmp
mov
mov
shlb
popa
jnp
jge
adc
loop
filds
xor
in
mov
adc
push
add
pop
jp
js
and
movsl
test
lea
add
add
xor
sub
mov
in
cmpsl
outsb
fadds
xlat
xchg
int
incl
xchg
jecxz
sub
mov
imul
pop
jle
fisubl
fistps
pusha
adc
loopne
stc
push
inc
negl
mov
shrl
inc
and
xor
fisttpll
xchg
cwtl
rolb
lods
cltd
mov
aas
data16
dec
insl
mov
popa
push
lea
mov
mov
add
lret
fstpt
int
cmpl
pop
dec
sub
std
xor
inc
flds
xchg
int3
and
push
inc
mov
nop
setl
lods
loope
outsl
popa
jns
mov
push
inc
shrb
inc
jge
sbb
mov
loopne
jle
push
mov
add
inc
sbb
cltd
sub
push
add
sbb
insb
filds
pop
into
shrl
push
xchg
leave
adc
es
cld
int3
mov
in
xchg
pop
xlat
mov
ret
lock
stc
mov
jmp
popa
dec
lret
adc
lret
push
mov
sbb
inc
mov
cmc
fdivrl
xchg
addr16
mov
pusha
das
test
dec
cmp
iret
addl
rorl
dec
insl
sbbb
xor
pusha
push
add
xor
mov
das
lock
sbb
jle
jle
bound
setns
mov
loope
mov
pop
stc
push
sarb
add
xchg
insb
cmp
pop
in
and
dec
bound
int
dec
pop
xor
dec
push
xchg
dec
fnstcw
pop
ds
inc
outsb
hlt
jo
xchg
cmc
sub
jae
mov
xor
xchg
cmp
movsb
mov
lret
add
mov
popa
fldt
out
jnp
lods
and
adc
push
iret
bound
dec
lcall
je
add
aas
pop
out
inc
add
dec
and
xchg
mov
adc
cmpsl
ljmp
cmpsl
sub
xchg
jmp
sub
sbb
jge
adc
loopne
imul
mull
jmp
push
movsl
mov
roll
shll
subb
jnp
cmp
xlat
inc
jmp
lss
sbb
push
inc
sub
shl
inc
xchg
push
adc
pop
jge
mov
push
lcall
es
lock
in
add
ljmp
testl
frndint
lds
movsb
enter
popa
imul
cltd
sbb
cmp
adc
lock
jle
jbe
or
cmpsl
bound
cli
inc
dec
or
xchg
addr16
dec
dec
repnz
ds
cltd
inc
xor
mov
jns
sarl
stc
sbb
cmpsl
stos
mov
push
xlat
sarl
mov
cmp
sub
lea
into
hlt
push
push
out
jg
icebp
mov
and
test
aam
fmull
or
cmp
fprem
adc
loop
pusha
push
adc
loop
mov
cmp
sbb
imul
fisttpl
add
xor
mov
mov
pop
andb
inc
sub
mov
stos
out
lock
sub
jnp
or
ja
loopne
adc
cmp
xor
pop
mov
jo
pop
push
add
jno
dec
push
jmp
push
popf
js
cmpsb
sub
ljmp
mov
ficoml
sbb
add
pop
stc
jle
int
add
out
sbb
mov
or
xor
adc
mov
cltd
cmp
les
insb
dec
pop
cmp
cli
filds
sub
dec
mov
and
out
cmp
out
das
jne
cld
sbb
dec
sbb
adc
xorb
mov
and
and
xchg
inc
loopne
adc
jae
cmp
mov
add
mov
or
jp
insl
mov
or
scas
add
push
mov
movsb
mov
lret
xor
pop
arpl
jo
and
out
cmp
fisubrl
xchg
in
scas
lds
cmc
pusha
ret
insb
loop
and
in
popf
inc
outsl
mov
xchg
xlat
sahf
iret
mov
ss
cmc
out
adc
inc
xor
adc
xchg
xchg
inc
xchg
mov
pop
gs
lcall
jmp
bnd
cmc
or
addr16
cltd
mov
cmp
jno
rorb
pop
xchg
mov
insb
push
lea
nop
xor
cmp
pop
adc
push
mov
lea
adc
data16
cs
inc
notb
stc
hlt
xchg
insb
mov
loopne
mov
rol
fs
ror
and
cmp
add
dec
inc
jb
es
push
mov
dec
mov
or
imul
cmp
int3
xchg
jb,pn
xor
mov
les
outsb
cmp
xchg
dec
cmc
popf
xlat
lahf
sbb
cmp
out
lods
jg
mov
mov
scas
rol
pop
mov
xor
lahf
iret
aas
popa
dec
stc
push
push
insl
cmc
rorb
insb
add
inc
pusha
xchg
mov
mov
and
adc
jg
jbe
outsl
cmp
sbb
mov
divb
jmp
pop
mov
push
mov
into
cmpb
rcrl
dec
ljmp
or
cmpsb
fwait
icebp
jo
xor
roll
xor
enter
push
or
mov
js
lods
mov
lods
iret
ljmp
mov
xchg
push
inc
push
sbb
push
xchg
scas
or
adc
mov
cmp
outsl
push
inc
cli
or
cltd
dec
lret
ljmp
mov
mov
jae
pushf
mov
adc
shlb
out
sub
aad
gs
inc
push
cmp
scas
ja
clc
push
pop
fs
adc
dec
clc
jb
insl
hlt
pop
dec
or
aam
fwait
orb
in
adc
mov
inc
xchg
mov
in
or
xchg
movsb
xchg
adc
xlat
ror
les
push
int
mov
push
scas
insl
insb
pop
and
cmp
cmp
fwait
scas
cmp
repz
scas
pop
xchg
dec
fs
and
dec
add
pop
push
mov
jbe
sub
icebp
pop
sahf
enter
push
call
mov
les
inc
dec
pop
aaa
out
inc
push
xor
int
cmp
push
imulb
jg
mov
mov
xchg
movsl
and
ret
jo
xchg
jb
add
mov
adcl
icebp
or
xchg
ljmp
cmp
loopne
aaa
dec
push
push
sub
cli
and
mov
xchg
pop
into
jp
roll
or
xchg
std
lock
push
aaa
sbb
sbb
pop
popa
repnz
inc
cmpsb
rol
shll
jns
jl
not
imul
mov
cmpsl
leave
stos
test
ss
stos
mov
push
les
or
jnp
adc
cltd
rclb
cli
sar
imul
orl
scas
es
xchg
jmp
cli
adc
sbb
ja
out
shlb
sub
ret
inc
jmp
addb
dec
gs
jns
adc
ljmp
push
jbe
cwtl
jl
jl
mov
je
faddl
mov
pop
data16
enter
daa
adc
mov
push
das
aas
or
repz
pop
pop
or
cmp
icebp
jne
push
or
mov
push
outsl
sub
lret
push
mov
pop
insb
or
inc
adc
stos
mov
xor
fdivrl
cmp
add
and
pop
in
xchg
cmpsl
push
jo
rorl
lcall
cld
out
faddl
add
sbb
jb
sub
cmp
call
xor
add
add
sub
jp
jbe
mov
shl
test
enter
inc
lds
arpl
mov
pop
mov
sbb
jle
cmp
loop
call
js
call
aas
shll
fists
fwait
mov
idivl
call
popa
and
jge
jle
pop
data16
push
test
movsl
jb
adcb
sbb
push
sahf
or
xor
cli
repz
jg
pushf
imul
mov
or
and
cmp
ja
fdiv
dec
sub
pop
adc
mov
mov
push
dec
or
pop
jne
loopne
xchg
pop
xorb
cli
jp
xchg
outsl
int
push
movsl
sbb
ret
jle
pop
pushf
mov
popf
mov
cltd
fcompl
mov
or
xchg
mov
imul
push
fidivrl
negl
inc
xor
les
pop
lahf
jnp
sahf
mov
outsb
sub
dec
js
icebp
xchg
mov
mov
pop
loop
int3
xchg
and
lods
aam
das
into
or
scas
mov
test
pop
xor
scas
xchg
jo
lds
xor
bound
adc
mov
pop
cltd
pop
sbb
mov
dec
bound
lret
movsb
scas
stos
iret
fidivl
push
cmpsb
icebp
mov
arpl
adc
jo
rorb
sti
cs
mov
cmpsl
and
xor
push
notl
cmpsl
fbld
inc
mov
std
sub
rcrb
notl
fcoms
call
stc
or
lret
sub
xchg
cwtl
sbb
addb
sbb
mov
add
adc
fistps
fwait
and
mov
jae
cmp
inc
fnsave
imul
sbbl
sub
pop
and
sbb
pop
inc
jne
mov
sbb
dec
ret
pop
push
xchg
jecxz
sahf
js
jo
or
xor
hlt
push
dec
je
ds
out
xor
jo
adc
xchg
out
push
jle
jno
dec
lret
std
and
js
scas
jl
orb
inc
rcrb
jmp
xor
lods
cwtl
in
jl
gs
fs
mull
or
rorl
cmp
les
in
pushf
xchg
movsb
push
pop
outsb
pop
in
push
add
es
fwait
push
dec
jns
xchg
pop
adc
push
test
adc
in
jg
movsl
in
loope
vpsubb
sub
jae
cmp
fimuls
fs
enter
int3
imul
jno
fdivrp
sahf
xchg
iret
ficompl
lea
and
adc
ljmp
aas
test
fistpl
sub
mov
and
add
push
push
fucom
xchg
add
movsl
mov
test
and
jno
stos
cmc
adc
in
fdivl
or
pop
imul
aam
jno
gs
fcoms
pop
movsb
inc
jno
add
jne
push
shrl
xlat
and
mov
mul
push
mov
and
lods
bswap
jmp
movsl
mov
out
push
pop
mov
mov
outsl
add
insb
jae
out
pusha
addr16
lock
pop
dec
es
shll
pop
xor
cld
sarl
test
les
lcall
ret
xlat
stos
pop
inc
jle
inc
mov
popa
cmp
les
xchg
xorb
sar
dec
push
roll
fucompp
cs
inc
push
scas
lds
leave
fistpll
jo
pop
mov
sbb
push
jo
cmp
aaa
xor
pushf
adc
testl
mov
mov
sub
xorb
pop
shrl
fistl
jg
jl
clc
jno
lds
cmp
xor
int
pusha
mov
ja
sub
jb
setle
popa
ds
stos
sub
xchg
int3
sub
push
dec
jecxz
mov
lcall
orl
sub
push
xorb
insb
lret
lcall
sbb
ret
testl
lods
xchg
dec
mov
xchg
aam
mov
dec
add
lret
pushf
fmuls
int3
in
xchg
lock
or
into
mov
push
add
sbb
sbb
js
cmp
fists
out
outsl
sbb
cld
sub
mov
xor
inc
orl
out
rorb
rcrb
enter
das
xacquire
out
sbbl
dec
in
or
xchg
push
add
jb
insb
repz
xchg
dec
scas
sbb
push
pop
std
movsl
fstl
mov
push
test
xlat
mov
mov
bound
add
rcrb
clc
rcr
fdivrs
and
push
cmpsl
subb
dec
rcr
pop
fidivs
sbb
cwtl
imul
sub
icebp
or
call
outsb
shr
mov
sub
add
dec
mov
imul
in
mov
mov
cwtl
jnp
sub
adc
jmp
pop
push
punpckhwd
out
and
add
sahf
or
imul
or
or
adc
adc
adc
ss
pop
or
jbe
je
adc
or
sbb
mov
cmp
pop
filds
into
mov
lea
jmp
pop
jnp
adc
ror
cmpsb
stc
sub
movsl
and
jp
jmp
lods
out
sbb
loopne
sti
dec
pop
aas
or
insl
lcall
leave
data16
inc
mov
adc
in
add
les
insl
inc
sbb
fsubrs
xor
push
inc
cmp
sub
dec
mov
das
mov
sbb
mov
lcall
data16
pop
lahf
push
dec
xchg
xor
add
sub
scas
cmp
xchg
stos
mov
clc
sub
push
cmp
jb
ficompl
add
cmp
ret
ja
cs
cltd
cmpsl
or
pop
push
fs
adc
push
inc
pop
add
jo
roll
repnz
pop
test
daa
jle
cmc
std
and
loopne
loopne
pop
repz
pop
pop
call
cmpsb
jl
mov
push
jne
push
fists
pusha
pop
neg
fisttps
shl
std
sbb
lods
push
dec
das
lods
out
and
jp
sub
xor
cmp
call
fcmove
cld
xchg
out
cmp
subl
sete
xchg
pop
ret
push
cmpsl
lret
push
mov
sbb
test
push
sbb
pop
dec
adcl
loope
stc
movsl
stos
pushf
adc
hlt
inc
xchg
adc
lret
sub
cltd
mov
mov
popa
xchg
lret
jns
mov
adc
adc
push
ja
orb
push
cli
fnstenv
xlat
dec
test
pop
scas
xor
ror
adc
mov
jnp
les
fs
fcmovnbe
mov
sub
cmp
sbb
cmp
loop
andl
lret
inc
out
lahf
mov
imul
imul
mov
icebp
add
mov
cmp
xchg
mov
dec
imul
das
out
ljmp
or
pushf
andb
pop
push
rorb
sahf
cmp
jmp
jb
mulb
jl
jmp
mov
ljmp
mov
mov
pop
cli
fcoms
aam
sub
fwait
cmp
scas
xor
adc
jnp
adc
mov
arpl
cwtl
fistpll
mov
adcb
cmp
cmp
xor
fldcw
testl
scas
out
imul
jle
lcall
jo
comiss
jo
and
loope
bnd
in
and
into
xchg
out
ljmp
int
xchg
xchg
adc
xor
sbb
popf
cltd
jnp
stos
ljmp
xchg
and
int3
movsl
push
sbb
jle
imul
push
push
sub
mov
pop
xor
lcall
negb
push
or
mov
daa
nop
shll
inc
sub
scas
xchg
pop
xchg
inc
imul
sub
inc
mov
sub
push
pop
xchg
push
aaa
add
pop
inc
call
mov
rcrb
inc
sub
in
cld
mov
jg
push
imul
mov
push
imul
addr16
enter
pop
sahf
imul
inc
gs
mov
inc
inc
cmp
mov
push
cmp
subl
cmp
pop
push
pushf
pop
mov
pusha
fs
or
jnp
fcoms
rolb
sub
fwait
out
addb
mov
lea
inc
int
fisttps
aam
mov
lret
ljmp
sahf
aas
and
test
cld
jmp
pop
mov
mov
mov
cmp
sahf
cmpsl
insl
adc
scas
sbb
pop
cmp
gs
sbb
mov
jne
mov
sahf
push
ret
push
cmp
cli
push
out
mov
add
clc
into
popf
mov
dec
sub
jae
jl
mov
mov
lock
cmp
outsl
aad
insb
add
in
cmpsl
mov
dec
mov
push
xchg
movsl
stos
lahf
stos
push
cli
mov
jo
cmp
mov
xchg
mov
pusha
xchg
imul
in
into
pop
inc
or
loop
fwait
int
push
xor
cmp
xchg
sub
or
ds
imul
mov
jl
push
push
sbb
repz
popa
add
and
dec
dec
inc
les
lahf
int3
pop
push
int
jbe
add
mov
push
or
or
lea
xchg
ret
mov
shrb
jg
inc
aaa
stc
imul
mov
inc
rcl
pop
ret
xor
mov
notl
mov
dec
into
or
jmp
call
out
pop
mov
mov
mov
aas
sbb
add
jmp
push
cmp
push
arpl
jge
pushaw
pushl
loopne
lcall
push
mov
loop
in
cwtl
stos
inc
pop
jb
jg
out
inc
mov
mov
xlat
sahf
ja
orl
ficomps
pop
lods
lock
jge
xchg
pusha
dec
ds
mov
stc
jle
mov
cmp
xor
push
dec
int3
lea
insl
mov
push
jg
mov
xchg
fcompl
loopne
lcall
incb
flds
push
jns
adc
fstps
xor
mov
sbb
aad
fistps
dec
outsb
rolb
mov
les
dec
xor
div
xor
fwait
sub
cs
std
jg
ljmp
les
mov
das
lret
test
cltd
stos
cli
mov
int3
movsb
add
inc
jp,pn
mov
adc
lret
stos
pop
dec
int
and
inc
int
adc
int3
jb
fisttpll
leave
fcoms
bound
loopne
sbb
int3
jne
mov
ret
xchg
nop
mov
push
aas
icebp
stc
jnp
shrl
icebp
push
inc
dec
sub
icebp
xchg
sbb
mov
loope
cmp
cwtl
fs
cmp
out
jl
loopne
repz
mov
cmp
xchg
xchg
movsb
add
cmp
push
fdivrs
imul
or
mov
je
in
test
fdivrl
rsm
sbb
shr
pop
and
and
int3
int3
jmp
andb
xchg
pop
xor
lds
lahf
aam
xchg
and
cmp
icebp
mov
cwtl
inc
xchg
loopne
push
sbbl
inc
sahf
adc
and
test
lret
dec
cld
jno
inc
push
fnstenv
es
sbb
mov
add
dec
lret
sub
pop
jnp
addr16
repnz
mov
and
inc
in
cli
cmp
pushf
and
cmp
icebp
and
push
pop
or
cmp
dec
xlat
mov
in
sbb
add
adc
movsl
mov
push
inc
dec
mov
sbb
in
pop
mov
cs
mov
cltd
inc
aaa
push
ja
sarb
xchg
cmpsl
mov
lea
idivb
bound
cli
ret
push
leave
cli
or
jecxz
mov
dec
mov
jbe
pushf
shl
and
cmpsl
inc
subb
jle
jmp
hlt
cwtl
push
xor
icebp
push
mov
outsl
inc
pop
out
cli
stos
stos
jp
sbb
mov
repnz
test
inc
sbb
inc
shll
add
shrl
das
aas
inc
mov
nop
bound
cld
out
jb
dec
mov
or
push
xchg
and
out
shrl
or
lods
insl
pusha
sbb
push
adc
add
add
inc
ja
repz
cmp
daa
pop
sub
cmp
mov
out
repnz
out
into
test
rcl
shll
pusha
mov
sbb
pop
call
repnz
mov
adcb
dec
add
stos
cmp
xor
leave
push
or
pop
jg
sahf
les
daa
and
sbb
push
add
push
sub
pop
popa
jp
das
mov
lock
pop
out
dec
ljmp
mov
mov
inc
lret
shll
mov
and
and
lcall
pusha
daa
lods
ja
push
outsb
adc
aaa
xchg
dec
psubusb
stos
aaa
daa
adc
sub
adc
or
lods
in
sbb
fcomps
pop
out
and
inc
in
popf
cmp
ror
cmc
mov
dec
adc
mov
xor
orb
sbb
stos
mov
or
addr16
xor
mov
aaa
aad
xor
lods
or
enter
dec
lods
pop
cmp
pushf
mov
xor
xchg
inc
mov
cmpsl
call
mov
sti
mov
inc
bound
pop
push
ret
cmpsl
cwtl
sub
push
sub
jns
push
mov
in
push
pop
pop
andl
or
push
xchg
fmuls
push
pop
rorl
lods
mov
dec
add
pop
dec
imul
aad
xchg
or
icebp
popf
leave
dec
pop
cmp
js,pn
decl
inc
movsb
fs
jge
mov
popf
sahf
cld
mov
out
mov
out
lcall
stos
mov
testb
fs
inc
shlb
hlt
xor
push
inc
das
mulb
stos
sbb
adc
aam
xchg
dec
and
dec
mov
lock
xchg
push
out
imul
inc
pop
cmpl
add
push
cld
jnp
rorb
and
js
scas
xor
push
dec
or
call
pop
adc
push
adc
loopne
mov
jo
idivb
scas
ljmp
loope
mov
or
sbb
pop
xchg
cmp
scas
cmc
ror
fadds
mov
in
sbb
dec
out
mov
inc
xchg
cmp
mov
lods
in
xor
push
mov
jp
enter
fmuls
jecxz
adc
mov
movswl
xchg
sub
insb
fbstp
and
ret
inc
inc
jg
dec
jne
and
imul
jbe
and
imul
loopne
xor
aas
push
test
sub
and
mov
jmp
mov
inc
dec
xor
addr16
dec
into
lods
fdivs
dec
adc
ret
dec
and
dec
imul
test
fiaddl
out
sbb
push
sbb
clc
pop
rorb
add
clc
add
fwait
mov
cmpsb
mov
and
repz
es
jno
jecxz
addr16
repz
lock
mov
lock
mov
xor
jmp
fadd
shl
mov
mov
ja
jle
xchg
add
push
mov
cmp
sbb
shll
mov
jl
cmp
loopne
mov
ret
sub
xchg
cmp
ret
xchg
daa
mov
mov
movsb
mov
fcomp
mov
pop
push
jg
xchg
pop
jnp
scas
cmp
movsb
xorl
cmp
adc
insl
out
xor
mov
in
rorl
fwait
mov
sub
ss
dec
push
cmpsb
jmp
pop
into
push
test
adc
dec
test
pop
lods
push
sbb
push
inc
add
fimull
jecxz
mov
loopne
jae
and
lea
or
repnz
xor
in
addr16
sub
daa
xchg
push
jp
jmp
lds
adc
fidivs
cmp
shl
jl,pn
out
inc
add
mov
rorl
and
fisubrl
mov
cld
data16
mov
sarb
cmpsb
lods
adc
mov
out
stc
loopne
fnstcw
or
gs
pop
into
adc
inc
int3
ret
inc
mov
sbb
mov
mov
lods
test
iret
and
and
and
and
data16
hlt
and
loop
dec
enter
fsqrt
jo
rorl
cmp
jb
sbb
xlat
inc
push
int
cmp
jno
jp
clc
mov
call
into
int
mov
cmp
adc
cli
xchg
insb
jg
fst
and
jbe
outsb
in
jbe
adc
or
pop
fiadds
lcall
pop
cmpl
sarb
mov
jne
fsubrp
jns
cwtl
xchg
es
std
stos
andl
xor
jbe
outsb
mov
xchg
js
arpl
into
sub
outsl
dec
dec
cmp
bound
push
dec
cvtpi2ps
mov
icebp
test
and
hlt
push
imull
jle
pop
pop
loope
xchg
fsubrp
push
cmp
xchg
jle
jo
je
mov
test
add
cmc
lret
add
mov
repnz
mov
pop
mov
sahf
movaps
sbb
jne
ret
iret
test
inc
or
xor
lods
adc
push
sub
mov
lret
lret
sbb
test
and
bound
sbb
mov
movq
jp
into
xor
mov
push
mov
stos
jnp
jle
js
lock
jp
cmpb
stos
and
sbb
nop
inc
xchg
mov
test
insl
xchg
cli
cmp
add
and
cmp
adc
into
xor
push
xchg
idiv
sbb
ret
push
out
cmp
bswap
js
pop
inc
push
and
sbb
in
loope
cmpl
sti
rcr
push
neg
cmp
inc
imul
das
sbb
movsb
push
scas
mov
dec
aaa
add
mov
dec
inc
fptan
dec
fisttpl
push
aam
mov
scas
into
cld
jnp
cmp
jne
mov
das
inc
popa
jmp
sub
ss
lret
call
cwtl
sti
jbe
xorb
jp
pop
inc
insl
sbb
rcrb
and
and
cltd
pop
orb
es
stos
add
stos
movsb
fwait
cmp
loopne
or
sub
cmp
iret
push
ret
xchg
jne
popf
divl
ljmp
das
movsl
sub
inc
push
dec
ljmp
push
cltd
movsl
inc
push
pop
loop
test
pop
cmp
jbe
xchg
or
inc
xchg
push
sub
pop
add
clc
jbe
xchg
test
ds
cmp
jo
out
sbb
mov
es
add
dec
push
jmp
xchg
sarl
jecxz
push
xor
sbb
imul
inc
fnstsw
sub
test
ds
jo
out
or
dec
inc
cltd
mov
and
pop
js
outsb
mov
and
test
mov
js
pop
incl
adc
inc
pop
push
xchg
mov
inc
push
lahf
pushf
cmpsb
mov
cmp
int
pusha
ret
mov
mov
cld
adc
lds
mov
in
pusha
sbb
test
mov
test
scas
rorl
cmp
mov
hlt
inc
or
sub
adc
mov
pushf
loope
and
iret
ja
mov
call
add
pusha
add
lds
xchg
lods
pop
jmp
test
mov
add
add
andl
aam
insb
arpl
push
jno
push
sahf
sar
pop
xor
mov
dec
ja
sti
xor
nop
movsb
shlb
adc
cwtl
or
cld
into
cmp
mov
xor
pop
mov
jnp
rolb
popf
pop
popa
ja
outsl
sarl
test
imul
cli
xchg
xchg
rcrb
jmp
mov
loopne
stos
push
fmul
nop
js
cltd
jecxz
add
xchg
xor
int3
pop
inc
ja
ret
mov
inc
insb
lods
adc
push
pusha
lods
pop
sahf
cmc
in
stos
mov
and
cli
cmp
mov
xchg
xor
inc
icebp
stos
pop
or
enter
rorl
inc
inc
cwtl
pushf
sbb
and
mov
sub
lcall
dec
aam
test
nop
xchg
mov
cwtl
notb
sbb
cli
scas
sbb
mov
inc
mov
jl
xor
mov
sub
adc
pushf
push
fwait
insl
hlt
pop
sbb
adc
sub
movsb
push
sbb
loop
jbe
inc
mov
out
frstor
or
in
mov
pop
inc
mov
or
xlat
sbb
iret
sub
sub
fucomp
push
iret
push
cmp
jo
pop
jge
and
cmp
pop
pop
loope
hlt
loope
aas
xchg
inc
mov
sbb
mov
mov
outsl
mov
arpl
xor
xor
or
push
sti
xor
xchg
cmp
loopne
sbbb
jae
aam
je
lret
pop
mov
xchg
subb
mov
and
fistps
xor
or
icebp
outsl
mov
aam
xchg
arpl
rcrl
outsb
ja
cmp
xchg
dec
aad
pop
xor
lock
cmova
test
repz
das
repz
jns
cmp
mov
lods
lret
mov
in
sub
or
shll
clc
fldt
jp
push
rcr
ja
add
sub
push
cs
adc
push
repnz
sahf
call
fucomi
mov
push
leave
out
ljmp
or
and
adc
inc
sub
and
pop
jbe
pop
push
or
and
pushf
into
sbb
lret
dec
mov
lcall
lods
push
pop
pop
cmp
insl
push
inc
in
mov
out
popf
pushf
push
out
dec
mov
mov
sub
dec
cmp
dec
js
mov
clc
xchg
nop
addr16
repz
mov
idivl
dec
movhlps
sbb
inc
dec
xor
loopne
mov
push
fcomps
cmp
or
adc
add
popf
test
inc
sbb
and
sub
repnz
sub
lods
add
cmc
je
jae
test
insb
dec
and
cli
cwtl
or
ss
dec
pop
inc
stc
sub
and
clc
push
xor
es
pop
aam
pop
xor
loop
rcrb
test
push
or
scas
sub
pop
mov
jg
arpl
in
faddp
xlat
xlat
leave
push
insl
jg
cmp
loope
mov
or
jb
sbb
mov
fs
lods
insb
and
fisttpll
add
push
negl
call
xchg
into
adc
cli
ja
dec
sahf
or
mov
adc
adc
sub
mov
cmpsl
std
clc
xlat
mov
test
xor
sbb
out
fdivrl
in
xchg
outsl
mov
cmpsb
mov
jp
in
and
lds
fidivl
cmpsl
push
pop
pushf
jl
roll
daa
jecxz
mov
pop
push
lcall
arpl
arpl
and
bound
push
jle
inc
mov
mov
sub
push
push
cmp
rorb
mov
inc
xchg
cli
popf
fcomip
or
out
mov
insl
xchg
test
inc
adc
imul
mov
ss
jle
lea
out
inc
mov
fdivrl
pusha
pop
push
sub
sbb
stos
add
fwait
jecxz
sub
imul
ss
lock
sub
rol
push
lea
lahf
cmpsl
out
lods
jae
sti
jmp
lods
jbe
sub
mov
movsb
adc
fbld
xor
inc
xorl
mov
and
mov
das
nop
dec
mov
adcb
fldl
es
ret
out
data16
aaa
aad
or
sub
mov
mov
adc
mov
sbb
push
fsubs
cmovbe
cmp
sbb
mov
test
xchg
ret
popf
cltd
adc
mov
pushf
rol
roll
test
mov
mov
pushl
push
xchg
jae
jmp
sti
xor
mov
outsb
stc
mov
pop
dec
and
daa
int
jae
mov
sarl
pushl
mov
mov
cld
cmp
dec
pop
mov
mov
fstpt
mov
mov
clc
push
mov
jle
sub
aas
inc
fxch
fcmovu
mov
test
cmp
out
addl
pop
hlt
add
lret
dec
push
and
adc
in
pop
pusha
mov
test
mov
lock
or
adc
stos
cmp
cmp
je
jnp
xor
stc
icebp
hlt
out
push
mov
add
xlat
push
dec
pop
adc
fnstsw
push
pop
sarb
aam
dec
out
bound
int3
add
insb
jmp
mov
fidivl
inc
jg
pusha
mov
mov
aam
test
lods
cwtl
pop
fldcw
pushf
fs
jo
hlt
mov
jnp
fcomip
lea
cmp
or
daa
push
cmpsb
ds
add
je
xor
lcall
dec
lret
push
jecxz
cld
dec
sbb
push
push
clc
dec
fildll
daa
das
add
cmp
mov
push
fwait
jle
xor
push
mov
jns
jmp
or
clc
arpl
dec
dec
lds
rol
adc
or
mov
aaa
sti
test
push
mov
mov
inc
mov
mov
js
cli
adcb
xchg
test
cmpsl
or
push
mov
adc
mov
jns
call
out
jnp
push
fists
pop
push
push
repz
jne
mov
jnp
out
cmp
mov
cs
dec
movsb
test
and
dec
das
fdivs
pop
aam
push
xor
mov
je
push
mov
or
sbb
and
mov
addl
aad
mov
stos
add
pop
cmp
addr16
les
sbb
int
mov
jae
sbb
cmp
dec
pop
rcrl
adc
sti
sub
aaa
push
dec
pop
gs
mov
clc
lods
cltd
mov
rcrl
orl
xchg
push
pop
xor
movsl
imul
sbb
adc
jg
fmuls
dec
ds
pop
or
push
out
mov
subb
sbb
lods
cmp
data16
lcall
cmc
jb
jbe
shrb
xchg
inc
neg
leave
xchg
fs
push
sti
xor
out
inc
mov
lcall
fwait
cld
rolb
jne
icebp
mov
cmp
lcall
repz
fisubs
cwtl
push
rcl
subb
mov
jge
dec
adc
test
mov
xor
mov
mov
jo
adc
mov
test
outsl
por
mov
insl
jge
lods
fstpt
mov
mov
push
inc
cli
lea
imull
sbb
mov
jns
js
fwait
repz
mov
test
insb
sub
push
sbb
cmp
add
lods
jno
testb
xlat
xchg
lds
movsl
jecxz
xchg
ret
bound
test
clc
sti
lahf
xchg
sub
push
push
aam
dec
mov
test
test
stos
xor
arpl
mov
pop
ja
xor
mov
aaa
scas
jae
sbb
scas
push
inc
and
push
movsl
xchg
xor
mov
les
mov
sarl
xchg
cmpsb
inc
cmp
out
sub
fwait
mov
inc
cmp
pop
jl
int3
out
rcll
bound
inc
pop
dec
sahf
lcall
pop
fdivl
aas
fs
sbb
aaa
in
outsl
loop
hlt
out
pop
lods
pop
je
pop
jno
ljmp
mov
daa
jecxz
clc
outsb
mov
push
inc
inc
add
shr
ds
sub
divl
std
mov
and
sbb
test
push
das
jmp
insl
inc
in
dec
mov
pop
faddl
push
popf
aad
sbb
fxch
fisttps
nop
es
scas
mov
or
in
fs
sbb
leave
inc
out
je
ret
jnp
repz
mov
cmp
out
sub
or
adc
mov
adc
popa
inc
arpl
push
sti
inc
mov
or
push
stc
mov
sub
fmuls
xchg
in
xchg
ss
stos
or
jae
pop
shrb
std
dec
cmpsl
fxch
scas
pop
and
or
rcrb
mov
or
divl
out
sbb
les
jbe
shlb
popa
push
imul
jns
sub
dec
lcall
or
les
mov
pop
cs
frstor
mov
inc
jp
les
clc
xchg
rol
mov
arpl
and
sbb
xchg
pop
cmpl
push
fidivrl
cwtl
push
add
jbe
das
maxps
mov
out
pop
bnd
dec
andb
dec
mov
shlb
xor
adc
push
mov
cmp
fnstcw
inc
int3
insl
scas
sahf
lock
ffreep
les
std
xchg
or
xor
xchg
lahf
inc
xchg
sti
jg
push
outsb
lock
pusha
imul
lds
push
xchg
jnp
mov
sbb
cmpsb
push
jb
adc
jno
ficoml
inc
arpl
aaa
test
cld
fimull
scas
add
movsb
xlat
adc
cmp
xor
dec
add
xor
arpl
adc
sbb
lea
pop
rcr
push
cmp
add
lock
in
xor
mov
or
mov
ds
push
loopne
dec
call
inc
pusha
repz
jns
push
adc
lea
sbb
ja
adc
mov
cmpsb
stc
shll
clc
pop
inc
mov
mov
cmp
and
lret
inc
and
pop
js
mov
xchg
and
testb
push
inc
je
mov
orb
xchg
xchg
out
insb
sbb
lea
add
dec
sbb
jge
inc
mov
inc
insl
jno
ja
cmp
sti
xchg
pusha
shl
mov
sub
movsl
or
fnsave
push
jne
inc
test
nop
or
xchg
adc
repnz
lcall
enter
xchg
ljmp
and
mov
and
and
out
mov
dec
add
xchg
jg
dec
jp
push
mov
cs
mov
xchg
or
movsl
test
mov
arpl
lret
sub
nop
xchg
sbb
cmpsl
andb
into
adc
int
out
sub
dec
xlat
rcll
movsb
ret
cwtl
jl
sub
lods
stos
or
mov
jnp
sahf
sub
pslld
inc
cld
stos
fcoms
fdivrp
add
inc
xchg
div
inc
lods
mov
scas
cli
loope
xor
lret
fsubrs
jg
push
pop
repz
out
jmp
dec
mov
mov
es
test
push
adc
das
iret
sub
add
fprem1
xchg
das
std
inc
xchg
cltd
jnp
std
sub
jbe
xor
jp
xor
js
xchg
or
xchg
adc
fisttpl
pop
push
inc
divb
jle
out
cwtl
mov
nop
sbb
push
cmp
push
inc
cmp
daa
dec
jo
sub
xchg
bound
movsl
rorb
cmp
test
sbb
cltd
lea
inc
dec
inc
push
push
enter
push
cli
movsl
sub
jecxz
or
sahf
in
fsubp
dec
jo
adc
inc
leave
add
imul
sar
dec
repnz
aas
push
out
pop
ret
cmp
arpl
mov
jne
xor
mov
adc
or
and
add
bound
sub
mov
and
sahf
xchg
ret
push
fisttps
lahf
loope
fs
sbb
add
fmul
cmp
dec
fdivrs
mov
adc
mov
fsubs
jno
fstpl
pop
and
push
or
adc
mov
fmuls
fdivl
mov
outsl
jae
movsl
adc
das
fstpl
mov
sbb
mov
test
xor
jmp
xorw
cmpsb
fdivrp
leave
repnz
fidivl
sub
sti
pop
mov
stos
pop
adc
int
fnstcw
push
pop
xor
nop
lahf
jge
and
sbb
cmpsb
andl
lds
pop
lods
enter
mov
add
jbe
and
js
add
les
push
adc
ja
xor
add
in
jbe
lds
mov
test
ret
dec
mov
push
int3
xchg
jg
xor
int
mov
xchg
enter
xchg
push
cmpsb
and
stos
jbe,pt
loop
out
lods
mov
cmpsb
shll
mov
and
pushf
add
pop
cmpl
stos
gs
test
repz
adc
xadd
out
mov
hlt
sbbb
out
xor
adc
xchg
cmpsb
mov
test
and
pop
mov
add
xor
pusha
inc
test
outsb
mov
xor
sub
cmc
push
push
addb
jns
jb
in
mov
mov
cli
cld
jle
loope
cmc
sarb
sbb
dec
cwtl
shll
xor
fbld
mov
ss
xor
adc
out
xor
push
je
out
or
jmp
test
int3
notb
inc
stc
jp
repnz
sbb
fistl
daa
out
push
bound
aad
xchg
in
dec
lods
in
sbb
in
push
shl
aaa
and
pushf
dec
pushf
shrb
dec
cmp
xor
dec
fdivl
notb
fwait
xchg
lret
cwtl
leave
jne
push
inc
xorl
daa
jno
push
sub
inc
fwait
push
js
mov
push
push
push
imul
add
out
fimuls
ficompl
xor
jno
in
loop
cmpsl
xchg
push
and
cmpsb
lcall
es
cmp
loope
xchg
pusha
mov
repnz
sbb
mov
movb
xor
sub
xor
aad
pop
mov
mov
iret
stc
jcxz
mov
rcrb
pop
out
jbe
pusha
mov
dec
stc
in
mov
mull
lods
movb
fdiv
cwtl
mov
sbb
lret
rolb
cmp
adcl
inc
add
into
ret
mov
fiaddl
xor
dec
gs
jno
stc
xchg
mov
testl
insb
xchg
movsb
testl
xchg
dec
test
xchg
das
and
and
ja
lods
inc
xchg
inc
xchg
pop
test
adc
xor
clc
lcall
adc
out
push
mov
cltd
adc
fdivrp
in
sbb
addr16
test
inc
push
das
sbb
adcb
test
inc
xor
sbb
movsb
pushf
jecxz
pop
mov
repz
jo
movsb
popa
das
push
jns
sub
loop
enter
xchg
imull
popa
das
mov
stos
mov
rorl
fisttps
fmuls
mov
daa
fsubp
dec
clc
ficoms
or
jle
sbb
mov
pop
mov
dec
dec
aad
lret
cs
and
push
mov
mov
dec
cmp
je
outsl
inc
adc
xchg
sub
fcoml
enter
mov
mov
cmpsb
jne
push
ja
sub
add
jmp
sub
add
aam
xchg
pusha
pop
aad
cmp
sbb
lods
dec
fwait
aad
sgdtl
int3
push
pop
push
mov
adc
jno
pop
mov
test
dec
push
fisttps
inc
mov
rcrb
in
sub
repz
push
inc
lret
cld
adc
test
mov
call
sahf
popf
xlat
mov
out
shll
pop
cmp
ljmp
mov
repnz
xlat
lods
stc
in
cmp
sbb
icebp
insl
inc
push
xchg
js
and
jns
ljmp
jno
jno
gs
or
loope
lds
lea
or
insl
loop
faddl
mov
dec
int3
fistpll
pop
xchg
ret
gs
inc
sub
in
mov
mov
push
jecxz
stos
inc
xlat
sub
into
and
lods
shll
loop
out
sbb
sub
or
and
push
pop
daa
das
mov
fwait
and
or
andb
flds
dec
fcoml
push
fwait
mov
jmp
jae
subl
insb
jno
cmp
sbb
loop
clc
dec
das
movsl
loope,pt
pop
mov
in
adc
icebp
lcall
das
mov
and
and
lcall
adc
mov
pushf
jl
mov
fmuls
adc
adc
addr16
loop
stc
mov
jge
inc
mov
ret
mov
mov
test
mov
imull
inc
cltd
sbb
out
scas
mov
sub
push
repnz
add
outsb
xchg
insb
inc
jge
ljmp
pushf
adcb
adc
mov
fwait
xor
mov
dec
shll
pop
push
or
or
sbb
sbb
pusha
jp
repnz
sub
mov
mov
sub
pop
sti
stc
inc
adc
lds
xor
xchg
aas
popa
cmpsb
leave
popa
outsb
scas
sub
ja
movsl
inc
and
mov
xchg
mov
cmp
shll
mov
negb
int3
roll
mov
cld
or
dec
pop
dec
idivl
call
lret
por
popa
push
and
and
outsb
lahf
pop
mov
fiaddl
movsl
iret
cltd
insl
icebp
push
add
sbb
data16
cmpsb
cmp
in
incl
into
or
mov
pop
rcrb
in
mov
js
mov
jmp
lods
inc
add
ret
xlat
inc
sbb
fadds
popa
push
pop
out
cmpsl
push
or
sbb
mov
dec
pop
scas
popa
es
dec
cmp
dec
daa
mov
and
in
pusha
mov
es
pop
jmp
gs
xorb
movsb
outsb
data16
pop
inc
lcall
jb
push
push
xor
xchg
imul
lret
add
add
cmp
jnp
sbb
mov
je
gs
mov
pop
pop
mov
aam
xchg
mov
dec
push
fldenv
push
std
mov
dec
pushf
mov
inc
mov
mov
mov
js
mov
sbb
sub
cmp
inc
outsl
outsb
pushf
sub
and
mov
xchg
mov
rcrb
and
inc
out
jae
push
fwait
push
dec
shl
stc
mov
lods
pop
pushl
mov
das
add
fwait
outsb
jp
lds
cmpsb
lods
negb
lahf
jo
push
adc
fucomp
subb
push
add
pop
stc
xchg
je
enter
xchg
xlat
xor
xchg
jnp
sbb
repnz
cld
or
loop
shll
and
arpl
fstl
aad
pop
xchg
adc
xchg
adc
lock
mov
out
fdivrs
in
jo
dec
cwtl
jbe
clc
xchg
cli
jb
mov
sub
xchg
xchg
shr
and
test
xor
mov
cmp
jnp
fwait
pop
jae
mov
mov
testb
pushl
dec
xchg
lahf
into
xchg
je
push
insl
dec
sub
mov
sub
aam
or
sbb
fimull
idivb
xor
aaa
ss
mov
mov
sub
mov
int3
jnp
or
es
out
or
push
xchg
xlat
repnz
add
outsb
mov
jae
fimuls
mov
jmp
dec
xchg
outsl
jbe
jbe
lahf
mov
inc
int
neg
jbe
mov
mov
xor
imul
pushf
ss
movsb
xlat
xchg
pop
lahf
add
xchg
xor
pop
fnstsw
sti
mov
push
hlt
mov
movsl
fdiv
movsl
insb
pop
scas
fst
dec
cmpsb
mov
mov
xchg
das
sub
ds
push
lods
lret
add
inc
sbb
pop
sub
jbe
mov
and
inc
iret
mov
lcall
push
dec
jmp
aaa
nop
jns
push
cmpsl
pop
mov
mov
scas
mov
sahf
idiv
leave
mov
push
cmp
mov
inc
cmpsb
sbb
push
lret
push
imul
lret
movsb
cltd
sahf
mov
aas
inc
lock
push
xchg
mov
insb
push
cmp
ret
test
push
into
loope
inc
out
xchg
fldcw
arpl
xchg
jnp
lahf
das
inc
mov
aaa
mov
gs
xor
pusha
scas
jge
stc
adc
jno
lods
xor
dec
in
clc
inc
or
dec
jmp
xor
leave
or
mov
in
jns
sarl
ja
jo
mov
cmp
movsb
ret
adc
fndisi(8087
mov
sbb
ds
xchg
jns
and
adc
mov
fcomi
pop
cwtl
inc
mov
mov
fdivs
mov
mov
cmp
mov
scas
lock
cmp
jle
dec
mov
mov
sbb
bound
sub
mov
and
outsb
cmp
mov
mov
mov
iret
sbb
push
sub
jb
cmp
sbb
cltd
xchg
rolb
mov
and
leave
out
dec
mov
inc
test
xor
push
or
and
mul
dec
add
enter
ss
daa
adc
sub
ss
cmp
cmp
pop
lcall
subl
outsb
sbb
cltd
insl
mov
shr
dec
push
rcrb
mov
enter
mov
adc
push
jmp
loop
push
dec
add
dec
fisttpll
test
idivb
jge
in
repnz
mov
pop
push
mov
loop
pop
or
push
add
mov
xchg
add
es
push
jbe
push
fs
xor
add
lock
jne
dec
imul
mov
adc
inc
xor
popa
pop
stc
filds
or
stc
popf
sub
cld
ret
icebp
cmp
gs
test
jle
adc
cmp
add
imul
push
adcl
or
or
xchg
jne
ljmp
push
cmp
mov
icebp
loopne
mov
jno
testl
call
mov
push
xchg
fcmove
jmp
lret
cli
ds
sub
and
pop
cmp
iret
mov
xlat
gs
jecxz
fildl
push
idiv
push
push
int3
and
sub
repnz
mov
xchg
cwtl
jne
add
xchg
mov
sub
mov
cmpsl
cmpsl
popf
mov
sub
mov
lea
and
jb
and
xchg
inc
jne
or
jle
lret
add
mov
xor
shl
push
inc
mov
push
cmp
pop
imul
loope
jae
xchg
xor
push
ljmp
jge
sbb
cs
jbe
inc
mov
sbb
mov
push
or
push
sub
add
cmp
jecxz
aas
and
sbb
data16
sbb
dec
fstpt
add
inc
movsl
jg
pushf
xor
ljmp
cmp
stos
jmp
int
dec
mov
push
mov
mov
hlt
fidivs
sub
mov
lods
xchg
out
out
add
cmpsl
or
sbb
mov
xchg
mov
and
adc
aam
out
dec
in
pusha
test
pop
add
and
dec
push
test
mov
daa
test
clc
dec
jg
xor
ret
adc
popf
cs
inc
mov
sti
and
mov
pusha
mov
sbb
lods
aas
cmc
push
mov
roll
pop
xor
fwait
dec
popaw
xchg
pusha
mov
sahf
arpl
popa
addr16
outsl
push
cmpsb
pop
negb
inc
mov
push
fiaddl
and
jnp
ja
adc
inc
push
sub
imul
repz
mov
push
jnp
push
cmp
jl
mov
fs
mov
pop
fwait
cwtl
push
lock
les
adc
inc
jbe
inc
pop
sub
mov
aas
sub
out
std
ljmp
xor
cmp
dec
pop
push
test
sbb
popf
xchg
or
push
xchg
pop
out
dec
xchg
or
stc
insb
loopne
arpl
and
icebp
jb
clc
pop
or
jp
dec
icebp
cmp
pushf
jecxz
imul
xor
xorl
xchg
int
gs
ret
mov
iret
mov
add
repnz
iret
and
mov
lds
imul
aas
popf
cmp
inc
test
popa
or
dec
cmp
idivl
arpl
fcomps
shlb
xchg
fsubr
push
loope
cli
push
dec
out
mov
and
inc
out
inc
and
sbbb
out
sub
jle
xorb
insl
xchg
imul
into
es
push
xchg
and
inc
fimull
js
push
inc
jecxz
not
aas
push
mov
mov
out
cmp
test
jno
adc
jmp
int
je
or
cmp
test
push
dec
or
push
add
jmp
add
test
call
mov
shll
push
iret
jo
cmp
arpl
push
movsb
sbb
sbb
popa
das
lret
xchg
or
pop
sbb
je
popa
or
push
inc
mov
mov
and
mov
adc
or
shl
sbb
dec
imul
jecxz
cwtl
jns
pop
jns
pop
icebp
ret
push
callw
sub
jecxz
mov
fmuls
push
sbb
or
push
shlb
std
sub
outsl
gs
add
sub
or
xchg
in
sub
push
sarb
popa
dec
insb
out
out
push
in
fnstcw
adcl
stc
fisubrl
add
test
push
adc
add
and
loopne
imull
mov
pop
std
sub
ret
mov
push
or
sbb
icebp
adc
ja
xor
mov
xor
dec
outsl
mov
mov
sub
xorl
lahf
fs
lcall
push
mul
mov
stc
push
xor
icebp
call
pop
cmpsb
sti
sbb
inc
jbe
imul
adcl
xor
fcoms
out
pushf
in
cmp
jmp
ja
out
sbb
dec
pop
std
pop
out
cli
push
into
sub
aad
xchg
pop
cmpsb
cmpsb
sub
push
cltd
add
lds
push
loop
cwtl
sbb
add
push
mov
mov
ret
in
lock
xchg
pop
scas
jnp
jo
loope
mov
pushf
das
enter
jae
subl
leave
cmpsb
rcl
dec
fs
inc
xor
fldcw
lods
leave
fistps
and
sub
dec
adc
pop
push
call
cs
inc
jmp
outsl
sub
pushf
mov
ja
bound
sub
xchg
das
loopne
mov
cmpsb
aad
jg
sbb
call
ret
add
insb
lea
add
xchg
out
mov
imul
imul
pop
push
cs
push
sub
lods
addl
dec
inc
popf
icebp
push
call
dec
jmp
mov
popa
sahf
cmp
imul
mov
sub
jl
jl
sub
add
ja,pt
outsl
iret
and
push
das
test
mov
cld
cwtl
adc
out
jl
fcom
inc
or
xchg
jbe
sub
test
enter
leave
lahf
js
inc
push
or
aas
jne
xchg
and
movsl
xchg
jns
push
ljmp
mov
add
jb
pop
xor
add
in
or
xchg
push
hlt
sbb
loop
cmpb
and
jb
xor
out
xchg
jmp
jo
sbb
clc
out
rcr
cmpsb
xchg
testb
nop
jmp
add
inc
xor
sahf
aad
or
insb
and
sti
sahf
push
cs
dec
mov
bound
imul
inc
ret
outsb
movzwl
sbb
mov
xchg
jecxz
sub
imul
hlt
mov
pop
movsl
js
pop
pop
dec
insb
mov
dec
lahf
ret
ficompl
push
mov
cmp
push
mov
je
or
call
sbb
push
mov
repnz
xchg
cs
lock
or
xor
js
sti
out
cmpsb
lret
icebp
add
fwait
push
add
in
sti
divb
mov
fidivs
mov
aam
push
idivb
in
or
push
adc
fidivs
pop
addl
mov
jecxz
or
aaa
jle
test
out
sbb
into
cwtl
imul
mov
xchg
pop
lret
stos
pop
mov
inc
xchg
xchg
decb
repnz
data16
movsl
jno
and
xlat
mov
lcall
and
jl
data16
ret
ljmp
cli
push
test
outsb
sti
jne
add
shrl
cmp
mov
pusha
jg
push
cli
cmp
and
andl
jecxz
ret
mov
push
shll
pop
push
sbb
add
repz
fwait
xor
test
fucomi
pop
inc
inc
sub
and
movsl
pushf
jl
xor
cmpsb
js
repnz
stos
sbb
sti
mov
xchg
jmp
or
lds
dec
cmp
insb
and
jae
adc
add
xchg
dec
mov
jmp
lods
mov
icebp
incl
xchg
aad
xor
jnp
inc
subb
add
jns
pop
mov
pop
popf
pusha
xor
inc
cmc
cld
imul
cmp
add
push
add
and
ljmp
movsb
pop
mov
mov
sub
data16
repnz
mov
sub
icebp
fwait
jge
jmp
pusha
dec
arpl
add
push
rorb
insl
mov
and
inc
outsb
imul
imul
scas
xchg
mov
mov
and
lret
mov
icebp
push
fists
adc
push
add
dec
out
imulb
xor
insb
add
jo
divb
pop
movsb
call
inc
repz
mov
sub
loopne
loop
lods
mov
daa
cli
loope
cmp
adc
xorb
dec
pop
sub
add
push
jp
les
sbb
cmp
bound
or
aas
mov
call
jnp
jno
popf
std
inc
cwtl
mov
dec
jp
pop
aas
cs
cs
jae
mov
gs
sti
mov
test
add
imul
add
negb
imul
rcr
push
adc
push
icebp
mov
mov
icebp
jbe
sub
popf
cmp
out
push
cmp
dec
test
adc
fs
bound
mov
int3
sbb
std
mov
xchg
xchg
loopne
push
stc
sahf
sub
movsb
mov
shr
stos
stc
add
sbb
dec
push
mov
scas
mov
mov
ja
add
mov
leave
inc
xor
xlat
popa
bound
inc
pop
jbe
mov
repz
shl
dec
sbb
in
inc
xchg
mov
mov
lods
aam
push
jp
pop
jmp
mov
xchg
fsubrp
inc
int3
mov
sbb
movq
cmp
xlat
mov
or
add
pop
fdivrs
xchg
xchg
xchg
mov
jl
mov
out
mov
movsb
jae
sub
mov
push
sub
push
push
dec
jnp
push
cmp
lods
dec
daa
int3
push
adc
stos
add
jae
addr16
nop
mov
mov
lcall
jmp
cwtl
mov
in
das
sub
mov
mov
xchg
adc
sub
cmpl
adcl
rorl
daa
shll
xorl
xor
mov
or
jl
aaa
add
jl
mov
clc
push
sbb
push
int
adcl
jle
in
push
pop
scas
pop
in
mov
jno
mov
mov
dec
pmaxub
or
movsb
sti
pmaxsw
inc
mov
dec
scas
insl
pop
push
sub
sub
lahf
cli
lds
push
int3
inc
jecxz
and
pop
sub
ret
mov
into
sub
mov
aas
or
insl
cmp
pop
popa
or
addr16
dec
xchg
lods
mov
int
jle
out
mov
add
adc
jno
jecxz
sub
or
lods
out
mov
or
adc
or
dec
mov
fcomps
jle
add
outsl
in
andb
xchg
rcll
neg
stc
mov
les
or
loop
xor
int3
mov
ja
jmp
testl
scas
or
xchg
ret
loopne
jno
jne
mov
inc
push
inc
aas
imulb
inc
jmp
test
movl
pop
mov
cmp
xor
shl
mov
in
scas
xchg
sbb
or
and
cmp
test
pop
add
dec
das
jne
jecxz
cld
rol
push
inc
shl
mov
sub
lret
dec
bound
inc
cs
cmpsl
sbb
arpl
push
dec
dec
andb
add
popf
cmp
fildl
jo
adc
icebp
outsb
push
add
cmovs
adc
loope
lock
call
aam
cmc
mov
jecxz
cmp
lock
pop
negl
popa
mov
in
inc
movsb
push
stos
scas
push
add
imul
jne
movb
ret
jae
cmpsb
or
mov
mov
clc
loop
fnstsw
cld
cmpsb
or
mov
testl
das
inc
cmp
clc
popa
scas
hlt
pop
mov
out
mov
mov
jl
xchg
sbb
mov
adc
jno
mov
add
cmc
sbb
and
inc
push
aaa
mov
adc
pop
push
imul
and
inc
insb
sub
dec
sub
mov
add
xor
mov
xchg
out
inc
dec
rcll
xor
mov
stos
adc
rcll
or
or
je
shlb
cmpsl
loop
imul
test
loop
or
hlt
mov
or
jo
data16
in
xchg
xchg
push
jne
xchg
sbb
frstor
in
clc
add
inc
mov
xor
mov
mov
test
fdivrl
push
cmc
aam
adc
fwait
xchg
popf
mov
daa
das
pusha
dec
cmp
sbb
inc
int3
jns,pt
inc
test
or
or
outsl
and
movsb
data16
adc
divb
js
or
mov
adcb
sbb
cmp
cmp
dec
mov
ljmp
addr16
or
fldcw
sub
repz
fisttpll
push
jbe
and
mov
fwait
mov
xlat
sbb
fimuls
push
pop
cmp
and
mov
push
and
ja
icebp
sbb
mov
dec
adc
lahf
cwtl
adc
inc
sti
fildl
mov
xor
btc
aas
or
mov
lahf
push
xchg
sbb
xchg
or
stc
test
shll
addr16
xor
addr16
addr16
xor
jo
push
inc
jecxz
out
aas
mov
js
mov
push
jge
mov
setp
sbb
adc
icebp
enter
xchg
in
add
sarb
out
ret
mov
cmp
xchg
xchg
lcall
inc
and
or
sbb
cbtw
cs
enter
lea
stc
mov
hlt
add
jno
repz
fldcw
addl
lods
repnz
movsl
lds
ret
jno
lock
adc
cmp
popa
clc
xor
ffree
lret
sbb
xchg
cmp
mov
mov
xor
loopne
int
jno
iret
scas
sbb
fcmovnu
std
xchg
sub
aam
jge
sub
pop
movl
xor
push
mov
adc
add
and
scas
push
dec
lock
call
push
inc
mov
arpl
push
mov
xlat
je,pt
mov
pop
xor
flds
mov
sahf
push
shlb
dec
jns
and
jno
push
call
cwtl
iret
xor
push
and
fwait
cli
push
test
xchg
mov
pop
fisttpl
pop
pop
pop
cld
mov
sbb
and
or
xor
sub
mov
add
dec
sub
push
pop
xor
pop
push
dec
mov
andb
out
ljmp
mov
movsb
push
mov
popf
lea
inc
jne
rcrl
add
sbb
rcll
push
sarl
ds
mov
pop
inc
sub
cmp
sub
dec
das
movsl
dec
or
in
or
repz
ret
flds
scas
mov
dec
cmpsb
enter
jbe
xor
test
dec
mov
and
shr
and
cmp
xchg
ds
jl
ljmp
data16
and
aas
and
imul
popa
fstpt
inc
cmpsl
cmp
push
xchg
dec
xchg
out
pop
pop
adc
ss
push
push
fcmovb
mov
cmpsb
mov
lcall
movsl
fldenv
jns
or
out
xchg
lea
push
ja
leave
push
push
scas
xor
in
adc
sar
xchg
xor
or
sbb
jge
pop
es
push
clc
fnstenv
add
mov
lret
xchg
sub
fistpl
fs
insb
add
cmp
scas
repnz
add
inc
loope
dec
add
out
ret
dec
iret
xchg
js
mov
pop
jp
repnz
ret
in
mov
shll
mov
fnsave
push
push
test
dec
mov
sub
sahf
sub
iret
stc
mov
push
loop
lea
mov
in
sub
dec
mov
outsl
xchg
jns
pop
stc
xor
pop
or
insb
movsl
lods
and
xchg
mov
popa
mov
fldenv
push
enter
outsl
sub
stos
dec
jbe
out
adc
and
ljmp
test
xchg
cmp
jecxz
lds
push
xlat
mov
jbe
loopne
or
pop
shlb
repnz
jno
outsl
push
movsl
dec
call
mov
pop
ficoms
sub
xchg
inc
jns
scas
lea
jecxz
fldt
out
inc
jno
mov
sbb
loope
nop
dec
xchg
jecxz
jo
cmpsb
inc
sti
mov
js
push
mov
inc
in
shll
and
loop,pt
cmp
jns
in
mov
mov
inc
add
sbb
ljmp
mov
and
sub
in
fcoml
leave
out
pushf
xor
in
aad
bound
push
or
push
push
dec
pop
and
lock
out
mov
mov
xchg
adc
cmpsl
popf
leave
mov
repz
and
and
pop
sbb
in
xor
mov
inc
inc
inc
rcr
push
jns
imul
push
dec
mov
mov
mov
gs
dec
push
push
add
andl
or
mov
xor
jno
xchg
lods
xchg
jle
mov
fcmovnb
gs
je
test
xchg
daa
insb
into
push
mov
test
es
inc
out
mov
fs
push
inc
and
jnp
out
jge
rolb
and
aam
sub
sbb
mov
daa
es
sub
mov
dec
dec
inc
or
or
or
pop
cmp
idiv
push
fsubrs
lods
imul
cld
aam
popf
sub
std
ds
rcrb
xor
cltd
add
add
cltd
in
mov
rcrl
pushf
mov
mov
mov
xchg
and
cmpsl
popa
cmp
add
dec
shrd
mov
aaa
jne,pn
js
out
clc
jecxz
mov
lret
stos
mov
lods
jo
add
lods
mov
mov
xor
xor
inc
rorb
pushf
fs
mov
test
loopne
fdivrl
sarl
xchg
out
les
call
iret
das
dec
push
lret
clc
iret
and
sbb
or
jo
mov
lock
mov
xchg
les
xorb
xchg
decb
dec
nop
push
sbb
ds
sbb
mov
mov
cmp
mov
rcrb
je
movsl
imul
cmp
pop
cmp
mov
or
fwait
add
jnp
jge
sbbl
lods
mov
adc
rcr
mov
das
pop
repz
mov
mov
dec
outsb
sub
loop
shr
xor
rolb
mov
stos
cmp
xchg
inc
sub
push
adc
push
ffreep
dec
xchg
dec
sub
push
sbb
fwait
push
es
into
jnp
inc
or
pop
mov
ret
push
push
clc
test
mov
shl
push
das
xchg
cwtl
mov
sti
xchg
mov
outsb
roll
fstl
xor
movsl
out
cmp
sub
xor
incl
mov
add
mov
in
gs
xchg
add
mov
cwtl
repnz
cmp
test
sub
dec
hlt
sub
hlt
lcall
sbb
sahf
stos
lds
push
mov
pop
insb
dec
in
flds
decb
std
ret
adc
dec
outsl
push
bound
and
das
daa
repz
or
sub
pop
imul
cmp
shlb
inc
loope
mov
imul
xchg
xchg
fisubs
push
pop
shll
lds
jno
sbb
daa
xchg
arpl
pop
sub
dec
aam
aam
cwtl
jb
fucompp
jnp
xchg
js
lea
mov
push
les
mov
aaa
or
cmp
adc
dec
pusha
cmc
int
and
mov
mov
test
xor
in
or
in
mov
xchg
xor
sbb
fstl
and
in
jg
imul
popf
add
cmp
mov
mov
int
sarl
pop
imul
lret
in
sahf
cmp
cmc
iret
mov
mov
pop
push
movl
pop
xor
pusha
lods
add
aam
lds
jp
mov
decb
jae
adc
int3
clc
pop
shlb
xor
fstl
sbb
dec
insb
pop
xchg
lds
das
cmp
dec
or
push
and
pusha
cli
in
mov
sub
mov
cmp
les
iret
dec
leave
lds
cltd
fs
mov
test
cli
jmp
insl
pusha
shll
nop
adc
sub
jnp
std
xor
push
repz
cld
cmpsl
push
dec
push
jne
dec
adc
fsubs
sub
dec
mov
mov
gs
ret
add
sub
or
in
mov
or
mov
jo
loope
loope
aaa
or
jg
push
cmp
stos
clc
pop
ljmp
aad
pop
pop
sahf
sbbb
loope
and
lahf
inc
inc
pushf
fwait
out
cmp
xor
cmp
sbb
and
inc
aas
adc
and
stc
nop
call
sbb
mov
mov
data16
fsubrl
jno
pop
sub
xchg
iret
push
push
mov
mov
sbb
scas
mov
fldenv
mov
outsb
pop
test
fs
mov
mov
mull
lods
pop
cmp
xchg
inc
mov
pop
lods
mov
fsub
xchg
mov
pusha
pop
mov
out
sahf
cs
mov
out
inc
rep
inc
push
pop
xchg
jae
pop
arpl
add
hlt
mov
cmp
mov
jl
stos
push
stc
jnp
xchg
and
sub
loope
xchg
leave
pop
cltd
push
jmp
pop
stc
rcrl
sahf
mov
add
mov
fbstp
neg
bound
lock
shr
xchg
mov
adc
fcoms
lea
pusha
cmp
stos
pop
les
sahf
xchg
sbb
sbb
cmpsl
pop
or
dec
sbb
or
scas
adc
cmp
scas
dec
sub
push
enter
insl
rcll
xor
dec
mov
out
jns
icebp
cmp
mov
popa
xchg
loope
mov
es
sbb
mov
filds
push
test
inc
pop
test
stos
push
data16
test
or
popa
mov
ljmp
dec
cmp
imul
mov
cld
lahf
shlb
pop
lahf
jge
test
mov
mov
into
pop
jl
mov
adc
xchg
inc
mov
mov
fnstcw
enter
lea
cs
lret
jmp
jmp
mov
jp
jmp
lock
out
inc
pop
mov
dec
imull
imul
sub
adc
inc
cli
aas
sub
mov
adc
dec
and
add
fcmove
pop
jp
dec
jbe
test
jle
popa
sub
sbb
jnp
xchg
lock
mov
mov
lds
es
ret
fwait
lret
lods
insb
sub
lret
push
push
sub
call
xor
movsb
pop
test
mov
sub
inc
pop
test
addr16
and
movsl
adc
adc
subb
in
gs
lret
test
loope
fwait
and
arpl
adc
push
push
mov
sub
es
push
mov
xchg
dec
sti
adc
push
fistl
out
mov
cmp
dec
inc
std
into
nop
andl
jp
int3
rcll
pop
dec
lcall
xchg
adc
lods
hlt
lock
dec
cmpb
movsl
pop
insb
push
lea
cs
ficoms
jle
dec
jno
push
pushf
repz
arpl
fbld
andb
dec
adc
insb
test
push
inc
jge
dec
jbe
jecxz
xorl
sbb
push
push
and
pop
pop
cltd
pop
mov
or
jmp
sbb
push
fbstp
cmc
cmpsl
std
jl
jp
sub
int3
rol
lret
dec
inc
sbb
and
int3
shrl
cli
inc
and
or
cmpsl
xchg
aas
lcall
js
adc
out
mov
cmpsl
xor
and
jo
lret
mov
into
pusha
adc
mov
in
inc
cmc
mov
icebp
notb
test
loop
pop
add
icebp
dec
pop
sub
and
push
fwait
ds
and
mov
into
add
int3
mov
mov
idiv
dec
sbb
int3
xor
or
rcrl
mov
rcrl
push
inc
mov
dec
iret
es
cwtl
push
ret
shr
inc
mov
stos
vmovmskpd
dec
push
stc
inc
sbb
sbb
sub
inc
aaa
inc
or
jl
outsl
adc
fistpl
inc
sub
stos
jne
rcrb
lahf
rcl
stc
dec
jnp
cli
xchg
cmpsb
imul
push
mov
out
popa
pop
rolb
pop
outsb
push
pop
addr16
lods
adc
cltd
jle
adc
js
xor
fyl2x
jge
push
lods
shr
mov
arpl
cmp
js
add
sub
xor
mov
shr
fidivl
mulb
ret
pop
retw
mov
or
pop
out
into
fldt
outsb
pop
push
popf
mov
lcall
mov
hlt
xchg
xchg
dec
pop
in
aam
pop
shrb
rcrb
inc
mov
or
mov
inc
mov
jb
pop
and
nop
lret
sub
cld
add
clc
pop
dec
shll
add
or
insl
in
xchg
pop
push
in
sbbb
inc
xlat
inc
pop
imul
xchg
jmp
test
add
mov
xchg
push
cs
mov
pop
sarb
and
dec
rorl
lret
inc
add
hlt
mov
add
int3
cmp
pop
push
dec
in
loope
jno
mov
and
std
sbb
and
xchg
add
aad
xchg
loopne
fistpll
outsb
mov
adc
xor
je
or
fsts
stos
sar
xor
test
shl
in
sbb
and
mov
in
sti
das
adc
popf
imul
mov
fbstp
dec
add
daa
cld
sbb
in
xlat
sub
nop
daa
leave
out
iret
aam
sahf
mov
subb
mov
inc
mov
pop
adc
sbb
xchg
dec
jb
or
scas
loopne
jne
iret
adc
and
mov
xor
popa
movsb
pop
dec
sahf
fcom
fcoms
lret
mov
xor
push
movl
out
push
or
jo
sub
aaa
pop
sub
jl
inc
inc
push
iret
insl
hlt
popa
cmc
mov
push
sub
adc
mov
mov
mov
or
mov
xor
lock
int
mov
jp
or
or
sbb
ss
in
mov
dec
in
push
mov
adc
iret
xchg
cltd
sbb
mull
iret
xchg
pushf
addr16
mov
cmp
les
cwtl
pop
sbb
sub
test
addr16
scas
xchg
cmp
mov
lods
in
mov
inc
popf
call
xchg
insl
push
add
fdivrl
mov
fbstp
lods
jns
into
mov
adc
add
mov
out
mov
dec
mov
iret
inc
push
ds
popa
rcll
in
clc
xor
push
and
stc
inc
mov
mov
jg
pop
sbb
xchg
mov
or
fistpll
jle
cmpsb
sbb
ja
into
cmp
sub
mov
add
pop
xor
add
cmp
jns
lcall
pop
cltd
neg
mov
mov
cltd
jg
jns
lret
add
mov
repnz
xor
rclb
adc
dec
dec
mov
aaa
jnp
adc
xchg
cmc
rcrl
std
test
cld
fs
push
cmpsl
jnp
shr
test
mov
int
mov
lret
fsubl
jmp
icebp
jle
cltd
sub
movsl
push
dec
inc
jne
subl
xor
adc
add
mov
dec
dec
push
mov
outsl
add
aas
out
cmp
jbe
xor
shll
or
adc
add
negl
jp
cwtl
sub
cmp
jmp
push
stos
adc
mov
or
jle
jg
dec
outsl
jp
sub
sub
mov
sbb
jbe
push
or
stc
pop
loop
or
fsts
xchg
mov
inc
shl
mov
xchg
scas
jmp
add
xchg
jle
mov
push
mov
push
jge
std
or
and
sbb
adc
test
push
pop
or
pushf
push
push
dec
addr16
les
ljmp
daa
push
shrl
scas
int
les
ret
xchg
mov
data16
ficomps
pop
push
cwtl
and
jbe
mov
sub
push
adc
mov
inc
xor
lods
sbb
int
inc
or
xchg
ds
pop
add
sahf
add
ja
clc
lret
mov
popf
and
xchg
mov
in
ja
vaddsubpd
out
cmp
add
lock
push
pusha
mov
test
fcmovne
lcall
adcl
sub
test
testb
aaa
fldl
lahf
jbe
shl
xlat
lea
xor
jmp
rorb
push
push
add
mov
ja
insb
fdivrl
inc
mov
in
mov
fstpt
sub
inc
pop
and
pushf
and
adc
jge
mov
daa
pop
dec
pop
jp
int3
jno
fisttpll
test
inc
xor
cmovns
xchg
mov
cli
inc
lret
and
ret
dec
push
jbe
call
add
sti
ret
mov
arpl
mov
insb
repz
jbe
lock
sti
rol
das
loop
inc
inc
pop
out
adc
outsb
mov
std
push
add
idivb
or
popa
stos
cli
cmpsb
or
jbe
mov
call
repz
sahf
mov
inc
pop
mov
shlb
adc
mov
adc
leave
jp
pop
ja
pop
adc
data16
add
sub
inc
sti
and
movsb
jge
mov
test
jl
and
inc
popf
push
pop
cmpl
cmp
loope
pop
add
daa
lea
sub
mov
and
adc
sar
and
dec
ja
bound
push
xchg
pop
mov
mov
push
xchg
or
test
addr16
cmp
mov
xchg
pop
push
lods
addb
jg
cmp
mov
mov
xchg
mov
dec
sbb
repz
jge
stos
mov
filds
into
add
out
add
xchg
sub
icebp
push
cwtl
mov
or
fadd
xlat
xor
fs
jmp
jns
pop
les
jmp
pop
mov
push
enter
sub
cmp
inc
sbb
push
ds
stos
mov
enter
shlb
les
icebp
cwtl
sahf
or
rcrb
push
out
pcmpeqd
dec
cmpsb
pop
dec
adc
iret
mov
inc
aas
add
jge
and
rorb
mov
loop
inc
iret
xor
dec
or
jmp
and
dec
lahf
in
jg
add
pop
pushf
outsb
or
mov
add
fwait
adc
fstps
jo
popa
test
dec
mov
out
fs
or
cmp
std
cmp
mov
pop
test
sbb
sbb
add
cs
jns
push
cmp
mov
add
mull
jp
push
adc
fxtract
lahf
lret
sub
push
lret
dec
push
out
femms
and
and
jno
sti
dec
mov
lea
sbb
inc
test
test
ljmp
test
cmp
pop
prefetch
jmp
push
loopne
adc
fcomps
sarb
add
xchg
and
cmp
dec
push
call
mov
gs
aad
imul
cmp
add
jg
and
add
cmp
ret
das
xor
xchg
stos
xchg
test
rcll
ds
movsb
inc
cli
daa
push
sub
dec
dec
fs
mov
push
lock
stc
sbb
ja
lods
cmp
fistpll
mov
push
ljmp
out
sbb
out
loop
lock
adc
cwtl
test
std
in
ljmp
jo
enter
fs
or
imul
xchg
lds
push
mov
inc
repnz
arpl
leave
cld
ja
aad
arpl
fsubs
push
xorb
and
addr16
loop
dec
lahf
push
cwtl
dec
stos
cmp
push
lahf
fwait
push
movsb
aas
pop
or
push
dec
dec
push
fwait
outsb
push
cmp
dec
mov
jns
icebp
scas
mov
inc
lods
decb
lods
inc
xlat
inc
mov
lret
inc
stc
out
sbb
jae
pop
aad
jg
mull
jecxz
sahf
push
and
stos
fnsetpm(287
inc
sbb
lcall
scas
adc
mov
add
add
push
dec
push
cltd
and
dec
mov
sbb
adc
andl
push
pop
ja
inc
push
out
repnz
imul
andb
xor
movsb
mov
arpl
mov
sahf
dec
inc
ds
mov
lods
cmp
arpl
aam
std
push
xor
lock
out
out
stos
inc
insl
push
or
dec
cmp
and
add
lea
push
dec
nop
or
mov
sub
mov
or
mov
jno
dec
gs
ret
fsubrs
clc
insb
mov
mov
push
xlat
adc
js
jp
scas
mov
lret
sahf
aad
jle
fninit
pop
xlat
call
mov
shlb
leave
stos
jmp
or
cmp
imul
and
and
daa
cwtl
repnz
adc
pop
scas
xchg
xchg
dec
repz
pop
and
mov
sub
cmp
stos
sbb
push
aam
mov
mov
cltd
lret
imul
add
pop
fidivrs
xchg
push
mov
xchg
pop
push
loope
mov
roll
jo
or
pop
mov
xchg
mov
mov
test
sarl
sbb
mov
push
or
push
das
sbb
movb
jle
pop
sub
and
and
cmp
jp
imul
sti
mov
xchg
add
xchg
pop
mov
xor
and
pop
and
aad
xchg
rcll
pop
rcll
icebp
ljmp
daa
lret
js
leave
jecxz
xor
fmuls
lods
out
and
mov
rcl
or
movsb
dec
sti
xlat
sub
push
mov
outsl
inc
loop
push
test
adc
or
pop
es
lock
adc
push
jnp
mov
loop
and
adc
sbb
scas
outsl
sub
mulb
mov
nop
cmp
cmp
add
adc
mov
sbb
out
shl
push
in
xor
test
mov
inc
out
insl
inc
pusha
loop
jo
sub
mov
out
pop
dec
and
scas
lahf
mov
andb
and
pop
fs
es
test
jbe
dec
inc
jl
push
xchg
cmpsl
push
fs
xchg
and
cli
dec
stos
cmp
xor
adc
xor
insb
lahf
das
jmp
or
hlt
in
fmull
daa
add
ret
out
xchg
push
mov
adc
or
push
jne
jo
mov
jle
shrl
adc
movsl
pop
arpl
cmp
fwait
dec
stos
adc
fdivrs
xor
cmp
fsub
xor
clc
cltd
or
ljmp
add
mov
arpl
mov
ret
in
add
lods
xor
rolb
jo
add
jg
cmp
andb
int3
sbb
cmp
inc
or
sbb
and
pop
sbb
cli
push
test
cld
sbb
jne
and
test
sub
mov
push
shll
iret
loopne
loop
aaa
or
hlt
push
frstor
push
test
mov
sbb
fimull
push
lahf
enter
nop
mov
stc
aam
pop
mov
outsl
into
daa
jp
frndint
loopw
xor
xchg
pop
mov
cmpl
ljmp
gs
jne
popf
dec
fdivs
adc
or
cltd
mov
xor
xor
dec
mov
mov
mov
xlat
stc
push
dec
mov
sbb
sub
jnp
fnstsw
mov
xchg
mov
or
pop
outsb
insb
test
mov
lods
repnz
inc
lret
fwait
cwtl
mov
adc
fbstp
scas
pop
lock
int3
out
sti
insl
in
daa
inc
ljmp
mov
addb
and
adc
in
mov
lcall
fistpl
cld
fwait
popf
fsubl
or
pop
movl
in
repz
mov
lods
or
xchg
arpl
scas
testl
in
imul
push
jg
mov
out
loop
mov
imul
add
mov
lret
xchg
inc
mov
aaa
mov
pop
mov
inc
in
cmp
movsl
ljmp
mov
xchg
cmp
imul
xchg
call
shl
mov
dec
or
xor
pop
inc
xor
fst
ljmp
call
cmp
jmp
jp
bound
dec
in
outsl
mov
imul
dec
fwait
push
inc
movsb
inc
test
dec
dec
adc
shlb
cmpl
inc
lods
cwtl
cmpsl
adc
out
mov
push
jnp
sahf
cmpsb
fidivl
push
push
cltd
inc
mov
popa
rclb
xor
cwtl
jge
ds
jnp
insb
or
add
xlat
cmp
pop
test
add
mov
bound
sbbb
aas
sbb
adc
test
xchg
sbb
sbbl
add
loopne
xlat
and
mov
push
inc
cs
add
xor
and
adc
jne
cld
or
rorl
jae
jne
lret
decb
inc
mov
dec
mov
ret
sub
loope
fisttps
pop
adc
out
add
aad
pop
test
or
push
fimuls
mov
out
sbb
pop
aas
mov
das
mov
aam
xchg
or
jne
imul
sub
fwait
ss
imul
xor
pop
loop
out
sub
andb
inc
pusha
cmc
and
into
push
jg
pushl
cmpsb
cmp
repz
mov
leave
xchg
jmp
sub
outsl
mov
sahf
shrb
adc
lret
ficoml
adc
xchg
jmp
rcrb
xchg
fistpll
mov
scas
sub
sbb
int
loope
jp
mov
mov
jmp
and
mov
push
inc
xor
mov
outsl
and
inc
outsl
adc
stc
push
or
mov
sub
repnz
jl
mov
orb
sbb
notl
pop
dec
stos
aaa
add
jne
inc
lea
jbe
xor
jg
dec
jnp
js,pt
pop
scas
pop
and
lock
xor
lds
cmpsb
push
addl
and
ja
dec
adcb
pusha
jno
and
jnp
cmp
jle
scas
out
lret
pushf
ror
jnp
and
push
fwait
push
insb
cmp
and
push
repnz
xor
adc
pop
mov
or
cmp
push
xor
xor
push
or
jg
insl
and
sar
and
jne
fiaddl
sar
mov
outsl
mov
js
and
pop
mov
pop
pop
jb
fcmovnu
cmpsl
idivb
rcr
ret
es
outsl
repnz
hlt
aad
sub
cli
stos
jp
fists
lock
dec
stos
mov
cltd
mov
adc
jge
ret
adc
sti
jp
jo
mov
dec
cmc
lret
sbb
mov
or
fidivrs
jo
cmp
call
mov
jle
in
pop
add
scas
lea
faddl
int
push
mov
ja
cmc
cmp
xor
lahf
stc
jo
insb
cmp
cmpsl
xchg
sbb
and
shrb
sarb
ret
mov
push
mov
in
aas
jnp
jbe
dec
fmuls
out
mov
xlat
lahf
pop
fbstp
mov
push
aad
and
sahf
xorb
enter
dec
mov
jle
and
imul
sarl
cmp
sub
sbb
mov
pop
stos
fdivrl
xchg
out
sbb
mov
mov
and
or
cmp
jle
imul
jecxz
mov
sub
push
test
add
scas
cmpb
push
mov
xchg
ja
pop
add
jmp
push
std
or
sbb
lods
mov
es
repz
aad
and
mov
adc
xchg
mov
jb
jno
pop
pop
or
push
popa
loopne
cmp
push
cwtl
lock
pop
iret
imull
jae
xor
push
mov
xchg
mov
inc
mov
xor
jnp
js
and
xchg
adc
adc
jecxz
shlb
xchg
outsb
pop
cwtl
sahf
xchg
imul
cmp
mov
adc
sbbb
popf
popf
push
divl
and
cs
gs
mov
in
and
mov
mov
push
outsl
xchg
flds
in
mov
aad
lock
mov
pop
mov
inc
cmc
xorb
inc
xchg
data16
push
popf
add
push
stos
sbb
mov
pop
push
mov
pop
lahf
jb
jno
scas
scas
sub
aaa
subl
jge
adc
sbb
inc
enter
lret
fnstenv
add
jns
aaa
pushf
cmp
loopne
mov
sbb
jae
roll
out
in
std
mov
xchg
cs
jp
insl
xchg
jp
sub
lods
inc
fmul
in
movsl
jl
push
push
cmp
sbb
sub
into
stos
add
add
filds
in
in
sbb
fsts
xchg
repz
and
mov
daa
iret
adc
cmp
imul
jbe
and
fucomi
rorb
mov
jbe
mov
cmp
cmc
xor
push
inc
jp
mov
shlb
mulb
pop
xorb
aam
xchg
dec
xor
sub
dec
imul
add
mov
cmpsb
add
mov
dec
lods
in
jae
fsub
push
mov
and
aas
scas
mov
mov
xchg
into
hlt
test
or
fwait
sub
lea
inc
popa
sub
icebp
daa
or
ljmp
lea
imul
inc
lret
mov
das
movsb
push
loopne
lahf
or
test
inc
mov
popf
mov
clc
sbb
cmp
xor
xchg
mov
jo
jbe
sar
ljmp
fs
icebp
mov
adc
cmpsb
out
adc
pop
test
push
pop
das
mov
mov
repz
xchg
sarb
das
xchg
test
cli
jle
repnz
loop
push
aam
pushf
mov
jmp
mov
das
gs
test
arpl
in
xor
pop
pop
shrl
shrl
push
fistl
push
push
jb
flds
lods
fcmovne
jl
ret
adc
jnp
outsb
out
nop
push
sbbl
xchg
or
int
jbe
push
ss
add
jb
icebp
mov
cmp
imul
shld
push
jl,pt
mov
fwait
mov
cmp
jl
pop
xchg
mov
mov
out
push
rcll
and
cmp
or
push
imul
insl
cmp
xor
mov
lcall
lcall
std
inc
lods
xchg
ljmp
leave
jbe
jp
sahf
mov
or
lahf
xchg
insb
loope
pushw
insb
mov
test
xor
enter
pusha
jne
pusha
test
out
lods
mov
push
or
in
stos
cld
sarb
adc
shl
pop
in
sarb
jp
cmp
popf
cltd
fcoml
mov
mov
imull
filds
and
push
push
pop
jle
loopne
loop
sahf
loope
mov
mov
dec
pop
add
pop
fdiv
insb
out
push
scas
or
jmp
xor
lret
icebp
dec
adc
dec
jne
repnz
push
ja
jns
push
ss
loopne
out
es
mov
cltd
cmp
jl
jl
and
stos
in
outsb
dec
popa
inc
bound
xor
xchg
out
pop
std
das
mov
fidivs
aaa
stos
xchg
jae
outsb
insb
cmpsb
fildl
xor
daa
cmc
or
iret
jne
ja
loop
push
in
loope
sub
les
xchg
movsb
sub
jecxz
pop
rcll
aaa
mov
dec
fisubrs
js
wbinvd
dec
fnstsw
out
fisttps
pop
clc
out
rcr
iret
pushl
xchg
cmp
nop
push
jg
lock
clc
andb
fdiv
push
jbe
push
shll
fwait
mov
mov
dec
ret
movsl
or
outsl
push
add
push
in
adc
adc
stc
adc
insl
dec
xchg
mov
ja
stc
inc
sbb
out
dec
mov
jge
adc
jno
xchg
mov
mov
push
pop
jnp
btr
daa
cmpsl
push
jns
jae
add
inc
not
inc
jmp
jbe
cmp
xchg
inc
sbbb
sbb
fsts
mov
add
sbb
push
dec
das
ret
xchg
push
dec
out
outsl
loop
sub
or
lcall
stos
test
js
arpl
sub
das
flds
in
cwtl
outsb
fimuls
sub
ret
add
inc
sub
gs
lods
sbb
cld
mov
sbb
arpl
push
test
sub
adcl
into
jg
sub
push
fwait
dec
lcall
adc
dec
add
inc
subb
iret
mov
jmp
stos
hlt
test
cmp
popa
cwtl
cmp
xor
sub
gs
mov
mov
add
lret
xor
lods
add
bound
jmp
cmp
or
push
push
js
push
int
xorb
popf
div
adc
mov
mov
cli
cmp
or
pop
pxor
lea
in
push
xchg
insl
xor
xchg
sbb
inc
push
pop
or
push
bound
in
int3
inc
aaa
push
ljmp
sarl
mov
dec
or
inc
pop
mov
pop
notl
inc
mov
into
pop
push
push
jle
sub
mov
mov
mov
mov
lret
or
je
popf
into
mov
jmp
or
sub
popa
xor
std
or
xorl
std
icebp
out
and
fs
sub
inc
add
jp
imul
out
sub
rorl
loope
adcb
gs
sbb
xor
cmpsl
jno
orl
and
dec
mov
pusha
pop
ret
mov
pop
lahf
nop
rorl
sbb
ja
adc
sbb
cmc
xor
mov
dec
dec
sbb
mov
add
in
fcomps
lret
icebp
jb
fs
ja
call
xor
lods
test
negb
je
xchg
jae
xchg
daa
push
sbb
or
and
adc
fwait
xchg
insb
cmp
inc
mov
sbb
pop
rcr
pop
inc
aam
xlat
mov
popf
into
decb
and
clc
addr16
aad
push
sbb
jecxz
shl
test
pop
adc
loop
cmp
or
sub
xchg
pop
cmp
mov
ds
icebp
ficompl
xchg
sbb
scas
cmc
jmp
pop
adcb
mov
mov
cmc
xor
xchg
mov
cmp
mov
notl
push
lcall
pop
icebp
repz
jno
pop
rolb
mov
ja
adc
scas
jge
add
int
std
pop
outsl
xor
stos
cli
mov
lock
push
adc
arpl
popa
scas
es
sbb
xchg
sbb
daa
jo
shll
outsb
ss
xor
enter
inc
or
jo
or
jmp
cmpsl
xchg
cltd
push
movlps
imul
xor
mov
in
adc
pop
lret
or
loope
and
push
inc
loop
inc
inc
or
repnz
enter
in
sbb
cmp
rcrb
insb
out
add
cmp
or
jns
loope
outsb
repnz
mov
mov
jge
push
pop
iret
mov
into
out
or
cmp
fcoms
popa
imull
and
inc
jo
rcrb
andl
mov
add
mov
mov
jecxz
fs
sti
xorb
cmpl
call
rcl
mov
sub
xor
jg
push
pop
sub
test
jo
testb
fbstp
icebp
cltd
enter
repnz
xchg
pop
ret
pop
lcall
inc
pop
mov
int
fsubl
cmp
insb
inc
sbb
ret
sahf
inc
sbb
out
mov
faddl
mov
into
or
sar
adc
loopne
mov
mov
adc
xor
pop
test
out
mov
push
es
push
pop
pop
add
push
fwait
sub
pop
xor
push
ja
mov
xorb
cwtl
sub
jmp
jae
jo,pt
xor
lret
loopne
pop
inc
scas
pop
mov
pop
scas
push
nop
sub
call
lds
or
fiadds
or
add
and
xchg
popf
pop
pop
in
xchg
push
jnp
mov
pop
pop
pop
sub
xorb
adc
adc
shll
ds
inc
jecxz
rolb
clc
dec
push
push
cmp
inc
sub
pop
mov
inc
or
and
xor
cli
pop
popa
imul
push
push
out
xchg
jns
push
jecxz
inc
dec
and
fcmovnb
cmp
das
pop
add
mov
arpl
adc
or
scas
std
sbb
ja
mov
push
or
loopne
imul
lcall
jl
add
int3
ds
pop
inc
and
stos
sbb
es
aad
adc
sub
mov
or
jbe
push
sub
rep
inc
jge
xchg
xor
sub
icebp
fcomi
cli
into
test
test
add
sbb
cmpsb
jbe
insb
push
call
jnp
out
xchg
pop
in
fwait
xchg
loope
inc
pusha
jbe
imul
push
nop
ret
cmp
xor
cmc
mov
xor
or
int
dec
xchg
test
xor
push
inc
scas
xor
xlat
mov
fucomp
xorl
pop
nop
and
inc
push
loope
pushf
insl
inc
sub
sbb
jmp
out
push
and
test
or
push
es
mov
sub
xor
popa
jg
mov
add
sbb
call
or
cltd
jmp
mov
xchg
ja
jle
shll
js
lods
rorl
sbb
mov
jbe
sbb
xchg
add
mov
out
cmpsb
insb
pop
and
pushf
shl
int3
lea
aas
xchg
sub
push
inc
mull
inc
xlat
dec
mov
cmpsb
aas
rcrb
add
aaa
mov
mull
subb
mov
jle
mov
dec
sbbb
add
dec
pop
and
fistpll
test
xor
adc
mov
xchg
ljmp
out
mov
int
fcompl
addr16
ret
sahf
imul
push
insl
scas
and
mov
neg
enter
lret
cmc
enter
pop
or
mov
fdivrl
rep
cmp
push
jb
rorl
in
lock
test
add
push
leave
mov
popf
hlt
adc
sub
adc
aad
popa
inc
fdivrl
sbb
mov
sub
cmp
jp
inc
xlat
daa
imul
dec
xor
inc
xchg
pop
mov
cmp
mov
lret
sti
std
pop
arpl
loopne
push
in
dec
dec
lock
push
add
xchg
aas
jns
xor
lods
add
ja
in
cli
pop
data16
aas
jge
add
sub
call
mov
stc
sar
jno
cmc
jp
out
add
inc
out
nop
ret
sbb
mov
mov
aaa
aaa
push
ret
imul
test
fbld
imul
sti
pop
add
outsl
xor
std
dec
adc
and
xor
sbb
or
mov
pushf
dec
jno
inc
lahf
movsb
ds
and
in
bsr
sahf
dec
inc
pop
inc
cs
mov
sub
fcomps
jl
std
dec
adc
das
jne
imulb
jnp
arpl
rcrl
dec
loopne
fistpl
frstor
mov
add
lret
fsts
sahf
or
rorb
cmp
pop
incl
pushf
push
pushl
shlb
sbb
adc
sbb
popf
int3
sbb
sbb
adcl
bound
jg
lods
out
xchg
dec
or
sbbl
in
pop
mov
insb
loop
add
test
loopne
imul
movsl
ficoms
xchg
jns
lods
add
shlb
mov
pushf
push
lcall
dec
loopne
outsb
push
pop
shll
iret
fsubl
push
pop
pop
mov
and
cltd
mov
cmp
add
int3
mov
and
popa
mov
mov
push
je
xor
in
std
dec
push
outsb
mov
push
in
aam
push
out
adc
mov
mov
ret
dec
push
out
lahf
push
push
pop
mov
add
sub
adc
jl
push
mov
jecxz
pop
pop
pushl
xchg
xor
mov
iret
xchg
stc
imul
jno
in
enter
leave
fnclex
sub
jb
int
sbb
test
mov
cmpl
dec
movsl
shlb
push
imul
loope
pop
scas
divb
mov
sub
sub
fistpl
aam
adc
leave
pusha
fimull
dec
sub
xlat
jne
cli
pop
insb
das
call
call
clc
and
in
xchg
mov
ret
xchg
cwtl
fisttpll
shl
mov
add
push
inc
fbld
or
add
add
xor
pop
lret
test
jo
mov
mov
add
xor
push
fcom
test
jecxz
xor
aaa
xor
mov
mov
decb
cltd
xchg
nop
jecxz
aam
loopne
cmp
dec
jp
jge
mov
rorl
pop
std
shll
sbb
push
and
mov
cs
push
in
push
loope
cmp
dec
dec
push
mov
ror
xchg
aam
or
mov
mov
adc
pusha
adc
shll
sbb
adc
pop
mov
addr16
push
pushf
xor
es
rcrb
les
push
jbe
test
rcrb
imul
push
jbe
lods
dec
lret
or
hlt
cmp
scas
sub
mov
ljmp
and
inc
and
sub
movsl
pop
push
xchg
pop
xchg
lock
in
bound
xor
fsubrl
cmc
mov
push
fwait
sti
sbb
cld
addb
ljmp
adc
cmpsb
adc
and
dec
mov
mov
imul
int3
add
and
push
in
inc
adc
lret
cltd
or
pop
stos
xor
xor
mov
or
xor
mul
fdivrl
sbb
sbb
add
in
insb
popa
inc
movl
xchg
inc
push
shlb
ds
and
stos
ljmp
pop
loop
mov
imul
inc
cli
hlt
shll
sbbl
insb
popl
loope
jp
jns
mov
pop
jle
stc
mov
je
cmpsl
por
push
js
xchg
pop
je
jecxz
sub
or
adc
test
lea
jl
xor
stc
add
jnp
push
mov
jne
lods
loopne
jo
test
xchg
test
sbb
xchg
xor
adc
cltd
and
mov
and
sub
push
and
aam
subl
or
jp
mov
xor
pop
xor
push
stc
xchg
cld
jmp
push
mov
xor
cld
orl
in
icebp
xchg
inc
jmp
xor
cmc
into
shlb
mov
mov
loopne
scas
or
in
jno
js
push
sbb
pop
sub
test
sbb
aaa
movsb
mov
outsl
lret
repnz
or
adc
mov
adc
dec
fwait
push
adc
cwtl
iret
mov
aas
mov
add
cs
jp
inc
add
aad
out
mov
mov
shll
data16
pop
or
test
dec
ficompl
fcmovb
js
and
push
add
scas
dec
cmp
sti
enter
out
xchg
test
xor
cmp
mov
push
in
arpl
negb
xchg
jp
fstl
rorb
mov
outsb
add
cmp
dec
push
shrl
lods
pop
das
jns
inc
mov
dec
inc
mov
jae
push
dec
iret
cmp
mov
dec
int
cmp
fcoms
fiaddl
cmp
jns
mov
jmp
in
cmp
ret
loope
mov
push
jne
mov
test
inc
inc
lds
mov
sbb
roll
lea
and
and
jl
ds
mov
jecxz
cmp
adc
dec
dec
stc
or
jecxz
cmp
stos
mul
xchg
cmp
test
repz
and
aam
add
adc
cmp
adc
jmp
jge
jp
or
cwtl
mov
mov
mov
imul
pop
cwtl
mov
jmp
shll
jl
int3
pop
call
movsl
sub
xchg
mov
xor
jecxz
outsb
cmc
pop
lods
add
sar
sbb
nop
inc
ss
sub
and
jb
ja
fiaddl
imul
and
pop
add
xchg
rcll
cmc
out
inc
xchg
mov
sbb
icebp
lret
jmp
pop
jg
push
std
scas
repnz
fsin
daa
pop
pop
cmp
mov
std
fnstenv
xchg
mov
dec
xchg
cmpsl
jle
in
pop
xchg
pushl
test
push
iret
adc
or
xchg
jb
clc
inc
je
mov
enter
dec
adc
dec
mov
fists
or
into
int3
mov
daa
jecxz
xor
ffree
in
enter
fadd
xchg
jne
mov
daa
fisubrl
cmp
mov
jns
mov
je
aas
jmp
lock
sub
fs
pop
mov
scas
mov
mov
push
push
or
lcall
or
push
mov
arpl
adc
and
xor
cli
clc
test
rol
add
roll
repnz
xchg
rcr
mov
fxch
mov
ds
jo
mov
lahf
inc
push
pop
or
sub
in
pop
cmp
cmp
lcall
dec
or
in
mov
aas
inc
gs
les
lahf
pop
push
inc
cs
je
pop
add
dec
and
fistps
daa
lock
cmp
push
icebp
xchg
push
repnz
pop
in
xchg
scas
pushf
xchg
cmpsb
bound
jno
cli
xorl
fmul
mov
inc
lds
cmp
mov
mov
inc
stos
push
mov
adcl
push
jg
popf
mov
and
ja
adc
adc
xchg
dec
cs
clc
jbe
add
ss
jno
jp
in
pop
xchg
dec
aas
and
fnsave
push
enter
xor
or
arpl
add
mov
rol
cld
sahf
ret
push
xchg
push
mov
stc
mov
sub
and
pop
mov
rorl
popl
sti
clc
mov
jb
push
aas
jecxz
jmp
scas
dec
mov
cmp
cs
fsubr
fisttpll
xchg
out
loopne
jno
add
push
push
push
ja
lcall
daa
xchg
and
clc
jl
and
pop
test
rcll
stos
das
push
xlat
inc
cs
push
push
xchg
pop
out
shlb
mov
lods
jecxz
nop
out
aas
push
lahf
sbbl
ja
adc
inc
imul
and
cli
mov
adc
icebp
imul
pop
js
pop
sub
push
sbb
fsubrl
fisubrl
xchg
mov
dec
dec
jecxz
and
add
sarl
sub
test
ss
out
ret
and
push
in
repnz
jnp
or
je
shlb
test
adc
add
mov
outsb
pop
pop
sub
cmpb
jecxz
ret
shll
adc
ljmp
addb
loope
pop
lock
jns
mov
xchg
nopl
lret
and
pop
cmp
or
lret
push
and
scas
lods
push
xchg
mov
pop
and
mov
mov
xchg
das
xor
mov
xchg
cld
insb
push
cmp
push
call
lret
cmp
push
sub
outsb
mov
xchg
les
dec
push
push
and
in
repnz
sbb
pop
pop
divb
lcall
add
inc
jge
lahf
push
add
jge
mov
inc
fistps
pop
push
dec
pop
lock
fimuls
sub
jmp
xchg
jl
ss
daa
push
dec
cmp
cmp
jmp
inc
or
and
adc
jge
sahf
xor
or
rcrb
or
je
lock
dec
cmc
je
pop
insl
pop
mov
mov
fisttpl
mov
repz
add
add
sahf
test
js
movsl
outsb
sub
dec
cmp
dec
je
imul
outsb
push
scas
push
ret
push
movsb
repnz
insb
outsb
or
lret
mov
add
movsb
lock
dec
inc
aas
ds
insl
stos
fdivs
icebp
loopne
int
jle
mov
cld
dec
push
rolb
in
cmp
mov
out
or
jmp
mov
jo
cwtl
mov
inc
repnz
mov
jne
fildl
jo
jb
jbe
lds
mov
cmp
rcrb
fidivrl
outsl
shlb
pop
push
adc
aaa
fdiv
cmpsl
add
adc
loopne
popf
cmpsl
and
push
cmp
inc
mov
inc
mov
mov
inc
mov
fisttpl
pop
or
ficompl
addb
jmp
push
dec
pop
inc
bound
mov
cmp
loopne
scas
adc
aad
into
or
xor
stos
xchg
jge
or
notb
cld
sbb
sbb
jo
mov
adc
mov
pop
sbb
in
mov
js
jmp
inc
mov
cld
popa
jmp
xchg
push
je
or
je
pop
insl
and
stos
xor
jae
xlat
fstl
loop
aam
fisubrs
mov
mov
add
loope
stc
push
shll
push
push
imul
icebp
or
and
testb
and
icebp
mov
fldcw
pop
and
push
jb
xchg
js
adc
mov
sub
add
test
sub
gs
jg
ljmp
out
or
xor
and
inc
mov
andb
cmc
jno
ret
imul
sti
stc
sbb
xor
stos
aam
aam
inc
outsl
mov
ret
add
push
mov
cmp
and
pop
xor
dec
in
sub
into
icebp
and
push
push
mov
lods
pop
cld
dec
lret
cltd
aas
xchg
and
test
mov
lret
jmp
mov
pop
insb
xchg
sub
movsl
add
push
stos
clc
aas
push
mov
xor
cmc
notl
testb
sub
fs
jbe
dec
inc
xor
cmpl
jmp
bound
dec
outsb
xor
push
fwait
cmp
sub
mov
push
mov
and
roll
ljmp
pop
add
cmp
fwait
in
and
jg
loopne
xchg
das
push
lock
fnstsw
in
dec
movsb
mov
jle
inc
ret
push
ret
aam
push
cmp
adc
cli
pop
xorb
add
jmp
and
es
or
pusha
lret
test
das
cltd
dec
jbe
dec
icebp
push
sub
pop
inc
aaa
in
addr16
sub
ljmp
mov
or
sub
rcl
pop
scas
xchg
aam
mov
pop
and
jp
imul
fidivl
pop
jbe
test
es
inc
or
jle
jno
and
pop
popa
fldenv
andl
repnz
pop
jl
cmp
push
cmp
push
fildl
lcall
ljmp
popa
add
push
push
xchg
scas
xchg
les
sub
mov
jo
ja
xchg
jmp
loopne
dec
xor
je,pn
inc
push
sarb
fcoml
xchg
add
add
scas
jns
fldl
icebp
or
push
jo
andb
and
pop
jnp
shrl
popf
out
fistpl
xchg
rclb
and
sbb
mov
push
shll
pop
sbbl
je
call
dec
pop
xchg
mov
lret
std
mov
bound
aad
data16
rcr
sarb
jo
sbb
xchg
int3
test
mov
in
hlt
pop
inc
out
cli
push
test
xor
pop
jo
jge
or
div
push
cs
add
scas
xor
jl
inc
xchg
pop
test
mov
push
pop
cli
push
mov
pushf
push
incl
and
mov
xor
xchg
sbb
dec
push
jmp
imul
testb
xor
or
and
sub
pop
sbb
test
mov
xor
cli
arpl
xchg
dec
jg
adc
mov
sbb
in
mov
cwtl
mov
mov
jne
jle
sub
xchg
push
sub
jge
and
lahf
test
sub
les
ljmp
out
in
jo
mov
push
push
or
shld
dec
pcmpgtb
add
fld
mov
mov
xor
mov
push
or
sbb
sub
pop
ficompl
pop
cli
jmpw
and
xor
inc
les
xor
jmp
add
sub
jmp
dec
fs
cmpsl
inc
xor
gs
std
je
roll
stos
mov
in
sbb
inc
mov
pop
pop
adc
loopne
imul
in
or
pop
jo
sub
loopne
daa
xor
ret
jmp
add
cld
out
daa
fsubl
cs
sbb
pop
adc
ljmp
sub
mov
gs
loop
aad
popa
adc
shll
rcrb
pushf
daa
push
sub
sub
pushf
cltd
or
mov
add
aam
jo
pop
lret
push
push
cli
decl
sbb
xor
jle
imull
jae
lcall
sbb
roll
push
ja
jmp
stc
pop
cmp
sub
push
in
add
inc
cmp
mov
in
insb
mov
jns
cltd
cmc
data16
int
cpuid
push
mov
adc
sub
mov
dec
js
xchg
xlat
movq
mov
xor
mov
inc
insl
adc
inc
daa
push
pop
je
mov
stc
imull
push
andl
out
pop
ljmp
mov
je
sbb
jbe
mov
lea
add
or
ds
movntq
loope
xchg
aas
lret
loop
pop
push
call
or
int3
mov
sbb
setb
adc
xchg
mov
and
xchg
rol
and
dec
add
mov
or
popa
jg
test
in
adc
mov
repz
sub
inc
bound
je
jecxz
mov
popa
mov
filds
pop
push
loop
sbb
in
lcall
mov
inc
adcb
sub
pop
and
cmc
xchg
int
jnp
pop
or
xor
mov
add
popf
mov
call
sahf
inc
test
mov
add
jae
adc
jne
inc
sub
xor
cmp
roll
fcoms
inc
test
imul
sub
test
and
fcmovne
mov
mov
ja
xchg
clc
aam
je
sub
gs
jno
pop
mov
subl
and
dec
es
out
mov
gs
xor
pop
mov
fs
mov
and
mov
sahf
into
sub
cltd
pushf
mov
inc
mov
inc
adc
fwait
and
lds
popf
xchg
xlat
out
sbb
push
sub
imul
mov
inc
dec
aam
pop
aas
cmp
mov
call
pop
sti
xor
mov
add
mov
jbe
adc
fisubs
xchg
mov
mov
cs
pop
scas
lea
xchg
imul
arpl
and
mov
lret
imul
enter
dec
mov
jae
mov
cmc
shlb
dec
hlt
ficoml
out
cmpsl
scas
lods
sub
cmp
jns
xchg
outsl
mov
push
inc
sbb
mov
out
add
add
adc
add
call
and
int
mov
test
add
or
and
clc
jle
add
pop
stos
dec
push
adc
scas
push
or
sbb
dec
pop
leave
repz
sbb
xor
in
scas
jmp
stos
enter
sub
push
cmp
mov
dec
aam
fs
push
pop
in
ja
jmp
mov
in
sti
pop
or
xchg
or
add
adc
fldcw
xchg
and
movsb
ret
xchg
sub
jg
xchg
shrl
ss
out
adc
pop
pop
loope
rcr
call
mov
stc
xor
xchg
push
mov
out
clc
add
pop
lret
mov
xchg
mov
fwait
cmp
inc
cwtl
arpl
inc
push
and
ret
repz
fistl
sarl
and
xor
or
or
or
dec
fwait
xchg
jg
or
pop
in
push
add
mov
sbb
xor
push
inc
push
out
ljmp
xor
rolb
stc
xchg
out
mov
jmp
xchg
gs
jmp
outsb
gs
ja
fmull
insl
mov
addr16
xchg
les
iret
jp
mov
mov
testb
movsl
push
jb
popa
push
jp
sub
mov
and
ss
pop
pop
lods
cwtl
dec
mov
xchg
icebp
into
jno
aam
mov
in
ds
sub
test
mov
sub
cmp
sub
dec
adc
ljmp
mov
mov
mov
repnz
test
shlb
xor
out
mov
shlb
jge
and
xchg
out
jg
outsl
lea
lea
mov
outsl
out
int
dec
xchg
xlat
cmpsl
sbb
add
int
add
decl
dec
out
sub
push
test
outsb
push
outsb
xor
jecxz
sub
adc
mov
mov
ds
inc
pop
scas
mov
adc
movsl
test
popf
and
jnp
push
sbb
out
cs
test
and
xchg
mov
add
push
cs
rolb
hlt
int
mov
fstpt
cmpsl
and
popf
stos
xchg
nop
pop
leave
dec
cmp
xor
les
and
sbb
pop
fld
mov
pop
mov
pop
dec
in
add
rclb
ror
repnz
popf
push
int
add
out
jbe
add
loopne
add
push
pop
outsl
mov
mov
jmp
and
sbb
xor
insl
and
cmp
cmp
and
inc
mov
std
das
imul
cmp
mov
pop
mov
int3
cwtl
mov
fs
pop
mov
enter
ret
loop
insl
inc
lea
cltd
aas
pop
int
mov
sub
imul
sub
mov
push
sub
cwtl
push
fwait
xor
fsubl
orb
xchg
sahf
inc
fmulp
jbe
or
insb
mov
mov
call
iret
shll
aad
lods
mov
pushf
adc
sbb
inc
mov
add
lcall
mov
leave
inc
inc
push
mov
xor
fisttpll
mov
or
outsb
inc
clc
push
pop
mov
adc
scas
adc
fildl
enter
xchg
or
xchg
cmp
jns
jo
mov
movsb
or
ret
push
add
gs
pop
insb
std
adc
pop
adc
mov
out
jae
dec
into
ss
inc
sub
cmp
dec
inc
and
mov
push
xor
mov
jns
jno
adc
mov
outsb
mov
insl
mov
shrb
add
ja
negb
out
stos
les
test
out
cmc
sbb
pop
xor
stos
xlat
adc
test
mov
and
jmp
stos
xchg
push
jmp
push
and
and
pushf
arpl
xchg
clc
sahf
movntq
xorb
mov
fdiv
mov
js
insl
xor
mov
lea
cmp
sbb
and
pop
add
in
jno
cwtl
mov
test
jae
int3
pop
cmp
mov
push
mov
mov
js
adc
ror
imul
push
popa
push
rorl
push
sete
outsb
faddl
in
push
js
push
jnp
jle
cli
xor
mov
cmp
cmc
sub
xchg
fisttps
add
jne
mov
dec
in
das
lret
mov
add
pop
cmp
js
xchg
dec
leave
xchg
mov
inc
or
push
imul
stos
insb
mov
pop
push
movsl
sub
push
inc
mov
rorb
jne
and
ljmp
and
lods
jle
das
cmp
add
cmp
lret
xchg
mov
adc
jg
cmpsl
stc
and
leave
xor
mov
inc
inc
in
cmp
xchg
rclb
ds
ss
arpl
inc
jb
in
or
loop
mov
dec
in
enter
mov
sbb
cltd
fptan
in
rcll
push
stc
push
jbe
cwtl
and
xor
push
add
loope
cli
xchg
je
jo
ja
push
fadd
imul
ror
cmpsb
add
repz
negb
ds
lods
xchg
aam
cld
push
adc
stos
movsb
jl
clc
sub
outsl
dec
into
push
push
or
adc
lahf
aas
movsl
adc
or
jg
lret
or
imul
push
loop
sub
iret
scas
pushf
push
out
xor
lcall
in
ret
xchg
cmpsb
daa
dec
pop
mov
xor
mov
mov
sbb
sub
xchg
dec
loopne
jb
ss
pop
call
pop
out
scas
lret
out
lds
add
cmc
lods
mov
cmp
inc
xchg
aad
js
xchg
xchg
stos
loopne
imul
ja
test
cmp
popf
xchg
dec
add
daa
mov
dec
sbb
sub
imul
cmp
pop
jg
mov
out
push
xchg
cs
ret
dec
xor
jne
nop
mov
pop
aaa
pusha
sbb
mov
inc
mov
mov
pushf
js
out
sub
xchg
jb
mov
rclb
jno
lds
stc
jb
nopl
addb
lcall
jecxz
ret
fcomps
call
sbb
push
mov
xor
pushf
rolb
jb,pn
adc
or
mov
push
loope
lods
xlat
inc
mov
fwait
mov
shll
imul
xor
ss
xor
ret
mov
fcoml
pop
xchg
jne
jge
mov
gs
or
andb
mov
jne
cmc
pop
daa
xchg
push
add
mov
stc
ret
and
pop
inc
mov
je
pop
in
jbe
rcr
and
pushf
lret
pop
les
mov
sub
mov
cs
test
dec
rorl
or
or
lret
mov
pop
test
das
and
push
push
shrb
jl
and
lods
xor
cmc
or
jge
xchg
cltd
and
leave
or
out
ret
test
adc
push
mov
mov
fiaddl
add
add
unpcklps
mov
lods
xchg
call
or
push
roll
gs
clc
mov
push
fsubl
xor
cmp
jle
pop
fs
outsl
into
jp
or
lods
mov
mov
dec
xor
push
cmp
addr16
addb
dec
mov
mov
addr16
ja
push
cmp
ss
inc
in
mov
xor
xchg
xor
pop
jge
mov
dec
and
lods
sub
ds
pop
xchg
push
mov
cmp
lods
mov
outsb
xchg
popa
jp
pop
mov
and
ss
out
pushf
dec
test
pop
and
ret
into
add
pop
or
stos
testb
xor
push
fwait
inc
jecxz
nop
out
leave
push
mov
mov
sbb
push
sub
lret
jl
jno
insb
mov
mov
popf
frstor
push
stos
iret
xchg
fistpll
cmp
sbb
dec
fimull
shr
push
adc
xchg
xlat
pop
and
orb
inc
lods
xor
push
sub
cs
xchg
ret
mov
sti
xchg
mov
jg
in
ds
loope
std
sbb
repnz
sbb
dec
dec
cmc
mov
mov
dec
cmp
ret
sub
outsl
iret
and
xchg
mulb
cmp
ja
cli
lds
sbb
jo
insb
cmp
pusha
ljmp
mov
ljmp
es
add
out
inc
psubsb
xor
jns
mov
pop
mov
or
call
or
inc
scas
or
push
arpl
fwait
std
cltd
mov
inc
cmp
test
cmc
cltd
fcoml
pop
ss
pushf
xchg
loope
lcall
mov
pop
ja
gs
inc
cld
notb
mov
imul
and
cmp
leave
or
pop
xchg
mov
bound
jb
mov
push
adc
mov
mov
test
int
ljmp
push
ret
cmp
inc
addl
icebp
push
rolb
pusha
push
popl
sbb
mov
outsb
in
adc
pop
mov
leave
cmp
push
mov
call
int
add
fwait
jb
mov
jo
sbb
outsb
xchg
cmc
add
dec
lahf
push
lea
pushf
fcmovu
enter
addr16
sbb
mov
add
jns
cmp
mov
sub
dec
add
pop
or
jns
lock
test
sbb
push
popa
dec
and
stos
test
inc
loop
iret
dec
push
test
mov
mov
call
loop
or
adc
add
test
dec
lret
sbb
ret
push
lock
test
xchg
int3
fs
lds
lock
push
cmp
jp
lods
inc
dec
xor
push
cld
xchg
gs
jb
int3
ret
push
out
jmp
or
ds
mov
xor
jb
js
pop
cmp
in
push
call
or
ss
xlat
lahf
ret
xchg
jmp
jge
mov
inc
push
push
jae
inc
aas
popa
cli
mov
cmp
jnp
push
jbe
aam
dec
add
cmpsb
cmp
mov
cmpsl
flds
inc
adc
lret
and
jb
xchg
jae
ret
mov
xchg
ja
add
fisttpl
ret
cld
mov
cmp
xor
jp
in
fsubl
mov
add
xor
jae
jo
xor
test
ja
mov
dec
add
and
sub
jle
lods
sub
cwtl
push
inc
push
ret
in
fisubs
cvttps2pi
inc
adc
xchg
sub
lock
mov
push
lret
in
unpckhps
rcrl
stos
mov
sbb
mov
or
out
mov
xor
inc
ret
das
cmp
leave
sbbl
add
pushf
jmp
or
jle
into
or
push
mov
mov
xchg
xchg
mov
jno
out
adc
enter
adc
push
xchg
xchg
fsubrl
inc
popl
lcall
mov
js
test
jb
jmp
cmc
lds
xor
fstp
movsb
mov
pop
ss
xor
mov
sub
in
test
es
aaa
rolb
fsubs
repz
leave
sbb
scas
es
ljmp
out
adc
push
in
mov
push
test
sbb
mov
pop
xchg
aam
popf
shr
mov
out
cmp
xchg
bound
pushf
je
sbb
mov
outsl
iret
and
inc
scas
rorl
lret
xor
mov
lods
fsts
leave
mov
gs
mov
adc
fcmove
stos
pusha
inc
nop
adc
pop
or
leave
dec
push
jl
dec
movl
add
jle
data16
rcrb
insb
arpl
cmp
push
dec
scas
rclb
xlat
fistps
cld
fistpl
mov
push
push
popf
xlat
je
sbb
ficompl
iret
rcl
jmp
push
movsl
dec
xor
loop
lods
std
pop
popf
xor
xchg
xchg
dec
mov
xchg
sbb
pop
pushf
jns
push
dec
repnz
xor
xchg
movsl
mov
sub
mov
sub
sbb
dec
jnp
and
sub
sahf
sub
mov
fwait
jns
sbb
loopne
jbe
xchg
cmp
push
movsl
push
push
gs
insl
lret
aam
lock
loopne
jle
fwait
es
stos
bound
inc
dec
outsb
jl
pusha
sti
xchg
pop
or
mov
and
arpl
movsb
fwait
mov
xor
sbb
lds
or
lahf
imul
int
jg
cmpsl
lods
dec
out
inc
cmp
testb
inc
push
popf
sub
addr16
out
icebp
ss
popf
sbb
inc
dec
lcall
xchg
int3
outsb
pop
js
into
jecxz
mov
xor
cmp
sub
jmp
mov
stc
call
add
sbb
test
clc
popa
rolb
xor
xlat
push
out
hlt
enter
pop
inc
push
idivl
push
dec
hlt
les
mov
add
adc
mov
loop
insl
imul
add
xor
mov
fstps
dec
movsl
and
aad
pop
lods
ret
test
pusha
mov
call
fimull
mov
enter
insb
xchg
cmp
cltd
add
cs
xor
in
pop
scas
bound
test
sbb
mov
fisubrs
mov
aas
xor
arpl
aad
in
jp
dec
shll
out
pop
push
sahf
cwtl
pusha
ss
scas
xchg
add
mov
sbb
stc
dec
push
mov
inc
mov
dec
inc
ror
cmp
scas
aas
mov
push
fwait
and
mov
xchg
loopne
pop
jge
scas
or
add
xor
stos
mov
jecxz
sub
jo
and
push
incb
adc
ljmp
test
add
pop
inc
mov
and
mov
stos
mov
cwtl
or
lahf
int3
pop
xchg
jmp
mov
xor
push
shlb
mov
add
rol
aas
add
stc
cmp
sub
jmp
or
in
jno
cmpl
xchg
xor
mov
inc
mov
sub
push
clc
jb
push
negb
xchg
aam
les
bound
mov
gs
and
dec
dec
mov
or
movl
fisubs
arpl
or
imul
mov
fistps
out
mov
loopne
pusha
and
push
push
sub
lahf
cmp
sbb
push
std
sub
and
and
inc
mov
or
jl
inc
mov
sbb
mov
and
jne
sub
lret
clc
xchg
sbb
pusha
inc
mov
stos
and
sbb
push
aas
xor
lret
mov
dec
xchg
lods
mov
sarb
fsubrs
shlb
clc
sub
mov
hlt
jle,pt
and
imul
pop
xchg
sub
adcb
push
and
adcb
jbe
add
shl
enter
and
out
leave
push
mov
jbe
adc
mov
xchg
popa
xor
add
popf
sbb
outsb
out
ficomps
sbb
mov
sbb
add
dec
xor
cld
pop
pop
lcall
or
in
jno
mov
sub
mov
jg
push
xchg
mov
mov
and
mov
sub
test
jg
out
mov
mov
dec
mov
cld
mov
xchg
jge
iret
data16
je
bnd
ja
xor
push
jnp
or
icebp
sub
mov
mov
repz
jb
and
ret
rclb
arpl
xor
stc
xchg
loope
repz
pop
fwait
inc
push
inc
xor
shlb
push
or
jl
arpl
xor
ficomps
icebp
in
or
sub
aas
jb
xor
pushf
lahf
inc
mov
jecxz
push
outsl
sbbb
and
xor
sbb
fsubl
mov
out
fistps
mov
js
push
push
push
faddp
fsubp
jae
ja
add
testb
xchg
inc
fiadds
push
mov
fcmovnu
daa
mov
ror
jbe
dec
mov
ror
sbb
lcall
push
out
push
lods
mov
mov
dec
cwtl
sbb
dec
aad
dec
cmpsb
in
or
shll
or
fs
push
addb
cmp
cs
adc
daa
jns
nop
leave
mov
and
push
imul
push
add
incb
push
dec
jmp
inc
xchg
pop
push
sarb
cli
repz
jmp
test
xor
mov
test
mov
gs
or
jne
sbb
in
mov
stos
fimull
and
mov
aad
cs
aam
ret
insl
insb
mov
or
shll
divl
dec
mov
add
push
sbb
xchg
sbb
rcll
insb
xadd
lods
adc
add
jo
pop
adc
dec
mov
popf
push
sti
mov
rcll
jno
push
aas
lds
dec
xchg
or
ret
mov
sub
sub
and
ja
mov
lock
out
int3
repz
out
push
iret
movsl
fsubl
jns
cwtl
xor
and
jbe
shl
cmpsl
mov
in
mov
adc
in
ja
enter
jo
jo
mov
jno
pop
int
and
aas
add
add
sbb
cltd
cmpb
decb
out
jmp
mov
movb
pusha
xor
gs
pop
inc
into
stos
sub
dec
xchg
cli
jl
cmpsl
sbb
push
jp
lds
inc
adc
inc
pop
push
inc
xor
push
ss
ds
dec
loopne
es
sub
testb
arpl
cmp
push
in
or
mov
addr16
inc
jle
mov
xor
lea
call
lret
xor
and
fisttpll
xorl
mov
je
ss
rcll
ja
stos
movsl
test
into
lret
inc
or
cs
pop
sub
xchg
inc
mov
sbb
pusha
in
cli
xchg
mov
les
push
sahf
dec
movsl
jmp
or
mov
jb
std
push
dec
mov
jg
or
dec
aaa
ja
jp
add
subl
push
xor
fmuls
arpl
sbb
outsb
pushf
mov
loopne
mov
bound
das
sbb
stc
pop
mov
add
and
mov
xchg
fsub
jecxz
lods
cmp
xchg
mov
loopne
daa
arpl
popf
add
cmpsl
add
push
lcall
adc
pushf
aaa
leave
inc
xchg
sub
test
push
mov
push
jb
or
ljmp
or
dec
ds
pop
pop
repz
sub
mov
cld
mov
xor
and
pushf
mov
ret
cmpsl
cmpsb
sub
and
push
aad
adc
jle
pusha
cmp
sar
pop
imul
push
je
xchg
test
mov
inc
movsl
loope
xor
outsb
adc
inc
and
jae
dec
in
sti
add
mov
lds
inc
cmpsb
addr16
out
push
pop
mov
mov
sub
pop
and
push
ficoml
push
clc
xchg
les
mov
or
mov
movsl
pop
and
nop
fwait
sub
aam
xor
push
mov
sbb
cmp
je
pushf
dec
lret
inc
add
gs
pop
scas
xchg
in
in
inc
sub
dec
fwait
jbe
ret
loope
insl
outsb
bound
sbb
int3
and
fimuls
icebp
xor
sbb
hlt
loop
js
in
fidivrl
jae
aaa
scas
pop
mov
sahf
jmp
mov
aas
or
push
mov
xchg
dec
scas
adc
inc
test
loopne
loop
dec
inc
xlat
scas
cmc
mov
aaa
add
jmp
mov
add
scas
jno
clc
cmpsl
inc
push
fs
mov
xor
test
mov
movsb
or
imul
rclb
mov
scas
loop
pop
clc
sar
lahf
daa
fstps
or
push
call
pop
mov
test
shl
pushf
push
sbb
test
add
or
sbb
add
daa
ficoms
inc
mov
dec
mov
lock
jecxz
or
mov
mov
dec
loopne
mov
push
movsb
mov
dec
jle
dec
ja
xor
in
mov
adc
rclb
xchg
addl
fcoms
mov
jnp
shlb
mov
lods
out
adc
xchg
adc
dec
mov
jecxz
cltd
push
lahf
rcr
nop
andb
push
insl
fucom
daa
sub
leave
shr
mov
icebp
jns
fwait
cli
mov
movb
lret
lods
fildll
movsb
inc
aad
addr16
lcall
push
inc
adc
jp
inc
xchg
lret
jle
mov
push
mov
jnp
fcom
das
lret
pop
imul
pop
xor
mov
sbb
mov
sub
sti
adc
out
xor
mov
lret
aam
jb
rclb
fs
cmp
add
dec
push
out
adc
inc
pusha
mov
in
mov
mov
inc
or
mov
fmull
fidivrs
fcoml
and
sub
shll
and
loop
or
adc
icebp
pop
jb
sarb
dec
and
sbb
psubsb
mov
outsb
and
cmpsb
adc
dec
fsts
fcomps
add
shrb
scas
repnz
js
jno
xor
sarl
or
outsl
shrl
insl
mov
mov
in
stc
adc
cli
push
popf
js
pop
adc
mov
pusha
sbb
insb
sub
pop
dec
xor
shl
cmp
repz
lds
push
sub
jecxz
push
mov
mov
jle
clc
rorl
dec
mov
mov
mov
jne
dec
shll
cmpsl
push
sbb
push
mov
movsl
out
add
mov
insl
ffreep
loope
sub
adc
insl
mov
sbb
andl
push
xchg
mov
lret
inc
es
data16
sbb
lds
mov
add
call
push
xchg
out
mov
push
mov
bound
fdivrl
gs
cltd
mov
in
lock
pop
mov
lds
or
pop
mov
adc
movsl
pop
repnz
mov
inc
fwait
jl
xor
in
jo
insl
mov
arpl
ja
cmpl
daa
fwait
pop
adc
fbstp
repnz
inc
dec
std
cmp
test
stc
cmp
dec
scas
push
sub
scas
push
or
aad
in
adc
and
sbb
inc
mov
rclb
and
jg
mov
out
repnz
lret
mov
or
rclb
stos
push
outsl
dec
push
xor
outsb
push
rcll
clc
scas
js
sbb
enter
mov
pop
and
and
sbb
mov
adc
addb
dec
dec
adc
frstor
pop
inc
or
movsb
out
iret
loopne
ret
and
xchg
jo
stos
jns
jecxz
dec
and
jno
cmp
mov
sti
xchg
xchg
scas
fisttpl
inc
add
outsl
call
fimuls
dec
cld
test
jecxz
mov
push
cmp
inc
into
fistl
ficompl
push
dec
movsb
push
sar
scas
sbb
jns
insb
or
and
mov
jo
movsl
jne
push
std
hlt
lods
or
ficoms
cltd
jbe
mov
pushl
in
add
mov
mov
mov
int
jnp
movsb
mov
mov
mov
xchg
xchg
ret
test
cmpsb
outsb
fucomip
push
sti
stc
loopne
aaa
leave
fs
or
sub
jb
push
ret
jp
lock
and
repnz
ss
out
jp
add
pop
icebp
xchg
sbb
or
push
fsubr
xor
repz
mov
add
loop
xorb
mov
jo
xchg
movsb
add
push
mov
mov
out
jae
inc
ficompl
scas
loopne
or
xor
sbb
pop
mov
push
arpl
xchg
arpl
popa
daa
push
imul
cmpsb
jno
push
rol
test
mov
ds
or
or
loopne
arpl
repz
sbb
xor
aaa
fimull
lea
fidivrs
or
push
xchg
je
cmp
xlat
outsl
push
cmpb
shrb
ror
jns
movsb
mov
fwait
pop
aas
pushl
scas
scas
mov
pop
in
test
pop
dec
pop
cltd
sub
inc
inc
inc
xor
adc
iret
loopne
sub
adc
push
dec
or
pusha
push
pop
add
sbb
and
push
enter
adc
dec
sub
push
add
sbb
and
xor
and
orb
std
subl
jge
pop
cmp
jp
sti
sbb
adc
mov
fdivp
pop
xchg
cmp
je
mov
dec
sbb
popl
stos
dec
flds
push
inc
cli
add
imul
lret
jnp,pt
test
and
xchg
fistl
sub
or
push
push
jae
repz
out
lds
add
mov
pop
xor
rcr
enter
iret
mov
lahf
mov
mov
sbb
add
adc
xchg
sub
or
xchg
and
les
or
popa
or
shll
xor
test
add
adc
call
cwtl
xlat
pop
sub
mov
dec
fisubl
in
inc
push
lret
add
mov
sahf
lahf
pop
push
dec
divb
add
andb
mov
in
jmp
shll
jl
add
leave
sarl
push
mov
divb
mov
pushf
fdivrs
enter
xchg
daa
adc
imul
sbb
inc
fadds
in
add
inc
fldt
xchg
cmp
inc
loope
mov
jmp
xrelease
cmpl
xor
les
test
arpl
and
add
adc
shlb
outsl
sbb
jns
dec
xchg
sti
push
leave
ss
mov
push
mov
imul
pop
push
mov
shll
add
push
mov
hlt
and
mov
scas
push
add
lcall
cld
mov
iret
test
cmp
lret
dec
sti
cmc
lds
jecxz
in
inc
push
xchg
push
xor
loope
pop
sub
or
iret
pop
cli
insb
dec
or
mov
stc
pushf
jnp
pop
mov
lahf
pop
mov
enter
and
fiadds
jl
scas
xchg
out
push
ljmp
and
or
fisubrs
xor
sbb
shrb
inc
push
popa
mov
add
mov
imul
in
pop
ret
in
test
popf
sbb
idivb
jmp
int3
setle
mov
cmpsl
cmp
rolb
mov
jecxz
pop
stos
mov
loope
pusha
push
inc
xlat
or
mov
call
lods
test
dec
inc
mov
sbb
mov
fbld
xchg
mov
scas
pushf
xor
das
mov
imul
fwait
xchg
aad
dec
shr
int
mov
inc
inc
movsb
mov
sub
cmpsl
sub
rorl
pop
pop
test
pop
leave
sti
push
fidivs
add
les
pop
dec
neg
ja
in
dec
push
aad
xor
sti
pop
and
rcrb
lods
rolb
into
mov
sub
cld
mov
pop
jno
pop
sbb
imul
xchg
xor
cli
lcall
int
movsl
lods
sub
xchg
leave
insb
xchg
out
and
mov
daa
sbb
or
or
dec
xchg
mov
fwait
repnz
mov
inc
mov
mov
mov
es
push
and
test
push
mov
movsl
popf
dec
cmpsl
jecxz
xchg
pushf
jno
jo
bound
pusha
aam
das
loopne
xchg
lock
in
xchg
sbb
sbb
pop
cmp
in
icebp
jb
std
inc
or
outsl
dec
mov
imull
or
sti
dec
or
lods
or
push
cld
sub
roll
repz
push
mov
aas
dec
sub
adc
scas
mov
or
insl
scas
test
imul
insl
pop
imul
or
dec
dec
pop
dec
push
xchg
add
shrl
mov
lret
or
fistpll
xlat
adc
pushf
cmc
pusha
sbbl
xchg
test
mov
pop
xlat
mov
aam
mov
xchg
ljmp
inc
inc
lret
insb
mov
fdivrs
lods
dec
jne
mov
jp
lret
xchg
out
jae
dec
mov
popf
sarb
dec
lods
mov
xor
aad
out
or
add
push
popa
adc
loopne
movsb
shl
sbb
push
adc
dec
popw
dec
jmp
pop
xchg
xor
inc
add
sub
add
cmpsb
jo
lods
lret
dec
pop
pop
in
insl
mov
mov
repnz
mov
xor
sbb
test
xlat
sub
je
mov
inc
je
xchg
adc
les
or
fidivs
stos
xor
sub
repz
adc
and
lret
test
sbb
hlt
dec
fs
cmp
mov
xchg
fdivrs
or
rolb
dec
in
dec
test
mov
xchg
and
jp
and
pop
ficoms
dec
sbb
out
dec
out
push
xor
repz
cld
jecxz
cmpsl
pushf
outsl
icebp
fdivs
std
cmpsl
sbb
pop
jp
std
loope
out
popf
leave
test
xor
and
stos
fistpl
aam
and
lret
lret
aaa
mov
fmull
pop
stc
jge
mov
sub
pop
cmp
mov
test
frstor
xor
add
jle
sbb
fwait
je
sbb
lods
aad
and
adc
xor
push
das
faddl
jno
in
fstl
inc
mov
mov
xor
flds
jns
scas
cltd
dec
jmp
mov
xchg
arpl
cwtl
xchg
mov
in
js
jmp
xchg
mov
scas
aaa
and
sarl
add
repnz
mov
mov
sahf
adc
xchg
lds
mov
dec
cmp
xchg
add
stos
cmpsb
add
in
add
into
pop
filds
mov
repz
out
shlb
mov
aas
outsb
stos
adc
arpl
insl
flds
sbb
xchg
sbb
jecxz
iret
mov
mov
lods
cmpsl
dec
sub
inc
or
out
dec
and
insl
mov
add
movsl
xchg
das
data16
cmp
push
mov
inc
xorl
mov
sub
iret
clc
cmp
jle
jno
mov
push
clc
inc
jmp
push
test
ljmp
das
mov
jp
mov
mov
pop
in
push
orb
bound
mov
mov
and
jg
insb
ret
sub
aam
push
mov
adc
push
pop
mov
pop
insb
and
mov
jne
or
mov
fwait
sub
add
add
mov
es
loop
loopne
iret
daa
sbb
lahf
dec
pusha
aaa
fdiv
in
repnz
rcr
test
mov
mov
lock
sbb
add
pop
push
sub
and
sahf
or
movsb
xorb
adc
daa
xchg
xor
fst
jg
sahf
aas
mov
sub
clc
dec
lcall
js
daa
aam
push
push
mov
push
fiadds
or
movsl
int3
dec
and
sub
xor
jns
jae
mov
dec
and
lret
popa
out
inc
inc
push
mov
xlat
mov
mov
imul
mov
xchg
and
out
mov
cmp
cltd
push
leave
adc
sti
jbe
mov
pusha
stc
in
fimull
lcall
scas
stos
pop
cmpsl
scas
sub
adc
std
adc
pop
out
stos
or
rcrb
movsb
jp
out
sub
movsl
imul
out
inc
jno
rolb
cwtl
mov
test
enter
pop
mov
cmpsl
add
aam
xchg
sti
push
mov
test
clc
lods
pop
xchg
fdivs
add
mov
push
out
fldcw
xor
push
cs
xchg
sbb
mov
inc
popf
ret
or
cmp
cmp
stc
xchg
push
mov
sbb
push
inc
sub
add
test
fwait
push
jg
adc
call
out
in
call
and
into
dec
in
mov
jns
xor
xchg
sahf
inc
iret
mov
mov
pushf
add
out
xor
repnz
sub
fldenv
fldl2e
adc
repz
test
and
push
nop
mov
jmp
jge
xchg
adc
add
jl
sti
dec
push
xchg
shlb
jb
icebp
xor
add
add
jmp
mov
cmp
inc
jl
mov
jbe
jae
insb
dec
ret
dec
movsl
dec
xor
daa
int3
dec
and
inc
mov
cmpsb
insb
scas
xlat
lock
cmp
mov
dec
sti
inc
scas
fisttps
roll
mov
push
addr16
subb
fdivp
mov
es
xor
lock
repnz
inc
mov
dec
movsl
pop
lds
fsubs
sub
fisttpll
loopne
push
push
sahf
xor
insb
xchg
insb
push
sub
adc
xor
jle
xchg
mov
flds
pop
add
lods
fidivrl
jp
es
and
dec
fs
fnstsw
adc
popa
cmpl
ja
shr
cmc
sahf
jnp
dec
add
pop
mov
sub
xchg
nop
outsl
insl
call
cmpsl
mov
std
cmp
cmp
xchg
das
and
mov
jp
mov
jno
fs
cwtl
mov
jle
dec
pop
and
les
lods
or
and
repz
popf
jmp
test
dec
or
scas
xchg
xor
cmp
push
jns
push
sbb
inc
loopne
roll
insl
pop
fistps
dec
push
xchg
xchg
xor
sbb
je
sub
mov
aam
sarb
lods
or
sub
pusha
es
sbb
aad
and
pusha
cmc
push
pop
ja
and
jmp
adc
das
dec
gs
fidivs
sbb
out
xor
and
sahf
push
add
pusha
fldt
hlt
and
pusha
lcall
mov
push
jp
stos
daa
fistps
push
pop
cli
mov
aam
cmp
into
pop
imul
sbbl
xchg
flds
lret
and
sbb
mov
std
test
pop
xchg
sub
rcrb
push
cli
pop
popf
xchg
pop
adc
shr
clc
hlt
shrl
into
dec
xor
sbb
ffreep
push
inc
mov
cmp
mov
clc
add
mov
xor
sub
ds
xchg
sub
insl
aam
loop
inc
xor
inc
dec
sub
dec
sahf
inc
int
out
enter
mov
sub
push
sbb
outsl
and
loopne
jl
rcrl
out
outsb
push
inc
cmp
hlt
fistps
mov
lds
sub
add
loopne
imul
dec
nop
mov
jo
insb
cmpb
cmpsl
stos
jo
inc
and
scas
xor
inc
iret
imul
fs
pushf
push
and
sbb
add
sub
stc
ja
sbb
clc
ds
lods
pusha
dec
popl
mov
cmp
mov
decb
xlat
pop
mov
xchg
mov
push
std
icebp
cmpsl
pop
sarb
jae
lret
sub
sbb
mov
jle
mov
scas
gs
cmp
mov
cmp
adc
jo
pusha
and
xchg
out
push
push
rcll
xor
push
stos
bound
push
andl
and
addb
pop
fnsave
pop
dec
mov
add
or
push
sbbl
jne,pn
mov
push
pop
and
icebp
mov
mov
ret
sbb
addb
xor
lods
push
xlat
dec
mov
inc
xor
shl
pop
in
xchg
cmp
mov
pop
stos
call
fcomps
lods
cmc
xor
test
jne
ss
rcrb
gs
xor
jo
gs
daa
jne
mov
jno
push
fldt
pop
mov
jmp
xor
hlt
and
jbe
cwtl
mov
out
fsubr
or
xor
adc
decl
cmc
inc
enter
cmpsl
add
clc
notb
jnp
sub
dec
xchg
shlb
mov
adc
add
add
mov
jb
pop
fst
outsl
pop
mov
pop
cmp
xorl
adc
sarb
test
cmp
cmpb
outsb
fcmovb
and
movsb
sbb
mov
pop
pop
pop
shlb
in
test
pusha
jo
adc
jne
add
xchg
fmuls
fadd
xchg
xchg
mov
movsb
mov
mov
or
outsl
adc
lock
scas
mov
mov
lock
icebp
stos
aas
movsb
mov
js
dec
pop
xchg
push
mov
push
and
into
fs
cmc
xchg
or
mov
sbb
dec
test
mov
test
cmpsb
scas
xor
pop
cmp
insb
push
pop
lret
in
mov
and
mov
lahf
jle
jmp
sbb
mov
imulb
lea
sbbb
or
xor
lret
in
inc
movl
xor
push
das
out
mov
and
sub
and
mov
push
les
mov
mov
popf
cmp
jns
push
cmp
jno
dec
jo
pop
out
inc
out
in
incb
push
mov
mov
stos
push
mov
cmp
xchg
mov
sbb
negb
mov
test
icebp
pop
mov
arpl
out
jp
ret
std
mov
lret
out
adc
add
xor
orl
adc
adc
fsubrp
in
in
add
push
dec
mov
aam
imul
insb
ja
ljmp
and
outsl
pushf
jecxz
aam
pop
insb
fisubrs
ret
and
jg
jo
add
aad
cwtl
in
in
sub
push
cmpsb
adc
scas
ljmp
push
push
sub
sbbb
mov
dec
xchg
cmp
cwtl
mov
fidivrs
je
or
mov
mov
jnp
rclb
insb
scas
je
cmp
das
inc
push
jo
das
xchg
aam
inc
push
int
inc
mov
mov
inc
sbb
jecxz
in
sub
push
mov
int
sar
gs
sahf
mov
or
addr16
hlt
xchg
pop
xchg
mov
outsl
sub
movsb
lods
cmpsl
dec
shr
lods
jl
add
jb
daa
cli
ja
in
add
push
pushf
rolb
cmp
and
jecxz
fadds
add
cmp
insb
outsl
cmp
push
inc
mov
pop
push
imul
xor
sbb
into
iret
push
lods
xchg
popa
in
out
add
jns
iret
shr
add
aam
push
call
dec
insb
push
je
lods
mov
and
push
and
cmp
orl
sub
icebp
push
mov
pusha
jne
fldenv
out
mov
in
mov
call
popf
lods
push
or
test
rorb
jno
push
mov
nop
lea
or
lods
mov
mov
sahf
movsb
lcall
fdivrs
mov
test
sub
sarb
cmpsb
pop
insb
pop
in
add
mov
adc
push
mov
cmp
inc
imul
insb
and
mov
sub
movsb
sbb
jp,pn
sub
ret
sarl
sbb
fs
sub
cmp
in
imul
orl
pop
and
popf
out
xchg
loop
push
cmpsl
rorb
ss
xchg
lret
inc
dec
pop
sub
push
inc
jae
mov
dec
andl
popf
pop
leave
ja
vorps
div
sbb
out
cmp
mov
rcll
pushf
and
fs
push
mov
rorl
js
pop
sti
pop
aam
pop
inc
push
mov
inc
daa
dec
aaa
rcr
push
lods
sahf
test
cmpsl
pop
mov
mov
inc
out
imul
mov
cmp
adc
jno
mov
pop
dec
sbb
cmp
fdivr
dec
mov
xor
lods
scas
fists
pop
rep
mov
leave
add
sbb
jae
cwtl
or
xchg
mov
push
in
sbb
bound
test
adc
jns
jg
int
push
je
das
pop
push
push
cs
cmp
inc
jb
adc
mull
and
push
or
mov
jl
push
clc
push
cmc
js
std
mov
cmp
mov
cli
jbe
jo
adc
xor
xor
push
imul
and
inc
mov
pop
hlt
push
mov
pusha
mov
rolb
stc
out
insb
movsb
push
ds
adc
roll
or
ds
mov
xchg
pusha
jp
sbb
push
jge
jns
rcrb
inc
ret
push
push
ret
pop
test
push
sub
and
and
fistpll
in
dec
lock
inc
mov
cmp
repnz
shl
or
std
jp
xor
pop
mov
push
or
sarl
int3
rorb
push
mov
and
and
xchg
mov
mov
push
xor
jbe
int3
addl
sbb
xor
adcl
sub
pop
xchg
mov
fwait
push
xor
pop
sub
inc
and
jg
js
mov
loope
out
aas
pop
dec
test
gs
into
fnsave
xor
cmp
or
fs
jae
mov
call
loope
pop
lahf
daa
das
mov
sbb
pop
in
pusha
rcrl
push
push
scas
jbe
fadds
mov
testb
test
push
jl
scas
inc
sbb
adc
loop
jmp
ret
xchg
mov
sub
jp
inc
add
mov
lea
in
add
inc
push
jmp
mov
push
loope
inc
lret
mov
mov
mov
clc
mov
movsl
mov
ret
sub
push
mov
xor
fsubrs
test
pop
pop
jp
repnz
mov
test
mov
mov
test
lock
push
sub
sub
addl
pop
fsubl
int3
adc
xchg
outsl
aad
xchg
xor
sbb
imul
das
or
loop
aaa
aas
adc
xor
fmuls
push
pop
mov
add
ret
enter
jno
mov
adc
and
xchg
cmp
shl
into
jl
mov
out
mov
sbb
aaa
pop
dec
push
mov
icebp
jmp
andl
add
mov
push
jne
jl
mov
mov
push
and
notb
add
adc
mull
inc
test
sbb
add
lods
push
cmp
inc
inc
xchg
loop
jns
movsl
cmp
aas
pop
rcll
jae
mov
and
mov
pushf
cmp
mov
jg
inc
or
xchg
pop
mov
mov
es
mov
xor
es
add
outsb
mov
pop
mov
jb
das
add
loop
cmc
pop
push
and
pop
into
lods
sub
cmc
pop
add
adc
or
mov
ret
int3
mov
and
xchg
insl
mov
das
iret
mov
loopne
popl
cmc
add
ja
pushf
cmp
or
leave
mov
xor
pop
pop
int3
xor
xchg
shrl
xor
mov
test
test
mov
fnstenv
xchg
enter
in
jae
xchg
xor
scas
push
mov
arpl
mov
imul
mov
or
mov
les
pop
cli
adc
push
movsb
popf
jge
jno
test
mov
push
cmp
outsb
mov
lret
cli
stc
mov
jle
fiaddl
std
xchg
mov
mov
sub
shll
jmp
mov
add
pushf
inc
out
mov
mov
hlt
mov
sub
and
icebp
sbb
fs
pop
sbb
add
test
dec
shr
mov
jnp
xchg
out
shl
xorl
scas
xor
mov
sub
imulb
cmpsb
es
adc
adc
data16
aad
insl
fwait
addb
clc
out
lahf
call
cltd
fwait
mov
pusha
mov
cmp
je
repnz
mov
rorl
or
pop
mov
mov
and
mov
lods
idivl
push
jge
add
nop
addr16
dec
jmp
sarl
test
pop
mov
add
out
sub
stos
pop
mov
lods
jecxz
sarb
mov
xor
inc
imul
mov
xchg
jbe
outsb
adcb
cld
aad
ja
jo
iret
int3
sub
xor
cmp
and
pop
push
pop
pop
pop
aas
ds
stc
mov
pop
xchg
insl
sub
lock
jecxz
pop
shrb
lret
hlt
add
cmpsb
notb
jbe
push
int
pop
xor
dec
xchg
in
fsubrl
sbb
nop
mov
sbbl
mov
push
lods
push
and
xchg
imul
test
jbe
pusha
cmp
js
fstl
lds
lahf
lahf
mov
aad
lret
test
test
pop
jle
cwtl
push
pop
push
xchg
jnp
jmp
outsl
mov
push
sahf
mov
sub
adc
push
ljmp
xor
mov
sbb
push
cld
sub
mov
lods
inc
dec
loopne
inc
mov
xchg
ret
jmp
push
orl
or
dec
imul
xchg
les
cmp
popf
sbb
dec
ja
mov
jnp
add
loope
jne
std
push
pop
and
sbb
mov
xchg
popf
mov
mov
sub
jae
inc
mov
dec
pop
inc
sbb
inc
shlb
adc
ret
cs
fldt
lea
sub
lahf
fwait
gs
jnp
sub
add
mov
add
and
push
jo
loope
pushf
sbb
push
mov
ret
out
icebp
dec
mov
iret
negb
or
loope
cli
and
sbb
mov
adc
ds
push
rcrl
sbb
dec
mov
add
aad
mov
sahf
push
adc
or
hlt
test
and
mov
lcall
jns
enter
mov
dec
add
jnp
mov
stos
mov
mov
fildll
push
push
out
aaa
jno
and
cmp
or
adc
mov
loope
jnp
shlb
push
adc
inc
out
ret
outsb
jae
cwtl
push
jb
xchg
add
loope
outsb
adc
mov
push
hlt
js
test
jnp
sahf
punpckhdq
mov
ficomps
dec
repz
xor
xchg
je
idivb
imul
xor
cmp
mov
inc
xchg
mov
hlt
loope
fsubl
popf
push
add
xorb
orb
push
jg
xor
inc
xor
subb
xchg
fcos
mov
pop
out
jne
out
jno
push
ja
pop
pop
stos
je
sub
les
jge
cmp
js
xchg
push
icebp
push
push
dec
dec
test
jmp
and
push
mov
lcall
inc
filds
rcrl
adc
and
pop
mov
out
fstps
lods
mov
inc
push
adc
ljmp
sarb
std
mov
lods
faddl
sbb
addr16
aas
scas
out
movsl
mov
mov
in
enter
testl
mov
or
je
cmp
adc
enter
mov
push
mov
daa
dec
sbb
pop
pop
scas
dec
clc
test
fwait
repnz
adc
or
jmp
push
stc
aam
xor
lods
jge
mov
aam
div
mov
in
adc
clc
daa
or
loopne
shl
out
mull
inc
stc
pop
xor
pop
in
sti
sbb
cmc
inc
nop
cmp
xchg
in
mov
jns,pn
das
imul
add
xor
gs
pop
clc
adc
sub
mov
push
xchg
sbb
dec
pop
jle
mov
and
clc
mov
pop
dec
inc
xor
jp
fs
mov
pop
jno
jns
cmpsb
push
and
or
pop
fidivrl
inc
mov
push
fwait
rorl
xchg
popf
cmp
js
jne
cmp
jge
fsubp
fs
mov
and
dec
add
xor
fisttpl
xor
mov
mov
pop
in
xor
jle
bound
into
lahf
xor
xchg
xchg
filds
jno
stos
daa
pop
shlb
adc
shr
das
inc
mov
mov
xor
push
jns
inc
inc
out
sub
and
mov
int3
mov
mov
sub
pop
mov
pop
lret
jg
xchg
mov
fmulp
xor
popf
js
add
rorl
inc
js
lea
mov
xchg
xor
insb
push
mov
mov
xchg
clc
push
sti
xlat
arpl
mov
mov
shll
xor
pop
mov
xchg
sbbl
int3
mov
mov
call
mov
inc
add
jg
clc
stos
insb
les
mov
or
push
lods
lock
xchg
lds
test
jo
loop
mov
lods
cmp
addr16
mov
xor
mov
xor
pop
aas
adc
cltd
aaa
mov
loop
mov
adc
loopne
xchg
push
loopne
imul
outsl
testb
xor
mov
repnz
dec
add
pushl
out
push
test
xor
cld
xor
xor
pop
jae
cmp
mov
bound
xor
adc
clc
outsl
cmc
jmp
in
inc
or
mov
arpl
jns
mov
jns
dec
gs
rol
mov
ss
fcomps
sub
andb
or
xchg
and
daa
cltd
mov
add
fucom
mov
fldl
rorb
repz
push
xchg
ja
jo
jb
pushf
or
movsl
insl
lods
and
mov
loope
jge
xor
lea
stos
sbb
sub
push
add
dec
adc
pop
or
cmpsl
mov
jo
cmpsl
rclb
lret
les
dec
gs
and
les
fcoml
mov
pop
aaa
lods
xchg
sub
push
addl
adc
xor
icebp
int
cmc
inc
ja
sub
xor
rcll
hlt
add
pop
sub
xchg
xor
in
jno
cmp
flds
sbb
mov
and
mov
sbb
fnstcw
sub
stc
xchg
test
into
xor
adc
insb
fstps
movsl
gs
or
das
or
fistpll
dec
lret
mov
jne
jb
dec
shll
outsl
and
subl
int3
jno
push
andb
fwait
rolb
and
pop
push
negb
std
into
inc
jecxz
push
jge
mov
mov
insl
loope
shrl
lock
xchg
jmp
and
stos
divb
mov
mov
push
outsb
pop
rep
sub
fadds
pop
xchg
sbb
out
add
nop
leave
sub
pop
int3
sbb
mov
pop
fnstenv
mov
mov
mov
mov
hlt
and
mov
or
xlat
xor
pop
mov
int3
iret
and
pop
movsb
cmp
adcl
xchg
xor
fwait
dec
call
lea
nop
push
mov
jae
dec
rolb
inc
scas
rol
inc
sub
xor
sarl
adc
mov
and
push
xor
sbb
movsl
adc
cmp
fidivl
add
cld
dec
and
dec
mov
mov
pop
dec
adc
iret
or
push
xchg
pusha
mov
adc
pop
or
in
jg
imul
cs
subb
dec
xor
sahf
lods
cmp
mov
enter
lcall
xchg
push
sarw
add
sar
jb
add
lcall
hlt
in
jns
xchg
push
mov
popl
inc
push
push
pop
das
inc
popf
jno
sbb
in
mov
jb
fwait
or
addr16
call
jns
cli
add
sbb
loope
sbb
or
mov
testl
push
int
cmp
xor
in
pop
bound
jae
cltd
xchg
sbb
cmpsb
mov
lods
inc
mov
xor
insl
xchg
add
test
fists
xchg
jg
pusha
mov
push
imul
hlt
inc
dec
lcall
inc
sub
fcomi
lea
xor
arpl
lcall
incl
inc
push
pop
mov
into
dec
lods
jno
popf
xchg
movsl
adc
xorl
pop
stc
mov
xchg
sbb
mov
inc
mov
dec
push
jge
xchg
and
inc
sbb
jbe
push
mov
movsb
push
adc
pop
fisttps
arpl
iret
ficompl
mov
add
ret
je
or
inc
mov
cmp
mov
andb
pop
int3
fcmovnb
lret
dec
movsb
jge
xchg
cs
aad
ret
xorl
repnz
mov
in
addb
int3
ret
pop
sahf
inc
sbb
ds
repz
push
pop
jb
sti
sbb
insl
orl
sbb
les
jecxz
shrl
iret
cmpsl
cmp
es
push
fs
imul
mov
xor
dec
aas
rcl
pushf
sbb
movsb
int3
sub
xchg
jne
aad
add
js
add
movsb
int
ret
inc
push
jmp
sub
jb
lcall
mov
es
in
loope
int3
mov
mov
xor
fxch
bound
or
cmp
sub
inc
push
mov
fnstenv
outsl
jp
push
jmp
outsl
loop
test
jecxz
aaa
xor
rolb
cli
inc
ficomps
ss
or
xchg
in
repz
aam
stos
fdivp
roll
ret
pusha
aad
movsl
cltd
lret
push
jp
in
mov
clc
dec
sub
fmulp
adcl
repz
addr16
int
jo
adc
sbb
xchg
push
movsl
pop
push
push
sub
das
sbb
sbb
xor
cwtl
lahf
dec
subl
push
fdivrs
or
xor
mov
dec
xchg
fstl
and
add
mov
or
test
sub
cmp
sbb
inc
in
es
cli
in
sahf
popa
scas
adc
pop
movsl
mov
call
std
mov
push
rclb
push
rorl
aam
cltd
mov
scas
mov
fadds
push
and
jns
rcrb
sub
lds
fdivs
push
test
mov
aas
xor
ret
sbb
cs
jmp
lods
sub
pop
icebp
jne
repnz
xchg
ss
pop
outsl
inc
mov
aaa
repz
mov
test
sarb
dec
cltd
incb
pop
sar
test
sahf
xchg
sbb
sub
ficomps
push
insb
pop
jne
mov
sub
sarb
faddl
hlt
out
mov
sub
push
dec
out
jp
push
add
fnsave
insb
aam
in
loope
idiv
rep
scas
ret
mov
mov
pop
jg
into
push
test
int3
subb
ljmp
je
enter
stos
fdivrs
inc
dec
pop
cmp
xlat
jae
and
push
mov
aad
ret
data16
int
or
mov
in
fistl
inc
es
in
xchg
add
testl
xorb
mov
adc
rorl
jb
in
mov
push
cmc
add
imul
ss
jecxz
jg
insl
shrb
adc
scas
icebp
dec
pusha
fldt
fists
int3
dec
gs
fiaddl
push
cs
cmp
outsl
les
sti
test
mov
mov
out
sub
cmpl
pop
push
data16
divb
push
mov
test
mov
data16
push
mov
and
mov
enter
test
inc
cmpsb
mov
jns
and
push
adc
cmpsl
jbe
cmc
inc
insb
xchg
cmc
cmp
push
inc
test
hlt
mov
out
and
push
hlt
mov
dec
mov
enter
pop
inc
div
cmp
jb
mov
in
hlt
sbb
inc
sti
out
out
movsl
mov
mov
sbb
or
test
cmc
pop
push
leave
jbe
pusha
or
pusha
mov
fimull
movsb
in
stos
inc
sub
sub
iret
push
sbb
lret
or
and
mov
cmpsb
mov
lea
add
and
pop
cmovae
mov
xchg
and
xor
stos
es
adc
repz
xor
jmp
sub
mov
ret
or
fs
cmp
fdivrs
cmovg
xor
jae
stc
push
test
imul
jl
stos
and
cmp
cmpsb
pop
dec
inc
dec
addr16
ret
in
in
jne
mov
lds
cmp
jg
scas
lahf
pop
ret
xchg
add
incb
mov
push
fwait
jbe
jge
mov
cwtl
lods
leave
in
test
in
or
popa
loop
data16
mov
and
sbb
dec
lcall
ss
mov
cli
cmp
shll
jo
cli
je
dec
stos
sti
test
bnd
xor
ret
jle
std
xlat
inc
shrl
aad
jnp
pop
repz
outsb
iret
arpl
popa
mov
add
sub
mov
jp
mov
inc
test
mov
popf
inc
lods
cmpsb
mov
in
or
lahf
inc
sbb
dec
xor
jge
add
xchg
nop
inc
sbb
push
cmp
test
test
add
mov
xchg
int3
push
cmp
fstps
push
sub
pop
in
out
lods
xor
mov
std
and
mov
push
ljmp
mov
cmc
pop
fldenv
xchg
jbe
dec
popa
icebp
fwait
pop
repnz
out
pop
push
stos
icebp
fists
into
aad
iret
aas
mov
dec
js
faddp
and
scas
mov
outsb
dec
xchg
jns
pop
mov
sub
mov
push
cmp
imul
push
mov
shlb
adc
jecxz
xorb
repz
sbb
cs
mov
jle
sub
rorb
dec
inc
push
inc
inc
imul
shlb
ds
inc
dec
popf
and
and
push
es
movl
mov
sub
mov
mov
mov
jo
out
roll
sbb
mov
data16
mov
jmp
pop
cltd
xchg
mov
xchg
outsb
rorb
push
test
aam
xor
popf
cmpsl
daa
mov
cltd
push
cli
mov
movsb
mov
data16
cmpsb
inc
imul
mov
aad
xor
sub
sti
bound
push
jl
cli
leave
adc
and
push
mov
adc
repnz
popf
dec
cmp
mov
outsl
push
imul
scas
push
es
int3
push
icebp
adc
aas
rorb
jle
mov
pusha
inc
shll
inc
dec
push
mov
hlt
into
push
shrl
outsb
inc
inc
test
and
jecxz
dec
pop
xchg
and
mov
and
adc
xchg
loopne
movsb
daa
adc
mov
push
js
sub
push
fstps
enter
call
mov
push
outsl
leave
mov
sbb
cmc
cmc
ja
mov
push
or
loop
cli
push
loopne
add
imul
subb
in
jl
or
jmp
mov
pushw
sub
dec
push
adcb
fwait
xchg
movsb
dec
in
cmpsl
sub
xchg
lcall
or
idivl
cli
jmp
add
scas
sbb
test
addr16
lret
jne
xorl
divb
mov
cld
jg
and
pop
icebp
and
mov
repz
inc
ljmp
rolb
lcall
cmpsl
ret
out
addr16
mov
jo
or
inc
inc
aad
sbb
add
lret
or
aas
icebp
xchg
popa
pop
cs
mulb
sbb
mov
push
in
insl
push
add
fsincos
test
cmp
jo
jl
std
mov
test
aaa
push
add
add
loope
addr16
int
cmc
xlat
cmp
xor
fwait
and
cmp
dec
icebp
data16
test
pop
or
fnstsw
add
add
pop
and
flds
pop
pop
aaa
daa
sysret
sub
jg
movsl
add
jle
les
sub
add
cli
int
ljmp
loopne
xchg
inc
xor
mov
add
dec
or
mov
xor
mov
jbe
cwtl
repz
mov
test
mov
jb
xchg
mov
roll
push
add
xorl
insb
aaa
pusha
add
insl
and
imul
out
sbb
bound
data16
inc
push
and
pop
pop
inc
rcll
lock
sbb
inc
in
inc
popf
outsl
cmp
cmp
pop
pop
dec
shrb
mov
and
add
adc
pop
sbb
test
jne
inc
lock
mov
push
cli
dec
mov
mov
push
bound
jbe
gs
fdivrs
in
mov
mov
add
jge
cmpsl
inc
push
mov
sub
repz
sbb
sub
cmp
sub
jle
mov
fldenv
add
jle
cli
push
jg
mov
notl
inc
sbb
sub
add
push
shll
xor
cli
loop
mov
repnz
inc
lods
out
xchg
fisubs
insb
adc
int3
sub
shl
aas
mov
jg
or
int
inc
sbb
lret
pop
mov
inc
push
inc
add
out
sub
fs
je
lods
movsb
insb
push
adc
jae
not
out
outsl
sub
test
jo
fsts
fwait
jp
mul
push
bound
xchg
adc
cs
xchg
sbb
mov
pop
push
pop
mov
dec
mov
movsb
or
lds
mov
mov
fs
fcoml
fistpl
dec
pop
add
inc
test
push
adc
mov
jb
jo
je
stc
lahf
int3
mov
or
push
sub
cmp
daa
shlb
cltd
scas
dec
adc
pusha
arpl
and
stos
pop
test
cmpsl
push
jg
inc
add
jno
outsl
lods
jge
or
into
cmp
fildl
dec
in
or
sbb
mov
lret
and
jmp
sbb
cmp
or
adc
dec
mov
jae
inc
mov
idivb
mov
push
repz
cmp
scas
loop
xchg
cltd
icebp
loope
pusha
mov
mov
push
pushf
call
fistpl
ret
cli
jbe
cmpb
aam
fcmovb
jne
mov
inc
hlt
loop
stc
lock
ret
ficoml
inc
lret
cmpsl
xor
lock
mov
push
dec
xor
sub
sahf
pusha
pusha
sbb
cmp
adc
xchg
xchg
out
cmpsl
cmp
mov
loope
shlb
push
pop
ja
aaa
inc
loop
xchg
xchg
jbe
lret
mov
push
fimull
aam
test
cmp
lods
cmc
subb
and
or
mov
pop
cs
mov
cmp
jg
mov
shlb
pusha
jno
pushf
roll
add
sub
mov
xorl
push
xchg
mov
sahf
lret
lods
insl
sbb
fxch
stos
stc
out
faddp
ds
mov
jmp
addr16
pop
dec
xchg
decl
cmpsl
sub
lods
stos
mov
jle
xchg
or
rorb
repnz
mov
scas
adc
sbb
and
into
xor
gs
or
and
jecxz
mov
sub
pop
mov
dec
pop
sub
test
mov
sub
xchg
insl
fimuls
xchg
int
shlb
sub
pop
aaa
pushf
loope
ret
sub
push
add
mov
dec
dec
ds
shlb
negb
add
mov
pop
in
test
jecxz
or
or
test
lods
std
or
out
fidivl
dec
adc
cmp
fisubrl
xchg
sub
scas
mov
mov
push
xlat
xchg
sub
hlt
test
adc
cmp
add
push
sbb
shl
loopne
or
xchg
add
shlb
and
mov
cwtl
test
push
mov
push
xchg
sub
pop
pop
mov
imul
dec
push
and
inc
inc
repz
pushw
mov
or
je
ficoml
icebp
pushf
lods
inc
jbe
mov
push
scas
and
cmc
xor
add
jbe
or
imul
and
jb
test
or
stc
scas
insb
push
add
jae
cli
adc
cld
fldenv
jbe
cltd
out
lea
leave
cmp
pop
aaa
arpl
data16
cmp
push
add
xor
dec
insb
inc
adc
dec
daa
adc
repz
in
into
mov
bnd
sub
and
int
xchg
dec
mov
sbb
lahf
mov
dec
int
pop
push
jmp
mov
loop
fbld
lret
jge
push
mov
and
mov
mov
movsl
and
jbe
fwait
mov
aaa
loopne
adc
out
jb
fwait
jae
lods
pop
popa
or
add
push
or
pop
iret
sbb
aad
xor
lods
sbb
inc
mov
dec
lahf
fsts
inc
push
push
hlt
mov
jo
jnp
ret
mov
inc
cld
subl
dec
into
xchg
lds
or
in
adc
mov
in
dec
loope
cmpl
movsb
add
incb
inc
in
and
mov
sbb
popf
in
in
mov
fs
pop
lds
xchg
adcb
mov
test
mov
pop
and
jnp
ret
lcall
add
pop
icebp
repnz
mov
js
jmp
inc
arpl
mov
mov
lea
ds
out
add
inc
lahf
sti
out
or
cli
inc
or
repnz
imul
or
insl
lcall
add
sbb
enter
loop
pusha
sbb
imul
repnz
je
cmpsl
out
jnp
or
mov
or
jb
cmp
xor
stc
mov
lods
in
ret
out
sbb
nop
mov
sub
pop
xor
cmpl
or
inc
mov
or
xor
xchg
nop
xchg
add
sahf
hlt
mov
mov
shl
call
push
je
add
sbb
lret
cmp
scas
and
sahf
sbb
fcmovb
dec
sarb
iret
inc
daa
jmp
popf
cmpsb
jg
dec
dec
mov
jne
cmp
pop
xchg
mov
or
adcb
loope
filds
xchg
pop
enter
icebp
stos
iret
dec
add
jns
fmulp
aad
jg
in
mov
inc
ljmp
or
adc
or
push
jns
or
cltd
test
sti
rcrb
cli
cmpb
outsl
shll
pusha
ss
mov
add
int
dec
aaa
jae
inc
mov
rorb
sub
rorl
mov
mov
dec
in
nop
mov
xchg
push
mov
or
hlt
inc
jle
in
hlt
subb
mov
in
lcall
orb
jbe
pop
jle
test
hlt
dec
mov
mov
add
movsb
in
jno
in
fmull
sub
jmp
arpl
xor
bound
imul
mov
pop
mov
add
in
xchg
xchg
leave
and
or
clc
aas
dec
push
into
xor
sub
push
xor
xchg
fwait
xor
pop
and
mov
scas
mov
xchg
test
or
push
mov
sbb
and
pusha
fistpl
xchg
lea
call
pop
inc
pop
negl
pop
imul
popa
loopne
adc
pop
imul
jne
sub
adc
outsl
scas
mov
mov
ds
mov
xlat
jae
dec
push
popf
inc
pop
sti
inc
popl
cmp
pusha
inc
mov
sahf
adc
or
enter
jne
adc
mov
xor
push
movsl
scas
xor
xorb
xchg
sbb
sbb
fs
cmp
or
sarl
push
push
bnd
nop
adc
in
sbb
ror
pop
stos
dec
pop
out
mov
pusha
add
fistpll
cmp
add
sub
pusha
repnz
adc
jecxz
xor
push
jmp
mov
out
leave
std
mov
mov
sub
jg
rcrl
adc
xor
and
imul
cld
sbb
pushf
int
inc
ja
sub
lock
clc
in
xchg
adc
shlb
lahf
ds
fdivrp
inc
and
cli
sub
faddl
lahf
loope
frstor
sarl
pop
pop
jge
push
in
inc
bound
xorb
cmp
cmp
aas
ja
xlat
push
mov
rol
sub
sbb
add
ja
jmp
push
xor
cld
arpl
pop
andb
mov
jns
inc
jb
jg
push
sub
cmp
in
cmp
mov
shll
sub
push
ds
jae
inc
and
data16
ja
mov
xlat
xor
mov
leave
int
cmp
add
test
mov
test
es
xor
gs
inc
cmp
cmpsb
popf
nop
aam
out
jmp
push
cmp
or
mov
sub
xor
aas
notl
xchg
cmp
mov
sbb
push
or
xchg
mov
jnp
or
outsb
mov
repnz
sub
fsubp
rolb
lock
xchg
lret
rorb
mov
jnp
xor
clc
jno
sbb
mov
stos
push
push
mov
add
repnz
stos
mov
outsl
pop
outsl
dec
cmp
movsb
std
inc
inc
cs
sub
xlat
or
pop
sub
inc
sub
jmp
imul
inc
jo
push
xchg
pop
xchg
rolb
dec
outsl
sub
push
in
push
jnp
in
push
cmp
lahf
outsb
push
adc
out
fstps
xchg
cmp
lret
stos
lahf
mov
add
aaa
and
loopne
push
jp
es
outsb
sub
dec
lret
repz
add
mov
sub
dec
rcr
jne
cmp
hlt
sbb
jno
not
imul
inc
lods
jge
idiv
xchg
jg
lock
out
mov
aad
hlt
ficoms
pop
add
daa
and
lahf
add
fimull
cmpsl
or
cmp
bound
imul
adc
push
rcrb
mov
xchg
pop
sbb
sbb
pop
cltd
inc
or
imul
out
fdivr
pusha
dec
test
inc
gs
out
pushf
mov
iret
test
or
testb
int3
mov
pusha
into
jo
jp
mov
ss
push
sarb
les
pushf
or
callw
pop
pop
and
das
out
jmp
sub
sahf
and
xchg
add
jecxz
loopne
mov
addr16
ss
shrb
lea
pop
aaa
test
xchg
lock
fisubl
jo
xor
pop
movb
xor
ss
lret
push
adc
les
sub
aaa
cmp
fstps
mov
and
xor
mov
icebp
ret
inc
les
sub
ja
idivl
adc
fcoml
and
mov
mov
hlt
pop
and
adc
sbbl
aaa
or
call
mov
mov
in
outsl
xor
mov
icebp
pusha
mov
fs
pop
pop
jmp
int3
ja
mov
subb
mov
ret
xchg
fcmovnbe
mov
adc
jg
jno
mov
fcoms
rolb
jge
rcrb
and
mov
icebp
sub
xchg
pop
inc
ret
insb
in
fildll
dec
ret
std
into
outsl
push
in
cwtl
mov
out
lret
sbb
hlt
call
xchg
lcall
outsl
mov
stos
andl
stc
mov
xchg
cmp
std
jo
insl
xchg
int
fs
jmp
into
loope
cmp
mov
or
insb
push
lahf
jl
sbb
or
jnp
movsb
pop
mov
popa
in
adc
mov
leave
in
mov
hlt
cli
ret
or
call
push
hlt
dec
or
mov
mov
fisubs
cld
adc
sub
mov
adc
lcall
insb
xor
xchg
in
sub
fildll
lcall
js
or
mov
js
cs
sub
pop
cmpsb
dec
aas
pop
or
dec
mov
fs
imul
push
aas
cli
dec
outsl
je
mov
cmp
subl
push
jnp
dec
subl
sar
jmp
pop
ja
popf
imul
imul
jl
add
frstor
sub
jb
mov
cwtl
fsubp
cmp
pushf
addb
mov
jne
test
dec
and
mov
push
rcll
mov
push
cmc
or
mov
push
loopw
cmp
mov
out
mov
sub
cli
sbb
jl
dec
xchg
or
neg
stos
enter
fnstsw
into
cmp
xchg
nop
xchg
testb
sub
mov
cmp
repz
hlt
adc
cld
ja
or
xchg
mov
mov
pop
mov
xor
sub
ljmp
arpl
add
push
xor
ja
jmp
daa
mov
das
push
inc
mov
nop
jle
imul
mov
dec
add
stos
add
adc
dec
mov
push
aaa
subl
ss
add
hlt
or
jecxz
dec
ret
add
mov
mov
repz
inc
in
adc
sub
out
nop
mov
and
adc
inc
jg
es
std
cld
mov
nop
lods
mov
push
in
incl
stc
mov
mov
sub
dec
sub
push
rcl
inc
xchg
sbb
xlat
ja
mov
pop
and
in
fs
hlt
fidivl
mov
sbb
xchg
aaa
aas
push
xlat
adc
cmpsb
mov
or
dec
test
push
dec
push
lret
fbld
sbb
into
jge
outsb
pop
xchg
mov
daa
fnstenv
jmp
mov
or
stos
and
lods
fsubr
das
cmp
loope
sbb
ja
popf
mov
andl
xor
ljmp
push
das
inc
mov
sbb
popa
cltd
lods
fnstcw
add
dec
imul
jbe
das
or
stc
sbb
fmuls
das
mov
rcr
jno
arpl
roll
jae
ret
lea
out
shlb
ljmp
fcmovne
shlb
or
xor
leave
xchg
jp
subl
add
in
scas
mov
and
enter
dec
sti
dec
push
lret
dec
ficompl
call
pop
stos
pop
iret
test
ss
in
add
ret
stos
rorb
push
xchg
xor
jecxz
push
in
pop
lods
sbb
jl
fs
ret
insl
scas
or
push
arpl
lock
test
test
mov
shlb
cmpsl
xor
push
xor
loop
cli
xchg
cmp
mov
push
orb
mov
inc
sti
jecxz
push
push
shrl
mov
mov
mov
dec
mov
sbb
lahf
sar
fs
out
sbb
cmp
stos
ds
adc
pop
mov
les
sub
add
popa
sbb
inc
mov
xor
inc
orb
call
fistpl
jmp
jns
mov
in
xchg
sbb
or
xchg
xchg
ret
xchg
cwtl
pusha
scas
jb
push
hlt
stos
or
enter
xor
addb
in
ljmp
jne
rol
mov
fwait
mov
or
jne
add
mov
and
js
mov
cmpsb
adc
mov
adc
and
lcall
outsb
mov
mov
jle
or
pop
pop
sub
daa
fistl
aad
xor
adc
ret
imul
mov
popa
mov
lock
inc
pop
aas
adc
and
mov
xchg
dec
fldenv
flds
push
pop
lods
adc
xor
xchg
fmull
push
dec
or
add
inc
mov
push
outsb
rorb
and
or
adcb
int3
idivl
pusha
out
xchg
cli
cli
js
je
or
add
insl
jecxz
sbb
mov
dec
addl
test
bound
jae
and
into
scas
fisttpll
test
scas
lods
test
inc
sub
push
or
mov
jecxz
mov
push
or
push
adc
cli
xor
cwtl
popa
pop
aad
iret
push
ss
mov
adc
outsb
lret
mov
cltd
pop
pop
insb
insb
pop
cwtl
push
lods
std
in
inc
adc
inc
xchg
sbb
pop
push
lcall
jle,pn
cltd
push
outsb
stc
cltd
mov
pop
adc
and
adcl
mov
scas
popa
jns
or
lcall
bound
pop
sub
je
and
scas
xchg
out
pop
mov
pop
xlat
and
jns
out
mov
stos
mov
clc
mov
cmp
xchg
jne
jl
pusha
mov
gs
fiaddl
fimull
xorb
js
mov
add
dec
add
clc
test
inc
sub
inc
cmp
add
hlt
imul
jmp
mov
jb
cltd
sbb
insl
scas
inc
mov
cmc
and
jg
xor
iret
pop
andl
mov
dec
jo
fs
add
fmuls
ret
sub
fwait
mov
popf
jecxz
xchg
testl
cltd
roll
and
iret
push
ljmp
out
xchg
xchg
pusha
fs
cli
mov
or
repnz
xchg
xchg
dec
in
rcrb
sbb
scas
fwait
aam
mov
jo
lret
or
stc
mov
test
mov
pop
outsb
insl
and
fnstcw
jno
std
dec
sbb
xchg
add
imul
sbb
in
mov
dec
adc
or
and
pop
enter
cld
arpl
cmc
and
xchg
add
cmp
add
jbe
insb
bound
push
sub
and
cmp
inc
std
lret
pop
mov
ja
lcall
pop
push
nop
cmc
outsb
mov
mov
outsb
loop
fbld
push
mov
nop
fistl
dec
mov
dec
pop
fs
vphsubsw
testl
jbe
dec
stos
sbb
test
mov
sub
pushf
addb
mov
xorb
jp
mov
fsubs
outsb
call
mov
xchg
in
and
push
popl
add
fistpl
adc
fbld
dec
jmp
adc
cmpsb
add
lret
mov
push
incb
pusha
inc
es
pop
jns
pop
or
aaa
sub
add
mov
and
fsubl
mov
pusha
js
cwtl
mov
and
add
mov
fidivs
ds
rcl
rcrb
out
aas
in
jns
push
out
lahf
call
push
jne
iret
stos
in
mov
sub
gs
xchg
out
daa
dec
cmp
dec
dec
stos
add
xchg
std
xor
mov
cwtl
mov
sub
sbb
mov
xchg
cmp
stos
fsubs
sub
out
lahf
mov
lcall
cmc
fisubrl
jge
insb
mov
sti
cmp
inc
cmp
inc
adcb
sbb
pop
or
outsl
jnp
sbb
addb
int3
imul
faddp
out
jbe
mov
pop
xchg
ret
scas
sbb
lds
out
bound
and
adc
nop
and
lods
test
push
dec
out
lcall
mov
stc
stos
xlat
repz
xor
mov
xor
bound
xor
sbb
pop
shll
sahf
roll
jne
xor
idivb
clc
je
sub
push
dec
mov
and
cmp
stos
mov
dec
arpl
push
inc
push
dec
arpl
cmp
lret
and
xchg
jne
xor
jmp
or
adc
ret
sub
jno
mov
ss
cmp
repnz
popf
fildl
enter
out
movsl
pusha
or
sti
push
aas
push
mov
ja
pop
aam
in
scas
and
es
cmp
call
xchg
daa
lea
xor
pop
add
push
iret
rorb
ds
cltd
stos
fsubl
orb
jecxz
xchg
push
or
sbb
mov
pop
and
rorb
orl
push
jo
mov
xchg
push
push
mov
jae
mov
dec
push
and
inc
xor
jnp
mov
das
in
ss
mov
cwtl
mov
pop
jmp
inc
aad
icebp
lret
jmp
cltd
imul
out
mov
frstor
popa
or
push
sarl
stos
inc
mov
dec
inc
jp
into
mov
roll
in
arpl
adc
xchg
pop
test
imul
pop
je
pop
dec
test
lods
lret
sti
cmp
arpl
pop
ffree
mov
push
cmc
xchg
mov
out
call
sbb
sahf
cmp
mov
pop
push
iret
fsubs
add
push
mov
faddl
pop
hlt
imul
add
push
sbb
pop
push
out
mov
sub
push
dec
adc
mov
sahf
xchg
nop
addb
loop
ficompl
pop
inc
mov
xor
xchg
push
xor
pusha
pop
xor
out
outsl
xor
fcmovne
fwait
add
adc
fnsave
arpl
rcrl
cmpsb
std
xchg
pop
cmp
adcb
and
hlt
addb
js
mov
imul
cmc
jno
cmp
ja
aam
mov
mov
or
shll
int3
dec
out
pop
mov
xor
inc
repnz
pop
xor
xor
fldt
loopne
sub
jne
mov
xchg
cmp
daa
mov
mov
push
pop
nop
add
inc
shufps
mov
repnz
sbb
aad
xchg
pop
fwait
xor
scas
push
sbb
push
or
lods
jmp
sub
outsl
push
out
pop
neg
jle
sti
inc
je
imul
mov
jle
dec
jge
cs
dec
in
jnp
pop
cs
fbld
aaa
pop
inc
data16
add
sbb
mov
sub
pop
mov
inc
jecxz
or
movb
ds
test
scas
adc
out
test
stos
pusha
fistps
std
out
or
bound
jns
in
sahf
sbb
outsb
mov
pop
addb
push
hlt
or
lret
andb
popf
ret
pop
loop
jp
iret
lret
cmp
ret
jge
jnp
dec
jecxz
xor
ss
push
ret
imul
lret
mov
inc
xor
mov
inc
sahf
xor
add
shrl
and
sti
add
dec
out
mov
mov
inc
scas
icebp
ss
es
pop
rcrb
rcl
mov
xchg
mov
xor
add
sbb
dec
scas
aaa
sbb
jo
mov
inc
lea
bound
je
jle
lcall
push
jge
addr16
and
and
push
inc
stc
jecxz
push
outsb
jle
adc
dec
daa
lret
sbb
test
hlt
imul
mov
adc
sahf
addr16
sbb
sahf
pop
fsubl
inc
push
lcall
adc
arpl
inc
xor
sbb
enter
dec
xchg
imul
imul
cmp
add
push
insl
pop
and
pushf
sub
movsl
mov
jmp
sub
push
sub
inc
inc
js
add
lahf
mov
cmp
leave
fwait
test
mov
inc
std
and
shlb
outsl
mov
xchg
adc
mov
rcl
test
lcall
ds
aam
or
icebp
in
cs
push
bound
cmp
and
adc
out
flds
lahf
pop
sub
clc
inc
dec
ljmp
pop
sbb
mov
xor
outsl
xchg
sub
mov
adc
mov
cmpsl
in
hlt
lahf
and
mov
lahf
add
mov
std
inc
aam
mov
clc
push
or
xchg
xor
xor
call
in
lret
or
or
in
sub
addr16
popf
xchg
ljmp
cmp
mov
inc
pusha
aaa
out
mov
mov
fdivp
into
or
or
int
push
cmpsl
push
or
push
andb
shrl
dec
sbb
mov
dec
pop
mov
popf
adc
pop
or
xchg
lahf
push
addl
aad
cld
adc
or
mov
fwait
or
test
hlt
dec
push
jge
mulb
icebp
out
pop
cs
push
into
push
repz
sahf
sahf
cmp
js
rcr
cmc
test
cmp
aam
sbb
cmp
shl
or
add
mov
popa
xchg
jmp
pop
adc
sub
cmpsb
xchg
repnz
hlt
scas
cmpsl
movsb
test
push
mov
mov
adc
stos
arpl
lahf
push
xchg
repnz
push
add
mov
call
inc
add
jo
fmull
xor
stos
mov
xchg
xor
push
data16
xor
out
sub
dec
fcoms
pusha
and
bnd
mov
mov
pop
fidivrs
xchg
xchg
lods
testl
jl
dec
scas
jns
ja
jne
and
pop
sub
mov
mov
into
cmp
inc
icebp
add
sbb
orl
stos
adcb
aas
lods
scas
rclb
xor
lds
cmp
addr16
or
jmp
repz
test
movsb
je
and
das
sub
mov
sbb
cmpsb
punpcklbw
dec
outsb
cmp
movsb
sub
out
sbbb
xchg
sahf
and
inc
fcmovnbe
in
scas
or
sbb
das
mov
cld
and
div
in
mov
push
mov
lods
push
jne
loop
pop
pop
jo
mov
mov
add
cmpsb
push
out
mov
gs
sbb
push
testl
sbb
pop
sbb
and
mov
iret
or
sub
out
cmc
in
stos
xorb
xchg
fldt
or
xorl
pusha
add
js
imul
int3
or
cmp
inc
sahf
stos
iret
or
mov
in
mov
push
in
movsb
les
mov
add
xlat
loope
jns
or
or
mov
clc
in
xchg
lds
or
leave
mov
lods
fs
scas
test
fisttpl
dec
fdiv
mov
cmc
or
jg
ret
pop
mov
nop
lock
sub
cmp
xor
int3
icebp
std
push
sbb
idivb
inc
jnp
cmp
scas
sbb
mov
xor
sti
negb
inc
imul
mov
xchg
repz
mov
mov
and
hlt
into
fidivrs
xor
orl
int
aas
jae
or
push
pop
push
jb
xlat
push
shrl
out
inc
out
inc
cmc
or
inc
je
testb
fsubr
mov
sahf
jbe
ror
mov
or
cmp
cld
into
mov
insl
sbb
leave
cmp
jecxz
leave
ljmp
sub
xchg
dec
aam
lods
sbb
push
push
mov
imul
hlt
in
adc
jmp
pop
aam
or
mov
shrl
scas
pop
pop
movsl
fdivs
loope
pop
and
push
push
dec
lret
mov
adcl
test
ss
js
sar
sbb
jl
popf
sahf
push
jmp
sbb
cmp
jle
or
pop
ds
push
lods
sbb
insb
mov
fs
xor
push
pop
int3
into
les
sub
adc
dec
cmp
enter
and
stos
icebp
fnstsw
pop
xchg
addl
cs
mov
push
dec
repnz
addb
mov
ljmp
sub
jae
lds
or
dec
imul
test
in
ret
aam
in
sub
dec
sti
mov
fwait
in
lret
push
mov
and
mov
and
xchg
adc
aad
pop
mov
push
add
test
inc
or
sbb
jle
adc
lahf
subb
xchg
arpl
dec
xchg
or
out
push
or
sbb
push
adc
dec
mov
lods
ffreep
xchg
mov
into
movsb
out
xlat
mov
mov
adcl
xor
ss
mov
fnstsw
push
xchg
pop
lcall
test
into
push
ret
xor
mov
push
or
sub
mov
rcrb
dec
fwait
test
push
add
inc
adc
adc
lahf
out
inc
iret
push
cld
fdivs
mov
stc
dec
inc
pop
rolb
add
push
pop
out
hlt
cmpsl
ds
sahf
xchg
adc
push
int3
sbb
or
and
aad
push
movsl
inc
sub
std
aam
lahf
mov
das
pushf
add
mov
dec
outsb
fs
push
shrb
and
arpl
cmpsl
out
lds
stos
fdivs
xchg
gs
gs
xchg
fwait
inc
jp
aam
adc
jno
pushf
push
inc
gs
mov
lea
fcmovnb
iret
push
aaa
repnz
repnz
jg
insl
int3
fidivrs
push
cmp
imul
into
xor
dec
bound
out
negb
xor
sbb
inc
movsb
ds
mov
add
inc
pushf
push
mov
pushl
add
xchg
mov
xchg
fs
out
pop
imul
test
pushf
lret
fmuls
mov
call
repz
jp
pop
inc
adc
sbbb
adc
in
mov
add
inc
mov
pushf
or
cmp
jnp
or
cmp
ds
and
icebp
jecxz
mov
in
aas
shll
pushl
movsl
mov
cld
cmc
lods
addr16
lds
xorl
ds
sarl
cmp
add
push
mov
xchg
lret
fistpl
mov
jnp
inc
inc
push
dec
dec
cmp
dec
dec
add
mov
leave
push
ja
sbb
jo
pop
mov
mov
jl
jmp
inc
xchg
sub
cmpsb
push
mov
sub
sbb
or
pusha
xlat
inc
or
adc
cli
test
jg
in
push
jne
xchg
mov
shlb
push
jbe
dec
and
ficomps
dec
lahf
stos
sbb
pushf
pusha
lret
sub
jl
dec
and
push
lock
popa
sub
xchg
xchg
shrl
test
dec
je
xchg
stos
jg
data16
xlat
negb
mov
xor
mov
lret
xchg
xlat
push
mov
pop
push
popa
fmull
mov
cmp
and
dec
jbe
mov
mov
cli
hlt
jg
call
imul
lods
dec
loope
out
dec
nop
adc
movsl
scas
push
jg
das
cmp
cmp
out
sahf
cmp
or
bound
xchg
mov
cmp
or
add
push
xchg
movsb
and
mov
xor
cmp
xchg
add
xor
dec
rorl
test
outsb
push
jge
sub
test
sbb
out
std
fwait
mov
add
jne
rclb
aad
jl
mov
xchg
outsl
jecxz
bound
mov
mov
dec
sbb
loope
cmp
jp
jecxz
xlat
xlat
push
leave
push
or
int
aaa
mov
mov
jb
js
jo
in
nop
mov
jle
and
frstor
mov
mov
add
cmp
hlt
xchg
or
iret
fsubrl
scas
ja
lock
cmp
imul
xlat
sub
mov
adc
mov
es
stos
jg
sub
sbb
loopne
popf
les
or
jae
in
icebp
js
pusha
movsb
and
mov
fiadds
mull
inc
fmuls
loop
scas
mov
jl
xor
push
xchg
push
flds
cmp
sub
dec
cmp
mov
repnz
jb
fisubl
adc
getsec
and
insb
xchg
into
mov
sub
loopne
push
fsubr
cmp
stc
aaa
pop
loope
jb
push
xor
rol
sub
dec
cmpsl
xlat
or
cmp
rol
nop
push
mov
push
stos
jp
adc
jbe
inc
ja
mov
jge
and
lret
scas
jecxz
nop
cmpsl
bound
or
andb
xchg
es
pop
shll
adc
pop
ds
cmp
aaa
arpl
mov
mov
arpl
mov
lds
clc
push
sahf
shr
mov
push
xchg
dec
lods
adc
pop
lods
cmp
ret
hlt
fucomi
adc
push
pop
and
jp
xchg
sti
out
shl
push
inc
fldcw
std
or
fldenv
in
lahf
hlt
cmp
add
jmp
dec
fcoms
pop
shrl
rorl
jo
and
jo
leave
imul
xchg
imul
mov
pop
scas
je
aad
std
jmp
lea
ret
push
mov
out
lret
inc
dec
mov
and
ja
xchg
inc
popf
xchg
lods
mov
data16
fildl
mov
movsb
mov
insb
fs
push
stc
add
push
addr16
xlat
mov
and
hlt
jg
les
jmp
adc
loope
jbe
mov
stos
adc
adc
into
add
jl
mov
sub
mov
push
mov
movsb
movsl
clc
xchg
sbb
and
xor
orb
mov
add
mov
xor
add
mov
inc
sub
mov
stos
lea
xor
imul
adc
xorb
mov
or
outsl
or
movl
push
add
mov
mov
mov
int3
sub
mov
sbb
xor
les
shr
inc
jmp
arpl
push
cmp
iret
sbb
arpl
test
xlat
mov
jnp
sbb
sub
adc
je
aad
aaa
test
mov
push
int3
stos
pushf
out
shrl
pop
imul
iret
dec
scas
xchg
push
xlat
les
sub
cmpsb
jecxz
in
push
mov
mov
xchg
fadds
pop
pop
dec
loop
enter
xchg
cmp
outsb
insb
mov
jecxz
sub
or
loope
shlb
xlat
sub
mov
cli
addr16
xabort
add
movsl
pop
cmp
pop
es
adc
xchg
aaa
cltd
xor
popf
mov
cmp
scas
arpl
push
and
rep
xchg
mov
aas
aam
mov
fcoms
insl
jno,pt
loope
mov
fwait
inc
int
int3
push
loop
in
dec
cwtl
adcl
mov
inc
xor
cmpsb
test
jne
xor
inc
fidivl
xor
cltd
clc
lods
push
dec
in
and
addl
mov
fs
and
hlt
sub
mov
xor
push
mov
mov
pop
ljmp
lsl
std
out
pop
in
dec
mov
xchg
lea
incl
icebp
int3
add
sub
insb
xor
xchg
mov
cwtl
aam
inc
rcrb
test
faddp
xchg
mov
push
xorb
jne
mov
mov
mov
jg
cmp
xlat
pusha
sbb
and
call
out
add
dec
mov
push
stos
xchg
add
mov
fstl
and
jnp
or
ret
inc
jbe
or
aam
jno
enter
sub
call
ret
jle
cmp
and
in
out
dec
sti
testl
and
adc
int
and
std
arpl
aaa
adc
cmpsl
inc
adc
decb
push
cmp
cmpsl
int3
std
test
mov
gs
es
clc
pusha
push
test
dec
cmp
jg
pushf
xchg
inc
cmp
pop
shll
shll
sbbb
mov
push
mov
sub
push
idivl
test
xor
inc
sti
test
in
inc
shl
push
out
enter
in
add
sbb
jmp
imul
jge
and
orl
insb
or
ret
push
pop
mov
ret
loope
shl
in
outsl
or
and
testb
and
lods
adc
xchg
dec
das
pusha
sbb
sbb
imul
dec
pop
xchg
lret
sub
inc
inc
lret
das
adc
or
mov
js
push
frstor
push
outsb
dec
xchg
lcall
test
dec
xchg
mov
jmp
and
repnz
stos
sbb
push
mov
enter
test
lcall
imul
loope
dec
aam
divb
inc
decl
pop
movsb
jg
shll
mov
fdivr
imul
dec
ljmp
or
out
ret
dec
adc
or
sbbb
sbbl
mov
adc
mov
fcmove
pop
cmp
shll
jno
adc
dec
imul
adc
add
xor
sub
adc
cltd
je
aaa
es
int3
push
add
mov
jns
adc
cmpb
arpl
jo
adc
adc
adc
out
push
ret
int3
std
fsubrl
adc
jae
mov
setg
lea
ljmp
mov
aam
dec
lods
xchg
xor
adc
inc
outsl
repnz
cs
fcmovnbe
bound
lahf
jge
repz
ss
std
mov
fildll
mov
and
rorb
test
xchg
push
gs
inc
push
repz
mov
mov
sbb
in
mov
mov
outsl
das
insl
lods
inc
or
push
cltd
icebp
fcmovb
clc
mov
jnp
mov
mov
mov
or
sti
cmpsl
mov
sbb
hlt
mov
stc
jns
aaa
push
dec
lss
aas
adcl
mov
insb
out
sbb
xor
add
outsl
pop
xchg
inc
sub
jmp
jmp
add
push
cwtl
scas
mov
fcompl
out
fsubrl
sbb
add
mov
add
jne
lock
push
fstpt
xor
pusha
mov
xchg
ficoms
and
cmpsb
lods
cld
sub
jae
pop
ret
dec
push
subb
cmpsb
xorl
cltd
cmpsb
jl
push
lods
lds
cmp
add
mov
cmp
jno
mov
andb
mov
insb
mov
pop
outsl
pop
shrb
lea
cwtl
inc
mov
adc
nop
jp
inc
loopne
mov
aaa
lcall
jno
arpl
aam
aaa
sub
sub
mov
rorl
mov
fs
push
lret
in
imul
push
jno
push
mov
adc
add
test
filds
out
adc
xor
clc
out
push
mov
add
mov
lret
les
push
divb
sub
sets
mov
outsb
outsl
test
mov
inc
xchg
nop
mov
adc
imul
cli
jp
fsubr
xor
xlat
into
pop
jb
sbb
add
adc
xlat
fcoms
int
mov
and
adc
in
xchg
lcall
shll
add
inc
sub
and
cld
pop
or
daa
mov
test
aam
jmp
dec
pop
sub
xchg
es
sbb
sahf
sbb
and
push
movsb
lret
jb
ss
inc
shlb
in
xchg
cmp
dec
pop
imul
mov
and
lea
leave
lahf
mov
popl
leave
mov
insl
ja
push
fadd
sbb
imul
fiaddl
lods
lods
xor
in
neg
out
mov
fdivrs
pop
fwait
xchg
ret
lahf
cli
pusha
aas
push
ja
add
push
adc
repz
xor
js
or
pop
and
mov
dec
outsb
imul
leave
pushf
pop
mov
cld
out
mov
popf
mov
pop
and
lret
popa
dec
push
rcl
fcoml
jge
xchg
aad
xor
js
pop
pusha
mov
push
mov
fxch
xor
into
inc
add
mov
rcr
cmpsl
mov
les
outsl
outsb
das
and
sahf
adcl
pop
mov
adcl
fcoms
adc
jmp
arpl
ret
sti
cmpsl
je
into
repnz
xchg
add
fmul
scas
movsb
push
cmpsl
das
js
rcr
xchg
or
mov
xor
cld
xchg
jge
sahf
mov
dec
add
pop
jns
cli
or
xor
push
mov
aaa
cltd
pop
inc
jle
rcrb
pushf
insl
enter
test
aas
xor
faddp
scas
adc
mov
pop
clc
in
mov
rorl
dec
cmp
insb
xor
mov
shlw
in
inc
cmp
sub
pop
ret
fs
and
mov
adcl
ret
pusha
inc
dec
push
ret
push
movsb
jne
rcrl
lods
mov
dec
and
les
add
pusha
push
xchg
and
mov
stc
lret
sub
inc
sbb
push
int3
shrl
xor
adc
imul
fsubl
loope
inc
ja
addr16
cmpl
shlb
sub
mov
sahf
cli
sbb
sbb
mov
js
xchg
daa
jg
inc
add
inc
or
jo
pop
dec
or
push
cld
or
shll
jbe
mov
xchg
or
cmp
and
out
lret
jb
loope
mov
pop
icebp
pop
sbb
stos
dec
dec
add
orl
adc
fs
mov
pcmpgtb
rorb
lock
cmpsl
shll
in
retw
and
imul
rcr
push
mov
mov
in
and
xchg
mov
test
movsl
xor
in
addr16
fmuls
adc
mov
ret
out
negl
jae
out
subl
jns
cli
dec
icebp
iret
and
dec
pop
adc
lods
lods
jb
out
add
movsl
fbstp
dec
jge
stc
out
jae
push
pop
pop
xor
mov
xor
jmp
inc
jo
loop
push
fdivrs
negl
add
pop
sbb
xlat
aaa
xchg
pop
loopne
sbb
jo
mov
movl
cmp
aad
stc
dec
aaa
push
fld
ja
sub
jae
jno
fwait
cmp
inc
adc
shll
pop
stos
fld
aam
jmp
xor
mov
lea
call
push
imul
dec
dec
cmpsl
clc
popf
dec
jno,pn
mov
cmpsb
cmp
push
ljmp
jo
repz
or
xor
push
loope
cmp
xchg
mov
cld
fsubp
push
sub
fwait
mov
pop
jb
add
mov
popf
mov
jg
pop
push
int
push
sub
xor
notb
stc
inc
jbe
les
dec
movsl
movsl
mov
push
mov
jae
or
dec
dec
dec
insl
popa
pushf
dec
mov
pop
jg
es
push
call
add
and
add
add
popf
in
pop
cwtl
inc
sbb
js
iret
mov
push
shll
push
icebp
loope
xchg
xchg
push
test
adc
push
and
jae
ljmp
or
das
push
rcrl
mov
lds
xchg
inc
pop
xor
push
xchg
cwtl
pop
pusha
fwait
lret
jp
mov
fisubs
lret
popf
jo
push
cld
clc
inc
and
in
bound
mov
mov
popa
or
addl
add
mov
push
push
mov
jg
mov
les
push
mov
sbb
jle
popa
xor
xchg
stc
jbe
mov
pop
or
mov
inc
ret
inc
mov
lods
inc
scas
adc
cmp
xor
insb
test
jg
add
push
rep
in
mov
push
add
cmp
mov
cld
loope
aad
andb
jo
out
jb
mov
mov
sub
xchg
scas
add
aad
shrb
mov
or
mov
push
push
jge
mov
push
in
push
mov
push
sti
mov
sti
cli
jbe
insb
inc
shlb
pop
test
lock
out
int
or
push
sbb
js
std
cld
jnp
jmp
jbe
decl
jl
fistl
out
xchg
xor
shrl
shll
xchg
bound
xchg
adc
pusha
or
dec
adc
rorl
mov
add
daa
out
xor
or
dec
fs
pop
fistpll
sub
test
insb
pop
int3
lcall
pop
fdivrs
push
mov
inc
mov
xchg
scas
popa
in
hlt
divb
repnz
adc
mov
push
mov
and
add
mov
lods
cmp
xchg
adc
jmp
popa
cmp
and
dec
push
xchg
icebp
sbb
cli
addr16
cltd
scas
movlps
jle
cmp
subl
in
sti
shlb
incl
mov
into
fistps
jmp
inc
lahf
in
stc
pop
cmp
lods
ja
or
mov
sub
ss
mov
and
mov
mov
dec
cmp
ss
daa
mov
inc
pop
adc
fmull
sub
loopne
or
push
adc
dec
aaa
jg
inc
cli
es
mov
push
adc
addr16
jg
aaa
inc
adc
push
mov
and
and
sar
jae
jg
mov
int
iret
fisubl
shl
mov
shlb
mov
loop
aas
push
popa
jmp
lods
and
mov
mov
pop
scas
mov
ss
sbb
lret
das
mov
mov
mov
fisttps
shlb
lcall
je
adc
adc
xlat
bound
fdivrl
ja
add
sub
int
andb
fdivr
or
test
cmc
aam
push
mov
jo
loope
scas
data16
dec
fadd
stos
xor
cmp
icebp
xor
cwtl
mov
fsubrp
ret
xor
into
mov
jns
dec
mov
aas
rcr
or
or
test
stos
pop
sub
and
nop
lock
in
and
sbb
mov
or
ja
push
insb
or
cmp
rcll
dec
mov
sub
sub
mov
mov
cld
cs
mov
mov
stos
aas
xchg
adc
sbb
and
and
pop
mov
fistpll
popf
push
lods
jnp
div
movd
enter
lret
jne,pt
sub
xor
push
ret
cld
leave
das
rclb
in
mov
test
inc
dec
cmp
mov
mov
roll
jns
call
nop
in
pop
sbb
adc
xchg
add
into
pop
jmp
xchg
enter
push
jecxz
addr16
clc
bound
inc
iret
dec
std
mov
and
roll
int3
jae
dec
sbb
sbb
or
pop
sbb
loope
adc
inc
sti
fsubrl
iret
test
arpl
sub
push
fidivs
mov
aad
jne
lods
xor
or
je
pop
mov
lret
fadds
shlb
pop
push
mov
aaa
dec
inc
push
fdivp
xchg
lods
sub
ret
arpl
pop
push
adc
es
jge
sbb
mov
sbb
ret
iret
jl
xchg
jge
push
sub
xor
xor
leave
inc
std
not
xchg
xchg
iret
jp
push
jg
subl
int
dec
jg
jno
lds
dec
push
sub
jg
add
loop
rorb
pop
test
loopne
stos
sub
test
cs
mov
popa
je
in
lret
jne
gs
mov
fldcw
mov
jnp
xor
or
arpl
les
jmp
pop
cmpb
lea
xor
pop
add
cld
add
mov
xchg
mov
test
inc
idiv
mov
jb
stc
pop
xlat
push
mov
adc
fnstenv
mov
or
lods
xchg
cmp
movsl
add
data16
xchg
pop
ds
add
out
mov
push
jnp
jle
cmp
rcll
push
out
les
or
mov
ret
xchg
scas
mov
adc
in
xor
sub
cmp
jns
push
mov
fwait
popa
xorb
fsubrl
gs
ficomps
push
lock
push
mov
aam
rdtsc
imul
mov
push
movsl
insl
int
jns
repz
mov
stos
lret
xchg
push
loope
stos
xor
cmpsb
aas
push
ja
add
addb
les
adc
lret
mov
cltd
insl
popa
loope
push
les
mov
and
popf
sbb
in
scas
lcall
add
push
xchg
cmpsb
mov
cmp
jecxz
les
test
ret
or
out
cli
repz
pop
mov
mov
pop
hlt
pop
push
mov
idivb
jae
cli
aam
jno
mov
mov
sbb
out
jne
dec
mov
add
loope
and
xchg
xor
sbb
loopne
inc
lds
mov
frstor
stos
and
in
push
scas
jno
popa
or
mov
out
jmp
mov
dec
jbe
or
sbb
fstl
int3
push
pop
mov
pop
aaa
dec
push
jp
cltd
sub
add
out
push
xor
mov
jp
jecxz
insl
inc
cmp
add
in
mov
pop
jl
jns
leave
in
fldt
mov
push
setb
and
idivl
bound
mov
jecxz
jle
xchg
insl
lds
cmc
pop
and
lea
inc
testb
inc
fisubl
lcall
loope
xor
loop
sbb
sub
notl
dec
adc
in
mov
xchg
adc
cltd
popaw
xchg
shrb
pop
add
and
xor
loopne
aas
mov
xor
add
fstl
xchg
pop
int
sub
cmp
leave
cmp
loopne
pop
cmp
into
xchg
lret
adc
pop
cmp
pop
insl
fs
jl
lock
push
jg
mov
into
std
sbb
sbb
sub
je
movsl
pop
in
mov
sbb
in
cmc
out
into
inc
sarl
sbb
mov
cmp
lds
sub
mov
loope
push
pop
stos
loopne
hlt
mov
xchg
pop
leave
pop
sbb
cmp
popf
cmp
or
clc
cltd
lcall
dec
jo
cmpsl
outsl
dec
insl
int
sub
jmp
xchg
add
lds
lods
adc
jle
lret
xor
cmp
xchg
je
in
dec
cmp
fwait
xor
test
mov
cwtl
or
pop
jmp
gs
mov
cli
push
rcll
xchg
cmp
int3
cmp
pop
std
dec
ja
pop
and
fwait
cli
sbb
push
outsl
pop
add
jg
dec
hlt
adc
sbb
scas
mov
cmp
xor
rcrb
outsb
mov
sbb
das
pusha
ret
inc
lret
cmp
test
js
into
push
insl
enter
xchg
and
pop
push
mov
inc
fmull
push
xor
lods
rcrl
lcall
int3
lret
xor
sbb
pop
faddl
xchg
mov
dec
negl
test
cmp
int3
je
push
and
stos
ss
or
sti
stos
mov
xor
pop
jmp
cmc
movsb
pop
test
or
xchg
mov
push
es
xor
cli
mov
ja
loopw
mov
mov
sbb
pop
cmp
cld
cmc
mov
scas
mov
cmpsl
inc
sbb
cli
mov
xor
jmp
adc
xor
xor
jmp
aas
in
pop
pop
in
and
pop
sub
sub
mov
mov
jg
aas
js
or
mov
cmp
pushf
scas
scas
jge
inc
movsb
lcall
fs
mov
pop
mov
cli
push
pushf
bound
std
sub
mov
nop
sbb
push
jo
dec
das
cmp
adc
int
enter
xchg
je
leave
jge
xor
notl
mov
ljmp
or
outsb
mov
adc
aad
xchg
insl
xchg
jg
xchg
dec
jnp
jbe
xlat
addr16
xor
lcall
lahf
test
cltd
js
cwtl
dec
and
inc
sbb
sub
shll
pop
mov
mov
fildll
imul
out
fists
or
xchg
imul
jp
cmpsl
scas
cld
hlt
nop
movsl
nop
push
loopne
add
repz
dec
push
jns
jmp
fsqrt
in
addr16
dec
mov
es
mov
mov
ret
xchg
sbb
jl
stos
testl
daa
stos
repnz
push
jge
les
shl
and
ds
mov
cmp
loopne
movsl
dec
mov
jb
adc
lahf
je
lahf
scas
test
add
dec
scas
add
sahf
push
inc
loop
iret
xchg
mov
hlt
and
cmpl
popf
in
jno
inc
aad
out
sbb
cltd
add
fwait
sti
xor
mov
push
sub
cmpsb
pop
dec
data16
iret
aaa
inc
dec
popf
mov
repz
insl
xlat
int
fucomip
imul
mov
lods
sahf
pop
fimull
jp
xor
xchg
scas
insb
test
mov
jbe
subb
inc
rcr
jne
pop
mov
fisttpll
loopne
lahf
pop
dec
mov
xchg
xchg
xor
sahf
jns
xor
je
fsubrl
out
call
push
test
lret
and
jmp
jns
lea
sbb
loope
test
scas
xchg
add
cmp
ffreep
aas
in
add
test
pop
nop
insl
lahf
fnstcw
jo
test
imul
cmp
pop
addl
test
icebp
adc
incb
xchg
pushf
mov
mov
pop
pop
hlt
add
jb
test
lcall
mov
loop
inc
mov
pop
add
fwait
bound
test
inc
js
aaa
inc
negb
loopne
mov
cmp
or
adc
loopne
inc
inc
clc
jmpw
and
addl
or
xchg
adc
sub
sbb
lcall
test
cmp
jbe
mov
in
cli
mov
dec
cmp
mov
rorb
test
mov
mov
push
inc
mov
hlt
stc
xchg
adc
decb
insb
lods
mov
hlt
mov
mov
cmp
cmp
push
xlat
sbb
negb
sti
lret
das
pop
fistpl
divl
mov
sbb
lock
pop
rcrb
movsl
pop
or
jae
imul
loope
out
mov
cwtl
les
test
js
push
pop
fnstsw
orb
mov
je
xchg
pop
adc
and
std
ja
inc
push
cwtl
or
pushf
stos
adc
fstps
jmp
xchg
hlt
out
jae
mov
mov
pop
pushl
jnp
inc
int
fldenv
rcll
jae
loope
out
mov
dec
fiaddl
jnp
out
ret
and
stc
adc
dec
mov
inc
out
sub
lea
xchg
loopne
sbb
cmp
inc
and
leave
shr
mov
or
mov
add
rcrb
aam
xor
xchg
sub
push
lahf
jge
fidivrs
pop
or
mov
out
jno
dec
adc
adc
or
popl
std
aaa
xchg
lcall
cmp
jns
in
or
dec
xchg
cwtl
adc
sbb
aad
ret
add
sbb
lods
and
insl
sub
fwait
pop
mov
mov
sti
and
ljmp
xor
or
fcompl
aam
loopne
das
or
pop
sub
js
push
mov
or
jno
dec
pop
add
ror
gs
in
cmpsl
sub
push
stos
inc
and
push
inc
dec
jmp
pop
dec
inc
loop
arpl
les
jns
fmul
stc
movsl
insb
inc
loope
pushf
pop
shlb
add
insb
inc
js
xlat
divb
ds
hlt
imul
mov
int
fstpt
and
shr
popa
push
jns
pop
xor
lods
jo
std
push
sub
lock
hlt
pop
mov
fldenv
lahf
cld
out
andb
mov
jl
jmp
loope
testl
inc
mov
dec
loopne
fidivrl
shrl
roll
clc
adc
push
mov
pop
out
pop
xor
movsb
mov
sbb
clc
loope
jmp
js
rorb
pop
fwait
lret
adc
xor
xchg
and
cmp
data16
scas
lahf
mov
jmp
mov
xchg
pop
das
cli
sub
jle
mull
mov
pushf
inc
dec
cmp
ror
loop
fadd
cmp
xchg
iret
dec
rolb
fadds
cmpsb
xchg
dec
mov
loope
xor
imul
test
mov
pop
mov
cmp
cld
jmp
add
ficoml
out
sbb
shlb
test
imul
xchg
incl
scas
jbe
xchg
inc
dec
inc
orb
decb
lret
mov
shll
mov
repz
sub
loope
cmp
out
lods
test
mov
add
rolb
sti
cwtl
outsb
or
dec
inc
jg
mov
out
lahf
or
dec
sar
cmpsb
sub
push
mov
xlat
dec
lock
in
lods
inc
roll
or
jns
push
aad
psadbw
pop
or
jnp
dec
stos
cmp
insl
cmp
hlt
rol
jle
ficoms
dec
std
add
pop
xchg
push
ffreep
add
cmp
or
adcl
or
lret
or
and
pop
daa
mov
mov
inc
xchg
ret
and
ret
mov
push
cs
mov
mov
sbbb
repnz
jns
cmpb
pop
xchg
mov
or
push
jo
fiaddl
testl
sbb
stc
test
es
and
xor
aad
lods
mov
mov
jno
ds
paddw
pushf
sub
add
mov
adc
mov
or
cwtl
mov
lret
inc
sub
imul
inc
pushf
movsb
ret
pop
adc
cmp
and
lret
adc
pop
fisttpll
adc
push
imul
popf
mov
push
jbe
sarl
fsubrp
icebp
hlt
aaa
or
loop
scas
testl
test
and
cld
pop
push
test
insl
and
enter
mov
stc
mov
mov
mov
mov
sub
outsb
stc
dec
out
dec
leave
pop
movsb
push
jno
test
call
fadd
jbe
subb
jo
shll
loop
push
cmp
sarb
sub
cli
clc
cmp
pushf
dec
cmp
mov
je
ljmp
cltd
xchg
fdivl
pusha
or
cli
xor
iret
enter
dec
addr16
sbb
jle
pop
hlt
les
xlat
lods
das
daa
xor
frstor
sub
and
add
jnp
bnd
push
inc
ss
jo
push
or
push
lahf
inc
push
fs
fdiv
addl
mov
add
mov
cmc
xchg
and
call
mov
xor
cmp
aam
mov
add
sub
repz
inc
sbb
sbb
adc
cmpsl
jge
cmp
mov
int3
mov
mov
xchg
scas
pusha
mov
pop
push
sub
movb
push
inc
out
jmp
imul
push
leave
imul
adc
xchg
mov
leave
xchg
cmc
add
fldt
cmpsb
ffreep
push
cmc
sbb
mov
scas
sbb
xchg
and
dec
pop
sbb
adc
pop
je
scas
imul
fistpll
and
aad
adc
inc
jns
sbb
jmp
ret
jns
pop
jb
stos
inc
jo
cwtl
lcall
add
out
push
arpl
icebp
inc
adc
and
adc
xchg
dec
xchg
dec
cmpsb
sbb
in
fnstcw
std
pop
int
pop
inc
movsl
mov
out
lea
adc
sbb
mov
call
repnz
or
call
sub
lea
mov
mov
jl
popa
mov
out
rclb
mov
cmp
xlat
fmull
into
into
mov
les
or
imul
outsb
xchg
lcall
cli
push
gs
mov
mov
xchg
cmp
adc
xchg
call
fdivrl
mov
aas
lahf
mov
adc
lret
add
xor
cmpsl
push
das
je
js
vmovdqu
inc
mov
scas
imul
and
mov
mov
imul
sahf
insl
mov
jbe
cwtl
sar
dec
push
pop
scas
add
jno
jge
stc
or
xchg
dec
shr
cwtl
mov
jp
imul
mov
addr16
cmp
cmpl
hlt
sub
fbstp
dec
andb
popl
sub
adc
rclb
negl
inc
lods
and
or
jns
or
pop
in
fnstcw
fmuls
addr16
addr16
push
sub
enter
dec
ss
das
fimuls
out
sbb
sub
mov
daa
cwtl
cmp
inc
clc
xchg
add
faddp
fimull
subl
push
arpl
rcrb
cmp
dec
int
pop
cmp
cs
sub
cmp
inc
mov
and
pop
adc
push
ret
stos
stc
adc
cmc
into
in
repz
sub
mov
jmp
add
pop
mov
fdivrs
daa
jmp
idiv
pushf
mov
mov
mov
paddq
setbe
aas
jge
clc
aas
mov
loop
mov
daa
xor
sub
lods
or
arpl
std
out
rorb
lea
push
push
mov
dec
orb
sbb
sbb
clc
jae
push
add
jnp
js
in
aad
mov
or
and
mov
outsl
cmpl
mov
je
mov
addr16
paddw
cmp
xlat
add
mov
je
mov
pop
or
jns
mov
sbb
inc
inc
push
mov
xchg
sbb
and
xlat
mov
imul
fldenv
jg
addb
pop
sbb
inc
loope
and
adc
mov
mov
lret
xchg
mov
popl
int
shrl
imul
mov
xor
mulb
jnp
or
or
pop
push
insl
sahf
adc
inc
mov
xchg
inc
pop
lahf
and
add
or
popl
sbb
jnp
adc
add
scas
and
cs
rolb
adc
mov
sub
dec
popa
push
xor
lods
inc
inc
mov
push
sbb
push
push
pushf
push
mov
test
pop
jae
call
rolb
pop
outsl
shl
insb
pop
cmp
inc
pop
mov
mov
fstl
clc
popf
movnti
jns
sbb
xorb
pavgw
sbb
test
jbe
and
adc
pop
nop
test
mov
pop
push
adc
xlat
scas
pop
pop
adc
cmpsl
mov
adc
add
jo
mov
mov
insl
insb
repnz
stos
adc
dec
jb
mov
mov
jmp
mov
popf
repz
xchg
sbb
pop
jnp
stos
test
leave
push
inc
rolb
aam
loop
aaa
bound
test
add
cmp
in
push
ljmp
notl
testl
lret
adc
xchg
xchg
scas
cs
call
lods
sti
fsubrl
mov
shrl
xchg
enter
cmc
enter
cmpsl
cld
lea
mov
and
rolb
clc
mov
out
xor
test
out
test
shrb
imul
xchg
out
aaa
aad
xlat
cli
in
cmp
lret
mov
pop
test
mov
sti
cltd
xchg
push
cmp
dec
popf
add
jno
lock
xchg
sub
jo
jecxz
test
mov
add
inc
adc
sbb
push
cmp
jmp
fstpt
pushf
or
movsl
mov
mov
add
and
cld
test
xor
insb
xlat
inc
stc
inc
lods
stos
call
pop
and
jl
clc
fisubrs
outsl
push
aad
mull
movsb
pavgw
xchg
xor
or
cmc
and
inc
dec
shrl
mov
iret
ret
insl
add
push
and
lcall
or
pop
loop
outsl
mov
cmp
lahf
or
pop
lea
lods
jnp
int
inc
out
pop
outsb
es
fistpl
xchg
and
in
push
push
mov
cs
pop
in
xchg
cmpsb
cmp
mov
mov
mov
adc
insl
push
xchg
bswap
cld
jo
cli
sub
xchg
pop
aaa
jecxz
lea
sbb
leave
fs
repnz
push
or
mov
push
cmp
xor
mov
dec
inc
cmp
mov
fidivs
iret
inc
sbb
mov
xchg
cmpsb
call
mov
lret
xor
jbe
stos
or
scas
lods
adc
scas
leave
cwtl
fdivrp
pop
and
push
mov
fs
pop
mov
test
sub
outsb
mov
and
sub
push
xor
loop
jae
or
pop
mov
mov
out
jg
ficomps
out
inc
jnp
mov
fwait
dec
lods
aam
cwtl
lret
fidivl
jg
insb
dec
mov
xor
mov
leave
pop
notl
icebp
cmp
dec
fs
add
sub
pop
xchg
and
push
mov
lea
cmpsb
xor
jmp
into
pop
xlat
cmp
lahf
scas
int3
cs
ja
add
dec
cmpsb
pop
dec
insl
xor
pop
adc
fcomip
pop
jmp
test
adc
roll
lods
mov
les
add
rolb
stos
in
mov
ss
fisttpl
mov
jge
mov
inc
inc
les
dec
or
in
cmp
sub
mov
cmp
adc
push
sbbl
mov
xchg
int3
xchg
decb
ljmp
out
mov
roll
call
mov
in
add
addl
xchg
into
push
sbbb
lcall
push
push
mov
jne
xchg
jp
cmc
aad
mov
loop
sbb
xor
daa
mov
push
lods
xor
mov
sbb
mov
jp
fistl
push
das
mov
push
bound
cltd
and
pop
je
jl
or
cld
sbb
int
pop
push
sbb
add
xor
lcall
ja
cmpsb
dec
testl
mov
cmp
jg
das
insb
jecxz
mov
cmp
roll
or
adc
enter
cmpsl
pop
or
and
pusha
pop
in
dec
sbb
mov
js
add
movsl
pop
movsl
stos
push
push
ss
imul
mov
in
jo
and
pop
movsb
mov
lret
sub
gs
cmp
push
repz
jae
dec
call
add
pop
hlt
jecxz
pop
xor
or
stc
je
sbb
cmc
mov
fisubrl
hlt
aaa
aas
ja
push
sbb
push
divb
lcall
sub
xchg
jnp
pop
mov
cmpsl
bound
repz
fwait
out
jo
dec
insl
jo
int3
xchg
imul
lea
andl
push
dec
das
adc
add
inc
ljmp
loop
or
mov
sub
mov
push
cmp
sub
inc
adc
mov
add
jne
mov
dec
ss
sbbl
lahf
jo
jl
push
jmp
or
in
adc
call
jle
jge
inc
lock
sub
adc
push
pusha
inc
dec
push
push
jb
jecxz
rorl
pusha
sub
out
and
mov
loope
mov
fadds
mov
and
fs
outsb
sarb
popf
insb
add
loopne
push
xchg
inc
popf
data16
mov
fmuls
testl
aam
mov
adc
push
pusha
cmp
inc
cmpsl
jns
std
leave
fldt
inc
pushf
push
jle
addr16
mull
push
imul
sbb
mov
add
adc
inc
repnz
je
add
es
xchg
sub
xor
mov
inc
andl
and
adc
enter
icebp
daa
push
push
mov
ss
push
xor
pushf
adc
in
or
push
btc
mov
inc
dec
and
data16
int
xor
pop
push
pop
shll
iret
mov
cwtl
xchg
jne
js
mov
push
xor
popa
aad
imul
mov
or
inc
movsl
mov
inc
outsl
adc
push
cmc
mov
add
ret
rolb
icebp
insb
stos
ja
popa
lock
mov
loopne
or
push
idiv
je
inc
call
xchg
int3
test
call
push
or
mov
push
incl
nop
loopne
add
sarb
xor
int3
mov
mov
data16
inc
fwait
push
xchg
push
enter
out
add
out
sub
xchg
repz
jo
ja
lahf
add
loope
push
data16
rcll
int3
ja
xor
scas
lds
aad
daa
shrl
inc
movsb
sbb
pop
xchg
rorb
in
xor
fnstsw
mov
jno
outsb
push
jo
stos
cwtl
jns
and
lea
jmp
div
add
ror
push
out
and
and
adc
mov
aaa
add
repz
test
push
pop
or
out
out
addr16
repz
imul
scas
dec
sbb
pop
ret
popa
mov
lret
or
aaa
out
push
and
jge
ja
push
das
es
adc
jae
mov
jnp
loopne
ficoml
xor
push
mov
mov
adc
jae
or
addr16
xchg
inc
lahf
sbb
fadd
rolb
repnz
les
cmc
jno
out
sahf
mov
sub
sti
filds
call
pop
fistl
ss
dec
jmp
in
sub
out
mov
out
dec
and
pop
xchg
sbb
push
xchg
cli
lahf
sbb
lret
jns
insb
cmp
ds
push
cmp
sbb
pop
dec
mov
pop
push
add
pop
addr16
lods
dec
xchg
scas
push
jle
and
cmp
mov
pop
out
mov
scas
ljmp
mov
lds
add
push
mov
pop
dec
aad
add
mov
push
add
mov
neg
int
add
pop
out
adc
test
out
xchg
mov
xor
or
cmpsl
sarl
movsl
aas
loop
sub
inc
mov
icebp
sbb
jl
movsb
int3
sub
addl
xchg
fsts
loope
inc
lds
push
lock
jbe
jge
jbe
call
lea
fstpt
sbb
lahf
sub
adc
test
xchg
and
adcb
lea
mov
aam
out
mov
int3
cmpsb
or
or
or
jl
ss
xchg
adc
adc
das
adc
mov
data16
mov
inc
call
out
aaa
shlb
ljmp
stos
fwait
inc
push
hlt
cmp
ret
and
inc
int
js
lea
scas
pop
fmul
fimuls
ja
sbb
mov
xor
shlb
insl
jno
or
lods
in
dec
enter
pop
xor
jmp
shll
sub
cmp
mov
mov
pop
lret
arpl
stos
sub
out
test
mov
push
inc
push
mov
push
repz
test
adcl
dec
jb
sub
push
out
pop
aas
mov
scas
pop
nop
rcrl
ljmp
sub
sub
lahf
push
jp
fsub
mov
icebp
push
outsb
imul
dec
sbb
mov
mov
mov
adc
in
xlat
mov
push
push
adc
inc
lds
fldl
inc
lock
cli
lret
add
sbb
lea
push
add
sub
outsl
fprem1
xor
in
testb
iret
repz
test
les
jnp
jmp
jle
dec
sub
out
mov
xor
popa
xchg
pop
jno
dec
xlat
jmp
push
xor
xchg
lock
jae
jle
pop
nop
gs
int
adc
not
xor
mov
sarl
xlat
cmp
jge
in
es
xor
add
outsl
test
xor
mov
cmp
xchg
pop
cmp
rorb
jae
push
decl
test
adc
pop
inc
jecxz
xchg
dec
push
cmpl
lea
cmp
and
rol
dec
mov
sahf
inc
sub
outsl
shrl
les
push
cmp
mov
add
addb
mov
bound
xor
sub
shrl
or
dec
cwtl
lds
adc
rclb
into
pushf
pop
loope
or
xor
xchg
xchg
and
adc
jecxz
cli
ja
fxch
loop
inc
xchg
or
shll
jbe
test
push
cmp
push
cmpsb
xchg
mov
rclb
mov
fldt
cmc
push
mov
or
adc
insl
int
arpl
mov
push
inc
in
push
or
mov
cmp
or
or
in
cli
sbb
js
mov
sub
das
scas
nop
test
jns
push
addr16
iret
dec
in
bound
push
fdivs
xor
addr16
push
mov
jne
rorb
adc
pop
pop
push
add
popa
mov
mov
sahf
mov
movsl
frstor
pop
dec
dec
push
ss
push
jecxz
pop
xor
pop
push
fisttps
xchg
dec
in
inc
pop
mov
filds
test
pop
mov
cmp
popa
cmp
movsb
push
call
push
mov
mov
jno
hlt
mov
adc
inc
pusha
and
cmc
gs
std
lods
ffree
std
inc
or
mov
inc
js
push
xchg
idivb
scas
add
xlat
adc
sbb
mov
jp
push
fiadds
sbb
loopne
mov
bound
jmp
dec
mov
in
nop
out
fs
shlb
push
test
decb
pushf
jle
fadds
xor
lea
cwtl
mov
not
or
adc
mov
adc
mov
arpl
and
sbb
inc
dec
call
cmovs
clc
loopne
and
cmp
xor
daa
inc
mov
adcb
mov
cmp
icebp
mov
fistpll
push
lods
into
cmp
icebp
jnp
ffree
lret
xchg
aas
cwtl
lret
outsb
dec
and
cmp
ljmp
push
fstps
adc
nop
clc
fidivs
xchg
mov
or
cmp
inc
aad
out
lahf
inc
push
or
aas
and
int3
in
insl
or
jbe
div
mov
test
inc
dec
pop
out
and
sub
dec
daa
das
push
adc
imul
sub
add
xchg
inc
fcmovnb
int3
xor
jae
outsb
and
aam
sub
ss
push
filds
xchg
adc
mov
lret
es
add
inc
xor
fdivr
lret
xor
adc
test
pop
in
and
out
sti
adc
fisubl
std
xor
in
mov
inc
shr
xchg
dec
lret
xor
sbb
loop
fdivr
xchg
les
popa
xlat
inc
xchg
fs
cmovs
push
out
stc
das
lods
sarb
sub
int
sub
add
in
mov
cmc
shlb
sbb
jbe
and
mov
mov
pop
lods
pop
xor
lds
jmp
mov
push
pusha
lea
jg
sbb
stc
sub
and
push
push
pop
leave
push
and
jmp
movsl
fsubrp
insl
mov
xchg
inc
subl
jb
stos
jl
frstor
mov
sub
mov
aaa
inc
out
repz
inc
inc
xor
lea
inc
js,pn
gs
inc
imul
fwait
pop
test
lret
enter
test
push
cld
pop
mov
rcrb
cmp
pop
mov
lock
aam
int
push
jge
subb
ja
or
imul
divb
xor
lret
lds
stos
test
in
popl
cmpsl
cwtl
shr
cmp
in
shrb
dec
movsl
rclb
and
xor
pop
pop
sbb
popa
mov
cs
jae
jle
mov
push
loopne
push
rcrb
std
ficompl
pusha
or
mov
jne
inc
imul
add
push
and
mov
imul
pop
orl
aad
imul
sarl
into
aas
cmpsl
popa
add
mov
cmp
dec
std
shrl
out
mov
fcoms
xor
mov
cmp
mov
push
mov
push
cli
inc
jo
mov
jo
inc
nop
rol
or
inc
lret
out
lds
cld
andl
int3
cmp
mov
xchg
mov
cltd
nop
hlt
fsubrs
or
push
test
sub
cmpsb
push
jmp
inc
nop
cmp
gs
in
mov
dec
adc
fidivrl
sub
cmp
lcall
or
in
pop
xchg
and
cmc
mov
in
icebp
inc
jae
cmp
fucom
cmp
pop
sti
sub
repz
rcrl
gs
mov
lahf
or
inc
pushf
lods
push
xchg
bound
add
push
icebp
jne
shll
dec
mov
out
mov
sub
mov
int
test
scas
std
add
pushf
enter
mov
xchg
in
and
dec
add
or
pop
aaa
adc
push
test
shr
sbb
sahf
clc
lcall
dec
add
aad
rdmsr
jo
push
fstps
shrb
nop
mov
mov
adc
std
aaa
jmp
pop
imull
test
mov
shlb
jecxz
push
sub
fldt
pop
ficoms
mov
rclb
lcall
dec
pop
aas
insl
push
xor
push
stc
ja
stos
adc
jg
sbb
jb
adc
cwtl
movsb
daa
daa
icebp
fs
mov
ret
shl
sbb
pushf
push
ficoml
iret
pop
jp
mov
into
jo
aaa
stos
adc
icebp
sub
pop
or
xchg
call
sub
out
mov
cmpsb
mov
dec
pop
xchg
pop
jno
fstp
arpl
mov
lock
ljmp
jle
jns
je
xchg
push
or
sub
jl
and
jb
sub
enter
scas
lcall
popf
mov
xor
push
xor
or
orb
mov
lea
dec
inc
xchg
scas
clc
sub
inc
adc
jmp
xorb
rcrl
notb
pop
cmp
inc
jns
push
or
or
ret
inc
not
sbb
lret
scas
adc
push
sarb
stos
lea
xor
mov
xorb
push
and
fwait
insl
xor
fsubrp
add
push
call
aas
cmp
mov
dec
xor
mov
jl
mov
mov
sahf
fwait
adc
in
xor
push
arpl
lcall
lock
aaa
jne
out
push
add
cmp
adc
lock
jmp
mov
push
mov
fsubrs
mov
and
jecxz
mov
mov
ret
xchg
and
aam
mov
mov
inc
adc
dec
pop
fcompl
and
or
cmpb
jmp
clc
dec
push
aad
jae
push
jle
cli
mov
xchg
stos
out
cmp
mov
add
mov
andl
stc
pop
jmp
sub
dec
arpl
ss
xlat
fidivrl
movl
mov
or
inc
push
inc
dec
jo
pop
pop
enter
sbb
cld
mov
pusha
sbb
fcomip
insl
mov
ljmp
stos
movsb
push
sbb
insb
insb
jb
cwtl
push
xor
sub
cmp
mov
stos
fldt
adc
sub
xor
sub
and
xor
pop
add
in
pusha
lcall
clc
fdivrs
roll
jae
das
sbbl
pop
mov
and
aaa
aad
cmp
adc
aaa
jb
mov
xor
sbb
fildll
test
int3
push
push
neg
push
sahf
fcomps
dec
push
outsb
fcom
inc
fnsave
mov
popf
sbb
mov
shl
pop
mov
mov
pop
sub
loopne
scas
in
add
clc
push
xor
xchg
icebp
jmp
shrl
fistpl
push
dec
or
fwait
push
pop
sub
scas
mov
push
cld
jl
xor
sbbb
iret
push
out
push
lret
sub
iret
mov
dec
cmp
ss
mov
mov
icebp
jns
or
pop
mov
mov
clc
xor
mov
loopne
shlb
mov
mov
sbb
mov
pop
push
mov
mov
and
aaa
test
inc
out
divb
add
jne
xchg
ret
cmp
mov
les
out
adc
fldenv
and
popf
adc
push
lahf
inc
xor
add
and
dec
jle
inc
pop
pop
js
xchg
in
jl
or
into
stos
xchg
mov
cmp
xchg
subl
and
add
or
dec
push
scas
xlat
stos
roll
mov
mov
je
lahf
xchg
push
mov
mov
adc
shll
jbe
or
and
jmp
sbb
cmp
inc
scas
scas
jmp
movsb
pop
cmp
xchg
xlat
pop
mov
dec
inc
out
sbb
rcl
pcmpgtw
ss
ds
inc
sbb
fnstsw
dec
jbe
pushf
mov
jne
aad
dec
adc
psubusb
bound
mov
lock
outsl
push
sbb
jmp
mov
sub
aam
mov
or
dec
mov
and
int
pushaw
mov
rcl
in
sub
mov
outsb
mov
push
or
mov
sub
aaa
mov
jp
and
lret
inc
addb
xor
cwtl
adc
dec
test
insl
add
pop
mov
fistps
or
addr16
lock
push
push
sbb
ljmp
loope
adcb
inc
jmp
out
sti
bnd
js
push
test
cmc
repnz
rcl
mov
adc
movsb
divl
add
fcmovu
adc
fs
mov
cmc
push
adc
jg
push
insl
push
inc
imul
jmp
jne
pop
jmp
jns
out
mov
cmpsl
xor
testb
adc
std
inc
xor
shrl
sbb
sub
jb
jns
aam
push
dec
cltd
jo
rclb
es
lret
scas
shl
mov
mov
dec
xchg
iret
sahf
dec
popa
adcl
jg
imul
mov
cmp
push
xchg
repnz
int
add
fldt
cmp
cmp
addr16
xchg
lcall
cmp
adc
push
add
inc
sbb
add
push
cmp
xor
or
insb
stos
mov
mov
dec
or
test
sbb
je
in
dec
inc
repz
dec
mov
fs
mov
outsb
jg
jmp
inc
dec
inc
mov
imul
dec
lret
fldenv
push
call
repz
cltd
stos
outsl
inc
dec
or
mov
and
push
xchg
subl
mov
sub
subl
dec
mov
pop
lret
jecxz
jae
push
or
repz
mov
movb
lock
popf
sbb
add
add
mov
inc
push
enter
mov
push
sbb
cs
sub
outsb
rcrb
sarb
jl
mov
mov
dec
es
jecxz
or
stc
sbb
mov
data16
xlat
jbe
cmpb
fisubrs
mov
adc
mov
push
xor
jg
sub
mov
inc
push
dec
ljmp
mov
xchg
scas
xorl
outsb
adc
sub
jle
sbb
mov
adc
mov
rorl
mov
and
sbb
mov
add
out
cmp
and
testb
adc
imul
jmp
mov
fidivrs
imull
pop
adcl
push
popa
push
es
mov
xchg
jo
sarl
or
lods
in
pop
jmp
or
loopne
lcall
shrb
jge
ds
popa
xchg
push
cwtl
insl
xor
lcall
or
lea
iret
lea
cld
insl
lock
dec
in
sub
mov
inc
loopnew
and
mov
mov
cltd
stc
stc
xor
and
jns
rcl
sbb
sub
hlt
lods
jg
and
out
ret
lods
xlat
out
mov
faddp
and
cvtps2pi
and
or
ret
aad
push
rcl
inc
or
fimuls
cmc
test
xor
sbb
add
cmp
in
pop
push
and
int
dec
xor
lret
pop
popa
dec
fcompp
push
mov
stc
inc
inc
jle
push
cmpb
adc
add
mov
dec
sete
xor
in
push
mov
sub
lds
push
sub
dec
pop
push
inc
pop
xlat
scas
lahf
rorl
scas
fwait
cmp
nop
test
adc
imul
insl
xchg
xchg
mov
popf
data16
loop
cmp
or
mov
sbb
nop
or
dec
sbb
adc
insl
shrb
mov
out
dec
in
cmp
sub
cmpl
sarl
fldt
cltd
fs
aas
pop
or
push
mov
test
lods
popf
in
dec
insb
into
out
les
rorb
pop
dec
enter
cmpsb
fwait
and
xor
pop
lcall
pop
mov
mov
repz
movsl
lock
stc
and
push
dec
test
data16
xchg
icebp
idiv
adc
dec
add
and
jnp
data16
push
cmc
adc
in
xchg
sub
adc
sub
fisubl
call
aam
mov
mov
loop
xchg
sub
and
insl
jo
jp
push
pop
xor
pop
test
ret
push
mov
sbb
xchg
cltd
mov
test
and
pushf
and
stc
sbb
and
pop
test
jbe
lret
jge
lcall
add
cmp
shll
test
cs
jnp
loopne
add
push
scas
push
push
sbb
lret
leave
adc
inc
mov
aas
adc
xacquire
and
xchg
pop
shr
lcall
cs
fbld
or
dec
iret
pop
push
jb
mov
lahf
inc
and
loope
cwtl
sbb
mov
mov
repnz
mov
enter
sub
mov
add
ja
xor
inc
test
xor
sbb
mov
add
loope
sub
aam
popa
fimull
xor
push
in
imul
fcompl
xchg
jnp
bound
loop
out
pop
add
pop
lret
incl
adc
rcrb
in
fidivrl
movsb
push
pop
lock
mov
mov
mov
lahf
mov
jmp
les
or
pop
xlat
add
cmp
adc
aad
bound
pop
sarb
in
push
xchg
jnp
jecxz
xchg
cmp
movsl
test
push
adc
inc
sti
inc
fists
fs
lcall
push
mov
cltd
jge
xchg
cld
cmpsb
js
pop
jp
inc
repz
in
data16
inc
imul
pop
mov
leave
mov
stos
adc
pop
xchg
test
push
or
mov
add
cwtl
xchg
movsl
test
popa
ret
xor
xor
daa
hlt
inc
fildll
test
push
xor
adc
dec
push
push
adc
hlt
and
xchg
sub
sbb
xor
mov
cld
cmp
aas
push
cs
dec
popf
dec
divl
cmp
test
adc
xor
or
mov
dec
daa
outsb
mov
insb
mov
sbb
mov
divl
dec
add
leave
mov
push
shr
add
sbb
ds
repnz
ds
ffree
sbb
dec
mov
sti
mov
cmp
jle
setne
loopne
repnz
aaa
pop
js
loopne
ljmp
pop
loop
jl
testb
stos
jle
jbe
push
xchg
mov
and
mov
pop
out
dec
adc
movsb
mov
aad
xor
and
jns
psrad
fdivrs
mov
or
sub
mov
sub
jno
neg
fadds
inc
loop
adc
jb
pop
ret
jp
lds
lcall
rcrb
pop
aad
push
push
dec
stc
mov
pop
and
mov
mov
jns
flds
pusha
add
je
push
std
shr
addr16
adc
stos
xchg
pop
cwtl
out
pop
loop
jg
cs
fs
xor
and
cmp
jae
adcl
cmovno
fbld
rolb
outsb
shrl
ja
add
push
mov
xor
xor
xchg
int
sbb
mov
out
inc
fidivl
inc
shl
push
xchg
xchg
xchg
cli
ljmp
dec
sbb
and
and
in
or
sub
pop
and
jge
mov
ret
jnp
addb
ljmp
adc
push
sbb
cmpsl
add
pop
mov
jg
mov
dec
inc
or
insb
divl
call
test
dec
xchg
sub
mov
ror
nop
ret
rclb
pusha
sub
repz
jb
xchg
ljmp
stos
aad
pop
fwait
pop
orl
fistl
or
outsb
pop
sbb
jbe
mov
cmp
pop
push
jae
jne
jmp
sbb
popf
aad
dec
scas
lcall
pop
mov
mov
ret
data16
addr16
sbb
add
sahf
add
ds
aas
fisttps
cltd
test
xor
push
push
xorb
push
aaa
cmp
movsb
mov
lcall
push
hlt
pop
nop
dec
aad
and
push
int3
imul
repz
inc
cmpsl
cli
push
sbb
rcrl
into
int3
sbb
mov
xchg
sub
cmpsl
cmp
in
hlt
pushf
inc
mov
jns
pop
cltd
adc
add
lock
mov
js
mov
fistps
ds
stos
jns
popf
movsb
sbbb
fwait
mov
hlt
sub
dec
xchg
inc
cmp
adc
data16
dec
xor
int
mov
sti
xor
cmc
xor
sahf
aaa
scas
sbbb
outsl
lahf
push
rorl
cmpsl
push
jmp
mov
mov
inc
movsb
cmp
leave
and
movsl
dec
ficompl
rcll
xchg
jp
icebp
mov
cmp
xor
dec
sbb
xchg
vprotb
pop
lods
adc
pusha
aas
loopne
in
mov
jne
sbb
pop
add
and
test
adc
pop
loopne
xor
sbb
inc
int
xor
roll
push
out
fldl
cltd
push
outsl
adc
les
out
mov
repz
sbb
std
and
adc
repz
jecxz
shrb
lretw
push
mov
dec
inc
jp
add
sti
ror
loop
ljmp
jne
mov
jae
outsl
push
and
add
test
adc
push
pop
push
cmpsb
adc
xor
add
fcoml
fmull
jb
push
aam
mov
push
adc
mov
out
in
test
mov
shlb
pop
cmp
repz
outsb
inc
add
aaa
jno
lds
or
pop
mov
fsubl
sahf
push
fists
dec
xchg
adc
mov
enter
icebp
enter
cmp
enter
jne
xchg
popf
fmuls
sub
lcall
sub
rcl
sub
iret
xchg
push
fyl2xp1
adc
jnp
push
lods
jns
fcmovnb
sbb
and
in
roll
jl
jle
xor
pop
imulb
pusha
clc
pop
inc
push
es
and
subl
or
sub
dec
or
filds
std
mov
mov
das
dec
pop
inc
fadds
nop
push
cltd
jge
pop
pop
imul
ret
mov
mov
repnz
adc
cmp
insb
jno
jbe
add
pop
cmp
ror
outsb
cwtl
ljmp
pop
mov
aad
daa
cmp
lret
js
aam
out
inc
lahf
sbb
call
subl
loop
sbb
divb
push
insl
mov
and
add
cli
loopne
popa
out
jecxz
sbb
push
icebp
push
pop
inc
shl
push
fdivs
fimull
in
mov
cmp
lahf
mov
pop
lock
xchg
cmpsl
sbb
and
loop
add
dec
aaa
mov
sbb
test
loope
leave
loope
test
add
nop
ss
xchg
adc
pop
sbb
sub
xor
lcall
and
cmp
jge
ret
xchg
aaa
sub
gs
inc
xchg
cmc
ret
clc
inc
mov
pop
inc
test
aaa
je
insl
dec
dec
lret
jle
mov
out
or
dec
sub
popa
cmp
inc
mov
push
push
lcall
ficomps
pushf
and
jp
scas
adcl
cmp
addr16
jge
dec
dec
adc
dec
es
xor
dec
aam
jb
dec
pop
test
lahf
pusha
or
rolb
push
jmp
ja
cmp
shrb
sahf
clc
mov
adc
test
lods
add
call
addl
clc
inc
mov
cmp
pop
mov
sub
jg
cmp
aas
xchg
dec
xchg
into
add
mov
jnp
push
int
daa
jge
outsl
sarl
push
fnstenv
mov
scas
addl
add
push
pop
sbb
sbb
scas
add
xchg
jp
mov
repz
lods
cmp
in
nop
lcall
push
jmp
repz
mov
rcrl
aad
jne
ds
cmp
inc
data16
test
clc
jno
mov
call
stos
xchg
shlb
mov
lcall
xchg
fdivl
sub
jg
hlt
popf
in
imul
ficoms
inc
dec
arpl
cmp
dec
jle
in
cs
push
push
xchg
jge
lret
lahf
pop
gs
into
adc
movlps
stos
dec
test
gs
insl
pop
repz
test
jo
icebp
cltd
mov
mov
inc
faddl
cmpsl
out
loope
mov
mov
mov
into
sub
pushf
jp
rorl
pop
xchg
cmp
push
push
in
jg
insb
fisubs
adc
sub
bnd
andb
pop
outsl
and
lds
jmp
loop
into
pop
jo
cwtl
scas
ljmp
fisubrl
clc
cmpsl
pop
pop
clc
es
out
addr16
hlt
sbb
das
in
add
sbb
test
ds
fbld
negb
rorl
jecxz
movsl
ss
out
ret
push
insl
push
dec
gs
sti
fcmovu
test
pusha
xor
ffreep
loopne
xchg
mov
aam
mov
sub
or
ret
dec
dec
add
add
mov
push
mov
std
popa
cmpsb
loop
inc
jg
xor
stos
stos
fisttpl
orb
xchg
rcrl
sbb
mov
mov
mov
sub
insl
out
sub
push
fdivs
loop
pusha
jnp
lahf
je
mov
xor
dec
or
imul
dec
push
incl
arpl
push
stos
int3
dec
into
cltd
jl
cmc
ljmp
xor
fidivrs
lea
sub
push
pop
mov
shll
jnp
repz
cmpsl
push
jle
cmp
stc
sbbb
movsb
hlt
sub
hlt
lds
movb
sarb
mov
lods
aaa
add
adc
sub
mov
in
xchg
jo
xchg
mov
addr16
pop
pop
push
addr16
cmp
je
or
imul
xchg
aad
hlt
mov
adc
jle
shrb
popa
lret
pop
lcall
push
imul
ret
pop
pop
inc
outsb
cmp
leave
jmp
mov
push
int3
jo
rclb
adc
sbb
push
fisttps
mov
mov
xchg
mov
push
fsubl
jb
ficoms
scas
test
jb
mov
pusha
idivl
push
int3
outsl
push
cwtl
dec
mov
mov
inc
insb
jbe
inc
adc
add
push
sub
mov
stos
cmp
shll
mov
mov
int
cwtl
test
add
shrb
xor
cmp
xor
and
std
sub
lds
or
lock
inc
jo
pushf
cmpsb
jmp
pop
imul
xchg
xchg
mov
mov
dec
add
fstpt
xchg
cmp
dec
inc
or
push
add
imul
mov
repnz
xchg
xchg
test
xchg
mov
std
fadds
int3
mov
movl
xlat
cmp
arpl
adc
xchg
or
sub
int3
add
in
les
mov
lret
adc
mov
push
pop
jl
mov
cwtl
sti
dec
jne
lods
and
jns
fst
fcmovbe
push
mov
inc
adcb
push
pop
ret
cs
jnp
rcrb
xor
mov
xor
and
dec
pop
fstps
or
add
and
xchg
in
fimull
or
es
mov
or
and
xor
loop
adc
cmp
jno
sbb
mov
cli
sbb
rcr
rcrl
lds
cmpsl
xchg
or
sub
fidivrl
repnz
int3
add
std
mov
pop
sub
cld
lds
and
les
bound
and
mov
mov
push
push
mov
int3
inc
sahf
fst
add
push
pushf
sbb
or
jo
pop
hlt
push
or
test
jg
mov
bound
gs
clc
pusha
add
mov
mov
stos
movsl
ret
testb
jge
xor
sbb
daa
dec
ja
jb
jnp
pop
push
jmp
inc
or
dec
push
mov
adc
mov
adc
add
int
ror
popf
or
mov
jecxz
imull
in
or
adc
test
fsubrs
jle
sub
jb
push
rolb
cmp
xor
aam
or
sbb
cmp
mov
dec
push
or
subl
sub
popf
je
subb
mov
mov
jecxz
outsl
scas
push
and
movl
out
inc
rclb
das
loope
cmpsl
shll
dec
lea
out
fwait
sbb
xchg
ss
aad
ds
ret
outsl
movsb
sbb
mov
loop
push
push
xchg
push
shll
add
fdiv
iret
ds
sbb
repnz
cmpsl
cmp
hlt
int3
or
std
jmp
pop
pushw
jecxz
testl
push
pop
into
fwait
cli
mov
ss
mov
pop
divb
out
or
cmp
imul
or
xor
push
fs
mov
add
dec
sbb
pop
arpl
pushf
popa
cmpsl
cmpsb
adcb
daa
lds
negl
dec
jl
xor
andl
add
hlt
jno
lods
add
insl
lods
xchg
dec
add
fwait
xchg
cmpsb
fidivrs
roll
sub
out
adcl
mov
mov
jge
leave
rcrl
fcomps
adc
stos
mov
cmp
dec
adc
inc
mov
test
jo
cs
xor
fwait
mov
mov
mov
rcl
mov
jne
fimull
shrl
mov
push
push
dec
xchg
cmpb
lods
dec
repnz
test
int3
ret
mov
inc
daa
and
mov
xor
insl
in
es
popf
cs
and
adc
sbb
sub
test
mov
sahf
push
sbb
jg
call
mov
loope
inc
pop
out
add
aaa
shll
in
push
clc
mov
adc
movsl
pop
stc
in
outsb
jns
hlt
inc
lret
push
pusha
sahf
xor
fisubs
outsl
adc
in
xor
cltd
outsb
aad
xchg
iret
jbe
jne
lea
mov
push
sub
sbb
adc
push
mov
loope
xor
pop
jg,pn
fwait
xor
sbb
lahf
in
inc
or
mov
lahf
movsb
inc
aad
xchg
dec
cs
out
ret
test
sub
push
dec
xchg
nop
mov
xchg
xor
mov
push
lahf
xor
mov
ja
sarb
jnp
jbe
jne
mov
pushf
mov
adc
mov
sbbb
repnz
sbb
mov
adc
dec
xor
stos
xchg
pop
in
movsl
fnstcw
jle
notl
rolb
jns
test
and
into
sub
pop
or
push
xchg
sbb
jo
sets
lea
dec
pop
out
jp
jno
mov
xor
mov
fstpl
pop
mov
test
sarl
into
scas
xor
insb
pusha
out
fsts
inc
popf
adc
jmp
cmp
clc
data16
mov
mov
arpl
mov
inc
lret
leave
lahf
repnz
scas
add
cmpsl
loope
xlat
jns
jns
in
dec
add
sahf
mov
pop
pop
dec
cmp
aas
xchg
addr16
lret
les
mov
loope
mov
das
testl
jae
imul
lcall
sbb
hlt
clc
push
mov
out
neg
bound
cmp
call
xchg
mov
test
into
xchg
adc
sbb
push
pop
jle
push
and
lahf
repz
nop
sahf
outsb
pop
mov
les
pop
or
jge
jge
xchg
jns
adc
mov
leave
mov
xor
adcb
into
xchg
shlb
cvtps2pi
add
xchg
xor
sbb
and
cs
jle
sbb
imul
inc
mov
jmp
andl
cmpsl
xchg
mov
cmpsl
aam
pusha
or
leave
movsl
fistl
fbstp
xchg
cs
inc
and
cld
mov
outsb
add
lods
jle
jne
push
add
cmp
dec
and
sahf
pop
dec
hlt
imul
sub
ret
push
int3
sbb
adc
add
cmp
insl
push
lods
or
sbb
sar
pop
daa
inc
inc
popf
fimull
out
addl
jns
jne
push
xor
imul
dec
and
xchg
outsb
xchg
jo
insb
push
mov
jbe
notb
jnp
aas
loop
cmp
loope
and
or
or
jmp
or
arpl
pop
stos
push
sbb
movsl
xchg
pusha
and
in
std
mov
add
push
stos
add
lret
push
data16
dec
aaa
sub
lahf
pop
mov
xor
jle
cmpb
mov
and
push
mov
mov
sti
adc
sarb
sti
mov
jae
adc
daa
mov
pop
sub
or
lret
push
inc
adc
cmp
das
aam
pop
dec
dec
pop
pop
orl
movsl
xor
adc
fwait
int3
push
rolb
repz
scas
adc
popa
int3
imul
fsts
ds
aaa
pop
push
mov
outsl
cmpsl
js
sbb
cltd
outsb
je
pop
or
or
fcmovu
dec
push
es
daa
inc
popf
jge
in
pop
out
mov
mull
arpl
or
mov
or
fimull
insb
add
arpl
popa
idivl
and
loop
es
ret
sub
inc
je
ds
leave
loop
cmp
bound
clc
sub
scas
mov
fisttpl
pop
ljmp
lcall
dec
push
lret
cld
loopne
sub
adc
insb
mov
mov
mov
fmull
sbb
andl
pushf
add
jg
cmp
sbb
dec
pop
jg
mov
xor
pop
lahf
test
jnp
movsb
inc
ror
cmp
xor
xchg
imul
xor
inc
or
sbb
jp
out
pusha
decb
bound
pop
stc
cmp
mov
ja
adc
mov
or
pushf
pop
push
pop
and
mov
jp
nop
jne
call
lcall
push
inc
std
js
sub
mov
in
mov
adc
imul
and
jne
and
lret
es
sub
lret
test
adc
push
mov
insl
shr
arpl
pop
pop
cmp
daa
loopne
sarb
or
pusha
pop
ss
es
pop
insl
dec
xlat
adc
and
bswap
jg
shlb
and
or
push
adc
xchg
push
in
sub
lods
xchg
dec
arpl
enter
add
cwtl
rorb
int
xchg
stc
push
dec
cmp
pop
mov
out
imul
out
sub
dec
fs
xchg
sub
popf
push
enter
stos
fucom
dec
or
cmp
leave
push
or
dec
fwait
stc
outsb
scas
fwait
lea
mov
fs
pop
jnp
mov
repnz
and
sar
les
jno
stc
mov
jno
xorb
sbb
jns
pop
mov
jns
xchg
pop
rcll
in
adc
int
ret
push
into
push
sub
add
imul
sbb
fst
sub
jne
mov
ret
loop
or
int3
mov
jmp
and
std
xchg
cmp
repz
rcl
mov
aaa
fldcw
mov
enter
je
cmpl
outsb
xchg
fisttps
inc
mov
in
xor
inc
lahf
testb
mov
pushf
push
mov
shrb
psubsb
mov
cld
je
or
cwtl
push
out
mov
dec
lcall
sub
cmc
adc
mov
push
push
cmp
fists
mov
mov
cltd
mov
cmp
mov
or
xor
sub
andb
test
outsb
lcall
mov
adc
xchg
jns
cld
bound
enter
cld
or
mov
pop
aam
or
cmp
xor
clc
int3
stc
cs
mov
daa
sub
jl
lock
jae
sub
aad
or
in
sbb
sbb
fimuls
lds
aaa
pop
stos
mov
sbb
daa
jns
push
cmp
dec
and
pop
jae
mov
sub
inc
add
aas
imull
mov
cmp
inc
int
adc
cmp
and
dec
inc
testl
test
dec
shrb
testl
lcall
inc
mov
xor
cltd
adcl
xor
scas
ljmp
pop
cmp
pop
mov
mov
hlt
inc
icebp
jns
pop
arpl
push
cld
ljmp
outsl
jg
mov
adc
cli
test
fmul
dec
arpl
cmpb
adc
jg
jecxz
or
inc
imul
sti
fs
fwait
or
fcompl
xorl
out
push
and
mov
lea
xor
test
lock
movsb
pop
data16
mov
loope
inc
in
sub
imul
data16
fildl
cwtl
adcb
jmp
test
add
lods
stc
jecxz
and
pop
test
popl
imul
cmp
jecxz
incb
icebp
jo
dec
adc
loopne
adc
sbb
adc
push
pop
inc
shlb
xor
adc
sbb
jnp
xor
fstps
hlt
lods
mov
mov
xor
jnp
xchg
loopne
pop
push
pop
jo
mov
jno
pushf
imul
mov
out
in
nop
cmp
jbe
dec
leave
jge
jmp
enter
xchg
popf
ss
jbe
and
addr16
ljmp
xchg
enter
or
in
lar
fistps
ljmp
add
iret
test
fwait
test
mov
cmp
rorb
shlb
adc
inc
in
fisubrs
inc
scas
add
xchg
inc
clc
cld
sub
mov
mov
nop
add
push
leave
arpl
cmc
push
loope
pop
mov
pop
mov
cmp
add
xchg
fmuls
popf
mov
mov
sbb
orl
xor
cltd
ret
cmp
xchg
in
fmull
adc
fmuls
cmpsl
mov
mov
cltd
jnp
mov
mov
popf
fmulp
mov
mov
add
cmp
pop
push
cwtl
rorl
add
or
and
aaa
pop
aam
and
hlt
adc
and
xor
sbb
cmp
push
cld
sti
xchg
jp
cltd
gs
outsl
mov
lret
dec
pop
cmc
imul
clc
cmp
jle
stc
xor
imul
scas
stos
xor
pushf
pop
xchg
pop
inc
mov
cmpl
adc
in
cmp
inc
mov
iret
jbe
jecxz
lods
outsl
ret
jmp
out
in
les
xchg
mov
cmp
rcrb
popa
cli
mov
jle
cmpsb
push
fstl
dec
jnp
mov
or
push
arpl
push
out
mov
mov
lock
insl
cwtl
popa
js
cmpsb
aam
dec
movsb
and
loope
test
sub
int
rol
sbb
sbb
push
outsb
nop
sarl
mov
dec
inc
stos
mov
xor
and
scas
mov
mov
pop
pop
mov
std
xchg
add
ret
clc
sbb
loopne
inc
ret
add
xchg
mov
push
push
into
sub
adc
lret
jne
adc
mov
stc
xor
mov
mov
jp
pop
sub
scas
das
popa
jo
hlt
fisttpl
outsb
sahf
icebp
enter
mov
cmc
pop
out
sub
aaa
icebp
enterw
adc
inc
mov
push
fxch
cmc
or
pop
xchg
fcompl
test
push
or
imull
xchg
int
mov
lock
xor
xchg
add
inc
inc
clc
mov
mov
imul
or
addl
adc
jae
fwait
push
scas
mov
or
movsb
repz
push
pop
mov
das
movsl
dec
int3
fisubl
insb
xchg
and
add
subb
lds
loope
or
ret
sub
adc
xor
fstpt
adc
fiadds
movsl
out
cmp
pop
sbb
jns
repnz
adc
cs
and
mov
loopne
cmp
and
cmc
adc
das
aas
jmp
in
ja
mov
int3
or
mov
jo
rorb
jb
jb
pushl
inc
inc
dec
xchg
fadd
in
cmpb
cmc
mov
or
fidivrl
push
loope
dec
repnz
sbb
or
bnd
xchg
jnp
xchg
data16
imul
inc
cmp
add
jle
repz
mov
negb
cli
icebp
xchg
movsb
in
mov
scas
and
repz
add
imulb
hlt
or
and
hlt
sti
ret
add
cld
cmpsl
lcall
push
cmc
dec
sub
cmp
in
sub
lods
push
xchg
cmp
rolb
arpl
jmp
dec
dec
scas
mov
sub
arpl
test
cmp
xchg
sbb
sbb
and
xor
lret
sbb
sbb
mov
jmp
dec
imul
push
cmpb
mov
inc
jne
cltd
js
cs
mov
add
call
cld
fdivr
aam
xchg
lods
rorb
test
repnz
jnp
sub
int
imul
pusha
mov
sub
fwait
in
sub
loop
ja
stc
in
and
fdivrs
ja
xor
push
jo
xchg
cmp
loop
dec
push
inc
xchg
cmp
fstp
or
in
into
movsl
scas
int3
std
cmp
add
popf
push
into
and
je
scas
enter
mov
les
xchg
sub
ficomps
lods
mov
roll
add
push
sub
test
mov
or
pop
push
mov
adc
outsb
fstl
mov
outsb
ss
and
or
rolb
cltd
sub
and
into
lods
add
xor
pop
sbb
jno
xchg
call
subl
mov
xchg
inc
das
pop
dec
sub
inc
mov
jp
mov
pop
insl
je
es
pop
imul
sbb
jno
pop
inc
std
push
out
xchg
fwait
cld
push
xor
shll
mov
cmp
jmp
addr16
xor
push
subb
or
sub
xchg
fcmovu
or
inc
shll
aad
or
mov
ja
pop
outsl
adc
hlt
aas
leave
lods
ja
mov
pop
ret
test
insb
and
adc
stos
sub
xor
jns
or
sub
je
pushl
mov
loop
dec
mov
sti
sub
mov
hlt
dec
mov
pop
dec
and
or
jb
pop
sbb
in
rol
lock
inc
pop
mov
inc
cmp
arpl
add
sub
sbb
inc
xabort
xlat
inc
aad
xorb
and
jo
or
jmp
jg
cmpsl
inc
mov
and
fcomps
sub
jb
rolb
mov
push
cmp
addr16
dec
loop
movsb
inc
push
cmp
lcall
in
xor
fistl
pop
repnz
jnp
jbe
jbe
dec
in
jo
mov
inc
rcrl
cmp
fcomps
shrl
str
dec
gs
xchg
aas
add
into
cmc
in
or
add
sarl
lahf
jb
dec
cmpsl
sti
stos
mov
xor
and
movsb
xor
ja
dec
mov
sti
add
rcrl
icebp
fptan
out
add
stc
imul
add
popf
pop
adc
inc
xor
outsl
push
add
std
push
and
movsl
aaa
xchg
inc
outsl
rclb
push
or
leave
xor
les
or
add
ljmp
into
xchg
mov
mov
and
or
xor
push
and
push
pop
jns
fstps
dec
daa
adc
sub
sub
in
out
xlat
mov
imul
icebp
lahf
fisubl
shlb
mov
jnp
jmp
js
jmp
sub
cmp
mov
stos
inc
fnsave
sbb
fstl
lahf
test
imul
sub
orb
enter
push
push
mov
adc
sarb
out
mov
xlat
in
sbb
push
daa
ret
popa
push
loopne
jg
push
aaa
out
jno
push
mov
test
xchg
mov
ret
jl
out
outsl
lea
fstpt
inc
xor
sub
imul
push
xor
pop
lods
cli
push
cmp
gs
dec
xchg
dec
push
imul
dec
xor
movsl
adc
lock
xor
in
js
jecxz
lock
adc
and
xchg
notb
or
add
add
xor
cmp
push
mov
jl
dec
jg
dec
je
aam
bound
xor
rcl
cmp
sti
lret
dec
jo
subl
fisttpl
mov
mov
xchg
das
push
je
lcall
dec
je
pop
movsl
xor
xchg
inc
popf
jge
movsl
xor
adcb
mov
test
lret
pop
fwait
adc
mov
and
and
enter
pop
in
push
mov
push
lods
enter
or
cli
inc
ja
jno
popa
loopne
pop
ljmp
in
sbb
das
xor
adc
add
cld
fwait
push
fmull
aaa
mov
clc
adc
lock
pop
push
inc
sub
lcall
jno
pusha
jl
dec
sbb
shl
lcall
lds
cmovae
scas
mov
jge
jg
sub
das
mov
clc
popf
sub
imul
out
sbb
jmp
push
xchg
jp
lcall
fstpl
mov
cltd
cltd
out
ds
imul
mov
inc
sbb
adc
cli
std
push
jle
call
xor
mov
adc
push
xor
mov
sbb
lods
test
adc
out
sbb
aad
pop
cmp
divl
sub
and
vmptrst
imul
jo
push
mov
popa
jne
std
mov
lods
cmp
sbb
data16
inc
test
clc
cmp
into
xchg
mov
xor
daa
mov
out
or
fdivrs
and
jmp
sbb
cltd
sbb
inc
mov
xchg
push
sbb
ffreep
mov
movsl
stos
add
clc
mov
mov
mov
push
insl
cld
dec
daa
scas
popf
fnsave
mov
fwait
xchg
pusha
adc
addr16
in
call
mov
mov
adc
add
sbb
imul
pop
pop
jle
jns
and
push
mov
mov
divb
pop
hlt
ret
stos
jne
hlt
pop
xchg
lret
jns
loope
outsb
xor
test
cmpsb
inc
jecxz
adc
nop
mov
leave
lcall
pusha
cmpsb
ljmp
out
sbb
movsb
jae
pop
jb
and
rep
pop
insb
sub
push
fistl
outsl
outsl
dec
cmp
adc
xchg
push
pop
sub
cmp
xchg
push
lcall
sbb
inc
push
adc
mov
lahf
xor
stos
sahf
dec
sbb
push
cmp
push
imul
mov
out
cmp
shll
xchg
fidivs
push
sbb
int3
repnz
cltd
pop
xchg
pop
xlat
out
movsb
inc
scas
aas
xchg
cs
xchg
mov
ret
insl
leave
in
xchg
stos
pop
cmp
dec
cld
rorb
pop
fdivr
xlat
jo
pop
add
inc
push
and
movsl
negb
pop
pop
out
ret
imul
dec
into
xor
pop
push
shlb
jg
sub
sbbb
jle
sbb
push
mov
mov
call
and
jb
ficompl
and
std
into
mov
arpl
cwtl
xchg
popa
mov
xor
loopne
movsl
out
rorl
or
mov
jbe
xchg
out
jl
ljmp
stos
lock
les
stos
inc
insb
loope
mov
ret
lods
les
aaa
ret
lock
xchg
pop
pop
inc
ja
pop
dec
loope
lods
js
mov
jmp
jno
jmp
clc
sti
xor
jge
mov
mov
lret
aas
pop
sub
rcr
push
sahf
fucomi
pop
and
xor
mov
insl
or
std
adc
sarb
and
jg
fsubrl
jae
rcrb
cmc
mov
addl
cmc
lods
adcl
testl
ds
lret
fdivl
adc
or
add
pusha
movsb
es
shlb
pop
int
lahf
or
cmp
sarb
jg
out
loopne
mov
out
pop
in
inc
jge
add
mov
out
mov
pop
add
int
addr16
lods
add
shl
aaa
jl
fstl
sti
inc
cmc
xchg
ds
push
xor
iret
popf
aaa
nop
mov
call
jae
std
stos
push
add
add
negb
sbb
test
cli
and
xor
mov
leave
xchg
mov
or
mov
enter
and
sbb
sub
pusha
loope
sbb
sub
mov
std
imul
movsb
xorl
jge
xor
fmuls
xchg
jno
xor
addb
xchg
inc
jle
rcll
jb
ret
push
xlat
push
xor
jmp
test
xor
sub
sub
mov
xchg
sub
loopne
sbb
inc
data16
sub
add
imul
or
out
pop
sbb
jp
pop
ds
mov
ret
mov
jecxz
mov
sbb
iret
mov
or
movsl
push
xchg
pop
mov
pop
lods
cltd
pop
lds
adc
jg
mov
scas
popf
and
mov
sahf
xorb
cltd
dec
jne
and
sub
sub
lahf
fsubrl
dec
fldcw
scas
insl
lods
es
xlat
sub
jmp
pusha
out
adc
sahf
inc
and
test
cmp
cmpsb
negl
iret
fsubl
jecxz
inc
sar
mov
lcall
add
jns
ds
mov
sub
cli
fstpt
out
shrl
into
lret
roll
and
xchg
stos
push
shrb
jns
pop
push
push
stc
mov
inc
shll
leave
fs
mov
inc
into
mov
lahf
cld
nop
insb
dec
mov
mov
adc
add
sub
push
adc
xchg
jle
enter
xchg
add
mov
cmovp
mov
adc
mov
adc
xor
sarb
mov
jp
cld
jp
add
jns
nop
fwait
sahf
mov
mov
mov
lcall
das
sub
sti
xchg
add
cmp
call
jmp
scas
add
dec
push
add
or
lahf
adc
pop
xor
aam
int
adc
push
cli
push
fisttpll
arpl
lcallw
xchg
xor
push
repz
aaa
std
mov
cltd
adc
mov
cwtl
mov
pop
in
pop
mov
push
popf
cmp
push
push
inc
cwtl
pmaxsw
fbld
lods
mov
push
lds
into
lcall
sub
mov
aam
sarb
stos
inc
lods
mov
test
xor
pop
pop
push
add
out
cmp
sub
in
bound
jmp
mov
pop
mov
xchg
in
and
and
loopne
mov
xor
test
add
mov
adc
inc
mov
in
jge
je
jg
and
jnp
or
cmpsb
jns
xchg
out
movsl
adc
cmc
std
leave
cmp
lea
imul
pop
inc
jmp
pop
fxsave
sbb
mov
push
ss
xchg
test
adc
nop
test
stc
js
lods
fildll
jbe
xchg
mov
lea
xchg
fcomip
jbe
cmpl
shrb
shr
cmp
mov
mov
mov
cmpsl
push
jg
and
ret
jp
add
lret
mov
outsl
ja
jecxz
cmp
imul
jne
pop
nop
mov
add
cs
and
dec
mov
clc
pop
cltd
add
mov
ss
js
comiss
fwait
xor
popa
dec
and
out
mov
or
std
sub
lcall
add
clc
and
push
xor
sub
push
push
ret
pusha
sbb
imul
fsub
mov
addr16
psllw
adc
fwait
clc
push
xchg
pop
sti
das
mov
clc
aas
pop
mov
jmp
insb
popl
bound
lea
mov
lret
push
or
fsub
xor
inc
aad
scas
and
add
xor
repnz
shrl
icebp
xchg
mov
jae
scas
lcall
push
inc
cmpsl
sub
add
xor
sbb
adcb
lods
out
add
xchg
sti
jp
xchg
mov
test
push
xchg
mov
lds
cli
lret
dec
sub
cmpsb
mov
xor
jp
jnp
pop
fildl
mov
scas
push
sub
dec
test
push
xor
ds
mov
addr16
ret
add
mov
fwait
xchg
sub
inc
out
int3
js
sbb
fincstp
insb
push
and
dec
jns
jnp
fcoml
mov
shlb
pop
in
adcb
fs
idivb
movsl
bnd
mov
aas
gs
ds
inc
adc
ja
mov
aad
mov
sub
sti
or
andb
xor
cld
je
inc
out
lods
call
aad
popa
loop
mov
test
lods
fnstenv
shl
js
and
ret
test
fistps
dec
hlt
jbe
xor
js
cmpsb
rcrl
incl
push
add
mov
mov
ss
pop
xor
and
cli
pop
adc
iret
push
dec
mov
pop
ss
out
arpl
jb
xchg
fwait
push
insl
loope
pop
inc
or
jmp
mov
mov
js
ffree
push
loop
adc
cld
imull
pop
std
xchg
mov
mov
push
imulb
sti
fisttpll
dec
out
js
je
xor
je
sbb
adc
xchg
pop
xor
pop
cmp
dec
pop
xchg
stc
lcall
testb
test
enter
popf
sarb
ret
lret
fmulp
shlb
adc
cmp
push
add
ja
pop
pop
in
lahf
cmp
fs
js
fldl
scas
fimuls
xchg
scas
mov
aaa
push
jp
cmc
jo
or
sub
adc
or
adc
movb
rcll
lret
add
insl
dec
shll
and
ljmp
mov
into
lods
cmp
stos
int
imull
push
mov
xchg
mov
mov
les
shll
shll
fs
ret
lahf
mov
shl
and
inc
int
dec
iret
xor
rorl
dec
pushf
and
rcrl
imul
add
xchg
fs
adc
aaa
pop
push
lret
sbbb
adc
mov
pop
sarb
push
gs
loope
mov
pop
dec
loop
sub
and
mov
mov
xor
nop
aas
iret
lret
inc
data16
dec
cltd
sub
add
jp
arpl
adc
dec
cli
cmp
lea
sar
xchg
movsb
andb
cmpsb
mov
xor
lcall
outsb
bound
loope
dec
add
inc
lret
adc
push
int3
sarb
repz
out
add
rcrb
push
fs
cmp
dec
enter
or
mov
xor
xlat
rorb
pop
mov
in
mov
out
or
jns
shl
jmp
jp
hlt
sahf
jo
push
push
sbb
pop
mov
jae
addr16
and
sub
lret
int3
negb
jnp
add
mov
jbe
dec
lcall
daa
imulb
ror
sbb
aaa
mov
xchg
mov
hlt
imul
ljmp
jl
call
fdivrl
sbb
das
xor
add
out
mov
cwtl
loope
ret
icebp
sti
pop
mov
sbb
rorb
pusha
inc
aaa
and
cmp
lahf
notl
bound
mov
sub
lret
adc
pop
repz
xor
adc
cld
pushf
ss
xor
setle
or
and
leave
or
or
xor
cmp
push
mov
jmp
mov
or
es
xor
lock
push
in
in
cwtl
adcb
inc
int3
iret
jbe
xchg
mov
mov
bound
stos
and
jno
mov
jmp
push
dec
std
push
pop
dec
lret
push
test
loop
outsb
ja
mov
aas
cmp
add
jbe
add
push
mov
cmp
imul
ret
mov
mulb
in
xor
sub
jns
stc
xor
and
sbb
push
pop
pop
cmp
pop
hlt
ret
movsl
push
mov
jae
and
cmpsb
add
dec
mov
dec
jae
jle
movsb
or
lock
sub
cmp
pop
adc
jne
push
cmp
sub
sbb
incb
xchg
push
or
cmp
cmp
in
cwtl
xchg
mov
dec
xor
jno
mov
addr16
pop
xor
jecxz
and
mov
xor
imul
andl
jno
xchg
into
ja
mov
gs
pop
lea
stos
add
jge
jbe
shll
stc
pop
jmp
cmpl
enter
mov
push
xor
or
clc
fisubs
cmpsb
cld
jb
jo
sub
and
sbb
ja
mov
mov
adc
push
add
inc
into
mov
test
jecxz
in
es
pop
ret
in
insb
loop
or
paddusw
xlat
aaa
in
sbb
das
mov
call
rorb
and
lds
mov
imul
test
stc
xorl
call
popa
and
gs
jl
scas
pop
mov
insb
and
ds
and
lds
loop
scas
sahf
mov
xchg
aad
push
movsb
xor
daa
mov
mov
sbb
aad
sub
data16
cmp
jp
cmp
xor
adc
pop
and
addr16
jmp
and
cmp
cmp
cs
xor
and
or
test
xchg
mov
mov
pop
ljmp
sti
sbb
adc
mov
imul
icebp
pop
dec
mov
in
dec
inc
jo
xor
xor
xchg
pop
mov
sbb
sub
loope
lret
mov
inc
push
sbb
daa
jnp
xchg
lock
in
sbb
in
icebp
enter
mull
add
lods
dec
ret
popa
movsl
scas
je
xor
fistpl
cmp
mov
sub
or
mov
andl
in
cwtl
je
adc
push
cmp
jbe
xor
out
lock
add
cs
sub
mov
push
jb
mov
mov
imul
push
int3
fstl
and
dec
jmp
jle
out
movsl
and
sbb
dec
sub
faddl
lock
sbb
cwtl
jno
into
mov
je
mov
xlat
push
inc
fucom
xchg
dec
fstpt
or
adc
gs
lcall
add
stos
mov
mov
into
or
fcomip
or
xchg
test
dec
push
test
mov
jle
xchg
pop
cmp
and
iret
xor
jno
negl
daa
or
mov
mov
push
xchg
sbb
dec
stc
push
pop
sahf
mov
ja
test
mov
xor
pusha
jno
inc
shll
fisubl
andl
insl
cmp
scas
mov
and
lds
push
dec
jo
add
pusha
stos
mov
jno
cmpsb
push
adc
xor
loope
add
cmpsb
popf
push
rcl
sbb
shr
xchg
push
rolb
push
xor
inc
mov
mov
inc
in
jmp
mov
aaa
icebp
test
mov
mov
mov
jecxz
jle
dec
ret
fimuls
flds
dec
dec
adcl
int3
or
sub
std
scas
pop
outsb
pop
lods
add
shl
xlat
repnz
dec
push
stos
sbb
xor
test
cmp
into
cmp
imul
mov
lret
mov
aaa
inc
mov
iret
ret
dec
ds
mov
shlb
or
aas
sarl
mov
movsb
push
xchg
and
sarb
jb
sti
lea
inc
or
aaa
jbe
sub
jne
mov
out
rcll
lock
sti
fildll
mov
out
pop
ljmp
mov
jmp
decl
and
push
jle
jbe
mov
pop
ljmp
ss
popf
sbb
mov
cmpl
push
pop
cmpsb
testb
mov
test
out
sbb
xchg
arpl
cld
jecxz
cmp
mov
fstpl
fsubr
mov
adc
jne
or
hlt
cmp
push
popa
insl
jae
push
push
lahf
call
insb
push
fidivrs
sbb
aad
aas
pause
insb
rcrb
ret
iret
push
in
xchg
les
cmpsl
shlb
in
ret
mov
popf
outsb
mov
inc
lcall
adc
cmp
addl
icebp
popa
cli
repz
sub
add
ja
add
enter
and
movsl
shrl
xor
dec
jg
and
stc
mov
mov
mov
cmpb
sub
adc
loopne
sbb
push
fwait
mov
xchg
xor
fisttpl
mov
xor
cmp
and
inc
loope
adc
xor
cmp
je
inc
cmpsl
cmp
in
mov
jo
leave
and
out
out
adc
repz
and
insl
rclb
pop
add
aaa
adc
jns
int3
xor
test
roll
xor
fdivrs
in
pusha
sub
gs
mov
xchg
xchg
push
xor
fs
out
sbb
fmulp
in
mov
hlt
imul
ret
rcll
aaa
cmp
dec
push
jbe
stos
popa
sub
pushf
mov
dec
mov
test
ret
or
lds
fiaddl
pop
xor
jge
sub
inc
out
mov
add
in
mov
lods
movsl
lret
push
sbb
int3
fcoms
lcall
orb
clc
enter
stc
inc
mov
ret
mov
xchg
mov
cmp
mov
sub
icebp
sbb
mov
nop
das
sbb
jnp
or
cli
aas
xchg
rorl
push
mov
push
pop
outsb
lcall
scas
mov
or
xor
adc
sti
xchg
sti
jg
stos
dec
fmul
fst
das
sbbl
push
fs
in
ds
adc
mov
pop
push
fisttps
fildl
popl
sub
fmuls
jae
pop
inc
repnz
xchg
call
xchg
jo
sub
pop
gs
pop
repz
xlat
int
jmp
adcb
cmp
lret
pop
jp
push
sti
out
cs
test
mov
int
or
shr
add
arpl
sbb
dec
cmpsb
outsl
push
mov
mov
jae
xchg
pop
dec
inc
mov
mov
call
dec
xchg
dec
outsl
sub
xor
and
int3
jo
std
popf
xchg
cltd
lret
jne
dec
and
push
aas
and
dec
xchg
dec
test
add
stos
xlat
add
xor
loop
xchg
xchg
mov
push
push
cli
or
int3
cs
mov
pop
popf
addr16
rorl
push
xchg
and
adc
sbb
push
stos
ret
lods
movl
mov
pop
cmc
shrl
loop
movsl
mov
aas
movsl
lcall
cmp
push
mov
and
imul
xchg
mov
movsb
lcall
in
in
jnp
adc
ljmp
daa
pushf
lock
icebp
mov
xchg
add
mov
sub
lret
cs
cmc
movsl
xor
in
xorl
popf
cwtl
xor
mov
shlb
jb
mov
dec
jbe
ss
or
std
cld
int
xchg
and
mov
add
leave
mov
pop
cmp
test
ja
repnz
fldlg2
push
sbb
pop
jle
add
pop
mov
fs
cmp
mov
in
test
cmp
scas
nop
test
and
mov
sub
mov
push
lahf
pop
les
rcl
scas
adc
cmp
xchg
dec
dec
lahf
pop
jecxz
fnstcw
add
scas
cmpsl
or
xchg
int
mov
mov
sbb
or
sbb
jmp
aad
jno
pop
arpl
in
push
test
inc
inc
push
mov
add
cld
add
cld
clc
add
pop
cmpsb
aaa
stos
ljmp
mov
mov
mov
decl
mov
pop
sbb
shlb
inc
push
repnz
inc
decl
std
imul
fmull
into
push
imul
mov
push
xor
mov
lods
sub
cmp
or
mov
add
xor
divl
jne
lea
mov
pushf
das
adc
cmp
xlat
aas
mov
std
inc
mov
ret
lock
sahf
mov
jno
inc
jb
cwtl
mov
mov
insl
push
test
aam
and
imul
add
jns
cmp
popa
sarl
mov
xchg
mov
mov
std
xor
jp
rorl
jmp
and
out
repz
cmp
icebp
push
jmp
cmpb
int3
inc
mov
xlat
out
mov
ds
xor
in
push
stc
ret
lret
mov
lods
fildl
xor
aam
xlat
notl
loope
pop
sbb
pusha
subb
out
cli
shl
jo
rorl
cs
cmc
push
cmc
into
mov
add
out
mov
sbb
inc
nop
lcall
xchg
jno
inc
push
jbe
push
loop
dec
inc
sbb
sub
mov
add
aad
jmp
or
enter
mov
data16
xor
daa
popf
in
push
or
mov
popw
mov
push
add
mov
repnz
push
cmpb
movsb
lods
jmp
inc
sti
mov
cmpsl
adc
jmp
cmp
jge
repnz
xchg
pop
lods
mov
adc
in
xchg
mov
rol
mov
leave
outsl
inc
scas
les
jno
and
or
shll
aad
cli
cmp
daa
mov
xor
mov
scas
jo
push
adc
in
sbb
adc
ret
jnp
scas
pop
cltd
stc
mov
test
pop
fisttps
loopne
mov
sub
addr16
rcrb
imull
rcrb
jle
sub
and
dec
mov
outsb
or
pop
and
sub
push
leave
pop
xor
movsb
repz
test
loopne
aam
leave
fldt
leave
xor
lds
add
into
mov
jbe
scas
loop
adc
cs
sbbl
into
decl
push
lods
outsl
in
or
and
xor
or
sar
dec
jp
inc
sub
jg
fcomps
push
stos
pop
or
or
sub
int
jbe
push
dec
inc
dec
imul
pop
imul
repz
mov
jb
pop
xchg
pop
in
pop
or
rorl
sbb
inc
sub
outsb
fsubs
std
pop
sahf
xchg
shr
xor
popa
jg
inc
rolb
jmp
cld
push
or
lret
xchg
subb
lock
sub
adc
repz
test
rcr
xor
mov
jnp
sub
lcall
in
push
pop
jo
lcall
xor
mov
pusha
inc
adcl
pop
cmp
pop
cmpb
xor
into
insl
push
outsb
cmp
pop
sahf
aas
dec
push
stos
shll
inc
insl
jge
ret
fs
push
roll
mov
int3
dec
test
shlb
in
mov
sbb
mov
out
mov
addl
mov
push
xor
cmp
jle
lret
xchg
sub
xor
add
lret
xchg
cmpsl
adc
cmp
mov
hlt
aam
in
ljmp
sub
xor
jmp
aas
dec
and
xor
and
aam
popf
adc
out
dec
mov
incb
add
or
in
mov
arpl
dec
mov
ret
inc
adc
cltd
orl
pushf
lds
cmp
fcom
dec
decl
adc
subl
adc
daa
mov
jecxz
pop
push
out
ja
pop
in
dec
pop
push
das
jns
and
pop
call
inc
add
gs
pop
sbb
rcll
pop
ret
jnp
cltd
rorl
fwait
sarl
icebp
ss
out
frstor
jnp
add
sarl
subl
pop
je
sbb
pushf
add
imulb
push
in
mov
xor
icebp
xor
lret
ss
adc
cmpsb
leave
inc
imul
push
xor
clc
mov
push
inc
faddl
ud2
inc
stc
cmp
adc
insb
clc
mov
gs
push
xlat
add
adcb
mov
negl
lds
in
in
and
mov
mov
cmp
and
int3
jecxz
sbb
mov
fists
test
cmp
push
mov
addl
add
xchg
clc
xor
cmpsl
inc
adc
test
movsb
and
sub
sbb
xchg
iret
pop
clc
ret
int
loop
and
inc
idivb
add
mov
scas
ret
imul
xor
push
dec
adc
fsubl
or
nop
adcb
xlat
xchg
dec
out
loopne
pop
push
dec
ret
mov
push
scas
sbb
dec
repz
pushf
push
lods
les
into
mov
jnp
popa
cmp
repz
xor
add
in
and
xor
lods
push
cmp
mov
add
movsb
jge
xchg
fstpl
stos
cmpsl
mov
cs
add
sbb
mov
loopne
mov
mov
int3
sub
sub
add
lcall
sbb
pop
jns
xor
icebp
ja
mov
pop
loopne
or
xchg
sub
mov
insb
sub
push
xchg
int
cmp
dec
sarl
or
jmp
lock
pop
sbb
mov
xchg
sub
insl
cwtl
gs
mov
dec
insb
testb
cmp
dec
aaa
lods
nop
inc
pop
into
cmp
int3
push
scas
mov
xchg
xor
call
sub
mov
jb
xchg
pop
dec
cmpsl
lods
cmp
fcomip
jge
mov
adc
push
dec
cmp
pcmpeqw
and
outsl
push
jbe
xchg
mov
lret
aas
popf
cmpsl
divb
mov
push
xor
cwtl
call
jnp
push
pop
pop
ss
inc
mov
lds
lret
out
xchg
adc
aam
pop
mov
pop
movsb
pop
dec
dec
or
sbb
outsl
mov
lods
test
mov
jmp
inc
dec
or
or
ror
mov
lcall
mov
out
xchg
mov
push
out
test
mov
push
jle
movsb
inc
loope
mov
cmp
mov
sub
pop
ja
test
lods
fwait
cmp
jno
lods
shlb
mov
or
outsl
or
jecxz
push
sub
jne
out
lret
or
adc
or
add
adcl
xchg
add
xchg
testb
gs
push
stos
push
sub
cmp
in
mov
shlb
mov
aaa
and
push
leave
out
imul
xor
mov
out
movsl
pop
sti
mov
mov
sbb
scas
push
xchg
aaa
mov
scas
lock
and
inc
pop
mov
cmpsl
das
xchg
pop
push
jo
iret
lahf
adc
fdivrs
jmp
idiv
cmp
fcompl
push
jne
scas
jb
lods
push
sub
pusha
lret
lds
adc
mov
and
pop
push
push
xor
js
cli
dec
inc
scas
fcoms
or
in
pop
pusha
pop
xchg
cmp
jo
add
push
or
pushf
ss
sbb
jp
add
mov
mov
bound
mov
mov
mov
jbe
pop
enter
loop
pop
dec
idivb
pop
or
jl
xchg
jb
cld
divl
jge
push
xchg
pushw
adc
cwtl
mov
mov
into
cmpl
stos
jno
push
push
gs
fstl
scas
jo
inc
pop
push
stos
dec
int3
push
mov
mov
rdpmc
xor
xor
dec
mov
jb
sbb
scas
hlt
jbe
xorb
out
rorb
ss
insb
lahf
cmc
cmp
and
xor
fmuls
aas
cs
or
dec
ds
rorl
mov
insb
mov
jns
lcall
insb
fildl
cmpsb
mov
and
dec
sbb
loop,pt
sub
ret
mov
insl
div
push
dec
xchg
and
cmp
jno
push
jb
loopne
pop
add
mov
ljmp
push
jmp
mov
sub
xchg
and
add
aad
xchg
xchg
dec
push
fs
xchg
dec
aas
xor
dec
aam
xorl
mov
inc
mov
dec
out
movsl
addb
mov
sarb
dec
push
mov
push
xchg
inc
adcl
loope
cli
or
add
insb
out
das
cmp
jne
inc
scas
dec
pop
sub
xchg
cmpsl
out
jmp
pop
or
bound
sbbb
out
jnp
mov
push
leave
cmpsl
jno,pt
push
das
push
mov
mov
lock
cmp
mov
mov
out
sbb
pusha
jae
js
das
xor
in
push
pop
outsl
loopne
popf
stc
daa
inc
mov
mov
in
popa
jae
orb
jp
adc
or
shrb
xchg
mov
scas
and
mov
iret
and
mov
pop
sub
ss
inc
jno
mov
xor
imul
mov
out
stos
mov
push
cmp
leave
fcomps
inc
xor
xor
xchg
mov
cwtl
fsubs
adc
rorl
imul
mov
addb
xlat
hlt
je
sbb
int
xlat
scas
repnz
xor
mov
ficomps
mov
out
xlat
and
adc
mov
negl
xchg
sbb
repz
clc
add
or
jb
and
sbb
push
popa
iret
testb
mov
movsl
jp
push
mov
nop
fcmovne
cwtl
shlb
insb
cmp
fcompl
fptan
aad
lret
push
sarb
mov
cli
or
fimull
dec
cltd
and
xor
cmp
push
cmp
gs
ljmp
xor
jg
adc
popa
inc
xchg
pop
and
push
adc
push
popa
push
cmpsb
adc
xchg
cltd
fbld
imul
paddsw
mov
or
and
out
in
jp
cmp
aas
dec
out
movsb
push
add
fwait
sarb
mov
mov
mov
fs
add
out
aad
sbb
xchg
sti
mov
out
les
push
xchg
pop
add
sbb
sahf
aam
push
jns
cmp
xor
outsb
mov
dec
mov
stos
cmp
lret
xchg
xchg
dec
or
push
xchg
inc
lods
xchg
mov
mov
sti
shlb
jl
dec
push
mov
jae
mov
sti
outsb
fs
mov
aaa
push
jnp
ds
jb
test
mov
addb
mov
std
or
orb
mov
ljmp
xor
stc
sbb
decb
cmp
insb
dec
bound
inc
xor
cmp
test
cmp
stos
imul
and
loope
insl
dec
ficoms
cmpsb
pop
stc
inc
lds
jbe
dec
in
jl
in
cwtl
mov
aad
out
stos
push
inc
ret
mov
jmp
push
cmp
push
lcall
loopne
popf
jae
pop
jne
and
sub
ror
sahf
inc
push
sahf
test
inc
jl
and
push
movb
loopne
add
fucom
aas
push
shl
dec
lea
adc
mov
pop
in
std
rol
cmp
flds
imull
cmp
mov
outsl
inc
xchg
jo
loope
inc
movsl
popf
xchg
int3
scas
lods
push
dec
fs
add
out
loop
and
mov
roll
and
sub
test
adc
jb
inc
pop
bound
inc
and
fcomps
lcall
mov
popa
call
cwtl
jno
ret
mov
mov
arpl
pop
js
aad
outsb
xchg
pop
aad
xchg
adc
shr
pop
jno
imull
out
imull
jle
xchg
dec
dec
xchg
lcall
sub
sub
add
ljmp
cmc
scas
cli
push
push
nop
jb
xchg
cli
pop
rol
add
sub
jo
inc
sub
add
pop
inc
dec
hlt
or
jb
imul
lds
out
push
push
movsb
rolb
sarb
add
jge
pop
sbb
jnp
lock
iret
cmp
push
cmp
cmp
cmp
jle
adc
push
adc
sti
adc
mov
mul
mov
fnstsw
pop
inc
subl
push
das
cmp
nop
jbe
pop
fwait
mov
lahf
sub
mov
aaa
lahf
movsl
loope
adc
pop
sub
jecxz
fwait
loope
or
add
jns
pop
mov
insb
fsubl
cltd
lahf
jnp
adc
ret
xor
pop
filds
xor
sbb
sub
pop
cltd
leave
xchg
cmp
or
stc
addl
cmpsl
outsl
xor
xor
pop
ror
push
sahf
xor
xchg
ds
pushf
test
outsb
mov
data16
int
mov
cmc
push
xchg
std
and
mov
icebp
into
xlat
jno
loope
rorb
jg
test
loopne
cld
xor
sbb
ret
and
imul
out
scas
fdivl
jnp
aas
testl
cmp
inc
pop
scas
loopne
iret
xchg
insl
popa
adcl
imulb
incb
data16
aaa
adc
leave
lea
nop
mov
aad
addb
popa
out
cmpsl
pusha
shrl
xchg
test
xlat
cli
jne
add
sbb
test
xchg
dec
jb
pop
add
mov
xor
and
jnp
sub
jns
push
imul
cmp
jecxz
lahf
dec
add
inc
cmp
mov
js
in
inc
stc
mov
push
movsl
aas
pushf
push
mov
ja
xor
mov
imul
data16
scas
aaa
cmp
or
jb
outsb
stc
or
mov
push
in
mov
cmp
cmpsl
or
dec
mov
add
jne
lahf
push
sbb
pop
shll
jp
xchg
mov
push
addr16
lock
stos
xor
ljmp
mov
mov
inc
dec
ret
sahf
sub
mov
loop
pop
popf
nop
mov
push
clc
add
les
roll
pop
popa
mov
fwait
movsb
or
mov
fadds
icebp
jb
push
mov
pusha
insl
loope
test
dec
fs
mov
adc
insl
jo
fimull
lock
jecxz
xor
dec
testb
imull
jns
pushf
test
scas
imul
or
clc
jg
shr
jne
jns
inc
cli
stos
inc
xor
loope
pushl
dec
or
jno
mov
daa
adc
cmc
addb
mov
imul
sub
push
mov
out
jl
adc
notb
mov
dec
out
cmpsl
xchg
mov
lods
mov
lahf
xchg
scas
cli
inc
loop
sub
add
inc
push
inc
mov
loopne
jp
cmp
push
outsb
imul
add
in
adc
mov
push
jb
mov
xchg
push
loopne
dec
mov
ret
jg
jle
cmpsl
scas
ror
dec
jns
fs
ret
rcrl
fstps
ret
adc
mov
pop
pop
mov
data16
pop
repnz
mov
dec
pop
mov
push
xor
xchg
jg
popa
sarl
jns
int3
cmpsl
sahf
add
insb
insb
jo
jmp
popa
xchg
pop
jg
mov
mov
mov
adc
ret
in
mov
mov
push
test
mov
and
sub
dec
mov
xorb
fwait
pop
insw
gs
cld
lods
pusha
sbb
adc
dec
data16
sti
xor
and
fs
mov
out
cmp
pop
leave
jmp
and
and
pop
int3
sti
cmp
mov
test
jnp
daa
pop
sub
loope
add
test
mov
outsl
sub
scas
lods
ret
cmp
pop
and
addr16
jns
jmp
mov
jne
jo
push
fxtract
test
aad
push
cld
xchg
arpl
repz
sbbb
or
loop
seto
insb
int3
pop
test
stc
push
push
jae
imull
jp
adc
jecxz
addr16
fimuls
lea
andl
jo
sub
push
xor
mulb
and
xchg
jnp
icebp
rcrb
cwtl
xchg
inc
xor
pusha
cltd
or
jo
push
or
xor
or
xchg
adc
sbb
lds
enter
lahf
xchg
mov
cwtl
sahf
push
lret
gs
dec
inc
xchg
sub
test
stos
push
inc
sti
bound
adc
sub
imul
dec
repnz
sbb
jp
jp
imul
sub
imul
xchg
sarb
shlb
test
sub
and
xor
dec
pushf
lcall
lods
in
enter
adc
aas
out
cli
insl
xchg
cmp
push
stos
mov
stc
imul
pop
pop
xor
sti
int3
std
fimuls
jecxz
pushf
add
ds
and
push
fldt
daa
sti
xor
nop
aaa
xchg
add
pop
out
push
psubusw
sub
adc
iret
mov
mov
cmp
in
sbb
mov
stc
jl
aam
cmpsl
popf
jns
in
mov
xchg
pop
pop
shll
add
mov
pop
xor
shl
pop
pop
adc
sbb
cli
mov
es
mov
xchg
adc
inc
lea
call
xchg
outsb
pop
aaa
dec
stos
xor
data16
ret
stos
pushf
sub
lea
mov
push
mov
xor
lahf
int
orb
inc
mov
mov
stc
pop
add
jecxz
dec
arpl
dec
pusha
in
call
nop
or
mov
lret
notl
fwait
popa
sbb
dec
dec
movsb
xchg
or
loop
addr16
pop
das
push
in
adc
xor
jmp
jg
mov
xor
orb
xchg
dec
dec
pushf
jno
shl
jle
pushf
cli
sub
adc
sbb
fnsave
sti
or
test
xchg
stc
cmp
jae
into
sub
jns
pushf
add
sub
adc
add
je
leave
mov
jge
jae
in
or
jecxz
decl
lods
je
jecxz
and
mov
fldt
sbb
mov
lds
dec
ret
inc
cmpl
xchg
outsb
leave
inc
daa
stos
shr
test
dec
pop
push
std
sbb
inc
mov
loop
mov
decb
imul
into
out
inc
shrb
pop
sahf
xchg
jnp
jle
jno
jge
xchg
out
sub
pop
mov
mov
andb
lahf
mov
sbb
add
pushf
scas
xchg
inc
call
sbb
mov
push
push
cs
or
insl
outsl
movsb
lock
rorb
cwtl
xor
out
jb
xchg
sbb
cmp
int
or
in
adc
push
movsb
cmpsl
mov
enter
inc
mov
and
add
xor
sti
ds
push
popf
push
cmpsl
fisttps
sbb
dec
jecxz
ja
out
sbb
mov
dec
jb
fsubp
xchg
mov
dec
mov
das
rorl
push
in
push
sub
rorb
lds
mov
add
mov
jge
and
fs
lea
or
arpl
and
xchg
adc
andb
ja
cmp
rol
mov
xorb
and
inc
mov
xchg
sbb
mov
clc
sbb
sub
aam
cmp
ficomps
dec
xlat
push
mov
mov
mov
fidivl
lods
fwait
inc
lret
aam
test
mov
or
test
ret
addl
cltd
int
scas
das
pmulhuw
test
add
jmp
andb
lret
in
stos
pop
push
pop
decl
test
data16
rcrl
and
inc
adc
inc
outsb
lret
mov
lret
clc
pop
mov
push
jb
imul
pop
xchg
mov
imul
stos
fwait
das
cmpsl
jge
or
push
sub
fsubs
int
sub
push
inc
movsl
inc
iret
mov
cmc
imul
popf
xor
sahf
and
and
cwtl
inc
push
add
xchg
lcall
enter
pavgw
ja
sbb
dec
jp
xchg
xchg
mov
sub
dec
push
dec
dec
movsb
mov
inc
jle
out
mov
inc
decl
lods
xchg
push
aam
je
divb
jbe
bnd
icebp
mov
xor
data16
cmpsb
mov
outsl
sub
hlt
fiadds
js
jl
popa
dec
or
xor
ret
in
mov
mov
inc
adc
test
mov
loope
and
push
inc
leave
lcall
xor
mov
into
mov
ret
push
out
mov
dec
inc
addl
dec
inc
mov
mov
mov
pop
dec
sub
movhlps
divb
mov
and
jle
xor
mov
lcall
mov
icebp
mov
jnp
lea
mov
imul
adc
xchg
jmp
mov
test
push
mov
das
add
out
dec
jge
fstps
jmp
mov
repnz
roll
inc
jno
jb
scas
and
adc
adc
add
outsb
push
push
fidivrl
xlat
insl
inc
std
push
dec
adc
adc
popa
jno
mov
dec
fisubrs
inc
push
sarb
out
rorb
dec
push
pop
inc
negb
shrl
dec
in
movsb
popf
addps
stos
hlt
daa
inc
sub
inc
xchg
inc
sbb
add
xor
xchg
push
fs
add
push
test
mov
std
jmp
dec
cmc
sahf
outsl
fistl
xor
push
roll
push
fs
cmpsb
push
aam
outsl
dec
rcll
inc
or
shrb
mov
imul
clc
cmp
jns
or
jns
ret
sub
les
push
push
adc
int3
inc
and
fs
jo
icebp
or
push
mov
insl
or
mov
adc
pusha
rol
shll
adc
mov
repz
sti
imul
lds
repnz
mov
pusha
mov
adcl
inc
imul
jbe
sbb
mov
add
inc
roll
lret
lahf
fs
push
stos
shll
mov
push
jb
push
xchg
sub
movb
lret
mov
jmp
xor
push
jl
test
shlb
push
loope
ret
push
sub
lods
data16
mov
jnp
repz
mov
call
or
push
fimuls
and
fsts
nop
ret
test
push
sbb
cmp
subl
ret
sarb
push
mov
push
insb
mov
sub
mov
xchg
fcmovne
lea
lea
xchg
xchg
aaa
or
jp
jae
cmpsb
mov
mov
mov
dec
subl
repnz
jmp
jae
xor
pusha
mov
sbb
insb
mov
call
lahf
testb
repnz
xchg
andl
clc
pop
loopne
cmp
rolb
pop
insb
aam
sub
lcall
cld
xchg
cmp
negb
sub
rol
dec
xor
xorl
or
notb
or
mov
push
pop
sub
test
xchg
sub
enter
or
mov
mov
inc
stc
mov
xor
dec
cli
add
in
sub
loope
jns
sub
iret
adc
testb
out
cmp
aam
pop
pushf
jp
je
mov
stos
enter
inc
ljmp
pusha
xor
add
stos
sub
scas
adc
jae
push
xchg
ret
mov
icebp
into
test
ret
push
sbb
jae
jno
add
pop
cmp
in
jno
mov
loop
pop
ffree
fwait
mov
xor
mov
sbb
xchg
mov
mov
push
repnz
pusha
pushf
jns
jns
mov
adc
sub
pop
push
jne
stos
cli
pop
and
sub
test
adc
push
xlat
into
dec
push
push
testl
push
hlt
pop
sub
cmp
xor
fistpll
push
sub
inc
dec
test
sahf
inc
and
outsl
mov
jns
sbb
aam
or
das
or
pand
mov
in
mov
sub
adc
ja
and
pop
sub
mov
push
mov
in
xor
lahf
jae
imul
ja
cs
xchg
std
xchg
orb
mov
insl
clc
cs
popf
mov
mov
cli
jmp
in
shrb
enter
pop
lret
pop
mov
inc
daa
aad
inc
push
pop
fucomp
aam
mov
mov
push
fcomps
mov
adc
jg
adc
sarb
adc
sbb
pop
outsl
mov
in
mov
mov
push
nop
cmpsb
lret
shlb
stc
jo
scas
xchg
xlat
jl
out
ret
cmp
push
lahf
movsb
mov
and
loope
daa
adc
jne
imul
push
ret
movsl
sub
loope
fldl2t
subb
fnstsw
shlb
daa
lcall
mov
into
daa
mov
push
xchg
in
arpl
xchg
lea
iret
leave
ljmp
mov
xor
or
cmp
pop
in
fiaddl
rcrl
loop
sub
sbbl
in
xor
sub
ret
push
bound
repnz
in
and
mov
rcll
mov
insl
es
sti
iret
xchg
fdivl
or
mov
ds
adc
call
call
and
popf
mov
nop
aad
cmp
sub
insb
addr16
cmpsb
insl
call
mov
xor
inc
je
dec
lds
and
push
mov
in
into
pop
outsb
ljmp
int3
inc
insl
push
xchg
int
clc
push
jg
nop
sbb
or
add
mov
adc
out
xor
lods
movb
jmp
or
arpl
and
xchg
mov
add
push
add
outsl
sub
push
out
sub
mov
and
pop
shlb
mov
mov
add
int3
out
or
mov
lret
xchg
das
fstpt
mov
mov
inc
mov
xchg
mov
outsb
inc
shlb
add
cltd
sbb
sbb
or
pop
inc
dec
insl
push
cmp
repz
inc
in
xlat
cmc
movsl
pop
rorb
js
dec
fldcw
xchg
mov
lods
adc
jecxz
rclb
push
cmpsl
hlt
shlb
test
in
dec
sub
call
add
dec
scas
mov
pop
cmpsb
push
push
pusha
mov
rclb
fcoml
mov
loop
mov
jecxz
rorb
mov
mov
lock
cmp
xor
pushf
fbstp
in
fs
push
sub
mov
jp
lret
xor
adc
cmp
not
sub
push
dec
jne
xor
cli
inc
aam
pop
fs
popf
cmpsb
mov
add
stc
inc
pop
inc
or
pop
xchg
les
adc
int3
je
popf
mov
mov
xchg
test
mov
xchg
jp
xchg
xor
or
shlb
test
lahf
pop
jns
sub
sbb
cld
and
push
jbe
in
add
sbb
ret
gs
lds
sbb
hlt
lock
int
cmpsl
inc
mov
mov
xor
mov
das
cmpb
jbe
or
pop
mov
mov
sbb
divl
lahf
push
faddl
mov
fs
adc
mov
testb
fimull
cltd
jns
scas
jb
stc
fists
xchg
mov
pop
jg
jg
pop
jle
insb
dec
sahf
repz
ss
in
lret
aad
pop
push
lahf
xor
scas
aad
jne
pop
roll
ret
pusha
repz
cld
fnstenv
add
dec
sub
loope
leave
inc
bound
int
imull
jl
pop
xchg
push
mov
lret
outsb
dec
dec
imul
mov
mov
popa
test
stos
adc
pop
fcmovnb
mov
stos
adc
in
add
hlt
repnz
test
popa
test
xchg
clc
shll
push
push
jno
xor
push
cmp
mov
imul
je
pop
and
push
icebp
fimuls
mov
mov
jnp
jecxz
push
mov
adc
outsb
leave
insb
push
in
icebp
push
test
popf
xchg
lods
cwtl
push
mov
addr16
cltd
dec
dec
into
stos
and
push
mov
or
divb
ret
scas
push
fisttpl
cmp
xor
pop
and
lcall
mov
pop
mov
jecxz
xor
mov
cmovp
iret
lea
imul
jb
loope
loop
sahf
sub
dec
xchg
mov
add
in
popf
fs
cmp
sub
cmpsl
bound
push
cld
es
in
aaa
mov
lds
inc
inc
inc
es
vorpd
mov
insb
and
lods
stos
into
adc
fdivl
jmp
int
push
ret
lahf
or
pop
add
out
push
and
xorb
inc
jg
mov
in
aam
repz
jl
lahf
sti
inc
mov
add
data16
and
adc
and
cmp
call
sahf
mov
xorl
ret
mov
dec
minps
jne
leave
and
mov
call
xor
fistpl
jp
jmp
mov
inc
sbb
sbb
xchg
jecxz
arpl
enter
add
cs
push
push
sbb
jge
jle
cld
sbbl
ljmp
rcrl
mov
fcompl
add
cmp
xor
jecxz
hlt
not
int3
jb
jns
fistl
mov
or
mov
push
push
test
xchg
or
cmc
pop
cmc
aad
fst
pushf
pop
les
and
movsb
and
inc
mov
in
or
insl
add
cmp
push
clc
push
mov
xchg
test
stos
pop
adc
jae
xchg
push
push
mov
adc
hlt
jmp
mov
mov
inc
negl
testl
jl
mov
and
add
das
or
mov
inc
js
addr16
or
sub
push
pop
mov
int
xor
and
inc
inc
outsb
jg
in
out
jecxz
fwait
mov
dec
xor
xchg
adc
in
aad
jnp
nop
mov
xchg
jg
or
pop
adc
mov
ret
lcall
xchg
les
dec
stos
jne
or
sbb
mov
mov
cmpl
shlb
xchg
ret
inc
add
dec
jnp
int3
xor
popa
fisubrl
test
jle
xor
cmc
or
shll
out
lock
lcall
subb
xchg
std
pop
and
adc
add
aaa
int
mov
cltd
ljmp
enter
mov
xor
je
mov
ja
sub
repnz
jae
lods
mov
stos
jmp
push
loope
movsb
fstpt
es
mov
dec
pop
and
sbb
xchg
mov
mov
xorl
leave
dec
lods
in
pop
roll
and
sbb
aas
fcomps
xlat
incl
push
mov
subb
xchg
add
and
pop
test
or
sub
inc
mov
pop
push
ficomps
pop
pop
mov
cmpsl
pop
jo
inc
mov
push
or
or
xchg
outsb
mov
iret
inc
jb
mov
test
gs
sub
pop
lods
xchg
or
pusha
adc
sbb
jecxz
pop
or
mov
mov
orl
mov
icebp
cmpl
inc
ja
div
dec
in
fwait
imulb
and
or
popf
inc
movsl
xor
pushf
rcr
mov
cwtl
jp
or
and
inc
addr16
ret
in
lea
push
cli
repz
xchg
addl
xor
rcrl
int3
and
pusha
sub
jmp
mov
push
cmp
lcall
lock
es
loopne
dec
cwtl
mov
cmp
cli
je
out
jmp
jg
jge
icebp
lcall
mov
cmpsl
jge
jb
inc
mov
mov
xchg
outsl
xor
rcl
cltd
shl
push
add
add
sbbb
pop
sahf
sub
test
pop
fsub
jb
mov
in
je
les
cmp
sarl
cmp
xor
cmpsl
add
mov
xchg
pop
rcrb
jae
adc
int
dec
sti
xor
add
or
in
or
jmp
xor
lret
ret
mov
popf
mov
fistpll
leave
pop
mov
mov
jno
pop
and
lock
add
adc
fisubrs
shll
pop
aam
icebp
adc
lahf
ss
daa
inc
xchg
push
pop
fisttpll
cmp
daa
sub
je
mov
gs
sub
insl
hlt
mov
negl
jp
je
add
jo
lods
scas
mov
outsb
stos
push
test
aas
repnz
cmp
xchg
enter
xchg
sbb
cmpsb
xor
and
and
mov
or
and
xchg
outsb
jo
lea
in
clc
adc
fcomps
in
mov
mov
mov
dec
int
pop
or
or
add
xor
loope
sbb
sub
xor
inc
ret
pop
xlat
adc
ljmp
aas
dec
pop
push
lock
es
std
xor
adcb
inc
dec
call
mov
push
shll
or
inc
stos
inc
stos
outsb
cmp
push
ret
lcall
dec
das
cwtl
sbb
test
cmp
in
loopne
mov
inc
ljmp
inc
mov
mov
inc
enter
movsl
enter
pop
mov
and
dec
xchg
sbb
rol
outsb
stos
insb
daa
mov
test
jne
rcrb
push
jb
dec
fcomp
daa
imul
orl
into
xchg
cld
popa
mov
mov
cs
pusha
sbb
pop
repz
add
mov
lods
int
or
mov
mov
pop
push
pop
dec
or
and
push
add
sbb
mov
imul
fisubrl
adc
jbe
enter
xchg
insl
xor
test
inc
mov
mov
test
jo
test
aaa
pop
stc
movsl
sbb
add
cli
jne
lods
shr
mov
fsubrs
orl
jge
mov
out
mov
ficompl
cmpl
jle
imul
mov
jo
mov
hlt
adc
sti
add
mov
gs
sbb
mov
cld
insl
adc
not
dec
adc
adc
push
aas
cmp
adc
push
scas
inc
lret
sub
repnz
daa
cmp
cmpsb
aad
sub
mov
leave
jb
out
inc
xchg
push
pop
xor
inc
cltd
iret
imul
or
aas
or
cld
test
or
enter
jne
ds
adc
mov
inc
cmp
push
js
jns
test
js
adc
cmp
mov
mov
adc
add
or
dec
lret
lods
or
jge
into
xor
mov
nop
push
ljmp
sbbb
jae
dec
outsb
mov
outsl
pop
repz
in
push
imul
jle
and
dec
nop
mov
pop
mov
lea
es
ljmp
ficoml
mov
test
mov
aad
adc
mov
jp
adc
pop
into
lea
test
lods
orb
mov
jg
mov
and
jg
stc
movl
add
inc
ret
fwait
dec
inc
mov
mov
sbb
inc
leave
inc
push
jecxz
xor
pop
mov
pop
int
adc
jnp
int
test
mov
shrb
das
in
aad
int
mov
or
inc
out
mov
pop
lcall
out
xor
repz
jns
es
pop
test
movsl
test
or
pop
inc
xchg
loopne
xchg
xchg
dec
jle
mov
dec
out
xchg
fstpl
call
jnp
pop
add
pop
aas
out
dec
or
mov
loop
xlat
test
or
daa
and
je
push
dec
xchg
nop
gs
xorb
imul
xchg
xor
xchg
sub
inc
icebp
cltd
inc
cmp
cmp
fwait
mov
fists
div
cmp
loopne
call
repz
out
mov
ss
in
repz
inc
lret
out
outsl
leave
mov
aaa
popa
popf
jbe
mov
push
xchg
loopne
and
lahf
and
mov
cmp
dec
cmpb
xchg
out
je,pn
mov
test
mov
add
movb
hlt
add
inc
sub
les
push
int
pop
in
fidivs
xchg
adc
js
pop
pop
add
mov
push
popa
fstl
pop
pusha
pop
mov
pop
adc
mov
in
push
xchg
pop
test
fildl
movb
mov
sbb
jl
imul
fbstp
jecxz
pushaw
scas
and
lods
shlb
sarb
pop
in
insb
jmp
jnp
outsl
mov
fwait
add
and
xor
xchg
jmp
sub
clc
mov
jg
outsb
loope
in
js
dec
push
and
cmp
nop
pop
scas
jmp
and
pop
sub
and
out
xlat
cmp
cmpsl
in
adc
aas
outsl
pop
dec
and
vpabsd
cmp
push
xor
rcll
mov
jb
add
fildll
pop
cmp
leave
xchg
mov
xchg
mov
out
cmpsb
sbb
push
fisttpl
ret
xchg
lods
or
mov
xor
ret
pop
aaa
xchg
mov
lcall
sub
mov
addb
xor
add
ljmp
in
aad
mov
mov
pop
cltd
lret
jno
sub
or
dec
add
je
stos
mov
jbe
sbb
pop
add
test
mov
lods
lcall
fs
out
dec
mov
xor
aad
stos
inc
icebp
pop
add
dec
ficompl
cwtl
mov
and
ret
jnp
dec
mov
pop
lret
add
sub
mov
test
inc
push
in
leave
push
out
push
cmp
movsb
popa
lds
les
repnz
inc
push
mov
pop
sahf
inc
mov
icebp
mov
mov
out
push
ret
call
les
mov
shl
inc
lahf
sub
shlb
into
sub
push
xchg
sbb
outsb
pop
scas
xor
push
push
ror
inc
sbb
filds
es
sbb
xchg
loopne
stc
orl
inc
lret
xchg
out
or
xor
mov
aam
xor
pop
in
ss
mov
mov
sbb
sti
pop
lods
lret
dec
push
jg
pop
xchg
push
imulb
or
fiaddl
insl
and
or
lock
and
sti
inc
mov
mov
mov
push
leave
lock
ret
push
inc
or
jle
popl
sub
mov
rorb
jmp
and
ss
jb
stos
lea
inc
jbe
push
into
jno
jmp
aaa
or
insb
lret
add
cmpb
rclb
subb
and
out
mov
imul
js
xor
in
js
push
test
xchg
cltd
pop
imul
mov
pop
loop
dec
je
sub
adc
or
pop
mov
les
loope
dec
popa
xchg
daa
decb
push
push
or
cmpsl
mov
inc
out
outsl
push
aas
adc
xor
adc
subb
pop
mov
jg
mov
addr16
xor
xlat
inc
iret
push
mov
jae
nop
loop
stos
pop
xor
cltd
cmp
jmp
mov
arpl
jmp
data16
pusha
push
ficoms
xchg
adc
fstpt
xor
shl
push
pop
fwait
ja,pn
mov
insb
mov
xchg
lea
nop
sti
pop
fisttps
push
ss
push
mov
add
mov
xchg
sarb
sbb
negl
nop
pop
fldl
fwait
pop
lret
jg
adc
xchg
xchg
jg
inc
jp
and
repnz
xchg
pop
roll
cmp
mov
lahf
dec
aaa
pop
mov
sub
lcall
addr16
stos
push
ret
adc
jge
pushf
inc
push
xor
sub
xor
dec
fsubrp
fstl
pop
lret
and
sbb
push
test
push
call
aad
xchg
jg
mov
repz
adc
ljmp
fstl
jne
cmpsb
mov
rorl
cld
dec
xchg
push
pop
ds
movd
in
ds
andb
adc
sbb
push
adc
cmp
cmp
pop
and
imul
ret
lret
arpl
stos
sbb
push
add
xchg
push
pusha
xor
imull
sub
mov
and
notl
jno
inc
add
sub
jp
fnstenv
cmp
addr16
adc
pushf
cmc
jnp
lret
push
pop
push
cltd
in
and
inc
push
mov
mov
cmp
incl
stos
out
pushf
pop
adc
xchg
rorb
jecxz
dec
ss
sub
and
and
loope
cld
ficoml
ja
les
insb
xor
xchg
inc
xchg
or
out
pop
loopne
iret
in
jns
xchg
cwtl
fsubrs
pop
jge
sti
mov
sbb
pop
cs
sub
mov
adc
push
leave
mov
dec
push
cmpsl
jb
roll
repz
mov
lock
daa
bound
scas
dec
je
sahf
or
outsl
in
jae
insb
and
add
pop
or
shrl
xor
jne
pushf
xorb
insb
idivb
xor
xor
mov
adc
jle
aam
inc
push
xchg
and
out
cmp
cmp
loope
pop
xor
push
lahf
xchg
test
loopne
insl
sbb
jb
aas
hlt
push
mov
aaa
daa
repz
fnstcw
mov
pop
rcr
cmp
xor
das
xor
fnsave
test
xchg
mulb
arpl
jecxz
mov
sbb
or
mov
aas
xchg
xchg
and
adc
cmpsb
idiv
adc
sub
and
xchg
insb
dec
pop
sub
lock
push
clc
xor
subl
jno
push
adcb
xchg
jg
mov
in
mov
mov
repz
mov
inc
mov
jge
cmpsb
lret
fwait
fwait
cwtl
dec
popa
push
mov
int
rorb
jmp
sbb
scas
cltd
pop
fsubr
scas
add
inc
aam
outsl
rclb
mov
cmc
filds
nop
sbb
cmpsl
cmp
ficomps
fldcw
push
test
jle
cli
daa
in
jne
push
xor
dec
lret
mov
lret
push
jmp
inc
dec
insl
iret
in
ds
mov
in
lea
lods
mov
scas
clc
and
cli
pop
add
dec
adc
add
call
jnp
sbb
test
dec
ljmp
push
int3
iret
add
shrd
xlat
call
inc
or
in
jne
mov
push
sbb
mov
cmp
stc
sub
test
push
lcall
jge
lock
iret
push
add
sbb
push
inc
xchg
cmpsl
xor
push
call
xchg
mov
scas
movsl
dec
mov
fisttpl
ds
lahf
ss
mov
cmp
or
mov
es
js
js
mov
inc
pop
cmpl
cwtl
ss
fcompl
call
mov
mov
stos
jne
addr16
ret
xchg
or
push
mov
sub
notl
fs
stos
push
fcomip
sbb
push
test
add
mov
xor
cmp
xchg
adc
dec
jg
popa
sahf
pop
adc
repz
or
sar
xor
xchg
or
repz
int
cli
inc
or
lcall
ret
cmpsl
mov
lret
sahf
ret
xor
jno
jno
pop
inc
or
scas
arpl
fdiv
xchg
mov
iret
ja
sbb
lret
insl
adc
imul
xorl
cli
mov
sbb
push
sbbl
fidivrs
add
cltd
jae
jno
cs
sbb
nop
sbb
daa
pushf
cmp
sub
inc
jl
mov
sub
lods
jnp
sub
inc
or
ffree
cmp
daa
mov
pop
xchg
xchg
das
mov
jmp
mov
in
js
nop
lock
cmp
ret
arpl
pop
jne
pop
jp
cwtl
in
push
xchg
inc
mov
jnp
ljmp
sarl
fstpt
push
push
js
lock
jae
rolb
jle
out
dec
mov
xchg
sbb
mov
sub
fildl
add
mov
xchg
ss
scas
lods
notb
stos
mov
sbb
pop
jle
stc
movsb
jg
mov
lock
out
pop
test
imul
mov
push
test
push
std
ljmp
push
cmpsl
mov
pcmpgtb
filds
leave
or
arpl
test
or
or
pop
or
or
clc
xor
rcll
and
push
mov
sbb
xor
pusha
out
outsb
popf
dec
cwtl
sar
jbe
sub
mov
pop
lret
test
shlb
aad
cmp
pop
cld
mov
data16
sbb
outsl
or
nop
dec
pusha
loop
subb
popf
cmp
mov
pop
and
call
jge
mov
xor
je
sbb
lea
test
push
pushf
pop
push
std
push
sti
adc
mov
pop
mov
int
shrb
hlt
gs
or
sbb
jle
bound
push
mov
adc
repnz
int3
adc
scas
or
rorl
lret
leave
lds
xchg
dec
movsl
inc
pop
test
cmpsl
pop
enter
push
sub
sahf
cmp
push
adc
jbe
dec
add
lea
out
lahf
jmp
daa
jle
iret
test
fs
js
cltd
sbb
sbb
enter
sti
push
aad
mov
push
out
cmp
jp
es
add
cs
rol
clc
xchg
mov
fstpt
push
mov
mov
sub
scas
in
dec
daa
sub
pusha
jae
cmp
adc
sub
xchg
test
xlat
data16
and
jp
sub
and
cmp
jmp
or
inc
repnz
pop
xchg
cmpsb
ret
idiv
mov
testl
jae
jle
mov
in
shl
stos
push
gs
clc
enter
sti
cmp
rol
mov
pop
inc
int3
imul
adc
nop
sarl
push
push
test
pop
scas
std
dec
loop
pushl
sbb
shlb
incb
aaa
sbb
jnp
into
loop
fcmovb
and
jecxz
stos
mov
or
push
setne
pop
push
ficoml
lcall
bound
xchg
add
inc
xor
lret
bound
aam
fstps
inc
sbb
in
adc
insl
or
daa
and
repnz
rorb
lret
pop
dec
cmp
ret
int
ljmp
mov
adc
and
pop
mov
add
push
cmpb
xrelease
xor
add
leave
pop
dec
fld
in
pushf
lods
je
loop
dec
das
or
pop
add
cmp
or
iret
test
sub
and
or
xor
movsb
inc
jne
jnp
add
call
sarb
movb
sbb
adc
and
cmp
movsb
mov
std
xchg
adc
and
rcl
scas
cmc
push
jle
addr16
jne
jle
pop
mov
popa
pop
pop
sbbl
enter
dec
and
push
outsl
xchg
mov
stos
xor
or
jno
jmp
xlat
test
mov
adcb
or
add
aad
imul
daa
push
sub
sbb
imul
dec
cmp
sub
rclb
movsl
out
in
adc
xchg
sub
popf
jo
scas
push
sub
dec
popa
ds
hlt
faddl
mov
cld
xchg
xchg
pop
jnp
imul
pmulhuw
loope
je
sti
out
outsl
cli
test
mov
enter
sbb
aaa
mov
jae
sbb
sbb
stos
or
xlat
jae
out
jle
xlat
and
xor
push
add
push
ficoms
xor
mov
mov
adc
inc
imulb
sbb
sarb
mov
pop
ja
pop
xor
ret
mov
inc
rolb
mov
sub
ds
sbb
cltd
push
push
mov
mov
orb
into
repz
lock
popf
push
outsb
out
arpl
rcll
pop
mov
scas
adc
mov
xchg
sub
fisttpl
insb
test
jecxz
outsl
and
cmp
push
jmp
sub
sub
mov
jmp
fstl
sub
xchg
mov
out
or
sbb
jae
sub
cmpsl
lea
enter
inc
fsubrl
adc
cmp
inc
fidivl
mov
lea
mov
xchg
sub
sbb
fs
scas
fiaddl
daa
addr16
popf
cmp
loopne
cltd
icebp
cmpsl
jg
mov
pop
jecxz
jmp
xor
imul
or
outsl
cmp
outsb
ja
sub
push
xchg
xor
or
cmp
iret
in
push
test
dec
leave
jbe
addl
repnz
jbe
xor
ljmp
jle
sub
add
cmc
and
stos
imul
aam
fistl
dec
hlt
inc
cmc
add
and
mov
mov
adc
pop
lea
sbb
ret
dec
adc
mov
cli
in
pop
sub
sahf
sbb
jno
pinsrw
sub
mov
jl
push
xor
xor
lea
ds
dec
shl
xor
or
pop
pop
fisttpl
pop
dec
repnz
and
test
xchg
mov
fwait
mov
std
loopne
jo
and
push
sub
movsl
out
pop
mov
and
adc
xchg
lods
bound
inc
mov
push
jmp
mov
mov
dec
and
je
sbb
inc
xchg
popa
dec
fisubl
inc
jle
sub
dec
sbb
stos
xlat
pop
mov
fisttpll
xor
mov
pop
jbe
jg
out
sbb
leave
negb
out
aas
test
ffree
call
aas
aam
loop
xchg
add
aaa
lret
iret
mov
pop
outsb
and
pop
jne
pop
cltd
cmc
out
loopne
cmp
enter
sub
push
imul
loope
pop
dec
lcall
pop
ljmp
test
cmp
lcall
sub
inc
out
fdivrl
cmp
shll
xchg
jae
jmp
lret
mov
inc
pop
pop
idivb
and
add
mov
insl
mov
std
ret
add
pop
adc
sub
repz
lret
int
flds
dec
mov
inc
xchg
cltd
mov
insb
sub
js
jae
inc
rorl
ret
mov
push
pop
scas
sti
inc
rcrb
outsb
pop
aad
pop
push
adc
out
inc
push
push
xchg
sub
test
pop
cwtl
hlt
push
cmp
aaa
outsl
orl
pop
stos
cmp
lahf
pusha
into
fbstp
add
addr16
cltd
adc
dec
sbb
movsb
mov
out
lods
xchg
push
cmpsl
out
rorl
mov
ror
dec
xchg
mov
push
idivb
cmpsl
gs
sbb
in
jne
scas
xor
test
dec
shlb
sbb
push
pusha
bound
sbb
nop
sbb
test
stos
xchg
mov
in
mov
std
stos
push
bound
mov
aam
push
dec
pop
addb
fidivl
sub
scas
bound
sub
fstps
pop
mov
jno
lock
dec
xchg
cmp
dec
xor
stos
mov
pop
mov
mov
outsl
sub
xchg
lea
jge
adc
int
mov
inc
xchg
es
push
das
mov
adc
pop
shrl
sub
add
pop
nop
jmp
rorl
or
lods
mov
jae
shlb
in
filds
cmp
fnstenv
addl
in
mov
ja
cwtl
dec
ret
dec
loop
inc
xor
dec
aam
push
aas
push
js
bound
cwtl
mov
and
jo
push
std
adc
jae
fidivl
arpl
adc
jmp
sub
ds
enter
stc
or
ret
fldt
push
inc
xchg
xor
mov
jg
mov
push
sbb
inc
mov
fs
fisubl
or
pop
jb
ret
xchg
xchg
cmp
or
push
mov
sbb
xchg
mov
arpl
aad
pop
hlt
jns
jnp
jnp
or
or
xchg
xchg
add
xor
dec
mov
xchg
mov
push
bound
add
ret
scas
cmpb
cltd
ljmp
push
jmp
push
xor
mov
in
icebp
pusha
jle
nop
outsl
or
mov
adc
cltd
popf
add
jo
jl
jge
push
insl
out
lds
pop
mov
push
jb
jnp
ret
push
mov
push
and
mov
idivl
sarb
and
pop
pop
fs
into
dec
out
loop
lods
pop
jo
fbld
addr16
popa
jb
dec
mov
dec
insb
fadd
ja
mov
ds
shll
outsb
pusha
sbb
fisubl
jp
or
les
inc
xorl
push
fidivl
xchg
mov
into
or
scas
popa
cmpsl
jge
dec
mov
lret
sub
mov
std
jp
dec
sahf
mov
lret
jmp
sbb
xchg
sub
loopne
mov
xchg
or
cmp
stos
pop
dec
mov
test
mov
and
pop
mov
inc
lret
data16
mov
scas
sub
inc
push
xlat
stos
out
jecxz
or
in
mov
inc
loope
inc
cmp
fiadds
movsl
add
pusha
xor
push
outsl
pop
xor
cmp
jns
leave
push
and
inc
es
and
sub
jnp
xor
xchg
test
jle
jmp
xor
hlt
arpl
xchg
mov
push
ds
push
testl
jbe
adc
loop
inc
jbe
inc
dec
fsubrs
pop
lds
adc
pop
iret
dec
sbb
pusha
xchg
ds
mov
imul
fwait
jge
arpl
or
jbe
xchg
xchg
test
mov
sbb
inc
inc
scas
and
cwtl
dec
pop
lds
jp
xchg
or
mov
aad
mov
mov
pop
xchg
add
cmp
test
cmp
mov
pop
adc
test
cmp
test
in
shll
jg
dec
movsl
xchg
cwtl
pop
int
cli
dec
cmp
push
jp
xor
push
mov
js
inc
enter
sub
sub
push
js
pusha
mov
inc
xlat
mov
add
mov
mov
cmp
lret
xchg
mov
ds
sub
inc
gs
imul
outsl
aam
int3
jge
imul
cmp
dec
jg
mov
fcomp
lret
enter
mov
neg
test
aaa
lock
inc
xor
adc
pushw
or
aas
gs
sub
dec
mov
negb
int3
cwtl
mov
int3
sub
shrl
mov
inc
mov
mov
xchg
cmpsl
mov
ret
arpl
mov
sbb
out
pop
cmp
xchg
out
pusha
dec
pusha
inc
xchg
pushf
inc
jg
cmp
stc
lds
pop
pop
mov
das
jl
mov
in
cmpsl
fcmovnbe
arpl
add
mov
and
out
sub
pop
dec
fistpl
inc
dec
jbe
inc
push
adc
mov
cmp
testl
jecxz
xor
and
in
das
ret
outsb
mov
add
rolb
cmp
xchg
lock
stos
add
orb
mov
imul
inc
sbb
out
jle
xor
or
jle
lret
adcl
test
and
dec
and
in
push
prefetch
or
test
out
pop
xchg
inc
mov
call
shrl
xchg
pop
cmpb
pop
bound
es
je
cmp
ficoml
push
adc
inc
data16
mov
jle
xor
ss
jae
out
dec
adc
clc
insb
mov
bound
lahf
jnp
pop
or
addr16
outsb
inc
sbbl
mov
in
xor
js
out
ss
gs
pop
xchg
imul
mov
popa
gs
cmp
jle
outsb
jb
push
imul
jecxz
enter
or
pusha
scas
or
lock
mov
lds
inc
jne
ret
pop
sbb
test
mov
mov
js
loope
and
dec
pop
sbb
push
rorb
add
faddl
mov
lds
xor
jl
dec
and
es
push
xchg
movsb
cmpsb
dec
je
dec
iret
aaa
stc
or
cmp
mov
xor
push
pusha
xchg
adc
fs
inc
pop
gs
aam
sahf
pop
mov
addl
and
sub
mov
test
or
clc
test
sbb
lret
iret
out
out
mov
adc
repnz
ror
inc
aas
mov
push
inc
imulb
loopne
mov
mov
adc
push
ffreep
xor
jno
stos
sbb
jp
fcompl
scas
push
clc
xor
in
scas
fwait
int3
mov
mov
test
or
cmp
or
push
loop
xchg
fucomi
lret
jmp
loopne
jp
dec
cmpb
test
arpl
and
in
add
in
ja
mov
inc
and
jg
inc
add
loope
dec
mov
push
mov
aas
imul
jmp
insb
cld
push
in
xorl
loop
stos
adc
add
cmp
push
std
fdivrs
repz
int
push
into
lods
and
sub
add
sar
icebp
xchg
loope
inc
shll
movsb
adc
cmp
push
lret
or
mov
mov
fstpl
insl
mov
ja
sbb
gs
cmp
ret
fnstenv
xchg
scas
lods
jo
push
jns
add
pop
jecxz
mov
std
xor
sub
in
dec
jecxz
xchg
es
sub
xlat
fistps
sub
test
cld
sub
scas
ror
ret
jge
push
nop
scas
fwait
lret
add
xchg
test
cmp
into
shll
pusha
mov
insb
or
inc
jp
jg
adc
xor
mov
pushf
fisttpll
insl
push
pop
mov
cmp
rorl
sub
pushf
mov
mov
or
pop
push
mov
test
and
pop
adc
ds
and
mov
or
or
sbb
jle
inc
inc
add
push
push
lret
or
inc
movsl
ja
shrl
popa
lods
xchg
icebp
add
xchg
lock
sub
fdivrl
mov
xor
fcomip
push
stos
mov
fisubl
adc
and
and
int3
and
mov
and
std
shll
sub
sbb
or
push
xchg
ljmp
sub
pop
shlb
xchg
cmp
fwait
inc
pop
add
lock
mov
and
jno
or
mov
dec
icebp
cmp
adc
mov
fsubr
dec
mov
std
sbb
lcall
cld
fsub
push
sbb
outsb
xchg
rcrl
adc
sub
mov
mov
and
jp
adc
inc
mov
xlat
xlat
aam
inc
shl
inc
mov
mov
push
jb
push
pop
push
xchg
adc
icebp
dec
dec
ret
mov
repz
imul
cmpb
pop
dec
mov
xchg
adc
jge
sub
add
add
lods
insb
pop
pop
pop
sub
lods
mov
loop
in
insb
cmp
jno
aad
jl
aas
pop
les
leave
andl
mov
in
pushf
push
outsb
inc
fs
mov
sarl
lahf
xchg
cli
lods
pushf
movsl
in
pop
dec
movsb
rcll
and
in
add
mov
orl
jecxz
pop
and
inc
xor
mov
sbb
les
movsb
in
in
cmpsl
or
or
daa
sbb
or
xor
outsl
and
scas
dec
lcall
aad
jae
pop
lods
mov
mov
sbb
sub
popl
fs
int3
jnp
lds
cwtl
hlt
mov
fisttpl
lret
inc
mov
add
push
test
imul
dec
add
iret
pusha
popa
imul
fcomps
push
xchg
dec
fsubl
jmp
test
or
repnz
xchg
mov
andb
and
popa
xchg
add
shl
negb
mov
mov
fdivl
push
inc
cmp
cs
adc
cmp
testl
jno
pushf
enter
les
inc
xor
jl
inc
mov
mov
mov
mov
mov
jl
mov
pop
and
inc
jnp
fisttps
addr16
xchg
sub
aad
repnz
sub
cmpsb
sbb
mov
outsb
xchg
roll
int3
mov
xlat
sbb
mov
push
pop
lahf
cmpsl
cmpsl
inc
icebp
sbb
add
cmp
imul
lock
push
sub
mov
lcall
in
andb
aam
cwtl
inc
pop
addb
xor
ja
jo
js
jl
pop
outsb
inc
fucomp
pop
in
inc
fmul
xor
movsb
xlat
sub
idivl
cs
scas
xchg
add
inc
lcall
or
outsb
jle
dec
ret
into
or
sbb
lret
push
inc
pop
sbb
cli
cli
ljmp
push
push
or
xor
mull
stos
push
loope
add
inc
dec
xchg
mov
mov
sbbl
outsb
xorb
push
jns
cltd
cld
xchg
mov
xchg
arpl
lea
jge
mov
sbb
clc
cmp
hlt
in
outsl
fistps
int3
jne
int
push
inc
dec
aaa
sarl
xor
sub
std
pop
inc
daa
lret
int
sbb
mov
push
jg
andl
inc
or
jle
mov
cmp
adc
lahf
add
xor
jp
lret
pop
cmp
jecxz
subb
and
dec
shrl
fucomp
sbb
out
in
outsb
jmp
cwtl
push
fdivp
enter
mov
sahf
cmc
shr
je
mov
mov
pop
pop
inc
adc
add
cmpsl
mov
dec
dec
mov
imul
adc
fstpt
cltd
fstl
mov
adc
pop
rorb
jge
aam
je
imul
and
mov
add
pop
mov
loope
pop
sub
and
enter
jl
dec
je
fidivrs
sub
dec
enter
add
das
pusha
push
pop
xchg
hlt
push
push
push
or
out
int3
in
xchg
mov
cmc
in
mov
nop
dec
cli
cld
pop
pop
cmp
cli
roll
mov
sub
xor
lods
test
push
add
mov
popf
int3
push
pop
xor
imull
gs
popf
data16
aam
mov
mov
push
dec
fdivp
mov
arpl
sbb
popf
icebp
jb
loop
scas
pop
imul
sahf
int3
push
leave
and
loop
jge
rcrl
adc
jb
dec
syscall
jo
cld
adc
lcall
push
cwtl
sub
pop
inc
dec
inc
sub
leave
aam
repnz
jns
sub
push
sbb
fildl
sbb
incb
repz
in
or
roll
push
and
dec
sahf
shll
insl
in
aam
les
cwtl
jecxz
push
add
dec
adc
lock
popa
loop
push
bound
pusha
popf
insl
es
int
lcall
adc
fld
jge
jle
jns
cmc
mov
fucomip
mov
and
sbb
test
fstps
mov
scas
inc
cmp
xor
mov
pop
dec
cmp
int3
push
inc
pop
stos
xchg
cmp
lods
hlt
stc
pop
inc
arpl
mov
inc
add
jns
lds
sub
jnp
int3
sbb
push
cmp
pop
push
cli
inc
js
iret
sbb
data16
cmpsl
int3
dec
ret
or
sub
push
mov
cmpsb
mov
dec
dec
or
addr16
add
addr16
js
pop
les
mov
cwtl
and
push
add
es
repz
jns
sbb
rol
xchg
pop
jae
adc
inc
inc
mov
addr16
mov
out
and
ja
add
jne
adc
mulb
fdivrs
xor
je
push
aaa
insl
int3
rcll
jmp
adc
movl
jns
xor
cmp
mov
sbb
lret
xor
jb
pop
jl
shrb
sub
movsb
nop
inc
mov
popf
shrl
ljmp
loope
pop
mov
cmp
xchg
adc
xor
repnz
mov
mov
jp
push
cmp
les
xchg
adc
aaa
imul
jle
or
jae
fisubl
imul
jle
in
clc
leave
arpl
inc
fs
jbe
and
sub
shrl
shll
daa
pushaw
out
and
fdivrl
test
xchg
and
inc
cmpsl
out
or
stos
ljmp
xchg
xchg
xchg
xchg
pop
mov
mov
push
aad
cmp
in
test
cmp
inc
mov
push
sbb
dec
dec
mov
sub
jb
xor
or
aam
out
testl
addr16
imul
cmp
jbe
data16
in
stc
rcrl
out
jae
jg
lods
or
icebp
xchg
push
fbstp
test
lods
and
xchg
imulb
cmc
or
test
inc
jae
pusha
jmp
test
call
imul
dec
ret
cmp
jg
inc
cmpsb
push
add
mulb
fldcw
mov
xor
jg
cmp
fdivp
pop
dec
sbb
add
fyl2x
packuswb
push
fsubp
ret
adc
ja
cld
inc
das
dec
sbb
mov
ds
adc
mov
enter
xchg
int
test
rorl
imull
push
hlt
lret
dec
movsl
pop
pop
hlt
test
sbb
je
int
cmpsl
or
outsb
and
idivl
in
scas
jge
pop
cmp
scas
adc
ss
push
in
in
cmp
and
mov
inc
dec
mov
leave
pop
ret
adc
mull
mov
xlat
push
mov
dec
fsubs
popf
shrb
stos
push
xor
or
xor
lcall
int3
and
ret
push
push
mov
fists
push
ret
mov
sbb
xchg
mov
add
scas
decl
es
cmpsb
xor
test
dec
jmp
enter
sbb
inc
cmp
and
inc
sti
loopne
adc
cmpsb
push
or
mov
movsl
rcl
push
les
cmp
lods
in
xlat
data16
popf
xchg
and
xchg
mov
lds
loop
jae
adc
cmc
jmp
repz
cmp
mov
popf
lods
ljmp
dec
std
dec
ja
stc
outsl
jnp
test
scas
mov
mov
adc
inc
sub
jns
cs
jecxz
psubb
mov
push
xor
cmpsb
xor
ret
inc
sub
xchg
cltd
mov
add
pop
sahf
push
mov
jg
fucom
mov
dec
add
jle
mov
adc
and
mov
jb
popf
mov
add
outsb
out
repz
fdivrp
pop
shrl
inc
xor
call
sub
je
cs
test
jp
lods
std
stos
mov
aaa
adc
rcll
orl
inc
pushf
inc
repnz
pop
lods
mov
jg
int
push
jmp
mov
lret
jl
pop
pop
or
mov
xorl
xchg
loope
add
pop
test
out
fidivl
in
fcoml
ss
in
xor
sbb
in
jl
gs
mov
sbb
xor
jge
dec
xor
rolb
pop
jl
test
dec
orb
jmp
cmp
adc
mov
mov
incl
or
pop
inc
ds
mov
data16
loop
loope
dec
ret
sbb
mov
cmp
cs
jmp
aas
adc
stos
push
pop
inc
stos
lcall
pop
dec
sub
mov
cltd
ljmp
test
das
cmpl
cmp
in
or
fidivs
xchg
fincstp
fsubrs
adc
jecxz
rcrl
insl
mov
fisubrs
in
dec
push
loope
divb
xor
cmc
jecxz
sub
xor
mov
lcall
or
dec
mov
xchg
cltd
loope
in
rcrb
in
inc
mov
lcall
stos
aaa
xchg
fmull
adc
sahf
lret
js
mov
and
xchg
sbb
inc
loope
lahf
adcl
sub
cmp
push
lret
fisttpll
fsts
ret
cmpsb
xor
enter
loopne
jbe
rorb
outsl
xor
lods
cmpsb
pop
out
pusha
inc
mov
out
sbb
adc
dec
jle
cld
or
and
call
mov
shl
add
add
or
xor
xchg
xor
or
mov
sub
jb
mov
sub
arpl
popa
sahf
fwait
mov
lahf
add
inc
test
sub
ret
das
mov
mov
adc
jg
mov
or
into
jge
cli
aaa
and
aaa
lods
mov
bnd
or
lahf
mov
add
ja
outsl
in
xchg
enter
jae
dec
sub
jg
loope
out
and
cmpsl
inc
pop
push
cmp
cs
xchg
fdivr
xor
mov
mov
lret
mov
inc
or
and
mov
movsl
adc
inc
inc
push
inc
cmp
xchg
leave
cmp
js
out
ljmp
mov
jbe
popa
test
adc
cmp
mov
mov
jo
add
shll
mov
repnz
jbe
out
orl
add
ljmp
jnp,pt
mov
or
stc
push
push
mov
lret
mov
ljmp
xlat
push
movsl
mov
stos
clc
ficoml
daa
lahf
add
loop
sbb
sbb
sbb
inc
jnp
test
les
adc
out
and
outsl
js
xchg
cmpsl
xchg
dec
jmp
sub
xchg
enter
dec
push
lret
cli
jmp
sbb
sub
cmpb
jle
dec
push
mov
mov
inc
sbb
xchg
call
cmpsl
add
adc
sbb
xor
add
ficoms
mov
out
mov
fistpl
mov
sti
loopne
or
addl
jle
cltd
adc
mov
xchg
push
xor
xchg
scas
shlb
sti
and
inc
gs
mov
dec
dec
xorl
je
ss
mov
cmpsb
dec
mull
in
testl
or
xchg
std
dec
sti
inc
and
aas
cmpsb
cmp
xchg
fistpl
es
lea
pop
icebp
xchg
faddl
sahf
lahf
insb
in
cs
inc
fstl
fcompl
push
push
adc
fstpl
aad
add
inc
cld
pushf
xchg
lcall
fwait
daa
test
cmc
dec
xorb
push
xchg
ficoms
dec
mov
sub
cmc
jns
pop
arpl
mov
push
dec
ret
clc
pop
mov
lods
xrelease
jmp
rclb
ds
les
inc
movsl
fcoms
mov
fsub
scas
daa
mov
subl
pushf
mov
push
adc
daa
aaa
addr16
lea
mov
adc
into
mov
dec
xor
xor
cmp
add
jne
mov
insl
shlb
sub
repz
inc
jg
mov
adc
lcall
lds
loope
push
mov
sub
jle
sub
inc
jg
add
xorb
mov
xor
push
pop
ss
mov
xor
inc
xlat
xchg
aaa
lahf
xchg
test
test
pop
rcrl
adcl
sbb
jmp
cmpsl
sbb
ret
add
cwtl
mov
aas
cmp
cmpsl
icebp
test
call
pop
add
in
ja
jno
idivb
mov
dec
incb
clc
mov
jmp
sbb
sbb
mov
inc
cmp
and
mov
outsb
repz
pop
adc
and
or
in
mov
mov
xlat
xor
push
cmp
push
mov
sub
aas
pop
and
ja
aaa
das
and
mov
mov
fidivrl
jl
mov
leave
mov
jno
rcrb
mov
jge
pop
adc
fcmovnb
outsb
fmuls
lods
cmpsl
leave
adc
int3
jo
pop
jp
push
ss
sub
pushf
cmp
xor
pushf
mov
outsb
enter
and
ret
push
aad
imul
es
pop
test
cmp
add
subl
lds
push
sbb
idivl
popf
add
jbe
shr
imul
bound
mov
arpl
gs
loop
mov
xchg
xchg
cmp
mov
dec
fmuls
daa
lods
sbb
sbb
xorl
fdivl
sub
movsl
jg
pop
adc
inc
cli
movsl
es
mov
inc
cmp
sbb
ret
pop
xchg
inc
add
xchg
sbb
dec
pusha
sbb
inc
push
sub
mov
fadd
mov
push
fbstp
imul
sbb
icebp
add
ja
ret
sbb
mov
and
jl
outsl
jns
or
sbb
sub
out
add
int
fnstcw
jnp
mov
lret
dec
xor
out
push
mov
rcll
fcomps
sub
insb
cld
xor
mov
inc
adc
add
pop
sti
pusha
sub
jns
insb
shll
loopne
loopne
jmp
cmp
push
ds
and
or
mov
enter
lods
or
rolb
and
jne
mov
lds
xchg
fwait
adc
push
into
pop
stc
cmp
jp
xchg
loopne
aam
jnp
rcrb
jne
sbb
in
ja
push
adc
ret
cmp
mov
dec
test
sbb
dec
mov
js
mov
sub
jo
adc
lcall
push
mov
into
lcall
pop
add
cmp
adc
pop
aam
xlat
mov
movsb
mov
fs
lret
xlat
loope
dec
xchg
nop
leave
out
dec
or
ja
xor
addb
arpl
out
out
mov
lods
cs
push
pop
iret
xor
pop
les
orb
je
popa
push
xlat
mov
jne
lea
lret
add
push
xchg
push
data16
or
jmp
inc
push
mov
cld
cmpsl
mov
in
ljmp
sub
sub
in
rolb
daa
xchg
pop
push
insl
dec
out
into
add
iret
fcoms
orl
pop
fcoms
push
and
inc
jecxz
std
pop
pop
into
out
adc
inc
xchg
call
movsl
xchg
or
jl
xchg
daa
mov
pop
push
and
and
adc
dec
jbe
xchg
mov
cmp
or
lahf
push
mov
cmp
jo
leave
jmp
test
imul
fsubrl
xor
lods
or
mov
leave
nop
jnp
popf
xor
mov
xchg
cmp
xor
mov
or
pop
test
jmp
mov
sbb
in
vpmadcsswd
shll
add
xor
pop
push
add
inc
mov
insb
pop
test
enter
mov
test
or
push
dec
dec
xor
pop
cs
push
mov
xor
mov
pushf
mov
gs
cmpsl
fistl
int3
fdivr
mov
mov
jecxz
and
aaa
inc
lea
fisubs
ljmp
pop
in
mov
aad
pop
mov
or
les
sub
cmp
push
int
repz
or
or
inc
or
or
outsl
btr
inc
inc
push
sbb
dec
test
cli
push
add
icebp
mov
xor
ror
data16
ret
cmp
fidivrs
mov
and
pop
mov
push
add
int3
push
inc
fidivl
add
jb
cmp
push
outsl
mov
pop
adc
test
inc
in
jecxz
inc
in
ds
xor
or
adc
fnstsw
mov
imul
xor
jnp
and
cld
cmpsb
cld
sbb
test
fwait
dec
loopne
out
inc
add
cmc
call
filds
repnz
repz
jle
sbb
mov
mov
movsb
call
adc
aam
mov
mov
mov
pop
sahf
add
jbe
push
lahf
sbb
inc
subl
xchg
xchg
mov
stos
divb
inc
adc
in
mov
movsl
mov
mov
mov
cmpsb
sbb
mov
hlt
fsubr
jmp
and
adc
inc
jns
and
ja
lock
out
pop
aaa
mov
cli
cmp
adc
xor
movsb
inc
fs
das
mull
loopne
adc
aaa
rcrb
fsubrs
outsl
aaa
fcoms
add
xor
aas
fmulp
sbb
and
xor
and
mov
mov
ret
pop
stc
mov
stos
pop
or
fsubp
orb
inc
leave
in
dec
aad
dec
ja
cmp
mov
testb
dec
clc
mov
popf
inc
jo
push
mov
lods
wbinvd
push
fmul
stos
aam
mov
out
or
mov
ja
popa
cli
fistps
fcomp
xor
enter
leave
adcl
andl
das
out
push
icebp
and
xchg
cmp
les
dec
pop
or
sub
inc
pop
out
xchg
sub
filds
mov
aam
sbb
movsb
push
mov
lret
mov
sbb
lcall
jl
lods
lret
sbb
scas
aad
rorb
mov
xchg
dec
push
rorl
dec
out
scas
or
inc
add
mov
mov
and
in
icebp
pop
mov
iret
mov
lods
mov
xchg
push
sub
cs
stos
inc
sbb
adcl
push
movsl
xchg
in
and
sbbb
sbb
cmp
leave
dec
xor
aas
imul
pop
dec
and
imul
fcom
sbb
push
ljmp
mov
mov
jg
fs
repz
stos
lret
sub
faddl
leave
jle
adc
lea
push
mov
sbb
sbb
and
nop
jecxz
test
lret
mov
sbb
mov
mov
push
jo
nop
jne
xchg
jo
inc
xchg
js
clc
xor
pop
cmc
lods
cmp
xchg
cmpsw
fs
arpl
jb
rclb
lret
mov
lret
in
inc
sahf
ret
ds
jne
shrl
xchg
aam
rcll
sbb
pop
mov
jae
stos
sbb
mov
or
in
jnp
sub
mov
sar
inc
push
jge
cli
sub
xor
popa
repz
aas
jg
imul
fsub
into
test
cmp
mov
and
fcompl
lcall
add
outsb
xchg
jle
sbb
inc
fwait
cmp
jns
fldl
aas
mov
rclb
xchg
or
sti
jne
lahf
or
insb
push
leave
mov
aaa
pop
cs
xor
pop
test
xchg
inc
mov
jge
rol
imul
insb
mov
jl
ljmp
mov
icebp
pop
in
aam
pop
pop
insl
mov
mov
jmp
mov
mov
sbbb
or
test
arpl
cmpsb
xor
sub
mov
aam
out
mov
lret
ror
adcl
mov
xor
pop
sub
xchg
mov
int3
ljmp
dec
push
inc
out
add
dec
fdivl
arpl
outsb
push
scas
lcall
cmp
leave
cmc
stos
js
xorb
scas
pop
mov
xor
mov
mov
ret
or
xchg
cmc
mov
jp
clc
in
dec
lds
ret
adc
mov
xchg
adc
push
or
push
pushw
sub
lds
lea
add
add
xchg
lcall
scas
inc
push
xchg
sahf
cltd
push
add
rorb
jne
xchg
cmp
outsb
mov
out
ret
pop
pop
push
jb
push
clc
sti
scas
enter
pusha
enter
test
aaa
and
test
scas
das
mov
jae
out
lods
jo
dec
fldl
cs
fldl
out
daa
sub
push
loop
pushf
inc
mov
cwtl
stos
pop
push
movsl
pop
call
push
xchg
or
shrl
pop
mov
roll
je,pn
aad
addl
xlat
in
pop
cmp
fsubl
jmp
imul
arpl
fsubs
adc
andl
sub
ret
mov
popf
sub
fsubl
xchg
jmp
mov
cs
mov
lock
sbb
and
fbstp
push
lret
add
push
mov
insl
inc
inc
out
js
lods
ret
jne
jnp
pop
dec
mov
xchg
ret
dec
call
lock
rcll
xor
xchg
mov
jbe
xchg
popf
les
data16
sbb
and
mov
mov
jae
or
enter
jns
rclb
cmp
sub
out
lret
mov
xlat
jmp
push
shrl
outsb
jge
xchg
mov
dec
int
fsubr
adc
or
xor
push
daa
mov
push
out
push
jp
mov
jns
bound
pop
inc
jnp
dec
repz
ss
sbbb
or
xor
push
pop
loopne
mov
adc
mov
mov
dec
shll
sub
cmp
insb
jmp
out
jb
dec
mov
and
mov
mov
mov
clc
jle
out
mov
dec
lds
cmp
aad
inc
cld
in
add
insb
mov
ds
push
sbb
ja
and
xor
fbstp
adc
lods
mov
pop
mov
test
mov
sarb
loop
pop
shll
pushf
push
xchg
les
push
cmp
roll
lods
pop
test
adc
jb
lcall
pusha
scas
arpl
inc
in
jle
mov
xchg
push
mov
es
fs
mov
sbb
out
popf
dec
push
cmp
fdivr
and
inc
ljmp
sub
popf
loopne
aas
mov
loope
xchg
inc
dec
test
pop
pusha
inc
inc
icebp
fdivrp
xor
lods
mov
push
cmp
xor
bound
and
leave
or
sbb
fnstcw
addl
lret
sbb
xchg
fcmove
jae
sbb
jmp
or
mov
pop
xor
aaa
repz
popa
rcr
rcr
pushl
push
fistps
mov
int3
scas
iret
adc
in
leave
mov
ficoml
in
mov
push
jae
outsb
pop
dec
sarb
or
adc
jne
movl
lea
roll
das
lcall
popa
out
mov
or
add
cmp
test
shll
or
arpl
enter
std
popa
fistl
fldt
jecxz
jno
mov
and
xlat
push
fisubrs
nop
das
orl
test
aam
repnz
dec
cmp
pop
ds
sti
sub
push
outsb
jbe
pop
xchg
lods
add
sub
mov
cmp
lea
insl
sbb
leave
popf
xor
jae
cmc
fbstp
mov
dec
lret
insb
std
xor
lock
jecxz
repz
fwait
mov
sahf
inc
mov
test
pop
mov
push
movsl
cmp
xor
inc
call
sbb
in
push
aaa
rcrl
andb
push
pop
mov
and
dec
ret
push
test
cwtl
enter
aam
mov
or
and
int
insb
jae
mov
in
scas
sbb
add
pop
cmpsl
test
or
xorb
push
inc
pop
jmp
out
pop
shl
decl
imul
xor
imul
dec
setnp
mov
fldt
sbb
push
mov
sub
cwtl
movb
icebp
xchg
hlt
gs
insb
and
xchg
fstps
imul
insl
fisttpll
daa
fsubrs
jbe
xlat
mov
and
mov
push
xlat
xchg
inc
ja
mov
push
pop
cli
cmp
adc
jne
fwait
arpl
mov
mov
and
js
or
jp
xor
pop
dec
or
ljmp
mov
lahf
fwait
mov
jnp
jl
pop
shlb
sub
std
aaa
and
adc
jo
sbb
xor
or
jl
into
shl
pop
jae
fsubl
scas
lret
push
les
mov
aas
je
outsb
ss
pop
ja
enter
add
jno
mov
aad
in
pushf
imulb
cmp
popa
mov
sub
cmp
fwait
sbb
dec
fnstcw
push
aas
subl
pop
push
xor
stos
jg
mov
mov
and
ljmp
and
cmp
leave
loope
push
add
xlat
outsl
fistps
push
cmpb
sub
sub
pop
cld
mov
retw
jmp
mov
mov
jg
mov
pop
and
push
and
dec
cmp
lods
jns
ja
jo
mov
out
push
outsl
and
and
fidivrs
adc
dec
out
adc
mov
imulb
xchg
ret
mov
mov
jp
out
enter
mov
push
sti
cld
cwtl
repz
adc
or
ljmp
pop
fisubs
pop
repnz
cmp
loop
adc
and
test
test
adc
dec
ss
mov
iret
jecxz
daa
adc
popa
lcall
cwtl
jle
gs
fldcw
movsb
cld
out
movsb
xor
outsb
inc
rcll
jl
in
push
xor
out
or
mov
sahf
pop
outsl
sti
hlt
fmuls
jns
inc
in
out
and
mov
cmp
mov
pop
dec
xchg
inc
lea
jecxz
imul
jmp
jle
mov
push
mov
subl
shll
in
cmp
sub
rcrl
xchg
dec
sbbl
test
aaa
inc
jnp
or
xor
dec
mov
mov
xchg
out
in
push
and
pusha
add
mov
jo
clc
leave
nop
outsb
xlat
push
jge
jb
push
aam
xchg
cmp
jl
iret
sub
nop
pushl
stos
call
cmp
in
das
repz
inc
xor
and
xor
push
xchg
xchg
loope
arpl
push
jnp
pop
dec
arpl
pusha
jb
xor
sbb
sar
xchg
mov
cmp
dec
xchg
testl
adc
mov
insl
lods
out
inc
xor
pop
in
cld
jecxz
sbb
sti
in
shll
lods
dec
insb
and
mov
cmp
xchg
lcall
out
cwtl
xchg
in
xchg
fs
xchg
cld
shrb
xor
loopne
jmp
jmp
sub
add
loop
xor
mov
test
test
xchg
pop
dec
jbe
loope
and
sarb
jns
ljmp
mov
push
fbstp
jae
xorl
fists
xchg
push
add
xchg
lds
cmp
cmp
outsl
jl
movsb
test
adc
jecxz
jmp
mov
pop
out
jo
repnz
jnp
loop
or
lcall
inc
scas
fsubrl
lods
fstps
mov
repnz
lcall
out
jnp
add
into
lods
das
xchg
mov
lods
push
jge
ds
pushf
data16
push
notl
es
jg
or
in
push
dec
jbe
jmp
popf
mov
outsb
into
push
bnd
rcrb
adc
loopne
int3
outsb
and
pop
push
push
jle
test
fmull
cmpsb
pusha
mov
push
shrl
sbb
out
cs
fs
mov
fs
or
and
and
gs
fwait
stos
mov
inc
jmp
dec
iret
xchg
jg
dec
mov
mov
loopne
mov
stc
lret
mov
jnp
ja
sbb
or
ja
mov
push
pop
jecxz
push
js
lock
pusha
mov
dec
xchg
lcall
adc
jns
enter
jecxz
nop
pushf
inc
cld
cmp
pushf
clc
fldlg2
test
add
mov
pop
mov
and
packsswb
adcl
xchg
or
xor
or
jecxz
mov
je
imul
sbb
dec
xchg
adc
std
orl
push
sarb
xchg
cmp
pop
xor
stos
rcll
iret
or
arpl
enter
and
add
fistps
mov
sbb
or
mull
push
rcll
xchg
and
sbb
sar
cmp
arpl
mov
xor
jge
push
fldl
cmp
out
int3
inc
mov
mov
icebp
xor
ret
into
mov
xor
repz
sub
push
cmp
aad
les
and
jb
mov
ds
fwait
movsl
imul
cs
mov
dec
jo
das
add
xor
jae
stos
cmp
pop
mov
ljmp
lcall
jns
xchg
jmp
ljmp
ljmp
imul
outsb
loopne
out
or
or
int
int
jo
cmp
test
xchg
and
add
dec
pop
jl
data16
push
je
mov
insl
xor
les
shl
jmp
push
ljmp
xchg
lods
dec
inc
push
mov
xor
andl
push
add
jb
push
loop
scas
jno
adc
sbb
into
loope
les
mov
jns
loopne
sbb
cltd
or
int3
pop
xchg
xor
jae
jb
imul
adc
jno
ds
and
add
addb
xchg
cmp
pop
and
repnz
pop
add
loope
fldt
and
insl
rcr
xlat
mov
inc
in
sbb
add
shl
enter
xchg
add
scas
je
testb
push
fnsave
xor
lahf
or
and
movsl
std
add
scas
cmp
in
add
push
pand
imul
mov
clc
or
mov
aam
fcomi
in
aad
fwait
aam
test
inc
fmuls
sub
test
movsb
mov
push
adc
adcl
lret
adc
out
repnz
insb
ds
sahf
sub
adc
arpl
aad
in
and
and
jge
sbb
out
mov
daa
and
jmp
test
loope
fldl
sbb
mov
jnp
iret
jae
imul
loopne
shr
push
cmp
push
mov
xchg
adc
jl
mov
out
aad
xor
shl
rclb
cmp
dec
mov
aam
cmc
push
mov
or
stc
jge
leave
lcall
xor
das
mov
fsubrs
ljmp
lea
adc
clc
cs
pop
jno
jnp
loopne
inc
popa
mov
stc
ret
xchg
add
cli
js
xorl
mov
sbb
mov
cmp
sub
std
dec
popf
push
sarb
loope
mov
lret
or
rorb
mov
add
inc
inc
xor
jge
sbb
in
dec
ret
mov
fwait
adc
xchg
sbb
push
jmp
adcb
add
pop
lea
push
dec
or
in
ficoml
jbe
fnsave
addr16
movsl
out
into
sahf
add
add
outsl
cmpsl
mov
js
inc
pop
arpl
hlt
subl
mov
jmp
dec
jae
mov
test
xor
xchg
out
mov
mov
sbb
xchg
jns
push
int
cmp
mov
mov
adc
movsb
aam
mov
pushf
addl
movsl
push
cmp
testb
xchg
xor
rcll
mov
in
jge
fistps
out
xor
addr16
ljmp
bound
pmulhw
aam
and
into
xchg
enter
aam
vcmpps
mov
jecxz
jp
inc
lock
mov
lret
jecxz
xor
in
mov
ret
arpl
mulb
push
pop
lock
pop
xchg
in
ret
out
jnp
lret
push
xchg
enter
insb
add
add
jo
cmp
sbb
loopne
js
das
int3
jle
dec
lock
jo
movsl
lods
addr16
out
xor
adc
repnz
xor
insl
daa
nop
ret
add
aad
jl
outsb
fcmovnbe
xchg
cmpsl
mov
push
js
jg
inc
leave
gs
or
fldl
ret
lods
xchg
or
jle
aaa
and
fldcw
mov
repnz
pop
mov
mov
adc
mov
or
in
nop
in
lret
or
sbb
cmp
ret
lods
test
scas
mov
addb
lods
rcrl
mov
push
xchg
add
xor
adc
inc
cmp
lods
jl
xchg
push
push
imul
push
ljmp
mov
pop
sahf
insl
ja
les
mov
mov
insb
inc
jnp
andb
inc
add
sbb
ljmp
pop
and
call
sbbb
mov
dec
or
mov
and
jmp
dec
jge
dec
mov
lea
xchg
sub
mov
or
mov
sub
in
cld
jnp
stc
jmp
add
push
and
mov
push
cwtl
call
sbb
adc
gs
cmp
adc
scas
sub
mov
sub
cli
mov
xchg
cld
mov
inc
test
sbb
push
inc
jnp
xchg
arpl
out
push
insb
into
addr16
and
pop
iret
imulb
lcall
jae
cmp
jp
cli
mov
imul
mov
and
popf
xor
int3
xlat
cmp
nop
add
insl
into
rcrl
adc
sub
xchg
add
jmp
out
mov
loope
mov
cmpsl
insl
jge
dec
pop
xchg
mov
fnstsw
inc
ficoms
jae
push
jns
popa
push
push
push
ret
cld
jmp
iret
mull
pop
outsl
daa
or
dec
push
enter
dec
push
mov
lock
and
xchg
arpl
xor
fidivrl
imul
fcomps
iret
les
fs
in
iret
jae
lret
enter
or
and
sti
inc
icebp
imul
test
jg
test
sub
rcrb
sbb
mov
les
adc
psllw
aas
cld
pop
pop
test
scas
xor
xlat
add
pop
cmp
pop
sub
add
sbb
xor
push
lds
pop
loopne
addl
leave
jp
out
cmp
pop
lret
sti
inc
fwait
leave
push
mov
inc
xchg
pop
imul
lahf
push
pop
cmp
jecxz
fld
dec
cmp
or
sub
add
adc
data16
pop
outsb
cwtl
pusha
push
xchg
push
leavew
mov
stos
jo
mov
fstpl
adc
and
jecxz
leave
dec
pop
aaa
mov
or
xchg
insl
xchg
fstl
dec
pushl
andl
dec
ret
insb
lcall
hlt
push
wrmsr
ds
insb
mov
xchg
mov
and
jmp
add
cmpsl
lea
loope
jae
outsb
sub
jl
jno
adc
cltd
lea
mov
out
xchg
or
cmc
hlt
popa
outsb
mov
and
lock
sbb
test
pop
popa
mov
push
jnp
das
lcall
xchg
andl
push
xchg
loop
mov
lods
daa
cld
dec
add
divb
mov
sti
xchg
mov
mov
lret
lcallw
sbb
test
sbb
cmpsl
mov
test
sti
lea
adc
and
leave
mov
jne
repnz
mov
test
inc
in
xchg
cli
add
fnstsw
or
popa
fildll
jle
mov
ds
sbb
sub
rcll
adc
xchg
push
mov
or
or
jbe
fsts
das
ja
sub
mov
adc
inc
pop
test
or
dec
push
cmp
adc
push
add
adc
push
sub
testb
sbb
sbb
les
adc
andb
cmpsl
mov
xchg
out
aas
push
push
mov
lea
sub
dec
adc
pop
or
out
push
into
pushf
push
adc
dec
pushl
subb
popf
mov
lods
lahf
out
pop
or
pop
jge
xlat
inc
iret
loop
loope
jecxz
ficompl
cmp
cmp
jb
push
mov
jmp
arpl
movsb
push
cmpsb
idiv
inc
jmp
dec
xor
sbb
sti
out
add
cmp
pusha
jp
cli
loope
fistl
int3
mov
fnstcw
ret
lds
insb
adc
cld
push
jb
hlt
mov
orl
icebp
and
ds
pop
add
mov
sbbl
iret
cmp
stos
xor
jge
sbb
or
mov
fwait
leave
arpl
scas
lock
das
addr16
add
inc
xchg
imul
jl
jne
push
jmp
lcall
sub
addr16
cmp
sub
lds
in
fistl
mov
xchg
ds
mov
cld
popa
je
data16
mov
dec
mov
in
pop
repz
insb
test
push
push
push
adc
movsl
data16
xchg
inc
push
movsl
cmp
out
insl
add
sbb
xchg
enter
sub
cmp
mov
add
sarl
or
sahf
lods
jmp
mov
cmp
push
dec
fdivs
rcrl
test
pop
dec
js
dec
and
mov
add
popa
pushf
sub
dec
xchg
repnz
mov
cmp
adc
test
movsb
adc
lea
sahf
xchg
shrb
das
jo
and
hlt
ss
inc
sub
lcall
mov
jo
mov
fdivrl
cwtl
lret
or
cmp
pop
pop
lock
sbb
shll
mov
insb
sbb
xor
divb
push
xchg
pop
push
sub
lret
cmpsl
je
js
shl
mov
loope
mov
test
cmp
mov
and
jb
sbb
push
push
inc
pushf
ljmp
lahf
in
mov
stos
ds
fldl
push
mov
lahf
call
push
push
addl
pop
mov
fbstp
imul
loop
insl
sbb
mov
mov
cmp
xchg
jl
dec
mov
ljmp
loope
cmpb
mov
ljmp
pop
push
or
das
test
dec
pop
in
hlt
xor
add
pop
aam
sahf
rorl
pop
add
and
ret
jnp
pop
jmp
test
cld
test
inc
sub
pushf
pusha
inc
mov
fwait
cmpsl
push
cs
sub
mov
stc
sub
mov
dec
jmp
jno
dec
lahf
das
insb
push
sbb
cli
jg
daa
jecxz
and
mov
repnz
sti
incb
push
xchg
movb
or
sub
mov
nop
adc
mov
inc
push
movsb
shlb
mov
dec
cwtl
cmpsl
fisubs
lock
scas
jecxz
mov
aam
dec
push
call
mov
or
mov
loopne,pt
pop
les
imul
pop
push
subl
mov
movl
add
sti
sbb
lea
mov
jae
xchg
jmp
push
pop
adc
pushf
rolb
pop
lods
xchg
push
test
jns
jg
xchg
jnp
lods
push
pop
jg
inc
mov
std
js
divl
push
stc
adc
cs
icebp
aas
lea
sbb
enter
stos
push
mov
mov
dec
in
aad
mov
sub
sub
push
sarl
psubw
sub
imul
das
arpl
popf
in
xchg
stos
ret
adc
xchg
dec
jo
and
shrl
fsub
xchg
jns
cld
push
into
add
loope
push
leave
pop
in
int
sbb
mov
jns
ret
xlat
addr16
xchg
cmc
pop
push
jle
sbb
fwait
adc
stos
in
mov
cmp
or
xchg
jo
add
js
add
in
dec
dec
jmp
fnstcw
ja
outsl
sbb
adc
loope
cmp
and
fs
adc
and
aas
xchg
in
out
cmpsl
xor
or
cmp
lret
and
cmp
lock
pop
adc
jbe
lret
adc
mov
jp
pop
push
adc
outsl
sbb
fdivrl
xchg
daa
mov
mov
ja
adc
int
mov
int
mov
pop
jmp
pop
aam
sub
shrl
dec
test
and
in
out
adc
aas
stc
dec
xchg
jge
sub
sahf
ret
dec
adc
es
mov
xor
aad
dec
arpl
pop
out
rcrb
sbb
pusha
xor
fisttpll
in
addr16
sahf
dec
popf
es
mov
adc
push
xchg
pop
fstl
jns
pop
pop
aas
cmp
subl
pop
jl
daa
inc
xchg
or
icebp
dec
jg
push
push
in
daa
push
xlat
push
fwait
pop
clc
cli
hlt
mov
in
stc
jo
iret
push
cmpsb
stos
in
fsubr
inc
repz
jl
or
push
inc
je
mov
mov
jbe
es
pusha
and
cld
pop
fistps
popf
mov
fwait
mov
jbe
mov
int3
mov
stos
lret
insb
fnsave
pop
or
mov
sbb
cld
lock
fdivrp
inc
loop
lods
jae
push
test
pop
ret
cmp
mov
cwtl
mov
fistl
shrb
mov
mov
mov
cmp
pop
roll
pusha
sub
mov
inc
cld
pop
cmpsl
cmp
xor
shr
rcl
push
in
push
jle
packuswb
lods
cmp
push
loop
out
pop
add
or
or
push
xchg
sub
pop
into
inc
mov
sub
or
imul
pusha
pop
sbb
rorl
mov
mov
arpl
pop
bound
imul
out
mov
mov
fimuls
in
ljmp
or
or
lods
mov
jnp
leave
test
pop
rorl
data16
adc
pop
jb
mov
sub
xor
pop
aad
int3
fnstsw
repz
into
sub
or
cmp
push
insl
lea
xchg
pop
fcoms
pusha
xchg
inc
int3
lahf
mov
jl
pop
hlt
or
aam
xor
lret
cmpsl
or
pushf
es
xor
or
cmpsl
xor
jle
movsb
repnz
sahf
in
xchg
mov
loope
mov
fwait
imul
add
jb
cltd
cmc
fwait
mov
adc
rcr
scas
inc
pop
mov
pop
nop
adc
psubsw
icebp
mov
inc
rorl
mov
rcrb
inc
xchg
or
loopne
testb
adc
es
xor
cltd
cmpsb
sub
dec
mov
dec
jns
or
mov
mov
rclb
sti
lret
dec
mov
mov
out
outsl
loop
pop
inc
push
loop
push
stc
push
jp
add
jne
sub
xchg
sub
pop
fcomp
adc
or
add
xor
jae
push
or
dec
stos
mov
sti
jae
xor
icebp
enter
cmp
jae
mov
push
dec
cmp
and
dec
sub
jmp
clc
mov
adc
xor
negb
and
cmp
xchg
mov
xor
xchg
out
in
fsubrp
mov
xor
incb
mov
add
push
or
mov
nop
mov
sub
dec
aad
push
xchg
push
mov
and
mov
mov
add
popa
in
pop
push
cmp
push
inc
arpl
push
xchg
sbb
dec
inc
leave
mov
pop
push
push
in
push
ja
xor
or
dec
std
sbb
xchg
cmp
movsb
sbbb
mov
add
mov
adc
mov
mov
mov
hlt
loopne
xchg
mov
mov
mov
cmp
sbb
push
pop
xor
outsb
cltd
stc
jnp,pn
pop
add
mov
outsl
nop
dec
hlt
push
mov
cli
out
cmp
test
rclb
arpl
das
fidivrl
ljmp
add
imul
into
repz
scas
into
xor
mov
pushf
insl
lea
sbb
adc
lock
fistl
dec
push
add
jns
sahf
push
repz
lcall
and
xchg
pop
les
jmp
pop
pop
fidivrl
cmp
icebp
push
lahf
sub
ret
inc
xorb
push
addr16
repz
cs
push
rorl
das
xor
outsb
mov
lahf
and
add
into
test
mov
or
mov
sbb
jl
into
xchg
jo
loopne
fsubs
mov
and
cmp
pop
pop
negb
mov
or
ret
arpl
xchg
pushf
stc
ds
mov
call
adc
push
sub
nop
cmp
and
inc
int3
stos
or
push
push
iret
dec
mov
ret
fmull
test
push
add
push
jo
dec
mov
dec
ss
aas
packuswb
push
ss
mov
icebp
push
jbe
mov
insl
mov
xchg
add
adc
xor
jp
or
mov
jmp
sbb
imul
ds
movsl
and
fwait
add
add
add
movsb
inc
lea
mov
les
mov
cmp
sub
jge
addr16
orb
dec
xchg
shr
outsb
ds
mov
lret
bound
in
stos
dec
adc
pop
push
jp
fsubl
dec
fs
ror
mov
stos
xchg
xor
out
or
add
lods
addb
shrl
imul
xchg
roll
testb
mov
lock
dec
test
gs
ja
dec
aad
loope
and
jmp
mov
int
sub
push
inc
pop
popf
push
ror
cmp
pop
pop
bound
fstpt
sub
out
imul
stos
mov
and
sar
movsb
jmp
lret
mov
ljmp
sbb
add
jbe
adc
lds
and
push
sub
cmpsl
mov
sbb
xchg
and
xlat
push
aad
dec
xchg
push
insb
sub
and
mov
sbbb
mov
push
ljmp
adc
repz
mov
dec
mov
je
push
cmp
push
in
push
out
fstpt
push
enter
loope
shl
push
and
lock
fsubs
jbe
push
out
out
jno
and
xchg
jmp
iret
mov
movsb
ret
sub
das
js
test
jns
mov
cmpsl
xlat
rclb
mov
lret
xor
add
test
adc
pop
data16
cmc
dec
fs
pusha
ds
jecxz
cmc
add
in
and
sahf
add
cs
cwtl
and
sbb
ficoms
mov
loopne
xor
in
fldenv
push
adc
pop
adc
daa
loope
imul
or
insl
add
mov
adcb
in
pop
out
jg
xchg
stos
mov
hlt
hlt
or
lods
lds
out
jecxz
les
int3
cmp
push
dec
xor
sub
pop
push
icebp
mul
xor
push
push
cmp
xchg
ret
cmp
dec
loope
adc
dec
imul
pushl
orb
mov
mov
cmp
pop
pop
cmc
dec
mov
lret
sub
cmpsb
xchg
aam
cli
rorl
lahf
ja
mov
ja
cwtl
lret
mov
inc
je
sti
jg
pushf
lds
repnz
xor
mov
sub
pop
dec
testl
add
push
int3
adc
gs
mov
clc
push
pop
movsl
fbstp
add
jle
call
iret
cmc
das
fnstsw
inc
test
cmp
lret
and
imul
and
outsb
leave
push
fdiv
in
push
jge
cmc
mov
sbb
jmp
inc
shll
xor
pop
cmp
pop
jmp
lods
pop
push
adc
inc
mov
or
rolb
jnp
add
and
push
fisttps
sti
push
ss
push
push
fsts
call
testb
ja
inc
imul
jo
leave
dec
shr
xchg
push
out
cld
scas
fists
xor
fsubl
adc
pop
push
mov
xor
or
dec
sbb
fisttpll
das
xor
pop
popf
dec
loope
xor
shll
xorl
pop
cmp
cmpsb
push
cmp
pop
cli
and
xchg
pop
xor
bound
jge
hlt
sahf
popf
mov
xorl
sbb
in
jmp
sub
inc
push
xor
sub
jg
xorb
lock
inc
shrl
push
in
in
jo
xchg
es
iret
mov
push
and
sbb
inc
ret
jne
leave
jne
jo
out
js
mov
mov
data16
mov
or
pop
fdiv
sub
adc
in
in
and
cltd
xlat
clc
imul
lret
jae
pop
fnstsw
push
dec
iret
xlat
gs
cmp
ret
inc
mov
mov
push
sbb
ret
dec
fists
repnz
push
nop
lret
sub
jg
dec
sbb
fnsave
in
cld
add
mov
rolb
icebp
add
add
sbb
or
out
lock
or
cmc
inc
xchg
xor
ret
pusha
mov
sbb
clc
adc
sti
arpl
and
pop
jle
xorl
adc
gs
or
mov
les
adc
test
add
test
stos
shlb
mov
ret
cmpsb
and
push
cmp
loopne
adc
stc
ds
cmpsl
push
mov
rcrb
jg
dec
mov
or
jecxz
and
mov
push
out
mov
cmp
jo
or
ss
mov
nop
mov
sub
jne
sti
hlt
push
xchg
push
cmpb
mov
stos
divb
jno
test
pop
adc
lcall
sub
xorb
or
fs
mov
shrl
xor
adc
call
mov
leave
fisubrl
lcall
dec
addr16
cltd
cli
mov
mov
mov
mov
jecxz
xor
mov
arpl
cltd
mov
jno
inc
fldl
cmp
push
mov
mov
stos
adc
dec
adc
aad
jle
jae
stc
loopne
add
aas
imul
and
cmp
and
cmp
jno
or
add
and
sahf
aam
sub
xlat
je
sub
add
mov
or
aad
bound
mov
and
mov
jne
bound
or
addr16
xor
push
dec
inc
xor
lcall
paddusw
sahf
adc
jge
icebp
rorb
push
mov
ds
mov
je
mov
mov
sub
sbb
dec
aas
lahf
push
jl
dec
nop
movsl
imul
inc
or
arpl
jl
mov
lock
add
es
daa
iret
cmp
dec
push
pusha
dec
int
aad
jmp
popf
mov
jl
inc
adc
or
out
fwait
mov
cmpsl
fsubp
jl
outsb
dec
adc
jb
jb
xor
or
iret
lahf
popf
lret
scas
pop
shll
adc
and
cmp
mov
insl
sbb
inc
pop
sti
mov
cmp
ja
xor
add
adc
cmp
mov
mov
loope
repz
rolb
dec
orl
or
out
mov
pop
lret
sbb
inc
jge
push
icebp
inc
push
in
dec
xorw
lret
pop
jle
mov
movsl
aaa
jo
pop
dec
divl
sahf
and
popf
cli
sub
and
cmp
fcoms
jns
testb
test
ret
ja
lret
mov
xor
push
or
or
adc
fcoms
cwtl
loope
mov
dec
hlt
jmp
inc
adc
aam
aaa
xor
rcr
es
iret
rolb
dec
add
mov
xchg
popf
es
inc
pop
mov
push
outsl
adc
idiv
movsb
sbb
jg
xor
dec
in
mov
repz
mov
or
sbb
lock
or
sbb
pop
ja
adc
lds
xchg
xor
leave
sub
lahf
negb
jg
sub
dec
testb
cltd
push
pushl
jmp
xor
fidivrs
rclb
insb
and
or
lret
sahf
xor
outsl
stos
fidivrl
jb
imul
and
jmp
mov
add
pop
mov
cs
jbe
mov
stos
xchg
add
adc
sub
xor
outsl
std
bound
push
xchg
push
and
dec
fnstenv
mov
inc
jecxz
popf
je
or
in
popa
daa
mov
pop
xchg
or
sub
mov
jns
les
and
add
mov
mov
fisttpll
sub
call
fwait
or
or
pop
mov
fxtract
popa
jge
push
and
por
jae
pop
test
or
cmc
pop
rclb
bound
mov
push
xor
ret
fcomps
mov
sub
sahf
pop
enter
push
mov
imul
inc
cmp
ret
lret
pop
divb
push
mov
mov
loop
xorl
ret
sbb
gs
andl
mov
mov
adc
jp
mov
jge
mov
xchg
sbb
lret
push
out
pop
cmpsb
repz
mov
push
jno
xchg
mov
loope
stos
inc
push
aas
mov
fidivrl
mov
mov
sbb
add
or
fsubrl
xor
or
and
repz
dec
and
cmp
dec
xchg
rol
mov
pop
jmp
mov
ret
out
push
inc
lahf
hlt
cmp
and
into
fdivl
dec
add
add
inc
cmp
cmpsb
jno
inc
xchg
lock
repnz
sub
scas
mov
std
into
loope
fimull
in
shll
dec
ja
mov
inc
xlat
xlat
push
jns
imul
or
inc
adc
dec
adc
push
adc
stc
jns
fs
ficomps
outsb
fwait
jb
addb
jmp
cmc
into
pop
jnp
repz
bound
sbb
xchg
xor
add
sbbb
out
jmp
push
std
stc
xchg
mov
pushf
cmp
push
call
push
in
sub
bound
enter
outsb
push
dec
clc
mov
or
icebp
outsl
in
out
push
sti
push
lods
gs
out
mov
enter
fs
test
add
xchg
rclb
leave
stc
aas
or
test
dec
jmp
ss
scas
sbb
js
scas
xchg
ljmp
das
int
je
or
push
stos
push
add
daa
das
xlat
loop
fnstenv
scas
sub
pop
dec
dec
jge
lret
inc
mov
out
mov
loop
sbb
out
jmp
pushf
bound
adc
dec
cmc
pop
dec
jl
iret
lcall
enter
rcr
push
and
ret
shll
into
loope
mov
cld
in
mov
mov
and
inc
data16
xchg
jno
loopne
stos
jecxz
cmc
dec
fwait
sub
mov
mov
xor
cli
sbb
pop
sub
movsl
jge
mov
clc
mov
stos
pusha
fstps
or
enter
inc
xchg
icebp
scas
pop
es
sahf
out
and
push
pop
movsl
arpl
xorl
ret
lret
mov
fnstcw
loope
jnp
xlat
hlt
lcall
adc
in
sbbb
sbb
adcl
out
test
movsl
pushf
imul
out
mov
xchg
scas
xor
in
lahf
jmp
aad
mov
dec
push
xor
fldcw
addb
xchg
std
into
cmpsl
mov
sub
sahf
lds
jb,pt
jle
out
int
add
mov
pushf
leave
lods
mov
xchg
fdivs
jge
inc
xchg
aad
in
adc
mov
dec
popf
add
mov
aaa
mov
inc
cmpsb
rolb
scas
das
out
sub
or
testl
mov
push
inc
into
jo
loope
push
adc
pusha
aam
pop
push
cs
jns
stc
push
mov
sub
cs
push
xchg
subl
lahf
bound
and
cmp
cmp
loope
jp
out
pop
and
int3
add
fwait
fs
movsb
dec
jno
cmp
icebp
test
fst
nop
or
notl
jl
sub
mov
out
popa
mov
jae
ds
fcomp
add
mov
icebp
aaa
xchg
mov
fisubrs
enter
loopne
and
cmpsb
cmp
push
sub
mov
stos
fs
inc
out
mov
sbb
cli
stos
push
pop
out
push
imul
adc
es
jnp
xor
enter
gs
addr16
in
mov
repnz
loopne
lods
lahf
inc
sub
test
jns
je,pt
aad
xchg
sahf
inc
lods
push
iret
xchg
or
push
int
stos
xadd
adc
and
je
repz
cltd
loope
scas
xlat
xchg
dec
jle
shll
xchg
aad
pop
loopne
cmp
pushf
adcb
shll
outsl
cmp
insb
mov
test
or
pop
mov
jmp
inc
hlt
ror
cmpb
sti
jo
add
ss
mov
js
pop
adc
mov
jb
mov
xor
and
adc
out
int3
mov
daa
out
jae
stc
mov
fsubs
cmp
mov
stc
fildll
inc
and
rcrb
xlat
jl
or
es
loopne
xchg
fsubrl
sub
jbe
push
loop
sbb
repz
inc
imul
test
push
lods
dec
mov
outsl
mov
outsb
sbb
stos
out
mov
or
sbb
xchg
in
dec
das
jmp
dec
adc
mov
inc
mov
hlt
int
jmp
hlt
adc
dec
out
push
jp
fsubs
jecxz
xor
dec
sahf
fucomip
sbb
push
test
shrb
mov
mov
mov
push
mov
adc
xchg
decb
and
pop
cmp
fistl
mov
stos
inc
popf
xchg
xor
repz
test
lock
sbb
mov
and
out
cmp
pop
lds
push
aam
mov
jno
xor
aad
jne
jle
add
stos
add
aaa
mov
cmp
xor
or
push
test
fcmovne
fnstenv
aaa
mov
mov
xchg
mov
sbb
das
pop
popf
dec
out
ficoml
repz
movsb
cmp
insl
cmp
jecxz
cwtl
mov
ljmp
jl
ret
mov
stc
clc
cmpsl
xlat
push
inc
lds
and
mov
adc
std
loope
enter
inc
mov
iret
int
enter
sbb
jecxz
ret
in
call
mov
lahf
xchg
fs
mov
push
fwait
or
dec
andl
rolb
lcall
arpl
push
or
call
adc
idivl
sahf
jae
idivl
int3
out
pusha
jge
adc
fcompl
xchg
mov
mov
xchg
and
fidivl
insl
dec
and
lret
mov
loopne
pusha
sti
push
push
sub
push
ret
stc
mov
push
fstl
scas
lds
cmp
and
testb
incl
fiaddl
repnz
sbb
data16
cmc
loop
mov
jae
cmp
jge
popa
push
xlat
xor
loope
daa
sub
add
and
dec
pushf
add
hlt
popf
sub
ds
push
add
sbb
or
cli
inc
push
mov
dec
cmc
xchg
jl
cld
cmp
sti
std
mov
mov
sahf
notb
addl
insl
in
inc
sub
push
and
xor
cmp
and
xchg
and
sub
loop
fistps
insl
pop
xor
jns
mov
aam
dec
xchg
dec
jmp
test
push
xor
nop
adc
xchg
into
mov
sbb
mov
or
push
xchg
std
fcmovnbe
rolb
xor
mov
xchg
xor
inc
dec
sub
test
jge
out
xchg
into
mov
lcall
xor
fnstenv
adc
ss
bswap
inc
and
frstor
popa
out
or
ljmp
aaa
jne
mov
outsb
dec
mov
adc
loopne
adc
aas
xor
mulb
pop
jecxz
lock
fildll
bound
push
add
push
and
xlat
adc
out
pop
inc
adc
std
sbb
fstpl
sub
mov
nop
or
push
jb
int3
and
imul
pop
mov
mov
push
push
nop
sbb
add
pop
not
mov
pop
xchg
std
and
xchg
xor
call
nop
jbe
roll
and
mov
or
add
or
notb
sbb
ds
neg
jp
jmp
adc
adc
cmp
daa
push
xor
scas
je
xor
stos
dec
roll
push
imul
pop
or
cmp
push
xchg
es
daa
cld
lock
sti
rorb
stos
xchg
lcall
test
sbb
jmp
jns
in
inc
stc
popf
or
sub
enter
xor
pop
jmp
and
cmp
sub
pop
mov
and
in
imul
xchg
push
push
es
test
or
adc
jo
cmp
lret
dec
sbb
or
rcrb
mov
add
sarb
jnp
sbb
sti
movsl
mov
sbb
mov
dec
jb
xchg
mov
cmpsb
mull
sub
mov
pop
lcall
pushl
nop
fmull
ret
or
pop
jecxz
sub
mov
into
and
ja
xchg
inc
fstpl
inc
shlb
popl
adc
xchg
xor
xchg
xchg
mov
and
mov
mov
test
in
aas
add
sub
or
jo
xor
in
repnz
imul
sarb
jp
jp
sub
inc
dec
in
inc
and
fcom
push
stos
xchg
cmpsl
cmp
or
mov
ret
push
adc
add
inc
mov
cmp
or
inc
jg
movsl
xchg
and
mov
add
rolb
or
adc
outsl
repnz
adc
ljmp
mull
adc
ret
iret
fisubs
les
sub
fists
sti
in
mov
js
mov
imulb
mov
hlt
repz
mov
int3
loope
repnz
mov
ljmp
fwait
mov
ficomps
add
mov
fnsave
repnz
cs
inc
mov
pop
sbb
jp
mov
out
cmp
out
scas
add
add
pop
loop
jnp
push
outsl
xor
loop
inc
outsl
mov
out
rcrb
stc
adc
mov
scas
arpl
clc
fwait
cli
mov
adc
xchg
pop
or
loopne
adc
adc
mov
adc
rcll
testl
or
popf
xchg
pop
mov
jo
adc
xchg
lahf
in
fldenv
jnp
sbb
add
cmp
in
and
lahf
scas
and
pop
cmp
mov
lock
leave
xor
aaa
fstpt
aas
lahf
and
inc
sahf
in
fsubrs
int3
jbe
jmp
mov
pop
or
jmp
scas
lahf
insb
mov
inc
fdivl
xchg
jnp
adc
aaa
xchg
test
jnp
and
sbb
mov
mov
add
inc
lock
jl
add
sti
jbe
fcos
inc
clc
in
sbb
jns
push
sbb
cmp
jne
jmp
pop
push
insb
pop
jmp
dec
inc
ret
aam
xchg
movsb
test
das
cmp
imul
mov
jbe
pushf
and
or
add
gs
adc
aam
dec
pop
mov
and
xorb
xor
lcall
mov
xchg
jg
inc
call
pop
mov
int
sbb
lea
push
loop
adc
pop
arpl
dec
aaa
push
or
mov
inc
fistps
int3
inc
sub
cmp
pop
outsl
out
jo
xor
xchg
jge
jns
mov
in
aam
adcl
jg
and
movsb
mov
mov
in
push
inc
nop
cmpb
mov
iret
mov
push
pop
cld
adc
scas
jecxz
rorb
out
ljmp
push
and
je
mov
mov
jl
faddl
pop
sbbb
pop
xor
xchg
scas
jns
adc
pop
in
jecxz
orl
dec
and
out
cld
stos
jmp
push
xchg
mov
xor
inc
sbb
in
lret
lahf
or
sbb
xor
xor
fiadds
and
call
jge
xor
enter
out
sbb
push
test
sbbb
addr16
mov
aam
jecxz
jp
orl
loopne
or
push
adc
mov
fdivr
inc
fnstsw
push
jbe
rcrl
mov
out
xchg
shll
xchg
shlb
adc
inc
jge
dec
clc
pop
and
out
popa
adc
cmp
cltd
sub
mov
shl
jo
stc
sbb
or
cmpsb
inc
sbb
loopne
pminub
lea
shlb
call
shll
inc
out
xor
mov
push
push
or
dec
or
imull
mov
test
ja
sub
pop
cmc
xchg
cmc
and
fiadds
adc
fisttpl
adc
xor
fwait
in
or
and
jle
dec
nop
mov
mov
clc
mov
fildll
mov
jg
jns
scas
in
int3
andl
jne
sub
daa
pushf
mov
push
icebp
subl
and
dec
or
adc
add
hlt
pop
outsl
gs
push
out
ja
cmp
lock
jbe
or
push
sub
push
jbe
rol
pop
adc
and
loopew
push
dec
in
inc
or
pop
mov
popf
out
into
add
inc
ljmp
test
dec
sub
push
mov
decb
pop
std
mov
stos
aas
lcall
mov
dec
stos
mov
push
pop
sub
sub
xor
movsb
push
shl
or
xchg
inc
inc
bound
xchg
pusha
call
mov
xchg
fistl
jmp
lcall
add
mov
out
pop
mov
stos
shl
pop
pop
out
add
pop
xchg
movsl
jp
push
and
jnp
mov
ficoms
xchg
or
mov
dec
inc
dec
xchg
jmp
jae
mov
daa
cmpsl
sarb
sub
push
xor
andl
rcrl
movl
push
mov
scas
xor
outsb
mov
pop
mov
in
push
cmpsb
notl
out
inc
lods
sbb
jbe
test
or
rorl
dec
pop
int
jns
push
push
pop
ss
jge
cwtl
es
push
movsb
hlt
and
push
xchg
pop
add
leave
mov
cmp
and
add
loop
sbb
jmp
sub
cmp
outsb
xor
sti
mov
fildl
scas
sbb
mov
lcall
push
sub
clc
mov
xlat
pushf
ja
sbb
mov
repnz
xchg
das
roll
xchg
aas
int
sarl
sbb
popa
add
mov
pusha
xchg
cmp
or
mov
movsl
ljmp
dec
cmp
push
fsts
xor
add
insb
in
adc
test
outsb
pop
dec
cmp
adc
ljmp
imulb
xchg
xchg
imul
push
fs
mov
or
out
jne
add
aam
cmc
ret
add
dec
out
jl
cmp
fcomp
pop
mov
cld
ljmp
sub
pop
push
sub
and
stc
mov
cld
pop
stos
mov
rolb
push
mov
ja
or
add
imul
js
sub
adc
shll
negl
in
xor
mov
mov
stc
adc
mov
xchg
jl
addr16
jl
ljmp
xor
sub
mov
lret
leave
lcall
and
ret
cmp
ja
sbb
dec
sbb
adc
push
dec
ja
jno
jnp
call
enter
in
inc
aas
mov
lret
mov
and
sbb
ficoml
int
shll
xchg
jecxz
jge
aas
jnp
jmp
test
outsb
push
mov
inc
cmpl
icebp
lret
aaa
sar
in
into
fstpl
mov
xchg
mov
jae
pop
push
or
es
push
int
std
stos
mov
mulb
jae
sub
jbe
sub
sub
xchg
jle
arpl
inc
ljmp
out
jne
loope
jb
xchg
fbld
jecxz
push
pop
jl
adc
adc
mov
imul
xlat
fdivrl
adc
adc
push
push
addb
jmp
pop
push
sub
sbb
xor
xchg
mov
add
inc
outsl
mov
test
dec
insl
pop
xor
xor
cmpsb
push
sbb
xchg
xchg
bound
add
pushf
ret
mov
loopne
mov
push
and
aam
loope
je
xor
push
mov
insb
or
or
jae
cmpsl
shl
mov
cmpsb
pop
lahf
or
lea
imul
idivl
ljmp
sub
enter
jp
cltd
and
lea
sub
in
pushf
mov
addr16
sbb
inc
jp
mov
out
adc
push
movsl
cli
xor
sbb
dec
test
outsb
mov
cmp
insl
cmp
js
fbstp
mov
inc
fisttpll
gs
add
rol
repz
xchg
ja
arpl
mov
xorb
push
adc
stc
lahf
loopne
mov
jge
repz
iret
mov
ret
imul
add
mov
xlat
test
cs
fxch
pusha
jle
push
lds
ret
pusha
inc
and
out
cmp
outsl
pop
mov
outsb
or
sbb
or
ljmp
cmp
pop
xor
mov
mov
cmpsb
inc
push
jns
imul
mov
cmc
scas
mov
in
mov
cs
aaa
frstor
into
leave
insl
xor
or
or
pop
push
test
jbe
jp
inc
jp
and
outsb
xchg
jl
add
aaa
ficoms
jp
out
and
mov
outsl
add
mov
pop
sbb
cli
and
mov
jnp
push
std
pop
nop
ja
aas
inc
orl
jle
imul
jnp
push
sbb
fwait
insl
stos
pop
lret
xchg
xor
jno
xchg
sub
mov
je
js
xlat
adc
rcrb
cs
outsl
push
mov
lcall
scas
clc
aaa
sbb
lods
push
xor
shrb
xor
divl
js
es
ss
ljmp
orb
xor
mov
stos
mov
decb
and
xchg
addr16
andb
insb
js
sub
ss
pop
mov
loopne
xchg
dec
xor
ret
or
dec
and
cld
inc
dec
jl
das
jmp
and
sbb
orb
dec
jmp
aaa
jg
rorl
out
and
lret
test
sbbl
inc
cld
pop
pop
daa
popa
iret
xchg
pop
add
in
scas
push
lds
int
sahf
fidivrs
xlat
xchg
aaa
pop
sub
lret
push
cmc
cmp
outsb
loope
cmp
fadd
push
xchg
or
jbe
stc
xor
adc
sub
add
jae
cmpsb
out
mov
mov
test
mov
xor
mov
mov
js
sbb
cmp
or
mov
rclb
inc
stos
cmp
repz
jge
stc
push
orl
stos
nop
popf
mov
adc
and
sub
xchg
jb
jne
lret
bound
and
ds
or
push
fisubrs
push
add
inc
stos
xchg
inc
lock
xor
ljmp
push
loop
fcmove
push
pop
cmpl
pusha
push
mov
fwait
push
sub
fiaddl
ss
xor
mov
ficoms
fsub
mov
adc
mov
std
scas
push
lret
dec
sub
mov
jmp
rcrl
mov
jno
in
pushf
xor
inc
add
pop
call
pushf
sub
jl
scas
fdivrl
inc
sti
cltd
mov
les
in
int3
mov
cmovo
es
out
pop
cld
add
aaa
inc
jae
insb
inc
xlat
add
mov
mov
dec
shlb
cmpsb
lea
ja
repz
pop
insb
jb
scas
sbb
jl
pusha
mov
rorb
mov
sub
dec
xchg
int3
xor
out
dec
mov
and
sub
adc
sti
int3
pop
mov
sub
fmuls
sbb
cwtl
add
cmc
adcb
pop
add
or
icebp
sti
pop
insb
inc
gs
call
push
loope
pop
scas
jp
mov
iret
dec
and
jmp
jge
jl
in
sub
imul
pop
sbb
insl
icebp
aas
inc
and
adc
push
movsb
test
test
inc
int3
repz
pushf
inc
sahf
fdivr
adc
in
shll
mov
sahf
mov
mov
pop
cmpsb
in
inc
mov
out
xchg
pop
out
mov
roll
int3
mov
adc
leave
nop
push
push
jp,pn
mov
ret
dec
inc
push
addr16
data16
push
xor
es
push
shll
sbb
fstl
iret
fiadds
mov
sbb
loop
and
ret
xchg
sub
pop
cmp
std
cld
insb
ficomps
mov
mov
lods
dec
lock
divl
inc
fcompl
adc
negb
inc
inc
cmp
ds
iret
xor
dec
push
stos
loop
jne
sahf
lds
fwait
imul
xchg
mov
loope
sahf
lds
bound
int3
ffreep
repnz
mov
popa
pop
stc
sub
in
xchg
inc
enter
fs
inc
or
push
cwtl
push
sub
fwait
sarl
push
dec
dec
xor
mov
fiadds
mov
xchg
repz
jmp
cmc
or
jg
fwait
bound
jbe
clc
int
out
test
test
push
and
and
insb
mov
xlat
dec
sub
fcoml
pushf
adc
lret
adc
pop
xchg
add
pop
cmpsl
ja
clc
int3
or
and
sbb
movb
sub
push
daa
fld
sub
scas
loope
push
dec
and
enter
mov
adc
mov
popa
xor
dec
jns
push
and
push
jne
mov
test
jns
movsb
adc
ss
push
sbb
push
cmp
shll
lods
jmp
jl
xchg
call
mov
cltd
sbb
das
pop
imul
mov
enter
les
ret
sub
pop
imul
popa
into
and
orb
jo
adc
sbb
push
rcl
ljmp
mov
sub
adc
mov
cld
test
pop
jbe
mov
mov
in
je
xor
xchg
aad
jmp
mov
adc
mul
test
ss
mov
cltd
xchg
lret
arpl
aaa
repz
jle
stos
push
jno
cmp
sahf
push
out
pushf
lods
sbb
inc
in
cmp
testb
cmp
push
ret
daa
stos
jmp
cmp
mov
add
cltd
rsm
mov
pop
dec
adc
int3
sub
nop
jno
xor
popf
cmpsb
or
push
fs
imul
xor
aad
jl
sbb
xlat
lds
xchg
and
mov
shl
cmpsl
test
outsl
in
sub
and
cmp
adc
in
loop
dec
inc
outsb
sbb
rclb
nop
mov
aam
and
mov
imull
faddl
call
lods
push
push
push
pop
adc
shlb
or
or
ficomps
scas
or
test
rorl
aaa
pop
sbb
jo
les
int
xorb
and
xchg
sbb
xchg
shrl
xchg
and
nop
jecxz
test
fxch
jmp
mov
dec
dec
cwtl
pushf
xor
pop
sub
lahf
loopne
lcall
inc
or
push
stos
mov
lods
pop
dec
dec
ret
aam
lods
mov
outsb
adc
stos
xchg
lock
sbb
enter
cmpb
mov
dec
in
push
mov
rcl
push
pop
xchg
fcomi
out
or
call
xchg
ljmp
cmp
mov
fnsave
mov
inc
xchg
adc
sti
jne
push
pop
pop
ret
roll
in
inc
xor
sub
shrl
jno
pop
andb
and
mov
jg
mov
lcall
xor
dec
addr16
data16
jns
popa
dec
pop
shll
dec
gs
xchg
sbb
int3
les
push
notb
mov
cmc
mov
ret
sbb
add
in
add
clc
cmp
add
mov
pop
mov
xchg
dec
jl
insl
pushf
ds
lods
mov
std
mov
in
ljmp
xor
xchg
mov
add
mov
adc
pop
xor
xor
lods
dec
add
jne
popf
push
push
pop
or
out
loopne
xor
int3
test
push
cmpsb
fcomps
sbb
jno
jnp
div
or
adc
aaa
xchg
xchg
push
lcall
xlat
mov
cs
sbb
sahf
adc
fsub
sti
repz
push
fildl
or
pop
mov
sbb
adc
jnp
lods
int
mov
out
loop
enter
loope
push
bound
addb
loop
pop
ds
es
jmp
xchg
stos
push
adc
adc
jno
loope
loop
outsl
push
testl
rcpps
repz
call
mov
xchg
rol
scas
xchg
jmp
decl
or
jmp
xchg
loop
sub
pop
inc
add
in
mov
push
xor
xor
movsl
subb
mull
ss
aam
popf
insb
out
mov
sub
cwtl
cmp
push
sbb
fmuls
xor
jecxz
pop
shlb
dec
fmuls
movsl
mov
dec
call
xor
xchg
bound
sar
xchg
ja
or
mov
lods
movsl
je
std
pop
add
mov
int
xor
mov
js
insb
test
or
mov
and
in
xor
mov
or
inc
sahf
inc
sub
cmp
push
push
es
andl
mov
xor
loope
mov
stos
in
cwtl
pop
jb
ret
adc
sahf
mov
pop
sub
xor
sbb
lcall
popf
or
jno
orb
fdecstp
lds
mov
jmp
sar
bound
pop
ljmp
xor
ret
lahf
push
mov
gs
lret
adc
ljmp
mov
or
das
pop
out
and
adc
add
xlat
pop
and
jo
pop
fdivrl
mov
jmp
mov
stos
loopne
mov
inc
mov
pushf
jbe
loope
mov
cmp
cmp
je
push
mov
fs
iret
das
xchg
mov
pushf
scas
xchg
in
fcmovne
cmpsl
enter
pop
dec
stos
dec
jge
popl
sub
or
loop
popa
add
shlb
test
ficompl
iret
xchg
adc
xchg
fnstsw
adc
shrl
mov
mov
jb
icebp
mov
popf
fnstsw
mov
adc
inc
mov
popf
sub
popf
test
ja
pop
mov
xchg
mov
bound
bound
mov
pop
pushl
sub
fsub
jne
aad
shll
and
int3
fwait
add
mov
pop
aaa
mov
mov
std
pop
mov
cmp
mov
shlb
test
cli
xchg
into
call
loopne
jbe
int
lea
fsub
lods
in
sub
clc
sbbb
dec
pop
or
jne
dec
mov
mov
sarb
jne
mov
jp
jb
mov
and
ficoml
dec
out
lods
jbe
xorb
js
push
std
lock
adc
dec
dec
sbb
gs
stos
ficoml
xchg
pop
cli
shrb
jb
lcall
sbb
cmp
aam
lahf
lcall
and
jbe
xchg
and
outsb
adc
fcoml
bound
lea
test
xchg
mov
out
cmp
sbb
adc
les
or
mov
inc
mov
sbbb
int
insb
loope
mov
cltd
insl
inc
leave
pop
repz
test
cld
xchg
mov
mov
xchg
in
sub
lods
push
clc
loop
jbe
cmp
fisubrl
add
aam
sub
clc
and
pop
fiadds
jnp
imul
or
cmpsb
sbbl
adc
xorl
sbb
aas
pop
aad
out
mov
fisubl
loopne
mov
and
xchg
lods
repnz
out
cld
shl
adc
mov
push
pop
adc
clc
mov
mov
mov
mov
repz
mov
mov
mov
push
fldcw
test
mov
in
sbb
add
fwait
xchg
dec
pusha
mov
and
orl
mov
pop
mov
inc
mov
jnp
add
stos
in
or
jbe
mov
insl
push
out
cwtl
lods
inc
jne
fcoms
jecxz
cmp
mov
adc
in
stc
cwtl
mov
fistpl
jo
mov
mov
test
insb
lret
insb
popf
cmpsl
adc
xchg
jecxz
ja
mov
mov
push
xchg
clc
sti
stc
mov
aas
xchg
mov
xor
mov
inc
flds
daa
xor
out
fldenv
ds
lcall
sub
pop
ss
hlt
cli
xor
pop
lods
push
pop
fcomp
adc
jo
arpl
push
mov
clc
pop
inc
lock
cmpsb
aam
movsl
adc
sub
pop
adc
jno
or
and
out
scas
and
pop
mov
pushf
aaa
sbb
fucom
jp
into
add
int3
xchg
out
pop
sbbb
fwait
jg
xor
adc
pop
addr16
scas
pop
pop
mov
push
rolb
cmpsb
inc
scas
xchg
and
ljmp
lods
stos
test
and
into
hlt
scas
mov
iret
jnp,pt
sbb
rorb
mov
lods
ret
data16
sub
stc
mov
test
push
xchg
sub
mov
xchg
mov
cmpl
cmpsl
pop
ret
mov
ret
sarl
mov
mov
inc
popa
jae
pop
jno
pushl
pop
pushf
pop
push
fistpl
push
add
insb
sub
or
xor
decl
into
lahf
dec
in
inc
and
int3
lahf
ljmp
jne
add
sub
ret
add
cmpsl
stc
xor
sbb
jnp
fadd
adc
sub
adc
pusha
dec
add
pop
ds
ds
cs
cwtl
aaa
pop
fbld
in
enter
or
notb
xlat
popa
sub
imull
out
add
andb
jo
push
or
mov
inc
dec
dec
sbb
popf
jns
movsb
jg
mov
jle
data16
dec
call
stos
or
dec
test
mov
push
iret
ss
push
dec
stc
and
xorb
in
cwtl
jbe
out
cmp
inc
sub
outsl
call
adc
mov
pushf
out
mov
adc
repz
cwtl
mov
rorb
out
mov
imul
lock
push
mov
push
test
mov
pop
test
inc
test
leave
sub
lret
mov
or
adc
repz
mov
orl
in
xor
sbb
mov
inc
xchg
adc
jae
mov
arpl
arpl
in
push
fadds
stc
jmp
push
jg
jb
out
push
in
cmp
or
sahf
mov
adc
jnp
jno
sub
pop
ss
daa
call
fdivrs
or
cmpsl
popa
shr
push
and
dec
outsb
je
and
xor
push
jo
movsb
icebp
cltd
sbb
mov
xchg
popf
mov
inc
pop
fidivrl
inc
pop
nop
movsb
mov
ret
aaa
cmp
pusha
add
adc
loope
js
mov
mov
enter
lods
mov
mov
js
dec
inc
mov
mov
out
subl
shll
xchg
call
pop
cmpb
popf
pop
js
pushf
xchg
sub
cmpsb
lret
mov
jb
cmp
pop
xchg
loop
fnsave
call
xor
mov
imul
push
xor
out
cli
push
mov
or
lret
jo
aad
stc
sbb
pmovmskb
sub
pop
iret
stos
mov
mov
pop
gs
xor
pop
mov
add
fwait
mov
sbb
cld
fadds
cmpb
lods
test
addr16
and
popa
lock
out
adc
mov
js
ret
push
dec
pop
jae
idivb
cmp
or
arpl
push
adc
jl
inc
dec
adc
xchg
inc
pop
ffree
ja
pop
sbb
fsincos
imul
sbb
dec
lcall
add
repnz
mov
daa
test
xor
lock
les
push
adc
mov
rcll
mov
cmpsl
pop
mov
stos
cmp
mov
inc
sub
add
aam
jecxz
lods
mov
sub
icebp
inc
shlb
xchg
push
or
jp
idivl
repnz
mov
rol
cmpl
mov
dec
push
mov
addr16
or
insl
jmp
dec
out
cmp
subb
hlt
or
jb
fidivrs
rolb
jb
ds
push
jae
add
xor
cmp
lods
shll
jnp
sub
mov
scas
outsl
adc
pushf
dec
adc
or
mov
and
jge
cmc
out
call
add
clc
out
push
push
test
push
push
cld
xchg
movsl
xor
pop
fildl
or
lods
push
xor
shl
and
jecxz
jmp
push
sbb
push
mov
lea
pusha
ss
add
test
stos
and
or
rol
std
cli
hlt
divb
or
mov
lret
inc
add
insb
test
popf
cmc
jo
xchg
mov
add
pop
enter
insl
sub
int
xchg
inc
mov
add
arpl
mov
icebp
loop
mov
cmpb
stos
test
mov
jmp
pop
decb
pop
clc
std
test
push
or
negl
xchg
dec
push
inc
sbbb
jns
sarl
add
sahf
mov
outsb
mov
lret
mov
sub
pop
xor
loop
sbb
jns
les
nop
aad
cmp
ja
jl
push
loop
pop
imul
nop
or
mov
jno
xor
and
pop
and
aad
sti
cld
mov
lret
repz
and
pushf
mov
cmp
xchg
mov
ficomps
push
aas
cmp
aad
fcmovb
jecxz
jo
imul
out
pop
sbb
outsl
test
push
aas
xor
sub
mov
lods
outsl
cld
xor
push
dec
repnz
sbb
inc
jl
pop
mov
test
xor
cmp
popa
int3
inc
sbb
dec
and
insb
mov
pop
imul
imul
mov
clc
fcomps
xlat
inc
or
xor
sub
or
dec
jno
jo
popa
and
jae
fs
cmp
fwait
sbb
loope
adc
pop
lret
jo
push
jmp
adc
call
and
in
push
xchg
fidivrl
int
pop
adc
fdivrl
dec
jle
imul
mov
insb
inc
adcl
test
or
mov
mov
das
jae
lods
inc
imul
sbb
mov
test
fdiv
xchg
or
orb
icebp
xchg
das
adc
xor
aam
adc
jb
xchg
adc
add
and
dec
decb
imul
and
out
stos
adc
imul
adc
fs
cmp
lods
movsb
push
sti
pop
cmp
subl
and
dec
adc
or
inc
and
push
pushf
rcll
or
mov
mov
repnz
dec
jle
xlat
sub
inc
fst
sbb
sti
jg
mov
sub
shlb
mov
lret
lock
sub
fninit
mov
adc
jge
arpl
ror
cmp
leave
test
clc
cmp
sbb
insb
and
inc
fcoml
inc
and
push
xor
test
or
xor
in
iret
lcall
inc
push
and
out
sbb
fwait
sub
push
dec
aaa
ja
cmp
outsl
and
pop
mov
sub
jg
sbb
shrl
in
add
repnz
or
mov
test
ret
les
mov
vmaxpd
sti
das
lods
rol
leave
xor
mov
or
mov
lcall
mov
pop
fwait
testl
or
lret
push
push
imull
sbb
dec
or
js
scas
jle
js
rorb
lods
aad
cli
push
adc
sbb
and
xchg
cmp
jns
dec
or
jl
cmpsb
push
xor
clc
popa
push
int
pop
xor
in
mov
adc
add
data16
ja
enter
xlat
inc
fucomi
or
push
addr16
adc
xor
repz
xchg
imul
aaa
into
sbb
lds
sub
xchg
cld
jp
adc
inc
pop
pop
stos
inc
cmpl
push
pop
cmp
add
divb
inc
mov
xchg
sarl
rolb
bound
not
insb
hlt
cmp
fnop
jl
cld
cmpsl
mov
sub
push
fidivrs
fwait
call
jecxz
lods
or
repnz
inc
orb
push
and
xor
or
loopne
popf
in
cmpsb
sti
fbld
xlat
xchg
xchg
in
or
clc
das
push
adc
adc
xor
mov
scas
shlb
mov
dec
aam
ret
pop
mov
cltd
sub
out
xchg
lods
xchg
sarl
cmp
mov
rcrb
xor
outsl
push
outsb
leave
push
test
stos
iret
fstpt
pop
addr16
xor
pop
dec
and
mov
test
enter
push
jnp
sub
and
sbb
push
push
stos
fs
and
mov
rcrl
sub
out
cmp
mov
or
repnz
jp
jg
pushf
fwait
ret
push
lds
add
in
daa
sbb
and
pop
inc
fistpl
out
cltd
mov
mov
or
jnp
js
mov
test
mov
dec
das
pusha
push
cmp
or
jne
in
push
adc
in
cmp
mov
loope
mov
add
xchg
divl
jg
sub
cltd
and
sti
insl
mov
mov
popaw
mov
fcmovbe
pushf
mov
imul
rorb
jae
iret
sub
lock
sbb
jle
mov
pop
mov
les
xchg
push
adc
or
scas
jae
ret
xorl
push
fwait
shlb
xchg
aam
mov
add
mov
or
ret
pop
out
and
push
pop
roll
nop
mov
ret
add
inc
idivl
mov
add
xchg
ss
test
out
jb
repz
xlat
ljmp
mov
or
dec
adc
mov
arpl
sbb
cs
mov
add
cs
cmpsb
mov
std
inc
call
pop
je
leave
test
in
mov
xor
rclb
mov
adc
xchg
test
adc
pop
iret
shll
add
imul
dec
lds
stos
shrb
add
jae
ljmp
icebp
mov
pop
fisttps
movsl
fcmovbe
pop
xchg
incb
pop
mov
cmpl
xchg
std
andl
pop
dec
insb
rorl
aam
insb
inc
outsb
sub
mov
movsl
bound
call
xchg
dec
pop
adc
daa
movsb
xlat
andb
pop
push
test
sbbb
pop
in
sub
mov
lods
and
outsb
mov
rcrb
test
push
lret
out
cmpl
dec
dec
shrb
idiv
outsb
lret
jbe
ljmp
dec
cmp
inc
call
adc
xchg
divl
mov
mov
mov
outsl
jecxz
pop
int
or
shll
ljmp
cltd
lea
pop
add
mov
dec
xchg
add
mov
mov
mov
and
mov
push
xor
arpl
repz
idiv
dec
stos
xchg
pop
mov
insl
and
sti
inc
adc
stos
sub
fcoml
jge
add
cmp
mov
add
roll
sub
test
xlat
sti
aad
pop
rcrl
pop
push
push
fidivl
jl
aad
pop
bound
mov
in
jnp
mov
xor
push
loop
mov
adc
sub
push
in
aad
sub
jecxz
mov
add
test
sti
call
mov
inc
jge
loope
mov
inc
push
or
ds
cmpsl
dec
stos
ss
cmc
mov
cltd
subb
movsb
cltd
in
inc
pop
jle
or
adc
repnz
in
into
movsl
jl
jmp
dec
mov
int3
add
or
mov
adc
jmp
sar
mov
fstl
test
ficoms
cmc
dec
xor
dec
stos
addl
mov
popa
pop
inc
shl
xchg
push
hlt
sbb
in
jns
sti
xor
rorb
pop
add
popf
push
dec
dec
ljmp
sbb
dec
movsl
and
stc
ret
out
das
push
inc
jle
daa
pop
mov
xchg
loop
hlt
lret
sub
in
sbb
mov
mov
pop
mov
icebp
pop
iret
xor
mov
push
aad
imul
stos
shrl
repz
sbb
dec
xor
frstor
push
std
adc
xchg
shr
xchg
xchg
mov
push
jge
ja
and
daa
fmul
and
fbld
sbb
hlt
cli
roll
sbb
ljmp
imul
xor
call
pop
push
fimuls
add
mov
cwtl
add
and
pushf
lahf
cmp
or
pop
pushf
in
sahf
movsl
pop
roll
addb
ljmp
and
sub
movsb
pop
lcall
push
add
insb
aad
adc
leave
fmul
mov
lret
lahf
ret
inc
or
mul
clc
aam
pop
push
cmc
daa
lods
xchg
pop
add
push
and
mov
fbstp
in
adc
or
shll
popf
ret
std
addr16
ja
push
jmp
in
xchg
inc
cmpsl
push
nop
out
or
imul
cmp
out
dec
xorb
push
lret
in
lods
cmp
mov
mov
xchg
jg
in
loope
aam
cmp
mov
jmp
sbb
mov
adc
loope
outsb
loop
iret
jnp
aam
out
mov
test
dec
fnsave
sbb
or
lcall
ficompl
jle
xchg
icebp
fidivrl
or
gs
push
aam
xchg
mov
xor
dec
inc
or
mov
add
cmp
or
jmp
adc
scas
adc
xchg
cmp
or
lret
xchg
stos
jbe
loopne
push
cmp
push
std
arpl
shlb
push
inc
xchg
cs
pop
call
or
rorb
push
fstps
out
jo
mov
cld
push
push
repnz
mov
sbb
fstpt
imul
stos
leave
cmpsb
js
and
mov
mov
cs
inc
mov
and
cmp
nop
and
clc
std
dec
jns
mov
lds
sbb
negb
push
jbe
out
arpl
jo
adc
jmp
cli
pop
dec
add
push
lret
jle
lret
push
fldt
loope
scas
jl
sub
xlat
add
or
add
mov
lcall
cmp
sbb
mov
out
fldenv
test
cltd
pop
jmp
adc
aas
and
fimuls
add
aam
cmp
addl
arpl
and
lds
jge
or
jg
or
sub
fimuls
xchg
fistl
jno
jo
add
push
imul
cmp
lret
xchg
or
fimull
or
xchg
pop
lock
loopne
or
enter
shlb
fists
mov
popf
push
jne
lock
mov
xchg
popf
loop
pop
cwtl
inc
out
pushf
and
and
push
addr16
mov
add
inc
lret
les
mov
inc
sti
inc
add
sub
jmp
cmpsl
or
ret
inc
mov
test
outsl
adcb
pop
cltd
fwait
cs
aam
fdivrl
adc
jne
lcall
movsl
push
xor
cmp
int3
out
nop
inc
add
cmp
jo
sahf
pop
ficompl
bt
and
or
push
pop
xchg
lahf
sti
xor
add
hlt
push
mov
add
or
xchg
mov
cmp
sbb
mov
scas
mov
out
divb
arpl
add
divl
shll
mov
dec
and
add
push
xchg
aam
mov
jle
push
inc
push
ja
ret
push
mov
mov
add
mov
jno
push
cmp
xor
xchg
sahf
mov
out
jno
scas
xchg
leave
add
pusha
jge
xchg
jmp
xor
mov
sub
sbb
ds
inc
fcomps
mov
shlb
jmp
xor
push
pop
or
sbb
es
push
sub
nop
mov
shr
fs
aas
mov
js
xchg
lods
and
packsswb
jp
movsb
out
xchg
jmp
enter
test
xchg
fiaddl
into
adc
gs
int3
inc
mov
jnp
jmp
test
push
pop
nop
inc
jno
mov
sbb
movsb
aas
inc
iret
mov
and
mov
xchg
jae
push
clc
out
mov
lods
shrb
rorb
or
scas
xchg
inc
ljmp
dec
addr16
mov
pop
cmp
xor
fdivl
testb
push
cmp
inc
jno,pt
outsb
pop
jnp
push
and
sbb
mov
xchg
add
jo
mov
popf
movsb
fsubr
insb
scas
int
adc
fwait
call
pop
inc
cli
xchg
inc
decb
mov
sub
int
movsl
lods
mov
aam
xchg
aas
es
mov
movl
rcr
sbb
call
or
or
and
aaa
mov
mov
push
and
sub
xor
and
iret
xchg
sti
pop
push
repnz
lret
scas
test
dec
xchg
inc
inc
xor
fmull
rolb
mov
ficoms
mov
mov
push
hlt
fildl
xchg
push
aaa
lcall
mov
out
mov
int
into
or
or
mov
jo
es
sahf
test
rcrl
std
mov
rorl
popl
mov
outsl
sub
js
adc
test
lods
mov
rol
mov
or
rclb
or
jne
out
or
cltd
inc
jmp
aam
and
mov
dec
mov
cmp
xchg
sti
test
push
or
inc
push
cwtl
mov
adc
lea
dec
out
jbe
test
mov
mov
mov
or
adc
lret
pop
pop
ss
sub
leave
mov
pop
and
push
imul
ja
mov
lret
faddl
daa
or
mov
rclb
inc
jne
daa
adc
not
jb
aad
mov
pop
ret
mov
mov
dec
mov
and
sbb
add
sti
pop
test
mov
pop
inc
faddl
xor
jns
call
sub
mov
jg
les
xchg
push
jg
pop
icebp
enter
push
mov
fwait
dec
mov
scas
out
sub
fimull
icebp
popa
outsl
push
cmc
or
adc
int3
int3
cwtl
icebp
out
mov
jae
sbb
es
mov
cmp
mov
push
movsb
inc
cmp
shlb
inc
jnp
push
jno
sub
and
mov
fistps
jge
sbb
fsubrl
ds
loope
fistl
ja
mov
popf
push
stos
cmp
pop
xchg
sub
inc
add
js
pop
int3
negl
mov
sub
lods
pop
dec
fnstsw
inc
loopne
in
dec
loopne
add
arpl
adc
add
xchg
repz
push
pop
mov
sbb
cld
mov
icebp
pop
sbb
lea
lock
or
hlt
cmc
popf
mov
test
adc
cmp
xor
xchg
insl
fwait
mov
mov
pop
out
les
loopne
repnz
std
aas
jg
mov
inc
outsl
aaa
loopne
cld
adc
scas
loopne
lods
cltd
dec
sub
xlat
icebp
popa
inc
dec
scas
sub
lea
inc
stos
inc
pushf
test
mov
dec
mov
inc
bound
sub
stos
out
rcrl
lock
imul
rolb
sub
adc
dec
cmc
stos
cmc
mov
inc
sbb
pop
adc
clc
in
lret
clc
and
xchg
sbb
shll
pop
adc
repz
pop
pop
loope
inc
inc
push
push
std
loopne
sub
rcrl
cmc
rorb
sarb
imul
jecxz
addr16
mov
inc
arpl
sbb
jge
data16
jmp
and
sub
cmp
dec
push
outsl
outsb
push
pusha
push
test
jo
jp
into
bound
insl
add
xor
aad
stc
and
and
ds
inc
push
fs
outsl
dec
jl
fs
dec
cmp
push
rcrl
mov
fistps
push
movsl
out
push
pop
call
dec
add
mov
insb
fwait
jae
fcmovne
dec
jecxz
jg
push
sti
data16
shll
mov
cmp
sub
test
movsb
xchg
scas
add
and
xchg
idiv
jns
xchg
testl
dec
imul
or
lcall
es
cwtd
pop
scas
pop
push
cmp
es
xchg
fisttpll
dec
mov
cltd
test
sbb
jb
call
push
jns
notl
test
lcall
jnp
jmp
outsb
sub
out
push
cltd
dec
outsb
push
mov
mov
rolb
push
scas
aas
cmp
mov
mov
dec
sarb
mov
mov
push
add
imul
ss
mov
adc
sub
xor
and
xchg
xlat
mov
pop
int
ljmp
sub
inc
and
rcll
sbb
mov
repnz
stos
imul
int
and
jne
pusha
fnstsw
aad
faddp
push
xchg
cmpsl
ljmp
cmp
out
add
jl
jmp
dec
pop
and
mov
cmp
cs
xchg
lcall
iret
shll
hlt
mov
loop
mov
repz
jle
out
push
ljmp
mov
inc
adc
adc
cwtl
inc
in
mov
push
and
pslld
mov
dec
sti
mov
inc
out
push
dec
mov
xor
popa
jns
ds
data16
xchg
test
xchg
pusha
fldt
dec
iret
push
notl
and
shlb
and
jb
push
lods
ljmp
cmp
lods
fisubrl
mov
xor
mov
lcall
sbb
inc
insl
in
movl
mov
bound
xor
repz
xchg
add
sub
mov
xchg
es
and
inc
in
mov
aas
jmp
cmpsb
aas
insl
shrl
imul
pop
jne
mov
lret
pop
pop
mulb
jno
jmp
xchg
adcl
add
hlt
call
sbb
test
dec
test
inc
push
in
out
dec
test
cmpsl
in
mov
cmp
push
gs
sbb
test
mov
xor
mov
orl
aad
jg
mov
leave
cmp
sbb
sub
jge
add
loopne
mov
xchg
js
mov
mov
imul
jle
loopne
lret
fcmovnu
cmp
mov
sti
rcrb
inc
dec
cmp
sub
int3
cwtl
cli
inc
fisubrl
sbb
test
xchg
push
inc
inc
loopne
pop
sub
out
push
pop
mov
rcrb
cmp
add
xchg
sub
fldl
ljmp
notl
sbbl
inc
dec
or
pop
in
roll
or
dec
jbe
mov
lods
mov
daa
cmpsl
sahf
pop
mov
push
data16
cmp
sub
add
adc
mov
or
clc
pop
bound
jecxz
idiv
inc
jo
mov
sbb
push
mov
outsl
adc
pop
sub
mov
and
addr16
push
loop
xchg
adc
xchg
pop
jnp
test
xlat
out
pop
insb
test
sbb
cltd
loop
mov
mov
push
data16
dec
lods
ss
inc
je
push
test
push
das
cli
ficompl
inc
loope
js
pop
stos
test
insl
jge
jecxz
push
es
adc
push
mov
adc
arpl
cmpsl
jp
dec
push
divl
xor
and
pop
jl
clc
add
add
in
mov
jecxz
push
add
jle
jmp
add
fwait
lds
shrl
aad
jecxz
xor
inc
cmp
fstpt
xor
cmp
push
sub
gs
sub
rcrl
in
sub
shrl
sbbl
test
hlt
xchg
cmp
cmc
lcall
pop
aas
sete
pushw
call
sbb
sbb
mov
mov
xchg
xchg
icebp
cmp
jmp
stc
and
js
pop
sbb
and
sub
push
xchg
push
subl
out
pop
cmpsb
sbb
push
push
xchg
int3
sub
mov
lods
cmp
in
je
outsb
dec
popa
sahf
out
std
enter
jns
cmp
push
xchg
repnz
push
into
and
push
adc
cwtl
js
iret
rcl
leave
jbe
out
mov
push
repnz
test
in
cltd
lret
repnz
adc
insl
xor
and
aam
fcoms
int
pop
xor
xchg
cmc
stc
add
and
and
div
aam
fwait
mov
push
fcompl
rolb
int3
dec
subl
test
inc
in
cli
push
or
outsl
fimuls
cmpsb
mov
fs
andl
push
pop
loopne
dec
and
gs
mov
shl
in
fwait
stos
add
fwait
jb
dec
mov
movsb
rcr
outsl
dec
adc
xchg
push
jmp
stos
test
pop
mov
or
dec
pop
pop
mov
dec
add
cmp
test
mov
add
pop
dec
push
xor
sbb
mov
shl
cmp
fstpt
jmp
jno
aam
lods
leave
fucom
jmp
test
or
xor
add
fxch
int
mov
cld
ret
std
lret
pop
fistpl
and
mov
in
dec
xor
loop
push
jp
mov
cmpsl
push
mov
jo
sub
dec
clc
mov
inc
and
and
cli
lret
mov
sbb
add
adc
in
icebp
js
in
js
inc
loope
das
adc
pop
adc
pop
fistpl
sbb
pop
in
xlat
jne
mov
xchg
divl
cmp
cli
sbb
mov
push
jg
mov
jbe
aas
test
jne
mov
mov
fwait
cmpsl
cmp
or
jno
fwait
in
fadds
and
pop
sahf
sti
sub
int3
sti
or
int
out
aaa
push
xchg
rol
or
test
mov
mov
popf
inc
lcall
lret
test
rorl
sub
popa
data16
mov
outsl
sti
lock
subb
or
negb
mov
lods
aam
imul
sbb
add
add
leave
mov
push
sar
pop
es
inc
aam
int3
mov
flds
addr16
and
mov
and
jp
push
mov
pop
jecxz
into
xor
test
push
xchg
lods
cmp
and
shll
cmpsl
lods
fidivs
jl
in
enter
js,pn
cs
sub
insb
and
or
pusha
cwtl
push
fsubrs
fdiv
imul
sahf
push
repnz
shl
fcmove
leave
mov
push
mov
adc
push
std
iret
ret
push
or
lds
mov
dec
push
add
mov
push
icebp
daa
dec
bnd
stos
sbb
call
xor
lcall
sarl
cmc
and
xor
shl
sub
cmc
mov
scas
cmpsl
fiaddl
lods
inc
lret
xchg
and
pop
cmp
xchg
fcoms
xchg
push
sub
xor
pop
int
sub
pop
cld
jecxz
pop
mov
push
repnz
nop
pushl
test
or
cmp
mov
outsb
outsl
scas
xor
rcr
lahf
in
insb
jb
clc
sub
cmpb
adc
inc
out
or
sbb
hlt
mov
mov
xchg
sti
cmp
lret
or
xchg
or
inc
jno
pushf
in
popa
shl
leave
mov
inc
inc
in
fs
stc
mov
pusha
or
test
push
andnps
aaa
cmp
ss
aaa
jns
cbtw
pop
mov
mov
or
int3
mov
inc
jo
lahf
dec
xor
out
addr16
push
gs
stos
shll
mov
add
cli
add
faddl
sbb
ds
test
push
cwtl
inc
cs
pop
popf
int
add
push
rcll
mov
mov
js
shrl
fnstsw
jp
scas
or
ret
aas
cmp
mov
adc
pop
imul
test
nop
incl
jnp
mov
dec
xorb
sahf
or
je
test
mov
mov
sub
or
scas
dec
cli
jp
lret
out
jns
jl
fs
mov
push
push
mov
sbb
fldt
sbb
lahf
fs
or
cld
add
cld
in
pop
push
mov
add
jecxz
jle
flds
fisubrs
rcrb
fst
mov
inc
mov
lret
testl
cs
inc
mov
fcomps
lret
jae
sub
mov
mov
mov
mov
loop
std
add
mov
push
stos
data16
jg
push
fcompl
ja
frstor
cli
inc
add
cwtl
and
inc
jge
mov
lahf
dec
cmp
ja
and
jle
dec
mov
insl
insl
xchg
lods
aas
stos
cli
pop
insl
outsl
pusha
cmp
loopne
enter
xchg
shr
subl
and
fs
mov
loope
sbb
push
lret
xor
pop
popf
aaa
ja
fstpt
mov
testl
sbb
inc
mov
cmp
cmp
add
data16
pop
insl
dec
sbb
popa
mov
xlat
add
dec
stos
inc
push
nop
dec
daa
sbb
xor
dec
cs
icebp
sti
fdivr
fsubr
filds
jp
adc
mov
stos
aas
dec
in
lret
inc
aam
ljmp
push
addl
xor
shll
nop
cmp
lock
lcall
mov
aad
scas
jne
out
cmp
cmc
test
mov
popf
mov
jecxz
mov
sbb
fwait
adc
mov
jle
and
int3
loope
sub
inc
sub
lret
push
pop
jb
fdivrs
mov
cmp
push
lret
mov
insb
jp
adc
lcall
push
cmp
sbb
xchg
pushl
in
inc
dec
psubb
sbb
mov
push
movsl
mov
and
and
cwtl
mov
in
inc
outsl
call
push
cmpsl
pop
cltd
popf
aas
les
pop
sub
insb
in
loopne
mov
shll
xor
repz
iret
lods
cltd
jp
xchg
test
sbb
rcr
and
pop
dec
xorb
xchg
flds
add
dec
sbb
and
pop
xchg
fcompl
dec
cwtl
jne
xchg
out
scas
shrb
stos
or
bound
lds
sahf
dec
and
ja
mov
addb
xlat
jo
pop
hlt
rcrl
xchg
mov
sti
cmp
jl
adcl
and
add
daa
ja
stos
adc
prefetch
or
cmp
jmp
out
cmp
sbb
cmpsl
and
inc
adc
mov
int3
jle
in
mov
cli
cmp
mov
mov
out
outsl
popa
adc
mov
cmp
cli
rolb
movsb
dec
xor
cmp
and
insb
movsb
mov
pop
mov
push
mov
test
mov
dec
jl
inc
in
mov
ss
xchg
dec
popf
stc
xchg
sbb
jge
ja
pop
je
sbbb
in
cmp
in
and
insb
pop
rorl
nop
jge
mov
jae
out
cli
leave
stos
es
push
mov
stos
cmpsb
leave
hlt
js
stc
cmp
ret
and
ret
insl
push
and
cmp
pop
aaa
cwtl
sbb
mov
lcall
xor
mov
in
sbb
xchg
dec
out
jl
dec
mov
or
inc
nop
ja
push
jl
or
cmp
push
add
imul
dec
bound
test
iret
mov
inc
cmpb
movsl
push
js
add
loopne
int3
cmpsl
popa
cmp
cmpsb
lods
movsl
sub
add
mov
add
sbb
xchg
hlt
mov
in
push
clc
sub
leave
adc
iret
push
lret
loop
jle
pop
sysenter
cmp
adc
sbb
cld
fistl
xchg
mov
out
mov
mov
jnp
jbe
fcmovb
push
clc
into
subl
inc
push
movsb
mov
imul
xorb
pop
in
lock
in
mov
lgs
xchg
mov
into
or
mov
ds
outsb
nop
psubsb
dec
aad
insb
inc
sub
lds
cli
adc
mov
arpl
je
repnz
xchg
cmp
xor
pop
mov
daa
sbb
xchg
pop
push
and
jl
sub
andb
les
mov
repnz
dec
ret
mov
iret
mov
inc
fdivrl
test
js
adc
fwait
aas
fcom
xchg
fs
dec
jne
and
repz
mov
xlat
cmp
push
and
push
inc
adc
mov
cltd
outsl
loope
xor
nop
insb
ja
shlb
or
lods
mov
testl
les
and
cmc
outsl
hlt
mov
aaa
pusha
aaa
jbe
cmp
sbb
int
adc
mov
lock
andb
xlat
dec
push
jge
cmc
mov
bound
jmp
test
flds
lret
fbld
mov
sti
cmp
mov
xchg
push
jnp
jmp
xchg
std
mov
in
movl
adc
xchg
adc
rcrb
decb
mov
pop
cwtl
mov
pop
fwait
push
inc
sbb
xchg
mov
cltd
cmpsb
jle
xchg
cld
mov
sti
xchg
xchg
inc
out
imul
imul
and
iret
push
inc
arpl
add
outsb
push
or
ljmp
jp
mov
popf
sub
fdivrp
loop
aas
inc
jge
movsb
int
cmpsb
mov
aam
mov
mov
and
loop
test
and
cs
aaa
adc
push
int3
push
jb
iret
sbb
xor
cmpsb
jne
movq
lret
push
setae
inc
lret
or
add
sarl
dec
loopne
icebp
jno
aad
dec
cwtl
xor
pop
repz
adc
mov
rorb
jb,pn
or
dec
mov
sbb
adc
in
mov
dec
loope
add
mov
out
add
sub
shrb
hlt
inc
test
ds
cmp
mov
dec
int
pop
je
adc
cmp
mov
fucomi
incb
pop
pop
pop
clc
pop
add
and
mov
je
popa
jae
dec
and
sti
sub
loopne
pop
sbb
dec
std
add
inc
outsb
lods
lcall
imul
mov
fdivrp
mov
push
mov
insb
insb
cmpl
cmp
ds
movsb
hlt
jae
arpl
out
push
int3
cwtl
loop
mov
or
pop
test
push
cld
and
sbb
xor
sbb
lcall
sub
or
jge
mov
xor
sub
mov
mov
sub
mulb
popf
test
pop
mov
fnstenv
xlat
and
std
cld
ret
and
push
mov
xchg
mov
jbe
add
test
icebp
mov
and
div
or
lss
inc
rcr
mov
int
insb
mov
mov
aam
and
fsubrl
push
dec
adcb
and
cmp
sbb
int
jl
enter
popf
fisttpl
mov
lods
aam
test
and
out
mov
cmpl
ret
dec
mov
rolb
clc
test
jns
subl
lahf
wrmsr
cmp
dec
xchg
ret
cmc
aad
es
inc
insb
cmp
pop
dec
pop
mov
lahf
push
loope
loop
popa
popa
push
iret
pop
andb
or
leave
test
cltd
xlat
mov
or
and
cli
mov
jmp
mov
test
outsl
jge
lcall
das
mov
out
mov
sub
outsl
addr16
sub
inc
mov
dec
addl
mov
and
out
add
mov
sarl
mov
mov
lods
mov
fmull
lods
sub
or
mov
and
dec
rorb
jecxz
test
cmp
lcall
sub
cmp
and
ss
out
aad
xchg
mov
and
test
outsl
sbb
push
inc
push
inc
adc
mov
pop
pop
sarb
pop
sarb
mov
cmp
imul
mov
add
add
fs
jl
fcoml
adc
pop
mov
xchg
jle
sub
xor
hlt
sub
into
imul
and
fadds
or
pop
es
jge
scas
adcl
push
dec
or
mov
jno
out
pop
cmp
jns
cwtl
mov
xlat
mov
and
jbe
imulb
pop
adc
push
jbe
mov
mov
outsl
gs
sub
mov
and
add
xor
mov
aam
in
pop
out
mov
fstp
pushl
ret
in
outsl
in
mov
add
lods
and
stos
adcl
das
inc
jl
daa
pop
shlb
add
stos
clc
sub
pushf
divl
dec
add
inc
mov
add
mov
rorb
addr16
ss
xchg
pop
mov
popa
outsl
in
jo
cmp
cmpsb
sub
pusha
inc
lcall
jp
lods
bound
insl
test
mov
sbb
outsl
push
jb
push
add
jnp
pop
fs
mov
add
sbbb
push
or
cli
mov
pushf
cmp
sahf
push
imul
testl
push
sbb
dec
mov
mov
je
sub
sti
int
cmp
pop
cmpsl
pop
push
mov
push
in
jno
cmp
pushf
add
out
lds
jg
jg
in
push
lcall
sub
pop
and
jp
dec
and
jbe
in
sbb
das
pop
ficompl
movsl
xchg
xor
aam
lcall
or
pushf
testb
arpl
mov
sub
mov
shlb
push
sbb
jg
shll
call
xor
xchg
and
notb
cmc
inc
outsb
xor
sahf
aas
je
subb
push
imul
popa
jne
mov
jmp
mov
or
inc
adc
cmp
ljmp
jb
sub
push
adc
dec
sbb
push
add
lock
cmpsb
lds
jge
pushf
pusha
data16
pop
sbb
and
xchg
pop
shrb
jne
sub
add
inc
in
sarl
jle
frstor
loop
cmp
aad
fstpt
mov
scas
stos
mov
mov
jmp
pusha
mov
dec
jmp
push
or
xchg
nop
cli
add
xor
dec
and
inc
nop
fmul
xor
outsl
std
inc
xchg
xchg
or
jmp
push
in
inc
mov
xor
movsl
icebp
and
sub
pop
ja
xor
add
sbb
adc
pop
dec
shlb
adc
inc
mov
mov
lahf
icebp
add
shll
mov
mov
dec
inc
iret
test
cmpsl
and
xor
outsl
dec
popf
icebp
hlt
cmp
dec
mov
jmp
loopne
out
sahf
xchg
clc
push
jmp
ds
mov
pop
xchg
push
sbb
test
cmpsb
jge
xchg
push
push
pop
in
repz
sub
push
sub
insb
arpl
sbb
xchg
jge
pop
xor
and
stos
cmp
jbe
or
add
mov
pop
push
sahf
lret
fucomi
mov
int3
pop
out
repnz
push
xchg
mov
out
or
xchg
scas
mov
jge
dec
mov
lods
aam
outsl
pop
jae
lret
add
jmp
dec
sub
inc
or
inc
xlat
fbstp
mov
fisubrl
sub
and
jb
dec
jne
adc
cmp
es
inc
ficompl
jp
or
fstpl
and
je
rolb
flds
mov
rcr
in
das
push
inc
xor
and
mov
and
sub
jl
jg
popf
push
inc
mov
jl
and
insl
push
jne
sbb
sub
dec
cltd
mov
ds
sbb
mov
les
aaa
call
daa
push
sub
addr16
leave
or
ja
xor
cmp
stc
and
cmp
insl
push
cmp
add
or
push
ret
mov
dec
mov
push
cmp
ret
sub
xlat
nop
mov
xchg
lcall
dec
hlt
dec
cmp
orb
cbtw
test
roll
dec
jge
jne
fs
cmpb
xor
push
add
in
jb
mov
mov
lret
sbb
push
popl
leave
stos
addr16
in
cmp
js
insl
and
sbbl
in
mov
mov
in
xlat
dec
and
invd
stc
es
pop
mov
aaa
in
into
pop
aas
adc
lds
daa
pushf
and
or
lods
jg
inc
dec
gs
lods
insb
cwtl
sub
cmp
sbb
pop
int3
or
xchg
or
push
hlt
mov
mov
sbb
xchg
dec
inc
dec
dec
inc
fsubl
push
push
sub
mov
push
mov
cld
lds
nop
mov
outsl
cmpsb
or
jbe
jle
adc
ss
add
jo
out
cmp
es
adc
add
xlat
inc
push
add
inc
popa
ret
fwait
int3
mov
repz
stos
jle
or
mov
xor
jecxz
stc
xor
cmpsb
mov
fmul
idivl
cmp
pop
stos
push
aas
pop
pop
in
jle
out
and
adc
cltd
ror
sub
lock
mov
daa
or
xor
fs
inc
jmp
push
test
mov
out
in
sbb
mov
inc
adc
adc
decb
mov
lods
add
xlat
clc
xchg
imul
mov
mov
push
xchg
xchg
shr
dec
add
push
xor
or
jns
je
adc
lcall
adc
repz
fldl
push
dec
jge
or
ja
jbe
dec
ja
dec
pop
pop
sar
adc
add
mov
sub
loop
xor
and
sub
pop
dec
pusha
or
sbb
dec
xor
icebp
push
and
and
xchg
mov
push
and
int
inc
lds
lods
dec
xchg
pop
mov
sbb
fistps
ret
mov
idivb
loopne
sbb
fistpl
gs
bound
test
mov
or
arpl
pop
enter
outsb
xchg
add
xchg
adc
imul
jns
add
in
jg
leave
int
fcompl
fcomps
mov
sbb
adc
data16
add
sarb
push
into
inc
push
test
imul
out
mov
push
iret
mov
lods
sbb
dec
cmp
test
mov
shrl
xlat
inc
xor
daa
sub
inc
in
pop
push
aad
or
mov
cltd
fnstcw
pop
into
pop
adc
mov
orb
sbb
cmpsb
adc
sbb
dec
lock
sbb
negb
cmp
mov
add
pop
sbb
xor
pop
popa
hlt
xchg
push
mov
outsb
mov
push
stos
dec
push
xor
inc
inc
dec
shlb
ja
ret
sbb
and
push
std
loopne
jecxz
dec
insb
gs
in
out
dec
and
hlt
fstpl
dec
jle
jg
sub
add
dec
insb
mov
cmp
jnp
push
cs
ljmp
inc
sub
imul
pop
sarb
mov
and
jne
cld
pop
mov
loope
sub
pop
mov
xlat
sti
or
mov
int
mov
out
adc
aam
or
fnstcw
adc
imul
dec
add
mov
pop
xchg
cltd
xchg
filds
dec
jle
adc
mov
out
insl
mov
mov
test
sbb
repnz
xchg
jge
sbb
ds
or
add
outsb
or
rolb
call
sub
lods
jo
inc
jecxz
dec
ja
adc
mov
mov
dec
add
xchg
or
addl
les
and
les
or
ss
fwait
mov
jl
lret
dec
adc
nop
arpl
rcrb
cmp
in
leave
pop
pop
es
cmpsl
sbb
xor
push
adc
lock
jecxz
stos
jg
inc
jae
insl
sub
mov
push
push
dec
repnz
mov
leave
stos
sub
into
inc
enter
sbbb
mov
int3
mov
stos
xor
ds
test
daa
cmp
cmp
fcmovb
imul
roll
das
int3
cmp
add
xchg
popa
mov
jo
jl
hlt
rol
repnz
fmuls
dec
dec
aad
cmp
leave
add
inc
mov
out
pop
movsb
fcoms
das
clc
out
pop
mov
fcoms
repnz
fmull
mov
jmp
jo
sbb
stos
add
jg
fcmovbe
xchg
adcl
sbb
sahf
push
xor
cltd
stos
dec
out
push
mov
imul
cmp
mov
push
cmpsb
iret
fisttpll
sub
out
les
cmpsb
pop
icebp
lods
jmp
adc
xchg
xchg
sub
insl
aaa
icebp
jmp
push
cmpsb
mov
mov
sbb
xchg
fadds
jnp
push
leave
lahf
add
xchg
mov
ja
test
jmp
sub
lock
sbb
adc
adc
jb
cli
insl
pop
orb
clc
xchg
movsl
pop
mov
clc
jg
push
cmp
test
sti
mov
push
or
push
mov
sub
adc
mov
shll
jmp
pop
test
pop
cmp
pop
andb
xor
mov
xor
iret
jae
mov
fdivr
pop
fwait
mov
jo
aam
stos
adc
inc
dec
mov
insb
rorb
test
data16
and
jne
cs
cmp
int3
or
decb
arpl
rorl
rcl
add
adc
push
sbb
lods
xchg
cs
mov
mov
mov
enter
cli
dec
ss
fdivrs
fwait
mov
mov
cmovg
outsl
cmpsb
les
ror
cmp
mov
xchg
and
sub
pop
dec
leave
add
mov
jne
push
pusha
insl
add
pop
insb
lcall
stos
and
cmp
xor
push
shlb
clc
js
into
mov
mov
push
outsb
arpl
add
dec
shrl
cs
jno
xchg
test
bnd
sbb
or
cli
adc
sub
ss
jno
add
mov
imul
push
test
adc
mov
push
mov
imul
pushf
dec
cld
out
aaa
mov
imul
dec
scas
js
nop
jns
cltd
aad
fmulp
repz
pop
outsb
hlt
sbb
mov
push
les
push
imul
fcompl
nop
jmp
cli
pop
mov
mov
addr16
cmpl
test
and
xchg
in
push
lahf
fiadds
pusha
dec
rolb
sub
loopne
test
addr16
repz
fcoms
push
lret
clc
cmp
loop
inc
lcall
mov
pushf
test
xchg
cmp
or
in
data16
sbb
add
das
imul
cmp
imul
jne
add
dec
notl
jl
mov
lock
adc
mov
bound
out
add
outsb
int3
mov
dec
mov
xchg
add
lcall
mov
flds
mov
js
and
call
add
xchg
or
out
xorb
pop
dec
scas
add
mov
cld
inc
pop
sub
adc
adc
xor
out
add
or
mov
inc
loop
mov
psubusw
xor
push
jno
sbb
movsb
xchg
fdivrl
xchg
or
inc
sbb
arpl
popf
out
addr16
dec
in
add
xlat
pop
aaa
sub
das
mov
and
inc
sub
ss
jo
addr16
xor
cs
push
pop
enter
test
inc
mov
and
inc
loope
popf
cmp
stos
das
pop
test
mov
iret
jg
inc
jp
imul
jne
xor
sahf
inc
arpl
cli
jg
mov
or
aas
dec
mov
mov
inc
icebp
shll
fimull
shrb
xchg
fcom
dec
test
and
scas
mov
mov
mov
rolb
cld
cmp
cwtl
inc
fimuls
push
or
pop
enter
jle
or
roll
push
test
out
and
mov
inc
and
mov
mov
lea
mov
popa
pop
aaa
lock
pop
enter
mov
aam
or
push
out
mov
and
sub
xchg
das
sbb
sti
outsb
stos
shr
int
jnp
mov
jo
pop
jge
jg
loopne
lods
addr16
je
in
push
xor
mov
adc
inc
mov
push
sub
or
ret
cmp
fidivs
arpl
mov
shlb
inc
and
cmp
adc
sub
ror
mov
sbb
push
push
jle
or
mov
ret
dec
jb
rcrl
mov
data16
mov
aam
in
repnz
push
jns
inc
clc
pop
sbb
in
sub
or
pop
je
and
push
icebp
pop
sub
aad
and
lods
sbbb
lods
adc
test
push
dec
out
test
ljmp
push
pop
xchg
adc
cmpsl
insb
scas
je
lcall
push
js
jne
jns
lret
mov
xorps
fsubl
cmpsb
inc
or
mov
dec
mov
aas
push
dec
sub
jne
dec
jmp
mov
shl
pop
ret
xchg
aaa
pop
mov
push
outsb
bound
inc
sub
cmc
in
cld
adc
xchg
sub
pop
dec
or
lcall
sbbl
fmull
dec
mov
mov
xchg
mov
xchg
jne
pop
cld
test
ret
mov
repz
ret
lret
and
and
out
rorl
pushf
jge
xor
mov
lret
push
loop
and
sub
sarl
mov
sub
add
and
or
jae
sti
lods
push
mov
and
inc
jp
mov
jl
in
or
movl
pop
dec
ds
sub
nop
es
mov
lret
hlt
in
ret
dec
lcall
test
loopne
mov
imull
xor
in
gs
pop
xchg
subb
pop
fidivrl
sbb
dec
daa
movb
dec
sub
addl
sbb
lcall
push
call
aam
cld
jmp
xor
addr16
ret
out
adc
mov
jle
loop
icebp
into
daa
fcmovu
repnz
push
mov
push
jg
shll
or
test
mov
cmc
mov
push
stc
xchg
pop
cmc
xchg
dec
or
dec
jp
adc
bound
insb
inc
add
fisttpll
mov
hlt
jg
dec
and
jno
jl
push
nop
popa
push
sbb
pop
xchg
jg
pop
scas
pop
pop
test
sub
adc
jo
arpl
add
dec
pop
xchg
mov
out
imul
push
inc
fldenv
test
sahf
push
inc
sub
cmp
testl
fs
sub
sub
jle
fsubrp
lret
or
int
dec
mov
sbbb
das
pop
movsb
xor
into
nopl
outsb
lods
testb
ja
add
cmp
cmp
adc
enter
adc
xchg
jg
mov
clc
lods
dec
das
mov
shlb
orl
sbb
jl
push
dec
aas
inc
xchg
dec
mov
jo
cmp
leave
push
loopne
lret
lock
xor
ret
adc
xchg
or
das
mov
cwtl
xchg
inc
add
lcall
add
push
fwait
es
mov
adc
loopne,pt
gs
dec
xor
mov
cwtl
stos
out
dec
popa
lock
push
jbe
out
nop
movsl
int
mov
stos
push
fsubs
mov
push
or
push
lods
cmp
pushf
fsts
jo
test
adc
mov
cmpsl
jmp
gs
push
loopne
scas
lahf
mov
lods
dec
pop
out
mov
lea
outsl
int
sbbl
sbb
adc
mov
cmp
pop
ljmp
aad
fwait
sub
stc
dec
das
dec
in
push
adc
lcall
jnp
loop
jle
jl
cmpsb
sarb
scas
imul
sub
lods
popf
sbb
leave
lock
xchg
fdivrs
cld
add
sbb
xchg
pop
ds
and
sub
cmpsl
jne
mov
hlt
ffreep
popa
sub
jnp
xchg
es
int3
jge
fwait
mov
lods
rcrl
jns
addr16
movsl
dec
adcb
repz
shrd
notb
mov
popf
les
test
cmpsl
mov
pop
lret
cmp
stc
in
mov
popa
mov
inc
jl
es
inc
and
daa
jns
push
aad
xor
mov
iret
jo
mov
xchg
popf
mov
mov
daa
add
lcall
jmp
movsb
inc
in
out
ljmp
jp
mov
sarl
xchg
mov
xlat
or
cmp
decb
xchg
incb
push
insb
in
sub
notl
in
xchg
in
adc
outsb
jp
and
add
fnsave
xor
xchg
cmp
add
shl
mov
fidivrl
int3
lea
dec
jp
scas
dec
xchg
push
scas
movsl
int
cmpsl
shl
shr
dec
call
dec
adc
pushf
cmp
or
adc
jno
push
mov
subl
push
das
sbb
mov
loop
cmp
fsts
adc
adc
xchg
cmpsb
pop
lds
xchg
repnz
pop
outsl
mov
xor
or
ffreep
or
jl
mov
sahf
cld
shl
testb
jne
bound
int
jmp
mov
xchg
subl
xor
xor
int3
stos
sarb
data16
mov
arpl
les
xor
aaa
sbb
fstps
outsl
sahf
hlt
jns
shlb
jnp
push
pop
mov
lds
or
mov
jbe
mov
and
stos
and
gs
fwait
mov
fnstsw
sbb
test
stos
add
jne
aas
sub
in
shr
mov
enter
mov
push
push
or
mov
pop
in
aad
adc
pop
cmp
icebp
lret
nop
add
add
dec
push
cmp
jg
inc
cld
cmp
aad
jle
pop
mov
scas
ficomps
in
mov
fcmovu
cltd
cmc
les
loopne
mov
outsb
lods
std
add
dec
jnp
pop
inc
xchg
iret
pop
dec
adc
in
das
xchg
mov
arpl
jl
push
xor
jnp
stos
stos
punpckhwd
mov
inc
xlat
or
xor
mov
sub
pushf
movsl
jmp
mov
imul
jbe
xlat
fnsave
test
popl
repz
mov
mov
pop
sub
add
fs
enter
in
and
fistps
dec
std
sub
and
ds
test
data16
add
pushf
enter
cmp
repz
pop
pop
shlb
cmp
add
insl
mov
test
in
mov
add
mov
adc
lods
mov
mov
in
jecxz
mov
inc
push
mov
mov
mov
add
or
mov
inc
lea
mov
jmp
arpl
cwtl
xor
leave
je
lea
xchg
scas
xchg
fnstcw
mov
jb
imul
in
xor
jae
insb
loopne
out
jbe
sbb
sbb
pop
ror
sub
lahf
lds
loopne
push
mov
dec
movsb
mov
or
dec
pop
es
mov
cltd
ljmp
js,pn
sti
cld
repz
jle
sbb
xor
daa
mov
lcall
lret
movsl
sub
jmp
in
push
xor
xchg
in
mov
jle
out
cmpsb
pusha
mov
insb
lret
lea
sbb
xor
jne
push
movsl
cmp
divl
xchg
sub
add
pusha
pop
ja
mov
lods
nop
pop
mov
aam
jmp
push
push
stc
jmp
sub
pushf
mov
mov
icebp
sti
mov
in
mov
daa
sbb
xlat
dec
dec
sub
ror
push
cmc
addr16
mov
in
inc
icebp
dec
icebp
pusha
aad
cmpsb
push
int
cwtl
sub
xor
daa
mov
pusha
mov
gs
lret
inc
adc
data16
adc
push
pop
xor
cmp
pop
adc
clc
or
push
jecxz
xlat
cmp
mov
stos
daa
ljmp
faddl
ss
enter
ret
arpl
inc
push
xchg
inc
fcoms
jl
and
adc
scas
xor
mov
pop
sbb
xchg
sub
out
and
nop
sub
int3
mov
xchg
sti
es
cmpsb
jbe
daa
push
add
repz
cmp
xchg
pop
or
lea
rcll
jg
sbb
fisubrs
jae
cli
push
mov
imul
mov
in
and
add
mov
sbb
cmpb
jb
xor
jge
rcll
sarl
jnp
mov
movsb
out
ret
icebp
es
sub
enter
sbb
clc
arpl
paddw
push
cli
adc
pop
add
rclb
add
mov
sub
adc
or
sbb
andl
dec
pop
mov
push
dec
cli
into
add
andb
cwtl
dec
and
lahf
test
mov
in
cmpb
ljmp
add
dec
fidivrl
iret
sbb
sbbb
cwtl
ret
xor
adc
mov
in
loop
jge
idivl
cmc
jne
mov
pop
movsb
sub
fistps
cmp
xchg
int3
shlb
jae
xor
les
test
mov
inc
jecxz
arpl
out
jle
mov
outsl
push
gs
inc
popa
movsl
ss
ret
pop
loopne
sub
ret
shrl
cld
cmp
mov
or
insl
dec
sbb
mov
arpl
inc
fcmovbe
shlb
jle
stc
nop
add
rcrb
sbb
mov
inc
pop
mov
lret
xchg
lock
inc
mov
out
xchg
cmp
cmp
int
xchg
test
pop
cltd
insb
push
lods
dec
fstpl
add
aad
cwtl
loopne
sbb
cmp
lahf
pop
jge
pop
jae
sbb
inc
mov
pop
cmp
in
xchg
lahf
add
pushf
xor
ss
in
icebp
or
and
aas
xchg
pop
gs
lret
aam
rcl
popf
clc
adc
or
jmp
test
xchg
push
scas
dec
adc
cmp
shlb
adc
mov
and
cltd
test
pop
insb
mov
outsb
lret
roll
jecxz
adc
mov
ret
call
sti
xor
sti
fadd
lds
inc
outsl
scas
cli
sbb
arpl
mul
je
xor
sub
imul
cmc
into
or
loop
movsb
and
js
jmp
nop
jecxz
adc
add
iret
stos
fildl
and
sbb
int
adc
in
cmpsb
and
lock
scas
xor
movsl
sub
cmpl
data16
ss
cmpsl
push
mov
push
icebp
push
lock
xchg
or
mov
sub
repz
pop
jbe
push
notb
pusha
mov
mov
fdiv
test
pop
mov
dec
test
shrb
lret
dec
dec
addr16
addl
leave
in
sbb
cmpsl
sub
xchg
adcb
or
cmpsb
stos
outsl
es
xchg
add
jp
mov
adcb
or
sub
mov
jl
jle
movsb
test
xor
mov
mov
mov
inc
pop
mov
movl
aaa
or
mov
add
mov
push
inc
aad
mov
xlat
aam
scas
sbb
ja
adc
pop
roll
mov
adc
dec
data16
out
faddp
adc
pop
jl
scas
mov
inc
cmp
add
dec
mov
shl
mov
fwait
orb
lahf
xor
pop
mov
jno
ret
daa
fisubrs
mov
and
loope
adc
cmc
pop
leave
sub
push
outsb
ss
std
ror
cltd
out
xchg
imul
out
inc
sub
xchg
jg
nop
mov
dec
push
aas
xchg
imul
dec
shll
dec
les
out
cmpsb
sbb
mov
lods
dec
sbb
inc
push
cwtl
es
data16
loop
bound
and
mov
repnz
mov
pop
jbe
or
maxps
cmp
mov
xor
mov
lcall
and
into
pop
jle
and
test
add
push
outsb
leave
hlt
adc
jp
lock
mov
in
ja
frstors
sbb
push
hlt
mov
sbb
push
cmp
jge
scas
cltd
js
pushfw
dec
movsb
mov
cmpb
adc
mov
pop
scas
dec
push
add
push
pop
ret
fadd
into
pusha
call
mov
push
xchg
dec
inc
pop
mov
fsubl
push
xor
lods
dec
dec
xor
stc
push
out
sahf
pop
dec
enter
adc
mov
sbb
mov
stos
pop
popa
shrb
adc
roll
lret
lds
punpcklwd
or
je
mov
data16
lahf
aaa
pop
popf
pop
repnz
dec
vsubss
sahf
out
mov
push
push
addb
fisttpl
das
jp
pop
mov
test
inc
cmp
pop
out
add
mull
cld
and
mov
push
xor
add
dec
aad
adc
aas
xor
xor
mov
mov
jo
pop
cld
pop
or
daa
cmp
push
jl
or
mov
lcall
scas
pop
mov
add
cs
in
sbb
or
insl
leave
or
add
sbb
dec
cmp
cmpb
out
or
gs
sbb
sub
int3
es
scas
add
out
int3
fsubrp
xor
sti
mov
jb
mov
xchg
clc
push
sbb
out
and
arpl
leave
and
nop
or
arpl
xchg
jg
repnz
insb
sahf
mov
fidivs
xor
popf
aaa
shlb
cmp
fldt
fdivrl
xor
divb
sbb
jns
jg
sub
cmc
insl
xor
add
ja
mov
jb
dec
sahf
lret
dec
cltd
lret
pop
ret
in
and
xor
xchg
and
inc
inc
jmp
mov
cmpl
lods
sbb
cli
in
fmull
scas
out
cs
das
call
fbld
mov
aas
mov
xchg
mov
fildll
jp
push
nop
cltd
lcall
sub
cmp
cmp
ret
push
out
ja
shll
leave
cmp
cmp
fildl
fs
dec
loopne
in
jae
cmpsb
ja
sub
xor
cmp
les
sub
out
xor
xchg
andb
sub
insl
push
popa
aaa
sub
mov
xor
cmp
cmpsb
mov
imul
xor
jge
pop
jb
mov
inc
mov
pop
add
es
mov
lcall
xchg
lret
repz
cmc
test
outsl
imul
push
jb
xchg
mov
mov
mov
es
outsl
mov
and
or
int3
icebp
or
inc
lock
jge
sbb
test
sub
sub
movsl
fcoml
pop
sub
sbb
push
sbb
mov
or
push
jae
jb
adc
outsb
pop
jecxz
es
fwait
and
std
aad
pop
adc
fstpl
lods
add
into
sub
adc
rorl
pop
xchg
xor
orb
fmuls
cmpsl
inc
loope
add
jmp
movsl
addr16
push
push
sub
xchg
imul
or
jp
sbb
loopne
mov
sarl
push
xchg
inc
outsb
divb
stos
adc
adc
add
dec
cmp
xor
and
pshufw
cmc
xor
jae
pcmpgtd
jne
nop
dec
jmp
push
mov
inc
jecxz
hlt
int3
sub
mull
cli
repz
sbb
aas
xchg
jbe
divl
je
xor
cld
nop
dec
add
inc
ljmp
data16
inc
loope
add
jp
push
test
xchg
popf
inc
dec
add
cmpsb
pusha
out
pop
sbb
and
sbb
dec
cmp
sahf
test
aaa
stos
mov
xor
push
pop
shll
pop
pop
pop
rclb
jle
clc
je
push
lods
xor
addl
outsl
mov
inc
scas
shr
push
out
dec
mov
sbb
cmp
lock
flds
mov
mov
cmp
test
lds
mov
or
push
jp
sub
adc
stc
cwtl
mov
inc
roll
js
sbb
rol
inc
xchg
cmp
scas
out
loope
stc
dec
repz
inc
adc
hlt
mov
xor
pop
adcl
mov
xchg
mov
int3
dec
fcoml
xor
jge
or
std
add
arpl
push
ret
sarl
scas
inc
dec
inc
mov
je
ret
insb
inc
sbb
test
xchg
cltd
aam
mov
pop
sub
push
xchg
dec
adc
sarb
sub
jecxz
jmp
mov
jmp
mov
jle
ss
cld
gs
cs
mov
das
hlt
lahf
pop
fwait
mov
lods
push
cs
push
xchg
xchg
mov
xor
pushl
rdmsr
out
inc
mov
mov
push
daa
inc
mov
pop
inc
mov
push
add
mov
add
sbb
xchg
and
mov
inc
popf
in
es
outsl
cmpsl
lock
lds
xor
ja
leave
sbb
sub
and
adc
andb
mov
popf
add
enter
mov
lock
pop
mov
movsb
loopne
sti
in
les
fldl
xchg
pushf
pop
jmp
sahf
movb
sarb
cltd
fadds
cmp
mov
xor
xchg
hlt
mov
inc
pop
bnd
fs
and
sbb
dec
mov
rcrb
sub
lahf
imul
into
in
and
push
xchg
imul
adc
mov
jmp
mov
lods
fldl
stos
cmp
arpl
pushf
jbe
bswap
xor
sbbl
pop
jp
mov
out
jno
dec
and
mov
dec
sbb
jmp
sbb
ss
test
dec
daa
lret
and
test
mov
nop
mov
push
jb
aam
or
dec
mov
movsb
sub
lods
lret
icebp
call
mov
aad
and
jge
cmp
dec
ds
jno
sbb
add
push
scas
and
push
cwtl
rcll
ficomps
xchg
jmp
cmp
outsl
test
xchg
push
and
mov
scas
and
jnp
pop
add
adc
lods
sub
sub
pop
sahf
aad
aad
push
fprem1
incb
push
push
pop
neg
ret
aam
sub
test
mov
fstpt
cmp
and
dec
xchg
sub
xchg
inc
test
jae
mov
jo
dec
divb
push
gs
cmpsb
scas
add
jnp
fdivs
cmp
sbb
sti
bound
lret
popf
cmp
inc
push
movsb
xchg
dec
push
or
lcall
mov
dec
xchg
int
jbe
pop
iret
fsub
mov
push
fwait
jg
xor
stos
shll
rcr
fistpll
call
sti
adc
jp
sub
xor
xchg
cwtl
popa
in
and
pop
mov
mov
mov
shl
dec
decl
adc
notl
sbb
push
sbb
out
subb
mov
mov
ret
cltd
in
xlat
sub
mov
push
iret
push
movsl
mov
or
sub
je
push
jae
cwtl
or
loope
sarb
cmc
mov
push
cwtl
xchg
imul
jno
aam
jp
jg
jae
dec
pusha
and
loop
add
mov
sbbb
jo
gs
push
add
cmp
roll
xor
jne
jne
icebp
into
icebp
pop
inc
pop
jb
icebp
dec
push
cmp
add
fstl
stos
mov
cmpsl
fcomps
jmp
mov
adc
jge
sub
pushl
addr16
fwait
sub
xor
dec
adc
cltd
xchg
jl
test
mov
mov
adc
shlb
popa
aad
adc
daa
adc
mov
jo
or
add
out
and
adc
dec
jnp
xlat
push
cltd
cmp
sub
push
add
add
jne
lods
shll
sub
adc
mov
dec
dec
cwtl
ljmp
out
xor
aam
cmpsl
xor
int3
sub
xchg
sbb
popa
pushf
xchg
out
xor
push
cmp
int
inc
add
adc
enter
mov
xor
sbb
pop
add
sar
lods
call
int
mov
insb
jno
stos
adc
les
test
push
adc
addps
fwait
out
xchg
mov
sub
cmpsl
and
jno
es
xor
push
jecxz
rcr
push
out
mov
fs
cld
lcall
pushf
cmc
push
push
or
push
mov
adc
sahf
sub
lret
mov
xor
rcl
lds
imul
mov
push
mov
nop
sahf
jne
push
out
insl
sti
jo
xor
ret
adc
lea
ds
mov
cli
fsubrs
push
ja
adc
jno
mov
addr16
mov
mov
jl
sbb
popw
push
flds
mov
mov
jno
divb
dec
adc
add
sbb
push
test
xor
clc
add
sbb
sbb
mov
adc
pop
push
fadd
jo
jp
inc
xchg
mov
cmp
mov
xchg
pushf
popf
push
stc
inc
sahf
sbb
repnz
add
outsb
mov
mov
ficompl
and
lret
mov
lods
or
adcb
xchg
add
adcl
scas
pop
fisttps
roll
test
xchg
aas
cmp
inc
adc
mov
jns
cld
stos
mov
mov
int3
xor
out
sub
imul
pop
xchg
addb
dec
mov
sub
pop
dec
pop
out
mov
fs
in
lods
fistps
jle
decl
insb
push
push
dec
ja
addr16
ljmp
inc
inc
xor
mov
xor
inc
mov
pop
cmp
nop
xchg
js
testl
cld
repnz
sub
inc
je
in
mov
bound
cmpb
nop
lret
scas
int
out
jp
scas
cmpsb
sti
into
roll
repnz
pop
add
jge
cmp
int
fisubrs
xlat
pop
cmp
cmp
mov
jp
or
cld
cmp
mov
mov
xor
es
shl
sub
mov
mov
sti
and
mov
leave
and
xlat
or
mov
stc
mov
jbe
xor
lcall
sbb
pop
lock
sbb
sub
cs
adc
cmpl
xchg
lock
lods
popa
inc
scas
sbb
push
aaa
cmpb
aam
jl
pop
and
xor
push
das
imul
outsb
xor
insb
mov
int3
jg
mov
shlb
push
pop
lret
jmp
fisubrl
or
loopne
cwtl
xchg
sbb
daa
sbb
cmpsb
push
mov
rorl
test
cmp
sbb
test
mov
sub
dec
addr16
bound
mov
hlt
fs
ret
pop
jnp
xor
xchg
in
out
lods
lods
fstpl
data16
mov
cltd
jle
outsl
cmp
push
ljmp
mov
inc
aam
mov
push
add
mov
pop
in
add
pop
xchg
insb
jl
subb
cld
add
sbb
popf
pop
pop
fsubs
jge
sub
pop
pop
int3
pop
movsl
inc
stc
sbb
or
jns
popf
repnz
mov
inc
bound
push
cmp
and
xchg
and
lret
fstpt
inc
ss
sbb
lock
cmp
sub
pushf
push
jg
in
inc
adc
dec
push
pop
push
filds
and
mov
pop
cld
adc
nop
cmp
ss
mov
cmpsb
rol
in
sahf
insl
and
cmp
sbb
push
andl
adc
sbb
je
xor
es
jno
add
jecxz
mov
mov
push
cmp
dec
and
sbb
inc
pop
addr16
mov
outsb
sbb
ret
jae
outsl
test
cmc
sub
shl
cmpb
pushf
stos
pop
cmp
and
les
mov
mov
scas
lret
mov
pop
xor
adc
mov
test
mov
sbb
sbb
test
insl
mov
fistpl
push
cmp
adc
lahf
sti
movsb
push
mov
jne
js
pop
data16
iret
pop
jecxz
jge
add
pop
shlb
daa
mov
add
fisubs
sub
je
xor
cmp
dec
jl
stos
mov
push
mov
pop
mov
das
inc
mov
jno
jbe
xor
adc
lahf
test
inc
xor
test
cmp
fiadds
xchg
xchg
dec
pushf
mov
nop
outsb
pop
scas
hlt
int3
mov
adc
gs
out
pop
mov
bound
sbb
cwtl
fs
fsts
xor
mov
inc
or
ss
pop
add
cs
cwtl
orb
sbb
sbb
mov
mov
sbb
sar
aam
lea
xchg
loopne
leave
js
ret
mov
mov
mov
in
adc
shr
sahf
mov
je
andl
mov
clc
test
push
pop
or
js
xor
mov
stos
and
js
and
or
dec
xchg
fcomps
dec
insb
out
mov
stos
stos
inc
movsb
mov
sbb
jne
xchg
aam
push
std
repz
push
out
xchg
jno
fsubs
sub
jmp
ret
push
xchg
test
mov
pop
adc
xor
push
dec
sbb
or
or
xor
in
xchg
rorb
ljmp
test
aam
mov
aam
int3
loope
mov
dec
push
jno
mov
and
fdivrs
pop
mov
sbbl
mov
shll
jb
cmp
xchg
add
pop
push
sub
aaa
dec
insb
call
fistpl
xchg
scas
idiv
cli
iret
dec
cmpsb
pushf
jno
jbe
sub
je
call
xchg
fdiv
pop
pop
sub
adcl
outsl
icebp
cmpsl
les
mov
sub
loope
rcll
xor
cltd
xor
and
and
jg
int3
pushf
push
andl
inc
adc
mov
stos
cmp
jmp
ja
sti
shll
add
cmp
shrl
inc
jo
jae
fcomps
push
movsl
sar
les
out
mov
out
adc
dec
push
dec
push
push
mov
add
rcll
aaa
clc
shrb
inc
push
push
out
popa
jb
movsl
outsb
pop
add
sub
addb
andl
sti
fldcw
and
std
jecxz
lds
jl
push
aas
rcr
js
pusha
repz
rorb
push
sub
pop
ds
push
ret
or
sbb
std
data16
ret
hlt
hlt
jg
fcomp
mov
gs
pop
dec
mov
std
jnp
mov
rorb
outsl
xchg
mov
sub
rcr
pop
pop
iret
pop
cltd
pop
inc
ljmp
mov
out
pop
aam
adc
mov
cwtl
mov
xchg
xor
or
mov
stc
gs
and
and
adc
cmp
cmc
lret
popf
sub
pop
iret
inc
mov
mov
popf
out
inc
inc
gs
pushf
por
cwtl
jmp
pushf
das
push
mov
jge
mov
test
outsb
imul
gs
outsl
mov
adcb
xchg
dec
lahf
insb
cmc
push
pop
mov
sub
mov
outsl
mov
movsl
push
test
enter
xchg
aaa
inc
mov
pushf
aas
xchg
pop
mov
sbb
xchg
push
pop
sbb
stos
sarb
fld
jl
jo
cmp
mov
aad
les
outsl
fsubp
mov
popa
pop
stc
in
adc
dec
gs
orl
fwait
pop
lcall
cmp
cmc
and
cmpl
aas
ja
repz
push
sbb
mov
ja
jecxz
popf
and
jp
lea
sub
jge
sub
lahf
testb
adc
inc
push
cwtl
or
push
cmc
cmc
xchg
iret
test
int
aas
cs
pop
and
inc
mov
pop
ss
inc
and
push
into
xchg
sbb
push
jnp
loop
test
xchg
mov
stos
and
fistpll
lods
push
mov
push
xchg
pop
fwait
cs
xor
dec
test
fidivrl
sbb
pop
nop
stos
jge
pop
out
mov
dec
mov
push
pop
mov
jb
rcl
dec
xchg
add
dec
sub
push
mov
scas
dec
push
dec
movsl
jp
lret
lret
sbb
ja
mov
and
nop
outsl
mov
ja
jne
xor
rsm
out
call
loopne
xlat
xor
mov
or
fdivs
outsl
pop
rcrl
jl
cmp
xor
mov
xchg
cs
xchg
push
lcall
xor
idivl
xor
push
or
mov
ja
pop
xor
push
leave
clc
xlat
fidivrs
or
shll
and
and
mov
add
mov
pop
mov
loopne
xor
dec
lea
push
sbb
and
cld
pop
dec
loopne
push
mov
push
mov
aaa
mov
push
pop
sarb
orb
mov
jno
shrb
mov
xor
jne
push
inc
add
ss
pop
pop
rcl
pop
sub
mov
xor
xor
sbb
mov
xchg
in
adc
adc
sub
cmc
pushf
test
mov
xchg
popa
jns
add
add
daa
sub
inc
mov
pop
aam
hlt
movb
dec
cmp
sti
jecxz
fldenv
das
add
mov
adcb
lret
xor
add
pop
jmp
daa
shlb
dec
mov
jns
rcrl
or
std
or
int3
and
mov
xchg
xchg
push
lcall
sti
adc
ds
insb
sbb
in
inc
push
dec
mov
cld
or
mov
sub
scas
mov
push
mov
gs
in
push
clc
xor
hlt
loopne
movsb
mov
and
int
lock
mov
push
fadd
test
mov
sahf
or
xor
jns
jne
push
mov
out
jb
push
push
test
imul
pop
inc
fs
into
and
outsl
ret
adc
cmpsl
mov
mov
sub
xchg
fsubrl
adc
sahf
hlt
add
inc
or
xlat
or
enter
xor
xor
lret
imul
sub
es
fdiv
fsubp
mov
cld
dec
xchg
adc
lock
fld
iret
mov
mov
jnp
adc
and
dec
mov
int
lret
int
in
stc
fiaddl
jp
aad
adc
add
add
mov
mov
pop
sbb
out
mov
fwait
adc
xorb
bound
mov
stos
jge
clc
pop
push
push
mov
ss
xchg
push
add
lret
sahf
int
call
and
push
fistps
inc
cmp
cmc
fldl
cld
rcr
popa
mov
jle
popl
and
lret
insb
ffreep
pop
notl
push
adc
sbb
mov
je
adc
dec
outsb
loope
es
add
cmp
leave
enter
xchg
int
pop
xchg
mov
jge
push
int
inc
adc
add
sbb
stos
mov
int3
sbb
cmp
cmc
adc
jle
xor
repz
dec
push
jno
pusha
mov
or
insb
dec
jmp
fs
xlat
arpl
push
dec
xchg
jg
or
pop
cltd
mov
cmp
add
cmpsb
pop
rol
mov
add
push
adc
jbe
dec
mov
mov
repz
adc
and
mov
aam
outsb
cli
xorb
dec
andl
leave
push
out
cs
xchg
jnp
xor
fs
lret
mov
test
shlb
xchg
push
xor
or
in
pop
adc
dec
insb
mov
inc
mov
out
xlat
or
in
orb
and
and
jno
popf
icebp
test
mov
rorl
jmp
insl
cmc
cli
fs
pop
adc
pop
ret
je
lcall
mov
lock
dec
xchg
scas
cmpb
add
mov
dec
sbb
xor
pop
cmp
inc
pop
mov
js
dec
dec
pop
cwtl
push
sti
ds
xor
pop
clc
fcmovnbe
in
cli
loop
lcall
dec
dec
ljmp
mov
and
push
add
addr16
push
mov
in
dec
push
rol
outsl
movsb
cs
cmpsb
js
jno
js
in
adc
push
ds
xor
xchg
mov
std
in
pop
ss
mov
xchg
sub
fxch
repnz
sbb
imul
mov
fisubrl
sub
outsl
fnstenv
mov
xchg
lret
sub
add
xor
xchg
pusha
push
sahf
adc
dec
sub
adcb
pop
mov
int
mov
stc
cld
fidivrs
shlb
in
mov
and
push
mov
pop
cmc
sub
mov
xchg
inc
push
jg
das
xchg
pusha
lret
int3
in
sub
inc
cld
push
jnp
out
inc
jbe
push
dec
lock
jmp
xchg
jg
or
cwtl
gs
imul
mov
int
lds
cs
cmp
lods
test
mov
sarb
jno
leave
mov
repnz
loopne
sub
mov
mov
adc
push
mov
mov
test
sbb
shll
lock
add
cmp
icebp
loope
pop
xchg
icebp
mov
adc
fs
dec
xor
rorb
mov
icebp
in
fdiv
imul
mov
jnp
fucomp
add
ss
and
pop
lods
dec
inc
xor
popf
adc
stos
pop
pop
sbb
inc
arpl
adc
shlb
mov
mov
fimuls
xchg
adc
mov
add
fwait
icebp
cmc
mov
insl
pop
popf
mov
pop
adc
push
repz
push
jnp
mov
in
pop
sub
push
in
rolb
adc
inc
addr16
add
clc
lcall
icebp
xor
jns
dec
aam
test
xor
xchg
and
mov
dec
lods
jno
pop
lea
clc
sub
xchg
xchg
lock
sbb
out
pop
cmpsl
shlb
inc
cmp
scas
nop
dec
push
sub
ljmp
jno
dec
mov
pop
repnz
dec
sti
stos
and
push
cmp
jne
loopne
adc
iret
aad
in
and
arpl
ds
dec
xlat
adc
mov
pop
loope
sub
rol
mov
push
orb
mov
jnp
mov
jmp
pop
fwait
dec
add
aas
pop
jno
pop
jecxz
outsb
mov
nop
insl
movsb
mov
mov
sti
test
and
adc
mull
dec
addr16
mov
dec
sbb
aas
jg
outsb
push
push
inc
or
test
xchg
frstor
adcl
pop
mov
mov
inc
xchg
dec
mov
mov
aad
lea
adcb
test
inc
idivb
mov
lds
add
add
insl
adc
mov
cli
int3
ljmp
fwait
inc
jmp
inc
jb
or
stc
movntq
cltd
sti
inc
jnp
loop
add
repz
pop
mov
and
mov
fistps
dec
int3
inc
xor
cmp
andl
jns
ret
push
in
cs
stos
std
sub
in
inc
test
lahf
hlt
dec
inc
out
hlt
ret
push
stos
imul
sbb
pop
add
cltd
jb
xchg
jp
xchg
xchg
lods
mov
scas
out
and
mov
or
jnp
mov
divps
clc
pop
inc
jmp
mov
xlat
incl
psrld
and
pushf
sub
xchg
pop
mov
pop
pusha
sub
pop
and
stc
popl
repz
outsl
add
mov
xor
ljmp
fiaddl
leave
push
push
jb
push
adc
push
outsb
lahf
jo
sbb
jg
inc
cltd
lds
push
out
outsl
mov
scas
cmpsl
sbb
inc
xchg
add
pop
pop
jae
or
xor
jne
scas
daa
sub
jno
fiadds
into
gs
test
push
mov
pop
inc
mov
leave
dec
inc
xchg
das
in
aam
loope
andl
js
inc
mov
sbb
out
adc
ss
jl
mov
lods
lods
fidivl
jle
jl
and
cwtl
inc
and
and
pop
lods
adc
in
dec
repnz
and
inc
cmp
and
dec
lar
jnp
scas
cli
sbb
xchg
test
cmpl
mov
outsl
stc
mov
push
add
inc
fbstp
jge
xchg
stc
fldt
gs
adc
std
icebp
cs
shlb
leave
adc
mov
mov
inc
adc
jno
arpl
ljmp
mov
lcall
ljmp
adc
loop
sbb
sub
inc
mov
push
imul
mov
jge
add
jmp
stos
push
push
leave
dec
jecxz
das
pop
test
xchg
out
adc
pop
and
into
sub
incl
out
cltd
jecxz
popf
cs
imul
and
jg
cmpsb
or
inc
cmp
pop
pop
fisubs
es
add
enter
fcmove
push
pop
inc
aam
mov
mov
push
pcmpeqb
out
lock
test
ret
xchg
mov
out
push
pop
out
rcrb
xchg
rorl
sub
repnz
xor
mov
mov
cmp
lret
jle
mov
mov
sbb
into
mov
push
mov
arpl
adc
int
fcoml
ljmp
jne
addr16
mov
fneni(8087
push
pop
in
ficoms
pop
adc
inc
aad
inc
sub
faddl
test
andl
mov
xchg
add
pushf
inc
jnp
lods
pop
ja
outsb
sub
push
cli
inc
jmp
or
mov
dec
test
or
push
sub
scas
sub
jae
push
ljmp
push
jb
and
pop
loopne
punpckhdq
pop
outsb
push
mov
mov
mov
js
mov
inc
adc
sahf
jp
ljmp
jg
test
dec
addr16
in
clc
add
pop
insb
xchg
aam
cwtl
mov
pop
fcomi
jne
iret
push
pop
jb
cmp
xchg
dec
fists
push
xor
add
or
mov
jns
insb
cwtl
rolb
mov
sbb
pop
cwtl
inc
sahf
loope
mull
adcb
in
ja
adc
stos
push
sbb
jno
enter
in
fs
inc
mov
mov
jne
push
test
cmpsb
icebp
mov
in
iret
jmp
or
subb
aaa
pop
mov
daa
mov
fstl
pop
subb
pop
cmp
cmp
push
dec
les
xlat
add
fimuls
pushf
lret
mov
sub
adc
push
movsb
push
and
jle
mov
mov
loopne
jge,pt
mov
sti
and
and
mov
mov
data16
pop
add
cli
dec
inc
dec
out
push
xor
outsl
mov
out
and
sub
in
sti
leave
jae
in
mov
or
ret
mov
jmp
shll
rolb
jecxz
mov
xchg
icebp
cmpsb
jns
cmp
cs
sarb
scas
jge
mov
rcrl
xor
aaa
sub
inc
scas
lret
mov
push
repnz
push
stc
loopne
push
imul
out
in
mov
leave
add
lahf
fdivl
sbb
mov
and
fldenv
pop
pop
imul
ficoml
cmc
fisttpl
inc
insl
int3
test
adc
push
xor
push
fdivrs
loopne
stc
enter
mov
xchg
and
sahf
inc
push
mov
cmp
and
ds
jns
les
rorl
add
xor
call
xchg
cmp
adc
ljmp
jge
xchg
test
cmp
dec
sbb
inc
repz
sub
lret
sub
pop
lret
fdiv
push
mov
push
xchg
ss
jnp
sbb
cmp
pop
andl
push
jno
pop
pop
push
mov
ret
lret
cmp
sub
psrad
and
cmp
leave
adc
scas
xchg
iret
jns
inc
add
dec
testb
pop
cmp
mov
pop
mov
pop
and
mov
aaa
xchg
xchg
out
stos
dec
jbe
orl
push
aaa
stos
repz
hlt
jmp
push
nop
sbb
pop
scas
sub
mov
shrb
xor
sub
idiv
jb
das
xchg
xlat
and
loopne
incl
sti
add
push
fisttpl
xor
add
xor
shlb
or
sbb
lods
pop
adc
inc
lret
xchg
xchg
in
insl
jl
adc
xor
cmp
loop
sbb
js
pop
mov
inc
ret
jbe
arpl
fsubs
mov
sub
inc
cmc
push
int3
cwtl
iret
dec
or
inc
cmpb
stos
movb
or
stos
imul
sbb
mov
dec
ret
pushf
add
mov
fcoml
mov
and
sub
iret
dec
cmc
jp
pop
lds
ret
pop
xchg
and
pop
inc
sub
out
sti
mov
pop
jae
pop
aas
jno
or
lret
shrl
pusha
pop
lcall
mov
inc
int3
dec
inc
aas
push
mov
lret
add
imul
subb
or
xor
inc
mov
cmp
popa
push
mov
sub
mov
inc
xchg
xchg
or
mov
mov
ja
je
jp
inc
pop
lock
ficoml
xor
mov
push
fnstsw
jp
mov
or
inc
lretw
aad
cli
ss
xor
mov
cs
cmpb
add
jecxz
mov
add
js
or
fnsave
sub
in
outsl
or
xchg
jle
cmp
lods
mov
stos
cs
lock
repz
xlat
lahf
jl
sub
jmp
jb
cmp
jp
mov
outsb
loopne
andl
xchg
insb
aam
stos
int
adc
mov
xchg
into
out
or
lods
sub
push
orl
push
lcall
test
ss
out
push
nop
pushl
nop
xchg
test
cwtl
fwait
dec
xor
ss
es
push
scas
fadds
sbb
inc
rcl
sub
dec
xchg
loope
mov
mov
lahf
cmp
mov
push
sbb
nop
push
sbbb
dec
ljmp
or
sarl
sub
mov
push
or
sahf
push
or
shll
lock
mov
inc
push
pop
jg
data16
mov
cli
dec
jge
pop
dec
cli
mov
jo
cli
test
cli
jbe
cmpsl
or
inc
cmp
in
or
loop
jne
and
je
pop
hlt
cmp
inc
xor
jle
adc
ds
mov
mov
inc
fsts
jecxz
push
mov
fldl
pop
sbb
push
or
mov
mov
inc
dec
jecxz
mov
shrl
push
imul
sub
lret
dec
pop
add
xor
dec
sub
pop
in
pop
xor
or
inc
stos
pop
inc
adc
mov
lea
cmp
jae
icebp
loopne
cmpb
pop
xor
mov
insb
int3
cli
xchg
cltd
mov
cmpl
test
into
pop
repz
gs
lret
sahf
mov
pop
adc
xorl
fsubrs
mov
inc
and
inc
push
loope
mov
lods
lods
loope
movsb
jg
xor
daa
adc
adc
mov
pop
add
sarl
clc
mov
mov
cmpsb
mov
les
fistl
pop
pop
and
mov
lods
loope
jo
sbb
subl
inc
fcmovb
in
mov
out
outsl
cmp
lods
sub
data16
aam
jns
loop
fiaddl
test
pushf
movsl
sahf
cmpsl
push
fistpll
sbb
push
arpl
cltd
cmp
shr
adc
aam
jae
hlt
push
mov
push
push
lods
sbb
clc
sbb
das
fwait
sbb
cmp
jp
stc
mov
inc
pop
int
mov
dec
push
std
loope
es
sub
mov
xor
add
push
sub
fcomp
movsl
push
xchg
lods
and
pop
daa
shrb
inc
inc
mulb
mov
idivl
sub
xchg
into
popa
sub
sub
out
jo
js
dec
rcl
dec
mov
aad
lock
cld
adc
mov
in
shll
mov
jmp
sbb
adc
pop
push
pop
out
or
mov
mov
jns
fwait
cli
popf
loopne
outsl
rcll
fwait
idivl
add
cwtl
out
xchg
inc
lcall
cmp
mov
std
leave
out
movsb
data16
in
push
sub
push
movsb
pop
cmp
mov
mov
fwait
lods
inc
inc
mov
fs
inc
sahf
adc
add
jg
sbb
insl
add
enter
cmp
push
cmpsl
insl
xchg
loope
hlt
les
fdivr
mov
aas
mov
push
ret
sub
stc
in
sar
xor
sub
iret
int
jb
jge
in
mov
test
in
sti
imull
pop
and
mov
add
mov
testb
cmp
movsb
cmpl
imul
lret
push
sub
adc
clc
mov
xor
add
rcr
xchg
gs
cld
xor
test
xchg
adc
cmp
loopne
sub
mov
ss
in
adcl
and
push
lods
add
add
movsb
dec
mov
push
mov
mov
mov
loop
cwtl
ljmp
adc
test
fstl
lcall
jge
test
out
dec
dec
mov
cmp
sub
pop
pop
sbbl
add
outsb
ret
mov
enter
adc
sub
xor
add
lahf
push
enter
pop
into
mov
or
jne
loope
rol
cltd
enter
lcall
jecxz
mov
sub
push
into
and
sbbl
in
sub
inc
lcall
jecxz
sbb
mov
adc
test
test
add
shl
pushf
rorb
sub
add
inc
xor
adc
sbb
adcb
jmp
ret
mov
jae
and
xor
in
add
pop
and
std
sbb
and
inc
xchg
frstor
add
jbe
jp
cmp
push
inc
mov
ja
test
test
xor
dec
dec
bound
out
pop
mov
lahf
push
orb
je
ficomps
insl
mov
and
out
fidivrs
pop
aam
cs
or
sub
jns
in
mov
test
mov
xor
sbb
add
push
test
lret
push
pop
in
fiadds
std
mov
ds
mov
loope
pop
scas
testl
ljmp
ljmp
jmp
ss
mov
fmuls
or
cmp
xchg
cwtl
dec
test
loop
cli
xor
sbb
cli
outsl
adc
dec
cmp
sub
jo
sub
jne
cmpsl
shlb
cmp
add
insl
negl
test
scas
mov
pop
in
cmp
or
xchg
fistl
mov
out
negb
ficoms
mov
jb
leave
mov
xor
jb
int
mov
sbb
int3
rcl
xchg
push
outsb
mov
mov
inc
xchg
ss
ret
dec
dec
xchg
ret
mov
imul
xor
jae
lods
cli
mov
cmp
mov
pop
test
jle
out
lods
and
out
stos
out
cmp
mov
xchg
nop
cmp
ljmp
dec
bound
push
int
cmpsb
stc
bound
paddq
cli
outsl
push
xor
adc
pop
jmp
stc
ficompl
ds
test
adc
push
loope
inc
sti
mov
adc
dec
pop
pop
test
pop
fisttpll
add
or
popa
sub
pop
xor
addr16
adc
xlat
cmp
out
mov
adc
mov
insb
cltd
div
jnp
mov
xor
lds
mov
fbld
aaa
pushf
sub
aam
ret
daa
lahf
sbb
lods
pop
mov
iret
pushf
jne
movl
insb
jb
pushf
out
js
ljmp
negb
mov
and
aam
mov
sbb
aam
dec
shl
loopne
mov
sahf
nop
xchg
loope
pop
aas
dec
pushf
sarl
mov
or
cmc
test
cli
aam
inc
sti
iret
sub
and
adc
mov
inc
add
fistl
ret
inc
out
fcoms
inc
repz
inc
add
mulb
subl
enter
push
add
or
pop
xor
sbb
js
iret
into
mov
leave
push
out
pop
dec
push
push
int
mov
out
repz
push
sub
xor
sbb
or
mov
push
push
aaa
xor
es
call
fisubs
fstp
or
pop
jno
adc
adc
mov
int3
fcoms
ljmp
fcom
dec
xor
imul
xchg
or
test
mov
jmp
dec
loopne
xor
mov
jnp
mov
clc
inc
add
ss
das
jg
popf
loopne
incb
push
aad
scas
jae
mov
or
dec
or
idivl
lret
das
sbb
icebp
ja
rcl
sbb
inc
int3
xchg
call
mov
xorb
cwtl
sub
je
xor
lret
push
cwtl
scas
push
mov
xchg
adc
insb
das
xor
pop
in
mov
dec
mov
dec
aaa
sub
or
cmp
popf
fs
andb
xchg
inc
fisubrs
mov
push
icebp
xor
mulb
pop
mov
sub
out
push
movsbl
jnp
mov
sbb
lret
pop
sarl
outsb
mov
jno
aas
hlt
incl
cmp
sti
mov
cld
fidivrl
adc
cmp
jl
adc
mov
push
sub
daa
mov
push
xchg
lds
insl
push
xchg
and
xchg
inc
adc
cmp
xchg
insb
lea
cld
pop
push
sub
nop
clc
stos
divb
lret
inc
push
sub
and
shl
xor
inc
jp
mov
push
dec
int3
js,pt
icebp
cs
sbb
xor
pop
add
pop
xor
xchg
stos
adc
pop
cs
jnp
movb
push
cmpsl
adc
adc
ret
jmp
adc
push
or
jnp
repz
faddl
xor
dec
inc
inc
xchg
in
ljmp
inc
loope
push
rcrb
dec
decb
cmp
fmuls
add
cmc
pushf
xor
fsubrs
rcrb
or
push
lcall
cmp
ja
aam
ret
imul
lea
js
mov
in
test
mov
pusha
sahf
cld
outsl
xlat
mov
jl
cmp
pop
jge
sbb
pop
and
mov
dec
dec
jle,pt
pop
fwait
dec
mov
lea
sbb
xor
pop
jnp
push
jge
sbb
jp
jo
mov
and
inc
mov
push
lret
sub
stos
lds
mov
add
or
mov
gs
popf
leave
addl
ljmp
outsb
xor
sub
push
ret
inc
aam
inc
fwait
dec
sub
dec
in
hlt
cmp
pmuludq
adc
in
push
push
sbb
movb
rorl
add
adc
fldcw
sbb
icebp
jg
sub
shrb
repnz
mov
dec
cld
mov
mov
into
imul
ds
popf
push
pop
pushf
xchg
decb
mov
or
aad
adc
out
xchg
aas
xchg
rolb
jge
and
daa
dec
imul
or
jae
cmp
sub
pop
adc
and
inc
loopne
mov
cmc
outsl
pop
cwtl
inc
nop
scas
addr16
adc
dec
std
xor
dec
repnz
xor
lods
mov
bound
loop
jo
in
outsl
test
fstpl
sub
xor
xor
sbb
pop
test
sub
sti
xor
jb
pop
bnd
into
clc
jg
das
lds
test
ja
sbb
test
pop
xor
icebp
mov
push
and
jp
inc
mov
jbe
nop
cmp
int
push
popf
jg
adc
stc
jp
movsb
adc
test
inc
mov
or
imul
repnz
ss
arpl
xor
andb
sbb
push
push
inc
push
push
cmp
fdivp
jbe
xchg
daa
add
sub
or
adc
xor
hlt
inc
mov
lret
stos
push
dec
push
insb
in
in
mov
divb
insl
dec
dec
aad
arpl
xchg
sar
test
sbb
mov
add
imul
lret
fsubrs
and
scas
push
sbb
inc
push
jae
dec
cmpsl
mov
pop
jno
dec
pop
stos
rep
cmp
jo
pop
push
sbb
pop
push
shl
pop
fsub
mov
sub
add
add
mov
outsb
mov
out
je
cmp
xor
test
cmp
nop
dec
mov
and
cs
in
popf
inc
and
cli
xchg
pop
insb
sbb
out
pop
cltd
sbb
es
jne
xchg
test
aam
insb
hlt
jmp
ret
mov
les
cwtl
pushf
enter
movsl
jne
mov
sbb
nop
mov
add
xlat
cs
jno
push
dec
sti
sbb
in
sub
call
out
rcr
mov
fwait
cmp
shll
pop
push
out
push
dec
ljmp
mov
insl
inc
insl
outsl
add
push
divb
sub
add
cmp
ja
push
cmp
jg
clc
lea
shl
adc
hlt
xlat
jmp
or
jecxz
aad
loope
and
insb
xchg
push
xor
test
out
lods
push
ret
cmpsl
cld
dec
and
sbb
push
cltd
insb
into
jne
or
jns
mov
in
inc
icebp
mov
dec
mov
dec
dec
push
frndint
ror
jg
dec
loope
jne
in
popa
mov
je
xchg
xchg
cwtl
jno
push
out
sbbl
add
ljmp
push
mov
pop
mov
mov
sub
sub
adc
xor
inc
mov
int3
pop
fwait
jmp
cs
mov
lret
sub
sub
sarb
jle
cmc
stos
or
push
pop
lods
mov
hlt
and
cli
push
mov
test
fistl
pop
inc
inc
push
push
sub
movsb
test
jo
adc
lock
xor
or
push
inc
shl
ret
sbb
addl
imul
insl
add
pop
sarb
mov
and
sub
mov
mov
jb
xchg
pop
cmc
hlt
cmpsl
add
or
dec
lods
cmpsl
mov
je
xchg
cld
and
nop
mov
aas
test
mov
push
mov
lock
inc
pop
inc
or
jmp
xchg
bound
xor
mov
sbbb
xor
fldenv
sub
lcall
gs
pushf
mov
fwait
jb
push
and
inc
add
jae
out
mov
aad
xor
push
xchg
std
xchg
adc
addr16
push
xchg
cmp
loope
shrb
dec
lea
dec
add
xor
mov
or
test
and
inc
jle
inc
shld
mov
popf
pop
cmp
mov
sbb
stc
push
sbb
mov
mov
push
jecxz
fistpl
lret
mov
inc
jecxz
enter
pop
ret
mov
sbb
mov
popf
ljmp
and
dec
and
fcoms
invd
inc
fmuls
bound
repnz
pusha
in
dec
xor
jno
cmp
ret
test
ss
mov
arpl
mov
cmpsl
xor
fisttpl
fsts
enter
arpl
jecxz
dec
pop
ds
pop
cmpsb
sti
shll
sbb
icebp
jb
inc
mov
dec
adc
and
ficomps
dec
leave
js
dec
shlb
fsubl
hlt
pop
bound
in
das
dec
leave
rcr
test
in
outsb
sbb
push
and
dec
test
pop
mov
adc
push
push
pop
dec
inc
dec
push
adc
stos
xor
dec
inc
xor
xor
mov
addr16
flds
mov
fwait
sarl
gs
loope
jmp
rolb
ljmp
call
lock
cmp
mov
cmp
sub
push
jb
loop
jmp
popf
pop
sub
subl
ljmp
inc
hlt
dec
arpl
ficompl
rorb
add
mov
scas
pop
sub
or
into
add
pop
test
into
out
xchg
sub
leave
loope
dec
cli
mov
cmp
inc
loope
mov
push
push
mov
pop
pop
or
cmpsl
in
in
icebp
out
in
mov
xor
xchg
sti
adc
stos
sbb
xor
mov
bound
add
sub
test
lahf
dec
adc
jp
cld
std
mov
push
int
jno
bound
dec
add
push
rclb
pop
inc
jecxz
sub
adc
fsts
add
or
sbb
test
mov
fnstenv
dec
inc
lcall
mov
rorb
xor
mov
add
or
and
cmp
fwait
sub
insl
mov
movsl
mov
xchg
sbb
cwtl
rcl
push
inc
les
xorl
mov
xchg
and
cli
and
xor
cmp
out
rorl
dec
hlt
bound
out
mov
int3
fcomip
test
jae
fildll
leave
sbb
pop
pop
jmp
jb
push
lea
sbb
mov
leave
ds
scas
addr16
shrl
cmp
fsubl
in
je
xchg
sub
icebp
int3
or
pmullw
repnz
fimuls
repnz
add
cpuid
inc
sbb
int
lahf
lahf
lods
inc
cmp
subb
mov
out
dec
mov
push
pop
ljmp
movsl
jb
lods
loope
and
add
sahf
insb
pop
dec
pop
popf
jbe
mov
jno
fdivl
dec
mov
push
mov
push
cmp
mov
push
scas
gs
mov
pop
jmp
repz
adc
call
pop
jecxz
mov
xor
xor
pop
adcb
jns
jg
dec
stos
add
mov
sbb
mov
loop
inc
jge
ljmp
sbb
lods
add
sub
repnz
in
inc
shll
es
push
mov
in
sub
loope
repz
pop
enter
ret
inc
icebp
inc
ds
cmp
mov
es
es
or
push
sarb
roll
fisttpl
pop
inc
cmp
push
push
pop
scas
cs
outsb
or
mov
loopne
enter
push
data16
imul
dec
lret
mov
nop
dec
dec
dec
addl
dec
pusha
or
pop
rcrb
sbb
nop
lods
repnz
cmpsb
divps
push
enter
popa
cltd
mov
fs
fxch
fistps
xchg
add
mov
xchg
cmp
enter
jg
push
xor
adcl
sub
mov
popf
or
stos
lds
add
iret
jne
addr16
ret
ljmp
icebp
scas
pop
mov
pop
pop
pop
inc
or
adc
maskmovq
ja
xor
sbb
xor
push
outsb
or
gs
xchg
pop
stos
cwtl
mov
pop
mov
fldt
push
add
lds
ret
leave
movsl
push
aas
push
xor
inc
ss
dec
test
push
cmp
mov
add
jo
dec
popf
mov
add
fs
pop
inc
mov
xor
sub
aaa
in
in
jge
outsb
std
mov
loopne
xor
std
mov
cmpsl
sub
lret
add
jl
lcall
or
jecxz
adc
sbb
lock
xor
mov
sahf
loope
sti
jae
icebp
fcoml
sarb
sub
jbe
paddq
dec
pushf
lock
push
mov
cmp
out
sbb
pop
jae
or
sub
xor
jecxz
push
push
pop
push
rol
pop
fdivr
or
addr16
nop
test
mov
inc
mov
jne
mov
jp
iret
adc
sub
nop
into
mov
mov
xchg
sbb
test
loopne
and
inc
pop
inc
pop
jo
push
mov
sbb
mul
cltd
pop
rolb
xchg
aaa
iret
cs
pop
add
xchg
lcall
pop
jle
xor
add
loopne
dec
push
movsl
or
push
test
sahf
in
fs
mov
mov
cmp
ds
xor
pop
cmp
or
mov
xchg
mulb
fistps
xchg
dec
test
ljmp
movsb
test
mov
add
mov
mov
xchg
pop
adc
jbe
and
fucomip
shlb
xchg
xchg
lods
push
arpl
orb
pop
jmp
push
xchg
push
push
add
adc
insb
adc
popf
mov
mov
aaa
mov
push
add
shll
pop
cmc
cmp
sub
stos
movsb
sub
in
outsl
or
out
dec
mov
cmp
add
daa
imul
cmp
or
inc
cmpsb
sti
pop
imul
mov
jnp
nop
xchg
adc
mov
pop
sub
adc
rcll
shr
in
div
mov
sub
cmc
adc
push
scas
push
nop
cmp
add
sti
jns
enter
dec
pop
pop
dec
mov
lock
jnp
aam
shl
mov
imul
xchg
xchg
ds
sbb
mov
scas
dec
out
aas
xor
adc
testb
cmp
add
jo
push
std
push
adc
cmc
xchg
test
aas
out
in
jmp
test
in
adc
lods
xlat
jnp
xchg
call
inc
mov
fwait
jl
ficoms
xor
jmp
clc
push
sbb
outsb
jle
or
iret
pop
std
dec
fdivp
out
adc
dec
repnz
jp
out
ror
inc
test
icebp
aas
and
lods
push
jmp
in
sahf
call
idivb
sub
out
cmp
inc
rcll
fmull
adc
sub
mov
jmp
inc
cltd
test
test
cmp
sub
mov
movsl
hlt
ret
or
pop
add
mov
push
inc
sbb
jl
cli
push
adc
popf
mov
lods
push
mov
test
icebp
push
movsb
sub
sub
testl
popf
pop
fs
jmp
mov
xor
sbb
call
xchg
dec
decb
fldcw
adc
jmp
xor
pop
sbb
test
hlt
movsb
lcall
push
adc
in
lock
repnz
ret
mov
dec
mov
pop
or
dec
pop
pop
sti
cmp
adc
add
iret
addr16
cmp
xchg
imul
scas
mov
adcl
mov
or
adc
test
jle
pop
adc
ljmp
andb
push
xlat
mov
imul
pushf
shrb
mov
sbb
loop
test
test
fs
pop
idiv
mov
xor
pop
mov
mov
and
into
mov
outsb
lods
mov
add
test
jmp
notl
mov
mov
push
pop
iret
pop
mov
les
xchg
setae
test
cmpsl
mov
lret
in
sbb
xor
cmp
inc
call
cmc
add
inc
push
xchg
and
cmp
pushf
movsb
paddusw
pushf
jns
pusha
daa
cld
xor
mov
fsubs
add
push
pop
daa
cld
xor
fisubrl
out
push
push
addr16
and
pop
adc
mov
imul
xchg
mov
ds
repz
shl
js
sar
jl
mov
or
and
adc
or
jecxz
ss
mov
cmp
fiadds
pop
mov
adc
pop
xlat
stc
lret
push
pop
jle
das
addr16
ret
jp
pop
push
flds
push
xor
aas
enter
mov
test
mov
and
pop
andb
aam
cmc
jge
xor
subl
mov
pop
mov
mov
xchg
in
data16
addb
dec
dec
xchg
push
mov
js
xchg
sahf
inc
scas
jno
xchg
cmp
loop
mov
pop
in
pushf
mov
not
sub
cmp
jbe
xchg
inc
imul
rclb
daa
ficoms
push
daa
outsl
push
je
jae
mov
mov
mov
pop
loop
mov
shl
adc
sub
xor
out
cmp
sbb
sbb
cmp
out
into
pusha
add
repnz
popa
adc
out
xor
outsl
push
add
adc
movb
fdivrs
xchg
push
sbb
scas
rclb
arpl
gs
iret
dec
std
dec
mov
data16
iret
inc
leave
xor
push
out
adc
push
lods
out
adc
sbb
sub
addb
shlb
fwait
add
je
mov
fsubs
jp
lret
dec
aad
or
jnp
pop
xchg
mov
repz
mov
loopne
gs
rolb
out
adc
push
fsubr
sti
out
push
in
xchg
jbe
inc
adc
push
inc
pop
add
clc
data16
mov
dec
es
iret
jl
sub
or
push
pop
jne
push
cltd
inc
adc
arpl
out
sbb
faddl
xor
mov
cs
adc
cwtl
out
inc
or
sub
jmp
sbb
fisubs
ja
jge
cmp
xorb
inc
insl
jb
adc
ret
cwtl
repz
loope
popf
ljmp
pop
push
testl
fnstsw
mov
xchg
ds
adc
ret
mov
mov
xchg
sbb
jbe
sti
mov
fisttpl
jbe
and
push
cli
daa
pop
repnz
mov
aam
dec
call
pusha
sbb
enter
jae
sbb
or
push
sbb
adcl
lret
xchg
xchg
inc
or
inc
leave
dec
cld
imul
call
call
mov
lock
pop
sub
cmp
loop
cmp
ror
push
pop
ja
ja
mov
and
push
aam
sbb
clc
adc
shll
push
bound
aam
push
push
lds
xchg
dec
mov
lret
xchg
inc
cltd
int
jnp
dec
jg
fiaddl
push
push
dec
jae
mov
call
or
inc
inc
shlb
pop
jnp
mov
mov
jg
lcall
cs
rcrl
sbb
rolb
cmp
rcrb
mov
pop
cmp
mov
mov
push
sbbb
and
stos
insb
in
adc
bound
flds
arpl
fsub
into
dec
jge
in
out
push
and
or
cmp
ds
rorb
push
lret
jb
mov
bound
pop
lahf
push
add
jmp
sbb
dec
testl
enter
lods
mov
dec
in
sub
inc
cmp
scas
mov
adc
out
pop
mov
pop
xor
aas
pop
sarb
push
mov
lcall
pop
pop
mov
dec
cmp
out
sbb
rcr
lods
pop
cmp
pusha
and
mov
xchg
outsl
cwtl
mov
mov
loop
add
sbb
aaa
inc
mov
inc
dec
shl
mov
test
mov
sbb
jns
xor
add
pop
cwtl
fcompl
dec
or
arpl
sbb
arpl
mov
pop
jmp
mov
push
outsb
es
adc
pop
shrl
in
rol
cmp
xor
ret
outsl
shrb
imul
jl
in
mov
fisttpl
scas
or
add
push
mov
and
mov
into
rorb
adc
lcall
lods
mov
pop
dec
repnz
sub
ror
popa
adc
xchg
mov
pop
fisubrs
cli
sub
insl
xchg
jmp
jg
and
adc
stos
pop
ljmp
pop
cmc
xor
ds
jmp
enter
mov
das
mov
stos
inc
mov
in
out
mov
jb
gs
mov
cmp
fcompl
mov
lahf
mov
outsl
xchg
push
cmpsb
xchg
ds
push
nop
aad
pop
mov
std
inc
hlt
jnp
jns
add
inc
popf
inc
jle
pop
pop
idivb
cmp
in
testb
hlt
dec
pop
mov
jae
cmc
or
push
insl
push
pop
int
inc
and
jg
inc
popf
xorb
insl
mov
adc
push
popa
leave
out
jp
or
cmp
repnz
daa
jnp
xchg
pop
mov
mov
shr
add
out
cltd
cltd
push
dec
xchg
pop
dec
sbb
or
pop
filds
cld
jo
fs
sub
aas
inc
mov
fcomps
xchg
addr16
bswap
xor
insl
stos
jbe
inc
mov
sub
aas
mov
push
and
loope
jno
inc
ljmp
xor
fisubs
sub
lods
cltd
aaa
ret
gs
outsl
fsub
and
ret
inc
xor
mov
xlat
push
hlt
mov
cltd
iret
mov
sbb
lret
pop
not
jg
pop
iret
xchg
jg
cmc
mov
xor
sti
ret
addr16
xchg
imul
and
mov
pushf
fidivrl
nop
xor
mov
clc
mov
or
arpl
xor
aam
xor
aaa
xchg
in
imul
or
mov
push
and
mov
sbb
push
popf
mov
arpl
mov
lods
sahf
leave
xchg
xor
inc
or
sbb
sub
adc
subb
test
popa
lods
lods
lcall
mov
pop
lahf
cld
lods
mov
mov
push
jecxz
data16
and
add
lods
stos
inc
ds
cmpsl
push
out
pop
fadds
sub
ret
xchg
sub
push
nop
ret
add
mov
xchg
mov
sub
je
push
xor
out
mov
and
push
add
leave
add
shlb
popl
sbb
inc
and
xlat
xchg
aaa
rol
inc
and
dec
dec
mov
jmp
fcompl
daa
push
sbb
push
les
lahf
push
push
push
insl
add
adcl
rcl
ds
adc
pop
xchg
adc
and
enter
in
out
push
mov
in
and
push
popf
xor
mov
jbe
out
jae
cmp
imul
pop
inc
mov
xchg
loope
and
in
cltd
mov
arpl
testl
into
shll
dec
loope
mov
pop
dec
cmp
ficoms
rcrb
jb
cld
dec
add
mov
and
mov
adc
dec
enter
mov
test
lcall
push
das
push
inc
rcr
jae
dec
ss
cmp
int3
xchg
cli
cwtl
or
mov
aaa
andl
pop
cli
not
mov
std
imul
loope
shrl
shlb
mov
inc
cmc
pop
ds
sbb
enter
into
test
test
popa
roll
stos
xchg
mov
loope
out
rorb
je
cmpsb
test
jl
inc
cmp
dec
sub
int3
aad
dec
pop
push
sub
jne
adc
aad
pop
push
pop
out
xchg
mov
out
outsl
push
aaa
movsb
xchg
mov
cltd
imul
shlb
mov
jl
mov
jne
push
std
xchg
lods
in
shl
cmp
or
mov
sub
mov
jns
lea
xor
adc
push
int
mov
sbb
lea
adc
cld
icebp
or
jno
mov
xchg
cmp
mov
stc
mov
adc
jecxz
mov
dec
lcall
aam
push
iret
mov
or
call
addr16
test
outsb
pusha
orl
and
pop
jg
call
in
in
movsl
lahf
cmp
mov
jl
inc
inc
push
aam
jb
mov
mov
mov
adc
cs
cmp
sarb
push
push
cwtl
data16
lcall
dec
ds
inc
std
push
or
idivl
inc
mov
mov
or
andb
cmpsb
mov
ljmp
dec
dec
xor
fnsetpm(287
rclb
and
push
jne
cltd
adc
add
popf
out
xchg
sahf
jg
and
inc
cwtl
pop
push
je
das
sub
dec
xor
ficompl
loope
fs
enter
jp
adc
out
mov
jno
xchg
jecxz
mov
sti
out
popf
test
mov
push
sub
and
fsubp
and
mov
jae
mov
inc
add
cwtl
push
adc
jo
pop
stos
jae
push
push
or
pop
lea
sub
ret
jecxz
js
add
ror
ja
and
pop
fsubl
xchg
xlat
mov
ljmp
mov
stos
jmp
add
arpl
repz
xor
jnp
movsl
push
or
lds
xor
inc
mov
sahf
sbb
jns
push
loopne
mov
adc
mov
xchg
loopne
xchg
dec
repz
ret
inc
jo
sub
out
push
mov
cmpl
mov
lea
lock
xor
xchg
adc
jp
sbb
and
pmuludq
lods
lods
pop
mov
cmp
icebp
call
loopne
cld
popa
dec
xchg
fcoml
sub
xchg
daa
add
push
test
sbb
js
and
pop
aad
das
mov
and
test
repz
jns
fsubs
aam
cli
outsl
push
repnz
out
icebp
stos
cmp
lcall
add
repnz
stos
es
dec
xchg
stos
xchg
xor
pusha
lds
pop
insb
cmp
loop
inc
std
xor
cli
inc
outsb
mulb
in
lret
sti
andb
fst
sahf
sbb
dec
and
mull
adc
sbb
ds
stos
sub
movsb
stc
pop
xor
movsl
int
pop
xchg
jb
mov
int3
es
out
xchg
dec
jbe
jg
outsb
mov
xchg
cwtl
call
iret
push
pop
inc
xchg
leave
test
addl
cmp
test
sbb
shlb
inc
ret
xchg
sub
or
andb
stc
test
insb
fs
dec
xchg
adc
jecxz
push
sbb
icebp
dec
into
loope
fwait
adc
inc
jae
mov
shrb
lock
cs
int
mov
and
lahf
add
lock
insl
mov
cmp
in
adc
bound
shll
in
dec
and
xor
aad
hlt
mov
and
aas
out
and
mov
ret
pop
out
cs
push
xlat
test
fwait
sub
testb
mulb
call
or
jbe
sub
fsts
inc
leave
lcall
add
inc
mov
lds
xor
sub
cmp
mov
jne
sbb
pslld
inc
adc
lret
xchg
aad
mov
xor
xchg
xor
test
outsb
xchg
pop
shlb
test
test
mov
add
sub
add
or
inc
out
data16
adc
sub
lahf
dec
add
push
pop
cmp
mov
cmp
das
hlt
repnz
add
mov
movsl
and
fiadds
cmpsb
dec
lret
dec
int3
int3
stc
sub
int
cmpsl
faddl
movsl
xor
jo
inc
pop
push
cmc
cli
clc
aaa
fiaddl
pop
int
into
ffree
and
lret
out
cwtl
push
lret
xchg
fbld
lret
mov
mov
xchg
jb
inc
cmp
fcmovnu
inc
jmp
lret
pusha
clc
mov
inc
fbld
lret
int
les
xchg
xchg
arpl
stc
lret
into
or
xor
dec
insb
fmuls
test
and
jmp
and
add
int
jp
ror
loopne
fwait
and
stc
hlt
rep
pop
mov
es
loope
fwait
popf
xor
test
pop
in
out
adc
sub
dec
fidivrs
testl
insb
pop
jnp
sti
mov
lods
iret
imul
add
dec
call
aaa
or
cltd
out
xor
push
fisttpll
inc
ret
mov
enter
mov
sub
jo
cmp
loop
push
sub
mov
mov
iret
or
movsl
or
xor
dec
xchg
popf
mov
out
sub
dec
lods
xor
inc
jmp
mov
inc
stos
cmp
and
cmp
add
cmp
in
jp
dec
push
pop
add
sub
adc
inc
or
mov
outsb
pop
rcr
jmp
xchg
push
in
lock
push
inc
mov
mov
icebp
je
in
mov
mov
shlb
ja
mov
rcr
sub
sub
jno
push
pop
cmc
leave
and
mov
jo
inc
push
out
cmp
jmp
lret
insl
xchg
cmpsb
div
jne
dec
lea
push
jno
pop
sub
addr16
cmp
push
inc
in
fisubrs
and
xchg
push
inc
es
xor
mov
into
mov
inc
add
stc
dec
sub
addr16
lock
subb
mov
push
test
pop
out
in
mov
mov
pop
sub
mov
inc
push
test
adc
mov
cs
xor
insb
sarb
jnp
pop
pop
mov
lar
in
icebp
fsts
jge
inc
inc
jnp
call
arpl
out
and
sti
xor
pop
mov
mulb
xchg
pop
push
addl
outsb
fimull
shrb
loopne
js
push
imul
arpl
ss
fs
cmc
bound
negb
mov
call
jbe
push
inc
das
mov
mov
popa
dec
notl
or
xchg
adc
lea
sub
mov
test
inc
outsl
nop
icebp
mov
xchg
and
dec
cmpsl
push
push
dec
jecxz
outsb
jmp
pop
mov
mov
push
jno
inc
loopne
cmp
push
sub
les
mov
nop
xor
mov
ret
mov
jae
cs
fsub
adc
mov
mov
sbb
and
lret
pop
mov
jb
cmp
or
cmp
in
lods
std
mul
xchg
jle
jg
mov
adc
into
dec
pop
mov
jmp
pop
fwait
cld
sub
mov
es
stos
ret
fstpt
add
sbb
pop
dec
add
jae
leave
add
lods
scas
sbb
sbb
xchg
stos
movsl
fs
pusha
xchg
divl
push
scas
mov
inc
arpl
push
xor
cmp
jo
xchg
and
in
int3
mov
ret
in
int3
mov
cmp
fcmovbe
dec
fwait
adc
xchg
iret
jge
mov
fdivrs
sbb
mov
xchg
or
movsl
fs
mov
adc
cmpsb
dec
incb
ds
rolb
jle
xchg
out
push
cmpl
mov
jmp
icebp
cmp
mov
loope
xor
push
push
out
cld
mov
add
cmpsb
push
mov
rcrb
xor
gs
loop
call
stos
push
jnp
insl
dec
inc
jmp
cmp
int3
jno
push
xchg
push
mov
sub
or
add
lds
cmp
pusha
xor
andb
mov
mov
adc
movsl
pop
xor
jb
gs
adc
ret
sub
inc
mov
dec
addb
mov
cmp
push
loopne
push
in
cmp
add
push
int
rclb
mov
or
pop
orb
xchg
in
push
orl
addl
aaa
scas
jae
push
xchg
repnz
loope
adc
adc
dec
pop
subb
pop
jae
cld
xor
rcrb
ds
cmp
cmp
jl
outsb
ret
sbb
mov
mov
push
dec
cmovle
mov
mov
cld
cli
in
xchg
shlb
gs
stos
popf
xor
popa
jb
ja
ret
cmp
adc
aaa
jae
jns
js
cmpsb
push
xor
and
jg
adcb
dec
cmp
das
sbb
je
in
cmpsb
sbb
clc
orl
adc
int
inc
jae
fucom
push
je
fidivl
outsl
ffree
mov
or
pop
test
sbb
mov
or
mov
nop
rcll
pop
ret
mov
ljmp
fwait
push
xchg
int3
pop
push
jne
dec
jg
pop
and
xor
test
mov
pushf
mov
and
dec
aaa
xchg
mov
inc
cli
lods
rolb
jb
repz
sbb
push
ficoms
imul
jl
loop
clc
in
std
nop
fmuls
inc
mov
sbb
mov
cld
pop
pop
cmovae
inc
sti
pop
dec
pop
xchg
and
sarb
dec
inc
pushl
fsubrl
adc
or
or
jnp
jge
mov
loop
add
andb
ja
mov
xchg
stos
jge
sarl
int
or
lods
pop
or
inc
jnp
mov
fs
daa
movsl
loopne
es
sbb
std
pop
stos
xchg
cmpl
leave
cmp
lahf
lods
or
js
ds
mov
mov
xor
jno
cvtps2pi
sub
scas
ds
ja
imul
sti
adc
mov
imul
push
rol
cmp
jp
lea
lret
and
iret
lods
push
or
xchg
adc
cs
ljmp
xor
and
cmc
push
or
out
cmp
imul
aas
notl
cwtl
push
push
mov
movsb
pop
xchg
and
push
decl
cmp
lahf
loop
cltd
andl
push
movsl
xchg
xchg
mov
clc
clc
xchg
out
bound
pop
push
cmc
test
fcom
mov
push
sahf
je
adc
and
or
rcrl
and
pop
pop
mov
mov
fucomi
out
pusha
sti
insl
inc
shr
dec
adc
roll
subb
sti
xor
outsb
jo
out
mov
pop
mov
jae
rol
jl
jae
sub
and
push
cmp
cld
test
notl
inc
daa
sbb
and
cmp
and
jle
pcmpeqw
fcoms
fistpl
cmp
inc
or
or
pop
out
gs
mov
cld
icebp
cmp
dec
mov
iret
in
repz
enter
test
dec
in
xor
cmpsl
add
clc
jmp
jb
out
imull
sub
inc
adc
cmp
aas
sahf
lret
mov
cmp
xchg
jne
add
adc
sub
loope
outsb
in
outsl
repnz
xor
gs
sti
inc
mov
or
jnp
insb
xor
inc
pop
inc
lock
xlat
add
push
pop
insb
lds
into
pop
pusha
outsb
mov
mov
repz
mov
scas
loop
es
mov
xchg
and
sub
mov
insb
es
jns
mov
adc
scas
scas
ja
dec
mov
mov
push
xchg
add
fldl
hlt
adc
out
or
out
push
lret
shr
mov
push
lahf
aaa
xor
lret
mov
sub
cmp
mov
mov
ds
mov
inc
fsubl
jb
pop
xchg
mov
dec
xchg
pop
loope
lods
inc
add
xor
aad
iret
insl
clc
mov
xchg
icebp
fimuls
push
cli
push
sub
out
les
jp
pushf
popf
mov
cmp
test
sub
aad
sti
xchg
out
jg
cmpsl
pop
daa
adc
data16
dec
imull
testl
cli
dec
ja
mov
les
xchg
aam
fnsave
ja
ds
jg
mov
outsb
aam
lcall
xchg
cmpsl
push
mov
bswap
jle
lahf
in
lds
mov
add
jno
push
jb
push
sbb
or
xor
xor
inc
rcl
pop
jnp
decl
dec
xchg
stc
jae
adc
clc
xchg
xchg
stos
or
loop
mov
cltd
test
stc
lret
fs
sbb
sti
stos
mov
icebp
and
hlt
mov
adc
ret
and
push
and
and
cmc
cmp
aas
mov
fisubrl
fwait
or
andb
or
pushl
xor
int
sub
pop
sbb
imul
push
sahf
test
mov
mov
test
sub
repnz
ss
cmp
push
rcrb
mov
jg
xchg
lret
add
mov
inc
outsb
decb
sub
nop
scas
cmpsl
nop
sti
dec
loopne
push
mov
add
cmc
sbb
or
addl
sub
lret
pop
insl
inc
push
mov
and
cmp
pop
pushw
push
daa
add
leave
loop
shrb
scas
fisttpll
data16
in
mov
pop
xor
push
leave
cmp
pushf
ss
sbb
scas
dec
loope
and
or
dec
dec
sarl
leave
pop
aaa
imul
jl
inc
hlt
xchg
sbb
mov
inc
adc
mov
pop
mov
mov
sbb
into
popa
js
and
cli
sbb
roll
int3
push
lea
mov
or
dec
mov
sbb
xorb
cmpsl
mov
fwait
xchg
movsb
push
test
push
arpl
and
pop
mov
cmp
pusha
and
pop
out
cmp
call
cltd
pusha
push
fstpl
sub
jecxz
sub
dec
fstl
nop
pushf
adc
aad
lret
pop
mov
dec
loop
push
pushf
adc
pop
push
add
sbb
push
mov
imul
cmp
pop
mov
dec
dec
imul
xchg
jnp
dec
shll
movsl
imul
movl
ret
mov
add
xorl
mov
inc
data16
adc
ljmp
icebp
movsb
lret
dec
add
and
xor
or
enter
roll
in
cmc
or
call
ss
add
fs
pop
jmp
stos
mov
in
pop
in
outsl
loopne
dec
loope
sbb
push
das
out
jecxz
push
or
jnp
test
es
cmp
pop
popf
cmp
add
dec
jg
and
jnp
lcall
add
lcall
lods
or
dec
sub
jp
mov
outsb
xor
loope
xor
xor
adc
push
ss
mov
inc
ds
out
scas
mov
jb
mov
jnp
nop
inc
add
xor
sbb
int3
les
push
arpl
cmp
push
push
adc
rolb
scas
cmp
out
dec
insl
imul
cs
mov
sub
mov
popf
popa
imul
das
pushf
int
les
add
dec
popf
jp
popfw
scas
sub
xor
sbb
pushf
inc
rcrb
sub
xor
mov
mov
push
addr16
fwait
mov
mov
insb
cmp
jmp
dec
enter
jecxz
mov
or
daa
xchg
xor
jo
mov
sub
dec
in
cli
cmp
mov
fisttps
les
mov
popfw
lcall
bound
mov
es
aaa
sbb
cmp
fs
int
clc
out
jmp
or
lods
inc
mov
test
data16
push
xor
cmc
pop
jae
push
jl
jae
sti
cltd
xchg
fists
test
pop
insl
mov
rorl
addr16
lret
adc
out
or
ja
stc
hlt
sub
pop
gs
dec
add
or
sbbl
pushf
cs
xchg
mov
jae
mov
or
icebp
or
cmp
or
popf
and
int3
ljmp
in
and
popf
xor
call
clc
push
out
mov
mov
jnp
xor
mov
mov
pop
inc
sti
mov
das
out
fsubl
adc
adc
pop
out
int
cmp
pop
out
int3
aad
add
divb
jmp
push
pcmpeqb
pop
insl
out
fidivrs
lea
int
adc
out
insl
pop
fstpl
ja
sub
cmp
dec
push
dec
fistps
ja
movsb
xchg
adc
xchg
or
sub
cwtl
mov
inc
push
cmp
mov
add
inc
sub
fwait
loope
inc
ds
cmp
sub
addr16
dec
mov
jge
je
cld
in
cmc
mov
sub
mov
popf
cld
cmp
pop
pop
sbb
jp
insb
scas
iret
jnp
leave
pop
xchg
pop
shrl
fdivs
sbb
cltd
add
mov
movsl
xorb
mov
ss
dec
movsb
stc
xchg
push
stos
test
inc
xchg
pop
adc
sbb
movsb
lds
mov
packssdw
xchg
or
cs
scas
cmp
and
inc
shll
cltd
ja
add
jge
sub
in
loope
push
mov
inc
test
dec
in
call
jnp
inc
cltd
or
je
cmp
gs
and
inc
or
push
adc
sti
cld
int
and
outsl
aas
nop
test
es
fistpll
mov
andb
iret
into
or
lods
inc
jge
rolb
dec
aas
icebp
push
cs
inc
or
outsl
stos
or
xchg
xor
pop
scas
adc
sarb
stc
inc
sub
add
push
and
xor
cld
std
jbe
lds
xchg
mov
mov
cmp
xlat
iret
xorb
mov
repz
in
add
movaps
cmpsl
push
faddl
sub
xchg
movsl
scas
and
dec
jb
jne
and
insl
xchg
movsb
enter
aas
ret
jbe
sarb
cmc
mov
pusha
aaa
or
jne
add
adc
fnstsw
scas
adc
or
roll
repz
les
push
insb
inc
stos
inc
lods
les
jns
fcomps
mov
inc
les
sub
cld
jmp
and
test
mov
cli
ss
mov
mov
push
in
lods
dec
data16
and
sarl
insb
cltd
jne
lret
push
push
or
dec
in
lret
xor
shr
dec
outsb
je
dec
bound
sub
mov
dec
jno
out
mov
call
pop
rclb
icebp
int3
mov
sub
icebp
test
cmpsb
push
xchg
dec
or
imulb
pop
sub
adc
adc
push
lcall
test
and
or
gs
mov
pop
push
test
mov
outsl
cmp
je
loop
jl
fs
insl
shlb
sub
pushf
fisttps
cmp
adc
imul
mov
lret
fstps
fsubrl
jecxz
xor
int3
movsb
ret
cmpsl
adc
outsl
das
jmp
sub
mov
cmp
xchg
data16
xor
addl
or
inc
or
mov
les
sbb
push
lcall
inc
cmpsl
cmpsb
in
cmp
ret
push
pop
lods
popf
jmp
stc
in
xchg
mov
loop
icebp
scas
inc
pop
mov
cmpsl
cmp
add
lcall
in
shrb
mov
scas
pushf
mov
test
add
call
icebp
out
xor
push
mov
test
mov
test
imul
push
sbb
ljmp
jmp
fs
mov
stos
sbb
xor
mov
daa
adc
fisubrl
pop
or
mov
mov
lret
push
js
mov
xorl
popf
sbb
cli
sub
push
lahf
outsb
mov
mov
dec
ret
mov
fsubl
push
insb
add
mov
sub
call
data16
decb
mov
mov
cmpsl
pusha
fldenv
push
shrl
add
je
lcall
inc
gs
lret
xorb
outsb
imul
jae
pop
dec
aad
mov
or
fisttps
pop
push
cmpl
push
dec
das
xchg
inc
sub
lcall
mov
sbb
pop
fbstp
sbb
in
adc
xchg
sbb
pop
and
fdivrl
or
aaa
pop
inc
cli
outsl
ds
dec
imul
jp
outsl
addl
push
push
sbb
shrb
je
repz
or
jp
mov
inc
mov
int
inc
mov
mov
es
sar
push
mov
lods
jnp
add
ljmp
add
sbb
sub
add
mov
mov
mov
out
out
subps
add
sbb
lds
iret
fwait
addr16
popa
jae
xor
jae
andb
adc
jnp
dec
push
aaa
push
or
xchg
addr16
cs
push
loope
adc
dec
inc
pop
jge
daa
out
push
loop
outsb
adc
loopne
je
add
icebp
pop
into
lahf
dec
mov
push
pop
daa
lcall
es
cs
call
lahf
mov
xchg
fcoms
in
lock
rorl
add
mov
jl
lret
mov
dec
das
icebp
lcall
cli
daa
sbb
insl
stc
jmp
xorl
cmc
stos
jecxz
mov
adc
in
pop
in
repz
aaa
add
cmc
mov
aad
jl
leave
addb
popa
pop
cmp
je
int
das
and
or
pop
pop
stos
test
scas
push
jbe
mov
and
inc
cwtl
xchg
lock
imul
sahf
lret
pop
out
dec
sub
data16
enter
es
lahf
dec
cmp
mov
or
jo
sbb
mov
cs
imul
int
movsb
xor
lds
imul
mov
jg
push
xchg
in
lea
cmp
push
and
adc
fcomp
lahf
data16
test
inc
test
leave
test
test
sbb
cvttps2pi
movsl
mov
iret
outsb
shlb
jecxz
aad
fistps
out
sub
pop
dec
mov
arpl
xor
push
push
pop
dec
sub
pop
rclb
xchg
ljmp
movups
jns
insl
cmp
mov
and
insl
rol
lahf
das
ficoms
loopne
fcomp
lds
mov
js
sarb
adc
fisubl
lret
xlat
mov
and
dec
mov
ret
and
inc
fxch
in
sarl
or
pop
ret
shlb
xchg
test
inc
sbb
xor
sbb
js
std
xchg
mov
mov
or
dec
repz
cli
repnz
faddp
fists
nop
das
adc
and
and
cli
mov
mov
jne
cmpsl
xchg
xor
leave
inc
aad
dec
ret
mov
idiv
pop
xchg
xor
int3
cltd
xchg
add
mov
cmp
add
xlat
mov
jp
fildll
xchg
mov
bound
test
scas
ret
xchg
mov
dec
cmp
add
popf
push
sahf
orl
les
mov
sti
xchg
or
pop
push
and
mov
js
jle
mov
fcomip
push
sbb
outsl
sub
push
xchg
and
pop
int3
sahf
loopne
cmpsl
xchg
incl
daa
loopne
xor
scas
loopne
sub
adc
push
imul
imul
fcmovnb
add
pop
add
je
mov
inc
lock
mov
xor
xor
push
xor
stos
test
lock
sub
xchg
cld
movsb
xchg
adc
add
clc
fnstenv
xchg
sub
rcrl
push
pop
pushf
jecxz
pop
lahf
push
hlt
cmp
cmp
nop
and
fcom
out
sarb
jo
xor
pop
cmp
rcrb
and
ds
push
fimuls
sbb
mov
lret
push
pusha
mov
adc
js
int3
sub
push
lods
fsubl
inc
xchg
and
cmp
nop
es
xor
push
repnz
cmpsl
push
or
lret
rorb
xchg
jne
loopne
pop
notl
lcall
ja
mov
inc
or
cmpsl
or
fwait
sbb
fiaddl
ret
mov
push
scas
pop
scas
int
push
mov
stos
push
jns
out
xor
push
and
xlat
cwtl
add
push
or
leave
jp
cmp
cwtl
fbstp
lds
push
adc
je
sub
dec
nop
int
decl
mov
rcl
inc
mov
je
inc
cwtl
mov
aas
mov
scas
mov
jp
push
sub
xlat
push
cmpsb
pop
imul
iret
lcall
xchg
fisubrs
out
dec
push
dec
xchg
sub
loope
clc
out
mov
push
cli
add
sbb
inc
adc
xlat
sub
fiaddl
sar
cmp
aam
cmp
sbb
mov
xor
test
sbb
adc
call
dec
mov
mov
fimuls
adc
out
scas
dec
es
in
lods
sub
push
sarl
jl
shl
divl
outsl
mov
ret
sub
add
xchg
mov
xchg
scas
test
test
pinsrw
adc
push
repnz
aam
int3
loope
xchg
dec
sub
imulb
ds
xchg
movsl
out
mov
les
std
mov
mov
out
fidivrs
into
repnz
mov
jp
cwtl
mov
jo
shrl
mov
xchg
nop
ja
sbb
aaa
popa
fbld
inc
mov
dec
inc
jbe
in
inc
push
adc
sub
fs
adc
add
cmpsl
or
dec
push
push
xor
sub
ja
xor
inc
push
mov
pop
mov
jne
pop
icebp
fmull
int
icebp
ret
inc
pop
iret
mov
adc
rep
adc
push
adc
mov
je
jne
enter
in
xchg
push
lahf
jle
in
in
pop
add
inc
dec
testl
xchg
jno
cmp
mov
sahf
jmp
or
jmp
imul
push
pop
push
dec
adc
adc
sub
pop
dec
imul
hlt
scas
mov
and
cmpsl
rcr
nop
test
lret
scas
sbb
movl
pop
orb
ja
mov
jle
push
lret
xchg
nop
inc
daa
or
or
test
push
lcall
lret
or
fstpt
insb
pop
orl
jae
call
cmp
cmp
repnz
pop
xor
push
adcb
cmp
inc
pop
call
add
or
sub
or
jb
nop
popf
vfrczss
scas
lahf
pop
ret
adc
hlt
push
dec
mov
pop
aad
push
subl
jo
dec
cmpsb
push
cltd
mov
les
pop
jbe
xchg
loope
mov
inc
mov
sbb
jno
or
cwtl
aaa
shlb
idiv
sub
sbb
mov
add
xchg
push
mov
or
std
fcmovb
push
cmp
mov
xchg
mov
call
xor
gs
push
pop
and
xchg
cwtl
sub
push
int
jmp
fwait
jp
xchg
add
pop
aas
stc
mov
cltd
repz
push
inc
andl
inc
rolb
adcb
and
stos
dec
test
jg
jae
cmpsb
mov
loope
hlt
cmp
cmp
fs
mov
add
inc
sub
dec
fwait
add
and
mov
or
xlat
test
mov
and
pop
enter
imul
nop
andb
sar
push
fstps
add
mov
sbb
mov
les
push
fwait
sti
insl
cmp
mov
mov
outsl
sub
popf
test
or
xor
mov
inc
pop
sub
mov
int
push
push
add
jle
stc
daa
fdivl
imul
dec
popa
loopne
popl
lret
inc
lods
sub
xchg
stc
bswap
pop
in
fcmovnu
cmp
inc
pop
mov
jle
xchg
fists
ss
mov
and
pop
mov
gs
scas
sub
lds
dec
jbe
or
js
jno
mov
mov
push
adc
and
insb
adc
ljmp
das
movsb
fdivp
popa
xchg
lock
faddp
lods
xorb
jge,pt
adc
fldt
in
xor
push
mov
popf
mov
bound
pop
lret
mov
xchg
mov
fists
push
or
xchg
scas
dec
mov
std
lea
arpl
pop
adc
push
ret
test
sub
out
pop
xchg
sub
jmp
xchg
xor
in
fildll
mov
add
pop
add
out
adc
mov
jae
test
xchg
call
jp
pushw
hlt
pop
mov
cmc
mov
js
lcall
sbb
jmp
cwtl
outsb
lock
xchg
sbbb
cmpl
addr16
push
push
hlt
aad
inc
inc
add
in
gs
mov
xchg
mov
in
xor
pop
mov
addr16
adc
xor
mov
fsts
mov
cmp
mov
cld
movsl
movb
and
lret
mov
arpl
inc
mov
and
orl
add
repnz
fisttps
enter
mov
daa
lret
mov
mov
fsubrs
dec
xchg
mov
sbb
testl
cmp
insl
out
and
shrb
dec
xchg
cmp
dec
cs
sahf
sbb
mov
insb
fwait
dec
repnz
rcl
xor
shll
xchg
inc
call
push
movsb
and
jg
add
test
and
sahf
mov
mov
ds
lods
jae
lret
lcall
imul
rcll
sbb
xchg
in
jle
dec
mov
fstpl
jb
or
hlt
adc
scas
cmp
leave
pop
in
add
cmpsb
ret
dec
pop
mov
jle
es
stos
mov
push
sbb
push
stos
in
add
cld
outsb
movups
das
jmp
loopne
inc
shr
mov
lret
imul
add
cs
xchg
add
push
inc
xor
mov
cmp
xchg
stc
lret
mov
add
aam
clc
loope
mov
gs
xchg
pop
aad
pusha
add
cli
sub
and
ja
hlt
aas
nop
imul
arpl
add
orl
ret
ljmp
inc
enter
dec
jg
bound
jmp
push
fstpl
push
sub
xor
add
xor
adc
xor
popf
xor
cwtl
iret
mov
push
test
shrl
add
pop
aaa
in
jbe
mov
das
xor
mov
push
xchg
and
cmp
push
dec
mov
mov
mov
imul
cwtl
movsl
test
insb
sub
push
xor
jmp
cmp
stc
add
cmpsb
fcmovnbe
rcrl
push
jae
jmp
sub
xchg
icebp
inc
or
inc
cld
mov
xlat
mov
ja
mov
xchg
inc
mov
aas
icebp
adc
adc
jae
into
mov
out
mov
mov
popf
cwtl
in
or
in
xor
shll
pop
lea
into
js
faddl
stc
ficompl
popf
jae
shl
mov
sub
scas
push
pop
std
enter
dec
jbe
jns
fs
pop
mov
pop
pop
mov
add
test
insb
inc
add
pop
cmp
imul
mov
shl
cmp
pusha
mov
es
inc
call
add
mov
cmc
movsb
or
and
shrl
xor
test
lret
sbb
addl
vmovddup
addr16
jnp
aas
mov
adc
cmp
lea
mov
cmc
shlb
scas
dec
fdivrl
sbb
outsl
xchg
xor
mov
sbb
call
mov
jo
cmpl
mov
pop
test
faddl
inc
loope
or
jnp
test
test
stc
cmp
push
mov
mov
mov
xchg
outsl
iret
vpmacssdqh
xchg
sub
mov
inc
pushf
jmp
out
and
in
xchg
mov
dec
data16
sbbl
and
add
in
cmp
stos
mov
jno
out
mov
lret
jo
fwait
inc
jg
int3
mov
dec
popf
cli
stos
cmp
mov
cmc
mov
iret
add
mov
mov
and
fnstsw
dec
loop
imul
ljmp
jnp
add
mov
jmp
decb
mov
xor
cwtl
xor
push
xor
adc
mov
push
pop
pop
icebp
jb
jmp
push
in
push
adc
insl
cmp
in
mov
repnz
sub
push
and
push
icebp
add
loop
and
in
cmp
push
enter
push
jge
push
and
repz
fdivrl
stos
outsb
ds
lret
mov
out
push
jmp
jo
fs
outsb
add
in
mov
mov
mov
pop
js
std
mov
mov
mov
enter
dec
popa
aas
cmp
out
xchg
lcall
push
mov
bnd
popf
cmp
rcrl
scas
add
adc
xchg
inc
jae
stc
daa
or
sbb
add
cltd
mov
xchg
inc
mov
or
ljmp
lods
pop
pop
test
lock
xchg
cs
mov
nop
ret
dec
shlb
mov
stos
jnp
pop
repnz
mov
push
ljmp
mov
lods
pop
xchg
mov
repz
daa
or
ljmp
mov
rolb
test
test
stos
or
mov
sbb
bound
or
int
sub
add
inc
aas
mov
jge
adc
sbb
xor
add
cmp
xchg
mov
lret
push
push
testb
xchg
cld
mov
jmp
sub
lods
xlat
push
pop
clc
mov
ret
mov
sub
xchg
mov
repz
push
lret
out
xor
std
test
cmp
jnp
orb
shrb
or
xchg
jb
or
aaa
mov
pop
xor
shlb
lock
xchg
inc
sbb
into
and
xchg
sub
aas
inc
inc
dec
dec
or
or
loopne
xchg
add
lea
in
jne
addr16
dec
hlt
leave
push
into
movsb
jp
add
stos
xor
rclb
sub
js
cmp
sub
xchg
sub
cld
int
ja
cs
xchg
push
rcll
xchg
push
ds
mov
stos
sub
icebp
xor
aam
or
adc
jge
dec
and
sub
adc
pop
cmp
xorb
fldcw
lea
bound
dec
enter
fwait
push
lods
mov
out
pop
pop
mov
fwait
pop
cmp
int3
imul
adc
cs
repnz
stos
sbb
pop
cli
and
je
mov
test
hlt
mov
mov
jae
imul
add
adc
or
fdivl
push
pop
dec
or
mov
and
or
mov
into
xchg
sahf
fldenv
jg
xchg
cld
xchg
faddl
jb
clc
mov
loop
dec
in
pop
in
data16
cmp
enter
adc
mov
or
lret
jp
add
mov
sub
popa
xchg
adc
test
mov
or
ret
sub
mov
pop
mov
inc
inc
stc
sub
call
pop
arpl
arpl
test
in
xchg
cli
cmp
lea
or
fsubl
imul
mov
lret
cmpsl
xchg
fbld
sbb
ss
popa
jns
mov
pop
pushf
repnz
jb
add
nop
mov
out
test
inc
xor
pop
and
std
mov
insl
jle
or
popl
imul
dec
push
ljmp
mov
lock
test
push
stc
cmp
add
jmp
sahf
lret
add
mov
and
roll
push
pop
test
fcmovne
mov
and
push
mov
out
jmp
cld
ljmp
std
call
fldl
mov
leave
sbb
jmp
sub
psrad
sti
xor
movsb
scas
or
adc
ret
hlt
cmp
idiv
lea
aas
clc
lret
mov
push
xor
hlt
and
dec
or
test
ret
adc
pop
test
mov
shrl
jns
fistl
ret
insb
mov
jbe
daa
stos
pop
aad
jecxz
mov
xchg
call
push
shrb
aaa
stos
jmp
mov
inc
int
std
xchg
insb
dec
fimull
int3
inc
mov
mov
sbb
dec
lock
pop
shl
hlt
xchg
imul
xchg
xor
xor
les
aam
mov
xchg
push
dec
sbb
lret
jne
pusha
xchg
cld
out
jp
add
xchg
push
adc
subb
sbb
mov
sti
js
insb
jno
adc
std
mov
xchg
mov
jns
push
mov
sub
pop
filds
dec
jns
bound
inc
in
mov
scas
pop
jae
or
cmp
inc
gs
xlat
lods
add
daa
adc
fstl
jl
fildl
cmp
mov
mov
cmp
lock
cmp
sahf
sub
push
fmuls
mov
adc
and
cmpb
outsl
mov
jnp
scas
mov
jno
inc
movsw
add
ret
fsubrl
testb
in
shlb
and
sub
rcl
daa
ljmp
cmc
ds
mov
dec
mov
lret
inc
ds
inc
and
out
sbb
repnz
jns
add
cwtl
cli
mov
ficoms
mov
loopne
cmp
adc
inc
jg
add
xchg
jo
pop
jbe
sarb
lcall
xor
jg
add
call
in
cmp
int3
push
fidivrs
xchg
jb
repnz
jmp
and
rorl
xchg
mulb
addl
nop
push
insb
xlat
mov
push
ret
jae
je
cld
stos
xchg
mov
pusha
mov
xor
sarb
test
xchg
imul
stos
xchg
pop
out
jmp
mov
in
popf
xchg
xchg
test
dec
sarb
add
and
mov
mov
test
dec
jo
out
cmp
ss
xor
lahf
dec
test
pop
xchg
setb
aaa
sbb
dec
outsl
pushf
xor
into
adc
in
aam
mov
sub
push
test
pop
cmc
imul
sbb
jle
pop
adc
int3
popa
inc
jmp
adc
ret
mov
jb
aad
jne
in
or
icebp
jp
jl
stos
out
enter
mov
enter
ss
pop
popf
iret
cli
jns
or
nop
xlat
sub
pushf
adc
xor
adc
jge
pop
bound
aam
cmp
pop
mov
repz
cmpsb
pop
sbb
push
mov
dec
cmp
xchg
das
je
lds
mov
pop
out
aam
and
in
xchg
fcmovne
sub
dec
inc
push
push
push
push
dec
or
lret
jae
subl
pop
inc
inc
bound
mov
js
sub
jb
aaa
out
sub
repz
mov
mov
int3
arpl
xchg
jecxz
or
xchg
dec
shl
sub
fisubl
push
lods
pop
sti
xlat
mov
pop
cmp
popa
sub
pop
dec
mov
in
stos
lods
leave
aam
fdivrs
flds
push
jecxz
mov
andl
mov
fidivrs
scas
scas
push
setnp
pusha
fstpl
pop
jl,pn
cwtl
iret
insl
loop
xchg
sbb
shl
nop
push
stos
movsb
inc
push
jns
add
es
pop
enter
cs
out
inc
add
push
ficomps
mov
ret
pop
test
push
add
fildl
gs
or
pop
inc
pop
gs
xchg
mov
clc
pop
sbb
in
jp
jno
mov
pop
xor
xor
push
mov
int
mov
sub
rol
inc
call
shl
push
aad
icebp
dec
pop
fisttps
xlat
jmp
mov
mov
jp
mov
sarl
call
sarb
movsb
and
dec
mov
mov
test
das
mov
or
pop
jnp
xchg
inc
inc
jo
and
frstor
jecxz
cmp
or
aam
pop
add
std
inc
mov
adcb
in
hlt
stc
or
movsl
or
dec
inc
sbb
hlt
into
mov
das
inc
inc
push
inc
test
fimull
adc
push
mov
js
pop
addb
dec
sub
es
hlt
inc
xchg
data16
aad
iret
loop
sub
test
pop
nop
out
sarb
jmp
cmc
mov
scas
and
rcrl
mov
pop
add
sbb
jle
adc
fcmovb
jbe
fstps
bound
sub
mov
lret
cmp
inc
fbld
in
aaa
ss
adc
mov
jo
sub
mov
push
push
mov
out
or
mull
ret
fdivr
push
scas
enter
imul
xchg
push
adc
mov
mov
mov
ss
push
mov
mov
mov
ret
cmp
test
jp
xor
call
mov
or
mov
sbb
js
es
fisttpl
cli
imul
mulb
movsb
and
fsts
aas
cmp
repnz
xor
inc
loopne
sub
sarb
push
lret
sub
xor
dec
jbe
fs
push
mov
loope
xchg
pop
push
cld
add
jg
jle
outsl
insb
push
lods
mov
and
dec
xor
push
lods
insl
mov
std
xchg
repnz
jmp
mov
push
test
cmpb
movsl
add
jnp
cmp
sub
shrb
xor
push
pop
in
pusha
jmp
push
mov
movsb
loope
mov
xchg
pop
mov
xlat
mov
out
fcmovb
fcmovb
aaa
sbb
xchg
das
fldl
and
pcmpgtd
dec
mov
clc
mov
iret
xor
lahf
cmp
shll
loopne
cmp
std
lods
test
int
fimuls
xor
xor
xlat
test
jl
ljmp
shrb
int3
test
mov
dec
pop
fwait
outsb
and
jl
dec
mov
ljmp
mov
or
mov
cmp
sub
jbe
or
lock
adc
push
or
adcb
movl
nop
fwait
xchg
out
ror
jne
repz
mov
or
imul
dec
fiaddl
xchg
xchg
add
pop
mov
mov
push
fnsave
cltd
stos
aas
imul
fwait
cwtl
and
enter
shrl
push
repz
ss
insl
out
call
and
mov
push
ss
shll
jg
mov
add
mov
repnz
fwait
xchg
pop
xchg
out
ret
push
push
loope
lahf
or
jecxz
fs
and
sbb
and
lods
sub
xchg
repz
and
and
sbb
lea
jne
loopne
jbe
lret
inc
push
xor
pop
jmp
insb
xchg
mov
lret
push
out
test
mov
pop
and
das
mov
and
data16
out
or
fisubrl
clc
lea
cmpsl
xor
cli
js
out
mov
sub
push
insb
inc
or
pop
sub
out
push
es
mov
shr
cmp
sub
lcall
lcall
aas
adc
leave
incl
mov
aam
lret
aad
hlt
outsl
fisttps
mov
aaa
add
mov
lea
cs
ficomps
nop
add
sbb
bound
inc
les
xor
cmp
mov
pop
xlat
lods
hlt
jg
mov
jae
jle
xchg
pop
pop
shlb
pushl
shrb
xor
push
fwait
hlt
mov
cld
mov
movsb
xchg
pop
push
sti
aaa
xor
ljmp
les
dec
std
int
inc
test
push
inc
cmc
mov
fbld
jns
lock
shll
js
jno
clc
push
dec
rclb
cmp
out
das
pop
outsl
rolb
neg
cmpsb
cld
icebp
mov
push
pop
add
or
fcmovnu
mov
sbb
sbb
test
mov
push
fnstsw
push
sbb
shl
jnp
loopne
push
cli
add
sub
mov
fsubr
ret
add
rcll
add
xchg
pusha
fiaddl
pop
cmp
mov
jno
imull
xchg
sbb
pop
xchg
ret
jmp
mov
repz
sbb
sub
js
inc
scas
frstor
imul
mov
dec
xchg
dec
push
push
sbb
lret
inc
ror
jnp
mov
pop
jp
and
call
ds
out
pop
pop
out
jecxz
jp
inc
loopne
jne
call
ret
push
test
mul
pandn
push
ret
aam
xchg
xchg
scas
mov
mov
daa
ljmp
pop
ss
clc
mov
push
pop
mov
fidivl
push
enter
inc
xchg
pop
mov
pop
ss
sbbl
jns
outsl
fs
enter
adc
fnstsw
cwtl
push
popf
ret
sahf
ss
lea
mov
jg
adc
roll
insl
jmp
dec
cli
sbb
mul
push
adc
rdpmc
ja
into
imul
lcall
mov
rorb
inc
pop
mov
shl
mov
mov
les
xlat
ret
int
int3
in
xchg
push
xor
dec
push
mov
shlb
adc
notb
out
inc
hlt
pop
stos
call
leave
shlb
xchg
mov
mulb
aam
stos
dec
adc
lahf
cmpsb
loop
push
das
jg
test
or
out
int
je
jns
dec
in
xor
and
pushl
mov
mov
mov
int3
xchg
fmulp
mov
dec
aaa
jge
movsl
mov
adc
adc
push
jl
aas
imul
cvtdq2ps
cs
sbb
jo
inc
pop
insb
fmul
adc
adc
and
call
inc
rolb
and
insl
mov
into
fld
andb
outsl
or
push
loope
or
mov
int3
mov
mov
push
nop
mov
jo
push
jno
std
mov
xchg
outsl
fimull
mov
popa
cwtl
push
cwtl
inc
xchg
mov
xchg
int3
sub
stos
incb
mov
push
adc
fdivrs
addb
mov
outsb
xor
inc
lods
mov
outsl
xor
cmpsb
fbstp
jbe
sbb
mov
mov
das
xchg
push
insl
jbe
sbb
mov
push
adc
xchg
test
mov
sbb
daa
in
adc
out
into
pop
sbb
popa
inc
or
inc
mov
mov
xor
fdivrs
mov
fcmovb
xor
out
adc
xor
cmp
lds
mov
dec
mov
dec
dec
fstps
adc
push
jmp
in
insl
mov
sub
mov
inc
xlat
xchg
mov
sbb
scas
xchg
cmpsb
aas
sbb
xor
and
fbstp
cmp
loopne
ret
fcoml
pop
cmp
arpl
xor
aad
loopne
or
sub
lea
in
aad
sbb
mov
es
mov
mov
add
adc
icebp
rcll
int3
loope
inc
test
xor
call
mov
sahf
std
fwait
imul
mov
cld
hlt
addb
push
jae
jo
in
cmpsb
inc
in
or
scas
shll
sub
sbb
mov
pop
mov
mov
push
lods
repz
cltd
cs
lret
ljmp
out
lret
fadds
ret
xor
rcr
jl
pop
fcoms
adc
cwtl
xor
mov
int3
js
hlt
jg
es
or
popf
pop
jo
lea
or
mov
and
or
mov
sub
fildl
out
mov
andl
iret
icebp
shll
xor
cmp
sub
mov
ds
ljmp
mov
fstl
jmp
dec
insb
std
cmc
in
xchg
add
push
inc
cli
and
cmpsb
je
aam
loop
or
arpl
out
loopne
xchg
pop
dec
mov
xchg
icebp
cmp
pop
sbb
push
adc
fcomps
mov
sbb
and
cmp
jne
insl
dec
enter
fidivs
pop
pushf
pop
inc
addr16
stc
scas
sbbl
xor
lret
fisttpll
repz
js
mov
push
pusha
push
rcrl
lahf
roll
pop
std
pop
push
jb
and
fidivl
out
imul
jne
lods
push
cmpsl
and
jg
lgs
mov
ret
sub
jns
jl
jae
ljmp
aaa
js
jo
pushf
and
insl
and
adc
lahf
mov
jo
cmpsb
enter
sahf
cmp
call
stos
rclb
jmp
sub
sti
mov
sahf
seta
mov
stc
xor
jmp
mov
mov
lds
jg
mov
add
xor
das
aam
gs
dec
loop
adc
aad
xor
dec
push
inc
xor
inc
sbb
ja
sbb
mov
cmp
mov
adc
sub
arpl
sub
enter
paddusw
inc
pop
rorb
xchg
fnstcw
les
pop
testl
shll
inc
lods
mov
imul
out
adc
fidivrl
xor
cmp
jmp
fdivl
mov
js
je
insb
xchg
test
jge
mov
xor
mov
cmp
adc
sub
xchg
cmp
dec
daa
add
stos
sbb
out
dec
movsb
jnp
xchg
sub
jecxz
pop
lret
mov
xor
sbb
pop
subl
add
negb
mov
mov
cmp
aas
ret
inc
stos
cmp
scas
jo
xchg
sub
lods
test
arpl
xchg
imul
adc
push
jnp
idivl
cld
xor
js
fwait
addr16
iret
mov
pop
cmp
or
cmp
lods
repz
gs
outsl
push
mov
in
add
clc
enter
std
cmc
loope
dec
imul
in
mov
mov
sbb
leave
lea
leave
xor
imul
adc
ss
insl
fsubs
stos
std
clc
mov
ficomps
jns
arpl
cmpsl
pusha
nop
xor
pop
dec
subb
mov
adc
jmp
sbb
aas
dec
stc
jo
mov
lcall
xchg
xchg
fnclex
or
push
xchg
dec
xor
ret
sbb
aas
adc
jp
inc
mov
xor
and
push
adc
jnp
sbb
mov
add
or
pop
hlt
ljmp
scas
xchg
stc
mov
xor
loope
xor
pushf
or
lds
outsb
inc
mov
hlt
arpl
inc
jne,pt
outsb
mull
xor
sahf
icebp
mov
and
mov
subb
scas
push
mov
cmpsb
ss
shll
rol
mov
cmc
inc
push
push
adc
popa
cmovb
inc
shl
shlb
mov
out
and
or
jge
mov
cmpsb
in
xchg
aaa
imul
pop
jl
repz
enter
sti
ja
push
inc
pop
push
imul
je
cmp
mov
push
lock
out
in
gs
ljmp
xchg
ljmp
int
imul
xor
xchg
popf
sub
insb
mov
dec
ljmp
cltd
movsl
lret
xchg
out
dec
xorl
test
mov
mov
lea
push
insb
jo
rclb
pop
pop
or
enter
sub
outsb
push
dec
xchg
mov
or
mov
cmp
cwtl
pop
enter
in
dec
inc
mov
dec
call
inc
mov
out
rorb
dec
jecxz
stc
mov
adc
cmp
aaa
jge
and
lcall
and
ja
ds
or
adc
xor
push
lret
outsl
jb
andb
jns
mov
push
push
sbb
sarb
out
and
dec
shrb
push
addl
stos
ss
ret
aaa
scas
loopne
fucom
scas
rorb
cmpsl
xadd
sbb
pushf
loopne
mov
data16
inc
js
hlt
xor
mov
inc
inc
mov
pop
lods
push
sahf
push
or
lock
inc
mov
cld
or
add
xchg
or
dec
outsl
shrb
mov
jp
xor
pop
mov
sahf
lods
leave
nop
xchg
data16
std
add
mov
mov
xchg
sub
test
sub
js
and
loop
sbb
test
push
push
int3
scas
ss
inc
xchg
and
ds
inc
add
mov
rcl
mov
scas
stos
int
lret
int3
ss
sub
out
je
jns
pop
or
in
jae
icebp
and
stos
dec
pop
push
outsl
sbbl
movsl
or
mov
push
mov
jmp
cmp
movsb
cmpsb
adc
cs
jno
and
leave
jmp
repnz
in
dec
pop
mov
xchg
jnp
jne
push
dec
mov
pop
int3
fsubl
push
pop
cmpsl
int
and
in
mov
divb
ret
in
inc
repz
call
xchg
test
sbb
les
adc
mov
shlb
ds
mov
js
mov
jl
cmpsb
sbb
mov
xor
push
out
add
or
cmp
and
jne
mov
and
jnp
jns
or
push
pop
dec
inc
inc
pop
sbb
imulb
and
movsl
stc
or
lcall
dec
in
fcoms
out
and
mov
jle
enter
add
xchg
je
cli
jae
aaa
stos
cmpsb
lret
mull
and
popa
mov
mov
fmull
mov
dec
mov
inc
daa
adc
mov
sbb
push
hlt
cmp
sahf
lock
mov
fcmovb
into
pushf
repz
jbe
shlb
pop
dec
fdivs
jne
outsb
outsl
aam
test
hlt
aaa
popa
punpcklbw
mov
mov
data16
dec
mov
addr16
outsl
stos
jp
xchg
mov
jp
repz
lods
sti
test
xor
sub
mov
clc
sti
ds
and
stos
or
mov
mov
sbb
sbb
jp
out
and
loopne
lcall
mov
xchg
cltd
enter
loopne
scas
xchg
push
sbb
leave
pop
jne
cltd
add
or
adc
ror
out
push
adc
and
inc
js
pop
dec
push
mov
jns
jecxz
into
sub
rcll
sub
ret
insb
loope
in
xor
xchg
add
sbb
rcrl
push
pop
push
adc
popa
cmp
stos
mov
sub
rclb
push
jbe
js
iret
xor
inc
mov
ss
loope
sti
bnd
pop
mov
fsub
xchg
lods
loopne
sbb
adc
out
in
cwtl
or
js
ja
add
rorb
sub
andl
and
mov
cmp
inc
enter
xlat
int3
xchg
pusha
ljmp
pop
dec
insl
jb
xlat
pushf
data16
jno
leave
roll
xchg
push
pop
or
ret
out
or
mov
jbe
xchg
aam
cmp
adc
cld
lret
scas
fcmovnu
pop
sub
lods
mov
lcall
cli
ljmp
inc
test
sbb
cltd
push
mov
stos
sbb
inc
adc
xchg
in
popa
ja
jbe
ljmp
idiv
mov
hlt
outsl
subl
movsb
dec
pop
lock
adc
jl
xor
cmpsl
xchg
or
and
cmp
push
icebp
jns
fcmovnb
add
roll
sbb
in
dec
push
data16
testb
xchg
andb
push
add
cmpl
xchg
pusha
adc
mov
or
lret
ljmp
ljmp
mov
icebp
xchg
aaa
jbe
mov
jae
push
iret
mov
jo
or
and
sbb
cmp
outsl
movsb
mov
jno
or
pop
popf
das
cmp
sbb
inc
dec
je
pop
inc
in
jl
call
cs
mov
outsb
xor
lods
mov
cli
mov
dec
incb
gs
sti
cmp
outsb
ret
mov
cmpsl
lods
xchg
outsl
mov
xor
jge
xorb
fcmove
loopne
cmc
pop
in
aam
inc
loope
or
loop
xchg
dec
add
pop
mov
pop
or
jns
inc
fsubl
mov
negl
jmp
jp
fisubrl
aam
and
xchg
imul
jg
jecxz
push
xchg
inc
lret
outsb
add
mov
inc
ljmp
jne
fabs
mov
adc
mov
aaa
jle
jp
pop
push
pop
adc
mov
add
jb
pop
aam
ljmp
lret
dec
jg
mov
inc
or
mov
sub
dec
push
mov
inc
into
xor
pop
xchg
lret
inc
xchg
push
jecxz
and
xor
ret
inc
fs
mov
jno
int
mov
push
push
cmpb
push
fstl
rcrb
xorb
push
out
stos
lods
pop
inc
ds
ljmp
pop
push
xchg
cmp
pushf
mov
or
push
xchg
shrb
cmp
cli
add
enter
rcrb
sub
sbb
nop
add
dec
js
lahf
push
fisubl
xchg
adc
popa
ret
sarb
lret
jae
repz
in
repnz
cli
fs
jle
clc
ljmp
adc
pushf
rcrl
jbe
je
inc
out
int3
xor
lods
icebp
xchg
jne
jle
loop
std
push
mov
cmc
shlb
lock
enter
fwait
arpl
faddp
bnd
loopne
int
mov
data16
push
test
and
pop
aam
or
or
hlt
repz
movsb
jmp
jbe
popf
stos
bound
or
pop
jecxz
mov
aas
lahf
push
add
mov
and
mov
stc
cwtl
dec
stos
lods
mov
xlat
add
inc
scas
pop
pop
pop
icebp
mov
loope
cli
loop
cmpsb
scas
mov
out
mov
cltd
paddusw
add
sbb
cs
fldl2e
mov
loope
sbb
into
repnz
jl
and
and
scas
jl
push
mov
sub
lahf
test
adc
call
test
add
paddsw
jns
lock
jmp
pop
bound
cmp
nop
in
sbb
or
popa
roll
mov
xchg
in
push
push
je
pop
inc
jae
pop
ror
popf
and
lds
push
ja
int
xchg
call
loope
mov
sub
test
adc
daa
pop
fisubrs
add
cmp
pop
in
pop
xchg
mov
loop
xor
cld
lock
or
jns
dec
pop
push
dec
popf
add
ror
div
dec
shll
sahf
lods
cmc
filds
and
fstpl
sub
lret
fdivrp
jmp
pop
jnp
in
out
test
cli
mov
push
dec
mov
rolb
adc
outsl
sbb
sub
in
xor
mov
ret
xchg
push
fcoml
pop
js
inc
push
mov
push
xor
popfw
pop
loope
and
sub
test
push
inc
pop
adcl
jae
jnp
cmp
and
mov
mov
xor
mov
fisubrs
dec
es
lcall
jecxz
test
sbb
loop
int
cmc
test
pop
stc
push
les
lods
mov
outsb
push
pop
std
dec
fmull
js
xchg
in
sub
sub
dec
aas
xor
push
inc
or
aad
hlt
shll
scas
jns
ret
mov
stc
mov
gs
push
and
mov
lock
xchg
cmp
pop
jg
or
sub
jbe
mov
fs
shrl
loopne
jb
pop
inc
pop
jmp
ffreep
adc
xchg
xchg
pop
aam
xchg
sub
mov
fisubl
push
jmp
pushf
popa
icebp
xchg
push
into
adc
fsts
iret
sbb
aam
and
ss
mov
push
cmp
mov
mov
jg
add
mov
out
or
out
mov
inc
std
and
scas
lock
lahf
dec
movsb
popa
mov
push
sahf
lods
jno
sbb
xor
or
dec
mov
inc
mov
pop
mov
cmp
mov
addr16
cwtl
hlt
xchg
xor
scas
loop
ljmp
pop
loop
lock
js
pshufw
sub
push
sub
ljmp
cmp
sbbb
into
test
xchg
jbe
mov
pop
sbb
cli
cmc
mov
cmp
lds
push
es
mov
test
imul
adc
rcrl
je
es
cmp
xor
or
mov
mov
mov
cmp
dec
and
add
jb
cli
add
push
lahf
sahf
fst
xchg
push
adc
xor
xor
cmp
and
mov
nop
pop
and
leave
ficomps
out
jo
push
xor
incl
cmp
cmp
repz
and
mov
mov
jge
push
lret
in
hlt
push
pop
xchg
rcrb
test
adc
ss
adc
adc
fsubrl
sub
or
lods
adc
pand
xchg
arpl
fwait
sbb
pop
push
lods
cs
cmp
cld
jl
je
xchg
push
sub
mov
mov
out
cs
loopne
push
pop
pop
ds
mov
ret
incb
jg
out
or
lods
lret
shl
dec
scas
nop
and
in
xchg
call
daa
sbb
movsl
iret
mov
and
mov
call
sbb
sub
inc
sbb
push
or
adc
jo
and
lock
add
inc
lea
shrb
pusha
push
jns
aam
fdiv
sub
rcll
push
push
inc
xor
test
mov
mov
scas
mov
adc
mov
jl
shrb
sub
lods
mov
dec
push
add
mov
pop
ljmp
inc
dec
fists
mov
bswap
xor
outsl
sbb
xchg
nop
adc
fsubrs
jle
out
push
outsl
stc
subl
fmulp
inc
out
push
dec
push
ficoml
fisubs
mov
loopne
mov
lahf
lock
stos
push
xor
dec
push
inc
and
stos
cli
stos
test
sub
mov
cmc
xor
aad
aaa
cmp
adc
add
sar
jnp
fs
and
push
pusha
inc
sub
leave
or
sub
fmul
xor
loopne
adc
gs
stc
jnp
adc
scas
ret
adc
cmp
scas
outsl
mov
movsl
jle
pop
dec
inc
in
adc
jg
das
lock
mov
aad
das
test
pop
fiaddl
sub
add
pop
lcall
cmp
cmp
rcrb
insl
inc
dec
pop
pop
rcll
sub
dec
mov
add
lock
mov
divb
hlt
inc
fdivrl
testb
stos
lcall
add
ficompl
xchg
and
in
outsb
add
movsb
xchg
add
xor
outsb
int
xchg
inc
sbb
sar
jo
out
out
loopne
lods
mov
mov
xchg
gs
adc
movsl
into
sub
xchg
fwait
sti
push
subl
mov
add
inc
cltd
pop
lds
sub
ret
fs
mov
pop
push
lods
mov
outsb
mov
mov
xor
sbb
stc
aas
xchg
xchg
cmpsb
mov
push
xchg
daa
dec
dec
addl
inc
add
leave
addr16
inc
dec
mov
shl
out
pop
jb
or
pop
xor
dec
out
xor
negl
mov
aad
add
add
mov
sbb
sbb
lret
into
push
pop
dec
ja
test
test
mov
imul
or
idiv
es
inc
arpl
imul
stc
cmp
dec
xlat
push
ss
cmp
lea
pop
sbb
sarl
in
push
out
stc
sub
pop
nop
mov
lock
push
int3
repz
mov
scas
and
test
stos
cmp
xchg
jp
jo
flds
je
xchg
mov
pop
lret
lea
sarl
mov
and
stos
outsl
push
int3
or
dec
flds
aam
cmp
outsl
cmpsl
and
out
adc
popa
inc
cmpsb
hlt
sbb
sti
mov
jmp
mov
addr16
or
mov
sub
fnsave
idivl
loopne
in
sbb
repnz
outsb
mov
push
insb
stc
xchg
fcompl
xlat
in
adc
xchg
stc
sbb
xchg
mov
sbb
cmp
pop
stc
lcall
sub
dec
jno
cmpsb
test
sahf
insl
xchg
inc
xor
xor
xchg
call
inc
aam
loope
add
je
sbbb
iret
cmp
cmp
ret
xlat
mov
sub
fstpl
fcmovu
lret
outsb
add
in
mov
lahf
push
mov
dec
xorb
in
sbbb
adc
repnz
out
jne
mov
imul
shlb
adc
push
mov
pusha
fisubrs
daa
das
jne
mov
inc
sbb
pop
popa
icebp
cmp
scas
jno
add
mul
divl
xor
out
ss
jbe
loop
scas
adc
fdivs
xor
daa
and
pushf
xor
xchg
cmpsb
inc
fldenv
xor
pop
push
lds
out
xlat
cltd
insl
int
xchg
mov
mov
js
xorl
pop
or
push
cmp
mov
or
push
aaa
cwtl
iret
or
les
ds
inc
pop
movsl
aam
mov
aas
adc
les
jge
mov
cmp
ret
or
clc
lcall
push
loop
out
scas
mov
pop
add
cmp
xchg
and
inc
adc
jp
sbb
ja
dec
aad
data16
cmp
add
mov
and
fildl
push
adc
mov
js
repz
fdivl
inc
jge
fcompl
and
xor
sub
jmp
pop
out
cmp
or
mov
repnz
in
and
loopne
dec
out
fwait
push
imul
scas
pop
into
repnz
clc
mov
mov
sbb
push
inc
cmpsl
fdivs
mov
out
cmp
push
loopne
jne
pop
fcomp
add
sub
mov
popa
mov
lret
dec
mov
xchg
fcompl
dec
outsb
pushf
lods
xor
dec
dec
mov
aaa
add
add
mov
sarl
dec
iret
xchg
out
or
sti
out
sar
mov
pop
stc
xor
or
cli
mov
aaa
sar
mov
adc
jns
std
mov
inc
in
insl
out
int
xlat
adc
push
sahf
leave
add
sbb
std
stos
jno
lods
mov
add
xchg
add
sarl
xchg
push
sbb
ljmp
pushf
in
cmp
push
push
or
dec
xor
leave
and
mov
mov
adc
pop
cld
sub
subl
mov
mov
mov
cwtl
ds
lahf
lock
ljmp
dec
frstor
mov
mull
dec
test
fstpt
mov
jns
movsb
cmp
shl
push
std
sbb
push
xchg
jo
or
mov
scas
inc
popf
pop
mov
sahf
into
ret
in
gs
in
fldenv
push
lret
outsb
mov
adc
sub
aas
pusha
xlat
xchg
xchg
xchg
pop
pop
fnstenv
lock
add
jb
jmp
dec
leave
imul
ret
inc
adc
in
pusha
in
cmpsb
lods
stos
add
lods
add
sub
in
in
in
push
sub
jno,pn
add
bound
inc
repnz
jb
jg
jae
sbbb
enter
fwait
popf
cmp
fstl
push
pop
cs
add
inc
xchg
gs
int
lods
bswap
std
jns
mov
adc
loope
sahf
adc
jno
test
jo
xchg
testb
jg
testl
in
cld
jne
adc
xor
fcoms
clc
inc
adc
mov
les
push
sbb
mov
aam
ds
mov
cmpsl
ss
jae
cmpsl
into
popf
push
or
pop
out
dec
ret
and
pop
mov
mov
mov
mov
insb
or
inc
jge
push
lods
fdivrl
xchg
adc
sbb
popa
xchg
ret
pop
bound
je
mov
cmp
xor
mov
jle
test
jp
or
cli
add
push
loop
hlt
push
cli
cmpsb
shrl
test
test
sti
lret
in
fs
jmp
dec
sbb
push
insb
in
pop
cmp
xor
leave
test
and
mov
aad
mov
out
popa
rcrb
mov
pop
fucomi
push
cmp
mov
mov
sbb
inc
pop
cld
fisubrs
add
push
adc
adc
jg
dec
mov
pop
cltd
mov
xor
mov
mov
pushf
jge
ljmp
xor
mov
mov
ja
mov
aam
push
mov
mov
push
imul
mov
pop
and
jne
cwtl
in
call
add
push
xchg
sub
sub
mov
aad
or
mov
lock
insb
fdivrl
inc
loop
pop
push
hlt
rdpmc
es
push
or
push
jnp
mov
in
out
cmpsl
adc
mov
movsl
xor
sub
pop
sahf
mov
lret
inc
mov
test
xchg
pop
mov
test
pop
cmc
cli
add
xor
mov
in
dec
mov
enter
pop
dec
cmpb
mov
addl
pop
inc
mov
inc
fisttps
dec
cmp
hlt
lahf
leave
cmp
mov
in
mov
stos
xorb
mov
insb
pop
nop
scas
pop
cli
sbb
jo
mov
inc
push
pop
adc
and
ljmp
test
std
mov
mov
pop
js
jnp
jne
daa
adc
xorb
cmp
cmp
mov
stc
loop
or
hlt
fcom
out
fildll
dec
vhaddps
push
stos
loop
mov
jae
scas
mov
enter
add
imul
stos
gs
int
shl
xchg
in
sbb
inc
mov
adc
adc
pushf
imul
cmp
scas
xchg
inc
mov
inc
and
mov
jns
or
inc
loopne
je
mov
inc
testb
cmp
add
mov
loopne
clc
sbb
xor
pop
cmc
adc
jne
dec
pushf
adc
dec
lock
lea
data16
movl
sbb
daa
push
outsb
gs
dec
pop
jl
jl
mov
fdivrs
mov
push
cmp
std
repnz
pusha
mov
cmp
addr16
mov
outsl
or
pusha
mov
xlat
leave
jge
mov
les
cs
mov
xor
insl
into
fwait
popa
xor
xchg
rcrb
sbb
jp
icebp
fwait
test
pop
push
insl
js
pop
or
xchg
pusha
stos
addl
pop
adc
push
and
push
movsl
enter
lcall
mov
out
cltd
pop
aad
pushf
aaa
mov
cmc
mov
dec
mov
adc
rclb
lods
fisubl
insl
ss
les
arpl
dec
int
mov
adc
jmp
cwtl
lret
xchg
hlt
imul
mov
jne
pop
out
call
imul
push
cmp
scas
adc
dec
fcoml
adc
ficoms
cmp
scas
mov
loope
xchg
mov
cmpb
nop
test
jns
rol
or
cld
and
inc
fisubrl
cmp
arpl
out
pop
scas
adc
mov
xchg
hlt
push
cmp
subb
mov
mov
test
mov
and
inc
mov
push
jp
xchg
mov
je
pop
jns
pusha
lret
addl
jle
xchg
int
fisttpl
push
xchg
or
jp
ljmp
adc
mov
pushl
je
js
sub
and
les
fs
xchg
mov
js
cs
enter
mov
leave
cld
cs
adc
cli
sbb
mov
inc
fcmove
push
repnz
ss
pusha
cmp
imul
cmp
shlb
js
lods
or
movsb
lds
adc
push
mov
push
xchg
adc
push
shlb
rcr
and
adc
pushf
into
xchg
pop
imul
dec
jnp
shr
js
pop
mov
push
mov
ja
loope
pop
fsub
push
pop
fsts
movl
push
dec
and
push
insl
jnp
insl
jge
jno
sbb
xor
test
pop
mov
add
add
je
inc
inc
xchg
fnstenv
adc
popf
jb
adc
adc
adc
mov
sbb
jmp
mov
shrb
outsl
lods
mov
repz
int
fsubrs
cmpsl
mov
mov
cld
inc
adc
inc
jno
sub
or
dec
and
inc
jno
outsl
out
adc
and
sub
jb
push
pop
test
push
insl
pop
cli
faddl
push
fwait
jae
jecxz
add
movq
pushf
add
movsb
jge
mov
pop
cld
mov
andb
xchg
clc
jns
xor
out
das
jp
and
mov
into
xor
lea
or
xchg
xchg
pop
xor
fcmovnu
jae
loopne
ljmp
and
mov
fcompl
jbe
ror
lcall
jecxz
ds
lods
call
rorl
push
out
pop
fisubrs
and
cmp
out
movsb
das
cltd
mov
aaa
les
mov
cwtl
xor
daa
pop
add
or
adcb
stc
div
data16
jecxz
mov
pop
out
push
xchg
push
pop
dec
aam
data16
sub
xchg
sahf
out
in
dec
pop
dec
outsb
adc
cmp
in
mov
aas
out
les
fs
jnp
push
ret
sub
mov
adc
outsb
insb
sbb
adc
cmpsl
pop
dec
loop
pop
add
dec
aam
hlt
cs
xor
mov
fwait
jo
adc
mov
push
outsb
jno
inc
lods
je
xchg
pop
pop
dec
stc
sbb
daa
sbb
jbe
nop
jae
push
fisttpll
lods
stc
mov
in
cwtl
cwtl
inc
or
jl
ja
cld
adc
pop
mov
jae
testb
roll
add
add
dec
ja
push
aad
mov
in
cld
mov
movsb
popa
mov
add
iret
aas
sub
cmpb
and
mov
cmpsb
loopne
push
push
aas
push
pushl
push
mov
jl
popa
mov
push
lods
outsl
push
pop
cmpsl
call
cmp
mul
popf
insl
or
dec
out
inc
xor
xchg
jge
sahf
mov
fimull
inc
test
popa
cltd
shlb
mov
cwtl
sbb
jecxz
dec
xchg
xchg
or
repnz
inc
outsb
xchg
mov
les
out
dec
incl
jl
add
lret
loop
nop
into
fmulp
xor
add
mov
xchg
lock
adc
xor
xchg
inc
stos
sar
lret
mov
in
xor
lea
xchg
orb
test
adc
iret
jns
call
mov
sub
imul
lds
pop
je
pushf
mov
pop
nop
adc
fcmovnu
test
cli
push
xlat
xor
pop
xor
jno
mov
add
cmp
bnd
scas
xchg
fnstcw
pop
mov
and
orb
inc
jbe
mov
jnp
cltd
mov
loope
repnz
fwait
adc
outsl
or
adc
leave
push
xor
jo
xor
inc
pop
leave
fs
cmc
sub
xchg
dec
movl
test
les
pop
dec
imul
loopne
pushfw
out
and
fiaddl
mov
outsb
mov
xor
xor
sahf
popf
xorl
xor
outsb
and
addb
iret
mov
cmp
dec
xlat
icebp
enter
insl
adc
sub
and
out
loope
ja
and
adc
xchg
fcoms
imul
jg
pop
pop
enter
mov
fimuls
inc
inc
das
mov
test
add
xchg
jb
arpl
movsl
je
bound
jo
aaa
xor
out
loopne
test
xor
pop
into
scas
hlt
stos
jl
jno
add
add
test
xchg
mov
adc
and
mov
icebp
out
push
jmp
inc
sub
lret
mov
nopl
push
shll
gs
add
jbe
adc
mov
adc
jae
adc
fsubrl
ret
mov
adc
inc
or
xorl
fimull
call
inc
mov
cmpsb
sbb
push
pop
ret
inc
nop
inc
lods
pusha
pusha
xchg
nop
lea
aam
and
dec
paddd
cmp
inc
loop
xor
mov
je
xchg
test
iret
loope
int3
push
aad
outsb
mov
in
or
xor
push
lret
loopne
pop
sbb
lahf
cs
cmp
mov
dec
mov
or
mov
inc
push
addl
adc
xchg
dec
push
xor
sub
sub
ja
fidivrs
jmp
jb
enter
push
test
jnp
xor
mov
adc
adc
cmpsb
adc
int3
cmc
xchg
jnp
stos
dec
stos
stos
mov
cs
loop
sar
lock
out
out
jne
scas
push
je
xorl
inc
test
mov
add
xchg
jne
mov
and
mov
movb
xchg
mov
push
inc
xrelease
setb
movsb
out
cmpsb
shrl
testl
subl
cmp
and
mov
dec
adc
sbb
sub
aad
out
rcl
dec
pop
push
jb
loope
sub
movsl
fs
loopne
dec
cmp
push
loope
lret
sbb
sub
fucomp
or
and
push
stos
mov
add
fadds
jl
insl
inc
hlt
xor
adc
or
pushf
test
mov
fisubs
sti
xchg
push
aad
cmpsb
sbb
lahf
cmp
dec
std
and
fwait
dec
push
ret
jmp
out
and
mov
cmp
int
cmpsb
sar
push
fcoms
roll
ret
lahf
push
mov
repz
pop
scas
scas
xchg
rcl
ret
es
repz
jo
aas
cmp
xor
icebp
push
dec
xlat
loope
mov
in
shl
and
lods
pop
xor
aam
repz
mov
sti
lods
add
repz
loopne
fidivl
scas
in
jne
enter
fsubp
je
xchg
ficoms
and
daa
inc
jmp
fcoms
dec
leave
in
jo
adc
mov
and
aaa
sbb
sub
idivb
sbb
aam
cmp
aaa
scas
movl
push
mov
cwtl
mov
into
mov
lcall
xchg
fildll
jle
aad
mov
lahf
sub
cmp
xor
sub
das
cmp
push
push
mov
int
addr16
rcrl
push
in
mov
incb
popf
dec
test
sahf
xchg
or
add
pextrw
add
lock
call
leave
adc
mov
jg
sbb
cmpsl
ds
enter
pop
pop
dec
add
xor
js
stc
jl
lcall
cmpl
jmp
mov
add
xchg
icebp
pop
sbb
jl
les
pop
cld
push
andb
mov
sbb
jns
mov
stos
push
jbe
imul
mov
mov
dec
mov
cmp
ds
jmp
daa
xchg
jecxz
aam
adc
sub
imul
adc
arpl
leave
pushf
sub
repnz
inc
pop
jge
push
mov
cmp
cmp
jg
aam
scas
mov
sub
stos
cmpb
dec
mov
jo
std
mov
sbb
mov
aad
in
stos
test
pushw
dec
mov
adc
mov
jecxz
stos
out
mov
mov
in
xchg
std
je
enter
dec
mov
inc
push
pop
jmp
sahf
mov
sahf
aam
pop
test
xor
xchg
xor
cmp
push
mov
mov
jnp
insl
mov
shr
lds
sub
dec
pop
rorb
push
mov
push
mov
in
loopne
hlt
xchg
push
imul
pop
cmp
jnp
pop
xchg
mov
stc
or
sbb
popa
add
cltd
push
inc
or
cld
push
insb
out
aam
sbb
lcall
imul
push
ljmp
jno
xchg
sahf
ljmp
hlt
mov
mulb
std
jmp
mov
jmp
fistpll
push
pop
push
jns
jge
adc
leave
outsb
lea
adc
out
push
fsubs
cmp
add
jle
mov
cmc
adc
push
xchg
push
andb
ret
cmpsl
call
push
std
subl
push
push
jo
push
lret
in
jae
or
sbb
roll
popa
xor
add
jo
jbe
pop
xor
adc
popf
adc
das
insb
loopne
inc
sbb
mov
enter
mov
cli
mov
popa
and
inc
push
cs
dec
mov
cmp
pop
or
cli
fsts
lret
inc
mov
xchg
outsl
loopne
xchg
outsl
nop
xchg
mov
push
jb
out
pop
add
pop
fistpl
test
mov
adc
pop
jl
jne
out
cmc
cld
mov
or
mov
push
and
mov
jno
and
repz
cs
stos
push
idivl
movsb
dec
jae
loope
pop
out
xchg
shlb
stos
lret
daa
jns
mov
sbb
mov
aaa
xchg
dec
arpl
repz
mov
ja
mov
push
das
out
push
push
iret
test
dec
mov
out
mov
scas
dec
or
dec
mov
and
cmpsw
push
lock
in
and
lods
mov
lds
add
or
jle
es
rcll
mov
xchg
les
inc
ret
out
std
push
jg
mov
add
mov
fdivrl
fsubrl
daa
or
daa
push
je
test
out
mov
int
pop
in
or
inc
icebp
push
testl
jne
addl
insl
stos
pushf
mov
dec
adc
cpuid
fstpt
xor
dec
aam
adc
push
inc
ret
mov
rcl
in
cwtl
lret
aam
mov
bound
pop
xor
lea
mov
mov
sbbb
jno
mov
sub
mov
mov
sbb
lods
stos
inc
pop
mov
dec
lahf
xorl
ljmp
repnz
pop
pop
inc
and
fwait
adc
mov
ret
ret
pop
jp
fldcw
pop
push
push
imul
test
int
cmpb
mov
mov
fildll
add
mov
lea
fiaddl
push
mov
mov
test
sahf
adc
cmp
push
imul
sub
mov
sbb
js
lcall
hlt
and
inc
andb
mov
lea
mov
push
in
lret
mov
xchg
adc
and
daa
in
push
sub
aad
jmp
mov
dec
adc
into
loop
dec
xchg
pop
mov
cmp
sar
sub
aas
lds
xor
lret
loop
and
sub
add
insl
dec
or
repz
js
mov
cmp
jle
pusha
int
jmp
pop
xchg
xorl
std
lock
mov
adc
xor
in
or
ret
jo
xchg
dec
xchg
inc
stos
imul
mov
test
cli
imull
jno
leave
fistpll
add
movsl
xchg
test
sbb
xchg
aaa
add
pop
int
outsb
mov
pushl
lcall
dec
push
fwait
cmp
jb
std
jne
scas
pushl
enter
add
sti
mov
xchg
push
aas
outsb
push
xor
inc
iret
int
jmp
in
adc
test
aas
adc
xor
fs
mov
scas
into
mov
ja
cld
mov
mov
mov
stc
dec
push
nop
lods
sbb
pop
scas
cmpsb
or
or
lret
lcall
shlb
mov
loope
cs
nop
test
popf
or
in
addl
ss
xchg
lcall
sbb
mov
std
sahf
mov
daa
and
fdivrl
aas
rol
insb
sti
je
or
stos
fiadds
jb
mov
pop
stc
sub
push
adc
or
cmpsb
mov
and
sbb
int
push
mov
iret
lret
imul
dec
cmp
add
test
stc
cmp
push
ror
popa
jmp
pop
xor
shll
inc
pop
inc
jnp
inc
and
fs
mov
mov
outsb
adc
repnz
and
fimull
dec
cmpsb
inc
test
fstps
pop
mov
push
cli
dec
xchg
fprem
js
std
jecxz
add
ljmp
cmc
inc
out
inc
lds
inc
push
lahf
rcll
cmp
sahf
or
sub
scas
mov
lcall
mov
push
adc
jge
lods
lret
jmp
enter
lods
cmp
pop
mov
cwtl
mov
xor
scas
lock
mov
mov
inc
fimull
pop
rol
mov
fs
lock
xor
in
sarb
fsubrl
add
jae
jmp
stc
pop
xchg
mov
or
dec
inc
bound
jmp
pop
or
xor
pop
pop
and
pop
imul
gs
pusha
add
call
mov
inc
rcll
or
mov
add
neg
fists
lods
sti
jno
mov
cmp
pop
mov
sbb
or
and
and
mov
push
mov
es
inc
xchg
mov
mov
jge
push
mov
pop
stos
pop
aas
pop
mov
fcomps
xor
pop
ror
cmp
jno
out
shrl
arpl
fistpll
push
push
movlps
pushf
pusha
cmpb
push
xor
inc
dec
divb
push
arpl
pop
movsb
sub
add
or
rcr
lods
push
mov
shll
xor
push
adc
andb
nop
push
jecxz
and
xor
mov
mov
fstps
popa
push
jmp
ss
inc
pop
or
loopne
mov
ret
push
jo
fdivrs
push
fcmovnb
jo
jp
ljmp
mov
push
push
adc
sub
shll
sub
and
lds
lahf
dec
insl
movsb
xor
jns
pop
sub
mov
xor
mov
and
gs
dec
pop
xchg
pop
out
icebp
jne
jge
jl
cmp
inc
mov
hlt
roll
int
movsb
mov
and
dec
mov
mov
mov
sub
jecxz
dec
rolb
pop
mov
out
xchg
push
imul
gs
pusha
stc
out
js
lods
or
prefetch
adcb
push
stos
pop
jne
addr16
pop
aas
cmp
ljmp
jecxz
mov
pop
enter
and
sub
leave
lods
push
movsb
ret
sahf
lahf
addr16
mov
stc
rcrb
rolb
mov
xchg
outsl
sbb
aam
sub
into
xor
dec
sbb
insl
cmp
insb
pmuludq
sahf
cli
inc
in
bound
jno
rolb
fstpl
dec
insl
mov
test
mov
add
and
mov
jb
shlb
mov
add
sbb
xchg
ds
stos
aaa
lahf
sti
into
lds
adc
outsl
jg
mov
shlb
sti
in
cltd
mov
push
aam
sub
inc
sahf
les
cmp
adc
pushf
lcall
loopne
inc
mov
fidivl
or
mov
mov
mov
bnd
cmp
jp
int3
jp
dec
lods
gs
dec
fwait
mov
fisubrs
push
lds
mov
cmp
jecxz
movsl
xor
enter
push
or
lcall
inc
mov
iret
mov
lret
push
pop
aas
inc
dec
repz
loopne
enter
mov
sub
inc
push
sub
in
mov
xchg
imul
ja
mov
mov
movsb
cmc
divb
cs
mov
push
pop
mov
int3
test
xor
xor
ret
pop
call
sub
loop
std
xchg
out
add
push
mov
in
sbb
push
or
xor
xchg
cli
bound
or
lret
outsb
push
sub
ret
mov
jmp
scas
ret
mov
insl
mov
pop
mov
ss
xlat
test
jne
cmc
loop
mov
ficompl
adc
fadds
pop
in
jno
add
movsl
stos
out
dec
cmpsl
mov
test
enter
push
xor
cmp
mov
xchg
lock
mov
addr16
mov
inc
mov
scas
sbb
inc
clc
fwait
mov
sub
into
outsb
mov
sub
xor
xchg
inc
ja
cltd
cwtl
sub
bound
inc
int
fbstp
setg
ds
movsb
inc
pop
inc
xchg
cmp
or
add
repz
enter
jecxz
jl
pop
xchg
push
inc
int
or
jnp
outsl
and
xlat
mov
mov
repnz
in
pop
into
push
fisubl
test
mov
stc
repz
or
jbe
jae
inc
fadd
sub
adcl
xor
mov
jl
fwait
sarl
xor
pop
cmc
flds
out
push
imul
adc
xchg
adc
sub
sub
xchg
imul
repz
fdiv
mov
scas
mov
mov
and
dec
sbb
pop
addr16
pop
inc
xor
cmp
test
xor
push
jae
and
out
add
push
lea
fisubrl
mov
inc
insl
call
enter
fsts
lret
xor
ljmp
cmp
push
pop
fiaddl
fstl
pop
dec
mov
push
pop
enter
add
cwtl
lret
xchg
orl
enter
mov
jecxz
roll
out
out
mov
lds
clc
adcb
aad
imul
mov
inc
mov
inc
stos
inc
push
inc
and
stos
fimuls
scas
mov
xlat
fdivr
iret
jae
mov
xlat
and
mov
ds
icebp
cmp
pop
and
sub
dec
and
adc
push
cmpsl
imul
adc
gs
adc
mov
mov
aad
mov
mov
loopne
call
push
xor
pop
out
aas
lea
aaa
dec
out
jge
enter
and
xchg
cmpl
inc
jp
pop
dec
cmp
xchg
mov
adcl
mov
lahf
cmc
adc
daa
ljmp
sub
mov
sub
hlt
ret
out
sahf
popf
mov
lods
in
ds
lret
loop
and
sti
imul
mov
leave
out
out
dec
test
jmp
sub
sub
cmc
jp
negl
fsubs
shrb
jb
mov
dec
bound
fidivl
lret
add
outsl
pusha
jo
mov
and
and
push
sub
sub
inc
adc
outsl
jecxz
push
int3
es
mov
xchg
sub
fisttps
push
mov
sub
push
out
mov
movsb
mov
out
fisubrl
dec
mov
xor
les
xor
xchg
imul
lock
mov
pop
fpatan
and
and
jbe
aad
fiaddl
lret
xchg
jae
into
repz
movsb
jbe
add
inc
cmp
and
cmp
mov
pop
js
jle,pt
inc
popf
lret
lret
mov
dec
xor
fs
repz
je
arpl
lret
lods
fstl
jmp
test
cltd
cltd
iret
pop
sbb
push
xorb
or
sub
dec
call
fwait
jmp
push
push
fcoml
cmp
sahf
or
call
mov
clc
mov
mov
mov
sub
insb
int3
fstpl
mov
mov
imul
add
pop
lods
fs
mov
mov
es
push
lret
mov
jno
gs
imul
cmp
aam
fdivs
adc
xchg
and
aas
sbb
mov
cmp
call
scas
adc
popa
or
out
sbb
dec
ficompl
aad
fcmovne
cmpsb
je
xor
test
pusha
mov
cmp
xchg
sbb
sbb
jmp
test
hlt
out
push
int3
xor
pushf
mov
dec
add
and
inc
es
dec
test
sub
leave
icebp
cmp
mov
jmp
or
rolb
push
imul
jge
jb
push
mov
loope
inc
and
sub
mov
or
push
mulb
out
sti
sbb
cld
push
in
mov
or
pusha
xchg
jge
push
dec
pop
jp
sbb
js
mov
fwait
xchg
mov
fdivp
call
aaa
fwait
xchg
fs
or
jns
or
data16
or
scas
pop
sbb
not
andl
lret
cmp
sbbl
test
pushl
stc
scas
in
fs
mov
mov
mov
mov
sti
add
loopne
sbb
jle
sub
or
push
pop
mov
ror
dec
jl
mov
xchg
popa
aas
mov
dec
call
mov
notb
mov
clc
sbb
insl
mov
mov
push
adc
lret
ret
sbb
lock
sub
ret
mov
mov
stos
jle
test
gs
mov
stos
jp
lret
in
mov
inc
cmp
mov
adc
jne
or
inc
mov
lret
cmpsw
movsb
lcall
out
imul
repnz
fs
pop
nop
inc
adcl
mov
mov
push
mov
xorl
mov
mov
and
or
aas
rcr
aam
pop
pop
adc
mov
jo
or
pop
xchg
xchg
xchg
pop
aad
mov
gs
fs
mov
push
aam
sbb
fld
out
bound
push
add
imul
pop
jne
cmp
ja
fisttpll
stos
mov
aaa
stos
cltd
inc
shll
test
mov
cmp
pop
popa
push
test
dec
cltd
pop
pop
mov
pop
lret
pop
bound
push
mov
stos
sub
nop
cmp
cmp
jp
das
xchg
pop
das
mov
outsb
xchg
add
stos
cli
jecxz
push
pop
ss
mov
and
cwtl
rcrb
jno
pop
push
mov
mov
icebp
and
dec
mov
repnz
xor
pop
shll
iret
xor
dec
sbb
lcall
filds
notl
lods
add
incb
mov
cli
leave
or
push
xchg
bound
stos
popa
sahf
mov
es
mov
int3
std
mov
int
push
sbb
pop
daa
outsl
xor
sarl
repnz
sub
mov
pusha
je
shlb
daa
sbb
imul
cltd
dec
sub
cs
push
cmp
push
fmuls
inc
pop
je,pn
insl
push
push
cli
dec
test
popa
negb
xchg
mov
call
push
or
mov
call
add
or
cli
lret
push
inc
cmp
es
cmp
enterw
jg
jns
jnp
cli
inc
loopne
addl
pushf
sbb
jle
rep
sbb
push
fdivl
addl
mov
and
popa
pop
adc
push
xchg
xor
in
sbb
xchg
sub
xchg
sti
or
cmovnp
daa
cmp
jp
cs
mov
clc
add
les
mov
add
movb
out
sub
cli
sub
mov
inc
hlt
push
and
push
mov
push
push
cmpsl
int
dec
pop
cs
jno
aaa
sbb
pop
xor
adc
test
sub
and
andl
adc
or
insb
xchg
push
cli
cwtl
or
loop
and
mov
fnstcw
cmpsl
or
mov
cltd
cmp
fidivrl
lock
xchg
fists
nop
mov
sahf
sub
jnp
adc
movsl
adc
negb
lock
xchg
sbb
jmp
mov
adc
xchg
xor
gs
stos
std
jl
or
cmpsl
mov
or
les
mov
int
aas
mov
jl
outsl
push
scas
mov
add
inc
fwait
jb
movsl
sahf
aad
ret
dec
shl
pusha
int3
sbb
nop
pop
cmp
enter
xor
in
push
xchg
popa
or
or
aam
js
movsl
ss
pushf
movsl
inc
aas
mov
pop
pop
inc
int3
lahf
push
pop
out
push
jno
cmp
repnz
leave
ret
into
fwait
fwait
rep
and
lret
cmpsb
outsl
jns
mov
push
push
ret
pop
cli
mov
and
pop
je
cmp
in
mov
jae
push
sbb
or
jp
sub
stos
push
add
andl
jg
mov
js
sahf
inc
icebp
ffree
ss
xlat
andb
mov
enter
mov
sarb
pop
adc
lea
jbe
stos
out
adc
xchg
lcall
decb
subl
push
jb
mov
arpl
adc
insb
lcall
xchg
test
outsl
scas
add
add
add
jae
mov
push
mov
movsl
aad
xorb
xchg
repz
cmpsl
push
adcb
rorb
into
sub
pop
jns
mov
fmul
cmpsb
ss
or
push
sub
out
jb
cmpsb
lods
or
mov
into
gs
inc
dec
lods
repnz
inc
fsubr
xchg
sub
mov
sub
sbb
mov
jmp
mov
dec
ds
jno
mov
dec
cmpsl
inc
inc
fbstp
cmpsb
scas
call
ficomps
popf
xor
ret
cmp
test
in
inc
cmpsl
xchg
out
cmpl
xchg
push
lea
fadds
loopne
or
out
ret
mov
cld
sub
push
cmp
icebp
test
ljmp
cmpsl
cmp
and
adc
fwait
insb
mov
cltd
or
and
stos
push
std
sbb
jmp
sbb
sub
leave
cmp
dec
push
mov
jnp
mov
std
lahf
or
ret
dec
rcll
cmp
insb
insl
fsubr
addr16
movsl
ret
mov
sub
lds
cmp
or
and
call
mov
clc
jle
outsl
movb
cmpl
outsb
lea
ss
mov
fnsave
xor
out
lds
popf
cld
lahf
flds
popa
and
adc
sub
aad
mov
fcmovnu
cli
fwait
ret
mov
mov
popf
adc
add
out
jns
outsl
insb
xchg
cmc
lods
orb
mov
es
cmp
loopne
add
mov
lret
jbe
push
aad
mov
jae,pn
pop
dec
ljmp
jne
xorps
mov
sub
jp
in
add
pop
or
inc
les
in
pop
sub
jle
test
in
xchg
and
sarb
mov
pusha
jnp
sbb
mov
cmc
inc
imul
sub
lea
movsl
and
hlt
sbb
push
movl
movsl
insl
aas
pop
mov
add
push
test
pop
dec
js
mov
pop
push
push
andb
jbe
inc
mov
cmc
inc
push
call
sbbl
cld
mov
stc
aad
les
sbb
and
loope
fcomps
scas
aaa
inc
jg
sbb
cs
ljmp
mov
out
das
add
xchg
lods
lret
js
mov
push
imul
xor
pop
pop
addl
test
xlat
out
scas
pop
mov
xor
stos
movsl
test
mov
shl
add
cmp
pop
push
mov
sub
sahf
xor
sbb
je
cltd
ss
adc
cmpl
cmpsl
fisubl
adc
and
aaa
jno
jno
int3
bound
jae
dec
sbb
es
dec
jo
adc
sbb
push
xchg
inc
cmp
jo
mov
jb
adc
pop
push
jb
pop
lret
ror
outsl
insb
outsl
loopne
push
les
jl
and
or
int3
mov
iret
cmp
out
sti
int3
jge
es
cwtl
fisubl
push
sbb
mov
lcall
mov
sbb
mov
jns
add
bound
lret
clc
and
and
push
mov
push
inc
lods
stos
and
jbe
or
fsubrl
fcompl
push
lods
cmpsb
mov
loopne
loope
push
fnstenv
add
jno
gs
adc
andl
sahf
pop
pop
pop
xchg
inc
repnz
mov
daa
add
mov
xchg
jo
jecxz
push
fwait
xchg
dec
insl
daa
jecxz
cmpsl
repz
xchg
cmp
jg
push
in
push
lea
gs
pop
xchg
nop
jae
xchg
push
mov
shlb
jmp
shll
je
jbe
xchg
jbe
fildl
inc
inc
adc
loope
mov
push
jo
mov
jns
xor
repnz
mov
imul
outsb
sub
xchg
sub
cmp
pop
stc
cmc
inc
push
divl
jp
sar
lds
push
push
mov
xchg
cmpsb
repnz
call
lds
sub
mov
bound
les
jecxz
or
dec
xor
pop
and
adc
in
mov
fcmovne
inc
mov
shll
add
stc
mov
push
xchg
xchg
xlat
icebp
push
in
in
stc
lods
cmp
mov
rcrl
inc
mov
add
xchg
hlt
adc
clc
ficoml
push
xchg
inc
movsl
mov
outsl
sbb
mov
mov
test
xor
cmpsl
or
inc
loopne
out
pop
jg
mov
or
loope
fnsave
frndint
dec
fldcw
cli
adc
mov
fxam
mov
jge
scas
pushl
xchg
inc
mov
dec
bnd
push
roll
xlat
cwtl
push
xlat
and
lds
enter
mov
dec
xchg
cmp
jg
and
mov
in
negb
mov
sub
xchg
loop
cmpsw
add
repz
fsubs
movsb
jb
cld
fisubrl
std
mov
or
xlat
pusha
stos
mov
ret
cmp
jmp
jmp
push
xorl
pop
adc
xchg
test
sbb
cmp
and
hlt
mov
push
xchg
xchg
or
or
push
shl
mov
mov
mov
mov
stos
pop
cmp
pop
mov
hlt
js
or
jmp
cwtl
call
mov
test
jb
push
imul
movb
mov
lret
popa
cmp
adc
adc
fistpll
jp
imul
insl
xchg
cmp
add
xchg
xchg
test
xchg
mov
inc
mov
cmpsl
add
pushf
jne
insl
lcall
cmpsb
in
sub
jp
cmp
push
push
mov
std
stos
stos
pop
or
push
lret
fwait
xor
cmp
and
and
and
pop
mov
hlt
lahf
lret
mov
data16
stos
movsl
leave
push
loopne
mov
in
dec
adc
cmpsl
popa
xchg
adc
cs
lret
cmpl
cmp
sub
nop
jmp
fisttps
and
test
in
mov
fnsave
nop
pop
push
fcmove
lods
push
inc
xor
sub
mov
fs
mov
int
fs
dec
jbe
fnstenv
dec
mov
cmp
gs
mov
push
and
fistpll
dec
imul
adc
inc
xchg
notl
loopne
xor
cmp
xchg
rcll
or
cli
fs
clc
inc
outsl
gs
sbb
pop
rcrl
fildl
or
inc
movsb
xchg
sbb
in
daa
mov
sbb
jl
inc
insb
lock
hlt
push
xor
enter
test
pop
scas
and
fnstenv
aaa
dec
jmp
int3
adc
movsb
stc
xor
movsb
jns
ss
xlat
push
in
push
adc
add
inc
aad
pop
in
sub
jno
cmp
and
out
fisttpl
test
repz
scas
jp
sub
test
imul
sbb
pop
mov
push
mov
mov
shrb
adc
dec
pop
jne
or
dec
int
negl
adc
sbbb
std
sahf
add
cmp
shrb
ret
fisubrs
hlt
insb
pop
in
push
xor
fisttpl
ja
stos
jmp
xchg
test
cmp
dec
or
push
adc
mov
inc
cli
mov
add
and
test
cltd
mov
xchg
mov
xchg
jl
cmpsb
sbb
daa
sti
mov
fsubs
mov
sbb
test
sbb
push
mov
aaa
data16
mov
inc
pop
movsl
xchg
scas
sub
inc
and
dec
adc
jg
in
nop
fildl
or
push
push
pop
add
cmp
arpl
adc
fldl
push
mov
sub
mov
divl
cmp
sub
add
es
enter
xlat
call
lret
inc
mov
arpl
aas
dec
loop
fwait
sbb
nop
xchg
dec
sbb
jnp
inc
not
lds
mov
xor
in
test
pop
repnz
or
sub
arpl
mov
sub
push
repz
in
lds
std
cmp
pop
xchg
ja
shl
inc
lods
jmp
fdivrs
add
mov
filds
add
lcall
mov
fiaddl
int
add
arpl
unpcklps
pop
mov
icebp
push
fidivs
test
mov
mov
cwtl
jecxz
insb
pushf
add
cmp
das
ljmp
mov
es
iret
out
xor
icebp
mov
jb
mov
jle
xor
cmp
jge
inc
mov
add
clc
fiadds
ror
leave
ficoml
arpl
sub
repnz
add
add
xchg
jecxz
dec
mov
sub
jnp
jmp
clts
leave
movsl
imul
cmp
cmp
mov
call
ret
neg
push
cmp
fwait
mov
lock
pop
sbb
pop
loop
call
jno
aam
daa
jmp
pop
fstps
aam
movsl
fsubrs
leave
inc
cmp
xor
lock
xor
sbb
jecxz
or
cmp
push
jge
mov
inc
push
xchg
cmp
es
lret
jo
dec
mov
push
push
je
add
inc
daa
lods
ds
dec
pop
jl
inc
andb
fnstcw
inc
xchg
movsb
aas
shrb
lock
adc
adc
push
aad
fwait
daa
iret
clc
xor
leave
pop
sub
es
mov
mov
pop
movsl
mov
rcrl
jb
jl
and
clc
loopne
xlat
popf
enter
iret
mov
pop
fisttpl
cmc
aas
je
xor
mov
pop
shl
mov
and
sti
dec
mov
popf
popa
mov
adc
jecxz
sarb
loopne
cmp
lcall
inc
popf
xchg
mov
xchg
mov
adcl
cli
add
inc
mov
sbb
xchg
inc
ljmp
fsubl
pop
mov
sti
into
test
hlt
cmp
cli
sti
mov
adc
sbb
cmp
jle
cwtl
mov
pusha
xchg
cmpsl
mov
in
mov
loopne
cmp
jecxz
std
xor
add
dec
fsubl
rcll
ret
or
mov
stc
sub
in
sarl
mov
popf
lret
imul
push
call
lea
push
lret
jecxz
dec
pop
stos
jb
pop
mov
inc
push
dec
pop
orl
mov
pop
lods
popa
stc
into
sbb
or
pushw
fs
lret
add
jno
push
sbb
stos
xlat
aam
ret
rcrl
xlat
adc
int3
ss
out
push
push
dec
cmc
or
sub
cmpsl
std
lods
icebp
shll
ja
rcr
int3
lsl
dec
add
xchg
sbb
jbe
jle
shll
les
xchg
in
and
adc
loop
lret
jno
fwait
xorl
or
fdivr
mov
pop
and
xchg
test
shr
xchg
adc
sahf
lea
or
stos
cmp
lods
jmp
scas
mov
fsqrt
ret
sbb
xor
mov
mov
in
xor
test
mov
inc
je
mov
dec
dec
scas
arpl
mov
sub
test
sub
insb
xlat
scas
xor
lcall
repz
pop
ficoml
bnd
sbb
testl
lcall
mov
in
test
xchg
insb
xchg
sbb
adc
aaa
divl
inc
jbe
adc
cltd
or
test
movsl
mov
jo
push
jmp
pop
inc
loop
push
in
mov
ffree
xor
shl
and
mov
push
jnp
jge
push
outsb
pop
add
xlat
mov
cmpsl
repnz
dec
inc
fwait
xlat
and
movl
ret
pop
mov
jae
and
imul
xchg
scas
add
or
cmp
inc
xor
ds
loopne
lea
sbb
sqrtps
mov
dec
mov
jp
cli
lods
and
pushf
fldl
insb
cmc
and
and
or
bound
mov
mov
lods
pushl
loopne
out
int
fwait
sbb
cmp
icebp
inc
mulb
sbb
int
lcall
jmp
push
adc
cmp
outsb
ja
mov
adc
add
fbstp
push
sub
jne
push
insb
xorl
xchg
test
pusha
aas
sub
loopne
jg
ret
dec
pop
push
mov
pop
in
cli
idivb
popa
mov
shl
push
and
scas
gs
adc
pop
incb
xlat
imulb
pop
mov
sbb
scas
adc
shrb
imul
push
cs
cmp
xchg
add
ja
push
mov
andb
add
sbb
fadds
add
xchg
shlb
imul
lret
stc
bound
ljmp
cli
xor
mov
jmp
rorl
jns
pop
dec
push
fsubrl
push
sbb
loope
and
or
xor
xchg
call
push
jle
inc
cld
out
sub
loop
pop
adc
lret
sub
jmp
fidivl
lea
dec
inc
std
xlat
jg
stos
lods
inc
pop
iret
mov
shrb
nop
cmpsb
lcall
xchg
xchg
adc
leave
sub
cld
add
mov
jle
outsl
in
push
aam
lahf
loope
pop
push
push
lock
mov
pop
stos
in
cmp
sub
mov
pop
inc
std
mov
or
and
dec
sub
push
or
xchg
mov
add
add
mov
sub
jns
push
add
mov
in
adc
and
or
stc
js
mov
mov
lea
and
push
leave
fsub
mov
pushl
pop
fistl
into
in
aad
imul
test
cltd
mov
test
xor
test
adcb
xor
mov
mov
push
push
mov
sbb
push
cs
dec
sub
and
add
leave
popa
movsl
mov
faddl
mov
mov
mov
push
mov
enter
mov
repz
test
jmp
fadd
stc
adc
aas
adc
push
mov
cltd
int
in
sti
popa
or
mov
movsb
mov
jecxz
mov
btr
pushf
data16
add
rcrl
lods
dec
pop
add
xor
push
and
bound
fnstcw
xlat
sbb
mov
pop
popf
jbe
pushf
aad
dec
xor
cmpsl
fnclex
sub
add
or
stos
fs
iret
aas
sub
add
hlt
lea
lods
inc
and
or
dec
icebp
int
scas
fucom
stos
mov
int3
jl
push
ret
mov
fistl
aad
pop
sub
pop
or
jl
je
add
jg
les
sbb
mov
xor
jg
sub
aam
das
mov
in
jl
jno
pushf
mov
push
mov
jne
sbb
popa
sub
pop
pushf
movsb
les
inc
nop
sbb
push
movsb
push
and
mov
sbb
mov
mov
sti
push
xchg
cmp
jo
orb
jae
js
xlat
out
shlb
pop
dec
rcrl
fimuls
rcr
dec
out
push
mov
out
notb
jle
dec
dec
sti
mov
dec
mov
test
mov
popl
or
pop
lods
ret
xlat
in
subl
cwtl
stos
mov
lcall
mov
out
cmp
pop
imul
or
pop
xchg
bswap
imul
ret
inc
push
js
pop
jb
mov
push
add
push
xchg
cmc
rol
shlb
fldcw
or
out
out
sarb
fsubrp
test
xchg
jp
dec
xor
adc
cmp
mov
outsb
pop
jo
scas
pop
scas
mov
adc
mov
cmp
icebp
jne
inc
inc
lock
adc
and
dec
arpl
dec
cmp
mov
mov
and
movsl
push
cmp
mov
jp
js
popf
mov
lret
arpl
mov
and
rcrb
out
mov
fldenv
xchg
xchg
adc
clc
fldcw
pop
xchg
dec
inc
sbb
adc
and
ljmp
ljmp
stc
xchg
adcb
int
icebp
sub
adc
test
repnz
xor
or
imulb
sub
xchg
jo
aam
and
mov
cltd
sub
loopne
or
rcll
addr16
sbb
test
and
mov
mov
clc
mov
pop
sti
fcmovu
mov
cld
inc
xor
mov
inc
sbb
hlt
jne
pop
sub
dec
add
orb
cmc
lret
sub
push
adc
sbbl
lcall
adc
ret
jecxz
sti
mov
lret
mov
jae
iret
sbb
or
pop
dec
inc
dec
ss
adc
addb
inc
fcmove
jl
add
in
jo
jo
int
dec
ss
and
and
ret
les
fstl
cld
test
cmp
jo
push
add
or
inc
adc
push
clc
adc
fcomp
and
ret
add
xorl
sub
or
insb
jno
sbb
ljmp
ss
push
mov
sub
add
adcl
aaa
jg
inc
jb
and
adc
in
jbe
xchg
adc
leave
add
push
jecxz
mov
mov
xchg
call
in
jl
mov
pushf
add
xchg
pop
insl
mov
popf
adc
aam
les
xchg
add
in
bound
inc
daa
cmp
push
imul
jbe
push
aam
adc
jl
mov
in
dec
cmp
xchg
jp
hlt
rclb
pop
aaa
shrl
xorb
cmc
cmp
cmp
push
xchg
test
adc
idivb
repnz
aas
in
fistpl
mov
xlat
pop
leave
sub
enter
push
push
sub
es
test
dec
push
das
fwait
sub
mov
cmp
mov
cmp
add
push
sub
imul
pop
sarb
iret
mov
js
sub
adc
mov
sar
ret
jl
and
adc
push
lret
add
cmpsb
out
subb
roll
xor
dec
clc
add
jno
shlb
cmp
pusha
out
lods
out
mov
inc
scas
loopne
shll
mov
sub
shrb
jno
sahf
fildl
aam
and
mov
add
mov
mov
xchg
in
ficompl
push
mov
add
push
lret
jp
fstps
gs
cwtl
dec
dec
xrelease
lea
int3
and
call
xor
xchg
push
or
mov
stos
jmp
movsl
cmpl
inc
scas
fisubrl
outsb
pop
jbe
stos
addr16
cmp
push
inc
repnz
mov
ds
pop
cmp
xor
test
inc
xchg
fcmovb
clc
mov
mov
mov
dec
repnz
fwait
push
repz
sti
hlt
scas
ss
loopne
cld
int3
jl
lcall
xchg
lods
dec
mov
jl
or
shlb
pop
cmp
xlat
sub
mov
out
dec
mov
setge
inc
loop
fnstenv
mov
jle
jecxz
sub
fmuls
inc
push
imul
jg
lds
into
ljmp
mov
and
fucomip
mov
sbb
movsl
imul
and
or
aam
aad
aad
jb
add
adc
test
fmuls
sti
lcall
adc
ror
rclb
out
cmc
or
or
int
aam
in
repnz
pop
shlb
push
mov
xor
std
inc
jg
andl
mov
movsb
xor
add
hlt
icebp
inc
popa
fs
cmp
rol
mov
lods
push
js
inc
in
or
loope
pop
adc
stos
adc
and
test
dec
dec
sub
push
cmp
mov
stos
in
sbb
pop
push
inc
das
call
cmc
xor
cmp
xchg
int3
fs
arpl
pop
xor
push
in
jge
sti
lret
cwtl
push
insb
jmp
sub
jecxz
fsubl
mov
out
outsl
ds
jmp
pop
push
insb
mov
js
mov
sbb
push
inc
push
rcrb
inc
push
outsl
jnp
das
les
sub
test
sub
mov
int3
sub
cli
inc
pop
fidivs
push
xchg
call
orl
icebp
mov
imul
or
ljmp
sub
aam
das
lahf
cmp
je
mov
xor
aam
cmp
add
lods
lock
sub
push
cwtl
xor
out
mov
or
shlb
mov
shll
insb
or
cwtl
in
fistpll
and
pusha
xchg
dec
jns
aam
psubsb
mov
lret
mov
hlt
mov
adc
adc
mov
xor
add
incl
lahf
dec
call
jno
mov
xchg
popa
mov
fld
pop
cmpl
mov
push
dec
fisubs
sti
nop
insb
sbb
mov
inc
popf
xorb
lea
jl
xchg
shlb
in
ret
jb
lods
adc
or
xchg
fs
in
cld
pop
push
jb
inc
mov
stos
adc
aad
xchg
pop
rcr
mov
lcall
lods
addr16
loope
daa
insb
scas
sbb
sub
push
mov
outsb
xor
cltd
imul
jge
cwtl
lcall
push
outsl
dec
fwait
lds
pushl
shrb
add
add
sahf
hlt
ja
popf
cmp
hlt
push
sti
scas
iret
insb
in
cs
pusha
jecxz
outsb
lea
clc
add
add
mov
push
xchg
mov
jo
add
popa
loope
nop
call
popa
xchg
repz
inc
sbb
sbb
aas
mov
loop
and
adc
enter
iret
cmp
mov
dec
add
xchg
mov
xchg
int3
test
fnstsw
movsb
push
ret
jmp
xchg
mov
mov
sbb
in
and
pop
ja
pusha
lahf
mov
sub
lcall
xchg
inc
into
push
loop
ja
out
pop
scas
out
adc
adcl
pop
cmp
mov
pop
lods
xchg
out
dec
adc
push
aas
mov
ret
icebp
cmpsb
icebp
test
cmp
and
mov
fwait
shlb
sbb
pop
stc
mov
dec
push
cmp
dec
xchg
xchg
nop
mov
push
and
push
jnp
mov
in
cs
in
pushf
jns
pop
jp
adc
sarb
cmc
sbb
scas
inc
rorl
dec
lods
sbb
movsl
mov
xchg
cli
in
psubsb
leave
jmp
sbb
repz
enter
shlb
mov
daa
pop
dec
mov
push
dec
fisubrs
leave
xor
lods
xchg
and
cltd
mov
jo
mov
xchg
push
push
pop
pop
mov
addr16
mov
jp
mov
sub
stos
loop
sbb
fstpl
ljmp
es
repnz
xlat
sbb
inc
xchg
or
sbb
fistpl
sub
aam
add
inc
xchg
imul
aam
xor
add
and
imul
outsl
inc
jp
test
dec
loope
jns
xchg
mov
loope
jns
adcl
or
xor
pusha
or
icebp
pusha
cwtl
out
std
add
stos
sub
cmp
jle
ja
push
loope
int
insb
iret
pop
test
push
sti
mov
in
loope
testl
pop
inc
push
push
testl
jb
sub
cs
fidivl
inc
sub
arpl
jns
ja
sbb
call
fdivr
inc
cltd
sbb
out
lods
jbe
dec
inc
movb
cmp
dec
fmull
dec
je
push
push
dec
int3
and
jnp
xor
pop
cmpsl
mov
negb
mov
leave
inc
cwtl
xchg
data16
mov
inc
xchg
shr
mov
inc
js
pop
or
sahf
leave
or
or
mov
lods
lea
fucomp
sarb
push
in
nop
test
push
aas
lds
into
jmp
push
lods
cmp
negl
lahf
cwtl
inc
sbb
stc
inc
inc
je,pt
filds
add
mov
clc
sub
fstl
jl
repnz
repnz
sti
imul
lea
sub
xchg
or
aaa
pop
sarb
mul
mov
or
je
push
adc
or
aam
or
push
and
push
pop
notl
cli
mov
pop
aaa
inc
xchg
lahf
adc
mov
cmp
clc
repnz
loope
sub
inc
jl
sbb
clc
fs
aad
xor
shrb
adc
xchg
pop
inc
cmc
mov
dec
cmp
sbb
jb
mov
pop
inc
jo
popf
int
rorl
out
inc
or
sbb
push
cmp
test
sbb
cmp
inc
es
repnz
cld
xor
cli
jmp
test
js
mov
pusha
stos
sub
xor
into
push
or
xor
mov
xchg
push
repz
push
push
jnp
in
test
inc
sbb
sahf
lods
mov
inc
pop
pop
jb
push
mov
dec
out
rcl
push
fistpl
aam
xlat
loope
sbb
inc
cmp
out
inc
mov
std
aaa
popa
into
loopne
cs
ljmp
gs
mov
js
imul
pop
loopne
push
pop
cmp
fisubrs
out
in
ficomps
mov
cmp
aaa
mov
and
cmp
mov
call
lcall
repz
or
adc
fyl2xp1
clc
pop
fs
pop
xor
mov
cmp
pop
mov
sti
pushf
cld
daa
xor
jp
push
out
jnp
dec
fs
cmpsl
sbb
cmp
loope
adc
test
sub
nop
fcoml
xor
add
sub
mov
sarl
aam
icebp
cld
pop
adc
jmp
mov
ja
ja
lods
adc
out
add
aaa
cmp
mov
addr16
orb
push
jbe
xor
pop
cmp
adc
test
cmpsb
pop
into
lds
and
mov
cmpsl
rorb
xchg
iret
and
or
bound
pop
insb
bound
mov
push
push
mov
sub
mov
sarl
or
fnstenv
push
and
clc
mov
daa
scas
addr16
fimuls
sbb
cltd
out
fs
fwait
movsl
sbb
cmp
inc
leave
or
hlt
xchg
sbb
push
mov
call
xchg
push
cmp
rclb
fisubrl
arpl
mov
mov
aad
inc
dec
les
cmc
lock
mov
adc
pop
sub
inc
xor
out
fs
xchg
lds
aaa
loopne
pop
andnps
dec
push
leave
mov
cmp
das
xchg
xchg
jp
leave
or
xchg
movsb
pusha
int
mov
sbb
inc
xchg
loopne
inc
dec
call
push
sub
jb
insl
mov
push
stc
dec
pusha
scas
ja
mov
out
iret
jl
sti
xchg
and
repnz
int3
addr16
cltd
mov
xlat
xchg
aaa
dec
mov
mov
mov
mov
ds
call
stos
orb
cmpl
roll
rolb
or
mov
repz
cmpsb
inc
jl
cmpsl
js
mov
mov
lcall
insb
fsubrs
repz
dec
sub
stos
scas
orl
xchg
mov
stos
sahf
jne
xchg
and
jecxz
ret
xchg
rol
out
sahf
mov
dec
cmp
mov
mov
lret
inc
pop
cli
inc
xchg
mov
pop
cs
and
sbb
ret
int3
and
ss
jp
in
xchg
inc
push
sub
movsb
ret
outsb
adc
add
adcl
inc
lret
cmp
lret
outsb
push
ja
in
rclb
mov
dec
push
aas
push
loop
push
mov
inc
xchg
inc
pop
imul
fdivrl
jmp
xchg
icebp
ret
aas
in
push
add
andl
fsts
decl
ja
pop
cmpsb
push
sti
jg
push
cmc
xor
enter
lock
inc
and
mov
fwait
push
out
xor
and
addr16
jecxz
jae
mov
std
loope
adc
shr
push
dec
outsl
lret
scas
mov
mov
ss
adc
mov
std
jne
sub
loope
popa
sbb
lret
cltd
lods
lods
adc
shr
mov
ror
into
mov
mov
jne
pop
adc
xor
pop
fmul
adc
in
clc
ds
xor
push
xchg
popf
outsl
jns
outsl
dec
faddl
ret
ss
mov
fcompl
scas
xor
icebp
std
adc
sbb
sbb
dec
dec
or
lods
lods
push
popa
jbe
sbb
daa
pop
rolb
aam
and
pop
je
xor
mov
setne
push
or
cmp
enter
imul
cmp
movsb
into
push
and
cmp
xchg
pop
mov
gs
sub
xor
add
add
je
mov
lock
mov
push
fnstenv
push
rol
test
addr16
in
adc
sti
movsb
mov
ds
leave
jae
adc
push
lret
addr16
arpl
dec
rcrl
sbb
and
pusha
and
add
or
inc
sbb
sub
sbb
std
div
jae
adc
mov
aam
fwait
xor
cwtl
add
hlt
daa
mov
cmpsl
mov
add
adc
stc
add
aas
jl
shl
or
imul
xchg
dec
jns
enter
jg
ss
hlt
daa
xor
cli
push
shrb
jge
and
daa
mov
popf
mov
add
adc
leave
inc
mov
call
enter
cld
xchg
fldt
pop
pushl
mov
pop
xchg
je
adc
test
push
aad
xchg
fildll
sti
jp
push
pop
aam
jno
jg
and
arpl
je
sbb
clc
sub
sbb
push
xchg
out
filds
cmp
sub
imul
ljmp
lahf
jnp
aaa
popf
pop
push
cmovge
xor
push
xchg
pushf
leave
ds
mov
ret
inc
dec
xor
les
out
and
xchg
adc
dec
jp
rcl
sbb
xchg
cli
mov
and
dec
xchg
loope
je
mov
mov
aaa
ljmp
mov
add
in
mov
xor
jle
sbb
mov
insl
or
xor
jmp
and
push
stos
fadd
in
add
sub
xor
jl
mov
xchg
push
jb
jnp
aam
cmpsl
jl
inc
dec
push
cmpsl
stos
xchg
sub
jno
jp
aad
jl
in
mov
add
out
mov
arpl
adcl
fiadds
pop
orb
sbb
jp
lret
jmp
repz
insl
cmp
cmp
out
push
xchg
sahf
cmp
mov
mov
add
clc
fisttps
mov
xchg
xor
lods
daa
fstl
int3
adcl
and
ss
mov
or
and
stos
cmp
xor
sub
aam
push
or
jle
jmp
stc
fldenv
adc
movsb
cmovbe
sub
jno
dec
mov
pop
lahf
ret
mov
into
and
fadds
sub
sbb
dec
mov
jl
outsl
jle
pusha
pop
testb
ja
es
mov
repz
hlt
pop
mov
fdivrl
and
mov
sarb
adc
sub
shrb
mov
mov
jle
imul
mov
cmp
shll
mov
jo
jge
test
aas
sub
test
add
mov
push
std
faddl
cwtl
test
lock
mov
rcl
sbb
vmulps
out
adc
mov
insb
jns
pop
pop
adc
sbb
pop
xorl
push
aad
scas
shl
pop
cs
inc
dec
xchg
hlt
fs
popa
std
mov
mov
in
fidivrs
add
adc
pop
push
lds
cs
movsl
jb
jp
lea
outsl
adc
out
in
push
adc
mov
push
cwtl
and
and
and
add
loopne
mov
lock
xor
xchg
dec
shl
into
scas
arpl
scas
pop
iret
cmpsb
call
test
inc
ret
sbb
mov
sub
out
sbb
add
adc
dec
pop
daa
ds
aad
dec
mov
mov
push
js
adc
fs
test
jl
pusha
adc
xor
aad
ffree
cmc
stos
push
movsl
ror
movsl
jge
mov
xor
jno
mov
out
or
sub
cmp
push
jb
jge
mov
pusha
mov
dec
pop
jmp
je
jbe
pop
add
js
dec
mov
push
movzwl
or
fcompp
add
mov
or
xchg
push
dec
movsb
clc
mov
scas
sbb
int
adc
jo
in
dec
inc
rorl
push
push
lcall
testl
data16
dec
push
in
repnz
jne
sbb
rcr
sub
jo
pop
arpl
mov
sbb
popa
nop
mov
mov
or
push
enter
jb
imul
push
sbb
jno
mov
out
pop
aas
cmpsb
pop
and
and
and
xor
jle
xor
sub
inc
shlb
nop
int3
xor
iret
push
push
gs
xchg
popa
ret
mov
jne
jb
out
pop
cmp
mov
pusha
inc
pop
pop
xchg
lret
push
mov
lock
dec
out
movsb
and
jnp
daa
pop
sti
and
inc
clc
lahf
xchg
out
cld
lahf
jno
pop
pop
imul
mov
mov
test
call
cwtl
shrb
ret
fs
mov
addr16
test
gs
sahf
push
popa
pushf
call
scas
dec
andb
sbbb
mov
cmpsb
jbe
add
outsl
stos
inc
mov
aam
das
sbb
loopne
adc
sbb
hlt
inc
xchg
leave
fwait
lods
test
repz
xchg
jp
sub
movsl
lret
sub
push
cli
popf
stos
les
test
jg
and
mov
jecxz
sub
lds
js
add
xorl
pop
loop
mov
push
ja
push
insl
adc
cmp
out
imul
bound
stos
outsb
into
push
push
pop
cmp
cmc
nop
ret
repnz
or
pop
rcr
rol
jl
lcall
clc
hlt
xchg
lea
dec
xchg
lcallw
aaa
xor
pusha
fs
test
and
fimuls
arpl
fsts
inc
stc
movsb
or
imul
sbb
jmp
aad
rcr
jns
cmp
pop
out
ret
dec
ret
stos
pop
lods
mov
das
rclb
or
adc
movl
inc
out
in
inc
pop
pushf
ss
cmp
adc
push
repz
or
cltd
loop
bound
and
nop
inc
aas
divb
cmp
aaa
jmp
icebp
xchg
push
out
adc
inc
rcrl
outsb
jb
adc
dec
adc
daa
dec
test
stos
inc
out
xor
pop
adc
fwait
lods
mov
xor
mov
mov
fiaddl
ljmp
push
inc
xchg
ja
popf
jo
pop
sub
add
mov
pop
loopne
dec
loopne
cmpsl
adc
mov
rcl
xor
xor
movsl
popa
fidivl
insb
sub
ds
mov
out
jl
dec
mov
push
addr16
or
imul
and
test
xor
push
cmp
pop
imul
test
mov
adc
mov
jb
jbe
mov
lahf
mov
lds
mov
mov
ror
in
inc
jne
mov
sbbl
test
rorl
ljmp
push
jns
adc
inc
lds
icebp
or
negl
push
loop
js
mov
xor
inc
push
add
js
pop
outsb
mov
add
cmp
loop
push
jae
adc
cmpl
lahf
inc
cmp
test
gs
mov
shlb
rcrb
in
call
divl
mov
faddl
std
cli
inc
xor
orl
fstl
mov
jge
fwait
add
test
sbb
cmp
sub
jbe
and
popf
mov
in
stos
insb
jl
push
xchg
mov
mov
hlt
out
sahf
pop
sbb
fisubs
push
mov
push
cmpsl
outsl
int3
rclb
and
enter
xor
test
push
aam
mov
adc
pop
push
lcall
jb
mov
call
ja
mov
sub
sub
adc
loope
ljmp
idivl
pop
push
xor
push
mov
fstpl
test
mov
and
out
xchg
adc
js
mov
pushf
add
js
and
in
xor
push
jmp
fcomps
mov
les
jo
jecxz
bound
inc
dec
inc
push
xor
fld
cmp
add
mov
inc
sti
mov
jg
fiadds
sbb
sbb
bound
xchg
inc
cwtl
fisubs
jnp
dec
add
dec
ss
xchg
scas
jb
call
mov
incb
push
pop
adc
push
clc
sbb
xor
jg
int
fidivs
cmp
sub
mov
test
dec
xor
mov
icebp
xchg
mov
sub
mov
xor
pop
xchg
and
mov
arpl
jo
and
and
cmp
lahf
xchg
jae
inc
iret
push
mov
add
xor
xor
and
repnz
xchg
mov
out
ljmp
mov
outsl
xchg
pop
push
divl
mov
xchg
sahf
bound
rclb
sbb
stos
jmp
jo
das
mov
ss
lods
test
cmpsl
mov
jmp
stos
cmp
aas
xchg
addr16
clc
sub
jle
jno
pop
mov
dec
push
add
mov
mov
data16
test
mov
and
out
dec
xor
data16
std
lret
dec
arpl
lods
or
lock
inc
roll
ljmp
inc
sbb
test
shlb
jb
sbb
xchg
testb
mov
ja
adc
loop
shrl
jmp
xchg
lahf
sahf
mov
test
dec
add
stc
out
xchg
cld
pop
inc
sub
lret
lds
pop
nop
push
fwait
pop
add
cmpsl
add
jmp
insl
sub
push
jb
loop
nop
push
test
in
jg
pusha
or
mov
mov
dec
jge
cmp
fmuls
leave
cmp
cmp
inc
inc
je
insb
jns
ja
jmp
in
int
lock
aas
mov
aas
fdivrl
mov
testb
psubusw
mov
fildl
lods
dec
insb
aad
or
sub
popf
inc
adc
stos
mov
cmc
or
cmpsb
mov
inc
sti
aad
or
mov
test
test
push
or
pop
stos
ret
mov
cwtl
das
mov
sahf
mov
lock
mov
xchg
push
outsb
fistpl
or
rcrl
cmp
imulb
or
push
lds
lea
fstpt
add
jno
aad
adc
insl
das
rcr
lods
xor
lods
pop
jl
push
cmp
aad
push
imul
dec
fdivrs
stc
mov
mov
mov
arpl
jmp
icebp
addr16
mov
inc
fxch
or
gs
dec
ljmp
inc
pop
test
lock
jp
addb
imul
push
mov
inc
xchg
fdivrs
mov
mov
ss
sub
inc
sub
or
cmp
call
cli
out
lret
add
leave
dec
ret
xor
cmp
inc
xchg
stos
sbb
fidivs
stos
lock
xchg
arpl
sahf
or
sarl
sbb
shlb
ljmp
mov
add
fstp
frstor
loop
pop
ret
push
fstps
push
and
cmp
call
mov
les
in
mov
inc
adc
adc
and
adc
xchg
fistpl
int
xchg
ret
and
inc
mov
inc
lret
push
mov
cmp
imul
call
push
cwtl
cmp
pop
repz
jmp
aas
cmp
mov
pushf
gs
imul
jp
push
cwtl
outsl
lret
cmp
aaa
mov
movsb
pusha
mov
add
lds
aaa
cmpsl
ss
sub
adc
cli
lds
in
aas
ret
or
add
adc
pop
arpl
mov
mov
rcl
sbb
lret
sbb
sahf
mov
or
insl
cmp
pushf
ficompl
loop
arpl
sbb
dec
stos
cli
push
add
sbb
dec
test
cmp
push
cwtl
xchg
push
cld
stos
orb
les
ljmp
hlt
and
jbe
xchg
jno
ss
xlat
mov
xor
lds
sbb
mov
dec
mov
out
int3
lock
push
outsl
incb
xchg
push
dec
rol
xor
lds
fs
and
mov
jno
mov
dec
push
mov
add
sbb
jle
sbb
into
jmp
es
orb
xor
mov
sub
cwtl
shlb
sahf
insl
test
addl
mov
cmp
jge
test
or
jmp
ljmp
loop
push
jge
lcall
into
mov
test
ret
sarb
bswap
out
jo
fidivl
push
mov
loop
jns
aas
inc
lahf
mov
xchg
xchg
mov
pusha
xrelease
push
fmulp
mov
cmp
sbb
faddl
fwait
push
adc
sbb
jno
sti
inc
adc
cld
sti
shlb
jae
dec
out
mov
jno
inc
jns
iret
mov
sub
or
insb
es
outsb
push
adc
sbb
sbb
repz
or
or
ja
dec
fldenv
out
push
negb
sub
pop
mov
mov
inc
repnz
ja
jo
jne
push
push
sub
rorb
mov
mulb
push
xchg
xchg
xchg
dec
and
mov
sub
lods
shlb
outsl
scas
push
xchg
sub
int
mov
cmp
jb
or
add
sub
or
jp
mov
in
cwtl
push
mov
cmp
mov
cltd
sub
adc
cmp
bnd
cmp
es
aaa
out
leave
sahf
mov
xchg
add
dec
adc
pop
push
into
mov
cmp
pushf
das
mov
popf
test
repz
cmp
es
fmuls
lea
add
and
cmc
add
adc
inc
filds
loopne
jecxz
inc
mov
jmp
mov
imul
fimull
aaa
mov
xor
aaa
jl
and
imul
add
sub
dec
stc
mov
insb
dec
out
in
lods
cmpsl
push
sbb
sbb
out
jo
in
push
xlat
sbb
xchg
mov
test
outsb
jl
jl
push
cld
jp
fbld
mov
int
pop
std
dec
xlat
adc
inc
mov
push
xchg
ja
in
iret
mov
cmpsl
sbb
test
jg
pop
xor
push
pop
pop
mov
adc
inc
js
popa
mov
jmp
les
adc
adc
xchg
dec
pop
pop
divl
pop
pop
repnz
sub
mov
inc
cmp
loop
and
dec
pop
stos
out
xor
in
pop
iret
dec
mov
adc
xchg
cld
std
std
out
in
jae
mov
and
push
leave
jmp
lcall
inc
mov
xchg
in
hlt
nop
add
mov
movl
mov
cmc
jo
testb
movsl
int3
cmp
stos
cmpsb
cmpsb
sti
inc
and
popa
repnz
sahf
pushf
fnstenv
test
cld
push
cmp
rcrl
pop
push
data16
pop
arpl
mulb
push
sbb
or
cmpsl
jecxz
or
adc
mov
movsl
insb
inc
insb
mov
aad
pop
lock
in
ljmp
mov
mov
adc
inc
adc
or
xchg
xchg
js
pop
lcall
frstor
stos
movsl
push
dec
add
xchg
adc
inc
mov
lods
inc
mov
sub
pop
fiaddl
mov
mov
pop
andb
mov
xchg
mov
ret
mov
ficoml
mov
and
bsr
jne
stos
loopne
sub
xorb
or
mov
xor
jl
shl
adcl
or
add
pop
shrb
mov
mov
rcrb
mov
jns
dec
les
add
pop
mov
mov
insb
inc
gs
in
cmp
pop
inc
xchg
std
mov
aad
fcmovbe
pop
pop
or
ja
movsb
aas
cmpsl
hlt
cmc
and
xchg
jg
jp
mov
mov
pop
int
inc
test
sti
cmpsl
push
sti
xchg
cmp
add
add
sarb
jae
or
dec
mov
je
negb
iret
adc
inc
pop
inc
dec
std
or
mov
popa
test
fisubs
sahf
pop
pop
jmp
mov
rcrb
nop
cwtl
sbb
int
adc
xor
sub
sbb
fiaddl
xchg
lret
mov
out
mov
xchg
adc
pop
outsl
sub
jmp
cs
lea
dec
pop
push
and
adcl
cli
and
fdivp
push
xchg
add
or
jp
xor
mov
cwtl
cmp
loope
in
int3
mov
or
cs
mov
pop
es
cmp
or
adc
sarl
jns
pop
js
sbb
ljmp
xchg
sub
sub
jl
data16
cmp
lock
out
sub
and
add
sar
fs
out
sbb
inc
repz
jmp
and
test
loope
inc
adc
mull
cmc
loopne
popf
mov
jns
lcall
arpl
or
sti
ds
nop
aam
andl
pop
mov
fdivs
cli
xor
outsb
icebp
pop
loope
jmp
pop
imul
call
pop
rcll
cmp
or
insl
sbb
loopne
adc
aad
fs
sbb
iret
cmp
dec
clc
mov
xchg
aaa
sbb
pop
xor
insb
notb
jno
fildll
call
jecxz
mov
imul
in
aad
clc
sarl
daa
movsl
fcoml
mov
into
xorb
rcrb
in
out
mov
movsb
les
mov
pop
loope
sbb
jle
push
pop
loop
cmp
mov
push
xor
sti
sbb
lds
mov
cmpsl
dec
xor
cmpsb
leave
mov
cmp
popa
add
inc
jecxz
adc
add
out
std
or
sub
mov
dec
cmp
inc
dec
imul
jne
arpl
mov
dec
cmc
pop
loop
jno
xor
out
mov
pop
jle
mov
mov
lret
fisubs
ljmp
sahf
inc
or
cld
jmp
shlb
sbb
hlt
xor
and
sbb
pop
jmp
push
notb
mov
jl
arpl
out
cltd
xchg
add
jl
push
cmpsl
push
push
test
and
mov
push
mov
or
test
outsl
pushf
pop
adc
lods
xchg
mov
xchg
dec
les
adc
sub
insb
inc
or
dec
iret
les
mov
inc
cmc
into
push
push
testb
sub
mov
mov
xchg
push
add
jmp
add
lds
popa
cmp
or
pop
add
inc
fldl
adc
fwait
pand
jns
aam
xchg
add
mov
or
jnp
rcl
jns
int
sbb
or
outsl
out
jp
sti
loop
cs
inc
fwait
pop
push
shlb
jle
push
pop
ds
xchg
lods
jmp
mov
or
test
shlb
xchg
pop
imul
dec
add
aad
in
faddl
scas
xor
and
fidivrs
push
pop
in
add
lds
sbb
jle
dec
jae
sub
nopl
add
mov
test
dec
aaa
mov
adc
test
mov
mov
out
xor
mov
jns
addr16
pop
xlat
clc
xchg
mov
iret
rolb
sub
mov
insb
or
or
or
sbb
sub
aam
lahf
jns
sbb
andb
or
jge
aad
sub
pop
pop
pop
add
push
push
imul
or
scas
dec
and
mov
ffreep
add
cmp
je
neg
xchg
mov
fnstsw
lock
mov
icebp
add
jp
mov
xchg
lods
in
sbb
add
jno
clc
push
inc
sbb
rcrl
int3
mov
pop
xor
dec
nop
adc
out
into
dec
push
mov
ss
in
xchg
jge
mov
ss
jl
push
adc
ret
xor
mov
dec
fs
cmp
lret
fs
mov
mov
subb
rolb
rcl
loopne
std
popa
mov
dec
mov
dec
jns
jmp
stc
push
cld
insb
sub
sub
cmp
xor
cmp
and
cltd
push
sahf
outsl
cli
push
dec
movsl
fdivrl
fcoml
dec
test
add
inc
jl
fsubrl
outsb
out
inc
jmp
sbb
arpl
xchg
push
adc
cli
xchg
fisttpll
or
arpl
xor
ret
cltd
jns
bound
fmuls
dec
pop
loope
leave
jb
cld
shr
pop
jge
cmp
jmp
stos
or
cwtl
jne
push
ficomps
sbb
insl
es
mov
pop
out
loopne
dec
or
inc
or
scas
out
insl
fisubl
sbb
xor
hlt
cmp
mov
inc
je
sbb
push
test
sahf
dec
iret
test
inc
add
jae
pushf
cli
ljmp
xchg
test
stos
cmpsl
cmc
into
dec
inc
js
pop
rcll
xchg
insl
fwait
mov
lea
clc
mov
cwtl
add
push
sti
xchg
adc
js
mov
adc
loop
mov
mov
or
adc
popf
insl
push
daa
cmp
stc
movsb
jbe
pushf
loope
outsl
out
into
iret
insb
icebp
fistl
push
mov
mov
sbb
push
cmp
mov
xor
pop
push
pop
in
pusha
lret
adc
xchg
stos
push
add
sbb
lock
cltd
sbb
mov
movzbl
subl
pop
dec
in
hlt
mov
cwtl
sub
shrl
fnstsw
loope
mov
les
dec
je
jnp
fdivrl
fsubrs
mov
and
sub
cmp
js
std
inc
cmp
push
bound
std
outsb
imul
daa
lods
mov
jno
sub
and
sub
sub
cmp
shl
int
sbb
call
pop
jecxz
test
sti
loopne
dec
subb
insb
jle
jl
inc
mov
in
daa
sbb
aam
movsb
notl
pop
cmc
and
mov
sbb
aaa
inc
push
cs
dec
xchg
adc
xchg
mov
mov
fwait
xlat
inc
cmp
fcmovnb
int
adc
decb
aaa
mov
cmc
mov
adc
mov
push
adc
imul
cwtl
iret
fmulp
lea
and
xchg
add
fisubs
jg
enter
sub
push
sti
loopne
lods
cltd
fimuls
dec
call
lea
outsl
dec
jg
push
repnz
movsl
or
stc
enter
sub
xor
inc
icebp
inc
test
xor
clc
fcomps
aas
imul
stos
shrl
and
movsl
in
stos
icebp
aaa
jae
andb
ds
aad
push
push
addr16
pop
enter
inc
call
loope
cmp
mov
repz
push
pop
xchg
push
mov
cmpsb
loop
xchg
test
and
cmpsb
jge
shll
fxch
mov
neg
aaa
or
mov
mov
xchg
int
or
xchg
flds
scas
sub
bound
xor
cmp
jg
jge
mov
pop
mov
in
lret
push
sbb
push
mov
jmp
mov
jno
je
dec
stos
sbb
outsb
int3
mov
out
xor
js
jae
inc
clc
into
inc
leave
cld
test
mov
mov
pop
mov
push
paddusb
push
andl
jmp
add
mov
insl
cmp
dec
jno
aad
or
jle
push
jo
clc
fwait
adc
flds
repnz
sub
inc
jecxz
gs
shrb
adcb
aaa
jb
pop
xchg
mov
mov
scas
push
sub
pop
jnp,pt
push
xor
cmpsb
cmp
cmpsb
pop
ljmp
or
pop
adc
mov
mov
sbb
mov
dec
xor
push
jmp
or
lcall
push
push
xor
add
movsb
push
loope
test
pop
push
mov
orl
or
sbb
fildl
and
sub
fwait
out
or
cli
lahf
andb
mov
add
test
inc
and
mov
jb
push
mov
orl
and
je
xor
dec
fisttps
push
clc
lods
imul
aas
xchg
xchg
in
mov
push
cltd
pop
cmpsl
sub
in
jg
aaa
cli
sbb
pop
mov
cld
inc
cmp
stos
cmp
imulb
dec
idivl
outsl
xor
mov
inc
pop
stc
pop
pusha
arpl
cmpsl
push
and
fisubl
xchg
das
movsb
test
aaa
or
out
data16
lods
call
dec
xchg
xchg
dec
push
jecxz
xchg
punpckhwd
pop
aas
jne
cmpsb
movsl
and
push
shrb
in
sub
and
and
in
adc
in
inc
cmp
push
mov
shll
fwait
movsl
xchg
jno
cld
out
mov
clc
int3
jp
sub
cmp
sti
push
xchg
inc
enter
je
std
dec
scas
fildl
mov
lea
jo
enter
pop
push
xchg
ja
leave
mov
es
mov
je
and
js
xor
mov
shll
xchg
mov
pop
or
adc
mov
adc
dec
and
int3
jns
insl
xlat
enter
jg
rcl
jle
pop
xchg
jecxz
fisttps
cltd
shrb
xchg
ret
insb
sub
adc
outsb
sub
pushf
sub
clc
hlt
cmp
mov
inc
push
pusha
mov
cmp
and
hlt
fisttpll
test
outsl
dec
or
adcb
lcall
mov
sti
push
pop
daa
movsb
xchg
aas
xchg
adc
xchg
data16
pop
jl
ljmp
and
cmp
cs
dec
adc
jae
sub
push
jns
pop
ficomps
jae
out
or
adc
cld
mov
xor
ss
cmp
jb
das
pop
lods
fstps
mov
pop
mov
sbb
mov
mov
js
scas
ja
mov
adc
repz
inc
ret
leave
repz
or
test
pop
scas
inc
add
mov
jmp
pushf
hlt
sbb
ds
lcall
frstor
mov
mov
inc
dec
lea
adc
lahf
aam
stc
ljmp
inc
mov
popf
inc
or
cltd
rcrl
pop
sbb
rcrb
clc
adc
sub
jecxz
jae
push
jae
movsl
inc
push
inc
pop
pop
mov
sub
push
mov
push
add
sub
in
or
repz
adc
or
rcll
jle
dec
adc
mov
mov
je
push
pop
fdivrs
push
jae
ljmp
cmp
outsb
cmp
pop
mov
lods
pop
into
mov
icebp
lcall
push
fcmovb
out
push
icebp
icebp
fs
hlt
sar
mov
ja
arpl
sti
aaa
mov
movsl
push
cmp
and
arpl
xor
or
js
or
ds
sub
inc
mov
jae
cld
scas
mov
stc
in
cld
movsl
scas
pop
and
ds
aam
and
xlat
pushf
aas
mov
dec
std
cwtl
and
rcll
into
mov
das
jl
popf
popa
rorl
ss
jnp
incb
dec
xor
cmp
mov
iret
jns
inc
push
aaa
and
xor
lods
xor
xorl
mov
xchg
aam
cmp
outsb
xor
lds
xlat
mov
fsubs
pop
ss
xor
mov
mov
shl
mov
out
push
inc
cmp
jnp
xor
sub
jns
mov
and
dec
push
mov
sbb
sbb
pop
push
cmp
jle
es
cmp
inc
and
sub
les
mov
push
jge
faddl
xlat
xchg
loop
popf
jbe,pt
std
mov
dec
mov
push
repnz
popf
or
cmp
lcall
les
pusha
mov
jnp
scas
and
fsubrs
adc
dec
xlat
outsb
pop
jecxz
lock
sahf
aas
sub
mov
pop
xchg
incl
push
es
jae
cli
cwtl
push
dec
mov
sbb
in
push
cwtl
inc
fsubl
gs
sbb
lret
jno
mov
adc
testl
movsb
sbb
mov
gs
dec
sti
or
cld
cwtl
aas
lock
xlat
push
hlt
jmp
adc
or
shl
adc
out
cmpb
aas
cmpb
mov
daa
mov
cs
fidivs
pop
sbbl
xor
mov
mov
inc
cs
arpl
repnz
sbb
test
pop
jge
inc
inc
cli
jg
sub
xchg
leave
ret
push
mov
mov
pop
arpl
insb
jle
mov
mov
ljmp
shl
inc
rcrl
stos
lock
cmpsb
loop
jecxz
ficomps
pop
add
popa
movsl
repnz
sbb
fsubrl
fistl
jb
push
call
cmovo
imul
pushf
ficompl
cmpsl
adc
insb
sub
or
in
inc
mov
das
in
xchg
mov
mov
and
adc
inc
sub
sbb
repnz
push
insw
ja
loope
neg
and
je
cld
addr16
xchg
pop
cld
shl
dec
orb
sub
test
mov
stos
push
lret
stos
fs
xchg
sahf
sub
orb
fidivl
and
jae
insl
out
or
push
in
sub
cmp
add
repz
sbb
xor
jmp
and
psubd
mov
test
lds
push
aaa
movsl
pop
sbb
outsl
outsb
adcl
jl
mov
ret
xchg
cmp
add
push
inc
addr16
push
aaa
push
xor
cmp
or
jae
pop
les
std
cli
xor
xchg
push
and
loop
jo
lds
push
sahf
pop
pop
xchg
stc
mov
or
jl
inc
pop
cmpsl
cmpsb
sbb
rcrl
sahf
sti
cld
pop
es
out
leave
notl
inc
aaa
fstpt
repz
movsb
jl
call
dec
lock
push
ljmp
jo,pt
cmpsb
sub
jle
sbb
xor
add
and
fs
lods
adc
jnp
mov
sahf
cmp
mov
and
cld
in
mov
add
movl
sahf
or
jp
xor
ret
mov
or
lea
insl
test
fisubl
xchg
add
iret
subb
push
stos
or
in
lods
add
xor
cmp
out
pop
sub
jge
inc
in
lods
pop
pop
cmp
push
std
test
sbb
rorl
push
xchg
pop
pop
shlw
or
aaa
and
pop
push
pop
pop
xor
ljmp
ret
adcb
loopne
sahf
jg
push
out
xor
adc
orb
test
fcom
add
in
stos
push
je
push
mov
or
jmp
and
mov
and
stc
mov
xchg
inc
xchg
lock
sarl
insb
test
loopne
pop
inc
lret
lods
xor
xchg
imul
sub
xlat
push
into
cmc
xchg
je
inc
and
shll
movsb
lret
jmp
and
sti
cmp
adc
add
rcr
adc
sbb
sarb
mov
push
dec
fisubl
lods
in
test
add
clc
jge
insb
fwait
push
cwtl
jbe
jl
inc
subl
les
and
fisubrs
mov
clc
loopne
cmpsl
xor
or
repz
xor
loop
scas
inc
pop
pop
sahf
mov
cmp
ret
mov
sub
or
insl
cmp
stos
divb
push
bound
or
dec
adc
lret
adc
test
mov
test
mov
daa
sti
cmp
pusha
mov
push
push
lods
ret
add
into
mov
lods
repnz
dec
jmp
lock
popf
loope
add
mov
push
and
aas
movsb
pop
jmp
ss
jb
ss
xor
clc
adc
jno
mov
push
mov
sub
sbb
into
test
es
mov
xor
pop
lock
lea
mov
repz
in
jne
sahf
iret
sub
les
mov
ja
dec
or
jle
jno
and
mov
shrl
mov
insb
lods
les
push
outsb
lret
push
in
imulb
push
daa
mov
fs
cmovo
test
rcr
inc
jmp
mov
ret
cmpsb
dec
lock
cmp
pushf
fldl
sarb
jns
rolb
pop
xchg
mov
mov
push
lock
or
dec
sarl
outsb
cmp
mov
add
mov
movsl
mov
std
inc
adc
dec
inc
jl
frstor
xor
scas
dec
dec
mov
orl
adc
mov
aas
jno
xor
xor
mov
mov
xchg
push
mov
cmp
add
gs
and
imul
fsub
std
das
pop
jbe
cld
lds
xchg
pop
mov
cmp
es
mov
and
outsl
movsl
mov
adc
std
pop
push
dec
or
add
ljmp
das
xor
cmp
jp
or
adc
jbe
je
jbe
lea
out
cli
stc
pop
and
in
cmp
nop
ret
popf
adc
call
mov
test
cmp
jbe
andl
sbb
sbb
sub
out
movsb
mov
jns
sbb
mov
push
cmp
push
jae
and
push
mov
cmp
cld
fwait
adcl
sbb
popa
mov
sub
negl
xor
nop
fwait
das
sbb
push
or
sti
ljmp
aam
fmull
cmp
mov
jo
in
loopne
adc
xor
mov
dec
xchg
fmul
fiaddl
cmp
clc
xor
inc
push
dec
test
mov
mov
and
or
repnz
dec
cs
ds
xchg
inc
lea
cmpsl
in
add
cmpsl
lret
mov
cmc
sub
cld
mov
jge
repnz
lcall
mov
imull
add
mov
jnp
xchg
jb
cmc
in
xchg
fisttpl
mov
jno
gs
cld
pushf
rcrb
inc
jge
adc
iret
mov
inc
adc
in
sbb
popa
ja
lods
cltd
clc
inc
mov
mov
stc
cmc
mov
mov
push
cmpl
inc
xchg
sbb
lahf
inc
shrl
xchg
leave
clc
and
cmp
aaa
enter
bound
inc
js
insl
in
out
mov
xchg
int3
push
mov
cld
dec
sbb
sbb
adc
mov
dec
sub
clc
mov
dec
stos
pusha
push
addb
rcl
sbb
or
je
sarl
outsb
and
push
lock
fisttpl
scas
mov
jmp
and
lods
pop
sub
mov
mov
icebp
fcoms
push
lods
fldpi
inc
cld
jg
sbb
push
inc
sbb
pop
fisubrs
lock
mov
scas
enter
insl
add
pop
adc
filds
add
sub
mov
mov
push
pop
pop
mov
mov
in
push
xor
and
sti
sbb
xchg
je
mov
xchg
xlat
loope
push
icebp
xchg
pop
jne
or
pop
iret
lcall
push
and
sbb
out
inc
int3
xchg
lods
stc
into
adc
jo
fwait
mov
cmp
clc
lahf
jp
nop
std
dec
or
xlat
mov
mull
test
add
dec
into
inc
jge
enter
inc
or
push
idivl
pop
pop
sarl
and
xchg
pop
cli
movsl
push
xor
mov
lret
xor
pop
orl
jecxz
daa
pop
movsl
cmp
fnsave
adc
enter
lahf
add
jg
dec
mov
jp
sbb
or
test
lcall
movsl
adc
mov
cmp
mov
movsl
inc
rorl
roll
lret
sahf
int
mov
fldenv
adc
inc
mov
movsb
shl
xchg
loope
mov
ret
pop
lods
sub
out
int3
out
sub
scas
and
pop
cli
pop
lcall
nop
stos
add
inc
sub
jp
add
xchg
stos
fs
pop
cmc
inc
sub
mov
mov
sbb
mov
adc
mov
inc
mov
pop
in
xchg
les
fndisi(8087
jne
add
jno,pt
cmp
mov
and
inc
cmp
nop
aam
xor
cmp
dec
mov
stc
mov
shll
inc
out
enter
mov
mov
jg
or
cmpsb
push
inc
in
das
sbb
pop
movsb
enter
bound
xchg
lcall
orl
lock
pop
scas
cmp
in
cs
fstpl
fs
and
mov
push
ljmp
mov
test
mov
faddl
jp
cwtl
jo
mov
xor
jg
jns
xchg
outsl
loop
push
test
adc
xchg
mov
imul
pop
inc
arpl
pop
sarb
sbb
scas
xchg
xchg
dec
fcoms
jns
adc
ss
dec
mov
pop
addr16
mov
rcll
fdiv
sub
das
sti
stos
sbb
repz
lahf
test
sbb
shll
jmp
cmp
mov
test
imul
or
fisubrl
cs
mov
icebp
popf
fcomps
ds
jg
mov
loope
out
and
gs
fwait
mov
ljmp
insb
in
xchg
dec
jge
in
add
cmp
inc
iret
scas
addr16
mov
push
inc
pop
mov
lea
imul
ret
aas
pusha
xchg
stos
mov
jmp
fcos
or
mov
jmp
jmp
cmp
pushf
fstps
inc
cmpsl
aaa
inc
movsb
pop
mov
sbb
int
fisttpll
incb
mov
sbb
leave
cmp
pop
pop
lcall
jns
mov
push
add
mov
jae
incb
adc
sub
frstor
sub
sbb
cmp
sahf
mov
dec
cmp
cwtl
adc
inc
dec
in
stos
add
int3
rcrl
dec
cmpsl
in
or
mov
inc
add
sub
mov
inc
lock
add
sbb
je
dec
xor
inc
jle
or
dec
fstpt
rclb
push
popa
mov
mov
xor
jae
mov
mov
rcrb
daa
rol
and
iret
or
pop
popa
mov
gs
in
int3
jge
cmp
inc
scas
mov
sarb
stos
xchg
stos
iret
cs
push
inc
xchg
fadds
out
lods
into
fiaddl
icebp
fs
mov
jle
bt
out
pop
xlat
dec
nop
in
imul
iret
cmp
movsb
inc
cs
das
ret
adc
sahf
cs
fisubl
inc
jle
xor
jno
mov
inc
inc
lahf
int3
pushf
inc
xor
iret
cmpsl
out
pop
stc
in
mov
mov
test
outsb
loope
cmc
out
sbb
adc
std
leave
mov
sbb
pop
push
push
aaa
fistl
in
mov
push
dec
and
dec
push
rol
jle
adc
dec
ret
xorb
inc
mov
lock
bnd
daa
pop
ljmp
push
push
outsb
movsb
sbb
jle
push
int
out
addb
gs
xor
add
cmpsl
sbb
sbb
cmp
xlat
sbbl
cmpb
rcrl
xor
insl
sub
cmp
gs
xor
add
pop
inc
jg
jge
push
xor
neg
and
cmpsb
push
push
mov
push
xor
movsb
lret
lods
xchg
mov
xor
adc
or
stos
lcall
rcr
stc
xchg
data16
adc
push
xchg
adc
jg
xchg
das
ss
xchg
lods
idiv
into
jmp
inc
fldcw
and
xor
jmp
shlb
sub
add
push
daa
mov
push
bound
inc
test
add
test
decb
jmp
add
jno
push
cli
movsb
rorl
fsubl
cmpsl
lods
pop
out
ds
test
xchg
sub
lahf
cmpl
fld
sbb
xchg
cmc
jb
aaa
mov
test
loope
jmp
lods
cmpsb
lcall
cmp
movsb
into
xchg
int
in
xchg
sub
arpl
out
scas
jbe
sbb
sbb
mov
mull
or
mov
mov
daa
or
dec
out
sbb
lcall
cli
aaa
add
aam
test
pushf
stos
fistl
push
lock
loope
sti
in
rclb
dec
nop
jg
sub
push
cmp
ret
inc
jge
inc
pop
push
fdivrp
lahf
mov
inc
fdivs
fwait
cmpsl
cwtl
lock
dec
std
mov
lds
incb
inc
cmp
daa
movsl
sti
insb
andb
movsb
xor
push
incb
jne
push
and
aas
sub
test
push
mov
mov
cli
sbb
jne
mov
test
or
ss
subb
icebp
inc
mov
sub
mov
mov
and
jl
mov
repnz
cmp
sahf
out
push
test
jno
jns
lds
cmp
mov
or
aaa
movsb
rorb
xchg
loope
fstpl
or
lcall
xchg
push
push
and
jmp
cmp
mov
xor
stos
imul
xor
xchg
iret
fcmovu
mov
or
cmp
aaa
adc
mov
mov
in
jno
jg
adc
inc
clc
sbb
mov
inc
inc
aaa
pop
jle
sbb
adc
scas
inc
pusha
jg
or
or
repz
leave
loopne
sti
pop
dec
cmp
sahf
add
sarb
jae
aaa
xchg
mov
push
mov
lret
daa
negl
push
adc
jl
sub
loope
adc
sub
add
movsl
push
ja
mov
dec
adc
lods
or
sahf
addr16
push
loopne
jmp
push
cmc
loop
sbb
dec
xor
cmpsl
cmp
xchg
mov
out
push
ja
mov
mov
xor
add
es
jmp
xchg
arpl
clc
push
cmpsb
dec
jecxz
jae
out
jb
fwait
sbb
cmp
repz
icebp
adc
inc
stos
pop
pop
daa
cmp
cmpsb
mov
das
stc
int
enter
push
test
bnd
mov
addl
loopne
mov
popa
pop
push
in
test
mov
or
out
jg
dec
insb
rcrb
sub
push
test
sbb
xor
push
ljmp
arpl
negl
pop
daa
mov
lods
cmp
adc
inc
add
adc
in
sub
popf
leave
push
push
div
xchg
js
cmc
paddd
adc
ficomps
lds
orl
sbb
insb
sbb
and
fildll
jle
xor
inc
rorb
je
adc
aaa
pop
xor
lcall
pop
clc
rcrl
insl
fadd
or
stos
test
aaa
in
push
xchg
xchg
mov
sti
repz
dec
out
call
mov
test
xchg
mov
cmp
iret
hlt
addr16
push
and
pop
pop
add
push
sub
push
out
cltd
jle
rol
stc
das
aad
inc
ja
imul
add
xchg
pop
cmpsb
mov
or
bound
stos
mov
stos
or
fnstsw
int
mov
mov
enter
fisttpl
add
jge
pop
mov
mov
cs
cmp
jae
and
call
fwait
mov
test
mov
mov
or
bound
cmp
pop
mov
shrl
inc
scas
mov
mov
js
dec
xchg
xor
or
pusha
jg
ja
mov
jae
dec
jmp
outsb
stos
sub
stos
fiaddl
cld
pop
cwtl
mov
test
xchg
mov
add
jo
orl
ds
dec
or
add
xor
out
aam
inc
cltd
shlb
aad
imulb
or
mov
xor
ror
and
jle
leave
and
out
dec
mov
negb
inc
dec
adc
dec
push
fistps
adc
notb
cmp
aam
jo
int3
rcrb
arpl
repz
out
jmp
lock
jb
sub
jp
fsubl
std
lods
or
push
pop
dec
pop
lahf
ficompl
pop
call
inc
inc
push
into
adc
cld
mov
test
inc
popa
imul
mov
jle
or
insb
xchg
xchg
pop
and
dec
mov
xor
ja
mov
das
ret
in
test
int
mov
addl
nop
cmp
add
mov
hlt
in
xor
aam
or
sbb
nop
jno
mov
or
pop
testl
inc
jmp
adcl
dec
out
adc
push
cs
repz
cli
cmp
sbb
fs
sub
jp
insb
push
push
bts
fistpll
stos
add
out
push
in
cmp
add
xchg
scas
mov
into
add
jge
add
rorl
mov
lahf
aad
fucom
push
sbb
mov
into
out
adc
add
fucomip
data16
adc
bound
insl
adc
cmp
popf
pop
rcrl
inc
out
movsb
push
ret
rcrl
mov
jl
arpl
push
add
add
je
in
fdecstp
or
pop
mov
mov
rol
shlb
lcall
sub
fstpt
mov
jae
xchg
cmp
dec
cmp
inc
dec
xor
sbb
stos
pop
add
rclb
inc
sub
dec
in
mov
imul
popf
jbe
jbe
jmp
testl
mov
push
nop
xorl
mov
push
cli
xor
jo
xor
cwtl
xchg
addl
notl
lcall
push
test
push
inc
test
popa
adc
cmp
pop
adc
lea
jns
add
in
mov
and
jns
mov
mov
lods
xchg
popf
push
xchg
dec
fdivrl
cltd
fs
push
push
rorl
mov
cltd
mov
push
sahf
sbb
mov
dec
push
and
shl
enter
js
out
sub
push
add
addl
rcrb
in
popf
arpl
les
scas
mul
push
cmp
sbb
jmp
xchg
jmp
inc
out
push
inc
xchg
mov
xchg
out
cld
shll
push
add
in
jbe
in
sbb
inc
jl
popa
fcmovbe
xchg
or
test
mov
jmp
push
out
sarl
int
lods
dec
es
stos
adc
sbb
push
sar
cmpl
or
push
mov
ss
cmp
es
imul
into
mov
arpl
xchg
dec
xor
stos
ror
outsl
pop
mov
stos
scas
xchg
mov
out
fistpll
leave
loopne
or
mov
mov
fisttpl
dec
imul
movsb
xchg
lods
mov
lahf
adcl
mov
mov
xchg
push
sub
cs
data16
frstor
pop
outsb
adc
pusha
push
pop
sti
into
mov
fwait
push
mov
fdivrs
mov
lods
jmp
mov
push
inc
add
and
lea
sbb
mov
sub
scas
repnz
sub
adc
setne
out
jecxz
js
inc
je
icebp
push
addr16
mov
pop
jmp
clc
ja
loop
ficomps
cli
push
mov
lsl
lcall
push
sbb
pop
push
add
xor
mov
add
lahf
adc
out
pop
xchg
cwtl
ret
inc
xor
adc
cli
fstps
push
shr
cmc
mov
lds
xchg
pop
add
les
jecxz
ja
and
cmp
outsb
cmpsl
pop
repnz
and
aam
mov
and
sub
ret
aam
push
push
inc
jo
arpl
sub
sahf
subb
shll
or
jno
mov
insb
in
lea
aas
lods
jnp
jae
push
xor
rclb
dec
jl
icebp
mov
jo
inc
or
add
fisttpl
push
outsb
mov
xchg
fstl
enter
adc
fimull
or
aaa
and
sub
scas
adc
push
or
cmp
dec
and
mov
mov
mov
mov
out
frstor
mov
xchg
loopne
pushf
mov
imul
fnstenv
mov
adc
or
ficomps
addr16
sub
jae
jp
pop
jns
addb
xorl
aad
stos
xchg
in
cmpsl
mov
pop
arpl
nop
xor
push
mov
pop
cmpsl
fdivl
add
cmp
cld
add
mov
shll
push
call
sti
das
mov
add
mov
jmp
pop
mov
and
mov
sqrtps
sahf
cs
sbb
xchg
insb
dec
mov
loopne
fidivrs
pusha
mov
test
ss
push
push
mov
loop
jno
inc
mov
mov
fs
hlt
leave
pop
cmp
dec
add
pop
mov
jne
pextrw
pop
test
inc
test
sub
fisttpll
dec
mov
shlb
mov
mov
mov
fnstenv
lret
decb
and
lea
stc
arpl
mov
pusha
jg
push
sbb
sub
pop
mov
sbb
dec
pop
dec
outsl
xchg
push
test
jbe
dec
into
and
ret
mov
aad
aad
adc
pop
or
lcall
xchg
popa
mov
push
xlat
out
test
lahf
xor
aaa
or
les
add
bound
xor
push
lret
push
dec
mov
inc
mov
cmc
or
frstor
leave
and
sub
fucomip
dec
mov
pop
pop
dec
pop
lock
enter
jecxz
pop
das
sbb
adc
jp
sti
sub
out
mov
mov
push
test
js
mov
lods
fdivrl
add
sub
test
jo
scas
lods
jbe
int3
or
sbb
rorl
je
pop
testl
xchg
ds
mov
mov
testb
sub
xor
push
sub
js
push
ret
les
jne
movsl
inc
call
jg
mov
rcrb
push
pop
cmp
mov
jno
mov
sbb
push
les
cli
stc
pop
mov
mov
cmp
into
jae
daa
sti
jmp
cmp
rcl
mov
mov
and
add
in
mov
mov
add
fprem1
and
loop
fimuls
sbb
lea
lods
daa
push
cld
cwtl
js
jno
aam
jne
jo
jmp
mov
xor
push
cmc
adc
push
les
in
dec
lods
iretw
rcll
push
sbb
inc
stos
pop
ret
cltd
scas
daa
adc
hlt
test
xor
pop
fnsave
imul
ja
push
mov
inc
push
loop
scas
inc
pop
orl
insl
lret
inc
std
pop
or
pop
cmp
leave
xchg
ljmp
shl
xlat
adc
testb
inc
test
test
mov
jno
rcr
jecxz
aad
adc
add
jmp
adc
inc
mov
inc
adc
add
dec
pop
adc
mov
insl
and
jecxz
push
cmp
push
jns
xchg
rorb
ret
and
adc
adc
fisubrs
sbb
adc
mov
mov
cltd
pop
mov
hlt
inc
xor
int3
mov
push
jb
push
or
cld
ss
jge
aaa
fbstp
adc
out
shrl
xchg
lcall
cmp
jecxz
mov
fidivs
or
adc
xchg
arpl
test
cmp
out
jnp
js
pop
jno
aad
xchg
and
push
push
push
cmp
mov
inc
pop
js
jmp
fs
or
jae
sub
inc
mov
les
sbb
mov
icebp
add
push
or
in
adc
pop
jo
rcrl
lods
gs
ds
xchg
cli
add
mov
mov
push
lcall
sbb
testl
jmp
fsts
mov
adc
cs
mov
hlt
aas
xchg
fs
fmull
repz
roll
xlat
pop
adc
xchg
add
dec
mov
into
rep
push
cld
jae
js
mov
mov
pop
imul
pop
add
xor
popf
pop
repz
xchg
add
or
loop
and
in
icebp
jg
adc
clc
ret
cmp
jns
loop
sbb
test
jle
in
cwtl
js
imul
mov
push
scas
or
push
dec
pop
in
repnz
jg
lds
add
icebp
xor
add
jl
mov
inc
movsl
cmp
xchg
xlat
and
testb
ljmp
pop
fwait
add
pop
pop
inc
jno
or
mov
cmp
xlat
sub
xor
sub
dec
cmp
fistps
cmp
je
shll
call
leave
or
mov
pop
loop
xchg
pusha
xor
data16
aas
sub
mov
dec
sbb
loope
test
xchg
xlat
stos
pop
xchg
mov
divl
into
gs
das
push
flds
ja
repz
dec
shl
lock
inc
test
push
xchg
repnz
jae
mov
pushf
push
mov
fs
sarl
inc
test
jp
ret
scas
inc
enter
add
pop
xchg
lds
mov
cmp
cmp
push
push
add
xor
xlat
clc
rcrb
pop
in
dec
out
test
out
cmc
scas
in
pop
aas
inc
mov
adc
push
fsubrp
jne
pop
cmp
fsubrp
sub
cltd
fadds
xor
dec
int
ror
cmp
std
sub
jmp
repnz
andb
mov
rcrl
lcall
jl
xchg
cmp
lcall
push
cmpsl
fimull
mov
sub
fiaddl
jp
pusha
nop
inc
daa
lea
pop
or
jle
xor
xor
insl
mov
ss
adcb
les
push
sbb
orl
int
aad
movsb
cmc
movsb
xor
cmp
push
push
cmp
sbb
gs
mov
xchg
bnd
test
pusha
sbb
mov
fimuls
iret
jno
cmp
stc
test
and
insl
bound
icebp
xchg
push
in
pop
shlb
jae
fistps
out
cwtl
lahf
fcompl
out
lea
aam
jg
mov
in
lahf
ret
xbegin
insb
sbb
add
je
movsb
inc
in
jo
int3
dec
ficompl
mov
lret
pop
inc
out
popa
fwait
push
xor
ljmp
and
xchg
sbb
cmpsb
or
pop
nop
rolb
clc
xor
xchg
andl
push
add
and
pop
sbb
push
adc
jae
mov
je
jno
mov
pop
inc
lcall
xchg
imul
push
icebp
pop
insl
lock
push
mov
xchg
cmpsl
inc
mov
cmp
loopne
icebp
sub
fsubrl
loop
push
scas
sub
sbb
mov
fidivs
cmp
rcrb
outsb
mov
sub
loopne
or
addr16
sbb
xchg
jnp
adc
inc
leave
out
aam
movsl
lret
push
insb
mov
loop
push
aam
movsl
bound
loopne
dec
pop
add
pop
jle
mov
or
dec
ljmp
sbb
add
test
hlt
xchg
lds
std
sbb
xor
inc
jl
cltd
sbb
cld
sahf
aas
xchg
cwtl
aad
flds
jmp
push
rclb
adc
fsubrs
data16
out
in
mov
xor
repnz
jb
cmpsl
jp
mov
nop
push
xchg
cmc
pop
insl
lds
das
and
fisubs
dec
bound
cmp
dec
popf
mov
sub
mov
call
lods
push
xlat
add
jecxz
cli
adc
push
pop
sbb
mov
fmulp
mov
aam
test
and
inc
into
push
icebp
mov
in
xor
jl
jnp
cmpsl
or
jge
sar
enter
enter
mov
out
dec
pop
sub
push
sbb
inc
addb
push
dec
in
jnp
addl
inc
push
jns
enter
loope
dec
jno
jg
jns
lods
pop
hlt
inc
test
aaa
test
dec
test
fistps
push
dec
jecxz
pop
sub
add
push
loope
negl
push
jb
sub
fidivrs
and
iret
xchg
sbb
imull
insl
ror
push
push
or
loopne
movsl
loop
aam
jo
repz
push
add
mov
cltd
jb
lahf
xor
call
jg
sub
adc
out
ds
cmpl
cmp
lret
lcall
inc
cli
cs
jmp
xor
adc
pop
add
mov
dec
xchg
test
pop
mov
adc
xlat
dec
pop
fwait
ret
stc
add
pop
pop
aad
cmpsb
es
out
sahf
or
stc
in
leave
xchg
adc
cwtl
daa
icebp
hlt
sub
insl
cmp
sub
sbb
dec
out
sub
push
mov
push
divl
mov
in
iret
lahf
add
cmp
xchg
bound
xor
scas
outsb
and
dec
imul
lods
leave
inc
jae
repnz
xor
stos
or
mov
or
dec
xchg
call
sbb
mov
aam
out
jae
add
stos
fldenv
std
lahf
pop
into
add
add
dec
lds
mov
push
out
cmp
and
in
xchg
mov
jns
enter
pop
push
push
sub
imul
pop
pop
fucomp
les
inc
pop
stos
add
and
pushf
dec
xor
dec
mov
dec
movsb
clc
xor
test
sub
xchg
push
xor
pop
sub
xchg
lret
iret
dec
popf
dec
shlb
mov
repnz
flds
mov
fsts
jno
dec
or
sti
arpl
pop
call
jecxz
aas
dec
vmwrite
pop
lods
pop
inc
std
stc
scas
loope
outsl
pusha
mov
in
int
adc
push
lods
shrb
out
xor
lcall
mov
adc
push
subb
adc
sub
stos
loop
js
leave
fcmovb
aad
in
cmp
hlt
xchg
ficomps
stos
pusha
add
icebp
in
roll
jo
pop
or
jmp
sub
rcrl
dec
icebp
testl
mov
mov
cmp
out
jae
pop
imul
ja
mov
lret
fistpl
push
ja
stos
push
cli
dec
adc
adc
es
scas
xlat
jle
rclb
mov
fsubr
outsb
xchg
hlt
mov
adc
mov
fucomi
popa
ret
fisubl
mov
mov
arpl
jo
shl
leave
popa
mov
out
ret
jne
call
jbe
andb
inc
inc
or
loope
mov
push
pushf
fwait
dec
cmpsl
mov
jecxz
mov
sar
mov
repnz
xchg
dec
mov
cmc
xchg
nop
adc
jnp
dec
and
ss
mov
adc
test
xorb
jne
push
movlps
fisttps
jnp
cs
sub
insb
cmpsb
mov
cmp
pop
cli
inc
int3
mov
push
fcmovne
in
rorl
mov
call
or
add
rcl
ds
aam
xor
lea
out
xchg
mov
add
push
xlat
pop
adc
ljmp
sbbb
mov
inc
jle
xchg
pusha
mov
rcrl
xchg
in
pop
clc
mov
xchg
icebp
adc
int3
outsl
mov
js
xor
sbb
ret
adc
pusha
addr16
adc
adc
ds
in
mov
mov
hlt
jp
fwait
cmp
shlb
sub
sub
lea
jmp
rcrb
in
mov
sbb
out
sbb
mov
popa
sarl
cld
imul
push
aad
mov
push
dec
jge
fcomps
gs
xchg
push
int3
movsl
cmpsl
adc
xor
movsb
in
les
mov
stos
push
int3
nop
mov
enter
inc
cmp
sarl
dec
xchg
in
idivb
je
mov
out
enter
push
data16
int3
rcll
loop
push
loop
loope
jmp
test
adc
push
xor
mov
mov
fcomip
mov
inc
int
rol
mov
mov
cmc
cmp
fcmovne
jecxz
inc
shll
fadds
and
dec
and
add
nop
cmp
sub
xchg
pop
imul
dec
test
lret
push
daa
popl
dec
jnp
cmp
bswap
fcomip
sti
push
and
cltd
xlat
fstpl
cmp
fwait
std
pop
pop
jmp
subb
adc
xlat
cmp
cmp
or
sub
push
sbb
lds
aaa
cmp
xor
test
cmp
xor
xchg
lret
fiaddl
add
sbb
sub
mov
scas
nop
and
lahf
imul
pop
in
push
test
mov
jle
stc
in
sbb
mov
pushf
inc
mov
pop
push
or
mov
jg
scas
dec
cmp
xchg
push
pop
test
push
hlt
and
inc
jp
out
xor
lahf
addr16
ret
arpl
adc
xor
jnp
nop
cmpsb
inc
xor
sahf
loope
mov
mov
cmp
fstpt
fwait
cmp
lods
outsb
jo
add
pop
or
pop
pusha
or
add
out
sahf
imul
pop
fadd
xor
mov
std
sti
push
loop
mov
push
test
lods
pop
test
rolb
jmp
jecxz
lds
mov
push
mov
repz
add
fwait
or
cmc
daa
xor
mov
pop
movsl
mov
js
movsb
jecxz
or
ljmp
es
mov
popa
leave
mov
jmp
jle
sahf
lcall
mov
cmpsl
jmp
movsb
cmp
push
jecxz
loope
movsb
pop
cmp
outsl
dec
ja
cmpsb
cmp
xchg
jmp
push
xor
push
pusha
fdivrs
cs
outsl
scas
mov
xchg
sub
mov
mov
in
aad
fmull
push
sbb
repz
scas
daa
push
push
arpl
or
sarb
mov
adc
xor
out
xor
sbb
mov
ds
push
mov
sub
inc
adc
daa
aaa
test
cmp
lret
and
imul
mov
out
xorb
fcoml
das
pushw
dec
scas
sbb
mov
add
inc
pop
pusha
out
mov
mov
rcrb
mov
and
jle
ljmp
sbb
sub
mov
sub
cmp
jb
cld
cmp
int
xor
movsl
mov
push
movsl
sub
orb
mov
sub
movsl
mov
lock
cmp
test
dec
fisubs
pop
repz
mov
sbb
fnsave
lcall
lcall
lods
xchg
cmpsl
test
into
adc
adc
call
outsb
addr16
iret
fucom
xor
sub
repz
inc
jbe
xlat
aad
xlat
mov
mov
outsl
push
aad
mov
cmp
in
int3
push
cmp
sbb
adc
addb
push
mov
dec
ds
mov
or
outsl
js
mov
adc
or
xchg
icebp
fst
or
je
fists
in
jb
sbb
lock
sub
leave
pusha
ficoml
and
mov
insl
mov
pop
in
push
imul
sub
repz
daa
dec
lea
nop
ret
adc
adc
jg
add
adc
mov
xor
dec
ret
repnz
sbb
dec
out
insb
andb
inc
loope
lea
or
out
outsb
inc
add
test
push
mov
dec
lock
or
xor
dec
or
scas
std
or
and
ret
jbe
adc
push
movsb
sbb
cmp
lcall
sbb
add
dec
fs
or
fmuls
jnp
pop
fdivrl
dec
and
mov
mov
in
cltd
inc
add
jbe
add
and
push
sub
mov
cld
sub
mov
and
subl
std
stc
xchg
lret
xchg
ret
xchg
and
xchg
aad
cmpsl
push
fidivl
popa
xchg
mov
outsb
xchg
sub
lahf
inc
flds
arpl
sub
mov
imul
sbb
pop
mov
push
mov
call
dec
mov
pop
es
out
jb
mov
push
nop
pop
adc
mov
mov
jecxz
cmpsb
xor
dec
xor
inc
jp
clc
out
mov
iret
negb
jae
dec
shrl
sbb
shlb
pop
enter
ds
inc
dec
mov
lds
mov
jne
push
maskmovq
testl
adc
xchg
outsl
dec
imul
xchg
mov
enter
mov
aad
icebp
imul
repnz
repnz
gs
jns
mov
mov
xchg
les
dec
repz
lahf
add
mov
add
and
popf
cltd
jno
iret
jae
cs
or
xchg
push
add
jne
out
mov
sbb
vhaddpd
lea
lret
scas
jb
fidivrl
cltd
adc
xchg
pop
pop
and
cmp
popa
push
call
sbb
mov
mov
push
mov
addr16
lahf
inc
sti
inc
and
push
loopne
mov
pop
inc
imul
xor
sbb
ucomiss
jb
cmp
sti
rclb
mov
and
xchg
scas
fisttpl
decb
je
sub
repz
aam
push
inc
stc
aas
shrl
popa
addr16
inc
jmp
sbb
imul
push
out
pushf
mov
sbb
fsubrl
pop
inc
jne,pt
ljmp
outsl
cmc
shll
in
ret
in
out
lcall
mov
outsb
scas
sti
pop
mov
mov
sbbl
add
les
mov
or
rclb
pop
stos
mov
pushl
mov
fnstenv
jb
imul
hlt
nop
xchg
add
xor
add
mov
adc
dec
cmp
out
push
inc
int
jg
mov
xor
stos
cmpsl
out
push
xor
mov
mov
or
out
test
mov
push
sarb
lret
call
xor
icebp
jb
fimuls
in
jg
pop
and
int3
test
pop
daa
ds
cmpsb
xorl
push
xlat
popa
xor
pop
data16
pop
push
or
add
notl
cmc
push
xchg
adc
jne
sbb
xor
sbb
movsl
pop
jmp
xor
mov
adc
les
testl
mov
push
imul
dec
fisubrs
mov
mov
out
and
andl
mov
call
xor
cmpsl
cmc
cmp
push
mov
dec
inc
jl
mov
sub
enter
mov
sub
jae
test
jle
rolb
inc
adc
fldcw
xor
movl
mov
stc
xor
push
mov
add
jl
inc
mov
clc
add
sbb
inc
shrl
mov
dec
or
outsl
shlb
out
mov
loopne
negl
xchg
xchg
subl
sub
push
out
mov
mov
xchg
ret
xchg
stc
repz
mov
push
iret
gs
sub
orb
mov
sti
lods
push
movsl
lahf
scas
lock
push
dec
mov
and
fidivrl
jbe
lods
lods
out
lock
pop
testb
mov
pop
stos
adc
adc
hlt
aad
pop
repnz
mov
xlat
movsl
sbb
lcall
add
insl
lret
sbb
add
sbb
mov
sub
dec
mov
test
adc
jg
popa
es
aad
add
pop
jmp
mov
ja
aad
or
ljmp
lcall
sar
sarl
mov
ja
mov
sbb
add
nop
popa
arpl
test
mov
orl
mov
mov
movsb
and
lods
xchg
insw
jl
out
test
test
cmp
xchg
popa
popa
test
xchg
aad
loope
add
sbb
inc
adc
cltd
mov
into
dec
pop
decb
inc
xchg
shlb
and
xchg
sub
and
dec
pop
sahf
mov
aam
push
cmp
cmp
ret
pop
mov
dec
fnsave
outsl
add
xor
pop
scas
mov
pop
fs
mov
inc
pusha
stos
les
mov
cltd
or
ds
add
in
push
mov
ficompl
xchg
test
sub
cmp
sahf
shll
mov
or
jbe
es
divl
or
pop
xchg
push
push
pop
jnp
push
add
sarl
cmp
or
out
xchg
dec
add
dec
popa
or
inc
into
out
lcall
imul
loope
ja
cmp
jecxz
pop
cmc
sub
push
dec
in
push
cwtl
leave
pop
sbb
mov
mov
aam
push
xor
pushf
pop
jl
xchg
dec
xchg
and
add
jmp
inc
scas
mov
popa
mov
push
sbb
out
inc
inc
dec
pop
sahf
push
adc
push
outsl
aas
dec
or
ds
insl
fcmovnu
jmp
mov
cmp
push
dec
sbb
addr16
insl
cltd
mov
ret
daa
xor
sub
lret
scas
int3
mov
pop
sbb
test
cld
dec
ds
gs
clc
cmp
sbb
mov
fistpl
sbb
adc
xor
mov
shll
in
dec
push
ficomps
cmp
lea
sbb
xchg
jbe
jo
mov
js
push
rcr
inc
inc
insl
push
jmp
push
mov
mov
test
lods
mov
inc
mov
cs
std
jle
shlb
shlb
mov
dec
mov
test
lods
mov
cmpsb
movsb
push
or
inc
imul
jnp
pop
repz
adc
sarl
sub
mov
divl
add
lahf
lea
cmpsb
sub
lds
cmpsb
lcall
jae
scas
shrb
imul
cwtl
lret
xchg
test
lock
rcr
inc
mov
arpl
hlt
jecxz
ds
rcl
xchg
fstpl
hlt
mov
mov
sub
and
mov
mov
xor
cwtl
xchg
rcll
dec
sbb
mov
cmp
or
ret
jbe
sti
pop
xor
les
loopne
insb
inc
or
adc
pop
and
mov
ret
and
jne
arpl
clc
sbb
std
xor
and
testl
mov
pushf
mov
mov
pusha
sub
and
aam
jns
int
imul
push
xchg
iret
je
lods
jbe
outsl
pop
xor
pop
int3
push
shrl
sub
xor
lret
mov
shlb
inc
and
repnz
jno
incl
dec
insl
push
and
sti
jbe
leave
and
pop
stc
push
mov
pushaw
rcr
xor
scas
sbb
push
dec
cmp
shl
xchg
pop
jp
push
dec
jmp
sub
lods
mov
xor
and
mov
sub
or
mov
inc
pop
outsb
sti
movsb
out
out
xlat
push
nop
insl
test
nop
rorl
aaa
dec
les
and
inc
scas
add
xor
push
dec
outsb
in
filds
sbb
pop
push
fwait
imul
xorl
mov
ret
call
add
cmc
mov
add
mov
stc
sub
or
sbb
jo
outsb
mov
test
inc
insb
dec
push
pop
inc
std
daa
and
repz
jnp
lock
cmpsl
sbb
lea
or
xor
xor
dec
sbb
push
and
push
mov
adc
sub
popa
pop
sub
add
cmc
fdivr
fnstenv
out
xchg
and
push
jo
aad
push
mov
mov
stos
inc
int
hlt
add
clc
xchg
and
stc
inc
in
add
bound
sub
pop
inc
mov
push
cmc
test
dec
shrb
jo
insl
loopne
jbe
push
test
xor
add
push
cli
or
pop
mov
xchg
lods
mov
cli
lcall
mov
xor
cwtl
rorb
and
cmp
push
inc
mov
cmp
pop
std
or
test
mov
xchg
fldt
fmulp
pop
aas
int3
jge
loopne
bound
dec
out
pmaddwd
cmpsl
cmc
pop
jg
cmpsl
pop
icebp
loope
test
mov
dec
call
cwtl
cmpb
call
mov
jge
movsl
call
xchg
jecxz
pop
jb
out
jp
xor
out
sub
xchg
aad
cmp
push
jl
fcompl
mov
roll
scas
and
pushf
clc
fcmovu
repnz
sub
add
push
push
cmpsb
cld
mov
rorb
out
jae
jp
test
push
or
and
aaa
rcll
cwtl
out
inc
or
clc
mov
cmp
mov
xchg
inc
mov
lea
push
mov
add
add
mov
rorb
ss
adcb
xor
inc
jbe
and
xchg
sbb
ljmp
or
pop
stc
movsl
lahf
sub
jp
cmp
push
rcrb
nop
cmpsb
or
mov
jmp
xor
cli
sbb
fisubs
push
outsl
add
cltd
out
pop
push
cwtl
in
sub
fwait
mov
or
ja
stos
out
push
lods
nop
orl
and
outsl
in
or
je
incb
int
test
loopne
pop
outsb
rclb
mov
into
lock
hlt
ss
loope
mov
lock
jo
pushf
sbb
lcall
push
mov
mov
xchg
aas
out
mov
test
mov
cmp
xor
add
dec
mov
hlt
iret
sub
mov
fs
xor
mov
sub
daa
rcrb
pusha
dec
push
jnp
inc
movsl
iret
repz
nop
xlat
or
or
xor
pop
adc
and
mov
and
mov
lahf
imul
pop
pop
mov
in
or
stos
or
pop
insb
xchg
dec
adc
jb
xchg
adc
pop
cld
sub
push
js,pt
cltd
jb
jbe
data16
loope
pushf
jge
les
push
pop
xlat
xlat
adc
push
es
mov
out
add
shlb
nop
jns
mov
in
cmp
jb
push
dec
or
jo
jle
jp
cld
rorl
notb
add
add
inc
cmp
stos
dec
pusha
xchg
lcall
and
sub
aad
mov
add
cmp
shr
push
fisttps
pop
shlb
andb
xchg
mov
shrd
push
or
xlat
out
adc
and
ret
adc
fisttpll
dec
jns
cmp
jns
cmpsl
mov
mov
loope,pn
xor
movsl
dec
cwtl
mov
cmpsb
sahf
cmp
inc
shrl
pusha
pop
mov
pusha
fs
in
scas
adc
xor
inc
xchg
cmp
cld
clc
jb
mov
loope
imul
loope
dec
mov
jae
adc
fisubrs
or
mov
shlb
hlt
ret
inc
cmp
movsb
std
mov
sar
addb
adc
hlt
mov
clc
bound
out
test
pusha
lods
xlat
and
sti
jbe
push
pop
push
or
xor
cld
pop
outsl
sbb
sbb
arpl
or
push
xor
dec
pop
mov
pop
icebp
popa
shrb
lock
and
pusha
or
fwait
ds
jo
mov
imul
into
inc
imul
jae
mov
or
add
pop
xlat
jne
mov
fwait
pusha
and
mov
ret
mov
sahf
and
mov
xchg
ret
ret
cli
add
fisttpl
mov
int3
xchg
or
rcrl
add
cmpsb
data16
pop
out
mov
lds
sbb
jno
lock
hlt
mov
cmp
jle
lods
and
sti
call
lret
movsl
leave
fnstcw
pop
pop
add
xor
mov
shll
sbb
jbe
sub
cmp
pop
fstp
dec
or
loopne
cmp
mov
sbb
mulb
adc
repz
add
mov
push
mov
push
mov
and
push
addr16
mov
pop
ficoms
das
mov
pop
sub
and
mov
cmp
mov
or
add
mov
add
test
pop
and
and
dec
xchg
clc
add
mov
lahf
dec
negb
insl
mov
lcall
stos
fwait
push
popa
dec
dec
sbb
inc
mov
aad
inc
out
adc
test
or
lcall
les
dec
loopne
ret
notb
push
mov
aas
rcrb
inc
or
or
loopne
call
scas
mov
test
shll
pop
outsl
mov
call
repz
sub
lock
int
push
push
iret
rcll
push
movsl
divl
insl
cs
add
cmp
stos
push
mov
outsb
testl
mov
divl
or
inc
shlb
repnz
and
pop
out
insb
pushf
lock
and
sbb
mov
out
mov
mov
jp
push
fwait
xor
xchg
pop
mov
orl
and
gs
push
and
lods
mov
into
sbb
push
fsts
adc
or
mov
mov
adc
loopne
sbb
xchg
add
inc
das
sbb
cwtl
add
negl
cmp
jns
or
jne
rclb
pop
add
imul
adc
insb
out
int3
insl
and
sbb
scas
mov
mov
daa
fidivl
sbb
xchg
jno
pop
pop
cmp
push
mov
jbe
mov
cmpw
dec
imul
sarb
repnz
in
adc
ja
or
imul
stos
popf
cwtl
loopne
push
ret
mov
mov
mov
addr16
aaa
stc
loopne
fsubrl
dec
inc
ljmp
mov
hlt
sbb
pop
push
pop
shlb
pop
pop
push
sbb
dec
cld
bound
rcll
mov
cwtl
daa
repz
dec
imul
push
and
lock
pop
aad
adc
out
sub
js
ret
jae
test
cmpsb
mov
mov
add
pop
fmuls
popa
fdivs
popl
jo
or
rcll
aam
jb
mov
jae
push
mov
mov
loopne
jns
test
jle
shlb
in
mov
and
stos
and
xchg
xchg
sahf
shr
jb
add
les
fmull
dec
jecxz
iret
movsl
add
adc
ljmp
loopne
cmp
pop
dec
jo
pop
in
push
in
shll
leave
nop
xor
hlt
scas
int3
nop
int3
mov
dec
mov
dec
push
sbb
fisttpll
xchg
dec
ret
sbb
pop
jno
sub
icebp
sbb
in
jae
and
fwait
inc
cs
push
dec
mov
sbb
or
lret
add
jbe
pop
sbb
mov
xlat
std
mov
shrb
out
sub
mov
jbe
cmc
fsubr
inc
jge
neg
fidivrl
sbb
aas
adc
in
jmp
inc
mov
or
cmp
or
sbb
xchg
imul
inc
xchg
mov
xor
in
cs
mov
flds
mov
xor
dec
stos
mov
inc
movsb
cmc
or
sahf
jo
jle
inc
fiaddl
or
scas
fwait
or
xchg
add
jle
fcmovnbe
shrl
or
jg
xor
mov
cmpsl
jno
movsb
cmpsl
es
mov
fwait
jecxz
push
lret
mov
or
mov
adc
mov
cmp
in
je
rcl
mov
pop
loopne
inc
stos
mov
or
loopne
jg
in
cmp
stos
jmp
cli
push
mov
repnz
lods
push
cwtl
into
cmp
sbb
loop
cmp
fildll
jbe
push
cmpsb
int3
out
cmp
cmp
lea
adc
daa
lea
jns
and
jb
mov
mov
int
cmp
int
out
jp
mull
jmp
and
jo
pop
lock
mov
mull
add
mov
cs
clc
or
mov
aad
mov
mov
aad
xor
lea
iret
mov
jle
cld
add
js
and
adc
xchg
lret
mov
rolb
fdivs
data16
mov
loope
sub
les
sub
push
in
or
pop
bound
inc
jmp
cltd
stos
js
notb
xchg
fisubrl
cmp
xchg
mov
xor
int
dec
js
psubd
add
aaa
mov
mov
hlt
sub
cmp
rcrb
call
in
mov
xchg
les
out
sub
mov
gs
test
repz
shrl
movsl
dec
and
pop
jae
cmp
mov
stos
je
mov
stc
lock
subl
lods
or
jno
outsl
jbe
fs
into
mov
imul
jecxz
sbb
jmp
xchg
rorl
roll
into
iret
pushf
xchg
orb
enter
inc
les
imul
dec
clc
fwait
mov
aas
jecxz
shlb
and
jns
xor
notb
xchg
in
testb
dec
push
mov
mov
out
mov
push
and
pop
movsl
jne
jbe
inc
inc
mov
lret
es
decb
cld
xor
jnp
scas
or
inc
inc
and
pop
jne
js
es
ret
shll
xchg
outsb
aam
and
mov
inc
mov
jb
in
leave
or
pop
inc
xor
repz
mov
and
out
leave
mov
ss
pop
jle
sub
cmc
cld
std
lods
bound
and
xchg
mov
and
push
adc
lods
add
push
add
lods
add
loope
clc
sub
xchg
fdivrl
aad
pop
divb
mov
add
xchg
xor
dec
sub
aam
inc
std
inc
pop
sbb
and
push
jno
sarl
pop
dec
mov
mov
sbb
ja
xchg
movsb
sbb
jg
push
test
push
sbb
bound
testl
inc
lods
in
mov
and
mov
mov
push
or
mov
movsb
cs
cmc
outsl
data16
fadds
bt
fsubrs
pop
jecxz
or
out
sbb
or
fidivrl
in
or
inc
xchg
lods
pop
ss
popa
adcb
stc
dec
jbe
lret
mov
xchg
imulb
cmp
movsb
into
rcl
scas
jle
jg
xor
lock
or
xor
pop
lcall
pop
leave
push
inc
int
adcb
xor
and
adc
inc
cld
add
lods
ja
lods
xchg
push
mov
ljmp
sbb
cmp
lods
sub
jns
in
ds
inc
dec
aaa
inc
mov
sub
rcrb
mov
push
aaa
mov
adc
pop
insl
push
andb
cmpsb
mov
aad
out
cmp
insl
loope
pop
xchg
mov
imulb
dec
ret
aas
stc
xchg
mov
or
sbb
clc
fmuls
scas
leave
scas
inc
stos
pop
loopne
mov
mov
mov
jae
and
insl
cmpsl
pop
xor
cwtl
pop
clc
xor
mov
pusha
or
in
iret
jg
cltd
cmpsb
ror
mov
adc
pop
arpl
or
and
or
mov
arpl
pusha
stos
gs
es
in
xchg
divl
cmc
stos
repnz
addr16
test
insb
loopne
inc
cmp
sub
pop
pushf
jle
ds
jbe
lds
push
andl
or
fidivs
sbb
or
rcll
outsl
dec
jo
pop
mov
icebp
jmp
mov
cwtl
mov
outsb
call
pop
testl
aaa
jb
repnz
adc
mov
jmp
fdiv
data16
in
stos
xor
pop
shlb
and
imul
jbe
cltd
mov
flds
push
es
jnp
ds
icebp
movsl
xor
call
mov
insb
jno
xchg
xor
sub
ficoml
imul
inc
jl
push
idivb
xchg
jnp
cmp
inc
xor
cmp
push
push
dec
sub
push
jecxz
cld
xchg
sub
and
movsb
movsl
pushf
add
mov
sarl
jmp
adc
aad
sbb
out
pushf
push
jno
cmp
inc
in
inc
mov
mov
movsl
icebp
and
dec
xorl
inc
xchg
mov
sbb
lods
mov
aad
sub
inc
fisubrl
or
shll
adc
jae
in
bnd
aas
cmp
cmp
or
je
dec
in
hlt
pop
clc
xchg
xchg
bound
adc
mov
insb
push
push
rorl
cmp
daa
sahf
or
mov
inc
cltd
lods
movb
cmp
rclb
mul
xchg
aas
push
rorb
shll
lret
shrb
cmp
sbb
sbb
jno
cwtl
call
leave
adc
sub
push
ljmp
push
pop
fsubp
jo
out
inc
das
or
in
push
test
call
icebp
test
mov
push
dec
stc
xchg
stc
inc
pop
inc
xor
cmp
cwtl
repnz
push
cmp
call
mov
scas
mov
mov
adc
mov
jg
sbb
push
outsl
ret
outsl
jbe
repnz
mov
dec
cmp
or
loopne
and
popf
jno
inc
dec
cmp
mov
in
mov
mov
mov
cmpsl
mov
std
or
popa
push
fcmovne
lods
inc
stc
mov
out
bnd
popa
sti
call
sti
jge
pusha
ljmp
lea
mov
xorb
mov
cli
cld
cmpl
lods
stos
cmp
or
lea
rorb
sub
stc
fcomps
nop
ret
cmp
les
dec
cmp
push
sbb
xchg
cli
jb
cmp
subl
shrb
jle
pop
scas
js
mov
ja
flds
and
out
mov
ljmp
sahf
ljmp
or
sub
sahf
rorb
lods
sahf
dec
in
sub
xor
jge
int
mov
int3
push
outsl
outsb
xlat
cmp
and
sbb
mov
out
xor
sub
mov
sub
lds
aad
inc
icebp
shll
cmpsb
outsl
jle
inc
dec
sub
mov
idivb
mov
or
mov
enter
inc
cltd
sti
movsb
push
arpl
es
pop
mov
adc
lret
out
cmpsl
pop
and
pop
outsb
jl
push
lds
and
rcrb
push
pop
hlt
jb
pop
mulb
jle
rcrl
cmp
pusha
push
mov
mov
call
aas
push
mov
cmp
stc
pop
dec
ljmp
inc
mov
aaa
fistps
mov
repnz
pushf
cltd
js
push
mov
popa
push
cmp
or
shlb
and
inc
fstpl
adc
mov
nop
pop
mov
jbe
jmp
stc
mov
jb
xlat
add
and
add
sbb
sbb
lods
sub
mov
das
and
insl
xor
jne
data16
adc
push
fmulp
mov
xchg
test
neg
pop
outsb
loop
lret
jge
rcr
daa
pushf
add
xchg
pop
mov
inc
scas
int
icebp
xorl
mov
das
adc
ja
and
sub
adc
sbb
bnd
sbb
movsl
sarb
add
dec
jns
outsl
jp
call
push
sbb
rol
and
sub
data16
hlt
inc
jge
daa
loop
adc
sub
arpl
xchg
inc
fisubl
rcrl
sub
push
scas
fnstsw
pop
ret
mov
rcll
xor
pop
out
add
das
nop
addr16
sbb
leave
mov
adc
and
inc
lea
popa
rorl
jmp
mov
insl
sub
push
jo
push
aas
fwait
aaa
jnp
mov
scas
cmpsl
push
adc
push
js
outsb
rclb
out
aaa
cmpsl
test
and
pop
jno
ja
or
pop
das
mov
jp
ja
mov
pop
mov
rclb
jno
lret
movsl
jne
push
cmp
in
fwait
cmp
dec
mov
aam
or
cmc
xchg
stos
push
pushf
inc
out
jl
mov
mov
dec
repz
mov
enter
sti
repz
je
orb
cwtl
smsw
int3
add
lds
cmc
movsl
sbb
insb
jp
lock
lret
jecxz
cmp
xchg
outsl
inc
imul
adc
je
pop
sbb
inc
adc
cmp
or
sbbl
cmp
adc
arpl
or
adc
ret
and
jmp
iret
cmp
cld
fmuls
mov
lea
les
scas
lock
push
xor
mov
mov
jae
mov
repnz
dec
inc
ret
divl
movsb
sub
imul
mov
xchg
dec
xchg
sbb
mov
ret
lea
push
and
inc
movsl
leave
mov
pop
flds
sub
add
lds
loopne
stos
shrb
add
sub
push
mov
arpl
mov
fs
shll
mov
pushf
adc
adc
and
and
loope
cmpsb
ljmp
mov
sub
movsb
cmp
lock
mov
add
ljmp
inc
sub
cmpsl
or
push
xor
xlat
pop
lock
stc
push
lods
std
popf
movsl
dec
jae
fs
outsl
orl
add
jae
movsb
dec
dec
add
shl
rorl
push
lds
and
adc
daa
sbb
fstpl
outsl
loopne
clc
pop
rcrl
jle
ret
icebp
aad
mov
ja
fdivs
lods
push
fs
cs
dec
imulb
mov
jge
pop
das
push
aaa
sub
jge
dec
inc
jge
or
pusha
push
psubsb
push
ret
jl
mov
xchg
lret
inc
cmpsl
jp
mov
rclb
lret
pop
xor
aam
iret
bound
hlt
es
out
iret
in
jns
push
mov
mov
jge
fcmovu
fadds
ljmp
pusha
orl
and
push
jecxz
loopne
or
lcall
ret
stc
pop
jo
xchg
ljmp
jnp
pushl
adc
push
lock
jbe
loope
sahf
jns
js
addr16
add
test
addr16
push
gs
mov
xchg
mov
mov
cmpsl
fwait
lea
dec
sub
inc
dec
sbb
notb
sbb
insl
sub
xor
and
mov
xor
mov
mov
dec
sahf
lcall
sbb
cmp
adc
bound
insb
inc
js
outsl
inc
xor
mov
je
lret
inc
mov
xchg
jnp
insl
ss
mov
sbb
gs
jecxz
add
lods
and
cmp
leave
out
mov
cltd
stos
outsl
insb
or
push
cmp
or
test
test
adc
push
inc
fildl
movsl
sbb
pop
mov
xor
les
dec
cmc
add
int3
and
fidivrs
xchg
xchg
mov
mov
jle
jne
shrl
aad
or
inc
pushf
jle
sub
repnz
or
mov
lcall
push
xchg
dec
out
fadds
add
inc
mov
fmuls
std
jns
add
test
mov
dec
add
jge
jge
mov
call
mov
mov
fwait
daa
and
inc
fucomip
pop
push
mov
jnp
outsl
xor
bound
xchg
add
sub
js
gs
leave
imul
sub
and
mov
popa
iret
call
rorb
insl
pop
jns
mov
icebp
leave
out
cs
jmp
xchg
and
inc
pop
sbb
aas
or
bswap
out
repnz
cmpsl
and
enter
test
sub
xchg
repnz
pop
xchg
jb
enter
pop
fcmovbe
xchg
ljmp
push
lds
les
jo
or
pop
data16
dec
clc
gs
popf
pop
mov
mov
std
mov
icebp
xor
lcallw
test
enter
shl
out
cmp
inc
shlb
iret
cmp
ljmp
lds
pushf
divl
imul
cmp
jge
push
jne
cmp
scas
adc
push
insl
fstps
call
ret
adc
and
adc
fnsave
pop
das
pop
mov
bound
negb
mov
aaa
or
mov
xchg
fsub
pop
js
mov
outsl
adc
mov
rclb
in
dec
cmp
test
movsl
inc
jae
imul
sub
fistps
loopne
std
mov
jp
inc
imulb
movsl
mov
jo
sbb
cs
stos
xchg
movsl
roll
aam
ljmp
shll
cmp
jb
xor
cmp
or
outsb
rcrl
mov
cmp
and
and
xor
dec
xor
or
mov
cmp
lods
lcall
jp
cs
inc
loope
mov
dec
testl
jecxz
int3
sub
js
loopne
sub
mov
sub
inc
ret
mov
push
jbe
add
sub
mov
dec
sbb
mov
dec
out
inc
sub
mov
fnsave
jg
add
sti
pushl
cltd
rolb
adcl
and
ja,pn
gs
insb
aam
lea
sub
stos
fldt
inc
dec
jne
and
imul
in
lods
mov
cmp
lock
push
lcall
and
xchg
jns
inc
pop
and
mov
test
aaa
pop
cmpsl
xchg
cs
mov
outsb
xor
mov
jnp
mov
or
ret
imul
daa
jns
and
xchg
sbb
ja
push
jge
mov
cmp
xor
fsts
dec
push
cmp
ss
jecxz
push
stc
add
sahf
pop
mov
sbbb
aam
mov
push
rcr
xor
sub
adc
xchg
int3
lcall
xchg
pop
rorb
js
push
mov
or
jnp
mov
bound
push
jp
mov
mov
out
ret
roll
mov
outsl
arpl
je,pn
pop
lret
sbb
in
mov
in
aam
push
outsb
push
xchg
xor
in
sahf
add
and
adc
push
push
ljmp
pop
pusha
inc
add
lock
cltd
pop
test
sbb
jae
sti
scas
adc
out
je
xor
jns
test
xor
lret
xchg
hlt
cmp
sub
mov
or
adc
adc
mov
mov
xor
lods
push
dec
jl
or
cmp
cmp
dec
xor
int3
and
cmp
xorl
cld
mov
push
jbe
test
sbb
mov
sbb
lahf
mov
and
repnz
add
lret
mov
cmp
and
inc
mov
xchg
and
jle
or
jnp
lods
mov
lret
mov
ret
pusha
lods
xchg
into
repnz
fwait
mov
sub
inc
enter
adc
les
pushf
lcall
dec
xor
dec
movsb
icebp
fidivs
fsubr
mov
sbb
or
sbb
bound
gs
aad
popa
mov
lahf
sbb
in
dec
and
shrb
sbb
leave
cmp
mov
inc
aaa
inc
mov
sahf
add
outsl
xchg
stc
shlb
xchg
pop
aaa
cmpsb
xchg
dec
push
inc
repz
decw
inc
inc
cmpl
aas
add
jl
push
out
cs
push
xor
jge
loopne
sbb
jl
in
loopne
nop
fsubs
mov
jp
fistpll
add
rorb
jo
mov
push
int
add
xchg
mov
jno
shrb
ljmp
push
cmc
je
xor
aas
idiv
xchg
loopne
push
sbb
mov
or
and
sub
in
and
pop
mov
pop
pusha
sti
sub
cmp
jg
mov
paddsb
fsts
pushf
mov
out
leave
jae
dec
movzbl
cmpsb
adc
push
jmp
loopne
dec
and
push
adc
cld
xchg
mov
mov
je
jb
mov
imul
lea
mov
data16
jmp
dec
idiv
incb
jg
in
mov
cmp
out
jbe
addl
cmp
insb
lock
or
outsl
add
in
push
mov
and
cmp
cmp
inc
repnz
shlb
bound
adc
mulb
and
sarb
inc
fisubrl
sub
ret
adc
sbb
fmul
push
mov
test
inc
enter
xchg
pop
and
popa
shlb
imul
ljmp
mov
loop
jns
mull
dec
addr16
movsl
mov
jns
outsb
sbb
mov
dec
push
movsb
lret
mov
sub
jae
lea
rcr
daa
gs
mov
mov
mov
bound
enter
push
mull
ds
sub
mov
pop
les
outsl
inc
jmp
and
leave
rorb
pop
push
lret
cwtl
adc
mov
mov
adc
xchg
inc
neg
fs
jle
mov
sub
sbb
jecxz
jbe
jo
adc
mov
mov
arpl
pusha
mov
sub
imul
ret
out
fisubs
shll
lea
or
sub
pop
inc
rol
fnstsw
imul
xor
mov
cmp
pop
add
sub
sbb
lret
sbb
popa
pop
es
ljmp
std
inc
mov
pop
outsb
jl
js
mov
cwtl
les
or
mov
xchg
cmp
in
and
into
inc
push
lds
push
jp
in
dec
in
loope
aaa
das
rcl
xchg
xor
sub
test
and
push
or
pop
arpl
push
jge
mov
dec
push
pop
pusha
jnp
int3
jno
ret
outsl
decb
dec
cli
mov
int
sbb
dec
jne
or
or
jnp
ret
enter
mov
pop
rorb
push
jmp
mov
xchg
mov
adc
clc
jnp
mov
jecxz
pushf
sub
adc
mov
mov
inc
lcall
call
sub
jnp
sti
aaa
clc
sti
pushf
sub
andl
outsb
lock
fmuls
out
fistpl
inc
setle
clc
jbe
adc
and
add
inc
outsl
rcl
pop
inc
lods
leave
pop
pop
mov
aaa
dec
inc
int3
mov
jl
ss
idiv
pop
test
int
jg
push
inc
inc
and
push
xor
je
xchg
testl
shlb
xchg
push
mov
test
push
loope
xor
rorb
js
add
popf
jno
test
cmpsl
mov
rcl
sbb
mov
lds
push
mov
jae
lea
pop
std
push
or
out
movsb
xor
push
pop
arpl
mov
mov
aas
jmp
and
adc
out
test
jno
pushf
sub
fists
pop
or
mov
push
mov
xlat
jae
jo
sahf
inc
sbb
test
inc
lds
jno
or
mov
dec
mov
mov
sub
xor
mov
sbb
mov
push
mov
sub
xchg
sbb
xor
fwait
and
dec
xlat
mov
mov
std
jno
sbb
stos
xchg
int
push
in
rcl
sub
aas
mov
out
mov
dec
push
mov
sbb
loope
and
mov
es
ja
cmp
shl
shll
imul
jnp
mov
dec
jge
fadds
xlat
mov
add
cmpsl
out
insb
sub
xor
popa
add
pop
mov
incb
dec
flds
std
faddl
and
dec
lock
mov
dec
rorb
lds
xor
or
push
inc
lds
std
dec
pop
inc
xchg
push
shlb
or
cmpsl
rcll
jl
aad
out
fs
pop
jge
push
aad
mov
insb
and
enter
xchg
xchg
xchg
shll
js
ret
addr16
std
xchg
int3
int3
call
add
mov
mov
fldenv
xchg
push
lock
inc
jnp
movsl
or
dec
cmp
in
xlat
test
mov
rorl
mov
jg
pop
pop
or
mov
and
sbb
mov
or
jge
xchg
push
ss
loop
xlat
xchg
scas
loop
jnp
dec
in
lds
shrl
push
sbb
popl
aas
sbb
push
xor
jge
lahf
cmpsl
movups
mov
addl
into
and
leave
imul
mov
arpl
mov
fisubrs
enter
arpl
aaa
adc
ljmp
mov
ret
jbe
xchg
and
pop
repnz
xor
pusha
mov
xlat
xor
add
aad
lcall
fsubl
in
sahf
pop
out
inc
xorb
adc
in
jle
scas
addr16
cmp
lret
jl
in
mov
inc
mov
data16
icebp
cltd
pop
and
lds
scas
clc
or
stos
mov
call
in
sub
int
ljmp
aaa
sti
push
jo
cmp
jl
out
push
mov
inc
dec
pusha
dec
scas
lods
rol
jecxz
fs
and
mov
hlt
or
lcall
and
test
mov
das
mov
and
test
lret
sbb
xchg
inc
cltd
pop
cs
out
mov
mov
and
pop
lret
rcrb
test
pushf
or
adc
jl
mov
int
in
push
lret
movb
stos
test
cmp
xchg
rolb
popa
push
cmpsb
xor
test
mov
lcall
lods
insb
mov
fcoml
dec
adc
adc
push
mov
mov
movsl
std
push
pop
loop
dec
bound
lock
cmpsb
push
push
mov
dec
imul
adc
sub
pop
lret
lahf
fucomp
rolb
insb
cwtl
dec
dec
inc
cltd
jnp
cmc
sbb
lods
add
sub
bnd
mov
cmp
cmp
repz
push
icebp
mov
ja
mov
enter
lret
jno
sub
dec
addr16
jge
insl
cwtl
mov
outsl
jnp
imul
jb
jne
leave
inc
inc
or
out
cmc
dec
and
inc
repz
mov
fadds
fld
inc
xchg
lss
jbe
inc
out
pop
or
imul
stos
mov
dec
jne
scas
and
outsl
xor
and
cmp
pop
xor
fisttpl
in
xchg
aaa
jecxz
dec
xor
and
mov
mov
imul
fwait
jg
lods
cmc
sub
lahf
pusha
pop
and
push
xor
dec
sbb
mov
aaa
pop
mov
push
cmpsl
subb
sti
imul
popf
jbe
push
aam
jl
pop
jnp
push
push
rcll
in
je
in
sbb
and
sbb
repnz
mov
sbb
jmp
sbb
sbb
mov
lea
pop
push
test
out
subb
aad
mov
std
push
pop
inc
fnstcw
stos
xor
ds
push
dec
out
ficompl
xorl
popf
ljmp
mov
inc
fdivs
push
jns
aas
jmp
mov
dec
out
pop
fdivs
jmp
fwait
jb
fbstp
adc
sub
mov
cltd
out
loope
sbb
mov
cmpsb
aam
inc
mov
sbb
sub
mov
imul
mov
lock
jp
push
jmp
dec
out
and
movsl
sti
push
movsb
or
or
aaa
loopne
fisttpl
ds
push
mov
sub
gs
jnp
cmp
lret
loopne
test
cmp
sbb
or
mov
dec
push
push
cltd
lds
push
into
fistpll
incl
ret
aaa
cmp
or
mov
lock
cmp
push
or
int
stc
fwait
mov
jbe
mov
sarb
mov
jo
cs
hlt
cmp
nop
rorl
popf
lods
in
gs
mov
xor
lret
sub
and
jg
and
ret
mov
jno
scas
pop
push
cmp
icebp
insl
jecxz
out
ja
and
push
jge
pop
adc
mov
sub
xor
lahf
mov
mul
inc
mov
jmp
push
fsubrs
ret
mov
mov
cmpb
in
ss
jg
inc
pop
lret
into
sub
shl
mov
adc
push
and
sub
stos
push
xchg
pop
fstl
icebp
jge
inc
sub
dec
fsubrs
sti
mov
jg
and
jg
add
mov
imul
mov
sahf
mov
push
sarb
add
xor
push
and
ljmp
stc
xor
add
arpl
xchg
in
xor
subb
cmp
inc
and
scas
jmp
xorb
xchg
or
out
cli
test
sbbb
xor
shrl
cs
xor
es
xchg
hlt
push
push
and
popa
mov
sbb
pusha
cmp
iret
xchg
pushf
mov
call
add
retw
stos
je
out
bound
adc
jno
lea
pop
ds
add
aaa
out
pop
dec
mov
bound
stc
popf
imul
shll
fwait
dec
jg
pop
push
pop
in
popfw
mov
int
cli
js
xor
xor
push
arpl
xchg
jbe
into
push
or
shll
ret
icebp
sbb
inc
mov
fwait
and
cmc
lahf
adc
rcrl
pop
push
mulb
mov
or
pusha
inc
cmc
adc
mov
mov
xchg
movsl
dec
orb
aaa
or
and
jl
cmp
cmp
xchg
cmp
and
add
ja
jb
jo
mov
or
fidivrl
aad
mov
int
xchg
subb
mov
ljmp
push
js
mov
hlt
push
push
cmpsb
fwait
xchg
mov
stos
push
stc
call
repz
xor
ljmp
fidivl
addr16
jno
cli
pop
pop
or
into
les
sub
inc
jmp
adc
pop
stos
sti
mov
add
inc
cmp
add
js
push
bound
adc
shll
lcall
fwait
pop
xchg
mov
xor
mov
add
shll
lret
and
jg
js
aad
aad
jp
push
mov
js
bswap
push
mov
mov
sarb
sbb
cmc
dec
rorl
cwtl
aas
loop
xchg
loopne
scas
inc
cmpsb
insb
mov
ja
lods
lods
mov
dec
dec
and
incl
loopne
outsl
ljmp
movsl
xchg
gs
inc
dec
or
out
xor
ret
lea
addr16
cmc
xchg
loop
jg
daa
or
jo
push
lods
add
int3
imul
fsubrl
inc
jmp
jno
xor
fidivrl
lahf
je
aad
insl
add
loop
xor
and
mov
xlat
sbb
dec
pop
push
out
jp
add
cmp
inc
push
mov
add
add
or
sub
xor
jg
repnz
jne
dec
mov
cltd
mov
dec
daa
popa
test
and
add
sub
je
scas
inc
repnz
mov
jo
popf
loopne
loopne
jne
and
fstpl
mov
mov
jl
in
test
sub
jae
fwait
adc
sahf
lret
inc
push
mov
inc
ss
dec
xchg
push
cmpsl
sbb
adc
push
cmpb
stc
fimull
aas
add
ror
repz
cmpsb
xchg
test
enter
dec
cwtl
mov
push
icebp
inc
mov
push
or
inc
cltd
fwait
xchg
mov
dec
leave
mov
push
neg
loopne
iret
add
in
mov
jle
ja
lods
pop
inc
aam
int
dec
lock
ror
call
or
jg
add
cli
xchg
shlb
sbb
fnstcw
je
jne
mov
loopne
icebp
adc
ret
int3
shrl
mov
into
jg
cmpb
ret
sbb
lret
rcrb
push
push
pop
xchg
add
test
mov
push
cli
aaa
or
xor
pop
out
test
into
enter
jle
std
mov
mov
imul
fimull
push
sti
jmp
inc
and
shll
pushf
lods
lock
or
push
push
cmc
cmp
js
or
popa
int3
push
dec
xor
jl
mov
mov
test
mov
mov
addb
add
pop
cmp
adc
iret
cmp
nop
mov
and
lock
xor
inc
lret
sub
aam
pcmpgtb
loopne
or
ret
sbb
or
iret
aaa
rcrl
addr16
loop
in
push
arpl
mov
fnstsw
adc
pop
inc
sbb
jg
dec
mov
test
stc
sbb
or
repz
cmp
negl
cltd
push
inc
add
daa
xorl
mov
sarl
pop
mov
sub
mov
insb
out
aam
adc
add
cmp
imull
and
lret
roll
xlat
cmp
adc
leave
fs
lea
pop
das
adc
xlat
dec
push
xorps
ret
push
push
xchg
and
mov
push
jae
nop
or
push
pushf
cmp
push
into
aas
inc
xchg
stos
gs
iret
push
push
mov
sbb
jbe
push
shll
mov
sbbb
loop
test
int3
dec
xchg
pop
pop
xchg
push
sbb
lock
jl
cmp
out
xor
add
push
sbb
sub
push
iret
jecxz
xchg
xlat
je
adc
xlat
dec
sbb
dec
bound
popf
sbb
arpl
andb
push
mov
arpl
aad
mov
inc
insl
jle
cmp
push
cmpsl
sti
dec
and
dec
std
mov
pop
fwait
pop
aad
test
inc
sub
arpl
sbb
jle
sbb
push
insl
pushf
lock
push
sbb
pop
or
icebp
inc
sbb
fsubrl
mov
lock
ljmp
push
stos
fs
movsb
xor
mov
mov
or
test
jb
int3
int3
popf
int
std
popa
iret
fimull
lahf
sbb
push
and
add
nop
xlat
cmp
sbb
lahf
lea
fwait
dec
pop
sbb
cmc
scas
notl
in
insb
pusha
lods
and
jae
gs
je
xor
mov
or
adc
xor
cmc
sbb
jle
xchg
cmp
sbb
mov
in
std
lcall
push
aaa
pop
jnp
int
jnp
jns
and
jno
mov
jae
imul
inc
push
or
adc
popf
xchg
test
xchg
aad
jmp
push
ror
sar
mov
icebp
pusha
sahf
jns
add
sbb
xchg
jne
mov
js
jae
xchg
adc
lret
sub
xchg
adc
test
cmp
js
add
and
mov
pop
and
fisttpl
lods
mov
mov
lret
ja
pop
cld
xchg
cwtl
gs
int3
inc
sub
and
jp
fdivs
jns
cmp
ja
ss
icebp
sbbl
data16
pop
sub
sbb
repnz
or
push
mov
dec
jecxz
pop
push
dec
lea
mov
or
fwait
inc
sub
xchg
dec
and
or
push
push
sub
sbb
sbbb
scas
push
adc
scas
outsl
fucom
notl
and
jecxz
mov
imul
lock
push
xchg
mov
clc
ret
jb
jbe
inc
in
or
mov
jbe
sub
jecxz
imul
sbb
mov
mov
loope
add
or
icebp
mov
sub
nop
xchg
ja
push
bound
jns
jne
jmp
inc
cmp
sub
mov
mov
push
mov
or
mov
mov
pop
lcall
mov
inc
sbb
mov
fsubl
mov
mov
mov
xlat
adc
jnp
leave
pusha
fwait
mov
out
aaa
or
jnp
xor
cmp
adc
push
stos
jp
lods
fildl
cmp
or
xchg
pop
repz
mov
cmp
imul
cmp
lcall
pop
xor
ficomps
jp
dec
int
dec
xchg
jecxz
repz
or
int
and
insl
mov
xor
pop
mov
rcl
adc
in
jmp
mov
push
aam
dec
pop
fsincos
sub
mov
xorb
in
stos
push
nop
jecxz
iret
sub
ficomps
es
add
popf
dec
ljmp
fldcw
lock
orl
push
inc
fsubrs
and
loopne
popa
cltd
std
jge
scas
mov
sbb
sub
fistpll
dec
movsb
add
shrl
arpl
test
xchg
nop
stc
nop
ret
call
aaa
pop
jb
sub
and
jmp
rorl
and
fnstcw
lock
mov
cld
jb
cli
mov
les
rcrl
xor
add
xchg
rcl
xchg
cwtl
and
adc
imul
loopne
inc
pop
fwait
pushf
cmp
pop
xchg
mov
mov
adc
inc
jmp
out
xor
lea
lock
cli
jp
into
jl
push
add
data16
lret
les
sub
aas
or
pop
xchg
ds
daa
std
test
push
mov
repnz
or
outsl
ja,pn
andl
insb
adc
int
insl
popf
hlt
into
ljmp
mov
mov
or
fsubr
incb
or
dec
mov
mov
rolb
gs
pop
imull
mov
xchg
pusha
mov
lock
jo
ja
add
dec
jmp
and
test
xor
xor
lock
loope
xor
cwtl
rcrb
jg
and
or
jp
xchg
jp
lock
inc
add
or
dec
cltd
lea
mov
aad
leave
adc
and
out
negl
scas
loopne
int
fs
or
xchg
and
imul
scas
aam
cltd
sbb
pusha
adc
cmp
gs
cltd
ss
nop
insb
pop
mov
jno
leave
pop
lock
cli
xchg
mov
call
or
mov
outsl
mov
jbe
fcomp
aas
push
push
mov
leave
fidivrl
sbb
imul
add
in
push
pop
inc
outsl
scas
out
in
ljmp
add
pop
ljmp
enter
mov
test
cmc
jg
lcall
jne
pushf
pushf
sub
jmp
sbb
bound
lock
stos
push
cmp
fs
xor
aas
sbb
daa
push
fbstp
jmp
push
adc
xor
lcall
sbb
jbe
sbbb
add
mov
cmp
and
or
lea
cwtl
enter
sub
jecxz
sub
mov
mov
scas
mov
cmpsb
loope
sbbb
bound
cmp
stc
pop
dec
push
push
push
inc
addr16
in
adcl
fisttps
xor
outsl
scas
xor
add
xor
jmp
pop
mov
jno
jb
imul
loop
cmp
sub
xchg
push
pusha
fists
add
jge
inc
movsb
int
dec
in
jle
mov
mov
daa
fcoms
and
or
popa
les
ficoms
fsubrs
std
xor
and
sbb
jb
clc
xchg
mov
mov
cvtdq2ps
adc
insl
scas
pop
mov
arpl
das
push
adc
jg
mov
mov
ja
add
stc
daa
cmp
mov
in
sahf
jecxz
movsl
mov
arpl
js
cld
arpl
inc
inc
sahf
test
dec
das
xor
cwtl
mov
dec
bound
jle
cmp
mov
xchg
lret
and
pop
and
movsb
push
je
leave
dec
aam
aam
dec
push
xchg
cmp
mov
arpl
cmp
add
mov
mov
ja
jle
rcrb
mov
jp
mov
outsb
xor
iret
and
pop
or
sbb
mov
or
mov
sbb
sbb
xchg
lods
dec
cmpsl
insb
mov
mov
inc
arpl
mov
inc
test
push
pop
inc
inc
xchg
add
pop
push
mov
and
inc
cmp
and
mov
jo
ror
push
push
mov
xchg
outsb
insl
mov
cs
xor
mov
mov
push
lock
mov
mov
jl
and
xchg
inc
pop
sarb
jle
mov
push
jne
stos
test
or
clc
pop
dec
add
jle
into
into
adc
add
lcall
cmp
dec
push
sti
lret
pusha
jno
fildl
push
call
xchg
inc
shll
push
sub
dec
ss
ja
andb
daa
mov
adc
fldenv
xor
repz
mov
dec
and
nop
add
inc
loop
cmp
out
pop
pop
ror
sub
divl
inc
sti
mov
fwait
sub
das
mov
pop
cmpsb
mov
jmp
lods
jnp
xlat
jle
adc
and
stc
inc
loope
lea
inc
or
ret
out
mov
adc
rcrb
sbbb
adc
and
bnd
and
jle
enter
cli
jne
and
push
iret
int
outsb
rclb
cmp
fstps
adc
fcom
or
push
add
push
aas
xchg
and
add
outsl
dec
jne
xor
sarb
dec
movsl
movsb
cmpsl
adc
test
adc
sub
xor
add
lcall
ljmp
pop
in
adc
and
mul
shrb
lcall
pop
cmp
sub
imul
fucomip
mov
mov
xlat
shrl
je
jle
and
stc
dec
cmp
mov
vxorps
fistl
jp
pop
int
inc
daa
mov
or
xchg
lret
xchg
sbb
mov
or
dec
add
cwtl
out
popa
cmpsl
sbb
aad
jnp
lcall
ret
mov
cmp
mov
lea
loopne
aaa
fsubr
or
loopne
sub
pusha
test
jb
std
rolb
mov
add
adc
fisttpll
icebp
negl
test
movsl
xchg
pop
jnp
pop
je
mov
icebp
xor
mov
clc
pop
jbe
dec
test
orl
inc
cmpsl
aas
js
dec
std
or
sbbl
jae
repnz
jne
sub
adc
jne
mov
pop
out
sbbb
add
movsl
sti
sub
add
idivb
leave
add
add
jmp
aaa
push
test
fisttpll
int
push
imul
cli
add
jecxz
jo
sub
push
dec
pop
pushf
andb
pop
jmp
pop
and
or
stos
lods
negb
int3
call
sub
stc
add
add
or
mov
lret
lahf
pusha
dec
in
es
pcmpgtw
cmpsb
inc
int3
sar
lret
jl
cmp
insb
lret
jg
je
hlt
pushf
jle
jg
imul
movsl
mov
hlt
push
xor
pop
sbb
cmp
bound
orb
pop
sarb
mov
in
pop
sub
mov
stos
mov
gs
and
stos
push
push
test
inc
jo
push
cltd
loopne
push
jno
pop
dec
mov
lock
mov
lret
lret
ret
lds
inc
mov
test
out
mov
cmp
das
mov
into
sarb
loopne
clc
fidivs
sbb
or
scas
and
shl
cmp
lea
das
std
icebp
or
loope
pop
inc
ret
cmp
jne
add
shlb
jle
rclb
sub
jnp
in
mov
inc
cmp
cmp
ja
pop
stc
stc
mov
jl
int3
xorb
adc
jnp
fwait
ret
or
insb
mov
mov
push
xchg
jl
inc
repnz
mov
shlb
add
shrb
les
pop
cmp
loope
inc
xchg
sbb
fbld
xorl
sub
sub
idiv
sbb
loopne
inc
jo
jle
pop
sub
scas
xchg
add
inc
in
loopne
fwait
in
hlt
and
mov
adc
lahf
mov
cmp
pusha
or
lcall
mov
mov
popa
adc
cmp
repz
sub
leave
cmc
mov
pushf
lcall
push
dec
xor
mov
mov
std
fs
lock
mov
cmpsl
pop
and
cmc
js
mov
dec
lret
aas
sub
mov
adc
inc
push
cmp
stos
jmp
dec
pop
and
xchg
pop
out
das
fimull
icebp
jecxz
jno
fwait
cwtl
or
addr16
insl
es
ret
mov
mov
sbbl
jg
imul
stos
je
lret
adc
jne
stos
rcr
sti
ljmp
lret
add
or
and
sbb
push
or
pop
clc
and
out
xchg
sahf
add
sbbb
mov
pushf
stos
mov
dec
xor
jle
aas
fildll
adc
mov
pop
loop
lret
mov
push
pop
and
push
stos
fsubl
add
mov
mov
cwtl
cmpsl
sahf
ret
cmpsb
push
pop
xlat
mov
shlb
push
xchg
and
pop
pushf
add
jo
cltd
in
ds
ljmp
adc
rcrl
add
adc
jp
out
jo
mov
lret
outsb
push
leave
sub
andl
and
adc
enter
les
push
in
or
int3
addr16
into
or
xchg
popa
jno
dec
lods
scas
leave
inc
pop
negb
xchg
loopne
out
idivb
loope
sbbl
mov
fcmovnu
push
or
jmp
or
adc
push
cmp
fcmovu
mov
fwait
imul
iret
inc
xlat
insl
mov
hlt
push
sbb
mov
mov
inc
jb
pop
dec
out
add
xor
ror
sub
jbe
dec
sbb
daa
insl
sub
addl
jl
cmp
lret
outsb
xor
cmp
lahf
les
dec
scas
roll
and
and
clc
fs
mov
push
or
lock
and
mov
out
adc
gs
cmp
inc
and
mov
xor
imul
pop
dec
dec
aad
hlt
in
ret
pop
mov
push
cmp
into
repz
sahf
push
pop
add
and
iret
lea
lcall
fldcw
pop
jl
add
pop
sbbl
mov
mov
xchg
mov
push
xor
cmp
arpl
dec
sti
shl
stc
test
in
add
notrack
outsb
idivb
inc
mov
mov
xchg
ljmp
aaa
adc
mov
into
fisubrs
jb
dec
dec
jo
rcll
cmp
inc
pop
cwtl
jmp
dec
or
cs
dec
inc
lret
pop
inc
and
inc
xchg
xchg
mov
mov
mov
fsts
es
out
pop
hlt
popf
push
pop
jecxz
test
and
loopne
scas
mov
je
jg
xchg
jp
and
or
cmp
inc
sbb
fisttpl
inc
sub
xchg
iret
bound
sub
and
or
jne
lret
inc
insb
xchg
inc
add
dec
xor
sbb
cmc
mov
out
mov
add
lcall
outsl
or
cs
or
mov
movsl
jne
ret
push
adc
test
push
and
inc
ss
aad
dec
xor
mov
pusha
sub
pop
xor
clc
pop
add
arpl
dec
mov
or
jmp
nop
mov
mov
adc
xchg
jns
dec
dec
inc
jmp
decl
inc
les
sub
jle
das
inc
cmp
inc
nop
es
mov
mov
adc
cmc
adc
sbb
scas
and
sub
dec
movb
sub
jg
in
addr16
ret
movsl
fnsave
xchg
mov
icebp
and
lock
jge
inc
cmp
sub
pushf
inc
loop
xchg
call
pusha
inc
roll
imul
dec
or
cmp
inc
test
mov
or
mov
push
adc
aas
xlat
addr16
xchg
pushf
incb
push
jns
loope
sbb
loope
add
rcrl
jnp
push
fstpl
or
into
mov
test
adc
jecxz
ret
sar
jecxz
lods
dec
and
mov
lea
lahf
cmp
jae
data16
mov
inc
cmp
jae
not
fnstenv
add
enter
fbstp
push
pop
mov
xchg
lock
data16
mov
insb
shl
imul
ds
push
sbb
mov
cltd
inc
dec
mov
xor
lds
arpl
add
pop
sub
dec
js
cmp
sahf
mov
push
sub
ss
push
xor
mov
or
jl
call
mov
mov
jl
pop
stos
inc
and
test
sbb
mov
hlt
push
add
mov
nopl
sbb
mov
sti
push
cmp
test
insb
mov
int
mov
lock
cltd
repnz
adc
sub
mov
push
mov
icebp
pop
jp
loopne
xchg
mov
mov
cli
test
mov
ret
mov
fdivrp
sub
dec
daa
jnp
lcall
push
and
scas
pop
push
jnp
add
out
cmp
fs
insl
dec
xor
aaa
cmpsb
mov
insb
push
mov
fcoms
and
imul
rcl
ror
xlat
push
cmp
xchg
push
adc
inc
enter
inc
data16
std
push
jb
sub
jl
popf
adc
pop
out
mov
mov
fld
adc
rorb
jmp
mov
add
mov
orb
ja
jne
stc
jmp
add
lret
test
into
adc
mov
mov
inc
scas
imul
insb
sbb
loopne
fdivp
dec
loope
les
fcomi
push
stos
jmp
pushf
clc
loopne
dec
call
mov
mov
cmp
mov
sbb
sub
fs
xchg
push
sub
js
mov
and
mov
adc
hlt
fstpl
sti
sbb
in
dec
inc
mov
push
and
andl
lock
ss
insb
pop
or
adc
fisubrs
gs
lahf
pop
mov
or
shll
fwait
jg
inc
cmpsw
mov
inc
pop
inc
inc
or
mov
sbb
mov
pop
das
cli
add
sub
and
mov
gs
loope
or
out
fs
arpl
and
sub
sbb
cmovge
sbb
ds
cmp
mov
movb
leave
push
insb
dec
mov
inc
xor
dec
push
jns
lahf
add
cmp
xchg
mov
jge
cmp
jmp
lea
mov
data16
dec
push
mov
rolb
fstpt
xor
ret
das
or
test
cmp
mov
xor
arpl
push
jbe
mov
jns
add
das
mov
les
mov
adc
mov
push
ljmp
rclb
icebp
subb
in
imul
dec
daa
xchg
jecxz
cltd
sub
and
cltd
mov
insl
ficoml
ret
push
ret
sub
cmpsl
inc
js
xchg
jb
aas
cltd
int
movsb
xchg
fwait
push
in
call
jp
in
imul
mov
ds
lods
jmp
ja
cmp
inc
lods
dec
mov
add
pop
xchg
cmpsb
lods
dec
arpl
mov
mov
xchg
inc
sti
pop
cld
mov
std
out
pusha
jbe
dec
in
dec
mov
test
pop
ret
jbe
jne
dec
mov
sahf
sti
dec
cmc
addl
pop
shr
or
and
sub
ja
cmp
xchg
leave
jecxz
xchg
cmp
les
ret
testl
test
mov
inc
pop
insb
mov
xor
xchg
xchg
dec
popa
int3
push
subb
mov
ljmp
outsl
push
inc
cmc
arpl
adc
adc
mov
add
mov
adc
fldcw
push
jmp
xor
cmpl
testb
push
lret
cs
jae
scas
xchg
out
xor
call
jo
mov
mov
andl
mov
mov
sub
fcmovb
sahf
or
sub
mov
sub
mov
fwait
or
pop
jb,pt
dec
jnp
add
into
lcall
lods
xchg
push
mov
call
das
dec
ret
jbe
jns
xor
push
fld
pop
jl
or
add
ds
xor
mov
dec
jae
cs
sbb
xchg
lock
pop
fxch
mov
push
outsb
xchg
jo
push
push
test
xchg
xor
mov
das
xorb
stos
fisubs
iret
stos
rcll
sbbb
push
push
sbb
inc
pop
jns
call
and
in
push
scas
inc
push
add
mov
inc
mov
dec
or
sbb
loop
sub
int3
arpl
ret
dec
and
inc
mov
imul
movsl
bound
add
jl
cli
in
adc
into
es
cltd
inc
std
jp
stos
sub
mov
cs
mov
mov
push
imul
iret
xchg
sbb
pop
in
or
cmp
and
mov
lret
push
mov
jecxz,pn
mov
insl
rorb
mov
ljmp
fldt
sub
lcall
aas
sbb
adc
sarb
xor
loopne
inc
dec
int
rolb
mov
xchg
dec
push
and
mov
pop
mov
cmc
rcll
scas
outsb
push
dec
fldcw
xor
outsl
pop
jg
in
fs
fistps
jo
jnp
ljmp
repnz
enter
call
mov
mov
jne
outsb
jbe
jns
and
mov
fimuls
mov
inc
cmp
push
and
out
lds
or
bound
fwait
in
jmp
aaa
mov
mov
push
mov
aam
mov
orl
sbb
int3
or
pinsrw
outsb
cltd
xchg
pop
dec
popf
inc
pop
sbb
iret
arpl
sarl
jl
dec
pusha
les
jb
xchg
cld
cmp
in
dec
rcr
addr16
mov
jge
insb
in
ret
outsl
loopne
or
rcrl
les
mov
outsl
cmp
xor
jl
xchg
pop
sub
daa
es
repnz
mov
xorb
adcb
or
sbb
adc
jle
add
mov
sbb
inc
fimuls
lods
sahf
xchg
cld
sub
mov
and
jp
cld
test
jle
sub
rclb
insl
popa
and
stos
roll
sbb
cmc
cmp
jno
pop
lds
mov
mov
xor
insl
push
push
ds
pop
in
lods
cltd
popa
cld
gs
dec
push
add
push
cltd
mov
pop
mov
sarl
and
pop
in
test
jecxz
fidivl
daa
push
mov
inc
in
pop
mov
fisubrs
inc
pxor
mov
dec
in
push
sbbl
xor
outsl
xchg
sbb
inc
mov
cmp
xor
cld
inc
pop
outsl
cmp
fistpll
cs
call
push
and
data16
fnstenv
jp
arpl
pop
shll
or
mov
cmp
pop
idiv
jbe
jae
mov
pop
stos
mov
pushf
xor
jge
rorb
push
xchg
rolb
mov
cmpsl
cmp
pop
mov
test
cmp
and
lea
mov
inc
pop
or
pop
jns
inc
shlb
push
mov
shl
test
add
sub
dec
push
mov
mov
ja
loop
insl
push
rep
inc
mov
adc
pusha
mov
or
inc
inc
and
incb
pop
cmp
test
popf
aas
add
inc
sbb
push
jp
push
insb
fldlg2
xor
je
loop
scas
lahf
loop
adc
mov
or
arpl
jb
popf
sbb
ja
adc
lods
add
lcall
stos
and
lds
pop
in
add
and
or
xor
mov
ror
or
mov
and
sahf
loop
ret
pusha
fbstp
mov
test
fs
scas
jp
les
pop
fisttpll
pop
or
pop
push
dec
fs
jb
out
push
xor
das
adcb
jnp
in
fadd
fs
les
or
out
or
mov
add
negb
or
xchg
jl
xlat
mov
cs
mov
dec
ljmp
fs
xchg
dec
test
push
push
ljmp
scas
push
or
test
and
inc
lea
test
dec
lret
adc
adc
xor
jg
jo
jae
jle
in
pmuludq
push
fnsave
loop
xchg
data16
or
mov
adc
pop
pop
adc
outsb
fmuls
or
imul
jp
and
mov
and
aam
xchg
aaa
out
jl
mov
jnp
sub
xchg
bound
jmp
subl
add
sub
or
in
jno
cld
fmul
xchg
add
in
mov
xor
push
xchg
cmpl
sti
adc
mov
lea
push
mov
adc
or
jb
aam
in
jle
ljmp
iret
pop
leave
popl
pop
aam
pusha
push
fbld
cwtl
push
jl
sar
fucomi
mov
stos
push
mov
bound
add
int
jo
and
std
daa
xor
xor
mov
div
pop
mov
sarb
pop
dec
and
ds
fadds
xor
es
mulb
pop
in
jge
out
pop
nop
mov
sbb
add
xor
rcrb
cwtl
popa
jp
into
in
mov
out
sbb
sbb
dec
movsb
jne
push
in
mov
xchg
xchg
dec
pop
mov
stos
dec
cmp
add
jne
jmp
push
scas
dec
addr16
shlb
shrl
pop
pop
sahf
jno
dec
push
decb
pop
push
pop
ja
mov
arpl
lret
pop
inc
inc
pop
pop
jnp
mov
pop
and
push
cwtl
adc
push
add
fnsave
cmp
mov
hlt
or
aas
xchg
xlat
cmp
adc
pop
adc
mov
repz
xor
enter
mov
cwtl
movsl
dec
cli
cmc
pop
in
cmp
jnp
hlt
xchg
mov
fmull
roll
dec
add
data16
mov
insb
xchg
loopne
arpl
lds
or
push
jae
add
sbb
pop
sahf
idivl
imul
adcb
test
negb
xchg
rcll
cltd
mov
out
jmp
rolb
mov
test
jge
cmp
mov
hlt
and
pop
in
sti
fldl
fcomi
data16
inc
inc
insl
or
sbb
sub
out
pop
jnp
es
fdivrl
out
aad
cs
pop
pop
mov
jle
sbb
mov
data16
xchg
mov
cmp
ss
sbb
mov
test
mov
test
jmp
fstps
jmp
push
mov
jle
sub
cmp
icebp
lcall
outsb
fdivrl
in
test
mov
scas
test
jnp
jno
xor
adc
dec
sahf
cmp
pop
mov
adc
mov
lahf
cmpsb
imul
fists
fistps
push
fsubrl
out
and
add
out
sub
mov
clc
pop
out
pop
add
pop
xor
mov
jle
arpl
pop
pop
push
dec
xchg
das
inc
dec
lods
xor
sub
test
fldt
push
movsl
pop
sub
gs
scas
sub
neg
hlt
push
stos
jo
ds
dec
adc
scas
insb
testb
mov
mov
xchg
ret
add
insb
cmpsl
mov
pushf
shll
rcr
or
mov
jp
js
les
movsl
push
lea
vcomisd
scas
jl
sbb
push
jl
scas
ja
pop
and
pop
inc
dec
cmpsl
mov
jmp
add
xlat
sti
mov
or
add
sub
sub
jp
shrb
aam
call
jecxz
xor
fnsave
xor
inc
inc
jnp
pop
adc
out
enter
andb
pop
daa
cmp
adc
inc
vpaddw
imul
aad
insl
add
popa
sub
popf
fdivrs
jno
hlt
lea
push
pop
cmpsb
out
dec
test
rolb
nop
imul
jnp
sub
jo
jp
data16
and
out
mov
inc
sbb
rcrb
mov
in
movsl
pop
pop
outsb
loop
fisubrl
sub
jbe
dec
add
mov
push
fcmovu
mov
mov
popa
sbb
es
cwtd
pop
aad
jb
cmp
cli
jno
lahf
es
fwait
dec
in
mov
mov
or
adc
shl
cli
xor
cs
aam
sub
lds
aas
js
leave
inc
pushf
dec
clc
inc
sub
push
rol
cmpsl
imul
mov
cmp
add
js
cmpsl
jp
add
jle
arpl
adc
or
imul
or
aas
cmpsb
mov
leave
push
dec
movsl
cmp
popf
mov
mov
insl
inc
mov
ror
pop
or
add
add
fidivl
jbe
fsubs
or
aam
fisubrl
pop
aam
and
dec
or
stc
add
repz
outsl
sub
test
addr16
push
lret
push
out
or
clc
mov
mov
ljmp
roll
es
pop
stc
adc
sbb
jg
cmp
pop
adcb
mov
cmpsb
lcall
call
jecxz
movsl
stos
test
cmpsl
add
jl
cmp
daa
pop
sbb
fstpt
jo
jbe
push
ljmp
cli
ret
rcrl
stc
xor
testl
cmp
daa
lods
mov
pop
out
sti
xor
mov
inc
xchg
jmp
outsb
stc
sub
pusha
popf
push
paddusb
lds
int3
jmp
call
dec
xchg
movsl
call
fstpt
cmp
into
call
js
inc
add
scas
es
in
insb
add
inc
sti
jmp
mov
repz
push
add
aaa
add
loopne
lahf
insl
out
dec
inc
jge
sub
cmpsb
or
pop
push
std
out
xor
jecxz
test
cmp
and
lea
cmp
nop
push
cmp
cmpsl
mov
mov
ficoms
push
xchg
pop
mov
int3
jb
scas
xchg
mov
mov
imul
fistps
cld
hlt
dec
cmp
mov
into
scas
imul
inc
jl
ljmp
scas
adc
mov
dec
incb
stos
xor
add
out
jo
lcall
scas
xor
push
and
sbb
call
dec
cmp
stos
cmpb
sub
cmp
and
mov
add
dec
in
mov
incl
adc
sbb
mov
and
dec
mov
mov
mov
in
mov
gs
pop
lock
enter
frstor
and
jmp
lods
push
hlt
adc
lods
mov
and
xor
jg
ss
lahf
shlb
and
push
mov
mov
nop
je
or
push
dec
mov
ja
shr
int
pushf
jmp
xor
mov
movsl
pushf
add
fwait
iret
outsl
xchg
pushf
fucomi
cmp
fmull
fistpl
sbb
out
sub
inc
pop
pop
mov
or
mov
xor
les
repnz
fmuls
xchg
xchg
ds
lret
daa
mov
jns
inc
fisubrl
jg
clc
mov
sahf
cmp
testb
jo
add
push
rorl
aam
add
pop
xchg
inc
roll
cmp
stos
or
std
incl
in
jmp
dec
out
push
xor
jmp
jp
call
xchg
movsl
lods
iret
testb
dec
scas
sahf
xchg
ret
or
xchg
repnz
sbb
dec
test
insl
imul
hlt
mov
pop
clc
std
sbb
jne
call
sbb
xchg
push
jl
cmp
je
xchg
push
lea
imul
mov
test
pop
test
inc
xchg
cmp
in
mov
in
push
xchg
jge
jnp
mov
jae
sbb
xor
cmc
xchg
in
cli
dec
imul
cld
mov
dec
ljmp
repz
scas
cltd
cwtl
out
push
out
adc
in
adc
cmp
push
arpl
and
rcrl
sub
in
mov
xor
lret
xchg
cmpsb
into
insb
das
dec
sub
xchg
ret
loope
xchg
pop
mov
hlt
popf
fidivs
sar
mov
inc
lcall
dec
setge
sub
or
sbbb
imul
sbb
jbe
ret
inc
sbb
push
push
sub
mov
pop
cmp
aas
testb
or
int3
and
loope
fld1
mov
jnp
in
popf
add
fstl
lret
in
divl
xchg
mov
pop
jb
popa
adc
xlat
push
mov
xchg
cmp
jecxz
inc
lret
out
es
int
pop
std
jp
dec
inc
call
fcmovnbe
scas
aad
inc
rorl
scas
xchg
dec
outsb
cwtl
fldenv
aaa
roll
sub
in
xchg
push
imul
mov
cld
pop
loop
xor
hlt
inc
outsl
out
xchg
sub
mov
dec
push
stos
push
imul
loop
fistps
inc
stos
mov
pop
ffree
xchg
add
and
xor
pop
sbb
in
jmp
xchg
mov
repz
fs
add
sti
sbb
repnz
out
popl
in
scas
jp
push
xor
or
jl
cwtl
and
cmp
jp
es
enter
sbb
dec
fnstcw
es
ja
add
fwait
jns
inc
dec
fmull
jae
sbb
sub
sbb
in
inc
mov
movsl
jge
icebp
mov
xchg
lea
fildll
cmc
pop
jp
icebp
nop
es
sahf
cmp
fdivl
mov
or
and
stc
and
es
mov
inc
cli
mov
into
xor
add
pop
mov
pop
push
jmp
das
or
insb
fisttpll
outsb
xchg
mov
push
push
loopne
or
jbe
insb
or
cmp
fldcw
mov
or
mov
aad
mov
imul
bsf
aas
inc
pusha
cltd
leave
lods
cmpsl
mov
cmpsb
pusha
cmp
imul
out
sbb
mov
adc
mov
dec
adcb
xor
jno
incb
call
pusha
sub
mov
mov
or
in
inc
test
pop
xchg
movsl
pop
sbb
sub
sub
push
loop
add
cmp
test
adc
or
push
cmp
sti
cli
aaa
mov
mov
adc
ret
add
and
or
xchg
mov
in
movsl
and
testl
jbe
mov
pop
ret
cs
fsts
pop
sahf
or
dec
and
sub
mov
jne
pop
and
sub
pop
xor
add
mov
popa
popf
adc
stc
loope
add
inc
shll
in
lahf
in
in
mov
fs
mov
dec
xor
jb
in
faddl
xchg
xor
inc
or
dec
sub
pop
cwtl
jg
add
dec
and
cmp
pushf
mov
inc
roll
sbb
xchg
shlb
inc
bound
jns
out
mov
bound
jns
pusha
mov
sbb
sbb
ljmp
stc
xchg
jno
call
sbb
test
pop
cmpsb
dec
shl
roll
testb
jae
adc
lods
jbe
ficoms
les
popl
xchg
ret
jle
push
sbb
insb
in
mov
add
jae
test
jecxz
addr16
std
int
inc
pop
adc
sbb
sub
gs
loop
mov
sbb
mov
ret
jg
pop
mov
sahf
int
sub
mov
outsl
jp
jge
les
add
mov
movsb
mov
mov
jbe
xchg
test
inc
sbb
out
leave
dec
jmp
testb
push
pop
xchg
ja
pop
mov
xchg
in
lods
push
cmc
add
jns
lds
cltd
sbb
jne
in
lcall
shl
jns
xor
fwait
xor
mov
add
cltd
mov
loop
loop
sbb
sbb
pop
xchg
dec
stos
mov
pop
scas
lret
test
push
aam
nop
or
xchg
mov
int
push
in
lahf
into
xchg
pop
and
ds
mov
cmc
mov
lahf
jg
daa
out
sbb
jbe
icebp
add
cmp
jg
add
fcmovnu
int3
cltd
mov
inc
push
mov
movsl
loopne
jge
sti
sbb
mov
ja
fwait
js
cmpsb
stc
mov
fwait
jae
ror
pop
cmpsb
sub
imul
xchg
or
test
inc
jg
cmpsl
sub
and
dec
mov
arpl
xor
shrb
mov
inc
adc
test
cmp
jecxz
dec
in
dec
mov
xchg
dec
push
inc
add
xchg
int3
dec
fisttps
push
ficomps
fildl
jl
in
test
jae
popa
inc
sbb
nop
adc
test
and
or
sbb
loope
sbb
repz
push
lea
sbb
push
jns
pop
xchg
les
lea
xchg
aas
aam
push
cmpsl
pop
aam
leave
das
cmp
enter
cmp
lock
or
inc
shlb
sub
insb
mov
dec
jmp
addr16
insb
xorb
push
push
xlat
mov
popa
popf
push
dec
fdivrs
pop
movsl
sub
inc
or
jmp
aad
iret
stos
xor
add
sbb
punpckhwd
dec
lds
movsl
mov
inc
dec
and
fwait
mov
out
stos
cmp
mov
jp,pt
sbb
push
rol
cld
cmp
mov
loope
int
and
fidivs
ffree
dec
in
lods
xor
outsl
rolb
add
outsb
hlt
repnz
add
scas
mov
fsubrs
adc
xlat
andb
mov
icebp
cmp
push
cmp
push
dec
pop
daa
loop
push
movsb
xor
rcll
mov
sub
sub
test
ds
adc
inc
jno
push
mov
mov
ljmp
daa
sbb
jb
aad
pop
dec
repnz
add
enter
bswap
xorps
jge
xor
ss
rcrl
xorl
inc
mov
out
mov
jbe
cld
push
outsb
xchg
adc
mov
add
cld
xchg
add
mov
vmwrite
dec
mov
lds
cmp
bound
mov
push
pop
hlt
xlat
push
je
xchg
sti
sbb
xchg
lods
iret
lcall
cmp
pop
or
push
dec
lret
push
xlat
daa
movsb
aam
ret
aam
out
or
dec
xchg
or
loopne
mov
jp
adc
shll
cmp
clc
mov
mov
sub
mov
fcmove
fs
adc
sub
imul
xor
jg
push
mov
cltd
lcall
jo
ret
js
inc
imul
rolb
or
jae
xor
sub
sub
scas
les
sub
test
cmpl
push
outsl
add
xor
mov
mov
dec
add
test
aaa
inc
mov
mov
jae
repnz
aad
fsubrs
adc
and
fmul
imul
std
dec
cli
mov
sarb
sbb
aas
xor
loop
pop
aas
inc
sub
out
mov
stos
and
popa
outsb
in
xlat
movsl
cld
dec
inc
jl
jbe
jl
mov
mov
jae
xchg
testl
push
stos
pop
inc
push
nop
mov
out
int
pop
mov
xchg
ljmp
mov
push
lcall
fs
dec
jge
inc
aas
cmp
in
hlt
mov
pop
rolb
mov
mov
or
adc
insb
dec
mov
add
jecxz
or
xchg
inc
setg
int
jne
xchg
inc
adc
inc
adc
add
aam
sub
lcall
stc
es
mov
stos
int3
jmp
fnstcw
lods
enter
rorb
andl
dec
rcl
outsb
lret
sbbb
mov
addb
data16
mov
and
notb
ret
jne
hlt
pop
ja
enter
call
and
rcr
jp
inc
lods
lods
addr16
gs
cmp
mov
adc
mov
mov
xchg
jns
adcb
fs
movsb
or
pop
enter
addb
int3
or
fnsave
push
js
lahf
leave
xlat
stc
movsb
xlat
xchg
dec
jae
pop
aam
rclb
jp
pop
add
js
loop
xor
iret
in
imul
push
nop
xchg
stos
mov
cs
fdivl
jg
mov
pop
repz
fucomip
dec
jge
dec
and
pop
dec
sub
repz
ror
jb
scas
repnz
adc
or
sub
fnsave
bound
mov
mov
mov
cmp
jg
xchg
pop
jg
add
inc
fbstp
lds
out
test
insb
leave
or
into
inc
dec
sbb
sbb
xchg
das
fwait
inc
add
es
push
dec
dec
inc
mov
sbb
insl
out
cmpsb
cwtl
mov
ss
in
test
pop
mov
cmc
rcll
icebp
adc
mov
bound
jle
std
ljmp
cld
lahf
pushf
sbb
xlat
mov
enter
out
enter
jl
and
mov
or
dec
mov
mov
idivb
add
jne
setne
dec
inc
pop
inc
dec
cwtl
fists
fcomp
pop
ljmp
aas
and
cmp
sbb
cli
nop
sbb
xchg
jp
in
inc
jp
fstpt
inc
test
std
pop
fnstcw
mov
bound
pop
jl
sbb
loop
cmpsl
fldz
push
sahf
xchg
pop
std
in
sahf
lret
daa
jno
or
push
mov
stos
leave
cmp
popa
movsb
sub
call
pop
adc
lea
and
dec
scas
mov
jecxz
add
pop
sbb
aad
daa
pusha
mov
fiaddl
push
es
insb
push
repnz
push
lret
out
cmc
push
in
insb
push
and
test
pop
or
arpl
push
cmp
push
pop
or
stc
test
cmp
sbb
lahf
movsb
sbb
ret
mov
jae
push
xchg
inc
push
enter
mov
mov
push
repz
add
pop
push
in
cmp
imul
and
cli
mov
inc
repnz
push
jecxz
push
fs
unpcklps
pop
addr16
fwait
imul
push
or
dec
outsb
scas
or
mov
jl
cmpsl
and
sub
bound
inc
rolb
mov
add
jmp
fs
xchg
les
rorl
push
ds
enter
jge
or
jnp
nop
rcll
fmuls
jge
test
in
cmpsb
or
sbb
xchg
mov
insb
icebp
loop
sub
cld
fwait
arpl
es
inc
jno
pop
xchg
jns
pop
mov
insl
adc
mov
jp
and
pop
pop
or
or
jne
dec
jo
insl
fisubrl
dec
imul
shl
sahf
fisubs
xchg
repz
sbb
pop
inc
xchg
movsl
mov
jb
and
mov
in
iret
std
iret
push
pop
push
or
mov
je
sar
nop
or
leave
inc
sbb
fidivs
dec
in
lret
and
lds
aam
jbe
fwait
rcrl
cmpsb
fsubl
daa
inc
inc
movsl
xchg
adc
jecxz
insl
aas
sub
inc
loopne
arpl
jb
cmp
stc
lods
mov
mov
push
out
ss
jge
popf
mov
js
xchg
dec
scas
ffree
sub
sbb
int
xchg
pop
sub
sub
jae
sbb
loop
cmp
dec
or
out
mov
lcall
test
jbe
sub
xor
mov
xchg
xchg
ja
adc
mov
pop
adc
cmp
in
mov
push
insl
or
insb
fcoms
cmp
icebp
inc
and
mov
xchg
sarb
or
mov
jl
add
movntq
out
test
push
dec
fwait
test
lods
stos
jns
add
jl
test
mov
and
punpckldq
ret
faddl
adc
and
adc
ret
cmp
mov
repnz
xor
mov
out
mov
mov
and
or
dec
mov
lods
push
xchg
xchg
imul
fadd
aas
loop
mov
and
sbbb
loope
pop
xchg
sarl
idivb
out
out
jge
les
mov
dec
push
mov
and
fsubl
shr
lds
or
fsubp
popf
push
stos
int
in
stos
stos
dec
sbb
jge
out
mull
jle
and
jne
mov
jg
pop
cmc
icebp
rorl
jge
dec
leave
into
push
mov
cltd
inc
jbe
sbbl
sbb
push
mov
std
aam
movsl
ss
shrb
adc
mov
xlat
stos
jl
ljmp
call
addr16
cmp
roll
repnz
jmp
pop
fabs
fdiv
xor
xchg
lret
and
loopne
int3
mov
rcl
add
dec
data16
mov
push
ljmp
add
sbb
push
xor
or
ds
cmc
cmp
fisubrl
imul
adc
mov
iret
xchg
dec
pop
aas
mov
inc
rcll
pop
push
imul
dec
cld
mov
int3
loopne
ds
or
aam
cmc
daa
dec
mov
inc
cmpsl
imul
jnp
insl
subl
xchg
push
lahf
sti
popa
xchg
movsb
cmc
bound
lret
insb
cltd
cmpsl
push
ds
mov
lods
add
ljmp
shrb
adc
add
incb
inc
dec
add
mov
and
inc
push
nop
cmpsl
xor
fldl
xchg
jecxz
les
mov
inc
repnz
out
gs
mov
loope
ljmp
jb
fidivrl
leave
insl
sub
lods
int3
xchg
lods
xor
idivb
dec
push
out
cmc
ret
notb
mov
in
fnstsw
inc
pushf
mov
push
stos
inc
pmaddwd
test
push
stos
push
insb
pop
ljmp
rcrb
gs
mov
aaa
cmpsl
push
sbb
mov
xchg
loope
dec
cmp
loop
sub
cmp
xor
pusha
popa
sti
rcll
iret
call
pop
xchg
mov
gs
int3
mov
jl
inc
test
repz
xlat
mov
cmp
xchg
out
adc
test
loope
sbb
push
aam
cmc
dec
dec
cli
sti
pop
or
adc
fistps
dec
repz
stos
or
in
in
xor
sbb
inc
mov
ljmp
sbb
stos
movsb
insb
loopne
aad
dec
fmull
aad
js
cmp
xchg
into
xor
xlat
int
jl
rol
dec
push
pop
rorb
clc
add
xchg
add
ret
push
xor
shlb
jp
imul
sarw
ja
ds
mov
int3
outsl
inc
stc
imul
aad
mov
adc
dec
gs
aam
mov
sarl
roll
xchg
sbb
jge
in
insb
stos
push
xchg
fsubrp
push
and
xor
cld
ret
shrb
stc
cmp
pop
jne
and
jb
out
sbb
inc
std
andb
fwait
inc
mov
int
loop
adc
push
mov
out
insl
in
pop
pop
aas
add
stc
in
enter
lock
sbb
fwait
test
popf
cmp
mov
bnd
inc
mov
inc
push
imull
icebp
mov
pushf
mov
or
add
hlt
out
repnz
cltd
lcall
push
pop
fistpl
movsl
cmc
xor
rcr
sub
mov
xchg
lahf
mov
sbb
mov
fwait
sub
popf
aad
ret
bound
mov
movl
fildll
lcall
roll
mov
fldcw
leave
addl
sub
je
dec
push
repz
mov
jp
pushf
add
ss
mov
aaa
imul
and
aas
addr16
adc
cmc
mov
jecxz
test
lock
jmp
mov
xchg
push
out
fidivs
jae
push
aaa
mov
test
jo
lds
push
and
je
push
adc
sbb
add
jne
mov
movsb
bound
stos
pop
sbb
xchg
push
sarb
jl
mov
xor
pushw
ss
lret
xor
insb
loop
fdivs
pop
mov
or
mov
and
cltd
inc
and
pusha
pop
ret
ret
in
imul
roll
sahf
xchg
adc
adc
and
mov
mov
arpl
sbb
bound
loopne
cld
pop
lret
push
mov
jns
scas
mov
les
in
les
sub
clc
xchg
add
pop
jbe
add
dec
jecxz
fdivrs
or
in
rclb
and
or
je
fiaddl
in
mov
cmp
idivl
jns
jno
movsl
rorb
imul
push
jo
dec
and
es
adcl
lds
aaa
mov
lock
dec
or
movsb
pop
mov
sahf
das
rcl
lret
mov
or
addr16
dec
and
or
lea
dec
push
jle
xor
xchg
pop
outsl
aas
sti
mov
jns
and
xchg
sbb
imull
jmp
pusha
inc
mov
push
push
clc
pop
push
stos
sbb
pop
jg
aas
repnz
jmp
push
xchg
xor
jmp
sbb
pop
mov
out
aaa
test
icebp
mov
sub
inc
jae
mov
sub
lock
pop
ret
push
dec
dec
jle
lds
fstps
and
rolb
inc
clc
mov
mov
jne
aam
adc
add
push
imul
aas
inc
pop
and
fs
mov
xchg
popf
adc
xchg
shll
loop
rcrl
jle
xor
mov
sahf
mov
dec
shll
jp
sub
nop
ret
mov
cs
or
xchg
ret
andl
stos
or
test
xor
jb
cmp
test
adc
cmp
push
xor
enter
aad
push
or
lret
rcll
mov
pop
je
ds
clc
or
fs
sbb
lcall
ds
dec
call
pusha
add
subb
lahf
push
cmp
int
fwait
outsb
loop
pop
insb
incb
enter
dec
sarb
ret
push
aam
xor
nop
cmp
fstl
out
push
mov
imul
outsb
xlat
jno
fdivrs
fldcw
loop
mov
sub
sbb
or
adc
xchg
call
or
fisubl
cmpsb
dec
ja
dec
sar
mov
insb
repnz
mov
test
mov
roll
mov
std
or
mov
fcoml
mov
push
rorb
or
fs
sti
dec
cmp
dec
rcrl
aaa
into
inc
cmpsl
hlt
push
jne
push
fsubrl
adc
or
xor
xor
test
xchg
rcll
movsl
int3
cmp
xchg
aam
ret
add
mov
cmp
or
ljmp
mov
xchg
and
dec
loopne
xchg
dec
stc
fcos
cmpsb
jne
icebp
lds
fdiv
out
adc
stos
pushf
inc
mov
cwtl
or
jge
fnstenv
sahf
dec
mov
mov
ss
dec
cmp
push
and
daa
fs
imul
lahf
push
mov
lret
clc
xchg
in
adc
inc
pop
ficoms
mov
cmp
jge
test
sbb
in
cmp
pop
shl
mov
or
dec
je
call
xlat
stc
aad
les
rol
cld
and
out
xchg
mov
or
mov
lds
ficoml
ds
fwait
mov
idivl
rcl
mov
jo
les
cmpsl
sbb
xor
out
mov
or
pop
xchg
mov
dec
stc
vmread
push
xchg
loope
bound
adc
xchg
pushw
fs
mov
outsl
mov
and
loope
jmp
cli
sbb
icebp
jl
sub
xchg
or
mov
in
test
xor
mov
int3
cwtl
insb
shrb
push
dec
scas
jns
jmp
pop
dec
test
rclb
scas
inc
mov
push
add
and
mov
dec
mov
dec
idivl
lds
test
xchg
out
sbb
inc
cmp
movsb
shrw
in
ss
or
pop
lods
xchg
add
dec
inc
lods
addl
call
ds
xor
loope
mov
jbe
add
rcrl
jmp
mov
stos
sti
repnz
scas
cld
stos
out
and
jns
adc
movsl
pop
pop
add
mov
aad
scas
xchg
push
push
pop
fcoml
in
leave
pop
rol
xor
pop
or
mov
push
xchg
mov
xchg
xor
fwait
jne
pushf
push
test
add
fiaddl
cmp
inc
pop
jo
ljmp
lock
adc
aam
aas
loop
faddl
push
cmc
cmpsl
cmp
adcb
jmp
popf
jnp
inc
xchg
mov
data16
out
aam
lods
push
add
inc
sbb
fnsave
xchg
dec
inc
in
inc
dec
jbe
xor
ret
and
fiaddl
fstl
inc
mov
pop
int3
inc
xchg
push
push
push
jnp
lret
jns
push
mov
xor
jp
sub
std
aaa
xor
push
xchg
xor
mov
dec
aam
pop
dec
or
inc
xor
and
dec
faddl
mov
and
cmp
das
lds
jno
call
xorl
mov
sbb
cmpsb
jb
adc
addr16
adc
in
or
push
cli
sbb
mov
dec
sub
rcll
cmp
aaa
lret
cmpsb
das
mov
jo
lds
sub
les
inc
inc
jns
push
and
push
cmp
inc
fdiv
in
inc
mov
fcoml
lret
lods
pop
insb
jmp
int3
cld
lret
sbb
in
dec
rorb
mov
ljmp
dec
into
sub
fistl
push
pop
xor
push
mov
das
xchg
scas
jb
stos
aad
adc
xlat
pushf
loope
in
rol
out
int
mov
xor
stc
or
movsb
sbb
in
outsb
jp
pusha
sbb
cmp
movsb
inc
sti
shlb
imul
mov
cs
mov
in
lret
icebp
cwtl
push
sbb
xchg
aad
mov
cmp
jle
mov
imul
xchg
inc
xor
push
hlt
pop
xor
cli
jecxz
jl
das
mov
pop
jg
dec
ljmp
cmp
repnz
js
xor
jl
fistl
sti
sbb
cmp
and
adc
jmp
pop
fstl
sahf
push
push
xchg
sbb
mov
inc
loope
push
fisubrl
xchg
and
in
hlt
xchg
aam
inc
cmp
mov
aad
adc
fistpll
jno
lret
add
jg
push
cmp
andl
push
decb
or
scas
outsb
cltd
movsl
orb
call
or
neg
aad
jge
mov
insb
jl
movsl
ljmp
pop
lea
cmpb
xchg
loopne
ljmp
mov
aaa
jns
fwait
pop
jmp
push
arpl
idivb
mov
dec
pop
push
out
sbb
in
shrb
dec
packsswb
stos
in
sbb
shlb
xchg
ljmp
lcall
ss
add
fcmovnbe
daa
lods
or
mov
sub
mov
repz
negl
mov
sub
pop
dec
add
dec
add
jnp
stc
mov
fstpt
fbld
xchg
addb
imul
outsl
movsl
testl
xchg
add
and
push
inc
pusha
xchg
nop
push
inc
jno
adc
clc
dec
push
push
or
sub
std
jnp
ss
and
ja
cmp
aad
icebp
jmp
imul
push
movsl
mov
pop
xor
lret
and
sub
and
mov
scas
loop
popf
lret
push
push
lret
jae
or
popf
pusha
push
mov
insb
sbb
jl
dec
xor
in
stc
insb
fstpl
mov
insl
pusha
scas
push
lods
loopne
fldenv
sub
xchg
mov
xchg
sbb
sbb
adc
into
out
mov
ficoml
insl
push
jge
fyl2xp1
rcrl
push
fwait
mov
pop
or
xchg
les
and
inc
stos
dec
sbb
fcom
insl
cltd
push
call
movsl
dec
es
rcrb
sub
jle
jno
cmpsb
jnp
stos
pop
pop
gs
sarb
std
movsb
loope
cmp
sbb
pushf
outsl
shrb
mov
out
rolb
into
rorl
mov
repnz
lock
leave
cmp
and
addl
popa
sbb
dec
in
flds
and
sub
inc
sub
mov
xchg
xorb
les
sbb
dec
in
in
push
push
bound
imul
daa
xor
jnp
outsl
nop
add
cmp
mov
cmp
loopne
mov
std
leave
addl
dec
push
xlat
int3
das
aad
and
dec
push
sbb
jns
scas
mov
xchg
mov
lods
div
xor
movsb
lret
sub
fstl
mov
push
mov
and
sbb
xor
pop
push
jge
leave
fisubl
stc
seto
jae
in
mov
or
xor
test
iret
rcr
roll
int
xor
push
mov
imul
stos
sti
cld
pop
roll
jae
cmpsb
enter
sub
or
jns
out
mov
int
pop
lods
xor
push
enter
mov
scas
add
repz
and
cmp
imul
outsl
in
ja
repz
cli
insb
sbb
add
out
cld
aad
sbb
or
xchg
mov
jmp
inc
xchg
or
mov
cmpb
mov
cmp
jnp
stos
mov
fdivl
popa
int3
dec
sti
shrb
pushf
cmp
cmp
lret
neg
or
sti
mov
dec
mov
inc
lock
repz
arpl
xor
jno
js
inc
xchg
cmp
sub
jmp
scas
pop
pop
pop
and
push
js
pushf
or
xor
movsl
aad
into
divl
loopne
and
mov
jnp
dec
push
xchg
or
jmp
lock
cmp
ss
push
and
dec
inc
ss
xor
jle
cmp
cmpsb
dec
jp
and
xor
jo
pop
pop
popa
pop
sbb
sbbl
mov
sub
jno
sbb
fcmovnb
xchg
dec
cmc
xchg
sbbb
inc
jns
fistl
sbb
movsl
cwtl
push
push
out
lds
lcall
popf
cmpsb
adc
jp
sub
inc
jbe
mov
fxch
mov
mov
daa
xchg
pop
or
xchg
out
pop
imul
stos
pop
in
mov
cltd
insl
xchg
je
les
movsb
les
xchg
fadd
jbe
jnp
xchg
adc
mov
pop
or
sub
ljmp
mov
jg
jno
sbb
mov
sahf
ja
outsb
sub
notl
and
sbb
orl
jns
mov
push
jle
je
iret
jmp
insl
push
aam
lahf
cmp
lcall
nop
fdivrp
mov
fcmovnu
pop
jmp
mov
xchg
mov
mov
lret
ljmp
mov
and
lods
push
inc
shrl
jo
pushl
mov
pop
jnp
cmp
lods
push
and
out
es
cmpsb
cmpl
adc
icebp
and
dec
pop
sbb
mov
das
jbe
inc
cmpsb
inc
sti
cltd
dec
cmp
sub
std
mov
call
lods
cwtl
repnz
pop
outsb
nop
mov
icebp
ret
stc
or
mov
add
mov
sub
lret
hlt
jmp
or
aaa
mov
jns
fs
pushf
dec
push
test
movsl
mov
jo
add
inc
push
pop
cltd
jmp
cli
subb
sti
ret
insl
cli
mov
daa
popf
cmp
mov
dec
pop
xor
pop
stos
ret
pop
dec
aaa
jne
sbb
mov
xor
inc
fs
dec
das
hlt
pop
adc
int
xlat
jnp
in
push
lods
cs
adc
in
shr
clc
and
push
addr16
jnp
subl
cmc
mov
sbb
jns,pt
dec
add
cli
es
movsl
ljmp
je
jl
testb
sbb
xor
shlb
mov
stc
push
cmp
repnz
xchg
sub
xchg
xchg
adc
mov
repnz
jbe
rol
cmpsl
or
and
pop
add
and
daa
or
in
mov
sub
jmp
pushf
leave
mov
sub
mov
rorl
xchg
push
clc
add
sub
mov
cmp
scas
pop
pushf
jae
imul
dec
dec
ficoml
fistps
mov
aas
mov
test
push
adc
xchg
fcomp
pop
movsl
xchg
pop
gs
mov
xchg
mov
jae
xchg
ret
or
dec
out
xor
cmp
mov
xor
in
fadds
jecxz
mov
jae
mov
das
or
cmp
cmc
fiadds
mov
iret
pop
mov
pusha
mov
pusha
mov
dec
adc
cmp
mov
add
test
add
dec
imul
xchg
pop
idiv
sahf
sbb
std
sahf
lret
jbe
clc
shl
add
inc
pop
cltd
in
mov
aam
cwtl
repz
push
cmc
test
mov
lcall
repz
ret
mov
mov
or
adcb
xor
int
aad
and
sbb
clc
subb
adc
adc
sarl
fwait
jnp
add
int
popa
int3
rsqrtps
push
inc
outsb
mov
gs
mov
iret
loope
int
mov
sbb
shr
mov
stos
cmp
cmp
faddl
mov
sub
lods
push
test
xchg
pop
pop
cmp
loope
dec
push
dec
test
xor
es
inc
push
jecxz
outsl
rorl
mov
movsb
js
movsb
jmp
test
adc
xchg
dec
clc
cltd
mull
das
mov
and
jno
lea
lret
lret
push
pop
or
shlb
push
jp
mov
mov
jl
cmp
sub
inc
push
or
sbb
mov
in
movsb
fisttps
xor
lea
push
incb
addb
cwtl
add
dec
cs
hlt
cltd
xchg
sub
pop
in
pop
adc
mov
dec
testl
jnp
push
jg
loopne
aad
sbb
jge
xchg
shlb
and
lahf
stos
out
cltd
cwtl
pop
mov
push
int3
jns
sbb
insl
mov
shll
push
jp
call
jno
iret
push
adc
sbb
dec
jns
dec
or
nop
ds
cmpsb
push
push
inc
pusha
dec
xchg
sub
push
sbb
shrl
ljmp
popa
jnp
jae
movsb
sbbb
popf
lret
pop
xchg
dec
jae
push
adc
hlt
push
sub
sbb
inc
test
add
popf
mov
test
dec
lds
outsb
ds
adc
sbb
ficomps
push
ret
nop
xor
imul
std
mov
scas
mov
imul
inc
pop
stc
lcall
dec
or
jecxz
xor
and
movb
insl
jmp
cmp
mov
lcall
xchg
sbb
mov
cmp
push
stos
pop
xor
out
ret
and
movl
adc
xor
mov
pop
das
jl
imul
lea
ja
cmp
add
in
mov
int
push
push
cmp
inc
sbb
stos
pop
pop
loop
xor
ret
iret
and
out
ret
pop
imul
fmuls
pop
jno
sub
jbe
pushf
or
add
mov
movsl
insl
in
stc
ss
popf
fisubs
scas
aaa
xor
pusha
add
inc
push
mov
push
mov
jne
mov
and
es
cld
inc
mov
push
inc
push
leave
ljmp
cmpb
inc
ja
push
lret
xchg
cli
or
sbb
clc
pop
shrb
call
and
jle
cwtl
adc
aas
and
popf
xchg
sub
subl
jecxz
imul
push
push
lret
and
pop
jae
mov
push
test
xor
push
cmp
jns
addr16
xchg
leave
xchg
and
cmp
sahf
xchg
shlb
leave
imul
fldlg2
xchg
int3
daa
orb
repnz
sbb
add
mov
pop
xchg
arpl
push
push
subl
stc
repz
mov
pop
push
pusha
push
fucomp
mov
cmp
xchg
loop
icebp
push
ret
in
xorb
insl
or
push
adc
adc
pusha
cmpsl
lcall
mov
aam
mov
in
or
test
test
push
aad
xchg
sbb
int3
or
pop
or
xchg
push
pop
mov
dec
imul
xchg
scas
pop
movsb
add
mov
xchg
mov
push
dec
and
divl
adc
sar
cmp
test
mov
fwait
addr16
push
xchg
adc
inc
ret
mov
adc
xor
andl
call
sub
nop
and
adc
andb
arpl
lahf
bound
pop
sbb
test
jbe
jmp
add
cmp
push
cmp
out
sub
les
inc
arpl
jl
aad
bound
mov
hlt
pop
or
mov
aas
lds
test
loop
inc
mov
sub
mov
xor
jo
cltd
fwait
or
insb
fstl
cmp
je
xchg
mov
sub
repnz
lods
aaa
inc
cltd
xlat
jne
mov
jne
cli
lods
jo
mov
sub
dec
xor
jmp
push
sti
inc
in
xchg
push
test
mov
and
xor
sub
das
in
stos
test
jmp
insb
sahf
mov
loopne
jbe
sbbb
xor
push
jb
leave
push
repnz
inc
dec
mov
xchg
cmc
add
mov
and
aas
lret
add
inc
cmpsl
dec
inc
adc
mov
or
aas
gs
or
clc
and
cmp
mov
push
and
and
cmp
leave
psraw
repnz
roll
mov
fwait
das
adc
inc
enter
enter
pusha
mov
insb
dec
push
shlb
push
loope
xchg
inc
xor
icebp
cmp
jae
mulb
xor
ret
popa
mov
cwtl
or
dec
mov
or
mov
nop
inc
inc
mov
cwtl
popf
xchg
insb
repz
lods
mov
test
add
mov
decb
ret
inc
lcall
adcb
fcomi
pop
fincstp
add
call
jbe
sbb
jecxz
adc
mov
test
push
rol
mov
es
dec
enter
lock
popf
inc
inc
sarl
aaa
pop
jp
icebp
and
ret
imul
aam
xchg
add
pop
int
mov
bound
sub
add
and
test
ret
adc
outsb
jl
mov
mov
pop
shrl
mov
filds
and
jp
jp
insl
fs
xchg
movsb
pop
cs
addr16
mov
or
or
sub
xor
cmpsl
push
ds
dec
push
inc
out
cmpsb
jo
push
scas
xlat
mov
sbb
mov
jle
sbb
inc
xor
rep
rcrb
negb
cmp
in
enter
mov
addb
out
cmp
push
lret
popf
fwait
xor
int3
or
cwtl
loop
addr16
andl
sbb
adc
leave
push
or
cmp
ljmp
fisubrl
and
mov
pop
outsb
push
movsl
and
xor
ret
mov
loopne
jg
andl
rol
popl
sarb
rorl
xor
test
or
inc
testb
movsl
jle
testb
sub
lods
lcall
lds
inc
lret
outsb
ret
imul
dec
shll
mov
int3
xor
das
repz
and
int
jb
test
in
scas
repz
mov
js
and
xchg
lcall
or
shrl
fistl
mov
dec
into
ss
xchg
arpl
jb
push
pushf
mov
dec
cmp
dec
xor
add
dec
dec
cwtl
sbb
add
xchg
je
add
jae
dec
fcmovb
std
adc
in
xor
dec
push
jg
mov
stc
xor
in
jecxz
fs
ja
dec
stos
fsts
test
pop
xor
sbb
push
imul
adc
xorl
nop
sbb
sbb
arpl
jno
jbe
daa
push
lock
push
jne
mov
imul
scas
pop
inc
divl
inc
sbb
jae
out
fwait
jnp
mov
arpl
out
dec
or
out
lcall
test
push
cmp
cmp
adc
outsl
push
outsl
mov
hlt
mov
sbb
sub
mov
mov
jmp
mov
lock
out
pop
out
push
push
xchg
push
call
or
div
sub
cwtl
out
xchg
cmpsl
push
aas
movsb
es
push
and
and
arpl
jmp
repnz
sbb
pop
jmp
outsl
test
jo
jb
daa
adc
int
call
xchg
ret
xchg
sub
add
xchg
cmc
sahf
nop
in
test
sbb
loop
ja
inc
xchg
movsb
mov
sbb
int3
loop
sub
cmp
mov
lret
inc
xor
mov
out
rorb
sub
cltd
test
inc
ja
xchg
jne
sub
mov
fiaddl
cmp
xor
cmpsb
imul
rcrb
mov
shrl
push
xchg
sbb
add
pop
mov
sub
and
dec
ret
or
out
dec
sbb
pushf
pop
xor
xchg
insl
stc
mov
fsubrl
cmp
dec
xorb
sti
ja
imul
lret
push
sub
shll
lcall
in
sbb
in
adc
pop
movsb
and
sbb
xchg
and
push
fstps
roll
dec
or
adc
ficomps
in
cmpsb
lea
rep
mov
mov
out
imul
cmc
test
push
pop
in
mov
sub
jnp
es
cmc
mov
push
aaa
jmp
cmpsl
xor
mov
xlat
pushf
or
dec
jp
and
sbb
test
xlat
enter
or
aaa
push
pop
mov
mov
das
fwait
add
cltd
jl
insb
inc
loope
int
push
or
pop
adc
sbb
fnstsw
adc
nop
mov
clc
or
fwait
push
pushl
mov
or
dec
mov
in
orl
imul
in
cltd
push
sahf
cmpb
inc
add
and
pop
inc
das
sub
adc
dec
test
adc
jo
adc
xor
push
xchg
sbb
lods
in
cmpsl
or
adc
in
pop
out
or
mov
js
call
int
testl
lret
fwait
mov
pop
adc
and
add
add
cmpsl
sbb
sub
jbe
dec
mov
inc
data16
clc
and
or
loopne
in
loopne
es
popa
aaa
mov
ficoms
mov
push
add
fdivrs
es
inc
movl
sbb
push
fcompl
sbb
inc
mov
dec
mov
mov
pop
cmc
int
jmp
sub
mov
lds
ss
mov
jg
sub
aaa
cmp
lea
jns
in
cmc
add
rorl
clc
ja
jle
pushf
mov
sbb
mov
cmpsb
sarb
pop
xchg
movsb
adc
movsb
sub
xlat
add
dec
data16
in
ret
cmp
xor
jp
outsl
pop
mov
mov
cmp
xchg
pop
in
push
int
cwtl
aaa
sbb
cmp
andb
inc
jb
rcrl
inc
jg
pop
mov
pusha
nop
adc
fdivr
das
arpl
scas
pop
leave
adc
imul
lods
in
and
jge
pop
shlb
cmpsl
inc
sub
mov
and
push
in
out
mov
imul
movups
jp
ret
jp
stos
xor
cld
bnd
or
xchg
sub
iret
jno
push
stc
aam
popf
arpl
push
sbb
fs
pushf
xor
push
mov
add
sbb
repz
pop
bound
shl
cs
rclb
int
repnz
adc
mov
in
sbb
loop
sub
mov
pushl
dec
test
repnz
mov
imul
and
sbb
xor
push
ds
inc
daa
sbb
mov
push
call
pop
nop
fistl
jle
sbb
dec
int3
arpl
adc
cmp
jno
jge
out
cmp
push
sbb
sub
test
leave
fldenv
loope
push
jmp
stos
imul
sbb
add
xchg
cmp
popf
sbb
sbb
bound
lods
mov
fmull
arpl
stos
push
repz
shlb
ret
inc
push
xchg
insl
mov
sbb
lods
insl
call
xor
movsl
ss
test
mov
or
and
push
movl
in
call
mov
inc
push
movsb
hlt
push
add
sbb
and
sbb
shrb
jg
cmp
out
pop
ss
fstps
test
lcall
iret
xor
std
jns
sbb
or
cmp
inc
int
adc
icebp
lahf
aam
or
idivl
test
cmp
pop
sub
xor
lods
sti
inc
rorl
cmp
int3
sbb
xchg
lcall
lcall
das
into
jmp
dec
mov
push
stos
popa
orl
push
add
and
mov
enter
fldcw
or
mov
dec
cmpsl
dec
inc
ficoms
rcl
je
lcall
xchg
jbe
inc
cwtl
pusha
pop
je
repz
clc
cs
xchg
pop
cmc
add
movaps
jle
ds
push
sub
jo
into
aas
inc
xchg
cltd
cmovle
xor
out
inc
push
jge
les
inc
scas
inc
adc
and
dec
sub
and
aas
xor
mov
test
or
jne
add
sub
iret
scas
jno
jg
aas
and
int3
jbe
xchg
test
mov
push
aaa
lock
loope
mov
mov
repnz
clc
out
subl
popl
dec
sbb
cld
xchg
pop
mov
test
cli
jo
xchg
ljmp
outsb
sub
adc
ret
pop
fstl
inc
pop
mov
dec
and
xchg
test
imul
loop
fadds
jl
xor
and
jecxz
cmc
push
out
adc
mov
fnstenv
cmp
rol
cmp
pop
out
repz
pushf
xor
pop
test
nop
cmp
jle
add
cmc
movsl
push
adc
mov
in
aas
fimull
add
xchg
les
lock
data16
inc
hlt
shl
mov
adc
cmpsl
mov
push
add
inc
sbb
and
mov
outsl
stos
jg
mov
cmp
cmp
mov
rol
out
aas
fsubrs
lret
loopne
test
add
outsb
inc
lret
outsl
dec
sbb
test
dec
fsubl
pop
adc
lahf
sbb
push
ja
dec
jo
out
push
inc
data16
out
lcall
adc
loope
addr16
pop
aas
in
shll
jp
rcr
mov
push
pop
dec
repz
leave
lret
imul
insl
cmp
stc
jne
cli
jge
xchg
sbb
fninit
icebp
jmp
fsts
popf
or
xor
inc
mov
push
jmp
mov
out
xchg
scas
aad
adc
ljmp
dec
mov
movsb
loopne
inc
inc
gs
xor
and
push
or
lret
ja
test
mov
mov
push
push
dec
jb
movsl
int
int3
inc
mov
inc
push
xchg
loopne
into
shrl
outsb
enter
inc
stos
adc
adc
inc
or
add
ret
stos
mov
push
xchg
js
xchg
jle
fcmovnb
mov
pop
mov
insl
insl
jp
fisubs
or
stos
sbb
pop
scas
out
pop
imul
lods
lods
mov
xchg
sub
int
test
les
xor
test
xchg
pop
ds
or
add
pop
nop
dec
jg
mov
xorl
in
jo
xor
ja
jle
dec
inc
jne
fisttps
data16
les
es
enter
cltd
aam
insb
sbb
add
loop
sub
pop
fcomps
pop
pop
mov
incl
inc
imul
adc
clc
cmp
adc
clc
fwait
repnz
and
cmp
mov
fcmovb
sub
fsts
jecxz
or
xchg
aas
mov
mov
lcall
push
out
jno
or
sub
roll
repnz
jno
cmp
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
add
push
push
std
mov
add
add
and
push
mov
push
stos
jle
iret
adc
push
sbb
add
daa
test
ret
adc
cmp
cmp
or
mov
in
out
subb
mov
push
movsl
mov
js
idiv
adc
cmp
scas
scas
adc
jle
pop
loopne
push
stc
xchg
add
or
cmp
dec
sub
sbbl
inc
aaa
adc
call
or
xchg
dec
mov
enter
mov
cmc
xchg
das
mov
push
clc
cmp
lods
and
dec
push
xchg
mov
mov
nop
mov
aaa
and
pop
jge
test
adc
fcoms
inc
and
cmpsl
scas
ljmp
sbb
cmp
inc
mov
stos
insl
mov
jl
ljmp
test
aam
xchg
push
dec
loopne
and
test
sub
push
fisttpl
cli
lods
pop
cwtl
add
xchg
add
std
mov
lods
sti
lods
iret
mov
fcomip
fstpt
pop
xchg
push
int3
sub
sarl
push
jmp
add
outsb
int3
jl
cmp
push
cmpb
xchg
pop
push
stos
dec
fidivs
out
test
cmpl
sahf
mov
sub
pusha
ljmp
pusha
push
mov
inc
xchg
into
les
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
mov
ja
in
cmp
pushf
into
jbe
