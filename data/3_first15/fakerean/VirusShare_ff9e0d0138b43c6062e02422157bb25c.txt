sbb
add
divl
fsubl
arpl
inc
rcr
lahf
or
jo
inc
cmp
adc
ret
push
out
mov
pop
dec
imul
and
adc
aad
lahf
mov
scas
or
inc
sahf
test
xchg
test
sarb
push
jecxz
mov
loope
pop
shrl
daa
mov
hlt
pop
mov
lods
repz
and
out
inc
or
inc
pop
test
ret
out
bound
sub
push
adcb
jp
cld
cmp
mov
outsb
pop
mov
pop
or
pop
inc
scas
inc
pop
mov
jne
daa
fbld
sbb
cld
dec
jb
jns
hlt
divl
jl
add
pop
sub
or
movsl
add
lea
jb
stos
xchg
xor
ss
out
or
mov
cwtl
subb
push
adc
mov
movsl
dec
cli
push
ret
decb
inc
popa
mov
jbe
movsb
repnz
xchg
xor
sar
leave
es
xchg
add
in
and
arpl
xchg
outsb
clc
sarb
popa
and
add
outsl
pop
sbbl
enter
jp
inc
das
adc
mov
fpatan
inc
lea
scas
mov
push
les
cltd
repz
jp
stos
aas
push
push
fs
cmp
adc
sub
push
addr16
or
lret
mov
xchg
mov
rolb
push
aaa
test
rcrl
push
push
movsb
loop
addr16
or
stc
test
jp
ja
pop
xor
cmc
sarl
add
mov
fwait
cmp
or
mov
cmc
fbstp
or
imul
cmp
mov
lahf
rolb
inc
aad
std
pop
aam
mov
ljmp
cmp
cmc
push
jge
or
sub
add
sub
mov
mov
adc
cmp
cmpsb
inc
add
addr16
jns
jo
sbb
orl
sub
xchg
mov
mov
int3
pop
dec
sub
jmp
mov
xor
int
inc
dec
stos
movb
nop
or
lods
pop
aam
loope
jns
pop
jb
arpl
repnz
das
add
inc
stc
or
enter
aad
or
add
mov
insl
hlt
pusha
mov
pop
aas
dec
aaa
sub
loop
mov
cmc
je
xchg
pop
xor
mov
mov
cmp
cwtl
adc
xorl
mov
stos
lret
out
les
sbb
js
rep
mov
adc
pop
addr16
loop
shl
popf
movsl
mov
jl
inc
jae
fst
fidivrs
pop
mov
jp
xlat
jnp
mov
mov
fldl
pop
sbb
add
pop
test
cld
js
pop
gs
xor
push
fisubrl
xchg
push
fs
sti
testl
pop
mov
cmpsl
adc
push
jns
movsl
mov
and
adc
outsl
push
add
xor
in
push
lea
test
add
ret
popf
pop
cli
mov
cli
or
rolb
mov
rclb
jno
jmp
dec
arpl
and
test
daa
lds
out
sub
test
mov
xchg
dec
fwait
inc
stos
xchg
mov
aaa
push
jecxz
rorb
outsl
mov
and
lods
adc
xchg
mov
sti
pop
pop
pushl
sbb
cmpsb
ja
jecxz
pop
iret
pushf
xor
sub
mov
inc
mov
cs
jae
jmp
mov
mov
in
dec
dec
or
xor
cmp
jl
enter
sub
out
js
push
out
gs
mov
or
push
filds
sub
pop
xchg
push
in
inc
out
iret
lret
loop
and
push
jecxz
mov
subb
fldenv
pusha
push
imul
js
insb
inc
and
in
cmp
add
imul
in
lcall
dec
jecxz
bound
movsl
push
or
pop
mov
jmp
xorb
add
xor
push
test
aas
stos
aam
fcoms
sub
xchg
cmp
mov
cmp
stc
mov
dec
and
pmuludq
sub
dec
fisubrl
sbb
jns
int3
rolb
call
mov
inc
fs
mov
mov
ret
add
cwtl
shl
fidivrs
js
popf
cld
out
imul
or
sub
and
mov
sub
in
movsl
scas
mov
sub
data16
movsl
inc
jl
pop
pop
sbbb
outsl
cmp
fdivrl
xchg
and
aam
jp
jb
sti
dec
inc
int3
sbb
mov
xor
mov
jp
mov
in
mov
push
and
jl
push
xchg
pop
pop
add
add
xorl
imul
fcomps
sub
outsl
sbb
push
inc
jecxz
or
xchg
popw
xor
cmp
in
scas
lods
nop
stos
mov
lcall
adc
adcl
adc
in
mov
jae
mov
jl
mov
out
loop
hlt
test
or
in
sub
lds
or
adc
out
test
pop
in
lds
xchg
aad
nop
nop
arpl
stos
push
mov
addr16
pop
insb
mov
repz
repz
lret
mov
dec
mov
notl
test
std
loope
bound
sbbb
out
push
pmaxub
sti
mov
jle
dec
add
insb
imul
cwtl
jns
pusha
and
sbb
aas
sbb
sbb
loope
cmp
xchg
mov
dec
scas
cmp
movsb
icebp
dec
cmc
xor
fwait
lock
sbb
push
div
js
out
stc
out
pop
filds
repnz
inc
mov
dec
nop
push
in
pushf
mov
push
jne
les
xlat
adc
dec
inc
daa
js
shl
pop
jo
pop
mov
sti
adc
pop
pop
xchg
xor
xor
xor
pop
test
icebp
sub
iret
loope
sbb
xor
push
sbb
fimuls
pop
lock
dec
in
mov
inc
aam
mov
mov
cltd
lock
cli
dec
sti
ficoml
es
call
daa
das
addr16
mov
cmp
lods
je
push
cmpsb
sbbb
cltd
fstps
xchg
minps
sub
stos
cli
xor
push
je
mov
in
lods
mov
mov
fistpll
bound
ds
ret
addr16
in
in
addr16
addb
jg
daa
inc
dec
in
cwtl
mov
outsl
xchg
cmc
mov
std
adc
scas
mov
loopne
sbb
in
and
jmp
mov
cld
push
stos
out
mov
adc
test
mov
js
mov
push
rcrl
xchg
and
and
sub
pop
pop
cs
test
lret
sti
mov
std
aaa
outsl
bnd
jge
xor
test
sbb
les
loopne
jp
push
test
es
hlt
icebp
mov
popa
mov
push
imul
cltd
mov
stos
xor
sbb
mov
and
jecxz
aaa
jne
and
push
pusha
xchg
add
lahf
adc
xchg
push
sbb
jl
cmp
mov
stc
push
dec
inc
jns
push
aad
xchg
loop
adc
jb
sarb
mov
sbb
jp
jle
fistps
pushf
cmp
jbe
test
sbb
shlb
ss
adc
dec
pop
stc
ja
out
xchg
fcomp
int
xchg
jns
sub
dec
les
fisubrl
xchg
ljmp
mov
dec
and
popl
mov
ljmp
sub
inc
mov
filds
sub
mov
and
inc
cmp
outsb
sub
adcl
fdivrs
mov
or
or
out
and
sub
shll
imul
addr16
ret
jecxz
mov
xor
pop
pop
lock
mov
pop
hlt
mov
push
pop
mov
movsb
pop
and
jno
lea
push
cmc
mov
testl
pop
loope
imul
push
mov
subl
mov
ljmp
outsb
xor
adc
sahf
jo
and
movb
push
mov
arpl
scas
or
out
xor
rcrl
mov
cmp
inc
mov
dec
jno
repz
fs
cltd
ja
dec
push
jbe
mov
fmul
outsb
push
push
dec
int3
rcll
mov
mov
cmp
push
popa
jne
outsb
xor
rclb
jle
jo
mov
dec
adc
jmp
nop
jmp
jno
mov
test
in
xchg
mov
iret
movsl
aaa
xor
outsl
push
cmp
sub
push
fsts
mov
arpl
jmp
mov
push
dec
mul
sub
rol
mov
xchg
mov
mov
fcoml
xor
or
test
lcall
pop
mov
insb
fs
push
scas
sti
outsl
fs
push
out
call
mov
add
loop
jmp
inc
iret
xchg
outsb
ljmp
test
test
popf
jnp
jp
jmp
pushf
jbe
inc
add
ret
dec
pop
in
rcl
aas
push
std
icebp
dec
loope
lea
test
mov
lahf
mov
jns
repnz
jp
mov
mov
sub
jge
rolb
outsl
fidivrl
sahf
push
ss
outsl
inc
lock
mov
mov
and
addr16
sbb
enter
std
outsl
sub
sbb
mov
imul
sbbb
jle
push
inc
and
jmp
ja
and
or
sbb
cwtl
cwtl
push
xor
xor
xchg
pop
mov
lcall
and
xor
jmp
outsl
pop
int3
xchg
aas
add
cltd
push
ds
xlat
shll
push
jb
or
mov
xchg
add
dec
frstor
aas
push
ret
cld
adc
pop
xchg
push
push
or
mov
jp
sbb
ds
fsts
out
or
mov
or
cmp
dec
pop
orl
clc
and
push
sub
mov
sub
test
inc
jle
adc
dec
decl
int
outsl
es
jo
xchg
mov
pop
sbb
xchg
lds
jmp
dec
push
and
sub
imul
sbb
jne
cmc
xor
pop
sti
in
vpsubb
mov
lret
fsubs
mov
or
stos
and
lcall
cmp
jo
sub
aam
add
arpl
pop
push
mov
pop
xchg
sbb
fwait
xor
popa
jmp
mov
mov
jge
insl
enter
adc
mov
shrl
out
inc
out
inc
cld
fwait
mov
jge
mov
hlt
cwtl
pusha
xchg
pop
xchg
mov
rcrl
xchg
add
scas
mov
xchg
repz
pop
sub
xor
imulb
adc
mov
cmc
fucom
xor
xchg
in
jo
xor
xchg
mov
lretw
sub
push
jle
incl
loopne
add
inc
cmp
call
in
mov
sbb
js
int
popf
mov
or
ret
adc
rol
or
sahf
adc
imul
movsl
insl
daa
pop
jb
jmp
mov
setp
out
shlb
jbe
std
mov
scas
jns
mov
xlat
jno
pop
sahf
fldt
push
adc
mov
adc
dec
sbb
pop
clc
loop
push
cli
push
add
fbld
cmp
out
cwtl
xchg
sub
lock
pop
test
lret
test
pop
rclb
add
int3
jae
ret
dec
pusha
or
xchg
lret
pop
cld
jnp
decl
es
pop
loop
leave
pop
mov
mov
cmpsb
rcll
aad
shr
in
xlat
inc
push
test
and
xorl
rcll
xor
push
testb
jmp
ja
fldl
dec
hlt
fwait
aad
shl
and
jns
sbb
mov
mov
je
mov
pop
sbb
call
aam
mov
dec
xor
pop
mov
es
lock
gs
jp
cs
cmpsb
mov
cwtl
lret
cmp
and
pop
cs
adc
pop
dec
cltd
mov
xchg
popf
dec
orb
push
mov
mov
stos
into
test
jo
insl
jge
nop
jecxz
ret
into
stc
or
dec
cmp
mov
scas
add
fcompl
jg
decb
std
pop
cmp
pop
cwtl
aam
inc
mov
cmpsl
adc
sbb
das
cmpsl
and
lea
xchg
lods
pushf
dec
bound
mov
repz
out
scas
test
cmpsb
xor
jge
pop
xor
inc
mov
enter
pop
jns
inc
sub
xchg
inc
sbb
imul
rorl
mov
sub
mov
cli
xor
mov
push
mov
xor
mov
out
daa
and
mov
pop
shll
mov
sbb
pop
xor
fildl
out
pop
push
std
add
out
rorl
mov
pusha
imul
mull
clc
xchg
imul
aas
cmp
shrl
push
shll
iret
add
in
push
arpl
in
ret
mov
and
jecxz
mov
mov
movsl
dec
shlb
dec
sub
cli
aam
ss
push
mov
and
sub
jl
push
push
sub
mov
or
test
outsb
pop
imul
inc
mov
shl
xchg
mov
dec
pushf
or
pop
inc
xor
inc
adc
push
xor
popf
clc
lds
orb
cmpsb
jmp
pop
loope
xor
fldl
dec
lds
sbb
cmp
addr16
cmp
rcrb
cld
loop
cmc
add
dec
cmp
or
push
ret
hlt
jge
pop
je
in
adc
js
jge
add
dec
repnz
movsb
lret
and
lods
jo
jg
mov
ljmp
mov
xor
dec
mov
dec
pop
mov
dec
push
stos
das
mov
and
das
mov
fidivs
push
xchg
and
lock
loopne
fsubs
scas
fcoms
mov
clc
jmp
push
mov
adcb
jno
test
jge
ljmp
test
aaa
loop
cwtl
test
xor
dec
lahf
jecxz
je
cmp
stc
shrl
les
and
push
cltd
shlb
add
cmp
dec
dec
or
in
pop
jb
ret
lock
in
dec
out
loop,pn
and
push
lea
std
fiadds
jecxz
dec
inc
push
gs
cmp
push
lea
mov
arpl
fsubp
aas
ret
or
mov
dec
mov
adc
aaa
lret
or
push
addr16
scas
mov
and
cmp
or
jp
call
push
mov
mov
outsl
nop
stos
pusha
pop
jbe
sbb
xchg
mov
rcrl
jmp
cmc
xor
cmpsb
mov
out
in
add
out
iret
lds
fiadds
pop
add
jnp
jp
push
push
insb
ds
and
mov
add
pop
cmp
dec
xchg
mov
mov
lahf
pop
insl
lods
sbb
outsb
sub
xchg
cmpsb
pop
push
mov
or
push
daa
insb
jno
fldl
push
icebp
fs
pop
outsb
push
inc
cltd
lods
data16
jmp
mov
inc
cmp
pop
sbb
mov
leave
repnz
sbb
sub
gs
fcmovnb
push
push
mov
cmc
mov
cmp
xchg
ret
imul
out
in
cld
insb
imul
sti
ret
lods
pusha
cmp
clc
cmp
dec
jne
test
sub
adc
xor
mul
jns
ret
or
xor
cmp
fidivrs
pop
out
mov
outsl
repnz
push
imul
xchg
inc
xchg
push
or
mov
je
repz
loop
push
inc
xor
cmpsb
jecxz
mov
shl
call
jae
cmp
mov
sub
dec
mov
or
dec
xorl
sbb
inc
lcall
int
sbb
push
mov
ja
push
add
fiadds
sub
xchg
call
outsl
lret
aad
mov
pop
repz
outsl
scas
test
push
mov
jne
pop
or
xor
fsubrl
hlt
dec
popl
cmp
inc
mov
hlt
jns
mov
mov
dec
fstps
pop
and
xor
scas
pop
xor
cs
loopne
adc
jo,pt
jmp
cmp
movsb
aad
cs
jmp
sahf
rcrb
inc
iret
xor
push
jns
sub
jb
jp
pusha
xchg
ret
push
insl
bound
or
fwait
pop
leave
xlat
lea
push
out
cltd
jbe
mov
push
adc
mov
xchg
lea
dec
cwtl
xchg
adc
dec
mov
sub
fisttpll
pop
push
int3
popf
mov
jecxz
shl
addb
mov
rcll
mov
out
xor
mov
lea
push
mov
std
mov
pop
out
fwait
push
mov
mov
mov
mov
mov
in
push
lock
pop
and
inc
cmp
cltd
mov
mov
outsb
and
jl
push
push
test
mov
adc
into
pop
adc
mov
jecxz
sahf
adc
ffreep
and
mov
jmp
out
or
xor
cmpsl
xor
dec
cmpsb
pop
dec
adc
jno
pop
mov
sbb
pop
mov
pand
loope
dec
mov
fdivrs
xor
xor
lcall
fs
js
sub
test
dec
frstor
xor
mov
push
mov
mov
daa
or
jb
mov
and
aam
push
xchg
fisubl
add
or
mov
fimuls
gs
cmc
xor
dec
xor
jne
mov
inc
pop
cmp
cmp
or
mov
cli
mov
inc
xchg
sbb
fucomp
adc
add
stos
push
stos
cmp
into
ret
adc
insl
shl
lret
jmp
jo
or
pop
bound
lds
dec
stos
mov
dec
lahf
xchg
pop
jle
xchg
sahf
dec
and
xchg
popa
movsb
lock
xchg
xor
add
shll
xlat
movsb
dec
inc
mov
les
cmpsl
addr16
inc
push
sti
lods
mov
decb
insb
jno
adc
push
lret
jne
xor
jns
dec
idivb
mov
mov
add
pop
sub
xor
and
sub
fnstcw
fs
pop
xchg
in
xor
pop
scas
fs
insl
xchg
fdiv
fwait
xor
adc
test
add
add
fwait
mov
jle
and
daa
or
repnz
cmp
cmp
add
or
mov
pop
mov
stc
sbb
xchg
jne
in
inc
fisubrs
xchg
jecxz
loopne
pop
stc
addr16
mov
xorb
cmp
fdivrs
adc
mov
repnz
fists
sbb
xlat
sbb
les
pop
sarl
mov
mov
and
mov
or
sub
cli
ljmp
jno
xchg
xchg
roll
push
mov
pop
shrb
dec
lret
fimuls
sbb
insb
inc
in
dec
cmpsb
mov
fwait
je
es
cmpb
or
and
les
out
cli
jg
push
pop
inc
cmp
jmp
add
fwait
adc
add
sub
rolb
aas
jnp
mov
out
test
into
cli
in
xlat
push
mov
add
movsb
push
adc
mov
test
xlat
mov
dec
jg
push
test
ljmp
out
push
sbbb
mov
cmp
loop
jb
or
roll
mov
cli
cli
jge
leave
pop
and
xor
pop
fists
pop
cmp
xchg
mov
push
in
call
lods
sbb
and
cmp
sub
adc
jo
scas
sarb
repnz
rolb
xchg
test
in
movsb
cs
mov
xchg
mov
push
adcl
adc
mov
lods
arpl
fwait
add
jle
push
out
mov
test
shr
dec
clc
decb
dec
hlt
int3
ficomps
das
movsb
mov
pop
dec
adc
cmpsb
lods
shlb
adc
jo
xchg
jo
out
sahf
jg
push
mov
iret
decb
mov
in
hlt
es
fstl
ret
inc
fistpl
sub
ja
pushf
lret
add
xchg
test
clc
xor
lock
dec
pop
add
int3
jle
adc
mov
inc
cli
popf
dec
mov
jp
divl
push
cltd
clc
add
test
pop
icebp
bnd
into
out
add
ja
cltd
insb
fdivrs
mov
dec
iret
xorb
js
jp
aam
cmc
jge
lcall
clc
aaa
mov
mov
dec
jns
mov
xchg
inc
scas
mov
mov
insb
mov
lahf
ret
push
mov
and
cmc
dec
push
sahf
int3
sub
insl
jo
jno
push
movsl
out
bound
pop
aas
fstl
icebp
sub
popf
pop
hlt
rorb
and
mov
cmp
cmp
roll
xor
pop
daa
pusha
roll
adc
sbb
and
adc
inc
int3
or
push
mov
rcr
and
out
cmpl
mov
ret
cld
jl
sti
mov
mov
out
mov
daa
divl
outsb
cli
push
jmp
mov
mov
insl
xchg
ljmp
cld
pop
xor
adc
ret
pop
sbb
and
call
xor
push
mov
icebp
and
test
adc
int
mov
xorb
lret
xchg
enter
and
xchg
mov
adc
jge
fwait
movsl
add
or
insb
decb
xlat
sbb
dec
pop
cmpsl
push
mov
in
add
stc
sbbb
lcall
movsb
inc
loop
cmp
sub
dec
mov
scas
icebp
push
stc
cmp
xchg
inc
lock
push
pop
je
notl
movsl
xor
dec
gs
aam
jp
jle
cmp
loop
ss
and
adc
in
pop
mov
add
mov
stc
add
ret
and
mov
and
mov
mov
insl
mov
pushl
or
add
arpl
cmp
mov
mov
xchg
inc
fiadds
fiaddl
in
call
loop
arpl
outsl
int3
pop
push
sub
cltd
and
add
cmpsl
xor
hlt
jecxz
mov
ficomps
hlt
mov
lahf
xchg
or
xchg
mov
jp
popf
addr16
and
leave
xor
pop
mull
dec
mov
lods
sub
and
xor
stos
aad
push
jae
jl
mov
lea
cmp
xor
and
push
mov
add
jno
inc
cmp
cmpb
inc
enter
loope
das
into
pop
je
das
cld
xor
xor
fisubrs
adc
sub
dec
and
mov
jecxz
dec
fcoml
shrb
enter
pop
mov
mov
push
fidivl
mov
inc
lods
shl
shrl
aas
and
xchg
pop
test
mov
fsts
add
dec
push
lds
xor
mov
cli
into
pusha
ret
and
adc
aas
pop
stc
test
adc
jno
pop
jl
mov
mov
adc
jle
aaa
inc
or
out
adcb
or
jo
and
aad
test
cmp
in
jecxz
ljmp
sbb
mov
loope
addl
inc
nop
jno
inc
scas
negb
icebp
xchg
mov
inc
stos
insl
push
push
inc
lods
fidivrs
fidivrl
cs
cmp
inc
or
outsl
in
fcoms
dec
jp
pop
mov
xchg
outsl
sti
sbb
loop
jp,pn
icebp
clc
dec
xchg
loop
mov
mov
mov
dec
lea
frstor
cli
xlat
sub
and
push
orb
cmp
pop
xor
popf
mov
repz
lea
repnz
add
sti
ds
pushf
mov
pop
cld
andl
incl
ja
ss
call
adc
mov
xchg
fcomp
mov
aas
fcompl
repz
or
xchg
movsb
daa
fldl
out
lcall
inc
xchg
inc
popf
mov
xor
mov
adc
repnz
sti
sbb
repnz
ss
stos
sub
in
mov
jo
add
movb
test
xor
test
into
ret
jnp
xchg
adc
negl
sub
out
pop
and
lods
jae
mov
jg
das
cmp
pusha
dec
lea
sahf
imul
dec
push
aam
imul
popf
pop
mov
gs
cmpsb
test
out
mov
pop
adcl
ret
daa
inc
inc
mov
popa
cld
daa
sub
push
dec
cmp
dec
pushf
in
xchg
adc
movsl
and
in
mov
adc
mov
or
cmc
mov
cmpl
es
into
movsl
xor
mulb
cwtl
cmpsb
xchg
inc
mov
sbb
out
test
iret
aad
in
push
fcoms
call
sub
adc
sbb
xchg
add
pop
inc
test
and
ja
dec
xor
pushf
xchg
or
jbe
jne
pop
xchg
mov
cmp
fiadds
shlb
add
pop
icebp
sbb
enter
scas
fcos
fcomps
ret
cmpsb
or
adc
mov
cmp
xor
cltd
pop
sahf
out
iret
mov
xchg
aam
repnz
or
dec
xchg
push
stos
cmp
mov
or
cmp
xlat
mov
ljmp
aas
fmuls
enter
repnz
fldt
mov
shll
addb
loopne
xlat
or
jae
adc
xchg
iret
in
ficompl
mov
sarl
add
scas
pop
push
mov
jns
test
pop
xchg
mov
mov
pushf
lock
and
in
decl
dec
dec
hlt
out
cmpsl
fldcw
int3
push
mov
add
xchg
jl
pop
frstor
in
push
mov
cmpps
xchg
sub
sbb
ljmp
inc
outsl
cwtl
aad
stc
cld
mov
push
ljmp
pop
cmc
mov
daa
sarl
cmp
inc
movsb
jns
dec
cmc
and
sbb
sbb
xor
cmp
jbe
insb
and
jb
pop
in
mov
cwtl
nop
ds
mov
lods
cmp
shll
cltd
xor
xor
ret
ljmp
jl
push
adcl
pop
outsl
rcl
out
inc
sbb
nop
shr
cwtl
cmc
xchg
mov
cmc
iret
sbb
mov
sub
mov
mov
xchg
xchg
ret
jne
add
test
xchg
out
lods
sti
xor
sbb
repz
pop
faddl
aas
push
lret
cmc
xchg
sub
lods
mull
loop
pop
pop
sbb
pop
cmpsb
push
icebp
subb
jp
pop
ret
inc
test
mov
xchg
jne
fsts
ja
and
clc
scas
leave
sahf
mov
ret
aad
loop
rcrl
mov
and
andl
xchg
xchg
jbe
orl
outsb
mov
sub
and
lock
pop
cmp
jb
push
scas
or
pop
sub
scas
out
fsincos
popa
out
xchg
cmp
mov
ljmp
mov
mov
xor
add
add
and
push
and
mov
nop
jno
sub
cli
pmulhuw
insb
ret
sbb
xchg
mov
pop
jmp
or
nop
add
pop
scas
sub
enter
outsl
add
inc
out
fsubrp
pop
stc
dec
sbb
fwait
xchg
jecxz,pn
popa
popa
add
fdivl
cmc
in
cltd
pop
xchg
and
addb
test
dec
sbb
push
add
lods
int
xor
push
sbb
push
jbe
xor
mov
xor
scas
pop
xchg
lea
inc
je
popa
cmpsb
push
push
jb
lock
or
orl
and
dec
and
sti
popa
call
jle
test
pop
sbb
std
test
fbld
add
jp
push
fs
lahf
and
mov
xor
in
or
jae
or
pop
jge
out
push
mov
in
sbb
xor
adc
cmp
jge
push
test
xchg
int
pop
dec
inc
mov
pusha
in
lea
push
ss
pop
or
push
dec
cltd
lock
fcmove
jp
xor
into
loop
pop
pop
push
cwtl
cmp
add
xchg
imul
test
cmovae
push
shr
lods
inc
cmp
pop
out
into
adc
inc
aaa
lods
mov
mov
loopne
sahf
mov
mov
into
std
mov
and
dec
mov
stos
pop
call
ja
xchg
mov
jae
loope
xacquire
add
add
sub
outsl
cmp
mov
jmp
stos
enter
insb
xor
lods
insl
and
dec
loop
es
mov
imul
enter
ja
jle
add
or
mov
push
jae
out
lods
jne
aas
test
mov
push
push
or
pop
sub
mov
js
cmpsb
dec
xor
mov
dec
clc
xor
lds
sub
notl
add
sahf
loope
lret
mov
movsb
mov
sbb
ss
and
faddp
addl
mov
stos
lods
aad
aaa
aaa
je
in
lcall
aad
xchg
fldl
sub
xchg
movsl
negb
les
out
daa
je
filds
xlat
nop
addr16
lods
daa
mov
fs
test
lcall
into
into
sub
cwtl
mov
pop
push
addb
fsubr
pusha
lods
movsb
psubsb
push
shlb
mov
xor
hlt
xchg
mov
pop
mov
mov
call
idivl
pop
xchg
movsl
stos
mov
addr16
ljmp
push
inc
cmp
cmp
jmp
in
fists
xor
loope
xchg
cmp
add
xchg
loopne
mov
movsl
push
push
ret
sbb
cmp
dec
lret
pop
fsubs
or
adcb
or
sub
int
xchg
mov
sahf
push
or
push
mov
jp
adc
sub
aam
and
outsl
sub
adc
mov
dec
xchg
fdivs
add
aas
and
jl
sarb
mov
xorl
mov
sbb
jecxz
sbbb
jle
push
sbb
xor
inc
jmp
je
insb
std
mov
call
pop
cmp
out
adc
add
test
jne
fsubrp
aas
jbe
incb
test
mov
push
cli
adc
jns
xchg
inc
add
fisttpll
cld
out
jl
in
xor
cwtl
xchg
popf
pusha
mov
jge
arpl
adc
lds
pop
int3
aas
arpl
andl
sbb
daa
xchg
orb
int3
jmp
jno
lret
iret
xchg
cmp
js
test
sbb
add
pusha
fstpt
test
sub
xchg
xchg
cld
movsb
or
loop
fmul
les
jg
imul
cld
shlb
cmpsb
call
pop
push
pop
lods
xchg
sbb
pushf
in
pop
mov
fisttpll
shll
sub
add
adc
lods
sti
jo
aad
mov
jecxz
xor
sti
into
test
cmpsl
movsl
mov
stos
mov
pop
mov
sbb
divl
sub
adc
shll
sub
int
push
xchg
out
push
test
fistps
add
cltd
push
imul
adc
fcom
outsb
ficoml
mov
fcmove
lock
out
pusha
jl
clc
sub
gs
jecxz
in
adc
cs
jmp
lods
and
cmp
sarl
subb
jg
mov
lock
int3
scas
xchg
push
cmp
mov
rcll
xor
in
sub
rcl
inc
int
cmp
paddsw
sub
insb
cld
repnz
movsl
dec
nop
xchg
mov
stos
js
jno
divb
fidivrs
addl
xchg
das
es
push
sub
outsl
and
jb
lcall
aas
xor
pop
andl
cmpb
add
dec
inc
lods
jno
pop
lret
xchg
out
cmc
jbe
out
push
mov
fwait
jg
sub
mov
adc
xchg
add
mov
ror
into
lea
cmc
pop
mov
cli
popa
paddusb
pop
jns
notl
mov
push
mov
insl
mov
add
outsb
mov
in
fxch
int
or
shrb
dec
leave
jg
add
lcall
ds
cs
ds
movsl
out
stc
xchg
cmp
cmpsl
jne
subb
mov
out
dec
sbb
scas
add
xor
cmpsb
daa
xchg
rcrl
movsb
ret
out
jbe
sub
mov
fidivrs
or
dec
std
mov
add
or
add
lahf
xor
mov
adcb
pop
or
das
shr
out
push
sub
test
shl
and
jmp
cmp
push
bound
es
adc
xor
jge
loopne
stc
push
sub
clc
push
insb
adc
lahf
mov
mov
ds
jecxz,pn
fmulp
stos
sbb
test
push
add
inc
xchg
aaa
in
in
and
scas
out
scas
and
mov
lods
jns
xchg
jle
insl
mov
push
data16
pop
pop
fs
stos
imul
sahf
jnp
subl
dec
test
fildl
xchg
mov
dec
pop
cwtl
xchg
fnstenv
shll
inc
xchg
jge
pop
sbb
mov
daa
stos
or
mov
mov
xchg
pop
int3
mov
sbb
cs
inc
icebp
push
xchg
inc
xchg
loope,pn
or
xor
movsl
decl
cmp
mov
mov
sub
cltd
xchg
adc
test
inc
int
mov
aad
mov
xor
jbe
aas
mov
add
lret
in
add
cmpsl
and
sub
mov
cltd
lock
inc
js
fwait
cmp
test
lods
rcrb
cltd
jnp
addl
shl
xchg
jge
lods
add
push
add
mov
xor
mov
into
shrl
pop
pop
arpl
out
enter
call
sbb
fs
out
xchg
push
gs
cltd
push
subl
mov
call
cmpsb
popf
cmc
js
jecxz
into
or
iret
vandpd
negb
frstor
ljmp
mov
outsl
cli
and
or
inc
xlat
in
pop
leave
shrl
push
pop
xor
mov
sti
into
mov
ss
data16
jge
stos
pop
xchg
pop
xchg
fnsave
jle
mov
sbb
inc
xchg
leave
jecxz
or
push
pop
dec
nop
inc
mov
inc
push
les
inc
loopne
orb
out
cmp
clc
lret
repnz
fisubrs
push
mov
cmp
xor
sub
arpl
xor
outsb
cmp
mov
les
xchg
push
xchg
and
pop
jns
xor
mov
cmpsb
adc
bound
or
je
adc
idivl
mov
icebp
cmpsb
push
jns
jecxz
data16
es
cmp
and
ud0
or
push
bnd
dec
or
push
lea
test
cmp
mov
out
sub
pop
iret
or
shlb
lods
test
sbb
fwait
xchg
fwait
xchg
mov
repz
scas
mov
xchg
xchg
imul
adc
cmpsl
orb
sub
in
push
mov
pop
push
jge
xor
shll
lret
dec
inc
lcall
pop
push
xlat
in
xor
mov
or
ljmp
test
inc
add
mov
mov
and
js
fdivr
and
orl
mov
call
cmpsb
dec
insl
aam
sahf
jecxz
call
cmpsb
dec
sbb
cmp
repnz
in
sbb
cmp
dec
jg
loop
xor
xor
arpl
jg
mov
xor
stc
and
out
inc
rcrb
mov
xor
sbb
repz
push
inc
cmp
xor
in
movsb
inc
lock
out
in
sahf
dec
in
enter
lcall
ss
inc
ljmp
lahf
sbb
mov
arpl
sub
lods
mov
lret
mov
mov
orb
fsubl
mov
ret
sahf
int3
and
xchg
sub
repz
loope
rcrl
imul
popa
adc
stc
sub
mov
in
inc
and
cmp
jo
inc
sub
dec
sbb
push
xor
cmp
xor
jmp
sbb
push
sbb
cwtl
pushfw
dec
add
mov
int3
cmpsl
dec
or
push
mov
xchg
or
xor
and
sbb
mov
add
call
or
dec
pop
movsb
fisubrl
insl
or
add
jne
in
jge
repnz
add
xor
call
push
sub
add
dec
dec
xchg
lret
js
adc
aaa
sub
cli
xchg
das
gs
rcrl
fwait
pop
repz
popf
jno
shlb
dec
pop
data16
loop
movsl
mov
xchg
and
pop
ss
es
clc
inc
jg
xor
repnz
xchg
fwait
mov
push
dec
sbb
jno
lcall
pop
or
lret
push
stc
xlat
jecxz
jle
xor
test
cmpsl
xor
xchg
or
ljmp
jo
dec
xchg
push
movsl
sbb
divl
pushf
cmp
icebp
js
mov
rol
fadds
cli
mov
lret
fs
pop
nop
mov
sub
scas
xor
dec
mov
jne
or
ret
xor
push
pop
cmp
jno
cmp
cmpsl
mov
mov
int
push
jo,pn
lea
rcl
cmpb
movsl
sub
cltd
movsl
mov
add
inc
les
or
fadd
mov
push
pop
mov
nop
and
aam
pop
enter
jb
ljmp
lock
or
mov
xchg
je
dec
push
pop
xchg
or
mov
dec
and
or
mov
flds
jecxz
mov
aaa
mov
jbe
pushf
in
popf
ret
pushf
ljmp
xchg
inc
mov
cltd
inc
sub
cmp
loopne
test
aas
shlb
imul
mov
std
cmpsb
jo
popf
loop
dec
sbb
cld
xor
dec
arpl
hlt
add
add
jp
jne
cmp
push
inc
jns
dec
sti
ja
adc
fnsave
mov
push
cli
dec
or
dec
cmpsl
pop
push
xchg
test
mov
fildll
fbstp
outsl
imul
into
call
pop
fistpll
jns
ret
cwtl
mov
add
pop
pop
sahf
pop
imul
sbb
jg
xchg
fdivrs
mov
leave
xchg
inc
push
aas
xchg
popl
addl
and
js
lahf
push
mov
loopne
hlt
pusha
dec
mov
sbb
inc
popf
pop
cmp
xor
mov
popf
imul
es
sub
xor
dec
mov
inc
jp
pop
adc
and
mov
test
mov
xchg
lret
xchg
lods
fnstcw
outsl
jle
pushf
and
mov
addr16
or
mov
call
mov
das
rcll
push
pusha
adc
pusha
pusha
push
je
nop
lcall
int
ror
cmp
mov
dec
push
push
fnstcw
insb
sbb
addr16
xor
js
dec
call
icebp
mov
mov
outsl
scas
push
push
sbb
inc
aaa
adc
and
inc
dec
arpl
sbb
imul
ret
or
push
sbb
inc
inc
mov
push
xchg
outsl
cmpsl
scas
pop
fldl
ret
loope
out
in
out
pop
mov
fucomp
inc
out
jp
adc
sbb
dec
ja
sub
outsb
popa
and
sbb
add
jp
inc
sub
test
pop
stos
fldenv
add
insl
rcrb
cmp
push
rolb
insl
mov
inc
mov
insl
enter
stos
xlat
lds
cld
js
insb
mov
pop
repnz
ds
aas
add
jmp
jmp
je
ret
int3
push
inc
push
nop
or
sub
lods
xlat
and
jns
sub
mov
sarl
in
cmpl
jo
jae
xor
mov
jp
xchg
inc
push
outsb
dec
push
movsl
sub
test
gs
lcall
dec
xor
adc
mov
dec
mov
and
stos
pop
call
cmp
xchg
movsb
sbb
mov
pop
testl
push
mov
pop
jge
les
pusha
in
sub
ret
or
pop
pop
xchg
test
orb
inc
in
in
push
mov
je
cmp
xor
mov
pop
pop
or
loop
adc
and
stc
je
adc
push
sub
cmc
jb
pop
int
cmp
cmp
in
xor
pusha
xchg
lock
lock
rcr
push
loop
mov
int
xchg
in
push
mov
outsl
push
sub
sbb
xchg
cmc
add
cmp
sub
xchg
mov
jo
sub
mov
jg
rorb
cmc
fmull
mov
repnz
out
xchg
leave
xchg
push
lock
dec
add
mov
dec
mov
cmp
mov
xchg
fcoms
push
adcl
rcrl
jb
jle
sub
cltd
jp
and
imul
and
or
mov
xchg
sub
insb
jae
jns
in
addr16
push
lods
andb
sbb
into
scas
mov
pop
ss
cmpsl
je
pop
hlt
in
xor
movsb
or
enter
xchg
adc
lock
pop
mov
cs
andl
push
xor
iret
sub
and
into
xchg
push
dec
pop
xlat
int
push
mov
in
je
jle
push
mov
and
adc
xchg
cmpsb
sbb
bnd
sub
fimuls
jp
fcmovnbe
stos
in
push
dec
xchg
jns
cmc
insl
and
cmp
cmp
adc
jle
xchg
insl
stos
xchg
ljmp
or
jae
fildll
dec
int
add
das
stos
sub
jl
push
mov
sbb
lods
xchg
cmp
cmpsl
lret
cs
aas
mov
and
movsl
pop
and
mov
in
int
mov
jg
arpl
xchg
mov
test
mov
mov
sbb
into
and
jmp
leave
mov
sbb
hlt
mov
std
aad
hlt
xchg
test
sub
lea
stos
test
lahf
stc
push
mov
les
ds
add
add
jp
scas
and
not
and
notrack
dec
negl
out
add
adc
xchg
add
lods
add
jle
pop
mov
test
or
pop
push
mov
mov
mov
inc
jne
sahf
test
fistpll
repnz
mov
xor
jmp
inc
mov
and
adc
rol
xchg
imull
mov
dec
inc
imul
push
push
outsl
xlat
ss
jb
es
or
ficoms
in
lahf
and
pushf
pusha
rcll
xchg
sbb
stos
and
jns
or
sub
out
inc
call
test
outsb
xor
icebp
mov
sbb
fs
cmp
sti
and
mov
lret
xor
fs
lea
xlat
sub
mov
loop
iret
icebp
cmp
mov
divl
mov
push
sti
test
xchg
mov
pushf
jae
ljmp
fsubrs
in
xchg
xchg
daa
jne
in
enter
out
in
aas
mov
sub
mov
push
je
push
or
mov
sbb
lods
daa
jne
mov
sbb
jle
jle
mov
jg
hlt
mov
icebp
aaa
test
inc
xchg
add
mov
es
jo
mov
jae
fdivrl
shll
mov
je
icebp
lret
in
add
mov
ror
adc
xchg
enter
push
mov
fwait
rcl
sbb
aas
fst
add
int3
push
pop
jns
ds
movsb
pop
cmp
bswap
nop
subl
loop
cli
movsb
mov
and
push
cmp
pop
js
jmp
dec
dec
aaa
mov
sbb
inc
sbb
inc
mov
xchg
push
rorl
out
lds
movsb
xor
mov
rol
arpl
inc
mov
mov
cs
push
out
popa
lock
insl
xchg
jl
in
adc
add
mov
rorl
add
ret
xchg
jge
repz
xchg
js
or
imul
ds
sbb
sahf
je
in
mov
js
decb
adc
nop
push
out
push
arpl
adc
jmp
xlat
jbe
pop
icebp
fwait
pushf
repz
pop
sbb
data16
xchg
cli
int3
jp
pop
ret
shll
mov
mov
int3
sub
dec
das
jecxz
xchg
aas
roll
jle
inc
xor
stos
xor
push
push
mov
addl
imul
cld
lock
xchg
and
push
xor
pop
dec
pushl
sbb
stos
iret
push
mov
fmuls
jb
jl
jae
xor
dec
adc
push
imul
movb
push
xlat
mov
pop
stos
inc
mov
xor
lahf
jg
push
loop
jmp
dec
cmp
pop
fldl
sbb
or
add
sti
push
je
pusha
lock
xor
lods
sub
and
rcrb
dec
cmpsb
jae
inc
and
loopne
dec
popa
adc
sarl
mov
and
stos
sbbb
push
out
dec
jbe
imul
js
xor
aad
jb
pop
mov
and
adc
sub
mov
fsubrl
or
call
loopne
jne
mov
lahf
daa
stos
fnstsw
push
ret
test
addr16
cmpl
clc
xchg
dec
nop
std
ficomps
mov
repnz
cmp
xchg
icebp
lahf
push
inc
xchg
cmpsl
jne
das
cltd
pusha
rcr
cmp
jnp
stc
push
sub
or
sbb
xchg
int
and
inc
jbe
dec
andl
test
push
mov
push
sbb
movb
cs
sbb
in
scas
andb
mov
fcmovb
pop
out
cltd
cmpsb
ljmp
ds
or
xor
pop
mov
fidivl
dec
sub
data16
fsubl
cld
add
out
fildl
arpl
mov
mov
pusha
call
negl
clc
pop
icebp
jbe
out
out
ret
and
cmc
adc
mov
mov
rcrb
sub
fsubs
adc
mov
pop
cmp
adc
and
repz
xchg
mov
in
mov
btr
mov
xor
xor
lods
lcall
sub
arpl
test
xor
xor
repz
bound
repz
or
test
movb
xchg
pop
out
out
xor
inc
dec
xchg
imul
sbb
adc
fadds
les
jg
mov
xor
inc
push
in
pop
or
sub
pop
andl
xor
call
das
pop
imul
sbb
dec
sub
popa
lods
add
data16
inc
shll
jp
out
nop
cld
and
aaa
cli
test
test
pop
pop
mov
fldcw
inc
mov
mov
call
dec
fistpll
insl
or
jl
or
outsb
arpl
js
mov
sbbl
icebp
ss
cmp
mov
mov
aas
sarl
adc
jecxz
inc
aad
and
pop
jmp
fstpt
dec
gs
add
ds
cli
mov
ja
sbb
lds
fisubl
mov
cmp
stos
pop
loopne
fdivrs
add
mov
in
pop
lods
adc
arpl
inc
cmp
std
mov
hlt
sub
sub
enter
and
sub
push
push
or
clc
popa
jo
sti
fwait
setge
pop
and
sti
xor
adc
xor
pop
push
stc
jns
pop
sbb
int
add
rorl
push
mov
fs
push
int
sbb
sub
shrl
or
cltd
push
cmp
stos
cmc
dec
or
scas
xor
adc
jge
in
insb
dec
cli
pusha
hlt
pop
stos
mov
lock
xchg
pop
sti
out
adc
cltd
mov
fisubrl
mov
xchg
ljmp
push
inc
loopne
mov
data16
repz
cmp
rcll
lds
or
and
pop
es
sbb
mov
lods
mov
andl
xor
jbe
jmp
pop
arpl
xchg
pop
lret
arpl
jns
addr16
outsl
lea
call
mov
dec
xor
mov
loopne
push
shl
mov
adc
pop
repz
ja
xor
cmp
pop
cmpsl
fmull
or
jg
pop
add
lret
xchg
test
cmpsl
sbb
cmc
jne
lret
push
inc
jb
call
gs
dec
jno
mov
loopne
mov
lds
cmp
add
hlt
push
rolb
mov
adc
repz
jns
jo
lret
ret
pop
insl
add
xor
sbb
insb
push
jl
jb
mov
add
addr16
mov
and
dec
popf
and
jns
outsl
in
addr16
mov
adcl
sub
ret
inc
repz
mov
cmp
ret
mov
mov
adc
mov
repnz
xchg
loopne
scas
iret
icebp
insl
cmp
insl
xchg
das
fildll
mov
into
dec
pop
stos
fcompl
je
jmp
push
scas
push
dec
or
out
mov
popa
fcomi
lcall
push
ss
cmp
mov
jge
pusha
dec
xchg
dec
scas
ret
lret
imul
ret
sbb
fisubrl
xor
lret
imul
adc
outsl
out
loope
lea
cmpsl
inc
daa
jno
movsl
popl
add
dec
xchg
lahf
stos
cmp
lahf
bound
loopne
ljmp
pop
addr16
in
mov
in
add
or
cmp
outsl
ljmp
xchg
imul
es
movsb
sbb
jns
cmp
xlat
lcall
addl
repz
ret
fisubl
inc
xorl
aaa
mov
in
sbb
lret
and
jae
imul
ja
cld
jno
adc
xlat
cltd
ljmp
call
andl
dec
js
fwait
cmpl
inc
adc
lds
mov
mov
pop
shlb
jnp
rclb
pop
cmpsb
xlat
dec
rcl
jae
mov
jns
addr16
jmp
sub
cmpsl
sub
mov
jmp
fcompl
xchg
mov
cwtl
xor
fchs
inc
lret
push
nop
add
movsl
ljmp
mov
sbb
sbb
dec
lret
mov
pop
loop
dec
jg
nop
scas
push
test
mov
scas
dec
les
in
jno
out
adc
fistl
jp
mov
jge
xor
or
ss
and
in
mov
inc
pop
loope,pn
ds
pop
les
and
daa
jns
push
ljmp
mov
mov
mov
inc
push
jno
rcl
add
cli
clc
mov
les
jmp
daa
sub
dec
push
mov
adc
xchg
lods
aam
fdiv
mov
mov
add
mov
mull
push
add
repz
inc
dec
push
mov
lahf
sbb
cmp
aad
sub
mov
jne
dec
or
pop
popf
pop
scas
sub
jle
dec
leave
iret
loopne
sbb
std
xchg
sbb
add
or
add
filds
mov
mov
fstpt
es
pop
mov
cmp
mov
es
push
or
outsl
repnz
repz
leave
lret
movsb
inc
xorb
push
nop
cmpsl
out
popa
or
icebp
int
shrb
mov
cmpsl
xor
loope
jecxz
ja
and
adcl
fcompl
stc
pusha
or
popf
pusha
out
jmp
ljmp
jno
push
iretw
cmp
dec
or
mov
mov
fwait
icebp
decb
call
push
inc
inc
jo
mov
mov
xlat
dec
mov
gs
fcmovnbe
cmpsl
popa
inc
fisubl
inc
mov
sbb
pop
dec
cmp
std
jmp
cmp
sub
push
lds
xor
cs
xchg
push
orl
incl
clc
jae
cwtl
popa
cmp
mov
test
fiadds
mov
shlb
mov
mov
push
das
and
fbstp
mov
jbe
cwtl
lcall
bsf
insl
rcrb
cmp
ss
ljmp
push
sbb
movsb
inc
or
sbb
sub
js
and
or
sub
in
push
jge
push
sub
movsb
mov
mov
ret
andb
xchg
adcb
arpl
xor
mov
cs
xorl
jno
adc
xor
pop
mov
mov
or
mov
mov
inc
int
mov
movsb
push
orl
movsl
mov
in
dec
mov
stos
jno
outsl
xor
inc
fdiv
icebp
or
mov
ret
ss
jnp
in
loopne
std
shll
push
bound
shrl
cld
mov
xchg
lds
fcomps
ret
cmp
enter
mov
es
xor
stos
sub
lods
push
lret
xchg
mov
fadds
mov
rcrl
mov
enter
mulb
xchg
mov
out
sub
mov
jae
xchg
mov
pop
add
push
push
mov
push
push
popf
adc
jle
cwtl
sahf
aam
xchg
mov
jp
sti
mov
push
ret
sub
daa
mov
jnp
cmpl
push
inc
push
mov
push
lock
xchg
les
outsl
imul
jb
lods
mov
and
jbe
data16
jmp
pop
mov
adc
enter
out
jnp
cmp
push
pop
pop
rol
sbb
aaa
not
mov
xor
sbb
enter
mov
mov
jmp
adc
mov
xchg
ss
mov
lods
xchg
aaa
cwtl
out
xchg
scas
int
dec
loop
pop
jo
ret
pop
std
rclb
into
add
stos
sub
fidivl
lcall
jnp
mov
pop
scas
in
lods
mov
jmp
das
pop
and
shlb
arpl
cmpl
push
daa
jbe
popa
cmp
movsl
mov
cli
repnz
mov
jmp
sbb
mov
push
enter
mull
push
enter
inc
bound
enter
lods
lret
xor
push
push
or
or
aas
mov
sbb
jl
xlat
cmc
jne
loop
lea
mov
cmp
and
and
lods
mov
lret
in
lret
add
popf
lock
jp
lahf
ss
mov
scas
lea
and
mov
scas
popa
adc
sbb
add
push
and
insb
rorl
adc
fwait
mov
outsl
dec
xor
jle
mov
push
mov
addb
push
lcall
inc
and
mov
scas
jae
mov
out
cmp
insb
cmpl
testl
mov
ficoml
adc
imul
xchg
es
negb
arpl
out
and
icebp
ds
scas
les
add
test
pop
iret
data16
jl
subb
cmp
inc
and
adc
frstor
int3
mov
xchg
mov
repz
pop
sbb
lods
adc
inc
stos
test
adc
cmpsl
cli
or
pop
lcall
dec
test
mov
insl
and
call
fwait
imul
sub
fcoms
cmc
cs
lret
xor
out
mov
stos
lds
stos
push
cmp
inc
mov
daa
out
pop
xchg
in
loop
inc
adc
mov
sbb
test
mov
push
and
repz
cmp
ds
add
and
mov
or
or
pop
xor
mov
mov
lods
stc
fnsave
fldt
outsb
inc
test
add
mov
cli
xchg
std
out
push
xchg
addl
xor
cmp
jmp
inc
push
mov
jo
lock
sub
xchg
lock
sub
sbb
mov
dec
xor
mov
jl
cltd
dec
in
hlt
sbb
test
stos
cmp
fmul
cmpsl
sbb
or
mov
inc
add
jne
xor
jmp
push
push
mov
cld
ret
add
or
cmpsb
jno
inc
jae
sub
mov
pop
outsl
and
or
cmpsb
hlt
jg
adc
fs
mov
rcrb
sahf
sarl
mov
icebp
inc
mov
dec
dec
sub
ljmp
popa
loopne
lock
fbld
push
sub
and
adc
repz
cmp
xchg
or
cmp
pop
and
add
mov
rcrb
cmp
pusha
out
mov
test
pop
sbb
xchg
xor
shlb
addr16
cmc
imul
int
in
sub
add
out
inc
shlb
cli
loope
loopne
mov
lahf
adc
rorl
aas
add
inc
pop
lea
and
in
shll
lcall
push
movsb
mov
nop
fisttpll
mov
inc
jb
add
sub
mov
rol
xchg
fucomip
fiaddl
pop
into
jno
mov
sti
pop
jmp
shlb
sbb
sbb
pop
inc
das
jno
jge
sub
bound
insb
lds
dec
aas
pop
mov
aad
xchg
ror
inc
and
in
mov
xor
cmp
cmp
fisubrs
scas
ljmp
push
insb
aas
int
mov
fidivrs
xor
pop
cltd
jae
mov
mov
push
cmp
scas
lock
pushf
cmpsl
and
rol
add
jg
mov
lock
jno
pushf
mov
fs
inc
insl
or
fdivl
std
mov
sahf
stc
dec
mov
imulb
sti
test
enter
fistpll
sbb
jnp
xor
push
cmc
lret
push
dec
sbb
daa
dec
pop
pop
mov
loop
xor
repz
addr16
xor
cmc
hlt
pop
jno
aam
xchg
pop
xor
inc
xor
pop
push
lock
xlat
lret
je
ljmp
testl
jle
int
xor
inc
push
ds
pop
pop
inc
push
es
pop
mov
sti
pop
mov
popf
jg
cmp
test
out
xor
dec
orb
pushf
inc
cmpl
and
iret
push
lret
es
xchg
xor
jnp
es
arpl
outsb
loopne
dec
mov
xor
xchg
jns
stos
xor
sbb
and
rcrb
sub
icebp
jl
mov
pop
xor
push
inc
push
cmp
pop
pop
inc
jb
add
into
jae
pop
int
cltd
mov
mov
lahf
rorl
mov
sbb
movsb
in
and
ljmp
sbb
pop
sti
andl
cmp
lret
insb
mov
movsb
outsb
push
std
xor
or
into
xor
add
inc
inc
in
enter
mov
or
mov
sub
fidivs
xchg
pop
test
and
cmp
inc
in
fildll
mov
pop
hlt
xlat
in
cmp
jnp
rclb
xchg
xor
lahf
mov
mov
mov
test
push
xchg
adc
lds
cmp
or
jbe
sub
adc
inc
ljmp
jg
insb
pop
outsb
push
and
icebp
aaa
xor
xchg
adc
xchg
pop
pop
xor
lds
mov
or
xchg
enter
xchg
cmp
add
and
arpl
sarl
or
xchg
leave
sub
popf
mov
test
lods
and
mov
aad
fucom
lret
fs
dec
enter
es
sub
shrb
sbb
shrb
sub
ffree
sti
enter
bound
dec
andl
mov
mov
xchg
movsb
aaa
push
xor
pop
pop
sbb
aad
iret
in
dec
mov
sbb
or
inc
pop
loope
clc
rorb
inc
cld
dec
mov
dec
test
inc
ds
mov
gs
push
mov
test
mov
mov
das
inc
ja
lods
cli
andb
pop
lcall
mov
jecxz
aaa
int
ss
sarl
repnz
add
repz
jmp
rorb
mov
mov
lods
mov
push
int
jl
lods
jle
add
xchg
jl
icebp
fistl
push
jmp
push
pushf
push
enter
sub
add
push
cmp
aam
lcall
mov
outsl
dec
adc
sbb
mov
mov
or
clc
or
dec
stos
xchg
push
or
fisubl
sub
sgdtl
add
push
adcb
addr16
notl
shl
push
push
fldcw
jns
sbb
cwtl
insb
popa
in
add
sarl
push
andl
icebp
or
lahf
arpl
ret
sbb
mov
nop
mov
lods
mov
lret
sub
bound
mov
jl
ret
push
loope
mov
and
push
xchg
je
cmp
into
mov
adc
add
sub
and
lods
jmp
adc
mov
shrl
test
out
jle
lahf
jae
add
jno
daa
out
adc
dec
cmp
test
adc
mov
jne
leave
sbb
sbb
add
pop
jl
inc
ret
cmp
push
mov
pusha
xchg
and
sbb
mov
fwait
dec
jo
inc
adc
jp
xchg
xchg
in
cmp
in
adc
fadd
pop
xchg
jp
push
icebp
mov
or
xchg
mov
js
add
fsub
shlb
dec
and
cmp
or
cmp
bound
inc
cmpsb
xchg
mov
mov
into
mov
mov
xlat
mov
cmpsl
es
pushf
jle
call
fdivl
adc
fstpl
sbbb
mov
or
dec
mov
cmp
xchg
ss
jb
dec
stos
in
pushf
cmpsb
pop
mov
and
test
out
sbb
xchg
mov
scas
mov
les
inc
in
movsb
scas
cmp
enter
push
mov
andl
jb
cld
sbb
hlt
sahf
clc
and
test
paddq
dec
aaa
dec
inc
in
jle,pn
test
sub
cmp
mov
mov
shl
andb
pop
cmpsl
or
push
je
les
dec
mov
add
imul
mov
add
or
lret
insb
stos
scas
add
push
out
mov
push
jbe
cld
lds
scas
aad
call
and
fildl
mov
sub
cs
pop
inc
int
add
push
in
add
test
rcrb
mov
jp
mov
out
pop
movsb
nop
cmp
mov
js
or
inc
lahf
mov
faddl
out
xchg
adc
dec
xchg
jb
mov
hlt
incl
mov
gs
and
add
lret
inc
shrb
push
fnstcw
mov
nop
mov
cwtl
ja
push
add
andl
in
and
pop
ficoms
inc
push
mov
sbb
in
xchg
dec
sarb
dec
pop
mov
stos
in
xor
mov
leave
pop
imul
cmp
arpl
cmpl
lds
jae
aaa
or
cmp
xor
xchg
push
mov
lods
sub
out
popf
test
fwait
aaa
cld
push
fstpt
fdivr
or
xchg
mov
mov
in
imul
xchg
std
mov
inc
jle
int
pop
pop
sahf
adc
mov
fstpt
jb
mov
les
and
ja
pusha
inc
leave
int
mov
int3
sub
inc
icebp
mov
cmc
fdivs
insl
sub
push
imul
pop
pop
mov
into
pop
or
vminss
fcomp
scas
and
mov
das
xor
loopne
das
inc
daa
repnz
and
arpl
mov
les
lcall
dec
cmc
imul
popa
and
fcoml
mov
inc
cmp
mov
sbb
pop
sbb
xchg
outsl
ja
int3
push
loope
test
fdivl
ljmp
adc
mov
mov
inc
adc
mov
ja
outsl
mov
mov
call
stos
popa
test
xor
push
mov
aad
imul
or
faddl
outsl
sub
into
push
sbb
jnp
lods
lahf
dec
lahf
cmpsl
stos
test
pop
cmpl
pop
mov
cwtl
xorb
bound
jb
sbb
pop
pop
xchg
stc
subb
sub
jns
pop
clc
dec
pop
sbb
pop
loop
or
jmp
adc
int
jbe
push
push
dec
into
add
pushf
mov
aad
cwtl
adc
lahf
gs
notb
fimuls
cld
mov
xchg
push
pop
ffreep
jle
pop
or
xchg
xor
mov
ss
xor
dec
loopne
fists
in
cld
cmp
inc
daa
sbb
insl
iret
addr16
push
push
push
imul
push
sub
push
xor
xchg
shl
dec
jmp
mov
cmp
test
gs
movsb
mov
pop
iret
jge
or
and
inc
addr16
fwait
pusha
add
push
roll
addr16
lods
ja
xchg
jle
cs
imul
lock
lahf
repz
mov
cmp
cmp
push
xchg
dec
in
fbld
inc
fmul
cld
mov
mov
pusha
push
lods
cld
mov
push
xchg
imul
push
jns
into
rol
ficoms
jns
mov
mov
mov
movsb
out
dec
lds
fisubrs
stos
xchg
and
cli
iret
decl
pop
push
sub
out
lret
mov
pop
and
sahf
jns
in
clc
push
in
dec
pop
sub
sbb
decb
inc
lcall
add
push
sbb
mov
mov
scas
and
jno
adc
in
lods
scas
out
mov
js
je
push
outsl
mov
inc
ds
dec
or
sbbb
sti
iret
out
jae
icebp
inc
ja
imul
movsb
mov
push
jno
add
mov
inc
pop
inc
xchg
pop
outsb
jl
les
pop
les
call
leave
imul
mov
clc
rorl
push
and
mov
mov
jo
push
pusha
and
push
pop
inc
mov
cpuid
jp
cltd
and
mov
aaa
cmp
xlat
cmc
les
ljmp
xor
add
pop
pop
sub
outsb
lds
ret
inc
push
mov
clc
add
mov
aad
sbb
jns
push
mov
scas
xchg
hlt
dec
ljmp
cmp
out
mov
jno
dec
arpl
dec
popf
in
sub
push
inc
scas
inc
push
outsl
cs
cltd
mov
cmp
in
shll
xor
push
jo
test
jbe
lahf
test
test
addr16
push
scas
inc
adc
inc
and
cwtl
fcoml
fldenv
pop
dec
cmp
sti
xchg
movb
out
mov
xor
jl
icebp
sti
insl
std
xor
cmp
les
push
push
mov
cmp
jl
mov
fistpll
pop
sub
fwait
xchg
or
mov
inc
fildll
dec
or
add
mov
cmp
jle
aad
das
xor
pushf
dec
addr16
bound
lods
adc
psubsb
xchg
sbb
bound
mov
movsl
aam
outsl
out
fisubrl
dec
xchg
inc
sbb
arpl
popa
imul
cld
ret
mov
jg
dec
lea
dec
jne
shlb
and
subl
insb
aad
cmp
fimuls
inc
aad
out
shll
stos
inc
cmp
mov
cmp
lahf
ljmp
js
loopne
sub
or
inc
stc
icebp
xchg
seto
dec
cmp
cld
jmp
jmp
clc
jnp
mov
and
lcall
dec
movsb
mov
xchg
cs
aam
xor
xchg
push
xchg
lds
jg
mov
mov
xchg
imul
cwtl
jb
xor
icebp
les
mov
daa
sbb
nop
or
rcr
jbe
fstl
ret
add
push
test
jecxz
aas
adc
mov
mov
in
fbstp
inc
and
xor
cs
inc
in
dec
test
fldt
fdivrl
push
mov
loop
inc
push
js
mov
cld
leave
cwtl
mov
xor
jmp
movsb
mov
mov
cmp
shlb
insl
int
cmp
adc
inc
imul
cmp
jne
cs
or
outsl
pop
pop
in
cmpsb
or
shlb
stos
pop
mov
orb
dec
mov
ja
sbb
pop
mov
aaa
inc
xchg
test
ret
mov
mov
data16
mov
mov
repnz
add
mov
xchg
std
je
fdivs
mov
adc
xor
sub
adc
pop
jns
idiv
xor
push
jmp
jl
sbb
cltd
repz
cmpsl
cmp
nop
roll
mov
sbb
push
out
lea
daa
loop
in
je
fists
and
pop
jo
add
inc
std
sub
jmp
fwait
inc
lret
mov
jnp
verw
sbb
aam
sub
mov
sub
sub
imul
icebp
arpl
mov
cmpsl
lret
push
jp
fwait
mov
mov
sub
and
andl
pop
es
shrl
xor
cmp
fstps
xchg
jno
fwait
xor
push
orl
add
push
ror
pop
insl
mov
aam
pop
rclb
adc
clc
test
push
xor
adc
xor
jo
jmp
ds
mov
cmp
lods
jns
xor
stos
loop
xchg
lret
cmp
push
cmp
sub
mov
inc
ret
cmpsl
add
fistpl
mov
mov
leave
cli
aad
dec
mov
andl
movsl
pop
pop
sti
ds
pop
mov
fidivrl
lret
fs
dec
je
movlps
adc
ljmp
pop
jae
cmpsb
lea
roll
in
and
dec
cmp
stc
fstpt
inc
fldl
mov
pop
or
out
jo
jno
not
inc
xor
mov
jp
inc
out
xchg
ret
negb
inc
mov
ret
aad
or
jp
jnp
les
jp
push
loop
es
es
mov
jge
js
cwtl
test
sub
jb
fs
jbe
push
in
imul
jbe
cwtl
xor
push
insb
mov
testl
lods
sbb
jb
stos
xchg
mov
add
dec
fisttpl
xchg
jbe
fxch
cmp
mov
mov
sahf
cmp
push
add
mov
xor
stos
cvtps2pi
in
fsubs
into
cmp
xor
ds
push
aam
fistps
push
sub
cmp
jmp
scas
inc
sub
icebp
jo
jge
insl
fidivl
mov
ret
push
sub
lahf
adc
adc
push
add
aam
mov
dec
mov
mov
inc
xor
sub
adc
test
shll
inc
mov
sub
loope
and
test
popf
xor
sub
leave
cltd
jns
mov
pop
repz
jmp
mov
jecxz
outsl
lret
sub
sbb
adcb
jl
lahf
push
call
fildll
dec
int3
and
pop
repnz
jnp
add
mov
mov
repz
push
fiaddl
call
inc
adc
sahf
sbb
add
sub
add
sbb
xchg
push
js
ret
insl
mov
push
pop
out
xor
or
and
cld
push
mov
rclb
inc
insl
pop
mov
inc
ret
push
jne
pop
sbb
sub
sti
mov
in
jne
cmpl
mov
pop
lcall
xchg
mov
add
cmp
mov
jecxz
and
push
mov
pop
jo
xor
push
faddp
ljmp
dec
xchg
lods
popa
sub
sarb
lea
ss
cli
xor
mov
push
je
mov
les
jecxz
ret
mov
loopne
lea
cmp
ret
fnstcw
shrb
lods
loopne
iret
inc
andl
and
xchg
jno
outsb
test
fimuls
and
fimull
aaa
cld
iret
add
push
sbb
in
loop
jne
jnp
das
fsubrl
aaa
mov
fwait
jns
push
cld
push
inc
cltd
lods
nop
or
lea
incb
or
pop
loopne
push
push
add
decl
shlb
rclb
inc
mov
out
dec
test
test
das
or
and
adc
add
xlat
inc
adc
xchg
sbb
test
jo
jecxz
mov
and
lods
push
shrb
lret
mov
adc
push
xor
jecxz
cmpsb
xor
inc
cli
pop
repz
clc
sub
popa
movsl
in
pop
in
std
popa
aad
adc
xchg
loop
scas
je
ss
cmc
lahf
mov
xchg
insl
movsl
xchg
xchg
cmp
fs
or
adc
push
orl
push
and
stc
jmp
mov
shl
popa
xor
call
add
adcb
mov
push
cltd
pop
mov
stos
cmp
ret
out
mov
les
cmp
xchg
clc
cmp
add
gs
xchg
jne
movsb
jmp
ljmp
test
inc
aam
test
cld
adc
push
test
loopne
scas
popf
adc
pop
outsl
xor
inc
mov
lahf
add
idiv
pop
dec
adc
sti
inc
push
sub
sahf
pop
and
iret
clc
rclb
pop
cmpb
or
push
test
and
lock
outsb
stc
dec
push
sbb
sbb
in
arpl
scas
cmp
lds
add
xchg
vcvtsi2ssl
push
in
mov
xchg
rcr
xchg
mov
shlb
sub
ss
aad
mov
iret
ljmp
dec
mov
pushf
mov
cwtl
out
mov
out
insl
aam
cmp
ret
xchg
jecxz
mov
mov
jnp
xchg
push
xchg
js
jns
mov
pop
dec
or
push
or
xor
mov
inc
je
dec
jp
pushf
cwtl
cmpsl
inc
sub
ljmp
shl
lds
xor
jmp
ss
pop
xor
inc
out
mov
shr
pop
adc
mov
faddl
in
rolb
or
jmp
int
cld
ljmp
xchg
push
ds
mov
ds
jg
lock
jno
pop
outsb
jo
fstp
clc
cmp
sbb
imul
mov
xchg
cmc
inc
xor
mov
ret
addr16
sbb
push
sbb
repz
in
popf
sub
sar
xor
mov
push
hlt
add
movsl
pushf
sti
imul
hlt
stos
fnstcw
jp
mov
cld
lret
sub
add
adc
lds
frstor
int3
shll
cwtl
sub
mov
in
cmc
lahf
jmp
pop
xchg
push
mov
pop
xor
cmp
xor
outsl
jge
out
popa
dec
push
inc
out
mov
data16
dec
sbb
xchg
xchg
dec
dec
add
pop
bound
xor
out
nop
ret
mov
sbb
clc
fs
mov
or
sbb
pushf
cs
ljmp
and
jl
or
bound
pop
dec
cmpsb
add
pushf
mov
add
inc
ljmp
sub
scas
loop
mov
je
adc
cmpsb
mov
imul
mov
cmpsl
mov
xor
add
aad
setge
cmp
es
cmp
mov
sbb
gs
out
lods
sbb
fists
mov
add
sub
and
out
mov
push
incl
stc
xor
adc
xchg
adc
dec
inc
sub
mov
mov
ret
mov
mov
push
fisubl
cwtl
mov
icebp
jmp
jb
loope
jge
sbb
or
adc
int3
loop
pop
in
imul
bound
negl
cmp
or
dec
mov
sbb
sub
add
pop
int3
push
cmp
xchg
sbb
or
add
nop
and
mov
mov
and
mov
call
rcrb
or
add
sti
lret
xchg
sahf
test
jl
sbb
add
je
scas
xor
or
test
aas
adc
imul
test
xchg
cli
ds
imul
aaa
sbb
dec
dec
ror
dec
lahf
ljmp
ja
add
and
shlb
or
cli
dec
clc
jmp
gs
mov
xchg
jmp
and
sbb
shrb
add
inc
jge
into
sub
adc
jle
jae
fisttpl
and
loop
dec
sahf
mov
push
js
test
mov
sqrtps
or
fimuls
fcmovnbe
test
mov
std
fwait
loopne
mov
shr
andl
cltd
outsl
shl
mov
arpl
cmp
fwait
pop
push
das
insb
sub
clc
lea
mov
jp
sbb
or
jno
dec
int3
sub
sbb
into
in
in
pop
or
xchg
in
outsb
jns
add
mov
cmp
mov
push
into
in
mov
sbb
popa
insl
xchg
cmp
mov
add
sub
adc
int
fcomp
das
sbb
pop
insb
dec
push
mov
push
out
cld
adc
call
xchg
push
test
int
mov
jge
sub
sbb
stos
cmpsb
or
jle
inc
adc
inc
jb
or
push
add
jle
movb
pop
scas
cs
or
fisubl
rorl
pop
sbbl
cs
and
inc
mov
cld
lcall
cs
mov
dec
and
stos
outsb
ljmp
push
xchg
pop
add
dec
push
xorb
daa
sbbl
or
cwtl
les
dec
xchg
mov
lods
fidivrs
lods
push
mov
add
push
push
mov
push
lock
add
ss
lea
fs
push
push
test
fldenv
sar
test
xor
std
mov
push
xchg
pop
lea
loope
int
sub
xor
mov
lock
xor
dec
pop
into
jmp
jo
ss
mov
mov
cwtl
nop
js
jmp
jno
sub
jno
sbb
xchg
adc
sub
and
bound
dec
psadbw
je
add
loope
and
int
xor
ror
mov
dec
jge
test
sti
inc
dec
and
and
pushf
xor
dec
sarb
add
outsb
inc
push
xor
iret
cmp
fists
push
cmp
add
sahf
jb
sub
inc
leave
pop
enter
outsb
jge
mov
xor
xlat
out
cmpsb
inc
cmp
or
fisubrl
iret
adc
test
cmpsb
sti
jl,pn
test
lds
jb
inc
fldl
sbb
enter
sbb
sub
mov
aas
test
fsubrp
rcll
dec
cmp
mov
mov
jp
mov
or
mov
dec
idivb
or
lret
hlt
adc
mov
inc
dec
or
mov
std
push
sahf
fwait
inc
cmp
adc
mov
dec
pop
in
nop
lret
cltd
or
xchg
adc
adc
int
jge
and
aad
xchg
inc
enter
sub
in
ds
inc
cmp
or
lcall
mov
mov
adc
mov
adc
jbe
push
fmull
rcr
das
cmp
cmp
jns
jae
repz
add
mov
fiaddl
xchg
xchg
scas
pop
repz
movsl
sbb
fidivl
lcall
sbb
or
cmp
mov
cmpsb
jecxz
xchg
cmpsb
daa
jne
inc
gs
fimull
aam
out
mov
push
dec
push
ljmp
adc
add
lahf
mov
mov
jns
int3
add
into
sbb
and
and
push
inc
test
inc
jno
nop
test
enter
leave
push
jecxz
xchg
test
fs
jmp
add
rcrl
scas
fmull
mov
sbb
rcll
lods
jge
jge
mov
inc
jno
xchg
push
or
push
mov
pop
mov
fwait
mov
ja
mov
ja
jae
pop
dec
bound
adc
jecxz
jle
movsb
sbb
nop
sahf
out
adc
and
sahf
les
push
pop
arpl
fnstcw
popf
in
adc
or
repnz
dec
test
and
sub
jns
jmp
push
imul
jecxz
mov
mov
pop
lods
xchg
jmp
test
xor
fbstp
dec
mul
mov
mov
push
inc
dec
repz
add
pop
push
mov
repnz
cmc
cmp
in
aam
xlat
adc
out
sarb
cmp
push
sbb
mov
mul
jg
adc
out
dec
or
cmpl
and
int
mov
or
dec
rclb
sbb
xor
add
add
ja
fisubl
jmp
xchg
jmp
pop
aam
pushf
fwait
mov
push
gs
mov
cwtl
mov
inc
push
loopne
pop
in
pop
rcll
jp
push
cmpsl
inc
jl
dec
stos
cmp
jae
pop
repz
icebp
mov
mov
inc
push
mov
push
push
mov
push
insb
jecxz
dec
or
addl
fidivrs
enter
les
cmpsb
xor
test
push
mov
mov
rorl
pop
pop
pop
imul
jne
xlat
pop
fisttps
test
jle
lock
mov
and
push
fcom
jo
mov
jne
mov
dec
or
in
mov
and
call
es
or
movsb
and
fidivrs
push
fnstsw
daa
xor
repnz
xchg
in
push
mov
add
xchg
fmull
dec
lret
movsb
in
lea
jnp
hlt
and
leave
ss
cltd
sti
aaa
sarb
push
stc
push
add
sarl
movd
nop
push
test
and
les
stos
les
jnp
sub
sbb
hlt
add
jg
and
xlat
jg
lea
add
adc
les
mov
xor
in
add
or
fmul
add
nop
loopne
add
jne
adc
cmp
dec
outsb
cmp
test
jg
cmc
adc
push
mov
mov
jnp
lcall
fsubr
rcll
push
mov
xchg
in
std
int3
push
popa
jg
dec
push
test
popf
push
int
jmp
cmp
xor
mov
and
and
addr16
out
fwait
repnz
wbinvd
sub
fcompl
push
sub
and
mov
jns
std
jp
mov
sbb
js
pop
fstp
mov
dec
jbe
sti
mov
rcr
icebp
outsb
loopne
sub
jne
pop
cmp
pop
jg
lods
outsb
mov
jge
fistpl
fstl
jmp
cs
lds
in
push
cmpsb
sahf
pop
push
outsb
test
aaa
push
mov
xchg
loop
pop
repz
orb
out
lcall
inc
fwait
pop
xchg
cmpsl
inc
fisubrl
cmp
xlat
sbb
iret
pushf
call
pop
fisttpl
pop
in
gs
push
fdivs
adc
xchg
roll
mov
ds
add
clc
adc
movsl
inc
jnp
js
loop
rcl
and
loopne
xor
xchg
in
xlat
sub
in
and
cmp
loope
imul
shlb
and
jmp
push
jne
fsts
dec
popf
sub
inc
imul
sti
or
cmp
ss
sub
jg
mov
popa
jle
movsb
mov
fwait
out
into
add
bswap
pop
add
incb
test
and
mov
scas
scas
nop
fldt
cmp
lea
sub
popa
lahf
fs
or
push
xchg
aam
std
ret
jp
sub
jne
mov
imulb
sub
jmp
ja
test
fdivs
xorl
outsb
inc
pop
pop
xor
or
outsb
adc
jno
call
xchg
cmc
mov
dec
or
mov
mov
leave
pop
xchg
or
and
inc
sbb
mov
cmp
lahf
or
pusha
mov
imul
int3
in
movsl
jno
test
add
inc
mov
or
into
mov
into
add
int3
gs
adc
fs
outsb
cld
outsl
arpl
cmpl
int3
call
ds
int
in
or
imul
hlt
cld
push
into
dec
into
adc
mov
xor
inc
data16
push
outsl
nop
xchg
rep
pop
fdivp
lods
cmp
mov
mov
lods
dec
aad
sub
fwait
pop
pushf
fistpll
dec
data16
je
sub
cmp
cmpsl
xchg
xchg
push
dec
xor
xchg
add
ljmp
cmp
fadd
loopne
das
std
loopne
int3
push
in
in
outsb
test
mov
mov
jae
popa
fldenv
pop
jns
jo
push
jb
das
addl
mov
jl
xchg
dec
sub
out
test
fidivrl
sub
pusha
das
push
cmp
into
dec
and
push
fldcw
mov
inc
ss
jnp
or
or
test
sbb
pop
sbb
xchg
pushf
jge
adc
adc
aaa
push
aad
mov
pop
cmpsl
push
packuswb
inc
scas
xchg
fs
push
push
pop
scas
jp
and
lods
insb
pop
jecxz
and
dec
add
hlt
arpl
push
adc
adc
insl
jle
lods
js
es
and
push
jmp
lret
movsl
test
mov
sbb
mov
pop
pop
dec
jle
ficoml
push
aas
lds
jecxz
mov
xor
jno
mov
imul
push
xor
jmp
add
loope
xchg
scas
adc
pop
pop
insl
pop
and
and
cmp
test
add
dec
jmp
test
jle
aad
dec
lods
enter
decl
int
sub
test
xchg
in
mov
push
mov
adc
mov
out
sbb
sti
outsl
imul
testb
arpl
pop
mov
jbe
test
test
xchg
pop
aas
test
xchg
jne
jp
sti
mov
scas
or
dec
fisttpll
sbb
sub
adc
mov
pop
mov
jae
andb
out
xor
and
cli
dec
mov
mov
cs
push
mov
cmpsl
mov
or
lock
out
jne
dec
ret
and
fwait
sbb
in
mov
and
ljmp
mov
cmp
gs
jbe
aam
daa
xor
xlat
mov
jb
call
jno
pop
loopne
mov
sbb
pop
add
push
xor
mov
es
mov
lahf
flds
jle
cmp
jge
mov
int3
mov
sahf
cwtl
lcall
dec
mov
rorl
xor
lock
mov
into
adc
pusha
scas
out
and
mov
and
add
jno
nop
or
jno
cmp
rcr
adc
dec
inc
pop
fldcw
or
mov
stc
ja
outsb
ss
test
mov
add
pop
lock
mov
psubsb
std
pop
fucom
lock
inc
or
pop
jecxz
shrl
jae
adc
mov
jnp
imul
mulb
leave
mov
rorl
sti
add
test
lcall
adc
into
sbb
mov
jg
in
mov
mov
push
loop
subl
adc
xlat
bound
xchg
cltd
mov
stos
cmpsb
xchg
jb
xchg
mov
leave
xorl
sbb
clc
and
outsb
pop
mov
push
lcall
stos
lahf
mov
dec
mov
xchg
daa
mov
or
cmp
or
dec
fbld
lock
stc
and
mov
inc
xchg
repnz
lock
hlt
add
xor
pop
out
xlat
cmpsl
test
sbb
lods
mov
scas
in
nop
adc
xor
movl
xchg
outsb
repnz
into
daa
pushf
fbstp
rol
pusha
add
stos
stos
fwait
les
inc
sbb
sbb
sub
mov
vmread
mov
fs
sti
rorb
stc
pop
jbe
push
mov
stos
cli
sub
test
test
xchg
pop
cld
pop
cmp
stc
cmp
mov
sbb
icebp
add
jno
in
test
add
mov
sub
hlt
sub
stc
in
and
icebp
cwtl
jl
cld
jg
cmp
pop
push
aaa
cmp
mov
cmpsl
das
popa
xchg
xchg
std
xchg
xor
and
js
cld
sub
data16
xchg
jb
or
add
jle
or
adcl
pushf
sub
add
outsb
sti
pusha
dec
movsl
loop
cwtl
xorb
pop
leave
test
pop
push
jae
push
js
jle
inc
mov
cmp
pop
int3
lds
sbb
or
pop
jbe
icebp
aas
sbb
pop
cmpsl
mov
sbb
xor
outsb
xchg
subl
add
sub
inc
push
jl
add
dec
cltd
mov
shll
stos
pushf
pop
out
adc
sbb
rcrl
arpl
mov
adc
mov
jmp
push
push
adc
and
sahf
in
mov
inc
inc
jge
or
rcr
or
or
std
adc
js
cli
and
enter
inc
or
cmpl
inc
jae
pushf
daa
cli
fdivrs
lea
adc
and
stos
lahf
adc
sub
mov
mov
sti
xchg
sub
cltd
pop
ret
inc
cmpsl
and
push
mov
imul
fisubrs
mov
and
aad
jl
push
in
data16
add
andl
lret
and
ja
cmp
sahf
cmc
sbb
jecxz
push
xor
loope
sub
fs
fmul
dec
fldl
push
xchg
jmp
ss
xor
push
inc
adc
xor
mov
jecxz
imul
push
pop
into
jno
and
cmp
pop
xor
in
lret
push
jne
mov
and
lret
pop
jns,pt
je
pusha
jae
jecxz
cli
pop
pop
fstl
je
pop
inc
add
and
into
popf
add
jns
testb
jge
add
icebp
dec
repz
mov
jb
or
lods
mov
repz
shl
push
enter
cmp
mov
leave
sub
adc
sbb
mov
add
mov
pop
repnz
mov
pop
mov
bound
hlt
add
lret
xchg
or
cmp
iret
dec
add
jbe
pop
test
std
sub
dec
push
iret
cmp
int
mov
test
mov
push
jp
mov
aad
loopne
insb
push
push
pushf
mov
cmpsb
dec
mov
iret
xchg
and
mov
xchg
push
movsl
push
mov
dec
mov
cmpsl
push
sbb
sub
jle
pop
movl
insl
fucom
nop
imull
das
pop
jge
dec
popf
xlat
lods
mov
cmp
sti
mov
outsl
mov
xchg
mov
or
rcrb
pop
cmc
adc
and
lods
mov
rorb
out
inc
cmc
sub
test
ljmp
jl
das
stos
and
stos
push
js
add
or
mov
jecxz
and
pop
dec
in
mov
sbb
xor
daa
dec
hlt
jmp
in
bound
in
sbb
je
orl
cmpsl
in
adc
hlt
inc
jb
mov
repnz
ret
pop
xchg
in
sub
test
mov
xchg
mov
nop
jo
and
push
popa
addl
push
loop
mov
addr16
fldenv
and
and
xchg
or
or
iret
stc
sub
movsl
jg
inc
fwait
or
mov
adc
testb
xchg
pop
cwtl
dec
fwait
adc
mov
jecxz
xchg
mov
mov
loope
cmpsl
test
dec
xchg
and
add
cwtl
sub
dec
cmp
lret
ja
dec
mov
jmp
pushf
jne
outsl
jmp
rep
adc
mov
jne
cmpb
mov
xchg
test
sub
inc
test
cmp
and
dec
dec
fsubl
add
push
and
pop
loop
aam
leave
scas
test
dec
inc
rolb
ljmp
mov
mov
mov
and
je
jg
jbe
xchg
xor
lcall
lahf
pop
xor
jnp
pop
fsubr
imul
xchg
lods
add
or
jge
dec
ret
leave
and
sahf
test
add
pusha
pushf
cmp
sbb
add
xchg
lahf
fisubl
push
les
or
adc
or
inc
xor
out
sub
js
mulb
shlb
adc
sub
das
jb
flds
mov
sbb
fisttpll
out
loope
cmpsl
lods
mov
jecxz
filds
negl
pop
call
mov
adc
enter
addr16
mov
out
data16
push
out
fidivs
ret
fnstenv
leave
jno
dec
repz
sub
add
xchg
imul
xchg
sub
add
adcb
stc
add
and
mov
mov
stos
mov
insl
sub
xchg
pop
popa
arpl
adc
cld
jg
pop
insl
push
push
xor
add
dec
das
stos
push
fistl
cmp
int
push
fmulp
push
mov
or
in
xchg
cld
sar
mov
insl
lahf
ret
adc
push
ret
pop
mov
push
sbb
push
out
xchg
mov
push
add
mov
push
fdivrl
mov
add
fldenv
fildl
sbb
fnstenv
imul
and
push
xchg
data16
cmp
adc
lret
je
add
jb
adc
jb
aas
jmp
cmp
dec
cmp
lds
pop
decb
dec
fisttpll
mov
mov
rorb
jo
mov
ja
es
push
mov
cld
imul
pop
inc
mov
jg
cmp
xor
jns
jb
js
mov
jg
adc
pop
push
inc
mov
and
fcomi
cmp
fmull
mov
cmpsb
jnp
or
testl
in
push
bound
daa
and
push
push
daa
mov
fs
cmp
push
bnd
movsl
notl
test
leave
or
cs
movsl
scas
es
pop
mov
ss
sbb
xchg
stc
test
ret
das
fldcw
divb
push
insl
mov
push
jmp
dec
clts
and
dec
out
pop
rorl
lea
cmp
mov
rorb
into
jns
push
es
adc
sbb
mov
and
leave
movsl
inc
adc
dec
sbb
push
cs
icebp
cld
xor
add
cmp
mov
xor
push
xchg
dec
or
and
shrl
out
xchg
pop
je
jnp
call
mov
xchg
xchg
sbb
ljmp
and
pop
mov
ljmp
mov
or
xor
aaa
cli
mov
xchg
push
push
and
mov
lret
dec
sub
mov
std
mull
jge
test
xlat
cmp
mov
fsub
dec
cld
and
cmp
or
mov
sub
pop
test
bound
jno
cld
rorb
push
fucomip
add
mov
mov
adc
call
jmp
gs
adc
imul
push
ljmp
jl
mov
mov
xchg
mov
inc
adc
cltd
pushf
es
and
inc
cmp
aad
scas
int
mov
imul
dec
mov
xlat
jne
ret
pushf
sub
pop
gs
dec
outsl
loope
push
pop
or
lret
mov
insl
test
push
cld
mov
call
sbb
or
sbb
loopne
rclb
xchg
jmp
xchg
dec
adc
mov
cli
int3
aad
mov
pop
sub
loope
inc
les
roll
es
pusha
lcall
push
in
addr16
mov
call
data16
jae
cmpb
mov
insl
adc
mov
xchg
mov
and
imul
push
push
jmp
sti
push
sub
or
sbb
xchg
aam
adc
sub
add
out
push
cltd
fcompl
iret
cmpsl
add
mov
mov
stos
dec
lock
adc
rorb
sbb
lds
out
iret
or
mov
mov
in
cwtl
mov
mov
rcr
pop
scas
xor
adc
imul
add
xabort
test
cmpb
arpl
xchg
popf
cmp
test
add
js
pop
stos
imul
push
aas
popf
scas
testb
sub
adc
js
add
test
dec
lods
ja
sbb
out
aad
repz
xor
int3
jns
frstor
add
enter
pop
dec
scas
mov
arpl
mov
movsb
and
mov
cmp
loopne
mov
in
ljmp
imulb
lods
push
xor
xchg
xchg
pop
and
aam
lods
lods
aad
sub
in
xchg
xchg
add
inc
imul
popf
mov
jl
cld
xlat
nop
out
fstps
add
icebp
cltd
iret
std
lahf
pop
or
fists
pushl
add
inc
pop
mov
dec
ss
xchg
rcll
fistpl
adc
jg
xorl
fiaddl
in
dec
pop
push
icebp
xor
mov
jl
imul
lcall
push
mov
pop
xchg
dec
ret
faddl
jae
sub
loop
js
push
cmp
data16
gs
cmp
push
and
inc
inc
pusha
aad
das
jbe
imul
push
xor
ret
pusha
lds
mov
or
nop
sbb
cwtl
stos
out
jecxz
movsb
dec
push
repz
pop
dec
and
dec
jne
rclb
pop
sub
pushf
std
and
shl
bound
or
out
test
icebp
movsb
cmp
repz
mov
mov
mov
ja
leave
lret
arpl
push
mov
repz
into
es
mov
sub
sbb
sbb
add
mov
cmpsl
push
mov
and
cli
rolb
mov
cmp
push
push
ficompl
and
jne
out
sbbl
in
mov
add
inc
inc
mov
mov
aas
push
nop
sbb
loope
adc
xchg
jbe
fs
arpl
sub
cmp
repnz
cmp
dec
pop
add
rcll
in
enter
dec
stos
int
or
jo
xor
dec
je
and
mov
mov
adc
or
mov
and
lea
int3
cs
cmpsb
jnp
or
mov
cmp
ljmp
rorb
adc
shrl
mov
dec
xchg
adc
push
inc
pop
jae
cmp
pop
stos
jl
lret
in
nop
lods
lock
and
or
push
ret
jecxz
lea
push
push
out
imul
inc
push
lret
insb
mov
cmp
xchg
add
test
or
fs
std
mov
rorb
add
jns
scas
xchg
mov
jmp
xor
enter
push
adc
inc
jmp
xchg
aad
xlat
out
int3
mov
sbb
mov
cwtl
stos
mov
pop
mov
loop
pop
push
xlat
xchg
sbb
sahf
cmp
pop
push
jg
jmp
lret
mov
adc
push
movsl
into
jecxz
and
xchg
cmp
mov
and
jecxz
pop
lods
mov
mov
imul
popa
push
mov
sub
and
inc
xor
mov
xor
pop
ljmp
test
frstor
lret
rep
xchg
mov
inc
in
data16
xchg
pop
cltd
jmp
and
push
mov
inc
xor
adcl
xchg
add
fcomi
adc
jns
push
test
mov
mov
popf
mov
dec
test
scas
jl
dec
push
test
shrl
in
sub
popa
in
clc
cmp
dec
mov
fidivrs
mov
cmp
mov
int
mov
fbld
inc
adc
out
repz
lods
add
push
xor
jb
and
cmp
aas
jbe
xor
sbb
add
stc
push
mov
push
cmp
out
fs
cmpsb
adc
mov
imul
inc
loope
movsb
lcall
and
mov
sub
xchg
xchg
outsl
cwtl
xchg
push
xlat
std
push
mov
mov
movsb
stc
mov
push
cmp
repz
add
jmp
jne
aad
xchg
and
mov
sbb
stos
outsb
mov
jns
cwtl
mov
rclb
xchg
jle
cltd
fwait
ret
int3
sbb
add
je
subl
sbb
cld
sbb
out
xor
aad
ret
push
movsl
pop
cmp
cmpsl
ret
inc
stc
jbe
hlt
jg
pop
dec
cmp
cmp
lods
add
cmpsb
adc
push
cmp
fs
push
cld
cmp
data16
dec
and
das
out
outsl
mov
xchg
pop
ljmp
fwait
xchg
call
cmp
ja
fdivr
and
jnp
mov
sub
adc
test
jp
fs
ret
and
aaa
pop
mov
add
repz
out
out
imul
insl
pop
cmovge
mov
ret
pop
push
add
insl
push
mov
rcll
jle
adc
test
clc
divb
push
cmp
loopne
adc
mov
popf
popa
sbbl
push
sub
push
add
or
dec
or
mov
dec
pop
xchg
fldl
mov
mov
pusha
xchg
pop
xchg
mov
push
mov
scas
mov
dec
xchg
scas
cmpsl
or
mull
inc
std
inc
xchg
jae
fxch
cmpsb
in
int
push
and
out
pushw
inc
pop
lds
fbld
xor
lods
xor
repz
inc
sbb
fdivl
dec
mov
xchg
mov
sbb
movsb
dec
xor
jae
pop
or
fldenv
outsl
lods
push
lock
mov
mov
or
ret
popa
fcomps
pop
mov
pop
test
push
in
imul
push
loopne
pop
sahf
jecxz
daa
sbb
lds
push
inc
mov
pcmpgtw
imul
dec
dec
xlat
stos
fs
jecxz
xor
stos
mov
imul
pusha
xor
jmp
jo
movsb
ret
insl
sar
adc
in
aam
dec
cmpsb
cmp
sub
out
sub
xchg
add
cmp
xchg
push
sbb
fcmovne
sub
call
mov
or
push
fldl
aad
stos
push
xchg
rorl
movsl
and
fistl
mov
push
clc
imul
and
xor
int3
or
sahf
xor
daa
mov
xchg
aad
push
mov
push
std
xchg
mov
cmp
roll
insb
mov
cmp
add
movsl
into
inc
dec
lods
rcrb
dec
mov
jmp
je
mov
nop
hlt
lock
and
dec
xor
add
mov
sub
mov
xchg
sbb
aad
das
enter
mov
mov
es
ds
addr16
pop
mov
xor
inc
test
adc
popf
ja
out
js
jp
pop
repz
fucomip
jne
push
inc
pop
inc
xor
push
insl
xchg
push
das
je
int3
sub
mov
xor
test
xchg
and
call
cmp
xchg
into
lret
lea
mov
clc
mov
lds
cmp
out
cwtl
push
xchg
ret
repz
jb
enter
sub
inc
pop
call
jge
push
push
dec
test
lods
mov
loopne
mull
add
repz
pop
xchg
into
pop
or
mov
and
mov
cmp
les
sub
add
or
hlt
xchg
sbb
mov
lea
mov
rolb
lret
stos
in
jl
test
insb
aas
adc
rorb
je
pop
sbb
repnz
adc
es
retw
cmp
or
movsb
pop
testb
scas
pop
mov
imul
js,pn
test
jns
pop
xor
aam
outsb
mov
adc
testb
push
pop
push
das
mov
imul
pop
fsubrs
adc
jp
jbe
enter
cmpsl
pop
inc
int3
and
rol
adc
xchg
fcoms
push
in
call
sysret
xor
mov
ficoms
fadd
dec
push
cli
cmp
mov
not
mov
xchg
mov
lock
inc
repz
push
fisttpll
clc
or
xor
leave
ja
shr
jg
outsb
xorb
mov
sub
push
movups
das
imul
scas
daa
cmp
mov
jns
into
dec
pop
faddl
in
mov
mov
xchg
or
mov
cs
sbbb
in
push
dec
lcall
pop
xchg
out
cs
cmp
gs
push
add
push
jl
mov
mov
lds
es
adc
dec
pop
fs
dec
sub
jno
pop
sahf
add
jge
mov
jl
je
ret
call
filds
outsl
jecxz
out
test
jo
mov
add
push
dec
and
sub
push
push
fisubrl
shlb
daa
cltd
aad
jl
jmp
add
fst
loopne
stc
fsubrs
cwtl
les
xchg
push
sbb
bound
movsb
push
adc
iret
mov
dec
push
sbb
cmpsl
ljmp
jb
js
xchg
push
outsb
test
jp
in
jg
pcmpgtw
mov
jnp
in
cmp
in
mov
in
jnp
sub
movsb
roll
fsubs
xchg
pushf
mov
sbb
add
or
mov
jb
in
xchg
sub
movsb
sub
out
pop
pop
jae
lcall
xor
fstl
lcall
mov
or
xor
and
test
pop
arpl
jl
popf
stc
loop
inc
mov
stc
lods
fcoml
test
mov
das
dec
add
mov
add
test
xorl
mov
or
je
pop
mov
xor
push
inc
or
dec
test
cwtl
push
fwait
andb
add
adc
mov
sbb
mov
in
addl
xchg
mov
adc
mov
scas
call
shll
pop
sbb
mov
movsb
xchg
cmp
mov
mov
adc
dec
xlat
fwait
loope
push
cmp
mulb
xchg
fscale
and
cltd
fs
rol
sbb
cld
mov
je
xchg
repz
rcrb
stos
loope
mov
js
add
jbe
popa
mov
scas
fistpl
mov
xchg
inc
fsts
ret
xchg
sub
mov
adc
add
mov
lea
jmp
inc
and
xor
pop
mov
pushf
jbe
or
mov
xchg
mov
mov
movsl
fcoml
cs
xor
outsb
xchg
push
add
scas
lea
push
int3
fs
push
jp
enter
sub
or
xchg
adc
dec
loop
das
addr16
inc
lret
add
push
stc
pop
lea
push
incl
movsl
push
dec
lcall
dec
sub
pop
outsb
cmp
jge
pop
push
inc
dec
pusha
xchg
lods
fstpl
iret
ret
xor
das
insb
cmp
sbb
jno
loop
cltd
inc
push
hlt
pop
add
adc
or
test
shlb
std
jbe
pop
sbb
add
mov
shll
bound
and
add
mov
lea
cmp
idiv
xchg
mov
cs
test
lods
xchg
push
push
dec
test
std
fimull
popf
ljmp
pusha
jbe
xlat
jae
ja
std
xchg
mov
adc
hlt
pop
ret
push
gs
lahf
pop
int3
fstl
sub
sub
pop
das
fmull
stos
stc
xchg
lods
aaa
sti
ficomps
adc
call
xchg
mov
ficomps
es
push
iret
or
in
scas
adc
in
add
out
rcr
jne
pop
popl
test
jl
push
lret
iret
faddl
out
idivb
lods
mov
sbb
push
sub
mov
xchg
aas
push
jle
adc
fiadds
add
scas
adc
das
cmpsb
pop
xchg
loop
inc
jnp
and
mov
inc
inc
insb
sbb
jl
pop
cld
dec
test
sbb
iret
push
aaa
test
lods
inc
cmpsb
mov
or
mov
and
into
fistpll
fyl2xp1
ja
clc
ror
inc
xchg
pop
jmp
mov
aas
repz
xor
ljmp
ja
loope
pop
mov
cmc
mov
ja
jne
ret
adcl
xchg
nop
sahf
lret
sti
pushf
imul
ja
adc
es
adc
fwait
rol
adc
push
xchg
or
mov
pop
lea
mov
js
std
rcr
sbb
jle
pop
shrb
fcomi
sub
dec
push
and
js
push
out
rolb
out
in
aaa
mov
jle
test
test
out
sbb
sbb
pop
add
pop
fwait
repz
push
and
outsb
movsb
xor
add
inc
insl
repnz
mov
std
xchg
in
dec
mov
adc
pusha
imul
pop
pop
in
jbe
mov
cmp
sub
sbb
call
and
out
icebp
add
repz
sti
jae
jg
out
push
and
lcall
jg
stos
xchg
mov
pop
cmpsb
call
xor
mov
or
cwtl
jne
loop
lods
ret
cmp
cmp
xor
mov
pop
inc
mov
in
repz
add
nop
cwtl
xchg
shrl
stos
sbb
pop
iret
xchg
xor
xchg
dec
xchg
out
pop
rorb
mov
cmp
adc
cwtl
stc
std
pop
jp
or
sbb
mov
adc
cmp
cmc
addl
xchg
push
loop
repz
ja
cmpsl
aas
jp
mov
push
insl
mov
arpl
mov
and
push
and
movsb
mov
xorb
xchg
fs
xchg
add
jne
idiv
pushf
rcll
mov
fcomps
mov
mov
mov
mov
clc
inc
xor
call
jbe
dec
xchg
and
cmp
cli
sbb
nop
cmp
insl
xchg
jg
and
test
and
mov
jmp
jnp
iret
mov
cmc
jb
xchg
cmp
loope
shrl
ja
cmp
jl
gs
imul
mov
xor
push
inc
mov
mov
in
daa
insb
cmpl
loope
roll
push
and
aaa
out
push
jo
cmp
imulb
push
shr
and
dec
mov
je
adc
cmp
ficompl
repnz
xlat
lahf
out
es
sub
mov
inc
pop
orb
fmull
xlat
xor
xchg
in
fwait
fwait
pop
pusha
imul
into
cmp
sub
inc
mov
fnstenv
lcall
xor
sbb
scas
sbb
lcall
fsubrs
sahf
cld
dec
jbe
sbbl
lods
cmpsw
xchg
xchg
in
xor
test
lahf
insl
and
jp
mov
push
dec
inc
in
mov
inc
daa
push
sbbl
or
jp
jge
sbb
out
sbb
sub
outsl
jno
cli
jg
cmpsl
xchg
insl
mov
es
out
ret
jne
xchg
insl
fcoml
or
or
jo
dec
sti
mov
ja
sub
fisubl
cwtl
adc
out
pop
cli
and
mov
lods
daa
mov
add
xor
pushf
jmp
xchg
push
jl
or
jmp
sub
sbb
incb
mov
add
mov
jnp
into
or
inc
rcrb
mov
or
pop
stc
push
cld
push
int
outsb
push
dec
sbb
stc
fldenv
sbb
dec
dec
jg
lahf
jecxz
insb
daa
cmc
repz
divb
test
loopne
pop
fmull
dec
sub
lret
xchg
rcrl
jb
mov
loope
lret
scas
ret
aaa
xorb
iret
sub
xchg
xchg
test
pop
pop
xlat
dec
inc
push
push
sahf
inc
movsl
xchg
fcmovnu
aam
mov
popa
push
inc
cmp
fistpl
sti
ret
sbb
pop
or
clc
add
and
out
mov
in
arpl
cmpb
popa
jo
std
and
rcr
adc
mov
cli
pop
sub
pop
ficoml
push
lret
jns
js
shll
std
pop
out
mov
enter
sub
insl
out
sub
or
aas
cmc
outsl
sar
js
dec
add
movsb
sub
mov
in
adc
fsub
push
mov
inc
cmc
dec
xchg
hlt
nop
je
mov
stos
jbe
ret
pushf
dec
add
cmp
sub
xlat
pusha
lds
xor
jbe
rolb
dec
pop
andl
lcall
jp
mov
mov
movsb
cmp
nop
mov
sarl
sbb
call
xor
or
mov
xchg
xor
loopne
pop
cmp
out
or
add
xchg
sti
inc
mov
mov
insl
mov
cli
aas
shrb
mov
push
fs
out
ljmpw
mov
stos
xorb
das
ret
movsb
add
jb
xchg
cmp
es
scas
cmp
mov
and
inc
mov
ficomps
sbb
sbb
ret
mov
jne
popf
mov
lock
or
xor
jns
sbb
jl
ja
add
adc
into
xor
sbb
or
mov
lock
mov
mov
add
push
and
out
aad
adc
loopne
test
xchg
jp
and
leave
pop
popa
xchg
out
fidivs
mov
jl
pop
lcall
cmp
repnz
aad
in
movsl
inc
xchg
and
in
in
sbb
inc
cmpsl
bound
sub
fidivrl
aas
adc
mov
jnp
cmp
stos
push
imul
xchg
xorb
cwtl
call
add
xlat
adc
cs
inc
and
stos
ss
je
test
sbb
pop
lds
jge
push
in
adc
xchg
mov
and
or
sbb
sti
pop
loopne
ret
imul
lret
jl
fs
sub
cmpb
pop
push
arpl
adc
jecxz
push
lret
push
dec
pop
xchg
pop
shlb
cmp
sarb
sub
pop
adc
pushl
jne
and
xor
cwtl
movsl
lods
ret
inc
push
repz
mov
xchg
imul
jp
pop
stos
adc
ljmp
outsl
or
xchg
loopne
dec
ja
sub
dec
sbb
pop
mov
mov
std
jo
data16
lea
dec
jnp
fimuls
ds
lds
pop
jecxz
mov
add
mov
cmp
aad
add
xchg
jb
dec
push
stos
adc
pop
push
gs
lret
cltd
pop
mov
fcomps
add
pop
push
in
push
popa
ret
jae
push
test
idivl
loopne
pop
inc
ss
jae
loope
pop
jb
pusha
or
insl
ljmp
push
cs
mov
cltd
dec
sub
lret
jae
jp
lods
mov
sahf
data16
cmp
mov
mov
filds
pop
gs
gs
xlat
inc
shrb
je
cld
mov
add
sub
push
aam
aas
pop
in
das
mov
nop
aad
jnp
orl
dec
loope
cmp
cmc
sub
scas
scas
xchg
enter
aaa
mov
lcall
faddl
stc
shrb
adc
loopne
add
sti
les
insl
ret
leave
xchg
push
xor
std
sbb
leave
nop
popf
adc
incl
in
shll
je
ret
or
mov
cwtl
xchg
push
shll
popf
ss
adc
add
ds
xor
cld
mov
les
pop
inc
lods
jno
push
push
adc
inc
jl,pn
dec
push
test
jbe
fnstenv
cltd
je
xchg
outsb
dec
jl
xor
and
xchg
jno
test
sti
inc
and
cmp
mov
sti
mov
cld
idivl
pop
jmp
cmp
test
cli
jg
sub
push
adc
scas
xchg
add
popa
inc
mov
pop
mov
test
out
imull
sbb
subl
pushf
jmp
dec
xchg
aaa
mov
es
in
sub
gs
mov
pop
jge
int
sbb
push
xor
push
mov
test
js
pop
movsb
inc
xchg
jns
mov
or
dec
clc
jbe
sbb
mov
ret
hlt
outsl
bound
mov
inc
int3
sub
scas
sub
adc
fimull
add
sti
xor
test
push
xor
movsl
out
ret
push
push
psrlq
jns
ljmp
movsb
jmp
lret
gs
dec
insb
mov
mov
bound
movsb
push
push
jb
push
mov
aas
pop
loope
mov
aas
and
iret
lods
or
shlb
shlb
lds
xor
addr16
sti
faddl
fmulp
into
or
dec
lret
aam
sbbb
push
repnz
ljmp
xor
test
mov
in
mov
cltd
sbb
add
xchg
jp
jbe
scas
mov
pop
sub
push
loopne
xor
jp
lods
je
scas
leave
or
sbb
xchg
xor
orl
pop
sarb
lret
out
lock
rcl
mov
push
jns
into
mov
sub
or
pop
add
dec
sbb
jno
fwait
mov
push
lret
inc
out
lds
aaa
je
sbb
and
adc
jmp
enter
cwtl
inc
add
les
xlat
stos
xlat
fisttpll
pusha
or
mov
and
inc
mov
ret
xchg
sub
dec
sub
sti
add
cmp
mov
sub
inc
sbb
in
add
mov
jmp
test
cmc
sub
push
adc
or
jno
pop
dec
dec
pop
sbb
inc
lretw
add
pop
sbb
inc
sti
aam
add
cmp
cmp
aaa
test
iret
xlat
xlat
jbe
loopne
xor
imull
xor
dec
outsl
arpl
cld
hlt
addr16
xor
add
pop
dec
les
pop
pop
adc
cmpsb
mov
add
leave
mov
in
xor
stc
jmp
jle
sub
jge
cmp
arpl
mov
shlb
popa
rolb
in
sbb
repz
and
mov
sbb
add
xchg
addr16
std
enter
aas
xchg
push
cmp
mov
add
push
movsb
dec
cmpsb
jp
jne
test
dec
aad
ss
hlt
cmpsb
ljmp
jecxz
mov
sbb
jg
negl
hlt
pusha
popa
sbb
and
or
dec
mov
ds
lock
sbb
aaa
push
xor
xchg
add
iret
sahf
mov
adc
dec
push
and
mov
mov
andb
jecxz
into
add
scas
int
mov
aam
dec
cmp
ja
push
pop
inc
outsb
inc
lret
ljmp
call
push
lea
mov
xchg
fisubrs
fdivrp
subl
ljmp
xorb
repz
jge
rcr
hlt
inc
push
rol
push
in
pusha
scas
inc
cmp
mov
cmp
ds
jnp
lea
sub
in
xlat
sbb
push
movsb
pushf
loope
adc
sahf
jg
loopne
dec
or
jb
adc
mov
fwait
stos
shrb
aam
ltr
inc
mov
jecxz
div
out
scas
sub
xor
adc
pop
mov
stos
mov
mov
out
dec
jmp
test
aad
fcoml
xor
adc
xchg
in
lds
fistpl
incb
iret
ja
mov
addr16
pop
jl
cmp
out
add
add
xchg
xor
divb
cld
xor
xlat
mov
cld
daa
lcall
adc
push
call
jmp
mov
cs
adc
dec
insb
or
dec
mov
lods
in
inc
or
fistps
fadd
mov
roll
dec
add
mov
pushf
bound
push
cmp
pop
int
mov
pop
push
pushl
mov
cmp
call
dec
lds
nop
clc
mov
xchg
pusha
loopne
imul
in
pusha
mov
dec
mov
dec
jne
insl
loope
pop
lcall
test
cmpsl
nop
adc
shlb
std
aaa
push
int
rolb
bound
pop
xchg
jle
das
cmp
fstpt
stos
insb
mov
fnsave
mov
jp
cmp
out
in
adc
jae
das
xor
incb
and
insl
movsb
inc
inc
xchg
mov
mov
dec
fwait
mov
mov
jb
jae
lods
imul
mov
loop
repnz
jne
jno
addr16
or
cmp
push
repz
sub
js
faddl
jae
mov
in
repnz
iret
jns
test
out
mov
inc
inc
push
out
mov
jp
adc
and
mov
dec
add
leave
loope
negl
xor
divl
xor
sarl
loopne
sbb
mov
stos
pushf
push
sbb
mov
sar
add
mov
dec
sub
mov
mov
cmp
xor
mov
pop
es
adc
fs
inc
and
and
xchg
xlat
mov
mov
aam
jge
outsl
test
and
xor
jbe
or
push
inc
ja
add
xchg
mov
jbe
daa
bound
jle
mov
cwtl
idiv
push
xor
imul
jns
out
mov
into
sbb
cmc
ljmp
push
out
je
inc
fbld
and
xchg
xchg
std
push
push
stc
fwait
int
cmp
xchg
xor
and
imul
cwtl
dec
repnz
fisubrl
sti
xchg
fsubrs
imul
sbb
push
mov
add
mov
jae
fdivr
ret
push
mov
das
jge
rorb
adcl
add
aas
andl
push
popa
xchg
mov
lcall
adc
mov
fimull
aam
mov
xchg
popa
add
cmp
test
xchg
dec
sbb
pop
mov
mov
mov
add
or
push
shrl
cmp
nop
jne
cmc
daa
jl
lahf
mov
jge
xlat
jl
arpl
out
push
cwtl
out
pusha
and
pop
iret
fisubl
xchg
jle
push
les
lcall
add
xchg
popf
iret
cmp
movsl
movsl
es
xchg
and
sbb
push
or
repz
mov
cwtl
pop
jp
aad
hlt
mov
xor
icebp
mov
mov
inc
dec
int3
xchg
sub
loope
lret
xlat
xchg
mov
add
pop
repz
rol
fwait
mov
shrl
sub
cli
jl
mov
sub
outsb
outsb
stos
mov
fnstcw
inc
mull
or
jl
repz
out
test
adc
push
data16
pop
pushf
imul
xchg
xchg
lds
jno
push
or
bound
mov
std
sub
in
mov
call
xor
sarl
mov
push
mov
loope
push
ds
mov
inc
dec
repnz
sbb
or
mov
test
mov
mov
out
shrl
or
mov
inc
mov
jnp
xorb
loopne
mov
mov
fsubrl
mov
xchg
or
test
push
daa
test
rcll
pop
stos
mov
or
lods
addr16
fcmovne
sbb
aad
sbb
inc
cmp
scas
std
add
pop
fwait
jo
cmp
push
cmpxchg
dec
sbb
mov
aaa
leave
or
imul
xor
mov
inc
push
fldenv
and
push
sub
mov
outsb
loope
mov
jae
sbb
adc
fldl
clc
call
mov
inc
push
push
dec
std
les
or
sbb
and
dec
or
jno
movsb
jp
outsb
cmp
xor
jecxz
xor
popa
pop
pop
xchg
inc
add
aas
sbb
mov
sbb
insl
mov
cmp
fcomp
and
pop
pop
mov
push
push
sbb
loop
dec
lock
ds
ffreep
mov
or
cs
testb
in
push
inc
xchg
sahf
stos
stc
inc
shll
loopne
aam
icebp
push
sbb
push
dec
pop
adc
int3
and
mov
inc
mov
jns
jge
enter
pop
ja
push
cli
fldcw
out
es
mov
call
dec
inc
push
shrl
push
les
pop
data16
sub
mov
cmp
sbb
sub
add
rolb
sbb
cmovbe
enter
fidivl
sub
push
das
fstp
add
add
xchg
ret
pop
pop
ljmp
cld
sahf
adc
xchg
leave
add
scas
mov
mov
dec
mov
sub
sbb
sbb
in
sbb
fisttpl
inc
icebp
fsts
loop
sub
std
or
dec
aam
cmp
imul
xlat
mov
mov
int
nop
cmpsb
cmpl
mov
js
pop
add
les
jp
push
lahf
sub
sbb
add
push
xor
xchg
test
adc
cltd
fldl
in
and
hlt
mov
sub
dec
and
fbstp
jle
stc
mov
outsl
mov
push
or
pop
ds
pop
and
inc
lds
xor
pushf
idivl
in
jo
es
or
pop
outsb
pop
jge
xchg
icebp
push
jbe
cli
je
add
popf
stos
lret
stos
insb
cmp
cwtl
jmp
fs
fcoms
stc
lea
mov
add
push
dec
push
test
cwtl
push
fs
shrb
sti
pusha
fadds
jnp
jg
rclb
inc
sbb
sbb
sbb
jecxz
pop
daa
lret
cli
push
push
cmp
sbb
rorb
inc
lds
aas
lods
pop
pop
out
sbb
xor
pop
int
stos
cmp
mov
rcrl
adc
jg
add
xor
mov
or
jg
cmp
xor
push
jp
mov
shlb
xchg
test
push
sahf
and
add
sub
aaa
push
xor
divb
addr16
icebp
filds
stos
mov
pop
jmp
jl
hlt
jae
or
xchg
pop
inc
add
test
mov
dec
mov
aam
mov
bound
mov
xchg
push
lahf
lcall
nop
cmpsb
xchg
mov
lds
jge
insb
add
int3
sahf
push
inc
lds
sbb
cmp
shll
loop
jmp
ja
pop
adc
popf
sbb
adc
sub
pop
cmp
and
mov
outsb
call
inc
or
mov
push
mov
inc
adc
loopne
or
xor
lea
in
dec
mov
scas
shlb
push
into
je
add
and
movl
push
mov
pop
mov
les
hlt
push
xchg
jp
lret
mov
lret
arpl
imul
lock
lock
icebp
jnp
addl
jnp
dec
cmc
out
shl
xchg
mov
aad
and
push
jnp
loop
test
cmp
pusha
call
mov
cmp
xchg
mov
sahf
addr16
sti
pop
adc
hlt
pop
leave
pop
cs
std
lea
dec
xchg
gs
rolb
and
jl
cmc
loope
sub
adc
add
stc
leave
or
mov
enter
arpl
insb
push
jb
rcrl
jl
out
mov
cmp
loopne
lcall
push
or
xorl
fadds
cltd
in
pusha
enter
xchg
inc
cmp
push
mov
hlt
mov
push
xchg
mov
pop
andl
int3
add
movsb
fwait
jmp
out
push
pop
mov
fldl
aad
jo
int
and
mov
mov
cltd
inc
dec
insb
mov
add
push
cld
xchg
bound
shll
pop
xchg
lcall
sbbl
and
dec
sbb
add
sbb
cwtl
jo
dec
mov
push
jmp
mov
adcb
push
out
test
scas
addl
fcmovnbe
xchg
and
jno
xlat
aaa
pop
push
negb
std
sub
out
shrb
dec
in
push
repz
push
sahf
cmp
jle
imul
ljmp
push
fstl
call
popa
cmp
cmc
xchg
xchg
mov
movsl
push
test
pop
push
mov
and
jl
sbb
loope
xchg
in
xor
imul
xor
pop
sub
daa
cmp
and
dec
xor
in
mov
imul
leave
imul
dec
cld
cmpsb
dec
repnz
out
dec
cltd
pop
roll
repz
sbb
mov
jge
mov
xchg
aam
rcrl
pop
fistpll
jge
out
lods
fnstsw
inc
ss
aad
fiaddl
cmp
int3
sbbl
sub
sub
sbb
jb
fstpl
cmp
sub
jmp
leave
test
add
sarl
test
pop
out
mov
push
add
and
std
push
repnz
lods
test
out
add
icebp
cmpsl
out
std
cld
fcomps
pop
cld
push
addr16
sub
aas
stos
cmp
fcompl
dec
popa
int3
sbb
and
lods
scas
mov
fimuls
add
insl
xor
sbb
fcoml
and
sub
pop
ljmp
data16
sbb
or
pop
adc
add
outsb
pusha
xchg
stos
xor
dec
mov
mov
adc
mov
ljmp
xchg
push
mov
pop
push
push
cmp
mov
xor
push
insb
lcall
lcall
push
xlat
ret
jg
notl
xchg
jmp
cmpsb
cmp
loop
mov
shrl
and
dec
jb
push
sub
sbb
mov
lds
sbb
xchg
or
or
jmp
into
in
add
movsb
push
arpl
pop
idivl
mov
inc
xor
pop
ja
loop
adc
out
mov
push
lahf
mov
enter
popl
mov
cmp
pushf
xor
push
add
in
inc
nop
xor
push
mov
pop
lret
call
loope
test
or
jno
xor
push
popa
push
pop
jbe
jbe
sarb
test
mov
sub
jg
out
clc
in
or
out
test
jbe
scas
bound
out
ficoms
int
fwait
das
dec
mov
mov
mov
mov
movsl
and
mov
lret
jl
inc
push
adc
inc
bnd
fxam
scas
in
fwait
cmp
push
negl
sub
pop
jmp
dec
mov
std
xor
int
mov
push
xchg
cmpsl
enter
ds
inc
jmp
hlt
insl
adc
cli
lahf
mov
mov
adc
int
xchg
mov
mov
dec
xchg
mov
push
lea
fbld
add
das
cmp
test
xchg
sub
xchg
mov
mov
push
jne
mov
push
jge
cltd
imul
cmp
test
mov
cmp
pop
cmp
push
int
int3
sub
mov
sbb
xchg
xchg
jge
movsl
pop
stos
jecxz
das
setp
movsb
or
push
enter
mov
pop
or
mov
lock
jb
addr16
pushf
jp
jo,pn
sub
inc
mov
lahf
mov
adc
imul
inc
xlat
add
fxch
dec
mov
push
ja
adc
cli
xchg
ds
push
add
push
mov
hlt
push
movsb
xchg
mov
add
movsl
and
or
and
loop
movb
xchg
mov
cmp
sub
pop
rcrl
pusha
xor
lcall
rcl
sbb
fidivs
das
jg
and
imull
jno
mov
gs
mov
adc
cmp
xchg
frstor
negb
sti
sub
mov
mov
iret
inc
push
jno
mov
and
dec
lea
rclb
in
mov
loopne
cld
data16
mulb
jecxz
aad
aas
jno
je
stc
push
pop
repz
inc
jne
loopne
xchg
push
in
sub
jmp
into
push
adc
cmp
ja
call
decb
push
pop
data16
incb
sahf
push
add
fwait
test
test
arpl
sbb
jnp
push
popa
sub
cmpl
push
push
icebp
lds
in
cwtl
jno
mull
cmp
pop
and
pop
adc
sub
fstpt
nop
xchg
bound
cmpsl
jne
xor
mov
push
adc
mov
xor
das
and
mov
push
mov
xchg
orl
cwtl
pop
pop
popf
mov
lahf
in
into
push
mov
das
cmpsl
orl
lock
mov
in
fmuls
arpl
stc
mov
mov
repz
fisubl
imul
mov
sbb
push
outsl
dec
mov
jecxz
sbb
jns
xchg
nop
addr16
movsb
jg
dec
shrl
jp
shrl
sti
push
loop
mov
out
jno
inc
jl
pop
or
imul
sub
shll
inc
adc
xchg
inc
xchg
mull
adc
dec
jmp
push
jmp
pop
repz
jecxz
mov
or
stos
test
dec
pop
and
mov
cmp
scas
fimuls
sbb
subl
icebp
inc
stc
lret
lds
icebp
pop
mov
sbb
sbb
test
jae
sub
repz
adc
push
dec
rolb
outsb
mov
pop
in
jne
push
sub
imul
scas
inc
mov
pop
mov
pushf
mov
inc
sbb
xor
lret
mov
inc
out
adc
sub
cltd
cltd
jne
hlt
rcrl
fstpt
sub
jne
jge
outsb
push
aam
mov
push
rorl
repnz
dec
popf
adc
fistl
in
dec
enter
rclb
aad
jns
cmpsl
push
mov
rclb
in
leave
xchg
jo
jb
movsl
cmp
shll
into
or
sbb
mov
enter
xchg
pop
mov
aad
jecxz
and
pop
or
stos
mov
xchg
ss
cld
or
mov
pop
dec
inc
xlat
bound
cmp
pop
cmpsb
add
mov
lret
loop
add
aas
arpl
xlat
push
xchg
mov
loopne
xor
fists
stos
loop
mov
xchg
dec
inc
pop
inc
enter
xchg
and
sbb
sti
mov
sub
inc
ret
js
lds
pushf
nop
and
add
xor
and
adc
mov
inc
xor
adc
dec
js
fs
cmpsl
inc
xchg
pop
jnp
sub
cmp
adc
jns
mov
dec
jle
push
lods
mov
ja
xlat
bound
sub
pusha
pusha
mov
mov
xchg
sub
outsb
dec
data16
repnz
std
lock
mov
push
push
std
fstpt
rcr
fcos
repz
push
xchg
xchg
test
ret
adc
mov
and
xor
jnp
push
mov
xchg
xlat
andl
dec
fisubs
jae
ja
loop
movsb
clc
sub
mov
jb
aad
add
repz
mov
jl
rcrl
rolb
mov
and
add
movb
rorl
adc
dec
inc
stc
xor
lcall
sti
test
sub
inc
mov
in
or
dec
mov
or
sub
in
jp
add
shll
mov
cli
pusha
out
inc
jp
movsb
test
stos
sub
xor
cmp
lret
cmp
popf
mov
imul
pop
hlt
clc
dec
fiadds
jmp
icebp
mov
sti
add
lret
sub
xor
pop
stos
add
sbbl
loopne
mov
xchg
mov
mov
jo
out
jg
aas
leave
movb
int3
inc
and
push
mov
outsb
mov
imul
and
push
push
int3
dec
mov
rorb
inc
jns
cmpsl
sub
push
mov
int3
dec
das
xlat
nop
inc
int3
stos
mov
stos
push
andl
sbb
inc
mov
cmp
inc
movsb
pop
cld
xchg
sub
out
lret
xchg
adc
xchg
inc
jno
aaa
loope
push
dec
mov
sbb
adc
sub
inc
jbe
pop
in
add
cmc
out
adc
sbb
fstpl
imul
arpl
into
and
xor
sub
add
out
jne
mov
mov
cmp
inc
mov
ss
and
sbb
jb
divb
or
mov
stc
out
xchg
adc
insb
inc
es
cmp
sbb
roll
rcrl
imul
sbb
jl
push
sub
mov
push
xchg
dec
ss
add
and
adc
outsl
ja
movsl
stos
bound
push
lahf
push
lret
lcall
out
in
jl
lret
mov
dec
outsl
adc
or
cli
imul
sbb
idivb
nop
adc
out
bound
insb
xor
mov
popf
pop
sbb
popf
cmp
dec
add
mov
pop
sub
pop
bswap
jne
add
pop
test
mov
arpl
lea
outsb
push
dec
into
movl
mov
add
add
call
or
jge
lret
cmpsb
inc
add
sbb
jmp
nop
dec
adc
jno
cwtl
or
in
xlat
inc
iret
mov
jge
pop
fldl
push
and
out
xor
pop
shl
stos
push
pop
inc
inc
mov
nop
xchg
sbbl
rolb
scas
arpl
pushf
in
push
repz
mov
les
shlb
movsb
inc
imul
jge
jge
aaa
push
jle
nop
out
push
std
xchg
rcr
xchg
mov
adc
add
and
adc
push
and
cltd
cmp
cld
mov
gs
arpl
stos
sbb
jo
repz
and
jo
loopne
jp
or
jnp
sbb
jmp
cmpsl
adc
dec
mov
add
jmp
inc
adcl
mov
into
mov
fmuls
sbb
jno
int
xor
cli
into
lcall
xor
in
and
sub
xor
inc
mov
mov
test
adc
add
mov
in
adc
push
push
pop
xor
dec
int
fcomi
imul
gs
inc
mov
xor
adc
fsubrs
test
xor
xchg
mov
sub
sahf
sub
add
sarl
mov
mov
fnstenv
or
mov
data16
int
add
dec
jp
cmpl
loope
rclb
and
insb
add
repnz
jge
test
sub
jl
imul
in
jp
add
ret
cwtl
inc
flds
out
mov
lods
roll
lock
add
push
loop
arpl
inc
dec
sbb
sbb
fsub
xchg
test
dec
cmp
and
stc
push
out
push
ror
sub
pop
in
xchg
push
push
jnp
imul
inc
push
mov
jne
aas
mov
incb
sbb
push
sbb
xchg
cli
daa
mov
add
cltd
mov
push
push
add
iret
cmp
popf
pop
cwtl
das
jne
jmp
ja
int
sub
scas
adc
js
cmp
fsubrl
and
mov
xchg
add
dec
xchg
jns
jp
bound
data16
xchg
pop
aam
addb
movsl
or
dec
lds
lcall
jl
mov
xor
xchg
push
lret
icebp
add
out
stc
jp
jle
xchg
scas
cli
test
push
cmpsl
cwtl
lock
or
nop
jg
data16
insb
cld
pop
sbb
mov
in
or
jg
lcall
push
dec
adc
or
sub
mov
lock
cld
and
add
cmpsl
mov
std
jno
addr16
aad
add
clc
jl
imulb
add
movsl
push
mov
ret
and
stc
rcrb
adc
out
dec
pop
leave
cmp
in
daa
stos
mov
sahf
xor
mov
stos
inc
out
xchg
sbb
inc
mov
xchg
mov
daa
inc
cmp
mov
rolb
mov
xchg
ljmp
repz
adc
orl
add
xor
mov
sub
loop
adc
popa
mov
or
lds
in
push
mov
loope
adc
call
in
or
jge
jle
push
stos
pop
jbe
lds
push
bound
loope
add
dec
dec
pop
ret
pop
dec
sub
mov
jmp
add
enter
dec
repz
xor
jmp
mov
fs
mov
addb
bound
int3
sub
imul
int
mov
mov
scas
dec
or
stos
cltd
cmpsl
mov
lcall
cltd
xor
mov
or
pop
jecxz
xchg
sbb
xchg
rorb
jns
lahf
adc
add
das
pop
jb
xor
and
out
mov
and
add
mov
sbb
hlt
sbb
xchg
shlb
push
mov
and
xchg
jecxz
and
mov
mov
insl
fwait
push
sub
sub
mov
out
xchg
and
jge
fcmovu
les
and
lret
mov
pop
daa
das
cmp
in
cmpsb
jp
lahf
add
mov
mov
cmpsb
scas
mov
lret
jle
jge
mov
sbb
mov
pop
shl
mov
jmp
mov
xchg
mov
sahf
pop
pop
adc
cld
in
cmp
test
pusha
cmp
es
xor
pop
inc
and
imul
mov
and
out
dec
pop
jp
jmp
sbb
mov
mov
jle
pop
hlt
popa
jnp
dec
push
xchg
adc
mov
cs
lret
ret
cld
aas
loope
add
popf
subb
daa
push
cmp
mov
mov
fcmovne
xchg
add
xlat
jle
call
stc
jnp
or
adc
xchg
mov
lcall
or
mov
mov
loope
loopne
dec
adc
jg
mov
add
push
mov
sub
adc
jb
clc
fdivrl
out
pop
loope
jns
je
pop
loop
mov
imul
cmovs
test
push
les
mov
call
ds
xor
cmpsl
cmp
adc
mov
mov
mov
outsl
xor
inc
loop
gs
xlat
and
stc
lret
sub
popa
sub
dec
adc
shlb
testb
idivl
lods
jnp
add
int3
popa
dec
xor
push
xor
in
pop
rcrb
out
sbb
ret
ds
push
inc
aam
icebp
jmp
dec
inc
rol
sbb
cmpsl
mov
daa
push
jne
xchg
add
xor
add
mov
cmpsl
in
adcl
cmp
adc
shll
inc
mov
lea
sub
gs
ret
push
bound
mov
lods
inc
test
cmp
xor
out
cwtl
cmpsb
or
lahf
jnp
mov
mov
dec
leave
push
rorb
lods
mov
in
adcb
fs
fidivl
jle
lods
popf
ret
out
adc
fcmove
sahf
pop
mov
pop
clc
sub
mov
push
push
iret
xor
xchg
pop
out
sbb
xlat
mov
inc
ret
lods
jnp
and
push
jo
into
jmp
std
xlat
icebp
cltd
scas
std
enter
sub
sub
or
loop
adc
rcrl
fwait
into
outsl
inc
lea
jnp
mov
jg
inc
sbb
xorl
ret
outsb
sahf
and
push
push
pusha
faddp
clc
xlat
out
mov
sbb
add
mov
fsubs
xchg
push
out
ljmp
mov
mov
sbb
bound
ret
cmpsb
push
sarl
dec
test
daa
sahf
es
insb
sbbl
aaa
dec
decl
cmc
es
mov
clc
and
jb
xor
bnd
mov
mov
xchg
popa
sbb
lea
inc
sbb
add
es
mov
insl
mov
out
mov
scas
mov
push
stc
sbb
xchg
and
lret
out
and
popf
in
leave
inc
aam
cmp
or
pop
gs
adc
stos
add
test
or
adc
cmp
pop
les
add
mov
lock
movsl
scas
scas
mov
pop
mov
jecxz
pop
shll
jmp
movsb
int3
or
mov
scas
add
test
mov
nop
out
or
xchg
sbb
jns
ret
stos
idivb
out
std
mov
mov
add
and
aam
fwait
ret
mov
fs
and
sub
and
jp
jmp
mov
lcall
std
xor
popa
push
jno
shlb
sbb
rcll
mov
pop
gs
sbb
outsl
push
arpl
popf
inc
fistpl
jno
or
jb
or
inc
pop
sti
cld
movsl
push
xchg
cmp
sar
ja
out
stos
movsl
add
pusha
sub
sub
lahf
add
test
pop
mov
sub
sub
pop
mov
mov
inc
int3
sbb
adc
cmc
jp
mov
test
mov
test
aaa
dec
scas
sub
sbb
push
leave
cmp
and
and
cmc
lahf
sbb
cmp
cmpsb
mov
out
mov
xlat
scas
push
dec
cld
push
outsb
pop
into
iret
jp
test
lea
mov
cmp
outsl
ja
das
push
fmuls
mov
out
popf
mov
lahf
fdivrs
push
pop
sub
push
push
sahf
loope
lcall
push
icebp
mov
lret
cltd
test
sub
adcb
dec
das
xor
repnz
pop
mov
sub
pusha
sahf
shll
jl
das
dec
adc
xor
push
or
out
cmp
jmp
sbb
gs
sbb
std
pop
cmpsl
lods
mov
jns
dec
leave
cwtl
jmp
fnstsw
std
add
xor
ficoml
out
aad
movsb
push
stos
das
mov
stos
pop
ds
inc
popa
inc
pop
lret
fs
inc
pop
lret
sbb
push
jne
or
adc
mov
popf
adc
pop
xchg
lret
jecxz
imul
push
xchg
sarl
push
push
push
pop
xor
insb
xor
in
loop
test
xor
dec
pop
jnp
ljmp
sbb
cmc
inc
adc
xor
into
mov
inc
int3
push
sbb
add
mov
add
adc
and
mov
mov
rcr
mov
movsl
pop
adc
dec
and
mov
rcrl
lods
lret
cld
xchg
sbb
dec
mov
jo
or
or
lods
jno
cmpsb
add
aaa
cltd
adc
les
cmp
xor
push
shr
testb
or
imul
repz
push
sub
and
arpl
roll
xchg
or
sarl
cmp
push
jns
sub
cld
dec
jg
test
daa
into
jecxz
daa
adc
pop
add
mov
push
cli
nop
stos
jo
test
ret
out
xor
sub
aad
or
lea
call
mov
sub
ret
and
fs
flds
je
pop
dec
icebp
add
cmp
shlb
cmp
sub
cmp
testb
cmp
out
popf
clc
sbb
into
dec
mov
lret
mov
test
xchg
add
pop
mov
add
test
cmp
lods
aam
movsb
gs
xor
add
sbb
ficoms
sbb
stos
inc
pop
xor
mov
xor
sub
cmp
add
sbb
scas
out
popa
and
ret
test
adc
leave
xchg
jecxz
and
sarb
xchg
es
mov
movsl
cltd
addb
rorl
sbbb
movsl
lds
xchg
call
shlb
cmp
sub
shrb
sarb
adc
pop
mov
lea
stc
out
rdpmc
test
or
scas
aam
je
pop
stc
enter
mov
pop
testb
int3
sarb
jno
jae
icebp
mov
cwtl
push
enter
vcmpps
and
mov
js
repnz
ljmp
outsb
fistps
les
adc
mov
popf
lahf
cmp
dec
inc
test
xchg
flds
jno
add
cld
nop
mov
repz
jl
pop
lcall
xchg
jl
add
popa
pop
cmpsb
or
pop
pop
stos
cld
hlt
fs
subb
js
mov
inc
repz
or
loope
mov
sbb
sbb
outsb
scas
cmp
adc
nop
mov
and
xchg
jp
adc
dec
into
cs
dec
pop
mov
jo
cltd
mov
cmp
les
ds
dec
repz
int3
mov
lcall
stos
mov
bound
fildll
ja
mov
mov
sbb
pop
imul
in
inc
fistpll
cli
mov
jg
stos
or
inc
mov
lret
les
loope
scas
fildll
in
push
stos
dec
xchg
xchg
jg
mov
mov
sub
out
dec
and
or
repnz
test
or
cmp
jo
repz
push
mov
jg
popa
or
dec
push
xor
outsl
cmp
ret
roll
inc
sub
bound
lea
xchg
cmpsl
pop
inc
cmp
mov
jp
hlt
mov
push
testl
incl
inc
scas
loop
rcrl
pop
push
rol
ret
pop
jecxz
subl
mov
xor
jnp
mov
cmp
add
inc
jecxz
xchg
aas
xchg
cmp
mov
pop
ret
sbb
fwait
mov
in
xor
sahf
push
push
mov
scas
daa
pop
jecxz
adc
loope
ds
cwtl
subl
ljmp
mov
out
pop
gs
test
or
scas
sub
mov
das
sub
sbb
mov
test
cmp
xchg
inc
ljmp
or
bound
or
push
push
cmpsl
or
adc
adc
rorl
mov
rorl
bound
xor
sub
dec
addr16
mov
inc
daa
mov
stos
mov
dec
das
sub
sub
mov
imul
fstl
adc
daa
pop
xor
push
xor
jmp
adc
sbb
lcall
shr
mov
xor
jge
mov
or
aas
sbb
mov
adc
jg
das
insl
popf
hlt
xchg
stc
xchg
addb
sarl
pop
pop
fimull
add
shll
scas
xchg
dec
pop
popf
sti
adc
fdivrl
adc
jmp
bound
mov
idivb
add
sub
rclb
fdivp
imul
popa
mov
shll
outsb
dec
fcompl
stos
test
mov
stos
lcall
into
call
pop
outsl
and
push
sub
xchg
or
pop
sar
leave
test
inc
mov
cmpb
clc
and
test
lret
scas
cmp
into
stos
and
fimull
add
sbbb
cld
inc
scas
sarl
lcall
fldt
loop
cmp
push
dec
aam
popa
mov
xchg
not
sub
std
and
jmp
xorl
mov
inc
ja
cmp
das
adc
ret
mov
jle
pop
sub
jge
cmp
adc
mov
sbb
shll
adc
sub
adc
or
stc
and
int
xchg
dec
push
ror
leave
and
add
jne
pop
leave
push
pop
ljmp
mov
jbe
push
add
xor
stc
mov
gs
mov
cmp
pop
inc
insl
sub
xlat
test
popf
add
inc
decl
popf
outsb
sbb
gs
loopne
insl
lock
dec
rcll
mov
push
addr16
call
jle
jns
imul
int3
xor
ret
test
add
mov
in
push
dec
icebp
or
je
push
and
sub
incl
push
out
jle
adc
stos
and
push
lds
rcll
sbb
fwait
sub
jne
js
ja
sub
mov
int3
dec
push
push
dec
fadd
lea
out
icebp
leave
loop
mov
xchg
jge
sub
add
call
xchg
pop
imul
sub
pop
lcall
fdivr
aam
stos
rolb
in
xor
cmc
pop
scas
popf
xchg
add
mov
lods
fdiv
mov
inc
inc
pop
or
cltd
std
push
addr16
mov
mov
jg
xchg
loope
and
jmp
add
aaa
and
fs
sti
loop
pop
jo
outsb
push
pop
sbb
add
cmp
sbbl
lret
adc
adc
mov
pop
pusha
push
shlb
push
test
lcall
decb
inc
test
enter
inc
adc
dec
pushf
jl
bound
inc
mov
rcll
xor
pop
jge
outsb
fwait
mov
loope
imul
pushf
push
xor
out
adc
pusha
lret
mov
pop
sub
hlt
les
push
stos
inc
lods
lahf
jl
xor
pusha
sbb
inc
sti
enter
xchg
andl
aaa
dec
insb
test
cmovnp
pop
aam
cmp
xor
mov
mov
mov
sub
imul
adc
pop
mov
or
jp
mov
and
mov
ljmp
repz
jae
dec
xchg
add
add
jae
scas
std
fisubs
add
dec
xor
shll
fnstenv
mov
and
sub
pop
jg
enter
sbb
dec
es
or
arpl
push
scas
jecxz
add
mov
stc
in
xchg
inc
inc
cmp
xor
clc
inc
adc
sub
cmpsl
outsb
xorl
add
and
out
push
push
popa
pop
loope
movsb
inc
add
clc
outsl
lahf
sbb
add
js
test
mov
movsb
mov
ret
mov
enter
data16
xorl
and
mov
test
mov
inc
cmpsb
scas
xchg
and
aas
dec
nop
pusha
cmpsl
hlt
mov
and
mov
jle
add
mov
push
aas
jns
icebp
fnstsw
push
loopne
xchg
add
adc
in
add
bsf
mov
stos
aaa
sti
fs
xchg
repnz
pop
insl
mov
mov
popa
daa
mov
fs
add
mov
hlt
data16
aaa
es
or
fstpl
inc
xchg
lds
insb
jb
movsl
shr
aam
faddl
idivl
bound
dec
fs
and
ret
test
push
movsb
rorl
fdivp
scas
and
push
lret
cld
mov
pop
in
call
adc
and
sahf
mov
jnp
mov
sub
hlt
fadds
loope,pt
fiaddl
pop
or
pop
jl
repz
int3
out
or
scas
adcl
sbb
jno
scas
out
cmp
dec
jne
inc
stc
imul
ss
psubd
test
mov
clc
mov
lea
or
out
arpl
push
push
jle
out
jge
adc
add
js
inc
mov
cmp
jmp
int
std
pop
mov
pusha
xchg
mov
dec
pminsw
int3
jbe
aas
call
ss
mov
repnz
aam
outsb
cmp
andl
sub
sbb
mov
add
fimuls
test
pop
jle
sbb
and
shll
sbbl
mov
push
or
and
bound
js
pop
nop
in
std
test
cmp
add
call
scas
jecxz
mov
jmp
mov
popf
and
mov
inc
cmp
add
pop
in
or
adc
jo,pt
lret
test
pop
outsb
rcrb
daa
mov
push
imul
fnstsw
outsb
pusha
icebp
in
adc
xchg
cld
and
xor
xchg
sub
fiadds
out
fiadds
fdivrl
xlat
cli
dec
sahf
mov
jge
push
mov
dec
arpl
ds
mov
mov
mov
shlb
aad
jb
and
push
fisubs
pushf
int
pop
test
pop
shl
lock
and
add
xor
into
jae
test
pop
and
js
lds
xchg
jo
dec
stos
mov
jle
repz
sbb
jecxz
es
dec
fnsave
cmp
sbb
mov
jp
aad
aas
rcrb
cmpsb
xor
or
cmpsl
aad
and
in
lods
dec
jl
jno
outsl
repnz
fisubs
cmp
mov
cmp
and
pop
hlt
push
xor
mov
loope
and
sub
arpl
shll
pushf
into
sahf
xor
lods
lods
inc
cmpl
rol
inc
or
popf
gs
push
movsb
das
imul
dec
mov
cltd
mov
and
push
pop
jmp
push
xchg
popl
mov
push
cmc
lret
std
jo
cmpsl
cmc
bound
lret
push
mov
jne
pop
dec
pusha
mov
mov
test
int3
jle
inc
cmp
mov
in
insl
call
dec
or
xorl
movsb
movsl
dec
test
xor
mov
loop
sbbl
sbb
jns
repz
xor
lock
in
icebp
fistps
ja
gs
add
sbb
or
call
mov
mov
cmp
push
aas
dec
dec
pop
push
out
stc
int3
dec
js
out
out
mov
or
push
fidivl
std
ficoms
push
scas
xchg
sbb
in
cmpsl
mull
je
in
es
mov
js
jae
mov
xchg
xor
sbb
lcall
inc
mov
jae
jmp
push
test
mull
cld
sub
inc
mov
pop
jns
cmp
jp
daa
mov
lea
cmpsb
push
and
test
dec
mov
iret
mov
adc
add
fildll
icebp
jae
lahf
push
jae
add
subb
inc
cs
enter
mov
jmp
adc
pop
dec
lret
ror
inc
scas
xchg
aas
aam
mov
jo,pn
pop
cwtl
add
ljmp
fs
popf
sub
xor
imul
mov
lods
inc
pop
sbb
sub
lock
or
jne
mov
cmc
jmp
mov
jnp
adc
dec
cmpb
cld
mov
push
shll
ljmp
fcomps
inc
bound
jbe
jns
jno
sbb
and
pop
filds
sbb
pminsw
lods
mov
cmp
clc
int3
pop
shlb
xor
aaa
mov
call
dec
rcll
in
leave
push
popf
add
xchg
in
add
orl
movsb
sbbl
xchg
sub
movsb
cmp
pop
xchg
jg
sarl
cmp
cs
fldl
int3
mov
clc
dec
xchg
std
adc
xchg
pop
popa
inc
andl
mov
outsl
push
test
push
jae
sti
and
jns
mov
push
dec
repnz
xchg
sbb
mov
jnp
jbe
sbb
sti
sbb
cmpsb
adc
ret
test
lret
add
arpl
adc
push
cmpsl
rorl
sahf
subl
add
idivl
into
insb
sahf
and
lods
mov
mov
inc
dec
mov
inc
cmp
mov
and
or
rol
add
in
xchg
pop
xchg
xchg
mov
xchg
adc
leave
out
fs
sbb
or
jp
out
mov
addr16
call
fmulp
js
jbe
or
in
fcmovbe
jno
xor
cld
fidivrl
jb
je
stos
dec
push
sub
stos
cltd
fmull
mov
insb
stc
pop
adc
sti
and
out
sbb
aam
sub
lret
sbb
push
xor
push
scas
adc
and
rcrl
xchg
or
pop
mov
sbb
mov
sub
adc
or
and
cmp
jmp
adc
pop
adc
mov
fmuls
in
mov
mov
or
hlt
and
js
xchg
inc
test
xor
mov
movsb
mov
aas
sbb
pop
test
sti
call
test
pop
cli
cmp
or
test
daa
repz
push
pop
iret
lock
add
push
dec
dec
es
mov
inc
and
insl
xlat
cmp
cmp
add
popf
pop
xchg
jbe
or
jecxz
call
insb
xchg
mov
push
les
or
leave
push
cs
xchg
mov
cld
test
enter
leave
sti
sbb
fsincos
subl
jg
hlt
outsl
mov
jp
mov
lahf
dec
nop
and
int3
outsb
pop
push
or
mov
lods
mov
mov
mov
jp
mov
fwait
stos
enter
std
fnclex
daa
iret
popf
mov
cmp
cmp
shlb
cmc
add
jle
push
mov
out
dec
cmp
enter
jno
jbe
xor
mov
mov
xor
mov
lahf
mov
pusha
lods
outsl
pop
lret
roll
fldenv
ret
imul
in
and
jecxz
lea
imul
dec
dec
mov
cmp
fnstsw
mov
push
mov
out
loop
pop
in
push
jae
add
inc
dec
push
mov
pop
jecxz
arpl
cmp
add
dec
clc
mov
mov
inc
das
popa
or
push
icebp
pop
jne
add
sub
sbb
pop
xchg
cmp
xchg
lahf
push
pop
inc
rclb
dec
daa
add
push
inc
roll
jnp
bound
mov
pop
push
cltd
lret
sbb
lahf
movsl
stos
push
pusha
pop
mov
and
mov
mov
enter
gs
mov
mov
pop
rolb
sbb
je
in
inc
jae
jae
loope
icebp
sub
xchg
xchg
xor
imul
inc
mov
pop
jecxz
fs
jns
addr16
or
out
addr16
cmp
insl
sub
lcall
rorl
lcall
sub
mov
mov
loop
out
xor
insb
scas
faddl
cli
lock
addl
or
or
in
or
faddl
jne
test
jmp
in
cmp
inc
xor
jg
stos
mov
ds
sti
and
push
xor
dec
popf
fildll
push
adc
pop
shl
test
clc
cmp
sbb
jbe
fcmovu
mov
jl
imul
sbb
mov
call
push
jbe
sub
pop
xor
in
lret
mov
inc
iret
push
outsb
fwait
push
hlt
inc
mov
test
mov
adc
jle
cmp
repnz
jae
cltd
and
mov
adc
cwtl
shl
dec
enter
fs
jns
cmpsl
cwtl
cvtpi2ps
sub
popa
cmp
and
sub
jmp
idiv
cli
das
addb
stc
ja
xchg
enter
add
mov
jecxz
rcrl
bound
insl
jmp
popf
xchg
mov
mov
mov
imul
sub
cs
mov
lret
xor
aaa
shr
xor
push
jae
sbb
outsl
in
or
push
les
mov
or
insb
add
adc
inc
adc
lcall
push
popa
pop
push
dec
test
scas
test
xchg
fs
in
ret
call
push
ficompl
jmp
jns
rorl
jmp
adc
add
pop
dec
xchg
xchg
pop
push
and
mov
pop
in
lret
jnp
iret
inc
pop
aas
loop
dec
mov
pop
push
addl
mov
push
push
subl
cmc
fbld
mov
test
lds
mov
push
inc
jbe
dec
and
into
ficoms
cli
jnp
xor
xchg
dec
push
dec
push
fbstp
out
cmp
xor
fucomip
xchg
dec
fwait
adc
adc
dec
push
fwait
dec
mov
xchg
ret
shr
sbb
adc
in
sub
add
mov
arpl
movsb
mov
lcall
ljmp
pop
lods
scas
pop
push
rolb
loop
cli
int
stc
jecxz
or
js
pop
mov
out
or
daa
mov
insl
popf
stos
cs
pusha
mov
out
xchg
jecxz
or
ljmp
shll
lods
or
push
push
pop
adcl
sub
popf
cmpsb
pop
roll
insl
sahf
mov
int
ror
fistpll
mov
jmp
fwait
mov
mov
outsb
arpl
and
rep
negl
sub
aas
mov
test
addr16
int3
jmp
jp
insb
dec
add
cmp
sub
test
leave
push
shrb
popa
cmpsb
shlb
call
insl
pop
adc
addb
xor
divl
and
jp
xchg
and
daa
lahf
sub
bound
les
das
test
addr16
sahf
pop
std
adc
rorl
shll
outsb
popa
shl
scas
or
dec
inc
push
sub
xchg
outsb
pop
testb
dec
xchg
add
inc
negb
dec
jp
adc
aaa
iret
dec
cmp
sub
mov
mov
sbb
xchg
fsincos
shr
enter
cmp
int
scas
insl
or
jl
frstor
xchg
sub
stos
test
pop
pop
test
imul
and
dec
ljmp
cmc
scas
movsb
inc
inc
push
ss
jge
ss
push
mov
pop
stc
pop
dec
jne
ret
fildl
shr
mov
enter
or
lcall
mov
mov
mov
lods
mov
cmpsb
jnp
arpl
mov
and
sub
pop
push
lea
call
idivb
mov
push
imul
movsb
sub
int
and
pop
orb
dec
cmp
dec
adc
dec
movsb
push
inc
xchg
dec
inc
mov
sbb
ljmp
cmpsb
or
std
jmp
mov
dec
scas
mov
daa
inc
movsl
into
cmpl
mov
jmp
adc
cmpsl
pop
sbb
jmp
jne
push
adcb
push
jecxz
movsl
mov
mov
push
inc
and
or
into
mov
xchg
xchg
push
and
or
cmp
pop
or
dec
cmp
mov
or
mov
dec
test
stos
repnz
cmp
movsl
call
enter
cmpsb
mov
lret
adc
sub
es
fnstenv
or
push
pushf
jp
mov
pop
sbb
adc
iret
mov
test
add
sbb
and
and
jo
je
pop
fistpll
pcmpeqw
imul
dec
and
push
sbb
les
mov
xor
sti
lock
xchg
inc
xor
repz
popl
mov
fcompl
ret
ds
insb
and
mov
jae
lock
fisubrs
bound
loope
jle
out
sbbl
cmc
pop
outsb
aaa
pop
mov
jle
lea
icebp
xchg
sahf
cmpsl
aaa
fs
testb
in
scas
hlt
dec
repz
add
pop
push
das
add
std
rorl
mov
mov
inc
xor
push
pusha
rcrl
test
cmp
mov
sbb
add
imul
and
ds
and
push
adc
xor
sbb
gs
orl
int3
in
mov
mov
dec
fidivl
mov
ds
fstl
out
test
mov
out
mov
mov
mov
fwait
loop
add
shll
stc
mov
stos
pop
lds
mov
mov
jne
repnz
push
test
in
stos
sub
and
mov
push
add
lret
popa
repz
mov
cli
adc
fmuls
cli
cld
sub
push
in
lods
pop
xor
dec
sar
ret
cmp
lock
cli
xchg
or
cmpsl
cmp
out
iret
lret
pop
jae
mov
fcom
and
xlat
jns
in
testb
push
cmp
ds
lahf
lcall
imul
jp
icebp
mov
aad
pop
xchg
jne
out
aad
dec
out
movsl
fmull
or
xor
adc
push
sbb
push
daa
add
mov
cld
mov
cmp
mov
daa
or
test
jl
push
call
mov
out
ret
pop
sub
icebp
and
into
xorl
cld
cmp
int
lret
cli
lret
mov
lds
xchg
rcrb
xchg
sbb
sub
sbb
enter
mov
test
inc
mov
ds
test
jne
aas
dec
lods
imul
lods
mov
jnp
xor
mov
adc
cmc
movsb
adc
adcb
popf
insb
xor
addl
mov
int3
int
add
mov
sti
pop
scas
pop
xor
cli
in
or
mov
fisttpll
nop
xchg
pushl
fimuls
xchg
lahf
cmc
pop
imulb
addr16
and
pop
adc
test
push
stc
pop
jnp
mov
xlat
and
push
push
and
and
xor
scas
cmp
xlat
sbb
ds
xchg
imul
pop
lret
dec
mov
mov
call
cmc
mov
pop
add
pushf
add
cmp
sub
ds
push
lret
dec
xchg
push
mov
jnp
jp
mov
outsl
inc
popa
js
outsb
lods
sub
psubq
sub
fldcw
outsl
jmp
mov
sbb
inc
sub
dec
in
xchg
add
repnz
cs
xchg
aas
push
cmpsb
jmp
xchg
jmp
jmp
or
sub
shll
jp
mov
insl
outsl
nop
sub
mov
dec
push
xchg
out
cmc
pop
jne
jmp
pop
push
ja
nop
dec
jne
out
notl
add
or
shrb
dec
sub
pop
sbb
cwtl
xor
and
jl
cmp
nop
mov
fimull
cmp
hlt
jmp
in
pushf
pop
lret
cld
mov
xor
test
adc
lods
mov
jae
add
mov
pop
ret
shll
sti
mov
out
mov
mov
and
out
cmp
cmp
pop
push
out
cmp
imul
xchg
shl
cmpsl
mov
adc
mov
sub
lds
ja
inc
jb
stos
sub
lahf
pop
addb
pop
inc
or
aad
ds
outsb
rcll
sub
cs
sub
aas
and
lret
pop
shlb
push
xchg
nop
test
rcr
fnstenv
lods
xchg
shlb
leave
jb
push
enter
pop
add
movsbl
lret
sbb
rorb
lds
adc
xchg
pop
pusha
hlt
test
js
test
xlat
fs
loopne
dec
divl
mov
loopne
add
clc
stos
out
jno
add
sti
xchg
push
add
xchg
mov
sub
xchg
roll
adc
adc
lea
pop
push
push
iret
jnp
jnp
insl
push
out
lds
aad
or
or
int
xchg
pop
repnz
xor
sbb
mov
outsb
mov
nop
pop
enter
jnp
into
out
fstl
ror
movl
lods
stos
out
push
mov
outsb
icebp
xchg
xor
cs
pop
fwait
insb
sub
test
outsb
leave
pop
popf
dec
xlat
adc
or
push
stc
cmp
in
jnp
push
pop
out
jbe
lcall
daa
lret
js
and
inc
lea
in
mov
hlt
arpl
xlat
xchg
mov
jae
in
jno
cmp
push
xchg
xor
or
pop
fidivrs
mov
push
xchg
push
loopne,pt
push
lcall
push
xchg
push
insl
inc
incb
push
mov
pop
shlb
lock
ljmp
notb
test
rcr
and
pop
imul
imul
cmpsb
fsubs
shrl
sbb
testl
inc
lea
cmp
popf
data16
sub
popf
mov
repz
add
std
call
sub
sub
xor
cmp
pop
movsl
add
mov
in
sarl
xchg
call
push
out
pushf
jmp
movsl
sbb
jp
mov
aas
mov
sahf
jecxz
andl
cli
sub
add
push
mov
inc
cli
shl
fnstenv
cmpsb
ficomps
sub
sub
fiadds
cmp
test
ljmp
cs
pop
xchg
insb
popa
cmpsl
cmp
fidivl
sbb
ja
fldenv
repz
dec
call
adcl
jno
out
mov
dec
pusha
pop
xlat
rcr
loop
in
xchg
negl
pop
test
insl
xor
mov
mov
daa
xor
sub
icebp
xchg
subb
xchg
ficomps
xchg
dec
mov
pop
iret
int3
jl
mov
and
sub
pushf
sbb
jo
addl
jbe
push
dec
addl
in
data16
cli
push
and
dec
pop
mov
aad
jns
aas
push
inc
jmp
cs
jle
add
mov
pop
stc
push
add
pushl
mov
scas
mov
and
mov
lds
xchg
loopne
leave
sub
push
cmp
push
es
movsb
add
out
and
mov
aam
fdivrs
imul
test
inc
mov
xor
addr16
int3
icebp
pop
push
mov
jno
lret
test
mov
testl
mov
in
or
jl
inc
repz
add
call
into
cmpsl
mov
mov
cmp
es
mov
mov
arpl
dec
enter
addr16
into
addb
cmp
pop
insl
add
adc
mov
int
jne
jle
fistl
xchg
fsubl
or
fiaddl
dec
sti
fimull
adc
dec
cmp
daa
sub
xor
popa
pop
xchg
pop
add
subl
lcall
pop
out
out
sahf
sbb
xor
mov
add
insb
in
insb
mov
pop
cmp
in
iret
add
mov
in
es
push
in
lods
mov
mov
push
xor
cmp
jecxz
push
repnz
push
cmp
bnd
fnstsw
pop
jno
cmp
xchg
addr16
mov
xchg
pop
or
loop
jecxz
das
xchg
inc
stc
cmp
mov
pop
cmpb
adc
jne
inc
hlt
dec
pop
mov
cmp
arpl
fs
into
lcall
mov
or
mov
mov
adc
scas
xor
push
jno
add
sbb
lods
jp
sbb
push
sbb
and
daa
xchg
xlat
aas
mov
and
mov
out
cmp
xchg
aad
push
call
and
in
mov
inc
push
ret
and
pop
movsb
cwtl
cltd
lahf
push
push
in
sub
mov
pop
xor
cli
push
mov
xorl
sbb
loop
test
cmp
adc
mov
mov
lods
cmp
popf
cld
pop
push
fs
test
fwait
scas
shlb
sub
mov
jae
popa
jbe
call
fsubrp
mov
push
adc
dec
in
or
mov
mov
jne
fucomi
inc
cvtps2pi
adc
inc
test
sbb
ljmp
lahf
dec
filds
push
mov
insb
add
mov
shrl
or
inc
loopne
sbb
ret
fucom
stos
out
sub
cmpsl
mov
lods
lods
xlat
mov
out
xchg
mov
push
fs
sub
push
jg
jb
mov
dec
cmp
sub
xor
rcrl
out
xor
push
pop
movsl
mov
lret
pop
push
pop
dec
push
daa
iret
xchg
lock
cltd
popf
mov
xlat
mov
pop
arpl
and
ds
jecxz
test
mov
ss
xor
ss
inc
lcall
std
xchg
stos
cmp
leave
aad
jmp
out
xor
xchg
mov
imul
cmp
dec
ja
xor
arpl
test
sbb
jnp
ja
pop
xor
sbb
divl
fbld
pop
and
xlat
xchg
mov
scas
in
mov
mov
call
dec
mov
int
mov
adc
stc
adc
imul
or
movsb
and
jns
push
adc
inc
jge
int3
enter
pop
sub
rcrl
int
cmp
pop
lcall
mov
pop
incl
push
push
inc
rorl
adc
pop
mov
push
cmp
shl
sbb
jge
out
inc
mov
mov
out
cmc
lret
xlat
sbb
mov
imul
loopne,pn
or
rcrb
repnz
jle
mov
inc
add
cmp
cmpsl
nop
push
pop
mov
ja
out
int3
push
dec
jnp
mov
jg
shl
pop
push
cmp
cld
xchg
into
test
pop
lret
out
cmpsb
cld
in
pushf
pop
call
push
lret
lods
ret
jns
jp
sbb
imul
push
add
lock
fs
jne
mov
jg
sub
popf
and
orb
sbb
outsb
rol
pop
dec
cmp
xor
cmp
cmp
repz
mov
push
lea
int3
aad
xor
fs
daa
cmp
sub
mov
adc
rcrl
rorb
pop
push
jecxz
ljmp
mov
movsb
out
sbb
pop
hlt
mul
push
je
xlat
shll
and
and
and
xchg
jmp
out
jo
push
insl
inc
sbb
sbb
mov
or
inc
shll
mov
out
mov
mov
pmaxub
clc
pusha
cmpb
jle
ja
mov
repnz
pop
rclb
mov
lods
jne
pop
mov
or
popf
push
jmp
xchg
push
flds
dec
popf
jl
sbb
inc
ret
cmp
imul
dec
cwtl
fcompl
rorl
adc
xchg
xchg
and
mov
push
in
cmp
pop
adc
add
xor
gs
jmp
adcl
icebp
in
test
push
cmp
sti
mov
push
cmp
xchg
dec
cmp
vpmaddwd
push
push
mov
xor
cli
scas
rclb
cli
jo
sbb
cmp
push
jecxz
lds
pop
insl
lret
ss
mov
loop
lds
xchg
imul
mov
imul
test
mov
test
cmp
mov
fs
push
adcb
add
imul
lock
jnp
or
cmp
lds
jbe
aas
movsb
push
orb
rcll
adc
lcall
mov
insl
and
jg
enter
leave
jecxz
push
pop
negb
cmp
and
movb
jne
dec
mov
cmp
pop
inc
sbb
sbb
clc
dec
xor
pop
imul
jns
js
jb
pop
jl
or
jp
pop
push
aas
mov
mov
cmpsl
pop
pop
ja
test
aaa
js
movsl
push
stc
cld
clc
pop
popa
sub
insb
dec
and
mov
iret
cmp
or
sbb
cmp
pushl
ficoms
pop
mov
movsb
rorb
test
and
inc
lcall
outsb
popf
and
rolb
lcall
lret
xchg
mov
pop
lret
cmp
subl
adc
aad
sub
push
clc
or
lods
dec
xchg
or
je
popa
mov
in
lret
jbe
rcrb
mov
stc
mov
and
mov
inc
fst
fs
pop
adc
push
cwtl
ja
mov
mov
arpl
push
jle
mov
or
mov
inc
dec
mov
imul
and
cmp
mov
scas
xchg
sub
mov
enter
inc
inc
jl
push
outsl
or
and
subl
cmp
pop
sub
stos
test
das
arpl
pop
push
lods
int
lcall
lret
mov
inc
and
outsl
push
arpl
es
push
or
jbe
shr
outsl
int3
imul
repnz
add
rclb
aam
lods
es
pop
mov
inc
dec
jp
int
ret
mov
inc
in
jbe
push
mov
repz
push
ficomps
sti
ret
add
xchg
jmp
cmpsl
jle
dec
sbb
mov
movl
sub
aad
cmp
add
rcll
push
pop
adc
repz
dec
sbb
inc
shlb
add
cmp
xor
sahf
jge
mov
or
mov
fstp
scas
and
sarb
scas
and
mov
mov
loopne
sub
adc
pop
sub
add
mov
das
xchg
insb
mov
fnstenv
lcall
scas
aam
jb
push
pop
and
cmp
xor
es
dec
into
lods
sbbl
pop
dec
test
jne
jbe
adc
push
pop
xor
mov
pushf
dec
dec
flds
and
out
xor
push
addl
inc
test
mov
push
test
xchg
mov
mov
enter
sti
xchg
push
pop
jmp
mov
pop
insl
ss
aad
ss
je
xor
adc
cwtl
lret
pop
jmp
push
mov
jns
adc
xchg
cwtl
pop
stos
fistl
mov
adc
or
addr16
lods
lods
jl
mov
xchg
scas
sub
adc
sbb
bound
dec
adc
lahf
mov
sub
dec
inc
fwait
inc
pop
daa
add
loop
mov
in
cwtl
sub
mov
enter
lods
divl
add
xor
rcll
sbb
enter
je
data16
rol
sarb
lods
mov
ljmp
jnp
add
mov
sbb
scas
andb
adc
push
mov
ret
dec
dec
mov
and
xchg
pop
sub
xchg
clc
rcll
inc
ret
fs
stos
mov
jecxz
sub
clc
mov
pop
and
lods
sub
mov
push
iret
sbb
xchg
frstor
add
pop
jae
xchg
dec
and
cmp
pop
into
lock
sti
cmp
jmp
inc
cmp
lock
ja,pn
jne
xor
cmpsl
rorl
stc
and
xchg
test
xchg
or
and
push
fildll
das
mov
and
mov
addl
mov
imul
xlat
sbb
das
arpl
push
xchg
lret
scas
mov
mov
mov
in
les
test
mov
out
cmp
pop
jp
int
add
loopne
xor
jle
cs
dec
pop
mov
popa
mov
mov
push
repz
sbb
mov
jle
das
or
pusha
adc
fcmovnbe
mov
adc
iret
call
repnz
or
xlat
idivl
rcrl
lods
repz
into
insl
and
scas
and
dec
xchg
aad
jp
or
lret
jmp
mov
aas
out
shlb
std
hlt
repnz
les
aas
repz
push
sti
pop
inc
jle
mov
cmp
data16
lcall
add
dec
or
lods
loop
ja
or
hlt
sub
icebp
pop
cld
loope
lea
aaa
mov
and
mov
mov
rcll
shll
xchg
xlat
push
sbb
mov
push
mov
sbb
stos
pop
lods
or
js
mov
scas
aam
mov
cltd
cltd
movb
jne
push
arpl
in
sbb
cmp
cpuid
xor
outsb
pop
adc
pushf
xchg
repz
mov
enter
inc
imul
jbe
mov
clc
fsubrl
xor
and
rcll
xchg
mov
mov
jbe
inc
xor
movsl
aas
imul
push
in
faddl
js
inc
mov
and
lcall
sub
scas
or
pop
jp
aad
push
or
xor
pop
jecxz
in
pop
pop
addr16
mov
jbe
inc
inc
xchg
ret
fcmovu
mov
idiv
imul
rcrl
pop
inc
xlat
dec
iret
xchg
jecxz
insl
jnp
jecxz
sbb
and
adc
inc
rclb
mull
outsl
xchg
rorb
cmc
bound
fisttpll
mov
mov
jae
enter
icebp
cld
test
fwait
push
test
pop
sbbb
sbb
lods
sbb
imul
fs
jecxz
test
push
lock
xor
je
push
cmp
cwtd
in
iret
inc
lcall
clc
pop
sahf
es
cmp
and
mov
sbb
pop
sub
dec
or
push
sub
imul
fbstp
sub
aas
dec
testb
sub
shr
inc
fwait
aaa
les
cli
stos
push
stc
scas
das
cmc
sbb
testl
xchg
mov
int
jne
movsb
hlt
mov
pop
mov
popa
mov
daa
jecxz
xor
jge
jmp
mov
cmp
mov
mov
pop
mov
xor
lods
xor
stos
mov
mov
pusha
jge
jecxz
cmp
rorb
hlt
and
addr16
and
pop
inc
popa
sbb
sahf
mov
icebp
fistps
sbb
dec
sub
xchg
push
movsl
push
movsl
stc
lods
clc
out
sbb
gs
jno
pushf
imul
or
dec
js
scas
xchg
dec
mov
out
dec
in
arpl
pop
lods
pop
pop
icebp
xor
push
sahf
sbb
push
or
xor
loopne
cmc
cli
inc
sub
sbb
push
rcrl
pop
lret
inc
push
push
pop
adc
add
test
movsl
inc
inc
and
pop
aam
imul
push
inc
movsb
ret
xor
jb
xor
cmp
out
push
sub
js,pt
inc
and
decl
adc
sub
sub
shl
mov
cs
push
addr16
jmp
mov
mov
shr
testb
ud1
es
sub
sub
lods
pop
sbb
mov
mov
xchg
arpl
sub
dec
ret
in
mov
xchg
xrelease
shl
daa
test
adc
data16
stos
sbb
cmp
into
cmpsl
out
push
nop
push
lahf
test
pusha
mov
or
jne
xor
in
cmp
hlt
and
rcl
adc
add
fcmovu
inc
inc
and
std
add
aaa
pop
test
pop
dec
das
ss
fldenv
mov
push
int3
mov
das
addr16
add
push
dec
imul
sbb
mov
sti
mov
lahf
daa
std
xchg
sbb
call
enter
jne
clc
push
dec
js
rolb
inc
sub
or
push
out
sbb
mov
out
fs
mov
or
mov
add
dec
outsb
jle
push
aam
adc
iret
sub
outsb
ljmp
xchg
sub
xchg
adc
lret
out
loope
or
inc
push
mov
xor
xchg
pop
inc
sti
mov
adc
pop
pop
dec
lret
pop
js
sub
insb
mov
dec
fstpt
xchg
xchg
lock
fucom
jmp
loopne
mov
jge
sub
pusha
mov
sbb
mov
push
xlat
lcall
scas
xchg
push
fisubl
pop
jno
pop
rcrb
inc
ret
mov
test
daa
jo
or
stos
nop
dec
fs
jg
inc
jne
xchg
inc
push
cmp
cld
jmp
xor
lock
dec
mov
popf
sub
pop
push
lds
gs
push
xchg
sbb
dec
cmc
mov
adc
xlat
insl
xor
mov
bswap
lods
cmp
hlt
iret
test
out
cli
aad
aam
inc
jg
loop
pop
into
mov
shlb
push
sub
jmp
dec
ss
repz
aas
call
pop
add
fisubrl
inc
add
ret
xor
xor
or
loop
mov
jge
or
dec
mov
out
or
xchg
popf
pop
mov
ds
fsubrs
scas
out
mov
addr16
push
mov
imul
cli
jle
fwait
aaa
sahf
gs
cli
xor
das
in
sbb
hlt
push
enter
iret
mov
push
dec
mov
push
ja
xchg
fidivrl
inc
rclb
aam
lea
dec
adc
sbb
lods
lret
cmp
push
add
pop
or
pop
pop
xchg
xor
rorl
paddusw
sbb
int
cmp
fildll
pushf
mov
and
icebp
cmp
push
jnp
std
cli
mov
or
and
and
rcr
jo
adc
and
adc
imul
xchg
cmpsl
cmp
adcl
push
popa
xor
sub
loop
cmpsb
or
cs
and
xor
hlt
pushf
fstpl
jbe
es
in
mov
mov
push
popa
std
adc
jmp
ffree
dec
movsl
js
lds
pop
nop
xchg
xor
mov
or
or
testl
mov
mov
es
mov
jp
pop
icebp
jo
dec
push
gs
andps
add
cmp
call
in
mov
adc
jns
repnz
inc
cld
and
cmpb
xchg
es
imul
inc
or
mov
sbb
mov
push
hlt
push
dec
nop
loope
xchg
stc
mov
lods
xchg
nop
std
lock
fmul
daa
cmc
cltd
lcall
test
ret
mov
loop
mov
mov
sub
out
push
push
jge
aas
or
add
xor
fnsave
push
lret
negb
inc
jmp
mov
push
sub
out
jg
leavew
lcall
dec
mov
test
icebp
movsl
jg
mov
in
cmpsl
mov
dec
sti
pop
inc
mov
jge
cmp
xchg
sub
push
xlat
lods
hlt
push
xor
sub
jge
rcll
dec
out
int
xor
pop
dec
cli
cld
je
mov
mov
int
rorb
shrb
xor
jbe
jl
lock
call
into
je
ljmp
mov
and
adc
jns
dec
cmp
or
push
sahf
icebp
mov
jl
ljmp
mov
lea
lcall
fdiv
pop
adc
jmp
jl
mov
gs
clc
inc
push
mov
jns
xorb
mov
jmp
push
icebp
push
xchg
arpl
dec
xchg
not
aaa
cli
mov
aam
sbb
push
mov
pop
icebp
out
loopne
ljmp
test
mov
push
shrb
jne
xchg
out
cmp
add
repnz
pop
lods
and
mov
into
into
xlat
jo
sub
pop
cmpsl
inc
push
jo
jo
adc
enter
pushf
inc
jnp
inc
test
std
or
xchg
add
int
push
mov
data16
les
sbb
mov
dec
mov
sbb
xor
sbb
lret
test
das
inc
scas
int3
mov
lret
inc
inc
sti
jne
rorl
pop
icebp
mov
mov
addl
sub
js
xchg
pop
cmp
push
inc
sub
mov
xchg
roll
daa
add
sarl
push
mov
push
mov
mov
mov
jp
in
xor
iret
call
mov
sbb
mov
pop
je
jne
cmp
dec
sbbl
mov
add
shll
jae
scas
push
mov
cmpb
inc
cltd
cld
in
sbb
cmc
xor
ret
xchg
adc
adc
mov
and
push
popl
push
mov
cli
mov
inc
in
ficoml
lret
pop
rcrl
and
sub
adc
xorl
push
sbb
out
repnz
lea
insb
and
fistpl
xor
mov
jle
cmp
sub
shll
adc
repnz
inc
adcl
jno
mov
cs
jl,pn
fs
rorl
pop
jmp
dec
mov
mov
cmp
mov
mov
mov
gs
shll
sub
mulb
je
into
clc
push
and
movl
cmp
cmpsl
pushf
mov
push
xor
jo
call
out
jg
dec
loopne
pop
movsl
and
lea
aam
mov
aad
mov
add
in
xchg
jge
pop
lret
aad
sbb
pop
fs
nop
jne
or
mov
outsb
mov
push
decb
or
xchg
stos
roll
ja
out
notl
sbb
xor
adcb
jecxz
test
or
and
aam
push
xor
shlb
add
mov
in
pop
push
dec
es
faddl
stos
jg
mov
push
xor
pop
int3
push
pop
test
mov
xchg
sub
fnstenv
movsl
xor
push
hlt
push
lods
dec
ss
mov
repnz
or
mov
std
push
gs
fsubr
jmp
in
pop
push
test
sub
sti
xchg
out
inc
aas
iret
out
add
out
icebp
add
fidivs
jmp
xchg
mov
testl
enter
sbb
fldt
mov
test
push
js
outsl
mov
adc
lahf
popa
test
xchg
outsb
or
or
in
pop
inc
push
dec
mov
aas
scas
mov
cmp
fdivrp
outsl
in
mov
in
arpl
fiadds
subl
loop
mov
add
inc
dec
nop
sub
pusha
imul
xchg
add
xor
lahf
nop
xchg
fisubl
mov
mov
push
out
ljmp
mov
jne
inc
mov
cld
insl
repnz
loope
inc
xlat
shlb
lahf
je
stos
test
and
fldcw
dec
pavgw
ret
push
sub
inc
fldcw
popf
int
xor
int
add
sbb
in
popa
cmp
xchg
or
add
pushf
loop
or
inc
xchg
nop
jno
xor
pop
popf
mov
fwait
test
or
lret
mov
add
insb
fcomps
outsl
repz
loop
mov
out
mov
loope
pusha
dec
rorl
xlat
insl
inc
divb
inc
lock
imul
stos
or
push
sbb
lock
lcall
lahf
in
mov
rcrb
xor
jno
outsl
bound
push
clc
outsl
mov
lcall
test
push
jl
test
lock
mov
sub
push
adcl
or
jo
xchg
arpl
xchg
les
xorps
and
fsubrl
dec
add
mov
bound
mov
cmp
call
aas
mov
xor
add
mov
push
push
es
pop
adc
lret
pop
shl
scas
ljmp
test
fsubl
jns
rcrb
lods
mov
xchg
cmp
js
xor
add
rcll
push
shll
inc
clc
mov
ljmp
dec
lea
lds
jae
insl
loop
imul
int
ret
jns
adc
movsl
mov
jbe
lcall
jge
or
sbbb
xchg
frstor
sti
iret
lahf
shlb
and
xchg
cmpb
mov
jbe
imul
stc
jecxz
sub
sub
sub
jl
dec
ljmp
sub
out
adc
mov
sub
dec
inc
mov
push
mov
cmp
xchg
into
lret
mul
cmc
push
or
sbb
xor
in
push
das
gs
jg
fistpll
imul
cwtl
pop
nop
pushf
pusha
xchg
js
cmc
mov
and
orl
mov
mov
fwait
inc
xor
push
imul
stos
ror
aas
aam
pop
fwait
lret
cmpl
dec
mov
cwtl
mov
out
mov
sti
or
out
push
inc
mov
es
mov
jl
repnz
fisttpll
cmp
jno
adc
loop
xchg
mov
mull
sbb
jmp
sub
xor
orl
mov
lods
add
stc
cmp
js
jle
cmp
repnz
repnz
add
mov
mov
bound
scas
adc
icebp
and
dec
xchg
dec
fidivrl
pop
push
out
mov
movsl
xchg
lods
adc
push
scas
cmpsl
cmp
mov
jo
xorb
ret
xor
inc
shr
loope
test
or
cs
cltd
inc
and
cmp
in
fcomip
mov
jmp
mov
sub
ret
mov
fidivs
sub
scas
ljmp
sbbb
add
insb
push
mov
stc
cmp
or
pop
in
adc
or
shl
jne
stos
call
pop
push
fistl
xor
mov
mov
inc
push
cmpsl
sub
and
add
sbb
movsb
lods
cmpsl
mulb
adc
push
xor
jp
mov
adc
xchg
ficomps
dec
sar
cli
jge
and
xlat
inc
insb
in
sub
mov
pop
int3
shlb
pop
mov
push
mov
jnp
or
pop
jge
push
add
sub
clc
jmp
inc
sbb
jae
push
popf
mov
sarl
cwtl
sub
xlat
xchg
push
push
mov
ds
lea
shrb
fwait
xchg
push
gs
jno
xchg
xchg
lods
call
push
out
xchg
cmpsl
or
pop
in
cld
repnz
jbe
pushl
xchg
and
aaa
fcmovu
inc
cmp
dec
pop
and
push
jge
xchg
int
int
nop
sbb
test
stos
addl
insb
pop
push
addr16
mov
fdivrl
sub
xrelease
sub
xchg
shrl
imul
ss
adc
push
rcll
jnp
inc
repnz
out
push
jnp
xchg
insl
push
or
xchg
inc
cltd
fsts
or
sbb
pop
test
xchg
sarb
aad
mov
xchg
scas
cli
mov
out
or
lcall
adc
stc
cld
jns
push
ljmp
loope
jmp
dec
enter
push
leave
dec
jne
scas
sti
sub
lods
popa
lea
sbb
jo
shll
mov
mov
xor
mov
pop
in
pop
and
lret
inc
jbe
lods
push
subb
repz
movsl
out
cmc
jge
mov
stos
sbb
sti
push
jecxz
sub
jge
push
ja
fsub
jp
in
inc
xlat
pop
adc
scas
imul
imul
sarb
push
std
sti
add
call
cli
mov
mov
cmpsb
xchg
sbb
aas
cmp
lcall
aad
aas
fnsave
jge
jb
mov
mov
mov
rol
push
sbb
scas
cld
sbb
add
call
loopne
call
add
pop
push
pusha
loopne
mov
mov
sub
pop
inc
rol
js
xor
sarl
int3
mov
test
jns
lret
cmp
imul
lcall
push
xor
mov
mov
int
stos
dec
test
jecxz
jmp
push
iret
shl
push
sub
test
pop
pop
jecxz
loop
push
push
ja
into
test
xchg
mov
dec
sub
fsubp
arpl
stc
mov
shlb
sbb
add
inc
push
mov
and
cmp
sub
mov
or
and
es
rolb
mov
lret
jmp
jmp
pop
add
pop
push
lds
insl
mov
fcmovnu
imul
push
jno
in
sbb
add
dec
jnp
sbb
aad
and
fwait
mov
das
push
lock
loop
nop
dec
stc
jne
and
mov
mov
out
dec
scas
push
imul
xlat
push
ds
lret
idivl
xor
in
add
or
jp
and
sub
call
testl
pop
test
add
push
movsb
xchg
or
outsl
inc
jb
and
lods
ret
popf
addr16
test
xchg
add
pslld
lahf
mov
inc
lret
je
jecxz
and
xor
dec
scas
add
adc
xor
push
fwait
repnz
in
in
xlat
mov
mov
fnstsw
lock
stc
inc
xchg
outsl
add
dec
push
popf
lock
ret
stc
clc
and
movsl
xor
scas
sbb
sbb
dec
stos
jp
cmpb
and
sbb
push
loopne
inc
push
fwait
mov
or
and
mov
jbe
decb
aas
dec
es
mov
or
outsb
jns
jle
xchg
fwait
popf
das
rcrl
lahf
mov
cmp
insl
ds
mov
push
jmp
or
sub
fdiv
mov
jle
imulb
pusha
adc
jle
xchg
sahf
aas
mov
das
jnp
jge
popa
ror
xor
rsm
sub
add
mov
gs
sub
fistl
in
sbb
cli
into
push
cwtl
rolb
add
int
js
or
daa
xor
inc
mov
sbb
fdivrs
cwtl
dec
mov
fwait
pop
mov
and
dec
bound
sbb
outsl
xchg
lret
fmul
repnz
mov
inc
lahf
cmpsl
push
cltd
ds
fnsave
cmp
test
sti
jb
in
cs
out
xlat
out
xchg
pop
jg
xchg
sbb
push
clc
out
pop
fld
sub
lods
idivb
or
xor
xor
mov
pop
add
roll
fsubrl
inc
clc
hlt
mov
dec
andl
jo
xlat
inc
inc
xor
pop
sti
adc
mov
sub
cmpsb
jnp
mov
scas
dec
fldt
out
push
jp
mov
test
rep
add
jae
test
mov
test
pop
mov
add
imul
push
imul
inc
movsb
ds
mov
jb
push
fdivr
add
fwait
add
xchg
mov
mov
push
pop
mov
pop
inc
mov
fstl
insb
clc
popa
mov
push
mov
push
in
enter
sub
cmp
inc
jbe
xchg
add
cmpsl
inc
push
jns
mov
xor
mov
push
or
adc
mov
push
cmp
cs
inc
xlat
jb
rcr
sbb
movsb
cmpsl
stos
mov
das
xorl
sub
jle
lcall
jmp
dec
cmp
sub
test
pop
into
movsb
sub
mov
in
mov
sub
mov
mov
cmp
in
enter
inc
out
push
icebp
movsb
dec
and
inc
rclb
sub
xor
daa
popa
fildl
xor
adc
mov
nop
gs
and
xor
das
fidivrs
jo
idivl
xchg
or
ds
xchg
mov
pop
and
jnp
iret
sbb
inc
int
inc
add
je
je
add
lock
stc
aam
ss
movsl
lods
pop
cmp
sub
fwait
mov
nop
scas
pushl
jb
fmuls
cmp
sub
pusha
gs
insb
cwtl
mov
lods
jnp
mull
xchg
add
xchg
xchg
popf
andl
sbb
jae
jnp
test
or
mov
pop
fs
add
fsubrl
cmpsl
xchg
mov
ret
jns
mov
mov
mov
orl
mov
inc
sbb
cmc
push
aaa
mov
mov
push
gs
into
sbb
xchg
add
jle
mov
jp
fdivrl
scas
or
lret
enter
pop
loope
push
sub
pop
mov
es
out
aas
int3
sbb
pop
test
je
sub
mov
in
pop
pop
in
jns
add
push
stc
outsl
fldenv
pop
test
repnz
repnz
pushf
roll
dec
adc
mov
addr16
sti
add
xchg
add
and
lret
mov
adc
movsl
dec
rol
push
sub
add
push
cli
mov
out
add
sub
in
loopne
sbbl
jmp
dec
repz
or
je
gs
mov
out
push
adc
addr16
push
xchg
cmpsb
movsb
mov
xchg
fcoms
push
mov
inc
mov
or
not
scas
daa
xor
mov
pop
adc
je
adc
pusha
push
mov
js
pop
sub
xor
aas
xchg
sub
sbb
and
inc
addps
mov
adc
jne
mov
movl
mov
mov
add
inc
aas
inc
inc
pop
or
rorb
add
cmpsb
adc
push
lcall
pop
or
jns
inc
or
int
mov
int
movsb
lcall
sbb
add
dec
adc
mov
movsb
bound
push
mov
cltd
popf
icebp
jo
push
into
pop
or
lods
dec
jge
push
cmp
xor
xchg
xchg
je
jne
testl
hlt
in
shrb
aaa
mov
mov
aas
add
xor
pop
pop
pop
in
lcall
mov
pop
fmuls
xchg
adc
lret
or
push
ret
pop
or
lea
mov
not
sbb
sub
cmp
sbb
jo
mov
sbb
fwait
std
mov
fcmovbe
cmpsl
pusha
adc
sahf
add
jbe
jne
sub
pop
xchg
fs
out
mov
cmc
lods
push
and
jno
dec
clc
scas
push
pusha
ss
int3
pushf
movsb
xchg
outsb
inc
adc
push
test
add
imul
pusha
adc
sub
rcl
sti
mov
xchg
jecxz
scas
dec
xlat
jge
push
jae
xchg
xor
add
movsb
inc
and
mov
push
pop
pusha
ret
push
push
shlb
jmp
jecxz
cmp
pop
lcall
out
push
scas
imul
popf
insl
sbb
shll
mov
push
in
ret
nop
fwait
dec
les
xchg
addr16
or
mov
pop
jg
push
sbb
xchg
jmp
ret
testl
sbb
push
or
outsb
test
inc
ljmp
outsl
xor
sub
or
add
add
cmpl
inc
aad
pushf
gs
out
cs
shlb
js
xor
cli
cmp
cmp
insb
stos
out
sub
pop
add
adc
jle
fistl
sbb
mov
jbe
dec
fdivrs
hlt
test
add
mov
dec
and
fwait
ljmp
insb
call
lret
pop
enter
mov
call
xor
mov
shlb
jmp
cmp
mov
xchg
ja
mov
add
outsl
mov
je
int3
xor
test
push
jbe
in
fisttpll
cltd
push
cltd
and
pop
xchg
pop
jle
cmp
popa
je
out
mov
push
inc
adc
mov
mov
ret
fdivs
test
and
test
into
stos
push
add
je
lock
repnz
addb
lods
test
add
mov
xor
push
pop
or
pop
insb
sbb
jb
dec
mov
xor
sarl
icebp
pop
imul
mov
das
insb
mov
or
in
add
ja
pop
fnsave
sub
ss
and
jge
sahf
xchg
lock
movsl
aad
push
mov
int3
nop
test
insl
xchg
aaa
mov
inc
out
cltd
dec
xor
fistl
addr16
repnz
outsl
add
rol
adcb
mov
add
in
dec
push
ret
inc
xor
fsqrt
cltd
push
std
xchg
dec
in
xchg
cmpsl
sub
cld
xchg
push
inc
sub
mov
pushf
stos
pop
push
shrb
out
movsl
gs
dec
adc
push
scas
mov
sarb
sub
sbb
jmp
das
aam
mov
lea
sti
mov
jb
xchg
fnstenv
js
xchg
pop
arpl
mov
insb
xor
adc
mov
inc
shrl
pop
fdivrl
push
jecxz
ret
xchg
sbb
cmp
imul
inc
push
aam
mov
push
sub
dec
fmulp
mov
lea
int3
ja
cmpsb
cmp
jp
pop
jno
mov
xchg
int
push
scas
dec
pop
mov
mov
and
and
enter
loopne
pusha
lock
daa
aam
add
add
cs
adc
gs
sbb
arpl
roll
imul
ss
jp
insb
pusha
stos
dec
mov
push
adc
mov
icebp
adc
mov
aam
pop
add
xchg
fimuls
sub
insl
daa
lds
push
push
jg
push
cmpsl
sub
mov
mov
cmp
dec
rcl
repz
insb
add
lods
push
cmp
test
stos
mov
xor
cltd
or
cmp
pop
rolb
or
xchg
aad
leave
imul
mov
stos
jne
test
lds
inc
adc
dec
lock
lock
mov
loop
cmpb
cmp
mov
jmp
push
push
xchg
in
sbbb
sbb
jne
icebp
adc
xchg
push
mov
jg
jae
fdivrl
pop
mov
scas
nop
adc
and
scas
cmp
mov
push
and
test
jp
cmp
mov
icebp
test
jle
xor
sbb
adc
clc
test
adc
jo
xchg
gs
jmp
push
mov
inc
not
and
addb
inc
lods
adc
sub
xchg
mov
sbb
pop
mov
fwait
pop
cmp
ret
lret
sub
test
or
out
pop
fidivrs
pusha
jo
mov
pop
test
imul
adc
pop
sbb
mov
aaa
sbb
ss
push
leave
or
notl
cs
xchg
mov
or
int3
cld
dec
inc
push
in
jbe
ds
mov
movsb
pusha
add
sahf
adc
mov
xchg
fldl
mov
cld
sarb
setns
jne
loope
ret
insl
addl
lahf
xor
sahf
mov
scas
enter
push
andb
addb
stos
cmp
cmp
pop
ret
inc
in
leave
add
lods
ret
xchg
inc
dec
xchg
pop
mov
push
test
dec
sub
mov
gs
xchg
push
jnp
adc
jge
add
scas
pop
insb
pop
das
sahf
jno
clc
inc
xchg
or
pop
inc
flds
ffreep
fadd
mov
cltd
mov
inc
jnp
icebp
ss
mov
imulb
add
pop
iret
lret
mov
mov
lods
xchg
clc
and
int
divb
or
sar
inc
scas
test
mov
push
push
gs
sbb
or
push
lahf
ret
and
iret
clc
and
dec
repz
jo
cwtl
or
sub
inc
sbb
nop
and
sarl
adc
xchg
inc
mov
daa
repz
push
dec
divb
pop
bound
adc
xchg
shr
push
fidivl
pop
sbb
movsb
mov
jnp
lock
fndisi(8087
inc
bnd
jecxz
mov
mov
xor
cmp
cmp
push
inc
mov
test
mov
out
es
stos
insl
mov
push
jl
fldenv
into
add
dec
adc
xchg
jno
and
test
push
dec
pop
je
scas
test
push
and
dec
xchg
and
stc
jae
xchg
mov
push
subl
lret
push
xchg
cmc
nop
push
mov
outsl
popa
test
fmul
in
mov
subl
jne
sub
sub
adc
or
xchg
subb
js
ss
popf
inc
lret
std
fisttps
cmp
lods
pop
nop
cmp
test
inc
cld
je
push
scas
pop
pushl
jne
ljmp
mul
pop
leave
mov
pop
loope
pushf
jns
and
and
adc
or
dec
cmp
leave
push
mov
imul
or
pop
ret
sbb
pop
in
jge
jmp
jecxz
int
adc
sbb
adc
jmp
or
jnp
add
insl
repz
popf
jo
pop
dec
mov
imul
dec
jmp
scas
mov
adc
mov
stos
test
lcall
lret
dec
mov
outsl
dec
lods
js
outsb
xchg
fsubs
fistpll
mov
mov
jnp
lods
ljmp
xchg
out
outsb
or
cmc
pop
test
xor
icebp
pop
lods
jbe
mov
push
fnstcw
dec
rcrb
outsl
and
adc
sbb
iret
iret
cmpsb
popa
or
xchg
mov
xlat
xchg
push
add
jnp
sbb
mov
movnti
shll
jmp
cs
cmp
stos
or
pop
add
pop
push
jmp
sti
jnp
loope
mov
cmpsl
fcomi
xor
or
cmp
mov
scas
sub
cwtl
mov
scas
push
inc
lret
call
adcl
subb
inc
push
sarb
ss
adc
imul
and
movsb
xchg
hlt
or
cmp
pop
out
stos
es
es
or
ficoms
test
repz
std
sub
push
pop
push
jmp
inc
push
add
lret
and
dec
mov
xchg
mov
cmp
inc
test
push
into
outsb
xor
jae
xor
and
sti
mov
scas
stc
pop
mov
push
cwtl
mov
sti
mov
rcrb
rcll
cmp
or
xor
cltd
xchg
pop
orb
test
testb
sbb
add
sub
int3
scas
sub
dec
fsubrp
mov
out
cmpsb
enter
rorb
addr16
push
xchg
test
hlt
adcb
out
rcll
bound
inc
test
xor
push
gs
orl
jne
xchg
mov
push
sbb
inc
sub
in
and
jne
inc
or
mov
and
push
sbb
push
lock
test
mov
jge
mov
sub
repnz
mov
adc
or
decl
pusha
dec
jbe
xor
inc
push
inc
jmp
or
push
int
fcomi
mov
ja
dec
repnz
out
or
mov
add
ffreep
lods
push
daa
mov
std
cmc
xor
xchg
das
ds
push
pop
sub
addb
sub
sub
pop
pop
mov
negl
xchg
inc
aas
test
subb
fisttpll
push
out
dec
jp
pop
xor
or
mov
shrl
out
mov
in
sub
div
loop
bound
inc
xchg
dec
dec
popl
push
data16
sahf
test
clc
daa
sbb
dec
stos
movsb
add
fildl
cmp
mov
stc
xorb
sbb
xor
sbb
fimuls
test
out
sbb
stc
inc
shll
and
and
aaa
or
cld
xchg
aas
xor
aas
scas
adc
nop
mov
xchg
mov
xchg
ss
leave
xor
jge
adc
mov
pop
cld
push
mov
cmc
push
sub
sub
icebp
aam
je
inc
sub
daa
pusha
lods
icebp
inc
add
xchg
ret
stos
mov
fucomip
es
mov
pusha
pop
in
sbbb
sub
sahf
loopne
insb
enter
das
into
js
int
jno
repnz
gs
loopne
xchg
aam
pop
and
rcrb
and
inc
loop
pop
sub
out
sub
inc
fisubrs
xchg
cltd
pusha
pop
mov
out
fldenv
fsubrl
pop
insl
add
mov
cmp
jo
mov
out
pop
pop
mov
outsb
subl
mov
sti
notb
incb
add
pushf
mov
push
divb
insl
fdivs
sub
idivb
jns
mov
outsl
test
pop
dec
arpl
push
xchg
mov
mov
cmp
adc
repz
xchg
ret
pushf
mov
add
jge
imull
jl
movsl
pop
insl
sahf
leave
add
pop
and
test
rcrl
push
and
cmc
daa
mov
mov
cmp
mov
or
add
daa
test
jg
or
repnz
push
addb
xchg
notl
pop
test
and
xchg
outsb
inc
xchg
pop
lea
outsb
test
shrl
sbb
repnz
and
scas
addr16
sub
mov
iret
xor
inc
fs
jecxz
nop
push
out
and
adc
jnp
nop
adc
adc
daa
jo
insb
jle
pop
aas
mov
ret
test
or
xchg
lods
cmp
scas
rorb
xlat
xlat
or
stos
cld
jbe
mov
xor
push
leave
mov
ret
subl
mov
in
sbb
inc
cmp
jnp
cmp
mov
loope
ja
push
and
pop
loopne
fdivs
adc
or
cmpsb
pop
mov
jo
xor
scas
mov
shlb
pop
sub
leave
pusha
neg
dec
in
sub
dec
inc
out
jl
mov
sbb
dec
cltd
mov
xor
dec
cld
shr
mov
adc
sub
mov
jo
mov
shll
test
push
dec
out
push
test
loopne
jmp
pop
fst
ds
and
add
adc
jno
repz
test
in
loope
fstp
xor
mov
pop
and
sub
insl
sahf
test
pop
inc
push
ja
loope
gs
repz
pop
mov
mov
and
push
jl
cs
aam
adc
xadd
add
pop
xchg
adc
add
shll
xchg
xchg
loopne
lahf
insl
pop
sbb
lret
pusha
sub
dec
test
mov
lcall
sub
push
ds
std
lahf
sti
push
jno
cltd
fsubp
repz
cmp
aam
cld
add
add
adc
xlat
jge
sub
into
sbb
mov
or
popf
gs
in
movsb
arpl
push
mov
sbb
les
rcr
stc
loopne
repz
fucomp
push
mov
divl
and
stos
or
in
lret
xor
ja
ficoml
inc
mov
and
dec
pop
fs
jae
loopne
dec
int3
dec
add
inc
add
mov
rep
in
push
pushf
nop
jae
out
scas
sub
outsb
shll
cmp
fsubl
push
pop
sahf
mov
pushf
bound
fisubs
sbb
das
push
push
fimuls
pusha
and
mov
adc
leave
cmp
sbb
mov
push
sbb
mov
push
push
adc
push
out
out
push
sbbb
jp
lock
push
std
les
mov
mov
mov
and
cmp
sbb
lcall
fidivrl
mov
adcb
movsb
xchg
fstp
cmpsl
dec
lret
ljmp
loopne
stc
in
xor
gs
cmpsl
push
inc
mov
push
or
in
push
mov
cmc
add
push
sti
mov
pop
ds
daa
lock
add
mov
xchg
xor
push
lret
push
pop
jne
dec
and
test
adc
add
int3
or
iret
and
gs
fimull
add
fwait
mov
imul
aas
or
mov
pop
inc
pop
push
dec
jg
sub
dec
adc
push
scas
pop
loopne
or
mov
sub
dec
sbb
outsb
add
jbe
js
jmp
pop
sub
add
into
jo
fistpll
jae
mov
out
test
adc
or
mov
orl
add
lahf
fcomp
inc
pop
jmp
imul
xor
sbb
fnop
xlat
shll
adc
xchg
jbe
inc
rcrb
fcomp
insb
shlb
jne
mov
dec
add
cmp
adc
pop
aad
in
iret
pop
add
lahf
mov
push
sbb
cmp
xchg
adc
cmp
add
lock
icebp
faddp
repnz
dec
sbb
aad
or
sub
and
and
cmp
xchg
sti
call
icebp
pop
mov
lahf
cmp
mov
hlt
push
in
pop
mov
jbe
sahf
dec
test
inc
push
and
xchg
mov
or
fbstp
sarb
add
cmpxchg
mov
push
pusha
imul
jns
cmp
xlat
bound
outsl
sub
xor
enter
fldt
shrb
daa
fld
lcall
sbb
lds
dec
in
sbb
xchg
jle
add
aad
xor
mov
fisubrs
cmp
cmp
stos
mov
fcoms
sti
repnz
fcmove
lea
sahf
sbb
cmc
out
loope
mov
dec
orl
inc
mov
les
ret
mov
lret
inc
push
je
mov
repz
adc
xchg
mov
xchg
fists
push
and
ja
pushfw
add
movsb
loope
inc
cld
inc
enter
add
fiadds
pop
mov
lret
shll
ja
ret
push
pop
or
leave
stos
mov
mov
dec
push
adc
lahf
fldenv
pop
hlt
push
xor
js
lcall
pop
fwait
or
ja
mov
test
or
pop
cmp
jne
jbe
jge
fiaddl
mov
jp
push
xor
fistps
push
out
adc
jge
pop
push
cmp
mov
les
xchg
scas
inc
dec
int
xor
imul
aaa
sub
mov
or
js
es
cmp
cmp
fldenv
lahf
bnd
add
nop
rcll
mov
scas
jmp
setge
xchg
sbb
xor
pusha
adc
xchg
cmp
popa
mov
shlb
jg
popl
mov
cmpb
dec
jmp
jne
bound
and
or
enter
call
mov
jnp
add
lock
loope,pt
pop
subl
lcall
lds
mov
jl
add
mov
inc
add
xchg
push
ficoml
cmp
lods
clc
push
fadd
xchg
pop
adc
cltd
add
dec
cmpsb
pop
jecxz
add
mov
pop
pop
int
loope
adc
in
test
cltd
inc
cmp
mov
bnd
fs
lds
mov
cmp
lods
sub
inc
sbb
outsl
stos
mov
nop
inc
push
cwtl
loopne
dec
sbb
pop
jp
sahf
sti
jecxz
jecxz
add
fwait
aad
xchg
push
dec
ret
loop
daa
dec
add
gs
outsb
cmp
clc
add
pop
stos
fldt
jg
stos
push
sbb
cmp
sahf
int
cltd
mov
push
adc
push
push
cmp
lea
cli
je
fmuls
les
lcall
pop
imul
out
into
jo
push
ret
jno
mov
loope
sbb
mov
sbb
push
xchg
mov
inc
xlat
inc
jne
inc
xchg
js
aaa
imul
push
xchg
pop
add
inc
pop
dec
mov
dec
or
push
inc
adc
and
in
and
test
cmp
jp,pt
sbb
shll
pop
mov
movsl
xchg
roll
inc
pushf
rcrl
insl
add
fimuls
leave
mov
add
out
sbb
inc
inc
and
xor
pusha
decb
push
ljmp
in
loop
cwtl
mov
add
aad
jns
push
out
push
sbb
cltd
fwait
mov
jge
jae
pusha
insb
mov
add
dec
xchg
sbb
popf
int
imulb
xchg
pop
xorb
ljmp
sbb
roll
mov
ljmp
scas
mov
pop
cmp
in
jns
loop
lret
out
mov
dec
decl
inc
jmp
add
pop
mov
push
mov
cld
mov
jecxz
in
dec
sub
dec
int
enter
sahf
pop
scas
or
pop
xor
pop
and
in
test
inc
mov
push
pushf
jl
test
mov
mov
mov
or
xor
test
push
rolb
adc
lret
pop
add
mov
jg
in
jb
mul
mulb
in
sub
aaa
mov
outsl
pop
ficoms
orl
popa
and
cmp
les
or
enter
roll
inc
paddd
or
sbb
aad
or
movsb
xor
incb
cmp
lea
inc
rorb
mov
pop
add
and
xor
andl
rolb
dec
push
xchg
sbb
pop
mulb
mov
xor
xchg
lea
xchg
ja
dec
add
dec
fisubl
popf
movsl
stc
lods
mov
ret
sti
pop
sbb
add
mov
sub
cmpsb
lcall
outsl
or
clc
lret
jmp
lcall
movsl
cld
fdivrl
fwait
pushf
test
push
daa
dec
stc
outsl
xor
xchg
inc
mov
sbb
and
ficompl
movsb
rcll
data16
sub
push
mov
stos
sbb
adc
mov
popa
inc
add
jmp
fsubrl
push
je
dec
insb
icebp
jno
mov
sar
icebp
ret
or
imul
scas
inc
xor
xchg
jecxz
add
adc
dec
add
jnp
dec
mov
insl
das
pop
lcall
out
sbb
inc
dec
js
ret
and
mov
in
cs
lcall
in
dec
and
push
pop
mov
add
dec
fmuls
mov
lock
in
xchg
lret
jle
movsb
rclb
and
push
pop
lea
mov
mov
sbb
pop
pushf
pop
xor
inc
out
in
xchg
inc
ja
push
and
xlat
gs
bound
xchg
cmp
cmp
add
call
and
stos
fstl
aam
inc
fimull
mov
or
push
push
xchg
pop
shll
sbb
push
mov
loopne
shlb
dec
push
inc
scas
push
cwtl
outsb
outsl
pop
mov
xchg
mov
out
mov
push
je
lds
xlat
mov
sub
iret
jge
in
mov
ja
or
inc
jo
aad
insl
inc
sti
and
scas
loopne
shlb
sti
pusha
or
mov
cmpsb
dec
push
push
push
and
dec
cmpsb
ret
mov
pop
loope
mov
test
add
jl
je
fs
dec
hlt
push
pop
cltd
xor
cmpsb
jo
push
xor
pop
fwait
cmpsl
xor
cmp
sub
out
pop
movsl
adc
mov
cmp
movsb
mul
and
js
sub
sbb
test
cmpl
insl
mov
fidivl
mov
pop
and
push
out
movsb
mov
pusha
daa
pop
data16
mov
jmp
add
in
fsub
mov
fcmovb
in
jmp
rcrb
push
aas
cmpsb
adc
jnp
push
movsb
movsl
sub
cli
cs
subb
jmp
mov
mov
jns
cmc
daa
and
add
jbe
pop
jbe
jecxz
orl
mov
decb
add
jno
and
dec
mov
out
pop
push
repnz
add
imul
pop
repnz
movsl
hlt
gs
cmc
jnp
sbb
mov
sbb
inc
pop
aam
mov
pop
or
pusha
test
inc
cld
jle
inc
lahf
inc
xor
ljmp
mov
jecxz
test
hlt
cld
lea
mov
mov
xor
sbb
sub
rcrb
sti
jge
pop
and
leave
cwtl
aas
clc
xor
lret
push
jne
cmpsb
repnz
pop
sub
loope
pop
mov
and
push
fidivl
lock
call
jecxz
sub
or
sahf
cwtl
sbb
cmp
jl
pop
jns
in
out
mov
test
imul
out
xchg
xor
mov
dec
add
test
add
stos
sbbb
jl
and
lret
clc
dec
data16
push
dec
add
inc
xor
jmp
stc
js
and
sub
mov
sub
cmp
sbb
outsb
cmp
fidivrs
dec
pop
mov
jp
fists
jbe
movsb
and
sub
xor
jnp
movsl
dec
int3
addr16
cmpsl
dec
sub
aam
cmp
xorl
insb
sbb
cwtl
add
pop
rolb
push
addb
repz
shll
test
jg
ljmp
rclb
push
pop
mov
leave
jl
jae
jg
xlat
mov
mov
and
xchg
lcall
rcll
loope
mov
mov
xchg
sub
dec
and
loopne
popf
cmp
lcall
pop
repnz
ret
arpl
adc
lock
add
mov
cmp
int3
jne
rol
sub
jae
cltd
add
mov
jo
mov
jo
test
movsl
jae
loope
inc
test
fistl
sub
cld
jae
push
jmp
dec
lea
dec
xchg
cli
inc
shlb
adc
aas
push
jno
iret
cmpsl
mov
rolb
jp
int3
sub
add
xchg
adc
pop
push
jmp
fld
into
je
push
adc
push
mov
aam
inc
sbb
jmp
xchg
mov
add
cwtl
lods
lret
out
in
das
pop
push
ret
enter
arpl
cmp
push
ljmp
push
xor
push
fbstp
jp
addr16
stos
rcr
inc
movsw
cmp
push
mov
cmpsb
mov
cltd
cmp
inc
mov
mov
mov
mov
sub
mov
xor
into
lahf
decb
ljmp
ss
pop
insl
mov
dec
lea
adcl
rcrl
daa
and
gs
inc
popa
insl
lcall
push
inc
insl
fs
fdivrs
fwait
mov
sub
xchg
sub
cltd
push
fcoml
pusha
mov
xchg
loopne
dec
sub
lret
enter
lods
push
add
icebp
outsl
sub
addl
sbb
push
jecxz
sub
jno
pop
std
pop
mov
sub
cmpl
data16
jg
inc
test
xchg
mov
in
push
mov
push
repz
xchg
int
inc
xor
popa
enter
dec
lds
xor
xchg
pop
pop
js
jb
loopne
pop
mov
mov
sti
add
and
popf
ret
jnp
fmull
and
addl
and
or
mov
dec
inc
push
jmp
or
dec
jbe
int
jbe
and
sub
mov
movsl
dec
mov
xor
push
imul
jg
mov
adcl
fstpt
dec
int3
sub
xor
in
inc
add
xchg
dec
cmp
flds
jmp
xor
cmp
movsb
push
call
mov
repz
xchg
pusha
mov
jae
je
jl
cmpsl
xchg
push
mov
dec
daa
inc
xchg
mulb
pop
xor
ror
mov
arpl
in
jb
sub
call
not
or
ffreep
mov
pop
out
or
mov
push
subb
jge
arpl
sarb
mov
inc
ret
sbb
outsb
jns
inc
popa
push
adc
adc
negb
loopne
fildll
mov
out
notb
dec
pop
gs
dec
push
imul
mov
rolb
xchg
mov
push
mov
repnz
std
lcall
cli
leave
lahf
notb
sbb
pop
cwtl
mov
sti
mov
std
test
mov
ja
into
repz
xchg
rolb
stc
add
jle
push
int3
incb
adc
mov
push
jg
sbb
cltd
mov
ja
or
xchg
xchg
test
mov
adc
mov
scas
pop
sub
ret
or
in
fwait
dec
fisttpl
add
xchg
outsb
pop
cmp
mov
xchg
mov
dec
mov
fwait
cmp
mov
mov
mov
ret
or
add
shll
int3
or
daa
mov
push
jo
sub
inc
adc
add
dec
push
sub
and
js
in
int
jecxz
loope
mulb
movaps
jecxz
fidivl
push
or
pusha
orb
push
ss
jno
jae
notb
rclb
mov
mov
cli
mov
adc
mov
mov
lcall
test
cltd
stos
js
inc
mov
aaa
push
loop
xlat
cli
cltd
cmpsb
dec
pop
xchg
inc
inc
int
ss
xchg
jns
add
push
jo
mov
add
and
add
scas
mov
sub
leave
or
std
ja
cmpb
and
fsubl
aas
lock
push
rorb
shrb
cmp
in
and
in
test
stos
sti
in
or
and
jl
sbb
mov
push
lahf
mov
inc
pop
mov
sub
int3
mov
sahf
cmp
pop
sub
jnp
out
subps
add
into
sub
dec
mov
outsl
in
pushf
dec
in
pop
or
les
in
mov
mov
scas
add
sub
jo
clc
jecxz
outsl
push
jle
jne
cmpsl
aam
outsl
testl
cmc
jns
mov
jle
out
pop
les
out
cmp
inc
pop
and
test
loop
scas
mov
cwtl
repz
testb
add
xchg
dec
pop
dec
int3
push
xchg
mov
pop
push
cli
lds
mov
mov
data16
rorl
cltd
inc
data16
cmp
movsb
adc
stos
mov
out
and
xor
xor
fisttpll
pop
addr16
std
xchg
xor
ret
hlt
dec
gs
imul
add
xchg
xlat
xchg
xchg
stc
inc
ficomps
xor
out
out
push
loop
loop
shll
test
xchg
cmp
rol
addr16
mulw
in
xchg
repnz
cltd
dec
vpackssdw
mov
push
stos
popf
loope
cli
cmp
pop
int3
push
pop
xchg
out
inc
sub
push
ja
sbb
dec
aas
jo
add
jbe
adc
pop
scas
jl
inc
in
fadd
rcr
test
aam
pop
stos
daa
dec
ja
jo
inc
xlat
jnp
mov
negl
push
mull
inc
loope
notl
ja
fisttpl
popa
out
stc
leave
movsb
dec
or
lcall
dec
xchg
faddl
pop
lahf
nop
cmpsb
pop
loop
sub
pop
aas
bnd
testl
ret
inc
negl
mov
test
fs
mov
cmp
dec
mov
xchg
add
pop
jnp
sbb
mov
push
popa
aaa
jns
add
push
cmp
cs
pop
leave
dec
data16
shl
mov
mov
mov
sbb
outsb
dec
aad
ds
mov
pop
test
dec
add
pusha
mov
cmp
sbb
push
or
jns
movsl
mov
pop
jl
push
cmp
pop
test
ja
repnz
idivl
fs
fcoms
sbb
dec
push
jmp
add
xchg
and
incb
roll
cmp
lea
jp
clc
mov
ljmp
lods
or
or
jno
aad
sub
shll
clc
or
mov
lds
sbb
popa
nop
jecxz
push
clc
mov
movl
neg
push
lret
aas
or
mov
pop
xchg
mov
xchg
je
mov
out
fidivrs
dec
mov
jo
pop
xchg
mov
and
pop
popf
iret
clc
pop
jle
int3
sub
and
in
cmc
shlb
fnstenv
rorb
scas
push
xchg
or
or
test
outsb
std
cld
ret
out
mov
imul
stos
inc
mov
jno
bndldx
leave
mov
mov
pop
iret
inc
cltd
xchg
pusha
mov
mov
inc
sbb
push
sub
push
clc
pop
arpl
cmp
aaa
cmp
rcrb
roll
ds
pop
jmp
cmpl
sub
ja
sbb
in
testl
fidivrs
in
test
popa
add
inc
pop
rcl
mov
cld
ds
mov
in
jbe
mov
loopne
adc
jns
cmp
xchg
loop
push
push
mov
ja
mov
jb
loope
testl
es
cmc
or
pop
scas
sarl
inc
cmp
and
cmpsb
and
xor
jbe
dec
lret
aas
dec
jnp
insl
or
mov
in
and
pop
icebp
fsubrl
adc
push
cltd
mov
adc
jbe
mov
andb
pop
dec
adc
imull
pop
xchg
in
dec
cmc
cmpl
lea
xor
les
dec
icebp
es
outsl
adc
lock
pop
cld
xor
mov
sti
aad
and
or
call
sbb
lret
push
in
rcll
sub
aam
mov
or
mov
stos
xchg
push
dec
cmp
push
test
lcall
into
xor
ret
add
insb
jmp
and
popl
js
mov
inc
andb
pusha
xchg
sbb
add
and
dec
xchg
lea
ljmp
pop
add
lret
bnd
stc
sbb
sub
out
cmp
jle
inc
mov
push
sbb
push
sbbb
sub
cltd
sub
jmp
mov
rcll
es
push
adc
fildll
push
inc
scas
in
lds
and
mov
push
movsb
mov
cmpsl
ret
jecxz
aad
inc
ds
imul
outsb
jmp
cmpsb
adc
jno
mov
jnp
or
and
repnz
or
daa
cmp
call
adc
sbb
or
lret
scas
mov
sbb
stc
mov
jns
pop
iret
cld
mov
inc
lea
js
adc
push
mov
dec
mov
mov
adc
sub
pop
mov
push
shlb
xor
cmp
decb
adc
mov
mov
push
je
inc
mov
cs
pop
icebp
mov
popa
jecxz
sbb
pop
cmpsb
stc
inc
rorl
pop
dec
sahf
loop
test
and
out
jns
out
jmp
in
adc
pop
xchg
fsubp
sub
pop
insb
loop
xchg
pop
fisttpl
sbb
dec
out
rorl
mov
rolb
test
adc
mov
gs
mov
mov
pop
fwait
popf
movsl
loopne
add
test
sbb
cmpl
cmpsl
inc
jo
cs
xchg
mov
adc
inc
pop
inc
xchg
inc
lea
mov
pop
fsubl
ss
adc
xchg
mov
or
cs
adc
xor
sbbl
aas
sub
pop
repz
mov
test
aas
xchg
pushf
pop
pop
leave
adc
and
xor
xor
insb
movsl
roll
dec
aas
add
push
insl
lcall
test
push
xchg
mov
cld
jmp
and
push
out
test
mov
test
xchg
push
adc
cli
sub
js
cld
clc
jnp
adc
ret
pop
adc
ljmp
in
xor
and
ss
sbb
fisubl
cltd
mov
ss
cld
xlat
jb
xchg
jae
pop
addr16
and
fcoms
bound
jno
jbe
mov
fbstp
mov
cmove
repnz
and
int3
jno
les
and
jl
mov
or
enter
fsubs
jmp
push
push
les
rcll
into
pop
xor
dec
imulb
cwtl
add
popf
xor
ss
mov
popa
in
inc
lahf
sbb
enter
xor
add
ret
scas
iret
notl
loope
in
push
jge
mov
insl
mov
mov
jmp
popa
jge
fldcw
test
aad
mov
push
mov
sbb
jb
adc
pop
cmp
into
xchg
and
fnstenv
int3
inc
pop
dec
bound
stos
xor
jecxz
dec
dec
rcll
lahf
mov
into
in
jge
mov
adc
or
and
jmp
mov
mov
sbb
adc
cmp
repz
adc
and
idivl
pop
cmpsl
stc
jecxz
adc
aaa
repz
sub
cmpsl
jno
outsb
dec
ja
cld
sbb
xchg
js
lahf
add
in
imul
jle
cmp
lock
sbb
mov
mov
pop
dec
mov
xor
jb
out
mov
dec
out
jno
idiv
test
imul
js
repz
sbb
nop
sbb
test
sbb
out
mov
inc
sbb
cmpsl
dec
scas
cmpsl
mov
jo
test
std
push
mov
lret
dec
mov
xor
lock
sub
ret
jb
lea
sbb
int3
andl
out
es
xchg
aam
cmp
sub
gs
or
dec
rol
movsl
lock
cmp
fwait
sbb
xlat
ret
scas
rcrl
in
mov
je
mov
pop
sub
add
add
fstl
test
xor
dec
jmp
imul
xchg
push
sbb
iret
xchg
sub
popf
outsb
int
jl
sub
jle
mov
in
ljmp
pushf
jb
mov
imul
mov
mov
ljmp
ja
out
fcmovb
xchg
mov
enter
inc
scas
cmc
movsl
fstl
mov
popf
enter
aas
or
mov
sbb
jmp
mov
orl
mov
cld
lock
xor
xor
mov
stc
das
pop
push
jge
mov
dec
cmp
lock
mov
mov
test
jmp
das
mov
lret
das
in
cmp
sub
jnp
fildll
jo
in
repnz
pop
into
add
mov
sti
testb
jne
jns
lods
sub
xor
adc
xor
sar
and
ja
jmp
push
iret
jecxz
cmc
ret
loop
aas
lcall
repz
jo
adc
shrl
lods
pop
xor
sub
out
inc
aam
mov
xlat
jnp
or
nop
ss
das
pop
push
pop
and
cmp
insb
or
lods
xchg
roll
mov
pop
adc
push
push
lcall
push
xor
test
push
std
adc
or
ret
ljmp
sarl
popa
push
mov
lcall
jp
xchg
cmpl
sub
iret
sub
xchg
ja
lahf
mov
loopne
call
adc
orb
or
js,pt
xchg
sbb
sbb
adc
pop
out
add
test
testl
and
rcr
xchg
cmc
daa
add
and
push
stos
ss
leave
out
xchg
test
lea
mov
ljmp
gs
orb
jne
fisttpll
sahf
movsl
cmpsb
and
push
test
cwtl
inc
jne
fbld
testl
adc
fcom
xchg
mov
rclb
push
pop
sub
lods
fdivrp
in
and
test
mov
xor
and
fwait
xor
dec
add
or
mov
movsl
xor
popa
or
mov
xchg
daa
xor
lahf
pop
or
dec
loope
mov
mov
mov
fdivr
pop
lds
mov
stc
jne
adc
in
pop
cmc
xchg
pop
cs
shll
into
in
test
jbe
cmpsb
xor
or
into
inc
mov
jae
jne
jno
or
mov
or
popa
imulb
fldcw
cmp
xchg
fldl
and
mulb
das
nop
imul
pop
and
pop
mov
cltd
or
inc
imul
pop
andb
xor
xchg
push
adc
xor
fcmovbe
mov
sbb
dec
iret
nop
pop
gs
not
and
test
mov
lods
int3
cs
lahf
add
leave
fsts
pop
lahf
hlt
arpl
lea
sbb
push
test
cmpsb
mov
test
pop
push
inc
jp
sub
arpl
incl
ret
popl
xor
clc
out
pop
mov
into
mov
ljmp
push
or
sub
cmp
sbb
mov
jnp
cs
jmp
scas
sub
add
aam
mov
pop
subl
cmp
aaa
fnstcw
pop
mov
xor
cmc
cmovge
dec
sahf
inc
cld
jge
notb
dec
xor
ljmp
push
mov
adc
pop
lea
fsubs
cmp
in
sub
dec
push
add
sbb
push
sub
pop
adc
cli
ficomps
mov
jl
push
pop
pop
or
bound
mov
mov
aad
inc
int
cmc
adc
mov
sti
xchg
jmp
in
mov
mov
lret
ja
dec
pop
jl
lret
sub
xor
inc
mov
and
std
add
mov
adc
dec
cld
sub
jmp
fistpl
aaa
in
lahf
mov
aaa
div
hlt
rolb
je
push
fcoms
push
pushf
jno
xor
mov
insl
sbbl
push
fwait
push
in
insb
cmp
xchg
and
inc
dec
outsl
pop
jns
fcomp
dec
add
cmpsb
jmp
ret
jmp
cld
imul
inc
sub
shlb
sahf
push
icebp
mov
cmp
mov
inc
jne
movsb
mov
sbb
int
mov
hlt
mov
cmp
negl
fxam
lea
and
ficoms
fs
xor
loop
push
cli
clc
in
sahf
adc
sahf
mov
cmp
pop
loopne
push
adc
rcl
xchg
add
lea
xchg
jg
bound
idivl
dec
push
lock
pop
subb
and
shll
in
fisubrs
icebp
add
xor
dec
push
add
sub
lods
dec
outsb
cltd
cmp
pop
stos
imul
adc
adcb
mov
in
dec
rcr
and
pop
loope
xchg
push
imul
aaa
or
test
push
mov
fistpll
je
and
push
jne
jnp
dec
xchg
add
sti
mov
dec
dec
jle
imul
push
xchg
repz
mov
cmpsl
cmc
add
jb
jo
inc
and
adc
movsl
pop
push
aas
stos
mov
clc
mov
fsubl
xchg
and
dec
data16
mov
pop
arpl
cmp
loop
and
mov
or
outsb
and
xor
pop
maxps
scas
or
fwait
in
push
rorb
mov
mov
int
ja
or
add
fiaddl
stc
dec
rcrl
out
lret
lcall
outsl
cmp
shll
xchg
adc
in
lods
aaa
cmp
mov
pop
cmp
add
stc
arpl
sahf
int3
sbb
mov
out
dec
xchg
add
lods
dec
or
inc
rcrb
cwtl
lcall
int3
sti
cmp
xchg
imul
loope
and
xchg
into
filds
lods
rcr
fistl
push
imul
lret
gs
dec
and
lcall
subl
fdivrl
jo
mov
es
push
pop
xchg
pop
shlb
nop
push
add
sbb
lea
shll
add
aam
adc
jg
dec
dec
xchg
rcrl
xchg
mov
testl
out
cli
jae
in
gs
inc
js
les
or
jmp
push
lret
cmp
pop
int3
lods
adc
clc
and
fcmovnu
jns
push
or
inc
fsubl
xor
push
aad
pop
xor
cmp
xor
mov
test
xchg
adc
sahf
int3
and
push
popf
test
mov
insb
add
or
mov
jo
sbb
mov
loop
notb
mov
xor
int
xchg
sbb
xor
mov
jle
gs
and
cld
rclb
testl
mov
and
xchg
ret
mul
mov
adc
and
stc
ret
ljmp
cmc
xor
mov
mov
lds
mov
mov
ss
sbb
push
mov
sbb
out
imul
sbb
push
stos
std
clc
or
popf
push
in
stos
shr
aam
adc
imul
xlat
cmc
je
and
xor
mov
add
cmp
outsb
push
out
popa
sub
cmc
mov
lret
out
push
xchg
push
inc
mov
xor
cmc
lahf
mov
out
negb
xchg
in
mov
pop
mov
and
xchg
lahf
bound
ficoml
mov
in
sbb
aam
mov
int
dec
jnp
jmp
inc
mov
adc
sub
in
lret
xchg
lret
in
dec
lea
or
push
test
xchg
sti
ss
add
dec
sbb
and
push
pop
bound
dec
pop
sbb
inc
xchg
shl
sub
mov
jle
outsb
nop
fsubrl
sub
sub
nop
inc
add
jnp
ficoml
data16
mov
ret
sti
jae,pn
jae
icebp
mov
and
int3
int3
loop
not
sub
cmp
das
mov
shlb
sar
sbb
add
fstpl
mov
mov
jg
push
dec
pop
cmp
jmp
aad
pmaxsw
rorb
loopne
incl
mov
pop
cmp
inc
daa
jle
push
adc
es
mov
mov
mov
adc
and
out
xor
imul
in
popa
outsl
push
adc
mov
xor
out
fisttpll
xor
std
xchg
pop
leave
inc
or
xchg
xchg
adc
fadds
mov
lret
daa
and
and
mov
xor
cwtl
lahf
jge
jo
cmc
mov
push
inc
pop
adc
fwait
lcall
dec
jnp
mov
lods
jo
xchg
mov
mov
add
movd
hlt
push
adc
andb
jmp
inc
mov
ja
adc
hlt
mov
sub
dec
sbb
cmovge
inc
mov
or
push
cmp
mov
push
insl
mov
jmp
fldcw
ret
addr16
lock
cmp
mov
dec
or
or
aas
enter
xor
insl
mov
jl
mov
xor
and
pop
stos
xor
loope
sete
sbb
and
cmp
addr16
jg
push
movsl
jb
xor
mov
jae
mov
mov
test
subl
inc
or
int
adc
cmp
fsubrl
mov
pop
adc
inc
subb
enter
inc
mov
ljmp
cmp
push
push
fdivrl
outsb
pop
mov
pusha
into
sbb
pop
sarb
push
cmp
mov
rcll
jno
add
xchg
pop
nop
je
jb
sbb
sub
jge
outsb
icebp
gs
xor
cmp
pusha
out
nop
insl
xor
xor
popf
test
outsb
adc
in
mov
int
outsb
sub
loop
xchg
imul
xor
or
cmc
int3
vpsrlq
test
push
mov
pop
push
loopne
nop
xchg
sub
push
mov
test
xchg
in
in
add
hlt
loope
rclb
push
mov
xchg
lods
inc
es
xchg
and
mov
lret
dec
in
into
jmp
inc
push
andl
sarl
outsb
stc
pcmpgtb
fs
call
mov
jb
inc
adc
fs
call
lahf
sbb
decb
pop
ljmp
leave
push
loope
and
mov
xor
les
or
dec
cmp
inc
mov
xor
cltd
js
pop
int3
inc
sub
jnp
sbb
in
pop
call
mov
xor
fisubrl
out
pusha
imul
xchg
fnstcw
xor
or
fistpl
inc
pop
mov
outsl
cs
xor
sbb
jb
xchg
bound
mov
in
pushf
scas
adc
cwtl
lods
pushf
push
addr16
leave
in
negl
xchg
aaa
enter
push
movsb
jno
mov
cmp
cmp
in
mov
sbb
add
adc
aas
xchg
pop
fldl
sbb
pop
jmp
jmp
sub
shlb
fnstenv
or
mov
call
dec
insb
xchg
mov
push
clc
imul
cmp
in
inc
jns
movsb
pusha
xchg
sti
adc
mov
out
icebp
daa
outsl
cmp
dec
jbe
repnz
adc
push
mov
dec
add
mov
xor
mov
xor
xlat
jle
pop
xchg
mov
mov
mov
shlb
fistl
mov
ficomps
inc
lds
imul
in
repz
rcl
dec
inc
add
nop
push
cwtl
sub
mov
xor
gs
adc
lret
shrb
mov
popa
mov
adc
mov
ljmp
out
movsl
jo
ret
js
push
push
mov
pop
cmp
mov
cli
add
push
rol
insl
pop
lahf
faddl
add
push
mov
adcb
aaa
in
shl
inc
mov
cmpb
js
mov
aam
push
movsl
lahf
inc
addr16
hlt
mov
push
fdivr
adc
xchg
repz
lock
jns
add
sub
push
mov
pop
sarb
test
or
inc
pop
lahf
inc
pop
outsl
xchg
mov
cld
ret
or
movsb
xchg
cmpb
gs
fadds
into
mov
mov
jnp
mov
pusha
iretw
pop
mov
push
adc
mov
xchg
jae
xchg
leave
ds
lods
xor
int3
imul
jl
inc
sub
jns
dec
stos
sbb
int3
pop
or
inc
loopne
mov
pop
cmp
pop
loop
cmp
xchg
movsb
cwtl
cltd
pop
ds
dec
mov
je
gs
or
fwait
lds
push
xchg
mov
pop
cld
xchg
push
adc
jmp
and
sub
sbb
adc
and
and
ja
leave
aas
jle
mov
jl
test
add
aad
insb
mov
mov
pop
xchg
ljmp
mov
jp
xchg
andb
inc
loope
and
aaa
dec
mov
pop
mov
pop
xor
cmp
in
test
arpl
jb
sub
cmp
and
cld
pop
mov
xchg
imul
lea
clc
orb
jmp
aas
scas
and
sbb
stos
sahf
das
test
sub
or
push
mov
mov
and
rcl
shlb
aas
movsb
jl
xor
fimull
jnp
outsl
xor
call
inc
pop
dec
fisubrl
cmp
jno
inc
add
scas
push
xchg
dec
cld
sti
pop
jne
fcom
outsl
jecxz
cmp
inc
jno
enter
cli
and
shll
jo
lea
mov
cmp
imul
cld
and
and
into
and
dec
rorb
loope
vrcpss
aaa
add
sub
pop
popa
xor
pop
outsl
mov
sarb
repz
insb
xchg
mov
cmp
iret
push
push
loopne
jnp
sbb
adc
and
cwtl
pop
movsb
and
leave
js
dec
mov
push
stc
and
rcrb
inc
decl
bound
bound
out
adc
mov
dec
or
jp
outsb
mov
push
sub
dec
push
movsl
movsb
cmp
fimuls
inc
in
lea
xchg
adc
scas
hlt
andl
mov
mov
add
mov
jecxz
lods
enter
arpl
adc
and
jno
add
xor
shll
je
add
adc
push
push
dec
mov
scas
add
jge
call
inc
inc
pop
and
fs
lcall
es
mov
stc
sarb
repz
mov
jmp
out
jno
sbb
pop
push
cmp
inc
loopne
push
aaa
jne
movsl
adc
cmpsb
sbbl
adc
xchg
cmp
andl
addr16
mov
mov
dec
repnz
push
inc
cmp
out
and
sbb
add
rclb
icebp
jno
mov
cmc
cs
std
test
fwait
nop
add
mov
popa
push
inc
dec
adc
or
push
movsl
leave
mov
push
mov
test
mov
mov
adc
shl
ja
mov
stc
not
pop
cmp
push
sbb
in
daa
pop
pop
cmc
aad
into
jg
loop
sub
test
mov
sahf
jo
inc
add
pusha
xor
and
jno
cmp
push
xchg
adc
jb
mov
mov
test
sbb
aam
les
fstps
cmc
cmp
in
leave
push
add
and
jnp
mov
pop
cli
out
or
ret
clc
or
push
rolb
in
push
gs
sub
adc
mov
jb
jo
leave
cmp
cmp
and
inc
pop
sbbl
ljmp
repnz
xor
jae
cmp
dec
jb
aas
test
lds
mov
clc
clc
fistpll
lret
xchg
std
pop
inc
cli
jb
xor
mov
rolb
lahf
jne
ljmp
call
stc
outsb
mov
inc
mov
xchg
pop
jp
in
xorb
imul
and
xchg
inc
jno
cmpsb
loopne
or
cvtps2pi
imul
sbb
fsubrs
cli
sub
fsts
and
add
inc
rcr
mov
fstpt
ss
hlt
lcall
xor
xchg
jge
mov
inc
std
sub
cmpsb
stos
mov
rcrl
jmp
stc
jg
popf
ss
jae
jge
insb
xchg
mov
jl
push
nop
cltd
je
data16
outsl
ljmp
sbb
jb
cmp
dec
xchg
adc
les
lds
xor
inc
pop
and
add
jo
aam
adc
lods
jo
sar
pop
fucom
ficoml
scas
mov
scas
loopne
cltd
inc
mov
pop
mov
shrl
cmpsl
push
inc
repnz
jle
fnstenv
ficoms
push
dec
lcall
int
cmp
sbb
fstps
dec
ss
xor
and
addr16
mov
dec
push
mov
ss
sub
xchg
ljmp
mov
sahf
xor
cmp
fs
cmp
jbe
arpl
xlat
leave
sub
dec
shrb
sbb
sub
mov
mov
add
push
or
leave
bound
cmp
xchg
call
xchg
cli
xchg
mov
lods
add
bound
jo
and
sbb
loope
lods
push
ds
movsb
into
jg
test
pop
cmp
xor
inc
push
add
inc
jecxz
adc
xchg
lea
jae
mov
mov
pop
xor
sahf
mov
outsl
mov
xchg
clc
cs
shrb
lock
loop
dec
pop
inc
bound
jecxz
jge
mov
rcrb
mov
mov
xchg
jge
lret
xor
addr16
push
mov
sub
scas
jmp
push
add
idivb
nop
add
gs
cmp
jo
call
enter
gs
in
lods
push
xchg
and
loope
mov
adc
mov
dec
push
sub
pop
sti
mov
int
pop
inc
fstpl
lret
cmpsb
popl
fisttpll
cmpsl
push
adc
add
dec
push
mov
nop
andl
enter
dec
pop
cmpsl
jb
lcall
fs
out
sbb
nop
xor
out
sahf
or
gs
mov
xlat
jae
xlat
or
ret
xchg
jl
pop
push
clc
ror
movsb
imul
or
ljmp
jnp
pop
mov
xchg
pushf
hlt
pop
push
pushf
jg
cltd
popa
xorl
inc
iret
inc
jle
and
test
cmc
pop
jo
fwait
mov
add
fidivrs
or
jle
push
mov
push
mov
ljmp
enter
ficoms
xchg
mov
xor
and
lahf
scas
pop
xchg
mov
les
mov
call
lods
lahf
adc
mov
jg
jg
loope
daa
loop
pop
mov
and
cmp
bound
movsl
dec
xor
out
loop
imull
lods
xchg
pop
call
or
sti
scas
and
jmp
sbb
aaa
aaa
xchg
cmp
cmp
addr16
lods
add
mov
inc
sahf
push
pop
rcl
pushf
scas
mov
push
pop
lock
mov
adc
fwait
inc
mov
xchg
mov
pusha
cld
nop
lret
xor
clc
stos
mov
cmp
sub
lods
loopne
add
orb
shl
pusha
int3
lds
nop
push
xchg
lret
or
mov
lret
jecxz
mov
push
pushf
pop
add
jnp
xchg
in
mov
fstpl
ljmp
mov
inc
cmp
lahf
daa
and
jbe
in
lods
mov
mov
dec
jecxz
jecxz
mov
push
adc
cs
sbb
lods
ds
jmp
test
mov
adc
inc
shll
lock
cmp
dec
fs
out
sub
mov
ss
lret
sbb
sbb
mov
xor
mov
lahf
xchg
pop
orl
push
sbb
push
mov
test
mov
xchg
cmpsb
enter
out
mov
jge
lods
femms
jmp
sbb
out
sbb
and
pop
add
xor
dec
inc
push
jb
sbb
bound
in
shrl
sti
fdivl
out
addr16
loope
cmp
cs
lcall
xchg
pop
cmp
pop
jbe
inc
mov
insl
lret
aas
jp
ds
ret
and
in
movsb
ret
dec
jle
mov
daa
push
cmpb
lret
inc
sub
xchg
push
mov
shl
and
lea
dec
aaa
in
daa
dec
sub
int
in
stos
add
pop
sahf
sub
gs
out
or
adc
enter
add
sahf
fnstsw
mov
or
stos
stos
test
addr16
pop
icebp
jb
les
xchg
in
xchg
mov
push
lods
xchg
pushf
mov
add
rorw
std
inc
fdivrs
xchg
sbb
adc
fnstenv
imul
pop
cli
iret
cld
dec
inc
ret
cmp
sti
pop
call
ret
daa
lret
scas
into
loope
sub
xchg
xor
jge
adc
ret
call
and
sbb
neg
pop
pop
sar
xor
or
adc
dec
aas
mov
aam
data16
outsl
shll
jbe
fisttpll
pop
andl
in
addr16
daa
fistps
rclb
or
repnz
fsubrl
and
inc
or
sbb
and
clc
mov
add
sbb
add
mov
test
xorb
shlb
shl
in
lahf
pop
bound
movsb
inc
sub
or
js
mov
sbb
pop
in
call
push
shll
pop
in
imul
daa
idivb
xor
push
pushw
pop
mov
mov
mov
cs
mov
cmpsl
jg
cmpsl
out
cld
in
jno
and
sahf
gs
pushf
cmp
lret
in
scas
add
push
xor
cmp
push
and
cli
mov
ss
fadds
and
or
inc
mov
xchg
inc
adc
xor
push
les
mov
xchg
roll
push
mov
dec
or
aad
mov
push
xchg
je
inc
inc
cmpl
sbb
pop
jp
in
ficomps
cltd
fwait
or
fs
jnp
mov
sbb
pop
std
fisttpll
in
lods
mov
repnz
ds
aaa
shll
adc
jl
cmp
ljmp
or
data16
imull
mov
and
cmc
icebp
mov
jg
sub
aaa
icebp
pop
test
cld
jbe
and
dec
jg
mov
pop
ja
jnp
cli
xchg
mov
cwtl
jno
in
es
jmp
sub
jbe
enter
sahf
mov
fmull
cld
imul
xor
jl
cmpsl
dec
mov
lock
aad
test
cwtl
test
xor
add
add
pop
xchg
shrb
and
jno
addr16
mov
push
pop
ss
out
xorb
mov
cmp
lret
jp
paddusw
lahf
lea
adc
shrb
popa
enter
xchg
movhps
imul
and
push
mov
das
aaa
js
dec
push
pop
mov
xchg
mov
flds
push
dec
or
call
ljmp
xchg
in
ja
jns
jmp
cmp
mov
mov
cs
loope
hlt
push
push
insl
mov
test
xchg
clc
xchg
push
dec
enter
and
stos
xchg
scas
xchg
xchg
jg
loopne
in
and
sbb
inc
clc
ds
push
stos
test
mov
or
and
push
mov
test
jecxz
sub
arpl
pop
add
sub
cltd
push
xchg
mov
jg
push
jb
icebp
loop
ds
mov
adc
push
xchg
js
xbegin
sbb
dec
or
not
js
cltd
pop
add
cltd
dec
cli
sbb
das
int
sbb
stc
dec
push
jp
pushf
movsl
in
rcrl
cmp
nop
mov
jb
cmp
mov
cmp
push
jb
clc
in
mov
pop
fs
cltd
jmp
popf
mov
rcll
adc
xchg
fwait
ds
dec
sti
mov
sub
leave
or
inc
adc
inc
fmuls
and
xchg
daa
pop
iret
jg
xchg
js
xor
push
jl
scas
lret
call
scas
pushf
xchg
nop
cli
mov
mov
sub
mov
xlat
loop
jns
jnp
cmp
push
mov
cld
fs
inc
adc
imul
xor
aam
les
push
test
test
or
and
sbb
cmp
mov
ss
nop
out
insb
mov
aas
es
push
pop
scas
push
mov
nop
pop
jnp
pushf
das
pushf
fadds
shlb
lods
and
stos
std
jne
ret
pop
jp
push
push
testl
dec
pop
pop
jns
and
push
cmpsb
sahf
sbb
stc
mov
and
repz
sub
jl
ljmp
jp
mov
add
mov
cmc
mov
lock
test
div
rcr
enter
sti
rcrb
jl
ds
clc
je,pn
dec
dec
insl
lds
arpl
mov
test
clc
insl
mov
sub
and
sti
push
xchg
sub
xchg
push
add
sahf
add
insl
mov
mov
ds
dec
xchg
jns
pop
mov
dec
xchg
imul
push
xchg
scas
adc
insb
sbbl
sub
mov
lahf
jmp
lcall
lea
sahf
sbb
dec
scas
or
mov
cmp
inc
mov
in
jge
cmp
mov
into
jo
rcrb
leave
outsl
stos
push
push
popa
leave
jg
lcall
mov
or
mov
je
fcoml
jbe
push
push
pop
pushf
push
dec
or
and
sbb
or
adc
or
push
jmp
dec
sbb
cwtl
aad
or
inc
push
jmp
xor
push
push
or
nop
push
dec
jge
loope
or
mov
adc
stc
fimuls
cmpb
ss
cld
mov
cmpsb
loop
cmp
mov
je
arpl
mov
scas
inc
addb
ds
push
jo
pop
pop
dec
ss
jne
je
outsl
sbb
aaa
test
das
repnz
mov
jmp
and
add
shrb
or
loopne
in
negl
xchg
les
inc
push
sub
jl
sahf
and
xchg
das
gs
sub
add
lods
mov
mov
mov
iret
xchg
inc
lods
nop
pop
push
dec
adc
sahf
movsl
mov
hlt
jg
mov
daa
jge
loop
imul
jmp
ja
cmc
aaa
fwait
or
lahf
in
andb
shl
orb
enter
cmp
and
outsl
push
sbb
inc
movsb
lods
mov
cmpsb
mov
sub
lods
jmp
in
loop
push
mov
hlt
inc
xchg
dec
scas
gs
push
inc
es
pop
scas
in
push
aas
fidivrl
aam
hlt
lcall
daa
scas
jle
subl
inc
mov
sub
cmpsb
jb
add
and
or
mov
mov
jmp
pusha
ret
outsl
shll
ret
sahf
pop
adcl
push
pop
aas
cmc
and
push
int
mov
aaa
rorl
dec
and
and
or
clc
add
sub
lods
icebp
out
pushf
xlat
push
push
xchg
fsub
stos
push
mov
inc
sarl
xor
lods
rcr
xor
test
mov
rcrb
das
icebp
sahf
sbb
mov
inc
aam
inc
out
mov
push
jbe
xor
stos
cmp
inc
pop
rcl
xchg
subl
mov
mov
dec
in
add
jns
inc
xor
adcb
mov
mov
leave
add
jmp
inc
mov
int3
pop
inc
jbe
sbb
std
mov
inc
mov
addb
xchg
xor
sbb
ja
jge,pn
loope
pop
filds
sbb
adc
sbb
std
inc
out
rol
sbb
push
ja
mov
cltd
xor
scas
jg
sub
jno
rorl
push
push
push
loope
add
ret
sub
adc
adc
xchg
cltd
cmc
xchg
ds
aam
adc
in
dec
xorl
aaa
sbb
movsl
aas
push
push
dec
out
xchg
imulb
fistpll
lcall
mov
call
clc
mov
stos
out
mov
pop
fisubs
mov
xor
cmp
xor
add
adc
int
ss
shrl
push
and
clc
enter
and
push
cmp
sbb
sahf
aad
in
or
fs
or
cmp
push
sub
jns
xlat
insb
xchg
pop
inc
mov
inc
push
cmp
push
jmp
cltd
js
jo
or
in
and
mov
lods
dec
aam
popl
pop
inc
popa
mov
je
add
dec
mov
ss
aas
xchg
popa
add
xor
xchg
sarl
or
or
fnsave
in
test
mov
dec
mov
push
ja
push
cmc
in
in
test
cmp
and
jnp
mov
jns
dec
and
jle
popa
test
je
xchg
push
test
in
out
cltd
xor
cwtl
and
pop
sbb
pushf
sti
sbb
mov
int3
ss
mov
dec
jno
js
inc
add
outsb
dec
fistl
daa
lods
push
xchg
mov
xchg
rcrb
xchg
mov
xor
es
pop
in
jl
mov
fsts
rcrb
ficoml
xorl
lret
xlat
dec
sub
pop
enter
jl
sub
xlat
ljmp
push
jp
jle
push
push
scas
sub
sub
add
or
insb
outsb
test
jp
pop
xorb
sbb
xchg
cwtl
idivb
gs
leave
cmpsl
cmp
clc
cmp
cmpl
lods
adc
adc
enter
xchg
shr
xchg
xchg
push
push
in
imul
sub
mov
xchg
imul
mov
sub
xor
inc
stc
adc
and
jle
pop
mov
cmp
lcall
fmulp
and
call
adc
mov
sbb
out
dec
push
testb
popa
cmpsl
addr16
xor
xchg
mov
push
sti
lock
shlb
subl
xchg
sarb
pop
cltd
cmc
inc
push
into
and
dec
xchg
inc
addl
xor
test
jno
movsb
es
outsl
jb
sbb
div
int
adc
mov
inc
mov
test
and
jle
push
xlat
mov
nop
int3
jmp
mov
sbb
push
push
mov
sub
mov
sahf
sahf
sahf
mov
sub
push
cmp
mov
fisttpl
fnstsw
sbb
jg
lods
inc
mov
push
jmp
pushl
pusha
lahf
sahf
roll
xchg
adc
mov
mov
cmpsb
inc
jmp
sbb
sub
mov
mov
dec
fisubrl
sbb
lcall
pop
lret
ret
ljmp
fxtract
jno
cmp
sbb
sbb
out
and
mov
rcr
subb
in
ss
mov
sbb
jns
push
push
fistpll
mov
mov
repz
cmc
push
and
push
leave
enter
sbb
cmpl
pop
scas
add
jnp
repnz
test
cmpsl
adc
jp
subb
adc
cwtl
sarb
mov
sub
testl
mov
cmc
mov
std
mov
lds
int
test
dec
cmp
mov
rcrb
scas
fisttpll
mov
jnp
mov
push
lret
sbb
cmp
mov
repz
ds
jmp
cli
data16
rorb
xor
dec
mov
sub
lahf
aaa
sbb
push
adc
sti
jl
inc
xchg
in
dec
cmp
idivb
jmp
pop
loopne
enter
cltd
outsl
push
aad
pop
sbbl
popf
int3
loope
push
lret
cli
mov
and
dec
mov
js
mov
sbb
ficoms
sbb
test
sub
jle
pavgb
popa
mov
in
sub
jbe
loopne
xchg
fidivs
xchg
sbb
jo
dec
popa
inc
mov
sahf
fidivs
or
dec
outsb
jmp
test
mov
out
in
mov
sbb
stos
push
test
cmpsb
mov
faddl
or
xchg
jle
push
lcall
or
and
mov
xchg
into
loopne
movsb
ror
dec
jnp
adc
insl
pushf
pushf
enter
mov
add
pop
jle
aam
dec
mov
or
jb
outsb
fbstp
cmc
push
mov
andb
scas
inc
sbb
mov
cmp
sti
pop
sub
in
into
pop
or
jne
jns
sbb
and
test
mov
sub
pop
subl
lea
dec
stos
or
mov
fwait
mov
lods
and
dec
and
jge
cli
mov
iret
sbb
pop
enter
xsave
add
sarl
ret
repnz
cli
jge
call
rclb
jbe
out
cmp
std
jmp
test
push
ficoml
or
aas
and
or
jne
lds
pusha
fstps
lds
repnz
js
xchg
cltd
mov
pop
and
loopne
es
pop
lahf
lea
aaa
push
ss
cmc
mov
fs
cmp
dec
fwait
mov
rcrl
icebp
inc
cli
fstpl
dec
into
xchg
cmc
adc
inc
mov
lcall
out
sub
stc
aam
xorl
icebp
dec
bound
cmp
fdivs
jo
pushf
or
and
pop
out
pop
sub
mov
xor
aam
mov
lods
outsb
mov
iret
or
xor
adc
nop
out
hlt
sub
sahf
sub
inc
ret
ja
nop
sbb
cmpsb
add
pop
or
inc
push
mov
push
lcall
les
sbb
mov
mov
call
pop
sub
lods
push
in
or
cli
subb
pop
sub
sub
mov
inc
push
int3
aad
orl
pop
mov
in
adcb
test
aad
loop
sarb
inc
adc
fnstcw
test
imul
mov
sbb
je
test
and
push
xorl
push
nop
out
sub
mov
stos
cmpsl
mov
iret
xlat
adc
pop
mov
mov
cmc
adc
inc
pop
gs
ret
lcall
mov
cmpsb
sub
adc
push
adc
mov
xor
cs
jmp
dec
mov
cmovnp
loope
imul
das
or
outsb
nop
mov
mov
sbb
push
cmp
fwait
xorb
jb
pushf
sub
stos
inc
pop
lcall
daa
mov
in
pop
ljmp
cs
rcll
push
or
pop
loope
push
add
lods
add
jmp
mov
jne
xor
pop
mov
xchg
cltd
add
hlt
adc
enter
sub
aaa
pop
daa
mov
adc
push
mov
sbb
add
mov
cli
in
jp
mov
lcall
std
scas
arpl
std
sub
inc
add
push
insb
iret
jb
mov
lods
push
lds
sti
rorl
jl
rorb
sbb
mov
mov
popa
inc
sbb
leave
iret
xchg
jmp
jmp
sbb
and
lods
sub
je
xchg
jbe
push
sbb
cmp
and
enter
pop
loope
lret
lahf
icebp
daa
stos
adc
lcall
movsb
cmp
sub
lret
jg
sub
and
jno
into
add
in
add
mov
mov
mov
out
push
subb
pop
pop
and
mov
pushf
mov
rcl
insb
sub
mov
xorl
mov
mov
push
or
mov
in
push
std
shll
jmp
pusha
sbb
in
xchg
inc
mov
loop
sti
mov
fadds
clc
xor
imul
push
dec
sub
pop
pop
mov
addr16
aas
add
dec
mov
sbb
cmp
jb
push
pop
pop
sub
aas
add
aas
orb
inc
cmpsb
movsb
mov
lahf
lods
pushf
nop
cmp
adc
fs
pop
pop
divl
cmc
xor
fistl
and
xlat
cmp
sahf
mov
mov
pop
xorb
xor
xor
fsubr
xor
ror
dec
pop
pop
fstpt
aaa
rolb
push
inc
sbb
mov
lcall
cmpsb
shl
int3
test
cmp
mov
xchg
int3
sbb
sbb
sbb
sub
jmp
sub
mov
mov
testb
sbb
aad
std
and
inc
pextrw
sub
sti
cld
xchg
sahf
imul
jne
pop
mov
in
aaa
or
push
insl
fxam
out
in
incb
loope
push
pop
or
iret
hlt
enter
addb
jmp
minps
cmp
int3
outsb
loop
push
adc
decb
xlat
and
push
mov
sbb
pop
xchg
repz
sbb
cmp
in
mov
scas
call
ret
cld
scas
xchg
aad
push
nop
aaa
add
pop
dec
insb
fisubrl
cld
lods
aad
sbb
sbb
lds
adc
push
ret
add
push
shrl
mov
mov
out
cmpsl
enter
inc
jb
jnp
push
xchg
js
push
repnz
dec
lret
outsb
fnstcw
cli
dec
mov
add
jle
std
mov
fwait
jle
cmc
pop
fs
cmp
loopne
push
xor
repnz
pop
es
int3
pop
jmp
pop
out
adc
and
fisttpl
je
cmp
jne
and
add
cwtl
gs
mov
imul
scas
mov
sbb
push
decl
mov
mov
sbb
ja
xchg
dec
cmp
cmp
cmp
cmp
mov
dec
cltd
dec
jbe
leave
enter
les
inc
mov
xchg
sub
fmuls
aad
enter
jns
mov
jnp
arpl
call
jmp
into
ss
and
pop
cltd
lahf
je
mov
adc
dec
push
insb
cmp
add
mov
push
sahf
cmp
in
push
lahf
pushf
and
pop
leave
lds
in
imul
lods
sbb
inc
outsb
loope
je
mov
dec
out
mov
mov
and
push
lret
movsb
push
sbb
or
sub
mov
mov
fs
pusha
lea
les
add
jo
pop
mov
outsl
sub
pop
fwait
add
mov
adc
mov
clc
or
mov
sbb
xchg
sbb
xor
insl
adc
rclb
mov
inc
je
sbb
insl
icebp
out
mov
push
test
xor
xsha1
cmpsb
lret
fsub
pop
out
test
mov
pop
pop
push
ljmp
cmp
push
es
jnp
cmp
mov
push
mov
jg
adc
xchg
rcrl
pop
add
iret
cmp
ret
imul
inc
mov
cli
xchg
pop
adc
add
sub
data16
inc
xor
sub
jp
ss
push
aaa
or
nop
std
add
gs
cmp
xor
inc
scas
xor
scas
xor
pop
jbe
fs
mov
push
jmp
rorb
lret
ffree
dec
insl
push
jnp
push
test
cmp
cmp
push
jne
loopne
xchg
adc
jle
pop
in
test
lods
call
pop
inc
cmpsb
dec
sub
add
jl
xor
inc
xchg
mov
jne
mov
xlat
divl
popa
das
xchg
loopne
int
xchg
pop
out
arpl
aaa
sub
movsb
outsb
jne
add
xor
testl
mov
or
inc
mov
call
pop
scas
ja
imulb
cltd
push
movl
bound
xchg
dec
out
cmp
push
in
in
jmp
std
scas
xchg
sahf
iret
xchg
dec
xchg
mov
or
testb
stos
scas
addl
add
mov
ja
cmpsl
fisttps
adc
lods
loopne
adcl
xor
mov
cwtl
gs
rorb
pusha
xchg
out
sub
mov
das
mov
mov
sub
adc
mov
stc
mov
cmc
jae
xchg
cmp
in
push
jle
test
add
add
cli
adc
aam
mov
movsb
add
cmp
cmpsl
adc
or
flds
repz
std
faddl
aam
aaa
xor
repz
jb
cmp
and
pop
adc
into
mov
add
lds
aas
jp
mov
dec
mov
loopne
mov
pop
sarl
xlat
cmpsb
mov
divl
mov
fbstp
jp
ficomps
addr16
leave
xchg
popf
lahf
loope
sub
ret
push
inc
xchg
testb
pushf
enter
repz
leave
pop
gs
push
inc
or
push
test
mov
pushf
pop
or
stos
inc
jne
fs
adc
popf
fdivp
jo
out
push
cli
inc
add
test
jmp
pop
pushf
adc
lods
int
adc
std
test
dec
jmp
xchg
es
lret
fwait
jmp
hlt
jne
stc
enter
rorl
inc
movsb
cmp
into
jbe
dec
jmp
insl
dec
push
imul
fwait
shlb
inc
jae
pop
ficoml
int3
dec
jnp
insb
inc
sub
pop
js
jnp
movb
cmpsb
xor
fisubrs
leave
cli
aam
push
add
jecxz
dec
lods
lcall
daa
ret
adc
sahf
adc
in
push
fmuls
pop
leave
pop
loope
ljmp
sub
std
mov
mov
jg
jl
movsl
je
jb
mov
push
push
sahf
jo
ror
dec
cmpsl
or
pop
push
cmp
cmpsl
cmp
xchg
loopne
mov
in
xchg
xchg
sbb
adc
cmpsl
ror
and
jp
andl
adc
jns
jp
frstor
orb
pop
or
movb
lcall
fwait
out
fcomip
ret
arpl
mov
lahf
mov
pop
push
mov
daa
sbb
pop
clc
dec
or
sbb
aam
dec
pop
fld
shlb
pop
inc
mov
xor
mov
adc
in
insb
inc
xchg
pop
and
cwtl
mov
lea
xchg
pop
andb
dec
lock
sbb
xchg
sbb
push
pusha
jl
outsb
sahf
out
xchg
dec
add
push
push
in
insl
inc
or
sub
dec
xchg
lods
fdivrp
xchg
into
out
lcall
push
cli
stc
xor
psadbw
add
insb
dec
xor
sti
enter
xchg
movl
enter
ret
sub
aam
xor
pop
inc
xor
xchg
and
mov
aas
xchg
scas
mov
mov
jno
push
pushf
cmp
mov
mov
adc
arpl
pop
mov
or
mov
mov
leave
or
mov
push
pop
stc
cmp
gs
jge
out
addl
add
jne
test
cmp
jo
sbb
pop
mov
mov
arpl
in
fdivs
ss
push
mov
mov
enter
es
test
fnsetpm(287
loopne
mov
push
pushf
sahf
in
sbb
mov
jne
pusha
and
roll
cmc
mov
stos
popa
xor
pop
fpatan
lds
bound
inc
pop
imul
imul
xlat
out
push
adc
loope
mov
leave
imul
cmp
es
es
adc
sbb
ds
out
mov
or
hlt
pop
cmc
sub
xchg
cmpsl
add
dec
data16
mov
sub
adcb
aad
mov
jge
repz
push
sub
ss
jg
arpl
push
ja
fsubs
push
adc
fstps
mov
cmpsb
stos
cltd
mov
adc
leave
mov
push
mov
jmp
in
jmp
jb
fdivp
les
pop
pop
ret
fisttps
inc
push
jnp
xor
pandn
mov
dec
mulb
jl
gs
mov
mov
les
ja
mov
fmull
mov
ja
xor
jp
and
ret
cmp
int3
inc
sbb
cmc
outsb
mov
cmc
ss
stos
mov
pop
mov
pop
sbb
mov
jbe
mov
add
sub
adc
sub
and
lcall
adcl
repz
in
fsub
sbb
xchg
pop
or
add
or
and
out
sub
mov
fidivs
loop
dec
lods
outsl
xor
test
pop
aas
mov
lock
js
sbb
sbb
in
mov
movsl
mov
pop
push
pop
mov
daa
movsb
mov
lret
sahf
bound
or
xchg
jnp
lods
mov
add
pusha
in
xchg
jmp
add
xchg
xchg
lahf
or
in
dec
pop
lea
test
lret
in
rolb
add
data16
mov
mov
sti
ret
cmpsl
in
fdivrp
xchg
in
test
pushf
aam
or
mov
mov
in
fucomi
and
daa
cli
jae
leave
into
in
xor
shlb
push
pop
test
loop
rcll
aas
fs
cltd
jno
aas
mov
cmp
or
dec
test
pop
mov
push
mov
aas
movsb
push
pop
out
push
ror
adc
dec
cmc
cmp
imul
mov
outsl
fmull
and
lea
sarl
pop
xchg
jl
fcoms
inc
dec
push
sahf
sbb
jns
sub
and
sub
test
xchg
sbb
cld
and
arpl
sub
fstl
sti
es
mov
sub
xlat
lret
int
and
push
pushf
bound
lret
xchg
out
shlb
mov
pop
inc
aas
push
nop
xor
adcb
or
push
pop
cmp
xlat
idivb
or
les
add
dec
insl
add
loopne
inc
pop
jne
pop
mov
xlat
ret
pop
cwtl
loop
mov
enter
roll
mov
xor
idivl
scas
pushf
iret
aas
mov
insb
scas
cmpsb
add
inc
js
push
cltd
sbb
fucomi
cmp
jo
int3
stc
fimull
jge
sub
lcall
jae
mov
cmp
les
sahf
add
leave
mov
jo
and
mov
out
popa
cwtl
jecxz
dec
push
jge
out
lret
dec
cmp
dec
xchg
push
cwtl
dec
mov
sub
lahf
sti
push
pop
xchg
push
fdivl
sub
mov
ljmp
xor
and
mov
cmp
pop
sub
fcomip
xlat
int3
and
mov
inc
or
fcoml
shlb
and
dec
dec
xchg
das
add
add
push
andl
lock
sahf
dec
jge
adcl
dec
xchg
jp
pop
sahf
es
fdivrl
mov
jb
pop
lahf
adc
sbb
mov
xchg
xchg
or
push
xchg
lods
mov
cmp
lds
iret
shrb
lret
cmp
std
and
das
mov
loopne
ror
push
add
aas
lret
jl
xor
imul
add
or
outsl
cmpsl
mov
inc
or
inc
jnp
xchg
sbb
push
add
lods
push
movsbl
testl
aam
pop
fmull
mov
imul
icebp
jnp
sub
loopne
or
test
nop
push
daa
sbb
repz
add
pop
int
sahf
xlat
push
in
lret
ffree
xor
je
adc
lcall
pop
pop
cs
mov
jo
pop
iret
cmp
sub
sbb
ret
xorl
jns
ljmp
and
pop
xor
jae
flds
sub
mov
push
and
lods
es
sub
fs
lahf
jg
imul
shr
test
andb
dec
and
inc
xchg
fisubrl
mul
xchg
test
jecxz
loope
push
ret
mov
stos
loopne
popf
test
orb
decl
sub
jg
mov
pop
test
xor
jno
mov
inc
pop
xchg
pusha
scas
push
les
push
push
test
cwtl
push
jno
adc
inc
sub
ret
movsl
push
call
mov
jns
xchg
and
dec
out
fwait
pop
sbb
inc
pop
push
dec
pop
sti
iret
fidivl
mov
sub
cmp
cltd
cli
cmpsl
adc
loop
arpl
push
loopne
xchg
cmpsb
xchg
pop
out
lods
repnz
or
outsl
cmp
rcll
leave
loope
inc
xor
shl
push
fmull
mov
dec
and
scas
loopne
or
outsl
or
xchg
xchg
rcl
and
jnp
movsl
addr16
stos
stc
sahf
iret
mov
dec
cmp
sbb
ficompl
push
mov
out
sahf
mov
mov
push
push
cli
or
mov
je
loop
push
mov
out
xchg
icebp
jnp
inc
mov
jae
aam
fldcw
mov
xchg
fdiv
nop
fiadds
addr16
lcall
and
push
aam
xchg
dec
adc
push
mov
pop
insl
loopne
push
jmp
add
jge
mov
fiadds
jecxz
daa
addl
xchg
lahf
mov
pushf
lret
mov
lret
add
jno
out
iret
ffreep
leave
hlt
cmp
int3
scas
ret
cmpsb
rcr
mov
or
jmp
pushaw
mov
outsl
push
hlt
mov
xchg
adc
pop
out
push
out
adc
sub
sub
xor
adc
xchg
lret
add
or
ret
dec
mov
cld
test
clc
sbb
or
les
inc
xor
sub
fs
mov
mov
cld
lock
fwait
sarb
jp
push
dec
or
leave
or
inc
fsubrs
je
mov
cmp
jg
jae
xor
repz
mov
stc
push
pop
out
imul
jl
fbld
jecxz
push
sub
test
adcb
xlat
negb
ljmp
push
lret
xchg
adc
inc
scas
or
fs
pusha
pop
dec
cmc
imul
and
jb
sub
cmp
jns
loope
sub
push
in
xchg
inc
jl
mov
fwait
popf
sub
cmc
mov
dec
mov
mov
fisttpl
movsb
lret
or
test
out
xchg
shl
movsb
adc
inc
aad
pop
orb
repz
cmpsb
add
stc
and
push
sub
push
inc
inc
xchg
adc
xchg
fisttps
rcl
ds
mov
pop
cmp
jbe
mov
cmc
sbb
gs
repz
mov
icebp
in
pop
jno
scas
call
mov
lods
arpl
or
and
mov
icebp
ljmp
bound
es
in
aaa
leave
lret
movsl
stos
rorl
xchg
out
loopne
add
loop
mov
in
or
movsl
shlb
leave
xor
and
sub
jne
les
pusha
stos
test
fdivrl
fisubrl
jae
inc
sbb
push
fdivrs
ljmp
pop
pop
es
test
sbb
jbe
fisttps
fs
or
loope
push
fstpt
rcrl
add
rorl
arpl
or
aas
insb
test
mov
imul
mov
mov
xchg
test
in
add
push
xor
popf
sub
pop
or
add
and
rolb
cld
cmp
mov
push
jbe
pop
addr16
pushf
popa
sahf
cmp
jmp
movsl
popf
repz
mov
cli
and
mov
xor
inc
push
cwtl
add
jge
jne
mov
aas
out
inc
ja
out
fcomps
rcrl
dec
outsb
adc
div
notl
adc
bound
lock
mov
jl
push
sbb
push
andb
and
xchg
jo
xor
mov
cmpsb
rcrb
out
mov
mov
scas
movsb
dec
inc
sub
mov
adc
lret
push
add
dec
add
inc
pop
cmp
ds
mov
xchg
inc
push
cli
stc
xchg
mov
mov
enter
pop
cmp
fisubl
fsubl
mov
ret
movsb
or
adc
das
sub
mov
push
add
clc
sub
sub
inc
and
dec
lds
mov
clc
aad
mov
cld
jns
sub
lds
mov
cmpsl
sbb
push
push
pop
sarb
into
xchg
jp
cmpsl
mov
and
cs
add
mov
das
sahf
pop
in
pop
adc
push
xorb
in
mov
mov
not
cwtl
cmp
ret
mov
mov
mov
cmp
mov
xchg
sub
push
and
xchg
push
int3
mov
sub
xchg
cltd
les
leave
outsb
stos
jp
pop
fisubrs
inc
cmp
mov
test
mov
inc
mov
imul
and
push
hlt
jns
mov
fisubrl
fimull
mov
push
ja
or
cld
xchg
es
into
xor
fbstp
add
inc
and
gs
out
pop
mov
clc
jns
aad
sbb
dec
mov
xor
cmp
sahf
mov
stos
mov
push
sub
pop
dec
mov
fistl
aaa
jb
xor
testl
fisubrs
call
ret
orb
cli
dec
insl
add
xchg
sbb
or
mov
mov
ja
add
jb
pop
daa
icebp
mov
popa
notl
add
xlat
clc
xor
lret
iret
mov
jo
out
sti
mov
aam
out
xchg
lret
cmp
dec
mov
dec
lods
mov
jns
cmova
cwtl
std
dec
lods
jg
mov
pop
outsb
in
sub
outsb
into
ss
pop
jns
mov
lcall
lahf
imul
sub
add
lods
in
fucomi
mov
leave
int
mov
cmc
or
iret
cmp
inc
aaa
aaa
lahf
xchg
cltd
repnz
inc
int
sub
stos
pop
and
test
xchg
fimull
xlat
sti
inc
or
mov
repnz
xchg
sub
xor
add
push
jbe
or
xchg
pop
or
int3
mov
cmpsb
xor
fistl
clc
je
inc
out
push
fsub
xchg
xor
pop
cmc
clc
add
imul
cmp
mov
adc
xor
into
mov
xor
and
iret
lea
or
cmp
fistps
cmp
add
cmp
lret
lahf
xchg
pushf
inc
and
mov
pop
mov
mov
pop
andnps
mov
cmp
sar
dec
fdivl
xchg
mov
xchg
aaa
xor
popf
mov
movsl
pop
inc
push
lahf
xor
aaa
xchg
jb
xchg
xor
mov
rcrl
cld
js
nop
jecxz
mov
or
repz
adc
mov
cmp
inc
cmp
ja
add
sub
arpl
or
pop
lcall
inc
mov
in
lcall
ret
push
pop
clc
mov
push
push
out
inc
sbb
mov
stos
loope
mov
xor
sub
mov
cwtl
in
xchg
sub
aad
push
and
stos
sahf
iret
test
popf
pop
insl
dec
xor
mov
loopne
ret
xor
jecxz
sbb
xchg
add
adc
xchg
loopne
icebp
ja
out
sub
in
loopne
mov
popa
imul
xchg
movb
push
jle
xor
push
xor
mov
imul
test
insl
ret
pop
popf
test
enter
or
xchg
test
roll
testl
mov
cmp
add
push
push
insb
and
xchg
test
pop
mov
imul
sbb
inc
push
in
lea
testl
stos
xor
cmp
pop
mov
push
adc
or
cmp
mov
push
out
sbb
mov
mov
mov
ss
stc
shrl
fidivl
mov
mov
sbb
xchg
sti
adc
cmpl
adc
dec
scas
or
pushl
push
push
xchg
or
in
pop
push
sahf
in
es
jecxz
mov
jno
pop
push
out
mov
cmp
shrl
pop
je
xchg
imul
push
icebp
jae
xchg
mov
or
add
int3
xor
or
ret
mov
cmp
push
fisubl
add
cmp
or
scas
add
cwtl
xor
shrb
outsl
scas
insl
and
test
inc
out
pop
int3
adcb
push
pop
fs
jecxz
pop
pop
fwait
inc
popf
mov
aam
pop
stos
aad
lock
out
addr16
xor
and
adc
sbb
sub
ljmp
int
ljmp
cmp
idiv
fsubrs
pop
ljmp
jecxz
or
cwtl
sbb
ja
sti
in
pop
pop
insb
ss
push
test
sbb
inc
fists
into
push
or
sbb
xlat
lcall
cmp
push
push
xor
adc
pushl
dec
fsubr
dec
sub
lods
stc
xor
fsubl
pop
scas
xor
ds
cld
mov
call
lea
push
mov
mov
fwait
shll
push
xchg
push
lds
jne
daa
fildll
inc
add
lahf
adcl
pop
and
add
xor
sbb
push
pop
je
dec
montmul
cmpsb
inc
inc
mov
adc
inc
into
jne
clc
xor
xchg
jg
sub
pop
sbb
in
adc
out
or
hlt
stos
cmpsb
pusha
movsl
nop
mov
mov
xchg
clc
mov
scas
jo
test
daa
and
pusha
or
inc
imul
xchg
xchg
and
imul
mov
js
mov
jge
dec
push
mov
mov
int
and
jecxz
lahf
and
inc
lret
enter
dec
or
pop
sbb
inc
pop
sbb
jne
icebp
sti
push
jle
mov
scas
add
push
dec
or
imul
pushf
dec
mov
mov
and
xor
outsl
repz
ud0
popa
pop
push
out
mov
cmp
cmc
scas
add
and
add
testb
fdivrs
mov
cmp
sub
test
jmp
lods
movsl
rcrb
nop
jae
fmuls
cmpsl
in
and
int3
sbb
mov
adc
cmp
ficompl
imul
mov
mov
inc
push
pop
jl
adc
ror
into
dec
add
xchg
mov
mov
inc
loop
push
mov
adc
lock
popf
das
popa
scas
out
adc
dec
nop
sar
mov
mov
int3
xchg
push
lret
dec
bnd
sbb
leave
mul
shlb
jae
fucomip
pop
ds
jne
das
push
xchg
pop
out
int3
stos
push
mov
inc
rcrl
pop
js
pop
sub
mov
add
clc
notb
jp
xor
push
in
lds
push
in
mov
insl
jecxz
jg
push
sub
push
mov
xor
xchg
cmc
jno
xchg
insl
lret
in
pop
stc
push
sbb
push
sbb
les
add
cs
orl
xchg
enter
sub
push
inc
test
push
jp
aas
inc
mov
adc
mov
push
ret
push
scas
enter
pop
in
iret
cli
mov
out
jns
lds
test
ret
fsubrs
push
mov
call
cwtl
and
rorb
xlat
mov
imul
xchg
xor
and
add
sub
dec
cmp
adc
pop
or
jmp
ret
rcl
lcall
adc
into
dec
sub
sbb
cli
push
adc
mov
pop
adc
shrl
sti
adc
mov
hlt
mov
jmp
dec
jp
xor
pushf
jg
adc
loop
jno
ret
adc
push
cmp
cmp
sbb
pop
xchg
jne
xor
xchg
pushf
jne
add
in
mov
xor
or
roll
movsb
test
ss
js
mov
xor
je
mov
jg
dec
sbb
and
mov
push
push
and
imul
jge
out
adc
inc
add
fildl
das
test
cmp
mov
pop
cmp
jecxz
ret
cmpsb
mov
xor
fucom
push
jne
hlt
xchg
test
push
pop
xlat
dec
aam
pop
aas
pop
pusha
enter
push
les
clc
jle
push
sub
mov
jnp
mov
mov
repz
lds
stc
xchg
jmp
jnp
sahf
mov
mov
aad
jns
jmp
mov
and
outsl
cltd
sarl
push
or
aad
add
test
jl
dec
push
pop
std
in
inc
ljmp
and
insl
pushf
xchg
pop
mov
mov
jnp
dec
cmp
xor
mov
cmp
hlt
aam
mov
aam
pop
pop
scas
dec
cli
xchg
divb
sub
pop
lock
pop
hlt
arpl
pop
or
lcall
jb
je
or
cmpsl
sbb
cmpsb
fs
dec
mov
out
int
mov
pop
push
test
pushf
ret
aad
fsubl
inc
aad
adc
push
stos
lods
add
mov
sbb
loope
cmpsb
out
sub
jg
push
mov
mov
je
or
es
inc
pop
push
mov
adcl
das
xchg
aas
lcall
aaa
dec
mov
popf
push
pushf
push
loopne
ss
jo
stos
mov
push
cmp
notb
int
cli
sbb
fisubrl
rcll
sbb
push
ret
arpl
dec
jle
adc
sub
pusha
test
mov
xchg
jecxz
dec
rclb
and
sbb
xchg
sub
pop
sub
sti
adc
fisubrl
inc
mov
pop
push
inc
arpl
das
add
jecxz
aaa
push
or
sub
jecxz
push
adc
cmp
add
mov
cli
pop
pusha
or
pushf
xlat
cmc
adc
ret
jle
push
add
xlat
shrl
sbb
adc
add
jae
icebp
mov
mov
mov
outsl
fdivrs
cmpsl
dec
dec
push
jp
push
xchg
imul
adcl
and
add
or
cmp
out
pop
jae
dec
cs
add
cmp
out
outsl
lahf
add
dec
pop
jno
test
lock
mov
mov
outsb
fimull
xchg
push
mov
inc
lods
gs
les
inc
push
aam
mov
adc
and
loopne
or
out
pop
data16
nop
lea
pop
xor
rcr
mov
push
hlt
sbb
mov
arpl
inc
cmp
out
cmp
sub
lods
inc
add
push
mov
push
jbe
cld
adc
push
popf
add
das
addr16
pop
lcall
or
test
pop
add
fbld
movzbl
fwait
cmp
pop
mov
mov
adc
into
test
mov
in
ror
push
imul
xlat
lret
fdivr
clc
mov
in
fistpl
into
or
aad
popa
cmpsb
or
mov
addr16
fwait
into
xchg
push
mov
test
mov
pop
mov
push
sbb
fwait
dec
cli
cmp
mov
sbb
mov
nop
xor
subb
xor
out
js
or
inc
in
imul
cs
mov
dec
cmp
mov
mov
jno
or
loop
fstpl
mov
jmp
lahf
xor
sbb
cmp
inc
inc
add
out
push
jnp
fimuls
imul
arpl
loop
mov
pusha
xor
push
xchg
inc
and
decb
push
inc
mov
pop
aam
lods
mov
roll
sub
xchg
cmc
in
lock
inc
add
pop
push
or
cmp
out
es
lret
and
cld
mov
fwait
scas
ljmp
dec
mov
icebp
fldcw
outsl
imul
mov
loopne
push
hlt
std
push
cmp
xchg
push
jmp
loopne
jg
mov
cmp
popf
inc
in
xchg
idiv
popa
xor
xchg
lods
nop
adc
fcomp
movsb
mov
inc
imul
cmovg
mov
out
pushf
sbb
push
sahf
sbbl
sbb
mull
add
mov
cltd
ret
aam
in
and
push
pop
lods
sub
pusha
icebp
xchg
jecxz
popa
dec
or
cmp
adc
push
ljmp
sub
lcall
sub
pop
in
dec
or
add
cmp
loop
les
add
jae
cmpb
das
jns
add
pop
push
pop
stos
add
mulb
lods
dec
cld
dec
insl
mov
push
push
sbb
shlb
xchg
fucom
ret
ljmp
inc
xlat
lock
lahf
std
xchg
sbb
fnstsw
movsl
icebp
dec
mov
mov
dec
pusha
inc
ret
jmp
outsb
out
xchg
call
ljmp
inc
clc
or
mov
loope
jecxz
mov
popf
mov
pop
mov
stos
mov
mov
outsb
movsl
dec
mov
test
sbb
out
popf
pop
xchg
sub
pop
push
jmp
lds
std
sub
cmp
jecxz
and
in
js
repnz
pushf
mov
in
ror
mov
push
aas
out
or
outsl
cmpl
out
in
sbb
scas
sub
subb
pop
mov
daa
mov
out
into
xchg
mov
shrb
push
lret
push
and
inc
es
clc
add
or
iret
cmc
pop
imull
outsl
adc
sub
outsb
mov
mov
xchg
movsb
aaa
push
ljmp
xchg
in
les
mov
pusha
mov
jns
int3
inc
jg,pn
dec
dec
shll
iret
mov
xor
add
jmp
pop
add
pop
jno
and
add
xchg
lret
jecxz
lea
mov
xchg
push
jno
mov
adc
push
loopew
scas
fmull
cmpsb
adc
jo
out
mov
movsl
aaa
sub
test
and
cmp
cmp
loopne
mov
mov
xchg
fsubs
inc
mov
jae
cmp
xchg
leave
sbb
stc
push
nop
sub
and
jno
ja
dec
mov
jp
pop
mov
add
bound
jmp
dec
push
pop
mov
or
add
mov
sub
mov
daa
stos
jns
mov
cld
not
mov
out
rcr
mov
in
jmp
movsb
stos
xor
jns
pop
mov
inc
inc
inc
ja
inc
scas
mov
ds
pop
mov
jns
sub
or
cmpsb
fnsave
sub
cmp
push
je
cmp
and
jnp
insl
jns
pop
mov
add
push
lds
push
pushf
rol
aas
test
push
imul
test
js
pop
int3
test
dec
repnz
xchg
lcall
mov
xchg
cmp
jbe
cs
out
orb
mov
repnz
popa
dec
data16
or
xchg
and
fmul
mov
test
mul
mov
ret
mov
mov
pop
mov
scas
out
jecxz
movsb
ss
jbe
lret
pop
aad
xor
sbb
repnz
xchg
vcvtps2dq
or
add
sbb
call
push
jge
mov
cwtl
and
lcall
xchg
pop
daa
fsubl
shr
jge
outsl
xchg
js
mov
xchg
pop
mov
jmp
addl
pop
mov
adc
dec
mov
js
push
dec
test
add
sbb
cwtl
mov
ds
add
addr16
rolb
test
ret
ss
imul
shrb
test
and
mov
or
xchg
enter
pushf
loopne
pop
das
cmp
dec
into
jp
and
jecxz
clc
les
ljmp
pop
pop
or
sub
lcall
xor
mov
aas
inc
popf
repz
push
add
push
jg
xchg
and
xchg
jle
inc
mov
jno
aas
fsubp
or
xchg
inc
std
lds
or
aaa
es
daa
in
pop
and
and
sub
and
in
shrl
cwtl
loopne
clc
add
out
or
rolb
dec
ret
cmp
xchg
inc
rcrb
ja
aam
dec
push
and
jle
mov
notl
gs
lods
out
xor
sahf
xchg
jp
loope
in
pusha
lods
hlt
js
jmp
pop
and
push
cmp
push
out
repz
test
fidivs
pusha
fbstp
adc
test
cmp
cmp
xchg
sub
arpl
leave
cltd
mov
mov
cmp
jmp
shlb
pushf
cld
pop
xlat
pop
mov
push
sub
push
loope
xor
in
cmpsl
out
ss
imul
cld
mov
xchg
test
repnz
lds
test
mov
in
aam
rcrl
fcom
push
and
cs
es
call
sub
inc
cmpsb
ret
pop
les
lcall
jb
cmp
cwtl
hlt
popf
xchg
punpcklbw
repz
repnz
xchg
cli
or
dec
xor
adc
movsl
in
clc
push
insb
loop
cmp
or
sub
mov
loopne
pop
data16
incl
add
repnz
dec
push
and
stos
and
inc
pusha
cmp
mov
outsb
and
ds
pop
loope
mov
mov
inc
out
mov
mov
jmp
sbbb
sub
rcl
sbb
mov
outsl
add
mov
call
out
shrl
adc
outsl
jecxz
lds
sti
int3
out
xchg
ljmp
call
dec
mov
sbb
fistps
add
out
xchg
sahf
in
push
loope
xor
sarl
addl
aad
repnz
cltd
inc
add
ja
push
test
cltd
add
loop
and
xor
xor
ret
dec
leave
pusha
sti
mov
imulb
arpl
mov
sarb
hlt
xor
call
mov
inc
mov
insl
sub
adc
test
mov
or
ss
inc
or
popf
loop
aas
rcll
sarb
sub
ljmp
or
fiadds
repz
dec
add
popl
xor
cmpsl
rcr
jp
sahf
lods
xchg
faddl
mov
test
mov
adc
fcomp
leave
loop
std
stos
imul
add
stc
es
jbe
xchg
lods
sbb
addb
mov
cltd
loopne
mov
add
push
jecxz
cmp
xchg
mov
int3
ljmp
add
aam
cmp
or
icebp
dec
mov
notb
nop
ja
jb
arpl
jb
sbb
push
cltd
setb
dec
adc
bound
lock
scas
xchg
jg
cmp
aad
cmp
outsb
sbb
add
adc
xchg
mov
bnd
push
xor
fldenv
push
sub
jecxz
inc
pop
pop
js
mov
pop
stos
movb
add
repz
mov
aam
sti
add
jl
in
insl
push
or
mov
ror
fcomi
and
push
jmp
pop
or
stc
push
or
imul
insb
stc
add
ficoms
lock
sub
sub
dec
scas
xor
jnp
xchg
mov
repnz
xchg
mov
daa
ss
sbb
lods
push
push
adc
jp
hlt
pop
cltd
cmp
cmc
jg
pop
fs
dec
push
mov
sub
jno
daa
hlt
mov
push
popf
repz
jecxz
pop
int3
sub
pop
stc
mov
out
enter
sub
sub
aam
mov
mov
neg
xor
sbb
or
inc
and
xor
mov
gs
pop
xchg
gs
add
rclb
pop
mov
mov
sahf
mov
shr
imul
push
pop
inc
jg
pop
push
and
fidivrl
movhps
and
cmp
cmp
jno
add
enter
jne
roll
cs
adc
addr16
lret
jge
push
test
add
xlat
jae
into
aam
cmp
sbb
inc
push
push
fwait
dec
rcrl
negb
sbbl
or
fistps
push
xor
mov
push
dec
out
push
test
and
sbb
xor
je
or
push
cli
cmp
pop
or
add
mov
cld
jg
cmp
push
ss
mov
int3
pop
nop
out
add
sbb
jl
and
sub
dec
stos
popf
jge
pop
insb
and
rclb
outsb
hlt
jne
jno
add
inc
push
test
jbe
xchg
inc
jne
or
loopne
add
pop
inc
scas
pop
dec
xor
es
shlb
pop
fstpt
xchg
mov
add
push
scas
push
jne
cmp
imul
xchg
jbe
dec
in
in
in
lret
cmp
stos
rolb
inc
push
push
sbb
lret
xchg
and
imul
xchg
dec
jmp
sar
inc
fwait
repnz
test
stos
leave
dec
sub
jmp
add
jns
out
divb
into
ss
enter
mov
divb
in
insb
push
push
push
nop
and
push
stc
adc
sbbb
or
addl
lahf
pop
and
data16
and
iret
lahf
pop
or
lds
lret
jecxz
sub
mov
nop
in
pop
push
ljmp
xor
jnp
popa
jl
cmp
lahf
jne
imul
mov
dec
inc
adc
push
sbb
fwait
xor
fs
mov
jmp
dec
sti
mov
jg
cmp
dec
repz
pop
dec
mov
les
aaa
pop
mov
loopne
repz
shlb
daa
mov
popf
in
lods
sahf
loop
in
pop
dec
push
adc
mov
rol
in
movsl
add
xor
out
sarb
xchg
jle
and
push
mov
pushf
jecxz
mov
or
sub
push
and
add
hlt
in
xor
arpl
loopne
and
adc
push
mov
cld
fstpl
mov
lds
ret
ret
mov
dec
add
ja
jecxz
inc
shlb
outsb
sbb
jbe
mov
shr
lods
inc
mov
hlt
cmp
xor
lock
nop
lahf
xchg
xor
mov
fistpll
sbb
inc
pop
dec
sub
int
popa
inc
stos
je
mov
cmp
jmp
cli
xor
movsb
xor
in
cmp
mov
adc
xor
inc
ds
cmp
lret
push
sbbl
repnz
leave
testb
jns
adc
xlat
dec
jmp
and
adc
aam
push
enter
jbe
in
test
idivb
das
fcompl
movsb
hlt
pop
leave
outsl
mov
ja
dec
xchg
or
push
dec
inc
les
int3
insb
cmc
addr16
les
les
dec
or
stos
xor
inc
loope
or
pop
repnz
pop
inc
xchg
gs
push
cmpsl
mov
inc
into
sub
cmovs
es
fisubrl
and
scas
push
ds
arpl
int3
xchg
out
dec
push
push
mov
jnp
enter
imul
ds
mov
xchg
shlb
enter
into
and
pop
stc
data16
test
and
std
in
jbe
cmp
enter
lods
rcrb
btc
popf
enter
inc
mov
dec
and
sub
mov
mov
ja
sbb
int
mov
xchg
pushf
or
loopne
dec
out
adc
cltd
adcb
push
cld
loopne
cli
mov
mov
mov
sarb
cmp
rcrl
inc
cmpsb
sub
mov
test
fldl
into
jge
adc
push
ret
adc
dec
push
mov
mov
jle
insb
push
mov
mov
pop
cmovnp
lock
cltd
sbb
and
sub
inc
loopne
push
loop
add
push
mov
cld
shlb
adc
aad
scas
icebp
out
inc
punpckhbw
cli
shll
pop
cmp
ret
jl
mov
xchg
cmp
mov
cwtl
stos
xchg
mov
jge
fs
pusha
in
rcr
sub
and
daa
mov
jnp
inc
sti
sti
out
pushf
xchg
lret
sub
dec
jmp
sub
por
jg
ljmp
repnz
mov
mov
inc
jge
jns
cmpsb
out
imul
aaa
nop
push
pop
dec
cmpsl
cmpsb
fildll
pop
xor
rorl
push
jl
xor
jle
push
pop
adc
cmp
xchg
jno
fldcw
loop
sub
sub
pop
test
sub
gs
call
outsb
js
rcrb
xchg
sbb
jmp
lahf
dec
push
dec
jbe
jae
push
xor
or
mov
ja
fmull
dec
adc
aaa
aaa
xor
xlat
clc
push
cld
sub
jmp
mov
cmpsl
and
std
push
jg
iret
and
int
hlt
lcall
arpl
and
outsb
lret
int
dec
addr16
aam
fbstp
add
lock
mov
int
out
test
sbb
or
fsubrl
mov
das
cmpsl
movsl
xchg
mov
cmp
mov
add
dec
push
scas
data16
or
jnp
add
in
fldl
xchg
push
cmc
bound
out
jne
js
sub
mov
dec
arpl
mov
ds
push
adc
jbe
test
mov
iret
jle
xchg
push
xchg
and
jmp
and
iret
nop
lahf
sbb
push
cld
dec
pop
and
push
out
mov
adcl
jns
add
sbb
dec
lock
jno
mov
cwtl
es
test
stos
int3
dec
inc
jmp
arpl
fnstcw
adc
pushf
std
aam
je
lds
imul
rorb
stos
sbb
fbstp
es
cs
sub
cli
negl
scas
add
sbb
mov
mov
sbb
leave
xchg
and
rclb
xchg
sub
jl
les
fcmovne
fwait
xchg
stos
jecxz
and
insb
in
cmc
jns
in
fistpl
inc
leave
les
fs
pop
pop
je
mov
imul
sub
aaa
inc
inc
loope
test
push
and
in
mov
cli
mov
lods
movsl
notb
and
mov
inc
leave
lds
outsb
js
jne
lds
sub
xchg
add
repnz
cmc
jo
lock
lret
mov
lods
cmpsl
orb
testl
pop
repz
mov
pop
or
dec
scas
add
pop
mov
pop
add
mov
mov
sbb
adc
sti
leave
adc
jbe
or
or
dec
mov
or
jmp
sub
mov
mov
fildl
inc
pop
sbb
rclb
mov
xchg
aas
mov
mov
adc
cmp
loop
cmp
push
mov
cmp
ljmp
shl
push
cltd
and
push
subl
addr16
xor
cmpsl
inc
stc
mov
push
sbb
mov
add
mov
dec
mov
lds
lcall
fimull
add
test
xlat
xchg
dec
movsl
jne
jle
mov
mov
xchg
mov
mov
gs
jmp
pop
fdivrs
inc
mov
jmp
xlat
cmp
mov
sahf
and
mov
xor
mov
pusha
orb
stc
stos
and
ljmp
fisubs
jnp
hlt
mov
cmp
sti
push
popa
imul
cwtl
sub
rorb
push
mov
movsl
cmp
mov
mov
or
cmp
mov
pop
adc
rcl
mov
and
sub
mov
mov
add
pop
loopne
dec
out
jno
into
mov
mov
inc
in
push
jg
aaa
jb
aaa
add
sub
jle
aad
xchg
fs
rclb
mov
lret
mov
xor
add
fisttpl
mov
data16
inc
cmc
sub
fdivl
sbb
gs
add
addr16
push
mov
or
stc
fmuls
jb
pushf
jno
fwait
es
sub
cli
sbb
and
mov
mov
push
rolb
sbb
add
insl
pusha
adc
push
iret
sti
pop
sarl
ja
cmp
mov
insb
xchg
jp
sbb
lcall
sub
or
mov
sti
movsl
emms
push
popf
adc
push
orb
dec
xchg
pushf
out
test
scas
int
dec
xor
outsb
fcoms
loopne
imulb
dec
into
pop
adc
jle
pop
mov
xor
inc
push
xchg
pushf
dec
out
rcrb
into
and
aaa
in
idivl
sbb
shll
push
in
dec
mov
neg
add
xor
leave
xchg
sub
mul
dec
mov
cmp
test
sbb
xlat
mov
pop
sarl
xchg
pop
pop
cmp
sub
fsub
stos
shl
cwtl
jne
pop
pop
rorb
jns
les
pop
cmp
call
les
adc
adc
outsl
sahf
sub
daa
movl
int3
jnp
jo
fwait
push
xorl
sbb
out
or
xor
das
cld
pop
xchg
iret
fistpll
xor
daa
lods
cmp
jnp
add
test
pop
mov
add
xchg
mov
cmp
dec
ret
pushw
outsb
or
xchg
fs
push
ljmp
cmp
movsb
inc
test
jne
or
mov
push
inc
fistps
out
sub
sahf
in
xchg
std
out
inc
fistpll
sbb
lock
mov
mov
aad
sbb
imul
ret
xchg
jge
sub
outsb
pop
test
rolb
pop
push
bound
dec
cld
int
jg
push
inc
aad
push
add
lret
lods
sub
cli
pop
mov
imul
mov
repnz
inc
fs
xor
sub
aas
dec
dec
cmpsl
sub
jnp
dec
movb
jp
jmp
or
fwait
xchg
pop
insb
iret
fs
outsl
add
std
pop
mov
loope
sahf
or
add
and
add
jbe
push
mov
cmp
mov
fstl
icebp
fidivs
mov
push
lret
mov
test
cmp
jo
int
nop
xorb
daa
push
and
pop
scas
inc
adcb
inc
mov
imul
mov
mov
das
mov
push
xor
and
out
sub
inc
imul
cltd
data16
xchg
and
inc
xchg
imul
aaa
cwtl
or
inc
nop
scas
mov
mov
in
cmp
dec
int3
mov
mul
pop
cmp
notb
fld1
fsub
adc
mov
push
test
loopne
dec
xchg
mov
push
dec
jmp
lret
pop
sub
je
scas
sbbl
dec
mov
push
xchg
movsb
fwait
lds
jbe
sub
pop
pop
sbb
and
jg
stos
std
or
call
lds
cmp
pop
add
outsb
lahf
pop
sub
adc
xchg
jecxz
aaa
divb
mov
jnp
jae
jp
aad
cmpsl
xor
add
xor
mov
mov
popa
xchg
leave
inc
and
or
enter
or
mov
push
mov
or
addr16
or
inc
and
mov
or
pop
xchg
mov
sbb
icebp
fsubrs
jp
test
jmp
push
pop
mov
xor
mov
fdivrs
mov
mov
enter
andb
cmpsb
push
ret
or
ja
mov
jbe
sbb
pop
mov
ja
movsl
popf
push
andb
lret
push
popl
addb
pop
call
jb
xor
notl
movl
jno
mov
lds
test
int
insl
js
dec
out
ss
sub
sbb
bound
jno
lds
dec
pop
subl
xchg
inc
lock
mov
call
push
jecxz
xor
fdivl
or
adc
pop
mov
sub
xchg
dec
mov
xchg
sbb
xchg
jmp
imul
fsubs
or
stos
xchg
cltd
out
inc
call
insl
js
lds
mov
add
sub
push
xchg
adc
mov
pop
imulb
xchg
lods
pop
xorb
pop
push
mov
xor
std
sub
sub
xchg
xchg
mov
push
jg
outsb
jg
sub
mov
xlat
mov
lret
xchg
dec
in
sbb
pushf
push
out
pop
push
mov
les
add
mov
adc
cmp
and
or
push
bswap
cmpsb
insb
negl
sbb
jge
cmp
dec
jecxz
aam
inc
adc
gs
out
add
out
inc
cmp
pop
out
mov
in
inc
std
push
test
ret
dec
sub
xchg
jb
dec
inc
leave
rorb
add
add
imul
in
xor
ret
jecxz
mov
and
int3
inc
pop
and
mov
mov
cmpsb
sahf
outsl
dec
mov
mov
adc
jnp
inc
aam
lds
or
adcl
inc
pop
pop
fcomp
subl
movsb
jl
jp
outsb
es
inc
mov
test
dec
and
cmp
and
sub
and
add
fcomp
or
ds
fwait
and
xchg
mov
mov
and
and
repz
jmp
add
popa
sbb
or
xor
ljmp
mulb
jl
fs
pop
loope
out
lret
fisttpl
int3
dec
sub
js
pushf
jbe
lods
aaa
xor
mov
jle
shrl
std
jl
popl
xchg
leave
cwtl
lods
push
nop
inc
test
cmp
mov
push
aas
enter
fstps
inc
shl
adc
xchg
ds
mov
xor
jae
enter
icebp
dec
test
int
adc
push
xchg
dec
sbb
mov
aad
outsb
and
pop
in
add
and
cmpsb
or
mull
cmp
pop
push
bound
xchg
add
in
cltd
adc
shlb
jmp
or
outsl
or
jns
outsb
mov
sbb
scas
cwtl
incl
xlat
repz
subb
rclb
popa
out
add
out
jb
and
sbb
and
loope
jb
add
mov
in
add
and
mov
int3
pop
mov
inc
call
test
inc
sbb
mov
fstl
hlt
sub
mov
rcll
or
xor
aaa
scas
lcall
in
xchg
orb
nop
mov
aaa
arpl
addr16
push
std
je
push
cs
jne
jne
sub
imul
loop
xchg
mull
pushf
frstor
and
fidivl
xchg
cmp
pop
cld
xchg
in
adc
fists
call
imul
xor
in
in
xor
sti
dec
gs
insl
xchg
xchg
imul
adc
sbb
icebp
push
minps
and
jbe
and
xchg
out
mov
lock
cs
loope
fildll
sub
cltd
xchg
pop
push
xor
pushf
inc
and
clc
inc
add
inc
mov
inc
mov
add
add
push
pop
adc
divl
mov
xchg
sti
adc
jmp
mov
fstps
lret
push
ret
mov
shrl
cmp
pop
adc
cmp
out
jnp
data16
push
jno
add
mov
shll
xchg
xlat
dec
sbb
fistl
push
mov
cld
push
and
jg
jl
or
repnz
mov
push
mov
mov
popf
inc
adc
in
les
and
clc
dec
dec
jno
and
cmp
sbb
int
xchg
mov
pop
xchg
test
mov
arpl
lods
scas
stc
push
hlt
xchg
xchg
pop
mov
jecxz
cli
dec
dec
push
sbb
mov
insl
push
test
lcall
pop
out
idivb
cmp
jp
and
add
in
movsb
pop
adc
cmpsl
push
adc
jle
data16
mov
nop
test
test
enter
cmc
shrb
xchg
cwtl
jbe
outsl
sub
pop
inc
add
rorl
jne
outsl
dec
in
xchg
and
mov
cmovs
push
clc
sbb
enter
cmc
nop
lock
lea
or
loope
lods
xor
je
pushl
scas
out
cs
mov
mov
and
lret
ds
mov
hlt
shrl
add
shl
jnp
mov
cld
mov
push
js
push
lcall
lret
je
out
outsl
inc
outsb
sbb
sub
pushf
insb
push
lds
cmp
sbbl
stos
test
icebp
inc
ret
and
mov
inc
cltd
ja
or
scas
shlb
aam
sub
aas
mov
push
mov
call
adc
jns
pop
xchg
mov
divl
xorb
pop
cwtl
out
lods
or
jnp
jne
sub
mov
jecxz
dec
andl
jns
push
je
decl
cwtl
arpl
mov
xor
dec
pop
xor
add
aaa
jmp
stc
sub
mov
rorb
xor
fisttpl
pop
inc
sbb
mov
push
bnd
and
xchg
cwtl
movsl
into
insl
mov
push
loop
inc
mov
inc
pop
sbb
dec
in
incb
jo
dec
xor
popa
and
daa
fdivs
movsl
movsl
aam
xchg
push
add
mov
push
cmp
jae
cmp
push
stos
mov
add
dec
cmp
cmpsl
repnz
cld
sbb
int3
mov
cmpsb
fs
popa
xor
xlat
adc
xchg
push
jp
push
inc
js
inc
enter
imul
das
movb
push
enter
adc
pop
dec
out
fs
add
add
push
or
iret
and
cwtl
bound
dec
push
mov
lods
lods
fldt
dec
sbb
cmp
shlb
push
mov
bound
xchg
ds
loope
and
sbb
lret
inc
pop
rorb
ljmp
add
or
cltd
insl
and
jecxz
imul
fs
and
mov
mov
int
es
pusha
in
fimuls
jo
or
scas
inc
push
xor
or
jge
mov
cmp
outsb
pusha
cmpsb
daa
xor
stos
loope
mov
ja
aaa
in
mov
jb
pop
lods
sar
fs
push
dec
cs
inc
mov
or
pop
lret
subb
mov
fs
shl
in
in
je
popf
jp
leave
nop
ret
test
lahf
mov
aas
or
cmpb
adc
sbb
dec
and
push
xchg
js
jne
sti
mov
idiv
jg
aas
lahf
ret
dec
sbb
sbb
sar
add
xor
fistl
cmc
jo
aam
shrl
adc
sbb
nop
jge
inc
int3
or
in
and
cmp
pop
mov
push
shlb
loope
js
lock
ret
stos
push
push
mov
xor
notw
mov
xor
inc
mov
pop
or
sbb
inc
fstps
push
mov
test
mov
hlt
dec
adc
pushf
and
add
test
adc
popa
mov
adc
scas
movsb
jbe
and
inc
gs
adcl
in
pop
hlt
add
jne
movsb
push
in
stos
ds
imul
out
movsl
sub
sbb
hlt
into
push
roll
cmpsl
shlb
rorb
popl
mov
adcl
cmp
jbe
jo
outsl
xchg
outsl
arpl
rcr
and
sbb
test
shl
enter
pop
adc
adc
or
lea
jl
repnz
mov
mov
jnp
pop
clc
fwait
jne
dec
pop
inc
stc
mov
imul
push
in
inc
and
jmp
mov
mov
ret
out
fwait
enter
pop
pop
lea
or
fistps
adc
or
adcb
push
xchg
ret
imull
jp,pt
lret
pop
cmp
mov
jecxz
shll
hlt
sbb
pop
shll
mov
fwait
inc
add
dec
and
leave
cmp
pop
mov
inc
hlt
jb
xchg
jns
popa
and
lret
jp
outsl
cmpsl
test
and
pop
lods
inc
sbb
fdivl
jnp
out
xor
sahf
xor
dec
rol
in
out
js
and
in
dec
outsb
push
pop
cld
jmp
inc
pop
xchg
iret
add
pop
xor
push
cs
ljmp
incl
push
and
mov
fs
xor
ret
cmp
adc
xor
int
adc
clc
mov
add
and
mov
mov
sbb
mov
addr16
cli
dec
xlat
out
jns
and
pop
pop
scas
adc
mov
cmp
ret
sub
mov
mov
xor
out
bound
cmc
mov
movsb
nop
lret
push
sbb
inc
cli
cmp
loop
pop
outsb
cmp
andb
cs
faddl
xchg
sbb
shr
out
les
xchg
sbb
inc
adc
push
in
ret
flds
addr16
dec
shll
lcall
xchg
jns
test
outsl
jnp
add
and
mov
aad
cmp
xchg
adc
testl
jl
xor
arpl
inc
aad
or
mov
shll
xchg
aaa
aam
mov
mov
push
inc
stc
xor
pop
je
lods
out
cmp
or
jno
sbb
popa
mov
push
fsubrs
lock
push
fidivs
pop
decl
stc
in
add
cld
xchg
fldcw
inc
lahf
je,pn
or
ds
sub
stos
xor
add
and
sbb
mov
adc
ljmp
fbld
adc
hlt
daa
xchg
outsl
popf
int3
push
jge
negb
shl
xlat
movsb
and
jmp
inc
add
or
jb
and
in
std
jecxz
add
and
sbb
jbe,pn
hlt
pop
mov
pop
cld
shlb
cmp
cltd
cld
rol
mov
dec
mov
push
sbb
pop
jbe
insl
add
bound
adc
out
lret
pop
sub
and
push
mov
push
inc
dec
imul
clc
sar
xchg
xchg
fstl
push
mov
sbb
xchg
stos
pop
pop
dec
pop
cmp
dec
insb
mov
xchg
push
imul
xchg
mov
sub
adc
incb
fildll
hlt
insb
imul
sbb
or
jns
xchg
imul
sahf
mov
or
pop
orl
leave
pop
jae
rcrb
and
aaa
hlt
mov
sub
or
and
shll
in
sub
adc
lea
inc
pop
mov
xchg
push
mov
hlt
dec
jnp
pushf
push
jo
dec
xor
mov
das
pop
scas
mov
in
jecxz
mov
fstl
mov
inc
dec
mov
cmpsl
xlat
xorl
mov
xchg
dec
jl
adc
ja
outsb
lock
std
fwait
aas
loope
pop
push
aam
xchg
imul
lret
in
xchg
scas
jmp
int3
sbb
lods
mov
pop
arpl
out
loopne
fcompl
add
pop
mov
xor
jg
mov
andb
dec
dec
test
adc
xchg
sub
loop
jnp
mov
push
and
push
addb
or
std
jno
cmpsb
or
lea
mov
ret
addl
icebp
pop
cs
and
pop
jmp
jmp
loope
sub
add
imul
jge
sub
mov
cltd
push
mov
xchg
push
jecxz
sbb
adc
mov
inc
outsb
adc
cld
mov
call
cwtl
je
and
and
inc
nop
pop
mov
adc
in
xchg
dec
jp
cmc
adc
dec
stc
push
fidivrl
scas
jb
adc
repnz
lea
gs
test
js
pop
orb
es
dec
mov
xchg
ret
hlt
inc
cmc
push
mov
cltd
push
mov
xor
mov
ja
cmpsl
jb
shr
and
and
shlb
adc
mov
push
add
xor
test
cmp
mov
addr16
out
mov
popa
out
and
neg
or
stos
push
jo
fldl
pop
movsb
pushf
pop
lret
lahf
jb
pop
ljmp
insb
cmp
xchg
push
mov
shlb
sub
es
das
mov
xchg
or
mov
lea
ljmp
shrb
roll
jo
push
push
mov
add
insl
sbb
xchg
aam
lods
push
lcall
inc
mov
sub
xlat
or
ja
adc
int
mov
mov
ja
xorl
jnp
fisttpll
fisubs
in
push
dec
jl
jmp
xchg
or
cmp
xlat
or
jo
jne
dec
mov
xchg
jmp
addb
lcall
cmpsl
adc
push
or
mov
sub
ret
or
mov
push
ja
push
loopne
lods
pop
call
xor
sbb
out
aam
cmp
pop
lods
sahf
xlat
add
out
dec
mov
pop
pop
mov
arpl
inc
jmp
lret
push
movsl
jecxz
int3
mov
imul
mov
out
or
adc
mov
imul
dec
je
xchg
sbb
inc
scas
out
iret
mov
fsubs
inc
jne
xor
loope
mov
clc
push
js
into
xor
jmp
mov
sub
mov
neg
in
mov
inc
push
leave
ss
les
mov
mov
aaa
dec
das
jae
inc
sub
xchg
rorb
pop
inc
std
xor
ret
iret
into
cmp
adc
ss
jmp
sbb
fwait
in
loope
aad
mov
lds
les
inc
mov
cltd
aaa
imul
pop
or
sub
push
adc
ljmp
pop
repz
lods
add
loopne
push
mov
mov
js
into
in
fucomp
pop
das
push
or
mov
lods
sbb
in
ret
cmpl
pop
sti
jb
mov
cli
xor
mov
xor
mov
popa
fs
test
test
fiaddl
cmp
sbb
mov
dec
sbb
mov
xor
pop
daa
adc
push
cmp
push
jbe
outsl
or
sbb
pop
arpl
outsl
xor
aad
mov
test
add
jb
movsb
inc
push
jle
lea
jg
jge
xlat
mov
xchg
jns
adc
loop
pusha
xlat
ds
jne
sbb
test
scas
ficomps
mov
mov
lahf
ds
test
call
cli
popf
scas
imul
push
incl
stos
outsb
inc
push
jg
jp
int
sub
testb
cmp
lock
nop
mov
push
out
jl
dec
adc
dec
test
gs
stc
adc
and
in
fisttpll
out
inc
scas
cld
push
pop
mov
mov
mov
test
and
sbb
push
nop
mov
xchg
inc
add
and
sub
loop
jp
enter
mov
sub
cmpsb
pop
jae
xor
mov
outsl
pop
xlat
jae
inc
mov
ss
int3
inc
out
enter
lods
adc
or
sbb
daa
jmp
pop
push
pop
pop
scas
xchg
outsl
xorl
adc
jp
or
lods
mov
aas
clc
sbb
jne
inc
adc
dec
aad
dec
cmpsl
xchg
jae
fwait
or
js,pt
repz
out
and
fimull
push
leave
cmp
into
dec
adc
inc
cmc
outsb
mov
mov
mov
cli
ret
mov
sbb
sbb
ja
arpl
adc
cmp
sbb
jno
inc
leave
and
xchg
in
xlat
push
xor
incl
mov
xchg
sbb
dec
mov
lea
outsb
xchg
fs
scas
sub
push
jnp
xchg
jns
push
jp
jp
and
adc
lahf
cmp
sbb
jp
lea
ret
ljmp
push
or
pop
jg
lahf
ja
pop
or
rorb
sahf
dec
sbb
stos
je
in
cmp
push
jmp
add
inc
jnp
cmp
lock
orl
mov
mov
rcll
ja
rcrb
pop
jb
cmp
outsl
leave
adc
inc
inc
inc
sub
cwtl
pop
fdivr
push
sub
and
mov
ja
and
sbb
pop
mov
xor
pop
rorl
xor
movsl
lret
push
dec
adc
cmpsb
mov
mov
add
outsb
es
inc
rol
es
add
lea
mov
shrb
jnp
scas
pop
push
arpl
mov
cli
leave
ret
sbb
jo
dec
jle
push
inc
rorb
lfs
out
mov
or
ret
push
xchg
outsl
movsl
xchg
inc
into
jg
cmpsl
out
mov
in
or
mov
push
jge
adc
mov
xchg
or
xor
xchg
pop
mov
dec
xor
push
cltd
insb
pop
lods
daa
sti
jae
loop
mov
or
ret
mov
out
mov
xchg
xchg
and
mov
aam
adc
movsl
ret
cmp
add
mov
dec
stos
cld
mov
xorb
lret
or
push
scas
mov
cmp
stos
adc
pop
rcrb
shlb
push
int3
mov
sub
push
xchg
rcrb
dec
sub
pushw
push
add
int3
aad
mov
fs
fdiv
mov
fcmovnbe
push
test
sbb
outsb
xchg
push
jmp
out
in
hlt
rolb
xchg
test
iret
aas
pop
mov
decl
pop
adcb
lahf
cltd
add
aaa
into
scas
decb
inc
in
mov
xchg
push
lret
and
test
inc
mov
push
in
mov
mov
sbbl
jge
mov
ret
lret
addr16
dec
aam
cltd
fistpl
movsl
outsl
cmp
inc
je
mov
js
or
jp
scas
icebp
mov
mov
es
lea
in
push
xor
pop
std
lods
clc
cmp
adc
and
in
lea
jns
enter
insb
vpmuludq
adc
sub
and
subb
inc
orb
or
jle
xor
inc
fdivrl
mov
call
xchg
mov
iret
xor
movl
aad
jns
mov
incb
mov
insb
call
xor
mov
lods
bound
testl
movsb
lret
pop
rcrl
pusha
pop
lret
es
jmp
xlat
pop
xor
in
cpuid
enter
mov
test
and
ja
fwait
pop
dec
clc
mov
sbb
jbe
adc
test
lods
outsl
xchg
insl
jmp
clc
xor
sti
paddusw
sub
add
int3
xlat
cmp
pop
sbb
sbb
in
jg
std
movsb
test
into
sbb
mov
enter
aam
inc
in
cmp
cli
dec
mov
inc
repnz
push
cmp
inc
sub
sub
pop
es
jl
dec
xor
mov
sbb
gs
dec
mov
xchg
xor
mov
lcall
or
ss
jo
mov
lock
movsb
ret
xchg
fidivrl
es
test
stos
pop
fistps
leave
ficoml
jne
clc
idivb
pop
outsb
push
loop
into
adc
test
and
in
dec
mov
jle
out
sbb
lds
enter
test
aam
and
lret
cmp
add
sub
or
xchg
out
jo
cmp
pop
push
fs
xlat
scas
push
lret
aam
movsl
adc
cmc
mov
test
cmp
sub
cmp
mov
gs
subb
and
push
pop
and
test
pusha
adc
and
cld
xchg
clc
ljmp
xchg
pop
sub
loop
inc
test
lret
fs
loop
push
xor
adc
mov
mov
cltd
ds
ds
mov
lods
popf
dec
pop
pop
ficoms
inc
adc
aam
clc
mov
jne,pn
loopne
jl
repnz
push
and
cli
lea
jmp
lahf
cmp
sub
sub
cld
les
xchg
cmp
xchg
jmp
ret
add
sbb
icebp
dec
dec
addr16
aam
pop
pop
stc
fisubrs
test
pop
aas
test
lret
pop
icebp
cmp
xlat
loopne
rclb
lods
bsr
jecxz
mov
aam
jne
js
pushf
sub
ficompl
add
ss
adc
mov
lock
add
mov
jne
je
xchg
aam
out
dec
ljmp
and
inc
leave
sub
ficomps
cmc
inc
in
push
xorb
mov
push
ljmp
out
pop
xlat
mov
ds
outsb
lock
xor
lds
mov
push
imul
popf
fs
mov
and
sub
out
dec
lock
aas
fcomps
mov
xor
pop
je
add
fdivs
sti
xchg
mov
cli
lds
rcl
repnz
pop
and
arpl
test
sbb
xchg
and
sub
jb
mov
mov
mov
inc
les
sbb
shlb
pusha
xchg
mov
out
insl
cmp
pop
xchg
bound
out
xchg
sub
and
xor
add
lods
jns
add
sbb
push
mov
pop
dec
cwtl
add
and
dec
call
mov
jne
push
pop
in
in
dec
adc
test
imul
subl
sbb
int3
shrb
pop
adc
push
xor
cmp
ss
test
xchg
pop
test
cli
lea
cmpsl
xor
std
aam
and
jns
add
sub
cmp
or
mov
aam
sub
xchg
xchg
xchg
and
imul
fdivl
shrl
clc
push
mov
ljmp
sub
call
repnz
mov
mull
aad
scas
jp
es
ret
incb
lods
addr16
pop
lds
xlat
loopne
dec
out
dec
cmp
adc
fdivl
mov
aas
xchg
push
or
pushf
push
sarl
sub
shrl
mov
xchg
in
aaa
je
jb
xchg
lds
rclb
das
mov
mov
mov
rcrb
jmp
push
and
std
xor
adc
aas
sbb
cmpsl
icebp
aas
xor
lods
cwtl
push
dec
and
arpl
enter
push
ds
fnsave
adc
xlat
jo
aas
call
pop
pop
sbb
pop
sbb
loopne
push
call
lcall
cwtl
int
or
insb
ljmp
mov
adc
cmpsl
cmp
lret
mov
testb
xor
fldenv
loopne
test
dec
mov
lret
movsb
andl
inc
mov
mov
or
cmp
stc
fldl
mov
in
xor
add
cli
inc
ss
push
adc
inc
cmp
sti
and
out
js
jmp
cmp
imul
cld
or
cmp
cld
sbb
les
movb
mov
sub
cmpsl
sbb
sbb
cmp
pop
cmp
adc
pop
mov
dec
cltd
faddl
sbbl
sbb
mov
mov
and
mov
cltd
adc
sbb
mov
and
repz
fistl
and
sbb
push
sbb
testl
xor
hlt
sbb
out
addr16
in
sbb
enter
mov
aaa
mov
outsl
lret
push
push
ret
imul
adc
call
jae
shl
lods
aam
dec
lea
pop
sbb
pop
cmc
sbb
cwtl
or
and
repnz
pop
gs
insl
or
cmpb
jbe
pushf
jp
mov
inc
jl
push
sahf
cs
test
mov
aam
loopne
je
pop
scas
dec
mov
xlat
outsl
fwait
pop
sub
sti
fildll
pop
nop
stc
jo
xchg
adc
idivb
pop
out
in
test
jecxz,pn
jle
xchg
in
jns
cwtl
xchg
je
mov
pusha
sbb
pop
inc
aam
jo
ds
push
or
inc
cmp
inc
lock
cltd
nop
loopne
push
pop
enter
leave
jno
jo
mov
imul
fbld
jne
stos
cltd
fs
xor
imul
stos
addr16
sbb
mov
inc
add
push
mov
xchg
lret
mov
fwait
mov
mov
mov
nop
in
ficoms
popa
add
std
lcall
mov
jl
aaa
popa
mov
lds
or
and
fwait
iret
lea
cmp
cmp
insb
xor
aad
mov
pop
pop
cmpsb
xor
cmp
rcpps
xchg
pop
dec
mov
int3
push
cmp
xor
je
insl
int
movsl
mov
popf
sarl
out
or
xchg
sub
sbb
out
imul
sbb
movsb
mov
punpckldq
ljmp
hlt
inc
sub
dec
mov
sti
dec
sbb
jg
push
mov
rcll
adc
fsubr
pop
das
adc
int3
push
outsl
or
cmp
cmp
xchg
mov
cmp
push
shrb
and
sub
in
ret
call
pop
inc
in
add
dec
jae
insb
adc
inc
iret
and
and
test
cmp
adc
in
dec
jecxz
cwtl
hlt
mov
push
roll
hlt
inc
lds
les
jl
adc
cs
jg
pop
outsb
and
lock
and
mov
pusha
in
push
ljmp
je
cmpsb
cwtl
out
push
scas
movsb
mov
test
leave
cli
mov
into
lret
out
je
xor
or
gs
jns
stos
cmp
pushl
insb
pusha
jno
mov
movsl
sbbb
sbb
cltd
lds
ss
imul
mov
int
dec
faddl
out
xchg
gs
or
loop
stos
dec
js
aad
push
xchg
sbb
icebp
push
daa
jmp
pop
frstor
mov
in
inc
mov
fldenv
fld
sub
cs
push
xor
cmp
dec
xchg
lcall
add
enter
cmp
cs
sbb
cld
inc
push
or
std
js
insb
cli
pop
mov
dec
or
lahf
int
sahf
lods
dec
add
stos
mov
arpl
int3
cs
pushf
add
add
and
lock
pop
add
aam
mov
fbstp
mov
imulb
fnstenv
out
or
xchg
pushf
mov
xor
push
insb
xchg
lret
mov
push
hlt
lods
or
push
or
test
ja
push
movsl
and
and
and
dec
ret
mov
adc
jecxz
outsl
imul
fldt
mov
and
neg
dec
add
scas
push
sub
in
popa
xor
jl
leave
sbb
stos
daa
and
pushf
xor
cmp
jno
jo
add
shll
jl
repz
jns
xchg
das
and
movsb
xchg
push
cmp
loop
subb
or
sbb
adc
arpl
adcb
lods
mov
cmp
push
push
cli
sbb
or
inc
or
mov
jl
outsb
xchg
push
or
imul
or
aam
xchg
int
inc
lcall
mov
dec
sub
test
xor
out
dec
pop
xchg
or
mov
adc
js
xchg
push
clc
je
add
mov
cwtl
stc
push
into
cs
scas
pop
mov
xor
out
popf
in
ss
push
mov
popa
dec
mov
dec
push
adc
mov
sbb
pop
xchg
ret
movsb
shll
sahf
pop
inc
xor
mov
mov
xor
ret
mov
or
jne
jp
adc
adc
push
or
add
sbb
ljmp
jns
jecxz
bound
call
addb
push
and
icebp
ret
arpl
or
adc
dec
push
adc
outsl
in
adc
push
pop
cmp
adc
out
jge
cli
push
dec
imul
stos
stos
call
mov
lret
xchg
repnz
daa
lea
jbe
out
cmp
jbe
pop
icebp
iret
jno
sub
pop
jb
and
arpl
sbb
adc
jge
add
test
daa
push
inc
sub
imulb
bnd
je
pop
in
inc
popa
sti
inc
mov
or
xchg
popa
rorb
pop
add
bound
lods
xchg
mov
stc
je
lods
adc
frstor
xchg
subb
fstps
repz
cmp
clc
mov
aad
cli
roll
sbb
fisttpl
or
test
and
mov
das
call
ficoml
pop
pop
xlat
mov
aam
adc
inc
pop
aaa
or
inc
nop
dec
andb
int3
and
cmp
fadds
outsl
aam
rcl
clc
outsb
adc
aaa
jne
mov
push
aad
jecxz
jbe
inc
imul
insl
xchg
jbe
aas
and
js
jnp
sbb
xchg
pop
mov
dec
push
pop
cmpsb
out
dec
scas
lahf
je
fidivs
push
std
icebp
inc
xor
pusha
lcall
ret
sarl
cs
aam
xlat
mov
adc
jbe
jle
cwtl
lods
push
outsl
popa
stos
and
movsb
push
popa
or
sbb
mov
shrl
jb
jo
pop
push
fs
inc
notl
ljmp
lock
push
or
push
test
lods
lds
call
icebp
lea
dec
scas
adc
sbb
xchg
jne
cli
sbb
aad
cmp
cmp
lret
nop
jp
ja
insl
sahf
adc
into
jno
mov
pushl
test
imul
lds
arpl
jl
jp
and
fistpll
sub
icebp
testb
stos
mov
jnp
std
or
add
xchg
lcall
and
sarl
cltd
or
cmpl
cmp
cmp
inc
or
and
into
in
sbb
pushf
lcall
sub
int
mov
and
jae
xor
pop
adc
or
cmp
and
iret
scas
push
scas
sub
pop
cmp
fldt
push
push
mov
aad
popa
adc
and
decl
sub
xlat
sbb
dec
add
jmp
mov
pop
sti
leave
shlb
mov
xor
aas
int
les
push
psubb
push
push
mov
std
jmp
mov
add
add
es
mov
sti
mov
pop
fstps
es
add
and
cli
push
mov
mov
pushf
dec
or
test
cltd
fsubrl
add
mov
push
pop
cmp
xchg
cmp
xor
mov
inc
dec
cltd
or
mov
push
mov
dec
pop
inc
nop
or
fsubp
hlt
aas
in
das
sbbb
fisubs
sahf
movsl
xchg
pop
ja
in
movsb
mov
mov
adc
sub
stos
mov
mov
xchg
mov
popf
ja
aad
dec
mov
in
sub
cmc
jmp
add
mov
aam
or
aas
or
adc
pop
ds
or
cmp
sbb
mov
rcr
sarl
cmpsb
loope
mov
imul
push
dec
int3
adc
jmp
cltd
or
sahf
jnp
xchg
xchg
in
push
sbb
cmp
and
pop
mov
orl
aaa
xchg
ljmp
data16
stos
test
outsl
mov
insl
pop
mov
addb
mov
sbb
fistpll
lret
test
xchg
paddsw
mov
clc
test
in
xor
xor
cmp
and
iret
xchg
inc
das
jne
sub
loop
push
cwtl
dec
aad
inc
in
inc
aad
insb
fistpl
aam
mov
fildll
mov
lea
lcall
jg
mov
inc
bound
out
mov
mov
dec
enter
sarb
popa
jae
shlb
pop
pop
lahf
int
pop
fsubr
nop
cmp
in
sbb
leave
ljmp
mov
cmpsl
pop
mov
fstpl
inc
nop
jg
xor
dec
jne
mov
mov
gs
fldcw
notb
jo
add
ds
jle
or
dec
cmpsb
push
cmp
inc
dec
dec
mov
arpl
div
lea
dec
push
sub
mov
fstpt
andb
insb
xor
inc
sub
xchg
rcrb
jo
jne
push
movb
mov
push
or
les
inc
pop
call
mov
lock
sbb
cmc
insl
aas
imul
ret
sbb
ja
flds
mov
mov
add
pop
cmp
mov
mov
lods
mov
jp
xchg
mov
aad
loope
sahf
push
negl
jbe
stc
jge
dec
or
scas
es
jl
and
sub
lods
or
test
shl
sub
jl
cltd
xchg
cltd
rol
adc
shld
dec
out
adc
out
mov
loop
mov
int
mov
dec
adcb
sbb
mov
dec
fisubl
adc
adc
inc
pusha
mov
lret
rclb
sti
sbb
pop
adc
pop
push
or
test
mov
jae
stos
pop
pop
into
sub
ljmp
add
cmp
das
imul
sbb
jnp
nop
inc
hlt
jp
xor
mov
mov
add
cmc
out
or
mov
push
mov
dec
aas
push
dec
sub
adc
out
xchg
outsl
add
dec
movsb
inc
sti
sbb
pushf
mov
mov
push
adc
cmc
sbb
fidivrs
outsb
mov
hlt
add
dec
cmpsb
sub
xor
ret
push
fistpll
push
bound
iret
jecxz
xor
insb
cli
arpl
mov
jns
xchg
dec
xor
mov
sbb
stos
mov
xor
int3
add
pop
fwait
dec
imul
ss
push
mov
jne
push
stos
pusha
push
jae
mov
or
lds
cs
push
mov
cmp
ret
jne
cld
lock
cld
mov
or
out
mov
movsb
jecxz
shlb
xchg
decb
dec
sub
pop
or
movsb
test
cli
mov
dec
sbb
int
jbe
or
loop
dec
add
mov
ret
pop
and
cmp
cmp
fnsave
daa
pop
std
jne
icebp
jb
roll
popa
in
shl
ret
jae
lahf
sbb
jl
jg
cmp
xor
xchg
mov
xchg
xchg
icebp
mov
dec
xor
add
adc
jle
push
bound
test
aaa
jnp
dec
insl
outsb
xchg
mov
and
pushf
fwait
push
pop
xchg
xchg
xor
popf
sbb
mov
andl
roll
jbe
mov
cld
lahf
or
xchg
mov
fcom
mov
xor
sbb
dec
enter
push
xor
outsl
popa
pop
adc
insb
aad
das
ficoms
dec
push
fldcw
inc
cmp
pop
test
mov
sub
cwtl
outsl
mov
lods
mov
outsb
and
pop
dec
xchg
push
sub
xchg
sbb
daa
pop
lahf
pop
push
hlt
xchg
lea
movsb
sub
or
xor
loope
ja
dec
ja
inc
in
test
outsb
jle
sarb
add
ret
push
mov
mov
out
das
paddb
mov
dec
mov
mov
stc
sub
jge
pop
and
sub
dec
pop
pop
fistps
lock
inc
push
push
mov
lds
mov
mov
shlb
outsb
or
jmp
sbb
mov
or
lock
aam
add
jg
dec
arpl
sub
push
popf
iret
push
xlat
jmp
xor
mov
pusha
ret
push
movsl
push
clc
push
aad
fdivrl
push
addr16
mov
xchg
cmp
sub
dec
jns
scas
sub
loope
pop
xor
push
pop
in
inc
and
aaa
loope
cmp
test
sbb
mov
xor
push
dec
cmp
ljmp
stos
andb
loop
stos
rorb
mov
fsts
pop
dec
lcall
push
adc
adc
xlat
ja
jne
or
out
fisttpll
notb
ret
xor
call
fwait
rclb
jmp
lcall
xlat
sahf
daa
push
and
dec
cmp
inc
adc
into
in
int3
lahf
sbb
adc
rclb
pop
inc
shr
dec
inc
cmp
leave
pop
or
cmpsb
shr
mov
and
add
sbb
mov
test
hlt
sahf
fs
jno
xchg
jo
nop
sahf
mov
rclb
xor
int3
cli
divl
cmp
jmp
pop
popa
inc
xchg
rclb
out
sbb
pushl
jns
xor
xchg
fbld
inc
xor
xchg
dec
xchg
mov
mov
xor
mov
adc
sbb
jnp
test
das
xor
push
lcall
in
je
mov
cmp
and
jmp
ljmp
xchg
in
fmuls
push
cli
insb
sbb
arpl
dec
mov
and
ret
int3
iret
das
negb
jbe
xor
add
imul
mov
push
fwait
loop
dec
pop
pusha
loop
aad
loopne
pop
mov
push
mov
pushf
inc
outsl
filds
stos
lret
imul
loop
ljmp
sbb
into
test
ljmp
adc
sub
ds
into
push
or
iret
sbb
mov
ffreep
jbe
jmp
rorl
lods
lods
out
mov
aad
mov
xchg
ret
cld
enter
cli
aam
and
mov
ficoml
cwtl
mov
cltd
iret
and
xchg
lcall
rcrb
fnstsw
stos
outsl
adcl
lcall
ljmp
jmp
shll
mov
ret
adc
into
sub
shrb
outsl
sahf
fsubrs
mov
rorl
imul
popf
and
icebp
xchg
pop
sbb
in
pop
iret
sbb
and
or
pcmpeqd
mov
out
adc
sbb
arpl
sub
mov
mov
rclb
mov
xchg
fcomp
stos
out
imul
in
test
cmp
cs
mov
loope
mov
xchg
mov
jne
outsb
inc
inc
repnz
mov
xor
mov
xchg
rolb
test
mov
mov
pop
xor
jns
push
js
inc
xchg
sub
push
or
btr
mov
jl
jo
ja
push
push
jl
inc
inc
add
scas
push
push
sarb
aam
xchg
outsb
cltd
adc
dec
mov
mov
imul
cmp
les
fdiv
dec
add
es
pop
pop
pop
sbb
das
xor
test
adc
lcall
xchg
aam
pop
mov
or
jmp
push
mov
stc
call
cmpsl
jmp
out
push
dec
pop
inc
imul
adc
movsb
inc
fsubr
test
push
in
test
xchg
mov
inc
cmpsl
test
adc
push
jbe
inc
xchg
xlat
inc
imul
daa
jbe
cmp
mov
ljmp
rolb
je
fldenv
and
in
jae
lock
daa
mov
cmp
fadd
mov
stos
bnd
inc
push
cld
mov
imul
jns
lods
int3
in
cmp
icebp
ds
mov
out
cmpsb
loop
dec
mov
sub
insb
inc
mov
sub
mov
pop
or
xor
jo
inc
movsl
push
iret
or
ret
cld
xchg
frstor
sti
adc
mov
mov
out
daa
mov
mov
jmp
xchg
mov
data16
mov
movsl
mov
push
xchg
mov
rcr
cs
and
pop
jp
xor
rorl
lock
mov
jne
or
sub
movsl
xchg
cmp
jmp
jne
dec
into
test
push
pushf
inc
cld
sbb
loop
push
jns
jmp
jge
lock
lsl
sbb
push
inc
inc
push
push
pop
inc
stos
xchg
lcall
mov
mov
add
xorb
sbb
push
adc
mov
cmpsl
adc
sub
lgs
popa
dec
jle
roll
in
test
mov
jge
add
jp
inc
mov
mov
jmp
jne
dec
jl
addl
sbb
ja
xor
mov
mov
mov
cmp
mov
pop
lds
stc
or
dec
nop
jo
ja
cwtl
sbb
lds
mov
test
mov
arpl
mov
aad
int3
stos
mov
sbb
mov
in
ret
in
push
lcall
fcmovb
dec
cmp
lods
hlt
fs
pusha
mov
repnz
mov
sbb
inc
jne
mov
xchg
scas
dec
mov
cmp
adc
push
test
and
mov
dec
inc
xor
xor
xchg
lods
xchg
push
int3
iret
or
push
pop
or
in
out
dec
fsubs
inc
inc
ljmp
in
in
dec
inc
jnp
jbe
xor
add
adc
adc
test
pop
insl
rcr
shll
dec
pop
pop
in
popf
mov
and
ds
mov
sub
int3
sub
lock
push
incl
insl
jb
push
das
aam
sub
les
arpl
sbb
sbb
lea
lahf
mov
leave
xchg
lret
sub
dec
stos
lcall
dec
jmp
iret
push
mov
jmp
and
aaa
jp
movsb
fwait
aaa
mov
loop
or
test
jle
pop
xor
test
pop
jo
inc
in
add
fwait
xchg
xchg
mov
adc
pop
or
add
lods
mov
js
in
aas
adc
aas
sub
and
dec
mov
movsl
adc
les
lcall
movsl
loope
lahf
mov
cld
add
lock
pop
jg
shl
ret
xchg
movsl
lret
cmp
outsl
cmp
cmp
adc
lea
inc
mov
sbb
shl
push
aas
cmp
sub
ret
adc
in
jne
mov
insl
testl
sub
add
mov
shll
loop
andb
rcrb
adc
call
mov
imul
sub
loope
scas
xor
lods
out
icebp
adc
inc
mov
inc
mov
pop
ljmp
push
in
std
sub
inc
pushf
repnz
xor
icebp
sar
or
jo
sub
or
les
and
xchg
insb
lret
pop
xchg
pop
sahf
or
xlat
cmp
sub
sub
out
loopne
push
jne
test
lods
mov
call
add
outsb
insb
ss
in
int
push
or
dec
ret
ss
mov
jge
add
mov
repz
int3
fbstp
xchg
or
cld
inc
jo
repnz
mov
cmpb
fwait
daa
push
mov
mov
fisttps
ret
xchg
lods
fimull
imul
xchg
sahf
xlat
mov
mov
jb
popf
xor
mov
push
les
add
cmp
jp
fwait
or
arpl
xchg
push
mulb
das
sbb
rcrl
fistpll
sbb
fdivl
stos
jecxz
test
mov
not
cmpsl
cli
out
ja
add
iret
xchg
push
cs
fwait
xchg
adc
adc
adc
ret
cld
in
testb
or
ret
movsl
jg
and
fisttpl
and
add
mov
mov
inc
into
in
lahf
pop
add
xchg
mov
dec
nop
or
xchg
test
push
into
cmpsl
daa
or
ja
cli
aad
daa
sub
movsl
or
mov
push
mov
jmp
ss
sbb
aaa
bound
xchg
cmp
inc
xchg
dec
cmp
push
sbb
addr16
sub
rclb
test
mov
sbb
into
cld
aad
inc
cwtl
or
adc
pushw
jns
ss
fnstcw
xor
std
movb
lcall
sub
adc
insl
push
jl
jp
mov
push
mov
mov
push
imul
dec
sbb
insl
or
jne
mov
pop
das
stos
mov
sub
pop
and
mov
idivl
in
push
and
sbb
outsb
ret
jno
pop
xor
lret
add
cltd
mov
clc
mov
and
lock
sti
andl
xchg
bound
cmpsb
sar
inc
out
jo
daa
xchg
xchg
mov
loopne,pt
jo
inc
or
repnz
xchg
xchg
sarb
xchg
push
dec
xchg
mov
loop
pushf
mov
repnz
popl
arpl
out
jmp
mov
popa
call
mov
xchg
pop
into
lret
add
pop
sbb
popf
add
push
xchg
std
cld
xchg
dec
push
mov
std
mov
sbb
pop
mov
pushf
in
test
inc
dec
pop
shll
mov
jg
fnstenv
stos
adc
dec
leave
data16
repnz
movsb
add
pop
jae
jno
gs
inc
mov
ds
imul
out
cli
add
mov
lret
leave
in
test
jle
mov
out
ljmp
mov
sbb
scas
setno
sub
stos
out
add
ljmp
insl
pop
or
mov
enter
aas
cltd
jns
mov
sub
cmpl
sbb
mov
insb
jae
aad
pop
pop
dec
pop
mov
std
cmp
cmc
and
dec
mov
xchg
lret
sahf
mov
xchg
dec
mov
xchg
in
fdivrs
add
in
lret
jnp
ja
mov
pop
cmc
adc
jge
and
scas
push
lds
vphaddbw
adc
movsb
xchg
xchg
imul
mov
cmp
mov
jecxz
sub
xchg
mov
lret
mov
lret
adc
push
xlat
adc
xchg
push
mov
mov
jg
sub
sbb
mov
or
inc
push
pop
dec
outsl
lret
push
xor
xor
mov
mov
dec
cmp
pop
in
stos
iret
xchg
ficompl
stc
lea
mov
xor
mov
mov
ljmp
sahf
test
hlt
sbb
sub
jo
jne
ds
mov
inc
testb
data16
pop
inc
insb
xchg
or
arpl
mov
repnz
mov
sub
sbb
scas
push
fldl2t
outsl
fistps
or
cmpsl
jo
cmpsl
mulb
and
stos
pop
sahf
mov
mov
sub
mov
and
addr16
cmp
mov
jmp
divl
cltd
pop
xchg
push
adc
mov
cmp
cs
or
adcb
repz
js
push
popa
pop
xchg
xchg
les
movsl
push
cmp
inc
inc
adc
sbb
or
mov
subb
mov
jbe
rcrl
xor
iret
jmp
push
sysret
and
test
loope
and
adc
sbb
mov
mov
adc
xor
imul
dec
sahf
mov
jge
mov
outsb
or
sub
enter
js
add
hlt
cmpsl
or
push
in
xor
xchg
xorb
fdivs
mov
movsl
pop
and
repnz
adc
mov
jecxz
mov
data16
pop
dec
and
and
int
cmp
loope
jbe
xchg
add
and
mov
mov
cs
mov
pop
data16
xlat
pop
xchg
push
push
xor
and
or
push
adc
or
mov
sbb
push
addr16
inc
pop
xchg
adc
dec
or
sbb
dec
insb
ja
aad
jnp
fsubrl
lock
js
popa
roll
or
lock
jo
shlb
out
insl
jae
push
xchg
sub
pop
mov
jg
aas
in
mov
lahf
push
test
push
xchg
jae
in
xchg
dec
das
jno
jl
add
pushf
xchg
pop
stos
dec
jae
pop
and
jmp
mov
cmpsl
mov
movsl
jmp
mov
cmp
fsts
lret
mov
or
test
cmc
jg
cmp
lods
xchg
xchg
adc
or
outsl
mov
jo
mov
cmpb
fwait
inc
dec
stos
ja
pop
jle
das
jmp
mov
pop
push
and
xchg
ret
imul
dec
mov
sbb
pop
test
cmp
mov
lret
shll
pop
jg
fcompl
inc
cmp
cmp
fiadds
jle
add
fs
mov
insl
cs
aam
xchg
and
or
mov
les
ds
dec
cli
imul
add
int
xor
stc
out
stos
aaa
sti
mov
jae
inc
addr16
test
out
stos
lock
and
insb
push
mov
div
pop
dec
sbb
pop
mov
into
mov
mov
fistl
fstp
lds
pop
lds
and
inc
sarl
add
xchg
mov
and
push
icebp
push
nop
lods
push
xchg
inc
bound
movsb
cmc
rorl
mov
js
out
xor
mov
into
and
pop
sbb
sub
jnp
inc
insl
inc
ss
mov
sbb
mov
data16
lds
sbb
or
jge
addl
imul
into
nop
inc
pop
popa
and
lret
inc
pop
push
cli
shlb
orl
aas
jl
ljmp
mov
sarb
shll
test
gs
fldenv
sarl
sub
mov
sahf
push
sbb
add
fcmovu
fisubs
mov
pop
push
jb
sbb
shlb
dec
sbb
roll
xchg
jo
outsl
inc
negb
add
ret
ds
or
mov
mov
lcall
cmp
mov
addb
dec
les
dec
xchg
aad
mov
cmpsb
jmp
jg
sbb
inc
and
xchg
mov
sbb
shlb
mov
test
cltd
pop
dec
mov
sbb
sub
loopne
pop
adc
cmc
lea
negb
jge
add
sub
dec
xchg
jl
xchg
ja
pop
mov
call
xchg
stc
out
arpl
orb
sub
test
adc
jl
sub
xor
sahf
js
mov
mov
outsl
or
out
pop
and
sarl
inc
cmp
fs
ds
mov
sarb
adc
shlb
out
xor
sbb
mov
popa
dec
pop
cmp
scas
addr16
sar
inc
cmp
pop
jle
xor
sbb
pop
add
popf
in
or
dec
dec
add
ljmp
paddq
icebp
push
jge
xchg
adc
mov
jae
jne
mov
adc
or
dec
and
jmp
xchg
xlat
ds
pop
andb
mov
lret
push
loopne
or
je
xor
xchg
leave
jns
xchg
adc
shr
imulb
ret
xchg
jno
mov
jl
std
sub
jl
push
scas
es
cmp
xchg
dec
repnz
mov
stc
jo
mov
jl
add
and
xorb
mov
add
imul
cmp
repz
aas
sbb
mov
pusha
cmpsb
mov
adc
xor
mov
sbb
test
dec
sti
test
stos
xchg
jbe
mov
dec
repnz
movsl
popa
xchg
stos
aas
jl
and
cli
scas
popf
arpl
cmp
jge
lds
test
push
in
cmp
sarl
arpl
scas
mov
mov
fstp
jae
cmp
cltd
cmpsl
xchg
inc
outsb
fs
push
movsb
pop
fisubrs
and
jne
stos
adc
test
cmpb
inc
testb
jae
addr16
adc
shrl
inc
iret
imul
push
into
lods
fldenv
pop
mov
jae
xlat
mov
test
shrb
scas
cltd
push
mov
out
jg
arpl
or
pop
push
aaa
push
cmp
xor
dec
mov
dec
push
dec
daa
ljmp
sub
mov
mov
lea
push
push
ds
ss
sbb
out
ja
lahf
lret
les
and
fidivl
jp
f2xm1
lea
and
inc
xor
mov
mov
pop
repz
ret
popf
fs
mov
imul
jle
bextr
jg
cmp
cld
jmp
sahf
push
bound
mov
sbb
ret
mov
push
dec
pop
adc
fstps
jae
cmp
aas
insl
out
add
mov
in
mov
outsb
inc
addr16
xchg
xchg
stc
cmp
dec
xlat
xlat
icebp
xor
mov
and
lahf
or
add
adc
cmp
jno
stos
fistpl
jo
das
pop
lods
xchg
loopne
in
xor
popf
aam
lock
shl
cwtl
lahf
rorl
mov
inc
pop
xor
sbb
cmc
icebp
sbb
popa
das
push
push
test
insb
jp
jns
and
mov
sub
pop
insb
jg
push
imul
outsb
add
mov
add
add
push
cs
out
push
push
rcr
xchg
out
loope
jl
sbb
adc
mov
xchg
arpl
push
push
popa
inc
sti
ss
sarb
cld
mov
ss
xchg
sti
arpl
fsubl
push
pop
andb
ljmp
mov
ret
cmpl
iret
pop
stos
jg
xchg
mov
or
mov
jno
push
and
ficoml
push
dec
jb
sarl
clc
mov
stos
jl
ljmp
and
vpminsw
sub
addb
jne
mov
and
mov
scas
frstor
les
outsw
dec
inc
dec
in
mov
jge
dec
inc
dec
dec
js
popa
loope
inc
pop
sub
sahf
xor
lods
xor
aas
sub
sbbb
test
cmc
lock
lret
ds
xlat
cmpsl
or
les
adc
insl
aad
xchg
xor
out
repnz
ljmp
leave
xchg
iret
enter
dec
inc
test
lcall
xor
xchg
mov
mov
int
xchg
push
mov
cmp
and
lds
jecxz
sbb
sti
repnz
sbb
cmp
mov
popf
dec
or
out
repnz
dec
mov
dec
in
mov
insl
enter
cmp
sbb
in
mov
idiv
lods
mov
loop
rorb
out
pop
pop
out
push
dec
pop
fcompl
imul
jo
xchg
mov
mov
mov
fnstsw
push
pop
pushl
sub
cli
addr16
jge
and
mov
adc
cmc
in
pop
scas
daa
cmp
scas
fmuls
cmpsb
ficoms
adc
orl
mov
daa
pop
and
sarb
ret
or
sub
and
mov
addr16
cmc
test
xorl
mov
inc
aaa
test
xor
or
lods
test
jmp
sti
dec
fsubrl
cmp
inc
fnstsw
push
cmp
outsl
mov
nop
mov
xchg
testl
push
icebp
xor
mov
push
cmpsb
mov
testb
in
testl
xlat
adc
bsf
dec
and
mov
data16
fucomip
xor
std
shlb
inc
or
or
lcall
insb
xchg
fidivrs
or
jle
xor
jle
cli
stos
pusha
and
pushf
and
mov
push
jp
mov
adc
aaa
inc
jecxz
or
lds
lret
mov
clc
sub
push
out
mov
push
in
xor
int3
sbb
pop
insb
jecxz
push
psrld
sbb
pop
jbe
lds
or
xchg
mov
stos
insl
mov
outsb
mov
jp
mov
lock
hlt
pop
cmpsb
jns
cmp
xor
inc
adc
mov
sub
fildl
jnp
jmp
mov
sub
ret
das
sub
shll
adc
inc
pop
cmp
fdivs
sbb
aaa
sti
push
xchg
fsubl
in
enter
xlat
nop
pop
cmpsb
push
ds
mov
xchg
mov
add
into
push
cmpsl
add
es
pusha
pop
and
dec
mov
push
int3
pop
test
dec
pop
mov
sbb
inc
nop
pop
sub
jmp
push
stc
pop
scas
or
sbb
rsqrtps
arpl
mov
push
adc
pop
out
sub
fisttpll
lret
shl
or
fisttpl
das
cmpsb
mov
mov
inc
dec
repz
pop
ja
mov
add
mov
lcall
mov
clc
mov
jo
xchg
mov
cs
xlat
lods
sub
aam
dec
sbb
and
sti
push
mov
mov
insb
fstpl
pop
daa
call
jge
xchg
fs
ja
mov
scas
mov
dec
fprem1
jb
lret
and
mov
aam
aam
xchg
push
jecxz
cmp
sti
pop
lock
fs
call
inc
sub
lret
and
pop
testl
mov
lret
scas
dec
out
jne
gs
bound
and
sub
bound
sbb
jno
jge
sarb
sti
cld
xorb
js
sub
divb
mov
mov
xor
das
gs
jae
jae
xchg
aas
push
push
in
pushf
add
mov
daa
xchg
in
push
mov
push
and
adc
and
or
adc
and
sahf
adc
and
inc
repnz
ret
jle
out
inc
mov
es
fidivrl
loop
mov
aaa
cmp
or
push
into
ss
jnp
add
pop
or
mov
inc
ds
jbe
pop
xchg
leave
out
test
out
jno
popf
cmp
inc
cmp
in
mov
add
jecxz
scas
es
je
and
push
mov
jae
shlb
push
paddw
addr16
jae
mov
ds
iret
fidivrs
or
sbbb
cmp
out
int3
push
insl
test
out
rolb
push
outsb
inc
rol
push
imul
test
fs
dec
push
aam
jo
sub
cli
sbb
adc
sub
clc
bound
mov
leave
out
aas
pushf
sbb
dec
or
frstor
stos
sbb
xor
or
dec
mov
fldl
les
sub
aas
sti
repz
call
sarl
sub
push
es
shl
shrb
add
and
jae
pop
jne
adc
out
jbe
push
call
adc
jbe
lcall
push
sub
adc
jne
sub
pop
sub
inc
inc
adc
dec
gs
mov
jge
push
outsb
push
xchg
enter
push
fwait
out
jns
xor
jge
hlt
fstpt
push
sarl
mov
bound
cs
popa
or
aad
lock
push
faddl
clc
fbld
fsubrs
mov
or
mov
add
cli
icebp
cs
jp
call
js
sar
outsb
dec
fcoml
loope
std
inc
dec
mov
xlat
pop
cmp
ficompl
sub
and
jnp
das
push
je
jns
fmuls
hlt
xor
addr16
mov
push
sub
fbstp
and
lods
add
add
movsb
loopne
sbb
rolb
pusha
fcomps
and
pop
shrl
sbb
and
dec
inc
jo
jmp
jle
lock
fsubrp
or
xor
push
daa
sarl
popf
es
dec
das
call
dec
mov
rclb
pusha
dec
arpl
scas
cwtl
fmull
mov
and
pop
sub
iret
loope
jmp
sub
adc
sbb
xchg
or
and
or
or
stos
jmp
sbb
cmp
inc
or
sub
add
sub
es
in
push
jnp
fwait
lahf
es
jle
fwait
je
repz
repz
push
adc
sbb
cmpsb
pop
scas
insb
out
ds
mov
jmp
stos
add
pop
gs
sub
sbb
in
cmp
sbbb
cmp
mov
mov
pop
pop
fidivs
lea
rcl
pusha
jb
push
or
clc
or
mov
sbb
imul
ficompl
xchg
and
adc
lds
mov
loopne
inc
fwait
pop
jnp
mov
dec
jp
lods
push
popa
imul
pop
mov
jbe
leave
adc
out
xor
shr
les
mov
jns
jmp
std
mulb
in
xchg
mov
jp
ljmp
sbb
pop
pop
test
in
add
ja
mov
ja
or
mov
rcrl
inc
dec
jbe
outsb
insb
inc
hlt
ret
push
mov
xor
dec
mov
sub
sahf
lahf
push
daa
leave
stos
scas
sub
ss
adcl
scas
fistpll
enter
out
and
inc
add
hlt
and
push
loop
jbe
xor
scas
xor
popa
neg
and
imul
pop
mov
sbb
mov
repz
das
pop
jnp
mov
sbb
popf
in
mov
iret
push
push
pop
rol
aas
sbb
sbb
or
lret
cmp
imul
sub
push
sub
std
jp
int
in
dec
push
mov
jmp
jae
push
int
jmp
adc
cmp
mov
jl
mov
lea
orb
push
hlt
xchg
push
mov
push
js
ret
out
add
and
sbb
mov
fimull
nop
push
cmp
outsl
jmp
adc
cmp
and
aaa
outsb
daa
push
and
dec
push
add
xor
xchg
jno
aaa
scas
rclb
cltd
fnsave
pop
loop
jne
dec
aam
push
mov
gs
xor
cmpsb
or
pop
jmp
xor
push
mov
mov
bound
or
and
int3
inc
dec
stc
and
xchg
lcall
add
inc
test
and
sti
cs
sbb
and
lret
lods
insb
insl
stos
aad
aam
int3
sbb
out
xchg
bound
push
and
sbb
push
in
mov
daa
sub
jae
jns,pn
divb
inc
and
cmp
ret
xor
frstor
push
ret
and
call
lahf
add
shlb
leave
mov
gs
pop
sub
ja
movsb
daa
mov
mov
and
push
dec
enter
daa
or
add
mov
cmp
jge
adc
adc
loop
mov
outsb
mov
stos
int3
clc
insb
sbb
mov
xchg
outsl
mov
mov
shrb
mov
cmp
xchg
cld
shr
mov
adc
rolb
ja
addr16
test
sub
add
add
xor
data16
in
in
outsb
adc
loopne
rcrb
inc
lock
mov
push
mov
add
in
addr16
aad
cmp
and
aad
mov
aaa
sbb
jnp
mov
pop
cltd
ret
vpshufhw
jge
add
lret
lds
mov
push
test
add
mov
adc
xchg
mov
insb
lret
xchg
shll
mov
push
inc
dec
xchg
outsl
jg
pushf
xchg
mov
movsb
xchg
add
bound
cmpsb
xor
pusha
stos
scas
fldt
adc
aas
das
jg
test
fcoms
insb
mov
xor
xchg
pop
loope
sub
pop
insb
fcomps
fs
orl
pop
pusha
and
add
push
inc
inc
es
jno
lahf
lret
or
add
ja
add
push
dec
sub
mov
stos
icebp
lret
cmp
int
jp
movl
repz
loop
xchg
lret
popa
int
nop
mov
xchg
es
nop
lahf
push
daa
pusha
mov
fwait
aas
stos
push
andb
cmc
int
lods
lds
inc
pop
pushf
mov
insb
hlt
fmuls
sbbl
mov
push
push
repnz
clc
jmp
mov
ret
add
xchg
dec
fldcw
divb
shlb
xchg
inc
dec
xor
dec
stos
into
add
out
xor
daa
aas
je
lret
inc
mov
mov
sub
dec
ret
popa
call
movsl
adc
sbbl
lods
jl
xchg
sub
rorl
dec
xor
pop
fs
sub
pop
popa
outsb
lods
sahf
add
xchg
jle
ret
mov
popa
aas
mov
js
jnp
lahf
sub
adc
std
fildl
inc
aam
iretw
cmp
push
call
sbb
push
dec
add
inc
and
dec
aas
xchg
lods
cmp
sqrtps
shl
adc
ret
fnsave
or
sub
daa
push
jno
aad
adc
cmp
cltd
fisubs
dec
shll
lds
sbb
jb
sub
jns
cmp
jo
cmp
ror
and
xchg
mov
pusha
push
mov
push
xor
push
or
mov
inc
clc
push
cld
mov
fidivs
rcpps
mov
cmp
fsts
jbe
cltd
rcrl
cwtl
sbb
sub
int3
jnp
mov
adc
fisubs
dec
fsub
mov
add
mov
idivl
push
cs
and
and
lea
pop
rclb
addr16
and
imull
jns
cmp
ds
inc
mov
in
xchg
pop
and
dec
xchg
xor
fisttpll
lret
adc
xchg
xchg
xor
mov
push
rolb
jge
sbbb
ret
sub
insb
lock
or
mov
mov
orb
scas
das
jle
bound
adc
mov
and
stos
jae
or
dec
cwtl
push
add
out
movsb
shll
sbb
lcall
js
popa
push
jl
adc
add
lock
jle
sbb
mov
addb
loop
loope
inc
inc
push
xor
push
mov
fdivrs
testl
adc
mov
xor
lock
sub
in
jge
push
rorb
push
popf
popf
jl
pop
fistps
pop
imul
out
push
push
dec
lods
xor
pop
rcrb
pop
incb
cltd
jo
jo
mov
sarb
mov
cmp
or
adc
movsb
fisubl
aaa
xchg
adc
mov
sub
jp
jae
push
sub
xlat
adc
fistps
arpl
mov
sbb
pop
ljmp
mov
jbe
or
xor
stos
lods
jl
inc
and
ja
pop
sub
dec
and
testb
sub
xor
adc
ret
inc
or
inc
aas
jo
sbb
add
cmpsb
mov
ljmp
leave
and
daa
mov
cmp
mov
sbb
shl
fisubs
xlat
jnp
mov
outsb
int3
xchg
shlb
sub
adc
dec
test
or
insb
or
lahf
fdiv
adc
sti
add
or
jecxz
add
loop
mov
fstp
bound
push
adc
inc
pop
mov
rclb
fbld
test
or
push
mov
loopne
shl
scas
in
test
cmp
mov
jno
pop
dec
movsb
jbe
das
lret
cmpsb
push
xchg
xor
jnp
and
rol
push
ljmp
mov
mov
sub
cltd
cld
sahf
icebp
je
je
jns
push
aad
fdivl
pushf
pop
jge
fwait
pushf
popf
enter
ss
push
in
cmp
sub
and
gs
inc
test
ja
sub
mov
jmp
aam
scas
rep
mov
call
dec
daa
adc
cmpsb
pushf
push
inc
mov
sqrtps
adc
or
push
mov
imul
lds
subb
aas
push
jno
xchg
ss
mov
ds
insl
fwait
sti
cmc
mov
cli
ret
and
pop
sbb
flds
sbb
aaa
jmp
loop
pop
lret
cmova
data16
adc
sub
jo
xchg
cli
imull
les
mov
loopne
push
push
fs
mov
push
xlat
xchg
ficompl
or
jge
imul
add
ret
cmp
and
sub
je
shrl
jne
mov
pop
inc
ja
loop
in
lods
daa
sub
sub
sbb
mov
or
jl
popa
lods
mov
mov
and
or
nop
rolb
jns
mov
popf
mov
out
mov
xchg
lcall
shrb
mov
xchg
repz
imul
je
imul
cld
popf
pop
pop
or
popa
mov
mov
xchg
mov
push
add
test
fcompl
jge
bound
sub
ja
inc
sti
add
and
ss
inc
gs
insl
cmc
push
jo
push
fimull
jle
and
out
out
cmpsl
pop
xchg
into
cmp
inc
pusha
mov
push
sub
in
jmp
in
cmp
pop
out
mov
repnz
mov
xchg
movb
in
mov
stos
pop
arpl
xor
push
mov
hlt
pop
mov
lret
mov
push
and
pop
mov
inc
insb
jle
imul
nop
inc
cmpsl
xor
jo
subl
mov
push
jbe
test
sbbl
lcall
mov
imull
sub
dec
xor
dec
xchg
dec
xor
cmp
cmc
mov
add
imul
je
cmp
mov
out
dec
mov
pop
popa
call
inc
inc
mov
loope
mov
mov
or
mov
aas
aad
cmpsl
jns
xor
gs
jne
sbb
xor
mov
mov
mov
repz
es
jb
les
dec
mov
dec
out
into
inc
adc
mov
test
sub
stos
shlb
mov
std
sbb
popa
jo
inc
mov
daa
icebp
je
in
iret
fisttpll
loopne
sti
leave
mov
sub
mov
mov
aas
jne
int
and
fs
add
ret
cli
ss
cmp
pusha
sbb
jo
xchg
mov
add
insl
pop
mov
into
sbb
cwtl
test
lahf
outsb
and
jae
jns
or
fs
adc
cmc
inc
dec
cs
pop
jmp
in
std
imul
fldt
nop
pop
mov
and
out
xchg
test
adc
loope
mov
into
mov
add
mov
fistl
loop,pn
pop
and
leave
andl
dec
cmp
jnp
dec
hlt
mov
push
or
sub
stos
into
xchg
xchg
adc
mov
xchg
adcb
pop
add
pop
jmp
cltd
cmpsl
cli
decb
mov
pop
jge
cmp
adc
lcall
lods
notb
sub
ss
and
ja
insl
push
jmp
sbb
fidivrs
cwtl
repz
mov
hlt
mov
xchg
dec
pop
pop
faddp
shll
sbb
push
mov
sub
sbb
push
pop
xchg
add
scas
sbb
imul
cmp
jmp
gs
js
addr16
and
jnp
pop
pcmpeqd
or
stos
mov
pop
lahf
je
sub
adc
dec
xchg
push
sahf
scas
push
test
movsl
arpl
adc
js
jne
sbb
out
xor
dec
mov
xlat
fistl
sub
ja
imul
dec
imull
jl
sti
out
mov
jmp
jno
inc
dec
mov
test
mov
jne
mov
mov
inc
dec
or
mov
enter
mov
push
push
xor
cmpsb
enter
adc
jb
fwait
adc
and
pushl
fscale
test
cmp
aaa
aam
sti
pop
xor
xchg
jmp
mov
mov
ja
and
mov
xor
sarl
and
movsl
in
int
add
and
daa
jbe
dec
test
sbbb
sub
adc
adc
jl
jb
jns
test
push
pusha
jmp
sub
dec
es
lock
push
inc
pop
outsl
xlat
cmp
les
pop
push
in
cmpsl
pusha
add
push
call
movsb
push
call
or
or
mov
repnz
inc
and
les
adc
add
push
aad
mov
xchg
inc
jg
inc
dec
inc
cwtl
test
arpl
pop
xchg
sub
dec
sti
cltd
imulb
clc
ljmp
xchg
in
mov
push
in
stc
lods
mov
roll
addr16
push
call
sub
xor
and
testl
movsl
mov
idivb
aaa
insl
das
or
sbb
cmp
push
dec
lds
and
bound
mov
push
icebp
fdiv
fcmovbe
or
daa
aas
pop
stos
mov
int
shl
out
pop
pop
add
xchg
sahf
leave
ret
inc
lar
sbbl
jle
outsb
dec
pop
fs
xchg
and
rcrb
sub
mov
mov
xchg
popa
mov
aas
dec
xlat
shlb
dec
rcrb
inc
inc
ja
mov
sbb
pop
and
adcb
xor
lds
jns
aam
stos
dec
sbb
stos
hlt
add
xor
repz
icebp
add
mov
inc
sbb
cmp
lret
mov
ret
in
pop
cwtl
in
pop
scas
popa
dec
cli
popf
sbb
imul
jns
stos
adc
cltd
pop
fchs
cmp
jbe
jmp
test
and
add
sbb
lcall
cmp
mov
add
pop
mov
movsb
xorb
aas
leave
push
test
out
adc
pop
data16
icebp
sbb
aas
and
mov
cmpsl
or
lds
aaa
sahf
add
repnz
sbbl
dec
jae
jns
insl
pop
imul
enter
test
ljmp
xor
cli
push
roll
mov
mov
jnp
fucomp
or
scas
test
bound
sub
call
jle
sarl
fdiv
scas
idiv
ds
push
mov
insl
mov
out
test
iret
mov
data16
xchg
jb
fdivrp
out
loopne
cmp
inc
mov
and
pop
jae
repnz
mov
les
aas
mov
pop
pushf
and
lcall
dec
cmp
outsb
aam
mov
movsl
mov
xor
xchg
cli
incb
insb
int
cmpsl
dec
xorl
pop
sub
xchg
adc
aas
loop
or
xor
repnz
aas
cmpsl
aad
int3
orl
ds
cmp
or
lea
addl
or
stos
jno
pop
push
sbb
cs
or
cmc
mov
fdivs
stc
je
movb
cmp
xor
mov
test
cmovs
push
adc
in
repnz
int
int
xchg
std
jmp
lods
dec
int
pop
dec
ds
mov
mov
sub
and
mov
push
dec
ss
outsl
or
lret
stc
into
dec
mov
scas
in
mov
notl
cwtl
out
sub
stos
add
xor
jbe
adc
bnd
test
aaa
into
dec
loope
dec
je
xchg
aad
sahf
lock
test
xor
fsub
and
push
xchg
jmp
lock
push
mov
mov
inc
jl
mov
adc
andb
mov
jl
mov
cli
xor
fcoml
movsl
xchg
inc
in
xchg
clc
aaa
cmpsb
xchg
mov
mov
inc
loopne
int3
andl
test
xor
pop
push
repz
jl
dec
dec
cld
das
mov
push
fistpl
fistl
xor
sbb
incl
adc
xchg
mov
xchg
cmp
mov
inc
sub
sarb
push
sub
pop
inc
add
js
mov
mov
scas
dec
cwtl
shr
inc
out
mov
je,pt
lods
mov
mov
mov
cmp
in
push
fbld
add
and
jbe
test
mov
jns
fldcw
data16
addr16
pop
js
sub
xorl
mov
or
mov
adc
jne
inc
xchg
fiadds
jge
jnp
imul
popf
popf
jge
adc
pop
pop
cmp
scas
sti
loop
adc
loopne
ja
cs
inc
xchg
xor
cltd
jl
push
ja
mov
mov
aaa
shr
mov
pusha
jns
jns
movsb
shlb
fbld
arpl
push
stos
inc
cmp
push
ja
sub
stos
xor
push
scas
shll
adc
push
add
sbb
fbstp
imul
lds
sub
dec
sbb
mov
xor
adc
insb
mov
cmp
xchg
fwait
xchg
mov
xchg
mov
aaa
cmp
xchg
stos
lret
nop
icebp
dec
mov
pusha
test
in
shrb
out
inc
clc
or
inc
and
add
pop
mov
enter
imul
pop
callw
cmp
fcomps
mov
lret
jge
mov
test
fabs
bsf
or
xor
push
jg
xchg
shlb
cli
and
and
xchg
js
adc
sbb
int3
loop
int3
push
adc
out
mov
lret
mov
xor
cmpsb
pop
xor
pop
fisttpll
mov
pop
inc
data16
rcrb
xor
shrb
movsb
les
out
inc
push
jns
repz
icebp
mov
fnstcw
lods
test
lock
ss
pushf
jae
fistpl
je
test
sar
xchg
iret
and
mov
and
mov
inc
add
sub
jle
mov
clc
call
sub
ret
and
xlat
xor
xchg
pop
es
sbb
test
mov
xor
incl
lea
fs
mov
inc
pop
xchg
pop
pop
sbb
mov
mov
mov
cmpb
inc
push
int3
mov
mov
mov
push
enter
imul
movsb
iret
pop
icebp
jge
lods
lret
ror
enter
cmc
push
inc
repz
mov
gs
sbb
pop
inc
lods
pop
jecxz
mov
int3
imul
xchg
imul
dec
fcmovnu
ja
cli
outsl
and
mov
div
les
xlat
outsl
pop
mov
call
xchg
cwtl
inc
mov
lods
je
cmpsl
imul
arpl
cmpsb
je
dec
mov
jecxz
or
dec
cmpsb
vpshab
mov
mov
jns
pusha
stos
push
push
or
inc
jmp
fisttps
pop
test
dec
cli
jns
jl
insb
insb
fisubrs
inc
ja
dec
leave
xor
pusha
mov
lret
mov
test
test
mov
in
pop
mov
stc
inc
cli
xchg
mov
inc
loop
dec
icebp
je
test
dec
pushl
mov
and
js
inc
xchg
into
sub
aad
mov
cmpsl
scas
lahf
jne
popa
jns
in
mov
out
lret
das
push
addl
pop
test
sub
nop
add
in
hlt
test
lods
sbb
and
stc
test
inc
jo
das
gs
lock
add
xchg
or
dec
repnz
jo
or
jg
sub
rcl
sub
sub
mov
mov
ja
fs
or
mov
js
lock
enter
cmc
xchg
in
rolb
mov
cmp
das
insl
aaa
jo
sub
cmc
in
or
and
loopne
inc
jge
outsl
add
mov
in
dec
add
ficoms
dec
lock
dec
adc
pushl
int
popa
jbe
sahf
frstor
ror
movsl
in
mov
mov
xlat
cmp
outsb
cmpsl
jno
sub
mov
in
bound
cli
xchg
push
sub
inc
je
inc
es
push
xchg
inc
mov
aas
and
cmp
xchg
jns
insb
cmp
aad
push
int3
push
aam
int
mov
dec
js
bound
hlt
ss
ret
pop
mulb
jg
dec
or
cli
pop
adc
in
andl
pop
out
and
les
icebp
xor
icebp
jno
push
int
add
push
push
fisubrs
call
xor
mov
pop
lcall
cmp
stos
fs
addb
sbb
das
mov
cmpsb
dec
int
or
adc
movb
cmp
int
pop
mov
aas
dec
insb
imul
fidivs
lods
sarb
cmp
jmp
push
mov
fwait
call
cmp
dec
sub
xor
sub
sub
fucom
sti
loopne
and
mov
cmpsl
adc
mov
inc
mov
pop
in
outsl
gs
adc
xor
jb
adc
xor
fadds
xor
pushf
mov
repnz
lds
sub
dec
xor
outsb
add
out
sub
and
push
lock
push
or
mov
dec
xchg
mov
mov
cmp
test
and
cmp
cmp
mov
sbb
cs
pop
andb
mov
mov
mov
outsb
push
xor
aam
fsubp
cs
inc
out
sub
mov
pusha
mov
pop
icebp
sbb
dec
pop
add
in
int3
ss
jo
pop
dec
std
xchg
js
mov
jne
dec
jno
fbstp
lea
sub
mov
jl
shrd
adc
pop
or
mov
mov
testb
dec
lock
movups
out
mov
fistl
cmp
and
movsl
mov
stc
cmp
stos
jge
lods
rclb
mov
xchg
in
sub
pop
insb
out
mov
fwait
ret
out
jbe
hlt
aad
imul
pop
pop
dec
dec
pop
idiv
stos
mov
jns
or
popf
mov
xor
aas
shrb
push
pop
fsubs
xchg
inc
xor
xor
jmp
add
cmpxchg
out
pusha
sarb
mov
fstpt
loop
inc
xchg
pop
daa
jo
int3
arpl
clc
mov
adc
outsl
lret
inc
cmpsl
fidivrs
cmp
jne
leave
xchg
and
jnp
mov
xor
ret
inc
sbbb
popf
add
aad
pop
cmp
push
and
repnz
sbb
std
insl
subb
dec
pop
data16
push
insl
jl
movsb
fstpt
loope
mov
xchg
mov
wbinvd
jnp
sarb
cltd
out
xchg
addr16
repnz
mov
and
lods
lods
and
xor
lcall
pop
fstpl
and
sahf
jmp
mov
mov
or
cmp
add
sub
inc
adc
daa
insl
in
push
and
mov
mov
fisttpl
pop
fs
movsl
loope
and
rorb
or
or
dec
pop
fwait
lods
pop
pop
cmc
cmpsl
pop
xchg
or
adc
mulb
inc
jns
jne
mov
and
sahf
jns
out
movsl
mov
sub
sti
stos
stos
xor
push
push
mov
xchg
jg
mov
lea
loop
jne
add
add
adc
push
les
pop
ficoml
enter
fists
push
jp
fs
and
scas
lret
dec
dec
stc
nop
movb
mov
jmp
cld
js
push
mov
mov
lret
or
dec
add
push
mov
sarb
cmp
inc
and
lods
jmp
sub
mov
sar
jp
add
adc
pop
inc
das
cli
test
mov
jl
cmc
in
outsl
subl
mov
adc
cli
cmp
les
testl
mov
clc
insl
stc
je
mov
xchg
movsl
mov
aad
enter
jno
push
adc
add
xor
xchg
mov
scas
out
jmp
sbb
pop
out
cmp
push
sub
cwtl
push
and
fisubrl
push
mov
lds
mov
repnz
inc
pushf
push
sbb
add
pop
js
mov
es
push
fsubl
mov
mov
ss
mov
adc
loop
in
nop
sub
adc
add
jl
loope
cmp
pop
leave
rclb
std
in
mov
fstl
mov
xchg
adc
call
lods
cli
addb
mov
pushl
scas
cmp
lret
push
xor
mov
push
or
add
cmp
icebp
dec
popf
std
add
xor
jnp
dec
popf
loope
ss
imul
mov
dec
xor
fs
sbbl
into
addr16
outsb
test
roll
mov
or
pop
push
cmp
imul
sub
call
gs
xchg
inc
ret
cmpb
test
add
fmull
mov
cli
add
js
aas
push
stos
sub
sub
loopne
xlat
cld
jae
xor
inc
fnsave
sbb
lods
repz
int
xchg
cli
mov
stc
ret
and
pop
inc
pop
mov
mov
xchg
arpl
cwtl
xor
rolb
scas
fidivl
pop
push
jmp
leave
pop
pop
dec
adc
mov
dec
iret
xor
das
in
or
loope
fldt
adc
loopne
fisttpl
sbb
mov
loope
sub
loope
cmc
call
lret
push
aaa
nop
pop
sahf
sbb
xchg
outsb
or
jmp
inc
sbbb
xor
pop
out
push
repz
add
jg
and
loope
call
mov
xchg
mov
jg
mov
pop
xorl
in
and
leave
adc
add
adc
stc
seta
cltd
jae
cwtl
add
insb
shlb
cmp
and
arpl
adc
sub
pop
shll
sarl
outsb
inc
dec
adc
fidivl
sti
shl
stos
or
stos
mov
sbb
subb
sti
xchg
push
loopne
inc
out
mov
mov
stc
xor
add
jmp
shl
mov
push
bswap
cli
test
xchg
or
mov
xor
sbb
and
jne
jb
clc
insl
pop
xor
jne
pop
and
repz
mov
daa
ljmp
cmp
cs
jne
push
add
lcall
daa
int3
movsl
les
shll
jg
mov
push
xchg
testl
mov
jecxz
sub
jno
mov
aas
push
and
popf
mov
imul
in
ret
push
cmp
xchg
fld
inc
ret
adc
mov
pushf
push
loopw
ret
sub
mov
jg
cmp
mov
scas
sub
negl
faddp
add
lock
clc
push
or
test
push
les
and
divb
es
mov
cmpsl
xchg
jmp
jge
jae
lret
fsubrs
icebp
movsl
iret
movsl
hlt
sub
push
pop
mov
outsl
push
push
scas
js
mov
mov
jmp
clc
ds
clc
mov
or
xchg
xchg
clc
repz
push
inc
shll
pmaxsw
mov
or
dec
lahf
jae
fs
adc
mov
in
cmp
bound
das
je
inc
dec
and
push
fcom
jbe
cmp
push
pop
xchg
pop
cwtl
imull
ja
jmp
dec
xchg
jo
add
add
mov
sub
cmc
mov
sub
mov
in
mov
mov
pop
lods
mov
and
pop
loope
adc
test
sti
in
mov
sarl
and
jl
xchg
inc
sahf
jbe
push
ret
sbb
mov
pop
dec
nop
lea
mov
hlt
in
push
bound
adc
int3
movsb
or
popf
or
dec
jecxz
jmp
mov
sub
cmp
leave
call
or
sbb
xchg
cmp
xchg
dec
add
int
fcmovne
sbb
lahf
mov
jns
mull
pop
fistpl
dec
insl
push
or
push
xor
xchg
inc
cmp
lods
xchg
fmuls
mov
mov
imul
inc
arpl
inc
nop
mov
insb
and
jno
out
inc
mov
mov
repnz
pop
insb
inc
or
mov
out
rcrl
js
adc
jb
outsl
sbb
and
push
inc
dec
pop
iret
lds
mov
loop
xor
inc
lcall
ds
dec
aam
push
data16
fs
sub
xchg
lret
adc
movsl
pop
push
test
jmp
add
scas
negl
add
pop
out
and
daa
ret
xchg
push
cmp
daa
jae
repnz
inc
out
add
fidivs
and
jae
sub
shlb
fcoms
jecxz
pop
jno
add
mov
orb
movsb
movsb
mov
lods
cmpsb
enter
jmp
cmp
adc
mov
lock
jge
sbb
int3
mov
in
loopne
xor
cli
and
jae
popf
je
cmp
ds
in
movsl
push
mov
andb
mov
pushf
mov
aaa
adc
movsl
jne
fimull
xor
rcr
insl
addr16
cmpsl
sub
icebp
insb
call
pop
scas
popf
imul
jbe
jmp
xchg
rcl
cltd
jbe
push
fwait
loope
movsb
andb
ja
mov
cmpsl
add
nop
sahf
cmp
setp
jb
inc
inc
push
fwait
dec
movsb
or
out
test
mov
mov
pop
push
iret
nop
push
repz
notl
sbbb
sub
rolb
loope
or
and
jbe
fisttpll
and
and
outsb
in
in
ljmp
orb
push
test
outsb
mov
ret
fs
and
negl
sbb
cmp
push
pop
lahf
push
insl
lahf
and
ljmp
push
sub
dec
in
lds
fimull
out
jmp
adc
popa
adc
or
aaa
jnp
mov
faddl
cmp
cwtl
push
xchg
cwtl
jno
add
xchg
cwtl
pop
jmp
and
dec
xlat
push
int
push
push
add
jo
inc
fcomip
dec
pop
repnz
sub
push
mov
xchg
shrl
fwait
xchg
cmp
cmp
mov
jge
xchg
sub
pop
cld
inc
mov
lret
adc
hlt
push
or
jnp
imul
push
dec
imul
sub
pushf
sbb
or
daa
or
pop
xchg
xchg
lods
mov
pop
gs
shrl
rolb
loopne
leave
je
sahf
sbb
stc
pop
in
loope
pop
cwtl
outsb
jae
std
push
int3
loop
scas
mov
int3
xchg
mov
int3
mov
sub
inc
aad
das
fpatan
mov
and
lret
sbb
push
jecxz
das
outsl
mov
inc
scas
je
mov
rcrl
bound
int3
lock
pop
fs
xchg
mov
adc
cmp
imul
in
int
fildll
xor
movsb
push
cwtl
repz
test
inc
mov
jb
fidivl
or
and
push
in
icebp
dec
sbb
sub
les
xchg
cmp
xchg
das
gs
sahf
mov
mov
xor
inc
outsb
addr16
inc
out
xchg
outsl
or
xchg
or
jne
loopne
xor
and
ds
shrb
das
pop
in
cs
sti
pop
lea
mov
cmp
jmp
in
outsb
inc
test
sti
xor
lahf
in
cmp
mov
je
fmuls
inc
nop
xchg
jg
inc
aam
mov
in
cmp
mov
jno
cmpb
xor
insl
add
dec
add
xchg
outsl
lret
clc
xchg
mov
pop
sahf
test
loopne
mov
jae
in
cmp
sbb
lock
adc
movsl
push
dec
xor
insb
adc
adc
push
mov
push
add
divb
addr16
std
imul
int
or
adc
inc
out
clc
dec
movsl
sti
sub
mov
leave
addr16
xchg
pop
adc
icebp
imul
lahf
aad
movl
xor
outsl
push
sub
or
iret
mov
lret
add
sub
divb
clc
mov
fldl
inc
mov
push
jbe
ret
add
or
icebp
fisubs
push
jo
cli
dec
pop
push
mov
dec
sar
pop
sarl
adc
lret
das
mov
pusha
xchg
dec
dec
sahf
mov
popf
dec
dec
dec
sbb
cwtl
shr
pop
xchg
xor
cs
add
lcall
enter
daa
movsb
inc
cmp
mov
xor
cltd
flds
and
pop
dec
daa
mov
dec
mov
xor
push
dec
mov
sarb
sahf
mov
insl
xor
mov
mov
push
jge
test
inc
ret
xor
adc
out
jo
arpl
gs
ss
cli
movsl
sti
aam
cli
loopne
xlat
sbb
rcrb
jae
out
notl
push
mulb
sbb
mov
cmp
fldcw
in
pop
in
adc
lock
js
out
daa
out
cltd
cmpsl
jecxz
sti
mov
je
pop
decb
pop
addr16
dec
lret
xchg
inc
cli
push
lret
mov
push
ss
test
stc
or
subl
in
fdivl
sub
or
loopne
xchg
mov
cwtl
bound
and
xchg
fwait
push
repz
push
jl
into
push
addb
add
into
mov
out
xor
push
testl
or
sahf
adc
inc
dec
int3
movsl
pushf
out
rorb
dec
add
dec
popf
lcall
insb
mov
rcl
cltd
and
repz
sub
int3
mov
pop
inc
sti
xorl
push
orb
aaa
movsb
push
mov
push
mov
test
pop
mov
and
push
pusha
aad
sbb
adc
inc
inc
mov
cmp
mov
xchg
dec
insb
out
jno
adc
mov
push
cld
outsb
mov
add
inc
jle
xlat
int3
shlb
test
scas
inc
inc
insb
popf
movsl
dec
stos
loopne
xchg
pusha
lahf
adc
jne
mov
imul
pusha
jnp
jmp
fsubrp
dec
pop
add
jbe
rcll
and
adc
push
fmull
mov
jns
push
jo
mov
bound
xorb
ljmp
cli
mov
out
dec
lahf
or
fwait
mov
xor
or
insb
insb
xor
aam
jmp
add
inc
in
pop
outsb
mov
push
push
and
cmpsl
xor
adc
jmp
popa
in
mov
std
sbb
repz
inc
cmp
xchg
loope
mov
test
sub
mov
dec
ss
dec
mov
rcl
int
fdivrl
fs
ljmp
ret
dec
adc
inc
loopne
pop
mov
cmp
adc
jbe
mov
mov
mov
mov
leave
xchg
mov
in
xchg
fidivs
mov
rsm
cmpsb
outsl
test
popf
hlt
push
mov
cmpsb
jl
sub
sbb
je
inc
leave
and
cmp
out
mov
push
cld
xor
jmp
mov
mov
and
pop
xchg
add
out
adcl
and
and
movsl
out
les
inc
or
mov
mov
inc
aam
int3
mov
aaa
and
push
shufps
shll
jb
test
adc
stos
out
adc
rclb
ret
cltd
xchg
push
mov
add
jle
xchg
dec
lret
arpl
jp
pop
test
jg
call
or
sbb
jle
jle
xlat
dec
adc
aaa
mov
mov
inc
add
jo
cmpsb
lret
or
sahf
mov
out
pop
pop
or
adc
xchg
dec
xchg
push
je
jne
xor
jg
out
and
out
or
rcrl
xchg
jmp
lret
xchg
adc
mov
adc
clc
jb
jl
mov
es
xchg
adc
mov
pusha
aaa
popf
lahf
push
mov
jb
mov
sbb
or
imul
jecxz
icebp
inc
jbe
ret
mov
dec
aas
popa
add
notb
inc
mov
negl
jno
push
pop
mov
roll
push
pushf
dec
int
ja
imul
xchg
pop
lock
xchg
xchg
and
test
add
xor
test
clc
mov
adc
pop
aas
loope
ja
pop
inc
ss
jecxz
fisubs
cmp
push
push
hlt
lea
mov
and
sbb
sti
jl
or
aam
fwait
test
jns
xchg
les
mov
fcompl
xchg
inc
jecxz
ror
inc
out
sahf
scas
aam
ret
lret
testl
das
add
push
daa
push
addr16
inc
stos
int3
adc
js
xchg
pop
mov
and
test
mov
dec
xchg
push
pinsrw
das
fadd
pusha
outsb
push
shr
lods
loop
sbb
cmc
into
daa
clc
rorb
mov
pusha
shl
dec
aaa
push
mov
std
push
mov
mov
gs
test
inc
dec
repnz
fdivrs
jo
jb
pop
cmp
xor
icebp
orl
loop
cmp
cmp
xchg
pop
jl
add
pop
adc
cmp
sbb
jb
and
fidivrs
xchg
hlt
sbb
out
scas
jg
lods
call
loope
rcrl
pop
int
rcll
arpl
lret
outsl
add
jns
cltd
shll
xchg
push
mov
std
push
mov
ds
jbe
fdivrs
icebp
lcall
mov
aas
stc
movsb
pushf
lods
imul
call
jecxz
jae
xchg
imul
adc
fwait
mov
fdivl
cmp
push
dec
into
fadds
push
leave
stc
js
mov
mov
mov
dec
inc
test
push
pusha
xlat
mov
inc
or
mov
mov
xor
xor
cli
fidivl
inc
dec
mov
push
push
pushf
fcmovnb
jge
pop
lock
and
push
jne
les
das
rorl
nop
leave
icebp
popa
test
push
pop
insb
mov
pop
pop
pop
push
lret
stos
adc
jnp
out
clc
loopne
ret
xor
ret
scas
pop
icebp
dec
popf
and
sbb
add
adc
jnp
enter
and
bound
repnz
lods
leave
and
les
and
xor
leave
xor
xor
scas
add
popf
mov
xchg
jbe
dec
mov
pop
dec
xorb
sub
sub
arpl
mov
test
fwait
stos
int
pop
and
xchg
xlat
in
loopne
mov
xor
dec
sarl
pop
out
rcl
push
fcomp
lcall
cmpsb
insl
mov
ljmp
lock
cmp
jmp
fcoml
repz
ss
clc
jnp
shlb
roll
sti
pop
pop
dec
in
stos
fdivrl
push
mov
lret
push
sbb
xor
add
popa
push
sub
lea
mov
mov
cmp
dec
jmp
pop
je
fisubrl
movsl
inc
in
loop
into
mull
jae,pt
inc
xchg
popa
jbe
aas
and
sub
daa
movb
mov
nop
xor
xchg
enter
cltd
xchg
movsb
xchg
hlt
ljmp
add
add
inc
lcall
sbb
cmp
das
in
sarb
xchg
imul
repz
mov
xchg
mov
mov
out
int3
in
iret
push
and
cmc
imul
jg
dec
fadds
mov
imul
or
ja
mov
xor
aam
lea
scas
test
xchg
push
xor
sbb
mov
jmp
in
or
arpl
lret
jne
add
sahf
sub
shlb
loopne
cltd
mov
fstl
jbe
call
cmp
das
and
lcall
pop
adc
insl
hlt
sbb
ja
stos
dec
stc
popa
lods
cmpb
mov
and
js
or
add
sub
or
lahf
sbb
aad
int
outsb
mov
adc
fiaddl
mov
sbb
cmp
push
sub
gs
push
fwait
lea
mov
xchg
cli
adc
ret
xor
mov
mov
aad
adc
popf
into
shl
jl
pop
hlt
iret
in
xchg
int3
out
xor
dec
sub
ljmp
aad
mov
push
adc
std
repnz
pop
inc
ja
jmp
call
into
mov
push
or
test
pop
push
call
push
iret
fwait
imul
xor
dec
stos
lahf
std
mov
sbb
clc
icebp
push
addr16
mov
sbb
pop
inc
out
scas
bound
sbb
fcmovb
je
pop
in
inc
jmp
sub
ljmp
out
pop
andw
pushf
adc
xor
jno
int3
movsl
mov
dec
lea
cwtl
xor
jns
jb
xchg
adc
in
jecxz
loop
jg
std
sbb
cmp
out
shlb
sti
mov
jle
adc
push
outsl
or
nop
jns
xor
pop
movb
loope
test
add
lock
clc
dec
dec
into
movsl
cmpsb
push
pusha
movsl
lahf
aam
dec
add
mov
imul
xchg
xchg
test
fwait
dec
imul
int3
lret
mov
xchg
popf
arpl
inc
xchg
inc
cmp
mov
mov
iret
fstps
inc
mov
jmp
bound
inc
mov
dec
fcomps
mov
and
into
hlt
sbb
ja
fs
add
in
cmp
sbb
mov
jg
sarb
cmp
lahf
xchg
jecxz
mov
pop
xchg
mov
push
or
int
aaa
pop
sbb
adc
neg
aaa
cmpsl
insb
stos
mov
or
sub
mov
loopne
push
push
jbe
lret
mov
add
movsl
pop
rcrb
cmp
cmp
call
sub
notl
and
cmc
xor
testb
dec
test
pop
nop
call
pop
sbb
xchg
dec
rorb
fisttpll
xlat
js
mov
cld
pop
fldl
outsb
push
push
aam
stc
dec
daa
mov
popf
cmp
xchg
call
imul
jno
sbb
lret
leave
dec
add
add
clc
addr16
dec
movsb
incl
neg
outsb
enter
inc
out
and
add
xchg
mov
cltd
jle
jae
cmp
push
pop
and
dec
nop
movsl
xchg
aad
sahf
push
inc
xor
fcmove
dec
std
in
xchg
sbb
test
sbb
sub
pop
push
xchg
xchg
and
js
or
mov
or
mov
sbbl
inc
lods
aam
sbb
pushf
jecxz
and
xchg
ret
clc
sbb
xor
fisubrl
les
adc
outsb
cmp
cmpsl
jne
gs
data16
push
cli
jne
call
loopne
ja
dec
out
test
inc
mov
gs
push
bound
aas
push
lahf
or
fdivrs
jle
mov
push
loopne
mov
mov
sti
jge
enter
cmp
lea
sub
scas
cmp
sbb
pop
std
xlat
xor
xor
das
lret
jns
add
fcompl
cmp
jnp
clc
cltd
sub
sbbb
sbb
stos
mov
xor
xor
add
xchg
push
ljmp
es
sub
mov
ret
sbb
dec
mov
or
jg
fildll
mov
out
mov
mov
fs
mov
outsb
jns
jo
add
adc
xlat
sub
in
adc
mov
dec
rol
fldenv
mov
jns
mov
inc
lcall
aam
sub
adc
cmp
and
and
inc
pop
pop
inc
scas
or
sub
aam
fmull
clc
fwait
push
mov
mov
push
jo
ret
cli
das
xor
pop
jge
cmc
out
rol
mov
cmp
cmp
mov
pop
mov
adc
fsubl
add
mov
mov
push
lock
dec
mov
jle
push
repz
ja
les
sbb
out
mov
dec
fildll
jge
sahf
jns
cmp
ds
xchg
mov
sub
pop
fwait
mov
sub
jnp
mov
cmpsb
pop
cmc
jmp
arpl
lahf
cwtl
outsb
and
or
pop
test
xchg
adc
mov
pop
jmp
bound
mov
repz
jne
mov
xor
inc
mov
js
cmp
adc
cmp
js
push
imul
xor
rcll
call
out
out
xchg
inc
outsl
call
lret
xor
adc
js
lock
lea
je
xchg
adc
int3
lods
in
orl
shll
sub
sub
cmp
and
in
test
pop
and
dec
movsl
je
pop
dec
iret
mov
sub
fdiv
jle
dec
xorb
and
nop
xchg
inc
mov
ss
sub
fs
clc
fs
fstpt
sarb
outsb
mov
push
mov
dec
inc
test
mov
mov
inc
clc
dec
repz
sub
add
xor
pop
push
sbb
je
mov
push
mov
mov
icebp
sub
mov
int
adc
gs
dec
cmp
cli
filds
jne
cli
adc
mov
outsb
jb
cmp
cmpsl
lods
dec
cmpsb
jnp
xchg
mov
and
test
out
pop
test
insl
inc
repz
push
es
jns
ror
or
in
or
fdivs
in
aaa
or
outsb
js,pn
jg
cmp
leave
sub
push
aaa
xchg
xchg
lds
push
fstpt
push
mov
mov
out
cmp
ja
add
pop
shlb
mov
out
dec
push
aam
mov
dec
jns
loop
mov
mov
lret
inc
iret
pop
insl
in
cld
test
dec
out
cmp
shl
pop
gs
dec
xor
ds
fsubrp
je
repz
cmp
add
repz
hlt
loopne
sub
xchg
cmc
mov
loopne
xchg
fnstcw
mov
pop
mull
loop
test
jl
dec
dec
jno
sub
sbb
pop
mov
mov
out
repz
cmp
mov
pusha
fsub
aam
loopne
push
push
add
inc
pop
xchg
adc
adc
mov
jbe
pushf
int
orb
iret
and
addr16
xor
push
mov
cmp
dec
test
adcb
adc
insl
xor
in
int3
push
shlb
sbb
jmp
rcll
fisttpll
movsb
xchg
mov
fldcw
movsl
mov
shl
je
sbb
lahf
sti
xor
in
mov
enter
add
aad
push
lret
dec
add
inc
pop
ds
or
push
std
xchg
sub
push
xor
je
jbe
mov
mov
or
fisttps
jmp
std
adc
je
mulb
sub
pop
fisttpll
je
sub
lods
mov
dec
jnp
or
dec
movsl
pop
aaa
adc
adc
inc
xchg
outsl
add
adc
es
or
xor
add
sbb
lods
mul
lock
lcall
pop
sbb
add
sarl
cmpsl
daa
dec
scas
push
pop
mov
push
ror
inc
pop
movsb
jne
cltd
jae
xchg
hlt
sub
jbe
mov
jno
mov
fsubl
test
pop
add
jnp
mov
push
or
and
icebp
addr16
lods
dec
mov
cwtl
js
lahf
sub
mov
sub
sbb
pop
out
push
dec
push
and
mov
stos
sub
ret
or
push
sbb
adc
shll
mov
dec
cli
test
sahf
mov
cmpsl
leave
dec
cmp
pop
lret
int
or
test
rcl
daa
xor
test
test
sbb
enter
push
mov
in
inc
sbb
or
jmp
xchg
rcr
fcomi
cld
inc
fs
add
cmp
xor
rcll
dec
sub
stos
add
test
cld
mov
add
jns
rcr
scas
fisubrs
jl
imul
cmpsl
and
ljmp
mov
mov
cmp
mov
ss
push
mov
cmp
bound
outsl
jne
or
and
xor
pop
mov
inc
xchg
sarl
out
push
jg
outsl
dec
add
inc
insb
push
faddl
mov
int3
xor
test
pop
testb
pusha
inc
pusha
xchg
lods
mov
movsb
cmpsb
fistpl
sbb
imul
inc
or
pop
cwtl
mov
xchg
ret
sbb
repz
mov
scas
xchg
lea
mov
pushf
popf
rcr
faddl
out
repnz
add
xlat
rorb
dec
int3
insl
lcall
jle
inc
add
xchg
mov
loopne
in
aas
mov
arpl
shlb
sub
xchg
push
sbb
push
pushf
rcr
dec
arpl
fisubrs
test
cld
xor
jbe
add
adc
stc
insl
pop
fdivrl
cltd
add
push
lcall
dec
add
test
sbb
repz
and
xor
fisubrl
ss
insl
jb
mov
ds
push
xchg
movsl
aad
mov
lcall
test
xor
mov
aam
dec
scas
mov
js
and
fisubl
pushf
out
out
mov
pop
sbbb
jp
push
xchg
jmp
mov
sbb
fists
in
dec
and
jb
sbb
cmp
sbb
ss
jno
pop
sbb
inc
movsb
cmp
xchg
in
cmp
or
mov
subl
aad
mov
in
xor
ja
pop
jnp
lahf
es
in
or
or
push
cmp
pop
inc
call
mov
fdivrs
imul
mov
daa
shr
sarb
jecxz
in
setno
xor
jbe
sub
loope
ret
test
movsl
adcb
pop
out
add
pop
std
imulb
or
pushf
xor
pop
rcrl
mov
testb
lods
cmp
dec
fs
lods
sub
adc
or
jge
lock
nop
fdivl
int3
aas
loop
xchg
dec
fisubs
inc
adc
and
ds
dec
inc
add
int
xchg
inc
cmpsl
sti
add
add
jl
mov
adc
dec
fwait
mov
mov
inc
mov
andl
clc
fisttpl
add
xchg
repnz
js
xchg
adc
aaa
sub
inc
loope
mov
test
add
ja
int
idivl
dec
add
mov
in
add
cwtl
cmp
repnz
daa
jno
cmp
xchg
sti
push
lods
pop
xor
mov
inc
pminub
sti
ret
dec
jl
fbstp
mov
inc
adc
cli
xchg
inc
adc
mov
dec
jecxz
js
sub
xchg
mov
in
outsb
sbbl
mov
inc
adc
ljmp
loopne
cltd
in
mov
out
cmp
lahf
gs
int
dec
cmpsl
cmpsl
pop
test
sbb
ror
adc
sti
xchg
les
dec
xchg
ja
push
shlb
push
sub
cmpsb
dec
cmc
les
pop
ss
mov
pusha
cmc
push
sbb
jp
jb
dec
out
jns
lea
jbe
push
test
out
stos
mov
cld
scas
cmp
xchg
arpl
xchg
aam
dec
xor
sbb
js
cmp
ret
fisttpll
adc
shlb
jg
xor
xor
push
add
pop
addr16
cmp
xchg
std
pop
ss
gs
cltd
mov
mov
and
push
jp
sub
les
or
movsb
pop
cli
outsl
test
adc
mov
in
inc
mov
ficoml
xor
xchg
dec
pop
lods
fiadds
cmc
add
sbbl
sbbb
jo
mov
out
inc
inc
xor
cmp
insb
lds
push
push
fdiv
test
xor
repnz
mov
inc
xor
xorb
mov
cltd
jne
hlt
popf
mov
cmp
adc
sarb
pop
outsb
and
add
jp
jnp
and
sub
pop
imul
scas
shl
subb
in
sahf
dec
lret
lret
xchg
sub
enter
inc
mov
jns
mov
mov
pop
adc
pop
mov
sbb
sub
and
out
lods
fwait
inc
mov
ss
imul
addb
mov
sub
aad
add
jae
ret
popf
lods
std
cmpsb
sbb
xchg
adc
jnp
paddusb
repnz
and
cmp
leave
sub
adc
test
mov
popa
repnz
int
jge
insb
jae
mov
and
pop
ss
push
scas
or
xor
jecxz
dec
rcl
inc
pop
imul
dec
mov
bound
xchg
and
imul
addr16
jp
mov
push
cmovle
mov
dec
adc
xlat
testb
je
mov
pop
adc
dec
pusha
adc
push
cmc
rcll
lods
or
dec
jmp
fcompl
sub
jae
ret
push
vpunpcklqdq
dec
jl
cmp
bts
mov
ss
std
push
mov
sub
push
ss
scas
fistl
leave
jl
not
xchg
xor
ret
hlt
add
data16
cs
dec
jns
mov
cltd
cli
fcomip
adc
pop
mov
jl
sub
sbb
nop
ja
cwtl
pop
cli
loope
inc
jle
pop
dec
aad
loop
add
outsb
test
cmpsb
mov
bound
xor
mov
jnp
call
mov
jb
int
les
push
adc
or
scas
sub
je
or
jg
sbb
push
jne
outsb
xor
stc
insl
loopne
and
jl
mov
push
std
push
xorl
push
xchg
adcb
out
ds
nop
jecxz
out
jo
lcall
jb
sbb
add
lods
scas
mov
jne
pop
cmc
mov
adc
push
lods
lea
fcmove
cltd
fs
mov
xchg
push
mov
cli
int3
mov
push
ret
movsb
in
xchg
xchg
ja
into
mov
cmpsl
push
push
jns
mov
push
push
or
ss
test
int
fs
loope
lods
shl
inc
inc
js
or
cmp
jecxz
cmp
mov
or
mov
in
in
xchg
lds
add
dec
jbe
mov
or
imul
push
popa
sub
ret
mov
subl
notb
fmull
push
dec
ret
sub
inc
push
jns
inc
push
sub
xor
imul
xchg
filds
mov
push
add
lock
mov
ja
fbstp
stc
mulb
testl
add
cmp
and
xchg
mov
add
test
je
mov
loop
sub
push
mov
mov
push
adc
lods
mov
sahf
cmpsl
xor
mov
sbb
insl
add
nop
mov
movsb
add
inc
xchg
inc
mov
es
stos
fs
rcl
pushf
fstps
jmp
sbb
lcall
mov
icebp
lahf
inc
mov
jo
stos
add
sub
mov
inc
leave
or
pop
lea
daa
jecxz
pop
pop
sbb
pop
xor
stos
xor
xlat
push
inc
out
xor
das
daa
cli
sub
cmp
scas
nop
jno
adc
xchg
popf
push
pusha
push
sbb
loope
xchg
add
ljmp
pop
push
add
mov
sub
mov
mov
sbb
sub
mov
std
push
mov
mov
inc
movsl
xchg
push
mov
xor
jmp
dec
aaa
sub
xchg
pop
and
and
packssdw
mov
enter
lret
insb
movsb
scas
pop
jbe
stos
sbb
std
cmpsl
addr16
pop
mov
dec
imul
lods
cld
add
fidivrs
popa
lock
ds
addl
test
scas
cmpsb
idiv
push
repnz
aam
or
dec
not
ret
add
fbld
cmc
inc
subb
pop
lods
sub
loop
in
jo
je
stc
pop
aam
lret
dec
outsl
adc
dec
adc
fisubrs
adc
push
mov
sysexit
mov
dec
jno
or
cli
int3
arpl
pop
cmp
inc
jno
jne
lret
cwtl
rclb
insb
mov
jl
ret
inc
fildl
outsb
sub
fadd
inc
pop
xlat
mov
addl
lea
xor
shlb
cmpsb
cmpsl
out
cmpsl
cld
or
rclb
inc
in
stos
out
jle
cwtl
sahf
aaa
push
mov
pop
sbb
call
xchg
adc
or
sbb
mov
jb
dec
in
divb
push
test
adc
pop
push
pop
inc
jge
jbe
or
mov
nop
pop
adc
movsb
cmpb
shl
out
jp
gs
xchg
and
push
pop
push
xor
xor
xor
mov
mov
test
call
clc
mov
and
jl
and
iret
dec
mov
adc
daa
repnz
and
roll
jle
cmpsb
push
mov
inc
xchg
add
and
push
xlat
push
xchg
pop
fisttpl
sbb
shlb
filds
and
mov
je,pn
and
loope
inc
push
aad
stc
or
cmp
test
push
and
fadd
cmc
xlat
pusha
pop
cmp
rolb
rcl
push
lret
in
and
inc
adc
mov
pusha
stc
fwait
cmpsl
in
mov
int
mov
out
jne
inc
fimull
jno
btr
and
xor
in
test
dec
mov
push
loope
add
push
dec
int
jns
or
jg
adc
sbb
inc
call
mov
pop
mov
mov
push
dec
out
cmp
sub
test
add
jo
int3
mov
mov
insb
mov
hlt
stos
movb
fistpl
mov
pop
cmpsl
addl
jo
and
push
mov
jmp
mov
dec
lret
mov
add
cli
das
mov
xchg
fsubs
mov
and
cmpl
loopne
inc
cld
mov
dec
xorb
push
imul
and
mov
sbb
stos
rcrl
test
mov
imul
dec
arpl
and
out
jl
div
mov
xchg
fstpl
adc
arpl
mov
dec
dec
shll
cmp
div
out
mov
xor
fcompl
ljmp
cmp
xchg
push
mov
mov
mov
aam
push
push
dec
add
dec
cmp
pop
push
mov
adc
int3
add
adc
ret
mov
inc
pop
adc
xchg
cmp
dec
mov
adc
iret
rorb
jl
pop
popf
cwtl
loope
enter
pop
add
test
cld
dec
add
ds
mov
jae
lret
icebp
dec
mov
jmp
ja
xchg
int
cmp
ret
mov
sbb
jb
sbb
cmpsl
xchg
fimuls
mov
adc
jo
das
inc
jo
jp
lds
sub
pop
push
jae
push
jmp
dec
in
inc
lods
xchg
push
inc
jg
je
push
lods
sbb
push
test
pop
es
cli
mov
and
pop
vmovaps
sti
mov
pop
dec
inc
pop
ret
mov
sbb
dec
push
xor
push
cwtl
ud2
repz
call
sbb
add
pop
or
cmp
lea
mov
dec
sbb
dec
pop
jg
aas
insl
scas
jecxz
sbbb
adc
sub
mov
lret
and
push
rcrl
sarb
jns
iret
cmp
inc
sbb
or
cmpsl
jge
cmp
cmc
pop
cli
cs
adc
jae
push
dec
sbb
mov
xor
xchg
ds
mov
and
ja
jb
loopne
cwtl
into
lea
fs
sub
ja
mov
pushf
fsts
incb
sbb
lds
jge
or
loopne
push
xchg
mov
pop
xorl
jnp
mov
cmp
mov
movsb
mov
add
jl
xchg
nop
cmpl
xor
je
inc
pop
xchg
push
shrl
mov
mov
fwait
orb
cmpsl
mov
loope
xor
sub
or
arpl
lods
adc
insl
mov
and
movsb
shlb
adc
push
add
adc
xchg
inc
mov
xchg
rolb
fwait
mov
icebp
rcll
cmpsl
lcall
inc
push
std
int3
ds
mov
add
into
jne
add
cltd
mov
push
roll
mov
lea
push
adc
cmp
mov
das
lahf
pop
or
movsl
ss
rcrl
pop
mov
cli
cmp
mov
gs
xlat
fdiv
scas
inc
adc
and
lods
fcompl
mov
pop
pop
roll
pop
pop
sbb
add
rorl
xchg
dec
jle
icebp
cmp
sbb
sub
cmp
pop
sbb
mov
dec
mov
or
mov
int
xchg
stc
pop
push
jecxz
mov
ret
stc
test
sbb
inc
cmp
sahf
lret
xchg
dec
out
jle
std
cmp
mov
stos
in
xor
pop
int
cmp
inc
addb
in
add
ficompl
rcll
fwait
and
dec
dec
repz
xchg
icebp
jne
lock
xorb
stc
aad
cmp
stos
and
roll
fadd
adc
call
cmp
ja
sti
jo
inc
negb
mov
and
add
dec
sbb
call
cmp
outsb
in
cwtl
dec
jle
cmc
dec
clc
pop
xchg
int
or
sub
mov
cmp
shr
jnp
xchg
dec
out
imul
aas
push
enter
or
test
xor
mov
imul
popf
lods
sbb
outsl
outsl
data16
push
dec
outsl
iret
push
xorb
mov
mov
xor
sub
out
jo
adc
or
inc
repz
jns
adc
lock
ficoml
popf
xor
bound
nop
lahf
in
push
insl
adc
loop
mov
popf
lods
aad
or
jl
ss
or
jmp
enter
imul
dec
cmp
mov
and
mov
cmpsl
jle
stc
fcmovnbe
add
dec
jl
insb
es
or
lods
inc
xchg
outsb
imul
sti
push
mov
push
lret
and
sbb
fidivrs
cmc
lret
shrb
cmp
fistpl
stos
sti
jecxz
add
or
adc
fcoms
mov
lret
and
lea
xor
mov
shll
push
ds
mov
imul
movsb
and
cwtl
addr16
hlt
sub
std
xor
xor
icebp
inc
leave
inc
andl
pop
cltd
cmpsl
aam
in
adc
mov
add
js
inc
stos
or
pop
movsb
aas
icebp
loopne
mov
jo
stc
jecxz,pn
enter
mov
popf
insl
aas
xor
mov
outsl
sub
in
cmc
push
jne
mov
sti
flds
jns
add
adc
lea
add
int3
dec
mov
push
outsl
push
loop
adc
repz
lods
dec
push
sbb
aad
mov
inc
adc
push
xor
stos
push
push
rolb
ljmp
mov
adc
lds
test
pop
sub
jge
adc
and
clc
mov
fsts
popf
rorl
xor
mov
mov
into
inc
push
or
aam
jo
fs
loopne
xchg
popf
outsb
loope
jns
pop
lods
sbb
mov
dec
sub
xlat
aad
insl
xlat
mov
mov
jae
xchg
aaa
cmp
xchg
dec
add
pop
fcompl
mov
rclb
aam
mov
shrl
je
ret
movsl
xor
add
push
in
xor
push
pop
bound
mov
mov
jg
dec
pop
loope
mov
dec
sbb
push
call
cmp
fs
jo
dec
jne
idiv
pop
sub
jle
adc
jecxz
dec
addr16
sbb
xchg
fidivrl
pop
and
push
or
shll
pop
push
les
cld
xor
mov
icebp
jb
mov
adc
jb
in
lods
push
call
insb
and
rcrb
mov
mov
mull
inc
ss
add
add
mov
sbb
and
loop
mov
mov
jnp
mov
out
rcrb
cmpsb
add
test
dec
rolb
jbe
mov
cmp
mov
inc
movsb
or
sub
dec
xchg
push
jp
mov
add
adc
mov
cs
mov
cmp
idivb
xor
sub
aad
or
sahf
ss
pop
in
xlat
aad
mov
in
dec
xchg
ljmp
outsb
xchg
mov
sub
xchg
push
mov
adc
jg
add
xchg
xchg
pop
xchg
mov
add
inc
jecxz
push
dec
or
jge
xchg
cs
inc
jecxz
or
cmp
mov
dec
dec
lods
or
arpl
movsb
cmc
test
sub
dec
faddl
notb
adc
arpl
cli
clc
in
jecxz
fbstp
pop
cmc
mov
repnz
mov
in
mulb
int
pop
and
mov
movl
mov
ja
aas
xor
inc
leave
jo
movsb
xlat
mov
sub
sbb
push
mov
aam
jnp
pop
push
rol
xor
adcb
cmp
xor
std
xor
push
lret
fstpl
push
or
outsb
je
mov
lcall
mov
test
adc
mov
mov
jb
inc
insl
subl
sub
test
mov
cmp
pop
xchg
and
std
xchg
xchg
pop
xor
pop
push
fnsave
lea
enter
icebp
sbb
clc
fnstcw
test
ljmp
aaa
sub
into
pop
xchg
cli
add
call
adc
mov
lret
mov
cwtl
bound
push
js
add
std
lods
jle
dec
or
jo
sbb
ds
ds
cmpsl
aad
loop
outsb
sub
leave
adc
scas
inc
ss
mov
fistl
das
data16
cmp
and
sahf
adc
addr16
imul
jbe
lcall
popf
mov
fnstsw
adc
loope
out
and
int
sbb
pop
stc
inc
and
xlat
adc
jl
dec
dec
mov
bound
cmp
or
fldl
jg
loope
out
js
mov
jmp
cmc
test
cmp
mov
jmp
test
xor
xchg
jg
xchg
mov
in
out
inc
sbb
in
call
jg
add
call
in
pop
jp
cltd
adc
out
inc
in
lods
imul
imul
inc
in
lock
cltd
movsl
test
stos
lcall
sbb
dec
lea
xor
imul
xchg
jo
mov
out
jl
jge
popl
movl
sarb
xchg
xorb
aas
xor
mov
notb
sub
pop
pop
pop
loop
cmp
stc
cmp
mov
test
mov
xor
sti
fisubrl
cwtl
xor
mov
das
and
or
pop
sti
in
int3
xchg
test
pop
cld
out
jb
loope
sub
cwtl
sbb
mov
and
jge
sub
push
mov
pop
or
repz
mov
insl
xchg
pusha
out
sbb
jno
lds
iret
aaa
loope
inc
push
insl
movsb
cmpsl
and
mov
jl
lods
ljmp
sub
outsl
add
pop
cs
dec
jne
jge
testb
ds
idiv
add
add
push
dec
jge
dec
cmpsl
ficoml
lods
or
lods
cmp
dec
push
or
jle
xchg
adcb
cmp
add
adcl
daa
test
mov
jbe
xor
jne
inc
cmpsb
cmpsl
xor
test
or
mov
xor
in
sahf
adc
stc
aas
xor
sub
addr16
repz
stos
add
add
or
jo
outsl
aas
mov
enter
dec
sbb
insb
call
pop
subb
sarl
xchg
in
sub
xchg
push
or
arpl
outsb
add
stos
daa
cmpsb
mov
das
sub
pop
hlt
sub
sahf
cmp
fsubrs
mov
idivb
pop
fnsave
arpl
sub
xor
mov
pop
xchg
je
leave
test
mov
push
arpl
xchg
ds
xor
xor
movsl
adc
and
xor
stos
lods
imul
fnstcw
and
pop
or
cs
jle
or
xchg
les
mov
out
clc
in
insl
mov
daa
int
push
lret
lds
clc
push
push
dec
inc
or
pop
inc
fwait
lods
push
into
push
cmp
cmp
adcb
sbb
mov
pop
mov
jg
xchg
nop
loopne
mov
pop
inc
out
pop
out
repz
aad
mov
rolb
mov
or
push
xchg
inc
fcom
dec
pop
out
lods
jne
jmp
sbb
mov
xchg
cwtl
test
jnp
mov
xchg
jl
pop
push
xchg
push
or
xchg
rorb
xor
or
popf
in
mov
test
cwtl
mov
arpl
orl
adc
test
cmc
shrl
das
dec
lods
aam
mov
fcmovb
mov
js
xlat
mov
sbb
fsubr
xor
daa
adcl
pop
pop
out
outsb
jno
or
dec
js
add
mov
loop
sahf
adcb
xor
pushf
mov
cmp
xchg
jp
dec
mov
inc
inc
mov
loop
adcl
test
dec
xchg
push
pusha
mov
add
neg
xor
xor
repz
aam
dec
xchg
add
fildll
fsubrl
dec
bound
mov
xor
pop
sbb
mov
push
scas
in
fstpt
stos
out
lcall
cmp
add
push
loopne
dec
inc
pop
pop
out
scas
clc
cld
adc
lock
mov
stc
inc
loop
pop
mov
pop
adc
fidivl
icebp
test
test
aad
push
adc
sub
push
mov
xchg
hlt
call
mov
fisubrl
push
test
repz
mov
clc
loopne
mov
je
xor
and
fimull
mov
repnz
push
adc
in
negb
ja
dec
mov
xchg
je
outsl
jb
adc
add
sub
add
adc
fcmove
mov
pop
js
outsb
xchg
cmp
and
pop
mov
mov
pop
movsb
push
or
mov
jl
push
les
cmp
in
ffreep
lea
loope
sbb
mov
xor
jle
stos
imul
add
lods
sbb
sub
repnz
mov
lods
sbb
sub
jo
iret
daa
inc
sub
ret
imulb
mov
addb
pop
cmp
cmpsb
pop
mov
rclb
push
outsl
inc
or
jae
and
xchg
ret
bound
or
not
test
cs
pop
sahf
inc
sbb
ds
or
lahf
out
jb
mov
add
mov
inc
bound
xchg
out
push
scas
add
sub
mov
jae
push
mov
adc
push
mov
xor
das
adc
inc
leave
adc
lahf
imul
in
pusha
stos
mov
mov
jmp
lods
xchg
mov
xlat
cmp
mov
out
sub
pop
cmp
mov
mov
and
or
movsb
movsl
push
out
add
ds
hlt
sahf
mov
adc
mov
nop
or
adc
xor
std
into
and
mov
int
inc
cmp
pushf
inc
imul
leave
xor
inc
clc
push
sahf
idivl
xchg
shll
inc
lea
xchg
xchg
xor
es
cmp
dec
add
or
cld
iret
flds
imul
outsb
push
mov
mov
cmp
jl
test
sub
sti
fcmovnb
psrld
popf
call
add
xor
ret
push
dec
call
cltd
inc
cmova
mov
daa
add
jle
xlat
sub
cmp
imul
shl
into
out
jae
xlat
flds
push
push
imul
jnp
ss
fldl
stc
faddl
js
adc
cmpsb
jne
nop
inc
mov
rolb
dec
pushf
popf
sub
test
add
add
nop
orb
jb
pushf
and
cmp
adc
mov
out
xchg
xchg
aas
mov
dec
jnp
mov
or
or
das
jbe
mov
addr16
rcrb
mov
dec
xchg
leave
jnp
insb
or
mov
xchg
mov
test
and
mov
insl
jle
xchg
pmaxub
mov
adc
push
push
into
add
test
subb
ret
add
popa
jl
jne
lahf
and
fisubrs
add
add
sti
and
stos
add
imul
enter
lds
ficomps
xor
adc
mov
lds
cli
les
popf
jg
lret
sub
cmp
pop
mov
mov
je
or
or
inc
cli
jp
rol
les
popf
xchg
sbb
outsb
jno
push
lods
and
dec
cmc
inc
cmp
dec
dec
psubusw
cmp
cld
or
jae
loope
sub
xor
mov
mov
sbb
and
cltd
int
lahf
insl
cs
mov
dec
fidivs
fildll
inc
mov
lock
pop
shll
xchg
adc
cmp
adc
or
ror
sbb
daa
sub
ljmp
and
adc
mov
xchg
adc
out
mov
mov
and
mov
mov
jno
lds
mov
lods
xchg
fxch
jae,pt
dec
hlt
mov
ret
sahf
xchg
pop
gs
test
out
ret
push
clc
lret
jge
cmc
mov
push
pop
xchg
cmp
test
mov
testl
push
ror
xor
adc
ja
xor
test
dec
fstpt
and
clc
jne
pop
je
mov
xchg
mov
push
inc
push
aaa
lcall
xchg
cmpsl
push
lahf
stos
add
int
xor
mov
inc
cmp
in
outsl
imull
insl
daa
lret
push
cmpsl
inc
xchg
jne
pushf
xlat
pushf
inc
cmp
xlat
mov
mov
mov
jns
sbb
jno
mov
jnp
lret
jo
es
push
or
sbb
sbb
pop
jnp
pop
int3
out
and
pop
pushf
mov
inc
xor
or
sub
push
out
cltd
inc
shlb
jae
add
test
mov
mov
fsubrl
dec
sbb
xchg
int3
xchg
bts
mov
stos
repz
rcl
sbb
scas
mov
enter
das
or
push
aaa
scas
aaa
adc
cmpsb
fstpt
sbb
fcompl
xor
add
jl
add
and
xchg
push
dec
jnp
les
xlat
ss
sar
mov
push
adc
icebp
dec
lahf
sbb
mov
inc
mov
mov
inc
pop
mov
inc
ficompl
push
mov
jmp
xor
push
js
aaa
je
push
xor
fdivrs
call
or
nop
xchg
xchg
pop
sub
and
sub
adc
push
js
or
xchg
xor
insb
push
cli
ss
sub
sbb
clc
xor
push
push
pop
sbb
push
xchg
mov
in
enter
daa
faddl
mov
or
cwtl
fsubs
mov
negl
movb
mov
inc
movsl
or
cmp
mov
test
jp
fwait
sub
aas
or
bnd
andl
cli
and
fcmovu
popf
mov
mov
idiv
xor
test
mov
repz
es
dec
lds
and
dec
lods
push
popa
ljmp
inc
sarb
add
mov
jmp
adc
testl
mov
stos
out
mov
rol
imul
push
movsl
lock
mov
push
sbb
xchg
add
int3
fs
mov
dec
jl
xchg
in
cmpl
sub
loop
icebp
mov
mov
xorb
outsl
mov
ljmp
dec
jg
mov
push
movb
add
insl
lock
repz
jne
mov
lock
xor
rcr
push
pop
and
mov
push
and
inc
gs
cmp
xor
subb
dec
pop
cld
jbe
shll
movsl
js
sub
cmp
pop
inc
lea
add
test
push
lret
push
std
inc
xchg
stos
sahf
dec
popf
sub
mov
cltd
xor
inc
fsubrp
rorb
inc
clc
jge
push
push
scas
stos
push
scas
std
ret
insl
sbb
js
inc
fwait
and
lods
xchg
sub
lret
lods
mov
mov
imul
lret
push
push
jo
dec
daa
divl
repz
insl
xchg
and
mov
push
or
cmp
es
cmc
cmp
xor
push
jge
sbb
pop
sub
int3
dec
movb
out
and
das
and
jb
cmpsl
scas
dec
jge
fildll
xchg
fstps
iret
fdivl
mov
dec
lret
xchg
mov
call
rcr
insl
scas
stos
orb
pop
aam
push
out
push
push
push
push
rorl
in
cmp
xchg
popf
ljmp
xor
pop
xchg
insb
not
xchg
jne
es
add
repz
cwtl
scas
movsl
lea
mov
test
ds
or
in
adc
xchg
stos
xlat
xchg
pop
inc
xchg
dec
test
dec
imul
pop
fmulp
sbb
and
loope
add
and
dec
aas
add
inc
push
mov
and
cli
nop
daa
ja
lock
mov
inc
sbb
inc
mov
adc
and
pop
or
mov
scas
pop
lds
or
push
adc
fadds
stos
lods
gs
repz
into
lcall
mov
les
fcomp
lahf
icebp
push
pop
sub
push
xor
iret
daa
test
xchg
pusha
sahf
ja
add
fcompl
and
mov
enter
xor
popf
mov
push
pop
out
lcall
cmp
in
filds
daa
mov
adc
xor
push
fists
divl
and
addb
shll
dec
push
add
insl
neg
sbb
push
insb
mov
leave
imul
lods
lods
cmc
inc
dec
adc
vcomiss
jns
xor
je
scas
inc
add
xor
cmc
in
add
cmpsb
push
xchg
push
pop
pop
sub
add
adc
sti
sub
xchg
xchg
push
adc
lcall
es
and
xor
outsl
call
scas
in
test
addr16
dec
nop
lock
das
rcl
out
packsswb
lahf
leave
mov
bound
and
imul
stc
jne
sbb
sub
arpl
push
pop
leave
jl
dec
ljmp
jecxz
sarl
cmpl
js
sbb
or
cwtl
and
insb
mov
xor
jecxz
push
mov
xor
movsl
fistps
rcll
scas
jle,pn
sbb
bound
mov
enter
aas
or
push
nop
popa
xlat
cltd
xor
pop
cmpsb
mov
or
int
sbb
push
jns
pop
pop
inc
dec
int
mov
jge
jno
jno
xabort
sub
push
sarl
movsl
roll
sbb
cs
dec
sub
cmp
outsb
fwait
lahf
test
xchg
mov
sahf
or
mov
insb
mov
das
sbb
mov
mov
xlat
or
fldcw
jno
jecxz
jmp
xor
mov
inc
ljmp
pop
dec
xor
or
dec
jmp
xlat
mov
push
pop
sub
xchg
xchg
outsb
aaa
mov
and
sbb
lea
jg
test
mov
pop
addb
or
push
lods
push
arpl
jbe
imul
fnsave
cltd
icebp
lds
ja
xlat
mov
bound
ja
mov
mov
fisttps
or
or
stc
adc
xchg
ds
push
loope
mov
adc
fs
mov
in
jne
adc
jecxz
xchg
lea
xchg
je
imul
iret
push
test
in
jbe
jns
int3
pushf
xor
ljmp
lds
insb
mov
add
out
ds
add
dec
sti
leave
inc
push
ljmp
add
lcall
pop
iret
lea
add
xchg
scas
and
hlt
pop
cmp
faddp
mov
out
outsb
mov
jp
dec
fnstcw
lds
movsl
and
mov
sub
push
subb
xchg
aas
or
scas
lret
cmp
loopne
inc
cmp
arpl
cld
mov
mov
in
and
ret
arpl
stos
sahf
jecxz
imul
or
dec
out
popf
outsl
push
int3
or
lock
movsl
mov
bound
arpl
add
jecxz
imul
imul
sbb
pop
sub
fcmovnu
dec
stos
sarl
mov
and
lock
inc
popf
mov
outsl
cmp
fsubrs
jae
cmp
mov
clc
inc
icebp
shl
mov
xchg
loope
xor
stc
pop
stos
or
nop
cmp
add
pop
aaa
sbbl
mov
ds
xor
fcomps
rolb
inc
mov
inc
sub
sub
sbb
jecxz
mov
call
mov
ficoms
call
xchg
add
dec
mov
jecxz
adc
sub
outsb
sahf
lret
ds
movb
push
pushf
gs
aas
cmp
jbe
mov
xor
xchg
fsubrl
dec
or
movsl
sbb
mov
push
dec
inc
outsl
and
push
sbb
and
pop
xchg
adc
rcr
rolb
es
test
inc
mov
std
mov
fwait
sub
jae
xor
mov
aad
or
push
call
xor
ss
popa
jecxz
sub
push
mov
adc
jae
push
fcomps
test
sti
push
js
xchg
inc
cmpb
mov
push
rcrl
lret
cmpsl
cli
icebp
pop
iret
arpl
push
jae
loopne
loopne
adc
add
push
subb
aas
pop
push
push
or
stos
in
inc
sarl
jnp
mov
xchg
cmp
lea
or
dec
leave
dec
bound
push
aas
out
std
stos
sub
cld
pusha
xchg
xchg
roll
xchg
stos
inc
das
pop
push
shrl
es
add
fmuls
pop
push
sub
daa
ret
insb
add
and
adc
jl
inc
push
fstps
pop
into
les
xchg
arpl
cs
cmpsl
jle
test
daa
notl
stos
xor
daa
aaa
out
ret
mov
addr16
ret
roll
sahf
sub
jae
les
sbb
fwait
push
mov
dec
and
je
xchg
lahf
pop
cld
cmp
dec
or
out
pop
xor
dec
cs
test
adc
aaa
pop
in
xchg
inc
out
nop
mov
xchg
dec
xor
repz
inc
push
inc
cmp
int3
les
loopne
push
xor
jg
sub
jno
sub
mov
mov
push
mov
push
cmp
movsb
dec
stos
cmp
adc
scas
cmpsl
jmp
out
xchg
lret
mov
sbb
jp
jns
scas
dec
sti
out
fstpt
data16
lods
fiadds
mov
and
mov
cltd
cltd
dec
lret
or
sub
shrl
mov
xchg
xchg
pop
fsts
jae
sub
cmpsb
lock
mov
inc
jno
out
or
in
pop
push
push
adc
dec
inc
scas
sbb
popa
cmp
imul
mov
inc
jb
notl
mov
pop
jnp
in
mov
push
cmp
in
push
inc
mov
jo
ja
cwtl
cmp
or
test
fistpll
jno
xchg
push
mov
dec
jmp
inc
dec
and
inc
mov
rol
add
arpl
mov
mov
sbb
inc
into
fnstenv
lahf
xchg
bndstx
addl
pop
je
pop
pop
popf
push
incb
xlat
dec
xlat
pop
test
mov
aam
xor
loope
mov
ja
and
rcrb
lahf
lods
bound
enter
push
fbstp
xchg
adc
shl
ret
subl
pop
popa
insb
arpl
inc
ljmp
xchg
jmp
mov
movsl
push
test
data16
or
es
ja
dec
lret
stos
pop
xchg
cwtl
stos
fstpl
mov
mov
hlt
xchg
xor
jg
cmp
mov
int3
popa
sub
pop
inc
cltd
mov
adc
mov
jns
sub
lahf
pop
sti
pop
jmp
jno
out
fwait
ss
sbb
inc
subl
in
or
fisttps
cmpsl
int
xabort
jns
adc
sub
mov
and
inc
out
cmpsb
ja
shll
aaa
mov
xchg
rcl
shll
jg
and
jge
push
sbb
or
cmp
lods
jp
cs
mov
dec
dec
fisubs
scas
js
test
cs
sar
rclb
xor
inc
pop
xchg
daa
mov
xchg
aaa
jbe
and
jecxz
xchg
add
hlt
insl
scas
inc
gs
pop
mov
cmp
jecxz
in
adc
add
loop
aad
sub
and
sub
jg
test
xchg
sub
add
dec
cmp
fs
xor
stos
xor
jp
mov
sbb
out
cmpl
add
jmp
popa
iret
dec
add
push
repz
jge
xor
adc
jns
add
dec
inc
call
and
mov
test
fs
repz
movsb
outsl
cmp
ja
dec
mov
xor
mov
in
inc
movsb
je
lcall
push
jbe
xchg
insl
mov
popa
mov
ljmp
add
pop
cmp
out
and
mov
dec
jb
movsb
inc
ret
pop
adc
xor
mov
fmul
dec
rorb
hlt
dec
daa
fimull
stc
sbb
out
push
ds
mov
push
jns
dec
sbb
insl
ffreep
xchg
inc
fimull
hlt
repz
mov
pop
cmpsb
pop
add
mov
mov
scas
mov
jnp
mov
jb
adc
icebp
outsb
push
stos
jbe
push
cmpb
bound
aad
clc
je
insb
fcmovb
mov
xchg
mov
inc
push
mov
in
dec
mov
xchg
pop
int
pusha
mov
mov
mov
jno
push
sbbl
inc
iret
fadds
pusha
xchg
lods
scas
jp
dec
pusha
and
nop
mov
clc
aaa
xchg
xor
mov
fidivl
outsb
fwait
es
jbe
push
mov
adcb
lret
test
std
andb
lret
pop
and
push
idivl
fidivl
and
xchg
lods
aaa
mov
mov
inc
pop
fdivrl
inc
pop
inc
fsts
mov
inc
test
lea
mulb
cmpl
and
movsl
popa
jne
mov
insl
hlt
push
push
jne
shl
add
fcomps
or
pop
push
test
jnp
sbb
mov
xlat
xchg
xor
mov
cld
jno
insl
adc
add
scas
pop
pusha
fisubl
loope
pop
out
push
add
dec
pop
ret
ds
inc
dec
adc
scas
pop
mov
scas
lock
stos
iret
xor
sbb
data16
ficoml
add
inc
mov
loopne
push
xor
pop
mov
bound
popl
stc
mov
data16
ja
mov
pop
cld
sub
dec
pop
push
cmpsl
enter
movsl
push
xor
leave
push
int3
mov
dec
popf
leave
into
pop
dec
adc
cmp
mov
jno
jae
jecxz
mov
mov
and
dec
pop
xchg
mov
shll
add
sub
in
or
pusha
pop
int
mov
jle
iret
int3
sbb
pusha
pop
ficompl
clc
rorl
xchg
mov
add
gs
nop
cltd
sarl
inc
cmpsl
dec
adcl
pop
xor
pop
dec
popa
xchg
mov
jbe
inc
iret
push
push
aaa
test
and
cmp
mov
es
addr16
add
aam
push
mov
stos
outsl
xor
loopne
rcr
scas
hlt
fs
xlat
sub
xchg
arpl
push
hlt
adc
fs
xchg
lock
cli
outsb
jl
jae
pop
les
mov
outsl
cmp
add
push
out
mov
test
or
mov
cmpsl
cli
cwtl
jmp
cld
and
fsts
cmp
test
f2xm1
pop
sbbb
add
mov
stos
out
sbb
sbb
sub
mov
stc
leave
cmp
scas
shr
mov
dec
jmp
mov
pop
clc
subb
fstl
adc
ret
mov
dec
mov
sbbl
stos
mov
and
pop
cmpsl
into
push
or
xchg
add
dec
cmp
fldenv
not
pop
repz
jecxz
bnd
xchg
pop
inc
pop
cmpsb
mov
fcoms
bnd
imul
dec
fistpll
mov
sbb
callw
jb
inc
test
out
sbb
xor
mov
ds
sbb
cmp
mov
xor
loop
repnz
push
sahf
in
add
and
jecxz
fiadds
sub
xorb
pop
fcoms
dec
arpl
cmpsl
jae
add
ds
inc
mov
push
pop
push
insb
data16
mov
mov
inc
inc
xchg
inc
xchg
pop
inc
es
xor
aad
clc
lock
sub
nop
push
lock
cltd
scas
jecxz
call
sub
mov
lods
sbb
hlt
push
xchg
xchg
xchg
shrl
pop
pushf
outsl
mov
pushf
test
leave
xor
sarb
xor
sbb
es
fdivrl
lret
xor
insb
push
addb
pop
stc
xchg
ret
fmull
mov
pop
and
and
mov
sub
adc
jmp
cmp
in
test
fdivrl
inc
mov
movsl
enter
insl
lcall
scas
cmp
mov
add
mov
in
xchg
mov
add
xor
mov
sub
fadds
adc
xchg
outsb
push
mov
pop
sub
add
jge
fstl
adc
iret
adc
pop
lret
xlat
lcall
fs
gs
ss
lret
push
pop
test
pop
insb
inc
or
add
pop
pushf
stc
and
adc
dec
lock
adc
push
jb
and
ss
inc
push
outsb
adc
cmp
mov
pop
xor
lea
dec
cwtl
adc
cmc
add
xchg
pop
fsubs
enter
or
sub
lret
movsl
fidivs
fmulp
adc
popf
ret
push
loop
pop
sub
lcall
push
cltd
xchg
mov
negb
ds
jmp
push
insl
in
adc
cs
sbb
cmp
push
cmpsl
dec
outsb
gs
shrb
mov
or
dec
cmp
inc
pop
in
shl
add
jb
mov
xchg
jecxz
rcrb
repz
push
ja
jl
cwtl
aam
enter
push
sbb
pop
and
pop
movsb
jne
ja
xchg
gs
stos
jge
ds
jmp
adc
lods
jb
xchg
repnz
fadd
or
mov
jl
into
repz
jmp
jns
push
cs
into
call
pop
adc
pop
fsubs
push
jge
jp
sarl
add
les
adc
js
mov
aad
dec
popf
push
cmpsl
lcall
test
popf
pop
cmp
push
and
push
xor
xchg
jge
mov
aas
test
insl
push
ror
and
hlt
pop
mov
jae
or
insb
aaa
cmp
pop
popa
or
inc
xchg
jnp
push
and
fs
jns
xchg
jne
out
and
adc
push
xchg
mov
xor
scas
adc
dec
mov
push
mov
cmp
pop
lds
mov
pushf
xor
lock
jecxz
gs
push
in
cmpsl
pop
fnop
lods
ljmp
mov
jecxz
sub
mov
xor
pushf
out
dec
dec
sbb
loop
fstpl
xchg
xor
add
pop
aaa
xchg
sbb
sar
cli
sbb
add
jg
jns
mov
nop
stc
fld
dec
mov
dec
out
xlat
lret
popa
mov
lretw
sbb
adc
movsl
test
xor
out
je
out
mov
cmp
mov
pop
es
test
jns
sar
stc
arpl
lea
pop
lret
addl
ficoml
daa
jnp
aam
mov
mov
std
lock
mov
repnz
mov
mov
pop
test
pop
lret
cli
adc
push
lret
pop
mov
sub
ljmp
scas
es
push
bound
push
xor
les
scas
xchg
lds
fwait
adc
stos
jbe
insl
ds
ss
add
sti
jg
fisubrl
cmpsb
mov
adc
or
mov
adc
mov
jg
fidivl
pushl
leave
clc
lahf
cmp
ljmp
adc
es
sub
movsl
push
insl
or
xor
xor
push
loop
cwtl
test
adc
xchg
and
lods
mov
dec
ret
push
inc
xchg
mov
addr16
jmp
js
jnp
out
push
dec
mov
mov
xchg
ds
les
pusha
mov
outsl
mov
and
push
sub
cmp
push
adc
mov
lock
push
pop
vunpcklps
jp
lock
sub
cmpsb
push
repz
movsl
stos
shl
jl
ja
inc
hlt
insb
mov
jle
xchg
cmpsl
xor
imul
and
call
pop
jae
mov
jo
or
inc
xchg
pop
or
add
mov
dec
mov
shlb
js
shrb
loop
mov
mov
inc
inc
aam
push
aam
les
push
idivb
push
mov
cmpsb
inc
or
les
jbe
dec
push
mov
lahf
mov
xchg
xchg
loope
insb
aad
imul
aas
mov
ror
jle
add
test
insb
hlt
loopne
mov
jns
cmpsl
pop
xor
data16
jne
or
dec
call
push
dec
cli
or
movsl
add
in
out
fadds
mov
jns
jmp
cmp
inc
lret
mov
or
test
xor
cltd
mov
sbb
xor
ret
xchg
xchg
inc
dec
insl
push
subl
ficompl
jb
xchg
xchg
sbb
pop
fwait
js
or
iret
inc
pop
dec
mov
das
cmp
fldcw
xorl
push
add
xor
xor
mov
fidivrs
into
aad
lret
xchg
push
out
xor
inc
and
imul
iret
inc
stos
cmp
jecxz
cmpxchg
popa
jecxz
into
xchg
addb
xor
lock
dec
cmp
mov
out
movsl
fdivrs
sub
jb
mov
fs
mov
or
cmpsb
popa
push
popf
es
mov
inc
sbbl
pop
mov
sahf
cmpsb
mov
out
ljmp
lcall
popa
gs
dec
inc
int
lahf
mov
shll
mov
int
leave
sbb
jne
mov
scas
jge
add
sbb
call
fimuls
push
xchg
hlt
aam
xchg
loope
sub
adc
lods
sbb
ret
add
xchg
inc
push
mov
mov
lret
and
cmpsl
mov
mov
jae
add
inc
dec
ret
dec
xchg
pop
fs
mov
in
unpcklps
cmp
push
js
rcll
sub
cmp
ja
nop
int
inc
add
add
mov
rorl
mov
fdivl
inc
ljmp
sbb
mov
jle
xorl
xchg
push
push
das
inc
xchg
xchg
scas
sub
dec
lock
sub
adc
xlat
mov
push
push
adc
mov
xlat
cmp
xchg
pop
add
enter
addb
faddl
push
cwtl
mov
or
sbb
lcall
fldcw
imul
sub
es
pop
inc
pop
fwait
lods
pop
mov
mov
adc
xor
aaa
aad
mov
push
jg
push
loopne
out
lods
test
inc
xor
in
jecxz
addb
xor
inc
jne
pop
rcl
fucom
sbb
fstpl
lock
out
jmp
and
pop
outsb
lods
mov
hlt
roll
sbb
cmp
cltd
push
push
je
pop
pushf
cmp
iret
rcrl
test
jp
fisttps
push
loope
adc
out
ss
or
es
dec
cmp
and
inc
insl
mov
in
mov
mov
pop
and
psrad
mov
sub
mov
mov
xor
mov
pop
xor
or
notb
bound
jmp
ss
sub
aad
fstpl
mov
cwtl
dec
in
leave
adc
decb
lcall
ficompl
push
or
mov
in
cli
fdivl
sbb
cmp
fmull
ret
lods
xor
cld
push
leave
push
adc
cwtl
sub
ja
jbe
and
or
jne
mov
scas
or
jnp
lret
xchg
std
xchg
mov
or
push
sub
add
xor
hlt
and
cltd
arpl
cmpb
repz
and
mov
mov
int3
adc
loop
mov
dec
pop
sahf
sbb
dec
push
jl
jge
fs
push
push
mov
stos
adc
aaa
and
cmpb
fisttpl
xor
adc
adc
mov
pop
xor
cltd
jb
mov
cltd
lret
mov
and
mov
fdivrl
adc
mov
push
cmp
push
mov
loop
add
pop
fisubs
jp
jbe
inc
test
inc
jbe
cmp
adc
mov
push
aam
nop
je
mov
adc
ret
addr16
lock
adc
aad
mov
test
insb
push
aas
mov
pop
in
aaa
int3
mov
mov
ja
test
pushf
jno
mov
sbb
push
push
add
cmpsl
push
cwtl
add
sbb
mov
lods
ds
and
mov
adc
int3
push
cmpb
jmp
dec
imul
add
xchg
mov
fwait
aam
dec
repz
fs
add
and
jle
adc
inc
and
mov
or
push
sbb
imul
dec
mov
cwtl
out
sarb
add
popf
sbb
xchg
out
test
and
adc
pop
std
loope
push
addb
sbb
pop
inc
push
add
repnz
or
shlb
inc
inc
nop
movsl
fwait
or
dec
cmp
mov
or
xor
das
das
add
movb
push
repz
cwtl
fs
mov
pushf
in
push
dec
mov
xchg
data16
push
and
sbb
sar
fisubs
sub
shll
push
add
aad
xchg
cmpsb
dec
and
aaa
jae
not
mov
popl
daa
mov
pop
xor
jp
popf
aaa
jbe
push
xchg
jmp
jnp
sbb
dec
cmpsb
cmpsl
int3
aad
ret
shrb
sbb
or
sahf
test
dec
mov
add
pop
sbb
loopne
adc
dec
jmp
lret
test
push
mov
fstps
ret
insb
mov
enter
xchg
xchg
in
mov
test
mov
stos
and
ret
pop
dec
repnz
or
fwait
dec
shrl
mov
adc
enter
pop
insl
lock
test
push
in
xor
push
or
sbb
adc
enter
js
push
mov
mov
shr
sbb
jnp
xchg
mov
es
lea
bound
mov
sub
arpl
or
push
cmpsl
pop
add
enter
pop
mov
push
lret
repnz
addr16
aaa
mov
fidivrl
or
lock
int
repz
pop
cmc
mov
clc
int3
lea
lods
dec
in
jl
mov
shll
mov
out
mov
jp
and
or
ret
inc
pop
lock
mov
and
ret
test
mov
lds
movups
std
adc
aaa
lcall
lret
xchg
jmp
ret
aaa
xchg
jmp
mov
pusha
cmpsl
cwtl
sbb
push
out
cmc
jns
insb
arpl
push
jle
in
mov
push
cmpb
push
mov
xchg
pop
jb
inc
pop
lods
sub
out
aas
int3
pop
out
cmp
xchg
pop
hlt
insl
pop
mov
cmp
jae
add
rorb
test
mov
lret
jbe
icebp
std
jae
pop
call
int3
cmp
rcll
mov
out
pop
subb
sbb
cs
je
jmp
je
scas
jl
pop
fdivrs
lods
cmpsb
mov
push
out
daa
lods
adc
out
outsb
popa
test
xchg
pop
imul
into
mov
ss
jbe
rcrb
xchg
hlt
rep
push
pop
cmp
mov
je
shr
lods
imul
or
das
cmc
and
ficompl
test
mov
or
int3
inc
lods
scas
cwtl
test
repnz
sub
std
ret
out
out
aaa
sub
pop
pop
ds
pop
sub
insb
lret
push
jns
push
xchg
cmp
add
mov
bound
mov
jecxz
data16
add
test
and
ljmp
xor
inc
cmp
xor
sbb
dec
sub
pop
imul
inc
add
nop
orb
sti
dec
popa
and
popl
aas
cmpsb
js
les
push
je
mov
stc
rcrb
add
and
lods
jecxz
push
or
and
mov
inc
push
fstl
gs
mov
cmpsb
pop
dec
or
and
cmp
enter
faddl
mov
dec
addl
xchg
insb
addb
push
or
mov
aaa
add
iret
mov
clc
mov
fcmovb
push
out
sub
ds
aad
dec
sbb
sub
or
mov
add
outsl
or
insb
push
sbb
xor
sub
push
sbb
mov
jp
push
ret
pop
sahf
fcmovu
in
xor
and
aaa
nop
push
popa
mov
rolb
add
divl
pop
sub
loopne
and
add
mov
cmp
dec
fdivrs
cmp
xor
hlt
dec
xor
int3
pop
mov
imul
cmp
and
dec
mov
movsb
fcomp
dec
outsl
insb
xor
cs
pop
addr16
lds
add
jns
in
add
out
loope
fldl
xchg
hlt
lahf
rcll
call
bts
pusha
addl
dec
loopne
push
cmp
mov
ja
pop
rcrl
inc
rcr
ds
or
sarb
ja
jge
jg
add
jl
adc
out
push
out
push
and
add
mov
cmc
test
and
jbe
adc
lahf
fstpt
pop
dec
add
in
int3
hlt
xchg
pop
sub
xlat
outsl
mov
add
repnz
pop
hlt
pop
stos
cmpb
push
dec
mov
sbb
movsb
test
sub
ss
cli
sub
rcrl
mov
pop
sarb
rcll
fnstsw
int
mov
dec
out
dec
pop
js
out
dec
lods
movsl
punpckldq
jl
or
in
test
push
xor
sub
cwtl
mov
lret
lea
push
sahf
dec
jmp
inc
mov
insb
push
rcll
xor
ljmp
cmpb
mov
sbb
outsl
cltd
xchg
pop
mov
repz
leave
pusha
in
daa
and
jge
data16
fimull
jmp
mov
mov
enter
sahf
test
lcall
stos
pop
pop
sbb
push
es
xor
mov
mov
inc
xchg
int3
cmpsb
loop
into
fidivrl
clc
mov
fnstcw
in
inc
jb
testl
incb
shll
test
out
fmuls
cmp
mov
jbe
addr16
mov
cmp
mov
cmp
bnd
shrb
nop
mov
or
xchg
push
cmpsl
jecxz
add
inc
movb
aaa
enter
dec
lds
or
lcall
ror
mov
out
cmp
ds
mov
xchg
jae
cmp
cwtl
icebp
fildll
dec
ljmp
mov
push
sti
inc
rorl
inc
stos
inc
stos
mov
pop
aam
mov
in
xchg
lahf
mov
inc
dec
pop
in
xor
mov
lea
jmp
jb
stos
adc
mov
jp
mov
clc
lea
cmp
aaa
mov
test
xor
lock
fmull
mov
mov
insl
mov
out
stos
sbb
popf
inc
lds
pop
mov
and
divl
repnz
lcall
int3
shl
jae
movsl
fldl
xor
shr
xor
inc
jb
int3
pop
mov
push
inc
addr16
xchg
in
lods
sarb
aas
jo
sbb
imul
add
or
stc
push
mov
and
xor
mov
insb
adc
cmp
jecxz
cmpsb
loope
testb
push
dec
mov
jo
jmp
popa
mov
inc
out
cmpsl
pop
sbbb
push
sub
adc
insb
or
hlt
data16
roll
jmp
adc
pop
jp
inc
dec
adc
inc
scas
push
push
push
es
shr
enter
dec
dec
mov
xchg
jle
push
cli
sbb
inc
mov
pop
cmp
mov
pushf
mov
decb
mov
dec
fimull
push
std
sbb
xor
sub
push
inc
inc
mov
or
lretw
loope
push
mov
inc
and
lods
cmc
jne
mov
aad
fbstp
ljmp
xchg
sub
loop
xchg
cmpsb
mov
cmp
xchg
mov
jmp
dec
sub
loop
lea
pop
stos
out
lds
stos
dec
mov
cmpsb
rclb
lret
ret
int
inc
dec
sub
test
es
stos
das
mov
push
rcll
xor
inc
out
pop
das
mov
push
mov
in
sbb
int
adc
mov
pop
pusha
pushf
jo
and
int
sbbb
and
inc
int3
les
mov
sub
fs
push
pop
mov
mov
mov
jnp
cmpl
inc
push
pop
push
adc
and
or
xchg
stc
pop
les
add
push
cmp
xor
pop
xchg
sbb
js
popf
les
and
insb
sbb
js
scas
cmp
push
push
add
or
into
lcall
inc
mull
lock
add
mov
fsubrs
mov
cmp
mov
shrl
loopne
cmp
mov
mov
push
jo
inc
add
mov
pusha
ret
into
mov
or
lret
pop
xor
xchg
fmul
sub
int3
pop
jecxz
and
xchg
or
inc
hlt
lds
fwait
cmpsb
mov
clc
test
cmp
outsb
fstl
and
jecxz
icebp
scas
adc
scas
adc
jge
bswap
cltd
xchg
jge
mov
adc
repz
imul
jecxz
flds
dec
or
and
data16
jae
daa
test
mov
ss
push
jno
inc
cmp
mov
pop
and
into
cmp
pop
mov
sarb
in
popa
fs
inc
mov
adc
sbb
incl
xor
jge
pop
mov
and
xor
xlat
pop
lea
mov
jle
xchg
fwait
cli
push
leave
filds
rorl
cmp
ficompl
jb
jle
in
lret
inc
inc
cltd
add
lcall
adc
inc
popf
insb
dec
test
mov
lock
cmp
add
or
mov
ret
jb
nop
repnz
jae
xor
mov
bound
loop
fwait
insb
imul
stc
aad
xchg
pop
gs
mov
jle
rol
rorb
lcall
pop
decl
out
sahf
fimull
pop
aaa
pusha
ret
js
out
xor
test
das
sub
int
sarl
mov
xchg
in
rclb
mov
cwtl
xor
fs
call
aas
iret
fcompl
push
lret
adc
push
xchg
stc
mov
xor
aam
jge
gs
dec
xchg
cmc
iret
cmpsl
in
stc
mov
test
and
mov
cmp
adc
fbstp
ja
inc
cli
sbb
xchg
pusha
inc
mov
and
cmp
stos
sbb
fnstenv
push
sbb
cmp
jge
adc
icebp
push
lods
in
lret
jae
lock
add
repnz
and
cltd
cmp
inc
sub
pop
pop
xor
xchg
js
mov
movsb
adc
add
das
es
hlt
daa
add
aam
das
cmpsl
jle
jae
inc
fcomps
je
inc
into
push
in
adc
mov
stos
mov
div
sbb
lods
mov
lahf
push
xor
fisttpl
leave
outsl
jae
sub
mov
inc
stos
jb
jg
div
adc
jmp
mov
mov
mov
sub
mov
inc
pop
or
cs
imul
sbb
sub
lock
sbb
aam
sub
jp
popa
not
fnstcw
adc
or
inc
stc
call
mov
divb
mov
fidivl
push
push
mov
and
mov
jecxz
add
or
push
mov
popa
nop
and
inc
lret
repz
lea
add
stc
es
adc
int
dec
popl
add
aas
push
ljmp
outsl
and
test
sarl
popa
hlt
andps
mov
loop
xchg
nop
and
lods
pop
xchg
jmp
add
movsl
dec
popf
callw
stos
iretw
inc
sbb
ja
mov
les
pop
adc
or
aad
imul
lcall
lods
negb
insb
add
sub
xor
andl
imul
fnstsw
arpl
jecxz
jnp
inc
jmp
sti
pop
fildll
pusha
clc
inc
jno
pop
call
loop
scas
test
push
daa
xor
pusha
insl
inc
xchg
les
push
int3
out
jecxz
nop
aam
and
vucomisd
or
cmp
xlat
xchg
jo
jge
mov
xchg
sub
je
cld
mov
test
fcmovbe
adc
enter
in
or
cmc
loopne
jne
rcl
das
sahf
mov
fwait
cmpsl
mov
mov
jg
jecxz
xor
and
xchg
jp
adc
cli
rol
dec
fdiv
push
scas
loopne
cli
dec
inc
sub
and
call
sbb
lret
adc
pop
push
dec
int
mov
cltd
out
push
aaa
lahf
lods
das
push
sub
test
pushf
jae
xor
cltd
mov
aad
add
push
inc
and
cwtl
mov
lods
xorb
lods
push
fstp
inc
push
icebp
lret
xlat
adc
lock
test
in
jbe
cmp
inc
imul
jo
sub
or
push
sti
jns
jp
or
cmc
orl
bound
out
cmp
outsl
jmp
pop
push
out
faddp
sbb
cli
xor
cltd
in
cmp
push
outsl
lds
push
repz
mov
scas
add
pushf
bound
bound
inc
stos
mov
xchg
ja
pop
xchg
lds
fstps
cmp
rclb
inc
xchg
mov
lods
out
push
push
call
cwtl
pop
pop
mov
mov
aaa
cmp
jns
mov
dec
sbb
popa
lods
arpl
scas
xor
cmp
push
mov
ret
jne
enter
ret
inc
sub
pop
push
lock
js
inc
xchg
xor
xor
loope
cltd
push
mov
and
aad
lods
out
testl
sub
jp
push
sbb
xor
inc
dec
lods
dec
shrb
mov
adc
xchg
loop
cmp
pop
pop
mov
lcall
sub
xor
jge
clc
lret
and
push
orl
cmc
or
mov
xchg
adc
scas
add
shrb
pop
dec
mov
outsb
jae
add
sbb
pop
pop
or
adc
in
int
mov
mov
jl
jns
jge
out
mov
push
pop
dec
mov
xchg
out
xchg
jl
mov
mov
sub
cltd
pop
nop
pop
stc
loope
cmp
cmp
gs
cmp
sbb
push
jb
push
cs
sub
pop
and
pop
jno
aaa
js
mov
mov
lret
fprem
fsubrp
xchg
int3
cltd
sbb
pop
pop
xor
ss
leave
inc
outsb
popa
and
inc
fsubs
cmpsl
inc
aaa
pop
cmp
data16
call
xor
mov
outsl
xorb
aas
xchg
mov
jg
mov
dec
dec
in
fwait
adc
lea
push
add
adc
sbb
add
jge
aad
not
jecxz
fmul
add
ja
repnz
sub
jge
lock
shll
mov
push
jbe
mulb
shr
cmp
das
or
pop
push
cmp
inc
int3
arpl
out
mov
repnz
mull
xor
sub
clc
inc
clc
mov
lret
lret
pop
mulb
cld
bswap
mov
ljmp
xchg
icebp
mov
pushf
xchg
or
sti
fsts
sbb
jg
push
pop
mov
sbb
fs
xor
jnp
or
sti
add
mov
inc
jl
push
push
add
dec
out
fmul
in
lea
int
cmp
push
mov
adc
and
push
mov
push
sahf
jb
rclb
xchg
in
cmp
nop
cmpsb
int
or
inc
fldcw
ss
add
cmp
aaa
mov
pop
and
test
dec
xchg
es
push
hlt
sbb
sbb
xchg
shrb
sub
jae
icebp
jge
dec
pop
shl
xchg
daa
mov
scas
pop
inc
pop
std
in
es
jno
dec
sbb
out
jl
xor
roll
rcrb
into
inc
stc
cmp
scas
xor
aam
cltd
jae
arpl
lcall
cs
lds
incb
aad
int3
mov
cmp
xchg
data16
inc
push
mov
ds
cltd
cmp
push
int
pushf
fldl
adc
push
xor
test
cmp
cmp
mov
out
stos
mov
ror
loope
mov
or
popa
ljmp
test
push
mov
mov
in
loope
insl
push
or
or
mov
das
push
pusha
idivb
inc
test
xchg
stos
mov
test
pop
push
mov
ret
test
cmp
cld
hlt
or
in
add
sbb
pop
mov
fwait
mov
sbb
emms
movsb
add
sub
inc
mov
mov
lods
inc
push
and
sub
cld
dec
in
bound
xchg
dec
xchg
mov
dec
jo,pn
jp
dec
stos
jmp
sbb
test
mov
inc
loop
rorb
test
and
loop
fldcw
xchg
dec
lods
mov
imul
xchg
iret
in
test
or
clc
mov
divb
test
sbb
test
mov
lcall
mov
fsubs
test
outsb
adc
jne
xor
clc
cmpl
adc
out
cli
dec
sub
movaps
mov
xor
cmp
sub
jl
push
adc
inc
mov
jle
xchg
fwait
scas
or
test
pusha
pop
dec
push
and
inc
or
lods
hlt
movsb
leave
fldt
enter
out
icebp
pop
inc
daa
sub
xchg
cmp
xor
dec
lcall
xor
cld
je
sub
cmp
push
xchg
pop
int3
mov
rcll
xor
add
lds
mov
stc
andb
orb
mov
cmp
xchg
dec
fldt
inc
lret
xor
mov
xchg
mov
cmp
pop
jecxz
jecxz
mov
mov
add
stc
mov
xor
mov
std
push
push
inc
jne
sbb
add
adc
movsb
or
shr
rorb
pop
loope
pushf
cmp
jmp
mov
pop
cmpsl
nop
mov
in
scas
adc
bound
lret
dec
mov
popa
mov
mov
or
cli
mov
lods
imul
push
mov
into
shl
inc
jmp
push
xor
scas
neg
push
inc
mov
call
mov
shll
mov
push
lods
sti
loop
sarl
dec
cmp
mull
rorl
cld
mov
inc
jne
popa
jp
push
jl
cwtl
lds
jno
mov
pop
in
sbb
cmp
mov
lcall
int
scas
cltd
pop
subb
rclb
movsb
mov
xor
add
pop
add
movsl
dec
clc
mov
inc
pop
jne
cli
adc
adc
out
imul
std
pop
push
loopne
sub
jecxz
gs
pusha
int3
insb
pop
mov
insl
scas
jo
dec
ret
pop
xor
lret
es
leave
push
jg
shlb
shlb
mov
adc
enter
lds
lods
cmp
mov
pusha
stc
cld
cmp
xor
lret
xor
shrb
xchg
jo
mov
mov
mov
jle
xchg
push
lods
mov
lret
mov
mov
jno
push
xor
xor
notl
mov
xchg
push
jl
xchg
popa
xchg
vpshuflw
incl
xchg
adc
sbb
mov
je
inc
shrl
mov
mov
nop
add
mov
or
insb
test
jg
jp
sbb
jmp
sti
sub
cmc
or
xchg
mov
or
cmp
loop
xchg
mov
inc
pop
adc
mov
sub
push
sti
repz
sbb
movsb
mov
mov
push
xchg
jbe
lret
add
xor
pop
pushf
dec
sbb
ficompl
cltd
gs
cmpsb
jg
cmp
add
push
out
sar
movsl
cltd
lahf
das
clc
scas
adc
ret
and
fwait
sub
clc
pop
ret
stos
cmp
sarl
mov
pop
scas
push
lds
movsb
push
adc
fsubs
js
nop
add
enter
movsl
dec
adc
dec
imul
push
xlat
popa
xchg
push
push
inc
ret
sub
mov
loopne
pop
stos
xchg
or
mov
push
jle
pop
into
movsl
mov
movsl
mov
testb
lock
dec
int3
inc
xchg
mov
repz
fcmovbe
cmp
mov
add
mov
inc
add
in
paddusb
dec
and
out
push
ljmp
jb
cmpsl
mov
dec
lret
and
stos
lret
test
outsb
fistl
dec
xchg
mov
sub
iret
dec
pop
push
rclb
repz
loopne
out
ljmp
mov
lahf
jg
arpl
imul
mov
mov
aas
pop
or
sbb
test
loope
cmc
fidivrl
pop
test
icebp
jne
outsb
rcrl
out
push
negl
inc
cli
cli
dec
and
cmp
sti
sub
std
sbb
addl
int
sub
pop
sbb
idivb
and
fmuls
mov
aad
xlat
and
or
pop
jo
loope
adc
imul
xchg
arpl
imul
xchg
inc
push
xchg
xor
lods
movl
inc
xlat
data16
lods
mov
mov
gs
fucomp
lcall
cmp
dec
sbb
or
cmpsb
mov
les
pop
mov
filds
aad
sar
cmp
lret
mov
loop
push
xchg
movsl
mov
sbb
pop
les
xchg
add
pop
aad
sbb
cmp
cs
xor
mov
mov
and
repz
add
jmp
xchg
adc
dec
in
jle
test
lock
lahf
data16
and
movsb
pop
push
test
sbb
into
rcl
pop
fdivs
mov
pop
and
push
and
jbe
testl
jo
dec
adc
lret
pop
ljmp
adc
insb
out
xor
push
into
test
dec
leave
movsb
xor
fwait
jp
cltd
pop
pop
es
or
or
cmc
mov
ja
cmpsl
sbb
sub
into
aad
bound
fldl
hlt
ret
pop
loope
flds
mov
mov
add
loope
lods
in
xor
push
xchg
cmp
clc
arpl
enter
inc
sti
les
lods
cmp
and
cli
and
out
jle
and
ret
repz
cmp
dec
mov
and
test
adc
jle
aam
ds
pop
mov
xor
pop
pop
repnz
ljmp
dec
out
je
inc
cmpsb
jge
or
pop
and
pop
lds
sbb
test
add
sub
mov
outsb
or
js
mov
pop
or
sub
out
jecxz
cmp
lds
jl
int3
das
push
jnp
or
xor
cmp
jbe
repnz
aad
push
mov
shrb
add
cld
cmpsb
arpl
push
jge
mov
xchg
or
gs
test
xor
cmc
adc
sbb
mov
cs
test
inc
jns
cmc
inc
movsl
popf
inc
dec
or
icebp
out
mov
daa
lods
ret
test
jb
faddl
fdivs
push
add
or
sahf
sbb
pop
call
imul
jb
nop
es
inc
pushf
sub
xchg
clc
and
jp
sub
jmp
mov
cmp
mov
test
xor
orl
and
fcompl
inc
sub
test
es
leave
shrl
xorl
sbb
int
mov
mov
push
xchg
mov
scas
mov
mov
insb
subb
fcoml
sub
mov
notl
adc
mov
inc
sub
mov
xchg
arpl
pop
sbb
pushf
inc
push
loop
xchg
xchg
test
int3
in
or
fwait
mov
push
jp
or
add
or
mov
adc
jbe
jbe
sahf
pushf
test
sahf
xchg
arpl
and
mov
cld
rorb
cmpsb
out
sbb
jp
loopne
testl
dec
xor
mov
dec
bound
lds
push
mov
xor
cs
add
adc
dec
loop
add
nop
sub
xor
or
jp
mov
pusha
adc
aam
divb
mov
notb
repnz
cmp
fsubrp
xchg
fnstenv
xchg
mov
bound
sub
cmc
jo
outsl
cmpsl
jne
outsb
mulb
mov
xor
fsubs
adc
mov
jl
sbb
outsb
jnp
movsb
add
test
clc
push
imul
or
push
daa
lock
add
into
ja
pop
sbb
test
out
lea
fisttpl
sbbl
sarb
sahf
mov
jmp
sbb
rcrl
cmc
mov
xchg
mov
add
cmp
adc
adc
movsl
fsubr
sub
sbb
leave
mov
ret
inc
repnz
test
iret
das
jle
mov
int3
mov
roll
imul
out
mov
stc
movsl
cmpsb
movsb
fcomp
inc
pop
in
inc
inc
fucom
fists
xchg
cmp
lahf
sbb
les
or
imull
sbb
xchg
sbb
das
pop
movsb
or
lock
push
add
movsl
pop
mov
shrl
dec
adc
jmp
cmp
mov
push
mov
sbb
js
test
mov
aas
stos
std
add
test
inc
dec
fbld
call
jle
xchg
js
dec
and
shll
cmp
fnstcw
cmpsb
ds
and
mov
data16
fstl
aam
out
sub
lds
out
push
mov
pop
test
movsb
xchg
cmp
repz
push
and
aas
xchg
mov
jno
sub
xchg
pop
mov
sub
gs
lock
or
xor
mov
dec
into
mov
xor
in
add
out
add
add
ja
jge
xor
lods
shlb
test
aas
pop
jb
or
aas
sbb
hlt
adc
sbb
pop
fnsave
ret
enter
xchg
data16
add
jle
cmpsb
adc
or
sub
bsf
rcrl
inc
or
sub
shl
lcall
lock
lret
fdivrl
lret
push
out
mov
sub
xchg
dec
xchg
sbbw
sub
or
loop
insb
out
pop
xchg
fstps
popa
and
out
std
or
xchg
and
push
lods
fimull
loop
int3
js
add
mov
push
and
in
sbb
push
sbb
sbb
sbb
or
and
mov
pop
scas
dec
xchg
inc
daa
and
decb
and
test
mov
mov
and
js
dec
popf
notb
xchg
add
fwait
cwtl
insl
cmp
xchg
jp
jmp
fistl
loope
sub
jo
in
mov
inc
push
fildl
stos
lds
cmpsb
sarb
imul
or
pop
push
lods
cmpsb
bound
stos
pusha
cmp
loopne
movsb
jno
jge
jl
pop
adc
or
adc
ret
adc
rolb
cltd
inc
fldt
jl
pop
mov
add
mov
lahf
cmp
dec
data16
lret
inc
pop
popa
into
mov
cltd
and
mov
out
add
jo
add
pop
jge
jge
add
add
fwait
mov
scas
sub
das
push
push
popa
inc
xchg
sub
test
mov
fcompl
mov
jbe
sti
std
xor
sahf
inc
mov
pop
int
rcl
stc
ss
adc
jecxz
test
mov
jne
sahf
or
jae
stos
xchg
sti
pop
stos
pop
add
out
dec
pop
cmp
ljmp
int
mov
push
dec
test
mov
jmp
xchg
push
ljmp
mov
jmp
inc
stos
jl
mov
mov
dec
push
sub
andb
daa
push
fstp
inc
movsl
test
subl
test
mov
xchg
pop
jge
jl
jge
rcll
movsb
adc
mov
inc
imul
lock
xchg
inc
aas
xlat
popf
lods
faddl
std
mov
xchg
fs
arpl
lret
mov
rorl
movsl
clc
fs
stos
xlat
jecxz
imul
nop
test
and
push
xor
add
sbb
xchg
push
cmp
push
je
mov
mov
sub
adc
fisubl
lods
xchg
xor
fiaddl
adc
dec
in
fcomp
insl
cmp
lods
arpl
fdivs
inc
sti
sbb
xor
inc
fwait
or
xor
mov
xor
outsl
pop
mov
lcall
data16
add
pop
pop
jae
fcompl
test
sub
rorb
push
mov
les
test
adc
sbb
mov
push
jb
lds
xchg
bound
rcll
adc
fdivrl
fs
cmpsb
imul
stc
or
in
int3
dec
push
lret
jmp
xchg
cmp
cwtl
mov
in
fwait
sarl
xchg
pop
xor
ss
pushf
mov
xor
cmpsl
neg
fidivl
dec
push
imul
and
dec
mov
mov
dec
jg
jno
out
stos
push
cmpsl
mov
movsl
jge
lods
xchg
jecxz
xlat
push
sub
aam
test
out
fistpll
hlt
int
push
jle
and
inc
pop
icebp
mov
daa
jo
xchg
cmpsb
rolb
in
sbb
pop
inc
in
push
movsl
sbb
mov
jns
rcrb
ds
addr16
mov
cmpb
push
insl
and
inc
das
mov
and
or
cwtl
out
dec
lret
add
cmc
inc
xor
mov
sbb
push
xor
add
jae
ror
imul
push
or
iret
push
add
adcl
cmc
scas
mov
mov
cmpsb
cltd
mov
cli
push
xchg
fistpll
mov
hlt
sub
loop
mov
rorb
divb
test
and
mov
or
fwait
add
inc
push
or
lcall
ljmpw
jmp
fdivl
mov
fmul
dec
jo
and
dec
xor
sbb
push
pop
jle
enter
push
jecxz
sub
xorl
cmc
or
xor
pop
pop
mov
xor
dec
aaa
pop
or
imul
mov
adc
orl
sub
cld
cmp
subb
int3
or
mov
inc
sbb
cmpsb
mov
movsb
jne
xlat
daa
push
sub
faddl
xchg
add
rcrb
fst
dec
sarb
add
dec
push
push
rclb
jle
pushf
gs
popf
adc
test
imul
ss
push
lods
jo
mov
dec
jge
mov
mov
push
ror
push
outsl
fldenv
in
adc
push
fisttpll
jbe
xor
dec
adc
and
sub
inc
aas
mov
mov
jl
sbb
mov
mov
out
enter
addr16
push
mov
adc
in
push
and
cmp
pop
jmp
xchg
add
cltd
sub
popa
fmuls
fiadds
sub
push
and
outsl
shlb
push
mov
sbb
dec
mov
rcrb
outsl
push
shrl
inc
mov
pop
jno
and
mov
orl
nop
int
cmc
mov
jb
test
out
fiaddl
pusha
push
add
dec
scas
cld
movsl
lea
push
sub
out
std
mov
xchg
dec
gs
insl
addr16
loopne
and
cld
or
mov
jns,pt
in
sub
roll
outsb
pop
adc
cmp
push
cwtl
dec
push
rcr
pop
xor
push
enter
enter
pop
sbb
jb
cmp
mov
push
fidivs
cltd
nop
subb
push
xor
sub
jmp
jnp
or
hlt
mov
or
divb
sti
int
xor
xor
sbb
xchg
pop
daa
adc
aas
aam
stos
out
hlt
out
jge
lea
fdivr
shrl
pusha
jmp
jmp
packuswb
cltd
test
test
inc
repnz
mov
cmovl
jnp
addr16
push
lret
jnp
mov
jo
pop
lret
lods
cmpsb
or
jno
xchg
lcall
repz
das
popf
jp
es
shlb
cli
cmp
test
imul
mov
lcall
push
mov
add
jae
pushf
ja
stc
dec
fcmovb
fcompl
shll
push
lods
sbb
out
xor
push
es
sub
push
pop
pushw
out
adc
add
js
pop
ja
xor
push
pop
jnp
popl
imul
push
addr16
add
js
nop
repz
out
jp
mov
lcall
xchg
fists
pop
popa
fidivrl
pop
sbb
inc
mov
call
or
push
jle
pop
fidivrs
in
cmpsb
add
sbb
cltd
mov
call
in
dec
mov
shll
cmp
pop
and
sti
inc
jb
pop
and
repz
out
leave
pusha
xor
cmp
ja
pop
repz
gs
hlt
sbb
mov
in
repnz
in
nop
push
cmp
testb
xchg
mov
pop
fiaddl
cmp
mov
sbb
inc
ja
dec
add
pop
imull
lahf
inc
daa
push
xchg
out
out
adc
xchg
js
inc
jecxz
jl
cs
fcmovu
mov
jge
or
lds
xchg
loopne
add
sub
cli
cld
cmpsb
or
jnp
test
add
adc
xor
roll
inc
xlat
daa
mov
sbb
lock
xchg
test
sbb
cld
ss
pop
outsb
xchg
adc
test
popa
and
fidivl
sub
xchg
pushf
enter
aaa
xchg
and
cmpsl
out
inc
mov
mov
insl
push
lock
sahf
sub
cmp
xchg
add
jecxz
inc
pop
xchg
adc
test
or
aas
lret
out
cwtl
inc
cmpsb
and
enter
js
mov
rcll
imul
pop
jo
cld
add
pushl
inc
arpl
popa
call
loopne
inc
std
push
add
inc
mov
dec
in
cld
xor
push
ret
pop
test
pop
bound
cmp
or
testb
push
sti
push
dec
mov
push
int
mov
out
ds
std
test
jecxz
dec
dec
es
or
in
out
mov
dec
mov
or
nop
out
mov
dec
cmc
mov
push
into
clc
loope
shr
cli
dec
scas
popa
in
lcall
xor
sbb
inc
pop
cmp
outsb
xchg
xor
sub
cld
mov
stc
out
cmpsl
push
sahf
xor
nop
xor
test
dec
ljmp
mov
pop
adc
lock
imul
pop
arpl
mov
xor
scas
cmp
inc
test
jg
fsts
xchg
fsubs
dec
push
and
test
or
jmp
out
sub
cs
dec
fs
iret
add
fistps
adc
ja
fldt
popa
outsb
jns
xor
fidivrs
imul
mov
jo
sbb
inc
mov
outsb
or
movsl
and
pop
int
push
inc
ret
gs
xchg
out
or
jb
jae
mov
mov
outsl
es
pop
cmp
and
fdivl
sub
sub
mov
xchg
lock
sub
lds
mov
cmc
call
mov
dec
fildll
jno
or
adc
and
jae
xor
jl
xchg
enter
movsb
add
pop
pop
addl
push
adcb
push
or
dec
push
and
xchg
xor
cmp
mov
mov
les
div
in
push
lock
in
lods
xor
inc
inc
test
ret
jle
dec
cmpsb
rorl
sti
jl
mov
cwtl
iret
decl
xchg
pop
inc
roll
jge
add
movsl
inc
sub
call
adc
rcll
or
stos
lret
icebp
add
dec
fmul
test
and
cltd
xor
and
lods
xor
stc
in
cmpsb
aaa
xor
pop
jb
push
loopne
test
shl
nop
jns
mov
adc
aas
jg
inc
sub
sbb
fbstp
pop
pop
adc
push
iret
loopne
push
enter
add
mov
pop
cld
imul
xor
aas
repnz
adc
dec
or
push
out
cli
out
pop
repnz
nop
mov
out
test
stc
push
inc
adcl
ret
gs
mov
sub
mov
fisubrs
sbb
mov
xchg
mov
cmp
inc
push
xor
jns
icebp
bswap
rcll
xor
aas
jmp
insb
mov
in
pop
mov
or
push
and
pop
jg
mov
add
imul
and
push
cmp
int3
out
xchg
cmp
inc
mov
and
mov
out
cmc
mov
lods
in
mov
pop
mov
roll
and
mov
ficoml
insb
pop
inc
push
cld
pop
jns
popf
in
pushf
sub
movsl
popf
dec
cltd
mov
cmpsb
stc
xor
call
aaa
mov
pop
inc
xchg
inc
mov
testb
jp
movb
or
test
movsl
mov
and
xor
addr16
dec
mov
fbld
adc
dec
pop
loop
or
push
push
enter
sbbl
push
mov
dec
shll
add
pushf
fs
pop
xchg
cltd
scas
cli
mov
cmp
mov
mov
test
daa
cltd
pop
ret
loop
jp
jb
cmp
lret
xor
mov
lret
jle
xor
arpl
stc
stos
and
test
mov
into
test
jns
insb
cvtps2pd
sti
pop
in
cmp
add
inc
mov
fwait
adc
push
insb
jbe
shll
jns
out
push
ljmp
loope
lock
test
repz
mov
rolb
jp
movsb
out
and
sbb
pop
out
xchg
das
xchg
test
scas
xchg
and
scas
dec
xchg
pop
cmovne
jo
xchg
push
or
mov
xchg
rclb
lahf
mov
test
fisubrs
gs
push
aas
sbb
mov
cltd
cmp
int3
test
push
push
idivl
inc
sub
rcl
sti
adc
inc
lret
jmpw
push
ja
out
mov
mov
sub
ret
test
xchg
sbb
cld
sbb
and
mov
dec
out
cmp
lock
enter
sub
cmp
inc
dec
enter
xchg
addb
sbb
and
lock
pushw
cmp
mov
dec
push
and
ljmp
sbb
mov
cs
and
mov
push
jb
popf
inc
ds
mov
out
cli
push
in
movaps
hlt
push
in
fwait
pop
in
xor
lds
js
addr16
push
jge
and
add
into
out
stc
jns
call
mov
incl
stos
clc
sti
scas
jg
cmp
adc
into
subb
xor
dec
dec
test
xchg
dec
out
out
mov
cld
lret
mov
mov
push
cmp
subl
pslld
xor
xchg
sub
sbb
sbb
sbb
sub
jbe
ror
cs
cmp
mov
mov
sti
call
push
pop
jno
dec
xchg
xchg
fcomps
clc
adc
cmp
arpl
out
std
dec
push
mov
aad
and
mov
not
test
push
push
sub
lcall
or
pop
add
pop
lods
test
pop
daa
cmpsb
ret
popa
lret
aaa
pop
and
xchg
popf
clc
xchg
cmpsb
fwait
inc
loope
jg
sub
loopne
jbe
and
pop
adc
insl
push
xchg
mov
test
les
ret
pop
mov
jmp
jno
and
push
adc
sbb
cmp
mov
mov
pop
push
outsb
pop
jbe
jbe
std
and
fs
or
cli
xchg
stos
xchg
sahf
dec
jp
fisubrs
pop
dec
popf
pop
mov
cmp
jle
dec
lcall
mov
push
mov
fstp
icebp
sub
xor
inc
pusha
jmp
out
push
adc
mov
and
xchg
cmp
jns
aad
push
scas
inc
mov
cmp
sub
into
in
pop
sbb
std
mov
mov
loope
sbb
loop
mov
inc
xchg
ss
bound
mov
mov
lret
pop
dec
icebp
fsubs
sub
pop
int
adc
pusha
xor
fdivr
popf
push
add
mov
insb
mov
jmp
jge
cli
adc
lret
add
movd
subb
jecxz
mov
cmpsb
xor
and
lock
or
imul
add
jo
sbb
pop
out
jge
outsb
jp
lock
fs
dec
xchg
rolb
lock
rorl
mov
call
xchg
sahf
add
mov
iret
cs
xlat
and
lcall
lahf
shrb
je
repz
push
test
fisttps
mov
mov
mov
dec
or
xor
loopne
hlt
int
dec
xlat
inc
shll
jmp
mov
lcall
jb
and
and
mov
inc
xchg
jle
mov
sub
aaa
mov
and
scas
into
les
push
and
scas
imul
movsb
sbb
je
mov
popf
jae
and
jmp
lret
outsb
js
lods
das
ret
and
sub
lods
push
jae
and
adc
inc
shlb
push
xchg
mov
js
pop
inc
inc
add
imull
push
fbstp
sub
jge
fdivrs
mov
sub
jb
xchg
or
repnz
sub
leave
aaa
movsb
pop
and
mov
pop
mov
and
jo,pn
sbb
int3
sbb
cmp
in
add
mov
negl
loopne
int
mov
xchg
adc
imul
iret
push
jne
popa
aas
scas
sub
dec
shll
push
xor
pop
notl
jbe
mov
in
inc
sbbl
scas
data16
and
pushf
push
inc
arpl
sub
subps
xor
std
loop
inc
cmp
adc
cli
clc
jne
inc
mov
dec
fists
add
push
nop
sti
cs
out
xor
sbb
dec
or
sbb
imulb
loope
lret
jns
fcmovnu
xlat
sub
insl
pop
cwtl
loopne
sub
inc
cli
stc
repnz
outsl
notl
adc
jns
inc
add
ds
js
pop
mov
xchg
js
adc
or
jne
xchg
insb
mov
lahf
cmp
jb
sub
cmpsl
pop
push
fucom
lcall
xchg
mov
inc
and
inc
out
and
cmp
test
sub
jle
fdiv
rcrb
movsb
out
jae
testl
popf
stos
push
and
aaa
push
sarl
enter
arpl
stos
mov
fidivl
nop
shl
scas
insl
inc
mov
add
jge
cmpsb
sahf
clc
mul
fdivrs
push
adc
ja
sbb
adc
inc
ror
xchg
or
in
pop
clc
push
std
mov
lea
xor
sub
sar
mov
neg
dec
pop
mov
and
push
or
mov
mov
cmp
lds
sub
adc
mov
arpl
cmp
xchg
mov
cmc
stc
sub
pop
mov
mov
ja
mov
inc
jb
das
aas
xor
mov
rorb
and
mov
jnp
loopne
hlt
sbb
xchg
fisubs
int
test
cs
and
outsb
fistpll
pop
cmpsb
sub
pop
add
cmc
jne
lods
lock
push
cmpsb
or
xor
popf
in
xchg
loopne
into
pushf
sub
test
fld1
outsl
gs
rclb
sub
xchg
xlat
movsl
pushl
dec
movsl
push
pop
adc
mov
or
insl
adc
pop
sti
or
xchg
or
mov
cmp
push
clc
inc
daa
mov
inc
add
jmp
mov
sarb
ret
adc
dec
stos
and
mov
test
push
loop
push
cmpsb
sub
mul
mov
push
int3
cltd
mov
mov
add
xor
push
hlt
cmpl
xchg
xor
inc
in
rcrb
int3
mov
ret
mov
pop
ljmp
imul
mov
push
xchg
movsl
dec
sbb
cmpb
lods
rcrb
dec
bound
insb
ja
divb
insl
icebp
sarb
cltd
xchg
fs
imul
cmp
inc
push
add
es
adc
jae
scas
or
xchg
in
sub
andb
push
mov
push
sbb
aad
lea
xor
mov
popf
mov
jl
pop
test
sub
mov
scas
test
inc
into
xchg
fbld
pop
sbb
and
mov
out
fs
es
cli
push
mov
sbb
pop
adc
push
scas
cmpsl
leave
and
add
cmp
xchg
adc
sbb
aam
mov
adc
sub
mov
roll
jmp
mov
movsb
lock
dec
pop
repnz
mov
test
std
dec
clc
rcrb
ret
mov
xor
xchg
push
adc
ljmp
jp
in
shlb
sbb
cmp
xchg
pop
imulb
mov
mov
int
dec
shlb
lcall
jbe
jmp
loope
aaa
xchg
add
jge
je
ficoms
inc
jns
pop
xor
dec
jb
mov
xor
into
or
mov
mov
sbb
pop
int3
xor
in
rorl
shrl
mov
push
inc
xor
adc
lcall
pop
adc
rclb
aas
cmp
xchg
inc
add
hlt
cwtl
pop
out
mov
adc
ljmp
cmp
xorl
test
repz
inc
movsb
enter
mov
cmp
push
jmp
rolb
jmp
mov
adc
rol
pusha
call
int3
add
mov
icebp
lods
adc
push
enter
int3
xor
enter
clc
xchg
int3
and
push
or
inc
mov
push
pushf
inc
and
leave
daa
cld
cmc
mov
cmc
mov
std
mov
jno
pop
stos
mov
stc
cmp
pop
in
inc
ja
and
imull
loop
mov
lret
leave
test
jle
fisubl
stos
lcall
jno
call
jecxz
or
fildl
outsl
jecxz
iret
sbb
subb
loopne
pusha
pop
add
xchg
inc
xlat
xchg
cli
dec
xor
xchg
xchg
int
sti
or
loope
mov
dec
insl
mov
jnp
inc
inc
sbb
fistps
cmp
push
lahf
ret
loopne
call
xor
std
popa
xor
std
add
or
pop
xor
dec
scas
push
popf
outsl
sub
jecxz
cs
pop
xor
sub
sbb
adc
daa
push
les
add
ja
lds
mov
push
in
jg
cmpl
cwtl
push
or
or
clc
fwait
aad
sub
mov
fisttpll
lock
pushf
cmp
in
dec
xchg
and
dec
pop
aaa
or
and
shrb
sbb
movsl
sbbl
les
cmp
call
test
inc
int3
inc
mov
fs
xchg
in
imul
pshufw
mov
shlb
lea
ficoml
pop
sarb
add
cli
push
mov
push
adc
lret
jmp
push
jo
dec
and
arpl
divb
out
outsl
ret
bound
loope
jl
in
lea
addr16
inc
push
mov
out
jge
sbb
xchg
ret
jbe
adc
pop
dec
loope
and
dec
add
packssdw
or
sub
add
loop
movsl
lods
jnp
mov
pop
shlb
das
mov
aaa
mov
jb
mov
sub
fildll
jmp
inc
lods
xor
cli
add
add
add
mov
movsl
adc
out
mov
hlt
rcl
inc
jnp
xor
lds
in
lea
addr16
rcll
inc
les
flds
and
xchg
ljmp
push
shrb
lods
fs
sarb
popa
or
mov
fcomp
jp
outsb
es
hlt
sub
notl
jb
aad
xchg
sub
mov
mov
mov
push
cmp
jp
test
sbb
movsb
lea
pop
jge
shrl
je
pop
aam
ret
lods
filds
movsl
out
in
sub
dec
loop
fs
add
out
sub
dec
gs
sub
repnz
aaa
sbb
loopne
repz
mov
test
jno
sub
inc
cltd
movsl
js
nop
mov
pop
lea
or
or
jns
jno
mov
push
mov
add
xor
sbb
ljmp
dec
lods
leave
mov
shlb
xchg
shlb
push
shrb
mov
js
stos
push
mov
xchg
cmpsb
push
push
mov
neg
cmp
mov
jl
cmc
or
mov
insl
subl
and
loopne
xchg
lock
mov
adc
ret
repnz
cli
jo
sbb
popl
mov
in
mov
inc
es
pop
mov
cmp
ret
pop
push
mov
jnp
add
movsb
inc
mov
mov
int
mov
xchg
outsl
out
push
add
ljmp
fsubrl
pop
std
repnz
rclb
xor
xchg
int
mov
iret
push
jne
fistps
lock
xchg
or
pop
mov
xorl
or
jno
loope
xchg
in
rcl
pop
or
xor
dec
fwait
movsb
sbb
addr16
sub
movsb
fldenv
imul
bnd
fists
adc
insb
xchg
dec
or
sti
aaa
dec
push
jae
add
cmpsl
aam
iret
les
fistpll
hlt
mov
into
sub
jbe
inc
lods
outsb
add
gs
pop
mov
insl
cmp
mov
adc
andl
rcl
pop
jecxz
cli
cld
xor
lcall
bound
jne
sub
xorb
mov
pop
arpl
jp
jg
and
stos
testb
push
mov
int3
jae
scas
push
es
dec
outsl
pop
out
imul
add
pop
xlat
push
sbb
lock
jecxz
orl
ret
jns
push
fcompl
cli
scas
sbb
imul
ds
fnsave
xchg
scas
adc
les
cmp
cmp
inc
jae
pop
loope
int
xor
add
push
lods
push
fcoml
hlt
pop
cmp
pop
add
pushw
jge
push
mov
jo
cli
add
sub
and
pop
sahf
shrb
out
cmp
imul
addb
add
add
adc
aad
dec
addr16
adc
xor
mov
and
test
adcl
lcall
sub
cli
sarb
bound
jl
sbb
jno
add
inc
add
arpl
scas
mov
adc
clc
lods
jmp
sub
push
imul
pop
dec
insb
lcall
lock
add
popf
push
std
mov
stos
cmp
cmp
test
adc
ds
not
rolb
inc
mov
aaa
add
mov
fistps
pop
fmuls
adc
mov
nop
sbb
mov
mov
pop
inc
add
sub
adc
mov
stos
cmpsb
mov
xor
fwait
sub
jno
stc
into
outsl
pop
int3
push
fucomi
js
pop
ror
xchg
mov
addr16
fcompl
mov
jne
arpl
das
int3
into
int3
scas
push
jno
cwtl
xor
adc
sbb
cmpsl
dec
hlt
jecxz
es
sahf
test
adc
out
in
inc
adc
xor
in
pop
sti
loop
cmp
rcrb
mov
cltd
ficompl
stos
pop
adc
sbb
leave
inc
scas
in
bound
mov
dec
push
mov
test
ds
aas
sbb
lcall
sbb
mov
fs
negl
jg
mov
jno
addl
xor
sahf
sahf
inc
fstl
xchg
std
xchg
pop
pop
mov
inc
clc
mov
sbb
mov
rol
mov
fnstenv
ljmp
arpl
inc
mov
or
out
sahf
cwtl
aam
mull
mov
add
push
std
jle
xchg
lahf
cmp
adc
stos
daa
cld
out
mov
fstps
and
xor
imul
popa
push
inc
mov
ret
push
addps
pop
les
mov
pop
add
dec
push
xlat
stos
dec
dec
sub
enter
les
cmc
adc
dec
and
push
stc
roll
outsl
pop
clc
adc
clc
xchg
lret
jbe
repz
movsl
push
flds
popf
imul
mov
and
adc
or
adc
push
xor
adc
lods
call
aad
mov
leave
mov
dec
fwait
pop
cmpsl
jne
test
mov
fsubs
cmp
jmp
shlb
xchg
push
push
sarb
lcall
sub
shrb
jmp
fbstp
dec
nop
adc
push
mov
cli
or
test
and
loope
test
mov
negb
cmpb
mov
or
mov
repnz
or
mov
outsl
cmpsl
or
leave
outsb
fidivrs
mov
jl
fcmovnb
popa
stos
cmp
lock
inc
jecxz
rcrb
sub
aam
sub
sub
jecxz
push
imul
out
aam
test
out
out
inc
push
pop
push
xor
leave
test
adc
arpl
int3
cmp
test
xchg
les
pop
adc
cli
rorl
jg
mov
movsb
inc
jns
stc
fldcw
lods
mov
sbb
inc
mov
dec
lret
daa
jne
add
mul
xor
lret
push
add
xor
inc
rcrl
push
data16
not
or
and
dec
clc
jbe
lock
or
fdivs
and
leave
cmpsb
lret
pop
imul
xchg
pop
js
cmp
popf
outsl
push
mov
lcall
mov
lret
loop
pop
jmp
pop
out
cmpsb
cmp
test
pop
paddq
sbb
cld
gs
notl
out
fisttpl
lock
insb
cmp
dec
mov
inc
fsubs
jno
int
mov
dec
and
mov
push
pushf
ret
cmp
orl
xor
outsl
pop
cld
sub
jl
cmc
mov
mov
insl
adc
adc
push
push
pop
stos
push
out
clc
sbb
bound
sbb
mov
aam
imul
stos
jmp
ret
popa
inc
in
mov
call
mov
pop
mov
pop
push
cli
jae
pop
pop
into
mov
sti
xor
sub
mov
mov
test
cmp
cmpsb
lods
pop
aas
sti
push
xchg
lret
fiadds
sub
xchg
mov
mov
jnp
repz
sbb
hlt
bound
les
inc
xchg
lods
gs
pushw
inc
xchg
jg
sti
xlat
mov
and
and
cld
adcb
dec
push
into
xor
cwtl
mov
adc
push
lods
mov
pop
into
je
out
popa
testb
cltd
add
add
hlt
sub
inc
rorb
scas
pop
push
mov
mov
lea
shlb
adc
mov
ss
daa
or
sub
xchg
or
mov
icebp
sbb
insl
aam
popf
pop
arpl
clc
dec
in
adc
shll
xchg
cltd
ss
lock
jo
push
mov
push
imul
inc
jmp
add
aad
add
inc
or
push
or
imul
in
sub
ret
adc
mov
dec
data16
jb
wrmsr
push
orl
dec
sahf
push
lret
jecxz
mov
das
aad
dec
insl
xor
or
ficoml
loopne
arpl
test
rorl
repnz
inc
hlt
jnp
xor
outsb
xchg
lea
mov
data16
push
pop
fcom
pop
fimull
insl
ds
jmp
xchg
lds
xchg
ja
push
cmp
xor
push
lret
std
mov
cmp
inc
pop
sub
mov
daa
aas
mov
jbe
push
ss
mov
xchg
sub
sahf
jbe
push
hlt
mov
iret
xchg
shlb
push
ss
out
fdivrl
out
xchg
lahf
mov
sbb
sub
cmpsl
stos
and
mov
iret
or
out
and
jmp
adc
imul
push
cmp
sti
inc
shl
bound
inc
cmp
add
push
pop
fisttpl
jo
adc
rorb
cmpsb
imul
mov
out
mov
mov
out
clc
add
sbbb
pop
stc
fs
vmovdqu
xlat
xor
sbb
fs
mov
sar
jbe
divl
sti
testb
adc
ds
dec
scas
lret
orl
xchg
pushf
push
lcall
jmp
scas
mov
push
enter
or
or
cld
iret
or
add
cli
pop
orb
pop
and
mov
sbb
sbb
bound
jg
push
out
std
add
movsb
jmp
push
lcall
jg
mov
sbb
cmp
push
mov
jmp
repnz
pop
ret
cmp
push
sbb
das
pushf
sarb
push
mov
and
test
insl
mov
loope
xor
das
cmp
mov
cltd
rolb
add
xlat
cmp
mov
sub
fs
roll
mov
je
ja
insl
jns
in
popf
mov
xlat
loope
pop
jle
out
mov
jmp
xor
dec
or
jge
ljmp
cli
push
xchg
mov
inc
movsb
cmp
inc
shll
aaa
mov
jp
int
stos
insb
in
pop
decl
lods
lds
pop
enter
or
test
cmpl
mov
les
jmp
popa
mov
cmp
mov
mov
pop
shl
lea
ljmp
adc
ret
push
and
test
cmp
inc
shll
movsl
pusha
pop
pop
in
dec
mov
loope
mov
clc
lock
adc
jne
insb
mov
adc
andl
jne
test
pop
stos
push
cmpl
sbb
dec
push
ret
cmp
inc
sub
push
rorb
cmp
imul
sbb
push
out
cmpsb
sbb
scas
mov
cmp
mov
adc
popf
pxor
xchg
mov
testl
xchg
mov
pusha
enter
sbb
cmpl
cld
es
cs
mov
shll
clc
dec
dec
js
lods
sarl
jnp
cmp
xor
pop
cmp
adc
fwait
jbe
sub
mov
jb
int3
mov
sahf
scas
dec
cmc
or
mov
les
add
sbb
xchg
data16
dec
pusha
mov
cli
adc
or
dec
cmp
dec
jo
xchg
dec
dec
decb
loope
sbb
out
stos
shlb
add
push
mov
cli
js
ret
shrb
jns
gs
xor
cwtl
inc
add
sbb
mov
addb
inc
jbe
aad
js
stos
fisttps
adc
xchg
in
stos
inc
mov
enter
insb
mov
xchg
mov
pop
pop
aad
int3
movsb
nop
push
mov
jmp
dec
jno
hlt
fcoml
jns
aaa
sbb
aaa
sbb
fwait
pop
adc
xchg
in
outsb
xor
xor
and
test
jmp
in
or
xor
jbe
rol
lret
and
push
pop
lret
outsl
loope
dec
test
adc
icebp
into
and
mov
sub
sbb
jge
repnz
dec
inc
shr
xor
call
add
add
mov
pop
jno
outsl
gs
out
insb
pop
fimuls
jg
imul
cs
jne
fmull
inc
daa
aad
push
push
clc
mov
sub
test
mov
stos
addr16
fcom
std
add
pop
repz
imulb
ljmp
imul
bnd
test
sarl
negl
dec
mov
and
aad
push
dec
and
imul
ja
js
rcrl
adc
ljmp
imul
jne
mov
pusha
pusha
dec
xor
dec
imul
and
test
pop
cmp
and
pop
fsubrs
fdivr
stos
add
insl
xor
cwtl
pop
popa
mov
adc
or
lret
dec
add
push
adc
popaw
xchg
in
adc
outsl
jnp
fisubrs
aad
mov
add
stos
dec
xchg
sbb
ss
xor
add
cmp
or
push
aam
xchg
scas
jo
shll
dec
push
pop
cli
mov
push
xchg
and
and
movsl
add
cmpsb
outsl
push
in
addl
dec
popa
sbb
andl
cmp
adc
cmp
sbb
icebp
mov
push
repz
push
sti
subps
cltd
data16
scas
xchg
pop
add
xchg
pop
push
adc
stc
xchg
cwtl
es
push
jg
cmp
mov
fiaddl
shll
push
imul
xlat
lea
addr16
mov
adc
pop
cli
cmp
pop
inc
xor
mov
dec
or
mov
adc
xor
data16
xor
pop
hlt
enter
icebp
pushf
cmp
cmp
xchg
gs
es
loope
ret
movb
xchg
push
or
inc
sbb
jno
jbe
into
lahf
mov
jl
jns
mov
and
pop
pop
roll
nop
out
sub
negl
cmc
sub
test
bound
pusha
jl
fidivs
pop
jp
cmpsl
jno
scas
aas
push
repnz
ljmp
mov
cmp
push
mov
stos
sbb
loopne
mov
mov
pushfw
xchg
push
push
inc
test
hlt
dec
cld
pop
add
sahf
adc
jecxz
mov
lahf
pop
xchg
dec
in
jecxz
stos
or
test
push
fmull
sub
ss
adc
xor
arpl
pop
sub
mov
sub
out
cwtl
addr16
popa
sub
adc
ds
jb
sub
shr
test
push
mov
lret
inc
mov
aad
daa
fcomps
adc
pop
jmp
pop
mov
pop
mov
mov
mov
push
fadd
rcrl
fcoms
out
dec
out
mov
jae
dec
adc
adc
sbb
sbb
pop
push
xor
pop
push
xchg
adcl
add
push
sub
push
stc
mov
mov
out
data16
inc
xchg
daa
push
mov
mov
sbb
xor
lea
push
pop
cs
jae
clts
inc
xchg
sbb
sbb
outsl
cmp
lods
insb
mov
jecxz
fnstcw
imul
sub
lret
dec
jno
mov
cmp
inc
dec
mov
fdiv
jmp
sub
xor
shll
test
test
leave
shll
jnp
scas
inc
adc
daa
testl
test
clc
mov
pop
mov
jl
mov
das
mov
out
fdivl
xlat
cmp
or
and
adc
add
sub
add
test
aaa
or
aaa
les
pop
xor
enter
lahf
push
jae
loop
dec
je
pop
sub
push
in
fildll
aam
ret
push
mov
xchg
mov
rclb
ljmp
insl
cld
mov
jbe
inc
inc
fcomip
fisttpl
cmp
int
cmp
dec
pop
mov
lret
out
lret
jp
pop
stos
lea
stos
add
xchg
cmp
pop
inc
and
imul
jle
mov
jns
push
rorb
scas
cmp
mov
add
int
mov
inc
jecxz
pop
ds
inc
out
popl
mov
mov
lods
ds
adc
inc
xor
in
sti
push
imulb
mov
adc
sti
pop
pop
sti
push
fstpl
xchg
xorb
lea
sub
mov
mov
cmpsb
or
jae
mov
lahf
call
bnd
lret
lea
add
testl
fwait
bound
jo
inc
pop
dec
mov
adc
leave
dec
add
dec
xchg
std
mov
fsubrl
daa
push
inc
push
cltd
sub
loopne
sub
insb
mov
popa
arpl
inc
xchg
fstps
mov
js
pop
ss
jecxz
lock
out
pop
jnp
lods
jge
pop
dec
ret
loop
mov
enter
sbb
jecxz
push
sub
rcrb
pushf
cmovb
lret
test
mov
in
sarb
xchg
mov
fmull
dec
sbb
and
and
arpl
daa
sahf
xchg
mov
cmp
cmp
sub
adc
iretw
mov
fsts
mov
xchg
push
xchg
sti
mov
jae
hlt
or
dec
lcall
aas
mov
es
or
ja
xor
std
js
movsb
imulb
pop
stos
xchg
or
cmp
int3
in
sub
decb
mov
pop
jbe
rcrb
xor
jne
add
inc
xor
fnstenv
rclb
dec
sbb
lods
jg
cltd
aaa
xchg
je
dec
nop
out
icebp
test
pushf
mov
sbb
lods
push
sbb
mov
jle
das
outsl
pop
cld
jp
mov
rcl
in
mov
jbe
cmp
orb
daa
sub
out
mov
iret
lea
sti
dec
add
mov
lods
xchg
dec
jnp
cld
cltd
jnp
push
xor
jo
daa
pop
cwtl
mov
fmulp
nop
dec
mov
mov
push
orb
add
dec
into
decb
pop
leave
adc
xchg
sarb
mov
addr16
jp
pop
data16
ljmp
aad
iret
dec
imul
aas
aad
ret
dec
pop
out
aaa
pop
push
inc
mov
stc
out
or
andb
pop
repz
cwtl
xchg
jbe
xor
jo
mov
adc
fldl
push
and
mov
cmp
jno
adc
loop
add
cmp
imul
sbb
les
movsl
adc
and
xchg
jns
andb
jb
xor
mov
fsubrl
jbe
paddd
xor
ljmp
sbbl
movsl
push
mov
clc
lea
cmp
add
mov
imul
mov
mov
sub
add
sbb
or
or
flds
pop
sbb
insb
mov
sub
push
fdivl
jmp
mov
js
dec
dec
cmp
rcrl
clc
outsl
jl
vcvtpd2dqy
scas
movsb
pop
pushf
fdivl
mov
test
or
adcl
jg
cmp
repnz
and
subl
pop
mov
int3
or
inc
push
and
jae
fs
jl
hlt
int3
rcll
add
push
negl
cld
out
sub
or
adc
iret
iret
push
cmc
jl
push
lods
ficoml
lret
ds
outsl
sbb
int
mov
xor
cmp
aam
push
inc
fbstp
pop
pop
jecxz
sahf
fbld
mov
rclb
das
mov
sub
mov
mov
addr16
inc
jno
or
cli
test
adc
push
stos
stos
testl
in
pop
sbb
mov
fsubl
mov
pop
outsb
jl
jns
shll
jae
pop
mov
call
mov
inc
arpl
pushf
and
sbb
cwtl
or
cli
lock
xchg
add
jnp
cwtl
arpl
insl
out
jp
xchg
mov
mov
fadds
imul
mov
xor
in
lods
scas
popa
cltd
add
sahf
mov
mov
jno
scas
sbb
push
pushf
push
sub
clc
sbb
xlat
mov
sub
test
fiadds
jo
cmpsb
imul
into
inc
sub
mov
movsb
std
jmp
addl
lock
mov
adc
mov
pop
ret
add
mov
pop
cwtl
test
in
adc
shlb
notl
nop
lds
push
stos
add
lret
in
leave
out
ljmp
lret
call
xchg
jmp
ret
rolb
bound
mov
mov
add
cwtl
cmp
repnz
aam
daa
or
sub
loop
dec
pop
xchg
aam
push
loopne
leave
mov
mov
mov
std
je
and
aam
fs
pop
add
xor
out
mov
mov
or
mov
cmp
sub
pop
aas
sbb
xchg
mov
imul
adc
outsb
loop
xchg
and
mov
mov
in
cmpsb
push
cmpsb
xor
and
arpl
sbbb
xor
in
cmp
mov
fidivl
les
sbb
sahf
sbbb
push
xchg
mov
push
cmp
repz
in
mov
mov
outsl
out
sti
cs
cmp
ret
lds
push
outsl
mov
inc
pop
cmpsl
in
dec
test
sbb
or
je
mov
cli
std
outsl
adc
pop
fisttpl
sub
lret
or
test
sub
ljmp
iret
cmpsl
scas
add
inc
int3
pushf
icebp
jb
jae
call
clc
mov
push
mov
xchg
aaa
inc
xor
out
mov
push
mov
out
shr
jl
or
repz
cmp
test
das
pop
add
addr16
rcll
push
add
adc
adc
std
xchg
sub
mov
mov
aam
iret
and
sub
fdivrp
psrad
pinsrw
sahf
sub
fnstenv
mov
mov
rdtsc
pop
inc
dec
mull
out
pop
adc
das
mov
mul
cs
ficompl
cmp
ret
pop
xchg
inc
dec
out
fs
pop
push
lds
or
jae
cmpsl
movsl
adc
pop
daa
jl
std
inc
mov
xor
pop
jg
inc
xchg
xchg
ss
mov
jne
mov
call
push
mov
iret
cmpsl
add
gs
loopne
push
fisubl
out
and
mov
imul
in
scas
popa
jnp,pt
imul
cmp
xchg
pop
inc
es
add
out
mov
xor
push
das
ror
mov
pushf
add
cld
das
jae
cmp
cmp
into
rcrb
cmp
or
push
mov
out
push
jae
push
xor
imul
jge
jmp
test
enter
daa
sbb
inc
sbbb
lock
dec
sbb
inc
adc
lds
scas
mov
das
push
pop
push
sbb
faddl
jb
mov
pop
push
fmulp
cwtl
mov
jmp
xor
lret
jb
aas
mov
lods
inc
out
and
mov
shrb
in
push
xor
push
pop
stos
mov
rcr
imul
shll
or
adc
scas
dec
or
sub
xor
add
jmp
pushf
xor
xchg
mov
or
adcl
sbb
test
movzbl
inc
adc
es
lea
lahf
in
inc
enter
outsb
lds
rcrb
xlat
jg
fbstp
inc
pushf
addr16
je
fidivl
inc
mov
scas
lahf
sbb
add
cmpl
sbb
aam
xchg
mov
sbb
jp
xchg
jmp
adcl
pop
sahf
cltd
mov
inc
daa
add
aas
call
int3
dec
ret
iret
add
sub
mov
mov
xchg
lret
mov
lret
mov
imul
sbb
mov
pop
rcrl
inc
and
repnz
cwtl
mov
adc
jmp
enter
out
or
xor
popf
sbb
outsl
add
sub
xchg
enter
sbb
idivl
add
xchg
lods
test
popa
or
int
xchg
jg
popa
movsl
push
insb
mov
scas
das
xlat
mov
enter
lret
movsl
xlat
div
out
xchg
xchg
sub
enter
and
dec
adc
test
lahf
jno
cmpsl
pop
pop
in
fwait
sarb
cmpsl
test
fildl
jmp
pop
cmpsl
bound
inc
test
jge
pop
inc
ss
mov
cmpsl
pop
rcll
lock
mov
cmp
or
fimuls
cmp
or
les
cmp
dec
aad
sub
movsl
cmpl
out
dec
adc
in
adc
popa
repz
add
sub
mov
loopne
or
xchg
mov
inc
outsb
stc
sbb
dec
popw
pop
or
test
xor
arpl
xchg
mov
mull
dec
add
scas
stc
repz
aad
cmp
or
aam
fdivrl
es
cmp
pop
aad
test
ret
dec
push
push
dec
sbb
cmp
dec
pop
sbb
push
dec
sbb
shll
adc
insl
test
add
lods
std
lods
mov
xlat
mov
cli
mov
mov
jp
data16
pop
dec
insb
mov
push
stos
pop
sbb
jecxz,pt
arpl
and
lods
bound
jecxz
shlb
jmp
outsb
xchg
push
mov
fwait
mov
sarb
inc
stos
popf
test
imul
fldcw
xchg
aad
mov
js
das
shr
ja
mov
jge
cmp
push
sbb
inc
test
stos
xchg
in
lahf
push
sub
cmp
fildll
rcll
repz
ljmp
add
dec
adc
sub
call
xor
mov
jl
aaa
pop
push
pop
pop
xchg
jns
aaa
mov
adc
push
insb
repz
leave
clc
idivl
sub
scas
fimuls
add
add
mov
mov
in
insb
jb
imul
les
push
adc
sbb
cmpb
push
ds
mov
int
sub
into
scas
dec
flds
sbb
test
divl
call
xchg
gs
dec
or
mov
or
add
jmp
push
cmc
imul
dec
ret
jge
pop
sbb
pop
pop
nop
jne
inc
lea
in
inc
inc
sub
adc
or
cwtl
rcrb
das
adc
sbb
mov
xchg
mov
xor
mov
dec
scas
rcrb
js
sbb
aas
test
aaa
aad
cmp
adc
loope
xchg
sbb
mov
shrb
rcll
les
fnstcw
or
mov
notl
lea
js
jecxz
cmp
lods
jo
pop
xchg
ljmp
lods
test
cwtl
jnp
repz
sbb
mov
mov
inc
adc
mov
xchg
jne
cmp
sti
sub
xchg
popa
cld
or
ja
xor
add
fst
lret
mov
aad
or
outsb
int
cmpsl
jne
inc
inc
lds
pop
outsb
push
nop
mov
fs
inc
div
adcb
adc
xor
xlat
ja
xchg
add
fcmovb
dec
jmp
lods
icebp
mov
and
ret
cmp
std
shll
cmp
pop
push
mov
dec
mov
mov
mov
push
push
lcall
aas
addb
popa
mov
xor
xchg
xchg
dec
dec
or
cmpsl
xor
push
sbb
jae
dec
pop
pop
sarl
dec
negb
ficomps
fidivs
or
lds
addr16
in
mov
imul
jmp
in
and
or
cmc
in
mov
in
cs
fnstsw
jmp
inc
test
mov
pop
and
inc
or
popa
stos
popf
push
lock
or
popf
push
inc
imul
int3
pop
and
xchg
mov
mov
into
pop
mov
lods
and
sti
mov
addr16
paddusb
iret
incb
xchg
das
jae
pop
je
inc
addb
mov
movsl
mov
lods
add
jl
mov
pop
push
push
ss
add
sub
jg
mov
push
mov
data16
pop
pop
pop
lea
outsl
aad
mov
fcmovne
stc
sarl
dec
or
jmp
push
pop
aam
es
sti
out
sub
aas
jp
bound
pop
adc
test
loopne
addb
jne
sub
shrl
dec
xchg
pop
lret
and
add
icebp
stos
sarl
jmp
rcrl
push
xlat
sbb
insb
mov
mov
and
add
popf
pop
test
cmp
sbb
aad
rclb
xchg
outsb
adc
pop
pop
out
mov
dec
or
and
test
std
pop
jae
ja
clc
push
jge
outsl
push
gs
lret
push
push
in
out
mov
push
jb
popf
jg
bound
bound
mov
or
cmp
addr16
pusha
xchg
xor
and
cmp
std
jb
int
xchg
mov
dec
cli
cli
aad
and
dec
inc
xchg
push
ret
pusha
add
arpl
in
mov
xchg
dec
imul
mov
xchg
das
pop
rcrb
sarl
loope
mov
in
cmpsl
in
pop
xchg
dec
fsub
iret
fprem1
ret
fldt
leave
jb
inc
jns
loop
into
bound
jp
mov
scas
push
popf
xor
ret
int3
adc
fmull
mov
loopne
movsb
jg
ljmp
rcrl
cwtl
sub
mov
sbb
sbb
lret
lahf
and
jecxz
xor
adc
or
jmp
test
mov
addr16
out
mov
cmp
cmpsb
xchg
xor
sbb
pop
jb
std
sarb
mov
xlat
scas
adc
into
dec
mov
pop
push
adc
lds
adc
pop
and
pop
push
je
jns
leave
push
jo
imul
imul
cltd
xor
sbb
arpl
movsl
jle
enter
mov
ret
inc
xor
sbb
xor
out
in
adc
cmpsl
insl
bound
in
jl
popf
push
xlat
andb
loopne
xor
stc
leave
jmp
dec
cltd
adc
into
loop
call
and
ljmp
mov
xor
jmp
xchg
cmpsl
mov
sbb
xor
cltd
aam
insb
mov
mov
loope
push
jne
pop
add
fstpl
or
sub
loopne
pop
mov
subb
jne
ss
mov
fwait
call
inc
test
jne
push
andb
jl
stos
icebp
pop
dec
orl
leave
sarb
push
ret
jge
cmp
add
in
mov
inc
and
testb
xor
add
xchg
ja
jl
div
xor
pop
daa
jp
or
pop
fsubrs
push
stos
gs
sbb
jge
mov
jge
push
fwait
or
insb
push
movsb
jo
repz
out
add
mov
rcrl
dec
lret
lds
push
sub
inc
cmpl
popa
lea
mov
ficoms
and
add
sub
addr16
inc
mov
xor
aad
fcmovnbe
test
pusha
lcall
mov
push
inc
in
cli
jb
bound
sbb
call
mov
fisttpl
push
sti
jg
dec
mov
add
test
movsl
mov
mov
fidivrl
mov
sub
add
ret
into
dec
push
inc
cmp
faddl
cmp
popl
repz
cmp
je
icebp
and
push
push
es
sub
aaa
jp
sub
xor
pop
xchg
cmp
ret
jle
les
mov
push
xchg
cmp
inc
inc
dec
jno
aam
pop
dec
mov
shll
sbb
mov
inc
into
repz
adc
and
test
cld
fdivrl
sub
cmp
in
mov
lcall
or
nop
mov
jae
sub
inc
aam
or
xchg
lret
fcomip
sub
push
aad
adc
push
test
jno
adcl
cmpsb
sbb
push
mov
std
push
lds
lcall
int
stc
ret
mov
jl
inc
es
and
mov
fnstenv
scas
lods
inc
jnp
cli
pop
aam
cmp
loopne
cmpl
aam
pop
cmp
int3
fdivs
js
adc
cmc
fiadds
jno
call
aas
in
data16
push
dec
imul
xchg
dec
sub
je
jp
mov
std
sub
xchg
inc
aad
xchg
daa
sti
pop
pop
cld
bound
mov
dec
fsubrl
jae
push
jo
das
bound
add
in
inc
mov
sarl
add
dec
aad
jle
test
mov
xor
mov
lock
adc
mov
sub
cmp
testl
pop
imul
in
lret
add
leave
pop
aaa
fucomi
mov
adc
push
and
not
subl
add
add
mov
gs
fcomps
lret
gs
dec
fs
xor
std
addr16
mov
out
inc
lods
das
or
in
mov
mov
dec
sahf
cld
sbb
add
adc
jl,pn
shr
push
fnsave
pop
sub
pop
js
sbb
daa
cs
push
lret
lahf
adc
mov
add
fsubs
test
mov
lods
sbb
push
xor
inc
ss
adcb
lods
insb
adc
mov
jge
das
int
es
push
je
test
pop
out
mov
or
sub
mov
mov
shrl
mov
imul
mov
addl
fdivr
mov
ret
mov
xchg
or
lret
jecxz
mov
mov
xor
fisttpl
push
sbb
cmc
in
push
dec
aaa
pop
mov
jno
cmpsb
ret
cwtl
mov
mov
push
loopne
out
and
popl
pop
std
aad
or
mov
xchg
sub
in
addb
in
repnz
scas
jl
xchg
out
lods
push
movsl
cmp
enter
pop
push
shlb
jp
lcall
and
xchg
push
lods
out
xchg
pushf
mov
adc
mov
daa
ret
adc
or
jmp
adc
fisttpl
mov
xor
ljmp
mov
push
push
jns
push
aas
jmp
sbb
stos
xchg
daa
and
add
mov
fisttpll
movsl
adc
fs
imul
dec
xor
mov
das
cld
pop
cmp
pop
push
mov
fildl
cs
inc
pop
aad
xor
jne
pop
lcall
mov
adc
cli
movsb
push
dec
iret
dec
dec
test
dec
mov
and
aam
pop
lcall
sar
mov
fsubrs
inc
jp
dec
inc
push
loope
pushf
xor
movsb
xlat
mov
popa
sbb
sbb
loop
push
sub
mov
sti
leave
sbbl
out
hlt
loope
sbb
push
or
mov
enter
mov
dec
mov
mov
jae
jno
dec
mov
or
cmp
aam
fwait
enter
cmp
xchg
adc
inc
fnsave
popa
adc
cmp
lea
sub
repz
aam
out
pop
and
inc
add
into
adc
test
rcr
push
jge
insl
push
lods
cmp
adc
mov
mov
movb
inc
lods
pop
ja
pushl
xchg
mov
adc
loopne
aam
pop
mov
pushf
sub
mov
mov
push
loopne
cltd
mov
fwait
xchg
test
mov
mov
push
add
push
dec
mov
dec
lret
inc
fildl
mov
mov
push
cltd
dec
add
scas
pop
inc
or
dec
mov
or
sub
stos
aam
stos
shlb
int3
bnd
in
rcrl
cmc
mov
dec
dec
imul
lock
jl
icebp
mov
pop
add
ljmp
cmp
pop
lea
nop
lcall
scas
loope
or
cmp
dec
mov
out
in
fs
pop
sbb
fisubrl
fisubs
jns
lods
jno
sub
xor
dec
shlb
es
fwait
pop
insb
and
addr16
and
outsb
movsl
push
sti
fildl
cmp
xor
push
push
movsl
xor
jg
jl
jbe
sub
inc
xchg
insb
mov
and
aas
pop
loope
cli
fiadds
out
xchg
lret
xor
push
adc
in
fcomps
jmp
adc
push
mov
scas
stc
imul
fstpl
pop
inc
mov
push
add
bnd
sub
adc
sbb
xor
jge
lret
icebp
shrb
shl
push
cmpsb
iret
xchg
ret
rorl
jmp
arpl
lcall
les
add
jge
jge
inc
lock
dec
jns
into
cmp
sbb
adc
xchg
adc
mov
dec
mov
jno
mov
jne
inc
or
mov
scas
aas
pop
jo
les
ljmp
or
and
xchg
or
test
and
js
lock
cli
stc
iret
clc
je
dec
jl
in
js
js
repz
mov
data16
repz
enter
push
mov
mov
fbld
mov
push
fisttpl
rcrl
cwtl
and
jo
xchg
mov
call
repz
pop
add
and
cmp
pop
jbe
iret
nop
mov
dec
jge
mov
push
das
fwait
mov
cmpsb
inc
pop
inc
push
ficompl
add
popa
or
bound
ss
pop
mov
mov
inc
cltd
lahf
ret
loop
mov
stc
jmp
pop
push
clc
arpl
pushf
clc
out
imul
mov
shrl
add
jno
lea
dec
adc
sbbb
fs
sbb
int3
les
inc
sti
cmc
mov
dec
adc
scas
mov
aam
roll
xchg
int3
jecxz
stos
call
and
dec
sbb
out
jg
jl
cmp
out
inc
pusha
divb
mov
push
inc
jo
and
ret
sarl
inc
xor
cmpsb
loop
adc
cmp
lods
fidivrl
mov
xchg
push
and
and
push
aas
xchg
test
mov
inc
pop
xchg
dec
fnsave
imul
push
xor
cmp
js
cs
xchg
xchg
ret
xchg
jo
or
mov
adc
sbb
ret
iret
scas
scas
push
sbb
test
pop
nop
cmpsb
daa
fildl
push
xchg
adc
push
and
outsb
fisubrl
xchg
jp
mov
sahf
push
inc
mov
nop
out
and
cld
cltd
add
pop
fs
cmpsl
pop
in
aam
rclb
mov
inc
add
lods
roll
rcrl
out
icebp
mov
outsb
add
cmp
jns
inc
mov
sbb
sub
mov
mov
mov
pusha
jnp
push
and
ljmp
mov
stos
add
ds
sbb
test
out
repz
imul
sub
push
mov
mov
movsb
lea
les
add
aad
dec
xchg
push
fcomip
arpl
jbe
jecxz
jl
sbb
mov
scas
stos
cltd
jnp
out
or
add
repnz
mov
into
jg
sub
ljmp
insl
xor
inc
and
movsb
push
out
or
cmc
in
mov
stc
in
cmpsl
dec
jno
dec
add
cmp
push
cltd
hlt
rcll
arpl
repz
repnz
dec
xor
mov
adc
mov
jo
or
ds
imulb
addr16
mov
cltd
add
push
out
adc
out
dec
insb
adc
mov
adc
andb
insl
fwait
cmp
adc
xchg
add
pop
mov
jmp
nop
push
pop
xor
mov
out
dec
loopne
jbe
in
in
adc
mov
imul
jnp
jne
push
mov
push
cwtl
sub
andl
mov
movsl
xchg
adc
xor
aas
jle
jne
push
sbb
fisttpll
sti
mov
pop
mov
lret
cs
std
xchg
js
icebp
adc
or
lcall
sahf
aaa
enter
or
xor
and
mov
sub
jns
xlat
jl
pusha
and
push
add
mov
lret
adc
outsb
popa
mov
sub
fstl
testb
pusha
push
repz
add
out
ja
dec
cmc
shrb
arpl
mov
add
pop
fiaddl
jno
movsb
mull
std
push
cltd
shufps
call
lcall
pop
mov
mov
mov
rcll
aam
dec
adc
xor
xor
mov
jge
cmpsb
addb
mov
aam
add
je
lret
push
out
sbb
xchg
mov
mov
testl
push
add
add
ret
xor
into
sbb
cmp
sahf
xor
sti
lods
jne
adc
lock
out
and
push
mov
sbb
mov
loope
enter
sbb
add
ss
mov
cmp
xchg
inc
xchg
mov
int3
mov
cmp
sbb
mov
xor
xlat
lret
push
and
jmp
int
insl
insl
pop
pop
xchg
jl
inc
jae
subl
adc
fsubp
xchg
fadds
pop
sub
fs
int3
shrb
stc
mov
sub
fimull
nop
xor
lea
jb
jo
inc
ss
and
mov
std
repz
inc
mov
test
aam
mov
push
test
aas
lret
dec
adc
inc
inc
cmp
mov
pop
outsl
paddsw
loop
add
leave
inc
push
fnsetpm(287
aad
cmp
adc
mov
and
dec
cmp
fmuls
dec
loopne
pop
jecxz
push
jmp
roll
repnz
pop
in
jno
or
arpl
jp
es
sub
int3
xlat
sbb
jns
mov
dec
jno
in
add
xchg
push
ret
xchg
mov
lret
jns
aaa
jp
shr
rorb
add
mov
leave
xlat
mov
cmp
pop
dec
lahf
adc
sub
adc
mov
rol
mov
xor
or
jo
cmp
scas
lds
inc
sbb
out
mov
or
mov
push
lds
fdivrl
sub
adc
jb
cld
jp
aad
add
mov
rcrl
push
dec
sub
inc
shl
fwait
sub
out
out
push
in
or
and
sub
jmp
sub
adc
push
push
stc
or
sbb
mov
or
push
push
lds
cmp
pop
jo
inc
cmp
je
xchg
jne
decb
jmp
loopne
loope
and
xor
and
mov
hlt
stc
data16
scas
pop
out
sbb
dec
adc
mov
in
roll
inc
lret
inc
fbld
mov
repz
loope
cmp
pop
inc
cmpb
call
jge
pop
insl
xor
dec
shll
icebp
pop
mov
data16
ret
push
adc
rcrb
insb
push
iret
push
lods
lret
pushf
mov
push
inc
outsl
insl
xchg
js
sarl
mov
mov
jbe
and
mov
inc
sbb
mov
insb
or
loope
lret
or
add
jo
cwtl
das
stc
sti
mov
mov
fsubrp
sbb
mov
sbb
scas
and
mov
out
pop
add
testb
jae
pusha
pushf
pop
fsubl
adc
cmpl
bound
mov
mov
push
xchg
mov
mov
in
dec
lds
cmp
or
cmp
xchg
pusha
insl
lds
push
in
out
mov
leave
mov
push
inc
push
pop
mov
call
dec
rcl
mov
cmp
test
and
xor
mov
mov
and
scas
lcall
out
adc
sbb
mov
xchg
cs
and
decb
mov
es
movsl
sbb
cmc
cmpsb
std
dec
adc
cmp
out
in
outsl
sarb
pushf
cmp
fstpt
out
bound
pop
sub
orb
std
mov
dec
stc
mov
lea
lret
fsubrl
fcompl
inc
push
mov
shll
or
pop
sbb
dec
cmpsb
sbb
mov
jne
stos
jle
xchg
add
jge
mov
fists
lahf
ljmp
jnp
pop
mov
leave
pop
imul
aam
xor
lods
sbb
mov
dec
bound
jne
lods
push
mul
sub
xor
xorl
in
popa
and
dec
sub
inc
iret
dec
imul
jnp
stos
sbb
xchg
pop
mov
icebp
je
push
dec
xor
in
adc
out
sub
jae
dec
xchg
xor
cli
jl
mov
mov
jmp
inc
stos
daa
jbe
shll
inc
jno
jbe
dec
cli
fistpl
mov
jns
loopne
mov
lea
int
call
repnz
xor
xor
sbb
shrb
pop
push
sbb
sub
mov
mov
and
std
mov
insl
lods
sbb
mov
stos
or
pop
stos
dec
cld
xchg
jns,pn
ja
dec
outsl
mov
fstl
ljmp
add
or
dec
shll
cmp
cwtl
xorl
aaa
adc
movsb
ror
stos
mov
into
addb
mulb
sub
add
pop
pusha
and
lret
rcll
fwait
popa
cmp
sub
pop
push
add
cmp
iret
ret
inc
mov
and
push
sti
cmp
sbb
ss
in
pop
repnz
push
imul
cmp
loope,pt
mov
in
inc
roll
int
xor
dec
mov
pop
xor
mul
jno
repz
enter
inc
imul
mov
sbbl
fldl
stos
test
repnz
cmc
pop
repz
aas
mov
in
and
jmp
inc
jae
adc
adc
popa
xor
ljmp
repz
mov
adc
movsw
inc
cwtl
mov
add
shlb
dec
add
loopne
push
mov
lods
and
cli
lret
pushf
cltd
push
jecxz
lock
push
insb
icebp
xor
addr16
ficomps
lahf
int
jae
dec
push
sbb
jl
stc
scas
push
imul
jnp
movsb
mov
push
inc
sbb
popf
fs
push
inc
es
dec
sbb
adc
sub
std
aas
xlat
lds
adc
pop
andl
push
addr16
roll
fisubl
mov
cmp
lods
mov
ficomps
dec
jmp
push
fistpl
arpl
int3
xor
pop
jl
and
call
xchg
sbbb
pop
dec
clc
xor
popa
nop
adc
sbb
jecxz
pop
decl
lret
and
fcomps
inc
add
mov
lret
lods
aas
popf
jmp
fisttps
push
sub
fwait
addr16
cwtl
ret
cmpsl
aaa
iret
xor
enter
cmpsb
inc
fistpl
mov
push
or
pop
pop
push
int
outsb
mov
jbe
popf
jae
addr16
imul
jne
cmpsl
rorl
sub
cmpsb
lods
mov
pop
jmp
mov
fdivs
xor
aaa
scas
out
test
push
push
push
aam
push
inc
add
cmc
or
xchg
shrb
mov
adc
add
adc
aaa
add
push
repz
push
gs
por
decl
into
xchg
js
daa
test
inc
mov
inc
ds
bound
sti
lds
rorb
stos
les
call
pop
cltd
shlb
out
jnp
leave
inc
sub
fwait
mov
dec
mov
fidivl
and
and
insl
faddp
push
neg
mov
std
subl
add
ret
mov
ret
adc
sub
loop
xchg
pop
or
lahf
and
sub
test
mov
sahf
and
fsub
and
pop
out
xchg
test
mov
pop
outsb
cmp
mov
push
lds
adc
dec
fmulp
xchg
cmpsb
rcrl
mov
inc
cmpsb
out
cs
jb
repz
aas
ljmp
pop
adc
mov
sbb
fbstp
add
adc
sbb
xor
test
xor
movsl
stos
jge
into
in
pop
adc
cmp
imul
jbe
arpl
jp
adc
out
bnd
fidivs
mov
xlat
andb
jo
push
xchg
imull
mov
cmpsl
mov
clc
cmpsl
test
xor
ja
sub
cmp
fimuls
xor
mov
jo
push
add
out
jae
pop
push
lds
pop
mov
sbb
or
dec
jg
or
repnz
push
addb
cmp
mov
in
cmp
adc
cwtl
pusha
mov
decl
loope
push
sbb
test
test
mov
ret
cmp
jno
xor
ret
daa
dec
jmp
pop
adc
inc
dec
xchg
in
pushf
and
sbb
xchg
dec
push
push
fcomip
and
aad
mov
mov
push
das
xchg
andl
das
out
test
into
clc
sbb
dec
inc
inc
xchg
cmp
jnp
data16
or
xor
in
jecxz
jl
and
cmpsl
aas
and
inc
adc
lods
dec
adc
inc
inc
fs
add
std
outsl
push
mov
daa
pop
pop
cmp
push
dec
mov
sub
sarb
out
push
xchg
inc
inc
adc
sub
in
push
jle
or
jno
mov
mov
xchg
cltd
sbb
cs
cmp
add
adc
ret
push
inc
jmp
je
mov
sub
outsb
xor
xor
jae
xchg
dec
decl
push
rcll
xor
xchg
adc
push
arpl
mov
ds
add
pop
inc
jbe
mov
pop
cltd
xor
test
aaa
mov
adc
sub
pop
mov
add
and
lock
mov
cmp
and
pop
scas
stos
jecxz
fsubrs
push
dec
inc
cmp
aad
push
iret
xlat
jo
pop
shr
mov
pop
xor
lcall
mov
push
adc
jnp
mov
push
push
sub
outsb
push
arpl
fisubl
pushf
sub
iret
repnz
sub
adc
jne
loopne
push
mov
lods
xchg
shl
lods
clc
mov
push
in
adc
cmp
mov
nop
pop
add
sahf
js
xor
stos
das
shll
dec
inc
adc
test
fmul
cmp
push
push
xor
and
test
add
loope
xchg
arpl
pop
in
sub
dec
jb
sub
enter
test
pop
mov
adc
pop
xlat
and
ja
mov
fcmovbe
icebp
rorb
inc
je
bound
adc
mov
das
xor
xchg
jle
into
jmp
adc
mov
cmc
jp
jle
fildll
cmp
int
push
inc
jmp
inc
mov
jns
or
ret
lahf
shll
xor
test
push
push
out
sub
add
or
fidivs
jecxz
ljmp
adc
ret
cmp
mov
shrl
xchg
subb
mov
sub
call
xchg
jle
pop
lods
push
fdivs
pop
jae
retw
jae
fcomps
movsl
cmpps
mov
bound
pop
or
ret
les
scas
xchg
imul
fadds
ret
ljmp
lcall
sub
or
jnp
push
or
mov
jl
mov
imul
push
sbb
out
xlat
push
xlat
sub
in
dec
cmp
arpl
sub
xchg
mov
repz
cli
mov
pop
or
loope
fadds
cmp
adc
data16
adc
jns
roll
push
out
repz
pushf
push
enter
xchg
dec
pop
mov
sarl
divl
sbb
cmp
pop
into
dec
cmp
rorb
xlat
lods
lods
lds
xor
mov
in
push
leave
and
xor
lret
xchg
loop
xor
inc
lods
sub
out
mov
cli
in
xor
icebp
andl
or
inc
cltd
cmp
enter
pop
xchg
stos
add
mov
mov
or
out
cmp
and
sbb
out
dec
mov
test
movl
cmp
adc
sub
cmp
hlt
mov
push
jle
loop
aaa
insl
add
sbb
mov
xlat
lret
repnz
and
cld
cmp
cmc
addl
repnz
add
lods
pop
in
lcall
ret
adc
stos
jl
sub
xor
jae
fxch
repz
lret
jle
xchg
outsl
adc
enter
mov
pop
push
push
or
xchg
xor
xchg
fadds
jmp
sub
push
add
daa
test
bound
xchg
jg
jmp
lret
pop
ja
mov
add
addb
mov
scas
fstps
cmc
adc
push
stos
push
pop
stos
ss
inc
pop
fldt
mov
scas
push
insb
in
cltd
mov
pushf
std
pop
aam
mov
add
call
mov
rcrb
stos
xchg
int
sar
enter
push
xorl
cmpsb
jmp
enter
cld
fisttps
mov
mov
pop
jb
or
fs
mov
fldl
aaa
shll
hlt
cmpsl
in
xor
or
mov
and
cmp
pop
jl
fistpl
mov
and
movsl
aam
sahf
int3
xchg
jbe
lret
dec
test
mov
inc
sbb
mov
cltd
or
nop
add
or
loope
pop
jns
inc
mov
dec
jmp
add
mov
mov
cmpsb
sarb
pop
es
pop
cwtl
inc
sub
sub
mov
inc
mov
cmc
jle
cmp
dec
ds
idivb
sub
hlt
xlat
lods
ja
push
test
in
mov
xor
cmp
ret
add
mov
adc
jne
incb
repnz
sbbl
push
je
ja
dec
mov
mov
or
pop
fstp
jbe
sbbl
test
mov
push
daa
js
arpl
push
mov
bnd
in
insl
ja
in
xchg
push
mov
bnd
cltd
sub
clc
enter
lds
xchg
jle
mov
repnz
loop
cmp
adc
jecxz
pop
inc
inc
jp
sahf
and
dec
fcoms
push
sbb
in
or
push
imul
and
ret
dec
and
sub
inc
jecxz
bound
pop
loopne
jno
xor
xchg
jns
jne
inc
add
test
aam
sub
jb
js
mov
ret
push
cs
xchg
mov
add
sub
cwtl
and
movb
mov
into
mov
jnp
sub
dec
or
jmp
popf
mov
and
iret
or
push
push
sbb
test
dec
jnp
inc
cmp
aam
and
add
pop
cmp
or
mov
outsb
lea
mov
outsl
jle
pop
ds
js
jae
mov
shrl
repnz
loop
and
pop
mov
adc
cli
add
pushf
jp
bnd
push
jne
cmp
push
sahf
or
mov
icebp
jne
hlt
xor
in
sbb
mov
sbb
bound
sahf
adc
ror
cmc
ret
sbb
sbb
mov
bound
dec
mov
and
adc
in
inc
mov
xor
xchg
lods
es
jmp
mov
sub
rclb
add
mov
push
jmp
cmp
aaa
sti
jae
add
cmpsb
sbb
add
dec
je
inc
or
dec
push
cmp
sbb
cmp
sbb
scas
mov
test
clc
cmp
sbb
decb
cli
scas
mov
mov
adc
in
and
push
call
push
add
lods
inc
imul
ret
fistpll
pop
dec
popf
xchg
mov
ljmp
push
or
inc
shl
sbb
aad
mov
lock
push
sbb
mov
das
pop
inc
sub
pop
sbb
pop
es
cmpsb
push
test
adc
mov
xor
out
and
xor
nop
mov
adc
fwait
sub
int
lds
cmp
mull
inc
mov
int
add
jecxz
out
adc
mov
sub
stc
lods
iret
lahf
jae
jp
jmp
lock
xchg
mov
iret
dec
or
xchg
gs
cmp
mov
les
cmp
push
cmp
pushf
popa
call
in
insb
outsb
pop
adc
cmp
jge
das
rcll
adcl
loope
stos
lock
je
mov
sbb
and
cli
testb
out
pop
mov
inc
sbb
inc
adc
sub
dec
js
mov
add
inc
test
add
xor
sbb
lcall
sub
dec
pop
das
add
into
fdivs
repz
push
add
in
popa
inc
dec
mov
out
dec
rorl
pop
in
sahf
je
adc
lret
mov
xor
ds
sub
xor
add
mov
aas
lahf
inc
bound
fadds
push
fs
dec
jne
rorl
cmp
cld
ljmp
stos
sub
lods
ljmp
mov
sbb
push
js
out
mov
pop
inc
and
sbb
arpl
cmp
fidivl
popa
iret
jbe
jp
pop
pusha
dec
push
cmp
iret
int
mov
sbb
mov
shrl
scas
dec
in
js
gs
mov
shlb
or
cmp
fsubrs
jno
iret
mov
repnz
outsb
push
or
sbb
ss
test
and
add
into
je
stc
sub
daa
sbbl
sub
aas
mov
adc
fs
fildll
sub
idiv
roll
enter
hlt
sbb
sbb
push
and
ret
and
mov
leave
loop
mov
sub
inc
lods
popl
iret
sub
stc
mov
fldenv
xchg
inc
push
mov
filds
stc
pop
mov
xchg
shl
jnp
sbbb
pop
sub
idivl
lods
movsl
adc
addr16
jbe
test
sbb
mov
push
lds
fldcw
insl
js
xchg
sub
add
ljmp
mov
inc
inc
xor
xor
push
inc
jbe
data16
or
rol
iret
fmulp
nop
cmpsb
out
sub
or
fidivs
xchg
rorl
pushf
movb
enter
imul
gs
push
mov
jns
loop
and
idiv
cmp
sti
imul
inc
out
aaa
fadds
cs
lahf
and
adc
xor
ds
add
xor
mov
rcrb
mov
push
and
roll
ds
add
lock
dec
add
pop
pminsw
lcall
aaa
pusha
es
inc
push
inc
push
mov
or
pop
loop
fsts
sbb
call
popa
xor
fldenv
dec
iret
lcall
nop
fdiv
push
pop
mov
mov
add
rcrl
enter
stos
lret
or
pop
cmp
sbbl
and
xor
pop
bound
in
gs
cmpb
dec
jle
xchg
scas
in
aaa
es
lds
and
popf
out
dec
mov
xor
push
mov
aas
xchg
sub
mov
push
sbb
sub
insb
push
xor
cltd
repnz
lea
push
insl
or
jge
aaa
imulb
movb
imul
inc
jae
xchg
fisubl
loop
sub
sahf
cmp
lret
mov
sahf
xchg
jmp
pop
xor
repnz
into
std
mov
mov
rcrb
into
xchg
in
icebp
dec
mov
sub
data16
sarb
mov
push
arpl
xor
stos
sti
cld
or
out
or
imul
pop
xchg
xor
sbb
mov
adc
insb
ds
sahf
sbb
insl
xchg
fdivp
std
cmc
sub
loope
xchg
pop
shlb
sahf
jmp
or
or
sbb
mov
loopne
dec
push
inc
idiv
xor
sarb
cmpl
or
inc
mov
dec
dec
mov
xor
pop
ss
pop
xchg
xchg
das
push
mov
shll
addr16
mov
dec
insb
shr
in
pop
push
aaa
pop
mov
xchg
pop
mov
ljmp
push
outsb
out
dec
imul
adc
test
mov
test
sbb
je
inc
lret
imull
sub
sub
mov
jo
iret
mov
mov
fnstenv
nop
outsb
and
lret
test
jae
decb
test
adc
nop
sub
shlb
xchg
cwtl
test
test
or
cmp
out
inc
loope
loopne
scas
mov
sbb
pop
fidivl
scas
pop
les
jbe
cmp
leave
cmp
mov
jo
jne
in
inc
cmp
fldcw
mov
and
mov
pop
clc
and
push
adc
and
das
shl
add
dec
jae
jne
fistl
jge
and
push
nop
movsl
jne
inc
jge
mov
jbe
repnz
or
sub
scas
fdiv
jns
pop
mov
pusha
xlat
adc
push
mov
inc
inc
dec
fisttpll
pop
cmpsb
into
xor
stc
dec
add
cld
xor
pop
pop
push
lds
subw
push
dec
cs
push
jnp
popf
inc
ficompl
and
pop
int3
inc
and
and
mov
adc
dec
lret
lahf
lods
inc
pop
nop
test
and
lods
add
xlat
pop
dec
pop
adc
andb
inc
mov
xchg
sub
nopl
dec
movsl
push
or
sbb
push
add
or
xor
dec
cmp
inc
add
pop
fists
jbe
and
icebp
ret
outsb
mov
xchg
in
inc
xchg
in
aam
push
mov
sbb
lret
mov
scas
sahf
mov
mov
cwtl
repz
jg
mov
cwtl
loop
mov
mov
xor
mov
jmp
bound
das
push
dec
js
icebp
and
sarb
push
addr16
addl
push
dec
dec
out
vpxor
ds
mov
out
aaa
stos
fimull
aaa
movsb
xchg
sbb
stos
call
sub
xchg
sbb
xor
je
sbb
jp
les
mov
or
lret
add
inc
popf
cld
mov
xor
je
sbb
push
out
ss
jne
pop
push
subl
push
pop
out
xchg
cli
pop
push
jnp
aad
jae
test
loope
cwtl
pop
test
into
popf
pop
sbb
shrb
out
add
test
cli
push
and
les
pushf
jg
divb
popa
push
jae
jecxz
int3
push
insl
xor
mov
movsl
daa
add
add
std
addr16
mov
loope
mov
mov
pop
pushf
insb
lahf
xchg
pop
icebp
pop
dec
pop
xchg
dec
outsl
arpl
adc
out
cmp
es
int
jno
mov
fistpl
dec
fistps
and
imul
adc
and
or
dec
pop
fmuls
out
lcall
test
insb
sbb
push
shlb
xchg
pop
aad
cmp
repz
push
aam
mov
jmp
repz
outsb
xchg
pop
jnp
xor
dec
aaa
loopne
ds
dec
js
sbb
xor
ja
iret
fidivs
nopl
mov
push
mov
and
test
mov
push
inc
push
movsl
js
push
xchg
out
sbb
inc
data16
ja
xchg
imul
cmp
pop
mov
jne
sbb
outsl
popf
jle
pop
xchg
adc
jae
pop
and
mov
addl
pop
and
adc
mov
rolb
xchg
inc
add
xchg
bound
cli
aad
xor
or
dec
test
lea
pusha
or
aad
ja
xor
mov
dec
in
fdivrl
inc
daa
test
xlat
insb
jne
in
test
sbb
fs
add
or
int
testb
add
outsb
xchg
jnp
popf
daa
mov
push
ret
sbb
in
cli
bound
mov
mov
pop
in
int
cs
inc
jecxz
test
fsub
pop
cs
pop
imul
push
daa
loope
sub
rcrl
data16
sub
repnz
std
fbstp
adc
std
loope
push
ss
jp
xchg
bnd
jns
lret
hlt
call
add
nop
lahf
cmpsl
in
fstpt
inc
sub
mov
fdiv
inc
jne
xchg
stc
lret
lds
insl
das
push
adc
jnp
jge
imul
dec
push
mov
and
cmp
inc
xchg
add
sbb
in
in
xchg
sbb
xchg
jae
cld
jbe
sbb
nop
jno
shll
ret
cmp
push
fdivl
and
xlat
add
testl
mov
jp
sub
adc
ror
movsl
pop
sub
cmpsb
jecxz
nop
mov
xchg
ja
jb
jae
movsl
dec
popa
lcall
imul
push
fidivs
scas
pop
and
lcall
and
or
add
jge
dec
xor
cwtl
movd
icebp
rolb
jle
push
divb
mov
shlb
push
js
mov
clc
jge
dec
pcmpgtw
mov
mov
into
fdivs
jge
sub
sbb
xchg
pmaddwd
jo
push
mov
ficompl
mov
sbb
imul
mov
xchg
ds
pop
mov
mov
gs
xor
mov
mov
test
xchg
ljmp
ss
adc
sbb
xlat
test
or
cmp
jmp
jg
fstpl
sbb
in
and
shl
dec
or
comiss
daa
mov
popa
mov
shrb
popa
sbb
cs
jle
movsl
imul
pusha
dec
outsb
sbb
out
nop
rolb
ret
outsl
add
jecxz
push
daa
js
push
cmc
dec
adc
ja
pop
add
and
sahf
pop
addr16
in
dec
pusha
xchg
in
adc
call
in
jbe
rcrb
popf
lret
fdivrl
xor
dec
mov
cli
dec
dec
sub
push
lods
cmpsl
inc
xor
mov
cmc
mov
icebp
pop
pop
inc
iret
pop
cmp
arpl
rcl
das
ds
adc
push
repnz
mov
jb
pusha
insb
mov
movsl
jbe
jbe
mov
ljmp
fisttpll
fidivs
in
pop
outsb
mov
xor
xorb
std
mov
and
lea
cmp
xor
cmp
inc
add
jo
mov
rclb
outsl
fldt
popa
daa
mov
loope
ret
push
xor
mov
and
cmp
aaa
mov
fmul
cld
andb
testb
lods
xchg
out
or
daa
xor
movsb
call
sti
lods
jge
mov
mov
inc
clc
adc
fisttps
fimull
std
mov
out
mov
roll
test
adc
lods
mov
adc
sbb
mov
in
xchg
pop
aam
std
xor
popa
cmpsb
pop
out
mov
ds
adc
adc
xchg
sbb
push
mov
mov
mov
jp
test
mov
inc
dec
dec
les
adc
hlt
cmp
sbb
lea
test
xchg
mov
test
es
adc
inc
pop
pusha
mov
outsb
jp
sub
inc
pushf
xchg
and
jne
cmpsb
jne
xor
xchg
pop
addr16
lds
addb
adc
cmp
into
bound
mov
loope
mov
test
sbb
or
inc
dec
jnp
jb
add
addl
popa
mov
mov
adc
nopl
loop
mov
ss
xchg
mov
nop
daa
into
sub
lds
ss
jge
mov
xchg
test
mov
ss
inc
cmp
cmp
sub
pop
sub
or
sarl
sub
out
testb
add
and
rcll
scas
xchg
clc
out
xor
call
stos
or
fcomp
mov
inc
cmpsb
push
sarl
ds
shll
das
adc
int
out
xor
pusha
test
fyl2xp1
mov
pop
jecxz
and
xchg
xchg
cwtl
and
xorl
outsb
mov
xor
insb
insl
and
out
in
inc
adc
and
adc
inc
mov
insb
pop
popa
xchg
mov
pop
pop
xlat
out
mov
sbb
jo
test
shll
addr16
les
rcrl
mov
jg
xor
pop
and
and
int3
mov
ljmp
div
cs
data16
or
jae
inc
test
aas
out
mov
pop
xchg
sub
push
push
imull
cmovae
inc
jo
pop
inc
cmp
push
mov
inc
cwtl
cmp
sub
stc
loope
leave
xorb
xor
cmp
nop
dec
in
mov
test
inc
or
add
arpl
outsb
mov
push
addl
mov
and
xor
inc
fdivrl
jne
mov
outsl
sbb
sub
xchg
shrl
lods
into
in
std
sbb
pop
cwtl
and
shrl
cmpsb
data16
call
pop
add
aaa
mov
inc
mov
sbb
add
xchg
or
imul
xchg
ljmp
mov
xchg
aad
imul
stos
mov
xlat
jl
add
aaa
js
mov
cmc
fbstp
push
rcr
xor
aas
and
leave
jnp
pop
add
push
push
cmp
inc
rorb
xchg
int
cmp
mov
pop
push
pop
lea
or
jno
push
pushf
lods
jo
sub
push
sub
push
sub
leave
jae
mov
push
sub
les
dec
lret
lahf
xorb
and
inc
and
add
and
dec
jge
xchg
cmp
popa
sub
jl
bound
out
in
cmp
nop
inc
int
adc
add
outsb
movb
fimuls
sahf
jmp
and
mov
out
xor
dec
jmp
cmpsb
addr16
cmp
or
movsb
insb
push
add
mov
push
popa
mov
add
call
in
pop
jne
and
mov
inc
push
mov
rorb
ret
gs
xchg
scas
push
pop
adc
mov
sub
icebp
push
inc
je
in
in
jns
sub
mov
cmp
cmpsb
cli
sarb
scas
lret
push
mov
push
faddl
lods
push
andl
mov
ljmp
push
fnsave
or
pop
fcoml
popa
sbb
adc
dec
or
pop
push
jnp
inc
push
jb
loope
push
icebp
loopne
gs
sbb
pop
inc
mov
lods
in
push
sti
xchg
sbb
lock
dec
inc
mov
test
out
das
add
das
nop
mov
sbb
fsubrp
out
sub
out
outsb
sub
xor
imull
icebp
jno
xor
xor
cltd
ficompl
mov
dec
pop
push
js
mov
dec
adc
popa
mov
jmp
push
repnz
das
sbb
out
shlb
xchg
sbb
cmp
das
dec
in
jmp
pop
mov
lret
push
sbb
adc
xchg
jae
gs
xor
cmp
pop
mov
mov
or
rcrb
movsl
inc
fidivrs
lock
xchg
push
jle
sbb
jp
rcl
jecxz
aad
aaa
push
std
and
push
rcrb
pop
mov
mov
enter
inc
mov
aad
imull
jne
push
notb
lods
mov
stos
xchg
int
insb
loop
mov
test
fs
aad
call
inc
mov
jge
ja
push
repz
ss
mov
add
sub
lods
jae
xchg
jne
prefetch
jns
lcall
ret
popa
aad
pop
sbb
fildll
movsb
xor
cmp
or
jbe
ds
mov
and
mov
or
out
push
mov
or
lock
fisttpl
xlat
xor
xchg
ljmp
cmp
and
aam
adc
xchg
push
xor
das
rcr
pop
inc
data16
in
push
gs
ret
sahf
or
aad
sti
xchg
pop
dec
jo
setb
cltd
sub
mov
cmpb
pushf
shr
pop
cs
xlat
inc
daa
xor
incl
scas
lret
lret
xchg
mov
sti
sbb
or
push
testb
and
ds
xor
mov
sbb
cmpsl
push
cltd
addr16
jnp
test
add
jle
mov
push
inc
mov
data16
lcall
pop
push
jge
push
popa
cmp
xchg
in
ret
ds
lcall
sbb
jecxz
or
dec
ja
insl
fsubrl
fdivrs
daa
dec
pop
int3
pushf
lcall
and
sahf
and
lds
lret
lods
fs
xchg
or
into
pop
jae
adc
or
call
dec
outsb
nopl
inc
dec
out
ljmp
sbbb
fadd
nop
inc
mov
adc
jnp
enter
pop
cwtl
pop
pop
and
filds
pop
stos
ljmp
loopne
inc
ljmp
loope
sti
out
push
xchg
push
mov
das
xor
xlat
mov
lret
inc
mov
clc
mov
add
adc
add
mov
outsb
inc
inc
shld
loopne
xor
lods
add
lock
mov
pop
sub
jo
les
outsb
mov
cld
daa
in
jg
inc
push
add
cmp
jle
jo
leave
out
pop
stos
scas
dec
mov
or
mov
cmp
jb
aaa
dec
pop
sub
test
push
push
enter
out
jmp
iret
jne
insl
pusha
mov
sbb
jge
pusha
add
divl
jecxz
bound
dec
add
adc
roll
pop
mov
pop
fidivrs
xchg
js
ljmp
push
sbb
push
mov
inc
js
push
push
cmp
lret
and
mov
xchg
sub
cli
enter
sub
push
xor
in
inc
add
mov
xor
push
clc
test
and
pop
mov
push
sbb
adc
add
lods
mov
movsb
pop
icebp
icebp
shrb
sub
out
sbb
jnp
jmp
push
dec
loopne
shl
inc
mov
mov
or
xchg
movsl
lret
imul
pop
arpl
outsb
repnz
fidivs
js
imul
mov
jp
lock
ss
adc
jno
jle
add
jl
jnp
mov
lret
je
lds
mov
loopne
inc
shrb
cmp
sbb
clc
push
inc
xchg
leave
in
leave
inc
xor
pop
dec
and
sahf
lret
mov
sbb
pop
jae
ret
imul
imul
pushfw
jns
inc
cli
sahf
pop
pop
dec
sahf
fbld
cmp
ret
lret
insb
fwait
xchg
sub
sbb
xchg
lea
or
or
popf
push
pop
ds
fisttpll
aas
repz
xorl
test
sub
inc
pop
test
rorb
rcrb
sub
jge
lret
mov
or
inc
sbb
push
cld
jae
dec
notb
lds
cmp
lock
pop
dec
outsl
roll
incb
testb
adcb
daa
jg
aaa
pop
out
adc
add
aam
sub
cmpsl
lret
mov
inc
jecxz
in
shrb
in
sbb
adc
lods
movsb
loop
mov
inc
inc
pop
mov
lea
test
dec
jg
mov
int3
push
movsb
loope
shrl
pop
icebp
subb
enter
mov
lcall
mov
fimuls
cmp
hlt
lret
mov
iret
push
cwtl
ss
adc
fldt
int
mov
fwait
jmp
loopne
inc
stos
popa
ljmp
mov
dec
cmp
sbb
int
rol
mov
outsl
inc
test
addl
sub
lret
dec
xor
aas
xlat
sub
das
daa
sbb
enter
push
xchg
jo
or
push
pop
dec
dec
test
test
xchg
jge
and
push
repz
adc
jae
es
add
xor
hlt
dec
test
lahf
fcoml
add
adc
out
pop
mov
mov
mov
shlb
push
and
jns
dec
lcall
stos
cs
and
fiaddl
fst
fwait
outsb
dec
or
testb
inc
ds
data16
pop
icebp
add
jecxz
pop
gs
paddusw
xlat
imul
test
dec
cmpsb
pop
and
leave
jmp
lcall
jecxz
fists
xchg
sbb
stos
aaa
lahf
push
addr16
sub
pop
pop
aam
aad
les
leave
sahf
cmp
adc
cmp
lds
push
test
je
push
xor
and
lcall
sub
mov
movsb
out
pop
fdivr
sbb
mov
xchg
frstor
jno
push
mov
lcall
dec
pop
sti
adc
lahf
inc
xor
in
test
lahf
aaa
adc
push
xor
shll
cmp
adc
mov
xor
and
out
mov
adc
cmp
pop
dec
je
iret
bound
lods
sbb
sbb
inc
mov
lea
xchg
out
imul
scas
call
jnp
pop
lret
jmp
in
out
add
cwtl
mov
jmp
lret
jno
mov
pop
fisubs
cmp
xchg
pop
or
outsl
pop
lock
dec
mov
cltd
aaa
lret
inc
adcb
pop
in
out
ja
pop
mov
push
inc
dec
pushf
dec
mov
cmp
mov
and
leave
xchg
jno
std
mov
in
subb
mov
lret
jbe
sub
loopne
push
bound
inc
dec
lea
xchg
sbb
cld
mov
sbb
js
xor
into
mov
mov
imul
mov
dec
mov
mov
pop
and
sbbb
xor
insl
shll
inc
xchg
sbb
in
imul
ret
mov
pop
inc
adc
sub
inc
movsb
mov
sbb
repz
or
xor
jg
ljmp
std
movsb
xchg
mov
ret
inc
pop
lods
or
jo
fsts
add
mov
xor
xchg
add
aam
and
cmp
and
ds
sbb
les
loopne
mov
fwait
or
sub
push
jb
idivb
push
pop
aam
movsl
hlt
mov
dec
xor
jno
movsl
mov
xchg
cmp
pop
xchg
inc
mov
mov
imull
pusha
push
mov
dec
lock
test
fldenv
sbb
rol
sbb
xlat
orb
mov
pop
push
in
or
or
cmpsl
cltd
adc
dec
xor
dec
and
jle
pop
xor
or
adc
inc
add
cmp
sub
sbb
pop
inc
sub
int3
adc
es
lods
mov
sub
cli
test
inc
mov
jecxz
mov
pop
push
data16
or
adc
dec
outsb
mov
mov
fcompl
test
daa
movsl
jns
or
pop
popa
sbb
pushf
scas
xor
fwait
orl
out
and
aaa
sarb
popf
aas
adc
cld
push
shlb
loope
fists
mov
call
scas
movsb
add
jnp
sbb
imul
fnstsw
or
lods
addb
xchg
leave
inc
ficoml
ljmp
mov
or
inc
jne
movsl
scas
pushf
js
fistpll
jmp
dec
cltd
in
lret
jnp
loope
sti
pop
iret
jb
mov
repz
and
mov
cmpsl
in
and
mov
aas
addr16
andl
sub
jp
xor
ja
jnp,pn
mov
jbe
xchg
ja
ss
push
sub
xor
in
mov
int3
aas
add
test
rorl
and
or
popa
mov
and
les
sbb
rolb
loop
mov
xlat
ss
lret
repnz
dec
xlat
mov
loope
xor
sti
movsl
iret
scas
out
aas
jo
loopne
dec
inc
sbb
nopl
in
jbe
dec
lods
push
nop
movsb
and
rcr
push
jae
jo
jne
sub
xor
jo
cltd
pop
imulb
ror
push
into
adc
cwtl
sub
mov
mov
sahf
adc
test
dec
lret
cmp
aad
fstpt
adc
test
es
jb
call
aas
sub
out
add
jno
push
sbb
and
push
pop
adc
mov
stos
xchg
jp
mov
xchg
dec
push
jl
fnstsw
xor
pop
xor
movntq
out
daa
cmp
pop
lock
fstps
adc
jmp
xchg
rcr
pushf
xchg
icebp
inc
or
ror
int3
adc
rcrl
jo
xor
aas
negl
fcomip
or
push
inc
dec
test
jg
scas
andb
jge
mov
adc
jp
cmpb
jo
mull
shrl
aad
repz
out
cwtl
cs
add
dec
icebp
notl
push
push
mov
in
or
jnp
int3
push
cli
ljmp
cmpsb
dec
ret
or
pusha
test
je
mov
mov
jl
push
mov
push
mov
mov
fldcw
mov
es
aad
xchg
mov
and
shlb
mov
adc
sbb
mov
scas
cmc
jmp
addr16
xchg
dec
fiaddl
and
xor
imul
jge
xlat
push
repz
dec
imul
dec
test
cmpsl
lods
lods
jb
lret
pop
fists
mov
insl
into
shll
cmp
pop
push
and
push
xor
jns
push
sbb
xchg
stos
cmp
mov
sub
insb
iret
xchg
adc
mov
mov
sbb
sbb
cmp
movsl
mov
mov
xchg
stos
dec
cwtl
jno
sti
rorb
iret
jno
push
cmp
test
sbb
lea
cmp
outsb
out
pusha
or
sub
idivl
in
add
les
stos
ljmp
pop
pop
add
incl
jmp
push
inc
mov
es
and
mov
xor
sbb
iret
fsubs
mov
sbb
xor
ja
inc
adc
mov
fiaddl
xbegin
add
arpl
xor
push
jbe
iret
cmp
cmp
dec
test
cmpsl
jle
dec
cmpl
jno
xor
jno
testl
mov
inc
dec
enter
adc
push
cmp
jne
leave
pop
push
lret
push
push
jno
or
inc
mov
fnstenv
xchg
inc
push
loope
nop
pop
push
inc
sub
mov
pop
xchg
add
mov
mov
adc
inc
dec
jns
neg
lcall
jno
jl
pop
or
cwtl
mov
push
mov
cmpsl
loope
or
cltd
out
xchg
imul
add
xchg
insl
push
cmpsb
ds
roll
inc
adc
mov
cltd
mov
pop
dec
mov
inc
fildl
sbb
add
mov
add
mov
push
fisubl
hlt
sub
das
xor
and
push
fldcw
or
aaa
push
jge
fdivrl
pop
pop
or
cwtl
ds
out
or
test
xchg
dec
sbb
sub
mov
cltd
rorl
sbb
jo
push
push
inc
cmp
sbb
cltd
gs
sbb
imul
aaa
jl
out
sbb
jg
lahf
insl
cmpsl
push
or
mov
je
subl
outsb
sub
lea
mov
in
and
jb
pop
cmp
int3
sbbb
mov
jnp
enter
loopne
jge
lods
push
cmp
lahf
add
lods
orb
mov
jns
xor
pop
mov
xchg
je
cwtl
sub
aad
jge
jno
inc
push
outsb
je
jg
push
roll
jne
gs
push
pop
fidivl
xchg
pop
das
jo
cltd
out
in
push
in
out
pop
ss
or
test
stc
sti
or
addr16
dec
loopne
mov
adc
rol
jp
jnp
push
mov
jo
sbb
daa
push
xor
push
daa
mov
xchg
and
vmwrite
int
push
jne
cmp
mov
in
push
xor
and
xor
in
sub
xchg
push
sahf
mov
les
push
xchg
and
in
pop
pop
xchg
cmp
add
es
jb
lea
into
or
push
dec
popf
jp
addr16
or
sub
ljmp
cmp
fmuls
sub
xor
jge
fwait
sbb
gs
cmp
call
cmp
ret
or
insl
repz
testl
dec
in
add
or
xor
lea
jnp
push
lcall
pop
dec
xchg
mov
imul
jb
xchg
or
imul
push
jp
dec
cmpsb
incl
cmpsl
xor
xchg
pusha
shlb
leave
jg
jnp
mov
adcl
repnz
out
push
inc
add
ja
stos
sbb
sub
push
lods
pop
sti
lret
pop
dec
pop
orl
mov
adc
std
push
sbb
mov
xor
sub
test
sbb
adc
hlt
je
out
inc
cmc
sub
jbe
push
mov
or
mov
sbb
xchg
imul
mov
stos
mov
daa
popa
xchg
xor
xlat
out
aaa
and
mov
jp
jns
add
in
mov
mov
dec
arpl
and
sbb
mov
adc
mov
jo
add
hlt
add
lds
in
stc
sbb
clc
jne
cmp
pusha
mov
mov
sbb
scas
mov
xor
stos
scas
outsl
mov
inc
ficompl
call
jmp
imul
insl
push
insl
sbb
mov
cmp
cmp
dec
outsb
and
adc
xchg
jns
xor
sti
mov
rolb
jl
jae
sbb
lock
das
pop
rorl
add
ds
das
adc
lds
popf
add
sub
fnsave
cmp
gs
stos
push
stos
insb
sbb
jmp
cmp
jbe
or
push
push
jmp
jae
cwtl
and
mov
pop
xor
xor
in
push
enter
push
pop
call
flds
inc
or
cmpb
pop
psubd
in
jns
mov
icebp
div
std
sarb
jmp
clc
out
mov
mov
mov
push
jne
sbb
cli
gs
fistl
popf
ret
and
popf
xchg
or
xor
xchg
mov
cmpsl
test
pop
xor
inc
jp
outsb
lret
pop
cmp
push
jnp
mov
and
out
mov
mov
call
xchg
test
je
inc
xlat
mov
xchg
inc
cmp
aaa
mov
mov
inc
dec
pusha
cwtl
and
xor
or
std
push
in
cli
cmp
push
jge
movsl
imul
mov
xlat
out
cmpsb
outsb
loopne
or
pop
addr16
add
mov
pop
incl
mov
je
xchg
pushf
lods
push
xchg
jle
addl
out
mov
xchg
sti
call
and
int3
inc
shl
pop
fnstcw
push
call
inc
outsl
outsl
mov
les
inc
and
pop
xlat
into
sbb
aaa
push
or
icebp
and
pop
mov
flds
fadd
fisttps
pop
loopne
push
cmp
xchg
fwait
jg
inc
sti
outsl
xor
lcall
cmp
sub
mov
sti
push
jno
movsb
cmp
sbb
push
stos
int
into
and
lret
bt
dec
subb
xor
push
les
mov
repnz
add
sti
dec
div
push
pop
into
mov
xchg
push
outsl
pop
subb
mov
adc
pop
dec
out
push
fdivrp
push
cltd
dec
lahf
pop
sbb
rol
pop
mov
jns
xchg
pusha
call
loopne
repnz
and
inc
orl
ss
into
scas
leave
add
and
cmovle
mov
sbb
sti
jne
mov
test
data16
jbe
mov
push
loop
xchg
loope
mov
pop
ljmp
ja
add
fmuls
adc
and
ss
dec
and
test
add
cmp
gs
js
mov
lods
je
dec
push
push
inc
mov
dec
jae
pop
dec
pop
xchg
adc
push
dec
addr16
cld
add
mov
lret
movl
lahf
cs
aaa
add
mov
stos
mov
add
clc
aam
xchg
and
faddl
add
inc
push
add
cmpsl
xchg
cmp
clc
mov
cs
xorl
xor
or
in
arpl
and
jg
leave
push
jb
sbb
fdivr
sub
dec
loopne
cmpsl
sbb
aam
mov
imul
push
rorb
int
or
icebp
cmp
jbe
dec
mov
push
push
sub
jge
push
add
sbb
jg
xor
leave
jns
mov
mov
into
insl
shl
pop
lret
shl
xor
mov
adc
push
mov
mov
or
xchg
rolb
push
xor
pop
addb
into
jge
mov
mov
or
hlt
imul
mov
mov
pop
sub
pop
icebp
lcall
and
push
push
insl
xchg
add
inc
hlt
iret
lret
inc
jne
iret
xor
daa
mov
pop
in
xchg
aam
nop
cmp
add
push
cmp
add
mov
sub
and
jecxz
xor
mov
sbb
fstpl
rclb
add
mov
pop
cmp
fisubrs
mov
mov
mov
aad
aas
out
push
add
cmp
sub
daa
rorb
stc
es
xor
std
lret
jle
cli
loopne
aad
push
in
pop
or
sbb
sbb
cmp
dec
push
test
imul
scas
xorl
push
jge
push
fcoms
and
jbe
pop
dec
test
popa
aas
repz
clc
addr16
test
cli
mov
jge
fimuls
push
in
pop
or
push
rcr
jecxz
sub
aas
call
jb
mov
mov
fistpll
xchg
inc
ret
inc
data16
fnstsw
pop
mov
push
test
sbb
je
mov
jnp
sub
add
inc
in
flds
mov
push
mov
add
movb
jmp
sbb
xchg
mov
call
lods
xlat
fistpll
push
in
push
inc
pop
jge
adc
jo
in
cmpsl
adc
cs
popf
loope
add
ret
mov
cmp
or
push
jne
mov
into
scas
add
pop
and
cmp
lods
out
icebp
push
cmp
sub
into
mov
push
or
cmp
dec
fwait
mov
das
sbbl
test
sub
mov
pop
movntq
test
jl
mov
pop
in
call
shll
out
mov
xchg
into
mov
ret
into
fdivrl
iret
add
adc
test
or
dec
xchg
add
iret
cmp
stos
rcll
mov
jae
popa
mov
daa
or
popf
shll
mov
hlt
scas
fisubs
lods
les
xor
adc
push
push
xchg
push
mov
stos
insb
scas
pushl
or
cmp
ljmp
inc
inc
enter
inc
sub
mov
cltd
lods
nop
pop
or
je
mov
int3
jg
mov
jo
iret
hlt
xorl
lock
clc
nop
pop
xor
sbb
ja
bound
push
pop
add
js
insl
mov
mov
ljmp
roll
icebp
jge
push
adc
adc
xor
rclb
xchg
incl
inc
loope
setle
clc
xchg
das
cmp
mov
jo
dec
cmp
push
pop
cmp
insl
shlb
xchg
mov
sbbl
pop
jp
std
das
lret
test
out
clc
and
scas
mov
test
movsl
lock
xchg
arpl
mov
mov
aas
or
mov
xchg
push
test
test
mov
test
shlb
mov
adc
lahf
ret
mov
xchg
xor
mov
in
xchg
xchg
mov
out
in
in
in
add
xor
adc
es
idivb
pop
iret
xchg
mov
stos
imul
mov
push
pop
mov
pop
push
cmpsl
jmp
xchg
out
inc
popf
pop
push
test
arpl
adc
fildll
xchg
sub
and
cmpsb
push
push
sbbb
aaa
sub
out
lods
pop
fsubl
dec
inc
mov
divl
push
or
aad
pop
inc
cmp
pushf
ljmp
sub
fistps
mov
pop
dec
push
lods
sub
cmp
jg
adc
popl
cmp
push
mov
dec
or
and
xchg
mov
out
hlt
pusha
jp
jmp
sbbl
cltd
dec
push
push
add
mov
mov
movsb
sbb
mov
adc
pushf
lret
pop
mov
fistl
mov
inc
les
xor
mov
ss
ds
sbb
rolb
cwtl
or
push
xlat
add
pop
mov
lock
dec
cs
jp
cmp
ficoms
aam
pushf
sbb
ds
movsl
ja
test
inc
xchg
dec
enter
scas
cld
daa
iret
pop
add
ret
out
cmpsb
ja
imul
and
lock
push
lds
push
xlat
insl
js
mov
inc
xchg
jmp
inc
adc
inc
pusha
in
sub
jbe
testb
mov
sub
lahf
jg
mov
aad
push
xchg
adc
add
cs
pop
clc
leave
addl
sbb
sub
scas
dec
orl
jno
subl
in
cmc
jecxz
jne
int3
test
lds
cld
push
cmp
iret
xor
js
nop
adc
xchg
and
push
lahf
paddusb
ds
ret
cmpsl
and
and
fnstsw
mov
pop
add
or
mov
jle
notb
push
lods
stos
fisubrs
ja
adc
ljmp
and
add
movsb
das
pop
iret
fwait
les
pop
dec
push
ret
pop
jne
std
jp,pn
cwtl
mov
adc
add
gs
daa
into
push
test
xor
es
cmp
cmp
enter
fcmovb
adc
std
jae
mov
aas
sbb
ss
shl
mov
shr
xorl
xlat
test
xchg
inc
js
rcrb
xchg
and
scas
les
addl
jp
fwait
sbb
or
dec
lret
mov
imul
movsl
cmp
mov
adc
testb
negl
mov
dec
sbb
fs
mov
adc
cld
hlt
push
sbb
dec
sub
jl
in
adc
inc
inc
jg
mov
fbstp
cmpsb
popa
mov
cmp
lret
cwtl
sub
dec
pop
mov
std
cmp
adc
sbb
dec
int
add
fdivr
shlb
mov
jne
or
in
fdivrp
push
mov
sub
mov
rcrb
scas
inc
jg
push
mov
jno
test
add
in
mov
out
inc
scas
das
push
push
out
mov
or
mov
pusha
xor
rcrl
adc
pop
or
pop
fadds
addr16
iret
fwait
sbb
out
cs
xchg
les
push
add
das
xchg
jne
js
test
ret
push
insb
scas
dec
in
mov
dec
jo
cmp
or
dec
negl
mov
inc
cmc
push
pop
ss
and
add
dec
xchg
sbbl
xor
and
dec
or
or
es
dec
dec
outsl
popf
scas
mov
inc
cld
xchg
push
jns
inc
lret
int3
cmpsb
les
jecxz
roll
sub
fmull
jmp
out
push
cmp
jecxz
clc
inc
bswap
adc
out
mov
push
xor
mov
in
sahf
mov
stc
test
sarl
ljmp
pop
jo
iret
cld
adc
out
fbstp
repz
jbe
mov
or
pop
fwait
hlt
out
xrstor
test
lcall
jns
pop
cmp
outsb
nop
jnp
movsl
xor
lods
push
dec
int
cld
sub
into
and
in
and
and
push
mov
add
or
sub
mov
arpl
mov
lods
push
jge
dec
mov
sub
inc
lcall
pop
jmp
lcall
in
or
jne
xchg
push
test
mov
dec
pop
fiaddl
mov
cmp
aam
out
stc
loope
shlb
jecxz
fwait
in
push
hlt
jns
std
bound
cmpl
les
arpl
cmp
cmp
int
sbb
imul
filds
push
fsubrp
repz
jecxz
sbb
ja
scas
dec
add
inc
push
sub
arpl
les
inc
icebp
inc
insb
ja
outsb
xchg
and
jecxz
pop
shlb
jne
lods
jp
jecxz
dec
cli
test
xchg
lcall
adc
ror
scas
lods
jno
aam
xchg
cld
lcall
ret
mov
mov
test
push
dec
jg
insb
ds
xchg
jb
insl
inc
and
cmpsl
stos
out
or
cmp
loope
inc
lcall
bound
mov
rcl
call
aaa
test
ffree
subl
push
jno
and
leave
jae
dec
pop
outsb
cmp
pop
or
sahf
test
ss
ret
out
or
adc
adc
inc
ljmp
add
or
lods
mov
inc
jge
idiv
arpl
ds
daa
push
data16
cmp
mov
add
add
cmp
addb
cmc
mov
cmp
repz
pop
insl
push
xchg
aad
jg
add
add
mov
shll
cmpsb
ret
and
stos
dec
pop
dec
adc
int
in
jae
aam
dec
add
ljmp
sub
test
adcb
enter
aad
sbb
adc
jge
mov
sbb
jae
mov
add
fistps
addr16
ja
hlt
xchg
pushf
mov
jmp
clc
sbb
and
jmp
loope
in
xchg
icebp
dec
movsb
add
push
jb
jnp
imul
cmpsl
push
imul
pushf
imul
cltd
dec
cmc
mov
ja
inc
pop
xchg
iret
popa
dec
ret
out
jl
scas
arpl
xchg
in
inc
addr16
sbb
adc
iret
out
cmpsl
ljmp
addr16
sbb
aam
je
adc
gs
sahf
es
out
jns
or
idivb
jno
js
xchg
in
dec
jp
test
push
add
inc
inc
out
jp
push
je,pt
cmp
jecxz
lods
mov
rcl
dec
push
pushf
inc
cli
push
pop
cltd
mov
ds
jbe
ret
inc
dec
inc
out
xor
jecxz
xor
mov
aas
ja
int
fcmovnbe
jge
xchg
fcompl
inc
or
xlat
dec
lea
add
mov
adc
cmp
popf
loopne
lret
outsb
lcall
call
inc
andl
mov
jl
stos
ljmp
adc
jmp
movsb
pop
cs
lods
repz
js
jo
movsl
aaa
xchg
xor
dec
xor
push
inc
lds
or
lahf
push
xor
ficoms
cmp
pusha
and
pop
adc
mov
cmp
daa
or
in
push
jle
inc
inc
sti
add
in
movl
xorl
jmp
fildl
xchg
xor
fs
xchg
lock
xor
incl
scas
insb
jbe
lods
ficoms
fs
dec
mov
xor
imul
inc
aaa
add
mov
sub
jae
mov
jno
xor
mov
jae
inc
into
push
and
mov
xor
adc
mov
adc
insl
fcomip
imul
fdivrp
aaa
push
outsb
dec
ljmp
stos
sub
adc
mov
popa
cmp
jl
daa
mov
push
push
lods
fnstcw
cmp
shl
inc
pop
testl
stos
and
testl
bound
ljmp
lods
cmp
mov
push
cli
shlb
add
fs
push
shr
inc
mov
fldcw
addr16
add
ficompl
nop
fsub
rorl
into
fldl2t
ret
mov
xchg
jno
cmpb
sbb
gs
sub
sbb
mov
fistps
or
or
sub
shll
and
test
mov
xlat
std
mov
cli
pop
or
rcrb
dec
jb
dec
sub
adc
jg
data16
scas
je
bound
inc
mov
jnp
mov
ja
adc
mov
repnz
xchg
lods
pcmpgtw
push
cmp
cli
aam
iret
aam
cld
scas
sbb
inc
adc
loop
pop
loopne
es
dec
push
mov
scas
dec
mov
in
ret
xchg
lret
lods
ds
and
dec
cmp
mov
movsl
mov
cmp
xchg
xor
aam
pop
into
push
popf
sahf
jbe
push
cmpsb
mov
test
xchg
add
daa
test
test
push
xchg
sub
jns
in
hlt
arpl
inc
pop
mov
lods
lret
aas
in
dec
or
fisubl
push
enter
fldl
aas
dec
js
mov
jns
pop
int
jns
divb
ds
sarl
shll
mov
aad
cltd
test
std
jge
mov
es
test
nop
arpl
or
jle
adc
ljmp
jae
lahf
loopne
das
xchg
scas
mov
aaa
scas
mov
rolb
lret
je
lcall
outsl
into
mov
sub
sub
ret
sbb
inc
pop
xor
cmp
gs
hlt
mov
push
sbb
mov
mov
xchg
push
mov
sbb
jl
fs
inc
lcall
sbb
scas
jle
add
push
mov
iret
inc
dec
stc
adc
mov
mov
loop
int3
sub
add
inc
push
out
popa
xor
sub
push
rcll
mov
cwtl
add
in
cmc
mov
sub
cld
jecxz
les
pop
xchg
mov
push
mov
fistps
xchg
int
mov
add
imul
xlat
rcrl
lcall
pop
sub
in
lea
push
cwtl
dec
negl
mov
push
mov
push
cli
add
dec
aam
push
jbe
movsl
pop
aaa
pop
in
lods
es
sub
adc
push
sahf
mov
mov
lods
xchg
cmpsb
js
pop
mov
imul
clc
pop
lcall
dec
ret
jge
xor
push
int
addl
cmp
hlt
cmp
out
or
push
push
xlat
scas
jmp
or
movd
mov
lock
loope
movsl
outsl
ret
sbb
mov
aad
add
test
aam
mov
cld
stos
mov
call
mov
pop
test
cmp
and
and
in
mov
sbb
jg
sub
out
pop
push
fs
sbb
stc
xchg
hlt
mov
js
push
adc
jae
jg
out
fistpl
es
pop
jne
popf
call
into
outsb
fisttpl
add
and
fcoml
in
add
pop
and
int3
pop
inc
ret
adc
xor
pop
pop
sbb
popa
cmp
mov
xor
jb
ret
mov
mov
pop
iret
mov
rclb
or
xor
sbb
out
movsl
dec
insb
ret
or
mov
sbb
push
cmp
cmpxchg
fwait
shrb
das
pop
lret
fists
dec
loop
adc
psrad
xor
adc
sub
push
or
cmc
je
scas
mov
cmp
xchg
xchg
and
int
cmp
pop
or
iret
clc
lock
mov
pop
leave
inc
cltd
inc
lea
ret
xor
fnstsw
lcall
jmp
jmp
orl
popa
jno
out
sub
and
testl
sbbb
gs
cs
bound
and
jne
cmp
test
clc
loop
sbb
xchg
push
cmp
nop
test
jmp
int3
adc
dec
sarb
test
jg
enter
sbb
pop
sub
pop
sub
in
cmp
iret
push
push
jge
mov
push
push
mov
lea
cmp
and
movsb
into
or
xchg
sbb
lret
or
cmpsl
or
adc
pop
jmp
je
stc
das
or
test
rolb
mov
mov
mul
mov
lret
or
adc
insb
sbb
orb
mov
xor
pop
mov
and
mov
ljmp
rcll
imul
cmpsl
push
lahf
stc
mov
imul
sub
repnz
push
jmp
bound
cmp
popa
in
inc
in
jmp
jo
fwait
mov
test
push
andl
adc
or
or
leave
xlat
xor
pusha
xchg
les
clc
lret
mov
in
pop
mov
iret
leave
or
sub
ja
adc
or
fisubrl
test
dec
push
lea
cmpsb
or
icebp
idivl
pop
pop
cs
sub
jg
jo
pop
inc
call
xchg
push
jmp
xor
sbb
or
lcall
adc
xchg
jae
testl
or
or
popa
jecxz
ret
sub
adc
sar
inc
pop
dec
inc
sub
push
cmpb
xchg
ret
sub
sub
xchg
push
sub
xchg
leave
fwait
push
mov
fsubs
dec
push
aam
lahf
push
pop
mov
into
icebp
jecxz
jecxz
push
pop
loop
mov
mov
pop
cltd
lret
xlat
push
lods
mov
mov
dec
stc
mov
psllw
sbb
jae
cmpsb
outsb
push
std
xor
pop
aam
push
out
jne
dec
dec
xchg
inc
adc
cmp
adc
movsb
push
sub
xchg
jge
adc
out
cmp
cmpsl
into
mul
jmp
shl
pop
cmpsl
xchg
in
sbb
loop
fs
iret
ds
sbbl
mov
aas
pop
stc
jge
pop
loop
out
les
pusha
sti
lea
mov
fs
scas
xchg
push
inc
bound
stos
rcll
fcomps
pop
or
fwait
ljmp
testl
aam
fsub
mov
pusha
fistpll
xchg
xorb
xor
add
add
cmp
stc
inc
data16
fldt
xchg
xor
inc
loope
fadd
test
dec
add
out
push
adc
sub
sti
cli
adc
xor
push
or
movsl
jmp
pop
sbb
push
push
stos
pop
jg
cmp
sub
jb
lods
adc
xor
mov
not
inc
xor
jno
and
jae
pusha
in
adc
pop
ficompl
mov
out
fsubl
sti
adc
xor
sub
push
mov
or
pop
mov
call
add
jne
mov
nop
inc
mov
pushf
pop
negl
or
out
add
push
xor
leave
popa
jge
add
enter
test
xchg
stos
mov
and
pop
daa
test
test
int
pop
xor
ss
ficompl
xchg
jo
imul
jg
xorb
lea
fisubrl
push
aaa
and
sub
mov
lahf
mov
lret
call
dec
adc
lock
test
in
ror
jg
adc
jecxz
mov
cmp
aaa
js
test
loopne
mov
and
push
hlt
in
push
add
xor
ds
rcrl
or
psubusw
inc
filds
rcrb
sahf
mov
fwait
xchg
mov
in
loope
ss
xchg
movb
rorb
test
jmp
mov
ret
add
inc
imul
fsts
sbb
and
jg
out
es
inc
push
sub
push
push
arpl
fs
lcall
and
and
gs
push
jo,pn
sbb
cmp
push
test
pop
insl
inc
push
insl
mov
cmp
sub
mulb
movsb
stc
inc
nop
dec
out
cmp
jp
movq
addb
flds
adc
lds
pop
sar
and
add
mov
cmpl
imul
adc
hlt
adc
enter
push
add
mul
sar
jo
arpl
stos
mov
dec
inc
xor
out
out
sarb
insl
ficoms
iret
adc
cmp
jns
and
mov
cmp
mov
pop
imul
jmp
inc
ds
test
cltd
cmc
subl
addr16
in
int
lcall
push
aaa
insl
xor
or
sub
loope
xor
pop
inc
add
jg
decb
fadds
and
xchg
fwait
inc
inc
out
int
ds
xor
popa
mov
shlb
in
dec
mov
notb
inc
jp
adc
mov
cwtl
daa
adc
mov
mov
cmpsb
cmp
rcrl
xchg
mulb
fwait
xchg
add
outsl
jle
icebp
fdivrl
mov
add
mov
nop
mov
shlb
mov
jae
fwait
je
arpl
jae
xchg
sbb
inc
out
cld
cmp
mov
rorb
mov
ljmp
dec
arpl
lock
out
insb
shlb
lcall
enter
push
sbb
movsb
shll
addl
mov
in
sbb
js
push
cmp
and
andl
roll
cmp
cmp
jns
pushf
ret
insl
aad
dec
imul
stc
add
sub
sti
vmovaps
cmp
daa
mov
enter
inc
movsb
jne
mov
xchg
data16
mov
xchg
mov
dec
mov
mov
mov
test
xchg
inc
icebp
mov
xlat
leave
jg
cmp
jp
mov
and
pop
into
jg
aas
jbe
jl
gs
sub
cwtl
and
js
mov
pop
and
cli
cmpsb
or
mov
dec
shr
lret
lcall
mov
jb
ret
cmc
add
or
outsl
pop
lahf
xchg
xchg
cmpsl
test
inc
pop
movsb
mov
mov
inc
mov
or
fs
xchg
jno
mov
and
popf
push
mov
xchg
xchg
push
mov
les
rcrl
pop
push
inc
cli
repz
imul
in
pop
jmp
stos
fstps
add
cmp
jne
mov
loop
out
scas
imul
stc
subl
scas
stc
pop
mov
stos
and
jecxz
inc
ds
jns
cmp
pop
adc
xor
gs
mov
nop
adc
pop
jle
movsl
jae
cmp
add
aam
dec
stos
pop
mov
push
pop
fdivr
push
cli
xchg
fcomip
push
pusha
or
xchg
pop
push
out
sub
subl
repz
push
pop
xchg
pop
cmpsl
mov
add
fs
mov
lcall
test
andb
xor
ss
mov
push
or
xchg
repz
dec
push
jmp
mov
jge
sub
lret
adc
aas
int
mov
loop
mov
mov
clc
fildll
mov
scas
dec
imul
jno
cltd
pushf
fimull
xor
jl
ja
mov
pop
outsb
pop
stos
pop
fwait
popa
xchg
sbb
mov
jmp
shrl
jle
adc
loopne
dec
js
cltd
adc
stos
sub
shll
inc
inc
mov
sub
rorb
shrl
inc
pop
jns
rorl
aas
popf
cmpsl
xchg
imulb
jbe
inc
inc
xor
stc
and
xchg
sub
cmp
cld
mov
push
mov
or
nop
les
cmp
enter
mov
ljmp
fwait
jae
mov
push
and
adc
ret
lcall
and
rcrl
test
imul
mov
cmpb
jg
scas
mov
dec
loop
dec
rcll
cmp
adc
clc
jae
loop
jecxz
push
stos
sub
insl
pop
stos
sub
mov
jns
outsl
ffree
loop
in
pop
jno
dec
push
cmpsl
lds
cmp
imul
sub
gs
push
popl
int3
addl
arpl
push
and
fcmovnu
int
sub
mov
cli
cmpsb
inc
lods
enter
xchg
inc
pop
adc
fs
int3
lret
or
add
lods
fildl
out
movsb
ds
dec
enter
cmc
add
outsb
dec
stos
sub
sub
xchg
ret
jo
out
and
add
lret
loope
jecxz
mov
push
push
mov
ret
pop
xchg
lock
mov
sub
xor
ljmp
xor
test
xor
mov
arpl
jecxz
or
pop
sbb
cld
mov
pop
xchg
dec
or
and
lods
out
mov
add
loopne
jmp
push
sahf
lahf
data16
add
mov
fidivl
stos
pop
jbe
xchg
cli
fxch
push
fildl
scas
dec
testl
inc
xor
dec
jle
inc
sub
loope
fsts
ret
lods
jp
aad
loopne
in
imul
or
xor
xchg
out
cmp
out
and
or
mov
xor
xorb
cltd
cli
xchg
lcall
pop
sub
arpl
adcb
push
jno
inc
jmp
sbb
mov
popa
test
pop
movsb
dec
sbb
add
shrb
dec
dec
jl
mov
mov
xchg
repnz
ss
mov
filds
icebp
mov
xchg
pop
adc
mov
push
adc
sahf
stos
scas
and
cmpsb
inc
xor
addr16
adc
or
inc
xchg
or
pop
jb
std
outsb
movsb
mov
lods
add
shll
in
pop
es
push
adc
icebp
je
dec
jnp
ret
xor
cmp
adc
ljmp
and
int3
out
mov
test
test
icebp
sub
push
push
data16
fiaddl
negb
push
test
adc
mov
jmp
mov
or
rcrb
cmc
sti
adc
push
lea
adc
or
sar
std
sahf
dec
dec
mov
adc
and
loopne
lret
push
cmp
es
sti
fstpt
lea
stos
pop
pusha
es
test
fsubrs
rorl
cld
aam
push
inc
pop
shrl
scas
pop
mov
xor
lds
jp
je
fidivrs
mov
push
jmp
in
jno
hlt
xor
mov
mov
enter
sbb
adc
sbbl
inc
pushf
hlt
in
cmc
stos
inc
in
xchg
pop
add
ret
sub
xor
into
aam
je
ret
fidivl
dec
adc
mov
pop
je
adc
adc
es
mov
pop
iret
xchg
mov
push
rcll
dec
mov
jle
pop
mov
out
cmp
adc
mov
into
enter
enter
sub
loop
es
push
mov
xchg
or
mov
adc
or
adc
pop
fwait
insl
push
sbb
mov
mov
in
or
fdivp
xor
in
cmp
popa
hlt
inc
rol
inc
cmpsl
sti
sub
fcoms
jmp
pop
or
xchg
daa
fs
data16
ja
in
sbb
cmp
bnd
and
push
push
xchg
fcom
inc
les
pop
sahf
into
std
adc
rorl
sub
popf
cwtl
jbe
test
push
cs
stos
xor
mov
dec
inc
fldcw
sub
cli
js
lcall
xor
sub
pop
adc
std
rorl
pop
inc
dec
dec
dec
loopne
subl
and
imulb
dec
lret
pusha
jno
push
inc
fsubrp
jle
out
inc
pop
push
jmp
rcrb
mov
mov
xor
and
add
adc
xorl
pop
jne
jecxz
leave
outsb
ror
movsl
and
pop
fdivrs
cli
leave
cld
js
and
sbb
cmp
aaa
shll
xor
or
mov
out
cltd
sub
add
repz
or
push
test
inc
xor
repz
add
mov
or
lahf
add
lret
stc
add
push
inc
mov
fnstsw
or
xchg
into
or
inc
test
mov
movsb
xchg
hlt
leave
push
sbb
push
das
fdivl
loopne
lret
inc
out
mov
repz
fsubs
das
push
jmp
jno
int3
cld
xor
movsl
sbb
icebp
daa
cmp
xchg
mov
in
push
add
inc
or
inc
mov
ret
loope
fbld
shrb
test
leave
xor
xchg
and
ljmp
cmc
push
das
and
cmpsb
jno
hlt
insb
push
sbb
les
stos
inc
sar
mov
in
jge
sbb
dec
fs
mov
cltd
popa
dec
movups
push
mov
xchg
push
add
adc
xchg
aam
pop
daa
daa
adc
jge
dec
xchg
mov
int
inc
or
xchg
add
or
mov
xorb
orb
sbb
mov
gs
call
cmpsb
ret
sahf
add
inc
imul
inc
inc
xchg
imul
pop
and
push
xor
and
adc
cmpsl
xlat
adc
adc
out
mov
mov
inc
and
sub
mov
lds
or
movlps
fdivrl
lahf
sti
push
test
push
roll
fmuls
sbb
hlt
lods
in
cmp
into
dec
imul
dec
lods
test
and
jp
dec
pop
fnsave
lods
inc
cmp
xorb
hlt
scas
out
cmpsl
or
stc
or
push
insl
popa
jnp
test
lods
mov
mov
les
fildll
inc
repnz
and
testb
or
jge
sahf
adc
sbb
in
or
ret
shll
std
repz
jge
dec
xorb
test
jp
pop
loopne
pusha
je
jg
push
xor
adc
out
cmpsb
inc
fisubrs
xor
inc
add
add
std
shr
sbb
adc
jns
adc
mov
push
or
cs
test
pop
imul
mov
mov
shll
ljmp
adc
dec
jnp
imul
sub
jmp
jns
imul
jmp
dec
mov
nop
jl
push
scas
xor
sub
rclb
push
arpl
fucomp
in
adc
js
enter
lret
mov
mov
push
lock
sti
add
loope
jp
push
fbstp
xor
sbb
lock
sub
lock
imul
fcomip
nop
lock
fisttps
or
cmp
lret
rolb
lret
pop
jge
pop
sub
cs
daa
loope
mov
icebp
scas
mov
repz
jo
ss
dec
scas
in
mov
push
push
lcall
and
jae
hlt
scas
jnp
xorl
mov
pop
stc
ds
jmp
xor
inc
push
add
cli
mov
mov
aad
fadd
mov
shrb
cs
dec
cmp
push
mov
or
mov
push
jge
jne
xor
ret
mov
sbb
imul
pushf
mov
mov
mov
and
mov
jae
push
shll
stc
inc
pusha
mov
fistl
dec
xchg
push
aas
enter
and
sbb
adcb
mov
ljmp
mov
fcompl
pop
daa
insb
shl
jo
pop
push
xchg
lcall
dec
enter
bound
inc
loope
sub
mov
push
insl
movsb
pop
call
and
xor
aas
lret
mov
scas
cmp
fdivl
mov
mov
adc
push
data16
setg
or
js
xchg
sbb
or
leave
or
sahf
cmpsl
mov
and
jmp
shlb
movsb
push
mov
fsubrs
push
pop
jne
add
inc
psrad
jno
mov
sahf
test
sub
xchg
fcomp
iret
mov
stos
sub
sbb
in
lret
movsl
inc
cmp
loopne
or
loop
mov
pop
lods
xchg
sahf
and
sbb
jne
cli
aad
jg
sti
dec
push
insb
cmp
jl
push
cmp
cmc
push
mov
arpl
xlat
or
out
mov
lea
insb
loopne
push
pop
xor
out
cmp
scas
gs
out
inc
sub
das
test
cmpsb
movsb
out
daa
cmc
adc
push
xchg
pop
fsts
sbb
add
cs
stos
pop
clc
fmul
pusha
sbb
add
adc
leave
push
gs
cs
hlt
and
popa
data16
lods
test
pop
mov
or
mov
sub
insl
sbb
lods
jmp
test
mov
mov
int
fldt
rolb
sarl
xchg
std
dec
shll
xchg
insl
jnp
xor
adc
test
stos
les
adc
jp
or
mov
test
mov
js
outsb
lret
dec
sub
repnz
push
inc
clc
out
dec
sub
jno
fnstenv
mov
movsb
icebp
mov
hlt
mov
aad
pop
insl
cmp
pop
cmp
add
stos
mov
sub
js
xor
push
dec
mov
syscall
push
in
pusha
icebp
cmp
or
out
pop
mov
or
mov
mov
inc
push
sti
cmp
or
jb
sub
mov
jg
mov
push
xor
push
mov
in
popa
pusha
loope
xorb
scas
mov
mov
sahf
sub
and
cmp
mov
lods
jecxz
and
stos
in
stos
xchg
sbb
xchg
test
mov
sub
scas
mov
lret
sbb
rcl
push
jns
js
mov
or
mov
mov
icebp
clc
or
inc
jge
pusha
in
adc
sahf
mov
imul
and
incb
xlat
inc
int3
mov
dec
cmp
shrl
push
mov
xchg
cmpsl
popa
mov
push
jo
cwtl
xchg
imul
xor
mov
pushf
nop
shrb
test
ja
cmp
pop
mov
pop
xchg
lock
sub
dec
mov
push
pop
ret
ljmp
out
in
mov
bound
sbb
roll
movl
ret
cmp
pop
sbbb
xchg
sub
push
xchg
scas
jb
sub
push
pop
cmpb
sub
sub
arpl
lock
insl
ret
loope
scas
mov
imul
mov
add
mov
push
hlt
push
sub
push
ljmp
sahf
into
lret
push
or
dec
jge
mov
fldt
testl
cmpsl
sti
shrb
pop
xor
int3
sub
jno
fisttpll
cmp
xchg
fs
lods
xchg
jl
sbb
loope
fistpll
pusha
lods
cmpsl
testb
jp
dec
adc
rorb
mov
cltd
cwtl
lahf
mov
xor
add
mov
clc
lods
mov
xchg
add
ret
mov
mov
in
xchg
aad
pushf
out
push
mov
cmpsl
mov
add
movsl
push
jo
push
mov
cmpsl
lret
mov
sbb
jo
mov
lock
push
mov
lahf
aam
rol
sbb
mov
out
mov
dec
sbb
sti
ja
mov
mov
jmp
mov
bound
jnp
cmp
jmp
test
pop
and
cwtl
dec
xor
lock
xlat
mov
stc
push
xorb
xor
movsb
pop
icebp
test
sbb
dec
pop
cmpsb
enter
pop
mov
mov
das
push
rorl
divb
test
outsb
jp
shll
cmp
xor
xchg
cmpsb
insl
je
std
cmp
fidivrl
fisttpll
icebp
stc
jne
shlb
xor
fcoms
mov
cmp
mov
enterw
push
adcb
into
mov
push
pop
or
lods
push
mov
js
xor
dec
or
pop
add
mov
sysret
pop
sub
test
rolb
and
mov
ja
mov
lahf
mull
cltd
adc
movl
cwtl
daa
int3
xchg
es
stos
xchg
mov
adc
fstps
pushw
test
in
pop
push
shrb
int3
ret
push
inc
inc
cmp
cltd
jb
pop
cmpsb
jl
add
fpatan
mov
movb
shr
sbb
mulb
leave
jns
mov
jge
push
xchg
testl
or
add
xchg
xor
popa
lahf
outsl
xor
xchg
mov
xchg
xlat
push
add
adc
adc
mov
add
inc
push
pop
insl
ss
mov
xchg
in
sahf
inc
js
es
and
iret
xchg
rorb
insl
popf
cwtl
lods
jp
cmp
jnp
je
ljmp
dec
leave
mov
lea
pop
ret
rorl
adc
idivb
jb
push
icebp
cld
inc
xchg
stos
es
inc
test
cmp
sarl
jge
int3
pop
lret
cmp
sub
rcrl
sbb
jl
lds
xlat
pop
scas
adc
jl
xchg
rcrl
pop
push
adc
shlb
cs
xor
adc
push
lea
mov
arpl
push
inc
test
jecxz
ljmp
mov
repnz
test
sub
inc
pop
push
iret
push
dec
jns
out
idivb
int
scas
xchg
aam
jno
mov
pop
cld
pop
cmpl
sub
or
mov
rolb
adc
mov
jl
mov
mov
jecxz
sbb
fbstp
xchg
or
or
imul
xchg
or
leave
les
jp
add
add
jp
sbb
gs
xor
out
lock
idiv
mov
push
fldenv
ss
cli
data16
xlat
xchg
in
mov
sbb
sub
pop
lcall
int3
lcall
add
push
gs
xchg
cs
cmp
pop
sub
add
lret
lea
dec
add
filds
rorb
cmp
xlat
push
mov
mov
pusha
mov
aaa
mov
aad
pop
mov
adc
hlt
and
popf
or
sub
idivl
leave
mov
adc
push
mov
mov
sub
and
mov
and
mov
mov
and
pop
fs
fiaddl
rclb
insb
cli
push
test
jae
aaa
jb
push
hlt
inc
lods
cmp
push
sbbl
imul
fsubs
xlat
lock
fmuls
mov
lret
sbb
push
jo
fninit
jp
clc
cmp
cmp
mov
test
repnz
xchg
pusha
cmpl
xor
mov
aam
jbe
dec
iret
adc
push
mov
lods
cli
loop
call
lds
test
cli
jecxz
fisubl
mov
jb
fwait
push
rcr
mov
addr16
sbb
mov
xor
sub
sbb
cltd
cmpsb
xrelease
shl
mov
es
or
lcall
or
cmpsb
dec
in
in
rcl
push
out
aaa
cmc
add
xor
push
push
icebp
sub
mov
sbb
or
xchg
jbe
adc
btc
dec
sbb
jmp
std
rclb
push
or
pop
adc
imul
sbb
sbb
aam
jmp
fdivrl
or
imul
test
inc
dec
xor
loope
sbb
arpl
xchg
test
or
loope
sbbb
mov
pop
fucomi
add
pop
jle
xchg
pusha
in
cli
xor
rcr
es
cmc
or
mov
sbb
jne
jo
subl
jo
ret
jmp
leave
inc
push
and
jnp
jg
aad
mov
mov
fs
and
and
sub
dec
and
add
push
test
inc
out
add
repz
xchg
dec
iret
pop
cmp
inc
adc
mov
mov
jnp
xchg
out
xor
dec
push
jg
idivl
sbb
xchg
into
daa
in
add
lock
cmp
xor
repnz
mov
ds
push
sarl
lock
jle
lret
clc
nop
sub
pushf
cmp
mov
sub
pop
incb
mov
push
mov
je
xor
sarb
popa
mov
sbb
push
pusha
test
xchg
or
push
fs
mov
sub
jg
ret
ret
pusha
mov
pop
lds
or
ja
push
xchg
clc
push
clc
addr16
aas
loopne
out
inc
adc
xchg
dec
sbb
jle
adc
and
cld
xchg
and
imul
mov
xchg
xchg
scas
cmc
call
pop
adc
jge
push
mulb
jb
les
ret
fnstcw
lods
push
nop
cli
sub
mov
mov
push
and
jo
enter
and
aas
xchg
add
jne
aaa
test
adc
dec
pop
out
mov
ja
mov
mov
pop
pop
push
cmpsb
sbb
sbb
ss
dec
xor
xor
les
in
mov
mov
out
mov
das
mov
mov
xchg
sub
insb
or
pop
inc
mov
ds
xchg
or
xchg
cmp
lods
mov
adc
in
dec
arpl
lods
push
lret
sbb
cmp
pop
scas
call
xor
jge
fnstcw
movsb
flds
inc
loop
cwtl
js
xchg
sub
dec
mov
aad
mov
jne
mov
test
mov
shlb
dec
or
and
cmp
or
stos
stc
adc
cmp
pop
ja
inc
xlat
cmpsb
and
fcompl
add
popa
iret
jg
lods
dec
repnz
xchg
aas
mov
addb
inc
and
test
xor
mov
sbb
ljmp
sbbb
test
or
pop
and
mov
pop
mov
mov
xchg
push
stc
jnp
pop
test
mov
imul
cld
mov
pushf
mov
filds
pop
push
pop
not
jmp
xchg
decb
test
pushf
test
inc
mov
push
outsb
jbe
lret
lahf
dec
pop
iret
faddp
ds
jl
mov
cld
cmc
in
jmp
push
ret
idivl
aad
mov
lock
xchg
xlat
jns
in
and
aaa
adc
xor
pusha
mov
repz
adc
add
mov
jge
ret
xor
mov
dec
mov
mov
insb
push
ljmp
mov
cli
mov
or
cltd
in
in
dec
jecxz
push
data16
xor
xchg
repz
mov
mov
mov
daa
leave
addr16
out
stc
pop
mov
xchg
rclb
pop
addr16
in
movl
jl
cld
adc
lcall
cmp
xchg
or
lcall
rcll
push
popa
cmp
push
inc
movsb
lret
mov
sub
adcb
daa
xchg
testl
xor
lea
sbb
jl
mov
mov
add
xor
scas
inc
inc
mov
cmp
lds
movsl
leave
daa
add
ret
pusha
dec
fcoms
aaa
orl
bound
sub
pop
pop
pop
mov
incb
push
call
dec
mov
push
push
aaa
mov
and
and
cmp
mov
sub
jmp
ja
pop
sbb
jmp
mov
jb
sub
movsl
dec
shrl
lret
ret
sub
aas
inc
push
or
gs
mov
nop
mov
mov
test
lods
outsb
pop
stc
add
pop
xchg
iret
in
push
mov
imul
inc
pop
lods
in
pushf
push
cmp
push
mov
dec
jns
sbb
aas
icebp
lds
push
mov
and
dec
mov
sub
and
inc
push
ljmp
arpl
xchg
mov
jl
xorb
stos
int3
int3
test
xor
pusha
rcrb
adc
imul
shl
fldcw
inc
fists
dec
jo
dec
mov
or
iret
imul
stos
sbb
sbb
fwait
sub
sub
jge
nop
aad
shlb
data16
lods
mov
jbe
mov
mov
sbb
pop
aas
stc
fcmovnu
dec
loopne
dec
cs
pop
sub
cmp
lcall
sbbl
subl
and
sbb
fwait
and
pop
enter
idiv
rorb
rcrl
and
int
xchg
lds
aas
add
push
mov
std
xor
fldl
insl
or
call
inc
out
xor
enter
cmp
call
adc
inc
xor
cwtl
mov
push
shrd
cmp
add
test
mov
aad
mov
adc
adc
aas
push
test
push
push
or
scas
pop
loop
aaa
call
fildll
xorl
iret
or
in
jle
scas
and
mov
imul
std
jl
add
jmp
imul
adc
fidivrs
rcll
in
arpl
das
inc
add
leave
xchg
stos
in
lahf
and
decb
sbb
jns
dec
test
fnstenv
pop
add
xchg
mov
pop
or
in
cltd
loop
adc
data16
sub
add
sar
and
inc
xchg
mov
fisttps
mov
and
or
adc
mov
call
lds
adcl
or
or
cmp
lret
add
icebp
jg
outsl
xchg
addr16
pop
stc
out
pop
iret
cli
lret
cld
and
push
sbb
and
push
cmpsb
jmp
lds
push
or
and
sub
pop
and
popa
mov
pop
aam
jp
cmp
push
ret
sbb
inc
lock
aad
shlb
cltd
mov
mov
adc
xor
mov
xlat
or
adc
shlb
cmpl
push
dec
dec
lcall
add
xor
inc
fwait
dec
or
nop
test
pop
cmp
in
nop
dec
inc
push
add
push
in
xor
nop
das
ja
out
and
popf
test
loop
stos
pop
frstor
imul
inc
sbb
outsl
add
mov
pop
and
fucomi
out
sbb
mov
xchg
jg
das
ja
lret
test
in
dec
jle
loop
inc
sbb
xor
pop
out
test
jae
test
push
insl
xchg
xchg
lods
and
sub
loopne
mov
shlb
fdivs
bnd
xor
cmp
cmp
shlb
in
pop
jnp
loopne
cli
js
adc
mov
xor
incb
mov
aam
mov
sbb
adc
dec
xchg
adc
dec
fs
dec
push
and
mov
xor
cwtl
mov
hlt
mov
xchg
sbb
sbb
pop
nop
pop
movsb
jg
jns
dec
je
jbe
popf
idivl
mov
mov
mov
outsl
scas
dec
mov
ret
insb
lcall
sarb
push
inc
mov
clc
sub
jle
in
clc
dec
cmp
call
push
dec
mov
call
mov
push
mov
jbe
xlat
jbe
push
lahf
aaa
cmp
pop
aas
int
dec
jp
jae
xchg
sahf
mov
loopne
xor
cmc
and
or
sbb
and
ret
stos
pop
pop
mov
stos
xchg
pushf
mov
fcompl
pop
jno
jb
or
imul
xchg
arpl
lock
outsl
es
cmp
sbb
out
js
pop
sti
fadds
mov
dec
out
inc
mov
fisttpl
stc
int
or
lea
in
faddl
jp
in
jmp
mov
sbb
sub
or
push
mov
jp
imul
adc
jge
aaa
jl
jge
dec
addl
sub
cmp
mov
rcrl
stos
lea
xor
cmp
push
push
xchg
cmp
data16
adc
or
nop
pop
push
aas
shrb
xchg
mov
pop
ret
xor
inc
es
sub
out
sbb
in
dec
cmc
clc
aas
push
pop
xor
xlat
jmp
pop
cmp
mov
and
nop
jae
icebp
and
jecxz
adc
fistpll
out
xor
or
xchg
xor
test
mov
xchg
mov
jg
ficomps
inc
mov
iret
push
mov
sub
cmp
ds
aad
in
and
jle
in
or
mov
cmc
xchg
mull
sub
sub
xchg
sub
inc
sti
gs
pop
jle
addr16
mov
pop
lds
mov
fisttpl
fisttpl
stc
or
cli
gs
ret
inc
push
insl
pop
xchg
dec
int
stos
push
xchg
or
aas
adc
mov
iret
xchg
or
test
xchg
jmp
and
lret
cmp
pop
jp
notl
add
jg
mov
bound
xchg
stos
dec
sahf
cmp
jns
icebp
inc
sub
lds
pop
loopne,pt
outsb
inc
test
dec
out
mov
jno
mov
cmc
jmp
dec
pop
jo
negl
scas
aaa
dec
dec
jnp
pushf
lods
fnstenv
fmuls
pop
jge
xorb
dec
insl
cli
fsubs
cltd
jno
push
push
mov
cmpb
add
cmpsb
dec
fstpt
pop
fnsave
stos
lods
xor
jl
shll
pop
jb
push
stc
jmp
lcall
aas
jne
dec
bound
sub
push
iret
mov
jbe
test
adc
pusha
mov
rclb
mov
mov
in
or
xchg
jmp
mov
lcall
sbb
mov
jmp
and
addb
fcomps
es
in
cmpsb
mov
dec
mov
push
pop
movsl
push
movsb
addr16
mov
test
ljmp
pushf
pop
nop
in
fidivrs
pop
push
sbb
lock
jecxz
sub
push
or
push
or
sti
imulb
into
xchg
es
lahf
and
xor
addr16
xlat
je
addl
sub
xchg
outsb
rorb
mov
dec
loopne
jb
sub
xchg
popf
mov
std
and
scas
arpl
xor
push
or
fcoms
mov
jl
xor
push
cmpsb
insl
in
insl
notl
fmuls
mov
adc
dec
movsb
rorl
in
incl
mov
add
aaa
xor
adc
adcl
lcall
nop
or
clc
enter
mov
xor
xchg
mov
pusha
insl
adc
mov
dec
aaa
aam
mov
enter
lahf
addr16
mov
and
ret
lret
ja
sbb
cmc
notl
xor
out
cld
enter
and
inc
mov
stos
in
mov
add
aaa
jmp
roll
and
mov
hlt
pusha
rorb
jne
mov
pusha
pop
ljmp
fwait
cld
lcall
and
xor
fists
inc
loopne
mov
test
popf
mov
jl
mov
xchg
xchg
inc
xlat
inc
pop
insl
mov
and
cmp
push
imulb
sub
or
movsl
decb
or
push
xchg
loop
cld
mov
jno
bnd
sbb
lock
mov
stos
cmpsl
repz
and
mov
cld
add
ret
xchg
fsts
sbb
jns
adc
mov
je
push
inc
xor
or
push
and
mov
jno
mov
shrb
mov
xor
sbb
pop
testb
and
push
lods
or
adc
je
bound
imul
arpl
out
sbb
ljmp
mov
fs
sub
adc
push
testb
imul
or
cmp
and
xchg
mov
dec
adc
mov
fsubs
cmp
sbb
test
out
sbb
mov
xor
jae
imul
lds
cmc
jne
loop
push
mov
adc
pushf
fstpt
push
mov
inc
mulb
ljmp
cli
lahf
add
loop
mov
pop
pusha
pop
push
scas
lods
repnz
dec
aam
mov
mov
orl
lds
pop
sub
xchg
or
ficomps
push
lahf
fwait
or
add
icebp
sbb
les
bswap
add
stos
push
xlat
ljmp
sahf
add
jg
push
sbb
push
sbb
test
mov
adc
dec
dec
fdivl
pop
mov
cmp
jmp
lcall
pop
ljmp
dec
pcmpgtd
lods
notb
or
loope
mov
pop
mov
inc
cmp
jp
dec
inc
loop
ljmp
out
sarl
popa
pop
inc
lret
les
dec
jbe
mov
or
cltd
int
push
es
adc
movsl
pop
es
ret
js
ss
dec
scas
jnp
mov
out
daa
adc
jecxz
pop
mov
outsb
xor
pop
jge
daa
psubsb
scas
push
cmp
pushf
shr
push
mov
jnp
push
pop
jmp
xchg
mov
lret
adc
and
or
scas
popa
lahf
inc
cmp
xchg
push
mov
push
into
gs
out
lret
icebp
xchg
add
jns
icebp
adc
cmpsl
pop
adc
fdivr
stc
pop
aam
inc
sbb
mov
bound
push
xor
loope
sbb
jns
mov
jne
mov
fistpl
repnz
rorl
mov
cwtl
ss
add
jecxz
scas
xor
in
mov
pop
or
clc
dec
je
dec
push
aas
mov
daa
imul
aaa
int3
jne
cmp
aaa
adc
sub
lahf
call
cmpb
adc
int3
orps
fiadds
popf
jne
pop
add
xchg
addb
and
addr16
dec
and
mov
add
mov
popa
out
mov
cmp
mov
xor
xchg
and
ss
add
rorl
aas
inc
lock
les
or
mov
mov
sub
inc
adc
mov
sub
shl
inc
shr
jno
adc
pop
jecxz
adc
and
xor
mov
or
or
mov
jae
xor
and
sub
add
sub
dec
or
xor
hlt
cmpsl
test
inc
push
mov
adc
into
roll
jns
cmp
aam
lock
aas
das
fnstsw
mov
push
push
aaa
pop
out
push
out
addl
or
movsb
or
popa
fisubrs
mov
sti
fdivs
mov
bound
clc
ret
adcl
dec
insl
mov
fdivs
out
int
sbb
in
lods
std
jo
push
xorl
mov
push
mov
push
rclb
inc
jae
mov
lea
sub
lret
test
lods
cmpsb
add
ljmp
push
add
adc
push
or
lahf
and
pop
test
loope
notl
arpl
push
cld
sbb
lret
push
in
fistpll
add
mov
scas
mov
daa
dec
adc
inc
test
mov
dec
jge
aad
jg
fcoms
out
dec
xchg
inc
ja
and
sbb
jle
pop
xor
fisubrs
sub
cmp
push
xor
mov
aas
sahf
fcmovbe
mov
xor
sbb
inc
mov
mov
xchg
pop
inc
lret
pop
fcoms
notb
or
push
loop
sbb
bound
sbb
inc
aad
pusha
inc
inc
fsubrl
lods
add
and
js
ret
imul
jmp
mov
mov
sub
leave
cmp
push
pop
pop
or
dec
lods
xchg
mov
shrl
and
or
pop
cli
push
or
cli
out
dec
inc
out
xor
xor
clc
and
push
mov
adc
std
inc
inc
push
push
scas
movsl
add
push
add
sti
push
addr16
inc
rcl
enter
or
adc
adc
mov
pop
mov
adc
loope
iret
ljmp
xchg
mov
lods
aas
jmp
in
pop
mov
mov
rep
popf
mov
xchg
or
jecxz
daa
xor
es
mov
shll
pop
cmp
mov
jge
jmp
or
ret
adc
mov
into
mov
cmp
xlat
push
cmp
sub
sarl
xor
and
or
sti
popf
push
inc
dec
mov
data16
inc
xlat
pop
adc
lea
pop
addl
sub
hlt
test
andb
lds
andb
aaa
push
cld
jbe
jnp
lea
jb
push
sbbl
or
popa
and
fdivs
pop
lret
into
jmp
jbe
test
mov
fdivrp
arpl
or
jmp
ficoml
sbb
int3
mov
lcall
into
fsubr
in
pushf
gs
movsb
xchg
jge
mov
xor
dec
pop
or
mov
push
add
gs
sub
cltd
sbb
jbe
addr16
cmp
pop
cli
icebp
dec
out
cmc
dec
clc
fs
xorps
sbb
or
pop
scas
jb
clc
jbe
jbe
ret
sbb
pop
loope
sbb
clc
cmp
ljmp
jecxz
cmpsb
arpl
das
sbb
cli
cmp
or
dec
adc
cli
or
add
sub
dec
loopne
jns
mov
push
jb
mov
mov
xchg
cmp
xchg
dec
insb
cmp
jbe
enter
loop
sbb
pop
xlat
pop
mov
in
loop
sbb
cmp
mov
mov
jl
mov
sbb
adc
loope
cld
loop
enter
outsl
rcr
mov
inc
aas
pop
push
push
popl
les
mov
cld
movsb
clc
in
and
pop
cli
repz
fidivrs
rclb
rcl
stos
in
fs
fidivs
ret
mov
mov
ffreep
jg
adc
mov
xor
addr16
xor
pushf
jg
daa
mov
and
xchg
out
jmp
lea
jge
rol
sub
and
jno
cmp
sbb
mov
pusha
sub
adc
pop
sub
and
mov
loopne
sti
enter
jecxz
sub
sti
add
xor
stc
push
adc
iret
add
aad
pop
jns
cwtl
add
out
lea
xor
xor
and
push
inc
mov
jns
out
fisubl
loop
pop
enter
ret
cwtl
lcall
ror
mov
jl
sbb
jp
cmc
sub
fnstcw
inc
add
inc
xchg
push
mov
jo
ret
inc
push
cmp
ljmp
mov
adc
sub
inc
data16
das
lcall
push
sti
pop
stos
cltd
out
icebp
lock
dec
out
mov
xor
cmp
outsb
imul
addb
daa
xor
adc
ds
jecxz
and
daa
pusha
mov
push
pushw
dec
insl
xor
stc
ss
out
in
jmp
cs
or
lret
sbb
add
movsl
test
fbstp
pop
repz
mov
loopne
mov
and
test
adc
mov
cltd
imul
les
xorb
inc
rorl
mov
in
popa
mov
add
mull
in
stc
ja
inc
lods
mov
cs
inc
xlat
insb
sub
xchg
dec
jnp
aad
cwtl
mov
lods
jmp
jb
adc
sbb
sub
out
mov
lock
jle
adc
fs
push
inc
fistpll
mov
mov
cmp
add
sbb
jno
icebp
shll
mov
int3
adc
scas
out
jb
out
cwtl
lods
leave
fwait
aaa
dec
inc
outsl
adc
mov
test
jmp
add
daa
mov
xor
je
mov
pop
mov
jns
lcall
mov
popa
icebp
lret
push
lret
add
xorl
nop
out
mov
imul
in
cmp
cmc
test
jnp
sbb
icebp
lret
jmp
xchg
fwait
pop
test
stos
insb
data16
xor
scas
push
adc
xchg
sbb
imulb
lahf
mov
jae
lret
fs
loope
mov
mov
aad
push
aaa
push
xor
int3
out
sub
sub
mov
aad
push
sti
rclb
inc
imul
insl
lahf
push
imul
and
pop
push
outsl
lret
pop
loope
jmp
lock
cmpsb
fistpll
cmc
outsb
sub
push
outsl
scas
hlt
pusha
mov
sub
hlt
and
mov
sti
jbe
int
or
bound
pop
call
and
sub
out
mov
testb
cmpsl
dec
lret
daa
das
std
in
sbb
imul
inc
loope
mov
sbb
push
lcall
or
mov
mov
stos
ret
loopne
and
sub
jb
fnstenv
in
addr16
mov
ja
pushf
aam
jle
mov
cld
mov
xor
imul
xor
fnstsw
stos
add
roll
out
roll
add
sbb
imul
jnp
aad
pop
add
and
or
sbb
xchg
jb
sub
push
or
mov
add
adc
mov
sbb
mov
lock
jmp
or
test
out
and
xlat
fwait
dec
aad
icebp
mov
shl
and
and
add
sub
mov
clc
or
daa
pop
push
ss
inc
mov
dec
adc
mov
ret
rcrb
int3
cmp
jge
cs
push
mov
sahf
out
cmp
insl
xlat
movsb
and
mov
add
sbb
fs
mov
cmp
push
sbb
sbb
out
subl
lahf
int
lcall
xor
push
repnz
sub
xchg
xchg
loop
into
sub
insl
add
mov
insl
push
xor
pushw
pusha
repz
dec
mov
outsb
orl
jle
jg
mov
jmp
push
or
jge
shll
test
int
jno
cwtl
ss
jns
inc
lret
add
xor
es
bound
movsb
xchg
fldl
imul
cmc
add
mov
adc
inc
inc
xchg
xlat
lea
in
popa
cmp
call
fisubs
leave
test
or
pop
or
andl
aas
vpsubw
loopne
pop
sub
das
rclb
xlat
push
jne
out
hlt
subb
xor
and
lahf
in
les
mov
lret
repz
pop
outsl
jle
add
xchg
or
aas
hlt
les
aas
jb
sbb
xchg
jle
or
adc
push
ds
in
lods
push
xor
ss
jmp
jae
iret
add
cltd
test
sbb
lods
inc
movsb
push
inc
mov
iret
mov
sub
mov
mov
pop
dec
imul
enter
fs
hlt
mov
push
mov
pushf
test
loop
xchg
mov
and
mov
stos
fldz
cmc
dec
sbb
bound
or
jae
roll
xchg
xchg
jne
in
fnstcw
scas
xchg
lcall
pushf
inc
sub
jne
scas
mov
xor
mov
sub
sub
es
lods
pop
movsb
inc
and
movsb
fistpl
mov
sub
sub
dec
jae
adc
out
jnp
pop
lods
das
cmpsl
xchg
add
and
sub
push
mov
pop
cmp
xchg
xchg
nop
mov
xor
ljmp
fs
pop
cwtl
arpl
mov
lea
imul
es
repz
enter
pusha
cwtl
xor
data16
and
push
mul
fucomip
pop
adc
dec
test
xchg
sti
out
jp
add
cmp
pop
mov
mov
aas
fs
inc
lea
pop
sarb
mov
inc
pop
ljmp
cmpsb
imul
adc
xchg
inc
pop
aam
ficoms
cmp
fadd
cmp
push
ja
out
and
mov
cs
dec
lcall
out
xor
add
lock
xchg
jg
dec
lahf
int3
arpl
sub
sbb
sub
sub
std
jge
leave
mov
or
stos
imul
cltd
fsts
dec
push
mov
xchg
fs
xchg
xchg
int
stos
and
pop
movsb
fisubl
stc
xchg
jp
push
in
push
decb
mov
xchg
cmpsb
ret
xchg
xchg
push
scas
cld
aas
inc
push
pop
cmpb
and
ss
pop
adc
out
iret
decb
ja
cmp
das
mov
icebp
sbb
call
nop
adc
int3
sbb
mov
cs
xchg
mov
pop
mov
xor
popa
pop
xchg
iret
mov
insl
test
push
out
stos
cmc
fisubrs
mov
ljmp
lock
pandn
or
shrb
inc
loopne
pop
jl
rorb
mov
inc
insl
fdivl
xchg
hlt
subl
movsl
cmpsb
insl
adc
scas
arpl
test
mov
movsb
sub
add
rcrb
and
lret
arpl
jg
jbe
out
add
int3
idiv
movsl
test
cmpsb
mov
push
shll
xor
cmp
lods
movsl
das
inc
push
lods
cmpsl
popf
pop
test
rolb
out
ss
lcall
lcall
jp
dec
iret
mov
inc
dec
ds
pop
movsl
pop
xchg
xchg
aas
subl
cwtl
mov
adc
mov
mov
arpl
ja
lock
iret
mov
sub
xorl
inc
and
push
scas
arpl
pop
fadd
scas
daa
jg
and
and
or
pop
rcrl
inc
arpl
pop
stc
lahf
or
adc
ret
dec
mov
xchg
jle
bound
sarb
stos
inc
cld
dec
and
outsl
enter
out
rorl
mov
sti
mov
jns
mov
add
addr16
sbb
test
pop
adc
lds
adc
mov
xorb
test
fincstp
mov
or
sub
dec
js
xchg
stc
pop
int3
mov
iret
jns
fwait
mov
push
mov
es
ds
add
iret
sbb
add
sbb
mov
xchg
xchg
cmpsb
push
mov
faddl
insl
cmp
decl
and
jne
mov
jae
je
add
jo
inc
hlt
mov
mov
ret
shl
enter
shrl
mov
rcrl
stos
jb
xchg
add
iret
fsts
stc
inc
xchg
adc
inc
sti
push
add
mov
ja
or
lock
pop
fsts
mov
xchg
pop
mov
push
or
icebp
fs
pusha
loop
shl
adc
or
xchg
fsubs
and
mov
dec
hlt
lahf
push
jle
int
lret
in
push
fcom
lock
xchg
ficompl
xlat
jecxz
lea
stos
in
and
push
mov
bound
jmp
imul
ret
mov
jo
loope
sbb
jmp
mov
fs
imul
push
push
jno
pop
xor
xor
repnz
add
or
test
int3
into
stc
xchg
mov
aaa
cmp
cmpsl
shl
or
sbb
dec
mov
fstpl
fmull
fldl
testb
jp
pop
movsb
sub
jns
cmp
pop
test
cs
and
inc
inc
or
sbb
out
dec
test
mov
push
cs
clc
enter
xchg
cmc
add
je
pop
ljmp
inc
hlt
xchg
lock
dec
dec
jo
test
rcl
inc
popf
push
ffree
xchg
and
sub
cwtl
jb
pushf
das
jae
add
jne
jb
dec
jnp
popf
gs
es
je
and
sub
fisttpll
sbb
dec
push
cmpl
xchg
pushf
leave
repnz
jp
mov
adc
cs
and
rcr
int3
aam
or
pop
int
lret
pusha
adc
jne
fcoms
sub
xor
jae
aaa
mov
push
mov
push
cmc
xorl
mov
imull
aaa
or
push
fcompl
and
mov
call
mov
je
mov
mov
loop
fldpi
lods
imul
fcmovnbe
pushf
cwtl
push
je
je
jne
outsl
cwtl
arpl
pop
sbb
sbb
or
mov
daa
orl
mov
fdivrp
pop
mov
dec
popa
dec
into
pop
pop
or
imul
nop
xor
xchg
mov
and
cmc
pop
jmp
out
sub
xor
mov
xor
sbb
test
inc
cmp
push
jge
dec
push
adc
and
stos
xchg
push
shl
js
dec
xor
inc
push
in
mov
in
scas
pop
ja
adc
repz
xchg
jnp
push
push
jecxz
js
inc
arpl
and
aas
addb
es
pop
shrb
sbb
mov
jno
mov
adc
push
fcomps
lret
ret
inc
jg
orl
dec
nop
nop
inc
jo
shrd
icebp
lock
sub
cmp
or
fldt
inc
pop
inc
neg
sbb
sbb
test
repnz
lds
or
adc
cmp
divb
out
cld
cmpl
cmpsl
pusha
xor
or
aam
mov
fnstenv
rclb
pop
xlat
cld
cmpsb
or
sbb
sbb
iret
insl
mov
ljmp
jno
das
das
dec
dec
pop
cmc
xchg
frstor
arpl
mov
xlat
mov
adc
lds
fdiv
cmp
jp
inc
arpl
test
fcompl
xchg
dec
cmp
dec
stc
fstps
xor
popf
and
rorl
or
push
idivl
jbe
inc
outsl
repnz
sbb
jmp
xchg
test
mov
push
fisubs
and
mov
jp
stos
ror
out
sbb
xor
jne
cltd
xchg
push
fdivrs
int3
sub
shll
and
mov
repnz
dec
pop
jae
insb
pop
dec
test
sbb
cmp
mov
fmuls
clc
stos
test
stos
adc
sbb
stc
fmul
jmp
sub
fiaddl
test
cmp
fstpl
outsl
inc
jne
cld
xchg
mov
pop
mov
pop
loopne
xlat
mov
sbb
or
ljmp
or
inc
pop
je
popf
sbb
mov
iret
sub
lcall
out
into
mov
cmpl
mov
cld
jp
es
jae
in
sti
add
test
lds
jg
inc
push
pop
push
lcall
sub
mov
push
inc
sub
test
aam
inc
jg
cmp
adc
add
adc
int
test
jb
sbb
and
lods
inc
and
subb
sbb
mov
repnz
in
sbb
lahf
imul
dec
aaa
inc
inc
adc
cmpsb
push
xchg
push
dec
lahf
mov
xchg
mov
stos
cmc
adc
stos
sub
sbb
ljmp
pop
bound
out
jns
push
or
inc
sbb
sbb
decb
bound
and
sahf
hlt
mov
loopne
xchg
cmp
stos
pop
xchg
icebp
lock
fwait
addb
cmp
outsl
fwait
push
mov
and
ror
insb
rorl
cmp
xchg
pop
in
mov
lods
dec
push
cmp
jl
test
mov
sbb
out
pop
jo
xor
jbe
nop
jne
dec
ret
ja
sbb
shrl
lds
leave
pop
and
pop
mov
mov
rclb
jmp
sbbb
out
inc
cmp
vunpckhps
sbbl
adc
mov
inc
fldlg2
ror
adc
xor
pop
push
dec
sbb
lock
lods
xchg
cmpsl
incb
cwtl
insb
pop
cmpl
adc
push
xchg
push
cmp
sbb
add
popf
pop
dec
pop
dec
leave
lods
or
lea
ficompl
addl
outsl
in
xor
repnz
js
inc
fsubr
test
adc
imul
subl
lret
dec
cld
cltd
dec
sbb
jae
cmp
out
je
mov
int
sub
add
sub
adc
pop
inc
dec
cli
clc
test
shlb
insl
jmp
xchg
les
cltd
xchg
fnstcw
outsb
ljmp
cwtl
inc
pop
dec
cwtl
xchg
ss
js
lods
dec
add
mov
mov
insb
mov
test
fwait
inc
mov
test
mov
aaa
repz
add
adc
jbe
jle
cmp
jl
mov
xlat
dec
pop
add
jecxz
mov
mov
xor
push
ss
das
test
push
hlt
popa
mov
movsb
xlat
xchg
lret
popa
loop
out
push
nop
into
pop
jl
adc
stos
pop
and
xor
inc
sbb
sbb
jp
testb
push
adc
xor
mov
pop
std
pop
mov
xor
stc
test
data16
fnstcw
push
sub
hlt
out
push
xchg
cwtl
mov
sar
ss
sbb
leave
je
push
test
adc
shr
inc
xchg
push
jae
jmp
push
inc
stos
outsl
inc
dec
dec
sti
mov
lret
inc
push
cmp
push
imul
mov
out
and
addr16
and
mov
sbbb
or
fnsave
add
sahf
push
mov
sbb
add
jne
lods
aas
lret
cmp
mov
ss
mulb
push
xor
jae
xchg
addr16
int
push
mov
adc
sbb
adc
dec
mov
fisttpl
sbb
push
movsl
test
sbb
in
mov
lock
cmpl
lahf
push
cs
ljmp
mov
sub
outsb
push
insb
sub
ror
push
cwtl
push
push
xchg
and
insl
outsl
sub
orb
outsb
das
cs
into
push
dec
out
xor
in
in
arpl
arpl
cmpsb
cli
std
mov
add
fidivrl
push
scas
mov
cwtl
push
mov
or
or
imul
jmp
roll
shrl
fildll
inc
out
sbb
movhps
mov
in
ljmp
mov
adc
nop
dec
push
out
fists
repz
jecxz
pusha
sbb
mov
cmpsl
mov
jae
pusha
es
repz
adc
ja
xchg
mov
movsb
cs
sbb
jmp
inc
dec
pushf
cmpsb
pop
jge
pop
jns
mov
cmp
fcoms
std
andb
pop
or
add
orb
pushf
icebp
adc
cmp
cmp
mov
sbb
inc
cmpsl
cmp
and
and
push
jecxz
popf
stos
cs
adc
pop
out
lods
sub
aad
int3
sbbb
cmp
stos
jmp
pop
jbe
jae
out
sbb
sbb
addb
clc
mov
clc
rcr
imul
mov
cmp
data16
repz
xlat
cmp
imul
jge
sub
loop
fmull
je
inc
inc
lret
fdivrs
out
mov
out
pop
fucom
ret
jp
outsl
mov
mov
mov
xor
xchg
dec
stos
xchg
nop
cli
mov
dec
ret
jl
jg
test
insb
pop
dec
sbb
and
incl
push
sbb
test
inc
arpl
std
jne
test
push
std
sahf
mov
addl
add
and
stos
into
jnp
int3
or
ficompl
adc
fcoml
and
ds
mov
xlat
lahf
cmp
push
lea
aad
xor
sbb
lods
sbb
int
sahf
cmc
cmp
adc
push
xor
imul
rcr
push
int
jle
repnz
lods
xchg
fwait
jae
test
cmpsb
frstor
lods
pop
adc
adc
iret
sbb
popa
pop
outsl
push
mull
or
pop
mov
sub
cmc
mov
cmpb
pushf
pop
jb
mov
sbb
pushf
shrb
sbb
lock
ljmp
jo
jecxz
int
push
das
adc
push
stos
jo
call
insb
fildl
xor
mov
pop
adc
fcomps
mov
stc
arpl
in
push
jl
ret
test
int
pop
fsts
or
add
cmp
clc
xor
mov
mov
int
data16
dec
lock
mov
in
cmp
xchg
pop
test
loop
lock
scas
xchg
cltd
out
xor
jae
pop
addr16
fmull
pop
inc
test
mov
and
push
fs
mull
and
jne
rcrb
das
mov
push
int
js
cli
add
cmp
stos
lahf
mov
inc
xor
push
iret
imul
sub
pop
repz
mov
xchg
xchg
lods
lock
jle
out
rorl
mov
nop
lahf
cmpsl
cmp
mov
add
gs
ljmp
sub
enter
fs
and
inc
lock
or
xor
dec
repz
jmp
inc
push
mov
ja
out
jg
inc
sbb
mov
xor
aad
adc
cmp
in
xchg
push
imul
inc
loop
jg
movsb
pop
push
add
jbe
jns
enter
add
xlat
pushf
cmp
rcrb
xchg
xor
pop
in
sbb
int3
idivl
out
scas
pop
fldt
adcl
mov
das
inc
popa
jo
mov
cli
jno
cmp
or
dec
sti
in
test
shll
push
or
fs
mov
mov
xchg
mov
cmp
mov
sub
xchg
bound
cmp
rclb
fs
jo
outsl
pusha
inc
lret
mov
das
inc
cltd
test
mov
and
das
outsb
xchg
negb
shl
les
lret
add
mov
movsb
cmc
sahf
jne
push
ljmp
ja
push
lds
jmp
cmp
cld
pop
or
add
out
or
inc
nop
cmp
das
scas
mov
or
ficoml
mov
movsl
adc
pop
adc
jo
jns
add
or
std
xor
je
cmp
xchg
inc
out
aas
cmp
jo
xchg
ss
jnp
fistpll
and
insb
inc
sbb
mov
icebp
mov
int3
negb
int3
dec
push
int
fstpl
sub
and
test
inc
cld
pop
mov
jecxz
pop
mov
xchg
jno
push
jge
push
pop
in
cmc
test
sbb
and
pop
mov
fsub
lret
push
subl
enter
loope
mov
fcompl
xchg
lret
cli
rcrb
loope
xor
mov
daa
andb
insb
sub
call
loope
jnp
cmpsl
adc
sti
lcall
cwtl
mov
data16
and
mov
pop
push
mov
sbb
sbb
adc
imul
and
lret
mov
pusha
jo
inc
lods
dec
hlt
adc
leave
mov
test
inc
out
adc
adc
clc
das
mulb
scas
push
movsl
adc
popa
scas
ds
xchg
inc
dec
out
lock
add
jle
pusha
fsubr
movsb
fistpl
repnz
inc
aaa
rcrb
jl
push
lock
inc
jo
rcrb
push
push
xchg
adc
cltd
sub
fldt
in
mov
mov
rorl
xorb
std
popa
enter
enter
add
fisubs
jle
add
xor
lea
repz
jge
push
push
pusha
scas
xor
cmp
fnop
dec
int3
or
test
and
leave
xor
sbb
mov
jl
roll
ret
out
xor
adc
bound
fwait
push
shl
popf
jg
sub
mov
cmp
cwtl
sub
xchg
adc
pop
jmp
fadds
inc
fsubs
add
rcll
fisubl
sarb
fiadds
add
jmp
add
add
sbb
xlat
jns
pop
mov
leave
mov
mov
jl
pusha
lret
sub
jno
cs
popa
adc
mov
push
outsl
out
imul
add
or
lods
ret
shll
pop
pop
xchg
push
xchg
stc
lods
mov
fimuls
ja
movsb
mov
xchg
sbb
jp
mov
aad
push
adc
xor
out
dec
pop
pop
mov
mov
jb
cmc
add
sarl
not
sub
add
push
mov
es
in
add
dec
jb
cmp
fmuls
leave
imul
lcall
repnz
jg
enter
xchg
enter
dec
mov
and
dec
mov
push
leave
fistpll
cs
pusha
xlat
dec
rorb
loop
pushf
mov
push
daa
in
into
dec
mov
pop
inc
lahf
test
xchg
add
xchg
sub
clc
int3
push
ficoml
sbb
cld
dec
jl
inc
jg
sub
dec
ficomps
pop
in
sarl
xchg
sbb
xchg
leave
add
repz
cmp
int3
mov
mov
xor
mov
lret
aaa
cmp
or
cld
jmp
jle
jg
dec
into
push
adc
inc
out
repnz
jo
push
sbb
test
in
fildll
cmp
ror
hlt
popl
cmp
cmp
dec
add
push
jbe
ret
cmpb
push
ret
cltd
and
xchg
sti
xor
mov
scas
fidivrl
sbb
mov
popa
dec
adcb
jnp
mov
lock
testl
jge
add
pop
mov
imul
rclb
push
or
filds
sub
add
ret
push
add
xchg
ss
loop
std
xchg
fcomps
mov
adc
fwait
in
adc
jnp
jno
mov
xor
pop
loope
xlat
ret
push
mov
out
jno
and
es
fdivl
adc
jae
sub
jmp
hlt
xchg
cmp
mov
push
daa
lcall
cld
dec
lret
shr
push
mov
sbbb
cmc
jns
inc
fptan
test
dec
sbb
call
fiadds
add
adc
adc
in
adc
sub
lea
jge
add
pop
dec
mov
mov
ja
loopne
cmovnp
mov
sub
ror
adc
mov
xchg
mov
aas
dec
fistl
xor
aad
gs
mov
inc
lods
sbb
movsb
xchg
xor
sbb
fadd
dec
mov
xchg
fimuls
fldl
cmp
jle
out
push
inc
jns
lret
jp
test
dec
dec
mov
adc
inc
add
in
fwait
mov
pop
sahf
jnp
jmp
xchg
pop
fildll
stc
xchg
mov
cmpsl
add
mov
sub
fxsave
pop
mov
sub
cmp
xor
sti
push
inc
lcall
xor
sti
gs
icebp
sub
daa
setbe
stos
fcompl
call
data16
inc
pop
addr16
jle
ret
pop
stos
lret
dec
or
movsb
adc
jo
push
or
dec
data16
stos
mov
in
sbb
clc
mov
decl
push
or
or
mov
xchg
popa
sub
nop
pop
or
dec
mov
inc
cmp
fisubrs
jmp
insl
sub
lea
jae
push
movsb
sbbl
test
and
pop
je
mov
lahf
mov
ret
daa
ja
sbb
test
and
add
jge
aas
icebp
mov
push
xchg
push
mov
xchg
mov
mov
lods
mov
test
push
cs
sbb
pop
mov
add
out
fidivs
ret
push
push
jns
test
pop
and
dec
jge
or
pop
mov
and
movsl
sub
mov
stos
out
int
xor
adc
ficompl
mov
adc
mov
xchg
lret
clc
dec
mov
gs
mov
arpl
cmp
add
xchg
jl
sub
rorl
add
cmp
sub
push
mov
out
adc
or
sahf
cltd
test
es
xchg
or
int
dec
sub
add
movb
cmp
jmp
fsub
jbe
cmp
bound
jmp
dec
mov
xor
rol
xor
insb
cmc
xchg
or
add
push
push
mov
rcl
ret
sbb
add
mov
leave
out
jno
bound
jl
mov
andl
and
aad
enter
jb
dec
rcll
inc
outsl
arpl
stc
add
fcmovnb
xchg
pop
fisubrl
fnstcw
mov
ljmp
mov
jmp
scas
push
sbb
sti
push
into
mov
push
cmpsl
push
xor
push
repz
push
inc
vmwrite
popf
das
lahf
xchg
xor
and
loope
rcr
jb
enter
push
sbb
fsubr
sub
pop
sub
add
dec
xor
adc
out
test
add
stc
shlb
pop
cmp
dec
dec
lods
arpl
stos
xchg
mov
aas
icebp
pop
pop
push
clc
ret
dec
iret
jl
shlb
sub
jno
mov
pop
pop
pcmpeqd
inc
dec
ss
pop
pop
movsl
divb
cmp
out
adc
in
loopne
fimuls
jmp
popf
mov
push
inc
int
lods
movsl
imul
mov
into
pushl
das
sbb
jnp
xor
pop
or
nop
lahf
or
cwtl
cmp
in
mov
lret
cmp
push
and
in
call
lret
int3
and
lret
cmp
inc
ror
jl
mov
call
mov
xchg
icebp
adc
push
mov
daa
scas
pop
or
sub
sbb
and
mov
je
mov
std
inc
iret
inc
lahf
and
xor
ret
mov
mov
shl
adc
sbb
mov
jg
pop
stos
mov
add
gs
cmp
jmp
pop
cli
lock
sub
lods
adc
ret
xor
mov
mov
jl
enter
add
push
xor
faddp
pushf
cld
fmull
dec
sbb
pop
adcl
adc
adc
cs
clc
movsl
int
int
and
add
sti
pop
inc
push
sub
mov
std
and
or
mov
sbb
xchg
mov
lret
out
test
cli
icebp
aam
and
jl
scas
scas
push
or
or
adc
or
inc
repz
loopne
shr
xchg
pop
xchg
push
stos
sub
sub
inc
adc
or
rolb
out
test
mov
xor
sub
xchg
cmp
aas
xor
add
sub
xlat
cs
popf
xchg
push
cmp
insl
shl
mov
ljmp
inc
xor
push
adc
inc
ss
mov
loop
or
sub
inc
xor
adc
adc
ss
addl
idiv
aaa
cltd
add
sub
inc
adc
or
cmc
or
jp
and
sbb
adc
and
xchg
cmp
dec
push
inc
xchg
ficomps
pop
mov
push
and
mov
jmp
mov
and
fcomip
call
mull
into
pushf
lahf
add
sub
mov
cwtl
sbb
sub
ret
fmul
mov
in
sbb
outsl
fnstcw
rol
sub
fsubl
pop
cmc
pop
sub
push
fdivp
insb
dec
dec
addr16
cs
cmp
dec
sbbl
jns
lahf
ss
push
outsl
ljmp
xor
pop
add
xor
shll
arpl
gs
xchg
insb
out
or
sub
cmc
or
mov
jnp
cld
sbb
add
fxch
aam
sbb
pop
ja
push
cwtl
fdivs
test
cmpsb
inc
jmp
shl
repnz
out
cmp
stos
mov
sbb
xchg
push
xchg
mov
int3
js
adc
sub
in
mov
cmp
pop
fnsave
mov
dec
enter
bound
addr16
xchg
test
mov
add
test
mov
mov
adc
jl
ja
jmp
push
jns
inc
lods
adc
ret
std
out
dec
roll
pop
or
rorb
lahf
cld
fdivrs
sbb
push
lock
mov
jne
mov
je
outsb
add
cs
jg
mov
cltd
jne
lock
pop
push
scas
popa
push
aaa
pop
ss
inc
and
fistps
or
leave
into
mov
lods
in
pushf
shlb
xchg
daa
push
pop
imul
xor
sub
test
jns
inc
loope
lret
les
rolb
in
sti
adc
shlb
mov
out
aaa
xchg
cmpb
sbb
push
mov
jp
pop
mov
sub
lds
dec
mov
mov
shlb
mov
cmp
pop
push
fdivrl
add
cmp
lds
lock
mov
insl
clc
outsl
int
fwait
ret
mov
xchg
leave
add
sarl
mov
nop
push
mov
xchg
and
arpl
xor
add
lahf
les
adc
cmp
adc
adc
push
push
lods
adc
in
push
cmp
cli
pop
mov
aam
aam
mov
mov
jmp
mov
xlat
fwait
and
dec
dec
mov
popf
mov
mov
rcll
push
in
mov
mov
pop
sbb
mov
outsl
jo
mov
call
fdiv
mov
call
xchg
sbb
sbb
out
arpl
jle
fcom
push
fimuls
mov
call
mov
mov
push
add
add
inc
sub
pushf
push
push
imul
mov
mov
mov
cwtl
inc
aam
into
frstor
dec
addr16
mov
iret
push
inc
jle
mov
xor
sbb
inc
int3
hlt
subl
cwtl
lods
in
outsl
push
in
sbb
or
fstpl
pop
scas
push
rcl
shr
inc
cltd
push
pop
in
out
push
dec
sbb
cltd
xor
mov
dec
xchg
push
adc
sbb
aad
fdecstp
sub
hlt
or
adc
and
out
add
push
inc
push
mov
jl
outsl
push
dec
arpl
fcmove
add
inc
xlat
push
out
aam
negb
out
test
sbbb
pop
sub
adc
mov
cmp
or
aaa
clc
jg
clc
push
xchg
cmp
xorb
xchg
pop
dec
push
bound
stos
add
gs
or
or
inc
push
aad
xchg
mov
mov
addb
push
push
cmp
lahf
iret
mov
call
repnz
fsub
xor
iret
jp
orb
jae
pop
jae
pop
pop
fdivrs
mov
add
add
mov
fmuls
mov
das
out
xchg
into
stos
lods
hlt
xchg
test
sub
call
rcr
xorl
xchg
sahf
jge
jg
lods
in
test
cmp
jmp
mov
sbb
aaa
es
arpl
xchg
cmp
imul
and
jne
into
ds
xor
movsl
mov
dec
ja
scas
fstps
pop
xchg
cld
mov
xor
insl
sbb
mov
or
jae
mov
out
xor
jb
sbb
fwait
cmpsl
inc
call
ss
jae
adcb
or
shll
ss
pop
pop
int3
pop
jo
sbb
sbb
jb
lcall
sub
xchg
fdivs
test
daa
int
and
es
in
iret
jnp
jmp
jmp
mov
je
arpl
push
push
add
dec
les
dec
cltd
dec
insb
pop
aam
pop
xchg
push
and
pop
dec
dec
adc
xor
add
sbb
ficomps
mov
in
scas
aam
mov
add
negl
dec
aaa
add
lods
sbb
sbb
bound
stos
xchg
and
push
test
push
outsb
in
or
mov
mov
cmp
repz
jnp
xchg
repnz
cmp
dec
fimull
adc
idivl
or
jl
into
or
mov
pop
push
jae
das
out
test
in
pop
push
mov
ss
mov
jnp
pop
movsb
adc
add
sbb
ds
hlt
add
shll
mov
fildl
jle
rolb
jecxz
or
or
adc
popf
xchg
add
dec
xor
fs
xchg
sub
lea
stos
aaa
cmc
outsb
mov
jno
mov
pop
dec
mov
xor
or
sub
mov
mov
jb
push
xor
stos
pusha
jne
add
insb
inc
jecxz
mov
mov
push
les
xor
mov
push
jmp
mov
in
lods
lods
mov
or
mov
fwait
aad
push
std
and
xor
call
dec
mov
mov
and
notb
xor
mul
bnd
orb
adc
js
je
mov
xor
jge
addr16
pop
jo
sahf
and
int3
add
in
xor
push
cmc
push
ret
push
arpl
movsb
mov
shl
je
sbb
xor
dec
das
lea
or
mov
or
ficoml
movb
mov
jle
push
cwtl
jecxz
mov
add
test
and
push
lods
xchg
adc
js
pop
dec
mov
sbb
loopne
jmp
repnz
cmp
aas
add
inc
or
and
lds
inc
inc
and
push
daa
out
std
dec
mov
xor
shlb
ljmp
and
rcl
jns
sbb
jns
jge
mov
xor
pop
jmp
mov
stc
out
lahf
adcl
pop
add
xor
jl
sub
ja
jl
in
insl
mov
icebp
movsl
add
shr
sbb
and
sahf
jns
fs
pushf
add
enter
mov
lea
cs
hlt
mov
nop
jg
mov
mov
hlt
xor
pop
and
or
xchg
mov
dec
cltd
in
je
and
xchg
mov
inc
adc
pop
fisubrl
xor
xor
ja
mov
xchg
pop
push
cmpsb
xchg
push
ss
iret
xor
clc
lods
xchg
insl
mov
or
push
ret
mov
sub
xchg
adc
arpl
rolb
mov
pushl
lcall
aad
test
fstp
arpl
xchg
jne
mov
dec
fsubrl
test
lret
xchg
dec
push
in
pop
in
cmp
mov
mov
dec
xchg
jge
xchg
and
jl
or
cwtl
mov
cmp
fs
push
push
sbb
out
rol
mov
pusha
cltd
xchg
jnp
xor
cmpsb
pop
adc
mov
aaa
jbe
pop
push
add
pushf
dec
rorl
pop
data16
mov
cmpsl
mov
cmp
pop
ja
sub
and
loopne
rcrb
adc
es
rorl
xor
stos
push
xchg
stc
es
or
or
ljmp
push
mov
fwait
pop
lods
inc
fsubrl
xchg
lahf
dec
dec
dec
push
lahf
xor
xchg
mov
mov
pop
jg
sub
clc
movhlps
mov
cs
divl
inc
stc
iret
jmp
push
xchg
pop
pop
cmpl
dec
movsl
lahf
xlat
inc
cld
fmuls
mov
fs
cmp
cmp
xchg
sbb
dec
jno
bswap
dec
andl
xor
inc
jo
into
or
jbe
jl
cltd
add
cmc
adc
data16
sub
push
out
xor
xchg
out
scas
mov
and
jns
fstl
push
out
inc
in
pop
sbb
jns
popf
arpl
cmc
mov
and
jns
rclb
out
iret
mov
adc
xlat
int3
sub
cwtl
mov
xchg
cmp
out
cli
mov
fwait
inc
add
jge
or
rol
add
mov
loope
movsl
pop
push
test
mov
lret
lret
cmp
lret
cmp
sahf
test
icebp
or
sbb
push
out
mov
cmpl
lds
pop
sbb
lock
test
inc
daa
jno
ljmp
push
sub
jecxz
xor
inc
sbbb
pop
and
sbb
mov
cwtl
xor
or
les
cmp
push
cltd
mov
push
lea
pop
out
ret
test
notb
ret
adc
test
outsb
in
jns
ljmp
sbb
hlt
jg
dec
sub
or
sarb
insb
xorl
stc
or
shll
jae
mov
dec
push
adc
mov
xchg
loop
xchg
add
or
lret
and
pop
adc
testb
lahf
int3
aaa
pop
or
dec
lds
and
dec
and
pop
xchg
xor
dec
xor
mov
mov
out
dec
scas
test
dec
gs
addr16
fdivl
clc
ret
orl
in
xchg
js
push
pop
dec
push
lea
sbb
mov
inc
int3
cltd
test
mov
sub
jnp
sar
dec
lock
pop
ret
imul
sbb
in
imul
imul
jmp
repnz
push
shlb
mov
sahf
arpl
mov
shlb
jl
xchg
or
jle
sub
pop
sub
in
mov
outsl
sti
xor
popa
dec
fsts
push
icebp
push
push
xchg
xchg
add
and
scas
or
pop
lods
mov
jne
push
fbld
add
inc
pop
aad
stos
cmp
sbb
adc
cmpl
xchg
cmpsl
sub
aas
jno
sub
xor
repnz
xchg
inc
and
subb
push
lock
out
psrad
pop
push
data16
addb
add
sarb
xor
test
out
mov
fcomp
push
push
stos
into
mov
push
ret
pop
xor
xchg
subps
jp
rorb
push
fwait
xor
in
cmpsl
sbb
or
fmull
push
xor
adcl
je
xchg
pop
jnp
jns
cltd
sbb
divl
jb,pt
xor
and
sub
scas
ffree
std
andb
ds
inc
div
pop
cmpsl
xchg
fcompl
das
in
aam
or
nop
arpl
daa
js
sbb
sbb
jl
xchg
addr16
add
addr16
mov
decl
stos
adc
aas
jmp
cld
or
add
sub
lea
pop
jp
jo
push
xchg
idivl
jns
adcl
pop
fbstp
pop
cld
jo
xchg
pop
daa
jecxz
mov
inc
lods
mov
popa
adc
mov
inc
ljmp
je
mov
es
mov
popa
scas
xor
sbb
mov
mov
dec
cmp
push
cmc
lret
dec
out
xchg
shrl
scas
fstpl
bound
in
imul
jle
mov
std
outsb
and
setns
push
lock
pushw
jno
ret
jmp
jge
sbb
and
gs
insl
push
test
jecxz
and
jne
ret
xchg
arpl
out
aad
xchg
idivl
mov
in
push
sub
sahf
xchg
mov
cmpsb
outsl
pop
jo
lret
fistpl
test
mov
pop
test
or
mov
and
stos
test
pop
add
mov
pop
fsts
mov
and
out
sub
mov
cmp
xor
jns
add
xchg
inc
mov
mov
ja
leave
dec
nop
add
shlb
adc
stos
push
sub
push
push
jns
push
mov
jo
dec
cld
repnz
lea
push
test
xor
mov
or
outsl
dec
jecxz
fstpt
mov
sbb
fwait
push
addr16
cmc
pop
insl
mov
dec
jle
mov
hlt
mov
mov
out
cwtl
adc
mov
es
clc
push
jg
jl
jl
ja
sbb
jno
dec
mov
sbb
pop
dec
add
mov
cmp
fcoms
loope
int
sbb
or
out
add
sarb
xor
cmc
fsubrl
scas
or
scas
add
mov
push
add
out
fstps
cli
mov
in
in
lds
jecxz
dec
jp
adc
fldl
adc
cmp
js
inc
pop
pop
ret
repnz
and
or
aam
push
push
xchg
mov
fdivl
setl
mov
mov
int3
pop
loope
pop
rorl
sbb
mov
cmpsl
insl
enter
add
or
loope
out
aam
lcall
mov
mov
inc
jae
xchg
fisubrs
push
xchg
jmp
pop
fistl
dec
clc
xor
dec
js
imul
inc
mov
jmp
pop
jl
sub
mov
or
test
ljmp
cmp
dec
xchg
aam
dec
test
mov
cs
add
pushf
xchg
xchg
pop
xchg
mov
insl
daa
fldt
movl
dec
rol
in
jle
negl
mov
push
repnz
sub
push
imul
mov
rorb
jmp
inc
outsb
inc
xchg
dec
sub
daa
fistpl
pop
outsb
stos
gs
test
cmp
xlat
test
mov
out
arpl
inc
inc
aaa
dec
ret
les
adc
sub
sti
jp
int3
or
xchg
lret
jno
mov
out
insl
faddl
loope
lods
push
jp
cmp
cltd
test
mov
jo
je
cmp
push
mov
jecxz
scas
cs
mov
adc
mov
fisubl
xor
iret
mov
pop
int3
xchg
in
test
cmc
jg
icebp
insl
bound
pop
dec
mov
add
pusha
cmpsb
jnp
push
xor
sub
push
adc
mov
mul
insb
jo
mov
hlt
aas
out
cltd
iret
pop
fdivs
push
movsb
sub
ds
xchg
jmp
inc
notb
push
loop,pn
inc
test
sbb
dec
or
movsl
inc
jmp
test
mov
and
xor
mov
outsl
pop
pusha
rolb
jae
push
cmp
cmp
pop
mov
push
outsl
or
mov
push
add
cs
mov
push
sub
repnz
inc
cmp
leave
cmpsb
adc
sti
incb
xchg
lea
outsl
cs
pop
xchg
cmp
cmpsb
scas
adc
insl
mov
sbb
inc
adcl
stos
in
ret
insb
ljmp
push
in
mov
cmpl
mov
ljmp
outsb
mov
push
ljmp
pop
pop
lea
xlat
mov
mov
imul
jge
loopne
or
lret
cmpsb
or
pop
mov
push
int3
add
fcomps
mov
daa
jne
push
je
mov
inc
shl
jnp
jbe
lock
cwtl
jmp
jl
adc
fnstcw
lods
cltd
es
cld
jmp
stos
mov
ljmp
test
adc
lods
out
xor
mov
push
sub
mov
loope
fdivrs
sbb
mov
adc
dec
add
mov
mov
loope
add
jge
das
ljmp
mov
fs
int3
mov
sbb
popf
js
hlt
int3
popf
adc
jo
int3
clc
cmpsb
aas
inc
ljmp
pop
dec
mov
xor
jno
out
mov
mov
popf
ljmp
adc
or
xchg
sti
fbstp
aad
sub
test
notl
pop
or
das
jae
mov
stc
pushf
xorl
mov
cltd
ja
lahf
insl
cs
aam
xor
les
ljmp
lea
pop
inc
push
add
xchg
push
push
ret
int3
and
or
jp
or
xor
inc
ljmp
shll
enter
xchg
sbb
jmp
mov
insl
pop
adc
xor
mov
inc
es
imul
orl
pop
mov
sbb
adc
xchg
jmp
xchg
cwtl
and
ja
out
repnz
xor
loope
sub
add
imul
test
in
cld
dec
cli
add
pop
das
gs
mov
mov
std
xor
dec
sub
iret
adc
jbe
addl
cmp
and
or
jb
xchg
mov
mov
pop
mov
jp
test
adc
xor
mov
pop
sub
mov
out
scas
hlt
pop
subb
jp
pop
in
push
push
xchg
or
lock
iret
stc
bound
lds
xlat
and
aad
add
aaa
mov
dec
sub
dec
stos
decb
adc
jns
sti
pop
loope
sbb
jle
and
adc
ss
mov
xchg
jmp
cs
add
addl
mov
or
out
cmp
scas
insl
and
mov
mov
ja
lods
movsb
jle
pop
jno
mov
pop
pop
add
rcll
lods
push
sbb
aam
shll
and
xlat
arpl
and
xor
test
mov
in
imul
jo
fisttps
push
jbe
popa
jbe
das
sbb
es
inc
dec
repz
lds
popf
jae
xor
test
pop
jnp
imul
dec
jbe
push
mov
add
cltd
mov
int
inc
push
add
dec
call
cld
fiaddl
aad
ja
es
int
mov
subb
mov
sub
or
push
jmp
pusha
clc
cmp
push
out
mov
jbe
shlb
jg
jne
movsb
lock
test
inc
sbb
out
pop
mov
jl
dec
xlat
lock
add
mov
data16
loope
arpl
cmp
sub
lea
inc
sbb
mov
xorl
rcll
sahf
jge
mov
je
ss
sub
pop
or
add
inc
mov
scas
lock
mov
mov
addr16
ss
cmp
scas
mov
loop
jle
leave
into
mov
hlt
inc
dec
in
xchg
mov
ja
stc
in
cmp
mov
dec
xchg
mov
nop
jb
in
dec
hlt
stos
jg
es
fidivrl
mov
jle
and
arpl
rclb
nop
call
gs
aad
inc
adc
add
shrb
pop
test
ss
mov
rolb
fnstenv
cmp
pusha
cmp
sahf
cmc
roll
inc
add
das
cmpl
in
push
std
adc
sbb
outsb
test
xchg
call
pop
in
fisttpll
inc
pop
pop
icebp
cmpsl
adc
inc
adc
add
or
inc
fptan
xor
xor
or
mov
sarl
mov
imul
inc
pop
push
ja
cwtl
outsb
mov
test
mov
pop
test
js
cmc
call
inc
mov
lahf
clc
push
pusha
iret
dec
or
or
push
outsb
cmpsl
dec
rol
popa
pop
fwait
sbb
ror
lahf
mov
les
jo
mov
and
pop
inc
je
sarl
ljmp
xor
mov
ja
rcrl
mov
ljmp
mov
ljmp
subl
lea
add
pop
mov
in
xlat
test
ret
ret
adc
add
and
xor
out
std
call
push
mov
pop
loop
xchg
enter
negl
stos
int3
inc
shlb
loope
aam
ljmp
adc
adc
iret
outsl
jns
add
lock
cmp
pop
arpl
shll
push
pop
ljmp
mov
adcl
jae
aaa
mulb
push
les
xlat
push
int
push
jne
jp
add
pusha
mov
pop
xchg
in
push
or
loop
and
lods
shll
jge
arpl
imul
hlt
int
cli
jne
test
push
mov
mov
js
or
mov
and
and
sbb
fiadds
cmp
testl
xor
xor
mov
test
mov
jne
fxch
pop
sub
mov
xchg
mov
testl
push
sbb
cmc
ror
jo
pushf
pusha
inc
inc
stc
iret
dec
jno
enter
jp
push
sti
mov
nop
mov
shl
aad
pop
lea
mov
cmp
push
pop
mov
ss
mov
xchg
adc
mov
test
push
sbb
lods
push
cmp
cmc
xchg
das
popa
jle
in
mov
push
push
mov
xchg
sbb
lds
cmc
sahf
and
ret
and
enter
xchg
or
jg
negl
push
outsl
dec
dec
dec
push
push
nop
arpl
lea
xchg
add
xchg
movsb
aad
lahf
cmc
pop
pop
push
adc
and
lock
jle
or
mov
pop
enter
push
add
xor
rcrb
scas
rolb
sub
idivb
cmp
jl
fisttpl
in
call
mov
and
add
jmp
jb
xchg
jae
shll
rorl
cmp
jnp
nop
jae
stc
xchg
jae
and
test
cltd
cmp
pop
fmuls
mov
ret
lea
js
mov
xchg
loope
adc
mov
mov
dec
jp
lcall
adc
arpl
jno
xor
outsl
icebp
and
cmc
inc
or
in
mov
pop
out
into
mov
hlt
add
movsl
notl
loope
inc
enter
ror
rcl
int
push
add
xchg
and
test
rcr
sarl
mov
push
push
sbbl
sbb
in
mov
roll
in
ret
ds
ss
add
mov
iret
sbb
or
inc
out
leave
cmp
and
adc
dec
hlt
or
pop
adc
ja
ds
xchg
add
jb
mov
cltd
negb
js
sbb
dec
add
mov
mov
out
sbb
sub
cmp
mov
jle
mulb
bound
lods
cmp
dec
adc
jns
fisubrl
scas
push
push
lret
mov
rolb
and
pop
insl
lret
jecxz
mov
mov
sarb
cmpb
dec
cli
sbb
pop
sbb
sub
ficoml
rcl
daa
mov
push
lcall
clc
pop
scas
stos
jo
jae
sbb
or
icebp
lea
sbb
inc
fistpl
inc
cs
mov
mull
xor
pop
iret
stc
aas
fsubl
jp
movsl
mov
push
mov
jp
ficoms
sbb
jbe
repz
mov
xchg
imul
or
push
and
inc
push
jb
ret
popa
pop
lret
xchg
inc
sbb
add
xchg
mov
add
and
fnstcw
lret
mov
dec
cmp
jno
jmp
sub
movsb
adc
push
xorl
repnz
sub
idivl
jmp
or
cmp
fsubr
xor
jp
repz
push
mov
inc
push
add
clc
sbb
xor
push
mov
mov
mov
jmp
xchg
sbb
pop
jmp
and
push
test
mov
cmc
pusha
into
sbb
jp
jae
push
lret
mov
sbb
js
cmp
cs
clc
add
pop
popaw
daa
out
and
jnp
push
fwait
arpl
pop
sar
pop
mov
mov
jg
iret
loopne
xor
insl
xor
inc
mov
sbb
pop
jae
stos
push
test
mov
adc
and
sub
pop
mov
adc
add
shrb
aaa
hlt
push
popf
dec
outsl
cmpb
loopne
adc
int3
xchg
rorb
cmp
andl
push
cs
enter
stos
lcall
movsl
xorb
push
fdivrs
hlt
dec
cmpsl
shl
pop
add
loopne
scas
xor
enter
jl
xchg
mov
lock
leave
lret
mov
mov
or
pushf
jmp
idiv
xlat
movsl
sub
mov
repnz
insb
leave
lods
mov
out
and
ficompl
pop
xor
pop
lock
jmp
aad
repnz
add
loope
lds
outsb
cmp
cs
adc
mov
outsl
sbbb
cmp
and
cmpsl
xchg
push
into
mov
ljmp
mov
cmp
in
mov
outsb
add
ret
dec
mull
xchg
cmp
pop
loopne
push
insb
jge
loope
dec
and
lahf
jae
add
mov
nop
push
popa
enter
xlat
arpl
lahf
adc
push
lahf
pop
mov
mov
out
mov
jns
into
aad
mov
out
lcall
mov
aam
mov
jno
xor
pop
aaa
or
fistl
sub
sbb
add
lea
outsl
jnp
js
mov
mov
stos
and
push
test
les
sub
mov
fisubrl
mov
xchg
out
outsl
mov
aaa
loopne
jl
mov
lods
imul
mov
push
into
or
sbb
aas
jcxz
int3
sbb
pushf
pop
inc
mov
stc
test
dec
ja
pop
int
cmpsb
add
fmuls
test
fsubs
ret
insb
ret
adc
mov
xchg
pushf
xchg
fiaddl
fst
jno
outsl
mov
mov
hlt
cs
inc
outsl
pop
cmpsb
shll
ret
inc
add
imul
icebp
add
xor
fisttpl
mov
das
fwait
subl
inc
mov
gs
lret
shr
mov
test
aaa
sub
shrl
inc
out
popa
sarb
sbb
lds
mov
sti
mov
ret
mov
test
adcb
jp
jb
mov
xor
je
push
push
and
mov
andb
fcmove
or
lret
jmp
sahf
or
mov
les
sbb
or
inc
mulb
pop
clc
ret
cmc
jmp
fwait
push
mov
jmp
xlat
insb
and
and
pop
mov
add
shrl
inc
fdivrl
xchg
sbb
icebp
mulps
dec
insl
sbb
imul
mov
mov
call
imul
xchg
jmp
cld
sub
push
icebp
add
lds
and
scas
and
test
call
jmp
fnsave
pop
xchg
in
sbb
movsl
and
mov
pop
pop
xchg
mov
sub
lods
xchg
ljmp
sti
lods
push
test
jo
cmp
dec
std
mov
mov
xchg
add
add
sbb
mov
arpl
stos
pop
loop
add
mov
les
insl
in
shll
mov
cmp
in
add
cwtl
sub
sbb
call
sar
push
frndint
mov
andl
push
lods
and
pop
into
fs
fsubrs
scas
sbb
sbb
out
test
and
pop
test
lret
adc
push
xor
mov
loopne
cmc
push
or
insb
je
add
add
and
push
adc
mov
popf
adc
jmp
sbb
sub
mov
mov
mov
iret
pop
xor
xlat
shlb
mov
mov
sbb
insb
xchg
es
iret
inc
popa
ret
lods
and
mov
push
xor
cmp
pop
cld
push
mov
fnsave
bound
test
in
add
insl
sub
add
pusha
outsl
add
orb
push
or
jecxz
loop
movsl
das
dec
xchg
in
hlt
jge
push
shlb
dec
jnp
mov
rorl
gs
xchg
lods
sbb
push
mov
inc
pusha
popa
mov
rclb
cmp
push
adc
sti
in
loopne
cmp
mov
sub
ret
in
add
popa
movsl
mov
jecxz
roll
gs
cmp
test
jno
lret
and
ret
push
pop
call
jne
inc
cmp
sbb
cs
iret
mov
imul
sub
in
adc
jno
adc
push
mov
pop
pop
sbb
pop
xchg
cmpsl
inc
xchg
jl
xchg
lock
das
fwait
sbb
mov
jno
xchg
xchg
mov
add
leave
imul
shlb
ss
pop
fwait
and
jg
into
sbb
cmp
adc
inc
mov
dec
mov
test
adc
xchg
mov
test
sbb
and
fwait
jno
cmp
imul
outsb
pop
ret
xor
mov
xlat
data16
jle
inc
lock
test
add
mov
inc
push
mov
int3
dec
rolb
jno
pop
xor
and
mov
mov
pop
ja
jl
repz
cmp
cmp
sub
cmp
jmp
cli
push
xchg
jbe
inc
sahf
test
push
push
mov
bound
ljmp
inc
out
xor
inc
pop
lret
stc
aaa
aam
popa
sbb
loop
sub
mov
incb
call
inc
jb
ljmp
or
dec
int3
pop
xlat
cmp
cli
enter
xor
xchg
mov
les
push
xchg
mov
outsb
outsb
pop
jecxz
adc
cmp
dec
daa
or
push
sub
leave
and
xchg
xchg
stos
outsb
pop
xchg
in
jmp
push
shl
test
ja
push
stos
pop
dec
mov
in
std
sar
sbb
jns
shr
mov
xor
sub
out
inc
mov
ljmp
std
pop
clc
popf
cmp
mov
jne
mov
jp
shlb
push
call
jbe
pop
push
push
jae
ficompl
repnz
popa
mov
sub
fnsave
and
aaa
stos
mov
js
xchg
inc
add
sbb
sahf
testb
pushf
dec
ss
dec
push
inc
mov
sahf
add
insl
stc
das
pop
sbb
cmpsl
sub
cmp
popf
ljmp
dec
iret
in
ss
imull
ds
aaa
clc
inc
nop
add
mov
or
push
ret
hlt
popa
and
jg
sub
stc
push
ljmp
pop
push
cmp
fnsave
dec
push
inc
imul
xor
add
jge
sub
cmpsl
pop
fsubp
jno
mov
clc
pushf
in
ficomps
mov
jmp
rorl
pop
insb
jbe
cmp
push
shrl
pusha
mov
pop
dec
pop
cmpsb
fsubs
pushf
mov
xor
jno
addr16
sbb
xchg
movsl
cmp
xor
cmp
das
faddl
push
mov
inc
inc
lods
shrl
sub
cmp
and
repz
jo
repz
imull
push
stos
roll
repz
loop
dec
push
shl
sbb
dec
xchg
cmp
xlat
bound
mov
dec
push
es
dec
pop
aaa
and
lock
test
lret
mov
test
out
lcall
fs
int3
loopne
shll
and
out
int
lcall
xchg
pop
add
jno
mov
loopw
movsl
insl
mov
and
xchg
mov
xchg
mov
pusha
mov
sub
test
pop
loop
pop
xor
adc
addl
lcall
xchg
inc
push
xchg
push
out
cmpsb
lcall
jp
sahf
dec
jns
dec
add
popf
int3
jnp
push
inc
jecxz
jae
les
fmuls
rorl
adc
pop
jbe
xor
pusha
rcrb
xor
add
into
mov
mov
loopne
pop
or
jbe
fdivp
jl
sbb
bound
pusha
out
adc
push
mov
les
outsl
insb
mov
movsb
loop
aaa
loop
and
push
cmpsb
mov
cmpsl
cld
inc
mov
push
pop
outsb
mov
sub
xchg
orb
adc
jl
imul
fistps
loopne
mov
mov
call
push
push
push
xchg
outsl
out
sbb
push
jbe
xchg
ret
jb
arpl
sarb
push
cmpsb
sub
jb
add
lret
mov
test
mov
cmp
das
mov
sti
jno
cmc
cmpl
test
cmpsl
inc
cwtl
inc
mov
and
inc
daa
loope
xor
jns
ret
leave
sbb
aaa
sub
add
icebp
inc
fwait
inc
shrl
lods
mov
jle
xchg
and
adc
fistpl
icebp
sbbl
imul
mov
mov
pop
into
xchg
js
js
fs
orb
mov
or
jl
jne
or
sub
dec
call
inc
lcall
sub
fstpl
fcmovnbe
addl
loop
sahf
mov
int
cmp
and
mov
repz
xchg
add
inc
xchg
dec
popf
xchg
and
lret
jb
lret
or
out
rolb
mov
mov
ja
fidivrs
inc
jmp
fsubs
pop
xchg
pusha
sbb
fbld
outsb
mov
fildl
and
mov
popf
inc
je
sbb
adc
sub
add
xchg
jmp
cmpsl
and
nop
dec
push
nop
push
fwait
mov
xorl
std
dec
jmp
jl
clc
xchg
pop
xlat
int3
mov
mov
lret
jbe
adc
inc
mov
dec
adc
xchg
pushf
jae
mov
fcoms
fwait
lret
push
adc
inc
in
mov
add
ret
pop
mov
add
jg
lahf
push
sub
bnd
jo
fstl
pop
shll
cli
in
call
outsl
aam
sub
pop
pop
mov
xor
mov
ficoml
push
lea
addr16
cmpb
mov
sub
jb
shll
cld
cli
icebp
popf
subb
popa
mov
mov
or
mov
enter
loope
inc
mov
in
mov
aam
cmpsl
movsl
dec
fsubrs
dec
adc
movsb
dec
movsb
insb
push
lds
repnz
xchg
stc
mov
add
int
mov
cmpsb
scas
push
or
test
js
fsubr
sbb
pushf
clc
and
xchg
int
pop
mov
lret
int
push
xor
or
sub
push
inc
mov
add
pop
pushf
cmc
rol
jle
pop
sub
add
jecxz
movsl
cmc
adc
xor
les
out
push
push
imul
call
jne
fnstenv
je,pn
xchg
test
cld
xchg
jl
rclb
push
pop
je
stos
dec
adc
cmp
inc
cmc
xchg
push
scas
jecxz
loopne
rorb
in
das
dec
inc
lea
sub
fcmovb
add
sarb
mov
aaa
cld
andb
fsubrp
and
or
cld
sub
mov
sar
outsl
nop
shll
pop
jnp
cmp
sub
xchg
out
mov
mov
mov
movsb
int
mov
call
outsb
clc
jne
sub
repz
rcrb
pop
pushf
lock
dec
loope
and
iret
aas
cs
add
lret
dec
sub
or
popf
idiv
mov
mov
jl
mov
inc
inc
out
cmp
cld
xchg
shll
jns
rcll
test
mov
inc
ds
adc
js
addr16
mov
lahf
incb
inc
cmp
cmc
out
push
jnp
jecxz
mov
add
add
xor
jne
xchg
lods
sub
test
jbe
fildll
inc
cld
mov
mov
imul
dec
or
in
or
scas
pop
loope
aad
shl
lods
cmp
in
jbe
nop
ret
pop
test
call
jp
int3
stc
pop
push
xlat
leave
aam
rorl
mov
sub
add
add
jb
shrl
loopne
lods
jnp
rcrb
cmp
stos
pop
gs
cmp
fwait
mov
adcb
adc
hlt
pop
scas
adc
cmp
hlt
pop
fwait
pop
add
das
sbb
in
stos
mov
mov
mov
dec
dec
xor
mov
int
stos
fwait
xlat
xor
jge
fcoml
xor
clc
cmpsb
sbb
out
mov
mov
js
inc
movsl
add
jge
sbb
push
pop
mov
fistl
pusha
cmp
mov
popa
sti
ud0
in
and
inc
cmpsb
jle
jns
inc
rcll
repz
loop
std
mov
sbb
sub
fnstenv
xor
dec
loopne
push
arpl
ret
inc
sar
inc
adc
addr16
dec
fwait
xorb
ds
popf
mov
xchg
fisttps
xor
and
test
jp
repnz
fld
mov
scas
imul
mov
or
mov
adc
scas
pusha
pop
out
sbb
mov
pop
ja
sub
mov
jp
hlt
outsl
jmp
mov
xor
fadd
notb
out
xchg
outsb
cwtl
add
fisttpl
scas
aas
imul
out
sahf
ja
jns
pop
cld
sahf
imul
xchg
jp
jl
xchg
sub
mov
push
sbb
bound
pop
dec
fwait
data16
js
std
addb
mov
cmp
ds
sbbb
movsl
push
inc
mov
negl
adc
mov
pop
std
sub
jnp
pushf
inc
jo
push
movsl
mov
and
mov
cmp
lahf
mul
outsb
int
xor
lea
cmp
jno
mov
scas
jnp
hlt
loopne
insb
jmp
cmp
inc
int
dec
scas
xor
dec
mov
xchg
std
pop
push
inc
das
test
jl
mov
jns
dec
cmpl
pop
cli
push
aaa
xchg
rcrb
lock
cmp
mov
sub
outsl
or
popf
pop
fidivl
and
aad
leave
mov
pop
xchg
loope
cld
scas
fld
mov
push
sbb
scas
outsb
dec
cld
dec
sub
test
inc
in
mov
sti
mov
lcall
dec
dec
mov
lahf
mov
push
mov
loope
inc
bound
repnz
mov
or
aad
push
imull
stos
adc
imul
arpl
mov
sahf
leave
jge
or
pop
mov
popf
mov
mov
inc
std
faddl
mov
out
imull
pop
inc
adc
pop
sbb
jne
cwtl
es
push
aas
pushf
inc
dec
adc
in
and
pop
cmpsl
mov
add
cmp
mov
int
jmp
mov
mov
inc
pop
xchg
add
shl
popa
popa
adcb
push
pop
push
cmpsb
test
int3
fimull
sub
test
ret
jo
xchg
xchg
mov
out
sahf
dec
fldcw
aam
add
jecxz
faddl
jg
insl
mov
in
jns
arpl
mov
arpl
ljmp
add
cs
mov
popa
in
inc
xor
mov
loop
lret
fcomi
rcll
lds
leave
and
fmull
mov
jle
gs
and
dec
push
outsb
sub
inc
jp
add
mov
and
ret
aam
or
js
int
adc
pusha
jmp
inc
mov
adc
movsb
jns
insl
scas
repnz
mov
lea
and
das
imull
sbb
and
cmpsl
pop
aaa
mov
xchg
and
rcrb
ficompl
inc
mov
xor
sub
das
imul
fstpt
call
addr16
jle
pushf
sub
ds
je,pt
sti
jecxz
stc
xchg
push
jp
push
outsl
adc
jo
dec
sub
sub
dec
xor
inc
dec
xchg
sub
enter
and
pushf
push
aam
fsubs
mov
mov
shll
jb
clc
inc
jae
fisttpll
daa
stos
pushf
aaa
and
adc
push
mov
sub
repz
test
cs
loop
dec
push
push
cs
dec
or
sbb
jg
decb
stos
or
repz
pop
lock
xor
jmp
js
xor
jecxz
cmp
push
shlb
jnp
push
andl
enter
mov
cmp
xchg
xchg
jns
xor
aaa
inc
int
outsl
pop
imul
mov
nop
pop
mov
xchg
test
js
mov
inc
jb
ret
stos
in
mov
repz
and
faddl
mov
xchg
add
adc
sub
mov
stos
mov
test
cmp
ds
xlat
dec
pop
hlt
js
in
add
ficoms
scas
xchg
repnz
inc
in
cmp
icebp
add
into
cld
cwtl
movsl
dec
mov
mov
iret
sub
mov
push
push
jmp
fs
popa
adc
es
aaa
scas
sbb
push
stos
sub
cmp
xchg
xor
orl
dec
mov
push
adc
jns
into
fisubs
dec
hlt
add
rcr
lods
out
cmp
xchg
idivl
xor
popa
jl
ds
pop
jge
mov
or
sub
sti
sbb
pop
stc
out
jb
in
in
mov
ja
fimull
mov
or
lahf
pushf
out
mov
or
imul
pop
pop
adc
pushf
loop
push
mov
nop
pop
and
scas
xchg
aas
mov
popa
ret
lea
mov
cmp
rol
and
mov
negl
or
test
mov
inc
outsw
inc
xchg
fistpl
mov
iret
and
lea
mov
inc
out
pop
addr16
jmp
icebp
adc
mov
sbb
xchg
imul
aam
int3
mov
dec
rol
adc
loop
ret
adc
std
dec
mov
aaa
pop
add
scas
sar
or
mov
jnp
mov
repz
sub
popa
insl
cmp
fsubrl
hlt
jae
test
rclb
jns
in
into
rolb
inc
pop
dec
and
in
jnp
repz
shl
xchg
or
ficompl
or
xchg
pop
aas
arpl
jle
ljmp
loop
mov
jle
movsl
sub
jbe
xchg
lds
std
das
lea
or
movntps
inc
insb
ja
fwait
mov
xchg
aam
sahf
cmp
outsb
mov
insl
mov
mov
movsb
fbstp
mov
jo
mulb
jns
mov
aam
pusha
outsb
mov
gs
jae
adc
fisubrl
add
mov
les
in
in
sub
push
loope
dec
xor
xchg
aad
mov
fcomip
xchg
xlat
push
add
xor
inc
jno
hlt
or
push
fnstsw
pop
rorb
jo
push
gs
repnz
adc
scas
cwtl
add
push
rolb
ficoml
sub
cwtl
inc
stos
lock
inc
jmp
or
xlat
lret
sub
mov
popa
push
pop
shlb
enter
std
push
das
pcmpeqw
push
enter
outsb
jns
shlb
push
push
push
fsubrl
clc
push
xchg
popa
ret
sub
xor
aas
xchg
clc
sbb
mov
sti
or
roll
cmp
out
lods
ds
fstpt
inc
lret
xchg
lahf
and
sbb
nop
dec
xchg
jp
out
adc
lahf
fwait
cmp
jge
in
inc
int3
inc
xchg
mov
out
stos
mov
hlt
mov
fldcw
mov
mov
cmp
orb
sbb
jb
pop
or
sub
mov
cmp
cwtl
jge
lods
mov
mov
test
dec
shl
fcomps
xchg
mov
and
movsl
and
mov
imulb
inc
mov
ret
push
jae
cmp
test
push
insl
ret
xchg
pop
xchg
enter
mov
inc
xchg
inc
insb
ret
mov
adc
xchg
mov
aam
xor
pop
push
ss
mov
mov
movsl
fistl
xchg
cmpsl
sub
lds
or
xor
jb
test
mov
je
jl
imul
int3
mov
stos
ljmp
mov
ja
ret
cmpsb
pop
mov
lret
pushf
pop
add
or
cmpsl
je
into
inc
enter
dec
jo
cld
aaa
add
mov
jno
daa
xchg
sub
mov
test
cmpsb
hlt
jbe
push
dec
cmp
add
dec
push
cld
sub
outsl
fdivs
sub
daa
std
dec
loopne
aam
ret
les
jle
aas
xchg
jl
jp
adc
mov
cmp
xor
insb
popa
cmpsb
sub
repnz
aaa
aad
outsb
cwtl
dec
xchg
movsl
push
push
mov
nop
rcrl
in
jg
popf
inc
fwait
mov
loopne
jb
mov
nop
fcoms
pushf
outsl
popa
push
inc
popa
xlat
pusha
jge
mov
pop
ret
add
fiadds
sti
mov
xor
mov
inc
push
jno
test
mov
or
push
cmp
ds
jg
jmp
cli
stc
add
bswap
bound
push
ljmp
sbb
sub
inc
addr16
mov
xchg
sbb
fidivrl
andl
mov
repnz
push
jbe
pop
roll
in
sarb
mov
icebp
sub
popf
dec
push
mov
add
jb
push
pop
xor
hlt
xor
push
in
pop
xchg
mov
rorb
push
stos
add
aaa
sbb
adc
dec
inc
je
or
cmp
repnz
popf
mov
jb
cmc
pop
sbb
mov
stc
push
mov
popa
sbb
scas
xchg
add
stc
push
aaa
lret
cwtl
dec
adc
fildll
out
push
mov
jge
mov
cltd
lret
clc
in
jmp
jbe
add
mov
movsl
mov
and
xchg
adc
scas
arpl
nop
pop
sub
push
xor
mov
ds
adc
inc
int3
mov
push
pusha
in
and
xchg
mov
and
faddl
pop
pusha
jo
lahf
jp
sub
jmp
jns
xchg
enter
lock
dec
sub
shrl
mov
dec
test
ret
loopne
inc
pop
mov
cltd
push
neg
gs
sbb
pop
mov
mov
loop
enter
lret
gs
sarb
sbb
pop
sti
enter
mov
outsb
mov
stc
inc
outsb
push
pop
sub
mov
outsl
dec
mov
push
fwait
xchg
inc
aam
push
jp
daa
mov
adc
pop
or
pop
xor
sub
fildll
push
idivb
mov
add
jns
add
das
inc
aad
je
das
rcll
fbstp
cmpl
stc
adc
in
xchg
or
pop
mov
mov
push
jge
jnp
push
aam
push
sbb
inc
lock
in
ds
sbb
cmp
dec
jmp
mov
dec
stos
cmp
in
add
pop
pop
inc
lret
roll
fnstcw
push
fildl
orl
stos
fucom
arpl
push
dec
sti
or
and
pop
inc
dec
loop
sbb
inc
mov
jle
ja
dec
outsb
scas
pop
pop
mov
lcall
test
rorb
jg
xor
pop
cmp
add
mov
xchg
std
mov
int
sahf
or
sub
mov
lea
mov
push
cmp
dec
xchg
dec
mov
pop
jge
inc
call
andb
ss
orl
cmpsb
scas
add
cmp
into
loope
mulb
sarb
dec
push
sub
fs
mov
mov
outsl
mov
xor
mov
cmp
movsl
xchg
icebp
or
setle
leave
mov
loope
imul
cld
xorb
jno
das
mov
cs
popf
xchg
and
xor
sub
adc
jns
roll
mov
cwtl
arpl
push
mull
inc
daa
mov
fstpt
sub
inc
cmp
lea
jmp
xchg
push
testl
leave
mov
jae
dec
lock
or
sbbl
inc
jmp
shrb
mov
and
pop
jp
xor
scas
psadbw
out
into
inc
sarl
je
ret
addr16
arpl
jecxz
add
add
jae
in
inc
xacquire
cli
xor
dec
dec
mov
ljmp
sbb
mov
jo
mov
pusha
mov
sahf
in
ja
movsb
dec
ss
sbb
add
mov
pop
js
sub
imulb
xor
jb
faddp
mov
sub
adc
dec
inc
lds
test
out
cmp
fdivp
pop
mov
mov
sub
fildl
cmp
push
int
stos
nop
push
sbb
daa
lret
mov
sbb
pop
adc
or
sar
popa
xchg
insb
jbe
push
sbb
adc
imul
fsubrs
mov
ffree
imul
popf
mov
mov
fldl2t
jb
addr16
iret
jl
adc
sub
inc
imul
popf
call
jb
cmpsb
xorb
leave
arpl
enter
mov
adc
in
cltd
add
xchg
pop
addl
out
and
jecxz
xlat
add
pop
and
cld
and
pop
dec
cmpsl
nop
cmpsl
dec
test
fisttps
adc
mov
adc
lds
xor
sahf
pop
es
enter
popl
or
leave
ljmp
dec
loop
hlt
jmp
or
outsb
out
fdivr
nop
das
scas
scas
push
xchg
sbb
lahf
xchg
push
or
cs
and
push
das
int
xchg
stos
pop
sti
stos
add
adc
mov
mov
pusha
loopne
xchg
cmp
pop
movswl
imul
or
mov
inc
add
pushf
lret
jo
aad
lds
test
xor
inc
lcall
adc
enter
inc
shl
jns
outsb
push
cwtl
mov
ss
std
jle
arpl
sahf
sahf
pop
jns
sahf
push
lock
adc
mov
scas
sarl
push
arpl
scas
cmpl
subb
cld
cld
rorl
xchg
add
repnz
loop
cltd
xlat
cmp
or
testb
jo
push
mov
adc
call
cld
out
aas
mov
je
neg
addr16
gs
cmp
jecxz
stc
cmp
jg
loopne
loop
inc
adc
in
repz
fcoms
mov
int
cs
pop
rorb
fucomi
in
pop
cld
adc
aas
pop
push
inc
into
add
push
sub
mov
jecxz
bound
ss
xor
pop
clc
bound
test
imul
int3
add
xor
pop
inc
test
out
mov
pop
nop
jge
add
push
push
inc
sbb
add
ret
cld
xchg
fucomi
hlt
loope
insl
ja
inc
sbb
xchg
test
mov
notb
pop
pop
mov
daa
mov
push
push
movups
xor
and
shll
jno
pop
std
call
push
cltd
adc
clc
and
and
xchg
cmpsb
cmp
and
int3
xchg
dec
arpl
ret
mov
loop
std
insl
jne
test
iret
out
ds
in
mov
xchg
xor
je
adc
dec
add
arpl
add
mov
push
int3
and
out
push
icebp
dec
js
jp
ds
js
push
das
les
bound
mov
adc
or
add
adc
jecxz
push
inc
mov
addb
pop
cltd
inc
stos
or
push
xlat
add
and
fstpl
xchg
or
jno
or
and
sbb
mov
repnz
or
out
das
int3
and
nop
cmp
ret
mov
cmp
push
sbb
testl
push
gs
mov
ret
into
jmp
and
jl
int3
xor
rcll
xor
xor
lods
sub
ret
xchg
inc
sub
pop
mov
jle
mov
cmp
hlt
cmp
push
mov
popf
pop
fmuls
lock
and
push
xchg
mov
jae
adc
push
andb
mov
lods
xchg
aam
pop
outsl
mov
lret
sbb
shll
dec
arpl
sbb
xor
or
sbb
dec
adc
ljmp
sub
inc
mov
ret
mov
jnp
lds
lcall
gs
dec
std
jns
loopne
mov
sub
jle
mov
cmp
cs
inc
dec
icebp
pop
leave
or
push
pusha
aam
lcall
inc
jmp
stos
jbe
inc
inc
pop
push
mov
imul
xchg
loopne
in
pop
insb
in
sub
into
pop
insl
mov
sbb
imul
mov
cmc
add
xor
cmpsb
mov
sub
mov
mov
and
bound
std
pop
pop
lea
dec
pop
mov
cltd
lock
rcrl
rol
rcll
fcomps
mov
jge
lods
dec
int3
in
rcr
and
in
in
dec
sub
adc
aaa
aam
movsl
rorl
and
or
mov
idiv
mov
insl
cmp
jb
mov
mov
cmp
jmp
xchg
jge
jnp
xchg
push
inc
inc
sub
cli
sub
es
in
jae
sub
mov
push
sbb
push
or
xor
mov
mov
mov
sub
mov
lods
addr16
dec
inc
mov
stos
fwait
repnz
std
insb
sbb
scas
fiaddl
xor
xor
mov
dec
jb
sub
insl
pop
pop
pop
inc
js
push
out
sbb
mov
xor
sar
dec
sbb
jl
cmc
out
dec
mov
sbb
adc
xchg
jp
mov
xchg
dec
ds
xor
inc
nop
lcall
cmp
jmp
xorb
and
dec
inc
pop
dec
leave
in
cltd
in
mulb
adc
or
jns
push
adc
push
int
xchg
fisubrl
inc
sbb
mov
adc
lock
ret
aad
jns
mov
loopne
dec
xchg
add
xchg
xor
sbb
cltd
ficoml
out
bound
push
notb
insb
xlat
lahf
sub
mov
or
fidivs
outsl
mov
lret
mov
xor
fs
aaa
gs
es
mov
add
mov
test
mov
xor
fisubrl
push
ficoml
mov
mov
pop
jp
push
mov
cld
lcall
inc
mov
shll
add
sbb
push
inc
pop
shrl
pop
push
scas
sub
inc
int
push
xor
dec
rorl
test
xchg
sub
mov
pop
push
out
push
scas
push
and
lret
push
inc
stos
insl
cmc
in
lods
les
xlat
repz
dec
dec
lock
pop
xchg
icebp
pop
cmp
bound
jns
inc
jbe
fsubrl
xor
mov
jle
daa
and
jp
xchg
sbb
and
orl
jno
shll
push
cmc
scas
mov
jb
mov
dec
jmp
stos
or
push
adc
pop
insb
addl
repnz
insl
iret
inc
and
cmc
popa
dec
mov
sti
fsubrs
mov
data16
pop
shrb
xchg
mov
jnp
sub
cld
and
pop
jno
mov
insb
scas
mov
bound
mov
and
mov
xor
ret
fabs
mov
mov
std
int
adc
dec
cmp
sub
subl
mov
lds
push
ret
or
mov
fsubl
lret
shl
xor
pop
jns
jl
cwtl
add
or
in
cmp
pop
xor
outsb
stc
and
xor
nop
rclb
cmc
jnp
fisubrl
mov
xchg
int
mov
sbb
and
out
ss
jg
test
dec
and
jle
stos
mov
je
mov
cmp
out
rorb
add
and
call
jae
outsl
cwtl
xchg
stc
frstor
adc
xor
sub
shlb
xchg
dec
pop
test
rclb
pushf
popf
mov
pop
lahf
xchg
mul
shlb
xchg
pop
lods
sbb
jl
inc
les
pusha
xchg
bound
sub
out
jge
mov
loope
jl
cmp
rcll
mov
shlb
jmp
movsl
mov
push
cmp
adc
xlat
dec
sub
nop
int3
into
test
adc
sbb
pop
push
sub
mov
and
jo
js
rcll
mov
dec
stc
adcb
inc
test
adc
jno
push
pop
out
mov
popa
shl
push
mov
jae
add
pop
hlt
push
cmp
js
sub
xchg
cli
mov
push
int3
imul
repnz
cltd
add
push
je
sbb
xchg
cmpsl
pop
mov
rcrl
mov
iret
sbb
nop
jns
adc
ror
test
cld
into
dec
lcall
push
std
test
dec
and
movsb
ja
add
push
xor
outsl
outsb
insl
inc
out
mov
sbbl
cwtl
mov
sub
lret
mulb
or
mov
jl
mov
jmp
fisttpll
imulb
rcl
das
xor
sub
pop
int3
mov
je
sbb
adc
xchg
ret
mov
incl
dec
push
xor
add
lods
push
sbb
xor
test
popf
imul
popf
push
xor
out
jne
out
hlt
xchg
fnsave
loopne
sub
pop
leave
and
mov
xor
dec
and
and
mov
mov
jge
jns
fildll
bound
cs
push
or
xor
inc
or
pop
or
aad
cmp
sbb
out
inc
pop
push
lock
adc
fcoms
mov
adc
movsl
data16
sub
fimull
loopne
call
cmpsl
and
test
mov
stos
add
push
je
insl
stc
add
in
mov
pop
fwait
lahf
mov
or
mov
ja
mov
into
mov
stc
mov
subl
aas
mov
mov
test
push
or
outsb
shll
push
inc
repnz
rolb
outsb
sahf
lcall
sub
stos
insb
orl
sub
inc
xor
xchg
add
sbb
cmc
insb
sub
or
hlt
add
sahf
adc
cmp
sbb
xchg
jmp
mov
pop
shll
cmc
dec
xlat
dec
div
fwait
sbb
push
les
fsts
loop
aaa
xchg
lods
fwait
cld
inc
repz
jl
aam
shrl
fstl
adc
sbb
xchg
loopne
jno
out
mov
mov
mov
mov
pop
sub
mov
dec
jns
and
or
enter
sub
test
sbb
push
scas
mov
stc
repz
in
stc
test
mov
cld
mov
aad
and
xchg
push
and
fsubr
fdivrs
xor
rorb
scas
cmp
lret
test
test
dec
aad
dec
xor
mov
push
adc
jns
rorl
andl
jo
pop
test
cmp
jge
mov
daa
xor
fmuls
pop
pop
decb
sti
or
dec
dec
ds
imull
fdivs
or
les
das
aas
bound
inc
dec
mov
add
decl
mov
inc
adc
sbb
out
es
xchg
inc
mov
mov
jle
sahf
fbld
lret
cmp
dec
sti
or
fwait
ljmp
mov
stos
and
jne
adc
xchg
inc
pop
sub
or
sarb
sbb
cmc
mov
leave
dec
add
stos
cltd
jb
xor
inc
adc
sbbb
ds
dec
mov
jbe
cmp
sub
cmpsl
mov
pop
insb
out
mov
test
mov
dec
mov
out
xchg
popa
std
jle
lods
xor
pop
cmc
js
inc
push
scas
data16
into
mov
mov
push
and
sub
cmpsl
adc
pop
inc
jbe
cmp
pop
push
inc
pmaddwd
in
xchg
or
icebp
sbb
in
and
cltd
out
lret
inc
adc
in
sub
cmp
add
scas
lea
sub
aam
jmp
gs
dec
xor
sub
lods
jl
dec
jmp
add
jns
sub
enter
xchg
and
mov
push
push
rorl
jp
cltd
inc
std
cmp
pop
pop
out
xchg
ja
out
in
xchg
jmp
out
rorb
bound
out
xchg
enter
lahf
xchg
or
inc
push
flds
push
orl
lret
leave
mov
pop
push
mov
mov
aam
pop
outsl
xor
call
push
in
pusha
pop
ret
test
sub
sub
jp
dec
fdivrp
xor
pop
mov
xor
add
push
insl
int
mov
cmc
xchg
movsl
mov
dec
dec
push
sti
adc
add
push
flds
push
cmp
jae
notb
lret
mov
outsl
rcr
jmp
sti
icebp
repnz
add
je
pushl
dec
rol
sub
popa
mov
nop
adc
mov
jnp
xor
mov
loope
lods
mov
cmc
pop
dec
inc
call
push
flds
out
cwtl
pop
dec
popf
and
sub
push
lock
or
pop
scas
mov
xchg
ds
pop
popf
mov
js
iret
sub
xchg
mov
into
outsb
add
adc
pop
gs
es
test
lods
lea
lret
jecxz
push
adc
sub
or
mov
and
jl
icebp
push
and
and
ret
les
jb
push
sub
xchg
add
mov
push
mov
mov
xor
sub
cwtl
scas
pop
sub
decl
dec
add
outsl
dec
inc
or
mov
mov
lea
rcrb
sub
dec
shll
rolb
ljmp
push
sahf
sbbl
fwait
leave
pushf
xchg
in
iret
sub
leave
ret
into
repnz
inc
lcall
cmp
sub
imul
ds
xor
insb
popf
ret
pop
mov
inc
xchg
dec
push
repnz
mov
xchg
mov
add
push
iret
ret
out
lahf
mov
mov
lahf
sbb
jbe
out
jg
ret
iret
inc
pop
pop
adc
xchg
jge
xor
inc
js
cli
into
push
cmp
popf
mov
push
jecxz
mov
les
jecxz
out
addr16
fdivrl
aaa
jo
imul
dec
in
out
fdivs
sbb
shll
lods
add
je
lea
aas
ss
js
mov
and
je
mov
sub
inc
xchg
fisttpl
push
and
xchg
dec
test
mov
jns
xor
mov
push
rclb
out
mov
xlat
or
or
and
inc
dec
and
inc
jne
stos
lods
addr16
out
pop
enter
imul
xchg
in
mov
sahf
xchg
stos
mov
jmp
shl
sbb
or
call
jnp
dec
xor
loopne
jmp
loopne
jecxz
fs
xlat
or
aam
int
cs
mov
mov
inc
mov
rcll
xor
test
idivl
aad
inc
cmp
inc
mul
jp
dec
mov
mov
jecxz
inc
mov
sub
popf
mov
outsb
mov
in
jle
inc
shlb
popf
divb
leave
cmp
mov
push
inc
pop
adc
pop
push
repnz
rcrb
lret
or
mov
iret
mov
mov
push
push
out
test
mov
lock
inc
decl
push
gs
fsubs
pusha
inc
scas
or
lahf
repz
jge
mulb
imul
mov
and
mov
push
dec
fbld
popa
out
jbe
into
push
lcall
das
stos
insb
xchg
mov
in
dec
pop
movsb
lret
cmpsl
pop
pop
es
add
add
enter
aas
jmp
mov
das
jae
imul
lds
or
adc
loope
mov
movsl
fistpl
xchg
stos
pop
pop
lds
inc
cs
mov
push
imul
repnz
dec
mov
push
mov
sbb
test
pop
mov
sbb
adc
sub
repz
jb
pop
xlat
sub
int
bound
or
xlat
in
sbb
cmp
sub
andb
mov
stos
mov
mov
out
out
aas
mov
insl
mov
out
mov
sub
jno
call
jecxz
mov
and
movsb
gs
aad
movsb
or
out
jbe
mov
sbb
mov
fadds
repnz
pop
outsb
add
int
xlat
sub
out
xchg
mov
mov
cs
cltd
shr
leave
sbb
add
and
out
dec
outsl
sub
in
xor
rcll
lods
sub
fistps
ss
bound
rorl
sbb
push
cmp
rep
aas
jne
push
add
mov
mov
dec
scas
mov
mov
jmp
cmp
or
ljmp
inc
cmp
rcrl
lcall
mov
rcrl
cmp
jnp
push
cmp
or
scas
in
jb
addr16
popf
lret
out
and
subl
adc
rcpps
xchg
mov
popf
pop
add
dec
push
int
cltd
loope
shrb
and
pop
push
mov
in
popa
stos
cmc
bound
jmp
std
dec
in
daa
xor
cld
pop
out
inc
repnz
push
add
sbb
push
push
cmp
rcr
jno
sbb
jns
out
loop
cmc
xchg
push
cmp
push
mov
stc
mov
xor
add
mov
jb
dec
mov
ret
sarl
mov
sbbb
fnstenv
xor
fucom
sbb
das
xchg
add
cmp
adc
cli
in
jno
jg
clc
bnd
lock
dec
xor
cmp
sbb
and
xchg
xchg
jle
ljmp
push
mov
cmp
inc
jg
lods
int
scas
xchg
adc
fistps
mov
pop
aaa
in
cmp
fsubrs
out
fwait
add
xchg
rcll
inc
nop
sub
adc
inc
imul
loop
sbb
insl
adc
add
lcall
jp
jne
daa
repnz
pop
dec
dec
sbb
bound
cmp
mov
rorl
or
sahf
js
pop
jbe
in
pop
xor
mov
cmp
inc
bound
loope
xor
add
inc
out
call
cltd
iret
xchg
jecxz
out
mov
or
push
pop
lahf
push
dec
nop
ret
fcoml
sbb
pusha
sbb
jp
leave
sbbl
test
rclb
push
fs
or
movsl
mov
shrl
sub
mov
mov
mov
adc
xadd
cmp
in
in
sbbb
mov
pop
lock
dec
inc
negb
jmp
outsb
lahf
dec
xchg
shlb
push
mov
mov
push
pop
mov
lods
pusha
fisttps
xlat
movsl
fcoml
pop
sub
mov
jne
xor
sahf
sub
jg
addb
mov
jmp
xchg
bound
es
mov
les
out
outsb
pop
adc
and
add
lret
in
int
int
push
daa
sbb
cltd
int3
inc
or
mul
mov
mov
out
int3
lret
repz
gs
mov
roll
es
xor
int3
mov
jnp
or
xor
aam
rorl
adc
dec
lret
mov
and
cltd
jl
push
in
ljmp
jge
rcr
jl
jl
dec
pop
pop
add
dec
and
dec
repnz
dec
inc
or
std
aad
add
jns
sbb
xchg
pop
bnd
sub
sub
lcall
cmp
jo
mov
push
lds
cmp
or
addr16
out
xor
mov
push
inc
adc
xor
add
outsl
dec
stos
movsl
in
add
and
mov
xchg
inc
mov
dec
xor
jmp
or
fsubrp
mov
pop
sbb
hlt
and
insb
addr16
mov
sbb
in
mov
movsb
mov
pop
aad
inc
popf
sbb
pop
cmp
std
scas
aad
aad
imul
lods
sahf
rolb
cmpsb
mov
mov
movsl
cmp
xor
je
push
clc
add
mov
xor
pop
ja
cmc
push
fbld
leave
mov
dec
mov
mov
cmp
divl
cmpsl
sti
push
xor
mov
pushf
inc
or
and
adc
mov
outsb
loop
scas
mov
or
outsb
jb,pn
xchg
adc
clc
in
pop
adc
sti
mov
pop
imulb
les
fildl
lret
cmp
xchg
mov
push
ss
jae
daa
fstl
call
inc
movw
xchg
dec
inc
mov
dec
cmp
sbb
insl
jbe
or
push
adc
pop
push
pushf
sub
mov
pop
rorb
repz
jle
sub
js
cmpsb
icebp
cwtl
out
std
les
or
push
mov
ret
mov
shll
rorb
dec
or
loopne
and
test
add
lret
or
dec
mov
les
mov
iret
scas
push
inc
cmpb
mov
lods
test
lahf
ror
dec
lahf
xor
xor
ljmp
mov
negl
sub
jbe
imul
daa
push
sbb
lock
sahf
pusha
jmp
popf
in
mov
stc
mov
adc
js
cmc
add
mov
orl
and
test
pop
cmp
out
lods
bound
push
cmpsl
clc
imul
mov
mov
jo
or
test
stos
iret
shrl
jp
out
mov
std
ljmp
fsubl
mov
add
cmp
movsl
sarb
push
ss
push
out
js
adc
pop
inc
cmp
dec
xor
lea
xor
dec
cmp
mov
add
mov
rcrl
xchg
push
loopne
icebp
and
repz
ljmp
sub
pusha
xchg
inc
or
lahf
rcrl
cmpsb
leave
xchg
pushf
lret
sub
out
or
pusha
scas
dec
mov
inc
iret
xor
add
fadds
mov
mov
pop
fcmove
insl
mov
xchg
aas
push
pop
or
fs
push
ds
pop
scas
outsb
test
sbbb
fbstp
adc
mov
adc
lret
push
hlt
rclb
push
fs
lock
xor
movsl
cmp
mov
sbb
mov
fadd
xchg
std
mov
enter
cmpsl
mov
push
add
and
and
xor
xchg
push
dec
sbb
jb
insl
in
pop
push
popf
pop
and
outsb
push
cwtl
arpl
ja
push
arpl
sbb
dec
rorl
cmp
popa
mov
cmpsb
popf
sar
sub
adc
mul
outsl
rolb
out
dec
repnz
fisttpll
or
mov
mov
pop
inc
dec
lret
mov
push
idivl
push
test
adc
push
lret
inc
dec
aad
and
dec
or
lock
pop
jnp
or
adc
shll
outsb
jb
ret
jae
or
shl
pop
scas
lods
mov
push
xchg
cmp
and
cmp
stos
mov
sbb
mov
fmul
dec
cmp
mov
lock
rolb
pop
lods
lahf
sti
add
mov
out
adc
xchg
stos
out
adc
xchg
dec
pop
repnz
loop
cltd
pushf
pop
icebp
dec
xchg
push
xchg
adc
push
mov
mov
jg
aad
inc
inc
push
push
sbb
add
lahf
es
ss
js
pusha
pop
push
sbb
getsec
or
out
paddb
xchg
fmulp
mov
pop
das
cmpsb
xchg
xchg
jnp
repnz
pop
aas
fnstsw
daa
je
dec
out
sbb
cmpsb
cmp
aas
xchg
xchg
addb
lock
push
sbbb
dec
rcl
stos
sbb
mov
ds
lds
xchg
cmp
lahf
sbbl
out
movsl
out
inc
les
push
cli
mov
fwait
bound
push
out
pop
into
stos
push
out
flds
cmpsb
arpl
mov
aas
gs
pushf
fisttps
stos
inc
jae
mov
inc
ja
cltd
jg
jo
mov
movsb
push
jp
imul
cwtl
sbb
sbb
adcl
jge
fldt
lock
or
sbb
dec
pop
rolb
pop
xor
stos
mov
insl
mov
xor
xchg
js
cmp
inc
push
lret
jae
mov
push
jmp
bnd
les
add
xor
mov
push
mov
test
arpl
das
incb
into
lods
inc
hlt
js
cwtl
mov
xchg
and
pop
xchg
sbb
into
daa
xchg
lock
dec
aaa
sahf
fcomps
rorl
cwtl
mov
and
add
or
inc
in
pusha
repz
es
fsubrs
push
jecxz
adc
mov
in
or
xchg
aad
fists
mov
aas
sbb
jge
icebp
scas
lret
and
xor
cmp
jmp
dec
aad
in
in
pushf
cmp
or
sub
in
ljmp
jg
aad
fists
jo
cmp
xchg
mov
adc
jbe
outsb
loope
or
mov
mov
mov
mov
mov
dec
or
adc
xchg
enter
scas
jmp
mov
cmp
dec
out
push
fcmovbe
push
ror
jne
xor
aam
sub
sbb
cmp
mov
xchg
mov
xor
dec
popa
insb
outsb
push
or
cmpsb
add
loop
dec
pop
test
stc
insl
jno
and
addb
lock
inc
enter
sbb
and
das
fcmovb
jle
pop
sbb
cmpsb
inc
out
out
out
pop
rcrb
stos
push
ss
out
pop
in
arpl
hlt
lcall
stc
push
pop
popa
cwtl
hlt
fwait
insl
arpl
fwait
sbbb
cmp
cmp
fcomp
test
loop
in
out
xchg
mov
and
std
inc
mov
jns
mov
aas
loop
fidivrl
loop
cmp
dec
sahf
push
cmpsb
push
mov
lock
dec
push
jns
add
pop
pop
mov
stos
divb
ja
fisubrs
mov
adc
or
ds
scas
dec
xchg
jmp
add
lds
je
or
out
xchg
adc
xchg
cmp
in
out
insl
mov
inc
clc
test
fs
jne
xor
jl
jecxz
aam
rclb
inc
adc
cld
test
jo
loopne
incb
inc
addr16
or
ret
rcl
inc
mov
fcomi
js
aam
adc
push
les
fistpl
dec
loop
je
test
repnz
aad
fsub
inc
iret
add
sti
xor
inc
ss
ds
out
call
xor
sub
push
and
or
fucom
jae,pn
out
dec
shll
add
inc
sarb
ret
push
or
add
mulb
jns
inc
addr16
lods
dec
movsb
popf
insl
push
jge
adc
pusha
lret
sahf
cs
pop
cld
insl
adc
popw
sbb
cmc
outsl
hlt
loopne
fistl
shrl
test
mov
movb
cltd
sub
stc
aad
sub
sahf
sti
pcmpeqw
mov
js
divb
pmaxsw
or
shrl
ja
iret
and
or
out
push
add
loopne
dec
lds
fdivp
movsb
adc
jb
in
inc
scas
gs
adc
imul
xchg
mov
sbb
stos
cmp
clc
nop
push
insl
adc
loopne
xchg
mov
cmpsl
inc
or
sbb
flds
inc
cs
repnz
das
es
push
xchg
push
fdivl
xchg
and
das
aam
mov
jbe
dec
pushl
inc
mov
jge
pop
sar
push
enter
mov
addr16
xchg
or
cvtdq2ps
popa
or
push
int
sti
cs
cmp
xor
or
cmpsb
add
dec
sub
adc
dec
ljmp
ffree
jecxz
mov
add
cmp
mov
mov
push
vmread
adc
std
hlt
sbb
mov
fnstcw
loop
lea
je
or
xor
fwait
cmp
out
cli
pop
out
test
gs
gs
test
mov
jae
je
and
cmp
push
int
sbb
mov
jbe
push
sti
in
fwait
lods
orl
sti
shlb
pop
sbb
es
jp
insl
adcb
shll
mov
int3
pop
jecxz
fwait
xchg
in
insb
in
mov
push
stc
cmc
jmp
mov
jle
incl
out
fsubrs
fisubl
nop
adc
xor
push
mov
mov
rclb
jno
call
sbb
and
stos
adc
jae
int
push
cs
inc
out
dec
xchg
out
cs
xchg
cs
movsl
inc
mov
imul
out
mov
cmpsl
test
mov
andl
outsb
clc
or
loop
mov
int
pop
test
push
ret
dec
lcall
dec
dec
out
sbb
cs
cmc
sbb
insl
jmp
cltd
jg
mov
pop
mov
push
scas
pusha
push
push
dec
sbb
fidivs
sbb
xchg
mov
rcr
stc
lods
lods
mov
inc
lock
insl
sbb
test
inc
push
out
push
pop
stc
jnp
ljmp
mov
dec
cltd
insb
push
jno
cmp
mov
pusha
and
pop
push
fwait
scas
daa
cmp
xchg
inc
pop
in
mov
popf
lret
cli
jmp
push
mov
xchg
cmp
mov
mov
push
repnz
and
mov
scas
repz
aas
add
jmp
add
fsubr
loope
insb
jg
inc
mov
and
lds
call
cwtl
popf
fsts
jae
jle
mov
push
push
mov
mov
jno
pushf
pop
mov
mov
xchg
inc
xchg
fwait
es
iret
xor
mov
les
testb
xchg
pusha
push
add
in
xchg
adc
and
dec
xor
jo
pop
out
icebp
pmulhw
lock
subb
adc
sbb
aaa
mov
or
mov
push
pop
rclb
loope
fidivrl
icebp
shl
stc
xchg
pop
pop
pop
push
out
inc
jb
adc
pop
jmp
out
jo
cmpsl
fsubrl
lcall
or
jno
adcl
dec
sbb
xor
orb
hlt
ds
nop
cmp
mov
jae
push
xor
pop
clc
out
sbb
push
xor
ja
mov
pop
jno
insl
mov
or
ljmp
test
fsubr
int3
push
pop
and
popa
lret
sti
xor
jb
cmpsb
nop
jecxz
lcall
test
push
std
pop
cwtl
jbe
fisubs
andl
or
js
sub
pop
mov
pop
clc
dec
mov
insb
inc
jo
mov
jmp
pop
jne
subl
sarl
scas
iret
adc
insl
push
shr
mov
push
js
cltd
notl
lret
push
pop
xor
lods
mov
push
cwtl
mov
jp
fstpt
data16
pop
xchg
nop
test
scas
imul
in
jge,pn
mov
jnp
ret
cld
fnstenv
shlb
cwtl
cmpsb
add
push
push
adc
adc
ja
jo
xlat
shrb
dec
and
xchg
sarl
mov
xor
jb
mov
push
xchg
cmc
sbb
mov
pop
mov
ss
or
frstpm(287
mov
inc
mov
lret
sub
xchg
bound
mov
test
jo
in
cli
cwtl
mov
ds
ret
bound
sub
push
scas
sbb
mov
arpl
ja
out
inc
push
cmp
xor
jae
mov
add
or
cmp
pop
mov
pop
sarb
xor
dec
lea
sbb
lock
add
xor
sub
xchg
xor
into
dec
or
cmp
mov
out
in
ja
gs
lahf
insl
repnz
enter
jecxz
cmp
push
imul
int3
dec
push
mov
pop
imul
lods
push
mov
adc
jae
sti
out
or
mov
push
adc
addr16
fimull
xlat
orl
push
lock
scas
mov
movsb
pop
int3
scas
or
shl
pushf
stos
mov
lods
push
int
pop
aas
idiv
sub
das
loope
lret
mov
mov
ljmp
scas
or
push
sub
inc
mov
dec
push
cmp
loop
jae
pop
shll
or
scas
insl
ss
flds
cwtl
outsb
mov
or
or
lock
cmp
adc
andnps
cli
jnp
push
loope
nop
scas
push
std
add
add
sub
mov
mul
rcrl
addl
insl
outsl
pop
pop
inc
inc
mov
insb
adc
icebp
sbb
sarl
xchg
icebp
sub
mov
and
xchg
cli
xchg
enter
daa
jecxz
jmp
loope
sub
xor
aad
dec
flds
mov
test
inc
aam
inc
dec
dec
incl
pop
inc
dec
adc
int
inc
mov
pop
arpl
mov
pop
add
bound
jb
out
pop
cmp
addr16
das
test
lcall
mov
sub
mov
mov
and
sahf
stc
adc
stc
pop
dec
jl
sbb
addr16
data16
sub
or
jle
rolb
and
push
pop
test
movb
push
cmp
push
popf
add
adc
lret
das
cwtl
inc
and
ret
outsb
and
mov
insb
or
sarb
push
clc
imul
ret
sbbb
cmpsb
lds
mov
xor
lods
lods
sub
mov
lock
mov
cld
mov
jae
jae
inc
and
xchg
ret
jecxz
dec
repz
movsb
cmp
adc
dec
std
mov
xor
pop
mov
mov
pop
jns
mov
and
fwait
cld
icebp
push
in
add
in
cmp
and
imul
test
or
enter
cmc
jle
cwtl
jns
xchg
xchg
dec
in
add
cmp
inc
mov
dec
inc
int3
fcmovbe
dec
inc
lret
subl
imul
sbb
xchg
test
insb
dec
add
das
in
ljmp
pop
fs
dec
and
sbbl
fnstenv
mov
mov
mov
inc
sub
push
adc
adc
adc
add
repz
xor
inc
jb
cwtl
outsl
pop
lods
xchg
jle
xchg
lret
test
stc
pop
inc
or
fidivl
mov
movsb
je
jle
sbb
out
cmp
sti
sbb
psrad
insb
or
mov
movsl
mov
daa
mov
xchg
test
push
es
sub
add
or
iret
pop
cmc
jo
xorl
push
mov
fwait
test
lret
mov
xor
cmc
sub
arpl
fisubl
aad
mov
call
or
xchg
and
cli
enter
pop
inc
push
fwait
cmc
out
xor
pop
and
fimull
lds
das
cltd
mov
mov
push
pop
cmc
sub
xchg
je
xchg
push
inc
hlt
ja
std
jo
mov
inc
int3
mov
lret
inc
fsubl
test
or
out
mov
out
mulb
sub
pop
push
outsb
mov
xchg
pop
out
push
lds
lret
les
dec
stc
add
mov
in
or
popf
sub
cmp
iret
cltd
add
popf
add
cmp
push
stos
xlat
jae
mov
pushl
test
jle
add
ss
dec
gs
sub
mov
enter
lea
fs
cmp
xlat
test
and
cltd
sub
ja
sub
adc
stos
mov
test
or
ficoms
fldt
xor
cltd
dec
xchg
hlt
pop
popa
mov
and
in
push
pop
rclb
jmp
leave
lods
lahf
mov
mov
and
bound
push
mov
sub
outsl
les
xor
pop
lahf
aam
in
jne
imul
mov
lock
rol
inc
inc
adc
fnstcw
jnp
movsl
lods
es
mov
sbb
ja
out
mov
lods
dec
inc
stc
mov
sub
or
icebp
xor
js
cmpsl
ja
xchg
sarl
fiadds
les
xchg
pop
dec
jno
xchg
movsl
fistpl
mov
or
xor
int3
or
ret
sarb
push
gs
xchg
and
rcll
loope
rcl
xchg
lock
adc
lahf
dec
lds
aad
or
pop
mov
push
push
mov
fwait
adc
scas
outsl
movsl
loope
dec
arpl
rcrb
push
fs
orb
jle
fcoml
adc
ds
push
iret
lea
fcmovb
int3
push
jp
lea
loopne
sbb
bound
insb
mov
rorb
and
popl
mov
cltd
mov
cld
fcoms
sbb
jge
mov
movsl
jge
inc
jne
aam
dec
add
pop
dec
sbbl
sbb
jno
jge
cs
loope
mov
add
sbb
push
pop
xor
xchg
loop
cs
cli
xchg
adc
pop
mov
adc
push
or
xor
push
loope
idivb
enter
mov
pop
sub
xchg
xchg
pop
cltd
lret
ret
xor
dec
jecxz
test
push
ja
add
popa
push
lods
sbb
adc
xchg
leave
mov
movsl
mov
sub
xchg
sahf
or
push
ss
dec
inc
inc
mov
mov
addr16
push
and
lds
push
mov
mov
std
cmp
test
daa
pusha
adc
push
sub
fmuls
mov
sub
std
fcomip
aas
pop
mov
dec
mov
loopne
lahf
xorl
cld
ds
fdivs
mov
sub
into
add
popf
stc
jne
movsl
loop
stos
vprotw
jne
jnp
jo
adc
in
test
addr16
rcrb
stos
xchg
add
push
fimuls
into
mov
and
int
je
jmp
repz
add
jg
lret
iret
shr
mov
xlat
pop
out
xchg
outsl
imul
sahf
adc
xor
pop
push
mov
jns
mov
mov
adc
out
push
mov
mov
mov
sbb
out
ljmp
add
out
sbb
je
sbb
sbb
jns
xor
daa
inc
mov
popf
adc
mov
into
mov
stc
mov
xor
sbbb
clc
icebp
bound
nop
pushf
notb
jo
jge
movsb
lock
cmpsl
sbb
jg
xor
adc
roll
test
in
clc
and
frstor
pusha
xor
adc
mov
jae
or
xchg
out
mov
iret
cld
daa
xchg
xchg
mov
mov
adc
popa
mov
shl
mov
xchg
push
addb
xchg
jle
aad
int
xorb
xchg
push
outsb
loopne
adc
mov
mov
inc
cmpsb
fwait
xchg
cmp
or
mov
cmp
or
flds
bound
pusha
sub
jge
adc
shrl
push
addr16
cmp
test
cmp
loopne
cmp
cmp
pop
xchg
lods
push
imul
push
mov
pop
push
popf
and
sbb
mov
cmp
or
ret
cmp
mov
imul
fstl
mov
or
dec
mov
cmc
loop
xor
adc
push
cmp
test
xchg
daa
iret
jne
mov
push
aaa
stos
lds
nop
in
and
xor
pusha
lret
pop
movsb
imul
jo
add
jne
push
jecxz
xchg
mov
in
sub
loopne
sar
or
test
fidivrs
hlt
rol
jne
mov
fisubrl
cmp
jns
lea
shrw
sub
mov
mov
mov
testb
sub
movsl
sub
stos
mov
sbb
shrl
xchg
xor
add
repz
push
sbb
stos
pop
andl
sbb
xorl
mov
jg
cwtl
stos
pop
or
clc
int3
and
or
dec
pop
leave
hlt
cmp
mov
mov
jae
sahf
and
inc
fcoml
inc
cld
scas
jo
mov
cld
rcll
roll
adc
pop
inc
pusha
push
or
dec
rolb
movsl
in
pushf
jbe
iret
pop
cwtl
dec
mov
arpl
out
scas
inc
repz
cmpsb
sbb
rolb
pop
xor
bound
ficompl
icebp
sbb
xor
fwait
test
sub
movsl
repnz
xorl
fs
imul
testl
adc
xchg
mov
or
fidivrl
lods
gs
dec
xor
rorb
testb
ret
leave
lahf
push
in
push
push
xchg
mov
jae
adc
gs
xchg
add
out
sub
cmp
scas
dec
das
clc
push
add
dec
fwait
mov
sbb
jg
aam
mov
push
arpl
dec
pushf
in
fcomps
fisubs
xchg
cld
test
sub
fistl
add
mov
mov
mov
int
jecxz
sub
dec
rorb
sbb
dec
dec
aaa
cli
adc
mov
popa
xchg
xacquire
cmp
xchg
inc
mov
imul
sbb
xor
mov
and
jae
xor
xchg
adcb
scas
jge
jno
into
aaa
div
repnz
das
dec
stos
in
mov
xor
adc
add
dec
mov
lods
jg
movsb
and
jno
imull
dec
ljmp
psraw
test
mov
in
mov
push
jne
sysexit
roll
test
and
insl
orb
xchg
test
sbbb
pop
or
add
pop
lea
adc
inc
sub
faddl
push
xchg
pop
sub
add
mov
pop
mov
into
jnp
stc
nop
inc
jmp
test
jnp
lcall
mov
xchg
arpl
xchg
or
mov
daa
mov
outsb
jnp
pop
sti
mov
add
mov
pop
test
mov
fcomps
faddl
popa
loop
mov
and
mov
inc
add
cmp
fisttpl
sbb
inc
pop
adc
mov
lods
and
test
xchg
jl
movsb
in
cmp
mov
mov
mov
test
pop
mov
inc
pop
and
adc
aam
cmp
push
ret
hlt
push
aas
xchg
or
clc
out
sahf
add
cmp
xor
movb
sub
adc
jl
loop
mov
or
stos
in
adc
test
cmp
xor
push
lea
arpl
adc
xor
or
movl
adc
xor
stos
adc
scas
imul
or
and
push
or
mov
mov
pop
in
mov
push
aam
add
inc
mov
lea
adc
and
push
rolb
fdivrl
movsl
testb
js
push
lds
dec
pop
dec
push
mov
mov
mov
jns
and
push
pop
xchg
call
call
mov
outsb
pusha
pop
sub
sbb
push
insb
mov
call
or
mov
in
in
and
insl
jg
xor
pop
xor
jo
outsb
sub
add
adc
inc
pop
cmp
dec
jecxz
jecxz
insl
jecxz
cmpsl
jne
xchg
out
inc
mov
ds
push
insl
or
mov
add
mov
add
dec
stos
push
mov
scas
cmp
leave
sbb
shlb
mov
xorl
std
sbb
ja
insl
jle
lds
xchg
mov
push
insb
mov
popf
scas
test
mov
fs
mov
lret
stos
mov
data16
ficomps
sub
cmp
scas
dec
adc
rorl
sbb
inc
mov
bound
jne
xchg
xchg
js
sub
leave
sar
stos
or
xchg
je
arpl
add
or
ljmp
mov
int
fwait
add
sub
out
xor
pop
shll
andl
es
add
fs
rcrl
ljmp
mov
fwait
mov
sbb
mov
fcoml
mov
mov
mov
dec
adc
dec
xorb
xorb
add
mov
jl
push
cmpsl
sarl
jge
dec
dec
scas
mov
cmp
adc
xchg
cmc
cmp
sbb
jmp
int3
stos
testl
and
push
and
mov
jmp
pop
rcr
add
int
pushf
push
jnp
mov
out
dec
sbb
jp
imul
inc
or
adc
adc
mov
xchg
push
sub
sbbl
add
sub
jg
popa
xor
mov
cmpsl
mov
push
fcomi
push
cmovg
out
shlb
sub
js
xchg
insb
repz
cmp
popf
inc
imul
push
bound
ss
shll
and
repz
lods
jns
mov
pop
nop
pop
filds
add
sti
xchg
fwait
dec
mov
stc
lahf
mov
movsb
xchg
icebp
or
adc
pop
ss
push
sbb
jmp
push
cmp
adc
jg
popf
ffree
mov
stc
pop
mov
dec
test
and
je
pop
mov
jmp
lock
jmp
test
inc
rcr
lcall
cmp
xlat
pop
test
lods
xchg
mov
std
pop
lods
xor
mov
push
push
in
add
stos
insb
rcrb
cli
or
out
repnz
sub
mov
sub
mov
mov
cld
ljmp
and
stos
cmp
icebp
push
or
je
push
dec
out
inc
and
add
stc
shr
sbb
add
cld
das
filds
insb
lret
mov
cmp
inc
xchg
xchg
dec
cmpsb
out
aas
push
cwtl
pop
or
push
lock
je
jecxz
test
ret
stos
push
xor
jo
push
out
cmp
pop
sbb
mov
xor
jge
negl
xchg
mov
jle
arpl
test
ret
mov
sub
push
pop
jecxz
push
popf
imul
ret
orl
into
stc
mov
hlt
inc
and
int
loopne
stc
out
mov
inc
pop
fiaddl
jp
test
inc
push
dec
sbb
xchg
sbb
sbb
fnsave
neg
lahf
pop
or
lret
sarb
orl
xchg
repz
lds
dec
out
cmp
popa
sbb
cmp
xchg
nop
jmp
aad
movsl
cwtl
jns
shll
bound
js
bound
pop
mov
pop
mov
sahf
dec
xor
xor
jle
sub
rcl
int3
xor
decl
jp,pt
loopne
adc
in
add
aad
cmp
lret
stc
icebp
inc
or
aad
mov
dec
jmp
inc
into
cs
xchg
pop
push
les
movsb
adcb
add
push
dec
or
shll
xor
imul
call
push
mov
mov
cmp
mov
rorl
mov
add
cmp
es
aaa
mov
or
lcall
ss
sub
insb
pushf
mov
mov
rcll
cmp
mov
mov
sub
add
push
inc
popa
mov
jne
fcoms
ffree
sbb
jge
xlat
xor
pop
int3
mov
addl
rolb
int3
adc
pop
mov
dec
cmp
cwtl
fisttpll
ret
inc
mov
jl
add
jae
stos
push
lock
inc
fidivl
addr16
pusha
roll
nop
mov
pop
popa
xorb
xor
adc
mov
das
test
cs
rcl
ret
adc
js
fs
rcrl
mov
push
lret
sub
mov
jns
push
scas
push
push
adc
or
aam
mov
out
popf
pmulhw
out
and
lahf
lahf
fwait
out
mov
lods
out
fisubrs
mov
ss
push
jmp
xchg
or
xor
dec
cmp
mov
adc
movsb
lcall
mov
pop
bound
xlat
mov
int3
out
sub
sub
xlat
push
aas
hlt
daa
sbb
in
ds
mov
ret
hlt
mov
mov
jo
idivb
ja
sub
jne
mov
aam
jbe
sbb
sbb
adc
inc
js
enter
addb
push
cmovb
sub
xchg
xchg
ds
std
jge
xchg
sbb
sub
cwtl
adc
mov
cmp
pop
dec
pop
xor
pop
inc
cmpsb
ja
pop
pop
in
aaa
mull
pop
add
lods
pushf
sbbl
mov
int
outsl
push
aaa
sbb
lret
push
inc
and
and
xorl
mov
test
inc
pop
sub
xor
fs
fistpll
adc
ret
adc
xchg
xchg
xchg
xchg
xor
faddl
les
xor
scas
pop
dec
stos
lea
sub
mov
fsubs
fldt
orl
xor
mov
jl
jns
shl
inc
scas
mov
pop
sbb
in
add
mov
imul
or
push
inc
mov
cli
xor
scas
lods
pop
cmp
push
push
sbb
cmpb
jnp
mov
xchg
mov
jb
jno
ljmp
nop
sub
mov
je
imul
ja
or
adcl
dec
xchg
inc
adc
or
mul
and
ss
xchg
ja
sti
or
xor
call
fsubs
lds
or
add
mov
inc
clc
pusha
shll
jne
cmp
outsb
mov
push
ljmp
andb
movsl
pop
mov
call
int
fldl
shrl
adc
aad
xchg
pusha
inc
rcll
push
ret
adc
mov
sub
inc
jb
ret
inc
or
enter
dec
lret
adc
pop
ffreep
mov
fstpt
lahf
push
out
decl
xchg
cmp
xchg
xchg
or
dec
imul
inc
test
push
int3
int3
fidivrl
gs
jl
mov
jmp
push
inc
jne
mov
rolb
push
lock
mov
sbb
xchg
push
test
xlat
jp
leave
rcrl
cmpsl
xchg
mov
adc
imul
mov
fistpll
popf
call
enter
pop
mov
mov
fucomip
fistl
mov
jl
inc
mov
rorb
dec
inc
jmp
xor
clc
dec
xor
lcall
lret
dec
adc
pop
add
sub
pushf
and
negl
jl
xchg
inc
pushf
fs
sbb
ds
loope
jno
xor
test
mov
inc
lods
movsb
and
push
int
fiadds
test
lods
fildll
int3
pop
adc
jge
mov
mov
mov
clc
addb
shr
mul
and
loope
clc
mov
and
lret
fs
in
inc
cmp
adc
inc
jno
scas
mov
mov
mov
js
pop
lds
pop
mov
sbb
dec
mov
or
or
cld
xchg
notb
insl
cli
cmp
lahf
mov
scas
adc
mov
pop
jge
fcoml
mov
loopne
jl
mov
add
pushf
dec
xor
repz
enter
mov
cs
je
or
loop
roll
lods
lock
addl
mov
push
cwtl
add
inc
in
data16
jecxz
pushf
xchg
mov
aas
mov
fistpl
cmc
in
and
mov
push
pop
jbe
mov
mov
inc
sub
pop
or
and
pop
xor
sub
cmp
jb
outsl
test
mov
fdivrs
test
push
lret
stos
dec
lahf
push
jb
imul
dec
adc
pop
es
adc
lahf
les
dec
jb
out
shll
xchg
jnp
mov
add
jg
insl
icebp
shll
cmp
rol
push
fcmovb
push
cmc
mov
mov
sub
push
cmp
xchg
fimuls
or
sub
or
fsubr
mov
mov
pop
ss
in
popa
call
daa
out
mov
inc
xchg
jnp
pop
movsb
xlat
push
mov
mov
ret
movsb
jecxz
int3
cwtl
scas
cmpsl
dec
jecxz
push
jle
fsubrs
sbb
mov
xor
adc
mov
add
xchg
push
mov
and
call
dec
je
cmp
and
clc
js
cmp
mov
pop
out
pop
fsubrs
mov
insb
addr16
in
ljmp
ret
sbb
and
das
xchg
sbb
addr16
lds
icebp
inc
je
push
in
mov
cmp
popf
cld
lahf
int3
fmul
cld
popa
outsl
jmp
xchg
pop
mov
mov
pop
adc
cmpsl
sar
adc
stos
sbb
imul
nop
and
scas
cmpb
fsubrs
mov
cs
xchg
sbbl
insl
or
std
ss
in
orb
or
daa
and
and
popa
inc
sub
adc
cwtl
mov
leave
jmp
push
sti
addr16
inc
js
mov
xchg
insl
daa
outsl
push
sub
pop
ljmp
aam
adc
into
lret
mov
sbb
pop
ds
call
mov
lret
imul
imul
xchg
in
push
xor
aam
sub
push
pop
ficoml
xchg
icebp
or
hlt
xlat
jne
add
and
xor
aam
in
cmpsl
dec
pop
dec
mov
fistl
adc
inc
stos
mov
xchg
cmc
aam
loopne
or
push
xor
rcrl
pop
pop
mov
das
pop
stc
dec
jo
push
dec
dec
cmp
lods
cmpsl
pop
jge
or
test
lahf
adc
pop
inc
push
jbe,pt
push
adc
mov
int
sub
sub
stc
mov
pop
jl
lods
pop
mov
dec
xchg
dec
or
jmp
das
sbb
add
cmc
cli
into
add
xchg
lcall
testb
inc
or
mov
cld
adc
cmp
loop
dec
lods
jb
roll
mov
pop
cmp
cmp
mov
mov
or
ds
dec
mov
call
in
inc
adc
and
jno
dec
cmpsl
sub
cld
dec
sti
push
or
push
sbb
mov
push
pusha
push
add
cmpsb
outsl
imul
lret
xchg
pop
cmp
in
inc
aas
imul
aaa
mov
test
mov
iret
or
data16
lret
or
pusha
and
jbe
xchg
filds
xchg
dec
cmpsl
jmp
iret
imul
sub
mov
iret
push
pop
and
push
jnp
cmp
daa
dec
sub
push
fstp
outsb
lods
dec
ret
mov
pop
out
cmp
mov
xchg
pop
dec
adcl
hlt
lea
mov
push
out
out
shlb
popa
or
xchg
ret
and
push
mov
push
jno
decl
cwtl
mov
dec
adc
movsl
test
mulb
mov
adc
out
push
in
inc
xchg
mov
inc
sbb
mov
cmp
mov
filds
loop
fnstenv
and
inc
hlt
lahf
sbb
ret
jmp
xor
pop
push
js
or
das
pop
mov
in
cmp
cmp
lock
cli
addr16
faddl
aaa
in
fcom
xor
flds
push
cmp
lea
aaa
xlat
pop
dec
sbb
pushf
out
repz
lcall
test
xor
sbbb
loop
xor
jg
int
shll
jbe
rcrl
jns
arpl
fimuls
xchg
or
into
dec
fistpll
push
adcb
mov
shlb
inc
dec
adc
pop
movsl
push
repnz
lods
xor
pop
nop
pop
cmp
and
movsl
dec
loop
out
or
xlat
es
mov
insl
repnz
inc
or
sbb
arpl
mov
adc
push
and
clc
je
add
cmpb
hlt
sub
idivb
xchg
lock
call
inc
mov
jecxz
jmp
fcoms
outsb
ret
or
out
mov
sbbb
and
or
daa
push
push
pop
sti
aaa
mov
or
nop
mov
popf
stos
in
pop
mov
push
sbb
mov
stc
and
imul
scas
sbb
fistpl
int3
push
pop
dec
cli
dec
cmpsl
cmp
js
cmpsl
sub
pusha
sbb
js
inc
mov
and
pop
bound
sub
test
lcall
or
test
sub
es
int
sbb
mov
insl
int3
or
dec
js
lods
mov
pop
outsl
out
aas
push
out
rorl
clc
xchg
fiadds
into
pop
out
pop
pop
fcmovu
sub
inc
push
pop
ja
lahf
stos
out
out
mov
pop
jb
mov
icebp
mov
shlb
rdmsr
mov
hlt
daa
adc
lock
xor
xor
sub
out
jno
mov
test
popa
mov
aaa
fs
mov
cmp
fadd
cmp
adc
test
mov
jl
mov
mov
lcall
dec
ja
test
jbe
je
fistl
push
out
xchg
shll
cmp
dec
push
and
test
pop
ret
fisubs
inc
cld
pop
and
dec
dec
lds
enter
test
mov
add
mov
js
mov
cmp
mov
cwtl
out
xor
or
call
xchg
mul
in
inc
push
add
adc
incl
lcall
mov
mov
add
sbb
cli
xor
or
imul
mov
fs
sub
adc
sub
dec
jl
mov
adc
inc
arpl
lcall
stos
pop
insb
pusha
loop
imul
iret
out
push
xchg
cltd
arpl
xor
inc
cwtl
mov
imul
mov
push
cli
and
xor
jns
in
add
push
les
and
imul
inc
cli
and
jp
sbb
les
lahf
pop
jecxz
mov
inc
xor
addl
hlt
adc
mov
test
dec
scas
hlt
imul
cmp
cwtl
jae
add
data16
test
scas
ljmp
les
fnstsw
and
sub
mov
cli
xchg
inc
push
dec
cmp
in
imul
adc
sbb
mov
jbe
mov
icebp
jecxz
shrb
xor
mov
inc
mov
scas
push
mov
mov
pop
test
xchg
jp
mov
or
cmp
push
pusha
push
inc
and
mov
pop
push
data16
pop
fcomps
hlt
jnp,pt
in
fs
cmp
daa
out
dec
pop
ja
aaa
pop
outsb
aad
test
and
dec
xor
mov
loop
adc
int
push
jg
add
lods
mov
lret
jmp
pop
icebp
or
lahf
negl
sbb
push
mov
dec
cwtl
fwait
mov
ret
loop
mov
popf
inc
and
sub
mov
dec
idivb
mov
stos
jecxz
jl
add
jns
sbb
xchg
fs
mov
notl
mov
pushf
sti
loop
clc
in
mov
cmp
test
lcall
ret
lock
test
push
ret
jae
pop
or
adc
xchg
add
std
rcll
mov
lret
push
cwtl
add
xchg
ljmp
xor
cwtl
pop
hlt
shlb
fnstenv
add
cld
ficomps
das
push
ret
ret
enter
popf
xchg
and
push
lcall
xchg
mov
pop
adc
fldl
pop
xor
xchg
inc
add
sub
test
rcrl
test
nop
negl
fnsetpm(287
fst
add
mov
mov
xchg
jnp
lcall
cld
xchg
aaa
lock
lock
pop
dec
dec
push
xchg
sbb
imul
lock
popa
sbb
ficoms
mov
fwait
sbbb
or
pcmpgtb
bnd
cmc
cmp
mov
outsb
sub
push
xor
push
push
lock
insb
lret
loope
mov
xchg
mov
sbb
pusha
js
cmp
sar
mov
jbe
mov
inc
icebp
loope
imul
push
icebp
cli
sub
push
iret
push
jmp
jmp
adc
fldz
xchg
jg
inc
hlt
lcall
xlat
aad
jnp
xchg
and
loopne
sbb
sti
std
and
nop
movsl
shrb
mov
mov
and
xchg
add
jecxz
add
jnp
cwtl
stc
loop
fdivs
and
push
pusha
shll
cmp
mov
mov
push
cmpsb
outsb
xlat
push
xor
test
nop
pusha
inc
cmp
test
fisubrs
add
pushf
stos
ss
pop
adc
jb
add
inc
inc
mov
cmp
mov
mov
in
arpl
shlb
xor
ds
mov
push
mov
out
out
mov
repnz
daa
pop
sub
pop
iret
jecxz
sbb
std
xchg
mov
xchg
icebp
leave
cmp
push
shrl
mov
jnp
cmp
imul
andl
xlat
leave
mov
pop
xchg
xchg
shll
jmp
cld
cmc
cmovne
lea
push
dec
clc
in
fdivl
in
or
inc
push
dec
sarl
dec
push
jl
and
xor
repnz
inc
mov
ja
lahf
rcll
in
insl
mov
outsl
ja
sbb
mov
or
fsts
cmp
gs
xor
mov
xchg
jb
aaa
jge
mov
jge
lods
outsb
je
fisttpl
popf
adc
test
mov
and
lock
dec
ret
or
cli
aaa
cld
stos
scas
iret
or
dec
sub
and
adc
xor
xchg
push
jbe
cmp
add
nopl
fildl
inc
testb
or
jno
sub
sub
rorb
push
mov
or
dec
pop
inc
call
test
int
and
movsb
pushf
push
inc
mov
cwtl
or
push
aaa
maskmovq
testl
push
xchg
jns
mov
pop
cmpb
push
mov
pop
sub
aam
add
repz
jne
dec
test
imul
mov
adc
add
rcl
lock
stc
in
dec
imul
aas
sti
fisubs
test
jle
mov
insb
sub
or
cwtl
outsl
and
int
add
inc
pop
push
lock
lret
fsts
jnp
sub
jns
jp
mov
daa
rorb
std
adc
mov
test
cmp
xchg
jne
xlat
sbb
cmp
js
lret
jns
adc
push
ljmp
lock
add
and
lahf
clc
cmpl
xor
lock
sti
pop
pop
jb
movsb
inc
enter
lret
and
stc
fs
xchg
push
aas
xchg
int
mov
push
notl
lret
and
mov
int3
add
scas
data16
adc
icebp
in
fsubs
push
andb
ja
push
inc
pop
and
imul
sahf
and
test
mov
mov
fldl
std
xchg
jne
push
mov
dec
stos
inc
add
mov
mov
and
push
xor
xor
add
sub
std
push
push
pusha
xchg
cmc
jb,pt
movsb
mov
pop
cli
mov
movsb
aaa
cmp
push
push
jb
cmpsb
gs
mov
jae
inc
lahf
dec
and
int
aam
fdivrs
adc
icebp
sub
mov
pop
jle
aam
das
cmp
stos
xor
mov
pushf
inc
loope
add
lcall
fildll
fldl
xlat
fidivl
lret
push
pop
dec
imul
pop
lcall
adc
jae
sbb
imul
test
or
rorb
pop
lret
call
out
fcmovnu
pop
cmp
hlt
frstor
jo
aad
jae
pop
mov
into
sbb
push
push
push
js
xchg
sbb
fsubrs
popf
addr16
sbb
xor
jbe
cs
mov
xchg
js
pop
mov
out
fcompl
lcall
out
mov
andb
fbld
repz
std
sub
outsl
xor
or
jle
jmp
scas
leave
add
movsb
mov
loope
pop
mov
sbb
pop
aad
test
mov
xchg
xchg
movsb
dec
mov
or
popf
dec
lea
mov
cmp
mov
je
jns
arpl
sub
mov
aam
mov
mov
jle
in
push
xor
sbb
sar
adc
pop
or
pop
cmpsl
shlb
sbb
xchg
test
push
es
loop
push
push
cmp
rol
in
xchg
xchg
in
jle
mov
insb
fidivl
int3
fwait
int
jns
and
sub
jp
or
movsb
ljmp
mov
jae
ja
push
insl
pop
das
adc
dec
sub
lcall
xchg
lods
or
in
jmp
fistpll
daa
inc
xchg
lea
lock
call
xchg
dec
mov
imul
je
dec
lods
mov
jp
aaa
pop
lock
mov
mov
push
pop
dec
sbb
es
and
adc
sub
jl
sub
or
loopne
and
mov
sub
mov
or
ss
inc
test
sub
xchg
inc
mov
push
pop
sbb
mov
dec
mov
adc
lock
push
fsubl
and
insb
mov
lret
enter
jp
mov
iret
sub
repnz
push
out
fsubs
aam
mov
insb
cli
sbb
out
sbb
cs
movsb
inc
repz
pusha
andl
dec
cmpsb
pop
dec
pushf
outsl
mov
push
mov
es
sbb
in
cmp
nop
mov
fcoml
xor
sbb
js
pushf
pop
movsb
xor
dec
outsb
pop
dec
insl
out
cmpsl
mov
hlt
or
sbb
lock
add
jl
enter
sub
popf
jns
bts
into
call
xchg
inc
sbb
sub
xchg
js
je
push
xor
add
pop
call
imul
cwtl
jno
xchg
or
pop
das
jecxz
push
fiaddl
cmp
test
push
dec
je
and
jns
ds
mov
jns
lcall
adc
xchg
out
imul
dec
negl
add
es
mov
es
mov
or
sub
or
scas
push
incl
inc
cmp
jp
outsl
lcall
sub
push
orb
and
outsl
test
test
add
push
or
and
loopne
jle,pn
jae
leave
mov
cmp
dec
or
fwait
addr16
test
popf
push
outsb
jnp
and
rcrb
push
sub
je
test
mov
sbb
cli
imul
loop
mov
mov
dec
stos
sbb
mov
shlb
jae
fists
aad
orb
sahf
pop
adc
test
pop
dec
imul
add
xchg
leave
jnp
adc
pop
popa
and
push
dec
gs
pop
clc
xor
leave
push
dec
mov
adc
dec
cmp
aas
aas
incl
push
cmp
mov
mov
cmp
mov
loopne
and
jno
mov
mov
jns
sub
jmp
pop
lahf
jnp
jae,pt
cmc
xor
ds
faddl
adc
movsl
sti
das
mov
pop
jecxz
call
imul
shr
jo
cmp
push
repnz
adc
repz
mov
jno
adc
inc
mov
scas
lahf
popf
add
popa
mov
xor
jge
and
fs
cmp
call
mov
pop
jle
mov
jns
popf
xchg
mov
ret
jecxz
in
leave
nop
and
out
push
sbb
mov
jo
iret
cmpsl
in
ret
repnz
mov
pushf
loop
repz
idivb
or
or
mov
mov
and
pop
xchg
mov
ljmp
arpl
mov
orl
inc
test
fisubrl
sbb
ss
sbbl
js
pop
pshufw
jae
and
xchg
jge
mov
ljmp
mov
jno
add
mov
lahf
xor
into
sti
pop
mov
add
jl
push
mov
pop
mov
ficoms
add
xchg
popa
dec
inc
xchg
leave
fiaddl
ss
mov
pop
pop
sub
jo
fists
repz
pop
xchg
jl
lcall
fadds
jae
xorps
xor
and
mov
mov
xor
lcall
pop
mov
push
mulb
sub
dec
push
nop
ljmp
lcall
sbbl
call
adc
xor
cwtl
stos
out
xchg
movsb
imul
jle
mov
and
lods
fisubs
stc
test
xchg
cmp
mov
adc
daa
lods
jno
mov
mov
sub
mov
sti
ret
rclb
sbb
shll
mov
mov
iret
xchg
addr16
test
or
and
in
test
push
loop
push
xchg
addr16
sub
fcoml
xor
or
sub
mov
cld
push
push
adc
push
push
mov
fistps
xchg
aad
lock
ficompl
or
inc
pxor
stc
out
adc
std
mov
es
stc
insb
xchg
and
pushf
xchg
cmpsb
je
loope
xor
jb
jmp
jl,pn
xor
jle
and
mov
cmp
and
xor
fisttpll
add
fnstcw
xor
stos
dec
jae
rcl
push
sub
orl
nop
dec
sbb
inc
xor
push
fbld
push
xor
cmp
decl
dec
mov
stos
jbe
test
aad
fs
daa
pop
int3
sub
popa
mov
daa
leave
fs
lret
sbb
xor
add
lret
xchg
inc
dec
dec
cli
ss
iret
dec
idivl
sbb
data16
out
shlb
lds
lds
cmp
push
sbb
scas
inc
lcall
add
mov
cmp
jg
lock
mov
add
push
icebp
pop
sti
push
xchg
popa
repnz
add
dec
or
jnp
repz
xlat
dec
sbb
ljmp
popf
test
orb
bound
inc
adc
dec
fbstp
cmp
cltd
pop
into
in
movsb
mov
clc
push
mov
or
adc
enter
add
push
out
xchg
in
xchg
adc
int3
sbb
or
stc
push
or
adc
out
ret
mov
or
jo
lcall
pop
aad
push
pop
cmp
xchg
xor
and
gs
int
or
das
out
lods
adc
cmp
ljmp
ds
enter
rcl
and
mov
fbld
cld
cmpsl
nop
cltd
fisubl
fidivrl
arpl
dec
in
sbb
sub
fwait
pushf
mov
adc
or
jno
push
pop
and
xchg
mov
loopne
mov
fisubl
inc
dec
push
or
stos
mov
fsts
test
movsb
fidivrs
shlb
pop
mov
jmp
lea
or
adc
dec
jmp
pop
mov
stc
js
cli
ret
mov
shrl
insb
sbb
dec
dec
jge
cltd
xchg
pop
jne
imul
in
pushf
je
xor
negl
push
ret
das
out
loop
mov
mov
ljmp
xlat
and
test
aas
or
jmp
cmp
lods
mov
dec
or
fs
dec
in
stc
mov
loopne
mov
les
inc
adc
adc
shll
add
ret
leave
push
inc
dec
fadds
enter
mov
int
pop
dec
aaa
push
test
cwtl
xchg
mov
cmpsl
xchg
out
dec
jno
enter
push
mov
push
into
mov
and
and
js
in
cmc
in
jl
sub
push
cmp
pop
test
in
add
adc
movsl
neg
fldenv
out
das
js
add
push
outsl
push
add
sbb
xor
cmc
rcll
ret
jo
popa
push
in
jl
in
out
xor
jnp
pushf
scas
roll
test
and
and
iret
add
movsl
push
push
dec
out
in
pusha
add
push
aaa
mov
data16
and
repz
mov
dec
movsl
pop
add
iret
mov
scas
rep
sub
lahf
call
push
outsl
adc
fs
mov
decl
inc
or
mov
xchg
or
sahf
shrl
and
xlat
imul
push
out
pushf
imul
mov
jae
sahf
sbb
jl
repz
mov
fwait
lret
cmovge
aam
jae
insb
mov
dec
xor
cmp
fwait
hlt
sub
push
mov
adc
addr16
inc
fsts
cmp
cld
mov
sbb
lahf
add
mov
fiaddl
or
pusha
or
add
pop
jmp
sbb
les
xor
sub
jge
inc
sub
pop
xlat
nop
add
or
mov
fdivrs
mov
sub
push
xor
enter
aas
sbb
sub
es
jae
sub
movsb
test
xchg
jecxz
pop
mov
push
mov
cmc
outsl
insl
repz
rcrl
cmp
testl
xor
sarl
dec
clc
mov
sub
pop
push
cwtl
inc
mov
cmpsl
or
out
mov
ljmp
shll
and
push
mov
jl
xor
pop
dec
adc
dec
lods
inc
add
sbb
sub
dec
push
bound
enter
mov
fcoml
adc
inc
in
cmpb
imul
sbb
cmp
and
test
mov
aaa
cmp
dec
adcb
inc
mov
pop
out
mov
jno
dec
sbb
hlt
pop
sub
and
movsb
and
inc
scas
pop
shl
push
push
cmp
jns
or
cld
mov
push
lcall
insl
mov
sbb
out
pop
sub
push
xchg
std
jp
arpl
std
jmp
cli
pop
in
ret
movsb
clc
mov
leave
push
and
dec
repnz
mov
ret
xchg
adc
mov
hlt
outsb
mov
mov
inc
mov
sub
jmp
dec
and
je
imul
out
xchg
xchg
push
repnz
fdivrs
mov
je
imul
xchg
fwait
xor
lahf
movsl
and
add
pop
lock
das
cltd
icebp
jle
dec
push
mov
inc
push
lcall
xchg
inc
inc
xchg
roll
pop
adc
mov
mov
arpl
pusha
aas
bound
loopne
cmp
cmp
mov
shlb
into
in
jb,pn
call
ret
sub
sbb
push
cmpsb
lea
cli
icebp
cmp
adc
mov
xor
jns
cmpsb
jnp
cmp
repz
fdiv
cmc
icebp
aaa
arpl
hlt
and
loop
mov
test
xchg
shlb
push
dec
inc
mov
popf
push
jo
xchg
dec
pop
add
lods
andb
mov
rcrl
lods
add
popf
sub
add
adc
push
xlat
xor
mov
lcall
fldcw
and
lods
xchg
xor
push
pop
or
cmp
movsb
cld
mov
sarb
add
cmpl
into
mov
pop
or
cmc
repnz
in
jo
pop
add
add
jge
lahf
out
rcrl
in
insb
imul
sub
push
fimuls
jb
pop
xor
and
dec
inc
movd
mov
cli
push
std
lret
adc
scas
repz
add
out
pushf
push
cli
and
cmpsl
lods
cltd
repz
fdivs
or
subb
rcl
sti
stos
dec
popf
jnp
mov
in
stos
aaa
nop
out
insb
dec
sub
inc
xchg
fsubrl
mov
sub
cwtl
stc
pop
mov
std
pop
xor
test
in
cmc
insl
mov
sbb
xchg
dec
add
or
dec
call
mov
cmp
lea
add
xchg
mov
fsubrl
inc
fcmovu
jle
dec
arpl
cmpsb
fisttps
lods
inc
movsl
push
lret
jno
in
lods
jge
xor
mov
sbb
mov
adc
mov
stos
stos
test
push
jle
xor
fists
inc
frstor
push
xchg
mov
arpl
cmp
and
sub
enter
idivl
test
dec
popf
test
sbb
pop
xor
aam
sbb
in
fs
xchg
pop
inc
pusha
lods
cmp
pop
inc
mov
into
pushf
mov
ja
sbb
in
add
xchg
jmp
pop
adc
fisubrs
jno
mov
ret
push
jb
je
pop
int
dec
jmp
mov
lret
jbe
mov
xlat
mov
lods
adc
nop
add
jmp
xchg
pop
test
lret
aas
scas
or
clc
or
xchg
mov
dec
mov
add
cmc
repz
cld
dec
mov
inc
inc
loope
pop
jo
js
movsb
idivb
push
add
push
aaa
leave
adc
push
fiadds
add
mov
sbb
and
fs
mov
jle
int
loopne
aaa
dec
cs
xor
sbb
mov
adc
cmp
mov
andb
push
xchg
sub
jg
jae
test
push
ret
into
stos
adc
shrb
pop
cmp
xchg
lods
sahf
test
push
xchg
xchg
sub
jl
jle
popf
loopne
sbb
int3
push
adc
jg
or
mov
pop
push
cltd
jp
xchg
insl
sub
sbb
xor
stos
in
mov
les
ljmp
data16
fimuls
xor
repnz
repz
mov
rolb
push
pop
pop
adc
mov
rolb
inc
loope
add
pop
int
je
sub
mov
ret
sbb
adc
shl
stos
scas
sub
fs
fisubrs
sbb
mov
or
mov
inc
test
mov
lds
mov
cmp
lds
lock
add
nop
dec
jnp
mov
pop
push
push
xor
push
cli
and
out
repnz
mov
mov
mov
hlt
ret
mov
jbe
add
or
pop
out
test
cmp
cltd
jl
push
adc
enter
lock
mov
xlat
stos
mov
les
mov
cmp
inc
pop
mov
cmp
iret
enter
xor
mov
add
cs
stos
jno
and
stos
and
iret
test
ss
mov
and
push
sub
inc
je
inc
adc
mov
pop
cmp
daa
cmp
movsl
in
data16
sbb
mov
das
mov
mov
inc
xchg
fsubrl
dec
mov
sub
into
xchg
cmc
ja
jo
lock
addl
mov
and
sbbl
adc
fcoml
jb
das
cmp
adc
cltd
cmpsl
lods
mov
sbb
pop
lock
inc
add
ret
in
jle
sbb
loop
xchg
ficoml
jbe
insb
sahf
jnp
icebp
aas
outsb
rolb
cmp
popa
sub
push
sub
push
int
int
adc
push
mov
mov
cmp
loop
arpl
aad
pop
pop
xchg
out
out
jo
push
xor
arpl
pop
aad
cmp
faddl
insl
data16
dec
movsb
inc
adc
jmp
xchg
xchg
pushf
pop
jecxz
test
loop
imul
jo
or
data16
xchg
lds
shlb
xchg
test
pop
movsb
fadds
mov
mov
cwtl
negb
sahf
pop
arpl
mov
fs
sbb
insb
es
nop
mov
repnz
stc
in
inc
mov
jo
sub
cmpsb
sub
dec
iret
mov
add
cmp
mov
sub
pop
sub
pop
pusha
loopne
cmp
dec
fdivrs
dec
out
push
stc
inc
add
xor
and
xchg
xchg
xchg
xchg
push
idiv
jae
xor
push
addb
in
dec
add
mov
enter
push
mov
pusha
ja
xchg
mov
sbb
mov
sarb
jecxz
shr
dec
jp
aas
dec
or
das
xor
mull
mov
cmpsl
nop
cmpsl
xchg
mov
inc
cmc
xor
xchg
pushl
dec
scas
fistps
pop
out
or
dec
jnp
dec
mov
fidivs
adc
jb
aad
push
mov
lds
ja
test
int3
push
push
inc
je
add
push
rorb
gs
rorl
shl
fidivl
inc
jecxz
cmp
push
ret
mov
sub
and
in
les
push
cmp
and
enter
cmp
outsl
insl
std
jmp
jbe
and
and
and
cs
in
mov
pop
out
test
or
sub
sub
mov
in
popa
push
ss
rorl
lods
push
mov
and
mov
xchg
add
sbb
ss
out
add
fdivl
or
add
push
loope
aaa
mov
popa
push
push
xchg
aam
push
cmc
mov
mov
out
test
or
movsb
and
stc
ret
aas
pop
dec
inc
or
dec
gs
add
das
mov
cmp
or
cmp
and
jl
sub
jge
add
stc
push
in
stc
test
shlb
pop
mov
jne
out
cwtl
faddl
dec
dec
push
insl
pop
data16
fs
icebp
mov
repz
ja
loope
inc
je
pop
mov
fcom
std
and
sub
sbb
sub
arpl
pop
or
add
adc
loop
fwait
mov
test
inc
mov
pushf
adc
in
mov
scas
push
out
xor
mov
xor
xchg
adc
out
loope
pop
or
jge
imul
add
xchg
dec
fildll
or
insl
movl
insl
sbbl
leave
fiadds
mov
jle
mov
inc
sub
jne
sti
cmp
lds
jne
add
cmp
inc
mov
cmc
xor
out
pop
test
or
or
xchg
mov
in
push
xchg
and
jmp
jl
adc
mov
sub
test
scas
push
pop
xor
sahf
cs
lods
xlat
lods
rorb
mov
mov
les
mov
jb
out
arpl
lds
jg
lret
dec
inc
pop
icebp
dec
sbb
or
rcrl
cmp
rclb
pop
ljmp
xchg
sbbl
sbb
repz
pop
pop
aad
mov
dec
data16
pop
cmp
clc
clc
mov
call
xchg
mov
jmp
andl
je
push
fmul
dec
add
sbb
and
jno
movsl
pop
mov
ljmp
adc
icebp
xlat
mov
aaa
or
xchg
ds
push
push
adc
mov
push
mov
daa
fildl
int3
lds
arpl
dec
mov
sbb
test
iret
pmaxsw
gs
dec
xchg
loopne
repz
push
jno
xor
mov
push
xor
pop
push
jbe
das
mov
mov
ret
mov
imul
sbb
aas
subb
test
dec
scas
jecxz,pn
pop
ret
fmuls
cmp
dec
movsl
mov
test
ret
fldt
mov
jl
in
jbe
cmp
push
xchg
xchg
xor
or
fs
decl
push
es
xchg
cli
mov
xor
outsb
xchg
jecxz
incb
adc
cmp
rorl
mov
add
adcb
xor
cli
inc
inc
sbb
cmp
popf
je
mov
push
loope
and
scas
repz
lea
in
push
in
inc
mov
push
push
sub
into
jno
and
loopne
testl
pusha
or
daa
leave
outsl
or
out
popf
ds
ljmp
pusha
sahf
imul
and
pop
or
and
jge
or
mov
pop
shl
in
int
ret
fistpl
pop
outsl
jbe
cmp
xchg
or
xchg
jns
inc
icebp
push
push
jno
ds
sub
xchg
mov
stos
aaa
or
push
lods
inc
dec
cmc
jmp
or
or
cli
sub
fs
mov
ss
cmpsb
dec
xchg
jb
push
arpl
fs
add
cmp
dec
adc
std
or
popa
adc
sbb
sbb
gs
adc
outsb
js
test
out
xlat
out
test
adc
pushf
loop
mov
pop
sub
pop
mov
inc
addr16
lods
xchg
pop
mov
mov
xorb
pop
lds
pusha
fs
jecxz
add
adc
pushf
aaa
push
leave
rorl
test
repnz
inc
jmp
jne
jl
int
icebp
inc
pop
lock
stos
jns
cmp
pop
or
rcl
inc
or
inc
test
mov
loope
shr
fistl
sub
mov
sahf
mov
loopne
jmp
mov
out
sarl
or
pop
aam
enter
mov
sbb
scas
mov
sub
imul
rcrb
enter
shll
and
mov
les
mov
ja
sub
pusha
sub
pushf
jg
aad
rcll
or
push
leave
ljmp
flds
out
movsl
test
inc
xchg
dec
dec
pop
and
loop
out
pop
test
jno
jmp
shll
pop
pop
jge
xor
mov
push
inc
sbb
js
cmpsb
and
loop
es
in
inc
pop
scas
jge
mov
pop
les
jl
stos
or
test
pop
sbb
fwait
pop
or
insb
int3
movsl
push
cmp
int
dec
adc
xchg
push
jg
fwait
in
sub
mov
dec
fdivrs
imul
loop
fidivs
or
and
dec
cmp
adc
mov
jne
scas
and
fcomps
xchg
dec
dec
xchg
test
mov
mov
out
aaa
mov
nop
jg
sub
les
divb
roll
jge
jno
xor
xchg
mov
fisubl
aad
pop
test
mov
cld
push
popa
pop
out
dec
and
adcl
loope
mov
push
jno
xchg
or
and
fisttpll
mov
sub
jge
xor
enter
std
xlat
les
xchg
sbb
add
push
andb
pop
call
fcoml
dec
enter
dec
sub
lods
lret
xor
cmpsb
or
mov
das
jle
cmp
push
sub
outsl
sti
repnz
imul
xor
cmc
test
mov
inc
xchg
cltd
je
mov
and
mov
div
cmp
in
sysenter
out
dec
lods
jmp
lcall
xchg
push
cld
xchg
jmp
outsb
mov
add
sub
call
inc
filds
bswap
and
scas
in
jp
movsb
test
test
add
lret
or
arpl
or
adc
lods
pop
fildl
cmc
dec
sbb
xchg
jg
pop
aaa
mov
jae
sub
mov
mov
inc
pop
ljmp
inc
mov
divl
mov
gs
test
mov
das
mov
cld
jb
add
sub
and
add
je
add
mov
fcoml
mov
sbb
add
std
or
or
xchg
cmp
or
add
rcrb
xchg
jo
dec
enter
aam
insl
and
cwtl
das
jle
and
adc
xor
into
jge
fwait
enter
pusha
std
jl
imul
sub
sbb
fwait
rorb
jnp
pop
testb
pop
repz
mov
enter
mov
insl
jbe
rorb
inc
add
sar
sahf
lods
lret
jg
in
aam
aam
subb
and
andl
fmuls
jge
addr16
ljmp
push
jnp
jl
imull
test
cmp
jae
mov
dec
aas
shrb
push
mov
icebp
jmp
pop
out
clc
out
adc
sbb
arpl
jl
jg
pop
jb
inc
cwtl
lods
cmp
add
and
pop
daa
in
sarl
mov
pop
inc
pop
sub
int
test
push
pop
or
cltd
or
das
inc
in
pop
lcall
jne
ja
notl
in
and
dec
or
into
std
adc
dec
sbb
inc
xchg
xor
pop
arpl
lcall
sar
loope
imul
ret
out
xor
xchg
lret
pop
mov
xor
jge
fcoms
inc
jno
fwait
inc
fwait
push
mov
inc
ljmp
icebp
inc
je
and
adc
inc
cmpl
mov
xor
imul
leave
repnz
dec
mov
std
js
outsl
inc
add
sti
add
and
cltd
jns
sbb
add
cli
mov
adc
cltd
sbb
xchg
jno
aaa
mov
push
ret
mov
aaa
and
jmp
dec
dec
mov
sbb
nop
out
addr16
xchg
js
cld
hlt
push
ret
lret
mov
mov
pop
call
popf
rcrb
cld
cmp
mov
cmp
sbb
outsl
leave
mov
jo
test
test
push
mov
mov
bswap
sbb
sbb
hlt
mov
pop
pop
mov
inc
inc
scas
jns
icebp
push
sbb
nop
lea
in
fnstcw
loope
push
sub
adc
lods
ret
inc
cmp
or
push
es
outsl
enter
pop
mov
into
sbb
adc
mov
mov
movb
mov
or
mov
in
dec
push
xor
cmc
mov
lret
inc
ja
rcrb
xor
mov
pop
bound
pushf
int3
daa
pop
test
inc
fidivl
mov
mov
loopne
jg
lock
adc
rcrl
fs
push
xchg
test
les
cmc
mov
add
mov
movsb
outsb
insb
pop
mov
outsl
push
lret
mov
and
scas
sbb
dec
pop
movsb
bound
out
int3
cmp
test
adc
int3
ret
inc
loop
stos
mov
mov
mov
jbe
and
stos
fs
push
test
sub
cmp
mov
test
cmp
push
inc
jbe
int3
xor
xchg
jmp
cltd
sub
push
bound
outsl
mov
sub
pop
test
and
cmpsl
dec
jb
sub
sbbb
mov
xchg
xor
xorl
jae
mov
lods
cmp
pop
fstpt
scas
lcall
jae
lock
jmp
push
cs
jecxz
insl
les
mov
loopne
mov
clc
shll
mov
loope
jae
int3
popa
fistpl
sub
dec
add
mov
xchg
icebp
xor
inc
inc
add
imul
shlb
mov
arpl
inc
add
push
push
aaa
daa
mov
and
test
and
mov
push
mov
pop
push
sbbl
dec
xchg
in
dec
lcall
insb
les
movsl
aas
cs
xor
cli
xchg
push
push
sti
mov
mov
pushf
dec
push
xchg
mov
repz
iret
mov
gs
daa
lods
aaa
sar
push
gs
jbe
mov
jl
jae
stc
xchg
stos
popf
shll
ds
mov
mov
mov
cld
sbb
int3
aad
add
jae
stos
rclb
mov
popf
mov
and
sti
ljmp
push
ret
xchg
loop
js
movsb
sbb
mov
pop
iret
ret
add
pop
pop
mov
decl
pop
jne
in
jne
cmpsb
mov
loop
jg
push
je
mov
lcall
loope
ret
out
faddl
sbb
hlt
dec
lret
jmp
gs
xchg
push
ret
sarb
ss
and
dec
pushf
adc
movsb
lret
pop
xlat
clc
data16
ds
push
idivl
jno
insl
in
adc
jae
std
mov
sub
cmpsb
enter
fiaddl
xchg
testb
cmc
lods
lcall
pop
enter
sbb
mov
jnp
and
dec
adc
in
inc
xchg
hlt
cwtl
hlt
jmp
jns
movb
and
movsl
inc
xchg
mov
dec
push
cmp
fiaddl
mov
pop
jae
xchg
cmp
fsubrs
in
and
pop
lods
aam
adcb
xchg
arpl
xchg
lods
enter
aad
sub
mov
and
and
xlat
adcb
push
pop
sub
sub
jge
add
sub
mov
in
cmpsl
mov
jno
cmpsl
pusha
sbb
ret
lcall
ljmp
add
lret
shlb
je
lods
scas
inc
jne
cmp
jmp
test
imul
out
push
ficoms
xor
insb
sub
sub
and
mov
shll
lret
sahf
imul
inc
mov
jnp
cld
loope
push
push
push
dec
ret
fnstenv
and
por
popa
bound
aad
andb
lret
xchg
mov
lods
arpl
sarb
mov
test
cmpsl
ficomps
aas
scas
mov
popf
mov
popa
insl
ljmp
mov
jl
jo
xchg
movsb
call
mov
mov
ror
loop
scas
xor
inc
xchg
and
into
sahf
xchg
push
push
and
jle
frstor
cmp
int
xor
test
test
imul
loop
mov
and
mov
mov
in
push
adc
inc
leave
call
xor
aad
and
jbe
sti
test
into
pop
push
pop
or
je
stos
mov
sbb
fs
and
das
pusha
inc
sbb
je
jecxz
jp
and
sahf
pop
roll
aaa
mov
aaa
or
out
and
mov
add
xor
sbb
push
mov
xchg
mov
push
adc
pushf
ljmp
arpl
int
inc
or
jecxz
lods
outsl
loopne
mov
lods
andb
mov
push
push
xor
xchg
shll
jecxz
sub
or
andb
sbb
jmp
ret
dec
jae
push
mov
testl
clc
jae,pt
and
mov
cs
cmp
push
hlt
push
imul
and
pop
out
rcrl
mov
xchg
push
js,pn
insb
pop
pusha
dec
push
push
ret
ja
rcll
mov
inc
call
jmp
sub
cmp
pop
rcrb
adc
xchg
cmp
adc
lock
imul
xor
mov
mov
mov
gs
cmp
xchg
cmp
pop
cmpsl
xor
mov
adc
sbb
cld
mov
mov
pop
cmc
jle
cmp
mov
add
pop
pop
push
dec
int3
insl
push
inc
dec
dec
fstpt
mov
jbe
incb
fcmovbe
imul
add
lock
andb
add
dec
dec
push
jno
adc
sub
mov
js
enter
in
xor
test
jp
sbb
leave
shrl
fimuls
pop
data16
std
push
jle
sub
addr16
arpl
andl
pop
dec
mov
stc
inc
ds
ret
pop
xor
sub
sub
push
hlt
stos
ret
dec
sbb
cmpsb
loop
dec
enter
stc
pushf
jbe
mov
lods
in
sahf
cmp
and
cli
testb
in
notb
sub
mov
sbb
adc
sbb
orb
daa
inc
push
push
loope
and
cltd
cmp
into
add
mov
in
push
xor
pop
mov
popa
and
test
popf
aam
ljmp
xchg
fptan
xchg
jbe
aam
es
or
loopne
enter
inc
movsb
stc
pop
outsb
dec
imulb
dec
jb
movsb
or
cs
ss
pop
lock
push
and
ljmp
loop
notl
shll
mov
jp
sbb
mov
push
cmp
add
cld
xchg
fstpt
sub
mov
test
int
sbb
out
xchg
dec
cmp
or
xchg
adc
xchg
or
jle
mov
dec
pop
inc
mov
cmp
in
ds
mov
movl
push
or
adc
cmc
rcrl
out
mov
and
movsl
xchg
sub
rorb
rcrb
lock
mov
xor
inc
ret
cmpsl
mov
scas
pop
bound
sbb
xchg
icebp
xchg
pop
mov
jns
push
les
outsb
mov
lds
inc
out
xchg
enter
dec
cmpb
loopne
add
stc
jg
adc
or
push
stos
std
lock
scas
pop
xchg
hlt
lahf
les
jae
push
iret
jmp
gs
int3
psrlw
cwtl
out
hlt
sub
ss
lret
xlat
pop
jl
imul
shlb
mov
and
in
fists
push
cmp
idivl
xlat
lock
int3
xchg
dec
mov
out
ds
movsl
idivl
pop
es
sub
test
adc
mov
push
ss
mov
mov
nop
and
inc
sub
les
mov
gs
cmpsb
in
cmc
mov
cltd
outsb
movl
cs
mov
fnstenv
dec
or
jl
cmp
pop
pop
xlat
dec
dec
add
add
cmp
fdiv
daa
loopne
and
jmp
daa
jo
and
repz
or
sbb
jne
and
shlb
add
inc
imul
mov
call
stc
lods
inc
out
cmpsb
xchg
cmp
xchg
push
and
loope
mov
pop
push
mov
nop
rcll
fmull
out
jge
shlb
in
jle
in
jge
jo
ljmp
fwait
push
adc
push
sbb
fcomps
push
js
xor
data16
imul
jbe
popf
pop
mov
repnz
xchg
cmpsb
aaa
push
pop
xchg
add
movl
rclb
sbbb
inc
dec
repz
or
mov
sbb
jo
cmpb
sbb
push
sbb
ss
lock
inc
push
out
arpl
test
rorl
push
leave
push
iret
jle
sbb
out
pop
cmp
sub
push
lods
enter
shrl
sbb
push
dec
test
les
mov
subl
fdivrl
inc
jmp
enter
push
xchg
push
dec
add
mov
xor
push
add
icebp
xchg
mov
insl
fsts
xchg
pop
xchg
and
in
cmp
dec
and
orb
out
cld
roll
xor
shrl
jecxz
into
pop
dec
pop
mov
xchg
clc
xlat
adc
das
push
mov
lahf
cmc
jle
lcall
or
dec
sub
lods
adc
movsb
sti
pop
lds
pop
cld
ljmpw
add
or
stc
mov
jecxz
test
imul
loope
jl
dec
lret
add
xchg
push
sar
cmc
es
mov
in
cmc
pop
dec
jae
sub
js
das
mov
pop
or
out
outsl
in
adc
je
xor
stc
lret
push
jle
jle
xor
mov
push
aam
cmpb
stos
mov
repz
lcall
sub
sub
test
dec
stc
jp
rorl
push
mov
sbb
xchg
dec
push
mov
stos
adcb
xor
sti
jnp
mov
imul
cli
aam
mov
outsl
cmp
or
mov
test
ss
leave
push
ret
push
inc
inc
xor
xchg
cmp
stc
cld
push
jmp
cld
test
sbb
cmp
xor
in
pop
lock
scas
fisttps
push
out
sti
inc
inc
and
mov
subl
xchg
popf
test
das
mov
cmp
ljmp
bound
and
adc
inc
or
arpl
fsubrs
sub
rorl
pushf
push
popa
loopne
lock
or
mov
and
cmp
pop
outsl
loopne
lods
mov
cmpsl
pop
push
jb
pop
jae
cmp
cmpb
mov
jo
sub
fwait
dec
enter
test
jge
cmp
dec
dec
movl
adc
xchg
cmp
sbb
fs
add
das
sub
cmp
inc
sub
bound
mov
mov
fcmovne
mov
arpl
push
jo
and
push
scas
xchg
cmp
mov
lock
fildl
or
sbb
rorl
clc
dec
jb
pushf
or
mov
inc
dec
inc
cld
inc
pop
lea
and
cmpb
ljmp
loope
mov
pop
push
inc
jno
test
mov
sub
xor
fistl
outsb
jno
cmp
jge
les
push
aaa
sub
je
rcrb
lods
insb
out
outsl
dec
sub
fs
int
mov
and
loopne
sub
scas
rol
loopne
into
push
stos
cmp
out
xchg
jecxz
adc
test
sbb
inc
lcall
add
cld
push
cmp
and
xor
daa
push
outsb
inc
adc
addr16
enter
xchg
in
inc
sbb
pop
adc
bsf
in
cmp
jge
add
push
dec
fidivl
lret
mov
mov
cmp
mov
and
push
mov
enter
decb
cmpsb
xor
lcall
std
sbb
xor
mov
xchg
test
loop
movb
mov
mov
enter
mov
stc
sbb
add
repz
push
fmul
xor
fs
and
jae
sbb
inc
mov
sbb
push
push
test
add
clc
cmp
setp
js
out
pop
divb
jno
ss
das
sbb
outsl
mov
push
outsl
daa
data16
push
xchg
ret
stos
inc
in
xor
es
cmp
adc
scas
sbb
or
cmp
arpl
mov
jo
fwait
inc
subl
leave
imul
mulb
mov
data16
vprotb
and
and
sbb
inc
rolb
inc
lds
scas
bound
ficoml
jno
mov
fs
fdivrp
movsl
dec
inc
and
inc
and
hlt
xor
xor
mov
movsb
call
xchg
inc
or
xchg
jns
incb
sbbb
push
cwtl
inc
add
jno
and
fs
lock
mov
aas
jp
cmpsb
les
rcrb
iret
sbb
enter
lcall
lret
xor
pop
cs
addl
repnz
pop
mov
sub
nop
adc
mov
xchg
dec
sbb
xchg
cltd
pop
loope
add
cmp
fs
fs
pop
rorb
pop
xor
mov
enter
js,pt
xor
or
jb
sbb
lret
leave
add
xor
gs
sub
xor
aas
gs
loopne
int3
int
repz
lods
jbe
lret
into
out
jmp
addb
mov
out
mov
mov
or
in
mov
pop
adc
hlt
jg
sahf
movsb
mov
and
lret
shrb
add
inc
jae
das
adc
mov
test
inc
testb
jp
dec
fisttpll
pop
jecxz
rorl
mov
clc
xchg
and
mov
das
fcmove
mov
test
testl
push
pop
mov
or
cmp
and
in
and
hlt
lea
jecxz
js
adc
sub
into
inc
xor
or
sub
and
fimull
pusha
pushf
mov
pop
fcmovb
aad
div
and
movsl
test
sub
push
sbb
ja
lea
pop
add
fisubrl
mov
ljmp
leave
sbb
xchg
adc
aad
outsb
repnz
inc
sub
imul
out
aaa
jnp
or
aaa
push
xlat
cmc
ja
jns
int3
cmp
or
bound
cmp
rcll
jno
cwtl
add
pop
mov
mov
cmpsb
int3
mov
jo
popa
gs
sar
xor
or
pop
cmc
and
xor
pop
sbb
xchg
bound
inc
jns
filds
or
xchg
and
push
xchg
push
movsl
dec
icebp
pop
xor
idivb
addr16
es
pop
adc
sarb
je
xchg
mov
mov
sti
mov
int3
inc
aam
jg
jg
insb
pause
movsl
lcall
add
lds
push
sbb
mov
imul
xlat
jp
mov
rorb
fisubrl
mov
ljmp
rcl
das
fdivrs
inc
fisubl
dec
mov
std
movsb
fnstcw
hlt
andb
movsb
test
out
push
fmul
sub
test
mov
nop
pop
outsb
pusha
push
shrb
lea
cmp
dec
fs
mov
inc
es
mov
or
inc
push
inc
imul
sub
xor
xor
or
mov
lods
movsb
xlat
dec
sub
add
pushw
push
or
dec
sub
aaa
movsl
cwtl
inc
test
bt
sbb
insb
jno
mov
cltd
inc
les
scas
outsb
mov
dec
sub
inc
andl
aad
jle
les
xor
mov
xor
mov
mov
cmp
mov
outsl
mov
ret
pop
pushaw
mov
data16
or
sub
xor
push
in
xor
int3
dec
push
fldcw
pusha
push
insl
je
sbb
mov
psubusw
sbb
push
or
mov
inc
push
cmpsb
lcall
pusha
mov
pop
stos
or
add
mov
stos
stos
cmp
jp
mov
sub
adc
popa
mov
int3
loope
js
mov
lea
outsb
cwtl
cmpl
push
aad
jne
sti
mov
lods
mov
bound
adc
push
in
fiaddl
cmp
mov
lret
rol
lcall
sub
aaa
push
adc
mov
push
insb
ret
lret
inc
enter
inc
push
pop
or
mov
in
push
mov
rcll
mov
pop
xchg
cwtl
push
xchg
pop
cwtl
movsb
out
inc
push
cmp
mov
sbb
sbb
fwait
stc
mov
xor
sub
repz
jle
daa
mov
stos
sub
aam
jl
mov
pop
or
rclb
inc
test
dec
sbbb
dec
dec
fists
out
jg
insl
inc
jne
aad
jmp
aam
pushf
push
pop
and
jnp
sub
lock
pop
leave
jle
cmc
cwtl
sbb
mov
mov
ljmp
mov
and
inc
frstor
shrl
addr16
push
cmp
sub
xchg
sub
ds
push
mov
call
addr16
adc
test
int
cmpl
or
add
scas
xor
jle
fcomp
dec
les
jp
mov
dec
mov
pop
mov
outsl
rcl
push
sbb
cmpsl
pop
xchg
pop
stos
xor
insb
inc
sub
mov
aaa
jl
pop
fdivrs
and
lds
pop
xor
lods
mov
cs
stc
pop
fimull
cmp
in
sbb
or
int
xchg
out
repnz
adc
lret
jecxz
mov
aaa
cmpsl
aam
es
insb
or
sti
test
cmp
roll
fists
push
enter
fs
jmp
aad
pop
jmp
lret
rol
mov
ss
mov
jo
loopne
loope
fldenv
push
out
mov
inc
into
and
fldcw
outsb
call
inc
lds
fisttpll
and
aaa
aas
test
imul
cmp
sti
loope
loop
sub
jle
loope
mov
sbb
sbb
sub
popf
idivb
inc
aaa
adc
popf
pcmpeqw
in
lcall
movsb
jmp
xor
aas
test
pop
add
lahf
add
ss
adc
mov
jl
inc
lods
xchg
insb
into
and
cli
test
xchg
sti
jno
add
xor
push
pop
lods
stos
js
icebp
int3
cmpl
insl
sahf
jle
jg
add
xacquire
sbb
sub
iret
push
sub
lret
push
movsl
out
aam
sahf
xchg
arpl
push
movsl
notl
adc
adc
dec
push
adc
fdivr
inc
gs
push
dec
out
inc
movsb
cli
sub
enter
jb
jbe
cmpsb
aad
jg
outsl
add
xchg
mov
dec
xchg
mov
js
adc
jp
leave
stos
adc
dec
loope
lret
fdivrs
sbb
loop
cmp
imul
test
sbb
movsb
mov
push
out
daa
push
cmp
add
iret
sahf
mov
popa
ljmp
ljmp
push
inc
lahf
loopne
adc
loopne
stos
fwait
je
inc
das
jmp
mov
sbb
fucomip
mov
cld
mov
inc
shll
xchg
fs
scas
add
pop
jbe
cld
clc
dec
sub
cli
pop
cwtl
lret
mov
les
outsl
pop
push
leave
lea
pushf
sbb
jns
mov
arpl
in
fimull
cmp
icebp
vprotb
mov
cmpsl
enter
mov
dec
cmc
pop
and
or
icebp
ja
cmp
and
push
cmp
setb
adc
pop
jle
mov
sub
xor
or
ljmp
jns
das
vpshlb
jl
mov
cmpsl
jno
scas
shrb
inc
adc
jno
xor
lods
pop
mov
jo
sahf
mov
or
loopne
shll
iret
xchg
cmp
pop
cltd
dec
dec
das
arpl
xor
sub
pop
mov
inc
pop
push
inc
mov
dec
xchg
mov
pop
pop
fnstsw
dec
ror
or
xchg
and
shll
push
outsb
xchg
ret
add
scas
les
cmp
sub
adc
push
ret
in
outsl
inc
sub
pop
out
xlat
insb
jb
call
das
les
and
mov
mov
mov
popa
mov
cs
imul
xor
sbbb
cwtl
out
mov
jo
out
fcom
cmc
fsubs
inc
out
cld
sahf
cmpsl
fmull
popl
push
pop
popa
icebp
jb
icebp
cmp
fbld
lahf
cmp
xor
jmp
repz
or
and
in
and
dec
mov
sub
ficoms
imulb
and
lock
cld
mov
ljmp
add
dec
pop
inc
fildl
mov
data16
sbb
cmpsl
push
push
mov
xlat
pop
mov
xor
out
das
scas
mov
mov
xchg
xchg
xor
pop
push
sub
stos
mov
popf
add
sub
push
add
push
jle,pn
into
xchg
sub
dec
push
sbb
add
imul
sub
fwait
adc
mov
sub
test
sti
jno
mov
pop
inc
jmp
in
daa
jmp
fidivs
decl
inc
inc
push
sbb
push
fdivrs
jl
adc
hlt
jg
and
psrlq
and
es
sbb
dec
mov
xor
inc
fs
jmp
push
fwait
mov
frstor
or
stc
inc
std
pop
into
daa
dec
iret
ret
int
scas
pop
ret
clc
sbb
cmp
lret
cmp
push
dec
add
mov
ds
jmp
mov
inc
fdiv
psraw
jg
int
sub
adc
pop
fdivr
or
cmp
jno
mov
dec
lret
and
popf
dec
dec
test
or
cmpsl
adc
jbe
pop
jmp
adc
jg
push
outsb
mov
dec
sahf
clc
jmp
jnp
stos
or
dec
and
add
lock
in
sub
pop
gs
mov
mov
shlb
mov
stos
and
in
insl
inc
push
ja
dec
pushf
xchg
xchg
mov
dec
adc
aaa
mov
mov
addl
out
mov
adc
push
movsl
aad
jge
push
imul
popf
jp
dec
and
std
es
rcrl
sti
lea
mov
addr16
imul
addr16
loop
pop
or
xchg
pop
mov
cmpsl
xchg
mov
xor
js
jno
add
add
sbb
sub
stc
pushf
xchg
ja
mov
sub
sub
aam
pop
push
inc
pop
xchg
in
mov
inc
add
dec
notb
adc
dec
lcall
sarl
push
mov
std
sahf
lahf
gs
pop
addr16
aaa
jmp
call
sahf
inc
inc
mov
test
leave
pop
xchg
mov
es
mov
mov
int
js
adcb
dec
test
dec
mov
arpl
pop
xchg
shrb
adc
cmp
inc
insl
sbb
jne
jns
sub
dec
mov
add
mov
jmp
mov
in
test
daa
pop
lret
es
outsl
imul
mov
cmp
into
loope
mov
fdivr
push
mov
roll
sub
adc
insb
inc
cmpsb
dec
out
push
adc
sub
out
mov
rorb
stos
jns
push
push
orb
sub
repnz
pop
xchg
outsb
push
popf
std
hlt
mul
add
add
inc
cmp
enter
add
adc
mov
push
jecxz
cld
jp
imul
jmp
in
push
cmp
sbb
mov
sbb
pop
arpl
jns
cmp
divps
aam
rcll
daa
sub
inc
cmp
stos
jecxz
cmp
or
xchg
je
pop
sub
rolb
dec
test
ret
adc
inc
gs
lcall
les
mov
cs
xchg
push
pop
xorl
pusha
inc
movsb
lods
test
iret
mov
push
cld
inc
jne
mov
out
adc
push
mov
add
xor
jecxz
cmp
jbe
cli
or
lock
adc
cld
mov
and
mov
lods
mov
mov
jmp
shrl
sub
fsubl
int
mov
outsl
cld
jne
in
stc
push
cli
loopne
xor
ljmp
push
enter
rorl
dec
orb
lret
mov
loope
js
or
adc
xchg
hlt
je
jae
inc
and
addb
mov
sahf
add
icebp
and
pop
andb
inc
mov
jl
cmpb
aaa
outsb
test
xor
icebp
lods
jecxz
push
movsl
xchg
fisubs
scas
and
imul
mov
and
or
adc
out
negb
cwtl
inc
and
dec
push
and
mov
in
inc
aas
jbe
or
std
mov
ja
es
lcall
shll
jl
mov
xor
dec
mov
adc
sbb
je
sbb
jp
out
and
loop
xchg
into
sbb
inc
jns
inc
mov
es
jg
lods
addr16
jo
mov
mov
insl
mov
sti
stos
add
imul
sub
icebp
adcb
daa
test
jge
in
and
mov
sbb
cmpb
cmp
cwtl
and
xchg
or
push
or
sub
dec
nop
cmp
mov
test
or
mov
ror
xchg
pop
mov
mov
cmp
daa
les
xchg
or
xchg
adc
mov
xchg
data16
mov
popf
sub
outsl
dec
lock
sbb
sbb
push
rcll
cmpl
push
ljmp
pop
xorl
addr16
insl
adc
int
pop
inc
test
and
rclb
push
mov
subb
lds
pop
movsl
movsb
xchg
dec
fists
lahf
dec
out
cmp
mov
outsl
lds
xchg
sbb
aam
rcl
outsl
inc
aad
mov
popf
stc
push
hlt
mov
imul
out
rcrl
xchg
stos
popf
lock
inc
fisubrl
fmul
xor
mov
aad
lea
sbb
ja
scas
jb
sbb
loope
js
adcb
lods
mov
xorb
sbb
aam
imul
pop
cmp
cmpsb
push
int
and
fstpl
jp
sbbb
in
pop
subb
into
jge
dec
sub
dec
lock
lock
iret
sti
inc
test
push
movsb
aas
mov
pop
mov
cmp
aad
jb
sar
loopne
mov
inc
push
and
jne
lcall
rcrl
dec
add
xor
lods
sub
adc
adc
adc
xchg
scas
test
movb
jl
jno
or
sbb
cmpsl
push
popa
sbb
mov
dec
mov
jge
cwtl
pop
ret
arpl
aaa
sbb
pop
cld
pop
xchg
jnp
and
scas
mov
mov
add
in
inc
or
jnp
push
cmp
sbb
in
lods
sub
sub
pop
cmp
sbb
inc
fucomp
inc
cltd
sub
daa
mov
lea
mov
hlt
sub
mov
scas
dec
push
jmp
shl
add
int3
xor
pop
sahf
jge
shll
fcomi
mov
das
jo
lock
mov
and
scas
lock
push
cs
mov
dec
sbb
adc
neg
outsb
sarb
lds
mov
cmpsl
jg
sahf
cmpsl
rorb
pop
push
sti
sub
or
push
repz
enter
pushf
call
pop
es
aam
js
pop
sub
dec
adc
push
pop
movsb
test
xchg
pop
popf
les
fstl
outsb
dec
mov
pop
cmp
cmp
test
mov
pop
pop
pop
cli
jb
or
dec
sbb
mov
aam
mov
sbb
or
mov
or
xchg
ficomps
out
pushf
popf
cmp
pushf
cmpsb
cmp
sti
test
clc
push
sbb
jns
aas
and
xchg
xchg
lcall
dec
sub
pop
lods
lcall
sbb
adc
sbb
imul
in
movsl
xchg
lcall
stos
insl
bound
jg
ja
jmp
pop
out
loop
inc
icebp
sub
push
outsb
dec
rcrl
jbe
stc
xor
mov
mov
sbb
adc
jnp
mov
in
lods
data16
or
cmp
sbb
lock
mov
js
sub
pop
pop
push
mov
daa
out
pushf
jg
or
gs
mov
push
fisttpl
cld
incb
out
out
out
jge
and
or
mov
pusha
stc
cmpsb
inc
push
rcr
push
sub
ret
arpl
and
stc
mov
pop
and
call
cmp
rcll
enter
inc
or
ljmp
rorl
test
adc
jmp
pop
mov
pop
adcl
mov
xchg
je
loopne
inc
pop
ja
fimull
imul
mov
sub
sbbb
sbb
call
jnp
out
retw
cwtl
arpl
xchg
leave
sbb
fs
cwtl
adc
cld
pushf
scas
cwtl
push
jecxz
push
ds
push
cmpsb
data16
rclb
mov
lock
ret
out
ficompl
push
popf
cmp
jae
mov
imul
add
push
push
and
dec
fisubrs
xchg
push
xlat
lret
mov
pusha
jg
pushf
mov
pop
cmp
xchg
popa
outsl
pusha
pop
pop
fisubrl
jle
repnz
loop
add
cltd
imul
inc
repnz
outsb
xchg
das
jns,pn
outsb
das
and
insb
into
jle
enter
mov
test
imul
mov
loop
sbb
and
sub
lds
stc
and
sbb
test
dec
call
cmp
mov
pop
adc
or
int3
push
adc
mov
add
jecxz
sub
in
movsb
sub
cmp
push
mov
rcr
mov
pushf
add
pop
test
xchg
xor
push
mov
and
mov
cli
lock
and
out
and
lret
imul
add
pop
lea
insb
adc
mov
es
xchg
sub
add
negb
fistl
movsl
cmpsl
cmpb
jo
sbb
mov
add
inc
xor
push
out
cmp
into
pop
imul
jecxz
sbb
add
inc
outsb
pop
je
inc
scas
mov
out
stos
xor
fwait
lahf
or
int
jae
push
adc
stos
mov
les
in
pop
sub
mov
daa
stos
jp
sub
ret
inc
lds
mov
and
loopne
out
xchg
fcmovbe
or
int
mov
sub
in
inc
mov
mov
dec
iret
mov
inc
test
stos
push
xor
add
xchg
jge
push
inc
les
push
push
mov
mov
imul
jg
mov
dec
jg
test
dec
mov
call
and
inc
dec
add
sarl
outsl
mov
addl
lods
push
cmpsl
sub
xor
add
inc
sub
sub
mov
in
mov
and
pop
lcall
ja
movb
xchg
je
cmp
fisttpl
pop
adcl
pop
add
fld
frstor
xor
push
in
shr
test
loop
mov
sub
jmp
mov
or
stc
xchg
shrb
cmp
push
cmpsb
in
mov
push
mov
and
jne
pop
xor
lea
push
adc
jp
or
outsb
push
cmp
in
adc
push
das
sbb
fisttpl
shr
push
rorl
aas
out
setnp
adc
push
je
jmp
imull
pop
call
mov
lods
je
movb
in
adc
and
push
and
and
pop
mov
push
mov
inc
jmp
fsts
lods
jb
stos
out
cmpb
sti
xchg
dec
xchg
push
mov
jb
fs
cld
mov
and
or
fwait
lret
xor
inc
dec
xor
lds
aaa
inc
hlt
gs
fistpll
loope
mov
sahf
jmp
lret
pop
push
xor
pusha
dec
nop
scas
push
rorb
fs
lret
or
clc
push
out
inc
shr
mov
repz
sahf
jge
sub
mov
lods
mov
aaa
ror
pop
lea
jno
out
or
into
movsl
lods
pop
or
mov
xor
or
pop
sbb
dec
pushf
repz
sbb
fnstsw
xchg
adc
repnz
inc
int
stos
mov
sarl
aaa
mov
fisttps
push
sub
popf
dec
cmp
cmp
xor
scas
loope
push
leave
hlt
cs
and
cwtl
mov
addr16
shll
stc
addr16
mov
add
mov
sbb
jl
out
dec
push
sub
push
scas
add
scas
mov
movsl
jb
push
xchg
xchg
orb
cld
lret
cmp
cmp
mov
push
jmp
imul
mov
or
rol
out
xor
sbb
sbb
mov
insb
mov
decl
std
lods
lds
es
cli
mov
fdivl
pop
pop
mov
pop
add
xor
sub
jmp
ja
repnz
inc
daa
sbb
xchg
rolb
mov
outsb
xchg
cmp
add
push
in
lcall
push
or
ja
jns
out
push
dec
rclb
lahf
xchg
cltd
adc
test
repz
dec
ror
fldenv
mov
and
sbb
pop
inc
fisttpl
nop
or
xor
sti
pop
shlb
aaa
int3
and
outsb
pop
pop
mov
add
test
sub
inc
jmp
push
jmp
in
push
and
and
js
jg
movsb
das
xchg
lahf
push
fmull
scas
and
mov
lods
fdivrs
push
and
mov
sbb
popa
loope
xchg
cwtl
mov
pop
xchg
popf
imul
cmp
jns
mov
daa
sbb
mov
scas
es
sbb
loopne
xchg
sub
mov
mov
pop
jg
repnz
ficoml
add
ret
jle
dec
lret
sub
aad
lret
cmpl
jb
inc
stos
adc
fiaddl
or
or
inc
jae
jne
push
jns
je
mov
inc
or
push
sub
adcb
daa
push
insl
je
sbb
xchg
cmp
mov
out
lds
rorl
or
pop
in
sub
hlt
xor
xor
adc
cmp
push
gs
mov
mov
in
mov
das
or
or
test
add
hlt
cmp
fisttps
aad
cmpsb
xchg
pop
inc
movsl
pushf
popa
repnz
inc
dec
stc
scas
int3
decb
das
cs
enter
leave
shll
rol
dec
rolb
test
cltd
xlat
pop
push
fmuls
outsl
push
shrb
aas
sub
xchg
je
in
sbb
movsl
cmp
out
dec
lods
movsb
jns
bound
das
xor
sti
or
xor
inc
lea
fiaddl
data16
mov
xchg
xlat
das
subb
iret
decl
das
fcompl
mov
movsb
or
mov
ret
push
pusha
push
fnsetpm(287
add
fwait
mov
lcall
mov
js
dec
xchg
vmwrite
lret
fcompl
xor
aas
test
hlt
imul
imul
cmpsl
mov
fisubl
adcb
jns
cmc
lret
jmp
imul
ss
adc
mov
mov
mov
cmp
rclb
lret
ss
sahf
divl
jae
fcompl
push
movsl
fsub
cmp
mov
mov
mov
sbb
pop
test
mov
mov
mov
add
shll
sbb
or
mov
cmpsb
in
mov
cwtl
bound
ficompl
cwtl
pop
push
ret
push
ds
mov
lds
adc
rcll
add
mov
mov
pop
add
rorl
test
loopne
or
xchg
jbe
loopne
shrl
cmp
nop
test
mov
sub
gs
ret
mov
das
push
fbstp
sahf
dec
mov
dec
dec
dec
or
rcrb
xor
push
inc
xchg
hlt
loop
loop
gs
pop
enter
pop
sub
jb
cmp
fwait
push
test
pushw
or
or
jb
xchg
adc
sub
imull
pop
pusha
jg
out
subl
sbb
push
xchg
cmp
rcrl
pop
push
repnz
pop
push
pop
sbb
push
insb
ljmp
insl
fdivp
loopne
add
adc
cmp
xlat
sbb
out
lret
cmp
js
lcall
push
mov
jp
xlat
jae
adc
mov
fidivl
dec
shrl
cs
xor
fwait
dec
popa
arpl
jbe,pn
cmp
fistpll
jl
dec
cmp
or
subl
addb
fwait
repz
or
pop
inc
cs
and
or
pop
movsl
xchg
pop
lahf
mov
pop
mov
in
dec
pop
in
aaa
icebp
cli
into
jns
push
push
and
mov
out
je
ds
inc
icebp
mov
push
xor
ss
sahf
mov
out
jge
scas
jne
push
or
inc
pop
adc
movsl
mov
mov
push
cmp
fs
xor
shufps
fld
or
lods
insb
jp
fwait
lock
push
cmp
inc
int
js
inc
add
mov
daa
test
sub
mov
mov
js
lods
pop
out
add
jmp
adc
inc
xor
jge
jg
xchg
mull
loope
and
iret
std
test
xor
in
xchg
aad
pusha
pop
repnz
mov
jo
pop
or
xchg
jge
imul
pop
imul
loopne
mov
insl
cmp
jne
mov
pop
enter
incl
mov
loop
gs
out
xchg
sub
adc
lock
add
addb
aas
jae
jbe
fstpt
and
push
insl
or
mov
xlat
jle
fcmovb
pop
push
cmp
pop
jno
sbb
lret
pop
lret
int3
pop
in
sub
fildl
fsubs
xor
adc
rcll
xchg
push
xlat
add
repz
lea
in
cmp
cmp
inc
and
test
mov
mov
or
popa
lock
push
scas
add
mov
push
mov
leave
dec
das
rclb
orb
stc
cmp
jp
mov
and
jp
inc
lds
loope
mov
int
mov
ss
hlt
mov
out
adc
mov
or
mov
adc
ljmp
push
push
push
jnp
cltd
push
cmp
xchg
aam
jns
push
stos
bound
popa
dec
sbb
mov
jge
stos
mov
in
inc
outsb
xchg
pusha
adc
push
je
lock
mov
sub
push
or
jl
push
loope
sti
mov
lahf
dec
mov
dec
sar
mov
test
lret
cmp
adc
mov
fwait
mov
in
test
dec
movsb
push
popa
pop
shrl
in
sbb
inc
mov
es
in
je
pop
aad
mull
sbb
gs
jne
call
push
int
xchg
movsl
xchg
out
adc
aas
inc
cmpsl
and
in
inc
call
sub
adc
scas
stos
in
xor
sbb
les
xchg
insl
fcomi
icebp
dec
jbe
cmp
or
out
sbb
scas
fsubrs
mov
or
clc
imul
cmc
fidivl
popf
sbb
jno
push
sbb
pop
pop
sbb
in
mov
shrl
lods
xor
es
push
push
xor
dec
arpl
cmpsb
jmp
shr
negb
mov
sub
mov
sbb
sbb
mov
pop
add
push
and
dec
aad
popa
xor
test
cmpsb
pop
xor
imul
ljmp
dec
sub
sub
clc
xor
jno
cmp
adc
jae
lods
inc
test
call
dec
lds
adc
fistpll
inc
add
mov
adc
dec
mov
add
sbb
or
addr16
cmpsl
mov
jb
pop
ds
lea
lods
das
xchg
inc
jl
pop
push
push
fimuls
jne
nop
adc
dec
cmp
jns
mov
dec
mov
icebp
cmp
push
lds
aas
jo
pop
push
stos
insl
outsl
add
dec
adc
mov
xor
daa
jle
pusha
jge
int
mov
icebp
test
mov
fwait
cmp
xchg
mov
mov
jne
inc
sarb
lahf
mov
xchg
push
pop
xor
sub
cltd
sahf
dec
cmp
sahf
push
sbb
inc
cmp
test
repz
push
mov
dec
jnp
fisttps
popf
mov
outsl
int3
fistl
add
rcl
adc
in
jle
testl
push
jp
and
repnz
in
or
imul
sbb
sub
int
jnp
cmp
jg
inc
mov
inc
insl
mov
ja
add
push
xor
mov
stos
cmp
dec
add
inc
cmp
pop
dec
push
push
out
add
mov
fildl
aam
lds
sub
imul
push
js
jae
ja
lock
mov
sar
push
mov
xor
and
add
fnsave
jno
sub
clc
loope
mov
repz
ss
sub
jb
ja
mov
ret
adc
and
scas
int
cmp
loop
or
push
mov
add
test
inc
mov
lods
dec
push
xchg
cmp
cmp
inc
out
adc
mov
int
xchg
mov
into
mov
fdivrl
lock
ret
lret
faddl
cwtl
add
out
fidivrl
cltd
cmpsb
xor
push
adc
aad
jns
pop
std
mov
inc
jg
adc
shll
mov
jae
jle
and
xchg
xchg
mov
je
push
inc
test
mov
cli
pushf
xchg
add
add
imul
push
shll
fdivrp
xchg
jmp
cmp
dec
adc
test
js
add
cvtps2pi
push
dec
dec
mov
addr16
ror
push
jp
pop
add
daa
push
pop
repnz
or
fcmovnbe
mov
or
in
mov
in
mov
mov
sub
xor
insl
fistl
sarl
jmp
icebp
mov
mov
sbb
movsl
jb
aaa
das
enter
test
or
stc
scas
cli
pop
inc
out
loopne
lods
xlat
or
pop
cmp
inc
jb
pop
mov
and
mov
mulb
jns
inc
test
xor
loop
pop
popf
bound
jl
cmp
stos
add
pushf
dec
pop
test
ds
loopne
lret
fistpll
imul
icebp
push
hlt
add
adc
repz
fistl
pop
add
fisubl
mov
andl
mov
aam
bound
pop
dec
rcl
out
outsb
mov
in
cs
cli
sub
jbe
dec
outsl
dec
mov
and
aaa
mov
aas
in
fucomip
cmp
loopne
ss
hlt
imul
cmp
xor
lcall
cmp
scas
mov
scas
push
jae
pop
and
bound
cld
xchg
movsl
dec
stc
adc
mov
push
int
shll
inc
push
jae
pop
not
loop
and
xor
imul
daa
xchg
stos
clc
or
jge
in
pop
cmp
aaa
pop
xor
out
repnz
pop
int
js
and
inc
rorl
mov
popa
mov
add
push
dec
inc
pop
xlat
jbe
js
cmp
sub
adc
fists
jp
push
jno
add
cmp
not
mov
xor
mov
mov
push
push
sub
popf
push
dec
xor
sbb
and
popa
or
xchg
div
inc
push
popf
mov
test
pop
cld
movsb
or
adc
cli
mov
ljmp
xor
lret
cmpsb
lds
int3
adc
adc
imul
lds
cmp
fmuls
or
imul
pusha
mov
or
lcall
jns
pop
push
add
jne
inc
push
xchg
enter
add
dec
ds
mov
sub
outsl
ret
inc
dec
dec
xor
test
sbb
movhps
mov
ficompl
sbb
in
xchg
int3
stos
das
in
int
pop
mov
icebp
jae
mov
pop
mov
dec
addr16
imul
push
imul
cmpsb
pushf
pushf
movsl
in
sbb
cmpsb
rcrl
shr
imul
cmp
and
out
movsl
into
adc
vpsubw
scas
ljmp
mov
adc
and
xchg
pop
pop
dec
inc
je
pop
inc
dec
aas
mov
ret
push
or
inc
hlt
movsl
into
xchg
fwait
xchg
xchg
cmp
sbb
adcl
cmpsb
xor
clc
inc
pushf
cmp
or
popa
loop
jl
movb
pushf
loope,pn
jbe
fistpll
shll
sbb
xlat
aad
loope
dec
cmp
jp
sub
pop
lcall
leave
add
aas
jecxz
in
aad
out
enter
fcomi
sbb
sbb
inc
ljmp
ds
ss
mov
push
pop
mov
dec
push
incl
stos
hlt
movsl
and
xor
dec
enter
push
je
scas
xor
adc
loop
dec
shlb
mov
lret
mov
mov
jns
mov
fistpll
push
cld
push
lret
imul
lea
fisubl
jns
push
popf
fildll
xchg
push
sbb
mov
ljmp
cmp
out
sahf
and
xchg
mov
mov
jne
pusha
outsb
mov
mov
cs
mov
adc
mov
fsubr
pop
and
call
dec
int3
sub
ja
pop
loopne
adc
loope
rcrl
fbld
dec
rorb
xchg
push
and
sub
test
stc
mov
idiv
mov
xor
mov
insl
push
cmp
mov
push
andl
cmp
mov
dec
and
push
lea
push
ds
dec
cmpsl
movsb
insb
cmp
stc
jge
and
cmp
dec
daa
cmp
push
jno
in
call
stc
stc
mov
imul
mov
cmp
lcall
aam
adc
push
lods
sbb
ss
jns
frstor
rolb
and
in
leave
mov
jge
repz
arpl
xchg
sbbb
ljmp
or
sbb
mov
sbbb
int3
pop
rol
mov
imul
cmp
les
sbb
stos
ret
push
mov
adc
pop
cmpsb
dec
popf
push
sbb
or
sub
xchg
fadd
jp
or
leave
sbb
cmp
ds
outsb
xchg
lcall
ret
add
sub
xor
xor
xor
lcall
shlb
add
lods
test
insb
add
jmp
aas
ds
add
add
push
insl
and
arpl
es
fidivrs
mov
mov
ficompl
jnp
push
cmp
add
pop
jbe
insb
pop
mov
xchg
ret
jg
arpl
sbb
sbb
or
lret
sbb
jo
stc
pop
jge
test
mov
xchg
das
pop
push
into
clc
jge
lods
jnp
movsl
dec
lea
scas
fwait
adc
mov
insl
in
lret
fisttps
mov
lret
cs
push
xchg
pop
arpl
mov
mov
and
pop
arpl
nop
cmpsb
cltd
nop
xor
push
js
aaa
test
dec
out
addb
int
addr16
outsl
fadds
lret
sub
jne
and
rclb
mov
push
stos
out
loope
xor
and
mov
frstor
xor
xorb
cmp
push
jle
inc
adc
shlb
outsb
adc
out
cmp
mul
mov
push
xlat
pop
in
loope
or
outsl
pop
cmp
add
xchg
jp
xchg
mov
loopne
sbb
test
and
ret
filds
mov
testl
pop
movsl
sub
xchg
jb
aas
mov
iret
xchg
adc
dec
and
lods
icebp
pusha
adc
push
xor
push
jno
ret
xor
fmuls
cmpsl
scas
movsb
ret
and
add
cmp
sbb
int3
mov
inc
adc
pop
sti
lcall
mov
lock
daa
lret
pop
popa
mov
leave
mov
outsl
or
fwait
les
jmp
pop
inc
and
xchg
rolb
and
cmp
mov
or
sahf
mov
iret
adcl
dec
push
and
ret
mov
sbb
push
and
jnp
arpl
inc
movsl
repz
dec
adc
icebp
mov
cmpsl
pop
add
adc
outsb
push
into
pop
ss
ljmp
inc
popa
and
mov
ds
inc
push
hlt
and
inc
movd
push
mov
mov
fwait
pop
pop
mov
mov
int
xchg
lret
adc
xor
push
pop
pusha
js
int3
in
ss
aaa
js
dec
lods
cmpsb
popa
push
fcomp
mov
push
bound
stos
in
inc
cmpsl
add
inc
sub
sub
scas
xor
pushf
inc
mov
shr
cli
scas
jmp
lahf
cmp
dec
mov
imul
lods
shlb
or
cmp
mov
sbb
std
adc
push
sti
sbb
or
sahf
daa
inc
cld
or
stos
cltd
xor
ss
mov
lods
shr
mov
xchg
stos
movsl
jae
inc
or
jp
jnp
and
outsl
or
cs
sti
inc
shlb
mov
pushl
shl
sbb
mul
mov
mov
push
and
aam
sbb
xchg
xchg
cmp
adc
cmp
shrb
sbb
pop
inc
mull
mov
sbb
pop
movsb
ficomps
cltd
xor
fldt
push
push
daa
mov
sub
pusha
lea
jmp
pop
ss
jo
jae
call
jae
or
loope
ja
mov
pusha
push
gs
jl
test
das
or
dec
mov
add
xchg
dec
mov
scas
pop
push
dec
push
push
popf
xchg
mov
push
addb
jecxz
lock
add
mov
dec
inc
inc
fmuls
jnp
push
adc
jl
int3
ds
push
xchg
or
pop
cs
jmp
adc
push
call
sahf
aad
push
add
mov
loopne
push
xor
ret
icebp
clc
repnz
push
dec
test
lret
filds
push
addl
mov
hlt
rclb
adcb
push
adc
outsl
out
adc
sbb
inc
fisttpl
ret
stos
mov
xor
pop
fwait
or
mov
ficoml
icebp
push
cmc
pusha
adc
cltd
ret
and
cmpsl
call
adcl
jb
leave
loop
bnd
adc
out
and
in
pop
mov
xchg
push
push
or
xchg
shll
mov
add
sarl
dec
dec
out
subb
insl
dec
xorl
out
fwait
sub
mov
dec
pop
inc
nop
pop
data16
sahf
out
lahf
and
pop
lock
test
daa
xchg
pop
pop
and
aam
ficoml
dec
out
adc
push
xchg
mov
shrb
jno
or
imul
cltd
or
repz
fstl
mov
lea
cltd
in
shlb
scas
push
adc
push
xor
inc
and
cmpsb
jg
or
call
movsl
popf
mov
ss
push
jp
sahf
cli
clc
es
cmp
or
or
jmp
lea
movsb
clc
fwait
push
dec
push
add
add
call
les
cwtl
mov
xchg
sarl
scas
mov
sbb
pop
leave
sbb
push
mov
xchg
cmp
or
popf
fstpl
bound
and
sbb
aam
cli
data16
inc
ds
movsb
push
out
xchg
adc
in
push
popa
dec
in
push
jbe
stc
adc
cmpsl
insb
cltd
aam
xor
bound
add
fstps
lahf
adc
xor
xlat
or
sbb
pop
mov
sarb
xlat
jae,pn
rcrb
jbe
add
push
insb
testb
add
mov
cmpsb
xchg
dec
xor
sarl
xor
jle
addr16
lahf
xchg
dec
xchg
inc
and
push
imul
inc
pop
xor
dec
cmpsb
xchg
mov
lods
int
cmp
push
jo
sbb
lahf
pmaddwd
aam
xlat
or
cmp
outsb
dec
sbb
cmpsb
push
jecxz
mov
adc
xchg
mov
cld
lahf
push
cmp
dec
or
into
mov
inc
jg
mov
fisubl
outsb
icebp
enter
sbb
cmc
or
dec
stc
ret
xlat
mull
mov
daa
xor
shlb
dec
adc
inc
and
test
mov
lock
leave
orl
cli
or
pop
mov
outsl
jmp
mov
adc
inc
add
inc
js
jb
and
mov
ret
adc
add
cmp
fcomps
mov
inc
mov
out
lcall
sbb
movsb
push
es
lret
sbb
cld
flds
sti
imul
lahf
or
outsb
push
and
in
cwtl
jge
lret
mov
rcl
pop
jnp
in
cmp
fldcw
lahf
jmp
dec
stos
lret
sub
fdivrs
loopne
pop
pop
std
push
mov
or
sbb
xor
movl
pop
lret
xor
dec
pop
pusha
push
out
pop
into
and
sbb
adc
xchg
mov
shll
lds
ja
jg
test
sub
xor
and
jp
mov
in
out
mov
add
pop
data16
cmpsb
filds
cmc
arpl
les
int
imul
push
nop
es
inc
xchg
sbb
dec
cmp
sbb
xchg
aaa
pop
xchg
adc
loopne
mov
les
jb
repnz
and
xchg
out
xor
pop
test
xchg
fstpl
push
dec
gs
sub
lret
cwtl
cmp
js
roll
test
dec
push
dec
sbb
cmp
dec
fstpl
rolb
mov
hlt
aas
lcall
mov
mov
testb
lret
inc
es
loope
jmp
jp
sub
scas
dec
ja
sub
movsl
shll
mov
out
in
rorb
mov
mov
push
cmp
fisttpl
or
addb
push
cli
add
ficoml
fdivs
enter
lea
out
out
xchg
out
lahf
dec
enter
divl
insl
lods
popf
inc
mov
jle
pop
jle
xor
pop
or
scas
rcrb
sbb
sbb
repnz
in
or
inc
in
pop
cmp
ret
mov
in
addr16
imul
dec
popl
adc
enter
mov
out
mov
loopne
or
mov
push
xchg
cmp
dec
jge
jmp
push
in
mov
cmp
test
scas
xchg
test
fistl
ds
jo
dec
mov
into
arpl
mov
mov
or
cmp
xchg
dec
ss
cmc
js
enter
sub
mov
sbb
mov
sub
out
loopew
jbe
mov
decb
loop
adc
push
jp
xchg
mov
out
adc
lods
ljmp
adc
push
dec
cmp
daa
jb
pop
adc
and
mov
out
pop
lea
loopne
clc
ficomps
jmp
scas
out
stos
sbb
mov
push
push
cwtl
lods
addl
sub
dec
sub
inc
xchg
insb
mov
pop
ss
mov
ss
stos
mov
add
inc
ret
pop
pop
outsb
std
xchg
xchg
stos
out
pop
dec
lds
pop
inc
mov
test
pop
sarl
mov
sti
xchg
push
imul
cmp
pop
adc
mov
jmp
icebp
add
jae
movsb
xchg
bound
daa
pop
inc
arpl
sub
cmp
hlt
jecxz
out
push
or
imul
lea
cwtl
push
inc
pop
pop
imul
movsl
add
dec
dec
aas
dec
outsl
and
add
add
scas
cs
mov
movsb
sti
cmc
push
pop
mov
inc
dec
xor
orb
push
cmc
mov
cmp
jnp
push
xlat
in
xorb
xor
jno
mov
std
cld
mov
push
push
inc
mov
dec
dec
mov
or
dec
xchg
cs
ljmp
fwait
jns
inc
cmp
ljmp
hlt
shll
js
sbb
loopne
in
int3
mov
jb
shrb
jne
iret
dec
pushf
jmp
fdivs
pop
sarb
cmp
push
popf
daa
loopne
je
in
in
enter
fdivrl
in
or
add
sbb
fs
cmp
cmp
rorb
bnd
data16
out
aaa
sbb
loopne
cmp
out
jbe
cmpsb
jns
inc
into
jne
mov
stos
xchg
jg
jae
mov
pop
adc
in
xlat
jno
and
lea
insl
xchg
and
sbb
out
loope
test
mov
shlb
cltd
call
inc
mov
xchg
mov
sarb
clc
xchg
inc
imul
lcall
ja
mov
bound
mov
repz
popw
lret
inc
pop
pusha
cmp
and
cmp
inc
mov
pop
test
rcr
ja
mov
out
pushf
add
push
pop
les
imul
sbb
mov
mov
sbb
scas
xchg
jg
mov
gs
mov
cmp
mov
ficoms
cmp
xor
mov
fwait
adc
incb
jne
mov
fcompl
fdivr
jecxz
xchg
add
loopne
push
lret
mov
or
data16
mov
mov
dec
icebp
aam
xor
cwtl
pop
iret
push
pop
cwtl
outsl
pop
cmpsb
pop
add
fldenv
push
pop
sub
enter
sarb
sbb
sbb
mov
bound
js,pn
inc
sub
mov
hlt
sub
add
inc
push
jns
stos
shlb
inc
insb
add
sub
movsb
push
or
insb
or
add
jecxz
pop
sub
ret
in
mov
inc
inc
mov
sbb
adcl
inc
daa
lahf
and
movsl
test
push
mov
decl
and
add
pop
and
and
in
pop
mov
inc
or
cwtl
pop
and
mov
aas
jmp
stos
rcl
adc
push
int3
sub
mov
ja
sti
adc
add
mov
clc
push
xchg
pop
mov
push
int
mov
lea
popf
cmp
push
sbb
into
int
mov
push
aam
insb
and
shr
mov
xor
sbb
mov
xchg
dec
out
iret
add
outsl
pushf
inc
rclb
pinsrw
xchg
shll
add
add
cmp
xchg
bound
imulb
pop
faddl
mov
fwait
das
in
xorb
dec
cwtl
xchg
in
insl
pusha
jo
push
pop
in
orb
add
add
pop
or
push
push
adcl
jge
sub
pop
cld
pop
mov
pop
in
cmpsl
add
mov
ss
sub
sahf
ljmp
pop
push
loop
and
and
hlt
mulb
cmp
inc
loope
jbe
popa
ds
adc
xor
inc
push
outsb
pusha
xor
nop
outsl
addl
stc
adc
scas
xchg
push
sub
aad
fiadds
addr16
rcr
fwait
lahf
nop
jbe
addb
lahf
nop
cltd
and
lret
fs
sti
sub
das
mov
lods
sar
add
xchg
sbb
jb
cmp
pop
cmpsb
mov
cltd
movsl
imul
push
jno
test
aad
clc
je
push
sbb
xorl
cmc
int3
inc
ss
std
push
or
faddp
push
arpl
mov
push
cmp
push
enter
mov
pop
lods
jo
sahf
and
sar
into
decb
and
lret
int
in
ja
fs
pop
rorl
inc
fstps
mov
sbb
and
xchg
lock
cmp
push
aaa
jmp
xor
nop
add
imul
out
int
cmp
out
pop
sbb
and
and
aam
add
popa
stos
jo
inc
fldt
xchg
jo
mov
leave
repz
std
repnz
lods
jno
jne
dec
mulb
push
dec
lcall
pop
addr16
dec
jmp
inc
loopne
xor
repnz
inc
movsb
mov
daa
stos
cmp
rclb
cwtl
or
mov
outsl
sub
aas
inc
add
xchg
daa
cmpsl
cmpsl
dec
pusha
lock
ja
les
stos
and
test
jmp
xlat
fnstcw
outsl
jo
xchg
sub
sti
out
cmp
pop
scas
cmc
sub
cmpsl
mov
sarb
xchg
pop
out
xchg
ds
cmp
adc
inc
movsl
fucom
xor
mov
inc
test
icebp
addr16
add
arpl
repz
mov
fsts
sub
fists
add
outsl
adc
iret
aas
pop
int3
in
mov
cmpsl
insl
dec
xchg
adc
sbb
mov
and
sub
xchg
sbbb
or
int3
fwait
xchg
dec
or
mov
xchg
push
arpl
push
inc
popf
xchg
pop
sti
fstpt
push
inc
ja
ljmp
lds
pushf
adc
adc
loopne
inc
jg
test
inc
adc
mov
bound
cs
mov
out
jmp
sbb
arpl
cmp
sub
lret
pop
mov
movsl
iret
not
mov
cmp
sbb
jo
ljmp
adc
jge
testl
iret
icebp
mov
fisubs
or
js
pop
dec
imull
cmp
stc
test
fwait
add
adc
sbb
fucomi
mov
lea
jmp
push
insl
ret
or
jae
sbb
test
push
dec
mov
pop
aam
jmp
jge
mov
or
jmp
or
in
add
cmp
pop
xchg
push
stc
pop
jno
mov
js
jmp
lea
test
pop
xor
xor
call
inc
je
pop
mov
pop
std
fnstsw
test
add
das
maskmovq
mull
inc
mov
inc
movsb
cmp
clc
daa
pop
movsl
mov
push
test
notb
xor
mov
out
inc
mov
inc
cmpsl
cmp
pop
fisubl
pop
sub
sbb
out
cmp
add
out
cli
cmp
mov
dec
jp
aam
loope
cltd
ss
leave
push
and
xor
push
call
lret
inc
mov
pop
xchg
nop
push
cmpsl
jge
mov
mov
or
jl
mov
int3
mov
mov
pop
ljmp
sbb
test
hlt
dec
push
mov
cmp
shll
mov
push
sbb
push
cltd
gs
or
sti
sub
push
rcl
fs
loope
test
rcr
add
aam
test
or
push
aad
mov
pusha
inc
mov
test
in
arpl
cli
inc
arpl
dec
lahf
adc
aaa
testb
pop
push
push
scas
arpl
les
gs
mov
add
push
push
cmp
movsb
cmpxchg
lret
icebp
adc
cmp
test
mov
pushf
sub
js
mov
push
jb
imul
rorl
fsubr
or
inc
sbb
ja
hlt
jge
and
sbb
push
cwtl
or
popl
and
stos
sbb
pop
popa
andb
adc
xor
sbb
inc
push
scas
roll
icebp
cmp
pop
loop
push
testl
pop
mov
lds
and
fs
mov
jno
loopne
lds
int
stos
les
stos
mov
in
xor
movsb
mov
cmpsb
aaa
xchg
shll
test
jle
nop
xchg
sbb
mov
pop
aam
mov
js
xchg
aaa
inc
aad
pushl
inc
pop
xchg
push
in
mov
lock
pusha
dec
ficoml
jge
cs
scas
nop
les
jle
dec
leave
pop
xchg
xor
arpl
jl
divb
jns
pop
mov
push
leave
add
xor
jns
adc
movl
fnstcw
xor
jecxz
jge
mov
jae
int
pop
cli
mov
mov
les
and
lahf
cmpsb
xor
aam
add
sbb
mov
pop
pop
push
ficomps
adc
mov
scas
repz
push
push
or
in
sub
xor
loope,pn
mov
xchg
cli
inc
or
mov
jp
mov
pop
ficompl
sub
lds
jb
cltd
xlat
dec
or
cltd
cs
mov
adc
push
mov
pop
cmp
ds
fistpl
xor
jmp
movsl
or
xchg
inc
and
loopne
jae
nop
mov
xchg
and
std
das
or
dec
fidivrl
mov
push
pop
pop
and
test
into
jne
icebp
test
mov
sub
xor
dec
subb
inc
mov
jns
pop
scas
movsl
shrl
subb
sub
xchg
fyl2xp1
enter
dec
mov
test
lds
outsl
out
cmpsl
push
and
mov
std
xchg
adc
decl
inc
inc
add
mov
push
aam
sub
jne
pusha
lock
or
cmp
inc
xchg
bound
mov
cwtl
mov
ds
mov
pop
stos
dec
push
jmp
xchg
jmp
cmpsl
mov
mov
shl
jecxz
xchg
jo
jnp
mov
sarl
dec
test
push
arpl
imul
lods
int3
push
sub
sub
testb
adc
cmp
mov
decb
adc
mov
mov
mov
ret
ret
dec
js
fs
push
xor
add
add
mov
xor
outsl
pop
les
js
pop
mov
xorl
dec
cltd
hlt
pop
or
fnstenv
popf
xorl
cmp
mov
xor
iret
daa
pop
sbbb
mov
jge
pop
and
xor
scas
adc
imul
ljmp
pushf
faddp
or
sbb
test
jmp
mov
xchg
hlt
ljmp
pop
jp
fdivrs
xchg
pop
xchg
lock
sar
jl
ja
aaa
ljmp
and
and
xchg
and
test
xor
ja
xor
sbb
sarl
push
fsubl
in
adc
cmp
int3
in
outsl
add
push
movsl
push
cmpsl
loope
or
std
stos
push
xchg
or
ds
sbb
sbb
add
mov
idivl
fdivrs
shlb
in
fs
cmp
jmp
xor
mov
fs
push
mov
sbb
hlt
test
jno
out
outsl
ss
and
orb
pop
xor
fnstenv
sbb
inc
fmuls
xor
sub
adc
fistpll
lahf
cmp
fstpl
pop
filds
push
mov
inc
cmpsl
out
and
xchg
ficoml
testl
xchg
sub
sub
dec
mov
jbe
cmp
sub
pop
bound
repz
mov
out
adc
xlat
pop
dec
add
pop
push
aas
push
push
push
hlt
clc
xchg
jne
lods
or
sub
dec
jbe
leave
pop
loope
sbb
std
sbb
mov
jo
adc
daa
sbb
jno
popl
mov
dec
mov
and
xchg
dec
xchg
pop
ljmp
pop
test
fistl
ret
bound
test
notl
lahf
or
inc
and
cmpb
sub
sbb
and
lds
mov
enter
inc
and
stc
sub
xchg
jl
pushf
cwtl
inc
cmc
push
rclb
std
aas
pop
adc
popa
fcomps
sbb
inc
nop
or
cld
xchg
mov
or
push
jo
cmp
movsb
out
enter
mov
pinsrw
data16
sbb
xlat
test
pop
inc
cld
imul
inc
mov
dec
call
mov
xchg
jne
cmc
cltd
pop
sbb
inc
fwait
mov
nop
mov
mov
push
out
cmp
hlt
push
and
mov
ss
sub
pop
or
xor
cmp
adc
bound
or
push
inc
rep
mov
inc
push
dec
sarl
dec
dec
xor
sbb
aas
lahf
pop
sahf
inc
sbb
dec
jae
xor
data16
add
test
jecxz
jmp
push
fsubl
imul
sbb
push
fisubrl
mov
test
sub
add
sub
sbb
ret
jg
ja
ljmp
dec
mov
fidivrl
mov
test
mov
mov
cmp
pop
push
mov
in
mov
jbe
pop
add
xor
cld
push
xlat
xchg
mov
aam
push
inc
repnz
rcl
sub
loope
in
xchg
xchg
iret
adc
es
ficoml
fsubs
push
rcr
adc
or
mov
adc
lret
inc
mov
pop
mov
mov
sub
je
shrl
insb
push
fcmovb
loopne
sbb
jb
test
hlt
cli
jle
lea
dec
in
inc
imul
xor
inc
cs
push
mov
rcl
std
pop
mov
cmpsb
or
dec
subl
mov
shl
xlat
cs
jl
jmp
icebp
imul
lea
pop
stos
pop
test
mov
out
aad
shl
stos
and
pop
and
in
js
pop
and
adc
lds
mov
scas
lods
div
cmc
cmpl
test
enter
jno
dec
in
pop
sbb
lods
cltd
test
stc
loop
fcoml
std
pop
mov
sahf
fdivrs
fldcw
inc
adc
fldcw
inc
lcall
and
fisttpl
push
xchg
stc
push
push
or
xlat
sahf
sbb
insl
out
cmp
aaa
push
dec
insb
into
pop
push
sahf
in
and
xor
cld
inc
idiv
jo
icebp
es
cmc
pushf
data16
ret
fstl
cwtl
ja
mov
jmp
ret
aad
popf
push
xor
add
push
imul
sbb
push
clc
dec
xor
movb
add
pusha
outsb
sub
cmp
test
add
inc
jge
lods
or
test
pop
aaa
imul
ja
jg
insb
lret
inc
push
sbbl
jecxz
jbe
jecxz
add
mov
inc
std
pop
cli
cmp
sub
out
push
ret
jnp
std
les
xchg
jg
popa
mov
mov
sbb
mov
jecxz
adcl
ss
sar
cmp
and
mov
pop
pusha
and
out
das
mov
dec
jno
pmaxsw
aaa
jnp
fwait
or
out
sti
out
cs
addr16
push
lahf
cwtl
adc
pop
int3
pop
mov
loopne
pop
push
pop
test
push
inc
xorl
mov
stos
xchg
xchg
dec
data16
cli
out
mov
repnz
jo
jmp
pop
je
inc
repz
mov
sbb
jp
lret
mov
pop
into
das
aas
sbbb
rcl
sub
xlat
ficoml
lahf
ret
xchg
xchg
push
inc
repz
xchg
pop
sbbb
mov
cmp
push
cmp
call
bound
mov
clc
or
fwait
push
cs
sbb
cli
stc
pop
icebp
fs
add
or
push
pop
or
shlb
ror
dec
mov
out
imul
push
int
or
fisttps
xchg
adc
cmp
mov
adc
sbb
shlb
dec
aaa
mov
xchg
std
ficoml
in
cmpsb
insl
xchg
imul
sub
adc
mulps
xchg
loope
nop
cwtl
test
loopne
or
out
or
xchg
jne
test
iret
imul
jmp
push
adcl
push
test
lods
adc
push
out
or
sbb
push
mov
imul
jmp
add
mov
pop
adc
mov
movsb
pop
ds
xor
imul
aad
mov
xor
bound
mov
pop
push
inc
push
push
mov
push
out
cltd
loope
sbb
mov
dec
mov
mov
xlat
enter
jnp
popa
mov
jmp
scas
in
jp
jmp
pop
add
jno
movsb
mov
pop
incb
gs
out
and
dec
nop
aam
jmp
imul
fsubs
xchg
subl
fcoml
js
mov
out
scas
sbb
pop
lcall
int3
leave
ret
rorl
dec
sub
jge
xchg
lret
adc
sahf
push
dec
loop
shrl
cmp
push
and
pop
cmp
jb
adc
mov
rcrb
pop
in
pop
ret
aam
push
mov
mov
mov
pop
aaa
pop
pop
std
xor
mov
jns
adc
or
orl
add
pusha
popa
cmp
inc
mov
adc
dec
sub
movsl
dec
fcoml
xchg
xlat
mov
and
mov
sbb
add
and
sub
mov
imul
stos
xor
loop
or
sahf
aas
negb
adc
mov
push
loopne
lret
test
cmp
mov
lea
mov
jp
jecxz
push
mov
push
xchg
pop
pop
sbb
xchg
dec
sub
xor
pusha
pop
popf
cmpsb
lret
imul
in
fmull
dec
mov
xchg
push
mov
xor
and
in
fdivl
out
xchg
xor
jp
pop
sub
clc
cmp
mov
leave
stos
pop
pop
cmp
test
jno
into
xchg
out
push
idiv
push
xor
xchg
dec
shr
mov
dec
adc
dec
push
push
movsl
jmp
dec
pop
rol
add
xor
inc
push
sbb
mov
push
out
mov
sti
sbbb
inc
adc
xor
fistl
cs
xor
ret
int
mov
push
fldt
imul
xchg
mov
mov
cwtl
or
adc
add
pop
cmp
and
dec
xor
sarl
cli
jb
or
jmp
in
daa
jg
imul
xor
iret
push
shr
jmp
adc
xor
ret
aas
jo
dec
in
das
or
cmpsb
push
or
mov
aas
std
movsb
jl
popf
add
sbb
push
sbb
xor
shlb
jge
fcomps
aas
pop
and
ficompl
int
sahf
push
pusha
sbb
jecxz
xchg
add
shll
fwait
test
mov
lds
stos
jecxz
imul
test
sbb
test
daa
adc
mov
sub
ret
dec
daa
xchg
xlat
sub
cmp
push
mov
jnp
shrb
xor
adc
stos
cs
xor
cmc
mov
mov
xlat
sbb
out
xchg
popf
arpl
insl
scas
sub
and
test
jmp
adc
mov
or
mov
jp
push
fs
jecxz
or
jne
jb
pushf
cmp
adc
dec
cmp
dec
add
mov
test
aas
int3
dec
ss
jns
pop
inc
sub
jns
pushf
sub
addr16
mov
outsb
nopl
ret
out
outsb
mov
xchg
sub
mov
stos
test
dec
xchg
pop
mov
andl
test
stos
cmc
scas
inc
cmp
sbb
out
fisubl
or
mov
clc
inc
leave
sbb
ficoml
ja
inc
lds
add
ficoml
sub
sub
and
sub
aam
lss
or
fisttpll
sbb
dec
stos
jp
shl
cmc
fisttps
jg
pop
enter
sub
cmp
int3
dec
mov
outsb
es
xchg
jbe
inc
fistps
faddl
dec
and
aam
sub
test
xor
shl
imul
mov
icebp
push
call
add
mov
cmp
mov
sbb
es
mov
pop
mov
fisubs
push
lods
xor
adc
inc
imul
in
pop
out
aaa
xor
out
mov
fistpl
dec
dec
sub
nop
mov
adc
popa
xchg
arpl
cmpsb
movsb
push
pop
mov
in
add
and
dec
jp
mov
jmp
out
icebp
xorl
pop
cltd
jp
mov
hlt
andl
movsb
xchg
scas
lahf
mov
rclb
aad
clc
dec
es
loope
sbb
xor
out
fwait
test
add
or
out
je
outsb
sub
nop
fnstsw
in
or
add
popf
xchg
push
out
imul
and
mov
or
out
in
and
jae
adc
roll
push
imul
jb
adc
lods
inc
fcoml
daa
and
jecxz
gs
cmpsl
sub
shr
mov
inc
jo
fsubs
mov
icebp
fs
sbb
pop
pop
imul
push
rorl
pop
xchg
pop
fs
xchg
or
add
sub
insl
jmp
jge
add
xchg
push
sti
sub
popa
dec
sbb
mov
and
sub
aad
lret
imul
testl
fmull
fmull
mov
out
or
xchg
lds
push
adc
pop
add
subl
stos
mov
or
mov
and
inc
jno
sub
mov
leave
out
mov
sub
das
push
pop
out
std
mov
cmp
and
fcom
mov
imul
pop
mov
mov
insl
fsub
pop
aam
addr16
js
add
xchg
psllq
xlat
outsb
add
ds
add
dec
push
stos
into
sbb
mov
lret
data16
negb
sbbb
repnz
xor
mov
scas
xor
sbb
mov
out
or
cltd
scas
or
int
inc
jno
inc
adc
push
insb
shrd
fidivrl
mov
or
ret
and
enter
test
sub
jecxz
push
inc
and
mov
add
outsb
lods
inc
dec
adc
or
mov
fyl2x
pushf
fidivrs
pop
insl
test
fsubrs
push
push
lret
jbe
dec
sbb
jbe
push
fmuls
or
jne
divl
dec
mov
lret
movsb
fcoml
leave
cmp
jnp
mov
adc
xchg
fldenv
mov
nopl
jns
xchg
dec
jns
inc
add
mov
xor
xor
shlb
in
and
xlat
and
clc
inc
xor
jecxz
mov
ja
addb
mov
xor
adc
and
mov
pop
daa
aad
bound
shll
inc
test
inc
mov
shlb
push
xlat
inc
cli
es
aam
or
pop
sbb
cmp
lret
fiaddl
add
out
js
stos
xchg
loop
xchg
sub
adc
pop
adc
in
imul
jbe
arpl
dec
mov
mov
sar
jge
and
push
jge
fs
stos
cmp
xchg
hlt
adc
popa
cwtl
out
scas
icebp
jmp
xchg
dec
xchg
xchg
inc
push
ret
rcrb
jo
inc
and
mov
stos
pop
mov
pop
arpl
cmp
cwtl
pop
cmpb
pop
mov
sub
pop
cld
hlt
xchg
dec
mov
pop
lock
testl
lock
ret
jle
pop
adc
add
or
in
xchg
push
jecxz
push
ret
sarb
push
jmp
movsl
ljmp
lock
or
add
mov
or
mov
lds
hlt
and
pop
ljmp
outsb
out
and
xor
inc
xlat
sub
les
adc
mov
xor
jae
dec
lods
xor
es
mov
xchg
mov
iret
dec
xor
dec
fs
cmp
fstpl
lret
xor
add
testb
rorb
in
gs
mov
pop
xchg
dec
xor
scas
repz
xorl
pop
lods
push
nop
and
lods
movsb
and
outsl
lods
sbb
or
imul
das
fisttps
shrb
enter
daa
inc
sub
pop
out
mov
fmuls
aas
cmp
in
fsubrs
out
stos
push
dec
or
lret
fidivl
stos
dec
or
in
sbb
cmp
pop
push
xor
adc
ds
jo
out
inc
std
das
cwtl
leave
fcos
sub
cmp
cmovb
push
into
das
pop
testl
jp
or
repnz
das
loop
sub
ss
mov
mov
clc
flds
int3
mov
dec
mov
iret
or
aaa
xchg
xor
inc
pop
mov
fcmovb
push
lret
rcll
divl
add
addr16
test
xchg
dec
xor
nop
lea
das
sbb
mov
mov
aaa
mov
and
add
cmpsl
dec
out
repnz
lea
xchg
jle
fucomip
xchg
xchg
lods
fs
lea
mov
mov
inc
jmp
iret
cmp
adc
adc
and
movl
hlt
sti
adc
mov
cmp
adc
dec
inc
sbb
push
rorb
xor
in
pop
jbe
cmp
and
mov
mov
popf
loope
jb
cmpsb
mov
cs
inc
pop
pop
pop
xor
ret
rep
test
ljmp
in
daa
sub
cli
sahf
xor
lret
pop
add
lods
jne
inc
and
fsubrs
loopne
and
mov
lods
cmp
xchg
mov
loopne
fldenv
inc
mov
jns
add
push
pushf
inc
fstpt
call
mov
xchg
dec
dec
aam
fnstsw
movsl
add
dec
out
cltd
jb
scas
int
push
mov
ret
adc
out
adc
pop
shrb
push
test
add
add
adc
imul
bound
mov
xor
in
add
xchg
lret
xor
test
mov
fsub
jecxz
ficoms
aaa
mov
test
cld
adc
lock
adc
lods
cmpsl
mov
mov
push
sbb
movsb
into
shrl
push
adc
scas
loope
adc
rclb
ja
adc
or
xchg
inc
cmpsb
adc
pop
mov
loope
and
jne
int3
fstl
mov
data16
push
gs
movsl
test
pop
dec
inc
in
and
es
lahf
imul
inc
aad
add
xor
adc
jge
and
stos
pop
or
push
fadds
cmc
mov
jb
leave
cmp
repz
js
cmp
or
decb
ficoml
call
push
fisubl
mov
out
ljmp
fisubrl
test
jnp
jno
repz
mov
xlat
jb
les
cwtl
mov
pop
xor
rorl
or
sarb
cmp
inc
and
out
aad
adc
push
lret
mov
mov
lcall
stos
mov
loope
subl
adc
pusha
jb
inc
dec
add
inc
jno
mov
cmp
in
xchg
inc
pop
inc
inc
adc
mov
out
adc
or
inc
sarb
xlat
icebp
cld
xchg
rorb
or
cwtl
dec
mov
adc
dec
jmp
jbe
std
dec
mov
push
jecxz
mov
inc
sbb
cmp
dec
cmp
add
repz
pop
or
sub
ret
xchg
popf
lods
mov
cmpb
call
sbb
xor
popa
repnz
fbstp
dec
cltd
cs
lock
sbb
popf
dec
out
adc
dec
dec
cmp
xor
cmp
xchg
mov
jno
push
adc
icebp
stos
and
mov
push
mov
insb
jecxz
xor
jbe
sub
sub
mov
jnp
mov
push
sub
mov
rorb
xchg
mov
mov
xchg
jo
pop
xchg
cs
pop
xlat
inc
leave
sbb
adc
push
cmp
xchg
shrl
mov
rolb
sti
sbb
test
or
lahf
sbb
xchg
rcll
pop
shll
or
loopne
aam
js
or
or
in
xchg
das
push
cwtl
dec
cmpsb
pop
dec
test
xchg
or
pop
bndstx
sbb
lds
testl
lods
out
xchg
out
and
aas
loope
push
xchg
fsubrl
mov
jae
fldenv
xchg
fstpl
add
mov
or
decb
aam
mov
jae
sub
sbb
pop
and
xchg
into
xchg
pop
jg
add
and
inc
sbb
movb
cwtl
push
test
test
pop
imul
insl
dec
mov
dec
pusha
out
imul
dec
lret
jo
jns
push
xor
vpacksswb
mov
clc
inc
sti
call
cwtl
imul
cmp
dec
cmp
mov
daa
jmp
mov
mov
daa
and
dec
hlt
imul
inc
mov
push
shrb
in
mov
mov
loop
daa
cmp
ret
negb
icebp
clc
outsb
or
sbb
sarl
iret
gs
dec
out
sbb
aaa
add
in
stos
mov
jo
xchg
push
cmp
xor
std
ljmp
push
stc
push
jl
jne
and
sahf
mov
cld
mov
stos
jge
fdivrp
ljmp
in
test
mov
or
pop
push
out
aam
sbb
out
sub
xor
pop
add
push
lock
pop
scas
xchg
testb
arpl
test
or
mov
push
pop
xchg
push
or
lods
jge
and
in
add
sahf
call
imul
int3
hlt
push
adc
int
adc
test
inc
sti
loop
stos
lds
int
jecxz
stos
lods
mov
insb
fwait
add
adc
adc
inc
dec
inc
lock
call
fmul
mov
cmp
xor
sub
cmp
mov
lds
out
inc
push
imul
jns
into
xchg
js
dec
mov
pop
jl
fyl2xp1
lock
xor
sbb
or
inc
push
cmc
das
mov
and
sti
inc
lahf
dec
cmp
xor
cs
jns
dec
movsl
dec
pop
xchg
loop
lret
mov
lahf
cmp
hlt
or
inc
add
cmpsl
lods
jb
push
pop
sar
testl
xchg
fmull
xchg
cmpsb
mov
sti
xchg
bound
stc
dec
sahf
inc
pop
js
ljmp
add
pop
mov
movsb
inc
xchg
shrb
mov
xor
pop
mov
ficompl
dec
mov
lods
jp
xor
mov
pop
lret
jecxz
rdpmc
pop
inc
movsl
stc
ret
mov
cmp
movsl
lods
aam
ljmp
dec
sub
fnsave
pop
lods
je
fwait
inc
enter
in
pusha
int
imul
leave
sbb
push
mov
jb
or
fadds
mov
jns
ss
add
pop
dec
xor
loopne
cmp
cmp
jno
pop
xor
jecxz
sbb
pop
mov
sub
push
add
mov
mov
sbb
ss
dec
cmp
mov
inc
out
outsb
or
pop
pop
adc
xlat
sbb
mull
inc
fistpll
xchg
sahf
adcl
int3
sbb
nop
in
xchg
mov
clc
mov
xchg
dec
pushf
jo
out
dec
stos
mov
xchg
xorl
push
lahf
jecxz
shll
adc
int3
and
and
add
pop
mov
cwtl
and
dec
xchg
fldcw
sahf
addr16
aaa
push
rclb
out
cmpb
mov
sbb
in
mov
push
fstps
cmpsl
xchg
lret
xchg
cmpb
sub
outsb
and
aad
rorb
push
stc
mov
data16
dec
mov
loop
cmp
stos
mov
int
ds
mov
adc
enter
sub
imul
push
xor
popf
imulb
movsb
lods
ja
outsl
out
lods
jl
xchg
enter
clc
cmpsl
icebp
into
jno
dec
cmc
xor
dec
adc
cmc
mov
shlb
lahf
mov
ret
sub
inc
shrb
sbb
fnstsw
mov
int
dec
or
push
cwtl
jle
push
push
dec
shrl
mov
push
fsub
or
pop
stc
in
pop
pop
sub
nop
push
and
jae
pop
mov
mov
cmc
or
faddl
xor
cmpsb
push
push
push
dec
sub
add
mov
add
xor
mov
push
out
sub
sbb
lods
or
mov
dec
jp
aam
dec
or
aas
sbb
clc
test
xchg
ja
roll
jg
dec
cmp
in
int3
or
inc
loop
mov
dec
adc
jne
sub
mov
xchg
or
out
rorl
or
mov
inc
push
mov
rorl
jle
add
xchg
dec
push
sbb
cmpsb
leave
lcall
mov
gs
fidivs
sub
jmp
lea
pop
cld
pop
and
sbb
popf
jae
adc
in
and
push
push
lock
mov
mov
mov
pop
push
pop
nop
minps
sbb
loopne
adc
mov
in
or
outsb
mov
push
mov
pop
xchg
pop
inc
sbb
aas
add
xor
push
pusha
aam
cmp
jno
push
subl
jb
push
inc
icebp
in
cmp
cmp
inc
nop
and
cmpl
xchg
in
call
push
lock
mov
sarl
sbb
adc
sbb
je
test
fimuls
xor
mov
xchg
loopne
adc
pushf
push
xchg
dec
mov
ss
cmp
aas
int3
inc
mov
pop
mov
rorl
xchg
sbbb
cs
add
jl
loopne
inc
repnz
notl
push
mov
push
jo
mov
dec
pop
mov
pop
setbe
sbb
dec
or
outsb
aaa
cmp
dec
sub
int
add
in
insb
push
cmpsb
mov
aaa
popf
ds
push
or
pushf
sub
sti
and
fcmovnu
mov
cmp
sub
mov
dec
ret
sbb
pop
mov
cmp
mov
fcoml
push
sti
ret
das
xor
shll
push
sbb
fwait
pop
test
push
dec
cmp
gs
aas
pop
mov
cmp
mov
add
sti
mov
enter
and
cmp
mov
sub
jle
and
test
and
xor
ds
test
cmpsb
push
mov
or
sahf
sub
inc
cmp
push
xor
ficoms
mov
xor
andb
out
fs
and
xor
xor
sbb
fwait
test
aas
pop
pop
cmpsb
rolb
data16
dec
mov
jno
gs
out
dec
mov
add
nop
sub
pop
shrl
cs
ljmp
stc
push
lahf
sahf
cmp
or
cmpsl
clc
xchg
sub
xor
sub
filds
sub
bound
enter
jbe
jo
adcb
insl
bound
inc
lods
xchg
fs
in
aam
pop
cmp
cmp
xorl
add
pop
mov
daa
loopne
out
lods
scas
je
inc
stos
ret
cmpsb
adc
sarl
inc
fs
inc
inc
sub
dec
push
cmp
faddl
lds
mov
insb
dec
fldcw
push
jo
lret
scas
jl
ds
mov
sub
enter
pop
rcrb
imul
cmpsb
ss
push
stos
popa
jmp
xchg
jns
ficompl
xchg
insl
lahf
push
in
pop
jno
testb
lret
push
mov
pop
mov
xor
movaps
sub
data16
adc
mov
imul
data16
inc
adcl
pop
pop
les
xor
jno
stos
add
mov
jg
cmp
fstl
xchg
out
loope
shlb
out
pop
pop
es
cmp
jg
stos
out
cltd
cs
jb
mov
daa
imul
loop
sbb
xor
xchg
xchg
fstl
mov
call
in
push
repz
mov
inc
dec
adc
lret
test
mov
sti
mov
insl
clc
mov
lahf
dec
adc
jg
js
add
mov
inc
jns
test
cmpsb
mov
stos
jnp
imul
mov
add
xor
mov
das
leave
pop
test
adc
nop
out
jae
das
lods
cmpsl
ljmp
shll
pop
cmp
xor
lcall
pop
inc
jne
addr16
mov
dec
or
xor
sarl
xor
cld
mov
rcll
xchg
cwtl
fldt
and
mov
mov
fwait
stc
nop
and
push
ficompl
test
aam
mov
shrb
sbb
mov
rcrl
or
jp
adc
pop
fcmovnb
sub
ret
out
or
sbb
push
or
fidivl
pop
xchg
ret
sbb
lods
push
xchg
xchg
pusha
and
jecxz
add
insb
pop
cltd
xchg
in
out
or
xchg
jns
cmc
xor
or
cmpsl
adc
lods
mov
das
xchg
iret
test
xlat
or
push
movsl
cmc
leave
jecxz
mov
sub
xor
out
fdivl
mov
add
pop
lods
mov
sub
dec
or
mov
sbb
dec
mov
or
mov
scas
dec
int3
cmp
dec
stos
xchg
xor
js
faddl
fwait
or
es
out
test
cwtl
shlb
lret
adc
pop
sub
cmp
push
mov
jg
fwait
dec
xchg
and
fs
js
lods
fcomps
imull
leave
push
xlat
test
and
ljmp
lods
dec
loop
cwtl
es
in
fwait
dec
pop
cmp
sbb
add
stos
sub
mov
aaa
roll
push
clc
dec
aam
xchg
call
jns
and
or
pop
xorb
mov
or
push
mov
in
xor
dec
pop
mov
dec
shl
dec
push
jbe
sbb
jne
dec
or
into
ficompl
push
sub
test
inc
push
sbb
sbb
cld
mov
pop
dec
cmp
dec
xor
in
lret
or
dec
xchg
cmp
lods
pusha
xor
jnp
xchg
mov
pop
dec
out
mov
xchg
imul
xor
sub
add
cmc
push
add
adc
shlb
inc
mov
pop
mov
cmp
inc
push
sub
ja
call
sub
imul
in
sub
sbb
adc
xor
push
and
mov
xorl
dec
cli
sbb
pop
out
outsb
cli
jecxz
xchg
add
ficoms
jno
outsb
pop
push
cmp
cld
fisubl
pop
dec
outsb
fxch
add
mov
ja
jl
ret
shrb
jg
xchg
push
sub
loope
aad
sbb
out
inc
orl
aas
jne
outsl
in
outsb
fwait
test
stc
xchg
add
lret
pop
jp
pop
pop
lods
xor
js
adc
mov
call
sub
xorl
cmc
pop
pusha
push
adc
sbb
mov
out
mov
dec
outsl
call
mov
mov
and
and
adc
cmp
inc
int
or
xor
arpl
sub
movl
xchg
mov
js
outsw
pop
ljmp
push
mov
pop
sbb
rcl
loopne
inc
outsl
pop
mov
cmc
popa
lret
and
enter
lahf
jmp
shll
push
aaa
aad
insl
mov
jnp
ljmp
mov
mov
mov
jne
fsubrp
sbb
shll
lcall
or
pop
jno
cmp
mov
std
jne
arpl
xchg
sbb
ficoms
pop
bound
sbb
shl
addb
mov
dec
mov
into
sbb
scas
imul
lods
jmp
rorb
ret
std
pop
lret
aaa
sbb
inc
fcomip
jbe
mov
push
jo
mov
pushf
iret
xchg
bound
jo
adc
jnp
xor
mov
test
cld
jne
movsb
out
lahf
or
cmpsl
push
cmp
arpl
cltd
scas
xor
and
lods
popf
test
sbb
lret
or
xor
stos
mov
inc
xchg
jp
mov
xchg
or
push
fimuls
enter
js
push
jae
cld
in
into
fucomi
jno
sbb
cmp
int
outsb
ss
cmpsb
stos
jp
cmp
or
sbb
pop
mov
ss
cmp
sbb
cmp
mov
sar
aaa
jg
pop
cmp
jbe
mov
pop
add
scas
cmp
cmp
cmpsl
loopne
mov
nop
pop
daa
lds
jl
push
mov
loope,pt
lock
mov
scas
daa
sarl
aad
mov
xor
enter
xlat
and
fs
mov
call
loop
jnp
cmc
xchg
lock
pop
cmc
icebp
jle
xor
mov
int3
jecxz
push
rorl
cli
scas
mov
xlat
xor
mov
or
mov
ret
ss
push
repnz
dec
call
xchg
jp
jmp
add
popa
jb
push
cmp
push
icebp
decb
rclb
dec
loopne
push
jno
loop
popf
mov
jns
xlat
test
pop
push
outsl
push
push
jg
cmovge
jl
sub
jg
cmp
lods
ljmp
inc
jbe
popf
in
inc
dec
int3
sahf
scas
mov
shlb
mov
stc
out
jecxz
cmp
inc
int3
jle
mov
lcall
jmp
sbb
xchg
lods
or
xchg
cmp
cli
xchg
cld
mov
inc
out
mov
movsb
aam
gs
aam
jmp
adc
ret
jnp
and
pop
xchg
fcoms
sahf
inc
adc
mov
imul
sbb
lods
divl
xor
test
or
hlt
pop
xor
cmpsb
and
push
cltd
enter
clc
jnp
in
lods
fistpll
es
pop
imull
loopne
sar
xchg
push
adc
pop
or
push
ficoms
arpl
inc
rorb
jns
and
subl
stc
aad
fwait
cmp
in
or
repnz
lret
mov
jbe
sbb
pop
std
outsb
shr
inc
jecxz
lds
cmp
cmp
into
inc
sub
addr16
push
push
push
or
decb
loop
xchg
pop
cmp
into
fnstsw
jne
ja
push
dec
pop
sub
std
cs
lods
in
out
push
add
sub
mov
cltd
cmp
pop
cmp
pusha
add
test
sub
sbb
ficompl
in
adc
adc
cmp
hlt
pop
ret
in
lahf
lock
push
mov
jecxz
inc
test
orb
cmp
xchg
inc
sahf
std
jg
cmp
lods
xor
idivb
mov
mov
imul
push
sub
iret
xor
cmp
test
mov
jae
sub
jmp
rorl
inc
loopne
xchg
jp
cmc
mov
inc
outsl
pop
iret
loopne
inc
data16
add
notb
imul
je
pop
xor
mov
lock
sbb
pop
fcomp
dec
pop
insb
call
cmp
mov
mov
aam
pop
lock
bound
sub
mov
bound
jne
add
pop
mov
and
jge
and
out
divb
fdivr
cmc
pushf
ret
iret
mov
sub
inc
sbb
inc
mov
js
movsl
mov
mov
rcr
ja
out
mov
jno
insb
dec
ljmp
sub
test
add
test
scas
jne
mov
inc
xor
xor
mov
popa
jno
mov
adc
push
ret
sub
loopne
outsl
inc
cmpsb
pop
out
je
scas
mov
in
cmc
mov
jb
jb
mov
mov
cmpb
xchg
pop
loopne
lds
add
sbb
inc
xor
jmp
cltd
xchg
cli
sub
xor
mov
pop
jg
sbb
pop
cmc
inc
push
dec
inc
scas
push
cmp
test
mov
mov
fnsave
in
or
cltd
mov
jmp
jmp
clc
std
int3
cmc
mov
push
popa
sbb
jmp
je
inc
pushf
aad
stos
lods
cmp
stos
mov
dec
pop
lods
mov
test
test
and
jecxz
aad
xor
sbb
xchg
mov
and
mov
pop
inc
jmp
scas
jne
jae
popa
insl
lods
jne
aaa
xor
xchg
xchg
scas
dec
popf
and
sbb
hlt
pop
movsl
jnp
add
add
std
ljmp
add
xchg
sub
ja
and
repnz
pop
movsl
mov
shr
pushf
mov
or
arpl
out
int3
push
movsl
or
stos
pushf
xchg
ljmp
mov
pop
movsl
test
sub
clc
adc
mov
adc
sbb
jp
jne
push
outsl
outsl
and
mov
movsb
adc
adc
rorl
xor
inc
jl
mov
push
inc
dec
stc
xchg
sbb
dec
jb
dec
jae
xchg
pusha
add
xchg
imul
pop
fdivr
test
push
dec
dec
dec
xchg
mov
xchg
jle
ljmp
dec
and
mov
movsb
push
sbb
loope
inc
ja
roll
idivl
dec
clc
insl
mov
adc
enter
popa
lahf
idivb
ret
add
push
inc
xor
or
orl
stc
ljmp
aam
movsb
in
repnz
add
pusha
das
in
push
or
icebp
and
inc
lods
repnz
mov
loope
jne
test
inc
and
lds
jnp
lcall
sub
add
lock
inc
scas
in
xor
lcall
add
jno
lods
adc
jle
out
sub
cmp
sub
pop
jne
push
mov
xchg
imul
into
subl
dec
filds
arpl
in
push
sub
sbb
mov
cmp
imul
popf
test
lds
mov
push
sub
mov
cld
cmp
sbb
pop
in
lea
jmp
daa
jbe
inc
fidivrs
sub
fisubl
mov
sbb
sbb
xor
icebp
dec
out
or
loopne
das
fidivl
adc
and
mov
repz
leave
xchg
pop
cmpsb
pop
and
inc
aas
out
adc
pop
in
pop
push
scas
pop
dec
push
les
xchg
xlat
ja
add
std
inc
add
and
in
fistpll
loopne
adc
inc
arpl
shl
sbb
xchg
movsl
sbb
and
sti
add
stc
mov
mov
and
mov
test
arpl
pushf
or
ret
or
fs
jns
jge
repz
nop
sub
dec
cmpb
loope
xchg
and
xchg
pop
hlt
mov
fstpl
sub
cmpsb
and
xor
stos
mov
ljmp
jl
int
pop
repz
jecxz
pop
ret
mov
mov
test
cmp
nop
lahf
mov
aam
push
loopne
shll
fildll
push
mov
ret
jo
push
mov
pop
outsl
loopne
inc
push
rcrl
gs
rolb
stos
push
aas
scas
sub
jnp
and
xor
fwait
xchg
push
int3
jp
sub
fsub
mov
cld
into
xor
adc
lea
sub
mov
add
fists
aam
jmp
imul
xor
adcb
test
push
jnp
ds
lods
push
sbb
mov
jp
shlb
xor
insl
out
mov
xchg
push
rcrb
daa
imulb
xchg
ljmp
scas
aaa
lock
push
inc
movsl
or
add
or
es
clc
cmpsl
xchg
ret
xlat
sbb
cmp
push
adc
in
aaa
icebp
or
jno
cmpsb
sbb
cmc
cs
imul
imul
push
dec
xchg
xor
jae
inc
inc
dec
mov
inc
cltd
inc
movsl
aad
stos
sbb
aas
fwait
mov
arpl
push
mov
je
jo
aad
pushf
pop
ss
sub
mov
decl
scas
stos
inc
xor
jg
mov
sbb
or
jg
pushf
and
dec
shr
stc
arpl
lock
outsl
sbb
adc
hlt
cmp
or
js
js
shll
mov
cmp
ret
movsl
rolb
lea
jge
int3
outsl
xchg
sbb
sub
push
rcll
aaa
sbb
push
iret
xchg
cmpsb
aam
outsb
shrd
bound
add
push
jo
add
push
push
sub
sbb
insb
into
mov
xchg
cmp
inc
sub
mov
push
jle
fildll
mov
enter
das
xor
int3
and
ret
sub
jge
adc
push
insb
xchg
movsl
outsb
add
push
inc
out
cs
pop
mov
out
jne
int
mov
xchg
movsb
mov
sub
mov
add
push
xchg
fs
pushf
lret
adc
shrb
loop
fildll
nop
inc
xor
addr16
sbb
sbbl
cli
xchg
add
pop
mov
or
cmpsl
mov
shlb
sub
inc
mov
jge
popf
add
popa
inc
inc
test
aaa
pushf
mov
pop
loopne
fucom
inc
jae
jnp
repnz
jns
andl
outsb
sbb
lds
out
mov
loop
pusha
add
adc
mov
mov
sub
cmc
mov
or
loopne
jge
push
xchg
xchg
lea
lahf
loope
mov
sub
popl
les
dec
rol
inc
inc
sub
fistps
out
cld
push
outsb
das
and
andb
dec
pop
enter
pop
outsl
pop
repnz
mov
ljmp
lahf
leave
std
fidivrl
hlt
inc
mov
sbb
push
aad
mov
aas
mov
push
jno
add
ljmp
pop
lret
cltd
mov
sub
in
push
push
daa
fwait
clc
mov
fstl
mov
sub
into
mov
in
scas
add
push
mov
cmp
test
aad
cmp
mov
pop
cmp
sbb
pusha
sub
lods
sub
std
movsl
clc
repz
mov
fsubrp
in
out
mov
jno
insl
push
push
pop
inc
adc
idivl
insb
xor
fmull
jno
lret
pop
inc
inc
inc
ja
mov
sbb
adc
gs
clc
add
jmp
flds
fwait
or
ds
xor
adc
push
jns
std
push
sbb
push
inc
sbb
inc
in
adc
stos
inc
clc
push
cmp
out
gs
add
mov
or
pop
mov
mov
push
imul
xchg
mov
fdivl
cmp
repnz
xor
loop
add
gs
mov
jns
cwtl
cmp
ja
bound
in
add
bound
testb
repz
pop
pop
fs
in
cmp
leave
sub
scas
je
sub
or
add
sbb
ja
rcl
les
jbe
xlat
jne
adc
sub
cmpsl
aaa
adc
mov
enter
in
adc
loop
and
jecxz
push
test
jo
iret
lods
insb
cmc
ja
mov
sbb
in
into
repnz
ror
in
fucomi
pop
cmp
or
cwtl
aam
stc
stos
es
das
dec
mov
sub
loope
xchg
test
mov
dec
ret
lods
sub
mov
pop
ss
adc
popf
cmp
fwait
mov
add
repnz
and
dec
int3
idivb
int
pop
mov
pop
in
cld
jae
jle
cmpsb
mov
pop
jb
xchg
xchg
sbb
lcall
mov
fidivrl
insb
pop
cwtl
jge
mov
xor
adc
inc
rcrb
test
pop
push
sbb
std
cmpsl
fcomps
dec
popf
fstpl
and
cmpsl
test
inc
mov
or
jae
mov
sti
fisubs
mov
rcr
xchg
ficompl
inc
inc
icebp
pop
outsb
jmp
insb
sbbb
push
cmpsl
sub
sub
inc
in
or
or
cmc
lods
or
xchg
lcall
mov
mov
pop
cs
xchg
pop
lret
or
dec
pop
mov
push
nop
xor
enter
add
rol
jae
aad
cmp
rolb
orb
adc
ljmp
and
sarb
push
fmull
popa
jecxz
pop
fsubrl
fisttpll
mov
in
pop
outsl
pop
push
in
insl
fnstsw
push
daa
push
sub
xor
out
pop
sbb
jns
in
not
loope
mov
dec
test
push
or
cmc
cltd
icebp
cltd
data16
mov
adc
pop
orl
ds
xor
and
pop
jae
pop
sti
pop
shll
pop
add
push
push
sbb
jle
pop
push
and
cmpsb
fstpt
nop
and
mov
sub
mov
shlb
lea
dec
test
mov
xor
mov
aas
cmp
nop
mov
into
sarb
stos
fiaddl
pop
ljmp
cmc
in
push
push
xor
js
add
adc
fs
cltd
xor
bswap
dec
xchg
mov
inc
or
cmp
mov
xchg
cwtl
aas
pop
cmp
inc
imul
frstor
xor
add
sbb
mov
idiv
xorb
and
gs
push
xor
sti
fisubs
addr16
cmpsb
mov
pop
iret
sbb
outsb
popa
pushf
in
dec
fnstcw
sbb
imul
hlt
push
cmp
aad
pop
and
pop
mov
xor
daa
dec
inc
sbb
lods
ret
adc
ja
add
orl
imulb
sti
rcl
pusha
stc
and
mov
mov
push
aas
xchg
cmpsl
inc
jne
xchg
std
add
insb
push
hlt
lcall
ret
out
fwait
sub
pop
faddl
es
inc
in
ret
mov
push
pop
lret
xchg
mov
adc
adc
mov
rcrb
xor
dec
xchg
mov
mov
ret
imul
sbbb
daa
jmp
inc
and
adc
gs
cmp
jp
fdivrl
incb
pop
int3
push
mov
xor
cmp
mov
aas
add
push
xchg
movsl
fiadds
in
pop
sarl
orb
lahf
inc
movsl
add
mov
je
inc
inc
jp
ss
push
and
pop
and
adc
clc
es
gs
testl
insb
outsb
cmp
xchg
inc
sbb
lret
xchg
mov
sbb
mov
jae
les
in
inc
xor
cmpsb
imul
or
push
icebp
daa
andb
sahf
test
data16
pop
jle
xor
or
insl
cli
ljmp
leave
addr16
adc
in
xchg
sub
xor
adc
cmp
jg
mov
aaa
mov
and
jbe
cmp
pop
pop
daa
and
xchg
xchg
xlat
xor
ds
cld
inc
pusha
dec
sub
test
enter
add
daa
lcall
movl
pop
shll
outsb
in
ficomps
jp
jnp
push
inc
sahf
mov
cmp
inc
cmp
aaa
cwtl
inc
inc
fildl
sbb
cmp
dec
aad
mov
sub
ret
adc
cmp
cld
test
xor
cmpsb
push
xlat
push
mov
enter
mov
or
xchg
cld
xor
cmp
mov
adc
xchg
insl
in
cmp
scas
sbb
in
test
les
dec
xor
mov
inc
in
mov
ss
inc
arpl
cmp
lods
movsl
mov
into
lret
imul
rcll
lret
fcomip
rcrl
adc
dec
addb
jmp
in
dec
popa
outsl
mov
cltd
mov
mov
cwtl
push
xchg
and
inc
cmp
dec
imull
imul
into
jae
mov
inc
push
std
xlat
dec
or
pop
lods
frstor
and
pop
inc
das
dec
pop
push
cmovp
imul
push
jnp
scas
aas
mov
mov
push
aad
pslld
or
in
mov
outsb
testb
popf
inc
xchg
adc
mov
adc
popa
mov
inc
pop
add
fs
sahf
aas
movsb
jecxz
sub
sbb
push
xlat
ljmp
add
push
jae
sub
mov
sti
jb
out
cmp
sahf
movsb
push
fstpt
add
pop
fcmovu
jbe
divl
daa
mov
xchg
mov
push
xchg
repnz
jns
sbbb
cmp
ja
jl
push
cmp
lods
ficomps
cli
mov
loopne
pop
sbb
pop
outsl
inc
fsubl
cmpsb
xchg
xchg
mov
jle
mov
mov
ja
mov
sbb
jl
lods
repnz
sbb
cmp
frstor
repnz
pusha
stc
adc
ret
mov
addr16
dec
aam
jle
sbb
cmc
sub
popf
mov
cld
fwait
jmp
test
bound
sbb
and
sarl
add
mov
inc
push
sub
pop
in
mov
ja
incl
jmp
test
mov
stc
mov
arpl
xchg
faddl
js
aaa
and
and
push
dec
adc
push
ss
lcall
sbb
sbb
cmp
cld
movsb
jb
adc
lods
push
in
mov
lea
cli
test
inc
fsts
movsb
adc
fists
fs
int3
xchg
xlat
lret
dec
jbe
push
out
mov
xchg
fildl
adc
mov
cld
rorl
push
fistpl
or
push
or
push
js
rorb
or
ds
sub
ret
add
sub
scas
ja
and
xchg
repnz
xchg
ss
repnz
loopne
dec
mov
out
jle
xor
cmp
mov
mov
std
add
sbb
dec
aaa
mov
lahf
push
arpl
mov
inc
jnp
add
sbb
bnd
je
inc
imul
hlt
aas
lock
cmp
loope
in
mov
popa
or
pusha
aad
xor
add
std
jbe
popa
outsl
in
in
jl
bound
sub
mov
ljmp
in
pop
daa
daa
fbstp
cmp
fstpl
mov
push
xor
aam
inc
cmc
ret
stos
cltd
addl
imul
jl
movsl
cwtl
mov
jnp
sub
divb
daa
out
div
xchg
lea
mov
mov
mov
das
push
jmp
dec
mov
in
push
jl
dec
push
jmp
mov
jmp
jo
andl
bound
adc
ret
lret
fdivrl
pop
dec
dec
bound
into
and
cmp
push
and
shrl
cmp
cltd
les
test
daa
xchg
push
nop
js
lods
xchg
or
or
mov
cwtl
cmp
mov
es
data16
pop
orl
fisttpll
subb
dec
pop
cli
sti
cli
xchg
cli
mov
cmp
xchg
je
jecxz
pop
rcr
adc
adcl
fwait
jae
insl
imul
js
repz
pop
hlt
cmp
movsb
adc
jae
sar
lds
cld
sbb
mov
shrb
xlat
and
cltd
ret
xor
int
pop
jbe
xchg
jne
xor
arpl
repnz
mov
jns
movsb
or
add
lods
pop
dec
xchg
mov
mov
out
daa
dec
xor
and
test
les
push
fsubrs
addr16
cmp
pusha
xchg
in
sti
inc
inc
pusha
xchg
add
in
mov
test
fwait
push
not
pop
jnp
and
addr16
and
shrb
stos
xchg
jl
outsb
clc
cs
ljmp
andb
xlat
mov
lcall
inc
lret
jg
das
loope
xchg
std
loope
jb
push
mov
or
adc
aad
mov
mov
adc
adc
sub
and
inc
mov
lods
mov
jbe
bound
xchg
nop
xchg
inc
adc
aam
repz
aam
loopne
insl
aas
int
es
adc
jb
ds
cltd
mov
aaa
mov
sub
adc
dec
adc
in
int3
cli
arpl
loop
ja
popf
loop
or
fbld
adc
push
loop
lret
ss
pop
imulb
jge
arpl
icebp
in
data16
add
dec
mov
subb
pop
xlat
mov
mov
push
js
cs
xchg
mov
imul
decl
inc
push
push
sahf
fs
adc
push
aas
test
dec
mov
mov
ret
mov
nop
out
dec
faddl
inc
push
popf
ss
std
lds
aad
or
cs
popa
out
cmp
add
scas
test
ja
fcmovbe
lock
mov
push
jle
cmc
lods
inc
sub
lock
addl
or
stc
xor
mov
sarb
cmc
or
push
mov
mov
fdivrl
sbb
mov
out
jnp
push
inc
cmc
xchg
cwtl
adc
ret
int
lock
push
push
jecxz
std
dec
jmp
test
mov
push
bound
je
jae
jecxz
ds
fwait
push
das
mov
out
xchg
xor
insl
xchg
lea
daa
lock
lret
insl
xor
cmp
adc
pop
and
adc
clc
imul
push
loope
sub
shlb
sub
or
ret
push
repnz
out
loope
hlt
xchg
lock
scas
pop
jns
pop
sub
movsb
mov
mov
rclb
pop
aaa
test
je
or
orb
aam
mov
dec
xchg
push
cmp
pop
mov
jno
rolb
fbld
sub
out
pop
add
mov
cmp
jle
into
movsb
or
adc
xor
cmp
out
sub
data16
pop
pop
ficompl
inc
mov
nop
mov
mov
ljmp
in
inc
dec
aam
sub
jp
outsl
push
cmp
fildll
dec
fcos
sub
cltd
idivb
add
fwait
adc
shlb
push
into
mov
arpl
orb
inc
and
inc
inc
mov
movsb
add
lcall
jns
inc
ret
add
out
and
jo
cs
mov
or
pop
jmp
add
gs
call
adc
call
adc
mov
cmp
sub
mov
scas
jo
mov
push
jae
mov
pop
loopne
mov
rorb
loope
mov
jp
in
cwtl
aad
mov
popf
repnz
pop
dec
rol
jbe
rcr
sbb
cmovge
mov
xor
cmp
std
mov
sub
sub
ficoml
jo
cltd
mov
mov
data16
mov
in
and
dec
pop
push
jo
in
jmp
pusha
sub
add
push
add
ja
sub
xor
inc
xlat
jg
mov
push
mov
cmc
lods
push
ds
pop
add
push
inc
outsl
popf
mul
test
arpl
mov
leave
mov
sbb
push
arpl
dec
ficompl
dec
jmp
inc
push
sub
call
add
mov
aad
js
mov
xchg
mov
push
icebp
pop
fcmovnbe
push
imul
jmp
pop
sbb
sub
subb
push
add
ds
add
fld
pop
lahf
pop
or
imul
xchg
out
push
hlt
jmp
popf
mov
or
inc
inc
popa
sub
cmp
jb
sbb
mov
push
das
int3
sub
hlt
xor
rsqrtps
cmp
rcl
lret
jbe
or
gs
push
addr16
repnz
pusha
mov
rcl
sbb
mov
mov
fdiv
loop
hlt
xchg
repnz
test
cmp
pop
xor
pop
out
movsl
shl
pop
sub
lcallw
iret
push
sbb
push
dec
test
push
out
movsb
repnz
jmp
adc
jecxz,pt
mov
add
add
aas
inc
xor
jno
cmp
into
iret
sbb
iret
fstpt
in
fdivp
in
xor
mov
int
std
sbb
movsl
in
xor
dec
cmc
add
rol
decb
cmp
push
jecxz,pn
gs
mov
lods
mov
fcomps
push
sbb
inc
mov
cmpsl
xlat
dec
inc
dec
bound
mov
push
inc
mov
xchg
sti
inc
gs
jmp
xor
sbb
xchg
lret
mov
inc
pop
cli
std
jae
dec
cmpl
daa
mov
jnp
mov
jb
mov
cmp
mov
add
inc
shlb
in
xchg
addr16
mov
mov
fldl
jo
adc
lahf
rcl
sbb
adc
mov
push
lods
push
inc
push
jge
jbe
js
pop
pop
outsl
scas
aaa
xor
popa
mov
mov
cmp
shl
fsubl
mov
adc
fdivs
cmpsl
mov
jb
mov
and
pop
inc
ret
movl
shll
lea
sbb
adc
idivl
jo
xchg
iret
jge
ret
xor
inc
push
add
mov
push
lret
xor
sub
data16
mov
cmp
and
outsl
xchg
or
xchg
ror
cmp
daa
out
xor
inc
dec
loope
and
test
mov
jae
or
mov
sub
data16
daa
cmp
js
mov
or
pop
dec
nop
ss
sub
push
pop
std
push
push
add
je
inc
inc
cmc
fadds
pop
dec
ja
clc
lret
bound
lea
cmp
cwtl
adc
cmp
xchg
pop
add
sbb
pop
in
cmp
inc
insb
jp
lock
mov
fnstcw
loop
enter
pop
inc
addr16
mov
mov
test
loope
orl
roll
cmp
insb
fldl
sti
andl
xchg
stos
sub
push
sub
sti
mov
js
das
les
imul
jge
push
in
adc
cld
pusha
les
aas
xchg
sub
or
adc
in
adc
scas
enter
mov
mov
test
push
sbb
pop
pop
scas
add
out
cli
popf
out
outsb
fwait
imul
xor
jg
push
in
jne
pop
aam
fisttpl
pop
loope
sti
cld
cmp
jbe
xor
fistps
rorb
iret
cmp
jmp
adc
jnp
and
and
xchg
lret
icebp
mov
incb
sbb
lea
cmpsb
add
nop
scas
jge
push
fisttpl
pop
movb
mov
arpl
dec
enter
push
into
or
xchg
mov
int3
fnstenv
lock
adc
cmp
cmp
addl
and
jne
sbb
mov
mov
jae
add
jb
lock
dec
iret
shrd
nop
mov
cmpsl
sbb
mov
and
in
lods
test
cld
fidivrl
push
repnz
lret
movsl
cmp
ljmp
mov
mov
fidivl
mov
rclb
jle
push
dec
sbb
lret
daa
inc
pusha
cli
push
mov
aam
xchg
sahf
xchg
sti
cmp
mov
sub
dec
mov
mov
inc
in
jg
jmp
xor
stc
dec
mov
iret
fcomps
insb
cltd
push
jl
jge
dec
push
add
and
adc
pop
adc
pop
sub
xchg
adc
push
inc
pusha
stos
jnp
and
sub
stos
mov
sbb
xlat
dec
jle
in
into
mov
insl
pop
popa
xchg
and
test
testl
adc
ret
sub
out
jl
ret
fcmovnbe
gs
popl
push
cmp
add
xchg
xchg
xchg
ljmp
cmp
pop
xchg
rclb
xor
icebp
dec
imul
orb
inc
push
lcall
insb
dec
inc
jg
das
mov
imul
push
shrb
sub
out
imul
data16
jmp
data16
push
sbb
inc
jbe
roll
pop
pop
push
outsl
outsb
pop
aam
mov
and
inc
mov
add
xchg
fdivp
fisttpl
xchg
daa
push
lock
mov
call
icebp
cmpsb
aad
jb
cwtl
mov
mov
push
fildll
xchg
ljmp
repz
dec
and
loopne
sti
aad
fisttpll
dec
pushf
sti
lret
push
xchg
sarb
addb
dec
and
push
pop
rcll
outsl
iret
div
cmp
and
push
sub
jg
push
sub
outsb
sti
fistps
dec
adc
jmp
mov
js
jns
dec
pop
jmp
scas
arpl
fidivrl
xchg
inc
into
add
mov
cmpb
int3
out
sarb
mov
mov
stos
cltd
cmp
jg
sub
jp
and
pop
xor
lds
lret
add
add
jecxz
mov
jmp
push
jne
and
popa
pusha
outsl
cmp
ds
rol
inc
mov
mov
or
stos
jg
push
sbb
jl
add
icebp
add
jecxz
insl
xchg
cmp
aad
pop
cmpb
test
insl
stos
shrl
movsl
cmpsb
push
jle
or
xchg
jp
in
std
ret
jns
dec
es
mov
pop
pop
stc
or
mov
cltd
sbb
ljmp
insb
mov
jle
push
mov
xor
pop
xchg
mov
dec
adc
cmp
adc
js
ficompl
jp
inc
pop
mov
test
jns
lcall
jle
xor
mov
sub
js
leave
daa
fs
loope
out
pusha
cltd
insl
mov
adc
jp
loopne
test
call
leave
sub
pop
jmp
dec
mov
rol
xor
ja
iret
jmp
ja
or
subb
mov
add
das
xchg
scas
cmp
stos
pop
test
gs
lds
cmp
push
out
mov
shrl
outsl
fmull
xor
xor
jno
push
dec
sbb
mov
pusha
cmpsb
mov
pop
dec
mov
add
push
jbe
into
cwtl
sbb
mov
and
jmp
or
scas
daa
jle
and
mov
and
je
rol
cmpsl
mov
roll
push
dec
mov
lret
int3
jo
out
pop
leave
adc
mov
lea
xchg
xor
and
pop
cld
faddl
cmp
lock
jge
xchg
repnz
arpl
cmp
jl
inc
js
rcrb
inc
lahf
fstpt
arpl
sub
mov
cmp
aad
xchg
int3
pop
push
insl
movsb
cwtl
jle
loopne
xchg
incb
fwait
pop
into
fs
cli
gs
mov
and
or
xor
cmp
mov
scas
push
or
rcl
js
push
xor
int
imul
mov
stos
jb
sti
jmp
lds
in
cmp
cmp
dec
jo
add
mov
sub
popl
clc
sbb
dec
js
fnsave
lret
dec
jne
xchg
fnsave
mov
push
shlb
push
jne
outsb
inc
ds
pop
fldenv
mov
pop
rcr
cmpsb
or
sbb
cmp
adc
push
rcr
je
cmp
in
inc
fs
jg
test
fldl
cld
rcll
sbb
out
shlb
fstl
fs
mov
popa
mov
cmp
sub
clc
mov
fdivrs
in
jbe
jge
inc
fstpt
or
addl
xlat
add
dec
aad
lock
jne
bound
add
xchg
lcall
ror
and
ja
sbb
arpl
insb
stc
pop
jbe,pn
lea
in
mov
dec
xor
fidivrl
imul
mov
xor
cmp
mov
std
mov
aad
sarb
enter
and
sub
pop
and
xlat
xchg
outsl
sub
xchg
leave
mov
xchg
in
call
fdivrl
jg
loop
mov
mov
lods
jl
loope
stos
fistl
xor
lahf
cli
lea
fldl
pop
stc
fcomps
out
cli
sbb
testb
mov
cmp
test
adc
sbb
pop
out
loopne
ljmp
jg
mov
xchg
adcl
push
or
add
jb
mov
dec
mov
mov
jl
lock
stc
push
dec
incl
and
xor
outsl
std
scas
divb
inc
lods
push
mov
jae
push
fmuls
and
fdivrp
cmp
adc
pop
or
fdivrl
outsb
das
lret
lock
mov
jg
push
cmc
jnp
dec
mov
iret
lahf
inc
cmp
inc
test
cmp
xchg
into
shl
pop
push
mov
cwtl
lret
fldenv
outsl
das
lods
aam
mov
jo
sahf
xor
inc
pop
add
cmp
test
xor
sarb
js
mov
and
xchg
shl
addr16
lret
icebp
inc
push
xchg
dec
mov
mov
push
fdivrp
lret
insb
and
ret
call
sahf
push
addr16
and
mov
repz
idivb
pusha
pop
shlb
not
imul
add
cmpsl
scas
stc
push
test
push
inc
xor
jmp
adc
ja
jg
xor
cwtl
fnsave
frndint
fcmovne
rorl
mov
sub
jmp
cwtl
mov
outsl
shr
imul
cld
adc
jo
insl
test
fcoml
cwtl
fsubr
pop
push
pop
push
lret
jns
call
mov
sub
into
aad
inc
xor
stos
xlat
outsb
test
fcoml
jg
xlat
pusha
and
cmc
jl,pt
push
mov
dec
add
stos
cmp
sub
push
push
push
dec
cmpsb
ficoms
addl
aas
imul
xchg
cltd
cmpsl
jecxz
ljmp
adc
dec
sub
orl
pusha
pop
mov
pusha
aam
stos
dec
stos
in
push
les
fiadds
jnp
add
insl
mov
cmp
jns
fstl
popf
orb
push
outsl
enter
insl
mov
adc
mov
cmp
inc
pop
cmp
jne
repnz
sub
clc
mov
mov
jns
pop
leave
ret
aam
iret
lds
pusha
add
mov
inc
xchg
inc
push
mov
pusha
mov
xor
cmp
es
out
lds
bound
inc
push
cmp
lock
xchg
jbe
cmp
sbb
lcall
test
inc
les
inc
in
jne
or
xchg
mov
sub
shlb
popf
xchg
jb
mov
or
mov
mov
sub
in
push
daa
jno
sbb
cmpb
popa
loop
push
fdivs
xor
mov
jns
out
stos
orb
test
mov
fildl
add
adc
push
xchg
stos
pop
and
inc
into
lcall
adc
add
mov
notl
mov
enter
lahf
or
imul
jge
popa
xadd
insb
pop
stos
push
mov
clc
movsb
push
aam
inc
rcrl
add
dec
fidivrs
push
cwtl
aas
stos
mov
mov
lods
insb
mov
stc
xchg
sti
clc
dec
ret
mov
xchg
cmp
dec
jbe
rcrb
dec
or
xor
leave
sub
shrl
int3
xor
cltd
mov
fwait
pop
lods
inc
test
sub
es
into
std
jmp
out
adc
add
mov
sbb
dec
inc
aaa
mov
mov
sub
xorb
cli
mov
mov
xlat
cmp
lods
pop
call
pop
xchg
xorl
in
jecxz
daa
pop
imul
push
daa
jbe
mull
ret
es
jnp
push
stc
dec
xchg
pop
pop
pop
fmul
and
aaa
dec
cmp
adc
xor
loopne
dec
add
inc
movnti
daa
push
mov
inc
pop
jg
aad
pop
scas
roll
xchg
push
jl
cmp
xor
test
cld
mov
fcmovnb
fcoms
sub
scas
mov
or
dec
pop
ret
adc
mov
mov
or
mov
test
sahf
mov
xchg
cmpb
mov
sbb
dec
jl
jp
jecxz
xor
and
cltd
lcall
jns
cmp
pop
sub
lret
pop
and
pop
sbb
sub
mov
xchg
jg
mov
test
mov
dec
sub
inc
push
mov
test
xchg
xchg
cld
xorb
adc
dec
cmp
add
lea
outsb
out
pop
lods
aam
jns
dec
mov
testb
and
imul
shll
fxch
jno
inc
pop
push
ljmp
mov
out
mov
sub
dec
jnp
sbb
cmp
and
stos
and
or
loope
cmpsl
inc
adc
aad
sti
je
mov
clc
jp
aas
loope
insb
hlt
mov
cltd
popa
lcall
mov
push
and
pushf
call
js
inc
cmp
jae
vpunpcklqdq
jle
xor
xchg
sbb
stc
rcll
mov
inc
mov
loop
or
inc
or
das
add
jo
push
sbb
fidivs
sbb
test
mov
lock
mov
pop
int3
call
jp
add
push
jg
pusha
cmpsb
mov
sbb
leave
sbb
shrb
dec
pusha
insl
popa
mov
out
cmpsb
popa
sbb
incl
adc
test
or
shrb
add
cltd
loopne
outsl
les
sub
push
leave
hlt
ja
in
xor
dec
xlat
and
push
scas
xor
adc
jg
test
mov
jmp
insb
adcb
iret
jbe
jbe
out
fidivrl
popl
std
sbb
loop
lds
pop
cmp
dec
into
cmpsb
jbe
lcall
fisttpll
pop
outsl
sbb
negb
in
mov
arpl
cmpsl
dec
loope
je
push
mov
scas
sar
jge
mov
lret
fimull
stos
rcrb
xchg
jle
pop
test
rclb
jne
mov
loop
fbstp
sbb
lret
mov
xor
popf
sub
inc
dec
sbb
push
mov
sub
mov
or
push
pop
aam
or
lods
insb
jb
push
dec
mov
jp
adc
push
jns
jecxz
cmpl
mov
pop
push
pop
insl
jl
loope
cltd
jne
imul
outsb
into
mov
rolb
xlat
repz
adc
pop
aad
pop
sbb
jo
data16
in
jb
sahf
test
mov
or
sahf
pusha
mov
add
xor
mov
dec
or
pushf
iret
mov
jne
aam
pop
push
decl
imul
mov
mov
enter
and
lods
ret
add
cmp
inc
mov
xor
imul
inc
pop
xorl
sub
std
orb
add
fcmovu
jg
fistpll
dec
imul
hlt
sub
fisubrs
pop
mov
daa
push
mov
and
gs
or
enter
hlt
adc
sbb
enter
ror
lcall
xchg
mov
cmp
jns
cmp
fdivrp
jbe
enter
lock
push
cmpsb
cltd
data16
adc
call
jl
stc
xor
push
insl
xchg
xor
mov
dec
adc
cmp
sbb
pop
jb
repz
imul
jae
xchg
or
mov
xor
mov
ret
std
inc
ljmp
popa
pop
icebp
fimull
mov
cld
cmp
and
jns
push
clc
loope
loop
test
subl
aam
push
cmp
fcoms
cmp
mov
xchg
adc
xor
dec
push
lahf
lahf
in
mov
xchg
jl
stos
mov
into
repz
cs
push
arpl
mov
cmp
iret
push
aam
add
out
icebp
xchg
aaa
adc
inc
das
pop
sbb
cmpsl
xchg
pop
cmp
hlt
movsl
adc
idivl
dec
scas
cltd
inc
imull
fidivs
dec
and
idivb
hlt
jl
in
aad
pop
movsb
es
or
mov
addb
push
pop
xchg
ficompl
mov
sbb
xor
inc
add
lret
mov
shrl
inc
cli
pop
push
dec
push
shlb
push
popf
xor
ss
outsl
adc
pop
mov
icebp
cmp
sbb
mov
cmpsl
sub
sarb
in
mov
mov
push
fnclex
rcrb
ljmp
ficomps
lods
lcall
inc
gs
insl
lahf
push
and
or
sti
pop
fildl
xor
test
cs
clc
mov
add
jmp
lahf
mov
mov
test
jb
shll
cmp
xor
out
ss
cmpsb
mov
rol
push
mov
sub
scas
fstl
test
out
push
fs
insl
jns
mov
jbe
adc
movsl
jae
jnp
in
das
inc
stos
adc
xchg
sbb
insl
ror
sub
nop
fimuls
out
xorl
fnstenv
xorb
and
and
inc
dec
aad
adc
xor
mov
mov
lods
in
fcoms
imul
cltd
lcall
cmp
inc
pop
push
push
pop
adc
repnz
jmp
sahf
rcrb
fwait
xor
pop
add
imul
shll
es
sbb
mov
seta
cwtl
stos
inc
mov
lods
xchg
je
mov
inc
pop
push
cwtl
ljmp
in
ds
xor
mov
push
dec
xchg
ds
pushf
pop
push
rolb
or
lret
xorl
adc
dec
push
dec
mov
dec
sbb
iret
in
cltd
inc
and
jns
sbb
and
mov
pusha
adc
mov
aas
lds
jne
sahf
imul
into
movsl
cs
push
imul
and
push
js
dec
push
xchg
imul
jbe
jno
mov
mov
gs
jl
mov
add
rolb
push
aad
mov
int
mov
mov
mov
dec
fwait
push
scas
push
dec
and
mov
add
test
out
mov
mov
jbe
repz
mov
lret
xchg
mov
aas
lock
jns
into
ret
mov
or
and
repz
or
sbb
xlat
sbb
fcmovu
mov
pop
sti
hlt
arpl
push
and
xchg
les
sbbb
pushf
sbb
cmp
cs
pop
xchg
pop
enter
xchg
xor
cmp
mov
leave
sbb
rcr
xor
pop
loope
aad
jp
mov
in
mov
xchg
ror
xchg
adc
cltd
sbbb
mov
or
xchg
scas
push
jbe
dec
xchg
out
mov
pop
mull
inc
ss
push
dec
cmpsl
or
mov
pop
sub
cmp
jno
xchg
dec
pop
and
jge
sbb
push
mov
mov
arpl
cmp
fldcw
or
mov
push
mov
aas
cld
inc
fldenv
rcl
add
test
inc
in
mov
cmp
jp
inc
shrb
xor
dec
in
mov
cmp
clc
fcomps
jecxz
xchg
sbb
pop
andb
sbb
lahf
negb
test
int3
and
mov
dec
mov
push
cld
adc
dec
mov
jmp
push
test
cwtl
lds
mov
xor
ja
dec
xor
pop
cmc
test
bound
sbb
push
inc
daa
pop
mov
xchg
pop
dec
jle
add
pop
clc
adc
inc
movsl
and
push
jne
mov
dec
jle
cmp
sub
mov
pop
lret
add
add
fistl
cmp
aaa
cmp
scas
xor
fistl
mov
out
push
comiss
stos
imul
xlat
fs
cltd
adc
loope
ficomps
jae
mov
xor
mov
cmp
outsl
jge
packuswb
inc
sbb
jl
int
sbb
ss
cltd
mov
jb
add
and
jle
rcrl
push
jmp
xchg
sbb
dec
mov
pusha
mov
jle
inc
gs
cmc
jb
or
shlb
dec
xchg
ja
xchg
mov
add
sbb
fs
popa
popf
sbb
lods
xchg
adc
leave
rcl
out
lret
pop
in
shrb
sub
jbe
sub
lock
adc
imul
mov
xchg
push
je
cmpsb
out
ljmp
cmpsl
inc
mull
pushw
call
fstpl
xor
popa
dec
addb
sahf
dec
mov
in
in
test
pushf
js
je
loope
and
loopne
dec
sub
add
rcrb
stos
mov
mov
lods
mov
push
jae
lret
pop
ficoml
fdivr
adc
js
lds
adc
loope
loopne
dec
jno
outsl
sar
cmpsl
mov
add
cli
jne
mov
movsb
cmp
mov
mov
jge
xchg
lock
roll
outsb
add
sub
jle
mov
repz
ljmp
enter
cmpsl
cmp
push
hlt
outsb
xchg
leave
repnz
aam
sub
hlt
sub
test
shlb
xchg
push
sub
mov
popa
arpl
stc
pop
mov
mov
les
xchg
insb
lcall
ss
out
aaa
sub
jno
xchg
xlat
in
mov
xor
sbb
mov
mov
dec
in
push
mov
or
adc
mov
pusha
push
imul
cmp
cmp
icebp
cltd
mov
fbld
inc
dec
out
sbb
mov
cmpsl
out
imul
add
push
and
pushf
stos
aam
push
mov
sahf
scas
insl
std
lds
add
fldt
addr16
movsb
adc
pop
dec
jo
xor
daa
icebp
mov
xor
push
leave
stc
jne
cmp
std
sbb
adc
pop
mov
or
orl
aas
pop
jno
and
pop
push
cwtl
aam
cmp
xchg
fcmove
pop
inc
mov
mov
xchg
movsb
add
data16
sub
xor
xchg
lds
pop
fwait
mov
mov
fbstp
or
popf
xchg
xor
aas
mov
add
lret
or
jne
jmp
movsb
pop
popf
add
rclb
mov
bound
mov
inc
in
loopne
pop
rolb
sbb
and
jb
jne
pop
add
xchg
std
and
arpl
imul
adc
fidivs
aaa
push
adcb
std
fwait
mov
push
test
adc
or
sub
adc
add
hlt
movsl
or
add
and
adc
dec
xor
jns
adc
call
inc
pop
icebp
inc
gs
aad
in
fbstp
mov
push
xchg
mov
adc
adc
insl
push
out
mov
rolb
or
outsl
sub
in
cmp
lcall
in
call
cmp
inc
xchg
pusha
sbb
popf
data16
xor
sbb
enter
or
sub
int
pop
ljmp
shrb
sbb
mov
pmaddwd
fnsave
das
pop
jo
les
mov
inc
jg
cld
or
daa
jge
imul
bnd
iret
mov
xchg
loope
faddl
fcoml
push
cmp
sbb
std
rcll
addl
iret
sub
fisttpl
mov
insb
pop
aaa
addr16
pop
push
jns
mov
push
jp
sbb
push
or
ds
sub
xorb
arpl
out
ljmp
pop
fs
loope
mov
aam
rol
je
add
inc
ds
imul
mov
shrl
lret
rclb
rcrl
test
sbb
mov
loopne
cmp
cmp
add
test
sbb
cmp
mov
jne
mov
mov
mul
scas
pop
ret
inc
lods
lods
popa
nop
sub
mov
std
xchg
ret
bound
popf
mov
sbb
shll
and
sbb
sarl
test
xor
adc
sbb
cmp
jno
jnp
add
ds
fs
aas
push
pop
mov
popa
ret
sbb
push
insl
sahf
fists
jle
and
sbbb
es
cmp
insb
inc
mov
xorb
repnz
aas
addr16
cmp
std
pop
mov
dec
cli
inc
inc
or
lret
aam
stos
jmp
jmp
cmp
movsl
add
lahf
cmpsb
ja
std
push
into
adc
call
loop
dec
iret
xchg
lahf
stc
sbb
inc
imul
cmp
or
or
and
jae
clc
lret
adc
xchg
aaa
pop
out
pusha
in
jge
data16
in
nop
xchg
inc
in
jmp
cld
xchg
dec
rcr
mov
int3
shrl
aaa
ljmp
push
push
xchg
xchg
ss
rcrb
push
mov
or
decb
mov
das
mov
pop
push
pop
lahf
daa
daa
jl
xchg
mov
lcall
out
mov
inc
loop
outsb
insb
add
cld
ret
sbb
push
or
dec
jae
jns
jno
mov
adc
test
ret
hlt
add
adcb
sub
mov
bound
scas
adcb
stos
addb
ret
clc
addl
jno
sub
stos
jns
clc
or
add
jne
xor
jb
dec
fucomp
xchg
pop
or
jnp
xchg
or
xor
xchg
mov
movsl
mov
push
xchg
rolb
inc
imul
add
ljmp
mov
mov
mov
les
ja
int3
mov
jecxz
mov
jle,pt
and
inc
and
and
stos
mov
mov
and
mov
add
shll
loopne
fstp
jb
imul
xlat
lcall
out
ljmp
imul
jecxz
xor
mov
cmp
gs
cmp
mov
pushf
mov
adc
leave
ret
jno
push
cmp
pop
aaa
sbb
cld
xchg
push
dec
fdivs
and
ret
arpl
dec
or
popf
fcoml
lret
add
ja
jno
xor
ret
push
nop
outsb
cmpsl
movsb
and
out
aaa
xchg
clc
sbb
mov
inc
leave
mov
add
jo
push
jae
and
outsl
jns
in
js
jae
out
mov
out
cmp
data16
ds
push
pop
dec
outsb
push
sti
jmp
js
cmpsl
lahf
scas
pop
pop
scas
int
fprem1
out
mov
pop
out
fwait
and
mov
cwtl
ret
jno
mov
sub
cli
mov
icebp
mov
rclb
add
and
cmp
mov
dec
adc
out
faddp
xor
fwait
adc
jecxz
bound
lahf
ret
pop
add
sub
and
sub
pop
xor
lahf
mov
bound
add
stc
mov
push
adc
jbe
dec
or
jp
xchg
cltd
test
jecxz
xlat
daa
popf
sub
pop
xor
mov
cwtl
sbb
inc
call
cmp
push
adc
into
inc
sbb
sub
sub
jbe
fstl
popf
fidivrs
shlb
push
and
shrb
mov
xchg
xor
notl
cwtl
or
jnp
lock
cmp
mov
mov
stc
mov
sub
and
add
sub
push
std
leave
in
outsb
dec
lock
scas
adc
shll
sbb
out
or
ret
push
jg
jno
dec
sub
and
stc
es
aas
or
sbb
call
or
ret
cmp
or
pushf
mov
mov
dec
cmc
popa
mov
or
in
lds
xchg
mov
lock
lcall
jbe
out
ljmp
imul
add
mov
hlt
dec
shl
sub
shrl
lods
repz
mov
add
dec
add
pop
repnz
adc
repz
ja
lcall
dec
pop
fstl
jmp
bound
jle
xor
or
pushf
cmp
clc
and
in
xlat
sub
fldl
push
push
push
xchg
loop
je
dec
lock
test
test
sub
and
pop
sbb
cmp
add
jae
inc
stc
xor
mov
jb
popf
jo
adc
inc
add
dec
mov
add
loop
xor
jno
mov
sar
cli
cli
xchg
or
in
js
inc
cmp
mov
jmp
jo
or
inc
lods
in
out
and
xchg
jns
ljmp
fdivr
pop
hlt
jns
mov
sti
aas
xchg
shlb
push
push
push
ja
mov
mov
imul
lcall
sbb
bound
sar
lock
dec
jmp
rcll
mov
out
icebp
add
inc
out
push
or
in
jmp
inc
out
pop
loop
ror
hlt
jmp
pushf
add
cmpsb
fdivrl
mov
push
rclb
push
lods
and
pop
and
mov
ss
jae
movsl
pop
hlt
adc
movsl
daa
dec
push
push
aam
xchg
test
dec
loope
dec
stos
pop
sub
inc
in
test
sub
loope
xor
add
or
into
dec
mov
sub
testl
adc
push
pop
push
and
sub
cmp
outsb
addr16
pop
mov
and
gs
mov
clc
inc
or
push
iret
call
or
cmp
sbb
xor
cmp
push
shrl
ss
mov
sahf
dec
mov
lods
pop
mov
int3
xchg
pop
push
fwait
add
mov
arpl
repnz
out
mov
jmp
sti
jge
rcll
push
pop
sub
sti
in
sub
aas
ds
fdivrp
push
loope
outsb
cmp
mov
adc
sbb
mov
mov
jns
jecxz
mov
or
inc
mov
or
xor
pop
mov
jnp
inc
pusha
ja
and
mov
dec
out
out
dec
out
in
mov
mov
mov
pop
aam
mov
popa
mov
insl
ljmp
fsubs
faddl
out
data16
add
push
pop
popa
pop
jo
cmp
xchg
and
jp
mov
int3
sar
cmp
aad
cmpsb
jo
xor
xchg
pop
sbb
adc
cwtl
shrd
xor
dec
xchg
lds
fisubl
lods
loop
mov
cmp
cli
jmp
adc
insl
in
add
stc
shrb
push
mov
jo
not
and
mov
xchg
ret
fst
iret
jo
in
out
dec
das
mov
clc
lret
int
mov
aaa
fmull
test
sub
shrb
sub
mov
cmpsb
clc
jb
cmp
push
lock
or
mov
jmp
jne
lcall
and
out
xchg
jb
xor
mov
jne
in
and
sbb
pop
and
and
daa
pop
call
outsb
add
mov
test
out
mov
adc
repz
xor
push
mov
adc
shrb
cmp
sahf
repz
repnz
rcl
stos
pop
xchg
cmp
fs
clc
jmp
lcall
loop
repz
pop
or
js
push
popa
sbb
add
xchg
fcompl
pop
cs
call
or
dec
out
in
jae
in
mov
mov
jbe
mov
stos
sarl
cmp
mov
xlat
mov
sbb
jl
push
or
cmp
aad
mulb
inc
add
cmpl
in
mov
mov
fildll
mov
out
or
loop
jg
fistl
xlat
xchg
test
repnz
pushf
lods
pop
push
or
in
iret
mov
mov
xor
stc
mov
fcmovne
xchg
out
dec
and
enter
cmc
int
cld
cmp
popf
pusha
mov
push
dec
cld
cmp
scas
or
cmp
pop
pop
dec
ds
data16
loop
jle
and
in
mov
jle
pusha
mov
cmp
sti
xchg
mov
and
mov
cmp
stos
nop
ja
push
ljmp
push
aaa
lds
pop
dec
sahf
sub
stos
in
xor
cmp
andb
stos
mov
enter
cmc
xchg
mov
lods
jmp
data16
cmp
cmp
xchg
mov
notb
sub
xor
pop
pop
xchg
inc
sub
mov
sub
aas
jae
pop
outsl
pop
ficoml
jne
xor
clc
sarb
xor
out
imul
hlt
push
mov
fstpt
nop
add
push
outsl
jg
push
mov
xor
repz
je
mov
jmp
add
adc
jbe
fwait
jmp
inc
jle
dec
add
cli
xor
dec
pop
movsl
adc
adc
xchg
stos
jo
movsb
aaa
div
pop
xor
jno
or
pusha
mov
andb
pop
and
pop
cwtl
add
inc
out
or
add
ret
lret
mov
insl
rcll
lock
hlt
xor
bound
lret
push
sub
les
xor
lret
stos
mov
sbb
std
inc
stc
cmp
imul
out
jle
cmp
mov
push
sbb
test
stos
mov
out
sbb
push
int3
jp
addr16
cmp
cltd
movsb
jbe
jle
xchg
pop
popf
and
sahf
arpl
sub
in
jmp
pop
push
xor
cmp
mov
push
jg
lea
mov
nop
test
mov
pushf
or
scas
pop
inc
add
dec
dec
xchg
testl
lock
xorb
arpl
stos
jmp
icebp
out
test
and
xor
les
inc
cmp
adc
inc
repnz
xor
fdivp
push
scas
xlat
out
jne
std
mov
mov
imul
sub
sbb
das
cld
sbb
push
jge
fsubrl
stos
imul
inc
mov
repz
sbb
add
test
inc
pop
les
inc
pop
push
stos
sbb
sbb
cmp
ret
pop
aaa
or
sbb
push
dec
outsl
mov
lahf
lea
add
or
stos
scas
lods
mov
lea
clc
fcomip
xor
loope
pop
sbb
test
add
xchg
add
push
jg
and
mov
fisttpll
mov
pushf
nop
sti
xchg
push
inc
repz
sbb
stos
arpl
pushf
jmp
dec
fbld
lds
mov
push
xchg
in
imulb
in
push
insb
imul
mov
mov
sbb
sbb
sbbl
push
push
and
cmp
gs
xchg
in
xlat
cwtl
dec
inc
sub
mov
mull
addb
dec
shlb
mov
call
repz
push
mov
sahf
xchg
xor
lods
enter
cmp
fisubs
xchg
cmpsb
loopne
jns
mov
jb
xor
dec
sub
outsb
cmp
loope
dec
int3
push
cmp
loopne
dec
inc
xlat
cli
es
inc
and
jae
mov
fs
test
adc
jmp
movsb
lret
sbb
orl
cs
sti
cmp
inc
insb
push
imul
or
mov
mov
xor
outsl
rcrl
xor
arpl
js
mov
push
cmp
filds
and
lea
fsubs
push
insb
ds
sbb
jo
arpl
dec
push
mov
sub
popf
popa
shll
pop
xchg
push
sub
imul
mov
movsl
cmc
sub
enter
roll
mov
sbb
scas
fwait
repnz
scas
popf
sahf
or
jmp
jg
enter
nop
sbb
jae
dec
xor
sahf
xchg
and
pop
mov
neg
mov
mov
ljmp
inc
push
dec
xor
addr16
jmp
shrb
jmp
cmp
mov
xor
mov
dec
std
dec
mov
arpl
xor
stos
mov
pusha
mov
jmp
mov
xchg
sbb
cmp
and
lahf
repz
js
add
mov
movsb
cmp
xchg
jecxz
fcomps
and
add
imul
rclb
cmpsb
les
ss
xchg
mov
dec
jbe
lods
mov
pop
test
in
sbb
push
aaa
adc
or
xor
fisttpl
or
sub
pop
ljmp
xchg
ret
pop
sarb
enter
push
pusha
cwtl
fcompp
incb
sub
mov
mov
mov
nop
cmpsb
jno
sbb
add
sub
out
sarb
push
pop
ljmp
push
push
push
jp
popf
outsl
lock
enter
rcr
sbb
xchg
mov
test
mov
pop
sub
xor
inc
es
aaa
mov
or
loop
or
ficoml
cmpsl
test
mov
sbb
cmpsl
ja
pop
jns
xor
mov
inc
or
aaa
fucom
je
pop
cltd
test
or
add
aaa
leave
fdivr
pop
sbb
aad
popf
push
inc
mov
mov
mov
push
in
mov
into
aad
mov
cli
jmp
sub
nop
es
in
imul
mov
daa
imul
inc
idiv
mov
ljmp
imul
and
out
xor
pop
push
dec
push
mov
pop
inc
es
js
push
xor
rcrb
orb
inc
push
jp
pop
std
int3
ret
jecxz
fs
lret
iret
movsl
jecxz
and
jbe
dec
sbbl
cmp
inc
inc
cmpsl
sub
or
popf
jne
sar
loop
mov
test
xor
mov
jbe,pt
and
pop
lcall
adc
inc
icebp
movsb
pop
insl
adc
out
push
pop
xor
jne
aam
dec
or
jo
rcr
enter
adc
xchg
imul
sbbb
push
in
push
das
mov
dec
inc
or
test
std
xor
fldt
aam
adc
scas
xchg
sub
in
xchg
in
repz
subb
xor
and
pop
dec
test
rclb
dec
cltd
callw
jge
pop
mov
sub
push
popf
test
and
cmp
je
repnz
fs
push
sbbl
pop
in
sub
mov
mov
mov
out
jmp
leave
and
sub
addl
mov
insl
jmp
xchg
add
std
mov
xchg
fwait
adc
xchg
stc
in
in
mov
fcomip
inc
std
movsb
lods
push
push
jae
adc
scas
sub
sahf
clts
sbb
inc
mov
scas
fs
pop
add
mov
jg
push
in
mov
lret
test
push
stc
sbbb
fincstp
cs
imul
loop
shrb
hlt
fldcw
adc
adc
xchg
inc
insl
cltd
mov
loope
leave
xchg
jle
xchg
sub
shlb
rclb
or
es
stc
pop
rcrb
xchg
int3
ret
pop
insl
inc
iret
lret
mov
pushf
lret
mov
imul
pop
jae
out
into
rcrb
fsubs
stc
mov
push
inc
arpl
shl
sbb
popl
push
or
mov
fimull
ret
cld
xchg
pop
add
adc
push
call
arpl
mov
jg
inc
rorl
loopne
sbb
enter
adc
std
lods
arpl
xor
lods
popa
mov
add
mov
or
adc
jge
and
inc
adcb
scas
xchg
mov
push
inc
sbb
loope
dec
push
js
lock
cmp
jp
out
scas
mov
push
jnp
xchg
pop
xchg
and
lods
arpl
ljmp
jo
test
mov
out
dec
ljmp
jmp
loop
ret
xor
mov
push
cld
inc
lahf
pop
movsl
bound
sbb
xlat
and
sub
push
xor
sbb
pop
mov
inc
das
mov
imul
push
and
int
sub
lods
cmp
inc
scas
dec
add
sub
sbb
das
mov
dec
stos
leave
or
xor
inc
repz
ret
imul
push
add
aad
cs
movsl
sub
popf
ror
and
out
push
test
call
test
test
cmp
pop
cmp
lds
mov
cmc
ret
test
inc
cmp
push
dec
jmp
and
jnp
in
loop
add
dec
cwtl
fists
aaa
cli
and
mov
out
push
xchg
ljmp
mov
imul
sbb
and
or
xlat
cmpsb
js
jb
std
fcomi
mov
push
push
mov
adc
sbb
or
in
cwtl
fcoml
enter
call
lret
in
inc
cmp
rorl
arpl
push
xor
jge
cmpsl
ljmp
mov
adcb
dec
aad
loop
or
jmp
int3
or
jmp
aas
and
je
sub
in
xor
xchg
call
pop
pop
popa
or
sbb
adc
call
lea
sbb
jp
mov
subl
outsl
xor
arpl
push
dec
adc
ret
xchg
pop
imul
mov
and
xchg
sub
cmp
lock
in
inc
push
cmc
in
faddp
fisubl
cld
stos
mov
pop
xchg
aas
push
mov
test
mov
lods
xor
fcomp
pusha
push
and
and
nop
je
inc
sub
cmp
repz
std
mov
rol
pop
outsb
je
inc
mov
cmp
dec
xor
in
jmp
insl
rorb
in
movsb
push
inc
mov
arpl
xor
stc
xchg
addb
mov
mov
dec
or
mov
jle
mov
pop
push
pop
repnz
xchg
xchg
cwtl
pop
in
mov
mov
mov
iret
addr16
les
repz
mov
scas
repnz
dec
inc
aam
rcrl
mov
inc
and
mov
mov
lods
sbb
xchg
xor
pop
testl
pmaddwd
out
sbb
cmpsl
out
sbb
jnp
mov
adc
es
fcomps
loope
push
cs
inc
jg
mov
jp
sbb
add
mov
add
xchg
ss
test
pop
sbb
lret
lret
xchg
outsl
dec
sbb
push
or
xchg
jb
sub
mov
arpl
imul
xchg
inc
in
jno
lahf
add
dec
xor
jmp
or
fwait
dec
int
in
in
shr
mov
sub
test
int3
sbb
imul
mov
es
and
push
bnd
ljmp
dec
and
lods
push
sbb
enter
dec
mov
push
push
mov
bound
imul
mov
pop
xchg
inc
incb
push
aad
popf
jbe
lahf
push
sub
cmpb
movsl
adc
popa
das
fildl
mov
xchg
inc
xor
xorb
and
and
cmpsb
xor
out
pop
roll
sar
jmp
inc
movsb
jno
cmp
imul
ret
mov
mov
int3
xor
jae
inc
lahf
sbb
aad
je
pop
xchg
add
test
mov
or
scas
hlt
jb
gs
test
fstpt
or
jb
sub
pop
movsl
out
pop
mov
outsb
cmc
daa
mov
xchg
pop
stos
loope
mov
loope
fdivs
and
mov
cmp
sub
mov
cmc
jp
scas
mov
fadds
pop
jle
sbb
xor
sarb
adc
stc
add
push
in
ss
dec
adc
inc
test
test
adc
movsl
push
and
jmp
test
pop
clc
lock
and
inc
neg
jl
out
adc
add
rorb
and
mov
leave
fmulp
stc
enter
mov
cmp
ja
insb
jg
test
jb
js
test
inc
hlt
adc
data16
aam
mov
fisttps
cs
mov
mov
pusha
ds
mov
xchg
cmp
out
mov
call
outsl
movl
mov
ficoml
cli
mov
data16
shll
xchg
dec
cmpsl
add
pop
gs
insb
pop
enter
scas
ds
mov
test
cmpsl
xor
add
mov
les
jbe
push
arpl
addr16
xchg
and
in
push
push
sub
inc
arpl
or
sbb
bound
push
xchg
lock
cmp
inc
and
cmp
lcall
inc
and
mov
xor
sbb
dec
movsl
arpl
out
sub
fisttpll
test
inc
dec
lahf
sbb
sbb
inc
iret
test
adc
jbe
insb
sub
es
sarb
shll
cwtl
es
test
inc
sbb
mov
aad
out
push
mov
mov
jmp
sbb
dec
sbb
cmp
jae
jmp
stos
out
inc
push
pop
cmp
stos
sub
adc
cmp
or
adc
outsl
jo
push
fstl
pushf
je
mov
lret
sub
mov
fs
mov
mov
lret
push
popa
push
mov
jg
lcall
popl
lret
ja
es
mulb
pop
xlat
cmp
aam
scas
addl
mov
push
pop
lret
test
cmc
daa
cmp
mov
mov
dec
std
pop
dec
pop
push
mov
or
jmp
mov
pop
pop
ret
sti
sbb
aaa
pop
fsubrp
test
adc
fcmovb
mov
xchg
fxch
adc
xor
sbb
or
lea
daa
stos
mov
dec
imul
adc
repz
xchg
cmp
lahf
and
xchg
push
ja
orb
out
mov
jo
insb
dec
sahf
inc
scas
sub
fcmovnbe
and
clc
cmp
stos
xchg
jmp
cs
rorb
push
xchg
std
into
popl
pop
addl
mov
repz
lea
rcr
cmpsl
sub
gs
test
les
sbb
mov
cmp
lcall
test
mov
xchg
scas
push
push
mov
add
cmp
pop
push
das
ljmp
xchg
sub
sahf
or
sub
inc
push
outsb
in
popl
jmp
cmp
notb
adc
scas
addr16
pop
mov
cmp
pop
and
stos
leave
imull
sbb
xor
dec
sub
push
push
outsb
sbb
lret
sarl
scas
clc
add
mov
mov
clc
mov
jae
sbb
mov
ret
and
sub
addr16
testl
loop
jo
int3
imul
test
cli
dec
out
cli
lock
inc
xchg
daa
push
test
inc
jae
int3
out
sbb
jg
mov
bound
pushf
in
add
aam
in
ljmp
fxtract
push
jns
fiadds
ret
sbb
or
outsl
mov
xlat
mov
pop
orb
fisttpll
xlat
loope
lods
pop
mov
push
sbb
and
inc
mov
stos
iret
mov
xor
mov
and
push
aaa
mov
xor
shll
pop
mov
sti
mov
dec
mov
push
repnz
add
jmp
jne
xor
sarl
mov
dec
imul
mov
mov
mov
int
push
lret
adc
outsb
xchg
or
repnz
cmp
outsb
cwtl
add
mov
shrl
xor
and
stos
fists
xor
adc
dec
lret
fs
lret
movsb
das
cmpsb
daa
pop
shr
jle
and
iret
enter
repnz
aam
jg
sub
lods
mov
gs
flds
cmp
lcall
xor
adc
sub
push
iret
push
xchg
arpl
mov
idivb
cmc
push
rolb
xor
mov
je
fildl
sub
stos
jbe
cmp
inc
sbb
mov
sbb
jge
rcll
fbstp
xchg
pop
pusha
aaa
xor
lods
pushl
xchg
cmp
ret
enter
push
aas
out
pop
dec
test
pop
lds
sbb
hlt
ja
push
out
in
roll
sbb
ljmp
mov
shr
jmp
jae
or
add
fs
fstp
lea
ret
cmp
cltd
mov
loope
fsub
mov
xor
xchg
pop
mov
call
pop
sub
mov
jl
or
cs
inc
inc
pop
cwtl
sub
cmp
cmp
in
js
test
scas
add
adc
in
arpl
mov
and
jmp
scas
out
jp
push
pop
pop
fstpt
jge
pop
xchg
or
sub
das
ficomps
testb
ficoms
dec
jne
mov
cmp
jb
dec
loop
sbbb
or
mov
jne
mov
ret
lds
aad
mov
mov
cmc
loop
sub
ss
pop
push
push
xor
mov
mov
add
lds
push
shrb
inc
js
sahf
pop
test
lahf
sbb
lret
mov
in
mov
mov
jmp
xchg
cmc
cwtl
sbb
push
pushl
push
lret
ss
dec
movsl
mov
ret
repnz
xchg
aas
test
inc
in
cmpsb
cmc
test
loopne
test
outsl
xchg
mov
or
cs
push
mov
std
rorl
xchg
movsb
sbb
cli
dec
test
imul
jo
cmpsl
dec
inc
leave
imul
rolb
mov
dec
mov
repnz
int3
xchg
insl
fs
cmpsb
fs
push
fpatan
push
jb
pop
fs
xor
cmp
mov
out
mov
xor
movsl
jbe
mov
sbb
lock
pushf
shlb
jl
and
lret
fidivrl
jg
sbb
mov
sub
fcompl
adc
inc
addl
das
mov
popa
rcll
out
or
dec
push
inc
lret
addb
lret
push
fistps
aas
insl
call
pop
mov
dec
test
push
insl
in
inc
sbb
stc
jbe
fs
flds
inc
mov
enter
sub
dec
push
cli
jmp
clc
bound
cmp
xchg
pusha
ret
inc
fdivs
test
mov
add
inc
sbb
mov
arpl
pop
xchg
jae
data16
sub
nop
data16
movsb
push
jno
pop
daa
testl
jecxz
loope
push
xchg
out
and
jp
repz
push
mov
aas
pop
push
adc
add
dec
jae
push
incl
popf
test
mov
adc
mov
sub
or
pop
adc
mov
mov
push
leave
adc
sub
sbb
call
ja
jns
adcl
loopne
xchg
out
aaa
dec
out
mov
mov
or
pushf
addr16
sti
push
pusha
and
mov
dec
lock
mov
enter
adc
test
jae
frstor
lret
iret
in
lahf
mov
aas
dec
repnz
sbb
inc
ljmp
xchg
pop
xor
ds
lods
cwtl
jge
add
push
push
outsb
stc
jp
jno
lods
and
das
sbb
aad
int
xchg
add
imul
imull
mov
adc
xor
cmpsl
and
loop
sub
inc
std
adc
imul
mov
inc
test
jmp
adcb
sbb
outsl
lods
sbb
inc
pop
sbb
push
jl
xchg
ror
mov
ret
cmp
imul
dec
dec
popl
cmpsb
addr16
out
lods
mov
cmpsl
pusha
popf
stos
mov
mov
push
aad
mov
fstpl
pop
mov
sub
push
lahf
fwait
aaa
fisubrs
sti
push
jb
in
repz
sbb
pusha
jno
pop
lcall
cmp
rcll
cmp
jae
popf
push
daa
roll
cmp
xchg
clc
or
popa
cld
and
xor
pop
xor
push
xchg
aas
inc
mov
lcall
sub
mov
cs
imul
outsb
sbb
inc
jge
inc
int3
fs
adc
xor
mov
push
jae
mov
or
lcall
xor
mov
sub
pop
pop
cmp
sbb
sub
xchg
xchg
and
loop
mov
pop
mov
inc
pop
pusha
int
divl
aaa
aad
mov
repnz
mov
push
lcall
shrb
sbbb
sub
lahf
addb
lret
push
sbb
movsl
andl
jl
push
std
fs
cmp
mov
pop
push
push
push
mov
jl
lds
adcl
xchg
in
mov
jge
dec
sub
ss
xlat
mov
mov
xor
into
ds
orl
xchg
mov
js
js
into
xchg
imulb
mov
outsl
xor
das
pop
xor
ds
scas
jno
inc
xchg
pop
cwtl
mov
sti
hlt
cmpl
cmc
es
test
cmp
pushf
mov
mov
cmpsl
dec
mov
fs
and
add
jp
mov
mulb
pop
mov
dec
push
in
add
pusha
and
pop
cwtl
mov
inc
jo
mov
ret
loop
xlat
mov
pop
outsb
imul
sti
mov
push
push
int
mov
jge
jbe
ret
leave
cmp
call
mov
ror
jo
mov
call
jbe
lock
pop
sub
rsqrtps
xorb
mov
and
dec
adc
push
lret
inc
rorl
jg
pop
inc
sbb
lcall
sti
mov
or
cmp
jnp
lods
int3
push
pop
sub
inc
cmp
and
pop
adc
imul
sub
add
pop
mov
push
dec
dec
xor
and
clc
xchg
cmp
dec
outsl
nop
adc
out
or
mov
cs
iret
add
mov
xchg
push
and
fdivs
adc
dec
loope
cmp
adc
sbb
or
pop
mov
out
popa
mov
jg
push
movb
sti
sbb
inc
lahf
xor
ja
in
sti
jle
pop
inc
dec
push
cmp
dec
bound
clc
mov
xchg
cmp
push
mov
sbb
fadds
and
sub
add
mov
pop
int3
movsl
call
stos
imul
fidivrl
inc
jl
dec
inc
and
jno
jne
out
iret
and
ret
adc
mov
xchg
mov
icebp
pop
fisttps
sahf
mov
push
cmp
loopne
mov
cmp
scas
test
test
out
in
xchg
clc
cmp
adc
cwtl
dec
push
je
enter
xchg
or
stc
rcrb
xor
and
push
movsb
nop
adc
push
loope
rcrb
mov
mov
push
dec
out
xchg
add
test
sbb
fisubl
or
inc
das
pop
dec
mov
mov
outsl
sahf
pusha
mov
ret
pusha
out
leave
scas
push
jp
or
and
call
cmp
shlb
repnz
mov
add
sub
lods
jmp
fsubrs
je
push
daa
ja
push
aaa
jnp
inc
pop
pop
ljmp
ss
xchg
jae
sbb
in
int
repnz
in
xor
insb
cltd
or
mov
or
loopne
fistpll
mov
jle
adc
mov
aas
mov
cmp
mov
mov
add
or
in
add
call
add
jmp
cmp
pop
lds
mov
cmp
sbb
or
fistpll
and
mov
dec
std
das
cld
stos
add
sbb
push
pop
mov
jge
cltd
xor
push
sbb
int
insl
inc
pop
inc
imul
xlat
movsb
out
add
fs
cmpsl
xchg
inc
into
pop
xchg
push
jge,pt
dec
and
fwait
sahf
aaa
in
sub
or
mov
call
gs
adc
dec
add
pop
sbb
adc
xlat
sbb
mov
lret
shr
xor
flds
in
cmp
lds
imul
add
mov
pop
mov
dec
jb
adc
jae
pop
push
rclb
jecxz
movsl
mov
in
mov
inc
in
jns
adc
inc
xchg
sbb
stos
inc
iret
jbe
pop
mov
int3
ja
inc
jb
mov
and
pop
insl
test
mov
xchg
js
sbb
pop
bound
ficompl
push
lds
rorb
je
xchg
mov
inc
adc
enter
ja
out
jmp
push
test
jb
mov
dec
mov
lret
adc
push
jmp
cmp
stos
leave
push
push
aaa
cs
and
adc
sub
dec
push
xchg
mov
xor
mov
mov
inc
sub
cwtl
out
das
lret
lahf
mov
jl
arpl
aaa
sub
aas
xchg
sbb
lahf
aad
jae
push
mov
mov
mov
add
sbb
idivl
repz
pop
mov
mov
outsb
out
inc
int
icebp
in
add
ficomps
lock
in
lock
inc
lahf
iret
sub
jp
lods
out
aad
lret
xchg
nop
or
or
xchg
adc
js
ljmp
or
cmp
jge
lahf
shll
test
push
sbb
call
xchg
fcmovbe
rep
pop
ljmp
adc
cmp
insb
fcoml
gs
loop
pop
stc
jle
push
sub
ja
mov
hlt
mov
inc
call
inc
repz
xor
xlat
lcall
inc
test
test
cs
mov
dec
mov
cmp
push
mov
pusha
mov
or
dec
loop
je,pn
pusha
sub
sub
sbbb
xor
mulb
cmc
push
cs
daa
fldt
cmp
mov
inc
jp
cmc
or
fwait
sbb
sub
push
out
jecxz
cmpsl
into
jecxz
addl
cwtl
test
cmp
jb
mov
leave
stc
push
inc
ljmp
jo
inc
call
sub
cwtl
xor
ljmp
pop
bound
adc
rorl
faddl
mov
loope
mov
pop
ja
jg
push
ja
inc
push
mov
inc
push
mov
insb
fildl
cmpsb
sarb
or
xchg
stos
jl
out
andl
je
repnz
xchg
popf
mov
mov
ja
dec
iret
sbb
or
icebp
adc
xchg
cmp
mov
test
sbb
lods
adc
movsl
push
push
pusha
int
jecxz
shlb
das
push
cwtl
sbb
bound
addr16
fs
sbbl
enter
xchg
mov
addr16
jb
pusha
sub
andb
pop
ret
mov
mov
fistpl
das
pusha
rolb
xchg
pop
iret
push
xchg
add
lds
jle
shl
push
push
sbb
dec
cld
fnstenv
jmp
cwtl
mov
pop
push
mov
lods
lock
mov
xorl
lds
nop
mov
cs
movsl
jnp
shlb
cmp
sub
mov
push
out
mov
leave
sbb
cmp
cmp
xor
and
add
movsl
pop
sub
fucom
ja
daa
ss
mov
clc
inc
aaa
lock
lcall
xchg
pop
jne
mov
cld
ljmp
neg
inc
xchg
push
xchg
lods
fstpt
xor
inc
fildll
cltd
gs
fcoml
imul
mov
js
xchg
pop
aam
cmp
jle
push
pusha
xor
cmp
fstps
enter
cmp
test
adc
fcoml
mov
mov
fldenv
popa
clc
or
icebp
cmp
fdivrp
sbb
jle
mov
call
jnp
xor
cld
out
movups
imul
fwait
mov
jp
repz
lods
pop
jb
push
ja
xor
or
outsl
mov
bnd
lods
xorl
ljmp
adc
mov
inc
cmp
dec
insl
sbb
loop
insl
das
pop
add
pusha
jns
mov
in
cmp
and
mov
sub
dec
inc
lods
aaa
inc
jle
mov
mov
ljmp
xchg
arpl
fs
cmp
and
add
pop
jns
sbb
inc
testb
jno
ret
mov
xor
and
lahf
jecxz
xlat
pusha
daa
xchg
jb
nop
icebp
mov
jg
in
add
jo
fsubs
jne
or
or
dec
xchg
lods
xchg
ret
in
push
nop
jge
mov
adc
arpl
inc
xchg
js
cmp
lock
cmp
iret
test
dec
and
ljmp
mov
loope
loop
inc
push
sub
bnd
test
lods
xor
daa
popa
xchg
pop
mov
rcrl
arpl
imul
xchg
mov
test
mov
fldl
push
lods
add
sarb
xchg
mov
or
outsl
mov
fisubl
clc
pop
mov
jg
enter
test
dec
mov
jg
int
push
adc
into
jnp
inc
sub
xchg
clc
gs
js
bound
inc
dec
cltd
mov
jmp
mov
mov
inc
pop
cmpsb
scas
push
xor
inc
xor
jo
pop
mov
in
bound
push
add
xchg
inc
add
out
jmp
iret
je
sbb
pop
mov
popf
lds
popf
sbb
jp
fs
mov
adc
dec
test
test
mov
push
inc
outsl
mov
int
push
cmp
sbb
pop
push
sahf
xchg
and
jl
cld
xchg
in
push
sti
sub
cltd
aad
arpl
popa
mov
adc
mov
jno
adc
or
sub
adc
mov
dec
and
fildll
pusha
leave
mull
fwait
and
std
outsl
dec
inc
mov
mov
cmc
cmp
and
and
cmp
fwait
add
xchg
ret
test
adc
and
mov
jo
lea
shl
outsl
int3
and
sbb
mov
add
cmp
mov
inc
mov
xchg
sbb
mov
inc
jae
dec
rclb
sub
xchg
bound
movsb
mov
jge
lods
in
adc
fdiv
push
insl
mov
or
addr16
pop
mov
gs
dec
xchg
sub
lds
sbb
leave
add
mov
xchg
push
xchg
mov
dec
dec
jae
dec
std
testl
cmpsl
push
mov
xchg
mov
ror
and
ret
mov
in
out
push
test
xor
mov
fwait
mov
jbe
outsl
xchg
add
out
incl
jmp
pop
subb
cs
cwtl
ror
icebp
out
outsb
aam
mov
mov
ret
pop
imul
or
rcrl
pop
repz
fiadds
cmp
pop
push
outsb
push
jo
lock
mov
mov
mov
roll
ret
jmp
mov
fwait
in
adc
repz
xor
sbb
mov
repnz
inc
jmp
pusha
jge
xchg
push
pop
xor
xor
gs
push
add
out
cmp
test
mov
pop
mov
loopne
jno
cwtl
adcb
leave
in
imul
mov
cmp
jle
adc
or
jl
jg
jecxz
in
xchg
pop
mov
jg
cmpsl
fs
mov
pop
jecxz
mov
sbb
fsubp
lds
jl
icebp
stos
rol
adc
sahf
xchg
and
mov
pop
xchg
pop
mov
cld
ljmp
cmp
dec
jl
pop
negl
sahf
call
xor
cld
leave
xor
push
test
add
loope
mov
sub
adc
jns
mov
push
andb
les
xor
mov
mov
in
lock
cmovg
scas
xor
cmp
scas
mov
push
push
or
lcall
dec
xor
cwtl
and
shrb
jbe
fidivrl
inc
sbb
repnz
xlat
call
pop
insl
add
test
sbb
adc
jl
xchg
fwait
iret
mov
jne
mov
call
xorb
push
xchg
imul
fdivrl
mov
aam
inc
popf
mov
or
pop
mov
or
data16
outsb
rorb
and
andl
nop
aas
mov
test
xlat
xor
jns
lods
mov
adc
adc
xor
sub
inc
icebp
add
fs
test
nop
mov
xchg
push
dec
aad
xor
push
push
xchg
add
and
mov
gs
paddsb
sbbb
mov
loop
jmp
pop
bts
imulb
dec
sub
add
mov
sbb
orl
in
add
es
xor
push
sub
push
dec
popa
dec
sarb
hlt
in
arpl
std
shl
push
mull
jl
lea
aam
ljmp
xchg
xchg
sbb
jnp
jae
fnstenv
lahf
clc
dec
jae
adc
cmp
das
subl
mov
testb
lret
xor
mov
xor
push
add
and
pushf
add
fnsave
mov
inc
out
scas
add
pop
xchg
imul
mov
sub
cmp
lods
popl
test
and
int3
gs
addr16
pop
inc
mov
add
shrl
movb
jae
andb
sub
jp
push
pop
test
out
xor
mov
popa
call
pop
cltd
dec
xor
inc
aas
divb
push
int3
sbbb
sbb
aas
and
aam
mov
pop
pop
aaa
je
lret
sub
sbb
test
mov
mov
inc
sbb
pushf
fdivrl
sbb
out
fwait
roll
scas
lcall
jne
pop
shrl
jmp
add
cmp
jmp
fmull
jge
mov
adc
jno
inc
xor
insb
jnp
out
jge
add
arpl
xchg
xor
inc
iret
fldenv
outsb
loope
xchg
shufps
outsl
mov
arpl
or
sbb
das
or
shr
lds
mov
out
cld
and
xchg
int
jge
shrb
ret
mov
mov
jb
fstpt
mov
shll
sub
dec
rclb
jge
sbb
fimuls
pop
cmpsb
addr16
imul
inc
lds
mov
rolb
pusha
xor
inc
call
notl
arpl
adc
in
fstl
inc
and
xchg
mov
pop
xchg
push
sahf
cmpsl
test
js
jl
mov
icebp
pushf
xchg
adc
pop
enter
xor
es
jo
mov
add
arpl
jecxz
ljmp
arpl
add
jle
push
push
cmpsb
inc
test
ljmp
into
sbb
add
hlt
repnz
jne
add
cmpsb
mov
dec
mov
jg
outsb
sub
ror
push
cmpsb
cmp
mov
push
ret
lahf
movsl
leave
shll
xor
sar
xlat
xchg
out
leave
pop
outsl
je
aaa
mov
xor
movsl
xchg
mov
ret
xchg
sar
jl
or
jns
push
inc
psrlw
testb
fimuls
mov
inc
aam
xchg
ds
pusha
popa
lahf
rcrb
lds
rcr
mov
repnz
outsb
jmp
push
xchg
repz
pop
or
jge
push
das
roll
sbb
leave
lret
icebp
sub
xchg
or
pop
mov
gs
jnp
nop
mov
pop
xor
add
cmp
cli
push
xchg
mov
lahf
imul
xchg
test
add
lock
add
imul
push
popa
aad
push
ret
rcrb
inc
aam
and
jg
mov
push
outsl
cmpsl
push
jno
and
adc
add
imul
mov
push
xor
push
in
and
mov
pop
mov
insl
les
add
iret
imul
dec
repz
daa
bound
or
imul
aad
mov
xchg
mov
dec
sub
pop
lahf
aas
cmp
ret
xlat
or
dec
adc
popf
rcll
cltd
sub
pop
adc
push
mov
pop
sbb
jbe
imul
cmp
inc
stc
mov
in
xor
imul
jl
push
mov
pop
and
mov
inc
cmpsb
test
jle
and
popf
mov
hlt
and
fs
inc
or
push
mov
xchg
clc
leave
jecxz
scas
pop
mov
int
sbb
cmpsl
xchg
xchg
in
mov
arpl
jmp
sarb
call
push
shlb
sbb
cmpsl
sub
mov
sbbb
inc
js
jmp
ficompl
insb
dec
testb
fcom
or
insl
movb
lahf
ljmp
or
mov
ss
sub
int3
scas
aad
push
out
and
xorl
xor
sbb
lds
add
ljmp
sub
out
bound
xor
add
mov
and
cmove
push
mov
sub
mov
subl
in
mov
xchg
inc
mov
into
pop
sub
add
js
sarl
push
pusha
inc
test
loop
mov
jecxz
xor
inc
push
jb
jnp
xor
cmp
mov
or
jg
or
add
mov
and
cmp
bound
inc
fwait
adc
es
jnp
lcall
cmpsb
movsl
xchg
or
lock
and
xlat
mov
mov
orb
jns
jmp
int
mov
fimuls
out
inc
adc
shll
nop
sahf
mov
add
inc
leave
js
movsl
aad
xchg
imul
dec
mov
jne
clc
mov
lcall
leave
pop
sub
mov
rorb
dec
es
out
pop
sub
xchg
cmp
inc
arpl
and
mov
mov
jns
je
lods
sub
mov
imul
push
mov
out
cmp
jle
lock
or
mov
imul
outsl
nop
xor
clc
andl
or
int3
push
lds
xchg
loope
sahf
in
das
dec
push
add
lahf
pop
sbbb
add
insl
imul
pushf
aas
test
data16
shrb
mov
or
adc
push
loope
popf
adc
popl
ja
jp
sbb
cmp
decl
pop
arpl
repz
pop
adc
and
mov
xchg
mov
pop
push
pusha
dec
stc
mov
add
jp
inc
sub
addl
and
mov
or
int3
mov
xchg
ja
push
pop
mov
loopne
adc
sbb
rolb
mov
pop
lcall
push
xor
and
rolb
add
imul
jo
das
loop
mov
fldcw
aad
xchg
dec
lock
xchg
xor
mov
xchg
jo
enter
pop
or
pusha
push
clc
lock
mov
lods
push
pop
xchg
inc
aaa
pop
or
test
dec
sub
andl
jl
cs
arpl
push
jno
lcall
out
in
lods
push
add
movsb
pushf
mov
mulb
mov
mov
lret
aas
jle
jge
scas
stos
out
and
out
or
in
sbb
shlb
loop
push
xor
push
add
sbb
jp
fiadds
ror
jmp
outsl
lcall
dec
adc
cld
aad
sti
sub
jns
cmp
daa
and
stos
ficomps
aaa
push
xchg
mov
movsl
cs
rolb
adc
ja
daa
fnstenv
insl
shll
cmp
iret
je
push
jb
sub
not
mov
sarl
jle
out
mov
jl
ljmp
lods
mov
inc
push
std
fdivrs
arpl
xchg
mov
sbb
xor
xor
cmp
icebp
sub
insl
dec
push
jbe
pop
repz
jo
scas
sbb
repz
lret
pusha
push
or
mov
mov
data16
mov
rol
adc
lcall
inc
mov
inc
xchg
inc
hlt
fidivrl
cs
jnp
in
push
adcl
test
sbb
lods
fst
outsl
sub
inc
jmp
sub
inc
divl
hlt
lea
xor
stos
or
ja
mov
and
mov
je
sti
cmp
xor
and
mov
ds
lods
xlat
ret
mov
sbb
scas
int3
repnz
dec
inc
cltd
stos
loope
push
inc
dec
ret
fnstenv
pop
sub
xorb
pop
flds
mov
cmp
adc
inc
fmull
inc
scas
scas
jg
jge
nop
pop
into
nop
mov
xlat
mov
mov
dec
pusha
icebp
pop
in
and
add
pop
xchg
dec
jae
mov
mov
and
in
xchg
repz
stc
jecxz
mov
dec
xlat
inc
or
xor
sarl
sub
sub
jno
jb
ja
test
jge
adc
inc
sub
xchg
movsl
sub
xor
in
mov
call
pop
xchg
roll
mov
xlat
in
pushf
xor
add
out
lods
inc
outsl
inc
aam
popa
xor
sarb
push
test
lock
xor
mov
and
push
test
mov
push
mov
adc
mov
jp
sbb
fisubl
push
in
inc
aad
repnz
cld
pop
ljmp
lock
mov
fwait
mov
mov
mov
xor
fmull
adc
popf
ja
mov
cmp
push
xchg
xchg
xchg
dec
lahf
push
adc
mov
ret
fiadds
push
and
loopne
enter
jns
pop
xor
outsb
xchg
jns
xor
std
xchg
sub
loop
and
adc
or
fldenv
loopne
xchg
sub
aas
and
and
mov
pop
movsb
das
push
lahf
cmc
adc
shll
test
outsb
or
or
andl
pop
in
inc
pop
lock
add
lods
sub
cmp
dec
sub
shlb
rcrl
iret
mov
idiv
jo
in
stos
jl
out
mov
call
or
movsb
or
mov
fidivrs
es
fdiv
flds
dec
cmp
cs
cmp
ss
jne
jo
xor
mov
std
hlt
insl
fimull
icebp
pop
xchg
pop
jo
cmp
icebp
jmp
inc
aaa
lods
gs
out
ljmp
cmp
mov
in
hlt
les
mov
jg
out
push
fstps
mov
push
das
sbb
shlb
cwtl
dec
mov
push
inc
call
ljmp
push
sti
push
bound
mov
mov
gs
and
ljmp
addr16
in
jmp
outsb
or
mov
test
out
xor
ds
or
int
stc
adc
mov
pop
cs
jmp
das
stc
or
add
adc
and
jae
push
out
sbb
pusha
or
push
mov
sub
xlat
mov
sbb
fwait
mov
and
fidivl
movhlps
sub
jne
inc
xchg
lret
lret
and
lods
lods
pop
xlat
adc
cmp
xorb
repnz
test
ret
xor
cmc
ficoms
jo
mov
aas
les
xchg
int
aam
xchg
inc
pop
popa
aas
outsb
pop
xchg
addb
pop
jge
sbb
rclb
aam
jecxz
pop
ret
not
les
shlb
pushf
pushf
jp
adc
adc
xor
pusha
out
das
addb
sbbb
aam
aam
es
rcrl
pop
cmp
mov
dec
cmp
arpl
cmp
or
lds
mov
lea
loopne
in
repz
sbb
sub
sbb
adc
sub
or
icebp
xlat
xchg
dec
push
ret
or
lods
lret
cs
mov
mov
ret
dec
es
rorb
les
dec
in
jge
enter
lods
addr16
xchg
xchg
into
and
lods
dec
lret
roll
into
mov
jl
lods
adc
cwtl
cmpsl
or
xor
push
inc
xor
pop
jne
inc
test
insl
int3
sbb
mov
movsl
cltd
add
jnp,pt
in
popl
jb
dec
dec
mov
pop
ljmp
push
mov
decb
dec
sbb
fldcw
mov
fildll
movsl
or
push
and
mov
jbe
push
aad
cmpsb
pop
inc
lahf
in
mov
insb
int3
aam
icebp
mov
mov
inc
jbe
pop
push
add
push
in
xor
sbb
jnp
sbb
and
mov
mov
inc
dec
loope
test
adcb
pop
int
dec
push
lods
mov
mov
std
dec
imul
pop
cmpsl
das
fdivrs
jp
movsl
sub
test
sbb
repnz
mov
andl
and
pop
jne
lea
cmp
out
roll
jae
out
and
sbb
sub
xchg
xlat
xchg
adc
and
cmc
and
or
lea
jb
rclb
xchg
push
ds
sbb
daa
sub
outsb
jle
lea
clc
repz
pop
fildll
or
inc
rcll
sbb
not
int3
jl
jno
push
loope
sbb
and
iret
ret
lock
adc
inc
hlt
add
addl
dec
scas
sbb
fdivr
ret
xor
movsl
mov
adc
inc
jne
pop
xchg
or
jl
jo
addb
in
inc
jecxz
test
test
cmpsl
mov
xchg
daa
add
sub
xchg
lret
jecxz
lcall
les
push
daa
std
or
or
jb
cmp
vpmaddwd
mov
adc
mov
stos
adc
mov
sub
int3
sarb
xor
gs
xor
mov
xor
fistpl
fwait
adc
mov
push
mov
orb
inc
and
dec
shlb
mov
xchg
rcll
jo
scas
jno
dec
jnp
inc
mov
fcmovu
pop
or
push
cmp
and
push
cmp
aaa
imul
mov
ja
movsb
rorb
fwait
shlb
xor
dec
mov
pop
jne
es
jbe
lods
pushf
daa
cmp
insb
add
inc
testb
and
ret
sub
sbb
outsl
cmp
xlat
cmp
pop
scas
jb
pop
iret
add
cmp
out
jge
push
push
sahf
in
jo
push
cmp
or
sarw
subb
ss
es
cltd
sbb
dec
push
cld
cmp
pop
loopne
dec
bound
dec
adc
lret
pushl
popf
jle
mov
push
push
imul
push
fadd
jmp
jae
xor
rorb
cmc
popf
xlat
sbb
xchg
inc
and
fdivrl
insl
dec
mov
cmp
xchg
outsb
xchg
sbb
or
jo
mov
fbld
mov
test
sbb
xor
xor
sti
fdivr
xor
inc
pop
cltd
es
leave
int
lods
scas
inc
shll
jno
shrl
pop
push
into
or
cmp
cwtl
in
out
sahf
das
icebp
cmp
das
leave
in
or
imul
ja
push
lret
inc
data16
lret
adc
sbb
movsl
xor
je
sub
push
lret
sti
fsubrl
pop
cmp
enter
filds
sub
cmp
dec
add
cmp
lods
mov
push
sub
xchg
andb
add
xchg
enter
mov
sbb
xchg
mov
mov
pop
add
mov
add
ret
sbb
or
or
icebp
out
jnp
movsb
mov
cmpsl
sub
scas
movsl
mov
adc
mov
stos
mov
rcl
ret
push
xor
add
loopne
jnp
pop
sbb
mov
push
adc
mov
leave
enter
movsb
jne
jecxz
addl
sub
mov
popa
jp
in
push
call
ficoml
cmp
inc
sbb
andnps
jmp
scas
xchg
push
aas
lods
rorl
mov
mov
push
or
dec
sub
ljmp
jns
stc
sahf
sub
outsb
pop
in
pop
filds
and
fstl
cltd
aaa
int3
or
adc
and
stos
jmp
pusha
nop
incl
xor
or
int
rcr
pop
push
sub
mov
xor
test
xorps
mov
repnz
xor
call
orb
sbb
mov
insb
jmp
in
push
in
cmp
xchg
xor
or
or
lcall
fldcw
pop
pop
adc
fldt
adc
rorb
jp
cli
shll
xor
or
or
das
add
ror
in
mov
mov
lds
inc
leave
gs
pop
rcrl
sahf
pop
in
adc
xchg
hlt
sbbl
and
sbbl
in
cmp
mov
pusha
dec
sti
inc
daa
pop
inc
fcmovnbe
lret
insl
and
pop
sbb
xchg
sub
jl
arpl
ljmp
xor
call
and
test
inc
and
push
xor
xor
mov
ss
outsl
add
push
dec
repz
rcll
push
outsl
cmp
lock
add
daa
clc
xchg
push
in
xlat
popa
mull
mov
pop
aaa
push
into
dec
mov
mov
sub
dec
imul
je
jae
and
mov
mov
pop
inc
pusha
sub
inc
jno
fstps
aaa
cmp
addr16
xchg
mov
iret
loope
inc
icebp
shrl
inc
inc
aam
or
jo
out
sbb
fwait
sarb
xor
ja
sbb
daa
sub
in
mov
test
insl
mov
push
and
stos
std
fs
xchg
icebp
aas
add
mov
cmp
loop
dec
out
xchg
outsl
mov
push
call
loope
xchg
adc
sbb
or
jmp
xor
push
sbb
cltd
insb
xchg
mov
mov
inc
pop
add
jae
or
ss
daa
cwtl
ja
outsb
push
cmp
loop
xchg
ds
fistpll
icebp
jge
add
push
dec
mov
jp
inc
push
out
mov
mov
push
xchg
xchg
push
ljmp
xlat
or
jne
mov
rcpps
jne
fnstcw
repnz
outsl
push
mov
rcl
out
inc
call
repz
xor
sub
cmp
xor
add
imul
cld
fs
rcr
adc
mov
cmp
enter
jecxz
out
push
outsb
repz
gs
cmp
adc
popf
or
bound
andb
jnp
push
fs
into
inc
fwait
pop
jb
xchg
leave
dec
icebp
out
jns
pop
sub
sub
nop
out
dec
js
add
rorb
out
clc
lret
outsl
inc
ret
jns
cmp
mov
push
push
mov
dec
mov
bound
add
adc
mov
shlb
push
add
push
and
jae
shlb
icebp
dec
cmp
xlat
jg
xchg
cmp
mov
mov
notl
and
pushf
rcll
fsubl
lds
xchg
inc
mov
lret
inc
sub
ret
jo
sahf
mov
testl
xor
repz
mov
pop
adc
pop
ret
stos
les
mov
push
dec
or
mov
mov
xchg
daa
pushf
push
rorb
push
in
arpl
inc
fiaddl
mov
ret
jp
cmp
cmp
mov
sub
fs
sub
lret
mov
add
fadds
imul
adc
jl
add
cltd
cli
sbb
cwtl
push
in
mov
add
mov
cmp
mov
rcr
es
xor
add
dec
fldt
xor
jne
add
aad
fidivl
fstps
sbb
loope
xchg
lret
mov
mov
jno
or
pop
adc
push
dec
sub
arpl
inc
adc
mov
int
arpl
dec
in
dec
addr16
lods
out
mov
mov
shlb
adc
sub
cmp
sbb
sbb
mov
into
insl
icebp
lahf
test
roll
sub
cltd
mov
insl
dec
mov
mov
ds
fldt
int
or
cmp
loop
mov
aas
mov
aad
iret
sub
enter
push
jbe
mov
cmpsb
push
pop
pop
jnp
jns
lahf
mov
cmp
xor
lcall
call
push
int
mov
push
mov
mov
mov
ljmp
aas
push
pop
jne
test
stc
and
mov
mov
xchg
push
add
mov
or
and
and
aam
sub
sub
xor
dec
bound
or
in
adc
pop
jns
arpl
das
mov
jb
addl
mov
mov
std
pop
rclb
lahf
xchg
imul
clc
xchg
loope
xor
sbb
mov
popf
adc
out
sti
mov
addb
pushf
or
orb
ss
push
fsubrs
inc
and
icebp
and
stos
scas
jle
pushf
adc
es
rolb
sbb
mov
lods
xchg
test
dec
pop
cs
inc
lock
add
ds
jns
pusha
mov
and
aad
sbb
out
and
pop
cmp
out
shrb
popa
fnstcw
jl
dec
xchg
scas
loop
insb
pushf
xor
inc
inc
xchg
cwtl
movsl
aaa
jbe
cmpb
add
pop
repnz
pop
stc
cs
xchg
xor
fimull
insl
nop
jo
mov
mov
mov
xlat
int
shrl
inc
mov
add
jge
push
mov
shr
subb
jp
inc
push
fyl2x
xorl
jge
popa
test
stos
jecxz
jle
push
pop
pushf
xor
adc
mov
mov
lret
mov
cwtl
jae,pn
pop
out
data16
dec
jo
rorb
mov
pushl
popf
lret
adcb
insb
sub
cld
hlt
lret
lahf
mov
adc
mov
jp
mov
inc
aad
mov
sub
sub
loopne
in
insl
inc
lods
mov
cmp
inc
out
sub
inc
test
fiadds
mov
mov
daa
mov
sub
int3
lcall
mov
aaa
add
push
rcr
decl
mov
or
int3
aaa
inc
stc
cmp
dec
aas
push
cmp
out
add
bnd
jnp
dec
insl
sub
dec
stc
inc
dec
lods
mov
or
xor
jg
pop
and
outsb
sbb
jne
stc
jl
cmp
sbb
cmpsl
cli
dec
insl
or
or
insl
fdivrs
mov
orl
das
ljmp
mov
mov
mov
nop
inc
stos
lods
fbld
xchg
sub
in
sbb
jbe
repz
dec
sbb
cmp
pushf
fcomi
dec
repnz
push
dec
pushf
ret
pop
fiadds
adc
cs
movsb
jns
xchg
adc
outsb
loop
jne
lcall
lds
call
or
jmp
xor
or
test
pusha
lods
add
or
pop
cmp
fdivs
es
or
sbb
in
stc
sbb
pop
jg
or
ffreep
sbb
rcll
lret
in
push
scas
fisttps
xor
into
and
cmp
pusha
jns
imul
jae
adc
inc
inc
xlat
ret
adc
mov
jl
mov
xchg
mov
imul
jg
cwtl
pop
and
xor
fcoml
inc
shlb
iret
dec
inc
cltd
sarb
xlat
or
mov
gs
add
fnstenv
cmp
mov
fucom
in
xchg
adc
aad
rorl
xchg
sub
cmp
sar
lods
ret
scas
fidivrs
push
imul
sbb
sbb
rol
and
cmpsl
into
fstl
fwait
mov
mov
and
xchg
pop
adc
sbb
fadd
lret
insb
mov
dec
test
aad
addb
mov
add
aad
and
fst
mov
mov
xchg
push
push
xor
cmpsl
enter
push
mov
xor
pop
hlt
dec
push
dec
jecxz
mov
fisubrl
cmp
push
ret
fcomp
jmp
push
add
lock
loopne
jb
inc
xorb
add
mov
xchg
xor
jbe
sbb
mov
not
add
mov
je
cmp
sub
scas
add
add
pop
std
insb
or
fwait
into
fsubrs
pop
lcall
adc
jge
cli
cmc
xor
mov
dec
add
mov
inc
adc
adc
flds
test
or
mov
fmuls
jne
pushf
jg
mov
mov
hlt
xchg
sub
jbe
mov
lahf
ja
cwtl
inc
adc
cwtd
iret
gs
jae
out
xchg
sbb
mov
inc
jecxz
xor
sahf
and
pop
inc
dec
aas
add
insb
shl
sbb
mov
je
xchg
cmpsb
pop
mov
xchg
popa
mov
fiaddl
mov
cmpsl
fcompl
adc
arpl
out
stc
mov
cmpb
or
daa
jmp
movsb
enter
push
out
scas
add
jg
addb
lods
sub
cwtl
inc
dec
inc
mov
push
fmuls
insb
and
dec
pop
cmp
push
shlb
ret
out
test
in
imul
mov
fcoml
in
add
add
daa
test
mov
loopne
and
adc
fwait
imul
loopne
ret
jle
xchg
scas
mov
repnz
cmpsl
add
mov
cmp
jg
dec
push
pop
cwtl
add
mov
push
dec
pop
jnp
xchg
push
xchg
xlat
jnp
push
pop
in
mov
loop
xchg
ret
mov
fadds
mov
dec
je
test
out
sbb
cmpsl
sbb
add
iret
cmpsl
out
andb
ds
jp
add
dec
outsl
gs
sub
jp
cmp
mov
xsave
xchg
into
dec
mov
xchg
sub
lods
mov
fwait
pop
xchg
and
mov
adc
jbe
fmul
pop
jne
in
xchg
popa
cmp
jae
aad
push
shrb
push
ja
aaa
mov
lret
lret
mull
mov
movsl
lcall
xor
adc
sbb
mov
mov
xor
dec
inc
dec
pushf
nop
mov
xor
cmc
std
std
mov
lcall
out
pop
push
hlt
sub
sub
ret
movsl
xchg
adc
or
sbb
ja
mov
mov
fnstenv
je
mov
vmaskmovdqu
jle
cld
arpl
xor
out
orl
jecxz
and
nop
sarb
inc
mov
jp
inc
xorl
mov
push
pop
int
adc
mov
add
cmc
bound
cmp
pusha
std
adc
ret
mov
pop
xchg
or
fcmovbe
mov
xor
push
adc
xor
pop
cmp
push
pop
nop
pusha
cli
jno
mov
or
ret
xor
std
call
sahf
mov
push
icebp
rcrl
lods
lods
loopne
ror
inc
add
pop
or
cmp
xchg
mov
loope
add
addr16
jg
mov
xor
addb
pop
mov
cmp
jne
jl
cmpsl
and
sbb
cld
in
jl
cs
xor
test
push
mov
mov
cmpsl
inc
and
and
dec
pop
in
in
pop
sar
add
or
mov
dec
fcmovnb
cmp
sub
mov
repnz
fidivrl
dec
rorb
and
adc
sti
das
loopne
inc
loop
mov
push
cmp
or
ret
mov
out
imul
cmp
push
in
pop
lock
insl
je
test
movsl
aad
push
scas
mov
add
jmp
out
insb
and
sub
leave
or
add
js
mov
mov
add
outsb
dec
lcall
or
push
cltd
aas
ret
popa
pop
mov
mov
in
cmc
add
adc
add
jno
es
pop
push
aaa
lock
lods
mov
dec
ds
and
mov
mov
cmc
not
lds
push
rclb
insb
outsb
fldenv
or
add
jne
std
cmpb
jno
aas
jb
jo
mov
adc
fisubrl
in
sub
mov
stos
mov
arpl
pop
adc
cli
cmp
bts
xor
sub
inc
js
mov
push
push
pop
popa
sub
sbb
hlt
mov
insb
or
adc
scas
xchg
xor
sub
push
mov
jae
or
push
push
in
adc
lods
cs
dec
mov
jp
cld
outsb
add
fdivrs
or
sub
xlat
popf
ret
call
and
add
push
pop
hlt
mov
dec
dec
int
out
aas
pop
inc
fs
sub
scas
cs
lret
cmp
rcll
int
sbb
jle
mov
inc
scas
mov
xlat
push
mov
data16
xchg
int
jge
dec
ss
push
daa
dec
or
iret
lds
dec
jns
iret
pop
ja
sub
cld
pop
jg
call
push
dec
cmp
add
aaa
add
and
andb
xchg
jne
add
lods
ret
pop
cmpsl
mov
bound
xchg
scas
in
js
in
movsl
mov
shl
mov
imul
ss
inc
enter
lock
fs
sysexit
icebp
push
hlt
mov
js
inc
pop
jle
or
rolb
jo
mov
or
inc
leave
outsl
mov
clc
ss
and
ds
cltd
push
pusha
and
pop
in
mov
shl
push
les
and
push
xchg
imulb
nop
dec
dec
out
xchg
sub
pop
adc
mov
xchg
dec
fcomps
and
mov
push
pop
lcall
lea
mov
popa
insb
jo
subl
xor
pop
ret
fmul
jecxz
lods
ficoml
add
push
jmp
pop
fwait
jns
mov
cs
push
bts
sbb
add
fnstcw
dec
aas
jbe
mov
mov
rclb
inc
pop
push
dec
pop
push
mov
xlat
xchg
sub
mov
cmpsb
fnsave
inc
push
cmp
xchg
subb
jne
popf
aad
or
inc
adc
shrb
cmpxchg
xchg
sarl
xchg
jbe
mov
add
jbe
fs
cld
notb
test
pop
pop
nop
loope
sbb
stos
mov
pop
lret
js
xchg
adc
jnp
fisttpl
lds
js
shrl
in
fsubl
cmpsb
bswap
popa
scas
pusha
adc
loope
cmp
jl
xchg
cs
adc
cmpsl
lcall
mov
daa
xchg
hlt
fwait
or
cmpsl
int
cmp
xchg
push
out
lea
fwait
scas
sbb
pop
lcall
loop
mov
cwtl
jno
sub
xchg
mov
inc
mov
test
arpl
pushf
mov
push
and
pop
jo
sbb
pushl
enter
adc
ret
or
inc
dec
and
jnp
inc
out
and
mov
add
jns
ja
pop
stc
repz
dec
cmp
mov
dec
lret
fnsave
ret
out
jp
data16
sbb
jbe
dec
repz
xchg
ljmp
xchg
fstpl
popf
into
lods
hlt
pop
pop
lcall
add
xor
addb
xchg
sahf
sub
lods
cmp
out
push
xchg
xchg
data16
in
cwtl
enter
movsl
mov
mov
subl
xor
je
add
inc
adcl
dec
mov
fldt
fsubrs
pop
xchg
je
xchg
inc
mov
in
mov
shl
sub
in
xchg
cmpsl
pop
pop
int
std
cmpsl
inc
lfs
lahf
repnz
adc
fildl
jg
mov
inc
cmpsl
shll
cmp
fbstp
js
jl
rorl
aam
ljmp
popf
lds
mov
or
icebp
jbe
ja
mov
jb
sbb
call
xchg
mov
cwtl
push
jmp
push
mov
push
push
jmp
ret
pop
jmp
mov
cwtl
inc
push
testl
stc
jno
in
and
push
and
roll
add
pusha
mov
jmp
mov
or
call
adc
xchg
and
dec
mov
stc
jp
inc
xchg
movsb
popf
in
mov
js
and
in
or
dec
mov
fiaddl
fcomps
out
fadds
xchg
push
scas
add
fstl
mov
loop
inc
out
call
jl
dec
daa
in
push
jnp
pop
or
repnz
and
mov
lcall
test
sub
dec
mov
imull
loopne
rcrb
shrl
mov
hlt
lret
sub
sbb
sub
jbe
nop
dec
cmp
fisttpl
insb
int
loopne
jge
pop
inc
enter
loope
add
lock
ljmp
pop
incl
lcall
sbb
xor
dec
mov
addb
hlt
xchg
stc
das
sbbb
mov
add
cltd
roll
cmp
mov
mov
adc
inc
shrl
mov
sti
mov
mov
xchg
xlat
sbb
cmp
pop
jg
gs
daa
out
insl
pop
cs
nop
mov
aas
push
mov
idiv
mov
insl
push
test
sbb
loope
fwait
lods
cs
push
adc
cs
sub
out
pop
ret
xor
iret
and
dec
pop
es
cmpsl
lret
std
fwait
xchg
push
sti
loop
in
int3
push
sbb
xor
add
xchg
mov
inc
jl
out
fiaddl
out
mov
repz
jecxz
jns,pt
xor
cwtl
inc
out
pop
sbbl
dec
mov
clc
gs
loope
out
mov
int
in
mov
push
mov
cmove
mov
es
jns
mov
popa
fwait
ss
pop
int
loope
dec
push
sub
add
shlb
cmp
cmpsl
lods
add
int
ds
dec
mov
test
add
popf
stos
arpl
pop
bound
imulb
sub
mov
out
aas
lcall
addl
mov
mov
ds
dec
sbb
rorb
dec
jge
aad
jg
fmull
adc
xlat
scas
cmp
push
push
pop
popf
in
and
in
add
mov
pop
cltd
dec
push
in
dec
rcrb
aas
pop
sti
aad
add
mov
mov
mov
xor
loope
sbb
sbb
ret
fstpt
iret
mov
or
push
in
and
cmc
cmpb
addr16
pop
repnz
push
sub
cli
cmp
pop
pop
lods
andl
rcr
fsubr
dec
xor
in
mov
xchg
fldl
scas
xor
and
pushf
insb
int
inc
in
sbb
das
or
inc
mov
out
cmc
mov
int3
xchg
aam
test
jo
push
fisubrs
xor
rcrb
leave
cmp
fwait
cmp
push
jae
mov
popa
jmp
lret
ljmp
adc
mov
xchg
mov
aad
je
mov
in
mov
insl
pop
push
cld
push
hlt
clc
jg
cmpsb
movsl
xor
mov
and
call
sbbb
fldcw
es
mov
mov
jno
pop
ss
mov
ret
inc
jmp
jno
sbb
push
out
adc
jnp
or
jge
outsb
enter
push
dec
int
iret
sti
into
bound
inc
and
movsl
xchg
pop
hlt
and
lret
add
ljmp
test
or
add
inc
stc
mov
in
mov
loopne
mov
addl
push
mov
popf
jmp
mov
enter
xchg
mov
or
fcmovnbe
push
pop
das
mov
call
sub
roll
dec
enter
cmpsb
dec
push
ja
out
dec
stc
lcall
andl
out
fwait
push
shll
xchg
jbe
jbe
mov
jle
clc
pop
and
adc
sbb
add
iret
or
or
cli
sub
mov
xchg
inc
xor
lock
hlt
jl
repz
fidivs
scas
inc
mov
jp
and
lds
mov
mov
sub
shl
subb
sbb
xchg
or
sub
jns
repnz
movsb
sahf
push
int3
add
xor
gs
imul
xor
sbb
outsl
push
pop
mov
pop
lock
fsts
fistpl
inc
sub
sub
mov
push
dec
push
insl
add
dec
xchg
sub
mov
test
in
dec
stc
cltd
inc
mov
xlat
or
add
sub
mov
xchg
sahf
ror
mov
roll
cs
das
mov
int3
sbb
xchg
in
jp
adc
popa
push
cmc
push
xor
adc
sahf
in
adc
mov
push
or
scas
stos
lods
mov
jo
jne
enter
mov
insl
mov
or
jg
cli
rolb
and
xor
test
nop
xchg
inc
je
loop
iret
jle
js
cli
mov
add
popa
jmp
add
push
pop
mov
inc
mov
push
jl
or
rcrb
fdivl
inc
sti
or
jno
cmpb
sub
out
lock
inc
in
out
test
sub
ljmp
fldl
in
lcall
inc
xchg
inc
mov
test
mov
ret
ficoml
cmpsl
sub
in
mov
lcall
xor
ja
aad
push
test
pop
dec
dec
daa
es
or
ljmp
inc
xor
jno
pop
jno
ja
xchg
mov
fwait
mov
or
insl
pop
and
in
add
lahf
mov
rdtsc
fidivl
pop
sbb
sub
sbb
into
in
cs
add
mov
jo
mov
push
aas
ljmp
shll
mov
mov
sbb
cmp
lock
adc
shl
insb
sbb
cmp
mov
pop
clc
gs
sub
ror
ljmp
push
xor
movsb
dec
movsb
out
mov
lods
dec
sub
jl
or
add
push
out
test
stos
push
in
adcl
pushf
ss
push
push
ja
dec
pushw
dec
push
mov
int3
dec
les
and
nop
cmp
int3
mov
lahf
and
mov
pop
iret
pop
ljmp
out
notl
scas
xchg
push
jmp
fstl
xor
and
mov
imul
in
xchg
dec
or
xor
jne
mov
stos
mov
lock
jmp
cmp
sbb
mov
adc
stc
popa
test
fwait
xchg
add
das
outsl
inc
mov
fistps
or
xor
adc
js
lret
cwtl
push
mov
sub
arpl
cmp
in
cmp
lds
push
push
cltd
dec
cwtl
mov
cmp
sbb
insl
adc
std
enter
jae
sub
or
sbb
adc
mov
jg
dec
sbb
add
sub
mov
call
cmpsl
ss
jo
or
pop
aaa
fnstsw
jg
xor
js
mov
and
mov
or
mov
cmp
loope
xchg
mov
jns
add
cmpsb
icebp
push
sar
adc
in
or
push
aam
and
pop
mov
push
or
out
jecxz
sub
xchg
pop
sub
push
cmp
sbb
xchg
lods
cmpsl
cli
jne
adcl
cmp
sub
into
out
sub
xor
cltd
dec
in
and
or
xchg
ss
push
xchg
lret
rolb
test
dec
or
inc
jb
cmp
pushl
xchg
negb
sarb
enter
je
jnp
adc
jns
fidivs
push
inc
cmpsb
mov
push
mov
ljmp
loope
mov
loope
das
es
repz
mov
ljmp
shl
xchg
aaa
sub
jno
stos
adc
cltd
test
xor
outsb
popfw
lds
mov
lods
sub
jle
popf
lock
loope
stc
mov
cmp
pop
add
mov
sbb
xor
stc
fs
ret
fldcw
xchg
hlt
xor
in
cltd
in
push
in
inc
lahf
pop
jb
push
xor
mov
out
or
mov
sahf
popa
aas
loop
stos
add
sti
xor
sar
outsb
jb
outsl
mov
sbb
mov
sub
cmp
mov
scas
add
mov
fsubl
push
imul
les
test
data16
xchg
lods
hlt
push
dec
mov
stos
cmpsl
shlb
xchg
outsb
daa
pushf
xchg
leave
xchg
dec
push
sub
int3
sub
icebp
lret
cmpl
jnp
or
mov
inc
shrl
sub
push
jbe
pusha
push
in
inc
fistpl
and
xor
mov
and
sbb
icebp
cmp
push
push
sbb
xchg
ljmp
mov
cltd
xlat
add
push
es
cmpsl
insb
pop
mov
imul
out
insl
inc
cmp
push
pop
pop
mov
or
scas
dec
xor
enter
lock
test
test
mov
and
pop
imul
mov
push
pop
ja
adc
repz
repz
jle
mov
lds
or
iret
movsl
js
out
push
int
aam
sub
cli
fwait
jge
ds
xor
mov
push
jmp
xchg
inc
fdivrl
mov
xchg
adc
iret
cli
aas
loope
ret
push
int
add
je
push
pop
in
iret
inc
ss
test
pusha
cmc
movl
clc
je
js
test
lods
cmp
imul
pop
outsl
ror
fdivl
inc
insl
pop
int3
ljmp
loop
cs
add
xchg
cmpsb
jl
dec
shlb
ret
scas
into
dec
out
fldenv
sub
lods
test
sbb
sti
push
pushfw
pop
sub
call
inc
cmp
divl
pop
scas
iret
ja
xchg
imul
sub
nop
data16
ss
sub
pushf
sahf
movsb
negb
mov
sbb
cld
stos
xor
pop
daa
fs
imul
out
ljmp
movntq
out
cmp
dec
xchg
or
test
sub
or
cmp
cs
adc
sub
pop
and
cmp
lcall
cs
xchg
das
mov
mov
mov
jp
bts
lahf
fldt
push
xor
cmpl
lock
cmp
sub
push
lock
pop
in
jle
mov
cmp
and
dec
mov
xchg
push
enter
fstl
push
clc
ds
mov
inc
mov
xor
test
adc
and
xor
add
adc
lret
in
jbe
xchg
shlb
push
ja
test
rcl
in
push
inc
mov
cmpsl
je
cmpsl
add
sub
popf
sbb
std
jbe
lret
fwait
mov
pop
xchg
cld
mov
sub
push
aas
and
shl
cmp
loopne
cmc
mov
nop
push
or
test
mov
jmp
fs
movb
mov
sub
xchg
mov
and
hlt
out
fdivrs
adc
jl
push
enter
push
sbb
test
or
lock
inc
inc
jle
test
mov
in
movb
jmp
push
sbb
inc
je
adc
cmp
fstps
cltd
repnz
lret
test
loope
aaa
popf
repnz
xchg
shrb
jbe,pn
cmp
gs
stc
aaa
xchg
jns
mov
cmp
pop
cmpsb
and
mov
sahf
sbb
aad
mov
adc
rclb
xchg
daa
loop
scas
push
fstpt
mov
or
xor
mov
adc
stos
and
push
out
xor
dec
scas
jp
mov
test
inc
sysenter
push
fistpl
pop
add
insl
rolb
out
pop
jle
fnstenv
es
sahf
push
jae
cmp
xchg
ljmp
sub
shlb
cwtl
lods
pop
xor
jg
xor
into
mov
js
adc
aaa
test
out
orl
aaa
sbb
xlat
mov
xchg
cs
xchg
jbe
xor
ret
pushf
cmp
jne
jmp
pop
stos
mov
cmp
outsl
and
cmp
repnz
leave
cmp
push
call
out
push
mov
jns
sub
xor
push
push
adc
arpl
clc
push
insb
scas
leave
testb
mov
jb
cmp
mov
mov
jb
push
mov
hlt
test
sbb
mov
loop
add
adc
sub
mov
popf
xchg
lahf
mov
lds
add
and
xor
inc
mov
popa
jne
movsb
jb
push
int
add
data16
push
movb
push
repnz
addr16
repnz
push
xchg
movsl
or
dec
pop
mov
and
push
jg
dec
inc
aas
mov
sub
es
push
or
jbe
jg
mov
xor
sbb
cmp
ljmp
push
leave
xchg
shll
jmp
or
and
filds
cmp
pop
inc
and
sbb
jno,pn
dec
dec
insl
or
mov
xor
rclb
add
adc
sub
cmp
mov
inc
int3
stc
mov
repz
outsb
mov
push
faddl
adc
cmpsl
cmp
es
addr16
lods
shl
adc
sub
lock
xlat
xchg
movsb
xchg
mov
push
mov
lret
jbe
dec
pop
insb
add
js
sar
sub
ret
cli
adc
push
popa
jecxz
and
lret
adcb
sub
or
mov
and
test
jae
call
or
test
cltd
aad
sbb
in
cmp
inc
mov
popf
xor
xor
inc
mov
incl
or
fmull
push
aad
or
xorb
adc
stos
not
mov
jg
cmp
jo
test
nop
aaa
or
cld
cmp
adc
fcomip
js
scas
mov
mov
nop
dec
inc
movsl
shll
testl
dec
insb
mov
push
fnstenv
push
clc
int
shl
iret
stc
jle
scas
push
mov
jp
dec
jecxz
add
sub
dec
add
push
dec
or
das
test
ret
xchg
dec
jmp
inc
xorb
add
xorl
push
xor
mov
jmp
or
push
cmpsb
jle
xchg
out
test
pop
mov
sub
jae
push
in
mov
outsb
scas
repz
add
ljmp
add
into
data16
cmc
jle
in
or
test
xor
outsl
jp
movsb
incb
mov
dec
cmp
cwtl
or
aas
jp
add
jmp
imul
dec
ror
cmpsl
jns
cmpsb
fwait
adc
insl
mov
stc
and
fisttpl
or
mov
rol
pop
pusha
push
lods
xor
dec
cli
xor
mov
inc
aad
cpuid
xchg
jl
jno
mov
push
out
jmp
push
icebp
push
xchg
aaa
jb
and
adc
jp
push
jg
lods
negb
rol
pop
in
lock
lods
loop
fcmovb
xchg
cltd
add
ss
mov
xchg
add
xorl
mov
adc
aad
pop
or
cmp
pop
aas
cmp
icebp
inc
fwait
mov
clc
inc
add
addr16
jmp
aad
int3
shrb
push
add
or
mov
jns
icebp
jo
inc
shll
push
dec
je
push
xchg
ret
sbb
dec
daa
jecxz
xchg
insl
lret
in
jecxz
mov
arpl
push
inc
ret
cli
ret
fwait
xor
das
xchg
cmpsl
mov
xor
adc
cmp
sar
imul
clc
lar
in
mov
insb
xchg
jo
pop
leave
dec
pop
add
gs
sub
adc
pop
popf
push
sbb
rcl
xchg
fisubrs
jmp
shll
ljmp
movsl
inc
sbb
insl
loope
loop
xlat
cmpl
pushf
inc
jmp
jle
add
add
cmpl
jmp
insl
cs
and
out
shll
clc
jmp
imul
mov
mov
push
sbb
adc
imul
or
lcall
inc
mov
popf
les
enter
fcmovnu
pop
fstl
inc
ret
and
or
xchg
push
mov
mov
ljmp
icebp
mov
addl
inc
push
dec
movsb
out
imull
ret
mov
mov
in
push
pop
lds
prefetch
or
push
mov
test
sub
push
les
mov
mov
sbb
insl
inc
lret
aaa
xchg
xchg
test
mov
jle
js
sbb
les
outsb
stos
in
push
dec
es
xor
mov
jno
cltd
adc
cmpsb
dec
cmp
and
insl
mov
adcl
pushf
das
jg
and
iret
fwait
pop
mov
mov
int3
mov
out
imul
popf
adc
stos
stc
fbld
cld
bound
sbb
mov
jb
fwait
sti
call
and
fs
ret
into
fldl
mov
fs
test
fisubrl
scas
scas
adc
dec
scas
dec
and
pop
inc
inc
sbb
push
push
sahf
rcrb
mov
in
rcrb
repnz
xchg
sbb
out
and
sbb
lods
pop
dec
bound
or
jge
ss
jno
daa
arpl
jl
shl
cmp
fxch
das
mov
jge
testl
cmp
ljmp
pop
inc
ljmp
push
out
fisttpll
or
stos
xchg
dec
push
xlat
shr
js
call
mov
push
stos
jb
push
add
icebp
inc
cld
insb
lods
leave
test
xor
xor
add
mov
cmp
test
pusha
sub
inc
adcb
fsubrs
arpl
ret
inc
or
jnp
mov
and
adc
test
nop
stos
push
int
sbb
mov
dec
xchg
xchg
pop
mov
xchg
xor
scas
or
jmp
js
imull
xchg
and
es
pop
pop
in
ljmp
gs
iretw
lcall
jge
inc
sbb
push
lcall
and
ret
push
or
mov
fimuls
xchg
subl
fnstsw
movsl
xor
out
push
call
fcoml
sbb
and
xchg
movsl
jge
inc
clc
cmpsl
out
pop
mov
sub
adc
lcall
cmc
xor
bound
leave
sahf
inc
sub
sarl
mov
cli
cmp
or
fimull
dec
adc
cltd
pop
stc
jae
in
adc
mov
loop
aaa
cs
into
pop
adc
inc
push
jae
and
mov
pop
test
add
sbb
mov
fimull
mov
mov
adc
jge
jmp
outsb
cmc
dec
jns
and
add
insl
xchg
cmpsl
cmp
sbb
add
scas
xchg
fwait
stos
pusha
into
jae
pop
xchg
ljmp
dec
cmpsb
sub
mov
push
push
pusha
push
pop
lea
mov
ljmp
xchg
nop
pop
push
adc
xchg
les
sub
hlt
faddl
xchg
push
jne
aas
or
aad
fadd
test
enter
add
mov
sbb
mull
add
outsl
fistl
dec
es
add
lock
sbb
cmp
xlat
and
mov
push
xor
push
dec
jp
jle
lods
sub
dec
addr16
pusha
cmp
mov
jg
pop
cmp
dec
aam
fiaddl
loope
bound
push
xchg
jbe
in
inc
fiadds
and
decb
add
sbb
insl
mov
jle
inc
jecxz
push
into
sar
jp
sub
les
test
xchg
cs
xor
and
dec
push
ja
adc
sbb
daa
cli
dec
call
xor
xor
cmp
lock
jo
fwait
add
dec
fsubrl
sub
and
inc
inc
push
jmp
loop
adc
iret
inc
mov
ret
sbb
imul
dec
leave
inc
aam
jae
pushf
dec
rcrl
sbb
jle
std
push
je
je
pop
sbb
sub
jl
fadds
mov
das
je
fdivrl
xchg
sbb
adc
xor
or
mov
xor
jae
dec
dec
pop
jae
pop
daa
push
test
push
xchg
xorl
jl
inc
sahf
jnp
repnz
jns
ja
xor
loop
xchg
shlb
lds
lods
jle
adc
stos
pusha
sub
bound
imull
les
lds
les
cld
adc
mov
push
cmpsl
clc
iret
out
andl
mov
adc
movsb
inc
jmp
lret
cmp
ds
pop
cs
roll
mov
push
sbb
pop
sub
dec
mov
jb
dec
mov
xor
out
outsb
repz
mov
dec
movsl
lahf
xor
sbb
inc
fldcw
mov
lcall
shrb
and
xor
mov
xchg
inc
fs
stc
and
ret
fsubrl
fwait
out
jns
jb
add
mov
aam
mov
test
in
or
int
inc
and
fisttpl
xor
mov
inc
cmp
pop
push
mov
out
adc
jno
adc
pop
sub
dec
or
lahf
scas
loope
jo
pop
or
xchg
dec
pop
mov
push
mov
cmp
mov
lret
loop
in
jno
lahf
xor
xchg
add
inc
mov
sbb
fnstenv
inc
xor
mov
sti
fisubl
pop
stos
fistpl
mov
mov
jae
cmp
fprem
cmpsb
push
push
aam
sub
mov
cld
ss
dec
and
or
sub
mov
into
shll
sbb
push
cltd
mov
lahf
psubq
es
frstor
arpl
mov
ret
push
pop
rcrb
js
das
push
mov
lahf
and
repnz
inc
add
sarb
sub
fstl
or
movsl
mov
fnstsw
sbb
xlat
in
test
push
fstpt
into
scas
fwait
pushf
cs
rcll
loope
cwtl
mov
inc
and
sbb
test
into
lret
xchg
arpl
xchg
dec
std
in
js
add
mov
mov
ja
pop
adc
inc
cmpsl
cmc
mov
push
sahf
pop
sub
pop
out
stos
xchg
sub
ficoml
dec
test
ss
xor
mov
arpl
push
movsb
sub
cltd
ret
sbb
xchg
pop
pop
pop
aaa
fsubrs
test
pop
icebp
filds
jecxz
outsb
or
pop
pop
daa
mov
iret
mov
shl
or
rcll
cmp
in
xchg
aam
inc
push
adc
loop
arpl
jo
sub
inc
xor
scas
dec
stos
adc
rcrl
jecxz
test
test
cmp
jae
xchg
movsl
fs
add
mov
in
mov
xchg
inc
xchg
imul
shrb
sbb
mov
repnz
and
test
add
sbb
das
into
lds
or
sub
mov
and
jmp
jae
jae
cmp
js
das
and
push
imul
xchg
mov
pop
popl
jl
in
leave
mov
xor
iret
and
in
cli
test
cmp
addb
imul
inc
dec
fisttpll
add
or
shl
push
ss
out
xchg
jge
loopne
push
iret
mov
movsl
dec
or
scas
mov
std
mov
sub
fs
jmp
jg
stos
mov
arpl
add
xor
xchg
pusha
outsl
ss
xor
mov
cmp
dec
push
mov
dec
out
inc
cmp
mov
mov
mov
mov
leave
mov
dec
jno
xor
xchg
jnp
les
mov
stc
lahf
test
push
hlt
xor
cmc
push
stos
mov
in
mov
mov
cli
sbb
dec
add
std
sti
gs
sbb
imul
inc
pop
cwtl
lfs
pop
sbb
imul
pop
push
sub
frstor
fnstenv
add
sarl
jmp
je
jns
loopne
cmp
xchg
je
mov
cld
and
leave
jne
cmp
sbb
vmptrst
std
les
out
sarl
mov
iret
ss
insb
mov
jne
dec
sar
gs
push
bound
push
inc
mov
popf
cmp
dec
test
or
add
std
pop
adc
or
add
ja
push
or
jl
gs
test
xor
fs
pop
add
jmp
sub
xchg
or
pushf
mov
xlat
xor
ss
xchg
lods
mov
stos
mov
adc
push
push
or
fildl
push
pmuludq
loop
sub
jp
mov
dec
push
mov
xchg
dec
cmp
ret
stc
cmp
dec
or
sbb
pop
stos
arpl
sub
add
or
fsts
xor
pop
das
inc
je
dec
jno
scas
mov
jge
adc
stc
aaa
inc
ss
adc
jnp
xchg
mov
shl
push
loop
ficoms
mov
aas
xchg
sbb
inc
mov
jo
test
jmp
cmpsl
cmc
jmp
push
rcrb
imul
je
cwtl
outsl
cmp
push
popf
mov
cltd
popw
aaa
push
repz
imul
pop
mov
add
out
mov
cmp
inc
or
add
repnz
sbb
adc
jmp
adc
insb
lods
cmc
dec
pushf
out
jne
push
mov
mov
sub
push
lcall
ret
or
mov
js
dec
sbb
jns
loopne
jbe
inc
add
dec
jns
imul
dec
jo
jge
repz
jns
pop
lcall
cmp
sub
jbe
sbb
ret
sub
repnz
insb
jo
stos
lahf
cmp
sbb
xor
mov
clc
xchg
dec
push
push
xchg
sub
addr16
fistl
mov
mov
test
xchg
xchg
insb
adc
cltd
push
ja
jle
movsl
push
and
clc
mov
enter
loope
iret
int3
es
adc
push
pushf
and
ret
sub
jmp
out
loop
cmpsb
cmc
rcll
mov
cmc
repz
sub
insb
push
add
xchg
cmpsl
push
sub
test
mov
jns
sub
aas
mov
jmp
xor
mov
mov
mov
push
jmp
lret
mov
mov
test
cs
lret
jnp
fs
mov
cltd
cmp
mov
and
add
daa
mov
mov
xchg
inc
movsb
shlb
fwait
xchg
adc
cld
jp
sahf
sahf
jl
dec
xor
lods
xor
jmp
xchg
dec
test
testb
jmp
xlat
adc
xor
push
jle
jnp
add
rcrb
sub
not
pusha
fadd
inc
or
es
gs
inc
push
int3
push
rcll
mov
andl
test
fldcw
cmp
inc
add
mov
inc
scas
js
cwtl
mov
out
ljmp
shlb
iret
call
push
repz
movsb
daa
test
jl
pushf
in
fsubrs
xchg
lahf
push
inc
mov
pop
ret
mov
jb
sub
pop
cmc
insb
lret
add
mov
incl
jmp
and
sahf
fcoms
aas
lds
inc
insl
mov
pop
jmp
test
fwait
sbb
sub
ret
in
adc
insl
jp
ds
push
pop
aad
adcb
test
mov
xchg
jno
mov
shll
mov
imul
xor
pop
cmovp
and
lret
pop
lcall
popa
sbb
ja
push
es
pop
sbb
cmp
push
aas
jmp
mov
sahf
mov
mov
fldl
mov
mov
adc
cmp
or
or
dec
in
or
mov
push
fimuls
movsl
adc
repz
pop
inc
rcr
pop
mov
xor
pop
push
cmp
mov
jecxz
and
call
sub
inc
ror
mov
dec
xchg
sub
daa
aas
ret
jb
cmpsb
mov
in
les
sub
push
aaa
xchg
imull
scas
ror
into
fistps
inc
bound
xchg
clc
orl
pusha
and
jecxz
shll
inc
or
add
iret
loop
push
or
xchg
xchg
clc
jo
sbb
test
jle
dec
mov
imul
jle
scas
mov
and
inc
imul
mov
or
pusha
repnz
sub
sbb
push
mov
in
add
pop
inc
mov
movsl
and
pop
jl
sbb
lock
sbb
mov
push
das
pop
mov
pop
les
dec
in
jae
adc
dec
cmp
and
lock
pop
into
inc
insb
outsl
dec
push
inc
arpl
adc
cmp
rcll
push
cli
ljmp
arpl
cmc
jae
cmpsb
ljmp
sar
rcrl
ja
or
xchg
pushf
enter
in
fwait
lods
not
mov
mov
jb
and
sbb
dec
jecxz
dec
mov
or
push
cmp
popf
imul
gs
data16
gs
lods
sbb
std
push
andl
fidivs
cli
mov
jle
adcl
xchg
push
int
repnz
fistpll
pop
fcmovnbe
fistpl
pop
movsb
jbe
leave
mov
cmpb
insb
jnp
push
bound
stc
mov
gs
mov
mov
lret
cmp
cmp
cmp
ljmp
icebp
pusha
or
das
pop
bound
xchg
sub
dec
adc
push
test
dec
mov
mov
mov
insb
icebp
sbb
add
mov
add
jp
gs
cmp
sub
and
or
ja
and
ret
add
dec
cmp
or
loop
inc
inc
test
mov
pop
ror
mov
leave
cmp
or
push
movsb
cmp
fs
dec
ss
in
dec
mov
jo
aaa
or
movsb
stos
xor
cmp
jo
dec
inc
test
addb
xchg
and
and
icebp
dec
scas
fsub
lods
js
repz
lcall
in
pop
cmp
mov
cs
cmp
sub
fisttpll
mov
das
or
or
ds
mov
into
inc
iret
cwtl
and
lock
or
mov
push
addr16
leave
push
inc
ret
hlt
in
rorl
test
stc
bound
inc
movsb
call
mov
push
inc
mov
sbb
pop
aas
jp
sarl
es
and
inc
in
mov
enter
fistpl
pop
shrl
cld
subb
popf
jge
pop
xor
lods
lret
ss
push
sub
in
pop
pop
xlat
aas
xor
jecxz
mov
jmp
inc
out
stos
adc
jmp
fisubl
es
test
rcrl
cmpb
lea
aaa
idivb
xchg
cmp
imull
add
add
xchg
fistl
xchg
xchg
je
into
pusha
push
aad
xchg
popa
aam
shll
xchg
subl
adc
xorb
add
insb
mov
fnstenv
sub
mov
add
dec
mov
lcall
jmp
idivl
jge
sub
xorl
add
ja
xor
add
int3
add
mov
dec
pushf
push
addb
ds
fiaddl
jo
into
mov
inc
ret
out
xlat
ret
ja
sbb
or
jb
xor
test
sti
mov
or
sub
fs
bound
inc
jnp
mov
pusha
sbb
jae
push
pop
inc
mov
movsl
aaa
and
xor
stos
adc
pop
cmp
pushf
jnp
xor
pop
mov
push
es
lods
out
adc
jl
ror
mov
movsb
shl
mov
adc
cwtl
arpl
pop
jns
xor
lahf
xor
movsb
jl
test
push
out
xor
lods
insb
fbstp
js
xor
mov
jle
xchg
int3
xor
out
adc
jl
insl
fwait
ds
inc
sbb
sub
cmpsl
mov
jge
adc
push
rcr
cmpb
push
mov
fdivl
pop
xchg
dec
in
jo
mov
jge
add
mov
pop
cmp
rcrl
daa
mov
cmp
xchg
xchg
in
faddp
cmp
xchg
stos
xor
lahf
xchg
call
jae
cmp
dec
cmp
std
xor
mov
xor
shrb
pop
xchg
jo
enter
mov
sub
popf
loope
pop
sub
pushf
scas
pop
fstl
jge
imul
lds
push
in
xchg
in
test
mov
add
aaa
inc
push
mov
std
push
mov
nop
add
mov
cli
cmpsl
cmpsb
mov
mov
popf
rol
ss
lods
pcmpeqb
in
mov
mov
ret
popf
ret
outsl
inc
cmp
fdivl
mov
ror
scas
dec
mov
out
cmc
enter
ja
push
out
jl
dec
js
xor
adc
jo
sub
and
ffreep
xor
lcall
ret
and
push
mov
insb
call
std
mov
popf
lret
int3
loop
shlb
mov
mov
or
cmpsl
in
inc
xchg
jmp
push
or
test
xor
sbb
sbb
jns
push
jnp
inc
pop
insl
xor
call
lahf
and
in
sub
inc
inc
push
jp
scas
mov
lods
jno
fwait
xchg
add
iret
mov
iret
fidivrs
gs
and
stos
test
nop
and
fmull
ds
xor
loop
js
testb
pop
aam
int3
jmp
stc
jne
mov
add
inc
rcl
pop
mov
lcall
mov
leave
sub
js
or
ret
out
or
adc
aam
push
lods
jecxz
mov
add
mov
sbb
lods
imul
stos
das
neg
cmp
and
pop
xchg
inc
jne
or
scas
repz
dec
outsb
and
jne
nop
adc
jg
add
enter
jb
mov
mov
fs
sbb
mov
ljmp
jp
pop
ret
pop
pop
out
xchg
sbb
jno
sbb
sbb
pop
cwtl
pop
in
sub
jbe
lret
push
cmpb
xchg
mov
popf
lods
add
cmp
iret
orb
push
daa
popa
das
push
loop
icebp
out
jecxz
sub
fcompl
push
push
outsl
sbb
fmulp
fs
adc
test
mov
lret
in
imul
jecxz
lock
les
cmpsl
sub
cmp
fsub
insl
ret
mov
int
aad
sub
cmc
shlb
xor
xor
mov
jae
jge
xor
fldenv
dec
int
js
fs
xchg
das
jbe
out
movl
or
mov
test
mov
jo
in
or
mov
into
cmp
stos
or
fs
cmp
push
lret
loopne
lahf
sbb
mov
cmp
push
test
xor
mov
out
bound
mov
sahf
stos
bound
in
add
xchg
mov
add
fistpl
mov
movl
sti
cmpsb
mov
dec
clc
xor
xor
pop
sub
and
loope
xor
inc
sub
mov
push
cmpb
fst
cmpsl
sbb
cmpb
ficoms
pop
imul
mov
pop
xchg
sahf
pop
aaa
and
lods
xor
cwtl
dec
push
loope
jns
lahf
adc
jmp
lock
jno
jmp
insb
mov
mov
jb
or
fimuls
lret
enter
aam
mov
jecxz
inc
xor
scas
fdivrs
scas
movsb
fnstsw
sub
add
sar
movsb
shlb
or
lret
aam
add
mov
mov
inc
jno
pop
imul
and
mov
mov
sbb
cmpsl
pop
inc
push
xchg
pop
jno
inc
xchg
cmp
and
in
inc
adc
mov
iret
cli
mov
add
xlat
add
mov
arpl
and
adc
mov
add
sbb
inc
lods
xor
ja
stos
sub
and
aam
or
push
sti
inc
xchg
popf
lret
push
enter
cwtl
jae
inc
mov
les
inc
lret
cs
imul
jne
xchg
xor
orl
in
leave
jmp
mov
sbb
fimull
and
sub
loop
cmp
lret
jnp
popf
cmp
mov
ret
inc
mov
pop
out
in
xor
add
aad
loop
imul
pop
xchg
mov
inc
mov
add
mov
sarb
add
xor
sahf
mov
call
cmpsl
xor
pop
es
dec
adc
sbb
decl
daa
add
push
out
xchg
cwtl
jbe
cmp
test
sbb
push
jg
adc
xchg
xlat
or
or
lods
cmp
lret
ss
xor
dec
xor
mov
sarl
test
icebp
fadds
sbb
push
shlb
add
or
stos
ljmp
movsl
popf
dec
mov
aad
sub
sbb
ret
sbbl
inc
jle
cmp
sbb
push
push
sbb
les
inc
test
xchg
outsl
ret
shll
push
std
mov
sbb
mov
mov
xor
dec
mov
or
sbb
jae
or
les
test
sbb
xorb
mov
ret
js
test
and
stc
lcall
scas
int
int3
cmp
sub
cmp
lahf
outsl
insb
js
cwtl
jge
xor
loopne
rclb
fidivrl
cmc
test
sbb
fidivl
aam
lea
fwait
fwait
ss
lret
or
mov
mov
xchg
aas
sar
push
push
pushf
in
popa
scas
movsl
hlt
scas
cltd
sbb
in
repz
push
and
sahf
pop
fidivrl
cmp
push
xchg
mov
hlt
outsl
mov
out
jne
mov
cmp
repz
xor
insb
jge
cli
cld
in
jle
scas
push
mov
mov
jle
jno
ja
dec
dec
add
push
inc
pop
mov
aaa
fwait
or
enter
and
push
inc
xchg
cmc
push
mov
lock
fisubrs
or
inc
into
pop
xor
cwtl
cmp
jno
rcll
into
mov
pop
ljmp
int
and
out
mov
pop
mov
mov
fsts
push
and
js
or
or
pop
data16
sbb
inc
xor
sbb
iret
mov
test
sarb
fimull
int3
popl
daa
lcall
mov
pop
mov
imul
push
pushf
dec
ret
and
repz
addr16
xor
cmp
loopne
ds
ret
pop
int3
cmp
repnz
push
dec
and
xchg
or
xchg
ja
pand
mov
jmp
outsl
pop
out
xchg
sbb
sub
mov
loopne
xchg
inc
fisubs
pop
orl
inc
dec
lret
popf
or
jb
shl
fcmovnb
push
addr16
pop
dec
mov
scas
outsl
sarb
pushf
fisubl
cmp
sbb
jns
cmp
xor
add
lret
out
in
push
sbb
out
cwtl
dec
dec
sub
sbb
clc
fcoms
mov
inc
movsl
jp
xchg
sub
in
and
roll
movsl
ret
test
xor
lret
test
stos
mov
ret
mov
mov
test
ss
mov
push
aam
out
jae
push
int
mov
bnd
scas
xor
pop
pusha
out
nop
cs
fcmovu
movsl
xor
into
pop
jo
push
cmp
enter
mov
jo
andl
xor
cmpsb
inc
add
inc
and
stos
add
add
inc
popa
dec
nop
dec
or
jl
fildl
fnsave
std
and
mov
aas
pushf
fisttpll
add
mov
xchg
add
iret
ss
inc
arpl
dec
in
cmp
mov
pop
add
lock
inc
pop
push
push
decb
test
sub
push
ret
cmc
pusha
hlt
pop
mov
sbb
jbe
dec
cmp
pop
inc
cmp
jo
into
stos
xchg
add
xchg
push
or
test
mulb
pop
mov
out
jmp
cmpsl
loope
add
inc
lods
js
xchg
push
and
pop
xor
ret
sub
jp
pop
lods
jns
ljmp
test
movsl
xor
mov
mov
fnstsw
inc
addr16
cmp
enter
f2xm1
imul
inc
cmpsb
leave
push
sub
inc
jbe
shll
xchg
bound
add
dec
xchg
and
fldt
xor
adcl
mov
test
add
orl
xchg
fists
cs
js
ret
dec
test
inc
testb
sub
mov
mov
arpl
add
lock
imull
pushf
arpl
sub
push
adc
push
mov
push
jno
orl
clc
xor
mov
jns
clc
sub
sub
and
into
outsb
mov
lret
push
out
int3
mov
mov
jno
add
pop
xchg
out
push
leave
jb
xchg
fstl
ficoms
fistpl
and
mov
incl
jmp
pop
jnp
mull
ljmp
dec
cmp
push
ljmp
lds
xchg
sahf
mov
mov
mov
mov
pusha
stos
xchg
outsb
push
cmp
in
pop
push
rorl
insl
or
sub
xor
mov
mov
je
popa
xor
jo
add
pop
pop
and
rcll
inc
mov
cmc
push
or
rcrl
lods
xor
shll
popf
imul
repz
jne
xor
cli
xor
leave
push
sbb
xorb
mov
xchg
push
xor
jb
ret
lret
ss
icebp
jnp
sbb
pop
jo
scas
dec
mov
cmp
sti
jnp
cmp
cmp
fcomps
fwait
push
pop
mov
mov
out
mov
and
xor
inc
pop
adc
mov
insb
sub
cmp
mov
adc
cmp
notb
enter
stos
fs
pop
push
jmp
push
sti
loopne
es
stc
adc
ja
fscale
imul
pop
lcall
dec
pushf
outsl
sahf
or
loopne
xor
and
shlb
cwtl
mov
jne,pt
add
scas
jle
testb
push
cmpsb
mov
sub
ficoms
dec
jl
lods
dec
test
push
dec
imul
mov
lea
adc
insl
jg
leave
sub
mov
push
mov
lods
inc
out
mov
sti
out
pop
inc
mov
inc
sub
sti
sbb
mov
ret
mov
popf
mov
in
xor
call
ret
cld
sarl
dec
jp
inc
test
jbe
scas
dec
aas
leave
mov
cli
adc
mov
inc
add
lret
pushf
loopne
push
bound
cmc
fimull
inc
push
adc
outsl
inc
in
mov
cmp
jge
ja
ds
sbb
jge
jge
and
push
xor
in
mov
leave
or
shl
jl
aad
in
aaa
xor
adc
std
ljmp
pop
icebp
lahf
arpl
addr16
into
outsl
iret
in
add
pop
outsb
scas
inc
push
mov
pop
add
ja
xchg
push
dec
scas
xor
mov
xor
or
in
lahf
out
push
pop
push
mov
mov
cli
mov
sbb
mov
xchg
mov
bound
les
subl
add
out
pop
imull
aad
addr16
inc
add
lods
int3
mov
sahf
pop
xor
lods
movsl
and
addr16
mov
addr16
pop
clc
mov
fists
and
out
and
aad
xchg
cmp
pop
jbe
rcll
xor
xchg
adc
call
xchg
inc
out
out
lea
adc
daa
pop
sbb
iret
aam
leave
aam
es
daa
and
push
leave
dec
dec
daa
sub
push
ja
loop
cmp
xor
aad
shrb
shll
and
repnz
or
ss
mov
int
aas
mov
ror
push
mov
ficomps
xchg
mov
xor
fld
cmp
xchg
mov
int3
outsb
cmp
cmc
dec
stos
xchg
push
push
fisubl
mov
dec
ss
es
in
add
mov
sbb
lcall
pop
xchg
divb
out
push
mov
pop
popa
jmp
movsl
fidivs
or
insl
mov
fbstp
mov
lea
cwtl
sub
mov
dec
add
pop
fnsave
lock
popa
movsb
fisttps
shrb
addr16
lcall
mov
cmp
dec
lock
out
pop
out
mov
fs
dec
or
sbb
cwtl
mov
mov
jl
cmp
mov
push
adc
and
ja
push
push
lods
dec
sti
in
sbb
ds
dec
xor
pop
xchg
aas
cmp
jp
jmp
sti
jb
jae
movsb
and
popf
dec
dec
cmpl
xchg
jbe
cmpsl
sbb
fimuls
lds
in
enter
and
loope
aad
dec
pop
adc
cmp
je
push
cld
push
out
mov
jbe
adc
ljmp
xchg
sbb
xor
xor
hlt
bound
xchg
jae
xchg
push
pop
dec
mov
dec
mov
fs
mov
sub
mov
ficomps
pop
cmp
lret
jne
cmp
pop
test
jmp
fnsave
test
movsb
sub
dec
and
sbb
pop
roll
daa
pop
lea
dec
push
push
jmp
popf
and
add
and
adc
cmp
xchg
repz
xor
cmp
mov
stos
xor
sub
mov
push
stos
js
mov
bound
rolb
mov
sti
or
dec
push
test
adc
jg
jl
test
xorl
push
movsl
mov
iret
cmc
dec
sahf
fistpll
xchg
push
lret
cmp
add
in
xchg
mov
aas
stos
pop
shll
xor
xchg
pop
push
pusha
lcall
push
jmp
push
arpl
stc
inc
sub
adc
pop
jle
test
pop
jo
and
xorb
push
call
mov
pop
jbe
in
das
xor
movsl
jg
ret
out
push
mov
mov
inc
push
pop
movsb
push
add
cmp
dec
inc
mov
xor
sbb
mov
insl
push
out
pushf
push
sub
es
push
jo
dec
cmp
inc
cmp
ret
popa
mov
and
int3
xlat
inc
jnp
mov
mov
call
xchg
mov
add
test
jmp
mov
add
dec
in
sbb
dec
push
repnz
xchg
mov
testb
dec
mov
inc
sahf
xor
cwtl
jo
cmpsl
sbb
dec
pop
push
jg
sbb
cmp
into
mov
xor
xor
add
xor
pop
loopne
loopne
in
mov
dec
imul
cmp
pop
and
adc
leave
xchg
or
mov
scas
out
cmp
mov
stc
and
andb
rcrb
push
stos
dec
cmpsb
ljmp
and
jg
sub
jge
xor
cltd
inc
mov
rcl
mov
pushl
stos
sbb
cmpsb
cmp
jge
pop
mov
shl
adc
push
arpl
cmp
lahf
mov
shl
pop
dec
and
je
cld
popa
sub
mov
mov
sbb
mov
push
sub
dec
adc
test
test
fs
rcr
sti
je
push
popf
or
xchg
shrl
fisttpl
ljmp
mov
xlat
ror
aad
ror
popf
icebp
aam
mov
aad
addr16
daa
sbb
and
arpl
cmp
adc
mov
mov
mov
adc
mov
push
addl
jne
cmp
daa
sbb
loope
pop
xor
inc
cmp
hlt
push
xchg
push
add
incl
xor
pop
inc
into
leave
sub
push
lods
out
repnz
sbb
scas
add
test
pop
pop
jge
negb
mov
mov
ljmp
and
out
test
movsb
fwait
xchg
mov
pop
ljmp
rcrl
es
xchg
xor
sbb
cwtl
test
pushf
movsl
call
xchg
orb
pop
add
pop
mov
add
push
jp
ss
fadds
popa
mov
lcall
sahf
sbb
cltd
pop
sub
push
inc
adcl
push
jmp
sbb
sub
cmp
push
pop
fsubrp
lock
xchg
fs
and
leave
out
mov
pop
inc
or
rclb
pop
push
std
inc
shrb
insl
pop
out
or
fsts
les
dec
xor
push
jl
jno
test
pushf
xor
out
fyl2xp1
jp
jno
inc
fs
pop
popa
in
sahf
mov
in
cmp
gs
xor
mov
nop
jmp
inc
and
cmp
dec
inc
lea
arpl
out
push
add
scas
push
mov
call
pop
jb
inc
lock
pop
xchg
mov
cli
mov
jle
rcr
je
mov
or
test
cmpsl
jp
mov
xchg
mov
mov
outsb
xor
imul
ds
sarb
jo
jno
xchg
push
ljmp
je
insl
in
bound
adc
dec
addb
cli
cwtl
adc
les
ds
mov
adc
pop
inc
inc
imul
ja
pop
mov
bound
mov
xor
in
and
jmp
pop
lret
cmpsl
aam
adc
add
jge
std
icebp
insb
pushf
or
jmp
cld
andl
or
test
inc
jp
fucomi
stos
ret
jo
es
dec
cmp
pop
imul
pop
ds
stos
mov
mov
mov
push
fwait
dec
call
mov
push
sahf
inc
stos
mov
lock
aam
popa
xor
adc
dec
out
mov
xor
enter
xchg
ljmp
mov
xchg
cmpsb
mov
je
mov
test
cmc
into
loop
xchg
and
dec
mov
repnz
adc
and
xchg
or
add
stc
sbb
pop
das
data16
xchg
fsubs
adc
mov
sbb
ja
loop
pusha
int3
pause
inc
scas
cs
xchg
int3
push
loopne
inc
cld
mov
mov
fildll
xor
push
decl
jno
mov
xchg
xchg
push
call
push
mov
pusha
and
ds
addr16
push
rolb
ljmp
adc
ret
sub
add
ret
push
clc
xor
stc
out
repnz
mov
or
and
das
mov
aam
and
dec
inc
or
lret
cmp
and
dec
fnstsw
vpunpckhdq
xchg
mov
test
cmp
test
lcall
or
add
sbb
pop
mov
xor
push
xchg
jl
xchg
xor
es
hlt
mov
xchg
lret
cltd
push
and
xor
xor
push
pop
and
sbb
cwtl
sub
pushf
sub
pop
adc
fwait
sub
popa
adc
push
fistl
aam
leave
add
xchg
ret
inc
mov
loop
add
mov
xchg
jnp
ljmp
in
pushf
sbb
jge
sub
pop
ficoml
jp
lods
fdivp
lods
mov
push
loop
pop
cmp
jns
iret
adc
cmpsb
lcall
mov
sarb
repnz
push
add
orl
outsb
mov
xchg
popf
xchg
or
in
cmp
lret
jns
mov
dec
sbb
mov
push
out
xchg
dec
mov
subl
and
cltd
xchg
rcll
mov
dec
daa
lods
mov
add
jbe
xor
cli
into
lds
mov
add
sbb
push
adc
leave
movsl
lret
mov
sub
mov
inc
mov
mov
or
dec
clc
das
cmp
adc
mov
mov
push
xchg
xlat
cltd
loopne
jecxz
and
mov
push
fadds
dec
or
mov
outsb
hlt
mov
aas
mov
jg
lods
out
add
jne
mov
lods
jb
pop
std
mov
mov
lret
mov
push
insl
add
gs
xor
jbe
test
mov
incl
adcb
xchg
sub
ljmp
mov
inc
loope
mov
loop
jle
and
jo
inc
and
pop
xor
mov
fs
cmp
inc
mov
les
mov
lods
stos
dec
cmp
pmaxub
jg
stos
mov
jb
sbb
clc
imul
jmp
jae
pop
scas
xchg
sub
or
je
xor
rclb
ja
sbb
testl
subl
mov
cmpb
aam
int3
lea
push
ds
movsb
mov
push
cmp
jae
test
add
xor
mulb
push
push
sub
cmp
mov
inc
dec
enter
les
std
mov
movsb
jne
add
out
js
lods
stos
idivl
cmpsb
rcl
adc
inc
lahf
mov
adc
and
clc
jb
sub
aad
ret
cmp
cltd
sbb
mov
push
push
dec
jle
jbe
jg
test
push
stos
shll
mov
outsl
je
sar
cmp
push
data16
loop
in
xor
lret
out
sbbl
mov
add
pop
inc
mov
ja
shl
out
jge
pop
xchg
dec
xchg
test
aad
out
mov
mov
js
pop
arpl
div
pop
add
data16
cltd
shrl
or
pop
das
pop
cmp
data16
jno
push
iret
sub
adc
inc
cmp
add
mov
sub
push
mov
inc
xchg
xor
adc
loopne
andb
add
aad
inc
fwait
shll
xor
loop
dec
push
insb
mov
fists
add
jae
test
dec
xchg
sub
rol
mov
mov
hlt
cmp
mov
adc
xor
test
rolb
movsl
mov
pop
mov
push
js
and
jno
inc
sarl
pop
push
push
mov
mov
into
stos
dec
jmp
sti
test
in
add
aam
sahf
pusha
dec
or
push
xchg
imul
dec
test
sub
dec
test
nop
dec
loopne
sub
rcl
adc
mov
sti
out
xorps
shl
fisubrl
inc
pop
mov
dec
inc
call
cmp
xchg
sub
jnp
pushf
xor
push
ret
lea
cmp
cmp
xlat
lahf
adc
sub
sub
jle
xchg
scas
xor
add
into
inc
fbld
or
sti
sahf
pop
cwtl
lcall
push
lds
mov
pop
rcrl
insl
dec
je
call
push
sbb
sbbb
aad
mov
add
inc
das
fiadds
fiaddl
je
nopl
shl
mov
mov
aaa
shll
outsb
push
xor
cmpsl
xchg
test
sub
fucom
and
cmpsb
xchg
and
mov
pop
xor
pop
inc
iret
fwait
addr16
sbb
in
mov
xor
cmp
dec
mov
push
jb
push
ds
add
movsl
pop
lods
jae
into
fnstcw
sbb
sbb
or
iret
rcrl
or
pop
and
xchg
dec
xchg
jmp
inc
cmc
inc
movsb
cmp
xor
mov
or
add
and
push
cmc
fidivs
push
faddl
pusha
ljmp
cld
nop
mov
dec
mov
out
ficoml
iret
out
xchg
sbb
mov
add
add
push
mov
out
fcoms
push
jecxz
pusha
jmp
sub
mov
push
rorb
sbb
pop
stc
pop
stos
shl
je
in
dec
sbbl
xorl
xor
test
int3
out
adc
xchg
repz
cmp
fcmove
test
or
iret
jb
lret
pop
mov
or
adc
mov
rcrl
xchg
lods
test
mov
inc
cmc
add
inc
push
bound
cmp
push
shlb
test
jbe
fisttpl
icebp
pusha
xchg
pop
shlb
mov
imul
sti
test
xchg
dec
cmc
adc
divb
jns
icebp
jae
mov
aas
cwtl
xlat
movsl
into
fiaddl
xor
mov
aas
add
sbb
inc
sar
fwait
lods
push
mov
sbb
daa
mov
dec
pop
and
xchg
fimull
inc
daa
push
fucom
out
push
xchg
push
out
pop
adc
jecxz
or
aad
xchg
jecxz
add
xchg
xchg
clc
insb
sub
rorb
subl
ret
add
and
jge
pop
cmpb
mov
jg
test
outsb
sti
mov
fldt
push
inc
ljmp
push
lret
adc
rolb
ror
ret
rclb
in
int
cmpsb
sbb
xchg
cmp
xchg
clc
push
pop
in
adc
faddl
cld
daa
mov
pushf
dec
mov
dec
pop
jg
outsb
cs
sarl
popa
jno
mov
test
adc
and
aad
aam
sti
mov
xchg
sti
push
leave
jne
rcll
ja
fiadds
cmpsb
loop
in
loope
pop
mov
jge
add
pop
ja
push
xchg
in
mov
lods
adc
daa
push
scas
xchg
int3
mov
incb
jae
test
mov
in
imul
repz
mov
and
mov
push
mov
fldl
test
aas
jmp
shll
ljmp
sbb
rcr
ds
pop
jne
mov
and
divb
mov
shl
loopne
or
mov
and
loopne
shrl
mov
icebp
arpl
sub
ret
call
mov
pop
push
xchg
pusha
dec
js
sbb
nop
ret
and
sahf
inc
push
mov
mov
adc
lods
jno
testb
ja
shll
pop
sbb
jo
and
into
in
pop
or
jbe
sbb
out
dec
xor
pushf
mov
je
adc
imul
in
dec
dec
mov
adc
and
dec
loope
test
cmp
mov
adc
in
sarl
cld
in
out
icebp
adc
scas
mov
xchg
push
lods
xchg
pushf
push
and
in
jae
inc
and
aaa
pop
arpl
lret
push
jle
mov
rolb
xchg
mov
mov
push
jmp
stos
mov
push
jg
cmp
mov
cltd
loop
cmp
sub
mov
jnp
pop
pop
mov
jge
xchg
test
xor
loop
rolb
cld
xor
aad
adc
xor
cmpsb
push
sbb
in
aas
xchg
addl
js
roll
int
leave
inc
imul
pop
ret
notl
sub
or
add
xchg
sahf
sub
stc
jne
jecxz
repz
xlat
psubq
pop
jae
out
call
arpl
mull
jp,pt
cmp
or
cmp
inc
cmc
fwait
sub
sub
jecxz
int3
jnp
clc
xlat
imul
mov
call
pushf
imul
pop
mov
iret
test
insl
cwtl
jno
mov
sbb
add
cmpb
pop
pop
mov
xor
pop
pop
adc
cs
or
cmpl
int3
ret
scas
xor
xchg
mov
cmp
mov
nop
insb
push
or
out
adc
pop
and
movsb
out
rcll
mov
loopne
out
mov
xor
sti
out
inc
xchg
lds
into
jge
sbb
push
pusha
jge
nop
mov
popa
xchg
dec
or
arpl
sub
sbb
xor
andl
dec
add
xlat
adc
cmp
or
icebp
mov
sub
cmpsb
pop
sub
scas
sub
testl
addr16
mov
mov
lods
insb
jo
scas
es
xchg
mov
jge
into
push
jns
enter
mov
push
cmp
xlat
sbb
xchg
ja
mulb
movsl
adc
sub
movl
sbb
mov
xchg
mov
cld
or
cmc
addps
push
adc
sub
cltd
cmp
stc
push
inc
jne
std
xchg
xlat
mov
mov
pushl
pop
fadd
arpl
push
jle
arpl
sub
cs
or
enter
es
xchg
loopne
cltd
test
fstpt
ret
add
insl
pushf
inc
xor
and
addr16
cltd
in
lods
hlt
test
test
dec
or
jmp
add
cmp
fldenv
jno
xlat
mov
ljmp
xor
sbbl
mov
inc
mov
incb
mov
and
add
testb
pop
sbb
loope
adc
and
jp
iret
enter
cmp
in
mov
mov
xchg
movsb
xor
add
and
cmp
lret
sub
fwait
or
push
mov
mull
sub
xor
sub
loope
sbb
jle
mov
rclb
stos
daa
pusha
aad
gs
pop
adc
pop
jle
aam
repnz
xchg
popf
loopne
push
jbe
out
and
sbb
imul
fwait
bound
dec
pop
aam
push
loop
mov
movsb
and
inc
jge
push
sbb
fdiv
xchg
lahf
add
cmpb
out
dec
add
in
mov
inc
pop
mov
out
les
int
leave
pushf
pusha
push
popa
sti
insb
or
adc
push
xchg
inc
lcall
sub
jb
in
xlat
addr16
iret
lret
push
and
sti
pop
dec
ret
subl
push
ljmp
popf
cmpsl
mov
or
or
adc
pop
add
mov
or
sub
inc
js
jg
fmulp
out
sub
mov
movsl
xchg
jnp
pop
or
mov
ret
daa
inc
pop
sar
in
lret
scas
dec
jns
sbb
dec
add
int3
push
push
test
push
pop
or
bound
adc
dec
xchg
mov
mov
inc
cmpl
je
fidivrl
mov
mov
sahf
cli
data16
repnz
xor
mov
sbb
push
jno
fcoml
cltd
mov
inc
lcall
cli
mov
hlt
int3
mov
ljmp
out
insl
adc
iret
add
push
into
dec
cmc
sbb
fcoml
int
in
lahf
lds
sbb
cmp
pop
xor
stos
pop
rol
jbe
test
dec
add
scas
loopne
cmp
ret
jecxz
in
iret
adc
xchg
roll
gs
mov
pop
lock
push
loopne,pn
les
repz
push
and
insl
xchg
cmp
arpl
xor
lock
pushf
mov
gs
enter
mull
daa
je
adc
pop
nop
sar
push
jae
mov
test
cmp
ds
repnz
gs
push
cmpsb
pop
adcb
in
fdivrl
pop
int3
not
dec
mov
sbb
lcall
jne
mov
es
ret
sarb
scas
filds
enter
and
push
add
push
mov
fdivrl
outsb
clc
imull
inc
stos
mov
and
push
pusha
popa
sti
test
inc
ror
rorl
mov
and
sub
jecxz
xchg
xchg
mov
cltd
cmp
cmp
cld
xor
test
mov
les
inc
or
dec
push
cmp
std
mov
out
adcb
jmp
lods
aad
push
rorl
pop
mov
es
jns
lcall
cmp
mov
sub
pop
inc
jmp
xchg
cmp
loopne
loope
xor
stos
outsl
inc
imul
inc
iret
jb
pop
out
popf
sbbl
jno
cmp
inc
fistpl
xor
mov
sub
fbstp
leave
jns
mov
dec
or
inc
xchg
adc
cmp
arpl
sbb
int
pop
xchg
fnstcw
das
clc
cmp
add
xlat
cli
jno
test
xchg
jne
std
mov
lods
mov
shlb
sahf
jg
jbe
ja
mov
dec
cmp
lret
addr16
jl
xor
mov
and
aas
fwait
add
jno
xor
aam
dec
inc
movsl
sbb
shl
or
inc
loopne
in
jg
mov
mov
scas
loop
aad
fsts
sbb
sub
cmp
xchg
mov
cmp
or
add
in
das
xchg
adc
scas
mov
test
ja
lret
imul
mov
outsl
adc
movsl
mov
sahf
sub
shll
adc
inc
aad
mov
in
cli
dec
lods
dec
clc
jae
popa
sub
mov
in
xor
hlt
movsb
pop
add
outsb
das
add
test
shlb
push
inc
orl
subl
or
adc
dec
sub
jb
bound
add
addr16
loope
mov
xchg
pop
sti
das
dec
mov
adc
mov
std
fldenv
sbb
and
mov
cmp
icebp
aam
cltd
mov
xchg
push
and
je
test
xchg
xchg
std
xchg
int3
scas
inc
push
shlb
pop
cmpsb
mov
pop
cs
in
rol
lahf
mov
jnp
rol
sub
cwtl
int
sahf
and
js
incl
ljmp
sbb
sub
fidivrs
xchg
lock
xor
stc
pop
iret
enter
xor
mov
push
mov
jae
pop
lds
and
nop
fldenv
stos
jl
cmpsl
sub
push
xchg
jle
dec
add
xor
ror
sarl
or
push
fwait
rcll
add
push
dec
pop
inc
lcall
push
out
popa
outsb
push
push
xlat
scas
xorb
pop
jle
lcall
dec
mov
pop
sbbb
push
inc
out
mov
inc
xchg
jno
xor
lods
incb
and
outsl
pusha
xchg
fstl
or
dec
push
stc
mov
cwtl
cmp
xchg
sbb
add
test
sub
shrl
pop
hlt
sbb
aaa
outsb
push
and
jbe
jb
cmp
mov
cmpsb
es
or
jbe
pop
push
popa
dec
add
adc
sbb
leave
insl
dec
loope
addr16
add
ljmp
push
dec
xchg
rclb
inc
cmp
fcoml
es
bound
imul
mov
dec
pop
out
jle
out
pusha
dec
and
push
sub
pop
in
jle
jmp
cmp
dec
cmp
dec
shll
outsl
repz
or
mov
xchg
test
mov
adc
in
cli
sbb
dec
or
bound
mov
out
push
scas
sub
bound
je
cmpsl
icebp
and
and
add
pop
roll
and
xchg
lods
jmp
mov
test
cmpsb
ljmp
pop
mov
lds
push
repnz
js
insb
and
sub
shll
adc
mov
clc
stos
and
mov
cli
lahf
mov
adc
inc
and
mov
jmp
xor
addr16
adc
fwait
add
pop
mov
xorb
ret
dec
sub
push
shrl
mov
cmp
outsl
in
add
inc
in
out
cmp
xor
adc
inc
fidivs
pop
sahf
pop
aam
in
inc
cmp
test
mov
mov
lahf
jnp
aaa
movsl
cmc
push
xor
xorl
adc
jns
insl
dec
jo
fwait
sbb
xchg
add
in
jno
je
aad
repz
mov
in
jns
cmc
jns
icebp
icebp
in
or
cmp
fs
aas
and
sbb
dec
out
cmc
fsubrl
inc
push
sub
in
ret
movsb
sub
out
orb
mov
popa
out
mov
mov
das
lea
inc
add
ss
sbb
inc
scas
and
movsl
push
inc
movsb
mov
mov
bound
cmc
sub
lock
jae,pn
sbb
cmpsl
stos
xor
add
xlat
push
and
mov
sti
and
rorl
movsb
ss
mov
imul
or
lea
xchg
dec
pop
lcall
sbb
insb
in
mov
repnz
jmp
inc
or
sub
pop
jecxz
hlt
push
and
loopne
mov
movsl
out
subb
adc
cmp
rcll
and
aaa
mov
xor
push
jo
adcl
lcall
andb
jno
jle
dec
pop
sbb
push
mov
aaa
outsb
lret
pop
sub
in
bound
repz
xchg
pop
leave
inc
call
rcr
lds
loope
or
jmp
mov
push
push
inc
mov
dec
jne
jmp
mov
or
or
leave
call
jnp
andb
loop
mov
and
jae
lods
mov
mov
jmp
jle
xchg
lea
adc
xlat
fdivrs
in
lret
in
xchg
push
push
jb
lea
aas
mov
fwait
pusha
js
xchg
rcll
mov
jp
jo
push
cmp
and
shlb
adc
imul
aam
sub
inc
mov
dec
jg
sarl
pop
xor
imul
clc
adc
jle
int3
call
outsb
xchg
and
mov
js
mov
pop
mov
loop
xchg
clc
pushf
mov
dec
repz
xor
pop
repnz
xor
aad
cmpsl
and
sbb
push
and
test
adc
and
insb
inc
stc
xchg
jne
mov
out
stos
lret
xchg
test
call
and
insl
daa
xchg
dec
push
sub
pop
adc
or
roll
push
xchg
repz
fbld
push
es
jae
imul
pusha
nop
pop
push
in
lea
xor
jns
popa
jae
arpl
mov
mov
sbb
jae
std
sub
scas
and
add
int
inc
out
dec
cmp
das
lcall
dec
int
sahf
shlb
mov
sbb
xchg
cwtl
stos
outsb
imul
dec
mov
sub
jae
xor
pop
push
jg
pop
insl
cmp
jae
jno
xor
add
sarl
lcall
jp
movsl
xlat
test
or
insb
sbb
shrb
mov
ja
dec
jo
idivb
sbb
roll
jb
xchg
fwait
mov
lret
loop
mov
sub
insl
pop
or
pushf
push
test
shlb
pop
pop
test
es
pop
xor
fsubl
nop
cli
loop,pn
inc
popa
push
cld
cmp
ret
jp
xor
adc
mov
push
add
dec
mov
mov
repz
shl
out
ret
ret
aam
insl
mov
cmc
push
into
fsubr
cmc
repz
and
and
cld
fdivrs
inc
nop
jmp
mov
loopne
repz
inc
mov
sub
lock
and
insl
lea
lock
lods
stc
dec
add
loopne
xchg
enter
lret
dec
add
xchg
push
sbb
and
sbb
cmp
xor
jno
xchg
ret
enter
or
mov
xchg
or
ss
jbe
pop
add
xor
das
cmc
movups
aad
repz
pop
mov
xchg
mov
xchg
dec
fs
into
inc
arpl
popa
add
icebp
das
orl
push
test
out
sahf
mov
sbb
aas
arpl
into
and
push
mov
xchg
mov
jnp
cmp
jbe
lahf
xor
fwait
xchg
add
xor
mov
scas
sub
mov
xchg
leave
jmp
mov
add
lret
inc
adc
popa
movl
out
rcrb
inc
xor
sbb
push
fnstenv
adc
leave
decl
ss
filds
push
movsb
arpl
mov
inc
adc
jge
xchg
push
mov
or
adc
sbb
shll
mov
and
jb
dec
mov
mov
mov
pop
add
jno
fadd
out
imul
in
das
js
mov
popf
cmp
and
loope
add
ljmp
pop
pushf
jle
jnp
mov
mov
or
or
mov
xchg
mov
add
or
test
aaa
adc
cmpsl
pusha
dec
cli
in
rol
mov
movsl
sbbb
and
jbe
fidivrl
aaa
add
dec
add
and
rcrl
fcmovne
mov
inc
mov
ror
mov
adc
xor
push
push
pushf
cmp
nop
jmp
xchg
mov
cli
dec
stc
mov
ret
push
cmpps
or
mov
int
out
js
ljmp
add
push
and
inc
aam
fwait
es
or
xchg
cs
iret
xor
jnp
xchg
scas
outsb
cmp
es
stos
pop
and
mov
cmp
repz
and
stos
loop
in
mov
adc
cmpsb
push
adc
mov
xor
fmuls
mov
hlt
inc
cmp
test
bound
orb
inc
add
enter
cwtl
js
frndint
in
ficomps
and
in
leave
jp
loope
mov
and
push
fs
sbb
xlat
push
jo
orb
mov
fsubrp
rcl
std
inc
add
push
daa
mov
xor
jb
pop
dec
popa
arpl
lret
inc
sti
loopne
lret
mov
mov
out
dec
repnz
repnz
inc
pop
cmpsb
dec
mov
repnz
pusha
movsl
out
fwait
cmp
xchg
lret
inc
std
fisttpll
xor
bnd
add
push
gs
dec
fucomp
add
add
leave
clc
std
xor
daa
popf
jmp
call
movsl
loop
xor
mov
addr16
adc
pop
rol
dec
pop
aad
inc
add
lods
xchg
push
cmp
inc
inc
cmp
push
nop
outsl
jl
out
neg
or
outsb
fisubrs
shlb
dec
mov
in
push
shll
xchg
popa
repz
dec
sahf
sbb
xchg
in
clc
dec
pop
inc
and
pop
iret
or
push
mov
dec
aaa
imul
sub
cmp
pop
test
pop
call
movsl
out
mov
pop
fs
and
sbb
jb
subl
popa
stos
mov
dec
xor
xchg
push
sbb
sub
mov
fnstsw
pushf
xchg
pushf
lcall
inc
test
mov
add
in
push
sub
jns
mov
and
jno
add
push
adc
push
neg
test
mov
das
add
push
in
push
aaa
and
mov
in
loop
dec
in
addb
adc
mov
adc
mov
repz
sahf
push
lahf
inc
outsb
loopne
jl
jl
push
in
cmp
sbb
loope,pt
sub
mov
lahf
push
jo
xchg
outsl
sbb
test
rcr
pusha
lods
or
mov
std
fcoms
and
inc
and
mov
ss
dec
mov
loop
jmp
fistpll
lea
ret
pop
in
push
shlb
mov
hlt
test
movsl
out
iret
xchg
das
addr16
add
pop
add
jmp
out
xchg
jmp
not
cmp
push
push
xor
xlat
fs
clc
outsl
shlb
scas
add
add
and
jbe
fisubl
shrl
mov
sbb
pop
es
loope
cmpsl
pop
lock
gs
pop
cli
lods
jo
sub
add
lds
and
jo
mov
adc
dec
cmp
gs
jecxz
or
lea
lcall
jbe
mov
xchg
or
inc
test
pop
cltd
and
les
cmp
mov
lods
push
enter
inc
cmpsb
mov
pop
enter
gs
dec
cli
xchg
call
jae
add
xchg
xchg
lds
push
je
dec
mov
xchg
out
or
out
pop
mov
cmp
out
scas
lods
fs
lahf
sub
insb
push
dec
inc
inc
loop
push
adc
gs
lea
out
pop
or
dec
dec
cmp
xor
sub
cmp
jb
insb
mov
adc
mov
sub
out
repz
les
pop
sub
or
repz
loope
mov
aam
cmpsb
aam
ja
and
push
adc
sub
cmp
test
es
movl
dec
addr16
add
cmp
mov
aad
mov
jae
neg
mov
sub
pusha
cld
xchg
out
mov
inc
popa
fisubrs
stos
and
fucomi
hlt
imul
scas
fimuls
dec
inc
fbld
jle
xor
cmp
dec
dec
adc
add
and
call
push
dec
inc
mov
mov
xchg
inc
xor
testb
loop
clc
xchg
jp
jp
xor
inc
dec
mov
xor
gs
jp
jns
ja
add
clc
fcmovbe
cmp
cwtl
movsl
test
or
hlt
jnp
dec
repnz
lock
push
inc
mov
pop
push
adc
sbb
jle
jge
sub
call
add
notb
push
shl
xchg
stos
stos
add
add
push
xchg
jle
xchg
ss
cmp
mov
pop
mov
mov
roll
jge
inc
cmp
mov
movsb
lret
cmp
stc
sti
add
ljmp
ds
add
shlb
inc
push
or
inc
lods
xchg
jne
notl
push
lret
and
loope
test
push
pmulhuw
mov
rorl
bswap
xchg
hlt
jmp
mov
imull
repnz
out
xor
popf
cmpb
cmp
lcall
cltd
in
outsb
and
in
lahf
ret
aaa
or
add
pop
leave
imul
sbb
add
pushf
cmp
pop
cmp
xor
nop
into
pop
push
or
jns
jecxz
pop
loope
sub
lds
or
mov
dec
fs
pop
stos
mov
insb
and
fs
sahf
scas
inc
in
dec
jl
xor
xchg
lea
cmc
inc
sub
xchg
add
mov
jp
lret
out
xor
and
xor
out
imul
inc
dec
in
cmp
ret
jl
cmpsb
jno
lods
popa
jp
nop
ret
imul
dec
bound
mov
push
arpl
push
cmpsl
cld
leave
test
push
lea
inc
fchs
hlt
inc
cmp
rcrl
and
insb
and
mov
int3
insb
roll
movsb
jl
cld
xchg
jnp
adc
or
dec
mov
push
mov
xchg
nop
lds
mov
in
imul
ds
fwait
movsb
inc
or
inc
push
sub
jne
scas
jnp
xor
cmp
jp
test
jb
sbb
mov
lods
add
jmp
mov
push
dec
and
enter
jp
repz
jecxz
dec
cmp
cld
out
sahf
stos
xor
jnp
leave
sbb
dec
push
xor
cmpsl
sub
dec
packssdw
rorl
jns
popl
pop
shll
or
pusha
lcall
mov
enter
out
push
lcall
xchg
add
jp
inc
sarl
pop
fstpt
in
adc
das
and
pop
test
adc
std
je
les
daa
aad
lds
out
in
addb
dec
xlat
test
mov
stc
daa
or
inc
mov
call
xchg
pop
icebp
ja
add
sbb
mov
imul
mov
loopne
int3
xor
push
cli
pushf
or
adc
mov
sbb
gs
mov
out
les
lea
ja
or
into
mov
xor
outsl
cld
sti
es
stc
add
push
loop
add
ds
mov
pop
shlb
push
jno
inc
sbb
adc
nop
jnp
in
mov
rcll
cltd
int3
shl
stc
mov
aad
mov
pop
ja
mov
sbb
pop
out
ljmp
mov
mov
jg
ret
mov
insb
inc
lcall
xchg
test
out
aad
mov
cmp
cwtl
jp
in
mov
pop
sub
xor
jno
adc
mov
lret
dec
stc
pop
cmp
mov
mov
cli
imul
mov
sbb
ljmp
add
pushf
test
in
or
cmpb
ja
std
out
data16
adc
add
jns
pop
test
mov
xor
lret
andl
inc
pusha
dec
push
or
mov
and
sbbb
xor
inc
testl
movsl
lea
mov
sbb
cmpsl
xchg
movsb
ja
dec
and
ljmp
mov
cmc
cwtl
aad
pop
mov
adc
jne
shl
add
pop
int
mov
sub
lea
inc
daa
mov
insb
test
pop
pop
sub
aad
mov
sub
xchg
dec
push
adc
xchg
inc
call
push
xchg
jg
cli
xchg
lret
lret
or
enter
mov
adc
and
lret
mov
scas
shll
nop
sbb
lock
xchg
int3
xlat
jo
jl
cmp
sub
add
mov
ljmp
mov
stos
shr
add
pop
add
subl
sahf
lock
dec
dec
mov
out
add
aad
enter
pop
fldenv
mov
jecxz
xor
pop
xor
andb
inc
fisttpll
or
out
push
popa
xor
pop
addr16
shlb
push
xor
or
xor
jae
adc
test
jne
dec
ficomps
or
sub
xor
and
mov
aaa
jae
adc
mov
mov
iret
outsl
sysenter
sbb
cmp
inc
das
mov
mov
xor
fadd
clc
cs
cltd
packssdw
loopne
js
jmp
push
adc
mov
sub
pop
aam
or
dec
mov
stc
ja
insl
lret
and
pop
repz
mov
xchg
outsb
dec
xor
xchg
pop
sub
xchg
repz
mov
xor
scas
mov
inc
out
imul
sti
mov
jg
jl
xchg
mov
xchg
fcmovnb
xor
sahf
pop
push
add
int3
out
pop
out
iret
nop
pop
aas
scas
add
push
or
scas
inc
scas
xchg
mov
jmp
mov
lock
push
sub
ja
jno
pop
dec
mov
pop
movsb
push
popf
movsb
pusha
mov
jo
sbbl
push
dec
jge
rcll
scas
out
lea
mov
adc
mov
or
out
fs
bound
or
mov
fmulp
cmp
pop
bound
test
mov
jge
repz
loopne
js
adc
leave
out
mov
hlt
in
adc
daa
shlb
rorb
lret
xor
mov
je
and
xor
lock
rcll
movsb
rcrb
adc
xor
lds
test
dec
dec
or
cwtl
push
jp
and
xlat
in
pushf
outsb
pop
call
dec
dec
out
dec
int3
js
xlat
inc
or
test
dec
int3
mov
lahf
mov
xor
jne
fstpl
jbe
push
push
inc
pop
imul
out
jo
shrb
out
sarb
jae
mov
fcomi
cmp
iret
sbb
idiv
movsb
sub
mov
dec
sbb
dec
jecxz
xchg
sbb
jae
jg
in
mov
stc
jo
mov
lods
mov
adc
stos
loope
shll
cld
and
int
les
imul
jl
cmpsl
add
adc
inc
ljmp
add
fcomi
insb
sub
fdivl
out
mov
outsb
xchg
mov
dec
sarb
gs
dec
jno
xor
cmpsb
pushf
or
rorb
or
jle
pop
testl
insb
push
call
push
fucomip
ljmp
stos
sub
or
adc
mov
pop
sub
push
xchg
jne
aaa
mov
mov
jge
jno
pop
out
aaa
inc
dec
lcall
and
roll
rcrb
icebp
push
sahf
imul
clc
hlt
pop
mov
mov
pop
xchg
int3
fstl
outsb
xchg
movlps
repnz
les
lods
int
inc
scas
adc
addb
add
sbb
mov
cmc
jnp
mov
enter
or
popf
pushf
xchg
and
sbb
pop
push
shlb
or
inc
mov
pop
lcall
adc
jp
dec
in
cmp
cltd
pushf
enter
lods
cmpl
sahf
adc
pop
dec
mov
dec
pop
dec
sbb
inc
dec
jns
push
es
ret
jne
and
mov
pop
jno
stos
cld
int
push
fwait
dec
scas
clc
sbb
sub
daa
or
jp
and
lock
pop
or
dec
sahf
sbb
fs
sbb
hlt
ss
lods
fidivs
push
or
inc
movsl
int3
sbb
or
lock
ja
shll
imul
out
outsl
cmp
pushf
rolb
fisubl
bound
andb
daa
aas
xchg
push
dec
cmp
sahf
es
sbb
popf
or
cltd
inc
aad
ljmp
pushf
sbb
or
mov
or
das
ret
mov
xchg
cmp
jle
add
out
jbe
call
fistpl
fisttpll
mov
daa
xchg
pusha
mov
and
les
lock
mov
mov
lret
push
mov
in
ret
push
nop
loop
testb
fildll
lret
jmp
call
cmp
inc
movsb
jne
les
mov
das
mov
push
mov
push
test
pop
mov
in
cmp
cmp
in
and
xor
cmovnp
xchg
mov
mov
lods
mov
decb
cmpsb
imul
jns
xor
out
outsl
xchg
arpl
mov
arpl
xchg
push
arpl
sbb
mov
xchg
pushf
add
push
je
lods
push
std
sbb
push
adc
or
cld
mov
jmp
incb
out
mov
lods
mov
cltd
out
fidivs
movd
adc
add
inc
pop
pop
cld
mov
subl
pop
mov
ljmp
mov
test
mov
add
bound
xchg
jbe
pop
and
cmpl
inc
imul
inc
jbe
bnd
popa
rcrb
out
rorl
pop
xchg
and
ret
mov
xor
je
cmpb
shrl
out
mov
push
stos
cmp
push
fsubl
test
js
push
xchg
rcll
xchg
lret
push
inc
mov
out
sbb
repnz
sub
shlb
mov
sbb
mov
outsb
sub
dec
iret
add
and
lret
cmp
sbb
jmp
and
loopne
lea
xor
jb
nop
push
jns
bound
popf
enter
insb
inc
push
je
dec
cmp
push
pusha
mov
shrb
mov
int
jl
jne
lret
arpl
sbbb
push
aas
lock
clc
lret
ljmp
enter
ss
mov
in
loope
cmp
lcall
xchg
sbbb
test
repnz
lds
pop
adc
mov
push
orl
shll
fdivr
adc
scas
cmp
add
mov
mov
jo
cmpsl
pushf
xchg
icebp
sub
aaa
mov
jbe
loopne
jp
pop
pop
faddl
aam
dec
sbb
inc
or
jl
leave
nop
jl
arpl
hlt
enter
out
and
sbb
jns
push
daa
cli
imul
sbbb
jl
jnp
jnp
repnz
lret
and
loopne
cmc
jecxz
mov
or
sbb
mov
cmpsb
outsl
xor
loope
arpl
dec
mov
push
cmp
and
or
gs
xchg
shlb
mov
mov
outsb
in
adc
cmp
mov
fidivs
lret
lds
push
inc
mov
ss
in
mov
sub
add
or
jbe
mov
push
pop
inc
jmp
inc
xchg
jg
mov
scas
jns
adc
mov
dec
shll
cmp
pshufw
xor
aad
pop
pop
addr16
mov
push
push
push
add
mov
jl
mov
sti
repz
xchg
ja
fnsave
mov
push
icebp
fdivl
sbb
mov
ss
xor
fiadds
inc
pushf
mov
data16
jg
jnp
mov
lahf
lds
lods
and
movsl
xchg
pop
and
push
add
test
lods
push
or
loopne
cltd
ljmp
je
lods
and
ret
icebp
add
fidivrs
mov
sub
int
fistpll
pop
test
test
insb
jbe
movsb
and
or
adcb
mov
xchg
mov
pop
loop
jl
mov
and
hlt
sahf
dec
inc
lods
jl
add
call
push
cmp
xor
push
sub
lods
mov
cmpsb
and
test
dec
fidivs
mov
mov
mov
repnz
leave
inc
int
int
mov
or
dec
insb
mov
mov
adc
idiv
push
leave
sbb
xor
lret
dec
inc
mov
inc
push
mov
cwtl
inc
mov
lcall
add
nop
push
mov
shrb
imul
lods
mov
jg
dec
mov
dec
add
movsl
aad
fdivs
js
dec
add
xchg
pop
jns
adc
mov
dec
dec
pop
jmp
mov
pop
stos
repnz
xchg
mov
adc
ficoml
dec
into
jno
pop
testl
sub
sbb
nop
xor
cmp
mov
rcr
leave
cmp
mov
bound
inc
stos
fistl
bnd
xchg
mov
aam
aaa
jnp
sahf
push
addb
gs
hlt
cltd
fstps
lea
jnp
pop
cli
add
mov
inc
pop
cld
daa
sbb
js
or
mov
sti
popa
mov
clc
mov
inc
mov
push
sub
push
xchg
mov
and
shlb
xchg
pop
sub
ret
imul
xor
or
fnstcw
fistpll
fwait
mov
movsb
jnp
xorl
xchg
stos
outsl
mov
mov
ret
xor
insl
cmpsl
dec
pop
cld
aaa
inc
stos
dec
ss
and
adc
push
dec
fwait
inc
push
lret
dec
fnstenv
pop
push
push
xlat
andb
add
loop
mov
xchg
add
sbb
pop
push
sbb
xor
lds
pop
sub
mov
dec
mov
shll
push
jno
jl
sbb
xlat
mov
cs
sbb
dec
out
xchg
cmpsb
aam
loop
scas
in
and
sub
sti
jb
mov
mov
pop
mov
xchg
rol
mov
lea
notl
outsl
and
aad
cmpsb
sub
frstor
pop
mov
add
inc
in
jecxz
lea
shl
rorl
scas
daa
out
mov
je
inc
and
call
cld
push
push
test
or
insb
popf
mov
stos
inc
test
add
insl
lock
sbb
mov
dec
fldl2e
negb
loopne
test
lret
cltd
movb
jne
fcomp
outsb
les
mov
mov
daa
popa
mov
std
mov
and
jns
icebp
test
dec
push
xor
gs
adc
adc
add
lret
repz
sbb
lods
dec
test
add
cmp
and
pop
inc
ja
dec
adcb
out
add
out
insb
ficoml
neg
fmul
bound
xchg
mov
dec
lea
sub
lods
and
jmp
push
or
popf
inc
pop
ja
mov
add
in
hlt
jge
jo
or
sub
scas
outsb
mov
sub
cmpsl
leave
mov
pushw
inc
jmp
jb
dec
pop
or
xchg
lret
lea
shrb
imul
rcrb
add
inc
movsb
scas
mov
push
mov
outsl
inc
xor
xlat
mov
xchg
push
pop
jnp
cltd
out
push
cli
lock
mov
xchg
or
add
sub
mov
pop
lea
mov
imul
adc
stos
inc
pop
sub
add
ret
mov
xchg
sub
xchg
aas
xchg
popa
cmc
incl
mov
xchg
aam
testb
push
ret
rorl
data16
in
add
cmp
dec
mov
loopne
lods
push
mov
inc
stos
lods
xchg
call
rcrl
add
mov
pop
imul
stc
or
icebp
or
psubusw
adc
test
loopne
lds
or
add
push
aad
mov
lods
ds
dec
fbld
jmp
mov
stc
pop
sti
cmpb
cs
xor
pop
daa
notb
int
out
fiadds
jmp
and
out
inc
adc
repnz
mov
jb
push
in
mov
add
jmp
in
les
inc
adc
stos
push
cmp
shrb
dec
addr16
movsl
addr16
leave
gs
jbe
int
xor
mov
daa
and
adcb
push
fistpl
pop
mov
popa
jecxz
lods
nop
jae
cltd
pusha
divb
push
xor
ss
filds
fstps
jb
add
mov
push
popf
jae
ss
and
ss
shrb
mov
mov
xchg
jmp
lods
xor
push
inc
shll
cmpsl
lret
mov
sub
mov
mov
dec
push
shlb
dec
dec
inc
and
addr16
pop
or
outsl
lds
xchg
jmp
mov
pushl
and
cmp
sbb
dec
cs
and
push
xlat
je
push
enter
pop
and
popa
push
lock
sti
mov
adc
sbb
push
stos
mov
jmp
mov
pop
leave
fldcw
loopne
pusha
daa
pop
and
fbld
sbb
or
sbb
aad
push
ds
sbb
xchg
repz
jno
xor
fwait
mov
shll
es
scas
leave
test
cmpsl
icebp
inc
xchg
mov
xchg
cmp
cltd
ror
div
es
ds
aas
data16
fnsave
movsl
mov
lahf
stos
cmpsb
mov
imul
sahf
aaa
dec
jle
mov
xchg
aaa
jmp
out
mov
int
cmp
scas
stc
xorl
pusha
cmp
pushf
inc
in
push
cmc
mov
mov
ss
enter
cli
in
pop
lret
cltd
fdivp
mov
lods
pop
inc
jl
jmp
test
adc
mov
fwait
pop
push
mov
jne
cwtl
xchg
mov
xchg
xor
mov
or
mov
or
ja
adc
iret
cli
sub
insl
push
data16
out
xor
pop
mov
push
fimuls
xchg
cmp
sahf
cmp
jae
imul
push
mov
mov
jnp
mov
arpl
insb
mov
arpl
sbb
popa
add
lret
push
fs
xchg
pushf
decb
test
mov
test
xor
adc
pop
xchg
cli
testl
sarl
xor
pushf
cmp
mov
xlat
lods
pop
push
into
insl
loopne
mov
push
lea
jb
aad
cmp
popf
repnz
shrb
out
cltd
out
pushl
testl
in
aam
sbb
xchg
inc
adc
outsl
loop
daa
inc
jbe
sbb
dec
cltd
xlat
cld
pop
xor
add
cmp
icebp
lret
mov
xorl
and
pop
mov
shr
cltd
mov
xor
adc
imul
and
cmp
adc
add
cmc
jb
into
push
gs
sub
cli
mov
xor
push
push
push
pop
mov
adc
mov
aaa
mov
cmp
mov
rcll
dec
mov
in
sub
pop
cmp
rclb
add
je
push
aad
xlat
mov
mov
mov
jge
jnp
pushf
dec
lods
in
call
dec
push
sbb
sbb
sub
push
sub
inc
pop
sti
lds
repnz
ds
inc
jne
lea
test
inc
jle
arpl
dec
dec
sbb
jecxz
test
les
xor
cmpsl
dec
sbb
imulb
xor
or
lods
xchg
add
xor
je
out
bound
sub
mov
cli
cltd
cli
pop
out
stos
add
xchg
push
test
push
andb
popf
das
mov
aad
pusha
fdiv
inc
inc
sti
lods
in
mov
add
pop
jnp
lcall
in
mov
mov
pop
inc
fwait
mov
cwtl
addl
iret
mov
shrb
pop
and
mov
jo
sbb
sarb
imul
dec
push
xchg
faddp
enter
xchg
or
pop
mov
jo
fsts
xor
adc
out
dec
das
xor
nop
scas
adc
and
movsl
dec
jmp
or
jp
adc
inc
movsl
xchg
ljmp
imul
jns
dec
iret
scas
push
inc
out
and
cmp
ret
cmp
into
lcall
mov
icebp
imul
out
sbb
sbb
dec
push
jae
pop
pop
xchg
pop
or
addr16
xchg
pop
add
sti
mov
cmp
xchg
and
adc
inc
xchg
sbb
mov
shll
sti
ret
dec
pop
mov
popf
out
clc
push
or
or
xchg
lcall
lcall
xor
pusha
sub
out
movsl
decb
add
xor
cmp
aas
js
iret
cltd
sub
int3
mov
rorb
cmp
rol
mov
push
dec
ja
mov
fwait
leave
call
movsb
push
out
xor
fistps
in
into
lock
rep
or
arpl
add
push
or
cmpsb
and
scas
pop
arpl
mov
cld
push
sub
mov
sbb
popa
dec
sub
das
lock
mov
pop
sbb
shlb
add
sarb
fsubrl
cmp
mov
push
pop
insb
mov
push
dec
or
in
cmp
mov
into
lret
jae
inc
das
jecxz
pop
notl
lcall
clc
imul
dec
popa
ficoms
inc
ljmp
mov
lds
lret
cld
jae
jmp
stos
push
mov
rorl
stc
push
and
out
inc
hlt
xchg
xlat
iret
dec
rorb
xchg
inc
fwait
mov
jle
enter
xchg
push
inc
dec
stc
mov
jp
dec
mov
in
cs
pusha
loop
mov
adc
mov
stc
nop
adc
xchg
int
mov
leave
stc
pop
cwtl
rcrb
and
push
sbb
ljmp
mov
cmc
jmp
mov
xchg
cltd
mov
js
cltd
pop
mov
xchg
push
add
xor
or
test
jmp
jg
mov
mov
mov
cmpsl
jne
inc
dec
stos
test
iret
arpl
lahf
dec
ja
mov
sti
or
in
lahf
pop
or
nop
push
pop
out
fbstp
sahf
outsb
aas
cld
cld
lds
dec
loope
cmp
sti
and
lret
push
jo
and
pop
pop
sbb
and
cmp
das
out
notl
xchg
data16
lcall
sub
lods
rorl
cmp
xchg
fisubs
xchg
sti
aam
jle
test
aas
js
aas
mov
test
and
scas
rcr
sbb
call
aad
cmc
xor
jp
jmp
cmpsb
scas
jg
mov
jge
rorl
xchg
pop
ret
aaa
wbinvd
pusha
and
ja
or
std
addb
add
pop
jge
int
pusha
gs
sub
jmp
nop
int
das
call
repnz
sbb
pop
inc
jbe
inc
ret
dec
sub
outsb
frstor
icebp
inc
int
sbb
aad
mov
in
xchg
pop
mov
fstl
pop
mov
loope
hlt
outsl
mov
jl
jmp
mov
sbb
mov
out
adc
lcall
cltd
lcall
xchg
outsb
mov
jle
adc
lea
mov
xor
add
sbb
insb
xor
orb
les
push
lahf
jmp
fldl
and
jae
cs
add
loope
mov
cs
fldl
mov
outsb
fcomps
clc
jge
fs
jge
pushf
inc
jl
mov
mov
roll
mov
or
inc
mov
lret
adc
gs
push
lret
or
xor
test
das
loope
fwait
idivl
std
repz
add
movsl
xor
mov
outsl
mov
idivl
repz
sbb
pop
outsl
out
xchg
leave
adc
outsb
mov
inc
dec
ds
repz
and
cltd
inc
dec
xor
loop
ljmp
push
test
fimuls
sbb
push
mov
xchg
sahf
lret
in
xchg
xchg
dec
fimull
cli
lea
dec
test
sub
scas
in
push
or
add
int
sbb
decl
mov
ds
mov
ret
cmpsl
mov
push
out
sbb
jno
in
push
pop
sub
jp
adc
outsl
jp
inc
cli
clc
mov
js
sarl
dec
ret
jo
cmpsb
enter
test
xchg
loop
mov
fld1
in
inc
enter
or
mov
stos
ret
pop
adc
lds
push
jns
fdiv
push
xlat
roll
lea
jns
pop
aam
pop
inc
push
dec
xor
xchg
out
jo
movsl
jge
add
icebp
add
outsl
jg
inc
fwait
in
jp
lahf
sub
clc
or
lds
and
lods
sub
rcr
bound
arpl
xlat
aad
mov
xor
shrb
rcll
ficompl
js
mov
mov
sub
xorb
test
xchg
push
rcrl
pop
jecxz
in
push
xor
dec
out
lods
pop
clc
push
xchg
pop
add
mov
lahf
jns
mov
or
inc
and
fstpl
jae
int3
jmp
push
sar
mov
jmp
andl
dec
jp
pop
arpl
rorl
xchg
shll
dec
xchg
mov
jle
call
out
test
lods
stc
cmp
lahf
inc
movsb
mov
rolb
lock
lahf
sbbb
mov
and
mov
mov
lods
xor
jnp
cmp
aam
xor
xchg
shrd
push
jae
mov
icebp
add
sti
js
cmp
adc
in
and
clc
xchg
pop
mov
pop
out
add
pop
add
repz
int3
ret
mov
mov
jns
push
and
xchg
mov
dec
in
mov
shll
inc
push
rorb
mov
fwait
jecxz
aad
loopne
out
into
xor
push
cld
inc
fs
lahf
ljmp
jns
mov
xor
mov
mov
cltd
cwtl
or
cmpsb
adcb
cmp
fcomps
or
adc
add
popa
mov
push
rclb
dec
mov
imul
out
adc
sbb
xor
std
jle
mov
jns
das
dec
xchg
sti
xor
in
xchg
mov
xchg
jae
xchg
inc
cmp
push
add
and
in
fisubs
mov
mov
cli
mov
dec
imul
mov
popl
into
and
inc
xchg
pop
and
rcr
iret
push
loopne
jbe
adc
nop
push
sbb
int3
xchg
mov
andb
push
add
int3
fmul
loope
mov
pop
xchg
insb
mov
or
out
pop
push
xor
inc
cmpsl
inc
jle
cmp
imull
pop
int3
cltd
das
dec
xor
pop
sub
fnstsw
das
sub
mov
xchg
daa
and
clc
jp
gs
or
aad
adc
mov
leave
fsub
test
mov
inc
movsb
or
dec
or
dec
mov
jae
ss
cmpsl
sti
orl
mov
xchg
fwait
cmp
rorl
fdivrs
pusha
scas
mov
adc
xchg
data16
stos
mov
nop
push
in
clc
movsb
iret
lret
jle
das
mov
fistps
xchg
adcb
hlt
je
and
sub
pop
divl
xor
xor
dec
std
jle
shl
pop
add
push
test
lcall
movsl
jl
adc
in
imul
sahf
fcomp
mov
fwait
in
incb
pusha
call
loope
paddusb
lods
adc
or
mov
enter
sahf
mov
or
mov
lret
adc
cli
cmc
push
xorb
mov
push
rol
fs
mov
and
out
aaa
cmp
jo
int3
cmc
je
fs
xchg
push
add
dec
mov
jle
xor
pop
pop
adc
xlat
or
addl
fldt
sub
lock
jg
rolb
fcoml
push
dec
sbb
xor
test
arpl
mov
jnp
lret
fwait
or
cs
mov
jnp
movsl
movsl
and
cwtl
fidivs
sub
sub
mov
sbb
cmp
sub
pop
fucomi
xchg
xchg
insl
daa
add
pusha
stos
sahf
inc
mov
shrl
xor
xchg
nop
cltd
mov
mov
add
jae
mov
test
push
sbb
stos
aad
adc
push
xor
inc
xchg
inc
bound
cmp
dec
ret
icebp
popa
jae
and
hlt
nop
sub
sub
jmp
add
xchg
push
add
sub
jnp
cmp
push
roll
or
jle
add
insl
test
sbb
shl
mov
mov
fsubs
xor
inc
loope
repnz
js
cmp
in
shr
mov
push
mov
cs
or
jl
cld
add
push
enter
jge
adc
add
or
inc
int3
fildl
les
aaa
fwait
push
fcompl
inc
add
shr
push
nop
daa
mov
add
lret
xor
call
sbb
xchg
inc
xchg
adc
loop
add
xchg
mov
loop
lea
ror
push
outsl
inc
cmp
xchg
pop
cld
sahf
loope
xchg
pop
add
aam
fists
jmp
pop
fbld
test
sbb
dec
xchg
ljmp
stc
xchg
mov
sbb
fidivl
pop
outsb
in
lock
and
adc
das
mov
cli
and
pop
lret
mov
lods
cmc
repnz
inc
mov
xor
lea
sub
insl
stos
cmpsb
add
adc
xor
jbe
add
in
xor
mov
dec
hlt
lret
or
lcall
fbld
add
xchg
es
pop
jno
sub
dec
push
adc
dec
sbb
pushf
fs
push
dec
push
dec
pop
jno
adc
dec
das
jno
into
int3
push
test
jbe
aaa
adc
out
test
mov
and
mov
add
and
or
or
or
wrmsr
inc
or
dec
mov
jb
aam
and
mov
jecxz
pop
outsl
cmp
xor
jb
mov
insl
fiaddl
fcmovnu
repnz
mov
cmpsb
cld
xchg
call
sbb
add
mov
mov
insb
shll
dec
sub
es
mov
bnd
shlb
loope
xor
popl
nop
rorl
dec
and
stc
mov
mov
rorl
xchg
fidivl
mov
pushf
paddsw
jle
xor
stos
sbb
aas
pusha
repnz
mov
testl
outsb
mov
test
sahf
ror
shrb
scas
mov
mov
push
jg
fimuls
and
xchg
dec
jnp
clc
call
pop
data16
mov
inc
sub
mov
int
sbbl
pop
dec
xchg
jg
and
in
push
daa
ret
test
xchg
sbb
jbe
pushf
ret
xorb
sbb
jae
shll
cltd
cmp
pop
jbe
js
mov
rcl
fildll
or
dec
lcall
ret
dec
popa
arpl
aaa
test
cmp
mov
mov
je
fs
or
imul
and
fdivs
cld
mov
jecxz
sub
jnp
add
hlt
pushf
shlb
ljmp
jmp
fdivrs
ret
jne
push
in
xchg
mov
into
jns
lahf
or
test
inc
call
movsb
lea
loope
add
imul
imull
fisttpl
sbb
jg
pop
andnps
mov
fwait
fs
loopne
jmp
in
cmp
stc
adc
ret
push
mov
xchg
pop
mov
repz
fnsave
or
jb
iret
jo
fdivrs
ds
and
pusha
out
push
repnz
sbb
jmp
sahf
movsl
push
sub
pop
xor
and
dec
inc
mov
adc
and
test
mov
js
in
negb
mov
pop
sbb
pop
es
cld
mov
cmpsb
int
cltd
add
jne
jp
mov
add
ja
lcall
loopne
int3
bnd
dec
push
andl
out
mov
push
fwait
adc
out
or
mov
push
pop
push
movsl
mov
push
test
notb
sub
pop
incl
jp
xchg
xchg
inc
push
test
stos
mov
jne
mov
int
stc
and
out
cld
sbb
shll
dec
push
mov
repnz
das
out
push
sub
push
adc
mov
or
nop
in
push
mov
lds
in
aad
out
hlt
mov
fs
mov
mov
pop
dec
icebp
dec
ljmp
sahf
dec
pop
add
xchg
mov
adc
rorl
daa
bnd
fadd
pushf
xchg
sarl
push
mov
cs
dec
aaa
sbb
enter
or
lcall
or
jb
or
xchg
push
sbb
mov
push
or
fadd
adc
xchg
gs
mov
ss
mov
dec
jbe
sbb
cmp
inc
xchg
les
sub
sub
sbb
jmp
fwait
xchg
xchg
adc
mov
and
or
mov
push
mov
jp
mov
mov
in
mov
sub
mov
icebp
push
mov
dec
xchg
mov
les
lea
adc
mov
lea
fiadds
adc
stos
sbb
xor
inc
aam
popf
adc
mov
sbb
jns
repz
loope
mov
cli
xlat
jmp
fadds
addb
div
les
sub
sahf
sti
aaa
rcll
out
inc
in
jecxz
movsb
imul
dec
in
mov
xlat
clc
jecxz
mov
mov
loop
push
add
push
push
sahf
inc
mov
ror
jbe
adc
dec
jno
cmp
mov
pop
push
mov
or
push
movsl
stos
mov
pushf
rol
xchg
call
mov
cwtl
inc
shll
inc
xor
jns
subl
dec
cmc
in
aas
inc
xchg
add
in
sub
xchg
pop
sarb
adc
addr16
repz
sti
adc
sbb
lock
mov
imul
fwait
test
xchg
nop
xor
and
gs
mov
icebp
sub
mov
pop
jne
ret
push
mov
lods
movsl
jmp
loope
adc
in
mov
push
int3
cld
sti
and
pushf
rcrl
int3
movsl
mov
pop
push
js
loope
xchg
movsl
inc
adc
stos
outsl
je
cwtl
mov
arpl
push
jecxz
nop
and
xlat
push
adc
pop
insb
cltd
js
mov
shlb
roll
movsb
add
sub
and
icebp
dec
mov
outsb
gs
push
negl
mov
mov
xorb
out
call
or
pop
mov
sub
add
or
lods
push
loop
xchg
xchg
and
mov
adc
add
xchg
push
xchg
push
jecxz
sti
mov
lods
je
add
popf
mov
nop
pop
call
push
leave
orl
push
xchg
sub
adc
mov
scas
push
adc
cltd
cmp
lods
adc
pop
sbb
mov
in
mov
pop
cmc
in
fcoms
sbb
and
sbb
shlb
mov
nop
ljmp
and
sub
xchg
js
in
xchg
sarb
dec
jp
cmpsl
pop
imul
sbb
or
mov
adc
popf
test
scas
pop
pop
addl
and
or
inc
adc
jnp
bound
or
out
mov
fcompl
lcall
adc
pop
push
push
adc
mov
or
shrl
ret
fsubl
xchg
jb
outsl
stos
xor
xchg
mull
pusha
lcall
call
add
not
mov
dec
repnz
cwtl
imul
push
mov
mov
pop
or
sub
daa
xor
and
jne
and
xor
fs
lret
sbb
cmp
imul
mov
or
inc
fdivs
out
sub
dec
sahf
and
lods
pop
fistps
and
popf
into
mov
pop
pop
rcrl
add
pop
popf
sbb
push
lret
or
out
das
xchg
es
mov
mov
cli
ret
popa
lret
loopne
shrl
mov
cmc
sbb
aam
nop
fsubl
roll
movsl
xchg
stos
pop
mov
fbstp
mov
jns
push
sub
test
cmpsb
dec
shlb
mov
insb
jb
mov
ljmp
xchg
cmp
fs
aaa
jbe
ret
sbbl
push
or
aad
nop
inc
sub
xchg
push
clc
push
dec
jmp
sub
scas
addb
pushl
add
dec
test
pop
sub
add
out
call
pop
and
pop
cwtl
jecxz
inc
jne
decl
cli
fcompl
sbb
pop
ss
cmpb
std
fildl
iret
sbb
lods
mov
gs
mov
imul
xor
fs
push
pop
pop
inc
and
mov
call
into
pusha
adc
bound
mov
lahf
jecxz
ret
fbstp
out
inc
shll
dec
xor
cmp
add
mov
adc
into
mov
das
push
push
movsb
in
addl
ds
xlat
aad
in
das
pop
sbb
popa
lcall
xor
push
push
fmuls
xorl
clc
mov
xchg
bswap
call
xchg
and
or
inc
inc
xchg
das
stc
push
mov
shr
mov
out
les
and
and
ret
inc
sbb
sti
ljmp
bound
sahf
fucomi
call
sub
adc
or
ljmp
pushf
fstps
sarb
das
lea
rorl
test
xchg
mov
fisttps
imulb
movsb
push
stc
xor
mov
mov
ds
dec
daa
loopne
inc
imul
outsl
xchg
insb
aaa
fcmove
pusha
inc
mov
pop
fdivl
iret
sahf
nopl
jo
sub
push
xchg
mov
lods
or
iret
imul
inc
loope
std
mov
add
nop
inc
stos
imul
ror
sbb
jo
pusha
cmp
cmp
aaa
inc
xchg
arpl
push
movsl
xorl
pop
add
inc
sti
arpl
xchg
xchg
xchg
xchg
jne
mov
inc
and
sbb
lcall
lret
and
mov
fldenv
in
jge
xchg
push
ljmp
test
stc
iret
popa
inc
adc
movsl
and
add
jge
push
mov
lock
imul
jno
in
arpl
dec
fwait
mov
into
aam
inc
mov
or
gs
imul
lock
imul
mov
test
xor
xchg
mov
cmp
into
mov
sub
jl
push
cwtl
loopne
xchg
fs
or
xchg
es
fimuls
fnstcw
idivl
inc
ljmp
sar
jl
fwait
cmc
in
add
outsb
push
lret
mov
test
add
andl
mov
jae
sahf
inc
addr16
xorl
push
and
mov
mov
outsl
mov
sub
pop
mov
in
or
in
cmpl
dec
jnp
pop
inc
cld
mov
mov
mov
push
push
arpl
stos
loope
enter
push
nop
push
insb
sbb
imul
jo
jne
loope
aam
jno
lds
mov
push
mov
in
int
pop
xor
lods
iret
jge
fsubp
lods
es
mov
faddl
mov
lcall
pushf
in
ljmp
lea
cmpsl
xchg
repz
stos
adc
leave
stc
dec
adc
jge
insb
mov
loope
ffree
shl
mov
cmp
inc
dec
mov
js
ss
mov
lods
pop
adc
mov
add
ja
and
loope
inc
aad
sbb
scas
repnz
dec
cmp
sti
lock
aam
xchg
stc
mov
mov
in
push
aad
and
dec
frstor
push
sub
mov
cmp
adc
xor
mov
add
ficoml
or
push
xlat
pop
adc
js
aam
jg
addr16
shlb
sbb
outsb
bound
enter
lret
cltd
sbb
sbb
add
jo
notb
mov
and
pusha
xchg
mov
cmpsb
test
dec
adc
jp
adcb
sbb
jae
inc
push
dec
jnp
repnz
jle
lahf
and
push
loop
and
mov
fsubs
mov
dec
inc
inc
add
xorl
fidivl
in
push
or
sub
mov
dec
push
nop
pusha
lahf
xor
in
js
lret
fs
mov
jnp
xchg
dec
and
stc
rol
inc
pop
sub
push
push
cmpsl
out
pop
push
sahf
into
push
push
push
movl
sub
mov
cmp
pop
mov
xchg
aas
cmp
nopl
cmovs
push
jmp
add
sub
mov
pop
ljmp
adc
loopne
push
xor
sbb
cli
xchg
imul
fwait
cmp
in
push
rorl
sti
cmpsb
push
aaa
sti
aas
lea
jae
sub
mov
lea
cmpl
in
inc
dec
ret
movsl
cmp
into
inc
jl
sti
testb
test
xor
and
cmp
cli
push
mov
loopne
mov
ss
shll
and
mov
push
out
stc
mov
fidivrs
mov
popf
pusha
andb
lret
sub
test
pop
shlb
pop
fwait
rcll
cs
push
lret
adc
loopne
dec
lds
jl
stos
rcrb
lods
lock
dec
push
push
mov
sbb
test
jg
xchg
scas
lock
daa
outsl
out
push
sbb
in
mov
push
jge
or
pop
inc
lods
jns
cmovbe
pop
ss
and
test
push
jns
dec
mov
ss
sub
sahf
cmp
pop
ja
sub
out
add
mov
jns
leave
sbb
xorb
sub
mov
cli
cmp
pop
mov
mov
movsb
je
dec
xchg
cmp
lahf
call
xor
jne
or
repnz
popa
jae
push
loope
ret
pop
push
movsb
insb
mov
jecxz
test
jecxz
imul
loope
mov
inc
xchg
sub
push
cmp
cmp
add
pop
inc
cmc
cmp
inc
add
cmp
pop
jns
mov
rcr
rcrb
fstl
shlb
mov
xchg
pop
sbb
sbb
lods
push
imulb
sbb
mov
pop
mov
scas
cwtl
add
std
mov
ret
xchg
mov
mov
or
test
iret
add
or
rcrl
cld
push
mov
iret
cmp
or
dec
mov
ljmp
hlt
pop
cmpsl
aad
fcompl
pop
fidivrs
call
stos
mov
fsubl
shll
and
sub
xlat
jno
hlt
inc
sub
in
adc
jo
pop
mov
jo
mov
xor
push
push
xchg
insb
or
mov
mov
jmp
mov
adc
mov
movsb
cmc
mov
ret
js
push
sub
push
add
loope
cmpsb
fs
les
mov
jg
test
test
mov
es
jge
pop
mov
jae
or
je
stc
int
imul
adc
fnsave
fsts
push
xchg
push
lods
or
sbb
cmpsl
std
jge
out
mov
in
mov
cmp
inc
mov
add
imul
push
push
push
push
shl
cmp
mov
add
test
jg
add
sbb
xchg
lock
xchg
jns
leave
jns
adc
aaa
add
cs
jmp
cs
test
ret
add
sub
test
mov
ret
or
data16
inc
xchg
pop
pop
sub
cmp
push
sub
rorl
data16
aaa
add
jns
jmp
lods
sub
pop
cmp
or
jmp
sbbl
mov
mov
dec
push
cmp
js
push
mov
hlt
mov
add
notl
fdivl
or
inc
fmul
es
cmpsb
repnz
dec
or
cld
test
or
or
push
mov
cmp
mov
stos
cmp
cmp
cmpsl
mov
mov
shll
enter
sbb
mov
in
imul
mov
sub
sub
arpl
or
lods
jg
mov
sub
pop
out
scas
inc
cs
xchg
cmp
lock
pop
rol
pop
inc
and
lods
loop
fisttpll
cli
cltd
lcall
sbb
and
out
cmpsb
repnz
lcall
lods
mov
cmp
sbb
es
pop
imul
xchg
das
out
rorb
jp
adcb
std
divl
ss
push
push
les
mov
dec
mov
add
jle
cmpps
pop
jp
cmp
mov
mov
test
lds
mov
dec
inc
jge
sub
es
popa
stc
mov
add
adc
push
pop
mov
test
push
sub
fsub
xacquire
sti
jnp
sar
leave
in
push
jnp
cmp
pop
mov
movsl
jg
mov
sbb
subl
scas
pop
jle
cmp
sti
lods
sbb
dec
aad
icebp
jns
loopne
push
movsl
cltd
and
out
jo
shrb
call
sbb
push
jle
jg
cmpsl
jp
popa
push
pusha
insl
mov
xor
pop
and
repz
scas
push
sbbl
adc
xchg
sbb
fistps
lret
rol
std
adc
or
out
mov
xchg
xor
cmp
arpl
outsb
ljmp
int3
stos
in
xor
or
or
fistps
xlat
ficompl
adc
pushf
sar
jmp
test
jg
xor
mov
into
jecxz
xor
ss
xchg
movsb
ljmp
lock
in
xchg
stc
data16
repnz
jmp
inc
out
sub
call
int
pop
cmp
xor
arpl
mov
add
push
ret
jle
jl
subb
mov
decl
xor
sub
arpl
in
dec
sbb
dec
cmpl
mov
mov
popf
idiv
mov
cwtl
push
push
jl
jle
inc
ds
jge
enter
pop
xchg
sub
jae
aaa
push
push
inc
enter
cld
sbb
movsb
data16
in
lret
cmp
je
or
cmpl
sbb
push
push
aas
cmovbe
sarb
mov
lret
cmp
xchg
in
push
push
insl
bound
iret
test
ret
out
sub
and
repz
push
in
orl
sub
sbb
xchg
xchg
sub
mov
jl
mov
jle
rcrl
sbb
mov
or
lods
jg
jl
and
dec
btc
mov
or
xor
sub
push
jne
push
les
js
xor
sbb
jl
push
and
xchg
pop
test
xor
stos
or
cltd
loope
xor
push
idiv
add
stos
mov
push
xorb
jle
mov
mov
mov
stos
push
shll
pop
jbe
xor
jmp
pop
and
sbb
imul
gs
add
je
testl
or
mov
pop
subb
popa
jmp
and
clc
movsb
jae
and
je
imul
divl
sub
bnd
mov
pushf
adc
mov
cmpsb
pop
test
int
mov
fs
sub
lea
scas
loope
test
fsubs
jbe
cld
mov
out
out
in
jbe
mov
je
jns
leave
add
adc
adc
mov
popa
jmp
xor
push
push
push
nop
push
cmp
xchg
fsub
sbb
mov
nop
testl
cmpsb
adc
les
dec
sub
mov
jno
sbb
mov
outsb
imul
out
rorb
arpl
lcall
push
pop
and
insl
stos
add
jnp
add
pop
inc
out
fsincos
or
add
rcll
jae
fstpt
xchg
pop
mov
test
loopne
inc
incb
sbb
push
fnstenv
cmp
dec
adc
inc
leave
mov
aam
sub
dec
push
out
mov
and
fnstsw
test
dec
mov
jp
jmp
lock
fxch
sub
mov
xor
icebp
clc
cmpsl
gs
sub
ja
scas
push
mov
shlb
outsl
pop
imulb
lods
xor
cmp
adc
rclb
mov
push
clc
inc
mov
push
sbb
pop
fidivrl
in
dec
pushf
rep
adc
shl
ficompl
psrlq
call
mov
rcll
mov
ret
sbb
bound
dec
adc
jge
jge
orl
nop
sbb
sti
xor
enter
mov
shl
sbb
inc
sbb
mov
jo
xor
cmc
jmp
outsl
out
mov
inc
lock
sub
sub
jbe
jae
push
sbb
iret
xor
repz
lods
insb
mov
jmp
movsb
repnz
andb
ret
iret
add
cmpsl
andb
leave
add
mov
filds
pop
jp
test
inc
jb
fsts
loop
adc
dec
mov
mov
push
rorl
jp
inc
out
and
sub
sub
xchg
aas
or
and
mov
pop
mov
pop
mov
lods
sbb
loope
mov
gs
cmp
jecxz
cltd
arpl
cmp
aad
ss
shlb
bound
pop
push
clc
aam
mov
pop
jp
daa
push
dec
mov
cmp
or
pusha
mov
pop
imul
jnp
sbb
adc
imul
xor
scas
mov
inc
jns
ja
xchg
andb
push
movsb
or
xchg
adc
cs
aam
enter
in
adc
rorl
xor
or
xor
jb
cmpsb
inc
adc
std
mov
jmp
lock
push
pop
aam
into
jg
adc
cmp
dec
movsb
mov
jecxz
pushf
sub
mov
stos
mov
and
mov
rorb
inc
add
dec
sbb
fwait
push
jbe
push
adc
add
popf
fcmovbe
cmp
adc
sbb
insl
and
in
push
xor
ficoml
xchg
ja
popf
and
cltd
orl
js
jns
inc
jle
stos
sbb
xchg
mov
sub
pop
add
and
jl
call
filds
sub
lret
loope
int
in
clc
arpl
push
jae
jp
cmp
push
xchg
mov
mov
sub
pusha
insb
jmp
pop
or
movsb
jb,pn
mov
and
test
jno
add
xchg
mov
push
scas
test
adc
adcl
cwtl
subl
fwait
aam
call
scas
mov
mov
gs
aad
mov
in
dec
out
les
xchg
scas
jmp
mov
cmp
fwait
dec
lahf
or
ss
out
aad
ja
scas
pop
pop
cltd
and
mov
test
movsl
ret
xchg
bound
jecxz
inc
cmp
mov
daa
sbb
mov
jle
push
sub
rorb
adc
sub
stos
repz
lret
cmp
icebp
pop
xor
inc
popf
xchg
mov
xor
sub
xorb
rcll
and
pop
mov
and
or
scas
lds
aam
dec
sti
or
pop
lock
pop
rcrl
xor
insl
mov
ss
sbb
sti
fwait
sub
test
mov
arpl
or
inc
std
lods
mov
and
out
out
fstpl
stc
andb
enter
xor
mov
hlt
jge
xor
jle
cmp
xchg
mov
mov
loop
and
stc
repz
mov
cld
or
out
pop
sub
je
mov
mov
std
imul
shrl
sub
ret
scas
in
and
out
ss
xor
out
loop
mov
dec
mov
xor
nop
sub
aad
lock
jnp
or
imul
dec
outsl
push
mov
movl
cwtl
bnd
das
loopne
jnp
push
lods
mov
ljmp
in
xchg
push
pop
sub
rclb
out
jno
adc
lea
mov
test
je
add
xchg
xchg
out
es
sbb
pop
cmp
sbb
fnstsw
push
jl
icebp
je
xor
or
fs
xchg
cmc
lcall
popa
or
repz
sbb
test
pushw
ret
rorb
pop
pop
mov
add
or
outsb
xchg
test
ja
pop
mov
mov
fsqrt
or
lahf
outsb
lds
imul
and
mov
inc
mov
adc
mov
xchg
jl
ja
mov
and
mov
push
push
outsb
into
or
cmp
and
mulb
adc
dec
mov
stos
loopne
fisttpll
pop
cmp
adc
inc
jmp
shlb
inc
test
pop
mov
mov
inc
cmc
aad
dec
insl
add
rcll
aaa
add
lret
insb
inc
xchg
ret
in
mov
adc
or
ss
aas
jne
aam
stos
push
pop
mov
icebp
ret
dec
add
adc
mov
inc
fidivrs
sbb
ljmp
jbe
mov
and
sub
cmp
pop
bound
pop
shl
xchg
or
andb
mov
add
lds
xchg
jle
int
cmp
leave
pop
mov
movsl
and
add
sub
pusha
sbbl
enter
and
cltd
dec
xchg
mov
inc
fcmovnbe
mov
pop
scas
push
das
xchg
cmp
jmp
pop
filds
int3
js
mov
sarl
or
dec
lock
iret
sub
bound
inc
data16
jns
and
out
inc
test
popa
mov
cmpsb
push
mov
xor
les
mov
inc
lret
cmpsl
test
outsl
in
pushf
out
or
dec
push
cmp
repnz
imul
cld
xor
aas
cmpsl
out
push
adc
aad
mov
scas
or
mov
adc
cmp
js
fs
arpl
cmp
mov
dec
out
pop
in
adc
jo
into
push
jmp
xchg
pop
pop
das
and
push
xchg
sbb
mov
nop
incl
cltd
lds
cmp
push
jl
lret
fs
stos
cmp
jne,pn
xor
cwtl
push
data16
cmc
fidivl
rolb
jo
hlt
jle
mov
int3
jnp
xor
push
gs
mov
pushw
nop
leave
adc
outsb
mov
aam
adc
popf
adc
add
inc
mov
pop
and
sbb
shlb
cmp
add
outsb
mov
adc
add
shrb
int3
dec
mov
dec
xchg
mov
add
fcmovu
push
int3
jae
fwait
adc
lds
incl
and
andb
iret
cmp
bnd
push
cmp
xchg
jbe
lods
pushf
pop
xchg
add
shrb
mov
in
cmp
cmp
xor
jo
or
fld
sahf
inc
push
clc
mov
and
into
jp
das
scas
movsl
mov
int3
jge
push
mov
fcomp
insl
clc
cli
nop
dec
enter
bnd
mov
jbe
cs
xchg
mov
inc
sbb
pop
mov
jne
rcrl
jmp
movsb
jge
pop
fs
pop
sub
loope
xchg
fidivrl
sbb
jmp
std
dec
mov
sbb
dec
mov
fdiv
dec
jns
gs
jo
scas
cmp
jp
adc
xchg
and
mov
cld
les
add
pop
pop
or
mov
add
xor
and
sub
xor
add
hlt
xor
sub
rep
cmp
in
mov
js
sbbb
pop
dec
movsl
sub
jo
inc
jp
push
dec
dec
ret
fbstp
out
mov
mov
jnp
mov
or
lcall
inc
cmp
in
in
xchg
or
jg
in
mov
movsl
int
adc
adc
mov
stos
leave
xchg
jl
dec
int
enter
sub
mov
popf
scas
clc
and
xlat
imul
cwtl
leave
fmull
push
mov
dec
mov
dec
popw
dec
fcomp
xlat
insl
push
aam
scas
inc
mov
leave
and
aas
mov
popf
popf
ret
jns
jl
lret
mov
cwtl
add
mov
push
jl
xchg
sbb
inc
movsb
mov
jb
insb
pop
mov
rolb
xchg
mov
mov
and
adc
out
out
cmpsb
add
mov
je
inc
or
xor
dec
sbb
enter
dec
imul
daa
sub
push
push
and
shr
ret
sbb
dec
add
pop
daa
mov
xor
fstps
and
test
xor
inc
adc
or
iret
scas
je
loope
lcall
mov
lcall
jge
das
rol
notb
orb
jg
loopne
fdivrs
jle
inc
fisubrs
xor
pop
inc
mov
testl
ljmp
bound
ljmp
lret
push
jecxz
in
scas
add
and
mov
sbb
inc
setp
mov
mov
icebp
xchg
cmp
cmp
pop
dec
mov
push
mov
sub
jl
xchg
imull
ljmp
xor
rcrl
shr
mov
fistps
and
mov
mov
jbe
dec
xor
in
pop
aam
jl
mov
jge
mov
dec
pop
push
repz
push
inc
rcl
mov
in
call
pop
shlb
addr16
sahf
shrb
in
add
aad
or
mov
and
fidivrl
dec
mov
fisttpll
add
pop
arpl
sub
bound
push
scas
lret
jne
cmpsl
inc
push
add
or
push
gs
inc
arpl
mov
add
xor
addb
in
or
loopne
push
xor
inc
push
testl
xor
pop
imul
pop
popa
es
push
sub
loope
cmc
int3
or
sbb
jp
hlt
mov
add
push
add
pcmpeqb
cmpsb
stos
shlb
je
sub
or
inc
dec
ja
push
out
in
stc
xor
popf
jne
sahf
sbb
lea
pop
xchg
clc
test
pop
sub
lret
lock
ds
cmp
addr16
movsl
into
clc
mov
and
push
mov
nop
in
mov
xchg
pop
sub
int3
out
mov
dec
fwait
cmp
jbe
in
subb
mov
mov
sti
adc
jae
or
xor
or
mov
fwait
in
popa
cmc
jge
imulb
mov
movsb
inc
stos
dec
in
mov
cmpl
sbb
stc
cwtl
stos
and
insb
lret
mov
mov
adc
xchg
push
scas
aaa
dec
cwtl
mov
cld
pop
pusha
cmpsb
sub
and
cwtl
fdivp
stos
lds
add
das
adc
ret
add
cwtl
xchg
add
daa
sbb
int3
mov
std
mov
jmp
iret
sub
jnp
and
test
scas
je
mov
xor
iret
and
pop
mov
cltd
out
inc
in
outsb
imul
loop
xor
and
xchg
addr16
dec
das
cmpsb
and
jmp
pop
subl
jecxz
andb
insb
fwait
jp
add
cmc
dec
pop
fsubr
call
mov
insl
in
mov
out
or
in
loopne
push
push
cmp
xchg
push
xlat
cmp
fst
cmpsb
mov
sti
push
cmp
es
stc
xor
lret
divb
lahf
ret
xor
jo
pop
mov
or
lods
sti
and
or
fidivrl
dec
cmp
inc
scas
les
xor
push
inc
xchg
push
fwait
cs
push
int
dec
fxch
insb
repz
xchg
outsb
fnsave
sub
stos
jge
dec
sbb
jge
jmp
daa
xchg
cmp
and
jae
adc
repnz
jbe
rolb
jle
pop
dec
fdivr
sbb
int3
xchg
stc
call
les
scas
scas
push
push
jb
push
packssdw
dec
cld
rolb
inc
mov
sbb
shrl
loopne
ret
aad
inc
loopne
addl
lahf
repnz
cmpsl
xchg
add
pop
add
mov
or
leave
push
stos
cmp
push
sbb
mov
mov
cltd
xlat
jb
ror
inc
jle
inc
cmp
jge
pop
and
push
add
or
pop
int3
enter
xchg
mov
sub
in
xchg
aas
jg
roll
out
push
jl
lods
inc
sbb
fs
sti
sub
mov
inc
sahf
mov
mov
xchg
fldcw
xor
lea
imul
dec
xor
jle
xchg
add
pusha
mov
movsl
and
je
cmpb
mov
in
jno,pt
pop
inc
sub
ret
out
aas
jo
xlat
addps
mov
push
push
call
test
adc
cli
cld
iret
test
mov
xchg
aam
clc
popf
mov
dec
int3
faddl
loop
or
jb
jno
shlb
mov
and
lods
sbb
cmpsb
cwtl
pop
xlat
jg
sti
icebp
lea
movsb
repz
outsb
xchg
cmpsl
push
aas
xor
pop
clc
push
imul
dec
stos
fs
sbb
addr16
aad
mov
jmp
iret
mov
fildl
fistpl
dec
mov
and
in
pusha
cmpsb
movsb
jecxz
pusha
ds
xchg
ljmp
icebp
cltd
jg
lret
shl
rcrb
lock
mov
adc
sahf
push
jp
mov
xor
inc
lahf
cmp
icebp
popf
mov
dec
dec
or
dec
ljmp
data16
lock
outsl
call
gs
fidivrs
xchg
or
sub
lods
stos
sahf
mov
xor
movsb
mov
fisubrl
mov
and
inc
ret
les
shll
int3
and
push
stc
fists
cmp
test
jle
fs
or
mov
xchg
xchg
rcrl
and
and
int3
in
jmp
xchg
cli
in
dec
or
dec
mov
es
adc
icebp
inc
xor
stos
xor
push
jl
lcall
ficomps
test
xor
pop
mov
mov
jnp
inc
test
ficoms
sbb
cmp
scas
cli
out
sbb
fwait
loop
push
xchg
pop
xchg
loop
pop
dec
test
cltd
sbb
lret
jmp
and
js
mov
xor
mov
mov
imul
int3
xor
mov
pop
outsb
arpl
lea
push
xor
mov
dec
mov
xor
adc
jbe
iret
or
mov
mov
sbbl
inc
sbb
fcom
ret
add
scas
int
push
pop
outsb
stc
les
aaa
push
aaa
repz
cmpsl
int3
sub
nop
or
scas
dec
fmull
mov
cmp
or
jae
sbb
icebp
cli
out
mov
and
cmp
push
fisubs
adc
mov
mov
loopne
ljmp
jnp
test
or
mov
mov
mov
sub
inc
aas
inc
inc
outsl
int3
and
mov
xlat
outsb
jp
adc
jae
push
arpl
mov
jne
inc
add
ficoml
les
mov
sti
sbb
test
inc
push
pop
xchg
mov
aad
lods
jmp
pop
stos
popl
aad
or
jecxz
aad
rcl
mov
inc
pop
push
rol
mov
xor
pop
stos
xor
icebp
mov
jl
mov
mov
sub
outsb
mov
mov
ljmp
push
mov
pop
fisubl
cmp
into
push
movq
je
gs
lret
push
fs
push
add
cmp
mov
jo
fildl
cltd
js
pop
or
pusha
test
in
mov
or
stc
push
scas
xor
pop
enter
jae
pop
and
jmp
shll
cltd
lods
data16
cmpl
adc
xchg
shll
shufps
call
fidivl
sti
xchg
mov
popa
inc
out
les
jmp
jno
out
push
adc
inc
neg
adc
jnp
push
adc
xor
jb
stos
incl
clc
mov
js
scas
push
mov
imul
in
cwtl
sub
and
das
ja
out
mov
daa
push
imul
popf
ds
scas
push
pop
addl
inc
push
mov
movsl
sahf
cmp
jmp
loope
xor
repnz
jne
in
pop
mov
add
stos
sub
repnz
xlat
fwait
push
mul
std
pop
push
sbbl
pop
je
in
hlt
in
clc
lock
nop
push
das
inc
aad
loope
add
xor
add
mov
imul
ss
mov
mov
and
adc
into
mov
lods
cli
jl
mov
insl
test
lret
and
dec
jnp
inc
sti
or
push
jo
call
inc
jg
pop
out
imul
add
jecxz
sbb
or
inc
jle
cmp
inc
pop
lea
xchg
sub
push
leave
pop
rclw
mov
mov
bound
pop
jae
add
out
jle
pop
scas
push
stos
ljmp
and
or
cmpsl
loop
mov
pusha
add
add
js
xor
pop
add
loopne
sbb
jp
and
xlat
stos
ss
in
xor
push
fisttps
imul
sbb
stos
xor
es
xor
sahf
pop
push
cltd
pop
es
jbe
jecxz
aam
xchg
cmp
cltd
jg
mov
out
mov
push
scas
push
add
out
out
push
dec
push
push
sub
bound
imul
cmp
sbb
nop
pop
xlat
imul
sub
mov
jmp
xchg
out
jnp
add
xchg
adc
insb
mov
mov
data16
pop
or
adc
sub
jecxz
sbbl
add
ret
sub
ret
test
pop
xor
mov
dec
xchg
xor
mov
loop
stos
pop
and
cli
cs
xchg
mov
mov
xlat
dec
in
lock
inc
andb
scas
mov
sti
jb
and
fs
int3
cmpsl
lret
mov
add
fldt
pop
xor
movsl
xor
add
data16
fxsave
fcmovbe
stos
push
xchg
into
mov
sbb
insl
cwtl
lea
nop
lret
dec
sahf
xlat
arpl
cld
das
out
call
daa
ja,pn
inc
lods
jne
mov
cmp
or
push
pop
lret
cmp
test
mov
ret
dec
arpl
inc
mov
scas
icebp
mov
adc
pop
mov
dec
test
cmpsl
out
fisubrl
fbld
xor
es
notl
dec
jge
loop
loope
push
out
or
aad
fs
std
pusha
xor
outsl
jmp
jnp,pt
cli
sbb
push
stc
cmp
push
mov
xchg
sbb
shl
jns
sti
mov
test
ds
fs
or
cltd
jno
xor
pop
shrl
inc
into
jmp
xchg
aam
push
sahf
in
or
fsubs
mov
cld
dec
repnz
pop
test
xchg
fsts
jnp,pn
mov
sbb
test
cmp
mov
mov
and
mov
enter
mov
fs
add
jae
je
adc
outsb
jmp
mov
out
add
mov
mov
into
mov
int3
test
inc
xchg
data16
mov
sub
xchg
dec
xor
xchg
cwtl
test
sub
sbbl
cs
sbb
jmp
pop
out
pop
cmp
mov
imul
inc
outsl
lcall
shrb
dec
inc
int3
ljmp
jmp
jmp
xor
push
or
adc
inc
sub
or
mov
and
cld
jle
fwait
pushl
dec
into
adc
out
mov
rol
lcall
orb
fnsave
cli
clc
andl
or
into
xchg
scas
call
iret
andl
repnz
jo
cmp
fwait
cmp
sub
out
mov
mov
fistpll
out
add
pop
lahf
fisttpl
movsb
jl
subl
bound
mov
adc
popf
sbb
cmp
lods
pop
mov
adc
adc
mov
add
clc
jnp
add
dec
cmp
inc
les
inc
jo
or
neg
nop
ret
cmpsl
sub
popa
xor
push
cwtl
pop
add
pop
inc
ljmp
xchg
sar
sbb
sbb
mov
jl
jl
icebp
sbb
fstpt
push
sbb
xor
sub
push
rcrl
pop
add
gs
or
ret
dec
mov
test
fisttpl
pop
lock
jns
pop
scas
pop
xor
scas
out
sbb
pushf
aaa
jle
sti
xchg
inc
mov
xchg
mov
pop
movsb
push
out
out
ljmp
out
add
pop
jg
add
xchg
push
and
and
fidivs
dec
lds
pop
dec
sbb
je
sbb
aas
cmpsl
sub
das
icebp
jns
mov
cmc
adc
push
mov
iret
dec
xlat
add
xchg
js
pop
fstps
lret
sbb
mov
or
cli
mov
and
out
iret
out
rcll
fisttpl
pop
aas
cli
inc
cs
and
pop
mov
jmp
cwtl
aam
cltd
adc
unpckhps
arpl
cmp
outsb
movsb
mov
std
or
push
jmp
loope
fsincos
pop
push
inc
imul
cmp
pop
add
clc
fdivrl
inc
and
sub
sub
adc
daa
sub
in
mov
xchg
dec
or
xlat
mov
jae
dec
jne
mov
and
call
rcrb
sbb
int3
mov
movsb
loop
inc
sub
imul
inc
mov
cmp
insl
call
lret
int3
mov
rorl
push
cmp
push
sub
ficomps
cmpsb
aas
jbe
add
loop
lret
add
fdivrs
mov
lods
push
or
rorl
nop
aaa
in
jne
dec
ljmp
mov
and
in
lds
and
xchg
lods
leave
dec
testl
rorb
enter
cltd
in
stc
in
comiss
or
ret
rclb
xor
in
outsb
dec
aam
ss
xor
and
bound
sub
int
xchg
xor
xchg
inc
insb
mov
push
sbb
mov
scas
dec
sbbl
shrb
fimull
inc
mov
cltd
mov
movsb
fsubr
cs
cltd
push
vmovsd
adc
mov
data16
lock
xor
inc
adc
lcall
imul
mov
add
and
push
sbb
sbb
xor
xlat
hlt
mov
pop
ret
rorb
std
push
pusha
jp
out
lds
inc
jnp
cmp
add
aas
aaa
jbe
stos
cmp
and
sbb
in
out
jb
mov
les
push
pop
add
scas
push
sub
loopne
or
jmp
adc
mov
mov
sahf
nop
push
pushf
jl
lods
mov
lret
mov
xchg
arpl
or
inc
lods
imul
dec
mov
cs
adc
xchg
inc
mov
adcb
cmp
jl
test
subl
xchg
add
jge
mov
jl
mov
mov
push
or
or
sub
std
adc
lcall
loopne
divb
out
mov
xor
ficomps
clc
xlat
add
push
clc
jecxz,pn
insw
or
cmc
aam
xor
push
xchg
stc
daa
in
dec
push
pop
addr16
xchg
mov
pop
adc
nop
push
or
ljmp
mov
jnp
mov
xor
adc
test
arpl
out
inc
cli
add
ljmp
pop
mov
sbb
popa
jl
outsl
push
in
mov
ss
dec
iret
xor
sub
push
add
xchg
iret
shll
xor
sbb
out
sbb
mov
jns
andl
adc
add
andl
sbb
push
sub
pop
dec
push
dec
inc
lret
mov
movsl
mov
in
and
and
adc
movsl
into
in
xor
out
adc
cwtl
shl
and
adc
xchg
mov
push
sub
mov
fisubs
mov
xlat
push
outsb
rcrb
pop
scas
loop
cwtl
and
add
push
out
into
sbbl
cmp
jne
jge
add
rolb
mov
ret
movsb
xor
cmp
ljmp
adc
mov
pop
scas
sub
insl
jg
pop
stos
es
mov
in
inc
and
add
sahf
xchg
xor
das
scas
lods
mov
hlt
mov
std
int
mov
lcall
rcrl
or
mov
mov
inc
ljmp
mov
test
daa
jne
sbb
enter
xchg
out
rcl
scas
outsl
pop
repz
sub
pushl
andps
xchg
dec
divb
cld
cmpsl
scas
push
repnz
repnz
and
mov
add
cmpsl
pushf
and
sub
push
or
mov
cltd
pop
call
scas
inc
out
roll
adc
fwait
test
add
pop
jns
ret
inc
push
outsl
and
arpl
call
aad
js
xchg
int3
pop
or
mov
mov
insl
and
sbb
push
push
xchg
jbe
xchg
mov
cmp
push
pop
lahf
pop
nop
xlat
mov
scas
cwtl
fwait
sbb
xchg
jne
lret
push
mov
inc
cwtl
sbb
loope
insb
dec
xor
testl
mov
pop
ss
cmp
dec
cmp
xchg
add
aad
xchg
pop
lds
jbe
jo
repnz
outsb
mov
ds
xchg
popl
push
daa
dec
stos
and
jg
das
push
or
outsl
lods
rcrb
sub
pop
shrl
cmp
sbb
lret
sbbb
jp
push
repnz
cmc
repz
lock
mov
dec
ret
popa
and
xchg
cmp
xchg
mov
pop
in
repz
and
dec
stos
push
jne
inc
dec
jecxz
push
inc
aas
mov
insb
mov
psraw
sbb
push
insb
mov
pop
push
mov
push
lahf
scas
or
daa
lahf
inc
shll
icebp
jmp
rolb
cmp
in
add
mov
test
iret
pop
mov
sub
aas
push
dec
imull
sub
inc
in
rep
loope
or
add
aaa
mov
es
dec
add
ljmp
flds
gs
mov
clc
pop
add
sbb
insl
fcomip
pop
pushl
pop
pusha
pop
or
insl
rcll
in
scas
xor
stc
mov
rcr
imul
scas
jb
push
dec
mov
clc
int3
jne
push
popl
stos
inc
push
icebp
rcr
pop
lds
cmc
inc
pop
mov
test
jle
and
rorl
inc
cmp
and
or
loop
in
push
dec
adc
mov
pop
dec
test
popa
push
lret
xchg
cs
shl
out
and
loope
sub
lods
xchg
adc
dec
pop
divb
loop
mov
enter
inc
sbb
mov
fistl
jp
out
std
clc
and
mov
mov
xchg
repnz
fsub
insb
lea
xor
insb
inc
dec
test
repz
mov
scas
aam
cmp
inc
dec
iret
push
inc
xchg
adc
sbb
mov
shlb
idivb
into
push
cmp
pop
jbe
nop
and
cmc
pop
xchg
xlat
jecxz
je
pusha
ds
lahf
ss
nop
es
in
test
jae
cltd
loop
and
push
push
scas
add
pop
repnz
mov
rclb
cmc
psllw
mov
inc
adc
scas
pop
add
jae
popf
mov
popa
enter
jmp
mov
push
jmp
jbe
aaa
mov
ds
jns
stos
jl
or
pop
push
rcrl
int
mov
mov
jne
cld
push
add
orb
push
lock
push
fs
call
fisttps
mov
iret
icebp
push
jbe
adc
mov
daa
push
push
lcall
push
dec
int
pushf
mov
pop
nop
xchg
xlat
dec
mov
rorl
mov
xor
in
mov
das
or
inc
add
mov
fnstenv
pop
and
movsb
call
test
into
xchg
xchg
es
rcr
fldl
dec
sbb
lcall
test
scas
mov
lahf
test
xor
hlt
jbe
jmp
xlat
les
sbb
mov
pop
pop
dec
jp
lods
cwtl
pushf
xchg
pop
jmp
int3
adc
adc
ret
stos
das
mov
call
out
jae
add
ljmp
jecxz
lock
sti
cli
push
scas
jmp
sarl
pop
clc
push
out
xchg
pop
xor
pop
je
rolb
repnz
lock
pusha
add
cld
adc
clc
push
cmpsl
inc
test
jne
cmp
mov
push
mov
xchg
jmp
xor
dec
jecxz
sbb
inc
enter
leave
das
ss
ret
test
cmpsb
fistpl
subl
cld
pushf
push
aaa
mov
dec
and
addr16
xor
and
add
xchg
jns
and
add
or
ds
arpl
inc
and
es
push
rorl
test
cmp
cld
lret
lret
dec
loope
cmpsb
fsubr
mov
imul
jbe
mov
jne
jle
cwtl
adc
imul
lahf
sbbl
inc
pop
ss
cltd
xor
test
sub
jns
mov
mov
push
jge
repnz
xchg
push
mov
int3
xlat
cmpsb
sub
push
mov
jns
jmp
xchg
xor
jp
add
nop
fyl2x
stos
divl
or
out
or
daa
mov
cltd
enter
repnz
jmp
cld
inc
cmpsb
repz
sahf
pusha
push
out
int3
loopne
mov
fisubrs
inc
jbe
jb
imul
jo
sahf
dec
les
mov
andb
call
push
push
cmp
bound
out
int3
lea
and
imul
or
arpl
inc
in
frndint
lock
aas
adc
jne
add
mov
ret
mov
or
mov
loope
ret
int3
lods
dec
rclb
cmpsl
mov
scas
mov
push
lret
adc
or
outsb
pop
sarb
fcmove
jae
cmp
jle
cmp
mov
pop
shll
jmp
cwtl
dec
icebp
pop
inc
xchg
push
xor
xlat
jae
inc
fsubl
mov
fcomp
dec
outsb
xchg
xchg
mov
fwait
in
or
jl
leave
pushf
adc
fldcw
cmp
pop
pushf
repnz
sbb
cmc
lret
xorl
push
out
mov
aam
dec
pushf
adc
adc
mov
mov
push
jae
mov
mov
fsubrs
pop
int3
les
inc
jle
std
xor
fdivrs
repnz
lcall
pop
sbb
and
lcall
push
pop
addl
mov
pop
inc
leave
ret
push
adc
fstpl
pop
add
fdivr
lret
or
in
sahf
js
mov
stos
mov
insb
lret
pop
iret
sbb
xor
lahf
das
in
adc
mull
adc
pop
mov
mov
or
jnp
idivb
mov
je
push
cmc
and
movsb
iret
jbe
arpl
add
cmovp
lret
jnp
int3
outsl
lret
not
mov
sub
dec
jnp
shll
es
das
push
and
call
int3
sbb
push
lret
push
add
stos
push
pop
jmp
sbb
jno
sahf
mov
mov
sbb
inc
jno,pt
insl
mov
je
paddusw
cmp
push
pop
popf
sbb
xor
xor
jl
mov
out
dec
fs
mov
dec
sbb
cmp
inc
jbe
add
shrl
inc
leave
cmp
inc
ljmp
adc
inc
mov
and
in
xchg
int
mov
dec
mov
adc
testl
mov
and
mov
add
dec
daa
xor
sbb
lret
xor
inc
mov
cmc
rcl
sahf
into
rcrl
bound
sbb
xchg
popf
inc
ljmp
shr
cld
fidivs
addr16
jae
mov
nop
mov
push
into
lahf
loope
es
scas
iret
scas
in
dec
neg
and
dec
test
jbe
push
inc
test
fimull
rcll
jno
ja
call
cmp
popf
das
push
jnp
inc
jbe
in
mov
scas
add
mov
sti
neg
mov
mov
xor
pop
xor
in
cwtl
mov
pop
add
bnd
sub
hlt
imul
ret
sbb
cmp
jecxz
lock
out
add
outsb
add
repz
mov
dec
sbb
cltd
jnp
lcall
push
push
or
hlt
insl
out
in
pop
pop
xchg
push
inc
mov
data16
and
in
int
jge
es
outsl
nop
jo
pusha
cs
xchg
and
into
mov
push
jg
mov
cmpsl
or
divb
in
mov
pop
sub
pusha
cmp
sbb
mov
jmp
push
int3
shl
shlb
adc
pop
add
cmp
or
and
fisubs
stos
imul
push
psrld
ret
int
sbb
adc
inc
mov
cwtl
leave
xchg
mov
je
sarl
add
addr16
mov
addl
mov
or
sbb
or
pop
xor
jl
test
scas
in
movsb
dec
inc
dec
mov
cwtl
shl
in
push
push
sbb
outsl
jne
xor
stos
enter
inc
jge
jbe
and
mov
adc
test
andl
pmulhuw
vpmacssww
jle
mov
dec
sub
cmp
out
jge
jmp
sti
pop
xor
enter
or
stc
insl
outsb
int3
xchg
sub
dec
mov
dec
fcoml
loopne
push
inc
mov
mov
cmp
add
test
clc
cmp
adc
jbe
lods
mov
daa
pop
xchg
rcrb
adc
push
sub
xchg
fisubl
in
imul
enter
cmp
lods
outsl
pop
adc
pusha
or
fsub
sub
enter
sub
xor
and
ficomps
ja
push
ss
add
push
test
loopne
add
mov
push
in
push
mov
and
lcall
repnz
pop
push
jle
mov
fisttps
into
sub
fistl
ret
mulb
push
sbb
fdivrs
mov
lcall
xchg
mov
cmp
sub
jbe
js
ret
notl
xchg
sbb
pcmpeqd
clc
int3
sahf
xchg
push
adc
inc
mov
cmpl
pop
mov
sbb
dec
rolb
ficoms
push
mov
popa
and
or
push
xor
shrl
pushf
enter
cmc
stc
lds
cmc
jp
mov
xchg
mov
jp
test
mov
das
sub
xchg
aas
loop
push
popa
inc
dec
sbb
aas
loopne
inc
mull
sbb
test
push
mov
in
add
out
lahf
insl
inc
pop
xchg
lcall
out
loope
push
les
mov
ds
popf
addr16
xchg
xor
mov
imul
pop
and
stc
mov
arpl
aad
lock
mov
xor
cli
inc
into
popa
test
mov
out
pop
repnz
sub
outsb
nop
sub
jnp
adc
add
leave
add
jb
stc
sub
xor
out
jecxz
stos
and
iret
cmp
addl
fdivrl
jno
out
cmp
inc
in
paddusw
xchg
mov
add
xchg
movsl
lret
mov
aam
jl
xor
pop
in
test
cltd
mov
cmp
test
sbb
es
jmp
jae
pop
lods
ficompl
xor
inc
mov
cmc
pop
mov
xor
lds
xchg
out
pop
test
jno
std
inc
mov
lea
sub
mov
ret
add
or
jl
dec
popf
decb
push
mov
jns
hlt
ffree
cmpsl
sbb
pop
aas
call
stos
push
lcall
jns
popa
mov
or
test
and
test
pop
outsl
xchg
or
mov
inc
mov
push
mov
test
lods
inc
jo
cwtl
mov
or
jmp
jl
movsl
mov
adc
or
adc
clc
adc
add
fwait
adc
pop
data16
imul
fdivrp
jbe
lret
pop
cmp
cltd
xchg
pop
fucomp
in
int3
stos
test
inc
push
out
ds
mov
ret
rorl
sbb
loopne
sub
or
push
pop
pop
idivl
out
mov
jp
outsl
enter
push
inc
and
frstor
or
dec
iret
xchg
mov
mov
in
stc
pop
sbb
dec
mov
add
dec
mov
mov
pushf
sbb
mov
xchg
push
mov
jg
mov
mov
out
aad
cmpsb
imul
sub
push
mov
out
sub
cmp
dec
popf
test
dec
fldl
insl
xchg
loope
sbb
dec
adc
addl
jnp
scas
mov
ja
push
sub
int
xor
sahf
popl
filds
sarl
leave
jne
fiadds
jne
pop
ror
lock
jle,pt
shrl
inc
xchg
outsl
test
shll
notb
mov
lods
clc
stc
dec
jo
and
in
jne
fwait
loop
out
xor
mov
scas
sub
dec
in
out
mov
lret
test
iret
mov
orb
jno
xchg
dec
xchg
int
cli
fcompl
xor
repz
scas
jno
dec
in
fwait
mov
cmp
jl
push
cli
fmul
inc
and
push
push
and
xchg
or
call
cmpsb
and
mov
cmp
inc
push
push
test
push
xor
add
or
loope
cmp
xchg
sbb
sbb
xor
cmp
xchg
orl
ljmp
xchg
stc
aas
cmp
push
outsl
mov
or
sbb
out
inc
mov
adc
push
push
movsb
sub
or
ja
sub
mov
push
dec
push
out
sarl
mov
xchg
adc
pop
inc
das
int
xor
inc
adc
push
adc
mov
cld
scas
mov
call
xchg
xchg
ljmp
mull
pop
cmc
inc
jl
int3
or
lss
out
xchg
dec
aam
cmp
inc
sub
jle
lahf
sahf
or
loopne
mov
test
addr16
mov
ja
test
push
jae
and
montmul
cmpsb
inc
inc
pop
ret
mov
sahf
in
xchg
jbe
xor
mov
mov
or
push
or
add
xchg
inc
insb
mov
adc
aad
lret
jno
push
dec
mov
mov
shrl
std
andb
pop
outsl
nop
enter
orl
movsb
outsb
push
stos
mov
mov
sub
aaa
mov
cmpsb
jp
mov
test
mov
repnz
and
xor
or
cmpl
pop
jns
daa
cwtl
xlat
pop
ret
shlb
jge
xchg
imul
insb
in
inc
jl
jmp
dec
addr16
sbb
pusha
addr16
ficoms
hlt
push
nop
out
xchg
push
xor
clc
mov
or
inc
test
cmp
cmp
in
int
or
xchg
xchg
push
rorb
push
lahf
insl
adc
pop
dec
cltd
or
push
pop
mov
push
cltd
cs
stc
add
das
xlat
dec
push
jo
aad
ret
cli
mov
mov
mov
clc
gs
adc
adc
notb
mov
in
push
and
sbb
pop
addr16
xor
jmp
fcmovne
std
int3
lcall
jle
push
in
or
sub
rclb
pop
mov
data16
jno
adc
push
shl
cmpsb
cmp
add
mov
cli
out
idivb
sub
pop
mov
push
add
decb
push
or
adcb
movsl
push
xchg
sub
shlb
shld
shrb
or
dec
jmp
jo
movsb
mov
or
push
and
pop
pop
outsb
nop
cmpsb
shrb
sbb
xlat
or
shll
lock
cmpsl
sub
mov
or
jbe
fwait
jbe
jnp
sub
inc
mov
mov
sti
fcmovnbe
push
stc
cmp
insl
sbb
mov
in
out
ja
in
xchg
imul
jno
xchg
sbb
pop
jge
wbinvd
enter
insb
shrl
xor
into
pop
mov
fxch
das
aas
xor
rol
mov
outsl
mov
pop
insl
mov
fsubp
aad
ret
test
dec
mov
enter
imul
or
xchg
push
test
ljmp
push
aas
gs
jge
and
push
cmp
imul
xchg
inc
push
pop
mov
xchg
int3
out
mov
rcll
inc
movsb
xor
mov
cmp
mov
loope
sub
mov
jp
das
aaa
push
fmul
mov
scas
push
addr16
or
cmpsl
xor
xchg
loopne
add
stos
push
sub
and
xchg
or
aas
fldt
mov
fildl
sub
inc
in
dec
loopne
jp
xchg
jle
pop
in
lds
rcrb
nop
dec
mov
mov
sub
cmp
ds
cmp
in
es
dec
ja
mov
enter
inc
sbb
adc
xlat
jae,pt
xchg
in
cs
pop
adc
mov
xor
fildl
daa
mov
cli
mov
pusha
shr
push
outsb
xchg
mov
push
test
icebp
imul
loope
int
pop
lret
loopne
jmp
push
push
xchg
mov
das
mov
jae
xchg
mov
mov
xchg
sub
orl
mov
mov
fisubl
add
in
and
jb
pusha
cmpl
lods
int3
test
shl
rcl
jp
or
push
sub
push
push
inc
lahf
ljmp
jne
fsubl
imul
mov
mov
fsubr
cmc
jmp
lods
insb
jne
adc
imul
jl
push
lahf
pop
mov
pop
cld
cltd
bound
inc
aas
jg
and
leave
dec
jp
movsl
sbb
test
fsubrs
outsb
sbb
int3
nop
cmpsb
add
es
lods
scas
mov
sbb
arpl
dec
popf
hlt
mov
add
stos
sub
pop
sub
stc
fmulp
and
xor
inc
mov
mov
les
loopne
sti
aaa
aad
jge
out
xor
test
jle
fidivrs
mov
pop
cli
sbbl
dec
aaa
add
imul
mov
dec
data16
in
jo
cwtl
or
mov
dec
test
push
loopne
inc
mov
sub
push
cmp
ret
jne
movsl
movsb
lock
pop
push
das
scas
lret
xor
ja
mov
out
mov
xchg
aad
cmp
push
pop
jae
int3
jmp
mov
scas
add
pop
imul
push
mov
or
ret
sbb
mov
lods
lret
clc
movsl
or
aaa
cld
and
adc
cmp
adc
repnz
pop
int
jl
jmp
negb
cwtl
inc
jp
adc
mov
ljmp
test
xor
icebp
jb
xor
inc
sti
xchg
ja
in
pop
int3
jbe
adc
jmp
pushf
in
push
in
popa
into
push
sub
inc
mov
pop
sarl
imul
insl
outsb
pop
jae,pt
and
lock
loop
cmp
test
int3
mov
or
js
dec
jne
stos
xor
repz
outsb
stc
test
in
insl
ss
and
jl
cmp
and
push
ret
test
sti
popa
mov
pop
pop
bound
ficomps
rcll
out
es
cmpsb
add
cmp
test
subl
mov
adc
or
lods
gs
repnz
pop
cltd
add
push
int
lahf
dec
lret
push
add
clc
addb
scas
lcall
pop
insb
fidivs
outsl
xor
mov
jmp
sbb
jae
adc
xchg
aas
loop
dec
adc
mov
xchg
pusha
aaa
out
inc
mov
and
rolb
lock
mov
jb
sbb
out
jl
jp
jne
or
gs
movsl
rcrb
fdivs
xchg
or
ret
mov
xchg
lret
out
jnp
cmpsb
shr
rorl
pop
adc
and
xor
in
rcr
out
inc
push
icebp
lret
sbb
push
int3
bound
mov
notl
rol
sti
popf
repnz
add
adc
and
sub
fwait
in
leave
pop
mov
into
in
and
std
je
adc
mov
dec
int3
mov
xchg
sub
repnz
int
sbb
lret
mov
orl
shrb
repz
movsb
fildll
xor
mov
xchg
jp
cmp
cmp
push
sbb
pop
loope
add
jnp
dec
sbb
lret
xor
push
dec
sub
mov
iret
loope
and
fistl
mov
sbb
test
leave
je
adc
and
jno
testl
ret
push
pusha
test
ljmp
aad
mov
out
sbb
push
sbb
mov
xor
lret
sub
inc
shrl
dec
pop
and
outsb
mov
add
jno
js
mov
jbe
sbb
cmp
pop
mov
loopne
jb
shll
inc
fistpll
push
jnp
mov
stc
jbe
rcl
xchg
repz
add
stos
loope
lcall
mov
data16
aad
pop
cmp
push
sub
mov
lods
inc
xor
adc
int
out
sub
andb
ret
sbb
adc
cmpsl
jecxz
mov
repnz
xchg
fmuls
mov
pop
lods
mov
in
das
cs
sub
xchg
jns
dec
cmp
pop
hlt
rclb
ljmp
and
fisubrs
xchg
cmp
xchg
lock
aaa
movsb
pop
sub
or
addr16
lods
sub
leave
lret
iret
adc
jge
push
loop
ja
clc
fisttpl
jno
pop
mov
mov
xlat
mov
mov
cmp
xchg
cmp
jmp
xchg
sub
push
bound
addl
sub
lods
insb
add
out
jge
sbb
dec
mov
jno
xchg
dec
pop
jno
in
outsb
mov
push
ficoms
jbe
in
mov
pushf
xorl
popf
jb
insl
pop
xchg
in
push
lock
test
outsl
push
sahf
pop
dec
add
push
stos
insb
cmc
push
sbb
push
mov
inc
repnz
jno
pop
lret
xchg
sbb
into
mov
mov
xchg
dec
and
mov
pop
repz
and
iret
jmp
maskmovq
divl
jo
and
out
stc
fstps
aam
and
cmp
jp
nop
lds
pop
mov
jb
jb
mov
dec
xor
add
inc
nop
jle
xchg
orl
imul
add
pop
sarb
add
jb
lret
iret
adc
push
sbb
mov
mov
jae
pop
loop
or
xchg
orl
repnz
test
xor
and
mov
cmp
pop
notb
adc
addr16
fdivrs
inc
je
rclb
pop
mov
mov
in
or
aad
pop
subb
imul
push
js
shlb
xor
jecxz
pop
jae
imul
flds
cmp
and
sbb
insb
imul
cltd
loope
test
fs
test
dec
outsl
sbb
dec
xchg
inc
mov
sub
fwait
add
mov
aas
xchg
pop
mov
shr
jbe
sub
cwtl
and
push
add
jg
mov
cmc
cmp
push
dec
into
insl
arpl
and
in
scas
jno
hlt
xchg
sbb
sub
divb
pusha
mov
arpl
mov
sarb
push
movb
xor
and
pop
gs
insl
sbb
pusha
test
pop
aam
push
fcmovnu
xchg
mov
test
js
stc
loop
jo
and
lret
cmpsb
jge
pushf
sbb
mov
fnstsw
jle
xor
rclb
pop
push
inc
das
adc
je
ss
mov
dec
loopne
mov
push
cmpl
aam
xlat
mov
sub
ja
fldl
pushf
adc
mov
jp
push
cli
xchg
add
mov
lods
out
push
adc
adc
inc
and
cvtpi2ps
mov
jo
xchg
scas
dec
sar
rclb
mov
xchg
aas
sub
mov
repnz
jbe
push
push
mov
mov
mov
xchg
into
ret
imul
cmp
push
pop
inc
aam
xor
dec
dec
repnz
add
pop
xchg
dec
xchg
xor
and
rorl
sub
out
inc
ret
test
mov
sub
push
ja
inc
stc
sbb
popa
mov
xchg
loope
cltd
lea
hlt
insb
addl
in
imul
mov
andl
stc
jmp
inc
mov
lcall
test
arpl
xor
adc
jecxz
les
lret
add
dec
cs
add
gs
fs
xchg
repnz
test
out
imul
mov
loopne
cmp
es
cld
int3
xor
cltd
mov
stos
sub
mov
jno
jbe
iret
mov
lret
loopne
mov
test
ss
and
jno
roll
std
into
inc
fistl
loopne
cltd
out
mov
jns
lods
dec
pushf
cmp
loope
jmp
push
inc
jne
mov
cmc
insb
sbb
push
pop
cmpsb
mov
xchg
je
mov
lret
ja
dec
scas
mov
mov
jne
adc
nop
cld
and
add
push
lahf
push
sbb
pop
mov
jae
xor
fadds
mov
jge
lcall
jo
aam
cmp
adc
adcl
push
aas
pop
daa
inc
fstl
pop
adc
mov
push
xor
sti
mov
loopne
xor
xchg
aas
or
jp
out
imul
sysret
lock
mov
inc
mov
xor
into
incb
dec
ffree
cmp
enter
pop
push
xchg
sub
cmp
adc
popf
jl
push
cld
out
mov
out
jo
mov
mov
ss
cmpsb
cmp
xor
hlt
pop
mov
das
pop
fbld
push
mov
cmpsb
popf
lea
and
mov
test
mov
imul
shl
jecxz
cmp
sub
aaa
in
mov
push
xchg
jne
push
sarl
decl
scas
mov
push
jmp
pop
aaa
cmpsl
out
jmp
xchg
mov
mov
popf
popf
xchg
dec
xchg
or
xor
dec
fst
xor
mov
xchg
stos
inc
or
xor
mov
add
and
jmp
sub
cmp
lds
inc
fsubr
insb
push
inc
sub
mov
inc
dec
jb
fisubl
sub
lea
push
mov
js
mov
push
add
dec
mov
mov
ljmp
movsb
adc
add
lds
mov
ret
add
in
pushf
sub
iret
cmpsl
add
jg
sub
sahf
add
jae
add
idiv
in
mov
mov
lods
xor
push
lods
or
xor
leave
push
addr16
adc
test
adc
jmp
and
inc
rolb
dec
mov
sub
and
ja
shlb
not
inc
inc
test
addl
xor
mov
cltd
cs
xor
inc
aas
call
in
loope
xchg
out
inc
lea
mov
test
jmp
cmp
popa
jecxz
add
jge
imul
in
dec
mov
mov
xchg
outsb
inc
mov
test
add
adc
pop
sbb
pusha
push
mov
pop
adc
pop
mov
mov
cmp
cwtl
filds
divb
adc
adc
xchg
out
mov
insb
ljmp
inc
aas
xor
mov
into
and
cmpsb
cmp
add
xchg
dec
inc
adc
dec
and
fadds
addr16
leave
jle
and
and
lcall
imul
sub
xchg
pop
or
dec
jns
add
aam
or
sbb
sbb
cmpsb
dec
jae
sub
orb
mov
dec
popa
lea
add
xor
lret
mov
mov
cmp
lahf
or
add
loopne
test
stos
lret
popa
loope
into
jle
outsb
dec
faddl
dec
aas
cmpsl
cmp
andb
loopne
iret
inc
xlat
sbb
jbe
into
fs
sub
mov
dec
call
dec
adc
cld
ret
pop
stos
mov
mov
mov
jmp
mov
mov
fldl
sbb
imul
rorb
dec
jmp
fisttpl
jmp
jmpw
or
jge
lds
adc
je
decb
lcall
incl
mov
pusha
xlat
and
lea
and
arpl
sbb
fidivs
inc
lret
mov
sbb
cmpsl
add
adc
shrb
stc
mov
push
fwait
inc
inc
pop
xchg
or
fdivrs
xchg
lahf
sub
notb
mov
ss
sbb
dec
xorl
jno
stos
loop
xchg
sbb
xchg
es
cwtl
aad
inc
jae
sbb
pop
imul
xor
lock
mov
or
js
xchg
inc
and
subb
imul
jmp
arpl
jp
imul
lock
lret
sti
pop
in
lret
andl
jl
jb
mov
sub
and
push
xor
insb
enter
leave
pop
sbb
add
adc
jl
jle
int
dec
mov
sti
std
scas
push
cmp
int
xor
adc
fstpl
xchg
stc
out
push
and
je
or
fwait
jmp
mov
out
mov
je
jns
sbb
mov
pop
loopne
and
dec
sub
sbb
fwait
or
test
scas
outsl
test
adc
es
mov
push
inc
out
inc
xchg
xor
sub
xor
jnp
and
in
fiaddl
xchg
pop
push
inc
test
mov
test
dec
push
mov
fwait
and
xor
inc
es
sub
inc
int
js
hlt
in
jns
jns
orb
fdivrl
jb
aas
test
mov
pusha
test
jae
inc
shlb
in
mov
jnp
push
xchg
inc
adc
cld
clc
leave
mov
clc
out
pop
pop
jns
insb
lods
pop
cwtl
and
ss
rolb
popa
adcl
ffree
and
lahf
jp
test
lock
sti
les
bound
lcall
jg
bound
or
jge
in
xor
test
push
sbb
mov
push
outsl
sahf
lods
xor
or
aad
xchg
mov
sub
imul
popa
loop
les
mov
inc
mov
cs
mov
and
xlat
push
cmp
aas
je
xor
sbb
je
jmp
cs
dec
mov
jg
sub
jmp
dec
data16
push
lcall
xchg
inc
mov
hlt
add
cwtl
push
add
lahf
ss
out
pop
xchg
mov
scas
repz
out
adc
lods
push
add
and
mov
mov
jl
fwait
mov
cmp
mov
adcb
cwtl
xchg
or
push
lock
stos
jnp
lock
push
scas
rcrb
in
inc
push
fimuls
push
jecxz
sbb
push
xchg
mov
int
std
sbb
jecxz
mov
cmp
and
mov
cmp
sub
mov
cmc
mov
inc
lret
sub
xorb
jge
cltd
cmpsl
add
add
or
daa
popa
push
imul
sbb
xor
cmp
test
mov
repz
rcrb
cwtl
xchg
std
add
mov
adc
rcrl
mov
sbb
dec
out
inc
add
mov
push
pop
mov
test
dec
imul
das
lods
data16
jno
push
pop
test
adc
test
js
test
call
ret
mov
add
stos
iret
mov
push
ljmp
inc
xchg
jecxz
jns
adc
call
arpl
lahf
mov
xchg
cmp
notb
lds
imulb
shrl
cmp
enter
cmp
das
xchg
out
adcl
sti
fidivrs
push
sbb
sbb
sub
mov
xor
mov
and
add
fs
jge
stos
and
pop
fwait
adc
ret
mov
jl,pt
lods
cli
xor
shr
ds
xor
xor
lahf
sbb
xchg
pop
adc
daa
fstps
sub
lods
mov
xchg
cli
js
xchg
jne
test
push
xchg
sbb
mov
inc
push
add
bound
sbb
popa
repnz
pop
dec
add
adc
fsub
in
sub
dec
bound
cmp
leave
pop
out
pop
push
xchg
push
pop
lret
mov
jo
push
pop
push
lock
insb
cmp
adc
outsb
pop
mov
jb
xchg
jno
cs
mov
xor
lock
or
outsl
mov
push
jne
jnp
stc
test
mov
es
rcr
movsb
out
add
and
or
loop
cmp
es
les
stos
sbb
leave
dec
into
stos
call
sti
mov
jmp
push
jge
jp
ficoml
loopne
loopne
add
stos
int
xchg
mov
cs
fdivs
mov
fldcw
mov
rclb
lea
mov
int
lcall
mov
adc
stos
xor
xchg
scas
mov
fstps
jp
xchg
sub
mov
push
into
sub
ficomps
push
xchg
mov
lcall
jl
xchg
out
movsl
dec
sub
jo
inc
cs
adc
push
sbb
filds
and
dec
ret
loope
xchg
add
sbb
dec
lea
cmp
dec
data16
shr
imul
xor
xor
inc
cmp
mov
gs
jg
repz
test
rorb
out
int
aaa
out
movsb
outsl
jnp
jge
mov
jbe
jl
imul
xor
dec
rcr
sbb
roll
mov
addr16
add
cmc
xchg
jge
push
mov
cltd
pop
cld
dec
xchg
ret
ljmp
xor
loop
cmp
sbb
loopne
adc
lret
scas
xor
ficomps
mov
mov
test
pop
and
arpl
in
xchg
ja
outsb
lods
out
adc
lahf
add
mov
push
pusha
leave
pop
pop
rcr
xchg
xor
add
and
mov
adc
cmc
sarl
dec
jo
outsl
xchg
and
js
adc
jae
or
in
inc
neg
pop
sub
add
cmc
fisttps
daa
lcall
add
push
mov
insl
test
pop
adc
and
ljmp
cmp
xor
fists
lods
cwtl
jno
sub
call
fdivs
pop
jae
dec
mov
pop
cmp
pop
mov
call
insb
push
pop
lods
pusha
mov
shlb
cmp
lods
and
out
mov
sub
int3
je
fcoml
popa
stos
daa
push
fsubp
or
mov
aam
jno
orb
inc
loop
adc
adc
sbb
mov
inc
imul
nop
fwait
inc
mov
mov
test
sub
pushf
inc
ljmp
out
repz
push
mov
xor
outsb
sbb
testb
in
pop
cmp
push
stc
insb
lcall
test
arpl
pop
or
pmuludq
iret
adc
xchg
xchg
sub
sub
arpl
lock
xchg
mov
dec
cld
push
push
xor
mov
shrl
push
add
bound
sub
sbb
xchg
out
bound
hlt
pop
sbb
xlat
push
sbb
lcall
dec
xchg
mov
sbb
push
xchg
mov
movl
shll
sub
xor
and
sahf
fsts
or
out
inc
ret
push
dec
dec
adc
popa
loope
test
push
pushf
jb
scas
ret
divb
cwtl
lods
xchg
and
xor
jno
sbb
out
lret
sti
ss
push
xlat
loop
add
test
lds
shrl
cmpsl
int3
rol
mov
jb
cmpl
push
and
xor
ret
lahf
mov
jecxz
ss
ret
mov
orb
js
cwtl
fsubrs
push
lret
pop
push
pop
hlt
es
in
aas
sbb
jge
push
imul
jmp
add
or
and
xchg
or
mov
sub
cltd
add
adc
jns
scas
inc
subb
add
sbb
aam
out
add
mov
iret
in
cltd
xor
fs
inc
inc
lret
and
rep
sub
popf
aam
xchg
enter
movsb
mov
mov
dec
or
sbb
push
push
mov
test
rcrb
jmp
mov
sub
mov
xlat
jae
ror
xchg
dec
cmp
inc
adc
inc
mov
jb
fisubs
fildll
addr16
xchg
inc
adc
cmpsb
jle
sbbb
cmpsl
push
outsl
into
call
nop
inc
nop
cli
mov
jle
cwtl
leave
adc
pop
stos
aad
or
pop
mov
pop
push
shlb
addr16
sbb
mov
jl
or
adc
sbb
xchg
sbb
ljmp
xchg
or
orb
out
dec
out
in
mov
ret
jae
imul
inc
or
scas
scas
ret
mov
pop
mov
mov
lret
fbstp
sbb
mov
repz
mov
scas
xchg
cmc
ret
add
iret
jl
cmp
push
xchg
xchg
adc
cmpb
int3
mov
sub
andb
bound
pop
int
or
rolb
testb
jno
and
cld
ret
loopne
inc
arpl
popa
sahf
adcb
dec
aas
loop
shrl
nop
in
xchg
cltd
ja
mov
test
or
push
mov
or
mov
jge
ds
divl
jbe
cmpsb
adc
cmp
mov
or
es
pop
mov
dec
push
into
push
dec
es
jle
jae
popf
push
popa
mov
sbb
lock
and
xor
cmc
in
std
lret
add
add
mov
andl
inc
nop
clc
add
mov
mov
insl
mov
jp
sub
add
pop
mov
cmpb
int3
lods
or
xchg
iret
sub
push
mov
gs
or
sbb
psrld
xor
or
push
out
jb
dec
movsb
nop
mull
jne
stc
sahf
adc
sub
inc
clc
shlb
pop
cmp
cmp
pop
push
add
inc
imul
stos
repz
scas
xorb
sub
xor
hlt
cli
xchg
and
ffree
ljmp
mov
inc
idiv
adc
push
fwait
xorl
in
bound
stc
jns
mov
mov
push
or
push
andl
push
inc
or
sub
inc
int3
lea
fimuls
lret
cmp
xchg
cmpsb
leave
mov
or
or
xchg
movsl
cwtl
out
out
in
mov
mov
mov
test
cmpsl
add
pop
xor
int
or
idivl
mov
jo
xchg
scas
stos
aam
clc
mov
mov
sub
movsl
xchg
cwtl
push
scas
lret
xchg
or
and
push
lods
pop
xor
loop
or
popa
or
sub
xchg
jl
xchg
scas
jmp
push
push
push
lret
lods
sahf
push
mov
inc
addl
aas
push
and
in
cmp
xchg
orl
add
add
cmpsb
xor
cmpsb
cmp
adc
and
jmp
jmp
mov
mov
out
mov
pop
mov
xchg
sub
add
mov
inc
dec
jbe
mov
mov
stos
test
jbe
or
test
arpl
daa
dec
xor
xchg
sub
popa
dec
jb
dec
push
push
cmc
sub
into
iret
mov
addr16
mov
rcl
or
xor
into
cmp
sbb
push
out
clc
mov
push
xor
int
pop
jp
xor
inc
std
adc
mov
push
bound
stos
and
fptan
add
arpl
imul
pop
hlt
jnp
mov
sbb
ja
sub
into
into
add
mov
xchg
aam
dec
sbb
stc
and
nop
jecxz
dec
int3
dec
xor
and
dec
cltd
ret
inc
stos
repz
mov
insb
sub
dec
outsb
lods
pop
adc
int3
jo
out
popl
insb
stos
fs
lock
fdivl
xor
pop
ret
bnd
xor
sbb
mov
loop
sbb
add
inc
arpl
adc
das
adc
push
mov
sbb
adc
pop
arpl
fldcw
lock
xchg
fwait
and
jnp
daa
jge
filds
jne
inc
mov
push
mov
shlb
out
mov
stc
sbb
pop
test
call
dec
add
dec
and
jmp
or
mov
mov
sbb
pop
mov
lds
fs
dec
mov
mov
movsb
mov
test
mov
xor
and
daa
xchg
rcl
fisttps
cmp
test
outsl
push
add
loopne
mov
test
sbb
movsb
cmp
jns
sbbl
lock
jge
or
shll
out
fs
pop
out
nop
lods
shr
scas
push
mov
or
das
adc
xchg
lcall
sbb
inc
dec
pop
xor
sbb
xchg
test
dec
outsl
test
outsb
lods
subl
fiadds
sub
cmp
xchg
cs
out
sbb
int3
cmp
sub
dec
mov
call
dec
popa
xor
xor
in
push
je
or
mov
clc
mov
es
aas
inc
sub
xor
aaa
adc
pop
aas
and
and
jl
jl
sbb
pop
jle
adc
adc
push
pop
add
daa
aaa
popf
fcomps
push
iret
gs
pop
cmpsl
leave
pop
cmp
jne
sbb
adc
and
mov
stos
loopne
xchg
loop
enter
shll
lahf
adc
add
cmpb
and
xor
jb
adc
cld
mov
outsl
adc
push
push
jne
loope
mov
mov
sbb
rclb
daa
outsl
sbb
cld
push
or
shlb
fstpl
ficompl
scas
and
adc
adc
decb
jl
push
push
cmpsl
inc
mov
push
add
or
or
rcrl
xor
xchg
loope
add
mov
xchg
xchg
in
outsl
xor
mov
icebp
cld
jo
dec
mov
fstps
les
call
arpl
sub
fisttpl
mov
mov
adc
je
pop
gs
sub
stos
mov
hlt
cli
jne
jb
dec
push
pusha
testl
push
and
fcoms
jp
outsb
ret
and
repz
and
call
push
out
aas
push
in
lret
mov
lcall
xchg
mov
mov
mov
and
lret
mov
int3
push
xchg
dec
jp
xor
xor
cmp
cmpsl
mov
int3
or
pop
popa
mov
jl
sub
sub
sbb
loop
lods
or
scas
out
cmp
mov
test
cltd
arpl
pushf
rcrb
sbb
pop
pop
rcrl
int
jecxz
ret
push
add
jecxz
cltd
iret
divb
test
pusha
test
fucomp
aaa
dec
inc
pop
xor
ja
call
pushf
out
into
fxch
les
or
mov
je
mov
xchg
jge
lods
sbbl
sub
jp
mov
jle
mov
and
sbb
lcall
mov
pop
shll
cld
mov
aam
push
int3
out
call
cmpsb
aas
sahf
fs
pop
ds
add
pushf
imul
mov
or
jns
sbb
repnz
movsl
test
mov
outsb
xor
insb
mov
cld
mov
add
sbb
sbb
jg
outsl
in
mov
xor
xor
push
es
in
iret
push
sub
pop
cmp
outsb
jmp
adc
push
test
popa
xchg
mull
test
cs
push
mov
ljmp
or
aas
cltd
push
scas
arpl
js
loopne
sti
jbe
insl
push
xchg
and
rorb
mov
ss
cmp
xchg
cmp
pop
push
pop
iret
xor
test
mov
pop
fdivrl
mov
gs
jg
sbb
jo
fisubrs
ret
adc
imul
shr
pop
push
push
cmp
xchg
jl
lret
adc
sbb
test
sbb
adc
daa
test
pop
jecxz
cmpl
mov
stos
in
cwtl
out
stc
mov
sub
jno
bound
and
mov
push
inc
dec
fwait
push
insl
pop
gs
hlt
pushf
ror
rcrl
scas
popf
scas
sahf
xor
fwait
sbb
xor
jl
outsb
jmp
stc
dec
push
popa
inc
cmpsl
dec
xor
push
or
pop
sub
imul
sub
scas
xlat
sub
add
imul
mov
sarb
adc
out
ds
icebp
iret
sbb
cwtl
push
jae
repnz
adc
lret
mov
insl
xchg
sub
pop
ror
or
ret
pusha
loope
cwtl
jg
jle
xchg
sbbl
or
cltd
adc
push
push
dec
ljmp
out
jecxz
xchg
stos
loopne
mov
jge
fwait
mov
cmp
mov
or
in
cmpsl
jbe
fmull
mov
enter
push
cmpsl
dec
cmp
xchg
or
cwtl
popf
and
mov
push
aam
mov
jg
repz
inc
imul
sub
ss
mov
dec
jne
scas
cli
pop
cld
lock
dec
in
pop
scas
notl
ja
loope
subb
shll
aad
dec
incb
push
test
xchg
ljmp
test
stc
inc
adc
mov
pop
popa
in
rolb
mov
ss
mov
aad
pop
pcmpeqw
inc
lahf
mov
pop
xchg
pop
or
clc
xor
hlt
loopne
das
push
icebp
push
iret
push
pop
inc
movsb
call
pushf
fistpll
cmp
or
push
xchg
mov
test
ss
nop
add
mov
inc
arpl
xchg
add
hlt
imul
mov
xchg
xor
mov
and
pop
fisubrs
cld
or
lea
xchg
mov
or
subb
stos
aas
or
cmpsb
fisubrs
mov
cmp
daa
dec
enter
aad
rcrl
clc
xorl
mov
mov
int3
repz
cmpsl
inc
and
mov
mov
in
loop
aam
jnp
aaa
mov
lret
inc
rolb
mov
mov
and
repz
jae
sti
push
sbb
and
inc
imul
outsl
ret
gs
outsl
cmc
mov
or
xor
xchg
je
arpl
in
lret
mov
mov
adc
add
imul
fildll
xor
pop
sbb
fcoms
shll
scas
jo
jb
out
pop
jecxz
dec
es
loope
adc
inc
push
push
or
sub
movsl
push
xlat
in
jl
cmp
mov
lcall
out
shlb
int3
scas
adc
movsb
lret
inc
lods
in
pop
dec
mov
std
mov
pushf
sub
mov
pop
dec
sub
cltd
shll
adc
inc
popa
test
push
xchg
popf
xor
mov
cmp
pusha
xchg
xchg
xchg
pop
cmp
out
inc
aaa
div
mov
popa
cmpl
pop
jae
sub
add
lret
or
lea
or
push
sbb
mov
jp
leave
xchg
out
testl
dec
mov
pusha
fdivs
jns
mov
sti
ljmp
and
mov
xchg
xchg
and
jbe
xchg
sub
out
insb
push
mov
pushf
or
outsl
popf
data16
mov
icebp
push
rclb
imul
pushf
mulb
mov
in
aad
arpl
and
xor
dec
call
test
xchg
aaa
cs
jae
lret
repnz
cmpsl
fmull
xchg
jne
dec
dec
movsb
pop
scas
pop
sbb
xor
xor
ret
xchg
out
or
and
dec
inc
cmp
psllw
add
in
xor
outsl
jb
ja
std
lock
dec
xor
or
cwtl
loope
pop
pop
push
cmpsb
sub
jge
loopne
subl
inc
jp
xor
pop
movsb
test
sbb
rcl
nop
movsl
lret
push
add
mov
lret
sub
arpl
and
push
mov
xor
out
leave
pop
int3
nop
sahf
or
xchg
push
dec
arpl
jb
jo
lret
jno
dec
sbb
loopne
and
fs
cltd
xor
shrb
das
mov
iret
out
mov
sbb
mov
or
xor
lods
cmp
jno
popf
mov
lea
and
popa
and
cmp
cmp
sub
xor
fildl
inc
outsb
push
cmpsb
sub
outsb
stc
adc
fdivs
movsb
push
xor
adc
sub
mov
push
xchg
dec
outsl
in
push
shlb
int3
int3
fnstcw
push
inc
sbb
test
xchg
ja
popa
push
lea
pushf
adc
divl
push
js
int
push
pusha
jl
pop
sbb
cs
lret
jnp
mov
sahf
bound
loop
and
movsl
loope
roll
jle
out
add
mov
or
dec
int
movsl
add
aad
xchg
mov
jmp
push
pop
cmp
aad
loopne
push
xchg
in
xor
mov
or
movsb
dec
pop
movsb
insb
pop
sub
pop
mov
pop
hlt
mov
sub
xchg
jmp
jge
insb
xor
cmp
mov
cmp
in
int3
pusha
ljmp
jg
add
js
adc
pop
push
shl
ret
lahf
sub
dec
lea
jle
imul
aam
lahf
lea
xchg
out
daa
iret
dec
add
dec
insb
out
adc
dec
adcb
hlt
mov
test
push
imul
mov
into
arpl
out
xchg
bound
push
sbb
mov
sbb
inc
jbe
sub
jne
enter
test
or
cmp
andb
imul
add
xorb
gs
sub
xorl
inc
movsb
adc
or
iret
arpl
xchg
sti
mov
jno
dec
xlat
pop
ret
push
les
xchg
mov
inc
lock
sbb
xchg
cmp
pop
dec
idivl
jg
or
cmc
ljmp
mov
mov
xor
xchg
mov
mov
je
fsubrs
stos
and
fwait
mov
mov
mov
ret
cmp
int
or
in
scas
cmpsl
push
loopne
bswap
test
jae
pushf
jecxz
cmp
mov
dec
cmp
out
sahf
repnz
jnp
sbb
out
mov
push
test
daa
push
sbb
fbstp
and
pushf
aas
mov
push
fs
lret
lods
leave
mov
mov
jbe
aas
mov
xchg
cmc
shlb
jo
cld
fwait
jmp
imul
adc
adc
mov
mov
aaa
jns
push
bound
push
cwtl
jle
sub
mov
es
vmwrite
lcall
out
jg
xor
test
cmpl
mov
xchg
rorl
jb
lods
or
pop
inc
lcall
repnz
jle
popa
sub
lahf
data16
xor
int
mov
daa
cmp
xchg
inc
xchg
cmp
mov
cmp
cmp
les
clc
mov
in
adc
cltd
or
outsb
xor
jg
lret
and
loop
pop
test
xchg
dec
stos
imul
call
test
add
cld
dec
ljmp
cmp
jg
xor
gs
mov
add
clc
fcmovnu
mov
push
ds
scas
push
sbb
xorb
and
into
insb
test
push
pop
lods
mov
ja
in
lea
fistl
movb
fucomp
pop
sbb
sbb
pop
scas
aas
pop
mov
andl
stos
mov
les
xor
rol
test
add
adc
xchg
and
lahf
xor
mov
lock
in
push
sahf
jmp
pusha
adc
sbb
aaa
fnstcw
ret
inc
ja
stos
xchg
add
inc
insb
fidivs
fs
aas
jmp
bound
call
data16
fmuls
mov
faddp
xorb
jo
jne
bound
mov
sub
mov
pop
push
cmpl
nop
add
pop
mov
imul
ds
in
test
cmp
pop
mov
xor
mov
cmp
cmp
sahf
dec
mov
mov
cmc
jg
and
in
cmpsl
outsl
push
subl
jmp
pop
arpl
insb
pop
xchg
mov
or
aas
out
int3
sar
rclb
cmp
lahf
sar
sti
inc
xlat
or
pusha
popl
mov
stos
sbb
inc
fcmovbe
jae
or
cmp
repz
insb
or
cld
enter
jl
nop
pop
ja
jg
push
mov
fidivrs
fidivl
adc
pop
out
loop
pop
inc
out
push
imul
cmpb
pop
jo
or
push
sub
jbe
jp
shll
divb
lods
out
lcall
das
sbb
fcoms
sbb
dec
gs
call
jb
or
or
jo
xchg
dec
ret
pushl
inc
mov
or
add
loop
push
jp
jmp
sbb
jno
gs
adc
icebp
or
inc
mov
sub
mov
cmp
and
rcl
int
idivl
cltd
inc
loopne
iret
lahf
adc
icebp
dec
insb
and
jbe
and
lods
bound
aad
ret
fcom
cs
add
call
lea
pop
leave
mov
inc
insb
in
or
inc
inc
xor
dec
lods
aam
xchg
push
sub
in
add
scas
mov
andl
cld
fistpl
lea
and
or
mov
sbb
adcl
jg
fwait
xor
pcmpgtb
mov
mov
in
mov
sub
out
mov
jg
inc
fwait
dec
or
sahf
adc
stc
scas
jg
notb
rcr
ss
xchg
cwtl
add
test
int3
dec
call
fs
pop
clc
out
arpl
or
mov
sub
push
je
cli
mov
arpl
cmp
xchg
ret
out
into
and
cmp
into
sub
int3
xor
pop
mov
std
and
jb
xchg
xchg
aam
faddl
cs
ljmp
test
jp
mov
out
inc
fildl
pop
out
dec
fmuls
mov
hlt
adc
and
push
pop
xchg
xchg
test
mov
hlt
loope
jecxz
or
fists
pcmpgtw
add
inc
repnz
jp
dec
dec
in
mov
jmp
pop
cmp
xor
cld
xor
sbb
in
subl
stos
pop
add
pop
xor
jmp
pop
pop
in
cwtl
cmp
jae
sbb
xor
in
sbb
sub
into
lock
sbb
leave
jl
movsb
or
cmp
xchg
sub
cmpb
xor
es
lret
mov
outsl
xchg
out
xchg
mov
or
mull
mov
hlt
pop
arpl
inc
sar
xchg
fcmovu
gs
fldcw
enter
mov
cmp
sbb
mov
xchg
mov
loop
sbb
js
iret
test
push
mov
in
mov
mov
add
loop
pop
mov
jno
pusha
xchg
mov
xor
xchg
daa
aam
je
and
out
jp
lret
mov
cmp
ljmp
stos
icebp
cs
add
adc
insb
mov
aas
dec
inc
or
pop
aam
stc
xor
pop
mov
in
out
hlt
cmp
pop
dec
rcrl
leave
adc
jbe
lret
pop
out
les
out
and
dec
or
mov
rol
imul
mov
fnstenv
and
mov
push
add
out
and
loope
inc
inc
add
dec
jns
sub
notl
jmp
stos
jecxz
int
mov
aaa
dec
insb
mov
lods
xor
cltd
arpl
adc
cmp
xchg
xchg
clc
jae
gs
pop
push
mov
mov
ja
add
pop
cmp
outsl
pushf
pop
push
jb
sbb
lds
xchg
lods
out
mov
mov
and
jl
jb
pop
pusha
pop
mov
rol
mov
insb
pop
pop
or
lods
cmp
sbb
and
mov
test
jl
or
rolb
mov
mov
cmp
jae
ret
inc
pop
dec
icebp
jge
push
loope
movsb
push
outsl
nop
ljmp
mov
sub
cmp
cmp
sub
lahf
and
mov
inc
sub
idiv
sub
dec
or
sub
das
incb
out
and
mov
inc
xchg
movsl
or
cwtl
mov
xor
mov
in
iret
mov
jmp
fldcw
sti
adc
sti
inc
add
cmp
or
mov
sahf
ret
lds
push
and
mov
data16
dec
dec
incb
push
cmp
mov
insb
mov
xchg
jge
mov
lods
sti
adc
push
push
outsl
jae
push
mov
jae
or
mov
mov
fwait
and
filds
bound
push
inc
and
frstor
cmp
dec
jecxz
push
test
test
push
sbb
inc
sbb
popf
outsl
and
cmpsb
jns
cmp
fwait
mov
mov
mov
inc
filds
jp
sti
loop
pop
cltd
add
outsl
push
xchg
into
in
mov
add
adc
jne
push
test
mov
inc
leave
mov
xchg
push
hlt
push
mov
lcall
sbbl
les
jae
adc
movsb
fstpl
pop
and
aad
pop
pop
lea
push
movsb
push
out
sbbl
daa
jg
mov
movsl
and
lea
out
insb
in
adc
mov
cmp
push
mov
push
outsb
cmp
dec
xor
cmc
xchg
jecxz
les
inc
mov
fs
push
call
xor
xchg
sbb
rolb
aam
xor
lods
xchg
stc
add
mov
xchg
xchg
sub
lock
pop
xlat
repz
jbe
sbb
test
js
adc
sub
cmpsb
inc
xchg
adc
ret
sti
pop
mov
mov
add
mov
pop
test
outsl
out
add
iret
cld
pushf
cld
xor
jecxz
mov
popa
jecxz
lret
jg
mov
leave
cmc
aad
mov
xchg
push
jbe
addr16
loopne
push
loop
and
mov
test
pop
dec
xor
in
push
out
ja
cmp
mull
cmp
popa
leave
mov
xor
fimull
sti
popf
dec
in
cmp
dec
add
adc
repnz
cli
pushf
repz
and
das
enter
mov
fwait
mov
sbb
cmp
jbe
inc
xchg
nop
es
sbb
mov
xchg
xorb
cmp
subl
sub
mulb
test
dec
test
mov
sub
mov
and
push
adc
and
pusha
push
sbb
inc
adcb
pslld
pop
mov
in
jmp
push
pop
shrl
mov
mov
lahf
std
jg
cmp
pop
and
and
ja
xchg
jp
adc
mov
fs
add
push
lret
and
push
gs
mov
mov
xor
adcl
in
and
add
mov
in
inc
inc
aam
fists
lret
leave
add
mov
ret
pop
push
out
aas
jnp
imul
push
ss
sub
mov
repz
lock
arpl
lret
xor
clc
daa
xchg
insb
inc
pop
icebp
aam
fwait
test
sbb
inc
rcl
mov
cld
xor
cmp
jno
int3
addl
incb
std
loopne
xor
gs
jb
test
int3
cmp
and
and
dec
nop
inc
and
imul
xor
ss
lods
decb
pop
cwtl
inc
mov
or
mull
xchg
jl
xor
dec
leave
daa
jae
jbe
pop
lsl
push
test
cwtd
inc
out
out
out
inc
jecxz
push
xchg
fbstp
lahf
fucomp
xchg
clc
out
insb
adc
xor
mov
or
xchg
dec
xchg
inc
push
call
push
cmc
insl
inc
cld
mov
movsb
mov
ss
pop
mov
aas
cmpsb
out
lcall
xor
insl
mov
sbb
cmpsb
mov
and
push
inc
pop
addr16
outsb
lods
lcall
jnp
stc
cmp
hlt
adc
xchg
fbld
mov
xchg
or
iret
mov
adc
adc
imul
mov
fidivrs
dec
dec
mov
cmpsl
lock
lods
inc
movsl
push
cmpb
sub
jno
cmp
jae
leave
leave
mov
in
movsb
push
es
mov
imul
loop
push
stc
mov
cmp
add
icebp
sti
aas
stos
and
fwait
int3
sub
test
imul
dec
les
add
popf
dec
pop
hlt
mov
jne
push
dec
or
sub
mov
cmp
inc
inc
jge
and
jbe
call
test
call
fadds
ja
push
mov
xor
sbbl
stos
and
mov
fsubrs
mov
xchg
mov
cmp
test
mov
and
jmp
pop
mov
xchg
pusha
aad
call
jo
cli
lret
add
add
or
push
loopne
and
out
pop
mov
jnp
notl
sahf
push
sbb
fiadds
jge
lds
in
xor
ret
dec
add
mov
xor
sbb
push
fcmovbe
mov
negb
jae
daa
xchg
sub
cmpsb
xor
in
loop
or
clc
cmp
sub
mov
push
cmp
aam
testb
xchg
mov
negb
sti
ja
in
out
push
push
inc
rcll
jae
testl
mov
popf
or
insl
out
push
jp
lcall
sub
mov
xchg
pop
sbb
pop
push
in
jne
xchg
hlt
adc
mov
movsl
inc
dec
nop
add
push
iret
cs
sub
mov
xchg
std
mov
push
stos
into
aam
bound
push
into
mov
pop
mov
push
nop
sbb
dec
xchg
sub
sahf
xlat
xchg
imul
js
jbe
pop
dec
enter
add
jle
mov
push
clc
movsl
or
mov
cmp
sub
add
and
sub
mov
lahf
sbb
in
add
inc
adc
arpl
mov
adc
pusha
jge
js
inc
adc
xchg
in
mov
fs
ss
lods
sahf
stos
sarl
jae
sbb
js
testb
or
into
ret
mov
and
imul
jns
add
sub
adc
add
or
cwtl
hlt
xor
jg
test
cwtl
dec
rcrb
imul
js
in
dec
fstpl
jbe
cmp
add
pop
or
out
int
jmp
xlat
roll
or
enter
cvtps2pi
pushf
rcrl
ret
leave
leave
ret
jnp
inc
cmp
lcall
rorl
leave
negb
jns
xchg
add
sbb
adc
mov
aam
jp
jmp
xchg
sub
lods
ret
xchg
leave
add
daa
sub
mov
sbb
push
add
mov
mov
cmp
clc
mov
test
sub
ret
es
test
push
mov
lret
xchg
mov
push
stos
sub
repnz
or
and
ret
adc
insb
fisttpl
mov
lods
jle,pt
push
les
add
call
mov
xor
lahf
fstps
stos
cwtl
jnp
ja
cmp
mov
jns
dec
ret
push
int3
push
ljmp
insb
dec
inc
and
mov
inc
pop
sbb
unpcklps
sbb
addr16
repz
in
ficompl
sub
aam
mov
repz
icebp
xor
movsl
pop
inc
sbb
add
lods
and
push
ret
cmpsb
xor
das
aam
test
out
sahf
pop
mov
sub
movsb
sub
data16
roll
sub
shrb
or
imul
daa
lock
xor
mov
sbb
mov
jge
mov
bound
pushf
dec
dec
inc
pushf
inc
movsl
xor
sarb
popa
inc
sub
std
xor
fimuls
dec
mov
rorl
mov
std
mov
dec
xor
adc
ret
push
mov
aad
dec
mov
xchg
aam
loop
cmp
in
mov
popf
xor
ficomps
mov
repz
int
fs
iret
push
adc
in
sub
ret
das
pop
cmp
mov
mov
push
data16
mov
push
or
fsubl
pusha
mov
test
mull
cmp
imull
cwtl
std
enter
cld
ss
stos
adc
mov
aaa
cmp
cmpsb
sbb
inc
dec
in
sub
addr16
out
mov
out
out
cmp
add
jp
cli
mov
add
mov
push
pop
ljmp
jmp
mov
push
ljmp
imul
xchg
outsb
fsubrs
fucom
or
in
add
repz
xor
sbb
movntq
roll
xor
lret
mov
pop
add
mov
fs
fisubs
cmc
add
leave
rclb
cmp
sbb
stos
jae
xchg
inc
jp
jns
inc
pusha
shl
add
or
lods
jl
sub
in
cmp
mov
fcomps
sub
out
sbb
imul
fnstenv
enter
out
cmpsb
jl
mov
pop
sbb
repnz
ljmp
loopne
lret
add
js
cli
mov
jb
int
sub
popa
pop
mov
out
dec
adc
adc
popf
addr16
mov
mov
inc
xchg
dec
dec
cld
loop,pn
repz
stc
dec
fisttpl
cmp
push
in
inc
and
add
hlt
popa
mov
std
sbb
ret
and
dec
mov
pop
mov
xchg
es
and
pop
cld
mov
adc
xor
out
dec
cmp
inc
add
xor
inc
hlt
lret
fistps
mov
pusha
mov
fisttpll
sub
pop
enter
lea
ljmp
nop
jecxz
icebp
std
or
mov
pop
loopne
xlat
ret
jecxz
jl
inc
gs
testb
stc
pop
pop
cmpsl
fadds
mov
dec
xchg
test
rolb
add
es
jb
lds
arpl
push
xor
idivb
shlb
push
jle
jecxz
out
leave
sbb
pop
aam
add
mov
pop
xor
add
jne
jg
jp
cli
push
or
push
jae
or
xor
push
dec
mov
enter
cli
lahf
push
jp
into
orb
dec
in
cmp
in
push
imul
cld
xchg
cwtl
mov
xchg
cmp
or
ficompl
jge
xchg
das
or
repnz
pop
jmp
sub
les
scas
cmp
fmul
push
pop
mov
lahf
or
scas
rol
mov
jp
fwait
icebp
leave
inc
sti
dec
loop
frstor
fwait
pop
xor
xor
inc
sub
sbb
bound
mov
sub
mov
cmp
fwait
dec
insb
cmp
divb
cmp
dec
insl
fdivl
in
movsl
lods
mov
inc
aas
lcall
push
xor
and
cmpsb
sahf
iret
pop
sub
lock
adc
dec
mov
cmp
and
dec
aaa
push
xchg
add
xor
out
loopne
inc
outsl
test
test
ss
in
add
fcmovu
mov
push
sahf
sbb
aas
xchg
leave
mov
push
out
mov
jge
fwait
mov
icebp
xchg
pop
push
sbb
add
push
rclb
das
int
or
adc
push
mov
push
push
clc
adc
enter
in
mov
pop
dec
pushf
mov
jl
js
rorb
outsb
pop
mov
push
and
ffree
in
pop
jp
push
scas
mov
cs
inc
pcmpeqb
call
lcall
rcrl
add
mov
inc
mov
mov
jne
xor
hlt
in
les
in
in
push
mov
add
mov
je
inc
push
mov
or
cmp
jecxz
mov
sbb
les
mov
out
inc
xchg
jmp
cld
addr16
lcall
adc
psllq
pop
push
jge
sbb
mov
mov
cmp
jle
insb
mov
adc
pop
sub
mov
js
dec
dec
add
je
inc
out
cmp
or
jp
adc
push
sbb
loope
pushf
test
icebp
popf
dec
jae
xchg
shlb
cmp
push
ss
popa
dec
xchg
or
mov
push
sbb
xchg
adc
nop
jl
mov
inc
push
adc
cmp
outsb
push
popf
cmp
scas
jns
mov
dec
in
or
shlb
cmpsb
mov
pusha
sub
sbb
pop
xchg
pop
mov
push
push
lcall
jae
xor
cmc
cmp
mov
inc
icebp
shrl
std
lods
leave
push
in
dec
mov
or
dec
lds
stos
sets
icebp
sar
sbb
stc
daa
sbb
dec
dec
jbe
cmp
and
sbb
outsl
mov
and
xlat
xlat
xor
rcrl
mov
and
sbb
fcomp
mov
xchg
daa
jns
xchg
stos
movsl
sub
xchg
pop
push
in
addr16
int
popa
in
ss
cmc
loopne
mov
daa
dec
stos
cwtl
ds
insl
sub
mov
xor
sbb
sti
dec
jns
sti
aas
leave
push
jno
sbb
jbe
dec
cmpsb
pop
add
cmp
sub
cli
and
sbb
or
and
mov
call
out
mov
push
xor
movsb
ds
mov
lock
mov
mov
and
lret
xchg
add
xlat
xchg
stos
and
addl
or
mov
cmp
imul
dec
xchg
dec
in
andl
mov
aaa
int3
push
mov
adc
cwtl
dec
fwait
push
insb
aam
sbb
add
hlt
xchg
fucomp
sbb
adc
in
cli
jno
aaa
lds
in
in
jne
es
stos
inc
fmull
push
xchg
in
daa
or
outsb
call
dec
hlt
push
push
xchg
cpuid
lock
inc
stos
mov
jge
inc
fwait
lods
iret
xchg
call
popa
cwtl
test
or
dec
push
xchg
sub
xchg
push
xor
mov
mov
into
es
aaa
dec
into
icebp
fstl
arpl
mov
push
outsl
or
jbe
cwtl
test
xchg
or
mov
cli
mov
push
lahf
rcr
pop
or
leave
mov
add
int3
sub
mov
dec
cmpsb
les
jl
sbbb
xchg
stc
mov
inc
jne,pn
or
xchg
mov
ret
push
mov
dec
mov
push
pop
cmpsl
adc
cmp
enter
mov
add
sahf
push
push
jb
add
pop
leave
or
scas
mov
fld
fbld
xchg
loopne
mov
sbb
repz
das
or
nop
push
movb
sub
mov
push
dec
mov
into
sub
in
lods
enter
pushf
roll
sarb
sahf
push
or
imul
inc
pop
push
insb
into
fstpt
mov
call
out
test
mov
dec
std
push
mov
sub
mov
sarb
call
fcmovnb
xchg
jae
outsl
in
sbb
cmp
movsl
or
pop
sub
outsl
test
adc
push
jnp
insb
arpl
sbb
mov
pusha
test
stc
xor
popa
std
and
jmp
add
cmpl
fnsave
dec
ret
push
dec
or
pop
aaa
aas
dec
or
fists
inc
aas
fwait
jmp
pop
mov
jne
push
scas
or
pusha
jnp
push
scas
sbb
mov
ret
ret
outsl
test
imul
cltd
insb
es
mov
jnp
test
data16
cli
cmp
inc
incl
ror
mov
int
xorb
jecxz
lea
jae
mov
sub
ret
aam
iret
lods
inc
fmuls
scas
push
andl
jno
scas
mov
in
lret
cmp
mov
xchg
test
int3
and
mov
out
call
sbb
inc
and
inc
push
fisttpl
jl
movsb
rcl
lods
enter
jp
xchg
icebp
gs
mov
push
jns
lahf
cmp
or
and
xchg
jg
push
nop
or
jle
add
jp
add
aaa
mov
iret
cmp
pop
xchg
jecxz
repnz
dec
add
in
in
iret
cltd
mov
sbb
das
jo
or
cmp
aam
adc
arpl
ret
inc
in
scas
push
in
push
pop
mov
push
mov
mov
in
cwtl
or
mov
mov
pop
mov
push
rclb
leave
sbbb
loop
jae
shrb
jcxz
les
lahf
and
stos
xor
jbe
mov
cmp
imul
cmp
mov
stc
adcl
mull
rcll
movsl
jae
sbbl
fwait
inc
mov
cli
ljmp
orb
out
test
jne
in
mov
pop
jne
es
and
jp
sub
pop
mov
shl
dec
les
subb
imul
pop
pop
add
ja
mov
push
push
mov
cwtl
add
pusha
ja
xchg
sbb
push
push
bound
rolb
cmpsl
and
pop
dec
dec
testb
pushf
xor
out
xchg
mov
mov
pop
lahf
bound
adc
push
sbb
inc
je
and
mov
push
inc
cmp
mov
or
mov
test
jae
sbb
fcmovnb
mov
insb
sbb
mov
push
mov
fcmovnb
mov
mov
pop
pusha
cli
aam
rorl
mov
cmpsb
lahf
lea
sahf
mov
inc
push
jge
jb
pop
ret
mov
sbb
out
or
pop
pop
xlat
mov
mov
aas
cmpsl
or
aas
stos
mov
sbb
shr
xchg
push
dec
daa
out
test
add
hlt
jl
or
inc
or
das
xlat
mov
xchg
fwait
sbb
add
push
and
pop
and
jbe
inc
pop
out
ds
aad
mov
fidivl
adc
arpl
cmpsl
lret
test
loopne
dec
push
call
mov
dec
int
lock
xor
inc
clc
int
and
insl
cltd
mov
arpl
popf
nop
bnd
xor
mov
inc
ss
fs
sarb
sarb
in
push
xchg
or
out
test
fdivrp
into
adc
adc
sbb
push
clc
push
inc
mov
xor
adc
jmp
dec
jbe
inc
sub
pop
cltd
add
xor
xchg
outsl
mov
cmp
cmpsl
xchg
cmpl
sub
lds
sub
orl
add
mov
pop
fldt
negl
and
pop
jo
lods
mov
mov
int
inc
test
xchg
out
pop
lcall
cmp
mov
arpl
lret
adc
and
inc
loope
mov
aam
fiaddl
mov
insl
mov
jae
pushw
xchg
jns
sbb
dec
cs
call
cs
test
negl
rclb
cmp
es
aas
cwtl
mov
push
pop
pop
imul
xor
adc
call
mov
push
xchg
and
scas
and
mov
ret
lods
rcrl
inc
movsb
cmp
sub
push
scas
aaa
dec
test
lahf
add
pop
xor
rolb
lock
adc
sbb
dec
sbb
inc
out
fnsave
dec
aam
jle
xor
sbb
loopne
or
ljmp
daa
hlt
and
imul
dec
pop
lret
test
and
inc
mov
mov
in
movsb
push
dec
push
outsl
jp
inc
push
dec
dec
enter
cmp
hlt
int
mov
xorl
pop
sahf
pop
stc
outsb
js
mov
xor
jecxz
imull
fucomi
mov
mov
sbb
stc
adcl
je
mov
cmp
cmp
mov
aad
mov
mov
pop
out
adc
mov
arpl
sbb
std
inc
js
mov
jns
xor
repnz
cld
cmc
into
push
fcoml
rcl
or
je
push
divl
outsl
je
push
rcrb
dec
jns
cmp
mov
movl
push
js
cs
push
mov
ret
xchg
rorb
dec
js
dec
pop
lea
into
repz
and
cld
push
or
rolb
cs
sub
mov
xlat
lret
dec
lret
jbe
pop
add
aam
popa
adc
bound
dec
mov
stc
push
jmp
mov
repnz
adc
or
sarl
push
lret
dec
cmp
flds
mov
es
lods
paddd
les
mov
and
push
test
jmp
mov
lea
pop
sbb
push
inc
frstor
in
lcall
insl
xchg
sub
pop
addr16
nop
popf
mov
xor
mov
mov
addr16
into
cmc
fdivrl
push
sub
int3
jae
aas
pushf
inc
jo
inc
insl
cmpsl
pop
jecxz
mov
push
mov
cmpsb
fwait
orl
sarl
dec
pop
push
ret
in
mov
push
lcall
pop
xor
dec
push
inc
out
inc
xchg
pop
fcmovbe
ja
mov
inc
and
rclb
rcrl
sahf
jmp
out
pop
popf
mov
repz
push
cmp
inc
cli
fnstsw
pop
iret
subb
add
lcall
jae
push
into
mov
jp
mov
ret
xor
in
int3
inc
pusha
mov
mov
fldl
jmp
xchg
xor
add
add
cs
test
clc
mov
jl
jmp
loop
lds
inc
pop
and
cmp
sbb
rorl
inc
pusha
cmp
jecxz
shr
adc
pop
mov
fcoml
std
jno
adc
jl
cmp
add
lret
nop
push
lea
enter
or
test
andl
bound
idivb
rorl
push
xchg
jmp
pop
rcrl
or
out
fiaddl
xor
adc
lea
mov
add
fdivrs
outsb
fwait
adc
cmp
int
imul
xchg
xchg
sub
test
and
mov
in
mov
sub
cmpsb
cmp
scas
pusha
jmp
std
mov
push
nop
lods
push
xor
insl
sahf
jg
mov
loope
adc
jle
push
pop
push
push
jne
sbb
jnp
inc
inc
das
icebp
rorb
and
xchg
repz
scas
xor
cwtl
cwtl
aaa
punpcklwd
or
dec
test
sbbl
push
popf
dec
or
scas
nop
fldt
adc
sbb
seta
movsl
push
and
cltd
lret
jmp
loope
popf
xor
aas
out
loope
xchg
push
add
mov
pop
mov
cli
xchg
mov
outsl
push
pop
dec
pushf
out
dec
push
mov
mov
jge
push
add
add
addl
xor
jecxz
jle
jb
aam
mov
xchg
jle
out
sbb
bound
aaa
pop
ljmp
fs
sbb
push
jg
mull
dec
ret
fists
jp
stos
adc
enter
std
mov
inc
mov
add
les
pushf
pop
shl
jl
insb
mov
mov
stos
mov
fdivrl
cwtl
and
cs
xor
fsubs
inc
mov
fwait
mov
sub
cmp
test
sbb
pop
pop
push
and
icebp
and
in
lahf
adc
jle
roll
adc
js
mov
mov
and
jae
insl
mov
jnp
push
mov
in
add
pushf
out
int
push
adc
push
outsb
movsb
aam
lret
cmp
in
js
mov
adc
rcl
pop
cmp
sub
daa
fwait
jo
push
test
push
xor
pop
and
divps
popf
dec
aam
rclb
das
dec
or
mov
mov
and
lea
and
ljmp
arpl
cmpsb
rcr
sbb
jmp
push
dec
roll
xlat
pop
pusha
dec
cmp
mov
mov
xor
mov
dec
cld
nop
fdivl
dec
sbb
jnp
int3
in
in
stos
xor
jg
push
dec
mov
test
js
push
frstor
sub
mov
or
mov
mov
mov
or
outsb
rcll
cmp
cmp
aaa
mov
pushf
push
adc
fstps
mov
and
frstor
lahf
imull
dec
fldenv
mov
mov
lcall
cmp
loope
xchg
stos
jp
stos
mov
enter
pop
mov
xor
pop
les
das
out
pop
arpl
cmp
fimuls
pop
testl
jbe
pushf
adc
jecxz
ljmp
dec
or
pop
addb
inc
imul
loope
add
and
or
mov
mov
pop
inc
ljmp
in
incb
imul
or
mov
xor
call
mov
aam
enter
cmc
xchg
xchg
mov
pop
push
and
jg
mov
pop
mov
mov
add
adc
push
dec
psubb
repz
mov
fiaddl
inc
fdivs
adc
push
popa
pop
in
pop
xor
cmp
fsubp
lret
cmp
in
cmpsb
sub
cmpsl
ja
pushf
and
test
jecxz
and
jle
sahf
xor
mov
sub
add
fwait
pushf
mov
mov
mov
mov
stos
shlb
dec
enter
xor
loopne
inc
or
pop
popf
push
pop
cmp
fdivl
push
into
scas
insl
adc
push
lods
push
mov
imulb
mov
xor
inc
insb
mov
push
addr16
jge
in
pop
mov
aam
repz
pop
roll
sub
sub
lcall
inc
adc
movsl
bound
cmp
add
mov
fidivrs
into
jecxz
push
push
or
dec
insl
call
je
repz
jecxz
scas
mov
es
adc
test
call
repnz
mov
comiss
mov
pop
mov
les
xchg
icebp
mov
inc
push
out
outsb
jle
xor
lret
dec
xchg
add
fs
std
mov
fstp
imul
sub
push
stos
repnz
mov
stos
and
adc
xor
clc
mov
add
aad
movsl
or
inc
add
cld
inc
mov
mov
mov
and
or
in
dec
xchg
and
push
rolb
out
mov
movsl
je
xor
lcall
inc
inc
aaa
test
pop
inc
mov
out
adcl
jb
dec
out
and
lahf
cld
dec
jne
mov
decb
adc
shrl
inc
sub
daa
mov
je
mov
into
or
and
push
cmp
mov
insl
and
repz
rcll
shrb
jle
hlt
dec
cmp
jecxz
out
in
scas
dec
add
lock
ja
mov
and
mov
xchg
cmpsb
jns
sub
enter
mov
int3
test
pop
mov
stos
cmp
aas
mov
xchg
jmp
sub
mov
out
push
adc
and
ret
jne
stos
ret
inc
mov
orps
scas
popa
shrb
insl
hlt
sub
clc
jecxz
sti
lock
stos
sbb
fimull
dec
sbb
mov
xchg
sarl
mov
xor
bound
mov
daa
in
in
mov
mov
sbb
scas
pop
shll
push
cmp
divl
dec
xor
aaa
and
jno
xor
fldl
jg
outsb
and
lock
int3
daa
mov
nop
xor
daa
push
and
cmp
pop
mov
out
ja
scas
jbe
aas
mov
addl
pop
pop
movsb
sub
jmp
out
and
imul
push
push
inc
rorl
aas
xor
repnz
gs
daa
mov
ds
aad
es
popa
adc
inc
jg
push
test
sub
ja
mull
sub
jle
out
and
inc
loope
dec
or
and
pop
push
fs
cpuid
call
jecxz
xchg
adc
icebp
pop
cmp
mov
mov
iret
fisttpll
flds
ja
pop
jecxz
xor
xchg
pusha
repnz
popl
das
adc
push
mov
xor
movsl
and
outsl
mov
adc
dec
out
add
pop
pop
xadd
sbbb
mull
push
mov
cmp
pusha
shrb
js
mov
daa
cmp
and
inc
adc
sub
iret
sbb
dec
shlb
or
in
jg
fadd
pop
xor
push
jge
jae
xorl
lahf
sub
mov
cmp
mov
xchg
mov
mov
repz
mov
outsl
mov
mov
and
lods
and
mov
stos
pop
shrl
jle
jle
ficompl
push
mov
add
lods
cmp
xor
icebp
je
ds
ret
cmp
out
fs
cmc
ds
nop
sbb
rcrb
comiss
xchg
scas
test
xor
jae
mov
inc
test
jbe
imul
jb
inc
rorb
dec
push
das
sahf
push
lcall
cmc
cltd
add
mov
and
xchg
pop
push
imul
addr16
xchg
cmp
jb
gs
rorl
inc
mov
aad
lea
jne
inc
mov
popf
jno
in
jle
out
ret
xor
ficompl
pop
add
cmc
push
mov
xchg
arpl
push
pop
in
add
adc
test
fsubl
xor
jle
cmp
into
dec
aas
stc
popf
dec
mov
fs
pop
xor
add
je
clc
cs
push
mov
insb
fstp
pop
lods
mov
cmp
sbb
pop
or
xor
add
dec
sub
je
scas
mov
mov
daa
mov
mov
pushf
nop
mov
std
test
ss
mov
or
in
jnp
push
dec
mov
dec
test
inc
loop
cmp
movsb
push
jo
cmpsl
popa
pop
pushf
sub
mov
sahf
mov
fistpll
and
iret
jae
lods
cwtl
xor
dec
sarb
cmp
shrb
mov
cld
orb
repnz
out
mov
and
xor
outsb
push
frstor
stos
or
addb
mov
enter
cmpsb
mov
xchg
dec
test
pushf
lahf
iret
idivl
sbb
pusha
pushf
xchg
in
insl
xchg
mov
jmp
jmp
xchg
push
dec
addl
inc
testb
test
rorl
test
test
mov
stos
jns
nop
or
lods
ret
sub
mov
dec
or
fimull
insb
adc
gs
cltd
pop
dec
jg
out
int3
push
sbb
add
add
xchg
loop
pop
scas
stc
fisttps
fisttps
mov
mov
into
cs
fwait
jne
add
dec
ret
mov
pop
sub
jmp
sub
fistpl
packuswb
loop
cmc
mov
icebp
sub
jb
in
js
dec
mov
jae
sub
ret
outsl
arpl
dec
push
pop
inc
dec
out
dec
inc
mov
lods
inc
cmp
push
and
shl
push
sbb
jno
cmp
jnp
fs
push
jmp
inc
out
sub
dec
or
jge
or
out
outsb
inc
push
pop
clc
jmp
xchg
hlt
sub
push
in
xor
int
ret
clc
or
add
fwait
jp
jg
testl
adcl
cmpsb
push
or
xor
jo
repz
jbe
test
cmpsl
lret
ret
lret
shrb
arpl
sarb
hlt
cmp
mov
subb
repnz
leave
ljmp
and
daa
inc
test
iret
rcrl
or
ds
add
mov
push
in
in
cld
out
inc
cmp
imul
aas
sub
xchg
push
pop
inc
aaa
aam
jmp
ja
adcl
sbb
into
add
mov
pusha
push
xchg
push
add
es
mov
xchg
pop
lods
cs
aas
jge
pop
or
loope
subb
or
sbb
cmpsb
ret
std
mov
push
xlat
inc
shrb
jae
das
aas
mov
stos
ja
xchg
lret
inc
jp
lret
dec
mov
out
lcall
fs
lret
push
imul
lds
jg
mov
movsl
or
xchg
sbb
mov
push
mov
lcall
call
xchg
call
into
fwait
sbb
test
dec
mov
sub
bound
mov
insl
mov
push
shrl
mov
cs
leavew
push
test
mov
adc
inc
pusha
push
mov
sbb
mov
cmp
movsl
inc
xor
adc
popa
pop
enter
inc
push
pop
sti
hlt
call
xchg
insl
and
push
sahf
jns
insl
aaa
cli
fistpll
roll
pop
pop
jns
stc
xchg
sti
das
xor
es
inc
sbb
jae
mov
xor
xor
mov
add
aad
add
cmp
pusha
stc
jmp
clc
push
mov
sbb
fs
xor
xor
mov
fcmovb
daa
push
paddusw
pop
pop
fcoms
cmp
lods
adc
sti
sub
jmp
and
inc
mov
or
lahf
and
mov
cmp
push
fistps
cmp
clc
aas
lods
xor
loop
pop
cs
aaa
int
sub
outsb
mov
fstpt
jne
jo
lds
stos
pop
lods
aas
lret
popf
jecxz
lods
cltd
outsl
xchg
pop
mov
dec
inc
mov
orl
ja
add
sahf
loop
mov
and
xchg
fistpll
popf
int3
push
sbb
add
insb
mov
ret
stos
dec
faddl
jo
sub
xor
xchg
lock
hlt
data16
adc
movsl
inc
out
outsb
pop
sub
test
push
ss
push
es
pop
clc
insl
jo
insl
jge
inc
mov
xchg
mov
stos
cmp
dec
jge
sub
and
mov
mov
or
xor
inc
in
outsl
xor
inc
xchg
mov
mov
arpl
into
ret
adc
add
adc
daa
cmpsb
or
xchg
imulb
in
and
rcll
jg
inc
cmc
adc
das
jmp
and
inc
jg
push
cmp
and
ds
bound
in
push
xchg
lcall
sub
imul
jge
popf
ret
inc
test
fdiv
in
add
dec
push
mov
inc
dec
movsl
jb
dec
shr
cs
or
nop
repz
mov
inc
pop
mov
cmp
mov
out
inc
pop
leave
sarb
addr16
test
dec
dec
js
mov
pop
outsl
push
adcb
add
scas
test
loop
and
dec
mov
push
push
jecxz
add
push
jo
insb
jecxz
sub
add
push
jbe
mov
fs
push
jle
jb
xlat
bound
adc
push
std
jns
adcb
aam
mov
mov
xlat
jns
loop
pop
mov
adc
dec
pusha
out
cld
std
jg
enter
mov
mov
scas
xchg
xor
pusha
mov
addr16
cltd
jnp
sub
imul
popa
shlb
cmp
out
inc
sbb
lea
xor
fxtract
dec
lds
mov
daa
je
sbb
into
jbe
stos
testb
fadds
fwait
jb
mov
fsub
pop
cmp
ret
mov
loop
fildll
push
mov
dec
test
mov
cmpsl
jo
sbb
sub
lock
in
addr16
scas
mov
dec
jnp
sub
jno
fistl
or
sbb
pop
movsl
jb
pop
dec
sub
cmp
leave
popf
and
sbb
and
and
fildll
pushf
rclb
push
inc
movsb
in
aas
push
mov
xor
xchg
mov
pop
and
dec
dec
push
push
je
movsb
ljmp
xchg
mov
notb
pop
lods
and
jns
fdivrs
out
nop
shr
inc
int
loop,pt
rcll
mov
lea
pusha
push
jae
jns
jmp
sbb
mov
insb
cmpsl
lahf
pop
cmpsb
testl
rcrb
pop
fwait
and
mov
pop
pop
dec
aaa
mov
inc
ja
ret
adc
adc
cmpsb
loopne
mov
mov
iret
mov
cmp
mov
add
sbb
push
push
or
pop
mov
sub
or
xchg
push
mov
add
cs
pop
add
add
pop
cmc
cmp
mov
dec
rclb
scas
xchg
push
push
nop
sbb
xchg
dec
imul
es
gs
sbb
les
icebp
mov
sub
shrb
js
test
jae
or
fmull
movsb
in
jg
dec
test
fdivp
test
gs
cwtl
xor
inc
xor
add
rcrb
mov
mov
push
jp
push
insb
cmpsl
test
xor
adc
fs
and
pop
fnstcw
push
insl
cmp
pop
and
fisttpl
scas
aas
push
pushl
jnp
out
loop
data16
arpl
rol
jmp
sub
add
jno
xchg
xchg
or
push
mov
push
cmp
jbe
dec
sbb
xchg
add
mov
jle
mov
jb
cmp
mov
shrl
cmpsb
pushf
rcll
stos
push
std
arpl
insl
mov
xor
push
dec
insb
imul
xchg
fldcw
inc
fcoml
and
rcr
jmp
xchg
add
bound
jne
test
lret
jo
sbb
cmp
jo
sub
mov
inc
sub
pop
fidivs
cmpsb
xor
inc
fdivrs
xchg
push
outsb
shrl
push
mov
ljmp
add
jecxz
mov
jno
loop
fldl
aad
lahf
in
push
sbb
sahf
inc
lock
mov
sub
lods
cmp
clc
mov
ljmp
iret
fxch
push
hlt
add
inc
ret
fmuls
test
into
jns
lock
xor
mov
or
add
xchg
test
mov
lahf
xor
stos
sub
mulb
test
mov
mov
std
mov
pushf
mov
push
mov
add
fsubr
dec
fldl
sub
xchg
jmp
rclb
shl
stos
lock
jae
sub
xlat
leave
mov
lea
push
add
mov
jo
popa
add
jmp
adc
lret
push
cmpsl
xlat
rolb
inc
loop
call
add
and
dec
in
pop
outsl
cmp
stos
fcmovnbe
call
jmp
or
pusha
or
mov
sbb
jmp
mov
jmp
and
arpl
mov
ds
gs
xchg
mov
ljmp
in
jbe
lea
ja
push
mov
ds
xchg
add
push
sbb
cs
sub
sub
cmc
xchg
lcall
inc
cmpsb
pop
nop
dec
daa
sbb
shll
dec
xchg
lahf
and
fcomps
bound
pop
aam
or
orb
out
xchg
fsubp
xor
or
sahf
ja
cmp
push
push
movsl
xor
shll
jns
loopne
out
xor
or
mov
outsb
pop
adc
aas
ret
or
into
aas
popa
int
and
xor
sahf
inc
adc
dec
jge
inc
out
mov
bound
pop
xchg
les
lahf
pop
inc
sbb
adc
pop
mov
js
cmp
jo
in
int3
jl
insl
jo
sahf
sbb
test
lcall
sbb
cmp
imul
inc
jae
adc
pusha
pop
js
incb
push
dec
out
dec
mov
jp
inc
sub
insl
rcrb
mov
add
push
jb
imul
inc
mov
ja
xchg
mov
gs
adc
fldl
pusha
jmp
loope
jno
inc
push
cmpsl
pop
sbb
inc
icebp
mov
mov
lahf
dec
sub
ja
retw
mov
sti
mov
adc
fsts
push
push
test
sub
fwait
mov
daa
dec
pop
adc
mov
scas
xchg
pop
sbbl
std
rclb
or
cmpsb
call
out
push
gs
pop
or
call
mov
lahf
out
orl
daa
call
lret
adc
inc
lods
sbb
sbb
mov
mov
mov
xchg
imul
outsb
test
imul
test
inc
imul
push
mov
scas
xchg
arpl
dec
adc
arpl
cld
and
in
push
pop
loopne
xchg
sub
lods
test
lds
bound
lods
inc
repz
idivb
mov
mov
cwtl
out
push
lret
lods
jecxz
or
repnz
lds
in
in
xchg
mov
push
clc
mov
or
cld
rcrl
mov
sbb
mov
add
test
pop
movsl
je
lahf
ss
cmp
inc
lods
mov
and
or
or
jb
dec
insb
xor
repz
push
sub
jp
insb
repnz
test
js
pusha
aam
cmp
mov
xchg
out
mov
lods
jp
jecxz
pop
inc
ss
push
adc
fldpi
aas
fstl
xor
sbb
fimuls
cs
dec
pushl
andl
test
aas
cmp
out
ret
jmp
jge
mov
inc
mov
xchg
int3
scas
ljmp
out
or
xchg
jno
xchg
and
sarb
push
xchg
negl
adcl
pop
xlat
into
bnd
add
xchg
sbb
mov
jecxz,pn
or
mov
lret
repz
pop
xchg
mov
pop
shll
aas
xor
jb
xchg
out
inc
pop
ucomiss
mov
dec
mov
outsb
sub
cmpsl
adc
movsb
sub
mov
dec
leave
mov
inc
jg
sarl
push
pop
rcll
xor
adc
ljmp
loopne
int3
pop
idivb
ret
lods
int
jg
mov
lea
imul
lea
mov
js
mov
sbb
xchg
out
out
sub
mov
jns
inc
shlb
es
mov
cli
out
data16
imul
imul
mov
lret
mov
add
and
orb
lret
mov
push
xor
repnz
pusha
mov
stos
sub
loope
cmpsl
xchg
mov
repnz
int3
inc
sbb
leave
jnp
addl
test
sti
rolb
lcall
into
jl
fisubl
push
mov
adc
test
jno
add
mov
shl
mov
rolb
cmc
dec
je
push
mov
aam
inc
cli
outsb
lods
sahf
cmp
cmpsl
sub
xchg
xchg
iret
out
fisubrs
lcall
cmp
cli
mov
lahf
xchg
out
mov
test
inc
pop
imul
je
fwait
stc
cld
or
shll
data16
scas
jne
xchg
pop
mov
cs
dec
insb
out
stos
in
jae
scas
movsb
or
inc
in
scas
out
cs
sbb
mov
or
mov
sub
pop
jg
push
insb
les
mov
sbb
popf
sarl
fsubrs
sbbl
aaa
add
leave
add
lahf
call
clc
pop
fsubl
adc
mov
sub
loope
jno
pushf
inc
add
inc
popf
in
xchg
jne
lods
xchg
sub
fnstcw
scas
cwtl
xchg
xor
jmp
xlat
pop
je
mov
push
mov
and
lds
xor
scas
ss
scas
orb
and
test
inc
data16
adc
pslld
mov
jmp
mov
testl
mov
jno
jecxz
sahf
ljmp
adc
ja
add
adc
test
sarl
and
lds
or
fdivrs
mov
push
outsb
mov
ljmp
xchg
aam
jns
xchg
pusha
lret
test
sbb
imul
ret
int3
in
and
pop
daa
popf
jns
testb
jno
ret
push
jg
xchg
nop
stos
push
mov
and
fwait
xor
stos
movsl
lcall
push
mov
jp
add
repnz
mov
cmp
les
mov
cmp
sti
push
shlb
jae
lds
in
cmp
inc
jecxz
divb
ljmp
outsb
test
rcrl
fs
mov
lea
push
cmp
xor
cmp
enter
cmpsl
cmp
cmp
and
test
ss
sti
faddp
push
dec
dec
push
sti
fcomi
adc
jecxz
ret
inc
arpl
arpl
leave
test
movsl
das
cltd
pop
cmp
xchg
add
fldenv
ret
jecxz
divl
push
mov
call
cwtl
icebp
jecxz
jl
pop
xchg
lret
mov
das
divb
xchg
aad
xchg
loopne
push
dec
adc
mov
ret
test
xlat
mov
sti
ss
cltd
out
sti
add
out
popa
and
out
in
into
jnp
in
dec
repz
lret
push
mov
sub
lret
jne
dec
xor
dec
testb
sbb
shlb
mov
in
repnz
ljmp
movsb
xor
xlat
clc
jae
mov
inc
fsubrs
rcr
xchg
adc
jmp
fwait
cld
mov
and
aas
jmp
mov
pop
insl
and
mov
cli
cmc
jno
mov
aaa
scas
jp
fistpl
das
inc
pusha
in
sub
cwtl
push
gs
xchg
js
pop
fs
jg
loop
in
inc
sbb
dec
push
shrl
mov
pop
js
inc
popf
lods
mov
lods
jno
fistps
push
mov
adc
xchg
outsb
mov
sbb
dec
movsl
jns
xorb
sti
and
cli
dec
pop
and
xor
xor
push
popa
das
stos
fmull
dec
nop
or
fsubrs
pop
sub
mov
and
divl
xchg
insl
rolb
push
lcall
dec
fstps
mov
sbb
xor
ja
call
xchg
daa
iret
pusha
imul
jp
aad
in
mov
inc
movsl
or
test
mov
decl
jns
stos
loopne
mov
pop
cli
mov
ret
cmp
sbb
daa
test
pop
mov
mov
mov
enter
mov
test
mov
or
sub
ljmp
xchg
fstl
and
lods
dec
add
jb
rorb
int3
loop
inc
mov
call
xchg
mov
loop
test
cmp
and
jp
pusha
imul
jp
rorb
sub
sub
in
inc
cmp
jne
mov
push
test
jecxz
call
or
push
mov
sbb
pop
xchg
es
rcll
mov
out
mov
push
nop
cmpsb
ret
ret
addr16
push
pushf
jne
sbb
rorl
negl
rcll
addr16
mov
in
pop
and
jae
ljmp
lahf
pop
shl
popf
mov
pop
mov
lret
pop
outsl
or
aas
mov
mov
fnstsw
test
jg
faddp
shll
xchg
fsubrp
jge
fidivs
jnp
je
repz
xorl
xlat
adc
dec
push
mov
adc
sub
push
mov
push
xchg
lds
lret
shrb
mov
imul
adc
jo
xor
and
xor
jl
push
test
clc
lods
cmpsl
xorb
pop
cmpl
adc
mov
and
xchg
and
mov
and
adc
inc
sub
add
stc
sti
mov
into
fucomip
int3
push
fsubl
test
nop
push
pusha
xchg
add
ss
sahf
out
aam
xor
pop
jle
and
aad
cld
inc
pusha
mov
fcompl
cmp
or
cli
cmc
gs
and
sub
in
shlb
mov
mov
mov
hlt
pop
sahf
mov
ljmp
les
stos
mov
test
cmpsb
xchg
or
aaa
mov
jbe
cmp
les
stos
push
fs
imul
sub
mov
mov
pop
imul
xchg
xor
jb
jg
mov
add
inc
in
test
lahf
sub
push
bound
popf
mov
add
sbb
testb
ror
sti
pop
mov
or
push
sub
out
insl
push
push
sbb
add
pop
push
cmp
icebp
sarb
mov
int3
jecxz
xchg
jnp
xor
scas
bound
cmp
mov
xchg
sub
mov
pop
mov
jp
mov
xchg
pop
inc
or
fmul
sbb
sti
faddp
mov
stc
and
add
or
cmpsl
out
mov
adc
add
mull
and
mov
add
adcb
inc
or
test
xchg
pop
std
movsl
loope
adc
cmpsb
sbb
frstor
aad
jmp
mov
aaa
ret
xchg
sahf
pop
fiadds
dec
xchg
sub
mov
addr16
aas
mov
scas
mov
mov
push
inc
bound
xchg
ret
leave
ja
sub
add
dec
jo
clc
xor
inc
cmpsb
scas
and
mov
push
enter
cmp
dec
cmp
lock
lcall
outsl
insb
cmp
jns
jae
jmp
lds
subb
rcr
mov
aas
mov
xchg
into
lds
sub
stos
fdivrp
inc
bound
jge
shrb
mov
add
cltd
aaa
mov
movsb
mov
iret
jecxz
push
mov
roll
add
xor
jmp
or
jg
cwtl
push
in
xchg
out
in
mov
adc
or
adc
out
sub
push
push
pop
dec
mov
idivl
cmp
ret
pop
ss
les
orl
insl
dec
pop
ret
outsl
jnp
sbb
or
adc
dec
les
aas
testl
cwtl
and
imull
xchg
pusha
data16
pop
lea
fs
and
in
cltd
loopne
push
xchg
in
inc
popa
push
push
mov
sbb
and
orb
repz
lods
and
push
outsb
lock
mov
jnp
pop
xchg
adc
std
popf
gs
lret
mov
and
pushf
lcall
jp
mov
jmp
pop
inc
int
pop
hlt
add
addl
test
stos
push
adc
xorb
xchg
lods
xor
jl
push
jns
ret
inc
ret
inc
repnz
ficoml
out
dec
cmpsb
xchg
out
xor
shlb
jmp
pop
js
pushl
push
clc
mov
push
and
popl
cltd
shll
sbb
cmp
xchg
cmpsb
cmp
and
cs
mov
mov
lock
and
test
mov
sbb
enter
lahf
inc
movsb
xchg
dec
add
outsl
sar
in
fwait
push
pop
pusha
lcall
add
mov
sub
inc
iret
out
popa
sub
out
mov
cmp
lds
imul
mov
js
fcmovnb
in
das
pop
xor
cmp
fdivrp
xor
jl
addr16
daa
pusha
lods
nop
sbb
imul
add
repnz
or
mov
repz
adc
cltd
shl
cmp
dec
jg
cltd
pop
cmp
or
ss
rcrl
loop
inc
pop
xchg
dec
pushf
sub
sbb
cld
xchg
movb
aas
jae
aaa
pop
sbb
sub
cwtl
arpl
int3
fwait
ss
icebp
mov
aam
xchg
push
add
inc
or
test
dec
adc
and
push
insl
test
shlb
xchg
jg
pop
sbb
jp
ficoml
mov
mov
pop
imul
popf
cmp
outsl
aaa
iret
mov
xor
cmpsl
out
mov
jl
inc
dec
out
sbb
mov
mov
iret
or
out
loopne
jno
and
inc
or
test
push
xor
mov
inc
cmc
pop
nop
jecxz
add
mov
sahf
repz
scas
rorb
sub
outsb
clc
outsl
test
add
jmp
mov
das
jmp
rolb
jbe
mov
jns,pt
and
xchg
and
lahf
xor
ja
mov
add
or
pusha
mov
add
pop
jne
push
sub
lds
lods
xchg
call
clc
mov
gs
scas
push
mov
push
test
js
xor
jle
je
ficomps
adc
push
mov
mov
fiaddl
cmp
icebp
call
ljmp
lods
lods
push
hlt
cmp
fisubrs
out
leave
inc
push
push
jnp
xchg
and
jecxz
or
sub
in
addr16
js
mov
push
bound
jne
adc
jge
ljmp
faddp
enter
push
xor
scas
test
cli
rorb
hlt
xor
adc
mov
mov
dec
and
pop
mov
test
cwtl
fsubr
cmpsl
int
xor
mov
aas
call
insl
push
or
sarl
negl
cmc
add
fldl
incl
cmp
fwait
jb
bound
cli
clc
pop
aad
popa
movzbl
xchg
sub
pop
lds
inc
sub
pusha
insl
dec
cmp
sbb
adc
adc
xor
cmp
lcall
ja
cmpsl
cmpsb
mov
jmp
pop
es
adc
inc
dec
cmp
in
mov
add
push
movsb
inc
jae
divb
int
cmc
cmp
sub
pop
xor
xorl
les
mov
cmp
mov
movsb
sbb
mov
xor
dec
add
dec
lcall
stos
insb
jmp
pop
and
push
je
mov
sub
shlb
inc
ret
lahf
mov
xchg
jno
pop
dec
mov
sbb
cmpsb
inc
push
push
pop
adc
xorb
push
dec
dec
push
jg
add
adc
popa
loopne
sarl
mov
pop
mov
mov
aas
inc
aaa
mov
icebp
push
or
rol
cmp
push
int
adc
adc
mov
movsb
add
sub
loop
ficompl
ds
call
sbb
mov
das
lret
push
in
aam
jmp
lcall
xchg
stc
repz
data16
int
jmp
loopne
popl
es
jge
mov
cld
fisubrl
aad
xchg
out
testb
addb
fdivrl
inc
xchg
cltd
repnz
cmp
std
mov
push
cwtl
or
inc
add
or
loopne
int
popf
in
push
pop
jb
cmp
mov
scas
pop
jne
sbb
data16
lret
jp
fcoms
pop
sub
sub
pop
fadds
mov
mov
xorl
mov
push
pop
cmpsl
cmp
pop
mov
jl
int3
pop
and
xlat
xor
mov
out
loopne
stos
jge
mov
add
leave
pop
out
fisubrs
adc
aaa
jp
and
cld
mov
stc
cltd
repz
sub
xchg
pop
adc
les
cmp
orl
xor
adc
out
mov
mov
lods
negb
jae
scas
or
enter
stos
xlat
ds
inc
test
sarb
arpl
push
orl
jae
shrl
mov
in
xor
imul
insl
pop
sbb
cmp
cvttps2pi
sbb
cmpsl
repnz
pop
mov
jmp
aad
movb
mov
lods
lock
dec
dec
mov
lods
filds
fwait
pop
loope
lret
adc
sbb
ja
mov
xor
sbb
dec
repz
push
lock
xchg
sti
and
stos
pop
fsubl
por
jp
xchg
sbb
pop
adc
mov
test
xor
push
jmp
pop
cwtl
div
sbb
xor
xchg
neg
mov
cmp
shlb
movsl
inc
dec
insb
leave
and
cmp
in
mov
pop
nop
cwtl
push
mov
dec
std
xchg
cmp
jae
ja
shrb
ja
ljmp
cmp
bound
adc
cwtl
mov
pop
cmp
pop
movl
aas
fidivrs
mov
stos
in
je
les
lods
fmuls
jo
and
pop
mov
sbb
cwtl
mov
cmp
xchg
mov
fidivrl
lea
das
sbb
or
test
cmpsb
roll
or
fwait
lahf
mov
in
orb
xchg
cbtw
loopne
sbb
add
dec
leave
mov
sub
cmp
mov
lcall
and
push
out
cmp
les
aam
mov
push
sbb
push
mov
jp
stos
fwait
movsb
add
pop
jae
push
xchg
loope
dec
pop
rclb
xchg
hlt
xchg
jb
mov
inc
pop
fwait
addr16
jg
add
divb
dec
std
lods
aas
and
clc
jo
mov
sbb
sub
mov
add
lret
pop
adc
sub
sub
lea
mov
or
imull
pop
hlt
mov
pushf
dec
insb
and
sti
push
push
inc
out
imul
loopne
adc
jge
movsb
imul
pop
loope
pop
enter
pop
pop
repnz
mov
pop
andl
inc
sub
lds
outsl
movsb
add
cmp
imul
mov
hlt
adc
push
ror
sub
call
daa
sub
mov
cmp
arpl
xor
push
add
cmp
aas
lret
and
test
mov
sbb
or
dec
dec
dec
sub
das
sahf
arpl
xor
sbb
jle
ljmp
mov
incl
sub
iret
repz
mov
mov
xor
hlt
das
xchg
xlat
jmp
call
or
iret
mov
cmp
xor
movsb
or
es
sub
sbb
jno
or
cmpsb
sbb
fistpll
jae
test
push
sub
xchg
sbb
addl
adc
or
xchg
and
xor
mov
insb
mov
jg
or
das
and
vcvtsi2sd
xchg
mov
fbld
das
mov
cmpsb
lds
mov
jge
ljmp
leave
jmp
nop
jo
repnz
dec
mov
push
pop
dec
jns
add
push
or
sbb
dec
push
mov
cmp
mov
mov
imul
jge
jmp
xor
into
mov
jge
mov
subb
dec
fidivrl
fcoml
xor
pop
lds
adc
mov
lds
enter
popa
dec
sarl
imul
jmp
cmpl
icebp
xchg
cmp
fbld
and
cmp
vmovdqa
sub
sbbb
clc
xchg
and
hlt
dec
mov
push
das
andl
push
pop
xchg
pop
and
mov
mov
ret
add
sub
xchg
add
gs
jnp
jb
xor
ds
in
mov
lods
xchg
stos
lods
std
inc
jo
sub
in
dec
sub
dec
stc
rcrl
xchg
int
add
movb
add
xchg
dec
add
sarl
int
out
shll
add
jmp
mov
loop
xlat
jecxz
mov
stos
pushf
mov
push
data16
shll
call
jge
or
sbb
in
inc
test
ds
mov
aaa
dec
dec
aaa
imul
xor
lds
sbb
loopne
mov
xchg
stc
inc
lock
clc
ljmp
stos
pop
adc
pushf
mov
fcmovu
aas
cs
jmp
cmp
movsl
push
sub
or
sub
push
aad
and
sub
je
mov
cmp
sbb
imul
add
mov
nop
fists
fsts
popa
mov
cwtl
jge
les
push
jmp
cwtl
out
ljmp
jle
and
xor
jmp
scas
cld
repnz
xlat
xchg
prefetcht0
icebp
cmpsl
movsl
lods
fs
arpl
mov
jmp
xor
mov
pusha
xchg
sub
push
dec
lods
adc
mov
int
rolb
fsubs
dec
imul
push
add
mov
sbb
sbb
popa
and
ficompl
dec
aaa
out
pusha
mov
pop
add
scas
ja
xor
xchg
icebp
lret
popf
mov
icebp
je
fbstp
into
jle
mov
inc
in
es
js
movsb
adc
cmpsl
cltd
aad
lock
push
inc
jle
imul
sbb
jne
jg
push
sbb
inc
daa
mov
dec
stos
lret
or
inc
fs
inc
xchg
vpcmpub
add
call
cs
hlt
lock
mov
cltd
push
ror
pop
icebp
mov
inc
adc
mov
out
mov
push
lock
jl
sub
mov
pop
and
mov
inc
outsl
mov
insb
hlt
stc
jmp
xlat
pop
or
fisttpll
cmc
lods
outsl
inc
lea
mov
loopne
push
inc
pushl
ficompl
scas
cmpsl
inc
addr16
xchg
es
jl
xor
add
mov
sahf
push
rcrl
leave
pop
adc
es
pop
loope
fbstp
or
inc
cmp
push
push
or
jae
inc
xchg
shll
cmp
xor
push
cmp
mov
mov
mov
jecxz
xchg
out
ss
push
mov
es
bound
dec
mov
jl
ja
orb
arpl
adcl
mov
gs
aad
adc
lds
inc
ss
push
sbb
outsb
nop
lock
mov
add
mov
in
sub
pusha
and
mov
scas
inc
cmp
fs
mov
outsb
pusha
inc
and
fdivs
ja
fldt
mov
lock
jmp
dec
stc
dec
or
xor
jmp
das
arpl
mov
stos
or
xchg
inc
cmp
mov
xchg
and
pushl
fs
cli
xchg
sbb
loope
push
dec
mov
adc
aas
push
push
loope
mov
sub
pop
mov
shll
cli
out
fs
aam
push
dec
aam
mov
ror
xor
pop
mov
lahf
out
jne
pop
xor
fsts
ret
jmp
call
push
mov
mov
pop
and
and
xor
in
inc
movsb
lret
jg
push
xchg
shrb
push
cli
repnz
mov
aam
adc
lret
lret
shrb
lock
out
xorb
dec
cmpsb
add
cmpsl
mov
adc
push
leave
ds
pop
pop
mov
mov
mov
xchg
cmp
aad
stos
sub
iret
push
test
mov
orl
xchg
sahf
outsl
jae
fcmovnu
loope
inc
and
sub
das
and
int
add
popa
insb
and
imul
bound
sub
aam
mov
bound
pop
lret
mov
push
repnz
aam
add
push
cwtl
test
inc
sahf
jbe
ds
addb
push
pop
sbb
aam
inc
xlat
mov
jmp
and
mov
lds
outsb
cmp
pop
sub
aaa
pop
ret
stos
push
or
iret
stos
pop
push
pushf
stos
xchg
jae
iret
add
cmpsl
lcall
inc
cli
push
mov
movsb
dec
call
daa
outsl
add
mov
jns
push
and
pop
test
outsl
test
in
hlt
dec
arpl
sub
xchg
test
sub
pop
pop
outsl
popa
test
inc
aaa
pop
adc
ss
into
or
loop
xor
adc
scas
fsubrl
xchg
loopne
aam
push
insl
xlat
xchg
fimull
lahf
adc
repnz
push
jp
movb
repnz
and
imul
cmp
xchg
ljmp
xlat
data16
add
shrb
cmp
enter
test
outsl
mov
insb
cli
jl
add
cmpsb
push
lods
xor
data16
inc
outsb
mov
pop
sbb
inc
ret
sti
test
ss
push
xchg
jmp
lds
scas
inc
enter
or
inc
xchg
les
inc
imul
dec
mov
xchg
test
jno
std
gs
xor
lret
sbb
jo
es
cmp
xchg
push
imul
pop
inc
test
xor
lods
xor
jge
mov
test
push
movsb
adc
aad
jnp
inc
mov
out
fisubl
pop
ret
fcmovne
or
pop
pushf
lods
pushf
xchg
fistpl
inc
lods
mov
inc
dec
push
dec
xchg
add
xchg
mov
adc
push
lret
add
pop
adc
mov
pop
sbb
rolb
es
mov
mov
ljmp
cmc
dec
push
in
xor
inc
cld
push
pop
pushl
es
xchg
lcall
sub
dec
xor
mov
pop
push
inc
iret
pop
aad
adc
jmp
stc
mov
or
rcrb
mov
adc
sbb
push
popa
push
outsb
insl
std
neg
mov
stc
cmpsb
in
neg
cmp
inc
jo
cmp
sub
loope
jne
sub
enter
xor
push
nop
jne
lret
jmp
push
pop
dec
cmp
xchg
test
mov
out
sbb
xchg
xchg
or
test
enter
ret
icebp
pop
int3
mov
nop
pop
out
pop
xchg
xor
int3
mov
jge
sysexit
cmp
adc
mov
fcmovb
ja
mov
in
push
std
fiadds
adc
cmp
popf
mov
imul
cli
jmp
arpl
adc
cltd
mov
aad
and
push
loope
push
inc
adc
lock
sbb
mov
push
test
sub
cwtl
sub
jle
add
xchg
mov
loope
jmp
mov
mov
add
dec
in
lock
scas
lahf
sub
pop
add
or
push
test
jg
xchg
mov
push
fdivs
ret
xchg
daa
je
pop
sbb
lcall
cli
sub
das
mov
push
add
imul
data16
push
jne
cmp
inc
loop
sub
cltd
movsl
or
mov
jbe
test
hlt
test
xor
jno
andl
mov
insb
mov
in
repz
cld
cmc
into
jbe
scas
pop
jnp
sti
cmp
sub
mov
jno
movsl
pop
push
adc
ret
cmpl
lds
pmaxub
test
cmc
push
mov
cmp
jo
stc
rcll
faddp
rorl
popf
mov
mov
aaa
pop
mov
jge
adc
arpl
icebp
pop
das
pop
jno
loope
jp
jb
push
movsl
xchg
roll
push
push
xor
je
inc
sub
out
mov
dec
fistl
mov
sbb
int3
inc
ror
into
sbb
xchg
test
imul
faddl
iret
icebp
repz
mov
and
outsb
and
and
xchg
jb
dec
cli
jb
out
cmpsb
jmp
sub
pop
subl
sbb
shlb
pop
xor
dec
test
jbe
testl
mov
push
cmp
push
xchg
out
inc
cmpsb
add
dec
mov
fadds
dec
mov
push
call
flds
pop
mulb
mov
addr16
xchg
loope
mov
mov
push
stc
dec
repnz
leave
inc
call
pop
xchg
hlt
sahf
fildl
sti
or
sub
repz
pop
inc
rcrl
adc
xlat
sub
pop
jecxz
xor
pop
stos
or
dec
sahf
fimull
jnp
jb
mov
mov
hlt
cmp
dec
mov
push
sbb
push
cmp
sub
push
pop
stos
in
repnz
adc
icebp
xchg
push
aam
pusha
inc
dec
imul
les
das
push
daa
js
xchg
movsb
jmp
pop
enter
pop
ljmp
sarl
cmpsl
adc
jge
or
enter
and
or
push
cmp
inc
xor
push
adc
jmp
inc
pop
std
pushf
dec
lcall
in
aad
and
test
repnz
dec
xor
mov
mov
jge
push
and
fcomps
es
outsl
scas
in
hlt
sub
das
flds
dec
sub
sub
mov
or
gs
test
cmpxchg
mov
scas
popf
pop
xchg
mov
hlt
ss
psubsb
push
sub
shlb
int3
nop
mov
scas
pushf
mov
xchg
xchg
sbb
call
shlb
xchg
push
sub
aad
push
mov
sti
and
xchg
sub
sbb
mov
add
dec
mov
aas
or
sbb
mov
pushf
pusha
cmp
stos
test
sub
repnz
test
mov
xchg
bound
xchg
mov
movsl
dec
cmpsl
fs
insb
xchg
test
in
cmpsb
pop
orb
pop
mov
aad
inc
push
pop
xchg
in
mov
aas
pop
xor
push
mov
xchg
iret
nop
in
adc
aam
sub
xor
ljmp
xchg
push
test
fs
push
shrl
jmp
pop
inc
leave
out
inc
repz
push
mov
test
jns
push
cltd
cmovno
out
lods
sub
xchg
xor
push
insb
mov
dec
stc
pusha
inc
adc
mov
test
dec
iret
add
rclb
lcall
xchg
leave
adc
sub
push
cmp
lock
push
adc
sbb
jns
cli
lcall
or
mov
aaa
and
insb
mov
out
sub
adc
aad
dec
sti
clc
cmpsb
sbb
cmpsb
cli
ja
pop
xchg
out
stc
mov
dec
bound
fwait
ljmp
rcrb
push
or
cmpsl
inc
pop
adc
and
dec
insb
lock
inc
adc
and
ds
sbb
inc
inc
fsub
jecxz
sti
dec
pusha
jecxz
jae
adc
frndint
mov
add
ret
jne
pushl
mov
push
sub
outsb
and
mov
and
push
arpl
xchg
test
push
mov
sub
mov
sub
dec
fdivp
leave
dec
sbb
scas
and
sbb
out
jb
stc
lock
imul
push
sub
out
mov
push
mov
add
and
ljmp
and
out
mov
fidivrs
ss
jmp
jne
sub
dec
mov
icebp
add
push
fdivrl
ss
sarb
nopl
xor
in
add
stos
inc
or
sub
add
mov
mov
fcoml
imul
fisubs
add
pusha
nop
outsl
shl
jmp
test
adc
mov
push
mov
and
push
fdivrl
and
push
sub
int
popa
ljmp
dec
push
mov
ret
hlt
xor
ljmp
sbb
mov
rcrl
sti
jp
aas
pushf
jnp
adc
push
jg
pop
rolb
cmp
shr
xor
cmp
xor
mov
cmp
sbb
mov
jb
scas
push
lods
or
jecxz
jb
adc
scas
mov
dec
and
inc
inc
enter
shl
outsl
push
mov
out
bound
sar
leave
pop
sbb
xrelease
cs
dec
jmp
xor
cli
push
cmc
push
mov
addb
or
ja
xor
adc
in
xchg
pop
xor
mov
jmp
mov
imul
and
lods
popa
push
mov
test
aad
mov
jne
insl
iret
lock
faddp
sub
dec
repnz
and
ret
repnz
mov
xchg
cmp
mov
clc
frstor
push
mov
in
push
pop
xor
fisttps
add
mov
or
std
add
or
insl
inc
mov
in
incl
cltd
pop
ret
aad
jge
mov
out
sar
mov
sbb
fs
jb
lods
push
sarb
int
lahf
or
xchg
mov
lods
sbb
add
or
adc
pop
mov
push
pop
mov
xor
cmp
fisttpl
adc
or
enter
fsubs
or
out
mov
arpl
sbb
pop
aas
shrl
out
push
xor
or
test
dec
and
shl
aad
popa
pop
test
fists
sarl
dec
xlat
xor
repz
repnz
and
loope
mov
mov
gs
shl
push
or
push
mov
in
and
adc
repz
or
xor
repnz
inc
es
lods
pop
in
mov
and
mov
stc
movsb
icebp
test
call
cld
imul
rep
loop
pusha
pop
insb
cmp
js
icebp
aas
jecxz
push
cmp
flds
sti
mov
movsl
jno
push
mov
dec
mov
mov
iret
and
repnz
inc
xor
sarl
sahf
and
aam
ljmp
shlb
inc
pusha
xchg
lahf
adc
adc
sbbl
adc
ret
dec
neg
mov
dec
lods
mov
sahf
inc
or
lret
sbb
fmull
fmul
loop
push
mov
std
mov
add
fs
mov
xor
push
dec
xchg
je
test
sub
xchg
sbb
scas
out
pop
rolb
test
das
aad
dec
rcrb
dec
je
xchg
fwait
xchg
or
movsl
pop
xlat
cmp
icebp
cld
dec
xor
and
repnz
jl
push
and
jp
sub
insl
jmp
dec
lret
stos
paddw
pop
push
pop
std
test
sbb
inc
fwait
and
inc
mov
pop
sub
ret
or
xor
rolb
and
pop
push
sbb
std
sahf
xor
imul
idiv
ret
btr
icebp
fnstenv
stc
lds
dec
push
outsl
das
ret
adcl
rorl
cld
sub
jl
pop
rcr
leave
test
addr16
pop
lcall
aas
in
inc
mov
pop
repz
inc
int3
pop
mov
out
inc
shlb
das
push
sbb
jbe
bound
gs
add
dec
xor
not
lock
mov
jle
cs
pop
and
addl
sub
and
enter
mov
push
mov
bound
inc
jb
shrl
mov
sub
adc
je
imul
inc
mov
cmc
dec
pop
test
test
jnp
cltd
into
pushl
mov
dec
loop
andb
les
mov
repnz
xor
mov
inc
jle
mov
inc
int
lods
jge
cmp
mov
sub
xchg
lods
and
or
sahf
cli
xchg
xor
jmp
addb
xor
lea
xchg
sbb
or
jmp
ret
loop
xor
push
jg
add
sub
loope
mov
unpckhps
jns
pop
mov
test
xor
push
xor
icebp
aam
in
xchg
xchg
stos
mov
mov
xchg
jl,pt
mov
mov
popl
inc
push
sbb
movsb
fsubs
jmp
incb
mov
xchg
pop
imul
push
adc
cmpsl
pop
xor
adc
push
in
mov
into
sub
aam
xor
inc
jp
cmpsb
cmpsb
mov
sti
jae
imul
pop
adc
xchg
call
inc
dec
pop
sti
inc
add
sbbb
and
popf
shrb
fcom
lock
xchg
mov
cmp
jno
cmp
mov
jg
and
std
addr16
into
jns
pop
stc
add
sub
das
push
shlb
mov
pop
int
adc
mov
lods
dec
pop
sub
sub
xor
add
cwtl
insl
cwtl
clc
jae
xor
cwtl
or
adc
ljmp
sbb
ja
scas
int
cld
lds
xchg
jo
and
mov
imul
cmpsl
jp
loop
pusha
push
push
inc
std
jne
daa
xor
lret
nop/reserved
in
xchg
cmpsb
xlat
rolb
ljmp
jmp
ret
xorb
xor
cld
js
or
out
push
pop
adc
adc
push
scas
cmc
xlat
mov
mov
pop
jmp
jl
jg
faddl
in
sub
lods
jl,pn
or
popl
xchg
loope
xchg
jmp
pop
fsub
or
push
test
lret
xchg
testb
test
cmp
cs
add
or
mov
repnz
push
dec
cli
xor
cmp
jae
ret
jp
enter
int
mov
mull
ja
push
int
call
mov
pop
jo
xchg
xor
jnp
mov
cld
notb
lret
add
fstpl
rcr
jp
nop
xchg
pop
kmovb
pushf
lret
mov
or
push
stc
jns
les
in
pop
adcl
jae
cmp
jo
cli
and
or
add
or
sbb
lret
aaa
or
popa
test
and
sub
outsb
mov
cld
pop
jns
dec
jne
jge
aad
push
mov
mov
les
fwait
jbe
sub
testl
xchg
pushf
mov
sti
inc
int
fdiv
push
movsl
jecxz
mov
scas
daa
cli
push
data16
popf
jns
clc
adc
dec
mov
rcrl
xchg
gs
imul
inc
decl
add
cmp
ret
mov
sub
movsl
inc
mov
lods
adc
test
jecxz
loope
push
push
jmp
xorb
mov
xchg
decb
fildll
dec
inc
add
jle
ret
sahf
or
inc
jne
jle
fs
and
stos
adc
push
and
mov
ljmp
adc
push
lods
or
inc
xor
stos
xor
or
sub
dec
sbb
lods
adc
mov
dec
in
xchg
jnp
loop
je
mov
pop
pop
aad
lock
dec
push
add
jmp
aam
jmp
into
xchg
out
fcoms
rorb
sub
jmp
jo
mov
inc
cmp
cmp
sbb
adc
mov
mov
outsb
or
mov
mov
xor
mov
cmpsb
je
or
shlb
xchg
xor
push
or
jne
and
sub
add
sub
push
dec
in
clc
leave
jnp
rorl
jnp
mov
or
xor
dec
frstor
lret
mov
mov
xor
aam
imul
bnd
bound
and
inc
mov
sub
and
add
insl
push
popf
fwait
xor
in
pop
xor
adc
fisttpl
mov
dec
hlt
in
dec
popf
adc
sbb
test
dec
outsl
mov
out
cltd
sbb
dec
add
je
ret
loop
mov
test
gs
adc
testb
std
push
inc
mov
jle
and
xchg
cmp
cmc
mov
aad
shl
bnd
add
jnp
dec
mov
add
imul
mov
les
inc
data16
loopne
bndstx
and
xchg
bound
cmpsb
test
outsl
adc
aas
sbb
cmpsl
push
pushf
in
cwtl
out
add
fwait
ja
lret
push
shlb
cmpsb
dec
pop
xchg
outsl
pop
and
sub
and
insb
loope
jecxz
jns
cmpsb
orl
mov
xchg
sub
jns
nop
push
loope
xchg
sbb
int3
cli
test
scas
pop
sub
mov
imul
mov
adc
test
cs
inc
arpl
xchg
mov
nop
inc
testl
aaa
jle
xchg
addr16
pop
cmp
xchg
sbb
pushf
stos
mov
inc
es
adc
mov
mov
in
jmp
jge
aad
jns
iret
mov
js
add
sbb
fs
adc
and
bound
shll
mov
fldl
das
or
scas
push
imul
add
jb
inc
test
cltd
insl
and
lds
mov
cmp
and
aam
bnd
rorl
xchg
pop
clc
add
mov
inc
loopne
sbb
push
cltd
pop
fnstenv
divb
subb
jecxz
fld
sub
xlat
lock
movsl
push
pop
js
xor
inc
seta
ficompl
push
push
jmp
in
outsl
cmp
jmp
shlb
arpl
sbb
pop
mov
adc
lret
jne
insb
jg
xor
cmc
mov
ret
mov
xchg
xor
loope
lea
and
mov
jmp
jbe
mov
sbb
lcall
jno
dec
add
scas
xchg
hlt
ret
jae
rolb
and
lds
and
and
ficomps
lcall
pop
mov
lods
sub
or
js
mov
add
cmp
lret
mov
cli
and
mov
sbb
cli
bound
xchg
mov
cwtl
mov
mov
sub
push
sbb
divb
xor
add
outsb
inc
int3
or
jb
imul
and
push
ljmp
cmpsb
mov
shl
xor
je
in
push
dec
dec
lret
sub
push
jns
clc
adc
push
shl
notb
shll
inc
sbb
insb
or
rorb
sub
mov
push
xchg
jp
insl
jl
mov
mov
mov
add
repnz
cmp
add
test
jp
xlat
pop
pop
jg
adc
fwait
cmp
adc
lea
cli
outsb
cmp
loop
mov
mov
push
loope
dec
out
inc
pop
addr16
lret
jbe
imull
push
lods
mov
lods
popf
push
mov
push
sbb
int3
lret
sar
push
xchg
mov
sbb
cmc
repz
dec
stos
test
lcall
aaa
add
fnstenv
inc
cmp
mov
stos
push
lahf
pop
sbb
jge
in
dec
shll
ss
xchg
sub
fldt
inc
pop
push
fld
pop
add
addr16
xchg
cmc
ja
iret
stos
mov
stc
popa
aas
dec
lock
fistl
push
scas
and
clc
jb
xor
inc
xor
out
cmp
lea
push
inc
addr16
mov
fsubl
mov
rorl
mov
repz
mulb
jo
cmovs
mov
int3
and
ss
ret
loope
ja,pn
outsb
add
mov
lods
sbb
movsb
pop
xor
sub
rcl
and
pushf
out
in
xor
fldl
pusha
ljmp
jae
xchg
mov
fbstp
rclb
int3
aam
and
ja
aam
xor
loope
adc
insl
in
fdivrl
pop
sarl
les
aad
adc
xor
das
pushf
mov
mov
sbb
cmpsl
inc
and
gs
mov
repz
mov
xchg
in
shrl
sbb
cmp
sub
push
ljmp
cmp
add
pop
mov
popf
fisubs
lods
adc
lock
add
gs
push
mov
mov
cmp
fwait
add
outsl
dec
je
into
sbb
dec
shll
pop
pop
and
jp
mov
jle
ss
cli
lahf
dec
lret
jge
sti
mov
xor
in
dec
bound
inc
xchg
and
sub
mov
mov
and
push
ss
aas
mov
xchg
into
bts
push
xor
cli
test
push
jmp
loope
xor
je
cwtl
mov
daa
pop
mov
pusha
in
push
xchg
mov
xor
xchg
jle
or
lcall
mov
mov
jmp
fdivl
iret
sbb
aam
or
imul
es
icebp
mov
adc
testl
add
mov
mov
imul
and
pop
test
xchg
mov
dec
ja
pop
mov
mov
or
mov
push
int
push
adc
cmpsb
montmul
cmpsb
xorb
mov
pop
xchg
iret
lds
into
mov
fcom
rcll
xchg
sbb
fimuls
or
lret
pop
inc
loop
sub
and
or
xchg
push
adc
fldcw
mov
scas
xchg
leave
inc
lods
xor
sbb
ret
xor
sbb
and
xlat
in
out
sub
inc
loopne
xorl
jae
cmpsl
xchg
sti
iret
rolb
mov
hlt
push
flds
dec
adc
aas
mov
xor
jmp
push
idivl
pop
stos
mov
xchg
pushf
cmc
out
mov
cltd
pop
jge
jp
push
out
xor
xchg
int
addr16
cwtl
ja
aam
xchg
push
push
xor
and
dec
icebp
pop
vpsubusw
mov
add
mov
repnz
in
push
sub
xor
mov
sbb
test
iret
push
adc
sbb
add
arpl
push
inc
movsl
mov
fbstp
mov
stos
sahf
mov
stc
insl
movsb
sti
out
pop
jmp
roll
and
jae
sub
mov
imul
lahf
shll
lock
into
test
aam
xchg
lcall
xchg
fists
sahf
add
pop
jnp
aaa
out
sub
mov
stos
xchg
movsl
push
inc
inc
xchg
jg
addr16
pop
sub
ret
push
imul
ds
sbb
insl
pop
sub
mov
inc
add
xchg
pop
shl
sbb
jg
jge
js
stc
and
decb
iret
fildl
xchg
inc
push
jae
fidivrs
cmp
or
pop
mov
xchg
movsb
lds
mov
lds
lret
sbb
or
imul
xchg
jp
or
test
sub
mov
js
daa
sub
sbb
push
cltd
sbb
sbb
fiaddl
or
stc
test
and
jecxz
into
sub
adc
roll
push
sub
push
push
into
enter
xor
adc
xor
cltd
sbb
outsl
mov
mov
push
loopne
fisubl
imul
xchg
pop
pop
cmp
dec
push
call
fdivp
xchg
pop
sub
xchg
inc
dec
movsl
mov
mov
xor
sub
scas
xor
add
jne
xchg
dec
aas
and
xchg
shlb
clc
xor
adc
mov
mov
sbb
cmp
mov
movl
aam
lret
sub
mov
lds
addr16
test
and
addl
bound
scas
cmpsl
adc
pop
mov
xor
dec
cmp
sub
test
or
xchg
xor
test
adc
sti
and
aam
inc
jecxz
jmp
into
imul
jae
sub
jg
pop
hlt
sub
lcall
in
rolb
mov
jl
in
push
imul
loop
pusha
inc
addr16
aaa
sbb
call
out
lock
repnz
xchg
out
adc
rorb
jg
movaps
scas
push
mov
cmpsb
xor
sbb
adc
jmp
adc
cwtl
out
cwtl
mov
push
insl
fcomip
mov
ljmp
sub
stos
sbb
movsl
jbe
mov
fistps
test
cltd
sti
movsl
push
out
ja
xlat
lods
xor
fmuls
mov
lds
lret
clc
xchg
lahf
cmp
sub
add
inc
jmp
clc
call
push
pop
jl
sbb
add
pop
pop
aad
insb
call
cmp
filds
cmp
cmpsb
orl
mov
push
adc
mov
add
xor
in
mov
repnz
testl
insl
ljmp
jae
testl
cwtl
lret
mov
xor
mov
jae
lret
imul
pop
scas
mov
inc
int3
cs
adcb
into
jo
xchg
or
push
nop
add
add
mov
roll
mov
sbb
bt
pop
mov
pop
incl
scas
nop
mov
mov
in
and
stos
dec
jle
dec
ret
insb
push
mov
mov
sbbb
mov
push
cltd
push
jmp
fisttpll
movsl
mov
repz
inc
insb
inc
xchg
cmpsb
dec
into
mov
sub
add
sbb
outsb
sub
shlb
lds
cmpsb
stos
mov
sub
test
fists
lret
xchg
sub
add
jnp
and
cmp
sbb
xorl
enter
add
sub
cli
movsl
das
loop
fdivrs
lods
sub
pop
dec
add
rcrl
cli
dec
add
push
outsb
cld
loope
mov
mov
inc
dec
xor
dec
mov
insb
mov
test
sub
mov
jle
cmpsb
mov
js
fldl
mov
lret
sub
fists
mov
pop
aas
adc
or
loope
cmpsb
or
ficompl
push
lods
test
arpl
add
icebp
jno
mov
xchg
je
popa
mov
and
into
add
cmp
and
push
push
popa
or
ja
cmp
cmp
lods
fbld
dec
in
out
push
cmp
rclb
scas
xchg
test
mov
add
clc
aas
xchg
pusha
stos
adc
popa
orl
xor
add
sbb
popa
push
xchg
and
pop
lds
jp
dec
lods
xchg
xchg
cmp
outsl
loop
xchg
lds
cwtl
stos
xchg
movnti
xchg
inc
cmpsl
ret
inc
cmp
sbb
mov
xchg
sub
push
push
fsts
xchg
repz
fsubr
leave
ret
in
inc
imulb
subb
lahf
scas
push
cmpsl
mov
add
rcl
pop
and
jns
mov
lods
adc
aam
adc
je
adc
sbb
and
xchg
arpl
jne
out
rol
cmpsb
push
jns
jbe
inc
loope
imul
adc
or
fwait
dec
cs
pop
sti
cmp
mov
dec
mov
in
sub
jns
stc
jno
xchg
in
adc
ror
mov
jp,pn
and
mov
ud2
das
loop
daa
data16
inc
and
call
and
cmp
out
mov
test
cmp
xchg
addr16
mov
scas
stos
or
movsl
dec
jnp
inc
loope
lret
cmp
lds
or
fnsave
gs
mov
int
ret
xchg
push
xchg
or
aad
loop
into
decl
add
pop
sub
in
repz
mov
jbe
cmp
push
jns
es
sbbl
mov
in
test
dec
dec
cwtl
imul
mov
inc
clc
ds
orb
xchg
mov
adc
mov
xor
fimuls
addl
insb
mov
push
fildl
cmp
or
mov
or
xlat
mov
sbb
lcall
cmp
xchg
xor
push
stc
sub
les
push
ss
es
cli
loope
mov
inc
cmpsb
iret
pusha
sub
daa
push
scas
dec
insl
subl
test
dec
cmp
push
rcr
lahf
sbb
fisubrs
xchg
scas
movsl
cmp
add
popf
ret
movsb
xor
vlddqu
dec
adc
push
jle
pop
jnp
cmp
push
mov
sub
inc
aad
xor
cmc
jge
in
js
aas
add
sti
loope
mov
ret
imul
stc
jge
popf
and
fimuls
ss
jp
mov
xor
sti
xor
das
pop
aam
cmp
dec
inc
mov
push
pop
dec
je
push
mov
dec
sbb
jle
mov
xchg
repnz
cmpsb
das
add
cmp
into
xor
in
hlt
sbbl
shll
leave
jl
rorl
arpl
xchg
ret
inc
push
scas
cmc
and
mov
fldl
mov
in
aaa
push
scas
or
sbb
and
jns
push
or
adc
dec
fldcw
mov
jp
cwtl
arpl
mov
add
jge
mov
loopne
mov
repnz
cltd
lods
bound
and
lcall
rcll
mov
pop
popf
jecxz
push
aam
mov
andl
das
mov
and
popf
notl
cmp
inc
push
out
pop
adc
xchg
out
inc
lods
push
fdivrs
xor
ss
inc
mov
fisubs
lret
xor
cwtl
pop
rol
imul
sub
jne
aad
mov
xchg
cmpsb
movsb
jge
out
nop
movsl
mov
mov
test
cmp
test
sbb
xorl
cmc
push
push
xchg
pop
mov
ret
mov
mov
xor
out
sub
push
xor
in
mov
push
or
into
adc
popa
ret
and
xor
in
push
xor
fs
in
ss
jae
ficomps
pop
out
js
lret
loopne
inc
lcall
imul
fs
xchg
imul
movsl
rolb
int
add
loope
xor
push
push
dec
rcll
push
or
sti
gs
dec
in
jne
pop
sub
lret
xchg
mov
fdivrs
mov
mov
add
sbb
lock
xchg
jle
xchg
cmpsl
test
push
mov
sub
xor
lret
push
pop
leave
mov
lds
outsb
and
pop
push
mov
cltd
adcl
sbb
mov
mov
shrl
jno
cwtl
inc
test
in
std
ret
sub
stos
sub
mov
jo
xchg
push
imul
outsl
adcb
sub
sbb
xchg
lds
dec
xchg
lret
cmp
push
adc
roll
mov
les
mov
iret
cld
cld
mov
jbe
jbe
cli
cld
in
into
mov
pop
cmp
dec
mov
jae
xor
enter
out
aaa
and
mov
cmpsb
fsubrs
mov
test
jl
cmp
and
sbbl
mov
dec
fisttpll
out
lcall
jle
outsb
inc
xorl
sub
dec
add
or
push
movsl
movsb
popf
inc
mov
nop
ret
jge
mov
jg
mov
shlb
jle
inc
test
inc
ret
mov
loop
mov
in
jo
test
and
or
lret
sub
dec
stos
int
inc
or
or
adc
fwait
mov
fs
test
leave
xchg
mov
or
lock
push
mov
stos
cmpsl
adc
sub
vmovsd
adc
dec
pop
lea
dec
sub
adc
imul
cltd
movntps
xor
or
mov
jp
jmp
cld
mov
mov
jmp
jmp
faddl
out
mov
mov
sub
push
push
and
inc
sub
adc
hlt
test
push
cwtl
ss
loop
pop
sub
addr16
xor
cmp
mov
fstps
push
shl
dec
xchg
pusha
push
xlat
into
push
mov
es
rorb
idivl
cmpsb
insb
scas
or
xchg
dec
aaa
dec
stc
pop
xor
fists
sbb
fnstsw
mov
movsb
pushf
gs
aad
or
out
dec
aam
gs
push
jo
test
pop
das
and
test
xor
mov
xor
xor
int
jecxz
scas
mov
mov
or
popf
sahf
dec
sbb
cwtl
mov
inc
adc
push
xchg
xor
push
sarl
inc
or
mov
nop
adc
jl
xchg
into
push
lea
lods
push
sub
fs
pusha
or
jb
and
outsl
aam
test
and
sub
stc
hlt
cmpsb
jb
sbb
icebp
ja
jae
sub
ja
popf
stos
mov
iret
push
cs
icebp
lods
call
fs
shlb
jg
fwait
jb
lds
xor
push
sbb
ljmp
fildll
dec
leave
lods
dec
mov
dec
lods
rcr
dec
and
dec
jns
xchg
pop
out
shlb
and
and
inc
inc
cmpsb
cmc
movsl
fcmovbe
enter
xchg
sub
adc
inc
mov
jp
mov
mov
fisubl
inc
jns
mov
fstpt
xchg
mov
in
mov
sti
cmp
push
and
pop
mov
sub
loope
lods
xor
jb
das
es
into
or
bound
addr16
lods
pop
or
pop
inc
adc
sbb
nop
mov
shlb
aad
jl
jmp
lock
outsb
out
decl
or
xor
jmp
fmull
sub
xchg
sete
lods
jmp
push
pushf
mov
jae
mov
lret
out
jns
jmp
jns
out
pop
or
fnstcw
lret
sub
icebp
push
dec
scas
sahf
push
cltd
sub
xor
push
jbe
jmp
dec
lcall
sub
push
jb
lock
dec
lret
clc
fsubs
cmp
jae
jbe
es
push
js
mov
std
stos
inc
push
cmp
shll
sbb
jo
loopne
ficoml
test
daa
imul
test
cwtl
mov
dec
int3
je
cmp
cs
xchg
mov
or
mov
mov
movsb
mov
mov
jmp
test
in
xchg
je
ret
push
es
cmpl
out
fldl
es
in
xchg
in
mov
mov
sbb
sbb
ja
iret
repnz
inc
pop
add
repnz
adc
sbb
sahf
lods
neg
jl
test
dec
xchg
mov
jle
int
addb
fs
mov
sub
popa
push
xchg
push
aam
jge
mov
mov
xor
pop
jbe
nop
outsb
dec
shrb
and
les
dec
pushf
jno
inc
cmp
pop
lods
aas
mov
aas
sbb
or
into
jge
iret
rcrb
cli
inc
push
fwait
notl
out
mov
ds
mov
mov
sub
push
sub
lahf
scas
add
repnz
ds
sub
mulb
std
pop
in
mov
je
out
push
or
sarb
clc
stos
mov
aam
dec
movsl
sti
dec
push
mov
pop
inc
sub
repnz
and
jge
arpl
arpl
pusha
or
dec
xchg
dec
xchg
insl
movsb
xor
cmp
xchg
jb
push
scas
push
jmp
jge
out
or
dec
push
and
insl
js
jle
mov
repz
jae,pt
xor
push
mov
imul
cltd
out
loop
test
pop
int
lahf
test
push
pop
and
xlat
xchg
add
into
int
fidivrl
inc
jmp
jo
enter
add
ret
sbb
fsts
xor
hlt
sub
mov
adc
and
xchg
cmpsl
xchg
insb
movsb
cmpb
sbb
mov
fmul
mov
popa
scas
mov
int
dec
stc
les
mov
pop
mov
dec
xor
dec
ja
or
add
sub
sahf
sub
add
sbb
sbb
clc
mov
in
pop
xchg
fsubrs
jle
cmpsl
std
into
push
or
xchg
inc
arpl
in
cmpl
cmpsl
mov
dec
fs
pusha
sbb
fstpt
ja
add
push
dec
pop
xor
pop
loopne
fdivr
subb
test
pop
cli
xchg
xor
scas
outsl
xchg
sbb
lret
daa
jmp
push
mov
out
outsb
cmp
clc
lods
repnz
cvtpi2ps
cmp
cmpsb
adc
mov
das
mov
repnz
out
popa
mov
out
xchg
sub
jne
cmpsb
pop
adc
outsl
dec
pushf
pop
sbb
mov
lods
jg
inc
jecxz
mov
jno
cs
xchg
mov
cmpsb
daa
mov
xchg
ds
mov
idiv
mov
and
push
dec
test
imul
add
xchg
mov
leave
add
inc
xchg
fsubl
pop
cmc
lret
cmp
lock
cmpsb
and
and
sub
mov
sub
or
mov
idivb
inc
scas
xorb
clc
cwtl
adc
and
lods
inc
xor
lds
fisttpll
scas
push
test
enter
test
mov
push
mov
loop
dec
inc
rorb
mov
repnz
cmp
pop
cmp
mov
and
cmpsb
int
test
cli
jmp
jae
decl
push
mov
xchg
xchg
mov
out
arpl
adc
xor
popa
add
rcll
and
cmp
pop
imulb
lock
pop
sbb
mov
jg
adc
mov
icebp
push
rorb
insl
cmpsl
xchg
inc
cmp
loop
rorb
je
mov
xchg
jb
and
lret
test
jnp
pushf
xor
push
dec
not
or
call
push
movsl
cmp
adc
push
or
call
cmp
mov
popa
mov
rolb
in
mov
out
push
lcall
mov
add
push
pop
loop
sbb
scas
mov
lahf
sbb
cli
jb
pop
mov
insl
mov
lods
pop
enter
bound
js
jl
ss
loope
hlt
sub
xchg
aas
xchg
lods
std
and
insl
mov
xchg
inc
mov
int3
mov
push
xlat
xor
xchg
mov
cmp
cmp
push
jp
xor
ljmp
jnp
sub
mov
idivb
test
xchg
push
test
push
int
or
xor
xor
inc
add
jae
cmp
push
sahf
jmp
stos
stc
xchg
mov
loopne
leave
mov
fwait
cwtl
sti
iret
loope
insl
or
popa
stos
pop
adc
sub
jge
jmp
jge
jb
cmpsb
hlt
sub
out
dec
pop
jp
insl
les
fcom
inc
daa
mov
mov
arpl
sti
gs
gs
cmp
push
add
adc
sub
cmp
icebp
mov
or
pop
add
cld
daa
daa
movsb
aaa
jno
mov
out
push
sbb
push
fs
testb
sar
mov
sbb
das
xorb
cmpsl
cltd
push
testb
cmp
lret
inc
daa
imul
or
adc
inc
into
sub
xor
cmp
shll
pop
mov
jmp
sub
xchg
xchg
jle
or
cwtl
scas
push
pop
rcr
push
cmpsb
or
in
mov
cmpl
mov
divb
adc
jp
cmp
std
push
push
insl
fisttpl
pop
fcoms
test
xor
push
mov
xchg
insb
xor
filds
xorb
push
icebp
mov
pop
push
aad
popa
mov
adc
das
cmc
imul
adc
test
mov
and
sbb
mov
xlat
add
lods
out
loope
out
xor
xor
cmp
adc
rcl
pop
jg
jne
hlt
cmp
movsb
fsincos
out
outsl
loope
sbb
sub
loope
mov
jecxz
pop
movsb
ljmp
xor
sbb
or
xor
xlat
fcmovne
gs
inc
adc
pop
sbbl
inc
popf
mov
jecxz
jno
outsl
movsl
mov
rcr
adc
sub
cmp
push
dec
xchg
lahf
cmc
and
gs
jbe
jnp
mov
out
or
test
pop
push
or
ds
repnz
popa
sbb
std
cltd
or
nop
sahf
xchg
rcl
bound
lds
lcall
cli
and
or
mov
or
dec
cmp
xor
aam
in
cwtl
mov
and
imul
inc
outsb
fcomps
fiaddl
jo
dec
sbb
sbb
out
out
inc
pop
call
cmp
xorb
std
loop
inc
jecxz
fs
sbb
adc
and
bound
rorb
lds
push
negb
xor
xor
mov
xchg
call
xchg
inc
orb
cmp
xor
rclb
imul
inc
cmp
sub
insl
arpl
imul
push
jg
and
mov
dec
outsb
inc
pop
pop
loopne
mov
outsb
mov
xchg
dec
mov
mov
jecxz
mov
in
xor
cmp
cmp
jmp
mov
clc
and
adcl
stc
loope
lahf
mov
push
fsubl
or
pop
fisubrs
and
lds
dec
addb
les
xor
bsf
test
shl
mov
inc
negl
movsb
pop
imul
mov
adc
stos
sbb
mov
bound
inc
mov
outsl
pop
mov
in
adc
xchg
pop
enter
dec
and
popf
out
xor
mov
xor
enter
outsb
push
out
cmp
movsb
push
xchg
mov
outsl
mov
cmp
addr16
lds
cs
jnp
lods
cli
sub
mov
xchg
in
mov
mov
mov
xchg
xor
xlat
cld
mov
sub
lock
cmc
adc
lahf
repnz
fsubl
fimuls
sahf
mov
ret
icebp
daa
cmp
sti
loope
dec
fmuls
or
sbb
pop
sub
pop
pop
mov
das
lock
push
adc
test
fstpl
shrb
mov
inc
push
cli
push
sub
es
push
scas
insl
pop
fs
or
ret
aas
pop
inc
pusha
rcll
outsl
sbb
xchg
adc
aaa
dec
push
add
sbb
insl
fdivp
push
pop
test
sti
xchg
mov
mull
mov
push
sbb
push
mov
movsb
sbb
dec
jo
scas
xchg
push
inc
call
fdivrs
addr16
insl
mov
xchg
fs
mov
imul
int3
cltd
jb
sti
in
jnp
dec
or
push
cs
dec
xchg
or
push
test
insb
in
das
or
rclb
pushl
scas
enter
outsb
xchg
mov
mov
mov
out
jle
push
jmp
hlt
insb
inc
std
fs
idivb
and
mov
dec
sti
pop
daa
ret
lahf
pop
and
out
and
sbb
dec
mov
jae
sub
pusha
and
push
xchg
push
nop
cmp
fbld
outsl
inc
pop
xchg
mov
ds
jbe
xchg
lcall
add
push
imul
push
stos
movsb
repz
push
sbb
imul
cmp
outsl
mov
dec
cmp
inc
lret
push
mov
sub
jbe
daa
fcmovu
xor
xchg
aam
pop
add
mov
ljmp
adc
cmp
mov
inc
xor
cli
rclb
mov
cmpsl
push
lock
pop
fwait
lods
sub
out
into
mov
fwait
adc
int3
mov
lret
nop
fcomip
outsb
in
cmp
sbb
cmp
sub
mov
nop
sarb
xor
rcl
push
ret
sbb
cmp
pop
repz
dec
jbe
xor
pop
in
fisttpll
mov
xchg
aad
mov
fmulp
sub
push
test
pop
mov
scas
pop
xor
xor
push
fcmovne
fwait
lret
cltd
decl
mulb
push
cli
mov
xchg
mov
pop
pop
ljmp
lahf
mov
xchg
in
fmuls
and
stos
xchg
adcb
push
sbb
cli
xor
data16
adc
into
ds
fmulp
fs
jns
ss
jne
pop
cmp
pop
hlt
jns
inc
nop
push
daa
jecxz
icebp
and
popa
int
xor
xor
dec
adc
xchg
sbb
arpl
lret
cli
test
loop
mov
push
repnz
std
popa
int
mov
push
ror
lock
lret
fdivrs
lahf
fnstsw
mov
and
icebp
hlt
dec
adc
dec
fsubrs
mov
pop
push
or
jae
sub
jo
shrl
jbe
jne
and
das
dec
xor
dec
into
add
data16
loop
and
pop
dec
in
adc
jg
add
gs
bound
mov
ret
shl
xlat
mov
push
jecxz
loopne
mov
cmpsb
lea
xlat
jg
dec
adc
adc
xchg
leave
sbb
xchg
fimull
jb
fcoms
out
mov
jge
push
pushf
insl
sar
test
sbb
add
repnz
dec
cs
pop
popa
xchg
fdivrp
outsl
insl
push
bound
add
inc
fdivrl
sbb
push
stos
inc
mov
fists
mov
dec
cmc
shrl
cmp
dec
mov
lds
or
out
xor
mov
sbb
push
fs
leave
or
fsubrs
xor
lds
sbb
pop
fnstcw
push
mov
into
lret
sbb
mulb
popf
mov
insl
pop
shlb
push
adc
lock
ljmp
xchg
mov
out
sub
fstl
push
test
pop
or
cmp
leave
sub
fmuls
in
cs
mov
adc
or
repnz
cld
andl
addr16
push
loope
in
dec
clc
in
jno
arpl
mov
mov
push
std
push
adc
xor
int
adc
test
push
test
cltd
mov
lret
sbb
inc
cmp
mov
out
out
xlat
jnp
lods
and
inc
cmp
add
cmp
lea
nop
and
cmp
popf
pop
lcall
mov
push
fidivrs
pop
mov
sbb
hlt
inc
jle
adc
push
lock
and
and
push
push
scas
mov
sub
xchg
sub
fsubp
into
adc
mov
mov
push
mov
test
mov
icebp
cli
lods
pop
mov
mov
cmp
sub
fdivrs
cmc
aaa
and
loopne
or
lahf
adc
testl
push
pop
loopne
sub
dec
push
pop
push
fs
cmp
out
or
mov
cwtl
cmpsl
cs
cltd
testl
xchg
lahf
aaa
adcb
mov
call
fyl2xp1
aas
test
jge
jo
lea
dec
test
mov
aaa
xchg
aaa
mov
enter
loope
sbb
shrl
or
add
inc
or
push
std
shll
es
sbb
and
lds
je
jno
cmp
cmc
in
and
int
fwait
or
out
jp
and
decb
icebp
insb
mov
sbb
ret
or
in
inc
fs
in
sub
mov
int
repz
fstp
push
mov
test
sbb
fimuls
push
movsl
fistpll
mov
scas
xchg
test
call
neg
xchg
xor
shll
lea
dec
mov
or
lea
xor
je
pop
mov
inc
sub
orb
add
sub
iret
push
ret
and
jno
insl
and
mov
jecxz
sysexit
int
and
inc
cs
test
gs
sub
mov
sub
sti
jl
gs
ficompl
jge
xor
jo
push
call
jne
mov
sub
shrb
xchg
inc
pop
aam
popf
mov
mov
imul
lea
pop
adc
xchg
dec
sbb
mov
scas
enter
pop
jle
andl
scas
std
in
rcpps
dec
in
test
ret
incl
push
mov
nop
dec
pop
mov
cmpsl
add
or
xlat
ja
ficompl
xchg
sbb
das
add
lcall
fnsave
adcl
andb
sub
mov
sub
mov
int3
dec
push
jl
fwait
mov
popa
popf
test
into
or
adc
add
sub
fstps
mov
cmp
jae
cwtl
push
mov
jbe
fimuls
sbb
repz
adc
std
gs
in
mov
ds
mov
mov
sarl
xor
jno
mov
cmp
sarl
ljmp
rcll
rorb
pop
sbb
add
and
xchg
mov
dec
repz
icebp
add
nop
jmp
pop
cmp
adc
hlt
pop
push
cltd
hlt
dec
xor
movsl
add
jmp
inc
fs
mov
and
jbe
aas
push
xchg
test
lods
sbb
mov
fwait
stos
nop
aas
jo
pop
push
in
inc
push
cmp
ficoms
cld
push
mov
add
adc
inc
push
and
sub
cmp
ljmp
pusha
mov
pop
cmp
in
hlt
fstpl
popf
push
jmp
out
adc
test
popa
and
and
sbb
adc
inc
sbb
ja
jg
push
push
jo
dec
mov
push
and
addr16
pop
insl
pop
aas
call
stos
sti
lds
lahf
outsb
push
adc
push
out
push
pushf
stos
lods
adc
and
pop
lret
jbe
push
mov
lcall
add
adcl
mov
cmp
pop
mov
mov
mov
or
imul
pop
add
mov
cmp
push
movsb
inc
add
sbbl
mov
das
fwait
sbb
mov
fistpl
out
xor
xlat
cmpsb
das
pop
cmp
and
dec
and
sbb
pop
mov
inc
xlat
mov
mov
xlat
jb
jne
movsl
cli
mov
mulb
ret
nop
in
mov
repnz
lea
xor
out
dec
cmp
insb
js
js
dec
lods
push
dec
mov
scas
and
cmpsl
adc
xor
sti
in
cld
sub
scas
mov
daa
xchg
scas
pop
add
call
fsubrl
add
and
sbb
andl
push
pop
xchg
mov
jae
push
mov
xchg
dec
push
imul
cwtl
mov
lea
aad
xchg
sub
stos
iret
cld
in
add
shll
xchg
xchg
xchg
fs
shrb
pop
je
inc
pop
cs
cmp
addb
fdivp
pusha
call
and
adc
aaa
mov
jnp
lods
sbb
ja
inc
das
dec
and
je
hlt
repnz
inc
mov
sbb
mov
push
and
sbb
dec
insl
sbb
addr16
rclb
into
clc
aas
mov
push
jns
pusha
sbb
jecxz
lea
cmpsb
sarb
sarb
fucomip
lock
into
dec
mov
in
popa
addr16
xchg
mov
lret
inc
dec
aad
jp
loope
xor
mov
test
jge
xchg
cmp
jmp
shrb
dec
jmp
hlt
cs
inc
mov
pop
cmpsl
xor
rolb
in
and
jae
dec
push
fcom
xchg
xchg
sbb
test
negl
faddp
cltd
inc
aas
push
and
int3
sub
fisubl
sti
push
fs
push
xchg
jae
sarl
adc
adc
push
je
stos
pop
fwait
movsl
inc
jbe
nop
xchg
xor
push
test
jge
fldl
push
lds
pop
mov
mov
bnd
sahf
dec
mov
mov
dec
add
in
movsb
push
sbb
jmp
int3
shlb
sbb
pop
xchg
stc
rcll
jbe
and
cmp
jno,pt
pop
add
push
outsb
shlb
das
cld
dec
sub
add
aas
scas
xchg
push
nopl
push
popa
add
loop
rolb
nop
xchg
xacquire
ja
dec
test
mov
dec
fs
pop
sbb
adc
call
rorb
pop
dec
jle
sub
popf
ja
ftst
sbb
sub
mov
cltd
fwait
call
stos
out
nop
jmp
jl
into
mov
out
mov
add
mov
push
movsl
pop
mov
test
stos
clc
xor
std
loope
adc
add
arpl
mov
imul
mov
xor
aad
inc
shlb
pusha
lods
pushf
repnz
add
push
or
pusha
aad
xchg
mov
adc
inc
jmp
pop
pop
ljmp
popf
aad
icebp
in
test
mov
aaa
xchg
and
xor
idivb
mov
aam
mov
subl
rol
shl
push
orl
mov
mov
xchg
pop
pop
jnp
sub
pushf
inc
popf
xchg
sub
repz
cmp
dec
fsub
mov
divb
sar
mov
mov
jl
into
enter
adc
sbb
xor
add
inc
dec
stos
jg
mov
adc
mov
pop
pop
xchg
aas
cmp
mov
arpl
ret
addr16
mov
ljmp
lret
mov
push
ffreep
in
dec
push
cmp
xor
aas
std
xor
sub
scas
lds
xor
lock
xchg
pop
xchg
fisubs
rorb
scas
adc
push
xchg
les
inc
or
mov
nop
xchg
pop
push
test
jne
movsb
sti
xor
cmp
mov
add
cmpsb
mov
lret
jecxz
ret
sbb
inc
fistpll
mov
push
loope
out
ljmp
mov
pop
test
fmull
fucomp
ret
inc
xlat
mov
pop
in
jge
xor
stos
cmp
and
loopne
stc
mov
cmp
hlt
and
out
push
mov
int
inc
dec
aad
leave
sub
inc
sbb
or
sbb
fsubr
scas
sahf
ja
dec
js
ret
std
push
add
adcl
scas
mov
out
out
addr16
xor
cvtpi2ps
cmp
mov
into
cmp
push
imul
movsb
mov
mov
pop
xor
and
pop
sub
dec
test
mov
flds
sahf
or
push
inc
aas
and
dec
mov
int3
repnz
sbb
pop
cmc
dec
and
sub
icebp
xchg
cmp
shr
lcall
pop
push
lret
ret
js
or
rcrb
adc
int3
pop
ds
mov
xchg
pop
or
or
popa
ds
dec
xchg
push
inc
cmp
xchg
cwtl
jmp
xor
lods
cltd
fwait
xchg
sbb
jg
pop
push
jb
pop
xor
scas
aas
shlb
mov
mov
inc
push
xchg
sbb
repnz
jmp
lds
popa
stos
int3
mov
xor
pop
jp
leave
mov
out
imul
jge
dec
mov
outsl
xchg
inc
fnsave
dec
mov
push
insb
shr
fdivrs
mov
mov
in
addl
cmp
ss
test
flds
addr16
test
sbb
clc
lods
pop
stos
dec
mov
fists
cmp
sbb
sahf
jae
jl,pt
loopne
xor
pop
ret
lods
jnp
andl
in
or
mov
xor
sbb
pminsw
or
lret
lods
test
mov
fistl
insl
pop
out
out
movsb
outsb
add
jb
and
lcall
add
pop
mov
enter
fbstp
mov
shlb
iret
xchg
cld
xchg
sub
mov
sbb
sbb
ljmp
adc
dec
pop
sbb
or
js
and
inc
cmp
leave
out
xchg
sbb
je
jns
lods
pop
and
pop
inc
pop
orl
mov
add
mov
pop
jo
xlat
imul
push
popa
bound
orb
ljmp
mov
sbbl
cmp
fdivl
lret
mov
jmp
inc
orb
mov
cmpsl
hlt
pop
into
movsb
shlb
sub
fiadds
ljmp
push
sbb
mov
adc
pop
push
addl
mov
in
outsl
test
jp
popa
in
stos
add
cs
dec
sub
mov
push
stos
hlt
ret
gs
push
stos
dec
idivl
fsubrs
repz
fmull
pop
mov
sbb
cli
notl
mov
je
add
loope
shlb
lods
sbb
ds
fcomps
sub
scas
repnz
cmp
mov
xchg
sbb
andb
idivl
dec
mov
mov
inc
cmp
dec
and
mov
outsb
push
mov
mov
stos
push
jp
cs
scas
cmp
dec
lods
jecxz
jo
mov
xchg
sub
cmp
jmp
mov
mov
data16
xchg
mov
sahf
inc
das
push
out
jge
fcmovnbe
mov
inc
loope
rcll
cld
pop
leave
mov
out
fcom
or
xchg
flds
xor
ja
bound
mov
shr
sub
push
imul
xchg
mov
sahf
decb
xor
adc
sti
sbb
xchg
mov
mov
loopne
mov
repz
push
mov
jecxz
sbb
mov
loope
out
or
cmp
in
rcrb
sbb
mov
stos
rcrl
or
mull
call
xor
sbb
dec
cmpsb
dec
push
pop
ss
xchg
sbb
dec
mov
test
sbb
pop
sbb
mov
test
repnz
hlt
mov
fnsave
jmp
fiadds
mov
cltd
lds
movsl
sub
mov
arpl
daa
je
pop
insb
addr16
sub
dec
mov
scas
pushf
dec
popf
mov
fs
leave
pop
addb
inc
sub
mov
cli
cmovs
xor
adc
stc
jbe
push
hlt
cmpsb
dec
nop
imul
lock
stos
enter
fdiv
mov
sbb
inc
fisubrl
in
xor
addb
mov
jb
ficomps
xlat
add
adc
shl
pusha
lock
lret
sub
inc
or
sub
push
pop
test
lret
les
dec
loopne
xchg
ja
rcrb
pop
jnp
es
arpl
daa
mov
adc
aad
xlat
lret
gs
test
test
data16
push
and
ficoml
fnstcw
push
test
in
outsl
aam
test
add
rorb
hlt
mov
push
xchg
mov
in
pop
out
mull
fiaddl
mov
leave
jo
imul
out
arpl
aad
mov
loope
mov
jbe
xchg
push
dec
mov
dec
aam
clc
adc
outsb
mov
push
iret
adcb
popf
or
movsb
mov
int3
cmp
xchg
andl
cld
rorl
lods
mov
jno
add
ds
xor
push
popf
ja
into
pusha
mov
arpl
mov
inc
sub
mov
cmc
nop
stos
adcl
adc
ja
add
std
ja
imul
mov
jecxz
movsl
xchg
cli
pop
daa
mov
add
pop
sahf
cmp
dec
sbb
call
and
stos
cmpsb
mov
pop
stos
and
repz
pop
es
sub
jbe
mov
movsl
jmp
std
leave
popa
pop
sahf
xlat
jge
mov
rorl
add
ret
mov
adc
test
jae
sbbb
mov
pop
sub
loope
inc
int
push
daa
jns
mov
mov
iret
sbb
and
in
add
dec
and
ljmp
mov
pushaw
dec
sbb
xchg
mov
dec
push
pusha
mov
aaa
xor
sbb
inc
push
push
sub
or
push
andl
pushf
mov
aaa
pop
push
jmp
in
mov
inc
mov
push
cmp
mov
mov
cmovs
push
loop
lods
mov
pop
aad
mov
bound
and
push
aad
xchg
andb
pop
inc
jnp
mov
mov
xchg
and
enter
fcompl
repz
addr16
mov
inc
dec
fidivrl
repz
daa
and
dec
push
test
lea
sti
add
sbb
sbb
and
fsubl
repz
mov
shlb
mov
sti
jo
jle
pop
jecxz
inc
dec
sub
mov
imul
das
mov
mov
sub
jecxz
mov
mov
test
cmp
add
test
jge
test
imull
insb
sarb
daa
push
pop
ret
popa
mov
fs
or
cs
pushf
ljmp
jmp
imul
cmp
enter
jp
fcoms
and
repz
ret
cmc
fisubrs
xorb
int
repz
jb
inc
xchg
push
ljmp
lods
inc
mov
and
testl
movsb
mov
pop
and
addb
mov
ret
std
popf
and
gs
shrl
iret
in
lods
mov
les
leave
mov
loopne
cwtl
mov
mov
push
into
arpl
adc
dec
loopne
xor
testb
cmpsb
lret
sub
xchg
mov
insl
sbb
mov
addl
ss
dec
imul
jge
loope
fwait
inc
dec
pop
sub
aad
fwait
add
aam
xor
jecxz
psubsb
ret
aas
in
aaa
xor
dec
mov
rcrb
pop
push
and
mov
mov
xor
xchg
test
hlt
pop
mov
je
dec
in
push
jmp
xor
jp
jns
call
push
cmpsl
insl
sbb
inc
insb
aaa
call
jp
shr
out
loope
xchg
loop
push
push
movsl
sbb
push
movsb
xchg
push
cwtl
pop
cmp
insb
pop
js
mov
xchg
add
outsl
add
mov
cmp
addr16
cmpsb
cmpsb
out
clc
rcr
fxch
rcrb
movsb
gs
aam
mov
push
cmp
dec
aad
movsl
fsubrl
sbb
dec
or
pop
inc
add
lods
pop
adc
inc
xchg
aad
ret
aaa
in
xor
mov
idivl
inc
inc
das
sub
pop
mov
add
iret
sub
xor
adc
cwtl
xchg
andl
and
sub
mov
imul
clc
adc
fists
cltd
in
loope
xchg
js
cmp
pop
xchg
add
fnstsw
mov
ss
add
push
sbb
mov
push
mov
cmp
dec
mov
pop
mov
xor
mov
lret
adc
xchg
jns
scas
repz
add
dec
movsb
mov
lds
popa
mov
add
sbb
xchg
inc
rorb
jge
sbb
jbe
int3
decl
cmp
xchg
pop
pop
in
imull
outsb
loop
lock
int
rcll
mov
pop
mov
sub
pop
cwtl
out
inc
outsl
ret
or
out
xchg
shr
pop
sti
leave
jb
insl
dec
into
loop
mov
and
iret
jmp
mov
push
inc
dec
mov
ss
xor
pop
mov
hlt
xchg
int
sbb
in
adc
lods
out
rcll
pop
or
xor
or
cmp
cmp
push
mov
add
jno
sbb
mov
adc
sub
mov
jo
adc
push
repnz
test
or
mov
cli
enter
movsl
mov
lds
xor
mov
scas
mov
popa
pop
mov
shl
cmp
and
test
xchg
mov
xchg
stos
push
inc
movsb
out
jecxz
lcall
sbb
xor
pop
lods
xor
das
mov
lret
pop
aaa
clc
sti
lock
ljmp
ret
dec
clc
jle
out
int3
lahf
cmp
lret
push
push
addr16
cmc
jle
lods
xchg
jnp
jo
mov
add
sub
lcall
lock
pusha
cmp
std
loope
ja
outsl
xchg
cmp
mov
xor
rcr
mov
xor
push
mov
cmc
jo
mov
lret
sub
sbb
rorl
lcall
lcall
mov
movsl
fst
xchg
xchg
xor
mov
add
es
add
cmp
fadd
xchg
jnp
scas
push
inc
shlb
sub
dec
mov
jno
mov
cmpsl
fbstp
add
and
dec
inc
cmp
xor
in
in
jg
lods
inc
outsb
loopne
mov
rcrb
fstl
cmc
mov
scas
mov
dec
fldl
inc
add
pop
mov
pop
mov
xor
pop
shrb
or
jmp
shrb
loopne
les
xor
jo
cmp
insb
mov
push
test
jo
jecxz
data16
rolb
xchg
and
cs
outsb
popf
sbb
push
sahf
pop
int
hlt
sub
or
xor
sbb
stos
push
std
stos
orl
scas
add
imul
cmp
sub
or
pushf
inc
mov
mov
xchg
icebp
dec
sbb
or
dec
mov
jbe
fs
das
rcrl
es
and
fnsave
stos
inc
mull
cmpsl
xorb
ja
mov
jp
stc
icebp
mov
push
cmp
inc
mov
inc
lcall
jg
sub
bound
cmp
xor
mov
mov
scas
add
xchg
roll
fcomps
subl
pop
sahf
fisubrl
add
mov
xchg
adc
movsl
mov
div
orb
data16
iret
repnz
or
imulb
add
addr16
jns
fcoms
popf
sbb
and
arpl
xor
adc
test
rcrb
aaa
mov
inc
add
xchg
or
dec
sub
pop
jmp
lods
mov
gs
adc
jae
outsl
ja
jp
arpl
mov
sahf
mov
pop
mov
xor
jge
std
loopne
mov
in
or
shrl
sub
jo
mov
push
mov
not
arpl
bound
inc
and
sahf
aas
loopne
pop
std
out
mov
push
and
iret
mov
std
outsl
sbbl
adc
dec
dec
xchg
test
and
sbb
lock
out
jl
outsl
xor
out
or
sub
loope
cmpl
lret
jns
jb
inc
das
or
mov
ljmp
jbe
enter
mov
mov
sti
hlt
cmp
dec
xor
cmp
mov
push
fildll
aam
cmp
das
dec
and
jg
ret
xor
sbb
mov
xchg
mov
dec
inc
or
dec
mov
adc
push
dec
int
pop
loopne
inc
push
cltd
iret
sti
vpunpckldq
test
outsl
push
xor
push
outsl
inc
dec
lcall
aas
xchg
popa
inc
sub
push
repnz
jg
cmp
xlat
mov
bound
jnp
ljmp
stos
dec
push
bound
mov
adc
hlt
push
fcmovnb
sub
into
sub
sub
cmp
call
ja
cld
pusha
hlt
int3
dec
call
lods
aad
stos
cmc
fisttpll
test
cmpb
in
push
cmp
inc
xlat
mov
xchg
mov
sbb
push
cwtl
scas
inc
pop
outsb
pop
push
loop
mov
push
lock
sbb
pop
addl
aam
in
lock
out
outsl
cmp
adc
iret
ret
jae
jmp
mov
loope
cwtl
rolb
mov
call
mov
mov
pop
push
or
push
call
cmc
shl
xchg
mov
add
pusha
dec
inc
sbb
pop
sbb
in
dec
std
dec
push
lret
in
pop
ss
add
idivb
shrb
popf
outsl
clc
mov
push
add
cmpsl
mov
inc
pop
xor
loopne
xchg
fildl
add
jmp
out
pop
push
fcompl
into
sub
insl
dec
fbld
push
pop
mov
and
dec
or
fstps
dec
imul
shl
in
std
stos
jne
icebp
xor
and
fucom
mov
sub
sub
push
ljmp
add
jle
xor
popa
xor
jge
lods
ljmp
mov
inc
fs
rcll
lcall
scas
and
mov
cmc
hlt
das
das
out
sub
push
push
stos
push
fidivrs
add
lds
xchg
push
adc
mov
sub
jle
imul
mov
int3
jne
fistl
xchg
lods
sbb
out
xchg
jb
stc
aas
mov
fnstsw
test
mov
nop
mov
mov
inc
fisttps
cs
adc
mov
pop
jmp
out
push
sub
or
or
ror
add
cmp
pop
adc
mov
inc
mov
sub
movsb
repz
and
lock
std
dec
cmp
mov
inc
mov
mov
movsb
lods
adc
test
add
jmp
roll
mov
sub
lret
xchg
stos
lcall
test
jbe
xchg
cmp
inc
scas
das
test
loopne
fmull
rclb
and
sbbl
insl
mov
xchg
fnsave
xchg
lea
xor
es
ds
ficoml
hlt
or
mov
ret
mov
sahf
cmp
aad
sub
xchg
ja
lea
or
mov
jno
mov
xor
and
xchg
adc
iret
mov
cmpsl
add
mov
mov
pop
xchg
mov
push
fwait
jbe
outsl
hlt
bound
xchg
inc
pop
dec
mov
shlb
pop
adc
call
jle
mov
mov
add
je
cmpsb
xchg
jge
pop
or
call
pusha
cmc
mov
enter
sbb
mov
mov
mov
and
inc
mov
hlt
rclb
shrb
shlb
aaa
cmc
stos
pop
xor
mov
cmpsb
xor
adc
jp
push
lcall
sbb
imul
sub
lahf
pop
scas
push
and
adc
sub
cmpsb
ror
or
xor
xchg
dec
dec
mov
ss
xor
and
cmpsl
add
sahf
mov
test
jnp
pop
test
add
fidivs
jle
cmp
inc
cmc
addr16
scas
jl
mov
pusha
les
pop
les
lods
jecxz
je
inc
aad
in
mov
add
adc
add
cld
test
scas
jns
mov
movsl
sbb
or
xor
int
jnp
inc
rorl
cmc
sub
sub
or
in
mov
or
jmp
and
leave
dec
incl
or
mov
sbb
mov
pushl
mov
adc
test
insl
icebp
adc
sbb
mov
cvtps2pi
in
out
mov
insl
mov
mull
mov
push
cli
mov
inc
js
add
jg
cmp
or
dec
je
nop
sub
mov
mov
cmpsl
cmp
repnz
xorl
adc
adc
out
mov
pop
shll
repz
lea
mov
out
dec
int3
nop
jg
xchg
adc
out
jmp
aam
jns
and
xor
xlat
adc
xchg
shll
pop
jb
int
and
imul
les
xor
sahf
out
hlt
push
xor
jne
jl
mov
or
adc
int
js
jmp
xor
pop
adc
ret
jns
stc
and
mov
sub
xchg
pop
xchg
pop
add
cmpsl
notb
xchg
pop
dec
je
or
hlt
mov
cltd
aad
cs
insl
xchg
enter
subl
imul
mov
rcll
pop
ret
sub
popa
adc
mov
pop
sti
jb
std
lock
cs
xchg
cmp
mov
sahf
push
loope
sbb
or
ja
mov
or
cmp
pop
and
inc
and
mov
jecxz
out
jle
int
fnsave
pusha
cmp
movsl
loop
and
fisubrl
das
or
fbstp
lea
ret
and
pop
dec
daa
in
cmp
cmp
xor
mov
nop
jmp
adc
filds
lcall
mov
and
mov
js
and
rorl
add
in
addr16
nop
sbb
test
test
ret
dec
aad
mov
jbe
inc
lea
clc
mov
cltd
add
jbe
push
lods
or
jns
mov
jp
outsl
sub
adc
pop
pop
movsb
loope
dec
ja,pn
dec
les
addr16
lret
int
mov
nop
int3
cli
mov
aad
mov
mov
cwtl
ljmp
pop
rcrb
pop
or
mov
xchg
stc
xor
shlb
or
subb
push
and
stos
xor
jb
lret
je
adc
jo
fmuls
sbbl
aam
cmp
imul
push
pop
jl
mov
dec
add
mov
repz
inc
andb
lods
enter
fstpl
inc
add
dec
lret
sub
test
cltd
adc
int
inc
cld
fucomi
xchg
in
jnp
pop
mov
adc
jge
daa
xlat
push
push
adc
cmp
cs
sbbl
cwtl
jl
and
jg
push
xchg
repnz
fwait
jle
test
push
es
pop
cld
stos
std
adc
test
daa
outsl
outsb
and
jle
lea
aas
mov
push
jp
ret
inc
and
ss
dec
ds
sbb
int3
popf
jecxz
insb
push
jnp
clc
je
mov
xor
mov
js
stc
pop
daa
cmp
pop
out
subb
cld
inc
scas
xchg
dec
jnp
or
fildl
cmp
in
add
cmp
sub
mov
js
in
jmp
aad
mov
adc
std
jbe
call
mov
sub
jns
out
inc
dec
adc
ljmp
lea
imul
push
pushf
test
gs
daa
push
push
int
cld
xor
lret
pop
cwtl
xor
ret
xchg
cmp
arpl
pop
adc
mov
sahf
xor
mov
loopne
les
scas
das
cmp
push
movsl
ficoml
add
xor
inc
ret
mov
sbb
shl
stos
adc
xlat
jnp
pop
push
inc
or
lea
sub
cmp
mov
sahf
jae
cmp
and
and
or
filds
sbb
mov
in
xchg
clc
mov
movsb
or
mov
add
orb
cmp
push
add
inc
movsb
cmpsl
xchg
or
test
sbb
iret
pop
adc
mov
mov
into
jp
imull
sbb
mov
mov
das
imul
xlat
je
dec
rcr
adc
inc
mov
outsl
mov
adc
loope
test
loop
push
push
or
ds
data16
loop
pop
repnz
cmc
fsubs
adc
call
loop,pt
lea
sbb
ss
cltd
test
shll
adc
icebp
shrb
sbb
mov
mov
enter
adc
dec
cmpsl
push
jge
mov
sbb
nop
mov
pop
data16
mov
mov
mov
inc
or
out
cmpsl
xchg
mov
jbe
push
int
and
test
pop
xlat
ret
pop
mov
cs
sti
in
mov
ljmp
dec
jae
les
stos
sub
mov
or
nop
mov
scas
sub
mov
mov
cld
pop
lret
addb
fidivrs
mov
out
pop
fnstenv
sbbl
jmp
loopne
sub
adc
iret
and
pop
cwtl
inc
inc
xorb
loope
stos
push
and
adc
push
inc
psubd
repnz
adc
or
scas
dec
add
jle
movsl
cmp
inc
ja
std
cmp
or
jno
es
cld
jecxz
sbb
mov
fistps
sub
icebp
pop
pushf
pop
push
lock
pop
dec
add
movl
in
fsubrl
addr16
insb
ljmp
stos
mov
ljmp
add
push
mov
cld
push
out
aam
fildll
stos
xor
mov
mov
pavgw
ret
clc
roll
pop
or
mov
xor
push
jbe
insb
push
pop
cmc
cltd
ds
mov
out
pop
xorl
mov
or
jecxz
mov
mov
lret
adc
push
pop
in
cs
bound
popa
cmp
or
xchg
scas
add
or
fildl
mov
mov
insb
fildll
push
das
out
pop
sbb
xlat
inc
js
loope
icebp
std
xchg
inc
popf
sbb
repz
fildll
faddl
cmp
jecxz
fstps
pop
add
inc
mov
popfw
or
cmp
mov
dec
xchg
cltd
sahf
push
sub
xchg
icebp
adc
or
mov
inc
scas
out
ret
test
je
out
pusha
adc
sub
jle
sbb
or
lret
or
or
mov
xchg
outsl
cmp
mov
mov
dec
jle
cmc
or
inc
push
arpl
xchg
popa
scas
repnz
stos
cmp
jbe
int3
hlt
push
sub
lret
mov
out
xor
inc
inc
outsb
enter
std
rcr
inc
xchg
mov
jge
cld
dec
xchg
popf
dec
loopne
push
jmp
xor
cmpsb
jb
mov
xlat
out
in
stc
insl
and
inc
sti
data16
fldcw
cmp
push
jae
xchg
cmpb
jnp
scas
and
mov
ror
xchg
push
mov
jae
test
xor
out
cltd
jmp
imul
pop
or
add
add
or
push
xor
mov
add
arpl
int3
dec
scas
add
or
mov
sub
cmp
add
push
inc
pop
into
icebp
jge
add
mov
loope
mov
inc
enter
lahf
cld
push
insb
dec
jle
pop
iret
mov
icebp
mov
in
add
shll
add
lcall
dec
add
add
dec
mov
call
lahf
imul
mov
out
mov
insb
pop
dec
popf
mov
cmp
stc
cmp
push
pop
pop
inc
adc
jl
jne
mov
pop
shl
rcl
cltd
jae
sahf
inc
xchg
rorl
mov
ret
in
mov
adc
addr16
add
push
loop
shrl
xchg
fldt
mov
mov
std
mov
push
addr16
addr16
call
jmp
jg
pusha
xor
icebp
sbb
inc
cmp
shlb
bound
lds
repz
js
xor
xor
leave
out
cmp
out
lods
adc
xor
lods
inc
std
dec
xchg
mov
xchg
nopl
sti
andl
fiadds
and
push
add
mov
push
jl
xchg
dec
mov
jno
cmp
push
test
loope
dec
sbb
mov
push
fdivl
xor
adc
xor
lcall
xor
inc
push
rcr
sbb
lods
and
jne
xchg
mov
int3
fcmovu
dec
inc
dec
pop
pop
or
mov
sbb
mov
mov
jbe
scas
insb
pop
inc
notb
mov
ret
pushf
mov
inc
outsb
sti
jmp
aas
inc
mov
ds
scas
je
idivb
mov
or
popa
out
inc
fisttpl
ja
repnz
ja
psubusw
inc
lret
movsl
add
xchg
jp
cmp
xchg
leave
push
xchg
mov
mov
mov
add
popa
sub
pop
popa
jb
inc
dec
dec
mov
imul
pushl
pop
mov
xchg
mov
out
lea
ljmp
leave
xor
int3
push
mov
add
incl
cmp
sub
inc
dec
xchg
lock
iret
pusha
test
icebp
shl
pop
add
xor
dec
mov
push
js
loope
pop
mov
gs
shll
test
push
ljmpw
sub
jb
xchg
push
out
sbb
cmp
scas
stos
jg
aaa
hlt
jg
push
add
lods
xchg
out
fsubrl
lret
or
sbbb
movsl
cli
pop
aas
outsb
push
xchg
cltd
pushf
xor
fisubl
sbb
dec
lds
inc
rorb
loopne
in
add
lahf
and
sti
das
or
clc
xchg
pop
aaa
in
sbb
push
sahf
ret
js
mov
lahf
js
dec
push
push
jp
ljmp
mov
call
add
outsb
push
pop
sbb
call
pop
shrl
popf
mov
adc
mov
cmpsl
in
stos
push
xchg
mov
lds
incl
ja
mov
push
jmp
xchg
pop
xchg
arpl
pusha
mov
stc
mov
lcall
inc
inc
ss
in
inc
fndisi(8087
cmpsb
out
test
xlat
dec
test
inc
cli
call
out
cmp
add
lret
les
xchg
push
mov
mov
loope
or
xlat
movsl
adc
sub
mov
lahf
mov
mov
std
repnz
lods
sub
fisubrl
add
sti
ds
gs
mov
int3
mov
ret
xor
adc
mov
das
cwtl
jmp
adc
inc
insb
inc
inc
cmp
or
xor
add
lods
fmul
addr16
or
mov
pop
repnz
xchg
fldz
stos
xchg
xchg
dec
les
stos
mov
bound
pop
les
mov
inc
into
shll
add
pop
pushf
mov
push
into
mov
out
or
aas
sti
iret
pop
scas
sbb
lret
jo
adc
push
insl
addr16
iret
adc
loope
out
iret
bound
lods
data16
sbb
inc
jmp
dec
cmovns
imul
mov
sti
or
mov
mov
in
data16
xor
shrl
loop
cmp
lods
lcall
mov
jbe
mov
mov
fwait
addl
cli
call
xchg
vprotw
jge
mov
cwtl
movsb
jb
pop
jecxz
dec
push
push
outsb
aad
jecxz
fistps
clc
mov
mov
lcall
xchg
leave
dec
shll
jle
dec
cmp
movsb
adc
jge
and
push
add
jle
inc
mov
add
mov
dec
int
std
popa
repz
xlat
or
push
repz
aas
sub
push
cmp
in
push
bound
sbb
lods
pop
mov
cmp
jae
and
jno
arpl
add
in
in
das
sti
insl
mov
mov
jecxz
push
lret
pop
xchg
jmp
shl
mov
int
stc
cmpsb
jae
cmp
loopne
mov
jecxz
jle
out
outsb
ja
xor
leave
scas
leave
in
xor
fstps
sub
jp
sub
fidivs
and
std
jmp
inc
adc
mov
jecxz
add
dec
popf
inc
rcrb
pop
stos
or
in
loop
data16
rcrb
xchg
lcall
pop
xchg
loopne
pop
push
mov
cld
pop
mov
int3
inc
mov
shrl
bound
addr16
mov
jmp
pop
add
mov
fimuls
and
mov
rclb
sahf
fcoms
mov
fisttpl
sub
je
jl
xor
in
popf
pusha
das
cmp
and
cmp
inc
js
jge
pusha
inc
out
wbinvd
push
jno
jae
in
push
test
out
leave
scas
sbb
stos
adc
push
iret
inc
jae
or
add
mov
decb
and
mov
mov
imul
push
imul
dec
xor
mov
push
adc
into
dec
inc
xor
pop
loope
jp
iret
xor
call
into
into
repz
sub
add
or
jbe
adc
adc
es
sbb
addb
out
jnp
xor
test
int3
xchg
mov
rclb
movsl
pop
adc
sti
ja
and
mov
sbb
jg
lea
test
inc
idivl
and
aad
pop
std
cld
xchg
xor
sti
and
push
adc
mov
fbld
out
mov
inc
inc
add
in
cltd
test
sbb
sbb
xchg
out
cmp
inc
pop
fiaddl
and
ret
orl
fwait
cmpsl
sbb
daa
loopne
subl
iret
stos
inc
inc
push
xchg
out
sub
jl
int3
dec
push
sbb
adc
rorb
aaa
sarl
repnz
dec
ss
lds
js
movsb
pushl
sub
ds
mov
in
push
imul
sbb
pop
mov
pop
mov
xchg
sarl
scas
inc
jg
sub
mov
mov
dec
lock
dec
in
sub
xor
add
ljmp
loope
imul
stos
xchg
add
push
xchg
in
jb
test
loope
pop
call
xchg
ds
leave
in
or
pop
and
jg
adc
test
into
dec
rol
jo
xor
jbe
arpl
icebp
or
push
lea
daa
xorb
push
adc
cmp
popf
mov
adc
arpl
lret
aas
jno
aad
lods
mov
cli
test
dec
bound
jns
sub
and
rolb
mov
in
inc
add
iret
xchg
push
mov
pop
adc
adc
inc
test
or
xchg
inc
popa
dec
pop
bnd
dec
or
and
repnz
negl
dec
mov
push
mov
and
pusha
mov
subl
in
inc
inc
lds
cmp
sub
lcall
mov
or
mov
fisubrl
insb
sbb
fs
scas
mov
xlat
pop
inc
nop
sub
adc
pop
push
push
test
dec
or
inc
jle
mov
xchg
jle
lret
sti
inc
popa
aaa
xor
rol
jge
sub
mov
mov
rolb
imul
ret
mov
test
mov
stc
stos
mov
sub
sub
pushf
jne
push
fcmovu
adc
aam
mov
imull
xor
jle
out
mov
out
push
ret
pop
cld
xor
push
and
inc
icebp
ficoml
inc
and
adc
sub
dec
sbb
cmp
jo
pop
pusha
in
jge
mov
inc
mov
call
xor
out
sahf
add
das
dec
mov
or
js
insl
inc
mov
pop
cwtl
mov
lcall
push
mov
bound
mov
icebp
jb
mov
inc
and
ja
jmp
call
mov
popa
lahf
or
add
jmp
mov
leave
lods
ja
call
sub
mov
js
fwait
mov
mov
sub
or
and
jo
leave
lods
cs
or
ficoms
or
sub
adc
sti
and
cmp
add
jbe
imul
jl
jb
adc
pusha
cmp
and
push
xchg
cmp
adc
pop
dec
cld
mov
mov
adc
rcrl
enter
xor
pop
call
inc
lock
mov
push
cwtl
pop
lds
cmc
into
sbb
stos
cmp
cmp
lods
pushf
aam
dec
movsl
push
cwtl
pop
push
lretw
xchg
dec
dec
push
mov
loop
xchg
in
sub
inc
add
imul
sbb
pop
cmp
adc
das
inc
jno
adc
jnp
mov
mov
mov
ret
lret
lgs
popf
mov
mov
dec
cmp
mov
shrl
push
mov
sub
rorb
femms
ror
push
and
nop
lock
mov
cmc
mov
sti
sti
mov
addr16
mov
mov
mov
mov
andl
push
mov
nop
xchg
push
lcall
push
add
cmpsb
xor
xchg
testb
sbb
mov
cmpl
cld
int
xchg
pushl
fsubrs
fs
mov
jno
sbb
leave
ljmp
sbb
adc
insl
and
rcr
dec
into
je
movsb
push
idivb
jp
mov
mull
adc
dec
roll
icebp
fbstp
and
ja
adc
ss
mov
icebp
adc
int
sub
dec
pop
mov
or
outsb
pop
enter
mov
bound
sar
jns
stos
movsl
jg
mov
es
xchg
add
leave
mov
jg
int
fdivl
mov
mov
lret
insb
xor
push
jo
jge
lret
and
nop
xor
popf
mov
mov
inc
mov
xor
push
gs
ret
inc
xchg
dec
inc
sbb
icebp
movsb
adc
jle
pushf
lret
test
rorb
and
popf
sbb
lahf
test
add
pop
test
cmpps
lret
inc
addr16
pop
into
je
mov
icebp
mov
push
xchg
pop
push
ja
mov
cmpsl
sub
push
inc
fildl
repnz
pop
arpl
test
outsb
or
and
dec
add
ret
sti
or
sub
lods
xchg
cli
ret
pop
push
cli
in
cmpsb
cli
popa
mov
test
jmp
add
scas
jp
xchg
lock
pop
pop
dec
pop
mov
shrb
cltd
out
xchg
shlb
scas
mov
dec
dec
jle
jne
pop
js
cmp
in
cmp
shll
sahf
fcmove
and
mov
cmpsw
add
sub
out
out
into
or
push
clc
outsl
out
int3
gs
stos
jmp
dec
add
mov
inc
mov
movsl
aas
lahf
jo
jo
and
int3
push
das
adc
int3
imul
clc
cmp
mov
jae
test
add
lret
js
std
jae
xor
out
xchg
inc
in
mov
mov
dec
cmp
in
cmpsb
or
shlb
fnstsw
cmp
fsubrl
pop
movsb
adc
inc
sahf
sub
add
stos
andl
addb
popf
ds
or
pop
lods
lret
sub
pop
rcr
mov
sbb
jno
mov
mov
test
sbb
mov
fwait
out
out
push
cmp
jne
adc
testb
imul
xchg
mov
push
pop
aam
lds
popf
unpckhps
vandnps
jl
mov
andb
test
in
mov
or
sub
ja
imul
into
cmp
dec
int3
sub
sbb
inc
sahf
xchg
fcomp
dec
ret
push
mov
cmp
push
dec
leave
cmp
stos
adc
shrl
notl
cmp
into
pop
mov
jb
scas
or
sahf
sub
xor
dec
movsb
stc
jge
repnz
cmp
rclb
nop
mov
mov
adc
or
jl
and
fldt
adc
mov
scas
aam
call
stos
xchg
push
ficompl
and
push
lods
bound
lret
sarb
aad
cmovb
push
mov
xchg
xchg
mov
fnstsw
cmpsl
mov
mov
and
sbb
cli
push
xor
xchg
add
cwtl
sbb
loopne
enter
iret
fimull
push
xor
sub
sub
add
mov
jle
pusha
loope
or
sbb
filds
pop
lret
mov
imul
shll
pop
repnz
mov
mov
sub
push
push
sbb
lods
icebp
pushf
lret
add
sub
std
adc
pushf
ret
jge
decl
xchg
xor
xor
inc
and
mov
sahf
lret
xchg
sub
add
into
adc
std
repnz
xor
inc
popf
lcall
xchg
clc
ljmp
add
xor
fstp
xchg
fldt
cs
xor
mov
sbb
ret
inc
js
clc
add
adc
adc
pop
lcall
je
inc
outsl
sahf
flds
inc
push
cmp
repz
xchg
ret
out
addl
pusha
stos
dec
dec
pop
mov
dec
lret
xor
loopne
das
out
js
inc
loop
or
pop
out
fidivl
push
xchg
pop
insb
daa
mov
or
jb
jae
repnz
fistpll
xchg
lea
je
dec
mov
push
adc
popl
mov
push
or
xchg
jae
adc
icebp
mov
push
scas
sub
lock
and
mov
xchg
dec
push
xor
icebp
jecxz
mov
mov
push
enter
std
cmp
push
and
js
jbe
stos
sub
insl
or
aam
pop
and
pop
push
xchg
lds
dec
and
ja
clc
pop
inc
nop
nop
je
test
or
lea
cmp
cmpsl
xor
inc
inc
dec
dec
or
mov
cmp
gs
xor
sub
scas
sub
mov
push
sbb
das
or
pop
repz
adc
jo
dec
adc
std
jp
mov
mov
sub
push
and
das
pushf
adc
sbb
test
mov
incl
cmpsl
int
dec
decb
rorb
mov
pop
mov
xor
adc
scas
arpl
sub
xchg
cmp
jno
jnp
repnz
rorb
jne
hlt
mov
xchg
aaa
insl
sub
ds
into
setnp
outsb
mov
mov
in
cmp
dec
jmp
fwait
push
sarl
mov
imul
data16
xchg
adc
fwait
les
pop
adc
cltd
xlat
mov
rcl
fwait
icebp
mov
add
into
ret
adcb
and
xchg
adc
mov
sbb
jp
faddl
rolb
pop
dec
pop
popf
pop
add
inc
lret
add
jmp
cld
pop
aaa
sbb
stc
mov
mov
cld
sbb
insb
pop
and
ficomps
sbb
rcl
cmp
lea
push
fst
mov
cmp
mov
call
mov
lret
lea
and
mov
jg
scas
xor
inc
in
sub
cld
fcmovbe
out
test
sbb
mov
mov
stc
jnp
out
shl
mull
cltd
ret
push
fisubrl
imul
fs
xchg
rolb
fcmovnu
enter
adc
ret
mov
fists
icebp
dec
ret
sub
aad
cmp
aaa
lock
cld
loop
or
mov
push
push
in
mov
inc
loopne
jo
cmp
clc
dec
sub
repnz
cwtl
int3
fdivs
jb
popf
out
ret
adc
jl
sub
jno
mov
iret
mov
add
jp
gs
or
or
mull
inc
popf
jecxz
ret
ret
cmpsl
push
pop
mov
in
test
sbb
add
pop
idivl
sub
adc
stos
push
xor
sub
adc
repz
out
add
pop
lret
pop
push
mov
mov
outsl
outsb
pinsrw
cld
pop
xchg
pop
clc
fidivs
add
xchg
xchg
nop
cwtl
dec
jae
outsb
icebp
loop
out
fldenv
jp
dec
or
push
xchg
inc
rep
xor
dec
pop
mov
push
xor
and
popf
adc
fwait
adc
lods
sahf
stos
mov
jns
cmpsl
cmp
int3
push
inc
push
pop
and
fwait
lahf
inc
cld
xor
in
xor
ret
xchg
pop
pop
and
or
out
lods
sub
cmp
cmp
xchg
outsb
in
addr16
insl
aad
mov
add
mov
xchg
cmpsl
pop
into
xchg
cmpsl
adc
movsl
fldcw
adc
xor
cmp
rcll
scas
leave
push
aad
pop
hlt
orl
rcr
mov
sub
cmp
jae
xchg
sub
and
sub
push
adc
sub
data16
push
mov
push
pusha
in
jl
add
jp
ss
outsb
cmp
cmp
mov
lds
push
cmp
sbb
int3
das
pcmpeqb
jecxz
sarb
xchg
mov
es
lods
loop
jae
add
mov
inc
add
fwait
pop
pop
mov
xor
shrb
add
inc
ss
dec
lcall
dec
std
pop
adc
paddsw
shlb
lods
xor
jbe
imul
and
xchg
addl
imul
sub
rcll
or
lret
mov
testb
mov
frstor
lds
cmp
adc
out
in
xchg
mov
subl
jbe
xchg
mov
popa
hlt
insl
xor
adc
ss
testb
mov
gs
sub
xor
pop
add
das
fwait
push
dec
push
add
push
xchg
arpl
push
aaa
push
cmp
into
fnstenv
sahf
xor
xor
xor
mov
leave
fisubrs
jmp
mov
or
shlb
jne
adc
xchg
sbb
dec
add
out
xchg
xchg
cltd
jmp
sbb
sbb
stos
inc
test
push
and
sub
mov
into
jae
sbb
adc
lahf
pushf
outsb
mov
rcl
leave
insl
xchg
cmp
push
sbbb
aam
jle
jl
adc
imul
sbb
hlt
mov
or
cs
pop
rol
loope
jl
shll
or
hlt
sbb
mov
push
mov
addr16
aam
cwtl
jb
popf
movsb
mov
push
sub
or
adc
xlat
pop
xchg
fs
popw
scas
inc
lea
mov
int
xchg
ss
xchg
loop
popa
inc
cmp
imul
fbstp
jbe
jbe
inc
repz
pop
sbb
outsl
jo
je
dec
clc
dec
mov
xchg
bound
out
mov
cmp
mov
or
ja
jns
mov
out
mulb
adc
ja
sub
loope
test
dec
xchg
out
sbb
dec
dec
pop
adc
rorl
sbb
push
jg
in
adc
imul
pop
std
inc
xchg
or
dec
test
mov
mov
cli
adc
sub
cmp
and
mov
adc
sub
call
cwtl
mov
and
and
push
popa
cmp
cmp
fldcw
ja
int
pushf
cmpsb
add
mov
pop
hlt
mov
sub
loope
shll
adc
ret
pop
cmp
inc
dec
cs
or
mov
fdivrs
add
sub
test
dec
mov
jge
push
sbb
cmpsl
pop
rcr
out
and
imul
mov
xchg
pop
dec
sarb
push
mov
test
mov
mov
cld
jge
pop
incb
xchg
cmp
hlt
dec
mov
addr16
shll
jnp
pusha
out
sbbb
and
jle
out
mov
leave
sbb
das
popf
xor
sub
pop
mov
or
test
cltd
push
iret
ss
pop
xorb
in
and
push
fs
dec
add
mov
push
inc
jne
mov
imul
int3
jo
pop
filds
or
repz
or
or
into
incl
rcll
fcoml
addr16
mov
cmpsb
shlb
jecxz
mov
push
cltd
inc
aam
movsl
out
add
jg
xor
shll
inc
xchg
inc
enter
int
mov
mov
mov
mov
or
mov
adc
cmp
push
out
stos
fisttpll
testb
std
mov
stos
adc
fstp
push
scas
mov
cwtl
cmc
movsl
mov
xchg
fwait
jno
fsts
divb
cmp
pop
push
in
pop
test
mov
pushf
push
xchg
out
inc
pop
imul
lahf
cmpsb
std
fwait
sub
or
js
jl
ljmp
sbb
pop
ficomps
jp
jp
mov
or
call
icebp
mov
and
scas
popf
inc
enter
ret
in
scas
loopne
dec
sarl
adc
cs
sbb
sub
shlb
pop
pop
sbb
dec
popa
pop
xchg
and
lods
addr16
dec
pop
adc
or
cmp
jl
adc
int
and
cltd
cmp
lret
rcrl
push
stos
and
adc
jae
xor
and
ja
mov
daa
jb
cmp
adc
jmp
mov
std
jno
mov
andb
add
scas
jecxz
push
and
inc
mov
inc
jae
test
cmp
and
js
push
jbe
mov
icebp
push
fisubrl
fld
stos
fnstenv
repnz
mull
sbb
mov
int
cmp
testl
pop
bound
jnp
adc
arpl
xchg
ljmp
add
fisubs
cmp
adc
mov
jne
popa
add
insb
or
adc
mov
xor
stos
sahf
sahf
xchg
mov
push
inc
insb
das
inc
jno
and
xchg
jo
jmp
mov
jp
pusha
fmull
mov
adc
insb
inc
jne
jnp
repz
in
arpl
mov
pop
orl
mov
loope
popf
or
call
test
adc
sbb
aas
out
adc
test
or
xor
jmp
pop
ss
dec
xchg
mov
and
pop
cmp
shlb
xor
imul
repnz
outsl
sub
dec
mov
jg
dec
rcrl
cmovb
add
push
push
mov
js
sub
inc
ss
lods
fistpll
daa
jge
imul
in
xor
jne
outsb
pushf
test
std
imul
loop
jmp
mov
jecxz
loop
cmp
stc
imulb
push
scas
xor
inc
and
leave
sbb
cmp
and
sbb
mov
std
nop
push
mov
cmp
push
int
das
inc
mov
outsl
push
mov
sbb
std
orb
sub
push
dec
cltd
cmc
pop
mov
jns
jno
jmp
enter
lea
push
or
mov
jmp
or
mov
push
imul
mov
jnp
hlt
outsb
jb
mov
jno
jge
cmp
cmp
inc
mov
cwtl
mov
dec
lock
or
xchg
push
lret
sub
push
add
addb
aad
xchg
xchg
xchg
jb
xchg
lds
sub
aaa
xchg
scas
xchg
inc
xorb
inc
nop
repz
ret
sahf
xor
mov
sahf
jp
lods
ret
jp
sarl
adc
fyl2x
push
movsl
aas
push
cmp
sarb
xor
inc
scas
and
sbb
or
sbb
in
inc
lahf
xchg
mov
decb
int
orl
xor
xchg
or
xchg
ficompl
push
xchg
insl
sub
cs
pop
add
hlt
mov
cmpb
aas
or
lock
cmp
inc
rcrb
in
mov
xchg
in
scas
add
cmp
mov
and
or
push
stos
sbb
adc
pop
add
jl
lods
xchg
cltd
cmpsl
or
push
int3
movsl
fimuls
lea
hlt
xlat
pop
mov
out
aad
push
mov
jecxz
cmp
mov
outsl
inc
xchg
sti
jmp
dec
push
cltd
mov
les
ljmp
jb
scas
dec
xor
fsubrs
and
outsl
dec
les
adc
lock
aas
push
adc
pop
and
out
outsl
mov
fstpt
fnstsw
orb
inc
and
cmc
pop
pop
rol
sub
mov
clc
and
data16
in
pop
push
mov
mov
loope
cmp
or
push
cmpsb
sub
xchg
push
xchg
loope
repnz
or
cmpsl
inc
jno
stc
pushf
inc
pop
mov
sbb
push
sahf
aam
ljmp
push
or
inc
mov
push
cltd
fadd
adc
or
rorb
std
mov
cmp
xchg
out
pop
mov
xor
pop
ss
hlt
lods
pop
and
pusha
jecxz
frstor
pop
jbe
gs
ljmp
in
pusha
loopne
mov
scas
or
cmp
mov
cld
loop
dec
cwtl
sub
xchg
int3
fdiv
jmp
cmpsb
xor
xchg
mov
js
mov
hlt
push
loop
cmpsl
lods
sarb
or
je
and
mov
pop
daa
push
push
daa
jp
dec
notb
xor
lahf
or
cmp
xchg
stos
cli
mov
shll
push
faddl
cmpsb
loope
in
testb
cmp
mov
inc
imul
xchg
cvttps2pi
inc
or
sub
sti
and
xchg
aas
in
adc
or
ret
and
xor
divb
pop
mov
pop
mov
in
push
dec
mov
jno
call
sarl
jle
pusha
adc
jo
and
cwtl
dec
mov
shl
dec
inc
sbb
hlt
loopne
aad
mov
out
mov
mov
sti
sbb
inc
sbb
jmp
mov
xor
aaa
scas
clc
pushf
or
mov
mov
gs
cltd
roll
fsubl
std
loopne
in
inc
xchg
fdiv
mov
and
adc
xchg
and
inc
xlat
jmp
jl
into
loopne
call
dec
inc
xchg
push
cld
push
xorl
adc
mov
add
sbbb
sbb
pop
pop
jg
ljmp
std
xor
push
jg
or
es
jp
mov
in
loop
inc
adc
out
clc
sub
mov
jnp
xchg
stos
ljmp
stos
pop
pop
xlat
or
mov
mov
es
rorb
push
sub
push
leave
popa
or
push
divl
out
inc
js
push
or
push
sbb
cmc
fwait
bound
cmp
pushf
ja
mov
push
sub
jno
aaa
mov
ss
mov
add
imul
mov
cmp
dec
dec
sbb
cmp
and
popf
sub
inc
mov
adc
push
sub
push
cwtl
jae
test
push
mov
sarb
and
inc
sub
repnz
push
mov
aam
push
lods
fstpt
and
pop
xor
jnp
aad
dec
outsl
mov
hlt
sahf
push
insl
outsb
faddl
push
loope
inc
divb
push
jo,pn
setns
inc
push
sti
mov
xlat
push
shrl
jnp
and
rcr
dec
loopne
push
arpl
and
je
test
mov
in
mov
pinsrw
lock
lea
add
cmp
jmp
xchg
cwtl
push
das
jno
mov
mov
sti
inc
push
dec
mov
add
mov
push
pop
mov
sub
add
ret
sub
push
jmp
and
loope
out
sbb
repnz
mov
bound
or
fbstp
jge
mov
and
or
ficomps
adc
pop
ljmp
inc
pusha
sub
mov
sbb
out
xchg
dec
outsl
mov
add
das
xor
loopne
push
pop
cli
jecxz
push
dec
scas
fisubl
jnp
lahf
mov
pop
or
sub
xchg
xchg
add
jl
divl
or
cwtl
pop
mov
and
or
out
dec
sti
push
jnp
jl
pop
insb
mov
and
sub
fnstsw
cmp
popa
ficompl
gs
je
btl
pop
imulb
jb
stos
push
or
pop
sub
test
sbb
leave
in
adc
imul
jmp
das
int3
in
xchg
stos
arpl
adc
mov
es
je
pop
fdivs
xchg
lods
nop
fistl
fnstcw
loopne
das
popf
and
fdivr
insl
cmp
sbb
lds
push
fildll
push
frstor
adc
in
addr16
repnz
cmpsl
push
nop
out
jb
jae
push
and
stos
sahf
add
ficoms
idivb
jg
mov
xorl
sub
and
push
cmc
out
pop
pop
ja
jmp
sub
xchg
mov
mov
cmpsb
mov
and
jne
mov
mov
jecxz
push
jae
mov
or
das
xor
jle,pt
mov
adc
or
stos
stos
cmpsl
dec
pop
pop
sbb
pop
clc
xchg
mov
test
xor
pop
adc
fistps
fbstp
inc
mov
sarl
cmpsl
out
inc
sti
out
jnp
xor
xor
cmp
ror
pop
cmp
mov
mov
dec
pop
push
sti
mov
mov
cmp
sub
inc
cmp
push
xor
pop
negb
mov
fisubrs
mov
popa
or
xchg
movsb
mov
ret
testb
ja
and
sub
or
fcomi
jo
xchg
cwtl
inc
das
mov
xchg
pop
dec
fcompl
or
dec
adc
std
or
pop
xor
ljmp
test
aad
into
lret
rolb
sub
push
inc
ret
lcall
cmp
int3
es
fwait
jecxz
ficompl
call
jp
gs
test
cltd
adc
int
stos
lret
jle,pn
outsb
cmp
cmp
ret
xchg
fnsave
cmpsl
dec
adc
aam
aas
jno
push
imul
add
popa
inc
jns
push
mov
out
xor
or
das
cmpsb
ds
add
icebp
xchg
dec
jnp
cmpl
or
loop
xchg
or
dec
pop
mov
shr
adc
jbe
and
stos
mov
hlt
sti
loope
out
testb
ljmp
fisttpl
jo
xchg
or
sub
or
sub
in
xchg
inc
movsb
pop
mov
add
sbb
sbb
dec
daa
hlt
or
xor
jnp,pt
xchg
mov
das
int
fidivs
in
push
cltd
fdivr
sbb
stos
popa
rclb
mov
cmp
mov
nop
pusha
push
jle
int3
push
ss
fcompl
scas
scas
push
aad
jle
sbb
ss
dec
enter
sarb
mov
out
neg
pop
test
outsb
jne
mov
xor
inc
xlat
inc
mov
lret
mov
dec
push
pop
mov
add
aaa
out
inc
jge
lcall
cmp
mov
shrb
mov
jnp
ljmp
insl
cltd
nop
xlat
push
and
imul
jns
push
xchg
cmp
and
mov
adc
mov
out
jae
ss
pop
mov
mov
in
inc
jl
inc
mov
push
fsub
ja
ret
jge
imul
movsl
add
xorl
xchg
pop
inc
add
test
adc
and
pusha
and
aam
loope
xchg
and
push
fcomps
lahf
mov
ljmp
adc
scas
js
into
push
sti
in
lods
movsb
mov
mov
pop
fcomip
adc
std
clc
sbb
inc
test
decl
out
test
test
loop
jo
cmp
adc
xor
mov
js
push
and
rolb
and
or
out
fists
scas
xchg
inc
ds
or
loopne
shlb
cvtpi2ps
or
jmp
clc
adcb
popf
pusha
movsl
inc
imul
cmp
sub
ds
ss
push
pushf
ja
cmc
mov
outsl
add
xchg
xchg
cmpsb
dec
add
fsubrl
cmp
fs
movsb
jl
jo
jge
mov
dec
mov
push
mov
aas
inc
adc
mov
cmp
pop
and
shrb
push
jmp
jo
mov
aam
xchg
int
jnp
mov
ret
lods
fists
es
lret
les
and
std
cmp
cmp
jnp
test
mov
pop
jae
mov
push
jp
mov
sub
mov
popl
xchg
inc
mov
mov
int3
mov
mov
test
rorl
inc
sahf
mov
xor
and
inc
cmp
ret
mov
mov
aad
lods
stc
daa
rclb
pop
jns
push
push
lds
xchg
adc
scas
mov
and
or
cltd
movsb
popf
adc
call
outsl
mov
loope
aam
testl
cmc
push
or
sub
pop
sahf
inc
dec
inc
sets
and
call
push
ret
dec
and
fucomip
pop
inc
xor
int3
dec
iret
jg
popf
mov
and
popa
cmp
ja
shrl
gs
dec
mov
mov
push
sub
sub
xchg
dec
dec
cmpsl
mov
aas
jo
insl
mov
iret
adc
add
movsb
inc
xlat
scas
addl
and
xchg
xlat
movsl
jp
mov
leave
rcll
lods
test
xchg
or
cmpsb
adc
or
in
in
mov
in
hlt
cmp
mov
jbe
xchg
add
rorb
pop
and
imul
aam
inc
das
sub
pop
xchg
cmpsl
dec
sub
gs
test
push
pop
mov
xchg
dec
push
push
lock
inc
push
mov
xchg
push
xchg
mov
jle
mov
dec
cli
jmp
icebp
pop
rclb
nop
loop
es
popa
popf
idivl
mov
mov
aas
mov
clc
js
je
inc
or
lcall
mov
add
sub
mov
scas
lds
fiadds
xor
mov
je
ret
sbb
fsts
insl
push
sbb
xlat
ds
and
out
mov
mov
inc
in
ss
in
nop
xor
push
inc
sbb
sbb
xor
cmpsb
leave
pop
cmc
test
pushw
mov
cmpl
and
mov
stos
cld
or
sbb
sahf
adc
add
dec
stc
fisubrs
lahf
jl
into
lret
pop
fstl
fwait
xchg
jecxz
cmpsb
loopne
and
out
inc
xchg
push
outsl
cmp
in
push
iret
mov
sahf
enter
cmp
mov
sub
ss
lea
jo
push
adc
mov
mov
mov
push
test
jns
negl
jmp
js
je
mov
and
ljmp
daa
int3
inc
mov
jno
lcall
fistps
popa
jge
xchg
lock
outsb
xor
cli
inc
fiaddl
mov
lcall
sbb
loop
cmp
lock
lods
bnd
push
jecxz
sub
stos
push
fstpt
int3
scas
dec
in
insl
sahf
xor
jb
mov
mov
test
pop
jle
push
push
insb
or
xor
insb
and
add
and
mov
inc
test
cld
shr
or
daa
andl
stc
sub
adc
sub
adc
and
add
fcoms
leave
addl
fsubrl
mov
in
add
aam
faddl
mov
outsl
pusha
out
jecxz
jle
mov
push
lret
xchg
test
xor
aaa
insb
add
dec
pop
lcall
out
lods
pop
imul
shl
add
imull
add
mov
or
imul
jne
jo
pop
sub
adc
push
lock
mov
jg
xchg
mov
sbb
outsl
and
mov
cmp
xorb
into
mov
mov
cmc
sub
push
insb
adc
fistl
xor
jge
stos
push
push
daa
push
sub
add
sub
cmp
lock
scas
mov
jae
lret
data16
imul
fisubs
das
inc
xchg
jecxz
sbb
xor
fistpll
or
repz
mov
add
les
push
or
andb
js
inc
xchg
outsl
aaa
rorl
dec
in
adc
xchg
cmp
int3
fiadds
or
jge
leave
mov
mov
dec
mov
mov
in
xchg
inc
cs
outsl
inc
dec
adc
insl
mov
iret
mov
sbb
or
and
and
test
pop
int3
cmp
repz
pop
mov
fs
cmp
sub
loop
push
lods
imul
in
sti
or
data16
add
sub
mov
sub
jb
push
adc
pop
aas
iret
ret
mov
jmp
push
jl
or
jbe
inc
and
das
or
and
dec
sub
incl
in
adc
inc
cld
or
lahf
inc
fisttpl
dec
sub
lds
daa
sub
sub
sti
adc
iret
sub
ljmp
cmp
fists
mov
push
push
insl
mov
sub
test
int3
bound
icebp
cld
and
jl
sub
sbb
and
cmp
cmp
lds
testb
push
aaa
insb
gs
cmp
push
pusha
dec
or
rolb
dec
sub
xchg
and
movsl
push
sbb
sbb
out
mov
or
inc
push
xor
cmp
xchg
ror
mov
add
mov
push
cmpsl
cmp
pop
jb
xor
xchg
push
cltd
enter
rorb
aad
or
push
aaa
pop
cmp
and
shr
sub
push
pop
dec
xchg
mov
adc
popf
and
lret
testb
in
cs
xchg
push
adc
call
pop
and
dec
addr16
bound
inc
xchg
das
mov
jno
jb
sub
lods
jns
sbb
ja
int
lret
mov
mov
jae
shr
mov
aas
pop
negb
popf
fcompl
mov
mov
fldcw
sub
sub
sbb
movsl
xchg
cltd
test
xchg
sub
int3
incl
ds
adc
lcall
rcr
hlt
in
and
test
add
gs
jne
fcom
nop
neg
lea
aam
xchg
add
cmc
pop
ret
repnz
mov
enter
mov
ds
incb
mov
insb
mov
ret
mov
stos
add
sub
jbe
adc
insl
add
clc
push
dec
icebp
jmp
xor
fcomp
enter
jns
cmpsb
andl
xor
aad
push
fmuls
outsb
iret
add
shlb
or
test
js
pop
lret
push
gs
fistpl
pop
ljmp
inc
outsb
repnz
pushf
sub
inc
dec
rcl
roll
dec
dec
aad
test
mov
push
xor
push
lahf
leave
jo
cli
and
movsb
scas
into
insb
rcrb
mov
andb
jb
shl
add
push
and
xchg
inc
lahf
or
add
es
aam
ret
lock
outsl
push
inc
aad
repnz
sbb
push
dec
mov
loopne
mov
ret
inc
les
stc
cmp
cmpsb
push
add
cmp
negl
inc
sarb
lcall
repnz
dec
int
mov
ret
pop
xor
nop
mov
xchg
inc
in
dec
pop
and
aas
inc
lea
cmp
mov
push
stos
cmp
loope
jmp
imul
scas
xlat
test
inc
pop
test
or
iret
add
jmp
pop
mov
pop
daa
ret
je
cli
or
jb
mov
mov
mov
out
je
sbb
fs
fcmovbe
cwtl
in
jb
in
push
mov
xor
repz
pushf
and
xor
cltd
add
ror
call
icebp
out
insl
sbb
adc
sti
adc
mov
cli
popf
out
inc
xor
pop
adc
cmp
icebp
into
cmp
mov
mov
sub
fsubrl
xchg
leave
inc
jge
dec
and
add
stc
pop
stc
mov
pop
adc
das
cmpl
xchg
pop
outsl
pop
or
dec
and
dec
jbe
push
cmpsl
sbb
cmc
adc
add
mov
sbb
cmp
add
stc
dec
push
mov
notl
inc
rorl
or
dec
fcoms
jne
jb
out
inc
mov
clc
dec
cmpsb
lret
dec
addl
cmp
shrb
pop
pop
dec
mov
subb
mov
mov
mov
outsb
daa
add
int3
dec
sbb
mov
test
adc
xchg
sub
mov
jle
fld
push
push
push
push
insb
popl
cmp
idivl
shr
out
lret
dec
mov
xlat
mov
xchg
shrb
push
xchg
in
in
jge
jo
shrl
mov
jnp
xchg
adc
add
push
sub
jp
pop
cmp
inc
xor
jle
aam
stc
mov
sub
loop
clc
es
push
sub
insl
mov
cwtl
or
inc
js
push
jg
inc
lds
lret
cltd
imul
in
lock
cwtl
mov
clc
push
push
out
int3
jge
jo
call
add
pop
daa
iret
mov
lds
push
and
push
mov
pop
push
push
jmp
into
inc
dec
stos
add
add
sub
and
inc
loope
xchg
icebp
sub
adc
jmp
in
stc
out
xchg
jbe
pusha
dec
mov
xor
or
or
aad
int3
ljmp
dec
dec
aam
push
and
mov
mov
inc
mov
dec
xor
push
xchg
jle
adc
cs
and
popf
sub
es
lea
lods
in
fstps
xchg
sti
das
fiadds
inc
mov
or
loope
fstpt
ret
gs
or
mov
jge
and
xor
leave
outsl
loope
into
dec
push
push
mov
das
mov
loope
movsl
rclb
loope
sahf
outsb
inc
sbb
fists
les
stc
xchg
add
mov
les
cmc
sbb
movsl
clc
inc
loope
mov
ret
add
dec
fstpt
xchg
fnstenv
cltd
jge
int3
mov
icebp
mov
stc
lea
xchg
jno
mov
pop
scas
xor
jecxz
mov
into
push
movsb
rcl
xchg
pop
or
dec
mov
movsl
ret
ret
mov
iret
insb
std
cli
sbb
pop
jg
mov
lods
js
popa
popf
lcall
jb
imul
dec
ret
sahf
bound
cmc
sti
rolb
pop
aas
jge
pop
popl
jnp
or
out
jnp
xor
jno
add
lock
adcl
mov
and
bound
pop
mov
inc
jg
cmp
adc
dec
inc
inc
inc
push
cmpsb
mov
sbb
insl
js
add
insl
pop
sarl
inc
cmp
scas
jp
stc
dec
xor
jbe
mov
or
ret
xchg
dec
dec
xchg
push
out
add
andl
cmpsb
scas
out
js
pop
into
sub
push
stos
clc
sbb
aam
stc
add
cmp
xor
out
in
sub
fidivrs
cwtl
jge
rcll
mov
add
das
je
mov
add
mov
jmp
mov
add
sub
mov
sti
sbb
ret
mov
push
and
and
imul
jb
or
cmp
cmovle
aas
aaa
fcomps
xchg
jge
sub
jecxz
push
mov
xor
add
in
aaa
aaa
push
stos
shl
out
bound
addr16
idivl
lahf
xor
xor
inc
faddl
enter
mov
mov
je
cltd
cld
jbe
mov
loope
movsb
fcoml
mov
sbb
sarl
and
sbb
cltd
jbe
xchg
and
pop
xor
cmp
or
cmpsb
cmc
cs
loope
xor
repz
xchg
xchg
lds
mov
pop
dec
and
cmp
jge
lcall
imul
in
xchg
inc
nop
xchg
jl
icebp
mov
add
mov
xchg
imul
in
loope
popf
pushf
dec
inc
add
and
loop
or
test
vpackuswb
cmp
add
inc
adc
inc
iret
push
sahf
mov
movsl
adc
das
jo
xor
push
and
mov
test
or
xchg
subl
aad
inc
jbe
push
icebp
jbe
jle
dec
or
std
adc
adc
mov
fisubrs
loop
filds
rcrb
mov
sbb
pushf
mov
cmc
jl
imul
push
mov
sbb
xor
enter
mov
cmp
in
pop
std
rcl
outsb
cwtl
leave
xor
orl
add
xor
xchg
pushf
push
push
leave
popf
cltd
push
add
aam
iret
test
mov
cmp
clc
adc
push
mov
xchg
cmpsb
stos
push
jae
fwait
jbe
scas
mov
sub
jl
jb
hlt
iret
stc
ljmp
mov
icebp
loope
insl
cmpsb
jge
divl
lock
popa
inc
lock
push
mov
fnstsw
adc
mov
and
add
stos
fwait
add
fstpt
cmp
and
add
mov
lcall
add
sbb
sbb
mov
lods
daa
xchg
out
add
cmc
or
movsl
jae
cmp
nop
jns
dec
mov
inc
hlt
xor
inc
bts
inc
ljmp
add
push
push
sbb
or
enter
mov
fs
adc
adc
or
sub
sbb
or
mov
push
jns
add
cmp
lcall
je
or
xchg
push
sub
pop
cs
mov
xchg
cmp
loopne
js
cmp
imul
lcall
roll
cs
mov
shrb
insb
dec
leave
inc
mov
sbb
dec
dec
sbb
add
stos
in
inc
enter
sbb
and
cltd
add
out
incb
icebp
mov
sub
xchg
insl
xchg
hlt
fs
or
mov
mov
and
or
xchg
cld
call
in
jl
or
pop
and
jp
push
sbb
inc
or
dec
push
in
pop
lock
in
scas
push
and
adc
ja
jle
insl
aad
mov
inc
mov
into
pop
cmpsb
sarl
jae
lahf
mov
divl
jecxz
and
js
icebp
out
xor
jb
pop
test
es
arpl
adc
out
sub
movsb
dec
stos
fwait
in
je
pop
or
jns
bound
roll
aam
clc
or
test
dec
sahf
xor
shrb
xor
dec
popf
mov
cli
adc
aam
shl
in
stc
int3
aaa
addr16
fisttpl
mov
pop
push
and
scas
cld
xor
adc
fwait
cmp
setae
add
test
jl
js
fstpl
pop
and
xchg
enter
call
ljmp
scas
sbb
sbb
sar
mov
lods
bound
xor
xor
inc
cli
push
rcll
aaa
mov
push
stc
jmp
stos
xchg
cmp
loopne
cwtl
or
jnp
stos
in
xchg
push
mov
inc
repnz
shll
in
dec
pop
fadds
pushf
cmp
fisttpl
jecxz
je
xor
addr16
xchg
cmp
push
xchg
stos
fninit
in
pop
fwait
mov
pop
xlat
inc
xchg
lahf
cmp
push
mov
xchg
push
push
cltd
dec
sbb
jae
shrb
dec
jo
xlat
or
popf
jecxz
xchg
fsubs
outsb
aam
dec
in
ror
adc
test
repnz
lahf
mov
hlt
xchg
mov
repz
rcr
jno
mov
cmpsb
lret
or
test
or
jp
and
int
out
xor
and
lret
cmp
inc
loop
ret
cmp
mov
gs
sub
popf
fisttpll
xor
fistl
aad
sub
mov
adcl
mov
mov
cmpsl
sbb
jg
pop
inc
mov
outsl
and
mov
mov
pop
out
lods
int3
sub
lret
std
jmp
dec
je
adc
scas
jb
and
daa
leave
fadd
fsubr
pop
outsb
in
je
mov
outsb
hlt
xor
insb
scas
icebp
jg
into
cs
scas
arpl
subb
ret
fisttpl
jns
add
daa
mov
xchg
orb
into
data16
xor
jo
sub
aas
sahf
xchg
stc
mov
fadds
add
lcall
sub
mov
in
cld
or
lock
and
aam
inc
or
jmp
fdivrl
add
jmp
xchg
dec
xor
leave
mov
cwtl
push
arpl
out
mov
mov
or
sub
jae
dec
mov
dec
arpl
pop
es
sbb
sbb
pop
jl
test
xchg
sahf
cwtl
xor
or
lahf
cmp
adc
fldt
movsb
add
dec
mov
clc
xchg
subb
cwtl
push
fidivrs
rorb
fnstcw
inc
addb
fldt
insb
xchg
int
in
push
popw
clc
mov
jne
push
mov
popf
jge
dec
andl
adc
cmp
fdecstp
and
xlat
repnz
add
je
popa
sub
mov
aam
sub
sub
sbb
stc
xchg
jbe
mov
pop
or
je
pop
inc
mov
iret
mov
shll
scas
or
pop
push
sub
jo
jp
ljmp
cmpsl
push
jnp
sub
mov
bound
inc
aaa
adc
fildl
arpl
xlat
dec
or
push
jne
inc
mov
lea
data16
lock
xchg
mov
jo
adc
mov
mov
pop
mov
sub
mov
hlt
and
inc
test
out
inc
sub
mov
aas
addr16
jnp
int
xchg
mov
insb
in
cld
jo
xor
rorl
cld
clc
lret
stos
mov
push
sbbb
and
in
negl
xor
mov
iret
mov
insl
push
cmp
cs
xor
nop
insb
add
xchg
or
neg
aas
xchg
lahf
sub
stos
sbb
sub
and
cs
leave
mov
dec
std
daa
xor
push
sbbl
add
xchg
pop
jl
push
sub
dec
xor
les
into
mov
jb
xchg
aad
std
bound
jecxz
xchg
jb
xor
sub
scas
repnz
scas
lods
cmp
cmpsb
xchg
jg
popa
sldt
imul
cltd
or
cmp
sbb
fdivl
mov
jbe
outsl
lret
sbbb
jl
jmp
dec
lret
push
rcr
pop
cmpsb
ficoms
pushf
jae
jne
loopne
mov
shll
arpl
sbb
push
mov
int
mov
push
repnz
jb
jge
sbb
sub
push
repnz
imul
inc
movsb
dec
mov
pop
test
sysexit
sbb
and
test
into
xchg
xlat
mov
out
sbb
repz
jmp
sub
adc
ret
jnp
das
mov
xchg
jp
jae
fstps
sub
or
popa
fcmovne
xlat
inc
xchg
out
xor
test
push
lds
in
adc
cwtl
add
push
rorl
or
xchg
mov
and
into
jmp
mov
adc
lahf
fisubrs
xorl
xchg
jmp
pop
cmp
cmp
enter
dec
popf
pushf
les
or
mov
shlb
mov
jmp
arpl
cmpsb
dec
aas
and
mov
jp
lret
lcall
sbb
xor
cmp
popf
push
out
ds
lds
lds
sub
shlb
out
insl
loopne
les
ds
stos
aam
imul
jne
jle
sbb
ret
mov
xlat
out
jecxz
push
sbb
inc
lret
roll
mov
andb
leave
rcll
je
in
out
data16
push
dec
pop
sbb
cmp
loope
or
aas
in
add
and
stc
pop
hlt
add
sbb
or
pop
cwtl
jns
push
inc
cmpl
les
push
ss
or
mov
loopne
cmp
sbb
xchg
dec
push
div
jg
xchg
xchg
pop
jns
bound
push
sub
out
lret
jnp
push
dec
ret
scas
test
xchg
mov
pop
sbb
sbb
and
icebp
sbb
xlat
repz
and
jmp
cltd
pusha
or
shl
pop
pusha
fsts
orb
movsb
cli
jl
fwait
dec
push
dec
add
mov
out
xor
sub
cs
fisubrs
out
dec
out
into
mov
mov
fwait
jb
addr16
insl
mov
cmp
push
jnp
xchg
popa
ljmp
outsb
leave
sub
inc
sbb
mov
jo
mov
or
mov
popf
les
sbb
test
pop
popa
jg
cli
jbe
cwtl
xchg
or
xchg
jmp
push
ficompl
mov
nop
scas
push
das
sub
mov
cwtl
pop
inc
fidivrs
inc
cmpsb
fnstcw
inc
in
jnp
push
dec
testl
ss
xchg
push
popf
mov
jns
xor
inc
pop
out
sbb
xor
sub
push
or
stos
out
addr16
jmp
jecxz
push
pushf
cmc
or
cmp
arpl
aas
jp
aaa
add
negl
into
xor
aad
mov
fwait
bound
dec
push
mov
cltd
or
push
arpl
stc
insl
push
and
or
xor
rcrl
or
xlat
imul
in
inc
lock
pop
ficoms
cmp
insl
add
leave
xor
jns
pop
lret
cs
jmp
test
and
jne
loopne
lods
jp
outsl
jmp
sbb
subl
imul
cmp
cmp
ret
outsb
and
das
add
mov
clc
ljmp
xchg
imul
hlt
stc
lock
mov
fsubr
jecxz
lcall
mov
and
nop
sbbl
and
enter
es
adc
shlb
pusha
sbb
lret
sbb
or
jmp
pop
mov
dec
inc
cmpsl
mov
sbb
not
jnp
imul
pop
call
fildl
std
outsb
xchg
xchg
and
cmp
aas
cs
lock
into
inc
ret
xlat
call
push
scas
loopne
stos
arpl
mov
or
vpmaxsw
push
xchg
iret
ret
jge
addr16
inc
mov
dec
hlt
cmc
add
jg
ljmp
pop
jae
into
lea
out
lahf
inc
imul
lods
lret
sahf
addr16
movsl
pop
test
inc
mov
xor
adc
in
pop
dec
lcall
push
test
pop
jnp
cmp
cmp
std
mov
scas
adc
test
mov
jbe
aas
and
mov
ss
loop
push
xor
lret
imul
sub
fsubrs
mov
lcall
cmp
lcall
mov
enter
mov
sti
cmp
daa
inc
and
mov
jns
negb
xchg
scas
push
fbld
xchg
push
mov
enter
mov
out
jno
jo
dec
pop
push
xlat
inc
and
and
shll
pop
dec
sub
jbe
js
xor
jnp
sbb
jecxz
test
push
fnsetpm(287
push
jl
pop
test
sub
popa
nop
add
or
bsr
adc
int
dec
stos
shl
and
cmpsl
sahf
imul
adc
repz
sub
aas
pusha
xchg
add
loope
pop
outsb
lret
iret
orb
dec
push
fs
cld
insb
mov
push
dec
mov
fists
mov
inc
mov
bound
mov
push
sbbl
pusha
test
lods
bound
push
in
ss
imul
lea
dec
ret
mov
lret
mov
hlt
movl
leave
ret
mov
inc
cwtl
and
mov
and
movsl
filds
push
imull
jnp
and
add
dec
cmpsb
daa
sub
xchg
jb
pop
jmp
mov
mov
push
and
cld
loop
mov
push
push
jae
sub
adc
push
adc
pop
popf
mov
cmpb
xchg
jnp
and
dec
push
mov
pop
and
xor
lcall
stc
in
mov
mov
pusha
aas
dec
cmp
or
jl
add
fs
adc
push
lret
cmp
xor
push
sbb
mov
cmc
cltd
sub
and
rcr
test
adc
popa
movsb
push
out
xor
add
outsl
sub
adc
inc
cld
daa
test
jae
cmp
inc
inc
mov
aaa
movsl
dec
cmc
popf
shlb
sbb
or
enter
aaa
sub
icebp
lret
cmp
mov
xor
lea
cmp
cltd
pop
xor
jns
add
xlat
sbb
jno
in
push
pop
inc
jmp
out
test
inc
ret
inc
push
iret
test
sarb
lret
mov
rol
lods
xchg
and
adc
mov
sbb
test
stc
sub
mov
movsb
imul
ret
scas
add
mov
xchg
xor
movsl
testb
dec
fsubrs
dec
fdivrl
inc
mov
cmpsl
mov
and
push
data16
push
or
inc
cli
and
imul
mov
ljmp
imull
sub
sub
ret
jg
cmpb
lock
mov
cmp
pop
sub
xchg
inc
mov
test
imul
push
jle
cmp
stc
xchg
jne
mull
pop
jge
loop
push
jl
push
sahf
test
pop
call
cltd
sbb
test
mov
push
add
add
out
xlat
cmp
sbb
sbb
pop
pop
seta
loop
shl
jo
sbb
popf
rcll
sub
lock
xchg
and
int
jge
sbb
aad
test
pop
pop
or
mov
jl
mov
xchg
mov
push
xchg
push
jbe
mov
fldt
loopne
mov
fstpl
or
mov
mov
or
mov
push
push
insb
ss
fldcw
push
imul
or
mov
or
popf
mov
pop
xchg
or
stos
xchg
add
iret
cld
fwait
add
cwtl
pop
jno
add
in
stos
mov
aad
jo
in
push
sti
outsl
push
mov
call
inc
fmulp
jge
mov
or
decl
les
xchg
and
push
ds
ret
adc
fst
pushl
es
mov
add
lret
je
xchg
or
push
mov
inc
mov
or
add
outsb
sbb
push
mov
stos
es
and
xchg
shlb
inc
call
pop
icebp
fs
add
adc
or
pop
leave
xlat
sbb
fstpl
push
xchg
das
sarl
stc
inc
pop
mov
ret
mov
out
imul
cli
call
outsb
xor
mov
or
pushf
aaa
mov
push
sbb
add
in
xorl
in
adc
cmp
inc
or
cmp
je
mov
ss
scas
bound
pop
movsb
cmpb
lock
adc
mov
ss
arpl
negb
mov
cmp
lds
jbe
es
pop
fimull
into
jb
mov
inc
leave
sbb
push
pop
dec
fidivs
dec
or
cmc
lret
push
cmp
sti
lock
mov
scas
mov
lds
ficompl
dec
push
test
mov
outsl
mov
sbbl
pop
stos
psraw
enter
data16
rol
xchg
inc
add
imul
push
js
pop
mov
adc
push
in
je
inc
sbb
add
pop
push
pushf
sub
and
ret
aas
mov
outsl
leave
je
mov
xchg
inc
lock
mov
add
xchg
popa
jmp
in
jle
mov
push
or
mov
stos
ror
and
std
idivl
in
inc
stos
out
jecxz
aam
xchg
pop
lret
jecxz
jmp
popa
rcr
repnz
jmp
xchg
bound
test
push
xchg
sbb
ja
lret
pop
mov
iret
lea
cmp
mov
std
roll
push
addr16
push
popa
shl
inc
das
jle
xchg
pop
insb
pop
in
inc
lret
out
pop
pop
fsts
icebp
je
shll
ret
mov
test
outsl
adc
adc
in
loopne
outsb
push
or
push
jae
cltd
cmpsl
mov
rol
or
jmp
int
es
aaa
pop
pop
lahf
cmp
add
outsb
ss
sbb
rclb
testb
lock
push
je
dec
fsincos
mov
pop
sbb
add
sbb
dec
add
test
sub
cmpsb
out
int
add
pop
loopne
shrl
lea
mov
mov
movsl
scas
lahf
jae
incl
test
or
out
xlat
out
jno
mov
pop
sbb
sub
cmp
rorb
rorb
push
gs
movsb
test
enter
dec
nopl
push
sbb
cmpb
cld
mov
sti
pop
cmc
push
roll
cmp
mov
mov
xchg
cwtl
js
inc
jno
inc
call
pop
inc
imul
mov
xchg
test
add
fs
cmp
outsl
pop
cmp
stos
jl
cs
lock
mov
cmp
mov
push
fidivrs
sahf
dec
pop
jmp
ds
rolb
xchg
mov
mov
jbe
cli
addb
add
mov
out
push
pop
xchg
iret
or
or
std
cmpsb
push
mov
mov
push
jb
aaa
mov
jno
mov
popa
je
push
fidivrs
daa
cs
imul
xor
loop
dec
sub
cwtl
jmp
pushf
fmul
std
sub
xchg
outsb
xor
sub
cmp
xchg
and
js
pop
rcll
jno
outsl
arpl
lds
mov
mov
mov
mov
dec
add
jp
sarl
sarb
cmpsb
adc
adc
gs
or
call
sbb
jne
adc
jecxz
jmp
shrb
es
ljmp
xor
mov
cmc
sub
adc
add
sarl
movsl
pop
and
notb
sti
jbe
sahf
and
jmp
pushf
push
rorl
sub
aas
push
or
jmp
clc
xchg
push
arpl
add
sub
out
roll
aas
pop
sub
push
cmp
in
sbb
pop
xor
sub
jae
aaa
call
pop
lods
stc
loop
mov
sub
daa
and
xor
gs
fcmovnbe
mov
or
imul
cmp
outsl
into
and
adc
xchg
jb
inc
xchg
and
lods
mov
popa
cmovae
mov
xchg
js
pushf
sub
mov
adc
xchg
xlat
sbb
mov
or
dec
pop
sub
sub
adc
cltd
lret
cmp
xor
dec
pop
cmc
mov
xchg
xchg
cmp
pop
add
dec
mov
out
repz
lods
inc
mov
in
rcrl
inc
lahf
pop
mov
aaa
jae
or
push
lds
jmp
mov
sub
sar
out
sub
jl
cmp
adc
xchg
or
inc
sbb
hlt
fxch
pop
outsb
push
inc
jo
mov
sbb
sahf
sbb
sbb
jnp
push
mov
testl
lds
and
push
hlt
mov
fsts
cmp
mov
sahf
mov
insl
clc
jle
mov
cld
mov
inc
mov
dec
add
or
arpl
lods
movsb
cltd
in
dec
gs
inc
daa
arpl
gs
push
cmpsl
fists
xor
cmp
shlb
sbb
dec
fs
filds
sub
push
mov
fnstenv
xchg
cltd
adc
test
mov
stos
push
pop
mov
or
fistpl
enter
mov
insb
cmp
sub
sub
mov
sbb
ret
jno
push
inc
ret
push
lods
adc
in
notb
lcall
or
jnp
aad
jmp
int3
stos
sbb
adc
int
add
push
xor
in
push
pop
repz
outsb
and
sbb
out
aad
cmp
pop
xlat
insb
sbb
jp
shll
std
insl
test
fstpt
mov
sub
ds
decb
push
inc
and
stc
and
jns
dec
repz
mov
fisubrs
stos
addr16
subb
inc
pop
mov
jnp
add
aaa
lods
jle
rorb
mov
xor
mov
hlt
movsl
or
push
dec
jg
lret
push
js
push
push
xchg
xor
sahf
mov
out
sub
pop
cltd
scas
clc
orl
push
addl
push
and
arpl
outsb
pop
mov
or
and
outsl
cwtl
adc
pop
nop
popf
cli
movl
bound
and
cli
push
cmc
jb
fcoml
arpl
or
mov
and
inc
and
sarb
imulb
push
xchg
add
and
and
rcr
fs
jns
lods
xor
xor
sub
rclb
rcl
jno
pusha
insl
push
imul
or
or
mov
pop
jmp
insb
stos
cmp
dec
mov
js
mov
nop
lods
push
cmp
inc
rcrl
or
rol
sub
in
sbb
insl
cmp
loopne
push
jno
add
dec
mov
repz
jp
imul
fcmovnb
push
pushf
pop
dec
sub
or
inc
daa
xlat
into
push
jl
es
rorb
jo
fsubr
fisttpll
insb
dec
jne
cmp
push
mov
mov
outsb
fadd
push
mov
adc
je
lret
rcr
addl
sbb
fs
sbb
mov
cmp
idivb
and
inc
adc
mov
inc
lods
xchg
loop
cmp
dec
movl
test
sbbl
and
pop
dec
cmp
pusha
out
roll
stc
pushl
dec
fidivl
insl
jb
les
jmp
mulb
negb
hlt
sahf
xchg
mov
cmp
cmpsb
rorl
rclb
mov
sub
fidivrl
dec
paddusw
arpl
ret
mov
pop
cmp
mov
cmpsb
mov
add
outsb
dec
test
dec
push
test
dec
std
inc
pushf
pop
sbb
lret
inc
adc
add
xlat
arpl
fcoml
push
aas
xor
gs
pop
roll
pop
cmpsl
popa
mov
enter
mov
mov
add
push
outsl
cmp
dec
pop
jg
or
repnz
sub
push
je
popf
call
into
imul
inc
int
mov
and
mov
movsb
inc
and
pop
mov
jns
or
iret
or
aas
push
and
dec
jl
dec
jae
loop
bound
mov
aad
pusha
jmp
xchg
popl
into
sbb
je
mov
inc
aaa
jp
or
dec
xlat
jae
arpl
nop
pop
cmpsl
and
aad
cmp
cld
pop
mov
sbbb
es
sub
mov
mov
xchg
insb
mull
and
push
lahf
pop
sbb
leave
into
mov
or
movsb
sub
jae
popf
aam
out
lea
or
jl
push
cmp
push
add
mov
adc
cmpsb
lds
xchg
into
hlt
adc
adc
push
or
outsl
out
jno
jnp
mov
insb
sbbb
push
mov
push
out
popa
ficoml
out
ds
xchg
movsl
or
test
inc
jae
fwait
xchg
push
jo
sub
cmp
in
lock
sub
pop
lret
mov
push
adc
repz
mov
push
dec
mov
shr
nop
xchg
inc
sub
add
push
inc
mov
mov
ret
and
test
packssdw
xor
scas
mov
xor
in
orl
jne
dec
cli
inc
inc
dec
or
mov
pop
push
into
sub
and
sbb
aas
inc
out
in
cli
or
lock
add
xor
aad
jle
inc
lcall
pop
add
mov
mov
test
ficoml
inc
cmp
insb
cwtl
sti
push
xor
lahf
xor
mull
pusha
push
lods
inc
cmc
movsb
repz
xor
and
jp
mov
xchg
jno
adc
lcall
push
mov
jno
pop
add
or
fmulp
arpl
cmpb
sbb
subl
cmp
jle
ja
dec
dec
or
das
xor
sti
and
xlat
jle
or
xchg
enter
mov
push
iret
jl
mov
fcmovnbe
lds
sbb
sub
dec
sbb
es
and
fwait
cmp
add
fwait
pop
and
inc
incl
mov
jo
adc
pop
mov
ret
repz
mov
aas
sub
xor
dec
adc
xor
popa
cmp
mov
push
add
mov
xlat
jne
mov
jg
cwtl
rorl
insb
dec
sbb
or
adc
in
sbbl
pop
sub
lcall
bound
sbb
out
push
jge
inc
or
test
idivb
cmp
pusha
sub
test
or
add
adc
sub
jae
jae
adc
test
or
pop
cmp
jo
frstor
in
cmpsb
push
or
dec
dec
cmp
xchg
std
xchg
cwtl
or
cmpsl
cld
mov
hlt
and
sub
inc
outsb
mov
clc
and
scas
repnz
or
imul
push
mov
rcll
lret
subl
fidivs
xor
stc
cmpsl
lcall
push
pop
mov
or
in
orl
fisttpl
mov
mov
xchg
cltd
jnp
jb
scas
xchg
adc
cmp
jb
dec
lcall
aam
js
call
aaa
xchg
lahf
pop
xchg
aam
mov
loope
call
push
in
add
addr16
ljmp
xor
add
out
dec
loopne
es
das
insb
pop
stos
pop
aas
xorl
test
sub
cwtl
xor
mov
jge
inc
repnz
in
test
ret
lds
adc
aad
imull
rorl
ficomps
idivb
fcmovnb
lcall
leave
xchg
add
adc
or
cmp
rclb
cwtl
jbe
lret
xor
and
cld
fs
and
sahf
sarl
push
nop
inc
mov
ds
testb
rcrb
or
cmp
cmp
std
push
jg
push
push
xchg
cmp
xor
mov
mov
xor
mov
fidivs
ret
sbb
jo
lahf
and
xchg
pop
jle
jmp
xor
xchg
xor
pop
decb
aad
sub
nop
cltd
inc
push
fcmovbe
pusha
sbb
shll
xor
or
js
jns
insb
enter
sahf
adc
dec
inc
jecxz
cmp
jns
mov
sbb
int3
out
fnstcw
mov
inc
mov
push
push
jb
subb
or
sbb
rorb
lret
or
mov
out
popf
pushf
push
sahf
inc
ficompl
lock
cmp
mov
adc
jecxz
int
mov
pop
aad
mov
inc
mov
bound
shlb
jo
movsb
or
cmpsl
sub
cltd
fists
cwtl
or
lods
mov
mov
dec
pop
mov
sbb
loopne
add
mov
xchg
and
imul
or
jns
test
cmp
lock
dec
lret
add
or
lock
les
pop
add
stc
push
cmp
loopne
mov
cltd
pop
add
mov
push
mov
fimull
mov
aam
outsb
cwtl
mov
inc
movsl
mov
push
push
lods
hlt
or
dec
sub
in
insl
aas
dec
mov
pop
mov
dec
into
dec
cmp
clc
in
dec
into
pop
fdivrl
jmp
loopne
and
push
cmpsl
dec
add
popf
cli
cmp
mov
outsb
xor
push
push
and
or
shll
mov
mov
mov
dec
roll
xor
mov
pop
mov
outsl
jecxz
adc
xchg
mov
sbb
mov
pop
xchg
dec
xor
test
in
push
sub
in
call
add
cmc
out
xor
ja
dec
mov
iret
cs
push
mov
xor
gs
xchg
repz
pushf
push
inc
pusha
sub
mov
fsubrl
push
cmpsl
cmp
pop
scas
inc
fcoms
imul
inc
imul
gs
jno
dec
fimull
pop
into
aad
test
xchg
mov
inc
xor
inc
lock
out
jae
mov
xchg
jp
push
sub
add
lret
gs
int3
add
mov
cmp
loop
xchg
std
and
mov
scas
sti
sbb
jnp
jbe
sub
and
jle
stc
sub
repz
pop
and
mov
jl
loope
xor
cwtl
sub
mov
push
inc
iret
push
idivl
xchg
jbe
fistpll
fildl
add
jmp
mov
das
ja
mov
push
push
fisttpll
and
das
push
add
je
pop
lcall
mov
sbb
ljmp
sub
je
fbld
mov
sub
dec
mov
add
cmp
lret
pop
sbb
pop
lahf
jne
inc
pop
xor
das
lahf
mov
mov
and
push
jp
loop
icebp
rclb
cmc
cmp
out
lcall
push
mov
cmc
xchg
cmpsb
clc
ret
stc
and
dec
and
loope
stos
lock
inc
sbb
int3
xchg
pop
sarb
jmp
cmpsb
mov
dec
jnp
cmp
rorb
fimull
cmp
add
mov
jecxz
sub
jg
dec
int
dec
dec
jl
lss
jg
xchg
enter
lcall
fnsave
divb
cmp
pushf
mov
adc
int3
lds
mov
mov
loop
lea
push
jno
and
sub
je
lcall
adc
adc
push
mov
cmpsb
nop
scas
cltd
scas
mov
ret
xchg
cs
insb
cmp
xchg
and
repnz
sub
in
pop
ficoml
fcompl
test
gs
xadd
adc
push
or
fldl
ja
int
dec
sub
fs
push
mov
mov
fsubs
sbb
xchg
xchg
lret
pop
andl
cmp
test
push
jp
mov
add
jae
fiadds
stos
mov
cmp
jge
dec
das
or
mov
adc
and
push
in
data16
enter
incw
fdivrs
iret
xchg
cltd
inc
xchg
bound
sbb
pop
adc
jnp
xchg
mov
call
adc
pop
adc
jp
test
shr
mov
in
test
enter
mov
xchg
aas
in
fdivrl
ret
mov
mov
rorb
in
mov
mov
pop
mov
mov
adc
and
inc
pushf
xchg
mov
mov
repnz
pop
cmpsl
xchg
insb
jle
xor
mov
shlb
mov
test
jne
iret
imul
fisttpll
ljmp
push
and
inc
inc
pop
push
mov
jnp
sahf
push
cmc
cmpsb
cmp
insl
fcompl
scas
pop
sub
push
vpunpckhbw
leave
rorl
xor
inc
pop
ja
or
aam
rcrl
aas
imul
mov
pop
ljmp
movsl
fcoms
xchg
je
inc
add
push
cmp
push
test
xor
shrb
mov
lock
cmc
mov
les
fsts
or
mov
sbb
or
jmp
jecxz
lods
mov
add
and
outsb
cmp
sub
pop
fdiv
xchg
cmp
mov
movsb
cmp
loopne
inc
sbb
js
push
fs
dec
xchg
nop
xor
mov
icebp
xchg
and
pop
xor
jl
in
outsl
push
inc
cld
sub
lahf
in
jns
xchg
scas
push
xchg
adc
ja
jecxz
mov
dec
sbb
inc
inc
dec
mov
ljmp
scas
aad
out
loop
scas
mov
push
stos
sbb
aad
push
mov
arpl
std
cmpsb
xchg
addr16
stos
dec
pop
mov
imul
jge
or
js
insb
adc
push
push
lea
int
xchg
pop
push
adc
adc
push
test
pop
jno
xor
mov
sbb
push
pop
nop
push
mov
int
mov
push
push
push
pop
movsl
add
hlt
xchg
icebp
scas
cmp
lods
jge
enter
in
push
dec
xchg
in
fistpl
cmp
cmpsl
out
xchg
xchg
es
popf
mov
mov
je
mov
mov
cmp
sbb
bound
test
cmpsb
sbb
jo
pop
fnsave
loope
mov
push
mov
sbb
add
fs
adc
pop
adc
jl
fidivs
jg
cmp
sbb
sbb
mov
lods
fnstenv
xor
pop
sub
iret
gs
and
dec
mov
cmpsl
inc
cwtl
cmpb
cli
cli
fidivs
xchg
loope
inc
aas
int
popf
rorl
xchg
cmp
std
bnd
call
sub
cmp
jecxz
jae
fs
fchs
repz
lret
inc
xchg
inc
out
jae
add
or
testl
and
outsb
dec
cld
sub
fistps
xor
mov
mov
fcompl
sbb
jge
cld
cli
insl
pop
lock
into
push
je
lds
push
mov
sub
xor
adc
xchg
fidivl
or
frstor
ret
adc
xchg
rorl
hlt
adc
outsl
scas
push
or
pop
fidivrs
jge
scas
repnz
pop
dec
orb
std
cli
out
stc
lcall
xor
inc
negb
xor
cltd
fwait
imul
out
int3
or
mov
pushf
sub
in
or
mov
cmpsl
das
inc
lahf
jno
xor
in
fstl
pop
adc
add
and
jge
and
sti
pop
cvtpi2ps
shlb
push
jmp
lcall
push
insb
xor
das
leave
shll
lahf
in
imul
outsb
sahf
cmovl
scas
pop
int
and
jnp
test
xchg
cmc
lahf
out
cmpsl
mov
pushf
daa
sbb
sub
sbb
adc
fwait
jb
lods
pop
test
dec
rcrb
add
enter
pop
add
push
inc
add
insb
or
xor
mov
mov
and
mov
data16
push
xchg
int
jb
pushf
xchg
inc
aam
sbb
mov
adc
add
adc
lods
aaa
cmc
test
mov
add
outsb
and
jno
fdivs
jmp
int
push
xor
jp
inc
icebp
lods
and
push
into
cwtl
enter
inc
lods
jmp
mov
ja
mov
ffree
dec
xlat
xor
insl
repnz
pop
xor
fsubs
popf
mov
lock
adc
push
dec
clc
sub
inc
xchg
mov
dec
xor
mov
or
insl
aad
xchg
mov
mov
stc
cwtl
mov
movsb
enter
call
xchg
push
scas
jmp
nop
in
outsl
jmp
cmp
in
lret
int3
push
add
gs
sahf
std
fisttps
adc
jae
xchg
or
lods
mov
in
sahf
xchg
add
jbe
mov
loop
mov
leave
mov
add
sub
add
jno
xchg
sbb
int3
rorl
fsts
loop
int3
mov
fcoms
hlt
pop
scas
or
movsl
stos
xchg
lcall
fmul
imul
mov
into
cltd
push
test
xlat
jo
or
inc
sbbl
sub
sti
aad
imul
pop
mov
mov
pop
push
xchg
mov
test
gs
jp
xchg
jmp
xchg
fdivrl
dec
test
xchg
sub
fsubs
loope
into
movsl
loop
pop
mov
gs
in
aaa
push
scas
sbb
mov
xor
movsb
add
out
and
xlat
lahf
fiaddl
lock
xchg
fiaddl
xor
mov
filds
add
shlb
adc
pop
xor
xchg
mov
jecxz
inc
out
adc
or
xor
jp
ljmp
cmpsl
mov
mov
and
jmp
pop
add
cmp
push
mov
lahf
push
cmpsb
dec
mov
sbb
out
daa
jne
nop
cmp
add
mov
inc
clc
jns
pop
nop
lods
arpl
adc
cmpsl
sbb
in
mov
push
loopne
adc
add
or
lcall
push
xor
mov
fcomi
fimuls
mov
je
add
call
xor
in
cmp
sub
mov
aad
push
mov
mov
pop
cmp
inc
mov
cmp
lahf
pop
out
inc
cwtl
jo
push
test
or
adc
ficoms
and
sub
sar
jne
xchg
incb
inc
adc
int
push
mov
movsl
enter
je
repz
insb
inc
dec
inc
divb
gs
push
jae
iret
in
sub
jl
jbe
shll
popa
out
push
inc
aam
jns
push
jge
lock
hlt
pop
jge
mov
lods
dec
inc
lods
push
push
std
or
cmp
aad
mov
pushf
xor
mov
out
js
or
test
xor
sub
add
daa
daa
lret
shlb
cmpsb
dec
sbb
les
or
dec
and
push
les
out
aad
push
pushf
cmp
pop
sbb
push
mov
icebp
lock
fcomps
push
inc
clc
and
xor
mov
bound
or
and
jg
fstpl
outsl
xchg
dec
lcall
sbb
xchg
lahf
test
cmp
xchg
push
scas
adc
in
cmc
xorb
inc
jg
cwtl
lock
cmpsb
xchg
cmp
push
adc
and
subb
pop
and
mov
jo
jg
lock
in
xchg
cmp
lret
inc
adc
dec
add
scas
popa
push
arpl
pop
adc
in
push
call
movl
mov
out
adc
insb
push
call
xlat
push
add
dec
pop
jle
aad
clc
loope
mov
add
inc
adc
lahf
sbbb
mov
std
push
mov
sbb
jp
xor
repz
xor
fiadds
testl
xchg
jg
arpl
xor
popa
out
pop
fwait
sbb
daa
xor
cmp
popf
ds
xor
imul
add
mov
popa
addr16
shll
pusha
inc
popa
xlat
inc
mov
dec
inc
mov
lret
adc
dec
xor
nop
dec
outsl
cmc
xor
insb
stos
adc
mov
scas
stc
xor
and
fwait
nop
pop
mov
aam
xchg
ds
push
mov
lahf
shll
out
sub
das
scas
add
push
call
in
jae
clc
ret
lret
ss
pop
outsb
stos
pop
pop
pop
mov
jl
cmp
sbb
out
data16
jmp
sub
pop
cmp
or
xchg
es
dec
addr16
lock
add
mov
pop
inc
dec
inc
push
aad
fsin
adc
scas
jecxz
fcmovu
jl
lds
lock
testl
jp
aas
out
mov
xlat
and
sbb
jo
int3
popf
inc
fcmovnu
cmp
jnp
mov
jge
or
push
fistl
cmpsl
repnz
cli
daa
negb
adc
outsl
push
pushf
adc
add
inc
hlt
es
push
adc
pop
dec
rcrl
fidivl
aad
stos
adc
add
and
fdivrp
push
sahf
add
mov
cli
add
xchg
pop
ret
sar
xchg
ret
mov
xor
outsb
out
and
inc
roll
int3
aad
jb
test
test
inc
ds
stos
pop
loope
lcall
or
sbb
xchg
pop
fcoml
dec
loope
mov
push
push
cmp
push
pop
xchg
mov
fcomip
or
loopne
cmc
and
xchg
mov
cmp
lds
xlat
ret
in
leave
push
jl
mov
mov
mov
jl
imul
in
push
inc
outsl
or
jg
sbb
mov
jecxz
inc
fmuls
std
addr16
sahf
push
cwtl
pop
push
jge
xor
sti
aaa
xorb
mov
in
cmp
xor
in
ljmp
and
jecxz
ss
sbbl
repnz
and
testb
sbb
inc
into
in
aas
nop
das
ja
test
lret
insl
icebp
or
test
pop
mov
mov
arpl
push
jge
insb
aas
cmp
into
adc
pop
lds
and
dec
iret
test
xchg
imul
and
insl
js
or
jge
in
mov
inc
mov
outsb
imul
dec
es
sahf
lock
pop
jae
mov
and
cs
ja
ret
or
ret
xchg
cmpsb
cmp
mov
ds
push
lahf
pop
call
fildll
dec
add
xchg
mov
xor
and
mov
dec
cwtl
test
insl
or
outsb
mov
sub
out
fists
fwait
and
sahf
mov
cmp
int
outsl
test
mov
mov
push
cwtl
cmpsb
rcr
mov
and
es
rorb
jnp
add
push
imul
cmp
ficoml
out
scas
daa
add
sbb
xchg
stc
sub
sarb
shll
data16
jmp
xor
push
cs
mov
xchg
sbb
dec
call
and
cmpsl
mov
ss
or
dec
pop
or
cmpsl
fbstp
outsb
sbbb
fisttpl
or
jecxz
sar
fisttps
pop
sub
mov
sbb
add
test
and
dec
jns
pop
mov
pop
lds
mov
dec
sbb
xchg
jbe
mov
add
movsb
push
push
adc
jns
add
loope
sbb
jo
jle
jp
adc
pop
sbb
dec
fisttps
jno
int3
xchg
and
roll
xor
jp
inc
pop
jmp
lea
mov
or
xor
mov
jle
ja
xchg
bound
bound
imul
test
mov
shrl
cmp
pop
imul
cltd
xchg
jne
mov
xor
push
scas
fsubrl
sbb
test
xchg
push
push
dec
in
mov
jge
stos
inc
fstps
sub
cmp
dec
popa
or
cmp
jl
mov
xchg
lock
sbb
leave
lcall
jg,pt
push
adc
imul
lock
inc
mov
push
add
push
dec
in
jbe
jmp
loop
aas
fwait
or
xchg
adc
gs
out
cmc
repz
pop
sub
frstor
iret
cld
dec
insl
in
lret
or
insb
les
mov
rorb
in
jb
sbb
daa
or
mov
mov
or
sahf
test
setge
mov
lock
xor
outsb
stos
jne
inc
push
out
repnz
cmpsl
xor
inc
cltd
lds
movsl
mov
pop
faddl
adcl
pop
push
shll
out
sbb
ss
pop
cmpsl
test
and
out
add
sub
enter
inc
and
repz
dec
in
sysret
inc
xor
lcall
sarl
dec
std
xchg
sub
sbb
mov
jbe
das
mov
add
movaps
js
jo
dec
shr
sub
fisubrl
bound
inc
xor
pop
popf
scas
jmp
ljmp
sub
mov
jl
add
cmp
test
movsb
icebp
out
aas
adc
int
pop
call
or
dec
sub
loop
push
sarl
ret
push
jae
pop
sub
push
sub
iret
mov
xchg
in
pop
cwtl
into
xchg
xchg
push
push
pop
dec
jp
xchg
and
sbb
movsl
mov
pop
lcall
lahf
sti
inc
pushl
gs
add
adc
sbb
test
xor
xchg
aaa
dec
aam
jb
add
or
cmpsl
add
jmp
insb
test
pop
movsl
mov
aam
int
adc
mov
push
xchg
int3
sbb
and
inc
mov
or
dec
into
cwtl
adc
test
lret
rcr
jnp
loop
insb
jbe,pn
orw
ds
inc
daa
cmp
cmpb
inc
dec
ds
xor
add
lcall
ret
imul
xor
xchg
js
pop
push
mov
adc
cs
xchg
out
repnz
adc
lods
sub
push
fnstcw
je
inc
sbb
test
fistps
stos
fisttpl
adc
and
in
outsb
cltd
pushf
or
sbb
loop
hlt
jl
xchg
rorb
push
adc
sti
xchg
cmp
pop
mov
pop
jg
aas
jg
cmp
mov
xchg
or
std
push
sub
movb
pop
out
add
test
xchg
popl
data16
iret
xchg
lcall
jo
jge
hlt
push
test
add
push
xor
and
add
in
sub
int
arpl
xchg
nop
adcb
popf
push
aaa
jns
leave
ja
push
call
add
mov
orl
pop
mov
cltd
out
scas
and
mov
jmp
cltd
fadd
ljmp
mov
push
in
mov
jno
lret
test
sub
mov
add
clc
inc
mov
arpl
or
pop
ja
rcll
jle
loop
add
inc
enter
dec
xchg
inc
mov
divl
jecxz
popa
je
and
dec
int3
pusha
nop
fdivs
adc
adc
sarb
je
lods
popa
xchg
jb
push
lret
push
pop
push
mov
push
and
mov
jge
cmp
mov
mov
stc
lods
dec
movsb
adc
imul
cmpsl
jb
fistpl
pushf
test
dec
mov
aaa
and
inc
sbb
sub
lds
push
nop
add
popa
dec
push
mov
push
out
adc
repnz
add
pushf
loope
xchg
jo
jae
out
push
es
iret
test
pop
and
or
vcvtsd2si
sbb
cmp
jns
int
adc
push
es
fisttpl
test
jns
inc
mov
fimull
cli
pop
xor
inc
push
mov
and
aad
js
je,pt
dec
decl
mov
mov
sub
mov
inc
out
push
lahf
mov
push
mov
add
adc
add
push
push
movsl
xchg
sti
dec
stos
xor
sub
jbe
lahf
and
out
in
inc
cmp
test
sub
icebp
repz
xlat
push
adc
sbb
mov
popa
cmp
outsb
mov
ja
dec
loopne
into
test
adc
cmpsl
cmp
fcmovbe
mov
mov
jp
adc
sbb
faddl
and
mov
xor
cmpsl
pop
call
pop
aam
outsl
cld
loop
loop
xchg
stos
mov
sub
daa
xchg
mov
js
ret
push
push
in
mov
cmpsb
enter
fsts
xor
mov
popa
xor
jae
loopne
sbb
sarb
pop
mov
sbb
mov
inc
imul
les
mov
cmp
inc
xchg
mov
hlt
jne
dec
add
jne
add
pop
sub
and
or
sub
sahf
pop
imul
fisubrs
leave
clc
add
fists
cmpsl
pop
jmp
push
jecxz
test
pop
xor
dec
cmp
xor
pop
les
push
jge
lret
inc
ret
in
adc
icebp
int
sbb
das
or
repnz
out
nop
stos
adc
lahf
enter
ret
lds
std
popa
and
js
sbb
ficoml
xchg
mov
push
outsb
mov
sti
xor
roll
into
mov
dec
pop
repz
out
xchg
xor
ja
cltd
jmp
mov
ss
mov
rol
xor
cs
into
dec
and
int
ret
mov
and
insl
andl
mov
inc
mov
and
popa
mov
rclb
adc
in
mov
or
cmpl
clc
ds
pop
fwait
adc
sub
xchg
fcmovnbe
pop
ret
mov
adcl
mov
mov
test
sub
push
jae
stos
cmp
cmp
push
test
dec
nop
mov
jb
sbb
lds
test
mov
loopne
push
popa
inc
xchg
push
mov
addl
sub
imul
loopne
push
lods
cmp
and
inc
mov
inc
push
repz
ds
popa
lods
and
xor
movsl
sbb
pop
inc
ds
or
push
jno
aam
or
push
test
xor
test
jg
pop
add
mov
jne
mov
jae
pop
mov
xchg
xchg
push
insl
shll
ror
pop
cmp
inc
loope
dec
iret
stos
cmp
jns
or
sbb
or
aaa
cli
divl
cmpsb
ds
inc
mov
and
ss
fisubs
int3
inc
mov
inc
movsb
nop
inc
test
cltd
sbb
mov
mov
push
push
jp
out
cld
loope
movsl
and
les
shlb
jno
leave
fsts
data16
int
cltd
cld
popf
cmp
mov
mov
push
and
daa
cld
xchg
je
cltd
imul
cmp
sub
adc
test
sbb
xchg
jae
sub
jo
push
shlb
mov
repnz
jle
leave
cwtl
jo
or
cmp
xchg
mov
ret
enter
je
movsl
jae
add
sbb
pop
lds
in
push
cmp
in
imul
pop
pop
clc
mov
xchg
testl
shl
imul
lea
mov
movsl
add
jmp
xlat
cmpsb
movsb
jmp
dec
ss
sbb
lods
push
pop
add
pop
ret
das
xor
dec
ss
fimuls
clc
testl
rclb
fs
lcall
fcmove
push
inc
imul
mov
leave
imul
dec
and
mov
bound
shlb
shlb
push
xor
pop
xor
adc
cmp
xlat
xchg
jno
ds
mov
daa
xchg
add
bound
mov
in
pushf
lods
stos
loope
inc
ss
sbbb
daa
inc
lcall
ss
push
cmc
sbb
je
scas
mov
ljmp
pop
sbb
xchg
in
mov
mov
mov
adc
xor
and
add
xor
imul
dec
inc
sbb
jbe
fisttpll
mov
mov
adc
inc
outsb
cmp
out
jg
in
je
loope
cmp
push
ror
pop
and
es
inc
push
mov
and
jne
cmpsl
jl
out
pop
int
cmpsb
mov
repz
lcall
cmc
xor
sahf
push
cmc
imull
xor
notl
pop
mov
cmc
pop
inc
cbtw
sahf
jmp
and
mov
loop
leave
xor
mov
add
xchg
cld
or
jbe
adc
sbb
push
mov
ficompl
pop
iret
pop
imul
sub
mov
data16
stc
stc
inc
roll
dec
sub
movsb
jl
andb
xor
fisubrs
mov
xchg
les
mov
dec
enter
mov
xchg
mov
adc
jb
fcompl
mov
int3
mov
xor
mov
jno
mov
adc
hlt
hlt
out
dec
lret
xchg
push
addb
inc
je
push
dec
movsb
lea
jl
sub
pop
stos
pop
outsb
shrl
repnz
jbe
out
push
mov
xchg
out
lods
pop
sub
cli
les
icebp
ds
fs
data16
orl
lods
clc
or
pop
add
or
cmp
or
jb
sub
inc
mov
xor
jmp
aam
dec
cmpsb
fldenv
data16
jmp
sbb
push
mov
and
int
daa
faddl
add
mov
sub
push
insl
push
ret
mov
add
jae
push
ljmp
lret
mov
cmp
inc
mov
popf
fwait
das
stos
gs
rorl
dec
lret
adc
mov
das
lret
xor
fbstp
inc
sbb
pop
xor
mov
js
adc
adc
pop
inc
lds
out
sti
repnz
test
mov
jle
adcb
out
test
imul
lret
aam
clc
add
mov
cmc
neg
sti
mov
jo
push
stc
mov
push
in
mov
adc
gs
add
js
jnp
sbb
sub
sbb
xchg
or
mov
adc
movsl
outsb
sbb
jb
scas
int3
rdmsr
push
dec
leave
bound
pop
xor
aad
adcb
push
scas
mov
sbb
ret
pop
inc
adc
xor
insb
pop
dec
icebp
or
data16
mov
hlt
popf
cmp
dec
es
popf
sub
sarb
mov
mov
push
sub
mov
sbb
xchg
shlb
mov
xchg
mov
jns
jmp
test
pop
sbb
push
adc
addb
aas
dec
lcall
jl
pop
pop
xor
in
sub
add
subl
or
add
mov
dec
pop
movsb
pop
mov
or
pusha
lcall
ret
dec
mov
dec
std
in
fs
adc
or
cwtl
mov
and
stc
mov
or
insl
mov
mov
pop
and
repz
arpl
dec
rcrb
scas
inc
mov
mov
or
fsts
insb
in
out
inc
sub
test
xor
dec
jae
jg
cli
gs
ljmp
and
js
jp
mov
push
fildll
and
mov
sub
fwait
loop
mov
ljmp
pushf
adc
test
pop
push
pop
mov
xchg
std
sbb
jb
scas
sbb
jecxz
mov
xchg
mov
inc
lcall
testl
orb
sbb
test
ja
mov
mov
pop
mov
mov
dec
stos
mov
pop
adc
or
pop
or
repz
nop
jle
js
cmp
xlat
in
cmc
aaa
cmp
pop
inc
fldenv
dec
out
mov
cltd
cmpl
movups
out
or
adc
cmpsb
fmul
sbb
cli
xchg
mov
fidivrs
aad
cmp
mov
fidivs
lods
daa
cmp
mov
stc
push
cmp
sbb
inc
fmuls
xchg
push
or
push
pop
into
fcmovnbe
pop
jb
mov
jnp
xchg
adc
add
push
jb
add
mov
mov
pop
lock
cmp
fidivl
popf
ja
mov
push
jo
cmpsl
out
lahf
mov
push
cmp
iret
jl
add
and
nop
inc
lods
sbb
add
movsb
xor
push
cmp
std
outsl
sub
mov
scas
or
add
xorl
jno
jb
test
cli
insb
icebp
jg
dec
adc
fcmovbe
in
mov
push
aad
pop
adc
lahf
fistl
push
mov
cmp
xor
addr16
pop
aam
and
nop
sub
shl
add
xchg
mov
pushf
cmp
hlt
mov
pop
stos
xor
rorb
subl
lcall
add
stc
adc
hlt
arpl
dec
mov
std
pop
cmpsl
sbb
adc
call
lahf
lahf
or
sub
aad
in
mov
sbb
mov
jge
mov
adc
mov
rclb
aaa
mov
and
push
jge
and
or
addr16
cld
scas
std
lret
jno
xor
cld
cmp
clc
in
data16
unpcklps
cltd
mov
leave
test
cmp
movsb
pop
or
mov
gs
test
nopl
scas
mov
push
cmp
test
shl
ret
dec
scas
into
aam
sahf
mov
imul
das
mov
clc
inc
stos
repnz
push
inc
push
lahf
sub
loope
lods
jmp
or
dec
push
ret
std
gs
into
subb
in
loope
repz
and
bound
mov
sbb
jmp
scas
xor
call
fcomip
std
sahf
orl
pop
xor
movsb
in
test
fsubs
adc
enter
popl
mov
negl
jmp
jl
call
jne
dec
cli
lock
mov
mov
pop
push
sbb
dec
shll
lret
mov
jae
jns
xchg
jge
aad
pop
pop
xchg
test
push
mov
jo
fdivp
sub
lret
pop
imul
rclb
lods
push
or
add
icebp
lods
enter
arpl
divb
js
out
pop
cs
adc
mov
xchg
sbb
mov
rorb
gs
ret
lods
jbe
icebp
sbb
cmp
xor
lahf
push
add
lahf
push
shlb
popw
call
daa
out
xchg
dec
add
stos
daa
into
dec
xchg
push
out
xor
cs
mov
dec
dec
cmp
mov
sahf
xchg
cmp
imul
xor
or
scas
std
push
outsl
faddl
lret
test
and
or
sub
loopne
sub
xchg
sub
inc
jno
add
in
inc
cmpsl
loope
sbb
je
add
jnp
lock
sub
repz
sar
lret
and
mov
mov
and
jmp
cmovbe
leave
jo
dec
rorb
ds
leave
inc
push
adc
inc
push
stos
sbb
leave
sub
xlat
andb
push
pop
lods
or
es
cld
inc
mov
or
xchg
mov
push
mov
aas
sbbb
xchg
xchg
insl
or
lret
sub
pushf
ffree
xlat
cmp
dec
cmp
cmp
jl
pop
repz
test
xchg
add
xor
or
adc
sub
pop
repz
pop
push
dec
sahf
mov
jo
lods
xchg
inc
push
lcall
test
xchg
push
mov
cmp
sub
or
jnp
mov
and
dec
mov
push
setle
lods
mov
out
fldenv
and
cmpl
out
mov
dec
dec
daa
lods
jecxz
std
mov
int
push
ret
pop
xlat
jnp
jp
imul
dec
daa
sub
scas
push
adc
pop
mov
mov
sub
cmp
fwait
ds
push
mov
push
mov
jmp
cmp
fdivr
in
or
repnz
outsl
xlat
into
cmp
mov
ss
loopne
sub
loope
pop
cmpb
cmp
cmp
into
adc
mov
mov
divb
sub
add
dec
push
hlt
or
cs
mov
stos
inc
or
push
es
dec
into
in
or
sbb
sbb
jecxz
dec
stos
push
jne
inc
sub
negl
fsubl
imul
in
xchg
push
mov
add
and
movsb
ja
mov
arpl
lock
adcl
outsb
aaa
sbb
lods
insl
push
inc
lret
inc
das
cmpsb
aas
and
aas
fwait
pop
enter
push
and
xchg
add
sub
imulb
sarb
inc
enter
push
cmc
scas
xor
dec
xor
fmull
lea
loopne
push
xchg
jbe
movsl
xchg
cmp
jns
adc
repz
sub
or
push
add
call
inc
mov
jmp
stos
mov
sbb
roll
xchg
mov
or
cwtl
pop
icebp
xlat
fs
lret
ret
test
dec
mov
and
in
leave
arpl
inc
andl
str
jbe
mov
lret
mov
sub
push
push
scas
add
push
mov
cli
lea
lret
xchg
push
rcrb
cmp
addr16
and
push
cmp
scas
adcb
nop
int3
sbb
rclb
mov
xchg
fwait
mov
sbb
subb
inc
icebp
nop
stc
mov
jns
test
push
mov
out
dec
pop
das
cmp
scas
jb
shrb
stos
pop
nop
cli
loopne
call
xchg
fdivrp
jl
rcrl
mov
mov
mov
jae
cmpb
test
push
sbb
pop
test
or
add
mov
sarl
sub
xchg
out
sahf
je
arpl
fstpl
sbb
fiaddl
ss
push
add
cs
sub
scas
shrb
dec
pop
mov
imul
sub
push
add
mov
fs
popf
rclb
jne
xlat
mov
add
fistl
sub
pop
test
jbe
mov
cmp
repnz
outsl
std
repnz
stc
xor
aad
cmpsb
dec
adc
fildl
jo
xchg
push
pop
adc
imul
push
add
pop
and
fsubl
xchg
sahf
cmpsl
arpl
sub
aam
xchg
movsl
cmp
push
fidivrs
adc
jno
insb
scas
daa
add
sub
mov
pop
and
ja
dec
adc
xchg
fnsave
imul
lds
lret
jecxz
cli
jnp
mov
push
push
push
inc
gs
shlb
pop
stc
movsl
push
dec
sub
out
rsm
dec
test
in
mov
mov
sbb
adc
decl
mov
imul
out
or
out
iret
mov
jb
mov
test
psrlq
imul
add
and
divl
push
sarl
repnz
adc
daa
sahf
push
sub
xor
mov
inc
push
jmp
into
addr16
push
test
cmp
dec
test
inc
and
mov
pop
inc
ret
jle
pushl
mov
inc
sub
push
addb
popf
push
jmp
mov
sbb
push
push
loopne
mov
loopne
pushf
pushf
mov
pop
xor
mov
es
in
adc
stos
push
stos
aad
stos
push
aad
fldpi
mov
fsubl
test
sub
jno
pop
sbbb
js
out
mov
faddl
jecxz
daa
xor
dec
aam
fs
ret
gs
into
lods
adc
popf
xchg
lret
pop
push
sub
pop
insb
jae
pop
pop
xor
ret
movsb
push
or
jle
mov
ds
aaa
xchg
int3
lods
fdivs
mov
test
mov
psubsb
jno
xchg
outsl
xor
jle
add
test
mov
push
or
push
add
jp
outsl
and
and
jle
or
es
jbe
add
add
repz
sbb
jmp
xchg
xor
add
gs
add
or
sub
xchg
xor
push
dec
jmp
push
and
jmp
and
lcall
mov
cmp
jle
movsb
arpl
jnp
test
stc
jns
xchg
jns
push
pop
stc
ljmp
add
popf
dec
or
xchg
ret
push
and
shll
pop
jns
hlt
imul
and
ds
lahf
mov
fistl
adc
ljmp
or
mov
cmp
out
dec
cmpsb
cmp
or
push
out
arpl
hlt
aaa
stos
or
mov
les
lahf
ret
inc
data16
int3
mov
xchg
js
fwait
int
outsb
cmp
cmpsb
filds
adc
and
or
dec
jne
lods
loop
aas
cmc
dec
lock
add
hlt
pop
bts
push
mov
cwtl
add
push
aam
dec
cmp
mov
jle
fbstp
testl
into
cmp
cmp
or
ret
cmp
jo
sbb
xor
jne
jb
andl
lret
stc
aas
and
jnp
jae
xor
add
sub
pop
and
or
mov
outsb
cwtl
push
in
testb
pop
scas
mov
sarb
sbb
xchg
movsl
je
push
mov
mov
jno
and
std
mov
pop
jae
xor
shlb
adc
int
fwait
mov
daa
xor
stos
pop
xchg
push
cld
cld
gs
mov
stos
paddq
mov
adc
addr16
mov
and
bound
cmp
xchg
sub
cli
xchg
and
and
adc
rol
xchg
sbb
cwtl
sub
jp
push
mov
add
push
jp
aam
jp
add
push
pop
rcrb
mov
or
insl
bound
mov
shrb
mov
daa
loopne
fsubs
jbe
push
es
repnz
ss
ror
pcmpgtw
inc
push
fists
sub
pop
testw
insb
adc
popf
xchg
test
cmpsb
rolb
and
dec
sub
xchg
clc
mov
jmp
add
dec
iret
push
and
jmp
lahf
jnp
mov
lods
shll
outsb
push
in
loope
mov
das
jae
push
sub
adc
cmp
pop
sahf
dec
dec
push
pop
lock
ja
aaa
repz
popa
cmp
stc
pop
jle
pop
fbstp
inc
aas
pop
arpl
cld
bound
sbb
mov
cmpsb
cmpsb
fimuls
dec
cmp
xchg
stos
ss
loopne
into
pop
fisubrl
pop
pusha
jo
and
cltd
or
mov
jle
shll
sub
sub
or
pushf
fsub
mov
sbb
cwtl
ret
mov
lret
dec
xchg
cmp
int3
xor
mov
mov
lods
sahf
scas
sbb
xchg
int
scas
xchg
adc
sub
mov
test
cmp
aaa
out
cld
pop
aas
cmp
popf
leave
cld
push
shrl
or
fiaddl
mov
and
dec
cs
or
dec
scas
movsb
jecxz
insl
test
pop
xor
dec
and
les
sti
xor
stos
cs
lods
cmpsb
push
pop
xchg
mov
adc
jg
push
test
xorb
mov
add
cld
push
jge
dec
adc
dec
mov
aas
fwait
addl
imul
push
sub
push
inc
cmovp
cmp
mov
xor
or
daa
cmp
loope
ja
mov
xchg
dec
cmp
jb
movsl
pop
lret
sbb
mov
mov
sub
out
lods
xabort
pop
adc
and
mov
fldcw
sub
pushf
ja
stos
mov
mov
scas
push
ds
nop
cmp
into
push
xchg
adc
out
aas
push
loopne
xor
std
jecxz
inc
cmp
popf
fbstp
pop
adcb
add
xlat
int3
dec
pop
shll
out
push
push
in
sub
outsb
ret
sarl
xchg
loop
mov
cmp
fmull
clc
mov
imul
jecxz
push
out
mov
lcall
or
mov
je
fldcw
pop
lods
mov
nop
xor
roll
sub
in
inc
jbe
dec
out
pop
jb
inc
fwait
lods
jg
movsb
pop
repz
idiv
jb
fbld
sbb
ror
ret
ret
sbb
inc
xor
loopne
pop
dec
icebp
push
cmp
push
mov
lods
jae
jge
mov
cmpsb
xor
insb
pop
hlt
jae
in
sar
fnstcw
testl
xchg
mov
mov
je
pop
shlb
pop
scas
cltd
sbb
push
xchg
push
cmpb
adc
sbb
or
jno
subb
ja
push
adc
and
movb
scas
mov
lahf
pop
add
out
scas
mov
inc
sahf
lret
jl
out
mov
icebp
test
jg
cmp
ds
je
fisubrs
repnz
insb
push
cmp
xchg
xchg
push
push
add
lods
add
enter
jecxz
sub
mov
negb
es
push
cmc
xlat
movl
mov
popf
or
cltd
addb
mov
sbb
sbb
mov
sub
sbb
xchg
outsl
scas
xlat
mov
xbegin
clc
adc
cmp
rol
mov
inc
insl
aad
andl
add
ds
add
sbb
dec
xstore-rng
cmpsl
inc
cmp
inc
mov
mov
cmp
sbb
and
jl
adc
mov
adcb
es
insl
es
outsl
xchg
out
jmp
pop
mov
test
inc
fwait
lret
bswap
mov
pop
mov
aad
xor
jl
test
mov
in
dec
mov
testb
daa
outsl
imul
stc
sub
adcb
sub
test
jne
inc
insb
shrb
jp
or
sub
push
fs
out
in
push
call
int
mov
pop
add
jmp
mov
stos
ss
pop
or
sub
outsb
sbbl
add
mov
xchg
test
lock
mov
mov
movsb
push
mov
jne
push
gs
and
stc
pushl
hlt
jne
fnsave
and
mov
hlt
push
jbe
out
cmp
cmc
lret
inc
test
cmp
or
loope
and
jb
pop
inc
das
scas
push
cmp
mov
iret
lret
aam
cmp
dec
pop
stos
cmp
sahf
hlt
fs
jg
dec
jnp
or
pop
jecxz
inc
stos
inc
les
push
in
pusha
ja
mov
xchg
jo
push
pop
mov
and
push
mov
test
popa
sbb
es
pushf
inc
mov
jge
dec
movsb
std
xchg
inc
fstpt
mov
shrl
inc
adc
push
rolb
loopne
std
and
mov
arpl
xchg
add
sbb
xor
sub
cmc
jnp
fisttpll
mov
lock
push
push
outsb
jp
jl
jmp
clc
xor
lds
dec
xchg
pop
enter
cmc
es
iret
cmpsl
fs
das
sub
push
call
add
lcall
pop
push
xor
test
icebp
mov
xchg
xorl
or
cld
and
rcr
cltd
enter
mov
jae
push
push
mov
sahf
mov
and
jbe
dec
mov
mov
push
adc
test
in
ja
mov
ret
push
mov
dec
mov
push
int3
inc
push
lret
test
cltd
cmp
mov
mov
gs
jecxz
fstpl
ds
mov
int3
rclb
call
imul
daa
mov
add
repnz
adc
cmovl
jne
pop
xchg
shr
sbb
dec
daa
lea
and
sub
mov
add
dec
popf
cmpb
shll
loopne
imul
test
inc
repnz
ret
mov
xor
xor
aad
pop
adc
mov
pop
mov
rcrl
rclb
and
aas
add
daa
dec
xchg
dec
push
loopne
sbb
cwtl
sub
sub
mov
mov
inc
lss
xor
mov
popa
and
popa
push
cs
adc
and
into
push
data16
cmpsl
or
add
ret
fwait
dec
cmp
push
les
sbb
mov
sub
nop
test
add
push
mov
lret
cld
fstpt
cld
sarb
lods
js
push
push
test
arpl
sbb
js
pop
test
xchg
movsl
add
sbb
adc
mov
aaa
xor
push
out
pop
or
std
lods
sbb
mov
push
inc
sub
fisubs
lock
adc
jo
pop
sub
sbb
leave
pop
inc
jp
and
icebp
bound
sub
test
into
and
outsb
xlat
fistpll
push
or
out
xchg
cmp
icebp
mov
lret
dec
mov
xchg
xor
pop
inc
ret
sub
dec
xor
pop
adc
mov
dec
xlat
or
lahf
cld
lods
sahf
jne
jecxz
push
jbe
lds
push
dec
imul
pcmpgtd
xchg
pop
scas
cmp
jp
adc
or
adc
mov
cmp
insl
ljmp
inc
mov
pop
jp
cmp
cmp
addl
fdivrs
add
add
dec
fcmovu
dec
push
aaa
cld
mov
int3
lret
mov
push
pop
sub
xor
jns
push
fisttps
loope
repz
xor
sysexit
sti
lret
jmp
add
outsb
int
sbb
mov
fsubs
leave
mov
push
lods
jno
dec
negb
xor
cmp
out
add
mov
negb
or
and
loop
cwtl
insl
sub
jl
imul
dec
mov
hlt
sahf
jb
sbb
dec
or
xchg
and
hlt
jecxz
sbb
sub
cmp
pusha
or
mov
lret
aas
push
add
xlat
fs
rcl
pop
mov
gs
cmpsl
js
add
ja
inc
sahf
ret
xor
add
adc
mov
test
sbb
pusha
push
and
jbe
addl
popf
orb
cwtl
sub
push
pop
cltd
aas
out
push
xor
test
in
inc
jecxz
lcall
lods
adc
out
jns
sarb
push
arpl
nop
arpl
scas
es
bound
pusha
add
scas
jbe
mov
inc
sbb
ljmpw
mov
repz
lods
repz
orb
sti
jo
jg
mov
sub
pushf
mul
insl
in
push
mov
mov
adc
test
xor
mov
cld
push
sbb
sub
or
lret
fwait
ja
push
pop
lcall
int
cmp
shlb
dec
lcall
pop
es
lret
mov
dec
mov
fdivl
push
cwtl
cwtl
ds
cmp
or
sbb
iret
sub
mov
mov
and
push
fimull
lds
xor
sbb
push
loope
fwait
js
inc
icebp
push
mov
lods
jnp
and
test
out
lret
xor
or
cmpsl
jmp
imul
lods
add
sub
push
stc
cltd
cmpsb
sub
enter
xchg
fstl
rcrb
scas
cli
push
mov
push
xchg
das
jl
xor
mov
and
add
gs
hlt
js
dec
pop
enter
out
ret
insl
sti
shlb
mov
cs
sbb
pop
rclb
std
btc
cmp
movsb
into
rol
mov
fiaddl
sub
inc
xchg
push
mov
push
mov
aas
jo
mov
fcompl
mov
icebp
xor
std
cs
xchg
mul
pop
icebp
fwait
mov
cmp
shrb
jmp
test
sbb
inc
data16
pusha
xor
ja
das
cmp
int
dec
inc
mov
popl
jno
mov
mov
iret
mov
stc
loop
xchg
and
nop
pop
sbb
fadd
insb
notl
xor
adc
dec
inc
js
aad
arpl
mov
inc
mov
addr16
sbbb
and
add
lahf
inc
pop
inc
add
test
sub
mov
das
loop
shr
jp
push
outsl
mov
inc
adc
icebp
leave
stc
inc
stc
fisttpll
call
jge
sub
add
jp
pop
dec
mov
in
push
mov
popf
icebp
ficompl
in
xor
in
xchg
sub
aam
out
push
out
adc
in
clc
push
lret
ret
scas
scas
pop
adc
sbb
dec
sbb
push
dec
sbb
push
nop
jns
bound
dec
sub
sbb
pushf
dec
add
test
xchg
shrl
imul
arpl
imulb
jo
imul
xchg
add
ret
lods
dec
lods
out
mov
sbb
divb
pop
xlat
xchg
cli
dec
jle
push
divl
sbbl
js
bound
xor
mov
popf
movsb
movsl
imul
dec
inc
xchg
cmpsb
shll
mov
mov
push
pop
mov
fwait
jp
mov
es
mov
mov
and
or
in
enter
lret
and
mov
cmp
fmulp
sarb
dec
xlat
sbb
mov
rcrl
push
dec
sub
andb
xor
pop
out
clc
dec
cmp
jns
in
gs
or
and
push
loope
stc
cld
outsb
addr16
dec
dec
stc
push
inc
lods
cs
test
les
mov
mov
pop
jae
push
incl
out
lods
fwait
mov
mov
pminsw
mov
jae
std
mov
or
imul
sysexit
mov
pop
push
inc
mov
in
or
pushf
adc
adc
cmp
push
jl
daa
add
cltd
jmp
or
jbe,pn
movsl
dec
push
mov
inc
js
dec
test
dec
in
and
fdivs
xchg
mov
jl
enter
icebp
jp
jle
push
push
testl
fs
dec
flds
jle
lods
mov
es
mov
popa
jmp
fstps
mov
xchg
pop
je
lahf
jb
pop
xor
cmp
mov
in
xchg
shll
movsl
in
pop
push
or
aam
pop
pop
sbb
push
pop
dec
inc
fisubl
movsb
adc
cmpb
push
je
ds
push
or
inc
into
or
pop
jmp
dec
lahf
sub
xchg
xorb
mull
pop
add
pop
and
bound
add
push
mov
cmpsl
cli
jg
lods
cli
stc
pop
les
sbb
pop
and
xor
push
test
adc
lock
xchg
rcrb
scas
jl
jmp
push
loopne
int
dec
mov
push
jb
cld
inc
or
push
insl
pop
stos
call
xchg
mov
xor
test
dec
stos
add
pop
movsl
xchg
dec
cld
add
jmp
cmp
cmp
fiaddl
int3
subb
outsb
mov
lahf
popf
out
loopne
or
sti
inc
stc
jl
movsl
inc
cmp
sbb
xchg
xchg
dec
mov
leave
cli
and
mov
js
pusha
mov
fisubrs
fsts
int
push
stos
sbb
out
push
je
sub
aad
mov
cmp
adc
and
movsb
dec
ret
jmp
push
pop
mov
sbb
push
aam
icebp
cmp
fs
data16
cmp
sub
das
xor
jmp
add
inc
add
andl
inc
loope
bound
push
mov
and
add
lods
in
inc
fdivrp
sub
and
in
mov
inc
xor
cmp
roll
sti
jo
add
sbb
push
movsl
mov
in
xchg
nop
xor
aad
fadd
jmp
jb
into
cmp
ja
xchg
sub
jg
arpl
lock
ss
push
cli
pop
fbld
cmp
inc
pop
inc
jp
test
cltd
rcl
jo
sbb
sub
add
out
lock
inc
mov
lahf
out
dec
lea
cwtl
or
enter
adc
dec
and
mov
mov
stos
push
adcb
adc
push
fbld
fcomip
sub
pop
lods
imul
repz
test
out
pop
fdivrs
rcr
sahf
int3
in
sbb
andl
xor
cld
push
sahf
test
aad
mov
in
jle
daa
js
sbb
or
into
sbb
pop
and
rorb
and
into
cmp
int3
popf
xchg
cmp
repnz
jmp
mov
fsubs
pop
setl
mov
clc
insl
imul
adc
jmp
sbb
push
sahf
rdtsc
je
dec
mov
aam
push
les
test
inc
or
movsl
sbb
jmp
rolb
fiadds
dec
push
xor
insb
ljmp
int
mov
out
jae
pusha
addr16
pop
loop
fcmove
loop
push
xchg
adcb
and
sbb
inc
rcrl
notb
lods
addr16
ficoml
pop
sub
sub
and
repz
lret
mov
cmpsb
pop
stos
rorb
xchg
push
push
jmp
mov
shr
mov
mov
sub
pop
iret
xor
cld
scas
int
push
mov
pop
rolb
cli
xchg
iret
aam
or
pop
xchg
push
sarl
leave
dec
in
repnz
adc
lret
aaa
lret
bound
in
jg
mov
mov
test
popa
scas
arpl
addr16
sbb
dec
fwait
and
adc
imul
out
cmpsb
int
dec
in
imul
adc
in
in
adc
ja
ljmp
jno
pop
pop
xchg
lret
repnz
icebp
decl
mov
lret
sub
mov
push
call
xor
cmp
lcall
popf
pop
or
sahf
bound
out
xor
loope
repz
int
push
not
lock
dec
adc
xorb
gs
aaa
cltd
rorl
iret
lds
sub
xor
out
xchg
add
es
dec
mov
pusha
clc
outsb
mov
leave
add
push
dec
cld
cli
mov
fldl
dec
adc
int
ljmp
push
inc
rcll
gs
jo
xor
das
sub
xor
loopne
jmp
into
out
or
and
xchg
or
das
mov
push
repz
movsb
xchg
leave
sar
and
test
aad
sarl
sbb
cs
aad
aad
ss
icebp
jno
ss
jmp
shll
adc
lock
add
sub
bound
cmp
cmpsl
das
sub
cmp
lods
jb
cli
sbb
aad
fcoml
in
leave
sbb
adc
xor
add
and
int
sbb
xchg
mov
loope
fdivrs
and
loope
int3
sbb
mov
in
push
fsts
loopne
and
les
aas
out
dec
aaa
inc
pop
test
aam
call
imul
sub
inc
loopne
fdivrl
lds
mov
push
sub
adc
mov
push
in
dec
mov
mov
mov
popf
outsb
in
inc
xlat
inc
sti
movsl
push
xor
testl
sahf
addr16
xor
out
aad
flds
int
jns
fldenv
sbb
dec
jnp
xchg
repnz
ss
lret
test
fdivl
pop
js
push
ficompl
stc
rcr
inc
pop
call
jae
cmp
stc
scas
xorl
mov
pop
shrb
inc
sub
pop
mov
aas
fsubr
icebp
sub
pop
or
jmp
and
das
lcall
jb
lahf
test
lds
mov
lcall
pop
xor
out
cmp
pushf
popf
ret
xor
mov
sub
arpl
fldcw
sar
js
mov
fwait
cwtl
pop
out
mov
and
sub
xor
jno
xor
rol
push
outsb
negb
aad
jns
lods
mov
imul
inc
cmpsb
cmpsb
inc
adc
hlt
mov
jnp
push
adc
push
fldcw
loop
lahf
ret
push
push
xor
ret
inc
nopl
insb
pop
pop
aas
insb
test
fsubl
shll
fstpl
push
mov
xor
or
push
and
js
imul
lahf
cld
sub
inc
ds
mov
inc
mov
jle
push
dec
mov
outsb
scas
insl
insl
xchg
cmp
or
or
cltd
sub
push
out
push
adc
fs
leave
lret
xor
cmp
fxch
or
fs
aad
nop
and
int
cmpsb
ss
dec
out
les
repnz
sbb
inc
xchg
xchg
pop
mov
jge
ret
outsl
cmc
sub
loope
inc
add
mov
sub
and
enter
cmp
in
cltd
das
or
add
and
mov
inc
pop
lcall
js
ja
push
mov
cmp
add
insl
push
or
mov
into
mov
frstpm(287
in
mov
shll
jl
cwtl
movsb
ja
dec
jnp
jne
mov
dec
push
dec
in
mov
mov
out
fsts
cmp
pop
loopne
or
dec
jmp
cmp
push
shll
pop
cs
clc
scas
sahf
jle
jne
or
pop
inc
enter
jne
push
outsl
pop
or
inc
and
cmp
xchg
stos
call
cltd
popa
int
divb
and
pop
cwtl
sbb
push
js
mov
inc
mov
andl
sbb
gs
loop
rcll
jle
outsb
pop
adc
dec
imul
adc
xorl
or
popf
mov
test
add
inc
pop
fildll
xchg
call
imul
dec
cltd
das
jae
cli
fs
pop
repnz
push
fs
es
dec
les
jmp
sbb
and
cmp
int
jle
sbb
jnp
dec
pushf
jecxz
push
sub
mov
call
loop
mov
psrlw
add
dec
mov
outsl
bound
and
inc
mov
test
mov
ret
ficoml
aas
sub
mov
nop
mov
mov
cltd
pop
pop
push
push
enter
cmpsb
mov
in
cmpsl
mov
stos
sub
mov
lods
dec
mov
fisubl
mov
pop
add
mov
addr16
je
mov
xchg
xor
movsb
xchg
pop
out
mov
lret
pop
push
mov
jle
sbb
and
pushf
dec
mov
jno
sahf
cmp
hlt
mov
sahf
pop
jns
or
fistl
cmp
mov
xchg
les
or
push
mov
cmp
mov
mov
inc
mov
ja
cmpsl
pushf
sub
test
dec
and
and
mov
addl
setno
test
or
xchg
scas
dec
sbb
push
dec
jmp
adc
sub
cld
pop
popa
nop
sub
imul
notl
ljmp
sbb
adc
mov
push
and
mov
inc
inc
ss
fs
out
gs
mov
and
pop
dec
push
imul
pop
and
out
pop
dec
push
adc
shrb
iret
pop
iret
mov
pop
iret
popa
jl
inc
dec
dec
inc
fbld
sbb
inc
fistl
dec
repz
and
pop
pop
inc
xchg
xchg
mov
mov
subl
cmp
push
sar
pushf
push
cli
aad
scas
ficomps
inc
add
cmp
mov
mov
inc
add
lahf
add
and
push
mov
push
jecxz
cmpsb
mov
push
mov
mov
sub
inc
jno
xchg
cmc
mov
add
sbb
or
adc
jmp
pop
push
and
lock
idivb
aad
sti
inc
push
stos
sub
mov
fldl
out
sbb
loop
sub
andl
cwtl
xorl
pop
inc
arpl
or
pop
ljmp
mov
push
shll
sbb
jecxz
sbb
insl
lret
xorl
xchg
xor
cmp
movsb
xchg
or
xor
loope
or
xor
inc
inc
pop
andl
mov
popf
xor
nop
sbb
jbe
dec
insl
xor
mov
daa
test
push
sub
test
pop
stos
mov
sbb
jecxz
add
div
inc
xchg
or
and
inc
imul
jno
leave
pop
mov
outsl
jp
mov
mov
xor
sbb
enter
out
or
sub
pop
push
jp
out
ret
add
push
in
push
jle
mov
outsl
pop
or
dec
jbe
dec
daa
sbb
scas
lea
xchg
cmp
fs
inc
shrl
shrb
cmp
loope
pop
ret
into
les
sbbb
jne
mov
inc
lahf
int
xchg
addr16
jno
hlt
or
and
loope
mov
fildll
sub
dec
dec
movsb
mov
mov
push
sahf
stc
ret
pop
sub
rolb
cld
leave
inc
add
mov
mov
in
sti
fisttps
sarl
sbb
dec
out
in
sub
arpl
and
dec
cli
imul
inc
mov
je
ret
dec
push
push
rclb
lods
cmc
aas
loop
sar
pop
xchg
inc
pop
fiadds
imul
jg
mov
dec
int
push
jns
incl
sbb
jne
add
jns
jbe
test
popf
sbb
rolb
push
xor
mov
add
fnstenv
cld
test
pop
popf
lret
jns
push
cmp
xlat
daa
sub
mov
sub
movsb
push
ljmp
outsb
cmpsb
xchg
push
aam
mov
mov
push
jne
jmp
xchg
cli
ret
push
and
cwtl
out
sbb
add
lahf
mov
dec
mov
out
fisttpll
pop
add
int3
enter
aaa
sub
pop
push
cli
scas
adcl
inc
cmp
push
or
inc
lods
pushf
dec
mov
jge
lahf
in
add
inc
loop
jle
jae
jbe
pop
adc
add
and
and
jmp
pusha
icebp
arpl
sub
adc
cmp
pop
jmp
orl
out
enter
repnz
push
dec
push
lds
mov
lods
loop
sahf
cs
jnp
dec
dec
idivl
cmp
lock
mov
lret
push
les
cli
mov
jae
sub
sub
ret
sbb
bound
sahf
les
loopne
add
dec
stc
movsl
pop
pop
bound
adc
xchg
cmp
popl
idiv
adc
lods
and
cmp
adc
out
mov
and
pop
pushf
jnp
jp
push
popf
pop
xlat
jbe
pop
sub
mov
icebp
inc
push
ljmp
push
pop
mov
ret
add
xorl
test
int
movsl
jle
test
xor
clc
loope
xchg
das
pop
cmp
sub
mov
cmpsl
cmc
ret
lods
mov
cmp
mov
or
repnz
or
xor
push
mov
jne
sbb
mov
in
xchg
push
push
imul
call
and
jne
mov
mov
pop
out
cmp
cmp
in
out
xchg
adc
arpl
cmpsl
mov
push
sti
and
inc
pop
inc
sbbb
push
jge
add
xchg
add
or
mov
lds
sbb
fcompp
movsb
xor
ljmp
mov
dec
mov
jb
lock
dec
xchg
inc
pop
fistpll
iret
push
cmp
incb
shlb
push
stc
fwait
mov
in
test
inc
ret
fmull
pop
mov
mov
sbb
mov
cmp
add
loope
leave
pop
pushf
shll
rorl
rcr
sbb
pop
jb
enter
jmp
sub
rorb
and
cltd
pop
xor
lret
les
out
pop
mov
repnz
fdivs
jle
cmpsl
stos
sub
inc
out
xlat
push
in
mov
add
cmp
in
xchg
inc
test
inc
mov
pop
add
push
mov
lods
fwait
add
inc
ficomps
ja
cmpsb
repz
lock
lds
bound
lret
fucom
leave
cmpsl
xchg
ds
rcrl
ja
add
je
scas
jp
pop
je
add
pop
adc
jle
pop
dec
addr16
or
out
xchg
jl
movsb
push
cmp
push
jecxz
stos
test
les
pushf
mov
xor
cmp
mov
negl
inc
xor
ss
cld
mov
cld
loopne
das
inc
and
sub
cmp
lahf
lods
imul
outsl
pop
cltd
insl
testl
iret
in
in
push
bnd
mov
pop
mov
rol
mov
mov
rorl
shlb
fs
push
sub
decl
imul
add
push
and
fstp
pop
je
and
jb
inc
sbb
clc
inc
mov
das
hlt
dec
push
js
push
xor
adc
adc
mov
mov
push
sbb
outsb
mov
hlt
subl
mov
in
mov
mov
inc
cmpb
pop
and
pop
loopne
mov
aaa
movsb
and
inc
fistl
mov
sbb
xchg
fidivrs
repnz
inc
cmc
mov
sbb
hlt
mov
add
dec
lret
loopne
fs
sbb
pop
cmp
jp
pusha
jge
pop
and
jbe
movsb
flds
inc
pop
add
enter
sbb
push
cmp
mov
push
mov
add
cmp
pop
fsubrs
cmpsb
sbb
stos
jl
push
inc
cmpsb
shlb
int3
arpl
ret
mov
sbb
jb
in
stos
aam
xchg
mov
dec
es
cld
push
xor
ret
fsubrl
jne
pop
rclb
flds
roll
pusha
and
rclb
std
je,pt
outsb
sbb
and
jns
pop
int
test
push
rclb
out
jge
push
and
stc
jae
in
xor
adc
cmp
dec
pop
cltd
lcall
push
inc
sti
inc
xchg
xchg
push
mov
pusha
icebp
jae
jne
mov
sub
ret
cmp
fsubl
xchg
adc
mov
inc
xor
cltd
push
dec
jecxz
cmpb
out
in
mov
inc
mov
shll
enter
add
std
daa
push
in
cmpsb
pushf
jl
jle
xchg
jmp
push
sub
fdiv
sbb
clc
ss
sub
aas
push
sbb
pop
or
into
mov
lret
setae
iret
sbb
jmp
loopne
cmc
jae
cld
aas
xchg
and
addb
mov
sbb
into
mov
mov
sub
adc
insl
pushf
adc
cmc
push
lds
pop
aad
dec
sti
jle
imul
std
jbe
cmpsb
jae
roll
fwait
sbbb
inc
jo
ss
push
cwtl
icebp
and
xchg
cmc
imul
sti
insl
enter
sahf
sbb
mov
xchg
xchg
insb
jg
loope
movsb
imul
in
sbb
testl
push
test
repz
leave
hlt
dec
sub
jp
xchg
xbegin
inc
cmpsl
shrl
pop
sub
ret
mov
push
imul
shl
pop
mov
fistpll
in
aad
fnstsw
push
stos
mov
push
sbb
or
push
mov
xor
sbb
in
cmpsl
imulb
mov
inc
popa
lock
pop
and
rorl
push
jmp
mov
popa
jp
and
mov
sub
jbe
and
pop
cmp
dec
inc
push
addr16
cmp
sub
jecxz
mov
inc
mov
cmpsb
inc
cld
popa
test
jle
aam
enter
cmp
sbb
mov
sbb
push
and
addr16
mov
dec
jmp
scas
push
cmc
jb
pop
daa
call
sbb
jge
imul
bound
movsl
xor
jmp
mov
cmp
jmp
cwtl
and
push
in
popf
inc
hlt
jg
xor
in
sub
xchg
test
add
mov
inc
cmc
ror
ret
notb
add
loope
ljmp
cmpsb
icebp
push
es
mov
mov
jg,pt
and
mov
xchg
stos
sbb
adc
adc
fdivl
push
ja
dec
xlat
mov
jns
ret
dec
push
push
out
push
mov
outsl
inc
fldl
loopne
sub
push
dec
imul
mov
xor
inc
fdivrs
xchg
cmp
lret
fsubl
jne
push
clc
icebp
ret
dec
add
mov
testb
iret
into
push
or
mov
loopne
lahf
cmpsb
mov
push
aad
push
pop
jecxz
lea
aaa
enter
lret
and
mov
push
mov
mov
fdivrs
mov
sub
mov
jmp
out
flds
outsb
imul
call
rolb
jg
int
lds
dec
fcom
test
xchg
std
adc
mov
inc
or
cmpsl
pop
loope
rorb
shll
out
stos
aam
push
and
addl
int3
xor
dec
enter
clc
ret
into
insl
imull
mov
ljmp
mov
cld
pop
push
sub
aam
push
lret
invd
pop
das
fnstsw
addr16
outsl
sub
mov
hlt
and
or
sbb
int3
and
test
jp
sbbb
xchg
sar
enter
loope
cmpsl
and
dec
sbb
and
and
xchg
stos
inc
fsub
mov
or
mov
imul
pop
mov
mov
jnp
push
cmpsb
add
outsl
or
je
icebp
dec
inc
xor
testl
fadds
jae
movsb
dec
pop
clc
jge
jno
cwtl
sti
les
aaa
stc
ficoms
push
ss
repnz
nop
loop
dec
pop
lds
orb
ret
gs
fadds
shll
lahf
mov
xor
mov
lods
adc
push
decl
jnp
dec
in
xor
xlat
pop
and
dec
pushf
add
sbb
mov
adc
jae
lcall
scas
pop
subl
cld
mov
push
or
test
mov
mov
stc
setbe
into
jecxz
scas
cmpsl
test
pop
popf
rcll
lcall
push
mov
outsl
push
mov
adc
sub
sbb
or
jle
imul
xor
pop
lahf
mov
imulb
dec
pop
addb
movsb
dec
lods
dec
mov
push
mull
xchg
shr
sti
push
mov
repz
jnp
leave
sahf
mov
pushf
xchg
aaa
adc
jo
in
rol
dec
sti
insb
pop
cmpsl
jle
cmp
push
fs
cs
pop
and
jg
negl
xor
jae
mov
hlt
dec
lock
sahf
cmp
testl
sub
int3
lahf
scas
out
call
mov
cltd
je
xlat
push
jl
pop
cmp
in
ror
lods
fidivrl
dec
push
and
je
xchg
aam
int
test
sub
loop
push
add
pop
sbb
push
enter
fwait
sbb
cmp
cli
outsb
pop
ficomps
push
mov
iret
inc
cltd
pop
imul
out
xchg
icebp
out
aad
add
mov
mov
mov
lods
jmp
aad
or
jbe
xor
ffreep
stos
leave
or
push
pop
mov
mov
imul
sbb
int
loopne
dec
cmp
or
iret
cmp
call
jmp
ljmp
mov
mov
mov
lock
inc
sbbb
jo
insb
pop
pop
push
fdiv
call
fs
sub
stos
div
cld
dec
xor
bound
aam
cwtl
ljmp
ljmp
jmp
mov
cmp
imul
adcb
into
jl
add
gs
jmp
fsts
je
sub
jmp
jns
pop
outsb
dec
shll
enter
mov
fcmovu
sarl
xchg
mov
jb
lods
push
adc
pop
roll
and
inc
pushw
cmp
pop
sti
repz
xchg
rorl
mov
cwtl
arpl
cmc
cld
mov
imul
mov
scas
nop
loopne
jge
rcll
mov
mov
jno
dec
push
sub
dec
insl
stc
cmp
mov
shlb
xor
mov
cmpsb
push
daa
mov
sbb
pop
push
and
dec
sbb
imull
mov
mov
aaa
in
outsl
les
dec
daa
cli
and
test
jmp
sub
or
mov
enter
test
inc
add
loope
test
bound
retw
mov
cmp
mov
arpl
push
inc
shlb
into
pop
cmpsl
addl
mov
lods
jmp
stos
fnstcw
ds
inc
cmp
mov
gs
mov
lret
inc
fildl
andl
xchg
fiaddl
xor
jecxz
int3
fwait
add
in
jae
xchg
shrb
and
and
les
xchg
inc
cmc
das
std
jne
test
push
insl
sub
sti
push
aam
cmc
or
inc
fldt
mov
pop
scas
out
lods
popf
inc
ljmp
mov
xchg
mov
sub
cld
fsubl
out
inc
loopne
push
das
jmp
loopne
mov
mov
lds
add
push
push
mov
sbb
inc
push
ficoml
outsb
jge
test
andl
icebp
roll
lea
imul
fsts
add
push
pusha
iret
inc
mov
and
ficoms
aad
push
scas
inc
push
inc
jns
xchg
inc
fadds
lock
mov
das
sub
dec
adc
jp
push
ret
adc
test
into
sub
adc
mov
mov
clc
rcr
sub
fwait
sbb
sbb
sti
jb
rol
jg
cld
sub
inc
dec
jae
lock
dec
push
mov
dec
adc
xlat
lcall
pusha
popf
orl
aaa
pop
sahf
lods
xchg
divl
popa
mov
push
sbb
pushw
repz
adc
icebp
bound
pop
dec
mov
lods
addr16
arpl
mov
sbb
lcall
mov
shl
fdivrl
and
lret
lret
pop
sub
sbb
aad
aaa
les
popf
xor
test
xsaves
push
into
test
push
cmp
jg
adc
xlat
dec
int
cmp
push
xchg
cwtl
mov
cmpsb
xchg
call
movsl
pop
subb
xor
and
pusha
pushf
imull
repnz
jmp
and
shlb
lret
rclb
pop
jl
fidivs
xor
gs
popf
mov
fwait
shlb
dec
xchg
sbbl
stos
shlb
mov
sbb
push
adcb
xchg
xor
lods
xor
sbb
popa
ret
xchg
add
idiv
inc
cmc
mov
or
clc
ss
mov
sub
imul
xchg
ret
arpl
pop
push
scas
and
mov
inc
jo
aaa
xchg
mov
pop
adc
mov
and
cmc
adc
dec
shlb
out
sbb
stc
inc
mov
jecxz
ljmp
mov
push
in
dec
pop
icebp
inc
dec
shl
das
mov
dec
add
cwtl
push
out
mov
mov
repnz
cmp
xlat
in
dec
or
shll
sbb
xchg
cmpsl
inc
in
cli
mov
lahf
pop
std
xchg
enter
clc
cli
add
cmc
int
sbbb
cmp
rcrl
popf
mov
es
sub
cs
pop
pop
fdiv
jns
es
jno
negl
mov
rorb
in
lea
mov
jg
es
sbb
lods
ss
mov
xchg
inc
cltd
and
mov
xchg
and
add
in
cld
add
add
loopne
xchg
sti
cld
push
xchg
mov
clc
bnd
xor
or
cmp
xchg
jns
addr16
test
mov
and
faddp
xchg
scas
add
adc
mov
dec
sahf
js
or
push
sbb
sahf
jmp
pushf
mov
roll
jno
clc
dec
adcb
push
xor
outsl
add
xchg
jo
push
push
xchg
in
stc
gs
or
push
in
or
and
cwtl
push
mov
pushf
cmpsb
inc
test
xor
out
test
cld
sbb
and
xor
mov
or
test
inc
jbe
test
out
leave
inc
mov
dec
xchg
jmp
mov
insb
fxrstor
orb
sqrtps
int
scas
roll
cmc
rol
aam
cwtl
es
sti
dec
in
int3
push
pop
cmp
rorl
xor
test
sub
aad
mov
xor
leave
aas
mov
cmc
sub
enter
cld
daa
les
jl
imul
push
clc
scas
xor
scas
mov
sub
push
push
mov
dec
loope
and
int3
push
mov
pop
stc
shll
inc
inc
mov
fcomi
push
ret
insl
shrb
aas
addr16
cmp
pushf
dec
mov
or
cmp
push
pop
out
add
imul
pop
cltd
fsubl
cmp
mov
bnd
sub
test
fdivrl
cwtd
or
xorb
sub
push
out
mov
add
mov
mov
adc
add
cld
cwtl
out
ljmp
jmp
bound
sbb
loope
xchg
sbb
pop
arpl
push
jb
adc
mov
insb
ja
jle
inc
incl
inc
push
jne
rol
mov
scas
icebp
mov
xchg
scas
insl
push
push
mov
pop
inc
sti
pop
test
sti
push
xchg
jmp
aaa
lahf
les
pop
aas
cmp
movsl
xor
fdivrs
xchg
clc
insl
mov
sbb
xchg
in
lret
dec
xlat
pop
aam
cld
lcall
int
xchg
repz
lahf
loop
sbb
sbb
imul
sahf
mov
sub
and
fldcw
dec
xchg
cmp
ret
lea
frstor
pop
sub
aad
push
mov
xor
push
in
mov
mov
daa
hlt
xchg
mov
mov
push
mov
addr16
mov
inc
ss
sbb
aaa
mov
movsl
jae
pop
jo
pop
cli
xlat
gs
les
jae
inc
stos
and
sub
push
scas
push
call
lret
xor
dec
xor
fucomip
and
daa
mov
inc
sbb
dec
out
out
shll
push
inc
fsubs
mov
jge
sub
and
push
and
sti
jmp
and
xor
cmp
mov
ds
xor
add
movb
test
test
outsl
cmp
pop
or
scas
fwait
test
add
inc
je
adc
sbb
cmp
inc
cmpsb
mov
cmp
pushf
int
push
and
pop
clc
roll
es
sbb
ss
jb
mov
cmp
aad
hlt
and
mov
nop
jo
into
cmpsb
sub
mov
cltd
mov
stc
shrb
out
push
xchg
ds
inc
inc
xchg
ror
mov
mov
cmp
fs
or
and
inc
cs
sbbl
push
mov
push
es
jp
cwtl
or
aas
outsl
outsl
aas
je
and
and
sbb
xchg
jne
adc
jbe
shr
cli
cwtl
aaa
pop
loop
shlb
in
mov
mov
mov
xchg
orl
push
jb
in
movsl
in
sbb
fwait
xchg
mov
jbe
add
fwait
add
pop
mov
mov
lods
add
xchg
fwait
sbb
jb
jne
sub
xchg
push
aad
jnp
xor
cltd
scas
pop
mov
lret
mov
sub
pop
mov
cli
push
add
and
shrb
jno
enter
repz
daa
jmp
cs
adc
or
shlb
jbe
inc
lcall
frstor
int
sbb
xchg
jl
aaa
call
push
jmp
fs
cmp
and
in
ja
add
icebp
mov
pushf
adc
lret
cs
inc
mov
das
fsubl
pop
aas
loopne
daa
xor
inc
or
test
lea
adc
mov
xor
jnp
adcl
es
jo
nop
xor
outsb
aas
popf
cltd
outsl
and
and
enter
enter
shr
dec
xor
filds
dec
leave
mov
hlt
das
add
bound
rcll
mov
add
sbb
clc
inc
fsubl
and
push
ret
pushf
pop
negb
adc
or
sub
movl
cvtps2pi
push
adc
or
popa
lods
mov
stos
push
push
mov
xlat
push
bnd
dec
or
pop
push
sbb
insl
push
dec
xor
ja
sub
daa
xchg
leave
xor
cmp
sub
or
int
stos
mov
jl
rcl
gs
adc
inc
lret
sub
push
add
fwait
adc
jp
lret
adc
mov
cmp
adc
push
ss
lret
daa
xlat
fs
stc
or
out
in
jl
testl
adc
arpl
pop
test
jno
call
adc
sub
out
cmp
sbb
sbb
je
dec
cltd
cwtl
into
xor
add
sub
scas
stos
dec
int
pop
or
push
mov
stos
sbb
stc
js
je
jle
or
out
mov
mov
xor
sar
int
sbb
xor
ds
mov
cmc
jle
jns
mov
inc
ljmp
cmp
fs
mov
cwtl
jmp
adc
or
nop
lds
ffreep
push
add
repnz
addb
jmp
sbb
data16
orb
outsl
in
jg
cmp
cmp
add
mov
icebp
test
mov
sbb
rol
xchg
mov
jb
add
inc
adc
sbb
add
bswap
filds
add
push
outsb
test
or
jb
mov
movsb
mov
enter
mov
sub
adc
aaa
leave
lret
repnz
mov
inc
mov
int
loope
jecxz
cmp
test
mov
cmp
add
sub
jmp
cltd
push
sbb
ss
xchg
ret
push
xchg
and
inc
and
push
mov
insb
cmp
pop
daa
fsub
sub
testl
popa
cmp
popa
jmp
and
repz
push
or
aas
jno
mov
push
xor
mov
xor
xchg
enter
inc
push
andl
je
push
lods
push
movsl
lahf
and
cmpb
into
cwtl
mov
jo
dec
jnp
and
fs
in
sub
icebp
lahf
sbbl
adc
or
cmp
push
inc
xchg
inc
cmp
lcall
adc
int3
jle
mov
jle
fidivl
es
jbe
imul
and
jle
ja
jge
adc
bnd
add
jne
and
cmpsl
adc
fnstsw
push
std
mov
mov
dec
xor
push
inc
mov
and
lcall
lods
mov
sub
jne
mov
xchg
cld
repz
inc
cmp
cmpsb
jge
mov
imul
dec
cmp
adc
adc
sub
pop
jnp
sbb
test
sbb
and
das
cld
clc
andb
push
movsl
jno
fistl
sub
mov
enter
mov
jle
arpl
pop
jmp
mov
sub
adc
add
int
xchg
jge
push
movsb
pop
push
mov
add
push
sbb
pop
dec
mov
inc
mov
mov
lret
insl
ljmp
cwtl
ret
ret
and
dec
sub
ljmp
lahf
jno
push
mov
mov
add
xchg
arpl
xor
or
cmp
mov
int3
jle
lret
or
ds
out
les
mov
in
fiaddl
mov
inc
test
jae
shlb
or
and
jmp
sbbb
insb
pop
mov
or
lods
jb
int3
xor
and
pop
insb
enter
inc
in
mov
adc
sub
dec
sti
outsb
sub
fldl
dec
cmc
xchg
sub
pop
add
arpl
test
inc
lahf
mov
mov
test
cmp
xor
jbe
xor
add
mov
jne
fdivrp
fisubrs
add
mov
lret
rolb
fs
rcr
bound
jg
jae
mov
stc
mov
mov
and
push
popa
repnz
dec
ret
sahf
xor
je
dec
daa
and
push
mov
enter
xchg
and
mov
insl
insl
or
mov
lcall
jbe
and
mov
jbe
or
jmp
xchg
fsubrs
nop
jecxz
repz
sub
cmc
adc
jbe
mov
inc
inc
test
ss
lods
orl
or
xchg
xor
mov
aad
scas
js
xchg
addps
sbb
mov
daa
mov
cmp
sbb
xchg
popa
enter
je
imul
inc
loope
cmpsb
xchg
adc
cmpsb
out
pop
mov
adc
aam
inc
jp
test
push
cmpl
daa
leave
popf
sbb
movsb
sbb
ret
pop
mov
lods
lods
lea
push
mov
cmp
pop
adc
add
repz
mov
ficomps
inc
push
jne
adc
pop
aas
test
inc
imul
push
sub
push
mov
into
and
add
rolb
mov
mov
scas
push
sbb
sub
xchg
or
sarb
iret
imulb
and
pop
mov
rcrl
or
sbb
faddl
stc
mov
or
nop
xorb
and
cld
jno
in
lds
push
push
aam
mov
sub
cmp
pop
daa
ds
pop
cmp
sub
cmpsl
out
loop
aad
in
fnstsw
pop
inc
inc
sti
add
inc
movsb
ret
sub
xlat
inc
and
mull
push
mov
mov
cmp
loopne
insb
mov
xor
jns
into
or
mov
js
stos
mov
sarl
cmp
fwait
mov
enter
ss
nop
push
xlat
add
push
xor
pusha
sbb
lea
jae
daa
jo
shlb
mov
outsb
das
pop
xor
aam
lods
clc
push
cli
jne
and
mov
aad
push
sub
rcrb
sarl
xlat
sbb
and
dec
outsb
repz
sub
aaa
sbb
les
sar
sbb
scas
push
add
or
and
or
mov
scas
add
add
insb
pop
rorb
jbe
push
add
jecxz
fadd
gs
or
std
les
mov
int3
repz
aaa
mov
fs
mov
gs
push
mov
push
push
push
orb
xchg
sbb
outsl
mov
pop
adc
jmp
sub
mov
shlb
add
fs
pop
dec
sub
mov
sbbb
adc
testl
fs
cmp
cmpb
cs
cltd
sub
imul
into
xor
aam
aam
xchg
mov
idivl
stos
jp
mov
and
add
xor
addr16
bound
sbb
dec
iret
cmp
sub
xchg
ja
pop
jl
pop
and
mov
mov
cmpsb
sbb
cmp
sbb
xchg
popa
sbb
mov
aas
adcl
ss
jle
dec
or
push
addb
outsb
ficoml
xchg
cmp
pop
mov
test
jl
outsb
cwtl
pop
add
lcall
mov
or
cli
mov
mov
sbb
test
add
rcr
sub
mov
in
fisttpll
addr16
mov
ret
cmpsl
cld
push
push
push
mov
jo
sbb
bound
cmp
or
insl
repz
xor
jno
sbb
out
push
jno
pop
sub
bound
repnz
scas
xchg
and
pop
lock
stc
repnz
pop
jbe
xlat
xchg
std
xor
aaa
cmc
cltd
call
xor
inc
jne
fldcw
ficoms
int
les
mov
pop
xchg
mov
cmpsl
loopne
or
xchg
jmp
leave
out
sub
ret
mov
daa
inc
adc
and
jb
pop
or
xchg
bound
pop
shll
or
in
pmaxub
fistpll
test
mov
insl
and
jge
icebp
dec
int3
mov
enter
mov
jns
adc
pop
pop
or
mov
add
nop
pop
xlat
cli
mov
mov
rorl
sbb
xlat
inc
mov
or
and
jne
out
pop
xor
in
dec
sbb
jnp
repnz
xchg
stc
cmp
dec
nop
and
stc
loopne
adcl
clc
out
sub
inc
call
xchg
push
inc
in
xor
xor
cmp
hlt
fmuls
fucomp
mov
sbb
mov
cmp
dec
jg
stc
les
xor
pushf
or
stc
mul
push
daa
mov
gs
dec
cmp
cmp
push
jmp
rcll
popf
outsb
adc
xchg
adc
pop
dec
pop
gs
adc
add
pop
mov
push
mov
iret
add
dec
mov
mov
fbld
ret
and
push
fcmove
fisubrl
push
in
shll
fdivl
imul
adc
and
sahf
inc
inc
pop
sahf
sbb
or
add
add
pop
sbb
fimuls
dec
stc
divb
insb
inc
aas
test
lods
pop
out
rcll
sbbl
push
jmp
add
leave
inc
mov
push
cmp
insb
inc
mov
jmp
mov
push
mov
push
xchg
jne
gs
xchg
insl
dec
ljmpw
mov
bound
enter
mov
cmovle
in
std
fisttpll
push
in
mov
push
adc
fcmovnb
fidivrs
push
int3
mov
or
dec
add
add
jns
push
inc
in
push
stos
addb
dec
xchg
cli
les
repz
pop
pop
mov
and
mov
xchg
leave
adc
sub
xor
and
mov
lcall
fiaddl
movsl
jae
jmp
lds
dec
xchg
dec
add
loop
lds
pop
sub
jbe
cmp
push
dec
scas
xchg
call
repnz
jo,pt
and
push
inc
push
pop
ja
sbb
dec
lds
in
bound
jp
cmp
pop
movsb
xor
jp
push
movsl
sbb
test
xchg
adc
jb
sarb
cli
fnstenv
mov
sbb
test
xchg
stos
pop
sbb
jle
add
mov
or
xlat
xor
outsb
or
and
outsl
and
lret
mov
sub
out
xchg
jno
ficomps
cs
inc
lock
cmpsl
jbe
divl
testb
cmp
xor
lret
and
es
stos
sub
jbe
or
pop
jo
push
push
jne
xchg
jnp
sub
lock
mov
dec
iret
push
jb
fs
and
sub
add
out
sbb
ljmp
out
and
fiadds
jno
idivb
lret
stc
mov
mov
mov
inc
sahf
out
lods
jbe
sbb
and
mov
out
dec
jge
mov
out
xor
insl
roll
loop
movsb
loope
or
test
xor
inc
inc
cmp
fnstsw
push
mov
dec
cmc
test
cli
mulb
xchg
mov
pushf
clc
xchg
dec
hlt
push
pop
stos
insl
cltd
scas
aam
sbb
inc
cwtl
sbb
mov
xchg
dec
mov
pop
mov
sbb
mov
jecxz
ja
xchg
sbb
and
push
mov
stos
movsb
into
nop
or
je
daa
lea
shlb
add
aaa
repz
stos
lods
add
jbe
popa
cwtl
insb
insl
add
outsb
ds
mov
ret
pop
cltd
xchg
push
jle
test
add
in
inc
jl
add
push
jb
and
out
loopne
mov
ja
xor
xor
xor
inc
sub
movsl
dec
mov
psrlw
push
popf
pop
mov
inc
es
hlt
dec
push
roll
or
push
jne
fidivrl
call
cltd
mov
push
push
cmp
adcb
xor
and
scas
mov
pop
int
lahf
jmp
rorl
jle
mov
daa
mov
xchg
rcrb
adc
pushf
shll
punpcklbw
outsl
popf
and
add
mov
jmp
jb
out
insl
popa
xor
or
bsf
adc
or
in
jo
lods
sti
cli
xor
int
or
cmp
add
xchg
sbbb
mov
adc
lea
lods
mov
sti
cld
adc
std
sbb
popa
loope
lahf
jp
push
dec
adcb
daa
lds
cs
adc
sbb
push
mov
test
test
inc
or
jp
mov
pop
mov
lods
lods
iret
outsb
ss
push
mov
leave
sti
std
das
jle
incb
cmc
lret
and
js
sub
cwtl
adc
fdivrl
sti
push
icebp
stc
ljmp
adc
lcall
fcomps
mov
sbb
ret
fcoms
and
dec
mov
push
inc
jl
xchg
aad
dec
fstpt
jb
imul
loopne
fidivrs
mov
pop
mov
dec
adc
dec
imul
pop
outsb
add
enter
fdivl
subl
fsts
add
sub
test
fistpll
add
jnp
sbb
repnz
addr16
cmpsl
pop
mov
outsl
mov
dec
or
push
inc
dec
lea
jg
in
dec
adc
inc
insb
xor
mull
movsl
sub
inc
dec
js
ljmp
sub
sbb
push
pop
into
leave
loope
push
movsl
cmp
loopne
mov
scas
cmpsl
xor
cld
and
shlb
je
push
cmpsb
jmp
repz
mov
bound
push
push
leave
ja
adc
test
jns
cmp
cmp
faddl
cmpsb
data16
xor
jge
sbb
lcall
xor
stos
lahf
or
sub
dec
xor
flds
inc
jmp
jae
fadds
sub
aam
mov
mov
stos
and
pushf
call
xor
xchg
add
sti
and
stos
pop
mov
sbb
in
add
or
push
or
scas
xor
cmp
inc
xchg
mov
das
out
fistpll
ja
ljmp
bnd
dec
fucom
fldcw
fwait
lds
adc
sbb
and
ror
fldt
mov
into
and
dec
xlat
fcomps
xchg
leave
add
mov
xchg
dec
xor
xor
jp
jg
out
sbb
pop
cmp
mov
mov
adc
jnp
ss
or
push
xchg
aad
inc
loopne
jmp
iret
or
in
mov
aad
pop
faddl
mov
sub
or
pusha
push
arpl
fildll
or
insb
dec
scas
inc
sbb
inc
arpl
lret
sub
pop
addr16
ja
cmp
xchg
fnstcw
push
mov
inc
mov
xchg
jmp
mov
inc
ljmp
mov
movsl
pop
mov
xchg
lcall
push
cli
mov
hlt
add
in
or
cli
ljmp
ret
mov
outsb
sub
adc
cmpsb
xchg
mov
rcr
out
movsb
inc
mov
or
sbb
dec
sarl
push
sbb
lcall
test
inc
dec
xor
out
dec
lret
mov
test
cmp
mov
aas
les
pop
ds
in
mov
sbb
xor
out
xorl
cmp
cmp
mov
mov
pop
dec
repz
arpl
out
xchg
fadd
and
divl
and
cmp
lret
xor
mov
pop
or
cltd
aaa
in
iret
je
mov
mov
cmc
push
fucom
icebp
adc
inc
movsl
loope
mov
push
sub
scas
xchg
inc
cmc
jns
xchg
aaa
lcall
inc
jns
mov
mov
inc
mov
add
bound
pop
inc
mov
inc
out
aaa
add
mov
mov
imul
nop
inc
and
add
ret
hlt
dec
mov
nop
cmpsl
fmul
xchg
lahf
mov
addr16
cltd
mov
lods
mov
sbb
jb
jg
lret
add
jge
mov
addr16
fxam
pop
or
mulb
mov
add
rclb
repnz
pop
jbe
enter
or
xchg
inc
inc
fiaddl
nop
mov
call
xor
inc
aam
ds
jecxz
nop
arpl
cmp
mov
inc
cmp
lock
jmp
popf
divb
hlt
ds
mov
adc
sarl
scas
xor
push
hlt
push
shlb
aaa
xchg
in
jnp
cld
adc
call
test
shrb
sub
insb
icebp
inc
add
inc
adc
cmp
add
xchg
test
push
imul
push
movsl
sbb
push
adc
loop
and
mov
xorb
ds
loopne
lds
jp
pop
cmp
fdivs
jge
sub
cmpsl
and
jb
cli
outsl
fildl
push
lds
aad
mov
pop
in
sarb
lea
jbe
xchg
xchg
xchg
mov
ja
rcrl
cltd
add
and
icebp
pop
push
cmp
out
or
dec
ficomps
sub
adcb
iret
divl
aad
add
push
xor
mov
lret
out
orl
out
lret
and
lods
jmp
and
push
ljmp
xchg
sbb
fisttps
repnz
loop
fsubrs
xor
add
adc
xor
pop
lret
push
imul
xor
repz
or
pop
dec
mov
leave
or
cltd
xchg
xchg
sahf
add
xor
adc
sbb
test
mov
jl
mov
xchg
lret
inc
jbe
enter
hlt
imul
mov
int3
jg
push
test
jbe
push
int3
cltd
idiv
mov
aas
shll
rcll
int3
data16
test
fwait
xor
mov
push
mov
xchg
push
enter
push
mov
shll
and
jg
jne
dec
ret
int3
pop
dec
fdiv
inc
pop
or
sbb
ror
cmp
fs
mov
push
push
ret
rorl
cmp
push
adc
es
clc
pop
add
in
nop
mov
sbb
jecxz
cmpsb
loop
mov
leave
aam
jno
push
aas
insl
insl
inc
into
mov
push
xchg
cld
mov
jl
add
and
mov
outsl
pop
test
adc
dec
mov
repz
add
xchg
inc
xor
pop
mov
imul
cmpsb
lds
mov
and
xor
lret
aaa
xchg
push
imul
sti
dec
je
in
mov
inc
fwait
movsb
sbb
xchg
bound
sbb
aam
inc
mov
sarb
jge
nop
push
xor
cld
data16
pop
mov
fxch
movsb
gs
int
jnp
inc
out
pushf
mov
dec
into
mov
ret
dec
roll
xchg
leave
pop
fisubrl
inc
cmp
mov
je
fistl
mov
aaa
outsl
pop
lret
adc
xor
and
and
mov
std
xchg
push
sbb
sbb
sbb
xorb
pminsw
int3
mov
inc
pop
jns
sbb
lea
sub
lret
lret
clc
pop
rcrl
mov
aad
cmpsl
inc
popa
sbb
xchg
lret
inc
dec
pop
in
sbb
inc
pop
mov
sub
cmp
push
daa
push
jg
adc
adc
push
cmp
jmp
xor
lods
xchg
inc
ffree
arpl
aam
cmp
or
cld
inc
pop
mov
jmp
int3
icebp
rcrb
mov
and
inc
jns
test
stos
push
notb
out
xchg
rcll
cltd
mov
push
adc
out
jb
aaa
inc
pop
or
dec
cmp
sub
xor
pop
sbb
js
xor
pop
dec
cmc
add
lods
push
insb
xchg
and
pop
aas
dec
mov
dec
out
pop
cmc
xchg
testl
jg
aas
fwait
out
aaa
wbinvd
call
cltd
sub
sbb
out
mov
out
xor
inc
mov
cli
pop
pop
jg
call
pop
rcr
cmp
dec
arpl
rcll
lock
inc
pop
sub
xchg
addl
mov
repz
pop
aad
or
dec
inc
adc
add
xor
fcoml
mov
xchg
arpl
leave
jnp
aad
rcrb
in
jbe
xchg
xlat
in
jne
mov
or
xchg
push
faddp
sub
shlb
mov
mov
add
xor
pop
pop
push
mov
and
cmc
inc
mov
lods
mov
shll
dec
das
pusha
gs
jns
lods
fwait
test
popaw
outsl
imul
jp
jl
push
inc
lds
inc
dec
rcll
push
shl
sti
out
adc
jo
jmp
scas
cmp
js
or
aad
add
mov
test
mov
imul
sbb
pop
inc
les
test
mov
je
xchg
mov
ficomps
rorb
jb
bound
je
inc
popf
popf
sbb
mov
and
cs
shrl
sbb
mov
or
fstpl
loope
push
or
out
inc
dec
mov
inc
std
adc
das
movsb
xor
inc
pop
enter
sub
mov
pushf
jo
mov
push
cltd
fdivr
in
add
mov
std
push
mov
je
cmpsl
rclb
fmulp
int
jnp
sub
push
fsubl
mov
add
jle
movsb
mov
adc
adc
xor
movsb
fidivl
sbb
jo
imul
test
fstps
sub
sbb
mov
xchg
enter
aam
or
xor
popa
movsb
es
push
cs
adc
dec
mov
jbe
mov
bound
pop
add
andb
sbb
cwtl
mov
andl
jae
je
jg
mull
sbb
pop
notb
leave
or
xor
iret
lods
fwait
sbb
ret
push
sub
push
cltd
push
cmp
or
fsubrl
and
ret
xor
ret
iretw
test
xor
repnz
stos
popa
pop
or
ficomps
out
ret
xlat
pop
enter
ja
dec
inc
jg
jns
gs
sti
sarl
cli
sbb
xchg
pmaxub
xor
stos
jp
inc
fidivrl
jp
jmp
fnop
or
mov
add
jns
cld
and
into
cld
or
xchg
mov
fsubrl
xor
inc
movsl
jmp
addr16
sub
stos
xchg
mov
filds
jg
dec
sbb
mov
cmp
adc
xor
dec
or
push
jle
std
adc
pushf
mov
push
mov
inc
clc
loope
or
sti
pushf
iret
push
jmp
cli
imul
xchg
cmp
sbb
into
push
sbb
mov
adc
mov
push
jb
fiaddl
negl
pop
mov
mov
lcall
insb
mov
lahf
inc
imul
adc
adc
jnp
or
filds
push
add
sub
and
scas
jle
inc
fsubs
nop
stos
sub
in
lret
push
and
push
jns
mov
mov
push
or
dec
mov
pop
and
clc
xor
cmc
adc
mov
mov
stc
dec
sub
jo
xchg
je
popa
mov
and
mov
or
lock
test
push
mov
jle
add
dec
lods
unpcklps
fnstsw
cld
xchg
mov
insl
or
fistpl
fwait
cmp
call
sahf
stos
pop
pop
push
js
xor
xlat
test
lds
cs
hlt
mov
fiaddl
sahf
cwtl
repz
cmp
mov
xchg
pop
xchg
aam
jmp
repnz
jnp
std
inc
sahf
filds
scas
xchg
jecxz
lret
inc
or
lahf
xchg
fsub
movsl
addb
mov
dec
js
hlt
loopne
outsb
jno
mov
or
inc
mov
sub
pop
movsb
insb
ds
movsl
aam
inc
sbb
clc
jae
xchg
mov
in
adc
xchg
ja
daa
movsb
sbb
inc
mov
push
mov
lock
xchg
mov
sub
dec
mov
outsb
rcrl
jmp
xor
pop
js
xchg
lcall
pop
dec
insb
negl
loope
push
fldl
jmp
push
mov
outsb
addr16
inc
into
add
mov
ret
push
pop
xor
xchg
sahf
xchg
mov
fcoms
out
testb
js
push
push
push
sbb
add
leave
pop
mov
ret
push
lcall
lcall
push
shll
into
icebp
orb
movsl
fld
cltd
push
data16
jge
mov
pop
int
fbld
pop
sbb
gs
je
aaa
mov
pushf
fidivs
jg
xchg
in
or
xor
dec
lea
push
add
enter
test
push
mov
pop
es
jnp
xchg
mov
xor
pop
in
or
icebp
xor
je
push
jmp
push
mov
push
mov
cmpsb
mov
mov
orb
mov
les
push
push
mov
leave
mov
adc
imul
jne
shll
mov
cmpsl
jl
lahf
inc
lds
pop
push
mov
cmp
sbb
add
mov
inc
fsubrs
or
and
popf
pop
loop
call
ret
mov
cmpsb
pop
dec
mov
or
fstp
cmp
xchg
mov
dec
dec
cwtl
xchg
dec
fwait
insl
nop
test
sbb
ss
loopne
ds
in
andb
fsts
jge
adc
cs
pop
fwait
loope
mov
jo
orb
pop
pusha
js
and
es
cmp
movl
xor
out
inc
fdivp
pop
dec
fwait
add
inc
dec
adc
call
pop
negl
sbb
iret
nop
inc
xor
movsb
es
push
inc
and
xor
mov
fnsave
dec
mov
out
repz
aas
js
push
loope
inc
and
outsb
sbb
addr16
xlat
mov
imul
xchg
decl
sub
stos
pop
inc
int
mov
lock
enter
movsl
orb
pop
dec
call
inc
cmpsb
mov
dec
mov
in
inc
cli
gs
mov
cmp
mov
and
lcall
scas
or
repz
ds
mov
lds
xorb
nop
outsb
dec
fwait
mov
addr16
xlat
sub
pusha
mov
pop
pop
xchg
mov
dec
sub
jmp
jns
mov
cmpsb
cltd
sub
lds
imul
mov
ficoml
aam
into
mov
inc
popf
mov
pusha
jg
aaa
jbe
imul
xor
decb
lds
aam
inc
or
in
mov
bound
call
xchg
sti
mov
dec
sub
fbld
jle
cli
jb
cltd
fistl
out
cmc
sti
fsubp
push
cltd
ret
rolb
cwtl
pop
push
hlt
xor
test
lretw
sbb
cmp
outsl
cmp
push
cmpsb
cs
mov
repnz
cmp
lds
imul
xchg
and
iret
push
jno
scas
subb
mov
xor
push
aad
push
fwait
out
mov
pop
into
add
dec
dec
cmp
add
or
adc
adc
lock
mov
pop
ficoml
movsl
sbb
xor
popl
lret
sbbl
jo
aam
and
pop
cmp
add
test
sti
mov
mov
fsubs
add
inc
pop
outsl
fs
and
adc
add
fidivrl
cmpb
enter
inc
nop
xor
cmc
icebp
sarl
mov
or
jg
lods
jecxz
add
pop
std
mov
mov
test
and
mov
adc
xchg
mov
insb
fimull
pop
mov
fcmovbe
mov
fmull
mov
or
xor
jne
pop
loop
iret
ret
sbb
bound
xchg
adc
adc
dec
das
jp
or
add
cli
sahf
rclb
inc
or
sub
arpl
jg
push
xchg
lods
cmp
cs
daa
xchg
lods
jp
test
outsb
jns
insb
sub
inc
cwtl
js
mov
jbe
jae
pop
flds
loop
daa
and
cmp
mov
jno
out
xchg
imul
fsubrs
mov
ffreep
add
lret
pop
sbb
mov
notl
imul
xchg
sub
push
fbstp
out
inc
adc
xchg
sbb
or
ljmp
lcall
imul
push
fcomip
pop
jmp
rclb
push
push
scas
std
daa
sbb
xchg
sbb
cli
sub
mov
jo
orb
ljmp
add
mov
mov
pop
shr
arpl
das
call
or
inc
jp
pop
call
test
fwait
inc
repnz
pop
in
add
mov
mov
add
lret
les
push
sbb
js
mov
fdivs
ja
and
mov
shrl
cs
mov
sub
cmpl
pop
cmp
cli
and
sub
std
int3
mov
dec
fs
cmpsl
push
sbb
lcall
pop
dec
mov
out
jg
nop
inc
adc
adc
popa
fdiv
jle
add
and
push
ds
cmpsl
jo
subb
push
mov
not
mov
ret
lahf
and
sbb
jbe
insl
das
aad
xchg
int3
fildl
popa
sub
and
gs
inc
add
or
mov
stos
xchg
je
jecxz
inc
popa
or
sub
ds
mov
xor
sub
sti
push
fdivs
imul
inc
test
and
shll
out
mov
push
mov
push
push
out
aad
mov
xchg
mov
lods
add
xor
mov
pop
scas
dec
add
js
xchg
test
aaa
or
or
xchg
lds
mov
add
push
bound
test
push
lahf
xchg
push
sbb
lock
xor
and
mov
sub
in
je
jns
sarl
push
push
divl
shl
jnp
loopne
clc
push
xchg
inc
lea
sti
sbb
xchg
xor
in
iret
mov
gs
add
add
inc
imul
outsb
das
addr16
jp
iret
or
or
mov
fdivs
ja
and
mov
sub
je
mov
into
and
ds
mov
sub
mov
jle
imul
pop
push
and
jmp
push
adc
inc
sbb
xsavec
shlb
inc
dec
adc
jg
rcr
popf
sahf
out
mov
out
add
push
bound
adc
pushf
adc
and
ficoms
test
lcall
stc
fwait
jne
inc
or
jmp
dec
mov
inc
xchg
dec
xor
dec
shl
fs
leave
xchg
jge
add
fbld
cmp
xor
push
gs
sub
fcoms
sbb
adc
ret
into
xchg
ja
shlb
or
and
les
inc
testb
loop
sub
lahf
daa
ja
and
mov
stc
sti
push
ja
mov
in
mov
jp
cmp
imul
sbb
ja
pushl
or
stc
mov
sbb
mov
clc
mov
dec
in
mov
push
inc
add
mov
shlb
outsl
xor
ss
lret
adc
add
fs
cmp
out
repz
cmpsb
xor
xor
push
lea
pop
outsl
mov
inc
into
push
or
psubd
fsubl
sub
and
and
sub
call
push
sbb
sbb
in
lods
shl
pop
fcomps
shlb
push
out
jg
add
daa
xor
imul
loop
add
xchg
mov
push
cwtl
testl
adc
sub
into
add
in
aad
sub
ss
add
lahf
loop
fcoml
inc
jmp
cmp
pushf
lret
or
jnp
or
inc
mov
aad
and
sub
call
mov
xchg
sub
lock
push
or
jae
arpl
sbb
arpl
idivb
je
dec
movsb
cwtl
inc
imul
mov
rorl
mov
adc
cmp
cs
insl
mov
mov
dec
clc
xlat
imul
dec
pusha
repnz
sbb
xor
xchg
cmp
cmp
pop
jecxz
arpl
fst
adcb
out
orb
inc
fsubs
cmc
sbb
add
stos
cld
in
jge
fwait
out
mov
loope
inc
adc
dec
cmp
mov
aaa
or
mov
lds
divl
push
dec
jge
jne
cmpb
jnp
mov
je
shl
jge
rorl
mov
ds
vpshlq
add
les
sbb
test
leave
dec
mov
dec
push
negb
popa
cmp
cmp
xchg
inc
jmp
mov
repz
pop
sub
add
hlt
adc
push
mov
push
out
add
movsb
cwtl
pop
das
xchg
sub
jne
push
loope
or
mov
pop
sub
outsb
xchg
pop
dec
cli
pop
out
aam
movsl
xchg
mov
inc
in
jo
lret
mov
mov
jg
xchg
pop
out
ret
adc
dec
xchg
gs
idivb
iret
and
xchg
arpl
shrb
xchg
xchg
pusha
add
sub
adc
into
pop
add
push
sub
xchg
mov
jl
cmp
addr16
outsl
popf
xchg
test
in
pop
mov
stos
mov
sub
push
inc
dec
rclw
pop
add
jecxz
fs
mov
and
shr
jne
dec
mov
pop
sbb
pop
mov
or
in
pusha
ds
std
adc
sbb
mov
xor
mov
xorl
pusha
adc
adc
fisubs
idivl
aas
inc
or
stos
stos
add
dec
jae
push
das
jmp
icebp
dec
mov
out
jnp
inc
or
fidivrs
sub
fisubs
fisttps
add
scas
sub
sbb
push
subl
or
pop
gs
mov
neg
adc
sahf
or
mov
mov
adc
lds
inc
adc
stc
bound
cld
rcpps
mov
je
and
aad
xor
es
push
sub
sub
push
xchg
xor
ror
xchg
dec
into
orb
mov
std
sahf
xchg
push
cwtl
jmp
setge
repnz
mov
push
and
hlt
call
push
push
inc
shll
cwtl
out
pop
jp
mov
mov
rcll
jno
rorl
repnz
push
lock
mov
mov
lods
add
rol
arpl
jmp
cld
push
pop
nop
ret
ss
sti
rcrl
sbb
test
jecxz
mov
iret
xchg
shl
scas
dec
pop
outsl
iret
mov
cld
jp
adc
sbb
add
adc
add
add
xchg
push
sbb
xchg
and
shll
mov
push
cltd
mov
lahf
inc
sbb
ror
mov
stc
into
cmpsl
and
push
and
pop
cmc
jmp
xor
ret
inc
jno
xor
mov
shl
sbb
xor
enter
xor
xchg
fisubs
fsubl
fisubs
movsb
inc
mov
movsb
or
ficoml
jne
idivb
push
rolb
repnz
andb
or
ds
sub
mov
jmp
insb
adcl
hlt
in
jo
pop
cli
aas
inc
sarl
add
mov
test
jno
mov
cmpsl
ljmp
lock
mov
das
adc
rorb
and
ja
popa
repz
jge
ds
mov
and
fnstcw
inc
loopne
and
mov
or
vmwrite
jns
push
scas
pop
or
sahf
mov
xor
pop
fbstp
sahf
pop
mov
loop
psubusw
ljmp
xchg
add
xchg
dec
dec
push
sub
fwait
jmp
mov
xchg
xor
movsb
xchg
vfnmadd132pd
not
call
cmc
and
push
movsb
xchg
xchg
fidivrs
adc
xorl
daa
in
rolb
sbbl
ret
push
jns
stc
loope
clc
bound
mov
lret
mov
mov
inc
and
push
lods
lods
call
adc
xchg
shrl
mov
dec
ds
call
leave
cmc
sbb
repz
fnsave
mov
xchg
loopne
mov
call
lret
fldl
test
push
lret
mov
push
add
mov
jb
add
mov
mov
sub
decl
es
pop
cltd
sub
cmp
repz
cmp
sbb
sub
adc
xlat
notb
cwtl
fistpll
je
jnp
ret
or
jne
pop
cmc
std
andl
pop
in
sysenter
push
test
jmp
jl
stos
or
arpl
push
push
cmpsl
xchg
jne
or
loope
lods
mov
mov
fnstenv
fsubrs
and
loopne
adc
arpl
stos
or
fdivr
pop
imul
nop
pop
dec
pop
jb
cmp
in
mov
shlb
test
bound
adc
push
das
mov
imul
sub
cld
out
or
add
mov
es
jecxz
clc
lret
inc
mov
data16
js
or
stc
mov
movb
pop
arpl
ret
out
jns
outsl
and
mov
and
gs
in
cld
xchg
fwait
inc
sahf
lea
xchg
cmpb
lcall
xor
ljmp
push
ljmp
sbb
dec
clc
xor
jg
in
mov
inc
add
test
mov
pop
mov
xchg
in
in
cltd
or
mov
or
lock
add
dec
push
cmpsb
dec
xor
jecxz
xchg
test
cmp
inc
or
repz
subb
jae
mov
push
movsl
adc
and
xor
and
xlat
arpl
and
push
popf
lea
dec
push
and
div
repz
adc
inc
dec
pop
adc
mov
clc
add
pop
jae
push
jmp
sbb
jbe
gs
ds
inc
jbe
test
daa
mov
xor
dec
cmpsl
jle
sbb
jmp
mov
jae
rorb
in
fistpl
cli
add
lock
repnz
push
add
and
testl
push
mov
cmp
or
xchg
pop
iret
inc
je
pop
lds
int3
ret
add
rcl
push
or
arpl
dec
ret
xchg
adc
leave
ucomiss
nop
mov
xlat
push
ljmp
in
xor
sbb
or
mov
inc
aas
call
jbe
push
and
mov
sbb
xchg
mov
loop
mov
loopne
or
cmp
stos
outsl
pushf
dec
test
lods
out
je
add
dec
lea
inc
xchg
push
add
inc
mov
aaa
mov
add
mov
mov
dec
add
sub
idivl
jne
push
out
daa
fmull
xor
jle
pop
xchg
cmp
dec
add
repnz
das
push
popa
jns
sub
dec
mov
xchg
sub
ja
pop
inc
mov
fs
cmp
jne
sub
pop
add
das
push
dec
xchg
lds
mov
adc
sahf
mov
insb
or
stos
pop
cwtl
nop
out
pusha
enter
push
cmovnp
mov
sahf
adc
cmp
pop
jg
xchg
data16
jns
xchg
lahf
rorb
mov
cmpl
or
sub
jmp
das
ss
sahf
mov
mov
mov
jl
ljmp
xor
les
lock
sahf
shl
sub
xchg
mov
dec
mov
mov
xlat
sarb
pop
jb
pop
sarl
xchg
pop
inc
jmp
movsb
fwait
and
sarb
cmp
js
icebp
adc
xor
jge
adc
test
icebp
and
fcompl
inc
sbb
ss
loop
push
sti
pushf
cli
dec
mov
dec
das
jle
mov
into
stos
jge
loop
sub
add
jo
ja
add
xchg
adc
mov
addb
or
mov
es
std
lret
mov
arpl
addr16
mov
cmp
loope
sarb
cmc
push
int
jmp
cmp
stc
insb
inc
jg
fwait
jp
int3
insl
inc
inc
mov
cmp
test
aas
cmc
and
stc
sub
mov
int
pop
inc
cmp
mov
xchg
inc
xor
dec
xchg
aaa
mov
loopne
cli
pop
mov
subb
xor
cmp
pop
call
icebp
jae
gs
call
pop
fidivrl
jo
fwait
pop
adc
test
jne
fldln2
pop
mov
xorb
mulb
or
cltd
sbbl
mov
pop
repnz
adc
cmp
push
sub
bound
repnz
mov
jno
addr16
out
and
push
ret
cmp
cmpsb
rclb
ret
mov
push
lea
movsb
push
mov
sbb
and
mov
addr16
mov
insl
push
decl
loope
loopne
icebp
adc
cli
mov
add
rcrl
in
data16
inc
pop
mov
pop
call
sbb
sub
gs
scas
and
sahf
mov
sub
jb
xlat
pop
sbb
adc
cltd
mov
sub
mov
stc
clc
sbb
xchg
popf
mov
mov
enter
rolb
xchg
dec
pop
aas
dec
out
sub
test
add
inc
lea
cltd
xchg
cwtl
add
mov
dec
out
sbb
movsl
inc
push
xor
mov
dec
test
sbb
aas
es
icebp
imul
cmp
xor
and
add
loop
ss
addr16
adc
mov
inc
xorl
push
aaa
push
dec
xorb
jg
ja
mov
inc
mov
mov
popa
pop
mov
daa
loop
push
adcb
push
cld
fistpll
jb
mov
inc
sbb
ret
test
js
mov
dec
fimuls
pop
enter
aad
sub
fcomps
insb
inc
cmp
inc
imul
xchg
movsb
sbb
call
popa
cmp
iret
sbb
dec
popf
sbb
addr16
mov
jae
int
sub
cmpb
jl
movups
adc
mov
jae
inc
dec
inc
dec
mov
xchg
push
ret
or
add
ljmp
mov
or
xor
dec
ret
xchg
dec
js
mov
add
into
pop
jg
test
sub
mov
push
mov
out
cli
fmul
mov
dec
lods
addr16
lcall
nop
or
mov
in
jae
sar
mov
fisttpll
cmp
int
loopne
cmp
scas
sti
ljmp
cmp
insl
movsl
cs
lea
mov
gs
jnp
or
mov
mov
mov
fnstcw
inc
insl
cmpsb
mov
dec
jl
imul
mov
dec
out
pop
xchg
divb
mov
jae
and
or
push
insb
jg
xlat
pop
dec
inc
inc
sahf
jno
pop
fidivrl
mov
jns
pop
dec
sti
xor
mov
ret
rcll
adc
cmp
pop
sbb
xchg
xor
addb
loope
divb
stc
jnp
fwait
out
pop
add
cmp
es
addl
cltd
inc
rolb
dec
dec
enter
mov
or
fstl
xchg
xchg
rol
outsl
outsb
idiv
aam
xchg
add
mov
mov
cmp
ljmp
cmc
mov
ljmp
lcall
inc
dec
orb
pop
adc
push
rcll
mov
sbb
fwait
jp
xchg
nop
mov
push
pusha
test
jge
adc
push
cwtl
scas
jecxz
sbb
xchg
dec
hlt
mov
cmp
insb
xchg
into
inc
jne
pop
sub
fiaddl
xlat
enter
daa
inc
lock
sub
add
lock
pop
mov
mov
cmp
jmp
push
jp
jmp
in
jmp
stos
push
fidivrl
cmpsl
pop
xor
out
dec
bound
lock
xor
stos
loopne
push
and
sbb
adc
iret
inc
iret
cld
adc
out
outsb
vhaddpd
int3
aas
push
sbb
pop
dec
out
mov
bound
or
clc
rcrl
inc
add
mov
filds
test
push
cmc
mov
jb
inc
push
fcoml
xor
xchg
sbb
popa
into
and
sahf
mov
and
aaa
xor
icebp
ss
mov
mov
xchg
test
imul
jnp
dec
mov
inc
pop
rolb
mov
adc
jno
push
mov
mov
inc
jnp
dec
cmp
pusha
aaa
cli
mov
xlat
sub
nop
arpl
add
add
cld
sbb
add
and
cltd
adcb
cmp
xor
in
jg
mov
jle,pt
fcom
and
subl
int
xchg
cmpsl
sub
add
pop
ret
xlat
mov
iret
or
or
dec
lds
sub
pop
xchg
test
sub
adc
outsl
cmp
movsl
and
imul
mov
pop
aad
pop
inc
pmuludq
loopne
push
daa
into
out
call
cs
mov
decb
or
cli
push
mov
cwtl
subl
pop
mov
leave
mov
mov
xchg
or
or
fstpt
inc
loop
stos
jb
pop
insb
stc
push
outsb
inc
fildl
cmc
pop
jb
adc
fstpt
adc
or
repz
aam
addr16
add
sbb
ret
outsl
mov
loopne
mov
inc
push
cmpsl
jns
push
xchg
xor
adc
xlat
adc
mov
inc
pop
dec
xchg
subl
mov
xor
std
movsb
adc
pop
mov
roll
cs
in
or
sbb
xchg
into
subb
xor
mov
lds
push
push
insb
pop
mov
mov
push
mov
cwtl
or
sub
imull
or
lods
testb
jl
inc
xchg
stos
push
das
push
scas
cmpsb
mov
je
inc
mov
shrl
bound
and
dec
jmp
or
mov
aas
dec
pop
mov
adc
inc
lock
jae
out
and
xor
push
pushf
pop
pop
std
jmp
mov
fcomps
insl
out
mov
ret
lret
movsl
ljmp
scas
std
rcrl
push
and
push
push
push
dec
mov
inc
add
stc
fstpl
sbb
cld
sti
cmp
into
xchg
inc
inc
sub
xor
jle
fistps
cmpsl
fdivrl
add
or
sub
mov
cli
adc
and
lret
lcall
subl
jle
incb
cmp
jmp
out
cwtl
jl
fistps
hlt
mov
inc
cmpsl
ljmp
mov
lret
sti
mov
out
sahf
sub
inc
popa
mov
pcmpeqb
popa
repnz
hlt
stc
adc
fiaddl
mov
cmp
les
push
fprem
xchg
mov
inc
mov
mov
push
sbb
xchg
adc
mov
loope
jbe
fwait
shrb
inc
loop
xchg
fstpt
negb
pop
xchg
pop
xchg
jo
push
or
pushf
pushf
in
push
fdivs
out
in
xor
stc
and
sbb
jno
dec
cmp
scas
mov
je
insb
negb
cmp
or
mov
cmp
movsb
mov
in
fdivr
sub
mov
in
dec
sbb
mov
insl
sbb
pop
addr16
xchg
insb
jecxz
nop
out
cli
adc
cmp
xlat
xor
loop
mov
sbb
inc
xor
sbb
and
mov
add
xchg
rcll
cld
or
mov
les
push
enter
cmp
jb
jns
push
jl
rcr
rol
mov
insl
xchg
or
shrb
and
jno
add
xor
push
scas
mov
cmc
sti
push
dec
sub
hlt
pop
clc
pop
pop
dec
test
mov
fildl
pop
push
mov
xlat
addr16
sub
arpl
jp
insl
stos
imul
fidivl
or
xorb
xor
lods
push
and
clc
addb
fs
pop
addl
adc
jnp
and
fstl
xlat
or
ds
dec
cwtd
push
xchg
inc
mov
xlat
inc
loopne
sub
lret
pop
ss
push
mov
sbb
jbe
jae
fwait
dec
adc
in
cmp
cmpsb
lock
out
out
jb
fisttpll
add
or
mov
and
aas
js
and
rcrl
cmc
data16
shrl
sbb
out
dec
adc
cli
data16
int3
cmp
sahf
add
xchg
stos
in
bound
push
pop
jmp
or
mov
nop
in
icebp
sub
mov
sbb
out
sti
out
pop
cltd
sbb
jg
mov
pushf
sbb
push
mov
xchg
outsl
lret
icebp
bswap
push
inc
nop
sbb
jo
test
popf
test
mov
stos
jl
lret
fidivrs
push
jb
pushf
mov
lea
rol
insb
loope
std
sbb
daa
call
push
adc
adc
inc
lret
sti
cmp
clc
mov
into
sbb
in
jne
out
out
out
fwait
orl
mov
sbb
movsl
mov
push
jle
jp
jmp
sbb
sbb
fisubs
mov
jno
in
or
cmp
adc
in
mov
push
or
in
cmpsb
sbb
push
push
jl
stc
xor
jle
mov
mov
mov
inc
xchg
inc
and
enter
bound
inc
scas
mov
pop
sub
imul
mov
aam
adc
lea
rcrb
cmp
jno
dec
sarl
xchg
jne
cltd
cmpsb
sbb
pop
pop
mov
imul
sarb
add
mov
dec
popf
fistpll
jnp
outsb
cli
outsb
insw
adc
stc
mov
es
repz
movsl
sbb
pushf
sub
dec
pop
fisttps
push
push
mov
adc
mov
sbb
pop
xorb
pop
shlb
int3
add
imul
ret
jmp
add
jbe
adc
int3
mov
pop
fwait
sbb
mov
mov
push
pcmpeqb
shl
sbb
hlt
loope
fwait
into
and
loopne
rclb
xchg
mov
lods
cmc
mov
repnz
ret
fstps
test
insl
jp
xor
fistpl
sahf
aam
fwait
jl
jge
sarl
mov
ret
ss
frstor
mov
mov
push
jl
in
les
xchg
inc
test
mov
mov
pop
and
mov
push
xor
dec
mov
int
push
adc
out
fcoml
pop
cmp
popa
test
fnstcw
xchg
cmp
xor
inc
lea
dec
mov
xchg
xor
in
aas
ljmp
aad
lahf
pop
ja
cltd
fstps
sbb
mov
pusha
out
or
sub
push
pop
jo
jg
lds
dec
in
push
insb
ds
inc
xchg
ret
pusha
sub
in
inc
jno
mov
cmp
lahf
test
ljmp
cli
inc
and
out
mov
adc
lods
jns
push
test
pop
pop
sub
dec
or
adc
shr
mov
lods
pop
mov
shl
js
pop
fs
jae
out
test
ljmp
mov
icebp
mov
insb
push
pop
aam
dec
fdivr
sarl
outsl
jae
hlt
mov
in
cmp
fwait
sahf
mov
outsb
scas
clc
addr16
fld
mov
push
xchg
jge
sti
push
jmp
cmp
or
loope
adc
ljmp
loopne
xchg
dec
mov
add
jl
adc
lea
mov
mov
mov
dec
mov
cmp
add
gs
lock
mov
fdivs
or
mov
xchg
fnstenv
jl
push
lcall
add
dec
push
std
hlt
fcomps
dec
sbb
or
or
pusha
xchg
inc
xor
mov
mov
loope
in
mov
inc
bound
shr
or
push
dec
adc
dec
mov
mov
leave
cli
fstl
mov
lret
inc
mov
xor
dec
sti
and
gs
test
std
cmp
mov
ljmp
xchg
movsb
push
addr16
sbb
jb
or
sbb
pop
fidivrs
aaa
ret
sbb
jne
sub
lock
jne
roll
loop
pop
movb
xchg
sbb
or
mov
mov
pop
test
inc
in
mov
xchg
fs
xor
stc
mov
mov
and
into
cmp
loope
rol
adc
loopne
jmp
or
lods
sbb
push
jnp
push
xchg
mov
jb
test
mov
and
loopne
test
in
inc
fldt
int3
sbb
stos
pop
pop
mov
push
je
sub
shrb
movsl
mov
mov
push
dec
mov
iret
and
xor
pop
mov
aad
jmp
adc
cli
and
out
inc
imul
mov
sub
xor
rcll
mov
movsb
fadds
dec
cmc
mov
je
push
push
add
cs
pop
sahf
into
dec
mov
dec
in
or
mov
popf
in
pop
sub
or
stc
shlb
js
dec
push
ret
jns
lea
ja
add
jmp
pop
jle
rorb
xchg
imul
jle
pop
push
jl
jmp
mov
lahf
xchg
xchg
jl
inc
fsubrl
lds
jns
adc
loopne
lret
fwait
add
lcall
aaa
ud0
mov
mov
loopne
dec
jl
shr
int3
mov
fwait
xor
mov
imul
clc
sbb
add
popl
lds
cvtps2pd
push
xor
dec
stos
cmp
shlb
jmp
in
test
dec
dec
imul
mov
xchg
pop
jecxz
sbb
subb
pop
sub
push
pop
pop
and
test
xchg
push
pushf
lods
push
dec
jae
fimull
stos
cwtl
dec
cmp
outsl
mov
ljmp
ljmp
mov
cmpsb
push
or
outsb
and
dec
sbb
xchg
fisubrl
pop
stos
jns
pop
decb
test
into
into
pop
insl
jg
lock
dec
in
inc
clc
add
hlt
add
int
push
inc
pcmpgtw
jnp
jae
jne
jge
popa
xchg
xchg
test
clc
test
fdivrl
cmp
test
clc
aas
add
jle
ds
mov
movsl
int3
sbb
and
stos
push
test
sub
in
and
or
loop
stc
xor
pop
cmp
popf
js
sarl
inc
mov
mov
add
or
fldl
xchg
fildl
fsubs
adc
scas
cmp
sbb
inc
test
jmp
inc
push
dec
mov
cmp
xchg
stc
push
cmp
shrl
sbb
add
adc
cmp
fdivrs
js
nop
pop
mov
sbb
loope
pop
jmp
pop
cld
cmp
xchg
mov
fistps
repz
pop
mov
add
outsl
mov
sbb
imul
mov
scas
lds
cmpl
sub
mov
jge
adc
mov
dec
out
leave
xor
cltd
hlt
adc
fs
jle
imul
dec
inc
mov
push
sub
jg
cmp
pop
push
and
xchg
sahf
iret
adc
out
adc
dec
fildl
arpl
pop
push
in
adc
mov
aaa
inc
ficomps
outsl
pop
adc
js
cmp
fidivl
inc
mov
pop
cli
mov
and
xchg
xchg
cmp
arpl
mul
lea
adc
jno
push
mov
pop
inc
add
xchg
jno
stc
mov
xchg
jns
pop
sbb
stc
mov
nop
ret
mov
jp
loop
sub
lods
loopne
push
or
jge
and
ret
jo
cmp
sub
fcomp
out
inc
cmp
adc
out
outsl
dec
adc
fwait
repz
mov
add
xchg
jmp
dec
aam
cmp
hlt
scas
outsb
movsb
in
push
mov
or
mov
pop
out
pop
movsl
sub
inc
inc
outsb
adc
inc
imul
enter
rorl
mov
movsl
enter
aad
ret
xchg
movsl
test
in
dec
lret
pop
jae
jnp
push
fildll
je
mov
push
aas
shrl
mov
jg
pushf
in
add
push
repnz
jecxz
mov
push
pop
pop
pop
add
xor
mov
jg
add
loopne
cwtl
pop
leave
ja
ret
gs
cs
je
jmp
dec
imul
lret
movsb
xchg
xchg
or
ja
shll
inc
mov
push
inc
or
jp
xor
push
jno
mov
sbb
and
and
sar
inc
inc
ret
out
add
mov
jns
cmpl
stc
push
movsl
ds
into
and
cmp
add
jae
xlat
les
or
jmp
jae
arpl
adc
mov
cmp
and
aaa
cltd
cwtl
test
lds
inc
leave
fidivrs
or
shll
add
int3
add
ret
out
push
sbb
jp
arpl
orl
inc
push
pop
faddl
adc
js
mov
cmc
repnz
add
mov
and
inc
cld
mov
sub
js
fstl
dec
and
pop
mov
push
mov
pop
push
xor
pop
or
lods
pop
mov
mov
nop
pop
dec
cmp
push
sbb
movsb
mov
mov
inc
inc
xchg
xor
arpl
add
adc
mov
push
cli
mov
push
fcmovb
jae
mov
and
mov
jae
add
sub
insl
adc
cmp
shl
sub
clc
test
jno
data16
inc
or
aas
or
rorb
sub
adc
or
xchg
pop
hlt
sub
and
mov
and
dec
xor
sub
lret
add
sub
lret
jle
add
rorb
enter
insl
data16
mov
cwtl
fstpt
and
dec
jle
jb
cmpsl
enter
mov
and
cmpsl
jnp
fcom
hlt
popa
mov
mov
pop
push
xlat
xor
pop
inc
pop
add
ja
jns
xchg
xorb
xor
pop
sbb
mov
mov
sahf
mov
xor
and
test
lock
mov
jecxz
dec
in
pop
orl
xor
into
push
push
add
pusha
cmp
jo
xchg
xchg
nop
jmp
rolb
out
sub
lahf
lret
and
mov
mov
mov
jle
insb
test
rcll
cmp
ffree
adc
add
pushf
adc
adc
xchg
stc
xor
sub
pop
popa
pop
xchg
in
jae
shlb
push
mov
mov
pop
das
inc
cmp
shrl
icebp
fbld
cmpb
add
out
sub
or
shrl
sbb
arpl
mov
xchg
popf
push
movsl
add
nop
dec
cmp
loop
lret
dec
lea
mov
mov
xchg
push
push
mov
ss
xchg
sub
imul
in
out
ss
xchg
xor
in
test
pop
mov
cmp
iret
jle
vpermt2pd
aad
mov
add
xchg
inc
add
sbb
mov
iret
orb
ret
and
xor
sahf
push
inc
repz
xor
popa
sub
ja
js
aad
jp
pushf
mov
fdiv
aas
lds
inc
hlt
pop
inc
orl
popf
jo
adc
loope
mov
xor
cld
xor
movsl
fs
mov
fidivl
jecxz
xor
inc
dec
sbb
test
add
mov
shrb
jo
add
inc
sarl
into
gs
xchg
lock
aam
fcompl
xchg
sbb
mov
push
sbb
shrl
into
lock
fwait
pop
cmp
adc
lcall
sbb
add
iret
or
xor
test
add
incl
cmp
divb
dec
sahf
sbb
leave
jp
std
jae
pop
mov
push
into
jmp
pop
fdivr
mov
jmp
xchg
stos
lods
loope
sahf
fxch
out
test
movsb
and
addb
ss
mov
lcall
jecxz
xor
jo
and
dec
fnsave
in
mov
xor
pop
stos
pop
pop
imul
adc
aaa
arpl
jno
daa
sub
mov
xor
dec
imul
daa
mov
push
cmpsb
pop
mov
aas
mov
or
out
mov
pushl
aas
lock
cld
enter
or
popa
cmp
xchg
inc
insb
jno
mov
loope
lret
movsl
les
cmpsb
nop
pop
stos
pop
dec
xor
scas
lods
add
fdivrp
sub
std
cmc
loopne
ja
cwtl
push
nop
fildll
push
test
jo
or
lret
aaa
mov
cmp
and
and
cld
orl
notl
xchg
adc
and
sbb
out
fldt
repz
push
loopew
ja
adc
or
dec
sub
pusha
mov
imul
aad
push
fcoms
fcompl
push
fnstsw
jmp
jb
mov
xchg
or
sbb
bound
addr16
into
mov
out
out
xor
inc
inc
push
mov
mov
movsl
outsb
push
xchg
movsl
rorb
int3
and
mov
inc
inc
jmp
cwtl
xchg
add
xor
sahf
movsl
mov
lahf
lret
cld
scas
pop
push
mov
scas
mov
dec
xchg
icebp
push
fsubl
into
cmp
or
jb
dec
hlt
fisttps
mov
sbb
aad
outsl
data16
push
int3
jge
xor
dec
fucomip
leave
pop
push
pop
das
fcomps
push
aam
and
xor
push
sub
dec
xor
add
or
ffreep
or
inc
shrl
mov
cmp
inc
adc
lea
jge
xchg
call
pusha
jge
call
push
into
jno
add
adc
add
inc
inc
popa
divl
int
popa
out
adc
jnp
add
enter
lret
cmpsb
js
dec
repz
aam
jg
mov
pop
ror
and
jns
out
ds
out
jl
mov
out
add
rorl
lods
jb
dec
sub
idiv
jge
in
jp
jmp
inc
adc
pop
mov
dec
jmp
push
aad
jbe
xorb
aaa
mov
loop
and
dec
movsl
inc
lock
sbb
cmpsb
out
mov
push
imul
arpl
and
daa
add
xchg
mov
or
mov
adc
shl
cs
sub
mov
sub
adc
dec
movsb
mov
jo
insb
ds
cmp
mov
dec
clc
cltd
sbb
push
movups
mov
imul
lcall
xor
cwtl
movsl
mov
test
ret
pop
ja
jno
inc
cmp
xchg
mov
jmp
inc
stc
xlat
add
lret
loop
pop
mov
je
sarl
xchg
jl
mov
movsl
jle
adc
pop
inc
ds
addr16
xorb
pop
or
aaa
aad
mov
cmp
or
pop
inc
mov
and
push
loope
cmp
loopne
pop
or
inc
pusha
scas
push
inc
and
jle
or
mov
adc
leave
or
insb
sar
inc
dec
or
aas
dec
xchg
jp
aas
sbb
jmp
rolb
adcl
adc
shrl
xchg
or
popa
and
enter
mov
dec
lcall
into
rorb
fbstp
push
aam
pop
frstor
rorl
cs
fs
pop
popa
out
mov
jg
aam
mov
ljmp
sar
push
dec
lods
or
jnp
into
in
lea
int
sub
dec
push
stos
push
lea
and
cld
pushl
xchg
pop
sbb
outsb
pusha
xchg
test
xchg
in
pop
or
scas
sub
mov
fsubp
ret
xchg
jge
pushf
nop
adc
das
je
shll
fdiv
iret
adc
loopne
fiaddl
sbb
test
fwait
and
adc
sti
dec
xchg
and
push
test
mov
fs
push
add
inc
daa
cmp
sbb
orl
icebp
xchg
jbe
mov
stos
test
enter
scas
mov
mov
rorl
push
add
cwtl
aaa
out
or
jns
xchg
fcomps
js
insl
int
addr16
cmpsl
in
test
cmpsb
icebp
lahf
gs
lahf
js
shll
insb
inc
lock
or
inc
mov
jnp
sbb
stos
sub
imul
enter
insb
or
xchg
loop
aaa
inc
or
xor
int3
mov
out
shl
aad
mov
out
xor
mov
sub
imul
push
sbb
stos
inc
cmpl
pop
jnp
out
and
push
aas
lret
mov
sbb
fsubrl
adc
int3
xchg
mov
sbb
lods
adc
jb
enter
push
mov
xor
cli
and
add
mov
int
pause
sbb
ljmp
dec
in
std
imulb
lock
pop
pop
sbb
insl
lock
test
jo
sbb
xchg
rcrl
mov
mov
xchg
xchg
adc
fstps
xchg
jbe
sub
loopne
sarl
add
pop
sbbl
ss
or
fcompl
call
sarb
icebp
sbb
fsubrs
cwtl
push
bound
sub
push
mov
mov
pop
sub
pop
mov
loope
imul
stos
push
jmp
adc
addr16
lahf
mov
and
dec
mov
or
add
outsb
xor
das
adcl
pop
lods
aam
inc
test
push
xorb
daa
sub
lahf
push
mov
and
andl
into
ds
stos
mov
daa
jecxz
and
adc
jecxz
mov
jmp
xorb
scas
mov
mov
xchg
mov
dec
or
sbb
into
fsts
mov
dec
test
dec
jno
pop
push
outsl
ret
jmp
test
pop
pop
xor
test
inc
call
inc
es
repz
mov
aaa
cmp
loop
lcall
and
ja
and
das
out
in
out
out
mov
lret
mov
xchg
xor
test
pop
gs
nop
xchg
rorb
cltd
frstor
test
cld
mov
sbb
jbe
sbb
std
and
shrb
or
in
xchg
dec
and
dec
push
test
mov
jp
jb
in
movsb
leave
fsubrl
daa
loop
mov
jge
xchg
add
sbb
fwait
je
cmp
into
add
test
xor
push
stos
aas
add
and
lret
test
push
in
jmp
les
loopne
repz
into
repnz
inc
rorb
jp
addr16
xchg
adc
sahf
add
fidivs
sub
xchg
jg
mov
mov
push
cmpsl
ljmp
pop
loop
ja
mov
int
sar
cmp
mov
cmp
and
aad
add
out
test
jbe
sahf
push
xchg
into
imul
xor
decb
test
adc
mov
test
cmp
pop
inc
xchg
cmc
push
lods
arpl
sbb
fs
mul
sub
sbb
rorb
sub
shrl
in
xor
dec
das
aad
loope
mov
or
push
jg
xchg
add
jmp
sbb
cltd
inc
in
les
in
lods
insl
repnz
push
cmpsb
dec
xor
inc
lcall
cli
pop
out
rcl
mov
inc
dec
mov
data16
out
or
mov
sbb
mov
cmpsl
insb
adc
out
stc
fsubl
arpl
xchg
stc
dec
sar
jle
add
loopne
out
pushf
push
mull
inc
test
push
xchg
cmp
cmovbe
sbb
mov
pop
xorl
pop
lods
or
fdivl
inc
mov
inc
ds
pop
test
pop
ret
mov
out
and
enter
xchg
sub
push
xor
shl
outsl
sbb
sbb
sbb
jo
dec
sub
lret
xchg
js
push
imul
addr16
std
mov
mov
ss
mov
fsubr
dec
mov
xchg
xchg
mov
ljmp
push
add
dec
int3
pop
dec
or
ljmp
jecxz
pop
push
mov
mov
jnp
push
shlb
and
adc
sbb
add
or
cmp
adc
addl
add
jecxz
test
sbb
shlb
add
mov
and
adc
cmp
call
cltd
xchg
pop
push
rcrl
push
and
adc
mov
lock
jmp
mov
mov
inc
cmpsb
data16
xchg
cld
xchg
mull
mov
or
ret
out
les
outsl
pop
bound
hlt
mov
pop
int
sbb
pop
cs
hlt
es
inc
cmp
test
adc
repz
cli
hlt
adc
adc
lock
add
xchg
ret
arpl
adcb
ret
mov
outsb
push
xorb
add
push
mov
orl
in
mov
je
pusha
dec
inc
movsb
inc
and
ss
dec
movsb
adc
adc
push
hlt
loope
cmpsl
jne,pn
cmp
mov
adc
movsb
jo
popf
addl
push
lock
leave
xchg
ja
addr16
mov
mov
pusha
ja
lahf
test
jbe
sbb
pop
add
aam
push
jg
shrl
mov
aaa
inc
sub
ret
xor
sahf
mov
lds
cmp
ror
lcall
subb
gs
jno
lods
fnstsw
mov
repz
aaa
subb
in
sub
cs
out
sbbb
mov
mov
push
rorl
xor
dec
fidivrs
inc
dec
stos
insl
aad
je
imul
sarb
cmp
jmp
cmp
pop
test
arpl
fs
das
sti
pop
shr
je
out
jmp
sbb
xor
mov
scas
mov
dec
cmp
sbb
scas
xor
xchg
js
repnz
mul
pusha
cmpsl
adc
stc
mov
dec
jae
iret
cltd
fiaddl
enter
jl
xor
imul
addr16
or
or
mov
adc
or
mov
shll
imul
bound
arpl
ror
insb
repz
es
push
mov
add
mov
mov
mov
dec
out
inc
adc
std
negb
daa
arpl
testl
dec
cmp
ret
loop
sub
dec
inc
xchg
mov
lods
xor
jno
shl
into
inc
sub
les
scas
sbb
jbe
insb
jne
push
push
and
sahf
rcll
testb
mov
or
test
sbbl
ret
mov
rol
in
push
fsubrp
test
dec
and
or
scas
sbb
bound
pop
clc
dec
in
add
test
push
sbb
inc
cltd
test
adc
jl
mov
idivl
pop
imul
xor
push
push
mov
aaa
out
mov
notb
sub
push
aam
cld
ss
mov
xor
pop
in
jo
movsb
adc
cmp
notb
sub
scas
pop
pop
scas
dec
sub
xor
mov
lds
in
aad
es
fwait
dec
sub
cwtl
push
enter
mov
sub
sub
mov
sarl
testb
xchg
xor
jnp
je
pop
inc
add
xchg
mov
ud2
sahf
shr
clc
or
incb
fwait
cmp
mov
sbb
jge
shrl
dec
ficoms
loopne
xor
push
xor
cmpsl
and
sub
ljmp
aad
pop
push
push
popa
dec
push
cmp
enter
gs
push
out
inc
dec
xchg
aam
mov
pop
or
mov
vmread
inc
cmp
lods
xor
mov
cmpsl
mov
aad
and
insb
out
mov
arpl
add
nop
adc
scas
jmp
cmpsl
out
mov
cwtl
loopne
jl
aaa
aas
fsubp
or
hlt
sbb
dec
in
and
dec
lret
sbb
push
in
fldl
xchg
mov
inc
stos
call
bound
sub
pop
mov
pop
out
bound
push
mov
push
mov
pushf
sub
lcall
je
or
push
xor
cmpsb
daa
mov
push
js
push
adc
loopne
mov
insl
ds
sub
jmp
roll
test
xlat
mov
dec
mov
xchg
mov
mov
in
cmpsl
push
adc
cmp
inc
test
inc
imul
outsl
or
aad
gs
in
inc
cmp
std
repz
xor
repnz
icebp
cs
stc
clc
loopne
in
test
rcll
sahf
jns
cmp
push
inc
push
mov
xchg
setno
mov
xorl
jnp
loop
sub
movsl
or
lds
jo
and
rorl
dec
inc
shlb
sbb
dec
mov
loopne
mov
inc
rclb
sbb
leave
shl
mov
jnp
dec
xchg
jmp
jb
inc
aad
fnstcw
syscall
push
adc
cltd
aam
and
outsb
or
mov
icebp
test
imul
push
scas
aam
pop
cmpl
rcll
xchg
cs
pop
push
mov
inc
push
or
mov
mov
jo
cli
jle
mov
out
icebp
pop
rclb
pop
arpl
rorl
in
push
lods
inc
mov
out
in
inc
stos
or
adc
insb
sahf
loope
sub
leave
mov
repnz
cmp
pop
jae
int3
es
or
outsb
outsb
rcrb
stos
xchg
mov
dec
lcall
xor
xlat
adc
mov
or
dec
mov
and
jae
and
mov
xchg
fldcw
sbb
ja
cmp
aaa
sub
outsl
mov
inc
sub
outsb
stc
dec
repz
and
push
dec
xor
xchg
in
lods
mov
push
add
daa
fdivs
push
enter
sbb
gs
adc
mov
fmuls
dec
imul
dec
sbb
idivb
shll
test
lret
scas
lods
mov
int3
aad
jnp
popa
sub
and
scas
inc
sbb
mov
inc
inc
xchg
push
leave
scas
ds
push
ljmp
push
jle
roll
call
repnz
daa
push
enterw
scas
dec
fs
or
jle
outsl
mov
orl
rcrb
mov
xchg
adc
ficoms
ss
testl
adc
shll
cmp
icebp
adc
daa
and
mov
stc
loop
adc
mov
xchg
ljmp
inc
fnstsw
outsb
sbb
repz
mov
ret
pop
fnstenv
out
in
movsb
hlt
dec
std
sbb
lods
cmp
or
in
das
adc
push
rclb
ja
push
nop
fimuls
inc
push
aas
into
sub
sub
subb
push
loope
jo
dec
xor
dec
lret
test
mov
mov
cli
cmp
push
push
xlat
mov
adc
lcall
insl
sub
adc
movaps
movsb
and
or
enter
mov
gs
mov
pusha
andl
subb
das
push
nop
push
add
inc
je
mov
cwtl
fwait
sub
bound
jne
sub
mull
idivb
mov
lea
inc
inc
cmc
cmpsl
mov
imul
jg
inc
pop
jmp
repz
loop
and
cltd
inc
mov
or
adc
ja
sbb
sbb
ss
fs
adc
jne
cmp
push
aas
clc
add
daa
icebp
incl
mov
test
xor
pusha
fists
pop
and
mov
sub
in
or
and
xchg
repnz
add
and
push
jae
lcall
and
sub
bnd
xor
jne
mov
pusha
sbb
or
pop
jae
adc
fidivrl
mov
mov
cmp
js,pn
lods
cltd
mov
cmc
push
jmp
cltd
lods
push
roll
mov
loopne
lea
pop
push
xchg
pop
and
popa
insl
mov
pusha
jl
inc
jg
mov
ss
out
jge
xor
sti
sub
inc
test
cmpsl
cmp
loop
std
inc
lods
jmp
xchg
cmc
mov
into
cmc
movaps
dec
stc
lret
xchg
sub
push
jle
push
je
cmp
out
mov
xchg
mov
sbb
fistpl
das
mov
jae
mov
dec
dec
outsb
pusha
jg
mov
popf
loop
and
imul
mov
arpl
xor
clc
ss
js
mov
lods
jns
inc
mov
sbb
jl
fdivrl
js
jge
sbb
xchg
stos
lods
xchg
push
jmp
roll
push
ss
in
jb
jnp
out
ljmp
fildl
js
stc
aam
push
pop
callw
cmp
jno
dec
fs
and
sahf
dec
shlb
xor
cli
mov
push
std
ja
inc
push
cmp
pop
jmp
outsb
cmp
pop
push
into
add
mov
push
sbb
add
jg
push
scas
loop
call
xchg
bound
loope
aaa
pushf
mull
in
adc
sub
out
iret
and
imul
mov
rcl
test
xchg
xor
sbb
lahf
xchg
push
stc
pop
mov
mov
ret
push
or
pop
jl
sbb
mov
lahf
add
jo
fisttps
mov
pop
add
inc
inc
push
add
iret
jecxz
fsubl
jge
ljmp
inc
popa
xchg
cmp
inc
popf
mov
cmc
pop
scas
or
jae
out
inc
fdivl
icebp
mov
mov
fnstenv
xor
cli
enter
imul
sbb
jo
mov
mov
lods
fnstcw
cwtl
push
frstor
rclb
testb
adc
pop
and
bound
cld
push
inc
inc
fs
imul
test
insl
bound
popa
cwtl
cmc
mov
adc
int3
movsb
imull
push
sahf
inc
pusha
rcr
adc
fdivr
test
inc
mov
addb
sub
mov
addl
mov
cmp
push
push
sub
cmp
xchg
out
mov
and
mov
pop
jp
ret
inc
pop
xlat
int
or
les
pushf
das
pop
mov
inc
movb
clc
pop
test
scas
gs
fdivrs
shll
repz
lods
iret
jl
jmp
fnstenv
mov
sub
inc
mov
lret
notl
pop
dec
aaa
adc
pop
incl
mov
sbb
stos
std
in
mov
pop
dec
and
jg
cwtl
push
push
mov
and
pop
jns
xchg
js
in
ja
mov
push
stc
pop
xor
aaa
arpl
mov
stc
cmc
sbb
dec
in
bound
icebp
sbb
dec
ret
stc
cmc
movsl
adc
pusha
inc
or
jmp
dec
leave
fildll
mov
imul
scas
add
sbb
fcmovbe
in
pop
xchg
mov
adc
sbb
and
lods
or
call
push
pop
in
mov
insl
and
mov
movsl
mov
jmp
data16
or
nopl
sub
es
xchg
adc
jge
and
sti
xor
std
xchg
inc
jge
cwtl
ja
addr16
and
sbb
out
dec
stc
and
jle
fadd
cmovns
xchg
ljmp
jecxz
incl
sub
pop
sar
push
add
jg
and
jnp
mulb
shlb
xor
cmpsl
mov
push
xlat
dec
pusha
jg
jp
mov
test
fldl
mov
dec
je
pop
mov
adc
lret
inc
notl
loop
pop
shll
shlb
aam
out
sti
test
mov
push
dec
jge
sub
inc
mov
jge
xchg
pusha
mov
jge
bound
fstps
jbe
inc
push
cvtpi2ps
xchg
dec
jge
out
dec
inc
sub
mov
push
xchg
mov
jmp
scas
sbb
jae
push
stc
inc
pop
mov
push
hlt
sbb
push
fcoms
dec
and
sub
test
jnp
sub
dec
pop
push
cld
fmuls
nop
andl
cs
pop
sbb
icebp
pop
fs
xchg
dec
iret
insl
sub
dec
xlat
jmp
pop
orl
sub
test
pop
pusha
cmp
pop
cmp
mov
loop
or
xchg
scas
dec
mov
inc
cmp
add
or
jl
xor
adc
or
out
push
cli
aaa
cmpsb
out
and
push
out
movsb
and
adc
push
dec
cmp
xchg
push
jp
mov
mov
mov
sub
dec
or
sbb
dec
and
pop
xor
add
sbb
movsl
rolb
gs
out
dec
fwait
rorb
lods
sbb
cmc
pop
xchg
push
sub
pop
inc
int
test
gs
aam
adc
fnstsw
gs
dec
push
inc
dec
je
xchg
cmp
mov
mov
int
movsb
or
fcom
mov
fdivrl
mov
mov
push
call
in
xor
ret
sub
mov
movsl
test
fwait
mov
pop
outsl
inc
xchg
pop
push
xlat
mov
add
popf
or
pop
dec
mulb
loope
adcl
xchg
rcpps
jmp
inc
lods
add
mov
mov
scas
fs
lods
mov
fwait
sub
pop
imul
fistps
stos
pop
jo
test
add
pop
mov
outsb
and
cmc
lcall
and
out
and
scas
or
and
pop
xor
push
xchg
push
jns
jle
inc
push
jbe
int3
daa
ror
frstor
cmp
popa
xchg
or
daa
and
jns
repnz
aas
adc
test
fildl
aad
jl
or
mov
fistl
aaa
cwtl
dec
test
daa
xchg
adc
test
ss
pushf
pop
nop
fsubs
mov
sub
outsl
cwtl
dec
cmp
mov
mov
je
rclb
push
mov
pushf
push
xor
add
hlt
jae
inc
push
jno
mov
cmc
jmp
scas
sub
push
mulb
jno
aaa
jmp
inc
sbb
cs
ljmp
insb
or
xchg
jb
or
jmp
mov
ljmp
sti
cmp
inc
imul
cmc
xchg
sbb
xor
es
leave
mov
movsl
std
fistl
ss
test
shll
mov
sbb
lret
inc
mov
inc
jb
loop
cmpsl
push
int3
xchg
push
xor
stc
inc
dec
mov
outsb
stos
cmp
cltd
add
push
xor
shlb
mov
cmc
daa
shr
mov
fdivs
repnz
cltd
mov
sbb
mov
popf
addl
and
or
mov
lds
push
push
xchg
in
mov
pop
lock
loop
not
sub
into
and
pop
int
lret
xchg
adc
inc
fists
mov
mov
xor
int
and
insl
push
dec
mov
jnp
lahf
push
lret
push
jmp
push
lods
mov
mov
and
fimull
xchg
dec
and
outsb
es
sub
add
mov
xchg
jecxz
les
gs
jno
mov
es
pop
cmp
mov
fstl
or
push
lret
sti
cwtl
cmp
jmp
stos
shlb
lret
dec
lea
push
repnz
sub
lret
push
dec
jb
movsb
ss
push
push
dec
sarb
stos
mov
les
mull
dec
imul
cs
rcrl
sub
stos
idivl
push
xchg
aaa
ror
and
imul
pop
xor
jbe
add
mov
je
mov
cmp
out
fnstsw
cmp
nop
xor
imul
movsb
mov
ja
mov
das
jo
jnp
rorb
sti
jns,pt
in
aam
das
les
test
repnz
xor
decl
gs
adc
xor
lcall
imul
add
out
ss
adc
cmp
rol
aad
testb
loope
xchg
fidivs
mov
push
sarb
shr
lods
scas
push
xchg
mov
mov
js
and
cmp
push
popa
sub
jns
sarb
ja
jg
xor
jge
ret
stos
lods
test
add
or
mov
in
not
mov
push
mov
add
popa
test
or
test
test
add
mov
adc
cmpsl
and
lea
cli
xor
inc
jl
dec
and
cltd
aam
mov
arpl
mov
jmp
pop
stos
out
cmpsl
jge
out
jle
jbe
xor
sub
xor
in
cs
nop/reserved
dec
ret
push
jbe
divb
dec
test
add
sub
sti
lret
int3
jb
xchg
pop
jae
cmp
hlt
testb
add
nop
pop
clc
mov
aad
push
adc
push
sub
js
movl
jns
ljmp
sbb
fwait
inc
mov
xchg
movsl
inc
mov
fwait
mov
push
lret
inc
sub
or
mov
add
subb
jnp
lds
xchg
dec
loopne
out
mov
adc
dec
subb
dec
into
cmp
jecxz
jle
pop
jg
shl
fsubrl
sti
loop
pop
push
les
iret
out
outsl
jge
inc
loop
frstor
in
mov
cli
pop
mov
ffree
jbe
inc
out
fstpt
ljmp
xor
in
jp
push
sbb
cmp
lods
fwait
js
enter
mov
pop
fcomi
mov
add
lret
or
cmp
popf
xchg
sarl
mov
pop
out
mov
xchg
in
dec
mov
mov
sbb
lcall
or
pop
add
popf
xchg
cli
out
or
jae
xchg
in
pop
data16
or
in
sti
add
ds
sub
iret
and
test
pop
xchg
mov
enter
in
jbe
add
mull
xchg
push
andb
cmpsl
xchg
movsl
mov
fcoms
int
pop
inc
aas
sub
std
js
rcll
addr16
insb
mov
pop
int
xchg
xchg
subb
xchg
in
ljmp
push
enter
int3
addl
push
and
cmpsb
scas
cli
lods
repnz
mov
cmp
loopne
dec
push
push
jae,pn
mov
cltd
imul
push
in
xchg
lcall
loopne
pop
pop
pop
int
rorl
add
mov
mov
mov
and
inc
aaa
es
xor
cmp
pop
inc
imul
lods
addr16
xchg
sbb
adc
add
adc
cmpsl
popf
cmp
das
adc
mov
add
rcrl
arpl
popf
lcall
or
jl
clc
jo
pcmpeqb
fcomp
in
shl
arpl
jmp
sahf
and
sub
inc
sub
cmove
cs
shlb
inc
push
in
cmp
aam
decb
sub
pushf
inc
fidivrs
insb
lock
ror
xor
push
pop
sub
and
fs
je
aas
mov
sbb
ret
cld
cmpl
mov
cs
testb
push
pop
cmc
ss
bound
scas
pop
xor
addb
inc
mov
mov
out
sub
in
pop
int3
lret
sub
test
cmp
jp
xor
push
sarb
pop
lock
push
pop
sbb
shlb
gs
call
lods
or
repnz
fstpt
push
mov
jno
push
sub
das
sub
movsl
mov
or
dec
sub
inc
mov
dec
adc
fstpl
and
jmp
or
pop
lret
enter
dec
clc
pop
push
loop
add
fdivrs
in
js
ret
aad
sub
clc
xchg
out
cwtl
jo
icebp
and
push
add
push
insl
and
sub
out
mov
rcl
ds
lods
dec
clc
mov
inc
or
mov
xchg
pop
fstpt
mov
outsl
popf
movsb
stc
inc
sub
not
test
mov
int
push
sub
arpl
iret
or
and
and
out
cmpsb
sbb
cmp
jbe
dec
inc
fdiv
or
hlt
or
shrl
sbb
pop
xchg
ss
ficoms
push
push
xchg
dec
xor
iret
test
pop
out
and
inc
cmp
dec
cltd
cltd
pop
outsb
je
and
mov
jmp
mov
mov
lods
enter
push
mov
adc
movb
jae
lods
mov
xor
mov
in
clc
jp
repz
or
and
andb
cmc
shlb
dec
mov
sbbb
imul
je
fs
sbbl
lds
dec
mov
setno
mov
push
adc
pop
ljmp
xor
cmp
xor
push
mov
xchg
insb
lods
push
pop
inc
enter
inc
lret
loopne
dec
mov
or
adc
jb
push
sbb
cld
xchg
add
loop
dec
bound
mov
inc
in
mov
cmpsb
outsb
mov
mov
dec
cmc
mov
mov
sahf
xchg
lea
add
testl
loop
call
sub
dec
inc
cmpsl
mov
mov
roll
imul
lods
or
sub
cmpsl
pop
in
sti
dec
adc
in
loope
sub
stos
out
lock
fiaddl
cmp
popa
movsb
cmp
test
and
out
mov
sarb
jbe
loop
pop
jns
ret
pop
mov
xor
clc
cmp
test
adc
adc
add
xchg
rcrb
adc
fwait
popa
loope
push
xor
aaa
cmp
dec
xchg
adc
insb
jmp
scas
cmp
cld
mov
icebp
das
mov
stos
xchg
cmc
add
sub
add
imul
incb
jecxz
lret
and
lcall
in
add
mov
mov
outsb
sahf
jno
jmp
mov
mov
adc
xor
test
adcl
sbb
or
das
test
mov
outsb
test
into
fisubrl
lods
mov
mov
cmp
rcl
xchg
pop
fadds
icebp
cmc
dec
or
daa
jg
xchg
mov
mov
cmp
lock
lret
data16
sti
push
repnz
push
int3
jg
cmp
pop
push
test
test
mov
xchg
jno
pop
cmp
add
or
cmp
cmp
mov
out
hlt
ljmp
pop
fldcw
or
jge
push
int3
imul
cs
repnz
mov
mov
xchg
out
xchg
adc
adc
iret
iret
lods
sbb
mov
and
stc
jp
sub
in
mov
and
sub
aas
pop
lcall
stos
push
out
hlt
frndint
iret
adc
inc
cmp
jnp
fmull
out
xor
push
xchg
mov
jb
lea
xor
push
sbb
mov
outsl
jecxz
dec
je
and
cmp
pushf
ds
push
sub
adc
xchg
lods
insl
sub
movsl
aam
cmp
lahf
ret
dec
dec
xchg
dec
push
inc
lcall
pop
push
sahf
mov
sub
xchg
cld
sbb
notl
mov
loop
lcall
int3
jge
or
dec
fcmovb
push
in
addr16
ljmp
dec
adc
and
pop
rcll
fsubrl
enter
pop
dec
cmpsb
jmp
mov
mov
cld
dec
mov
cmc
inc
or
lds
cli
mov
add
ljmp
negl
mov
lahf
and
into
sub
sub
pop
daa
stc
aam
dec
loopne
mov
les
jo
fadds
outsb
sbb
je
icebp
inc
add
push
sbb
push
daa
mov
ds
mov
int3
cmp
inc
fwait
test
add
or
jns
sbb
scas
pushl
mov
dec
adc
repz
xchg
pop
filds
ret
mov
das
dec
lret
out
lcall
xlat
push
inc
cmpsl
repnz
push
add
out
adc
lret
mov
jo
test
imul
lret
jb
inc
mov
mov
dec
icebp
jae
sbb
push
sbb
xor
mov
sahf
or
mov
rclb
stos
aas
inc
lds
pop
pop
xchg
popf
aas
mov
sbb
loopne
es
xlat
subb
icebp
mov
outsb
jnp
cwtl
test
mov
inc
jp
sub
lea
inc
pop
jp
xor
adc
mov
int
arpl
adc
ja
adc
sub
adc
cs
lcall
adc
mov
jmp
or
pop
dec
jae
out
dec
mov
cmp
jge
into
fdivrs
mov
lret
inc
call
repnz
loopne
fs
mov
push
idivb
icebp
outsb
jae,pt
sbb
int
mov
sub
cwtl
in
cmpsl
add
push
sub
jno
test
pop
aaa
or
or
sub
pop
ret
in
mov
xor
mov
push
lea
sysexit
mov
and
push
mov
xchg
dec
pop
repz
jbe
test
mov
add
and
jmp
out
setge
ret
xchg
xchg
fisubrs
jno
or
mov
fldenv
push
ss
fnstcw
lret
push
mov
xor
push
xor
insb
and
sub
and
ret
aas
jae
es
jnp
mov
dec
in
bnd
cmp
imul
add
xor
jnp
fs
in
pop
mov
cvtdq2ps
add
es
sbb
xorb
cmpsb
sbbl
out
aam
jl
xchg
test
cmc
sub
daa
pop
pop
inc
sbb
or
adc
int3
repnz
rcrl
dec
mov
push
adc
push
pop
add
mov
jbe
push
roll
dec
mov
mov
mov
mov
sbb
cli
add
inc
xchg
aas
daa
cwtl
fidivs
cmpsl
pop
xor
dec
rcll
and
inc
lea
fnstsw
mov
mov
cs
jl
mov
or
sub
dec
xor
jge
inc
pop
lods
bound
jne
fcomp
push
pop
or
mov
imul
xor
imul
dec
xchg
or
inc
jle
push
sbb
ret
mov
mov
loopne
jo
lods
out
cmp
jmp
hlt
or
mov
repnz
jle
lahf
imul
adc
int3
or
je
adc
inc
movsl
mov
push
xor
dec
dec
out
je
sub
xchg
push
nopl
lcall
les
adc
sub
cli
rcrl
cmp
jns
js
xchg
cmp
xor
push
repnz
add
sahf
testb
fs
movsb
std
sub
sarl
mov
mov
or
imul
loop
xchg
lahf
mov
gs
pop
jle
dec
push
push
mov
call
inc
cmp
mov
je
shrl
xchg
stc
mov
cmpsl
incl
mov
aaa
repz
enter
test
mov
cmovb
inc
xchg
nop
inc
test
sub
std
je
gs
and
in
out
xlat
mov
testl
into
mov
fldt
pop
jb
mov
fnstenv
lock
sti
mov
adc
adc
arpl
inc
cs
jmp
add
mov
push
mov
test
pop
dec
loopw
mov
les
mov
lock
ret
mov
adc
flds
enter
leave
int3
out
lcall
gs
pop
jne
cmpsl
ds
xchg
das
dec
push
rcll
loop
push
mov
mov
lea
dec
nop
xor
mulb
fstpl
testl
pop
jmp
lock
sub
add
ljmp
std
add
push
enter
sub
inc
loope
mov
inc
or
cmp
and
loopne
inc
pop
roll
das
test
xlat
cmp
mov
insb
jge
nop
aaa
lret
movsl
popa
dec
adc
and
loop
jns
shll
xchg
sbb
cmp
lds
insb
sbb
pop
push
xor
sbb
imul
call
xor
pushf
aaa
or
popaw
iret
test
out
roll
test
xchg
xor
arpl
cmp
add
cmp
dec
or
lock
leave
movsb
mov
loope
out
sbb
fadd
shr
adc
into
cmp
sub
fisubrl
insb
fldenv
mov
in
push
inc
adc
xchg
cwtl
add
adc
xlat
bound
lahf
cmpsb
jnp
int
inc
data16
bound
je
jnp
lret
xchg
push
sysexit
sub
jl
push
mov
push
push
push
pop
aam
out
cltd
pop
frstor
cld
imul
pop
dec
jl
mov
ret
xor
arpl
push
xchg
push
cld
test
fdivs
jne
shll
bound
inc
pusha
andb
test
jne
insb
loop
lods
dec
add
mov
loop
iret
popf
andb
rep
iret
jle
mov
adc
cmp
pusha
xchg
es
or
jmp
xchg
mov
adc
xor
repz
xlat
add
lret
inc
or
sbb
into
and
fsubs
scas
jo
or
rclb
push
cwtl
dec
pop
in
mov
jb
jle
pop
les
xor
jae
xor
test
adc
and
outsb
mov
jae
inc
sub
fs
jbe
inc
pop
cmp
clc
out
jle
sbb
dec
cmp
stc
inc
pop
outsl
and
imul
loopne
xor
inc
push
sub
xor
adc
cld
sub
imul
movsb
in
mov
sub
or
cmp
push
push
jno
mov
jne
sbb
lea
sub
add
das
aas
orl
jp
cli
int3
or
jg
mov
xor
add
cmp
add
in
cmp
mov
or
mov
cmc
popf
jge
cwtl
or
repz
jno
pop
xor
or
mov
xor
arpl
into
daa
push
outsb
aad
hlt
cmpb
aaa
xchg
pop
jno
mov
ljmp
jae
add
data16
mov
xchg
sub
and
insb
pop
push
movsl
mov
xor
sbb
aaa
testb
mov
xchg
nop
xor
sbb
lahf
sbb
mov
or
jb
cmp
jnp
cmp
loopne
and
xorl
push
xchg
ljmp
inc
xchg
push
jmp
push
xchg
mov
pop
sub
push
nop
fwait
xchg
ret
xchg
clc
cmc
push
shlb
in
stc
or
clc
xchg
cmp
in
in
or
test
pop
cwtl
dec
fcomps
int
jmp
cmp
das
int
and
and
int
lds
ret
push
and
pop
xlat
movsb
push
dec
fmull
ss
mov
fistps
xorl
jbe
pushf
test
xor
loope
add
sub
xchg
mov
pop
fmull
adc
loop
cmc
hlt
pop
fwait
rclb
jge
popf
cmp
fidivrl
lds
repz
pop
cld
outsl
push
std
fdivl
xor
push
mov
mov
lods
jne
das
mov
mov
scas
xor
xor
jle
pop
addr16
and
nop
push
ljmp
xchg
adc
mov
dec
xor
pop
adc
push
loop
mov
popf
repz
xor
mov
inc
fldenv
push
fcmovu
mov
sub
xor
fs
inc
cmpsl
repz
xchg
fidivl
xchg
xor
mov
dec
lret
in
sbb
in
cwtl
cld
cmp
add
xor
add
pop
xchg
fisubs
xchg
pop
push
push
push
push
jns
mov
fistps
loop
aad
mov
mov
fdivr
jecxz
repnz
aad
fistps
sbb
jne
or
lahf
repnz
push
mov
or
scas
adc
test
adc
adc
fiadds
cmp
jnp
mov
add
stos
cmp
xlat
dec
jb
dec
inc
rorl
mov
repz
mov
hlt
data16
inc
lods
push
mov
push
mov
ret
sub
outsl
insb
jbe
ret
cwtl
jge
dec
scas
mov
push
push
mov
dec
and
sub
neg
mov
inc
jnp
inc
xchg
sub
mov
leave
es
test
sub
jae
sbbl
add
mov
lock
dec
insl
aas
test
dec
mov
jmp
data16
jne
jns
add
push
xchg
in
lahf
rolb
push
in
mov
sarb
cmp
repz
and
mov
adc
dec
mov
add
icebp
dec
xor
movsl
fldenv
mov
fstpt
imul
dec
lcall
imul
adcl
add
mov
pop
ret
push
xchg
mov
sub
adc
mov
outsl
jne
pop
mov
sub
loop
dec
stos
sarl
dec
adc
sub
add
fwait
mov
clc
outsb
mov
or
adc
outsb
add
adc
xlat
inc
pop
jg
movsl
or
loop
push
ret
inc
fdivs
shlb
cmp
mov
nopl
out
sbbl
sub
fistpl
mov
push
pop
out
dec
mov
or
data16
mov
or
aaa
mov
fsubp
and
pop
xchg
mov
mov
int3
insl
pop
sbb
xor
mov
nop
int3
inc
mov
cwtl
pop
jbe
ret
adc
xchg
and
push
cmpsl
add
inc
loope
test
sub
dec
push
bound
je
mov
shlb
outsl
mov
xor
inc
test
test
cld
adc
adc
inc
jecxz
fmuls
imull
decl
cwtl
lret
imul
push
mov
and
adc
sbb
mov
orb
pop
xchg
lahf
gs
movsb
scas
cmp
mov
test
jecxz
popf
decb
insb
pop
rcll
enter
cwtl
cli
mov
inc
repnz
js
fmul
ret
mov
lock
or
xchg
inc
inc
cmp
scas
sub
sub
jp
bound
dec
xchg
xor
adcl
paddw
mov
fidivs
lea
sahf
ljmp
sarl
cmpsb
cmc
and
test
cmpsl
enter
dec
xor
or
dec
movsb
or
pop
and
fwait
decb
insl
push
xchg
xchg
mov
or
adc
add
aad
sarl
aas
sbb
jmp
mov
jecxz
mov
xchg
outsl
in
es
sbb
in
lods
pop
jo
nop
mov
int3
adc
mov
daa
fimull
pop
dec
xor
xor
inc
je
arpl
add
mov
mov
outsb
xchg
lret
or
jmp
mov
cli
jb
enter
mov
ret
pop
sarl
dec
pop
lods
dec
add
fsts
cltd
push
stc
loope
into
sub
inc
and
pop
lcall
sub
mov
mov
and
jne
dec
add
in
shrl
cmc
aaa
pop
dec
xchg
and
aam
mov
lods
mov
lods
aad
and
fadds
pop
jp
sub
orb
ss
pop
movsb
xor
mov
jno
mov
mov
push
fcmovbe
dec
cmp
pop
add
in
shr
test
jmp
sbb
fidivrs
fcom
sbb
mov
dec
xchg
dec
mov
push
or
dec
jmp
dec
bound
sbb
movsl
movsb
ss
movb
lret
ret
mov
pop
into
les
fisubs
lock
scas
dec
cmp
std
sbb
stc
mov
push
aaa
dec
shlb
gs
insl
fyl2xp1
and
push
and
jle
ja
rcr
das
lds
rclb
in
inc
jmp
jne
xchg
push
and
mov
js
push
push
sbb
leave
into
sub
imul
and
push
lret
dec
out
or
fs
inc
pop
popa
jnp
dec
mov
jmp
push
hlt
cmp
stc
mull
mov
or
sub
mov
dec
sbb
pop
pop
pop
mov
xchg
jne
jo
in
in
sub
test
push
pushf
in
dec
dec
xchg
add
lock
jns
adc
or
mov
xchg
mov
test
test
mov
and
cmp
xorl
inc
movsb
xorl
outsb
cwtl
loopne
cmp
popl
je
dec
and
jecxz
jecxz
and
cli
and
jb
sbb
sub
gs
or
sarl
ds
inc
and
cltd
xchg
mov
repnz
xor
in
insl
fwait
push
cs
mov
push
shlb
dec
outsl
adc
adc
and
lret
popa
push
add
pop
and
and
sbb
add
mov
popa
mov
adc
sbb
and
mull
mov
fsubl
push
aam
mov
xlat
push
jmp
test
mov
fucomi
divl
mov
inc
mov
mov
loop
out
test
fsubrs
dec
cwtl
cmc
and
xor
repnz
lea
add
ret
pop
xchg
out
mov
out
pushf
push
mov
pop
mov
fabs
inc
mov
or
pop
pop
jne
je
aad
pop
mov
xorb
push
pop
add
pop
test
lods
call
mov
push
int3
xchg
push
popf
jae
mov
push
xchg
mov
cmp
sub
pushf
mov
je
dec
lea
inc
sahf
mov
scas
leave
add
mov
add
push
cwtl
lret
pop
movsb
call
pushf
push
cs
mov
cld
xor
dec
loop
jbe
testl
sub
or
mov
mov
outsl
cmp
xchg
or
into
push
add
dec
and
xchg
pop
out
loop
out
pop
aaa
jno
je
jno
cwtl
in
inc
into
scas
insl
xchg
cmp
push
gs
popa
out
and
neg
mov
xor
mov
and
rol
xchg
push
out
stc
sub
cli
ret
and
sbb
add
rcr
lock
mov
aas
pushf
imul
insl
add
pop
leave
add
lock
outsb
mov
repz
popf
jecxz
push
jno
mov
je
mov
jmp
push
lods
notb
mov
xchg
or
addr16
fwait
stos
push
inc
lods
xor
mov
iret
mov
ss
cmpsl
subl
mov
inc
push
in
int3
pop
sarl
add
inc
ja
add
mov
or
cmova
inc
cmpsl
lret
add
aas
stos
sbb
pop
mov
imul
clc
js
xchg
jnp
jmp
rol
andb
sarb
xchg
pop
xchg
sub
mov
dec
jmp
je
add
test
jg
andb
add
pusha
lret
mov
lcall
xchg
sbb
pop
test
jnp
mov
mov
pop
lods
sub
movl
mov
jae
add
test
mov
and
dec
sbb
mov
std
inc
push
and
xchg
popa
xor
xlat
xchg
jns
push
sti
mov
test
mov
insl
xor
push
cmpsb
gs
add
imulb
test
sub
xchg
lock
insb
add
dec
cmp
adc
pushf
jmp
stc
popf
cwtl
adc
sbb
sbb
mov
xor
setns
mov
mov
mov
pop
popl
mov
add
jge
push
ja
pop
rorl
mov
sbb
pop
push
cmpsb
dec
cmpsl
dec
lods
repz
data16
stos
sbbb
frstor
sbb
cli
sub
sti
rorl
pop
xchg
push
pop
xchg
mov
sub
lret
pop
push
inc
outsb
rolb
jae
repnz
and
loopne
and
mov
jnp
mov
fdivrl
incl
dec
in
ss
test
adc
add
mov
xor
rclb
inc
sarb
add
data16
mov
ss
cmc
rclb
out
inc
inc
sahf
lods
xchg
icebp
or
movsl
repz
push
dec
ss
arpl
lods
cmp
xor
scas
scas
adc
mov
jbe
mov
mov
jb
sub
adc
xor
dec
mov
or
andl
fmull
jbe
iret
and
xorl
jmp
test
dec
or
pop
stc
sahf
pusha
xchg
or
int3
dec
std
and
lock
icebp
adcl
add
test
xor
add
sub
jmp
cwtl
fwait
pushf
inc
test
mov
cmc
sbb
addr16
xchg
fwait
icebp
aas
shl
outsb
lods
inc
fidivs
lods
jnp
and
xor
rcll
test
ret
sub
stos
xchg
sub
jmp
mov
lret
aas
imul
xchg
fsubrl
shrl
fsub
sub
cmp
add
sbbb
jge
or
leave
or
es
in
cmpsb
jecxz
cli
loopne
jg
dec
cmp
sub
push
mov
xchg
pop
arpl
xor
lret
fwait
mov
xchg
or
jge
jno
lret
addr16
xor
out
mov
mov
movsl
std
push
cs
inc
arpl
mov
es
outsb
cwtl
out
int3
pop
popl
adc
xor
je
xor
xor
fadds
pop
mov
push
sbb
js
add
jge
add
push
lret
dec
sub
in
cmpsb
mov
or
dec
add
jmp
inc
rorl
stos
sub
mov
and
std
and
dec
or
mov
adc
jl
ljmp
aas
xor
mov
push
dec
dec
iret
lds
jne
sub
jnp
lret
inc
push
mov
mov
fstps
mov
xchg
lds
popa
jg
rol
pop
adc
xor
add
mov
sub
cmpl
cmp
dec
lret
sub
sahf
jns
rcr
mov
cltd
mov
movd
adc
or
outsb
mov
pop
adc
pop
int
cld
test
or
add
aas
cs
sbb
cmp
cmpsl
cmpsl
std
jae
das
sbb
movsb
mov
mov
sub
fst
adc
adc
fs
and
jo
pop
xchg
xor
outsl
cmp
pop
xor
push
in
test
adc
loope
loopne
mov
cmp
ljmp
sbb
jo
in
stos
cmc
mov
out
jecxz
lods
aam
sbb
nop
jo
call
mov
cmp
push
cs
jmp
fcmovu
cmp
or
or
clc
dec
pop
daa
std
fisubl
aas
imul
pop
jg
sbb
inc
stc
test
mov
idivb
popa
loope
xchg
and
icebp
stos
xchg
pop
rclb
ljmp
shrb
out
sarb
ds
pop
popa
arpl
aad
std
or
and
fists
inc
jae
mov
adc
sbb
js
out
aaa
jo
movsb
gs
hlt
mov
jge
movsl
sbb
aas
outsb
sub
hlt
push
dec
and
addb
adcl
or
dec
gs
add
push
fsub
in
movsb
mov
addr16
scas
xchg
push
pop
xchg
fidivrs
inc
pop
inc
les
outsl
sbb
jne
in
jge
adc
adc
std
icebp
dec
decb
mov
ficoml
push
pop
mov
cmp
test
lahf
mov
cmp
and
jb
cwtl
and
inc
or
leave
ja
lock
jno
sahf
jno
adc
pop
ret
or
pop
jle
cmpsb
mov
ds
fstl
mov
lret
dec
pop
add
ja
pop
inc
or
int3
stc
add
and
inc
and
loope
ret
pop
dec
or
bnd
and
test
mov
fs
movsl
inc
add
push
or
and
jp
lea
push
mov
sub
lret
repnz
mov
mov
in
add
pop
mov
lods
pushf
test
imul
hlt
xlat
pop
dec
pop
pop
mov
out
xchg
mov
xchg
adc
sbb
fadds
icebp
outsl
mov
jns
xchg
xor
add
pop
sbb
icebp
mov
xorl
outsl
pop
sub
out
pop
test
xorb
xor
iret
xchg
adc
in
cmp
shr
inc
dec
dec
push
cmpsl
outsb
shll
sub
mov
xchg
call
rcl
lea
jecxz
dec
xchg
repz
addr16
jnp
jp
cs
xor
fisttpll
pop
and
inc
sbb
cmp
jecxz
out
rcr
int3
dec
sub
mov
stos
scas
jmp
aad
inc
mov
sbb
jae
mov
jae
test
shl
jb
rcrl
mov
dec
pop
test
dec
aas
stos
aam
clc
add
push
sbb
sub
call
fwait
in
call
stc
imul
add
mov
xor
nop
stos
add
dec
jno
outsl
arpl
fs
cwtl
fstl
mov
repz
dec
or
push
xchg
mov
or
into
cmp
fucomp
jne
xchg
test
pop
xor
scas
cld
push
cmpsb
sbb
and
repz
jbe
cmp
movsb
jne
js
fstl
ljmp
or
sbb
sbb
pop
mov
loopne
mov
scas
in
dec
inc
es
jg
mov
aaa
imulb
insl
push
dec
mov
inc
jecxz
sbb
jge
dec
daa
repz
or
adc
test
jae
fistps
cmovl
xchg
movsl
or
fwait
mov
lods
dec
cmp
jl
sub
mov
and
adc
and
mov
jge
jno
mov
jo
cmpsl
out
pop
push
add
repnz
add
adc
xor
cli
call
mov
cmpsb
sarl
fninit
cwtl
dec
out
faddl
mov
scas
stc
pop
loope
or
aad
fmull
mov
testl
scas
mov
sbb
imul
mov
pop
mov
sbb
inc
pop
outsl
jo
rcrb
cmp
out
lcall
sbb
cs
mov
xor
cltd
pop
push
adc
sbb
negl
adc
pop
push
push
arpl
mov
inc
mov
push
jo
fstpl
sub
lahf
lock
sarb
pushf
shll
shrb
jnp
jge
push
outsb
div
lahf
shlb
sub
popf
dec
mov
call
push
jb
out
push
sub
mov
lods
repz
push
mov
into
fwait
dec
sbb
xor
cmpsl
pop
icebp
pop
leave
mov
repnz
mov
in
jbe
push
and
subl
fcoms
subb
cmpsl
scas
out
scas
nop
sub
cmp
mov
jae
add
in
fdivs
lock
clc
sub
xchg
xor
pop
cmc
or
sbb
push
imul
das
arpl
push
ja
jns
mov
jo
push
pop
jae
cmp
adc
out
add
dec
jg
push
mov
xchg
push
loop
in
fwait
mov
div
out
lahf
rorb
mov
fistpll
add
mov
test
sub
pop
jle
add
and
in
push
pop
cmpl
inc
and
daa
or
repnz
jne
icebp
push
adc
inc
mov
in
scas
outsb
mov
jbe
je
mov
aas
es
cmpsl
xchg
mov
in
mov
scas
in
cmp
repz
add
cmp
int
dec
push
inc
fiadds
in
mov
lret
scas
scas
jne
mov
xchg
pop
loop
lret
loope
jle
mov
test
mov
mov
dec
shll
jmp
xchg
mov
adc
shll
lret
jno
xor
shrl
xchg
gs
sub
rorl
lcall
inc
repz
and
pop
adc
std
dec
xchg
add
mov
cmpsl
push
push
sbb
jae
or
cs
cmc
cltd
xor
shll
pusha
std
fldenv
inc
jp
push
mov
test
out
in
je
scas
out
ljmp
xchg
mov
xchg
mov
cmp
popf
inc
popa
sub
jns
shlb
out
mov
hlt
dec
fildl
mov
fsts
test
mov
jmp
testb
loope
jne
into
push
xchg
gs
sub
popa
cmpsb
jno
aam
push
and
imul
sub
fimull
pop
lods
jl
in
cmp
loopne
ja
int3
mov
stos
popa
jecxz
ljmp
jnp
pop
and
push
ja
pop
mov
idivb
imul
xor
jb
inc
pop
cmp
stos
jl,pt
jne
adc
dec
xor
jmp
mov
lret
arpl
aam
aam
mov
sub
stc
aam
mov
addb
in
mov
mov
divb
pop
ss
int3
lret
pop
jns
insl
mov
cmp
pop
dec
push
jo
mov
inc
and
shlb
xlat
mov
xchg
subl
aad
push
bound
mov
cli
iret
insb
out
jge
inc
or
repz
inc
mov
dec
mov
inc
add
repnz
lods
lds
cmp
cmp
sbb
and
mov
adc
ja
test
add
or
subl
adc
test
nop
fildl
movsl
aam
sarl
ljmp
jno
mov
adc
sub
cmpsl
sbb
lock
xor
xor
pop
push
mov
fwait
les
pop
lret
in
add
cmp
jns
xchg
popf
mov
lea
rcrb
in
mov
push
mov
cwtl
push
jecxz
inc
mov
sub
test
fistpl
fs
mov
sub
daa
inc
repnz
ret
cmp
and
add
adc
xor
mov
ret
sahf
mulb
fstpt
mov
arpl
jne
mov
inc
mov
mov
mov
in
inc
loop
lret
inc
cwtl
cltd
imul
inc
jp
cs
mov
cld
insb
sahf
mov
pop
lret
fs
std
xchg
hlt
mov
sbb
pop
int3
flds
add
nop
lea
test
xor
push
hlt
jge
imul
sbb
imul
lret
dec
jne
xor
xchg
mov
adc
push
loopne
bound
xchg
pop
rcl
rclb
roll
andb
dec
enter
mov
xor
fwait
addb
aaa
sbb
fiadds
sti
pop
adc
push
and
jae
jo
cmp
js
mov
push
cli
call
add
pop
dec
adc
cld
icebp
mov
mov
mov
mov
mov
or
mov
xchg
mov
dec
lret
int3
call
js
incb
jp
jmp
push
mov
sbbb
leave
std
cs
popa
lcall
adc
adc
push
insl
add
push
jbe
pop
pop
sbb
adc
push
in
sub
loopne
mov
push
imul
cmc
sub
pop
lea
adc
sub
aam
sbb
loopne
jecxz
push
push
sub
jmp
sbb
push
xchg
sbb
inc
pop
adc
int
lods
xchg
dec
jp
lds
nop
mov
ret
pushl
mov
sar
mov
out
add
pusha
fldt
inc
push
repz
stc
movsl
test
loopne
mov
outsl
push
sti
stc
rcl
sahf
jl
mov
adc
push
adc
data16
pop
lock
movsl
push
and
push
sti
sbb
cwtl
leave
cmp
add
xchg
cmc
insb
xorb
xchg
lds
mov
into
jns
pop
add
mov
fs
adc
stc
sbb
mov
cmpb
adc
pop
es
pop
into
dec
mov
inc
rcrb
xchg
inc
ljmp
and
cmp
cmp
stc
jbe
sbb
scas
mov
mov
pop
stc
xor
mov
adc
mov
add
and
nop
es
ss
sbb
sub
ljmp
mov
imul
lods
sbb
int
push
pop
xchg
mov
add
negl
leave
rolb
dec
in
push
in
sub
dec
lret
dec
xor
fcomps
push
fwait
xor
sbb
bound
imul
xor
dec
mov
js
or
pop
xor
out
jae
lret
fmull
andb
out
xchg
cmp
stos
mov
out
nop
ljmp
or
jmp
dec
rclb
out
sub
cmp
sub
xor
pop
jns
push
sub
push
mov
or
sub
js
shrl
into
in
push
mov
xor
adcl
pop
js
shrl
cmp
jbe
mov
pop
lcall
push
cmp
stos
mov
sbb
push
pushf
jecxz
test
rcll
xlat
imul
stc
sahf
push
repnz
xor
mov
jmp
jp
and
fldenv
push
stos
xor
rcl
movsb
loopne
sbb
or
sbb
sub
loop
adc
mov
mov
in
nop
lret
out
int
leave
fwait
pushf
cli
addl
xchg
dec
rcl
xlat
ds
scas
xor
push
aaa
call
mov
lahf
cwtl
scas
ret
adc
lret
aad
adc
mov
ret
cmp
jno
push
shl
mov
add
adc
stos
cmp
pop
xchg
ds
xlat
or
cmp
sbb
lahf
dec
fdivrs
gs
lds
arpl
andb
add
mov
inc
xchg
and
sub
rorb
add
push
aad
sbb
nop
cmc
loope
jg
movsl
sahf
inc
mov
pop
pop
dec
mov
outsb
rclb
mov
cmp
mov
out
dec
push
out
addr16
jne
les
cmp
mov
mov
cmp
xor
fmuls
dec
test
adc
and
pop
in
xchg
or
mov
mov
adc
inc
mov
negl
mov
xor
sti
rcr
jne
enter
pop
jl
mov
cmpsl
ficoms
inc
sub
xchg
jmp
repz
adc
repz
stos
push
xor
cs
mov
mov
cmp
push
inc
push
aad
dec
imulb
fwait
mov
std
mov
cmc
xlat
push
jp
cmp
mov
rcrb
pop
mov
aam
pop
test
gs
xchg
add
dec
push
scas
dec
mov
scas
sub
movsl
dec
push
shl
rolb
xor
cmp
jae
jl
and
dec
sti
ret
hlt
xchg
movl
mov
lock
adc
ret
cmp
adc
dec
mov
gs
fldl
xchg
xchg
std
ja
pop
bound
jb
xor
or
mov
in
mov
cmc
pop
adc
pmaxub
pop
cmpsl
xor
sub
test
movsl
and
gs
fistpl
imul
test
sti
adc
shll
sub
cs
inc
test
mov
pusha
cmpsl
test
fiadds
adc
loopne
int
jo
xor
js
in
test
inc
loop
xor
ss
test
movsb
orb
mov
dec
jge,pn
jbe
jge
or
imul
or
lcall
adc
cli
mov
mov
or
pop
mov
and
rorl
fs
push
xor
and
or
imul
pop
fildl
jl
mov
js
in
mov
xor
mov
aaa
shlb
and
cmp
xchg
dec
pushf
xchg
push
cmp
mov
and
lds
roll
shll
jae
mov
push
push
mov
fiaddl
xchg
dec
cs
lea
sub
dec
imul
sub
xchg
in
daa
std
push
mov
aaa
pop
add
imul
inc
orl
push
int
and
pop
iret
adc
imul
sbb
and
or
or
add
imul
sub
push
adc
lods
add
icebp
push
daa
fistl
adc
pop
orb
sub
pop
nop
cld
cmp
stos
sbb
push
mov
fnstcw
mov
push
icebp
enter
lret
sti
xchg
and
cmpsb
dec
in
cmp
push
dec
push
jae
mov
xchg
or
inc
push
sub
cmp
cmp
in
mov
sahf
hlt
cli
xor
xor
push
out
xchg
cmp
dec
sbb
mov
fcoms
pop
lods
test
scas
lcall
mov
subb
pop
inc
xchg
fsts
adc
mov
movsl
fcomps
les
mov
mov
imul
jg
fwait
adc
popa
mov
and
inc
loop
outsl
pop
aaa
mov
loopne
ret
rcrl
loopne
adc
daa
push
fstpt
pop
sub
test
push
je
imul
arpl
repz
inc
cmp
inc
fsubrp
pop
dec
mov
sub
push
ret
xchg
sbb
mov
mov
fmul
or
enter
insl
cs
add
and
insl
fiaddl
mov
dec
pushf
rorl
fcoml
jo
in
sub
mull
int
jg
cltd
cs
outsb
mov
lds
xchg
rclb
dec
loopne
xchg
jle
pop
sub
mov
jmp
repz
mov
pop
jp
outsl
in
call
es
push
in
pop
testb
jae
movsb
jae
sub
fidivrs
jp
push
xchg
rolb
mov
je
pop
pusha
inc
sbb
sub
aad
jns
add
fs
pop
add
pusha
pop
sub
mov
arpl
in
pop
pop
aad
push
inc
inc
fidivrs
jg
adc
sub
jno
pop
mov
add
shrl
ror
loopne
xchg
imul
rcll
leave
les
xor
sub
dec
lea
pusha
inc
aad
inc
jnp
and
xor
mov
cld
push
mov
lret
pop
mov
das
movsb
int
mov
dec
adc
push
out
xchg
cltd
add
push
xor
and
push
mov
cmp
mov
loope
lcall
es
adc
fdivs
adc
testl
call
xlat
sbb
pop
lds
shrl
sbb
sub
mov
arpl
and
insb
rclb
xor
arpl
and
lods
push
xlat
sub
add
push
push
lods
mov
aaa
mov
adc
les
or
sbb
jb
push
jp
sub
fwait
insb
test
dec
test
ret
sahf
daa
or
fwait
dec
mov
jb
jmp
popf
inc
in
test
je
lcall
shll
fsubs
jmp
push
jge
sub
mov
jl
jp
sbb
mov
jno
test
ss
dec
jmp
daa
and
addb
xor
jae
push
xchg
cmpsl
xchg
je
cli
pop
in
xchg
dec
push
mov
rclb
in
sub
into
xlat
shlb
sbb
loop
std
jmp
leave
test
jecxz
out
rolb
iret
cltd
das
subb
add
pop
pop
dec
xchg
sbb
jecxz
and
scas
aaa
cli
enter
cwtl
cs
cmc
xchg
and
xchg
lahf
pop
add
add
lahf
and
or
aaa
test
negb
ret
add
in
add
mov
in
push
test
jns
das
xchg
and
and
add
in
mov
addr16
mov
ret
push
pop
mov
ljmp
and
mov
cmp
les
mov
jbe
or
pop
in
lcall
pop
shrb
sub
jmp
push
lret
push
adc
lret
cmp
into
hlt
mov
popa
dec
xor
jle
out
lahf
push
add
lahf
lods
scas
sub
push
lret
or
mov
sub
push
add
jge
fists
mov
jg
out
imul
sub
cmpsl
lock
nop
bound
dec
andl
insb
sbb
stos
mov
ja,pt
bound
and
call
cwtl
divb
insb
xlat
mov
fnstenv
aam
sbb
xchg
pop
addl
lds
adc
lods
mov
mov
pop
repnz
imul
aad
int3
cmc
adc
add
jno
inc
insl
pop
pop
adc
xor
or
loope
bound
mov
popa
ret
sub
or
push
repnz
outsb
and
lock
jbe
xchg
cmp
out
mov
in
jecxz
bound
inc
push
pop
and
add
enter
pop
aaa
mov
gs
inc
or
cld
jo
imul
mov
pusha
scas
mov
pop
aaa
dec
ret
xchg
mov
stos
mov
dec
adc
jns
pop
or
pop
mov
lret
and
dec
dec
scas
sarl
xor
mov
dec
mov
or
cld
cmp
dec
cmp
mov
push
out
into
ja
adc
stos
push
inc
ret
pop
fcmovbe
test
daa
and
jmp
and
push
and
cmp
ret
sbb
and
push
lea
jo
fmuls
hlt
inc
and
adc
enter
out
les
and
sbb
ss
xor
xor
xor
add
bound
cmp
add
fildll
push
nop
sub
jmp
cmp
arpl
mov
hlt
xchg
sub
push
mov
cmpsl
repz
mov
mov
add
ret
notl
aas
xchg
pcmpgtd
fstpt
daa
pop
or
xchg
sbb
mov
pop
inc
aaa
inc
je
jmp
imul
insb
outsb
add
test
add
jge
push
sbb
pop
push
cmpsb
test
sbb
pop
shrb
cmp
xchg
js
scas
or
in
dec
mov
add
in
mov
pop
rcll
test
cmp
sbb
enter
ss
bound
push
lcall
hlt
cmp
push
push
loopne
mov
adc
pop
adc
clc
lods
xor
icebp
sub
cmp
sub
xchg
std
cmpsl
jl
rcl
lock
jg
jmp
xor
scas
push
leave
fwait
jmp
mov
jecxz
or
bound
mov
ds
add
fsubrs
fsubrl
push
std
dec
lcall
movl
push
fisttps
push
jp
insl
fdivl
pushl
lock
xchg
sbb
inc
es
jb
adc
and
mov
inc
jmp
sti
loop
ljmp
into
xchg
in
in
xchg
jo
mov
cmp
out
aam
shrl
gs
sbb
dec
adc
sub
insl
mov
and
and
clc
cmp
fiaddl
enter
and
mov
push
ljmp
rcr
inc
stc
mov
test
sbb
clc
inc
pusha
pop
les
or
js
push
popl
add
xor
sbbb
sahf
push
or
pop
movsb
divl
mov
iret
mov
js
sbb
sbb
xchg
mov
loope
push
daa
pop
pop
push
in
push
in
mov
pop
dec
clc
add
jbe
adc
sub
loope
popf
fs
jo
ja
cld
clc
dec
or
xor
push
ja
or
jne
lods
jge
mov
out
jo
or
hlt
push
cmp
jge
cmp
jp
aad
mov
cmp
dec
fstpt
add
mov
fisttpll
imul
sbb
in
or
sbb
fmuls
cld
add
out
cmp
jg
pop
sub
cld
mov
add
cmp
les
js
fsts
ja
mov
push
movsl
xchg
clc
test
ja
or
push
subb
gs
xor
ret
addr16
sub
int3
jne
aam
adc
push
test
adc
inc
xor
mov
mov
js
xchg
cmp
sar
nop
test
xor
sub
insl
test
pop
ja
pushf
xchg
pop
imul
fsub
sbb
mov
push
push
xchg
adc
lds
out
push
pop
mov
inc
dec
mov
das
pushf
filds
sbb
jbe
push
enter
sub
mov
mov
fists
jne
push
or
jnp
repz
outsb
mov
or
add
leave
inc
insb
rorb
dec
mov
xchg
outsl
sub
sbb
outsl
fbld
pop
jp
xlat
andl
nop
mov
mov
or
xor
mov
adc
mov
icebp
mov
jns
dec
jg
dec
or
jnp
mov
xchg
pop
jne
mov
push
dec
dec
cwtl
or
clc
xor
sbb
inc
ja
je
insl
rolb
popa
pop
outsb
inc
loopne
and
in
inc
mov
jl
test
nop
mov
push
mov
sbb
pop
mov
inc
push
pop
adc
xchg
sbbb
xlat
lahf
cmp
mov
jno
pop
fnstenv
nop
fcomip
adc
xor
and
lcall
rclb
aad
inc
jle
jl
add
int
lock
mov
xor
sub
xor
popf
dec
cltd
sahf
outsb
add
scas
mov
hlt
fstpl
jp
pop
pop
stc
sbb
test
inc
sbb
es
push
mov
cs
imul
inc
xor
mov
inc
ud2
adc
out
fadd
adc
out
bsr
arpl
dec
adc
dec
lea
cld
push
xchg
push
and
or
mov
lret
les
shrl
mov
mov
pusha
and
mov
rclb
cmp
data16
call
jne
shll
bound
mov
cvtdq2ps
and
cmc
insb
or
loop
sar
add
and
hlt
out
inc
mov
pop
lock
pushf
out
or
iret
test
xchg
mov
sahf
adc
mov
and
das
push
movsb
std
outsb
mov
pop
imul
mov
imul
mov
adc
lods
fimuls
icebp
mov
mov
pop
push
xor
fwait
nop
xchg
mov
cmc
mov
jp
rorb
xor
xlat
ja
push
clc
mov
xlat
clc
mov
pop
gs
orl
sti
push
out
pop
push
xor
pop
cli
fmull
cmp
outsb
repz
je
fbld
mov
pop
mov
std
mov
jge
les
std
mov
xchg
pop
ja
mov
orl
sbb
arpl
imul
push
mov
sbb
fcmovbe
xor
cli
jnp
and
mov
scas
fdivr
inc
sahf
movsl
decb
push
sub
ljmp
sub
shr
push
jns
inc
out
iret
xchg
pusha
and
pusha
pop
fdivl
test
push
out
out
fdivs
in
mov
push
sbbl
fimuls
jb
push
dec
dec
or
mov
lock
sub
add
ss
adc
cli
and
mov
lods
lods
test
scas
add
inc
push
inc
dec
add
stos
mov
aad
es
push
xor
add
mov
sbb
lea
push
push
mov
mov
les
mov
xorb
lcall
push
divb
or
stos
push
mov
pop
mov
lods
xchg
rcl
pop
rorb
cmp
fisubrl
mov
ds
push
mov
ret
dec
or
xchg
jl
shlb
xchg
dec
add
ljmp
sbb
dec
cmp
inc
jecxz
movl
mov
inc
ds
jmp
adcl
and
icebp
repz
aas
cld
or
stos
leave
mov
ficompl
stc
push
inc
or
fdivr
data16
mov
adc
pop
inc
push
jmp
xchg
cmp
fcomi
insl
test
jmp
bound
mov
cmp
sub
cltd
orl
mov
fwait
mov
pop
and
ret
dec
mov
icebp
clc
push
adc
cmc
cli
mov
and
jno
jmp
movsb
rcl
ret
push
lock
ret
in
mov
out
and
rclb
pop
jmp
sbb
mov
mov
arpl
leave
xor
arpl
mov
or
cmp
mov
xchg
add
jno
cmpsl
dec
lret
xchg
cs
cmpsb
dec
mov
mov
adc
push
ljmp
lea
mov
int3
repnz
loopne
mov
xor
rorb
and
int
fcoml
mov
fs
add
test
outsb
leave
xchg
and
mov
aam
or
or
and
lahf
lcall
sub
aad
adc
test
xlat
test
or
adc
pop
lds
lahf
add
cli
into
out
xorl
ror
leave
out
nop
push
mov
adc
test
mov
mov
mov
int3
aaa
scas
inc
pop
mov
ds
nop
sub
ss
scas
mov
adc
fwait
sbb
sbb
pop
mov
punpcklwd
je
mov
insl
rclb
inc
add
leave
fwait
adc
pop
push
or
mov
testl
and
inc
fwait
xor
push
jecxz
and
ja
push
pushf
fstl
cmc
mov
addb
xor
inc
cmp
cltd
sbb
je
mov
es
push
shrl
mov
xchg
scas
aaa
mov
xorl
ljmp
scas
repnz
jae
in
pop
enter
mov
push
jle
out
jns
push
into
push
adc
clc
aam
xchg
mov
loop
loopne
lods
jecxz
cmpsb
sbbb
popa
fildll
popf
push
test
pushf
pop
cmp
scas
pusha
in
shlb
push
jecxz
adc
dec
cmp
lcall
xchg
sbb
push
ljmp
pop
popf
or
jnp
enter
shl
inc
xlat
clc
jmp
daa
rorl
jmp
xchg
nop
mov
xchg
mov
adc
dec
iret
jmp
int3
jo
ror
jae
add
pop
pop
cmp
scas
in
push
and
ja
les
mov
std
out
test
inc
push
jmp
mov
imulb
daa
aad
or
mov
and
sub
insb
aas
lock
and
pop
icebp
mov
call
sub
mov
daa
xlat
sbb
les
insl
xchg
imul
std
stc
xchg
rclb
les
loope
repnz
das
arpl
popf
push
inc
mov
jns
xchg
pop
xor
pop
lcall
cmp
jmp
mov
jecxz
jg
dec
fs
fstl
iret
cwtl
sbb
hlt
cmpsl
push
into
sbb
lock
movsb
loope
mov
xchg
pop
lea
dec
mov
push
pop
mov
dec
pop
cmp
or
jns
imul
sarb
out
inc
cmp
push
into
jns
stos
test
mov
lahf
ffree
lock
xor
xchg
pushf
fisubs
push
mov
adc
je
push
mov
fs
mov
adc
push
mov
inc
jmp
cmpsl
add
out
xor
mov
cmp
and
mov
mov
adcb
xlat
dec
cmp
jns
lret
dec
adc
inc
scas
jle
loopne
test
sbb
xchg
in
frstor
lods
xchg
dec
imul
mov
lahf
cli
jb
cmp
xchg
jmp
mov
hlt
pop
pop
popa
and
add
in
fwait
ja
inc
adc
cmc
out
clc
push
pop
iret
pusha
filds
ret
jne
rolb
addr16
gs
xlat
push
rcll
dec
xchg
inc
jl
pop
adc
pop
mov
enter
cld
cwtl
fwait
loopne
fisubrl
inc
in
pop
inc
jb
cmc
aam
popa
lret
stos
mov
and
mov
loopne
sbb
pop
adc
push
pop
in
adc
jb
daa
lods
int3
dec
xor
pop
push
negl
arpl
jmp
dec
mov
sahf
das
stc
cwtl
add
cmp
std
push
in
jecxz
into
loopne
push
test
pop
sub
ret
leave
loopne
push
ja
mov
adcl
lret
lret
adc
repnz
int3
aas
push
aaa
pop
sub
mov
in
mov
imul
pop
pop
jae
lock
ret
cs
sbb
or
int3
push
mov
loop
int3
aam
fbld
or
jbe
pop
push
sti
push
lcall
pop
inc
push
mov
and
cmp
insl
inc
pusha
mov
jge
sbb
jecxz
popf
dec
fs
dec
adc
xchg
les
push
pusha
pushf
mov
or
xchg
addr16
inc
add
cwtl
add
es
loopne
sub
and
push
push
imul
xor
jg
adc
js
pop
movsb
push
mov
sub
cmp
cmp
outsb
sbb
jg
push
stc
push
xchg
push
shll
pop
sbb
pop
mov
mov
icebp
test
rorb
mov
in
jecxz
xorb
mov
and
cmp
enter
or
imul
xchg
xchg
filds
sbb
out
and
add
sbb
sbbl
add
dec
popf
xchg
shl
mov
orb
sbb
xor
or
sbbl
push
addr16
fistl
push
outsl
xchg
lret
jns
xor
pop
and
in
jp
ficompl
insl
popa
dec
xor
stos
push
xor
or
aas
sub
pop
push
xchg
lret
mov
shrl
cmp
mov
mov
or
aam
or
lea
cmp
lds
ret
push
gs
mov
sbb
jmp
cli
push
push
dec
cmpsl
or
cs
icebp
fs
inc
mov
add
dec
in
scas
and
pop
mov
xchg
push
mov
out
mov
push
aad
aaa
jp
es
sub
add
popa
mov
nop
add
icebp
lock
push
sbb
add
arpl
fcompl
jno
je
push
leave
dec
dec
jp
mov
and
xor
push
jae
in
pushf
mov
inc
xchg
sbb
fdivs
fisubl
es
lahf
push
inc
push
xchg
out
or
dec
cmp
lods
icebp
sti
imul
push
lret
jmp
mov
daa
in
jle
cmc
jbe
xchg
xlat
xchg
lods
jle
pushf
add
mov
push
cmp
pop
jl
dec
aam
push
clc
mov
mov
int3
mov
push
ja
cmp
xchg
repz
fmull
cmp
adc
pop
ss
cld
stc
adc
push
arpl
inc
lea
jmp
mov
pop
mov
mov
jle
daa
outsl
stos
addb
inc
add
iret
cwtl
sub
and
sub
mov
inc
movsl
push
pop
cmpsl
push
add
add
mov
ss
loope
cmpsb
inc
add
push
repnz
mov
mov
jns
adc
loope
cmpsl
mov
xorl
sti
adc
and
iret
jns
mov
addb
je
mov
sbb
call
dec
mov
shlb
lods
filds
mov
add
fnstenv
adc
jae
nop
insl
cmp
mov
insb
sbb
add
mov
sub
xchg
in
aaa
sbb
loopne
pminub
jmp
dec
aam
cmpsb
aad
and
das
shlb
stc
aad
mov
inc
and
sarb
js
mov
xchg
int3
add
shlb
subl
es
popa
dec
adc
xor
jmp
cmpsl
fwait
subb
testb
pusha
push
add
pop
dec
hlt
or
jbe
sahf
push
push
rcl
out
pop
cmpsb
ret
jo
pop
xchg
lods
sub
or
pop
mov
or
jb
ret
lea
push
addr16
cmp
std
popf
inc
aam
xchg
out
jg
adcb
jno
jb
fwait
xsave
imul
push
dec
cwtl
xchg
jle
iret
or
push
cmpsb
jecxz
les
insl
jmp
adc
hlt
out
ljmp
loope
cmp
jb
sub
cltd
or
es
in
enter
add
cld
in
inc
mov
dec
shrb
jns
jle
adc
mov
sahf
xor
cld
pop
clc
sub
push
sbb
sub
inc
jae
loopne
dec
dec
pop
sbb
and
lcall
pop
dec
xor
cli
dec
mov
xorl
pop
inc
pop
mov
or
xchg
test
test
popw
jl
xor
arpl
or
gs
aaa
cld
cmp
scas
lock
stos
mov
sti
pop
rcrb
orps
lahf
daa
jge
mov
mov
ret
push
cmpsb
bound
push
clc
cmp
sahf
lcall
mov
in
ljmp
into
push
jge
insb
and
out
mov
dec
imul
fbld
out
jbe
lea
mov
stos
test
mov
imul
mov
mov
pop
and
mov
sbb
mov
jecxz
mov
sbb
aam
fildll
adc
adc
std
ja
lahf
repnz
sub
or
test
cwtl
test
push
lds
sbbb
mov
sbb
mov
lods
and
outsl
in
call
xchg
xchg
movsl
mov
adc
stos
or
jg
into
das
shrl
fs
out
leave
jge
xchg
repnz
dec
cmc
jmp
cltd
sbb
aas
stc
call
lcall
hlt
cmp
add
mov
pop
addr16
dec
jb
imulb
add
or
iret
js
push
xchg
jno
mov
outsl
fisubrl
out
lods
pop
mov
xchg
and
xor
and
mov
mov
sbb
mov
xor
inc
stc
lds
test
jle
or
hlt
pcmpeqb
xor
ret
mov
jge
push
xchg
sub
mov
jmp
xlat
data16
or
jae
testb
ret
stc
loop
lods
cmpl
cmp
push
add
testl
aad
ret
xor
and
ret
or
cwtl
les
popf
inc
rol
xor
mov
push
mov
adc
clc
in
addr16
xor
ret
xchg
add
int3
daa
icebp
ljmp
enter
loop
mov
inc
inc
std
xchg
jb
push
ss
mov
inc
adcl
mov
or
insb
pop
les
mov
and
outsb
jno
jecxz
xchg
testl
sbb
xchg
rolb
push
mov
movsb
and
inc
sbb
shl
mov
mov
es
pop
push
mov
xchg
call
lcall
stos
gs
mov
nop
loop
jnp
cmpsb
cmp
negl
aas
xor
lret
cmpsb
dec
dec
in
add
movl
jo
xchg
pusha
jmp
push
in
movsl
lcall
xchg
lea
cld
adc
loop
stc
mov
in
imul
jno
lahf
dec
mov
js
mov
sbb
aad
mov
dec
xchg
inc
or
fwait
push
daa
add
push
cmp
cwtl
sub
push
ljmp
loopne
in
push
cmc
bound
pop
jo
jbe
mov
push
rcl
int3
and
movlhps
jb
cmc
gs
inc
pop
je
pusha
and
outsb
xor
jmp
sub
pop
scas
scas
xor
pop
mov
mov
mov
je
jbe
pop
mov
shll
adc
mov
fcmovbe
dec
bound
sub
insl
not
shlb
push
clc
or
js
cmp
mov
push
jno
fsub
and
cld
xchg
andb
nop
cmp
fisubs
mov
fs
out
fistl
lock
cltd
dec
jae
popa
lcall
rcrl
xchg
mov
add
fwait
cld
rolb
sub
icebp
fildll
fsts
fimull
cltd
or
ljmp
push
inc
movsb
mov
test
pop
in
ss
xor
addr16
dec
scas
fstps
into
xchg
andl
or
or
jns
mov
cltd
jb
ljmp
and
sub
imul
cmpsb
outsl
outsb
repnz
xchg
aaa
xchg
in
mov
jae
pop
xor
ja
std
scas
push
and
sub
jge
xchg
adc
jle
insb
fisttpll
mov
jo
xchg
shr
adc
jmp
aad
lret
andb
inc
lock
jne
outsb
mov
call
ljmp
popa
mov
insl
cmp
cs
mov
lret
push
cmpsl
pushf
mov
lea
bound
lahf
xor
jmp
mov
rorl
mov
lcall
push
repz
call
lods
arpl
fiadds
jecxz
in
ret
pop
testl
add
fmuls
xchg
xor
mov
jne
push
lods
inc
cmp
mov
mov
scas
add
add
sbb
les
nop
mov
negb
out
cmp
popa
mov
addr16
mov
mov
in
add
notb
push
mov
insl
push
sbb
jl
clc
pop
enter
add
inc
adc
fidivs
sbb
loop
ret
xor
cmp
sbb
mov
mov
adc
jl
sbb
in
mov
jae
jb
mov
repz
inc
lret
pusha
and
fiaddl
mov
into
inc
scas
pop
mulb
jno
jns
ret
pop
xor
and
cmp
mov
jns
inc
leave
mov
movsl
jge
sbb
xor
scas
cmp
ljmp
clc
push
out
arpl
stos
in
mov
mov
jge
jmp
xchg
notl
lahf
outsl
or
adc
mov
push
jecxz
sub
mov
movsb
inc
dec
xor
adcb
push
test
iret
aas
out
sbb
inc
insl
shrd
in
mov
mov
std
mov
shlb
push
adc
in
or
push
leave
ficoms
es
xor
dec
cli
sbb
sub
push
movsb
jbe
inc
push
popa
stos
dec
cs
pop
mov
xor
jnp
fistl
std
jmp
ljmpw
lea
mov
outsl
add
sub
pushf
mov
dec
popf
imul
inc
xor
mov
cmp
or
repnz
scas
movsl
xchg
adcl
imul
lds
jne,pt
or
and
cmp
push
and
push
scas
or
dec
pop
pop
insb
ss
fnstcw
insl
xor
ret
aaa
enter
adcb
pop
push
cli
add
pop
insl
addl
cmc
notb
inc
daa
adc
scas
pop
xor
pop
clc
jb
out
or
lahf
add
out
and
or
popf
or
fdivrs
fisubrs
or
test
sub
loop
les
fiadds
stos
dec
pushf
es
and
dec
arpl
mov
daa
ficomps
mov
xor
insb
dec
pop
pop
lret
mov
cs
pop
stos
aaa
pop
in
mov
mov
cmp
lret
mov
cltd
negb
adc
or
push
daa
out
mov
xchg
inc
pop
add
cmp
lds
loop
mov
andb
mov
jbe
movsb
mov
lahf
ret
mov
cltd
ret
push
xchg
add
sbbb
pop
stos
inc
add
mov
gs
out
jmp
shrl
stos
push
inc
and
loop
out
push
andb
out
jmp
popa
rcrl
cmp
jo,pt
xchg
push
or
jb
addr16
push
stos
cld
sbb
push
lods
pop
and
pop
arpl
xchg
jmp
push
push
ret
add
mov
fisttpl
push
inc
std
mov
or
cmp
add
pop
rcll
cmp
dec
pop
xor
in
cmp
lret
cmpsb
xlat
lahf
jecxz
xchg
sub
daa
ret
adc
pop
push
dec
mov
in
cmpsb
popf
in
or
pop
enter
xlat
aaa
imul
pop
cmpb
inc
dec
lret
mov
arpl
mov
push
cmp
pop
xchg
outsl
adc
js
add
hlt
xor
rorl
add
ret
dec
lods
loop
in
mov
inc
xor
and
cltd
inc
cltd
add
test
xchg
and
push
jg
or
push
add
idivl
imul
mov
in
or
inc
movsb
pop
xor
gs
cmpsb
dec
lret
repz
xchg
add
pop
jg
push
cmp
lds
cmc
sub
pusha
sbb
jecxz
sub
shlb
jmp
cmp
add
arpl
mov
dec
mov
ret
inc
jecxz
divb
dec
adc
cwtl
pusha
scas
xchg
mov
xor
mov
adcl
test
insl
out
xchg
mov
orb
cmpsb
pop
mov
mov
mov
loopne
test
insl
push
pop
mov
jle
es
scas
iret
push
fisubs
andb
fwait
push
sbbb
xor
repz
jecxz
jmp
cmp
rcl
lods
and
pop
dec
jb
lods
leave
mov
negl
adc
sub
adc
lock
jg
lret
std
xchg
jecxz
ret
movsb
push
add
ror
and
sarb
mov
in
int
inc
cmp
jecxz
pop
fsub
outsb
enter
lods
mov
or
ret
xchg
inc
push
shll
shrl
jmp
scas
out
mov
or
mov
fdivrl
aas
mov
loop
imul
jle
in
mov
cmc
mov
mul
fisubrl
out
xchg
sub
lock
xlat
cld
or
out
jbe
adc
add
loope
mov
dec
es
xchg
jne
adcl
clc
jmp
push
into
mov
enter
lcall
inc
repz
iret
xchg
ret
jno
jb
test
cld
adc
inc
pusha
inc
mov
pop
pop
dec
adc
rcll
pop
jns
add
lahf
push
sub
push
sbb
std
inc
xchg
jle
pushf
mov
pop
addb
in
dec
stc
sti
stos
sti
idiv
stos
icebp
mov
out
out
loope
mov
stc
sahf
inc
stos
daa
pop
dec
cmp
push
mov
loopne
imul
leave
sub
leave
push
mov
add
mov
sbb
dec
mov
push
test
imul
mov
sbb
cmp
pop
xchg
clc
jnp
jae
aaa
pop
jb
int3
xchg
mov
mov
iret
incl
mov
stc
jae
aam
int3
pop
pop
and
and
xchg
push
cmp
pop
mov
inc
sub
int
adc
jl
xchg
mov
inc
pop
sbb
adc
mov
sub
jp
and
add
push
pshufw
cmovnp
shl
mov
xor
dec
lds
enter
cwtl
jp
cs
cltd
lcall
testb
pop
rcrb
in
rcrb
lret
jmp
or
fists
insl
xlat
dec
and
mov
insb
fwait
out
out
push
jno
cmpsl
push
pop
xor
in
sub
dec
adc
pop
push
mov
and
in
nop
iret
mov
pop
stc
add
fs
dec
cmc
ds
pop
jnp
lock
push
adc
test
mov
mov
popa
adc
adc
leave
and
cmpb
sub
sub
imul
pop
std
fwait
stos
imul
push
je
dec
xchg
ss
pop
cmp
adc
dec
push
pop
scas
loop
insl
xchg
rcl
xor
mov
cmp
in
loop
add
push
dec
scas
add
test
cli
cli
push
ljmp
mov
jbe
add
dec
int
testl
push
adc
les
and
std
stos
insb
sub
sti
lahf
ficompl
ja
jae
sbb
mov
cmp
push
scas
das
into
mov
pushf
rol
mov
push
mov
jb
sbb
pop
shl
jg
mov
es
pop
mov
jno
and
jl
cmp
shll
mov
jmp
dec
jecxz
js
or
je
pop
cltd
cli
mov
adc
mov
push
ja
xor
out
imul
push
dec
fcoms
shrl
mov
aas
fxch
sbb
and
inc
sub
imul
cltd
push
mov
jl
cli
in
repz
lahf
dec
cld
jge
pop
xchg
mov
lea
add
std
sbb
inc
sti
push
cmp
addr16
fnstcw
jl
fwait
arpl
add
lods
fsubl
add
cmp
pop
and
sahf
jnp
xchg
add
cmp
out
mov
mov
mov
mov
icebp
jge
mov
jp
or
in
mulb
cmc
pop
xchg
cmp
mov
and
sar
sbb
push
jle
enter
div
scas
lods
xor
or
mov
fscale
jnp
ret
orl
inc
stc
jb
mov
out
out
cli
pop
rolb
imul
adc
pop
adc
adc
lea
mov
jp
jg
push
imul
imul
mov
shr
in
mov
add
andl
jae
cmp
pop
and
in
pop
nop
cmp
sbb
shlb
adc
lret
mov
adc
rorl
dec
std
sbb
cwtl
fwait
cmp
mov
pop
mov
out
pop
stc
bound
push
add
dec
jno
out
mov
aas
sbb
pop
and
adcl
mov
test
mov
in
outsb
jbe
xor
sub
les
xchg
subb
sahf
loopne
and
sbb
movsb
push
mov
xor
cmp
mov
stc
inc
jg
enter
jmp
subb
jp
mov
rcrb
test
adc
dec
pushf
sbb
cmp
int3
sbb
in
leave
push
inc
aam
shll
xor
mov
lahf
in
adc
cwtl
test
xor
cmp
es
push
repz
sub
rorl
push
mov
push
lds
jmp
cmpsb
inc
test
addr16
and
repnz
pop
popf
cmp
mov
dec
inc
mov
adc
push
stc
dec
mov
shrl
sbb
pop
mov
repz
dec
adc
pop
std
imul
push
sahf
cmpsb
nop
scas
ja
ret
lret
xchg
movsl
pop
insl
stc
jg
xorl
xchg
int3
adc
inc
xchg
mov
pushf
cmpl
iret
mov
pop
repz
test
or
cmp
dec
jne
xchg
xor
cwtl
pop
in
fs
sarl
add
mov
lret
clc
xor
or
jb
hlt
outsl
dec
int
jns
dec
lret
negb
sbb
pop
pop
mov
xor
into
dec
ja
rorl
negl
enter
adc
sbb
mov
dec
add
faddl
and
leave
orb
jp
or
and
adc
sub
push
mov
inc
xor
adc
call
shll
inc
push
sub
dec
and
mov
push
ds
stos
fs
outsl
movl
shl
push
push
adc
sub
adc
ret
cmp
dec
sahf
scas
leave
pop
mov
std
stos
es
adc
mov
in
cmp
scas
xor
sti
mov
insl
sbb
xchg
lahf
push
addr16
xchg
cmp
sbb
add
inc
fimull
dec
sbb
stc
lahf
xchg
and
jg
adc
dec
xchg
lahf
jmp
fnstcw
xchg
ja
ja
add
jae
pop
sahf
enter
call
repz
adc
push
dec
mov
dec
pusha
jo
jmp
xchg
adc
lcall
loop
mov
xchg
dec
jo
movsb
pop
dec
sbb
jmp
lahf
cwtl
xchg
mov
jno
loopne
cltd
popl
orl
jns
inc
hlt
jae
decb
xor
pop
cli
movsl
insb
lcall
push
nop
add
pop
jae
mov
std
fs
xrelease
loopne
les
popf
or
aad
push
std
lret
and
mov
es
out
xchg
gs
js
jmp
ds
rcrl
lret
fwait
mov
xor
jbe
fmuls
xor
out
mov
pop
xor
or
adc
push
fucomip
cmpsl
push
rcll
or
in
mov
jae
jb
mov
testl
xor
test
and
fdivs
jmp
adc
mov
roll
push
out
jbe
addr16
icebp
xchg
or
adc
mov
cld
mov
stos
and
fistpl
inc
cmp
jnp
xchg
jmp
push
pop
sub
cmc
cmpsl
sub
insl
push
mov
mov
sarl
loop
and
xchg
xor
xchg
dec
inc
dec
xor
pop
mov
inc
test
fmulp
cmpl
inc
sub
push
push
outsb
sub
inc
and
icebp
mov
cltd
fwait
ljmp
adc
pusha
push
xorb
neg
xor
test
outsb
movb
das
movsl
loop
fsubr
mov
add
in
jge
into
push
stc
cmp
pop
addb
test
dec
inc
inc
aad
push
out
test
mov
pop
fwait
or
lret
xor
mov
mov
in
jbe
adc
outsl
pop
push
nop
cli
pop
lds
sub
adcl
adc
stc
stc
adc
pop
mov
jo
xchg
and
sub
mov
notb
cmpsl
inc
and
imul
je
pop
push
push
and
inc
mov
add
sbb
and
pushf
ljmp
mov
push
xchg
jne
push
inc
lea
add
ja
and
pop
out
and
jno
scas
ljmp
xor
push
xchg
in
loop
roll
sbb
xor
int
aaa
jo
mov
add
aaa
mov
mov
lds
orl
pop
mov
jecxz
roll
push
mov
cwtl
dec
lret
or
add
sbb
es
cltd
loop
je
sub
push
sbb
call
pushf
or
sbb
mov
movsl
fdivs
std
addr16
lods
insl
cwtl
add
mov
je
mov
mov
pop
testl
aas
pusha
jae
mov
jmp
push
rcrb
mov
jns
stc
inc
cwtl
mov
add
adc
xorl
lahf
adc
cmovl
mov
cmpsb
mov
mov
inc
xchg
sbb
xor
mov
test
ss
jle
pop
sbb
inc
jb
cmpsb
jg
sbb
in
xchg
scas
ret
xchg
and
movl
cmp
cmc
mov
adc
jmp
pop
addr16
mov
push
cwtl
shl
mov
sbb
lds
xchg
cmp
test
lea
lahf
mov
mov
mov
cmc
mov
insl
sub
xor
pop
inc
or
sbb
pop
ss
stc
push
mull
dec
addb
dec
jmp
jo
mov
loope
xchg
lea
imul
sbb
int3
sti
jnp
jb
xchg
xchg
dec
sbb
dec
dec
adc
inc
fwait
cwtl
xlat
jo
test
dec
inc
scas
jb
fwait
xchg
int3
ret
inc
outsl
mov
shll
test
or
push
int3
mov
and
jle
add
adc
xor
add
lods
mov
sbb
lods
inc
into
jge
pop
inc
mov
stc
rclb
inc
int
mov
sub
stos
int
pop
jo
pop
mov
mov
cld
push
adc
push
rcrl
xchg
ja
data16
int
add
and
and
mov
cmp
push
call
push
popa
leave
addr16
inc
out
ss
jmp
ret
test
insl
stc
mov
aaa
mov
clc
xorl
mov
loopne
bound
aas
and
mov
mov
cmp
adc
stos
inc
push
aam
xor
push
sub
in
mov
imul
cld
aad
in
cli
add
pop
add
xchg
push
mov
pop
loop
xchg
xchg
imul
lods
in
push
fstps
data16
and
sti
pop
adc
lds
mov
lret
imul
out
sbb
add
mov
and
bound
test
sub
push
push
jo,pn
loop
sbb
push
fsts
and
cmpsb
sbb
mov
xor
iret
jne
test
fs
out
sbb
and
addr16
lods
push
arpl
or
sbb
sbbl
add
add
cli
inc
sbb
in
or
xor
int3
mov
imul
mov
adc
ss
in
nop
sbb
mov
testl
or
scas
lret
mov
data16
jg
shr
jecxz
lret
mov
fwait
or
mov
and
jmp
mov
push
sahf
lods
shrw
incl
lea
insl
lods
and
sub
xchg
ficoms
test
add
cmpsb
stos
sti
jge
bound
add
mov
xor
lock
out
push
repnz
sahf
pop
jbe
sbb
jp
enter
push
push
add
inc
test
jnp
and
ret
cmp
cmp
pop
div
mov
sub
lcall
fwait
ds
jl
dec
lods
addl
stc
popa
xchg
bound
out
push
scas
stos
call
or
xchg
scas
fisubs
adc
inc
out
pop
push
bound
push
test
pop
jne
sahf
repnz
fnstsw
inc
arpl
xchg
xor
in
dec
and
lahf
ret
lods
adc
push
jge
push
sbb
pop
shll
xor
popf
rol
xchg
mov
gs
push
dec
fbstp
dec
shrb
add
cmp
add
in
pushf
ljmp
or
stos
xchg
push
or
sbb
jmp
cmp
mov
lods
mov
iret
loop
and
jmp
or
cmc
in
dec
mov
fiadds
xor
dec
out
pushf
iret
roll
dec
pop
jo
sahf
jo
mov
mov
gs
push
test
imul
test
out
addb
decb
xchg
mov
sahf
jmp
sbb
in
jge
pop
je
andb
in
sbb
adc
sub
mov
cmp
bound
mov
mov
mov
aaa
cmpsb
mov
inc
test
incb
cmovno
insl
fdivrp
mov
dec
or
cli
pop
push
hlt
inc
lea
push
shll
out
aas
out
cmp
lea
push
daa
sub
cltd
fcoms
sub
and
mov
inc
loop
sub
jmp
mov
popf
hlt
jle
incl
push
inc
pop
hlt
cmpsb
fucomi
divb
xor
push
or
enter
outsl
enter
arpl
inc
pop
orb
lods
popa
jo
sbb
and
pop
addl
mov
cmp
pop
and
ror
dec
sbb
ja
jecxz
arpl
mov
fwait
ret
mov
push
adc
mov
pop
out
iret
addr16
ficompl
xor
movsb
lahf
cld
imul
out
imul
xor
shl
add
sahf
daa
lret
push
push
lahf
dec
mov
pop
mov
insl
and
inc
stos
adc
mov
add
mov
xor
test
jb
mov
add
pop
add
sub
aaa
push
sub
addr16
mov
mov
and
xor
jmp
ret
push
jae
sar
out
mov
fs
push
fists
test
sub
mov
lock
jecxz
push
cs
pop
pop
dec
jnp
mov
adc
test
insb
mov
clc
or
jp
aaa
fcmovne
cltd
push
cmp
lea
jp
f2xm1
xchg
ljmp
jmp
fwait
adc
cld
ficomps
mov
imul
sahf
mov
orb
mov
frstor
das
jbe
push
ffree
mov
jl
lds
sbb
inc
mov
mov
or
cmp
sbb
jle
cmp
frstor
int3
mov
insb
xchg
adc
aad
xchg
outsl
add
sbb
push
in
xchg
inc
push
and
enter
lcall
or
fsubp
jne
mov
push
add
std
mov
dec
cmc
pop
mov
icebp
subb
jg
data16
int3
out
mov
lcall
dec
sbb
mov
jg
mov
and
pop
jb
repz
arpl
push
inc
mov
jp
mov
push
mov
pop
dec
jecxz
ja
ret
cli
daa
push
mov
add
mov
into
popa
insl
push
mov
or
daa
outsb
lods
inc
lds
sbb
pop
push
int
sub
in
loop
repnz
jno
das
icebp
dec
es
sub
mov
sub
lods
in
mov
push
jle
sub
sbb
lods
jmp
xor
das
out
or
push
fs
push
push
mov
frstor
xchg
jae
mov
mov
iret
daa
out
push
pushf
sub
xor
ljmp
insb
ret
pusha
dec
shr
loop
dec
repz
jae
inc
sbb
dec
in
jbe
jl
mov
dec
fwait
lret
push
fstpt
or
sbb
or
xor
cmp
js
push
sub
jb
sub
adcl
aas
enter
cmp
add
jge
pusha
scas
shll
mov
or
repnz
es
lret
push
pop
shrb
mov
lcall
daa
loopne
inc
mov
sahf
test
aaa
das
dec
mov
inc
mov
lret
test
sub
mov
dec
or
sbb
aad
mov
add
or
add
inc
fdivrs
pop
mov
out
rclb
aaa
sbb
aas
outsl
add
sbb
mov
push
repnz
push
lcall
pop
jl
sbb
push
pop
mov
push
jb
bound
addr16
sarb
inc
pop
loope
push
enter
sub
in
add
cwtl
adc
int
mov
mov
lret
dec
lods
mov
and
cli
jp
imul
mov
aaa
mov
sbb
xor
add
inc
icebp
dec
add
cld
jle
jne
and
sti
insl
mov
xor
mov
mov
push
xchg
adc
inc
jmp
push
rolb
pop
dec
pop
inc
movsl
out
sbb
or
mov
mov
inc
push
les
cmpsb
pop
cld
inc
cli
adc
mov
pushf
fcompl
xchg
adcl
pop
and
and
mov
mov
push
dec
or
pop
scas
imul
sbb
sub
pop
movsl
addl
jl
fwait
imul
inc
or
mov
mov
xchg
mov
inc
dec
imul
imul
fidivl
pop
jne
fbstp
in
lcall
lret
stc
dec
aas
add
ljmp
roll
ss
out
out
daa
sub
jo
adc
das
mov
jmp
xchg
rcr
add
movsbl
cmp
pop
jo
je
pop
xlat
popa
outsb
cld
or
in
mov
enter
add
notl
pop
and
aad
jl
je
mov
mov
fsubrl
pop
adc
cmpsl
push
lods
daa
xorb
mov
xchg
mov
outsl
and
dec
cmp
sbbb
stos
mov
addb
xor
push
xchg
mov
cmp
dec
or
jmp
test
lret
loope
xchg
shr
sbb
jg
pop
outsb
in
and
lds
cmc
sub
add
dec
out
adc
push
dec
mov
mov
xchg
test
loop
adc
popa
hlt
pop
mov
std
inc
or
movl
movsl
push
out
das
fcmove
mov
xor
pop
xor
cli
mov
lcall
jb
sub
mov
cld
stos
sbb
scas
and
loop
dec
daa
ljmp
mov
rolb
loopne
cltd
mov
fbstp
jmp
cmp
jo
jge
and
or
lock
mov
bound
rcll
test
or
pop
addr16
mov
jbe
jle
add
fcmovne
pop
ss
cld
clc
xor
mov
jg
sub
mov
mov
inc
pop
rcr
mov
fisubl
out
cmp
aad
xor
shlb
insb
icebp
fpatan
jge
shrl
push
mov
push
loopne
cmp
adc
ret
jb
cltd
movsl
xchg
mov
neg
inc
xchg
popf
pushf
dec
int
fidivs
cltd
mov
mov
mov
adc
adc
addb
push
dec
outsl
ret
out
ljmp
enter
cmp
dec
cmp
mov
xor
pop
jo
fcoms
lods
cmpsb
push
add
adc
sbb
ja
jbe
ljmp
dec
or
inc
mov
orl
jo
aad
je
scas
insb
mov
jnp
sub
fdivl
in
inc
notb
fiaddl
mov
xchg
jnp
lock
es
aam
rcrl
pop
out
pop
clc
xlat
dec
movsl
jne
pop
xchg
test
movsl
jmp
xor
add
push
mov
in
cmp
xor
xor
xor
push
mov
mov
push
clc
hlt
push
pop
sub
enter
jl
rorb
jp
inc
inc
sub
add
lahf
inc
mov
inc
mov
ds
pop
test
mov
cld
stos
outsl
push
or
jle
das
dec
mov
inc
xchg
push
outsl
stos
mov
inc
jnp
in
cmpl
ret
std
cmp
js
or
test
adc
xacquire
mov
mov
jmp
pop
arpl
jmp
imulb
outsl
xlat
lahf
roll
jae
mov
movsl
daa
ret
shlb
stos
out
xchg
mov
ja
and
xor
xchg
mov
stos
sub
ret
jns
xchg
jb
mov
faddp
xlat
sbb
jge
sbb
lret
enter
gs
arpl
dec
sbb
cmp
or
sbb
inc
push
mov
xchg
icebp
cmp
les
js
dec
stos
push
ss
jbe
das
scas
int3
xor
popf
lcall
jne
xchg
push
inc
dec
enter
clc
push
and
mov
sti
stos
push
mov
mov
jno
and
and
mov
mov
jbe
xor
cmp
sbb
push
shlb
ret
or
test
repz
sub
leave
or
aam
scas
ds
outsl
mov
pushf
mov
mov
push
cld
in
fadds
test
jl
lock
rcrb
xor
add
outsl
sub
cmp
fildll
repz
or
sysexit
outsb
out
cmp
out
inc
test
pop
pop
pop
or
jmp
jo
mov
ficoms
mov
addl
dec
mov
rcll
cli
jmp
push
xor
mov
leave
out
mov
fwait
dec
xchg
sub
fwait
lret
cmp
subl
cmp
and
negl
xchg
call
jecxz
add
push
dec
icebp
cmp
xchg
xchg
or
xchg
mov
mov
iret
cmc
and
xor
mov
and
lods
sub
ljmp
lcall
push
cmp
lahf
bnd
int3
xlat
sbb
or
and
or
out
jle
dec
roll
pop
add
out
cltd
add
pop
add
movsb
repnz
aam
repz
aas
decb
mov
xor
or
pop
adcb
lea
sub
mov
cmpsl
ret
mov
sub
test
sub
cmpsl
dec
xchg
inc
mov
insl
pusha
lds
mov
sub
push
xchg
adc
bound
mov
pushf
pop
sahf
adc
pop
in
mov
pop
adc
jecxz,pn
cmpsb
scas
adc
cmp
or
jle
inc
dec
pop
shlb
jecxz
xor
jno
pop
xchg
mov
jl
data16
dec
cld
xor
or
sarb
lds
mov
push
fisubs
jmp
xor
lods
xchg
enter
inc
lahf
push
or
lahf
iret
loope
cmp
add
mov
mov
in
cmp
push
mov
outsb
and
arpl
jno
xchg
mov
popf
jle
push
adc
js
jmp
jg
pop
sbb
std
mov
push
sti
pop
mov
xchg
mov
push
adc
mov
sti
dec
pop
les
cltd
cmp
dec
mov
or
cltd
inc
rcll
jmp
cmp
nop
out
sarl
ljmp
outsl
pop
or
or
dec
mov
inc
aad
pop
jmp
pop
cmp
in
sub
pop
sub
adc
jp
cmp
in
dec
mov
orl
ljmp
push
pop
pop
xchg
das
fwait
push
mov
xchg
jbe
mov
dec
in
cltd
xor
int3
out
lods
shrb
inc
cmp
aaa
or
jmp
cmc
fisubrl
les
bound
js
and
jge
pop
sbb
push
pop
test
mov
movsb
fldl
pop
jge
jb
enter
inc
cmp
xor
rcl
pop
add
sbb
loopne
imul
arpl
and
cmp
jb
ds
pop
sahf
repz
push
pop
in
mov
mov
pop
mov
add
xchg
mov
mov
sub
xchg
adc
std
or
ja
fs
adc
js
cld
xor
cmpsl
test
lret
and
imul
aad
inc
mov
adc
lds
add
shrl
jmp
fs
inc
add
mov
sub
stc
popf
push
out
ja
roll
movsb
rcrb
aad
or
cld
ficompl
ret
dec
mov
test
jae
rol
push
jle
scas
push
lret
adc
jle
dec
mov
cmp
sbb
mov
xchg
dec
cltd
aas
packuswb
outsl
nop
addb
and
testl
add
and
sub
imul
or
subl
std
fidivrl
mov
cmp
jecxz
in
mov
dec
xor
scas
xlat
repnz
aaa
data16
mov
imul
push
hlt
lock
ret
outsl
jmp
lock
push
nop
add
cmp
shl
xor
inc
inc
imul
mov
in
clc
fucom
and
inc
add
jnp
sub
lcall
ret
lret
xchg
test
xchg
aas
cs
loopne
push
xchg
imul
aaa
int
sbb
mov
jns
pop
jg
les
xor
push
daa
lret
imul
daa
lea
sahf
data16
stc
mov
lock
faddl
xchg
sub
jno
aaa
mov
xor
adc
daa
lahf
inc
push
jecxz
arpl
daa
jmp
cmp
mov
clc
adcl
dec
sar
leave
mov
lea
je
outsl
xchg
push
cmp
mov
movsb
inc
and
sub
cltd
pop
popa
jmp
push
aad
ljmp
fs
icebp
jl
bound
ret
cwtl
dec
or
sahf
cmpsb
test
mov
inc
fwait
push
fisubrs
sub
dec
push
sub
xlat
push
and
je
xchg
and
scas
adc
aad
lock
mov
dec
push
aam
dec
jle
adc
ss
push
hlt
cmp
xchg
cs
xchg
sub
inc
cmp
sub
adc
cwtl
dec
imul
int
scas
jmp
dec
adc
push
mov
sub
outsb
insl
hlt
insl
mov
cmp
repz
mov
and
into
mov
imul
mov
out
fimuls
popa
out
mov
pushf
aad
xchg
fld
mov
push
rcrb
stos
xor
ret
cmp
push
or
push
cmp
dec
mov
push
mov
stc
xchg
sub
clc
int3
movsl
adc
mov
fwait
loop
sbb
sbb
gs
dec
stos
imul
xchg
inc
daa
fs
dec
jae
or
addr16
sbb
mov
pop
inc
stc
push
out
sub
push
arpl
xchg
fwait
sbb
leave
push
aas
fdivrs
dec
ja
pop
sbb
imul
fsubs
mov
fildll
call
sub
cmp
divb
sub
adc
or
add
test
dec
jge
lods
inc
lock
scas
jb
push
jl
add
push
and
xchg
mov
xor
into
ret
jmp
pop
inc
sub
jnp
cli
jbe
insl
adc
add
mov
cmpsb
sti
cmpsl
push
imul
adc
daa
push
popa
fcompl
sub
jo
out
inc
cmovne
data16
xor
inc
ficoml
cwtl
cli
mov
cmp
out
sub
movsl
push
mov
movsl
stos
pushf
popa
test
xchg
xchg
and
aaa
xlat
fisubs
insl
xchg
mov
or
xlat
jmp
mov
or
xchg
sbb
cmpsl
inc
into
insb
dec
push
inc
mov
rcrl
dec
mov
nop
lcall
popa
mov
push
xor
jle
lds
ljmp
sarl
dec
imul
jl
mov
jecxz
and
xor
jo
int
hlt
daa
hlt
js
pop
mov
inc
imul
add
leave
cmp
out
lock
pop
inc
xchg
addr16
movsb
in
aas
adc
cmc
mov
mov
add
fsubl
stos
lock
push
icebp
cmpsl
adc
in
lea
sahf
cmc
pop
in
insb
fcomip
imul
push
pop
push
stos
and
add
ss
or
iret
addr16
xchg
xchg
jmp
test
insb
repz
icebp
subb
cli
fwait
jbe
dec
or
add
mov
xchg
imul
test
call
add
cmc
adc
in
jno
jne
push
call
add
adc
sbb
fisubl
jns
sbb
jmp
aam
pop
cli
dec
add
push
imul
xchg
scas
stos
and
mov
popf
adc
call
cltd
sbb
dec
js
repnz
xor
jbe
xchg
push
jne
shll
insl
hlt
mov
inc
dec
xchg
test
mov
pushf
sti
xor
add
cmp
sti
test
hlt
dec
jo
arpl
lock
scas
int
adc
pop
lock
hlt
dec
aad
imul
push
mov
xor
fwait
pop
jno
mov
stc
sbb
arpl
lea
cli
arpl
mov
icebp
and
xchg
clc
dec
push
ss
mov
test
cmp
pop
push
dec
loopne
mov
ret
sbb
loope
jns
fisubs
xchg
jle
cli
stos
lret
adc
push
test
popf
jo
cltd
or
cmp
inc
and
jecxz
pushf
jge
loopne
push
js
pop
out
movsb
in
into
sbb
xchg
adcl
test
xchg
adc
data16
pop
and
jmp
jmp
xor
lcall
jg
jns
scas
out
roll
push
stos
or
lods
test
dec
add
fcoms
cli
aad
inc
inc
xchg
or
jmp
imul
faddl
mov
loopne
cmp
mov
mov
iret
out
push
jecxz
xchg
add
scas
xchg
sbb
arpl
xchg
pop
loop
adc
sbb
sub
outsb
xor
stc
lods
inc
icebp
rclb
in
or
push
push
scas
aad
sub
push
jge
mov
out
mov
in
lods
out
enter
pop
xor
mov
jb
pop
sahf
or
ja
insb
mov
stos
cmp
stos
add
dec
sub
and
nop
imul
dec
ja
cmp
mov
sbb
sub
dec
mov
stos
push
scas
mov
cltd
lahf
popa
pop
bound
rorl
fs
jno
sub
loope
out
data16
gs
pop
in
mov
das
mov
movsb
outsb
sub
push
aam
aad
mov
xchg
into
jnp
xor
rolb
cmp
cwtl
ds
pop
dec
test
cld
lods
std
xor
sub
lds
cld
dec
push
decl
sbb
and
cmp
sbb
lods
pop
dec
sub
in
loopne
xchg
arpl
loop
das
cmp
in
pop
add
int
pop
rclb
lahf
pop
push
aas
adc
notb
psubw
cmp
cmc
cmp
pop
cmp
out
in
mov
pushf
out
rcr
leave
or
xchg
lods
mov
stos
mov
mov
mov
jecxz
popa
pop
inc
sub
mov
inc
mov
or
sub
mov
scas
movsb
cmp
pop
push
les
mov
sarb
or
pushf
ficompl
jo
pop
and
sbb
cmpsl
iret
fwait
adc
xchg
inc
rcll
test
cld
int3
popa
inc
or
jne
dec
mov
push
ret
xor
cmp
imul
adc
jo
dec
jno
aam
pop
adc
mov
test
pop
add
cmp
push
xor
jmp
mov
test
mov
call
neg
out
mov
lods
mov
and
lods
enter
push
dec
push
sbb
jne
out
xor
fiadds
int3
sub
fimull
xor
inc
orb
push
xlat
lcall
fdivs
fwait
ss
cmp
ficoml
lret
push
insb
and
lock
ja
and
lods
adc
lea
aam
pop
inc
aas
out
jg
out
dec
nop
test
mov
sarb
adc
cmp
test
loopne
rorb
cmp
or
mov
sub
xchg
js
dec
xchg
out
cmpl
stc
and
xor
xor
pop
out
mov
pop
pushf
inc
shlb
shll
xchg
mov
out
inc
sbb
test
int3
lret
mov
inc
nop
aad
or
mov
or
clc
lcall
insb
pop
not
xor
dec
in
movsl
lea
push
sub
loope
adc
scas
xchg
sbb
in
lea
lods
mov
xchg
jg
mov
sub
imul
add
fwait
lds
scas
or
inc
sub
xor
xor
movsl
jnp
pop
cld
fcompl
add
lahf
in
dec
dec
call
xlat
inc
jnp
movsl
popf
test
pop
js
inc
push
lds
sbb
mov
inc
loope
and
test
xchg
cmp
and
cli
push
scas
jbe
in
push
shll
sub
sub
push
inc
inc
sub
xor
mov
mov
cmp
dec
es
int
test
pop
mov
ljmp
jnp
mov
xchg
ficomps
push
sbb
mov
mov
push
xchg
pop
rorl
roll
cmp
sti
mov
insl
add
sbb
jne
out
lods
inc
insb
pushf
insb
push
cwtl
xchg
stos
data16
mov
jg
movsl
fildll
mov
insb
ss
pop
stc
in
pop
fcomip
push
loop
loope
push
cmp
test
and
pop
and
jno
out
mov
imul
and
sti
fucom
out
push
imul
sub
jne
arpl
mov
lds
int3
jnp
es
int3
cmp
sub
lock
test
std
rol
aam
scas
imul
es
lret
lods
jmp
enter
cmp
xor
push
out
xlat
add
lcall
mov
jle
jp
out
mov
and
xchg
movsb
xchg
jg
pop
pop
dec
jmp
repnz
push
fnstenv
or
mov
lcall
call
mov
cmpsb
inc
cs
cmc
xchg
xchg
add
fcompl
or
and
daa
enter
fstpt
or
ss
xor
test
es
fadds
lcall
sahf
insl
adc
push
lock
out
in
clc
dec
nop
shlb
ljmp
pop
scas
dec
lahf
inc
lret
sub
push
mov
cmpsl
lea
mov
push
mov
fs
pop
aas
fisubs
sarl
inc
in
push
pop
xor
cli
ret
scas
dec
add
and
and
shl
pop
inc
insl
xchg
mov
aam
sahf
jecxz
or
sub
shlb
inc
cmp
inc
lcall
pop
jecxz
and
xor
fstpl
cmp
xor
mov
xlat
lahf
push
clc
push
popa
insb
add
adc
aas
in
mov
ljmp
imul
inc
sahf
jbe
addr16
or
jb
out
jae
pop
push
in
int3
dec
lock
iret
push
push
xlat
shll
test
xchg
lock
add
bound
mov
and
xchg
popf
mov
push
and
rcrl
scas
push
and
int3
sbb
lahf
push
or
cltd
pop
clc
pop
mov
ficomps
push
jmp
lds
lods
mov
mov
mov
das
es
pop
nop
or
mov
fdivl
push
enter
xchg
xor
cmp
xor
jmp
call
push
repz
sbb
fidivs
jb
inc
out
mov
jg
or
xchg
inc
inc
inc
mov
xchg
add
scas
ds
repnz
les
pop
mov
enter
dec
test
iret
xchg
jp
call
mov
adc
enter
inc
jns
push
xchg
jnp
popf
adc
pop
lds
sti
xchg
and
stos
inc
lret
jp
mov
test
jp
popa
rclb
clc
pop
mov
or
adc
or
xchg
sti
call
xchg
pop
xor
sbb
adc
fcmovne
and
mov
roll
rolb
and
jmp
dec
aas
mov
scas
or
jb
sbb
add
mov
cmpsl
jge
dec
push
in
ljmp
or
popa
nop
out
lea
adc
fidivrl
lahf
sti
mov
mov
jb
std
add
sbb
clc
ret
scas
cmp
fiadds
adc
lds
push
dec
mov
push
xchg
loopne
and
adc
jns
or
ficoml
ds
daa
mov
gs
rcrb
ret
jo
stos
aaa
fadds
lret
lds
xor
int
loop
mov
and
push
mov
out
sbb
or
call
jo
jns
and
rol
xor
lret
cmp
pop
mov
sbb
add
ret
mov
jbe
loope
inc
xor
sbb
push
mov
outsl
rcrb
inc
fisttpl
mov
push
mov
pop
insb
sbb
stos
inc
icebp
bound
jae
sbb
bound
xor
jns
in
mov
das
pushf
jns
or
lahf
jl
addr16
cs
mov
pop
rcl
adc
sub
dec
imul
cmp
adc
cwtl
out
pop
fsts
add
stos
arpl
pop
xchg
sub
pop
sbb
loope
add
gs
scas
sbb
dec
and
and
dec
popa
pop
popf
push
shr
sub
cmp
push
xor
jmp
xor
jmp
js
pop
and
adc
jecxz
loopne
mov
fwait
jg
cmpb
testl
push
popa
loop
adc
mov
imull
orb
das
fscale
repz
add
lcall
loop
mov
aas
ja
call
call
pop
cmpsb
cmp
adc
mov
add
lods
lahf
stc
ret
aaa
xor
ja
loopne
or
test
outsl
cmp
mov
push
sub
cmpsl
lds
add
ret
lods
scas
dec
jecxz
dec
ja
cmp
outsl
jno
outsl
ret
ljmp
mov
std
adc
or
rcrl
mov
lcall
cmpsl
xchg
outsl
sub
cli
add
shll
fldcw
mov
xchg
lcall
pop
stos
adc
daa
mov
push
inc
sub
mov
pop
fst
push
cmpsl
lret
leave
xchg
dec
ljmp
adc
imul
in
pusha
jbe
fwait
cmpsl
out
xchg
cmc
push
inc
mov
dec
mov
stos
cmp
cmpl
lret
lods
imul
lahf
imul
mov
cld
popa
or
pop
cmp
push
and
xor
and
xor
ljmp
js
pop
mov
push
fs
push
adc
pop
cmp
jns
and
push
shll
adc
add
sub
xchg
pop
pop
outsl
pop
fldl
cld
pop
inc
add
or
enter
filds
in
mov
fadd
dec
adc
pop
pop
push
mov
xchg
test
push
xchg
sub
cld
iret
jg
mov
xchg
data16
jne
sti
popa
mov
repz
fimuls
test
jle
mov
rclb
cmc
sbb
sahf
les
in
andl
scas
mov
fwait
mov
inc
loop
jg
in
aas
leave
xlat
pop
dec
jae
sub
cmp
loopne
sarl
jbe
cli
outsl
sub
jno
mov
stc
outsb
fmull
arpl
jae
aaa
lcall
ljmp
iret
dec
sub
sub
add
enter
pop
icebp
push
bound
dec
addl
les
cmp
ret
stos
fwait
xchg
je
or
or
sbbb
jns
aad
jmp
push
ret
outsl
popa
jecxz
inc
lods
mov
jnp
loopne
ficomps
mov
push
sub
adc
push
xchg
jb
dec
cmpsb
jg
pushl
movsl
mov
add
cmpsb
ret
sub
cltd
inc
les
cmpsb
xor
lods
pushf
mov
push
xchg
movl
adc
xchg
lds
iret
jmp
adc
js
scas
xchg
jno
xor
push
lods
push
stos
into
jle
rolb
sbb
sbb
jg
cmp
shll
sub
pop
insl
jg
cmp
fdivs
cmp
mov
pusha
cmp
movsl
jb
cmp
inc
stos
lahf
aam
or
int3
notb
sub
into
inc
adc
sbb
ret
fs
data16
mov
daa
push
xchg
add
lcall
inc
add
scas
outsl
mov
sti
cwtl
movsl
mov
or
push
fisttpl
mov
lds
cli
sub
or
sub
pop
pop
cmp
adc
iret
ds
ret
in
cs
outsl
hlt
fidivs
xchg
cld
cmp
and
test
loop
jae
out
and
sub
subb
loope,pn
mov
push
inc
in
mov
sbb
mov
mov
xchg
and
pop
lahf
nop
fbld
sub
jno
mov
fs
cmp
pushf
jbe
xor
sub
icebp
aas
pusha
sbb
stos
sbb
insb
sub
repnz
cld
clc
mov
sbb
sbb
add
or
rorb
mov
xor
lods
push
push
jmp
adc
ja
pmulhuw
sub
mov
dec
arpl
leave
jns
outsl
loop
je
lods
dec
outsl
mov
xor
lcall
dec
jl,pn
insl
inc
mov
push
fmull
xchg
in
dec
xor
inc
sub
pusha
xchg
xor
cld
out
loope
sbb
pop
lds
xabort
arpl
cmp
sub
xlat
xor
aaa
mov
fmuls
lret
sbb
das
mov
mov
jno
sub
stos
sub
and
sub
cmpsb
jp
out
pop
xor
adc
push
or
loopne
aad
dec
repz
aam
in
test
and
in
out
push
mov
cmc
and
lahf
nop
lock
xchg
ds
in
mov
scas
lods
mov
jbe
mov
cmp
outsb
jg
cmp
sbb
gs
or
loope
pop
mov
xchg
add
pop
dec
insl
xchg
repz
out
or
js
scas
fstps
das
jbe
inc
dec
mov
in
aad
imul
stos
inc
mov
scas
lea
ds
insb
push
in
sbb
pop
pop
xor
shll
inc
mov
cltd
out
and
test
lcall
dec
lahf
test
mov
mov
mov
and
sahf
xchg
mov
addl
inc
out
out
jbe
addr16
pop
inc
mov
push
jmp
mov
test
fidivs
sbb
jle
push
pop
cmp
push
test
or
mov
andl
sahf
jne
fsubl
push
insl
out
mov
pop
pop
call
xchg
out
push
xchg
aad
out
push
repz
js
cmp
or
out
dec
adc
ds
cli
cld
popf
adc
ficoms
pop
dec
pushf
sub
andb
xchg
cli
xor
mov
loop
mov
in
scas
test
cs
xor
sub
xor
inc
ja
rol
xchg
adcb
popa
sbb
loop
jne
dec
push
ret
xchg
je
sub
xor
arpl
jp
pop
push
mov
into
push
xchg
cmpsb
xor
pop
push
and
add
popa
mov
faddl
mov
sub
sub
cltd
fildll
adc
lea
push
into
stc
rcrl
fwait
or
iret
outsl
cmp
mov
ret
jnp
pop
jmp
and
fwait
pop
std
aaa
pop
fs
out
leave
mov
fildll
jecxz
ja
jnp
rclb
adc
loop
movl
push
pop
pop
lods
icebp
in
jp
in
shrl
or
sbb
or
cmp
mul
or
dec
sub
pop
mov
mov
xor
iret
inc
xor
sub
dec
ss
fstps
push
popa
mov
cli
sub
cltd
dec
dec
jg
fs
xlat
rcrl
pop
xor
jae
dec
cmpl
lea
fstl
mov
rclb
popa
jl
idivb
push
xlat
sbb
movsb
in
mov
fisubl
stos
inc
sbb
jle
hlt
mov
mov
adc
jmp
mov
push
adc
mov
retw
mov
dec
pop
int3
insl
leave
xchg
pop
and
inc
jb
sbb
add
xchg
jo
pushf
jle
dec
out
adc
lods
ss
or
inc
mov
jp
inc
rclb
fidivl
bound
push
dec
lcall
push
jl
jmp
nop
push
xchg
mov
inc
pop
jl
xor
inc
lods
cmp
je
loop
push
hlt
xlat
push
ret
ljmp
daa
roll
xchg
pushf
cmpsb
mov
pop
jno
dec
in
adc
cld
xchg
shl
push
cmp
lds
push
test
adc
push
fisubrl
inc
push
in
stc
push
test
and
dec
pop
push
push
and
ljmp
dec
cmp
dec
jns
data16
sbb
clc
add
mov
divl
add
jae
xchg
add
cmpb
std
sbb
dec
sbb
repnz
lock
or
inc
cwtl
push
mov
lock
sahf
xchg
fwait
gs
jbe
adc
sti
xchg
fistpl
pop
outsb
push
sbb
mov
cwtl
stc
dec
adc
inc
jae
lods
int
mov
pop
and
cwtl
jl
enter
daa
outsb
jbe
jp
pop
dec
xor
mov
aad
cmp
mov
aam
dec
or
jl
pop
in
negl
dec
inc
jmp
jbe
rcr
shl
xchg
sub
ret
aad
mov
or
pop
pop
sub
adc
pop
jne
jge
pop
ror
dec
mov
or
orb
jns
nop
sub
repz
call
adc
cmp
loope
cmpl
nop
sub
and
xchg
stos
in
jbe
push
jp
mov
xor
shll
xor
addr16
arpl
dec
mov
add
xor
inc
loopne
and
xchg
idivl
pop
stos
stc
cmc
and
cmpb
mov
xor
fs
pop
incl
bound
addr16
fs
mov
jmp
add
bound
in
mov
and
mov
jmp
fldt
cmpsl
dec
out
mov
addr16
fcompl
pop
fisubrs
ds
jbe
jg
repnz
stos
dec
or
lea
movsl
out
in
or
add
jg
sbb
sbb
inc
sbb
sub
outsb
daa
xchg
test
add
fadds
adc
outsl
xor
aaa
pop
pop
jne
sbb
xchg
scas
jns
repz
lea
xchg
xor
adc
scas
lahf
addr16
fidivrs
aaa
add
pop
lock
daa
ds
push
or
dec
mov
jne
jp
adc
cltd
push
cltd
add
fnstcw
xor
or
jo
dec
adc
iret
sub
mov
add
push
not
pop
ds
dec
call
inc
lcall
test
cmp
inc
add
mov
cwtl
jge
pop
movsb
pop
pop
addr16
rcl
add
ret
repz
or
mov
mov
push
pop
or
mov
jo
enter
sbb
ret
jnp
adc
jl
mov
insl
or
add
adc
pop
push
sarl
enter
push
adc
cmpsl
dec
mov
cmp
and
adc
jg
mov
push
arpl
adc
ljmp
mov
push
xchg
call
mov
jnp
mov
add
or
outsb
mov
pop
jb
add
xor
in
pop
cli
mov
mov
push
xor
mov
sbb
scas
jecxz
inc
and
iret
pop
jno
mov
ss
mov
jno
adc
dec
in
mov
ds
ja
cmc
sub
cmp
push
sub
mov
inc
xchg
inc
cmp
ficoml
mov
lret
dec
mov
in
xor
pushf
jmp
cmpsb
lock
mov
ret
mov
dec
jbe
push
pop
xor
or
sbb
ljmp
xrelease
fbstp
inc
mov
adc
xchg
inc
jmp
out
je
je
cwtl
pop
sarb
cmp
test
push
hlt
aam
xchg
pop
or
xor
lret
movsb
fdivrl
and
stc
xchg
mov
xchg
jb
mov
push
add
xchg
pop
ljmp
pop
fnstsw
inc
pop
adc
xor
leave
andb
clc
jge
andl
pop
sub
mov
cmp
lcall
into
lds
mov
testl
ror
xor
jp
jecxz
mov
sbb
lds
cmp
mov
cmp
sarb
sbb
inc
add
and
inc
pop
and
stos
dec
rcrb
dec
lfs
push
ss
stc
sti
lret
push
mov
jecxz
lds
inc
test
sbb
out
data16
jns
int3
outsb
stos
jne
test
jp
stos
add
dec
jns
sbb
imul
or
lods
dec
pop
xor
cmp
cltd
mov
lea
jnp
imul
inc
xchg
mov
iret
mov
data16
fadd
push
add
push
hlt
sahf
adc
mov
jno
gs
and
cmp
add
je
mov
mov
stos
fadd
pusha
add
addr16
jnp
jle
stos
fisttpl
xchg
fcomps
stos
cmp
adc
sub
push
std
sbb
popf
sbb
push
adc
push
xor
fprem1
mov
push
or
es
ss
popf
outsl
dec
sahf
rclb
adc
out
push
test
fwait
aam
mov
xor
mov
push
pop
jl
scas
jnp
test
cmp
add
cmp
in
sbb
mov
mov
fistps
stc
lcall
sub
shlb
xchg
out
adc
xor
dec
jg
mov
sbb
xchg
std
into
nop
iret
xchg
mov
mov
dec
jne
xchg
add
adc
or
sbb
or
or
addr16
xchg
fwait
push
ss
adc
or
sub
sub
lods
insb
sti
outsl
loope
in
mov
push
jl
and
shll
outsl
mov
dec
sub
inc
fcmovu
bound
clc
aad
dec
and
pop
outsb
imul
xchg
loopne,pt
fsts
sub
push
sbb
rcr
data16
cmp
xor
jbe
dec
in
add
fcomip
ja
fdivrs
lods
cmp
add
dec
cmc
jno
ljmp
sbb
insl
cmpsl
push
fs
adc
into
add
pushf
adc
fistps
fisubs
xor
popf
movsl
repz
cmpsl
lahf
push
mov
xchg
and
sub
fdiv
in
lea
cwtl
repnz
ds
mov
ret
and
mov
xchg
pusha
aam
dec
decb
xchg
inc
lods
ljmp
rorl
popf
and
cmpsl
xor
or
xchg
popf
inc
xchg
movsl
jb
in
fcompl
inc
add
aad
mov
push
xchg
test
dec
push
or
inc
insl
push
push
rcrb
pop
orl
shlb
xchg
xor
push
je
shrb
lcall
cmpsb
cwtl
ficoml
stos
int3
out
lock
fstl
ret
inc
sub
adc
push
cmpl
jmp
dec
addr16
xchg
iret
push
cmp
xchg
out
popl
dec
or
push
and
mov
or
push
or
stos
dec
adc
lcall
xchg
fcoms
pop
dec
frstor
push
xchg
or
fistpll
or
xchg
push
imul
push
jnp
jecxz
lods
push
sub
cmp
mov
add
ret
dec
sbb
or
bound
hlt
push
push
xchg
in
in
inc
and
lahf
push
adc
lcall
push
add
dec
ljmp
movsb
inc
nop
sub
sbbb
adc
andb
push
pushf
push
ss
fsubl
and
in
mov
mov
adc
push
mov
jmp
dec
xchg
jbe
pop
and
jg
mull
pop
movsb
in
stos
push
shrl
lods
dec
push
jge
les
mov
je
mov
push
sub
and
xlat
es
lret
push
jns
cs
cld
iret
sbbl
adc
and
mov
push
movsl
adc
repnz
dec
sbb
fdivrl
jnp
stc
jmp
mov
mov
mov
scas
loop
test
fwait
shlb
jb
or
pop
inc
add
add
cmp
jmp
jns
aad
repnz
jge
sbb
bound
cwtl
sub
jno
push
hlt
faddl
pop
outsl
add
cmp
add
iret
mov
ss
bound
add
pop
cmp
xchg
inc
imull
pop
pop
jge
push
mov
inc
jle
out
xorl
outsb
movb
fstpl
pop
shlb
xor
shll
xor
pop
loopne
loope
and
adc
roll
imul
adc
jle
cmp
xchg
fisttps
sar
xor
pop
dec
sub
mov
daa
aas
inc
adc
fists
sub
cmc
movsb
cmp
sub
aaa
imul
cmp
xor
out
pop
cli
push
shl
add
add
ljmp
fistl
push
shll
mov
mov
frndint
mov
jp
imul
adc
cltd
int
ljmp
jle
iret
adc
dec
add
in
ja
jo
pop
ss
lock
arpl
dec
int
int
inc
or
test
ret
mov
daa
sub
sub
arpl
test
pop
adc
orb
into
inc
ss
push
sub
insl
push
mov
or
mov
xchg
out
imul
lea
xchg
out
lahf
cld
add
std
andl
ror
mov
and
out
xchg
stos
repnz
ficoms
popf
sbb
cmc
into
loope
xor
xchg
or
sub
rcrl
insb
incl
push
xor
jb
cmp
clc
sub
ljmp
mov
dec
jno
mov
sub
aad
ror
stos
insl
xchg
cmp
icebp
shrl
mov
insl
fisubs
cmp
loop
scas
sti
ljmp
shll
leave
andl
pop
lock
testb
pop
mov
or
dec
mov
ljmp
sub
int3
push
xchg
ja
push
in
popf
push
stos
or
pop
inc
into
movsl
or
clc
inc
fsubl
dec
out
adc
rcrb
es
sbb
push
lret
cmp
int
mov
imulb
loope
ja
sub
or
cmp
imul
push
sub
jo
xchg
inc
lods
out
push
mov
lret
cltd
jne
bound
arpl
pusha
or
nop
xor
ljmp
mov
filds
lret
mov
test
inc
jne
pop
xchg
fwait
jae
iret
or
scas
jg
pop
xchg
or
adc
in
cld
cs
mov
into
stc
add
loop
jne
and
push
or
or
xchg
jmp
or
xchg
hlt
fidivs
in
fcmovne
adc
in
imul
mov
cmp
rcr
cld
cmp
andl
sbb
adc
fwait
jne
xchg
xor
sbb
cmp
clc
mov
nop
push
jmp
push
pop
push
sbb
cmp
ljmp
sub
mov
dec
or
fistpll
add
rep
call
imul
orb
les
xor
sbb
in
inc
popa
lret
add
pop
in
push
jnp
adc
ss
jecxz
icebp
movsb
inc
push
popa
out
loopne
popf
mov
ret
lahf
les
add
fdivs
jle
mov
adc
popf
iret
popf
push
lods
dec
lock
adc
sub
adc
ss
fstps
sarb
subb
sbb
jb
push
mov
int3
imul
rol
fiadds
mov
call
fdivrl
movsl
in
lahf
add
add
or
push
push
push
daa
ljmp
pop
mov
xor
outsl
jbe
jge
pop
adc
sahf
sbb
push
push
lret
mov
cmp
stc
xorl
ss
pushf
dec
stc
mov
rolb
in
mov
inc
push
test
add
aam
mov
in
sbb
mov
cmp
inc
decb
std
ds
lcall
sbb
push
ja
ja
loopne
leave
in
lret
push
add
push
std
lock
mov
jge
shr
sarl
cld
call
dec
push
arpl
xchg
jbe
ss
push
das
adc
popa
mov
mov
rorl
xchg
pop
imul
cmpsl
rcl
push
jp
mov
fwait
and
mov
movsb
xchg
insb
xchg
sub
mov
cmp
das
xor
dec
roll
sub
xor
dec
cmc
jl
mov
cli
xor
jecxz
js
out
arpl
sub
dec
dec
and
pusha
ds
dec
ss
repz
xorb
xor
xchg
insl
sbb
push
mov
pop
fldcw
sbb
fistps
ficoms
rcll
lret
xlat
and
fistl
pop
and
and
mov
sub
rol
push
or
jnp
dec
xchg
inc
push
icebp
push
fs
insb
das
addl
adc
sub
sti
gs
cwtl
xor
mov
add
movsl
adc
push
int3
clc
xor
pusha
test
in
xor
add
loopne
xchg
mov
lahf
pop
fsubrl
ds
imul
mov
push
addr16
add
clc
push
push
push
in
sbb
shll
cmpsl
sub
fistps
xor
push
xchg
sub
lcall
adc
push
lret
mov
filds
add
movsl
fisttps
dec
shlb
lods
sbb
shrb
pop
popf
cmp
mov
add
fwait
push
cmp
test
mov
std
int3
xchg
pop
shrl
addr16
nop
add
cld
int3
inc
pop
dec
inc
popa
popa
test
mov
int3
stos
adc
add
sub
fiaddl
sbb
outsl
mov
cs
outsb
push
rcll
jnp
addb
arpl
or
dec
fnstcw
dec
jb
cmovp
adc
xchg
sub
xor
outsb
adc
pop
pop
add
and
incb
dec
insb
add
pop
sbb
dec
pop
scas
xchg
shl
sar
stos
in
add
mov
fildll
mov
mov
push
arpl
mov
call
cld
cmp
jnp
or
leave
mull
push
inc
jo
inc
push
sub
lcall
cld
mov
sbb
fcoms
mov
cmp
insl
outsl
out
sbb
xor
and
sbb
mov
movsl
push
aaa
fwait
inc
pop
mov
and
fs
std
aad
subl
adc
push
mov
test
stos
cmp
pop
pop
adc
jle
and
push
pop
lret
stc
add
frstor
out
mov
scas
sbbb
inc
or
in
jne
les
nop
cltd
call
dec
notl
mov
fstpt
dec
jno
xchg
or
mov
xlat
mov
xchg
roll
nop
je
testl
loope
outsb
mov
lret
jecxz
shlb
push
into
fwait
xchg
mov
push
in
or
xor
fnstenv
xorl
pop
mov
imul
enter
cmp
imul
mov
pop
push
dec
sbbb
int3
cmpsl
popl
outsl
xlat
out
pop
push
xchg
mov
roll
xchg
xchg
or
imul
jno
ud0
cmp
mov
out
fistpl
adc
inc
add
xchg
nop
repnz
clc
addr16
loope
data16
sub
inc
and
or
loop
push
cmp
push
clc
pop
cltd
jg
bound
lds
cmpsb
ss
sbb
cli
mov
and
cmp
addr16
psubq
int3
xor
fildl
or
loopne
sarb
mov
repnz
sbb
xchg
fwait
push
ret
test
xchg
decb
pop
adc
cld
and
jo
fisttpl
jge
adc
mov
popa
pop
mov
mov
pop
std
xchg
mov
daa
bnd
sub
ja
ss
sbb
pushf
roll
iret
and
jg
push
mov
movsl
push
mov
mov
mov
dec
inc
mov
in
loop
mov
popl
jle
push
cmp
or
movsl
hlt
lock
sbb
repz
sub
insb
sub
cmp
jb
jp
mov
aas
mov
sub
cmc
out
sub
loop
out
gs
fxtract
sbb
push
push
repz
pop
pop
sbb
jo
popa
rcl
das
call
fwait
push
inc
or
lods
jns
es
hlt
inc
inc
push
adc
setbe
mov
aaa
inc
cld
xor
xor
cltd
or
lea
mov
mov
xchg
test
popf
fs
xor
jmp
inc
outsb
xor
sub
xor
cmp
loop
mov
pop
or
push
inc
and
sbb
fdivs
pop
test
mov
mov
outsl
dec
and
sub
hlt
dec
mov
popf
dec
inc
inc
pop
jge
into
int
add
dec
xor
mov
or
test
mov
inc
sub
int3
inc
hlt
xor
push
mov
xchg
insb
ss
mov
enter
rclb
sub
push
mov
xor
add
jl
or
add
mov
mov
hlt
insl
loop
filds
and
mov
mov
lds
xchg
mov
jnp
cmp
dec
icebp
xchg
js
inc
and
add
out
iret
adc
bound
movsb
out
jmp
and
daa
cmp
inc
mov
mov
fsts
jge
pop
pop
movsb
add
or
jle
pop
xchg
jg
jmp
fcoms
mov
rclb
in
adc
jns
out
icebp
movsb
mov
hlt
mov
je
and
iret
push
pop
xchg
mov
jecxz
fmul
scas
or
cmp
xor
fsts
inc
out
imul
test
mov
jns
inc
subb
and
into
xchg
cli
fcoms
sub
leave
cmp
sub
pop
les
loope
fmuls
jno
hlt
sbb
ss
cmp
pop
mov
pop
in
mov
or
mov
aas
iret
cltd
xchg
insb
add
pop
dec
sbb
push
nop
gs
and
int
test
imul
ljmp
cmp
shll
adc
stos
add
js
movsl
jb
jno
rclb
pop
call
lds
fisubrs
mov
pusha
mov
inc
sbb
xchg
or
fbstp
test
bound
add
clc
out
stos
in
fnstsw
movsb
lret
inc
push
scas
les
xchg
std
test
xor
cmp
movsl
das
xchg
gs
bound
dec
push
mov
xchg
lret
push
adc
push
pop
loopne
nop
js
mov
xchg
mov
shl
push
mov
push
xchg
inc
pop
loopne
jge
rcl
ret
mov
loope
lock
pop
and
dec
lahf
popa
aam
mov
clc
daa
sub
std
or
int3
pop
pop
push
loope
pop
fdivp
shlb
movsb
mov
repnz
xor
pop
add
fs
mov
dec
rorl
adc
pop
outsb
test
cmp
ss
push
cmp
cmp
mov
in
scas
outsb
fs
addr16
lods
cmpsl
xchg
pop
mov
rolb
dec
lods
incb
push
and
pop
mov
mov
push
sahf
filds
stos
int3
xorl
xchg
sub
adc
popf
les
std
frndint
insl
cs
inc
insb
or
subl
bound
aad
rcrl
movsl
fdivr
movl
mov
dec
sub
jp
pop
in
movsl
add
pop
mov
shr
push
ds
jo
data16
frstor
mov
loopne
xchg
inc
test
and
in
in
stos
and
je
es
scas
mov
fs
roll
cli
sub
mov
and
rorb
sbb
mov
sub
add
pop
inc
mov
sub
es
push
lea
fcomps
call
std
inc
xorb
push
lcall
or
scas
ficoml
jp
or
push
sti
cmp
cmp
les
lock
sub
lahf
int
shlb
mov
jo
pop
int
lds
inc
fwait
cld
test
inc
inc
mov
setne
sub
and
mov
adc
repnz
xchg
jmp
das
dec
fwait
mov
jge
sub
nop
add
add
es
and
and
into
iret
std
jecxz
cmp
sub
fbld
jno
fsts
and
and
push
push
ja
push
dec
notb
push
sbb
dec
adc
js
pop
add
daa
mov
in
mov
dec
iret
outsb
pop
lock
lahf
les
outsb
and
daa
hlt
push
cmp
mov
imul
mov
mov
mov
movsb
nop
fs
lret
pushf
add
xor
lods
cli
add
pop
jo
scas
cltd
aas
aas
inc
movsl
mov
addr16
inc
dec
sahf
jecxz
sbb
adc
or
das
jns
ja
movsl
stos
rorb
mov
inc
pop
cmp
sub
xchg
push
dec
ja
cmp
jbe
and
fwait
add
mov
sub
insb
xchg
jno
xchg
iret
sbb
cltd
push
lea
mov
or
lcall
pop
popf
sahf
lret
sbb
adcb
pop
fwait
xchg
push
push
imul
ds
ret
aas
in
add
inc
add
jo
imul
clc
and
fstl
push
fdivl
xchg
xor
or
mov
jg
jle
inc
cmp
push
inc
inc
stc
ret
clc
pop
add
xchg
xlat
subb
imul
push
das
enter
movsb
into
rcrb
and
int
aas
pop
adc
mov
js
bound
cmp
loope
jl
mov
stos
jns
shll
cmp
jmp
das
xchg
lods
mov
add
sbb
sbb
fdivs
cmp
lock
fimuls
pushf
jmp
cmp
pop
mov
iret
or
xor
cmp
mov
sti
shr
repz
test
shrl
dec
cmp
mov
sarl
mov
test
testl
inc
pop
mov
mov
sarb
sub
cmc
xchg
fcompl
cmp
jae
fsubrs
iret
cmpsl
pop
ss
pop
fucomp
push
arpl
mov
mov
pop
dec
or
mov
mov
dec
loope
pop
test
mov
and
cmp
pop
adc
jno
mov
xorb
int3
sbb
push
ljmp
or
mov
xchg
inc
adc
mov
xorl
cmp
mov
cmp
imul
cmp
jns
cwtl
inc
in
cmpsl
jbe
aas
movsl
pop
in
ljmp
or
mov
and
imul
xchg
cs
inc
sub
jecxz
cmp
push
cmp
or
mov
push
adc
outsl
jg
shl
mov
test
mov
inc
xor
ja
addr16
jno
cmp
lea
pop
push
popl
scas
imull
inc
push
sub
mov
push
js
loopne
pop
jnp
insb
loope
jp
iret
jp
and
mov
xor
sbb
es
stc
or
enter
sub
jl
in
pop
enter
iret
stos
je
adc
pop
or
and
lods
dec
sub
jbe
ds
cmp
lahf
ror
or
adc
xchg
xchg
push
idivb
insl
mul
fxch
mov
cmp
sub
and
mov
mov
cltd
jecxz
lock
insl
sbb
xlat
outsb
mov
in
insb
in
xor
lds
in
aaa
pushw
sub
loope,pt
and
pop
sarb
mov
cmp
je
lcall
movsl
mov
mov
xchg
movsl
fistps
jbe
jno
lcall
inc
sub
arpl
pop
gs
and
int3
dec
sub
fs
in
sbb
scas
je
and
in
imul
push
jg
mov
imulb
ret
test
xor
push
out
mov
add
dec
pop
lret
shrb
push
cmp
jl
leave
push
adc
movsl
leave
or
stos
ljmp
loopne
inc
or
jmp
inc
dec
lcall
loopne
adc
js
pop
ret
and
out
dec
cmp
pop
lret
xchg
les
dec
mov
sub
adc
inc
xor
inc
jnp
ret
cmp
fists
xchg
leave
popa
jbe
mov
adc
cmp
pop
push
pop
sub
push
xchg
mov
mov
or
add
sahf
xchg
sub
sbb
popf
mov
pop
or
sub
aad
jmp
dec
or
dec
mov
and
sbb
shll
jns
push
jns
insb
jb
push
cwtl
xchg
out
lret
pop
sti
jo
cmpl
sub
popf
pushf
adc
in
adc
mov
dec
cmp
roll
leave
mov
lahf
lret
mov
loop
shl
jle
sbb
or
ret
jne
push
add
cld
mov
lods
rorl
mov
js
lea
push
pop
jbe
add
mov
push
nop
icebp
outsb
sub
and
icebp
ds
add
or
xchg
pop
mov
ja
xlat
pushf
in
xchg
xor
and
sub
adc
jmp
fnsave
pusha
sub
test
xchg
mov
test
out
dec
movb
int
frstor
jb
jnp
push
cwtl
in
stc
addr16
or
and
jecxz
mov
push
sub
inc
jo
mov
rcl
lds
lret
push
jnp
xor
dec
xlat
sub
inc
movsl
cmp
loopne
xor
sub
cmp
xchg
clc
pop
push
adc
iret
repnz
and
out
or
mov
pop
and
mov
cmp
xor
fnstsw
push
push
push
shll
mov
rcr
aad
add
orl
addr16
insl
ljmp
cs
lret
or
or
cli
sub
je
sbb
push
loopne
insl
cmp
hlt
mov
xchg
in
insb
xchg
inc
cs
rclb
inc
jbe
mov
xchg
push
inc
jae
mov
loopne
pop
out
mov
stos
pop
dec
ret
mov
out
negb
incl
push
sti
push
inc
cmp
fwait
loop
cmpl
xor
repz
jo
mov
ret
cld
js
rclb
outsb
dec
push
xchg
pop
nop
adc
out
ljmp
sbb
or
nop
loop
mov
jl
shrb
adc
push
data16
sub
lcall
movsb
notl
sbb
mov
mov
jge
dec
data16
sub
mov
lods
nop
sub
cmp
cmp
cs
pop
ficompl
mov
add
lods
sbbb
bound
push
push
mov
jae
and
xorl
rolb
imull
mov
jnp
add
xchg
es
ret
test
add
lea
cmpsb
shlb
les
inc
loope
add
daa
dec
dec
push
rorb
dec
push
insl
or
aam
lds
and
jg
leave
sarl
xor
addb
fisubl
xorl
test
push
pop
xchg
and
dec
ret
sbb
lock
dec
call
loop
sub
adc
push
xor
jge
jmp
bsr
push
jg
scas
push
push
test
ficompl
jmp
shll
call
cmp
mov
add
or
rorl
mov
mov
push
mov
inc
mov
mov
mov
xor
cmpsl
aam
cmp
lea
rorl
imul
jo
mov
aas
jl
xchg
repz
dec
add
out
or
in
shr
je
jo
lahf
mov
inc
lcall
data16
pop
and
sti
mov
lods
outsl
cmpsl
xchg
fisttps
cmpsb
adc
lock
enter
dec
or
sub
push
add
jb
and
push
mov
hlt
adc
ret
rcll
push
aad
hlt
and
lret
stos
mov
out
nop
mul
sbb
mov
jns
repz
mov
cwtl
xchg
push
mov
inc
icebp
cli
and
ja
test
jge
or
dec
loope
xchg
cld
idiv
push
cwtl
stc
cmc
xchg
mov
lahf
inc
pop
ret
mov
ds
stc
mov
hlt
cmp
sbb
inc
shll
inc
lahf
inc
mov
jle
sub
das
inc
xchg
sahf
std
pop
xlat
push
jmp
les
rcrb
sti
fiadds
mov
push
lods
pop
testl
push
pop
push
xor
popa
xor
jb
dec
pusha
jg
dec
cltd
jmp
out
mov
movsl
push
xor
cltd
jmp
xor
pop
mov
lods
fisubs
jmp
dec
pop
cmp
jge
mov
xchg
jnp
aad
jecxz
and
sbb
pop
subl
cmp
outsl
stc
rolb
call
int3
dec
mov
inc
pop
sub
test
xor
xchg
outsb
xor
iret
subb
xchg
xchg
dec
sti
ficomps
repz
lret
jmp
cwtl
cmpsb
mov
xchg
add
cmpsb
dec
flds
push
xchg
cmp
xor
loop
xor
fidivrl
adc
loope
jae
jge
cmpsb
xor
xor
adc
push
push
fsts
into
sbb
xlat
out
cli
ss
ljmp
adc
xchg
outsb
or
out
ds
stc
subl
test
pop
cmpsb
or
add
fmul
popf
pop
into
jne
push
mov
jnp
cmp
xchg
flds
gs
mov
xor
pop
fisubs
faddl
jnp
fildl
jno
mov
or
lea
addr16
cltd
push
jno
sub
scas
cmp
cmp
jnp
push
mov
jp
notl
cli
fdivl
fwait
cmp
mov
and
dec
lret
xchg
imul
je
cmc
xchg
inc
xchg
insb
mov
stos
loop
dec
push
pop
push
out
mov
scas
or
ss
adc
les
stos
sub
mov
mov
loopne
mov
mov
and
movb
loop
popa
scas
rorl
xchg
test
es
neg
out
cmpb
mov
push
lods
outsl
add
rorl
sbb
mov
mov
mov
jl
scas
dec
xchg
aad
imul
icebp
sahf
xchg
testb
dec
rclb
cmp
jecxz
pop
aad
and
bound
jbe
mov
push
adc
iret
leave
insb
aaa
push
int
push
dec
pop
mov
aaa
xor
cs
gs
xchg
test
sub
xchg
cmp
cmp
pop
sbb
into
and
popf
arpl
dec
sbb
aam
fwait
in
and
outsb
pop
mov
jne
fwait
sub
sub
push
mov
js
andl
mov
mov
fs
in
sarl
loopw
cmp
cltd
subb
pop
rcl
cs
jno
mov
sub
jecxz
push
or
jl
xor
pop
repz
lds
out
push
cltd
ret
je
xlat
ret
jne
imul
dec
xor
inc
gs
pop
mov
pusha
sbb
xor
ret
xor
push
test
mov
pop
negb
decb
ds
xchg
xchg
jns
fstpt
and
push
push
insb
cmpsb
lods
addr16
shlb
ss
or
jp
push
imul
cmp
pop
lods
add
cmp
aad
imul
mov
jae
daa
or
sub
mov
cmp
fiaddl
rcrl
jo
je
pop
xchg
lret
jnp
cmpsb
out
hlt
mov
movsb
test
leave
shll
das
inc
pand
jo
cmp
cli
or
mov
lds
mov
xchg
out
adc
je
or
mov
in
pop
imul
dec
lds
jb
outsb
xchg
inc
xor
lahf
leave
inc
iret
push
push
dec
xor
test
sbb
xchg
out
popa
lods
xchg
jle
mov
add
js
fisttps
fnstenv
push
js
insb
sti
popf
xchg
das
mov
or
mov
aas
sub
mov
repnz
lds
dec
mov
mov
sbb
push
stos
jns
lea
sbb
jge
mov
add
ss
cmp
and
lods
das
pop
jge
jl
dec
sub
xlat
dec
and
xlat
pushf
or
inc
shrb
in
push
push
mov
pop
cmp
test
out
mov
jmp
xchg
in
sub
ret
adc
scas
repz
jns
ss
test
jb
cli
adc
addr16
mov
or
jb
jbe
pop
push
fwait
out
in
aam
push
in
adc
mov
and
xor
sbb
into
addr16
out
in
subl
cs
lods
jns
arpl
sub
out
jg
aad
sub
xor
adc
push
pop
or
fldcw
mov
inc
jg
push
into
add
ret
mov
in
adc
jo
xor
push
jecxz
or
repnz
ss
pop
sub
insl
add
mov
lds
mov
cmpsl
int3
push
mov
jae
pop
inc
in
xor
ror
loopne
xor
movsl
pop
xor
xchg
cwtl
imul
aaa
neg
xor
pop
leave
jl
cmc
jle
cmp
icebp
mov
or
cld
mov
mov
fsubrp
inc
dec
gs
jle
movsl
pop
add
cmp
mov
push
xor
jae
adc
jo
mov
mov
push
mov
cmp
iret
dec
insb
sub
push
push
mov
cmp
lea
loopne
js
jecxz
outsl
jne
jmp
mov
lahf
int
pop
popf
mov
outsl
sbb
ds
jne
call
aad
xchg
sbb
and
lret
lret
inc
add
adc
rcrb
or
mov
movl
and
fs
shl
xor
lret
dec
out
cmc
fwait
xchg
mov
push
xchg
je
lret
jg
jg
jecxz
cwtl
pop
imul
xor
dec
scas
bound
outsl
push
testb
icebp
pop
sub
mov
rcrl
fsubs
cmp
test
jo
aam
push
sub
or
addr16
inc
les
jne
or
sub
pop
repnz
mov
gs
jmp
cwtl
mov
jmp
push
cmpsb
ret
jecxz
dec
jo
sbb
jmp
sbb
add
fisttpll
mov
stc
pop
mov
cmpsl
xor
jg
or
dec
sub
dec
mov
push
mov
sub
sub
push
adc
aam
lret
icebp
push
insb
pusha
cwtl
scas
sub
cmp
inc
jl
xchg
or
ljmp
cmp
js
push
xor
xchg
pop
lahf
fstpt
xorb
sahf
pop
mov
sub
push
imul
dec
enter
cmp
xor
mov
jae
lret
mov
ret
and
or
arpl
shl
clc
inc
test
jbe
insb
iret
push
xlat
mov
pop
sbb
push
xchg
in
sub
mov
xor
or
add
xor
iret
cwtl
clc
pop
out
jg
movb
aam
aas
jbe
push
scas
sti
xchg
xchg
lret
out
mov
jl
push
inc
push
aad
sbb
test
ss
adc
rclb
nop
mov
es
mov
das
movsb
sub
xchg
fsubs
jmp
ret
pop
je
xor
push
add
push
jne
adc
mov
dec
xor
lock
sar
dec
shld
pop
xchg
add
xor
jl
xor
cmc
std
insl
idiv
std
sub
xor
mov
bound
hlt
push
test
cwtl
mov
cmpsl
inc
fidivrl
pop
xor
xchg
sub
loop
sbb
mov
pushf
push
adc
loop
mov
inc
enter
inc
mov
ss
lea
sub
mov
pop
sub
push
push
pop
shlb
cmc
fdivl
mov
insl
dec
push
push
pop
pop
xchg
sub
jo
call
sub
mov
sub
js
sub
cmp
fwait
jae
mov
fdivrl
das
ss
pop
push
mov
mov
jp
xor
fstpt
push
pop
pop
test
dec
faddl
adc
repnz
adc
icebp
mov
mov
loop
adc
or
xlat
cmpsl
addr16
aas
and
jp
sub
mov
sarl
cwtl
out
popa
dec
lock
push
std
xchg
cmp
outsl
popf
mov
pop
into
gs
pop
add
ds
leave
scas
outsb
std
popa
or
cltd
mov
xchg
call
lahf
cmpsb
xchg
mov
fpatan
fimull
fwait
repnz
pop
and
pop
repnz
stc
outsl
bound
cwtl
cmp
push
add
lds
into
cwtl
mov
push
cs
jle
rclb
call
xor
aaa
cmp
xor
xchg
xchg
pop
mov
leave
fiaddl
inc
addr16
outsb
jl
jno
mov
xor
jp
lods
xchg
inc
rcrl
loop
xor
icebp
loope
mov
mov
push
sbb
pushf
repnz
mov
mov
mov
inc
xor
iret
xchg
sti
lea
dec
fisttpl
sarb
jnp
pop
test
ja
enter
test
lcall
pop
sbb
and
sti
cwtl
stos
or
lret
dec
sahf
rcll
shll
frstor
into
jl
shl
fistl
fwait
jns
roll
pusha
adc
xchg
mov
test
inc
mov
cmp
xchg
neg
mov
xchg
repnz
clc
push
or
movsb
std
xor
pop
enter
mov
test
sbb
dec
xchg
add
push
repnz
ljmp
mov
aad
jg
mov
loopne
cltd
cmpl
mov
cs
loop
outsl
lock
xchg
movsl
lods
mov
into
dec
adc
dec
inc
daa
mov
sbb
inc
or
movsl
incl
add
add
scas
and
push
mov
fdivrl
int3
lock
out
pop
popf
movsb
jecxz
xor
loope
mov
inc
mov
mull
xor
sbb
sbb
in
fldenv
ds
out
adc
das
jo
out
std
cmc
mov
xor
ljmp
nop
shlb
inc
jb
js
add
test
cmpsl
inc
inc
mov
pop
lods
jb
jg
cmp
iret
insl
in
jp
cmpsl
mov
xchg
dec
mov
sbb
add
add
je
inc
mov
mov
adc
in
mov
pop
fildll
lcall
iret
jno
jae
mov
adc
dec
add
add
jmp
adcb
sub
call
vpsubd
sahf
xor
jb
push
xlat
cmp
adc
pop
pop
mov
dec
out
dec
jmp
lods
xlat
dec
add
jle
testl
push
push
sbb
adc
or
sti
xchg
xor
cld
mov
jmp
xchg
and
dec
jmp
fwait
adc
fbld
test
mov
mov
lods
icebp
dec
sbb
movsl
lods
pop
xor
es
dec
popa
dec
xchg
mov
jp
sub
mov
mov
fucompp
imul
mov
pop
fwait
cmp
ret
outsb
add
int
in
mov
cmp
insb
mov
fwait
jg
imul
xor
jo
cmc
lods
mov
dec
in
mov
cmpsb
out
dec
or
jnp
push
cmp
sub
adc
in
popf
and
fnstcw
fcmove
xor
mov
cmc
push
loopne
sbbb
pop
and
jo
fcompp
dec
mov
mov
outsb
pop
dec
outsb
cmp
xchg
push
push
nop
jns
insl
pop
fisubrl
lret
aas
subb
and
imul
cmp
cs
imul
rolb
inc
dec
mov
daa
cmc
in
xchg
lret
xor
jg
jg
jg
fs
or
scas
or
dec
pminub
gs
negb
pop
or
jo
xchg
ja
push
xchg
and
daa
pop
sbb
add
mov
jg
movsl
mov
mov
inc
inc
aas
lret
repnz
icebp
jecxz
and
dec
jbe
jmp
ja
sbb
or
mov
repz
gs
xchg
es
inc
mov
lret
ja
fwait
adc
shr
xor
fbstp
push
sub
and
fistps
imulb
mov
les
mov
dec
cmp
je
dec
sbb
popa
lock
sbb
call
sbb
pop
pop
jns
leave
push
jo
leave
adc
cld
loopne
fistps
sbb
lds
xchg
clc
loope
outsb
testb
cli
pop
add
js
mov
mov
aam
sbb
fnsave
xchg
out
addr16
pushf
and
mov
cmc
push
lods
cmp
fcompl
arpl
cli
pop
push
loop
cld
imul
cmp
js
jnp
mov
clc
inc
xor
lods
xchg
lahf
stos
mov
insb
or
shll
adc
add
xor
jno
das
inc
mov
les
pop
sbb
enter
push
dec
aam
js
iret
mov
xchg
test
fstpt
dec
xchg
pop
mov
adc
aaa
mull
cmp
leave
mov
push
repnz
mov
test
add
sub
fcomps
imul
cmp
and
and
or
in
jl
adcl
xor
add
movsb
mov
add
ret
sub
mov
xchg
out
cmp
pushf
loop
jl
scas
iret
mov
jmp
and
jnp
pop
cli
pop
mov
les
fwait
dec
xor
fcompl
pushf
jmp
sbb
out
jb
fcmovnbe
sahf
dec
jmp
pop
testb
jg
out
aas
mov
cmp
mov
divb
popf
bound
jnp
inc
jl
cli
sbb
sub
dec
mov
and
xchg
inc
shl
jp
mov
sti
out
dec
pop
ljmp
mov
int3
cmpsl
jp
adcb
lods
rclb
lods
sbb
adc
sbb
cwtl
jb
mul
sbb
inc
xchg
sbb
popf
daa
aad
pusha
sbb
add
nop
repnz
pushf
das
jb
popa
mov
lret
dec
and
xlat
movhps
adc
stc
std
imul
ljmp
dec
jp
xchg
jg
jge
and
divb
nop
pop
dec
popf
pop
sub
sub
cmpsl
in
es
mov
into
enter
popa
jno
fsubp
inc
mov
psubb
fcmovb
xor
xchg
lret
outsb
dec
icebp
ds
xor
ja
insb
stos
aad
imul
insl
loope
std
adc
out
cmpsb
push
mov
fcomp
cmpsl
jne
xor
jns
fcos
pop
scas
dec
mov
call
test
hlt
in
fldl
in
jae
add
xchg
fwait
pop
or
mov
movsb
sahf
enter
xorl
push
push
inc
outsb
xor
std
sahf
pop
insl
lock
outsb
sub
shlb
push
dec
cltd
aaa
cmpsl
out
cmp
sbb
dec
sahf
pop
loope
fbstp
mov
mov
rclb
addr16
cmp
lahf
add
xor
aad
dec
add
call
push
shll
negl
scas
pop
sarb
inc
sahf
aas
out
fwait
orb
adc
shll
push
mov
shr
leave
jno
pop
cmovne
stos
xchg
loop
lret
cmp
mov
xor
test
sub
int
insl
cmc
xchg
mov
sti
xor
xchg
pop
negl
push
int3
cld
loop
mov
out
test
loope
adc
in
stos
pop
mov
sti
out
sub
pushf
cwtl
inc
mov
jl
add
jne
lods
push
sub
enter
test
lret
lea
cwtl
cmp
pop
daa
mov
gs
sbb
inc
push
mov
and
scas
popa
in
mov
test
ror
and
and
shr
test
imul
jnp
jl
popf
jo
mov
repnz
sarl
sti
das
inc
scas
mov
xchg
loopne
fidivrs
xchg
out
xchg
stos
das
and
je
lcall
ror
stos
pop
cli
mov
lahf
cld
xchg
cmpsl
scas
js
nop
mov
sbb
xchg
mov
jbe
dec
pop
cmp
add
jp
andb
pop
mov
dec
fs
jl
cs
or
stc
xchg
insb
xor
fsubs
sub
scas
dec
pusha
inc
add
sbb
mov
mov
dec
in
fstcw
jmp
jmp
jb
test
inc
je
and
xchg
jnp
lret
and
or
repnz
movsl
inc
and
cmp
insl
dec
sbb
cmc
sbbb
push
arpl
xor
xor
inc
lret
out
shl
rcrb
sub
ss
jnp
ja
fwait
xor
xchg
jg
fmull
incl
jo
rcl
mov
lods
adc
jge
std
and
xchg
je
sbb
fs
repnz
xor
push
and
ret
aad
add
cmp
out
cld
push
fmull
or
mov
push
ret
push
pop
movb
test
mov
ds
imul
imull
push
or
dec
lcall
arpl
pusha
jae
loope
jle
and
pusha
dec
js
pop
mov
push
je
in
ss
mov
gs
gs
push
loopne
loope
lret
mov
and
mov
jne
push
mov
inc
les
cmp
jae
fucomi
adc
cs
repnz
arpl
push
pop
mov
ljmp
in
xchg
mov
cmp
loop
shlb
xchg
and
sbb
mov
adc
mov
lock
popa
inc
xchg
in
leave
mov
out
add
outsl
xchg
psubw
inc
mov
call
pop
cmc
dec
xorl
cmp
cmp
test
mov
cmp
adc
pushf
std
imul
or
sarb
jg
xor
inc
movsb
mov
mov
xchg
lods
test
and
jmp
pop
fbld
jl
mov
xchg
jbe
jecxz
sub
std
inc
jg
in
fisubrl
inc
sbb
out
cli
push
inc
cmp
cmpsb
mov
push
xchg
lods
push
add
lock
adc
sub
xchg
arpl
dec
jnp
jae
into
cwtl
es
outsl
sbb
shrb
int
je
loopne
mov
adc
fwait
jo
cmp
lock
cmpsl
jmp
mov
pop
sub
int3
push
sysenter
sub
xchg
jbe
fs
xlat
incb
add
pop
les
insl
mov
lahf
inc
lds
cmpsb
out
hlt
jg
and
mov
enter
add
call
push
test
pop
lods
lcall
popf
adc
and
scas
mov
pop
mov
xor
inc
pushf
movsl
andl
je
cmc
scas
push
imul
test
mov
xchg
mov
xchg
unpcklps
or
in
js
mov
inc
and
inc
ja
les
jmp
mov
push
xor
push
cmp
adc
mov
shrb
scas
jnp
lret
adc
or
jecxz
push
icebp
imul
stos
pop
outsb
arpl
leave
fs
enter
mov
add
mov
xlat
or
mov
sub
jae
stos
jbe
mov
mov
dec
sbb
jns
ftst
stos
adc
je
sub
sub
lods
sahf
and
mov
jns
test
xchg
push
push
adc
jns
mov
cmp
out
call
mov
pushf
arpl
or
popf
int
adc
push
push
add
or
adc
rorl
shr
jnp
into
shlb
shlb
xchg
es
lods
push
cs
xor
inc
or
std
sarl
repnz
inc
sbb
test
pop
sbb
jp
sbb
or
jne
or
pop
jb
xchg
or
fcompl
xor
push
loopne
arpl
loope
cmpsl
cmp
lea
ret
mov
cmpsl
fldl
call
movsb
or
adc
fs
hlt
call
xchg
imul
pushf
outsb
adc
lcall
mov
jne
cmpsb
out
pop
leave
shrb
and
jnp
push
xchg
pop
mov
cmp
sbb
xor
hlt
scas
xorb
xor
jg
cmp
xchg
xor
cmpsb
aas
mov
xor
sahf
add
jo
aaa
cli
dec
psrad
jle
mov
jl
clc
arpl
mov
fwait
dec
cmpsl
dec
jns
xchg
and
cmp
call
je
scas
or
scas
add
lock
push
mov
inc
test
adc
dec
pushf
dec
test
inc
mov
lock
add
or
std
sub
fsubrl
lret
inc
or
or
dec
add
mov
ds
add
jnp
negb
add
jge
cmp
jmp
mov
fs
inc
mov
mov
lret
cmpsl
inc
xchg
pop
xchg
aad
mov
jge
xor
inc
and
mov
js
sarb
inc
pusha
ljmp
call
into
les
jne
sbb
xor
cld
cmp
push
xor
cmc
mov
add
push
jns
cmc
or
cmp
cs
cmp
or
jnp
daa
pusha
mov
es
sbb
inc
in
add
xor
adcl
int3
in
dec
das
cmpsl
insb
pop
lds
aam
cmp
sub
ljmp
ret
loope
mov
inc
fcomp
cli
popf
clc
adc
mov
movsb
lcall
mov
popa
mov
aam
outsl
cwtl
or
mov
test
and
cmp
xchg
cmp
shrb
dec
lret
icebp
in
push
sar
fimuls
xchg
ljmp
mov
aam
pusha
addr16
cltd
in
call
or
das
push
js
rcrb
xor
es
xlat
insl
push
loopne
push
fs
negl
fbstp
insb
or
inc
cwtl
cmp
adc
mov
decl
sti
mov
fiaddl
xorb
dec
pusha
addr16
cmp
adc
jmp
mov
cltd
mov
dec
xor
mov
pop
loop
mov
fwait
pop
fadds
dec
rcr
cld
pop
jl
inc
stos
jge
sub
xchg
int
pop
sti
push
mov
cmp
sub
pop
gs
scas
or
imul
flds
lahf
imul
and
inc
jge
push
inc
lret
imul
imul
ret
lret
cli
pop
add
lods
adc
jb
jl
add
ds
inc
shlb
pop
sbb
jg
pop
pop
lds
iret
sbb
sbb
imul
popa
push
or
sbb
mov
addb
mov
aaa
pop
push
inc
mov
mov
xchg
jmp
jnp
jo
fxch
mov
dec
or
lcall
inc
test
jl
sub
lahf
mov
daa
mov
loop
and
jbe
icebp
push
jno
pop
aam
in
pushl
stos
test
sbb
les
jmp
aas
lds
leave
lret
push
dec
imul
ja
in
aaa
sub
in
mov
enter
imul
lea
std
cmp
aad
enter
pop
ljmp
or
rclb
fdivrs
insl
outsl
adc
push
mov
movsb
loopne
leave
jle
mov
xor
sub
icebp
xor
insl
sbb
push
inc
or
jge
cmc
mov
sub
mov
clc
or
or
mov
mov
xor
or
push
shlb
fwait
cmpsl
cvttps2pi
adc
sub
xor
cmp
and
jno
sahf
fistl
mov
xchg
jbe
sarl
push
sub
lea
dec
nop
addl
inc
pop
rol
shll
fnsave
dec
adc
or
ljmp
fisttpl
push
int
cmpsl
mov
or
jl
and
lds
xchg
daa
das
dec
cli
or
loop
hlt
fisttpll
lret
out
scas
daa
outsb
xorl
hlt
test
cmp
pop
mov
aas
xor
orb
loope
cmc
jnp
pop
push
cmp
mov
mov
inc
cmp
jmp
add
mov
push
inc
adc
sub
andl
test
punpckhbw
sub
add
popf
fsubs
adc
data16
fidivrs
mov
out
aas
lret
adc
or
dec
aad
dec
clc
push
divb
pop
xlat
lods
js
lret
std
lahf
cmpsb
clc
inc
je
xchg
xchg
or
ljmp
es
imul
jbe
pop
faddp
push
cld
jle
and
cli
jmp
mov
mov
fidivrs
push
lcall
pop
mov
or
nop
pop
xlat
icebp
adc
test
adc
fisubl
xchg
mov
fisubs
lock
sub
lret
lcall
es
pop
xchg
dec
or
mov
subl
xor
push
xchg
or
push
or
jg
aam
repnz
lret
out
lret
mov
rcll
cs
aad
jmp
and
nop
inc
and
add
fadds
in
inc
inc
inc
pop
fcmovu
xor
jge
clc
bound
clc
inc
xchg
inc
sub
imull
fsubrl
ds
xchg
sub
mov
inc
jmp
int
jnp
pop
dec
mov
mov
insb
mov
sub
and
cld
inc
xor
je
push
inc
sbb
js
es
cmp
mov
cs
push
dec
pop
pop
mov
ds
lock
or
loop
subb
aaa
popa
push
stos
inc
and
movsb
int
out
repz
lret
adc
dec
call
mov
add
stos
shr
cmc
pop
in
and
mov
add
add
out
or
jge
out
cli
inc
cmpsl
incb
mov
lods
ljmp
scas
jae
xor
inc
push
ja
adc
cmp
ret
cli
add
in
adc
popf
scas
aam
out
std
or
insb
adc
lods
xchg
int
cmp
inc
stos
mov
hlt
insb
or
mov
cmc
or
xchg
not
pop
push
mov
push
inc
sti
xchg
lcall
pop
and
inc
xchg
dec
fstpl
cmp
lret
sbb
xchg
adc
popf
xchg
xor
sbb
hlt
in
std
in
mov
in
outsl
dec
jne
and
shll
es
lods
fdivrl
cmp
mov
arpl
out
fsubs
fmull
outsb
lock
les
divl
cmp
xor
cmp
cmp
iret
movl
cmpsb
sbb
xchg
pop
hlt
adc
out
inc
sbb
fsubrl
ljmp
test
aas
push
cld
testb
mov
rclb
dec
push
adc
lret
fbstp
in
mov
or
xor
cwtl
add
jle
addb
aam
out
cmc
rolb
lock
xchg
out
xchg
cmp
adc
jno
jnp
aad
lret
adc
pop
jbe
xchg
push
je
jecxz
mov
and
mov
clc
rcll
sub
fdivs
push
sub
aaa
leave
in
and
outsl
addr16
cmpsb
nop
push
nop
cs
pushf
xchg
mov
cmp
jp
mov
pop
jle
into
dec
aaa
outsl
test
stc
fbld
inc
mov
les
pop
inc
rcll
dec
mov
movsb
cmp
scas
lods
mov
js
add
inc
mov
xchg
xchg
rcll
sbb
inc
mov
in
push
push
xor
lret
jge
adc
xchg
aam
lods
dec
push
xlat
loopne
movsl
cs
and
bound
jmp
and
xor
sti
jge
push
loope
pop
popa
test
movsb
push
into
aam
shll
add
or
or
sub
movsb
xor
push
mov
std
arpl
pop
lods
leave
imul
sbb
mov
aam
and
lret
addr16
cmp
inc
cli
jnp
cmp
loopne
les
jp
js
in
mov
data16
pop
gs
mov
cmp
pop
or
rcll
leave
jno
outsb
adc
lods
xchg
fldl
stos
inc
push
xorl
scas
out
data16
pop
aaa
dec
sub
arpl
stos
enter
test
inc
bound
iret
fnsave
push
jne
and
cmp
xlat
pop
icebp
hlt
push
add
mov
out
cmp
mov
int3
pusha
xchg
js
rcl
aaa
cli
cmpsb
out
jge
cmpsl
cmpsb
inc
or
inc
sub
xchg
imul
repnz
xchg
into
push
std
cli
push
mov
lods
les
lcall
sbb
in
or
je
inc
shrl
push
out
loope
imul
daa
data16
in
fpatan
clc
pop
sub
out
add
dec
ret
pop
mov
or
or
jae
adc
lods
adc
xor
ret
mov
aam
enter
add
shl
pusha
test
lods
jne
mov
xchg
lods
xlat
pop
mov
inc
les
lods
mov
ds
jmp
lcall
xchg
cmc
push
add
and
push
insl
mov
xchg
fsubs
xorb
xchg
mov
add
jbe
iret
or
mov
scas
push
mov
mov
addl
mov
cmpl
or
imul
fwait
and
xchg
inc
pusha
sahf
int3
mov
mov
addr16
mov
sub
mov
in
jl
shll
aas
fs
fs
mov
push
mov
pop
or
into
aad
xchg
mov
outsl
addr16
sub
jmp
adc
xchg
or
aam
mov
mov
push
daa
ds
xchg
inc
mov
push
dec
push
dec
mov
cltd
outsl
mov
fnstsw
leave
ds
inc
pop
xchg
add
push
or
jbe
and
cmpsb
mull
adc
rorb
imul
movsb
dec
lret
mov
outsl
fistps
je
lea
mov
sub
push
ror
pop
push
mov
inc
into
stc
dec
mov
in
fildll
adc
jns
dec
int3
into
outsl
dec
jge
fwait
out
cmp
mov
pop
sub
cmp
cwtl
xor
insl
jg
push
push
clc
mov
into
dec
imul
adc
nop
pop
loopne
stos
pop
adc
sbb
adc
lods
das
stos
inc
lahf
fucomp
dec
mov
stc
filds
mov
dec
fstp
add
adc
cmp
movsl
popf
das
lahf
xor
pop
and
jge
cmp
cmp
js
mov
pop
sub
pop
cmp
and
add
js
add
pop
orb
inc
mov
test
lahf
sub
inc
js
xor
jg
mov
hlt
sbb
sbb
pop
cmp
xchg
mov
pop
push
lahf
into
pop
jno
test
das
arpl
stos
mov
mov
xor
lret
or
daa
sbb
xchg
aad
mov
mov
fsubp
add
arpl
push
or
aad
mov
jae
stos
loopne
xor
mov
cs
push
dec
inc
scas
xor
xchg
or
push
fdiv
xor
sub
inc
mov
mov
loop
jg
or
rclb
cs
aad
cltd
sbb
fsubp
aas
or
and
push
mov
cmp
cmp
in
fs
mov
imul
jl
in
addb
shll
inc
adc
lods
sub
cmp
out
stos
pusha
mov
sti
shr
or
scas
pop
inc
lret
out
js
lods
inc
sbbl
inc
fbstp
mov
or
mov
decl
jmp
pop
shrb
out
inc
add
fucomip
cmp
xorb
cmp
lds
int3
aam
and
mov
push
lock
adc
adc
or
mov
add
in
sub
in
cmpsb
push
rolb
test
mov
ret
jae
mov
movsl
push
mov
fisttpl
push
add
push
add
push
mov
cmp
imul
arpl
out
sbb
or
out
dec
xor
movsb
shl
xorl
jmp
or
out
mov
cmc
es
jge
clc
pop
sub
xchg
or
sub
iret
add
or
iret
incb
xor
dec
xor
push
in
cltd
lret
popa
ror
pop
jle
ja
sbb
pushf
xor
adc
xchg
mov
xchg
js
mov
mov
mov
scas
pop
jbe
les
aaa
pop
fstps
and
adc
pop
xor
or
shl
lods
jmp
outsl
add
jl
pop
outsb
mov
cmpsb
or
add
das
stc
stc
lcall
int3
je
lahf
addr16
inc
pop
in
ret
fcmovne
lock
cmp
das
loope
fcomps
cs
fwait
push
lods
pop
pop
shlb
mov
add
loop
and
lahf
rorb
les
cltd
cmp
or
jge
out
fcmovb
mov
or
movsl
push
jle
idiv
bound
ljmp
xchg
scas
sub
inc
out
pushl
push
call
aaa
pusha
xor
jge
aad
or
ret
ret
in
fcompl
adc
dec
dec
and
fisubs
xchg
rcll
push
and
mov
clc
fldenv
daa
fcoms
xor
idivb
out
adc
sbb
jle
dec
rclb
loopne
push
fwait
into
and
es
insl
ret
mov
mov
xor
push
outsl
jns
or
shrl
or
cwtl
lcall
inc
fcompl
add
out
fisubrl
pop
in
jecxz
lds
add
in
addb
leave
ja
fdivrs
xchg
shll
mov
sbb
add
jns
mov
jle
mov
and
aas
xor
jecxz
test
arpl
rcr
or
xchg
pushf
mov
dec
mov
in
jo
cmp
push
add
mov
and
aad
addr16
xchg
movsb
xor
mov
push
cmpsl
dec
cmp
mov
arpl
inc
mov
dec
dec
push
daa
fbld
pop
mov
adc
push
in
push
add
inc
and
push
pop
enter
xchg
js
xor
stos
pop
into
pop
and
adc
mov
mov
subl
sahf
and
sahf
mov
fs
scas
sahf
aad
inc
loopne,pn
bound
ret
movsl
xor
inc
nop
xchg
insl
sub
pop
inc
shlb
ja
scas
lret
cmp
jp
mov
lret
adc
or
lret
scas
push
and
push
mov
mov
mov
jg
aam
adc
scas
xchg
in
clc
push
or
sub
clc
jae
adc
std
pop
lret
lock
cmc
inc
add
test
out
sarb
jbe
cltd
cmpl
adc
add
xor
and
insb
scas
xchg
inc
mov
jp
fimull
xchg
sbb
add
imul
outsl
sub
mov
cld
pop
push
mov
xlat
fnstcw
jp
xor
stc
push
lods
loopne
dec
push
ret
in
cwtl
lea
push
push
pusha
movsb
push
sub
in
imul
mov
jecxz
fstl
cmp
stos
test
pop
sti
lock
or
pushf
in
mov
lods
sub
lods
sbb
mov
inc
jb
push
sub
sbb
mov
inc
fmuls
xchg
xorl
sti
lods
bound
and
aam
push
and
sti
xchg
popl
mov
xchg
dec
pop
int
test
jne
xchg
lret
dec
cli
stos
fsubrl
leave
xlat
ds
dec
call
daa
adc
pop
push
subb
mov
add
js
pop
lods
adc
pop
pushf
pop
lock
int3
fldt
jne
aam
dec
add
lcall
arpl
xor
mov
push
scas
mov
cmp
pop
mov
sub
cmp
lahf
sbb
mov
sub
loope
push
mov
cmp
cmp
in
orl
ror
fiadds
pop
dec
cmp
iret
pushf
mov
out
jae
movsb
jne
test
out
aam
add
outsb
ffree
inc
das
sbb
imul
adc
aad
in
xchg
push
mov
sub
cmc
gs
into
jge
out
mov
xchg
xlat
sahf
jle
push
add
add
clc
mov
sub
in
sbb
shll
xchg
dec
mov
fwait
cld
aad
dec
pop
insb
aaa
call
xor
mov
into
jp
dec
jb
push
mov
mov
cmc
aas
in
movsb
lods
sub
cmpsb
add
xchg
inc
scas
mov
or
sbb
and
out
mov
stos
fstpt
jmp
pop
adc
sub
popf
pop
sub
cmp
cmpsb
pop
icebp
jg
stos
lods
or
js
hlt
imul
iret
mov
pop
xlat
outsl
subb
mov
lds
inc
sbb
and
dec
dec
mov
xchg
inc
pop
adc
mov
out
mov
and
mov
inc
ja
sbb
add
test
mov
sbb
push
mov
fsubrp
or
setge
mov
into
dec
sar
push
push
push
push
loop
sbb
dec
out
sbb
inc
and
push
push
cld
xlat
rcrl
rolb
xor
sarb
xchg
xchg
outsb
movsb
push
mov
fmull
cmpsb
outsl
pop
mov
sbb
out
pop
clc
loop
inc
push
pop
fcmovnu
fmull
in
outsl
push
and
or
or
mov
outsb
bound
gs
cmc
jne
cmp
in
sub
icebp
cmpsl
dec
inc
mov
pop
call
sbb
test
pop
dec
jne
pop
lds
and
push
pop
add
sbb
stc
add
in
mov
xor
adc
mov
pop
mov
or
sub
push
je
adc
ds
int3
inc
dec
xchg
add
xchg
mov
push
inc
int
and
adc
call
ret
outsl
ds
dec
adc
mov
lcall
lret
repz
add
fstp
lds
xlat
sbb
mov
jo
mov
or
mov
xlat
mov
jecxz
mov
out
enter
xor
addr16
pop
and
aaa
sub
inc
xor
ss
sub
or
mov
sbb
xchg
icebp
mov
dec
sub
xor
outsb
sub
mov
mov
xor
adc
dec
mov
repz
mov
sbb
jb
jo
or
jns
add
push
jno
out
cmpsb
dec
jno
test
pushf
fimuls
out
add
icebp
mov
xor
xchg
pop
add
pusha
sti
sbb
call
push
fists
mov
jge
mov
ja
adc
daa
mov
mov
ret
pop
adc
scas
rclb
xchg
rorb
int3
mov
or
xor
and
inc
jnp
pop
mov
and
xor
pop
mov
in
or
repnz
sub
jle
pusha
pushf
mov
jbe
rcll
pusha
insb
mov
lock
out
inc
inc
or
popa
xchg
adc
jp
cmp
jo
sub
cmp
jb
cli
xchg
in
rcrl
push
pop
mov
outsl
in
js
pop
inc
inc
into
call
pop
mov
bound
je
or
fbstp
fistpll
ja
jbe
sub
dec
sub
lods
inc
mov
out
jecxz
add
inc
fldt
adc
mov
divl
pop
or
mov
cmp
mov
aaa
mov
pop
dec
jg
push
jmp
cltd
mov
lock
xorb
cs
cmp
cmpsl
xchg
repz
inc
xor
inc
movsl
and
inc
pop
fsubrl
mov
insl
bnd
dec
popa
hlt
loopne
ret
add
ficompl
dec
sbb
shll
xchg
xchg
jne
lea
scas
orb
xorb
aad
in
mov
ds
inc
inc
lret
add
out
sub
pusha
push
call
cmp
je
mov
sub
and
or
call
bnd
inc
xor
test
test
das
fisubrs
int
sbb
xchg
data16
push
iret
jmp
mov
es
sbb
shlb
cmp
xchg
sbb
lret
std
sub
mov
int3
inc
mov
dec
jp
loopne
xchg
xor
jnp
and
xchg
mov
adcb
dec
aam
scas
jne
push
mov
in
into
outsb
inc
push
mov
xor
xchg
bound
add
mov
loopne
out
jge
or
push
pusha
jae
js
mulb
mov
aaa
dec
addb
or
xchg
sbb
jl
lea
imul
aam
outsl
push
lahf
pop
daa
bound
orb
jmp
and
mov
jp
or
popl
insb
cmpsl
repnz
leave
xchg
push
inc
push
fistl
push
mov
push
pop
bound
icebp
pushf
push
jae
or
xor
iret
inc
out
sbb
cld
jmp
mov
dec
push
dec
jp
sbb
out
imul
and
sbb
jne
jae
pop
std
shll
pop
add
cmp
rol
mov
mov
lahf
cmp
cmpsl
fcoms
jge
jnp
pushf
scas
test
cmp
push
imul
adc
push
ljmp
sbb
dec
jle
jne
sub
inc
pop
out
jmp
pop
rolb
hlt
xchg
pop
xorl
sbb
push
sbb
or
add
mov
daa
decb
loop
pushl
and
loopne
adc
and
mov
add
xlat
mov
int
test
cli
mov
mov
setae
mov
dec
xor
mov
jb
in
repnz
movsb
dec
lret
xor
nop
lods
lcall
pushf
in
mov
pop
sbb
inc
loope
sub
mov
push
inc
popf
cmp
pop
mov
iret
xor
xor
fstps
xchg
pushf
frstor
lcall
mov
mov
in
int
dec
pop
or
sbb
mov
push
mov
xchg
insl
lcall
nop
or
jae
in
cmc
jmp
cltd
adc
imul
lcall
cmc
jne
outsl
mov
mov
xor
imul
push
call
shll
imul
les
bound
std
int
and
pop
test
ret
jl
iret
xor
jno
push
jle
push
mov
xor
sbbb
cld
adc
cmpsb
mov
jo
sbb
sub
adc
mov
lretw
cmp
push
in
mov
das
pushf
lcall
dec
mov
sbb
xor
icebp
jmp
jle
dec
popf
out
dec
mov
int
imul
cmp
fwait
notb
add
lahf
push
fwait
sub
ljmp
inc
mov
push
je
es
notl
xorl
mov
rcrb
xchg
andl
fcmovnbe
push
or
mov
add
xchg
stos
out
into
dec
xchg
imul
les
fisubrs
dec
je
addb
mov
add
pop
cmp
jge
in
and
in
mov
push
or
fwait
jl
clc
cmp
hlt
or
subl
dec
cmp
int3
jne
mov
movsl
or
adc
xor
mov
in
and
outsl
in
into
jb
jnp
cmp
scas
daa
loopne
sub
adc
inc
jbe
fwait
jae
or
dec
stos
ss
xor
fcmovu
push
dec
addr16
clc
lds
push
jp
hlt
les
cmp
fwait
dec
adc
stos
aad
dec
scas
pop
inc
repz
xor
and
cmp
pop
stos
mov
push
stos
jle
jg
or
into
cmp
mov
xchg
sti
xor
xor
rclb
xor
imul
ljmp
and
inc
lea
push
sbb
ljmp
inc
ds
mov
xlat
xor
adc
mov
xchg
and
jmp
out
gs
stc
push
pop
popl
jae
mov
or
shll
jbe
lahf
sub
pop
rorb
inc
arpl
loope
fs
popf
hlt
testb
bound
jns
push
cwtl
add
les
and
dec
xchg
stc
push
pop
cld
xchg
push
outsb
in
add
sub
push
jg
in
das
stos
ret
inc
movq
inc
mov
sbb
mov
ljmp
movsl
aam
push
or
inc
lods
jne
sarb
dec
mov
cmp
mov
mov
dec
pop
or
and
in
add
xchg
push
mov
mov
push
pop
mov
test
test
gs
cli
jns
mov
mov
mov
mov
sbb
ss
jae
in
sub
lods
mov
cmpsl
sub
lret
xchg
mov
xchg
mov
arpl
jle
fs
cmp
clc
fdivrp
push
or
push
mov
aad
jge
test
pop
or
xchg
fiadds
inc
stos
fisttps
jl
daa
and
test
arpl
jle
in
add
xchg
cmp
push
xchg
std
inc
mov
xchg
jb
popf
fdivrs
xor
das
ret
ret
cmp
scas
cli
sub
dec
std
popa
push
and
test
push
stc
mov
mov
in
loopne
cmpb
lea
daa
ljmp
insb
pop
push
lds
out
shlb
jmp
outsb
int3
loope
cmp
xchg
push
cmp
cmp
mov
call
push
dec
sbb
adc
dec
imul
aad
cmc
andl
dec
mov
data16
inc
mov
jns
dec
movsb
setnp
stos
fs
adc
js
out
movsb
xchg
cmp
xchg
cmp
mov
lret
xor
rorb
fs
mov
movsl
push
mov
push
add
movl
jns
mov
mov
icebp
frstor
test
jp
movsl
or
pop
push
push
rol
xor
mov
dec
fiadds
or
mov
ja
add
jb
hlt
movsl
xor
xor
sbb
mov
popa
std
dec
adc
sahf
fiadds
push
adc
dec
and
mov
push
xor
jnp
pop
ljmp
arpl
lea
jmp
loope
gs
repnz
and
sbb
or
dec
mov
xor
ds
lds
stc
icebp
pop
xchg
fs
xchg
xchg
inc
adc
pop
imul
stos
movsl
jnp
daa
fcmovb
out
adc
jbe
mov
push
xor
push
jno
jae
out
mov
sub
or
jle
dec
xchg
ljmp
adc
jnp
sub
and
sbb
out
fcoml
dec
icebp
cmpsl
leave
sbb
imulb
xor
xchg
dec
dec
pop
loopne
lods
das
inc
in
repz
lcall
icebp
inc
gs
iret
inc
cli
dec
cmp
outsl
test
xlat
or
ret
sub
push
push
outsl
clc
aas
in
pop
int
sub
jb
adc
rorl
es
movsb
jge
adc
xchg
jmp
sub
dec
or
out
jg
clc
rorl
sub
jle
in
jo
movb
dec
xchg
add
cmp
mov
popf
hlt
roll
add
dec
xchg
test
movsb
mov
pushf
testl
cld
scas
cmp
xchg
xor
lds
int
add
mov
int
sbb
stos
pop
xchg
sarl
sub
add
jb
jno
popa
jecxz
push
daa
imul
mov
mov
add
inc
cld
test
inc
xchg
dec
rorl
xchg
ret
jmp
adc
mov
push
dec
into
sub
push
xchg
and
jmp
pop
mov
or
mov
bound
xor
rcll
sub
rep
scas
sbb
lds
push
mov
aad
leave
cli
out
es
insl
push
mov
push
mov
or
mov
pop
mov
xor
mov
inc
lcall
inc
std
adc
popf
out
pop
push
or
dec
in
mov
movsl
lods
sbb
pop
ds
cmpsb
adc
popf
scas
inc
jnp
enter
ljmp
dec
stos
daa
ret
jmp
rcrl
test
inc
pop
mov
dec
xor
into
add
jnp
lock
pop
pusha
push
adc
jbe
mov
dec
andb
sbb
dec
int3
and
pop
adc
pushl
nop
test
daa
pop
or
push
movsl
xor
pop
and
inc
aas
andl
fwait
push
notb
xchg
sbb
jl
xor
jno
dec
ds
mov
ljmp
sub
ss
inc
into
and
in
push
add
or
push
nop
pop
and
fs
push
in
mov
and
jne
out
jo
cmp
and
lods
sub
std
sub
jnp
fcoms
outsl
test
lahf
in
lds
jnp
or
ret
mov
cmc
cmp
int3
aas
mov
add
dec
push
xchg
movsb
sbb
movsb
adc
sbb
icebp
xchg
fidivrl
pushl
xor
pop
mov
cli
lret
jo
fucomi
idivl
out
div
out
mov
scas
lahf
insb
adc
inc
pop
xor
out
lret
insb
jmp
add
cld
pop
mov
js
xchg
dec
push
insb
sbb
pop
push
adc
sub
or
cli
jb
dec
jnp
fwait
ret
jno
out
lret
mov
add
shr
lret
adcb
and
je
loopne
les
cmp
adc
adc
push
out
js
pop
cmc
cld
mov
sub
adc
adc
dec
push
mov
inc
add
dec
das
notb
daa
in
push
jmp
shlb
add
dec
cmc
mov
fstl
fldl
and
dec
js
jbe
jmp
mov
aad
jns
leave
push
push
cltd
lret
cmp
jno
cmp
std
mov
jbe
lods
lcall
jp
outsb
aas
xlat
adc
les
inc
addr16
popf
lret
cmp
or
sbb
add
stc
pop
bound
mov
mov
jns
mov
mov
mov
and
incb
lods
popf
add
bound
insb
and
gs
cwtl
and
outsl
pop
add
pop
mov
adc
lods
xchg
xor
add
push
scas
loope
push
clc
mov
and
sbb
cmp
aam
hlt
or
outsb
cmpsb
lds
sub
loopne
lcall
jae
mov
aas
mov
lcall
cmp
pop
cld
hlt
mov
mov
in
xor
adcl
pop
arpl
jp
or
mov
fstpl
ljmp
sub
shr
push
and
fwait
sahf
inc
xchg
sub
cmp
adc
out
sbb
jo
mov
pop
test
jl
push
dec
jae
xchg
movsb
mov
inc
rcrb
scas
gs
cmc
daa
sbb
lret
adcl
fisttpll
js
pop
sbb
and
xchg
push
bnd
rolb
incl
shlb
enter
loope
std
jp
mov
pop
xchg
mov
movb
cmp
mov
sub
ret
icebp
repnz
test
int
sub
and
jecxz
outsb
loop
mov
fwait
out
xorl
or
adc
out
sar
sub
in
jb
ret
mov
or
xchg
imul
clc
add
adc
jae
cmp
pusha
xchg
push
jno
loope
cmp
sub
repnz
mov
or
push
fcmovbe
stc
popf
xor
fldenv
test
mov
popa
inc
xchg
and
cmpl
movsl
pop
sti
push
cmpsb
push
add
sub
sbb
std
inc
in
adc
and
mov
push
movsl
cmp
inc
fldenv
mov
loopne
loope
or
mov
out
xor
mov
xor
add
std
sbb
xchg
fstp
sub
cmpsb
push
cld
out
fmuls
mov
sbb
shlb
in
adcb
ret
lds
int
in
out
sbbl
xchg
inc
jle
loope
ret
mov
cld
mov
pop
das
movsl
aaa
aaa
mov
pushf
call
cmp
int3
sub
xchg
fidivrl
nop
in
fyl2x
jl
fisubrl
mov
cs
cs
test
mov
sbb
idivl
imul
ret
rcll
cs
shlb
imul
sbb
dec
push
pop
lods
xchg
ficomps
call
adc
fs
pusha
in
test
xchg
add
xchg
sub
loop
mov
outsb
inc
add
adc
inc
sub
data16
outsl
dec
bound
adc
daa
stos
lds
sbb
and
ret
fxch
out
in
enter
jae
lcall
cmp
mov
sbb
cmp
adc
pop
aad
jge
or
xlat
lret
push
and
mov
and
data16
mov
pop
je
push
or
lock
add
ja
adc
nop
xor
in
sti
xor
push
xor
inc
mov
outsb
je
xchg
lret
repz
fldenv
clc
mov
pop
inc
rcr
xchg
cmp
sbbb
icebp
xor
xchg
std
js
mov
aaa
mov
mov
inc
jb
lods
lahf
xor
or
jge
pop
jmp
out
inc
dec
ss
testl
int
outsl
push
dec
loopne
cmp
sub
or
or
pusha
popf
sti
ret
lock
int
outsl
adcb
or
mov
xchg
inc
xchg
push
adc
outsl
adc
fdiv
stos
dec
int3
fldl
inc
mov
hlt
xor
xor
sbb
neg
into
pop
jl
jmp
subl
xlat
jle
mov
xchg
mov
mov
mov
sahf
or
sbb
xchg
push
outsb
mov
or
jo
pop
fndisi(8087
cmpsl
jge
pusha
sub
scas
sub
pop
mov
sub
mov
pop
repz
jecxz
mov
mov
xchg
xlat
fwait
imul
rep
enter
les
xchg
clc
aaa
es
adc
les
popa
push
xchg
xor
rclb
std
mov
inc
lock
jnp
jecxz
lret
in
ja
fnstenv
test
lea
push
cmp
jg
mov
and
mulb
mov
js
dec
inc
push
jmp
pusha
push
out
push
and
in
and
xchg
movsb
ljmp
xor
adcb
xchg
push
inc
pop
sub
dec
push
cmpb
xor
jl
sbb
or
mov
dec
cs
sbb
inc
xor
jg
xchg
lcall
and
mov
xchg
loopne
mov
xor
cmc
jle
sub
ljmp
popa
inc
mov
pushf
push
mov
sahf
or
sub
rol
daa
mov
lods
in
dec
jl
cmpl
and
cmp
addr16
pop
mov
add
xor
orl
in
and
rclb
mov
xor
ljmp
xchg
movb
pop
xor
sti
imul
lods
xlat
dec
xchg
subw
in
push
insl
push
or
dec
sbb
int
pop
rolb
jb
sbb
mov
int3
xor
xlat
pop
xchg
mov
mov
and
push
outsb
mov
and
add
inc
adc
enter
cwtl
sub
aam
adc
xchg
adc
xor
mov
lock
dec
jnp
int
scas
imul
cld
mov
jecxz
adc
lods
sbb
enter
lds
pop
or
scas
jnp
in
push
test
pop
sub
fbstp
mov
iret
ret
xchg
sub
lds
sbb
mov
sahf
mov
out
cs
xchg
xchg
push
sbb
mov
testb
test
mov
push
inc
mov
mov
add
sub
test
icebp
je
test
lahf
pop
and
pusha
sub
xor
adc
in
xchg
xorl
push
stos
jo
push
int
cmp
bndldx
lods
sub
fdiv
je
scas
outsl
loop
cmp
in
jnp
xchg
in
xchg
cmp
jo
call
dec
and
sbb
stc
mov
cmpsb
sbb
jne
clc
imul
psubusb
or
bound
add
hlt
repnz
loopne
pop
push
js
pushf
sub
mov
push
jo
iret
cmp
push
je
imull
jnp
les
push
aas
mov
jb
dec
push
jl
aad
xor
and
mov
add
into
cltd
push
mov
jae
push
jb
xor
out
icebp
fsubs
pop
xor
or
lea
adcl
scas
sub
mov
outsb
insl
prefetch
or
imul
pop
mov
ja
mov
sub
add
push
and
xchg
int
mov
insb
mov
cmc
inc
jl
sub
xor
xchg
ds
mov
rclb
xor
pop
push
jge
dec
push
and
add
jmp
loop
fldl
xchg
cmp
fdivr
adc
out
lret
lock
in
dec
sbb
xor
cli
jecxz
jl
jg
add
inc
pminsw
and
sbb
subl
sahf
and
scas
pop
sub
push
pop
fisttpl
lds
and
rclb
dec
notl
xor
bt
out
fistl
loop
mov
ljmp
jno
or
pop
es
bound
fstpl
imull
xchg
enter
in
fisubrs
and
scas
fcoms
popa
and
lea
mov
jno
or
xchg
xchg
test
add
push
arpl
mov
adc
data16
dec
push
cmpb
add
les
imul
cs
mov
xor
pop
nop
iret
xchg
sbb
mov
ficomps
imul
mov
cmp
fiadds
outsl
out
int3
push
cmc
xor
mov
mov
push
push
movsb
cmpsb
inc
push
loopne
xchg
gs
mov
in
add
pushf
and
int3
or
adc
int
lret
dec
lret
jg
push
cwtl
outsb
jbe,pn
sbb
fwait
push
inc
ss
xchg
es
lahf
xchg
negl
mov
pusha
lods
push
leave
aas
adc
jl
jns
sarl
lcall
lcall
dec
mov
mov
popa
repz
in
jo
fnstenv
roll
xlat
adc
cwtl
popf
addr16
insl
hlt
or
shl
ja
aad
fisubrl
jp
bound
gs
mov
mov
mov
jo
cwtl
mov
sub
and
das
pop
fisttps
sarb
push
sub
push
andl
fcomps
pop
sbbl
mov
divl
jge
pop
mov
push
mov
lcall
cmp
mov
add
lods
gs
movsl
xchg
dec
out
inc
mov
das
xchg
test
fnstenv
in
inc
call
fcmovbe
or
pop
pop
fldt
int
aam
jb
pop
cmp
sbb
out
test
cmc
shrb
pushf
push
cmp
mov
mov
pop
add
ds
cmp
mov
rcrl
push
in
add
sub
outsb
jo
and
notb
sbb
mov
mov
push
inc
sarb
lret
push
push
xor
test
cli
mov
mov
fmuls
test
ror
jae
not
clc
mov
pushf
aaa
cmp
dec
les
push
outsl
sbb
xorl
test
ss
push
ds
xor
icebp
push
adc
test
outsb
movsb
lea
adc
insb
xchg
adc
pop
sbb
scas
ds
pop
aam
sub
pop
mov
in
mov
mov
jo
push
in
inc
mov
jle
dec
and
mov
cmc
stc
mov
into
jne
dec
adc
dec
scas
outsb
pusha
shlb
jp
mov
pop
or
imul
push
mov
and
dec
pop
and
mov
jno
cmpl
shll
addl
pushf
push
addb
pusha
inc
mov
orl
and
hlt
dec
or
push
xor
jle
cmpsb
icebp
andl
jne
cmp
mov
aaa
adc
xchg
out
cmp
lods
mov
adc
sahf
adc
add
mov
mov
inc
in
ja
call
fs
xchg
iret
inc
mov
inc
xlat
adc
fwait
sarb
jp
adc
sbb
mov
int
pop
add
mov
mov
sbb
sub
inc
cld
movsb
cmp
adc
adc
repnz
mov
sbb
adc
ret
push
inc
out
xchg
out
xor
and
cld
or
xlat
add
push
push
fdivl
jb
xchg
in
or
mov
lods
and
into
lcall
out
std
int
jmp
stos
add
shl
data16
adc
fwait
jl
rcrl
ds
xlat
sbb
popa
jns
loope
jno
push
int
push
enter
stos
jg
mov
inc
sbbb
xor
faddp
pop
add
sbb
popa
mov
ficoms
jb
ljmp
mov
fdivrl
xchg
pop
dec
fdivl
aaa
pop
jecxz
ja
add
sub
loop
pop
mov
mov
sbb
mov
addr16
or
pmaxsw
call
and
outsl
jle
cmp
mov
rolb
xchg
scas
mov
or
adc
or
xor
and
inc
leave
mov
sbb
cmp
cmp
mov
dec
xorl
js
sub
pop
sahf
inc
rcr
xchg
sti
cmp
push
pushl
data16
dec
xchg
sbb
and
and
inc
jo
push
into
jp
mov
sub
mov
dec
jbe
pop
push
scas
shll
or
movsb
sub
fcomip
sbb
shl
sbb
or
leave
rcrl
fcmovnb
mov
test
add
rcrb
loope
mov
dec
xchg
mov
cltd
mov
and
sbb
mov
fdivrs
cmp
or
fmull
inc
cmc
ljmp
ss
push
lods
cmpsl
mov
das
sub
jbe
push
ljmp
mov
call
outsb
sbb
jl
adc
dec
mov
jno
aam
jno
je
add
cltd
repnz
jp
sti
cmpsl
in
bound
adc
dec
hlt
mov
cmp
xchg
dec
pop
jl
stos
rorl
mov
imul
stos
sub
test
cmpsb
xor
int3
rcrb
stos
out
jl
cli
icebp
push
add
pop
lahf
dec
leave
or
xor
mov
cld
and
mov
insb
mov
sub
mov
call
aad
mov
out
or
subb
jecxz
jbe
or
jns
loope
inc
xchg
ss
xchg
mov
int
sarb
xchg
adc
stc
hlt
in
mov
adc
xlat
jne
lods
in
xchg
shrl
cmp
movb
getsec
push
dec
leave
push
outsb
adc
dec
push
jl
xor
cmp
fwait
add
idiv
xor
dec
lea
insb
scas
stc
jbe
cmpsl
inc
test
mov
aaa
adc
mov
popf
call
or
sub
jle
cld
jmp
lahf
push
jge
push
xor
hlt
push
mov
dec
pop
push
push
or
inc
ficompl
push
cmp
jp
pop
lret
lods
movsl
inc
idivl
fcomps
jno
stc
sbb
movsl
mov
adc
imul
and
mov
dec
mov
jnp
out
test
mov
dec
cld
fcmovne
inc
int3
xchg
dec
bound
pop
mov
call
test
sub
enter
xchg
push
jns
mov
clc
or
pop
mov
fs
sub
jns
ja
adc
dec
lods
jne
xchg
stc
cmp
setle
movsl
scas
fidivs
shll
clc
sbb
pop
loope
mov
or
push
xchg
cmp
jmp
popa
mov
in
push
cmp
pop
stos
mov
and
mov
and
in
jmp
lret
xchg
mov
jl
stc
test
and
cmc
lret
dec
cmp
stos
lret
xchg
lahf
fdivrs
mov
sbb
sahf
imull
bound
pop
xor
cli
adc
mov
mov
inc
ljmp
aad
push
xor
fdivrl
jnp
jb
shrb
mov
enter
in
aas
lea
negl
daa
sub
and
fdivr
out
xchg
jl
xchg
mov
jle
mov
mov
std
mov
xchg
out
mov
aaa
sub
cmp
outsl
pop
add
scas
mov
iret
les
movsl
clc
stos
mov
ss
mov
inc
cltd
dec
gs
leave
lock
test
push
or
dec
cs
xchg
popf
jmp
lock
cmp
test
andb
jae
cltd
div
pop
cmpsl
cmp
lret
xchg
dec
imul
in
lea
cmp
xor
add
mov
stos
pop
loop
push
pop
pop
inc
icebp
iret
fcmovnbe
fwait
out
fisubs
push
mov
out
cmc
add
mov
add
ret
push
inc
or
pop
testb
cmpsb
jbe
pop
cmc
or
push
jo
xlat
add
loope
and
pusha
sub
inc
cmpsl
push
xor
decb
test
push
sti
cmp
or
mov
push
sbb
xor
jmp
in
insl
mov
std
jmp
mov
setno
lret
cmc
xchg
insl
fs
mov
xlat
jge
xor
cmc
out
in
je
test
fwait
call
jo
xor
into
and
lret
outsl
sub
lretw
inc
fwait
dec
fbstp
and
enter
les
imul
imul
xor
pusha
jecxz
scas
xchg
push
xlat
aaa
lahf
lods
mov
popa
inc
fs
pop
adc
ret
cmc
xchg
sbb
xlat
pop
jle
and
pushf
add
sub
cli
sub
mov
sbb
ljmp
arpl
scas
sbb
and
or
sub
fistl
das
addr16
add
xor
rolb
pop
mov
jmp
adc
adcb
push
xor
jb,pn
fwait
sbb
mov
and
xor
dec
add
imul
mov
mov
adc
xchg
push
dec
pop
dec
fisubrs
lret
and
fiaddl
in
dec
mov
cltd
lds
cld
out
ds
fsubl
jne
aaa
mov
xor
leave
lahf
leave
jmp
pop
push
mov
lds
bound
dec
inc
das
inc
pop
jae
lods
lfs
adc
mov
dec
mov
push
pop
add
pop
jo
xor
cwtl
in
nop
push
cmp
repz
out
add
ds
in
add
cmp
cmpsl
in
adc
stos
add
cmp
stc
jmp
ljmp
push
or
push
in
inc
popa
sbb
jno
sub
cmp
je
xchg
jne
stos
lcall
mov
repz
push
mov
jg
les
rcll
lss
out
fdivs
js
leave
jmp
push
xchg
mov
int3
in
add
ja
cmc
sub
mov
inc
rcll
rcrl
push
mov
imul
sub
adcb
data16
out
roll
mov
arpl
rolb
test
insl
lods
repz
jbe
daa
ss
pcmpeqb
xchg
inc
or
into
fbstp
ud1
dec
push
jnp
inc
adc
adc
xchg
mov
push
daa
adc
add
pop
sub
and
jle
test
mov
lods
stos
cmp
sbb
jbe
adc
add
push
sbb
into
mov
xchg
xchg
fs
or
cmp
lods
test
iret
jg
or
dec
or
sbb
imul
arpl
mov
cs
push
sbb
mov
or
stos
rcrl
mov
pop
jae
aaa
inc
xchg
scas
cmp
adc
es
out
arpl
lahf
out
fisttpl
mov
je
inc
out
sar
push
jbe
push
aaa
cmc
call
lods
mov
jne
mov
push
clc
push
mov
fsts
aad
push
test
in
les
add
int3
test
lahf
mov
xlat
shlb
div
lahf
push
sti
sub
fistpl
pop
or
cmc
mov
xchg
arpl
lret
mov
lret
cmp
sbb
gs
jg
test
loop
roll
lds
jg
repz
push
inc
cwtl
and
jno
pushf
das
int
xchg
xchg
testb
xchg
add
xchg
lea
loopne
or
or
pop
jne
fsubrl
cmp
xor
pusha
pop
out
push
int
add
loopne
lea
sahf
gs
xor
fwait
jle
mov
shrb
mov
sahf
adc
test
jo
pop
xor
cmpsl
hlt
clc
xchg
mov
sti
je
setge
jmp
fistpll
popf
mov
mov
sbb
dec
mov
in
out
aam
cmp
adc
inc
mov
cmp
rcrl
xchg
mov
add
sub
adc
ret
int
mov
rol
dec
sbb
rol
or
push
xchg
add
cmp
xchg
mov
dec
outsl
push
fisubl
in
sbb
jle
mov
fbld
movsl
inc
fcompl
divl
std
pop
jae
cmpsw
popa
push
les
jle
pushf
cmp
cmpb
add
outsb
aaa
add
lret
popl
in
xchg
xorb
mov
in
or
lea
sbbb
jle
push
pop
aas
lods
scas
xchg
jmp
pop
jns
inc
add
cld
mov
or
test
push
mov
test
dec
jp
lret
or
pop
in
in
mov
fcmovbe
jle
mov
aam
in
ss
mov
jno
xchg
out
in
sub
xchg
rcll
iret
in
mov
insl
sub
insb
ret
pop
xor
xchg
mov
repnz
pop
imull
insl
xor
rorl
fsubs
xor
mov
ss
scas
arpl
pop
test
into
and
lea
in
add
sbb
pop
ret
arpl
sbb
bnd
fcmovnb
or
dec
pop
aas
add
lret
jns
cs
xor
movsb
std
aam
pushl
cmp
jbe
aad
dec
fwait
or
adc
mov
shrb
scas
xor
lock
adcl
mov
mov
jl
cmp
ja
mov
sbb
loopne
jle
inc
lock
xor
and
insb
fisttpll
mov
inc
push
test
push
outsl
cmpsl
xchg
or
lods
dec
jle
inc
jnp
loopne
pop
aaa
stc
fs
mov
inc
xchg
jae
fsubs
ds
lcall
adc
out
jecxz
divb
enter
clc
mov
in
and
mov
xchg
sbb
jo
int
aam
aam
and
sub
fcomi
and
test
mov
sub
pop
ss
icebp
pop
xchg
mov
cld
sar
loop
cld
jo
cld
addr16
orl
cmp
bound
dec
pop
push
lcall
mov
aaa
push
ljmp
jbe
lods
or
mov
in
int
or
loope
leave
sub
data16
mov
sahf
mov
push
mov
xlat
movsl
pop
lret
scas
jns
xchg
stos
pop
and
jmp
int
inc
jb
mov
add
pop
jne
outsb
adc
add
mov
or
loopne
repz
in
cwtl
movsb
lea
insl
nop
imul
popf
sub
call
enter
jbe
mov
aad
roll
xor
loopne
sarl
into
dec
mov
int3
push
ja
lods
mov
fcomp
mov
movsb
icebp
lods
into
push
pop
sub
xchg
bound
cld
loope
adc
lret
xor
sbb
dec
inc
push
fiaddl
sbb
hlt
xchg
push
mov
movsb
repz
or
xchg
mov
pushf
mov
or
test
inc
movsb
and
sti
xchg
push
push
jae
xor
adc
push
scas
mov
popf
adc
sahf
xchg
addb
daa
cmp
dec
jecxz
xchg
mov
add
mov
in
jb
andb
pop
out
adc
lods
push
inc
push
jno
jg
lret
pop
push
sub
jmp
mov
push
fsub
sub
std
insl
sub
xorl
fwait
or
shrb
pop
vucomiss
cltd
jns
repnz
sub
pop
outsb
jmp
addr16
fwait
xchg
rcl
adc
inc
cli
fs
imul
lret
fildll
push
xor
loopw
out
test
jnp
xchg
sub
mull
sti
popf
dec
push
xlat
mov
mov
mov
cmp
mov
cmp
push
hlt
dec
ds
inc
and
fs
out
aaa
fnstenv
push
sti
mov
push
sti
call
std
pushw
popa
pushf
jbe
add
lods
mov
adc
dec
fistpl
cmpsl
mov
in
rol
outsb
xor
inc
ss
sub
xchg
lods
out
push
push
jp
test
and
das
jmp
mov
or
pop
push
mov
dec
pushf
add
nop
sbb
inc
loope
fwait
lret
cmp
adcb
roll
push
mov
lods
push
fistpll
inc
mov
sahf
call
pop
adc
aad
xor
dec
aad
pop
xor
push
jg
and
ds
inc
mov
aaa
lret
or
mov
push
pop
mov
cs
aas
xchg
lret
dec
inc
jmp
repz
mov
stos
ret
add
inc
push
xchg
subb
aas
loop
lea
mov
xchg
stos
mov
data16
in
xor
or
jns
mov
xchg
test
cmp
mov
push
mov
jecxz
fdivrs
stos
stos
xchg
daa
fs
xchg
push
push
lods
xor
ret
sub
gs
xchg
push
imul
sbb
lods
push
sbb
or
in
out
mov
jnp
lcall
gs
pop
pop
pop
jnp
dec
push
aam
lock
add
out
mov
lds
sahf
sub
jle
push
add
xchg
xchg
add
stc
loope
jno
inc
mov
lcall
cmp
xor
fcomps
icebp
pop
repz
mov
lock
inc
dec
adc
add
adc
gs
and
leave
repz
pop
gs
sbb
hlt
mov
les
mov
push
inc
jmp
imul
lret
cmp
push
xchg
add
shrb
lea
std
xchg
sbb
pop
mov
cs
out
xchg
ja
roll
repnz
mov
sahf
fsts
test
lret
stc
aas
lret
js
outsl
adc
das
call
or
pop
int3
sub
loopne
popf
dec
pop
jmp
xchg
sub
popa
pop
fiaddl
aaa
push
push
mov
mov
data16
jne
popa
insb
sbb
rorb
cmp
outsl
dec
sbb
rorb
sbb
lret
sbb
lahf
inc
lea
cmp
adc
pop
sub
xchg
pop
loope
push
shrl
cmp
les
jp
mov
out
xchg
xor
out
dec
push
mov
and
jmp
dec
in
rcrb
adc
mov
iret
push
xor
gs
add
jecxz
outsl
js
ja
in
sbb
jo
jl
sub
insb
jp
in
fcomp
stos
fcompl
lcall
cmp
decl
lret
cld
fs
sarl
jmp
jge
leave
lcall
in
mov
lods
loope
jl
popl
xlat
rolb
or
fcoms
ret
hlt
ljmp
out
pop
pusha
xlat
shl
or
jmp
inc
sub
xchg
shl
sbb
jl
mov
and
lea
xor
aaa
mov
repnz
adc
sbb
int
dec
jp
xor
not
inc
popf
mov
shll
lcall
mov
fs
push
lods
test
mov
or
mov
popa
pop
dec
es
push
ret
jne
cwtl
imull
adc
je
scas
test
mov
sti
inc
fsubs
xchg
add
pop
insl
addb
pusha
push
pop
in
cmp
imul
mov
cli
rorl
outsb
in
push
in
sti
jne
add
out
in
fnstsw
jo
add
sbb
jg
mov
loope
dec
inc
xchg
jl
xchg
fistps
jmp
cmp
pop
and
inc
sbb
test
shll
lds
mov
inc
mov
jge
jmp
outsb
adc
sahf
and
sbbl
mov
pop
dec
or
mov
push
sub
insb
jge
and
iret
push
cmc
js
test
aas
or
jnp
repnz
cmp
sbb
inc
mov
xor
cmpsl
dec
jle
icebp
xchg
mov
jb
sbb
iret
sub
loopne
inc
adc
cmp
iret
andl
ficoml
pop
mov
sahf
sub
clc
ret
insb
lret
inc
inc
lods
iret
fimull
lcall
insb
test
xor
adc
xchg
or
jle
mov
pop
mov
or
mov
ja
insl
jg
xchg
sbb
mov
insl
cmc
cltd
shrl
mov
movsb
mov
sbb
jmp
aas
jmp
cmp
push
push
mov
dec
loop
push
adc
std
dec
ja
js
lret
divb
cli
sub
test
test
lods
push
cld
add
and
add
addr16
mov
pop
mov
in
mov
int
sahf
fs
shlb
js
dec
or
pop
xchg
pop
xorl
insl
leave
int
mov
sub
scas
aas
rcr
sub
jae
mov
pop
dec
push
adc
pop
cltd
or
nop
mov
mov
repnz
ja
mov
inc
sbb
sub
sbb
xlat
or
je
aaa
xchg
adc
jecxz
into
dec
lret
pusha
jmp
push
or
xchg
pop
push
mov
fnstcw
cmp
sub
int
testb
mov
and
push
std
shrl
push
sub
ss
ret
mov
int
adc
sub
shll
je
and
pushf
test
cs
test
cltd
repnz
inc
movsb
sub
jb
arpl
loopne
pop
sub
addr16
dec
aam
insl
test
inc
mov
aaa
push
scas
es
lods
out
fisubrs
nop
mov
or
lcall
sub
popa
outsl
xchg
mov
aaa
mov
push
stc
sbb
sbb
adc
pop
stos
cld
es
inc
jl
jmp
fwait
mov
stos
xchg
jmp
sub
jnp
cmc
adc
mov
loope
mov
xchg
jne
add
mov
push
push
and
pop
mov
fiaddl
idiv
dec
cmp
and
and
scas
mov
ja
mov
dec
pusha
cmp
popf
ds
jno
xorl
cld
cmp
pop
icebp
imul
int3
xchg
mov
leave
repz
ror
aam
lods
inc
jmp
sub
adc
loop
push
fs
mov
cmp
or
inc
mov
stos
mov
mov
jbe
jns
sub
and
lret
test
xchg
fmuls
cmc
cltd
addr16
in
add
out
mov
into
sarb
inc
ret
rclb
mov
or
aaa
fcomi
xor
xor
lock
lock
inc
aaa
pop
dec
or
ss
pop
xchg
scas
iret
sbb
in
rcl
sbb
push
jb
xchg
jo
adc
add
insl
add
jecxz
inc
lea
shl
jo
sbb
mov
lods
jbe
push
in
or
push
sub
add
stc
pop
add
notl
push
mov
fisttpl
pop
and
subb
repz
or
push
fsts
push
jmp
inc
decb
js
xor
xchg
dec
aaa
idiv
pushw
pop
or
mov
or
addb
fdivrl
cmp
jmp
push
add
lret
nop
mov
idivl
sahf
cmp
jmp
mov
das
fcmovnu
pop
sbb
mov
jnp
outsl
and
adc
fistps
pusha
sub
mov
push
rcll
cmpsb
push
jg
mov
aas
jne
push
mov
sbb
pop
pusha
add
mov
daa
xchg
inc
mov
push
inc
lods
pop
rcll
andl
in
jnp
xor
cs
cmp
mov
lds
fistl
pusha
push
adc
cmp
jb
and
dec
cmp
fisubrl
rorb
sbb
add
xchg
dec
jo
repnz
jge
cmp
inc
cmc
adc
lock
stc
loope
test
aaa
or
inc
adc
dec
cwtl
adc
push
inc
mov
add
aam
mov
mov
xlat
cld
mov
or
out
movsl
mov
add
dec
xchg
dec
fistl
out
push
jg
andl
in
push
js
adc
fwait
sub
jg
cmp
ds
push
mov
nop
test
sbb
outsl
in
pop
loop
into
arpl
push
std
test
push
sub
lahf
aad
or
aad
sub
inc
fs
xchg
xor
push
sub
pop
push
pop
push
xor
add
lods
lret
cwtl
sub
aaa
jl
in
test
inc
adc
cwtl
lea
inc
in
dec
das
addr16
add
out
cmpsl
push
ja
add
xchg
jae
xchg
mov
popf
orl
xor
or
jle
dec
test
outsb
daa
das
and
pushl
push
enter
test
stos
fadds
inc
cmp
movhlps
push
cwtl
jae
filds
mov
out
xor
scas
or
lea
test
xchg
or
jo
or
shl
or
mov
inc
cmp
idiv
scas
shrb
lods
pop
out
push
push
add
cld
sub
movsb
shrb
push
mov
mov
leave
add
mov
inc
aad
fwait
add
jp
mull
pop
adc
and
pop
das
jb
add
jecxz
push
clc
es
psubusw
lods
push
cmp
mov
jae
dec
in
sahf
jae
jl
lods
push
fisttps
xchg
dec
pop
jmp
push
adc
shll
std
test
int3
lds
cli
cld
jbe
outsb
daa
cmpsl
negb
out
scas
rcl
sub
out
loopne
test
addr16
mov
das
push
fprem
xor
jb
rcrb
arpl
iret
cltd
adc
cmp
rcr
aaa
sub
aad
call
mov
dec
xchg
dec
loope
aad
cmp
cli
add
jmp
mov
out
fwait
mov
xor
jnp
ss
dec
sub
repnz
shrl
mov
adc
scas
shrl
adc
xchg
inc
xchg
aaa
sbb
mov
std
or
mov
out
in
inc
ret
xor
stos
jb
mov
xchg
out
aam
push
xchg
xchg
push
sbbl
adc
aas
pop
jnp
push
sub
sub
xor
pusha
mov
sbb
jne
vpcmpeqb
iret
out
in
xchg
push
push
fcomps
ljmp
xchg
sti
out
sti
insb
iret
cmp
popa
inc
into
jmp
or
mov
lods
dec
int3
mov
add
adcl
jno
add
inc
out
mov
inc
imul
or
push
les
dec
les
cmp
mov
subl
mov
sbbl
jl
pushw
pop
lock
and
rolb
push
cmc
inc
sbb
lcall
lcall
dec
punpcklbw
sahf
sbb
fwait
lock
lret
out
or
stos
pop
sub
imul
fmuls
repz
imul
mov
fwait
es
xor
pop
es
push
je
xchg
stc
inc
inc
lret
stos
fs
sbb
push
dec
test
popa
and
jno
pop
pop
add
jae
sbb
gs
adc
rep
mov
imul
lods
add
dec
add
sub
int3
add
mov
pushf
and
and
ja
sub
pushf
sub
testl
jae
das
addl
pop
out
repz
arpl
nop
sbb
push
stos
xor
push
imull
lahf
jae
clc
stos
sub
iret
mov
scas
inc
ss
and
mov
xor
mov
mulb
scas
loopne
ss
dec
cwtl
inc
mov
rorb
rcrb
or
pushf
sbb
lret
inc
cmp
cld
aam
mov
lret
pop
loopne
repz
in
mov
cmpsb
jecxz
rcrb
push
push
sahf
in
push
in
fucomip
sbbb
cmpsl
out
jne
cwtl
and
pop
xor
sbbb
ud2
add
js
mov
bound
and
cmpsl
or
shl
cs
or
dec
push
lcall
mov
xor
decb
aad
push
bound
mov
inc
lret
cmp
mov
push
inc
sbb
ret
jb
sub
sahf
mov
xor
push
and
js
add
lods
mov
out
mov
ss
push
cmp
shll
scas
mov
mov
inc
insb
push
mov
xor
popf
mov
mov
mov
xchg
cwtl
rcrl
mov
adc
mov
jns
rclb
xor
jmp
das
dec
sub
pop
stc
into
push
jmp
in
call
push
xor
fidivs
add
mov
jmp
or
sti
mov
jecxz
into
mov
jne
arpl
xor
mov
add
mov
sub
outsb
and
bound
in
xchg
ret
or
stc
xchg
sub
js
or
mov
pop
addb
inc
sbb
lods
dec
pop
mov
cmpsl
push
hlt
imul
push
and
loop
in
push
out
leave
imul
mov
xchg
push
mov
cmp
scas
mov
or
jae
es
or
mov
xor
pop
outsl
call
rol
pop
cmpsl
xchg
dec
push
and
add
xchg
add
ss
mov
mov
pop
and
cmp
mov
inc
cmp
pop
addr16
mov
pop
push
fdivrl
xchg
frstor
jl
sub
test
inc
push
test
in
sub
stos
nop
inc
add
sti
dec
xor
lret
xchg
mov
repnz
into
push
cmpsb
push
fistpll
lock
adc
mov
stos
ljmp
mov
ja
push
cmp
test
sti
pop
mov
xchg
bound
jns
ret
icebp
cmp
in
sbb
fcmovnu
pop
adc
jge
inc
xor
sahf
loope
in
push
clc
pop
pop
popf
loope
mov
rcrb
stos
call
cmp
sub
xor
into
ror
stc
mov
icebp
cmp
xchg
mov
xchg
mov
int
cmp
incl
andl
leave
jo
fnstsw
outsb
xchg
inc
call
adc
mov
clc
push
xor
xor
jmp
mov
jge
test
mov
adc
pop
fiaddl
mov
sbb
test
cwtl
and
cld
lds
mov
mov
adc
jge
mov
or
cld
cmp
imul
call
add
pop
inc
xchg
add
xchg
stc
cmp
out
push
cmpsl
mov
xchg
mov
jecxz
das
out
jnp,pt
xor
push
int
mov
loope
mov
sub
cmc
add
ljmp
ja
sbb
adc
push
mov
js
outsb
outsl
out
das
dec
sbb
ljmp
mov
test
cmc
rcl
jns
push
ss
and
mul
push
push
xchg
jmp
ds
jecxz
ret
loope
jnp
ja
xlat
scas
cltd
lcall
jae
xor
cmp
adc
push
inc
push
repnz
dec
outsb
jb
and
js
ljmp
push
or
rcrb
and
add
push
inc
jns
mov
adc
or
xchg
adc
mov
cmp
addr16
xlat
ljmp
sub
mov
pop
jmp
mov
add
inc
add
repnz
push
fwait
jl
push
xchg
lcall
fiaddl
call
jo
shl
adcb
xrelease
popf
dec
test
add
mov
aad
aam
inc
insl
mov
mov
out
xchg
sbb
lods
pop
mov
xchg
rorl
aas
adcb
mov
sbb
jne
xor
jae
adc
adc
cmp
test
lcall
pop
mov
sub
test
cmp
lock
xor
add
and
stc
mov
xchg
lods
faddl
movq
clc
add
fiaddl
sub
jns
add
dec
mov
in
or
dec
or
cmp
aaa
pop
xor
xor
sub
rorb
js
bound
push
es
inc
cmp
sbb
xor
and
mov
rcrl
fstpl
jb
inc
sub
insb
push
add
out
shr
ja
insb
rorl
dec
xorl
flds
push
loopne
loopne
lcall
leave
xor
ficomps
jae
adc
xchg
out
dec
cmp
icebp
push
stos
mov
sub
rorl
jmp
sub
or
fidivrl
pop
mov
and
mov
cltd
sarl
inc
mov
aas
inc
test
aas
add
mov
les
sub
mov
sbb
fisttpl
bound
enter
lds
push
mov
lock
aaa
js
lds
je
test
ss
testl
mov
or
sub
pop
cmp
mov
dec
adc
mov
loopne
cmp
cmp
cmp
inc
out
call
js
pop
mov
ds
outsl
sahf
les
jns
sub
xchg
test
dec
cmpsl
roll
xchg
adc
mov
sub
cwtl
mov
repnz
push
push
mov
jl
mov
test
jp
inc
popa
addl
inc
ror
lret
xor
sti
outsl
pop
out
std
adc
divl
inc
in
bnd
and
cltd
pop
sahf
or
mov
sbb
shrb
int3
and
lahf
push
jbe
or
pop
push
aad
cwtl
jmp
pop
popa
xlat
clc
sub
push
add
repnz
roll
mov
jl
or
pushf
pusha
repz
les
dec
sahf
lock
cmp
add
and
add
cmp
arpl
mov
pop
sahf
mov
aas
aas
xor
mov
mov
mov
scas
inc
adc
fmul
mov
jns
xor
xchg
pop
xor
and
scas
fisubl
out
jbe
mov
inc
loop
mov
cmp
dec
pop
or
outsl
pop
cmp
ficoml
test
cmovbe
test
jg
dec
call
and
cmp
bound
lea
adc
adc
scas
or
fdiv
xchg
xor
clc
test
inc
orb
call
dec
mov
gs
pop
arpl
pop
mov
pop
andb
cmpsb
insb
cmp
das
sbb
es
mov
scas
jae
or
fistl
imul
adc
mov
cmc
pop
jb
and
or
jl
and
mov
jp
mov
inc
cld
pop
inc
jmp
inc
lcall
mov
mov
mov
push
lahf
and
scas
push
push
push
scas
sarb
cli
movsb
and
cmc
icebp
int3
mov
and
push
jg
in
repz
jnp
loop
add
jno
aaa
sub
loopne
das
xchg
fsubl
fildll
pusha
lods
jmp
push
pop
pop
je
inc
jae
cmp
lcall
data16
dec
sbb
dec
repz
ja
bound
inc
fists
cs
mov
pop
in
or
dec
jns
pop
cmp
arpl
dec
and
dec
outsl
ret
push
shrl
stos
lods
lea
xchg
into
mov
lret
mov
sbb
pop
cwtl
and
test
push
imul
addr16
in
ljmp
out
orl
outsb
jbe
sub
push
cltd
adc
int
cmp
jo
test
mov
mov
movsb
push
ja
aad
loopne
testb
push
push
inc
fs
adc
insl
insb
mov
insl
cmp
fbld
outsb
mov
pusha
lret
clc
icebp
cmc
adc
hlt
test
pusha
js
push
popa
dec
fildll
das
js
mov
dec
ss
jns
inc
rcr
aam
cmpsb
ds
imul
push
sub
xor
fmul
cld
xchg
or
xchg
jg
push
or
cmp
bound
adc
xor
rclb
lods
jnp
cwtl
mov
icebp
inc
repnz
lods
adc
lods
sub
inc
pop
fcoms
rcll
xor
movb
call
mov
jb
cmpsb
ja
mov
packssdw
mov
pop
push
out
lret
pop
je
mov
addr16
pcmpgtd
stos
cmpb
xor
jmp
add
js
mov
inc
xchg
xchg
inc
xor
into
hlt
ficomps
xchg
fisttpll
mov
aas
add
movsl
push
adc
add
jbe
clc
cmp
ds
lcall
bound
mov
cmp
push
mov
lret
dec
imul
xchg
fdivrl
jp
cltd
lret
cmp
jge
xlat
stc
out
xchg
in
movsb
fxam
pop
or
in
loop
aas
inc
mov
negb
sbb
cs
in
push
jl
dec
ret
out
inc
sar
ja
or
xorb
sbb
or
out
xlat
adc
xchg
in
push
outsl
inc
xor
cld
js
xor
fadd
test
adcl
mov
repz
push
mov
js
xor
mov
jns
lret
stos
andl
mov
vpminsw
pop
in
jne
mov
jae
xchg
call
adc
xchg
cmp
scas
stos
std
lahf
orl
lock
sub
push
mov
std
xchg
jne
xchg
add
push
hlt
mov
sub
dec
inc
stos
pushf
sbb
fcoms
xor
hlt
lods
sbb
push
andb
das
stos
out
jo
fcompl
xchg
mov
fsubrl
and
cmp
jbe
inc
ljmp
and
int3
daa
xchg
mov
jle
dec
in
sub
clc
sahf
cmp
imul
and
push
pusha
xor
jb
sti
mov
lea
lret
lds
in
mov
call
sbb
push
inc
hlt
adc
sbb
loope
push
rcrl
cmp
repnz
fdivrl
cmp
dec
mov
insl
test
orl
jne
je
adc
or
mov
rol
xchg
mov
addr16
mov
mov
lock
loopne
adc
pusha
ret
jmp
mov
pushf
cwtl
sub
repz
addr16
loop
sub
cli
add
xchg
scas
jle
loopne
xchg
jne
cmp
lret
xchg
cmp
jb
jb
daa
or
inc
jns
jg
xor
mov
aad
test
lea
lods
aam
inc
or
test
mov
movsb
outsl
cli
fdivrl
jmp
lds
push
inc
loope,pn
dec
xor
or
jmp
xlat
fldenv
push
popf
out
lods
insl
cli
js
jg
adc
xor
inc
mov
in
sbb
insb
femms
xchg
and
pop
xor
fisubrs
xchg
jle
xchg
repnz
cmp
stos
dec
and
dec
mov
enter
add
sti
vmovntps
test
sub
push
pop
mov
call
mov
shr
jae
ficoml
sbb
cmpsb
sub
cmpsl
lahf
decl
cld
pop
or
add
xchg
mov
leave
pop
je
imul
jp
scas
in
outsl
inc
cmpsl
sub
mov
jno
xchg
ja
and
aaa
xchg
xor
fdiv
inc
scas
add
adc
jno
cmpl
sub
cmp
jp
scas
jle
mov
jo
or
lret
mov
cmc
movsl
jecxz
out
pop
pop
in
outsb
mov
adc
aam
jo
cmp
mov
sbb
in
and
fistps
sbb
cld
fwait
rclb
popa
xlat
iret
aaa
fbld
adc
cmpsb
in
pop
outsb
jp
xor
mov
push
inc
lahf
or
lret
and
call
dec
aam
mov
lret
pusha
repnz
test
xlat
mov
mov
mov
mov
ja
cmpsl
cs
pop
sbb
test
loopne
lret
das
imull
push
fs
cld
mov
jb
hlt
xor
mov
scas
pusha
stos
or
cmp
xor
push
mov
or
fstpt
bound
dec
gs
xor
or
or
push
ss
sub
test
outsl
negb
loopne
insb
movsl
scas
push
push
sbb
jmp
inc
ret
pop
pop
pop
cmp
loopne
xchg
cwtl
test
add
adc
push
jmp
mov
or
clc
scas
aas
mov
dec
xchg
jbe
adc
xchg
outsb
xor
or
test
sbb
push
pop
out
push
add
push
xchg
jp
in
lea
adc
dec
jnp
jae
sub
xor
test
repnz
inc
mov
mulb
jae
lods
add
and
xchg
cmp
and
loop
loop
mull
add
add
push
jle
cmp
testb
jmp
insb
jne
and
fisttps
jbe
cwtl
xchg
test
and
sbb
dec
fdivl
jb
insb
ja
or
pop
push
and
mov
push
xor
in
xor
xchg
cmpl
cmp
int
cwtl
adc
sub
pop
push
lahf
scas
sarb
mov
faddl
and
je
andl
mov
cmp
int3
jns
int3
mov
inc
mov
aaa
fildll
inc
int3
ss
xchg
mov
mov
xchg
imul
sub
jne
ret
fists
cmc
insl
gs
add
stos
mull
out
test
stos
add
enter
jmp
sbb
xor
adc
pop
lret
mov
fwait
add
lahf
and
mov
in
cmc
in
and
inc
dec
ret
negb
mov
mov
imul
push
sub
push
and
loop
fcmovnb
push
lret
dec
pop
push
adc
out
inc
sub
data16
mov
lea
cli
adc
dec
jbe
mov
mov
cmp
stos
fcmovnu
mov
test
mov
or
pop
sub
sbb
xchg
pop
push
push
cld
out
jb
leave
pop
cmp
add
and
mov
adcl
xchg
mov
insl
test
repnz
ds
lret
pusha
out
jb
rolb
sahf
stos
in
sbb
jbe
dec
cmp
adc
mov
lods
sbb
bound
xor
mov
insl
and
stos
imul
mov
in
inc
mov
xchg
fwait
mov
jno
pop
push
fstpl
enter
testb
movsl
push
aaa
pusha
jnp
insl
inc
push
movsl
push
sar
jne
movsl
into
pop
in
cmp
push
sbb
daa
test
les
push
mov
popa
test
xchg
pushf
xchg
roll
inc
sbb
or
insl
mov
jecxz
cmp
adc
mov
dec
pop
dec
push
xchg
test
jg
test
sti
jp
loopne
mov
ss
bound
ds
inc
sub
lods
jge
outsl
fdivrs
inc
inc
jp
mov
sub
pop
jno
adc
mov
icebp
testb
lock
cmp
dec
test
daa
fisubs
mov
ret
rorl
sub
orl
cmpb
test
lret
add
pop
lea
and
hlt
lret
add
xchg
adc
loop
aas
dec
lret
sahf
jge
clc
fs
xor
mov
mov
and
cltd
sbb
mov
xor
fisttpl
mov
adc
out
aam
out
cmp
daa
or
loop
mov
test
lods
andl
pop
dec
jecxz
sub
cmp
lahf
mov
std
xchg
aam
stos
arpl
mov
mov
insl
mov
sub
ja
pusha
out
add
jp
iret
or
in
xchg
mov
xchg
mov
adc
xor
jne
fimuls
lds
mov
ror
daa
ficompl
pop
into
es
jnp
jl
sub
dec
jb
imul
pop
push
cmpsb
cwtl
sbb
sbb
push
sbb
cli
shl
ret
xchg
loop
orl
dec
add
inc
push
adc
jns
aam
jns
das
push
pop
xchg
leave
sub
push
cmpsb
push
cli
add
bound
adc
xor
fsubrl
add
push
fildl
mov
jo
mov
jmp
ret
mov
xchg
nop
add
out
daa
sbb
mov
xor
mov
sbb
push
sar
inc
hlt
scas
lock
jmp
add
push
pop
dec
aad
jno
sbb
shl
incl
add
xchg
pop
andb
jb
xchg
test
jo
daa
mov
sbbl
inc
hlt
pop
adc
xchg
mov
adc
aaa
sub
arpl
mov
gs
fnsetpm(287
addr16
xlat
cmpsl
fnsave
hlt
stc
mov
mov
std
in
dec
sbb
aad
insb
fs
outsl
stos
mov
int3
xchg
push
lds
cmp
cmp
call
jmp
jno
mov
dec
mov
push
or
scas
and
or
es
clc
mov
lret
inc
xor
int3
cmp
xor
or
mov
insl
pop
and
inc
jmp
daa
ja
push
int3
rorl
add
adc
imul
test
xchg
add
jb
mov
mov
out
out
push
gs
and
out
inc
mov
mov
xchg
ret
pop
std
in
out
push
xchg
pop
insb
inc
pop
xchg
sub
fisttpl
mov
repz
sarb
cmc
pushf
add
mov
cs
cli
imul
aam
or
int
mov
fs
loop
or
and
add
mov
call
hlt
jns
pop
dec
test
data16
jb
mov
adcl
xor
and
lret
or
mov
cs
shl
jg
adcb
sbbb
int
sub
sbb
and
mov
add
clc
psadbw
mov
shlb
mov
ljmp
xor
ja
out
push
out
xor
cmp
dec
cmp
push
pop
ja
pop
jp
push
pushf
popf
out
mov
xlat
inc
jecxz
lahf
scas
cmpsb
sbb
or
sub
inc
mov
jns
cmp
sub
inc
lods
mov
imul
hlt
xor
out
shll
jle
inc
ja
pop
xor
sub
repz
pop
rcr
mov
aas
enter
and
cwtl
movsb
stc
cld
les
out
lea
mov
lcall
cmc
sahf
cmpl
stc
jno
mov
push
mov
std
imul
xor
int3
push
clts
jmp
rolb
lock
loopne
add
adc
data16
in
lret
jg,pn
mov
iret
std
in
fsubrs
jo
pop
pop
dec
fadds
jmp
fcoms
cmp
stos
add
imul
push
scas
or
or
push
in
jns
lret
sbb
insb
shrl
es
in
jnp
sti
sbb
adc
mov
dec
add
adc
aaa
rorb
sub
xchg
cld
ss
xchg
or
or
add
les
stc
sub
ret
cmp
popa
lock
stos
test
mov
xor
cmp
jecxz
adc
insb
fstpl
mov
leave
and
decl
das
add
lret
cmp
adc
fdivr
cmpsl
jnp
dec
xchg
push
mov
fcomp
push
rcrb
ljmp
push
cmpsb
pop
imul
inc
sub
fiadds
jno
fdivs
aad
lds
sub
and
mov
sti
call
xchg
push
cmc
mov
xchg
mov
leave
sti
mov
cli
aaa
daa
ja
push
or
pop
out
int3
nop
push
xor
xchg
mov
inc
cmp
mov
mov
bound
mov
mov
ds
stos
mov
mov
int
jb
dec
imul
dec
orb
xor
sar
popf
and
cltd
imull
xchg
xor
and
xor
faddl
jnp
pop
mov
js
cli
cmp
inc
insl
cmp
mov
lahf
xor
test
jge
xlat
jge
xor
and
push
or
out
das
inc
adc
stc
lods
in
test
outsl
jb
fs
cmp
enter
dec
pop
loope
add
jl
rcrb
pop
clc
or
jg
mov
push
pop
inc
cmpb
mov
inc
cmp
add
mov
inc
les
fdivl
jle
fildl
mov
inc
sbbl
lods
test
xchg
cmc
cli
jl
lahf
dec
test
pop
xchg
lods
rcrb
negl
push
xor
repnz
xchg
stos
cmpsb
popa
jo
dec
add
jge
int
int3
adc
por
or
test
or
daa
push
paddusw
jecxz
mov
adc
stc
test
sub
iret
cltd
test
or
xchg
movsb
dec
jno
test
pusha
enter
mov
fcoml
adc
scas
or
mov
xchg
in
xchg
pop
jb
dec
push
jge
scas
lret
jle
add
lahf
cmp
fstpt
adc
jle
loope
pop
in
xchg
repz
in
fists
dec
dec
push
inc
push
fsubs
jns
cltd
cmp
inc
in
mov
pop
dec
pop
into
xor
mov
mov
dec
and
inc
jbe
push
cmpsl
push
dec
add
xchg
mov
jge
inc
add
push
ficoml
inc
dec
mov
mov
xchg
or
xor
add
mov
lret
shrb
xchg
nop
jns
mov
xchg
or
cmp
ret
lods
push
push
roll
out
daa
mov
lock
push
push
gs
testb
push
mov
lock
sbb
xchg
movsl
push
frstor
fwait
or
mov
xchg
sahf
mov
push
fldt
jmp
cli
jle
fnsave
cmp
sub
mov
xchg
xchg
push
cs
mov
test
pop
add
fisubrl
dec
hlt
lock
xchg
aad
push
movsb
jg
cmp
push
pop
rcrb
cmp
filds
jmp
ljmp
leave
mov
push
cmp
fstpl
fnstcw
inc
std
aas
xchg
mov
xor
mull
xchg
and
scas
aaa
es
mov
mov
into
mov
mov
or
sub
shlb
cmp
and
mul
mov
inc
aam
push
daa
pop
sahf
cld
mov
pop
les
std
les
push
mov
jno
ret
jp
mov
and
pop
jae
fimull
push
aas
xor
dec
add
out
sub
andl
and
shl
es
lcall
jl
lock
ffreep
lods
aaa
jg
inc
sub
and
repz
push
test
fcoms
aad
es
jecxz
mov
adc
sub
je
aas
jno
mov
movsb
sarb
inc
arpl
inc
fmul
test
ret
aas
add
ret
sub
jae
mov
adc
jge
pop
popa
sbb
add
cmp
shrl
cmc
sbb
in
cmp
xor
jnp
lahf
out
sbb
in
add
xlat
cli
xor
add
leave
xor
lods
rep
jl
dec
jmp
das
mov
pop
cltd
pop
shrl
xchg
cmp
out
add
aad
loop
cmpsb
jg
xor
mov
das
ja
adc
clc
dec
sub
orl
inc
push
or
insb
pop
inc
je
jo
popf
adc
out
cltd
mov
xchg
mov
adc
inc
jmp
shl
pop
mov
popa
cmp
pop
call
fidivrs
repz
mov
jg
dec
ficoms
scas
sub
outsl
mull
jne
inc
stos
les
push
test
fadds
fimull
ss
stos
cmpsl
jle
xor
rcrl
xor
iret
pop
imul
inc
pop
mov
hlt
scas
xchg
cmp
stc
mov
push
jb
mov
mov
xor
push
adc
jmp
or
cwtl
jb
pusha
incl
pushf
mov
xchg
insl
pop
enter
ljmp
lcall
cmp
sub
pop
and
xchg
scas
mov
dec
push
mov
push
xchg
test
jo
xchg
bound
mov
popf
and
push
not
dec
xchg
gs
rcr
pop
add
ficompl
xchg
and
stos
or
mov
pop
dec
add
adcb
add
inc
pop
popf
push
scas
mov
xor
pop
push
addr16
bound
cli
ds
fdivp
fldt
mov
ja
lea
sub
sbb
sahf
out
jmp
and
ret
sahf
jge
jbe
mov
test
sbb
mov
mov
or
ret
mov
lods
sarb
cmp
pop
mov
clc
in
lea
jecxz
in
movsl
sbb
push
cmp
ljmp
sub
lret
mov
movsb
xchg
jno
adc
mov
insl
in
fists
lock
das
push
dec
aaa
and
mov
imul
adc
adc
or
mov
or
sar
jge
repz
mov
adc
adc
cwtl
out
pushl
jno
sub
sub
jo
and
divl
cmp
dec
lds
mov
xor
lcall
xchg
test
out
insl
push
fistps
jnp
add
sarl
sbb
les
cld
sub
in
jmp
push
mov
add
jb
pop
icebp
pop
push
cmp
mov
js
imul
test
clc
xor
out
jns
imul
lock
or
sbb
mov
cmpsl
mov
pushf
out
push
add
imul
and
push
ljmp
scas
or
mov
sbb
fisubs
movsbl
sub
cmp
adc
mov
xchg
push
and
mov
inc
pop
int
jge
cli
imul
cltd
inc
leave
ja
xchg
or
adc
inc
mov
ljmp
xchg
pop
mov
out
aaa
sub
int
repz
notb
jae
sbb
xor
addr16
out
mov
jmp
or
mov
fisubrl
adc
jmp
enter
loop
xor
sbb
push
add
jns
imul
add
cwtl
shl
or
popa
sbb
into
stos
js
inc
sbbb
jmp
jl
pop
mov
lea
daa
loop
testb
cmp
pop
jecxz
push
xor
mov
cs
ss
nop
es
out
leave
sahf
loopne
out
dec
jns
incl
push
rclb
mov
adc
in
dec
mov
aam
imul
into
sbb
in
jge
cmp
jbe
orb
xor
cmc
int3
flds
icebp
out
ret
lock
xchg
cs
lret
fmuls
lock
mov
adc
jno
lock
sahf
sub
push
mov
adc
sub
and
rolb
adc
push
and
lods
aas
pop
mov
in
cmc
je
test
mov
push
imul
jnp
pop
xor
out
push
adc
xor
fimuls
or
dec
pop
push
and
cmc
mov
sub
jnp
cli
gs
or
adc
aas
adc
cmp
notl
pop
jge
dec
and
out
push
and
sbb
push
test
jmp
inc
sub
dec
imul
repz
and
jne
stos
daa
fdivs
scas
sbb
or
add
pushf
inc
iret
inc
ja
jb
mov
cmp
mov
push
xchg
pop
movd
pusha
insl
add
lds
or
bound
add
or
nop
clc
xchg
mov
mov
pop
inc
movsb
lods
outsl
stc
jae
shl
pop
dec
jbe
push
push
jnp
sub
push
xor
sub
push
ret
jg
xchg
sub
aam
dec
lahf
stc
es
adc
or
mov
mov
and
test
lret
sahf
test
pop
push
jne
mov
lahf
push
mov
cmp
mov
in
sub
mov
and
dec
cmp
aam
imul
pop
rep
sbb
jmp
jae
stos
adc
mov
shlb
jl
pop
rcrl
shufps
jmp
adc
fildl
xor
adc
jo
lods
pop
jnp
mov
repnz
imul
lcall
lcall
adc
jne
retw
es
fnstcw
jo
repz
mov
lret
insb
and
xchg
push
inc
add
mov
fs
fdivrp
cmc
jbe
cmpsl
push
hlt
xor
ds
lea
xchg
adc
mov
shrl
xorb
sub
fs
add
pop
aaa
mulb
push
jne
inc
in
shlb
sbbl
sbb
and
jnp
or
outsb
loopne
fsubl
push
inc
leave
aad
mov
inc
fisttpll
fsubrs
cld
fidivs
mov
sub
pop
or
dec
xchg
loop
dec
mov
pop
add
jecxz
loopne
inc
mov
repnz
ror
mov
xor
xchg
popf
or
xchg
in
mov
rolb
or
dec
mov
pop
cmp
imul
xor
jae
das
shrb
fcoml
xor
adcl
adc
jl
cmpsl
or
movsb
pop
leave
xchg
pop
pop
dec
mov
insb
out
cmc
outsl
adc
and
fbstp
dec
loope
xchg
mov
idivl
add
shrb
clc
xor
popf
mov
out
or
outsl
pushl
in
aam
push
adc
xchg
repnz
sbb
fcmovbe
lods
cmpsb
fisttps
push
roll
xchg
ret
push
das
jbe
and
pop
leave
xchg
sub
pop
nop
jns
aas
push
jl
cmp
popf
aaa
insb
jmp
and
pop
daa
dec
fsts
aad
shll
mov
in
push
xchg
leave
mov
cs
mov
icebp
sbb
jno
into
movsb
push
cmp
jmp
pop
les
arpl
dec
mov
sbb
imul
or
jbe
pop
cmp
cltd
aaa
gs
mov
test
scas
loop
icebp
dec
jae
jae
bound
add
sbb
imul
xor
subb
sbb
bound
lock
addr16
stc
mov
dec
lods
sbb
jge
shll
jnp
loope
pop
mov
inc
in
xlat
inc
pop
stos
lods
adc
and
push
jmp
xor
cli
loop
pop
inc
arpl
iret
mov
test
or
test
inc
push
int
sbb
inc
pop
stos
popf
push
shr
cwtl
loop
inc
xchg
push
fmuls
lcall
add
add
ficoml
add
inc
dec
push
imul
cmc
ja
push
or
mov
insb
fcomps
dec
adc
sbb
or
xor
aaa
hlt
xor
inc
mov
mov
mov
push
and
lock
lret
filds
push
stc
test
int
fdivrs
mov
test
cmpsb
popf
sub
adc
ljmp
adc
mul
mov
inc
mov
dec
in
icebp
mov
adc
scas
xchg
jmp
jns
dec
fnstsw
push
cmp
add
push
into
xor
stos
jns
js
jb
inc
into
jge
fstps
xor
push
sbb
sbb
cmp
mov
adc
sub
add
incl
fildll
cli
mov
inc
cmp
insl
call
jp
ds
pop
jp
lea
lcall
jb
cmpsl
pop
mov
out
inc
add
ret
sub
les
js
xchg
in
iret
jl
and
xchg
mov
scas
imul
sub
insl
cmp
outsl
sbb
decl
mov
xchg
jge
adc
stc
leave
push
arpl
sub
mov
xrelease
mov
mov
ja
sbb
cmpb
adc
in
es
sbb
scas
cld
xchg
iret
scas
mov
rcll
mov
movsb
ret
arpl
jl
adc
jmp
adc
test
mov
xchg
mov
in
mov
sub
xchg
ficoml
sti
push
gs
or
rorl
bound
cwtl
leave
mov
lods
sub
xchg
xchg
jns
jp
push
jmp
xchg
add
int
sarl
loope
in
test
nop
cmp
pushf
ficompl
add
in
sub
leave
inc
divl
sbb
out
mov
mov
cld
inc
cmc
fdivs
pop
imul
or
movb
dec
imul
mov
movsb
mov
popa
aad
jnp
jne
imul
adcl
and
addb
out
loopne
mov
loop
mov
scas
dec
push
add
je
in
dec
lahf
mov
imul
cltd
inc
inc
push
jl
jl
and
insl
fisubs
sub
push
sbb
pop
mov
mov
inc
sbb
inc
adc
lea
and
roll
in
aaa
dec
xchg
or
rclb
icebp
cmp
jo
add
inc
cmpsb
shrl
lock
jne
fnstcw
xor
mov
xor
sbb
pop
sahf
fdiv
jle
aad
jae
jno
dec
xor
aam
mov
xor
mov
push
pop
std
fwait
repnz
fptan
jo
xor
shrl
adc
and
test
popa
cmp
sti
movsl
xor
test
pop
stos
lods
xchg
mov
fbstp
nop
xchg
daa
mov
mov
ds
cs
dec
jle
pop
scas
dec
add
nopl
repz
in
push
insl
pop
nop
shll
test
push
xchg
push
ret
dec
filds
shr
jg
out
cmpsl
push
call
sbb
bound
push
jg
xchg
sbb
pop
es
ficoml
xor
lds
xor
inc
sbb
call
loop
cmpsb
mov
jmp
aam
add
jmp
mov
jg
push
inc
xor
leave
int3
cli
sub
cld
adc
es
xor
clc
in
adc
jnp
arpl
and
fsubrs
mov
inc
mov
mov
neg
fsubl
mov
cmp
cmc
and
stos
fnsave
adc
fcompl
popa
out
scas
mov
pop
das
cmpsb
mov
repnz
mov
gs
xchg
repnz
sbb
and
and
or
sti
mul
ljmp
dec
outsb
fisubrs
sbb
or
int3
cmp
push
fdivrl
stc
cmp
push
cmp
rcrb
dec
pop
outsl
cld
stos
dec
ret
mov
lret
xchg
int3
pop
mov
aad
pop
and
push
lea
movsb
mov
add
lods
fstl
mov
adc
jae
pop
loopne
shl
lcall
fs
adc
clc
sub
pop
add
enter
hlt
cltd
jg
out
sub
in
ss
mov
mov
int
ret
xchg
mov
mov
jmp
sub
cmc
pop
inc
push
roll
lcall
xchg
loopne
cmp
sub
gs
in
call
mov
push
loopne
inc
adc
aad
movsl
mov
ret
mov
add
aad
mov
push
xchg
pop
cli
leave
xlat
lahf
andb
rolb
cltd
in
cmp
test
ret
sbb
xchg
shll
jno
fsubs
xchg
enter
ja
mov
lods
jns
leave
mov
insl
aad
dec
mov
dec
mov
andb
in
adcb
ret
lock
push
int
add
jp
les
gs
xor
mov
fdivrp
mov
jnp
jnp
movb
pop
push
jecxz
in
adc
xchg
fwait
jl
push
inc
jae
leave
cmc
and
mov
adc
mov
jmp
mov
das
dec
mov
sbb
sbbl
shrl
add
cmp
lods
in
adc
js
sti
xchg
sub
fwait
jno
xor
pop
mov
mov
xor
mov
jle
add
mov
mov
ja
dec
mov
sub
out
mov
pop
pop
std
fiadds
popl
xchg
cwtl
adc
out
icebp
sbb
and
pop
jp
cmp
and
mov
add
subb
cmc
ljmp
mov
add
jae
and
stc
das
ja
into
cltd
fsubrl
dec
fiadds
int3
mov
scas
push
rcrl
adcb
test
out
push
mov
add
in
pop
cmp
xchg
ret
mov
sbbb
dec
or
xor
xchg
iret
inc
dec
cs
popa
mov
lret
out
ret
call
adc
sbb
push
sbb
movsl
fidivrs
ljmp
test
mov
out
cmpsl
and
into
cmp
fisubrl
xor
in
inc
in
repz
les
adc
insb
xor
scas
adc
jae
push
sti
insb
xor
out
fdivrl
daa
leave
pop
or
pushf
sub
out
fidivs
mov
call
js
push
loop
sub
mov
mov
pop
add
sbb
in
je
mov
pop
into
mov
jecxz
loopne
in
std
loope
pushf
fnstsw
rolb
bt
in
or
lcall
scas
loopne
push
and
mov
xor
mov
sbb
lret
insl
mov
xlat
in
jecxz
push
das
sahf
or
ss
jo
sti
xor
xor
sub
inc
and
je
mov
cmp
mov
jmp
or
lods
push
push
pop
movsb
cmpl
lahf
mov
push
sti
mov
xchg
dec
mov
or
push
mov
shlb
push
cmp
xchg
lcall
leave
adc
mov
loope
lods
sub
out
jbe
imul
imul
pop
rclb
aam
xchg
in
nop
push
repz
imull
cltd
sub
inc
shlb
adcl
out
jp
clc
stos
inc
cmc
aaa
popf
push
jb
sbb
cwtl
fildl
in
mov
pop
xchg
and
cmp
push
roll
jns
aas
fldt
clc
dec
fdivrl
addb
push
in
dec
add
inc
push
push
inc
push
incb
sbb
inc
pop
lods
pushl
aad
aad
jp
sbb
push
push
ljmp
pusha
jmp
cmpsb
ret
les
mov
scas
out
or
xor
xchg
out
nop
push
icebp
out
mov
dec
sbb
add
adc
loop
inc
test
cmpsb
xor
sub
jne
xorl
xor
pusha
mov
inc
xchg
push
scas
and
insl
shrb
jns
mov
add
pop
pop
int
movsb
idivl
and
insb
lret
leave
cmp
or
adc
fisttpll
lcall
xor
cmpsb
mov
mov
or
call
jb
pop
inc
sarb
pusha
jmp
push
int
mov
rol
jle
pop
jnp
neg
rsm
cld
test
xor
jge
push
in
xor
xor
mov
das
clc
jo
jns
adc
or
pop
lock
outsb
jns
test
xchg
hlt
testl
lahf
in
sahf
pop
mov
inc
out
add
cmpsl
int
push
jg
hlt
popf
xor
mov
adc
mov
outsb
xchg
xchg
jae
mov
sbb
into
ss
test
push
and
je
mov
jle
fidivrs
iret
sbb
mov
or
das
add
fdivl
es
mov
mov
arpl
xchg
out
stos
adc
fwait
sbb
and
dec
ja
inc
mov
jp,pn
rorb
and
leave
inc
gs
fcompl
mov
loopnew
sbb
cmp
jno
sbbl
jecxz
rol
mov
dec
jno
xor
mov
movups
cld
jge
ja
int
inc
aaa
aas
jb
mov
and
or
fldt
lcall
add
inc
mov
xchg
sub
sti
pushf
pop
stos
and
sub
or
rcrb
lret
xchg
pop
imul
cmp
mov
jp
in
xchg
or
mov
jo
sub
jns
dec
jmp
push
in
repnz
jg
sbb
stos
or
lods
xchg
scas
jbe
jne
mov
xchg
hlt
mov
cmp
pop
push
insb
jae
sahf
test
jle
arpl
jbe
jge
mov
push
imul
xchg
stos
push
sbb
hlt
cmpb
lcall
and
adc
adc
dec
mov
xor
pop
add
xor
dec
lods
sbb
inc
pushf
mov
xor
loopne
jne
dec
or
inc
push
xlat
and
pop
icebp
pushf
hlt
cmp
cmpsl
pop
fidivrl
pop
mov
lods
lret
fdivs
dec
jecxz
aaa
dec
jns
and
sbb
mov
in
add
pop
gs
ja
pushf
sbb
cmp
mov
in
dec
call
bound
negl
and
lcall
jnp
jg
xor
cmp
insb
lock
mov
ret
fildll
mov
pop
clc
inc
icebp
mov
out
inc
jnp
and
mov
dec
jno
int
mov
push
pop
jo
ror
les
jp
push
inc
ret
sbb
xor
out
and
or
sbb
sarb
aad
mov
jnp
fcmovbe
insl
sbb
jns
pop
xor
mov
inc
rorb
mov
test
inc
mov
movsb
scas
das
adc
aaa
cmp
mov
pop
mov
mulb
inc
pop
sub
adc
sbb
sub
mov
dec
arpl
push
imul
sub
arpl
popf
addr16
dec
adc
shll
std
not
bound
mov
test
ss
shl
shrl
aad
test
mov
enter
mov
out
sar
xor
testl
push
mov
pushl
add
shr
dec
rolb
scas
pop
outsl
dec
shll
cmc
mov
mov
arpl
movl
push
in
cmp
ds
inc
sarb
test
das
ret
push
adc
inc
pop
mov
lcall
inc
inc
add
and
and
out
adc
test
ficoml
mov
cmp
jae
fisubrl
je
pop
and
roll
sub
adc
std
inc
mov
jg
loop
es
xlat
in
mov
jge
add
nop
sub
fwait
xchg
cmp
ffree
add
push
loope
cmc
xchg
or
mov
cld
lock
or
cmp
movsl
out
in
mov
rcl
jno
inc
add
out
not
jbe
fcoml
stc
psubd
mov
imul
pop
cmc
and
mov
aaa
andl
pop
test
or
push
cmp
nop
push
loope
cmp
sub
outsb
dec
push
shlb
dec
out
cmpsb
mov
add
adc
pop
and
add
jmp
adc
cmpsl
cmp
aam
insl
fwait
in
popa
sub
rorl
add
dec
xlat
cmp
in
loopne
pop
nop
out
cltd
dec
mov
and
data16
nop
enter
jge
or
inc
push
cld
shll
ret
loope
movsl
sub
jno
loope
and
cmp
jge
jg
pop
movsb
mov
mov
fisubrl
jns
push
pop
xor
inc
pushf
or
fdivl
pop
nop
push
loopne
adc
xchg
and
jbe
adc
lock
cltd
mov
add
clc
push
mov
lods
or
xor
jmp
xor
jbe
push
mov
icebp
push
mov
cltd
sbb
pop
xor
pop
xchg
movsl
fiadds
sbb
sbb
pop
push
adc
ret
inc
in
cld
mov
pop
inc
push
das
sbb
xlat
cmp
dec
mov
push
cmp
pop
sbb
lods
pop
cmp
dec
or
lock
imul
mov
inc
sub
das
mov
cmp
mov
inc
push
sarl
adcb
fwait
stos
es
mov
sarl
xor
add
jbe
mov
jns
sahf
out
aaa
adc
mov
jne
and
mov
cmp
or
ret
sbb
aas
push
adc
jg
adc
xor
fsubrs
pop
es
fists
sbb
daa
inc
roll
cmc
cld
or
repz
mov
and
pop
movsb
and
jle
mov
iret
fsts
pop
bound
add
stc
dec
xor
or
pop
mov
mov
and
dec
es
inc
adc
repnz
fcompl
mov
gs
xor
push
testb
sbb
sub
lcall
rcrb
ss
cmp
or
mov
jbe
movb
sub
lret
jmp
sarb
sar
inc
testl
or
jmp
mov
inc
in
mov
mov
jmp
xchg
pop
jne
pop
dec
out
dec
in
pushf
lret
outsl
push
mov
clc
les
es
pop
cmpsb
inc
mov
cmc
rorl
or
push
cmp
imul
xor
pop
inc
cmc
pop
add
mov
data16
adc
shl
mov
cmp
adc
jle
lret
jge
lret
sub
pushw
add
orl
out
fistps
lods
and
rclb
sbb
cwtl
xchg
dec
scas
arpl
dec
cmp
loop
jo
push
test
dec
in
lods
test
rorb
pusha
lods
ja
vcomisd
add
fidivrs
mov
jne
add
idivb
add
sbb
loope
std
je
imul
sub
xchg
lcall
into
test
adc
insb
je
push
hlt
xchg
lods
in
mov
cltd
int
jb
outsb
dec
in
xor
sub
out
iret
mov
add
mov
sub
sbb
inc
push
sbb
popa
rcrb
cmpsb
rorb
cld
push
imul
dec
dec
jnp
xchg
popf
out
add
push
push
and
idivb
jbe
cwtl
sub
mov
and
mov
inc
push
xlat
mov
les
popa
rorb
cmpsl
xchg
aam
jno
out
sbb
cmp
leave
adc
cmpsb
lret
data16
push
jne
mov
sub
add
push
outsb
mov
add
xchg
out
push
mov
and
cwtl
out
out
mov
subl
daa
testb
mov
cld
add
and
in
mov
ljmp
cmpsl
xchg
pop
loope
stc
xor
faddl
out
xchg
xor
js
sbb
add
pop
sbb
sbb
or
call
mov
sub
sub
dec
mov
xchg
mov
xor
mov
xor
jae
sbb
pop
mov
sub
jno
cltd
decl
enter
cmp
pop
das
pop
ss
mov
xor
mov
fadds
cmc
xchg
xchg
loope
movsb
fbstp
cmp
rolb
in
pop
xchg
repz
mov
int3
push
pop
mov
jbe
cld
pop
sbb
cmp
arpl
push
aaa
js
push
lds
shlb
inc
gs
lahf
push
xchg
pop
pop
test
sbb
icebp
or
loopne
jmp
mov
fsubs
sbb
fcomps
jne
jmp
mov
cli
push
nop
mov
adc
mov
movsb
xor
leave
sbb
adc
jbe
lods
xchg
in
loope
mov
inc
shll
neg
or
xchg
arpl
adc
sarl
push
into
push
imul
mov
mov
aad
jecxz
inc
popf
je
mov
add
and
and
loop
jmp
leave
pop
push
sbb
or
mov
int
ljmp
test
mov
mov
mov
mov
out
or
xchg
adc
inc
inc
jae
cmp
jns
in
dec
add
jge
mov
lea
and
nop
or
sbb
into
shlb
cmp
sbb
dec
and
enter
je
mov
mov
xlat
jg
xlat
js
push
aam
lock
add
jo
push
sub
and
aaa
add
movsb
xor
pushf
and
mov
mov
mov
push
mov
sbb
or
ror
dec
out
mov
aad
cmp
jmp
pop
adc
pop
inc
into
mov
add
inc
out
inc
int3
xchg
sarb
jbe
cmpsb
in
out
inc
shrb
shlb
mov
daa
loop
jl
pop
jg
in
xchg
add
push
xchg
push
popf
sub
cmp
xchg
fcomps
inc
roll
call
sub
lods
cmp
pusha
aaa
jne
xchg
mov
sub
and
repnz
cmp
mov
cmp
cmp
xor
out
shlb
jmp
fnstenv
cs
sub
ljmp
and
adc
push
mov
mov
inc
callw
cmp
mov
dec
outsl
stos
es
jb
inc
cltd
sbbb
movsb
cltd
add
ds
fisubl
loopw
pop
jns
rolb
push
decb
aas
or
jl
repz
ret
incb
inc
movsb
and
add
push
fsub
shlb
movsl
push
loop
mov
iret
icebp
xor
in
pop
sub
rcrb
mov
add
jge
dec
jo
repnz
pusha
popa
push
fmuls
inc
sbb
int3
jl
ja
pop
mov
adc
jno
xchg
rcrl
cmp
leave
adc
sub
bound
out
daa
pop
outsl
in
data16
inc
pop
notb
adc
xchg
popf
rorl
mov
ficompl
pop
mov
enter
mov
movsl
cmp
fildll
lahf
xchg
clc
enter
cld
adc
mov
xor
lock
or
fwait
das
mov
cmp
test
inc
leave
or
repnz
xchg
mov
mov
inc
mov
fsubrs
aaa
mov
sub
mov
push
add
add
je
cmpl
cmp
and
lcall
sub
push
push
mov
insl
int
push
in
dec
fistps
test
inc
cmp
or
pop
xchg
rcrb
mov
push
jl
aam
add
dec
fiaddl
pusha
shll
push
xor
jno
scas
pop
pop
clc
and
mov
jbe
mov
std
ret
push
adc
popl
aaa
test
inc
xchg
add
mov
push
outsl
sbb
xchg
stc
andb
xor
xchg
outsb
loopne
xchg
and
cmp
ret
adc
stos
stc
push
xchg
sbb
fwait
pop
cmp
add
cli
jo
inc
dec
loopne
add
pop
add
mov
idivb
xchg
cmc
mov
mov
and
cmp
imul
add
aad
out
xchg
cwtl
push
lret
or
inc
ret
xchg
jge
push
push
in
xchg
andb
cli
jae
aam
mov
addl
insb
mov
data16
mov
add
jno
sub
xor
test
adcb
push
jno
lds
neg
cmp
push
aam
inc
icebp
xchg
imul
sub
outsl
ror
sbb
xor
int3
cmpsb
mov
sbb
and
out
add
sub
stos
imul
inc
push
fisttpl
stos
xchg
rep
loope,pn
or
xchg
inc
xor
fistpl
add
repz
lret
push
or
jge
sub
pop
jge
scas
leave
dec
cmpsl
js
cmp
cmp
dec
pusha
fsts
lock
lret
pop
and
mov
xor
clc
out
movsb
mov
rorl
xlat
or
mov
push
aad
mov
sbb
push
cli
sbb
pop
add
or
out
xchg
inc
inc
mov
outsb
in
cs
adc
mov
mov
xor
test
mov
hlt
ljmp
daa
and
and
adc
jbe
out
ds
pushf
lock
push
sub
lret
xchg
lahf
mov
xor
mov
push
inc
dec
fwait
pop
ret
test
aas
sub
xor
mov
cmp
aas
xlat
adc
jne
push
xchg
xor
es
sub
movb
sarl
lret
sahf
xchg
jle
sub
aaa
iret
mov
mov
cmpsb
cmp
dec
and
rolb
or
xchg
push
negb
mov
shr
js
shll
outsl
mov
cmp
cmp
sub
xor
lock
and
sar
stos
scas
xchg
push
fdivrs
dec
scas
sbb
jnp
sbbl
add
mov
in
insb
movb
or
lods
sti
add
cmp
stc
add
fbld
cmp
leave
loop
mov
outsb
lods
cmpsb
xchg
and
lds
cwtl
stos
clc
stos
or
add
pop
loopne
and
adc
nop
xchg
outsl
clc
mov
mov
movsb
std
sti
mov
sbb
insl
mov
or
or
ljmp
sbb
ret
jne
pop
and
pop
pop
cmp
dec
outsl
xchg
dec
xor
mov
add
mov
cltd
mov
icebp
push
sub
dec
fisubrl
inc
hlt
das
sub
cmpsl
test
ss
push
or
ret
jl
rol
xor
xchg
dec
and
push
scas
mov
ja
repnz
pushf
xor
subl
dec
push
fs
jnp
leave
cs
add
in
fmuls
cld
pop
cmc
subl
cmpsl
xchg
xor
daa
mov
dec
pop
iret
add
sub
or
loop
movb
xchg
mov
das
shl
and
xor
and
and
pusha
into
es
push
xor
sub
cmpsl
in
dec
bound
mov
sub
ja
jbe
mov
xorl
in
xlat
stc
ljmp
sarl
sti
stos
fcompl
adc
cmp
cs
jp
dec
jbe
ss
imul
or
pop
pop
pop
mov
mov
pop
or
adc
shr
call
jle
fldt
ffree
sbb
fyl2x
pusha
push
shl
lcall
les
mov
cmp
das
dec
jp
loope
mov
enter
cmp
les
mov
push
jo
enter
lock
nop
test
xchg
xchg
pusha
test
pop
jg
jge
cltd
lods
andl
loop
mov
fisubs
push
fs
xchg
fwait
loope
jae
popa
sbb
imul
jp
cmp
mov
or
loope
mov
sti
test
sbb
add
mov
xchg
cmp
fwait
mov
out
pop
dec
or
movsl
cs
xor
mov
sti
jmp
aaa
inc
mov
inc
and
andb
out
pusha
enter
iret
xor
pusha
xchg
dec
cmc
mov
mov
push
mov
nop
leave
movsl
dec
jnp
cltd
sub
mov
pop
cmp
pop
out
std
adc
jle
aam
movb
repz
out
ret
adc
aaa
push
in
mov
inc
scas
test
jae
sbb
mov
ja
fcmovnb
out
sub
mov
cmpsl
into
cmp
lods
gs
pop
insl
mov
ret
test
ljmp
cmpsl
inc
xor
lret
fwait
add
lret
out
add
push
divb
mov
fidivs
rclb
xchg
xor
sahf
int3
xor
clc
jp
pop
sbb
xor
add
pusha
sbb
fcoml
sbb
cmp
out
movsb
stos
pop
adc
out
cmp
sbb
dec
mov
mov
and
push
fisubrs
xchg
pop
add
or
pusha
cmpb
in
outsb
mov
jbe
shr
aam
sbb
xor
xchg
or
push
sub
ds
mov
push
insl
ja
jmp
cmpsb
arpl
add
ret
inc
sbb
lods
mulb
packsswb
xor
mov
fimuls
test
pusha
ret
cltd
xor
in
dec
aaa
push
es
xor
popf
mov
push
pop
jmp
arpl
repnz
test
xlat
repz
pop
dec
out
cmp
lea
subb
imull
dec
fdivrl
out
xor
sub
and
add
imul
cs
push
fdivrs
stos
adc
push
out
std
pusha
testl
push
test
mov
shrb
dec
push
aas
data16
add
jb
movb
movsb
aaa
sbb
xor
jns
and
sub
in
mov
cmp
repnz
and
test
cmp
ror
jns
xchg
mov
leave
mov
in
xchg
outsl
pop
popa
das
scas
and
and
in
bound
arpl
or
scas
cwtl
mov
sbb
imul
popa
rorb
loope
and
mov
jmp
ljmp
sbb
jnp
mov
loop
lcall
adc
mov
xchg
or
adc
ret
std
cmp
xchg
mov
les
int
adc
cmpsl
mov
pop
sbb
stos
sbb
pop
loope
push
add
adc
imul
xchg
xor
mov
fdivrs
fists
push
lret
adc
in
mov
and
xor
adc
fisttpl
or
out
sarl
cmc
ret
fisubs
lcall
divb
dec
and
das
sub
dec
cs
mov
fdiv
mov
mov
addr16
and
mov
mov
scas
rolb
stos
xchg
pushf
push
cmc
pop
add
sub
popf
fwait
das
cmp
adc
test
or
movsl
lock
lock
repnz
lock
xchg
outsb
test
enter
dec
and
mov
jb
cmp
jle
and
lods
mov
mov
jns
inc
fimull
mov
loope
or
rcrb
push
mov
lods
sahf
mov
addl
jecxz
mov
ficoms
addr16
inc
sbb
repz
movsl
pushf
dec
fscale
pop
push
sub
mov
adc
and
and
lret
aad
pop
cltd
lea
mov
lea
fists
test
notl
inc
out
in
testb
adc
mov
insb
cwtl
adc
sub
sarl
inc
jg
mov
int3
or
dec
icebp
mov
roll
cmc
ljmp
lea
adc
inc
out
sub
repnz
cli
sbb
jbe
cmpsl
jl
pminub
pop
mov
xorl
test
mov
cs
imul
adc
call
jg
sub
in
mov
xor
insb
out
sbb
inc
mov
mov
pusha
add
out
mov
mov
aas
push
sub
in
cmpsb
mov
testl
dec
int
cmp
sbb
sbb
scas
fcoms
mov
fisubrl
jo
pop
ficompl
mov
out
and
gs
mov
or
je
and
lret
mov
stos
jo
ds
xchg
xchg
rcl
lret
dec
cmpsb
daa
cli
leave
ds
push
popf
mull
sbb
adc
mov
push
jae
mov
gs
mov
int3
addl
push
int3
jo
push
nop
repnz
cmpsl
mov
fnop
shlb
mov
js
push
test
pop
pop
add
pop
rcrl
lods
sub
add
lods
fwait
push
and
fmull
xchg
fcomps
pop
sbb
xchg
sbb
pop
outsl
into
sbb
cltd
daa
out
xchg
jmp
in
dec
in
loop
add
dec
aas
pop
lods
lret
lahf
push
arpl
xchg
std
repz
fsubl
jge
in
xor
loopne
xchg
iret
xor
mov
pushf
xchg
scas
out
jge
jmp
popa
cwtl
push
push
negl
into
fcomi
test
mov
lea
and
shlb
into
push
xorb
mov
mov
stc
inc
mov
adc
lea
pushf
les
add
ret
out
fwait
cmp
cld
icebp
sub
cmpsb
sub
mov
xor
mov
in
pop
nop
add
pusha
inc
cmp
pop
add
mov
dec
jne
and
jno
ljmp
mov
aad
inc
lcall
and
mov
lea
and
loopne
test
leave
or
scas
aam
ss
cmpsl
aas
cmp
test
pusha
xor
stos
or
dec
mov
and
and
add
repnz
add
hlt
or
cmp
mov
dec
or
mov
mov
mov
pop
mov
push
add
cwtl
leave
sbb
sub
mov
fisttps
push
sub
cmp
lcall
lret
ljmp
mov
movsb
jp
push
lret
mov
in
dec
push
sti
daa
adc
add
mov
and
repz
into
sub
mov
sbbl
lret
ja
and
mov
xchg
push
mov
xchg
or
pop
and
sbb
push
mov
jl
gs
hlt
cmp
sub
push
mov
pop
mov
push
repz
pop
mov
pushf
call
xchg
inc
mov
push
aas
ds
out
aam
pop
ja
jecxz
mov
lahf
sbb
jg
add
call
sbb
inc
cmpsl
lods
in
jno
cs
inc
lock
popa
sbb
call
ljmp
dec
sahf
addb
insb
aad
outsb
sarb
push
cmp
popf
leave
in
movsl
nop
mov
lret
loope
rcrb
xchg
mov
pop
inc
add
jmp
movb
jg
push
push
int3
cmpsb
fadd
mov
test
or
ja
xlat
push
push
sub
sub
pop
je
cmp
jmp
cmp
shll
or
lods
mov
cmpsl
movsl
and
inc
jecxz
aas
sbb
adc
fiadds
dec
and
pop
imul
sbb
mov
shlb
fstpt
dec
mul
aaa
nopl
arpl
leave
lock
pop
cs
mov
ljmp
ret
popf
pop
test
or
xorb
bound
pushl
fdivrs
cwtl
mov
mov
insl
adc
mov
adc
aam
daa
ror
sbb
sahf
push
dec
outsb
das
xchg
lods
dec
mov
sub
xchg
aaa
cld
fmuls
xor
adc
xchg
std
adc
push
pushf
cltd
dec
push
mov
data16
mov
in
xor
mov
into
and
and
xor
jl
and
add
mov
sbb
push
cmpl
out
jb
pop
jb
adc
or
aad
jae
add
sub
mov
jge
test
stc
movsb
out
sbb
mov
add
inc
stos
rorb
cmp
mov
mov
sbb
loope
jne
add
aaa
mov
dec
xchg
cmpsl
aam
push
cmpsb
sbb
inc
push
popa
sahf
xor
enter
rcrl
andl
out
ds
pop
xchg
fildll
ljmp
xchg
inc
push
xor
shlb
js
adc
lea
push
movsb
push
addr16
sbb
inc
loop
mov
jno
sbb
insl
movsb
and
in
sar
sub
ret
sbb
cld
popa
xor
mov
insb
add
fs
imul
ljmp
in
cmp
jl
loope
stos
push
int
out
xchg
iret
sbb
sarl
add
fnstsw
inc
pop
mov
lcall
rcr
push
jo
hlt
pop
or
loop
add
jb
aas
add
fidivrs
pop
and
sahf
adc
and
sub
xchg
push
inc
push
pop
out
jecxz
mov
popa
xchg
mov
lea
pop
cmp
mov
inc
cmpsb
cmp
jnp
divl
roll
pop
pop
hlt
or
dec
jo
sbb
out
xchg
mov
stc
test
and
xchg
jno
out
add
ret
iret
pop
mov
outsl
add
popf
sub
mov
testb
test
shlb
lahf
cli
lahf
sbb
jo
int3
das
xor
out
push
mov
aam
cmpsl
inc
loopne
in
pop
repz
int
cmpsl
stc
lahf
jns
mov
int3
pop
stos
xchg
push
cmp
out
out
jae
imul
out
xchg
clc
pop
push
push
daa
mov
rorl
inc
push
pop
out
out
xchg
jbe
jge
push
shrl
mov
add
push
mov
sub
mov
into
push
or
sbbb
mov
mov
imul
psrlq
inc
jb
daa
jge
push
sub
and
in
jge
test
clc
xorl
sahf
outsl
sub
int3
cvtdq2ps
inc
addr16
lods
shrl
insl
mov
lret
out
sbb
mov
xor
test
sti
hlt
mov
mov
add
enter
subps
push
test
dec
sub
rorl
push
lods
stos
das
adcl
sbb
push
or
xor
pop
jae
mov
inc
or
push
hlt
imul
cs
outsl
out
add
sbbb
ret
sub
or
imul
or
push
into
call
int3
mov
add
sbb
std
int
inc
cmp
shrl
pop
frstor
cmp
pop
add
repnz
fstpl
ja
rorl
jmp
mov
das
cmp
mov
into
sbb
pop
stos
jg
jmp
mov
jns
js
loop
add
sbb
and
out
stos
pop
xchg
xchg
cmp
pop
mov
sub
jo
mov
xchg
pop
jle
je
enter
pop
dec
pop
or
roll
cmp
adc
dec
xchg
jmp
or
pop
jg
jle
nop
dec
cmp
adc
nop
dec
sbb
rol
out
fdivrs
or
imul
dec
xor
sbb
mov
pop
xor
push
mov
mov
xchg
in
jns
repnz
mov
mov
inc
scas
pop
mulb
cs
outsb
sbb
xor
push
adc
add
inc
leave
testl
fdivrl
inc
dec
bnd
and
test
ds
mov
addr16
xchg
ss
imul
or
iret
xchg
in
dec
arpl
shll
jne
test
das
mov
and
inc
push
scas
stos
mov
jne
orb
mov
jns
mov
outsb
xchg
cld
jge
sbb
orb
loopne
sub
mov
sbb
dec
roll
sub
popf
mov
mov
cmp
arpl
push
cmp
mov
arpl
and
in
stos
stos
inc
popl
fdivrp
adc
or
mov
mov
test
lods
sti
or
divb
leave
stos
int
mov
cmp
mov
scas
lods
nop
sub
movl
mov
add
mov
cwtl
popf
jle
xor
sbb
push
push
mov
cmp
push
mov
roll
and
xchg
dec
ds
add
sti
loop
mov
ja
fimuls
push
jne
jb
mov
and
pop
in
fldcw
inc
movsb
inc
sub
add
dec
or
mov
pop
pop
jno
je
lods
adc
fistpll
push
stc
loop
lock
cmp
sarl
pop
xchg
sahf
push
leave
shl
dec
sti
setp
test
fistl
test
jge
loop
stos
loopne
xchg
imul
icebp
cld
push
stc
mov
lahf
test
stos
mov
scas
add
sub
xchg
arpl
push
js
aas
int3
pop
cs
fcmove
loope
mov
test
int3
out
sbb
leave
sbb
mov
adc
lods
in
xlat
and
popa
mov
add
decb
inc
pop
lock
and
mov
jp
orb
cmpl
xchg
out
sub
mov
and
pop
fimull
jbe
aaa
lea
out
add
sub
leave
mov
push
ret
daa
adc
inc
es
cli
cld
push
sarl
jp
and
mov
loope
popa
das
push
das
xchg
sarb
outsb
aam
mov
ja
or
mov
leave
add
rcr
mov
jb
mov
sarb
lock
push
push
cmp
xor
cmpsl
daa
and
les
mov
adc
push
insl
arpl
pusha
cmc
repz
or
jno
test
clc
out
jnp
add
stos
inc
jg
das
loop
insb
mov
pop
and
mov
mov
mov
rorl
jne
pushw
popa
ret
add
mov
push
push
mov
dec
andb
add
enter
fnstcw
ja
das
or
lret
mov
jmp
loopne
out
push
iret
mov
push
lds
ss
and
push
je
xor
repnz
leave
popf
mov
fistl
inc
imul
test
movsb
mov
iret
cmp
jl
lds
inc
add
jnp
mov
dec
xor
mov
iret
int
int3
xchg
imul
xor
lret
and
pop
dec
rol
sub
fdivp
xor
mov
sub
jne
dec
insl
scas
push
cmpsl
inc
cwtl
push
mov
inc
mov
arpl
pusha
test
test
jno
jno
jbe
cmp
iret
mov
jnp
rcrl
repz
mov
add
ret
adc
js
ret
sub
mov
jmp
pop
jge
xor
inc
cld
or
out
inc
jo
jnp
jl
sti
and
jno
nop
mov
cld
mov
mov
stc
call
mov
xchg
repnz
int3
fildll
adc
adcb
stos
xchg
mov
mov
enter
add
pop
jno
mov
in
lret
push
ficompl
lea
test
in
shl
ret
shll
xchg
cmp
leave
mov
cmp
mov
adc
in
pop
lods
xchg
pop
mov
mov
aaa
jp
xchg
mov
pop
sub
push
cmc
pusha
adc
aad
ds
sbb
or
mov
fldlg2
dec
xchg
int3
push
andb
jb
pusha
test
xchg
and
add
or
jae
lret
fs
not
inc
cmp
in
shlb
mov
stc
sbb
adc
pop
inc
jmp
mov
stos
jmp
call
test
push
mov
mov
aaa
and
or
movntq
out
mov
loop
cmp
cs
dec
xchg
mov
mov
sub
mov
lds
hlt
mov
mov
insl
mov
sbb
push
cmp
mov
add
sbb
popf
imul
pop
push
hlt
adc
rclb
xchg
pop
in
push
movl
test
pop
xchg
pop
and
inc
sbb
adc
sub
not
mov
daa
mov
jb
sti
add
arpl
push
iret
lahf
sti
push
push
xchg
xchg
or
sti
dec
dec
int
out
out
jne
push
arpl
xchg
out
sub
cmpsb
cmp
sbb
testl
jg
inc
jae
mov
fistps
idivb
rclb
ljmp
in
mul
insb
sti
stos
jmp
mov
mov
and
inc
mov
movl
jmp
imul
mov
mov
push
cmp
jne
jb
stos
lock
mov
loop
imul
sub
mov
jb
arpl
test
fisttpl
sarl
xor
xchg
mov
dec
mov
stc
inc
sub
or
cmpsl
mov
and
call
movsl
shrl
bound
xor
cmp
in
mov
test
das
cmp
mov
pusha
and
loope
mov
adc
sub
dec
ficompl
cmp
pop
jns
cmpsb
movl
fs
imulb
jne
icebp
mov
lods
fisttps
cli
mov
lods
cli
mov
dec
xchg
fildl
pop
xchg
sti
or
push
lods
in
xchg
fwait
mov
cmpsl
xor
cmpsb
popf
jle
mov
or
mov
mov
fldcw
mov
data16
lret
aas
sub
push
iret
lock
mov
sbb
ljmp
xor
das
push
or
ja
nop
loopne
mov
popa
jg
cmp
daa
xor
filds
popf
ljmp
adc
inc
loop
leave
adcl
push
lcall
jp
test
pop
repz
hlt
nop
add
push
in
sbb
add
and
lds
idivb
out
data16
lcall
gs
mov
inc
cmp
test
mov
ret
cwtl
pop
add
std
loop
pop
pop
imul
inc
aam
cmp
das
cwtl
xchg
lock
pop
out
fisttpl
in
in
arpl
and
mov
cwtl
int3
addr16
call
jmp
fimuls
test
lahf
mov
xor
xchg
jbe
test
jcxz
sub
cmp
cmp
dec
push
pop
repnz
in
lock
mov
sti
imull
fwait
or
sub
lods
mov
jne
mov
push
jl
sbb
dec
inc
mov
push
fnstenv
add
ret
testl
xchg
or
and
mov
add
and
out
divl
or
jmp
clc
repnz
outsl
rcl
es
jg
cwtl
cmp
mov
mov
outsl
cmp
dec
arpl
xor
out
mov
das
push
rorl
mov
lds
jmp
ret
or
pushl
shrl
scas
dec
sbbb
add
mov
and
mov
dec
repnz
xchg
cmp
sbb
and
roll
add
in
insb
pop
pop
shl
repnz
rcrb
or
stc
pop
jb
jns
out
mov
pop
mov
sahf
xchg
xchg
rcrb
or
mov
push
sti
addl
sub
or
enter
jbe
pop
mov
sbb
xchg
push
or
cmp
in
sar
or
std
loop
inc
xorl
dec
or
test
sub
mov
stos
xchg
loop
inc
dec
roll
lahf
sub
lds
fisubl
push
adc
mov
xchg
cmpsl
xor
lret
andl
sbb
daa
and
adc
adc
leave
clc
in
lcall
adc
cmp
rcrl
inc
cltd
push
ret
in
sbb
hlt
xchg
ljmp
push
insl
lods
cmp
jae
test
rcrl
loop
mov
sbb
mov
push
popa
cld
test
cmpsb
imul
rcll
cmc
adc
out
std
sbb
loope
jae
pop
fstpt
lods
fmul
mov
cmp
cmp
lods
xor
xor
xor
das
das
call
sbb
and
int
pushf
mov
fcmovu
ljmp
mov
cmc
je
out
jbe
cwtl
stos
or
add
mov
cwtl
es
jbe
jle
bound
pop
iret
imul
stos
lahf
in
xchg
shl
jne
xor
ja
out
and
add
ljmp
popf
sti
daa
jae
dec
ret
or
sbb
sarl
jl
sbb
mov
pop
sub
xchg
adc
jge
xchg
adc
ret
ljmp
dec
jae
fwait
js
jae
jae
sub
dec
gs
rol
sti
sbb
push
push
incl
div
loop
push
js
dec
cmp
fwait
inc
sub
dec
js
test
mov
iret
repz
out
lods
daa
or
aas
into
pop
mov
or
cmpsl
add
outsb
lock
jno
sub
popl
cli
vunpckhps
test
jbe
ds
cmp
fsubr
test
and
fstpt
cwtl
or
mov
mov
mov
les
push
and
mov
cmp
jno
movsl
in
push
pop
jmp
mov
push
pop
cmp
adc
xlat
pusha
sbb
add
push
cmp
mov
es
and
push
into
scas
repz
stos
lock
add
jnp
xchg
lods
fst
outsb
jno
mov
or
dec
loopne
add
lea
push
jp
pop
vmovhps
mov
xor
jns
repz
hlt
mov
mov
pop
adcl
push
insl
add
push
and
add
out
mov
mov
jae
or
out
mov
mov
and
test
movsb
mov
test
fmul
repz
insb
cmp
aas
push
inc
pushf
jb
xor
sub
and
dec
daa
adc
or
stc
inc
in
or
mov
push
std
loope
cli
aad
ss
bound
je
and
push
jmp
scas
pushf
inc
fdivl
xor
orl
test
pop
rorl
dec
cmp
mov
push
aas
xor
sti
aam
add
fistpll
inc
cmpsl
lock
loop,pt
out
mov
push
fidivrs
jp
mov
aaa
dec
dec
and
fcoms
rcrb
sbb
push
adc
loop
jo
or
mov
out
shll
pushf
cmp
loop
cmpsl
mov
sub
ficompl
cmp
mov
in
add
pusha
mov
push
dec
xor
int
test
popa
mov
mov
cmp
mov
leave
push
pop
fs
loop
push
push
dec
ds
sub
xchg
pop
pop
xor
cmp
clc
adc
inc
and
int
adc
jp
jge
cwtl
fstp
fldt
movsb
pop
push
test
pop
push
or
ja
cmpb
cmpsl
mov
xchg
pop
jecxz
fwait
push
stc
xor
or
in
xchg
enter
jle
xchg
jb
lahf
addr16
mov
ret
push
dec
mov
xorl
cmp
es
mov
sub
push
aaa
insb
ljmp
pop
rorb
in
sbb
int
xchg
loop
rorb
sbb
popf
mov
lea
inc
push
or
inc
jo
idiv
orl
add
xorl
adc
xchg
add
cmp
mov
rcrb
sbb
xor
dec
mov
xchg
je
xor
mov
push
in
jbe
adc
push
mov
fwait
or
daa
fisttpll
jp
mov
sbb
arpl
xchg
push
and
sub
addr16
inc
xchg
mov
adc
sub
push
lret
mov
scas
adc
or
mov
ss
add
xor
mov
mov
pop
push
sub
cmc
pop
and
cmp
mov
pop
mov
inc
add
mov
negb
xchg
test
sbb
sub
nop
iret
adc
mov
inc
imul
add
leave
iret
inc
push
adc
cwtl
icebp
mov
cmc
mov
xor
out
and
pop
popf
sbb
mov
incl
xchg
int3
fs
scas
add
cli
shl
push
cmpsb
jmp
dec
ficoms
xor
mov
repz
aaa
push
test
lret
cld
sbb
dec
test
jmp
mov
adc
jae
add
add
aad
pop
sahf
add
fisttps
add
stc
call
push
std
xchg
jnp
sbb
push
push
arpl
jecxz
and
aaa
int3
ljmp
lahf
and
mov
mov
pop
js
xor
in
mov
inc
xor
addr16
mov
adc
int
lret
andl
dec
inc
test
add
loop
adc
mov
or
fnstenv
mov
or
adc
cwtl
push
test
pop
inc
fstpl
dec
sbb
dec
outsb
mov
push
jg
repnz
cld
dec
mov
jns
push
popl
dec
xchg
pop
or
jno
rcrl
and
jnp
cs
lret
xchg
xchg
push
cld
movsl
push
dec
out
lret
and
jge
push
mov
stos
pop
dec
jae
mov
push
ss
xorb
pop
movsb
test
xor
loopne
xor
lods
push
cmpsl
jae
cmp
fnstsw
ret
iret
call
cli
sbb
lock
out
stos
lods
xchg
ret
inc
inc
cltd
push
push
sbb
pop
cmpsb
sub
inc
or
inc
pop
and
cmpsl
xor
jo
sbb
xchg
add
cmp
cmp
pop
in
in
xchg
ss
aad
dec
jmp
cs
jp
sub
stos
xlat
and
and
push
mov
and
sub
sub
in
cli
test
in
mov
scas
loope
js
jp
sti
cmpsb
and
mov
iret
xchg
mov
dec
pusha
sub
push
push
lods
cmpsb
inc
inc
xchg
mov
loopne
or
int
out
pop
ds
and
mov
push
push
movsl
and
xchg
dec
jae
sbb
xor
xchg
enter
sbb
pop
jno
mov
push
in
pushf
xor
cli
arpl
or
mov
add
outsb
andl
jb
dec
xor
outsb
stos
mov
mov
inc
push
into
jo
lcall
lcall
inc
mov
lock
xchg
add
or
jae
iret
gs
icebp
out
cltd
imul
jnp
push
mov
dec
nop
pop
push
into
mov
ret
ja
mov
mov
cltd
fdiv
xchg
js
or
pop
popa
hlt
xor
pusha
mov
cld
push
adc
enter
shlb
push
loop
inc
pop
mov
push
stos
adc
push
pop
xchg
ret
mov
xchg
jmp
rcrl
dec
mulps
sbbb
sub
imul
or
mov
adc
aam
add
aam
push
or
sbb
jg
lret
mov
test
les
adc
sbb
pop
addl
mov
inc
shrb
mov
push
mov
mov
daa
vcmpss
dec
rcl
aad
mov
popa
and
scas
arpl
std
sbb
aaa
xor
aad
leave
xchg
pop
clc
cli
pop
shll
cmc
imul
jp
dec
repz
rcll
pop
jge
andb
jp
lret
cmp
hlt
scas
mov
pop
xor
imul
or
mov
mov
sub
shrl
stos
cmpsl
popf
bound
sbb
adc
push
outsb
jae
inc
inc
shll
adc
push
add
repnz
pop
inc
movsb
mov
dec
mov
and
aas
dec
in
pusha
clc
fdivrs
pop
sub
sbb
lea
xchg
out
or
imul
aas
popf
movsb
stos
push
mov
pop
jns
sub
fs
jge
jae
inc
jne
add
daa
dec
mov
mov
cmp
inc
adc
or
sbbw
jne
mov
adc
pop
ja
lret
mov
in
pushf
sub
rcrb
pop
rcrb
hlt
push
xchg
movsl
cld
icebp
jecxz
mov
cld
les
sub
xor
mov
push
pop
rcrl
cmp
std
xchg
cli
push
cwtl
fldt
mov
mov
or
pop
and
call
cmpl
sbb
adc
testl
ret
roll
scas
out
addr16
inc
fsubrs
push
mov
add
dec
mov
dec
xor
mov
out
test
mov
xor
popl
call
daa
adc
ficompl
int
xor
mov
sahf
pop
out
cli
push
inc
push
stos
imul
in
or
push
roll
clc
mov
add
jmp
jmp
fidivl
in
cmp
test
mov
cmp
je
dec
cmpsl
pop
mov
sbb
or
pop
call
add
adc
lea
out
iret
hlt
jns
sti
pop
hlt
or
sub
shlb
xor
dec
shrl
adc
loop
cli
repnz
mov
push
push
mov
mov
cmp
ds
mov
arpl
aaa
lods
leave
out
outsl
cmp
je
insb
stos
outsl
cld
dec
jecxz
push
in
mov
jle
jbe
int3
xlat
fs
in
fcmovne
cmp
and
popf
shll
pop
push
nop
lcall
fidivl
mov
adc
call
imul
pop
add
inc
xchg
push
jmp
xchg
jle
repnz
lret
sbb
cmp
js
test
test
sbb
in
pop
mov
pop
std
outsb
sarl
and
push
push
fadds
inc
jbe
loop
mov
jge
or
jb
sbb
and
mov
lods
push
insb
lods
popa
inc
xor
in
mov
xchg
jmpw
or
mov
lahf
xchg
sti
pop
in
mov
adcb
test
and
jmp
and
out
gs
int3
add
push
rcrb
sub
mov
mov
jge
mov
cs
jo
loopne
cmp
jl
outsl
fsincos
fdiv
pmaxub
cmp
shlb
jp
jbe
lcall
dec
mov
mov
adc
sbb
popf
push
cmpsl
push
icebp
orl
xor
lahf
imul
loop
outsl
mov
aas
call
jecxz
ret
or
or
cmpsb
push
ficoms
enter
mov
enter
in
sub
std
cmp
sbb
inc
insl
or
push
mov
cmpsl
or
in
int
inc
ror
in
nop
push
push
xchg
test
in
iret
fwait
push
push
xor
loopne
iret
aaa
subb
push
test
pop
push
aam
popf
fsub
ja
stos
fsubrp
jle
or
dec
pop
or
xor
push
and
and
jge
fst
push
loope
mov
xchg
jmp
das
out
cmc
sti
push
push
xchg
fsubrp
adc
xchg
test
bound
popf
testb
mov
rorb
shll
mov
xor
jne
or
push
mov
out
bound
sub
enter
adc
add
push
inc
icebp
mov
sti
add
jns
lock
dec
add
cmp
ret
int
inc
jg
in
fnstenv
add
test
cmp
popf
dec
pop
jb
xchg
mov
add
leave
cmp
dec
xchg
sub
stos
adc
xchg
mov
or
mov
lret
xor
and
add
aam
sbb
mov
jp
shll
out
jp
lods
repz
out
or
lods
inc
xor
adc
test
ja
pop
jae
cmpsl
mov
pop
out
int
adcl
adc
sarb
movsb
lret
pushf
sub
aam
push
pop
loope
adc
inc
mov
cmp
out
pop
sbb
call
jnp
dec
pop
stc
call
jecxz
addl
push
divl
and
mov
push
add
inc
inc
sub
nop
jne
insl
sti
iret
out
push
pop
push
jae
and
cmpsb
sub
mov
notl
pop
sub
ja
pop
iret
cmp
cmc
dec
ss
adc
xor
mov
cmp
popa
les
mov
jmp
rcl
test
icebp
fsub
ss
xchg
jb
dec
adc
ret
pop
scas
inc
sub
jmp
mov
dec
push
adc
sub
push
or
jae
pop
adc
dec
pop
dec
and
mov
push
es
add
or
jmp
push
mov
je
inc
js
add
pop
das
mov
pop
es
bound
add
pop
add
dec
pop
xchg
leave
lea
mov
cmp
sarl
push
sbb
pop
orb
aas
js
loop
inc
inc
pop
inc
mov
dec
push
bound
jmp
fwait
mov
add
pop
xchg
rclb
sbb
aam
pop
sarb
std
lds
das
rcrl
mov
stos
mov
mov
xlat
sub
mov
cmpsl
mov
lret
lea
add
das
jg
cmpsb
xor
loopne
insb
sub
cmp
pop
ja
mov
scas
test
adc
loopne
or
insb
insl
sub
movsl
sbb
insl
push
aad
cmp
mov
imul
push
inc
sti
loop
sbb
and
xchg
in
movsb
daa
adc
cld
mov
les
and
imul
hlt
loop
jo
and
or
cmp
or
test
shl
es
data16
bound
scas
or
jle
sub
lods
ficomps
jo
mov
movsb
idivl
lds
addr16
xor
cmpsl
out
ret
insl
movsb
repnz
or
dec
aad
lods
icebp
xchg
mov
imul
add
stos
pop
or
cmc
push
outsl
outsb
adc
mov
mov
cmc
add
stos
jo
jns
inc
fidivs
test
xor
pop
inc
dec
adc
les
iret
repz
mov
cmc
in
and
sbb
mov
add
sahf
rcrb
popf
dec
cmp
xor
mov
lods
idivl
fcomip
lods
popa
cltd
xor
test
fsubrs
js
pop
mov
inc
dec
jnp
jg
scas
mov
add
mov
dec
jecxz
push
pushf
push
mov
es
aas
lds
jl
in
jmp
cwtl
xchg
add
xchg
in
outsb
fadd
sbb
mov
in
cmpsb
cs
insl
push
sbb
jle
fsubs
add
out
or
xchg
cmc
int3
xor
mov
or
mov
xchg
dec
push
sti
pop
mov
or
xchg
scas
inc
pop
ljmp
xor
jle
imul
or
add
repnz
sahf
add
nop
mov
loop
lahf
adc
jecxz
and
jecxz
sub
aad
dec
sbb
xchg
in
std
mov
xchg
mov
cmpsb
mov
add
mov
mov
nopl
inc
bound
push
fucomp
icebp
jecxz
ds
mov
inc
cmp
xor
and
inc
adc
xor
enter
xchg
pop
add
jno
popf
leave
dec
adc
mov
das
mov
xchg
mov
mov
jp
aaa
jbe
cmp
sub
fldenv
scas
repz
add
js
mov
decb
notb
xor
xor
cs
fcom
push
push
xchg
jbe
jne
mov
cwtl
outsb
nop
sub
dec
push
xor
leave
stos
mov
clc
lock
mov
ret
inc
cwtl
bound
inc
fisubl
js
push
cld
push
addl
pop
xchg
add
cmpsl
jg
test
sbb
test
shrl
pop
pop
fwait
or
call
pop
cmpsl
adc
xchg
inc
decb
mov
mul
insb
es
and
ds
mov
adc
pop
adc
iret
aas
hlt
insl
pop
pop
aas
inc
imul
inc
jae
test
int3
iret
mov
faddl
test
inc
xor
mov
lods
add
dec
pop
sbb
aaa
mov
jl
jge
cld
idivb
aam
leave
jb
adc
lods
jl
inc
enter
movsb
push
andl
sub
or
jge
stos
out
ret
and
arpl
dec
mov
popa
repz
cmp
pop
mov
arpl
push
aad
and
cmc
cmpb
test
fcomps
gs
mov
pop
pusha
jle
mov
lods
adc
or
sti
cmp
test
lods
ret
jbe
cmpsb
es
mov
clc
fcmovne
mov
imul
sub
sbbb
test
xchg
insb
sbb
es
cmp
lret
xor
pavgw
sbb
in
ljmp
fbstp
push
out
mov
push
adc
inc
arpl
adc
cld
push
cmp
shrb
and
fdivrp
pushf
cltd
add
cmpsl
push
inc
lcall
dec
dec
mov
adc
div
xchg
fs
pop
mov
loope
inc
sub
jp
inc
insl
adc
push
push
adc
iret
sarl
pop
sbb
pop
xchg
es
subb
pop
xchg
out
jg
arpl
mov
push
cmp
jns
scas
inc
outsl
sbb
inc
mov
mov
cmpsl
movsb
push
in
push
divb
mov
dec
gs
insb
vcvttps2dq
mov
add
cmp
in
pmovmskb
and
and
mov
cltd
jmp
mov
mov
lret
pusha
testl
push
mov
xchg
mov
push
xchg
decl
int
test
xchg
sbb
ficomps
test
sbb
mov
or
xor
nop
sbb
pop
int
lock
dec
and
fildll
inc
cmpb
fcoml
adc
das
mov
cmpsl
xchg
popf
insl
or
cwtl
xor
mov
and
insb
es
aam
mul
cmp
xchg
push
int3
cmpsl
pop
xchg
mov
jl
mov
dec
mov
xor
adc
push
cmp
push
popf
jle
push
adc
icebp
shrl
push
inc
mov
sbb
xor
shlb
xor
popa
pop
int
call
bound
inc
pop
cmp
cld
std
sbb
fdivl
out
cwtl
sbb
ret
mov
loop
dec
mov
jle
pavgw
repz
fnstcw
push
popf
int
mov
jns
insl
and
rep
xor
aas
ds
and
nop
and
enter
adc
fdivrs
cmp
cld
sub
push
in
pop
xor
scas
pop
sbb
in
iret
insl
ljmp
cmp
jo
pop
xor
fldt
movsb
add
fnstcw
pushf
mov
std
or
inc
js
bound
mov
xor
push
and
adc
inc
push
insb
cmp
popf
fldlg2
std
cmpsb
es
cmp
outsl
aad
mov
loope
pop
in
mov
inc
jle
and
mov
mov
cs
or
pop
and
insb
mov
inc
inc
ja,pn
lret
pop
iret
aad
test
push
push
xor
icebp
dec
jge
xchg
adc
mov
pop
sbb
sub
and
das
mov
mov
push
or
xor
mov
cmpsl
andb
movsb
fst
mov
pop
dec
mov
push
push
popf
dec
rolb
mov
arpl
adc
shrb
push
jle
add
jb
xchg
icebp
sub
in
cmpsb
inc
mov
and
pop
mov
movsl
adc
and
push
mov
push
mov
mov
adc
je
inc
mov
insb
aad
adc
stc
mov
mov
repz
adc
ds
pop
mov
fsubrl
xchg
pop
adc
push
fbld
cmp
add
aam
shlb
sar
aas
xchg
and
sub
xchg
inc
dec
or
aaa
sub
jmp
jle
fsubs
jle
scas
jge
lahf
push
int
lea
scas
sbb
rorl
mov
sub
cmp
cmp
inc
in
es
int
rorl
sti
xor
std
sub
cmp
xchg
pop
sub
mov
push
scas
into
sbb
negl
push
add
les
jl
fidivrs
ficoml
int3
inc
daa
in
pop
sbb
out
popa
push
lahf
jl
and
xor
mull
mov
negl
arpl
roll
ret
xor
sti
jle
jle
adc
in
call
popf
sbb
ret
mov
ret
xor
test
add
ss
push
divl
adc
pop
out
jno
arpl
push
mov
not
cmp
mov
pop
test
pop
out
ss
stc
shrl
dec
sbb
je
mov
test
mov
faddp
mov
cmp
in
rclb
cmc
jp
adc
sub
sbb
dec
pop
mov
jbe
hlt
inc
dec
cmp
and
dec
inc
imul
adc
not
lea
mov
test
scas
cmp
ljmp
sbb
int3
cmpl
dec
fdiv
dec
hlt
push
xor
ja
cmpsb
sbb
push
pop
mov
add
mov
ss
sbb
xchg
xchg
and
pop
push
sbb
dec
and
mov
lods
aam
addr16
sbb
sub
or
je
mov
mov
and
mov
out
movl
inc
pop
xchg
push
daa
xchg
ret
xor
lods
sub
cltd
push
and
mov
sbb
or
dec
subl
out
stos
hlt
shll
inc
xor
jge
pop
mov
sbb
xor
mov
push
adc
cmpb
jmp
inc
stos
mov
rclb
mov
lea
loopne
aam
and
mov
icebp
outsb
gs
mov
add
out
lcall
xor
fwait
mov
push
xor
add
cli
xor
lret
jns
mov
pop
and
add
and
mov
repz
out
mov
test
sbb
mov
dec
or
mov
sub
cmpsl
call
cmc
movsb
ret
mov
dec
sub
cli
cs
test
in
sub
idivl
ret
mov
or
cld
jmp
mov
add
and
sub
loopne
xor
push
lcall
mov
xor
je
pop
and
sarb
arpl
int3
stc
repz
push
xchg
jno
ret
or
xor
pop
lahf
jns
or
and
jnp
add
pop
jne
stos
adc
arpl
imul
inc
loop
xlat
out
loop
pop
cld
movsb
out
jmp
push
sbb
fistl
add
ret
je
fstpl
ret
inc
aad
arpl
out
sub
dec
loope
jo
roll
cmp
cmpsl
and
sahf
insb
fcom
lds
je
mov
xorb
xlat
jne
ss
xchg
mov
scas
in
inc
mov
pushf
jnp
mov
addr16
pop
jg
xchg
push
cmpsb
pop
dec
cmp
dec
adc
fsub
pop
loop
sub
mov
aas
sub
or
roll
mov
push
movsl
mov
mov
xchg
xor
dec
dec
adc
pop
inc
mov
aas
push
lcall
pop
pop
stc
movsl
jnp
jae
stc
jmp
fstp
mov
into
mov
cmp
mov
adc
push
mov
out
test
or
cmp
in
fldcw
icebp
fsubrl
mov
stos
outsl
mov
cltd
aaa
lahf
add
stc
mov
adc
subb
outsb
dec
cvtdq2ps
or
rcr
roll
daa
aad
test
nop
fistl
std
adc
ficomps
mov
cmp
aad
or
sbbb
xor
xor
push
into
test
mov
lret
mov
sbb
jmp
fistps
dec
inc
aas
repnz
lcall
pop
je
out
sub
mov
xchg
daa
insb
in
inc
cs
inc
jl
stos
stos
cmp
sbb
xchg
push
into
decb
lret
mov
fwait
adc
mov
push
jo
cmp
into
into
fistps
rcrl
or
ds
in
pushf
mov
add
call
add
cmpxchg
add
push
jmp
mov
or
popa
test
inc
pop
bt
aaa
mov
mov
mov
add
or
icebp
and
xchg
aas
in
cmp
out
mov
in
xchg
je
mov
xorl
loope
mov
push
or
stos
mov
fwait
mov
in
mov
insl
mov
xor
jae
add
push
lret
leave
imul
sub
lea
mov
iret
pop
lods
jl
enter
fcompl
jl
fs
test
inc
aam
inc
and
aad
aas
jecxz
aam
sbb
iret
push
add
call
in
or
scas
outsl
icebp
test
ret
sbb
shrb
mul
pop
pusha
mov
fadd
jmp
sub
xchg
push
rorb
jecxz
mov
lret
addr16
loop
call
in
jae
pop
xchg
mov
pop
xor
mov
int3
popf
fldl
inc
jl
jmp
fcmovne
das
or
add
mov
sub
jle
insb
fsub
xlat
mov
stos
mov
inc
lods
jle
iret
inc
lret
out
pop
sysenter
scas
das
cmc
scas
mov
push
add
sub
lea
push
test
lahf
or
aam
inc
ret
aad
mov
push
push
mov
shll
push
sub
movsl
addr16
dec
ss
pop
jne
jmp
and
sub
sub
out
sub
lret
jmp
inc
aad
movl
xchg
lret
test
andb
jle
js
push
mov
jb
shll
xlat
pop
sub
jmp
lock
adc
mov
adc
sbb
mov
sbb
xchg
pop
xor
jo
shrb
pop
inc
fistl
sub
and
push
subb
adcl
xor
and
scas
imul
mov
xchg
imul
enter
xchg
test
cltd
shll
push
dec
jl
aam
loopne
xchg
cmp
fstpl
lret
xchg
dec
mov
cmp
stos
mov
mov
jbe
mov
mov
mov
sbb
inc
in
int3
loopne
imul
cmc
scas
lcall
xchg
inc
jmp
and
fs
mov
dec
out
adc
aaa
mov
inc
sbb
fcmovbe
jae
mov
mov
rcrl
es
push
xchg
sbb
das
bound
pop
jne
push
out
push
nop
or
arpl
std
push
mov
out
add
xchg
or
fimuls
cmp
test
enter
add
cli
or
leave
xor
and
sub
sahf
pop
lret
and
ret
push
nop
ret
or
stos
in
or
xchg
popa
sbb
bound
push
push
jge
ja
pushf
or
imul
cltd
gs
sbb
repz
dec
stos
sbb
mov
adc
js
leave
cmp
aam
shlb
stos
push
xor
shll
in
add
std
inc
inc
les
mov
push
ja
push
adc
rorb
repz
in
dec
push
subl
jb
mov
jns
mov
ffree
and
dec
addr16
xchg
loop
test
pusha
and
and
aas
inc
cmp
xor
xlat
pop
xor
inc
lock
aas
adc
imul
sub
adc
nop
bound
fldl
push
scas
mov
sar
pop
loop
push
fsubp
mov
pop
ljmp
insl
xchg
inc
in
test
ljmp
bound
pop
jge
fmul
sub
add
rorb
aaa
jmp
hlt
sbb
test
xchg
ds
cld
cmp
andl
inc
lcall
or
popa
inc
mov
sbb
adcb
pop
je
pop
aad
insb
mov
and
psubsw
push
in
jge
mov
sbb
adc
cmp
mov
mov
out
mov
add
int3
inc
push
dec
in
ret
push
inc
out
sub
popf
mov
jle
push
pop
push
fstp
sbb
pop
ret
fildl
jg
mov
out
or
imul
sub
mov
pop
jecxz
sbb
jae
aas
ret
mov
push
loop
ficomps
sbb
je
inc
dec
push
dec
jae
push
jbe
cmp
xchg
fucomi
cmc
and
mov
sub
dec
lods
jle
cmp
sub
aaa
mov
add
or
inc
push
test
fsubrl
int
add
sbb
inc
sub
ljmp
inc
jl
stos
lcall
cs
into
cmp
add
xchg
add
dec
push
mov
lahf
mov
sarb
and
mov
jb
nop
xchg
faddp
js
in
ret
jne
in
or
inc
mov
mov
jg
movsl
mov
pop
jae
fisubrs
ja
inc
bound
xchg
xchg
or
test
cmp
jae
inc
and
insb
imul
mov
loope
into
mov
idivl
jmp
ljmp
or
inc
mov
loope
mov
xor
and
push
xchg
xchg
jae
outsl
lock
gs
sbb
std
push
xchg
mov
jmp
xchg
scas
inc
daa
iret
cltd
mov
fistpll
mov
ficompl
jns
ret
push
test
shll
fwait
adcl
les
mov
icebp
dec
pop
ss
dec
push
clc
or
dec
xchg
add
mov
jecxz
inc
scas
subb
cs
ret
pop
inc
mov
in
push
out
cmpl
adc
mov
jp
lret
imul
xor
in
pop
mov
adc
flds
fistpll
jg
div
movsb
js
lret
cwtl
scas
cltd
call
ljmp
rcrl
dec
shr
test
movsb
fldl
cmp
jo
sub
sahf
or
das
test
lods
clc
negb
bound
in
push
imul
aas
cld
xor
mov
xchg
and
add
daa
fidivrl
dec
and
mov
mov
xor
scas
repz
cltd
test
daa
in
gs
or
out
and
subb
call
roll
dec
std
push
rolb
and
sahf
ljmp
das
dec
xchg
mov
cltd
and
lods
jb
pop
add
data16
les
dec
and
cli
mov
mov
aas
or
repnz
push
outsb
xchg
push
jb
adc
imul
call
ljmp
mov
dec
stos
inc
fsubrs
sbb
movsl
xor
or
xor
dec
sahf
xchg
push
shll
dec
in
cli
add
mov
addr16
mov
and
pop
outsl
int3
pop
sbb
stos
fisttpll
mov
insl
in
popa
in
jl
or
or
stos
push
pop
ds
fbstp
xor
enter
fsts
push
scas
call
push
mov
and
or
js
jge
lret
movsl
imul
into
jmp
sub
cmpsl
xor
dec
cltd
fnsave
into
int
lods
or
or
mov
push
loop
pusha
pop
inc
insl
fstpt
jp
mov
scas
mov
rcr
int3
popa
mov
adc
loope
add
fistpll
sbb
cmc
test
mov
jp
sahf
push
daa
xor
dec
rorb
or
sahf
jae
sub
cs
or
es
xor
jecxz
and
mov
in
aas
xchg
fistl
lea
lods
cld
add
cltd
fadds
ss
notl
mov
call
push
cli
adc
popa
sbb
in
mov
adc
jb
xchg
fldl
rcr
mov
xchg
outsl
xor
rclb
push
jbe
imul
movsl
mov
push
and
jg
je
sub
adc
mov
mov
mov
mov
dec
out
dec
fisubrs
cli
es
jge
push
jnp
sbbb
pop
pop
loopne
xlat
xor
ss
inc
leave
lea
out
xor
sti
inc
cmp
arpl
out
popf
sub
xchg
aaa
mov
int
mov
loopne
testb
pop
fnsave
cmp
sarb
add
sbb
xor
jg
jo
pop
imul
pop
orb
js
rorb
and
mov
jge
cmpsb
xchg
shll
subl
lods
ret
xorl
adc
sub
xor
outsb
sbb
movsl
testl
jo
mov
add
out
add
jmp
xchg
movsb
jnp
shlb
imul
inc
adc
dec
pop
stc
cmpsb
sahf
bound
rcrl
push
cmpsl
rcrb
xchg
mov
push
repnz
mov
xchg
lret
aam
notl
mov
addr16
inc
jns
xchg
sub
popa
repz
enter
std
sub
sete
mov
mov
cs
pop
insb
xor
imul
int
jle
jg
cmp
adc
aaa
pushf
xchg
cmp
and
adc
sub
sbb
pop
pop
adc
and
inc
mov
insb
in
xor
shrl
aam
mov
mov
add
movsb
jl
icebp
sbb
xchg
cmc
and
xlat
and
stos
push
adc
xchg
lret
incl
mov
xchg
in
pop
xchg
xchg
push
hlt
out
jo
xchg
push
adc
mov
adc
and
leave
loope
jle
nop
ret
dec
xlat
into
mov
pop
mov
xchg
mov
inc
jmp
cld
adcb
mov
pop
test
fstl
sub
or
test
cmp
jbe
outsl
xlat
cmp
adc
add
mov
dec
sbb
xorb
push
mov
mov
mov
aaa
fimull
add
push
addl
mov
fdivl
jno
les
sbb
imul
call
lahf
mov
sbb
sarb
add
test
ja
and
cmp
mov
lcall
push
js
jmp
pop
lods
in
push
dec
mov
adc
jo
jle
aad
imul
mov
xchg
scas
mov
sub
lahf
clc
jae
scas
les
mov
mov
and
pusha
fcmovnu
pop
pop
shll
jne
pop
jle
repnz
push
incl
jmp
mov
gs
iret
cmp
pop
iret
push
and
cmc
add
jo
aaa
sbb
mov
dec
xor
js
push
and
mov
ds
lods
pushf
sbb
rol
xchg
pop
push
out
mov
push
lahf
jle
pop
imul
jb
and
push
add
xchg
loopne
loop
cmpsb
cmp
mov
mov
xchg
les
cltd
pop
sub
push
fadds
jge
sti
sbb
jg
sbb
jno
mov
out
je
push
call
mov
cmp
jb
mov
test
mov
loope
clc
call
mov
out
jbe
aad
mov
lds
mov
outsl
leave
xchg
roll
push
daa
sti
stos
sub
xor
jp
xor
or
int
outsl
and
cmp
stos
jmp
scas
jl
xor
outsb
loop
mov
inc
sbb
or
pusha
test
fs
sub
add
test
popf
xchg
hlt
dec
or
shl
out
mov
dec
or
xchg
lcall
pop
sbb
sub
pop
lods
and
inc
mov
popa
jb
aam
mov
icebp
sbb
xchg
insl
enter
cmpsl
int
adc
into
push
repz
xchg
pop
inc
and
mov
aad
aaa
pop
shlb
xchg
mov
pop
or
and
out
in
lahf
add
cmp
push
xchg
sarb
add
inc
push
sub
jg
pop
pop
fldl
add
repz
jp
mov
inc
imul
loop
pop
imul
rep
adc
sbb
dec
loopne
js
lret
add
mov
xchg
loopne
imul
lock
pop
mov
sbb
or
addr16
std
push
push
sub
fsubs
pop
scas
jmp
mov
jp
sub
pop
lret
adc
cmp
lock
mov
insl
test
pop
cmp
add
movsb
xchg
jns
js
repnz
inc
popf
push
mov
daa
add
test
int3
out
lock
adc
imul
fs
in
cmp
fadd
adc
push
in
fdivs
pop
xchg
pop
push
pop
add
mov
dec
insb
fidivs
sarb
call
jmp
adc
outsl
jecxz
sub
push
scas
pop
mul
pop
lcall
gs
xor
add
or
mov
cmp
aas
jmp
adc
jle
stc
mov
cmc
out
xchg
dec
leave
mov
sbb
or
mov
test
cmp
lret
dec
pop
cmp
or
out
adc
data16
adc
add
inc
or
idivl
sbb
xchg
xor
data16
hlt
jle
scas
inc
adc
subb
sbb
dec
inc
sub
test
clc
aas
mov
fldenv
icebp
pushf
adc
dec
pop
push
fstl
mov
aam
fimuls
mov
or
mov
outsl
test
fstpt
sub
fsubr
enter
cmp
cld
lahf
fwait
cwtl
push
fmul
or
iret
and
popa
pushf
dec
and
movsb
jge
or
mov
jl
mov
std
ljmp
jmp
adcl
jmp
fs
push
sbb
jp
aad
cmpsl
adc
push
push
xchg
sbb
decb
iret
movsb
xchg
dec
test
test
loopne
out
jno
insl
js
push
mov
adc
sahf
xchg
movsb
mov
xor
aas
pop
mov
push
shlb
cmpsl
sub
hlt
and
pop
lea
adc
inc
ds
push
sub
stos
xor
sbb
test
jne
stos
addr16
ret
pop
cmp
clc
or
lret
fnstcw
lret
sbb
fiadds
mov
xchg
daa
cmp
mov
jle
cs
cmc
in
sahf
dec
mov
fstl
pop
or
stos
and
insb
or
repnz
into
fbld
js
stos
add
in
jmp
dec
iret
shlb
mul
mov
cmp
sub
lcall
repz
les
dec
stc
pop
aas
cmc
lock
inc
push
shr
sahf
je
cld
imul
add
and
and
adc
scas
and
les
and
jmp
lret
xchg
mov
or
jge
add
dec
pop
cli
mov
int3
sub
sbb
push
sti
jecxz
cmp
jge
push
mov
cmp
sbb
dec
and
sub
pop
in
test
in
pop
orb
les
pushf
xchg
mov
mov
push
cmp
and
or
ret
adc
mov
push
fcompl
fwait
mov
sub
mov
data16
xchg
outsb
sbb
jp
addr16
in
std
out
mov
jno
roll
nop
in
mov
jl
pop
lods
sbb
ffree
jmp
ljmp
inc
in
add
pop
mov
mov
mov
in
dec
push
jecxz
xchg
cmpsl
imul
sbb
dec
movsl
jp
pop
out
movsb
aam
adc
cmpl
fimuls
ret
imul
das
ss
pop
pusha
lea
stos
test
test
outsl
lods
repnz
lahf
mov
ret
pop
enter
in
cmc
or
mov
mov
adc
jno
movsl
push
xchg
fsubrl
es
imul
std
ss
scas
xchg
sub
enter
ret
scas
inc
nop
insl
insl
and
dec
mov
movsl
int3
cmp
in
sbb
cltd
sbb
adcb
lds
xchg
cld
daa
inc
les
add
gs
lea
mov
sub
cmp
mov
pop
and
sbb
cmpsl
fisttps
pop
shll
pushf
add
out
push
push
jecxz
pop
fwait
sbb
pop
mov
mov
push
ljmp
mov
jb
mov
adc
sub
pop
rclb
xor
dec
loopne
decb
jo
cli
adc
sub
add
cltd
ret
push
cltd
mov
adc
xchg
jbe
call
pop
mov
push
sti
xchg
or
lock
std
data16
fcmovu
sbbb
repnz
mov
jmp
push
jmp
lahf
cmp
adc
out
out
add
sbb
jne
stos
sbb
add
aas
daa
mov
jb
add
repnz
movsl
inc
xchg
pop
mov
sbb
xor
loope
rolb
imul
mov
xor
pop
aaa
imul
push
or
addr16
pop
call
xor
lcall
stos
jmp
and
loop
push
int
bound
mov
and
popa
add
mov
xchg
pusha
xor
es
icebp
jne
jae
icebp
add
sarl
xchg
xor
fdivrs
add
dec
xor
pop
test
and
cld
fsubl
or
es
out
sub
mov
scas
js
mov
mov
dec
stc
xchg
or
es
mov
fimuls
cli
push
cmp
aaa
mov
push
imull
push
dec
push
pop
and
stc
push
daa
xchg
and
les
in
dec
jmp
ror
ds
xchg
inc
lahf
test
jp
adc
cmp
xchg
test
clc
out
stc
sahf
jae
out
sbb
sahf
xchg
pop
incb
xchg
mov
sbb
sub
xchg
cmp
vandps
data16
lahf
popf
xchg
icebp
fsubrs
stos
fldenv
sti
add
js
shlb
sbb
call
add
aaa
adc
push
in
test
addb
into
neg
daa
push
hlt
lret
pushf
mov
lcall
ds
fisubl
xor
xchg
rcrl
shr
std
popf
pushf
push
jecxz
imul
mov
leave
fisubrs
lods
int3
pop
and
cmp
fldt
push
test
inc
out
mov
sbb
adc
fists
ja
mov
sub
lds
or
adc
sti
xchg
or
xor
adc
mov
xlat
adc
cwtl
negl
roll
int3
loop
scas
int3
ret
stos
xchg
lods
adc
repnz
repnz
mov
adc
mov
adc
adc
inc
addr16
jbe
push
and
xchg
insl
push
stos
daa
clc
mov
cmp
fistps
sub
xchg
pop
scas
mov
sub
cmp
adc
imul
sbb
push
movsb
xorb
insb
icebp
outsl
aam
mov
test
cmp
pop
add
add
pushl
add
mov
in
aas
movsb
push
inc
pop
push
xchg
inc
in
mov
pop
xor
jae
pop
cli
push
out
xor
xlat
xor
cmp
lret
lret
test
adc
rorl
pop
push
sbb
repnz
xchg
aaa
xor
and
push
inc
mov
and
xor
loop
jo
lret
xchg
ljmp
mov
enter
into
cwtl
aad
das
rcll
xchg
and
aam
mov
cmp
nop
rclb
fadds
inc
xchg
data16
add
fstpl
mov
ret
inc
cmp
push
pop
pushf
or
std
insl
outsb
sti
xchg
sbb
xchg
das
test
xor
mov
jnp
lds
cmpsl
in
mov
add
inc
mov
xchg
and
cmp
and
jecxz
push
pop
add
and
mov
xchg
sbbl
cmp
adc
mov
cmp
mov
roll
cmp
add
push
lret
push
dec
aad
sbb
add
jno
or
insb
cltd
cmp
test
stos
xor
mov
repnz
int3
flds
mov
add
pop
enter
add
fdivl
adc
testl
adc
into
out
mov
pop
rclb
add
pop
imul
aaa
insb
jge
lret
sbb
mov
mov
jbe
add
mov
push
dec
fists
mov
jge
call
aas
bound
add
xor
mov
imul
mov
loope
aam
movsb
mov
xchg
jnp
aas
stc
imul
mov
test
ss
fucomi
mov
in
inc
or
or
cmpsl
into
stc
jnp
fwait
iret
movsb
mov
jge
cltd
andl
add
jmp
pop
sub
es
sbbb
mov
mov
inc
mov
ljmp
sbb
and
mov
xlat
push
leave
or
pushf
jbe
pop
jo
ret
rorl
ret
imull
add
movsb
mov
aad
out
push
call
jb
shrl
fsubs
inc
push
movsl
idiv
popf
inc
rep
inc
rcl
fdivp
push
and
out
pop
insl
mov
or
push
jns
mov
movsl
sub
int3
xchg
aad
loop
sbb
cs
andb
test
sbb
and
sarl
xor
lea
mov
sub
push
loope
arpl
lret
jmp
stos
sbb
dec
outsl
sub
jno
xor
pop
test
bound
jmp
stc
xor
stos
cmp
stos
lret
xchg
inc
outsl
cmp
insl
ljmp
stc
add
out
dec
pusha
mov
and
sub
cmp
lock
push
or
loope
push
dec
inc
inc
or
mov
add
lret
ja
js
inc
stos
test
or
rorl
ds
pop
or
push
dec
popa
stos
or
mov
or
adc
mov
mov
xor
insl
imul
iret
sahf
ficomps
mov
stos
arpl
and
lds
lahf
popf
cmp
and
or
cwtl
sbb
and
cmpsb
cmpsl
les
sbbb
cli
inc
jb
mov
rcr
jp
icebp
out
or
sub
adc
call
insb
roll
push
sub
mov
xchg
xchg
clc
mov
push
add
cmpl
nop
jne
je
mov
ljmp
and
mov
divl
sub
scas
fs
fiadds
mov
ja
mov
fsubrp
and
jge
mov
insl
jp
jns
iret
pop
cmp
pop
mov
test
ror
out
stos
call
sbb
ja
or
adc
insb
pop
clc
cwtl
xchg
jp
sub
jg
loop
dec
adc
jl
cmc
clc
mov
xlat
movsl
mov
dec
bound
shlb
lds
cltd
mov
pop
inc
dec
stc
sbb
ss
xchg
xchg
fisubs
sbb
or
rcr
jb
out
out
xchg
mov
in
pop
jle
mov
mov
pop
sbb
lds
sbb
lods
jp
mov
je
pop
in
data16
fildl
inc
insl
xor
add
in
sub
fimuls
aas
lds
jns
push
and
repnz
mov
adc
daa
popa
push
fcoml
fs
vmread
repnz
pop
dec
out
push
inc
add
mov
push
popa
dec
xchg
pop
xor
xchg
dec
fidivrs
xchg
mov
xor
out
cmp
cmpsl
scas
outsb
cmp
out
cmc
dec
fbstp
jbe
imul
sub
stos
addl
mov
xor
pop
imull
jns
sub
jne
push
and
and
push
add
push
test
mov
and
xchg
in
jl
out
lock
sbb
sbb
push
inc
pop
add
imul
mov
mov
shrb
pop
aas
pop
popf
jne
push
xchg
jge
xchg
out
daa
jb
or
testb
ss
fcoms
dec
in
mov
dec
jns
sub
test
fisttpl
and
mov
out
sar
sub
jbe
cltd
out
mov
decb
and
mov
or
cmpsb
scas
lret
jae
cli
jb
fisubrl
cmp
cmp
push
stc
dec
sbb
pop
int3
inc
push
mov
jecxz,pn
jno
icebp
lcall
int
mov
cmp
out
cmpsb
xchg
lret
cmp
aam
dec
fs
hlt
inc
iret
stc
sarl
or
adcl
xor
shrl
enter
dec
push
adcl
push
sbb
mov
mov
lahf
iret
or
mov
and
mov
inc
clc
sar
sub
fmuls
sub
insl
xchg
push
push
jmp
mov
ret
jne
dec
mov
push
jno
adc
mov
ja
insb
mov
rol
icebp
ljmp
inc
sub
and
dec
nop
inc
cmpsb
pop
int
xchg
cmpsl
sub
lret
ret
mov
and
jb
call
jnp
inc
pop
sub
subl
jnp
dec
sub
xchg
mov
xchg
sub
outsl
adc
mov
movsb
xlat
mov
subb
xchg
mov
repnz
inc
into
test
cmpsl
xchg
jmp
push
test
in
sbb
ret
add
pop
cmp
add
jae
ja
mov
dec
iret
xlat
and
out
push
fwait
mov
jecxz
jle
and
mov
mov
add
sbb
jae
daa
mov
mov
add
or
sahf
insb
dec
outsl
push
shll
stos
sub
jge
mov
lds
cmpsb
or
addr16
sahf
cli
sbb
xchg
xor
sbb
sub
xchg
pop
push
clc
cmpb
pushf
push
imul
sbb
imul
jb
inc
mov
shlb
dec
xchg
pop
cmp
fnstenv
jbe,pn
std
int
out
ja
out
sbb
and
push
movsl
dec
adc
mov
dec
jecxz
scas
ret
inc
sub
pusha
push
add
sbbb
scas
repz
add
mov
mov
pop
mov
add
repnz
iret
push
shrl
cwtl
rcrl
lahf
sub
jbe
jne
rorb
xchg
pop
fmul
inc
inc
cmp
movsb
xchg
mov
in
sub
adc
pusha
pop
jns
add
shrb
cwtl
and
xlat
pop
jmp
mov
inc
dec
adc
xchg
lret
cli
push
adc
inc
mov
in
int
inc
adc
popf
xor
cmc
xor
bound
push
outsb
mov
nop
call
mov
add
xor
push
adc
xor
push
adc
pop
out
push
ljmp
add
rcl
xor
popl
sub
cmp
aaa
stos
mov
inc
js
inc
xor
sub
pop
mov
cmp
cs
fs
test
in
cmpl
mov
outsb
mov
mov
push
cmp
or
xchg
dec
xor
mov
imul
sbb
js
mov
mov
and
cmp
call
pop
pop
ds
or
mov
sbb
xchg
sbb
test
scas
hlt
lcall
push
mov
xor
int3
les
dec
mov
lcall
imul
sbb
ret
sub
xchg
ja
push
xorb
inc
das
sub
pusha
enter
popf
push
inc
dec
movsl
clc
mov
mov
mov
lret
or
sub
mov
test
and
bound
mov
mov
push
xchg
cmc
xchg
push
xor
dec
leave
out
enter
sub
push
insl
mov
fbstp
insb
push
or
enter
repz
test
jne
push
dec
push
pop
add
std
out
fcomps
sbb
cltd
mov
jbe
lds
in
jg
mov
push
imul
insb
xchg
call
push
xorb
icebp
pop
xlat
add
mov
lahf
push
jae
pop
add
cltd
pushw
mov
nop
pop
test
add
jnp
push
scas
cld
inc
jle
aad
cld
out
xor
arpl
pop
lea
repz
in
xchg
lret
push
xor
push
lods
push
out
adc
inc
popa
inc
adc
lds
fnsave
push
inc
mov
in
js
ret
xchg
lods
notb
ret
insl
in
in
pop
imul
lcall
je
xor
ljmp
mov
mov
adcl
or
push
xor
pop
jecxz
fcompl
in
stc
out
and
outsb
ret
dec
lea
pop
sbb
fcoms
pop
push
add
pushf
out
mov
cmp
xor
test
lahf
sub
enter
outsl
pop
aas
jnp
insb
fidivs
jo
and
movsb
and
sbb
nop
mov
aas
inc
in
mov
je
pop
mov
int3
imulb
or
push
aad
outsb
mov
mov
xor
lock
mov
repz
add
in
push
mov
ret
icebp
incb
sbb
sbb
mov
lcall
sarb
fsubl
ljmp
subb
cli
sbb
ret
xchg
mov
push
enter
ss
sbb
aad
mov
dec
adcl
and
push
lds
mov
jbe
pop
mov
lret
mov
scas
fiadds
inc
lods
jmp
pushf
add
mov
xlat
sub
inc
int3
inc
sbb
add
stc
dec
xchg
add
arpl
insl
push
popf
mov
or
in
rclb
inc
popa
push
and
mov
stos
into
loope
add
mov
xor
aad
mov
add
sbb
xchg
mov
lcall
dec
jmp
out
xor
dec
cmp
add
sahf
push
mov
cmpb
jae
movsb
add
mov
aam
out
cmpsb
mov
fldl
jb
adc
mov
xor
lds
mov
push
outsl
push
fmull
inc
inc
push
in
data16
jge
lods
inc
imull
cmc
dec
jbe
dec
adc
push
aam
rcrl
inc
and
fwait
jge
cmp
adc
xchg
insl
jl
ja
mov
ds
cwtl
push
push
add
mov
lea
lea
xchg
add
mov
gs
add
inc
outsl
inc
enter
jb
pop
pop
bound
scas
sub
fwait
aaa
jp
enter
and
jmp
xor
and
mov
clc
xor
aam
fistl
adc
fs
test
pop
sbb
fmull
or
testb
stc
test
movsl
imul
xor
rcrb
shlb
mov
push
sbb
push
out
mov
pop
jbe
popf
cmpsl
cmp
push
out
mov
loope
cmp
push
imulb
cltd
jb
push
jnp
int
adc
addr16
ljmp
bound
pop
cltd
cmp
adc
sbb
jno
ljmp
scas
push
mov
adc
dec
inc
mov
lret
inc
outsl
lds
nop
jp
rdmsr
jno
cmp
adc
mov
jg
push
idivl
in
pop
movsb
mov
mov
call
movsl
stc
xchg
js
add
mov
xor
jne
add
subb
lret
hlt
imul
cmp
cmp
sarl
test
push
cmp
mov
xchg
rcll
push
jl
hlt
sbb
xchg
rorl
cmp
iret
std
mov
or
mov
inc
pop
shl
sbb
cmp
cs
rcrl
xchg
mov
push
dec
sub
imul
add
and
dec
dec
fwait
das
je
lods
pushf
mov
sbb
xchg
jmp
pop
add
je
je,pn
lods
sub
shr
repz
pop
mov
xor
or
inc
les
aas
sbbb
adc
add
sti
xchg
clc
xchg
ljmp
mov
push
sahf
fdivr
sbb
push
xor
aad
or
mov
xor
adc
mov
clc
sahf
test
aad
cs
idivl
in
sti
xchg
mov
cmpsb
loop
rolb
mov
xchg
fidivs
out
sub
pop
shrb
mov
mov
or
xor
or
mov
out
add
inc
in
cmp
jle
xchg
into
push
mov
int
aas
loop
mov
leave
pop
out
add
leave
dec
push
mov
push
fiadds
mov
cmp
pop
and
sub
xchg
loope
ja
adc
int3
das
jae
push
call
pop
aaa
les
mov
sarb
pop
popf
loop
xchg
and
pusha
btc
xor
sbb
stos
cltd
sbb
inc
push
out
dec
fiadds
cmp
jno
xchg
es
mov
insl
or
stc
adc
into
sub
xor
mov
out
imul
adc
xor
push
mov
int3
mov
pop
sbb
enter
xchg
mov
jbe
xchg
in
jl
add
adc
pop
inc
inc
ss
cmpsl
add
jb
jbe
lahf
sub
jns
cltd
pusha
xchg
repz
xor
popa
popa
or
leave
les
mov
fiaddl
cmp
jecxz
xor
ret
jg
in
pop
or
je
inc
push
jbe
in
dec
mov
lods
cld
sahf
loop
pop
jge
and
stos
les
xchg
test
stos
adc
bsr
ret
inc
jnp,pn
pushf
mov
xchg
in
mov
xchg
out
adc
adc
pop
adc
mov
jno
scas
stos
popf
fldcw
pop
movsl
push
data16
pop
stos
push
mov
jecxz
lret
aad
scas
mov
mov
sbb
ds
sbb
out
and
mov
mov
insl
sub
xor
jb
int3
jmp
cli
xor
test
testl
imul
add
mov
addb
hlt
add
aas
popa
jmp
jns
bound
mov
aam
icebp
jnp
mov
xor
adc
call
push
in
mov
xor
popa
xchg
xor
or
jmp
mov
xchg
push
arpl
pop
stos
lcall
pop
xchg
cli
jge
psubq
imul
add
jne
jne
cli
andl
clc
adcb
add
sbb
outsl
mov
imul
out
xor
lods
adc
jmp
jb
mov
rclb
cmp
lock
mov
inc
popf
or
pop
pop
cmp
and
mov
push
daa
stc
adc
loopne
inc
stos
incb
dec
mov
clc
cmp
add
pop
xchg
into
mov
or
ror
mov
sbb
test
sti
ret
cli
pop
popf
jp
jae
js
stc
lcall
test
addr16
aad
outsl
subl
pop
rcrb
mov
notl
aas
sbbl
sub
inc
add
lea
insb
cltd
dec
sub
movsb
mov
fisubrs
jb
push
mov
inc
in
xchg
push
aaa
xor
bound
dec
mov
leave
mov
mov
stos
das
cwtl
inc
mov
shrl
pop
rcrb
in
movsl
rolb
packuswb
lcall
cmp
cmc
popf
jnp
dec
mov
iret
out
scas
xchg
out
mov
lods
andl
sub
and
dec
daa
popa
xor
lods
les
pop
in
cld
push
mov
mov
cmp
mov
cli
push
jecxz
xor
mov
outsl
fcompl
xor
sub
cmpb
sub
fisubrl
cmpl
ret
lcall
in
ret
scas
jbe
sub
stc
jmp
call
dec
xor
aas
xorb
popf
jmp
and
ds
jae
std
sbb
test
inc
mov
jae
jbe
xchg
mov
or
imul
xchg
jne
std
test
mov
negl
push
enter
les
in
gs
lds
xor
xor
add
inc
jl
cmp
xchg
sarb
mov
movsl
push
clc
cmc
push
mov
and
xchg
mov
insb
lds
xchg
pop
pop
decl
lock
fwait
lret
hlt
in
or
xor
test
cmpsb
mov
push
and
jge
arpl
push
push
adcb
mov
jb
movsb
cwtl
rorl
sbb
jle
out
testb
mov
jmp
cltd
or
out
mov
int3
dec
mov
imul
jbe
inc
sarb
leave
nop
pop
fldenv
sub
aaa
add
pop
je
out
lahf
sub
lcall
xor
dec
mov
in
and
sahf
shlb
push
cmp
mov
pop
jns
into
ss
cld
dec
sub
stos
dec
mov
movzbl
add
push
pop
lcall
pop
aas
insb
pop
cmpsb
xchg
mov
mov
jns
cwtl
aas
add
cli
loop
out
test
mov
mov
cmp
dec
jmp
xchg
jo
movsb
xor
outsb
jge
insb
pusha
notl
int
ja
shl
add
popf
lds
test
cmp
lahf
int3
fs
mov
dec
aaa
popa
and
aam
pop
push
pop
outsl
loop
mov
data16
pop
pop
insl
insl
fwait
push
outsb
in
or
pop
jg
cs
in
cli
mov
xchg
adc
cmp
mov
and
xor
xchg
cmp
bound
mov
test
inc
dec
or
pop
jecxz
cmp
dec
loop
mov
xor
fwait
test
push
lahf
sub
gs
add
cmp
pop
cld
dec
xchg
pusha
add
cwtl
pop
scas
gs
mov
mov
lahf
and
xor
les
or
in
and
mov
data16
clc
push
dec
xor
fists
mov
xorl
or
iret
scas
mov
es
inc
jle
or
adc
stos
repz
sbb
mov
shlb
and
in
inc
call
cs
xor
movsl
sbb
fnstenv
sarb
dec
out
pop
enter
and
enter
popf
or
lods
xchg
aaa
dec
rorl
mov
fstps
xor
sbb
sbb
cwtl
mov
pop
xchg
cwtl
and
out
insb
inc
jb
cltd
ror
mov
movl
lret
imul
stos
jge
mov
push
repnz
xchg
inc
orl
jb
add
rorb
pop
cmpsl
ret
ss
aad
add
scas
outsb
test
inc
dec
mov
dec
sub
ljmp
jo
call
cli
or
movsl
sbb
ljmp
jecxz
rolb
pop
xchg
ljmp
out
ljmp
data16
imul
pop
pop
mov
out
pop
or
inc
mov
jp
test
xor
cmc
mov
xor
xor
adcb
sbb
and
movsb
sub
pop
cli
xor
mov
mov
mov
and
and
scas
sbb
xchg
cmp
sbb
inc
fistps
test
leave
dec
repz
cmp
jb
das
mov
frstor
scas
jne
and
aas
cs
sub
mov
mov
xorb
dec
pusha
sub
push
clc
mov
fdivrl
pushf
outsb
lea
ss
sub
jle
mov
jle
popf
lea
movsl
scas
xor
int
push
lahf
jle
shrl
xchg
out
xchg
les
xchg
push
rorl
daa
sbb
mov
shll
sub
jmp
lea
sar
cwtl
adc
cli
fbld
jle
scas
ret
jl
cmp
mov
test
and
mov
enter
sub
aad
mov
mov
movsb
je
push
jp
pop
sti
adcl
aad
inc
movsl
dec
stc
popf
out
jl
push
sbb
xchg
pop
fimull
push
and
add
js
imull
mov
imul
ret
rcl
mov
enter
push
sahf
xor
mov
push
jge
pop
aaa
das
daa
or
negl
jg
aas
lret
les
hlt
and
cld
leave
mulb
js
mov
ja
rol
daa
bswap
lret
cmp
fcomps
imul
rolb
ret
out
mov
inc
outsl
pop
sarb
fisubl
insl
mov
fisttps
push
mov
je
mov
nop
xor
xchg
loopne
subb
mov
ja
mov
sti
popf
xchg
stc
loope
dec
cmp
mov
xchg
push
sbb
sahf
cmp
addl
mov
pop
mov
or
in
xchg
lods
rcrb
repnz
xchg
lret
call
insl
xor
imul
sub
adc
xchg
or
and
push
ds
sbb
mov
mov
test
jecxz
repz
mov
loope
shrb
cltd
add
adc
cmpsl
push
adc
ja
push
decb
mov
adc
repz
inc
outsl
xor
inc
dec
ss
out
cli
adc
mov
add
push
cmp
and
std
and
cmpsb
jb
xor
xor
mov
xchg
and
push
sbb
push
jmp
imul
inc
ret
mov
cmpsl
test
test
cmc
popf
inc
movsb
xchg
sbb
lods
shlb
cld
iret
pop
jmp
sti
mov
movsl
adc
stos
fiadds
dec
ss
bound
add
rcrl
add
insb
pop
incb
pop
pusha
push
ds
mov
cli
stos
cmp
sbb
jo
ja
jae
out
mov
neg
add
fldenv
push
hlt
inc
inc
or
and
xchg
cmp
xchg
gs
cmc
add
stos
aad
mov
push
xor
mov
fdivl
stos
xchg
stc
rolb
adc
xchg
lock
stos
cmc
outsb
xchg
jnp
push
scas
movsl
add
cs
loopne
inc
mov
jle
dec
cmpsl
or
mov
dec
test
or
mov
dec
dec
jae
pop
int3
sahf
xchg
mov
out
xchg
jg
addr16
and
xchg
popa
lds
cmp
jb
xor
lret
in
gs
mov
lahf
mov
sub
in
pop
aaa
jno
lret
jge
jmp
mov
add
push
lret
mov
loop
jnp
mov
lret
pop
cmp
and
mov
jns
adc
cmp
xchg
push
lods
imul
mov
jle
push
jmp
lock
cmp
movsl
push
test
jp
jb
and
stc
add
jp
subl
push
push
xchg
xchg
pushf
add
jg
js
out
arpl
lods
mov
adc
pop
jae
jmp
and
ljmp
jecxz
inc
cmp
test
stos
movl
inc
test
xor
rorb
lock
xchg
test
pushf
iret
mov
aaa
jmp
int3
adc
mov
jo
xchg
sbb
das
in
mov
dec
push
mov
or
jae
mov
push
push
or
in
sbb
pusha
sub
or
mov
aam
loop
test
hlt
and
sbb
das
jno
inc
lock
dec
insl
rolb
pop
faddl
or
mov
sbb
adc
xchg
push
or
pop
cmp
imul
mov
pushf
imul
sarb
inc
pop
push
mov
jnp
test
leave
jbe
cmc
pop
add
arpl
fwait
jmp
fidivrl
mov
loop
mov
movsb
jnp
ljmp
jecxz
xchg
jecxz
add
setl
add
fadd
leave
jle
icebp
outsb
sub
lods
movsl
test
fnsave
jle
push
fnstsw
incl
cmp
test
adc
repz
pop
mov
shrb
cld
xchg
and
js
jecxz
jnp
rolb
inc
adc
stc
mov
out
cmc
inc
int3
repnz
in
cmpsb
pop
pushf
xlat
jg
pop
cmc
xor
jnp
aad
sub
lret
jbe
lret
mov
cli
push
pushf
subb
mov
push
and
push
cmp
cli
push
jecxz
arpl
xorb
sub
mov
push
loope
and
push
cmp
mov
mul
test
jne
mov
call
out
loopne
lahf
adc
pop
out
aas
pop
data16
xchg
ret
cld
push
xchg
pop
dec
data16
cltd
roll
repnz
aam
jle
or
mov
jl
pop
push
out
mov
push
mov
push
shll
addr16
cwtl
fildl
stc
sub
and
mov
jb
out
adc
push
lock
vpsubusb
jp
rcrb
xorb
jno
cmpsl
sub
js
pop
repz
lcall
sbb
rcrl
movl
fwait
stos
fdivs
dec
cmp
push
insb
inc
mov
mov
pushf
push
mov
insl
cmpsl
lods
daa
mov
or
nop
pushf
or
out
xor
sbb
lods
push
out
xor
push
mov
in
ja
xchg
adc
fildll
rcr
js
iret
aaa
dec
pusha
xor
rcrb
inc
push
decl
inc
add
sbb
add
out
inc
aaa
notl
stc
hlt
std
inc
jbe
mov
test
sahf
sahf
jbe
mov
pop
pop
mov
int3
sub
sbb
lret
stos
mov
inc
out
cmp
mov
cld
sub
mov
mov
repz
mov
push
push
repz
loopne
out
xchg
shlb
pop
inc
cwtl
sarb
mov
in
xchg
insb
push
add
push
or
xchg
mov
sbb
lea
xchg
scas
cli
mov
mov
or
jecxz
popa
shrb
jns
enter
fwait
mov
jae
jl
ret
lds
iret
push
lea
je
es
xor
cmc
pop
sti
sub
inc
dec
lahf
pop
clc
lds
mov
cmp
push
push
shlb
sbb
xchg
mov
in
pop
adc
push
sti
mov
rcll
mov
xchg
adc
stos
insl
push
adc
pop
test
addr16
sbb
fs
push
icebp
xchg
lret
lret
fimull
je
cmpl
pop
frstor
fs
pusha
xor
pop
ss
cmp
insl
ljmp
xchg
fwait
mov
mov
jge
icebp
push
in
rcr
lds
jge
cltd
mov
jge
xchg
sub
daa
xchg
mov
ss
pushf
jbe
mov
mov
and
cmpsl
push
jbe
mov
cmc
je
mov
in
ret
jb
cmpsl
inc
arpl
dec
jo
cld
xchg
push
call
test
cmp
or
fistl
jns
lahf
cld
jg
mov
movsl
fwait
fwait
mov
subb
sbb
push
jo
mov
dec
out
lcall
cwtl
mov
pushf
jo
cmpsl
inc
fwait
inc
adc
popf
jae
push
rcrl
cwtl
aad
sarb
in
xchg
push
dec
pop
inc
pop
pop
cltd
xor
mov
les
jmp
and
fwait
jb
xlat
lock
dec
test
in
dec
ja
push
ja
fimull
leave
cli
cltd
and
cld
imul
xchg
mov
mov
test
je
sbb
rorl
popf
xchg
test
push
addb
push
pop
pop
call
ljmp
jne
mov
xchg
add
ret
mov
and
je
mov
dec
jmp
repz
inc
jne
out
loope
xchg
add
and
jg
lcall
mov
mov
dec
add
jno
inc
and
adc
dec
add
jne
ret
repz
jnp
mov
and
sub
xchg
pop
push
cmp
add
pop
jno
leave
and
xchg
outsb
or
fstpl
lret
and
and
add
scas
and
and
dec
mov
adc
dec
insl
in
adc
mov
inc
pop
lcall
or
mov
dec
sbb
fwait
addr16
cli
pop
iret
cli
xchg
jp
mov
rcrb
imul
sbb
jo
xchg
call
sbb
fimull
sub
addr16
notl
dec
aaa
dec
mov
aas
loope
lahf
fistl
stc
clc
jbe
nop
add
jns
sbb
xchg
xchg
mov
frstpm(287
jle
mov
xor
pushf
mov
jb
ds
or
lea
cld
sub
outsb
adc
xor
idivl
inc
pop
xor
les
mov
push
icebp
insb
ja
stos
inc
cmp
jg
nop
rcr
in
jge
push
jmp
cltd
inc
pop
adc
inc
or
fwait
dec
push
inc
add
fs
push
sbb
das
int3
outsb
movsl
xchg
adc
dec
daa
xlat
out
popf
dec
xchg
arpl
mov
lahf
repz
dec
xchg
jo
jg
dec
test
mov
cmp
push
or
shlb
in
or
xor
repnz
dec
and
jmp
gs
xor
mov
faddl
inc
adc
outsb
fidivl
shrl
push
jno
push
pusha
outsl
mov
out
mov
sarl
sub
enter
sbb
mov
ret
incl
rorb
xorb
sbb
push
movsl
adc
adc
xchg
and
and
cmpl
aad
addr16
imul
sbb
push
push
pusha
xchg
and
or
jmp
in
jp
inc
in
mov
mov
sub
mov
pushf
jo
dec
xchg
sahf
xor
orb
push
aaa
scas
mov
js
pop
repnz
outsb
loop
mov
js,pn
adc
int3
mov
popf
aad
sub
xchg
pop
xchg
das
ret
fsubs
mov
adcb
stos
iret
xchg
sbb
and
push
sbb
sbb
enter
sahf
ljmp
add
mov
cwtl
pop
or
and
lea
lds
fistpl
out
mov
xchg
out
iret
sbb
inc
outsb
adc
rcl
add
sbb
cmc
outsl
popa
dec
aam
test
notl
stos
popa
jl
sub
ljmp
jnp
loopne
pop
stc
psubb
inc
aam
movsl
dec
testb
inc
sub
ror
lods
rol
icebp
sub
adc
rcl
cwtl
jno
pop
xchg
mov
add
aam
mov
js
dec
adc
aas
cmp
pop
cmp
loopne
nop
fdivrs
push
xchg
cltd
inc
jnp
insl
xchg
xchg
ss
fidivl
fldl2e
jb
mov
and
mov
dec
pop
out
xorb
rorb
pop
scas
stc
sub
cmp
sbb
and
sti
sbb
adc
jecxz
pop
stos
mov
mov
jle
mov
stos
xor
jle
mov
add
cmp
sub
add
pop
imull
shrb
pop
lret
je
movsl
sbb
inc
cmp
mov
and
fidivs
jmp
dec
push
fnstenv
insb
movsl
jle
or
das
in
jle
aad
push
lret
cmp
mov
xor
je
sbb
lea
loopne
sub
cmp
xchg
icebp
mov
std
push
mov
add
out
pop
dec
mov
aaa
loopne
lods
and
repz
jmp
pop
jmp
bound
movsl
cmp
fucomip
aad
cwtl
imul
pushf
adc
mov
mov
mov
std
lods
or
dec
push
jbe
test
sbb
negb
and
jp
popa
cmp
mov
imul
lods
pop
loop
outsl
rcl
pop
jp
sbb
andb
sub
dec
pop
lods
sarb
cmp
data16
rcl
xor
jae
push
inc
jae
lahf
mov
inc
push
mov
loop
mov
js
lahf
aam
xchg
popa
stc
xchg
jbe
mov
in
push
sub
adc
pop
in
mov
lods
fdivrs
mov
push
dec
loope
shll
ljmp
push
inc
pop
xor
mov
les
repnz
cs
in
aam
imul
add
add
movsl
gs
jo
loope
mov
shlb
dec
sub
pop
push
sub
pop
dec
xor
bound
mov
add
popl
mov
pushf
aaa
mov
jmp
push
or
jne
fnsave
in
xor
add
inc
movsb
mov
dec
dec
pop
test
lea
inc
fsubrs
xor
fwait
cmp
mov
or
dec
clc
mov
and
ja
mov
xor
jle
pop
xchg
fsubrs
fsubr
aaa
mov
popf
lods
mov
sub
and
or
fidivl
lods
mov
rorb
add
mov
mov
in
decl
gs
push
stos
sahf
pushf
mov
jg
xchg
aaa
mov
adc
or
pop
add
mov
jb
push
sub
in
test
pop
into
jne
fsubs
nop
aam
mov
inc
cmp
sbb
jo
and
stos
lods
cld
xchg
sahf
inc
jbe
sub
das
adc
cli
mov
push
jge
inc
sub
or
test
dec
pop
divb
mov
sar
rclb
xchg
loopne
out
adc
loopne
and
pop
jbe
mov
enter
daa
scas
mov
sar
lret
push
sbb
clc
pop
jae
inc
push
lcall
mov
xchg
inc
addr16
dec
out
shrl
adc
jbe
dec
xchg
int3
xor
ficoms
cmp
push
or
leave
rcll
pop
and
int3
sub
jnp
inc
insb
fnstenv
or
push
stc
fadds
mov
push
lock
bt
pop
add
shlb
pop
jle
pusha
movsl
cld
xchg
or
fistps
dec
dec
test
js
mov
in
mov
jb
aas
pop
adc
mov
test
gs
clc
adc
jge
call
in
xchg
jnp
sbb
mov
fwait
jmp
pushf
movntps
sbb
fisttpll
xchg
daa
shll
mov
imulb
mov
lret
sahf
fimuls
push
rcrb
mov
mov
rorb
mov
cmpsl
push
call
dec
mov
popf
movsw
mov
or
pop
test
scas
fistl
jne
fistpll
cmpsb
jbe
mov
add
mov
xor
xor
jmp
jo
sahf
mov
pop
insl
add
push
mov
mov
add
mov
cwtl
insl
xchg
stos
jb
mov
icebp
icebp
jbe
mov
adc
adc
test
lods
mov
jmp
leave
adc
push
movsl
inc
dec
das
mov
mov
decl
imul
std
mov
inc
mov
xchg
mov
jne
sub
adc
jl
addl
in
pop
fimuls
scas
fcoms
pop
popf
pop
ret
add
or
cmp
lea
popf
adc
icebp
insb
mov
mov
rcrl
pop
inc
loop
mov
push
ret
loopne
and
pop
stos
cmp
dec
jne
negl
add
xlat
loop
in
mov
into
sbbb
xchg
xchg
leave
aas
pusha
mov
out
sahf
cmp
mov
push
push
cwtl
add
popa
inc
inc
inc
xorl
rcrl
leave
repz
movsb
dec
pusha
sbb
mov
cmp
rclb
push
or
call
mov
test
xchg
sbb
adc
imul
jecxz
insl
pop
cmp
and
rolb
aas
xor
scas
mov
scas
pop
ss
aam
cmpsb
inc
fadds
lss
sbb
in
test
aaa
xor
data16
cltd
mov
xchg
popf
rorb
imul
mov
sub
and
mov
jbe
enter
fisubrs
dec
arpl
dec
cmp
fld
leave
mov
inc
xchg
jle
mov
cs
push
or
test
and
xchg
dec
imul
pushf
push
pop
xor
push
or
je
loop
jbe
ret
and
cltd
add
stos
xchg
or
push
ds
lds
dec
out
subps
mov
push
je
out
push
out
jne
hlt
jo
xlat
es
dec
push
sarb
push
push
cmpsl
mov
or
xor
stos
or
cmp
push
xor
or
popf
or
loop
pop
pop
iret
in
icebp
jle
lds
ljmp
sub
push
sbb
jns
adcl
sti
cld
push
aaa
push
pop
pop
xor
adc
loope
jne
js
in
mov
inc
lret
pop
jp
testb
std
dec
icebp
or
push
jns
lret
mov
das
and
and
sub
testl
sbb
negb
cmp
cmp
mov
mov
add
push
ljmp
lea
lcall
and
addb
add
mov
jecxz
divb
mov
sub
insl
jne
jecxz
jl
jecxz
daa
jmp
cmpsb
inc
inc
sub
inc
xor
frstor
lods
mov
outsl
xor
sti
push
dec
pop
or
fsubrs
fistpl
daa
jl
js
std
test
into
iret
movb
lock
std
into
jo
sahf
pop
rcrl
mov
rcl
outsl
lock
dec
fbld
xchg
scas
xchg
mov
scas
cmp
loopne
cmp
or
cmp
fcomip
xor
jecxz
in
adc
repnz
lret
add
add
jb
mov
fstpl
outsb
rorl
dec
test
adc
sbb
js
cmc
fs
sbb
xchg
outsl
repz
cmpsl
push
pop
test
into
or
shrl
inc
xchg
outsl
jmp
test
and
fcomi
mov
ljmp
push
adc
in
loope
mov
jl
xchg
inc
dec
inc
ret
das
fdivrs
lcall
or
and
mov
cwtl
adc
jnp
ret
inc
sbb
cltd
test
ficompl
pusha
lods
fldcw
fistpll
mov
pop
push
sub
jg
inc
dec
in
popl
inc
out
inc
fldt
sub
add
mulb
jle
daa
pop
xor
jo
hlt
add
sbb
lcall
push
mov
scas
sub
and
adc
adc
shll
cmp
shrl
xor
mov
addb
jmp
mov
decb
mov
jbe
lods
xchg
iret
fmul
iret
sbb
mov
mov
cwtl
and
adc
dec
ret
out
int3
mov
jb
xchg
xchg
mov
enter
fprem1
mov
rcll
and
cmpsl
xor
mov
mov
loopne
aas
add
mov
sbb
sbb
and
cmc
mov
or
rorb
push
in
cs
cmp
jge
pushf
pop
roll
stc
mov
or
sahf
mov
outsl
add
lcall
mov
movsl
jecxz
cltd
pusha
mov
lret
mov
test
out
fsts
sahf
mov
mov
out
cld
mov
out
sti
clc
jg
fs
sub
out
push
out
push
or
or
leave
lods
into
dec
test
adc
fprem1
pusha
dec
cmpsb
negb
stc
sbb
sub
ror
push
cmp
ret
hlt
repnz
pusha
cmp
bsr
mov
and
mov
aas
hlt
xchg
jle
xor
lret
addr16
adc
mov
movsb
movsl
int3
popf
ds
bound
jnp
or
iret
mov
xchg
rcr
cltd
xor
mov
dec
cmpsl
pop
movsb
xor
xor
neg
imul
int3
stc
mov
test
sbb
sub
and
cmc
or
lret
iret
add
es
mov
xchg
shl
cld
shll
jae
sub
adc
xor
pop
mov
adc
sahf
xor
sub
xor
fsubl
filds
mov
mov
loop
xor
fs
or
and
aaa
testl
leave
sbb
out
mov
dec
inc
mov
add
sbb
push
jns
mov
push
sbb
aaa
adc
jbe
mov
fwait
and
dec
pop
hlt
pop
jne
call
push
scas
jmp
sub
push
push
ja
sbb
inc
loope
adcl
fildl
lret
enter
xchg
in
cmp
iret
flds
daa
clc
add
idivb
inc
sub
call
jp
imul
clc
jecxz
lret
add
hlt
imul
int
repnz
xor
int3
sbb
jge
sbbl
pop
or
inc
sbb
fdivr
es
orb
test
xchg
adc
mov
pop
sbb
lret
and
mov
sbbl
in
jno
aam
mov
les
imul
jmp
sbb
inc
sub
push
pop
addr16
andl
mov
lret
mov
mov
pop
mov
xor
fwait
pushf
xchg
std
inc
int
ja
adc
shll
add
sub
push
fstl
out
ret
test
xchg
stc
pop
leave
into
push
loopne
cmp
xlat
push
mov
jb
mov
xor
mov
fninit
xchg
mov
clc
js
pusha
xor
or
pop
enter
mov
mov
lods
es
pusha
dec
cmp
jg
cmp
inc
xchg
or
pop
push
stos
mov
int
nop
iret
push
mov
xor
mov
fisubrl
pop
mov
sub
daa
pop
cmp
test
push
xchg
sub
push
addr16
insb
mov
xor
lahf
fdivrs
mov
jle
in
sbb
and
lds
in
jmp
aaa
arpl
adc
sarb
pushf
iret
jnp
push
bound
xchg
pusha
sub
insl
add
mov
mov
stos
fimull
or
push
mov
adc
in
mov
test
stos
sub
and
push
adc
dec
jl
stos
outsl
pop
mov
and
les
subl
iret
shr
rclb
dec
push
rclb
jo
jns
or
fcmovnu
mov
fdivs
nop
sahf
cmp
xchg
aam
xor
cli
loop
aad
mov
pop
lds
test
add
dec
pop
jne
add
xorl
pusha
mov
push
add
mov
sub
mov
lret
into
and
cld
mov
fstps
imul
add
lock
ret
test
out
fldl
cld
movsl
fyl2x
add
mov
bound
cmc
xor
jnp
lds
cld
stc
scas
subl
and
jb
fucomip
cs
mov
pop
cmc
stos
or
sub
xchg
dec
xchg
jae
push
lcall
das
xchg
add
push
data16
inc
mov
outsb
nop
add
ss
repnz
lods
arpl
sbb
xor
fcomps
lret
jmp
dec
xchg
pop
test
jns
push
maskmovq
lret
sbb
mov
ljmp
shlb
and
in
pop
add
mov
mov
lock
mov
in
stos
jb
frstor
and
sbbb
xchg
adc
lock
and
jnp
push
repnz
pop
out
push
repz
xchg
fcomip
xchg
loope
lds
jo
je
inc
cmpsl
in
popa
daa
std
jns
lods
fsubr
arpl
fnsave
pop
mov
pop
aad
jmp
cmp
jb
test
mov
leave
cmpsl
xchg
xor
pop
jo
pop
pop
mov
sbb
lods
inc
xor
add
ret
jnp
call
dec
dec
mov
or
pop
jecxz
aad
sub
or
in
fnstenv
jns
push
lods
pop
xchg
cs
push
inc
push
mov
fdivs
lds
xlat
out
inc
pop
cmp
inc
shrb
push
mov
shrl
in
repz
or
mov
movsl
lahf
fwait
iret
subl
cmc
and
shlb
sbb
pop
gs
and
gs
jns
mov
decl
or
dec
or
sbb
sbbb
fbstp
cmp
mov
add
gs
mov
and
call
cmp
mov
aaa
inc
and
xchg
push
push
fs
mov
aam
sbb
mov
ss
aad
shl
adc
xchg
sub
or
push
adc
xlat
sub
or
imul
jno
mov
xor
sbb
mov
into
xchg
add
nop
sti
rclb
xchg
je
xor
jecxz
xchg
mov
in
mov
mov
cmp
pusha
and
mov
sub
inc
jle
xor
pop
sbb
pop
in
xchg
mov
in
ret
inc
cli
in
fs
pop
out
and
add
lcall
adc
ljmp
add
inc
adc
mov
fldenv
dec
and
aam
xchg
es
loopne
sbb
iret
pop
jno
lcall
imul
out
dec
ss
stos
fwait
inc
repz
enter
call
mov
fsubp
andb
xor
rclb
jecxz
mov
mov
mov
out
cmpsl
dec
and
lods
jb
cmp
sub
xor
pushf
dec
dec
sbb
adc
mov
push
sti
cmp
or
ret
mov
mov
lahf
mov
sub
lods
cli
mov
pushf
and
fistps
cmp
pop
std
cmc
sbb
mov
sbb
dec
dec
sub
insb
inc
shlb
sti
lahf
adcl
pusha
lcall
daa
dec
jns
mov
pop
and
in
stos
pop
inc
mull
cmpsl
dec
mov
xor
int
movsl
push
jns
mov
jge
imul
push
add
fiaddl
jle
add
and
ljmp
inc
mov
and
jecxz
mov
add
mov
xchg
or
or
dec
or
aad
jo
ss
inc
and
loopne
and
insl
stos
jmp
dec
cmp
imul
ret
adc
or
fidivrs
fldenv
in
dec
fs
sub
repnz
rcrl
sub
clc
inc
nop
ja
or
cli
int3
mov
xchg
icebp
imul
cmp
cmp
pop
dec
xchg
bound
lods
dec
sbb
sub
test
test
shrb
iret
add
push
push
add
adc
pop
add
aaa
push
add
adc
call
mov
push
cmp
sub
shll
jnp
nop
stc
movsb
nop
cmpl
xchg
lret
adc
test
ss
les
jmp
sbb
jno
cmp
pop
inc
jmp
add
imul
push
icebp
xchg
cmp
cmp
lds
xor
add
xchg
and
sub
or
sub
sub
arpl
pop
das
arpl
inc
stos
push
mov
out
jle
divl
jae
scas
loope
adc
je
push
ljmp
inc
nop
repnz
addr16
or
es
pop
dec
mov
push
xchg
fistpll
dec
leave
test
imul
or
mov
sarb
cmp
sub
lods
movsb
jno
inc
push
mov
inc
pushf
sbb
inc
loopne
arpl
mov
cwtl
sbb
xchg
in
ds
out
inc
mov
sub
pop
xchg
nop
test
daa
int3
adc
js
out
cli
xlat
cmp
cmc
and
fildll
adc
leave
jne
cmpsl
imul
lahf
repz
push
or
ss
mov
xchg
ljmp
rcrb
dec
adc
and
mov
cmp
jae,pt
jbe
push
cltd
rcll
jns,pt
mov
jmp
mov
loop
sub
aaa
iret
jmp
cmp
cs
xor
outsl
add
jmp
pop
into
aaa
mov
mul
mov
jl
cmp
lock
mov
push
or
mov
in
pop
lret
push
hlt
cltd
idivb
sbb
icebp
mov
movsb
cli
shrb
imul
loopne
xchg
mov
cltd
mov
mov
andb
mov
aaa
insb
mov
inc
inc
sub
insb
ljmp
inc
addr16
mov
iret
adc
adc
sbb
sti
jmp
ds
das
fdivr
or
rcrb
les
jmp
or
insb
pop
lock
aam
jns
add
jae
movsl
mov
add
scas
xchg
mov
push
mov
out
gs
dec
xchg
sub
xchg
push
xor
jp
lret
mov
xchg
add
out
jl
inc
test
ljmp
fnstcw
dec
movsl
xchg
dec
in
int3
xor
cs
cwtl
mov
jne
sub
js
sahf
mov
shll
push
rcrl
pushf
sub
sub
andb
or
aam
xchg
mov
lods
push
int
mov
movsl
or
repz
adc
add
fcmovnb
lea
hlt
popf
out
jecxz
lret
mov
mov
cli
push
test
push
cltd
lret
cs
inc
andl
and
sub
imul
cmc
fdivrl
mov
mov
int3
sti
sub
xchg
sub
pop
cli
addr16
test
pop
push
mov
fsubr
dec
pushl
lret
imul
mov
ret
call
faddl
adc
xchg
mov
aaa
aad
cmc
stc
sub
mov
jae
lret
dec
and
push
icebp
inc
stc
jl
xor
aaa
cmpsb
aas
pop
push
pop
inc
fbstp
scas
add
xchg
jbe
mov
mov
xchg
icebp
inc
movsb
int
inc
mov
fisubrl
aam
ja
test
aas
ss
orl
outsl
ds
or
dec
rcrb
sub
popa
in
ljmp
lahf
mov
mov
add
imul
inc
jmp
cltd
ret
mov
sahf
adc
xor
lcall
movsl
sub
inc
cs
dec
fcoms
jne
lret
or
lret
popf
loop
mov
arpl
dec
dec
mov
dec
mov
jl
xor
lcall
sbb
out
inc
adc
dec
cld
or
xor
nop
or
fldenv
std
mov
or
loopne
cs
scas
cwtl
nop
push
fbld
inc
and
xor
inc
lods
aam
xchg
loop
imul
fs
fisubrs
mov
inc
mov
mov
outsl
and
in
xchg
dec
mov
rorb
cmp
mov
adc
repnz
inc
pop
icebp
dec
jmp
or
pop
or
push
mov
add
pushf
es
pop
pushf
mov
cwtl
mov
cmpsb
insb
lock
rcl
icebp
push
push
mov
dec
adc
push
adc
cmc
mov
push
arpl
mov
outsl
pop
mov
pop
aaa
out
shrb
push
std
pop
into
push
pop
jnp
sub
ficompl
cmp
mov
das
lock
popf
xlat
out
or
mov
xor
xor
sbb
aaa
xor
or
out
pop
push
sbb
xchg
or
sbb
cmp
jecxz
out
daa
mov
mov
mov
mov
lret
insl
test
push
mov
push
xchg
jl
push
out
mov
xchg
jb
nop
icebp
orb
inc
sub
loopw
cmp
mov
cltd
inc
xchg
in
mov
aam
sub
inc
sub
imul
shrl
test
fcmovnbe
push
mov
adc
and
cmp
xchg
rclb
cltd
sub
xor
and
pop
stos
inc
int
xor
or
movsl
inc
cmc
scas
mov
mov
xor
sbb
sbb
ss
mov
shl
fwait
cmp
aam
insb
push
sbbb
sub
push
out
xchg
fcmovnb
movsl
hlt
cmp
or
insl
incl
or
fisubl
mov
test
mov
sti
or
in
or
mov
ds
loop
hlt
adc
imul
mov
pop
dec
push
in
inc
adc
xchg
insl
jnp
movb
loopne
jo
addr16
add
cwtl
insl
insb
dec
sahf
mov
test
dec
inc
ficomps
mov
aad
xor
cmp
xchg
scas
test
adc
nop
xor
xchg
push
or
cs
insl
xor
sbb
arpl
jge
inc
mov
dec
loope
inc
dec
xchg
jbe
std
mov
jp,pt
mov
idivl
dec
scas
or
clc
push
test
adc
cmp
arpl
fsubrs
push
dec
sub
ds
enter
inc
pop
enter
sahf
popa
pop
adc
hlt
lea
sbbl
and
or
dec
mov
xor
loop
nop
jle
or
xchg
es
lea
mov
adc
mov
mov
jp
pop
call
movsb
imul
cmp
imul
std
xchg
fcompl
inc
jmp
lret
mov
xor
xor
fistl
mov
mov
adcb
hlt
add
mov
nop
cmp
or
mov
sub
xor
jmp
fmuls
hlt
cmc
ret
and
aad
or
ds
xchg
enter
inc
add
mov
fistpl
cs
and
mov
ds
add
rolb
cmp
enter
cltd
push
xchg
lods
push
or
sub
jno
xchg
aaa
mov
insb
fadd
in
pop
dec
imul
jp
scas
out
mov
dec
mov
jbe
mov
imul
aam
insb
mov
push
pusha
mov
mov
into
sub
jbe
mov
cmp
aam
inc
std
pop
jl
out
ss
dec
rep
push
jae
movb
ja
outsb
decl
sub
out
ss
fstl
fcomps
mov
and
mov
stos
imul
xchg
je
cmpsb
int3
sub
mov
sub
or
mov
pop
fidivl
xchg
into
mov
lds
xchg
mov
jle
out
mov
sbb
cmp
pop
fisttpll
call
jg
xor
std
xchg
mov
sub
ds
call
dec
aam
push
js
pop
imul
cwtl
nop
dec
aaa
push
shrb
mov
cmc
push
scas
in
inc
test
inc
lret
bnd
sub
stos
push
xchg
out
pop
mov
lret
fs
dec
fiadds
jne
daa
sbb
xchg
fwait
lds
jmp
fdivp
fcoms
xchg
jp
push
lods
cmp
and
das
fs
pop
xor
movsl
cmp
xchg
sub
pop
jne
faddl
mov
test
jno
sub
je
or
lea
mov
fwait
in
or
movsl
push
sub
aaa
mov
ret
inc
pushf
les
repz
dec
mov
pop
cmpsl
push
xchg
outsb
jnp
xchg
mov
std
dec
push
and
pop
pop
push
cmpl
fldcw
cmp
cmp
dec
repz
pop
repnz
or
and
fwait
or
add
sub
int
sub
add
jae
xchg
test
sub
xchg
daa
les
into
loopne
out
pop
jp
jmp
xchg
in
sub
push
es
jbe
lret
cs
jb
ljmp
lds
lods
push
in
inc
xchg
cli
or
movsl
into
add
jge
sub
mov
les
out
cmc
addr16
imul
jo
jg
rcll
adc
into
xor
mov
inc
mov
adc
pop
sti
call
mov
jge
xlat
loope
repnz
call
jle
jo
inc
aam
lods
mov
and
mulb
jne
xor
or
aaa
push
jno
fdivrp
xor
cs
dec
dec
fisttpl
lea
sbb
pop
imul
dec
jne
in
lret
ss
in
jbe
xor
mov
xor
and
cmp
adc
cmp
sbb
jo
leave
fcomip
sbb
xorb
aad
cmp
cli
cmp
xor
lahf
cmp
lret
test
fmuls
out
rcrl
out
adc
lret
js
std
pop
xlat
push
icebp
cmp
cwtl
lahf
inc
bound
mov
jne
xchg
and
xchg
inc
call
mov
enter
push
pop
aas
push
arpl
cmp
out
mov
pop
inc
inc
mov
icebp
xchg
std
pop
out
pusha
mov
mov
aad
outsl
test
in
jne
lock
push
sbb
fistpl
insb
fsubs
bound
popa
mov
pop
dec
popa
xor
cltd
and
push
in
mov
pop
fwait
in
arpl
cmp
jb
mov
sbb
aam
sub
dec
testb
inc
inc
js
aaa
cmp
push
mov
cs
mov
jg
push
sub
mov
xchg
gs
cmp
and
jne
lahf
lcall
dec
mov
add
dec
mov
rorb
xchg
fdivrl
je
xor
xchg
clc
push
dec
lret
addl
jp
outsb
ret
out
bound
cmp
lcall
je
inc
pusha
push
inc
icebp
jnp
xorl
rcrb
int
pop
dec
and
es
stc
pushf
rol
inc
leave
cmp
rol
mov
mov
clc
mov
mov
mov
subb
mov
sahf
xor
out
mov
dec
daa
mov
push
push
fadds
cmpsb
fldl
or
lods
mov
flds
in
outsl
cmc
mull
mov
dec
andb
and
add
lret
xor
inc
xor
dec
insl
xchg
mov
hlt
inc
fsubs
sub
jl
adcl
push
jl
ds
xor
std
inc
je
or
push
push
add
lods
mov
xchg
out
push
stos
enter
mov
dec
sub
mov
push
mov
xor
push
ds
push
pop
jge
daa
cltd
xor
inc
iret
scas
stos
mov
pop
mov
adc
mov
jnp
jae
jnp
push
leave
pop
inc
mov
and
sar
ss
sbb
pushf
adc
jb
movsl
fucomp
cld
mov
push
loop
cli
popa
inc
cmp
pop
push
leave
jl
in
cs
dec
or
xor
sub
outsb
pop
fsubl
and
and
push
jge
push
fiaddl
push
insl
push
sarb
test
pop
mov
jnp
jnp
fwait
dec
lcall
pop
aas
push
push
das
test
int3
ret
mov
inc
jmp
js
inc
inc
sar
adc
jl
lock
int3
cpuid
add
leave
sub
cmpsl
pop
push
stc
notl
xchg
add
negb
push
enter
or
xchg
sbb
cmc
movb
ror
nop
pop
mov
xor
dec
faddl
fidivrs
mov
lahf
sbb
sarl
stos
xor
inc
call
push
jg
nop
mov
ja
lret
aaa
pop
push
int3
rcrl
test
dec
mov
mov
sbb
std
push
xorb
inc
push
or
and
data16
push
and
pop
mov
fsubl
cmp
adc
loope
les
bound
stos
xchg
mov
clc
aad
ss
dec
int3
mov
inc
xor
fs
lret
ret
data16
ffreep
lahf
and
mov
mov
movsl
jp
popa
ljmp
lcall
mov
dec
mov
les
xchg
push
xor
movsb
test
aam
stos
rcrb
mov
sbb
push
pmulhuw
jae
test
push
sbb
aas
or
std
add
rcrb
dec
xchg
mov
ret
imul
xor
shrb
andb
push
int
jge
inc
movsb
fmull
push
xor
mov
push
or
test
or
outsl
pop
lret
ss
in
pop
movsl
out
and
adc
in
sub
fucomip
add
or
jmp
xchg
jmp
inc
push
dec
sbb
mov
mov
inc
in
out
inc
loop
xchg
outsb
enter
mov
in
out
cmp
in
fstpl
push
mov
xor
pop
subl
lods
dec
cmp
std
pop
mov
stc
xor
lods
loopne
int
mov
pop
push
outsb
sub
insb
test
mov
cld
rorl
push
and
cmpsl
out
cmp
fidivrs
mov
mov
cmp
xchg
jno
adc
jo
sbb
inc
rcrl
and
test
push
ret
inc
pop
aad
push
popf
rol
es
mov
sbbb
popf
push
addr16
es
fcoml
ds
loop
lock
mov
lock
lea
mov
repnz
inc
add
cli
mov
cmp
inc
cs
loopne
mov
jnp
in
xchg
adc
mov
inc
push
adc
sub
inc
or
dec
jecxz
xchg
cwtl
mov
inc
sub
xlat
mov
mov
js
dec
das
dec
jp
popf
outsb
cwtl
stc
mov
sbb
and
add
andb
and
inc
and
std
jp
xchg
leave
adc
aaa
fsubl
mov
or
jg
inc
xor
jno
push
sbb
add
into
clc
shrb
cwtl
les
mov
mov
icebp
in
popa
mov
mov
cmp
xor
mov
cs
cmp
xlat
xor
out
ja
enter
mov
jmp
mov
cmp
stc
pop
and
adc
rol
pop
xor
dec
aas
cs
test
push
push
jecxz
mov
pusha
stos
outsb
mov
cmp
pop
and
pop
addr16
mov
mov
stos
mov
clc
in
dec
dec
bound
sbb
sbb
insl
lret
sub
mov
sub
pop
and
cmp
sub
fstl
sbb
cwtl
mov
jecxz
and
or
je
and
out
push
xchg
stc
jp
out
test
adc
aas
int3
add
push
xorb
subb
mov
xchg
xchg
fildll
inc
subl
mov
stos
mov
dec
and
ljmp
cmc
insl
inc
inc
bound
out
stc
dec
in
jmp
pop
cmc
cmpsb
stos
lea
insb
jbe
mov
xor
sti
icebp
ss
call
xorb
iret
ret
out
dec
mov
inc
mov
adc
xchg
mov
outsb
pop
jmp
jne
inc
jecxz
mov
ljmp
mov
xor
dec
dec
orb
out
and
fs
xor
or
out
jecxz
push
loopne
int3
leave
mov
testl
xchg
add
dec
push
lds
lods
mov
stos
in
jno
add
ret
xor
scas
scas
and
xchg
xchg
stos
aam
adc
xor
aad
mov
ja
adc
or
jne
ffreep
into
and
sub
adc
repz
aam
repnz
pop
arpl
pop
mov
mov
ret
inc
jge
or
dec
add
mov
movsb
addr16
sbb
mov
cmp
sbb
jns
es
insl
or
out
loope
data16
cld
dec
mul
and
cltd
ja
jmp
hlt
adc
loopne
orb
mov
push
mov
pop
jno
loopne
xchg
outsb
daa
and
aad
shr
lret
insl
and
bound
es
das
das
iret
jae
mov
dec
je
inc
adc
pop
das
sbb
and
cmc
sub
mov
test
mov
jo
cmp
dec
xchg
jecxz
daa
daa
pop
repnz
fldl
repz
imul
rorl
push
test
popf
push
cltd
subb
imull
xor
pop
xchg
push
sub
jp
aaa
push
mov
cld
sub
jno
mov
jecxz
push
loopne
in
pop
fdivrl
mov
adc
pop
pop
decl
nop
fnstenv
jbe
nop
inc
repnz
jge
and
xchg
ffreep
lret
add
mov
subl
mov
mov
inc
mov
cmpsl
into
add
mov
out
push
cmp
xor
pop
cmpsl
pop
lcall
mov
loopne
aad
nop
jne
dec
and
jnp
aam
dec
add
pop
sahf
in
jo
or
popf
daa
sub
jns
inc
mov
jg
in
mov
mov
subb
jmp
fsubrl
sub
sbb
mov
in
sti
mov
cli
in
pop
jge
fwait
or
shrb
ret
adc
jnp
pop
and
mov
pop
aaa
loopne
lahf
cmp
cmp
dec
cmpsl
mov
sub
arpl
xchg
cli
dec
mov
jns
stos
mov
inc
pop
push
notb
call
mov
scas
add
xchg
sub
mov
jg
adc
xchg
mov
sbb
adc
jmp
cmpsl
add
and
or
mov
dec
stos
xor
push
adc
mov
inc
cmp
int
jmp
into
or
push
push
xor
jmp
push
repz
xorl
jo
js
sub
insb
out
aaa
sbb
push
movsl
int3
add
push
popa
cmpsb
fisubrl
inc
dec
mov
mov
test
pop
cmp
push
adc
push
ret
jnp
aaa
push
pop
adc
and
test
mov
insl
dec
mov
push
aad
dec
int
or
outsl
inc
adc
mov
mov
lods
int
mov
cltd
dec
scas
pushf
insb
hlt
sahf
jne
push
mov
add
ja
xor
mov
fnstenv
stos
sub
cwtl
outsb
call
or
imul
lret
call
sub
xor
aaa
int
hlt
mov
mov
iret
das
xor
sub
mov
push
ljmp
lret
mov
jp
cmpl
sub
fmuls
fcoms
cld
aaa
push
int3
je
push
pop
dec
adc
jns
xchg
shrb
stos
mov
cmp
mov
addr16
jo
movsl
out
loopne
jg
ret
mov
lret
jae
pop
scas
mov
inc
leave
cli
pop
cwtl
push
mov
sbb
imulb
fidivrl
lahf
jg
lret
xchg
push
pop
insl
in
cmpsl
ja
addb
call
fiaddl
pop
cmp
sbb
pop
icebp
sub
rolb
shll
test
roll
sbb
stos
or
cmpsl
insl
xor
xlat
mov
inc
test
jno
sbb
data16
fwait
pop
jnp
jo
add
jge
xchg
hlt
push
jns
lods
push
pop
pop
out
shlb
xchg
lods
ror
push
in
xchg
out
std
adc
jle
aam
dec
adc
pop
fsubrs
arpl
ret
cmpsl
js
push
pop
in
xchg
aam
sub
cmp
push
add
sbb
pop
sub
in
hlt
mov
mov
in
ret
cmp
jnp
jmp
ret
mov
cmp
dec
dec
mov
and
pop
fistps
sub
sbb
mov
mov
mov
jne
inc
sbb
xchg
pushf
sub
push
cmp
push
add
in
xchg
das
or
and
inc
shrl
pop
fwait
mov
ds
dec
pop
inc
outsb
xor
call
sub
jmp
lea
push
mov
sub
into
scas
adc
inc
cmp
mov
sbb
mov
inc
std
sti
out
sbb
or
cmp
test
incl
nop
or
jmp
inc
adc
mov
lret
mov
cmp
inc
dec
repz
fdivrp
pop
pop
stc
aas
adc
movsl
lock
insl
jo
cmp
ds
pop
or
enter
test
push
aam
mov
loope
les
mov
pop
jbe
dec
out
bound
xor
in
mov
mov
fldcw
add
jp
stc
pushf
xchg
lods
in
bound
jnp
mov
xor
pusha
xchg
or
leave
or
test
fsubr
mov
and
xlat
test
pushf
inc
out
jp
sub
out
mov
fwait
inc
pop
xchg
xor
adc
hlt
inc
pop
loopne
jecxz
dec
stos
sbb
aaa
loope
dec
adc
xchg
iret
lods
cld
inc
jnp
mov
dec
lahf
sbb
cmc
out
loop
cmc
cltd
jnp
outsl
out
push
add
mov
cltd
xor
sbb
test
pop
nop
sbb
xchg
mov
mov
inc
mov
mov
jg
mov
out
push
sbb
push
lcall
movsl
adc
inc
jle
imul
push
ficomps
jge
leave
pop
mov
in
jo
sub
mov
out
ss
shll
scas
or
lds
jg
push
sub
sti
pop
ljmp
jns
bound
shll
mov
sbb
pushf
mov
outsl
add
scas
in
pushf
scas
and
jmp
stc
jl
outsl
scas
mov
insl
mov
push
mov
and
roll
lcall
setg
in
push
push
icebp
xor
lea
int3
call
das
mov
into
adc
jbe
add
imul
mov
popf
andl
jg
inc
cwtl
adc
aas
xchg
rolb
sub
repz
push
jp
subl
inc
push
mov
and
aas
sbb
pop
sbb
push
xor
outsb
pop
push
ljmp
push
shrl
jge
cmp
aam
inc
imul
in
mov
lahf
out
loopne
xor
lods
loopne
movsl
frstor
bound
push
sub
iret
je
sbb
insl
push
bsf
cli
int
push
out
aaa
adc
and
fldenv
jecxz
fidivl
inc
mov
aad
mov
in
add
lahf
mov
and
mov
dec
add
add
in
ret
imul
inc
adc
sub
cmc
sti
dec
pop
mov
adc
push
xchg
idiv
mov
dec
add
sub
jmp
sub
fs
call
mov
add
and
loop
sbb
push
sbb
faddl
mov
jl
push
int3
lock
fldt
push
cmp
sbb
jle
out
js
jne
add
fucomi
push
xor
sbb
nop
pop
push
mov
cwtl
mov
loopne
pop
mov
pop
xor
jne
dec
jo
loopne
inc
add
add
cmp
fsts
fcomi
mov
adc
ret
int
inc
icebp
jnp
pop
rorl
insb
aas
adc
dec
xchg
arpl
sti
subl
mov
cmp
repnz
add
fldenv
jb
out
cld
lret
pop
shr
jo
arpl
jo
fisubl
cs
hlt
pop
inc
sbb
adc
es
or
and
or
cmpsl
inc
mov
divl
adc
mov
mov
jnp
pop
sbb
and
xchg
xchg
cmp
push
fdivrp
stos
adc
push
jbe
and
xchg
or
cld
jbe
int3
scas
lods
and
aad
dec
push
inc
add
dec
dec
jge
mov
dec
lret
lods
inc
or
mov
dec
sub
pop
insl
mov
into
aad
xchg
fcomps
leave
cwtl
fcomip
mov
cmc
mov
andb
fsubl
mov
jo
dec
outsb
jne
sub
inc
scas
xchg
iret
inc
nop
and
mov
mov
xchg
pop
je
mov
inc
std
nop
and
xchg
test
ret
xchg
push
subb
and
test
pop
outsb
push
and
xor
xor
pusha
cld
sahf
mov
sbbb
bound
cmp
addr16
jl
shr
out
or
xchg
sbb
and
sbbl
push
mov
rclb
jnp
xchg
push
push
shrl
push
jo
mov
mov
or
cld
push
cmp
movsl
cmp
popf
jg
das
test
xor
mov
xor
fsubrl
and
outsb
jl
xor
and
cmp
jp
decb
sbb
mov
dec
xchg
add
sub
cmp
mov
add
pop
jmp
or
fiaddl
sub
loop
outsl
cmp
pop
lret
add
pusha
pop
lods
sbb
int3
and
xchg
jbe
inc
daa
mov
ret
sub
fisubl
push
or
mov
lods
sahf
ss
dec
ds
test
les
mov
pushf
dec
dec
jecxz
cli
lea
insb
movsb
lock
dec
cltd
xor
pop
imul
outsl
outsb
aaa
xchg
arpl
add
in
mov
int
sar
lods
scas
xchg
adc
mov
mov
add
pop
jns
bswap
cmp
shlb
inc
add
aaa
xchg
into
mov
fisubrs
dec
cmc
mov
jne
jge
pop
ficompl
cwtl
lcall
fimuls
lret
jb
inc
fisttpl
loope
cmp
pop
xchg
mov
xor
leave
mov
cmp
shll
call
mov
jae
movsl
jo
cmp
jne
jno
mov
aam
and
cmp
or
fsts
imul
dec
cmc
leave
mov
cmp
jae
xor
jmp
pop
mov
enter
mov
nop
icebp
fucom
cmp
push
inc
enter
aam
xor
fimuls
sbb
out
cltd
popa
test
or
xlat
pop
out
in
ss
cmpsb
xchg
outsl
shlb
xchg
sub
and
jle
aaa
repnz
inc
and
push
dec
xor
lods
xor
out
out
arpl
nop
xlat
bound
test
mov
sub
mov
dec
es
das
cwtl
shl
pop
mov
cmp
aam
test
mov
add
mov
sbb
xchg
cld
je
mov
lock
mov
das
fcom
sbb
test
imul
lahf
jecxz
in
mov
mov
mov
hlt
scas
rclb
xchg
xlat
push
xchg
sahf
shll
cmp
pop
push
jmp
dec
xchg
push
jne
leave
push
dec
loopne
outsb
sbb
leave
mov
ja
cmp
sbb
lret
hlt
mov
sub
fsub
pop
psubw
js
or
cmp
adc
sub
ja
and
popf
mov
loopne
push
popa
shll
repz
xchg
movsb
cmp
insb
xor
dec
sub
std
js
adc
xchg
pop
dec
lock
sub
aaa
or
pop
divb
sbb
les
fmuls
and
dec
sub
jo
in
fcompl
or
xor
movb
lcall
pop
push
repz
pop
aad
jmp
ror
lods
daa
sahf
cmpsl
cmp
pop
cmp
sub
pop
pop
inc
mov
xor
push
ljmp
imul
push
or
insl
push
dec
mov
push
jg
test
or
push
sbb
lcall
adc
sbb
inc
in
add
inc
add
lock
adc
pop
je
mov
sbb
fadd
mov
add
notb
sbb
mov
lods
out
je
adc
mov
movsl
outsb
pop
push
in
inc
jle
xchg
mov
divl
or
loope
je
daa
mov
ret
pushf
push
insl
test
lea
sub
dec
in
xchg
and
mov
dec
test
jl
xchg
jns
push
xchg
pop
xchg
mov
inc
push
lret
clc
push
add
adc
add
cmc
lret
stos
push
movsb
inc
mov
xchg
add
movsl
push
lds
iret
or
inc
dec
jmp
hlt
push
fwait
dec
lcall
jo
lds
fcompp
xor
xchg
imul
in
adc
jp
aad
in
loopne
jo
pop
sbb
mov
sub
or
mov
fstpl
fiaddl
aad
outsb
jo
lods
movsl
movsl
repnz
outsl
mov
mov
imull
push
dec
imul
push
sub
dec
push
loope
daa
das
push
gs
mov
ds
aad
scas
add
mov
xor
or
fstpt
scas
sbb
mov
pop
cmp
xlat
pop
mov
xchg
pop
mov
mov
cmpsb
test
pusha
adc
push
cmp
pop
clc
xchg
xchg
inc
xchg
or
imul
mov
adc
push
mov
push
add
cwtl
shll
push
sub
adc
push
insb
cmpsl
out
out
dec
into
lods
lret
stos
leave
xlat
lods
arpl
sbb
repz
and
mov
inc
mov
mov
jg
mov
hlt
cwtl
adc
xchg
push
pop
mov
loopne
fcoml
sub
jecxz
pop
cmp
fnsave
jnp
inc
pop
mov
popa
fists
fdivr
cmp
pop
mov
fdiv
add
in
pushl
call
sub
pop
bound
sahf
stos
pop
gs
pop
sub
push
dec
in
in
shrb
fs
pop
push
push
or
ljmp
cmp
xchg
push
in
xchg
ja
push
cld
sbb
pop
mov
push
lods
jne
dec
lea
loope
and
cmp
nop
pop
dec
sub
lods
sarl
inc
inc
mov
ss
xor
ror
scas
sbb
mull
jmp
sbb
jg
jo
sub
leave
pop
fwait
imul
hlt
sub
and
ret
mov
push
nop
sbb
pusha
flds
and
mov
sbbb
sub
stos
dec
mov
mov
mov
fcoml
mov
stos
pop
jbe
push
mov
leave
ret
cli
push
xchg
test
js
hlt
mov
push
pop
lret
int3
or
je
fdivrl
in
loopne
add
xchg
pop
pop
add
stos
mov
lret
dec
push
jnp
call
dec
shll
and
xchg
mov
pop
push
ds
imul
leave
fisttpll
repnz
inc
test
out
in
inc
jle
cmp
test
dec
xor
aas
btc
cmp
add
pop
mov
xchg
repz
push
clc
and
gs
fistps
daa
test
adc
mov
fwait
mov
loopne
std
add
out
fldcw
xchg
cld
scas
sbb
cmp
push
ja
mov
lahf
lret
subl
jo
les
jb
mov
outsl
adc
testl
mov
mov
outsl
cwtl
or
dec
mov
iret
jne
push
lret
xorl
jo
mov
ljmp
fdivp
cmpl
lcall
push
shrl
add
push
popa
dec
or
sysexit
jmp
push
mov
mov
enter
sub
pushf
cmc
mov
add
mov
push
daa
dec
cmp
hlt
jnp
pop
imul
pop
mov
push
xchg
mov
test
insl
xchg
mov
sbb
rcrl
xchg
mov
es
cmp
fidivl
test
fsts
inc
test
hlt
inc
inc
jbe
clc
jnp
cmpsl
sbb
test
popa
mov
pop
push
sub
inc
mov
push
add
xchg
push
push
bound
cmc
pop
stc
int3
adc
and
rolb
mov
add
lods
jge
mov
mov
mov
sbb
add
inc
loope
pop
xchg
xchg
dec
push
cli
jecxz
add
jge
movsb
je
es
jbe
pop
pop
mov
mov
adc
xchg
add
cmc
popa
out
inc
rcll
push
fidivl
cli
jl
mov
pop
sbb
and
adc
jl
pusha
fistl
psubd
dec
neg
jae
mov
rorl
mov
loop
cmpb
push
mov
dec
mov
outsl
push
testb
sahf
ljmp
int3
add
jo
iret
jne
cmpsb
push
std
movsb
jo
mov
cmp
mov
sarl
inc
adc
ffree
pop
cmpsl
adc
and
pop
fcomip
mov
clc
andl
pop
js
rolb
call
or
mov
leave
cwtl
xchg
jg
xchg
aaa
notb
mov
rorb
dec
mov
sub
jl
lods
int3
adc
or
stos
adc
push
mov
jns
adc
sub
sarl
jns
lods
sub
pop
xchg
xor
mov
gs
movhps
lods
push
or
xchg
stos
int
in
dec
lds
cmc
xor
sahf
xor
mov
and
stos
push
jnp
xchg
inc
push
lds
lret
inc
cs
fsubs
icebp
sbb
mov
mov
cmp
dec
orl
pop
jnp
mov
jl
mov
imull
sub
mov
and
mov
xor
insb
or
loopne
or
mov
fsubrl
jne
in
fnstenv
popa
fistl
in
dec
mulb
jae
in
add
jecxz
push
movsb
repnz
dec
je
dec
fdiv
dec
or
movsb
ret
dec
add
jg
xchg
and
sarl
pusha
jge
sbb
lcall
aad
aaa
addl
sbb
rol
out
ret
pusha
mov
repz
sbb
xchg
xchg
mov
xchg
aam
imul
xchg
mov
das
xor
sbb
ret
lcall
dec
sub
pushf
xchg
in
lret
pop
mov
movaps
pop
sub
fcoml
stos
popf
inc
cmpsb
outsl
mov
inc
les
pushf
stc
inc
xchg
or
mov
pop
mov
mov
filds
add
pop
and
mov
test
stos
fldenv
mov
or
dec
add
iret
xchg
ja
jl
les
jne
push
cmp
mov
in
loope
rolb
aas
cmp
or
jb
xchg
push
aas
notl
adc
adc
mov
nop
es
shrl
pushf
pop
xchg
mov
dec
lds
mov
mov
pop
mov
push
push
jecxz
faddl
test
sbb
and
hlt
enter
insl
lret
rcl
mov
daa
jle
pusha
jo
std
subl
pop
cltd
mov
cltd
sub
das
dec
repnz
push
outsb
fistps
add
iret
outsl
dec
mov
mull
push
aas
mov
cwtl
push
xor
ret
fcom
and
ss
js
xchg
ss
mov
adc
repz
dec
iret
int
shl
mov
dec
ss
lock
mov
sti
dec
and
dec
insl
push
adc
daa
test
adc
sahf
lahf
imul
jno
pop
fldenv
sub
xchg
fisubl
mov
filds
adc
mov
pop
insb
mov
mov
daa
in
xor
mov
je
icebp
push
xchg
sti
insb
adc
ljmp
lock
dec
jae
and
pop
scas
aad
and
mov
mov
mov
push
sub
lcall
insb
hlt
and
enter
push
add
out
or
mov
xor
ffreep
dec
jge
lahf
rcrl
or
adc
adc
das
inc
add
mov
test
mov
pop
push
sti
pushf
sub
mov
adc
mov
adc
push
ja
leave
cmc
mov
movsb
pop
mov
pop
js
sbb
sbb
jno
mov
cltd
sbb
and
jbe
xchg
aaa
test
popf
or
adc
adcl
rcll
push
dec
loopne
insb
push
std
shrl
push
push
decl
or
cltd
push
mov
dec
loop
mov
and
cmp
loopne
sti
add
lahf
sub
rcll
xchg
imul
jle
cli
mov
stos
fstpl
jbe
or
test
pop
clc
movsl
adc
inc
fadd
sahf
test
mov
fldcw
adc
xchg
inc
xor
pop
jge
mov
add
mov
mov
nop
ja
mov
sbb
arpl
push
dec
push
sbb
fldenv
mov
or
sbb
and
ds
sub
stc
mov
lock
mov
insl
shr
loope
out
rcl
jecxz
idiv
fwait
ret
jge
dec
lods
jmp
sbb
mov
daa
imul
jmp
xchg
shrb
jae
fsubs
test
mov
dec
stos
adc
mov
into
mov
call
aam
xor
adcb
mov
inc
call
pop
das
dec
pop
cmp
jbe
aad
sbb
mov
movsb
pop
imul
daa
dec
cmp
mov
mov
sbb
lea
mov
lods
mov
daa
repz
ret
cltd
aam
popa
mov
imul
sbb
mov
xchg
popf
jb
xchg
adc
jp
lods
sbb
mov
cs
pop
pushf
cs
pop
cmp
lret
jo
add
jno
dec
and
fdiv
mov
iret
add
jne
fidivrl
scas
repz
adc
add
ret
lds
mov
aaa
ret
ja
mov
jmp
shrb
add
jg
test
lds
sub
dec
out
and
addb
mov
and
adcl
adc
fisubrs
orb
pop
push
test
mov
fcomps
insl
incb
xor
pcmpeqd
in
cmp
add
out
call
mov
dec
into
movsl
mov
test
push
lret
aad
jp
or
js
mov
add
adc
mov
test
xchg
in
mov
popa
jb
pop
cwtl
xor
sti
inc
pushf
add
or
stos
add
lods
or
pushf
movswl
pop
cltd
daa
adc
outsb
inc
xor
out
sub
xchg
dec
mov
pop
testb
fildll
leave
push
sub
and
ljmp
cmp
mov
pop
or
jns
js
inc
mov
pop
jo
xchg
mov
push
inc
push
inc
add
mov
lret
inc
aad
cmpl
clc
mov
mov
lods
jbe
fiaddl
shr
dec
std
lcall
imul
clc
pushf
or
daa
jle
inc
sarb
pop
andb
mov
mov
imul
push
andl
cmp
sub
jb
sub
push
ret
inc
fnstsw
scas
lods
std
mov
stos
xor
fldl
pop
cmp
jb
aad
cwtl
out
adc
movsl
rcr
aas
ja
sub
rep
loope
cmp
cmp
dec
mov
test
pop
xchg
jp
pop
ret
mov
pushf
jge
stos
inc
repz
lods
rcrb
sub
ret
orl
sbbl
icebp
dec
roll
cmc
faddl
arpl
icebp
popa
outsl
cltd
cmp
loop
sub
insl
jb
adc
cmp
xchg
xchg
mov
sub
scas
ljmp
psubsb
add
ret
pop
mov
jge
bound
stc
push
mov
xor
mov
cmc
movl
aas
test
data16
je
lret
sbb
loope
out
cwtl
jb
sub
pop
mov
mov
ret
clc
sub
shl
and
add
cwtl
mov
push
add
xor
pop
cmp
inc
sbb
sbb
jnp
inc
mov
cmp
scas
sub
insb
dec
dec
enter
adc
xor
insb
ficoml
mov
pop
shrl
outsl
adc
or
in
dec
or
js
repnz
sub
mov
mov
inc
int3
pusha
repnz
mov
stc
ja
add
cmpsb
mov
jne
outsb
test
mov
jb
in
xchg
and
or
xchg
xor
inc
mov
inc
pop
pop
lcall
xor
add
fcmovbe
mov
jns
push
mov
shl
mov
das
dec
jmp
std
insb
fs
mov
clc
mov
int3
adcl
xchg
sbb
or
adc
test
or
sub
sbb
mov
jo
iret
int3
adc
popf
cli
push
test
rcl
lock
add
push
scas
arpl
test
dec
jbe
lcall
sub
out
cmp
lahf
stc
xor
ret
lea
iret
mov
push
loop
popf
insb
and
fidivs
lods
add
mov
cmp
add
stos
sahf
xor
shl
or
imull
or
dec
aad
pusha
jecxz
ljmp
xor
test
fmuls
adc
sbb
xchg
ja
xchg
imul
fld
mull
fwait
mov
loopne
add
lcall
cmc
stc
adc
pop
loopne
test
imul
lods
mov
aad
bound
adc
adc
into
adc
in
scas
sub
xor
mov
mov
pop
jp
fwait
ret
jp
movsb
pop
mov
pop
aaa
fsub
or
negl
jp
loopne
xor
addr16
cmp
leave
push
test
mov
or
or
test
jo
dec
test
cwtl
add
jle
ret
lahf
andl
jl
incb
adc
push
out
fucom
lods
inc
jl
dec
jle
pop
ss
cltd
pop
mov
nop
push
push
icebp
mov
xor
testl
shrb
jg
add
cmpsb
leave
xchg
pop
jp
ret
lcall
push
out
sbb
loop
jp
lods
xchg
or
xchg
add
jbe
adc
inc
sub
push
jmp
int3
cmp
jo
or
mov
add
fs
sbb
lods
dec
stc
in
mov
add
cmpsl
fisubs
xor
jecxz
sub
popa
cltd
fcomi
insb
inc
rol
ret
dec
add
mov
sub
add
dec
imul
in
cmp
mov
mov
push
mov
int
std
and
jmp
loop
cmp
xchg
xor
lret
mov
pop
bound
shll
imul
push
sbb
pop
sbb
xor
add
leave
popf
test
mov
fildl
popf
cmp
sti
push
push
pop
lods
jne
cmpsl
out
pop
aam
mov
iret
loopne
ds
mov
pop
mov
and
insl
in
jl
addb
cmp
pop
dec
mov
pushf
dec
cld
in
xor
cs
jo
jecxz
push
adc
add
dec
pop
ja
mov
dec
jmp
js
inc
inc
push
out
push
pop
rclb
sbb
testb
mov
loop
lret
adc
pusha
sbb
outsl
and
filds
or
push
mov
mov
push
add
xor
and
mov
jo
add
mov
or
mov
xchg
lahf
push
lcall
adc
fldenv
adc
dec
mov
mov
repz
ss
pop
mov
jmp
clc
push
or
call
test
or
ljmp
mov
mov
mov
test
and
sub
movsb
push
mov
mov
imul
inc
lret
out
lahf
in
repnz
jne
pop
dec
js
add
mov
std
sub
pop
cmp
adc
dec
pop
add
stos
adc
xchg
fcompl
or
mov
repz
loope
int3
mov
sub
mov
pop
xor
in
js
js
dec
out
imul
xchg
insb
movsb
jns
dec
cmp
sub
outsb
jns
stc
sarb
mov
mov
pushf
inc
cmp
aad
pop
cmp
or
add
mov
bound
std
jb
push
xor
loope
dec
daa
xchg
dec
push
and
add
cmp
mov
inc
lret
neg
gs
mov
or
pop
push
sbb
je
mov
sti
dec
xchg
jp
mov
or
cmp
fcmove
idivl
rorb
aam
jne
mov
jle
mov
cli
cwtl
jle
in
jns
pop
lea
rclb
shlb
stc
pop
mov
test
imul
inc
out
fnstenv
ds
sbb
mov
arpl
xor
xor
jmp
leave
leave
inc
mov
mov
insb
fs
sub
add
jecxz,pn
leave
fisttpll
std
jno
mov
fnstcw
sbb
mov
dec
aad
leave
dec
jge
outsl
out
sbb
es
cmc
xchg
inc
lds
push
push
and
loope
js
nop
mov
jns
inc
push
inc
icebp
subb
aas
push
icebp
cmc
ljmp
push
pop
cmp
jbe
pop
lahf
iret
push
push
iret
mov
lret
push
in
fdivl
xchg
mov
xchg
pop
lock
or
inc
ljmp
cmp
popa
mov
pop
sbb
int
ds
cmp
inc
imul
push
mov
stos
and
stos
into
in
cmp
mov
mov
add
pop
dec
sbb
cmc
hlt
sub
mov
jne,pn
imull
movsb
lret
adc
sub
dec
gs
or
in
or
ret
popa
inc
lods
add
mov
das
jnp
gs
mov
push
dec
sbb
repnz
inc
or
inc
repz
out
sub
repnz
adc
cs
test
sub
mov
mov
sbb
xchg
sbbl
test
inc
repnz
popa
push
lock
sarb
inc
jbe
int3
loopew
cmp
adc
iret
and
test
mov
pop
fs
pop
inc
pusha
inc
lret
out
jnp
cli
jne
xlat
mov
push
xchg
popf
or
iret
and
adc
cwtl
fdivr
call
andl
punpcklwd
sbb
inc
or
dec
cs
push
test
add
adc
loope
mov
xchg
sub
pop
cmpsl
jecxz
sub
lods
jecxz
dec
xor
lods
mov
dec
fistpll
insl
lcall
adc
cmp
arpl
mov
pop
ss
sub
fildll
ret
fsubs
and
js
cmpsl
leave
sub
jg
jo
and
lahf
mov
in
stos
push
cmp
in
jbe
sahf
or
les
arpl
sti
aam
ds
aaa
dec
cwtl
push
push
xchg
dec
or
ds
ret
mov
sbb
sbb
xor
scas
rolb
test
outsb
orb
lret
rorb
mov
xor
inc
pop
sub
das
and
add
push
lahf
jp
jmp
stos
mov
jg
push
loopne
xchg
push
sbb
xor
test
jns
fstpl
pop
pop
xchg
fidivs
pushf
daa
rcl
xchg
je
pop
aam
mov
jo
lahf
aaa
fcmovne
push
lcall
in
xchg
sbb
mov
mov
sbb
imul
leave
xor
adc
adc
fstl
movsl
test
rorl
dec
sbb
imulb
fistl
dec
mov
lods
or
jmp
add
rcr
push
inc
inc
inc
add
decb
or
xchg
mov
test
sub
inc
ja
aaa
jmp
mov
mov
mov
jnp
mov
incb
faddl
fucom
add
negb
or
ljmp
sarl
in
mov
mov
or
lea
pushf
mov
sbb
loopne
ss
fnstcw
mov
inc
in
aaa
loopne
sub
lods
mov
aaa
sarb
insl
sub
sbb
daa
in
mov
out
or
push
test
mov
pop
adc
dec
out
lods
adc
mov
push
or
sti
insl
mull
xorb
roll
mov
scas
cmp
add
mulb
cmpsb
xor
add
push
sub
nop
ds
movsb
lods
dec
leave
popa
cmpsl
adc
xchg
mov
popf
decb
pop
xor
or
sarb
push
jp
ss
int
pop
sub
mov
rcll
imul
or
mov
mov
cltd
lea
pop
xchg
in
shll
in
mov
xchg
sbb
in
sbb
ret
adcl
add
cmp
movsb
adc
sub
sbb
imul
insb
jbe
pop
pop
jbe
xchg
pop
or
bound
lods
loop
xor
repnz
leave
mov
mov
or
cmp
icebp
popf
aad
lcall
inc
test
pcmpeqb
imul
pop
jle
rclb
ret
sub
inc
outsl
scas
lds
and
push
fidivs
mov
loop
paddsb
pop
sub
dec
adc
or
or
es
mov
jbe
and
scas
imul
cltd
ss
mov
int
fbstp
mov
ds
icebp
dec
jns
cld
cmpsl
mov
test
mov
pop
shrl
outsl
xlat
ss
jno
cltd
insl
push
lods
dec
test
ds
sub
jne
icebp
enter
sub
mov
gs
push
les
or
test
xchg
inc
andb
cld
sub
mov
jne,pn
xchg
popf
fldt
imul
mov
shrb
mov
pop
jo
fnsave
fnstsw
es
sub
and
jbe
stos
dec
ja
push
inc
iret
adc
je
ss
orb
mov
int
pop
dec
add
imul
movsb
mov
lret
jmp
imul
bndstx
in
ja
stos
xchg
aad
xorl
mov
arpl
fs
mull
adc
jmp
cmp
push
rol
fsubrp
xlat
scas
mov
sub
xor
jle
dec
sub
call
imul
or
dec
sbb
xchg
enter
das
add
in
sub
and
sub
arpl
test
cltd
insb
pop
or
jecxz
sbb
push
test
xchg
jns
or
fldcw
push
mov
xchg
jbe
popf
dec
mov
in
imul
rcrl
push
add
xchg
jb
ret
out
dec
push
sbb
call
fsubrs
or
sub
in
test
fstps
mov
push
fldt
mov
jnp
fildl
out
cmpsb
out
fstl
test
insl
mov
out
icebp
sub
adc
pusha
outsl
popa
mov
mov
adc
pop
aad
pop
mov
pop
mov
pusha
outsl
rcrl
lods
mov
into
add
shrb
inc
and
sbb
fs
sti
add
and
call
clc
and
orl
cmp
stos
xchg
mov
popf
add
pusha
jmp
pop
mov
arpl
mov
leave
sbb
pop
dec
mov
xor
out
sub
into
les
xchg
fcomi
push
ret
fwait
test
add
mov
je
inc
lret
inc
in
imul
roll
jle
jnp
scas
ret
xlat
push
push
insb
push
jno
pop
in
jge
mov
addr16
setp
push
call
pop
mov
inc
scas
in
sub
test
fnstenv
dec
sbb
loopne
scas
lods
cmp
dec
xchg
test
loopne
orl
into
subps
stc
mov
jae
mov
ret
dec
xchg
leave
in
out
and
lods
pop
aad
xchg
fs
cli
fisttpl
xor
mov
jecxz
iret
insb
out
insl
fwait
cltd
out
fs
pop
push
or
dec
fldt
adc
lret
in
jne
leave
int
fwait
dec
sub
bound
movsl
pop
lret
ja
jae
mov
xchg
mov
push
in
je
xchg
sbb
mov
stos
pop
test
out
add
push
adc
add
ret
pusha
mov
adc
mov
or
pop
in
dec
daa
enter
insb
int
xor
aam
test
xor
pop
repnz
cmpsb
xchg
lock
rorl
ljmp
push
xlat
jnp
xor
jl
jb
push
loope
mov
push
loope
adc
sub
mov
in
in
call
add
xor
xlat
push
fucomp
pop
rclb
mov
mov
cld
add
imul
lea
mov
shrl
add
stc
sub
inc
lcall
scas
inc
push
imul
cli
mov
test
pop
repz
jg
mov
out
loopne
and
push
test
call
or
and
mov
or
jp
jb
ret
mov
sub
mov
add
subb
notb
fwait
subb
push
lods
mov
int3
inc
lds
xchg
push
sti
jle
pop
je
mov
daa
jne
mov
adc
mov
popa
aam
cmpsl
aaa
inc
daa
sahf
fisubrl
or
mov
fwait
inc
aad
sub
sub
outsb
sti
inc
clc
dec
jnp
ss
out
sahf
mov
mov
lret
arpl
xor
mov
sub
dec
dec
mov
and
or
call
lret
jb
jbe
stc
mov
sahf
ror
lds
adc
xchg
imul
add
fistpll
out
push
mov
jge
paddq
adc
pop
addr16
fucomi
cmp
jae
cmp
jmp
or
cld
or
mov
pusha
xchg
xor
ret
cmpl
shrb
outsb
outsb
mov
lock
push
cmpsb
mov
add
mov
xor
jae
les
dec
jbe
leave
jae
and
add
or
scas
in
pop
lret
cmp
mov
push
repz
or
and
test
popf
or
sbb
add
lret
push
xchg
add
mov
sti
xlat
mov
jl
cwtl
mov
sarb
push
cmp
push
push
xchg
fcoml
jo
scas
int
xchg
mov
mov
loop
cli
add
ret
push
xchg
and
and
mov
ret
pop
outsl
adc
add
fistpll
push
cld
pop
xchg
lods
pop
push
inc
inc
jge
and
lock
cwtl
rcl
cmp
push
in
sub
push
add
fdivr
mov
sbb
sbb
add
test
arpl
out
fwait
mov
adc
mov
fsubl
push
dec
xor
xchg
cmpsl
lods
push
std
enter
sarb
imul
fdivl
ret
iret
pusha
and
jl
fdiv
xchg
push
sbb
lcall
and
xor
mov
mov
fsubl
lret
xchg
adc
iret
pop
repz
sbb
push
fadds
or
cli
adc
data16
jb
enter
and
pop
or
xor
pop
ljmp
div
jae
sbb
sbb
insb
or
xor
sarb
dec
pop
arpl
inc
inc
xchg
mov
fidivl
daa
inc
in
xor
mov
shl
add
add
sti
or
mov
ja
fcmovnb
cltd
out
push
sub
jb
popa
add
cmp
mov
stos
iret
push
outsl
inc
nop
add
jle
aaa
ja
bound
sahf
adc
adc
fisttpl
mov
popa
cmc
jle
ljmp
fpatan
and
and
outsb
lcall
add
arpl
hlt
daa
inc
cmp
jnp
push
icebp
loope
jecxz
adc
inc
aaa
out
inc
shll
test
sbbl
ficoms
push
outsb
dec
and
pushf
or
inc
xor
add
outsb
out
mov
addl
push
dec
decb
add
js
mov
gs
push
inc
iret
mov
out
sahf
ds
push
mov
xchg
ret
pop
fnstsw
mov
sub
dec
and
daa
popa
out
outsb
icebp
sub
dec
mov
loop
ret
mov
enter
lret
sbb
adc
sub
bnd
add
iret
add
dec
xor
int3
sub
out
push
aad
cli
jae
in
shll
mov
mov
movsb
push
add
cmp
int3
cli
add
mov
je
jnp
repz
xor
hlt
imul
sub
repnz
mov
adc
pop
mov
push
shll
sbb
jno
add
call
fisubrs
inc
mov
jp
or
ja
inc
sub
das
dec
scas
xchg
test
outsb
fbstp
sbb
pusha
fldenv
in
jmp
orl
sbb
pop
repnz
out
mov
int
inc
and
adc
outsb
jb
add
xchg
fnsave
jo
iret
mov
adc
scas
xchg
adc
popa
rcrb
push
mov
push
pop
incl
mov
movsb
and
and
sbb
dec
adc
hlt
clc
outsl
sti
mov
inc
cmp
dec
ja
mov
mov
push
dec
dec
mov
fistl
jmp
ret
push
sbb
push
mov
mov
pop
clc
shll
dec
xchg
cmp
mov
add
sbb
xor
sbb
enter
jne
and
mulb
inc
ds
lcall
inc
xor
jmp
insl
lods
pop
sub
ficoms
sub
push
loop
sub
sub
aas
xlat
add
push
pop
test
cmpsb
pushf
jo
data16
jbe
cmp
jo
jns
adc
iret
rolb
dec
pop
test
sub
stc
enter
and
sbb
sub
insl
add
imul
fisttpll
jl
out
push
mov
imul
push
xchg
daa
addb
jb
xor
pop
ficompl
les
sub
arpl
leave
shl
insl
je
mov
sbb
mov
or
sbb
and
add
sbb
jno
stos
enter
clc
sbb
mov
and
std
sbb
xchg
mov
int3
pop
jmp
sub
iret
fmull
cmpsb
push
add
pop
push
pop
lods
mov
inc
mov
in
cltd
add
imul
insl
movsb
fiaddl
lret
fldl
cmp
cwtl
shr
scas
fistpl
mov
mov
mov
push
nop
inc
stos
add
jnp
push
inc
jno
pop
movsbl
mov
inc
push
pop
fsubp
adc
out
incb
pusha
mov
lret
and
jle
daa
sub
gs
mov
xor
mov
ret
int3
xchg
in
clc
jo
int
daa
loope
stc
sbb
push
pop
push
mov
adcl
push
dec
leave
dec
call
mov
rclb
mov
mov
movsl
scas
cmp
xor
jmp
cld
cmp
xchg
xor
add
sub
mov
and
mov
pop
jb
or
repnz
sub
xchg
ds
lret
mov
jnp
lret
push
adc
mov
add
popl
cli
jge
adc
pop
hlt
insl
pop
mov
dec
addr16
inc
xor
fisubrl
pop
fdiv
inc
jnp
pop
xchg
sub
sbbb
xor
aam
lods
push
pop
popa
les
lock
jb
lods
rcrb
inc
inc
or
ljmp
les
sbb
int
inc
rorb
jbe
add
in
xor
fwait
push
push
mov
mov
jecxz
jbe
js
cs
inc
ja
mov
packuswb
xchg
cmp
sub
push
lods
or
pusha
mov
ljmp
mov
adcb
insb
ret
jno
mov
xchg
mov
mov
icebp
outsl
pop
push
jns
add
lea
sarl
xchg
mov
jae
cltd
addr16
in
loop
pop
pslld
fcompl
mov
xchg
int
enter
popf
jb
jge
aas
push
and
sbb
pop
int3
push
or
dec
out
imulb
xchg
mov
sub
jle
jns
aas
sub
adc
mov
and
xchg
inc
jmp
loopne
and
ret
mov
push
mov
and
lcallw
push
inc
sub
xchg
out
dec
push
add
sub
pushf
sub
mov
iret
adc
outsb
lods
outsl
add
pushf
jno
sbb
mov
movsb
mov
imul
add
mov
mov
stos
add
in
and
adc
insb
aad
push
sub
mov
jnp
sbb
ffree
call
jp
loopne
push
test
xor
iret
scas
mov
mov
imulb
sbb
dec
pop
int3
push
mov
add
jno
int3
cmpl
xchg
aam
es
dec
inc
lret
dec
aad
xlat
push
mov
xlat
idivl
pop
out
jnp
push
jns
pop
xchg
or
mov
mov
inc
sbb
dec
clc
hlt
xchg
mov
shlb
jo
out
mov
xchg
subb
leave
into
dec
or
add
pop
into
stos
loopne
push
addw
ja
mov
pop
pusha
fdivr
sbb
inc
mov
in
cs
aad
cltd
pusha
xor
mov
jl
jg
dec
test
jnp
in
rcll
adc
mov
xchg
mov
xlat
lods
mov
jmp
mov
je
mov
cmp
mov
add
outsb
push
arpl
mov
mov
aad
sub
sbb
xchg
lds
pop
pushf
lret
xor
subb
stc
dec
dec
lcall
les
ja
inc
ss
test
dec
out
adc
out
cmp
in
xlat
in
xchg
dec
xchg
test
xor
pop
lds
mov
cmp
ds
inc
je
cmpsb
fs
lret
fwait
enter
pop
stc
sar
movsb
xlat
idivb
mov
cmpsl
aas
mov
cmp
int3
iret
dec
mov
pop
adcb
and
mov
push
std
add
ret
mov
loopne
lods
pop
or
fsubrs
dec
inc
inc
andb
fisttpll
xor
cmpsl
cld
stos
and
sub
pusha
cmp
in
mov
push
jbe
mov
jecxz
stc
jmp
clc
popf
jl
xchg
fdivl
push
cli
outsl
sub
movsl
aaa
and
xor
add
pushf
add
stos
cmpsl
push
insl
and
xchg
std
push
aad
insb
mov
adcb
es
mov
mov
mov
fisubrs
lock
adc
sub
fdivrl
push
or
enter
fs
test
mov
pop
in
xchg
stc
jno
bound
call
aaa
mov
lret
fmulp
pop
int
xchg
mov
adc
cmp
or
pop
cmp
inc
or
xchg
aad
add
lahf
in
arpl
sub
mov
pop
das
push
and
shl
sbb
lret
scas
rorl
lret
cmc
outsb
pusha
insb
lds
mov
test
cmp
xor
mov
add
ds
les
fwait
call
mov
jns
in
sbb
lahf
insb
fdivrs
daa
mov
xchg
lahf
mov
jo
mov
jl
pop
sbb
or
push
cmp
jae
mov
or
sahf
loopne
popf
stos
xor
dec
cmc
pop
cmpsb
jp
push
outsl
int3
mov
fbld
insb
subl
mov
inc
ret
cmp
iret
bound
push
mov
int
jge
data16
push
movsb
icebp
cmp
outsl
mul
pop
scas
insl
adc
aas
sarl
jle
repz
xor
fisttpll
mov
fs
adc
and
push
mov
push
rol
and
imul
mov
cmp
sbb
mov
hlt
iret
test
dec
movsb
hlt
filds
sti
imul
imul
dec
and
xor
and
xchg
shlb
aam
stos
fwait
divb
dec
inc
lcall
sbb
push
fs
push
push
and
adc
or
test
in
ljmp
jecxz
dec
sbb
aaa
test
call
dec
push
jecxz
shlb
push
mov
xchg
jl
pop
jle
mov
fiaddl
cmp
loop
lret
mov
lods
jno
movsl
sarb
dec
aas
test
adc
cmpsl
js
or
jns
loop
fstpl
mov
sahf
or
mov
pop
pop
mov
xchg
loopne
fs
aas
aas
fadds
leave
xor
sub
dec
test
cmp
jmp
ret
jmp
or
rcll
dec
cmp
mov
scas
ss
jg
mov
imul
add
addb
inc
mov
xor
rolb
mov
aaa
xor
or
js
sub
scas
aas
inc
adc
repz
push
ljmp
mov
sbb
mov
mov
out
xor
out
jne
cmp
addb
and
test
pop
sub
jnp
dec
xor
xchg
aam
jno
cmpsb
mov
adcl
xor
stos
movsl
into
ljmp
and
ret
mov
popa
arpl
cmp
ss
mov
mov
pop
push
arpl
fisttps
clc
dec
adc
arpl
call
mov
mov
push
jbe
cmp
lret
cmp
and
arpl
adc
das
mov
fwait
jo
and
add
mov
adc
lret
xchg
mov
xor
lods
inc
hlt
jmp
sarl
dec
ret
push
pop
inc
lds
adc
pop
mov
jl
leave
testl
lea
enter
sub
ficoms
arpl
sbb
cmp
mov
xchg
jp
movsl
pop
frstor
pop
push
cli
sbb
js
push
faddl
xchg
pop
mov
and
imull
loopne
cmpsb
dec
mov
or
pusha
and
jle
sub
gs
cmp
fisttpll
std
fwait
inc
xor
clc
int
sub
outsb
jb
lahf
out
out
je
lods
in
cli
xor
mov
stos
push
jmp
inc
jle
jmp
inc
jne
stc
pushf
pop
pop
dec
lods
ljmp
jae
jb
push
cmp
out
pop
pop
cmp
cmc
leave
hlt
icebp
fucom
shll
inc
in
sub
loope
sbb
cmpsl
lahf
aam
movsl
fstpl
mov
imul
sub
mov
mov
or
or
stos
out
sarb
jmp
push
insb
ret
fnstenv
mov
pop
xor
clc
mov
hlt
test
inc
adc
xor
imul
lods
or
mov
pop
pusha
pushl
adc
pop
sub
xchg
mov
pusha
fcmovnbe
mov
aad
mov
cmp
movsl
into
and
xchg
fdivrs
mov
push
and
hlt
xlat
aaa
pop
mov
or
sbb
clc
fisttpll
adc
sbb
cwtl
inc
jmp
insb
sbb
push
es
std
pop
mov
cmp
lcall
stc
sbb
pushf
les
lea
cli
add
ljmp
xor
xchg
aam
jne
dec
and
lret
inc
xor
jb
jnp
or
ljmp
push
into
ljmp
add
lret
mov
or
out
mov
test
and
sub
outsl
lret
in
cltd
aam
inc
inc
arpl
xorb
or
lock
xor
inc
cmp
xchg
int3
jge
test
add
xchg
inc
add
popl
jle
ljmp
xor
jno
pslld
lock
or
fcmovu
testl
not
adc
addb
and
xchg
push
xchg
adc
add
sub
sub
fwait
add
lock
pop
out
nop
ucomiss
call
mov
sub
insb
push
pop
inc
pusha
in
mov
inc
nop
mov
jae
push
rcl
sbb
addb
pop
jne
mov
jmp
pushf
out
jnp
push
enter
pop
adc
cmp
cmp
mov
int
xchg
mov
cwtl
test
dec
add
pop
jo
arpl
out
mov
pop
movsl
stos
mov
adc
mov
mov
adc
test
sbb
adc
clc
fdivp
mov
loopne
lods
cltd
aas
pop
imul
repz
adc
pushf
sbb
test
addb
out
cmp
xor
ja
or
imul
xorl
dec
stos
js
ret
add
mov
cmc
xor
jge
push
push
cmp
inc
in
sub
inc
outsb
and
mov
je
sar
or
das
test
int3
push
add
movsl
mov
lcall
pop
mov
push
sub
pop
mov
cmp
pop
push
xchg
pushf
xchg
mov
and
mov
scas
pop
and
fcoms
pop
lahf
aam
push
jb
pop
test
mov
push
jae
out
out
and
xorb
aaa
loopne
push
loopne
subl
shlb
out
outsb
data16
jae
inc
xchg
adc
sbb
inc
inc
faddp
mov
inc
imul
mov
dec
push
cmpsb
call
cld
lahf
test
fsubl
mov
xor
out
ds
gs
cmp
xor
lahf
xchg
sbb
ljmp
nop
dec
repnz
fsubrs
jnp
mov
lcall
pop
test
mov
xchg
fadds
sbb
xor
jb
es
push
movsl
dec
or
mov
dec
jbe
push
pop
dec
adc
xchg
lret
inc
or
js
sbb
sub
rcrl
test
into
in
cmp
in
in
pop
lods
outsl
xchg
pop
push
inc
das
fmuls
mov
pop
sub
dec
out
adc
rclb
cmpb
adc
jmp
pop
pop
shrb
cmpsl
icebp
out
mov
fildl
xchg
lock
and
test
mov
decl
xlat
jl
jmp
aas
dec
pop
imul
std
lods
ds
push
lods
dec
pop
das
out
mov
push
xchg
out
push
inc
pop
pop
push
sbb
or
push
xchg
mov
das
out
sub
andb
shrb
sub
out
out
sub
push
push
cltd
jmp
push
shlb
xchg
cwtl
aam
je
fwait
es
add
loopne
ret
repz
jbe
sahf
xor
leave
cmp
in
bound
mov
rclb
lock
cmp
pushf
mov
int
ljmp
lock
insb
xchg
sub
fsubs
cmc
aad
xchg
mov
mov
adc
dec
mov
inc
popa
add
in
icebp
pop
out
lea
jmp
lret
and
mov
pusha
icebp
xlat
and
jo
and
and
icebp
push
testl
ds
aas
mov
fists
leave
mov
cmpsb
nop
or
xor
cwtl
scas
mov
in
popa
out
xor
decl
mov
xchg
dec
popa
test
dec
lcall
movsb
cwtl
insl
faddl
sarb
orb
sub
jge
jl
add
adc
xchg
pop
jmp
shl
lcall
and
pushf
aad
lcall
ss
fldl
movsb
pop
into
and
or
push
or
shrl
shlb
jg
in
xchg
sub
mov
ljmp
mov
and
mov
int3
icebp
negl
inc
mov
in
add
lods
scas
dec
stos
mov
movsb
or
and
and
inc
bound
inc
cmp
inc
fisubs
ret
cmc
ss
cmp
popf
in
sub
pop
xchg
xchg
add
mov
iret
jmp
push
inc
or
inc
xchg
sahf
fisubrs
xchg
popf
repz
jb
ret
negl
push
fildll
test
or
mov
das
sbb
cmp
sub
cmpsb
add
pop
push
xchg
testb
mov
pushf
int
pop
fwait
insl
rcrb
insl
sbb
mov
shll
clc
xor
cwtl
mov
lret
mov
data16
leave
inc
add
mov
ja
jne
leave
xor
inc
mov
push
dec
mov
loop
stos
sar
sub
mov
xchg
inc
out
sti
sbb
ret
ret
and
adc
or
mov
mov
xchg
push
adcb
bound
enter
jo
cwtl
mov
call
xrelease
add
pop
mov
popa
mov
mov
in
lret
xchg
mov
jnp
cwtl
or
inc
sbb
mov
push
cmp
mov
fdivrp
out
call
mov
ds
ficompl
sbb
adcl
test
rorb
movsb
outsl
imul
cmp
push
stos
ret
lcall
fsubp
aad
daa
mov
pop
sub
xchg
into
in
test
out
push
inc
sub
add
decl
stc
std
and
je
dec
mov
int
mov
stos
sahf
add
imul
loopne
jmp
add
cmp
xor
stos
shll
mov
rol
ret
aam
pop
pop
nop
test
mov
ret
jns
sti
ret
mov
outsl
aaa
loope
cmp
fnstenv
mov
pop
lcall
cmp
pop
rolb
lcall
sbbb
jbe
inc
int3
sub
stos
xor
add
lods
mov
cmpsl
ret
mov
insl
cmc
es
flds
adc
lret
enter
pop
test
fsubs
xor
push
loopne
or
sub
scas
insl
jp
push
add
shlb
pop
add
mov
mov
fldenv
jnp
cmpb
outsl
shlb
xor
jns
loop
jmp
scas
into
cmp
jmp
or
stos
inc
lcall
dec
aas
fnsave
cmp
push
mov
mov
test
sbb
test
or
sub
add
mov
and
jae
sbb
fdivl
jnp
lret
push
mov
stc
mov
mov
test
pop
rcrb
xor
clc
pushf
cmc
fs
fsubl
ljmp
ja
fmull
mov
ds
push
xchg
insb
or
jge
es
add
sub
xchg
ds
or
sbb
inc
stc
in
pop
aad
and
xchg
adc
jle
pop
sbb
and
push
push
cli
lea
jnp
aad
popf
addr16
fwait
cmp
xchg
push
pop
or
icebp
mov
fidivs
jo
stos
and
je
out
mov
push
sbb
in
popf
and
xchg
sbb
cmp
or
add
daa
mov
mov
stc
dec
sbb
scas
mov
jb
inc
inc
sti
or
rcrb
inc
jae
and
and
in
loopne
xorl
push
xor
dec
push
stc
xchg
lds
rcl
cmpsl
cltd
xor
lods
dec
repnz
sti
dec
imul
shlb
add
push
fidivrl
aas
or
das
outsb
cmp
pop
and
mov
test
js
mov
sub
out
and
jge
sti
adc
rcrb
dec
and
cmpsb
xorb
mov
push
stc
test
lea
xchg
dec
cmc
rcr
sub
insb
push
add
mov
lret
into
xchg
sbb
sbb
pop
pop
test
fbstp
push
add
shl
repz
push
dec
dec
roll
mov
cs
xchg
decl
dec
jmp
push
repz
insb
xor
pop
xchg
xchg
dec
mov
int3
sub
adc
ja
mov
pop
pop
jns
push
mov
push
arpl
movsb
pop
xorl
test
and
xchg
fwait
jp
lock
out
scas
mov
pushf
sub
dec
fcomps
movb
push
mov
fs
lods
and
stos
sarl
or
mov
repz
mov
mov
call
mov
jbe
dec
add
sub
jno
sarb
pushf
xor
arpl
xor
pop
pop
inc
lahf
jbe
movsb
cmp
push
pop
xchg
test
mov
stos
andb
bnd
push
adc
pusha
lods
stc
frstpm(287
or
dec
scas
jg
fiaddl
pop
mov
rcrb
or
mov
mov
mov
roll
out
lcall
fs
cmp
mov
cmp
jge
sbb
dec
shl
jns
inc
pop
mov
dec
fldl
insl
sub
lahf
add
pushf
mov
push
fwait
add
arpl
pop
call
js
and
repnz
mov
out
gs
daa
xchg
out
ror
scas
lcall
or
jae
dec
subl
ficoml
sahf
jae
adc
out
fisttps
push
out
loopne
and
push
xchg
xor
inc
sbb
push
or
push
mov
dec
mov
mov
mov
jmp
stc
push
stc
mov
push
call
mov
arpl
in
test
insb
ret
mov
and
dec
leave
cmp
mov
jno
jb
data16
bound
adc
jnp
enter
ret
mov
or
xor
jmp
filds
aaa
xor
sub
pop
fdivr
out
adc
lcall
and
cmp
lods
stc
jl
mov
js
pop
add
jg
outsb
dec
pop
or
scas
pusha
scas
add
cwtl
xchg
aaa
jns
cwtl
loop
sub
pushf
push
enter
xor
test
pop
jg
mov
push
push
push
xlat
lods
push
and
fsubr
sbb
into
mov
xchg
aad
vmwrite
xchg
test
roll
sub
mov
negl
jmp
ret
and
mov
and
push
jb
insl
push
outsb
scas
aaa
int3
movsb
lret
rolb
imul
in
sbb
or
xor
xchg
decb
xlat
mov
stos
inc
inc
out
fcoms
movsb
xlat
mov
sub
das
daa
sub
je
dec
std
test
mov
pop
adc
inc
xchg
jnp
stos
mov
push
cmp
xor
fists
mov
fwait
lods
pop
aam
and
pop
or
jo
imul
repnz
cmp
imul
pop
lret
sbb
dec
mov
xchg
adc
lret
nop
ja
iret
scas
xor
imul
pop
mov
cmpsb
in
sub
xchg
dec
jae
push
mov
repnz
out
cmp
shrl
adc
outsl
adc
sbbl
sbb
add
cmpsb
dec
lret
enter
aam
scas
dec
add
pop
repz
and
add
cli
pop
mov
fs
cmp
outsb
int
inc
lock
adc
out
or
jae
dec
mov
out
xor
fidivl
ljmp
or
push
outsb
push
adc
mulb
push
mov
cmp
inc
jle
insb
xchg
jp
fwait
dec
dec
sbb
dec
mov
jg
cld
xor
daa
test
cmp
jl
xchg
mov
cmpb
and
push
mov
jmp
lock
push
or
adc
lret
xor
fwait
rcl
or
hlt
xor
xor
cmpsb
mov
fadd
add
mov
xor
out
mov
sub
fstpt
mov
cmp
fistpl
shrb
sbb
jo
adc
adc
inc
pop
inc
inc
test
inc
mov
xchg
jmp
jnp
pop
dec
sbb
fldt
jecxz
das
add
or
pop
inc
mov
pop
push
outsl
and
mov
lahf
pop
movb
xchg
sbbl
push
and
cmp
xor
adc
mov
mov
sbb
stos
jo
push
dec
push
add
pop
jge
imul
test
inc
jmp
xor
push
push
fiadds
or
adc
adc
xchg
adc
sub
mov
daa
dec
bnd
outsb
aas
pusha
cmp
in
or
in
andl
decb
push
mov
jbe
push
adc
dec
mov
pop
repz
mov
stos
sbbb
ret
xchg
jl
ljmp
jnp
testb
adc
faddl
mov
inc
out
xor
and
or
sbb
cwtl
xor
sti
xchg
jge
mov
fistpl
xlat
imul
cltd
cmpb
rcrb
ficoml
shlb
out
fmull
adc
pop
les
cli
sti
dec
rorl
aas
xor
jecxz
flds
sbb
lcall
jge
lahf
add
data16
dec
adc
cwtl
pop
dec
or
fldenv
and
aad
in
rcr
dec
gs
into
pop
out
mov
add
adc
sbb
es
sub
jl
sarb
adc
fxch
pop
add
push
xor
or
push
or
pop
dec
mov
not
mov
dec
addr16
pop
stc
mov
repz
sysexit
cmp
sub
dec
push
xor
pop
cmpsl
je
cmpsb
jmp
in
cmp
in
sbb
xor
std
fwait
cmp
jns
pop
adcl
xor
inc
xchg
repz
aas
lcall
nop
xchg
push
xchg
jo,pn
or
or
cmp
sub
adcl
pop
sbb
popa
xchg
adc
add
pop
dec
fwait
leave
push
icebp
cltd
pop
sub
iret
sub
lahf
adc
js
mov
inc
pop
in
jp
mov
sub
lea
push
fstl
movb
or
cltd
pcmpgtd
mov
dec
mov
sbb
sbb
or
or
jb
dec
cwtl
leave
jae
lahf
adcl
stc
pop
repz
rolb
bt
xchg
dec
push
pop
cmp
popa
push
and
cmp
jmp
mov
insb
icebp
bound
inc
repz
sarl
test
pushf
jge
xchg
lods
aam
cmp
jge
mov
cmpb
or
iret
xchg
xchg
aaa
push
fsts
dec
add
or
and
cmp
sbb
and
addr16
pusha
push
ficoms
sub
int3
add
enter
pop
xchg
sub
jo
cld
sarb
lcall
xchg
pusha
nop
sbb
add
jne
mov
pop
add
mov
jae
hlt
ss
or
inc
mov
push
push
lret
sbb
scas
dec
or
mov
out
sbb
add
sahf
out
pop
insb
adc
das
das
sbb
pop
pop
fwait
push
xchg
test
lret
idivb
mov
adc
push
cmp
sbb
je
sbbb
xchg
pop
shrb
mov
mov
fs
dec
cmpsb
addr16
in
add
inc
loopne
out
or
lret
mov
popf
and
into
pop
pushf
sub
js
psubq
sbb
adc
in
jmp
sbb
mov
stos
stos
outsb
test
push
fisttpll
push
jle
and
lret
push
cmp
mov
inc
dec
aam
pushf
rclb
sbb
arpl
sbb
sub
adc
lret
dec
mov
mov
inc
and
dec
test
mov
sbb
dec
push
shrd
sbb
addr16
inc
popa
decl
jne
inc
mov
add
lret
out
sub
mov
les
xlat
adc
sahf
mov
lods
fsubrs
orl
in
push
add
sub
mov
add
pop
push
sbb
lcall
sbb
mov
inc
dec
lahf
mov
adc
std
call
cmp
popf
fmull
lods
int
jo
je
shlb
test
fldt
dec
add
add
push
pop
sub
dec
leave
pop
xor
xor
hlt
pop
dec
js
fwait
cmpsl
insb
lcall
aam
mov
stc
mov
mov
xchg
cmp
or
xchg
add
mov
int
jns
loop
cwtl
xchg
pusha
xchg
stos
dec
inc
sahf
popa
imulb
nop
jge
out
mov
lea
sub
ljmp
scas
jo
or
xchg
jo
fstpt
xchg
xlat
in
pop
ret
mov
pop
push
imul
lods
pop
and
test
inc
jg
mov
roll
dec
rolb
out
in
push
nop
push
pusha
jo
in
sbb
aad
repz
stos
push
test
sub
inc
jmp
pop
stos
ja
mov
push
add
push
xor
into
pop
fdivs
adc
xchg
mov
icebp
xchg
or
adc
mov
ljmp
dec
insb
mov
shrl
cwtl
into
mov
xchg
orb
add
in
in
push
jecxz
cmpsl
rorl
jl
lcall
mov
stc
lret
pop
arpl
movsl
mov
repz
loop
std
in
enter
cmpxchg
push
cmpsl
inc
mov
fbld
fwait
xor
mov
push
mov
stos
and
xor
inc
or
fmulp
sbb
inc
je
xchg
mov
pushl
xchg
ss
push
stos
and
bound
add
adc
push
jle
push
jae
xchg
shr
movsb
or
rcll
mov
mov
jmp
aad
cmpsb
xchg
lock
add
dec
fldcw
push
jns
xor
pmaxsw
pop
adc
push
and
flds
pop
xchg
lods
xchg
int3
xchg
cltd
lods
jle
mov
repz
std
jl
sbb
sub
call
mov
hlt
push
and
adc
jns
lods
mov
fdivs
rcrl
mov
cltd
jl
push
push
js
jle
mov
shll
inc
into
andb
mov
lahf
out
divl
or
das
or
cs
imul
mov
cmp
adcl
push
adcl
addr16
push
aas
xchg
add
out
xor
sbb
xchg
jne
fbstp
mov
push
daa
mov
fwait
adc
addb
aas
call
xchg
mov
gs
out
push
mov
pop
dec
out
cld
les
push
xor
stc
inc
adc
aad
sbb
out
inc
add
loop
sbb
push
mov
jge
lds
hlt
fbstp
insb
stos
bound
cmp
mov
ss
jmp
xor
jns
lea
sbb
clc
inc
adc
dec
pop
jle
xor
fldl2e
sub
inc
negb
push
mov
mov
roll
jmp
cmp
nop
push
or
aas
lret
push
pop
push
pop
xor
mov
mov
sarl
jp
or
mov
in
xchg
sub
mov
mov
mov
push
iret
ret
push
xchg
mov
xor
stos
add
xor
loop
mov
pop
sbb
push
push
sbb
jo
into
cmc
add
stc
shrl
aam
jmp
dec
fs
sub
test
inc
fcomps
push
fidivl
sbb
lcall
jle
jecxz
ss
fsubs
xchg
orl
je
mov
sahf
cmpsl
out
inc
push
or
jmp
fisttpll
aaa
sbb
push
sub
push
cmc
mov
jbe
bound
pop
stos
push
and
int
mov
jle
fdivr
nop
xchg
es
cs
mov
or
mov
cli
test
in
ds
clc
insb
sbb
mov
stos
add
les
jp
lret
adc
adc
lea
xchg
fcomps
add
dec
mov
mov
jmp
adcl
mov
pop
jmp
add
out
jmp
clc
into
jno
xor
lcall
cmc
lods
ret
iret
cmp
ds
addb
dec
or
ficompl
jae
cmpsl
rorl
scas
mov
int3
pop
gs
cmc
out
out
add
dec
testl
pop
cwtl
xlat
je
loopne
ljmp
mov
imul
cmp
je
ficoms
xor
out
clc
xor
mov
cli
or
mov
jo
xchg
out
inc
sbb
push
jno
cmp
add
popa
add
sbbb
push
int3
fldt
or
dec
mov
movl
into
mov
mov
pop
mov
bnd
jns
jge
int
out
les
jle
lock
leave
jl
sub
and
ret
pop
inc
push
pop
std
ss
aas
addr16
movsb
sub
mov
pushf
xchg
nop
cli
fadd
mov
add
jns
adc
pop
push
jne
aas
mov
sbb
stc
fnstenv
aaa
gs
jg
inc
in
insl
flds
inc
iret
cmp
mov
ret
pop
in
or
mov
sub
xchg
pusha
adc
sarb
adc
testb
mov
fadd
sbbb
adc
or
mov
imul
cmp
out
fnstsw
mov
sub
stos
inc
cmp
enter
jnp
int3
fists
jns
push
or
push
enter
sbb
insl
or
push
test
aas
cwtl
push
aaa
mov
pushf
mov
cmc
adc
pop
push
stos
and
push
sub
lea
in
sti
les
pop
rcrb
add
jbe
fld
add
int
fdivrl
push
pusha
mov
mov
or
cltd
sar
mov
xor
cmp
pop
test
mov
cmp
jno
inc
lds
cmp
in
mov
rorl
xchg
sbb
sub
dec
mov
xchg
pop
mov
inc
in
and
movsb
test
aam
fcoml
adc
jp
enter
sbb
jne
pop
lret
bound
jo,pn
jne
mov
mov
cmpsb
movsb
mov
outsl
add
mov
out
sub
push
and
xchg
xor
mov
sbb
fnstcw
insb
and
xor
jge
scas
cmpsl
mov
jl
dec
push
push
out
clc
jg
call
sub
popf
loop
cld
fisttps
rcrb
xor
mov
lods
addr16
fs
push
adcb
xor
and
pusha
hlt
jl
inc
push
int
add
xchg
dec
dec
stos
aam
push
jnp
jbe
dec
addr16
icebp
pop
mov
sbb
lods
repz
dec
jns
push
sbb
cmpsl
jecxz
ror
xchg
loopne
sbbl
gs
add
ficompl
add
mov
test
pop
dec
jns
adc
imul
in
fiadds
xchg
loope
and
je
std
rcl
les
pop
lods
mov
adc
sti
lods
in
inc
sub
cmp
or
jp
je
ja
inc
xchg
add
xchg
push
insb
test
push
sti
pop
xor
inc
es
int
jge
jp
xchg
enter
loope
notb
xchg
inc
shll
sbb
pop
inc
ficomps
push
mov
jle
mov
pop
sub
jmp
jl
icebp
lret
cmpsb
push
sbb
mov
inc
cmp
push
inc
cmp
addr16
xor
sbb
stos
inc
adc
inc
insb
std
daa
cmpsb
fldl
stc
sub
mov
out
test
xchg
or
push
aad
inc
mul
jp
bound
mov
out
in
dec
and
imul
fwait
lret
mov
cmp
ret
push
pushf
mov
fbstp
lods
test
call
and
lret
addb
hlt
or
scas
lods
scas
es
cltd
nop
bound
rcll
cmp
jb
jo
jb
cli
lods
sbb
rcrb
lcall
movsb
jae
cwtl
pop
insl
pop
push
ss
adc
cmp
in
sbb
dec
push
dec
fs
or
lods
dec
arpl
stos
mov
std
adc
adc
cvtpi2ps
aad
cld
cltd
jecxz
sbb
scas
pop
mov
add
imul
mov
push
cmp
cmpb
cmp
pop
mov
dec
test
lods
or
stos
xchg
inc
int3
add
xchg
fstpt
fcmove
mov
cmp
mov
stos
mov
rol
add
movsb
cmp
sbb
sahf
outsb
imul
inc
dec
push
cmp
lea
fdivrl
leave
xchg
mov
pop
adc
or
loope
pop
push
mov
iret
xor
or
cmova
clc
pop
aas
mov
ret
cmpsl
push
movsl
sbb
dec
dec
push
xchg
mov
adc
stos
xlat
pop
and
imul
or
popa
stc
mov
jecxz
push
jno
test
mov
xlat
adc
shll
es
repz
sti
jo
imul
ss
inc
sbb
cmp
iret
out
dec
dec
cmc
int
call
add
roll
aaa
js
cmp
ret
inc
cwtl
insb
or
lds
inc
lea
cld
outsl
or
mov
push
mov
fcmovnbe
sarb
add
dec
test
push
out
push
movsb
repnz
fmuls
fidivl
jo
movsl
fcmovne
jbe
iret
mov
lods
enter
cmpsb
rcrl
cmp
test
add
mov
arpl
js
js
xchg
scas
add
xor
clc
sbb
aas
gs
add
fdivr
jmp
jns
stos
pop
cmp
mov
faddl
cmpsl
jnp
push
sbb
pop
xchg
repz
dec
testl
mov
sub
xor
fldl
mov
sahf
les
lock
insl
test
mov
aam
mov
xchg
push
bound
xchg
lret
shlb
or
mov
jp
jecxz
loop
cs
aad
xor
and
sub
xor
mov
fiadds
inc
add
addr16
dec
dec
mov
fisttps
jno
xlat
lods
pop
clc
cltd
cmc
push
gs
jp
mov
pop
fnstsw
jbe
test
iret
jp
imul
xchg
xor
cli
sub
push
aas
mov
test
xor
ja
sub
int3
shrb
sbb
movsl
rcr
test
push
xchg
cmc
mov
daa
ret
and
sub
dec
jg
orb
or
lds
push
mov
pop
inc
loope
xor
cmp
test
scas
cmp
lds
xchg
dec
int
adc
sbbl
cmp
js
push
cmp
jl
in
daa
or
lcall
add
scas
inc
mov
dec
test
xchg
pop
dec
pop
fucom
inc
icebp
add
sub
or
mov
push
es
inc
and
push
in
jge
sub
aaa
cld
cmc
js
ss
out
dec
xchg
jbe
sub
xor
cmc
jge
jb
mov
and
out
repz
xchg
and
cwtl
cmpsl
add
fcmovu
cmp
adc
sbb
xchg
or
jle
pop
push
pop
xor
mov
fidivrs
loopne
scas
sub
pop
imul
lds
je
push
and
aas
rorl
inc
push
jnp
jnp
pop
xchg
add
lcall
push
imul
sbb
xor
out
iret
pop
mov
pushf
sub
gs
pop
fsubp
sub
shr
cmp
popf
int3
add
fmull
cltd
test
mov
hlt
aam
movl
mov
les
lret
mov
adc
add
stos
inc
mov
std
stc
and
jbe
lods
out
add
jnp
inc
pop
push
sub
fcomp
arpl
push
out
notl
push
pop
xchg
mov
mov
leave
lret
cmp
push
lea
add
mov
clc
push
loope
adc
adc
pop
xchg
addl
lds
femms
push
dec
into
movsl
shlb
lods
cmp
test
in
mov
mov
add
ds
addr16
and
cmc
or
mov
sub
cmc
sbb
mov
faddl
cmpsl
stc
dec
icebp
test
popa
lret
adc
push
dec
push
lret
aas
imul
fwait
cld
adc
mov
sti
push
push
jno
jnp
aaa
pop
and
add
aaa
es
xchg
cwtl
mov
subb
mov
push
ficoml
push
jmp
movsl
enter
hlt
pop
xchg
xor
cmpsl
das
adc
mov
mov
insl
stos
mov
sbb
xchg
cmp
sbb
sbb
jb
xor
std
fstpl
sub
sahf
sti
xlat
push
in
xchg
sbb
nop
push
call
pop
test
jmp
into
pop
dec
repnz
insl
pop
xorb
fs
sahf
dec
jecxz
inc
mov
cmp
xor
loop
mov
sti
mov
mov
adc
imul
ret
out
jmp
ljmp
loope
or
push
xor
sbb
lahf
in
sub
es
or
test
fdiv
jge
sub
pop
nop
mov
test
or
mov
lahf
cli
mov
and
mov
dec
andl
int
pop
add
roll
fsub
in
add
sub
mov
outsl
jmp
mov
mov
xchg
das
dec
fcomps
orl
pop
cmpsb
cmp
cwtl
xchg
test
stc
cmpb
sbb
dec
popf
sahf
loopne
sub
cmpsl
and
push
mov
lret
sbb
add
cmc
sub
dec
movb
adc
lret
ljmp
pop
xor
or
sbb
pusha
loopne
stc
int
mov
jg
addl
je
inc
in
cmp
push
ret
push
insl
arpl
ret
std
int
inc
loop
pop
inc
out
xchg
js
dec
and
dec
sub
xchg
push
inc
shrb
push
jecxz
in
ds
push
sbb
mov
inc
imul
mov
mov
jb
int
sbb
stc
fdivrl
mov
jb
out
adcb
xchg
xchg
xor
add
dec
or
push
subb
push
mov
adc
popf
push
loope
dec
sarl
shrb
das
fistl
nop
push
inc
inc
clc
sub
iret
jge
leave
popf
hlt
dec
dec
xchg
sbb
mov
fildll
fcomps
inc
fiadds
mov
add
push
or
rsm
cmp
pop
sbb
pop
hlt
adc
mov
push
jno
int
pop
mov
sub
out
mov
xor
lods
jecxz
mov
sbb
hlt
or
add
sbb
dec
and
jle
push
stos
imulb
fnstsw
mov
mov
pop
xor
dec
adcl
xor
mov
out
cld
inc
scas
and
lods
sub
lret
mov
int3
fdivs
or
mov
fnstsw
xchg
mov
cmp
jmp
xor
rcrb
pop
dec
shrl
push
enter
in
or
out
mov
sbb
inc
in
jg
jb
mov
mov
dec
xchg
loope
mov
and
sub
and
inc
pop
int
movsl
test
lods
cmp
jl
shlb
mov
es
inc
orb
jmp
shl
sahf
cli
jecxz
xchg
sahf
lret
cmp
scas
lods
divl
xor
xchg
jbe
sub
dec
rcrb
fistl
xchg
sti
les
shlb
jmp
and
icebp
lret
inc
pop
dec
test
mov
arpl
fmulp
dec
lret
add
xchg
mov
push
and
sub
ljmp
jne
mov
push
mov
lcall
xor
mov
mov
sub
jb
sbb
mov
in
sub
inc
and
movsl
push
jno
inc
in
mov
push
cs
fiaddl
and
cld
push
inc
cmp
mov
xchg
jp
dec
fisttpll
push
pop
outsb
popf
mov
jb
aas
das
mov
xor
dec
testb
test
xor
or
xor
loopne
dec
fwait
sub
lea
es
push
bnd
jle
out
or
out
scas
scas
ljmp
out
call
neg
lret
mov
das
leave
xchg
sti
jae
scas
fsubrs
fs
stc
js
jnp
repz
pop
scas
aas
cmp
mov
lods
xor
push
pop
inc
in
pop
je
cmp
jecxz
sub
xchg
into
dec
push
dec
push
xor
loopne
ss
cli
stos
stos
decl
add
cmp
xor
adc
dec
lea
popf
fnsave
xor
in
xchg
aas
xchg
or
and
xor
jp
popa
push
mov
inc
addb
mov
inc
fiaddl
insb
addb
dec
xchg
push
aaa
xor
int3
sbb
out
or
popl
cld
stos
mov
and
mov
mov
inc
hlt
and
ss
adc
mov
icebp
test
ljmp
ja
aad
sub
cmp
jnp
call
add
std
movsb
xchg
xchg
ficoms
gs
int3
cmp
and
cli
adc
bound
int
loope
mov
adc
lret
aam
test
faddl
xchg
jl
scas
iret
cld
pop
arpl
xor
jns
adc
add
aam
lret
dec
xor
mov
fwait
mov
fnstsw
lods
fwait
clc
int3
outsl
cli
add
xorb
fildll
mov
xchg
and
adc
xor
xor
ljmp
mov
dec
jg
add
rclb
xor
mov
aad
int
dec
lods
sub
cmc
or
fdivrl
adc
push
mov
pop
push
jb
mov
cmp
fdivl
outsb
push
mov
int
divb
fldl
cmc
jne
sbb
cmpsl
add
cmpb
nop
popa
js
scas
outsb
dec
sub
dec
movb
push
inc
jns
xchg
dec
mov
pop
push
adc
jo
arpl
fsubr
dec
mov
cmp
sarb
lock
loope
dec
mov
orb
xor
scas
adc
cmp
pop
lock
jecxz
xlat
test
test
lods
add
repz
shrb
jl
mov
inc
lcall
jbe
cmp
cmpsl
dec
shll
pop
icebp
movsb
inc
mov
sub
arpl
nop
stc
ss
mov
cmp
mov
xor
pop
mov
sti
mov
dec
cli
in
jle
add
lds
push
mov
ret
sub
fadd
jne
outsb
jae
xchg
cmp
adc
pop
inc
dec
add
icebp
movsl
mov
shrb
jb
mov
jp
or
mov
xchg
leave
je
xchg
pop
mov
mov
cmc
adc
cltd
xlat
mov
pop
xchg
addr16
nop
aam
xor
cwtl
cs
inc
in
lock
cmp
sbb
clc
mov
or
jmp
dec
pushl
cmp
cli
test
lret
pop
jge
test
movsb
dec
jb
rcrb
daa
es
addr16
sbb
fwait
pop
mov
jbe
pop
add
mov
lea
cmp
push
jge
sub
rorb
mov
lahf
lods
xor
jo
scas
jne
mov
movsl
test
lods
jecxz
insl
dec
pop
dec
ficoml
sbb
lret
lock
aad
add
xor
inc
xchg
adc
push
mov
xchg
cmp
repnz
fwait
in
mov
mov
movsl
adc
mov
cld
sbb
fbld
sub
test
or
sub
push
mov
adc
pop
adc
aas
jo
add
cwtl
xor
es
sbb
xchg
pop
add
push
lahf
in
sbb
adc
roll
mov
sub
push
bound
xlat
popf
mov
gs
inc
popa
mov
cmpsb
sbb
sbb
aad
lods
xor
arpl
cmp
pop
cmp
xchg
sbb
rcrl
xor
mov
pop
pop
cmp
lock
loop
mov
outsb
aam
add
dec
and
jl
out
pop
shll
adc
xor
stos
ljmp
dec
xchg
add
shll
into
jo
insl
je
stc
mov
in
pop
jne
jle
xchg
clc
pop
cmpsl
sbb
ret
sbb
mov
lahf
and
mov
cmp
aas
cmp
nop
movl
xchg
and
dec
push
in
mov
nop
movsb
xor
dec
in
fisubrs
or
idiv
test
andb
xor
ja
movsl
xchg
xlat
or
scas
stos
out
fwait
aad
cmpl
leave
or
fists
mov
jmp
jp
test
or
add
pusha
xchg
std
mov
ret
mov
ljmp
jecxz
hlt
les
test
mov
imul
push
hlt
gs
adc
dec
int3
jae
stc
sbb
jns
sbb
jp
push
sub
ljmp
insl
xchg
dec
sbb
popf
sarl
imul
roll
adc
push
xor
int
loope
push
sahf
and
jae
xchg
mov
aaa
ds
out
xlat
es
xchg
incb
sbb
sbb
xchg
aaa
std
sub
adc
or
out
fs
xor
cmc
inc
roll
das
pop
neg
enter
xchg
sbb
sbb
loopne
fmuls
mov
add
fistpl
pop
shll
stc
sar
in
sbb
mov
sbb
dec
fs
movsb
jp
rcll
or
xlat
mov
mov
mov
out
push
xor
mov
mov
rorb
sub
xchg
shl
in
dec
dec
movsb
clc
ds
mov
xchg
fstl
cmp
pop
ficomps
sub
andl
or
pop
dec
test
sub
push
cmp
cwtl
sub
xchg
mov
xchg
push
fmull
sub
xchg
test
sbb
jne
out
add
add
cmp
xchg
or
mov
and
cltd
add
cmpl
inc
aad
jg
and
fbstp
fs
icebp
xor
cmp
and
incb
push
jnp
or
cmp
int
mov
sub
jne
fdivs
or
pop
fdivrp
lods
jne
mov
dec
sti
inc
mov
out
xchg
outsb
or
rcr
and
out
jbe
stos
movsb
jmp
popa
push
out
pop
outsl
out
push
insl
shll
js
xchg
loope
cli
sbb
xchg
aam
xchg
cmp
in
stos
lock
xor
push
push
sub
enter
push
mov
mov
sbb
cmp
scas
xlat
in
xor
adc
sti
add
mov
jge
dec
orb
mov
push
mov
pop
mov
ret
sbb
push
pop
cld
idivb
in
stos
dec
sbb
stos
outsl
sub
and
jle
or
mov
pop
lcall
mov
lret
push
aaa
inc
daa
mov
ret
cmpsl
sbb
out
mov
outsl
cmp
lahf
outsl
sub
mov
std
jb
mov
bound
out
mov
andb
mov
xor
mov
addr16
cld
jnp
icebp
adc
pop
mov
lret
xchg
fadd
psubsb
popa
add
out
jp
lds
imul
or
sbb
mov
scas
or
jbe
aaa
out
lcall
cmp
addr16
enter
int3
xchg
out
push
adc
in
mov
xchg
push
xchg
inc
push
je
and
dec
push
xor
cmp
mov
int3
femms
dec
mov
lea
mov
icebp
out
mov
ret
movsb
and
mov
sub
cmpsb
stos
cmp
sub
and
cmc
adc
daa
xchg
mov
cmp
ret
out
xchg
ret
push
and
dec
iret
loopne
adc
flds
aad
fiadds
idivb
shlb
ja
sbb
jae
sub
int3
cmp
push
in
movsl
gs
inc
sbb
inc
repz
dec
shr
rolb
push
aam
sbb
lds
aam
insl
in
addb
xchg
push
shlb
mov
inc
mov
mov
popf
shlb
mov
inc
sub
mov
arpl
adcb
sub
mov
dec
add
lea
cmp
popa
fadd
in
mov
in
inc
jg
addr16
aad
and
stos
pop
sbb
lret
xchg
push
int3
hlt
inc
and
imul
pushl
jl
ret
pop
stc
outsb
shlw
inc
push
xchg
sti
test
test
pusha
or
push
mov
and
lods
or
push
scas
push
mov
test
mov
rcl
mov
sub
push
out
popa
clc
dec
cltd
out
shrb
lahf
or
pop
sbb
push
or
sbb
aaa
cmc
data16
pusha
cltd
cwtl
mov
insl
xchg
das
mov
fsubrs
pop
into
inc
fdivrp
std
mov
and
in
jg
push
sbb
mov
xchg
jne
int
mov
mov
mov
in
or
fwait
xchg
cmp
aad
aas
cmp
add
jmp
pop
xor
mov
mov
xchg
rorb
es
nop
cmp
dec
pop
stos
test
ret
aas
repz
or
aaa
dec
mov
das
daa
add
cmp
jl
iret
mov
ficompl
xorl
add
cmp
push
jmp
pop
xchg
adc
dec
lea
je
stos
xchg
mov
sub
dec
mov
out
cs
xchg
push
sbb
popf
call
jl
dec
push
imul
jl
or
jbe
xchg
shll
pop
out
push
shlb
dec
and
test
lods
xor
outsb
adc
push
adc
adc
out
or
cmc
lcall
add
mov
ljmp
xchg
lods
loopne
icebp
sub
push
mov
mov
pop
xchg
mov
rorb
cs
inc
mov
mov
xor
dec
pop
and
xchg
adcb
sub
das
or
jl
mov
mov
sub
or
pusha
or
cltd
test
dec
sarl
call
arpl
ret
cltd
cmpsl
jnp
push
sub
ljmp
mov
push
cli
xchg
inc
mov
dec
mov
jp
aam
scas
add
scas
adc
ret
xor
sbb
push
fisubl
lret
inc
xor
out
mov
pusha
leave
in
mov
sub
lret
adc
sbb
std
mov
fmuls
push
push
cmc
jge
mov
push
movsl
sub
mov
and
mov
jmp
imul
mov
pop
adc
push
pop
and
js
shll
test
pop
mov
arpl
dec
xchg
pop
sbb
andl
mov
lods
mov
xor
dec
jp
mov
mov
add
push
sbb
gs
push
ljmp
and
inc
xor
popf
push
movsl
imul
fildl
shl
lea
xchg
jmp
fldcw
push
sbb
fldt
stc
adc
das
roll
dec
pusha
gs
jp
jns
mov
jge
mov
scas
call
cmc
push
das
xor
push
pop
mov
in
cwtl
test
addr16
adc
ljmp
xchg
push
bt
nop
pop
sub
popf
sbbl
loopne
mov
sbb
cwtl
sbb
ds
xchg
mov
mov
arpl
shlb
pop
std
xchg
or
sbb
das
xchg
cld
pop
icebp
sub
sub
and
insb
fwait
sete
sbb
push
out
stos
dec
sub
stc
mov
es
adc
sub
lock
inc
sbb
push
inc
ret
sub
leave
dec
sbb
mov
stc
out
js
xchg
pusha
out
insl
dec
out
int3
daa
sub
mov
xchg
push
out
es
push
jo
xor
xchg
lcall
addb
jg
cmp
or
inc
mov
pop
das
add
popa
adc
push
inc
or
bound
xor
xrelease
movsb
cmc
loope
test
add
fadd
or
mov
dec
or
rcl
fucom
mov
ror
lods
das
sahf
in
mov
dec
mov
jmp
adc
outsl
xchg
ljmp
pop
xchg
cmp
leave
and
or
test
push
xchg
xor
shlb
jbe
dec
loop
je
test
push
loope
data16
xor
or
sbb
inc
bound
mov
subb
pop
dec
jo
pop
ret
lods
jmp
or
adc
push
rolb
sbb
sbb
sbb
andl
repnz
adc
add
push
in
std
sbb
iret
lar
insb
cli
lock
pop
adc
mov
loopne
add
cwtl
xchg
mov
lret
dec
xchg
in
or
sbb
es
sub
inc
cs
inc
sub
leave
mov
push
out
mov
aaa
popf
into
out
jmp
adc
mov
cli
jg
mov
shl
push
pop
out
lret
mov
inc
jle
aad
jo
mov
dec
fcoml
repnz
jae
frstor
adc
cmp
push
cs
int
xchg
jo
shll
mov
sub
imul
out
fwait
inc
shrb
fcompl
fcmovu
aam
sbb
xlat
mov
push
inc
ret
lock
pop
inc
insl
lahf
imul
out
lods
aam
sar
popa
or
into
fildl
jle
lret
mov
jb
jle
shlb
out
jmp
movsl
xor
add
test
push
push
mov
aaa
lahf
mov
mov
movsl
sahf
xchg
ffreep
loopne
cmpsb
jmp
iret
mov
call
aad
add
pusha
jl
mov
cmp
or
dec
dec
xchg
jmp
pop
sbb
pop
out
aad
stos
out
cmp
fwait
xor
inc
xor
xor
cli
dec
mov
adc
push
sbb
aam
xor
repnz
fisubrl
pop
jle
rcrl
xchg
insb
mov
xchg
ljmp
add
and
pop
mov
aam
and
sub
mov
fcom
cmp
inc
pop
orl
aas
jbe,pt
sub
les
adc
push
into
rolb
push
xchg
xchg
cmp
stos
mov
lods
mov
sub
cld
cmp
dec
jle
in
icebp
data16
cmc
ret
loope
lea
inc
pop
les
or
out
sbb
and
push
cmp
jns
mov
in
cmpsb
cltd
in
clc
icebp
pop
cmp
and
xor
inc
and
xor
lea
push
or
xchg
inc
ss
fcoms
jmp
mov
push
test
mov
mov
shrb
push
xchg
push
scas
fdivl
dec
jmp
loopne
int
pushf
lahf
fwait
inc
jmp
inc
push
pop
mov
movl
iret
sti
sbb
test
nop
and
aam
outsb
xor
add
mov
push
or
notl
jo
add
aad
xchg
jne
mov
cmpb
ss
out
jne
xchg
push
lock
shr
test
inc
xchg
icebp
aas
pop
test
pop
and
inc
inc
sub
cltd
push
movsb
and
cmp
push
xor
dec
out
dec
hlt
lret
push
pop
xchg
mov
jl
sub
jns
xchg
int
leave
hlt
mov
fidivrs
push
jne
icebp
aas
lea
cltd
insb
pop
push
sahf
out
jp
gs
sbb
push
dec
cmc
add
pop
pop
call
lods
jno
fwait
jmp
je
sub
rorl
out
out
out
jne
dec
push
mov
adc
xor
mov
ja
push
xchg
mov
jecxz
test
xorl
ret
add
notl
xchg
enter
push
push
lret
ds
test
adcl
mov
xchg
leave
add
add
jge
leave
and
push
inc
fiadds
and
ss
jmp
sbb
loopne
insb
pop
icebp
ret
jno
lret
negl
icebp
jb
popa
mov
xchg
stos
sub
or
data16
lret
daa
std
outsb
and
add
mov
cs
pop
pop
xchg
leave
jo
mov
adc
add
mov
out
fwait
cmp
icebp
push
inc
out
pop
dec
mov
pop
lret
mov
push
sub
jmp
xchg
movsb
lcall
aad
dec
cmp
mov
sub
imul
adc
jnp
es
jl
sarb
push
inc
dec
rcll
fsubr
push
add
sub
xlat
mov
mov
test
mov
aaa
fs
dec
or
shl
popf
aad
dec
dec
xor
gs
pop
mov
mov
xchg
mov
sub
xor
sbb
xor
pmuludq
dec
lods
mov
ficompl
jae
xchg
cmpsb
icebp
int
sub
push
cmp
sarb
jecxz
mov
aam
push
shrb
fcompl
or
lods
add
and
push
aaa
jmp
mov
jecxz
cmp
xchg
popf
sbb
ja
mov
adc
mov
xor
fstl
mov
mov
mov
push
xchg
jb
add
ret
ret
les
das
mov
out
jne
std
popa
repz
ret
dec
aaa
mov
mov
loopne
ret
pop
in
mov
roll
daa
insl
mov
mov
repnz
and
in
xchg
in
xchg
test
pop
lret
mov
pushf
mov
iret
xor
lock
pushf
stc
inc
fdivl
add
push
push
lcall
loopne
lds
hlt
les
push
inc
cld
jle
decl
repz
jno
shlb
or
lds
pop
adc
jne
add
mov
fisttpl
mov
jb
add
mov
int
loop
add
cmp
push
and
test
inc
xor
and
push
insl
pop
je
cli
xor
jo
cli
je
popf
mov
stc
ret
sub
nop
gs
mov
xchg
push
push
mov
dec
sbb
shrl
test
push
cmpsb
repnz
jne
mov
xtest
sbb
mov
jle
inc
xor
inc
xchg
movsb
push
jb
jmp
and
in
inc
mov
aaa
repnz
rolb
sbb
clc
pop
roll
sub
in
scas
sub
ljmp
mov
pop
sbb
inc
dec
inc
push
cld
dec
adc
push
mov
push
and
push
unpckhps
xchg
test
aad
cmp
mov
jo
test
xor
out
sti
pop
dec
xchg
and
popf
movl
pop
add
push
adc
mov
mov
je
dec
add
imul
push
iret
outsb
out
js
adc
arpl
les
jg
jl
iret
int
jmp
psrld
mov
adc
or
adc
xchg
fisttpll
lret
ljmp
push
mov
mov
es
or
push
ret
add
mov
movsb
mov
cmp
pop
mov
aad
sub
pop
pop
ret
test
movsl
arpl
push
sbb
lea
cmp
jp
jno
mov
fsubl
pop
xlat
pop
pop
sbb
sub
add
inc
leave
inc
dec
dec
inc
dec
fildll
push
arpl
daa
add
lods
fimuls
jle
pop
js
cwtl
jne
test
pop
add
dec
and
sti
test
ljmp
dec
aad
div
add
jp
sbb
aam
bound
test
aaa
mov
xor
push
pop
cmp
mov
sbb
push
out
stos
rcrl
pop
lahf
cmp
fistpll
xchg
add
pop
push
int3
int3
cs
stos
mov
je
in
mov
sbb
enter
fisubrl
fs
inc
je
sbb
mov
cmp
sbb
test
add
cs
xor
aam
loopne
mov
xchg
leave
stc
or
fcoml
aas
imul
imul
nop
push
loopne
lods
xor
insl
stc
pop
aas
cs
lea
adc
ret
bound
jecxz,pn
aam
inc
push
add
sub
mov
cltd
addr16
fistpll
das
sub
int3
lods
lcall
mov
jno
xchg
pop
div
xor
pop
jae
cmp
aad
movsl
cwtl
test
jbe
enter
cltd
mov
fwait
test
add
daa
mov
sbb
add
fildll
jns
outsl
xlat
or
lods
popa
jg
dec
clc
dec
outsl
push
fcoml
fcoml
and
dec
lahf
popa
push
je
inc
mov
push
fwait
mov
popf
popf
dec
sahf
mov
sbb
jns
cmp
cmp
pop
jle
cld
cmp
cs
pop
mov
scas
xor
js
jo
push
add
lea
flds
cmp
cmp
dec
dec
mov
popa
sub
dec
mov
inc
out
sub
test
jg
mov
aam
lret
les
and
enter
sti
loop
xor
mov
mov
daa
cmp
mov
or
inc
mov
xchg
das
adc
mov
push
jle
nop
clc
xor
jno
pop
dec
cli
fwait
xor
jnp
ret
xor
pop
roll
xor
fsub
sub
mov
add
or
insb
call
pushf
les
inc
rep
adc
repnz
mov
jbe
stc
js
jns
mov
ja
fldcw
xchg
loopne
outsb
inc
clc
aad
xchg
setnp
pop
test
loopne
outsb
inc
orb
je
test
jmp
add
stos
xchg
cmc
and
hlt
and
and
push
pop
data16
jo
inc
push
fmull
iret
sar
out
in
outsl
sbb
and
mov
pop
bnd
inc
hlt
and
dec
cmc
sarb
dec
xchg
imulb
and
cmpsb
cmpsb
ds
lcall
out
xor
dec
loopne
pop
jmp
mov
fwait
xor
movsl
or
lahf
cmp
sarb
xor
xor
sbb
push
inc
leave
mov
in
lods
dec
scas
shlb
add
sbb
iret
fsin
xchg
hlt
push
dec
jbe
cmp
stos
cmp
cmp
insl
push
sahf
dec
xchg
pop
leave
loopne
movsb
jns
cmpsl
inc
aam
jb
ja
mov
or
inc
ja
cmc
fwait
xor
in
sbb
and
sub
mov
push
daa
cmp
pop
push
insb
scas
mov
adc
repnz
or
mov
mov
imul
xorb
ja
sub
jae
and
loope
push
mov
mov
mov
lods
pusha
pusha
mov
outsb
retw
xchg
adc
xor
shll
mov
ljmp
andl
adc
dec
mov
xchg
std
es
leave
lods
adc
sbb
push
cmc
gs
fldenv
dec
pop
sarb
xchg
mov
in
out
in
aaa
lret
cmc
aad
cli
push
and
or
and
sbb
or
std
rcrb
jno
out
or
cltd
xor
mov
sbb
bound
ret
push
sub
add
lods
cmp
add
fwait
mov
inc
shll
adc
lret
mov
xor
cmp
pop
mov
add
jecxz
adcb
pop
lret
push
jle
shrb
js
xchg
dec
xor
out
add
pop
insl
xor
out
movsl
hlt
lds
add
sarl
jp
xor
mov
imul
jae
mov
mov
fiadds
scas
out
sbb
mov
cwtl
dec
push
inc
lds
and
jne
ds
je
adc
jge
call
sub
and
pop
xchg
jecxz
mov
pusha
cmp
push
call
mov
movsb
loope
in
out
or
cwtl
ret
lcall
mov
pop
insb
xchg
je
imul
dec
shll
jbe
lea
out
or
or
inc
jo
push
mov
xor
dec
popa
jno
push
push
inc
sub
pop
pop
lock
lea
mov
mov
mov
repz
inc
clc
pusha
das
insb
dec
aaa
icebp
and
movsl
cmpsb
in
or
pmulhuw
dec
frstor
outsb
push
xlat
jnp
lret
pop
xlat
cld
sahf
test
xchg
sub
sub
sbb
or
in
addb
stos
ret
lret
jl
pop
lods
xchg
divb
or
and
imul
push
sbb
std
scas
call
sbb
mov
cmp
dec
mov
jge
jmp
dec
fs
push
pop
fstpt
dec
jp
and
in
in
or
jmp
pop
shrl
aam
sub
js
subb
sbb
lahf
pop
xchg
push
js
jne
pop
xchg
popa
out
jns
mov
mov
outsl
es
dec
mov
ficomps
out
lock
mov
dec
mov
lcall
test
cs
push
or
xor
sub
movsl
pushf
mov
mov
in
and
jle
subl
xor
xchg
pop
lds
push
sub
mov
xor
pop
xchg
fldt
fnsave
mov
cmpsl
pop
inc
mov
cmp
loopne
bound
lods
ret
sbb
xor
mov
aam
cli
mov
int
sahf
mov
in
jno
xchg
mov
sub
and
ljmp
das
jo
pop
call
cmp
stos
arpl
mov
fwait
cld
push
mov
jmp
inc
and
lahf
cmp
stos
inc
or
outsl
cmp
xor
sti
push
adc
orb
mov
or
push
repnz
cmpsl
into
adc
mov
aas
aaa
cmp
inc
cld
into
lcall
pushf
xor
cwtl
mov
mov
jl
mov
pop
nop
jecxz
xor
dec
ss
mov
leave
or
aam
jns
adc
sbb
sbb
or
push
lcall
fwait
dec
jb
aaa
lret
arpl
mov
imul
ret
jns
popl
cmpsl
cmp
mov
sbb
xor
rcll
sub
imul
add
int3
adc
lea
push
stc
imul
and
mov
clc
cmpsl
inc
ja
dec
sbb
sub
fmull
dec
mov
mov
xor
pop
ljmp
lods
sbb
ret
addr16
ljmp
push
sbb
sub
xchg
lods
xchg
push
adc
outsl
scas
or
xor
andl
int3
mov
test
mulb
sub
add
pop
leave
cmc
mov
xor
sub
outsl
mov
repnz
push
xchg
mov
aam
mov
push
cmc
xlat
mov
rolb
lret
lret
dec
xor
call
sub
repnz
icebp
out
and
mov
ja
loop
int
nop
mov
inc
dec
out
add
icebp
rorb
pop
pop
sbb
pushf
es
sbb
pop
pusha
and
jns
bswap
adc
dec
cli
out
push
add
sbb
fwait
mov
jnp
notl
add
sbb
mov
cmpsb
mov
jnp
outsl
mov
xchg
and
icebp
loope
inc
ficompl
repz
dec
jp
or
xchg
or
dec
mov
mov
inc
sub
add
out
lret
shll
daa
test
inc
xor
aam
jmp
mov
sbb
fisttpl
cli
add
cmc
cmpsl
xlat
mov
cmp
in
shl
xor
aam
mov
sahf
sub
jae
call
mov
dec
xchg
jecxz,pt
ss
out
and
or
lods
mov
clc
push
push
mov
pushf
pusha
pop
stc
addb
inc
xor
bound
imul
mov
movsb
sub
dec
test
mov
insb
pop
aas
and
mov
movsb
fildl
sub
pop
cmc
stos
pop
xchg
push
push
lea
fs
adc
xchg
inc
rcll
lahf
pop
add
cmpsl
shrl
ds
pop
pop
icebp
test
loopne
out
pop
leave
rcrb
outsb
cltd
xchg
test
fs
test
test
bound
lds
sbb
mov
cltd
xor
xor
andb
jne
call
jno
pop
jmp
imul
ja
mov
pushl
jle
cwtl
xchg
inc
sbb
ret
inc
xchg
mov
xlat
pop
push
in
jl
inc
jle
imul
ss
repnz
xchg
rorl
movsl
pop
add
push
out
sub
xor
jne
pop
setle
icebp
in
inc
jo
loopne
lret
mov
fucomi
cmp
movsb
mov
popa
push
aaa
les
mov
mov
loope
jp
int
push
xchg
leave
lods
push
incb
vmovaps
jle
lret
pop
jg
mov
and
pop
xor
mov
cmp
lock
frstor
icebp
movsl
add
adc
gs
pop
movsb
stc
mov
je
pop
pushf
ljmp
mov
ja
stc
mov
outsb
out
inc
lock
mov
jb
cld
in
out
das
jns
mov
dec
fwait
stc
leave
ja
lcall
pop
inc
test
jns
mov
cmp
push
xor
int3
or
mov
xchg
into
push
shrl
jle
dec
sbb
mov
mov
popa
std
xchg
and
pop
decl
dec
and
mov
cltd
or
mov
aaa
xor
icebp
insl
movsb
sub
add
cmp
aam
push
dec
push
mov
aad
into
inc
cmpsl
sub
adc
popa
jo
push
xchg
movsb
repz
in
mov
push
push
cmp
subb
ja
xchg
ljmp
mov
or
sar
push
ret
mov
addr16
mov
adc
mov
inc
es
and
imul
orl
lahf
in
rcll
or
shll
xchg
js
pusha
ss
xor
cwtl
pop
jmp
es
add
xchg
das
subb
lea
sbb
pop
ja
xor
daa
add
stos
mov
pop
or
mov
ja
inc
imul
and
and
inc
pushf
rorb
adc
rcrb
lea
add
in
enter
mov
cli
test
mov
out
hlt
fists
xchg
std
pop
pop
push
movsb
mov
lods
sahf
dec
stos
lods
dec
in
mov
loope
add
push
lock
sbb
iret
push
bound
stos
dec
add
imul
or
cmpsl
call
fwait
ljmp
rol
push
pop
sbb
add
cs
mov
in
jp
mov
mov
leave
xchg
aam
add
fstpt
call
mov
fstpt
sub
push
mov
out
cmp
xchg
jno
and
les
bound
loopne
in
mov
inc
popf
jne
pop
push
jle
inc
scas
lods
arpl
rcr
out
push
jmp
xor
mov
cs
and
jmp
ret
sub
sbb
mov
xor
add
das
cmp
mov
rorl
lods
int3
push
push
pop
movups
add
mov
imul
inc
jl
insb
test
aaa
add
push
clc
int
adc
repz
int
js
pop
enter
test
inc
sbb
push
push
cs
mov
dec
sar
pop
mov
push
sub
adc
xor
pop
cmpsb
pusha
add
jb
or
push
xchg
nop
mov
dec
sbb
jmp
cmp
pop
push
cs
cwtl
jo
out
sbb
or
and
pop
or
mov
dec
aas
jbe
pop
mov
jb
jb
inc
nop
incb
lahf
mov
inc
cmpsb
bound
add
insb
fnop
xchg
outsl
and
aam
pop
pop
jl
popf
cmpl
lods
sbb
sahf
jno
mov
in
adc
push
daa
fcoms
dec
cmp
xor
jb
das
cmc
cmp
stc
mov
mov
jle
mov
mov
dec
popa
adc
fistl
lahf
mov
mov
inc
pop
xchg
scas
imulb
mov
sti
inc
rol
addr16
jo
xor
jae
push
cltd
jbe
lcall
jmp
xor
scas
sbb
roll
inc
xchg
push
andl
bound
jno
pop
test
mov
pop
pusha
ja
repz
outsb
les
sbb
push
test
clc
dec
xchg
inc
paddusw
mov
fildl
push
jl
mov
nop
jge
mov
mov
and
adc
out
data16
dec
inc
push
jnp
cmc
push
push
mov
jp
mov
jge
mov
sbb
mov
jne
and
push
shll
rcrl
mov
fdivs
sub
add
cmp
jle
call
push
inc
mov
clc
sbbl
sub
push
fidivs
pop
imul
imul
mov
dec
cmp
inc
arpl
data16
lods
pop
mov
xchg
dec
push
outsl
in
popa
lea
xor
pop
adc
stos
push
stos
push
push
shll
insl
ret
daa
add
pushf
xor
xor
js
add
sbb
push
test
push
out
fcomps
push
addb
xchg
push
rcrb
insl
cmp
add
stc
xchg
aaa
bound
pop
imul
mov
adc
mov
addb
cmp
inc
dec
lret
sbb
jmp
inc
out
stos
repz
jle
ret
inc
addr16
out
sbb
inc
xor
movsb
int3
fdiv
cmp
pop
xor
repnz
fildll
push
pop
daa
into
sbb
test
push
sbb
xchg
mov
jecxz
pop
mov
sub
out
sar
enter
or
and
jle
aad
pop
fdivp
int
sub
fs
gs
loope
jmp
push
jb
and
xchg
jecxz
ljmp
ror
test
mov
popa
cmovns
loopne
shlb
inc
pop
xor
dec
sub
mov
add
mov
pop
add
fstl
sbb
cmpsb
lret
add
add
jnp
aas
sub
sub
outsl
xchg
lods
iret
insb
into
dec
cwtl
mov
mov
dec
dec
sub
push
insb
pop
ret
std
mov
std
negb
test
jmp
test
lods
leave
cld
mov
aad
mov
out
addr16
sub
xchg
loope
test
aam
push
fs
je
in
adc
jo
pop
lret
aam
cmp
jns
out
mov
dec
mov
add
movsb
scas
jp
sbb
sbb
sbb
xchg
pop
cmp
jno
fxch
arpl
dec
inc
xorl
dec
xchg
adc
sub
jecxz
ja
data16
and
cltd
dec
add
outsl
int3
aad
in
aad
dec
mov
or
shrl
movsb
dec
cvtpi2ps
ret
mov
repz
repnz
jae
fists
dec
mov
pop
fwait
cwtl
stos
stos
repz
push
adc
mov
mov
addb
add
sbb
cli
adc
inc
pop
adc
test
push
movsb
mov
push
inc
lods
cmp
clc
add
mov
push
cmc
cli
mov
cwtl
mov
popa
xor
imulb
push
out
or
push
hlt
lret
imul
xchg
xchg
adc
call
shl
fmulp
and
mov
mov
and
out
lcall
pop
inc
sbb
inc
xchg
jo
inc
outsl
xchg
aas
call
add
fs
mov
hlt
or
movsb
xchg
inc
pop
mov
int
in
or
push
imul
dec
mov
mov
push
rcl
call
cmp
pop
out
jmp
xchg
jmp
loope
jmp
sub
mov
adc
dec
xor
cli
mov
cmpsb
subl
adc
cwtl
mov
pop
out
fiadds
insl
push
sbb
fstl
or
movsb
iret
push
lods
mov
testb
cmp
mov
mov
and
xchg
shlb
adc
iret
pop
rorb
ficoms
rorb
inc
sbb
ret
mov
dec
dec
mov
sti
mov
fldl
add
cmp
int3
dec
dec
data16
dec
pop
push
notl
xchg
and
xor
lcall
cli
out
fstpl
add
push
inc
adc
fsts
andl
bound
dec
push
add
adc
in
int3
ret
pop
imul
push
int
pop
out
cmpps
aam
push
xchg
push
xchg
cwtl
loopne
test
fisubl
test
or
mov
aas
outsl
xorb
add
scas
bound
and
mov
enter
fcoms
inc
stos
or
in
mov
sbb
jae
cld
inc
mov
das
out
push
xchg
xor
int
push
jbe
arpl
dec
dec
rcr
pusha
dec
xchg
lret
lret
sarb
loope
inc
sti
pop
ror
sbb
inc
mov
popa
out
mov
sub
cmp
xor
cmpsl
mov
jne
xor
mov
js
dec
sbb
arpl
jmp
dec
jg
pop
jae
mov
bound
mov
and
and
sub
mov
xor
mov
std
dec
mov
mov
xchg
xor
jns
test
daa
xchg
std
pop
shll
dec
or
add
inc
hlt
lods
jae
xlat
dec
lods
xchg
cs
lds
cmpsl
lods
jns
js
test
sahf
aaa
sub
sbb
push
sub
jecxz
pop
mov
roll
push
cs
ds
rcl
jnp
pushf
imul
call
lret
xor
cmp
pop
loop
in
insl
iret
fwait
xchg
adc
and
inc
in
insb
jmp
sti
scas
mov
mov
inc
leave
iret
out
outsl
jo
sub
imull
sti
mov
flds
mov
js
or
xor
xchg
xor
push
and
inc
inc
dec
sub
sub
clc
sub
bswap
push
mov
lret
add
inc
mov
test
jo
xor
lods
pop
lods
enter
daa
pop
or
jo
jne
xor
inc
mov
and
gs
pop
aas
mov
out
and
loopew
mov
push
push
push
into
dec
pushf
enter
sub
sub
mov
add
pusha
stos
adc
mov
stos
inc
add
jb
push
cmp
dec
out
movsb
cmp
sbb
sbb
lds
cmpsb
push
pminub
dec
nop
les
jbe
pop
xchg
push
call
dec
jno
sar
sbb
mov
mov
push
pushf
loope
dec
in
sti
test
push
inc
movsl
lcall
aad
test
sahf
add
ror
mov
repz
btr
ret
push
int3
mov
add
pop
inc
or
jb
dec
or
push
xchg
push
out
into
add
and
jecxz
cmp
int3
addr16
xchg
cltd
push
and
pop
std
inc
xchg
sti
rcll
xchg
pop
adc
add
lock
sbb
add
pause
nop
xchg
mov
push
gs
mov
out
lods
xor
sbb
cmpsl
and
jl
addl
popf
sti
and
fucomi
inc
scas
xchg
push
xor
push
xchg
test
xchg
fs
dec
and
push
pop
data16
xchg
add
stos
lea
mov
sahf
inc
dec
arpl
and
pop
lods
push
push
push
or
iret
int3
ret
popa
arpl
lret
fs
xor
push
sbb
addb
cld
add
mov
out
stos
popa
pop
or
in
out
in
pop
pushf
aam
mov
sbb
jge
xor
push
inc
push
add
addb
xor
aas
iret
mov
sbb
dec
push
mov
or
sti
loopne
add
pop
stos
xor
ficoml
mov
lret
cmpl
arpl
test
lret
imul
mov
stos
imul
or
shl
bnd
testb
lods
aas
rcl
or
sub
push
loope
xchg
mov
inc
cld
aaa
add
push
aaa
shr
cmp
and
pop
mov
bound
in
arpl
mov
fs
iret
data16
or
push
std
call
dec
push
dec
lea
mov
dec
add
xor
fisttpl
add
insb
sar
sar
dec
pop
dec
pop
and
adc
ss
lea
loopne
fisubl
jge
lods
mov
mov
fmuls
jno
mov
fiadds
jmp
rcrb
stos
mov
and
or
loope
push
pop
mov
dec
mov
sub
je
out
arpl
jecxz
mov
test
aas
std
movsb
lcall
lea
jmp
ret
mov
popl
repz
push
dec
popf
mov
std
insb
push
mov
cld
out
sahf
push
pop
mov
sahf
pop
cmpsb
adc
aam
stc
lahf
pop
pop
dec
dec
and
mov
jns
cwtl
push
push
sahf
clc
xor
movl
and
cmpsl
jmp
and
mov
jecxz
and
mov
add
mov
rolb
add
xchg
add
mov
cmp
sbb
push
xor
xchg
pop
inc
push
nop
mov
out
cwtl
pop
test
jnp
mov
push
jle
dec
mov
in
js
and
pop
stos
xchg
cmp
inc
and
or
jmp
ret
movsb
mov
enter
cld
sub
push
pusha
mov
inc
adc
mov
aam
addb
repnz
dec
outsl
fsubrs
sbb
fidivrs
xchg
mov
xorb
jnp
inc
cmp
xchg
xchg
jmp
and
add
aaa
imul
fldenv
das
mov
mov
repnz
lcall
fisttpll
clc
and
and
clc
cwtl
xchg
pop
push
cmpsl
xlat
inc
dec
addr16
pop
push
or
dec
lock
adc
cmpl
pop
xchg
mov
jle
adc
loopne
sub
inc
clc
fcompl
adc
ja
push
test
or
lds
incl
mov
jns
loopne
lods
pop
adc
sbb
mov
xchg
fisubs
fldenv
jp,pt
cli
lods
sbb
lret
int
mov
dec
and
pop
insb
das
mov
push
dec
clc
lret
pop
mov
mov
pushf
sti
push
fidivrl
les
in
fisubs
lcall
add
rcrl
add
sbb
push
incb
push
stos
push
mov
mov
dec
ljmp
bound
sub
outsb
fucomp
pop
jb
addb
cmovle
add
pop
mov
fs
int
into
push
fisttps
out
stc
movl
lahf
popf
mov
aaa
scas
ja
sbb
sbb
push
dec
in
mov
int
cmp
lock
xor
jno
add
or
stos
lods
aaa
push
sbb
mov
mov
jns
xchg
sbb
xor
sbb
and
fwait
cld
inc
fwait
xchg
movsl
sti
adc
out
jae
lcall
loopne
inc
cmp
fnsave
xlat
mov
dec
inc
stos
mov
into
shrb
int3
add
rcl
push
out
pop
mov
imul
in
les
push
cmpsb
fmuls
sbb
pop
cltd
sbb
out
dec
int3
pop
shrl
test
mov
sub
xchg
ror
mov
lcall
mov
rolb
sbb
sarb
nop
pushf
xchg
cmp
sub
stos
sbb
cmp
add
shll
mov
mov
pop
jp
push
pop
adc
xchg
test
in
pop
imul
pop
mov
dec
pop
xor
pop
dec
out
push
daa
test
in
sbb
xchg
mov
test
xchg
and
add
sbb
push
cld
push
das
stos
add
push
je
shll
cwtl
lods
repz
cli
fisubl
xchg
mov
and
mov
inc
je
stos
push
lods
fadd
sub
cmpsl
xchg
jl
add
adc
xchg
aaa
jle
sub
les
inc
popf
xor
cs
andb
cmp
sbb
subb
in
inc
mov
or
sub
fs
sbb
xchg
sub
mov
jecxz
int3
pop
in
jge
js
push
lods
xor
cwtl
xor
das
mov
fwait
ljmp
xchg
mov
push
call
mov
sbb
or
clc
daa
pop
cld
movsl
int
popf
xchg
or
imul
mov
scas
mov
sub
cli
cmp
daa
cmp
subb
cs
or
inc
or
call
rcrb
js
in
loopne
xchg
shr
mov
into
and
mov
add
out
mov
rcll
add
call
push
pop
into
test
fs
mov
and
dec
jg
and
sbb
mov
fcoms
adc
dec
xchg
lods
pop
pop
sahf
pop
loopne
rcl
mov
sub
add
int
push
inc
inc
jl
es
arpl
sbb
ds
cmpsb
mov
dec
icebp
dec
rolb
push
inc
cmc
adc
mov
out
lock
jge
push
scas
pop
dec
adc
dec
fwait
in
fs
sti
mov
inc
xchg
pusha
mov
pop
pusha
mov
xchg
pop
mov
pop
sbb
or
shlw
sti
fwait
stc
and
movsl
sub
popa
lds
cmp
faddp
stos
sbb
ret
es
xchg
push
lret
jae
inc
inc
xchg
mov
lds
cmp
movsl
das
mov
xchg
cmpb
test
xchg
cwtl
mov
jg
sti
mov
mov
mov
xor
mov
fiaddl
inc
mov
fucomi
adc
stc
inc
les
xchg
push
ret
lods
push
in
daa
add
mov
push
repz
jbe
out
pop
fistps
pop
mov
subl
mov
add
aaa
sbbb
mov
shlb
sub
mov
bound
cmp
lret
jne
jae
dec
inc
xor
and
cmp
fimuls
insb
in
mov
stos
mov
xchg
inc
inc
nop
repnz
out
cmp
ffreep
and
mov
jge
mov
imul
jno
sub
andb
hlt
daa
xchg
pop
dec
push
clc
pop
cwtl
aas
sarb
insl
sti
dec
sub
and
mov
pop
push
jbe
call
cmp
mov
les
ljmp
cmp
inc
and
sub
nop
mov
push
popf
pop
mov
jae
fistpll
adcl
xchg
mov
xlat
sti
fucomp
sbb
ret
xchg
pop
cmp
dec
jp
push
out
xchg
lock
daa
cmp
hlt
sub
mov
xchg
rcrl
imul
pushf
or
arpl
cmpsb
loopne
push
aaa
and
and
adc
push
sub
pop
lret
xlat
fisubrl
or
ja
lds
in
fnsave
jns
mov
cmp
outsb
popa
jle
mov
xchg
xchg
mov
mov
cld
lea
mov
jb
dec
mov
aas
in
adc
mov
out
xchg
push
aas
push
fstpl
std
and
adc
shll
sbb
aad
sbb
enter
int3
xorb
cmpsl
sub
jns
gs
push
dec
or
pop
pushf
sti
pop
pop
push
mov
ret
push
sub
or
or
daa
mov
cltd
sub
add
inc
mov
popa
aaa
mov
outsl
bound
test
out
jbe
popf
mov
nop
mov
pushf
frstor
jno
and
daa
inc
test
dec
loopne
nop
ret
xlat
es
and
jge
adc
jae
sti
movswl
shrb
jns
sbb
pop
mov
movsb
loopne
mov
ja
mov
pop
push
or
mov
pandn
repnz
mov
sbb
push
mov
dec
aaa
mov
xor
out
aas
sbb
rcll
fnstsw
movsl
loopne
ja
stos
xchg
pusha
icebp
sub
jmp
pop
icebp
shlb
out
jo
gs
loope
pop
dec
mov
xchg
cmp
pop
dec
repnz
lret
pop
mov
mov
fisubrs
scas
mov
mov
das
loope
scas
jb
add
pop
and
clc
add
xchg
dec
stos
test
shr
mov
add
push
paddq
pop
outsb
adc
imul
shr
ja
cmovs
mov
pop
pop
out
adc
cltd
sbb
push
mov
xor
in
add
outsl
loope
imul
adc
pop
xor
fdivs
lahf
and
cmp
sahf
aam
mov
iret
push
dec
mov
loope
jl
fwait
pusha
cs
popf
sub
jmp
inc
icebp
cmpb
xor
ja
xchg
jg
add
and
sub
cmp
outsb
rorb
stos
and
fdiv
inc
pusha
pop
movsl
scas
out
lods
jmp
pushf
inc
push
and
mov
push
loopne
addr16
xchg
lods
movsb
mov
sbb
pop
aad
aas
aas
mov
imul
add
mov
in
pop
aam
pop
sub
cmp
xchg
call
mov
cmpsb
inc
inc
es
fwait
aad
push
divl
mov
inc
lcall
dec
imul
and
test
pop
xchg
enter
ret
movsb
jae
sub
loopne
mov
adc
xor
std
jle
inc
scas
mov
lea
xchg
inc
sbb
cs
xor
pop
outsl
jle
sarb
push
xchg
test
xor
in
sbb
sub
lret
push
pop
pop
or
jmp
dec
into
mov
cmp
dec
pop
sarb
dec
pop
inc
cmp
enter
pop
pusha
mov
push
xchg
mov
lret
sbb
popf
loope
mov
or
jge
fwait
sub
mov
daa
arpl
or
pop
cli
addr16
add
out
sarb
icebp
sbb
negl
mov
cmpsb
ljmp
pop
es
je
mov
xchg
inc
repnz
cmp
jb
shll
jge
inc
scas
sbb
inc
add
sub
daa
jmp
jo
jnp
lods
das
arpl
mov
dec
sub
cs
movsl
jo
cmp
pushf
bound
and
cmpsl
fimuls
faddl
mov
mov
cmpsl
shll
mov
push
dec
pop
cmpsb
add
pop
inc
int
and
xor
dec
aad
addr16
in
add
popa
fadds
cli
sbb
inc
cmc
and
ds
jg
clc
call
xor
jecxz
lahf
cmpsl
add
loop
push
int3
adc
jg
push
test
popf
mov
imul
jge
scas
clc
mov
andl
nop
pop
sbb
inc
sub
inc
test
mov
sub
loop
fwait
cmpsl
sbb
filds
aam
xor
loop
push
scas
adc
xor
arpl
mov
test
mov
sbb
cmp
test
fildl
in
mov
xorb
daa
lahf
and
sub
dec
mov
movsl
jg
pop
imul
out
jmp
jle
arpl
shlb
mov
lods
aas
mov
dec
xchg
and
fisttpll
sbb
sahf
push
scas
pop
rorl
inc
xor
sub
idivl
mov
mov
fs
push
jne
mov
jecxz
fadds
add
repz
cmp
loopne
add
push
or
inc
loopne
stc
dec
movsb
mov
mov
xchg
iret
je
inc
and
call
int3
ja
movsb
sub
xchg
lods
mov
pop
ja
sub
out
movsb
lods
out
adc
fstpt
jae
xchg
popf
arpl
sbb
sbb
xchg
loop
nop
dec
mov
mov
fnsave
je
pop
sti
add
inc
pop
les
jl
add
and
adc
popf
div
or
fwait
insb
push
movl
ljmp
std
aam
pop
inc
xchg
stos
jbe
mov
cmp
push
ret
sub
dec
lret
xor
xchg
es
sub
inc
dec
test
sub
xchg
int3
nop
hlt
mov
xor
push
xchg
jle
pop
das
int
hlt
das
inc
lods
dec
and
add
mov
or
cmpsb
adc
sub
leave
sub
loopne
xor
and
ret
pop
js
cmp
sbb
inc
lcall
aaa
mov
ds
or
xchg
shll
aam
fisttps
lods
nop
dec
fcoms
lret
adc
test
lahf
ss
shlb
mov
imul
push
mov
lea
xchg
cltd
arpl
lret
loopne
adc
jne
or
inc
loope
mov
add
adc
jno
es
adc
pushf
outsb
or
mov
sub
cs
push
mov
xor
xor
jg
xchg
xchg
test
xlat
mov
aaa
adc
jno
inc
shr
cli
push
pop
mov
push
xor
dec
imul
test
jae
sahf
test
or
and
jb
outsl
and
pop
cltd
ret
and
pop
imul
mov
rcl
jg
lret
jns
fidivrl
mov
cmc
xor
push
and
repz
cld
mov
lret
cwtl
imul
push
call
mov
in
jb
int3
fdivrp
xchg
js
xor
negl
dec
dec
jo
sbb
pop
jmp
push
sbb
mov
sub
jmp
mov
jns
sahf
jb
pop
loope
test
mov
jb
xchg
fcomip
faddp
push
cs
xor
or
add
cmp
movsl
lret
rorl
sbbl
mov
or
scas
pop
xor
adc
insl
push
fsubp
push
jbe
pop
mov
in
dec
sub
pop
or
into
imul
push
dec
fwait
push
sub
add
bound
mov
cmc
lods
mov
addr16
repnz
data16
ret
call
aaa
scas
nop
pop
add
push
jp
cld
daa
sbb
dec
pop
les
add
sbb
shrl
inc
mov
dec
cli
sbb
in
mov
scas
push
mov
push
mov
mov
and
inc
mov
ja
jle
insl
sarl
jmp
sub
popf
lret
loopne
or
xor
pop
mov
inc
adc
pop
sbb
in
inc
and
sbb
clc
mov
arpl
lock
jmp
es
inc
dec
imul
repnz
nop
dec
jae
sub
push
mov
xchg
mov
sbb
mov
jmp
sub
mov
test
rcrl
add
dec
dec
icebp
mov
jp
cmp
and
mov
stos
sbb
dec
aad
and
and
cmp
pusha
fmull
cmp
addb
push
aas
fs
in
jge
cltd
clc
aam
dec
gs
push
jb
mov
xor
jg
enter
aam
cmp
enter
cmp
adc
xchg
imul
add
mov
out
inc
pop
sbb
and
ficompl
jmp
aaa
es
mull
cmp
cmp
pop
ss
jp
movsl
rcll
xchg
lcall
mov
sahf
pop
mov
push
mov
lret
jle
dec
cmp
addps
mov
repz
sub
adc
and
ds
dec
call
cmp
ret
lea
outsl
cs
gs
cmc
push
cmp
call
push
int
outsb
jne
es
xchg
subl
loop,pt
xor
cmp
imul
mov
mov
mov
add
inc
stos
cmp
imul
arpl
pop
ds
stos
js
sbb
inc
inc
popa
fisttps
movsl
mov
or
pop
push
test
cmp
cli
test
xlat
dec
cli
test
xchg
cmp
loop
and
push
xor
in
mov
sbb
ja
fwait
jmpw
aad
test
add
push
push
ds
inc
ffreep
jge
repnz
push
sti
movl
aas
mov
sub
pop
mov
xor
xor
jge
mov
es
mov
lods
movsl
sbb
sbb
xor
xchg
add
inc
mov
fistpll
jmp
mov
mov
sbb
testb
lret
dec
push
sub
sub
inc
mov
pop
pop
inc
mov
xchg
aaa
stos
mov
sbb
push
mov
call
out
ret
mov
out
dec
sbb
mov
xchg
dec
xchg
pop
sbb
in
inc
mov
cmp
fs
fidivrl
or
nop
int
or
mov
dec
inc
jmp
xchg
frstor
cmp
cmp
arpl
js
pop
xchg
mov
jp
rolb
or
sub
test
mov
leave
ljmp
sub
inc
push
mov
repz
aam
inc
enter
mov
sub
dec
je
inc
push
into
xor
adc
adc
rorb
hlt
imul
xor
js
cwtl
sbb
and
rol
adcl
sti
push
movsb
jo
pop
inc
adc
outsb
mov
adc
std
mov
incb
lock
or
cmp
push
jns
jno
stc
ror
xchg
dec
ret
stos
imul
in
inc
arpl
mov
sarb
pop
adc
jp
in
loop
imul
cwtl
cltd
mov
sbb
xchg
loopne
es
dec
iret
jae
fidivl
in
inc
jp
jae
jnp
insl
cmpb
outsb
adc
cs
cmp
loop
lds
sbbl
jb
aaa
push
lea
mov
out
push
rcll
jecxz
int
xor
fwait
loop
push
aam
aam
pop
mov
cmp
pop
aaa
les
das
jno
mov
lret
fs
mov
movsb
je
pop
mov
ljmp
sbb
push
sbb
popf
add
jns
cmp
push
fldt
dec
out
jbe
sahf
mov
dec
add
fcoms
mov
lods
lret
mov
jle
and
out
xor
pop
lahf
jge
sbb
sub
xlat
mov
fwait
jo
fistpll
jnp
push
or
cmp
testb
ljmp
aam
stos
movsb
jp
mov
push
or
and
mov
negl
int3
pop
jae
jg
push
xchg
or
adc
jge
cld
test
lahf
repz
shrb
adc
and
cmp
cmc
sarl
adc
add
test
imul
mov
pop
repz
push
lock
into
test
call
jge
pop
flds
pop
mov
int3
pop
imul
adc
scas
incl
sti
stc
sbb
xchg
roll
xor
outsl
insb
xor
scas
aas
and
sub
mov
xor
push
and
mov
mov
xchg
in
mov
lods
sub
clc
add
test
mov
xchg
cwtl
pop
lods
push
ret
inc
sti
cwtl
and
aad
sub
nop
sahf
jae
pop
mov
cmp
sub
push
push
ja
clc
cmp
dec
clc
ja
aam
int
xchg
fisubs
inc
call
cli
pop
adc
jp
adc
fimull
inc
lret
ds
ds
nop
mov
lret
movsb
mov
push
push
mov
jns
test
or
cmp
test
or
testl
sbb
add
cmp
and
add
xchg
mov
or
xor
andl
ja
popf
and
mov
dec
lods
push
mov
and
cmp
mov
lods
mov
rclb
lret
insl
mov
pop
cmp
sub
out
add
pop
jl
je
and
adc
sub
in
xchg
lods
das
enter
ja
sub
aam
ljmp
jno
mov
or
rcll
in
fs
test
and
pop
mov
lret
jne
adc
mov
xor
leave
jp
cmp
jge
adc
hlt
mov
insl
hlt
sbb
pop
jle
and
pop
shl
andl
mov
cmpb
rcl
push
dec
and
and
std
cltd
jmp
lahf
mov
hlt
sbb
cld
movsl
or
pop
xor
lcall
ret
push
cmpsb
inc
cld
push
ret
mov
stos
mov
gs
stc
inc
or
scas
pop
in
and
mov
cmpsl
stos
mov
movsl
jle
dec
sub
mov
das
clc
push
jmp
dec
xor
aam
pop
mov
push
inc
or
iret
cmpsl
pop
leave
push
shll
mov
in
idivl
mov
xor
dec
das
fwait
or
rorb
into
hlt
or
and
mov
fwait
jns
ret
mov
sbb
test
xchg
pop
push
fcom
pop
xchg
xchg
and
enter
dec
and
dec
and
mov
mov
jb
out
dec
repnz
or
jp
add
int
inc
inc
or
imul
sub
dec
js
leave
loopne
pusha
js
lret
mov
fildll
sbb
jmp
lods
fwait
loopne
inc
cmp
add
pop
in
sub
push
sahf
add
lock
fsubl
leave
jp
std
push
in
test
jno
mov
push
mov
adc
icebp
shlb
jne
test
mov
cmp
out
test
mov
stc
mov
cmp
loop
dec
sub
push
cmp
les
xchg
int
cmpsb
jo
dec
lret
movsb
dec
lahf
inc
mov
lds
xchg
push
cmp
inc
add
inc
ret
sti
cltd
enter
sub
ret
or
pop
xor
cmpsb
add
testb
xlat
xor
mov
movb
and
das
mov
mov
xor
sbb
cmpsl
fidivs
mov
sub
jbe
or
test
ljmp
sbb
mov
jns
or
aaa
add
shlb
pop
sub
gs
pushf
cmp
xchg
fcoml
xor
pop
addr16
cld
cmp
enter
xor
mov
add
test
cmovns
inc
xor
mov
xchg
clc
xchg
and
fsts
adc
jecxz
iret
out
in
mov
lods
addr16
adc
push
ja
dec
arpl
and
in
into
jnp
and
ljmp
daa
dec
pop
jmp
out
mov
mov
adc
idivb
cmp
mov
addr16
imul
out
mov
push
popf
mov
jmp
cmpsl
roll
mov
std
xchg
ljmp
cmpsl
in
bswap
loope
popf
roll
xorl
and
sub
insb
cmpsl
and
sub
sub
jae
cmp
or
jns
xchg
sbb
lahf
push
scas
fsub
xor
loope
out
mov
add
add
xchg
xor
fstl
ror
cmpsl
jns
dec
fdivrl
jnp
hlt
mov
leave
popl
popa
xchg
mov
outsb
loope
cltd
fdivr
mov
and
or
mov
adc
sub
data16
pop
inc
cld
iret
fwait
popa
lcall
inc
xor
cmp
or
sub
pop
inc
cs
bound
enter
nop
outsb
insb
inc
dec
pop
jae
in
es
out
push
and
mov
nop
cmc
dec
mov
divb
ret
cli
push
cmp
mov
push
in
jmp
arpl
ljmp
lcall
xor
stc
imul
cmp
add
dec
je
lret
mov
mov
out
lea
jmp
je
or
and
jmp
inc
rolb
sbbb
addr16
hlt
pop
mov
ret
and
flds
fadd
call
xchg
or
in
rcl
or
insb
das
adc
push
or
clc
jge
outsl
cmpsl
scas
outsl
std
adc
mov
xor
add
lds
clc
push
roll
inc
fdivrl
and
mov
mov
sbb
loopne
xchg
mov
xchg
dec
fsubp
mov
lret
testl
repz
dec
sti
xchg
sbb
inc
jl
mov
clc
popa
loope
aas
popa
adc
inc
pop
jg
ds
jmp
and
arpl
jmp
int3
adc
or
pusha
les
hlt
xchg
int
pop
subl
jmp
cmpsl
jno
mov
mov
sub
or
mov
stos
les
loopne
add
fiadds
jmp
mov
adc
test
cmpsl
push
aam
sub
push
mov
push
imul
les
mov
test
icebp
push
aas
and
negl
mov
xchg
dec
xor
mov
and
out
and
repz
and
int
dec
mov
sbb
cmp
jmp
int3
pop
data16
out
mov
pop
loope
fstps
cmp
jl
push
push
pop
xchg
out
or
adc
add
lock
push
mov
pop
cmp
popa
jae
cmp
xor
mov
shr
negb
xor
jae
jl
mov
xor
dec
xchg
lea
hlt
lods
and
roll
mov
mov
roll
daa
je
mov
shlb
ss
mov
je
or
push
lock
or
movsb
subl
jmp
jns
mov
inc
jne
cmp
xor
insb
mov
dec
cmp
dec
cwtl
inc
popf
cwtl
sbb
jmp
lahf
mov
sbb
xor
test
fwait
pop
pop
les
xor
xor
jg
mov
add
jbe
call
adc
fiadds
adc
cmp
popa
in
arpl
pop
mov
jmp
pop
into
hlt
mov
push
insl
stc
fcoms
popa
vaddps
jl
sbb
sub
pop
jns
out
push
adcl
dec
pop
popf
mov
hlt
sahf
int
and
xor
mov
push
mov
or
scas
push
imull
mov
enter
dec
nop
add
cmp
ljmp
jmp
scas
orb
mov
ds
xchg
mov
clc
insl
js
mov
daa
xchg
add
repz
rcrl
sbb
xchg
iret
pop
js
jmp
stos
ret
sbbl
xchg
repz
mov
xchg
cmp
insb
decl
xchg
add
rclb
mov
lods
pop
jp
ret
xor
mov
push
pop
js
clc
jl
cmp
xor
data16
mov
out
in
pop
pusha
fisttpl
ret
inc
cmpsl
cmpsb
lcall
mov
or
test
or
mov
out
sub
dec
insl
testb
add
jbe
mov
mov
aad
movsb
lods
and
mov
loopne
mov
sub
cmc
pop
in
xlat
hlt
xchg
insb
pushf
fmulp
leave
push
and
popa
hlt
lahf
in
ja
or
inc
inc
jle
int
and
dec
in
insl
cmp
out
imul
and
xor
das
scas
jmp
fsubrs
cmpsl
sbb
adc
and
add
mov
loop
mov
mov
test
adcb
in
pop
lds
and
xchg
push
out
scas
push
and
adc
mov
and
int3
jle
loope
xchg
sub
sbbl
xor
mov
lock
sbb
fcoms
pop
in
add
andb
cmpsl
inc
inc
hlt
or
add
mov
stos
and
xchg
mov
rclb
pop
mov
fdivp
and
or
or
add
cmc
push
xor
mov
push
cwtl
pop
xchg
dec
fstps
or
aad
cltd
popa
fwait
add
push
ja
aas
mov
sbb
testb
jo
fwait
lock
out
push
int3
push
cli
outsb
jecxz
pop
or
push
or
js
cmpsb
jge
mov
stos
stos
pusha
lahf
test
adc
lret
adc
jns
das
leave
cmpsl
sbb
cli
mov
int3
pop
pop
int3
add
jmp
mov
or
add
jno
cld
push
and
push
movsb
dec
xchg
mov
xor
in
push
push
in
cltd
adc
cmp
pop
mov
adc
fwait
adc
shrl
out
subl
mov
cli
popa
test
call
imul
leave
mov
pop
sbb
in
gs
jl
cmp
sub
das
dec
adc
jg
xlat
or
lahf
mulb
testb
xchg
imul
test
add
aas
xchg
mov
mov
nopl
insb
test
inc
insb
data16
sub
sbb
arpl
adc
cld
dec
dec
cmp
fcmovu
push
test
ss
push
dec
pop
jmp
outsl
push
mov
mov
sbb
xorl
ljmp
adc
cld
mov
hlt
sbb
xor
cmpsb
push
shll
jb
push
mov
sbb
push
mov
rcl
popf
adcl
inc
insl
push
adc
dec
xor
sub
jecxz
int
nop
cwtl
lea
mov
add
dec
neg
xlat
sub
push
mov
add
cwtl
sbbl
mov
xchg
idivl
xchg
movsb
int
fisttpll
stos
mov
xchg
adc
pop
inc
stc
mov
ss
xorl
or
sbb
xchg
icebp
pop
dec
dec
mov
and
scas
mov
mov
jbe
adc
inc
sub
ja
mov
ficoms
xchg
mov
jle
leave
fwait
sub
daa
fwait
mov
popa
mov
cmp
sub
mov
mov
push
imul
dec
cli
mov
pop
test
pop
cmp
add
data16
mov
dec
mov
stc
adcb
mulb
xorl
jmpw
clc
ror
sub
mov
sbb
testl
push
lods
ds
ret
jo
test
mov
pop
sbb
or
adc
and
imulb
test
jb
xorl
fidivrs
sub
push
xlat
cld
into
mov
sub
xchg
cmpsb
xor
in
shll
aam
into
adc
not
inc
ss
lods
cmpsb
in
addr16
xchg
push
cs
mov
and
pop
out
fcmovb
lods
xor
pop
inc
test
jns
add
mov
adc
push
popf
adc
movsl
je
adc
mov
js
or
xchg
jnp
sub
jl
adc
movsb
stos
jns
add
add
rcrb
stos
add
cmp
int3
out
in
lea
out
sbb
subb
adcl
testb
push
mov
popf
ret
insb
push
mov
pop
mov
stc
std
mov
fildll
push
cwtl
bound
enter
sti
pop
sbbl
out
je
lret
pop
stc
test
xor
or
mov
adc
jne
out
mov
or
jmp
sub
mov
out
add
xchg
test
or
cmp
ss
gs
pop
sub
push
outsb
mov
int
stos
xor
xchg
adc
fldcw
je
cmpl
sub
scas
lcall
cli
push
movb
imul
shrb
lcall
add
push
mov
mov
mov
and
std
hlt
inc
push
test
lods
scas
int3
daa
fcmovu
lret
jecxz
sbb
ja
dec
movsb
lcall
fmulp
frstor
fs
out
icebp
aaa
xor
les
aad
or
adc
fdiv
out
xor
or
or
jge
icebp
pop
inc
loop
and
and
push
sub
and
pusha
arpl
pop
lock
repz
cmp
cmp
jg
mov
rolb
push
cli
sub
inc
push
int3
test
mov
rcl
and
out
les
hlt
lret
xchg
dec
bound
ror
cli
push
lahf
jbe
int3
mov
sub
or
push
jecxz
adc
ds
stos
push
cmp
pop
loop
inc
add
mov
out
sbb
ja
dec
lret
add
sub
repz
sti
das
pushf
jecxz
cmpsb
fneni(8087
add
sbb
mov
mov
or
imul
rolb
push
mov
stos
inc
mov
xchg
lock
in
rorl
push
cmpsl
sub
movsl
cmp
inc
insl
pop
and
in
lods
pusha
in
sbb
jp
mov
iret
push
lods
rcr
movsl
lcall
leave
incl
mov
inc
cmp
lret
sub
insl
mov
lods
xor
xor
popa
sub
add
aad
jmp
dec
outsl
xchg
dec
es
mov
fbld
sub
cmp
xchg
lea
clc
sub
or
outsb
sbb
jmp
scas
sahf
orb
or
insl
mov
jbe
movsb
mull
xchg
lods
fldcw
cmp
sub
sbb
sub
jecxz
lcall
inc
jmp
push
sub
rcl
or
mov
xlat
mov
cmc
and
cmpsb
push
mov
cwtl
ss
je
sbbb
or
test
rorb
sub
or
popa
ret
cltd
dec
gs
dec
dec
mov
aas
jae
loop
mov
adc
pop
fstps
mov
pusha
jl
out
xchg
add
mov
icebp
cmc
add
dec
test
stos
mov
dec
mov
cmp
test
push
xchg
lds
mov
push
pop
les
and
decb
and
dec
sbb
movsl
push
testl
jle
pop
adc
dec
das
sub
iret
xor
mov
sub
cmp
mov
fsubrs
push
sub
and
cmc
push
imul
rcr
mov
mov
xchg
push
and
mov
in
repnz
jne
cmpsl
dec
lea
add
dec
sahf
enter
out
seta
data16
scas
or
jo
mov
or
xchg
je
jae
cmp
jmp
push
mul
mov
mov
mov
xchg
rcl
mov
in
ret
xchg
sbb
cwtl
repz
negb
add
jno
jp
insl
in
inc
mov
cmp
notl
pop
mov
ja
data16
ret
out
and
add
adc
out
pop
add
jo
je
xor
xor
xor
and
mov
fwait
or
in
not
mov
jg
test
loopne
orl
pop
fwait
ja
and
pusha
sub
movsl
adc
or
movsb
push
sub
out
jg
push
loopne
mov
push
loopne
mov
icebp
or
push
dec
push
mov
inc
dec
adc
es
outsl
ffree
and
in
rorl
imul
mov
fadds
insl
cmpsl
pop
xor
mov
xlat
mov
outsl
mov
loopw
loop
add
adc
inc
mov
test
pusha
ja
mov
sarl
or
push
mov
fstps
icebp
stos
pop
iret
push
mov
fcmovu
cmp
cld
jne
and
imul
xor
sbb
and
je
or
mov
inc
add
push
mov
xor
add
imul
adc
pop
shl
cmp
or
nop
or
insb
mov
mov
sub
add
add
fdiv
and
jb
addb
jnp
mov
cs
mov
and
es
int3
iret
out
sub
xchg
pop
rclb
inc
jnp
sub
sbb
mov
into
cmpsl
pop
test
mov
mov
push
icebp
cltd
rorl
and
adc
sub
mov
popf
in
mov
mov
clc
out
push
or
and
jo
mov
pop
cld
popl
roll
jns
xor
adc
vcomiss
out
inc
into
mov
xchg
mov
pop
cli
std
inc
bnd
js
mov
mov
jge
and
fstl
mov
outsl
jl
pop
and
push
sub
push
and
pop
ljmp
int
scas
dec
pop
adcl
movsb
repz
lods
ret
push
arpl
ss
mov
dec
adc
ja
call
push
mov
push
add
mov
lahf
faddl
sbb
lcall
outsl
hlt
ret
movsb
enter
add
inc
aas
cmp
lds
mov
push
int3
mov
cmp
arpl
shlb
imul
push
inc
mov
xchg
shl
lea
mov
add
aaa
scas
adc
mov
jg
push
test
fldlg2
loopne
rcll
or
fisttpl
mov
sbb
arpl
or
sti
fstpt
repz
lods
jmp
push
mov
notb
mov
les
lcall
sar
jg
cmpsl
xchg
into
es
imul
jge
jl
rcr
mov
rclb
adc
mov
lock
lds
or
gs
aam
testb
mov
lock
dec
stc
pop
in
cmpsb
hlt
jae
call
or
dec
mov
lods
imul
push
inc
shl
or
jecxz
loope
jo
sbb
loop
mov
subl
cmp
jns
popa
xor
leave
mov
out
xor
mov
imul
or
je
je
inc
xor
loopne
leave
inc
ret
xchg
insl
cmp
sbb
jns
mov
adc
push
adcb
nop
cmp
sbb
xor
leave
mov
aas
test
outsl
mov
outsl
xchg
je
add
and
fistl
fistps
je
shll
cmp
mov
mov
and
movsb
aad
xchg
bound
xor
ss
and
add
aas
jg
shll
or
cltd
cmp
movb
push
xchg
fstpt
dec
cltd
mov
aas
lock
and
push
nop
ljmp
sbb
rolb
mov
sub
add
daa
gs
mov
lret
cmpsb
mov
insl
and
or
lods
repnz
fisubrl
movsb
and
xchg
jbe
or
add
mull
inc
push
add
push
fisubs
das
test
adc
mov
adc
mov
repz
stc
push
pusha
insl
in
ret
dec
aaa
adc
sub
jnp
xor
mov
js
outsb
cmpsb
mov
std
lds
dec
sbb
shl
jae
test
and
push
es
lds
cmpb
push
lahf
add
push
loope
ret
mov
and
mov
je
push
mov
lahf
jb
shll
pop
xchg
shrl
ds
hlt
cmpsl
push
mov
sbb
pop
pop
mov
dec
ret
and
loop
rclb
stos
push
les
pop
xchg
js
scas
into
fs
movsl
in
jmp
xchg
add
fdivr
push
add
fisttpll
adc
lret
pop
flds
incb
adc
lods
pop
out
addr16
stos
jo
loopne
outsb
outsl
xchg
fsubs
clc
cmp
cmpsl
insl
pop
bound
jmp
je
sbb
movl
mov
test
push
mov
iret
mov
mov
or
pop
outsl
mov
loop
int3
sub
loope
push
std
push
mov
mov
add
test
xor
push
xchg
frstor
mov
inc
inc
scas
cmpsl
sbb
adc
outsb
ja
mov
loop
sbbl
inc
adc
loopne
fs
nop
enter
lods
and
inc
mov
fstl
pop
ss
cmp
cmp
icebp
and
jecxz
stc
pop
or
xchg
cs
push
xor
scas
jae
sbb
pusha
add
ds
adc
out
push
scas
adc
test
inc
add
dec
dec
jle
sbb
repnz
jmp
mov
cmpl
fistpll
xor
push
xchg
in
dec
mov
mov
fs
push
rep
and
xor
cmp
push
rcrl
fcomps
xchg
jne
pop
push
shll
int
jno
sub
movb
test
dec
cmpsb
pusha
mov
shld
adc
repz
sub
rorl
mov
pushf
shrb
cwtl
pusha
shlb
adc
mov
imul
xchg
dec
mov
add
mov
jae
leave
jmp
lods
test
or
pop
inc
loopne
fimull
aas
ret
push
xchg
sub
mov
les
pop
mov
sub
int
in
xchg
pop
jbe
push
or
cmpb
xchg
dec
rcll
cmp
notb
fimull
in
add
aaa
daa
pusha
ret
sbb
test
lret
cmc
dec
out
xchg
push
and
es
cs
inc
aad
and
xchg
aas
sbb
sub
sub
js
cli
icebp
push
and
adc
pusha
roll
cmp
push
sub
lea
faddp
ret
and
cmp
cmp
xchg
pop
mov
rcrl
test
pop
in
mov
xlat
mov
mov
jle
push
push
or
loope
cmp
pop
inc
mov
sub
sbb
or
faddl
fsubp
jecxz
mov
int3
hlt
imul
dec
iret
push
data16
adc
push
jb
mov
adc
lock
arpl
in
xchg
sarb
adc
push
jnp
out
jo
jnp
lock
jo
pop
mov
imul
adc
int
sbb
push
sub
fcompl
xchg
sbb
mov
or
dec
push
pop
sti
mov
arpl
insl
inc
icebp
mov
mov
pop
cmpsl
jne
cmp
jecxz
mov
cmc
jmp
sub
popf
jmp
inc
setp
divl
add
movsb
scas
mov
stc
cmpl
pop
scas
push
jle
icebp
iret
pop
push
push
adc
jbe
or
mov
test
mov
sub
aam
jg
movsl
mov
mov
cmpsb
nop
xchg
out
dec
xchg
inc
sysret
push
fbstp
pop
es
xchg
sub
mov
push
and
push
enter
mov
cmp
mov
aaa
jno
loopne
xchg
mov
sbb
cmp
pop
fcom
mov
xchg
or
or
cltd
mov
dec
arpl
add
or
nop
call
mov
mov
xor
mov
and
hlt
or
lods
sub
xchg
pusha
sub
scas
and
fstl
sub
mov
pop
mov
dec
inc
lock
jg
pop
xlat
movsl
cs
das
out
js
imul
mov
cmp
and
out
ljmp
repnz
mov
pop
sbb
xchg
jae
clc
in
mov
mov
jmp
mov
xchg
mov
lock
hlt
and
std
dec
xchg
mov
add
cmp
popf
adc
lods
pop
rcr
mov
leave
mov
cmp
hlt
lds
inc
call
popf
stos
dec
mov
fs
sbb
mov
xchg
cmp
insl
fs
mov
into
inc
das
les
fistl
xlat
std
sub
daa
jg
dec
and
push
movsl
inc
or
pop
cmp
mov
sbb
mulb
cmp
ljmp
fdivr
adc
push
ficomps
cmp
call
loop
adc
pop
xor
xor
jns
cmp
fisubrs
and
jns
ljmp
sub
lahf
sub
xchg
or
mov
sub
push
mov
jne
popf
inc
mov
cmp
add
inc
test
pop
ja
sbb
test
test
jns
push
mov
inc
enter
cmovge
repz
xor
je
inc
pop
xor
push
adc
jmp
aad
std
sbb
and
dec
adc
gs
dec
sbb
mov
mov
fcompl
xchg
or
clc
jge
adc
and
add
sub
push
out
mov
orb
add
insl
xlat
popl
and
pop
jbe
jl
cs
test
push
and
fsts
pop
or
jmp
lret
lcall
loope
hlt
lods
ret
es
mov
dec
push
sbb
cmp
es
cld
in
out
ss
sub
and
mov
pop
dec
sub
aad
push
mov
mov
insl
pop
xchg
jmp
lahf
cmp
insb
iret
dec
jl
loop
pop
push
frstor
insl
xchg
jne
fbstp
mov
out
jns
mov
cwtl
setns
es
push
out
repnz
and
or
jae
inc
ds
test
xor
pop
int3
xchg
push
cmpsl
adc
mov
dec
jns
mov
sbb
mov
sub
lret
push
arpl
aaa
aaa
mov
fsubrl
xchg
sub
and
xlat
pop
rolb
mov
sub
cwtl
scas
sbb
mov
jbe
out
and
stc
sbb
jmp
shr
dec
test
sub
jne
out
lea
jb
adc
adc
mov
mov
into
inc
subb
scas
dec
mov
xor
push
inc
cmpsl
add
mov
ret
fs
scas
cmc
jge
in
lcall
xchg
insl
mov
inc
xor
popf
or
xor
mov
idivl
push
pop
push
subb
cmp
push
std
xchg
pop
adc
aam
inc
shl
sti
in
jmp
js
outsl
jecxz
or
adc
xchg
pop
adc
negl
mov
rorb
imul
in
mov
xlat
mov
sbb
sbb
sub
jmp
insl
call
mov
and
fwait
iret
jmp
loop
pusha
in
aad
cmc
aaa
dec
inc
pop
sahf
push
xor
xchg
cmp
scas
jle
aam
dec
or
push
movsb
std
jns
adc
push
xchg
dec
andb
jbe
scas
int3
push
jg
enter
dec
aam
xchg
nop
or
gs
std
inc
push
pop
ljmp
fmuls
bound
add
fidivs
lcall
stc
daa
imul
lea
and
or
jns
enter
mov
add
mov
dec
push
test
lcall
sahf
mov
sbb
inc
mov
pop
pop
cmc
out
mov
mov
adc
lods
rcrb
test
shr
jne
xchg
scas
rcll
stc
fcmovnbe
xor
jne
xchg
stos
push
mov
and
mov
xor
xchg
loop
rorl
mov
fmul
push
xchg
lods
xor
mov
pop
jb
push
mov
daa
test
jns
xor
or
mov
rclb
dec
popa
cmpsb
and
popf
and
xchg
push
sbb
pop
xchg
adc
mov
fwait
mov
xchg
test
mov
pop
mov
stc
in
nop
ss
pop
jnp
mov
push
mov
stc
mov
int3
xlat
adc
mov
mov
in
fidivl
andl
sub
jbe
loope
das
push
cwtl
cmpsb
es
fisttpll
cmpsb
dec
jle
jecxz
popf
sti
adc
aas
fs
in
iret
push
notl
pushf
xchg
cmp
dec
in
stc
cld
pop
jecxz
std
jo
mov
fs
and
adc
cmc
fwait
mov
es
jnp
fbld
mov
insb
pop
jae
lock
jecxz
fs
push
cmp
cmp
aas
pop
jl
adc
stos
sub
pusha
xor
inc
push
pop
test
into
jo
fildl
pop
pop
jg
sbb
or
lret
mov
add
gs
xor
into
sbb
push
inc
rcll
xchg
int
insl
loope
mov
iret
push
fstpl
insb
pushf
cmpsb
cmp
pop
addr16
shrl
jmp
lret
and
stos
stos
adc
push
xchg
dec
inc
ror
fstp
fstps
movsl
or
and
push
decl
xor
inc
mov
mov
movsl
xor
push
and
cmpsb
adc
or
mov
pop
outsl
sbb
sbb
push
xchg
inc
sbb
loop
jl
sbb
push
sbb
mov
xchg
cmp
test
add
shll
sbb
cmp
cli
scas
enter
mov
js
movsl
cmc
push
mov
cmc
aad
shrd
das
icebp
ror
mov
aaa
lcall
push
shll
xlat
and
and
mov
add
xchg
sub
jbe
mov
mov
push
push
mov
nop
repnz
dec
lods
outsb
negl
flds
sub
push
sub
in
push
cmp
stos
and
mov
push
mov
mov
push
lret
cmp
or
fstpt
inc
mov
push
inc
fs
fsubs
dec
jnp
pop
jbe
sbb
push
jbe
cld
pushf
xor
sub
dec
xor
dec
and
scas
out
sbb
cmc
js
pop
push
sbb
xor
loope
std
vcvtpd2ps
mov
into
je
sbb
mov
mov
xchg
sbb
inc
lods
jno
lcall
sbb
call
jo
fdivr
or
or
and
nop
adc
stos
ja
or
movsl
popl
enter
negb
insb
int
js
jne
imul
dec
sub
jg
lret
outsb
add
sub
or
push
pop
mull
scas
inc
sub
push
andl
lock
insl
inc
sub
test
rcll
push
and
pop
shl
and
cmpsl
push
dec
arpl
inc
fisubs
es
in
add
gs
aaa
xlat
add
xchg
call
pop
notb
adc
and
dec
sub
shlb
push
sbb
aad
xor
and
js
or
aam
outsb
pop
fs
inc
jle
iretw
dec
lock
and
scas
pop
loopne
and
cmc
cld
pop
add
shr
cmp
jmp
int3
mov
daa
mov
mov
fsts
jp
clc
pop
pop
ret
inc
out
mov
cmp
lret
lahf
mov
or
icebp
ds
jne
cmpsl
mov
and
push
stos
jne
scas
fsubrl
shlb
push
xor
in
cmpsb
out
lcall
sub
add
xor
lods
or
out
pop
test
inc
push
mov
jle
mov
mov
outsb
test
sub
mov
loopne
xlat
pop
or
popf
lock
mov
fisttps
sub
pop
enter
hlt
xorb
push
xchg
repz
jb
pop
xor
aaa
or
add
fcoml
aad
xchg
nop
dec
aad
mov
mov
push
cmp
push
sub
xchg
fdivrl
inc
lret
je
or
xchg
rcrb
ds
sbb
jl
mov
fisubs
or
aam
or
inc
cmp
sarl
mov
and
jg
dec
and
js
ret
mov
lret
mov
add
jl
push
sbb
out
mov
loopne
mov
ss
inc
fwait
out
out
or
dec
cmp
pop
inc
sbb
hlt
or
sbb
in
inc
psubusb
mov
sbb
sub
jp
sti
mov
lahf
or
inc
jb
mov
vmovmskps
jg
push
mov
jg
stos
xchg
add
insl
insl
mov
mov
push
mov
add
sub
mov
inc
dec
js
aaa
mov
jnp
enter
mov
cmpsl
insl
sbb
dec
inc
jb
cmpsl
lds
lret
mov
dec
add
mov
push
pop
int
loopne
adc
lcall
popf
loope
cs
loope
call
mov
pop
xor
jo
xchg
sahf
push
mov
xor
push
cltd
fisubl
call
xchg
or
cmpsb
cltd
mov
repnz
test
mov
xchg
mov
pushl
fsubrl
out
mov
mov
loop
sarb
insl
scas
sub
ss
test
das
mov
sub
outsl
push
cmp
aad
fs
dec
insb
fneni(8087
inc
lds
mov
lds
xor
mov
sti
mov
jne
jno
mov
mov
jae
sti
cli
sbb
or
movsl
or
lahf
push
shlb
push
mov
std
out
xchg
jecxz
mov
out
mov
cltd
push
rolb
pop
inc
sbb
dec
sub
push
cmp
sti
pop
ret
inc
cwtl
jns
inc
stc
rcrb
aad
shlb
xchg
push
mov
jbe
lahf
bound
dec
int
cmc
insb
sbb
ss
xchg
cmp
fisttps
into
xchg
cmp
and
mov
shr
and
jl
es
dec
cwtl
fldt
inc
icebp
stos
mov
pop
movsl
sbb
push
outsl
pop
fs
loope
mov
sbb
insb
xor
js
ja
lods
in
addr16
shrb
or
xor
adc
lret
sub
xchg
mov
push
pop
sub
add
xchg
dec
pop
add
lret
xchg
out
loope
in
flds
popf
out
adc
stos
xlat
adc
out
jmp
mov
icebp
mov
sbb
jb
xchg
scas
stc
out
dec
or
rolb
xchg
ret
pop
loope
push
movsb
lahf
popf
daa
pop
jl
jg
mov
xor
mov
pop
mov
adc
adc
pop
arpl
les
lods
daa
mov
nop
test
daa
and
cmp
dec
adc
mov
jg
stc
adcb
js
pop
cmpsb
js
and
rcll
mov
lret
fistl
push
mov
lods
cmp
sbb
pusha
ret
cmp
fbstp
push
dec
add
adc
xchg
sub
into
or
cmc
hlt
jne
add
xchg
sbb
hlt
mov
loope
jl
das
je
dec
dec
loop
cld
push
mov
divb
adc
out
jmp
cmc
mov
test
inc
fdivr
stc
in
add
and
jae
gs
xchg
mov
inc
inc
push
pop
pop
add
push
jmp
aas
xchg
add
mov
and
jg
test
sub
test
cmpsb
adc
dec
pop
mov
enter
das
add
push
mov
push
int3
pop
scas
jecxz
pop
inc
push
negb
insb
fxch
es
popa
fists
jbe
pop
aam
or
pop
scas
sti
fisubs
xchg
je
inc
jle
xor
inc
and
mov
sahf
pop
add
pusha
std
aad
mov
repz
xor
inc
mov
insb
iret
lcall
jno
das
fwait
jbe
mov
rorl
aaa
out
addr16
mov
mov
xchg
stos
xchg
lds
mov
xchg
lahf
iret
sbb
pushf
test
cmp
cmp
inc
xorl
xor
fidivl
lock
inc
ss
push
pusha
fmulp
call
or
cli
dec
nop
in
dec
cs
dec
test
add
movsb
cmpsb
push
movsl
or
adc
scas
decl
dec
adc
pop
sbb
outsl
inc
inc
notb
daa
adc
mov
pop
adc
dec
sub
pushf
inc
mov
dec
jl
std
idivl
fcmovnbe
jb
xchg
fwait
data16
je
mov
mov
out
and
mov
outsl
or
out
pop
fcomps
mov
xchg
jmp
push
nop
rcr
xchg
push
mov
fldt
xor
or
xor
pop
out
jp
sbb
cmpsb
outsl
pop
add
rcll
arpl
nop
lods
pop
push
shl
cli
xchg
inc
push
movsl
mov
sub
push
xchg
mov
push
xchg
jae
sbb
lods
push
dec
icebp
mov
xor
pop
out
cmp
pop
clc
sbb
or
pop
leave
xchg
mov
mov
dec
or
jnp
inc
add
jno
cmc
lea
and
outsb
scas
pushf
jo
mov
sbb
cs
dec
repz
add
shll
lcall
out
cmp
mov
ret
push
cwtl
lea
xchg
or
push
pop
mov
jmp
jg
and
jne
adc
out
pop
rcll
pop
test
mov
add
cltd
sub
js
inc
lret
add
mov
outsb
repnz
sub
jmp
add
ret
jbe
sbb
fsubrl
sti
xchg
add
jo
scas
out
out
gs
pop
popf
sbb
fdivp
mov
mov
add
loope
lods
and
pop
mov
dec
jbe
dec
push
shlb
loope
in
data16
or
mov
add
or
jnp
data16
push
fimull
push
push
inc
jae
xchg
inc
gs
mov
je
pusha
adc
dec
les
or
cmp
cwtl
stos
div
pop
xor
xor
jg
mov
jle
add
and
xchg
cwtl
les
into
push
mov
daa
push
in
jle
test
repnz
ss
int3
out
sahf
aas
lock
xchg
inc
mov
mov
or
aaa
jnp
adc
mov
and
outsl
stos
sbb
mov
or
mov
jg
jb
mov
ret
cmpsl
inc
lods
and
fmuls
test
and
mov
adc
and
test
dec
sub
jbe
rcll
sbb
loope
fistpl
mov
cmpsb
mov
fsubrl
and
ds
insl
in
and
inc
fbstp
xor
mov
filds
jae
dec
cmp
xorl
dec
and
jmp
nop
ljmp
xorps
mov
aad
repnz
pop
repnz
lret
xor
in
scas
adc
nop
xlat
xchg
dec
in
insb
das
dec
and
repnz
flds
push
xchg
mov
mov
adc
testb
dec
loop
loop
add
pop
jb
xchg
stos
mov
jo
mov
pop
and
test
xchg
andb
or
imul
test
add
pop
dec
pop
pop
lret
pop
std
sub
mov
mov
ret
ss
xchg
push
imul
push
or
push
dec
pop
push
sbb
and
test
out
arpl
addb
sub
pop
or
xchg
xchg
dec
mov
sub
aas
push
andl
in
adc
je
outsl
in
fisubrl
mov
sub
dec
gs
divl
jbe
mov
cwtl
test
sbb
jbe
or
and
call
ret
push
rorl
jnp
push
jae
or
fsubs
sbb
xchg
mov
shl
jnp
aam
cmp
jl
xor
sbb
mov
imul
vshufps
test
int
add
add
mov
roll
or
sahf
flds
ja
jo
mov
lods
loop
sbb
in
data16
movsl
outsl
insb
aam
ss
mov
lds
insb
fists
xchg
sahf
mov
jns
aas
sti
adc
push
bound
xor
inc
and
gs
test
mov
push
shrl
add
ret
mov
fldt
mov
inc
lcall
mov
sahf
call
push
mov
mov
jmp
aaa
ret
cs
and
gs
jbe
push
pop
sahf
cmp
es
sbb
int3
out
std
cmp
les
inc
dec
jno
xchg
jl
sub
push
pusha
mov
rcll
pop
stos
dec
insb
sbb
jecxz
cmp
imul
push
add
mov
adc
stos
lret
lock
inc
scas
aas
xchg
push
popa
sub
and
xor
sbb
cs
add
std
icebp
and
mov
pop
mov
mov
xor
lea
aaa
imul
or
add
mov
xor
inc
jnp
cmp
cmpsb
outsl
jb
subl
pop
fdivs
shlb
jle
int
xor
mov
js
and
sub
jbe
outsb
mov
cmp
imul
orw
push
popf
xlat
in
in
jge
gs
pop
pushf
adc
test
ret
rorb
roll
sbbb
psllw
pop
gs
scas
rclb
add
xor
out
leave
mov
rorl
out
stos
in
lcall
les
adc
in
mov
mov
pop
sbb
jmp
jp
hlt
sahf
mov
orps
stos
out
mov
lods
mov
xchg
jge
hlt
loope
add
pop
lahf
jb
lret
and
xor
or
pop
xor
icebp
aas
cmp
mov
jne
bound
pop
shrb
add
pop
cmp
loop
sub
push
dec
cli
stos
andb
push
jge
mov
jb
movsl
in
sub
lahf
mov
push
add
xchg
add
pop
adc
and
mov
jbe
subb
rcll
sbb
mov
pop
in
loope
out
and
es
jg
popf
adc
idiv
mov
imul
mov
dec
mov
add
loope
jno
pop
xchg
ds
mov
dec
mov
add
jne
mov
in
sarl
adc
pop
mov
loope
out
push
out
movsb
negl
push
or
out
cmp
sbb
xor
mov
scas
mov
aaa
cmp
repz
sbb
pop
mov
lahf
cmc
xlat
pushf
popf
add
and
addb
adc
pop
cwtl
jp
adc
cli
pop
ret
sbb
cmpsb
cld
pusha
movntq
rorl
push
jmp
pop
mov
test
scas
mov
mov
add
fisubrl
fnsave
lret
xor
mov
cmpsl
insb
js
outsl
das
xor
sbbl
iret
repz
cwtl
mov
sub
xchg
mov
aas
inc
stos
stos
mov
out
cmpsl
fisubl
pop
or
movsl
iret
sbb
sub
fidivrl
pop
jmpw
daa
add
xchg
cmp
xchg
sbb
loopne
push
sahf
loope
push
hlt
idivl
js
and
cmp
stos
inc
fsubl
je
mov
push
dec
jecxz
insl
cmc
and
mov
jo
and
pop
pop
mov
or
je
les
aaa
mov
in
cmp
jecxz
divl
cs
jae
jmp
scas
add
icebp
jmp
add
les
mov
mov
inc
pop
xor
or
lods
mov
aam
mov
cmpsl
cltd
or
cmp
xor
fildl
mov
jmp
sbb
jmp
jecxz,pn
mov
sbb
imul
out
dec
and
sub
nop
test
rcr
sbb
movsb
pop
fsub
popf
ss
and
out
roll
pop
mov
mov
mov
bound
xchg
cmp
fadds
and
sahf
iret
mov
adc
outsb
int3
je
add
jg
dec
aaa
mov
lahf
notl
fadds
cmp
push
imul
pop
leave
std
in
adc
cli
add
popa
outsl
outsl
out
mov
int
lahf
flds
or
sbbl
rol
leave
rol
scas
pop
sub
jecxz
mov
into
cwtl
xchg
fistpll
in
scas
inc
andb
and
iret
xor
push
xor
pop
jl
jmp
iret
inc
out
sbb
dec
inc
dec
and
push
mov
shrb
fistpl
mov
jo
mov
testb
add
ret
or
gs
jns
repz
jmp
add
lea
popa
daa
das
mov
jle
outsl
push
fbstp
adc
pop
dec
leave
mov
pop
or
jge
jo
mov
repz
fwait
xor
push
adc
sbb
ja
mov
cld
testl
jmp
pop
pop
popa
testb
out
sub
mov
fwait
loop
jmp
sub
jge
jp
lods
pop
sti
pop
or
and
sub
icebp
jge
cltd
imul
clc
xor
aam
ror
orl
xor
cltd
cwtl
out
aad
hlt
xor
in
popl
dec
mov
and
shl
xchg
cmc
inc
lods
pop
cltd
in
into
sahf
divb
mov
outsb
jnp
cld
or
and
in
xor
shll
mov
leave
ret
out
sub
out
jns
pop
ja
jbe
and
or
add
or
shll
cli
and
stos
sbb
jo
out
xlat
outsb
mov
fisubrl
ficoml
jnp
push
outsl
enter
push
in
pop
cmp
lret
mov
pop
push
xchg
ja
ljmp
pop
mov
pop
insb
mov
inc
sub
pop
pop
aam
dec
xchg
int
je
aas
cld
out
dec
fildl
xlat
ss
shll
mov
fwait
jb
push
inc
jg
mov
faddl
and
hlt
loop
dec
mov
scas
or
scas
pop
inc
outsl
sbb
mov
push
mov
inc
loopne
fwait
mov
and
sub
mov
lods
mov
repnz
push
jbe
add
flds
sahf
int3
pusha
push
adc
inc
popf
js
imul
movsb
lret
and
loop
sbb
out
xor
ljmp
adc
and
outsl
sbb
stos
in
sbb
scas
test
dec
mov
add
cmc
test
pop
lahf
adc
and
jmp
clc
mov
or
or
adc
or
cmp
fisubrl
inc
icebp
adc
in
fldenv
adc
push
fmuls
out
ja
xorb
in
shll
aaa
sbbb
mov
cwtl
push
cmp
test
xor
xor
test
cmp
pop
mov
popl
jns
xchg
arpl
jbe
pop
add
cwtl
jmp
sbb
sbb
mov
xlat
repnz
outsb
jle
cmpl
pop
sub
hlt
sbb
loopne
xchg
xchg
in
movsl
mov
jbe
test
dec
cmpb
and
mov
outsb
pushf
hlt
push
test
fbstp
ror
jne
push
insl
cmpsl
or
xchg
push
insl
xchg
out
cmp
stc
sub
and
negl
std
call
fstps
cmp
leave
rcr
iret
inc
jg
pushl
jg
xlat
jns
rorl
cmp
insl
mov
arpl
mov
iret
mov
in
mov
lods
fwait
pop
adc
dec
cmc
and
pop
lods
dec
push
iret
mov
mov
mov
rcr
lahf
insb
call
cs
sbb
mov
mov
dec
jno
fcomp
in
mov
int3
ja
sub
inc
xchg
inc
mov
sbb
dec
test
insl
inc
dec
scas
ss
mov
cmp
test
cmpsb
push
cmp
or
mov
dec
sbb
lods
mov
rclb
xchg
push
jl
pop
dec
dec
shrb
icebp
mov
or
test
sbb
testl
xchg
in
cld
cs
xchg
jecxz
lldt
fnstenv
fmuls
mov
sbb
daa
dec
pop
add
sub
inc
jp
dec
test
xor
mov
lea
adc
push
shrl
mov
mov
xor
push
out
rorl
mov
pushf
fsubrs
test
aaa
dec
lds
xchg
and
cmp
imul
into
subb
mov
push
add
jge
add
lret
sbb
sbb
rcll
sub
mov
inc
xor
mov
sbb
mov
mov
add
loop
movsl
sbb
in
arpl
mov
enter
stc
push
jne
roll
push
xchg
mull
and
insb
push
lea
mov
sub
push
sub
loope
sbb
xor
or
inc
int
xchg
dec
fcoms
xchg
daa
pushf
cwtl
fisubl
cld
jno
mov
add
sbb
mov
dec
or
out
scas
xchg
mov
ret
andb
cmpl
ret
and
fnstsw
cltd
pop
nop
movsb
out
scas
dec
inc
shlb
dec
and
mov
shlb
xor
adc
lret
int3
mov
mov
and
push
sbb
or
mov
lock
mov
inc
test
inc
xor
push
cli
fcoms
inc
rorb
xor
inc
and
int3
add
insl
cli
xchg
push
outsb
push
movsl
push
pushf
inc
sub
arpl
loopne
jb
dec
jg
out
test
mov
rorb
leave
iret
jbe
outsl
push
lods
push
xlat
scas
or
pusha
cltd
inc
fsubrs
mov
fisubs
test
cltd
or
testl
pushf
daa
in
sti
movsb
outsl
dec
push
loop
xchg
cld
cmpsb
sub
iret
out
fbstp
wrmsr
push
pop
das
out
sti
imul
cwtl
push
add
insb
mov
sub
mov
fmull
and
dec
mov
pop
sar
rcrl
xchg
test
cmp
ret
rcl
jns
and
sub
mov
sbb
jne
mov
mov
repz
push
test
test
mov
jnp
popf
jecxz
dec
xchg
pop
cmpsl
mov
pop
test
addl
mov
or
push
rclb
test
jns
sbb
imulb
mov
mov
push
ss
stc
fs
xchg
xlat
sbb
lret
or
xchg
aad
push
mov
sbb
nop
fisttps
ss
pop
sbb
test
pop
shll
inc
stos
aas
lods
test
xorl
xor
mov
and
pop
das
push
jmp
and
push
out
std
sti
or
xor
mov
insl
xor
inc
jge
mov
popa
sub
jae
cltd
mov
pop
cmc
push
push
sub
cwtl
pop
movsl
inc
lods
jl
je
jecxz
add
jo
repnz
push
pop
jge
xor
test
or
in
mov
jmp
pushf
add
test
sbb
xor
iret
lods
cmp
ss
movl
subb
repnz
sub
scas
push
call
dec
inc
scas
lds
add
push
mov
negl
xchg
ds
push
scas
jbe
cld
mov
mov
mov
adc
ljmp
scas
mov
int
fsubs
inc
pop
mov
inc
mov
aad
sub
repz
mov
dec
stos
xor
jns
xor
aad
into
jns
lock
jbe
bound
lock
gs
pop
xchg
cmp
frstor
in
mov
bound
fdiv
jbe
mov
mov
idivb
and
int
unpckhps
and
pop
aam
sbb
xor
in
ret
ret
pop
dec
nop
test
cmc
mov
xor
pop
ret
adcb
xchg
cwtl
adc
out
jnp
cmpsb
ljmp
xor
fs
jl
sub
mov
imul
or
insb
add
imul
sub
jmp
inc
jmp
aaa
mov
lods
dec
popa
lcall
jmp
cmpsl
lods
jecxz
pop
pop
dec
pushf
ljmp
pop
sbb
ficoms
push
pushl
cli
xchg
xchg
rcr
sub
mov
xor
dec
push
dec
mov
xor
pop
leave
inc
sbb
xor
mov
fiadds
orb
inc
pop
jns
into
mov
imul
cmc
mov
push
into
shll
js
mov
fiadds
les
inc
cmp
or
dec
push
js
cmp
mov
xor
mov
das
jae
gs
inc
mov
pop
inc
es
movb
mov
pop
fucom
push
xlat
pop
hlt
lret
xchg
jg
adcb
and
lar
fidivrs
repz
repz
and
scas
mov
sub
dec
jae
mov
decb
jl
outsb
in
pop
mov
imul
xor
add
xor
hlt
mov
in
ja
xchg
fs
cwtl
lret
inc
cmp
xchg
sahf
xchg
lods
inc
scas
mov
jns
ss
inc
ljmp
mov
stos
test
push
jg
sbb
cmpsl
push
jne
dec
call
xor
xor
mull
add
add
push
xor
jge
call
outsl
mov
adc
cs
mov
fcos
push
aam
sbb
cmp
pop
jnp
repnz
js
mov
fucom
ljmp
fcmovb
mov
in
cmpsl
inc
in
xchg
ljmp
insb
movsb
fsubrs
sub
pop
lcall
cmp
jmp
dec
out
fistl
mov
xor
out
loop
mov
lret
or
cmp
mov
jle
test
xor
jg
lahf
enter
mov
and
push
mov
pop
jmp
ja
jnp
scas
add
push
adc
test
cmp
scas
inc
lahf
pop
mov
ret
aad
bound
pop
push
inc
jp
je
test
or
mov
dec
scas
pop
mov
fwait
mov
pop
lahf
bound
ret
sub
pop
push
cmc
mov
add
mov
sub
int3
out
lahf
cltd
lods
ret
dec
or
xchg
imul
shll
cmp
push
daa
push
out
xlat
lods
test
adc
movsb
xor
jb
mov
shlb
pop
cmp
inc
add
cmp
call
loop
ret
xchg
ljmp
cld
popa
xorl
fdivrs
mov
mov
jo
push
aaa
pop
mov
adc
xchg
movsb
jmp
mov
xor
nop
dec
insl
sbb
xchg
repz
ret
in
cmpsl
jno
push
pop
nop
sbb
cwtl
cwtl
and
push
in
cs
or
addl
jns
mov
aas
jp
pop
push
ds
mov
nop
mov
mov
mov
mull
ljmp
imul
mov
sbb
cmc
rorb
stos
loope
popa
test
rcl
mov
repnz
mov
pop
out
dec
out
iret
adc
imul
paddb
dec
inc
mov
inc
push
test
fcmovb
stc
cmp
xchg
jne
mov
rorb
iret
mov
rorb
out
ljmp
pop
jno
ret
imul
cli
push
movsb
pop
pop
inc
inc
inc
out
push
pusha
repnz
popl
lcall
rolb
mov
fdivs
gs
sub
ljmp
dec
movsb
pop
push
fldenv
dec
cmp
adc
xchg
xchg
in
stc
mov
in
mov
mulb
mov
fisubrs
inc
addr16
lcall
out
add
and
pop
add
lock
popf
mov
dec
sbb
cmp
ljmp
lock
push
cmp
rcl
mov
mov
push
push
nop
or
cmp
mov
inc
sub
out
ds
sub
test
push
cmp
dec
xchg
fwait
cmpsb
jns
lock
nop
das
and
sbb
cmp
xchg
pop
jnp
dec
in
inc
push
push
mov
bound
inc
jae
cvtps2pi
call
pop
mov
mov
divl
into
push
stos
mov
pop
or
decl
fistpl
test
jecxz
lods
in
mov
cmp
adc
insl
repz
orl
movsl
push
jae
adc
mov
adc
jle
pop
mov
xor
pop
sti
scas
fwait
mov
xor
mov
negb
insb
popa
mov
cmp
scas
sti
out
mov
cmc
pop
adc
int3
xchg
mov
es
mov
mov
mov
stc
imull
adc
mov
and
push
sub
xor
clc
in
push
mov
or
andl
cmp
jnp
sbb
or
orl
mov
mov
ss
cmp
pop
lcall
push
movsb
fs
jg
faddl
cmp
dec
inc
loope
in
icebp
jae
cmp
std
std
jge
shlb
hlt
mov
jg
inc
or
jle
enter
insb
sub
pushl
pop
push
sahf
dec
xchg
adc
pusha
or
mov
cmp
push
das
rorl
and
nop
jg
and
jb
js
add
scas
out
sub
cmp
add
mov
out
pusha
sbb
jo
pop
lret
and
mov
icebp
sub
stc
inc
mov
add
push
pusha
adc
mulb
xor
dec
or
adc
call
or
sbb
xor
mov
lret
cmpsl
mov
test
addl
lret
pop
ds
incb
jecxz
push
out
call
and
pop
push
stos
xchg
push
xchg
stos
adc
and
rcrb
cmp
in
inc
or
pop
or
ss
add
lds
mov
jb
fimuls
lods
xor
inc
les
test
outsb
ds
int
pop
adc
out
jo
jmp
movsl
pop
lret
fcmovnb
das
movsb
cmp
int3
and
xchg
pusha
clc
cltd
cmc
into
fwait
imul
mov
mov
rcl
out
mov
stc
adc
mov
mov
mov
inc
inc
stc
mov
das
fnstenv
scas
cmpsb
xchg
push
mov
mov
sbb
in
int
jge
stc
ror
ljmp
adc
push
sub
xor
pop
push
push
iret
mov
cmp
call
push
outsl
in
dec
dec
xchg
popf
add
xchg
ss
push
lahf
push
push
or
pop
mov
pop
xchg
dec
jge
orl
and
add
loopne
das
lcall
pextrw
es
pop
in
shrb
std
dec
shl
mov
lock
mov
icebp
xchg
insl
call
xlat
je
xor
sub
repnz
in
jecxz
faddl
jbe
cltd
mov
popf
arpl
pop
enter
dec
clc
lret
mov
pop
rorl
adc
dec
lcall
mov
mov
ror
sbb
or
mov
sub
sub
je
lcall
pop
mov
sbb
aas
repnz
test
sub
fbstp
mov
xor
and
inc
xor
popl
roll
es
in
sub
in
imul
cmp
add
or
pusha
xor
insl
repz
sub
push
xchg
jmp
push
movsl
cmp
xchg
lods
cmp
xchg
pop
jo
popf
movzwl
sub
das
sub
xor
mov
sbb
dec
rorl
fimuls
push
mov
gs
addl
das
pop
aam
inc
adc
aad
fmull
mov
imul
cmpsb
xchg
inc
mov
cmpsb
call
lods
shll
stos
cmp
push
jge
testb
nop
das
fstps
adc
pop
dec
lock
sub
test
adc
inc
sbbb
lcall
cld
rcr
scas
jne
xor
and
adc
leave
bnd
rcrb
xchg
mov
jecxz
adc
xor
stc
aad
mov
pop
fldenv
insl
adc
cmpsl
cmc
insb
mov
stos
cs
in
fidivrs
lock
mov
cmpsb
fwait
mov
sbb
push
ror
repnz
scas
outsl
sub
sbb
lock
jbe
mov
or
gs
xor
shll
stc
test
ja
inc
aas
ret
repnz
out
sbb
and
inc
ljmp
lods
fs
sub
sbb
xchg
sahf
jecxz
xor
test
insl
or
adc
ljmp
inc
lahf
adc
lods
scas
or
and
repz
pop
scas
scas
or
imul
xor
jle
inc
sub
das
inc
xchg
xlat
les
arpl
jae
das
bound
xchg
xor
adc
enter
std
lahf
pop
pop
das
mov
outsl
sbb
cmp
xchg
push
mov
in
dec
dec
jmp
mov
add
mov
mov
aaa
inc
ret
adcl
adc
inc
jns
jmp
jns
pop
cmc
lcall
inc
je
push
jo
push
sahf
xchg
jb
and
adc
push
sub
enter
push
leave
xor
int3
scas
push
imul
fistpl
inc
insb
cltd
add
cmp
fs
imul
push
repz
outsb
shl
enter
inc
daa
repz
jge
lahf
adc
pop
xor
pop
test
mov
and
push
pop
lock
add
mov
fdivs
jb
add
arpl
pop
cmp
lods
xchg
add
out
lods
xchg
xlat
out
push
bound
arpl
or
addb
jnp
orb
mov
fdivrl
jmp
cwtl
push
movsl
or
repz
idivb
cs
out
es
push
cmc
out
aas
js
mov
pop
lahf
mov
jo
sub
pop
stc
xor
pushf
outsb
adc
mov
es
lret
icebp
mov
in
test
gs
jg
xchg
popa
mov
or
jno
out
mov
out
push
pop
ror
bound
int
push
scas
mov
mov
ja
inc
stc
pop
cmpsl
mov
sub
mov
jnp
push
sbb
fdivs
lods
jmp
shr
adc
in
popf
loope
int3
inc
in
shll
inc
in
sahf
int
adc
inc
cmp
adc
push
push
add
inc
xchg
sbb
xor
sbb
cmpsb
sub
div
lock
inc
aaa
fst
cltd
push
shrb
sti
jae
jbe
dec
cs
or
repnz
adc
fnsave
jle
dec
lock
shl
iret
arpl
in
lea
jmp
mov
aam
mov
push
std
cmpsb
iret
test
lahf
out
imul
lret
push
mov
fisubrs
jne
mov
popf
pop
push
xor
mov
loopne
cwtl
xchg
cltd
pusha
divb
inc
mov
jmp
add
push
and
pop
mov
or
jp
mov
int
sti
mov
dec
pop
shlb
mov
jbe
jge
fldcw
dec
ret
mov
stc
jle
fcoml
add
xor
push
inc
push
ljmp
inc
and
pop
pop
xchg
adc
pop
dec
lcall
mov
popf
iret
mov
push
cs
aam
lret
cwtl
dec
mov
or
les
enter
mov
rorb
mov
mov
or
out
rcrl
or
mov
fs
in
scas
sub
dec
lods
ds
lret
adc
sub
data16
sti
ret
mov
loope
add
insb
iret
inc
sbb
fisubrl
inc
pop
mov
inc
lds
subb
push
inc
test
lds
push
scas
and
xor
mov
outsl
xlat
addr16
mov
daa
cmpsb
cmp
or
repz
or
in
push
sbb
insb
loopne
mov
lds
sbb
add
sub
pop
sub
push
dec
cltd
xchg
xchg
fs
loopne
mov
iret
movl
mov
jns
xchg
push
das
mov
js
mov
cltd
outsb
inc
mov
dec
std
mov
adc
mov
adc
loop
test
roll
mov
jae
adc
pushf
pop
push
xchg
loop
pop
andb
push
jno
in
push
push
arpl
vpaddb
sub
aam
xor
in
adc
dec
xchg
cli
jg
jmp
lahf
cwtl
sub
jo
dec
int
mov
js
repnz
addr16
mov
xchg
stos
add
lcall
imul
jno
cmp
sarl
mov
mov
push
inc
jle
xchg
ret
movsb
fdivr
jg
sub
sbb
pop
sbb
push
xor
stos
dec
outsb
mov
push
rorb
mov
divb
ret
mov
es
sarl
adc
mov
xchg
notb
aad
into
movl
mov
inc
ret
pop
or
hlt
pop
ret
fdivrs
test
jno
jp
test
jle
ss
push
adc
dec
pushf
vphaddwd
mov
aad
pop
sub
out
jmp
dec
das
dec
adc
mov
cmp
jl
les
or
jbe
sbb
sbb
fdivrl
cmp
pop
cli
xchg
push
jne
in
fstl
xor
test
out
fistpll
add
call
inc
push
jle
add
addl
adc
sbb
xchg
dec
orl
pop
add
rorl
sub
adcb
mov
shl
mov
sahf
pop
out
call
jno
xchg
roll
negl
aaa
data16
lods
push
pop
test
and
lds
mov
jge
mov
pop
mov
js
mov
data16
daa
lods
xchg
mov
ret
test
mov
inc
daa
and
push
xor
and
out
loop
aad
stos
scas
jmp
mov
ss
mov
push
sbb
test
sti
adc
push
sub
lea
jmp
jo
sub
add
lret
adcw
mov
mov
cltd
pop
fmuls
in
loopne
aas
mov
pop
xlat
or
adc
addr16
push
push
xchg
inc
cmp
add
mov
sub
sbb
push
jbe
int
mov
mov
xchg
int
pusha
pushf
sub
aam
fists
jne
aas
frstor
xchg
sbb
mov
sbb
sbb
xor
imul
inc
arpl
pusha
cltd
out
fildl
adc
and
sub
adc
out
adc
jo
addr16
icebp
ds
pop
out
shl
mov
test
mov
ret
adc
xchg
in
cmpsl
dec
in
pop
mov
adc
push
cmp
es
jb
mov
lock
ffreep
jnp
xor
push
les
addr16
add
out
pushf
cli
adc
notl
or
clc
sub
xor
pop
sbb
lds
aas
adc
cmp
jno
mov
scas
inc
dec
jne
or
push
out
mov
pop
roll
ret
ds
pop
and
daa
bound
adc
sbb
neg
xchg
daa
int3
call
sbb
imul
jbe
loope
rcll
fs
xchg
or
inc
sarl
pop
loop
aam
ja
sbb
out
mov
or
sahf
into
or
es
mov
das
adc
dec
stc
add
inc
mov
cmpsl
sti
and
pusha
push
loop
in
stc
and
inc
mov
ss
in
cmc
insb
push
mov
outsb
xchg
mov
mov
jmp
insl
fstps
out
mov
das
push
test
std
push
aaa
add
fidivl
pop
ror
jl
cmpsl
add
pop
rorb
ljmp
testl
bound
inc
sahf
lds
enter
je
inc
cmp
repz
popa
jbe
push
stos
popa
sub
test
mov
rcrb
fistpll
testb
xor
out
dec
divl
imul
mov
outsl
imul
inc
movsb
sub
roll
cmpsl
ret
push
cmp
xchg
imul
mov
xlat
in
test
cld
pop
xor
das
repz
cmpsl
add
cmp
jnp
xchg
mov
das
filds
cmp
jg
xor
stc
leave
popa
icebp
aas
out
gs
inc
and
movsl
add
es
sub
int
cmp
push
scas
je
dec
pop
sti
iret
jbe
push
int
add
imul
sbb
aas
movsb
jge
sbb
cwtl
cmc
jge
adc
cmp
cmp
pop
dec
lods
mov
or
lret
test
addr16
pop
mov
ds
aad
sbb
jbe
inc
dec
lods
incb
dec
sbb
jnp
test
sub
xchg
and
fiaddl
cmp
rorl
js
fists
push
and
adc
cmp
imul
xor
rcl
xchg
divb
inc
mov
sbb
rorb
or
dec
imul
js
cmp
cmp
cmp
rcll
mull
movsb
sarb
sbb
adc
mov
scas
icebp
fsubl
mov
xor
in
xor
frndint
fmuls
mov
pop
out
movsb
sbb
or
dec
and
jge
inc
sarl
fs
inc
xchg
push
mov
adc
ja
mov
or
mov
les
fmull
in
in
inc
lock
push
inc
sahf
jmp
xchg
dec
popa
mov
sub
inc
xor
pop
int
stos
movsb
imul
jo
ds
out
clc
mov
repnz
stos
insb
pop
cld
into
repnz
adcl
fmuls
data16
clc
dec
push
pop
bound
or
clc
test
insl
push
flds
pop
jg
cld
jno
sbb
sbb
add
incb
or
inc
jae
imul
push
mov
push
fstps
loopne
scas
cltd
test
or
mov
test
push
pop
pop
imulb
aas
ret
inc
sbb
cltd
pop
call
dec
dec
movsl
sbb
pop
sbb
hlt
pop
mov
mov
xor
int3
es
fldt
jb
cld
push
cltd
mov
sub
or
and
mov
test
pop
sahf
lods
cmp
mov
or
sbb
sbb
ds
aas
pop
call
call
daa
fnstcw
fistl
or
sub
aaa
das
jp
dec
sar
neg
inc
inc
jg
lahf
je
in
jb
sbb
lret
movsl
inc
or
in
pop
fildl
nop
mov
into
hlt
std
movsl
jmp
jo
std
out
nop
aaa
inc
sub
aad
adc
xchg
daa
rcl
cmpsb
cld
bound
push
adc
mov
sbb
push
push
arpl
movsl
insl
movsl
sti
sub
xchg
xchg
fsubrs
sub
inc
cmpl
das
imul
jge
adc
xor
fisubrl
popa
fisubrl
fcomi
lods
out
pop
ret
sub
inc
fst
cwtl
dec
fldl
lock
mov
and
pop
and
cltd
popf
les
fs
dec
popa
pop
jnp
icebp
adc
sahf
cmp
ret
push
shl
adc
jecxz
xchg
xchg
adcl
enter
sti
cli
sub
les
mov
push
add
test
jno
xor
inc
inc
lcall
xchg
cli
xchg
fisubl
jg
mov
getsec
repz
lods
fisttps
ja
cmpsl
js
fs
pop
fs
lods
mov
jmp
jae
sub
pop
aad
push
inc
adc
aam
mov
nop
dec
mov
nop
fwait
xchg
add
mov
popf
and
arpl
pop
push
stos
push
xchg
sti
ja
xorb
mov
sub
data16
push
lahf
xchg
xchg
sub
fisubrl
xchg
adc
cmc
mov
inc
sbb
and
ret
cwtl
pop
test
pop
mov
enter
aad
and
addr16
rolb
sbb
out
mov
cmp
cltd
stos
cmp
movl
or
cltd
loopne
push
sbb
adc
mov
jae
rcrl
shr
rcl
adc
outsb
call
sub
push
andl
pop
ljmp
mov
arpl
xchg
mov
aas
je
push
mov
push
repz
adc
lcall
sbb
or
add
xchg
imul
mov
sub
mov
mov
or
push
add
flds
mov
sarl
clc
add
cmp
sti
dec
test
add
cmp
cli
xchg
mov
clc
jo
mov
rorb
pop
scas
lods
pop
dec
shrb
or
cwtl
push
andl
jmp
pop
mov
shl
inc
jne
mov
aaa
test
in
xor
mov
aas
mov
pusha
push
push
sub
jge,pn
mov
push
nop
pop
push
ja
cwtl
lods
xor
addr16
lret
lcall
adc
and
scas
or
leave
jp
into
leave
clc
mov
scas
inc
add
sahf
cmpsb
xchg
hlt
out
jge
sbb
push
sbb
iret
jb
loop
jge
pop
arpl
push
lods
scas
pop
ret
pop
adc
mov
das
std
cmovno
jo
dec
xor
jmp
and
lock
cmp
sbb
dec
push
push
cli
cs
out
inc
into
aad
mov
aam
adc
jns
mov
sbb
and
gs
push
ja
mov
push
sar
dec
jecxz
out
dec
jge
xchg
imul
enter
sbb
fs
and
lods
jle
pusha
push
cmpsb
scas
aad
push
and
ss
cltd
ja
sbb
push
sbb
incl
test
into
cmp
sub
push
sub
cli
insl
mov
dec
add
sbb
fsubp
dec
insb
ret
daa
shll
nop
ljmp
mov
jne
xchg
test
lea
jo
ss
js
jg
ret
jp
js
jbe
loopne
adc
jp
fsub
xor
rep
push
je
ljmp
leave
fisubrl
lret
push
adc
jecxz
in
stos
sub
dec
mov
mov
cmp
jmp
sbb
fst
xor
test
hlt
push
pop
cwtl
mov
push
jnp
testl
cmpsb
xchg
mov
adc
movsb
ret
scas
xchg
sub
fildl
cmp
std
sbb
xor
sbb
or
mov
insl
out
in
in
pop
fucomp
and
insb
pop
pop
adc
imul
push
jmp
mov
arpl
pop
sbb
mov
cwtl
jb
imul
outsb
in
and
in
mov
repz
cmpsl
rcl
xor
psubsb
lods
cmpsl
mov
sub
enter
adc
aas
fwait
cwtl
hlt
dec
addb
dec
dec
cltd
pop
mov
jmp
xorb
xchg
cld
dec
push
jg
pop
xchg
add
into
in
cmp
sahf
jg
test
hlt
sbb
xchg
jge
bound
mov
ret
in
outsb
and
popa
inc
and
bound
sub
ljmp
lods
iret
xor
insb
lcall
mov
and
test
subb
stos
xor
xor
daa
inc
xchg
out
jo
test
add
mov
lds
mov
rclb
out
sbb
cld
jbe
iret
mov
sbb
loopne
jbe
inc
loopne
push
iret
test
shrb
xor
adc
pop
dec
dec
jae
lret
imul
aas
dec
push
outsb
xorb
dec
push
sbb
loop
and
test
jne
cmp
push
cli
es
mov
iret
inc
pop
test
inc
repnz
mov
test
xchg
fwait
pop
imul
pop
mov
mov
cld
and
ds
mov
int3
cmp
push
enter
xchg
mov
lods
adc
pusha
cmp
jns
notl
push
insb
and
data16
loop
jmp
xchg
sarl
dec
fildl
push
cmpl
shll
jg
sub
mov
or
jp
cmpsl
lahf
add
add
cmp
sbb
fwait
out
testb
adc
pop
loopne
loope
add
addb
scas
xor
sbb
add
mov
sahf
out
push
repz
fiaddl
mov
dec
lods
movsb
shl
cmp
in
jl
mov
hlt
pop
sub
pop
insb
and
arpl
mov
add
inc
pop
cmpsb
jbe
adc
mov
mov
out
xor
stc
das
pop
dec
push
or
sub
sbb
scas
fdivs
andl
leave
lds
sub
xchg
sbbl
jae
outsl
cmp
je
push
and
sbb
ror
cmc
fwait
mov
das
push
shlb
push
pop
stos
mov
repnz
push
aad
xchg
jp
fldcw
rorl
das
shr
aaa
aaa
aaa
mov
inc
xor
mov
inc
gs
or
pop
movsb
add
push
popf
repnz
jne
mov
jmp
cli
orl
addl
sbb
fsubs
movsl
fistps
les
or
cmp
stos
pop
push
push
in
push
or
popa
pop
mov
cli
and
lds
jle
pop
iret
push
jmp
stos
push
xchg
add
mov
add
test
das
mov
mov
mulb
pop
adc
mov
cs
cltd
clc
std
sub
rcrl
inc
subl
out
sub
pop
iret
push
xchg
lret
in
out
push
fnstsw
mov
test
mov
bound
push
ljmp
inc
pop
add
nop
jle
fwait
imul
jb
pop
fisubrs
cmpsb
xchg
mov
rorl
xchg
dec
lods
dec
cmp
pop
out
mov
xor
sub
or
cmp
pop
cmpb
cmp
dec
mov
mov
aam
enterw
out
fsts
sub
cmovae
test
nop
rdpmc
sbb
add
jmp
iret
sbb
in
inc
sbb
ja
ds
cmp
es
mov
call
aas
push
mov
leave
mov
push
xlat
cmp
push
call
adc
sti
out
jb
daa
sahf
push
jbe
push
dec
xchg
fidivrs
popl
out
mulb
and
pop
shrl
or
jb
or
insl
call
cld
rorl
push
add
mov
idivl
ret
or
jo
imul
push
xor
mov
add
lcall
sbb
pop
ds
mov
jecxz
in
cmpsb
add
pusha
lods
fistl
scas
pop
pop
ja
push
mov
mov
adc
pusha
in
ret
cmpsb
sbb
lea
or
sub
add
mov
into
xchg
pop
ljmp
in
pop
mov
sbb
cs
adcb
loop
imul
jae
lcall
xor
push
add
arpl
mull
repz
loope
mov
jmp
dec
cwtl
clc
or
xlat
push
adc
in
cmpsb
jp
ljmp
inc
push
cmp
shlb
adc
and
fidivl
aas
inc
and
neg
je
sub
ljmp
or
jo
push
xchg
sub
xor
popf
insl
mov
dec
cmp
inc
test
out
call
mov
adc
inc
mov
popf
dec
and
jge
mov
cmp
rcl
out
and
xchg
cmpsb
add
push
lock
and
fwait
pop
test
cmpl
or
mov
adc
add
sbb
add
roll
fldl
mov
and
sbb
or
cmpsl
in
sbb
xor
inc
ja
pop
or
add
fs
push
aaa
test
jo
xor
xor
pop
in
dec
add
push
rcl
pop
xor
cmp
arpl
dec
inc
sub
mov
in
andb
mov
pop
push
push
xchg
repz
test
sti
cs
push
lods
lsl
cli
dec
pushl
pop
mov
xor
movsl
adc
mov
out
sbb
aaa
mov
inc
ljmp
xchg
mov
mov
push
and
push
mov
pushf
mov
out
testl
adc
dec
mov
or
pop
fldl
dec
pop
jbe
mov
cmc
pushf
push
loopne
popf
lods
scas
push
push
mov
mov
popf
pop
pop
cmc
jl
fisttpll
loope
pop
sub
pushf
jmp
mov
pop
sti
sbbb
pop
cmc
jo
mov
scas
outsb
cmpsl
mov
xor
sarb
loopne
test
sbb
hlt
sti
mov
jno
inc
or
or
pop
lcall
outsl
mov
lock
dec
pop
lret
adc
enter
js
cmp
add
push
std
nop
xor
lret
xchg
test
and
call
xchg
loope
enter
lea
push
insl
stos
insl
and
fs
jmp
stos
jmp
adc
stos
and
movb
jb
popf
mov
dec
and
stos
addr16
dec
dec
test
jl
cs
orl
xchg
sahf
inc
jecxz
jns
decb
into
fstp
sahf
sub
das
sbb
lret
mov
orb
popf
loope
sub
clc
xlat
dec
mov
or
movsb
xchg
inc
adc
add
data16
in
dec
mov
fidivl
shrb
xchg
and
andl
mov
inc
push
ja
scas
adc
pusha
loope
sbb
aad
aaa
mov
js
xchg
ja
xlat
mov
gs
fimull
push
lds
inc
aaa
imul
jg
cmp
pushf
lret
lret
loopne
lds
fadds
les
inc
cmp
shll
dec
iret
dec
jae
fldl
ror
jp
ja
fwait
xchg
mov
mov
push
xlat
test
inc
fcomps
xchg
jae
mov
xor
pop
add
mov
jp
mov
popa
sbb
push
vmovq
or
loopne
inc
dec
cwtl
es
orl
lods
ljmp
ja
sub
adc
loop
dec
mov
pop
xchg
rep
adc
and
mov
pop
sbb
jo
je
push
pop
enter
out
fwait
xchg
into
lods
inc
insl
push
push
lods
test
data16
inc
cmp
icebp
mov
ja
gs
cmp
int3
pop
shr
mov
push
sbb
out
push
jno
inc
inc
mov
pop
lds
add
loope
sub
jecxz,pt
movsl
scas
out
notb
enter
shll
movb
xorl
cltd
pop
das
into
ret
shrl
jp
xor
int
or
mov
mov
fcoml
sub
mul
shlb
int
sbb
xchg
mov
sbb
dec
mov
and
jae
inc
repz
xchg
mov
std
ja
xor
push
pop
sub
bound
scas
push
mov
inc
mov
daa
hlt
ljmp
cltd
fsubrs
xorb
pop
inc
sarl
clc
xchg
xor
adc
sub
jbe
cmpsl
fs
shll
xchg
inc
js
sbb
out
repnz
adc
out
ljmp
inc
aaa
push
pop
xor
fs
push
xchg
scas
into
mov
das
cmp
movl
jp
add
sbb
cmp
addr16
jno
or
sbb
sub
inc
or
pusha
call
bound
inc
jp
pop
adc
imul
lcall
xor
xchg
repnz
or
push
jg
dec
add
xchg
sarb
mov
sbb
jecxz
jecxz
fcompl
cmpsb
pop
sahf
gs
cmp
jo
push
cmp
xchg
dec
cmp
fildll
lods
cmpsb
mov
or
dec
cld
scas
mov
pop
pop
sbb
rolb
ret
fwait
stc
addr16
mov
hlt
xor
xorw
test
gs
push
pusha
rcrb
enter
pop
ljmp
rcrl
ds
lock
arpl
mov
sti
stos
insb
jne
xchg
push
pushl
cs
dec
dec
lods
faddl
bswap
stc
fs
push
dec
cwtl
adc
popl
add
outsb
jo
sub
sti
mov
adc
aam
dec
movsb
dec
mov
adcb
rclb
out
push
cmpsb
push
mov
pop
mov
mov
pop
hlt
subl
mov
jbe
mov
ds
mov
inc
sarl
movsb
movd
sbb
jb
out
xchg
into
mov
enter
fxch
pop
lods
divb
jp
in
inc
in
nop
fadds
aas
mov
xor
inc
insl
dec
int
fucomip
add
int
and
pop
iret
mov
imull
sbb
jle
sbb
cmpsb
dec
imul
pop
lret
gs
adc
bound
add
aaa
cs
stos
xchg
pusha
mov
or
jecxz
popf
rcrb
pop
jne
popa
fildl
dec
and
and
das
cmp
add
xor
xor
bnd
xchg
xchg
jns
fmuls
cmp
mov
gs
xor
iret
and
in
jg
nop
sbb
or
popf
add
or
xchg
inc
cmp
imul
ds
and
dec
mov
pop
jo
mov
cltd
inc
into
mov
test
mov
pop
xor
js
xlat
push
repnz
mov
ficoms
push
inc
push
push
push
stos
xor
shlb
pop
xchg
ljmp
mov
pushf
sbb
loope
sbb
mov
push
dec
scas
outsb
or
mov
push
mov
adc
jbe
and
int3
push
mov
push
jg
scas
inc
xor
add
sub
push
fstps
scas
mov
enter
out
hlt
in
add
mov
mov
sbb
or
outsl
stos
das
insb
nop
les
insb
add
lock
insl
frstor
in
push
mov
xchg
or
adc
and
xor
out
stc
mov
mov
mov
scas
dec
int3
je
mov
outsl
jns
jne
mov
cld
push
sub
loopne
jge
push
call
loope
shlb
enter
push
inc
mov
shrb
sub
xor
cmp
push
pop
or
insl
and
dec
mov
lds
mov
sbb
cmp
out
outsl
mov
push
mov
and
je
dec
test
repnz
push
xchg
jno
and
dec
cmp
add
pop
inc
or
pop
clc
pop
dec
in
lahf
call
fidivl
push
jb
cmpsl
lock
push
pop
fisubs
test
lds
add
mov
xchg
mov
sbb
dec
adc
pop
out
push
popa
push
out
xor
ljmp
fnstcw
dec
mov
xor
dec
mov
roll
mov
stc
stos
fcmovnbe
mov
iret
jnp
or
cmpsb
or
imul
jne
stc
jp
in
popf
mov
fbld
lock
out
jns
cmp
mov
shlb
xor
jb
ds
mov
repz
movsb
popa
sbb
mov
mov
fcmovu
jl
inc
cli
adcl
jnp
xchg
mov
stc
pop
jnp
or
movb
lcall
sub
iret
bound
adcb
jbe
xor
add
shr
sub
rcr
xchg
ss
sub
cmc
inc
cwtl
jle
push
or
mov
packuswb
rcll
fldl
rcrb
rolb
testl
dec
inc
mov
outsb
jae
stos
pop
leave
lret
fsubs
sub
jns
cli
ret
jb
or
insb
sbb
dec
xchg
lret
pop
mov
mov
mov
scas
xchg
mov
mov
pop
mov
enter
std
repz
or
adc
dec
sbb
loop
cmpsb
xchg
test
pop
mov
popa
mov
mov
lods
je
sub
or
xor
repz
adc
add
jle
fcoml
cmpsb
push
sub
insl
out
inc
fmul
scas
xlat
cmp
test
adc
out
decl
mov
test
movsb
int
mov
jmp
aam
jae
push
inc
test
and
inc
or
addb
loop
iret
sbb
inc
jecxz
leave
loope
dec
push
pop
sub
mov
icebp
fucomp
push
dec
pop
cmp
aaa
push
std
xor
adc
jl
or
xchg
cmc
lret
fisubs
sub
sbb
or
pushf
add
mov
mov
aam
fldenv
lahf
mov
dec
push
push
jnp
or
lret
sub
icebp
mov
adc
cmp
xor
push
fbld
cmp
dec
mov
and
sbb
imul
xor
push
jl
jmp
cmp
xor
sti
pop
push
xchg
adc
or
mov
mov
mov
cmpsl
out
std
aaa
dec
dec
ror
mov
cmp
mov
cmpsl
out
iret
inc
sbbl
adc
mov
sahf
loop
xorb
xor
lock
mov
bound
lret
fidivrs
dec
push
xchg
pop
test
test
inc
jp
mov
pop
icebp
ljmp
add
or
or
mov
into
movl
in
mov
jb
dec
enter
dec
pop
inc
and
mov
fs
adc
loop
pop
inc
adc
xchg
in
stos
inc
int3
inc
data16
fidivrl
mov
fmul
lahf
mov
sarb
mov
mov
xor
rcrl
mov
lea
repnz
loopne
cmc
mov
mov
in
push
data16
iret
in
push
mov
mov
cmc
addr16
add
pop
aas
inc
sbb
ret
pop
mov
subb
bound
imul
repz
jbe
add
cmpsb
neg
leave
dec
cld
cmpsb
jb
push
out
mov
stos
sti
test
adc
pushf
sahf
push
adc
sub
test
dec
add
out
cmc
push
sbb
xor
js
jg
xor
hlt
adc
xor
xorl
je
xor
add
scas
cltd
bound
pop
outsl
int3
inc
call
aaa
push
mov
rorb
fcomps
lahf
sbb
xchg
and
outsb
icebp
pop
jno
xor
sub
sarl
pop
adc
push
fbld
xor
jecxz
repz
loop
stos
mov
out
outsl
fisubrs
movsl
mov
call
stos
stc
jo
xchg
push
out
xor
fbstp
mov
cmp
pop
push
cld
je
mov
inc
sbb
pop
out
int3
movsl
repnz
xchg
xchg
mov
popf
std
sub
mov
jl
iret
enter
jbe
sbb
mov
aas
int
inc
test
out
mov
sub
jae
sbb
xor
lea
push
add
inc
dec
inc
pop
push
in
inc
lods
test
into
add
test
xor
adc
bound
mov
bound
ret
lds
scas
mov
lods
hlt
fiadds
and
cmc
rcll
test
mov
sarl
cltd
into
add
das
es
inc
ss
jg
sti
ja
add
aam
mov
add
aas
sub
jo
movsl
out
sbb
movsl
and
imulb
out
push
xchg
movsb
sahf
addr16
scas
leave
out
inc
imulb
jb
cs
mov
out
push
sahf
loopne
jecxz
push
mov
push
push
js
jo
xchg
aam
sub
ja
dec
sub
dec
jno
sub
jge
arpl
test
fs
cmpsb
push
dec
sbb
lods
sti
call
inc
out
xlat
aad
fisubrl
adc
mov
jle
in
sbb
push
adc
dec
imull
test
sub
jae
add
aaa
adc
ljmp
add
out
sub
aaa
in
cwtl
stc
sahf
movsb
divl
add
push
or
lret
pop
inc
fisttpll
or
pop
or
xor
push
outsl
sbb
mov
out
ja
ljmp
push
test
sbb
sarb
icebp
inc
mov
int3
xchg
das
fldenv
sti
add
test
push
fldt
jbe
test
mov
pop
repz
pop
xlat
inc
sub
xor
push
xor
jge
cmc
lods
fwait
aad
out
sbb
pop
push
pop
jp
cwtl
lods
popa
mov
in
repnz
neg
into
dec
pop
lods
add
or
or
in
into
imul
pop
je
mov
mov
adc
out
sub
sub
cmpsb
add
pop
add
je
jmp
insb
adc
dec
sti
fisubrs
cmp
and
push
shlb
pop
push
cmpsl
pop
rcrb
addl
pusha
xchg
leave
mov
push
lock
mov
xor
push
popa
xchg
mov
test
sub
das
push
push
and
lret
mov
repnz
jmp
in
and
jbe
das
jo
and
jge
adc
sub
pop
sub
icebp
outsl
sub
sbb
lcall
ficoml
cli
insb
loopne
inc
inc
sar
int3
xor
icebp
in
bound
sbb
fldt
cmp
hlt
mov
je
lret
mov
sti
push
ljmp
scas
xor
iret
arpl
in
or
mov
and
mov
or
scas
jae
pop
mov
mov
test
divl
sbb
cmp
addl
je
dec
imul
xorb
inc
lea
insl
adc
sbb
mov
mov
hlt
mov
dec
inc
int
mov
aad
sub
inc
pop
and
loopne
cmpl
sbb
inc
lods
mov
and
or
and
cmpsl
push
or
jl
mov
inc
pop
in
fwait
outsb
xor
das
nop
xchg
rcl
mov
cmp
jmp
dec
insb
add
and
jmp
testl
inc
mov
dec
jecxz
aaa
lods
sahf
out
inc
xchg
jns
xor
loope
cmp
push
je
push
insb
or
inc
or
dec
add
jbe
mov
pop
pop
mov
inc
iret
loope
inc
or
jbe
sahf
sub
mov
mov
stc
pop
lea
int3
xor
jp
into
xchg
pop
mov
jecxz
inc
loope
sub
push
sbb
push
out
push
cmp
ljmp
push
pop
nop
cli
shl
cmp
fsubl
nop
fbld
ljmp
inc
ja
shlb
mov
stos
pop
sub
mov
test
inc
xorb
pop
pop
pop
inc
dec
out
pop
jge
push
add
sbb
cmpsl
xchg
pop
aas
pop
mov
jno
leave
push
repnz
inc
jae
sbb
out
pop
sarb
adc
stc
daa
pop
ds
pop
arpl
ljmp
int3
inc
stos
data16
mov
icebp
adc
inc
jnp
inc
imul
movsl
pop
mov
and
ljmp
mov
ss
add
ss
das
sub
mov
or
data16
push
sbb
daa
icebp
mov
or
push
jno
sub
lds
sbb
repnz
mov
out
int
sti
jae
inc
mov
int3
mov
sbbl
stc
fiadds
pop
test
insb
out
pop
es
hlt
mov
lods
sahf
mov
mov
lahf
add
ds
mov
daa
mov
cli
dec
sub
leave
pop
add
jb
add
mov
popf
and
out
cmp
and
adc
or
push
xchg
mov
jae
jnp
jl
push
or
mov
mov
enter
fidivl
xchg
push
mov
pop
adc
pop
mov
js
dec
pop
pop
dec
cmpsl
cmp
in
add
push
mov
fs
leave
jmp
int3
or
leave
out
add
rorl
fs
sub
and
iret
pushf
inc
push
popf
jecxz
mov
iret
repz
xchg
mov
sbb
outsb
rcrl
inc
fldt
lahf
sbb
push
xchg
add
jno
push
ljmp
mov
fldcw
or
roll
test
inc
out
jno
nop
mov
push
dec
ds
pop
bound
dec
mov
push
test
hlt
xor
stc
xor
lds
arpl
sbb
std
jg
dec
adc
arpl
insl
ja
les
scas
pop
mov
xchg
fwait
pop
adcl
push
repz
lods
cmp
insl
lds
adc
lahf
pop
pop
pop
jp
in
pop
sbb
and
fnstcw
pop
lods
add
fld
inc
mov
ss
sub
push
arpl
sahf
test
jns
das
scas
xorl
in
mov
mov
add
pop
repz
lods
out
mov
mov
ror
sahf
pop
xor
mov
xor
sub
int
shl
andl
mov
aad
mov
pop
aas
cli
idivb
mulb
cmp
jb
fdivs
mov
push
fcomps
adc
lods
sbb
xor
add
jb
ds
lods
mov
xor
and
and
sub
movsl
xchg
add
push
int3
sbb
jmp
rorb
scas
and
jae
xor
mov
and
jle
sbb
xchg
mov
in
sub
out
test
push
xchg
lea
ret
push
adc
std
mov
or
sbb
rcll
sbb
sti
jmp
scas
dec
scas
out
testl
jae
sub
arpl
mov
data16
jge
cmp
pop
leave
lods
cmp
stos
sbb
or
rcr
addr16
sub
lahf
pop
sub
mov
test
fwait
inc
stos
xchg
ffreep
adc
xchg
cmp
adc
in
loop
fsincos
mov
popa
add
int3
leave
cmp
jns
lret
les
and
outsb
jno
test
xlat
scas
jae
in
arpl
pusha
lods
shlb
sahf
setge
js
stc
cs
and
cmp
lea
nop
cmp
jbe
mov
sub
mov
mov
jge
cmp
out
pusha
shlb
mov
flds
mov
mov
xchg
jle
ja
fwait
cld
pop
cmp
mov
filds
sbb
push
scas
shrb
sbb
call
xchg
jg
into
daa
and
mov
sub
ud1
jge
and
lahf
jmp
or
mov
popa
leave
sbb
lahf
mov
popa
lds
jecxz
inc
loopne
sub
in
mov
out
movsb
dec
and
inc
daa
sub
xchg
or
xchg
out
push
sbb
mov
into
std
fs
and
ja
in
lock
das
movb
jno
mov
dec
mov
sarl
lock
movsb
push
stos
and
add
jmp
jmp
clc
jge
int3
je
xor
insb
shrl
inc
dec
enter
imul
mov
inc
icebp
or
sbb
push
add
mov
es
bts
cmp
adc
xchg
sbbb
jb
sbb
jg
stos
lcall
sbb
or
push
mov
pop
addb
fistps
sbb
mov
xchg
inc
jmp
add
push
fcompl
cmp
hlt
or
lcall
sub
mov
jl
push
cmp
nop
stc
arpl
sbb
add
adc
loope
sub
orl
leave
sub
stc
ss
pop
dec
cmpsb
stos
mov
mov
fcmovb
push
loopne
lcall
in
mov
pop
pop
push
jae
fwait
sbb
ja
bound
gs
lahf
inc
fiadds
push
in
xor
out
pop
dec
test
je
mov
or
out
test
stos
nop
js
push
jns
sub
jle
jne
leave
adc
int3
imul
insb
mov
scas
pcmpgtd
fcomps
and
pop
push
mov
sahf
push
xor
pop
sub
inc
mov
sbb
int3
pop
mov
push
mov
add
daa
cld
add
push
adc
xlat
mov
push
rorb
add
push
insb
leave
in
cmpsl
adc
ror
mov
rorl
mov
cmp
mov
push
pop
xor
cld
mov
popa
shlb
imul
sbb
jp
xchg
es
jnp
addr16
and
ja
inc
loop
add
andl
mov
int3
in
pop
cli
xchg
jecxz
adc
dec
xchg
push
pop
sub
lcall
jl
mov
pop
cs
cmp
icebp
pop
mov
popf
xchg
movsl
cld
add
add
dec
adc
roll
dec
insb
inc
jecxz
mov
out
xchg
shrl
inc
mov
mov
push
xor
insb
jecxz
repz
pop
cmp
or
neg
cmp
sub
stc
lcall
insb
push
dec
or
xchg
cmpsl
lds
inc
repnz
push
mov
mulb
outsl
cwtl
cmc
aaa
jb
pushf
xor
xchg
icebp
out
loop
and
loope
je
dec
and
imul
jb
lock
adc
dec
daa
pop
sbb
cmp
mov
cmc
jmp
insb
ret
sub
popf
in
lcall
dec
push
jge
sub
pop
pusha
xchg
mov
rcpps
and
and
mov
and
sbb
mov
cmc
adc
popf
scas
mov
cmp
pop
hlt
or
xchg
lods
mov
cs
xchg
shll
mov
add
cmp
xchg
jge
inc
clc
sub
hlt
test
jle
mov
ffree
lods
jb
mov
mov
imul
dec
imul
retw
pop
xor
add
jp
sbb
mov
jecxz
ret
mov
aaa
xor
jmp
insl
into
in
nop
mov
ror
test
push
jl
adc
mov
and
pop
push
fcmovbe
cmp
loop
lret
fstps
sub
cmp
sbb
les
movsb
and
repnz
cmp
inc
movsl
icebp
mov
sub
add
enter
adc
movsb
sub
and
out
rcrl
xor
sbb
cmp
inc
and
outsl
sbb
imul
pop
popa
sub
xchg
icebp
add
xchg
testl
test
mov
xchg
mov
repnz
cmp
lcall
mov
rclb
sub
jg
lcall
cs
or
or
jns
xor
fsts
icebp
sbb
dec
loope
cmp
xchg
mov
aas
xor
jae
cmc
movsb
mov
jb
scas
sti
in
test
je
cmp
insl
xchg
subb
inc
or
pop
cmc
cltd
mov
test
enter
fsts
cmp
and
add
stc
jne
mov
adc
fists
es
mov
out
jl
push
fchs
push
out
arpl
int3
pop
and
decl
aaa
sbb
cmp
les
ja
and
mov
and
enter
hlt
and
and
adc
pop
xor
fistl
rcll
jnp
stos
sub
lds
pop
inc
fmull
dec
aam
nop
cmpsb
rorl
dec
in
lock
mov
int
inc
push
arpl
shl
mov
xchg
cltd
popa
push
cmpsl
outsb
test
popl
adc
sub
jmp
xchg
shll
cmc
xor
mov
clc
cmp
out
push
enter
and
inc
pop
mov
inc
xchg
cmp
pop
mov
xchg
test
jb
jo
xchg
jno
xlat
sub
jne
in
mov
mov
lcall
repz
lret
xchg
outsb
fsubl
mov
aas
faddl
and
add
jmp
aas
cld
dec
fldt
mov
hlt
ret
mov
and
inc
insb
mov
xor
ljmp
push
pushf
int3
inc
fsts
adc
popf
mov
enter
lds
aad
leave
pushl
fsubrp
adc
aaa
negl
mov
xchg
jns
mov
jb
repnz
hlt
and
lahf
adc
mov
js
movsb
pop
cmp
inc
jge
sub
lahf
cld
bound
pop
in
ss
and
test
insb
push
xor
pop
out
xchg
inc
mul
lock
inc
sbb
cmp
add
cmp
mov
lret
fwait
sub
pop
pop
xor
cmp
xor
add
mov
test
pusha
aaa
mov
cwtl
iret
shlb
mov
mov
pop
adc
sub
mov
test
je
mov
jp
mov
sub
repnz
xchg
out
inc
fdivp
cmp
push
push
ds
js
sub
mov
push
pop
push
and
inc
add
mov
adc
pushf
dec
and
and
mov
jl
sahf
xchg
or
or
ljmp
mov
sahf
insw
mov
cmp
outsb
sub
jne
jne
xor
cwtl
ja
fs
cmp
mov
dec
xor
outsb
popa
xor
pop
nop
bound
jecxz
xchg
pop
pop
xchg
data16
roll
push
test
lds
jmp
std
pop
aam
push
dec
inc
pop
and
sbb
jmp
mov
mov
push
mov
push
fsubl
ficoms
sbb
mov
icebp
sub
mov
lods
push
xchg
nop
test
cmpsb
adc
jmp
jg
and
adc
pop
adc
mov
xchg
cmpsl
mov
adc
movsb
or
cltd
js
cli
xor
adc
ds
mov
xorl
popa
add
test
ret
sub
ss
cwtl
add
aam
xchg
mov
jmp
xor
jbe
into
sub
push
mov
xor
xor
je
insl
sbb
popa
mov
push
sbb
call
xor
out
inc
out
add
lods
mov
das
add
addb
and
mov
cwtl
adc
xchg
add
sub
cld
push
inc
jnp
mov
cmpsl
pop
jo
xor
sbb
mov
xchg
mov
repz
sub
faddl
repz
test
fildll
sbb
cmp
dec
mov
or
gs
lcall
sub
push
stos
fsts
pop
dec
inc
clc
mov
xor
fsubrl
aaa
or
jns
movsb
sub
adc
mov
pop
and
mov
add
call
das
xchg
inc
cmp
fisttpll
jnp
mov
dec
jns
add
cmp
sub
ja
andl
mov
mov
mov
rcll
lods
mov
je
push
mov
mov
pop
cmp
pop
mov
mov
es
inc
adc
push
add
inc
jl
jmp
inc
push
outsl
icebp
dec
xchg
insl
jmp
out
mov
dec
xchg
push
add
push
sahf
shl
dec
ret
push
jnp
adc
int
inc
mov
faddl
sbb
or
xchg
jne
fadd
fcompl
repnz
pop
test
js
xlat
push
push
dec
jne
clc
ret
pop
insl
test
scas
icebp
sbb
xchg
push
mov
in
hlt
scas
xor
inc
jno
cmp
and
ret
mov
push
cli
inc
dec
xchg
aaa
adc
dec
push
aas
nop
lods
mov
push
or
or
lock
clc
inc
fildll
fidivs
faddl
push
fildl
jge
rclb
xbegin
movsl
int
ja
sbb
mov
je
dec
sbb
adc
lds
and
jo
push
add
mov
lods
rcr
rorl
cmc
mov
out
mov
and
ret
push
xchg
sub
inc
lcall
cmp
lea
mov
cmpsb
dec
inc
sub
dec
lods
outsl
cltd
and
mov
lock
jns
inc
stc
pop
jmp
push
and
int
dec
sbb
adc
shl
cli
gs
fidivl
or
jp
pop
ret
mov
ss
cltd
shlb
and
pop
scas
fadds
filds
dec
scas
lret
ret
mov
mov
enter
adc
loopne
mov
adc
nop
fwait
lea
leave
jecxz
xor
xchg
xchg
cmp
scas
jo
inc
jns
sbb
mov
stos
push
jbe
pop
mov
dec
mov
ret
jmp
xor
and
xor
or
jmp
mov
or
into
dec
pop
ljmp
pushf
cmp
in
xchg
adc
mov
adc
pop
lcall
stc
loopne
xor
les
enter
xchg
jmp
ror
insb
xchg
dec
lret
ds
cmp
push
fldcw
dec
fsubrs
xor
arpl
cmpsl
xlat
lret
sub
aad
pop
fcomip
je
andl
jne
pusha
int
outsl
add
fistl
dec
push
frstor
dec
lea
ljmp
push
into
mov
mov
arpl
movsl
push
negb
mov
pushf
xor
mov
cwtl
int3
int3
outsl
adc
ficoml
cltd
popf
gs
mov
pop
ret
call
nop
pop
or
sbb
sbb
divb
cmc
mov
sti
and
fwait
movsl
das
adc
add
cs
fidivl
insb
mov
int
jnp
mov
mov
xchg
in
or
sub
push
adc
push
popa
and
xchg
outsl
push
mov
stos
jmp
mov
fs
aaa
mov
push
int
pop
clc
cmp
mov
pop
pavgb
mov
xchg
call
fiaddl
or
imul
jno
and
mov
dec
push
pop
test
xchg
jne
out
and
notb
sbb
jle
lods
mov
imul
fcompl
movsl
mov
sub
sbb
and
syscall
cmpb
shll
ret
and
jp
in
mov
jg
dec
adc
in
push
sub
pop
scas
xor
push
mov
mov
cs
and
sbb
icebp
jb
xchg
in
mov
mov
mov
pop
out
fstps
cwtl
insl
sbb
shr
cmp
sub
jg
pop
bnd
sub
mov
xor
fisubrs
iret
pop
repz
and
mov
jae
cmp
pop
into
dec
sub
xchg
lret
sub
pusha
scas
jge
ret
add
push
sub
sbbl
sub
loopne
lock
mov
into
push
or
in
loope
mul
stos
inc
in
adc
test
or
pop
daa
aas
adcl
cmpsl
or
cli
xor
xor
inc
and
push
inc
scas
into
mov
fcomps
jne
sbb
jg
adc
mov
dec
xlat
movsb
nop
stos
js
mov
cmc
enter
imul
inc
es
lods
fiadds
pushf
rol
adc
fisubrs
inc
cs
mov
xchg
inc
mov
lods
mov
xchg
stc
pop
outsb
inc
mov
rorb
xchg
jbe
js
sub
cmpsl
test
add
data16
inc
or
mov
dec
mov
push
mov
dec
test
mov
testb
jae
mov
jbe
out
xchg
out
imul
sub
test
addr16
push
xor
mov
shrl
mov
sbb
jae
hlt
fs
mov
jg
cli
dec
rolb
mov
pop
jg
and
adcl
push
xor
idivl
cmc
add
and
xor
hlt
and
out
sub
movl
jecxz
stos
hlt
cmp
xlat
fs
mov
add
stc
adc
mov
hlt
and
push
ljmp
add
into
adc
cmp
sbb
inc
xchg
rclb
pop
mov
scas
push
fidivrs
shl
mov
mov
mov
mov
dec
neg
aaa
pop
sub
cmpsb
push
stos
adc
cli
or
adc
hlt
cmp
add
fisubl
adc
ret
lods
and
es
mov
mov
movsb
xchg
stos
or
inc
aaa
fsubrs
mov
lcall
enter
incb
sbb
and
cmp
push
adc
or
pop
sub
and
fwait
add
fs
or
fists
in
mov
scas
fidivrl
push
and
add
dec
xchg
xor
clc
jne
hlt
dec
cli
rolb
xchg
push
and
xchg
adc
mov
ret
popa
inc
insl
cmp
test
fldt
fldcw
out
mov
mov
rolb
cmpsb
cmp
jbe
sub
jns
cmc
lock
or
dec
dec
sub
fsubrs
pusha
stos
push
or
data16
fistl
bound
loop
lcall
jg
jg
jne
add
mov
leave
xlat
mov
xor
shlb
mov
sarb
mov
push
pop
jnp
mov
jl
xchg
xor
push
pop
push
pop
mov
in
mov
mov
bound
call
push
daa
rclb
inc
push
inc
sub
stos
jle
repz
cmp
cs
cld
cmpl
jmp
cmp
fcom
leave
mov
mov
notl
loopne
fcmovb
push
mov
xchg
into
outsl
xchg
int3
loope
imul
incb
shlb
mov
mov
xor
ret
clc
test
add
dec
xchg
jo
stos
mov
mov
sarl
fldenv
insb
in
adc
ret
sbb
out
xchg
sub
pop
dec
push
jnp
mov
push
jle
inc
bound
mov
mov
add
pushf
sub
idivl
and
fdivp
sarl
xchg
xchg
movsb
jge
xchg
inc
adc
ret
xchg
mov
cmp
data16
sub
loopne
inc
push
sahf
daa
je
ret
fsubl
fnstcw
jae
mov
lahf
inc
nop
mov
popa
test
lahf
sbb
or
jae
xor
inc
out
scas
and
push
push
and
xorl
mov
mov
jae
cmp
jo
push
xor
mov
mov
sub
inc
cmp
jge
inc
ret
adc
es
adc
dec
lods
ret
fs
testb
xchg
xchg
icebp
or
or
inc
sbb
aaa
das
pop
jmp
adc
jle
pop
jne
fcoml
mov
inc
inc
fists
push
pop
insb
push
cmp
dec
cmp
cmp
add
sbb
nop
xor
xchg
mov
outsl
push
movhps
xor
scas
lcall
jae
hlt
add
fisttpll
add
scas
lret
inc
or
scas
push
add
jmp
inc
stos
test
or
cmp
sbb
and
and
rclb
push
nop
dec
mov
mov
loope
push
xor
sub
roll
outsl
xor
shlb
cmpsb
vpshlb
jl
xchg
push
jbe
in
push
movl
sub
or
and
repz
clc
lea
rorl
mov
sbb
cmp
jg
scas
xchg
sar
cli
cwtl
sahf
mov
jl
adc
loope
call
popa
xor
mov
adc
sub
hlt
pop
dec
push
and
in
mov
sti
jbe
std
scas
ss
xor
inc
add
testl
nop
push
mov
sub
movsl
sti
pop
push
test
push
daa
nop
lret
adc
pushf
iret
pop
add
test
sbb
or
test
xor
or
repnz
out
dec
jle,pt
inc
into
sbb
inc
movb
push
aaa
add
jno
int3
stos
push
in
ja
jg
inc
es
fldt
xor
movsb
lds
cli
orl
adc
add
mov
dec
nop
loopne
sbb
mov
sbb
inc
lcall
ret
decl
xor
stos
adc
lods
sbb
jge
aas
mov
mov
cmp
xchg
sahf
sbb
out
aas
jmp
mov
sub
mov
cmc
sub
shrb
mov
cs
adc
outsl
push
xor
and
cli
lahf
ss
bound
shrb
in
ret
rcrb
ljmp
stc
cmp
pop
adc
push
imulb
and
cmp
sub
les
sahf
sub
pop
dec
push
xlat
push
scas
shll
jecxz
xchg
clc
fsts
stc
stos
rcrl
sub
repz
push
dec
ljmp
aad
sbb
mov
aad
lods
mov
fistps
and
rol
out
push
sub
pusha
dec
push
pop
shlb
pop
hlt
out
and
mov
mov
xchg
xor
pop
mov
push
jmp
xlat
out
xlat
vaddsd
and
xchg
les
push
mov
push
mov
mov
sbb
test
movsl
repz
jbe
and
and
push
push
dec
mov
mov
push
dec
das
fisubs
shlb
stos
dec
sar
pop
sub
mov
push
ret
pop
int3
add
mov
inc
mov
pushf
xchg
sbb
lcall
out
ret
jns
mov
add
std
xor
push
lahf
jmp
push
fadds
rorl
inc
mov
sbb
xor
loope
add
push
cmpsb
clc
es
test
sets
mov
mov
mov
stos
aam
into
xor
leave
add
cli
cmp
push
fildl
mov
lret
mul
into
aad
lret
cld
add
adc
das
dec
push
call
repz
popf
mov
ds
repnz
inc
lods
xor
roll
lods
push
sbb
xchg
cmpsl
stc
mov
ss
jo
icebp
jl
jno
jne
add
push
in
xchg
cmpsl
js
mov
mov
rcrl
insl
daa
sti
imul
mov
aaa
repnz
push
rcr
push
lret
data16
and
movsbl
cmpsb
push
inc
add
fnstcw
jbe
mov
stos
jns
loope
jae
cmpb
jmp
test
arpl
cli
adc
or
pop
popa
push
jp
in
pop
pop
cmp
or
sbb
leave
insb
mov
out
fdivrl
mov
push
jecxz
sub
addr16
xchg
adc
sbb
xor
icebp
dec
movsl
scas
movsl
aad
jle
sbb
add
add
push
fs
ss
mov
mov
xchg
frstor
es
leave
cmp
xchg
gs
xchg
mov
fstl
ret
pop
adc
xchg
mov
push
push
push
push
hlt
sub
push
insb
sub
dec
pusha
imul
scas
cltd
inc
inc
ja
jle
jle
loop
movsl
mov
inc
outsb
jle
mov
es
sahf
mov
and
add
je
sub
mov
enter
push
cmp
jae
mov
push
mov
pop
xor
cmp
fdivs
xchg
jnp
pop
es
sub
inc
sahf
test
cltd
fnstcw
push
sub
int3
dec
nop
dec
push
std
pop
insl
daa
dec
jecxz
push
sbb
sub
jno
mov
stos
xchg
or
mov
adc
test
inc
daa
xor
in
fbstp
push
ret
pop
sti
add
inc
js
dec
lods
cmp
sbb
stos
push
popf
add
aaa
jbe
or
and
fidivs
inc
out
jecxz
cli
cmc
mov
cmp
adc
mov
repz
xchg
sub
out
fsubrp
inc
iret
add
adc
xchg
enter
js
imul
cmp
sub
leave
movsl
dec
pop
lret
push
loopne
add
in
or
inc
stos
das
pop
inc
push
test
popa
jp
call
test
pop
or
push
sbb
xchg
stos
sbb
mov
mov
fcmove
fistpl
int3
fiadds
popa
rclb
ret
sub
xchg
nop
jle
outsb
push
jmp
std
cld
pop
cli
lcall
add
pop
repnz
movsl
adcl
pop
mov
xchg
fsubl
imul
pop
push
aad
push
xchg
jbe
mov
or
mov
cli
cmpsl
mov
jp
inc
and
mov
mov
mov
fdivrl
or
ds
mov
divb
loop
push
push
add
lods
test
stos
fsubrp
push
cmp
movsb
inc
inc
not
mov
push
aad
stc
je
fs
subb
adcb
jp
and
add
ja
dec
cmp
inc
mov
xor
sub
pop
and
sar
repz
sahf
xorb
jp
roll
lret
popa
pop
scas
pop
cltd
in
insb
cmpsb
and
rcrl
jns
das
jns
sbb
cmp
push
scas
sub
adc
test
arpl
dec
loopne
add
sub
xor
pop
test
mov
mul
paddd
dec
roll
jne
cmp
jl
mov
rorb
sbb
or
sub
ds
push
mov
adc
movsb
or
inc
jo
dec
add
popa
dec
call
cmp
mov
push
or
jbe
out
mov
jo
lret
xor
aas
aas
mov
push
popa
mov
lods
imul
loope
pushf
lea
mov
insb
dec
aas
rcll
shl
or
push
add
xor
mov
leave
imul
sti
xchg
xchg
add
xor
in
aam
aad
and
mov
mov
jle
jnp
dec
or
fists
sbb
xor
xor
adc
roll
sti
mov
push
inc
clc
mov
insl
or
push
xchg
fcmovne
gs
xchg
rolb
loop
xchg
adc
outsb
add
movsl
mov
add
push
cmpsb
mov
inc
repz
roll
mov
inc
and
jmp
push
pushf
xlat
xchg
cmp
add
inc
push
and
into
mov
mov
addr16
dec
sub
lods
out
pushf
nop
sahf
aad
push
ja
outsl
dec
mov
pop
fcomps
jg
pop
inc
js
mov
ret
cmp
adc
sarl
rclb
adc
cmp
ds
fldl
push
mov
popa
mov
dec
imull
cmpsl
aas
movl
add
addb
mov
jo
adc
adc
pop
lcall
jb
mov
and
es
fdivl
in
or
shll
mov
flds
or
mov
jp
ret
decb
inc
dec
fcoms
sbb
push
xchg
repnz
pop
ja
mov
xor
mov
push
mov
inc
jge
mov
mov
inc
imul
dec
enter
push
lds
mov
popf
jb
pop
pusha
pop
cmpsl
mov
mov
xor
inc
pop
lcall
inc
shll
inc
jns
xchg
xor
leave
dec
add
loope
inc
mov
rclb
jbe
clc
adc
mov
xchg
add
les
int3
cmp
lock
stos
dec
pusha
dec
jp
loop
jmp
notl
or
ret
out
jno
js
and
mov
js
ss
jle
jno
sub
dec
mov
cmpsb
lock
repnz
mov
xchg
xlat
xchg
sub
movsl
lret
mov
sub
dec
jle
in
xor
dec
shl
and
push
xor
sub
mov
adc
xor
cltd
push
push
loope
mov
cld
mov
dec
dec
lods
cmp
call
je
insl
fsubrp
inc
or
scas
rolb
adc
jg
pmaddwd
in
cltd
mov
mov
adc
jg
xorl
ljmp
mov
outsb
xor
sub
lcall
push
and
sbb
je
xchg
inc
mov
hlt
es
pop
jg
mov
or
idivl
test
outsb
inc
sbb
jl
jae
push
lcall
loope
jge
push
out
lahf
xchg
orb
imul
sbb
cmc
inc
mov
pushf
test
inc
pop
dec
enter
or
push
push
sti
loope
mov
and
or
pop
enter
inc
test
repz
fadds
test
movsb
sbb
imul
je
mov
fidivl
pop
xor
test
pop
sarl
repz
xor
lods
and
fidivrl
and
adc
mov
add
sub
daa
push
clc
out
stos
cmpsb
enter
jb
push
add
mov
xchg
mov
inc
jp
sbb
lock
xor
jp
ud2
sub
adc
and
or
lods
xchg
push
ja
and
mov
leave
ja
mov
scas
fcomi
insl
push
push
mov
push
sti
out
icebp
dec
ret
sbb
jbe
xor
js
push
cmp
mov
bound
xchg
ja
decb
inc
jge
cltd
dec
sbb
dec
jbe
cmpsb
int
adc
dec
pop
jp
mov
int3
insl
add
aad
imul
int3
mov
push
fs
popl
les
lods
test
and
fsubs
jle
mov
divl
adc
fs
dec
out
dec
mov
mov
inc
out
ret
and
push
cli
mov
addr16
push
push
das
aaa
adc
add
bound
data16
cmp
sub
shll
lods
xchg
insb
fsubl
mov
inc
test
sarb
mov
push
xor
push
pop
push
psllq
sbb
or
adc
xchg
or
mov
cs
pop
cli
cld
insl
std
cmp
adc
jnp
inc
mov
aam
pop
jp
in
outsb
sbb
movsb
pop
pop
sbb
insl
mov
lock
push
cltd
or
mov
adc
and
ret
mov
pushf
cmp
or
cli
or
push
inc
test
pop
or
repz
or
ljmp
xchg
add
js
js
xor
xchg
sub
mov
push
sub
int
ret
or
mov
sarb
pop
jbe
mov
xchg
stc
pop
lock
arpl
lcall
rclb
fs
clc
scas
fucomi
negl
inc
xchg
rcrb
fsts
and
xchg
jge
call
out
fcmovnu
nop
insb
mov
mov
mov
movsb
in
lds
shlb
arpl
push
mov
in
stos
es
dec
xchg
pop
push
test
jne
into
add
xchg
mov
cli
loop
int3
xor
lock
stos
movsb
xor
or
push
mov
push
int3
xor
jmp
lods
pop
push
arpl
shrl
cmp
je
outsl
mov
cltd
or
dec
lea
mov
iret
unpckhps
fadds
js
jb
adc
jae
add
sti
dec
aas
pop
mov
aam
add
cmp
dec
inc
lret
adc
cltd
or
jo
mov
jns
cmp
xor
jnp
sbb
arpl
into
push
jmp
aaa
lcall
fcomps
bt
and
neg
xor
xchg
test
lcall
and
in
and
repnz
mov
push
movsl
sub
repnz
iret
sub
or
test
cltd
cmp
test
cmp
dec
idivb
mov
cmp
add
xchg
ret
pop
jns
lret
mov
enter
ds
out
es
push
jle
pop
into
mov
loope
insb
fildl
fidivl
pop
jle
lock
arpl
sub
adc
mov
loope
cmp
xchg
mov
inc
jo
icebp
insl
xchg
loopne
xchg
cmpsb
iret
and
lahf
imul
roll
jns
cwtl
pause
push
jmp
xor
push
mov
sub
sub
push
mov
mov
adc
andb
and
pusha
in
mov
jae
and
and
int
pop
out
int3
js
push
mov
rcr
jne
sbb
sbb
fwait
pop
fwait
fwait
ret
out
ja
iret
fistps
inc
popa
mov
push
ss
pop
mov
xchg
ret
js
sub
dec
lret
or
rcll
push
gs
push
mov
movsl
xchg
jbe
dec
cmpsb
push
push
jg
jmp
add
in
pop
jecxz
cmpsb
adc
add
mov
bound
int3
push
push
mov
aas
lcall
int
call
push
ja
sti
mov
and
pushf
jb
hlt
mov
push
popa
xorl
test
push
bnd
xor
push
ficoml
cmp
sub
cltd
and
notl
push
or
cmp
mov
popa
inc
mov
push
dec
jns
shrb
push
mov
loope
push
mul
imul
cmp
cltd
les
ss
repnz
or
leave
and
cmc
mov
mov
rorb
adc
clc
mov
lock
enter
ljmp
pmaddwd
mov
add
mov
sbb
cmc
aad
mov
pop
adc
sbb
pop
aam
pop
ret
pop
test
push
repnz
repz
fs
cmpsb
mov
mov
mov
cmc
sbb
stos
dec
movsb
or
fisttpll
dec
jb
ss
movl
or
adc
shlb
out
fidivl
int3
jae
pop
daa
sahf
stos
movsl
xchg
xor
xchg
jo
inc
aaa
push
sub
lcall
lcall
iret
hlt
stos
inc
cmp
pop
jp
ret
lea
xchg
addb
xchg
stos
aad
mov
inc
add
or
aam
and
scas
lret
mov
outsl
fucomi
nop
test
insl
mov
push
aam
jg
notl
mov
fisubs
mov
pop
and
js
movsl
das
fs
cmp
outsl
push
add
pop
jbe
enter
mov
int
scas
bound
mov
rorb
inc
loopne
inc
es
push
in
lcall
lahf
icebp
pop
sti
fnstcw
ss
jb
outsb
pop
push
mov
xorl
insb
into
mov
fildl
popa
sbb
add
jecxz
pushl
jle
adc
data16
push
mov
je
fmul
aad
mov
add
cmp
scas
sarl
popa
mov
inc
inc
sbb
les
cmpsb
lret
lahf
sub
fstpt
dec
scas
or
ret
out
fsubs
xor
arpl
add
push
cmp
test
mov
int3
and
xlat
push
mov
out
cmp
loopne
lods
xor
push
add
push
pushf
stos
dec
push
sub
scas
push
jbe
cli
addr16
shll
mov
xchg
popa
sti
adc
loopne
push
xor
test
mov
sarl
popa
inc
sar
dec
out
inc
adcb
add
mov
mov
cs
push
cmp
push
insb
and
hlt
repnz
add
jns
or
pop
jb
and
jae
fcmovbe
repnz
aad
decb
rorl
pop
sti
xchg
pushf
push
popf
repnz
push
push
pop
mov
push
lds
jno
out
das
mov
jns
rcl
cmp
inc
cmp
nop
popa
sub
sti
fmul
push
push
mov
repnz
pop
hlt
jnp
and
rcrl
jp
mov
dec
stos
clc
or
mov
mov
and
cmp
dec
test
mov
mov
jg
fiaddl
cli
js
push
adc
push
ljmp
sub
hlt
loop
mov
ja
cmpb
decb
data16
xchg
movsb
inc
stc
cwtl
or
jecxz
inc
mov
mov
xchg
into
mov
push
enter
push
jecxz
push
push
adc
sbb
in
cmp
aaa
mov
frstor
rclb
pushw
dec
push
jecxz
add
sub
in
fdivrl
call
or
adc
cli
dec
inc
bound
fs
inc
adc
hlt
mov
inc
xor
dec
cltd
or
or
loope
popf
add
dec
pop
cmp
pop
ret
loopne
arpl
aad
sbb
addr16
fucomi
dec
dec
neg
int
xchg
adcb
lahf
std
rorl
and
ror
cmp
mov
push
mov
fwait
shl
popf
xchg
mov
xor
dec
imul
call
fwait
add
cmpsl
cmp
jne
xor
fstp
lea
sahf
push
or
xor
test
das
or
or
cmp
adc
push
xchg
sbb
xchg
aad
inc
inc
pop
mov
addr16
lret
mov
js
aas
cmp
jae
sbb
in
loop
xor
adcl
popa
inc
xchg
inc
data16
test
shlb
imulb
rcrl
lea
push
lea
out
adc
cli
sub
jge
std
jecxz
out
imul
push
lcall
dec
add
sub
jno
or
dec
jecxz
dec
or
pusha
je
cltd
push
dec
mov
mov
stos
xchg
jns
adc
lods
icebp
fstpt
cmpsb
bound
pop
push
test
shlb
or
shl
cli
cmp
fdiv
xchg
mov
movsb
cld
sub
in
add
and
mov
inc
test
stos
mov
mov
sbb
jge
cs
filds
xlat
sbb
nop
or
mov
or
dec
jmp
lea
je
sti
aas
bound
scas
lock
push
jbe
adc
fimuls
sti
js
jmp
call
aam
test
shl
pop
mov
cmpsl
cmp
adc
push
mov
dec
push
xor
xor
push
outsb
ret
mov
push
sarb
jg
lahf
mull
in
mov
addr16
inc
das
lods
dec
xor
es
int3
mov
mov
lds
mov
out
call
clc
nop
shlb
inc
adc
xor
insl
add
cmp
lret
xchg
into
imul
fisttpl
stos
pop
aam
pop
inc
out
and
sbb
pop
lret
aas
cmp
pop
data16
fnstenv
call
bound
jge
jp
movsb
ret
in
sub
dec
jecxz
in
shr
push
and
adc
das
and
xchg
dec
mov
insl
xchg
aad
mov
stc
leave
repz
add
movsl
imul
mov
fsubl
xchg
cmp
aad
push
ja
sub
dec
add
push
std
mov
shrb
test
incb
and
pop
shl
les
sbb
mov
xor
pop
daa
cmpsl
call
and
addr16
pop
lahf
adc
or
es
sbbb
mov
or
fildll
jle
inc
arpl
arpl
or
pop
jne
out
sub
inc
fcomi
inc
fwait
iret
jno
push
cmp
inc
int
mov
push
in
stc
pop
ss
int3
xlat
jmp
cmp
ja
xchg
mov
push
icebp
dec
jle
or
xchg
jmp
int3
js
cmp
push
leave
addb
mov
test
jp
fiaddl
pop
mov
stos
fbstp
or
testb
sar
dec
pop
xchg
test
pop
inc
aaa
cwtl
add
jmp
xchg
cmp
mov
cmp
or
mov
push
cmp
mov
fwait
stos
push
jmp
movsl
shr
cmc
popa
daa
push
sbb
and
mov
mov
je
shlb
fisubs
insb
xchg
mov
pop
jbe
cltd
pushf
xor
mov
inc
mov
jle
pop
cmp
pop
fcompl
aam
jmp
cli
popf
cwtl
jle
mov
aaa
sub
cwtl
inc
mov
jo
jns
fs
setno
imul
cmovae
aam
into
mov
lock
inc
dec
fldl
mov
mov
cwtl
pop
cmpsb
lds
mov
sbb
jo
rcl
leave
or
mov
jnp
test
mov
fdiv
scas
gs
and
inc
mov
and
mov
das
mov
enter
pusha
aas
sbb
lds
sbb
jb,pt
cmpsl
jmp
sarl
push
rclb
pushf
aam
loope
aaa
popf
rclb
lahf
mov
xchg
ljmp
cmpsl
cltd
or
or
inc
pop
xor
aam
inc
mov
ficompl
sbb
pop
test
mov
push
insb
xorl
pop
dec
in
cmp
jae
xor
leave
xor
xor
or
inc
and
movl
inc
jl
lahf
push
push
jmp
mov
adc
jo
fsubl
sub
push
inc
in
mov
mov
movsb
lds
mov
pop
and
sub
leave
adc
push
cmp
mov
mov
adc
xchg
adc
jne
pop
js
dec
loop
mov
insb
pop
pop
jg
test
dec
repnz
sub
pop
xor
mov
or
push
lods
cmpsb
jecxz
and
stos
iret
fistpl
jbe
sbb
sbb
lcall
dec
fwait
mov
sub
fnstsw
mov
mov
pusha
and
pop
mov
movsl
inc
inc
rcll
add
dec
push
imul
pop
ficoms
and
cs
adc
mov
sti
out
ret
jmp
popa
out
bound
pop
ljmp
fsub
cli
dec
shlb
jmp
mov
outsb
insb
mov
pop
sti
cwtl
lea
and
jbe
ljmp
popl
dec
aas
cmp
cmp
mov
pop
repz
loope
adc
pop
in
popa
arpl
pop
movsl
or
mov
fwait
jge
mov
lods
outsb
pop
mov
pop
out
imul
lods
push
shlb
mov
popa
mov
xor
pusha
jae
and
into
aaa
xchg
inc
push
in
push
cmp
cmpb
stc
cli
mov
jecxz
push
mov
push
iret
xor
jle
mov
pop
mov
inc
mov
add
xor
fwait
mov
stos
jl
xor
in
and
lods
test
aaa
cmp
dec
test
xchg
inc
mov
mov
push
dec
pusha
jae
sub
or
jp
ret
pop
mov
vmwrite
stos
or
adc
push
inc
inc
dec
lcall
jg
insl
shr
or
sub
ss
adc
rorb
add
adcl
cwtl
cltd
in
jge
ss
fisttpl
inc
xchg
and
jae
sar
imull
f2xm1
push
out
add
aam
into
mov
and
js
clc
add
mov
mov
jns
fldl
xchg
lods
mov
sub
push
xor
lock
stos
in
call
test
loope
pop
sub
inc
pop
ret
jo
scas
inc
sub
sub
leave
out
bt
test
mov
imul
push
xchg
dec
jmp
cmpsl
push
call
scas
hlt
mov
pop
lea
mov
dec
inc
roll
iret
pop
mov
outsl
xor
std
fidivrs
inc
inc
test
lret
ds
or
cmpps
fs
dec
add
dec
imul
pushl
out
lahf
lock
lods
adc
sub
rcll
pop
sub
and
adc
xchg
cltd
pop
cmp
sub
in
imul
fsubrp
punpckhwd
pop
push
push
xchg
sbb
or
dec
pusha
cmpsl
not
outsl
in
and
loopne
jae
mov
mov
dec
mov
scas
cli
lahf
mov
or
daa
aaa
imul
outsb
dec
push
mov
mov
nop
movsb
and
sub
lahf
iret
sub
mov
cmpsb
lds
mov
lock
sbb
mov
cltd
jbe
push
cwtl
or
sti
pop
clc
mov
pushf
and
ljmp
addr16
push
add
clc
cld
pop
sbb
outsb
das
ficoms
or
popa
pushf
adc
addl
push
jg
ljmp
out
jnp
add
jb
dec
shll
clc
dec
ss
in
jecxz
nop
mov
repnz
std
dec
jo
dec
jmp
push
das
xchg
xchg
int
xor
leave
bound
adc
push
sub
jns
push
or
icebp
and
inc
inc
or
push
xor
pop
xor
es
aam
insl
xchg
ret
push
insb
mov
aaa
xchg
mov
dec
dec
and
int
imul
push
xlat
or
xchg
pop
cmp
push
ss
leave
mov
inc
gs
xor
loopne
xchg
push
jge
stc
out
test
lea
mov
mov
ds
xchg
push
imulb
mov
inc
mov
jge
xchg
int
enter
sub
mov
mov
cmp
cmp
jae
push
inc
loope
jno
cli
mov
insl
mov
out
sti
jo
pop
pop
inc
mov
jae
fnstsw
fcomps
loope
aas
add
fstps
xlat
test
testb
lret
jne
jge
je
or
mov
jl
aam
into
sbb
sarl
dec
mov
xchg
adc
xchg
push
inc
inc
push
gs
mov
mov
shlb
mov
mov
xchg
popa
int
sbb
inc
loop
call
inc
or
mov
jmp
push
adc
pop
xchg
in
pushf
rol
add
mov
into
xor
mov
daa
dec
mov
cmp
inc
loope
jecxz
rol
xchg
ja
mov
mov
mov
test
pop
push
xchg
jns
pop
push
mov
je
ficoms
lret
cmp
rcl
in
es
jne
adc
inc
inc
mov
or
test
push
mov
jge
es
jne
mov
pop
shr
inc
bound
inc
lret
fsub
fs
xor
mov
jle,pt
inc
pop
adc
adcl
mov
ret
jle
dec
inc
jbe
bound
sbb
inc
call
out
inc
or
test
jo
and
lock
dec
fst
and
or
or
test
adc
aam
outsb
cmp
or
imul
push
js
xor
push
loop
inc
push
popaw
ljmp
mov
add
mov
jge
fiadds
nop
pop
adc
mov
sti
sub
icebp
xor
sbb
inc
pop
outsb
cmpsb
jns
loopne
dec
and
xchg
dec
add
push
fst
add
sbb
fistpl
mov
mov
push
pop
je
dec
mov
dec
push
mov
xchg
pop
shrl
sbb
jb
lret
pop
sti
xchg
inc
xchg
fistl
and
or
cmp
inc
imul
jnp
mov
cwtl
or
push
dec
xor
jecxz
fsubrp
out
add
pop
fisttpll
xchg
mov
nop
outsb
test
test
xchg
add
push
jp
test
inc
or
xor
cltd
mov
cmp
jp
fcompl
and
out
add
scas
test
int
add
sub
jle
sbb
jmp
pop
mov
imul
pop
mov
push
cmp
push
into
leave
outsb
adc
and
jae
outsb
sbbl
and
repz
int
add
imul
movsl
dec
add
push
lds
aam
cmpsl
out
mov
jp
or
mov
ret
fwait
xchg
xchg
mov
mov
pop
mov
cmp
adc
cmpsl
or
jg
sub
dec
and
in
push
add
jle
loop
int
out
add
jecxz
mov
xor
pop
add
js
pop
scas
xchg
xchg
lods
lea
leave
aaa
xchg
mov
mov
mov
iret
jg
bound
std
mov
lods
clc
jecxz
mov
adc
test
outsb
xchg
cmpsb
push
ficomps
mov
or
shr
rorb
out
sub
sub
or
push
bound
add
loop
adc
js
and
imull
dec
mov
rcr
jmp
stc
sahf
push
lcall
popf
push
shll
test
lea
jb
mov
sbb
cmc
mov
mov
call
mov
push
push
lahf
cmp
sub
inc
sarb
sbb
scas
clc
or
push
mov
xchg
inc
mov
cmp
mov
and
push
xchg
nop
ds
pop
jecxz
sti
dec
je
adc
or
mov
sbb
and
jecxz
mov
mov
or
mov
std
popf
sub
inc
pop
sbb
sahf
dec
inc
lahf
xchg
inc
lcall
imul
xor
add
jne,pn
pop
jmp
and
and
popa
cmpsl
repz
roll
in
jp
inc
fs
push
mov
fwait
pop
ds
lods
mov
fcoml
mov
mov
lods
repz
out
out
cli
je
jmp
cs
xor
inc
es
fsubl
inc
sbb
dec
jae
sub
xchg
jne
test
fwait
inc
clc
and
jb
cmp
mov
xchg
outsl
mov
or
lds
pop
js
in
mov
ljmp
lahf
sbb
pop
in
mov
dec
call
cmp
push
inc
jle
rcl
movsb
pop
dec
jg
mov
pop
int
cmp
cmp
ljmp
cmp
sbb
repz
aaa
cmp
and
bound
mov
pop
dec
jp
rorl
xor
jmp
pop
mov
or
pop
xlat
mov
push
mov
mov
jp
ja
std
sub
mov
pop
push
addr16
loopne
add
clc
aas
mov
xchg
cmp
call
or
add
call
pop
iret
and
les
sbb
ja
dec
outsl
scas
fstl
ss
add
dec
pop
test
es
cs
les
dec
cltd
lds
xchg
pop
or
and
jb
inc
aad
cmp
xchg
lret
mov
cmc
movsb
pop
sti
cwtl
std
test
xlat
daa
push
decb
test
pop
insb
adc
movsl
repnz
fstpt
xor
or
lcall
pop
mov
and
mov
sub
sub
mov
fdiv
xor
xor
cli
mov
sahf
mov
mov
lds
aam
subb
mov
clc
adcb
jle
je
jmp
arpl
lahf
sub
fwait
mov
arpl
insb
cwtd
adcl
add
mov
in
push
js
ret
push
cmpsb
sarb
cmpb
mov
jb
in
cmpsb
ljmp
or
cwtl
ret
pushf
nop
in
outsb
gs
sub
push
mov
jne
cli
jne
loope
iret
sub
sub
jge
shlb
mov
fsqrt
stos
repnz
jl
fidivs
jg
xchg
inc
rcrl
xor
mov
dec
mov
dec
loop
mov
sbb
pop
call
dec
leave
loopne
cld
rorb
pop
dec
cmp
test
es
jecxz
xchg
cmp
add
dec
lods
and
pop
lret
pushf
addr16
call
inc
mov
mov
add
mov
mov
xorb
insl
pop
mov
and
push
push
pop
dec
push
out
jmp
and
in
xchg
jae
insb
stc
addr16
pop
and
lods
xchg
xor
test
stos
pop
int
and
jae
cmpsb
and
test
jmp
mov
popf
or
push
insl
int3
mov
scas
dec
push
and
and
push
sbb
pushf
leave
shrb
fisttpl
xor
xchg
xor
adc
mov
cwtl
push
jmp
jl
inc
insl
and
cmc
out
decl
test
xchg
xchg
xchg
mov
cmp
jge
sub
in
loop
xchg
jo
inc
cmpsb
adc
and
insl
mov
add
dec
cmp
xchg
rclb
or
push
mov
test
imul
sbbl
jge
mov
push
sbb
pop
and
nop
inc
mov
pop
xor
in
push
shll
bound
cmpsl
xchg
loopne
outsb
inc
mov
pop
jbe
dec
cs
in
dec
xchg
jge
inc
lahf
push
xor
pop
inc
insb
mov
mov
shlb
mov
aaa
mov
xor
loopne
and
jo
mov
cli
dec
inc
add
cmp
push
sarb
mov
add
sti
cld
push
pop
mov
and
and
lret
cmp
aam
sti
insb
mull
or
mov
call
sbb
xor
mov
sti
push
in
xor
icebp
gs
jo
fs
sbb
jmp
js
out
mov
stc
mov
or
jecxz
mov
ffree
cli
jne
push
cmp
xchg
push
lds
pop
frstor
cmp
stos
fldl
xchg
mov
repnz
sbb
in
int3
loop
inc
into
push
jo
popf
div
hlt
btr
pop
mov
ljmp
mov
adc
into
inc
jge
sub
mov
lahf
sahf
pop
xor
ret
push
ljmp
rolb
lds
fcomps
xchg
scas
pushf
and
mov
push
push
in
sbb
movsb
lahf
sbb
cwtl
pushf
inc
out
decl
aad
xor
cwtl
push
cli
fisubrs
xchg
jae
sbb
adc
test
jno
in
lea
push
std
pop
jo
mov
sti
sub
js
mov
in
dec
std
dec
ljmp
mov
lcall
xchg
data16
insl
jp
es
adc
push
jbe
jno
lret
loopne
fidivrs
sbb
inc
test
imul
sbb
sbb
or
in
out
sub
mov
adc
xor
mov
pop
mov
and
mov
xchg
arpl
scas
cmc
es
rclb
popa
stc
inc
popf
mov
mov
ja
pop
cmpl
xchg
repnz
decb
mov
jg
cltd
and
in
mov
int3
aaa
inc
push
into
sbb
fistps
rcrl
repnz
outsb
adcb
nop
push
out
cmp
arpl
or
and
jno
cmp
xor
aaa
popa
jb
mov
lds
push
sarl
push
push
sbb
aaa
loopne
lahf
sbb
mov
movsl
add
popa
dec
sti
or
lcall
icebp
clc
and
jg
inc
fs
fdivrp
mov
repz
ljmp
testb
push
jae
lahf
divl
pop
xor
and
dec
hlt
mov
fistpl
movl
ret
out
lods
clc
xchg
aad
int
out
mov
pop
mov
adc
adcl
fcoms
mov
adcl
in
sub
xchg
cmp
sahf
outsb
mov
mov
pushw
dec
cmpsl
fmuls
out
leave
call
inc
pushl
stos
mov
sub
ja
mov
stos
mov
xchg
xchg
sti
pop
dec
mov
repnz
xor
test
push
xorl
push
fnstcw
inc
fs
test
loopne
adc
mov
stc
and
xor
rorl
xchg
filds
cmp
repnz
inc
and
jae
push
xchg
call
adc
arpl
repnz
or
xchg
daa
js
sbb
hlt
xchg
bound
pop
and
pop
into
pop
pop
enter
scas
nop
or
inc
mov
ffreep
adc
add
cmp
movsl
push
cmpsb
xchg
or
cmp
aas
jbe
les
fiaddl
pop
cmp
in
stc
xor
jno
ljmp
inc
cmp
sbb
das
xchg
push
fs
sbb
out
sarl
add
mov
mov
dec
sub
push
aam
mov
push
mov
mov
nop
xchg
loope
mov
into
cmp
int3
outsw
out
adc
fwait
dec
andb
xchg
repnz
mov
pushf
push
mulb
hlt
shll
out
cmpsb
shl
jle
push
jl
sbb
pop
sub
movsl
xchg
in
push
inc
pop
cwtl
cmp
mov
or
push
mov
imul
pop
jmp
mov
ja
sub
add
push
pop
imul
lods
clc
rep
fadd
inc
jmp
mov
inc
lock
cmp
rorb
sti
mov
aam
aaa
adc
add
mov
rorl
push
leave
inc
inc
lods
jle
sub
nop
std
and
xchg
lret
add
add
adc
fiaddl
mov
add
sbb
mov
hlt
cltd
inc
adc
mov
pop
cld
cmp
aad
adc
jecxz
sbb
mov
sub
ja
and
in
pop
or
mov
int3
jne
clc
test
cmpsb
insb
push
mov
mov
loope
out
or
or
fildll
xor
xor
aaa
popf
xchg
cmpsb
xchg
sar
add
lea
outsl
xchg
mov
out
push
aam
daa
shll
adc
ss
mov
leave
insl
mov
or
mov
dec
push
leave
mov
fwait
sbb
push
loop
pop
inc
push
jno
xor
xor
fmull
loop
ljmp
inc
subb
fisubs
fists
mov
mov
sahf
and
sub
std
xchg
orb
insl
aas
push
call
push
insb
dec
mov
out
mov
xchg
sbb
pop
adc
daa
jbe
mov
mov
insl
jmp
sahf
and
in
cmp
idiv
xor
sub
sub
dec
inc
adc
pop
repz
jnp
ljmp
push
xchg
pop
push
jmp
xlat
mov
jne
mov
popf
jno
and
pusha
test
and
xchg
mov
aaa
cmp
xchg
stos
inc
outsl
shl
push
test
mov
mov
mov
sub
and
inc
inc
adc
aam
cli
inc
xchg
gs
jp
cmc
xchg
mov
mov
daa
stos
in
int3
dec
call
inc
xor
cld
or
pop
movsb
leave
jbe
mov
mov
lret
iret
arpl
hlt
dec
sbb
cmp
push
outsb
xlat
push
jmp
decl
test
bound
pop
dec
leave
sti
add
out
mov
cmp
xorb
cs
adc
into
aaa
cmp
sub
popf
pop
ret
in
ret
xchg
das
add
add
lcall
setge
xchg
aaa
ret
sub
fsubl
cmp
js
imul
xor
push
xchg
mov
lea
push
in
cltd
and
lds
arpl
jecxz
outsl
jnp
lcall
xlat
xor
cmpsb
jmp
mov
push
inc
mov
or
dec
pop
mov
shll
jg
stos
clc
mov
dec
pop
loope
jmp
lock
sub
jne
inc
jl
jp
mov
fidivl
imul
jle
xlat
jmp
push
stos
push
xor
adc
aaa
cmp
int3
mov
movsl
jecxz
fnstsw
and
mov
inc
inc
pushf
pop
pop
jp
jle
push
cmc
orl
pop
xor
hlt
sbb
push
add
leave
inc
test
push
dec
inc
mov
lcallw
push
inc
out
addr16
fiaddl
iret
sub
inc
and
xor
push
pop
jne
stos
cmpb
iret
scas
icebp
jle
dec
inc
jecxz
sub
addr16
jle
dec
fcmovbe
sbb
fxch
in
sahf
ja
in
inc
cmp
add
inc
daa
inc
das
std
shll
sub
cmp
push
push
inc
popa
inc
xchg
scas
gs
and
sbb
dec
fwait
sahf
mov
add
inc
stos
fstl
mov
hlt
lcall
scas
xlat
inc
movsl
mov
subb
add
xchg
mov
mov
xlat
stc
push
push
int3
pop
jae
push
sbb
mov
ret
das
hlt
lret
dec
add
jg
shlb
and
cmpl
push
mov
or
mov
int3
bound
in
in
mov
addl
out
add
sbb
xchg
xlat
inc
pop
aas
xor
ret
or
mov
es
dec
add
pop
lock
insb
clc
test
add
mov
jbe
adc
xor
das
mov
cmp
imul
and
dec
pop
cli
push
jecxz
sub
mov
add
adc
xchg
jae
jb
insl
movsl
push
sbb
mov
xor
lods
jne
sarb
nop
jnp
cmp
addr16
fidivl
jne
mov
inc
or
mov
jmp
insb
sub
loopne
push
les
movsb
in
jg
ja
cld
mov
out
fs
xchg
inc
repz
mov
lea
fmul
push
test
lods
mov
push
flds
js
rcrl
fwait
out
sub
sbb
jb
push
or
ss
pop
mov
jle
test
sub
pop
mov
sbb
loop
lret
aaa
loopne
xchg
pushf
jbe
xor
cmc
rolb
mov
xchg
mov
repz
mov
mov
ss
enter
fwait
test
lea
or
ja
cmp
pusha
jle
inc
and
aam
ja
insb
mov
sub
std
movsl
cmp
fninit
fwait
push
stc
sub
push
jle
cmp
or
inc
push
movsl
iret
xorb
fcomps
jnp
js
and
aad
insl
pop
fimull
stc
push
bound
int3
ficoms
mov
ret
and
clc
mov
int3
cvtpi2ps
add
jge
xchg
push
cmp
cmpsb
shll
inc
add
push
lahf
mov
mov
lret
sbb
in
add
fdivs
cmp
mov
inc
adc
lock
cmp
mov
xchg
into
push
add
and
push
mov
adc
xor
enter
cmpsb
out
dec
sbb
and
sub
out
xchg
push
pop
popa
pusha
lock
push
aas
in
lea
sti
in
mov
aam
inc
test
repnz
cmpsb
mov
fcoml
mov
push
enter
fidivs
mov
and
in
pop
in
jb
rorb
popa
lcall
mov
dec
cs
cwtl
call
movlps
dec
pop
add
add
mov
pop
rorb
dec
push
push
push
lods
sub
xor
pop
movsl
push
push
loop
cmp
addr16
push
xchg
adc
xchg
pushf
and
dec
sbb
popa
xlat
push
movsb
push
cmp
aas
xor
inc
mov
das
movsb
adc
push
mov
jbe
leave
mov
mov
push
xlat
addr16
mov
or
je
ja
xor
xchg
popa
mov
lret
push
xchg
out
xchg
aam
or
test
cmc
push
xchg
xchg
orl
and
cli
sbb
dec
mov
popl
pop
loope
pop
adc
fldl
fwait
incl
cs
pop
gs
bound
in
out
mov
sub
xchg
in
scas
rorl
gs
aad
fiaddl
cli
sbbl
push
addr16
sub
or
out
insb
sbb
inc
mov
loop
sbb
imul
pop
bound
push
loopne
cmp
lcall
aaa
mov
jle
lea
lret
mov
mov
mov
mov
or
out
sar
repnz
cmp
lret
pop
shrl
lods
xor
inc
jl
lret
xor
lock
mov
fldt
pop
pop
hlt
das
loopne
filds
call
cmp
loopne
pushf
mov
mov
mov
mov
repnz
out
popa
andb
sub
sbb
movsl
pushl
int3
out
mov
cli
adc
jge
movsb
ret
cmp
dec
rorb
push
insb
test
mov
je
lds
sub
or
mov
dec
jo
into
mov
sahf
addl
fs
nop
fadds
pop
roll
in
dec
jb
sub
sub
sahf
inc
jg
pop
mov
xchg
leave
adc
imul
mov
div
lea
test
pop
pop
or
push
test
xchg
addr16
loopne,pn
xchg
cltd
sub
pop
rcll
insb
or
sahf
pop
push
push
out
cwtl
dec
mov
and
xchg
and
pop
push
jae
jge
mov
add
std
and
aas
mov
pop
push
dec
jnp
sbb
cmc
je
jae
fstl
jmp
jne
dec
xchg
and
cltd
addr16
in
nop
mov
jp
test
clc
arpl
cmp
xchg
mov
inc
dec
popa
push
mov
and
sarl
in
in
idivl
ret
insb
mov
and
push
mov
lcall
mov
dec
stc
xor
cmpb
inc
mov
ljmp
or
outsb
mov
pop
push
push
imul
push
and
mov
dec
sbb
cmp
xlat
cmp
xchg
inc
lahf
out
mov
mov
mov
push
mov
dec
ss
mov
lret
scas
movsl
popf
sbbb
mov
jecxz
mov
sub
jg
pop
inc
mov
xor
fcoml
xchg
loope
or
add
test
xchg
sub
orb
add
push
in
mov
mov
cmp
push
movsb
push
add
loopne
movsl
dec
scas
inc
push
mov
adc
push
cltd
lret
xor
fcmovne
das
mov
loopne
sub
sbb
insl
addr16
in
jb
push
clc
out
ffree
lret
jge
xor
and
fistpl
fnstsw
int
sbb
mov
cli
hlt
adc
lods
dec
and
xchg
xchg
and
leave
or
mov
xor
sub
dec
les
jle
xor
and
nop
adc
sbb
lret
dec
mov
pop
xor
sub
gs
sbb
repz
test
cltd
sbb
out
arpl
aam
subb
imul
out
out
or
ror
mov
pushf
retw
or
inc
das
std
mov
test
mov
add
out
ljmp
sahf
inc
ds
xchg
addl
push
mov
test
divl
ja
xchg
mov
fistl
hlt
jno
loope
cltd
xorl
lock
or
add
mov
mov
jle
movl
movsl
cmp
test
int
fsts
out
mov
aam
ds
xor
jl
leave
sub
lds
outsb
sub
in
or
test
mov
jae
push
dec
rcl
ja
cltd
add
bound
daa
int3
mov
in
cmc
add
mov
mov
cmpsb
mov
sahf
in
movd
sbb
stos
add
out
mov
xor
std
xchg
mov
test
mov
aas
xchg
add
xchg
test
dec
aam
loopne
test
dec
or
fcmovbe
jge
cli
dec
popf
popf
add
sbb
xor
add
adc
or
push
dec
adc
test
xor
sti
in
jnp
outsl
sti
mov
ds
cmc
sub
xlat
xor
xor
ret
lds
popa
aam
jnp
push
imul
mov
xchg
push
stc
and
xlat
push
xchg
mov
lahf
sub
ficoms
mov
stos
in
add
sub
in
xchg
lds
lock
out
mov
jns
loop
call
ret
fs
fstps
mov
lds
sbb
xchg
push
push
jne
xchg
cbtw
sub
out
shll
inc
mov
cltd
insl
imul
add
sbb
ja
mov
mov
imul
fcomps
cmpsb
cmpsl
xchg
int3
stos
and
leave
cld
mov
repnz
fadds
xlat
adc
xchg
aam
call
jne
sbb
add
sub
xchg
sbb
add
movsb
je
jp
xlat
inc
cmp
stos
stc
mov
pop
aam
data16
loope
xor
lcall
movsb
outsb
or
das
pushf
fsubrp
pop
push
imul
lds
add
ds
int
pop
aad
sbb
sarl
scas
push
test
das
popl
jge
pop
pusha
and
or
out
call
rcrb
push
mov
add
mov
pop
dec
outsb
insl
in
pop
gs
insl
add
push
movsb
out
adc
mov
xor
scas
test
roll
sub
rcrl
ret
insl
xchg
lret
fsubs
xchg
rcrl
sub
add
sbb
data16
sarb
cmovns
scas
pusha
icebp
push
adc
mov
mov
cli
jne
adc
add
xchg
nop
push
inc
mov
inc
jmp
lret
jbe
lock
cwtl
les
xchg
test
sahf
stos
addl
adcb
adc
and
inc
xor
push
call
xchg
inc
shlb
daa
and
and
sahf
cltd
insl
sbb
pop
out
popa
jo
std
pop
lret
add
xlat
and
inc
out
push
leave
daa
adc
push
leave
scas
or
or
xchg
jge
movsl
sub
outsl
dec
fcompl
xchg
sub
iret
fnstenv
dec
lds
inc
jecxz
out
cli
test
lods
add
cld
mov
pop
stos
popa
xor
jp
mov
jno
cmpsb
dec
and
mov
mov
incl
push
lcall
push
es
xchg
shlb
push
push
push
xchg
std
out
in
les
cmc
fidivrl
pop
loopne
inc
pop
ss
jbe
mov
lret
int3
and
xor
jecxz
js
popf
das
lods
popf
and
push
pop
cld
fisttpl
or
aaa
xchg
daa
cmp
dec
sbb
mov
mov
mov
rcrl
mov
notb
mov
pop
outsb
adc
cmp
mov
rcrl
adc
data16
gs
add
enter
cmp
fwait
add
fcmovnb
cltd
xchg
cmp
adc
pop
sahf
push
add
pop
jp
jno
jmp
jne
adc
add
in
jne
xor
and
push
out
xor
xchg
mov
push
jecxz
mov
jg
fsubrp
popf
orb
sub
adc
lret
jmp
xlat
mov
add
iret
sub
ret
cmp
in
fisttpl
popf
loope
repnz
jge
mov
out
sub
movsb
jg
icebp
mov
mov
lea
mov
dec
fmuls
test
mov
sbb
ret
pop
and
sti
adc
jecxz
add
je
cmp
iret
add
add
out
loopne
push
sbbl
loopne
cmp
dec
mov
cmpsl
fisttpl
mov
lret
pushf
sbb
aas
mov
push
dec
sbb
jns
stc
fs
inc
adc
jmp
scas
incb
aam
call
jge
dec
cmp
outsb
lods
pusha
adc
sbb
iret
dec
sbb
loope,pn
mov
bound
leave
sbb
popl
in
push
cmpsl
xchg
frstpm(287
push
mov
pop
mov
std
in
mov
or
fildll
jge
les
sbb
gs
cmp
dec
jmp
enter
push
jae
ljmp
clc
movsl
gs
pop
add
in
pop
sahf
jno
out
das
hlt
xor
scas
fsubp
push
add
and
scas
lret
xchg
pop
ss
or
pop
mov
mov
push
jg
loope
add
lcall
xchg
je
xchg
sbb
sbb
mov
xor
aam
mov
jno
pop
mov
lret
stos
mov
sub
add
sub
cmp
aaa
adcl
mov
push
sarl
les
cmp
cmp
rcr
and
jge
mov
push
jns
cmp
js
jbe
insl
lret
cmp
cwtl
cmc
inc
xchg
or
daa
rcl
test
adc
and
pop
clc
js
pop
stos
fisubs
bound
shlb
xor
jp
cwtl
xchg
add
cltd
jns
lea
lea
cmp
fucomip
sbb
iret
jb
pop
mov
push
push
xchg
fdivl
pop
add
push
or
add
xchg
lahf
lret
movsl
adc
pop
jns
nop
mov
dec
and
into
lret
je
push
out
fadds
inc
insw
loop
sbb
pop
rorb
or
ret
xchg
fiaddl
xor
push
pop
cmc
add
mov
jno
lock
inc
cli
jno
pop
shlb
xchg
gs
scas
push
mov
jmp
lea
pusha
push
out
ljmp
iret
in
ja
push
fidivrl
jnp
mov
enter
pushf
mov
daa
les
jge
lret
int
push
xchg
repz
inc
xor
in
stos
mov
cli
sbb
mov
xor
xchg
call
mov
jp
mov
popf
test
loop
pop
repz
push
jp
sub
fucom
inc
fbld
cmp
and
and
filds
sub
lock
hlt
mov
das
xchg
xchg
cmp
aas
les
sbb
xchg
out
lret
dec
sbb
sahf
lret
iret
push
cmpsl
out
push
sub
sub
adc
ds
dec
push
adc
cmp
add
sub
rcl
cmp
iret
in
xchg
out
imul
fildll
push
dec
outsl
and
mov
mov
je
xor
pushf
pop
pandn
stos
pop
ffreep
dec
pop
xor
or
add
outsl
insl
cs
test
xchg
mov
or
cmp
adc
aas
bnd
in
int3
add
cld
mov
xor
addr16
jecxz
movsl
daa
jns
and
and
inc
mov
jle
imul
pop
js
pop
sarb
mov
inc
sbb
sarb
aas
mov
sbb
xchg
xchg
insl
or
roll
repz
icebp
cmp
std
fisubl
lock
mov
test
inc
clc
xor
add
cmpsb
pop
push
cmpsb
rclb
xchg
divl
in
cld
add
es
test
enter
mov
xchg
cltd
jo
arpl
lds
xchg
jae
jae
test
push
outsb
jno
xchg
lods
pop
add
lcall
push
cmp
frstor
stos
in
rcrl
in
xchg
or
inc
ficoml
mov
pop
insl
fldl
lods
sbb
pop
sbb
arpl
jbe
xor
mov
adc
repz
inc
test
test
fbstp
cmp
mov
cmp
mov
movsb
jmp
jmp
or
push
std
sbb
cli
adc
fistl
dec
xorb
mov
ja
push
out
mov
rolb
fildll
stos
std
mov
push
dec
cmp
xlat
inc
mov
frstor
xchg
loope
cmp
inc
pop
sub
mov
sub
mov
jbe
xchg
push
sub
cmp
inc
sar
push
add
push
adc
cs
dec
sbb
in
ds
js
pop
test
fstpl
stc
mov
push
leave
jg
enter
mov
xor
inc
pop
jno
mov
pop
pop
cwtl
popf
fistpll
cmp
fildl
push
adc
ja
mov
ljmp
pop
or
fisubl
xchg
imul
push
std
xlat
es
sahf
push
iret
add
in
pushf
orb
inc
xchg
xchg
jle
rcrl
imul
js
loope
adc
sahf
ja
inc
stos
test
mov
mov
adc
pop
pop
pavgb
out
push
das
lret
sbb
cmp
shll
sarl
cmpsl
dec
pop
jecxz
fsubrl
adc
sbb
insl
cwtl
fldz
dec
loopne
scas
xchg
rclb
pushf
adc
mov
sarl
divb
test
mov
mov
fsubrl
cmp
or
push
les
outsl
popl
mov
or
and
add
and
fs
lahf
fcoms
subb
push
or
mov
jge
and
test
dec
andl
adc
call
clc
out
inc
add
imul
mov
mov
pop
adc
mov
call
into
loop
gs
mov
pop
mov
push
push
push
clc
mov
shll
or
popf
mov
push
pop
adc
add
mov
sub
jg
test
js
xchg
iret
pop
pop
sbb
lahf
imul
inc
jns
dec
sub
icebp
push
jmp
out
lds
pop
mov
ds
and
into
subb
dec
int
mov
sub
pop
lea
mov
mov
jge
dec
xchg
enter
jmp
adc
xchg
mov
aas
lahf
jbe
aaa
sbb
cmc
xor
out
lods
cmp
add
xchg
out
popf
xor
out
xchg
sub
adc
pop
pusha
mov
lods
movsb
mov
dec
in
jecxz
mov
aaa
test
fs
orl
jmp
sbb
pop
fistpl
cltd
mov
and
in
xlat
push
push
into
push
roll
inc
lret
leave
test
in
add
mov
mov
in
cmc
unpcklps
cwtl
imul
fnstenv
inc
xlat
repnz
cmpsb
xchg
push
loope
xchg
daa
mov
enter
lock
pop
shlb
mov
jge
data16
into
mov
add
decb
push
push
clc
xchg
mul
sbbl
pop
or
sti
sbbl
scas
faddl
sub
daa
mov
dec
leave
and
cli
rcll
inc
mov
cmp
xor
shll
ljmp
inc
pop
adc
dec
mov
mov
aas
ljmp
stos
divl
aas
add
cmpsb
lret
pop
notb
mov
out
mov
sahf
rcrb
sub
sub
into
jl
jmp
xchg
cmp
ficoms
mov
mov
add
loop
dec
mov
js
cmpsb
xchg
ret
dec
mov
adc
sbb
ja
cli
inc
cmp
mov
adc
lahf
out
movsb
fs
js
jnp
dec
mov
jno
ljmp
mov
cwtl
fmull
insb
add
sub
sti
or
push
or
cmp
notl
test
ljmp
jge
and
shlb
mov
mov
insb
in
icebp
sbb
push
push
xchg
jp
fcmove
test
lock
xchg
lea
jg
fcmovnu
sarb
or
lods
or
aam
add
stc
adc
mov
and
lret
mov
lret
cmp
push
mov
xor
inc
test
outsb
inc
loopne
add
mov
mulb
sbb
out
out
lcall
pop
sub
scas
mov
out
ffreep
lods
sti
ds
shr
jns
fs
aam
dec
shrb
adc
nop
sbb
push
jl
fnstenv
push
pop
cs
xrelease
jae
int3
dec
lcall
test
push
outsl
ret
push
pop
iret
mov
cmp
jns
inc
jp
lcall
cmpsl
leave
inc
in
xor
call
in
lock
cmp
mov
gs
jecxz
push
clc
stos
fstl
aaa
adcb
enter
jnp
mov
mov
and
and
jmp
fimuls
icebp
icebp
addr16
sbb
sub
cmp
fistpll
mov
dec
test
mov
jb
mov
jnp
mov
push
sbb
out
insl
addr16
cmp
mov
div
cmpsb
das
nop
sbb
mov
sub
push
pop
mov
push
mov
pop
inc
mov
adc
pop
scas
jbe
cmp
pop
dec
pop
out
inc
push
adc
cwtl
and
cmp
xchg
jns
movsl
xchg
xlat
shlb
pop
mov
push
cli
jp
pop
mov
and
pop
add
sbb
addr16
mov
aas
or
aam
cwtl
jne
out
movsb
add
lods
dec
cmp
insl
imul
mov
or
cmpsl
sub
loope
mov
outsl
pop
pop
inc
xchg
dec
dec
push
jns
jne
sbb
fcom
inc
rclb
jnp
inc
and
jb
sbb
jbe
dec
xchg
in
adc
andnps
pop
sbb
xchg
cmp
lcall
mov
push
xor
mov
iret
scas
imul
and
mov
mov
jne
stc
cmc
enter
cwtl
pushf
xchg
dec
rolb
movsl
pop
pop
dec
ror
pop
clc
xchg
sub
push
outsb
mov
test
xchg
bound
push
inc
xlat
mov
xor
fstpt
jl
cmp
lahf
lock
popf
adc
jmp
stos
xor
test
popa
subl
out
cmpsb
pop
sub
jmp
stos
mov
dec
lcall
mov
adc
loop
or
aad
loop
shr
push
sbb
scas
xchg
or
ljmp
lahf
add
imul
xor
dec
adc
sahf
call
fcompl
lds
pop
xchg
mov
mov
mov
cwtl
sub
test
xchg
imul
iret
adc
xchg
pop
cwtl
jmp
dec
andb
fcompl
or
nop
sbb
mov
inc
outsl
dec
aam
mov
jnp
xchg
in
xchg
sub
inc
sahf
adc
call
lock
jns
sbb
fs
jmp
sahf
aas
dec
xchg
or
negb
lods
dec
mov
adc
test
push
sahf
sbb
scas
bound
jle
xchg
ficomps
sub
lock
js
pop
xchg
jo,pt
push
inc
push
shl
aad
mov
imul
mov
xchg
pushf
add
or
std
nop
out
adc
stos
mov
les
dec
fimull
bound
cmp
mov
loop
cmpsb
cld
mov
popf
popa
cld
into
call
mov
push
sbb
and
int
es
stos
jle
cmpsl
leave
push
fists
popf
cmp
and
cmpsb
adcb
cltd
push
and
mov
mov
mov
push
sub
lock
pop
inc
push
popf
jns
cmp
sub
shll
fcoml
enter
xchg
jmp
xchg
cltd
stc
leave
daa
push
xlat
jns
pusha
rcrb
xor
xor
sbb
dec
cmp
adc
out
lods
int3
sub
push
xlat
int3
add
xor
cmp
fs
jg
movsb
repz
mov
add
jle
es
jno
and
jp
xorb
stos
push
sub
mov
shrb
scas
cmp
cwtl
lcall
fnstsw
sub
mov
mov
in
ljmp
dec
js
adc
pop
cmp
ret
lretw
or
cld
pushf
sar
fldpi
jle
mov
jg
cmp
inc
jecxz
push
cmpsb
mov
sahf
ret
xor
lock
xchg
jb
loope
dec
idiv
mov
pop
add
fildll
pop
xchg
cmpsl
xchg
and
lods
lret
mov
mov
mov
clc
dec
xor
xlat
aaa
test
daa
jecxz
lds
xchg
lahf
stos
inc
rcr
push
mov
or
enter
mov
and
sbb
fisubrl
pushf
js
adc
inc
negb
and
stos
call
push
cmp
or
adcb
cmc
dec
insl
lock
cwtl
divb
lods
js
push
xor
xlat
leave
scas
inc
add
gs
outsl
and
jl
lods
xor
jmp
add
xchg
xor
outsl
js
or
daa
shrb
inc
cwtl
enter
pop
lock
sub
aas
loop
adc
push
rclb
mov
cmc
jg
pop
ljmp
sub
ja
inc
stc
aad
jl
pop
ficoms
outsl
and
icebp
mov
pop
push
mov
jb
jecxz
nop
loopne
fisubrl
dec
jl
int
movsl
ds
mov
or
cmp
leave
fld
imull
fwait
rcrl
fmulp
test
jnp
mov
aam
pop
jmp
pop
imul
mov
fwait
pop
jge
aam
xchg
jge
cmp
pop
cs
inc
xor
aam
hlt
mov
pop
pop
int3
mov
in
pandn
cld
dec
jg
mov
cmp
dec
sub
pop
pop
xlat
out
shl
or
cmp
pop
sbb
sub
sarl
test
int
es
daa
lret
push
loop
pop
popa
je
int
sub
lds
xchg
cmpsl
mov
push
pop
mov
and
inc
pop
imul
outsb
jbe
jl
dec
cwtl
daa
mov
mov
inc
out
mov
mov
lret
test
mov
xchg
inc
and
sbb
mov
pop
mov
movsl
ds
lret
and
scas
repnz
cmp
xor
addr16
adc
or
cmp
mov
mov
cwtl
mov
pop
sub
jmp
push
pop
mov
cld
pop
inc
incl
stos
rcr
xor
push
repz
nop
sahf
push
cmpsb
mov
add
xor
push
popf
adc
push
adcb
ljmp
and
sbb
xchg
movb
cli
les
fstpt
lret
sarl
xor
stos
xor
rcrb
or
imul
push
stos
cmp
insb
arpl
mov
dec
pop
xlat
or
rcll
leave
xchg
fwait
push
sbb
jne
cwtl
arpl
push
sbb
jae
pop
out
mov
or
js
push
outsl
les
lea
mov
xor
mov
jp
pextrw
mov
or
push
mov
shrl
fdivs
mov
push
pop
ljmp
push
and
mov
mov
movsl
mov
je
adc
cwtl
inc
pushl
aam
push
in
inc
push
sbb
xchg
scas
sub
enter
cwtl
jno
cmc
ret
or
ja
fsubrl
in
stos
add
dec
imul
ss
fcompl
sbb
jnp
push
mov
inc
sbb
inc
dec
dec
pusha
push
sub
add
dec
out
pop
sub
addr16
andl
daa
mov
into
xchg
inc
push
loopne
sti
les
fisttpll
push
roll
mov
subl
push
sub
mov
popa
mov
arpl
mov
loope
add
or
ret
test
and
push
arpl
xor
mov
mov
and
and
pop
sbb
push
pushf
jne
cld
push
notl
sbb
inc
rolb
int
pop
xlat
pop
out
repz
mov
std
pop
inc
test
mov
mov
jno
jge
push
in
jge
lahf
push
mov
xor
call
mov
negb
sbb
rclb
outsb
push
ja
push
aas
push
repz
jmp
js
bound
inc
aaa
mov
jle
lret
into
std
aam
outsl
sbb
mov
enter
cmp
std
in
stc
jnp
inc
repnz
pop
xchg
popf
push
mov
or
jl
pop
dec
sar
push
cltd
inc
cmp
or
dec
ja
jae
add
sub
push
adc
aas
jp
mov
ja
jle
sti
or
popf
nop
cmc
xor
addb
jecxz
dec
cmp
fbld
pop
push
mov
jp
sub
inc
scas
inc
int
fldl2e
ja
imul
push
sti
adc
pop
cltd
repz
push
push
into
mov
push
inc
push
hlt
in
or
test
dec
icebp
pop
adc
or
pop
adc
and
push
inc
cmc
push
shlb
jo
and
lods
xor
test
mov
inc
addb
popa
mov
idivb
pusha
iret
add
xor
push
scas
push
int3
cmp
xor
sbb
fwait
jne
or
mov
andb
fsubs
sub
pop
jne
imul
jb
jecxz
jp
mov
call
es
dec
js
inc
or
mov
xorb
pusha
mov
xor
fs
pop
xor
xor
lea
push
mov
jg
lret
xor
dec
dec
lock
int
pushf
inc
mov
ja
mov
sub
jle
mov
sub
lods
rcl
and
in
bound
andb
orl
lock
sub
fwait
mov
shl
lods
sbb
mov
sbb
stc
pop
cmc
jo
pop
ret
pop
loopne
clc
pushf
inc
inc
popf
jl
ss
jnp
call
adc
addr16
fld
inc
rcrb
loopne
insb
data16
in
pop
cli
loopne
gs
daa
inc
mov
adc
test
aam
pop
cmc
mov
dec
clc
ret
lret
ret
dec
cld
pop
stos
add
cli
es
mov
pop
ljmp
dec
notb
xor
lret
push
sub
imul
mov
inc
les
push
in
ret
aas
sarl
push
lcall
out
mov
cltd
or
mov
jmp
xor
inc
fidivrl
pop
sub
loope
xchg
pop
sbb
call
mov
imul
fcomps
sub
ret
mov
jge
out
inc
pop
sub
xor
sbb
and
jns
shll
mov
inc
sti
mov
mov
roll
mov
dec
scas
ljmp
popf
mov
neg
adc
loopne
push
xlat
scas
sub
imul
ret
movsl
cmc
rcll
xchg
stos
pushf
or
je
fldt
add
in
sub
and
xchg
mov
push
mov
jb
es
sub
popf
jg
xchg
leave
xor
and
into
cmp
daa
inc
mov
add
mov
or
dec
test
out
cmp
ret
scas
test
movsl
in
scas
push
adc
mov
stos
xchg
bound
mov
jb
jmp
ljmp
aad
or
sti
fistpl
jae
cmp
jle
xchg
jmp
movsb
dec
xchg
dec
cld
add
and
in
mov
mov
xor
dec
mov
int
loope
xchg
mov
xor
mov
xor
sub
add
cmpsb
dec
fs
call
dec
dec
dec
inc
or
xchg
add
sbb
xchg
lret
or
dec
shlb
add
addr16
lret
sub
popf
in
je
lea
push
mov
mov
out
jp
fldenv
gs
mov
pusha
and
mov
jp
lds
and
fnstsw
dec
mov
push
mov
repz
fwait
push
pop
fisttpl
ret
pop
mov
mov
out
loop
cmpsb
ds
ja
jno
movsb
cmc
cmp
mov
dec
ljmp
stc
xor
imul
cmp
lods
mov
xor
stos
fnstcw
int
sub
aam
adc
jmp
dec
push
mov
or
insb
mov
or
or
in
mov
ret
loopne
mov
xchg
inc
imul
insl
or
ss
jno
sub
sbb
stos
jp
push
sub
xchg
pop
test
fdivr
fwait
push
dec
dec
mov
call
xor
stos
clc
lea
mov
jp
xchg
pusha
cmp
test
repnz
pop
inc
lods
mov
je
mov
sub
jbe
test
or
test
mov
mov
pop
hlt
scas
mov
loope
push
mov
and
add
jo
insb
lock
fidivrs
loop
pusha
rcrl
inc
inc
push
inc
add
stos
lahf
pop
lret
cmp
out
lock
sti
pop
aaa
mov
or
or
ds
mov
inc
xchg
fidivrs
mov
add
fists
ja
loope
mov
fildl
jecxz
mov
sbb
mov
lods
out
cmc
mov
xor
sbb
test
fiadds
mov
dec
in
and
or
push
notb
mov
lea
aaa
repz
mov
push
mov
sbb
sub
mov
sub
mov
push
xor
push
cltd
cmp
ret
push
addr16
xchg
xlat
sarl
movsb
lret
repz
and
fdivs
mov
push
fucomi
rcrl
je
xor
es
push
push
jg
or
sub
ret
lods
dec
movb
lcall
sbb
push
lea
das
add
xlat
mov
jmp
inc
or
in
cld
out
xchg
xchg
aam
xchg
cmpsb
out
ljmp
imul
imul
mov
add
and
aaa
lods
or
mov
dec
loopne
int3
push
sub
sahf
dec
pusha
daa
sub
or
and
cwtl
outsl
dec
sub
pop
ljmp
ret
sub
subb
lret
shll
ljmp
adc
stos
mov
jno
fcoms
push
lea
lods
xchg
fsubr
into
mov
in
cltd
sbb
daa
cmp
pop
popa
push
pop
cmpsb
mull
and
sbb
arpl
and
mov
imul
xchg
arpl
sbb
aaa
pushf
out
insl
int3
add
lock
push
cmpsb
push
adc
repnz
xchg
inc
stc
mov
cld
jge
jae
in
and
pop
or
ret
scas
xchg
and
iret
pop
push
xor
jae
dec
popf
xor
or
mov
rolb
sbb
lahf
jge
out
cmp
adc
les
xchg
arpl
test
mov
and
push
jne
iret
jnp
clc
jl
rcrb
or
xchg
out
int3
sub
stc
add
aam
sub
stos
mov
nop
sbb
dec
arpl
pop
push
daa
xchg
and
cmp
or
push
imul
mov
cmp
sub
imul
inc
add
repnz
cmc
scas
cmp
xor
shrb
mul
rolb
pop
popa
ficoms
mov
dec
push
xchg
test
out
out
leave
roll
lea
pop
hlt
aam
adc
or
xor
xchg
xlat
jbe
push
xor
mov
xor
cli
js
ja
adc
das
cwtl
lods
pop
cmpb
xchg
dec
sub
lock
xor
gs
sub
pop
or
iret
dec
ja
decb
or
setae
push
ljmp
icebp
xor
jl
adc
inc
jb
sbb
mov
add
lret
xchg
xchg
rcrl
xor
lods
scas
inc
or
jbe
pop
stos
cmp
sub
popa
xchg
mov
sbb
lods
cmp
pop
aaa
gs
lea
push
out
movsl
aas
fcoms
js
in
jecxz
pushf
or
movsl
popa
add
mov
pop
popa
dec
sahf
pop
xor
jb
cwtl
stos
fldt
mov
mov
outsl
mov
pop
stos
fwait
xor
inc
rep
into
scas
cmp
fwait
dec
mov
imul
xchg
xchg
pop
or
ja
dec
inc
push
add
cmc
mov
je
cmp
add
pushf
xchg
add
pop
and
jle
jbe
mov
data16
inc
outsb
icebp
mov
xlat
adc
mov
push
push
repnz
data16
dec
jmp
mov
add
insb
mov
dec
push
mov
add
pop
add
rcrl
insl
movaps
fiaddl
push
imul
cmp
pop
insl
push
jnp
lret
popa
prefetch
or
roll
les
lea
push
out
xor
and
mov
pop
xchg
jl
xchg
mov
xchg
lret
jg
arpl
or
cli
jecxz
subl
sarl
leave
adc
mov
sub
xchg
ret
mov
xlat
and
fidivrs
and
mov
add
add
fcoml
test
test
push
push
jge
pushf
cs
loop
outsb
leave
jb
jns
fnstenv
fcoml
jp
scas
pop
rcrl
insb
orps
jne
mov
mov
out
dec
shrl
xchg
pushf
hlt
or
and
jns
inc
imull
ret
jmp
jmp
xor
pop
mov
xchg
icebp
test
aad
lcall
xchg
mov
clc
gs
fcmovnbe
jnp
cmp
insb
and
in
sbb
jb
push
adc
pop
rcrl
mov
stos
imul
cmp
aad
scas
aas
movsb
cli
data16
mov
jle
adc
mov
and
mov
xor
jae
xchg
xchg
cli
ljmp
stos
ljmp
jg
aaa
daa
fdivs
pop
roll
or
xor
jnp
push
push
mov
jmp
sub
in
divb
push
mov
mov
adc
jle
sahf
lock
outsb
into
imul
xchg
mov
push
jno
insb
orl
aaa
cmp
sti
and
out
ljmp
repnz
or
cmp
mov
je
add
inc
fs
pusha
movsb
js
ret
cltd
jb
in
or
fldenv
and
aad
iret
and
cmp
lock
in
cmp
or
adc
das
mov
jbe
cmpsl
cmp
lret
ss
negl
inc
out
cmp
fildll
fcoml
test
sbb
sti
notl
into
push
mov
imul
test
aaa
mov
cltd
push
in
dec
es
movl
stos
sbb
ljmp
fisubrl
push
inc
arpl
fidivrl
subl
xor
lea
add
dec
lods
jns
pop
lods
ja
nop
mov
mov
jno
push
rorb
mov
out
fsts
xchg
xchg
inc
insl
add
cwtl
push
xor
icebp
fstpl
shrl
mov
mov
imul
xor
jno
pop
insl
fldenv
jmp
mov
shll
jbe
xchg
push
insl
push
fs
in
add
sub
cmpsb
scas
cmc
add
jp
add
dec
push
push
stos
aad
dec
cmp
mul
and
idivl
dec
popa
call
mov
adc
in
pop
push
xor
in
out
loop
mov
pop
enter
shll
faddl
pop
stc
movsb
aaa
mov
test
mov
xchg
push
outsb
jo
jmp
lods
ds
clc
ret
xor
fisttps
inc
push
out
cld
aam
xchg
enter
push
in
loope
iret
jne
push
mov
and
jne
shrb
movsl
shrb
leave
inc
xchg
stos
and
sahf
pusha
ret
jnp
fistpl
push
add
out
fadd
cltd
aam
scas
adc
addr16
sbb
xor
lds
mov
popa
repnz
imul
inc
mov
ret
lods
pop
mov
cmp
ljmp
outsb
push
push
xchg
dec
sbb
loop
adc
popaw
push
jnp
stos
dec
xchg
pop
js
lahf
scas
testb
cli
add
jg
in
mov
inc
addr16
pop
aaa
stos
jno
xchg
add
and
sbb
sub
mov
int
into
add
test
jle
pop
or
les
sub
test
pop
paddb
add
dec
pusha
pop
xor
fadds
notl
mov
int3
add
jne
js
adc
mov
pop
add
mov
out
mov
sub
mov
sbb
xor
pop
push
or
in
jo
push
mov
push
es
xchg
imul
arpl
out
ja
lods
lods
pop
iret
pop
out
and
and
pop
mov
or
and
jecxz
or
arpl
xchg
fwait
jmp
mov
test
cwtl
push
add
addb
inc
mov
shrb
mov
in
call
shrl
in
int
mov
mov
adcb
frstor
cs
sub
mov
or
fnstsw
adc
pop
insl
fisubl
xchg
and
setge
aas
out
lds
stc
in
mov
mov
mov
adc
mov
mov
addr16
jl
lahf
push
daa
adc
push
push
xchg
rcll
push
pop
mov
pop
aad
mov
out
or
xor
sub
cmc
push
and
pusha
xor
jmp
xchg
mov
clc
int
lahf
std
mov
dec
imul
xor
hlt
and
pop
sbb
dec
sbb
and
mov
cs
lods
je
bound
mov
in
rcr
in
pop
pop
leave
sbb
inc
or
imul
xchg
and
mov
mov
jne
pop
mov
jl
je
sub
out
nop
out
mov
dec
or
sub
dec
lret
std
mov
aam
sub
mov
push
daa
sub
sti
jns
movsl
push
pop
andl
adc
stos
push
pop
adc
push
adc
bound
mov
mov
add
stos
fcomi
xchg
mov
xor
loopne
mov
icebp
xchg
xor
jb
lds
orl
xor
jns
lea
icebp
jne
pop
int
sbb
pushf
test
xchg
scas
jbe
inc
leave
pop
jmp
fdivrs
out
popf
mov
loope
dec
cmpsl
xchg
popf
dec
out
xchg
xchg
ds
hlt
or
mov
mov
call
mov
test
ljmp
pusha
and
sti
nop
jge
das
inc
inc
push
in
loope
cmp
insl
pop
mov
je
movsl
xor
and
orb
xchg
lahf
cld
sbb
sbb
xor
je
std
jno
inc
test
cmp
mov
push
mov
rorl
pop
xchg
mov
inc
jo
sub
lods
stos
sub
insl
pop
das
push
inc
push
add
icebp
insl
jnp
xor
cltd
push
lock
test
or
pop
test
xlat
dec
jmp
and
dec
enter
aam
icebp
scas
dec
out
leave
aad
shll
pop
lods
repnz
leave
sub
imul
into
push
out
std
nop
pop
clc
pop
cwtl
fnsave
pop
movsb
pop
mov
outsl
dec
loopne
and
push
test
add
add
lret
outsb
mov
jp
jae
cmp
dec
push
mov
inc
clc
lods
js
mov
fimull
in
xlat
movsl
inc
lock
adc
movsb
jb
enter
push
scas
xchg
pop
xchg
sarb
dec
add
mov
xchg
popa
out
cwtl
scas
ss
jae
push
sarb
ret
xchg
nop
xchg
mov
and
xchg
dec
ja
gs
cld
jns
push
pop
std
jecxz
mov
or
mov
cmp
mov
push
xor
aas
fsub
int3
sbb
add
or
jp
mov
fucomip
lcall
push
add
mov
je
rcll
pop
dec
dec
mov
lret
adc
cmc
jp
ret
and
das
jmp
or
nop
xlat
cmpsb
dec
repz
cmp
sbb
aas
lea
test
nop
cmp
mov
enter
pusha
fidivs
dec
pop
in
add
mov
test
push
es
in
inc
je
cmp
or
push
pop
cld
lods
into
inc
out
movsb
stos
filds
ret
mov
cmp
mov
sbb
test
xor
jp
inc
pop
and
cmp
sbb
jmp
dec
jmp
pop
sub
popf
adc
jo
and
insb
lea
xchg
jns
xchg
notl
xor
lahf
fldcw
xchg
or
jnp
dec
sti
add
adc
sub
cmp
stc
jne
mov
mov
pop
cmp
loope
and
mov
popa
fisubl
jmp
add
push
xor
addr16
outsl
adc
jbe
popa
mov
pushl
sub
dec
insb
cld
jmp
pop
gs
pop
ds
xchg
fwait
mov
jns
faddl
mov
jnp
movsl
frstor
rcrl
mov
stos
inc
push
fs
fdivs
cmp
and
ja
add
ret
xchg
push
jecxz
in
inc
xchg
test
and
pushf
divl
sub
stc
sub
xlat
dec
aad
push
jno
scas
or
xchg
mov
leave
cmpsl
das
gs
loope
shll
mov
add
lret
dec
call
xchg
cltd
adc
add
push
inc
pop
or
cmp
mov
cmp
and
fsubrl
mov
add
dec
push
std
imul
pushf
or
xchg
inc
popf
jnp,pn
mov
mov
jo
inc
xor
fsubl
jb
cli
inc
adc
insb
pusha
lcall
shl
nop
daa
sub
outsl
pusha
ds
and
pop
sbb
stc
mov
sahf
pop
jbe
shl
shlb
or
sub
sub
sub
dec
lds
push
or
dec
in
xlat
rclb
pusha
inc
jo
in
fdivp
mov
cmp
mov
mov
fdivrs
ss
out
sub
shll
jno
lcall
jne
pop
mov
cmp
out
cvtpi2ps
and
jne
push
hlt
push
dec
jmp
mov
dec
xor
aam
out
jmp
adc
fmul
js
inc
rclb
jge
sbbl
iret
and
inc
cltd
dec
repz
adc
in
mov
inc
mov
addr16
and
mov
insb
ret
pop
test
mov
pop
xchg
jnp
pop
std
add
push
ja
rcll
gs
cli
dec
scas
push
push
adc
imul
mov
and
jnp
sub
adc
dec
push
mov
addr16
cwtl
imul
sbb
lret
stos
outsb
mov
xor
fnstcw
ret
scas
mov
addr16
ficomps
sar
cmp
mov
pop
cmp
sbb
cmp
aad
pop
ja
outsl
xor
arpl
xchg
aaa
repnz
xchg
jae
xchg
dec
repz
add
jecxz
cli
add
adc
in
shlb
add
sub
or
mov
and
cs
push
pop
fidivl
xor
scas
or
push
push
gs
cmp
xchg
cmp
cmpsl
repnz
stos
or
pusha
sbb
xlat
pop
jg
dec
popf
and
nop
sub
test
stc
fidivrs
shld
shll
sahf
out
divb
jne
shl
int3
mov
andb
dec
dec
cmp
pusha
aad
test
es
popf
and
out
jns
dec
adc
out
push
test
or
jbe
pop
or
imul
les
cmp
mov
dec
add
or
cwtl
or
aam
fidivrl
pop
add
es
repz
fmul
ret
jg
enter
ss
jg
and
fwait
mov
mov
and
add
out
inc
aaa
and
bound
shll
cmp
jns
pop
movsb
cmp
sbb
sub
fisttpl
or
iret
mulb
outsb
add
mov
in
push
int3
sbb
adc
mov
imul
fcmovbe
jg
mov
mov
scas
cmp
je
cmp
ljmp
xchg
cmc
adc
and
int3
daa
cmp
xchg
aad
es
sbb
fucomip
ficoml
incl
cmp
imul
je
mov
inc
add
jbe
test
out
inc
xchg
lods
mov
xchg
sbb
or
pop
add
nop
aad
push
sub
subl
aaa
dec
push
pop
cmpsl
lock
lea
and
loope
lods
pop
in
enter
pop
jle
cli
pop
call
shrl
and
lock
mov
aad
je
cmp
add
in
sub
xchg
xlat
adc
or
dec
hlt
jle
push
in
jns
ds
adc
cmp
xor
je
shl
or
or
adc
repnz
jbe
shr
mov
xchg
scas
pop
shl
ss
iret
or
daa
shlb
mov
push
adc
and
scas
and
xchg
mov
and
and
movb
jo
cltd
iret
fs
xor
mov
jb
repz
icebp
cmp
jecxz
rep
xor
pop
or
daa
repz
pop
fsubl
sub
jae
jmp
add
dec
cmp
pop
pop
ss
lret
daa
fnstcw
cld
lahf
fs
sub
ret
jp
jecxz
fldl
lock
loopne
fwait
sub
jbe
sbb
push
lcall
dec
push
dec
stos
cmpsl
pushf
test
bswap
decl
pop
pop
stos
sbb
lahf
iret
test
bound
out
mov
or
fs
mov
dec
push
fmuls
in
das
push
push
fs
jo
cld
mov
aad
mov
and
leave
or
mov
repz
pop
loope
in
sbb
sub
push
push
loope
dec
sar
call
call
lahf
js,pn
jecxz
inc
xchg
dec
int
lret
add
enter
decb
mov
inc
lea
iret
mov
mov
xchg
mov
imul
dec
ss
xchg
mov
lahf
cmp
out
mov
push
call
popa
xchg
dec
add
mov
cld
lret
sub
cs
xor
call
adc
or
mov
lds
pop
pop
dec
sbb
std
or
out
dec
push
sub
je
icebp
bound
cmp
jecxz
out
lcall
outsl
stc
scas
sbb
rclb
iret
repz
mov
mov
pushf
jno
sbb
xchg
mov
out
aad
dec
ret
jbe
push
addl
push
in
insb
pusha
ds
fbld
push
mov
jae
mov
movb
xor
and
mov
sbb
aaa
or
fisttpl
ds
mov
dec
adc
cmpsb
in
pop
pushf
popf
andb
lret
fwait
popa
mov
lret
fmul
out
pop
fbstp
pop
jp
ss
jmp
in
cmp
mov
ss
add
cmp
sub
or
out
pop
ror
sbb
push
and
jecxz
and
mov
push
arpl
pop
stos
pop
xchg
sbb
sub
rcrb
ja
insb
mov
stos
xchg
sub
arpl
bound
flds
push
clc
fwait
sbb
cld
push
pop
mov
imul
ret
xor
and
or
pop
cmpsb
aam
mov
mov
add
add
ja
mov
jb
pop
jmp
sub
inc
sub
xchg
in
test
push
lods
std
hlt
push
lock
mov
push
jl
mov
mov
or
pop
scas
xor
lcall
negb
cli
pop
mov
push
mov
jecxz
sub
add
xor
cmp
mov
cmp
pusha
rcrl
inc
pop
mov
mov
push
std
mov
andl
popa
repz
movsl
and
iret
cs
fwait
mov
lods
pop
rclb
stos
ror
push
cmp
aad
outsb
fidivrs
cli
rclb
lret
mov
sub
adc
scas
sub
cmp
rcl
clc
loop
sti
jle
outsb
push
mov
cmp
mov
and
pop
orb
or
xchg
push
pop
decl
mov
popf
mov
pop
sbb
or
orl
inc
and
mov
inc
cmpsl
and
jp
and
cs
xchg
scas
pop
aad
mov
and
mov
cld
jnp
cmp
jmp
fimull
sbb
lock
in
int
xchg
pop
or
loop
lock
fcmovnbe
sbb
outsb
dec
mov
cmpl
jns
jo
lea
rcl
mov
test
fwait
jle
insl
add
dec
imul
add
jne
pop
shlb
and
ficompl
icebp
push
mov
push
outsb
in
popa
add
jno
call
testl
push
adc
mov
fs
or
cmp
out
push
ret
movsl
dec
xchg
stc
and
in
push
jbe
mov
dec
inc
sahf
ret
jae
inc
das
jno
and
push
in
cli
lahf
push
push
jle
mov
cmpsb
fdivl
ds
xor
pop
insl
mov
bound
dec
dec
ss
scas
cltd
cwtl
lock
imul
jle
repnz
std
test
mov
popf
punpckhwd
lods
jl
mov
insb
int3
movsb
dec
and
hlt
into
aas
xor
in
and
rcll
negb
data16
cmp
jg
outsb
jne
into
rcrb
jmp
xchg
pop
and
lods
pop
xchg
add
in
and
mov
xor
hlt
test
sbb
stos
ficomps
xchg
imul
xchg
mov
stc
pusha
movsb
and
add
popa
pop
sub
andb
xor
sub
popf
fcmovne
nop
jmp
shrl
pop
mov
in
jl
fildl
inc
jecxz
inc
daa
fisubl
jo
jae
mov
and
or
loopne
stc
inc
pusha
mov
rcr
fisubs
push
cmp
jecxz
stos
dec
inc
cwtl
aas
xchg
fmull
rol
sbb
cmp
xor
jecxz
into
movntps
js
sbb
dec
je
cmp
popf
ror
aam
jo
repnz
or
add
mov
push
sbb
pop
and
mov
sti
sar
test
loop
xor
int3
or
mov
fdiv
xchg
pop
push
and
les
test
adc
xchg
add
fs
addr16
std
sbb
and
adcl
pop
aam
icebp
lods
popf
or
sbb
clc
cs
inc
les
jbe
out
movsl
adc
loop
insl
jno
mov
pusha
in
ret
inc
or
je
dec
jg
lcall
rcr
pop
stos
mov
push
fwait
sbbl
push
pop
and
adc
cltd
dec
sub
adc
fwait
nop
xchg
insb
ret
xchg
and
test
pop
test
mov
mov
stc
mov
add
inc
cltd
push
test
stos
and
and
mov
or
cmp
mov
mov
sub
jl
enter
mov
je
cltd
mov
fdivl
xchg
mov
mov
mov
fwait
dec
inc
or
loopne
ret
cmpsb
shrb
xchg
in
mov
push
push
testb
dec
mov
mov
mov
push
xchg
mov
subb
dec
adc
jne
gs
fmul
imul
pop
or
test
mov
mov
fnstenv
adc
xor
sub
sub
push
fldl
lods
mov
insl
ficomps
pop
add
pusha
xor
xchg
mov
cmp
or
add
add
clc
mov
into
push
test
xor
mov
push
mov
cltd
or
daa
call
pop
in
das
and
test
dec
dec
out
inc
sbb
dec
std
xchg
arpl
inc
xor
lds
imul
out
sti
mov
ret
jae
push
xlat
cmp
add
push
pop
add
in
cwtl
push
inc
leave
mov
pusha
xlat
in
stos
and
aas
lcall
fdiv
adc
add
rol
sarb
and
cmp
dec
repnz
inc
xchg
jp
ret
into
pop
push
push
sub
fwait
jne
and
mov
call
clc
movsb
cmp
add
pushf
fstpl
push
sbb
shrl
hlt
pop
ficoms
sub
cld
daa
push
sbb
lock
push
test
sarl
cmp
and
mov
mov
inc
inc
xlat
mov
add
and
sub
rcl
into
out
ja
jmp
aad
aam
into
pushf
fldl
or
int
decb
fidivrl
inc
mov
cmp
std
xor
mov
dec
jne
pop
stc
or
jle
sarl
and
aam
jmp
sti
stos
add
inc
and
mov
ret
pop
push
jle
jo
negb
lahf
jp
mov
movsl
std
fmuls
push
inc
mov
sub
mov
xor
add
pop
in
iret
lock
test
inc
leave
jo
pop
cltd
pop
js
dec
fcmovbe
and
xor
cltd
jne
mov
sbb
out
mov
mov
pushl
test
aad
roll
lods
jnp
mov
popf
mov
mov
repnz
push
cmpsb
cltd
mov
test
inc
in
mov
mov
or
xchg
addr16
jns
push
dec
cmp
in
mov
xchg
push
in
test
dec
outsl
xchg
push
push
mov
lods
mov
scas
xor
jne
push
sahf
jmp
jb
out
dec
cmp
pop
pop
push
loop
inc
sbb
mov
push
pop
jbe
in
inc
cmp
mov
lds
inc
cmpsl
int
in
mov
ret
lds
in
icebp
jne
mov
inc
add
rolb
int3
fidivrs
enter
imulb
mov
subb
jno
xlat
fcmove
mov
pop
je
sysret
iret
dec
mov
sub
ss
movsl
and
fdivrs
dec
jmp
inc
gs
xchg
inc
mov
mov
and
cvttss2si
fnsave
out
push
arpl
jp
test
loop
cmp
dec
dec
scas
mov
imul
sbb
or
leave
clc
in
lea
shlb
pop
cmp
cmp
inc
stos
add
pop
push
adc
jno
loope
lods
es
popa
aaa
icebp
mov
jae
lahf
insb
adc
das
daa
out
and
pop
sbb
add
sbb
jmp
inc
cmp
mov
add
jnp
call
pop
popa
mov
out
add
sahf
adc
ret
cmp
adc
or
iret
or
fsubrl
ret
enter
addr16
fidivrs
dec
mov
mov
rcll
fdivs
fcmovnu
pop
inc
rclb
push
jmp
test
push
jecxz
inc
mov
popl
pushf
lods
scas
inc
xor
xor
inc
loop
mov
loop
push
inc
out
leave
cmp
pop
dec
inc
jno
shrb
test
push
and
mov
adc
rorb
or
cmpb
sub
xor
out
mov
mov
xchg
xor
cmpsb
cmp
bound
dec
jno
negl
aaa
fs
aaa
pop
pop
inc
mov
into
mov
lret
push
add
cmp
arpl
xchg
cmp
fldpi
sub
xor
bswap
or
call
jno
into
mov
movsl
mov
xchg
sub
inc
std
fmull
dec
repnz
sbb
xchg
sbb
rcll
push
aas
popf
mov
xor
push
mov
pop
std
lds
pop
rclb
mov
add
dec
inc
lods
and
push
in
fildl
loopne
xchg
enter
in
inc
fistl
or
ss
add
adc
push
fcoml
daa
push
cmp
push
add
lret
jbe
insl
adc
mov
js
jge
pop
shrl
push
int
sub
sbb
lret
push
pushf
ljmp
sbb
xor
fs
push
pop
mov
int
jno
mov
lods
cmp
sbb
lds
add
pushf
imul
mov
adc
dec
sbb
loop
pusha
xchg
cltd
mov
jl
movsl
ss
mov
addr16
ljmp
test
jl
or
jecxz
test
mov
arpl
scas
inc
mov
and
jecxz
adc
xchg
sarl
aaa
popa
cwtl
mov
mov
push
jmp
push
dec
cmpsb
ja
inc
inc
xor
pop
pop
inc
or
cmc
xchg
test
popa
cmp
xchg
push
inc
mov
add
xorb
adc
push
ja
mov
adc
cli
pop
loopne
loopne
and
adc
mov
lds
push
xlat
sti
inc
pop
adc
jno
pop
stc
fnstsw
out
xchg
sbb
dec
sub
je
je
pop
mov
fidivrs
mov
call
rclb
cmc
inc
xlat
popf
out
repnz
pop
xor
lods
sub
in
cwtl
push
jle
sti
xor
cmp
cmp
mov
cmpsb
sub
pop
fst
in
sahf
sub
push
add
dec
int
and
adc
cmp
and
cli
sub
add
arpl
jne
or
mov
js
adc
or
outsl
mov
call
inc
lea
testl
iret
cmp
adc
bound
dec
jo
dec
mov
push
cmp
sti
je
mov
push
fs
mov
add
leave
sbb
test
mov
add
aaa
pushf
es
dec
jno
clc
mov
push
sub
sti
or
cld
push
leave
scas
push
inc
fwait
imul
mov
in
cmp
cltd
dec
xor
jmp
pop
sub
in
negl
jle
out
test
sub
test
lods
popa
cmpsb
cmc
push
scas
ja
xchg
sub
xor
jno
xor
sti
icebp
fs
or
mov
jae
int3
movsb
sbb
in
jae
lods
push
mov
popf
push
insb
dec
mov
int3
out
dec
movsb
xor
xor
cmp
push
cwtl
in
mov
test
ja
mov
pop
lret
and
mov
mov
sbb
jns
fnstsw
mov
insb
push
je
pop
sub
adc
mov
xchg
out
mov
cmp
cmp
cmp
lock
push
pusha
fcomp
notb
inc
arpl
bound
cmpsl
inc
fwait
mov
lods
xchg
ja
mov
pusha
int
pop
lret
push
sbb
sub
sahf
mov
sbb
adc
inc
push
es
fwait
inc
imul
hlt
add
mov
icebp
mov
push
push
ljmp
push
shl
and
roll
not
xchg
lock
test
jne
cmp
addr16
adc
add
inc
ret
imul
mov
rclb
fstl
sbb
stc
adcl
mov
lock
hlt
stc
stos
sahf
daa
mov
mov
add
xor
sbbb
mov
and
cmpsb
sub
ljmp
iret
jne
cmp
sarb
in
cli
insl
jp
mov
pusha
mov
dec
xchg
std
mov
sti
inc
mov
adc
mov
pop
mov
sti
mov
daa
pop
add
ret
adc
aaa
sub
frndint
sub
inc
mov
push
mov
pop
rorl
lahf
loopne
xchg
mov
lcall
iret
out
mov
ja
repnz
imul
jae
pop
in
dec
js
fwait
sub
sub
and
imul
fs
movsb
and
data16
test
sub
mov
mov
std
or
enterw
ds
pop
inc
in
fidivs
xor
scas
dec
jge
outsb
jae
pop
cmpsb
lret
aaa
push
loope
xor
inc
mov
loopne
fisubrs
leave
xchg
pop
sub
xchg
cmp
jg
out
movsb
dec
and
push
cmpsb
adc
mov
cli
jle
mov
pop
in
stos
xchg
rcrb
shll
das
and
sub
jne
xchg
sahf
out
add
dec
add
cmp
rol
and
bswap
pop
mov
xchg
std
or
mov
test
cmp
rcll
cmpsb
js
add
and
pop
stc
dec
movsb
pop
addl
sti
mov
dec
lret
aas
test
test
xchg
imul
test
adc
mov
leave
in
lea
pop
rolb
mov
ds
arpl
jp
daa
inc
mov
pop
push
int
lea
and
mov
ret
andb
mov
sub
cwtl
scas
das
stos
pop
icebp
jge
shl
and
jb
xor
out
mov
jnp
mov
adc
nop
loop
xchg
mulb
pop
je
sbb
pop
jl
mov
fs
ja
nopl
lea
sub
push
fimull
fstpt
jno
fwait
jno
xor
leave
iret
pusha
insl
sbb
cs
jg
lret
push
orb
daa
mov
or
std
sti
xchg
outsb
jnp
std
iret
push
imul
outsl
fcomi
mov
ss
sub
cltd
dec
jp
iret
or
fs
stos
ss
mov
lret
divl
arpl
lock
dec
xchg
jns
xlat
sub
mov
add
xor
cmp
mov
mov
pop
sbb
lret
jmp
imul
imul
sti
rclb
cltd
or
lds
aad
and
rorl
je
push
mov
cmp
mov
mov
xchg
sub
lods
dec
das
jmp
mov
mov
aad
jnp
sbb
add
insl
mov
stc
push
xor
mov
lods
nop
gs
stos
insb
fistpl
push
inc
pop
jno
dec
into
and
sbb
loop
insb
sbb
fdivr
out
adcl
aad
into
loop
mov
in
xor
in
es
jno
insl
ja
cwtl
inc
cmpsl
pop
xor
jns
xchg
shlb
in
sub
xor
mov
ss
inc
imul
add
insl
jl
fiadds
cltd
mov
pop
xchg
repz
clc
sti
inc
sbb
mov
push
call
mov
stos
jecxz
adc
xor
inc
dec
jne
ffreep
pop
test
inc
push
cmp
push
dec
xor
into
push
push
xor
aas
or
push
pop
dec
lret
inc
inc
or
outsl
xchg
jle
int
out
cmp
xorl
sarl
test
jo
xchg
pop
rcrl
rcrb
mov
xchg
pusha
repz
push
fwait
jnp
arpl
dec
sub
cmpl
jae
ljmp
ljmp
fisubrs
inc
push
pop
je
xlat
mov
xor
mov
xchg
pop
shll
les
daa
jecxz
jo
jb
mov
push
daa
testb
add
fsub
cs
sub
dec
cmp
mov
mov
jmp
push
stc
iret
push
mov
cmp
out
ret
push
outsl
mov
pushf
std
cli
hlt
jne
adc
sub
jl
and
imul
les
and
out
stc
je
enter
int3
inc
mov
insb
cld
adc
in
xchg
inc
jmp
lods
loopne
fildl
cmp
mov
inc
or
and
out
xchg
jb
ret
jb
cmp
ret
fisttpll
test
stos
cmp
mov
mov
lds
cmp
or
sti
jne
sahf
jp
pop
inc
cmovl
lds
xor
fwait
sub
inc
mov
mov
jo
push
jg
pop
sti
data16
xchg
jle
stos
int3
sbb
add
mov
jge
lods
int3
repz
mov
sbb
scas
push
rcrb
fidivs
jge
pop
sbb
imul
lods
rclb
sbb
insl
out
into
out
loop
add
aas
dec
mov
stos
loope
pop
cwtl
stos
ljmp
mov
into
into
lret
push
aam
repnz
rclb
xchg
sub
jb
push
cmc
xor
dec
iret
subb
mov
dec
stc
fcos
outsb
jns
jb
push
decb
mov
scas
pusha
bound
cmp
xchg
jo
sbb
jge
clc
xchg
call
lods
add
sub
push
add
sbb
iret
and
imul
add
dec
fistpl
repnz
lods
aas
inc
enter
or
add
cmpsb
das
and
ret
lcall
sahf
push
clc
cmp
mov
fdivl
divl
inc
shll
sub
pushf
clc
roll
mov
inc
fstl
mov
loopne
xchg
adc
or
pop
and
ja
adc
xchg
data16
mov
ret
jl
iret
cmpsb
lahf
jg
push
call
sbb
les
ret
lea
jae
dec
pusha
and
xchg
sbb
sbb
sar
and
jge
cmp
dec
insl
jno
or
push
xchg
in
pop
addl
fidivrs
and
mov
dec
mov
dec
icebp
in
and
jae
popf
sahf
mov
xor
loopne
mov
inc
mov
push
and
in
into
inc
stos
negb
jno
pop
push
mov
xlat
adc
popf
pop
hlt
or
push
xchg
xor
pop
push
jg
xchg
add
out
sub
sub
cmc
sub
mov
inc
xchg
dec
insb
iret
adc
inc
and
sbb
fwait
push
imulb
or
jns
sub
push
les
sub
add
andb
loop
xor
mov
jb
pop
aas
ret
mov
inc
sub
popf
imul
xor
mov
stc
sub
lahf
bound
dec
xlat
adc
mov
ljmp
testl
std
adc
pop
sub
jle
and
sub
push
jl
pop
inc
add
sti
cltd
movsl
dec
mov
mov
flds
add
fwait
mov
cmp
es
aaa
nop
mov
inc
dec
clc
fcmovbe
addb
cld
out
sbb
or
sub
push
adc
fxch
add
lahf
pop
pop
imul
mov
aam
or
js
nop
test
sub
push
sbbl
mov
add
sbbl
mov
jp
test
shl
adc
andl
xlat
adcl
mov
sbb
xchg
std
mov
movsb
popa
sbb
jmp
mov
sub
and
aaa
jp
fdivrs
mov
mov
push
mov
cmpsl
insl
ja
jne
mov
or
in
ret
sbb
jmp
stc
push
popa
push
jno
scas
imul
fcomi
mov
xor
dec
loopne
bound
lret
outsl
call
xor
out
rorl
rorl
gs
inc
pop
jbe
adc
and
mov
cmpsb
iret
icebp
iret
sar
hlt
sti
inc
movsl
dec
imul
inc
push
inc
lret
and
xchg
daa
sbb
pop
and
push
jge
fcmovne
movl
fbstp
leave
xor
or
jl
and
adc
fisttps
jl
push
pop
gs
dec
jl
jge
sub
cmpsb
ror
ret
inc
mov
test
lds
out
out
push
push
cmp
lahf
lds
insb
imul
ds
mov
addr16
xchg
mov
test
lret
popa
outsb
jb
mov
pop
out
push
xlat
cmp
bound
and
cmc
sbbb
aad
mov
imul
or
push
pop
shrl
jge
inc
in
pop
je
add
sub
cmp
repnz
and
jecxz,pt
mov
test
pop
pop
or
dec
dec
jno
push
jns
icebp
sub
sbbb
cmp
icebp
stos
sbb
aam
inc
mov
sti
mov
mov
add
and
mov
pop
or
or
and
push
aam
jp
ret
rcl
pushl
les
iret
shrl
or
pop
mov
jbe
inc
adc
xor
ss
mov
sub
or
enter
adc
xchg
cmp
cld
std
jl
in
xchg
hlt
imul
fldl
cmp
mov
pop
rcll
leave
jne
out
add
jb
mov
outsb
aas
mov
xor
in
pushf
cli
mov
jmp
and
test
or
sub
mov
or
cld
dec
mov
mov
in
loope
shll
les
xchg
fnstsw
mov
fldenv
daa
fwait
inc
or
ss
sub
in
xchg
sahf
cwtl
je
subl
imul
xor
pop
sub
jne
repz
outsb
xchg
stos
dec
or
cwtl
fidivl
scas
push
movsl
lds
scas
push
mov
fisubrl
mov
xor
sbb
stos
into
out
ret
sbb
pop
mov
xchg
push
call
cli
cli
cs
adc
mov
pop
fwait
imul
xor
push
mov
push
mov
or
test
adc
lret
sbb
and
ret
outsl
adc
ds
lahf
jo
addl
leave
push
add
movsb
mov
scas
int3
insl
mov
popf
mov
cmp
sub
in
rcrb
pop
fistpl
add
sub
and
aam
xchg
add
mov
loopne
shl
imul
in
shlb
fimull
sahf
push
push
dec
fldenv
dec
lret
jmp
mov
cli
push
sahf
pushl
insb
mov
sub
test
aas
inc
out
fimull
push
cli
sub
jns
push
and
or
arpl
jae
sub
lea
into
jb
or
xchg
mov
pop
fidivl
dec
into
mov
xchg
push
xlat
cwtl
mov
mov
repz
std
loop
fidivs
xor
mov
out
data16
dec
push
pop
mov
add
lss
and
sbb
fistl
lds
adc
sbb
pop
or
in
push
jne
leave
sub
jae
xchg
icebp
and
adc
insb
mov
bound
mov
mov
mov
mov
into
out
lahf
in
pop
sbb
mov
mov
mov
and
pop
and
rcrb
cli
jo
sub
xchg
jb
sub
mov
dec
dec
sarl
out
insb
cmpsl
jp
int
ror
lea
mov
and
or
mov
mov
enter
jmp
lods
mov
jle
xchg
mulb
cmp
addr16
scas
out
in
push
add
mov
mov
lock
and
or
sub
insl
inc
cmpsl
sub
adc
out
mov
xchg
hlt
cmpsb
hlt
leave
ss
sub
insb
mov
je
lods
pusha
out
xor
out
je
loope
push
jns
fwait
cmp
frstor
lret
sbb
popf
stos
xor
iret
xor
push
aaa
scas
lret
mov
sub
pop
mov
sub
adc
je
mov
out
into
fiadds
cmp
pushf
pop
push
popf
fdivrl
dec
clc
aam
out
aam
dec
and
jbe
and
xchg
fldcw
jmp
jb
addl
add
mov
inc
es
add
aad
adc
mov
leave
movsb
les
pop
xchg
cltd
mov
decl
fcompl
dec
lods
shl
dec
sub
xor
iret
test
into
xor
pop
fimuls
in
xchg
aad
sbb
push
jmp
test
movsb
jmp
mov
mov
or
aas
test
cmp
sub
mov
cmp
sub
fcoms
and
je
sbb
jne
xor
push
adc
cmp
mov
and
stos
outsl
popa
cmp
sbb
sub
pop
add
fbld
adc
xchg
loope
xchg
and
jp
xor
mov
xor
in
mov
aad
ffree
dec
adc
pushf
xchg
jle
mov
icebp
lcall
out
pop
cmp
mov
push
mov
or
lret
add
enter
pop
std
jns,pt
push
mov
cs
mov
loopne
xor
pop
es
mov
lock
ss
inc
pop
lock
lret
scas
mov
cmp
sti
mov
shrl
or
xchg
stc
push
sbb
jp
push
xor
das
bound
js
test
jbe
xor
or
xor
jno
xor
imulb
sbb
jne
lods
add
fnstcw
ret
mov
mov
je
sub
fs
mov
out
push
icebp
int3
leave
jg
outsl
loopne
mov
cmp
int
push
scas
aam
mov
dec
jns
test
aad
cwtl
stc
mov
stos
scas
jg
jnp
push
xor
mov
dec
loope
sarl
or
rorl
inc
mov
push
adc
xchg
xor
and
jo
cmp
sarl
jae
sub
insl
pop
lds
adc
push
xor
movsb
imul
push
cmpsl
in
ja
movsl
xchg
fwait
lods
into
dec
notb
mov
jecxz
jo
lcall
jb
xchg
mov
adc
push
mov
idivb
sub
mov
pop
mov
ss
dec
add
mov
inc
lahf
dec
outsl
fdivp
hlt
lods
sbb
jbe
ret
daa
shll
inc
nop
xchg
push
jns
jmp
jnp
cmpsl
dec
xchg
sub
mov
int
jo
out
xchg
cmp
outsb
cmpsb
pop
scas
adc
arpl
stos
push
cmpsb
stos
rol
addl
icebp
aam
jnp
lods
xor
dec
adc
pop
add
imul
push
push
outsl
jns
loopne
and
imul
sbb
test
js
bound
jmp
lret
imul
out
mov
jp
fldcw
ficoml
mov
sub
push
aaa
ss
sub
aas
ljmp
test
add
jb
aas
ret
inc
mov
sar
test
bnd
xchg
xor
jg
push
xchg
lock
sbb
jle
xor
and
mov
and
dec
ljmp
cltd
or
test
cmp
into
sub
push
xor
mov
sub
pop
into
fstps
mov
add
mov
mov
out
aam
or
nop
jo
jmp
mov
add
cmp
test
outsb
cmp
adcb
xchg
shll
inc
xchg
test
add
aad
sbbl
sub
leave
cli
and
fldl
subb
sub
add
mov
pop
inc
aas
aas
jge
movsb
xchg
pop
push
sbb
lods
sub
cmpsb
shll
or
and
sbb
mov
pop
mov
inc
pusha
mov
out
sub
xchg
test
and
mov
jecxz
sub
stos
ja
nop
jb
mov
sbb
imul
std
incb
dec
inc
sahf
cltd
pop
add
dec
and
sbb
dec
rorb
bound
stos
mov
jmp
sahf
sahf
xor
imul
xchg
jbe
lods
lods
aaa
sbb
adc
popa
rcrb
es
test
pushl
outsl
divb
xchg
pushf
lret
inc
push
pop
jl
inc
push
xor
insl
cli
or
mov
mov
add
aas
repnz
loop
cmp
xor
sahf
sbb
jp
dec
popa
mov
lret
stos
sbb
mov
pushf
jl
jnp
inc
out
sbb
mov
xor
lods
dec
sahf
sub
shrl
cli
cmp
xor
jmp
push
lret
cmp
jae
xchg
adc
daa
mov
js
adc
lock
ret
mov
test
xchg
push
cmp
sub
idivb
push
mov
mov
jl
pushf
out
adc
sbb
je
mov
inc
aam
inc
inc
xchg
rcll
sbb
rcrl
das
inc
mov
xor
dec
cltd
jae
sub
jmp
push
mov
mov
mov
push
xor
push
jmp
sarb
or
adc
aaa
lock
ret
lret
jns
sub
mov
scas
mov
mov
mov
stos
mov
sub
push
mov
fucomip
xchg
jmp
jle
xor
cltd
xor
pop
push
mov
jg
ret
test
inc
pop
fstpl
test
sub
mov
pusha
fadds
cli
ret
xchg
jno
mov
dec
dec
sbb
les
stos
inc
cltd
xchg
pop
mov
pop
popf
aaa
sub
daa
stc
sbb
inc
mov
repz
lods
fdivr
sbb
ja
lea
insb
ja
pushf
mov
fcoml
fxch
mov
popf
jae
adc
mov
sahf
jmp
cmp
or
cmpsb
cmc
push
xchg
pop
aad
xchg
ds
mov
sbb
loopne
xor
dec
into
leave
subl
sbb
out
or
lock
in
mov
lods
mov
jp
or
sbb
add
push
xchg
adc
push
and
push
mov
xor
mov
sub
add
push
cs
mov
rcr
jg
dec
and
movsl
cmp
inc
mov
out
mov
pop
or
cmp
movsb
es
inc
mov
inc
movsl
xchg
mov
add
push
sbb
js
or
sub
mov
inc
push
pushf
xor
and
inc
mov
jnp
mov
add
sub
mov
inc
test
jmp
js
push
dec
inc
pop
out
jl
adc
nop
in
popf
gs
cmp
into
out
mov
mov
cmp
adc
pop
inc
pop
inc
movsb
sub
das
mov
pop
jp
cwtl
fstpt
jg
insl
dec
pop
popf
repz
fdivr
hlt
data16
lahf
sbb
and
fs
jbe
fwait
cmc
movl
jo
arpl
ds
push
mov
pushf
ret
jnp
pop
imull
dec
enter
jecxz
popl
and
xorl
cmpsb
mov
xchg
cmp
mov
push
xchg
mov
cwtl
js
test
sub
ds
repnz
cmp
rolb
mov
sbb
test
lods
clc
shlb
into
leave
xchg
or
addl
jl
xchg
jecxz
pop
pop
repz
adc
push
jae
mov
mov
ret
pop
and
sub
inc
sbb
jmp
sbb
xor
sub
repnz
cmp
xchg
pushf
dec
add
dec
cld
mov
cld
xor
mov
cld
outsl
pop
dec
cwtl
mov
movb
inc
clc
sahf
loope
or
lret
sbb
mov
cmpsb
sub
adc
pop
das
cmp
jl
pop
pop
mov
fisttps
sarb
stc
adc
cmp
add
jle
mov
mov
add
xor
sti
xchg
mov
inc
cld
rcr
insl
cmp
lcall
stc
outsb
divb
dec
rorl
sub
cld
ret
cmc
xchg
pop
adc
daa
stos
inc
ljmp
test
jno
cmp
push
pop
adc
mov
cltd
mov
rcrl
enter
fildll
jl
arpl
xor
int
jmp
and
outsb
cmp
je
fstps
push
sbb
push
std
mov
sahf
xchg
lahf
mov
jp
popa
jo
lods
es
test
jmp
push
cmp
inc
jecxz
or
add
mov
jne
lret
cmc
popa
mov
and
popl
out
inc
shlb
add
adc
adc
pop
sarb
cmp
in
outsl
cmpsl
xchg
in
mov
push
leave
inc
adc
dec
daa
jmp
roll
sub
and
fcoms
xchg
pusha
sahf
mov
pop
bswap
clc
icebp
sbb
insb
scas
or
xchg
mov
or
jp
ficoml
fadds
js
push
jne
loope
int3
into
int3
mov
push
xorl
xchg
jbe
or
xchg
ja
mov
sbb
xchg
mov
lret
dec
daa
pop
out
arpl
mov
fsub
stos
inc
rclb
cmpsl
fildll
pop
mov
popa
pushf
xlat
sti
pop
or
hlt
aad
test
xchg
loope
inc
fisubl
xchg
aam
aad
xchg
or
js
loopne
rolb
hlt
cld
sti
cmp
push
sub
imul
cs
in
imul
xchg
dec
push
sbb
aaa
lock
add
in
icebp
and
mov
push
adc
jb
int
xor
iret
int
jns
sbb
imulb
fucom
pushf
pop
dec
push
add
repz
fbstp
xlat
mov
mov
out
in
lea
cmp
cmc
mov
das
loopne
cmp
pusha
test
clc
hlt
mov
les
es
leave
mov
sarb
push
jae
sub
out
lret
xor
pop
push
sbb
cli
sbb
add
sub
stos
fs
jbe
mov
jno
sbb
out
loop
leave
popf
stc
mov
dec
mov
mov
or
and
sbb
dec
rcll
in
arpl
or
mov
ljmp
hlt
jle
popf
push
jge
fisubrl
pop
push
sbb
cmp
dec
cld
cmp
jo
push
in
xchg
into
push
cld
test
cmpsb
and
push
aam
stos
fnstsw
lret
in
aad
je
test
lea
jbe
insb
popa
rclb
rcll
mov
add
fsubrl
and
idivb
scas
sahf
mov
jl
cmpsl
xchg
push
pop
vpsrlq
mov
jecxz
pop
pop
aad
dec
mov
xor
les
add
push
mov
xor
push
rcrl
fmuls
mov
lcall
xchg
movb
xchg
mov
dec
sbb
cmp
lds
leave
cmp
inc
pop
or
lods
jmp
inc
pop
push
out
fstps
lret
jbe
push
pop
pop
mov
and
xchg
clc
and
xchg
fwait
ds
test
scas
or
xchg
out
mov
jge
add
out
icebp
jge
inc
loope
cmpsb
xchg
repnz
push
push
push
imul
sub
push
std
ja
mov
jle
in
mov
scas
cmp
stos
repz
popa
mov
jbe
pop
sub
xchg
add
dec
inc
aas
push
test
xor
xor
mov
fisubrl
pop
mov
mov
repz
negb
fisubrl
cld
xchg
hlt
dec
mov
mov
repnz
insl
lods
cmp
or
mov
mov
mov
dec
cltd
in
daa
nop
pop
mov
aad
cmp
jl
lods
mov
in
cmc
cmp
jno
dec
or
adc
pop
mov
sub
daa
fstpl
cs
dec
xchg
repz
jle
push
push
loop
pop
jns
lcall
testl
fwait
andb
notl
mov
ss
daa
mov
sub
lea
jg
lods
mov
jo
sbbb
jne
stc
shll
mov
repnz
aaa
add
pop
movb
jg
mov
mov
fists
mov
jg
jge
sti
ja
repnz
int3
sbb
ljmp
out
lret
in
pop
mov
jo
enter
mov
loopne
mov
adc
pushf
or
add
in
clc
push
mov
lods
dec
push
es
cmp
adc
adc
cmc
sbb
js
pop
sbb
inc
xchg
xchg
fcmovb
add
and
scas
fildll
mov
psllq
cmc
push
dec
cmp
gs
js
repnz
arpl
stos
dec
dec
mov
gs
andl
lahf
mov
and
pop
sbb
dec
inc
sub
cmpsl
pop
xor
imul
pop
cmpsb
or
ja
pop
stos
test
call
leave
xchg
or
mov
or
mov
pop
xchg
jbe
pmulhuw
rcrb
je
call
jl
and
xchg
sbb
shrb
inc
pop
rcrl
into
mov
icebp
or
add
fdivs
sub
or
xchg
cmovno
cmp
aam
popf
adcl
fmull
cmp
push
pop
aad
sbb
sbb
flds
mov
pop
cmp
xchg
pop
mov
cmpsl
arpl
or
mov
adc
stos
repz
stos
inc
lcall
pop
or
dec
mov
jmp
xchg
jmp
jg
xchg
adc
cs
sahf
fcomps
xchg
mov
jae
stos
out
aas
sbb
or
and
push
and
sbb
mov
lock
sbb
xchg
jmp
mov
sti
or
ret
add
push
aad
jne
and
xor
add
das
repz
cmpsl
call
inc
jge
pop
not
out
inc
inc
and
in
xor
test
testb
push
push
popf
cmpsb
pop
leave
rcl
mov
cmpsb
mov
ljmp
mov
mov
stos
xor
sub
aad
jbe
cmpsb
pushf
lods
push
xchg
add
and
xor
xchg
push
mov
jmp
in
dec
push
loop
pop
push
bound
ret
cmp
iret
adc
and
divl
xor
cmp
or
repnz
imull
mov
add
outsb
inc
xor
sub
nop
mov
in
out
mov
xor
or
clc
repnz
fs
mov
xchg
push
jnp
enter
dec
sbb
xor
fstl
jp
stos
clc
jle
jg
adc
jb
neg
push
cmpsl
testb
mov
icebp
dec
xchg
xchg
adc
mov
stos
push
movsl
and
mov
push
mov
mov
and
sbb
inc
mov
test
call
sub
inc
xchg
jge
or
jo
sub
xchg
fs
jmp
mov
xchg
jecxz
not
mov
xor
arpl
fcmovnbe
xor
push
jb
pop
subl
xchg
add
pop
mov
and
nop
mull
mov
and
cmp
jno
dec
rorb
and
mov
and
test
pop
mov
cmp
imulb
ss
or
xchg
hlt
xor
test
xor
mov
pop
push
sub
sti
xchg
inc
xor
mov
inc
adc
and
push
mov
jle
add
aad
les
push
je
cs
inc
loopne
mov
pusha
jl
fwait
cltd
jl
pop
stos
adcb
add
jg
mov
idiv
dec
mov
mov
sub
std
pop
push
call
icebp
push
stc
aad
lods
or
hlt
mov
cmpsl
in
cmp
mov
sti
push
lods
or
mov
imul
dec
into
pushf
fildll
lcall
jl
gs
mov
dec
arpl
add
push
sub
sahf
pop
shll
es
test
movsb
rcrl
aad
fs
out
jmp
fisubs
mov
jno
add
stc
push
pop
loopne
pop
cmpb
xchg
mov
jnp
test
pop
movb
pop
imul
mov
adc
adc
pop
sbb
lcall
addr16
sahf
dec
cwtl
xor
pop
sub
xchg
mov
fildl
jb,pt
push
lds
adc
ret
shr
mov
and
imul
popa
adc
insl
mulb
popf
pop
mov
xorb
scas
stos
test
loopne
std
subl
adc
or
pop
cld
xor
push
mov
leave
and
adc
pop
lds
fists
data16
push
dec
xchg
andl
sub
adc
shll
aad
in
out
cltd
dec
decl
out
popf
or
mov
xchg
xchg
push
lods
xchg
les
ds
clc
mov
dec
repnz
cmp
aas
lret
and
cmp
or
sbb
add
mov
bound
or
or
sarb
fcmovnu
push
cmp
jg
mov
std
lds
imul
cli
add
pop
cmpsl
mov
call
iret
push
adc
pop
orl
xchg
adc
xor
adc
dec
cmp
or
sub
push
xor
xor
xchg
scas
rclb
jbe
daa
fsub
mov
add
mov
adc
cmpl
test
pop
dec
xor
adc
push
cmp
dec
mov
push
repz
mov
cmp
sbb
xchg
js
push
inc
mov
ss
mov
xchg
add
lods
lcall
and
push
dec
xchg
add
fisubl
aas
fidivrs
mov
roll
sub
loope
outsb
icebp
es
sub
repz
popf
mov
scas
faddl
dec
sub
mov
mov
inc
lcall
sub
scas
xchg
push
aam
cs
cmp
adc
jns
adc
lods
stos
dec
mov
sub
sbb
adc
arpl
in
ja
leave
cmpsl
shlb
push
sub
out
dec
push
sbb
pushf
scas
fldt
add
or
outsb
jno
shll
push
lods
movsb
jecxz,pn
push
xchg
pop
stos
mov
fsubp
mov
cld
mov
push
es
jb
ss
ljmp
fdivrp
cmpsb
push
andb
out
paddsw
dec
incl
cmp
xorb
shr
in
dec
cld
cvttps2pi
fstl
push
repnz
das
push
testl
mov
popf
push
movsl
aaa
shrb
or
mov
shrb
sub
add
adcb
adc
cmp
js
mov
mov
push
shr
sub
mov
dec
lds
shlb
repz
fdivrs
or
in
sbb
xor
inc
rol
sub
or
enter
arpl
add
loope
push
mov
sub
fisttpll
jmp
out
fdivrl
ret
inc
xchg
iret
mov
mov
xchg
in
aam
mov
jbe
push
xor
sbb
addr16
sbb
call
and
add
mov
jnp
jno
jne
or
sbb
xchg
cs
and
iret
sbb
pop
sbb
fnstsw
loope
movsb
cmp
fcmove
xchg
arpl
out
inc
cmpsb
sub
pop
pop
cli
add
xchg
loope
daa
loop
push
or
sub
sbb
jae
xor
dec
lahf
rcrl
push
neg
or
in
aaa
sbb
pop
lea
xchg
movsl
cmpsl
xor
mov
pop
jl
cmp
clts
or
iret
adc
lock
fbstp
or
mov
aad
mov
cmpsl
lea
hlt
inc
hlt
fsub
or
xor
aaa
mov
xchg
sahf
jecxz
negb
hlt
icebp
dec
xor
jge
add
icebp
es
lret
stc
adc
test
cmc
cmp
adc
pop
pop
icebp
jecxz
lret
jae
sbb
inc
test
xor
lods
adc
int3
inc
fs
pop
pop
ret
cs
inc
out
xor
inc
inc
or
xchg
insb
es
xor
cmp
and
jno
movsb
mov
mov
fs
or
in
pop
dec
mov
ss
in
rcrl
cmp
ficomps
add
push
jbe
xchg
push
jl
jl
mov
mov
jbe
clc
stos
and
mov
popa
inc
mov
bound
sbb
cmpsb
ror
ficoml
popf
adc
push
ljmp
push
or
jle
sti
sub
cmp
ja
and
and
cmpsl
int3
fimuls
mov
xlat
les
lsl
mov
insl
mov
mov
push
rcl
fs
daa
xchg
imul
lret
lret
jo
in
icebp
mov
xor
mov
jmp
mov
mov
sub
add
cmpsb
pop
pop
adc
lods
imulb
xchg
aas
xor
push
mov
jp
repnz
inc
test
in
jmp
xchg
mov
cltd
sahf
fcmovbe
movsl
jge
hlt
ret
or
sti
mov
fsub
mov
aad
into
mov
es
sub
push
dec
in
dec
push
push
mov
inc
or
setbe
push
ja
inc
mov
xchg
inc
sbb
clc
mov
mov
xchg
aas
push
mov
jge
std
sti
out
cs
mov
sbb
jne
cli
mov
cs
ds
test
mov
inc
cli
sbb
pop
jbe
adcb
push
movsb
pushf
adc
outsl
mov
insl
inc
imul
outsl
out
jns
lahf
adc
sub
inc
push
mov
in
inc
lret
and
xor
imul
dec
xor
add
cmc
and
push
cmp
test
xor
divps
adc
mov
xchg
sbb
jmp
pop
inc
loopne
mov
cmp
in
call
jl
jge
sbb
loopne
sahf
jne
sub
cld
lret
or
in
cmp
leave
into
or
lret
scas
in
in
fdivrs
ret
add
and
fcmovb
dec
jo
data16
sub
sub
cwtl
lahf
lods
push
push
pop
scas
cmp
sbb
test
aas
out
enter
xlat
or
ret
push
fcmovu
es
leave
xor
arpl
into
jp
mov
xorb
lock
xchg
and
in
mov
stc
ror
add
mov
cwtl
add
mov
mov
pop
mov
mov
lahf
ret
movsb
fadd
fnstsw
mov
pop
jmp
in
inc
inc
imul
sub
pop
push
jecxz
sbb
and
imul
popa
test
jns
adc
leave
lods
cmp
pop
ret
lods
addr16
ljmp
lret
push
call
out
lods
cs
fstl
sbb
fmuls
in
lds
aam
and
outsl
lods
cmp
mov
xchg
jae
xchg
mov
fdivp
loopne
das
mov
int
adc
out
sbb
pop
daa
lea
push
mov
popa
aad
ror
cmpsb
cmc
push
add
xor
orb
sbb
daa
stos
adc
shlb
rcrb
sub
jnp
inc
xchg
aas
ficomps
mov
test
xorb
or
aaa
rcrl
cmp
mulb
and
shrl
mov
push
dec
notb
mov
pop
adc
ret
xchg
mov
aam
mov
or
popf
cmpsb
jp
imul
pop
test
push
mov
xor
adc
mov
iret
mov
into
enter
sub
add
cmpsl
mov
mov
and
stos
jns
insb
ds
and
pushf
sarl
lcall
xor
mov
dec
je
js
and
pop
scas
scas
push
cld
frstor
adc
mov
push
cmp
shll
and
scas
adc
inc
scas
push
or
fidivrs
into
push
data16
mov
out
fwait
cmp
imul
mov
ja
mov
push
aad
movsl
lds
xchg
sub
xchg
in
and
xor
clc
imul
sbb
insb
add
push
xor
faddp
cmp
sub
and
pop
stc
sbb
fisubl
or
aad
push
sub
jae
bound
sbb
mov
pop
xchg
clc
cmpsb
xchg
pop
dec
dec
cmp
xor
test
mov
daa
cmp
or
inc
add
push
fstpt
mulb
push
int
cmp
sub
adc
dec
lods
aad
in
fsub
outsb
cltd
xorb
pop
sbb
lahf
mov
xchg
cmpsb
cmp
mov
pop
jbe
ret
hlt
leave
add
sbbb
jp
out
push
xchg
push
mov
pop
jl
or
popa
add
adc
movsl
mov
mov
ljmp
xchg
mov
xchg
and
insl
dec
and
daa
leave
mov
xor
and
pusha
jecxz
nop
mov
stc
xor
bound
mov
iret
mov
aaa
sub
icebp
dec
stos
pop
stos
or
adcb
adc
lea
sub
mov
push
cltd
mov
jo
mov
mov
dec
ljmp
and
dec
lahf
jl
xor
repnz
int
add
mov
clc
mov
icebp
jp
fbld
cltd
add
shr
pop
xchg
sbb
arpl
or
inc
or
pop
movups
xor
insb
adc
push
out
mov
xchg
add
gs
jb
jecxz
add
out
xor
in
xchg
pop
bound
jp
enter
mov
add
cmpsb
mov
int
test
sub
sub
add
dec
adc
mov
imul
stc
xor
clc
je
sub
mov
sub
mov
add
stos
int3
sbb
mov
loop
mov
cltd
lods
pushf
loopne
sbb
dec
xor
cwtl
xchg
mov
ljmp
je
xchg
or
jae
sub
jmp
inc
gs
leave
mov
mov
jb
pop
mov
imul
inc
adc
ret
push
addl
or
sub
cmc
pop
gs
add
sub
sub
mov
divl
fs
mov
inc
pusha
lds
out
mov
sub
mov
adc
stc
xchg
add
jmp
repz
sub
mov
fmuls
sbb
scas
and
test
xchg
outsl
xor
dec
scas
mov
dec
in
add
roll
push
sbb
in
push
mov
movsb
xchg
in
iret
adcl
mov
push
outsl
iret
jae
adcb
mov
popa
shll
or
jmp
rcll
pop
loop
rolb
test
loopne
test
lret
aam
pop
mov
push
outsb
hlt
mov
popf
js
loopne
bound
bound
xchg
xchg
or
jne
cld
cmp
jnp
inc
rcll
or
xchg
jmp
call
int
divb
sbb
jge
lods
mov
xchg
subb
imul
add
ret
sub
imul
or
fimuls
sarb
or
int3
imul
mov
orb
pop
addl
adc
and
pop
stos
das
stos
mov
push
inc
xchg
mov
dec
inc
iret
adc
cltd
cmp
ror
xchg
mov
dec
dec
out
aas
arpl
add
in
xchg
cmp
inc
dec
pop
cmpsb
cmp
js
mov
idivb
mov
out
xchg
pop
sbb
push
cli
mov
jg
and
outsl
mov
stos
mov
mov
out
cs
pop
mov
aaa
fnsave
xor
or
repz
sbb
jae
leave
scas
out
pop
push
cmpsl
mov
sti
aam
cwtl
pushf
xor
xor
aaa
inc
scas
mov
loopne
lahf
mov
cmpsb
out
pop
push
sbb
mov
cmp
push
cmpsb
test
test
sarl
mov
push
movntq
mov
pop
cmp
or
fs
inc
popf
repnz
pop
jne
js
mov
fcmovb
cld
sub
pop
cmp
cmp
test
push
or
sub
addr16
repz
push
mov
sarl
cmpsl
lods
ljmp
ret
sahf
mov
sbb
adc
xor
sub
xorb
jno
mov
mov
aad
mov
out
inc
inc
fwait
enter
lods
cmpsl
scas
sahf
je
imul
inc
add
idivb
fxch
pop
int3
xchg
outsl
pop
jmp
sahf
add
inc
arpl
les
test
addb
push
aas
outsl
outsl
enter
idivl
push
xor
pop
aas
test
dec
push
hlt
cli
mov
int
out
repz
dec
xor
dec
cltd
add
sub
imul
faddl
out
cwtl
xor
inc
push
fadds
jne
adc
pop
lods
dec
adc
xchg
cmovb
push
push
cmp
test
shrb
lock
jecxz
xor
pop
pop
cmpsb
jle
loopne
cmpsb
hlt
lcall
ret
add
arpl
bound
lds
push
xor
lods
sub
xchg
sarl
mov
mul
sub
push
in
ss
push
xor
push
and
test
jecxz
mov
jle
int3
mov
loope
pop
jg
jg
sub
lds
sub
dec
dec
jne
iret
int
aad
orb
call
ss
popf
inc
mov
ret
mov
scas
xchg
scas
imul
loopne
add
sbb
cmp
int3
icebp
pop
std
loopne
mov
iret
add
cwtl
add
or
sahf
push
lahf
push
lock
adc
jg
rclb
sahf
jp
and
in
cltd
pop
addr16
xor
ret
fs
and
dec
inc
pop
jb
jmp
sub
sub
mov
add
mov
orl
faddl
test
pusha
and
pop
jmp
jmp
aam
test
cli
cmp
ret
and
rol
adc
sbb
cltd
xor
outsb
or
les
jo
jmp
inc
push
arpl
inc
pop
xor
ja
cmp
andb
cmc
pop
fs
mov
inc
adc
icebp
sub
mov
or
and
mov
out
hlt
hlt
cmp
ljmp
sub
mov
pop
jne
stos
push
cmpl
adc
ljmp
mov
jecxz
or
xchg
jg
jg
jne
mov
sub
sub
out
xchg
sahf
pop
aas
popf
mov
jne
cmp
jo
jmp
xchg
pushf
sub
test
in
sub
mov
mov
push
add
mov
popf
ja
sub
scas
or
adc
in
das
dec
ja
ret
imul
out
jns
dec
js
mov
and
mov
outsb
pop
pop
daa
call
cld
mov
in
mov
imul
push
and
mov
cwtl
jae
pop
pop
int3
pop
xchg
in
sahf
sub
loopne
pop
sarb
add
ficoms
orl
jg
dec
push
jnp
cwtl
fldcw
enter
lods
xchg
xchg
pop
and
jae
mov
xchg
jg
jnp
mov
scas
popa
sbb
test
mov
imul
std
repnz
mov
shll
fsubs
fdivrl
and
mov
push
dec
mov
andb
bound
or
push
inc
insb
ret
dec
dec
xor
push
lods
call
dec
and
stos
es
mov
jecxz
xor
sti
jmp
test
mov
ljmp
jno
pushf
xchg
mov
push
cmp
mov
sub
jne
pushf
dec
or
mov
xor
mov
xchg
inc
dec
leave
push
add
mov
fs
mulb
xorl
enter
arpl
out
and
out
scas
jge
sub
jmp
andl
enter
xchg
cmpb
repz
ljmp
jle
scas
inc
pop
xor
mov
movsb
jo
lea
scas
lock
fistl
xchg
lods
lcall
dec
movsl
jmp
mov
push
jne
ret
lods
out
out
pop
insl
loop
dec
push
dec
or
mov
dec
adc
cmp
adc
jnp
mov
in
sbb
cmp
push
das
dec
mov
mov
iret
fcompl
sub
adc
inc
out
orl
idivl
cmp
and
pop
jnp
xchg
jge
shlb
mov
pop
mov
mov
js
mov
xor
imul
popa
jecxz
cli
in
pop
shll
jb
cmp
enter
dec
jo
lods
pushf
inc
movsl
sbb
xlat
int3
sbb
pushf
pop
pushf
in
lock
lods
lods
fdivl
push
mov
aad
ljmp
repnz
movsb
mov
mov
adc
cmp
jp
sub
popa
push
adc
scas
xchg
mov
xchg
pop
xchg
mov
outsl
sbb
jb
lods
inc
insl
fsts
inc
out
outsl
pushf
mov
bnd
push
int
xor
in
and
stos
inc
adc
cmp
lea
in
loope
imul
cli
inc
cmp
cs
and
or
mov
dec
popf
add
mov
vunpckhpd
in
xor
rolb
sbb
inc
in
dec
jo
inc
mov
popa
outsl
fnsave
push
cli
out
ss
loopne
scas
inc
insl
test
mov
sbb
nop
lahf
mov
cwtl
cmp
or
pop
cmp
inc
nop
inc
xchg
or
je
push
cmp
mov
adc
loope
int3
iret
push
fsts
mov
dec
fwait
rep
inc
dec
inc
dec
push
fucomip
repnz
pop
int
jle
ss
sbb
push
gs
pusha
jle
pop
out
inc
dec
add
mov
in
daa
scas
cmpsl
dec
ja
or
jno
mov
pushf
xor
test
shll
fwait
sbb
addr16
lods
lods
movl
in
or
cmp
enter
js
cmp
imul
mov
int3
mov
aas
call
add
outsl
ds
xchg
xchg
jmp
jb
dec
arpl
pop
adc
jns
inc
xor
xchg
jae
dec
add
push
or
lcall
pushf
sbb
sub
aam
cmp
and
push
push
decl
imul
push
fistl
inc
cld
cli
cltd
cli
ret
fstpl
popf
lods
adc
pop
pop
dec
xor
mov
bound
imul
adc
and
outsl
jno
fimuls
mov
clc
jne
dec
fwait
js
ljmp
cmp
jmp
cs
mov
movsb
cmp
dec
dec
mov
pop
cmpsb
mov
pusha
push
cmp
lods
mov
mov
sub
pop
sbb
outsl
lret
std
mov
lcall
outsl
mov
xor
ds
aaa
imul
push
jbe
xor
je
add
daa
add
push
lds
mov
add
push
jp
push
pop
stos
sub
outsl
insb
ss
push
pop
loop
xchg
cld
cmpl
push
decl
negb
rorb
fadds
icebp
or
lret
pop
stc
add
pop
fsubrs
mov
fcomp
jl
push
sbb
dec
adc
cwtl
fisubrs
sub
jmp
adc
push
cwtl
movsl
adc
dec
dec
repnz
and
cmc
popa
adc
loopne
jge
xchg
ja
lret
enter
sbb
dec
xor
pushf
pop
xor
push
jle
mov
cltd
mov
lret
add
aas
sub
push
clc
pop
jns
jp
sub
movsl
sarl
pop
adc
add
loope
popa
ret
scas
cltd
and
pop
popa
ss
jg
cmp
cmp
pop
ss
push
int3
movsl
cwtl
inc
xlat
lret
pop
mov
or
pop
addr16
fidivs
or
pop
sbb
add
movsl
push
iret
add
cmpsb
cwtl
xchg
mov
cmc
shrb
out
jno
jmp
cmpsb
xor
mov
lea
mov
scas
mov
push
sub
stc
inc
and
add
mov
push
repnz
push
test
xor
movsl
ss
lods
mov
xchg
sub
jl
or
mov
inc
xor
push
xchg
dec
mov
frstor
push
ret
pusha
pop
imul
pop
or
fistpll
mov
xchg
cmp
ss
cld
loope
and
mov
testl
sbb
ret
pop
jo
xchg
ds
add
cwtl
out
push
and
pop
jbe
xor
rcll
lods
cltd
ja
mov
pop
dec
addr16
adc
std
jbe
cli
dec
mov
out
std
or
jnp
push
je
js
inc
call
into
mov
outsl
sub
mov
dec
repnz
mov
jl
bound
nop
add
inc
or
fisubrs
mov
jnp
mov
push
or
ret
or
movsb
mov
mov
stos
jo
mov
repz
enter
sbb
lods
nop
movsb
js
outsl
adc
push
ja
or
sub
inc
push
hlt
cmpb
jg
in
dec
adc
sbb
in
cmp
lock
leave
sbb
out
xor
mov
es
sbb
cwtl
xor
ja
mov
call
cld
mov
mov
xchg
xchg
inc
insb
pop
sahf
inc
push
adc
xchg
xchg
shlb
sbb
pop
outsb
andb
iret
insb
cld
bound
xor
insl
hlt
jg
push
dec
out
fwait
jge
push
push
imul
leave
ret
xlat
test
push
sbb
mov
and
jp
les
mov
jecxz
fisubrs
imul
xchg
faddl
cs
mov
fwait
inc
cmp
out
dec
shlb
mov
outsl
push
repnz
sub
and
dec
xchg
pop
dec
push
cmp
jne
mov
cwtl
xor
lds
popa
or
xor
push
xchg
fstl
out
mov
ljmp
ret
ljmp
and
xor
push
xor
jp
pop
xor
add
sbb
push
pop
inc
out
xor
add
cmp
and
mov
in
or
cwtl
call
xchg
pop
fstl
insb
xchg
sub
xchg
cmp
inc
push
push
aas
je
xchg
cmp
sub
out
jmp
jge
scas
out
aas
push
sub
int
pop
in
or
and
jno
fwait
in
xor
es
stc
jecxz
jl
jp
inc
cmpsb
lods
add
cli
ficoml
cwtl
mov
mov
xchg
shl
ljmp
arpl
sbbl
daa
mov
jne
inc
test
test
lret
pop
push
sub
fsts
mov
push
mov
add
popl
pop
gs
dec
sub
pop
pop
sub
cmpsb
rorb
loopne
mov
les
lods
xchg
cmpsb
out
inc
les
sbb
push
aaa
sbb
aaa
adc
adcl
test
push
shl
adc
test
xor
fcompl
stc
mov
cmp
mov
mov
xchg
data16
js
cmp
dec
iret
jecxz
in
roll
push
inc
push
mov
pushf
cmp
cmp
pusha
add
enter
cltd
adc
cmpb
ret
leave
lcall
ret
jg
xor
pop
and
js
test
xor
dec
js
movsb
cwtl
or
std
mov
in
sti
cmp
hlt
pop
add
mov
push
jg
ret
add
jle
inc
jp
lahf
test
in
inc
bound
xchg
mov
out
sbb
jo
stc
mov
mov
jg
or
fidivrs
add
mov
repnz
inc
scas
xor
jnp
lea
cmp
cmp
ret
bnd
mov
mov
jecxz
shll
cld
dec
and
xor
je
and
adc
bound
in
imul
xor
ss
fbld
mov
shl
jmp
inc
xlat
pop
sub
dec
faddl
fistpll
jo
adc
outsl
repz
ret
or
fstpl
sub
addr16
cltd
add
scas
imul
outsb
lcall
aad
xchg
sbb
out
imul
xchg
int
inc
jmp
imul
cs
jmp
and
jle
shlb
aad
sbb
fildl
stos
pop
pop
movsl
push
pop
loope
dec
adc
inc
inc
lea
or
xchg
in
and
loopne
mov
xor
leave
pop
into
and
sbb
xor
push
jecxz
jae
jo
icebp
push
and
mov
mov
repz
add
jb
and
iret
sbb
repz
mov
call
mov
mov
mov
mov
or
rorb
fwait
cmc
mov
clc
addr16
xor
sarb
xchg
sbbl
std
push
sti
pop
scas
ret
mov
cwtl
mov
jmp
push
xchg
push
arpl
sbb
lock
dec
xchg
mov
mov
sar
cwtl
mov
jg
test
aaa
fbld
add
push
push
mov
adc
adc
inc
dec
cwtl
and
mov
or
mov
int3
cmp
fucomip
pop
in
add
cmp
push
sbb
outsl
test
ret
aas
jl
punpcklbw
loope
pop
mov
dec
or
adc
shll
sub
fnstcw
add
or
int
movsb
or
add
pop
or
sbb
or
push
ss
mov
outsb
fmulp
test
mov
pop
xchg
mov
scas
loop
popl
addr16
mov
loopne
movsb
or
push
adcl
mov
push
or
mov
mov
inc
movsb
sbb
or
popf
les
or
movsb
mov
pop
push
inc
or
testl
add
mov
inc
fildll
movsl
arpl
mov
jecxz
mov
imul
test
jle
push
insb
ret
aas
push
push
in
arpl
movsl
cmpsl
dec
sti
adc
fsubl
add
jg
mov
xor
hlt
jmp
pushf
movsl
dec
insb
or
nop
pusha
ja
cmpsl
sub
jo
cmpsl
dec
dec
dec
test
out
push
in
sub
jmp
inc
movsl
mov
mov
xlat
addl
enter
dec
mov
and
mov
or
pop
ljmp
in
sbb
sahf
mov
mov
push
loop
fimull
cmp
push
fmul
mov
in
icebp
ficoml
mov
jae
and
int3
cmc
out
jmp
push
fistpl
add
and
decb
fwait
scas
jmp
das
and
in
lahf
pop
fists
and
cmpsb
pop
jle
mov
test
cltd
xchg
idivb
imul
inc
cmp
or
int3
stos
push
mov
push
lret
shlb
int3
nop
je
xor
or
adc
jg
pushf
fdivs
sbb
mov
xor
mov
inc
divl
int
mov
mov
mov
sub
xor
test
imul
pop
aas
sub
into
mov
or
and
inc
fisubl
push
push
cmp
inc
stos
add
adc
push
paddsb
push
pop
and
imul
roll
mov
adc
jns
dec
cmp
jnp
lahf
cmp
mov
out
nop
ret
jbe
inc
scas
and
rorb
fwait
ds
inc
outsl
dec
or
movsl
orb
pushf
push
ret
cltd
xlat
jg
xor
lret
arpl
pop
lret
and
xor
push
mov
leave
xchg
je
xor
fbstp
mov
nop
inc
xlat
testb
mov
inc
mov
in
arpl
cld
dec
addl
rorb
push
xchg
jge
fistl
test
test
loop
cmc
mov
mov
ss
mov
in
mov
sub
xor
aas
sub
jmp
mov
dec
xchg
sub
lahf
stos
ljmp
dec
push
repz
cmp
cmc
add
decl
pop
xchg
movsl
xchg
sbb
fwait
push
lods
xlat
adc
xor
jecxz
jmp
mov
add
adc
test
xchg
in
andb
hlt
mov
pop
bound
das
xchg
inc
insl
and
fisubrl
jae
and
or
push
cmp
sahf
push
fwait
xchg
test
jb
add
pop
jo
ljmp
pop
mov
popa
dec
cli
fsub
std
xchg
lods
hlt
xchg
inc
xchg
ret
jecxz
lds
sub
lds
and
xchg
dec
mov
clc
int
rcl
hlt
or
popa
cmp
cmp
xchg
pop
loopne
push
jne
and
xor
pusha
fcomps
mov
mov
addr16
push
mov
dec
jae
dec
ret
mov
arpl
pop
ja
or
daa
pop
mov
xchg
jo
cmp
loop
mov
add
bound
mov
add
out
hlt
sub
fwait
inc
subl
pushf
sbb
mov
and
test
adc
xchg
je
rcll
test
loope
das
aad
sbb
sti
xchg
xor
addr16
std
ret
addr16
pop
gs
push
out
pop
outsl
mov
xchg
rcrb
xor
push
and
push
test
or
xchg
cmpsl
jne
lcall
aaa
inc
movsb
rcrl
insl
nop
in
adc
mov
inc
lcall
fcom
pop
or
repnz
in
or
stos
ret
cs
pop
jne
dec
pop
fdivl
push
aas
sbb
out
inc
xor
das
pop
pop
dec
int3
and
fldl
arpl
ss
or
test
mov
cmpsl
fimull
flds
sub
aam
std
jecxz
out
shrb
cs
lds
les
dec
rol
sbb
iret
idiv
test
scas
mov
mov
lret
mov
xchg
or
mov
mov
ja
ljmp
inc
aaa
inc
inc
push
mov
push
addb
cli
add
cmp
mov
inc
stos
aas
xlat
add
aas
in
notb
cltd
enter
push
xor
outsl
mov
daa
in
inc
cwtl
xchg
jle
into
jl
aad
add
sarb
dec
outsb
dec
xchg
lcall
sbb
add
or
std
xlat
popa
adc
cli
cmp
data16
mov
mov
bound
xor
ja
scas
loopne
push
scas
push
push
outsl
pop
mov
push
jp
or
fstps
ror
mov
lahf
cmp
jecxz
sub
or
mov
pop
notl
fbstp
fisubrs
repz
pop
cmp
repnz
repz
mov
icebp
sbb
rcrl
stos
es
loop
xchg
je
daa
mov
jns
mov
mov
fwait
jb
dec
test
or
and
xchg
stos
icebp
mov
mov
imul
lcall
pop
cmp
repz
jo
push
sub
pop
mov
dec
arpl
fucomi
aam
pop
loopne
inc
imull
sub
pushf
inc
test
js
loop
mov
xor
mov
jg
jmp
idivl
dec
cmp
outsb
int
out
stc
lods
out
insl
int3
shll
icebp
and
stos
cmp
push
mov
sti
stos
rorl
mov
add
adc
ljmp
xor
and
mov
add
fs
pop
mov
test
push
not
movsb
ljmp
inc
push
mov
mov
push
fildl
hlt
sbb
mov
out
inc
or
gs
cmp
in
pop
sub
jo
or
sti
xchg
sbb
out
and
push
or
adc
cld
xchg
adc
inc
mov
sbbb
fwait
adc
cmpsb
push
adc
and
adc
popf
xor
lahf
divl
int
call
adc
stos
lock
pop
sub
out
lock
cs
and
mov
xchg
pop
les
pop
es
in
dec
inc
jo
outsb
icebp
mov
xchg
clc
aam
testb
ljmp
pop
jp
inc
push
add
xor
jb
test
out
pop
outsl
stos
cs
mov
pop
lods
and
add
popa
pop
adc
jne
push
jo
xor
ret
in
lret
mov
mov
mov
xchg
inc
sti
adc
stc
mov
and
stos
inc
jmp
and
pop
enter
push
roll
cli
out
ds
jle
lea
inc
mov
and
out
pop
fstps
adc
push
rcll
pop
xchg
fcompl
jge
inc
sub
sahf
popa
fcompl
inc
loop
mov
scas
lods
push
xchg
lock
cmp
or
inc
notb
out
xor
fdiv
in
repnz
ja
mov
lds
fidivs
sub
hlt
in
int
dec
les
sbb
jno
mov
push
mov
sub
pop
mov
sub
xchg
mov
es
das
fists
imul
sti
popf
test
cmpb
mov
dec
sub
lods
push
mov
movsl
push
mov
mov
or
pop
cld
dec
pop
jae
out
mov
adc
xor
xlat
or
gs
jecxz
sbb
addr16
jp
cmp
cwtl
cmp
sbb
popl
pop
and
sub
cmp
jge
xchg
fdivrs
xor
mov
mov
test
fimull
scas
je
je
jl
sbb
pop
mov
jl
dec
sahf
jae
outsl
jo
ljmp
loopne
scas
scas
mov
orb
mov
mov
shll
jno
sarb
sbbb
jo
lods
dec
pop
aaa
cmc
push
dec
jl
push
cmp
aaa
out
lret
sbb
test
in
push
xchg
nop
in
aaa
sbb
sub
push
push
xlat
rcll
sub
ljmp
popa
or
aam
push
xor
lret
dec
mov
loopew
aas
inc
movsb
jge
aad
and
mov
daa
mov
mov
ljmp
sub
mov
jae
ficoms
movsb
das
add
fwait
mov
adc
adc
mov
out
jl
shrl
sbb
and
pmaddwd
ds
jecxz
cmpl
add
add
adc
mov
adc
dec
stos
test
mov
sahf
nop
and
adc
out
mov
ret
fisttpl
push
or
xchg
xchg
and
push
aaa
xor
sub
mov
adc
fidivrs
inc
jmp
cmpsb
call
jns
shrb
push
lret
adc
jecxz
adc
sbb
cmp
dec
or
jl
mov
std
jge
insl
cltd
mov
stc
push
scas
adc
pop
adc
mov
dec
shrb
lret
iret
out
dec
push
loop
repz
inc
addr16
ljmp
in
or
pop
push
or
xor
jbe
data16
jno
iret
lods
cmpb
xchg
dec
jge
pop
notl
pop
cmpsl
or
leave
cmp
jge
mov
sarl
add
adc
out
ret
movswl
outsb
xchg
cmp
sub
or
jo
xchg
mov
jb
inc
mov
xchg
aaa
jge
call
cmc
sbb
push
dec
aad
aas
fsubrl
add
xlat
cmp
scas
imul
xchg
cmpsb
fistpll
leave
mov
cmpsb
mov
sahf
mov
fnstsw
xlat
push
loopne
test
dec
outsl
pop
push
inc
bound
sahf
call
and
out
cli
sbb
jl
shll
leave
xlat
cmpb
es
jmp
sub
adc
lock
call
xor
pop
xchg
pusha
cltd
arpl
push
mov
or
les
mov
cmovo
dec
pop
out
into
push
das
pop
ret
jbe
sti
cmp
fistps
mov
xor
loopne
dec
gs
fcoml
jmp
cmpsl
jo
test
mov
mov
and
pop
sarb
jl
lahf
in
or
jmp
or
cwtl
jmp
lcall
cmpsl
nop
loopne
mov
repz
popf
inc
jb
xchg
test
add
mov
in
or
mov
sbb
mov
cmp
mov
cmc
mov
ljmp
fadd
idiv
mov
frstor
sub
xchg
xor
jb
test
push
cmp
js
jmp
cld
shl
mov
out
pop
orl
stc
xchg
sbb
andl
outsb
fidivrl
xchg
sbb
daa
fnstenv
iret
andl
cmp
dec
or
xor
daa
popa
dec
cmp
add
rclb
addr16
loopne
out
jmp
or
dec
mov
fwait
inc
frstor
js
push
adc
add
or
xchg
inc
into
in
out
fiaddl
and
lds
outsl
out
inc
cvtps2pi
pop
hlt
in
insl
inc
test
out
sub
jecxz
aad
mov
sbb
scas
sbb
into
adc
ror
stc
test
mov
and
call
lea
aaa
js
mov
xchg
imul
push
push
dec
push
push
shll
aam
xor
popa
jge
dec
gs
sub
sub
loope
leave
xor
addb
lcall
or
add
add
fistl
jmp
mov
sub
shr
repnz
lret
les
das
stc
jae
adc
icebp
ljmp
push
aaa
lret
mov
push
dec
inc
or
xlat
nop
outsb
out
jns
and
mov
or
push
xchg
pop
lcall
into
clc
fs
or
in
adc
imul
std
jp
test
clc
adc
sbb
loope
mov
mov
push
cli
imul
inc
dec
push
in
inc
les
call
inc
cld
shl
js
mov
js
mov
adc
inc
aam
test
into
into
cmp
pop
hlt
xor
mov
stos
loopne
pop
sub
dec
xor
out
outsl
cmp
movsb
jo
pop
push
inc
or
jb
loopne
fwait
inc
pusha
imul
jo
out
inc
jmp
inc
call
inc
dec
shrb
xchg
scas
mov
loop
std
mov
push
adc
push
aam
iret
fcoml
mov
stos
das
call
cltd
lock
jns
insl
mov
cmp
loopne
sbb
mov
mov
ret
aam
cmp
pushf
xchg
shlb
sub
popf
mov
xchg
or
shlb
add
jae
mov
sbb
jle
sbb
rcll
xchg
mov
jo
insl
in
clc
push
fs
mov
popa
or
cmpsl
into
or
addr16
pop
imul
hlt
xor
loopne
mov
fdivrl
add
sbb
push
pop
jge
sbb
scas
adc
lds
bound
mov
testb
aad
and
xchg
add
dec
mov
and
mov
mov
push
lods
test
cltd
lock
mov
jne
int
cmp
cltd
imul
mov
test
imul
fstpl
sbb
sbb
loop
pop
rorl
jo
push
cmp
xlat
cltd
mov
mov
imul
je
adc
jle
insl
push
ficompl
mov
hlt
dec
adc
push
cmp
scas
lcall
dec
std
out
lret
dec
jmp
rcr
rclb
xlat
mov
xlat
mov
sub
jmp
add
shlb
sahf
push
mov
pop
jecxz
dec
mov
stc
mov
cmp
jbe
dec
fnsave
push
aad
gs
pop
mov
add
cmpl
and
lahf
push
ror
dec
jg
jp
cs
roll
fdivrl
daa
jmp
fimuls
cmpsl
dec
cmp
in
insl
mov
outsb
pushaw
sbb
enter
jno
xor
jno,pn
mov
insl
pop
popf
das
cmp
loop
shll
or
scas
pop
push
mov
jno
lods
into
int
push
cmpsl
fwait
shr
pop
sub
jmp
adc
fptan
repnz
std
ljmp
popl
mov
ret
add
aad
das
enter
les
outsl
jl
addl
sbb
push
dec
adc
add
xchg
fstpt
cmpsb
mov
mov
cmc
scas
xchg
sbb
mov
aam
sarl
fidivl
movsl
stos
jge
ljmp
adc
leave
int
or
daa
push
cmp
jp
icebp
sti
inc
test
dec
loope
jb
push
push
cmp
test
out
sub
cs
mov
mov
adc
pop
xor
pushf
fdivp
xorl
pusha
inc
lock
sbb
addb
cmpsb
repnz
cmp
mov
loop
insl
addr16
xchg
jb
movsl
jmp
mov
divl
jae
enter
mov
cmpsb
push
pop
stos
lods
and
sbb
xchg
mov
and
aaa
les
fnstcw
xorl
sub
jge
add
jle
mov
push
inc
pop
dec
mov
jmp
push
lret
cld
aad
es
or
aas
cmp
test
jne
lret
scas
pop
cwtl
outsb
arpl
xchg
jle
scas
xchg
mov
push
les
or
pop
mov
push
cmp
imul
rcrb
rolb
shll
faddp
movl
test
push
test
adc
clc
or
fcmovnu
arpl
lcall
mov
mov
xor
or
ss
add
out
test
out
push
cmpsl
das
mov
cmp
lcall
push
dec
cmp
pop
xchg
jne
cmp
jle
mov
adc
mov
cmpsl
mov
test
mov
adc
outsl
in
push
sub
push
jle,pt
lods
clc
inc
xchg
cwtl
arpl
push
push
add
daa
inc
mov
repz
push
or
jge
out
movsl
ss
dec
fistpll
iret
jmp
jp
pop
push
outsb
jle
sbb
push
xor
sti
adc
sub
lods
adc
jno
mov
iret
cmpsl
rcrb
das
dec
or
mov
ss
leave
xor
and
sbb
rcrb
xor
je
inc
pop
ficoms
inc
sub
fdivrl
daa
pusha
fcomps
sbb
loopne
jae
fildll
je
fwait
mov
cmpsl
mov
int3
arpl
insl
cld
mov
mov
mov
pop
mov
jp
hlt
pop
sahf
push
fs
jmp
fstps
out
divl
cmpsb
xor
aas
hlt
jbe
push
pop
inc
sub
fldpi
in
aaa
js
das
test
push
mulb
test
je
lret
cmp
mov
xor
push
pop
inc
adc
mov
shll
sbb
pop
mov
or
loope
xchg
and
sub
mov
ret
mov
inc
data16
jno
sbb
mov
data16
inc
hlt
and
mov
mov
daa
inc
pusha
cmp
movsl
dec
cmp
fdivl
stc
sub
test
or
cli
pop
fs
xchg
cmp
xchg
mov
mov
mov
xchg
xorb
pop
lds
lea
mov
cmp
imul
sbbl
push
mov
push
lret
adc
mov
je
into
hlt
push
test
loop
or
push
mov
rorl
pop
lock
sbb
sub
mov
jo
pusha
jns
rep
shrb
dec
pop
test
mov
nop
xor
jae
test
jns
inc
or
js
cwtl
mov
mov
movl
xchg
daa
stos
mov
cltd
cmp
movsl
or
pop
les
addr16
add
dec
insl
mov
out
out
fidivl
pop
mov
add
jmp
je
cli
sub
mov
cltd
popf
mov
sbb
adc
into
jb
lods
bound
shrl
addr16
es
int
in
iret
or
cmpsl
mov
jno
movsb
lods
cmp
pop
mov
je
nop
call
testl
xchg
pop
loopne
fsubrs
jmp
std
popf
add
xor
sbb
stos
and
insl
pusha
testb
cwtl
std
rcrl
cmpl
xchg
add
bound
add
mov
jo
jne
fsubrl
ret
lahf
pop
insb
bound
ds
aaa
fisubrs
int3
nop
sbb
loope
xor
sbb
cmp
movsl
mov
mov
push
pop
loopne
insb
sbb
or
dec
enter
into
sahf
frstor
sbb
scas
inc
or
jge
mov
xor
adc
iret
mov
dec
sub
mov
test
fcomi
int
das
dec
popa
or
mov
ret
jmp
sbb
fadds
xchg
mov
sbb
shll
pop
cltd
pusha
fwait
in
push
and
lods
pop
rorl
jle
mov
mov
in
insl
sbb
filds
sti
repz
and
fisubrs
movsl
mov
cmp
dec
push
jb
jp
or
pop
xchg
inc
push
in
pop
testb
mov
pop
mov
std
sbb
cmpsl
sub
lods
imul
stos
add
fsubs
mov
or
and
and
pop
push
cltd
shll
push
je
push
xor
les
inc
loop
dec
sub
xchg
gs
shlb
lock
jp
jmp
jbe
ljmp
ja
lods
ljmp
push
es
stc
mov
enter
lods
inc
mov
cmpb
push
push
pop
jnp
das
cmpsl
je
lods
add
or
push
adc
sub
rcl
fildl
pop
push
pop
cmp
push
call
lret
test
mov
push
das
lahf
cwtl
push
int
pop
mov
into
dec
inc
add
and
mov
sub
fldcw
push
hlt
cmp
mov
fists
push
idivl
imul
int3
sbb
push
out
add
add
lds
mov
ret
mov
mov
sub
into
cmp
push
in
jne
or
sbb
loop
lds
enter
cld
cmp
aad
mov
push
sbbb
dec
push
cmp
fwait
mov
pop
jno
or
or
fldt
mov
mov
and
push
sub
cs
cmp
dec
arpl
sub
fcoml
in
enter
data16
out
jp
xor
jne
into
cmpsb
pop
jb
cmp
addb
addr16
cmc
sbbl
test
jns
xor
push
loope
cmp
pop
daa
fwait
jl
push
leave
outsl
cmp
pop
cmp
inc
jge
and
pop
aaa
adc
jp
stos
fdivrs
pusha
out
popa
and
popf
mov
je
pusha
imul
es
jns
lcall
test
sbb
xor
inc
movsl
mov
sarl
inc
daa
jmp
push
mov
push
xchg
aaa
mov
add
fcmovnu
imul
or
jne
out
fsubr
sbb
inc
push
jecxz
mov
xchg
cmp
ret
leave
je
or
or
test
imul
js
fdiv
add
insl
ja
ret
push
or
inc
adc
ja
cltd
adc
orl
sub
ds
loope
cmp
jl
incl
mov
pop
ret
sbb
add
imul
xor
cmp
xlat
test
jge
ja
in
jne
mov
lods
pop
mov
fists
out
mov
lds
cmpsb
insb
clc
sub
jecxz
xchg
vorps
adcb
repz
out
sbb
sahf
sub
aas
adcl
inc
cmp
sub
out
sub
sbb
loope
mov
mov
sub
or
sbb
lds
addl
scas
adc
mov
fs
jl
loopne
jb
inc
pop
dec
lret
jno,pn
inc
adc
dec
into
idivl
stos
push
mov
popa
pop
xorb
jmp
scas
inc
pop
mov
push
adc
mul
jmp
xchg
pushf
je
call
pop
inc
in
jge
jmp
xor
dec
adc
repz
dec
mov
jb
stos
insl
not
out
inc
ds
dec
pop
repz
mov
int
add
ja
mov
btr
jl
out
jno
mov
sbb
mov
gs
push
pop
inc
inc
jecxz
ret
or
ja
lahf
ds
jbe
inc
adc
mov
pop
aam
fsubs
cmp
xlat
fldcw
int3
sub
sti
sub
xor
shll
xchg
jae
imul
popl
jne
scas
addl
pop
pushf
addb
push
mov
pop
arpl
or
bound
lahf
mov
out
outsl
push
nop
or
orb
add
jg
add
xor
mov
sub
and
xor
xor
sbb
test
stc
pop
inc
sbb
inc
test
cs
and
jg
dec
xchg
push
inc
xchg
mov
fs
xchg
and
imul
jg
mov
pop
cs
jno
and
jae
cld
mov
pop
mov
fisttpl
xor
movsl
add
xor
nop
es
in
cmp
mov
dec
sti
sub
lea
xor
gs
dec
pop
in
sub
jb
nop
mov
push
jnp
out
lods
int3
and
xchg
mov
or
cs
ja
mov
mov
mov
in
fmull
das
xlat
int3
push
out
mov
xchg
adc
aam
ja
iret
movsl
fimull
mov
adc
and
out
hlt
push
cmpsb
inc
sbb
arpl
movb
clc
pop
xor
push
into
and
mov
push
mov
repz
dec
sbb
cmp
and
inc
inc
jl
mov
mov
mov
cmpsl
lret
fcoml
inc
xchg
rsqrtps
cmp
lahf
call
push
xchg
decb
jl
xchg
out
fisttpll
push
aaa
addr16
sbb
pop
mov
xor
loope
sbb
ss
xor
repnz
pushf
inc
xor
lea
fs
dec
ljmp
inc
mov
push
sub
or
cmp
sub
adc
xor
lods
and
or
xchg
in
ja
jle
out
or
xchg
xor
or
add
push
xchg
fstpl
mov
xor
fst
pushf
xchg
adc
push
call
ss
jne
mov
mull
mov
xor
ffree
dec
push
sbb
sub
dec
pop
jae
popf
xchg
fisttpl
jnp
cmp
jns
xor
out
stos
push
jge
mov
pop
imul
inc
mov
push
mov
push
jl
outsb
xchg
push
ret
rcrl
push
inc
adc
ds
jecxz
mov
mov
mov
inc
mov
bound
mov
xor
adc
jno
push
in
nop
ficoms
movsb
out
mov
gs
or
jno
jge
jns
shrb
pop
gs
shll
sbb
mov
jnp
mov
sbb
jo
xchg
out
test
aam
sub
sbb
dec
aam
js
mov
andb
mov
fdivl
mov
dec
mov
xchg
xor
insb
pop
lret
inc
jmp
ds
sbb
mov
and
mov
sub
lahf
pop
push
pop
xor
repz
adc
mov
addr16
add
xlat
stos
int
scas
jp
jns
popfw
pop
mov
fldl
xchg
pop
aam
lds
cmp
or
shlb
push
enter
add
aam
fstl
rorl
loope
filds
cmp
jl
add
arpl
mov
lds
sarl
push
pop
pop
cltd
aaa
adc
sarb
lcall
cmp
fiaddl
mov
xor
and
test
fcomp
adc
cli
xor
mov
pop
cs
jno
dec
repz
insl
xchg
mov
loop
pop
pop
fwait
inc
or
or
xchg
test
mov
xchg
sbb
add
scas
jecxz
push
mov
dec
mov
or
repz
xchg
adc
hlt
cld
jg
test
mov
stc
mov
jno
int3
jg
cmpsl
scas
push
fnsave
pushf
es
int
jae
mov
mov
repz
jae
add
mov
aaa
mov
pop
out
nop
push
les
jb
adc
mov
repz
and
or
fmul
cmc
push
fidivrs
inc
cmc
mulb
ret
into
jg
mov
aaa
notb
mov
outsb
sbb
gs
roll
movq
insb
ljmp
sbb
mov
imul
mov
push
sbb
jne
sub
rclb
testb
nop
adc
mov
data16
into
mov
aad
scas
insl
pop
fcompl
mov
xchg
cli
arpl
shrb
lods
andl
cmp
push
cmp
pushf
shl
dec
add
lods
lahf
ljmp
shll
test
pop
outsb
cmpsb
inc
mov
clc
in
push
test
mov
and
xor
imulb
icebp
cwtl
xchg
xchg
aaa
push
les
sbbl
and
mov
mov
add
xchg
ret
xor
aam
sbb
scas
push
cmp
inc
push
rorb
cltd
inc
lret
fists
xor
in
test
ds
sbb
xchg
ljmp
jne
imul
lds
jp
div
fldt
sub
fnstsw
jbe
pop
mov
sub
push
adc
in
push
xor
xchg
mov
push
adc
rcrb
scas
add
dec
inc
dec
dec
push
push
inc
pop
mov
xchg
adc
std
popa
cmp
jae
jne
filds
xchg
xchg
je
jp
iret
test
popa
or
adc
pop
and
sbb
cmovnp
cmp
sub
stos
addb
sti
scas
jo
icebp
aam
scas
and
xchg
dec
fwait
adc
or
adc
sbb
or
dec
test
inc
sahf
ljmp
push
push
mov
addr16
out
shlb
jbe
cli
inc
xchg
jns
sub
or
test
sbb
dec
push
dec
sub
imul
cld
iret
scas
adc
mov
and
test
cmpsb
and
or
dec
mov
stos
js
dec
les
add
pop
push
in
xchg
ficomps
icebp
push
lcall
mov
pop
filds
dec
cmpsb
scas
enter
xlat
out
jg
cmc
xor
mov
xchg
dec
add
pop
ficomps
push
ja
pushf
imul
jmp
push
hlt
pop
leave
mov
and
adc
sbb
ja
divb
inc
jle
jno
mov
mov
mov
add
xchg
mov
cli
ret
pushf
popa
pop
mov
mov
adc
je
int3
push
dec
pop
test
xchg
pop
xchg
xchg
or
aaa
inc
shl
sub
loop
pop
add
movsb
jae
mov
xchg
adc
sub
push
jo
fmul
and
inc
jo
cmpsb
cmp
and
xor
jb
test
pusha
clc
push
gs
mov
mov
cmpsb
iret
je
in
inc
test
sbb
cmp
int3
adc
and
cld
xor
rcrl
insl
ds
jne
dec
movsb
xchg
mov
inc
add
incl
cs
lods
jns
ljmp
cmp
dec
pop
jecxz
pop
pop
call
xor
xorb
or
fstpl
adc
cmp
fdivl
mulps
lea
out
add
push
sub
mov
mov
pop
push
pop
pusha
add
jp
je
mov
sbb
pop
lret
and
sahf
adc
test
lret
push
jae
cmp
cmc
xor
xchg
and
or
xlat
std
test
add
jae
cmp
icebp
loop
xchg
jmp
and
je
mov
adc
cmp
lea
sbb
dec
test
lods
addr16
stos
cld
mov
mov
jno
adc
stos
sti
mov
cmp
jmp
sbb
insb
sub
outsb
cmp
xor
pop
out
add
daa
rcrb
cmpxchg
pop
in
xchg
xchg
xor
je
sbb
insb
jmp
jmp
test
push
es
sbb
sub
movsb
jl
jl
dec
inc
scas
aas
cmpsb
nop
sbb
mov
gs
jo
shlb
mov
pop
rol
add
or
mov
inc
out
ret
mov
cmpsl
repz
pop
dec
adc
iret
js
sbb
mov
stos
repnz
loopne
outsl
je
xchg
inc
push
mov
loope
stos
jge
shll
lea
mov
cmp
call
test
adcb
cltd
insb
roll
hlt
nop
int
jg
icebp
js
int
insl
enter
sarb
mov
inc
xchg
push
int3
orl
daa
shlb
xchg
fidivl
mov
mov
mov
in
movsl
or
stos
lahf
jp
mov
cmp
lds
dec
xchg
xor
div
enter
inc
jg
fidivrl
pop
mov
cmp
jae
imul
jg
arpl
rclb
add
dec
cld
push
mov
xchg
mov
shrl
aas
xor
int3
lea
inc
mov
xchg
or
xor
pop
mov
jle
or
nop
sub
mov
test
filds
les
pusha
mov
cmp
or
xchg
or
imul
jae
inc
rolb
adc
fdiv
xor
cmp
add
jo
addr16
or
pop
mov
mov
aam
cmpsb
dec
mov
sbb
push
mov
dec
inc
addr16
imul
mov
add
push
push
ret
enter
adc
and
fists
push
pop
daa
std
jbe
gs
repz
mov
dec
mov
leave
aad
jo
jg
fildll
dec
add
mov
and
xor
cli
push
push
sahf
mov
push
mov
fcoms
push
add
dec
es
or
mov
aas
adc
repnz
lock
lods
pop
dec
xor
and
lea
jmp
xchg
ret
insb
cmpsl
sbb
fstps
scas
fwait
cmp
xchg
xchg
or
xor
test
les
sbb
adc
inc
sub
fwait
insb
out
pop
xchg
pop
push
pop
sbb
fcoml
lods
sub
and
daa
movsl
or
mov
cs
jg
call
fists
or
int3
popf
push
cmpsl
fcompl
hlt
sti
hlt
loopne
adc
fldenv
mov
pusha
mov
pop
lret
dec
ret
repnz
xor
into
or
xor
ficoms
ficoml
mov
mov
xor
ja
addr16
cmp
xchg
out
jo
push
xchg
in
insl
movsb
lret
sbb
js
out
push
pop
fnstsw
rorb
mov
add
loop
mov
sub
pop
lahf
or
out
enter
jle
add
add
in
fiadds
cmp
or
hlt
mov
pop
sub
inc
pusha
out
ret
js
or
lret
sub
daa
in
xor
sub
mov
out
sahf
mov
mov
outsb
test
inc
das
pop
fprem
mov
cmp
and
in
mov
loop
in
test
leave
mov
dec
out
push
shll
call
xchg
aas
pop
andl
ret
in
adc
imul
pop
dec
jns
mov
pop
or
jg
and
fcompl
mov
movsl
and
xchg
mov
iret
ss
shll
sbb
filds
aaa
or
arpl
mov
xchg
and
add
outsb
ja
adc
xchg
jl
mov
cmp
pop
stos
inc
iret
mov
pop
cld
mov
insl
icebp
sahf
sbb
xchg
aas
push
out
mov
mov
inc
pop
cmp
test
mov
dec
test
mov
xor
cli
and
sbb
and
inc
or
lds
push
stos
fcompl
mov
pushf
push
insb
fiaddl
jge
cli
shlb
push
cmp
pop
clc
aas
test
leave
sti
jae
and
cmc
in
cmpsl
or
mov
ss
stos
xor
adc
push
rorb
movsl
mov
jo
mov
aad
cltd
arpl
sahf
icebp
dec
dec
push
call
popa
std
cwtl
insb
jnp
lds
jns
outsb
pusha
push
mov
push
add
xor
lret
scas
cli
mov
insl
mov
mov
dec
arpl
pop
push
int3
out
pop
jb
push
fistps
dec
add
sub
cwtl
dec
xchg
mov
lretw
or
fnstcw
imul
rclb
cwtl
sub
mov
mov
mov
lods
sub
push
repz
push
mov
inc
cmpb
ja
mov
push
and
or
jl
mov
add
mov
cs
add
fld
cmp
fists
js
sub
xor
xor
adc
outsl
imul
ficomps
nop
cmp
lock
pop
cmpsl
dec
and
xor
cli
bound
loope
xor
loopne
or
or
loope
cmp
push
mov
leave
and
in
jg
fstpl
xchg
xchg
mov
cmp
mov
sub
cmpsl
mov
sub
aad
addb
mov
cld
mov
inc
insl
and
outsb
push
pop
dec
lds
test
adc
xor
movsb
pop
pop
decl
jne
imull
dec
call
sub
ret
mov
nop
mov
mov
inc
sbb
ret
aam
and
test
test
addr16
data16
in
mov
add
aas
inc
les
sbb
cmpsl
lods
or
pop
jg
adc
sahf
mov
xor
or
ret
hlt
add
jno
jg
insb
fsubrp
inc
and
pop
stos
nop
loope
adc
loop
dec
ret
xor
aaa
dec
add
aad
mov
adc
pusha
push
aad
divb
popa
add
xchg
out
test
outsl
xor
push
adc
lret
bound
inc
aas
or
inc
imul
shlb
icebp
cmp
clc
push
and
or
push
add
loope
add
je
das
pop
push
scas
pop
ljmp
mov
lret
test
inc
push
outsb
or
lahf
dec
adc
mov
subb
or
inc
or
adc
jecxz
mov
jle
ret
in
cmp
push
add
sbb
imul
and
js,pn
jmp
ds
inc
jbe
push
jo
aas
inc
pusha
fcmovb
lds
xchg
inc
repnz
sahf
insl
pop
iret
cli
es
fcmovbe
icebp
sar
dec
adc
test
inc
fsts
pop
es
movups
dec
add
ror
mov
jl
int3
sbb
xchg
testl
les
or
mov
andl
out
or
loop
outsl
dec
sub
mov
das
mov
cltd
inc
adc
loopne
imull
hlt
cmc
jbe
sub
dec
xchg
mov
inc
cmp
arpl
cmp
or
ss
or
imull
cs
popa
aas
pop
jne
or
push
pop
xor
or
pop
movsb
nop
lods
mov
dec
imulb
loopne
jne
rol
sub
push
sbb
sub
pop
shlb
mov
lahf
adcb
cltd
or
das
test
arpl
dec
jo
and
rol
inc
dec
hlt
sar
scas
stc
sub
push
push
jo
fisttpl
imul
xor
sub
clc
xor
mov
dec
test
xchg
int3
jns
pop
mov
cld
add
loop
clc
mov
push
imul
pop
mov
dec
inc
pop
dec
mov
or
out
add
icebp
pop
sub
in
mov
addr16
sbb
stc
dec
pop
dec
xor
bound
cmc
aam
fistpll
ret
outsl
mov
jnp
push
inc
call
cmp
mov
js
push
lret
in
add
icebp
push
cmp
sub
imul
mov
and
rol
push
insl
aaa
sarl
push
and
sbbb
xor
inc
mov
cmp
jp
mov
lods
mov
xchg
xchg
lock
mov
not
or
lods
push
js
xor
stos
jl
xlat
xchg
frstor
xchg
inc
loope
xchg
mov
inc
ret
mov
cs
ficompl
mov
popf
fdiv
inc
cmp
jl
retw
and
jl
inc
scas
sbb
sbb
icebp
push
lods
dec
adc
jecxz
mov
dec
stos
inc
mov
pop
adc
cld
mov
int
fistpl
test
in
rcrb
xchg
lcall
xlat
stos
movsb
std
ret
mov
add
insl
push
xor
adcl
test
mov
scas
outsb
push
or
xlat
mov
movsl
xchg
sub
scas
shlb
lahf
icebp
iret
xchg
xor
int3
daa
repnz
scas
mov
sbb
xchg
mov
xor
mov
ja
add
idivl
sub
imul
xchg
sbb
call
out
xor
pop
sub
and
lret
push
mov
fsubrs
ffree
fldcw
mov
xchg
insb
dec
jne
je
xchg
mov
pop
mov
fisttpl
ret
jmp
outsb
jecxz
sbb
rcrb
leave
popa
adc
push
sub
je
mov
mov
lret
and
mov
popf
lcall
xchg
inc
or
push
in
pop
sbb
ds
jmp
dec
xchg
and
inc
sbb
test
pusha
sbb
enter
mov
sti
out
iret
je
out
push
test
push
bnd
out
dec
cli
out
jnp
push
pop
xor
xor
loopne
jns
dec
pusha
fldenv
dec
nop
imul
das
push
push
les
xor
inc
outsl
xor
and
xor
or
inc
orb
dec
pushf
push
ljmp
cwtl
adc
arpl
adcl
mov
mul
cmp
jo
sbb
xor
sub
mov
pop
cmp
sbb
test
xchg
imul
mov
arpl
faddl
inc
mov
lahf
mov
jno
outsb
cld
les
mov
xor
add
dec
icebp
stos
or
xchg
push
scas
jmp
rclb
outsb
loopne
popa
mov
in
sti
fwait
insl
pop
lods
push
xchg
pop
mov
ret
jbe
pop
sbb
out
push
inc
lds
fldt
mov
pop
aam
arpl
push
fidivs
scas
repnz
mov
repz
scas
mov
mov
ja
jnp
adc
xchg
fcomps
movsl
ljmp
je
and
push
push
iret
fs
imul
and
fnsave
lock
pop
inc
rcll
pop
push
aas
mov
or
dec
loop
cmpl
jp
test
out
shl
clc
pop
xor
jb
cmpsl
pop
mov
rorl
ja
cmp
clc
ds
inc
rclb
dec
or
xchg
sti
test
xor
dec
fbstp
xor
xchg
scas
jp
dec
inc
adc
push
add
cltd
and
das
mov
inc
rcll
jg
mov
ficoms
scas
out
mov
test
gs
or
dec
outsl
sbb
cmp
int
je
scas
jo
fstpl
adc
sub
push
leave
inc
lahf
sarb
xchg
imul
aad
loope
and
in
ret
stos
dec
add
ja
adc
gs
insb
fistl
call
les
shlb
scas
push
and
lea
lret
xchg
imul
lods
xor
rcrb
jmp
cs
fwait
cltd
sub
sub
stc
pusha
inc
les
movsl
push
das
dec
cwtl
test
rorl
lcall
xchg
dec
or
loop
jmp
into
add
orl
lea
aas
jne
mov
lret
popl
pop
lret
js
subl
xor
outsl
imul
jns
push
dec
in
jnp
dec
pop
cmp
add
fdivl
clc
jbe
clc
mov
std
repnz
inc
nop
sbb
icebp
xlat
xchg
push
adc
outsl
das
dec
addr16
in
faddl
out
scas
mov
dec
stos
sti
xchg
push
sbb
icebp
add
gs
ret
or
fists
out
ret
add
pop
nopl
xlat
xchg
mov
imul
call
mov
mov
pop
imul
cltd
cmp
iret
icebp
call
sub
push
cli
mov
clc
or
addr16
push
sbb
fsubp
aaa
and
adc
pmaxsw
xor
mov
inc
mov
fs
ljmp
push
adc
adc
repnz
repz
sub
xor
sub
packuswb
sub
adc
je
add
xor
lea
pop
leave
cmc
jns
repnz
nop
sbb
pop
push
sbb
jle
movsl
xchg
test
scas
jno
adc
sbb
push
push
repnz
lock
fnsave
inc
adc
pop
jnp
test
repz
or
inc
mov
xor
fdivs
call
fisttpl
arpl
jne
roll
dec
loop
pop
fcmove
test
mov
out
mov
ret
mov
xchg
push
cmp
iret
cmc
fiadds
xchg
push
movsb
jl
ret
sub
xchg
jae
cli
ss
mov
in
gs
dec
jb
xchg
popa
in
mov
or
add
popa
xor
xchg
and
addb
push
xchg
adc
in
das
inc
adc
test
push
bound
push
sub
data16
sub
sbb
outsl
or
test
icebp
pop
aam
jg
sbb
mov
sbb
mov
mov
xor
xchg
mov
out
mov
mov
stos
mov
jle
pop
cwtl
or
ficomps
arpl
add
test
inc
fsts
pop
adc
js
and
in
je
vpcmpeqw
mov
repz
pop
dec
inc
rorb
jle
cmpsl
js
or
mov
and
cmp
mov
pushf
or
bound
dec
fdivrl
pop
dec
dec
ret
int3
out
movsl
pop
aaa
cltd
insl
and
rcrb
mov
leave
mov
scas
hlt
push
inc
es
shlb
inc
sub
testl
dec
mov
jmp
xchg
push
shlb
scas
std
jmp
jb
push
ss
or
xchg
inc
sub
xor
mov
aaa
aam
in
sarl
mov
es
repnz
dec
sub
sbb
add
mov
filds
lock
enter
cmpb
daa
jp
fsubl
cmc
cltd
xor
mov
mov
pop
test
das
addr16
dec
hlt
hlt
xchg
movsb
pop
outsl
movsl
mov
push
mov
loope
dec
push
add
inc
insb
out
xor
cmp
and
mov
pop
xor
fidivrl
jo
mov
pusha
fdivrs
stc
jecxz
sti
inc
jge
xchg
jmp
test
push
inc
mov
pop
loop
mov
xchg
xchg
outsb
pop
aaa
jl
and
xor
mov
inc
pop
aam
adc
in
fsubrl
xor
mov
push
fcmovnb
popa
jmp
jp
pusha
push
andl
ljmp
sbb
push
or
adc
mov
clc
in
sbb
cmp
not
cmpb
outsl
fs
pushf
inc
mov
lret
mov
xor
push
addb
and
iret
stos
icebp
xchg
mov
mov
repnz
ror
push
xchg
int3
flds
gs
int
mov
es
mov
lea
jno
jg
xchg
sti
ret
inc
in
cmc
or
in
xchg
fadds
clc
inc
adc
in
xlat
in
adc
cmp
lea
mov
rcr
cli
in
fwait
arpl
sub
fs
lea
or
mov
fsubrs
imul
mov
clc
cmp
pop
outsb
inc
jmp
scas
pop
cmp
lea
xchg
xchg
dec
ja
inc
test
inc
pop
cmpsb
pushf
nop
idivb
push
inc
mov
sub
mov
dec
push
hlt
rorb
movsb
aaa
icebp
xchg
jge
insb
cvttps2pi
mov
add
jl
paddusw
sub
out
icebp
cmp
fistpl
outsb
mov
stos
ror
cmp
test
lock
mov
fs
xchg
add
inc
cli
lods
and
sbb
lds
add
push
mov
push
push
add
sbb
adc
div
cmp
fists
andl
add
ds
ret
pop
pushf
push
faddp
pop
cmp
aaa
lds
pop
rcll
fists
int3
mov
sub
and
xor
sbb
insl
sub
inc
pushf
push
cltd
mov
ds
nop
jge
rcl
cmp
inc
mov
scas
pusha
cmpb
ror
push
push
pop
cmp
push
cltd
in
jl
decl
mov
add
or
pop
mov
pop
jecxz
stos
loope
pop
xchg
push
mov
mov
xor
in
add
and
pop
insb
adc
ret
mov
mov
inc
mov
push
mov
sub
mov
xor
testl
sub
daa
lods
xchg
inc
xor
xchg
in
fwait
ds
aas
jl
xchg
loop
aas
incl
flds
nop
mov
fimuls
sub
inc
or
jns
xchg
rcll
loope
push
and
into
ss
sahf
mov
bound
daa
mov
movsl
cmp
frstor
mov
inc
pop
int
dec
xchg
jg
fmuls
xchg
lret
test
dec
es
dec
pop
rcr
xchg
push
out
mov
or
in
adc
adc
fdivrs
lahf
fldln2
adc
aad
iret
int
mov
adc
sbb
jl
sbb
cld
stc
aad
dec
pop
lock
adc
mov
mov
ret
sti
mov
xlat
pusha
lcall
sbb
xor
dec
xchg
scas
inc
ljmp
xor
es
lods
repnz
in
cltd
jo
fiadds
roll
cmp
lods
dec
fdiv
pop
inc
enter
mov
and
sbb
xor
xor
aam
imul
arpl
decb
jno
xchg
fstps
xor
or
cmp
adc
push
mov
pop
sub
fcomps
std
test
cmpsl
add
xor
push
pop
inc
es
mov
pop
or
out
dec
hlt
cs
mov
adc
cltd
imul
mov
es
or
les
testl
xor
cmp
int
les
popa
mov
cmc
mov
out
push
incl
addr16
pop
add
fsubs
jo
loopne
cwtl
cltd
das
popl
xchg
and
cli
pop
sub
push
dec
test
mov
and
xchg
push
jg
cmp
nop
hlt
stos
fdivl
and
add
imul
scas
cmp
enter
nop
or
mov
test
enter
dec
mov
adc
xor
pop
mov
mov
in
sub
push
aad
mov
out
or
outsb
scas
fs
jmp
mov
dec
and
mov
inc
test
sub
lss
fs
mov
std
xchg
cmpsb
and
sahf
lods
jo
push
call
in
fwait
push
jae
lock
and
push
in
mov
inc
mov
test
or
lods
sahf
sub
push
out
cmp
imul
fsubrs
or
xor
dec
sub
sbb
mov
mov
rcl
mov
jle
and
inc
fmull
xor
in
jnp
paddsb
mov
sbb
fistpll
out
dec
jp
mov
and
loopne
inc
mov
xchg
aas
arpl
lret
sbb
or
movsb
push
mov
rcrl
jge
or
sbb
rcrl
dec
clc
cmp
mov
cmp
fldcw
das
xchg
inc
sbb
in
fldcw
int
movsl
icebp
jo
inc
daa
jbe
mov
cmp
mov
sbb
lock
and
cmp
pop
and
mov
inc
xor
pop
mov
mov
insb
out
cmpsl
ret
test
xlat
jb
add
rorl
pop
and
cmp
test
pop
dec
scas
mov
scas
icebp
lret
mov
xor
cmc
mov
fstl
popa
jnp
repnz
mov
mov
cmp
sub
inc
lret
mov
push
scas
sub
and
xchg
pop
mov
in
pop
mov
dec
add
mov
movsl
das
xor
sub
popf
fs
mov
cmp
sub
push
xor
data16
mov
leave
insl
scas
jnp
in
out
ss
xor
xor
orb
leave
inc
jne
pop
stc
inc
or
xchg
loop
stc
cmp
loope
xchg
cmp
outsb
ret
lahf
mov
inc
mov
arpl
mov
rcrb
out
js
stc
out
mov
or
pop
enter
enter
call
leave
sub
aaa
repz
lcall
or
push
or
inc
jb
int3
mov
and
xchg
xchg
fcomps
out
cli
sbb
cmp
push
add
test
je
xor
mov
adc
in
scas
cmpw
add
mov
push
push
aas
pop
rol
push
lret
lea
ds
xor
mov
add
sub
sti
lods
cmc
iret
mov
data16
mov
cltd
or
sub
xchg
cld
or
js
add
xor
dec
pushf
in
mov
jbe
cwtl
dec
arpl
cmpsl
das
cld
xchg
xorb
xchg
imul
dec
std
xor
and
add
imull
lcall
faddl
scas
sub
nop
dec
cmpsl
sbb
mov
in
cmp
cmpsl
lahf
mov
push
adc
and
lds
mov
arpl
scas
push
cmp
mov
jne
xchg
pop
inc
sub
pusha
imul
nop
xchg
lret
mov
loopne
loopne
pop
pop
add
movsl
jae
cmp
shrb
cmp
outsb
sbb
cwtl
mov
xor
or
push
fsubr
jp
jl
xor
rcrb
cmp
mov
in
inc
pushf
insb
dec
mov
icebp
add
and
sub
xchg
ret
add
lret
out
cwtl
jb
sbb
imul
mov
and
adc
mov
in
ja
pop
fwait
pop
out
call
outsl
pusha
aad
push
imul
fldl
or
stc
mov
mov
imul
pop
cltd
push
mov
clc
imul
sub
sub
hlt
adc
mov
les
inc
ret
daa
adc
cmp
xchg
hlt
into
scas
movsl
pushf
stos
push
ljmp
mov
dec
dec
pop
xor
push
pop
mov
mov
mov
sub
xchg
sbb
aam
mov
mov
sbb
cmpl
jno
fisubrs
jl
mov
test
xor
add
and
rcll
pop
mov
jne
jbe
jne
or
push
xchg
jnp
jo
push
rclb
inc
sbb
cmpsb
fcmovbe
std
arpl
imul
sub
insw
aaa
adc
jle
lcall
cmc
push
adc
dec
sarl
sub
std
gs
sarb
push
inc
testl
mov
mov
popa
repz
mov
inc
jle
lret
sbb
or
jb
sbb
xor
add
cmp
in
popa
mov
shlb
fcomps
in
push
cmpsl
cmp
scas
inc
int3
lcall
pop
and
fistpll
in
fs
pop
stc
or
inc
jne
scas
adcl
mov
cmpsb
sbb
dec
cmpsb
shlb
data16
daa
pop
ret
mov
mov
cmp
lds
mov
lcall
jge
movd
inc
mov
adc
dec
je
and
xor
in
fcmovu
dec
inc
fptan
js
cwtl
jp
jg
cmp
adc
and
mov
fimuls
mov
sbb
sub
rcrb
jns
mov
das
cmpsl
pop
push
jno
sub
mov
mov
stos
outsb
cmp
pop
cmpsl
ljmp
mov
in
or
mov
sbb
inc
sbb
stos
pop
inc
into
sti
es
insb
jns
dec
push
sbb
pause
das
mov
imul
add
in
push
dec
inc
push
mov
pop
std
lods
add
movsb
int
or
mov
pop
push
sbb
cltd
orl
repnz
and
imul
xchg
jl
aas
decl
cli
xchg
movsb
outsb
pusha
jnp
jle
push
pop
xchg
push
push
addl
ljmp
ret
data16
je
je
push
test
jae
jae
in
xchg
mov
push
sbb
and
mov
mov
lods
nop
cs
sarl
lods
cmp
test
mov
cmc
mov
aas
clc
cmpsl
clc
int3
flds
jnp
in
xchg
cmp
sub
push
dec
mov
dec
pop
rcrl
push
cmpsb
adc
mov
mov
ja
clc
test
pop
testl
mov
aam
jecxz
xorb
pop
lret
enter
outsb
cltd
jbe,pt
mov
clc
sarl
mov
aas
or
xchg
mov
lret
dec
dec
sub
js
xorw
popa
repz
adc
sbb
or
bnd
dec
push
xchg
mov
pop
cmp
jl
xchg
aaa
mov
clc
jb
out
mov
nop
mov
xchg
pop
loop
pop
imul
decb
xor
movsl
mov
and
repz
jge
xchg
adc
std
mov
mov
jne
cwtl
lcall
jae
push
or
jo
jp
mov
jbe
arpl
jbe
adc
pushf
out
dec
mov
push
push
sbb
xchg
and
sbb
push
jecxz
add
fwait
loope
push
gs
dec
push
rol
gs
push
adc
aaa
cmc
and
sbb
ja
fwait
les
dec
dec
fildl
jmp
adc
mov
xor
jl
mov
pop
xchg
inc
cmp
loopne
cmp
loope
xor
sahf
stc
sub
loop
lahf
or
lret
dec
cmp
or
dec
rorl
decb
sbbb
xor
or
ficoml
ret
fisubrl
loope
nop
fdivrl
pop
ja
es
sbb
xchg
cmpsb
cmp
setnp
outsl
jp
xorl
pop
mov
xlat
pop
push
lods
cmp
fbstp
jnp
sahf
fs
loopne
mov
jnp
movsl
sbb
cmpsl
mov
mov
sbbb
and
xor
stc
add
and
and
mov
negb
hlt
out
aam
aad
push
adc
stos
mov
scas
outsb
xchg
rcrl
inc
mov
jmp
push
mov
cmp
xchg
mov
sbb
push
out
mov
cmpsb
mov
shll
in
iret
xor
xchg
inc
fnstsw
xchg
shlb
popl
mov
inc
pusha
jmp
stc
mov
mov
clc
insl
lods
jg
or
repnz
xor
into
out
pop
cmp
hlt
daa
call
xchg
cmp
int3
adc
mov
ret
jge
shlb
cmp
inc
outsb
je
iret
mul
sub
dec
and
leave
outsb
aam
mov
movsb
push
push
push
push
jb
and
sti
arpl
xor
out
sbb
in
cmp
test
aaa
and
testl
fidivs
mov
dec
movsb
mov
pop
cld
sub
sbb
dec
jnp
pop
jae
pop
xor
es
rcl
mov
add
cltd
lods
test
lods
mov
movsb
push
inc
cld
or
popf
push
jecxz
idivl
inc
notl
dec
or
cmp
xor
decb
mov
les
pop
shrb
jne
in
jg
push
lahf
jle
outsb
or
aas
dec
js
inc
pop
fwait
jns,pn
xchg
je
iret
iret
push
mov
cmp
test
cmp
sub
mov
jp
add
data16
xchg
lea
iret
rcrb
inc
imul
aam
xor
inc
loopne
push
ds
mov
ds
into
rol
lcall
shll
adc
insb
mov
cwtl
pop
cmp
adc
jge
je
shrb
iret
mov
stc
leave
jmp
sti
add
or
pop
rorl
inc
scas
pushf
aaa
sub
pop
fdivrp
adc
mov
leave
and
adc
pop
jno
arpl
loope
dec
xor
sbb
jne
jo
js
push
pushf
jecxz
ljmp
shll
testl
xor
lahf
pop
inc
dec
and
cmp
addb
movsb
add
hlt
ljmp
insl
push
fcoms
xor
pusha
dec
jp
push
shlb
sub
daa
dec
mov
cmp
sbb
sbb
in
addl
and
or
mov
cmpsb
imul
sub
mov
xchg
or
jae
sub
or
bnd
aaa
mov
mov
or
sub
icebp
out
stos
pop
and
test
and
rcr
out
lret
pop
test
jl
fsubl
ficomps
ja
mov
jnp
and
movsb
cmpl
ja
pop
sub
push
lcall
mov
rorl
daa
inc
xchg
pop
ror
out
add
mov
push
repnz
add
push
and
sub
inc
cmpsb
mov
aaa
icebp
fimull
mov
mov
ffree
ret
push
fnstcw
add
xchg
sbb
jb
gs
lds
adc
mov
pop
js
or
repz
fistpll
mov
test
shrl
into
dec
sahf
cmp
rcll
pop
inc
in
icebp
cmpsl
inc
subb
es
push
fdivs
fldenv
dec
cld
insl
fcomps
xchg
xor
icebp
lock
inc
mov
push
aad
jb
loop
push
andl
in
movsl
mov
arpl
mov
dec
leave
ret
lea
xor
es
push
pushf
adcb
pop
mov
scas
pop
cmp
pop
inc
lcall
sub
cmp
mov
divb
dec
aad
inc
and
xchg
and
cmp
xlat
sbb
pusha
sub
idivl
xchg
mov
aam
push
add
jns
popf
hlt
es
add
mov
sub
mov
mov
push
xlat
sbbb
imul
fwait
pop
push
cmp
shlb
inc
or
mov
gs
jae
mov
jns
std
imul
outsb
leave
out
adc
mov
mov
push
xlat
xor
fdivl
insl
and
in
mov
and
pop
pop
cld
bound
dec
loopne
iret
iret
push
push
adc
xlat
jne
mov
nop
lock
or
in
test
mov
lea
mov
decl
out
dec
in
and
lcall
enter
cmp
xor
dec
insl
out
and
repz
mov
shl
test
insl
sub
push
or
cld
pop
aas
loope
in
xchg
add
dec
fldt
je
push
ret
shlb
jae
and
scas
stos
enter
jbe
pop
mov
sbb
jecxz
lret
sarb
jne
icebp
dec
xor
lret
or
fs
push
or
jge
dec
mov
mov
mov
mov
sysenter
divl
subl
mov
inc
xchg
fidivrl
pushf
decl
xchg
cmpsl
shrb
xorl
gs
mov
pop
test
dec
rorb
int3
popf
je
mov
aam
fstps
mov
decb
aas
mov
jg
xchg
cmp
xorl
ds
enter
loope
push
stos
inc
fmull
jge
adc
push
fs
lods
dec
leave
sahf
sbb
ss
push
into
repnz
aam
std
mov
cmc
fdivl
das
mov
inc
inc
cmpsb
mov
call
lahf
add
cmpsl
xor
js
xlat
dec
lods
sbb
xchg
movsl
repz
test
pop
push
fcompl
jb
rorl
or
jl
inc
popf
xchg
mov
xor
or
sbb
push
mov
inc
aad
dec
mull
hlt
in
imul
sarb
pop
sub
sub
push
pop
lret
or
sbb
sbb
fldenv
aad
outsb
ljmp
lret
aam
sub
jge
iret
outsl
jne
imul
je
fldt
sub
repnz
pop
test
jno
enter
fcomi
insl
and
scas
mov
add
push
sahf
loop
sahf
scas
into
jns
repnz
or
sbbl
mov
pusha
rcrb
or
out
frstor
mov
push
int
sub
jmp
jecxz
jp
cmpsb
out
mov
cli
xor
cmpsl
or
ret
insl
add
jl
loopne
mov
pop
xlat
aad
adc
mov
popa
sub
loope
xchg
sub
jl
lret
dec
or
lahf
negl
mov
orl
cmpsl
fmuls
sbb
pop
xchg
pop
xchg
loop
mov
mov
xor
addl
xchg
data16
push
mov
dec
shl
mov
fildl
fcoms
mov
arpl
mov
popf
or
pop
adc
cmpsl
mov
leave
jle
cmp
jnp
cmp
test
pop
mov
add
add
test
repz
clc
loop
mov
fwait
push
hlt
aam
test
mov
or
xchg
insb
adc
imul
inc
mov
mov
mul
adc
adc
adc
pop
ficompl
enter
push
lds
and
clc
fisttpll
sarl
stc
incb
add
frstor
sub
push
mov
mov
cmp
xlat
cltd
scas
outsl
dec
aas
add
lcall
fnstenv
mov
sbb
cmc
xor
aas
aad
mov
imul
sub
imul
jb
ffree
and
or
cld
sti
rcrb
jg
push
aaa
xchg
cmp
pushf
sbb
cmp
jns
jle
iret
ja
push
shll
cmp
outsl
push
mov
or
mov
loope
fisttps
int
movsl
sub
cli
and
ss
sbb
dec
sub
sti
enter
jmp
sub
mov
leave
mov
enter
je
fmulp
dec
das
mov
dec
pop
dec
es
je
dec
cmp
popa
gs
inc
mov
inc
hlt
out
lret
jmp
dec
hlt
jg
cmp
dec
aas
and
aas
imul
loope
xlat
mov
rcll
sbb
cmp
adc
jge
inc
insl
cmp
daa
shrl
push
xor
pop
xor
stc
cmpl
cmp
pushf
cld
outsl
xchg
push
sbb
fcoml
cmpsl
test
subb
push
or
sub
push
jo
mov
not
xor
leave
push
push
xor
es
test
lahf
addr16
pop
xor
fpatan
and
pop
mov
std
pusha
xchg
ret
xchg
out
lock
enter
lret
test
dec
aaa
fdivs
bound
pop
push
ja
fs
or
jno
scas
cmpsl
add
xchg
mov
and
jns
mov
aaa
dec
in
mov
push
sub
push
je
faddl
jne
lret
xchg
sbbb
int3
xchg
jae
mov
imul
dec
and
lock
mov
mov
imul
mov
fwait
sbbl
inc
ljmp
pop
inc
shll
jo
xor
leave
bound
cs
daa
sarb
cmc
outsl
rorl
inc
mov
sbb
jns
stc
stc
and
push
mov
pusha
insb
ja
sbb
inc
cmc
push
popa
dec
pop
popf
sub
aam
enter
aaa
cwtl
mov
inc
mov
xchg
leave
enter
jl
test
fsubl
mov
cs
dec
jp
arpl
aad
fisttpl
cmp
sbb
dec
cli
mov
icebp
movsl
inc
shlb
lods
push
in
aaa
mov
sbb
push
iret
sahf
mov
pop
mov
mov
add
xchg
fimuls
int3
test
add
jns
inc
xchg
inc
test
dec
inc
out
mov
mov
mov
mov
jne
in
push
aad
in
pop
nop
cmc
int
jecxz
mov
movsb
out
pop
push
jecxz
repz
cmp
or
adc
push
ds
xor
mov
jno
hlt
lcall
adc
enter
les
rorl
xchg
lods
faddl
push
test
jno
pop
cmp
pop
movsb
xchg
cmpb
lock
push
js
cli
mov
jno
and
and
cmp
mov
test
pop
pop
jl,pt
and
push
mov
ljmp
das
pop
sbb
adc
mov
and
mov
bound
nop
out
test
or
aad
xchg
jle
aad
and
or
cs
icebp
ja
cli
push
filds
std
fwait
xor
mov
push
xchg
sub
xchg
jne
fdivrl
xor
loopne
stos
add
outsb
cwtl
pop
scas
stos
jno
xchg
pop
shlb
pop
arpl
xor
dec
scas
xchg
jne
insl
stos
adc
fistl
imul
in
xor
mov
imul
stc
mov
out
mov
jns
mov
fldcw
cld
cmp
cli
add
sbb
push
mov
mov
cld
imul
xchg
fiaddl
dec
jns
in
and
in
add
push
xchg
add
addr16
int
aaa
xchg
divb
das
sqrtps
mov
repnz
pop
add
iret
in
jns
popa
outsl
sub
jo
dec
or
dec
stos
iret
aas
out
xor
xchg
dec
enter
sbb
stc
adc
add
mov
lods
mov
lcall
sbb
mov
icebp
xor
jecxz
cmp
rolb
movsb
cmp
jl
xor
dec
jns
fists
testb
out
lock
xchg
cmp
pop
jne
jno
push
inc
int3
pusha
cmp
aas
inc
and
daa
dec
jl
mov
je
xor
jno
fisubl
jb
je
aas
in
lahf
jnp
jg
add
mov
in
fadd
les
mov
mov
mov
scas
pop
outsb
inc
xor
mov
sub
fdivrs
sub
jnp
push
sbb
stos
flds
scas
push
out
add
insb
dec
mov
stos
pop
cs
in
inc
jge
ljmp
xor
mov
repz
outsb
jge
popf
sbb
push
and
ja
scas
mov
clc
push
ljmp
enter
jns
mov
xchg
popa
imul
shll
sahf
and
xlat
orb
mov
fsub
dec
jg
push
mov
mov
pushf
lock
pop
fstpt
cmp
or
or
test
je
cmpsl
mov
jns
mov
xchg
insl
inc
ss
mov
sbb
push
jmp
adc
lahf
dec
scas
mov
mov
mov
sbb
mov
lea
out
fistpll
fsubs
lcall
fisubs
jmp
es
stc
ret
sbb
arpl
aaa
add
pop
xchg
mov
stos
xlat
out
pop
and
fbld
xor
xchg
insb
mov
bound
prefetch
aad
mov
pop
push
es
aam
xchg
cmp
add
lahf
xlat
mov
repz
divl
xchg
xorl
fisttpll
aaa
leave
xchg
add
rorb
pop
lret
xor
aad
adc
enter
mov
pop
fistpl
adc
mov
mull
push
and
cmp
jl
mov
sub
dec
mov
jns
mov
and
push
imul
mov
push
mov
mov
push
pop
push
ds
inc
repz
inc
jl
dec
jns
sub
lds
dec
add
outsl
inc
cmp
lret
cmp
mov
mov
push
cld
inc
mov
cmpsb
xchg
and
mov
inc
pushf
fiaddl
dec
andl
mov
out
fs
jno
fst
cltd
insb
fiadds
mov
andl
pop
xor
mov
fildl
pop
push
lret
stos
jo
cwtl
cmp
xor
mov
faddp
sbb
popa
xor
cltd
pop
cmp
cmpsl
pusha
sbb
pop
daa
mov
xor
pop
in
aam
sbb
push
ja
in
jae
pop
cwtl
es
and
cld
inc
pusha
add
sub
cli
cmp
fldt
ljmp
push
xchg
mov
call
divb
inc
push
out
mov
bnd
scas
dec
imul
je
insb
and
fs
mov
push
add
arpl
push
lock
dec
push
add
mov
shl
inc
lahf
xchg
aam
inc
test
cwtl
aaa
jo
xchg
cmp
pop
jnp
scas
adc
pop
lods
pop
mov
lods
fs
push
pop
jns
cmp
xchg
cli
xchg
sub
xchg
loopne
mov
scas
xchg
jo
ds
mov
add
shll
mov
fwait
sub
mov
adc
fbstp
std
xchg
fstl
cli
aad
or
jmp
sbb
dec
xor
out
mov
xchg
mov
push
rcr
add
sbb
iret
mov
arpl
sbb
or
fstpt
cmpsl
js
fwait
divl
push
icebp
and
lret
mov
sub
sahf
pop
sarl
pop
or
je
imul
aaa
xor
shl
inc
inc
and
fmull
loope
data16
sahf
ljmp
das
xor
jecxz
push
enter
mov
fsubrl
cli
fcom
xor
lock
pop
push
add
jbe
fs
int3
and
jae
dec
mov
jae
imul
mov
mov
add
add
loopne
xor
imul
inc
subb
push
sahf
es
imul
sub
stos
adc
out
out
sbbl
cmp
sbb
fwait
mov
imul
ficomps
jle
mov
orl
fisttpll
int3
lock
sub
mov
cmp
shll
jl
jg
test
jns
sahf
jb
add
lock
jb
lret
push
mov
xorl
adc
mov
adc
repz
in
pop
bound
test
rcrl
xor
int3
test
cltd
nop
in
xchg
adc
xchg
sbb
xchg
data16
push
inc
xchg
bound
xlat
cmp
lds
inc
add
xchg
jae
mov
and
aas
push
mov
aam
inc
push
ret
cmp
xchg
movsl
add
cmp
pop
pop
mov
and
cwtl
mov
cmpsl
lods
es
lea
jle
mov
cmp
out
xchg
adc
or
data16
push
les
mov
lahf
fs
addr16
dec
xor
aad
iret
test
jp
test
insb
pop
lods
dec
mov
sbb
sub
aam
fidivl
cmp
mov
cmp
push
rolb
inc
inc
inc
cltd
hlt
lahf
leave
test
fxch
jbe
jecxz
mov
mov
push
inc
fsub
add
adc
sub
mov
shrl
jge
pusha
push
cmp
jns
add
push
mov
or
sahf
jmp
mov
subb
mov
cmpsb
and
dec
lods
mov
mov
lahf
sub
lret
jae
mov
ret
pop
daa
out
cmpsb
stos
pop
test
or
add
cmpsb
pop
fisubrl
test
inc
jmp
cmp
xlat
ret
loope
and
cmp
daa
push
mov
lcall
outsl
sub
jb
lahf
lods
dec
sub
test
push
mov
bound
jle
lea
inc
cli
imul
mul
pusha
mov
ja
sub
das
add
pop
cmp
pop
test
mov
cltd
not
orl
push
dec
jb
mov
mov
std
pop
mov
and
filds
inc
rorl
ss
test
adc
lock
sbb
decl
xchg
cmp
push
clc
outsl
mov
pop
hlt
lods
out
arpl
fnstsw
loopne
inc
loopne
xchg
cs
mov
mov
or
dec
push
lods
outsl
test
enter
out
fs
sub
iret
outsl
fdivrl
cli
rclb
add
cmc
arpl
outsb
inc
pop
inc
mov
push
test
in
sub
test
or
cmp
jmp
lahf
neg
fisubl
sub
scas
jbe
mov
xchg
test
fildll
jae
lret
sub
inc
xchg
fsts
vmovlps
cmp
ss
scas
lret
popf
sbb
pop
mov
ror
or
insb
jg
cmp
cmp
movsl
xor
in
outsl
or
imul
scas
insl
add
es
push
aad
shlb
mov
test
and
and
add
or
ss
les
movl
xchg
scas
daa
repnz
rep
aas
aaa
cltd
sbb
xchg
mov
mov
pop
xchg
jmp
subb
ficoml
mov
inc
lods
mov
and
inc
leave
add
outsb
sahf
jge
pop
mov
movsl
sbb
or
int3
cmp
mov
lret
cmpsw
inc
cmp
jl
xorl
lea
push
mov
cmp
in
iret
mov
jg
mov
push
lods
xor
lds
jle
imul
or
cmpsb
adc
add
adc
mov
cld
call
repnz
bnd
fiaddl
fdivrs
xchg
jae
std
jne
leave
xchg
cs
inc
lods
mov
fcomps
mov
push
scas
iret
jae
xor
lcall
pushf
jecxz
ljmp
shlb
test
mov
popa
incl
inc
and
into
jmp
mov
push
sbb
aam
stc
das
xchg
scas
mov
sub
test
dec
sbb
mov
adc
dec
cs
aad
add
mov
mov
loopne
imul
je
push
push
or
mov
cs
aam
xchg
dec
inc
jb
pusha
xchg
fwait
and
or
in
jecxz
mov
test
xchg
jo
gs
leave
cmp
addl
add
in
je
add
imul
in
gs
jb
and
sbb
popf
outsb
or
jno
jo
lret
shll
mov
xchg
iret
pusha
in
adc
dec
jnp
push
decb
push
or
mov
adc
pop
mov
dec
insl
aam
test
fdivrl
dec
jbe
orb
pop
cs
test
and
addb
pop
or
inc
outsl
jo
dec
in
insl
or
xchg
rorl
into
xchg
xor
add
jge
scas
scas
jmp
movsb
icebp
jle
xor
push
lock
les
lret
sub
mov
fcmovbe
push
repz
daa
lock
mov
js
add
pop
outsl
sbb
xchg
or
ss
jge
xchg
inc
dec
in
rcrb
xchg
push
std
xchg
fimuls
pop
movsl
es
jl
lds
pop
push
in
xchg
mov
and
fdivp
pop
movl
ds
jmp
pop
mov
icebp
xor
pop
adc
xchg
sub
sub
sbb
pop
or
inc
and
daa
incl
call
fsubrl
shrl
movsl
jb
xchg
subl
xchg
enter
cmp
jae
repnz
push
push
bound
cwtl
mov
push
cmp
fmulp
jecxz
outsb
int3
sub
das
cmpsl
lcall
lahf
test
inc
lcall
lods
lret
movsl
mov
shll
or
push
cmp
scas
jbe
js
sub
push
ja
xor
cmp
inc
xchg
xor
mov
add
inc
xchg
push
mov
inc
hlt
les
dec
jge
rcr
cmp
and
insl
loop
push
fsubr
or
jp
popf
mov
dec
cmp
add
out
or
enter
or
mov
push
xchg
pop
testl
push
mov
inc
jecxz
mov
test
inc
push
cmp
test
les
icebp
inc
out
js
dec
xor
jmp
cmp
test
jge
rclb
adc
xchg
jnp
or
fdivrs
lret
hlt
jbe
ja
arpl
jne
into
lds
test
fisttps
in
scas
loope
fs
daa
jle
push
daa
rcr
or
aas
push
inc
mov
test
sbb
repnz
mov
in
lahf
das
xchg
xchg
xchg
lock
test
jmp
push
mov
fcmovnbe
lret
sarl
hlt
mov
lods
into
jle
sbb
lock
mov
iret
and
xchg
xchg
jb
mov
out
repz
fwait
cmp
insb
cmp
out
pop
add
xchg
std
cmpb
add
and
xchg
ljmp
sbb
mov
push
xor
bound
cmp
outsb
es
pop
push
sub
add
sub
cmp
imul
xchg
sbb
fsubr
xor
add
xchg
push
pop
js
inc
icebp
loop
int
movsb
xchg
xlat
out
sbb
lds
lock
lea
dec
mov
test
mov
xchg
fisttpll
popa
in
xchg
push
fdivl
sbb
pop
lods
jbe
repz
xor
jno
sbb
pushw
xorl
xchg
outsl
leave
push
nop
pmuludq
js
test
jb
leave
mov
add
push
mov
mov
push
addr16
sub
out
hlt
sahf
xor
mov
and
je
dec
pusha
pop
or
xor
call
jo
mov
xor
inc
hlt
pop
push
or
or
jnp
inc
push
insl
shrl
dec
xchg
rcll
es
loopne
xchg
aam
xor
and
xchg
inc
lcall
dec
xchg
add
dec
push
subl
aas
cmpsb
enter
in
rcr
push
popf
sarb
test
mov
and
lret
sub
addr16
pop
pop
pop
dec
data16
xor
lret
fdivr
jb
add
outsl
repnz
shlb
sar
add
aaa
test
fiadds
into
pop
jne
add
add
pop
adc
push
scas
divl
and
cmc
pop
dec
into
cmp
mov
xor
mov
push
pop
push
out
mov
movsl
shlb
cmp
mov
push
in
sarb
ret
enter
ret
shll
adc
push
add
sti
jl
int
pop
sbb
fadd
iret
negl
jle
rcl
mov
popa
mov
icebp
pusha
jg
inc
dec
sbb
nop
mov
or
sub
cmp
xor
les
arpl
or
sbb
imul
xchg
loope
outsl
add
fidivrs
xor
ja
imul
xchg
cwtl
pushf
test
pop
sub
or
cmp
nop
daa
nop
bound
xchg
xor
pop
push
cmp
lods
jle
dec
or
adc
mov
mov
hlt
and
or
stos
repnz
fdivrl
dec
sbb
repnz
add
inc
lret
pop
into
outsb
push
repz
insb
lcall
in
jp
sbbb
push
mov
mov
jbe
into
mov
in
inc
icebp
lock
inc
mov
push
mov
test
sbb
lock
dec
es
cmp
mov
popf
imul
pop
and
xlat
pop
jae
pop
push
jecxz
insb
jno,pn
ljmp
mov
push
jbe,pt
negl
fcoms
js
jp
rcrl
sub
dec
test
push
ret
push
mov
and
sbb
mov
clc
pop
into
mul
test
fwait
ljmp
pop
iret
add
jne
jno
push
test
cwtl
or
xor
adc
push
and
dec
push
rorw
or
sub
add
push
xchg
dec
dec
lahf
dec
sub
adc
pushf
add
pop
dec
cmpsb
aas
std
mov
inc
pop
xor
fcmove
imul
int
push
xor
int
bound
ljmp
gs
scas
mov
cmp
cmp
dec
mov
stos
mov
add
mov
sub
fbld
mov
cmp
or
repnz
shll
cmp
pop
pop
xor
pop
mov
mov
gs
mov
rcl
inc
dec
sbb
push
mov
cmpsb
jb
mov
test
pop
loop
jle
in
stos
lret
rorl
andb
or
sti
mov
data16
jmp
outsl
jp
testl
mov
dec
mov
dec
sub
mov
in
sarl
out
and
aad
and
loopne
leave
call
popf
xor
ss
cmp
fcoml
dec
cmp
rorl
adc
xchg
inc
ret
imul
pop
iret
jns
aam
test
scas
stos
xor
imul
and
cmp
jo
inc
fucom
lret
sub
aad
sub
test
clc
call
nop
dec
loop
and
cwtl
std
xchg
cmp
ret
mov
dec
shr
dec
xor
push
mov
test
add
fidivrs
xor
std
lds
sub
int
cmp
add
xchg
les
test
pop
pop
test
into
inc
cmpsl
jb
out
cli
mov
dec
sub
or
ret
ret
mov
xor
daa
cmp
push
in
or
movsb
cli
inc
xchg
js
mov
enter
mov
icebp
push
popf
xor
orb
sbb
push
ds
adc
inc
xchg
nop
std
mov
sub
arpl
or
push
stos
adc
cmpsl
movsl
ret
movsl
dec
sbb
mov
or
loop
xchg
sahf
sbb
mov
icebp
pop
mov
lods
loopne
mov
cld
add
fcoml
testl
fimuls
jp
push
iret
adc
sahf
daa
pop
sub
fst
adc
lock
and
mov
inc
push
stc
aam
sub
cmp
push
aam
mov
in
cwtl
sbb
push
jnp
insb
add
cmpsl
mov
mov
es
incl
dec
mov
dec
fiadds
outsb
jo
lods
leave
push
lahf
xchg
push
nop
lret
negb
mov
push
fnstenv
jne
fldl2e
out
movsb
push
adc
lock
xor
int3
inc
or
lods
dec
mov
sti
cli
xor
or
mov
movsb
outsb
in
sub
popa
mov
mov
leave
sub
xor
hlt
jnp
push
push
movntq
out
pop
sbb
add
rcrb
int3
jmp
cli
push
inc
lret
iretw
cltd
xorl
rorb
movsl
mov
xor
push
into
sbb
leave
test
out
push
testb
sub
xchg
pop
lock
cmp
repz
hlt
mov
fsubl
xchg
ret
pop
cli
lods
lods
scas
add
mov
das
daa
out
add
mov
js
mov
jne
dec
fmull
testb
mov
or
pop
xchg
sbb
xchg
add
mov
test
daa
sub
mov
mov
insl
dec
mov
sub
leave
adc
lret
inc
sbb
xchg
and
push
pop
pop
push
adcl
xchg
scas
das
add
mov
stc
imul
mov
mov
jle
sbb
aaa
imul
mov
in
jae
je
lds
xor
mov
in
repz
out
rcrb
mov
les
mov
pop
mov
xchg
out
cmp
hlt
in
push
dec
dec
xchg
test
push
das
lret
fsubrl
cs
xor
xlat
leave
mov
out
imulb
inc
xlat
mov
adc
pushf
or
add
sub
fwait
out
cmp
leave
repz
idivb
pop
int3
stos
push
xchg
mov
shl
push
sub
lret
sbb
xor
imul
in
lahf
iret
sahf
cmp
out
nop
push
sbb
jnp
sarl
ret
ret
lret
adc
mov
clc
ret
sahf
in
add
iret
ret
mov
push
jnp
xchg
sub
cmp
cmpsb
aaa
xchg
and
inc
idivl
push
inc
xchg
push
fs
cmp
jo
rolb
jg,pn
xchg
mov
fnstsw
sahf
in
add
xchg
push
pop
ja
sub
ret
sbb
adc
and
sub
clc
pop
push
gs
pop
insb
out
or
push
out
pusha
pop
popf
iret
adc
sub
sbb
das
jne
push
aas
mov
mov
sti
es
scas
out
inc
sti
inc
mov
fwait
into
test
pop
or
xchg
dec
stos
lock
or
push
push
pop
cmpsl
test
sbb
xor
add
loopne
push
push
shlb
fcmovnb
dec
cmpxchg
mov
insb
sub
inc
mov
sub
sbb
adc
lea
loop
xor
das
mov
or
pop
xlat
pop
push
fdivr
add
daa
xchg
sub
out
pushw
jne
std
pushf
adc
movsl
fists
fwait
stos
ret
xor
sub
mov
pop
sahf
xorl
inc
push
in
cmpsl
sbb
movsl
xorl
imul
xchg
ja
cmp
xchg
hlt
mov
push
test
sbb
add
push
adc
test
and
sti
int3
mov
popf
aaa
rolb
aas
cld
fstps
pop
pop
and
sbb
inc
push
and
iret
push
mov
sbb
ja
xor
or
lret
pushf
lret
cmp
xor
ja
outsl
fsubrl
or
leave
xchg
jbe
jge
mov
xor
push
xor
jns
test
daa
jae
jbe
aas
inc
sub
and
xor
cmp
or
xchg
mov
cmpsb
out
in
lahf
inc
pop
mov
mov
sahf
in
imul
filds
cli
xchg
xchg
sub
dec
jecxz
and
std
sahf
dec
setp
stos
add
shll
cmp
fstpt
aas
movsb
fwait
push
xchg
jge
sahf
nop
jno
imul
cs
jmp
and
les
cmp
sbb
add
popf
or
clc
mov
cmp
add
mul
pop
mov
into
aad
std
imul
nop
adc
mov
cwtl
aam
add
mov
jae
xchg
sti
daa
std
dec
push
cmp
push
ds
jmp
cmp
js
xor
pop
jne
mov
and
fimuls
icebp
add
xchg
mov
repz
incb
mov
call
cmp
jb
inc
fimull
mov
fcomip
pop
mull
in
lock
in
push
cmp
xchg
shl
in
shll
lret
mov
push
mov
leave
outsb
fs
xchg
jl
cmpsl
shld
in
pop
pop
and
icebp
mov
daa
cmc
dec
add
sbb
dec
pop
int
lods
cmp
or
out
mov
or
pushf
clc
xor
inc
fwait
add
test
not
lea
sub
mov
cmpsb
cmp
pop
test
testl
shl
sbb
sti
sar
repnz
xchg
pop
xor
push
loope
imul
lret
in
out
roll
mov
xlat
iret
int
jmp
xchg
adc
in
mov
push
cmp
xor
dec
lea
out
popf
mov
sub
add
mov
jns
out
fidivrl
test
adc
and
jns
bound
lea
push
aas
pushf
lcall
movsl
push
test
mov
cld
dec
and
fwait
sbb
movsb
cmpb
in
xor
insb
arpl
mov
mov
xchg
fsubrl
cmpb
jl
jecxz
mov
dec
adc
scas
popa
pop
rcrb
and
push
or
ss
push
push
movsb
daa
dec
pop
or
mov
mov
mov
incb
repnz
pop
pop
or
out
add
mov
jmp
movsl
adcb
xchg
mov
inc
cmpsb
movsb
xor
sub
fdivrl
dec
loopne
inc
mov
lcall
jecxz
pop
push
jo
fucomi
mov
hlt
jno
push
fimuls
lods
fwait
cmpsl
pop
imul
notb
out
divb
mov
mov
out
call
popa
add
cld
hlt
cmp
stos
ret
xchg
pop
xchg
push
call
pop
lock
xchg
insb
fdivrl
xor
in
stos
and
jg
add
pop
sub
push
inc
dec
jmp
test
sub
pop
std
nop
push
addr16
cmp
les
push
cmp
sti
fimuls
mov
push
pop
aas
pop
test
fsubr
mov
out
sub
mov
insl
rorb
mov
mov
lahf
xchg
fwait
lea
xor
cmc
adc
in
stc
push
inc
pop
mov
xchg
pop
add
xchg
notl
cltd
jns
in
stos
js
mov
sbb
jl
add
movsb
clc
or
insb
push
jl
push
ja
cmp
out
lret
mov
add
adc
sub
xor
in
cmp
shr
out
imul
das
fdivrl
jg
ljmp
test
pop
add
sahf
enter
daa
sbb
push
movsb
pop
int
inc
lahf
loopne
dec
dec
mov
jno
sti
add
cltd
dec
divb
adc
loop
roll
mov
push
ret
les
pop
sub
aas
in
fld
push
das
or
fistl
or
icebp
add
pop
xor
sahf
sbb
jmp
bnd
outsb
xchg
std
sbb
rcrl
enter
out
js
imul
insb
xor
loopne
xor
cmp
inc
mov
and
xor
outsl
and
inc
sub
bound
push
aaa
mov
mov
xchg
sub
jb
inc
sub
sub
xchg
jo
jbe
pushf
add
xor
sbb
stc
fadds
xor
push
gs
push
pop
out
enter
inc
test
xchg
add
xor
testl
xor
cmp
jg
adc
ret
xchg
add
inc
clc
mov
fcoms
call
sub
cmpsb
mov
lahf
mov
insb
into
jbe
loope
xchg
fbstp
or
pop
fmuls
mov
inc
xor
stos
xor
insl
call
sbb
jne
mov
inc
xor
sub
mov
outsb
sub
es
aas
repnz
stc
sar
add
pop
xchg
in
inc
and
push
addr16
sbb
cmp
inc
push
push
add
rolb
and
sarb
loopne
insb
or
jecxz
xchg
das
jo
mov
aam
adc
cmp
jne
daa
pop
cmpl
movsb
cltd
adc
std
cmp
test
lret
mov
imul
insl
jmp
adc
hlt
fwait
mov
in
and
pop
int
out
ret
pushf
int3
cmc
out
or
cmpsb
gs
push
sbbl
ds
lea
loopne
jo
sbb
cs
das
inc
push
push
mov
lds
cmp
lret
ds
es
lcall
fldenv
mov
pop
pop
or
mov
stos
in
inc
ljmp
lock
nop
rcrl
mov
mov
push
sbb
xchg
jg
js
stos
dec
dec
mov
add
xchg
mov
mov
mov
ror
gs
jge
daa
xchg
cmpsb
lods
push
outsl
ret
push
cld
insb
mov
idiv
sti
mov
pop
icebp
arpl
jo
leave
mull
subb
dec
imul
data16
pop
inc
pop
xchg
and
lods
out
cmp
push
fcmovb
cmp
xorb
mov
nop
jecxz
cmpsl
lds
lret
mulb
sub
je
lcall
enter
inc
jb
sub
xchg
xchg
adc
dec
xchg
stos
lcall
stos
push
shr
and
jo
pop
shl
nop
sub
imul
cmp
ss
xor
idivl
leave
mov
out
xchg
dec
jmp
sbb
mov
enter
and
icebp
fs
daa
dec
xchg
daa
loopne
std
xchg
in
jecxz
hlt
pop
dec
nop
movsb
or
mov
adc
xlat
addr16
out
iret
cmp
iret
sub
cltd
ja
jb
loop
movb
es
mov
adc
push
orl
mov
dec
dec
lock
pop
inc
mov
or
movl
movsl
mov
push
and
mov
hlt
lds
jl
add
inc
jecxz
dec
adc
add
repz
out
jle
or
pop
inc
inc
clc
roll
fwait
pop
cwtl
cwtl
nop
repz
inc
cmc
call
into
lret
xchg
sahf
pop
and
pop
movsb
pop
cmpsb
add
adc
in
mov
lds
add
ljmp
add
ret
je
xchg
movb
xor
in
std
cs
call
sbb
adc
sub
in
sbb
std
mov
mov
jns
lods
cwtl
cmp
pop
decb
fidivrl
or
xor
jb
aaa
movb
ret
mov
inc
add
ss
shlb
mov
adc
push
repnz
sbb
shlb
cmpsl
pop
cmp
fisubs
dec
into
cltd
clc
jg
repnz
fadd
int
fisubl
xor
add
test
xchg
push
nop
shrb
xor
loopne
ret
fcoml
mov
cmp
xchg
inc
scas
gs
lret
out
or
mov
push
ficoml
incl
testb
aad
push
js
inc
outsl
xlat
xchg
out
test
adc
fwait
js
cmp
jno
movsl
mov
sub
inc
jbe
fsubl
outsl
hlt
data16
or
test
loopne
aaa
es
push
imull
leave
ds
mov
sarl
addr16
add
mov
jg
loop
or
jbe
pop
addr16
jnp
clc
dec
clc
in
imul
lcall
add
cmpl
mov
lods
outsl
inc
dec
andb
xor
sub
xchg
push
lods
orl
add
add
jge
cmpsb
int3
cmp
mull
cmp
xchg
inc
lds
jnp
pop
ljmp
nop
xchg
shlb
and
popa
into
mov
jmp
fwait
mov
imul
cmp
mov
divb
idivb
or
cmp
mov
fistl
xor
mov
dec
shr
dec
int
push
ret
subl
ss
out
inc
mov
mov
cltd
sub
jns
test
xor
push
push
cmp
xchg
adc
repnz
aas
daa
jecxz
cmpsl
nop
mov
jo
xor
dec
pop
scas
das
in
jb
aas
cwtl
cwtl
sub
pushf
or
pop
pop
push
xchg
aam
xchg
in
push
cmp
dec
sbb
push
loopne
sbb
cmpb
dec
adc
xlat
dec
or
outsb
adc
fldt
jle
push
push
cmc
jbe
pop
mov
cmp
test
mov
mov
dec
push
ret
adc
dec
cmp
push
lcall
decl
sub
clc
mov
pop
loop
sbb
aam
stos
das
and
pop
popf
or
jl
xor
jno
mov
xchg
in
outsb
out
mov
fiadds
pop
mov
in
das
jne
or
pop
ret
mov
sti
jecxz
clc
aad
sub
mov
insb
sub
out
add
or
repz
in
jecxz
dec
mov
adc
xor
lods
dec
pop
xor
mov
push
jp
fnstenv
subb
rcrb
stos
xchg
cmp
adc
fcompl
loopne
pop
jmp
sti
lret
jno
jo
andl
insl
andb
mov
out
scas
cli
and
sub
loop
pop
inc
or
sub
clc
mov
ljmp
sbbb
loop
mov
sarb
xor
pop
rorb
cs
jae
xchg
mov
add
sub
jmp
adc
mov
fimuls
orl
mov
add
and
add
movsl
out
jne
outsb
sub
mov
sub
cmpsl
test
lret
clc
cwtl
cmp
fcoml
add
flds
jb
adc
jno
fs
xorl
test
pushf
inc
jo
mov
ja
lahf
mov
push
pop
dec
arpl
jbe
iret
jle
ljmp
jo
test
sbb
jle
arpl
aad
add
aad
jns
inc
in
hlt
cwtl
inc
push
xor
hlt
cmp
negb
enter
cwtl
push
xorb
cmp
popa
xor
pop
sub
sbb
pop
inc
adc
imul
sub
push
les
mov
push
dec
fsubs
and
inc
sarl
xchg
mov
sub
jle
roll
fcompl
scas
mov
lret
pushf
sbb
dec
cli
mov
cmpsl
gs
mov
ss
scas
or
lret
inc
adc
sub
xchg
into
xchg
js
inc
push
mov
dec
mov
iret
sub
cmpsl
push
lods
js
cmp
cmpsb
or
les
les
je
lods
cmp
rcr
adc
sbb
cmc
xchg
mov
orl
cmpsb
shrb
shl
dec
pop
call
sbb
ret
push
iret
push
push
push
out
push
icebp
fs
xor
insl
mov
aad
pop
je
push
push
xchg
xchg
mov
popf
jo
lods
push
dec
decl
mov
mov
ja
jmp
adc
inc
mov
rorb
jnp
stos
mov
push
aam
aas
sarl
sbb
fs
lods
mov
pop
clc
and
mov
push
jo
pop
jg
push
iret
popa
jns
ljmp
dec
fwait
les
mov
ljmp
sbb
jecxz
adc
cmc
in
ret
pusha
adc
mov
dec
sarl
jge
inc
into
stos
inc
xchg
lret
out
sahf
out
pop
in
scas
mov
pop
or
mov
pop
push
sbbl
out
inc
dec
idivb
inc
pop
mov
movb
iret
xor
mov
jno
stos
enter
aad
jmp
jl
mov
or
dec
nop
iret
arpl
cltd
and
aad
sbb
mov
adc
mov
jge
push
enter
lea
lock
xchg
push
pushf
mov
cmp
sbbb
pop
push
fs
movsl
and
ja
push
pop
mov
adcb
sbb
mov
add
popa
mov
xchg
dec
iret
cmp
fisubs
jmp
jecxz
sti
shlb
and
push
imul
loop
mov
pop
lea
push
sub
push
dec
sbb
das
insb
les
fidivs
loope
outsb
push
scas
sbb
xor
pop
jb
or
and
call
shrb
daa
mov
xchg
xlat
cld
pop
xor
push
cld
add
dec
pop
dec
in
icebp
or
call
fsubs
inc
addr16
jbe
mov
ljmp
inc
lock
push
out
mov
out
jmp
nop
pop
fldl
xlat
mov
test
icebp
dec
lcall
jnp
pushl
push
lahf
push
enter
fs
jmp
into
inc
mov
outsb
adc
inc
xchg
inc
add
pop
scas
push
out
mov
mov
lods
add
sti
mov
xor
and
aaa
inc
in
lods
divl
mov
cltd
cmc
sahf
adc
jg
imul
fsts
jge
xchg
int
addr16
sbb
dec
sbb
xorb
outsb
cwtl
movsb
xor
jle
lret
mov
mov
mov
fldt
cmpsb
mov
bound
jnp
test
jb
loope
ja
aad
inc
mov
adc
test
cli
jge
fisubl
add
cmc
sub
out
nop
lcall
jge
xchg
inc
pusha
sbb
sub
inc
cmc
inc
or
fnstsw
ret
fdivrs
shrb
jge
add
ljmp
rcl
jns
inc
in
push
mov
cmp
out
xor
mov
and
js
sub
mov
inc
sbb
rol
xchg
lcall
jne
sbb
jb
pop
imul
out
adc
mov
xor
stc
mov
jle
cmp
lods
andb
mov
pop
pop
mov
cmpl
push
mov
mov
and
pop
aas
dec
ljmp
jmp
add
cmp
mov
cmpsl
clc
idivb
mov
cmp
les
pop
push
mov
push
int
cmpsl
cmp
call
fs
imul
imul
pop
mov
test
mov
jae
mov
adc
jg
mulb
add
stos
inc
sbb
mov
fabs
out
repnz
inc
and
movsl
dec
shrb
cmpl
sarb
test
stos
and
into
xor
aam
jbe
out
push
jmp
fsubrs
fdivl
int
adc
stos
sbb
jne
imul
daa
bound
push
push
sub
mov
loopne
lahf
icebp
pop
addl
aas
push
mov
loopne
jle
inc
inc
sti
aas
ret
mov
outsb
adc
adc
and
pop
push
pop
popf
rcrb
loopne
pusha
cmp
enter
jb
ljmp
test
loop
pop
int3
bnd
test
sbb
sub
popf
xor
scas
cs
and
push
std
bound
xchg
pop
mov
daa
dec
add
sbb
and
fs
pop
lds
cmp
jno
daa
fidivl
cli
dec
xchg
and
daa
jne
mov
inc
jle
dec
cmpsb
aas
mov
push
testl
mov
adc
in
push
in
fadds
enter
shlb
jbe
clc
add
ret
xlat
test
push
push
dec
mov
mov
bound
bound
jmp
jle
bound
cmp
sbb
jnp
fcoml
adc
push
lods
dec
pop
jae
pop
cmp
jl
addr16
mov
mov
fstps
test
cmp
inc
or
mov
js
pop
repz
fisttpl
or
andb
inc
and
mov
push
sbb
cmp
push
pushf
orl
orl
inc
xor
mov
fidivl
out
xor
cmp
dec
pop
push
lahf
push
mov
orl
mov
mov
cwtl
adc
inc
aaa
push
add
lds
add
sbb
stos
pop
or
xchg
add
mov
adc
pop
insl
hlt
imul
clc
cmp
sarl
repnz
outsb
pcmpeqw
cmc
in
push
pop
adc
jae
jo
dec
push
hlt
cmp
push
pushf
dec
fs
pop
imul
loop
repz
jg
das
fnstenv
jnp
sub
pop
inc
cwtl
xchg
mov
lods
and
pop
mov
pop
sub
insb
jno
lret
add
dec
movsb
mov
aaa
and
or
xchg
inc
mov
inc
xor
inc
mov
aad
popf
pop
out
or
lret
ds
adc
shl
xchg
stc
and
dec
adc
jle
pushl
shlb
sti
mov
jbe
jecxz
insl
rcll
and
inc
repz
stos
xchg
clc
cmp
pushf
daa
push
jae
adc
bound
lods
arpl
xchg
aam
aam
mov
mov
adc
mov
xchg
in
sub
sub
add
sahf
mov
add
repz
sbb
test
loope
pop
aaa
repz
ror
sahf
std
repnz
fisubrs
shll
fisttpl
fcmovb
cld
dec
mov
je
addr16
mov
bound
aam
pop
aaa
movsl
jg
loopne
mov
xor
mov
pop
jge
xor
movl
adc
fsubrl
xor
cmpsb
repz
adc
mov
push
cli
push
repnz
pop
cltd
dec
inc
push
xchg
dec
xorl
fdivp
and
inc
iret
inc
outsb
push
int
jecxz
out
inc
mov
pop
ret
fimull
mov
xor
stos
push
je
mov
pop
cmpsb
aad
nop
aas
mov
sarl
mov
dec
push
leave
ret
inc
jo
movb
aad
stos
or
aas
dec
sbb
jb
sub
idivl
js
popf
inc
stc
sar
mov
mov
sahf
or
jns
fmul
hlt
je
hlt
xor
mov
mov
fmull
mov
dec
cs
repnz
shll
mov
sbb
cltd
repnz
test
lahf
dec
and
and
and
shl
jae
fstps
aad
sahf
and
stos
dec
pop
stc
mov
aad
sbb
push
ret
adc
xchg
jmp
mov
test
pop
cmovb
dec
movsb
sbb
aas
das
bound
push
rcpps
inc
daa
mov
cmp
movsl
icebp
int3
sub
lahf
mov
add
ljmp
xchg
aas
jg
mov
pop
and
cld
mov
lret
pop
xlat
pop
pop
stc
sbb
xor
outsb
loop
shll
xchg
pop
inc
mov
push
rolb
loope
mov
bound
mov
dec
jp
imul
dec
insl
out
pop
or
decl
das
xchg
stos
imul
and
push
fisubrl
inc
push
jo
adc
push
cmp
pop
lods
mov
dec
and
ss
pop
sbb
inc
push
sbb
sahf
or
in
xor
push
dec
dec
fldt
jnp
movsb
loope
aas
xchg
imulb
jno
sbb
addr16
or
subl
cmpsl
mov
mov
xchg
jl
sbb
mov
and
insb
out
pusha
test
or
das
mov
repz
arpl
mov
sbb
stos
mov
xor
dec
adc
out
stos
push
and
icebp
adc
aaa
jae
sbb
in
cmp
pusha
xorb
packsswb
iret
jmp
push
in
xor
adc
inc
mov
imul
aad
dec
repnz
and
dec
bound
fs
scas
bound
clc
mov
addr16
mov
cld
sahf
or
jg
jecxz
cld
fcompl
mov
sti
jl
mov
xlat
pop
shlb
icebp
and
nop
sarb
xor
testb
jbe
lcall
sti
repz
inc
sub
cmp
test
dec
cmpsb
enter
test
mov
pop
and
icebp
pusha
pop
adc
out
push
jmp
add
jl
movsb
pop
cmpb
push
loop
stos
xor
jns
inc
mov
repnz
dec
shlb
jns
dec
add
inc
fnstsw
cmc
ljmp
fcomi
orb
pop
add
or
stos
sbb
jbe
in
or
sbb
fildl
jb
push
out
pop
lds
sahf
ret
ret
fildll
ljmp
adc
push
jo
dec
mov
jno
ljmp
xchg
cmp
sbb
push
xor
adc
aam
insb
and
sub
xor
stc
in
shlb
sbb
mov
out
jo
inc
adc
push
dec
xor
imul
in
mov
cmp
cmp
das
sub
or
push
fimull
nop
iret
repz
push
jne
shrb
xchg
xlat
jecxz
int
lods
sbbl
gs
xchg
mov
mov
scas
dec
rcrb
stc
jg
sbb
notl
lods
mov
movb
jo
cmp
jne
sub
lods
arpl
or
jno
mov
add
mov
jecxz
push
pop
xchg
std
mov
repz
mov
repz
push
cmp
dec
add
push
int
mov
pop
sbb
dec
jmp
add
adc
enter
and
outsb
fimull
pop
ljmp
cmp
repz
cld
in
out
dec
icebp
mov
adc
xlat
mov
leave
push
mov
mov
fstl
mov
sub
jnp
xor
sarb
add
icebp
test
jo
les
jmp
outsl
push
ds
addr16
xor
iret
pop
movsb
pop
lret
popf
and
lods
push
mov
movsl
stc
xchg
imulb
jbe
and
xorb
jno
mov
movsl
rorl
or
jmp
mov
cmp
dec
not
adc
nop
pop
xor
jecxz
mov
repz
int
mov
shlb
iretw
aas
roll
jp
sti
gs
cmpsl
add
mov
xchg
popl
clc
mov
xchg
push
push
jo
outsb
xchg
lods
loop
push
add
mov
ljmp
jno
mov
jnp
cmp
inc
mov
pmuludq
imul
push
xor
adc
outsl
rclb
mov
push
mov
or
push
lea
jo
cmp
out
fistpll
xchg
pop
out
fcoms
push
scas
dec
test
or
loope
cmpb
mov
cli
dec
pop
mov
in
fcmovu
aam
js
idivb
mov
movsb
jno
test
enter
inc
sub
es
jge
and
test
rolb
mov
jns
cld
cmp
inc
rcr
inc
jns
loope
incb
mov
je
adc
pop
dec
mov
inc
xchg
lds
xorl
dec
and
ljmp
jo
push
add
imul
mov
mov
sub
xor
ss
mov
mov
jle
xchg
shl
sbb
add
jg
loope
lods
sbb
xor
add
xchg
insl
into
sbb
in
inc
mov
jb
fcompl
dec
out
inc
mov
rclb
lret
push
loop
dec
out
sbb
adc
sti
aaa
inc
pop
add
mov
cli
insb
mov
pop
inc
cmp
adc
dec
es
call
inc
push
push
push
add
inc
jnp
inc
loopne
add
sub
push
cmp
or
xor
jo
pop
cli
std
xchg
jno
enter
inc
jmp
add
sbb
add
and
push
mov
imul
fs
pop
mov
jns
sub
jne
adc
out
xor
inc
stos
arpl
mov
xchg
add
jp
std
pop
xor
repnz
xor
xchg
sbb
mov
testb
xchg
test
adc
pop
in
jb
ss
repnz
negl
pusha
shll
push
mov
scas
nop
repnz
and
jle
mov
pop
hlt
gs
mov
inc
sbb
adc
jl
jnp
dec
mov
fildll
xor
mov
xor
or
dec
das
jb
mov
mov
es
xchg
and
jnp
mov
push
fnsave
pop
dec
mov
popl
int3
pop
pop
cmp
dec
mov
faddl
add
and
adc
cld
ss
pop
outsb
clc
pushf
stos
mov
nop
pop
ret
mov
pop
lods
aad
and
popf
xchg
push
or
xor
inc
in
push
lods
sub
and
idivb
inc
adc
in
push
addl
pop
fisttpll
popa
js
cmpsl
push
jg
pop
sub
sbb
fcoms
dec
sbb
pushf
pop
aas
jb
fistpll
mov
lods
stos
cmpl
mov
mov
push
adc
iret
mov
daa
pushf
test
pop
lcall
fists
pop
xor
mov
lcall
es
lret
xorb
dec
lods
pop
cld
push
jecxz
adc
sub
dec
inc
aas
dec
int3
sub
sub
imul
in
pop
dec
or
icebp
repnz
push
cmc
and
sbbb
outsl
xchg
cli
das
sti
xor
shlb
rolb
in
mov
rcrl
cmp
js
sub
pop
popa
mov
pandn
lahf
dec
or
leave
push
cli
or
cld
or
inc
xor
jae
leave
testb
repz
outsb
add
adc
out
mov
xor
sbb
sbb
sub
popa
and
pop
push
cwtl
les
imul
lahf
daa
test
outsb
lods
aas
loopne
into
jbe
stc
fstpl
fnstsw
push
xchg
adc
cmp
ss
dec
push
add
fcoml
xor
testl
loop
fstpl
xlat
js,pt
out
outsb
loope
or
mov
xchg
xor
jmp
pop
add
movb
xlat
push
imul
inc
iret
sahf
out
dec
sbb
insb
stos
mov
push
imul
pop
mov
imul
pop
push
add
add
add
xor
sub
lds
in
fsubrl
fucomip
push
xchg
ficoms
cmc
xchg
flds
cmpsl
mov
xchg
enter
sbb
xchg
jp
pop
fdiv
adc
adc
hlt
push
in
enter
pushf
sbb
das
push
lcall
lock
sub
ret
jnp
loopne
and
add
int3
add
and
sbb
ljmp
hlt
xor
divb
iret
and
jecxz
push
push
mov
test
mov
inc
loopne
popf
test
fbld
aas
adc
jg
jns
or
push
dec
sbb
cmp
adc
push
mov
add
xor
cli
push
pop
imul
sub
aad
sti
into
add
outsb
pop
mov
mov
add
xor
insb
push
adc
or
xor
aad
js
lret
adc
fisubrs
sub
jle
jmp
fidivl
xchg
adc
cmp
jne
arpl
inc
add
mov
pop
mov
cs
sbb
shr
stos
jmp
fldenv
ret
popa
mov
mov
add
jl
xor
stc
sbb
xchg
insb
insl
sbb
bound
test
jl
lcall
lock
sub
stos
test
or
or
fcoms
aam
xchg
bswap
push
adc
mov
insb
push
sbb
pusha
mov
mov
xlat
icebp
xchg
add
pop
add
push
pop
das
push
in
inc
scas
adcl
sbb
stos
shlb
sti
aam
jecxz
lcall
popa
cmpsl
bound
jmp
ss
xor
jg
pop
mull
gs
push
push
inc
add
mov
mov
or
mov
sbb
inc
mov
popfw
pushf
pusha
stos
arpl
fwait
outsl
out
xor
fildll
pop
mov
hlt
jl
call
es
mov
cmpsb
mov
jl
lea
and
cmp
cmpsb
fsubrl
dec
push
and
mov
push
and
cltd
nop
inc
repnz
sqrtps
ficoms
xchg
iret
cli
js
stos
clc
stc
sarb
addr16
fcomps
sbb
pop
jl
movsl
negb
mov
or
lcall
sbb
xor
mov
sbb
test
clc
dec
cld
dec
cld
pop
jecxz
fs
addr16
mov
loop
inc
mov
aam
sarb
mov
mov
int
cmpsl
movsb
push
in
inc
setge
pusha
or
or
xlat
push
push
or
xchg
cltd
dec
xchg
int
xlat
push
or
dec
cmp
icebp
adc
sahf
dec
or
ss
fwait
pop
jmp
cli
adc
add
arpl
ret
mov
jae
cmp
rorb
mov
mov
sub
mov
push
dec
out
xlat
ss
into
mov
xlat
inc
pop
pusha
sti
xchg
fstcw
xchg
sbb
std
out
pop
fucomp
pop
lcall
mov
lret
pop
pop
dec
aas
std
add
loopne
xorl
stos
push
inc
inc
bound
dec
push
es
aaa
insb
jmp
lcall
mov
in
mov
ret
hlt
cld
cmp
repz
or
movsl
into
fdivrs
mov
pop
xor
xor
jno
push
add
je
inc
pop
mov
pop
cmp
cwtl
jbe
mov
pop
jb
int3
out
xchg
cwtl
or
cmc
add
and
sbb
addr16
jp
daa
xchg
cmpsl
adc
fisttpll
sub
and
sub
mov
push
mov
and
ficoml
xchg
rolb
mov
mov
jns
jmp
xchg
or
adc
xchg
je
jmp
dec
add
fucomip
mov
imul
arpl
add
dec
movsl
fcmovb
push
or
xor
mov
pop
pop
mov
mov
xchg
xor
data16
je
pop
insb
das
xchg
adc
divb
cld
sbb
out
mov
andb
xchg
inc
lock
fiadds
push
add
mov
dec
sbb
leave
dec
cmpsl
sbb
call
test
xchg
in
aaa
jne
inc
jp
stos
or
sbb
popf
in
cltd
notl
lods
bound
push
xchg
or
xor
icebp
addr16
cmc
push
jo
push
xchg
pop
push
and
xchg
cli
sub
nop
cld
popf
test
loope
xchg
pop
mov
lahf
mov
mov
inc
lock
sbb
lods
dec
in
jbe
scas
adc
rorb
sub
mov
popa
imulb
std
mov
imul
add
adc
sbbb
test
cli
dec
imul
les
xchg
add
or
or
movl
js
fcoms
ss
or
ja
popf
lds
fs
idivl
out
dec
pop
push
repnz
aaa
lods
xchg
push
cmp
fstps
aaa
or
movsl
addr16
sub
outsb
cmp
push
xchg
nop
fcoml
or
movsb
mov
mov
sbbl
popf
add
push
loope
adc
xchg
mov
cld
lret
jg
shlb
sub
pop
and
xchg
addr16
xlat
pop
aad
cmc
into
imul
push
and
inc
sub
inc
lds
popa
mov
ja
lods
lods
sbb
sahf
pop
aaa
cmp
lcall
stos
stos
inc
or
jl
mov
push
push
aas
lds
movsb
jb
jae
add
xor
lret
ljmp
jl
mull
inc
pusha
js
stos
add
mov
adc
sub
dec
inc
or
ret
das
push
xor
push
and
lea
popf
inc
ds
ja
daa
jo
repnz
mov
mov
stos
jp
ret
push
popf
sbb
mov
adc
das
enter
jge
cmp
cmpsb
or
xchg
mov
add
outsl
add
add
and
mov
xorl
repz
shl
cwtl
or
sti
add
mov
or
jo
into
enter
cmp
jnp
xor
pop
arpl
nop
aam
sahf
dec
jno
ja
pop
popf
push
rcrb
iret
mov
arpl
faddp
adcb
mov
loope
cwtl
mov
cmp
jbe
jg
mov
pushf
cmp
icebp
dec
test
mov
push
and
and
fs
mov
xchg
loop
sbb
add
xor
cmpsl
pop
pop
enter
cmpsl
stos
sub
xchg
ja
jle
sub
pop
and
mov
xor
icebp
dec
mov
std
por
sub
aad
es
cli
or
xor
fisubs
mov
popa
mull
mov
push
sbbb
mov
jbe
push
or
ljmp
mov
in
into
addr16
dec
gs
inc
les
mov
jns
mov
pop
lock
fnop
icebp
leavew
push
fcoms
pushl
inc
cmp
mov
jb
in
adc
jl
pop
push
xchg
popf
jg
cmp
jbe
imul
jbe
test
push
icebp
sub
jo
xchg
daa
sbb
aas
jl
test
shlb
and
aad
lahf
outsl
or
xchg
pop
push
hlt
sbb
fnsave
adc
xor
frstor
sub
stc
adc
and
int3
ret
mov
cltd
inc
imull
rcrb
outsb
push
loopne
std
scas
pop
aaa
or
pushl
sbb
dec
jae
data16
cmp
jmp
loope
popa
cmc
xor
pop
or
daa
pop
sbb
dec
fiaddl
sub
dec
into
push
xchg
push
aaa
lret
or
fisttps
xchg
push
std
or
dec
in
add
dec
enter
divb
mov
lods
call
dec
push
mov
xor
bound
push
sbb
lods
mov
xchg
lods
mov
into
pop
xchg
idivb
icebp
imul
cmpsl
sub
pop
adc
pop
xor
xchg
int3
stos
xchg
xchg
addr16
icebp
mov
adc
mov
test
sbb
dec
popa
and
cmpl
xor
fidivrs
cmp
loope
in
test
xchg
jmp
cmpsb
add
mov
es
xor
sbb
dec
mov
push
push
or
std
cmc
xor
dec
xchg
pusha
jecxz
xlat
loopne
ss
ret
sbb
jge
dec
mov
ficoml
jnp
mov
cmp
ss
cmp
xor
mov
mov
movb
cmp
leave
ret
hlt
push
cmp
daa
sub
cwtl
fisubrs
pop
ja
sub
or
rcll
jns
xor
push
aaa
sahf
cmpl
xor
push
push
push
pop
shll
inc
loop
into
lock
test
mov
push
fsubrs
out
jp
arpl
adc
test
adc
mov
sti
mov
dec
lock
fs
or
test
out
xor
dec
cmpsl
jno
mov
pop
fwait
lcall
fcmovnu
mov
push
lea
cmp
out
in
inc
lret
mov
cmp
in
inc
jle
loopne
pop
sti
movsb
iret
jne
jmp
jns
and
inc
in
pop
stc
mov
jo
outsl
pop
aas
lock
xchg
add
sahf
outsl
cmp
push
cmp
jl
and
or
jecxz
sub
mov
inc
push
dec
cld
and
lods
mov
int3
adc
aas
cmp
inc
mov
jmp
or
ret
dec
xchg
rcr
ss
push
xchg
mov
cmp
mov
ds
mov
lret
lods
adc
mov
movsl
sbb
dec
mov
push
icebp
xor
sub
jo
xchg
jnp
dec
jo
loop
iret
adc
sbb
sub
ss
sbb
cmp
mov
je
clc
mov
pop
movsb
test
je
sbb
add
nop
nop
ret
dec
sub
mov
sahf
loopne
cs
aam
subb
mov
jl
loop
pop
jg
enter
imul
inc
mov
icebp
jnp
sbb
mov
xchg
idiv
hlt
iret
rclb
mov
idivb
in
decl
ret
sbb
js
scas
inc
cwtl
jbe
or
mov
loope
and
outsb
jl
ss
es
je
loop
das
push
int3
sub
ja
cmpsb
ss
jb
push
xchg
cld
leave
pop
sub
fbld
push
out
add
jmp
aaa
fnstsw
test
inc
mov
mull
mov
repnz
out
pop
jo
adcl
rcrl
aad
cltd
flds
pop
and
add
aam
add
mov
out
hlt
out
gs
jge
xlat
hlt
fs
mov
out
xchg
cmp
inc
sub
fsts
cmpsb
mov
adcb
cmc
adc
mov
cwtl
sbb
dec
xchg
xchg
movsl
repz
dec
push
xor
cmpsl
stc
adc
lret
lret
add
sbb
xchg
stc
xor
clc
xor
inc
sbb
push
rolb
mov
mov
or
lds
idivl
jl
xchg
xor
fistps
cmc
out
cmc
mov
stc
bound
lcall
test
js
mov
insb
mov
fcoms
xor
inc
imul
mov
jne
mov
rol
ja
jmp
pop
popa
cld
pop
es
mov
scas
jb
mov
sbb
and
pop
test
mov
inc
out
sbb
jp
adc
popf
fldenv
and
loope
jecxz
xor
flds
leave
je
xchg
xlat
cwtl
sahf
iret
sbb
gs
enter
js
js
movsl
push
jmp
or
jbe
xor
and
mov
push
mov
aad
and
push
pushf
lods
pop
movsb
inc
adc
stos
jl
mov
sarl
xor
cmc
out
and
sbb
fdivp
lret
and
sub
rcrb
loope
inc
fldt
out
push
push
push
or
mov
ficompl
repz
roll
mov
test
jb
push
sbb
xor
pop
xor
and
sahf
pop
mov
outsb
arpl
pop
mov
push
jmp
jnp
mov
pusha
mov
or
jne
clc
push
cmpsl
push
sahf
mov
adc
clc
mov
add
lock
cli
insl
fsubrl
iret
enter
xorb
mov
or
mov
test
repnz
inc
cmp
mov
mov
ja
cmp
dec
jnp
lea
xor
mov
ret
jnp
iret
ja
into
pusha
lret
ret
sbb
frstor
adc
popl
sbb
fcoml
mov
pop
in
jp
imulb
push
mov
dec
loope
movsb
jb
sbb
sti
jge
cmpsl
dec
leave
sbb
or
jg
insl
xor
mov
xor
jo
dec
pop
clc
sub
rol
adc
iret
fwait
xor
lret
nop
cwtl
ffreep
push
je
lock
dec
or
inc
sbb
pop
push
cmpsb
adc
adc
push
insl
int3
jge
pop
xchg
sti
mov
xlat
fwait
mov
mov
lds
call
dec
jnp
mov
lods
lahf
inc
fs
je
hlt
jno
mov
mov
inc
arpl
outsb
arpl
nop
stc
jae
sub
popa
adc
mov
dec
cli
int3
mov
xor
pop
pop
insb
xchg
das
fsts
hlt
push
pop
lock
repnz
dec
sahf
cmpsb
test
xor
aad
push
sub
bound
and
sbb
cmc
dec
sub
pop
fs
jne
ja
add
or
ja
xchg
and
push
mov
mov
xor
mov
jae
ja
div
stos
out
aam
clc
push
sub
pop
mov
push
inc
ss
ret
sbb
mov
sarb
inc
imul
pop
mov
xchg
pop
test
xor
and
mov
es
adc
outsb
mov
bound
fadds
xchg
mov
cmp
or
and
insl
mov
scas
pop
pushf
pushf
push
out
fdivrl
not
pop
push
ret
bound
stos
shl
add
mov
xor
jmp
stos
in
xchg
push
test
movsl
outsb
stos
inc
dec
pop
popa
dec
es
push
push
out
stos
aas
jle
adc
in
std
mov
fwait
movsl
xlat
xchg
stos
rcll
in
mov
push
sub
jge
sti
push
outsl
rolb
xor
shrl
out
mov
arpl
in
dec
or
xchg
jo
adcl
dec
pop
cmpsl
sti
mov
push
mov
adc
mov
mov
jo
mov
adc
movsb
icebp
cmp
mov
shll
inc
xor
repz
push
scas
into
mov
sahf
jbe
jl
cmp
xor
mov
xchg
pop
jmp
mov
xchg
dec
jecxz
shll
inc
lcall
inc
mov
sti
inc
cmpsl
outsb
inc
or
int3
push
xchg
xchg
aad
lock
add
dec
nopl
lahf
div
mov
mov
jp
pop
testb
clc
frstor
or
mov
jo
sti
lcall
cmp
or
addr16
mov
enter
pop
jne
jmp
movsb
movsl
cwtl
stos
push
cli
out
inc
dec
push
sub
mov
xchg
addb
mov
and
mov
icebp
in
in
aam
push
outsl
adc
xchg
hlt
hlt
bound
cmp
cmp
insb
imul
inc
and
fmull
pop
lea
test
sub
addr16
test
push
iret
imul
adcl
cmp
mul
pop
hlt
xchg
cmpsb
in
or
or
cmp
mov
mull
rcr
jmp
imul
lea
mov
fldln2
dec
xor
fstp
aas
adc
sub
cmp
adc
popf
jne
inc
out
mov
dec
adcb
push
out
out
sub
push
clc
dec
shrb
pop
mov
aam
mov
xchg
push
insb
push
mov
and
mov
inc
enter
pop
loopne
jne
dec
jmp
jbe
and
sbb
sub
loope
jmp
cmpsl
mov
xor
call
sub
sub
jl
pop
adc
dec
fs
cmp
push
repnz
push
pop
ficomps
push
loop
lcall
mov
clc
push
pop
mov
inc
stos
popa
cmpsb
dec
xchg
sbb
and
mov
push
stos
shlb
aas
aaa
imul
push
mov
ret
insl
ficomps
cmp
or
test
inc
scas
mov
mov
push
mov
cmpb
add
in
jae
sahf
and
out
push
jns
gs
mov
jnp
xchg
ficoml
test
cmp
divb
add
mov
jo
pop
lret
sub
stos
jne
adc
pop
outsl
rorb
lds
adc
pop
mov
jp
pop
shlb
cmp
or
sub
jecxz
loope
cmp
inc
int
ret
mov
or
arpl
clc
fwait
pop
popf
or
add
adc
add
sub
push
xor
bound
clc
aaa
cld
ja
and
cmp
divl
mov
mov
mov
dec
test
pop
addr16
cmp
insl
sbb
lock
mov
insl
popa
fnsave
fld
enter
mov
push
jnp
pop
dec
inc
sub
mov
sahf
mov
out
jg
jns
push
pop
lret
mov
dec
dec
out
push
nop
out
push
dec
jmp
mov
ret
pop
sbbb
xor
das
fadds
addr16
test
cmp
ja
pusha
decl
mov
cwtl
iret
jo
xchg
subl
mov
xchg
push
ret
ret
popa
and
and
xchg
mov
rorb
jg
or
stos
xchg
inc
lock
push
int3
lret
jmp
adc
aaa
mov
stos
das
add
ret
pop
and
xor
call
sbb
les
int
xchg
notl
test
pop
sbb
decb
enter
stc
push
add
int
inc
jno
push
aad
leave
aad
ret
sbb
ret
xchg
and
add
inc
scas
lods
into
xchg
repz
inc
push
push
push
adc
mov
test
and
cs
pop
jo
lahf
mov
pop
and
cmp
lahf
sbb
add
nop
push
cld
das
movsl
int3
scas
mov
cltd
cmp
out
mov
jnp
lock
out
jmp
and
insb
sbb
fistpl
call
ret
lcall
popa
push
nop
pop
adc
arpl
sub
mov
jl
cmpl
mov
jmp
adc
xor
mov
es
mov
stos
in
xchg
cli
outsb
or
dec
xor
shrb
mov
inc
lock
or
dec
out
mov
or
int3
shll
in
imul
aam
mov
xor
push
mov
rcll
mov
fisttpl
fidivrl
sub
dec
push
sets
inc
adcl
idivb
mov
fimuls
push
cmp
adc
add
lods
xchg
sub
add
cld
jb
ljmp
jge
inc
popf
jmp
pop
jg
push
mov
popf
adc
andb
push
insb
cmc
lahf
pop
xchg
fistps
push
and
cli
xchg
int
test
cmp
push
movsl
sahf
jae
adc
stos
fisubl
sub
add
xor
hlt
dec
mov
insl
test
cltd
pop
mov
cltd
adc
cltd
push
fwait
nop
scas
xor
mov
add
or
mov
imul
stos
lock
xor
mov
cmc
pop
push
add
andl
xchg
lds
test
je
mov
mov
in
int3
cli
push
sti
xchg
inc
xor
cmc
and
sbb
and
fsubs
jmp
mov
int
jge
ret
ljmp
jbe
adc
sahf
jo
imul
pusha
mov
sbb
fdivrl
add
cmp
mov
mov
lods
mov
inc
lds
or
nop
jl
pop
in
insl
mov
pushf
sbb
sub
mov
jle
stos
js
jmp
and
push
arpl
sti
movsl
and
hlt
inc
stc
arpl
shll
inc
cmp
pop
mov
xor
test
jmp
ret
inc
ja
popf
cmp
push
pop
xor
or
and
sahf
outsb
int3
imul
sbb
roll
test
dec
push
je
push
cmp
sbb
sbb
test
sarl
aas
add
pop
xchg
push
mov
inc
sub
and
jle
daa
aas
fisttpl
call
ret
insl
add
adc
fdivrl
or
inc
addr16
lahf
or
in
cmp
pop
addr16
and
gs
or
lea
or
insl
sbb
test
std
mov
iret
inc
out
cld
jp
test
lods
pushf
xlat
int
jle
cs
outsl
rolb
and
cld
test
or
mov
rolb
inc
out
bound
push
sahf
adc
in
mov
cmp
fldcw
stos
js
push
and
push
cmp
sub
fs
arpl
dec
cmp
xchg
xor
movsl
cmpsl
jle
mov
fsts
jo
sbb
mov
mov
stos
fidivrs
xchg
inc
rolb
add
test
pop
add
sub
std
inc
mov
insb
dec
nop
cmp
push
add
loop
pop
xchg
aam
sahf
popa
test
enter
mov
imul
ret
cmp
addr16
adc
add
lods
subb
mov
sbb
mov
addr16
dec
lea
and
jmp
pop
fsubr
repnz
mov
push
mov
mov
bswap
mov
jp
pushf
scas
and
movsl
sahf
dec
mov
mov
jmp
fwait
add
bound
mov
pop
pushf
ret
fstl
mov
sbb
push
test
inc
xchg
sarl
int
mov
mov
mov
jne
pop
mov
out
lods
push
sbbl
jb
test
mov
dec
push
jge
les
pop
mov
inc
enter
dec
rcll
mov
sbb
das
add
std
push
push
aad
daa
repnz
fwait
sub
pop
push
and
lock
sbb
sub
loop
jge
add
pop
movsl
and
mov
xchg
cmp
clc
cmc
mov
in
jge
cmp
loope
dec
loopne
in
js
push
sbb
pushf
mov
xor
lds
roll
out
out
adc
div
call
add
jbe
clc
pop
jbe
or
jecxz
in
stos
icebp
add
mov
imull
push
lods
gs
clc
sub
and
scas
ljmp
lock
inc
jmp
lods
adc
pop
or
cs
mov
pop
xor
add
imul
xlat
adc
int
push
and
loopne
inc
mov
stos
lock
mov
stc
push
daa
jnp
xor
pop
gs
or
fdivp
pop
mov
jnp
sbb
nop
xchg
lods
popa
test
test
and
insl
dec
and
inc
lock
enter
dec
lcall
ja
outsb
fwait
sub
dec
dec
inc
push
inc
shr
mov
mov
imul
or
pop
xchg
shl
testb
push
jae
das
les
fidivrl
adc
sbb
testb
sbb
lcall
push
jae
mov
movsl
fs
push
fimull
or
and
mov
stc
jne
mov
mov
xchg
test
insl
shrl
fnstenv
sbb
cld
jmp
lods
or
push
lret
mov
inc
shr
fwait
ds
inc
fists
movsb
dec
push
push
sbb
cs
adc
add
daa
nop
inc
test
adc
inc
js
jb
xor
inc
mov
inc
call
push
jo
xchg
mov
mov
or
jl
xchg
std
mov
xor
jg
imul
nop
dec
roll
push
jecxz
ja
push
pop
aas
add
cmp
mov
mov
cmp
sbb
ljmp
lods
insb
stc
dec
cmpsl
dec
rolb
fwait
xchg
inc
mov
sbb
pop
cmc
and
xchg
rorl
cwtl
xlat
scas
repnz
mov
xor
push
shlb
in
push
push
rcrl
popf
ss
cmp
scas
lods
sbb
or
das
aaa
into
negl
data16
outsl
xchg
ja
test
lods
and
sti
out
jmp
out
lds
add
stc
or
pushf
and
rorl
mov
clc
push
or
sbb
outsl
fistpl
lods
xor
dec
mov
jg
sub
push
push
test
push
aam
adc
inc
inc
lods
adc
xor
and
imul
xchg
mov
jp
out
shl
pop
ljmp
inc
sbbl
pop
ljmp
lds
xorb
addb
dec
nop
test
cwtl
or
call
xor
fidivrl
ret
mov
jmp
sbb
mul
in
inc
pop
hlt
xor
lea
adc
adc
adc
pop
pop
dec
add
sarl
push
and
fdivs
ret
outsb
adc
incl
js
jbe
cmc
fsubrs
add
in
inc
ja
lock
jns
test
sbbb
dec
cmp
and
add
push
mov
nop
jge
cmpsl
aaa
dec
in
adc
sbb
or
push
lds
pop
lock
jecxz
lret
lcall
push
jns
mov
xor
cmp
outsl
mov
sub
push
jge
inc
sbb
aaa
outsl
inc
mov
mov
mov
test
pushf
jl
test
pop
jge
mov
inc
adc
xor
lahf
jle
xchg
xor
movsl
or
cmc
or
loopne
movsb
mov
sub
neg
push
outsb
pop
scas
ret
decb
int
lds
or
ret
lods
cs
sbb
push
mov
aaa
ds
cmc
push
stos
xor
cmpb
pop
mov
xor
inc
fyl2x
jbe
aad
jb
push
gs
pusha
cli
mov
repnz
aas
adc
or
pop
es
or
aas
inc
cs
les
sub
test
sub
fists
jge
or
xchg
adc
ror
mov
push
lods
out
add
sahf
jg
mov
iret
divl
jg
pop
outsb
sub
clc
test
lock
fistl
lds
mov
fnstenv
aaa
cmc
rcr
lock
jno
sub
mov
inc
push
aad
mov
push
pslld
jnp
rorb
sarl
and
cmp
jecxz
popf
mov
ljmp
and
sbb
shlb
shlb
int3
int3
flds
jae
shll
sub
clc
stos
and
mov
pop
cs
daa
in
mov
push
and
pop
mov
and
sub
xchg
shl
and
add
fwait
cs
pushf
pop
daa
jmp
cmp
insb
xchg
xchg
push
jnp
mov
pop
cmp
fildl
jno
call
stc
and
sarl
dec
mov
xlat
or
arpl
dec
push
jns
mov
scas
leave
add
mov
xor
jne
inc
dec
xchg
inc
iret
jl
sub
gs
loope
fcmovne
xchg
js
inc
push
mov
data16
inc
mov
add
js
pop
jo
pop
cmp
mov
ret
mov
inc
repnz
imul
sahf
add
xchg
jle
outsb
pop
and
hlt
imul
cltd
lret
sbb
and
jg
pop
fistl
decb
bound
xor
flds
fwait
ret
cmp
cwtl
daa
fdivp
ds
mov
and
mov
mov
pop
xchg
mov
imul
push
xchg
cwtl
roll
cld
sub
int3
pop
and
in
popa
mov
ja
mov
sub
in
ficompl
sbb
jge
cmp
lods
and
add
enter
mov
shll
daa
repz
shll
jmp
and
test
push
cli
mov
lret
aad
pop
in
dec
in
cmp
or
out
push
or
in
xor
sbb
push
insl
pop
push
scas
xchg
dec
xchg
nop
push
or
mov
gs
push
xchg
sub
mov
daa
call
mov
add
jecxz
sbb
mov
xchg
scas
push
xor
add
in
out
aaa
lcall
gs
lds
pop
jle
push
pop
dec
adc
mov
push
mov
mov
test
scas
sub
dec
push
out
lock
cmpsl
jecxz
nop
xlat
or
push
cld
sbb
sub
dec
dec
out
cmpsl
lea
insb
sub
pop
scas
lahf
jecxz
inc
aad
arpl
mov
outsl
or
fwait
and
loopne
dec
pop
cs
fidivl
cwtl
arpl
and
push
sti
push
mov
add
andl
inc
cmp
push
dec
pop
adc
cmpsl
push
cmpsl
das
and
fdivrp
mov
jecxz
dec
bound
ret
pop
fildll
enter
int3
fcoml
inc
pop
mull
push
fiaddl
mov
push
sub
xchg
mov
cwtl
out
in
mov
andb
push
push
push
and
movsb
inc
xchg
addr16
cmpsl
add
daa
mov
mov
or
cmpl
insb
or
cmpsl
mov
push
push
xchg
xchg
adc
jno
imul
push
sbb
jnp
ds
imul
inc
xchg
xchg
cli
push
mov
in
outsl
xchg
lret
sbb
lods
faddl
popf
in
jmp
test
or
mov
or
nop
fidivrs
pusha
adc
dec
out
xchg
ret
mov
testl
push
orb
movl
lods
mov
jecxz
cmpsl
xor
movups
add
fnstcw
sldt
cli
sbb
mov
adc
push
dec
inc
jp
les
fs
sbb
cli
out
arpl
bound
xchg
outsb
jl
xchg
adc
addl
mov
movsl
xchg
ss
sub
and
xchg
sub
rcrl
in
shl
xor
sub
jmp
lods
out
in
mov
das
dec
push
mov
lods
add
push
jge
push
push
sub
and
xchg
cs
int
xchg
sti
cmp
and
adc
rorb
daa
sbb
insl
and
in
add
xchg
repnz
ret
bound
push
repnz
stos
and
and
and
es
push
cmc
stos
xor
dec
push
mov
ret
inc
dec
iret
and
leave
pop
into
arpl
test
sub
cmp
push
int
xchg
ja
xchg
push
sub
lods
xor
lret
lcall
daa
pop
adc
sahf
gs
sub
pop
mov
sbb
cmp
lods
mov
inc
outsb
stos
ds
jbe
cs
pop
insl
mov
lock
or
sbb
loop
and
inc
xchg
mov
ds
hlt
pusha
sub
cmpsb
add
bound
stc
lahf
das
add
mov
jl
lret
dec
lea
and
or
push
xchg
mov
cmp
add
xchg
sbb
adc
rcll
fs
dec
shl
or
jge
pop
jmp
enter
or
test
pushf
xchg
cmpsb
fnstenv
xchg
sbb
repz
push
xchg
data16
sbb
je
mov
xor
sbb
inc
or
hlt
movl
xor
aas
jge
dec
jae
push
pop
lods
dec
outsl
pushf
lret
arpl
jl
push
imul
movsb
or
xchg
jbe
push
out
sub
shrl
cmp
ds
jae
cmc
insb
xchg
push
fnstenv
xor
xor
xsaves
mov
test
imull
cmpsl
xchg
and
dec
or
shrl
aas
les
dec
mov
mov
inc
notb
aad
sub
cmc
cmpsl
dec
out
popf
sub
pop
popf
xor
or
inc
adcl
push
cs
mov
dec
adc
inc
negl
iret
mov
push
pop
mov
mov
in
pop
imul
test
cs
in
sbb
cmc
fisubrl
jo
dec
addr16
pushf
rcll
adc
jns
or
pop
or
jmp
int3
add
adcl
arpl
add
jns
les
and
inc
in
jmp
sub
push
vmovhps
xlat
lret
fsubp
adc
jecxz
bound
int3
add
stc
lahf
hlt
mov
test
ret
and
lods
sbb
lods
fidivrs
or
and
or
push
or
scas
pop
mov
jge
mov
jg
mov
shlb
loop
fmul
lret
cmp
xchg
loope
inc
inc
stc
mov
loopne
shl
insl
bound
mov
xor
xor
mov
aas
addb
xchg
ja
sahf
xor
sub
xchg
jmp
add
jg
mov
sub
aad
adc
sbb
test
loop
lods
js
add
insb
fs
inc
andl
cltd
stos
xor
inc
mov
lods
sub
mov
dec
inc
pop
xchg
addr16
cmpsb
ljmp
xlat
xchg
lret
cld
inc
jno
xchg
orb
jb
xchg
jl
jae
dec
daa
andl
xchg
enter
lds
and
jecxz
imul
xor
mov
je
adc
and
jb
and
mov
das
lods
dec
outsb
add
dec
or
pop
stos
jg
adc
mov
popf
cmpsb
bound
es
xchg
mov
sub
mov
dec
cmp
and
std
inc
inc
mov
aas
aas
sbb
mov
out
jge
ret
shlb
dec
xor
rcrb
sbb
lret
popl
lods
out
sarb
push
mov
test
insb
insb
dec
jmp
mov
push
pop
mov
pop
mov
daa
xlat
push
xchg
inc
jbe
cmpsb
push
or
mov
cli
mov
inc
lds
std
je
or
sbb
inc
out
out
lock
inc
push
xor
enter
push
fwait
lret
addl
out
scas
xchg
cmc
xchg
inc
xchg
mov
xor
pusha
aaa
add
imul
push
push
pop
fwait
lret
ret
add
mov
mov
andb
xchg
add
mov
pop
jecxz
movsl
adc
mov
or
out
fcomip
xorl
jo
add
sbb
je
lret
push
repnz
mov
inc
dec
add
insb
mov
mov
cli
repz
adc
sbb
loope
pop
xchg
pop
cmp
ret
rcl
xor
or
fbld
pop
mov
xor
testb
out
lock
data16
in
insb
or
dec
adc
fucomip
push
clc
mov
xchg
and
push
mov
sub
mov
nop
js
mov
test
xor
lea
gs
icebp
and
stc
cmp
lods
ss
adc
cmpsl
outsb
jge
sbb
sub
test
or
jle
inc
jae
shlb
fmull
rorl
dec
sub
jae
inc
movsl
in
mov
or
mov
out
shll
fdiv
add
addb
cld
lcall
sbb
pop
xchg
cmpsb
xor
cmp
add
push
adc
bnd
stc
cmc
je
aam
pushf
lds
add
shrl
sti
fs
ja
cmp
fists
fwait
je
fwait
pop
inc
outsb
mov
in
mov
adc
lret
inc
aad
xchg
aad
mov
std
test
jns
ret
lods
inc
cmc
shr
cmpsb
in
sbb
leave
xchg
inc
rolb
les
js
and
jg
pop
jnp
inc
scas
sub
test
lods
push
sub
mov
sub
pop
push
lds
xchg
in
xor
addr16
adc
fmulp
iret
fst
fmuls
lret
xor
icebp
ret
cld
xor
scas
inc
imul
jns
mov
or
sub
out
adc
xchg
sbb
sarb
mov
hlt
popf
xor
lret
sti
in
mov
aam
sti
xor
cli
scas
cli
sbb
icebp
add
push
divl
push
lock
stos
pop
sbb
test
std
jg
jecxz
rep
lds
adc
rolb
fcmovu
sarb
arpl
std
jae
mov
xor
scas
aaa
addr16
outsl
sbb
inc
fldcw
pop
pop
in
pop
ja
inc
add
in
pop
xor
sbb
arpl
pop
pop
cmpsl
fists
push
or
inc
iret
add
adc
in
dec
lret
loopne
xor
mov
jb
xchg
lea
fcomi
aas
pop
test
int3
ljmp
scas
cmp
cmp
pop
das
rorl
mov
cli
shlb
pop
xlat
pop
mov
test
sub
fstpl
jmp
lds
and
fwait
pushf
xchg
in
or
inc
leave
and
push
pop
and
lahf
push
imul
jae
mov
push
fs
mov
insb
add
xlat
sarl
dec
jbe
xor
sub
jno
fisttpl
dec
add
inc
inc
xorb
aad
loop
sub
add
mov
popf
jl
aam
out
mov
ficoml
fxch
and
push
movsb
cmp
je
inc
mov
lcall
add
xor
inc
pop
mov
ds
dec
cmp
aaa
hlt
and
pushf
sbb
nop
stc
xchg
xchg
adc
lret
add
xor
gs
pop
lods
sbb
popf
dec
ds
int3
dec
mov
or
and
ljmp
inc
sbb
lock
fstps
ss
filds
xor
push
cwtl
inc
rcrb
je
or
xchg
lahf
xchg
mov
iret
imul
xor
lea
stc
jae
pop
jbe
enter
ret
mov
cmp
xchg
leave
fcoms
cmp
adc
or
and
test
lock
or
in
add
jmp
arpl
mov
sbb
fcoms
dec
mov
call
push
or
xor
add
sti
push
movsb
mov
mov
lds
ret
sbb
jae
jmp
loop
xor
dec
push
sbb
jae
xor
icebp
xor
stc
mov
mov
mov
imul
cmp
andl
mov
or
mov
in
mov
add
divb
out
and
dec
jns
adc
mov
ret
pop
fdivl
adc
jp
ss
cmp
or
imul
add
jmp
clc
xor
leave
in
lahf
mov
xor
pop
pop
les
idivb
pop
dec
addr16
pop
test
dec
sbb
test
aas
xchg
push
bound
mov
sub
iret
sahf
rolb
out
pop
adc
popf
push
fsubl
jge
dec
push
adc
mov
insb
jae
imul
ret
imul
rolb
test
pop
fnsave
xor
int
jbe
bound
xchg
lret
inc
hlt
idivl
adc
lock
loope
sub
in
push
dec
push
mov
call
push
mov
xlat
add
stc
loopne
push
in
je
sub
xor
sbb
loope
push
loopne
sub
pusha
fldl2e
xor
shl
sbb
lea
or
push
icebp
jns
cmp
outsl
loop
lods
dec
mov
lret
add
inc
test
xor
fdivrl
add
sti
xlat
adc
cmp
push
mov
into
dec
into
sub
mov
inc
xlat
lret
cmp
mov
fimull
push
js
ds
stos
addr16
mov
pop
xchg
aas
push
mov
pop
stos
es
loopne
cltd
adc
dec
stc
fbld
adc
das
mov
and
cmc
into
push
cmc
jae
xchg
bound
jne
test
push
mov
jg
repz
mov
xchg
mov
ja
mov
aas
lods
inc
inc
inc
popa
fstpl
xchg
std
mov
test
popa
jns
int3
xchg
mov
test
sbb
cs
pop
fwait
cltd
jnp
pop
add
inc
xchg
repz
xor
popa
rorl
shrb
add
push
popf
cmp
adcl
scas
pop
add
mov
dec
jnp
out
outsb
mov
adc
pop
fdivs
sbb
mov
sub
dec
jno
clc
rcl
lret
out
cmpsl
mov
fistpll
in
mov
inc
das
mov
into
jge
dec
aam
test
fstpt
mov
out
mov
push
jne
mov
ret
fwait
mov
sub
mov
add
xchg
adc
push
jp
out
mov
movsb
sub
sub
dec
aam
dec
pop
xor
fildl
sahf
in
aam
dec
or
mov
pop
loope
inc
shrl
pop
inc
xor
sub
leave
push
mov
in
jmp
push
mov
loop
loopne
aas
les
fwait
cltd
int3
push
fwait
test
pop
jns
mov
shrl
jne
icebp
cwtl
pop
add
test
addb
mov
sub
xchg
test
sub
push
push
mov
push
nop
lods
mov
fiaddl
fadd
pop
mov
aaa
adc
add
and
divb
outsb
sbb
pusha
push
add
mov
or
aaa
inc
dec
and
insl
sti
xlat
xchg
jae
std
shll
sub
shlb
xchg
int
mov
int
or
dec
lcall
add
sub
cmp
xchg
jmp
das
sbb
inc
inc
cmp
mov
pop
shufps
and
push
push
or
pop
arpl
sbb
cmp
flds
add
stos
cmp
jnp
xchg
sub
or
in
adc
xchg
pop
dec
shr
icebp
push
pop
in
fidivl
add
dec
in
xchg
dec
lea
adcl
add
pop
repnz
push
cmp
and
sysenter
mov
dec
mov
ret
push
xchg
gs
mov
pushf
repnz
add
nop
mov
adc
push
xor
pop
or
add
dec
stos
in
xor
test
addb
cmp
mov
cmp
sbb
xor
and
leave
pop
and
mov
test
cmpl
das
es
cmp
pop
shl
mov
mov
or
or
enter
dec
fcomip
stc
mov
sub
out
sbb
fcmovnu
fmuls
sub
sbb
pop
mov
clc
dec
mov
inc
scas
lcall
pop
sbb
lcall
mov
mov
push
cmp
loopew,pt
jge
mov
stos
jns
es
mov
push
mov
rorb
lret
cli
push
subb
scas
insl
or
dec
mov
jb
xchg
mov
notb
or
aad
or
clc
lea
addr16
addl
or
sbb
ret
sarl
and
clc
movsb
or
mov
xchg
movsl
jecxz
cmpsb
mov
push
mov
push
jnp
cmp
mov
sbb
push
push
fisubrs
jle
sbb
push
mov
push
and
or
jnp
mov
sti
jmp
out
cmpsb
sti
movsb
fsubrl
test
stos
mov
cmc
adc
sub
xchg
dec
es
loop
cld
fs
cmp
mov
shll
add
lea
adc
popf
out
lcall
mov
nop
icebp
adc
loop
aad
push
push
flds
or
lock
xlat
mov
and
push
mov
or
data16
es
push
xlat
ja
sti
xor
mov
push
adc
and
jle
subb
enter
mov
into
popa
push
and
inc
adc
fs
fwait
aas
jb
pop
loop
popa
mov
mov
or
inc
xchg
add
or
mov
call
fldl
pop
add
dec
mov
adc
pop
mov
push
push
movsl
loope
gs
mov
int
popl
mov
pop
sbb
dec
in
and
mov
jnp
repnz
pushf
dec
call
fcmovu
test
mov
std
jmp
hlt
ja
cli
mov
imul
out
push
cmp
and
xchg
jge
cmp
inc
pusha
and
movsl
loope
push
out
in
push
inc
lcall
push
test
test
xchg
fists
push
or
dec
out
pop
ret
pushf
loopne
lds
fistpl
mov
xor
test
pop
pop
xchg
xchg
std
or
enter
daa
aas
dec
js
mov
pop
cmp
sub
cmp
cmp
jbe
push
ret
or
hlt
xor
stos
jno
pushf
outsb
test
fstpl
arpl
dec
ja
cmp
add
mov
pop
pop
sub
push
sub
push
jle
cmp
ret
ljmp
into
sbb
fadd
scas
repz
mov
xor
test
cltd
fldcw
test
xlat
or
xchg
lret
pop
lea
pop
and
jecxz
dec
push
punpcklbw
mov
sbb
xor
cmp
adc
outsb
sti
cltd
xor
mov
mov
cmp
je
inc
jo
mov
jnp
pushf
sbb
aam
add
shlb
adc
call
scas
lcall
xor
cld
imull
add
mov
jg
std
sbb
xchg
push
cmp
xchg
or
and
out
add
ret
es
cmp
mov
inc
repnz
jecxz
inc
cld
pop
divb
sbb
cmp
jmp
loop
mov
aas
push
insl
mov
int
mov
in
fs
fidivs
adc
inc
cwtl
cli
mov
imul
jmp
fmul
pop
xchg
adc
mov
jge
sahf
in
dec
ret
out
loope
add
cmc
xor
data16
clc
fidivrl
push
jmp
mov
mov
mov
sbb
imul
jo
dec
call
ja
mov
rolb
pop
mov
stc
mov
out
popa
aam
and
xchg
cmpsb
movhps
pushf
jns
mov
in
loope
push
cmpsb
imul
jp
cwtl
jge
pop
sub
xlat
ret
push
enter
out
mov
sub
loop
imul
lock
or
pop
call
out
pusha
pop
rorl
mov
stos
into
pushf
mov
jge
push
adc
sub
xchg
test
jg
pop
add
adc
sahf
push
daa
cmpsb
cmp
xlat
push
adc
xor
inc
or
jl
outsb
gs
roll
jl
movsl
popf
repz
inc
sarb
mov
inc
sub
cmp
xor
mov
dec
xor
push
into
stos
hlt
push
imul
sbbl
lods
clc
push
jns
mov
jle
mov
je
mov
mov
bound
cwtl
add
imul
push
stos
add
test
or
add
dec
jae
and
dec
push
test
sub
xlat
mov
cmp
fisubs
and
pushf
ret
xchg
cmpl
lcall
in
and
sbb
xchg
mov
shll
in
in
pop
ljmp
mov
mov
jecxz
xchg
mov
icebp
and
ja
cmp
lock
out
dec
ss
lods
cli
cld
sub
ja
adc
mov
xor
fstpl
jns
lcall
mov
adc
inc
jmp
aad
pop
cmp
add
icebp
mov
or
xchg
pop
and
cmp
push
jle
test
fisubl
xorl
in
xorb
imul
push
hlt
push
adc
lds
insl
inc
nop
lock
inc
les
inc
pop
dec
inc
in
lret
pop
movsl
enter
mov
and
inc
loopne
insl
in
inc
inc
push
fwait
repnz
push
or
jle
and
inc
push
inc
cmp
idivb
test
roll
pop
jl
cltd
outsl
xchg
mov
sub
scas
mov
cmpsl
xchg
add
adc
sbb
and
xor
sub
add
int3
imul
scas
test
adc
ret
fadds
mov
mov
add
shrl
sbb
jae
dec
jno
das
in
lds
aas
dec
mov
mov
test
sub
lret
jns
cli
add
sbb
jp
mov
push
ficoml
and
sub
pop
or
pop
mov
xchg
sub
js
fs
in
adc
pop
sbb
das
sub
mov
loop
leave
mov
inc
nop
cmpsl
push
and
iret
outsb
adc
sbb
and
adc
scas
mov
add
jmp
jle
sbb
gs
jne
fs
pop
adc
mov
sub
jmp
fimuls
mov
sahf
pop
jle
or
out
scas
pop
sub
addl
enter
mov
push
push
fcompp
cld
in
mov
fistpl
rcl
adc
mov
cmp
fstpl
cmc
pop
mov
push
imul
into
aam
mov
add
and
cmp
mov
icebp
mov
jecxz
mov
shrl
repnz
push
jle
and
xor
push
nop
mov
jecxz
inc
mov
pop
xchg
in
mov
cmc
out
and
xchg
lcall
push
aad
xchg
stos
pop
adc
dec
clc
adc
rolb
and
sbb
cmp
rcrl
repz
out
cmp
or
movsl
cmc
aas
pop
imul
sbb
dec
inc
adc
lds
adc
mov
push
xchg
lret
mov
or
aad
in
pop
cmp
mov
jno
mov
fistpl
mov
inc
jp
imul
jnp
rcl
mov
adc
clc
mov
xchg
in
cld
xor
xlat
inc
aas
mov
mov
lds
cmp
or
push
pop
mov
pop
icebp
or
cmp
addb
inc
out
push
ret
mov
aas
jae
dec
icebp
rorl
dec
enter
call
test
jmp
stos
sbb
mov
neg
push
xchg
bound
inc
sahf
mov
inc
xor
jl
loopne
inc
punpcklbw
xor
cltd
pop
dec
push
mov
cmp
dec
cmpsl
setge
mov
mov
mov
inc
mov
repnz
lcall
andb
data16
sahf
cmpsl
dec
aad
negl
out
xor
xchg
mov
mov
shr
fisubrs
mov
lock
jle
jb
jae
out
orl
xchg
mov
jecxz
mov
fbld
jecxz
inc
mov
add
hlt
sub
add
mov
stos
xor
inc
mov
add
lock
iret
push
test
pop
aaa
adc
mov
mov
ja
mov
sbb
sub
insb
test
mov
lahf
mov
sahf
pop
sub
push
mov
jl
mov
dec
paddusw
adc
enter
push
adc
jnp
idivb
adc
jg
ret
fucomip
sbbb
cmpsl
iret
mov
lock
xor
loopne
ljmp
cmp
mov
stos
pop
in
adc
inc
aad
lcall
in
adc
mov
cmp
pop
add
xor
add
into
jb
inc
pop
push
cmp
repnz
dec
jl
cmp
lcall
dec
mov
shll
in
jecxz
add
gs
push
push
cmp
push
repnz
cld
push
pop
lods
ljmp
enter
xchg
pop
xchg
mov
cmpsb
rorb
adc
mov
sbb
lods
and
cli
jg
push
xor
and
ja
fwait
ljmp
cli
lods
add
jb
ja
test
ds
pop
mov
sub
add
stos
dec
mov
lock
outsl
js
call
cmc
rorl
daa
shlb
int
mov
clc
jne
xchg
sub
dec
mov
fs
and
pop
cltd
adc
or
adcl
outsb
adc
fs
outsl
fisttpll
mov
daa
fcmovne
shl
movsb
stc
je
ret
repnz
and
aam
add
out
pusha
mov
push
or
scas
jecxz
pop
les
jmp
jbe
adc
lock
adc
mov
in
int
shrl
in
je
mov
xchg
jge
rorb
add
push
ss
stc
inc
mov
inc
movb
lea
cmp
or
rcll
xchg
loopne
cs
ret
push
icebp
pop
jbe
fisttpll
lock
pop
inc
adc
sti
and
cmp
pop
lock
je
aam
scas
dec
push
mov
cmc
add
lds
pop
adc
imul
pop
jno
mov
jle
add
shrb
add
cmp
sub
arpl
rep
mov
ret
sbb
dec
data16
rorl
cld
mov
pop
stos
push
aas
jnp
das
mov
rcrb
rcll
pop
sbb
aad
and
inc
std
dec
js
dec
stos
test
ret
xchg
push
pop
mov
out
mov
push
sbb
cltd
xchg
adc
mov
add
stc
inc
aad
mov
jge
pop
popa
cmp
out
ja
push
inc
jp
scas
js
scas
cltd
adc
pop
xor
into
cmp
sbb
xchg
xlat
xor
in
push
cmpsb
pop
ret
sub
hlt
insl
mov
lock
add
and
xchg
xchg
cltd
popf
cmp
aaa
xor
cmpsl
mov
jo
dec
mov
push
adcl
lea
sbb
shrl
repz
mov
fiaddl
mov
stos
jmp
in
pop
pop
dec
push
inc
call
cs
out
sbb
in
sub
or
sarl
das
out
mov
push
gs
lcall
add
jns
stc
das
add
fnstenv
jp
cmpsl
movsl
pop
and
shl
xchg
outsl
jmp
mov
lret
mov
lret
jle
clc
adc
loop
inc
jb
clc
add
push
dec
lret
rcl
jmp
cmp
dec
andb
mov
fbld
mov
loop
fldcw
insb
push
sbb
cmpsb
fsubr
pusha
iret
repnz
imul
sub
add
ljmp
mov
jns
clc
jbe
mull
out
jae
aas
pop
nop
mov
add
lret
sbb
pop
xor
mov
or
xor
xchg
aas
imul
insl
pop
sub
mov
push
lea
pop
fs
pop
test
lea
scas
sbbb
jb
push
scas
or
mov
lret
or
imul
adc
into
jmp
mov
leave
mov
test
pop
test
cmp
and
mov
outsb
stos
push
notl
sub
sbb
ss
pop
xor
fistps
sub
inc
fildl
pop
mov
lret
pop
fstl
and
lods
pop
sbb
clc
aad
stc
lods
mov
mov
mov
add
jl
sub
adc
syscall
and
bound
sbb
xchg
add
arpl
pusha
int
mov
je
out
sub
mov
mov
or
aam
pop
cmp
outsb
dec
cwtl
mov
cmp
in
stos
sub
ss
sbb
nop
sbb
jno
loopne
sub
add
mov
scas
xchg
xor
dec
dec
push
xchg
xchg
outsb
sub
cmp
lods
or
lret
mov
in
sahf
sbb
clc
push
pushf
mov
call
mov
repnz
lcall
cmpsl
add
adc
lods
push
fnstcw
sti
jg
mov
js
push
stc
divb
cmp
mov
jg
adc
xchg
jp
adc
nop
and
jge
cli
push
mov
push
inc
sbb
test
inc
lock
aad
dec
adc
rolb
les
and
outsb
mov
adc
shlb
icebp
xorb
fwait
inc
dec
or
dec
xorl
call
cmp
pop
out
xor
sbb
mov
adc
push
push
jb
sbb
repnz
push
pop
pop
arpl
mov
cmp
in
int
arpl
std
mov
lea
call
cmpsb
fmuls
out
xchg
in
mov
or
lds
xchg
jae
pop
int3
sahf
xor
negl
cmp
outsl
arpl
pop
mov
adc
ret
xchg
or
scas
sbb
xchg
andb
mov
pushf
dec
aad
or
xor
ja
cmp
andb
lahf
adc
add
fadd
hlt
push
outsb
dec
push
sub
xchg
pop
add
lret
sub
movsb
sbb
mulb
or
xor
sarl
mov
lods
sti
scas
jg
jle
in
pusha
stos
cmp
push
xchg
add
mov
out
enter
push
cmc
in
lods
loopne
adc
xorb
pop
push
ss
jo
add
cmp
mull
xchg
adc
pop
jecxz
xchg
push
ljmp
adc
inc
push
sub
repnz
mov
sbb
rep
or
in
mov
jno
jnp
jb
in
arpl
insl
pop
rcll
js
mov
dec
pusha
sub
pop
jne
stos
inc
mov
xchg
movsl
shrb
dec
and
data16
mov
test
dec
mov
cltd
into
fsubl
rclb
leave
mov
mov
test
les
pop
and
cmp
int
xchg
hlt
push
cmp
nop
ror
pushf
jno
mov
aas
jg
cltd
test
and
pop
fdivrl
int
xlat
xchg
shr
xor
stc
sbb
dec
aam
js
and
adc
or
mov
pusha
inc
mov
xchg
mov
and
jecxz
std
sbb
fcmovne
aaa
inc
xchg
sub
cmp
sub
or
adc
cwtl
insb
mov
adc
subl
stos
enter
adc
and
pop
jmp
leave
shr
jmp
dec
jae
xor
pop
out
in
cmpl
pusha
add
lea
dec
data16
or
mov
dec
xchg
jge
popf
jbe
gs
les
add
or
adc
cmp
cmc
das
lret
sbb
push
push
xchg
pop
imull
lret
loopne
mov
lea
push
adc
popa
jecxz
xchg
sub
jae
mov
push
popa
inc
stc
sub
pop
xchg
sub
pop
or
into
add
push
and
pop
popa
add
sbb
adc
push
jno
dec
je
nop
pushf
inc
mov
pop
gs
aaa
clc
vpcomq
push
addr16
adc
cltd
xlat
mov
aaa
xchg
mov
sti
mov
loop
xlat
les
cmpsl
mov
and
int
or
mul
bound
lods
inc
cmp
aam
ja
stc
inc
xor
and
sub
xchg
aam
jnp
adc
in
es
sbb
inc
adc
or
call
jecxz
lcall
adc
ljmp
das
pop
in
or
add
fxtract
aas
movsb
fisubrl
sub
dec
mov
inc
mov
aaa
loop
pop
dec
fisubrl
test
sbb
cmpsl
sahf
mov
adc
fs
jo
mov
cld
lock
ljmp
mov
push
jmp
ss
push
ss
sbb
jecxz
outsb
sub
fldt
js
mov
fcoms
jns
aad
jnp
loope
cmpsl
in
mov
cmc
je
lods
and
rol
in
scas
lahf
mov
ficomps
sbb
pusha
mov
stos
mov
cmp
or
stc
push
dec
lds
ret
movb
cs
lods
aaa
fcompl
inc
popf
aas
popf
jne
jmp
fimuls
sub
ja
shll
add
sbb
xchg
ss
adc
mov
shll
mov
mov
scas
gs
insb
mov
push
popf
mov
js
pop
repz
lcallw
subb
xchg
mov
mov
push
fistps
lds
das
das
cmp
adcb
shl
adc
test
mov
jae
sbbl
call
ss
mov
icebp
bnd
inc
mov
aam
push
shll
dec
xor
dec
out
mov
lret
out
test
fnstenv
lds
mov
xor
aas
push
sti
adc
jp
sbb
inc
pop
adc
dec
push
inc
add
sub
or
jg
es
js
sub
out
lcall
cmc
out
gs
jge
mov
daa
ljmp
mov
adc
mov
pop
inc
xor
lods
pop
divb
in
shrl
sbb
hlt
cld
loop
sub
jae
mov
cmp
xor
das
jge
inc
xor
test
pop
jae
imul
stos
mov
dec
mov
lock
mov
lret
mov
adc
shl
xlat
cmc
mov
jne
pusha
mov
and
cmp
push
dec
or
into
xor
cmpsl
jg
xor
mov
shlb
mov
shrb
fcmovne
ret
xchg
push
push
xchg
sub
xchg
arpl
sbb
popa
fisttpll
jl
shr
push
test
stc
xchg
es
movsl
sbb
arpl
imul
aad
jl
mov
pminsw
outsl
jg
in
xchg
dec
fcmovb
mov
push
shll
or
mov
mov
int3
stc
inc
sbb
jae
mov
xor
xchg
push
xchg
and
fimuls
cmp
sub
jg
mov
daa
loopne
dec
mov
sub
pop
out
mov
rcll
xor
arpl
out
in
inc
mov
notb
xchg
mov
xlat
ljmp
arpl
dec
jno
scas
mov
lret
push
sti
add
dec
add
stos
fucomip
aas
sahf
and
lods
add
ds
xchg
cmp
ja
push
insb
ljmp
outsl
pop
push
scas
dec
daa
pusha
and
imul
stc
data16
pop
jb
das
push
inc
mov
push
push
cmc
mov
pop
push
out
add
add
and
lods
jno
inc
add
rcr
pop
lret
xlat
mov
cld
jmp
test
insb
ficoml
popf
mov
cmp
in
or
lea
gs
roll
jmp
loopne
sbb
sub
scas
out
sub
inc
dec
or
mov
sbb
fsubs
enter
push
pop
jecxz
jns
and
xchg
ljmp
imul
lock
push
add
out
xor
test
adc
pop
gs
gs
lret
sub
mov
pop
mov
iret
dec
mov
imul
jmp
pop
rorl
or
in
rol
mov
ret
test
add
ret
dec
and
mov
dec
outsb
push
mov
ds
insl
call
mov
mov
insl
test
push
or
push
subb
pop
mov
push
stos
mov
jp
fbld
push
stos
std
into
push
xchg
add
mov
cmpl
and
sbb
out
xchg
out
add
inc
cmpsb
add
test
test
ss
push
jb
mov
jae
stos
mov
cwtl
mov
lds
cmp
mov
pop
add
xorl
mov
or
push
xor
and
jl
jl
lea
jle
fimull
into
jmp
mov
sbb
mov
push
mov
mov
ret
jb
mov
in
sbb
mov
jno
lcall
jae
cwtl
loope
sub
cmpsl
out
outsb
popa
sahf
in
push
sub
pop
adc
aaa
mov
or
incb
scas
mov
cmp
xchg
sub
lcall
pop
mov
xlat
jmp
jle
popa
leave
inc
and
inc
mov
popf
pusha
xlat
addr16
mov
pop
lea
jecxz
mov
cmp
mov
sub
out
test
push
loop
popf
cs
push
jmp
test
call
mov
mov
daa
add
cmp
sbb
or
pminsw
rep
imul
scas
inc
pop
or
jae
xchg
mov
stc
sbb
mov
nop
ss
or
jg
test
cld
loope
jmp
jecxz
enter
pop
es
mov
push
mov
jle
inc
jle
test
shl
imul
xchg
push
sti
je
jae
xorb
xchg
les
xchg
js
mov
jmp
cli
mov
es
cmpsb
mov
xchg
jae
aas
pop
mov
pop
jle
and
dec
clc
aas
lds
mov
mov
and
pop
ud0
mov
inc
mov
aaa
push
cmp
das
popa
test
xchg
das
xor
mov
add
or
inc
outsb
ss
pop
fwait
fs
inc
imul
mov
mov
andb
enter
and
sbb
pcmpgtw
add
cmp
xchg
cmc
xor
dec
cltd
test
xchg
xchg
xchg
inc
imul
sbb
xchg
push
mov
testl
arpl
jp
xor
test
jmp
sbb
pop
xchg
adcl
rcrb
push
add
data16
add
xchg
jp
hlt
inc
fiadds
mov
icebp
mov
push
stc
aaa
mul
push
cmp
pop
sub
pop
cmp
push
lods
pop
mov
and
call
xor
xchg
adc
add
mov
adc
xchg
orb
pop
xor
sbb
xchg
popl
sbb
xchg
add
dec
pop
les
xchg
int
cmp
mov
mov
jo
mov
jnp
push
movsb
fst
sub
call
imul
add
mov
dec
data16
mov
decb
mov
in
outsb
and
xor
hlt
sub
popa
push
nop
mov
cmp
notl
sub
cmp
stos
xor
jmp
popf
jne
out
cmc
mov
xchg
roll
dec
movsb
loop
out
loop
mov
aad
add
push
dec
cs
xor
jae
aam
dec
or
xchg
push
mov
ss
pushf
push
pop
in
mov
into
add
adc
sbb
xchg
orb
xchg
repz
imul
xchg
xchg
sbb
jmp
mov
jl
and
push
inc
fs
sti
out
shlb
test
fsub
lock
stos
xlat
in
lret
mov
dec
pop
popa
mov
in
aam
add
in
adc
mov
insb
sub
xor
lods
movsb
mov
adc
xorl
jge
mov
out
pusha
xor
std
pusha
movsb
stc
test
ja
xor
jns
lea
fscale
mov
rcll
jmp
fbstp
ja
add
mov
sub
lcall
ficomps
xorb
jnp
xchg
jne
in
or
gs
mov
addb
ss
jmp
cmp
mov
adc
imul
testl
adc
sbb
mov
and
sti
pusha
cmp
sub
in
or
xchg
ret
cvttps2pi
inc
bound
imul
insb
cmp
pop
cmpsl
addr16
aad
dec
mov
pop
pop
mov
sbbl
mov
and
xchg
sbb
add
xor
mov
ret
std
push
ret
mov
enter
mov
xor
mov
sub
pop
mov
mov
dec
sub
orl
pusha
inc
adc
push
fldl
and
faddl
repnz
xchg
sub
pop
fmull
fs
in
or
push
decl
fnstcw
jp
sbb
dec
lods
push
pop
ret
adc
pop
pop
ret
add
mov
addr16
subb
rorl
and
rcrl
push
lds
aam
dec
std
lods
jns
add
pop
mov
jle
add
or
cld
add
ret
pop
push
es
divl
stos
add
mov
cmp
sarl
rorb
xchg
or
mov
push
sahf
mov
test
mul
push
mov
xchg
add
xchg
or
jmp
rorl
rclb
movsl
mov
adc
jb
inc
ficompl
aam
jo
adc
cli
sub
shll
ja
add
scas
jbe
rep
scas
sub
push
cld
and
sub
mull
stos
sub
mov
mov
jo
push
sbb
mov
int3
lea
in
cmp
dec
dec
xlat
roll
sub
xchg
repz
fs
test
and
leave
jl
mov
jge
aas
test
shl
in
fisubl
push
in
int
insl
rcr
arpl
mov
xchg
pop
loope
pop
adc
pusha
adc
push
mov
aas
fs
or
js
xchg
arpl
movsb
loope
jle
pop
dec
ja
inc
or
aas
mov
test
scas
mov
popa
or
shlb
xor
pop
pop
in
call
fs
mov
adc
fsts
sti
rcrb
movsl
adc
mov
pop
xchg
imul
lcall
lahf
popa
andb
xchg
cld
inc
lcall
das
enter
clc
lret
cli
adc
or
adc
pop
in
pop
xchg
inc
imul
xchg
int
das
fstps
pop
lds
inc
jg
repnz
sub
inc
pop
pusha
test
sbb
mov
and
repz
out
mov
or
mov
shll
std
and
xchg
or
inc
add
icebp
dec
in
sub
cmc
mov
push
gs
fwait
sbb
aas
adc
add
xor
cltd
je
ja
in
mov
lea
xchg
repz
and
mov
fdivp
clc
push
lret
int3
test
cmpsb
rcr
xor
sbb
aad
lret
mov
in
imul
div
pop
movsb
push
loop
loop
inc
cmpsb
inc
aad
xchg
in
inc
fidivrl
jmp
push
das
lret
dec
mov
mov
sub
cmp
jo
or
and
mov
rcpps
mov
pop
fistl
cmp
in
inc
fisubrl
xor
ficoml
mov
ret
mulb
mov
jo
scas
dec
mov
push
cld
jmp
xor
pusha
call
je
fldt
jge
xor
inc
andb
add
add
shll
out
mov
push
mov
sub
push
insl
jecxz
inc
mov
pop
mov
out
in
push
or
aad
and
push
jb
xchg
bound
or
xchg
or
mov
cli
add
in
or
dec
orl
adc
mov
stos
rclb
pop
sub
push
andl
aad
pop
iret
sbbl
xlat
cld
rolb
daa
mov
mov
mov
ds
daa
loop
mov
pop
jb
in
cmpsb
iret
es
jo
pop
jae
mov
xor
in
pop
mov
pop
scas
dec
mov
divb
sbb
insl
mov
decl
jg
jae
xchg
or
or
mov
test
jmp
sbb
jae
leave
add
and
xor
pop
mov
fsubp
imul
or
cmpsb
xor
hlt
inc
mov
sub
cwtl
mov
xchg
and
adc
fwait
repz
xchg
jecxz
fdivrs
les
mov
xchg
mov
inc
movsb
dec
es
push
rol
rol
insb
push
jo
and
jmp
outsb
es
add
mov
je
jb
rcrl
test
loop
es
xor
mov
cmpb
stos
and
push
es
jno
int3
xchg
repz
push
push
insl
add
cmp
ds
push
fistpl
lahf
cmp
bound
or
mov
std
sub
cmp
sub
mov
std
mov
fists
pop
shlb
adcb
fstpt
clc
dec
inc
insl
fcom
push
in
jmp
ja
test
ja
sbb
xchg
inc
stc
or
jge
shlb
cmp
pop
fsubs
mov
ficoms
loopne
rclb
cmpsl
stc
inc
or
xor
iret
leave
scas
and
jge
insl
scas
bound
pop
fcmovu
mov
mov
lret
rcll
std
inc
cmp
push
jmp
movsl
pop
or
clc
inc
inc
push
mov
sbb
dec
sub
mov
push
sub
push
pop
sbb
adc
loop
sahf
mov
out
es
stos
mov
pop
in
sbb
sub
arpl
adc
jns
jle
jne
stc
aas
lret
js
dec
mov
inc
mov
and
jb
mov
fistpll
dec
mov
mov
lahf
testb
jmp
pop
add
orb
jo
dec
mov
or
data16
sbb
pop
icebp
lret
dec
call
mov
push
pusha
cmp
in
mov
mov
xor
xor
sbb
bound
aas
stc
insl
inc
enter
enter
mov
xchg
rcrl
sbb
mov
dec
and
iret
sbb
mov
mov
mov
scas
pop
in
dec
xchg
mov
pusha
xor
pop
adc
jp
pushf
cmp
sbb
push
iret
xor
mov
test
pop
push
fcompl
inc
pop
mov
test
scas
inc
push
cmp
aaa
mull
fldenv
jge
je
sbb
mov
stos
mov
int3
pushf
clc
push
sahf
test
jae
leave
aaa
dec
repnz
pop
push
aam
stos
jle
mov
mov
inc
xor
mov
dec
inc
push
outsb
insb
stc
fistpll
mov
adc
clc
push
jbe
or
clc
and
push
mov
or
orl
ds
cwtl
sbb
ds
fs
int
add
xchg
lock
xlat
fisubrl
jb
push
fldenv
cmc
or
inc
or
loope
popf
loop
xor
lcall
ret
pop
inc
fdivl
stos
push
adc
fsubl
add
and
push
jmp
ds
pop
movsl
add
push
lcall
pushf
add
out
data16
jbe
jne
lahf
jae
cld
mov
add
pop
inc
adc
adc
fucomi
jbe
pop
mov
shl
outsb
rcr
pushf
mov
push
mov
imul
in
fst
mov
test
xchg
or
ss
xor
fmulp
mov
stos
mov
mov
xchg
mov
sub
imull
jo
mov
ret
lods
and
jg
pop
cli
scas
aad
cmp
jl
das
lock
adcl
shr
sahf
pop
je
cmpsl
cmp
xor
and
repz
or
or
ret
mov
push
test
test
adcl
mov
pop
xor
in
adc
push
mov
jecxz
setnp
jae
sub
and
cmpl
push
lcall
xchg
insl
jo
push
pushf
inc
insb
bound
mulb
mov
xchg
loope
add
es
push
aas
xchg
ficoms
mov
insl
mov
int3
jmp
lods
mov
js
mov
or
dec
jb
imul
pop
out
mov
je
fwait
imul
in
pop
jge
out
lods
push
int
out
jnp
test
sub
loop
repnz
mov
and
push
out
xchg
and
add
scas
and
pushf
movsl
inc
fdivrp
imul
mov
dec
push
aad
lahf
nop
push
leave
in
dec
mov
mov
push
inc
int
stos
es
aaa
mov
inc
or
ret
je
ljmp
sbb
mov
mov
and
xchg
xchg
mov
addl
inc
mov
out
dec
mov
push
std
sub
mov
fisttpll
add
sarb
or
jne
call
js
icebp
push
shl
fisubrs
jge
sti
fidivs
and
add
mov
push
test
ret
or
jg
loopne
mov
dec
clc
fwait
mov
xchg
in
push
push
das
jne
shrl
cmpsb
pop
stos
jg
or
push
push
inc
jo
jae
lahf
jo
scas
ja
imul
sbb
xchg
fucomi
aaa
push
cmp
xor
mov
sahf
out
xlat
stos
and
aaa
mov
je
mov
push
mov
lods
ss
mov
shrl
ss
repnz
mov
pusha
test
push
lret
fadd
shlb
jno
test
and
orb
gs
adc
add
insb
and
js
je
or
push
sub
mov
arpl
sti
repnz
sbb
add
shr
arpl
pop
push
lcall
xor
dec
imul
dec
xchg
xchg
into
cmp
jbe
pop
je
aaa
insl
mov
and
sbb
mov
sbb
add
lea
jbe
sbb
xchg
cmp
push
movsb
mov
and
js
ja
leave
mov
push
jbe
mov
dec
enter
mov
inc
cwtl
adc
cmpsb
arpl
daa
pop
mov
push
dec
insb
imul
mov
pop
cmpsb
imul
dec
dec
inc
push
mov
stos
stos
stc
jecxz
xor
xchg
pop
sub
cwtl
lahf
in
inc
cmpb
dec
mov
lahf
inc
xor
shrb
pop
pop
mov
xchg
insb
aaa
sbbb
xchg
hlt
sub
lods
lahf
js
mov
xor
sti
sbb
jae
lock
inc
loopne
mov
or
out
les
mov
push
out
push
je
ja
fisubl
xor
lea
out
adc
pop
fwait
mov
cs
pusha
mov
mov
jbe
in
popf
sbb
push
mov
lock
hlt
mov
sbbb
out
jl
daa
nop
jge
jo
and
mov
out
mov
or
cmp
push
mov
mov
imul
orl
inc
mov
xchg
xchg
xchg
mov
xchg
inc
xor
mov
jl
inc
adc
movsl
ss
jnp
pop
and
xlat
fiadds
in
mov
jle
dec
lock
or
mov
sahf
scas
pushf
push
xchg
adcl
push
in
lahf
and
inc
sub
mov
repz
xchg
lahf
sub
jg
cli
repnz
adc
ret
pop
ds
lahf
inc
cmc
jl
push
divb
cmpsb
add
insb
dec
movsb
add
sub
stos
int3
cld
pop
pop
adc
mull
pop
jg
mov
add
inc
jle
cmp
pop
adc
aad
adc
add
sub
ret
push
or
icebp
jecxz
sbb
dec
cmp
xor
loope
loopne
push
das
insb
in
inc
xor
adc
lea
repz
shll
das
adc
jmp
notl
mov
mov
cmp
add
icebp
cmpsl
es
dec
fs
push
fists
or
xorl
mov
in
adc
xor
add
rorb
inc
out
cs
xchg
scas
aas
cli
cmc
sarb
push
jg
and
inc
ror
push
out
mov
mov
cmp
fwait
pop
rol
jmp
sbb
cmp
lods
sub
ds
adc
mov
loopne
negl
and
js
fistps
dec
lret
jmp
fbld
cmpsb
jmp
xlat
or
sahf
loope
adc
xchg
ds
sti
mov
and
rcrl
shll
mov
fdivrl
push
mov
cmp
test
in
cmpsb
mulb
mov
cwtl
inc
mov
aam
xchg
cs
nop
jno
addr16
inc
mov
adc
inc
sub
push
testb
inc
pop
dec
inc
gs
push
and
pop
jbe
movsb
jbe
xor
dec
cmpsl
gs
inc
jmp
jmp
jnp
std
pop
ja
je,pt
and
das
push
adc
mov
mov
adc
or
into
and
jle
leave
lret
mov
sbb
jae
fistpll
sbb
inc
stos
loop
fwait
aaa
ja
sbb
xchg
das
int
adc
insl
insb
adc
jns
mov
mov
adc
fildl
pushf
aad
shll
or
adc
push
pop
xchg
icebp
or
dec
cltd
inc
xchg
add
sti
xchg
ss
inc
dec
xchg
sub
loopne
lea
fwait
daa
mov
mov
std
jl
ret
and
push
addr16
mov
js
mov
sti
mov
dec
dec
ss
leave
pop
inc
mov
sahf
push
mov
scas
mov
jecxz
aad
inc
inc
mov
mov
jge
add
data16
leave
pusha
mov
mov
push
inc
imul
cs
imul
jne
mov
out
adc
enter
mov
dec
dec
andb
add
xchg
movsl
mov
inc
mov
pop
xchg
aas
adc
add
push
jnp
jg
shlb
lea
std
aam
cwtl
lahf
clc
pop
cmp
add
or
stos
lahf
pop
into
push
mov
mov
mov
subb
sub
frstor
les
movsl
xor
sbb
adc
cmpsb
adc
mov
mov
lods
mov
mov
loop
adcb
arpl
bswap
push
push
ret
subb
pop
mov
sub
cmp
ja
xor
cmc
jb
sub
lds
loope
cs
or
sub
push
xchg
jo
mov
xlat
xchg
scas
and
in
xor
loope
sbb
imul
sti
cmp
movd
inc
enter
fsubrs
jp
sarb
push
add
mov
jae
imul
and
cwtl
mov
or
mov
lahf
and
jle
mov
cmp
mov
add
add
and
aad
in
push
jns
hlt
scas
int
xchg
or
inc
jmp
and
xchg
xchg
sbb
fs
mov
pop
inc
push
es
clc
data16
sbb
dec
dec
outsb
lods
rorb
movsb
jl
sbb
nop
or
rcl
mov
icebp
lods
cmp
inc
inc
imul
insl
popa
inc
mov
xor
sub
pop
push
jno
lds
shl
repz
mov
test
mov
xchg
push
jmp
rcr
xor
ret
add
jae
fisttpll
in
and
popf
rcrb
sub
ret
sub
sbb
adc
in
add
mov
sub
arpl
pop
fsub
ljmp
insl
inc
into
and
and
pop
jp
out
dec
cltd
mov
fisubrs
pop
lahf
and
mov
push
lea
mov
or
mov
out
repnz
mov
sbb
add
sbb
or
js
pop
mov
daa
shll
dec
sbb
add
and
add
mov
mov
mov
pop
pop
aad
jo
pop
sub
in
lret
xor
xchg
or
addr16
jl
call
mov
dec
ret
add
sub
fcomps
sarb
push
sbb
dec
lcall
shrb
cmpsl
addr16
ljmp
sbb
pop
sbb
or
jns
jbe
incb
hlt
push
rcr
fs
sub
jo,pt
cmp
and
jg
int
lret
jp
in
jle
stos
in
mov
add
clc
jmp
inc
aad
inc
test
hlt
nop
mov
je
rol
loop
and
lock
fiadds
ds
icebp
int
adc
mov
lods
mov
xchg
xor
js
xchg
jno
loop
or
jl
gs
arpl
push
daa
ljmp
dec
es
and
mov
add
sub
push
pop
xchg
sub
push
clc
sbb
divb
and
xor
jns
xor
mov
rol
je
out
outsb
cmp
mov
fwait
stos
outsb
sub
dec
fdivp
pusha
sarl
das
out
negb
fwait
inc
inc
in
dec
or
cwtl
shlb
dec
jl
add
sub
shlb
mov
mov
jb
stos
nop
outsl
les
cmpsb
and
addr16
out
sahf
in
cmpsl
lods
push
xchg
cmp
pusha
add
cmpsb
cltd
lea
pop
add
push
and
leave
add
jb
or
fldcw
fwait
popf
out
adc
cmp
add
addr16
insl
push
jg
push
lret
addr16
mov
sub
pop
push
test
xchg
outsb
iret
movsl
js
repz
xor
sbb
sahf
inc
adc
jmp
sbb
sub
or
int3
jl
push
push
push
pop
cwtl
xorl
inc
xor
iret
pop
outsl
insl
sti
ja
stc
dec
mov
or
movsl
ficompl
es
enter
icebp
jge
mov
dec
xchg
test
fdivrp
inc
shrb
lcall
lcall
arpl
push
cltd
rcl
sub
ljmp
test
fidivrs
lret
xlat
das
xchg
lret
dec
negb
push
pop
xor
dec
lods
mov
sub
sti
cld
jns
xchg
in
fists
and
inc
push
mov
jg
push
ss
scas
ret
inc
xor
test
cmp
jl
orl
adc
pop
jp
insb
sbb
mov
test
mov
fwait
lret
mov
adc
call
mov
arpl
dec
sahf
cmp
mov
pusha
sbb
loope
faddl
pop
and
mov
pop
hlt
xchg
cmp
jnp
repnz
je
xchg
jecxz
mov
adc
sahf
fcompl
stc
inc
fs
hlt
fbld
xchg
lods
sbb
pusha
pushf
stc
mov
mov
insl
mov
inc
sbb
popf
es
sar
jno
insb
inc
mov
adc
dec
cmp
outsb
xchg
xor
std
imul
push
inc
cmp
mov
push
xor
mov
movsl
add
shll
jl
sbb
in
push
cs
aaa
push
jns,pt
sub
xchg
lea
jbe
sub
aaa
in
add
movsl
and
mov
inc
rorb
mov
int3
push
inc
mull
fs
shl
lret
mov
or
pushf
mov
ss
aaa
in
stos
adc
push
pop
push
icebp
pop
push
dec
mov
test
cs
jg
mov
inc
stc
ja
jge
sarl
mov
in
inc
push
sub
test
sub
sub
sbb
int
es
cmpsl
enter
jns
outsb
mov
cmp
loope
bound
jo
loope
loop
dec
aad
jmp
cmp
pop
data16
inc
in
or
mov
mov
sub
sbb
imul
ljmp
pop
lock
push
mov
mov
in
test
push
jmp
push
adc
imul
and
inc
xlat
idivl
int
inc
jae
nop
pop
pop
popf
sub
je
xor
pop
lcall
jg
and
andl
sbb
mov
sbb
xor
jae
lods
test
aam
fwait
movsb
sub
loope
mov
pop
xchg
push
enter
shrl
fldt
push
adc
outsb
jb
pusha
in
mov
dec
xchg
test
lret
outsb
push
int
add
leave
adc
xchg
xor
jmp
xchg
and
adc
das
xchg
mov
into
xor
mov
xor
pop
js
cmc
nop
dec
pop
mov
mov
xchg
rcll
orb
lods
repz
out
mov
add
mov
inc
and
adc
out
jp
mov
cmpsb
pop
lret
test
aam
xchg
add
fwait
mov
cwtl
inc
int3
pop
jnp
xchg
not
repz
gs
imul
add
jo
sbb
out
lock
mov
outsl
adc
xor
data16
fwait
cltd
aaa
daa
je
int3
stos
or
cmp
jl
push
repnz
cwtl
into
sbb
cld
dec
lahf
in
dec
imul
in
pop
cmpsb
sbb
cli
fwait
cmp
lock
pop
jne
stc
add
add
cmp
stos
cld
popf
test
pop
cld
jns
xor
and
push
imul
or
cs
fwait
divl
mov
imul
xchg
jno
or
adc
dec
mov
popa
mov
pop
mov
mov
lock
unpckhps
mov
push
mov
jmp
push
dec
adc
mov
cmp
sbb
adc
imul
push
ljmp
movsl
mov
rcrl
mov
push
xchg
fisttpl
vmwrite
outsb
xor
and
out
mov
push
int
int3
pop
cmc
lock
sub
sbb
pusha
sahf
push
ficoms
push
cmp
out
lods
xchg
adc
cwtl
mov
call
scas
hlt
mov
imul
jg
fs
data16
cli
shll
dec
sub
add
stc
nop
inc
shrl
or
mov
cs
outsb
xchg
mov
lds
sbb
in
xor
clc
test
out
and
sbb
iret
nop
mov
fstpl
cmp
mov
call
arpl
inc
cmpsl
gs
out
inc
jb
xchg
mov
dec
stos
mov
push
mov
adc
jae
xchg
jecxz
test
jl
push
and
jp
sub
dec
push
mov
lret
jecxz
mov
mov
jp
es
pop
aaa
lea
cmp
push
mov
test
inc
sbb
iret
dec
cmp
mov
jecxz
lods
fnstsw
outsb
jmp
fs
pop
xchg
insb
les
jnp
jge
mov
cmpsl
in
cltd
pop
adc
stc
test
dec
imul
sbb
mov
jnp
fdivl
sbb
int
dec
push
cmpsl
add
push
leave
lds
add
xchg
movsb
pop
xor
cld
sbb
xchg
or
pusha
push
stos
mov
jno
out
xchg
jno
cmc
sbb
fadds
js
test
test
addl
adc
iret
and
jge
add
mov
mov
mov
scas
jg
pop
jnp
adc
test
ficompl
and
imul
and
ret
ljmp
std
lock
cmpsb
mov
in
pop
cmpl
xlat
mov
sahf
ficomps
loop
xor
add
scas
cmp
cmp
or
xchg
and
inc
push
and
call
fidivrl
ror
add
xchg
sbb
add
repz
inc
in
inc
pop
in
fnstsw
sti
je
fisttpl
fsubp
sets
inc
inc
mov
jns
insl
pusha
out
out
leave
mov
cmp
jge
lock
int3
lret
aad
ret
test
mov
jns
dec
xor
or
lahf
rcl
cld
lcall
out
mov
fildl
out
jle
test
in
popf
sti
adc
pop
push
test
xor
inc
jmp
popa
out
adc
into
cmp
mov
sahf
cmp
pusha
jl
cmpl
inc
rcrb
nop
inc
test
dec
and
push
dec
data16
pushl
fcomps
dec
mov
ja
sarl
mov
lahf
jmp
addl
mov
js
push
cwtl
lret
imul
insl
popf
inc
repnz
rcrb
fldt
lods
add
repnz
mov
mov
push
mov
adc
jmp
shll
mov
in
pop
outsb
pop
inc
add
fcoms
fdivl
add
jne
cmpsb
sub
pop
push
jnp
mov
fwait
xor
dec
jecxz
push
out
sub
inc
or
fs
andl
cltd
pop
pushf
jmp
fbstp
add
cvtdq2ps
push
icebp
ljmp
mov
shrb
mov
addr16
nop
das
mov
xor
repz
mov
push
push
incl
adc
test
mov
dec
push
pop
into
inc
sti
cli
mov
xchg
fisubrl
in
je
test
sbb
mov
pop
pop
add
mov
fistpl
in
call
sub
rorl
lock
test
cmp
jnp
mov
aaa
mov
sbb
in
test
sbb
sub
pop
xor
in
push
xorl
enter
ja
in
nop
insl
je
lods
pop
adc
or
cmp
adc
jge
xor
jno
mov
jle
xor
jo
xchg
repz
push
jb
or
pop
mov
xchg
sbb
mov
mov
je
or
add
jge
jo
add
mov
mov
les
sbb
pushf
rep
std
cs
ret
push
test
xor
ja
call
js
mov
jmp
pop
mov
leave
lea
out
sbb
aaa
pop
mov
cmpsl
or
jnp
pop
inc
sarb
fwait
xorl
call
icebp
mov
inc
mov
jne
lea
cmp
lahf
lea
scas
cmpsl
jle
add
lcall
repnz
mov
fmull
in
add
cltd
jae
jle
jns
mov
imul
outsl
out
jno
aaa
out
sti
call
ja
loop
inc
adc
and
test
imul
mov
jge
xchg
and
rcl
jb
xchg
bound
ds
in
je
in
mov
outsb
test
ljmp
xchg
add
jo
fnstcw
sti
xor
pop
nop
sbb
mov
pop
in
cmp
push
dec
cmp
cmp
sbb
scas
bswap
pop
push
popa
inc
das
rcrb
lea
in
test
cmp
xchg
test
and
js
sub
ja
jno
xchg
popf
sbbb
movsl
push
fidivrs
sahf
cmp
push
lods
jae
adc
and
ds
xor
cmpsl
dec
add
mov
fcoml
or
leave
inc
ja
pusha
lock
and
mov
outsb
repz
xchg
push
clc
xchg
stos
icebp
js
int3
rorl
and
adc
jl
mov
aam
jmp
fildl
sub
mov
push
mov
and
in
call
movsl
sbbl
cmp
popa
ret
jno
jnp
mov
mov
push
test
xor
xchg
bound
int
dec
mov
out
cmc
and
inc
mov
add
movsb
div
inc
jns
adc
adc
dec
cmp
in
xchg
add
pop
dec
imul
xor
and
lret
lahf
xchg
bound
fisubs
out
cltd
dec
pop
mov
sbb
repnz
andl
pop
or
jne
cmp
aas
decb
add
movsl
jnp
xor
cmp
jae
add
mov
test
movsb
int
push
movsb
pop
adc
push
mov
add
and
jbe
shlb
jg
mov
sub
jge
inc
xor
cwtl
sbb
outsb
sub
icebp
lahf
stos
jmp
cmc
int
push
imul
mov
imul
mov
mov
adc
jge
loop
hlt
and
sarb
lds
das
pop
inc
repz
lds
push
movsb
pop
mov
out
subb
and
ret
xchg
cmp
flds
fdivp
xor
adc
add
outsl
mov
call
lahf
aad
inc
or
stc
out
cmpsb
mov
or
dec
in
pop
inc
mov
xchg
cmp
mov
cmp
inc
mov
std
xchg
jl
mov
xor
outsb
fwait
cld
or
xor
cld
xchg
add
leave
popa
mov
jle
lcall
stos
repz
xlat
incb
lret
out
mov
leave
or
fdiv
insb
pusha
dec
jmp
cmp
icebp
cmp
inc
pop
sahf
push
sbb
push
pop
dec
loopne
lods
xchg
pop
iret
xchg
cmp
ret
mov
dec
repz
xchg
xor
in
push
sbb
push
push
mov
lods
int3
pop
add
or
movsb
sub
pop
mov
jnp
jmp
xchg
clc
cmp
orb
pop
adc
enter
data16
mov
sbb
jne
lea
push
inc
dec
sbb
cmp
jno
add
fistl
or
inc
rcr
sub
leave
mov
and
mov
mov
cmc
frstor
mov
xor
bound
jp
mov
jl
add
lods
gs
out
inc
popa
lahf
xorl
cmp
shl
stos
mov
mov
pop
cmp
ficoml
mov
push
or
push
pop
imul
push
popa
or
mov
cld
test
add
enter
xchg
xor
cmp
outsl
int
push
ret
movsl
imul
lds
mov
cmpsl
jnp
rcrl
add
jmp
rclb
clc
mov
xchg
cmpsl
jecxz
and
dec
sub
fsubl
mov
mov
or
scas
ljmp
mov
jecxz
or
push
icebp
inc
dec
lods
enter
mov
cmpsb
dec
xchg
mov
lss
leave
test
push
scas
movsb
push
fsubrl
stos
or
leave
dec
or
jp
sar
fsub
pop
jge
mov
or
pop
addr16
jle
xchg
pop
and
or
jl
les
pop
cmp
xchg
fbld
stc
and
sub
jae
inc
jp
fsubr
sub
shrb
popf
mov
dec
push
gs
arpl
scas
xor
ret
inc
xor
or
mov
in
shl
out
cmp
mul
inc
push
loopne
fistps
popf
push
movsl
cwtl
into
cmpsb
dec
pop
xchg
mov
dec
or
fwait
sbb
inc
jb
shll
aad
sbb
sahf
aaa
rcl
movsb
fsubrl
aam
or
dec
push
lds
arpl
lods
outsl
xor
push
iret
call
jno
hlt
out
add
jbe
cmpsb
cmp
dec
std
and
iret
xchg
rcrb
inc
xlat
stos
sub
aas
xor
imul
scas
mov
xchg
inc
loopne
xor
mov
inc
fldl
outsl
std
sbb
sub
lods
mov
inc
addr16
stc
loope
mov
cmc
popf
stc
mov
into
incb
xor
aaa
inc
pop
int3
dec
pop
sbb
test
arpl
jle
mov
inc
imul
les
mov
xchg
dec
and
popa
bound
jmp
out
mov
insl
cmp
mov
into
push
pop
mov
add
into
xchg
dec
jecxz
aam
arpl
sbb
xchg
gs
jmp
int
and
ret
sub
dec
mov
cmp
cmp
lret
in
rolb
shrl
and
frstor
int3
shl
cmc
inc
push
stc
push
or
iret
shl
std
sub
movsl
into
xchg
jp
jg
push
mov
push
test
mov
inc
cmp
shrb
pusha
or
xchg
popa
pop
pushf
jge
aas
inc
neg
push
or
mov
inc
mov
inc
add
insb
pop
in
cwtl
lds
outsl
mov
mov
jne
mov
cld
cs
xchg
bound
cmpsb
cmp
xor
pop
sub
mov
mov
insb
ljmp
mov
cmpb
mov
insb
xchg
shlb
jno
outsb
repnz
outsl
nop
ljmp
loope
test
add
clc
popf
adc
mov
mov
inc
xchg
jl
stos
pop
clc
scas
rorl
mov
int3
jge
sbb
loopne
sub
jno
out
insl
dec
xor
add
lcall
ud1
or
fsts
das
xor
shlb
pcmpgtb
enter
popa
dec
pop
ds
in
pop
lock
add
add
cmpsl
ljmp
dec
out
and
dec
cmp
jg
sahf
cmp
pop
or
mov
add
pop
ret
movsl
sub
or
je
dec
pusha
xchg
sub
cld
insl
jne
push
sbb
aas
pop
push
pop
pushf
jbe
out
xor
aas
lret
push
add
mov
inc
add
in
and
dec
push
clc
lahf
xor
xchg
ret
sbb
mov
mov
gs
xchg
mov
jg
shll
push
cwtl
jmp
mov
sub
mov
pop
sbb
push
and
data16
std
sub
add
negl
pushf
push
shll
mov
mov
sub
add
cltd
xchg
sub
out
imul
insb
xchg
mov
iret
fcmovnbe
stos
pop
popf
sbb
lods
xchg
and
in
mov
pop
and
ss
pop
fs
xchg
aad
outsl
fistl
adc
add
lods
jmp
icebp
repnz
cmp
sti
jg
nop
test
mov
mov
xchg
dec
bound
xchg
lods
mov
outsb
push
fimuls
and
push
mov
inc
mov
add
jmp
pop
movsb
sahf
stos
cmovle
jg
push
pop
scas
fdivs
pop
dec
and
lahf
adc
mov
lret
enter
xor
xchg
jns
cmp
outsb
sahf
inc
sbb
outsl
dec
push
mov
faddl
sub
mov
cmp
outsl
mov
push
mov
stos
sub
mov
pop
and
jns
push
out
add
cmp
repz
or
ss
inc
ret
dec
nop
push
mov
mov
loop
and
fmuls
aaa
inc
in
pop
dec
xchg
fwait
js
xchg
ja
xor
add
mov
jno
std
mov
mov
outsb
dec
iret
add
int
repnz
mov
push
pop
xor
add
sbb
pop
sub
adc
andl
cs
sti
dec
jb
xchg
xor
movsb
jno
and
in
ret
sbbb
adc
shl
add
mov
cmp
pop
fwait
sub
fsubrl
mov
sarl
fiadds
lds
in
dec
icebp
repz
popf
test
and
ljmp
mov
enter
or
cmp
xchg
cld
cmp
movaps
lret
lods
enter
push
hlt
fisttpl
push
jae
xor
into
add
cmc
in
ficoml
xor
push
das
inc
jo
jmp
ret
cmp
imul
sbb
xchg
lcall
shl
je
dec
mov
jns
inc
movl
mov
xchg
push
or
cs
sbb
lret
jl
mov
cmp
jmp
sbb
dec
frndint
outsl
loope
daa
sbb
or
fwait
hlt
jne
or
stc
popf
xlat
outsl
adc
test
xor
mov
dec
or
mov
jmp
lods
ds
test
mov
dec
movsb
int
pop
xchg
outsb
pop
adc
imulb
sub
mov
jg
sub
loopne
mov
or
iret
sbb
data16
xchg
adc
sub
pop
mov
fdivl
bound
sarl
add
aas
xchg
sbb
lds
es
dec
int
adc
sub
inc
out
stos
mov
adc
dec
mov
call
jmp
xorb
insl
jmp
sub
test
sbb
cmp
jns
repnz
call
xchg
push
movsb
jge
test
add
cs
aad
popa
stos
mov
jno
inc
rol
ljmp
add
xchg
shll
gs
fld
xchg
lods
sub
sub
or
inc
ficoml
js
cld
sbb
popa
negb
sbb
xchg
mov
ret
loop
test
das
dec
adc
jnp
loop
dec
lret
xor
cld
adc
or
push
stos
sub
dec
into
pop
aad
sbbl
fidivrs
pop
or
push
cld
lods
xor
testl
adc
lods
mov
sbb
sbb
stc
lods
stc
icebp
jbe
sub
pop
gs
push
sub
movhps
shrb
fdivrl
movsb
xor
mov
fs
leave
xchg
jmp
xchg
mov
mov
pop
les
loop
xor
mov
in
mov
sbbl
cwtl
pop
mov
push
sub
sub
lret
push
push
cli
in
sbb
mov
notl
test
insb
mov
push
mov
pusha
shl
jb
icebp
xor
mov
mov
jl
pop
ret
push
pusha
mov
mov
mov
adc
xchg
iret
mov
and
mov
movsb
shrb
cmc
pusha
mov
ror
outsl
shlb
out
in
inc
mov
mov
push
dec
mov
jmp
loop
inc
xor
pop
cmp
or
loop
dec
ret
or
lds
gs
push
dec
mov
push
clc
loope
test
stos
push
push
mov
shlb
jl
je
xor
inc
sti
sbb
cld
jae
add
popa
or
or
mov
xchg
lods
dec
shll
in
sbb
sub
inc
inc
fst
adc
sub
cmc
sub
fidivrs
xchg
mov
xchg
mov
dec
imul
fildll
test
lock
nop
nop
aas
sahf
loopne
mov
xchg
mov
test
loope
push
out
add
sti
lahf
mov
mov
call
sub
jmp
popa
pop
andb
mov
inc
scas
jmp
fdivrl
ljmp
cmc
das
sub
pop
and
sub
and
pop
mov
mov
lret
in
cmp
jnp
ljmp
inc
jg
push
lahf
lahf
xor
add
fisubrs
push
cli
cmp
pop
mov
sub
aaa
imull
pop
jecxz
inc
cmp
pop
jnp
inc
or
sub
ret
mov
pop
or
adc
lcall
lahf
movsb
sbb
mov
jns
adc
or
aad
das
shrd
mov
push
jo
add
cmp
jmp
aad
adc
jae
mov
jbe
push
xchg
xor
ret
sbb
inc
dec
addr16
or
dec
pop
insl
mov
fneni(8087
jno
pop
sbb
hlt
add
push
clc
ja
dec
fisttps
leave
and
pushf
jg
mov
faddl
jnp
nop
pop
mov
xor
hlt
in
lret
outsl
test
scas
insb
cmc
mov
daa
mov
push
movsb
movsl
lcall
scas
xchg
data16
ficomps
pusha
jecxz
into
lret
adc
pop
insb
xchg
hlt
mov
push
mov
jle
fwait
xchg
cwtl
lahf
inc
and
dec
mov
pop
fistpll
sbb
lds
fcomps
adc
ja
out
jp
push
scas
fsubrs
je
jns
mov
lcall
jmp
cmpb
sbb
aad
jecxz
pushf
dec
mov
addr16
and
imul
arpl
jmp
aad
fs
sarb
arpl
mov
adc
dec
shrb
push
or
ss
pop
add
cltd
popf
mov
jb
jmp
dec
aam
adc
pop
pop
or
loopne
aad
sbb
hlt
xchg
sbb
sbb
pop
sub
jmp
ja
mov
xchg
jecxz
cmp
or
in
aam
iret
adc
loopne
stos
add
andb
dec
pop
fists
cmp
rolb
loopne
inc
stos
push
mov
add
flds
sbb
sbb
rcll
mov
fcmovne
scas
outsl
lcall
adc
adc
out
push
rorb
pop
xchg
sahf
adc
xchg
cmp
jmp
push
sbb
sub
mov
push
sub
cld
adc
fistl
pop
in
pop
pop
add
mov
mov
mov
sbb
enter
das
jle
sub
push
in
nop
jge
xchg
sub
sub
dec
and
cmpsl
pop
arpl
mov
xchg
xor
push
or
sbbb
out
iret
sbb
scas
out
or
mov
xor
ret
jne
sub
cmp
in
lret
aaa
inc
xchg
mov
dec
nop
test
fxtract
movsb
mov
dec
mov
fstpt
push
xchg
pop
aad
outsb
cmp
cmp
hlt
loopne
mov
ljmp
push
mov
icebp
push
adc
jb
aad
mov
pop
clc
mov
outsb
pop
mov
inc
jmp
jae
or
dec
and
or
lret
sbb
lods
mov
xor
mov
jmp
and
loopne
shlb
inc
aaa
or
fadd
pop
lret
test
jo
xchg
stc
pop
push
test
inc
jmp
and
shrl
push
mov
shr
inc
les
mov
sbb
jb
in
and
lods
out
sub
jnp
push
imul
xchg
xchg
in
or
mov
divl
movsb
ds
inc
sbb
rorl
test
cld
mov
add
dec
arpl
je
xor
or
dec
xchg
das
popa
in
mov
hlt
lods
pusha
aas
pop
pop
inc
pop
aaa
out
icebp
mov
arpl
cld
sub
dec
je
pop
iret
xchg
cmpsb
mov
push
add
mov
dec
mov
int3
ret
sub
repz
sbb
and
fcoms
inc
and
push
jo
mov
and
pushw
jge
adc
cmp
orb
sub
push
call
dec
movsl
insl
xchg
imul
imul
jmp
xor
pop
or
cmp
stos
and
sarb
push
xchg
pushf
push
pop
flds
jo
pop
dec
push
mov
iret
or
dec
pop
inc
int
jae
jmp
add
imul
and
mov
adc
in
insl
cmc
jbe
xchg
dec
lahf
stos
mov
jecxz
push
testl
cmp
je
enter
jg
dec
dec
jle
mov
xchg
add
test
xchg
mov
ret
sbb
stos
push
mov
mov
pop
mov
mov
or
and
pushf
mov
out
outsb
pop
adcl
jmp
ljmp
and
push
stos
imul
lds
inc
mov
daa
mov
and
or
in
loop
ss
cmp
lahf
subl
divl
divl
lods
cld
imul
dec
xchg
outsb
push
cmp
mov
sub
pop
and
cmpsl
adc
add
jmp
cmc
out
aam
idiv
std
inc
rclb
popf
mov
hlt
cmc
jns
jne
out
push
xchg
adc
cltd
mov
mov
push
and
pop
lcall
push
xchg
addr16
testb
adcb
push
xlat
adc
loope
xchg
cmc
mov
sbb
mov
rcll
mov
and
mov
dec
pusha
jae
push
xor
neg
sbb
idivb
xchg
cltd
lret
mov
adc
cwtl
cmpsl
cmpsb
xor
push
dec
pop
cld
push
and
jp
rcll
dec
icebp
add
lods
out
pop
mov
mov
cmpsb
std
aad
push
fs
jo
movsb
ret
jg
pop
mov
or
ja
fisttps
mov
push
not
ficoms
add
jnp
push
fadds
imul
and
adc
jo
mov
and
orb
mov
dec
outsb
add
dec
hlt
dec
sbb
dec
ror
push
add
lret
cmp
dec
mov
mov
jl
sub
out
adc
stc
jno
xor
cld
push
sub
repz
push
push
test
inc
jo
in
adc
xor
xchg
lcall
push
mov
push
xchg
sahf
sahf
call
cmp
xchg
out
addr16
jns
sti
and
pop
jne
ficoms
fidivl
sub
mov
dec
cmpsl
adcl
mov
mov
enter
xchg
adc
subl
mov
cld
push
pusha
and
test
sub
xor
shll
mov
test
pop
sbb
sbb
orl
clc
xor
pop
ret
xor
xchg
int
pop
sub
adc
xchg
setns
pop
adc
ljmp
inc
stc
aam
rorb
decl
sbbb
push
nop
out
sub
xchg
mov
aas
xchg
scas
jp
test
loopne
fstpt
xchg
adc
out
sub
add
and
mov
test
add
mov
icebp
mov
mov
testb
subb
stos
mov
or
pop
aad
icebp
and
pop
pop
add
sbb
scas
and
loope
pop
push
mov
mov
js
pop
xor
lock
push
idiv
pop
push
popa
and
sbb
add
xchg
push
push
cs
js
pop
push
fbstp
pop
hlt
pop
mov
in
or
movsb
cmc
xchg
inc
sahf
icebp
icebp
lock
lret
and
mov
jne
xor
jo
push
mov
add
mov
pushf
mov
jl
fimuls
fisubrl
xor
arpl
dec
cltd
mov
fstpt
sub
and
stos
adc
lret
sbb
shl
repnz
push
enter
pop
inc
fstpl
cmp
aad
xorb
movsl
adc
pop
lahf
add
inc
add
mov
xor
mov
push
pusha
jp
mov
aaa
adc
sbb
sbb
aas
pop
ja
rol
into
lcall
sbb
shll
cwtl
sub
adc
sbb
xchg
and
popa
push
xor
lds
arpl
dec
lret
mov
es
lret
adc
insb
shrb
cmp
mov
inc
xor
push
inc
ret
pop
jge
sahf
mov
call
pop
or
test
mov
xlat
popf
insl
out
pop
pop
in
out
outsb
fwait
mov
imul
icebp
rclb
scas
mov
push
pop
enter
iret
gs
xchg
jmp
insb
out
movsl
cli
push
xor
xor
pop
rcll
test
mov
sbb
push
dec
push
mov
movsb
sub
and
jmp
or
pop
add
bound
xor
jne
mov
sbb
into
ljmp
add
out
cwtl
mov
add
xchg
enter
sahf
loop
bswap
adc
mov
cmpsb
add
inc
inc
popa
invd
cmpsl
push
movsl
lahf
push
cmp
push
andb
pop
into
mov
mov
in
sub
pop
push
sbb
xlat
nop
ror
jae
push
add
mov
or
mov
lods
pop
and
pop
in
js
aad
jmp
dec
rorb
push
sbb
in
cmp
test
pushf
or
sub
or
lock
mov
cmpsl
cmp
gs
xchg
fnsave
ljmp
jmp
inc
push
jp
xchg
cs
xchg
ficomps
cmp
pop
dec
aam
clc
fstpt
dec
jb
xor
lds
scas
jne
cs
fsubrs
inc
mulb
ds
outsb
sbbl
jmp
ds
xor
adc
or
jno
dec
jae
sub
dec
xchg
lahf
push
leave
rorl
adc
je
dec
cmp
or
mov
inc
shl
xor
je
fmul
or
or
pop
popa
nop
push
adc
xorl
je
sti
fisttps
pop
mov
push
pop
or
sub
orb
sub
xchg
sub
dec
dec
mov
sub
mov
ret
enter
lea
add
popa
adc
outsl
cmc
cmc
adc
sbb
test
fadd
jle
test
pop
mov
mov
rclb
enter
stos
sbb
mov
push
fsubs
dec
cmpsb
out
rcrl
ds
bound
fdivrl
mov
and
in
gs
cmpsb
rcll
daa
fldt
out
xlat
sub
push
adc
mov
jg
rorl
jmp
aam
push
lret
enter
jne
scas
mov
xor
mov
sub
cmc
test
sub
add
cmp
shrb
mov
sub
xor
shlb
xchg
les
jmp
mov
out
cmc
inc
testb
es
fdiv
or
xchg
aad
out
adc
mov
imulb
and
dec
or
and
les
lcall
pop
jns
mov
jmp
sub
arpl
pop
and
xor
cmc
push
pop
inc
ret
add
stos
push
sbb
nop
mov
dec
mov
pop
jbe
xor
inc
cltd
and
mov
mov
psrad
movsb
push
mov
lcall
inc
fildl
fwait
xor
or
mov
push
out
add
movsl
and
xchg
adc
fyl2xp1
mov
xchg
lds
or
out
cld
add
xchg
test
mov
outsb
mov
sub
es
fisttpl
push
jo
mov
sub
mov
xchg
add
clc
popa
repnz
adc
sub
stos
sbb
out
xchg
aas
shr
sbb
push
and
sub
lods
mov
ficomps
mov
rcrl
loop
lret
jp
jmp
xchg
or
mov
pop
lods
sub
jmp
mov
nop
jmp
jg
out
int
shll
mov
subb
fcomps
mov
cli
push
push
jbe
or
imul
pop
iret
lahf
arpl
stos
cmpsl
fcomps
pusha
mov
mov
mov
push
sahf
aad
jg
jno
loopne
scas
rorl
or
aam
mov
push
fiadds
scas
rcrl
cli
test
mov
leave
push
dec
adc
ror
bound
jno
dec
cmp
lods
out
imul
xchg
or
xor
mov
inc
and
pop
xchg
mov
or
divb
mov
iret
adcl
mov
pop
in
xor
mov
imulb
vmovshdup
inc
mov
xchg
ja
mov
sbbl
daa
jmp
loope
inc
js
jmp
cmp
nop
and
xadd
push
imul
add
ss
sub
addr16
add
cmp
out
mov
loope
lock
flds
sub
lret
inc
cmp
pop
sbb
cld
cmc
or
jge
xor
jb
dec
push
sarb
stos
pushf
push
pop
cmpb
xor
xchg
mov
cmp
sbb
ret
mov
cmp
lods
and
scas
sub
xlat
inc
arpl
icebp
or
rclb
cmp
das
mov
imul
scas
ss
push
nop
rorb
pop
cwtl
push
pushf
in
jl
or
sbb
stc
ret
pop
inc
loopne
sbb
imull
inc
jne
adc
flds
mov
hlt
push
mov
out
outsl
mov
jl
sub
sub
sub
in
lahf
push
mov
loopne
dec
inc
push
icebp
pushf
push
gs
push
hlt
icebp
add
push
and
shlb
push
cltd
and
sub
cmp
cld
push
stos
lock
ret
fwait
cwtl
and
pop
imul
mov
inc
cwtl
sub
mov
or
arpl
test
insb
xchg
outsl
popa
out
sub
es
roll
pop
dec
repz
push
push
push
shr
aam
and
adc
dec
pop
mov
cmp
dec
push
mov
mov
lods
loop
fisubrs
xchg
lret
movsb
lods
pop
stos
inc
out
jmp
inc
and
popf
icebp
cmp
sbb
inc
cwtl
das
movsl
inc
mov
xor
inc
xchg
test
iret
movsb
adc
push
mov
mov
cltd
test
sub
xor
sbb
dec
lds
movsl
adc
and
insl
mov
dec
imul
sub
adc
unpckhps
xor
loop
adc
or
ret
xor
or
stc
jmp
push
sbb
mov
in
ja
out
adc
or
sbb
orl
jecxz
mov
push
bound
or
mov
outsb
or
jo
cwtl
mov
sbb
lahf
pop
pop
sbb
xor
mov
xchg
adc
mov
pop
or
outsl
ja
bound
or
test
ret
scas
xchg
in
sub
cltd
mov
inc
es
pusha
or
scas
loope
pop
push
cmc
es
lea
sub
cmpsl
pushf
rorb
aad
add
jns
js
mov
jmp
and
imul
inc
repnz
nop
ret
jno
or
mov
push
aam
mov
xchg
enter
rcr
inc
mov
inc
movsl
aas
sbb
shl
cwtl
ret
into
xor
rclb
cmp
xchg
icebp
xchg
movsl
dec
mov
into
in
push
cmp
xchg
xor
mov
pop
xchg
sbb
mov
lahf
or
shr
jmp
in
mov
sub
xor
mov
and
xchg
xor
adc
adc
rcrb
add
clc
int3
lods
adcb
in
ljmp
call
ret
imul
stos
js
pop
or
sbb
fs
xchg
xchg
pop
repnz
jae
jl
loopne
mov
imul
cmp
shrl
xor
aas
mov
lcall
pop
mov
das
enter
sbb
push
push
mov
cs
iret
xor
dec
add
fwait
cmp
or
lds
adc
rclb
and
mov
cmp
cmc
mov
pushf
aad
loop
and
or
add
jecxz
aam
outsl
mov
xchg
jo
sub
xchg
fsubrs
in
outsb
imul
dec
es
inc
add
loopne
adc
or
and
cmpsb
sahf
pop
test
dec
js
jge
mov
in
pop
aad
cmp
mov
pop
pop
xor
push
idivl
push
fistpl
mov
push
punpcklwd
xchg
dec
call
popa
inc
out
mov
xchg
dec
cmp
or
test
xor
inc
lahf
imulb
test
push
jb
pop
sahf
fisubrs
ds
orb
lds
sub
std
enter
mov
iret
mov
aaa
stc
and
stos
stos
daa
xchg
mov
pusha
sub
shlb
cld
sbb
cwtl
das
add
jbe
iret
mov
shlb
das
xor
mov
inc
and
aas
out
mov
inc
jns
repz
jno
and
fcoms
in
mov
into
xchg
xor
sarb
lock
js
adc
pop
mov
fisttpl
imul
push
adc
mov
dec
mov
dec
mov
popa
lods
data16
in
cmpsl
adc
jno
mov
xchg
or
pop
sbb
insb
lret
or
adc
loopne
shl
das
add
je
roll
ja
ror
adc
adc
lret
aad
hlt
add
int3
or
mov
test
or
and
out
fcomi
inc
scas
les
mov
leave
out
lcall
sub
xchg
or
pop
pusha
test
outsb
or
popf
push
pop
adc
mov
xor
pop
fisttpl
push
sub
inc
mov
mov
neg
mov
mov
dec
mov
mov
cs
add
mov
or
push
add
add
cltd
sub
sub
test
fs
jle
scas
jecxz
repnz
repnz
pusha
ds
in
sarb
shll
scas
sbb
icebp
daa
rclb
dec
stc
xchg
les
int
scas
mov
rcrb
inc
mov
imul
aas
add
data16
pop
out
push
repz
or
insl
leave
xchg
inc
push
ljmp
cmp
sub
mov
hlt
mov
sti
adc
and
imul
insl
dec
roll
leave
or
fsubl
push
stos
push
nop
loop
jo
pop
mov
fistpll
xchg
inc
aad
or
in
sbbl
inc
sbb
add
and
call
adc
pop
arpl
sub
sub
ja
jmp
mov
or
push
sarb
pop
popf
sbb
loopne
loope
fsubl
loopne
stc
mov
xchg
adc
jb
jg
test
mov
add
inc
push
adc
sbb
sub
mov
test
loop
mov
aad
xchg
out
mov
js
sahf
mov
lret
mov
aam
bound
call
rclb
pop
pop
out
push
dec
mov
xchg
or
imul
jb
mov
sub
push
or
ja
ficoms
or
sbb
add
inc
push
out
xlat
inc
hlt
jecxz
cmp
or
mov
int3
and
roll
lock
or
scas
lods
popf
shrl
fidivrl
mov
mov
mov
cmp
xor
pop
xor
pusha
mov
xchg
xor
or
xor
fdivr
inc
and
push
push
js
cmp
sbb
cmp
in
lods
sub
sub
ret
in
insb
stc
in
clc
shr
imul
add
and
es
imul
ss
addr16
push
adc
das
clc
inc
mov
xor
xchg
push
sub
daa
hlt
or
xchg
ljmp
nop
pop
imull
lret
js
and
leave
mov
in
fs
movb
out
int
mov
fs
jg
jl
dec
ret
jno
popf
cs
test
add
dec
aas
je
jo
enter
cmc
sarl
add
in
sbb
ljmp
sbb
adc
pop
lahf
mov
pop
jp
loope
mov
xchg
mov
lret
orb
cmp
xchg
ss
lds
and
push
mov
mov
stc
jl
add
daa
xor
push
sub
test
xor
adc
push
stos
cli
in
or
or
insl
push
repnz
lea
test
sub
mov
jmp
nop
mov
add
mov
popf
shll
sub
inc
repnz
sbbb
lds
arpl
iret
in
and
jb
pop
faddp
or
jp
dec
movl
push
sub
in
lret
mov
dec
hlt
jle
out
cmp
jg
lret
jne
xor
mov
ret
cmp
mov
push
or
adc
jo
push
xchg
fxch
push
adc
add
jne
leave
sti
ds
pop
cmpsl
pop
scas
xlat
popa
mov
cmp
enter
imul
pop
jge
in
bound
popa
repnz
popf
fwait
inc
testl
mov
ret
sti
iret
popa
add
test
ja
mov
cmp
repz
nop
inc
inc
dec
pop
xor
sub
add
lock
and
fwait
andb
popa
xchg
sbb
jnp
lret
push
mov
bound
imul
hlt
into
ret
push
pop
cmp
and
insb
stc
lret
pusha
jg
inc
or
arpl
iret
lahf
sub
hlt
pop
inc
in
inc
out
das
popf
push
adc
xchg
repz
jns
insl
sahf
jl
test
loope
cmp
je
dec
push
mov
cs
dec
sub
dec
mov
stc
sbb
push
jecxz,pt
call
inc
xchg
and
repz
imul
mov
push
sarb
jle
sbb
mov
icebp
mov
jmp
xor
cmp
pushf
jg
xchg
hlt
aaa
push
call
jge
jge
mov
mov
cmp
ffree
cmp
sti
sbb
xchg
pop
xchg
adc
test
xor
dec
mov
or
ret
lahf
daa
xchg
adc
sbb
and
dec
sti
into
push
adc
pop
sub
cmc
xchg
das
movsb
cs
aas
es
outsb
xchg
jecxz
in
lds
aad
in
sub
ficoml
add
addl
sbbb
pop
jmp
test
sarl
add
aas
sub
mov
in
outsb
insl
dec
popf
lret
outsb
inc
test
mov
lcall
mov
sahf
orb
cmp
cli
ja
in
daa
out
int
sub
or
mov
jns
push
cmp
jge
push
jne
movsb
gs
aas
mov
mov
pop
jecxz
sahf
xchg
push
loop
pop
push
mov
jns
aad
dec
lods
fs
cmp
pop
add
inc
cmp
add
cmp
cmp
dec
sub
add
pop
sub
out
jl
xchg
vsqrtps
cmp
jns
pop
and
add
push
popf
pop
push
negb
js
imul
push
lcall
je
add
and
cmp
or
xchg
mov
push
lds
stc
lret
push
daa
jge
outsb
in
fst
nop
sahf
imul
jmp
insl
and
ret
pop
lea
aaa
in
lret
iret
in
fidivrl
and
popf
scas
loop
popf
movsl
in
mov
jns
sub
nop
sbb
fsubrl
ja
pop
cli
jb
imul
or
mov
dec
je
fwait
dec
notb
hlt
or
push
mov
xor
popa
jo
imul
test
pop
jo
cli
ds
rol
xor
int3
push
shll
leave
lds
push
lods
xchg
mov
push
xor
push
fidivrs
out
mov
mov
add
mov
mov
fbld
mov
ret
fdivl
sbb
imul
shlb
jb
xor
ret
shlb
hlt
cmp
test
cltd
mov
and
cld
mov
mov
rolb
mov
mov
inc
imull
or
dec
jb
lds
or
movsl
ljmp
inc
dec
sub
lods
cltd
mov
push
arpl
sub
sbb
out
jecxz
lods
cmp
mov
adc
loope
mov
sbb
fs
andl
mov
xchg
sbb
imull
jle
stos
and
daa
pop
add
mov
inc
lret
fs
xchg
in
xchg
test
and
push
inc
lret
hlt
cltd
dec
fnstsw
or
fstps
sub
pop
out
mov
lret
mov
bound
push
dec
gs
test
cli
out
mov
jae
sbb
int3
int3
add
and
js
aaa
movb
push
push
outsl
xor
aad
pop
pop
xchg
push
mov
cltd
frstor
push
adcl
xchg
loop
push
mov
mov
shll
rorb
jns
cli
mov
loope
ret
in
fisttpll
push
cmp
cmc
mov
out
xchg
sub
mov
xchg
popf
mov
inc
mov
popl
jp
in
popf
sub
or
lods
jae
sub
xor
cwtl
leave
stos
mov
repnz
add
xchg
outsb
cli
jmp
mov
rcrb
inc
cltd
neg
push
sar
cmpsb
cmp
xchg
or
imul
mov
fdivl
iret
subl
std
in
test
in
mov
sahf
xchg
dec
clc
outsb
lock
das
mov
in
mov
xchg
adc
call
lds
jg
or
ss
xor
ja
xchg
aad
jmp
jg
arpl
fsubrs
sbb
pop
je
orl
shrl
cmp
push
or
sbb
mov
pusha
call
outsb
inc
sarb
cmp
add
jecxz
rcr
je
stc
sti
fxam
aam
fwait
sbb
divb
dec
and
jge
jg
jo
decb
test
mov
lcall
adc
mov
jmp
xchg
out
inc
jmp
pop
imul
insl
jmp
push
or
ficoms
adc
dec
cmp
inc
rcr
xchg
lret
int3
sub
jae
sub
mov
lret
hlt
rorl
pop
or
jle
adc
mov
inc
out
mov
dec
pop
mov
call
sbb
mov
cs
mov
adc
insb
lahf
iret
rolb
orl
les
sbb
pop
test
jp
push
fbld
cltd
mov
rolb
push
stc
jno
xor
stc
out
jle
mov
inc
adc
push
ret
cmp
mov
arpl
mov
mov
mov
cmp
clc
mov
pop
push
pop
int
sub
ja
nop
mov
scas
inc
sub
or
out
jae
sub
and
push
fmull
adc
inc
rcll
aaa
cli
cmc
out
inc
jne
add
aam
int3
enter
stos
shlb
jne
add
inc
ret
xchg
push
shlb
jmp
sbb
pushf
xor
add
out
xchg
mov
and
add
or
xchg
popa
inc
xor
jmp
or
push
popf
sahf
xlat
aam
pushf
fildl
aad
outsl
dec
push
mov
ret
and
adc
cmc
cli
xor
imull
adc
adc
xchg
pop
xor
loope
aas
iret
lds
cli
lea
jns
ret
pop
pop
mov
icebp
ss
fistps
lahf
ja
lods
mov
jl
pop
dec
add
mov
imul
std
jb
arpl
les
sahf
xor
pop
mov
xor
ficomps
sub
insb
adc
sub
movsb
sbb
rolb
lock
jmp
mov
mov
sbb
mov
xor
jle
shlb
mov
popl
pushf
push
inc
int
lcall
add
dec
shrb
push
les
lea
xchg
mov
add
fwait
cwtl
ret
loopne
push
scas
cs
add
scas
fmull
jne
popa
ja
sti
mov
fisttpl
stos
mov
cmp
sbb
jmp
adc
or
dec
and
subb
pop
jl
mov
loop
stos
mov
jo
out
pop
cmpsb
or
out
inc
pop
dec
pop
lcall
cmpsl
ja
mov
or
les
push
scas
push
insb
out
mov
addr16
pusha
int
fimuls
loopne
pop
scas
ss
cmp
jg
and
xchg
dec
sub
mov
lods
out
fisubrl
cli
in
fs
std
int
popa
testl
jae
pop
sbb
push
add
stos
or
imul
pushf
mov
push
add
movl
jns
dec
sub
aam
out
dec
inc
sub
inc
adc
cmpsb
test
pop
shll
mov
jno
add
xchg
aas
or
rclb
ficoms
imul
jo
dec
adc
dec
outsb
lahf
dec
jo
pop
fcmovnb
divl
pop
adc
pop
jno
fisttps
jecxz
xor
addb
mov
inc
in
stos
xchg
sbb
xchg
lods
rcrl
jo
push
icebp
leave
mov
sbb
xor
push
das
out
sub
daa
loop
fsubs
daa
sub
sub
cmc
int3
in
enter
lods
in
mov
sub
mov
stos
push
popf
hlt
stc
add
movhps
jbe
xchg
adc
inc
add
push
mov
dec
aad
sub
adc
lret
mov
jae
insl
rol
lcall
out
mov
lods
xchg
sub
iret
ss
or
pop
pop
lea
adc
pop
cwtl
mov
inc
aaa
sub
ljmp
pop
ds
add
xor
jge
clc
out
mov
and
jno
xchg
sbb
cwtl
icebp
mov
xor
push
mov
mov
lahf
pop
mov
hlt
sahf
cmpsb
shufps
jl
arpl
rcl
dec
sbb
xor
movsl
sbb
test
hlt
outsb
leave
fsubrl
scas
mov
pop
jae
pop
add
popf
in
cmpl
mov
stos
mov
gs
outsb
test
mov
push
jnp
pop
mov
cltd
leave
jp
xchg
jecxz
sub
loope
xor
insb
cmp
mov
xor
ret
dec
sbb
add
enter
addb
dec
xchg
ret
xchg
xor
xchg
and
sub
jno
gs
jbe
pop
push
xlat
xor
jecxz
dec
js
sub
lods
and
push
mov
jecxz
mov
popf
add
dec
fs
xor
xor
mov
outsb
jle
scas
shrl
xchg
push
pop
outsl
mov
mov
ss
inc
les
pop
mov
xchg
mov
mov
cmpsl
mov
js
inc
pop
gs
mov
and
or
add
daa
lcall
inc
jl
ljmp
nop
push
mov
xor
mov
xor
pushf
cmp
push
movsl
xor
test
hlt
enter
cmp
mov
mov
jl
cmp
inc
sarb
fs
jp
sbb
mov
rorl
out
aas
cmp
filds
fcomi
shrb
loope
sbb
lahf
loope
cld
pop
mov
jp
shll
clc
fadds
sbb
mov
jno
dec
fcmovu
jne
mov
cmc
dec
in
les
out
aaa
jnp
repz
inc
lcall
cmpsb
stos
jp
sbb
inc
int
pop
push
sbb
arpl
loop
push
movsb
adc
dec
adc
loope
mov
mov
mov
insb
orb
inc
xor
ret
imul
and
insl
dec
push
mov
imul
lret
add
adc
in
xchg
add
mul
mov
xchg
fbld
pop
xchg
mov
icebp
cli
inc
js
std
adc
adc
mov
xor
pop
adc
xchg
lock
pop
jmp
cmp
hlt
fnstenv
cmp
and
xchg
aam
hlt
shl
into
nop
fsubrp
test
in
cli
sbb
pop
fs
and
ret
add
mov
fs
cld
dec
mov
sbb
fcmovbe
stc
int
addr16
adc
leave
mov
rcl
adc
xlat
jo
ss
jbe
arpl
testl
stos
aaa
adc
push
or
push
popf
jne
test
gs
pushf
cmp
aaa
jnp
mov
and
mov
subb
scas
push
sbb
pop
imul
int3
mov
lods
fwait
push
xchg
ret
ror
jb
int3
cld
sbb
add
jnp
jne
std
scas
ss
xchg
push
leave
repnz
in
loop
cltd
inc
mov
ret
mov
leave
push
add
out
xchg
in
push
push
and
repz
scas
inc
test
jg
push
enter
in
mov
adcl
mov
notb
ss
cmpsl
push
imul
sahf
pop
cmp
adc
xlat
pushl
mov
lock
cmpsl
and
xor
jo
imul
lods
dec
pop
test
iret
xchg
pop
sub
inc
das
or
dec
mov
pushf
sub
adc
pop
aaa
mov
pop
lock
sti
push
mov
rorb
push
sub
pop
sub
std
sarl
rorl
dec
or
fsubrl
enter
cmp
lea
fmull
inc
arpl
orb
leave
leave
pop
jmp
insl
mov
mov
pushf
dec
xor
and
mov
cmp
lods
pop
insl
loopne
lock
lea
mov
push
cmc
or
dec
xchg
fimull
test
xchg
and
mov
mov
data16
xchg
pop
fsubrs
mov
sarb
lret
fnsetpm(287
xchg
push
aam
gs
lret
xchg
dec
enter
adc
or
insb
adc
cwtl
cmp
cmpsl
inc
inc
in
mov
xchg
enter
mov
in
jb
cmp
outsl
in
inc
mov
in
jo
scas
xor
lret
out
pop
call
sub
out
mov
jl
cltd
filds
in
inc
int3
out
out
in
gs
data16
int3
xor
xchg
xchg
and
add
ret
rclb
adcl
ja
pop
sahf
or
gs
adc
int3
mov
or
jmp
mov
rep
sbb
pop
cmc
pop
rolb
sub
xor
inc
add
pop
jmp
mov
fsubl
cld
cmp
jecxz
jo
push
or
fs
add
mov
mov
xchg
push
pushf
pop
xrelease
jmp
pop
daa
icebp
push
fdivl
xor
jle
orl
leave
and
in
sbb
stc
out
xchg
xor
xor
mov
hlt
in
adc
jnp
sub
xchg
xor
xchg
add
and
xchg
jbe
dec
push
xchg
mov
imul
xor
fdivl
push
add
in
icebp
lahf
push
adc
xor
hlt
addl
aad
jecxz
xchg
jns
mov
push
cltd
dec
rorl
test
push
pop
inc
aaa
ss
mov
test
mov
xor
mov
je
movsb
pop
lahf
mov
test
es
adcb
pop
hlt
enter
mov
xor
lret
push
js
push
xchg
leave
gs
fadds
int
push
repnz
inc
and
pop
cmp
sbb
shll
mov
dec
std
in
cmp
fstps
addr16
dec
mov
lret
or
mull
inc
mov
lahf
or
addl
jp
sub
ficomps
cmp
daa
mov
daa
dec
cmpsb
inc
dec
in
mov
xchg
inc
push
dec
jne
xor
pop
add
mov
ljmp
in
out
mov
lret
inc
xor
mov
movsl
aas
outsl
pop
mov
fstl
inc
jo
push
or
sahf
shll
movsb
aad
lock
imul
movsb
pusha
lahf
jae
jg
shl
cmp
cwtl
pop
mov
repz
sahf
pop
aad
bound
push
jle
mov
movsl
xchg
sub
sub
mov
es
je
add
dec
push
dec
insl
test
out
push
lahf
daa
inc
sahf
cmp
pop
inc
ret
clc
mov
xchg
aas
and
add
andb
add
dec
call
ja
call
adc
in
ss
test
shll
repz
add
cltd
lods
pop
in
imul
xchg
loope
mov
daa
out
inc
jmp
es
jle
push
aaa
stos
mov
xchg
cmpsb
mov
cmp
cwtl
add
addr16
leave
jno
es
cmpsb
loope
jae
pop
sub
cld
jmp
sub
lds
sub
jo
xor
cld
sub
loopne
pop
sti
sbb
sti
je
cmpsl
scas
pop
je
xchg
jmp
adc
fisttps
pop
pop
sub
test
fs
pop
and
test
das
add
int
cmp
out
sarl
cmp
js
cmp
mov
lock
mov
xchg
stos
adc
ss
scas
inc
mov
lea
cmp
insl
and
mov
inc
mov
adc
and
ja
into
pop
decl
jp
push
out
notb
lea
in
psubsb
ljmp
int
sub
int3
icebp
pop
std
fsubrs
add
mov
xor
or
daa
push
cmp
sub
adcl
xchg
bound
fcmovu
cmp
and
ss
push
mov
test
and
and
pusha
sub
or
popl
cli
ja
or
das
cmp
sbb
pusha
popa
pusha
in
sub
jl
cmpsl
in
mov
fdivrl
popf
aas
add
xor
and
mov
inc
les
pop
xchg
pop
xor
lcall
jno
das
sahf
or
cmc
mov
ja
jmp
push
scas
inc
clc
mov
mov
mov
test
mov
lret
mov
sbb
shrb
fldcw
insl
filds
cmp
add
test
mov
sbb
les
or
xchg
fadd
bound
mov
xor
and
pop
leave
outsl
lret
mov
cmp
in
fistps
clc
cwtl
fwait
cwtl
or
adc
in
xchg
pop
idivb
jnp
jg
push
fnstenv
xchg
iret
adc
fistpl
add
loope
and
and
push
cmpsl
mov
inc
mov
mov
jmp
out
cld
out
push
push
orl
arpl
int
dec
mov
popa
stos
xchg
xor
adc
ret
pushf
push
add
sub
mov
mov
into
cmp
adc
cmp
add
lahf
mov
xchg
lods
jb
cmp
shrb
sub
in
outsl
sub
test
dec
fisubl
popa
ja
xchg
xchg
mov
sub
xchg
jge
mov
loope
jg
sbb
mov
leave
sub
xor
sub
mov
bound
jge
scas
lret
jmp
clc
mov
and
in
movsl
inc
xor
mov
adc
pop
movsl
out
xor
movsl
mov
xchg
or
int3
push
xchg
pop
dec
sbb
stos
dec
loop
out
fiadds
pop
mov
fnstcw
inc
xlat
mov
stos
or
into
fcmovnu
cwtl
inc
addr16
push
mov
add
mov
ret
push
xor
and
rorb
push
cli
add
out
mov
inc
jae
fildll
cmpsb
xorb
and
leave
lcall
jge
inc
sbb
cmp
push
shrb
stos
cltd
aad
in
pop
in
das
cwtl
push
in
and
cli
arpl
mov
aam
and
inc
dec
mov
insb
mov
sbb
leave
gs
pop
jecxz
xchg
pop
xchg
inc
xor
mov
clc
adc
shlb
mov
aas
xor
mov
sbb
dec
xor
xchg
push
lcall
xchg
mov
push
nop
imul
and
push
sbb
and
hlt
add
pop
push
lods
fdivs
xchg
sub
cmpsb
xchg
xchg
scas
jne
xchg
sub
sub
and
pop
iret
in
push
stos
mov
movsb
in
mov
pusha
sarb
pop
wbinvd
add
lahf
popf
std
sub
mov
and
adc
test
stos
add
cmpsb
xor
mov
push
shlb
lds
mov
sub
xchg
daa
test
jle
pop
ror
sub
xor
push
pop
push
add
test
adc
jp
jae
fbstp
fdivp
mov
xchg
xor
dec
jg
mov
loopne
out
lret
sub
pushf
or
pop
push
popf
dec
cli
imul
lods
fnstcw
inc
sbb
jmp
or
sbb
lea
fiadds
ftst
es
push
sar
mov
adc
in
insl
insb
dec
adc
dec
ret
xlat
sahf
mov
jp
jmp
inc
dec
fcompl
ret
mov
lret
xlat
outsl
daa
into
ja
xchg
fsubr
gs
dec
in
movsb
aad
ljmp
test
test
fwait
push
xchg
lahf
sub
xor
add
mov
adc
pop
dec
pop
or
mov
lcall
pop
pop
add
mov
dec
xchg
pcmpgtd
pushf
sbb
mov
jne
dec
popf
mov
jp
jp
subl
cmp
andb
jne
repz
cwtl
and
nop
pusha
push
mov
mov
xor
pop
sub
xor
sti
mov
stos
cmc
lds
hlt
jmp
cmp
lods
clc
pushf
pop
pop
lock
out
sbbb
in
or
stc
inc
push
xchg
sbb
mov
test
push
push
stc
push
outsb
or
or
xor
cld
adc
cmp
jecxz
push
cmp
sub
test
rclb
jp
dec
xchg
inc
cmpl
sbb
ja
add
outsl
das
bound
inc
loope
xchg
mov
lods
xchg
and
lcall
push
jle
mov
shll
lods
cltd
pusha
cmpb
popa
nop
dec
gs
fiadds
dec
xor
leave
and
fbstp
fstps
sbb
sbbb
ss
repz
pop
loope
frstor
xor
and
rorl
add
cltd
pop
cmp
adc
lahf
or
insb
aas
adc
out
jl
xchg
fs
stos
out
test
mov
sub
xchg
cmpsw
push
fisubs
mov
cmp
pop
jge
sub
rcl
fidivrl
mov
push
fmull
mov
hlt
mov
mov
and
mov
clc
mov
jge
add
repz
or
repz
jne
ja
cmp
ret
mov
cmpsl
nop
fdivs
push
mov
jnp
jae
cli
cwtl
inc
notl
and
inc
sbb
xchg
cmpsb
repnz
aad
mov
dec
stos
push
mov
cmp
insb
jnp
pop
mov
out
jno
sbb
xor
lldt
scas
push
jno
jecxz
and
add
movsl
sbb
jmp
movsl
cmovnp
push
std
push
push
add
je
dec
ja
push
les
pop
iret
ret
int
lods
sbb
stos
ret
fadds
fstl
outsl
out
push
xchg
mov
dec
pop
pop
pop
jns
sub
dec
jp
lcall
jp
push
loope
loop
das
or
dec
fmuls
adc
push
lret
gs
mov
rcll
pop
or
rcrb
push
dec
mov
jnp
outsb
mov
aas
and
int3
mov
pop
fisubs
aam
add
out
xchg
addr16
addr16
dec
mov
xor
mov
loopne
imul
xchg
mov
xor
mulb
test
mov
xchg
int3
rorl
sarl
cmp
push
or
jge
stc
ds
xor
data16
or
stc
lahf
cld
popf
dec
aas
inc
xor
push
lahf
sbb
into
rclb
pop
clc
add
mov
lret
in
loope
lods
jp
fadds
push
adc
lea
and
jge
push
dec
adc
cmp
insl
js
xor
cmp
mov
scas
int
pop
sbb
sbb
test
fs
das
sbb
inc
js
jecxz
dec
jnp
xchg
and
dec
inc
inc
dec
mov
inc
pop
aam
xchg
jmp
or
mov
sub
ret
jae
call
pop
mov
xor
jno
jbe
pop
je
decl
data16
mov
adcb
cmp
xor
dec
and
ds
rcrl
or
imul
pop
jg
xchg
pushf
pop
pop
pushf
arpl
into
xor
mov
in
jb
mov
jbe
push
test
andb
dec
jl
dec
or
jl
cmp
push
fcoml
jno
xor
sbb
sbb
loope
pop
add
jmp
pop
pop
mov
push
arpl
ffree
bound
and
inc
rorb
jmp
xor
adc
pusha
adc
xlat
push
inc
xor
int
mov
lret
repz
loope
ds
test
sbb
cmp
push
loop
cltd
push
and
pop
mov
mov
xchg
dec
lcall
push
aad
arpl
mov
repnz
inc
inc
bound
fldenv
sub
jbe
jp
jns
push
add
in
push
mov
mov
sub
loope
add
lock
sbb
inc
pop
rol
lods
ret
lret
enter
movsb
sbb
loope,pt
test
push
push
ret
jl
loop
ret
into
fidivl
push
ret
es
cmp
pop
out
xchg
repnz
aam
lea
mov
cmpsl
ds
rorb
xchg
jle
pop
mov
test
jle
in
sub
loopne
cmp
out
xchg
ljmp
mov
inc
push
sbb
int
dec
xor
pushf
fisubs
mov
cs
adc
pop
cmp
movsl
aaa
mov
sub
xor
jnp
jnp
push
fidivl
inc
push
pop
pop
and
or
lods
aam
mov
lods
fstpl
or
xor
dec
pusha
adcb
adcb
add
test
mov
mov
movsb
outsl
aas
call
cs
push
movsb
cli
rcr
test
xchg
dec
sbb
jns
and
and
popf
dec
fisubrs
lods
and
sbb
hlt
jmp
mov
leave
iret
andl
cmp
and
lds
icebp
xor
pop
adc
cmp
cmpsb
xchg
pop
mov
mov
xor
inc
fbstp
sub
rcl
inc
push
cmp
sbb
jmp
popa
adc
pusha
into
call
je
mov
lcall
sbb
fmul
mov
mov
sub
out
mov
lds
xchg
mov
std
scas
cli
in
xchg
add
mov
mov
push
fsts
pop
mov
mull
vmovdqu
pop
je
lods
sbb
scas
out
jbe
mov
in
jo
jecxz
lds
ret
adc
test
push
lahf
inc
xor
nop
lods
inc
cmpsl
daa
xlat
cmp
aas
mov
push
cli
mov
out
or
mov
mov
sbb
pop
pop
mov
mov
addr16
adc
mov
test
sahf
ja
cs
lret
inc
hlt
lock
xor
insl
cmp
sub
data16
or
mov
add
mov
inc
sub
mov
add
cmp
or
imul
aas
data16
mov
outsb
cs
sub
xchg
sbb
js
movsl
cmp
rcrl
leave
cmp
sub
xor
aaa
jge
and
push
dec
inc
xchg
mov
jo
cmp
mov
bound
sarl
inc
idivl
in
inc
jge
mov
imul
fnstcw
in
jb
ret
movsb
stos
rorl
cmc
push
jns
imul
scas
dec
int3
leave
popa
int3
sub
mov
ljmp
ss
cli
sub
aas
cmpsb
js
cmp
jg
sub
iret
fcompl
clc
push
jecxz
sub
lahf
inc
jae
arpl
or
lcall
fwait
ret
insl
sub
stos
mov
std
lahf
je
fstpl
sbb
jae
in
in
sub
std
pop
xor
sbb
dec
sbb
repnz
aaa
inc
outsl
rorb
lock
pop
test
movl
pop
xchg
ret
pusha
in
mov
in
in
xor
or
xor
push
mov
cmp
add
mov
flds
pop
aas
sti
xchg
xchg
fsubp
jns
inc
and
stc
xor
inc
cmp
imul
xor
rolb
lcall
loope
push
and
mov
push
push
fnstsw
push
sub
sbb
out
bnd
adc
jle
mov
aam
add
mov
movsl
pop
in
lods
lahf
xchg
jb
lea
inc
mov
js
push
adc
pop
repz
aad
xchg
push
imul
dec
fidivrl
andl
cltd
aaa
add
mov
outsb
mov
call
pop
sbb
sub
cmp
shrl
adc
xor
jbe
rcr
cmc
cmp
jns
push
sbb
testb
pop
imul
push
andb
xlat
addr16
outsb
pop
in
pushf
mov
lock
dec
out
jp
cmp
lahf
add
subb
pop
mov
mov
or
pop
sub
jecxz
cmp
fistpll
ss
scas
or
mov
add
or
push
inc
out
mov
aas
lret
xor
xlat
ret
lcall
mov
rcrl
mov
mov
mov
call
and
inc
push
adc
mov
xor
mov
add
sub
sti
xchg
lea
add
mov
xor
sub
cmpsb
push
pop
nop
pop
test
mov
daa
imul
out
icebp
daa
jl
call
js
mov
pop
dec
and
pop
dec
sbb
push
mov
xor
lea
cmp
les
jge
cmp
jecxz
mov
lcall
mov
scas
pop
mov
mov
dec
or
mov
sbb
pop
lea
or
push
cmpsb
adc
cltd
inc
std
jle
mov
inc
mov
int
ss
ret
int
daa
iret
and
mov
cltd
dec
cmp
std
cmpsl
fcmovu
cltd
and
rcr
mov
in
mov
ficompl
aam
icebp
dec
mov
sub
dec
adc
test
cmpsb
xchg
movsl
outsb
fisubs
aas
and
pop
int
push
push
std
adc
ret
mov
hlt
stc
scas
jle
stc
push
daa
xor
jbe
nop
xor
fbstp
add
call
push
je
into
repnz
push
ret
stc
xor
clc
in
inc
sbb
lcall
inc
xchg
inc
and
std
test
cmpsb
pop
xchg
clc
jle
push
add
ss
sahf
int3
pop
sbb
mov
sub
add
imul
inc
sub
add
subb
sarb
xchg
rol
lcall
mov
mov
lcall
mov
fucomp
xor
fisubrl
and
dec
movsb
dec
test
idivb
push
push
add
push
push
jne
push
rclb
inc
lahf
aas
mov
dec
xor
leave
mov
fcmovbe
pop
in
shl
rol
lods
and
push
arpl
lcall
mov
mov
fimull
adc
movsl
inc
movsw
pop
in
pop
push
mov
jmp
mov
es
xchg
sub
mov
inc
int3
in
popa
mov
call
popf
stc
lds
jne
add
outsb
mov
test
inc
xor
idiv
enter
leave
jo
outsb
fisttpl
adcb
push
enter
pop
les
pop
or
or
dec
fyl2xp1
outsb
es
repnz
popf
stos
pop
sub
lahf
test
jo
outsl
mov
dec
negb
in
mov
add
inc
cmp
ja
mov
adc
add
in
fdivrs
mov
ss
lock
fidivrs
xor
repnz
scas
loop
into
pop
movsw
popf
push
jnp
fdivl
inc
fpatan
pop
push
sbb
rcll
inc
adc
push
into
imul
shll
lods
ljmp
xlat
inc
shlb
movsb
pop
sub
orb
jmp
push
clc
pop
and
loope
fists
roll
xor
sub
xchg
in
nop
cmpsb
lods
sbb
push
inc
xchg
sub
mov
fidivrs
pop
mov
and
aas
pop
mov
jne
adc
scas
sbb
cmovp
sub
pop
shlb
xchg
jl
pusha
sbb
jae
mov
out
test
inc
scas
add
imul
int3
mov
adc
jbe
sbb
mov
out
lcall
or
jns
pop
sbb
push
or
rcl
jecxz
sub
cltd
mov
movsb
aam
push
sbb
mov
xchg
testb
fidivs
mov
movsl
test
mov
sahf
jecxz
push
mov
xor
add
in
clc
mov
mov
in
loop
and
pusha
jg
mov
xchg
sub
das
insl
jae
loop
int3
mov
loop
mov
lret
pop
fbstp
push
lcall
sub
inc
mov
iret
inc
push
cmc
fimull
xchg
fwait
bound
jp
rcll
outsb
dec
xchg
pop
push
sub
in
insb
cmc
icebp
jl
jecxz
icebp
mov
xor
pop
sbb
loop
sub
add
rcrb
add
mov
jg
push
fdiv
test
stos
xchg
mov
les
test
out
testb
ret
push
in
stos
testl
pop
int3
fcomip
pusha
adc
xlat
inc
cmc
fildl
std
dec
and
je
lods
xchg
jmp
jecxz
aam
cmp
xchg
mov
mov
stos
sbb
sbb
fistpll
cmc
mov
data16
cwtl
push
mov
inc
jno
inc
mov
test
or
and
push
adc
arpl
xchg
cmpsl
xchg
movsl
cs
xorl
je
push
pop
sbb
test
fisubl
pop
or
jae
cmp
movsl
dec
jno
scas
jl
ret
movsb
sub
jle
mov
xor
or
add
sti
fbstp
adc
jne
or
pop
movsl
xchg
jl
rcrl
into
popa
push
insb
outsb
mov
jecxz
xchg
cli
mov
push
jns
and
clc
pushf
cmpsb
cmpsl
jb
testl
add
cmp
scas
pop
push
mov
pushf
dec
pop
andb
lea
xchg
pop
popf
in
cmp
arpl
adc
dec
xlat
and
dec
int
xor
out
mov
cwtl
popa
dec
out
cmp
mov
je
lock
push
xor
pusha
or
xor
inc
dec
aam
xor
lea
js
push
inc
and
mov
sub
xchg
pop
outsl
fwait
or
mov
pop
movsb
test
xchg
mov
int3
mov
ljmp
es
addr16
mov
ret
mov
add
mov
data16
xor
mov
pop
cld
int3
outsl
aas
xor
das
fadd
sbb
shll
or
add
out
jmp
sbb
xchg
mov
add
in
push
inc
mov
sbb
inc
movsl
incb
dec
out
pop
inc
sbb
mov
xchg
repz
into
cmpsb
cmp
jg
loope
cmp
mov
out
push
or
and
sub
pop
call
stos
xlat
push
es
push
insb
pop
sbb
ja
bound
out
push
movsb
jns
popa
xchg
lods
or
enter
push
jecxz
mov
jno
push
out
int
add
ds
jns
shl
andb
lods
mov
push
inc
mov
into
push
mov
popa
out
xor
pushl
addl
sub
enter
xor
and
subb
data16
mov
out
jae
out
jne
fistps
lret
xchg
or
jne
cwtl
cmp
shl
jb
lods
dec
call
repnz
mov
jo
pop
js
out
in
sbb
dec
loop
xlat
mov
repz
dec
xchg
insl
adc
aam
mov
jmp
lcall
xchg
inc
xchg
movsl
mov
call
jns
push
fldl
add
lea
mov
cltd
mov
rorl
fimuls
mov
aad
fildl
mov
iret
dec
loope
ret
cmpl
out
or
lret
iret
ljmp
je
sub
jne
loope
mov
cmc
mov
xchg
push
jmp
and
cmp
xor
sbb
mov
pop
adc
xchg
out
out
pushf
mov
fnstenv
and
adc
xchg
lds
in
int3
scas
push
fwait
repz
adc
xor
push
sub
sub
in
ds
fistl
adc
aam
mov
int
pop
test
xchg
test
add
and
mov
and
pop
mov
jecxz
push
xchg
pop
mov
pop
stos
push
fwait
add
mov
push
add
sub
jmp
adc
add
adc
mov
cld
inc
sahf
mov
push
pop
sbb
insb
lcall
jmp
mov
fidivl
incb
cltd
in
cs
inc
movsl
jno
enter
icebp
testl
sub
mov
pop
mov
aas
xchg
push
jge
or
fadds
or
ljmp
movsb
push
cmpsl
decb
shl
fdivrp
arpl
test
inc
add
test
pop
lock
cmpb
je
dec
ds
push
and
xchg
adc
nop
add
clc
les
daa
mov
stc
adc
mov
notrack
movsb
test
sbb
xchg
fwait
push
xchg
in
inc
add
inc
sub
mulb
fbstp
scas
pop
pusha
jb
push
mov
out
add
xchg
aaa
adc
jb
rorl
mov
and
add
inc
loop
dec
mov
ljmp
orl
enter
cmpsl
push
push
cmc
dec
xchg
aam
lahf
jg
lahf
cmpsb
mov
ret
jecxz
push
out
pop
xchg
addr16
pop
jg
jae
cs
outsl
xchg
and
inc
sbb
pushf
test
inc
int
jmp
out
adc
push
icebp
dec
movsb
adc
popa
inc
aaa
stos
bound
adc
add
inc
xchg
add
xor
ret
inc
and
push
mov
mov
lahf
push
mov
addr16
dec
mov
cmp
adc
rcl
hlt
hlt
outsb
cltd
lret
fdiv
sub
std
cs
loopne
nop
mov
jno
and
sarb
data16
cmp
mov
bound
lock
das
jge
ficompl
push
jnp
call
addb
popf
add
popf
negb
out
lock
xchg
in
insl
call
and
mov
sub
sbb
std
cmp
arpl
and
shlb
stc
cltd
inc
cmp
mov
jne
ja
mov
jne
adc
scas
stc
ret
test
lea
push
imul
adc
sub
stos
mov
xor
mov
sub
lret
fwait
mov
xchg
add
int
ret
add
mov
dec
dec
push
pop
adc
cli
and
ljmp
add
jo
and
pop
jo
cmp
lret
mov
fdecstp
stc
mov
mov
aam
sbb
pop
cmpsb
dec
pop
add
aad
sbb
adc
and
dec
cld
jmp
xor
inc
sarb
enter
pop
sti
loop
lret
aad
ljmp
sbb
ds
push
imul
mov
icebp
idiv
or
xorb
mov
xor
xor
scas
mov
add
inc
mov
in
xor
and
scas
pop
inc
cmp
sbb
xchg
rcr
push
xchg
repnz
filds
cmpsb
subl
adc
or
div
pop
add
mov
or
pop
cld
add
cmc
jl
shr
fistl
dec
daa
cmp
mov
cld
inc
cwtl
fcomp
mov
lret
pop
js
inc
xchg
es
or
cmp
or
dec
popa
imul
ror
jp
xor
dec
in
xor
mov
inc
xchg
test
pop
movsb
xchg
sbb
inc
push
rorl
inc
cmp
mov
in
xchg
std
sbb
pop
ds
fisubrs
pop
fs
out
pop
and
jno
aad
scas
std
jmp
negl
mov
sbb
test
jne
adc
stc
mov
adc
stc
jb
repz
ds
add
cmp
add
int3
sbb
enter
xor
jnp
adc
mov
test
inc
xor
out
or
notb
and
push
aaa
cmc
jo
sub
xchg
dec
pop
add
sbb
out
xchg
popw
sub
sbb
fildll
rcrl
mull
das
cmpsl
push
sbb
adc
out
shrb
lea
test
pop
sbb
push
adc
rolb
test
je
xchg
aas
test
adc
push
pop
js
lret
inc
pop
cmp
jnp
gs
pop
pop
fstl
lea
cmp
fmulp
pop
gs
dec
xchg
mov
rclb
jle
out
cmp
scas
jmp
pop
inc
or
and
lahf
sbb
fdivrl
stos
andb
dec
add
xor
pop
sti
xchg
pop
addl
mov
mov
cmp
faddp
fidivl
mov
lods
mov
sahf
dec
fcoml
das
xchg
movsl
imul
mov
adc
mov
dec
stos
dec
and
cwtl
mov
ror
push
jecxz
in
xor
dec
ret
fistps
push
xchg
or
fwait
xchg
imul
add
testb
lret
mov
adc
cmp
ja
sar
nopl
lret
test
adc
mov
testl
aam
mov
push
sbb
ret
push
add
pop
mov
je
inc
jno
out
mov
aad
pushf
mov
dec
fisttps
test
stos
push
inc
jle
hlt
outsb
add
aas
inc
lea
fsubrs
je
cmp
and
mov
std
cmp
cmp
xchg
lods
scas
int3
and
push
xchg
xchg
sub
pop
add
xchg
jns
push
add
jg
xorb
aam
stos
aaa
jle
scas
mov
sbb
sbbl
lods
cmpsl
mov
out
movsb
jno
leave
cmpb
sahf
jmp
ljmp
jge
pop
pop
movsb
or
cmp
gs
push
or
lods
sbb
test
cmpsb
xor
fs
mov
and
pop
imul
push
inc
pop
out
enter
pop
cmp
in
jecxz
pop
sbb
cmp
cmp
cs
mov
repnz
in
pusha
adc
in
test
sarl
sub
insl
push
xlat
negl
add
adc
je
push
std
into
mov
fisttpl
inc
sbb
lcall
flds
icebp
cli
sub
mov
ret
out
mov
bound
mov
aas
xor
pop
xchg
inc
add
ljmp
insb
cs
mov
xchg
data16
cs
xor
addr16
adc
divb
jg
jns
mov
lods
mov
sahf
popa
mov
push
sbb
push
dec
mov
fistpll
arpl
push
hlt
lds
push
imul
negl
add
hlt
out
dec
pop
dec
scas
ficoml
xchg
inc
inc
adc
mull
inc
cli
cmp
aam
loope
out
add
add
adc
js
divb
xchg
jmp
cmp
in
dec
ljmp
dec
repz
out
fisubs
dec
pop
jne
cli
xchg
mov
imul
into
popa
int
ja
test
push
outsb
and
and
sbb
add
or
jp
inc
and
mov
fdiv
inc
in
ss
push
int
inc
jne
push
lock
dec
imul
mov
cmpb
notb
fidivl
mov
ffreep
addb
clc
xchg
jbe
xor
sbb
cmp
test
aad
cmp
jne
stos
mov
loopne
aad
and
adcl
jae
out
and
and
push
dec
dec
and
fdivrs
sbb
fiadds
or
dec
cmp
jecxz
jmp
test
imul
mov
adc
jg
pop
xchg
xor
mov
ss
or
out
jae
and
fs
sbb
nop
cmpb
xchg
pop
mov
pop
int3
test
hlt
xor
push
clc
push
inc
xchg
loope
jge
mov
pusha
inc
mov
or
pop
fsqrt
inc
mov
or
adc
inc
leave
sub
pop
push
add
dec
fcoms
fs
cmp
ret
cltd
push
push
or
fsin
xor
sbb
in
sub
cmp
xor
loopne
pusha
testl
jge
out
dec
scas
scas
bound
xor
mov
fisttpll
cmp
cmp
aam
add
push
mov
out
aam
push
pop
mov
aad
aaa
gs
gs
int3
or
and
sbb
aas
jns
sub
push
imulb
pop
lock
fcmovb
enter
jl
ret
push
push
mov
mov
dec
sarl
pop
dec
cmp
mov
icebp
mov
test
xor
push
pop
loopne
ret
sub
mov
push
lea
dec
call
add
cmp
adc
mov
fists
xchg
xchg
sub
pop
aad
xchg
repz
ret
mov
mov
adc
pop
cmp
jno
movsb
fbstp
jle
fsts
jnp
lcall
push
mov
sbb
clc
mov
jl
jbe
jmp
es
jge
stos
adc
movsl
or
pushfw
lods
lods
into
adc
jg
mov
out
adcl
jmp
pop
outsl
inc
lods
lret
sub
mov
sbb
or
addr16
std
mov
mov
mov
fisttpl
out
or
adc
test
lahf
xor
add
mov
dec
enter
idivl
and
pop
lods
movsb
xor
lods
inc
add
dec
sbb
mov
lea
add
cmpsl
outsl
mov
sbb
fidivrl
pop
data16
push
push
jecxz
add
cli
sbb
in
call
or
xor
insb
xor
call
or
push
add
jbe
aas
add
pop
jge
inc
inc
mov
test
push
mov
lods
xchg
mov
dec
pop
je
je
adc
or
pop
ffree
cmp
cmpsl
push
adc
sub
scas
jl
xor
into
or
mov
or
mov
ret
inc
pop
leave
ret
in
mov
in
aam
cmpsb
mov
loope
mov
cmp
sub
fmull
push
sbb
sub
jmp
mov
and
push
jne
sahf
mov
mov
mov
pusha
outsb
insb
cmp
adc
sub
mov
pusha
lret
xchg
pop
bound
fidivrs
xor
jle
push
sub
out
mov
addr16
out
xchg
sti
jbe
dec
idivb
mov
push
cmp
mov
dec
pop
scas
stos
shll
popf
and
cltd
mov
mov
lahf
sub
xchg
test
xor
mov
adc
je
push
add
mov
mov
cmpsl
outsb
add
mov
dec
out
int
jl
lret
mov
fwait
stos
adc
sbb
aad
jnp
xor
push
ja
cs
loopne
jecxz
movsb
shlb
jne
ja
sbb
sbb
cmp
frstor
xchg
mov
test
xor
aaa
out
mov
shl
faddl
jns
push
pop
jecxz
xor
or
dec
push
in
addl
adc
sar
jae
outsl
mov
mov
bound
inc
mov
repnz
jecxz
cltd
mov
les
xchg
aam
adc
add
repz
insb
popf
scas
push
scas
inc
inc
les
andb
jg
inc
enter
xor
jle
lock
outsb
mov
out
jns
ficomps
pop
pop
faddp
sbb
cmp
mov
mov
enter
enter
nop
push
lea
icebp
scas
push
ret
aas
ss
cmp
dec
int3
clc
sub
in
cmp
shr
punpckhwd
or
lds
jg
sti
push
iret
iret
push
dec
pop
movsb
cmp
loope
push
leave
inc
cmp
mov
cvtps2pi
fcompp
dec
fldt
mov
in
mov
jns
incb
mov
pusha
shl
stos
dec
or
das
and
insb
xor
sub
mov
push
std
xchg
add
xor
cmp
das
je
stc
mov
ds
pop
and
aas
in
scas
sbb
add
push
pop
jnp
cwtl
cmp
or
xorb
inc
mov
popf
jle
jnp
xchg
mov
mov
sbb
fldl
dec
inc
ds
mov
dec
and
jb
arpl
or
test
push
in
dec
sbb
pop
push
rcr
aas
mov
aam
les
xor
bound
out
adc
int3
add
imul
repz
pop
shlb
adc
ret
push
mov
icebp
mov
ret
mov
jmp
pop
fs
int3
jp
fwait
into
xchg
nop
fcmovu
inc
pop
push
or
mov
ja
fildl
pop
jecxz
rolb
mov
add
pop
insl
outsl
outsl
add
aam
jnp
movsb
jecxz
ja
mov
or
dec
stos
cmp
and
andb
and
loope
test
dec
fmuls
or
push
add
sub
lea
mov
mov
jle
xor
mov
ja
add
adc
xor
and
jmp
cltd
sar
lock
movsb
xchg
dec
xor
daa
push
mov
mov
mov
js
sarb
les
jnp
push
jno
mov
or
lcall
fcomps
cmp
cmpb
jae
adc
cld
call
inc
movsb
pop
dec
rclb
dec
pushl
pop
push
pusha
push
dec
shlb
jmp
inc
xchg
test
repnz
push
aam
imul
or
mov
addr16
scas
ss
pop
mov
fwait
cmc
lods
pop
in
jmp
scas
es
and
mov
jmp
aas
mov
stos
xchg
dec
push
dec
inc
pusha
pop
sbb
add
mov
cs
lahf
jmp
adc
call
jo
loopne
pusha
loopne
sarb
push
jno
or
test
inc
into
adc
jno
stos
incl
cld
mov
jge
aam
sub
fcmovne
mov
push
jmp
out
iret
movsl
imul
adc
sbbb
add
pop
mov
push
and
adc
arpl
push
arpl
es
push
inc
nop
test
and
jmp
jne
mov
cli
pop
dec
adc
push
jle
mov
xchg
jecxz
xchg
inc
push
in
popf
mov
popa
cltd
and
mov
popa
jle
iret
negl
cmp
mov
jg
xor
test
cmp
and
fadds
mov
push
scas
xchg
xchg
scas
insb
dec
nop
ljmp
push
jo
mov
mov
shll
mov
enter
dec
testb
aaa
cwtl
cs
movb
push
mov
incl
xchg
dec
out
mov
popa
xor
sbb
loope
sub
adc
imul
sbb
insl
xchg
sub
stc
lret
in
pop
je
sub
fidivrl
icebp
cmp
cmp
adc
inc
call
pop
mov
mov
ret
mov
scas
ja
ss
sub
mov
mov
mov
xchg
mov
in
popf
and
es
popf
cmp
dec
push
mov
cwtl
add
in
aam
loope
or
cmp
mov
jmp
sbb
hlt
adc
dec
rclb
test
movsl
cmpsl
hlt
test
inc
pop
cmpsb
arpl
cmp
loopne
push
mov
idivb
mov
mov
xor
test
es
mov
sub
and
xor
sbb
pushf
mov
xchg
or
inc
int3
and
rorl
mov
xor
xchg
mov
xchg
mov
or
jb
fnstcw
push
xchg
cmp
jg
or
inc
imul
mov
cmc
aam
add
movsb
cld
push
and
xor
jmp
out
xorb
sub
push
fnsave
imul
bound
insb
movsl
mov
cmp
shlb
cmp
mov
add
jg
gs
shrb
scas
add
loopne
stos
cli
into
mov
mov
inc
mov
scas
fistpll
dec
sbb
loopne
test
pop
inc
inc
mov
mov
fdivs
cwtl
inc
xchg
inc
add
sub
xor
adc
xchg
test
xlat
mov
test
out
fstps
jp
cmp
cs
movsb
scas
pop
nop
mov
push
jb
fidivl
mov
push
mov
insb
jg
imul
test
and
xor
je
fcomps
out
sub
push
cmpb
fst
jne
xchg
push
add
mov
add
mov
jmp
mov
mov
roll
ret
lods
shll
outsb
lea
imul
es
xchg
je
sub
repnz
enter
shl
sbb
cmc
push
jmp
sub
push
test
sbb
add
jg
cmpsl
cmc
push
pop
jecxz
out
into
mov
jge
xchg
pop
jns
stos
sub
ljmp
add
mov
dec
clc
inc
dec
ss
xor
xor
jecxz
lahf
mov
jno
das
pop
mov
jae
scas
and
mov
pop
cmp
add
jp
adc
xorb
xchg
inc
or
js
dec
lock
mov
iret
xor
or
je
xor
test
add
mov
es
movb
xchg
daa
rcl
rdtsc
scas
xor
out
xor
jmp
stc
in
add
xor
sub
add
cmp
ret
std
mov
adc
mov
dec
out
gs
adc
mov
pop
sbb
popa
roll
popa
je
ja
fldenv
cmp
mov
repnz
mov
mov
int3
cli
shlb
ljmp
cmpsl
lret
dec
pop
cli
xchg
sti
jecxz
pushf
push
cmp
cmp
sarb
jno
jnp
inc
sti
int
sub
and
jle
jae
and
popa
lret
insl
cld
shrl
pop
push
je
pop
mov
popf
pop
mov
sahf
decb
sbb
fstpt
ret
dec
fistps
gs
bnd
movsb
nop
sub
outsb
divl
jg
xchg
or
sbb
adc
mov
mov
hlt
inc
mov
rcl
rcrb
repz
test
dec
mov
sbb
arpl
and
inc
aad
rorl
gs
sub
and
sub
dec
mov
or
pop
loopne
scas
xchg
lea
sub
pop
loope
sbb
cmp
xchg
sub
push
idiv
pop
mov
arpl
test
ljmp
jns
push
jle
aad
jmp
filds
je
sbb
sbb
data16
adc
outsb
sahf
ljmp
pop
lret
rcl
adc
shlb
push
lods
sbb
ljmp
add
cwtl
mov
icebp
int3
and
data16
loopne
pop
lahf
ss
xor
xchg
adc
ds
lahf
shlb
sti
sbb
xor
insb
cmp
pop
xchg
mov
sbb
or
in
mov
inc
or
lret
dec
add
sub
pop
or
pop
fucom
dec
popf
dec
setg
add
iret
lret
dec
xchg
mov
mov
add
jmp
popf
adc
fsts
adc
push
or
cld
jecxz
inc
jno
sub
jmp
mov
daa
inc
inc
cmp
jb
clc
das
mov
push
dec
cmpl
andl
jo
xchg
jp
shl
xorl
jmp
sub
call
test
fs
adc
ljmp
movsb
push
movsl
and
fisttps
mov
insl
jnp
jp
loopne
sub
jbe
inc
sti
repnz
or
jecxz
ja
pop
xor
mov
scas
nop
mov
sbb
scas
or
sub
fiadds
mov
in
jo
ret
xor
and
insb
test
aaa
lret
inc
aas
cmp
jmp
or
es
stos
jns
lret
adcb
aam
popf
cwtl
std
adc
mov
int3
dec
and
dec
shrl
cmpsl
es
sbb
mov
mov
mov
pop
in
mov
lods
out
es
ds
lret
lods
sub
cmp
jle
sub
insb
test
xchg
sbb
mov
rorb
scas
jae
ja
sub
incb
repz
add
or
repnz
and
mov
push
lds
repz
mov
sti
cmp
inc
pop
sbb
divps
fiadds
es
add
fimull
xchg
sbb
lcall
std
sahf
or
and
insb
mov
cltd
adc
das
mov
sar
test
aas
sarl
aaa
insb
mov
add
add
and
scas
jp
jno
xchg
ret
sbb
inc
lcall
loope
arpl
imul
repnz
out
stc
mov
stc
scas
sub
shrb
inc
rorl
or
stos
cmc
jge
imul
int
mov
shlb
sbb
jg
push
adc
jmp
pop
dec
and
outsb
xlat
pop
aas
sbb
dec
push
outsl
or
xor
push
cli
add
add
xor
sarl
stos
daa
lods
pop
jno
push
inc
mov
scas
mov
xor
and
xchg
lods
or
imul
fstpl
ror
or
dec
adc
add
mov
jg
jns
cmp
outsl
jne
xor
sub
inc
sub
sbb
add
imul
aad
nop
add
add
nop
rcr
in
push
jae
roll
in
fstpl
inc
jl
lods
movsl
sbb
addr16
cmp
or
inc
lret
mov
fsts
loope
mov
push
mov
inc
add
fcmovbe
add
fwait
mov
push
daa
add
jmp
sbb
loop
in
mov
fs
cmp
xchg
mov
loope
ljmp
cwtl
test
icebp
sbb
test
dec
xor
xchg
insb
ret
shl
jbe
call
rol
mov
loope
adc
xlat
add
mov
outsb
ljmp
jg
pop
ret
pop
add
pop
shlb
test
outsl
popf
sub
in
aam
adc
jp
xchg
or
sbb
mov
sub
imul
xor
orb
sbb
or
pop
cli
cwtl
and
cmp
std
inc
push
xorb
shlb
xchg
ljmp
mov
fiaddl
mov
xor
xchg
sub
and
rcr
pop
jnp
lahf
mov
push
or
sub
shlb
in
jns
mov
out
aaa
cwtl
insb
repnz
gs
adc
inc
push
pop
jecxz
mov
xchg
je
jl
test
mov
dec
pop
inc
pop
les
add
pushf
xchg
sti
lret
daa
push
fisttps
sbb
cltd
test
das
sub
and
aad
jecxz
jns
push
inc
push
pop
mov
cli
jb
fcomps
or
pusha
imulb
xlat
int
daa
xchg
xor
pusha
xchg
add
and
lret
mov
pop
in
push
adc
test
sbb
jne
rcr
sti
imul
fwait
mov
sbb
cmp
and
std
add
mov
aaa
mov
xor
loop
xchg
xchg
add
not
mov
mov
push
lds
sub
jg
sbb
fildll
jbe
and
mov
lret
mov
cmpsl
xor
push
sarl
mov
jnp
in
bound
test
in
mov
ret
add
cmc
rcrb
rolb
push
pop
es
push
cld
dec
push
lds
xchg
cmpsl
push
xchg
jl
cmp
push
insl
rorl
xchg
mov
mov
or
push
fmulp
inc
nop
adc
mov
int3
outsb
int3
adcb
cmpsl
pop
xchg
sub
loop
stos
and
push
xchg
jl
xchg
mov
add
leave
mov
xchg
mov
iret
mov
clc
xor
push
movsb
push
movsb
lods
movsb
and
ret
pop
dec
dec
xchg
mov
mov
adc
xor
inc
mov
sbb
or
push
sbb
popa
cmp
sbbb
dec
dec
ret
push
mov
mov
jno
fistl
mov
jl
add
xchg
sbbb
sti
rolb
out
jnp
xor
ficoml
repz
mov
inc
and
and
in
repz
pop
sub
aam
mov
outsb
in
add
mov
call
jb
sbb
cmp
mov
lods
pop
adc
loop
rcll
dec
pop
push
les
pop
and
std
movb
loop
dec
pop
popf
xchg
aaa
hlt
cmpb
jmp
and
sbb
lret
out
jb
mov
inc
adc
jg
loop
pop
mov
push
iret
pop
orb
lret
ja
dec
movups
out
fidivrl
add
sar
pop
in
xchg
hlt
mov
mov
mov
pop
arpl
ss
aam
mov
imul
mov
pusha
fcmovnu
outsb
dec
jbe
push
jmp
cmp
and
mov
imul
ljmp
inc
sub
xchg
aas
inc
xchg
cmpsb
icebp
divl
sub
fisttpll
jo
jne
or
xchg
mov
xor
repz
mov
sub
repnz
inc
cmp
adc
incb
hlt
popw
arpl
in
stos
movsl
outsb
or
js
fwait
sub
ds
dec
leave
outsl
mov
mov
inc
js
in
push
out
xchg
pop
xchg
add
cmpsl
mov
or
jg
in
ja
dec
add
cmpsl
mov
dec
and
pop
loopne
addr16
into
cmpsl
pop
movsb
idivb
jmp
out
jae
pusha
adc
adc
xor
mov
adc
and
sarb
out
movsb
sar
push
fucomp
orl
xchg
out
push
xor
dec
nop
frstor
in
daa
call
jnp
sbb
lds
inc
push
sub
sbb
notl
rcpps
dec
sti
shrl
xchg
push
push
outsl
das
icebp
jnp
dec
xor
mov
clc
xor
aaa
jnp
jecxz
scas
inc
or
or
xlat
add
movsl
sbb
cli
std
ficoml
in
ss
js
cmc
clc
inc
inc
es
sbb
push
mov
mov
push
inc
lds
xchg
and
mov
pop
and
inc
xchg
in
cmp
xchg
add
lea
adc
adc
mov
shll
aas
insb
cld
fsubl
push
jnp
xor
outsl
ret
ljmp
andb
iret
mov
test
cld
push
jnp
js
mov
inc
dec
mov
xchg
and
icebp
xchg
dec
lods
pop
aad
scas
insl
inc
int
arpl
pop
mov
mov
mov
xor
pushf
mov
sub
pushf
sub
rcrl
fbstp
outsb
mov
sbb
and
xor
push
pop
push
cmp
adc
sti
jne
and
jno
test
xchg
mov
xlat
add
mov
or
fcmovb
cmp
pop
clc
xor
cmpsl
inc
mov
push
into
imul
jmp
xchg
fcmovb
imul
cmp
int3
pop
push
out
mov
call
add
lcall
adc
adc
adc
divl
push
sbb
push
shr
inc
lods
and
insl
loopne
dec
ss
mov
jae
jp
and
in
movsl
adc
xchg
frstor
test
imul
sbb
scas
push
and
cmpsl
ret
out
sub
jbe
enter
fsubp
sbbl
ret
xor
and
push
or
mov
xor
out
add
lods
scas
add
popf
cmp
adc
jle
push
mov
mov
jecxz
xchg
lcall
xchg
jle
xchg
loope
xchg
xchg
jge
lds
fwait
je
dec
sarb
es
inc
aad
mov
and
adc
sbb
mov
fistpll
and
sub
stc
push
das
mov
int3
js
aad
mov
or
shrl
sub
push
dec
fcoml
mov
rorl
addl
pop
incb
jb
stc
pop
insb
sub
or
jl
aas
add
cld
jne
sub
pop
movsb
push
out
sub
mov
negl
xchg
call
push
pop
add
mov
inc
fwait
dec
outsl
mov
int
lds
push
test
jno
sub
scas
cmp
dec
sub
lret
sbbb
cmp
fisubl
je
out
andl
lds
das
xchg
sbb
out
sbb
lods
sbb
enter
popa
sti
or
shll
xor
scas
pop
xchg
inc
push
add
pop
mov
inc
jno
and
int
ja
push
sbb
sub
cli
loop
aam
and
cmp
mov
addr16
rcll
jecxz
jle
punpckhwd
sahf
adc
and
mov
fiadds
jno
ss
cmp
mov
sbb
lret
xchg
idivb
mov
dec
stos
aas
lods
sub
adc
and
gs
gs
fistpl
pop
insl
mov
push
push
rorl
jecxz
sbb
imul
int
clc
popa
pop
push
adc
and
shll
enter
sbbb
insl
bound
popw
mov
jge
dec
pusha
dec
cmpsl
inc
cmp
in
mov
fists
mov
xor
mov
test
pop
dec
mov
adc
or
test
add
jg
cli
in
fstps
int3
jnp
cmc
push
clc
ljmp
xchg
negl
cmpsl
ds
and
push
pop
ss
jo
div
popa
outsb
lea
dec
mov
ret
pop
mov
fbstp
ret
pop
add
jecxz
sbb
sbb
xorl
inc
or
inc
imul
jmp
das
ss
cld
mov
test
imul
fwait
inc
loopne
pop
into
cltd
lds
xchg
sub
xlat
inc
jne
bound
fucomi
adc
adc
and
pop
stc
jge
add
sub
js
jns
xor
lahf
xchg
push
jle
and
or
xor
ret
sub
xor
sbb
test
pop
mov
push
mov
fidivs
dec
xor
xchg
adc
pop
mov
mov
rcl
adc
ss
mov
dec
xor
notl
movsb
cmpsb
andl
and
mov
scas
sub
adc
jns
jne
cmp
aam
lcall
outsb
sbb
jmp
pop
or
xchg
inc
jns
in
push
jmp
sahf
or
pushf
sbb
jecxz
push
in
repz
cs
or
negb
test
fnstenv
dec
int3
lcall
or
ret
mov
mov
adc
test
movl
or
push
inc
mov
adc
repz
mov
inc
push
imul
sarb
inc
mov
xchg
mov
mov
pop
xchg
pushl
in
xrelease
mov
adc
jae
insl
fistpll
mov
imul
cmp
ja
jb
mov
clc
cmp
rolb
test
or
outsb
adc
pop
icebp
cltd
cld
enter
cmpb
dec
mov
xor
jne
mov
push
mov
adc
hlt
jg
jne,pn
aam
sbb
sbb
icebp
orb
pop
xchg
test
ficoms
mov
in
push
loopne
inc
sub
pushf
jecxz
test
insl
cld
add
aad
aad
jo
mov
fldl
test
or
ret
add
sbbb
sbb
ret
jge
test
or
cltd
cmpsl
and
fists
mov
icebp
out
jp
fsubrs
fwait
cmp
jae
xor
inc
out
jmp
ficompl
ja
repnz
or
cli
xor
and
cmp
push
add
mov
int
fucomi
adc
bound
xchg
push
jns
scas
mov
dec
movsb
scas
outsl
xor
rorb
and
movsb
hlt
mov
pop
mov
jnp
jp
into
xorb
mov
scas
adc
fmuls
aaa
mov
adcb
lahf
les
pop
dec
dec
fldcw
test
push
push
jae
adc
into
incb
movzbl
mov
xor
call
loop
hlt
cmc
int3
aam
loopne
sub
push
xchg
in
push
sti
adc
popf
adc
adc
xchg
inc
test
add
dec
push
pushf
cmpsl
dec
jl
push
fmul
cmc
jo
call
add
pop
ret
mov
cmc
idivl
aam
je
jne
psrlw
fcoml
movsl
add
xchg
repnz
lcall
xor
mov
xchg
cmp
xor
or
sub
in
or
sbb
xchg
mov
mov
insl
push
xchg
and
xchg
sbb
pop
insl
pop
add
inc
fdivp
inc
pop
mov
mov
cmp
jle
inc
mov
out
fcomp
and
movsl
sbb
mov
xchg
xchg
test
sbb
mov
ljmp
fwait
or
mov
dec
sbb
fwait
movsb
shll
add
das
pop
jno
enter
fmuls
cmc
clc
lcall
add
add
and
sbbl
repnz
jnp
rcll
dec
ds
cmpsl
jp
mov
mov
xchg
jns
das
or
xchg
adc
inc
loopne
stc
or
adc
int3
xchg
scas
les
push
leave
fmull
lcall
xchg
mov
pop
push
test
imul
fcmovnu
jbe
push
push
adc
mov
aam
sarl
fisubrs
pop
push
popa
scas
or
xchg
xchg
fidivrl
xchg
ja
jno
sbbl
add
mov
pushl
out
mov
fucomi
and
jle
push
pop
xchg
adc
aad
sbb
jge
xor
push
jb
fwait
loopne
inc
pop
cld
pop
clc
loopne
push
push
testb
add
or
push
sub
stc
push
dec
lret
pop
sbb
jns
sub
mov
mov
js
mov
sub
push
pop
aas
adc
test
sub
add
inc
mov
lock
jne
lea
iret
jno
fiadds
cmpsl
push
out
or
add
hlt
fdivl
add
push
out
cmc
cld
push
adc
lock
xor
mov
push
jge
std
shl
sub
dec
aaa
popf
inc
loopnew
add
cmpl
push
pop
test
les
aaa
clc
mov
call
mov
imul
std
jmp
add
lcall
or
dec
push
call
mov
fidivl
in
stos
std
mov
xchg
incb
mov
pop
dec
mov
in
cmp
lret
lahf
das
rcrb
cmp
std
push
cmp
mov
ja
jnp
insb
adc
in
push
jbe
lea
faddl
and
inc
out
sahf
fwait
mov
sub
sub
out
xchg
dec
adc
mov
pushf
inc
test
or
scas
jnp
xchg
inc
sub
out
iret
call
ljmp
shrb
push
dec
dec
arpl
fnstsw
cld
jbe
or
and
sbb
ja
lret
xor
and
adc
cmpsl
push
ret
fistps
iret
mov
cmp
push
push
les
push
scas
pop
mov
stos
mov
mov
leave
pop
inc
jae
mov
pop
add
rcll
movsl
adc
jl
call
fmulp
mov
dec
mov
jns
lar
push
add
inc
jae
mov
imul
adc
jbe
add
movsb
pop
das
cmp
pop
adc
es
cs
popf
push
sbb
and
in
dec
cmp
insb
mov
int
xor
int3
adc
fdivrs
rcrb
dec
cmp
sub
in
int
xor
hlt
std
int
int3
mov
clc
cmpsl
jbe
inc
pop
dec
push
fwait
push
mov
js
cmc
in
inc
cmp
mov
jnp
push
ds
inc
bound
xor
mov
mov
jnp
stos
insl
iret
daa
or
int
testl
add
jo
fmull
in
loope
mov
or
xchg
ret
data16
xor
sub
jg
hlt
aaa
xchg
mov
imul
loope
mov
repnz
out
fistl
popf
jne
jge
out
sbb
es
push
inc
sub
jge
sbb
or
mov
jb
lahf
test
sub
mov
jle
inc
lds
std
lret
push
ss
and
sarb
push
or
std
xlat
mov
std
das
xchg
xor
sbb
lret
jp
shlb
and
cmpsb
fsub
test
jg
fcmovnu
adc
ret
fmuls
inc
jns
rorb
or
roll
mov
xchg
cmpsl
jecxz
mov
inc
sub
lods
out
jo
mov
sti
repz
pop
ror
aaa
pusha
sbb
gs
mov
repz
aad
je
es
gs
fadds
pushf
stc
add
jl
mov
jmp
sub
mov
push
imul
es
mov
or
and
sahf
mov
call
es
pop
in
mov
xorb
ret
mov
scas
jp
sub
hlt
arpl
je
sub
xchg
faddl
push
and
fstpt
mov
dec
shl
mov
into
and
sbb
popa
mov
cmp
pop
xchg
xchg
push
cmp
iret
pushf
repz
or
nop
xchg
fs
clc
cs
inc
lods
and
das
les
outsb
gs
mov
fsubs
fcoms
pop
movsb
and
testl
fistpl
gs
sbb
jl
and
addb
jo
or
lahf
and
inc
fists
out
cmp
nop
outsl
test
mov
ret
mov
push
xor
pusha
mov
or
fcmovnb
movsl
lods
xor
lods
and
sub
in
and
out
testl
adc
gs
fwait
jg
jl
stos
mov
scas
insb
xchg
test
sahf
xchg
sbb
sbb
add
mov
jno
fsubrp
xchg
data16
xchg
pop
rol
and
xchg
outsb
mov
insb
and
cwtl
hlt
loop
and
fisubrs
stc
dec
shrl
sahf
lea
push
jp
xchg
mov
push
inc
movsb
sbb
in
mov
pop
stos
dec
jnp
fidivs
outsb
fwait
adc
add
in
test
jl
pop
sahf
mulb
inc
mov
stos
movsl
jns
pop
inc
mov
or
bound
imul
cli
and
push
and
repnz
push
push
sub
lcall
rep
hlt
xchg
fsubr
push
sub
lea
scas
cmp
test
arpl
jge
dec
push
pop
fs
sub
dec
xor
inc
jp
mov
pop
xor
mov
add
inc
jnp
nop
cmpsl
mov
adc
xor
repz
add
dec
out
fwait
mov
psubsb
sbb
pushf
jp
adc
sub
test
sbb
push
cmp
test
jl
jge
cltd
jmp
push
cltd
and
notl
repz
push
mov
icebp
mov
mov
lret
and
insl
cs
cwtl
aam
push
arpl
jo
and
jl
sub
sub
xchg
arpl
arpl
inc
jmp
sbb
lcall
pop
mov
cmc
jl
ret
jp
sub
mov
inc
orb
int3
pusha
adc
pop
les
inc
cmp
lret
pop
xor
sub
or
sbb
xchg
push
lahf
imul
push
ficompl
and
sbb
jb
neg
daa
je
mov
mov
jmp
jae
mov
insl
bound
and
mov
aad
clc
je
sub
testb
adc
sbb
scas
add
adc
sub
cs
subb
mov
loopne
clc
dec
push
or
push
jno
or
adcb
add
cli
roll
inc
leave
and
jecxz
or
mov
sub
lcall
cmpsl
ret
cmp
int
sbb
fnsave
ljmp
and
rcll
andb
mov
clc
inc
xchg
push
sbb
pop
jns
cld
inc
mov
mov
outsb
in
mov
inc
das
lret
in
xor
fstpl
pop
add
jle
addr16
mov
outsl
push
inc
inc
mov
call
mov
jge
add
repz
negb
inc
fprem1
aaa
cs
shll
ss
xor
test
mov
sbb
mov
sahf
shlb
popa
rorb
mov
sub
add
xlat
xchg
mov
push
int3
push
xor
adc
mov
inc
add
adc
mov
xchg
mov
add
sbb
and
cmc
mov
popf
cmp
xor
or
push
inc
jl
dec
or
jne
je
lret
jmp
into
mov
ja
ds
insb
mov
imul
stos
jmp
test
xor
push
lret
std
jmp
in
push
pop
mov
ficoms
jmp
add
mov
or
fidivl
std
enter
pextrw
nop
aaa
je
mov
std
mov
mov
subb
loope
xchg
jmp
or
decb
outsl
cs
sbb
andl
jg
adc
lcall
rclb
xlat
sub
js
nop
stos
and
test
lahf
movsl
loop
repnz
shrl
loopne
pop
jo
mov
pop
or
shl
dec
mov
fwait
add
les
xchg
and
les
scas
cmp
or
mov
lea
sbbl
mov
js
jg
and
lea
aaa
push
cmc
cmp
push
jle
das
or
iret
es
mov
fcoms
dec
bound
sub
fwait
pop
fistps
bnd
lock
jg
aas
pop
sbb
jo
flds
addb
bound
cli
xorl
js
sub
clc
adc
cmp
out
sub
xor
pop
out
add
fidivs
leave
daa
push
stos
fstpt
leave
call
mov
xchg
push
mov
in
jmp
adc
pop
lods
sti
xor
add
jnp
lret
test
daa
xlat
bound
dec
imul
dec
mov
int3
lds
jge
pop
sbb
test
pop
std
stos
inc
in
add
ja
push
or
and
in
bound
aam
pushf
push
inc
jmp
shlb
dec
popa
incb
in
sbb
dec
das
rcl
and
sub
test
rcrl
jle
fwait
and
mov
dec
xchg
les
in
or
dec
aas
icebp
mov
fdiv
cmpsb
ss
adc
and
pmaxub
push
outsl
lahf
les
xchg
add
inc
xchg
es
in
out
test
lock
cmc
mov
xor
and
pop
lods
adc
stos
mov
pushf
decb
imul
jno
jg
inc
push
loopne
lret
ds
aam
mov
mov
loopne
cmp
dec
cmc
lock
jp
sub
jg
mov
ret
or
divl
mov
sub
jmp
mov
sti
cmp
ficompl
fst
fldenv
loopne
aas
lret
rol
mov
push
xchg
or
leave
loope
adc
cmp
aam
call
push
scas
outsb
out
loop
dec
mov
lods
aaa
clc
mov
shrb
data16
pop
cmp
fdivs
sub
and
mov
lahf
rcrb
or
mov
test
std
push
and
mov
lock
mov
fildll
and
dec
and
jns
stos
mov
movsb
ljmp
push
pop
icebp
cmp
in
out
insl
aas
xchg
loop
push
fldcw
pop
mov
cmp
out
das
inc
ss
loope
push
test
adc
xor
or
sbb
push
sbb
cmc
rcll
jp
pop
into
test
mov
lods
in
adc
adc
enter
push
gs
xor
jecxz
sub
sbb
xor
dec
faddl
push
sbb
fimuls
jp
insl
adc
jge
lock
fidivrl
rcrl
and
arpl
ljmp
mov
adc
mov
pop
inc
arpl
and
or
mov
sub
inc
push
adc
daa
arpl
out
xchg
xor
jbe
sarl
sbb
cmp
aad
inc
movl
shll
insb
stc
sub
fwait
adc
out
rcll
or
mov
cli
insl
cmp
mov
pop
jno
inc
lcall
testl
cmpsb
xchg
lds
xadd
lahf
cwtl
jo
pop
orb
sbb
xor
mov
lret
fdivr
and
xor
lahf
out
dec
mov
cld
outsl
loopew
hlt
xchg
xlat
dec
stos
int
fsubs
mov
sub
mov
cmc
stc
aad
addr16
aad
das
mov
xchg
lock
pop
mov
push
dec
test
dec
hlt
cmp
pop
bound
mov
and
cmpsl
mov
push
mov
rcrl
xor
xchg
jl
pushf
and
stos
jae
sbb
inc
sbb
rep
jg
pop
jo
cs
ficomps
out
idivb
pop
js
in
rcrl
fdivrp
push
cmc
iret
sub
mov
mov
ret
xor
das
xor
into
sub
mov
pop
dec
mov
mov
js
mov
inc
daa
push
sahf
or
arpl
pop
enter
call
fs
push
xchg
mov
scas
push
mov
call
or
lret
mulb
movsl
fisttpl
pop
sbb
insb
sbb
outsb
mov
lcall
ds
ret
mov
pushf
xchg
mov
int
dec
xchg
xor
das
fidivrs
sbb
icebp
in
add
sub
push
and
pop
idivb
negb
mov
shll
stos
cltd
lods
enter
dec
testl
cmp
shrl
lcall
push
mov
out
in
popa
add
aad
sbb
xor
jbe
out
inc
dec
aad
sbb
fildl
hlt
fsubs
in
xor
dec
fdiv
xlat
mov
jne
fisubrl
inc
insb
mov
cmp
insl
rcrl
add
repnz
sub
sbbb
adc
xorb
mov
mov
in
incb
insb
mov
pop
jne
and
cmp
inc
in
clc
daa
fisubrl
sbb
js
stc
scas
out
sub
or
jp
mov
xchg
push
scas
lret
cmp
jmp
push
push
xlat
stos
mov
adc
dec
gs
pop
adc
sahf
inc
dec
mov
stc
cwtl
call
mov
push
add
rcrb
adc
sar
xor
push
bound
xlat
cmp
mov
ljmp
push
mov
pop
loopne
xlat
data16
ret
xchg
dec
in
popa
inc
pop
int3
add
pop
mov
cmovle
shrl
arpl
jae
and
or
pop
or
jno
sbb
aad
push
cmp
pusha
dec
cmpsb
ljmp
jbe
mov
loop
sbb
pop
aaa
js
jnp
sub
mov
je
dec
sarb
push
enter
xchg
loopne
ret
fisubs
jne
or
pop
movsl
jl
sub
popa
cmpsb
test
pop
js
addb
movsb
cmpsl
jns
sub
sub
or
adcl
mov
xchg
fiaddl
dec
cmp
mov
and
inc
adc
dec
push
or
mov
jne
add
add
stos
lods
mov
mov
rorb
push
imul
loopne
subb
adc
ljmp
data16
rcll
call
xchg
nop
pop
dec
dec
jmp
jmp
aad
mov
nop
in
mov
cltd
lret
shll
push
cmc
cmp
mov
push
mov
pop
jmp
je
mov
cmc
fisubl
scas
mov
jbe
push
xchg
into
sahf
insb
stos
shrb
push
aas
inc
hlt
outsl
ret
mov
mov
daa
xchg
jecxz
fxch
sbb
insb
and
aas
les
push
ljmp
push
daa
fdivrl
fistps
imul
int3
nop
test
xlat
pop
clc
mov
addr16
sti
dec
inc
jb
sub
jne
rcll
jbe
dec
add
jbe
scas
fisttpl
repz
lcall
insb
outsb
xor
js
scas
out
add
pop
idivl
pop
mov
fistl
jg
loopne
nop
pop
xor
imul
pop
js
imul
arpl
mov
cmp
add
pusha
loope,pn
push
fnstcw
push
and
xchg
adc
fldpi
in
sub
mov
sbb
cmp
adc
cmp
xor
add
mov
cmp
mov
pop
insb
fsubl
ret
cld
psubusw
dec
xorb
out
fdiv
js
leave
cmpsl
pushf
imul
out
jle
xorl
arpl
inc
add
xor
inc
rclb
mov
pop
mov
daa
sbb
cld
mov
rcl
stc
or
cmp
xor
popf
mov
pop
das
pop
adc
inc
pop
pop
adc
jp
movsb
repnz
jle
add
xorl
sub
test
push
clc
sbb
rcll
sub
dec
fdivs
mov
dec
rcrl
inc
in
xchg
int3
xor
pop
fadds
popa
movsb
xchg
mov
insb
inc
xor
inc
adc
mov
jge
jge
xorb
in
push
jno
add
sbb
cltd
outsl
rcrl
jge
dec
repnz
or
ja
lret
cltd
fdivl
xor
icebp
jns
cli
leave
icebp
push
arpl
fwait
push
aad
inc
or
push
call
xchg
loopne
mov
mov
das
mov
aam
xlat
loop
xchg
popa
fcomps
aas
lods
adc
sbb
push
ljmp
into
push
cmp
mov
mov
or
and
push
or
mov
loopne
fcomp
jge
sub
cs
sub
scas
dec
push
inc
sub
shl
pop
xor
int
push
mov
fdivp
pop
mov
andl
aaa
inc
mov
adc
jo
fimuls
sti
in
sub
push
inc
gs
mov
fnsave
inc
daa
cmp
xor
inc
sbb
sti
jmp
movsl
fs
cwtl
scas
mov
sarl
inc
pop
imul
or
idivl
cs
mov
jbe
push
pop
jp
rcrb
stc
xor
addb
sarl
idivl
cli
mov
or
out
les
popa
jg
mov
imul
push
rcrl
xor
and
fsubrl
vunpcklps
shr
daa
lea
or
es
insb
jb
push
mov
movsl
ret
subl
xchg
mov
lcall
inc
loopne
das
push
enter
in
jne
popa
mov
xor
mov
xor
mov
jecxz
cmp
dec
pop
xchg
fiaddl
dec
xlat
lret
lods
adc
push
aad
jae
jecxz
cmpl
adc
sti
mov
aas
jb
mov
cmp
dec
jb
add
fdivl
popa
stos
inc
xor
adc
xchg
xor
sbb
call
dec
or
sbb
idivb
leave
ljmp
stc
arpl
push
dec
pop
push
dec
hlt
xchg
aad
push
xchg
xor
sahf
out
push
pop
out
ss
test
scas
sar
fisubrs
push
pop
or
icebp
cmpsl
jns
or
lret
sub
lock
repnz
dec
lods
es
loope
mov
into
push
mov
push
pop
adc
rclb
frstor
mov
adc
push
inc
mov
xchg
repz
scas
repz
or
mov
dec
jmp
lods
movl
jecxz
push
daa
or
cmpsl
cli
icebp
push
setnp
inc
inc
popa
cltd
add
loop
testb
mov
mov
sbb
push
push
mov
cmpsl
into
mov
mov
imul
fisttps
out
ss
imul
cmp
sti
or
cli
push
mov
aad
cmp
push
dec
addl
cli
clc
and
pop
andb
out
jmp
aad
inc
xchg
das
jb
sub
add
fiadds
jae
je
insb
jg
mov
and
repnz
std
test
or
sub
in
xor
stos
loop
adc
push
xchg
iret
movsb
inc
out
dec
xlat
jne
ljmp
lods
sub
sub
into
mov
clc
lret
jl
rolb
sti
aam
arpl
rcll
jno
sahf
mov
adc
int3
and
mov
xchg
push
and
lea
add
pop
push
mov
and
push
mov
les
mov
pop
stc
movsl
mov
jmp
shlb
fwait
insl
pusha
inc
push
cli
inc
rcll
or
in
add
cwtl
mov
test
xchg
push
xor
stos
xchg
loope
pop
pop
lret
iret
push
sbb
mov
mov
jbe
inc
inc
adc
bnd
adc
and
cltd
pop
push
mov
scas
je
add
xor
xor
scas
mov
xlat
orb
popa
movsl
jp
lock
test
xchg
pop
mov
std
pop
dec
scas
pusha
loope
mov
and
sub
mov
negb
testb
add
add
add
push
cmp
bound
and
inc
movsl
lahf
mov
jle
lock
dec
jae
and
mov
lods
les
push
testl
jno
lret
shlb
jne
xchg
outsl
cmp
and
pop
and
cmpsl
pusha
js
cmp
push
and
inc
clc
mov
insb
inc
loop
lahf
addr16
jg
hlt
pushf
jo
loope
out
lahf
xchg
mov
push
mov
xor
insl
adc
fsts
psrad
dec
in
into
popa
inc
xor
or
insb
xchg
jae
subl
out
xchg
inc
cmpsl
and
pop
lods
cmc
ljmp
cmc
gs
jmp
adc
adc
xor
out
es
jmp
dec
repz
inc
add
sbb
loope
ret
pop
fs
out
lods
pop
ja
fstp
fisubrs
mov
sahf
sbb
mov
inc
movsl
aam
fsts
and
sub
add
mov
sub
les
sub
cmp
add
or
gs
sbb
push
test
sbb
cmp
jbe
xchg
lret
jnp
pop
xchg
test
inc
hlt
popa
sbb
mov
rorb
sub
shll
xchg
mov
div
inc
fdivrl
xchg
jbe
mov
shrd
fadd
push
ljmp
sbb
and
daa
mov
push
cmc
loopnew
arpl
jae
enter
mov
out
or
enter
sub
jp
mov
sub
aaa
mov
sub
mov
jns
push
mov
add
jecxz
in
imul
sbb
js
xchg
clc
jo
and
mov
sub
stos
xchg
jbe
cmpsb
or
out
scas
pop
mov
mov
pop
jns
imul
pusha
mov
push
xchg
out
xchg
insl
popl
shll
mov
pop
cmc
addr16
incl
inc
mov
add
pushf
jecxz
mov
cmp
sub
fsubr
hlt
mov
cwtl
sbb
aad
fcomps
int
cwtl
inc
cmpsl
mov
mov
jge
dec
dec
repnz
mov
mov
dec
std
in
enter
jbe
and
popa
sub
jge
loopne
jae
subl
mov
sbb
jb
mov
push
push
lret
das
inc
mov
cwtl
ret
or
arpl
jmp
inc
stos
lret
into
roll
into
jo
pop
pop
xor
jo
xchg
xorb
ds
lcall
push
shlb
movlps
inc
incb
xchg
inc
fwait
cmpsl
mov
mov
jecxz
cli
fnsave
mov
xchg
lea
sub
adc
mov
loop
jmp
dec
ss
or
push
cmp
shll
in
sub
push
cmp
cs
rdmsr
cld
ss
xchg
aas
mov
mov
xchg
gs
movsb
push
ljmp
call
insb
lcall
adc
test
lret
pop
cmp
std
lds
jne
push
sbb
or
fnstenv
xchg
push
or
jmp
sub
pop
push
cmp
and
and
xchg
lahf
popl
mov
xchg
jns
ljmp
popf
lcall
outsl
fwait
add
and
in
dec
inc
dec
push
sahf
sub
push
pop
test
ret
aam
mov
iret
outsb
pop
cs
ror
or
xchg
dec
jl
inc
out
insb
stc
xchg
fcmovnu
rclb
data16
cmp
jnp
add
xchg
sbb
adc
je
xor
mov
out
fldt
fistpll
pop
mov
fcompl
and
cmp
inc
aas
mov
pop
sub
inc
sbb
shl
lock
lea
adc
adc
stc
add
rolb
repnz
rcll
mov
jmp
loopne
fiaddl
push
sub
pop
sub
clc
fldenv
adc
out
mov
repz
lret
fcmove
pop
xchg
jle
sub
test
mov
push
or
jmp
and
mov
mov
pop
pop
xor
stc
adc
pop
push
mov
jge
sub
dec
js
stc
fcomps
notb
into
push
cmp
lods
cmpsl
aam
mov
stos
mov
out
ret
jecxz
mov
subl
in
aaa
xchg
shll
xchg
and
fs
pop
rcll
insl
xchg
cmp
xchg
daa
inc
in
mov
pop
push
mov
or
mov
into
outsl
push
push
fcompl
jle
dec
test
sub
es
sbb
fcoms
inc
inc
scas
std
push
push
imul
pop
outsb
push
loope
inc
pop
je
mov
js
jecxz
cmc
sbb
xor
add
or
mov
arpl
int3
mov
je
dec
add
sti
lcall
push
pop
lahf
nop
inc
xor
lahf
std
mov
cmp
aas
je
lcall
jl
xlat
out
dec
mov
aaa
inc
insb
aad
cli
aas
cmpsl
mov
cwtl
les
mov
sbb
mov
sbb
adc
ss
pop
cmpsl
movsl
sub
or
dec
cmp
jg
sub
and
xor
pushw
xchg
cmp
rcrl
and
popa
sbb
jo
sbb
mov
loop
out
add
sbb
daa
int
cmp
inc
lahf
and
xchg
mov
lret
movsb
mov
loope
mov
push
cld
fcoms
nop
xchg
xor
pop
inc
cmp
push
repz
cs
mov
dec
inc
dec
mov
insl
test
xchg
cmp
fcompl
xchg
fidivs
mov
incl
jecxz
lret
mov
and
add
xchg
lock
imul
mov
popa
hlt
out
test
pop
xor
push
test
std
addr16
add
pop
movsl
and
out
cmp
in
in
cmp
dec
cmpsl
adc
xchg
popa
add
cmp
mov
je
and
mov
jmp
subl
ficoms
repnz
jbe
icebp
pusha
in
mul
jns
dec
je
xchg
mov
aam
mov
je
and
ficoml
sub
push
lock
xchg
test
mov
arpl
pop
cmp
jecxz
push
mov
repnz
cmp
xor
add
orb
and
fsubl
jle
aaa
mov
ret
dec
xchg
leave
inc
lds
dec
les
xlat
dec
sbb
mov
xchg
inc
lods
push
push
mov
add
and
mov
popf
daa
rcll
sbb
adc
mov
add
pop
out
mov
scas
push
xchg
mov
mov
ds
sbbl
push
jmp
mov
xlat
test
pop
pop
inc
nop
jmp
push
imul
addb
enter
lahf
jnp
pop
sub
inc
or
jmp
mov
dec
xchg
push
jle
pop
out
gs
pop
lret
cltd
push
in
or
cmp
pop
xor
inc
jae
das
dec
sub
in
je
jmp
popa
icebp
dec
xchg
add
repnz
xchg
xchg
cmc
sub
xor
ficoml
in
mov
sahf
sub
fstp
mov
repnz
cmpsb
call
dec
mov
inc
pop
pop
es
nop
js
jg
adc
jg
jp
cmp
adc
add
test
jecxz
push
cltd
out
push
xchg
mov
cmp
inc
push
mov
cmpsb
dec
pop
nop
xchg
movsb
mov
or
xchg
int
fiaddl
psubusb
stc
stc
es
fistpll
movsb
es
mov
push
pop
ficomps
ljmp
jnp
mov
pop
push
sbb
jmp
pusha
push
adc
jmp
pop
js
mov
or
into
bound
das
or
roll
push
ja
cmp
mov
cmpsb
clc
sub
cmpb
pushf
ror
push
fincstp
xchg
pop
icebp
jmp
repnz
ds
nop
test
pop
loopne
mov
mov
inc
add
inc
or
push
stos
std
cld
pop
add
inc
pusha
ret
push
mov
ljmp
pop
mov
xor
mov
xchg
ja
out
add
ror
cmc
add
pop
lret
push
add
rclb
mov
mov
lock
cmp
sahf
inc
xlat
das
movsb
xor
push
cmp
xchg
and
mov
call
sub
pop
jg
xor
in
fsubl
pushf
xor
sbb
dec
je
lcall
pop
pushf
add
ja
inc
mov
mov
jne
movsb
fstp
adc
fsts
rcll
lods
xchg
cld
mov
mov
mov
ret
inc
std
pushl
mov
ja
in
incb
inc
or
cmp
movsl
push
mov
or
ljmp
xor
or
in
push
cltd
call
ja
or
hlt
mov
nop
mov
lock
pop
mov
push
and
loop
xor
loope
mov
enter
lods
inc
push
fsts
mov
xlat
xor
inc
inc
idiv
stos
cmc
and
pop
lock
stc
mov
stc
movsb
shll
stc
leave
in
adc
pop
mov
or
fnstcw
push
cmc
and
aam
out
loop
ret
push
pop
xchg
shll
ss
lods
rep
sub
call
jecxz
and
xchg
xchg
enter
in
sar
imul
jae
cmc
xchg
mov
or
fbld
idiv
jge
testb
jecxz
jmp
mov
push
pop
jmp
add
mov
push
sbbb
cmpsl
cmp
dec
adc
call
or
mov
inc
movsl
lcall
ret
mov
and
xchg
jae
push
push
loop
xor
bnd
mov
fcoms
lahf
jnp
lods
pop
and
aas
jl
scas
stos
or
fwait
add
mov
mov
dec
mov
js
mov
jbe
pop
xor
adc
sbb
cmp
loop
loope
sub
lret
cmp
aas
mov
adc
and
xor
cmp
xchg
imul
jge
dec
stc
repnz
mov
call
nop
les
xor
jbe
mov
push
jp
cld
adc
dec
ja
and
push
mov
sub
xor
mov
cmp
dec
sub
lea
jbe
mov
enter
and
test
pushf
mov
js
inc
repz
xchg
mov
les
ficompl
ret
xor
xchg
pop
flds
jne
cmp
push
aaa
fidivs
lret
jbe
jno
outsb
inc
push
sbb
xor
pop
mov
fwait
jno
jno
orl
gs
xchg
pushf
xor
pop
loope
orl
fcomip
pop
int
sbbl
arpl
push
add
or
xorl
lret
sarl
sbb
dec
les
cmp
lcall
cmp
insb
and
pusha
mov
xchg
adc
testb
pop
test
pop
enter
mov
jbe
push
cmpsb
mov
in
insb
pop
fstl
adc
ret
add
bnd
cmc
adc
sub
xchg
pop
mov
mov
fnstenv
aam
sbb
add
cmp
aad
mov
sti
popa
test
into
or
sahf
jns
aad
xchg
cmp
stos
cmc
mov
pop
int3
or
rclb
data16
lods
ja
test
in
cmpsl
in
cmpsl
aaa
int
adc
loopne
mov
mov
icebp
rcll
mov
adc
or
xchg
mov
mov
cmp
mov
mov
jnp
inc
mov
test
pop
jae
fsubp
out
sub
outsl
mov
xchg
fstpt
das
gs
jl
dec
fisubl
or
mov
std
add
les
jecxz
adc
pop
inc
sub
cmp
push
pop
sub
out
pop
rol
adc
addr16
jp,pt
out
je
and
mov
push
sarl
aad
dec
stos
addr16
rol
cmp
mov
sbb
pop
sarl
sub
ss
jge
xchg
lret
sub
in
insl
mov
pop
cltd
or
inc
push
cld
mov
int3
mov
sub
leave
ljmp
adc
testb
jnp
inc
pop
rclb
sub
or
scas
xor
iret
xchg
std
scas
mov
repz
mov
push
aas
movsb
mov
inc
sbb
push
shl
and
in
mov
stos
jmp
pop
mov
scas
mov
aaa
fimuls
cmp
movsl
rcrl
dec
nop
addl
cmp
addb
in
mov
mov
lret
push
lret
loope
mov
cltd
push
clc
notb
pop
push
mov
out
mov
dec
mov
dec
push
dec
ret
rcr
ret
pop
data16
fdivp
mov
je
pop
cwtl
adc
rol
jno
adc
pop
and
and
popa
scas
mov
hlt
sub
mov
negb
orl
ret
mov
shrl
cli
lock
inc
ret
xor
or
mov
push
xchg
push
push
cmp
imul
mov
sub
leave
fwait
mov
roll
push
mov
mov
nop
iret
push
orb
sub
xor
rcl
iret
jle
adc
xchg
ficompl
lret
ljmp
jae
repnz
mov
xor
mov
jg
jne
hlt
sbb
repnz
outsb
push
xchg
insl
push
sub
lret
outsb
jae
jb
lcall
notl
jb
cmp
in
addr16
call
gs
scas
test
xchg
das
stc
jg
lods
xchg
mov
mov
aad
movsl
mov
jge
test
xchg
pusha
imulb
sahf
dec
jmp
mov
jnp
push
sarb
push
adc
ret
rorb
movl
hlt
and
pop
mov
mov
jle
aas
push
cltd
out
test
and
loopne
jmp
push
popf
mov
xchg
sbb
mov
int
fidivrs
out
mov
sub
inc
es
cmpsl
dec
mov
lea
test
iret
ds
pop
adc
out
cmpsl
scas
js
jmp
push
dec
add
and
pop
mov
mov
std
push
pusha
sub
mov
and
xor
mov
adc
pop
pop
call
push
lock
test
and
jmp
push
das
add
xorb
adc
or
aaa
mov
enter
sbb
mov
pop
mov
push
aad
das
cwtl
cmp
mov
insb
xor
lods
cmp
out
pop
push
notb
pop
data16
ror
jg
std
push
aam
imul
pop
sub
cltd
xor
xor
adc
cs
cli
push
ret
notb
bnd
pushf
jo
aas
sbb
add
stos
pushf
adc
jge
popa
mov
push
cmpl
cmc
add
pop
popf
in
jb
push
icebp
inc
or
cmp
scas
and
loop
test
add
dec
xor
push
or
xlat
dec
lea
ja
fisubrl
sahf
mov
mov
mov
loop
out
inc
cmpsl
dec
mov
adc
insb
nop
sbb
fisttpl
aam
or
adc
jnp
push
ret
insl
mov
fnstcw
xor
adcl
pop
mov
ljmp
mov
ret
add
fs
leave
cmp
xchg
out
mov
mov
adc
ljmp
add
daa
cmp
pusha
push
or
cltd
pop
mov
mov
gs
bound
fs
xorl
and
ljmp
inc
add
fmuls
jle
and
mov
ret
add
je
dec
jns
mov
fists
lret
xchg
mov
dec
lock
jno
jl
adc
xor
mov
push
add
xchg
jbe
cmpsl
mov
mov
testl
inc
mov
mov
push
and
test
dec
addl
lcall
and
mov
sbb
sbb
sbb
xchg
cmp
adc
jnp
or
jnp
push
orl
fmul
adc
leave
in
cmc
inc
lcallw
jg
out
dec
pop
add
shlb
push
das
ljmp
nop
mov
popf
or
mov
xchg
std
xlat
xor
repz
notb
dec
shrb
idivl
cmp
cmp
mov
rolb
jns
push
add
les
push
mov
hlt
ficoml
clc
mov
aaa
repnz
data16
outsb
cwtl
je
ss
bound
dec
mov
int3
mov
push
in
pusha
sbb
push
mov
cmpb
stos
jecxz
sbb
fcoms
push
adc
mov
jge
int
sar
sbb
push
fidivrs
pop
and
or
in
and
mov
xchg
je
popa
adc
iret
mov
frstor
je
or
loop
into
mov
stos
jg
pop
arpl
popa
dec
mov
cli
dec
lahf
aad
mov
call
dec
sahf
insl
inc
pop
dec
aas
mov
sahf
xchg
stc
arpl
mov
fwait
insb
pop
rorl
fldenv
pop
iret
push
adc
sbb
pop
int
cmp
dec
jnp
xlat
lock
mov
dec
lods
and
mov
adc
dec
mov
push
push
aam
cli
dec
and
jnp
pop
jmp
inc
iret
outsb
push
xor
xor
arpl
ret
lfs
jns
push
mov
call
aam
adc
and
fs
and
dec
inc
cltd
ljmp
fdivrs
subl
test
rolb
movsb
xchg
jp
cmp
fnstcw
addl
xchg
loope
scas
sbb
loop
aad
or
imulb
mov
and
jne
adc
push
lock
or
xor
jecxz
iret
aaa
mov
xorb
icebp
inc
addr16
inc
sbb
cmp
mov
xor
xlat
ja
inc
cmpsb
mov
aas
aaa
mov
rcl
sbb
lods
shrb
sahf
cmp
sbb
mov
adc
fdivl
cmp
pusha
inc
mov
outsb
lret
adc
fiadds
sbb
mov
out
aad
cltd
add
es
xchg
out
add
xchg
sti
add
lahf
push
and
fmuls
insb
std
and
fisttpll
shll
sub
push
into
mov
pop
in
sbb
xchg
xor
aad
or
cmpsl
sbb
mov
xor
jmp
sbb
addr16
jmp
jg
pop
pop
ret
cmpsb
pop
dec
movsb
mov
js
pop
cli
push
xor
push
sti
in
adc
pop
aas
push
or
outsl
fsubrs
cli
mov
or
leave
mov
add
rcrl
mov
ja
int
jecxz
push
xchg
adc
adc
movsb
inc
bound
fiadds
sub
mov
movd
xor
fisttpl
jp
adc
mov
xchg
jmp
mov
je
lock
call
addr16
mov
adcl
push
pusha
jbe
xor
test
arpl
dec
aas
and
enter
cmp
mov
mov
xlat
ds
ucomiss
mov
insl
pop
sub
call
cltd
cmp
or
loopne
add
leave
pushf
xor
mov
mov
jle
adc
dec
jg
cmpsl
cli
xchg
xchg
daa
and
repnz
cwtl
test
and
icebp
out
xor
xchg
sub
add
mov
cmc
or
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
mov
lea
push
leave
lret
dec
pop
fldl
mov
cmp
inc
mov
fidivs
jp
or
jne
les
xchg
lret
aas
fnstenv
and
jno
push
fwait
ud2
cmp
addb
clc
mov
push
mov
adc
add
add
and
out
into
add
sar
mov
xchg
movsb
inc
mov
ljmp
bts
add
pop
mov
sbb
shll
adc
add
std
and
insl
ja
test
cmp
in
popf
push
mov
les
pop
jns
pusha
adc
push
lods
push
mov
xchg
dec
mov
addb
stos
icebp
mov
xchg
into
lahf
cmp
addr16
mov
jmp
or
cmp
dec
movsl
adc
lcall
add
push
dec
lret
in
je
jle
hlt
add
jb
cmp
jns
jne
jo
adc
mov
fwait
mov
lock
repz
fs
sbb
fbstp
out
jno
mov
fwait
adc
sbb
or
cmp
mov
leave
or
or
and
inc
sub
popf
imulb
insl
cmp
or
push
adc
add
add
add
xchg
add
inc
xchg
popa
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
mov
