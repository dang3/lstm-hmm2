sbb
add
mov
sbb
push
adc
and
xchg
sub
mov
xor
loope
sar
fld
dec
mov
add
lcall
pop
outsb
neg
cwtl
dec
inc
icebp
bound
rcr
sub
or
insl
out
add
fwait
sbb
xlat
nop
cmpsb
jmp
push
mov
and
outsl
dec
pop
jb
movsl
ljmp
and
add
adc
mov
out
paddb
outsb
pop
mov
mov
cmp
and
dec
leave
lret
sarb
add
test
pop
popf
sahf
xor
sbb
in
mull
jnp
and
sub
sbb
jle
fisubl
push
das
xchg
rcl
xor
jae
loope
decl
jmp
iret
ret
mov
adc
ss
imulb
mov
les
je
es
xchg
lods
iret
add
sub
sbb
adc
arpl
mov
fdivl
cmc
cmp
scas
sbb
mov
pop
cmp
lea
push
les
xor
pop
sti
or
dec
movsl
pop
push
call
mov
rorb
xor
popf
imul
leave
sar
out
cwtl
jl
adc
sub
pop
fs
cs
cs
sub
dec
jne
inc
xchg
mov
rorl
enter
pop
imul
xor
leave
and
push
punpckhdq
outsb
xor
push
dec
cmp
cs
mov
stos
out
adc
loopne
lea
push
cmp
in
cwtl
lcall
lea
iret
sub
arpl
in
xor
sbb
mov
mov
jle
sub
cmp
lock
dec
cmpl
pop
enter
adc
enter
or
cmp
jg
int
fisttpll
push
movsl
lock
dec
scas
dec
mov
pop
out
insb
jmp
cmpsl
fmulp
cmp
xchg
faddl
cld
sbb
mov
cmp
mov
jo
in
mov
and
inc
addr16
js
test
dec
mov
mov
sub
pop
aaa
xchg
sbb
or
adc
jbe
xchg
stc
bound
iret
lds
nop
inc
ja
cld
leave
add
popw
or
mov
mov
clc
jg
xchg
insb
test
fistl
jnp
out
nop
ret
filds
roll
sbb
push
sbb
mov
push
sbb
cltd
jnp
movsl
adc
jb
push
xchg
mov
jno
dec
mov
mov
test
mov
xchg
sub
mov
fstpl
movsl
xor
call
mov
sub
mov
pop
inc
loop
loop
push
adcl
jmp
xchg
and
inc
les
xchg
icebp
adc
lods
cpuid
jno
les
insl
outsl
mov
mov
and
movsb
in
cld
test
mov
push
out
sub
in
push
adc
cmc
lret
xchg
nop
push
lods
fs
inc
mov
mov
jecxz
sub
test
addb
stos
cmp
push
scas
dec
sub
in
and
jp
xchg
ljmp
cwtl
inc
xor
jmp
sahf
int
sbb
adc
xchg
sub
daa
clc
aad
mov
int3
xchg
cwtl
lods
dec
loope
mov
or
pop
jg
or
cmp
cld
mov
mov
outsl
push
dec
mov
pushf
into
mov
xor
sahf
fs
mov
adc
mov
test
jg
inc
inc
idiv
aam
cmpsb
in
fadd
dec
fdivrs
xor
jl
sbb
sub
dec
inc
fwait
push
inc
fsubrl
jns
and
jae
es
iret
out
mov
outsb
gs
or
loopw
movsl
xor
outsl
jo
mov
push
imul
pop
scas
push
out
and
mov
mov
or
pop
in
repz
popf
ss
pusha
xor
xlat
in
and
aas
dec
rorb
mov
inc
cmp
pop
xchg
jno
mov
mov
sbb
push
sbb
loope
cmp
pop
mov
in
shll
add
hlt
pop
dec
das
insl
xor
mov
movsl
dec
ja
sbb
mov
sti
or
movsb
inc
roll
jle
cmpsb
aas
pop
sbb
fnstenv
fstpt
stc
adc
psllq
pop
cmpl
and
repnz
adc
sbb
jle
popa
loopne
mov
sahf
clc
lahf
jg
les
rclb
ficoml
inc
je
mov
pop
or
xchg
push
mov
addr16
repnz
jae
cmpb
fistpll
addr16
daa
mov
push
xor
add
out
pop
add
nop
scas
loopne
daa
adc
xor
sbb
cs
imul
aas
or
jmp
mov
dec
jno
jo
dec
out
mov
out
jle
lcall
mulb
xor
mov
pop
out
push
sarl
mov
lcall
add
cmpsl
in
mov
jl
imul
cld
and
in
loopne
adc
jmp
jmp
cs
jle
addr16
pop
mov
inc
rorb
movsl
dec
jl
lcall
pusha
divb
mov
inc
push
je
or
in
ss
divb
ja
mov
imul
fbstp
in
push
pusha
dec
sub
xchg
pusha
or
call
ret
jmp
in
pushf
and
adc
mov
inc
xlat
lods
lds
fldt
enter
fstl
pop
sbb
lahf
icebp
adc
ret
into
mov
sbb
ret
sti
push
xor
and
inc
pop
add
cmp
jo
ds
out
cmc
subl
push
cmp
ja
dec
stos
dec
cmp
mov
sbbb
push
sub
ss
movsl
and
rcr
mov
fbld
cld
mov
xlat
andl
rorl
dec
into
adc
roll
stos
call
push
inc
aaa
sbb
daa
mov
adc
xor
sbbb
ja
out
lock
jge
pop
pop
leave
fs
clc
pop
popf
imul
shl
test
movsb
inc
inc
lret
rorb
jae
jg
mov
nopl
jmp
jecxz
arpl
dec
aam
clc
sub
fstps
aas
hlt
mov
psubusw
sbb
aad
and
xchg
push
in
or
jo
xchg
filds
rcrb
test
mov
mov
push
mov
loopne
or
mov
and
pop
sub
and
test
add
push
jb
inc
addr16
fldenv
adc
jae
dec
in
icebp
cmp
pop
shlb
pop
jnp
std
in
pop
lret
incb
push
inc
push
cmp
cmp
adc
in
aad
inc
jg
add
push
sbb
xor
mov
cwtl
ficomps
add
lret
mov
xchg
mov
pusha
dec
sbb
pop
sub
cmc
ljmp
outsl
ss
sub
and
mov
std
xor
cli
jbe
cmp
xchg
xchg
and
ret
xchg
inc
jns
pushl
inc
or
mov
add
add
movsl
xchg
mov
je
daa
test
cmp
int3
jp
pop
or
in
jnp
or
enter
push
mov
jo
shl
stos
pop
cs
pop
out
dec
clc
push
sti
inc
out
jecxz
mov
aam
out
mov
pop
stos
push
xchg
and
jmp
ljmp
rcl
pop
test
xlat
insl
mov
int3
xchg
mov
enter
jg
lds
pop
adc
mov
int3
dec
xor
mov
sub
fimuls
jns
stc
or
inc
jae
setp
popf
lds
pop
outsl
add
mov
mov
scas
rclb
push
je
jecxz
je
add
arpl
hlt
sub
cmp
mov
les
scas
adc
jl
icebp
es
cmp
nop
sahf
cld
cmpsl
je
lret
hlt
in
push
into
test
xor
rcrl
pop
shlb
shrb
and
xchg
cmp
test
popf
icebp
int3
push
repnz
sub
fsubs
jne
filds
add
dec
inc
inc
repz
add
repz
ja
pop
sbb
ja
popa
pop
sbb
aas
xchg
test
xchg
mov
adc
and
test
lret
sub
in
xchg
std
jmp
push
stos
mov
push
sarl
mov
test
jl
mov
dec
scas
ds
jne
cmp
xchg
inc
push
xchg
pop
mov
mov
inc
imul
xor
test
pop
cmp
fdivs
cmp
mov
movsb
dec
outsl
mov
add
sti
xchg
cld
lods
daa
mov
les
in
add
jns
in
lret
xor
repnz
sbb
dec
outsl
mov
das
shlb
imul
cmp
leave
mov
sbbl
dec
pop
lods
jle
inc
cli
ja
lods
jle
sbb
insl
les
call
pop
pop
lds
mov
xor
mov
inc
out
inc
and
xchg
call
lock
or
cmp
dec
sbb
imul
xchg
and
int3
js
shlb
enter
adc
jge
data16
shll
lock
dec
jmp
pushf
inc
mov
mov
push
lret
loope
call
push
cmpsb
jle
and
mov
mov
sub
xchg
sbb
and
fidivl
sarl
out
es
pop
cmp
icebp
pusha
cmp
inc
fidivs
pop
test
pusha
insb
mov
sub
lock
lahf
aam
pop
loope
enter
or
mov
in
cmp
adc
mov
jecxz
aas
mov
cmpsb
imul
push
push
js
adc
hlt
iret
dec
adc
hlt
dec
xchg
clc
mov
repz
mov
mov
lcall
or
cmc
sub
daa
cmp
xchg
adc
push
ja
stos
push
sub
mov
fwait
lcall
loop
pusha
push
push
dec
ficomps
jle
sbb
sarb
ficoms
mov
into
push
mov
lock
lahf
aaa
sub
in
mov
out
cmp
sbb
repnz
sbb
mov
jo
out
movsb
jb
mov
pusha
out
xchg
push
fsubp
cmp
and
add
cmp
test
lretw
in
loope
ljmp
enter
adc
adc
xlat
sbb
adc
test
mov
data16
jp
push
pop
fisttpll
pop
aas
mov
xor
or
std
jbe
mov
cs
jnp
mov
xchg
daa
clc
fcmovnb
mov
insl
xlat
adc
mov
out
jecxz
xor
and
sub
lret
push
xor
and
jl
dec
jmp
adc
sti
jne
scas
aaa
movsb
and
or
add
orb
pop
mov
pop
sub
inc
outsl
xor
jnp
repz
data16
xor
scas
scas
insl
call
inc
sub
cmc
xchg
repnz
push
mov
pop
jmp
fdivs
jo
mov
scas
out
sbb
fistpl
les
fs
pusha
mov
pop
adc
lods
cmp
jmp
aaa
mov
movb
xor
sbb
xor
lret
out
mov
cmpsl
dec
sti
test
imul
adc
stos
je
fldcw
adc
jae
inc
pushf
mov
xchg
add
repnz
sbb
test
or
or
fsubs
or
inc
mov
mov
leave
cmc
and
dec
xchg
dec
pop
in
lret
sub
jbe
jle
lcall
jbe
outsb
and
pop
xchg
pop
jle
aaa
rolb
cmp
jg
js
dec
lea
add
mov
xchg
adc
jecxz
jnp
cwtl
loop
and
in
mov
lea
pop
xor
mov
lock
testb
mov
jge
in
outsl
pop
in
dec
shlb
pop
aaa
sub
mov
mov
or
push
das
cs
test
ja
scas
pop
and
jno
mov
dec
sbb
cli
in
mov
rcll
mov
pushf
cmp
lahf
test
cmp
adc
add
push
jmp
push
movsb
js
insb
mov
dec
pusha
enter
out
lret
cmc
decb
fnstenv
ret
xor
enter
xor
neg
dec
scas
das
js
or
cwtl
and
enter
sub
cmp
jmp
ret
jbe
jp
stos
fisubl
int
cmp
pop
or
push
dec
jae
inc
cmpsb
pop
push
cs
loope
movsb
xor
fstpl
addb
dec
nop
sti
pop
pop
inc
jp
in
push
stos
ret
loope
arpl
divl
mov
dec
mov
test
out
mov
int3
sub
loopne
ret
outsl
in
cmp
or
shrb
lds
cmp
fisubrs
sbb
adc
scas
xchg
jne
ljmp
inc
mov
hlt
adc
push
fcompl
push
addr16
mov
in
das
xchg
loopne
outsb
jbe
xor
jno
mov
pop
test
sbb
das
or
mov
jecxz
fidivrl
nop
push
inc
push
inc
out
mov
mov
sub
mov
lods
jg
aam
and
cmp
push
sbb
ljmp
sub
sub
mov
mov
fcoms
jbe
rorb
push
or
int3
dec
fsubrp
sar
and
sti
cmovs
sub
add
xor
jnp
push
inc
pop
pop
inc
int3
and
mov
enter
das
pushf
adc
mul
ja
ret
dec
mov
stos
pop
mov
mov
out
fsubl
popf
jmp
sti
push
adc
xor
adc
push
mov
sub
jecxz
mov
cwtl
inc
es
out
movsl
movsl
jns
mul
inc
aaa
sbb
jns
inc
cs
loope
jns
and
sub
jge
inc
shl
sbb
rcrl
sbb
or
lcall
add
std
test
sub
fbld
sbb
mov
ret
push
andl
dec
mov
popf
movsl
jmp
cli
mov
cld
cmp
sarb
xlat
adc
sbb
lds
jg
pop
xor
fbld
sub
mov
jecxz
fldl
idivb
dec
in
xor
jmp
xor
test
fs
rolb
shrl
cmp
mov
push
pop
cwtl
jmp
insb
sub
pop
loope
lret
mov
sub
push
sub
xor
cmp
sbb
jp
rcll
jo
xchg
scas
cmpsb
and
andl
and
pop
sub
insl
and
lds
jns
jl
mov
ljmp
test
push
dec
sbb
fstpt
push
mov
insb
mov
shrl
and
les
adc
stc
sub
arpl
and
or
jb
in
test
xor
lods
xlat
push
jle
push
push
dec
test
dec
ret
movsl
mov
jae
clc
nop
aad
arpl
mov
mov
shrl
outsb
hlt
sbb
xchg
or
inc
sbb
dec
nop
push
ss
push
xor
add
subl
jge
inc
out
jae
pop
shl
pop
outsl
jne
push
xchg
call
or
mov
inc
jg
imul
cmpsl
add
cmp
mov
push
cmp
movsb
test
push
fs
pushf
fsubrl
pusha
adc
adc
aaa
or
insb
xchg
push
fldt
out
stc
jb
mov
cmp
xchg
ds
stos
or
lea
add
push
push
or
xchg
push
rorl
loope
stos
dec
jmp
fldenv
push
adc
je
or
xchg
gs
repz
adc
or
pop
jmp
fbstp
out
adc
jns
les
mov
and
scas
les
mov
daa
movsb
cmp
les
ss
lret
rol
mov
add
inc
mov
add
sub
sti
mov
and
cli
sbb
sbb
mov
std
icebp
jecxz
pop
fdivs
or
mov
ret
push
int
clc
subb
out
mov
pusha
rcrl
xor
or
fists
mov
cmovne
mov
scas
jne
xor
and
push
mov
cmpsb
fsubp
push
pop
add
sub
int3
stc
cmp
mov
sub
nop
cmpsl
pop
mov
addr16
in
aas
cmpl
and
sbbb
imul
shrb
adc
aas
nop
hlt
ror
loop
and
jb
popa
jno
jnp
test
ja
push
rcrl
out
mov
mov
adc
add
sub
mov
pop
mov
pusha
popa
push
stc
ror
add
test
or
ljmp
outsl
or
pop
dec
mov
push
std
xor
sahf
ljmp
les
xchg
nop
push
mov
push
dec
or
outsb
jae
mulps
mov
add
and
xchg
jp
cmp
jbe
xor
push
lahf
es
sbb
xchg
cmp
push
addr16
pop
cmp
cmp
push
mov
ja
mov
cmpsb
ficompl
and
or
icebp
push
cmpsb
pop
outsl
mov
cmp
aas
and
xorl
sub
xchg
cli
lods
pop
mov
cmp
test
and
sbb
das
popf
sbb
mov
je
gs
push
xchg
mov
scas
jl
xchg
mov
push
adc
mov
mov
ljmp
pop
test
mov
js
out
xor
test
push
subb
stos
shrb
popa
lret
hlt
les
add
xchg
pop
push
es
ret
aad
shrl
test
mov
repz
xor
dec
lock
push
mov
push
push
pop
call
daa
xlat
mov
cli
pop
aas
std
sbb
loope
fistpl
pop
sub
rclb
cwtl
std
push
pop
mov
xchg
push
mov
xchg
push
adc
imul
loopne
inc
jle
add
insl
jp
mov
aas
and
pop
lret
es
mov
add
mov
push
iret
je
push
pop
xchg
shll
adc
and
movsl
out
gs
mov
je
mov
push
push
cmp
jo
insb
mov
clc
sbb
sub
hlt
fmuls
mov
inc
pop
push
lahf
sbb
inc
cld
arpl
sub
insl
fmuls
push
out
adc
add
mul
fstpl
fcoml
sbbb
div
inc
dec
or
sub
test
test
mov
icebp
test
jecxz
dec
jb
add
lcall
cmp
sbb
arpl
scas
mov
xor
pop
and
jo
sbb
nop
or
mov
nop
jmp
or
loop
andl
xor
loopne
jns
mov
mov
call
ds
roll
lcall
sbb
pop
es
add
sbb
mov
jae
mov
lret
outsl
das
fdivrl
arpl
sahf
push
jmp
rclb
lret
cmpsb
sub
cmpsb
mov
fcoml
sbb
pop
xor
es
icebp
pop
inc
dec
cmp
pop
xor
xor
fwait
sub
in
fdivl
xchg
mov
dec
aas
sbb
inc
sbb
call
inc
iret
aam
cmp
jnp
mov
mov
xlat
cld
or
or
out
jns
test
sbb
push
cmpsl
sbb
add
imul
mov
pop
rclb
les
add
dec
jecxz
mov
imul
data16
hlt
dec
mul
rcr
push
mov
mov
push
call
popf
push
cmp
add
push
push
jl
das
lahf
add
or
imul
minps
leave
xchg
and
sarl
push
cwtl
pop
cmp
dec
sbb
pop
cmp
fsubrs
scas
sbb
jns
push
jge
add
adc
sbb
pop
rcpps
sub
test
add
xor
mov
xor
push
add
clc
add
add
ret
sub
daa
sbb
lret
mov
scas
filds
add
jbe
cmp
cld
cmp
gs
sbb
xchg
pop
sub
les
mov
adc
mov
push
ret
mov
mov
fisubrs
pop
stos
and
jle
int3
add
jo
aad
loop
mov
pop
jp
rorl
pop
xchg
cmpsb
into
xchg
adc
ja
loope
push
mov
nop
ja
mov
cld
jno
pop
mov
adc
adc
and
mov
cmpsl
leave
and
jb
xchg
dec
adc
cmpsl
add
inc
pop
mov
stos
popf
and
cmpsl
adc
cmp
jnp
shll
sahf
mov
pop
je
mov
out
and
mov
cmp
divb
mov
mov
push
mov
sub
stc
pop
inc
dec
shr
ds
adc
mov
addr16
adc
mov
mov
sarl
lcall
jg
cltd
cli
icebp
xchg
jecxz
scas
fdivrl
outsl
or
pusha
pop
mov
js
sarl
iret
or
sbb
lds
pop
pop
sub
fwait
adc
mov
push
mov
bswap
xchg
sub
movsl
icebp
push
mov
xor
xchg
and
or
cmc
mov
push
xor
add
add
addb
in
adc
inc
loopne
mov
jmp
movb
insb
pop
std
aam
jp
xor
scas
sub
mov
lods
pop
aam
and
xor
lock
or
movsb
sti
cmp
add
movsb
mov
pushf
jmp
pop
rclb
xor
hlt
stc
dec
inc
dec
push
mov
nop
pop
cmp
bound
andb
fimull
stc
call
dec
jb
xlat
and
add
rep
lods
mov
mov
ds
aam
pop
movsb
mov
mov
dec
lds
inc
out
test
test
aad
xchg
cmp
fbld
dec
and
push
scas
dec
xor
lds
inc
mov
ljmp
inc
pop
lret
xor
pop
sub
fcoml
push
scas
cmpsl
push
adc
push
sbb
xchg
shlb
addr16
fistpll
dec
leave
incb
jnp
fdivs
addr16
cmp
push
sub
mov
je
daa
stos
scas
cmpsl
inc
mov
xchg
popa
repz
push
push
ret
push
lcall
sbb
fwait
test
and
xchg
mov
push
add
adc
dec
or
imul
add
aaa
inc
setne
rol
adc
data16
loopne
fsubrs
xor
lods
out
fdiv
out
jge
lds
pop
pop
shlb
in
out
sub
ja
adc
add
xor
jne
add
repnz
popa
call
mov
aad
gs
push
push
xchg
dec
inc
loop
xorl
in
fwait
pop
pop
lahf
mov
ja
xor
mov
jge
and
movsl
sub
in
cmpsl
pop
ficoms
and
add
xchg
add
xor
or
test
xor
in
loopne
sbb
push
mov
jbe
js
adc
jnp
add
loop
push
jle
jle
sti
cltd
dec
outsb
adc
mov
hlt
push
xlat
ja
outsl
dec
movsl
dec
rolb
pop
inc
add
js
loopne
fiadds
loopne
jns,pn
and
dec
mov
or
push
mov
xlat
nop
stos
out
repnz
sahf
test
pop
mov
ds
ror
cwtl
dec
out
xor
lahf
cmpsl
jecxz
and
xor
xor
jbe
ds
sti
pushf
daa
and
arpl
cmpb
mov
fildll
dec
mov
push
movsl
int3
cmp
xor
adc
insl
rolb
ret
push
outsb
out
push
data16
and
lods
cmp
cmp
rcpps
jp
adc
xchg
test
fdivrl
sub
mov
push
and
add
sub
pop
cli
pop
cld
ds
xor
imul
push
loop
add
fildl
jbe
dec
xchg
sbb
xlat
cmp
fs
scas
daa
jecxz
cmc
cmpsb
ljmp
xor
sbb
out
mov
fwait
out
push
inc
mov
emms
jmp
imulb
lcall
mov
rol
cli
cwtl
dec
insl
ss
jae
clc
test
xchg
or
push
push
dec
cmp
add
dec
sub
dec
fimull
jo
int3
dec
mov
mov
lock
test
pusha
cltd
adc
pop
cmp
jg
adc
mov
and
aaa
cltd
xor
popa
test
gs
dec
jle
test
out
mov
js
or
pop
jge
testl
xchg
cld
cmc
stos
stos
cwtl
mov
fs
xchg
jp
int
ficoml
inc
add
sbb
dec
mov
inc
dec
mov
icebp
adc
lret
mov
xlat
sbbl
fadds
mov
add
xor
cwtl
sub
jae
dec
in
dec
jne
add
jo
jae
ja
fstpl
or
xor
lods
sahf
aad
scas
mov
fldenv
mov
xchg
xchg
cmp
or
sbb
sub
aaa
leave
xor
jno
cs
cmpl
aad
in
ljmp
std
add
icebp
inc
ret
jg
scas
jns
adc
fcomps
loop
lcall
mov
ja
aas
movsb
cmp
fcoml
test
inc
mov
into
or
mov
ljmp
nop
pop
test
push
mov
mov
mul
test
mov
push
xchg
leave
stos
or
fs
jge
push
jbe
bound
cli
insl
in
and
ret
push
mov
push
or
xchg
add
lods
fnsetpm(287
pusha
xor
js
sarb
inc
dec
insl
add
popa
shlb
inc
adc
push
js
hlt
call
das
mov
inc
sub
xlat
stos
push
pop
vandps
sbb
jl
jns
loop
shlb
pop
sbb
push
mov
je
push
rorb
imul
jmp
xor
enter
test
cmp
mov
mov
gs
xchg
out
cmp
sbb
fadds
leave
or
lret
sbb
movsl
cmp
push
roll
fsubrp
iret
iret
add
jbe
jmp
scas
push
pop
push
cmc
mov
pusha
cmp
jbe
enter
xchg
jecxz
repz
int
cmp
push
imulb
mov
imul
mov
bound
mov
outsb
aaa
rorl
xchg
push
inc
mov
mov
mov
in
add
sub
inc
andb
gs
add
or
sbb
or
loop
mov
cmp
aaa
test
sub
sub
je
mov
dec
add
fs
cwtl
inc
jg
out
pop
mov
adcb
push
scas
insl
andb
jns
dec
sahf
fs
popa
add
jae
xor
jecxz
jb
xor
je
sahf
xor
cltd
push
push
mov
jo
and
test
lods
fs
inc
int
xchg
test
sub
das
movsl
sbb
push
and
popa
cs
je
push
push
cmp
inc
pop
xchg
push
sbb
aaa
and
mov
add
pop
cmp
paddsb
sub
jg
push
mov
imul
sbb
sbb
jg
rol
xchg
and
sti
arpl
je
loop
cmp
jb
or
inc
jge
lcall
arpl
andb
mov
out
add
mov
xor
scas
lods
insb
insb
cmp
mov
sub
xor
dec
fnstenv
dec
or
sub
loopne
push
lock
popa
mov
push
mov
sub
xchg
pop
out
push
jl
mov
loop
gs
shl
xor
or
out
pmulhw
inc
mov
push
stos
bound
xchg
pop
pushf
lret
xlat
jnp
pushl
mov
in
sub
inc
in
jp
xchg
xor
mov
cwtl
inc
or
pop
mov
jmp
dec
or
sub
dec
rcrb
push
sarl
sub
popf
sub
mov
lcall
imul
imul
pushf
outsb
fmuls
push
test
clc
push
pop
rcrb
popa
pop
pusha
mov
inc
lcall
imul
dec
ds
jae
popf
and
dec
adc
sub
xlat
int3
test
sub
insb
mov
pushf
aam
push
add
sub
xor
lock
repz
mov
dec
xchg
out
je
mov
aam
sbb
sbb
dec
stc
jg
or
sub
push
ss
imul
out
dec
and
orb
dec
imul
xchg
int
stos
jae
mov
nop
xchg
ror
mov
xchg
es
into
push
pop
inc
xor
fstpt
mov
jns
mov
subb
lret
push
sbb
mov
pop
push
lcall
cltd
mov
jle
add
push
sahf
adc
cmp
or
mov
testb
and
call
stos
pop
jmp
add
adc
cmp
add
mov
into
push
enter
lahf
pop
inc
aam
cmp
adc
shll
xchg
mov
loope
xor
xchg
pop
popa
in
out
int
fstl
push
call
incl
jmp
jns
add
aaa
insl
pop
adc
jo
js
xchg
test
cmp
bound
ljmp
xor
mov
jns
or
jecxz
jno
pushl
icebp
es
push
ds
jle
or
outsb
cmpl
shrb
and
pop
cmc
stos
push
std
mov
les
inc
inc
shlb
fldt
sub
ret
dec
je
icebp
or
pusha
cmp
pop
stos
pop
xchg
jae
rcl
cmc
jo
xchg
adc
mov
das
movsl
divl
int
inc
enter
push
dec
add
lret
pushf
cmc
jmp
push
into
add
push
jbe
lock
xchg
dec
lahf
mov
sub
sbb
int
shlb
roll
enter
inc
out
dec
push
dec
xor
sbb
jecxz
jo
fwait
or
mov
jno
gs
mov
rolb
clc
mov
mov
pusha
movsl
popf
jnp
mov
dec
sub
mov
sbb
xchg
pop
imul
sarb
negl
xchg
sbb
jecxz
filds
pop
das
adcl
les
sub
adc
pcmpeqb
sbb
dec
mov
pop
sbb
cli
mov
push
sarb
fwait
or
xor
xlat
xchg
imul
sbbl
mov
pop
mov
sti
cld
sti
loope
lcall
cmp
cmp
xchg
push
mov
cmp
outsb
loop
jecxz
push
cltd
int
scas
int
iret
cs
mov
in
cli
out
and
pop
add
scas
cmp
dec
jge
jne
and
leave
cmp
and
enter
loopne
push
xor
movl
daa
dec
rolb
xchg
sbb
mov
mov
xor
repz
mov
pop
and
repnz
jp,pn
mov
into
and
lret
push
add
stos
pop
pop
xor
xlat
dec
mov
fdivr
lods
mov
mov
lods
stc
movsl
xchg
mov
aad
loopne
popa
push
ss
sbb
push
push
pop
and
sub
jg
leave
cmpsb
push
sub
cmp
test
jmp
adc
cmp
cld
repnz
shll
xor
stos
test
add
pop
outsb
mov
fists
imul
repz
repnz
jmp
jo
sbb
fsubs
xchg
jl
hlt
push
push
mov
adc
push
xor
loopnew
push
pop
les
fwait
mov
or
mov
mov
popf
sub
mov
stos
sti
out
mov
pushf
jle
add
jmp
cmc
sbb
jle
add
loop
xlat
xlat
cmp
lret
cmp
xchg
sahf
repz
movsl
fs
dec
pop
out
aaa
nop
jb
movsb
xor
inc
mov
dec
pop
pop
add
fadds
movsb
xchg
ds
cs
sub
xchg
scas
out
sub
mov
mov
iret
jne
repnz
stos
jns
ret
push
and
out
dec
ret
fisubrl
mov
and
mov
xchg
xchg
pop
mov
xchg
xor
cmp
sub
scas
mov
fldenv
mov
sbb
mov
dec
sbb
sub
adc
or
push
ljmp
mov
std
icebp
loope
les
push
aam
rclb
mov
mov
cltd
jle
rcll
aas
je
sub
repnz
lock
out
xchg
xor
dec
lea
mov
pop
test
scas
ficomps
mov
ret
je
ja
sub
jge
add
mov
or
insb
pop
out
stc
test
push
paddusw
jge
adc
imul
fstps
sub
inc
pop
stos
negl
outsl
scas
cmp
sbb
xor
fldt
les
jns
mov
imul
dec
pop
mov
ds
testl
adc
int3
mov
cmp
mov
or
push
cmp
dec
cltd
loope
mov
jne
lea
cli
and
mov
cwtd
scas
das
cltd
mov
sarb
into
mov
pop
or
push
dec
les
aaa
fcoms
or
pop
mov
loop
out
paddsb
lcall
jo
in
sbb
loope
movsb
inc
out
fst
dec
sbb
imul
sub
sbb
fs
fchs
pop
lds
icebp
pop
mov
cmp
push
jne
dec
in
es
in
in
jnp
daa
dec
lds
gs
outsl
xchg
cs
ror
sbb
insl
fwait
cmp
mov
or
das
mov
mov
push
pop
call
loope
xor
cmc
dec
add
cli
sbb
loope
lcall
in
jmp
repz
mov
sbb
hlt
xor
pop
pop
lds
ret
xor
int
mov
aaa
in
fbld
mov
movsb
fdivs
adc
subb
pop
dec
and
lcall
shll
push
in
rcll
call
dec
and
sbbb
out
in
bound
lods
sbb
pusha
enter
xor
lret
pop
cmp
mov
das
push
push
ret
loop
dec
and
mov
adc
pop
jp
scas
cmpsb
dec
jno
sbb
adc
jp
fdivrl
push
push
dec
pop
clc
xor
clc
pop
insb
sbb
repnz
mov
outsl
mov
push
sub
dec
xlat
and
fstp
pop
adc
mov
fidivrs
jmp
jecxz
and
inc
sahf
xor
cmp
mov
mov
mov
sbb
or
ds
out
mov
dec
lock
pop
cmp
adc
iret
sub
dec
mov
inc
cmp
dec
jne
shrl
dec
ret
push
inc
xorl
int
dec
cs
dec
push
in
mov
cs
dec
xor
ret
xorb
add
insl
add
jp
clc
pop
xchg
push
aad
addr16
mulb
lcall
xor
cmc
bound
leave
jno
dec
sub
cmpsb
add
cwtl
cs
ljmp
jnp
cmp
dec
in
sub
mov
data16
pop
lret
es
sub
push
and
ljmp
lea
xchg
cmpsb
in
inc
outsl
insw
les
cmpsb
fcomps
inc
je
add
mov
iret
push
xor
ja
mov
out
lea
push
addr16
xor
and
enter
and
xchg
adc
mov
add
outsb
subb
sbb
dec
xor
push
daa
cmp
xor
mov
sub
cs
cmpsl
cmp
mov
xor
in
jmp
dec
pusha
repz
sub
and
mov
cmp
jmp
pop
inc
push
pushf
cmpsb
pop
pop
inc
or
dec
dec
mov
insl
mov
dec
xchg
adc
pusha
mov
lret
jnp
dec
jne
fwait
and
cmp
xchg
mov
invd
inc
sub
cmp
iret
lds
out
les
movl
and
mov
popf
jns
inc
sub
scas
xchg
popf
jbe
pop
repnz
testb
xchg
mov
out
cmpsb
jmp
sub
sub
sub
dec
cmpsb
push
xchg
fidivs
jg
test
pop
jnp
cli
adc
frstpm(287
dec
out
testb
add
cmp
mov
and
ficoml
test
and
scas
outsl
pop
cmp
cwtl
pop
pop
repz
xchg
and
sbbb
jb
icebp
sti
pop
je
add
pop
jmp
cmp
clc
xchg
int3
push
icebp
xlat
or
out
mov
orb
mov
mov
adc
dec
andb
xchg
lods
jns
imul
or
mov
in
push
dec
push
icebp
adc
jmp
clc
add
test
push
xchg
mov
cmpsl
movsl
push
or
out
pop
push
mov
or
test
inc
movsb
je
mov
popa
or
inc
mov
ret
test
int
daa
xchg
repz
push
and
mov
mov
fsubrs
shll
mov
ret
sbb
cli
fwait
inc
int
int3
cli
add
pop
notb
rolb
ja
push
daa
lahf
fidivl
insl
push
push
jmp
or
shr
je
cltd
push
sbb
je
push
sub
dec
mov
nop
setae
cmp
xchg
dec
mov
push
scas
xchg
or
ljmp
in
push
pop
loope
or
push
lret
cmpsb
out
mov
add
jbe
pop
jge
or
sbbb
add
sub
fwait
ljmp
jnp
jp
xor
fistpll
popf
mov
outsl
push
sbb
mov
faddl
divl
dec
xor
arpl
mov
mov
sbb
out
inc
lds
push
inc
xchg
dec
cs
rcl
cltd
dec
sbb
mov
mov
cmc
push
rcrb
push
movsb
lods
inc
push
adc
add
sbb
push
cmp
enter
jle
mov
fwait
lods
pusha
mov
add
imull
mov
or
mov
dec
dec
xor
mov
pop
sub
lret
xchg
add
push
rcrb
sti
test
scas
es
scas
xchg
pop
jg
xchg
add
inc
jns
incl
dec
xchg
mov
xchg
rcll
cmp
nop
aam
aad
je
xlat
jmp
adcb
cmpsb
cmp
hlt
in
xchg
movsl
xchg
jge
xchg
imul
cmpsl
fsubrp
mov
lock
repnz
out
ja
jge
test
mov
mov
sub
and
out
push
gs
cmp
inc
pop
xchg
mov
mov
ljmp
mov
fwait
js
out
in
cmpsb
mov
push
aaa
add
pop
sarl
into
pop
mov
bnd
push
xchg
pop
lcall
stos
pusha
cli
pop
xor
push
jno
cld
pop
mov
or
es
bound
lods
push
lea
pushf
adc
hlt
lret
aas
jb
in
shlb
pop
inc
inc
or
add
cltd
cld
stc
or
hlt
jo
imul
push
adc
clc
push
mov
xor
xchg
push
test
mov
add
sub
inc
rorb
pop
loope
push
xchg
mov
int
ss
push
push
hlt
and
xor
in
cmpsb
aam
xchg
cmp
repz
mov
cmp
xchg
push
add
pusha
jb
adc
or
push
outsb
out
inc
xcrypt-ctr
cmpsl
sbb
das
and
mov
jecxz
roll
pop
sub
jo
mov
andb
outsb
mov
outsl
int
pop
pushf
leave
int3
push
push
mov
pop
xor
aaa
sub
add
cmp
sbb
sub
and
cs
dec
nop
adc
insl
pop
das
dec
add
mov
or
xchg
xor
outsb
add
inc
lds
es
aas
sbb
out
push
shlb
add
dec
repnz
scas
inc
inc
cmpsl
pushf
mov
sub
pop
cld
data16
adc
push
adc
cli
push
adc
sbb
mov
inc
imul
mov
cmc
xchg
adc
add
push
data16
or
jno
jl
lahf
dec
push
inc
ss
jge
into
pop
shrb
jp
cmp
inc
inc
inc
or
mov
mov
sub
data16
jmp
lahf
sub
cltd
mov
cltd
mov
outsb
mov
cmpl
popf
ret
fstpl
push
push
into
jp
lcall
nop
enter
hlt
int
pop
rcrb
pop
or
adcb
rep
notb
sub
fidivrl
pop
mov
data16
adc
loope
jne
lods
imul
jb
aas
mov
inc
sbb
testl
mov
push
insl
das
out
addr16
inc
mov
loopne
inc
stc
out
lahf
jno
inc
stos
leave
add
mov
shr
inc
mov
inc
sbb
test
pop
or
fwait
cmp
sub
enter
loop
and
jb
mov
icebp
repnz
push
int
push
ficomps
xchg
lret
aam
ret
outsw
or
mov
jge
sbb
mov
popa
jg
sbb
or
push
loope
xchg
jnp
mov
sbb
es
clc
pop
fldenv
xlat
mov
adc
lret
push
pop
inc
or
ljmp
pop
sbb
repnz
xchg
jnp
cld
mov
daa
test
cmp
and
leave
and
pusha
push
rclb
xchg
xor
repnz
sbb
bound
stos
dec
inc
lods
mov
adc
mov
push
shll
cmp
cltd
add
ja
inc
mov
not
lret
mov
add
call
lea
sahf
mov
in
jp
nop
popf
leave
cmp
mov
sti
cmc
cmp
or
loope
mov
arpl
xor
aam
subl
inc
adc
aas
pop
push
js
or
leave
cmp
pop
mov
lcall
fsubs
int
add
in
fwait
xchg
fnstenv
push
jge
push
fwait
add
add
mov
or
pop
addl
aas
inc
clc
fdivrl
push
or
jo
sub
cwtl
aaa
mov
cmp
in
scas
insb
push
push
or
std
pop
jge
aas
das
jg
out
pop
sub
sbb
sub
lret
fistps
ljmp
mov
icebp
xchg
add
pusha
jne
sbb
inc
repnz
pop
sub
mov
sahf
push
adcl
mov
cld
adc
lds
xchg
mov
popl
lods
dec
into
xchg
in
inc
cmpsl
mov
jmp
or
inc
jmp
pop
stc
js
nop
scas
notb
mov
xor
or
push
inc
jmp
addr16
xchg
push
push
popa
jecxz
lock
push
mov
mov
pop
and
test
jp
ljmp
cmp
dec
jmp
fwait
jle
sarb
sbb
xor
std
lods
jge
shrl
test
int3
repnz
push
shr
shll
and
outsb
jbe
and
mov
mov
sbb
aam
pop
in
fmul
push
ret
dec
sub
pop
in
out
inc
inc
out
and
adc
mov
stc
and
test
sub
mov
fidivrs
mov
nop
aas
inc
jo
mov
divb
xchg
xchg
mov
sbb
push
push
aas
sbb
mov
push
lahf
sub
mov
cltd
cmc
icebp
push
stos
sub
nop
sbb
lock
mov
movsl
pop
mov
test
cmc
jnp
inc
fdivs
insb
std
lret
icebp
sub
into
icebp
and
addr16
jl
js
inc
push
aad
js
or
in
daa
xchg
data16
fwait
fwait
in
jb
hlt
cmp
cmpsl
xchg
pop
add
icebp
fmul
dec
stc
xor
dec
mov
hlt
mov
add
push
jo
std
sbb
repnz
push
mov
jle
cmp
pop
notb
pop
fdivl
sub
mov
push
div
ss
pop
mov
mov
cltd
push
fidivl
push
cmp
sub
dec
icebp
adc
pop
pop
outsb
arpl
mov
cwtl
dec
daa
sahf
ficoms
jb
clc
test
ret
cli
insb
add
cmp
roll
pop
dec
orl
js
fidivrl
push
out
aam
loop
and
loopne
out
scas
and
std
stc
cli
mov
sbb
pop
stc
movsl
imul
dec
xor
testb
mov
cltd
inc
sub
cmp
inc
sbb
cmc
sbb
call
jne
dec
mov
jo
sahf
insl
xor
xchg
xchg
mov
sti
loop
in
push
test
in
es
xor
aad
xor
popf
mov
repnz
shlb
test
sub
mov
dec
cwtl
push
jmp
movsl
sub
insb
mov
mov
outsb
xchg
mov
and
ret
lods
inc
aad
pop
icebp
inc
push
jno
pop
jmp
jg
je
lock
add
jo
int
out
mov
jnp
xorb
sub
int
jmp
xor
jmp
subl
inc
inc
inc
icebp
lcall
mov
pop
xlat
push
push
sub
sub
out
mov
inc
add
popa
sbb
mov
push
push
aad
pop
adc
cmp
bound
and
or
in
cltd
mov
leave
fistl
mov
or
push
cmc
call
cmp
sub
cmpsl
popa
push
jle
push
mov
shl
mov
imul
xchg
adc
shl
jge
loopne
lcall
out
mov
pop
push
xor
ja
gs
lret
incb
and
cmp
cmp
xor
scas
bound
inc
clc
push
mov
lock
push
push
test
adc
jl
mov
in
pushf
cmc
clc
jae
lret
mov
mov
xor
push
push
ret
xchg
lea
mov
mov
scas
sbb
push
popa
jnp
movsl
sub
clc
adc
cmpsl
addb
xchg
iret
xor
imul
test
mov
scas
inc
mov
xchg
add
push
inc
loope
fmuls
mov
jnp
mov
xlat
fmull
cld
and
push
mov
add
es
mov
lock
fsubrl
out
fcmove
jl
negb
hlt
bound
push
push
or
jge
mov
cltd
dec
aas
pop
test
fwait
rcl
xchg
fcmovb
pop
jnp
popa
or
fcoml
popa
pop
mov
adc
cwtl
dec
xor
dec
addb
cmp
lods
xchg
sti
add
and
inc
add
test
sub
dec
sbb
dec
mov
and
aad
pop
mov
and
das
dec
mov
dec
add
inc
push
call
out
cmp
pop
int3
call
bound
fsubrp
lods
cmp
sbb
pop
out
jnp
outsl
mov
cltd
data16
dec
pop
or
in
xlat
testb
push
jecxz
pop
gs
pop
dec
mov
pop
adc
pushf
stc
stos
mov
inc
xchg
mov
fstpt
adc
inc
and
inc
rolb
mov
xor
popf
push
aaa
mov
stos
jo
bsf
aas
cmp
pminub
out
pop
dec
scas
outsl
mov
adc
aaa
sahf
add
int
add
inc
jle
push
jne
jb
hlt
scas
push
fmul
and
add
stos
mov
or
pop
and
cmpl
push
sbb
incb
mov
push
fnstsw
dec
dec
push
pushf
movsb
int3
mov
iret
das
test
pop
sahf
mov
push
in
movsl
push
cwtl
mov
add
ficompl
mov
out
mov
ss
pop
out
pop
sahf
mov
xor
jbe
sarl
fiaddl
out
in
or
push
sub
jg
jae
clc
add
push
inc
out
xor
xor
js
xlat
addb
stos
aam
outsl
cmp
pop
into
aad
jo
stos
adc
mov
shlb
lret
out
addr16
and
mov
pop
jg
add
insl
and
dec
pop
cmp
jo
sbb
pop
xor
fisubrs
cld
dec
dec
jge
add
fbstp
out
and
sub
mov
sub
popf
lahf
xchg
jmp
sarl
lds
adc
sub
sti
mov
stc
dec
mov
int
push
or
enter
nop
lock
fisttpll
pop
out
je
push
subb
xor
pop
ss
mov
ss
dec
test
dec
mov
push
pop
mov
ja
push
cmp
cmp
nop
cwtl
mov
cmp
call
add
pop
cli
mov
repnz
test
lods
jle
or
push
xchg
inc
mov
push
fdivl
mov
pop
adc
xor
call
push
mov
sbb
aam
xor
test
aam
pop
or
or
idivb
fdivrs
and
add
push
in
cmpsl
mov
lahf
mov
inc
add
sbb
pusha
fxch
daa
sbb
jl
xor
aam
jo
jmp
push
dec
mov
push
mov
rcr
pop
jne
sub
cmp
ret
loopne
pusha
sub
aam
cmp
pusha
sbbb
jmp
sbbw
sub
jne
and
push
xchg
xor
fadds
mov
nop
adc
movsl
cwtl
push
ja
data16
mov
rorb
lds
ss
xor
aaa
jge
aam
ret
cwtl
jge
and
jbe
outsb
dec
inc
adc
loop
loopne
mov
dec
dec
jp
addr16
lahf
add
mov
mov
jle
mov
sub
push
adc
push
dec
cltd
mov
jp
lret
or
popf
into
popa
pop
outsb
iret
xlat
xor
pop
pop
jne
mov
std
imul
cwtl
rorl
and
xchg
jno
test
mov
and
ljmp
jnp
and
dec
dec
xor
mov
incb
movsb
lret
mov
xchg
popa
idivl
dec
sarb
in
xchg
int3
push
xchg
fmuls
or
scas
and
out
jmp
imul
lcall
leave
cmp
call
aaa
fwait
stos
popf
aas
sahf
pop
and
pop
dec
out
mov
xor
iret
lds
fisubrl
call
repnz
ret
xchg
pop
dec
lds
cs
das
int
xor
jmp
or
jnp
pop
jo
xor
std
mov
xchg
enter
pop
cmpsb
je
icebp
dec
subl
jl
test
nop
in
test
nop
das
in
mov
je
or
cmp
xor
lods
loope
jecxz
jo
test
jns
ljmp
testb
mov
sbb
sbb
push
jge
dec
mov
inc
xchg
cmp
push
aas
mov
mov
mull
xor
cmp
mov
rcll
and
loopne
sarl
dec
mov
sarl
xchg
adc
mov
jg
push
xor
and
dec
jecxz
sahf
add
pop
jbe
mov
dec
mull
ss
bound
imul
adc
add
push
jge
mov
in
mov
into
or
pop
and
mov
stos
add
sti
xor
loope
lret
cli
lahf
popa
ljmp
sbb
push
incl
cld
sbb
test
fmuls
jbe
je
mov
jmp
dec
jbe
xchg
fstl
or
cld
mov
ja
ljmp
fdivrp
inc
jl
sbb
gs
xor
movsb
and
fcompl
mov
push
mov
cmpsl
sbb
dec
xor
mov
stc
std
sahf
mov
outsl
sbb
movsl
lds
push
aas
xor
jns
and
in
mov
sub
mov
loopne
rcll
into
pop
out
mov
mov
out
lock
in
sub
inc
icebp
push
sub
mov
push
lcall
sub
punpcklbw
cmpsl
rolb
out
aas
xor
adc
jp
add
ss
or
fldcw
rcr
adc
cmp
push
sbb
pop
lret
aam
stos
out
pop
push
loope
int3
push
loopne
and
pop
cmpsl
mov
lret
shll
xchg
inc
fwait
cmpsl
ja
sbb
cmp
push
mov
into
ds
test
test
loop
das
int3
lea
mov
pop
mov
jae
mov
test
and
inc
lea
sti
jmp
stos
out
imul
loopne
sbb
inc
mov
iret
rcll
xchg
in
jecxz
adc
xlat
cs
push
sbb
addb
xlat
movsb
loope
pop
fsubs
sub
mull
stos
movsl
sub
insl
add
sbb
fsubs
leave
test
sub
out
dec
stos
inc
push
pop
outsb
out
sub
push
xchg
popf
fs
lea
popf
int3
hlt
lret
push
fcmovu
push
adc
fmull
ljmp
sbb
mov
lahf
mov
sar
xchg
inc
call
cmp
push
add
fwait
push
sbb
lahf
fmuls
shlb
test
pop
mov
iret
lcall
insb
fucomip
mov
jnp
sbb
sti
dec
mov
gs
dec
cmc
adc
or
cmp
xlat
cmpw
jmp
xorb
int3
and
mov
js
mov
jmp
add
dec
mov
es
je
mov
notb
nop
mov
aaa
out
xor
cmp
shlb
hlt
pop
xor
adc
loope
fdivs
std
out
fbld
lret
push
jl
leave
sub
out
xchg
mov
mov
jnp
xchg
ret
cmp
inc
adc
xor
sbb
dec
adc
out
into
xchg
neg
inc
sbb
lcall
sbb
xchg
xor
add
aas
sbb
adc
int3
pop
cmpsl
add
mov
jp
mov
cld
fidivs
lahf
jmp
sub
adc
push
sbb
dec
add
pop
dec
inc
sar
fmull
mov
mov
cmp
or
xchg
push
in
das
cmp
pop
loop
inc
out
or
mov
fimull
imull
jns
loope
and
test
or
xchg
ja
ficoml
inc
daa
mov
scas
loopne
addl
into
mov
pop
xor
cmc
cmp
inc
pop
cmpsl
mull
dec
and
jge
iret
pop
mov
rolb
cmp
call
mov
in
rcrl
in
mov
jge,pn
dec
popa
push
sbb
mov
rorb
outsl
mov
mov
xor
xchg
mov
pop
push
outsl
add
stc
ljmp
mov
pop
in
fwait
pop
pop
xor
out
mov
leave
fsub
add
and
es
cs
lret
jae
or
dec
fnsave
xchg
aas
push
out
and
mov
mulb
loope
mov
push
sub
sti
xchg
cmc
out
scas
andl
test
imul
daa
insb
lret
lds
inc
fisubl
sub
addr16
leave
xchg
jae
inc
mov
aas
push
cmp
sarl
xchg
push
inc
in
jae
jmp
dec
fs
jno
rorb
add
mov
scas
aas
ja
sub
push
stos
pusha
dec
push
mov
mov
imul
jo
icebp
mov
jl
xor
fwait
sub
pop
jne
adc
leave
pop
adcl
jo
sbb
xor
cmp
mov
cmp
or
lcall
cmc
add
push
ljmp
or
fsubl
ljmp
bound
dec
fwait
add
in
cmp
scas
xlat
xchg
add
pop
das
pop
int3
inc
mov
dec
es
cmpsl
repnz
call
push
mov
jge
push
out
div
pop
scas
std
jl
insb
in
push
xchg
ss
jle
xor
cltd
and
add
cmc
push
jo
movsb
xchg
mov
sbb
test
sub
pop
test
jns
movsl
xchg
pop
xchg
insb
add
imul
test
repnz
in
sahf
fnstsw
and
loopne
inc
xchg
jmp
icebp
ljmp
dec
or
xor
or
push
int
loopew
mov
lret
xor
sub
js
push
xor
jle
sbb
mov
jb
dec
push
movsb
cmp
xchg
addr16
or
jns
aam
xor
adc
jae
movsb
aas
in
jno
pop
and
push
dec
jmp
jo
xlat
jl
movsl
cmc
scas
mov
ja
jnp
jb
repnz
icebp
rclb
addr16
and
pop
leave
js
xor
sbb
xchg
inc
push
cmp
add
fistpl
iret
inc
mov
push
jb
sbb
cld
inc
xchg
pop
push
mov
sub
or
xchg
xchg
test
imul
or
jno
insb
loop
lcall
inc
fisubrl
fimull
lret
push
sub
xchg
fistpll
inc
scas
bound
add
out
fsubr
xor
adc
jo
or
mov
stc
mov
and
cmpsb
insl
cmp
insl
ja
sbb
iret
jmp
jge
or
insb
mov
mov
fisubrl
dec
fldcw
xor
ror
shll
jg
cs
insl
pusha
pop
add
dec
cmp
xor
iret
inc
mov
push
addb
stos
rclb
or
jmp
lret
sahf
jb
loop
icebp
mov
gs
sbb
stos
mov
jp
test
jge
divl
sbb
scas
mov
xchg
loope
movsl
push
xor
pushf
cmp
jmp
popf
pop
ss
cmp
jno
inc
push
or
lcall
jl
push
lcall
xchg
mov
mov
inc
cld
mov
fldcw
notl
xorl
jle
mov
mov
movswl
ljmp
adc
or
add
add
add
aad
xor
getsec
xor
cmpsl
add
movsb
mov
rorl
jle
add
xchg
pop
loopne
jle
aam
je
movsl
mov
and
xchg
xchg
dec
xchg
test
cmp
bound
mov
or
ret
inc
add
dec
lret
hlt
arpl
stc
ja
ss
xor
cmpb
insb
inc
push
jae
punpckldq
push
push
hlt
scas
jl
mov
scas
cmpsl
and
xor
mov
and
cwtl
jne
adc
dec
cmp
mov
and
pushf
adc
je
stos
insb
jbe
and
jne
in
aas
shrl
clc
mov
cwtl
and
adc
hlt
xchg
lods
sub
testl
and
cli
pop
sbb
jmp
xlat
push
sbb
int3
add
hlt
aam
sbb
pop
les
xchg
test
shl
mov
rol
rcrb
push
xor
data16
xor
dec
cmpsb
or
push
pop
rorl
mov
or
adc
push
mov
test
cltd
pop
cmp
ret
movsb
push
test
stos
lds
lret
sub
sub
push
cmp
leave
sbb
out
pop
mov
mov
rcr
xchg
mov
xchg
jge
mov
sbb
dec
repz
mov
adc
hlt
jb
cmp
loop
shll
aas
jns
jnp
mov
cmp
ret
cs
cmpsb
dec
pop
lods
cwtl
xor
aas
daa
or
mov
xor
and
pusha
inc
jne
cmp
movsl
insb
les
cli
and
mov
scas
jns
sub
push
xor
test
int3
pop
sub
nop
ret
xchg
stos
in
and
or
fldenv
popf
mov
cld
xor
push
mov
cmp
cmp
sub
adc
sbb
fidivl
pop
lods
ljmp
inc
push
sti
fisubl
mov
les
cmp
mov
int
sub
loop
lods
and
pop
inc
cmp
adc
pop
fistpll
and
insl
bound
imul
clc
ret
cwtl
pop
pusha
xchg
push
in
fisttpl
mov
ret
and
ds
xchg
mov
int3
push
pusha
pop
jno
jg
popf
mov
jmp
cmp
mov
add
dec
adc
imul
rorb
movsb
lds
scas
ds
es
dec
ja
int3
gs
lods
xchg
sbb
cmp
stos
or
add
adc
fsub
sbb
jmp
mov
test
adc
xor
dec
cs
sub
movsl
addr16
imul
mov
test
adc
sub
sub
mov
pop
out
cmc
stos
add
push
inc
jg
sar
xor
pop
pop
int
fcomip
adc
jo
arpl
mov
push
sahf
int
std
popa
mov
orb
dec
mov
inc
fdivrl
mov
into
jp
inc
mov
rorl
inc
ja
push
mov
add
sbb
pushl
sub
call
dec
pop
icebp
dec
mov
or
ss
dec
outsl
push
sbb
or
pop
int3
inc
aas
pop
dec
push
adc
sbb
cmp
out
aad
inc
lods
mov
pop
inc
mov
sub
jg
sub
sarl
daa
lahf
add
shll
add
mov
insl
push
test
rorb
or
lea
push
pop
jl
push
xchg
ret
mov
cmp
lcall
pushf
pop
add
sbb
clc
pop
jle
xor
mov
aas
push
lods
lret
movsb
lea
adc
mov
fs
or
std
sub
cmpb
xlat
shlb
push
test
mov
cmpsb
or
push
jecxz
test
adc
loop
pop
jp
mov
and
cmpl
int3
jecxz
cmp
mov
push
pushf
ret
imul
fcomp
pop
outsb
stos
pop
xor
outsl
and
pusha
mov
jb
mov
sub
lret
mov
push
scas
lock
mov
mov
dec
enter
out
push
test
mov
sub
aam
xor
adc
enter
fbstp
jbe
arpl
xchg
scas
mov
arpl
sbb
sahf
mov
inc
lds
jp
lods
dec
cs
das
adc
dec
sbb
mov
fwait
imul
adc
mov
push
sti
loop
cwtl
cmp
mov
mov
out
clc
testb
cltd
jno
sbb
in
pop
push
insl
lahf
out
mov
jecxz
mov
nop
outsl
pop
pop
cmp
sbb
mov
aaa
and
test
xor
jl
mov
in
dec
std
cmpsb
icebp
into
pushf
pop
hlt
jl
or
or
xor
das
cmpsl
arpl
mov
nop
sahf
hlt
flds
pop
or
scas
mov
fbstp
inc
cmp
mov
and
pop
out
xchg
xchg
test
add
push
popa
fidivs
rorl
cmp
mov
mov
stos
fldl
je
sti
or
jb
je
scas
jb
lret
mov
icebp
add
cld
icebp
in
xchg
xchg
sar
dec
xchg
mov
out
gs
lcall
popl
or
adc
xchg
mov
in
and
loope
inc
cmp
add
adc
dec
push
cli
sbb
stos
into
enter
ret
add
pop
pusha
jae
cmp
addr16
push
inc
cmp
jnp
nop
adc
outsb
aas
ret
add
jno
stos
roll
add
cmp
and
push
jl
stos
dec
popl
jge
sbbl
cwtl
out
sbb
adc
bound
sub
jae
jo
daa
jge
lret
hlt
lcall
pop
mov
add
movsl
cmpsb
sahf
sub
inc
push
xor
movsl
xchg
stc
inc
test
and
popa
pop
cmc
pop
mov
mov
xlat
xor
pushf
shll
jo
cmpsb
ds
xchg
aam
and
lahf
icebp
add
ret
mov
add
xor
scas
sbb
aad
xchg
in
mov
addl
std
jmp
jge
cmp
pop
inc
insb
pop
fstpl
movsb
lea
mov
aam
pop
xchg
lea
test
data16
jle
icebp
sarb
and
movsb
outsb
into
adc
andnps
pop
orb
jmp
popa
sub
push
popf
dec
mov
push
and
lret
push
sub
ljmp
mov
mov
std
pop
or
fildl
jl
mov
lock
outsb
inc
aad
pop
fs
lret
jmp
inc
sbb
sbb
movsl
adc
xchg
ret
mov
clc
ffree
call
push
fcompl
mov
stos
sub
insl
jecxz
push
and
cmp
cmp
sarb
cmp
add
mov
popf
test
mov
leave
aas
lret
inc
mov
fistpll
mov
sub
jmp
cmp
aad
jl
sub
xlat
arpl
loope
inc
inc
inc
mov
fadd
pop
lea
movsl
out
mov
push
push
arpl
sti
inc
aad
and
mov
movsb
inc
add
add
or
pop
ret
fwait
in
and
aad
and
outsl
push
pop
rcl
les
fldcw
insl
sbbb
sub
inc
arpl
shll
test
xchg
enter
out
out
or
xchg
ror
xchg
add
adc
push
xchg
or
cs
cmp
jmp
loop
rcll
adc
ds
add
loop
shrb
inc
addb
out
adc
inc
imul
jecxz
mulb
lods
sbbb
pop
into
fistps
jns
xor
loopne
sbb
mov
sbb
fisubl
dec
mov
aas
mov
lds
jg
test
inc
cs
fidivrl
lret
inc
mov
xchg
fsubl
mov
dec
popa
loop
lea
dec
push
add
shlb
jae
jns
sbbl
and
nop
das
ret
pop
fsubs
lods
cmp
push
outsl
ljmp
add
ret
adc
mov
fdivs
ret
add
cld
pop
dec
scas
mov
stos
out
das
xlat
fstl
ss
mov
test
aas
push
push
jle
cs
jg
sti
out
jl
stos
loope
push
pusha
out
mov
or
cld
pusha
mov
xlat
add
icebp
fucomi
mov
shr
fistpll
dec
lret
inc
leave
notb
jecxz
lock
arpl
pop
xchg
dec
add
filds
add
sbb
sbb
stos
icebp
repz
aad
cmp
add
mov
add
cmp
inc
out
imul
aad
add
xchg
movb
imul
mov
js
sbb
insb
aas
fsubrl
or
push
adcb
adc
and
andb
mov
mov
bndldx
fdivl
daa
scas
ja
jg
jo
clc
lods
test
js
cld
xchg
btr
sbb
jnp
lds
ljmp
dec
cmp
fimuls
inc
and
or
ret
imul
jb
pusha
cltd
pop
scas
add
shr
mov
dec
hlt
push
push
mov
adc
push
push
rcl
push
repnz
int
inc
sbb
bound
jp
arpl
repnz
mov
sub
call
aaa
je
aam
sbb
push
pushf
mov
cmc
mov
loop
push
pop
mov
or
and
adc
xchg
into
hlt
fmuls
fnstenv
ret
out
leave
fs
cmpsl
dec
sbb
fstpl
mov
xor
mov
add
add
mov
es
xchg
pop
pop
pop
sub
push
popa
sbb
push
sbb
push
jae
pop
nop
stc
stos
push
ss
scas
dec
movl
mov
movsb
loope
sahf
xchg
sub
adc
fs
pusha
andb
call
repnz
lea
lret
ret
adc
jbe
mov
mov
sti
lods
hlt
mov
insb
aad
flds
cmp
xor
inc
mov
or
push
mov
lcall
sbb
cmpsb
sbb
add
inc
and
cmpsb
add
lods
stos
out
mov
mov
mov
add
push
cld
into
xchg
xchg
mov
push
mov
xchg
in
cmp
aad
sub
mov
adc
adc
sahf
stos
pop
shll
out
ss
fcomps
mov
mov
shl
out
ficompl
rcr
repnz
movsb
sub
xchg
lds
enter
or
mov
test
cmp
cmpsb
mov
pusha
mov
and
cli
les
icebp
xor
outsb
xor
xor
add
out
je
and
xchg
or
xchg
arpl
bound
aad
insb
dec
subb
jmp
dec
and
add
or
and
xchg
mov
sub
push
jecxz
aam
imul
mov
aaa
add
sbb
push
rorl
mov
pop
test
push
fdivp
sub
popa
pop
xor
out
mov
xor
inc
les
hlt
mov
imul
leave
call
icebp
popf
pop
outsl
out
aas
sub
rcll
fadd
mov
shrb
add
and
je
xchg
imul
aas
mov
xlat
push
in
fs
or
push
test
dec
mov
xchg
inc
and
ffree
push
sbb
sbb
jo
xchg
mov
mov
sub
fcmovu
jne
hlt
pop
jp
mov
pop
push
lahf
lods
add
int3
jg
roll
pop
pop
cmp
mov
ret
lahf
mov
inc
pushf
stc
push
inc
push
add
mov
jmp
mov
movsl
iret
sarl
in
enter
bound
push
popa
pushf
push
and
fcomps
mov
xor
fidivrs
adc
test
adc
xor
sarb
fldenv
imul
adc
push
push
dec
jnp
mov
mov
out
fisttpl
shrl
or
jl
in
add
cmp
sub
sbb
cmp
repz
mov
sbb
mov
ficompl
icebp
jo
fsts
cltd
andl
mov
xchg
mov
dec
dec
cmpsl
xchg
push
mov
mov
mov
cmp
xchg
loopne
js
push
imulb
mov
adc
stos
rcll
push
fmuls
mov
les
and
push
cli
pop
inc
testb
addr16
pop
xor
pop
sarb
mov
or
cli
ds
push
inc
pop
ret
adc
ret
xchg
cmc
xchg
std
daa
fsub
mov
push
xchg
pusha
data16
mov
bound
cmp
movsl
loop
popa
lea
mov
sub
jmp
outsl
jecxz
xor
adc
dec
sbb
cmc
ja
pop
pop
cli
push
mov
daa
js
sbb
mov
mov
fsubp
add
pop
jae
sub
sahf
or
out
js
lods
jmp
sub
into
xor
adc
cmp
dec
rcll
aam
cmp
mov
pop
xchg
gs
or
jmp
pop
or
cmp
push
fwait
aas
cwtl
in
rcrl
mov
incl
into
or
pushf
subb
std
aam
nop
outsb
arpl
xlat
ret
cwtl
icebp
lcall
ljmp
ficompl
or
cmp
mov
xchg
pop
sbb
and
fsts
inc
push
cmp
dec
lods
adc
adc
sbb
ja
mov
mov
lds
ret
jl
add
inc
aad
and
outsl
sub
jno
mov
jae
test
fs
lea
arpl
sbb
fcomps
mov
pop
imul
aas
pop
daa
add
adc
jp,pt
jl
ljmp
adc
into
push
jecxz
mov
mov
adc
lds
push
ffreep
xor
loopne
sbb
push
pop
pushf
sbb
xorl
scas
shr
pop
cmpsl
lahf
pusha
fdivl
test
hlt
add
shrl
and
and
lock
cwtl
xor
test
in
daa
mov
in
aas
dec
shlb
xchg
sahf
add
mov
adc
lods
stc
test
jg
in
rol
aas
hlt
sbb
push
shlb
movsl
fldl
dec
adc
adc
es
nop
jl
sbb
lret
xor
xchg
data16
bound
js
shrl
movsb
lahf
mov
in
adc
sub
fsts
sub
inc
pop
ljmp
inc
pop
scas
je
fpatan
or
lods
pushf
addr16
dec
lods
push
add
repz
lret
mov
in
cmp
push
push
xor
imulb
add
std
lds
jl
ror
add
and
ja
dec
mov
mov
adc
in
cmp
xor
scas
fs
mov
inc
ret
es
mov
in
aam
pusha
cmp
push
jg
xor
lret
jl
scas
mov
aam
or
push
test
fidivl
jne
push
pop
je
repnz
rolb
pop
mov
adc
jo
outsb
push
push
fnstsw
pop
push
cmpsl
outsl
gs
lret
mov
fcoms
cwtl
push
xor
enter
sub
stc
xor
adc
cmp
adc
std
and
and
push
and
pop
cmp
inc
loopne
mov
cwtl
dec
sub
add
inc
aad
mov
mov
mov
jbe
popa
inc
mov
ljmp
out
pop
mov
movsl
xchg
sub
jmp
jg
nop
addr16
cwtl
scas
mov
cld
jmp
adc
push
add
cmpsl
ds
movb
les
pop
stos
push
shlb
sbb
sub
xchg
push
mov
pop
pop
aam
stos
aas
add
int
inc
jecxz
bound
jmp
in
mov
jmp
cmc
mov
cli
xor
push
sarb
push
sub
les
or
pusha
inc
sub
dec
cmp
fists
dec
jge
dec
sbb
cmc
xor
fldenv
int3
push
mov
or
adc
arpl
xchg
filds
repnz
js
ret
wbinvd
mov
cwtl
test
repnz
out
je
imul
push
dec
fsubrs
pusha
icebp
fsubrp
aaa
push
push
mov
add
cli
inc
imul
push
dec
mov
aad
jo
jl
or
das
or
mov
and
mov
dec
cmp
mov
pop
mov
xor
dec
mov
lods
push
push
mov
xor
inc
xchg
or
pop
xchg
fdivl
shll
cmp
fs
mov
sbb
subb
xor
mov
es
push
out
pop
push
pop
xor
inc
sub
mov
pop
fcomps
dec
mov
push
sbbl
mov
std
dec
or
sbb
repnz
xchg
xchg
and
ret
mov
push
cltd
rolb
stc
push
lret
cmp
jae
and
adc
subb
dec
fcomps
je
cmp
pop
push
out
dec
push
daa
inc
mov
mov
mov
insb
mov
xchg
jbe
dec
xchg
mov
add
or
addr16
shll
jae
outsl
mov
add
out
or
cltd
dec
aam
lret
fdivl
pop
outsb
pop
mov
mov
leave
out
xor
add
frstor
pop
jnp
xchg
sbb
fistpl
loopne
add
and
ret
popf
clc
pop
push
xchg
mov
pushl
adc
arpl
and
pop
imul
es
add
aaa
adc
pop
subb
add
aas
push
inc
sbb
jne
push
jge
int
cmp
jmp
add
das
in
inc
mov
cs
ret
adc
push
sar
adc
rcl
fisubrl
mov
push
iret
outsl
fists
xchg
jns
jno
scas
movl
lret
loopne
xor
or
jno
cmpsl
sub
aaa
push
cmp
add
push
and
mov
and
xor
mov
in
jb
lds
sub
pusha
adc
pushf
sarl
fcomps
in
je
xchg
adc
outsl
pop
fcmovnb
dec
mov
imul
pop
jo
shrl
sbbl
leave
cmpsl
jle
lods
sub
pop
jno
sahf
scas
jecxz
loopne
xor
enter
adc
insb
cmp
fcompl
js
hlt
sub
sbb
roll
daa
iret
test
mov
repz
add
daa
mov
jnp
jae
shlb
pop
out
mov
fs
xchg
in
mov
pushf
dec
xor
pop
pop
sbb
mov
sarl
sbb
aad
sbb
jl
dec
xor
push
cli
out
dec
xor
sbb
repnz
mov
fwait
cmp
add
movsb
xchg
js
stos
aad
push
shlb
push
mov
out
mov
sbb
scas
shrb
pop
pop
cmpsl
sub
mov
out
xor
xor
pop
and
in
ret
mov
mov
pop
xor
push
mov
pop
scas
ljmp
int
lret
sub
mov
xorb
mov
pop
bound
jle
leave
push
add
inc
sbb
ljmp
repnz
sbb
lahf
mov
lcall
mov
cmpsb
lods
inc
vmread
mov
xor
xchg
xchg
cmp
subl
and
mov
int
xor
in
sub
cld
into
je
mov
data16
push
mov
cmp
insl
insl
mov
into
ljmp
call
sub
xlat
add
hlt
lcall
mov
daa
mov
ja
and
or
mov
in
push
inc
mov
js
mov
or
pop
shr
stos
jmp
push
loopne
sub
repnz
xchg
and
xor
adc
cmp
stos
call
xchg
je
jge
fwait
insl
cwtl
paddusb
push
inc
xchg
fisttps
push
mov
inc
movsl
mov
push
xor
out
cmpsb
addl
cmp
jno
sbb
sub
sub
rolb
mulb
popf
xor
inc
lock
jp
outsb
push
dec
xchg
jg
and
pop
mov
stos
pop
loop
js
js
fwait
and
popa
lds
movsl
cmpsb
jle
imul
push
test
scas
aas
mov
js
out
sbb
jecxz
mov
popf
ss
push
cltd
mov
push
pop
sub
cmc
jne
mov
mov
ret
xchg
sbb
xor
call
sub
inc
inc
jmp
js
cld
xchg
xor
mov
test
push
es
clc
mov
xchg
xchg
stos
fidivl
test
andb
pop
pop
mov
mov
repz
stos
inc
push
jb
frstor
insb
loope
sub
data16
jg
not
xor
fmull
push
test
or
xchg
jo
add
lock
cltd
in
scas
push
jb
sbb
stc
xchg
push
popl
jmp
out
mov
dec
ss
mov
sub
push
dec
add
xor
sub
or
stos
xlat
inc
jns
xor
cli
dec
decl
jmp
and
lds
test
movzbl
add
int3
adc
add
pop
sub
loop
pop
mov
mov
cmpsl
pop
popf
lahf
mov
sbb
and
cmp
xchg
xor
mov
or
nop
cs
jmp
sti
jno
jp
push
divb
xor
fnstenv
mov
aas
aas
push
mov
add
xchg
aad
call
insb
and
cld
dec
lock
pusha
repz
and
cmpsb
js
nop
aas
add
ficoml
lcall
nop
lahf
mov
shl
imulb
imul
adc
inc
push
sub
xchg
lret
cmp
cmp
mov
lock
mov
add
gs
es
dec
inc
dec
fs
and
push
sub
mov
mov
add
push
cmpb
movsb
sbb
jbe
sub
mov
insb
lock
pop
xchg
xor
push
push
inc
out
or
cmp
nop
cmp
testb
icebp
sub
imul
imul
dec
lret
inc
out
lret
xor
and
pop
adcb
pusha
push
cs
jo
sub
sti
lods
outsl
imul
mov
in
adc
cmp
scas
icebp
nop
and
mov
nop
jno
mov
pop
lret
mov
jbe
mov
mov
stos
sub
mov
inc
or
in
sarl
inc
cmovno
fildll
pop
pop
inc
inc
sahf
leave
or
jmp
mov
jbe
shlb
mov
jns
push
testl
arpl
jo
xor
outsl
cmp
shlb
jns
inc
insl
cltd
and
push
xchg
jo
or
jge
jp
js
hlt
dec
xchg
filds
fsqrt
xor
lret
xchg
mov
pop
test
cld
aas
dec
addl
push
mov
mov
sub
sub
add
jno
jno
or
aaa
adc
lods
jge
jne
ficoml
imul
mov
sub
jmp
xchg
jnp
loope
jns
sbb
jp
fs
or
push
adc
inc
xlat
repz
mov
and
inc
movsl
sbb
decl
add
xchg
jbe
xor
sarb
scas
dec
fdiv
push
repnz
ljmp
addr16
push
jno
jne
cs
cmp
lret
add
aaa
mov
and
jg
or
out
lahf
jg
mov
int
arpl
movsb
pop
dec
lods
and
push
dec
iret
adc
dec
lret
sti
pusha
data16
mov
dec
lahf
lret
std
jne
pop
dec
sub
fiaddl
cmp
dec
scas
push
cmp
pop
cwtl
xchg
shrl
jmp
fstps
push
out
cli
jle
cmpsl
shll
push
scas
pop
adc
adc
pop
decl
lods
pushf
xor
inc
les
mov
adc
dec
pop
jb
mov
repnz
xor
ja
sbb
dec
adc
xchg
add
xchg
pop
mov
mov
stos
iret
cltd
jp
aad
int3
cmp
xchg
jns
sbb
pop
mov
testb
lea
mov
mov
addr16
ss
sbb
push
popa
sub
loopne
movsb
ror
outsb
aad
testl
insl
pop
sbb
loopne
mov
int3
jb
sti
and
xchg
rolb
call
aad
aad
icebp
repz
mov
jge
movzwl
dec
cmp
sbb
sbbb
cmc
jecxz
cld
in
out
push
jmp
mov
xor
jle
addb
cmp
lcall
cmp
jmp
or
sub
mov
les
mov
sahf
and
jb
daa
adc
dec
dec
jb
hlt
ds
rorb
jnp
stos
mov
test
inc
fwait
xchg
cmp
mov
shrb
pop
xchg
jmp
ja
loop
and
in
loope
push
sbb
stc
repz
mov
stos
cld
jnp
cmp
sahf
jns
cli
pop
adc
sub
leave
adc
mov
iret
push
xlat
hlt
popf
into
sub
push
jge
les
and
gs
inc
push
xchg
mov
stos
cmp
mov
subb
pop
test
into
add
inc
xlat
rcrb
xor
xchg
mov
pop
in
add
mov
jle
and
jp
imul
lret
xchg
aam
mov
rcl
inc
add
outsb
jl
in
add
ret
cmp
jmp
and
cmp
push
sbb
icebp
and
xor
jmp
adc
sub
out
bound
and
or
sbb
in
pop
bound
fs
dec
cwtl
xchg
sbb
icebp
mov
and
imul
sti
mov
sbb
mov
inc
mov
push
and
adc
cmpsb
xchg
jb
pop
pop
movsl
int
popa
stos
arpl
xor
xchg
nop
repnz
inc
push
std
out
arpl
dec
mov
xchg
enter
test
fildll
stos
mov
fimuls
cmpsl
mov
inc
adc
mov
aad
mov
repnz
dec
mov
fnstsw
lods
out
icebp
push
clc
jb
pop
jmp
cmp
push
ds
jo
iret
or
in
mov
pop
push
outsl
repnz
lea
or
out
in
jp
icebp
call
cmpsb
dec
cld
jmp
fiadds
ror
int
push
xchg
in
mov
sbb
adc
stc
cmpsb
or
iret
pop
ds
adc
mov
sbb
xlat
xor
jmp
stos
lret
xchg
out
sub
mov
mov
test
cmp
xchg
je
fildl
cltd
add
mov
or
push
movsb
xor
push
or
rcrl
jge
incl
fists
aas
inc
test
cmpl
addr16
cmpsw
jecxz
mov
inc
xchg
xchg
dec
inc
pop
inc
mov
cld
insl
test
cld
adc
inc
and
outsl
mov
mov
mov
lret
sbb
es
cmpsb
xchg
xchg
inc
loopne
dec
ret
das
add
xor
push
js
add
jno
cs
sarb
inc
cwtl
sahf
add
push
movsb
xor
jmp
inc
sub
xor
dec
sub
mov
sub
leave
pop
cmpsl
test
xchg
push
push
jne
mov
or
hlt
sub
mov
and
and
cmpsl
sbb
sbb
movsb
iret
mov
mov
xchg
std
push
mov
mov
leave
or
jp
ss
or
lret
mov
leave
xor
mov
pusha
loopne
sub
cli
push
xor
lcall
xor
jo
insl
pop
js
sub
mov
xlat
movsl
in
sub
clc
or
pushf
dec
pop
jnp
mov
cltd
push
fldenv
into
into
cwtl
cmc
xchg
lret
mov
push
popa
push
sbb
push
rol
push
shrl
mov
xchg
push
fsubr
xor
in
rolb
movsb
aaa
inc
add
mov
adc
dec
fldl
into
and
out
xchg
int3
push
push
push
mov
aaa
push
mov
mov
decb
icebp
mov
or
sbb
test
cmpsl
inc
sbb
sbb
gs
push
sbb
loopne
push
jno
pop
fmul
sub
ss
jecxz
cmp
jne
out
xchg
test
adc
jno
sub
imull
cmp
push
inc
adc
aad
sahf
aad
lds
popa
testl
cmp
mov
arpl
or
lock
lret
xchg
mov
pop
or
push
into
lret
icebp
ret
call
cmp
lret
sub
insw
mov
dec
fcoms
lret
test
aas
ret
mov
and
ss
es
scas
cmp
push
sarl
mov
pop
mov
mov
add
mov
hlt
jge
int
mov
push
inc
movsl
popa
mov
inc
loop
and
add
jmp
mov
cmp
mov
mov
mov
add
fmuls
sar
and
int
movsl
jne
enter
jnp
xchg
adc
pop
lds
lahf
or
daa
add
lret
xchg
or
sub
iret
arpl
insb
pop
fbld
test
inc
imul
dec
xchg
jl
mov
push
pop
mov
movsl
jge
mov
mov
push
cmp
les
xchg
shld
cli
loopne
repnz
jg
enter
mov
loop
pop
mov
ja
repnz
stc
loope
add
adc
js
or
cmp
sub
ficoms
out
shl
stos
mov
jle
dec
sbb
mov
js
dec
call
xor
sub
lret
in
in
fsts
push
push
in
fdivl
ds
cmpsb
into
xchg
or
push
inc
adc
insl
push
fwait
aaa
fisubl
push
lret
sbb
fstl
inc
sbb
das
addr16
ret
xor
testl
into
sbb
dec
sbb
push
test
call
mov
jbe
mov
sub
push
adc
mov
stos
push
adc
sub
or
lret
sub
ljmp
sbbl
nop
ret
insl
adc
lods
test
psrlq
mov
xor
or
inc
sti
xor
popf
cmpsb
js
clc
mov
mov
mov
xchg
and
xchg
add
pop
std
cld
sub
js
pop
adc
inc
mov
sub
ficompl
xchg
pop
add
mov
mov
iret
repnz
cmp
add
test
lock
test
add
dec
enter
lods
cmp
mov
mov
mov
dec
mov
push
jae
or
in
roll
cmp
or
cmpb
or
mov
cmp
jno
mov
mov
sbb
and
pop
dec
sti
pop
push
jnp
cmpsb
popa
dec
mov
mov
xor
add
add
jge
push
fmul
loopne
int3
fsub
arpl
jecxz
stos
xchg
add
add
iret
lret
mov
ret
jg
xor
int3
dec
adc
movsl
push
adc
jbe
cs
lods
stos
mov
fidivrl
and
enter
cmp
mov
das
clc
cmpsb
add
and
lcall
ret
in
xchg
scas
mov
sbb
hlt
cld
mov
jp
inc
add
and
into
cmp
push
mov
dec
out
in
jp
ss
adc
idiv
iret
data16
call
iret
add
pop
dec
hlt
mov
movsb
push
push
xchg
jge
push
cmp
inc
leave
add
test
aas
jbe
jae
frstor
fists
outsb
xchg
cltd
sub
fsubrs
add
mov
inc
daa
or
sbb
push
cmc
jg
xor
push
adc
mov
mov
add
or
sbb
jo
negl
add
ja
add
outsb
inc
xlat
decl
imul
adc
lock
shrl
push
mov
jne
sbbb
push
leave
ret
push
sbb
pop
mov
fildl
insl
cs
adc
dec
pop
mov
movsb
cmc
sbb
mov
mov
daa
push
popf
flds
and
lret
jnp
mov
cmp
xchg
out
std
outsb
filds
pop
pop
xor
rcr
int
adc
mov
dec
pop
or
fldt
repnz
cld
push
aam
push
lcall
scas
mov
clc
call
xchg
cmp
stos
jecxz
int3
fwait
inc
xor
cmp
stos
adc
xchg
pop
cmpsl
shll
push
fistpll
jb
xor
cltd
xor
lcall
test
test
mov
sti
jmp
jmp
jmp
or
jp
dec
insl
inc
cmpl
xor
dec
test
mov
jo
es
iret
jge
jg
es
dec
rcll
mov
mov
pop
sbb
test
adc
xlat
adc
push
imul
jp
mov
jns
dec
mov
hlt
cmp
jb
push
sbb
dec
mov
aas
sahf
lods
and
imulb
xchg
xor
test
mov
add
xchg
mov
mov
lcall
mov
xor
xor
sbb
pop
push
cmp
xchg
sub
xlat
xor
aas
push
loope
push
cmp
mov
in
aas
cmp
sub
mov
and
movsb
mov
push
int3
adc
inc
cmp
out
js
rorb
js
and
lcall
push
loop
std
jl
notl
mov
sti
aam
scas
mull
inc
data16
adc
dec
adc
pusha
jecxz
imul
sahf
ficoml
push
mov
cmp
and
xchg
stc
jg
mov
add
or
mov
xor
xorps
dec
pop
sub
out
dec
imul
shlb
cltd
aad
xor
cmp
sti
dec
cltd
pusha
add
jb
xchg
push
dec
rclb
test
in
popa
aaa
adc
mov
sti
mov
inc
fstpt
mov
push
sbb
movsb
pop
or
add
jno
mov
and
lods
lcall
imul
sbb
test
mov
ja
mov
sbb
scas
push
loopne
cmc
cmpsb
and
shrb
ret
lret
xchg
aas
iret
dec
cmpsl
jo
xchg
js
sbb
adc
push
iret
rorl
je
cmpsb
pop
loope
sub
pop
jmp
stos
rorl
popf
out
cs
sbb
cmc
insb
movsl
loopne
int3
pop
add
pop
or
loopne
cs
jl
mov
jo
std
scas
mov
sub
cmc
mov
adc
mov
pop
lcall
jbe
shl
lret
mov
js
daa
pop
mov
mov
sbb
mov
mov
ja
add
jl
insb
lea
pop
add
add
scas
mov
fimuls
test
in
push
daa
pushf
enter
incl
imul
xor
ljmp
in
fs
fildl
stos
push
cmp
sub
mov
mov
push
negl
and
outsb
aad
shlb
sbb
cmpsb
xchg
mov
jo
xor
test
iret
mov
test
cwtl
sub
repnz
add
adc
nop
daa
mov
rcrb
sub
or
icebp
rcrb
sub
shlb
push
xor
cltd
mov
pushf
xor
outsb
or
jbe
data16
xlat
mov
jp
and
je
inc
sbb
mov
and
mov
mov
cmp
mov
je
scas
fildl
enter
cld
xor
insl
mov
add
or
pop
jg
jecxz
mul
mov
jbe
ljmp
cmpsl
and
jnp
and
nop
mov
in
mov
dec
jmp
sub
xor
jno
cmp
or
pop
ljmp
cmpsl
fcmovnu
push
pop
pop
cmp
jmp
pop
lock
loop
cli
lods
pusha
rcrl
xchg
mov
mov
imull
ror
cmp
push
arpl
and
nop
lock
cmp
filds
es
pop
push
mov
and
aas
add
or
pop
jg
mov
pop
enter
mov
mov
jnp
mov
mov
sbb
call
sti
jmp
sti
jp
xchg
sbb
loop
addb
and
mov
or
jmp
xchg
out
mov
cmp
aaa
add
shrb
and
adc
mov
pop
pop
enter
lds
shlb
xchg
gs
jo
push
dec
pop
cli
pop
call
lods
sub
mov
jmp
pusha
jne
sahf
mov
arpl
adc
inc
jl
fistps
fwait
and
xorb
mov
push
jnp
mov
xchg
jne
clc
mov
iret
dec
dec
mov
sbb
adc
xchg
pop
pop
adc
mov
cwtl
fisubl
mov
push
adc
xchg
add
pop
insb
es
add
cmpsl
push
ja
addr16
cld
cs
mov
xchg
and
push
and
pushf
jg
jecxz
das
outsb
mov
sub
test
jae
cwtl
sub
mov
mov
cmpl
ss
jecxz
push
pop
add
test
aam
mov
adc
pushf
ja
js
mov
arpl
xchg
sub
cld
mov
mov
pop
in
xchg
mov
dec
arpl
add
mov
inc
int
add
ss
ficoml
movsb
mov
testl
inc
pusha
jge
cmpsb
scas
das
leave
test
nop
lcall
aas
mov
lock
sbb
cmp
dec
in
cmp
or
arpl
xor
sub
out
fwait
shrl
cli
inc
sub
repz
mov
dec
sarb
sub
neg
add
and
sbb
or
stc
inc
movsb
ja
mov
jo
negb
dec
jl
push
loope
lods
jb
cwtl
xchg
jno
dec
mov
testl
orl
dec
hlt
sub
mov
incl
int
test
xor
scas
outsl
roll
push
push
jno
shlb
fwait
lock
mov
mov
mov
mov
jo
out
mov
subl
jmp
in
fadd
adc
addl
test
sbb
sbb
push
dec
jmp
xlat
out
xchg
cs
fsubl
inc
xchg
push
cmpl
xchg
dec
repnz
xor
repnz
pop
je
out
xchg
pop
pop
je
inc
shl
inc
sbb
push
rclb
xchg
sbb
mov
xor
sbb
jne
bound
add
mov
lock
dec
xor
rolb
jl
stc
shl
sbb
jae
mov
push
inc
sbb
mov
xchg
sub
imul
xor
inc
add
or
dec
mov
adc
scas
test
sbb
mov
xor
jmp
pop
lock
mov
fadds
adc
xor
pop
pop
push
pop
loope
aas
adc
dec
cmp
adc
cmp
xchg
lcall
jp
das
push
stc
movsl
inc
mov
xor
cmc
out
pushf
cmp
adc
pop
cltd
adc
and
out
loope
outsb
rolb
xchg
sbb
pop
xlat
xchg
sbb
int3
inc
cmp
xor
sarb
inc
jmp
mov
out
jmp
mov
push
shufps
cmc
dec
mov
daa
ja
out
push
pop
adc
jns
jge
push
jle
mov
xor
and
sub
sahf
pop
xchg
push
push
lahf
popa
jno
xor
mov
shll
mov
sbb
mov
sarl
add
aad
daa
lock
xchg
scas
in
out
or
jno
sub
dec
push
adc
jne
in
inc
stos
fwait
xor
mov
dec
clc
cmpsb
enter
inc
fwait
jno
sub
rol
cmpsb
inc
je
movb
inc
dec
out
out
jle
loop
or
sub
rcll
pop
push
popf
pop
mov
xor
test
movsb
inc
addr16
inc
xchg
pop
mov
lods
push
stos
xorb
jo
or
cltd
in
add
inc
lcall
and
aad
popf
popa
inc
dec
test
in
xchg
sbb
ret
dec
jb
add
leave
pop
jge
sbb
jge
push
jp
push
je
aaa
add
lds
mov
mov
popa
aas
add
ja
or
das
push
rclb
es
sbb
aad
sti
fld
cltd
imul
int3
aas
or
or
cmp
xchg
pusha
cmpb
jg
xor
shrl
inc
pop
movsl
out
cwtl
cmpsb
test
jle
leave
int
loop
cmpl
std
mov
pop
pop
xchg
cli
ret
cwtl
sbb
shrb
or
out
cmpsl
sub
stos
jmp
daa
adc
xorb
mov
mov
cmp
les
dec
int
lds
lret
adc
mov
mov
pop
sahf
mov
in
imul
fldenv
add
pop
cmp
adc
push
repz
inc
jns
shrb
pop
out
daa
jge
push
int3
dec
cmp
rorl
sub
lds
mov
sub
dec
cmp
sub
ret
out
add
lea
fwait
mov
mov
das
in
push
aaa
mov
adc
fwait
mov
cmp
mov
dec
and
xorb
lea
pop
xor
sbb
mov
and
lds
lcall
iret
mov
mov
enter
or
jmp
shll
jmp
sti
stos
mov
sub
lock
cmpsb
mov
jne
inc
aas
sub
adcb
cmpsl
jg
xor
cmpsb
sbb
out
cmpsb
in
into
xor
cs
test
cli
out
mov
jg
add
dec
sub
mov
jbe
mov
add
jo
inc
ljmp
xchg
cmpsl
mov
push
sub
mov
mov
in
and
push
js
in
pusha
pop
ss
push
inc
push
cmc
sbb
pop
and
xchg
and
test
lds
daa
push
push
sbb
out
mov
mov
and
mov
pop
std
mov
xchg
or
pop
fnstcw
mov
loopne
ret
jp
xlat
shrl
sbb
cmpsb
or
dec
out
int3
sahf
adc
inc
xchg
jle
out
dec
int
jae
in
jmp
adc
or
jl
insb
in
pushf
shlb
push
stos
pop
jb
dec
cmpsl
leave
mov
mov
js
pop
js
fdivl
push
xlat
push
dec
mov
jnp
cmp
cmpsb
cmpb
mov
jmp
add
pop
leave
dec
dec
cwtl
and
jecxz
pop
jne
sub
adc
cli
sub
loopne
stos
sub
mov
arpl
mov
es
sbb
adc
inc
jno
lea
and
add
sub
stc
fwait
xchg
stos
and
push
jl
dec
mov
insb
adc
aaa
xchg
cmp
xor
add
mov
test
inc
lret
call
negl
push
dec
dec
fildll
cld
fbld
mov
or
imul
shr
mov
pushf
adc
lock
mov
pop
inc
es
add
fwait
mov
enter
jb
fsubp
and
xchg
nop
int
xchg
mov
ret
arpl
roll
bound
adc
leave
xchg
sti
test
mov
icebp
adc
push
repnz
pop
call
icebp
insl
inc
movsb
les
cmpsl
das
add
inc
sarb
mov
add
mov
pop
mov
outsl
xor
and
mov
out
loope
dec
cmp
sub
test
sub
icebp
ljmp
outsl
dec
imul
dec
mov
mov
push
adc
lods
inc
pop
arpl
int3
imul
mov
loope
add
cwtl
jle
out
jp
rcr
pushf
jb
or
or
xchg
inc
scas
not
dec
push
jle
filds
loopne
adc
jp
ja
or
aas
shlb
jmp
pop
fucompp
cmp
add
dec
pop
mov
lahf
scas
insl
cmc
int3
fdivrs
mov
mov
in
lahf
xchg
je
inc
or
mov
loop
mov
xor
fisubrs
add
mov
setns
jge
jecxz
push
hlt
sbb
dec
mov
inc
inc
shll
lods
ret
shlb
mov
cli
xor
pushf
flds
outsb
xchg
inc
clc
out
mov
push
jl
cmp
mov
aas
leave
xchg
sti
xchg
dec
iret
sti
int
or
lea
jmp
xchg
loopne
fsubs
push
xchg
jg
std
pop
xor
xor
loopne
jp
lock
imul
and
mov
mov
adc
inc
and
xchg
imul
or
das
push
cmp
mov
xor
xor
adc
data16
out
dec
adc
sub
out
fsubrs
test
sbb
insb
inc
adc
mov
cmovno
and
adc
mov
sbb
mov
arpl
out
lods
rcrl
cld
mov
lods
jb
aad
lcall
cld
push
repz
or
lods
aam
and
sub
sub
popa
push
iret
add
and
insl
outsl
ret
sub
insb
ss
in
xchg
jns
aaa
inc
clc
push
or
js
dec
dec
pop
xor
ds
dec
mov
in
sub
repnz
sub
in
in
sti
in
popf
push
adc
les
or
or
iret
negl
enter
test
or
mov
clc
int
and
sbb
mov
mov
xor
push
cmp
or
stos
and
cmp
add
fistl
lea
push
enter
enter
inc
mov
add
adc
movsl
xchg
dec
xchg
movsb
mov
inc
mov
cld
push
fwait
movsb
jl
test
jle
mov
cmp
mov
inc
leave
lahf
push
xor
mov
pop
aas
mov
lahf
cmp
aam
sub
xchg
and
frndint
clc
pop
popf
push
aas
xor
ljmp
imul
push
mov
xchg
hlt
out
or
imul
xchg
push
mov
or
sbb
pop
in
dec
xor
cwtl
dec
fdivrs
int
adc
arpl
fs
add
dec
arpl
or
cld
pop
pop
fsubs
shlb
pop
test
mov
push
stos
cs
cli
fs
out
jbe
sbb
push
add
mov
or
out
mov
xor
cld
aad
mov
inc
daa
subl
mov
icebp
push
rclb
cmpsb
inc
add
mov
xor
test
aam
push
xchg
jecxz
in
stc
loop
or
clc
xchg
imul
dec
movsb
in
fstp
int
add
sub
pop
and
mov
sbb
clc
and
lret
mov
cmp
xor
scas
pop
xchg
dec
cmp
inc
adc
xor
nop
xchg
sub
mov
test
in
xchg
fidivl
fs
adc
adc
mov
scas
enter
ja
dec
ss
mov
xor
cltd
fdivs
jnp
mov
bound
xchg
cld
loopne
inc
push
addr16
dec
sbb
cmp
inc
sbb
adc
lret
cmp
and
cmc
lock
pop
push
inc
stos
or
into
and
es
add
pop
push
repnz
aad
sub
sbb
push
mov
dec
sbb
and
jno
dec
sub
pop
inc
ljmp
cs
xchg
adc
and
mov
mov
sub
jne
rcrb
out
hlt
icebp
jno
leave
es
mov
mov
cmpsl
pop
mov
lds
sub
xchg
or
rcrb
rclb
orb
aas
xor
aaa
lret
enter
mov
fwait
inc
and
shrl
jbe
repnz
rcrb
and
gs
lahf
add
or
sbb
lahf
push
ss
dec
out
sbb
sahf
cmpsb
out
push
jns
sub
inc
inc
pmaddwd
out
or
add
repz
jmp
push
jge
shl
push
mov
cmp
rol
or
call
shlb
and
std
push
mov
aam
dec
jns
xchg
cmp
jge
push
pop
lds
push
repz
cmpsl
add
shlb
femms
repnz
mov
mov
pop
xlat
adc
cmp
shll
sarb
pop
pop
xor
rorl
sub
adc
add
jae
in
push
jl
orb
pop
arpl
insb
mov
cmp
sub
push
es
fists
fld
pop
or
xchg
js
xchg
in
adc
mov
shl
pop
mov
rcll
orb
es
adc
andb
mov
repz
sbb
pusha
ja
andl
leave
scas
addr16
movsb
inc
mov
outsl
ja
or
jle
inc
cmp
in
add
dec
xor
xchg
jg
sub
mov
xchg
mov
dec
mov
adc
dec
sub
jl
sbb
ret
fldcw
aas
inc
lahf
pop
sbb
shrl
pop
outsl
rorb
out
fs
lahf
jbe
inc
pop
or
sbb
in
cs
arpl
andl
popf
pop
cmpsb
mov
out
aas
pop
pop
push
pop
mov
dec
mov
or
adc
shlb
cld
xor
or
pusha
lahf
xor
mov
push
fdivs
pop
mov
out
ds
stos
adc
add
inc
mov
sub
xchg
popf
ds
std
movl
out
fldl
lcall
mov
fs
rcrl
lret
jge
push
sub
sti
cmp
mov
insb
insb
dec
lret
mov
jo
dec
push
out
test
mov
jne
jge
idivb
adc
mov
dec
cld
cmp
sbb
adc
pop
and
stos
mov
out
cwtl
jle
in
adc
or
xchg
sub
mov
std
insb
adc
cltd
sbb
repnz
outsb
lock
cwtl
jne
sub
cs
stc
fsubrl
cmpsl
lods
fildll
push
add
in
add
rcl
dec
fsubs
adc
pop
mov
xor
dec
fwait
pop
and
mov
lds
rolb
in
lcall
sahf
je
fwait
rclb
dec
es
cmc
imul
outsb
lret
pop
fimuls
push
mov
enter
mov
or
lret
or
pop
mov
ljmp
movsl
leave
mov
and
jl
jo
inc
mov
cmp
mov
shll
cmp
xlat
sub
test
and
push
jmp
cmp
mov
cmp
mov
scas
push
fldt
jle
xor
andl
mov
cmpsb
sbb
hlt
sahf
xor
lock
popf
push
loop
and
pushf
aaa
push
xchg
adc
mov
mov
lock
sub
jae
xor
lcall
cwtl
out
dec
and
lea
jg
int
cmp
dec
add
mov
sahf
into
pusha
sub
mov
or
shrl
cmpsl
pop
xchg
iret
fdivl
fidivs
sahf
ror
fldl
out
xor
push
sahf
xchg
mov
and
cmp
or
xchg
push
xor
call
repz
push
int3
xchg
or
mov
mov
push
cli
outsl
lea
pop
dec
mov
cmp
push
insl
cltd
gs
jmp
in
inc
mov
dec
and
jmp
push
mov
add
xor
mov
shrl
cmp
dec
aas
sbb
ja
filds
jne
xchg
mov
shll
dec
scas
xchg
movsb
out
mull
mov
stos
rcrb
mov
fidivrs
jmp
stc
mov
mov
push
mov
cs
jg
inc
mov
sbb
incb
fdivrs
outsb
mov
xlat
in
loopne
rorl
push
jbe
sub
scas
xlat
mov
fcoms
xchg
call
xor
add
mov
jae
push
aam
push
jle
push
xchg
or
push
pop
cmpsl
xor
sarb
and
pop
or
sbb
arpl
push
test
dec
jl
jno
xor
adc
jg
iret
les
sub
test
sbb
nop
xchg
loop
pop
subl
rcll
and
pop
stos
jmp
imul
repz
cmp
adc
popa
jb
mov
inc
call
ss
jne
loopne
xlat
xchg
sarl
lret
repnz
rcrb
lcall
imul
xchg
jne
xlat
aad
mov
fs
push
mov
adc
mov
pop
je
lcall
adcb
xlat
not
and
popf
test
fisubrs
xchg
dec
bswap
loope
cli
jae
push
jbe
outsb
loop
push
xchg
xchg
loopne
out
mov
cld
sbb
jbe
pop
mov
inc
xchg
mov
mov
pop
stos
jno
cmp
ja
and
xlat
lock
call
inc
adc
daa
mov
mov
test
cmp
mov
sahf
pushw
mov
xor
int
and
loopne
dec
jmp
mov
cmp
mov
std
or
mov
pushf
arpl
or
scas
push
stc
xor
push
push
push
cld
pop
pop
pop
push
out
out
shlb
call
mov
in
pop
insl
pop
jae
clc
out
addr16
pop
loope
mov
jbe
xor
adc
push
icebp
inc
mov
rcr
xchg
fiaddl
dec
lock
push
in
test
rcrl
push
jae
mulb
rolb
aad
je
pop
cmp
mov
arpl
fadds
mov
and
out
sbbb
xchg
lods
xchg
and
mov
mov
cmp
dec
mov
sti
cmp
fsubrl
rorl
jns
inc
pusha
xchg
fisubl
inc
jmp
into
mov
call
cwtl
iret
mov
mov
cmp
jmp
jge
push
pop
insb
js
loop
lods
pusha
xchg
sub
shlb
jle
outsl
fdivl
xor
inc
ret
test
jbe
out
dec
push
cmp
and
enter
out
test
lea
mov
dec
mov
mov
add
or
push
push
addr16
outsb
mov
add
mov
adc
xchg
stos
into
mov
push
cli
pop
enter
decb
push
mov
push
testl
mov
repnz
in
sub
dec
lret
jb
sbb
jg
jecxz
test
mov
cmp
frstor
or
les
iret
cmp
ret
loop
lret
daa
js
push
pushf
movsl
ficoml
push
shll
push
pop
mov
inc
lahf
and
iret
or
mov
lret
pop
into
aaa
jge
lcall
popa
movsl
xchg
push
cmpb
orl
pop
fldl2e
outsl
pop
notb
xor
sahf
outsb
insb
push
dec
mov
jg
orl
inc
dec
push
iret
aaa
push
add
jmp
rcr
filds
ds
js
xchg
mov
fs
in
dec
cli
lret
sbb
dec
cmpsb
jmp
andb
push
rcrb
loopne
pop
adc
repz
out
xchg
inc
and
mov
mov
mov
pop
dec
cmpl
vmovaps
shl
jb
push
jl
push
mov
add
mov
mov
mov
cmpsl
out
cmc
adc
and
pop
or
pop
ret
mov
mov
lock
add
int
adc
cmpsb
push
add
arpl
sub
push
xor
pushf
clc
add
jl
or
push
lret
xchg
aad
cmp
out
or
or
test
sti
jl
xor
subl
in
lds
ds
repz
addr16
aam
ret
push
mov
adc
jmp
push
mov
add
aas
xchg
cmpsl
jo
enter
movsb
adc
xor
xchg
push
push
leave
cld
cmp
dec
xchg
cmc
lret
or
push
rcrb
jg
fidivrl
pushf
push
out
aam
popf
cmp
insl
dec
inc
mov
out
inc
daa
hlt
mov
loop
jns
call
je
out
adc
cmp
mov
inc
loope
loopne
inc
test
arpl
in
pop
pop
xchg
xor
mov
xlat
lcall
pop
mov
lret
aad
sub
sub
dec
pusha
ljmp
mov
int3
out
mov
add
lds
sbb
lret
adc
and
sahf
fistpll
inc
test
cmp
enter
cmp
sub
push
rolb
xchg
clc
cmp
stc
lods
xchg
jbe
jmp
sahf
and
loop
sti
bound
jno
sbb
jge
mov
mov
xor
xchg
loopne
fwait
push
out
hlt
dec
cwtl
push
out
add
loope
mov
mov
gs
jbe
das
inc
and
mov
leave
daa
jo
mov
xor
fmull
negb
js
mov
mov
pop
inc
pop
les
jg
push
fidivs
pop
jecxz
mov
stos
arpl
adc
loope
mov
subb
xor
jmp
adc
push
inc
ss
adc
jbe
jmp
arpl
test
push
and
das
aaa
mov
mov
out
outsb
aas
roll
sub
sarb
out
ja
fcmovnu
stc
sub
mov
lea
cmp
pop
aad
cmpsl
lcall
fnstcw
sub
shr
cmc
mov
inc
add
idiv
mov
mov
insb
and
mov
in
pop
fildll
lods
push
mov
cmpsl
std
adc
shrl
dec
mov
lods
add
mov
das
dec
aad
dec
outsb
xor
sbbl
gs
stc
outsb
dec
mov
je
cltd
mov
fs
movsb
add
jle
in
push
or
aam
popa
ret
lods
mov
sbb
cmpsl
jl
jge
test
insb
xor
stos
cmp
cmp
cmp
push
mov
mov
pop
stos
test
loopne
movsb
jmp
jo
mov
aaa
xor
inc
xor
insl
sbb
cmp
mov
adc
aaa
or
cmc
sub
sarb
xor
jp
sbb
cwtl
and
hlt
shl
mov
into
aas
add
pop
cltd
cwtl
fisubrl
pop
clc
in
out
mov
push
push
sub
jg
dec
test
cmp
arpl
gs
jnp
pop
inc
pusha
xor
mov
je
shrb
arpl
popl
cli
mov
sub
lcall
mov
into
cmp
mov
rclb
pushf
pop
xchg
ja
outsb
fcoms
dec
das
in
dec
out
sbb
roll
ja
mov
or
stos
dec
cltd
fstpl
xor
ret
adc
mov
sti
or
dec
movsl
stos
push
and
test
stos
sub
in
scas
pop
add
adc
cmp
adc
cs
pop
xor
jp
push
dec
mov
movsb
scas
outsl
jmp
or
fcomp
out
out
mov
inc
jno
pusha
sub
jns
stc
out
push
shl
into
mov
aam
popa
fisttpll
std
dec
sbb
lods
ret
and
jne
cmpsl
sub
stos
cmpsb
ljmp
outsb
add
dec
mov
mov
out
xchg
aas
fdivrl
sti
dec
fistps
idivl
stos
sbb
fnsave
scas
aad
inc
repnz
not
cmp
push
cmp
jp
outsl
imul
or
leave
fcmovnb
push
sub
sbb
sarl
shrl
xchg
pop
push
mov
es
fdivs
pushf
ja
and
lock
mov
xchg
pop
jb
add
fmuls
dec
scas
js
aaa
hlt
jbe
or
mov
cmpsl
dec
popaw
adc
fcompl
out
mov
push
mov
shrb
sahf
insl
dec
jb
pop
pop
lea
add
shlb
scas
push
inc
les
cmpsb
push
addr16
dec
mov
adc
fldt
cmp
inc
dec
jge
pop
or
sti
movsb
out
loopne
cmp
jge
mov
out
leave
incl
popf
aam
adc
addb
bnd
insb
shl
cmp
push
mov
pminub
pushf
fs
jnp
inc
out
lds
out
ljmp
xchg
mov
push
mov
sub
ret
popf
out
xor
xor
test
popf
stos
loopne
xchg
stc
push
sbb
inc
sub
outsb
xor
jb
imul
mulb
imul
insl
jnp
add
cmc
pop
scas
mov
iret
mov
sbb
jnp
sub
xchg
push
jecxz
mov
pop
es
inc
out
loop
movsb
mov
mov
les
push
fisubl
pop
inc
movsb
insb
lcall
idivl
inc
fs
ret
mov
lds
adc
mov
xchg
out
in
dec
fnstcw
ret
pop
xchg
cwtl
sahf
dec
repz
or
cmp
jge
icebp
cmpsb
cmpsl
push
cmpsl
lds
pop
daa
rcll
mov
adc
xor
dec
ljmp
mov
pushf
add
push
push
jp
cs
mov
imul
adc
fnsave
mov
mov
mov
sbb
push
out
or
js
or
cld
push
out
in
xor
xchg
push
lods
js
cmpsl
push
dec
pop
test
xor
mov
std
inc
adc
push
push
test
pop
sub
sbb
cmp
outsl
inc
sti
xchg
scas
aaa
leave
jecxz
xchg
out
adc
cltd
or
les
mov
sbbb
adc
inc
mov
stos
xor
add
dec
mov
and
sub
mov
mov
mov
aaa
add
hlt
out
ret
sbb
rcr
xchg
fwait
inc
xchg
and
fisubl
inc
adc
mov
test
xchg
in
into
jbe
insb
push
fimull
out
cli
sub
jb
sti
lahf
inc
xrelease
bound
iret
push
in
shlb
mov
inc
lock
add
sub
add
shll
out
pop
enter
adc
mov
mov
iret
jo
push
enter
adc
es
xor
ja
mov
mov
lret
dec
inc
xor
fisttpll
idivl
mov
scas
cmp
sbb
inc
xchg
flds
repnz
jp
push
rcrb
sub
into
in
xchg
fidivs
push
or
jmp
hlt
std
jae
pop
test
pop
push
es
jb
leave
fnsave
sub
inc
loopne
mov
or
xchg
mov
xlat
and
test
xchg
push
adc
pop
movsb
mov
jb
aas
or
ficoms
dec
inc
dec
cmp
pop
push
lret
mov
loope
sbbb
push
jle
nop
jge
fwait
outsl
shlb
push
in
inc
jnp
scas
outsb
sub
nop
pop
inc
and
std
mov
mov
push
test
aam
xchg
pusha
xlat
in
xchg
mov
popf
outsb
int
lcall
dec
xor
test
and
mov
xchg
xor
mov
cmpsl
ficompl
or
and
cmp
add
inc
sbb
test
divl
mov
mov
mov
mov
pop
sub
shrl
pop
mov
and
pop
sbb
out
test
outsb
cltd
mov
xchg
inc
call
lgs
add
cwtl
xchg
hlt
loopne
and
push
roll
xchg
inc
cmp
adc
adc
inc
popfw
or
mov
fcompl
or
dec
mov
aaa
sub
in
mov
mov
sbb
icebp
divb
and
pop
adc
lea
or
dec
jecxz
dec
jbe
jg
pushl
adcl
push
inc
adc
lea
xchg
xor
cld
scas
mov
fcomps
jmp
dec
arpl
pop
mov
cmpsb
sbb
aad
fcoms
sub
sahf
aaa
rol
mov
pop
iret
and
insb
repz
or
sub
lds
rcrl
icebp
imul
dec
jmp
pop
mov
jnp
jle
int
sbb
scas
lods
jp
int
loope
xor
ja
inc
mov
ljmp
sbbl
cmc
pop
inc
inc
xchg
inc
out
or
aaa
addb
idiv
jmp
scas
push
and
jg
cli
and
sbb
pushf
fbld
xor
xor
fisubl
lods
loop
cltd
mov
mov
in
jo
ret
cli
imul
jne
insl
lods
adc
xor
mov
mov
sub
in
mov
inc
jns
mov
mov
xchg
je
sbb
lods
je
xor
pusha
imull
sbb
repnz
ret
add
add
push
leave
fdivrp
dec
cmpsl
arpl
cld
mov
jl
pop
repnz
or
out
inc
inc
mov
xor
push
outsl
xchg
fsubrs
xchg
cltd
or
xlat
in
repz
dec
aad
add
or
icebp
push
shlb
sub
cmp
mov
rsqrtps
mov
ss
mov
inc
and
jnp
in
pop
out
sub
jmp
fwait
loop
mov
or
mov
push
test
jae
inc
pop
lar
rcrb
in
rorl
bound
les
adc
loopne
rclb
lock
mov
daa
dec
movsl
cli
pop
shl
mov
or
das
enter
mov
out
or
dec
push
push
inc
cmp
dec
ljmp
popf
inc
mov
jp
je
cld
xchg
jmp
pop
sbb
lds
mov
xchg
mov
mov
cmc
shrb
scas
or
mov
into
mov
gs
xor
mov
test
fsts
loope
push
mov
shll
das
lcall
addr16
repnz
les
imul
inc
push
addl
test
xchg
outsb
fadds
cwtl
in
hlt
dec
jge
repz
dec
inc
push
cmp
int3
pop
push
sbb
mov
outsb
or
jns
xchg
inc
insb
mov
enter
jp
push
dec
mov
iret
nop
fstl
int3
push
je
inc
mov
aaa
jae
pop
sbb
xrelease
jle
pop
mov
lods
dec
imull
and
jge
pop
rorl
xchg
fildll
out
xchg
pop
fisttpll
sbbb
xchg
lcall
pop
pusha
push
icebp
push
push
mov
mov
add
out
xor
clc
int3
shl
jae
xchg
lods
aam
dec
cltd
hlt
popf
pop
inc
lret
das
cmc
lcall
fstp
test
lcall
dec
test
repz
xchg
out
data16
push
xlat
pop
int
int
mull
andb
add
mov
les
scas
daa
addl
mov
sti
xchg
lock
bound
mov
jl
sbb
adc
in
arpl
arpl
xchg
test
mov
or
xchg
dec
xor
loop
cmp
lods
or
cmp
cmp
or
pop
inc
xlat
mov
mov
mov
jmp
pop
mov
lret
push
dec
sarb
ja
mov
movb
xlat
jge
mov
xor
shll
jb
push
idiv
xchg
cmp
ljmp
stos
cltd
add
inc
xchg
ja
xor
lds
cmc
gs
mov
leave
jle
lods
repz
sahf
lahf
mov
aaa
movb
lahf
mov
lret
add
mov
movsl
fcompl
dec
xchg
and
xchg
mov
mov
adc
mov
jno
lcall
setg
cmp
les
repnz
mov
jns
jb
orb
jne
ret
jmp
loop
les
and
sbb
iret
mov
push
xlat
shl
and
add
pop
and
in
xor
decb
mov
mov
pop
mov
mov
sar
shll
loop
inc
lret
inc
mov
add
into
push
shrl
mov
jg
xor
push
adc
jge
jecxz
mov
imul
mov
mov
loopne
mov
insl
scas
adc
adc
sbb
or
fwait
sti
push
mov
orl
dec
jecxz
push
enter
iret
call
ss
adc
roll
aam
iret
jl
sbbl
ret
jbe
das
subl
mov
test
mov
jae
shll
daa
loopne
jnp
push
icebp
pop
ret
jg
rol
cs
in
push
push
add
pop
mov
add
adc
xchg
out
shll
movsl
or
aad
fildl
dec
mov
jg
cwtl
add
fistpl
or
mov
mov
jnp
jmp
popa
pop
sbb
xchg
loope
xchg
clc
jb
add
inc
cld
cmp
lods
jp
movntps
adc
fwait
shll
and
jmp
push
jns
cmp
in
out
mov
and
xchg
out
xchg
pop
sbb
in
sbb
xchg
xor
xlat
mov
mov
lret
mov
enter
xor
sub
add
cmp
xlat
addr16
pop
sbb
inc
dec
movsb
add
out
pop
push
push
stos
jo
ss
popa
bound
jne
and
sahf
movsb
repnz
mov
sti
mov
cmp
sub
sbbl
mov
pop
and
add
out
fiadds
dec
jae
xchg
out
int
test
jg
cmp
adc
inc
fs
outsl
inc
pop
data16
add
fiaddl
ftst
sub
jbe
inc
lret
rorb
jo
mov
imul
jg
shrb
andl
pop
jmp
stos
test
mov
mov
push
in
push
jns
ljmp
fldl
ds
and
fstpt
cmp
mov
mov
push
xor
add
jp
xchg
fs
inc
xor
data16
cmp
and
notl
sub
add
dec
xor
sbb
sbb
mov
repnz
jp
movsb
and
imul
lods
sbb
stos
add
popa
dec
add
stc
subl
cmc
loopne
pusha
test
push
imul
sbb
pop
xor
fldcw
adc
sbb
test
push
xchg
add
jae
adc
xchg
and
in
pop
rolb
push
dec
inc
xor
fs
outsl
inc
sub
xchg
orb
xchg
pusha
or
cmp
cmpsl
jb
lods
cmp
dec
mov
sub
notl
push
pop
sub
dec
jecxz
inc
pop
xlat
aas
mov
pop
mov
pop
inc
dec
mov
lods
shll
add
inc
inc
out
pop
mov
and
sub
call
clc
cs
enter
fcmovnu
int3
test
inc
jmp
and
dec
adc
jmp
scas
xchg
fisttpl
std
mov
fisubs
sbb
pop
shll
adc
out
dec
xchg
and
jle
fildll
loopne
inc
xchg
stos
stc
test
mov
movsl
pop
popl
lret
scas
adc
adc
in
outsl
ret
inc
faddl
clc
jecxz
or
cwtl
sub
popa
ret
push
cwtl
mov
mov
movsb
lcall
inc
push
or
cld
mov
mulb
dec
in
fwait
lahf
lcall
push
out
in
repnz
mov
pushl
or
or
cld
or
xchg
mov
leave
psubb
adc
gs
outsl
mov
and
ret
aam
mov
fwait
mov
aaa
sti
mov
pop
xchg
jle
sub
or
xor
cmp
jmp
mov
inc
scas
jae
xor
jecxz
in
pop
xchg
call
pop
cmp
es
jo
sbb
pop
loopne
insb
psrlq
push
jg
mov
and
mov
mov
jge
xchg
arpl
push
jb
pop
mov
xchg
mov
pop
aad
fs
mov
xor
cmpsl
xor
adc
inc
das
pop
popf
and
mov
inc
jle
and
fmull
and
jo
movsb
xor
inc
aad
jp
xchg
sub
dec
fmul
sbb
jmp
adc
and
lock
jo
stos
xchg
adc
and
sahf
pop
sbb
aam
cld
scas
push
jmp
sahf
ja
adc
aam
jge
mov
lcall
mov
xor
push
fidivs
and
push
xchg
mov
mov
mov
fmuls
out
jo
ret
and
mov
xchg
and
sbb
stc
cmp
daa
add
mov
push
insb
jbe
ficompl
imul
push
movsl
mov
mov
sub
push
dec
call
sub
sub
fists
inc
jo
jmp
insb
dec
ss
or
rcr
pop
pop
sarb
mov
fcomip
mov
lock
cmp
jecxz
scas
aam
mov
int
fcompl
popa
jbe
dec
mov
or
xchg
shrb
sbb
adc
mov
js
data16
gs
in
sub
jbe
inc
jp
das
jno
inc
in
outsl
xor
shr
popa
add
aaa
pop
mov
adc
shrb
mov
test
outsl
add
push
aad
into
je
cmpl
xchg
xchg
bound
xor
push
and
jmp
movsb
lret
enter
jnp
inc
call
sbbl
dec
shll
pop
mov
pop
sahf
add
inc
xchg
push
dec
lods
scas
repz
mov
ds
js
xor
cmp
fsubrp
push
dec
in
adc
ss
mov
mov
ja
mov
add
jae
jmp
inc
pop
push
and
xchg
sub
push
addr16
cmpl
repz
xor
mov
test
imul
xlat
mov
xorb
push
clc
push
mov
cmp
mov
loope
or
lcall
sub
cmp
adc
inc
inc
mov
xor
mov
inc
subb
inc
lds
aad
mov
xor
in
cmp
shrb
add
mov
push
cmpsl
loope
cmp
imul
sub
ljmp
aas
sbb
scas
movsl
sbb
test
cltd
mov
jge
inc
or
jbe
in
xchg
mov
adc
cwtl
or
sub
and
jg
int3
mov
mov
ds
ljmp
mov
aas
xchg
sub
add
push
lret
mov
je
test
jno
push
dec
es
and
or
popa
xor
mov
mov
cwtl
test
push
repz
out
aad
xor
sub
mov
add
test
popf
inc
inc
out
pop
js
add
add
mov
dec
xchg
cwtl
scas
lods
in
sub
rcr
mov
jge
push
add
jp
es
mov
mov
xchg
fistl
push
xchg
push
sbb
ss
xchg
mov
fstpl
push
sub
lcall
jmp
pop
aas
lods
xor
mull
aas
imul
arpl
js
push
pop
add
aad
adc
into
xchg
aam
adc
xor
pop
pop
icebp
xor
jl
and
push
mov
loope
in
shll
call
push
les
inc
ss
inc
mov
inc
pop
add
mov
mov
mov
movsl
push
cmp
lret
pop
xchg
push
dec
lea
xchg
or
mov
jns
out
pusha
dec
rcrb
cmpsl
lods
call
push
insl
xlat
enter
out
fcomps
and
in
or
fcom
inc
cmp
xor
mov
sub
add
in
push
shlb
cld
jo
movsl
paddw
mov
and
outsl
fnsave
xchg
je
sar
jmp
fiaddl
lock
inc
imul
xchg
mov
aad
enter
sbb
pop
shrl
ret
das
sbb
pop
pop
adc
and
sub
fists
xor
push
add
test
lahf
aad
testl
dec
xchg
adc
and
std
xchg
fcmovb
out
lret
orb
outsl
inc
xchg
rcr
pop
pop
popa
data16
out
xchg
enter
out
loope
push
orl
shll
ret
dec
fcoml
pusha
mov
mov
sbb
sub
out
daa
adc
xorb
pop
dec
sub
cld
cwtl
pop
jmp
push
cmpl
fistl
mov
pop
xor
rcrl
movsl
xlat
imul
movsl
jo
subb
cmpsl
mov
sub
cwtl
pusha
pop
movsl
into
mov
mov
add
xchg
mov
jmp
mov
sbb
sarl
inc
aaa
iret
out
cmp
xchg
jg
out
sbb
shll
push
imul
mov
lret
mov
insl
loope
jmp
cld
test
inc
pop
fdivrl
inc
outsb
sbb
and
xchg
pusha
aam
pop
push
inc
clc
and
inc
test
lcall
cli
test
dec
daa
mov
mov
ret
std
repnz
movsb
cmp
dec
aad
inc
rorl
push
dec
mov
stc
mov
clc
pop
xchg
pushf
fdivl
lea
data16
adc
andl
adc
in
imul
cmpsl
cmp
jg
adc
sbb
and
ret
inc
mov
imul
push
xor
cmp
xchg
push
jb
pop
inc
lods
inc
adc
xchg
xchg
scas
stos
mov
and
inc
scas
fs
lea
jge
or
cmpsb
mov
arpl
into
into
inc
inc
xlat
nop
cmpsb
mov
push
xchg
push
lods
outsl
cmpl
xor
std
call
mov
in
inc
mov
daa
or
jbe
push
dec
xlat
jecxz
call
pop
out
in
adc
sub
imul
and
xchg
ds
pop
pop
int
pop
jne
mov
push
inc
call
mov
jl
inc
stos
xor
imul
xchg
mov
std
cld
mov
clc
faddl
mov
mov
adc
push
adc
ret
addl
push
test
add
sti
sahf
jbe
shrl
inc
pushf
inc
push
test
dec
pop
xchg
sbb
fdivrs
jno
jl
scas
int3
lds
je
push
push
nop
adc
data16
lods
jb
sti
pop
jp
outsl
or
fsubs
and
or
shl
push
cwtl
push
aad
jle
aad
push
xchg
fsubrl
push
aad
test
insb
rcrl
pop
push
push
popf
mov
push
dec
outsl
ret
xlat
or
pop
adc
sbb
xor
mov
andl
out
inc
inc
test
neg
sbb
popf
or
push
adc
adc
shlb
cmp
pop
mov
popa
insl
pop
rcll
mov
lret
sahf
es
js
dec
cmpsb
mov
pop
cmp
inc
iret
jae
rcll
and
inc
mov
loopne
rclb
fisubrl
incl
mov
stos
popf
loope
sbb
adc
imul
fcompl
sub
xchg
pop
and
lock
lds
sti
or
ss
adc
pcmpgtb
enter
in
loope
or
rorb
add
sub
push
push
mov
sarb
push
ret
jmp
sbb
repz
inc
les
sbb
lock
cmp
int3
stos
lcall
icebp
mov
add
xor
in
cmc
sub
sbb
cmpb
popf
or
xchg
bound
std
add
push
pop
loopne
sub
mov
mov
xchg
pop
inc
popf
adcl
add
mov
jp
mov
fsubrs
and
test
out
xchg
lods
fsubrl
bound
push
jecxz
mov
push
stc
mov
out
pop
mov
out
adc
lcall
mov
cmp
adc
xor
push
cmp
icebp
ja
adc
jnp
in
in
or
pop
out
jecxz
cwtl
jns
inc
jl
add
pop
shl
xchg
inc
push
xor
mov
pop
clc
jno
dec
fdivr
iret
or
fcoms
xor
dec
lcall
fsts
cmc
movsb
xchg
cmpsl
jno
andl
dec
xchg
ja
test
stos
fsubrs
jae
stc
pop
pop
dec
xchg
adc
push
push
stc
lods
imul
loope
cmp
shr
cmp
mull
inc
pop
or
mov
dec
dec
xchg
fstps
sbb
jecxz
repz
push
fwait
mov
dec
mov
imulb
stc
or
jle
ljmp
test
mov
pop
out
xchg
and
mov
andb
jb
inc
sahf
jl
je
push
xchg
mov
push
jecxz
xchg
lods
mov
imull
jecxz
or
scas
out
rcrl
movsl
xchg
mov
pop
jp
and
in
js
jp
fiadds
dec
data16
xor
fcomip
lcall
imul
fadd
cmp
xchg
add
std
loope
sti
shl
and
mov
imul
insb
add
sub
mov
xlat
icebp
sbb
clc
clc
mov
fdiv
push
enter
jno
cmpb
mul
pop
pop
icebp
repnz
int
dec
and
add
or
in
loop
adc
dec
clc
movsb
cs
push
mov
jle
shr
jmp
inc
push
into
fwait
push
test
dec
imul
or
cli
jge
xchg
movb
or
jle
lds
imul
loopne
stc
lahf
mov
and
enter
and
jle
pop
mov
jne
mov
sbb
das
insl
lret
repnz
insb
js
popa
scas
push
lods
jge
inc
outsb
add
cmpb
sahf
arpl
and
sahf
incb
adc
or
shrb
fdivl
mov
faddp
xor
dec
mov
insl
xchg
inc
lahf
stc
arpl
ljmp
cmp
mov
nop
in
cwtl
push
notl
mov
or
lret
push
sbb
mov
rorl
push
add
xchg
movsl
add
out
loop
sub
mov
stos
pop
std
lahf
inc
aad
nop
push
adc
push
iret
out
test
sub
dec
mov
jae
ds
cli
popa
and
out
sbb
mov
jno
sub
pop
mov
xor
out
cmp
cmp
out
cs
xor
or
movsl
icebp
cld
aaa
scas
xchg
add
test
cli
pop
aam
cmp
or
gs
roll
xlat
and
or
flds
and
cmp
push
and
mov
test
cmp
imul
mov
hlt
add
ret
cli
ret
adc
ret
push
push
mov
mov
iret
in
or
mov
and
xor
inc
push
sub
adc
lods
hlt
add
je
mov
push
cmp
add
sar
int3
dec
push
push
sbb
fildl
lods
push
cmc
jmp
adc
iret
fcoml
jb
notb
scas
enter
pop
std
add
fs
scas
mov
adc
or
xchg
dec
icebp
pop
add
xchg
hlt
popf
stos
adc
adc
clc
jle
sub
mov
imul
push
jne
popa
sar
gs
add
loopne
adc
sub
orb
lock
adc
jmp
jno
xchg
pop
inc
sub
mov
mov
dec
push
add
or
lcall
nop
inc
pop
ret
bound
imul
int3
adc
andb
call
dec
fnsave
mov
jae
mov
in
jle
cmpl
push
push
sbb
rorl
adc
lcall
outsb
sbb
std
push
mov
test
push
sbb
lret
mov
xor
test
outsb
cli
fsubrl
lods
leave
pushf
mov
or
rclb
sub
xor
in
call
jne
sti
push
mov
inc
add
add
testb
inc
inc
lahf
sub
fcoms
sub
imul
xchg
mov
cmp
add
decl
mov
nop
push
leave
fstps
xlat
dec
mov
lcall
add
push
xor
imull
ds
mov
lds
add
mov
call
inc
lcall
sub
sub
push
inc
jo
inc
add
jmp
mov
push
cmp
scas
mov
into
inc
enter
inc
jb
mov
lcall
sub
dec
pop
shrb
or
add
mov
push
loop
xchg
jbe
test
sti
sbb
dec
cmpl
adc
or
lcall
in
cmp
jge
mov
xchg
dec
and
and
lock
cwtd
cli
add
sub
pop
mov
lds
cld
int
sbb
ja
or
cli
clc
or
movsb
adc
cwtl
movl
push
xlat
mov
hlt
and
jae
and
sbb
mov
cld
movsb
out
mov
imul
test
shrb
cmpb
mov
mov
add
mov
rcl
mov
adcl
pop
push
push
sahf
ret
lret
outsl
loop
clc
stc
and
in
fucomi
inc
mov
mov
cltd
hlt
flds
xchg
rep
pop
insl
and
jp
mov
inc
mov
rcrb
jns
mov
fisubl
jae
jne
fs
add
cld
ds
sub
scas
and
pusha
loop
into
push
and
outsb
push
and
addr16
mov
push
mov
std
xchg
cltd
das
aaa
ja
hlt
fiaddl
push
pop
jle
adc
or
jbe
out
fldl
test
mov
into
aam
cmp
push
jbe
mov
outsl
or
xor
rolb
fnstsw
push
jecxz
outsl
mov
stc
rorb
push
fwait
push
rclb
rcll
add
sub
xchg
add
xchg
lcall
scas
xor
inc
mov
stos
xchg
adc
mov
outsb
stc
pusha
mov
pusha
adc
sbb
mov
dec
mov
mov
adcl
leave
les
cmpsl
fucomp
dec
mov
jb
cli
in
out
mov
popf
fcomip
cmpsb
notb
sbb
inc
mov
repz
call
inc
adc
jl
xor
outsl
fnstenv
loopne
nop
mov
xor
pop
inc
sub
je
dec
lock
or
jb
xchg
ja
xchg
mov
jg
cmp
adc
lods
xchg
cli
fisubl
and
outsb
push
cmc
mov
inc
mov
or
subl
out
arpl
aaa
loop
inc
stc
push
sub
subl
cmp
fwait
into
jne
add
cmc
xor
xor
loop
ret
rcrb
pop
or
addb
inc
and
mov
movsl
cmp
lods
sub
or
ss
neg
fwait
jno
mov
call
mov
fstl
push
enter
mov
cltd
jns
mov
add
clc
inc
data16
dec
aad
nop
and
pop
jnp
mov
int
scas
mov
sub
mov
test
ret
sbb
cld
in
cmp
lods
cmp
lret
scas
pop
subl
je
pop
push
cmp
mov
xor
xchg
jmp
lahf
inc
and
loopne
mov
jae
in
pop
jecxz
xor
mov
jl
aaa
cwtl
jmp
cmp
and
icebp
jecxz
push
add
push
push
int
sbbb
sbb
mov
lahf
mov
inc
in
jo
in
dec
cmpsl
xlat
in
iret
mov
lret
sub
ret
xor
lret
movsb
xor
lods
roll
adc
xchg
pushf
mov
shlb
adc
sbb
int3
rcll
lds
cmp
jno
sarb
push
int3
pop
push
dec
mov
push
sbb
ja
data16
into
pop
cld
repnz
inc
scas
mov
and
mov
push
push
inc
and
mov
xor
xchg
jmp
xchg
mov
jmp
xchg
xor
xor
xchg
cs
pop
dec
xor
inc
test
jne
sbb
add
jmp
lock
add
mov
loop
mov
ficomps
insl
xor
push
in
addb
iret
or
and
add
inc
popa
mov
jecxz
mov
mov
inc
push
xchg
jne
add
test
repnz
and
out
xor
in
push
es
jge
movsl
sbb
cs
pushw
push
cmpsl
dec
add
loope
cmp
shll
mov
arpl
ljmp
fdivrl
xor
mov
out
mov
inc
in
mov
lods
push
cld
int3
lods
adc
ret
cmp
addr16
dec
or
movsb
sub
mov
push
loop
inc
or
loopne
push
adc
mov
xchg
xor
or
xchg
arpl
cmpl
cmp
in
xor
jnp
fwait
insb
cmp
shll
test
mov
ss
mov
inc
in
xor
ret
cmpsl
dec
cmpsl
sub
push
fistpl
inc
inc
outsl
outsb
inc
mov
pop
lods
aas
jg
mov
int
pop
test
pop
andl
sub
cmp
dec
aas
rcl
cmc
in
mov
stc
test
je
xchg
lea
fsubl
mov
shl
in
inc
mov
movsl
or
or
dec
rorl
loope
inc
mov
sbb
test
dec
cwtl
ljmp
jp
insb
int3
movsb
add
inc
mov
cvtps2pd
sub
pop
add
jns
add
xlat
rcrl
add
pop
mov
dec
inc
mov
dec
jle
push
mov
in
mov
mov
sbb
outsl
push
push
or
ljmp
jne
rorl
pop
leave
mov
or
mov
cmp
lcall
dec
jp
mov
and
repz
dec
hlt
out
cli
repz
push
xor
pop
push
in
mov
push
and
pop
ficoms
shlb
xor
push
push
lock
pop
movsl
bound
loope
mov
iret
lret
mov
dec
jmp
xchg
push
sbb
cmp
addr16
roll
dec
orl
lods
xchg
xchg
or
jo
jp
or
arpl
adc
xor
pop
pop
mov
push
fcmovnbe
loopne
push
and
in
pop
mov
in
mov
out
ljmp
xor
ret
mov
mov
xor
jns
icebp
sub
js
fsubs
shrl
mov
dec
ret
fsubrp
mov
fnstsw
out
sti
cwtl
dec
xor
adc
cltd
or
mov
in
push
inc
fmuls
imul
xlat
lret
and
addr16
pop
clc
jne
loopne
push
add
aas
xchg
push
cltd
sbb
lcall
jecxz
mov
mov
inc
push
dec
and
adc
jmp
push
or
test
xor
clc
mov
push
inc
mov
std
in
cltd
mov
sub
iret
jmp
sbb
jmp
xchg
jmp
imul
stc
testl
pushf
pushf
dec
mov
popa
lret
fwait
xor
std
clc
and
loope
fwait
movsb
je
cwtl
std
iret
in
stc
aaa
jnp
mov
out
in
les
rcll
sbb
movsl
sarl
imul
push
mov
sub
push
inc
xchg
pop
mulb
jnp
int3
gs
jp
jo
hlt
inc
cltd
push
in
stos
dec
mov
and
jae
aaa
insl
xor
fcomip
sbb
cmp
mov
popf
or
aad
pushl
test
inc
inc
mov
test
push
fcomip
fistps
sbb
dec
adc
jecxz
add
mov
or
das
inc
and
addb
xlat
cmpl
ss
xchg
inc
stos
mov
pop
mov
lds
mov
and
loopne
cmp
aam
mov
aas
mov
cmp
xchg
cwtl
inc
pushf
dec
xor
lea
lock
pusha
icebp
cmp
frstor
add
lahf
jle
sbb
jae
sub
sahf
test
adc
daa
push
jge
mov
mov
and
cwtl
mov
lods
out
stos
inc
xchg
jbe
push
dec
dec
inc
icebp
repz
jp
enter
sub
inc
popf
scas
jl
mov
ss
inc
push
lahf
mov
scas
movsl
dec
inc
dec
adc
adc
sahf
xlat
test
jb
pop
dec
lods
ljmp
cmc
jae
neg
pop
sbb
lahf
test
xorl
dec
dec
or
fs
int3
cmpsb
push
sub
outsb
inc
loop
mov
inc
jo
mov
add
sub
cmp
shll
sbb
test
loop
aam
fadds
sbb
fsts
stos
movsl
aaa
jp
sbb
ljmp
sub
push
in
in
push
aad
les
mov
insl
xchg
adc
das
sbb
lods
mov
fcmovu
fisubrl
out
jns
andl
test
mov
clc
and
in
mov
sbb
pusha
imul
sbb
shl
bound
hlt
in
xchg
dec
outsb
lahf
data16
and
push
add
es
jmp
push
xchg
clc
mov
add
pop
cmp
cmp
mov
mov
xlat
push
mov
clc
loop
xor
adc
adc
fimuls
cmp
cs
lock
sub
jne
rcr
mov
popf
push
mov
sar
in
mov
push
sub
movsb
add
test
mov
out
cmc
inc
pop
push
je
mov
lods
adc
adc
enter
data16
xchg
adc
shlb
jp
xchg
jmp
sbb
arpl
insb
test
mov
mov
and
subl
push
adc
add
mov
sub
cmpsb
fdivl
xchg
inc
stos
jb
arpl
push
mov
cmp
mov
sub
mov
pop
insb
inc
sti
xlat
loope
ds
pop
mov
add
adc
dec
ffree
mov
push
sub
fbstp
lcall
push
test
testl
addr16
push
repz
xchg
insertq
jns
clc
add
fists
popa
lret
and
push
mov
lcall
and
push
fmulp
mov
adcb
imul
enter
sub
aam
push
cmp
and
and
lods
fs
mov
xor
nop
sbb
mov
sbb
inc
testb
andb
mov
sbb
fisttpll
rcr
cmpsb
or
pop
xchg
jno
stc
addr16
add
hlt
push
and
psadbw
mov
incl
mov
add
mov
inc
shll
nop
pop
cltd
outsl
mov
sbb
mov
adc
fistpl
pop
mov
cld
data16
inc
jle
adc
and
ss
add
mov
mov
add
data16
pop
outsl
aad
pop
std
shl
fsubrs
popf
out
sub
ret
adc
xor
add
dec
data16
pop
popf
mov
jae
aaa
push
mov
ss
jno
daa
mov
push
adc
and
repz
or
xchg
jmp
es
aas
and
aad
xor
lea
add
push
push
ljmp
ficoml
ljmp
std
stos
push
pop
cwtl
push
cmp
jecxz
fcomps
jb
pop
call
pushf
jle
add
sub
adc
mov
in
xor
jnp
sbbb
roll
cmp
dec
jns
sahf
sahf
imul
xor
scas
xchg
xor
or
scas
fsub
cmp
aaa
out
jnp
mov
std
lret
mov
mov
or
ljmp
and
lds
in
movsb
push
push
aas
lea
jbe
cltd
fdivrl
nop
mov
cmp
repnz
cmp
mov
popa
lock
jl
sbb
mov
sub
mov
mov
std
rorl
insb
inc
call
mov
sbb
fldl
inc
sbb
aas
jns
mov
loop
out
sbb
lock
movd
sbb
clc
loop
cwtl
pop
imul
sbb
lahf
push
mov
call
leave
inc
jg
movsl
fcmovnbe
popf
or
nop
and
sbb
mov
mov
gs
les
fidivl
ljmp
fwait
loopne
and
ss
scas
movsl
iret
std
test
cli
leave
mov
cmc
cmp
jmp
les
shlb
ds
mov
movsb
jo
aam
sbb
outsb
lock
and
inc
mov
test
popa
sbb
pop
call
jns
rcr
push
jmp
jne
mov
ss
imul
xchg
mov
jbe
cltd
push
out
clc
add
mov
lahf
and
push
cltd
cli
mov
mov
adc
cmp
dec
sahf
or
cmp
pop
jg
cmp
cli
mov
lock
and
inc
pop
ja
or
negb
rolb
inc
push
aas
adc
pop
push
add
mov
mov
inc
scas
aas
push
inc
mov
cs
xchg
pop
inc
call
sbb
orb
sbb
addr16
add
push
dec
add
lods
addb
stos
jg
cmp
loopne
je
xchg
call
sti
js
les
dec
and
pushf
jnp
test
xchg
sbb
aaa
outsl
clc
loopne
aam
push
out
fdivs
or
cmp
psrlq
mov
inc
out
push
add
pop
gs
ja
xchg
shll
mov
stc
psrlq
imul
sub
pushf
scas
lcall
xorl
sbb
loope
ljmp
lcall
mov
or
js
lea
iret
push
pop
pop
call
clc
in
and
movsb
push
jnp
sbb
out
sub
sbb
jl
sub
jl
pop
dec
pushl
insl
push
add
fnsetpm(287
xchg
aas
jg
sub
mov
add
rep
fsubrl
fmuls
scas
dec
inc
and
cmc
rolb
adc
and
enter
popa
pop
in
xor
mov
insb
repnz
aaa
pushf
jae
ret
mov
repnz
roll
push
pop
and
std
push
mov
or
in
cli
push
scas
enter
add
mov
mov
shr
sbbb
fsubl
adc
lret
stc
loop
mov
insl
loope
setno
mov
mov
pop
in
fdivl
adc
imul
jecxz
dec
fdivl
or
mov
mov
sbb
es
sbb
jp
in
cld
sbb
out
rcll
filds
sti
mov
arpl
je
xor
std
push
out
jno
mov
cmp
leave
popl
int3
xor
int
sar
jb
in
ja
outsb
repz
sbb
inc
fisttpll
adc
xchg
neg
push
or
jb
adc
mov
fldcw
shll
lods
adc
or
rol
movsb
cmpsl
and
out
imul
cmp
scas
sbb
movsb
jae
fistps
test
sbb
add
mov
and
add
push
sbb
adcl
int
fsubrs
lahf
push
pop
loope
jl
popa
maxps
orb
cld
push
pop
hlt
imul
es
or
aad
mov
and
add
aad
rclb
fiaddl
mov
xchg
mov
jno
mov
popf
test
push
test
inc
out
mov
mov
out
push
out
loop
cmpsb
rcrb
xlat
inc
scas
lahf
loop
and
push
fld
lcall
dec
inc
jge
dec
movsb
lods
popa
nop
cmp
test
mov
imul
jg
cmc
push
leave
aaa
mull
shrl
mov
in
cwtl
or
adc
outsb
dec
mov
shrb
in
out
jne
in
mov
lret
iret
mov
daa
jmp
call
pop
xor
in
scas
pop
mov
xchg
loop
shl
test
dec
jle
add
xchg
jnp
adc
jmp
fcomp
sbb
in
sbb
push
dec
sub
mov
adc
pushf
stc
pusha
mov
out
add
xlat
clc
xor
loope
dec
es
shlb
leave
fstpl
out
lret
in
orl
bound
pop
jge
push
lret
addr16
lahf
inc
mov
jbe
and
lret
pop
jae
mov
xor
aam
xor
cmp
adc
mov
xor
mov
mov
pop
lods
adc
in
xor
clc
adc
xchg
popf
pusha
popa
xchg
dec
repz
push
insb
sbb
pushf
xorb
cli
fwait
pop
mov
sbb
bnd
repnz
jl
subl
xor
leave
data16
cmp
sbb
scas
sub
push
cmpsl
std
pop
cmp
ja
or
stc
popa
imul
cmp
jg
lcall
icebp
pop
int
lcall
addr16
adc
mov
push
inc
arpl
and
das
push
jbe
push
xlat
push
push
fbld
out
ljmp
xor
cmp
out
imul
add
or
sarl
or
cld
inc
fbstp
insl
pushf
cmp
imul
sbb
fsubs
cmp
pop
movsl
mov
loopne
cmp
xor
int3
mov
hlt
test
pusha
mov
test
mov
mov
jecxz
inc
add
and
orl
jno
or
addr16
fcmovnbe
aas
adc
icebp
cmp
mov
ljmp
xlat
or
lods
fwait
dec
out
adc
imul
into
inc
sbb
sbb
arpl
sub
xchg
gs
lock
or
mov
mov
iret
mov
ret
xchg
xor
pop
adc
lea
out
jl
sbb
out
mov
ds
lret
dec
adc
add
inc
pop
add
add
je
and
mov
aam
mov
cmp
sbb
int3
out
mov
js
das
xchg
mov
push
xchg
sbb
pop
hlt
inc
push
cmp
mov
inc
subl
cmp
mov
push
mov
arpl
or
pop
inc
inc
jp
scas
cltd
cmp
mov
xor
sbb
push
nop
pushf
jae,pn
outsb
adc
into
sbb
test
add
js
addb
fisubl
add
push
loopne
out
cmpsb
movsl
dec
imul
sbb
popa
mov
jo
jmp
shrl
loop
imull
aaa
pop
pop
push
hlt
das
sbb
cmpsb
add
jl
jno
xchg
jne
bound
pushf
push
int3
cwtl
idivb
insb
mov
pop
leave
dec
movsl
fs
cld
cmp
jmp
pop
or
jae
mov
out
jl
pop
mov
dec
mov
inc
shlb
fbld
xchg
daa
and
mov
push
ljmp
pop
int3
jmp
mov
sbb
jg
xchg
xor
imul
xchg
jns
dec
cli
mov
push
sub
push
je
jge
or
inc
test
cmp
ficompl
jg
xor
lods
idivb
std
enter
loop
out
pop
jecxz
lea
xor
xor
sub
or
ja
cmp
xor
add
cli
xlat
cmp
ss
inc
or
mov
stos
dec
pop
popf
jo
aas
das
pop
insl
out
sub
or
jnp
loopne
cmpsb
cli
or
pop
ljmp
in
data16
push
std
bound
popa
and
gs
jmp
jecxz
fs
daa
jg
out
out
xchg
rcrl
fcmovnu
add
insl
and
push
call
icebp
push
mov
ja
cmp
jns
mov
and
roll
jge
pop
ds
or
push
push
jo
call
xchg
scas
push
iret
sub
sti
es
test
sbb
and
mov
je,pn
loope
jge
xlat
or
add
and
push
push
lock
jmp
jns
cmc
or
jmp
mov
sbb
out
cmp
mov
lahf
push
push
scas
xor
ljmp
test
adc
sahf
dec
pushf
xor
jmp
dec
and
add
int3
frstor
add
fwait
push
data16
shrb
test
es
jnp
adc
in
add
imul
xchg
rcrl
pop
dec
push
jbe
xchg
sub
mov
rcrl
jne
push
out
sarb
je
cltd
js
xchg
pop
or
push
push
jecxz
pop
xor
xor
push
mov
out
xchg
pop
test
mov
push
jge
in
into
out
int
pop
sub
test
mov
mov
adc
divl
bound
lret
jecxz
xorb
push
jo
pop
popf
testl
fistl
lea
adc
loop
jns
call
das
adc
sub
add
into
jmp
lods
or
mov
pop
aaa
out
dec
enter
xor
mov
push
pop
in
mov
daa
adc
add
inc
adc
movsl
dec
out
push
sbb
jo
adc
dec
mov
or
je
adc
repnz
rcrl
cmp
fnstsw
or
daa
inc
inc
mov
inc
dec
test
mov
pop
and
aam
pusha
sbb
cltd
iret
cmp
fmuls
clc
mov
dec
test
cmpsl
xchg
int
iret
or
iret
popf
popf
inc
roll
mov
xchg
js
fidivl
or
mov
xlat
dec
jns
int
adc
add
or
push
aas
sbb
pop
xchg
sub
ud0
clc
push
sub
mov
cmp
xchg
pop
and
cli
xor
sbb
dec
sub
mov
jo
mov
jg
cmp
cwtl
sub
jns
pop
gs
mov
cli
popa
mov
mov
inc
xchg
fsubs
adc
nop
loop
ret
cmpsl
xor
adc
pop
inc
sub
jmp
sbb
dec
sub
dec
int
pop
lahf
jae
cmc
and
cmpsl
push
mov
push
fidivl
inc
out
dec
fldl
stos
cmp
insl
sub
rcrl
cwtl
xchg
jle
xchg
xchg
jnp
aam
pop
mov
jle
lret
mov
pop
es
rorl
popf
mov
inc
out
adc
fld
sub
out
mov
repz
rcl
dec
push
mov
jnp
ret
out
lea
cmp
bound
sahf
pop
out
clc
mov
into
inc
add
je
xchg
mov
lahf
dec
aad
cmp
dec
imulb
cmp
mov
aam
lods
cmpsb
sub
enter
fstl
aam
mov
mov
stos
jp
lret
xchg
jo
iret
dec
xlat
inc
movsl
push
in
sub
mov
int3
gs
add
inc
rorl
push
sbb
inc
xchg
inc
movsl
push
shl
xchg
ds
shrl
jne
das
xlat
jbe
das
aas
fisubl
ljmp
ret
fcomip
dec
stc
and
adc
xchg
fs
jns
data16
cwtl
adc
sbb
cmp
mov
lcall
lods
mov
sub
das
jmp
in
mov
ret
dec
or
jo
mov
mov
dec
shll
or
add
fsubs
xchg
rorl
and
scas
pop
mov
lea
insb
sub
cs
testb
out
or
inc
and
jl
jle
xchg
fs
shlb
frstor
xor
mov
pop
mov
ljmp
pushf
aad
ljmp
arpl
sbb
fnstsw
push
mov
inc
cmpsl
out
cmp
push
out
bound
nop
imul
mov
inc
dec
cmp
fldcw
pop
mov
outsb
mov
adc
lds
mov
cld
lea
add
pop
adc
daa
std
or
pop
xor
push
mov
xor
adc
jp
or
rcrl
sub
cld
sbb
aaa
out
jae
imul
sarb
dec
xor
dec
add
push
push
inc
pop
cmp
in
mov
inc
push
lret
xchg
test
fs
mov
stos
mov
cmp
dec
dec
xchg
xchg
stos
push
push
lods
in
fcmovnb
cltd
ds
sbb
popa
inc
mov
divl
insb
in
sahf
xor
enter
scas
sahf
and
int
test
adc
add
lods
jb
dec
jp
es
mov
clc
add
push
repnz
addr16
icebp
sub
dec
lods
cmp
mov
nop
loopne
dec
adc
out
xchg
pushf
xor
test
push
clc
cmpsl
push
ja
pop
mov
and
push
mov
cmpsl
and
sub
jbe
adc
lret
jl
in
xchg
push
push
cld
push
pop
cli
sar
fildl
push
jmp
lcall
scas
rorl
dec
daa
push
hlt
call
imul
fabs
jmp
iret
or
shlb
pusha
jnp
sbb
fwait
test
push
mov
fisubrs
lret
mov
and
pushf
sub
mov
mov
xchg
cmpsb
pop
dec
xchg
hlt
xor
adc
cmp
add
aad
or
xor
mulb
imul
lds
fucom
xchg
inc
add
xchg
xchg
loopne
xor
jns
add
loop
aaa
sub
mov
mov
fildl
xor
cmp
ss
dec
sbb
stc
decl
and
xor
add
add
sarl
aaa
je
js
pop
mov
pushf
sar
insl
jnp
mov
test
sub
sub
xchg
mov
lods
lcall
mov
adc
lods
cmc
leave
adc
pop
hlt
mov
inc
into
in
repz
push
jo
mov
ljmp
xor
clc
dec
je
cmp
pop
std
rcr
mov
xchg
in
gs
mov
aam
clc
loop
nop
pop
lock
ds
xor
dec
xchg
xchg
mov
sub
call
xchg
and
decb
insb
lahf
outsb
movsb
add
iret
add
js
rolb
mov
mov
stos
mov
in
fsubrl
adc
dec
xor
mov
dec
in
in
idivb
jno
pop
sub
sub
adc
ror
ljmp
insl
enter
pop
bound
pop
lods
or
mov
xor
cmp
lcall
pop
jmp
add
pop
push
arpl
xor
sti
xor
mov
testl
jo
push
clc
loope
xor
push
sbb
inc
pop
mov
mov
loope
mov
iret
sti
ret
xor
js
dec
mov
jmp
jbe
ret
mov
test
imul
cmp
mov
mov
outsb
cmpl
push
je
lahf
sbb
lret
mov
lods
test
sub
jle
lahf
xchg
ds
subl
jmp
cld
icebp
loopne
push
loop
add
dec
movsb
es
in
movsb
addr16
and
inc
in
mov
lret
adc
push
and
das
cld
dec
negb
sbb
aas
push
je
push
xchg
int
pop
nop
adc
fistpll
ret
fdivrl
cmpsl
es
push
pop
sub
les
in
add
ftst
aam
and
mov
or
mov
cmp
mov
inc
dec
or
xor
jns
loopne
dec
pop
pop
and
ficoms
daa
xor
outsb
lcall
out
mov
sub
rorl
xor
testb
sbb
cmp
stos
inc
mov
inc
out
mov
xchg
push
xchg
in
mov
mov
ror
pop
mov
fbld
imul
add
mov
cli
mov
repnz
std
sub
aas
data16
lock
adc
dec
aaa
shlb
adc
xchg
std
dec
loope
add
jno
push
rcl
xor
push
dec
push
mov
incb
ret
dec
dec
clc
scas
mov
adc
xchg
in
adc
mulb
cs
lret
dec
mov
out
xchg
or
sbb
push
mov
and
lods
adc
cs
test
icebp
pop
push
mov
or
stc
mov
sub
adc
push
and
aaa
and
ret
mov
and
jbe
lret
daa
cmc
lret
jp
orb
leave
movsl
mov
inc
shrb
lea
out
shrb
lret
inc
sbb
flds
cld
push
mov
mov
sub
test
push
insb
std
xor
sub
addr16
repnz
icebp
and
ja
and
fs
loopne
int3
movsl
jae
xor
movsb
jecxz
and
icebp
in
mov
or
fdivrl
push
dec
and
push
cmp
add
jmp
push
ds
enter
and
adc
cltd
mov
mov
arpl
nop
sbb
pop
sub
jge
push
dec
mov
xchg
mov
or
mov
cmpsl
mov
jge
cmp
or
pop
sarb
add
xchg
or
add
insl
iret
int3
pusha
popf
into
scas
push
xchg
or
inc
lods
int
sub
mov
repnz
inc
call
xchg
and
jbe
add
inc
nop
cmpsl
bound
pop
adc
ja
loopne
rolb
or
sbb
movsb
loop
sbb
xlat
ss
add
sbb
shl
ret
repz
sbb
cmp
imul
jb
mov
leave
xchg
add
ret
andl
and
nop
js
jo
xchg
xor
pop
outsl
adc
adc
out
jle
test
in
cld
jle
dec
xor
enter
adcb
xor
or
lret
sub
cld
das
xor
push
dec
push
jmp
outsl
leave
in
inc
inc
mov
ds
psllq
mov
adc
popa
stos
jnp
mov
inc
rol
or
cltd
in
or
sbb
jne
sub
pop
int
aas
popf
add
push
or
mov
push
sti
test
xlat
pushl
xchg
mov
cmpsl
mov
xchg
pop
lea
cmp
call
out
mov
stos
pop
into
into
xchg
aaa
or
pop
ret
mov
lods
in
add
decb
push
int
or
pop
push
lahf
add
sbbb
roll
xor
sub
data16
mov
shll
jp
notl
cmp
inc
and
mov
push
repnz
dec
xchg
aam
inc
jge
xchg
adcl
xor
ret
sub
mov
push
fistps
out
xor
in
cmc
fidivrl
imul
call
cli
test
inc
out
hlt
inc
cld
push
cmpsb
lock
lods
outsl
add
mov
mov
inc
xchg
iret
add
shlb
or
out
sahf
sub
jmp
mov
shlb
mov
push
aam
push
pop
sub
push
push
sub
push
push
xor
sbb
dec
daa
pop
movsl
mov
add
fwait
cmp
mov
addb
rorb
xchg
shll
out
sub
inc
rol
xor
in
mov
or
jmp
xor
jbe
inc
clc
daa
push
push
stos
pop
xor
packssdw
mov
sbb
sub
ljmp
clc
lods
es
jmp
cld
xchg
cmp
xchg
mov
pop
orl
rcrl
jg
adc
sbb
lcall
lea
or
int3
mov
imul
enter
icebp
icebp
lret
mov
dec
sub
push
jmp
sub
inc
dec
add
je
push
adc
lea
pop
xor
push
mov
loope
sub
ret
jmp
mov
xchg
cli
xchg
lahf
inc
add
xor
xor
push
cltd
fisubrs
push
fs
dec
pop
repz
ret
pop
ret
fisubrs
call
sub
les
pop
aaa
lock
dec
out
fwait
sbb
xchg
push
jnp
js
testl
loope
xchg
mov
testb
cs
cmp
inc
inc
pop
cmpsl
dec
pop
mov
mov
xchg
imul
enter
aaa
lds
movl
add
mov
or
into
cmpsl
repz
jl
pop
loop
xor
pop
jge
adc
lret
pop
cld
inc
sti
sbb
aam
cmpb
jbe
cwtl
jp
shlb
add
xchg
iret
in
inc
jae
inc
icebp
sbb
movsb
pop
outsl
xchg
lea
sbb
int3
sbb
ja
inc
insb
cli
das
pop
out
cmp
xchg
inc
xchg
xchg
sub
sub
cltd
cli
pop
sti
aas
cli
mov
jp
xor
xchg
icebp
push
and
adc
sub
xlat
scas
xchg
jo
mov
and
cmpsb
or
imul
pop
or
cmp
cmp
push
dec
jae
in
ds
inc
jg
xchg
data16
mov
cltd
les
jmp
jecxz
test
and
bound
loopne
inc
push
add
add
adc
nop
dec
int
mov
test
pushf
push
mov
ret
lahf
sahf
inc
or
mov
cmp
lahf
mov
pop
into
mov
adc
dec
sub
stos
push
cmovg
add
out
xor
xchg
mov
and
add
sbbb
cmp
mov
cs
repz
cli
shlb
das
xchg
mov
popf
call
jbe
cmp
fwait
mov
jnp
jle
mov
or
pusha
push
jo
insl
ljmp
arpl
xor
mov
cmpsb
lock
lds
icebp
mov
and
inc
sti
scas
lods
cmp
cmpxchg
pop
out
or
inc
stos
ljmp
xorl
popf
ret
scas
fists
inc
adc
dec
add
and
jbe
xor
xchg
je
pop
hlt
inc
loope
pop
add
lods
outsl
aas
cmpsl
xchg
mov
mov
ss
rcrl
jno
bswap
in
mov
xchg
cli
mov
jp
jmp
in
into
xor
scas
lods
loop
mov
ljmp
or
cmp
insb
lds
jb
dec
and
inc
mov
pusha
pop
mov
in
and
movb
cmpsl
push
mov
ficoml
ljmp
and
out
sub
mov
cmp
jecxz
inc
ss
mov
add
fcomps
dec
sub
push
scas
jno
inc
imul
pop
push
jb
mov
fidivl
rorl
testl
add
jmp
inc
test
arpl
fstps
ljmp
mov
dec
adc
pop
jmp
xor
jbe
xchg
jno
jne
dec
pop
adc
sahf
or
push
addl
sub
mov
lods
imul
pop
shlb
xchg
sub
sahf
cmp
ss
jp
test
nop
loope
jg
adc
clc
or
push
push
mov
mov
notl
xor
push
xchg
cmp
xchg
lar
mov
lods
mov
jecxz
mov
push
in
loope
ljmp
jge
fdivrp
cwtl
imul
mov
pop
int
mov
add
js
test
inc
adc
test
out
testb
scas
ret
sahf
mov
push
ret
cmpsl
xchg
cltd
jb
in
int3
adc
pop
adc
xchg
adc
jo
ss
push
jp
cs
xchg
lret
jb
ja
mov
cs
loop
stc
out
pushf
lret
jge
mov
aas
cmp
addb
add
lods
push
cmp
pushf
lret
push
xchg
jge
push
push
insl
int
xlat
mov
dec
mov
dec
incl
mov
stos
push
push
xchg
xchg
mov
dec
stc
mov
dec
ljmp
rolb
pop
data16
fwait
lcall
push
jnp
push
or
xchg
xor
test
or
mov
push
xor
imul
les
cli
jbe
addr16
sub
push
mov
test
shll
fstpl
in
sub
push
insb
aam
ds
push
je
and
sub
rep
jecxz
xchg
lods
das
and
es
jp
mov
fnstsw
dec
dec
in
int3
adc
fildl
jmp
mov
es
leave
jnp
jns
push
sbb
sbb
out
xchg
mov
mov
inc
mov
mov
sbb
cmpsb
icebp
jns
aad
lcall
dec
mov
and
out
jne
adc
out
mov
ljmp
shll
add
inc
mov
add
or
sti
sbb
sub
pop
dec
dec
jno
mov
xor
fcmovu
in
loopne
cmp
jmp
mov
adc
sub
mov
mov
cs
fisubrs
xchg
mov
test
fisttps
imul
jbe
lods
icebp
daa
jl
xlat
mov
fcoms
inc
pop
aaa
and
dec
inc
adc
ss
test
mov
pop
loope
imul
test
cs
and
mov
dec
inc
aam
jnp
dec
gs
add
bound
inc
lock
rol
movsl
popf
pop
ret
push
or
push
adc
add
push
cwtl
outsb
xor
js
mov
or
ret
inc
push
cmp
pop
call
mov
and
and
dec
dec
pop
adc
out
inc
cmc
adc
idivl
xlat
sub
cltd
sbb
fsubrs
les
push
dec
jle
push
stos
jno
pop
adc
mull
dec
jbe
inc
fs
push
aas
xchg
or
sub
aad
cmp
aaa
iret
loope
aas
js
sbb
popf
mov
xchg
jb
in
or
enter
into
popf
push
fldt
mov
shlb
pop
rorl
jle
aam
adc
pop
or
rol
mov
xor
cmpsl
fisubrs
and
add
out
fstpl
repz
xchg
aad
cmpsl
jle
call
ja
sub
ja
imul
loop
in
int3
fldt
inc
lods
nop
push
icebp
jge
or
dec
sti
stc
xor
bound
push
mov
mov
arpl
fbstp
loop
pop
test
xchg
jl
mov
push
add
fnsave
stc
push
sti
adc
fstl
aaa
inc
cli
push
imul
xchg
hlt
in
leave
cmp
or
rorl
jb
push
test
mov
add
test
xlat
xchg
push
int3
adc
fnstenv
xor
mov
and
rcll
jne
add
xor
adc
mov
mov
fwait
cltd
test
arpl
into
out
sbb
mov
jle
cwtl
fsts
sti
inc
sub
nop
sub
cwtl
xchg
ss
and
out
inc
mov
or
jecxz
pusha
lcall
in
cmp
and
mov
aad
mov
mov
fsubs
jl
xchg
stos
mov
mov
rorl
push
push
jnp
repz
lret
movsl
aas
ret
cmp
sbb
out
or
stos
iret
xchg
mov
adc
and
xor
lods
loop
dec
mov
mov
cltd
mov
ljmp
aam
mov
or
mov
pop
es
adc
popa
or
cmp
nop
loopne
rcl
es
ret
sbb
or
inc
pop
xchg
shrb
xor
lcall
push
push
mov
mov
add
pop
dec
pop
in
jb
ret
inc
mov
lods
xor
jl
pop
push
bound
bound
sbb
je
or
xchg
cs
xchg
in
lret
mov
hlt
push
xor
and
pop
cmc
dec
jno
fnstsw
clc
add
lcall
jns
lahf
sub
cmp
scas
xchg
ds
or
xchg
rcrb
hlt
test
add
fs
ret
dec
fld
lret
jb
cmp
aad
xchg
dec
sbb
call
sbbb
add
cmpsl
sub
inc
ret
imul
mov
add
stc
and
cltd
or
xor
and
stos
adc
push
lahf
push
adc
mov
popf
in
dec
shlb
mov
out
or
xchg
and
movsl
test
test
xchg
sbb
cld
cwtl
cmc
mov
loope
daa
pushl
movsb
dec
lock
aas
mov
mov
std
xor
aaa
xor
mov
add
cmp
cmpsl
mov
mov
mov
add
xchg
pop
leave
sub
int3
fldl2e
cmp
popa
jp
xor
in
pop
fwait
cmp
ret
ds
outsb
in
arpl
jae
int3
mov
push
push
sub
in
stos
es
mov
ret
jecxz
nop
repz
jle
insb
jg
add
add
ret
jecxz
hlt
imul
jp
aas
inc
and
mov
ljmp
mov
sub
stos
iret
sbb
jns
and
mov
scas
fidivs
dec
subb
mov
mov
repz
or
push
sbb
cmp
ficompl
or
orb
loopne
leave
or
ret
popf
sbb
lcall
mov
mov
jne
push
in
add
inc
pop
inc
out
int3
mov
lods
mov
lret
stc
outsl
pop
inc
inc
mov
pop
sti
pop
inc
daa
or
jle
outsb
dec
ret
jle
lret
jmp
xchg
ss
rcr
push
mov
cld
push
adc
bound
cmc
cmp
dec
pop
jmp
add
fidivrl
les
test
je
cmp
iret
push
sti
dec
ret
jle
or
insl
loope
mov
push
sub
xchg
cmp
jno
test
popa
ret
cmp
mov
sarb
pop
and
mov
xchg
xchg
xchg
xchg
pop
out
mov
cmp
inc
lods
xlat
outsl
lods
fcompl
add
fisubs
adc
lds
test
test
jmp
jnp
and
mov
out
sahf
testb
loope
and
and
pop
int
or
sub
out
or
pushf
test
inc
je
imul
jg
jns
repz
push
cmp
fisttps
flds
mov
dec
push
stos
inc
stos
push
test
xchg
add
push
push
sbb
fdivl
shll
pop
in
daa
aas
imul
sarl
mov
xor
jl
inc
je
pop
js
fs
push
sbb
insl
or
pushf
insb
pushf
mov
cmp
jae
repnz
arpl
icebp
sub
loopne
sub
test
clc
push
push
daa
xchg
sbb
push
je
pop
outsb
ret
movsb
mov
lea
jne
in
imul
push
imul
cmpsb
add
ljmp
push
nop
cmp
mov
pop
iret
ljmp
js
jp
jl
ficoms
and
sub
jno
jns
jp
out
out
pushf
repz
xchg
mov
test
lahf
scas
mov
pop
xor
inc
pop
loop
pop
call
fstp
xchg
pop
out
jmp
lea
punpcklwd
jmp
pop
es
cmp
adc
mov
xor
ficoml
jbe
test
and
test
and
icebp
push
fdivrs
bound
nop
sbb
jbe
and
xor
mov
push
xchg
mov
sub
cmp
xor
dec
mov
enter
mov
adc
jnp
mov
mov
lret
mov
out
pop
cli
jmp
jecxz
push
gs
pop
or
sub
fistpl
mov
push
mov
xlat
ja
sub
xchg
arpl
and
cmp
sub
cmc
mov
nop
pop
scas
mov
ljmp
push
xor
out
gs
test
stos
fidivrs
push
mov
inc
cmp
mov
jle
sub
shrl
das
cmp
imul
mov
cmpsb
inc
adc
inc
add
push
jbe
dec
aas
fs
lret
xlat
lea
imul
lcall
fiadds
movsl
mov
aad
xchg
push
or
popf
pop
mov
ss
fwait
movsl
pop
nop
add
cmp
mov
ret
mov
and
negl
xchg
shrl
add
nop
sub
test
sub
add
sahf
and
dec
inc
sub
add
cmp
adc
mov
test
fmull
mov
xchg
hlt
mov
clc
cmc
xabort
dec
cwtl
in
scas
mov
push
lahf
jmp
mov
jmp
push
push
xchg
je
mov
rolb
test
push
jp
in
pop
inc
xor
ret
pop
aas
sbb
clc
jl
fcmovne
xor
mov
mov
push
pop
mov
addr16
sbb
push
xor
arpl
in
jnp
sbb
mov
xchg
add
mov
xchg
mov
push
sbb
inc
mov
outsb
cli
adc
out
int
stc
outsl
pop
mov
pushl
icebp
lret
cmp
xchg
mov
out
fiadds
arpl
xor
scas
rclb
aaa
sbb
clc
mov
cltd
fisubl
inc
push
fs
sbb
adc
mov
shll
adc
sahf
into
xor
addr16
aam
jg
jle
push
imul
cmp
int3
scas
jne
and
cmp
adc
cmp
xor
jo
mov
push
mov
pushf
inc
adc
test
sahf
lods
adc
je
pop
inc
das
lahf
push
push
cmp
mov
loop
push
jne
xchg
push
push
push
sub
jg
xlat
das
invd
sarl
pushf
mov
outsb
outsl
mov
aas
lret
inc
xchg
mov
dec
testb
sbb
xor
lret
push
iret
ja
scas
xchg
outsl
sbb
and
pop
loope
inc
mov
adc
fnstenv
lahf
fstpt
dec
mov
js
ljmp
push
decl
test
and
xchg
cmp
push
leave
std
fwait
shl
lcall
lret
add
and
sub
add
push
sti
loopne
loop
out
pop
jns
stc
mov
lcall
mov
jg
dec
add
imul
xchg
repnz
es
pop
ret
lods
shll
ret
cmp
insb
sub
cmpsl
jno
xlat
add
cli
fildll
shrb
rcll
cmp
pushf
frstor
add
ja
lds
or
sahf
cwtl
popa
inc
mov
popf
push
xor
dec
in
jg
lock
push
sarl
push
sub
ret
stos
pop
dec
mov
movsb
or
fmull
and
mov
push
cmp
xchg
arpl
mov
push
and
push
push
xlat
sub
sahf
xlat
lods
push
dec
sbb
js
faddp
in
sbb
pop
into
in
push
cld
fdivrl
out
mov
jecxz
xor
sub
sub
movsb
insl
inc
and
mov
xor
call
xchg
pop
gs
outsb
jmp
mov
fistl
add
sbbl
xchg
je
adc
sbb
cmp
add
or
ret
xchg
cltd
adc
mov
inc
inc
xor
pop
push
or
scas
pop
xchg
fisubrl
int3
cmc
in
or
and
inc
orl
push
cmp
jae
sbb
jp
movsb
aas
out
mov
push
or
push
ljmp
lahf
xor
pop
push
pop
out
pop
aam
das
pop
cmp
testl
sarl
enter
inc
repz
push
mov
repnz
and
or
sub
into
lret
int3
cmpsb
stc
pushf
adc
in
adc
vpsubusb
inc
adc
inc
pop
dec
sbb
mov
sbb
adc
xor
mov
pop
dec
in
xchg
xchg
repz
notl
jmp
mulb
das
out
outsb
xchg
inc
daa
adc
in
mov
arpl
or
in
cmp
or
test
xor
xchg
cmp
xchg
push
pop
add
ljmp
into
lds
inc
andb
lods
pushf
jle
int
pop
sbb
loope
or
push
adc
push
cld
xchg
fidivl
sahf
out
test
fcoms
dec
test
mov
and
es
in
icebp
mov
add
test
arpl
rorb
and
mov
fistpl
lcall
push
mov
mov
mov
adcb
aas
cmp
fcoml
sub
repz
shl
insl
push
adc
jecxz
loope
cmpsl
pop
inc
push
scas
mov
lods
jnp
ss
push
mov
mov
repnz
push
sub
mov
fldl
ljmp
mov
in
out
push
mov
in
mov
xchg
ret
je
cwtl
xor
iret
cmc
fldt
aad
push
push
in
mov
pop
dec
insl
into
aas
dec
sahf
loop
jmp
in
repnz
aaa
cltd
loope
mov
aaa
outsb
sarl
mov
sub
aas
idiv
mov
mov
xor
cmp
add
inc
test
add
push
mov
lods
mov
jno
dec
cmpsb
pop
sbb
xchg
testb
mov
xor
inc
repnz
fbstp
xor
mov
mov
jecxz
dec
arpl
lahf
pop
jb
in
sub
cmc
xchg
in
mov
cmc
push
inc
pop
mov
jbe
pop
jno
cld
popf
or
cmp
aas
xor
imul
dec
loope
add
cli
pop
cltd
mov
add
or
mov
imul
insb
ja
inc
push
cmpsl
out
and
ret
outsb
testb
cmp
cmp
push
in
inc
adc
inc
ret
into
jecxz
mov
mov
sahf
xchg
push
les
insl
inc
xor
inc
adc
jns
xchg
pushf
add
in
bound
in
or
cmp
push
add
shr
lock
out
mov
cmp
push
js
dec
xchg
xor
push
fisubs
inc
and
pop
rcrb
pop
push
push
pop
bound
hlt
xchg
mov
sti
gs
mov
cmp
clc
jmp
and
ja
jnp
fisubrs
shrl
iret
loop
push
push
dec
or
arpl
negl
out
dec
and
in
aam
in
dec
pop
ret
popa
outsl
shlb
mov
xchg
mov
gs
mov
das
daa
dec
xor
enter
mov
idivb
push
cmc
lods
icebp
inc
pusha
cmpsl
shlb
mov
in
inc
ret
les
jg
cmp
loop
jns
rorb
add
jno
add
mov
mov
outsl
lret
dec
inc
int3
cli
pop
adc
xor
int3
cmpsl
in
dec
mov
sbb
mov
push
in
push
push
pop
xchg
mov
push
addl
test
and
hlt
add
sbb
sub
notb
loopne
clc
test
or
scas
ret
sbb
jne
inc
out
jecxz
sub
lods
ljmp
inc
mov
and
mov
ds
out
sahf
lret
into
mov
icebp
aad
inc
sbb
xor
filds
sub
mov
jecxz
mov
popa
jno
mov
iret
pop
loope
jmp
sbb
mov
mov
fiaddl
lcall
mov
dec
mov
loopne
dec
mov
loope
cmp
inc
mov
xchg
push
mov
push
mov
push
xor
movsb
push
imul
arpl
mov
push
pop
jecxz
leave
insl
test
fdivl
pop
sbb
adc
fstl
in
cli
fs
lods
icebp
int
and
lahf
popf
loope
mov
out
fistps
mov
xlat
add
mov
xchg
cwtl
lock
xchg
inc
ljmp
outsb
push
lock
je
jle
sub
scas
aad
dec
jnp
dec
jns
add
out
stc
pusha
rol
dec
dec
sbb
scas
movl
pop
pop
popa
lcall
jmp
sub
xchg
fwait
not
inc
pushf
imul
ljmp
test
sub
in
stos
adc
icebp
in
xlat
sub
rcrl
push
pop
jnp
add
int
xchg
jge
test
sbb
fdivl
and
ljmp
mov
push
cli
jno
test
sti
cmc
repz
ret
rcrb
inc
jp
outsl
dec
dec
add
add
mov
bound
push
sub
mov
cltd
jns
clc
xor
cmp
ret
xchg
imul
pushf
fsubl
mov
inc
shr
mov
out
push
std
mov
xor
jmp
outsb
mov
add
inc
dec
mov
and
roll
xor
gs
test
jl
fcompl
push
pop
or
outsb
pop
xor
rorb
push
add
cmp
and
imul
xchg
jb
fsub
das
push
push
pop
loope
push
mov
jno
and
sub
or
pop
es
sbb
dec
in
jns
fmuls
sbb
or
bound
or
int
pop
or
bound
push
add
clc
test
inc
jge
arpl
in
xlat
dec
jnp
push
or
inc
push
cli
xor
std
cmpsb
in
subl
jae
mov
lods
cmp
push
in
out
inc
outsb
mov
dec
aam
mov
xor
mov
lcall
xchg
or
ds
enter
ret
outsl
aas
mov
sbbb
cli
clc
inc
daa
sub
mov
cmp
repnz
std
sub
and
daa
jb
mov
xlat
gs
es
lret
or
cwtl
sub
mov
dec
xchg
rclb
xor
mov
push
inc
mov
mov
call
jecxz
test
loopne
mov
dec
mov
pop
xor
adc
adc
scas
imul
cmp
in
ret
mov
into
shll
mov
mov
out
shrb
add
xchg
fs
shrl
shll
jbe
lcall
and
sub
insb
int
cmpsb
lock
push
push
push
push
or
push
loope
cltd
sbbl
lods
jbe
cli
lods
add
mov
jp
xor
add
xor
push
sbb
dec
mov
and
faddl
out
mov
cltd
popf
mov
popa
cmp
push
loopne
mov
xchg
insb
push
popa
mov
in
lea
lods
jbe
push
in
fcmovbe
cwtl
mov
leave
imul
lock
jnp
stos
add
mov
lea
pop
mov
rorb
push
add
cmp
cmpsl
cmp
lahf
xchg
daa
lods
jecxz
test
out
lock
mov
call
lods
xor
cmpl
xchg
in
inc
repnz
popf
fsts
aas
sarl
ja
fdivp
push
xchg
daa
orl
lods
push
mov
xchg
and
aad
mov
sbb
and
lcall
fsubs
mov
pop
sub
frstor
cltd
in
call
js
push
popa
jge
ret
adc
add
mov
mov
mov
jmp
jl
test
arpl
mov
stc
adc
or
das
notl
jge
loope
out
ljmp
cvttps2pi
fisubrs
mov
insl
and
dec
mov
adc
pop
adc
adc
push
pop
jl
or
xchg
xchg
cli
call
fsubl
cltd
mov
icebp
fistpll
inc
jl
dec
aaa
inc
adc
or
dec
es
mov
in
adc
cmp
push
adc
xchg
or
pop
daa
cmc
addl
stos
mov
rcl
pushf
aad
aad
in
daa
adc
adc
push
enter
scas
sub
mov
mov
pop
aaa
sbb
push
enter
sub
mov
fldenv
ljmp
mov
xor
les
push
enter
fldenv
int
out
dec
subb
lods
flds
mov
sbb
aas
pop
das
sbb
decb
pop
std
lds
mov
lods
jbe
add
pop
movsl
lods
into
movsl
mov
pop
shll
cmpxchg8b
test
addb
cmpsb
xor
repnz
or
aas
cmp
cmp
bswap
jmp
mov
out
es
cmp
xor
jnp
add
sub
add
test
movsb
or
cmp
stos
jl
mov
or
dec
push
imul
clc
xlat
xor
dec
and
jp
fidivl
pop
sub
cmp
add
mov
cmpsl
dec
ret
pushf
mov
std
decl
jmp
leave
fimull
pop
nop
out
fstl
pop
dec
clc
sub
and
hlt
mov
rcll
mov
iret
dec
pop
std
js
jmp
adc
mov
push
jno
push
movsl
gs
cmp
and
xchg
xchg
mov
shll
cmpsl
vcmpngepd
test
push
mov
ret
adc
out
adc
cmp
mov
sub
push
inc
inc
call
pop
add
add
jl
dec
and
lcall
mov
aaa
sbb
mov
ror
cmpsb
mov
xchg
pop
in
lock
cmp
imul
xor
ficoml
fwait
lods
push
std
pop
sti
sub
faddl
test
xchg
in
incb
push
add
dec
inc
repz
divb
xchg
hlt
roll
arpl
push
sbb
push
pop
fs
jmp
push
imul
sbbl
movsl
mov
push
rorb
xor
mov
jnp
sub
mov
inc
push
dec
rcl
dec
xchg
push
pop
sub
and
movnti
repz
in
mov
cltd
xlat
jae
shl
jbe
lods
jns
sbb
mov
popa
adc
test
aaa
mov
shl
or
mov
mov
mov
and
fildl
jns
rolb
sub
inc
in
push
je
out
add
push
jns
aas
ja
pop
notl
mov
jo
mov
jbe
outsb
ficomps
out
inc
sub
mov
orl
test
mov
adcb
leave
sub
ljmp
mov
sub
cmc
and
mov
and
cli
ljmp
out
stos
or
add
push
sbb
and
or
mov
pusha
jae
out
pop
mov
or
sbb
mov
dec
sub
shl
dec
scas
pop
pop
sahf
pop
stc
adc
out
imul
push
xchg
push
jo
sbb
jg
outsl
cmpsl
cli
sub
push
movsl
aas
cmpb
mov
addl
pop
mov
ret
mov
in
mov
jmp
mov
test
xor
adc
mov
jbe
imul
or
mov
in
xchg
mov
dec
in
inc
stos
lods
addr16
fs
ss
xor
mov
pop
in
or
dec
push
cwtl
sbb
popaw
imul
jmp
ljmp
and
sbb
sub
fiadds
mov
inc
ret
sub
dec
and
popa
xchg
sub
mov
shl
pop
inc
incl
inc
sti
or
sti
jg
fdivrp
dec
add
fimuls
sbb
push
rclb
pop
das
loope
mov
inc
jbe
mov
mov
and
xlat
ljmp
imulb
stc
and
sub
insb
push
mov
dec
in
jno
mov
lock
hlt
pop
ret
pop
outsl
icebp
test
sbb
es
inc
sbb
cld
subl
lret
xchg
test
leave
push
jmp
xchg
ja
inc
dec
inc
inc
out
lcall
ret
daa
call
pop
scas
fisttps
jno
and
jge
or
xchg
mov
dec
xor
xor
std
popa
mov
or
xor
ja
mov
cmp
mov
mov
aad
jne
aas
jne
jp
cli
daa
in
mov
dec
push
xchg
jns
jae
sbb
inc
xchg
lcall
stc
dec
sub
and
std
push
mov
popf
cmp
in
sub
push
call
pop
cmp
lock
fidivrl
jg
xchg
sbb
loop
int
imul
aaa
cld
hlt
fnstcw
and
mov
lds
cld
in
sub
pop
ficoml
jp
lock
repnz
nop
ficomps
mov
inc
cmpsb
shrl
test
mov
dec
aas
mov
sarl
adc
mov
mov
jge
adc
jmp
stc
lds
leave
sti
mov
inc
or
inc
imul
jns
pop
sub
fnstcw
push
iret
imul
cmp
mov
lods
lea
xchg
loopne
and
lea
out
sub
pushf
lods
add
call
test
mov
addr16
bound
pop
mov
orl
adc
loopne
hlt
lret
lcall
insl
imul
mov
push
xor
pushf
neg
mov
mov
xchg
jecxz
adc
scas
jle
add
mov
mov
inc
leave
xchg
cmp
mov
out
pop
mov
lcall
lcall
imul
in
inc
ss
sbb
into
popf
std
das
jmp
dec
and
add
pushf
xchg
push
arpl
add
test
adc
adc
cmc
xor
mov
loop
jne
mov
xlat
jnp
dec
adc
outsl
xchg
mov
ds
mov
xchg
dec
movsb
mov
mov
pop
test
lret
xchg
icebp
aas
mov
pop
sub
scas
jne
jl
xchg
nop
imul
and
ret
movsl
or
gs
sbb
scas
ss
sbb
jecxz
dec
cmp
jo
sbb
or
push
andl
ret
xchg
divb
gs
xchg
testb
sub
mov
ss
and
mov
lcall
or
mov
cli
mov
clc
and
xor
inc
dec
xor
inc
cmp
xchg
mov
dec
fnstsw
bound
cmp
push
popa
push
ja
push
cmp
pop
mov
jg
mov
cmp
cli
jmp
popa
add
mov
mov
dec
and
movsb
add
fmuls
pop
inc
jmp
xchg
aam
call
cwtl
lret
add
imulb
adc
or
inc
call
xchg
jne
lret
pop
pop
pop
and
mov
sarb
fstl
ja
push
sub
jle
repnz
push
test
push
stos
mov
push
rcrb
dec
push
xlat
ficomps
adc
int3
in
jp
or
ret
jl
add
or
inc
je
inc
and
xchg
cmpsb
div
addr16
mov
jno
jne
mov
and
movsl
scas
std
adc
out
stos
push
popl
pop
push
mov
add
jp
lds
enter
and
mov
pusha
int
sti
jo
jno
jne
add
jecxz
mov
notb
mull
std
or
push
out
mov
jne
stc
fcoml
es
sarl
pusha
pop
ret
jmp
jnp
out
push
or
stos
lcall
pop
lcall
pop
push
leave
jp
cmp
cmp
lods
pusha
xchg
mov
dec
test
adc
popf
xor
jg
cmpsl
and
pushf
push
mov
rcll
push
cmp
xchg
sub
inc
push
fisttps
test
int
jae
sub
jle
adc
xlat
stc
mov
leave
adc
loopne
lods
xor
jle
icebp
aas
xchg
std
xchg
ret
test
dec
inc
push
jg
or
notb
mov
mov
cli
stc
idivb
mov
mov
movsl
mov
add
movsl
and
fistpl
add
stos
rolb
leave
jae
jecxz
mov
and
je
sbb
push
movsl
dec
mov
push
enter
pop
jle
imull
fildll
inc
out
pop
dec
pop
jmp
jb
xor
je
pusha
mov
out
xchg
clc
xchg
dec
ds
test
mov
pop
dec
int3
lret
sbb
mov
mov
mov
addr16
mov
mov
enter
faddp
stos
mov
enter
adc
fs
jae
dec
cli
dec
mov
daa
fmuls
fnsave
lahf
popa
int
push
cmpsb
lret
insb
jp
mov
inc
sub
push
push
push
jge
stos
dec
std
add
mov
sbb
mov
or
mov
pusha
mov
sbb
fs
push
adc
xchg
mov
ss
outsb
sbb
aaa
clc
sbb
aas
ret
adc
fldenv
push
xor
nop
add
xor
aam
xor
sbb
cmpsb
mov
addr16
xlat
scas
add
push
dec
stos
mov
jae
cli
adc
or
dec
leave
mov
mov
or
sbb
cmp
cwtl
in
jne
mov
mov
cs
sub
push
call
insb
enter
push
and
jae
stos
jb
shll
cmp
push
imul
negb
pusha
das
aad
inc
add
fs
loop
mov
movsl
mov
mov
imul
push
push
jne
sbb
std
out
insl
shrl
jb
pusha
mov
adc
pop
aad
pop
icebp
ss
inc
inc
sti
mov
aam
push
sub
cmc
negb
inc
mov
jg
mov
enter
in
aas
mov
jno
ss
ficoms
nop
sub
nop
mov
addr16
push
push
push
jo
and
nop
add
fdivr
into
rcrl
or
lods
pop
adc
stc
mov
fldl
jne
xchg
adc
pusha
xor
rorb
fidivrs
xchg
mov
or
mov
fdivrl
and
addr16
arpl
test
xor
mov
call
loop
pushf
add
push
cld
sbb
cmp
mov
xchg
jl
call
pop
or
fsubl
sbb
inc
mov
adc
aad
adc
dec
push
outsb
inc
cmp
stc
cli
sbbb
insb
movsb
add
jae
pop
cmp
stos
xor
nop
adc
or
mov
test
mov
mov
or
push
in
mov
jl
inc
out
sbb
clc
mov
test
ljmp
sbb
in
dec
xor
and
ror
mov
sbb
addl
pushf
mov
dec
mov
fnsave
addb
pop
add
nop
or
fwait
jge
insl
into
ss
dec
ret
pop
cmp
rorb
jl
adc
mov
in
xchg
lods
dec
dec
es
mov
shll
lds
aaa
mov
je
aaa
sub
rcr
mov
int
or
cmpb
lods
iret
xchg
xorl
or
pop
outsl
outsl
in
xchg
int
je
jg
mov
das
flds
ret
insb
and
out
add
fneni(8087
xchg
jb
mov
cmc
push
outsb
ret
mov
jne
lds
mov
sbb
push
repnz
jl
into
repnz
dec
pop
sub
outsl
scas
lahf
dec
out
arpl
xchg
shrb
cmp
xor
lahf
sbb
xor
idivl
imul
and
push
aad
xchg
cwtl
xchg
lahf
popf
jle
push
scas
jnp
xchg
shl
test
adc
or
mov
dec
icebp
and
imul
icebp
movsb
xchg
cwtl
out
lcall
cld
push
icebp
mov
cld
push
adc
inc
dec
xchg
fwait
gs
into
cmpsl
mov
jmp
psrlw
rolb
jns
mov
mov
sbb
inc
mov
rcr
pop
into
enter
xchg
adc
in
fmull
mov
divb
in
and
daa
int
mov
push
lea
negb
ds
out
mov
pop
fimull
adc
loopne
lods
sub
js
bound
xchg
sbb
inc
adc
pop
push
iret
and
mov
int3
pop
push
adc
out
fstl
mov
and
adc
xchg
out
jmp
imul
addr16
pop
inc
jb
sbb
jb
scas
mov
and
push
jo
dec
out
incb
dec
mov
scas
sbb
movsb
mov
mov
push
lea
inc
test
icebp
sub
shr
mov
and
xor
push
out
mov
negb
lret
cltd
repz
add
push
pop
dec
adc
stos
xchg
jbe
cli
scas
jmp
movsb
inc
push
sub
sbb
mov
notl
ret
mov
clc
jge
and
dec
cwtl
movsl
mov
je
cmp
and
pop
pop
call
push
mov
cmp
mov
lock
fincstp
mov
stc
dec
loop
xchg
jnp
jne
andb
adc
pop
jae
inc
or
and
mov
mov
xor
stc
int
ficoml
mov
std
lods
jmp
inc
dec
xor
mov
pop
adc
xchg
rcrb
dec
arpl
add
xchg
test
add
hlt
std
mov
dec
lcall
add
outsl
xor
iret
sub
push
and
test
fstl
int
push
push
mov
loope
pop
je
mov
adc
int
xchg
mov
js
push
inc
cmpsb
dec
sub
fbld
push
mov
outsb
cmc
add
fisttps
notb
dec
and
add
xchg
mov
popa
xchg
adcb
fistps
divb
mov
fcomp
or
ret
adc
jl
repz
in
inc
pop
xchg
inc
adc
iret
inc
adcb
xchg
outsl
leave
mov
lock
and
loopne
jl,pn
and
xor
mov
nop
addr16
aad
repz
pop
sub
popa
movsb
je
test
push
inc
jmp
sbb
stos
pop
bound
cmp
mov
xchg
push
sbb
into
dec
ljmp
mov
xor
sbb
nop
push
imul
add
imul
test
mov
ja
rorb
jae
jle
pusha
shrb
or
pop
push
lods
stc
mov
and
dec
outsl
mov
hlt
cmc
les
mov
push
iret
xor
fwait
and
out
mov
jbe
mov
ret
xchg
cltd
mov
mov
stc
mov
xchg
mov
dec
out
out
push
imul
xchg
shl
xor
mov
dec
ficoml
cli
int
loop
scas
xchg
inc
loopne
jle
shrb
and
lret
pop
mov
xor
in
xor
dec
push
int3
stc
inc
pop
jp
xchg
stc
jnp
lds
cmp
push
push
aad
mov
mov
pushf
call
mov
jnp
add
push
enter
xlat
jmp
xchg
dec
xchg
pop
cltd
pop
xchg
pop
fwait
lock
loop
mov
clc
int
movsb
add
jbe
jl
rcrl
and
aam
xchg
xchg
pop
imul
sbb
push
mov
adc
mov
and
cmpsl
lds
jmp
stos
fildll
dec
out
push
outsb
addb
dec
mov
mov
inc
mov
mov
push
push
insl
loope
data16
call
lock
push
andb
lahf
sub
mov
hlt
sbb
in
adc
add
mov
scas
repnz
or
ss
nop
xchg
cmp
call
pop
cmp
shrb
daa
jae
imul
pop
leave
daa
test
mov
ljmp
adc
add
xlat
gs
push
xchg
or
or
in
push
icebp
pop
aas
push
inc
pop
add
pop
sbb
decb
or
pop
imul
je
in
and
pop
jle
rorl
out
data16
add
sub
inc
mov
subl
aas
aas
adc
xlat
adc
js
add
cmp
lods
lea
cmpsl
adc
and
insl
gs
cmp
in
imul
test
testb
xchg
push
iret
test
adc
fldl
and
imul
pop
jns
test
sub
mov
inc
push
mov
jae
ret
cli
or
iret
roll
add
loop
mov
pop
leave
cltd
loope
inc
or
lcall
cmp
add
push
rolb
push
into
or
sbbl
or
leave
push
sub
out
pop
insb
stc
add
cmp
out
out
jge
hlt
xor
popl
sbb
leave
fildl
insb
mov
sub
jo
sbb
mov
dec
xchg
xchg
jnp
jmp
pop
test
xchg
lds
mov
and
hlt
popa
sbbb
mov
in
cs
dec
add
testb
scas
loope
dec
cwtl
xchg
xor
lahf
sub
mov
adc
ja
pop
add
fs
sahf
test
in
dec
xchg
push
mov
sahf
fcmovbe
pop
out
dec
inc
std
jp
dec
jp
and
fdivrl
or
or
andb
lods
loopne
xor
sub
cli
fdivs
jl
scas
xchg
xchg
add
pop
lret
test
inc
mov
xchg
push
pop
cltd
std
and
inc
cmc
pop
movsb
test
das
outsl
out
xchg
scas
in
enter
adc
repnz
mov
outsl
lret
popa
mov
pop
dec
xchg
xor
or
or
movsl
popa
jmp
orb
fcompl
test
nop
mov
push
lret
vpmulhw
addr16
andl
xchg
mov
push
pop
lea
pushf
leave
or
adc
adc
adc
pop
and
in
rcr
testl
sbb
pop
daa
call
leave
push
cmp
cmp
pop
mov
mov
lahf
mov
push
fildl
out
inc
sub
push
sbb
popf
dec
mov
es
mov
js
sub
test
pusha
pop
jle
push
in
mov
xorl
js
xchg
and
mov
pop
or
aad
cmp
lret
test
pusha
js
inc
bswap
lret
adc
jp
lods
aam
adc
mov
dec
jo
dec
out
xlat
repz
loop
out
push
inc
insb
pop
jmp
shlb
push
and
mov
dec
xchg
rcll
adc
mov
pop
xor
into
dec
sub
fsubr
inc
cmp
in
fidivs
mov
xchg
jmp
fwait
ljmp
rcl
mov
jp
and
push
xor
mov
or
rcl
insb
inc
jl
ljmp
mov
xchg
cmp
cmp
fidivl
repnz
jns
jmp
dec
jle
sbb
cmpsb
adcl
mov
lret
cs
mov
call
inc
push
xor
xor
pinsrw
pusha
mov
pop
cmpsb
and
lock
filds
je
nop
dec
sub
push
jo
or
lock
or
inc
sub
out
fs
pop
mov
shlb
adc
std
loop
fisubs
gs
daa
dec
loopne
std
addr16
pushl
icebp
mov
xchg
xor
bnd
inc
sub
mov
sbb
into
stos
cmc
stos
push
loop
lods
mov
mov
inc
daa
mov
push
aas
xchg
or
push
or
out
dec
arpl
mov
jne
push
cmpsl
jae
daa
leave
push
mov
push
das
jb
pop
jns
or
out
push
cs
xor
add
iret
inc
jnp
sbb
incb
outsl
dec
sbb
xchg
and
test
cmc
mov
jmp
call
aam
jg
enter
nop
mov
lret
lock
jecxz
sub
clc
lcall
inc
repnz
xchg
pop
inc
mov
jmp
imull
mov
lret
test
pop
xor
mul
inc
mov
lret
sbb
leave
cli
stos
fisttpll
insb
loop
xchg
push
xchg
or
inc
pop
cmp
cmp
or
subb
test
out
in
mov
das
in
mov
lods
aas
mov
pop
push
xchg
out
imul
jnp
sbb
pushl
pop
jns
enter
sub
js
pop
xchg
jmp
leave
nop
js
test
je
das
out
gs
xchg
dec
lods
pop
jle
mov
cmpsb
pcmpeqb
push
jp
imul
pop
in
stos
adc
sbbb
mov
mov
cmp
and
andb
daa
push
cld
adc
rclb
inc
rclb
lcall
out
jecxz
push
mov
lods
icebp
popa
inc
push
mov
inc
lcall
movsb
neg
dec
mov
add
loopne
jns
pusha
dec
test
fmull
aam
int
jb
sbb
add
movsb
add
fwait
cld
cmp
pop
cmpb
imul
sub
pop
inc
mov
in
in
mov
mov
lret
gs
fld
rclb
inc
push
mov
push
sub
in
dec
xchg
fcmove
repz
arpl
dec
mov
loop
mov
sub
inc
xchg
mov
fisttpll
and
out
int3
sbb
sti
nop
sub
movsb
rorl
lea
xchg
mov
add
or
jle
das
shll
pop
shl
bound
push
lahf
sub
mov
sub
pop
imul
xchg
and
sbb
cmp
cmp
std
outsl
addr16
xchg
cld
cli
lcall
xchg
inc
insb
cmpsl
jne
clc
es
out
pop
cli
sbb
cmp
pushl
ror
dec
stos
or
loope
rcr
mov
enter
test
shll
push
out
mov
push
cli
inc
je
add
popa
xor
pushf
insb
push
aas
adc
push
xor
mov
sbb
push
arpl
lods
arpl
std
or
test
sbb
aad
je
mov
cmp
test
xchg
mov
push
jp
push
mov
popa
data16
push
cmpsb
je
fdivr
bound
sbb
je
pop
mov
in
mov
inc
push
loope
push
push
and
sbb
mov
mov
sbbl
loopne
out
shrb
sahf
xor
add
addr16
and
outsl
xor
lods
call
mov
test
cmp
hlt
inc
and
pop
mov
dec
fsubs
xlat
mov
xor
cmpsl
add
jno
sbb
hlt
or
add
mov
xchg
lcall
adc
scas
cmp
leave
lahf
and
nop
rcll
int
repz
push
stos
into
test
fadds
ret
mov
incl
sub
pop
gs
jnp
in
jne
mov
lds
or
leave
jecxz
lds
mov
and
jmp
inc
in
lods
ja
in
push
mov
dec
jae
data16
dec
mov
leave
test
repz
jo
mov
in
jno
cmp
bound
out
popf
pop
imul
fistpl
sub
jo
push
call
andl
jg
sub
stos
pop
movsl
jb
mov
mov
test
out
bound
fcomip
dec
sbb
jl
xchg
sbb
js
pushl
add
cmp
inc
imul
mov
sub
push
cmp
test
popa
or
jge
hlt
jo
fcoms
loopne
lock
test
mov
adc
adc
adcb
mov
push
pop
std
xor
cvtpi2ps
mov
pop
ret
loope
ds
dec
and
cmp
fwait
cmpsl
cmp
sbb
in
aad
in
and
pop
jmp
test
je
das
sbb
test
pop
cmp
sbbl
imul
jb
inc
inc
mov
dec
xchg
jb
lds
dec
or
xlat
cmpsl
scas
out
mov
sub
lcall
mov
add
push
into
loop
out
sbb
addb
mov
iret
popl
arpl
rolb
arpl
xchg
int
je
dec
mov
inc
flds
jle
imul
jge
out
test
js
adc
jle
aas
pop
mov
sti
or
sbb
lret
and
dec
lods
lock
inc
rclb
imul
xor
pop
mov
faddl
pop
imul
stos
cld
adc
add
outsb
rcrb
or
cmp
inc
pop
mov
repnz
jle
arpl
add
sub
push
xchg
jae
mov
psubd
movsb
mov
xorl
fistps
cld
lret
out
out
cmp
fucomi
sbb
or
out
test
inc
push
xchg
mov
sahf
jl
mov
out
leave
cli
mov
sub
jo
push
adc
in
stc
test
push
imul
rcll
add
mov
push
pop
jge
loop
mov
cmpsb
fistpll
cmpsb
mov
mov
mov
cltd
xchg
sbb
aas
dec
dec
test
xchg
enter
add
push
sub
int3
outsb
mov
ss
and
cmc
movsl
enter
into
xchg
lods
push
popa
dec
push
push
xchg
add
fwait
jae
adc
arpl
mov
fwait
jge
sbb
sub
cmp
repz
rcrb
daa
xchg
sbb
test
dec
cmp
gs
inc
insl
lods
mov
jns
push
adcl
jmp
adc
stos
fwait
cwtl
jne
xor
jle
cmp
out
pop
dec
rol
pop
mov
mov
push
and
sub
sbb
sub
sub
mov
and
lcall
mov
fs
movsb
dec
push
mov
mov
jmp
or
xor
cwtl
sbb
stc
pop
mov
fadds
jmp
rorb
iret
addr16
sbb
rcll
xchg
in
xor
out
push
pop
in
pop
pop
pop
jbe
jg
rolb
or
mov
sbb
sahf
xchg
jmp
add
jne
add
test
add
leave
push
pop
sbb
fdivl
cmp
xor
imul
jae
lock
in
lods
je
sbb
dec
mov
xchg
negb
jbe
cmp
jg
add
movsl
insl
fildll
out
leave
push
xlat
inc
pop
xor
and
and
clc
and
pop
pop
dec
sbb
fisubl
movsb
orl
pushf
pop
enter
sub
mov
push
or
jle
dec
adc
ljmp
sbb
mov
stc
pop
xor
and
xor
subb
sbb
or
pop
vmulss
ret
pop
rorb
mov
sbb
jo
sar
jl
aad
jp
addb
ror
mov
outsb
sbb
xchg
xor
jb
lret
pop
mov
out
jp
insl
dec
ss
pop
inc
xchg
sub
mov
rorl
or
sub
daa
mov
ds
jge
add
push
and
push
rclb
ja
icebp
das
lock
lret
shr
in
jb
pushw
xchg
sub
aam
test
hlt
inc
push
enter
lds
scas
or
sub
xchg
xor
adc
lahf
insb
cld
mov
sbb
and
pop
sub
jge
sbb
jo
inc
cmp
lds
mov
clc
xchg
dec
shl
mov
xchg
mov
mov
lahf
lods
jmp
sub
in
outsb
push
fisubl
iret
mov
test
inc
int
loope
lods
push
pop
nop
pop
dec
xchg
jecxz
loop
dec
push
mov
adc
sbb
adc
mov
xor
mov
insb
cld
sbb
push
imul
xor
mov
pop
rorb
roll
lods
pop
dec
test
mov
mov
enter
mov
icebp
jo
inc
insl
push
inc
mov
not
or
or
xchg
sbb
rcr
insl
jns
sub
xchg
push
adc
in
push
mov
hlt
in
and
jns
add
cmp
mov
outsb
jne
pusha
insl
clc
jecxz
adcl
xor
imul
sbb
pop
and
stc
xor
ds
shll
loop
test
sub
mov
out
rorb
frstor
sub
mov
xchg
outsl
sub
sbb
scas
pop
xchg
stos
pushf
mov
jb
je
out
mov
int3
xchg
les
mov
jo
pop
jg
pop
xor
mov
cmp
xchg
mov
test
imul
call
dec
hlt
bound
jle
mov
and
fs
cld
sub
dec
sbbb
clc
rcrb
jecxz
ja
loope
int3
sti
ss
or
xlat
popf
lods
ret
mov
inc
mov
ret
jmp
cmpb
xchg
xchg
fsubl
xor
xor
insl
and
fcoml
sbb
xor
xchg
sub
mov
ja
fldl
lock
lret
sub
pop
jno
ja
hlt
pop
negb
mov
or
mov
pop
loope
sub
adc
or
mov
add
or
in
xchg
lea
adc
fiaddl
xchg
cmpsb
aam
mov
sub
aam
cltd
xchg
es
xlat
in
or
es
ss
fistps
xlat
fcomip
push
fiadds
inc
sbb
push
mov
push
imul
movntq
out
add
lahf
or
inc
js
scas
adc
cmp
push
inc
test
push
aam
adc
xchg
in
nop
test
sbb
mov
repz
mov
and
push
xchg
add
cmp
mov
cld
fstl
sbb
xchg
aaa
xchg
xor
mov
add
jo
push
clc
decb
lds
mov
and
int3
movsb
pop
xor
test
jno
loope
sbb
push
movsb
xor
cltd
push
insb
mov
lea
and
pop
mov
hlt
insl
inc
mov
stos
and
mov
pop
mov
cmpsb
add
mov
jae,pt
es
mov
sbb
adc
xor
scas
push
pop
and
xchg
xchg
pusha
jge
mov
jg
rorl
orb
xor
cs
into
pop
sub
arpl
movsb
lahf
sbb
mov
cs
adc
loope
xor
pushl
pop
insb
xorl
add
jns
jne
enter
mov
das
sbb
and
aad
cmp
outsl
sub
pop
jecxz
inc
jmp
stos
mov
adc
xbegin
xchg
lds
aam
and
es
push
fcompl
jecxz
andb
std
sub
ja
cmp
or
cmp
dec
mov
jns
adc
adc
sahf
pop
and
fisttpll
adc
lret
ret
mov
cltd
dec
popf
cmp
in
mov
call
sub
scas
pop
cli
adc
inc
lahf
and
ljmp
jg
adc
mov
hlt
or
pop
repz
cwtl
xchg
das
das
cmp
pop
jle
mov
out
pop
vcvtps2pd
add
dec
xor
inc
pop
out
mov
mov
inc
fstpt
lret
sbb
popa
fs
mov
sub
add
push
das
test
sbb
test
push
jbe
leave
pop
mov
outsb
mov
jmp
mov
xchg
mov
jle
dec
or
pop
cmp
int
sarl
test
sbb
int
adc
mov
pushf
cmp
or
inc
sub
outsb
aad
or
jg
pop
loop
pop
cpuid
scas
es
outsb
lret
mov
cmp
iret
bswap
pushf
xor
lcall
mov
icebp
frstor
push
ss
xchg
ret
mov
fnstsw
es
dec
mov
push
hlt
cmp
mov
inc
leave
mov
xor
add
stc
das
sub
mov
xor
push
js
leave
imul
dec
push
jg
test
xor
mov
movsl
into
sub
xchg
ss
add
mov
xor
push
sub
imulb
fisubl
aam
cmpsl
dec
scas
std
dec
jbe
push
ffreep
bound
mov
push
xchg
shll
enter
xchg
fdivp
xchg
das
push
aam
pop
pop
jae
into
and
xchg
leave
cmp
mov
mov
cld
mov
or
rolb
sub
pop
into
xor
addb
dec
mov
out
add
pop
dec
cmp
sbbb
push
inc
insl
and
fstpt
out
enter
sbb
imul
stc
jno
sub
lods
jl
dec
and
xor
push
xchg
cltd
into
push
hlt
int3
in
cltd
daa
xor
sbb
xchg
xor
ret
mov
and
adc
or
dec
sub
mov
xchg
jle
fwait
insb
jg
fdivrs
movb
loope
clc
inc
jne
push
insl
xlat
in
xrelease
cld
aas
scas
or
add
nop
cltd
decb
jo
stos
ljmp
xchg
mov
xlat
jl
mov
out
inc
mov
mov
inc
lea
cmp
xchg
inc
dec
add
sbb
cmp
aad
or
addb
dec
fldcw
scas
js
xchg
jo
stos
xor
insl
lea
cmp
pop
push
daa
test
pop
in
push
sub
push
mov
cmc
sarb
les
dec
xor
lea
leave
dec
clc
js
iret
out
pop
cltd
add
call
cmp
ds
sbb
mov
pushf
js
add
adc
inc
xorl
sub
inc
daa
dec
add
sub
and
mov
jbe
cltd
mov
xor
mov
mov
and
mov
cmp
and
and
or
addr16
add
mov
or
adc
add
sub
jbe
dec
xchg
inc
sub
sbbb
mov
sub
or
mov
lret
xlat
inc
mov
clc
jne
xchg
cmc
cmp
push
lret
inc
nop
data16
sbb
sbb
cmp
mov
movsl
xor
insl
js
lds
imul
test
inc
cltd
das
data16
and
jp
add
imul
and
xor
outsb
mov
in
stc
neg
imul
mov
cld
daa
mov
movsb
mov
daa
and
xlat
insl
dec
jno
push
cwtl
icebp
andl
push
mov
insb
dec
rorb
inc
xor
popf
xchg
shll
dec
ret
adc
testl
push
lret
push
bound
fimuls
aam
rcl
cmpsl
popa
repnz
push
pop
out
fisubs
frstor
aas
cwtl
mov
pop
dec
and
in
enter
jge
dec
sahf
sbb
xor
jge
jbe
imul
sbb
and
bound
pop
inc
sbb
into
sub
inc
xor
cmp
and
cs
mov
jecxz
or
add
out
out
add
sub
sahf
xchg
rcrl
mov
aam
pop
and
daa
jmp
and
fcoml
add
cli
aad
sbb
ja
popf
jb
pusha
jl
inc
and
adc
fwait
xchg
mov
jl
arpl
mov
adc
cmp
loopne
movsl
pop
addl
jbe
imul
mov
cmc
jle
dec
pop
lcall
cmp
dec
jbe
icebp
sbb
xchg
sbb
push
mov
dec
pop
sbb
outsb
sub
jbe
sahf
and
or
fwait
mov
or
lret
or
repnz
clc
lret
aas
sub
call
clc
jnp
outsl
jb
rolb
loopne
popa
sub
jecxz
jne
clc
ja
pop
add
shr
shll
dec
loopne
test
sti
adcl
dec
or
lcall
and
pop
fadds
popf
mov
sarl
fists
fsubp
inc
jl
jnp
in
mov
jbe
test
jmp
mov
scas
adc
push
sub
test
jmp
dec
lret
clc
cmc
cmp
sbb
fcoml
add
lcall
rcl
inc
int3
inc
js
pushf
push
mov
into
cmp
xor
cmp
es
lods
les
cmpsl
pop
call
xor
cli
push
aaa
jge
sti
push
movsb
stos
sbb
cmp
jnp
mov
insl
push
fbstp
jecxz
fstpl
xor
clc
mov
xor
adc
sub
dec
std
xchg
mov
movsl
inc
mov
mov
dec
xor
push
and
scas
jnp
mov
cmp
cld
mov
adc
xchg
xchg
ret
push
ja
out
loope
orl
mov
aaa
cmp
or
loopne
xchg
jg
stc
aad
push
aad
sub
sahf
jle
in
or
mov
in
push
adc
mov
mov
pop
jecxz
dec
sub
lea
fisttpll
xor
pop
jnp
mov
test
or
xchg
and
inc
mov
fwait
xor
ljmp
inc
xchg
lcall
je
enter
jp
aad
mov
mov
insb
pop
daa
inc
je
mov
add
jne
push
dec
sbb
cmp
add
inc
add
arpl
lds
insb
lret
movsb
leave
cmp
fnop
jge
mov
push
arpl
xchg
mov
frstor
cli
or
and
loopne
arpl
arpl
shll
jge
or
xchg
sti
mov
dec
mov
lahf
xchg
jl
lods
pusha
cmpl
loop
loop
cmp
and
lahf
xchg
lret
ja
xor
lahf
jecxz
push
call
fadds
fists
out
ljmp
orl
mov
xchg
std
ret
cltd
or
dec
lods
test
loop,pn
xor
lret
lret
dec
insl
cmp
adc
push
stos
cs
loop
js
jne
jnp
inc
loop
adc
les
fisubl
lahf
mov
and
loop
bswap
shll
arpl
cmp
sahf
mov
fcoml
and
fcmovnb
enter
push
sub
mov
lds
fcompl
cmp
jnp
in
push
mov
test
pop
nop
insb
ds
xchg
or
movsb
icebp
push
sti
jo
push
jmp
frstor
add
or
aad
hlt
lret
ja
inc
loope
pushf
bound
mov
loop
out
xchg
or
dec
out
dec
push
les
sti
ds
push
aam
inc
int3
and
orb
xchg
out
jb
je
leave
push
call
addr16
addr16
nop
movsb
fcoms
fisubrl
leave
ljmp
std
leave
pop
scas
out
test
xchg
mov
popf
mov
andb
je
in
dec
and
xor
add
mov
out
lea
or
out
pop
leave
mov
ja
clc
or
leave
or
cmpsl
and
adc
stos
push
dec
cmp
adc
sub
push
notb
jle
sbb
mov
dec
jg
test
mov
mov
push
ror
call
jmp
iret
mov
je
out
push
inc
jne
aam
aam
push
mov
scas
les
les
imul
inc
adc
es
pop
lret
and
stos
xchg
cli
loopne
scas
mov
mov
in
pop
movsb
mov
jo
jg
stos
pop
shll
sub
insl
xchg
xchg
ja
out
jmp
sbb
sub
cmpsb
add
jge
add
jbe
mov
lock
mov
lret
inc
out
pop
pushf
pop
inc
adc
mov
mov
mov
sbb
add
inc
popa
push
ret
pop
mov
push
movsl
andb
cmp
jb
pause
stc
loop
loope
push
pop
cmpsb
xchg
inc
sub
mov
lahf
out
mov
or
repz
jae
scas
add
cmp
adc
cwtl
dec
dec
stc
dec
leave
addl
dec
xchg
cmp
add
push
mov
dec
mov
pop
shl
loope
sub
push
cmp
out
insl
or
mov
and
cmp
shlb
js
inc
mov
data16
rorb
andl
shll
inc
mov
addr16
leave
fdivs
jns
xchg
sbb
add
mov
cmp
fadds
cmovp
inc
out
setl
sti
xchg
das
adc
and
popa
scas
push
repz
mov
cmp
std
xor
xor
mov
cmp
jns
cs
js
jns
popf
mov
cmpsl
inc
push
sub
hlt
adc
dec
std
ljmp
push
fstpt
xchg
cli
xchg
push
rcl
pop
jns
adc
push
jne
jnp
out
test
or
mov
icebp
lcall
nop
jne
inc
adc
mov
mov
imul
rcl
imul
xchg
gs
mov
in
mov
push
push
add
push
push
cmp
pop
arpl
add
adc
jmp
pop
cmp
scas
stos
inc
dec
aas
aas
fstps
imull
xor
sub
adc
nop
xlat
dec
stc
insl
das
and
movsl
cmpsb
cmpsl
and
sub
popa
add
inc
adc
mov
mov
into
sbb
push
jbe
jge
mov
fwait
leave
out
mov
scas
sub
fidivrl
out
xchg
cmp
push
popa
cmpsb
jle
mov
adc
repnz
aad
inc
mov
inc
mov
sub
addr16
lea
test
sub
test
out
leave
xor
cmp
outsb
js
mov
popa
lods
cmc
add
inc
testl
xor
jmp
popf
es
cwtl
repnz
mov
iret
mov
lods
sub
sbb
xchg
loope
rolb
test
or
and
jb
stc
mov
jmp
push
or
jb
push
daa
sbb
inc
imul
cmpsl
dec
and
lret
negl
das
sti
jo
push
mov
ljmp
test
mov
test
mov
nop
xor
jns
mov
jle
loop
mov
sti
fistl
xchg
out
inc
int3
popf
mov
loopne
mov
je
popa
das
adc
loopne
cld
hlt
mov
or
inc
jne
adc
ss
xor
and
dec
cmp
ret
sub
xchg
imul
jne
xchg
xchg
icebp
pop
mov
ret
sbb
aas
sub
mov
xlat
jl
pop
jno
mov
pop
xor
aas
lods
mov
cmp
addr16
bound
outsb
fldcw
movsl
dec
or
sbb
mov
xor
test
jge
lods
pmullw
adc
or
inc
movsl
pop
mov
mov
pop
sub
xchg
jnp
dec
pop
add
push
aas
push
sbb
mov
pop
xlat
add
jg
inc
lods
xor
out
jmp
xchg
mov
add
jmp
xchg
shlb
lcall
jle
loop
push
popf
dec
mov
xor
aaa
in
push
or
and
jae
lcall
loopne
shl
test
mov
push
lcall
jl
ret
scas
mov
add
xor
xchg
fidivl
or
jnp
fwait
mov
cmp
movsb
push
stos
dec
mov
iret
js
xor
std
push
sub
das
or
sbb
insl
xchg
ror
mov
out
adc
mov
or
fstl
and
in
add
mov
and
and
lds
orb
test
loopne
aad
shl
and
in
pop
pop
cmp
sub
mov
push
or
sub
push
icebp
push
cmpsb
adc
loop
lret
daa
mov
cmp
cld
or
sub
xor
in
add
xchg
movsb
in
sub
and
sbb
iret
popf
jg
pop
scas
cmp
out
repnz
add
daa
and
aad
jmp
adc
stos
test
ret
ja
in
lret
mov
dec
fcomp
jbe
lcall
inc
pop
ljmp
xor
mov
pop
sbb
dec
jno
pusha
popf
pusha
push
aad
cwtl
leave
xchg
mov
pop
xchg
es
dec
or
push
pop
sub
in
rclb
jbe
gs
jp
jmp
push
cwtl
mov
cmc
and
filds
mov
call
adc
cmp
sbb
mov
loopne
mov
scas
sbb
mov
mov
addr16
out
push
push
mov
sti
and
xchg
loope
aad
leave
testl
fwait
jo
or
sahf
out
pop
mov
mov
mov
cmp
mov
cltd
pop
sub
fcmovnu
iret
jo
jae
or
xchg
jbe
shll
xchg
sub
cwtl
mov
addr16
inc
ud0
sbb
or
fwait
pop
cmp
pop
dec
sub
fst
jno
and
mov
mov
add
xchg
in
xchg
sbb
inc
jecxz
lods
and
shl
shl
dec
icebp
in
sub
xor
mov
dec
pop
aas
loopne
movsl
out
and
aaa
out
sub
rol
jae
repnz
pop
idivb
and
call
cltd
add
adc
add
dec
es
mov
pop
and
das
popf
icebp
rclb
mov
adc
insb
mov
xor
in
adc
mov
adc
ror
aam
loopne
call
arpl
xchg
jecxz
fmul
jge
shr
fwait
cmp
sub
dec
shrl
in
lods
mov
xor
xchg
rcr
dec
movsl
push
jb
bound
test
clc
mov
sar
mov
fisubrl
xor
pop
hlt
lret
shrb
adc
mov
mov
push
lock
xor
pop
cwtl
out
fsubrl
leave
fs
lahf
and
mov
icebp
movsl
aad
xor
faddl
mov
je
out
arpl
pop
mov
xor
in
in
ss
cmp
push
lcall
pusha
xchg
xor
fwait
mov
das
addr16
inc
inc
pop
xcrypt-ofb
cmpsl
in
sahf
inc
sbb
ljmp
js
xchg
gs
mov
mov
sub
outsl
stos
mov
hlt
ss
mov
adc
sub
leave
jl
mov
sbb
mov
fldcw
cmpsb
rcr
je
fnstenv
loopne
arpl
mov
daa
lcall
mov
mov
jp
jmp
cmpsl
dec
outsb
mov
out
mov
mov
sbb
cld
dec
insb
fsubrs
jl
outsl
dec
pop
lods
cmp
inc
ss
mov
sbb
movsl
mov
lock
fstp
add
int3
out
xchg
enter
outsl
xlat
lcall
hlt
or
orb
xchg
mov
push
xor
fistl
or
fbld
add
push
fistps
sub
in
stc
cmp
lahf
push
js
rolb
dec
jb
lcall
lahf
add
cli
enter
adc
stos
mov
lret
sub
popa
rol
jle
dec
test
int3
xor
movsb
gs
out
mov
lods
push
xor
pop
inc
cmp
mov
pop
push
out
pop
pop
xor
cmp
outsl
js
jnp
cmc
or
ret
icebp
scas
test
sbb
and
stc
mov
in
jo
mov
mov
xor
push
dec
push
scas
mov
fldl
mov
outsl
inc
jns
jmp
jb
add
fiadds
push
cmp
jmp
xchg
cmpsl
xor
loop
xor
loop
inc
mov
cmp
add
mov
dec
gs
dec
shrl
sbb
mov
sahf
or
lcall
data16
jno
cltd
out
sbb
sbb
and
rol
and
stos
das
dec
mov
mov
loop
jecxz
xchg
aas
mov
insb
hlt
jg
shlb
or
mov
xchg
mov
movsb
ljmp
push
stos
gs
cmp
inc
mov
jno
sbb
mov
out
pop
mov
cmp
sub
mov
pop
daa
mov
inc
movsb
xchg
jg
and
jo
mov
and
adc
out
mov
jae
sub
mov
inc
shr
adc
adc
sbb
add
sbb
sbb
mov
mov
mov
xchg
jnp
or
out
ss
repz
jo
pop
pop
mov
add
adc
mov
fwait
or
cmpsb
lods
sarl
mov
pop
jecxz
nop
in
jecxz
adc
jae
out
int3
in
rcrb
cmp
mov
iret
fisubrs
dec
sub
xor
pop
clc
call
in
ljmp
sub
test
add
out
aam
dec
pusha
ljmp
lods
stc
mov
rorb
or
jno
mov
data16
add
mov
adc
outsb
loope
push
push
in
or
cmp
jp
fcomp
cmp
mov
nop
hlt
xlat
inc
sub
fwait
inc
repz
lea
test
test
cmpsl
dec
shl
ds
inc
jne
xor
inc
arpl
clc
sub
daa
ss
fdivs
sub
mov
test
call
sbb
jp
insb
aad
pop
imul
call
pop
ja
ja
or
movsb
cld
repz
fsubl
sbb
sub
pop
push
sti
sub
mov
data16
adc
add
add
inc
es
push
and
xor
or
adc
iret
in
fisttps
dec
imul
xlat
mov
inc
fwait
cli
aaa
dec
jl
test
loop
push
push
test
mov
sarb
das
mov
stc
repnz
mov
fcomps
int
cmc
sub
cs
mov
jmp
insb
imul
lret
xor
pop
loope
mov
jge
jno
xchg
xchg
push
les
bound
out
repnz
and
cwtl
fwait
pop
movsb
add
arpl
imul
icebp
ret
and
int3
push
mov
and
jecxz
or
or
scas
divb
cwtl
cld
jmp
sub
pop
add
inc
xor
fldl
shl
mov
mov
inc
into
jle
sarl
les
cmc
sti
mov
sub
cmp
insb
les
xchg
mov
clc
inc
cmp
add
pushf
sbb
pusha
rcrb
sti
fdivs
or
sbb
or
or
push
dec
aas
lods
bound
fildl
jno
mov
jae
sbb
mov
test
xchg
jg
lods
imul
das
loop
xor
xor
nop
dec
cld
jle
fcomp
mov
jmp
mov
rorb
fs
lret
adc
push
adc
fcmovb
jmp
fnsave
sub
or
dec
ja
outsl
popf
rclb
cli
jecxz
int
xor
test
mov
inc
push
mov
stos
out
out
je
add
and
call
test
lock
rcl
inc
jnp
out
inc
xor
int
and
cmp
sub
push
and
jg
ret
fcoms
lock
scas
sub
and
xchg
in
mov
mov
pop
lock
add
orb
sub
pop
es
dec
shlb
xlat
push
lods
shrb
sbb
jb
test
pop
mov
jle
mov
mulb
and
test
and
cmp
push
cwtl
pop
orb
sbb
ljmp
mov
cmpsb
shll
mov
mov
sub
daa
sub
adc
push
fdivs
cmp
mov
xlat
cmpsb
pop
les
or
sub
fwait
push
test
push
es
pop
lods
mov
scas
jle
loopne
or
fbld
mov
push
push
add
call
cmp
sahf
fldt
pop
inc
mov
stos
icebp
lds
test
ljmp
and
out
adc
ss
jb
adc
mov
jo
cmp
sbb
mov
push
aam
stc
lds
inc
aam
and
mov
mov
jp
lods
jne
roll
and
je
cli
push
inc
idivl
cmp
cmpsb
cmp
mov
fsts
lea
xlat
adc
shr
iret
mov
imull
movsl
insl
pop
push
pop
sarb
xchg
repnz
sub
jbe
je
mov
aad
sub
cltd
mov
aaa
jb
jbe
arpl
mov
cmpsl
stc
es
mov
cmp
lock
jbe
negl
and
mov
sub
and
jne
dec
ret
sbbl
mov
pop
push
jg
mov
jmp
xchg
sub
fs
mull
cwtl
arpl
jle
daa
jl
sub
jne
mov
mov
ret
dec
lea
aaa
adc
dec
lds
out
dec
lret
es
lcall
in
fisubl
mov
or
pop
test
push
cmp
ret
vandpd
jp
andb
cli
inc
enter
decb
iret
add
jno
insl
pop
repz
loop
xchg
mov
insb
push
adc
mov
inc
test
sbb
cmp
movsb
push
add
and
rclb
cmpsl
push
fistl
sahf
stos
pop
in
dec
adc
js
stos
xchg
xchg
imul
push
jno
adc
test
dec
std
in
inc
jmp
cmc
js
and
andl
repz
aaa
xchg
sbb
mov
gs
sarl
cmp
pop
je
rcrb
push
fldt
adc
dec
push
mov
push
stos
aam
or
pushf
pop
in
mov
enter
sub
sbb
sti
sbb
lods
push
sub
and
push
movsb
pop
fyl2xp1
cmpsb
inc
shrb
jecxz
xchg
xchg
push
add
inc
jle
dec
and
mov
mov
out
mov
mov
dec
test
mov
xor
sub
mov
dec
std
pushf
pop
mov
scas
inc
addr16
add
dec
inc
loop
or
add
sub
inc
in
xchg
mov
fsubr
aam
out
sbb
add
xchg
cs
test
daa
mov
sub
cmp
jbe
add
fcmovnb
jmp
add
sub
bound
xchg
imul
xchg
lcall
fwait
aad
icebp
or
pop
loop
pop
dec
add
dec
cmp
cwtl
mov
cltd
sub
int3
lret
loopne
adc
dec
addr16
mov
pusha
inc
addr16
cwtl
clc
jne
mov
les
pop
and
imul
sbb
xor
add
inc
popa
adc
mov
mov
push
pop
xorb
inc
mov
movsl
mov
pop
out
enter
out
popf
mov
fucom
jmp
divb
add
outsl
aaa
mov
jae
sub
xchg
imul
std
add
mov
push
lret
cmp
in
data16
add
pop
jo
or
xlat
mov
sbb
xor
xor
adc
fbld
adc
aad
jno
test
add
xchg
push
enter
push
cli
in
ret
fiadds
and
sub
xchg
in
ret
cmpsl
mov
aaa
xchg
push
pop
pop
inc
lods
aaa
popf
aaa
xchg
cwtl
xor
scas
mov
mov
inc
loopne
sbb
fwait
xor
jg
jmp
xchg
insl
mov
pop
leave
ret
pushf
in
jle
sbb
in
xor
mov
aas
pushf
imul
fstpl
jecxz
loope
add
not
ror
push
pop
insl
or
lds
sahf
or
adc
scas
lods
inc
cmp
dec
pop
sarl
in
mov
jmp
loop
lret
aam
push
jmp
inc
mov
cmpsl
jecxz
jle
cli
repz
sbb
jb
cmp
xchg
popf
fists
dec
out
jnp
mov
sti
push
mov
jns
or
das
sarb
jo
imul
frstor
jmp
mov
jne
dec
or
out
repnz
mov
loopne
sbb
mov
ljmp
inc
ret
mov
daa
pop
inc
jmp
pop
jae
ja
insl
call
cmp
sbb
out
dec
mov
and
xchg
push
stos
rorl
mov
push
dec
adc
stos
xor
dec
cmp
les
ret
push
adc
cwtl
pop
pusha
inc
sbb
add
mov
pop
xor
cmp
lret
in
int
xchg
jle
pop
js
mov
lcall
subl
mov
xor
jne
add
pop
icebp
ljmp
mov
fisubrl
cltd
out
xor
clc
sti
orb
pusha
inc
lahf
dec
sub
mov
push
mov
inc
add
cmp
lock
lret
inc
leave
mov
imul
sub
xchg
repz
add
jo
xchg
mov
cmpsl
xchg
cmp
dec
sbb
inc
pop
jl
fists
sbb
mov
sbb
in
adc
test
or
loopne
mov
cld
mov
cli
sbb
dec
and
adc
shll
xor
fndisi(8087
rolb
sti
mov
or
ljmp
sbb
clc
pop
push
test
jmp
ds
mov
jp
daa
pop
ret
pop
mov
mov
xor
test
mov
lcall
addr16
mov
fistpl
adc
adcb
xor
int
jne
jo
aas
std
scas
dec
mov
loope
iret
loopne
mov
insb
leave
mov
jno
sub
adc
inc
push
lods
lea
rol
mov
inc
mov
and
jnp
mov
lahf
add
sarb
mov
sbb
fists
dec
mov
faddl
insl
mov
xchg
mov
xchg
cmp
insb
jb
lods
jmp
sub
pushf
andl
inc
pop
jmp
inc
sub
gs
sbb
aad
das
or
cmc
xchg
outsl
sbb
inc
test
lcall
dec
or
inc
test
cltd
les
mull
out
cli
cmp
ret
cmp
jg
jl
clc
push
push
imul
aad
sub
mov
sahf
out
xlat
lea
mov
je
mov
cmpsb
sti
and
mov
push
out
jl
jmp
pop
pop
xchg
jo
mov
cs
dec
adc
shll
stc
xor
sbb
jecxz
jns
bound
mov
rolb
cltd
in
imul
adc
push
scas
leave
pushf
push
dec
fcoms
jle
cld
cmp
addb
and
stc
insl
sbb
out
js
mov
inc
lds
cmp
lahf
inc
dec
and
aad
dec
ja
ss
icebp
sub
sub
shll
fisttpl
sbb
cmc
hlt
in
xchg
std
jae
push
dec
adc
fdivrp
scas
mov
mov
pop
sahf
push
clc
popa
add
scas
mov
prefetch
or
inc
loop
movsl
bound
dec
jno
xor
sti
pusha
mov
bts
jo
fs
ljmp
gs
push
mov
adc
dec
push
mov
adc
add
mov
and
add
dec
dec
jecxz
jns
ret
fmulp
div
nop
mov
testl
clc
inc
dec
xchg
aas
xorl
movsb
push
or
fucomi
orl
pop
xchg
pop
mov
mov
sub
in
dec
and
and
dec
jmp
cli
mov
push
xlat
inc
jge
imulb
inc
pop
inc
jne
xchg
jmp
mov
mov
xchg
jae
push
rorb
adc
dec
mov
enter
hlt
push
es
xorb
pop
mov
xchg
mov
jmp
in
fdivrs
loopne
out
addr16
movsl
pop
mov
divb
fistpl
jnp
xchg
icebp
dec
insl
mov
push
stc
or
push
fnstsw
add
dec
enter
mov
hlt
imul
sub
stc
rcrb
lcall
add
enter
mov
inc
mov
shlb
adc
xchg
sub
sbb
xchg
add
jl
lret
scas
shlb
cld
inc
jo
leave
dec
pop
pop
dec
inc
add
xchg
scas
dec
adc
addl
mov
fadds
mov
mov
jle
stc
lods
dec
ret
xchg
push
cmp
sahf
mov
lahf
xchg
mov
mov
loope
es
aam
shl
sub
popa
in
adcb
lret
jecxz
xchg
les
xchg
xchg
cmp
jp
jg
adc
adc
cmpsl
popf
test
out
xchg
std
jle
mov
add
es
fwait
movsl
imul
inc
fcoml
and
push
xchg
ret
insb
cs
bound
aaa
mov
gs
xchg
mov
xchg
andl
add
pop
iret
and
xchg
ficomps
adc
out
inc
call
hlt
dec
rolb
mov
mov
and
int3
dec
lds
arpl
mov
mov
adc
xchg
shl
jmp
js
push
rclb
push
adc
pop
adcl
and
addr16
inc
jge
je
pop
popa
pop
add
adc
mov
fcomps
push
mov
or
in
pop
pop
jle
movsb
push
or
les
mov
btrl
out
lea
xchg
pop
push
mov
negl
lea
aaa
sub
cmp
pop
mov
sub
loopne
movl
push
clc
adc
imul
adc
push
xor
mov
ja
fdivl
aam
mov
insl
ljmp
std
or
enter
mov
mov
in
mov
insb
fcoml
inc
pop
lahf
in
pop
in
xor
in
out
and
lds
add
mov
pop
or
mov
mov
adc
add
gs
imul
pop
xchg
jbe
rcrl
aas
cmp
pop
cmp
sbb
cld
lcall
jge
push
jno
add
pushf
mov
js
add
lcall
aaa
jnp
inc
jae
adc
adc
stc
pop
mov
aas
jbe
ds
call
push
fsubs
fprem
xchg
out
mov
and
mov
adc
pop
repz
lea
adc
mov
mov
fcmovnb
sahf
mov
jne
sbb
cmp
dec
mov
sbb
adcl
push
hlt
movsb
sub
scas
sbb
jb
sub
mov
inc
stos
dec
jno
daa
imul
es
loop
notl
jl
lret
outsl
cwtl
mov
fistps
pop
xor
cmp
into
popfw
gs
jge
ja
and
and
push
imul
dec
lret
pop
add
push
add
insl
out
lret
lahf
or
push
add
mov
pop
push
push
push
inc
ljmp
out
daa
cs
stos
rol
jns
and
cmp
cmp
push
stos
dec
lods
mov
jne
repz
out
and
mov
ret
sbb
cmc
shrl
iret
je
lahf
inc
ret
pusha
push
inc
adc
push
je
mov
test
pop
ja
or
add
mov
out
sti
hlt
imul
or
pop
dec
not
lret
outsb
ret
adc
cmc
repnz
mov
adcl
cltd
and
or
push
scas
in
stos
jg
sub
dec
int3
mov
pop
and
lods
popf
adc
xor
mov
out
inc
sub
jno
xchg
cmp
data16
imul
iret
ja
and
test
pop
cmp
lea
push
loop
xor
adc
dec
jle
pop
adc
test
mov
mov
shlb
out
sahf
and
and
incb
sub
hlt
xlat
xchg
dec
lods
mov
aam
imul
cmp
cmp
mov
mov
lods
shll
notl
dec
popa
push
jne
push
dec
and
imul
repz
add
unpckhps
sbb
dec
aam
mov
jae
lea
xor
or
in
dec
addl
add
push
je
xor
and
add
sub
push
dec
insl
pop
out
mov
in
sub
add
lock
out
push
jl
push
push
mov
lods
sub
pop
or
ljmp
data16
stos
insl
outsl
cltd
or
aad
in
xchg
ja
fstl
mov
cmp
ljmp
xor
cmp
lock
push
xchg
fdivs
jmp
shlb
lods
sbb
push
dec
leave
in
cmp
subb
dec
mov
in
add
adc
scas
push
nop
outsl
mov
mulb
xor
lods
xchg
clc
jge
pop
movb
inc
pop
mov
jmp
or
xor
lahf
cld
xor
data16
cs
cmp
mov
fcomps
inc
sub
loop
inc
ficoms
pop
or
push
aad
dec
sbb
inc
movsb
orl
mov
adc
cmp
je
xor
aad
xchg
jmp
cmpsb
and
xchg
pop
gs
sub
jecxz
pop
xor
cs
mov
mov
pop
jle
xor
cmpsl
mov
jo
mov
xchg
loop
dec
divl
cwtl
sti
inc
jecxz
mov
in
jge
lock
insl
mov
dec
mov
or
dec
dec
jae
inc
sbb
jne
shl
add
mov
movl
faddp
aas
mov
add
out
pop
paddusw
cmp
push
test
mov
jne
mov
dec
orb
jp
mov
les
jmp
jbe
adc
lret
jo
push
das
test
jno
or
out
in
aaa
sbb
mov
pop
aaa
jp
xor
xor
iret
xor
out
mov
mov
daa
stos
mov
xchg
clc
inc
mov
js
cmp
adc
sarl
out
jge
cmp
jnp
leave
pop
addb
cs
and
push
pop
aam
out
mov
mov
enter
das
xchg
xor
fnclex
mov
xchg
xchg
popa
cmp
add
or
xchg
stc
xchg
in
jl
adc
and
or
cltd
xor
inc
popf
sbb
sbb
gs
sbb
lret
mov
ret
shll
fcmovu
dec
das
cs
dec
dec
cmp
outsl
mov
clc
mov
sub
or
cmp
mov
xor
and
call
iret
repnz
pop
enter
sbb
loope
pop
shll
xchg
movsb
js
dec
lret
jb
xchg
mov
mov
sbbb
mov
mov
mov
movsb
pop
sbb
test
cs
xor
pop
jmp
int
stc
mov
add
out
mov
into
enter
pop
inc
loope
jo
movsl
and
jl
loop
and
fsubrs
xchg
jbe
sbb
scas
stc
loop
jo
xor
addr16
xchg
lahf
xchg
cmpsl
into
test
testl
cltd
adc
jb
xor
push
lcall
or
inc
pop
rcrb
mov
xchg
dec
test
shl
dec
pushf
or
xor
xchg
pop
sbb
inc
add
int3
pop
or
adc
and
inc
xchg
je
mov
inc
mov
into
andl
enter
sti
inc
gs
cmp
inc
lahf
push
dec
sbb
aam
pop
fwait
sub
loopne
push
adc
dec
jb
pop
add
sbb
cld
test
dec
lret
push
fistpl
sub
xor
bound
test
mov
jb
pop
hlt
lcall
movsl
xchg
push
push
xchg
jl
je
mov
clc
or
aad
xrelease
inc
cli
cmp
or
aaa
mov
fmul
testl
mov
mov
enter
mov
je
xchg
lret
add
in
mov
push
scas
inc
xor
mov
enter
fsubrs
pop
ss
scas
cs
test
xchg
enter
clc
mov
lds
testb
push
ret
mov
xchg
call
cmpsl
xchg
cmpb
imul
xchg
mov
shld
ja
mov
sbb
jg
aas
loope
das
add
adcl
nop
call
pop
aam
fs
jp
ss
push
adc
stc
call
or
in
sub
bound
push
imul
sar
adc
jo
ss
add
pop
push
jnp
jbe
dec
ret
notb
cmp
cli
fs
fcom
into
xchg
push
aas
iret
aam
sbb
jne
dec
sbb
hlt
mov
test
dec
mov
lcall
mov
or
or
add
xchg
jne
inc
push
jle
inc
pusha
sbb
pop
pop
push
sbb
jle
cltd
sub
imul
cmp
aam
adc
out
mov
adc
les
cli
je
cmpb
sub
rcrl
push
mov
ficoml
aaa
repnz
mov
lret
outsb
mov
shll
std
ds
add
pop
fistps
push
mov
add
dec
cmpsl
mov
adc
andl
int
push
inc
icebp
jb
push
lret
push
enter
inc
repnz
push
and
push
call
fcmovu
cwtl
test
sbb
dec
push
sbb
movsb
push
in
das
sbb
scas
aaa
sub
test
mov
rorl
out
and
pusha
fcomps
mov
push
int3
jae
sti
dec
push
lret
punpcklbw
jnp
adc
or
cmp
test
leave
add
lret
hlt
mov
jb
xor
das
out
or
push
out
inc
jne
push
pusha
inc
add
sub
sti
mov
test
hlt
cmpb
pop
sbb
iret
sbb
add
xor
jno
pop
out
sbb
mov
jns
test
rcrl
push
in
pop
clc
jno
pop
mov
insb
outsl
fisttps
add
push
cmp
inc
arpl
jnp
pop
outsl
outsb
scas
pushf
mov
xor
jmp
fwait
cs
pop
sbb
repz
pop
pusha
rorb
or
add
sbb
je
dec
cmp
arpl
scas
test
movsl
pop
push
and
xchg
jle
icebp
fwait
pop
jo
xchg
out
mov
subl
lods
cmp
xor
mov
dec
ret
repnz
adcb
dec
sub
mov
adc
sti
cs
outsb
in
push
test
scas
leave
fiadds
adc
inc
pop
adcb
add
mov
pop
cmp
fldl
mov
testl
iret
mov
jne
jae
jg
popf
adc
jp
ret
dec
int
inc
xor
mov
adc
lods
pminub
pop
in
bound
mov
mov
push
mov
push
insb
stc
hlt
test
mov
jne
insb
dec
or
push
std
dec
jmp
cwtl
and
notb
sub
fmul
dec
xor
xor
add
mov
or
jg
sbb
ret
mov
insl
sbb
mov
cwtl
inc
lret
mov
cmp
xor
xor
push
cmp
xor
push
leave
cmp
fwait
cld
push
ret
jmp
and
repnz
je
addr16
setne
xor
ret
lea
sub
sub
lods
lea
inc
push
dec
xchg
push
xorl
push
or
push
xchg
adc
ds
ds
ror
cmpsl
cmpsl
push
lahf
setae
repz
dec
push
out
out
jmp
andb
les
out
dec
aas
clc
repz
mov
push
xor
jns
cli
ds
js
stos
push
sub
stos
xlat
outsb
push
add
dec
add
and
mov
pop
inc
jno
jbe
push
daa
jbe
adc
ljmp
cmpl
outsl
mov
lds
adc
sysenter
into
sbb
mov
cmp
dec
stc
inc
les
pop
stos
push
jg
cmpsb
xlat
xchg
add
sub
outsl
inc
sbb
cmp
in
out
add
sub
mov
mov
xlat
pop
scas
hlt
dec
fs
out
stc
lea
std
inc
fdiv
jno
repnz
sarl
jecxz
in
mov
and
lcall
fdiv
and
sbb
add
bound
flds
push
push
enter
or
and
xlat
sub
pop
mov
fwait
jmp
pop
xor
mov
mov
movsb
mov
sbb
data16
popf
pop
push
adc
in
in
aas
jo
sub
rcll
cmp
cmp
or
int
adc
xchg
sbb
inc
push
sub
ja
dec
stos
adcl
sub
jmp
pop
and
jg
imul
lods
mov
gs
ljmp
add
and
jecxz
fdivrl
sahf
shll
pop
stos
pusha
aaa
sbb
adc
mov
or
ja
fdivl
dec
xchg
add
sbb
xor
cmp
lret
bound
lahf
xchg
inc
pop
cmp
or
mov
scas
adc
dec
cmpsb
ljmp
aas
jp
std
stos
pop
or
cmpsb
mov
or
cli
and
call
cwtl
push
push
add
jge
cmp
push
rcrb
cmp
jmp
add
xchg
and
nop
sbb
adc
adc
cli
fnsave
or
shrl
cmp
pusha
cld
mov
mov
xor
fisubs
cltd
mov
dec
cmp
cs
out
push
fstpl
or
insl
and
sbb
iret
in
or
jle
xor
es
add
lock
outsl
ds
mov
pop
mov
arpl
clc
mov
out
sbb
aam
push
negb
mov
pop
decb
mov
pop
pushf
arpl
sarb
rcrb
sbb
data16
icebp
sbb
ficompl
jmp
arpl
leave
xor
dec
in
jns
daa
pop
xor
add
mov
xor
das
pop
imul
ds
adcb
xchg
mov
dec
mov
nop
stos
iret
and
mov
fdivrl
dec
adc
adc
decb
xor
pop
bound
jne
mov
fcomip
repz
sahf
loope
enter
dec
add
testb
out
outsl
pop
mov
sub
pop
sbb
push
jbe
jge
jmp
insl
std
enter
or
sbb
mov
jle
les
imul
xchg
outsl
fwait
inc
inc
out
stos
inc
cmp
fnstenv
xchg
jle
jmp
adc
fsts
add
jo
and
pop
mov
mov
gs
pop
out
stc
add
lds
xor
enter
mov
push
pop
xor
mov
adc
or
push
popa
jge
add
jle
dec
mov
mov
mov
nop
mov
movsb
sub
jnp
ret
loopne
loop
lea
and
cwtl
call
imul
xor
ja
inc
xor
pop
jno
outsb
jmp
jmp
cs
jmp
pop
cmp
mov
sbb
xlat
int
popl
stos
insb
jmp
xor
iret
popa
imul
pop
sahf
jns
sti
in
data16
ljmp
ja
adc
mov
adc
ljmp
mov
and
push
fiadds
mov
add
fistpll
xchg
ds
in
xchg
pushl
xchg
inc
mov
or
fimull
and
pop
sub
fadd
insl
mov
adc
cli
movsb
xchg
imul
pop
je
into
push
cltd
inc
call
push
jl
pop
hlt
sbb
and
sbb
sbb
mov
stos
inc
call
leave
movsl
fs
dec
in
push
sbb
inc
xchg
jno
add
pop
sub
loop
adc
gs
dec
pop
mov
shrl
fnstenv
xorb
jo
nop
pop
pushf
mov
xor
inc
sub
or
jge
mov
push
fdivl
push
and
pop
push
call
and
adc
dec
xorb
push
popf
cmpsl
aad
push
shl
cmp
mov
repz
divb
adc
push
cmp
mov
mov
daa
or
movsl
xchg
orb
mov
out
mov
mov
or
iret
and
push
cmp
adcl
pop
push
fs
enter
or
stc
xchg
push
scas
comiss
xchg
scas
add
std
addb
pop
or
xchg
push
popf
loope
ret
push
call
popa
push
aas
sub
push
loopne
adc
push
pop
cmc
ljmp
jmp
xor
pop
add
mov
push
call
mov
dec
fs
stc
cmp
push
clc
and
cmpsb
fidivl
test
scas
or
fidivrs
xchg
fcmovb
out
mov
jo
push
pop
and
push
int3
jecxz
cmc
in
push
pop
sbb
mov
and
mov
fwait
out
xchg
mov
sbb
jl
jno
lods
stos
push
inc
push
sysret
sbb
aaa
push
jge
pop
or
dec
mov
dec
nop
push
sub
int3
lahf
sub
rcl
pop
mov
rorb
andl
and
mov
jmp
repnz
shll
pop
mov
fidivl
pop
leave
mov
sbb
xor
stc
jp
dec
jbe
adc
mov
ror
mov
inc
pop
or
mov
push
xchg
test
and
int3
lret
pop
cmpsb
sbb
fisttpll
mov
mov
pop
dec
stos
xor
sbb
imul
scas
cmp
jecxz
insl
inc
push
idiv
gs
mov
daa
cli
imul
push
loop
inc
stc
jae
jne
out
sub
or
xlat
repz
jne
aaa
lret
xchg
rolb
jmp
inc
and
dec
push
adc
aam
in
xor
push
xchg
adc
arpl
xor
popf
cmp
and
lahf
cmp
sbb
jge
adc
imul
aam
add
rorb
cmpb
loopne
xchg
movsb
enter
ss
mov
adc
cvtpi2ps
pop
ret
fs
sbb
out
cmp
enter
mov
inc
shlb
and
cmp
mov
xchg
inc
jecxz
mov
das
inc
repnz
cmp
jnp
inc
int3
test
lock
cs
aad
pop
popa
subl
xchg
and
sbb
adc
add
adc
js
inc
push
adc
inc
data16
insl
lock
icebp
cmc
lcall
int
jecxz
sbb
add
stos
int3
idivl
cwtl
add
arpl
adc
in
fs
xchg
or
in
add
imul
sarl
mov
mov
push
call
in
ret
lcall
sub
pop
sbb
adc
jns
cld
cwtl
mov
test
cwtl
loope
mov
inc
aad
test
push
cmp
mov
popa
sub
jo
xchg
imul
mov
pop
or
dec
xchg
stos
jecxz
push
lret
push
mov
or
cmp
mov
int
pusha
sahf
push
pop
fwait
sbb
inc
mov
aas
or
mov
jmp
inc
leave
jns
mov
inc
sub
push
add
sti
jne
mov
push
xchg
popa
loopne
xchg
inc
xchg
idivl
repnz
shlb
mov
fcmove
jns
rcl
inc
orl
cmpsb
dec
ss
loope
or
insl
pop
lahf
ret
inc
shlb
sub
test
cmpsl
hlt
jmp
xchg
dec
mov
push
xor
lea
cmp
xlat
mov
xchg
pop
jb
js
scas
rcl
mov
int
inc
out
push
sbb
sbb
movsb
add
shrb
mov
mov
aas
push
inc
mov
divb
mov
dec
inc
mov
xchg
cmp
jge
mov
inc
mov
and
das
cli
inc
fsubrs
xchg
clc
xchg
adc
mov
mov
fxch
arpl
jge
adc
push
jns
lock
jp
je
pop
scas
pop
stc
add
movsl
fidivl
cmpl
xchg
jecxz
and
push
scas
pop
push
loop
and
out
push
adc
mov
pop
pop
and
mov
mov
fdivs
cltd
xor
repz
es
aam
jle
cltd
jno
fisubrs
xor
insl
insb
push
xor
push
inc
cmp
push
sub
jne
in
adc
nop
cmpb
push
sbb
cld
lahf
je
sbbl
dec
mov
sub
mov
insb
jbe
adc
cmp
dec
je
cltd
fs
and
dec
cmp
call
sbb
iret
adc
mov
lea
sti
push
stos
adc
daa
stos
mov
sarl
or
pop
or
sbb
negb
cli
xchg
movsl
xchg
dec
outsl
mov
inc
cltd
inc
aas
mov
xor
daa
das
cmp
sub
dec
stc
hlt
cmpsb
pop
inc
clc
or
aad
xor
test
pop
nop
sub
test
cmp
decb
jno
and
push
xchg
cmp
testl
mov
imul
in
leave
xchg
or
sbb
xchg
dec
xchg
add
inc
insb
vmovapd
pop
or
mov
and
add
or
loopne
pop
xorw
push
mov
jbe
add
imul
xor
push
mov
pushl
insb
dec
jp
lods
mov
inc
outsb
dec
mov
imul
stos
dec
dec
or
out
out
jno
jecxz
pop
sbb
data16
inc
fnstsw
adc
dec
cmpsl
shll
jmp
out
stos
sbb
jo
loope
js
std
adc
test
retw
js
inc
nop
bound
sub
incl
les
pop
sbb
adc
lds
xor
xor
pop
sar
rcr
mov
mov
mov
sbb
jg
mov
icebp
dec
insl
cmovs
hlt
xor
mov
jl
pop
jb
popf
and
jmp
gs
pop
xchg
aad
adc
stos
push
dec
sahf
ret
pop
sub
sub
cli
dec
fld
popf
or
xchg
adc
daa
push
movsl
push
aam
push
pop
mov
xorl
shl
icebp
les
adc
dec
lret
push
stc
lret
push
scas
mov
leave
cmp
lahf
lcall
loopne
shl
out
out
and
dec
push
ret
push
push
push
xchg
test
stos
scas
pushf
sub
jl
adc
ficompl
fisubrl
sub
pop
dec
mov
mov
cmp
mov
out
jg
icebp
es
or
xchg
inc
arpl
mov
xchg
scas
jmp
mov
dec
les
sbb
and
inc
push
pop
pop
mov
ljmp
pop
sub
out
inc
bound
inc
jnp
mov
int
xor
push
dec
xor
in
std
stc
push
jp
jge
stc
mov
jno
sbb
ss
xor
xor
jbe
in
stc
adc
lret
pop
dec
das
in
xor
cs
idivl
std
dec
add
shl
push
mov
aam
cmp
push
add
push
pop
fiadds
sub
shlb
sti
and
mov
xchg
int3
rcrl
mov
addr16
shlb
sbb
and
orb
fwait
or
xor
and
mov
popf
imul
clc
sub
pop
aam
cs
adc
out
sub
inc
mov
lret
loope
sub
mov
sub
push
dec
jae
scas
out
in
inc
popf
cmp
xor
sub
sahf
inc
imul
mov
mov
push
push
ds
or
pop
mov
int3
lahf
mov
mov
jecxz
inc
add
daa
sbb
icebp
dec
push
cmpsb
out
push
daa
adc
fwait
std
xchg
jmp
out
in
test
xor
push
mov
mov
pop
sbb
into
dec
xchg
in
sahf
iret
pop
and
mov
jbe
out
popa
gs
and
add
mov
xchg
mov
scas
dec
mov
mov
loopne
stc
mov
sahf
cmp
xor
je
and
arpl
fdivrl
aam
xchg
mov
xchg
and
jb
pop
xor
and
sub
out
aam
mov
xor
add
scas
or
push
inc
repz
mov
fwait
cmp
pop
lock
divl
cmp
je
xchg
push
pop
out
jb
gs
mov
inc
fstpt
push
lret
inc
xor
fiaddl
call
adc
ja
and
js
mov
sbb
cli
fsubrl
in
jl
xchg
pushf
sbb
cmp
mov
sti
jmp
lcall
shll
mov
rcrl
ds
mov
and
mov
cmp
jg
popa
jne
pop
pop
fistpl
xor
pop
mov
adc
repnz
aam
pop
adc
jg
push
push
dec
pop
or
sbb
pmullw
inc
cli
or
dec
xchg
and
jmp
aaa
nop
sub
orl
or
enter
scas
jl
in
fwait
aaa
mov
mov
cld
push
pushf
xchg
mov
or
cmpsl
xlat
outsb
push
mov
loope
and
andl
sbb
jo
mov
js
es
push
pop
clc
or
cmc
shlb
in
cmp
sbb
jge
js
or
je
dec
out
jns
mov
in
mov
aas
or
sbb
fwait
stc
sub
stc
cli
mov
sti
test
negl
les
ja
mov
test
movl
loopne
cmpsb
lods
insl
movsb
jmp
push
outsl
insl
lahf
daa
adc
xchg
mov
loope
pushf
inc
xchg
popa
adc
in
js
cli
das
mov
push
or
push
andl
push
inc
out
fisttpl
xchg
fmul
sbb
xchg
clc
enter
mov
imul
and
leave
and
fisttpl
sbb
popf
sbb
xchg
mov
outsb
ficompl
aaa
hlt
in
into
inc
jg
mov
cltd
je
test
adc
sbb
mov
push
add
xlat
or
rcrl
sub
lds
add
pop
lea
add
dec
sub
aad
dec
sub
das
aaa
push
push
add
cmp
testb
adcb
dec
pop
mov
and
lret
adc
lods
jno
inc
add
insl
dec
sti
sub
push
stc
pop
fnsave
fcmovu
push
mov
jle
xor
je
mov
test
push
mov
mov
sub
loopne
and
add
aaa
and
cwtl
jg
xchg
icebp
push
lret
mov
fs
jecxz
or
push
call
adc
sub
or
and
mov
lcall
jo
jae
ljmp
ret
imul
add
pop
aas
mov
cwtl
jo
icebp
push
mov
daa
aam
lret
popf
daa
mov
pop
ja
movsl
pop
cwtl
dec
dec
rorb
outsl
push
popa
jl
aas
xor
push
fiaddl
inc
sbb
clc
icebp
mov
push
cltd
mov
mov
jns
das
mov
es
push
lock
popa
or
cmp
xchg
stc
int3
jle
pop
jle
push
cmp
cmp
pushf
pop
imul
loopne
fiadds
lods
stos
and
fisubrl
sub
adcb
jmp
inc
lock
aam
enter
cli
addl
fcmovnu
decb
or
push
mov
inc
cmp
sbb
or
xchg
add
add
add
aam
js
mov
rolb
mov
dec
enter
outsl
mov
or
mov
insl
rcrl
pop
iret
stos
retw
inc
adcl
or
mov
icebp
mov
xchg
out
sti
or
aaa
imul
icebp
xchg
ljmp
push
nop
in
arpl
lods
or
mov
mov
xchg
xor
xor
lock
xor
repz
fdivr
test
adc
mov
pop
xchg
pusha
lock
pop
dec
sahf
jnp
jmp
int3
fsubrl
push
xor
insb
lock
iret
cld
cli
jnp
pop
pop
xchg
test
xchg
inc
sub
dec
xor
jl
not
or
outsb
int
bound
cmpsb
leave
imul
gs
push
and
int
movsl
test
jmp
fbld
je
pop
lods
cmp
popa
mov
mov
lea
xor
xor
aam
movsl
arpl
push
sahf
fs
call
int3
cmp
insl
popf
pop
pushf
dec
mov
data16
xchg
lea
xor
addl
pop
icebp
push
dec
mov
leave
inc
lahf
sub
outsl
outsl
xor
pop
push
sti
pop
aad
es
arpl
mov
movsl
or
and
xor
jp
test
pop
call
adc
sub
mov
adc
xchg
jns
fwait
sub
ret
jmp
xchg
inc
mov
cmp
push
clc
pop
or
js
nop
push
mov
cmpsb
lret
stos
push
mov
cltd
pop
inc
fcoml
push
es
or
les
mov
jnp
mov
xchg
out
das
testl
in
xchg
pop
mov
lods
sub
insb
mov
lods
cmp
sub
adc
inc
imul
sub
xchg
rcrl
mov
rcll
sub
fldcw
dec
dec
sub
inc
ret
jmp
lret
mov
lods
lds
or
and
lahf
fld
sub
push
pop
fistpll
cmp
aas
mov
mov
jp
adc
push
inc
or
sub
push
pop
push
shl
in
in
xchg
or
pop
in
movsb
fwait
mov
in
push
mov
mov
add
into
inc
pop
and
or
jecxz
xor
or
frstor
sti
cmp
cmp
insl
pop
lret
shl
fiaddl
inc
dec
icebp
jns
dec
lret
dec
push
loop
aam
jne
jmp
xchg
lret
push
mov
sarl
int
pop
pop
add
mov
aam
xor
add
mov
pop
or
mov
xor
lret
sbb
add
mov
iret
jbe
xchg
nop
sub
dec
in
loope
scas
dec
aas
loope
pop
pop
repz
popa
lock
rorl
es
pop
mov
and
cmp
jmp
sub
imul
sbb
xchg
es
fld
mov
cmpsl
add
mov
add
xchg
ret
sahf
push
jp
fdivrl
gs
loop
idivl
and
mov
xor
ret
mov
sbb
xchg
addr16
xor
jo
mov
add
aas
xor
in
or
imul
nop
add
pushf
sahf
inc
ljmp
push
cli
fnstenv
jae
cmp
lret
outsb
mov
push
mov
pop
popa
push
sbb
out
fsubs
sbb
inc
push
nop
out
loope
add
bound
jae
adc
int
les
cmp
arpl
aas
mov
inc
xchg
sbb
fs
xchg
insl
dec
out
jb
jbe
mov
insl
insb
outsl
and
int
and
out
fimuls
je
and
lahf
xor
xchg
mov
addl
push
and
jg
sub
and
jmp
mov
push
jo
sbb
test
xchg
jb
ficoml
cmp
andb
mov
loop
sub
dec
or
int3
adc
fs
rcrl
test
xchg
imul
pop
push
outsb
loopne
enter
adc
xlat
or
push
add
gs
mov
jnp
inc
xor
cwtl
lods
adcb
sub
stos
lret
pop
cltd
adc
jecxz
push
xor
mov
mov
mov
addr16
lret
movl
or
enter
dec
fldenv
pop
sbb
std
sbb
mov
mov
insl
cli
xchg
mov
fimuls
dec
xor
cltd
mov
push
mov
lea
add
jnp
push
jmp
inc
cmp
add
pop
iret
add
imull
hlt
jmp
push
ret
push
out
pop
jmp
xchg
dec
mov
push
xchg
call
aaa
add
pop
movsb
xor
push
fistps
insb
jmp
or
cmp
movsl
mov
test
or
push
pop
pop
sbb
imul
and
cmpsb
insl
hlt
inc
mov
mov
sub
int3
pop
mov
jne
arpl
jmp
inc
and
xlat
or
out
scas
push
or
ret
push
mov
in
movsb
jno
mov
push
data16
out
fs
adc
mov
push
sahf
dec
dec
outsl
mov
xor
sbb
or
lret
xchg
xchg
pop
jl
out
loop
test
mov
mov
xchg
pushf
mov
nop
pop
and
cmc
clc
sahf
insb
cmpsb
jge
adc
movsl
pop
pop
jle
jns
push
fucomp
sbb
and
filds
movsb
repnz
int3
into
test
mov
outsl
add
or
ret
ds
inc
xor
sbb
fstpt
push
mov
insl
pusha
es
fstpt
outsl
add
cmp
sbb
fwait
mov
jo
mov
aam
sbb
mov
lret
and
scas
xchg
arpl
ficoms
mov
and
jae
je
pop
cwtl
bound
int
daa
cmp
fdiv
dec
mov
rorb
mov
cld
stos
mul
fbld
pop
jae
pop
lods
neg
dec
loop
pop
pop
daa
in
notl
das
xchg
cmp
fldenv
jns
clc
fnstcw
cli
jp
outsl
jl
fisubl
dec
aas
test
ss
mov
fnsave
or
popf
xchg
fnstcw
aad
out
out
int3
mov
mov
xchg
mov
jl
add
jg
lea
pop
idiv
ja
ret
jecxz
sub
jg
test
cmpsl
pop
nop
pop
pop
ds
mov
xchg
pop
jne
cli
and
cmp
push
int
pop
fwait
ljmp
mov
andb
mov
jne
iret
push
lcall
inc
push
int3
out
jg
push
adc
nop
ja
sub
or
xchg
mov
sbb
mov
arpl
arpl
das
push
mov
jnp
in
or
stos
mov
sbb
jmp
mov
or
xchg
xor
enter
push
cmp
jns
sbb
adc
push
mov
xchg
sbb
std
call
pop
bnd
dec
cmp
jns
jle
adc
or
iret
in
addb
imul
data16
sbb
popa
and
inc
test
out
or
rol
sbb
dec
inc
lods
repz
adc
push
inc
fnsave
testb
sarb
adc
mov
xor
mov
add
xchg
push
inc
sub
and
insb
loop
aam
cltd
sbb
pop
movsl
out
pop
and
mov
std
aam
fsubs
dec
call
or
dec
cli
lret
cli
leave
jns
outsl
cmp
fisttpl
ret
in
rcrb
stos
cmpsl
aam
mov
jp
mov
xor
test
das
jae
adcl
es
lods
test
imul
mov
dec
xchg
ret
xlat
mov
scas
int3
sub
adc
mov
or
test
addr16
aam
push
ret
mov
insb
shrb
cmc
jb
sub
cli
bound
or
shr
out
roll
cmpsl
lods
enter
cmp
test
mov
jmp
sbb
mull
dec
jnp
mov
aad
fists
rolb
xor
lcall
ret
pop
pop
enter
cmpsb
mov
xor
or
pop
xchg
enter
mov
mov
dec
aam
inc
dec
hlt
xchg
jge
cmc
push
mov
jb
mov
shll
repnz
jno
adc
push
add
xchg
cmpsb
jl
or
dec
cmpsb
push
out
xor
stc
dec
in
push
push
fcompl
xchg
cmp
mov
jge
mov
lret
stc
add
stc
inc
movsb
lea
push
jae
enter
subb
add
mov
mov
jnp
bound
or
clc
inc
xor
dec
jg
or
cld
daa
pop
dec
addl
stos
call
dec
push
cmp
fbld
add
mov
adc
push
xor
jle
jns
pop
sbb
jecxz
lea
pop
push
xchg
pop
mov
add
mov
shlb
clc
xchg
or
outsb
jg
pop
xchg
mov
jae
xlat
xchg
addr16
pop
and
mov
ret
jge
and
inc
dec
int3
mov
cmpsb
jmp
mov
lret
sbb
in
scas
fwait
adc
mov
lods
mov
nop
xchg
inc
test
sbb
cmp
jno
es
lret
inc
or
inc
adc
xlat
fdivrs
pusha
out
pop
in
and
sub
xchg
ret
cvtps2pi
popf
mov
push
push
das
pop
sbb
dec
xchg
xchg
mov
mov
loopne
fs
dec
cmp
push
or
adc
jnp
outsb
push
mov
xor
into
xchg
je
add
lcall
int
sbb
inc
sub
push
push
lock
inc
push
xchg
iret
adc
addr16
in
js
push
rol
lods
out
push
jb
mov
xor
xchg
imull
mov
sarb
xchg
hlt
add
jb
adc
push
loop
cmp
fadds
jp
jecxz
and
das
clc
adc
and
ljmp
or
rolb
ljmp
push
push
or
sub
or
inc
jecxz
mov
xor
loop
int
mov
push
cmp
mov
in
in
ja
lar
sbb
sbb
xor
movl
rolb
mov
in
repnz
int3
xchg
ss
mov
out
mov
xor
sub
cmp
sbb
add
int
shlb
jecxz
or
mov
jmp
bound
inc
cmp
leave
mov
jne
dec
push
jae
jmp
and
ja
sub
test
or
adc
add
fdivl
dec
inc
out
aam
mov
xchg
or
inc
xor
loopne
data16
mov
mov
push
repnz
or
lods
out
cmc
xor
outsb
inc
lret
inc
lret
in
and
fcmovnb
imul
aam
lods
ljmp
pop
testl
leave
pop
jae
jl
stos
ret
out
les
mov
mov
std
vmovd
jecxz
push
xor
push
xchg
or
or
or
inc
movsl
daa
ficompl
scas
jecxz
lret
dec
jp
push
lret
or
cmp
pop
in
mov
arpl
and
or
xchg
shr
pop
ficoml
mov
add
and
out
jns
jmp
or
pop
inc
mov
mov
pop
sahf
inc
lcall
js
jo
lret
xlat
xchg
shrb
sbb
out
cli
mov
dec
xchg
inc
loopne
roll
loope
pop
xchg
popl
call
addb
inc
inc
cmp
fs
outsb
jmp
mov
pop
imul
idivl
shll
es
ljmp
aam
aam
push
sahf
std
push
or
call
sub
popf
sub
cmp
jle
ret
and
iret
imul
xor
mov
pop
pusha
mov
shlb
cltd
lods
mov
cld
or
or
jno
rorb
cli
mov
push
pop
pusha
dec
mov
lret
cmpl
fidivl
and
mov
cmpsl
push
shll
adc
dec
test
pop
add
testl
mov
push
fdivs
inc
fistpl
mov
sub
inc
dec
and
mov
sub
jmp
push
lods
sub
xchg
cmp
into
pusha
fistps
lods
inc
dec
push
xchg
sti
scas
in
xchg
or
iret
fisttpl
add
push
mov
xchg
je
idiv
cmp
add
pop
or
xchg
pop
outsb
push
rcr
dec
imul
notb
ja
or
rcr
iret
adc
mov
push
fs
mov
push
sub
push
jo
xor
pop
lock
roll
and
inc
cmp
adcb
add
or
fisubl
aas
dec
push
add
sub
xchg
fs
cmp
les
insb
sub
fwait
orl
int3
imul
xor
aas
jnp
hlt
xchg
jns
mov
ljmp
out
mov
test
and
inc
and
rol
and
addr16
push
jg
data16
mov
outsb
xlat
test
andl
cmp
lret
push
mov
jmp
sti
jmp
sub
insl
add
lock
imul
push
xchg
inc
cmpsb
loopne
jb
je
cmp
mov
rcrl
fsubr
iret
dec
sub
and
cwtl
enter
adcl
push
or
in
mov
iret
cmp
sbb
fiadds
insl
jmp
jno
dec
adc
sub
fistl
out
add
add
loope
jae
dec
add
stc
cmp
stos
shlb
mov
sub
out
pop
imul
in
mov
sbb
dec
fimull
mov
scas
mov
sub
cmp
js
test
cmp
jns
sbb
adc
jne
out
ret
xor
or
xorb
sbb
outsb
dec
cmpb
lcall
adc
or
pop
mov
pop
xorb
pushf
sub
pop
xchg
mov
push
pop
push
inc
and
rorb
adc
mov
jge
dec
mov
pop
movsl
jbe
mov
nop
ret
aad
lea
push
sub
push
and
jle
bnd
add
inc
sub
pushl
cs
aaa
icebp
shll
ret
and
gs
pop
cmp
mov
repnz
mov
outsl
mov
jle
push
pop
inc
jnp
fiadds
push
sub
aaa
adc
or
call
sbb
jo
pop
out
xor
sub
pop
lret
jne
sbb
mov
mov
inc
cltd
mov
insb
xchg
scas
fidivl
push
pop
dec
mov
jl
dec
insl
jae
adc
jecxz
xchg
and
ficomps
xlat
pop
ret
scas
mov
or
cmpsb
inc
dec
movsb
adc
jno
fcoml
loope
mov
cmpsb
push
sub
iret
inc
or
lahf
int3
xor
mov
ret
jmp
test
xchg
fcoms
cmp
xor
jo
sti
icebp
insb
adc
nop
lret
int
pop
push
stos
icebp
lods
sahf
fwait
inc
pop
addl
dec
lret
rorl
leave
sub
test
loop
or
scas
cwtl
int
and
jnp
mov
bound
std
pop
pop
fdivr
pushf
loope
add
jae
jno
adc
pop
fwait
sub
xchg
push
ret
pop
into
inc
mov
push
ja
mov
mov
push
pop
add
jbe
inc
cmp
and
sbb
das
js
loope
ret
push
lods
lock
popf
ret
in
mov
addb
movsb
push
ja
mov
popa
cmp
inc
cmova
sbb
test
cmpsl
cmp
repnz
iret
cli
or
xor
int3
xor
mov
jo
ret
mov
or
jg
jmp
out
xchg
mov
das
sub
dec
cmp
popf
push
or
out
lea
and
sbb
icebp
mov
adc
negl
dec
int
loope
pop
insb
sahf
lds
faddl
outsb
xlat
aam
pop
sbb
sbbb
fwait
pop
cmpsl
sbb
imul
jb
and
ret
mov
pop
push
mov
jmp
rol
adc
lods
jp,pt
cmp
cltd
mov
pusha
cld
inc
xor
rclb
clc
mov
jg
or
add
and
shr
add
xchg
mov
out
mov
dec
call
arpl
jmp
sub
pop
aad
jp
inc
in
lods
int3
and
mov
mov
sub
lret
arpl
mov
inc
push
pushl
arpl
enter
xchg
or
div
xor
movsl
je
push
push
dec
lret
mov
sbb
xchg
fistpl
push
xchg
lahf
xchg
or
das
push
std
xor
cmpsl
mov
es
push
or
cmp
xor
out
dec
jnp
pop
ret
cltd
push
ret
stc
mov
mov
xor
jecxz
pop
lret
jns
sub
rclb
sbb
movsb
mov
aaa
in
xor
out
cwtl
mov
and
add
push
nop
pop
ljmp
das
aaa
or
push
ret
arpl
mov
ss
arpl
and
mov
sub
push
sbb
add
nop
pop
std
je
pop
mov
outsl
pop
dec
icebp
add
flds
in
sub
mov
mov
or
fiaddl
xchg
mov
inc
bound
loop
push
imul
adc
movsb
jno
aad
pop
sarb
add
dec
sub
mov
lods
das
xchg
test
adc
ret
mov
fcmovnb
imul
xchg
cmpsb
aad
cmp
mov
aas
sbb
pop
divl
popl
jb
fwait
test
and
in
stos
mov
sbb
pop
lea
and
cmp
ds
insb
in
cltd
shr
jns
lcall
cmpsb
cmp
add
push
cmp
fdecstp
int3
int
mov
shlw
inc
sub
imul
cmp
pop
xchg
mov
cmp
addr16
ljmp
sahf
in
lret
pop
jge
sahf
stc
xchg
pop
hlt
mov
xchg
mov
xlat
cmp
ret
mov
mov
fbstp
ficoms
xchg
sti
add
add
pusha
pop
xor
pop
lret
outsb
xchg
and
arpl
jmp
dec
inc
mov
lock
jno
mov
lock
push
push
pusha
mov
inc
mov
or
fstpl
faddl
lods
adc
or
push
pop
cli
mov
or
sub
inc
mov
mov
add
pop
xchg
sarb
xchg
out
imul
jno
std
jecxz
in
lods
sarb
add
repnz
adc
lock
lahf
inc
cmp
sub
cwtl
dec
popf
sbb
inc
push
lahf
dec
jbe
dec
push
ds
in
jl
cmp
std
inc
repnz
adc
mov
xchg
cmpsb
jl
les
sbb
or
mov
jbe
xor
push
dec
in
add
cmp
aad
dec
fisttpl
jmp
xchg
jp
popa
mov
outsl
outsb
jle
fistl
inc
jmp
fdivr
dec
sub
movsb
xchg
dec
rcll
adc
mov
imul
mov
mov
dec
cmp
bound
in
xchg
jmp
cmp
fidivrs
jo
mov
push
push
das
push
lret
push
jge
adcl
mov
and
in
fisubrs
rcl
and
mov
xchg
pop
pop
inc
jg
add
rcll
movsb
dec
addr16
or
cwtl
cmpsl
cltd
sbb
inc
cmp
sub
inc
lret
mov
mov
gs
mov
clc
stos
mov
jns
sti
lds
icebp
mov
cld
push
jae
cld
mov
test
sub
scas
cmp
popa
loope
mov
adcl
ficoml
pusha
and
insl
mov
adc
out
je
sbb
js
adc
inc
imul
mov
add
xor
mov
aad
cmc
mov
jb
cmp
add
push
ret
out
jp
imul
shl
fidivs
inc
insb
cwtl
sub
mov
mov
xchg
pusha
subb
sbb
movsl
cwtl
maxps
add
orb
sti
and
fnsave
or
pop
insl
mov
cmp
mov
jae
push
or
iret
mov
sahf
das
pop
outsl
lea
mov
xor
test
sti
jo
popf
jecxz
mov
and
cld
xchg
dec
and
mov
ret
into
mov
jae
dec
xchg
adc
adc
scas
in
sub
repnz
pop
popf
fdivp
sub
and
xchg
lret
ficompl
punpckhwd
jp
jmp
sbb
out
xor
sbb
xchg
ja
js
lcall
mov
xchg
es
fisttpll
ja
cmp
fadd
stc
mov
mov
rcr
sbb
jl
mov
cmp
and
pop
inc
repz
fmuls
aam
jmp
mov
mov
mov
daa
stos
ja
or
loop
lret
lcall
xor
jno
stc
xchg
inc
imul
xchg
mov
and
shrd
adc
inc
mov
inc
dec
movsl
jb
pusha
jl
xchg
fcoml
scas
hlt
cmc
stos
lods
sbb
jae
pop
dec
shll
sbb
mov
fnstsw
shrb
adc
movsb
cmpsl
push
cli
ss
xchg
jle
nop
xchg
dec
setle
outsb
outsl
jae
ret
pusha
sub
movsb
sbb
mov
shrb
push
mov
mov
mov
ja
call
inc
cmp
jle
ljmp
jge
call
aas
adc
adc
sbb
push
imul
lods
pop
push
std
ficoml
xchg
mov
cld
hlt
lret
jp
test
jecxz
insl
pop
outsb
inc
add
vmovdqa
adc
adc
pusha
mov
inc
xchg
mov
test
add
jge
xor
test
int
and
cmp
pop
roll
das
in
negb
mov
add
adc
insb
lea
icebp
popa
mov
pop
jo
in
cltd
inc
jnp
push
dec
or
decl
ret
pop
shll
add
stc
cld
mov
sbb
cli
xchg
aam
cmc
test
cwtl
gs
xor
js
outsb
dec
adc
sub
js
jne
push
mov
adc
test
pop
daa
xorb
or
sti
stos
bound
xchg
add
sar
jb
push
mov
adc
flds
mov
les
cmc
cmp
xchg
jbe
imul
mov
dec
sbb
xchg
out
fsts
jmp
push
cmpsb
aaa
enter
fcoms
ss
mov
subl
scas
inc
scas
mov
push
cmp
in
xchg
cmp
pop
mov
enter
dec
std
in
repz
mov
dec
pop
xchg
fs
adc
cmpl
xchg
dec
scas
sub
je
int
ret
mov
mov
gs
outsb
pop
test
in
add
inc
sar
aad
rcr
mov
xchg
inc
mov
sub
jmp
cmp
dec
imul
pop
dec
or
lret
notl
aas
sbb
sbb
sbb
xor
cmp
pop
fildll
dec
push
dec
push
movsb
dec
inc
mov
jge
lret
push
sbb
mov
add
scas
nop
or
mov
lret
adc
sbb
mov
shll
cmp
sbb
mov
mov
or
jae
push
mov
scas
or
jle
lcall
fsubr
es
cmp
es
and
mov
lret
iret
adc
adc
fistpl
jle
jnp
lea
and
jno
jno
inc
push
je
test
je
mov
sbb
ljmp
push
and
sbb
push
xor
jae
dec
movsb
rol
and
push
lret
scas
pop
pop
jns
lock
rolb
mov
mov
adc
push
dec
pusha
lret
jo
mov
mov
stos
js
jecxz
xchg
lods
or
imul
es
cld
mov
stos
sub
divl
sbbb
cwtl
cmp
sub
sbb
adc
fistpll
in
addr16
cmpsb
test
jmp
mov
dec
outsb
stc
fisttpl
orb
mov
int
add
daa
and
es
lods
sahf
xchg
repnz
rcrl
outsl
and
inc
js
nop
les
iret
mov
mov
imul
int3
pop
mov
insb
inc
add
mov
mov
repnz
std
clc
mov
xchg
scas
xchg
and
pop
sub
push
jp
mov
or
push
dec
test
jl
xor
or
jnp
dec
iret
mov
loopne
xchg
js
dec
dec
xor
sbb
sahf
cmp
add
sub
adc
cmp
or
push
pop
sub
inc
loopne
or
pop
inc
mov
dec
mov
xor
loope
push
dec
insb
stos
pop
cmp
jmp
stos
add
push
mov
clc
enter
cltd
call
inc
insb
mov
xor
mov
addr16
lret
clc
pushf
pop
decl
sarb
xchg
outsl
test
push
mov
rol
popa
push
jmp
pushf
and
insb
cltd
cmp
icebp
lea
test
stos
mov
repnz
icebp
rorb
stc
icebp
push
pop
nop
leave
dec
cmp
loopne
mov
stos
lea
or
adc
dec
cmp
add
xor
mov
dec
fdivl
cltd
jno
mov
shlb
jne
pop
xchg
aad
movsl
addl
lods
fbld
imul
iret
pop
lret
rcl
iret
sahf
js
test
ficoml
lods
fiadds
testl
or
in
push
push
mov
jle
addr16
adc
and
push
or
mov
shlb
inc
xchg
xchg
add
scas
push
mov
movsl
jg
xor
or
add
xchg
jns
cmpl
and
jecxz
imul
ret
pop
xchg
sbb
fcmovnbe
aaa
icebp
popa
mov
sub
push
std
sbb
mov
cvttps2pi
pop
inc
pop
rcrl
test
dec
inc
jmp
cmp
inc
lcall
mov
add
imul
arpl
in
push
dec
dec
rclb
rorl
sbb
je
negb
sahf
call
iret
pop
adc
bound
xchg
pop
dec
inc
hlt
pop
in
dec
and
xor
inc
fwait
xchg
enter
lahf
dec
sbb
add
shlb
mov
into
clc
xchg
add
cwtl
jge
mov
pop
sahf
iret
mov
pusha
xor
sbb
xor
mov
dec
pop
jo
xchg
dec
cmpsl
scas
dec
mov
sti
call
pop
shl
xchg
hlt
push
shll
scas
lcall
std
adcl
pop
fdivrl
lods
mov
inc
dec
in
dec
cld
inc
push
add
mov
cltd
cmpb
fcompl
inc
bound
mov
pop
pop
xchg
daa
in
mov
pop
mov
sahf
hlt
repnz
push
cmpsb
test
jge
in
dec
test
lods
clc
add
cmp
mov
xor
shll
push
lret
inc
cmpsb
ret
inc
outsl
imulb
ds
rolb
mov
cmc
dec
mov
cmp
pop
fsubr
adc
lahf
repz
lahf
sbb
mov
or
cmpsl
pusha
mov
inc
dec
adc
push
roll
mov
cmp
pop
adc
or
int
les
mov
into
imul
mov
stos
sbb
xor
jmp
jmp
push
add
sub
adc
xchg
stos
cmp
lds
push
ret
cmp
dec
xchg
iret
sti
arpl
loope
jbe
out
adc
dec
stos
adc
jmp
insl
aad
stc
mov
outsb
jg
inc
jbe
xor
push
push
add
addr16
and
lret
jno
test
push
jbe
in
add
mov
mov
cmpl
xchg
push
cmp
or
test
jl
test
jo
inc
loope
fisttpl
pop
out
push
in
aas
loopne
dec
or
mov
scas
xor
cwtl
in
pop
test
test
sub
push
leave
push
add
push
sahf
insb
fcmovbe
cmp
mov
scas
dec
and
inc
jecxz
jmp
adcb
idivb
mov
icebp
lahf
adc
scas
sub
fdivr
pop
in
repnz
xor
pop
scas
aaa
popf
and
and
movsl
jne
adc
data16
and
add
sbb
xor
cmpsl
cld
sarb
push
iret
cmp
fsubrl
mov
or
or
mov
pop
mov
sbb
mov
gs
mov
cmpsl
addb
adc
das
movsl
and
push
pop
mov
mov
data16
or
out
inc
sbbb
push
inc
lret
fs
scas
sub
mov
shlb
sbb
xchg
inc
dec
les
rclb
add
sub
xchg
lcall
xchg
ficomps
sbb
cs
fistpl
xchg
mov
mov
lahf
cs
adc
cmpsl
cmpsl
inc
mov
enter
shlb
xchg
push
filds
pop
mov
in
nop
in
test
sub
mov
add
out
test
dec
fstpt
fdivrs
xorb
je
imul
insl
insl
or
imull
push
call
mov
nop
je
cmc
or
add
ret
push
cmp
fisttpll
sti
mov
sti
jmp
inc
aas
push
cmp
lret
das
pop
mov
xchg
sub
stos
movnti
cltd
fdiv
jl
or
jno
cltd
jno
push
xchg
in
aas
divl
xchg
adc
icebp
xchg
int
sbb
rcl
jl
out
fdivrl
mov
aaa
out
cli
push
lret
les
shlb
cld
lret
test
stc
mov
in
aas
addr16
fisttps
rolb
inc
ss
fnstenv
push
lret
pop
test
mov
and
or
dec
and
inc
xchg
out
cmp
clc
dec
pop
aam
xchg
jp
push
mov
in
sub
aas
xor
fwait
insl
daa
jle
jbe
mov
adc
fadd
aas
jae
lahf
dec
in
pop
sub
push
pushw
and
cli
sbb
mov
ljmp
int
insb
dec
xlat
lea
stos
or
out
push
call
fbld
jae
xor
scas
xchg
lock
adc
mov
inc
paddd
jp
push
jp
and
adcb
in
mov
sub
or
pop
or
mov
adc
lods
dec
ret
pusha
mov
xor
mov
xchg
lret
repnz
movsl
cltd
ret
xor
scas
add
dec
sub
mov
lods
mov
mov
cmpsb
mov
jmp
mov
repz
pop
mov
cmp
push
iret
dec
movl
dec
lds
in
stos
lret
push
loope
test
jns
jge
xor
or
mov
fstl
cmp
add
jbe
das
lcall
insl
push
icebp
je
jp
fldenv
inc
sub
repz
aad
repnz
lret
sub
mov
push
sub
or
mov
cmp
aas
or
xchg
inc
xchg
in
cmc
inc
or
xchg
adc
add
adc
arpl
repz
dec
xor
mov
call
dec
loope
mov
cmp
out
cmpsb
mov
jb
cmp
xchg
stos
cmc
pop
das
cmp
or
mov
cld
add
push
repz
sahf
pop
cmp
lods
cmp
loope
adc
orb
fstps
dec
pop
pop
loope
inc
pop
sub
adc
stos
test
ret
shlb
popa
dec
stos
push
cltd
inc
or
mov
movzbl
stos
jne
jp
cmc
push
jbe
mov
jmp
pop
xchg
lods
int3
shlb
nop
or
das
aad
sub
ljmp
or
xchg
popa
jmp
rol
pop
mov
insb
sub
loop
test
frstor
mov
and
push
mov
pushf
icebp
sub
pusha
jnp
mov
mov
jne
push
pop
loope
xchg
dec
or
pushf
cmp
data16
hlt
cwtl
int
fsubrp
and
add
insb
mov
imul
push
aad
mov
add
mov
lea
xchg
jno
adc
mov
lock
cmp
pop
and
pop
movsb
push
adc
inc
sub
mov
fwait
pop
adc
push
sbb
cli
dec
fdivl
rolb
das
fs
dec
push
outsl
sbb
sahf
sahf
fisubl
rcl
sahf
or
push
xchg
push
loop
xchg
and
bound
lahf
cltd
outsl
push
les
sbb
mov
inc
and
rdpmc
lcall
dec
push
mov
pop
or
adc
into
arpl
inc
imul
rclb
in
mov
ds
test
adcb
bound
rclb
test
out
repz
cwtl
test
lock
cld
jae
xor
xchg
ljmp
jge
mov
mov
lahf
mov
xchg
inc
popa
push
enter
mov
pushf
call
dec
fwait
sahf
in
mov
dec
in
inc
es
jnp
xorl
mov
mov
mov
sbb
popf
fdivp
popf
mov
lds
iret
push
sub
ret
add
fidivl
in
push
dec
dec
es
les
fmulp
into
pop
leave
xchg
lret
call
xor
incl
hlt
cmp
push
jno
xlat
test
mov
in
xchg
hlt
pop
or
sti
stc
and
pop
insl
push
inc
lea
stos
out
jg
bound
repz
jbe
pop
in
nop
lahf
fstp
out
arpl
out
fwait
push
push
mov
fists
loopew
sub
sub
xchg
dec
xor
sahf
xor
xor
xchg
js
mov
cmp
mov
sub
rcll
aad
imul
mov
imul
add
push
add
jmp
mov
shrl
lret
push
in
xchg
cltd
aad
adc
xchg
bound
adc
je
xor
add
aas
add
into
pop
push
mov
cmp
cmp
jge
test
xchg
jp
xor
repnz
dec
test
sbb
push
jo
pop
nop
inc
mov
cmp
aam
mov
jne
repz
dec
rorl
lods
neg
mov
sbb
hlt
imul
into
mov
outsl
pop
fidivs
sub
jo
mov
xor
repz
add
dec
aad
xor
or
xor
roll
ficoms
aam
jae
imul
out
push
insb
loop
ds
xor
xlat
into
sahf
sbb
cmpsb
inc
pop
or
jae
xchg
ljmp
arpl
imul
dec
mov
repnz
scas
pop
jns
int
negb
test
mov
add
mov
enter
jecxz
or
xor
sarb
pusha
sub
xchg
movsl
push
das
daa
ds
mov
enter
int3
mov
int
lea
daa
xchg
test
mov
lcall
pusha
adc
outsl
xchg
jae
pop
aaa
mov
scas
hlt
shrl
out
push
mov
fst
ss
test
sbb
call
movsl
pop
scas
fcoml
sbb
push
mov
cltd
aad
scas
pop
cmpsl
mov
iret
bound
outsl
pop
and
mov
dec
mov
sbb
adc
out
push
js
inc
jnp
mov
inc
test
mov
sarl
sub
cmp
push
mov
lcall
in
sti
push
or
ds
in
leave
mov
icebp
out
imul
in
lcall
mov
mov
mov
push
in
mov
pop
xchg
repnz
fisttps
add
pop
adc
xorb
ljmp
or
xor
sarl
ljmp
sub
mov
lods
cmpsl
dec
enter
xor
stos
addl
cmp
mov
fisubrl
mov
rol
sub
sbb
mov
je
add
mov
xchg
out
mov
rclb
pop
xor
cs
out
leave
scas
lock
inc
clc
pop
out
push
xor
ret
sub
sbb
fcmovnb
pop
dec
rcrl
popa
test
aad
ret
test
pop
imul
fadds
test
sbb
adcb
cli
pop
mov
cmpsl
test
sub
pop
ljmpw
sbb
pushf
dec
fisttpll
cs
lret
xor
aas
clc
dec
pop
cltd
mov
inc
mov
shlb
ret
lods
cmp
test
outsb
mov
push
xor
push
xor
movsb
push
adc
loopne
stc
xorb
sbb
jno
push
cmp
sub
sbb
pop
mov
sub
not
stos
mov
cmpsb
imul
cmp
xorl
sbb
enter
movsb
jmp
outsb
pop
mov
andl
leave
icebp
mov
movsl
pop
xchg
icebp
aaa
xorb
outsb
mov
out
sub
shlb
inc
ret
jnp
aas
lea
mov
and
or
mov
lahf
mov
je
add
sbb
lret
call
adc
call
add
nop
stos
sub
mov
mov
enter
mov
data16
xchg
ror
sti
pop
mov
mov
das
xor
movsl
mov
cli
add
and
fldcw
clc
mov
out
dec
rol
hlt
mov
clc
mov
mov
xchg
and
ja
out
outsl
out
fdivrs
add
out
adc
pop
jp
mov
or
xor
into
jecxz
inc
fs
in
sti
lret
inc
and
insl
push
add
addr16
bound
sbb
jp
imul
hlt
push
and
out
cwtl
or
fisubs
dec
fcomps
sahf
mov
sub
mov
bound
xchg
lret
scas
sti
jno
fnstsw
lods
xor
sti
jecxz
push
ss
push
fnstsw
mov
loop
jg
scas
rcll
inc
not
aaa
insl
jno
shll
push
stc
movsl
in
mov
sbb
rorl
dec
addr16
mov
pop
jno
lea
pushf
mov
mov
mov
imul
push
jecxz
jo
sbb
sub
xchg
jg
add
stc
sbb
xor
loop
jae
addb
pusha
insb
pop
cld
and
mov
aad
xchg
rcr
adc
cltd
or
mov
lock
add
sbb
pushf
scas
mov
jl
inc
xchg
repnz
push
dec
lea
push
repnz
or
neg
xor
mov
sahf
mov
pop
dec
ljmp
in
mull
out
inc
call
dec
cmp
mov
inc
cwtl
mov
mov
in
sbb
mov
lods
fs
xchg
adc
leave
mov
and
mov
or
ja
pushf
jle
aaa
push
jno
scas
ljmp
fsubs
fnstsw
jbe
and
jmp
das
or
adc
loope
mov
jmp
fidivs
cmpb
test
cmp
dec
popf
cmp
add
or
mov
cld
in
lock
lods
inc
sub
shr
clc
in
cmpsb
and
push
loop
mov
pusha
adc
xor
add
jmp
or
in
jecxz
mov
push
add
adc
frstor
ljmp
enter
jbe
ss
push
adc
dec
xor
lods
lret
or
jno
test
ret
sbb
inc
pop
jg
test
stos
pop
mov
movsl
stc
pop
icebp
and
push
or
lea
or
adc
aaa
ds
orl
mov
repz
jle
les
rorb
insb
pop
adcl
or
mov
cmpsl
scas
popf
sbb
or
push
orl
xchg
add
ja
js
add
imul
adc
or
and
stos
add
int
ss
mov
aad
xchg
inc
outsl
cmp
ljmp
lcall
loope
fadd
movsl
mov
imul
mov
arpl
pushf
mov
out
push
xchg
pop
mov
sub
push
ljmp
push
jnp
out
jns
lods
daa
cmp
subb
sbb
dec
pop
bound
lock
push
sbb
sbbb
xchg
in
or
xor
movsl
movsb
mov
mov
mov
andb
dec
jp
gs
out
xchg
daa
xchg
and
xor
xor
pop
dec
das
cmp
mov
jae
aaa
shrl
push
filds
push
xchg
nop
xor
in
xchg
add
bound
mov
insl
cltd
ficompl
fsubs
stos
je
jmp
imul
jp
or
xchg
mov
out
push
dec
insl
jmp
nop
shrb
pop
xchg
test
pop
pop
int
mov
pop
and
sbb
imul
xor
mov
inc
andl
cltd
add
xchg
dec
jmp
stos
fucomip
adc
mov
inc
leave
dec
in
or
test
dec
inc
flds
fldt
mov
sub
insb
fcoml
inc
in
sub
jle
mov
jp
add
sbb
xlat
repz
jmp
inc
insl
rcll
push
popa
in
in
jle
adc
and
mov
movsl
adc
out
inc
cmp
jo
sarb
sub
or
stc
xor
mov
ret
mov
clc
push
inc
imul
stos
xchg
std
mov
cmpsb
or
into
negl
aaa
test
jmp
rcll
jge
add
ds
pop
sbb
dec
mov
faddl
or
jl
mov
jnp
mov
xor
ret
repnz
rorb
fs
lahf
add
insb
pop
leave
add
fisttpl
xchg
mov
sar
pop
dec
mov
xor
inc
pop
adc
adc
push
push
pop
pop
push
hlt
and
and
lea
ja
pop
sub
cwtl
test
and
inc
inc
adc
sub
mov
sub
sti
push
test
inc
in
adc
inc
cwtl
mov
inc
fs
insb
in
push
cmpsb
inc
test
adcl
shll
shll
pop
test
add
jbe
imul
add
aad
jle
or
std
and
or
cmp
js
xor
xor
jecxz
dec
inc
imul
adc
mov
sti
sub
jo,pt
adc
std
mov
jns
insl
fs
mov
subb
shll
pop
bound
sub
jne
jno
inc
mov
ss
in
mov
add
inc
xchg
mov
mov
add
jl
repz
push
pop
test
inc
xchg
mov
xchg
sub
or
lret
rcrb
sbb
push
ret
cmp
push
arpl
add
xchg
and
adc
mov
dec
ljmp
aad
add
xchg
aas
mov
outsl
push
pusha
jae
xor
in
xchg
mov
cwtl
dec
icebp
mov
setno
or
inc
pop
cmpsl
inc
outsl
loopne
pusha
sub
lcall
hlt
xlat
outsb
sub
sti
cltd
and
push
xor
sub
cmpl
push
jp
sub
in
adc
xchg
lret
in
jge
sbb
xor
or
sub
xchg
or
add
xor
enter
in
lret
pop
adc
push
xchg
adc
cli
bnd
mov
xchg
leave
dec
stc
iret
std
out
inc
or
mov
mov
ss
out
xchg
jno
lods
and
pop
add
ja
ss
dec
push
pop
std
or
push
fnsave
inc
scas
stc
cmc
lock
adc
test
test
pop
cmp
les
call
clc
push
shlb
xor
rorl
cmp
and
fbld
cld
popa
pop
push
std
and
and
or
push
pop
push
stc
sub
stos
fiadds
out
imul
xchg
push
cmp
add
jo
jnp
test
jne
rcl
sahf
lret
jmp
cmp
cmpsb
testb
lea
in
pop
jl
mov
es
xor
dec
sub
js
stc
and
inc
arpl
pushf
push
add
sbb
lcall
popf
iret
hlt
jae
outsb
imul
out
fnstsw
jno
inc
mov
sbb
inc
jb
inc
push
add
mov
sub
pusha
loop
movsl
je
enter
fucomip
jmp
call
xchg
pop
pushf
ds
mov
imul
xchg
fimull
pop
insb
roll
les
adc
std
mov
shl
in
adc
and
pusha
lods
jb
aaa
jb
adc
xchg
dec
inc
sub
pop
pop
lods
arpl
mov
mov
inc
roll
mov
inc
outsb
cmpsb
dec
test
inc
sbb
push
rolb
scas
cmp
jnp
clc
pop
subb
mov
inc
sbb
cwtl
adc
in
add
jbe
add
pop
inc
hlt
xchg
cmp
mov
test
stos
lock
fldl
sbb
push
lds
cmp
sub
stos
push
daa
push
cmp
and
xchg
jge
lds
inc
pusha
and
lret
shll
inc
xor
bound
lret
aam
gs
pop
fisubl
cmc
cs
sbb
cmp
mov
scas
xchg
adc
cli
lcall
sub
sbb
jecxz
and
scas
and
adc
ljmp
pop
fucomip
inc
add
cmp
mov
jo
ljmp
mov
fstps
movsl
mov
test
dec
fidivl
ds
jae
fstps
faddl
sahf
push
in
sub
lcall
adc
dec
adc
mov
mov
pop
gs
ds
test
sbb
push
enter
loopne
ret
movsb
loop
sbb
out
jns
stc
push
ds
cltd
mov
jge
dec
xor
aaa
sub
jbe
loop
jbe
int
jmp
pop
push
sarb
sub
mov
iret
mov
dec
loop
mov
cli
pop
les
jge
ljmp
arpl
push
and
popa
cwtl
lret
movsl
xlat
cwtl
sbb
or
bound
cmpsl
out
outsb
inc
ss
jg
stos
sbb
adc
mulb
pop
dec
out
rcrl
sbb
or
mov
insb
pop
popf
mov
les
mov
data16
mov
sub
xor
filds
push
and
mov
imul
inc
xor
pushf
and
test
adc
enter
int3
lods
aad
lods
cli
out
add
inc
std
jnp,pt
xchg
out
leave
inc
ja
sbb
push
repnz
out
mov
pop
mov
dec
fwait
cmp
xchg
es
movsl
gs
mul
pop
rclb
ljmp
cltd
lock
or
adc
push
sbb
das
add
stos
loop
pop
mov
stc
inc
es
xchg
sub
scas
and
mov
cmp
mov
xchg
rorl
push
inc
popf
fmull
ds
stc
mov
inc
inc
dec
jne
dec
inc
inc
loop
cltd
and
stc
xor
iret
call
xchg
inc
jl
jmp
in
rcrb
into
test
xor
stos
mov
in
or
adcl
xor
inc
jp
cmpsb
roll
sbb
ja
pop
push
mov
xchg
enter
push
or
inc
add
or
outsb
icebp
pop
cmp
mov
sbb
adc
inc
pop
or
in
movaps
mov
push
push
jmp
sahf
in
cmpsb
lret
xor
cmpsb
lds
lods
imul
sub
add
cmp
xor
std
aam
dec
leave
xor
jnp
fistpl
push
sbb
push
in
push
movsb
fcompl
arpl
aad
fdivrs
std
shrl
ja
das
out
call
mov
push
popf
out
xor
push
dec
das
sub
adc
mov
insb
adc
jnp
pop
scas
clc
inc
test
mov
sub
sti
mov
icebp
int3
push
cmpsb
mov
jnp
out
mov
ss
fmull
jno
mov
loopne
inc
pop
or
adc
sbb
lock
pop
fs
xchg
in
jmp
jge
sub
add
int3
jo
jno
jae
xchg
js
jno
sahf
cld
sub
das
and
dec
test
push
sti
std
std
mov
std
loope
rcpps
fs
jno
outsb
push
ret
push
daa
dec
stc
ret
cmp
jecxz
jle
xor
sub
sub
aaa
jmp
xchg
mov
pop
std
xchg
repz
mov
fwait
jb,pt
adc
mov
mov
xchg
scas
mov
fs
jns
push
jnp
out
es
push
mov
lea
add
clc
push
aaa
sbb
inc
icebp
cmp
repnz
test
in
shlb
insw
outsb
sbb
pop
mov
mov
pop
jne
repz
sbb
xchg
jmp
inc
xchg
push
dec
insl
cmp
sti
push
jle
lea
push
jg
pop
out
iret
out
int
mov
push
add
shrb
xchg
mov
and
dec
test
jae
mov
inc
insb
ds
sahf
mov
add
inc
sub
jnp
test
mov
cmp
cli
pop
scas
adc
insb
jae
out
lods
inc
out
aas
insl
mov
lock
xorb
fadd
mov
pop
shrl
sahf
push
movsb
test
outsl
sub
and
add
scas
xchg
cmp
or
xchg
cmp
mov
sub
iret
push
subl
pop
pop
enter
sub
loop
dec
stos
ret
cli
dec
push
cld
cmp
cmpsb
xor
cmc
mov
fimuls
popa
pop
jbe
pop
scas
xorb
dec
lret
fwait
add
mov
sbb
cmp
xor
sub
aad
mov
sbb
lret
int3
mov
jle
mov
pop
cmp
cltd
mov
sub
cmp
dec
cmpl
call
pop
mov
adc
in
dec
pop
add
sub
popf
dec
int3
lahf
aam
add
jne
movsb
outsb
iret
sub
pop
out
ret
add
ret
les
sbb
fsubs
std
add
mov
imul
stos
lcall
repz
adc
arpl
into
inc
out
popf
mul
xor
or
stos
jb
cmpsl
fnstenv
jb
push
and
inc
fcompl
push
cld
and
sub
mov
sub
dec
pop
mov
fs
lahf
mov
gs
das
sbb
and
ret
outsl
dec
lock
out
in
cmp
inc
jae
addb
popf
xor
ret
imul
shlb
jmp
fsubs
aas
and
daa
xchg
add
sbb
ja
and
adc
mov
adc
rclb
ret
jp
aaa
inc
adc
ds
xchg
pop
clc
jle
mov
js
stc
scas
push
mov
cmp
sub
dec
setbe
test
les
jo
add
icebp
ds
push
xchg
sbb
push
pop
add
inc
xchg
je
dec
ret
dec
stos
sub
sbb
sbb
mov
cmpsb
dec
mov
jnp
push
into
mov
jg
mov
jb
sub
dec
lret
push
call
mov
sbb
nop
cmp
stos
outsl
xor
loopne
sbb
push
or
pop
jbe
adc
stc
insb
ret
out
mov
jb
cmp
out
sub
jl
shll
or
daa
sub
es
psubd
movsb
sub
shll
mov
cmp
jb
test
ds
aaa
setge
std
popf
icebp
dec
xchg
fbld
cltd
xchg
lcall
cmc
in
shll
movsb
jmp
icebp
std
sbb
pop
sti
sahf
test
nop
std
ljmp
loopne
data16
lcall
sbb
addr16
or
jo
push
repz
mov
add
aaa
mov
test
mov
mov
in
push
push
cli
push
inc
lea
sahf
les
dec
iret
pop
xor
insb
mov
enter
sbb
add
and
les
mov
or
int
mov
sbb
xlat
gs
in
ss
xlat
stos
xchg
xchg
mov
arpl
sub
sub
dec
adc
push
das
cmc
add
push
mov
xchg
dec
pushf
pop
dec
imul
int3
pop
lret
enter
lahf
ljmp
int3
cmpsl
push
and
cli
test
ss
or
mov
loopne
fs
cmc
repz
lock
and
mov
pop
mov
sbb
lods
lds
daa
mov
and
stos
push
push
shrl
inc
cmp
loope
dec
shll
cmp
js,pn
jmp
push
jno
mov
jmp
xchg
xlat
mov
cmp
mov
andb
loope
div
xchg
mov
imul
ljmp
dec
fmuls
mov
insb
imulb
loop
xchg
push
or
add
cmp
jb
mov
jle
pop
xchg
in
sti
call
inc
ret
add
adc
mov
jae
mov
adc
inc
dec
movsl
ds
lds
or
das
jmp
icebp
ret
mov
pop
repnz
xchg
add
cmp
adc
add
and
fs
mov
movsl
mov
adc
mov
add
int3
or
es
adc
repz
movsb
ffree
or
mov
ror
bound
jne
sahf
jo
insl
stc
pop
ds
xchg
dec
lock
ljmp
incl
xor
jns
in
add
jnp
mov
pop
sti
in
xor
andl
mov
dec
adc
outsl
popa
jp
aad
mov
ret
mov
xor
fnstcw
int3
xor
imul
mov
scas
out
movsl
cltd
dec
xchg
ljmp
test
mov
cmp
and
cmp
stos
stc
int3
mov
sub
pop
jge
or
push
jecxz
bound
test
lods
clc
or
or
cmp
mov
fldcw
sti
xor
lds
or
push
test
movsb
xchg
inc
cmp
ret
xlat
setbe
jge
lahf
or
dec
cmp
push
scas
lods
es
mov
mov
fdivrs
iret
stc
push
sbb
cmp
xor
popl
add
cltd
sti
mov
jns
mov
scas
loope
insl
outsl
in
not
inc
loopne
push
mov
scas
dec
cs
out
in
lret
jbe
xchg
fcmovne
mov
inc
xchg
outsb
stc
repnz
frstor
dec
pop
fsubrl
jb
ja
xchg
loop
jp
divb
popa
mov
aad
cld
aaa
xor
shr
inc
loope
dec
out
xchg
pop
jno
pop
repnz
adc
ret
shl
push
rcr
outsb
lods
pop
xor
call
sbb
dec
and
pop
data16
xchg
mov
jmp
push
in
mov
jp
push
cmove
hlt
add
sti
jecxz
arpl
dec
sub
sub
ja
lds
cli
push
xor
mov
lahf
insl
push
inc
lahf
sbb
int
add
fcompl
mulb
sub
adc
mov
out
inc
ret
loop
push
addr16
or
or
sti
add
out
mov
out
icebp
jae
das
push
pop
fadd
dec
lods
mov
pop
cmc
push
les
and
xchg
mov
xchg
mov
sub
lds
sub
dec
push
stc
mov
mov
out
stc
lcall
mov
inc
ss
jbe
adc
iret
aad
pop
pop
out
pop
addr16
inc
aaa
pop
cmp
pop
jl
inc
ret
in
imul
or
inc
and
pop
mov
lock
cmp
cmp
push
aas
xchg
push
mov
addr16
int3
add
stos
js
dec
daa
inc
add
pop
out
or
cmp
xor
flds
sub
jle
fiaddl
cmp
jg
xor
aad
push
jb
and
inc
mov
je
mov
xchg
fistps
stos
daa
ds
pusha
adcl
push
push
orl
out
mov
daa
add
mov
pop
testb
mov
das
popa
mov
mov
xchg
insl
lods
inc
shlb
mov
popf
dec
sbb
inc
jno
cmp
mov
fstp
jle
jl
push
dec
xchg
dec
cmp
pop
imul
loopne
sti
push
sbb
pop
or
sbb
push
imul
inc
add
fnstenv
cld
pop
inc
aad
dec
notl
ljmp
imul
sbb
ja
sbb
jmp
leave
sub
out
cmp
in
iret
adc
cmpsb
shlb
cmp
mov
push
into
outsl
mov
cltd
jmp
sub
mov
jno
popf
lods
cmpl
push
sub
jmp
pop
insl
data16
mov
incb
sti
imul
cs
and
out
mov
xrelease
cli
mov
sub
or
ret
xchg
insl
add
ds
and
fcompl
cld
fcompl
cmp
stos
loope
in
gs
dec
fmull
pusha
inc
push
stc
lret
clc
loopne
mov
loop
xchg
push
and
test
cmp
dec
adc
ds
pushf
mov
adc
push
mov
jne
xchg
xor
test
sub
add
add
xchg
js
dec
push
cmp
fiadds
mov
inc
fisubs
push
daa
popf
popf
jno
test
push
ja
pop
or
test
sub
jmp
xchg
sbb
mov
push
fwait
stos
xchg
jmp
jbe
hlt
in
jge
in
xchg
xor
js
in
mov
adc
fucomip
arpl
pop
pop
cmp
ficomps
and
jno
out
mov
hlt
movsb
mov
or
add
sarl
lds
dec
and
jae
dec
adc
sub
mov
call
cmp
or
pop
jmp
add
jmp
mov
daa
in
fs
jmp
dec
ficoml
insl
out
push
jg
fcompl
mov
pop
insl
xchg
adc
call
lcall
out
fdivs
pop
push
repnz
in
imul
cmp
mov
jnp
adc
inc
jns
imull
test
pop
xchg
sub
bound
pop
aad
or
jp
xchg
gs
add
fdivp
js
sahf
adc
fs
push
sbb
stos
add
xor
in
addr16
add
mov
iret
mov
repnz
lret
stos
inc
and
nop
aaa
ja
push
cmp
jp
int3
dec
cmp
xor
aas
lret
mov
mov
pop
subl
fstpl
dec
sub
das
orl
mov
cli
pop
mov
testb
push
mov
sbb
dec
sub
mov
push
xlat
adcb
nop
mov
jle
stos
xor
push
and
arpl
js
xchg
icebp
rcll
push
fdivrl
push
inc
stc
adc
cmp
lret
xor
cmp
je
inc
inc
lahf
loopne
or
sar
nop
cmpb
stos
icebp
cmpsb
out
cwtl
push
cmpsb
test
mov
popf
push
pushf
pushf
and
insl
push
mov
mov
mov
out
xor
int
aaa
jge
insl
xor
pop
sbb
xchg
popa
fwait
insb
daa
inc
push
stos
dec
xchg
fists
cmp
std
push
dec
sub
dec
ret
pusha
in
mov
into
lcall
shrl
lcall
or
jno
stc
jle
mov
mov
and
cld
sub
mov
jle
push
out
insb
push
pop
add
push
pop
imul
enter
cmp
push
mov
inc
mov
imul
dec
mov
add
sar
push
stc
int
mov
fsubs
call
mov
pop
fnstcw
jmp
scas
cmp
psrad
jb
jecxz
inc
jle
dec
and
fistpl
xor
fwait
out
ds
andl
jmp
scas
mov
mov
into
cmp
movsl
xor
cld
sti
test
and
fisubrs
or
cld
sbb
movsb
movsl
mov
pop
insb
fisubrl
fsubrp
dec
repz
adcb
push
xor
push
jae
or
out
mov
cli
rcrb
cmp
inc
imul
je
or
dec
fisttpl
fimuls
cmpl
mov
mov
sar
push
or
and
dec
iret
jle
mov
add
ja
test
xor
dec
pop
sti
and
xchg
xlat
jae
mov
int
and
rcrb
mov
xchg
pop
out
imul
cld
bound
xchg
inc
decl
mov
lret
jns
mov
int3
fs
mov
inc
lock
flds
xchg
jns
inc
add
push
jnp
and
repz
loope
xor
ret
jle
daa
loopne
xchg
sub
icebp
pop
sub
cld
subb
or
lcall
cmpsl
sub
fists
test
mov
ret
xlat
jmp
xchg
mov
imul
jns
adc
scas
sub
les
arpl
es
jmp
mov
jmp
dec
cmp
and
push
mov
adcl
push
shlb
lods
or
mov
xor
mov
inc
add
jg
sbb
insb
lea
and
add
test
jmp
xchg
push
and
adc
pop
fcmovnbe
out
or
cmp
xchg
adc
int
nop
jne
nop
jae
jnp
jecxz
scas
fcmovbe
int
push
xor
jle
enter
jl
pop
xor
jns
ret
sbb
scas
xchg
leave
test
std
ss
mov
int
pop
out
dec
rcll
jmp
imul
dec
in
mov
pop
leave
sub
dec
and
shll
mov
pop
out
ss
sahf
pop
repz
stc
adc
xchg
fadd
adc
push
mov
imul
push
call
scas
and
sbb
pop
sub
add
jb
data16
fldt
sahf
das
cwtl
outsl
mov
rclb
push
pop
sub
fadds
pop
push
nop
mov
and
test
enter
andb
or
pop
sbb
sbb
and
mov
mov
jne
sti
addl
inc
mov
mov
ja
inc
fnstenv
mov
icebp
xchg
shr
in
mov
ret
cmc
dec
mov
mov
jecxz
jle
popf
shr
lret
push
xchg
and
sbb
and
ja
aad
sub
push
mov
loopne
pop
fs
add
shrl
push
enter
aas
fmulp
push
mov
and
jg
sub
mov
addl
adc
add
in
fwait
shl
mov
mov
orb
mov
lock
les
cmc
lret
jmp
inc
push
out
imul
in
sub
aam
mov
mov
movsl
xor
xor
iret
xchg
mov
jo
jmp
xor
std
inc
notb
lcall
push
adc
adc
int
js
dec
mov
mov
xchg
or
xchg
mov
xor
jl
leave
in
shll
test
pusha
sarl
js
pop
or
jp
enter
lea
xchg
rol
sub
xchg
adc
movsb
cmc
and
cmp
andl
dec
push
push
imul
int3
pushf
in
mov
subl
in
xor
pop
popl
repnz
movsl
mov
xchg
push
add
mov
lea
push
adc
stc
mov
leave
push
xchg
scas
stc
stos
imul
xor
ret
add
loope
mov
xor
dec
jbe
adc
jge
mov
mov
and
ror
pop
leave
stc
and
flds
or
dec
frstor
dec
mov
xchg
xchg
cwtl
jg
sub
xchg
test
push
ja
mov
es
dec
pop
fists
push
adc
ret
ja
lret
mov
fisttpll
or
xchg
das
mov
movsl
popa
push
in
cmp
insb
rcll
cwtl
or
sbb
jp
ja
mov
mov
mov
add
add
call
pop
xorl
popa
cmp
lret
inc
push
pop
dec
decb
sbb
mov
push
stos
jbe
push
push
dec
stc
out
scas
adc
mov
xor
in
fildl
push
sti
cld
mov
ret
stos
hlt
sbb
cmc
clc
insb
dec
pop
pop
in
int
filds
inc
add
add
fmulp
in
jno
and
aam
mov
jl
sbb
andl
popf
mov
imul
pop
cli
mov
popa
call
lods
mov
cmpsl
push
sub
cld
lcall
sub
out
dec
jle
shrl
fs
lcall
aad
cmp
mov
cmp
xor
dec
cmp
xor
shrl
out
pop
in
mov
mov
idivl
insl
sbb
jno
mov
int3
lods
movsl
xchg
inc
mov
adc
outsl
fnstenv
mov
sbb
jbe
push
dec
test
sub
jns
pushf
rorl
pop
mov
call
jle
hlt
stc
pop
xchg
sub
nop
xlat
cwtl
lods
xchg
add
dec
out
sub
shrb
fistpll
inc
jmp
popf
pushf
mov
fldl
pop
push
test
and
push
je
sarl
popf
repz
pop
cmpsb
jl
xchg
lret
push
or
xor
sti
fcomps
pop
sbb
shrb
xchg
sbb
mov
xchg
add
lea
pop
fidivl
inc
xchg
fistl
xor
pop
jae
nop
insb
std
sti
push
movsl
xor
lret
push
pop
inc
add
addr16
and
inc
inc
insl
jns
and
fs
int3
lcall
push
add
lods
push
add
xor
jne
or
adc
inc
out
ljmp
push
clc
fildl
out
inc
push
imul
test
not
sub
dec
push
mov
sub
outsb
ja
cmp
inc
mov
mov
scas
lods
popfw
or
push
dec
lods
mov
adc
or
mov
jecxz
mov
xchg
dec
mov
mov
dec
mov
dec
loop
data16
xor
gs
adc
call
mov
cs
jne
popa
test
xchg
sbb
cli
stc
and
jae
add
dec
cmp
mov
mov
out
jne
cmp
dec
not
orl
outsl
pusha
aam
cld
cmp
in
or
mov
jecxz
fmuls
emms
cmp
pop
pop
and
insl
ja
or
mov
scas
xchg
xchg
js
jle
add
pop
or
and
jno
cmc
dec
sub
mov
pop
mov
mov
mov
testl
push
jns
cmpsl
cli
shll
pop
loopne
and
aaa
into
and
ret
ds
push
mov
push
push
pushf
push
lock
out
roll
ljmp
mov
xor
mov
adc
insl
aaa
xchg
inc
js
mov
or
dec
xor
sbb
cmp
fdivl
mov
sbb
das
cmp
add
test
inc
sbb
outsl
sub
push
dec
sub
jp
in
inc
xchg
xchg
fwait
arpl
in
mov
mov
mov
xchg
int
notb
adc
mov
and
inc
cltd
sub
ret
fstpt
ljmp
mov
and
lahf
das
in
and
insb
imulb
fs
cmp
add
sbb
test
insb
mov
mov
pop
adc
shr
push
mov
mov
subb
mov
shlb
mov
test
movsb
xor
cwtl
pusha
das
dec
adc
shl
pop
cmpsl
mov
fidivl
sbb
or
push
sub
sbb
popa
xchg
iret
sbb
jns
insl
jl
add
icebp
in
movsl
push
jle
cmc
call
mov
data16
xchg
dec
ljmp
fscale
adc
and
loopne
stos
fisubrs
lahf
mov
xchg
aaa
mov
arpl
sbb
lods
stos
dec
xchg
sub
outsb
popf
or
arpl
orl
inc
sbb
out
xor
int
pop
in
sub
sahf
xchg
in
mov
xchg
inc
add
cmp
xchg
sbb
pushl
cmc
and
sti
mov
cmp
idiv
je
sub
fbstp
lea
xor
dec
fcmovu
inc
sbb
mov
pop
lods
cmpsl
lods
cli
loop
pusha
sub
and
mov
jae
lret
test
add
adc
push
fsubrs
cmp
ret
adc
xlat
popa
jmp
imul
out
jg
shl
jecxz
dec
lahf
inc
jne
out
aaa
xor
in
aas
cmp
or
dec
imulb
je
sbb
lods
push
shr
cmpsl
int
fdivl
push
lret
xchg
or
fmuls
rorb
push
or
pusha
int3
fnsave
cli
push
jno
inc
xor
ja
cmpb
divl
add
scas
lcall
stc
int
mov
inc
mov
jns
insb
jg
push
xchg
test
push
or
jge
inc
mulb
dec
das
jecxz
pop
sbbl
xchg
and
lods
scas
dec
mov
shlb
sbb
dec
leave
mov
inc
daa
lds
push
pushf
push
ficompl
jno
loopne
jne
pusha
stc
push
or
push
cmp
sbb
cli
lcall
xchg
loop
aas
ds
fnstcw
cmp
pop
adcb
sti
jg
mov
iret
xchg
enter
sbb
xchg
push
cmp
inc
fdivs
sbb
xchg
mov
add
push
mov
adc
leave
fwait
add
fcomip
int3
mov
int3
das
sub
fcompl
ljmp
inc
pop
inc
insb
sub
adc
call
push
popf
aas
lds
jp
xchg
imul
or
das
add
icebp
call
insl
arpl
or
push
or
dec
add
or
mov
sbb
orb
test
mov
xchg
mov
xchg
je
fidivrl
movsb
add
sub
xor
imul
sub
jle
popf
shll
mov
int
push
andl
adc
and
mov
sar
pusha
mov
jle
pop
dec
in
jg
pusha
scas
enter
xor
xchg
xchg
sub
mov
dec
dec
stos
pop
jl
dec
xchg
js
lock
mov
mov
sahf
pop
inc
push
add
mov
jne
call
ss
add
inc
mov
aad
icebp
push
loop
xchg
pop
push
ret
ss
aad
clc
push
mov
xchg
in
pop
xchg
xchg
cmp
insl
add
dec
ret
loope
xor
cwtl
in
cmpsb
sbb
sbb
mov
mov
push
mov
push
lret
aas
cmp
aas
adc
mov
out
inc
add
fdivl
jo
lret
sbb
adc
pop
push
dec
je
mov
clc
sub
ret
test
movl
std
and
jmp
mov
cmp
out
fnsave
jl
js
and
dec
xchg
cmp
sub
cmc
cmpsl
sbb
addr16
jnp
push
in
jmp
sub
cmc
aas
and
push
in
sbb
mov
mov
rorl
or
inc
pop
es
aaa
in
inc
insb
in
std
and
mov
std
movsb
xchg
pop
cwtl
cmc
add
xor
orl
and
daa
dec
mov
int3
mov
fwait
dec
pop
les
out
and
sti
movsb
dec
in
jle
or
loop
test
jb
scas
fistps
imul
and
fistps
ljmp
andl
les
add
pop
xlat
xor
faddl
pop
dec
outsb
mov
fnstcw
jmp
or
pop
das
pop
xchg
js
sub
mov
mov
or
lcall
ljmp
outsb
dec
in
add
push
inc
cmp
add
sbbl
sub
jle
xchg
sub
and
xchg
and
push
sahf
loope
rcll
push
pop
xchg
and
jecxz
fstl
lods
push
or
mov
cld
mov
aad
in
scas
nop
int3
stc
jmp
add
fsubs
adc
inc
pop
mov
xchg
mov
cli
mov
sbb
pop
mov
or
xchg
or
mov
xlat
daa
inc
cs
jb
xor
jl
sub
cmp
inc
or
notl
idivb
mov
lret
test
mov
fiadds
scas
insl
andb
dec
add
jle
xchg
sahf
jb
jbe
and
cli
lcall
out
cli
xchg
mov
es
cmpsl
mov
ja
in
addr16
aas
and
jecxz
pop
subps
pop
icebp
add
mov
in
test
aas
adc
and
cmp
xchg
mov
out
data16
outsl
mov
push
jo
popf
lods
mov
xchg
lea
out
jnp
push
xchg
add
scas
shl
xchg
mov
jnp
jne
xor
push
add
mov
sub
or
xchg
push
ja
ss
cmp
scas
dec
mov
pop
xorb
outsb
enter
add
fcompl
xchg
jo
bound
leave
push
daa
rcrl
call
cli
sahf
or
arpl
dec
mov
pop
sub
clc
fs
das
mov
loop
dec
lods
shrb
dec
and
dec
out
movsb
lock
iret
cmp
in
fsubl
cltd
test
dec
test
push
addr16
sahf
aaa
mov
jecxz
fsubr
push
call
sub
repz
imul
test
in
sbbl
outsb
cli
push
jbe
cli
mov
sbb
mov
out
or
push
cmp
add
inc
ret
aad
add
adc
lea
icebp
call
adc
pop
dec
and
jns
mov
mov
dec
pop
sbb
cwtl
mov
mov
pop
sti
xlat
or
icebp
cld
pop
stc
mov
add
and
mov
xor
dec
ss
sar
addr16
xlat
pop
cmc
cmp
rcll
aad
pop
fwait
aaa
stos
xchg
xor
mov
sub
pop
mov
add
xchg
repz
insl
jmp
dec
push
lods
dec
pop
loopne
mov
je
cltd
cmp
xchg
and
fisubl
ja
in
movsb
dec
pop
fiadds
dec
jns
and
inc
cmp
xlat
test
incb
and
neg
lock
push
fs
push
sub
in
push
inc
stc
push
mov
sahf
test
sbb
pop
add
cmp
mov
xor
mov
mov
les
leave
adc
add
inc
fisubs
mov
xor
lret
test
adc
pop
xor
add
rorl
cld
jne
lea
pop
xlat
lcall
pusha
and
gs
jecxz
out
lfs
xorl
pop
mov
or
fcomps
in
fstl
mov
hlt
inc
popl
scas
xchg
mov
lds
sbb
sbb
loop
xor
mov
add
filds
in
dec
pop
and
push
addr16
call
xor
mov
push
pop
lods
ss
push
jmp
pop
lds
lock
adc
xor
pop
jg
dec
mov
mov
mov
ds
insl
lods
push
jp
rcll
dec
das
fiadds
aam
pop
sbb
pop
shll
mov
imul
sub
daa
xor
stos
and
mov
cmp
inc
orb
xchg
pusha
popa
and
and
stos
fsts
in
cli
ficoml
roll
mov
sbbl
les
sbb
or
imul
in
adc
sub
xor
cs
daa
cli
dec
pop
xor
dec
cmp
mov
inc
cmp
mov
jmp
jae
adc
rorl
cmc
outsb
mov
sbb
cmp
jl
pop
lods
cld
es
fcmovne
call
stos
ficoms
sub
dec
scas
and
sub
cmpsb
cmp
stc
sahf
add
xor
sub
out
ss
or
push
dec
mov
lret
testl
scas
sbb
mov
fnstsw
xchg
push
dec
into
dec
push
and
fstpt
push
push
stc
push
movsl
adc
mov
lds
mov
add
iret
or
incl
in
and
and
or
mov
inc
pop
addr16
jbe
push
mov
lds
ss
lret
sbb
lds
loop
mov
cmp
hlt
mov
and
xor
daa
adc
arpl
adc
dec
xchg
shr
arpl
stc
nop
fadds
xchg
shrl
in
cmpsb
lret
lea
mov
pop
icebp
jge
mov
sub
xor
xchg
imul
lret
loop
movsb
lock
and
loope
or
inc
push
in
jmp
test
flds
jne
fbld
mov
jnp
mov
adc
outsb
dec
movsl
cltd
jo
neg
fsubl
sub
aas
test
mov
popf
jmp
icebp
jge
shll
xchg
fnstsw
mov
icebp
in
adcb
and
test
adc
xchg
sub
repnz
loope
pop
lea
pop
sub
dec
movsl
cmpsl
dec
and
movsb
faddl
fnstcw
shr
mov
mov
dec
push
dec
in
dec
mov
push
push
in
cmp
cmpsl
hlt
adc
rcrb
xor
cmp
mov
mov
xor
lahf
cmp
fmulp
jno
call
jo
jle
sbb
and
mov
and
pop
push
aad
pop
movsl
call
cld
mov
add
sti
imul
out
addr16
hlt
hlt
mov
cmp
shrl
pusha
enter
sbb
add
mov
fs
fisubrl
sbb
dec
add
popf
enter
mov
jne
inc
mov
andb
cmp
pop
inc
scas
adc
mov
fs
sbbb
cmp
xor
test
cmp
ret
xor
push
sub
cmp
in
scas
es
sbb
data16
mov
rcrl
adc
adc
int3
stos
outsl
js
sub
push
mov
cld
xchg
in
lret
pop
jg
mov
and
jp
into
pop
mov
jnp
inc
test
js
jecxz
add
mov
rcr
lahf
xchg
cmpsb
ds
xchg
mov
leave
cmp
sub
mov
repnz
push
fistpl
or
mov
std
xchg
int
adc
xchg
popa
dec
stos
ror
push
jae
mov
mov
add
icebp
xor
jmp
dec
rclb
lret
pop
cmpsl
jg
lds
mov
addl
cmp
mov
dec
in
push
lcall
lea
repnz
and
cmp
mov
negl
mov
into
icebp
add
movsb
retw
imul
xorb
cmpsl
or
pop
mov
ds
xchg
cmp
adc
inc
pop
scas
mov
gs
lock
test
or
mov
in
inc
mov
and
data16
imul
loopne
shrl
inc
adc
out
pop
icebp
loop
sub
lahf
dec
scas
adcl
sub
cli
int
xchg
in
aad
mov
mov
outsb
subb
mov
jmp
insl
push
mov
fs
lcall
int3
jo
mov
and
sbb
xchg
loopne
or
mov
cltd
push
mov
pop
cmpsb
mov
call
mov
inc
cmp
and
dec
push
dec
or
mov
lea
sub
pop
dec
cld
stc
sub
push
push
idiv
mov
add
lcall
jl
cmp
and
dec
sub
and
aam
mov
mov
adc
in
shrb
fwait
subl
jns
lock
lods
sbb
cmp
fucomip
jp
popf
mov
cmpsb
dec
pop
imul
rcl
js
ds
push
jge
mov
inc
in
cmp
ds
push
lods
inc
mov
aaa
mov
repz
rclb
cmp
xor
andl
mull
dec
sbb
add
push
dec
fldl
in
bound
sub
fs
loopne
lret
add
and
bound
dec
cmpb
fdivs
inc
jae
mov
fdiv
dec
xchg
imul
icebp
inc
xor
out
xchg
jns
and
mov
lret
ret
adc
add
js
mov
lock
std
data16
fisubl
dec
sub
sahf
icebp
cmpsb
fisubl
sahf
and
enter
sbbb
jno
cmc
ss
or
imul
xor
leave
sub
into
jmp
mov
lahf
dec
sar
push
xor
jg
cmp
and
xor
movsl
inc
xchg
dec
pop
add
pop
sti
and
int3
stos
adc
sub
ss
rcr
and
lds
jge
mov
push
lret
addr16
fwait
and
xchg
cmp
dec
insb
mov
xchg
or
mov
mov
sar
xor
pop
or
stos
xchg
int
push
cmp
add
adc
xlat
xor
inc
repz
rcl
mov
cmp
int3
add
movsb
clc
stos
dec
cmp
loope
lods
xor
sbb
and
out
dec
dec
popa
adc
les
std
pop
mov
mov
fidivrs
inc
sarl
mov
nop
inc
or
imul
or
lods
dec
lock
xchg
sbb
rclb
popa
adc
push
js
pop
push
and
push
hlt
jge
aad
shlb
in
pop
jo
xchg
push
leave
cld
negl
fdivrp
mov
fsubrl
push
inc
cmp
push
sub
dec
mov
imul
test
sbb
cmp
sub
stc
paddb
lods
es
sbb
add
dec
push
add
sub
fildl
arpl
int3
mov
in
sub
pop
repnz
mov
in
mov
sbb
insl
inc
int
cmc
mov
and
aad
js
push
sub
test
clc
push
addb
jecxz
push
iret
mov
fs
leave
push
sub
addr16
fistpl
inc
stos
cmp
jge
jno
out
push
or
ja
repz
mov
push
dec
and
cmp
mov
xchg
ja
clc
nop
adc
push
cmp
cltd
popa
pusha
cwtl
ret
fildl
cmc
add
ljmp
lret
push
or
mov
sahf
gs
scas
aas
cmpsl
xor
test
add
jp
push
ficompl
xlat
jmp
and
add
aaa
in
cs
insb
push
mov
mov
jecxz
lret
roll
mov
loope
add
mov
stos
mov
mov
and
cmp
mov
in
mov
mov
add
sbb
gs
adc
insl
push
pop
and
mov
fidivrl
imul
adc
inc
frstor
add
push
cltd
stos
cltd
rclb
inc
popf
cmpsd
mov
mov
pop
jl
inc
adc
jecxz
lret
adc
dec
dec
mov
iret
xchg
nop
xor
test
lds
int3
lret
sub
and
mov
jb
add
into
adc
outsb
enter
pop
jmp
outsb
cmpsb
cmp
cmpl
dec
shll
mov
das
xchg
mov
mov
movsb
insb
push
push
adc
push
cli
mov
cwtl
sub
push
mov
aam
call
dec
test
cmc
pop
shlb
cmp
xchg
jb
lock
inc
lods
pop
cltd
scas
loope
jg
dec
sti
and
mov
jmp
mov
xchg
leave
fs
into
repz
pop
repnz
sub
xchg
xchg
sbb
sub
lods
xor
aad
lock
subb
ret
mov
push
inc
adc
iret
cltd
push
inc
popa
in
sbb
and
xor
into
cwtl
pop
jg
mov
sbb
pop
xchg
mov
pop
ds
fs
lahf
ja
cmp
clc
push
icebp
pop
stos
pop
addr16
pushf
jne
rcr
fimuls
leave
cmp
int3
add
push
ja
fistpll
jge
dec
jns
notl
lods
ljmp
xchg
shll
xor
arpl
ja
xchg
hlt
in
jmp
shlb
xor
out
lods
dec
cmc
test
adc
jo
cmp
dec
or
call
lds
pop
mov
in
mov
arpl
sbb
subl
out
or
ds
rcll
sbb
int
xorl
outsl
aad
push
test
mov
cmpsl
lahf
fstp
push
push
add
mov
js
cli
mov
outsb
sbb
scas
jns
jo
mov
dec
xor
lods
jecxz
pop
mov
mov
pop
mov
pop
lods
icebp
iret
fwait
jecxz
mov
outsb
mov
inc
insb
xor
shlb
cmc
outsl
lahf
mov
dec
aaa
cmp
and
aaa
out
adc
int3
out
out
fnstsw
jg
xchg
repz
add
sub
jle
adc
call
inc
add
push
gs
lea
mov
rcrb
and
movb
fwait
repz
stos
push
std
ret
arpl
push
cmp
iret
xchg
jbe
push
xor
sbb
fcom
pop
ja
mov
xchg
stos
add
pop
cmpsb
int3
inc
push
push
cs
adc
jg
xor
jle
pop
out
dec
in
icebp
nop
jmp
imul
xor
add
inc
mov
pop
and
pop
aaa
imull
add
mov
sti
pop
ss
cmp
jl
xchg
mov
xor
mov
xchg
rolb
xor
repz
inc
mov
das
pop
stos
jge
cmp
ret
sub
sbb
mov
xchg
cmp
adc
push
xor
lret
lea
int3
cmp
push
cmc
icebp
pop
adc
es
and
add
scas
sahf
cmpb
leave
adc
test
imul
outsb
into
movsl
test
jns
adc
insb
fs
mov
lock
mov
addl
fisubl
out
fcomip
push
inc
daa
leave
jecxz
xchg
add
aaa
xchg
push
pop
stos
mov
div
xorb
dec
mov
sbb
cltd
jno
fwait
jo
and
lcall
pop
ficoms
shrl
sub
clc
into
jl
das
hlt
ret
sub
pop
pop
inc
mov
outsb
nopl
imul
push
out
jbe
aas
pop
lcall
lock
adcl
cmpsb
mov
sbbl
jmp
pushf
and
outsb
mov
sbb
mov
out
out
push
cli
and
xor
in
out
push
das
aaa
inc
or
and
xor
inc
push
and
and
stos
or
dec
cmpsl
mov
push
mov
pop
xor
jmp
adcb
pusha
js
lods
popa
aas
add
rorb
lods
adc
inc
sbb
js
mov
mov
and
sbb
and
cmp
dec
std
lea
mov
add
fs
pop
xlat
call
sbb
pop
mov
rclb
or
dec
jecxz
cld
jnp
lock
jp
mov
jno
movsb
notl
icebp
into
movsl
outsl
xchg
out
mov
mov
jno
bound
pusha
outsb
mov
sbb
ret
leave
jb
data16
iret
into
imul
rcrl
add
test
in
cmp
adc
cmp
add
dec
cmp
adc
push
xchg
pop
in
jbe
lods
inc
mov
xchg
push
test
out
into
out
orl
testl
filds
mov
bound
stos
or
mov
jg
aam
fucomp
outsl
xchg
jge
je
icebp
data16
xchg
xchg
testb
cmp
mov
insl
push
jns
cld
fstpl
inc
adcl
call
incl
lret
dec
inc
lret
in
cmpb
push
and
sbb
xor
jo
dec
gs
xchg
dec
mov
mov
sub
cmp
fs
cmpsl
sbb
cltd
pop
ss
in
in
sub
push
outsl
popaw
fidivl
mov
pop
or
in
idivl
repz
outsl
sbbb
fmuls
cmp
or
xchg
cltd
mov
push
push
add
aas
sub
stc
mov
jge
adc
sbb
insb
pop
dec
out
inc
jns
iret
mov
jns
ja
popf
aad
add
mov
and
and
mov
dec
cmp
hlt
sbb
sub
ss
mov
push
jge
dec
jb
dec
jl
lods
sbb
call
xchg
pop
jns
add
lcall
sub
mov
cmc
ja
pop
cmpsl
push
jecxz
jnp
es
je
aad
or
mov
clc
push
inc
lahf
xchg
test
sub
and
xchg
sub
jb
inc
std
sbb
push
pop
mov
inc
pop
sub
xchg
jl
ja
in
push
push
inc
pop
clc
aaa
fistpll
mov
sub
inc
cld
sbb
dec
decl
mov
ss
adc
push
inc
cmpsb
xor
mov
bound
es
arpl
pop
xor
in
add
cmpxchg
jnp
mov
cmp
mov
sub
shlb
aas
xor
nop
inc
xlat
fimull
arpl
sub
ret
mov
mov
mov
cs
pop
mov
mov
aaa
cltd
nop
push
jnp
mov
push
xlat
mov
and
mov
jg
xchg
jne
cmp
mov
jne
xchg
cld
adc
cmp
out
mov
mov
fsts
in
fimull
dec
push
sub
xchg
cltd
inc
out
sub
jmp
rolb
fimuls
push
repz
pop
add
or
and
ret
fisubrl
sti
stos
inc
cld
or
dec
cld
and
nop
sub
mov
adc
sbb
aaa
leave
call
xchg
mov
pop
sub
mov
add
adc
ds
popf
xor
pop
sbb
dec
in
movsl
aaa
mov
int3
xor
adc
pop
adc
pop
jae
cmpsb
rorl
mov
inc
xor
push
ljmp
out
cmp
cwtl
ds
out
sub
push
inc
push
cwtl
aaa
inc
dec
and
gs
mov
and
push
dec
lret
cwtl
mov
xor
rcll
ja
cmp
ss
cmp
xchg
push
mov
orb
in
xchg
je
js
test
or
xor
and
shl
neg
pop
xor
sub
outsl
xchg
stos
loop
xchg
int
sub
ret
idiv
fistps
dec
lret
ljmp
adc
jne
xchg
repz
sahf
pop
out
xchg
mov
or
fmuls
stos
and
pushf
jmp
mov
xor
mov
mov
ja
mov
jge
pop
mov
jmp
or
sub
arpl
xchg
sar
jmp
or
jmp
out
inc
xchg
pop
push
mov
push
clc
push
popa
pop
outsb
outsl
pop
leave
enter
lods
imul
movsb
pop
push
pop
movsb
loope
inc
int
loop
ljmp
xor
addr16
scas
pop
je
aad
imul
jo
add
cmp
mov
ljmp
mov
aas
push
pop
and
shrl
or
lods
ret
loopne
icebp
add
or
pop
out
adc
sarb
sbb
leave
cmpsl
mov
and
jo
mov
jl
dec
push
and
fisttpl
adc
repnz
and
jb
test
xor
cmp
das
xchg
jae
fwait
pop
popa
daa
cmp
jmp
pop
hlt
and
sbbb
xor
xchg
aam
sub
mov
cmp
mov
cmpsb
mov
int
xor
adc
ljmp
pop
std
push
push
scas
sub
shrl
mov
lea
idivb
rorl
xchg
adc
sbbb
gs
jne
or
aaa
sbbl
call
faddl
cmpb
jns
sub
mov
movsl
cmc
and
add
int
jp
cmp
inc
pop
cmp
out
mov
push
addr16
jnp
adc
out
jns
xor
inc
ret
inc
ret
out
ret
or
push
ss
mov
imul
fisubl
adc
sub
pop
or
or
in
ljmp
dec
mov
andb
negl
and
ja
adc
xchg
addr16
movsb
nop
cmp
push
dec
std
add
cmp
sub
insl
and
mov
aad
adc
fbstp
cli
lcall
popa
ds
cmp
add
jnp
in
push
jmp
arpl
mov
push
out
setnp
xor
stos
iret
xorl
cs
jae
jns
popa
cmc
xchg
test
movsl
lock
pop
aam
jge
stos
inc
in
mov
in
mov
xchg
clc
mov
mov
cmp
add
int3
pop
pop
and
call
daa
lock
call
mov
pop
les
jg
pop
pop
inc
add
sbb
sbb
push
sbb
mov
mov
jno
call
lcall
mov
mov
jae,pn
pusha
shll
leave
pop
add
orb
incl
cmovb
mov
notl
xor
stos
pop
cltd
repnz
loope
call
xchg
pop
sbb
jp
inc
xor
or
xorb
das
sbb
insl
add
out
push
subl
dec
ret
xchg
in
or
add
xor
push
and
leave
scas
sahf
xor
in
lock
loop
cli
popf
pop
int
inc
xchg
lcall
stos
stos
jbe
cmpsb
dec
push
loope
mov
hlt
clc
mov
in
movsl
push
adc
push
lods
dec
arpl
test
xor
push
push
inc
xchg
je
push
mov
xchg
out
add
lock
inc
push
test
jbe
cmpsl
jle
or
scas
jge
xlat
popa
jne
add
xor
in
push
jge
shl
stc
cmp
fimull
mov
jne
loope
and
das
jb
mov
icebp
mov
nop
ret
or
xchg
dec
cli
roll
mov
jb
stos
aam
jns
dec
xchg
sbb
jle
dec
or
mov
jle
clc
test
jmp
ret
push
inc
pop
push
imul
rorl
cmp
pop
or
jp
sete
stos
fucom
out
sbb
inc
jno
aam
loopne
pop
mov
inc
mov
pop
jo
test
add
xchg
lock
sub
cmp
xchg
shlb
or
inc
mov
cmpsl
mov
rclb
aad
stos
movsl
outsl
outsb
pop
test
pop
aam
cmpsb
pop
scas
imul
pushf
pop
negb
stc
add
mov
inc
scas
ljmp
jne
xor
sbb
int3
das
pop
lret
dec
inc
lds
sti
rorb
nop
cmpsb
or
lret
xchg
out
mov
xchg
mov
out
cmp
test
inc
sub
and
ja
idivb
sub
add
rcl
mov
and
out
orb
mov
arpl
pop
repz
sub
inc
cmp
pop
std
jp
imul
insl
add
addl
in
ds
in
push
fcom
xchg
push
les
insl
cli
push
mov
sbb
sti
inc
es
outsb
adc
dec
cmc
jnp
mov
sbb
hlt
sub
into
and
mov
pop
xor
inc
jp
lahf
sub
mov
pop
shr
ds
push
jl
mov
push
lcall
imul
stc
lock
ja
lods
test
sub
fstl
pop
movsl
mov
shlb
sub
xor
sub
int3
shrb
fimull
cs
cs
aad
icebp
enter
ds
imul
inc
dec
fstpt
aas
mov
jno
dec
popf
jl
jge
sub
movsb
or
jb
sbb
and
test
nop
divb
stc
ja
adc
mov
bound
dec
mov
xor
rep
mov
xor
andb
outsl
xchg
pop
repnz
gs
daa
bound
mov
add
xchg
add
movsb
lock
pop
in
jae
cmpsb
sbb
cli
out
or
xor
repz
inc
adc
and
fcompl
mov
or
pop
cmp
xor
std
into
mov
push
xchg
cmc
pop
icebp
add
push
jnp
in
cwtl
xchg
out
bound
lret
int3
cmp
dec
enter
pop
sbb
nop
fdivs
mov
fdivr
push
or
out
or
push
sbb
ret
jns
mov
out
and
loopne
xchg
add
push
mov
xchg
add
sbb
push
mov
mov
or
repnz
fisttps
mov
mov
or
cltd
pop
stc
adc
pushf
mov
lods
movsl
out
sub
dec
fcmovnb
mov
hlt
out
adc
test
gs
in
clc
jp
mov
mov
mov
sub
pop
sbb
jns
cmp
jae
push
push
add
mov
jp
in
or
popa
es
cmp
push
push
pop
scas
out
mov
sbb
subb
cs
addr16
orb
ljmp
lea
sbb
outsb
sbb
pop
sbb
cmp
xchg
mov
inc
lcall
cli
pop
out
inc
xor
dec
xor
js
pop
aaa
repz
lret
test
sarl
repz
ljmp
fnsave
test
mov
movsl
sti
in
inc
adc
clc
or
xchg
xor
mull
roll
lcall
fmull
adc
aas
push
mov
lret
cld
iret
adc
sbb
mov
dec
int3
dec
add
mov
jae
rolb
mov
aas
push
jmp
aaa
jno
in
push
jae
inc
and
fnstsw
cld
jae
or
jno
imul
aas
inc
pop
jo
loop
ud2
in
dec
sub
jb
aam
push
fs
or
stc
fldenv
fdivs
sarl
xor
outsl
mov
jbe
sbb
sub
lds
in
sarb
xchg
cmp
push
inc
nop
mov
pop
adc
mov
enter
pop
in
daa
fsubl
clc
inc
sahf
inc
out
dec
add
and
or
popl
xchg
mov
mov
aaa
divb
or
shl
push
push
fimuls
xchg
sub
jmp
cwtl
and
cmp
movsl
shlb
mov
test
insl
ret
push
ret
sub
jecxz
jns
xchg
aaa
sbb
jnp
sub
lret
addb
jno
pushf
test
lods
insl
jo
push
idiv
xchg
ret
dec
negl
fidivrl
daa
xor
loop
pop
in
andl
mov
fistpll
rcr
loope
enter
int3
stos
xor
add
pop
leave
test
and
rcll
and
shl
jmp
jo
jns
ss
jmp
getsec
pop
loope
jp
push
pop
dec
push
loopne
std
lea
ljmp
movsb
test
imul
loop
jle
es
cltd
fisttpll
mov
dec
out
cltd
das
pop
xor
mov
outsl
in
pop
sub
mov
sbb
iret
push
mov
outsl
adc
xchg
repz
push
andl
mov
mov
jno
sub
fwait
cmp
test
addb
movsl
xorb
mov
xor
mov
inc
cmp
cli
es
in
aas
pop
int3
mov
and
push
test
test
or
cs
cwtl
mov
clc
sub
pusha
hlt
lea
jecxz
xchg
mov
fdivrs
adc
xchg
xlat
fisubl
xchg
mov
and
loope
loopne
push
dec
jge
and
mov
add
and
jp
pop
xchg
mov
xor
push
mov
loopne
pushf
leave
cwtl
loop
push
jo
inc
ret
ja
imul
mov
pop
pop
pop
repz
pop
mov
jge
cli
cmc
push
xchg
in
icebp
push
sub
pop
aam
mov
inc
inc
cmp
lcall
popa
loopne
lret
or
adc
inc
jae
loop
jnp
inc
repnz
mov
testb
pop
pop
shufps
pop
outsl
jb
fnstsw
scas
das
ds
mov
jle
ret
or
sbb
adc
xchg
in
add
adc
icebp
inc
psrad
test
sub
stos
mov
add
mov
movsb
lahf
adc
std
aad
jns
lcall
rclb
rolb
xor
or
lcall
lret
ss
jp
and
out
mov
dec
int3
add
insl
loop
mov
mov
xchg
push
aam
scas
pop
das
ret
sbb
data16
cmp
xchg
inc
dec
jo
insb
sub
popf
aas
mov
push
inc
cmp
push
cmc
loopne
jmp
pop
sub
xchg
inc
fsubrl
repnz
cli
and
out
cld
dec
orl
sub
repz
pop
or
inc
into
and
arpl
loopne
out
sbbl
outsl
cmp
mov
lds
pushw
push
sub
loop
mov
data16
inc
popa
in
sub
test
add
mov
pop
fwait
negl
dec
in
cld
das
adc
or
rcrb
data16
inc
fdivp
jns
popf
les
pusha
ja
xor
fs
int3
dec
inc
push
aas
mov
pusha
jo
fs
jns
in
gs
lcall
dec
mov
xor
lea
test
cmpl
adc
fs
gs
test
ljmp
sub
lea
mov
pushf
sbb
push
das
fwait
ds
in
daa
push
cmp
inc
or
and
dec
cmc
mov
lea
aad
lret
or
adc
or
cld
push
loop
cmpsl
jecxz
ffreep
jbe
sbb
pop
push
and
or
dec
jg
push
outsl
scas
imull
push
add
jns
or
add
xor
cmpsb
shl
cmp
dec
push
iret
lea
mov
movsb
loopne
cmc
add
adc
cmp
ja
cmp
loope
cmp
scas
add
daa
and
xchg
mov
mov
out
int3
inc
and
cmp
xchg
loop
hlt
rcr
lea
jecxz
aam
or
lea
call
push
inc
in
subb
adc
repnz
int
dec
jecxz
mov
sbb
notb
mov
dec
mov
push
out
inc
cmc
sub
cmp
cld
lea
in
pop
inc
and
inc
in
push
inc
sub
mov
fs
ljmp
mov
mov
daa
sti
ficoml
add
test
orb
sub
mov
daa
mov
pop
jbe
pushf
rol
push
repnz
dec
into
and
scas
aaa
pop
inc
xchg
xchg
popa
xchg
cmp
clc
stc
xchg
jg
shlb
mov
lahf
sub
push
cmp
ret
mov
lods
lds
mov
cmpsb
icebp
cmp
pop
or
mov
outsl
cld
mov
arpl
add
mov
insl
pop
cwtl
mov
imul
cmpsb
mov
out
mov
test
add
mov
push
scas
shlb
mov
daa
lock
cmp
test
xchg
sub
outsl
sarl
and
xchg
push
popf
icebp
jmp
jae
subl
andb
and
fucomi
cli
loope
subb
cli
dec
cltd
adc
andb
loopne
data16
or
test
inc
inc
lret
add
fstpl
dec
js
sbb
mov
hlt
and
cwtl
mov
push
enter
ljmp
pushf
sarl
aaa
ret
inc
mov
lock
fwait
shlb
lret
into
out
or
ret
iret
mov
mov
add
movsb
rcll
mov
out
dec
icebp
lret
ds
cli
lods
fsubs
mov
adc
in
daa
mov
mov
std
fwait
cs
cmpsl
adc
lret
sbb
cmp
lods
imul
and
int
xchg
jmp
ret
aad
out
jns
scas
adc
loopne
sub
mov
mov
pop
andb
fsubrs
dec
jmp
loop
das
js
stc
sahf
xchg
fwait
pop
arpl
fcomps
pusha
or
std
test
es
inc
scas
inc
inc
ja
mov
in
jp
push
lds
ljmp
mov
dec
test
loopne
mov
loopne
mov
jno
jge
cld
jg
add
dec
nop
out
jecxz
dec
in
int3
pop
push
mov
or
outsl
dec
ds
cld
pop
stc
adc
adc
xchg
sbb
hlt
int3
sub
mov
cmp
xor
dec
and
js
dec
push
repz
gs
xor
and
daa
test
pop
xor
and
enter
adc
lock
js
pop
pop
aam
and
clc
adc
lret
clc
je
jg
outsl
sbbb
sub
adc
pushl
xchg
leave
cmpsl
fstps
es
das
adc
dec
lea
xchg
pop
mov
push
int
out
lahf
jne
stc
inc
je
jns
scas
gs
add
pop
push
loopne
stos
add
aam
iret
pop
out
mov
mov
add
flds
adc
mov
fcompl
jne
cmp
sbb
ret
xlat
or
cmc
orl
dec
cmp
xchg
aas
out
shll
dec
lret
inc
fnsave
test
cmpsl
mov
push
inc
add
sub
pop
lret
iret
push
mov
pop
adc
sbb
not
and
cmpsb
imulb
cmpsl
dec
sub
mov
xor
insb
lret
mov
add
inc
ljmp
out
sar
push
mov
mov
mov
cwtl
out
out
out
loop
sti
adc
inc
or
shlb
std
lods
rcr
jl
add
rclb
xor
cs
test
dec
xchg
jne
mov
aam
hlt
cmovb
mov
jo
jecxz
dec
sbb
int3
inc
xchg
jmp
test
and
add
mov
test
cmp
xchg
fs
sbb
stc
mov
push
mov
xchg
cmp
lods
pushf
out
shlb
mov
shll
ljmp
ss
int3
sub
push
and
cmpsb
jmp
jae
cmp
cmp
jl
mov
sbb
rcr
mov
pop
movsb
jl
into
push
push
jmp
movsb
jecxz
lods
cmp
xchg
out
lcall
clc
lcall
mov
xlat
faddl
stos
xor
testb
sub
push
test
lods
and
inc
mov
icebp
or
mov
fucomi
cs
xchg
into
inc
ss
xor
inc
cmp
push
pop
push
xchg
sbb
mov
xlat
pusha
pop
inc
dec
or
std
rorb
sub
mov
push
xor
jnp
aas
or
movsl
mov
cmp
lret
aad
mov
xor
xchg
pop
pop
inc
mov
or
lods
adc
cmp
in
scas
rclb
aad
movb
adc
mov
repnz
pop
out
jno
sbb
push
negb
cmp
lods
pop
insl
sbb
rorb
jb
movsb
xor
lret
lahf
jbe
lret
cld
imul
lds
jne
fiaddl
cltd
and
mov
sarl
lds
inc
ret
cmp
jle
imul
or
inc
nop
inc
loopne
aad
xor
enter
insl
mov
sbb
call
lock
jp
xchg
xchg
mov
fimuls
ljmp
mov
dec
or
jbe
js
cli
out
cli
and
sub
fwait
sarl
mov
jge
mov
add
adc
pop
xor
mov
dec
test
mov
add
pop
xchg
mov
xor
int
orl
jbe
adcb
mov
fdivrs
jne
hlt
push
dec
adc
repnz
xchg
in
xor
aam
add
fcmovnbe
push
aaa
adc
insl
imul
or
data16
movsb
notb
adcl
je
dec
repz
cli
adc
loop
cmp
push
jne
jnp
xchg
adc
push
push
test
dec
xor
push
jmp
arpl
sub
mov
mov
mov
idiv
ljmp
mov
sub
dec
cli
lods
jno
sbbl
shl
jno
nop
xchg
cmc
nop
mov
cli
in
cmp
jge
lret
mov
cmp
in
push
cmp
ja
rcl
loope
xchg
mov
pop
movsb
repnz
repnz
inc
iret
fisttpl
stos
or
jge
iret
andb
fistpl
cli
cli
mov
int
out
insl
popf
leave
mov
jp
stos
daa
nop
adc
sbb
sbb
inc
sti
cltd
sub
pusha
data16
mov
movsb
jo
out
jecxz
mov
nop
addr16
push
or
push
inc
icebp
push
ficompl
sarl
std
mov
push
es
rclb
mov
icebp
sbb
jle
mov
sub
out
jo
rcll
adc
add
shrb
bound
push
repnz
adc
pop
in
inc
push
cmpsb
adc
inc
lahf
ja
add
lods
sbb
add
and
push
inc
jo
sarb
shll
xchg
pop
out
sbb
pop
or
pop
lock
mov
pop
in
sub
push
dec
mov
sarb
push
test
xchg
lods
mov
mov
pop
aaa
lods
dec
sbb
jae
cld
ret
loope
xor
arpl
test
xor
mov
pop
push
mov
test
add
jl
pop
popa
ficomps
icebp
mov
jle
loopne
outsb
invd
div
xchg
imul
scas
mov
iret
xor
cmp
out
dec
nop
fidivs
push
lea
out
mov
es
sub
xchg
sbb
mov
rclb
scas
fstps
loope
out
add
jbe,pn
xchg
xchg
sub
inc
jg
lds
sahf
push
roll
cmpsb
outsl
mov
add
sbb
repnz
or
push
iret
les
sbb
push
pushf
sahf
dec
dec
pop
mov
adc
pop
ljmp
mov
pop
mov
mov
cmc
dec
mov
sub
cmp
shl
int3
mov
or
sbb
push
cmpsl
sub
cmpsb
shl
inc
lahf
adc
and
call
fsts
or
sub
inc
into
negb
mov
or
jnp
in
or
insb
sahf
fldenv
mov
nop
jge
shl
fmul
inc
testb
loop
or
les
addr16
movsl
stos
push
pop
xchg
gs
popf
gs
in
cmpsl
movb
sub
lods
mov
test
sarb
fldt
fcmovne
xor
mov
mov
mov
lods
iret
add
pop
lahf
insl
and
inc
cwtl
pop
sbb
aam
mov
mov
test
jae
movsb
mov
sbb
enter
jecxz
popa
xor
pop
jl
xchg
xchg
fidivl
mov
push
lods
test
mov
sub
addr16
and
incl
add
cmp
ljmp
sbb
pop
dec
lods
mov
ja
in
inc
xor
xor
fs
push
mov
outsl
fsub
lgs
hlt
ds
arpl
pop
adc
ja
ficoms
dec
daa
je,pn
aaa
cli
mov
dec
sbb
dec
stc
dec
sarb
inc
sub
mov
pop
mov
lds
fisttpl
jbe
push
pop
add
out
cmp
outsl
aad
js
jge
xor
int
sbb
jmp
je
xchg
jae
jbe
jae
add
sub
roll
cmpsl
mov
rolb
jno
pop
push
scas
mov
cs
inc
and
mov
bound
out
shlb
push
shl
aaa
and
jns
add
test
into
xor
rcl
lods
imul
adc
xchg
or
out
lahf
push
mov
xchg
mov
inc
sarl
ljmp
test
mov
stos
and
cmpl
pop
cmp
jnp
in
enter
test
orps
xchg
jns
xor
pop
sbb
aas
decl
test
adc
add
mov
jb,pt
sub
cli
pop
pop
xor
outsl
loop
dec
hlt
cmpsb
test
gs
dec
lret
jae
loope
pop
mov
xchg
cwtl
dec
pextrw
pop
xchg
dec
sub
out
in
dec
stos
in
jle
add
jo
fidivrl
ljmp
mov
mov
add
inc
out
aaa
mov
jmp
jmp
push
xchg
bound
stos
into
in
icebp
dec
xorl
or
sbb
jb
in
jb
das
push
add
addl
sbb
test
push
and
mov
mov
pushf
gs
aaa
pop
cmpsl
int3
pusha
mov
andl
cmp
test
lock
mov
sub
inc
bound
pop
test
xchg
out
clc
hlt
jo
mov
gs
ss
ret
out
xor
sub
push
ror
push
push
test
jp
and
jno
push
clc
fimuls
sub
adc
inc
hlt
dec
outsb
inc
push
stos
dec
pop
aad
pop
push
pop
mov
test
dec
cmp
ds
aad
mov
aam
out
and
ljmp
arpl
push
mov
mov
sti
sbb
jg
cmp
pushf
out
lcall
inc
aad
sub
mov
test
outsl
cmpsb
and
mov
testl
mov
sub
out
nop
pop
sti
or
inc
popa
adc
jge
lods
cmp
ret
xchg
gs
xchg
sub
mov
push
lock
mov
mov
lods
mov
ja
fnstenv
mov
adc
idivl
add
je
sbb
fiaddl
xchg
in
inc
sbb
idiv
or
movsb
pop
xchg
loopne
sbb
cmp
pop
mov
add
pushf
adc
lock
jp
and
insb
adc
dec
call
jbe
lea
pop
cmp
sbb
rorl
xor
pop
push
addr16
adc
in
push
push
lock
xchg
mull
insb
sbb
int
mov
cmpsb
cmp
mov
mov
inc
lock
push
cltd
adc
arpl
cld
jl
loopne
pop
dec
gs
add
mov
stos
jg
xor
movsb
and
xor
sub
fidivrs
repnz
arpl
sbb
mov
pop
and
ljmp
nop
dec
fnstcw
xchg
sub
incb
xor
push
ljmp
xchg
daa
loope
sub
popf
xor
popa
cwtl
imul
addr16
pop
lock
cmpsb
fcompl
aas
stos
movsb
cmp
inc
cli
data16
scas
fmuls
inc
pop
stc
fcoml
lcall
leave
push
mov
rcll
lea
and
or
stc
lock
scas
or
xor
pop
sbbl
les
stos
inc
or
jbe
leave
int
add
lds
int
cmc
xchg
inc
sub
and
pop
ljmp
jo
fimuls
adc
int
and
repnz
add
sbbl
lea
ss
xchg
mov
clc
add
and
imull
mov
jmp
pop
faddl
call
in
and
addl
sbb
sub
mov
js
jns
jecxz
mov
sub
std
lret
daa
mov
or
daa
lods
sbb
pop
cmp
xor
lock
rep
aam
xchg
fsubl
push
mov
cmp
jne
push
jge
mov
loopne
mov
inc
jl
test
in
pop
icebp
imul
add
aas
cli
dec
lds
sbb
pop
push
push
lods
sub
testl
es
orl
cmp
adc
bound
xchg
scas
rolb
inc
int3
sahf
push
inc
mov
add
cld
xchg
inc
mov
subl
loope
and
in
or
mov
xor
inc
pop
enter
inc
sub
xor
scas
hlt
inc
sub
or
and
push
fwait
arpl
in
ja
push
or
mov
add
dec
and
outsb
xor
adc
aaa
fcompl
mov
fs
sub
jg
mov
in
es
pop
rcrl
cmpsl
in
pop
aad
dec
mov
adc
call
or
add
aaa
cli
fdivrl
mov
mov
icebp
das
push
fcmovnu
cmpsl
movsl
push
xchg
sbb
pop
jbe
sbb
stos
les
repnz
mov
xchg
stos
ret
push
dec
mov
sub
inc
xchg
push
scas
in
or
xor
mulb
adc
mov
adc
lret
ret
sahf
xor
jb
push
fidivl
and
out
sbb
jmp
loope
popa
mov
adc
xchg
dec
mov
daa
loope
ds
jb
fcmovbe
push
dec
cmp
and
inc
lock
mov
in
adc
loop
mov
cmp
lock
push
sbb
add
dec
xchg
lods
cltd
jmp
cmpsl
imul
xchg
inc
push
je
imul
cmp
out
push
imul
xchg
sti
cmp
ja
jle
mov
lahf
sahf
rol
add
fisubrl
mov
shll
aas
xor
xor
adc
div
out
jae
sub
sarb
dec
cwtl
pop
ret
push
mov
jo
cmp
dec
scas
fiadds
and
pop
or
ss
cmp
loopne
or
je
dec
aad
xchg
insl
mov
lea
dec
mov
cwtl
lahf
scas
mov
jle
pop
lret
dec
mov
inc
stos
pop
sahf
mov
adc
lods
sbb
data16
cmpl
shlb
cmp
mov
nop
inc
push
in
aad
sub
in
fdivrs
sbb
lea
or
dec
js
in
push
ljmp
lds
mov
fisttps
pusha
dec
mov
test
jo,pn
mov
xor
notl
sbb
das
mov
sbb
xor
adc
rclb
mov
add
sahf
jmp
mov
jbe
xchg
xchg
jo
cmpl
lods
jg
imul
adc
push
movsl
test
lock
push
push
lods
mov
stos
mov
mov
mov
push
jnp
stc
ja
and
popa
filds
mov
fstpt
mov
jbe
int3
push
cmp
sbb
insl
push
jg
mov
gs
jne
mov
push
jle
xchg
or
test
inc
jecxz
mov
fisttpl
mov
roll
frstor
aas
lods
jo
and
adc
shrl
test
mov
push
shll
dec
dec
in
dec
xchg
loope
and
int
jae
push
loopne
push
fs
xor
add
jne
pop
mov
jb
adc
xchg
stos
mov
aad
fisttps
add
pushf
std
jg
mov
fs
cmp
cmpb
mov
and
or
lahf
mov
push
mov
push
insb
ljmp
repz
pop
insl
mov
cmp
sbb
inc
jnp
mov
fucomi
movsl
test
and
dec
xchg
lcall
mov
js
pushf
jb
shlb
stos
divb
rorl
fdivrp
mov
ss
or
xchg
adc
aam
lea
je
jl
icebp
adc
adc
enter
ret
add
jecxz
imul
filds
in
inc
mov
ljmp
push
movsl
cmc
mov
or
shrl
fidivrs
mov
dec
aam
in
arpl
inc
push
fdivrs
dec
nop
or
inc
andl
adc
out
xchg
les
aad
lcall
ficomps
jbe
push
add
push
fwait
add
scas
jno
sbb
cmp
jns
sarb
add
xorl
das
xchg
sarl
adc
xchg
cld
jmp
cmpsb
scas
dec
xor
or
sbb
rol
sbb
jns
xchg
ret
lods
push
lds
mov
jo
xchg
bound
xor
push
ret
xor
stos
iret
inc
inc
int3
rclb
adc
insb
mov
mov
mov
rol
lcall
dec
ret
mov
repnz
call
jl
mov
sub
mov
fs
loop
loope
or
cltd
pop
cltd
std
cmc
sub
bound
or
adc
addr16
decb
loope
inc
mov
mov
sbb
orb
mov
pop
jle
cwtl
aas
mov
xchg
add
pop
jmp
push
repz
sbb
daa
aam
out
and
in
out
insw
in
xchg
jae
ret
stos
add
mov
cmp
iret
cld
xchg
ret
xor
pop
aad
lcall
jne
sub
out
cmp
mov
fimull
pop
clc
je
jle
loopne
ljmp
xchg
addb
push
addr16
dec
xchg
jnp
mov
push
adc
fwait
pusha
jl
xchg
xchg
mov
das
pop
ret
jge
and
jnp
mov
dec
inc
adc
arpl
lods
jno
adc
je
mov
cmp
pop
xor
cli
pop
push
mov
jmp
fldenv
dec
aam
stc
dec
std
push
adc
jb
jne
or
jmp
xchg
jnp
and
addr16
adc
sbb
aaa
insl
and
sub
adc
aaa
fsts
jge
test
jne
aaa
and
inc
pop
and
or
inc
sbbb
dec
outsb
movsl
pop
loope
test
stos
pushf
pop
cmp
pop
sbb
mov
out
push
dec
sub
pop
mov
and
das
pop
test
mov
cli
rcrb
jo
out
and
sahf
loop
cwtl
je
push
loope
dec
mov
jae
cmp
mov
cmp
xchg
xchg
xor
cmp
mov
imul
ja
jl
xchg
lods
pop
mov
stos
pusha
jmp
in
aad
mov
mov
jo
outsl
cmp
dec
pushf
fstpl
fistpl
push
push
xor
pop
push
pop
insb
iret
fisubrs
addl
cmp
je
jno
cs
mov
dec
pusha
jl
out
push
cltd
mov
fisubs
roll
dec
mov
fmuls
cld
add
adc
jecxz
inc
shlb
fldl
ljmp
xor
jge
sub
push
movsl
adc
inc
pushf
xchg
inc
inc
aaa
out
adc
and
pop
lret
pop
and
push
inc
and
jg
es
inc
push
int
sbb
jl
pop
into
negl
insb
setp
inc
push
cld
pusha
ret
push
loop
pop
xor
roll
mov
mov
push
sbb
lods
data16
adc
mov
mov
sub
or
jge
mov
out
adc
pusha
into
sub
in
shr
xchg
dec
cmp
lods
ds
cmpsl
aam
lea
adc
adc
and
repnz
mov
andb
testb
adc
mov
mov
mov
xor
sub
rclb
jbe
enter
cld
rorl
fnstenv
xchg
orb
dec
hlt
and
in
dec
jns
stos
shlb
jnp
mov
inc
mov
jg
loopne
pushf
aaa
stos
out
mov
xchg
jl
ret
xlat
xor
in
mov
push
mov
ror
cmpsb
js
jo
fwait
mov
mov
add
sahf
and
mov
mov
mov
mov
scas
je
in
inc
cmp
fstl
inc
popf
sub
pop
repnz
insl
pop
xchg
xlat
int3
repz
xchg
cmp
int
lret
mov
imul
mov
lcall
xor
sbb
mov
lds
pop
jns
mov
cld
adc
sub
sub
xchg
push
movsl
lds
cltd
jge
ffree
sub
sbb
pop
or
dec
insl
push
xor
mov
and
mov
bound
call
xor
and
ficoms
adcb
xchg
lea
push
cmp
dec
xchg
add
ja
es
icebp
mov
leave
inc
enter
or
cmpl
pop
mov
jle
inc
inc
adc
xchg
stos
fimuls
mov
fcmovnu
mov
sub
lock
in
mov
das
pop
fisubl
sub
push
sbb
sbb
and
daa
pop
call
and
or
mov
sbb
or
or
aad
imul
insl
aam
jns
sbb
push
mov
ret
jb
mov
inc
mov
pop
ficoml
dec
outsb
sub
and
aad
movsl
dec
dec
xlat
mov
imul
fs
repnz
push
popa
lret
cmpsb
or
shl
jnp
mov
movsb
testl
aam
or
fldl2e
ja
xchg
aam
dec
inc
mov
int3
pop
jle
fldenv
pop
cmp
push
push
test
sub
adc
mov
out
push
adc
cmp
push
sub
jge
inc
cs
inc
cmp
out
pop
and
add
xchg
inc
negl
and
cmp
dec
adc
sub
mov
jg
jns
int
cwtl
cmp
xchg
xchg
sti
push
inc
pop
mov
add
sbb
sti
jecxz
cwtl
in
jnp
fstps
mov
gs
push
lods
mov
das
sbb
push
mov
cmp
pop
xor
pop
lcall
jle
mov
or
out
lret
xchg
imul
push
sbb
pop
daa
cmp
xor
rcll
cmp
cmpsb
fucomi
pop
sbb
std
pop
bound
bound
mov
xor
adc
and
mov
roll
jo
jo
mov
sbb
rcll
xchg
mov
jle
ret
repz
lods
mov
adc
dec
fsubr
and
cwtl
popa
cli
aaa
mov
push
in
add
sti
insb
ror
mov
cmpsb
or
sub
or
sbb
adc
mov
add
adc
fsubrl
popa
push
adc
and
dec
ja
outsl
sub
mulb
test
cwtl
ljmp
movsb
pop
xchg
sub
sub
addr16
dec
mov
and
fstpl
and
add
sbb
incb
push
jbe
and
jno
mov
lret
pushf
jb
scas
mov
or
das
push
mov
into
stc
fldenv
lea
js
push
in
sahf
and
sub
ret
or
scas
and
outsl
aad
addb
add
dec
iret
pop
adc
leave
push
adc
sub
dec
sub
aaa
and
inc
jecxz
xor
push
or
faddl
and
mov
roll
lcall
fstpt
adc
rol
or
or
fmul
and
call
in
fmuls
repz
sti
adc
mov
pop
ret
stos
hlt
cmp
xor
xor
ljmp
aaa
push
lock
decb
negb
and
pop
data16
mov
jecxz
in
jl
clc
das
sub
jo,pn
fld
sbb
push
out
inc
fcomi
lahf
enter
xor
xor
xor
test
xchg
imul
jb
popa
outsl
pop
imul
push
dec
jmp
add
pop
xor
xor
inc
pop
push
into
xchg
push
fdivrp
je
pop
lea
push
jmp
dec
sbb
sarb
int
fldcw
push
in
lret
pop
movsw
jg
cmp
add
js
leave
rolb
icebp
cld
inc
or
rorl
xchg
hlt
and
mov
test
add
sub
cmp
fwait
ja
test
aam
jl
xor
lea
rorb
pop
xchg
cmpsw
xchg
adc
pop
repz
pusha
jle
outsl
mov
pusha
daa
mov
mov
push
arpl
adc
sti
mov
hlt
push
fcmove
or
arpl
ficoml
jno
mov
lret
clc
ljmp
outsb
ljmp
jp
xor
loopne
inc
repz
jle
in
and
mov
adc
sarl
filds
or
cltd
pop
xor
enter
mov
mov
addr16
in
fwait
stos
adc
loope
call
sbb
aas
jmp
shl
jmp
jecxz
cmpsl
into
xor
mov
pop
repz
xor
pop
js
inc
aam
xchg
ss
shll
ret
in
fsubrs
mov
jnp
leave
iret
dec
daa
test
in
int3
and
sub
mov
dec
add
mov
bound
test
adc
adc
sbb
mov
dec
cld
jb
dec
adc
aaa
inc
jecxz
jl
aad
into
lds
pop
arpl
loopne
rcl
scas
xchg
jp
mov
jno
jge
push
adc
push
mov
pop
imul
add
jecxz
daa
in
cmp
push
insl
jmp
and
into
nop
mov
mov
lret
xchg
xor
mov
stc
iret
push
pop
stos
jecxz
sub
fwait
cwtl
std
jo
ljmp
inc
pop
aaa
imul
and
pop
push
xchg
xchg
or
pop
popf
lcall
add
adc
seto
outsb
clc
dec
pop
lds
into
jmp
nop
in
xor
adc
lock
push
lahf
push
fcoml
scas
pop
int3
sarb
push
dec
popf
mov
and
cmp
or
mov
cli
pop
xchg
fwait
adc
les
loope
sarl
add
cwtl
inc
icebp
lret
addr16
inc
hlt
rcl
dec
pusha
inc
maskmovq
mull
ss
in
hlt
inc
mov
pop
or
fcmovnbe
fs
mov
sbb
mov
dec
and
repnz
inc
push
into
pushf
xchg
pop
imul
shrl
mov
dec
rcrl
cmp
push
ret
pop
jns
xchg
mov
cmpsl
cmc
xor
sbb
outsb
sbb
jo
cmp
or
repz
fldl
jb
ret
lods
call
and
shlb
arpl
das
stos
dec
outsl
push
push
mov
mov
mov
xor
and
ret
sub
dec
aas
cli
inc
xchg
jge
in
and
outsb
push
push
push
xlat
mov
xchg
cmp
mov
lock
je
add
mov
mov
add
lea
pop
mov
aas
lret
movsb
test
inc
mov
out
mov
hlt
stc
fimull
pop
xchg
or
fucomp
test
xor
cmp
in
xchg
loopne
arpl
xorb
jmp
loop
insl
jle
data16
pop
push
and
addr16
jb
sbb
outsb
push
jle
outsl
test
lods
int
imul
pushf
mov
mov
adc
in
adc
movsl
out
aad
sti
rolb
mov
dec
mov
lock
ss
inc
movsb
push
fistpl
jl
push
xor
iret
inc
sbb
push
pop
scas
imul
ret
sub
cmp
dec
mov
das
std
in
fnstsw
add
cs
fdiv
mov
pushf
loop
outsb
mov
cltd
stos
dec
cltd
pop
cmp
test
int
cmp
sbb
fisttpl
ret
sbb
jnp
xchg
dec
xorl
or
daa
add
add
or
cmp
cmp
inc
out
xor
icebp
test
mov
clc
push
test
outsl
xor
adc
sbb
std
nop
pushf
mov
fstps
repnz
xor
sbb
dec
sti
rorl
cmpsb
lret
push
int
shll
iret
xlat
test
mull
ja
sbb
arpl
int
or
and
pop
xchg
outsl
dec
stos
or
add
bound
xor
fcoml
in
jp
jg
cmp
jbe
adc
shll
popa
nop
push
popa
lock
jne
cmp
scas
mov
push
in
mov
out
xor
addb
stc
pop
cld
divb
xor
xchg
xchg
inc
pushf
rcr
mov
mov
xor
insb
clc
jns
out
std
mov
cmpsl
mov
add
push
cmpl
andl
adc
dec
jp
hlt
sub
mov
jb
push
cli
xchg
add
jnp
sbb
sbb
popa
and
cmp
clc
or
cmpsb
lds
aam
mov
xchg
mov
loope
mov
fcomi
ret
inc
stc
sbb
stos
push
insl
cmp
xlat
insl
dec
sbb
mov
std
add
clc
cld
mov
mov
push
lods
in
add
movsb
sti
mov
out
and
mov
ja
add
dec
add
lds
insl
lods
outsb
add
push
mov
lods
add
inc
pop
cltd
xor
popf
fnsave
rclb
add
push
inc
rcr
dec
and
add
add
mov
in
xor
xchg
and
stos
mov
xchg
out
lea
loop
mov
imul
divb
add
sbb
into
pop
sahf
out
xchg
push
sarl
std
push
and
adc
imull
jne
fbld
gs
mov
shrl
fdivrl
fsubrl
push
out
ret
ja
test
bound
add
mov
inc
mov
push
lret
push
loope
cmpsb
movsb
push
arpl
and
fisubrl
lret
iret
jle
shlb
movsl
int3
outsl
arpl
inc
or
cmpsb
ja
mov
test
movb
mov
clc
lock
cmp
mov
push
xchg
jb
in
sar
aad
mov
xchg
mov
push
xchg
push
inc
dec
cltd
mov
sub
je
in
sahf
xchg
and
loope
push
and
mov
and
lret
stos
loopne
adc
sbb
xor
cmpsb
scas
sbb
mov
leave
pop
dec
arpl
mov
std
xchg
insb
popa
in
in
sarl
or
daa
in
xchg
pop
cld
mov
cltd
pop
add
mov
sub
jbe
mov
cmp
call
jb
dec
lds
js
mov
dec
add
adc
jp
mov
jae
imul
lahf
outsl
insb
movsb
adc
fistl
cli
jnp
pop
jecxz
push
mov
pusha
lds
imull
add
icebp
movsl
aaa
jle
or
jecxz
jl
nop
mov
xchg
das
dec
xor
or
mov
mov
fisttpl
dec
imulb
push
rcll
mov
and
mov
xor
jne
jne
test
add
ja
jg
shl
sub
sub
pushf
sub
outsl
xchg
fldenv
popf
movsb
or
adc
or
dec
int3
loopne
pop
jmp
mov
mov
lods
outsl
dec
out
lcall
lahf
pop
cmpl
into
push
rclb
mull
ss
arpl
sbb
lret
xchg
fidivl
aad
xchg
push
mov
mov
jecxz
push
sub
mov
fwait
jg
fistpl
pop
cmp
sbb
cmpsb
pop
test
jno
cmp
cs
jecxz
stos
mov
inc
sbb
xor
xchg
push
adc
fs
fdiv
rorb
js
lahf
out
nop
dec
cmp
mov
adc
aad
push
popf
arpl
push
imul
testb
mov
mov
aam
cmpsb
inc
push
pop
test
or
inc
call
das
jae
aaa
in
dec
xchg
xor
test
mov
js
fisubrl
push
repnz
in
shr
push
aam
out
sub
and
test
mov
mov
pop
cs
or
cmc
xchg
sbb
outsl
mulb
call
int3
js
dec
int3
inc
jb
pushf
mov
fists
push
adc
aas
pop
dec
jg
xor
dec
jecxz
mov
dec
dec
mov
out
je
adc
and
ja
out
cmpsl
cmp
enter
push
mov
popf
test
cmpsb
pop
cs
mov
movsl
js
or
lods
xor
loope
nop
sahf
pushl
jns
outsb
bound
sar
mov
fisubl
cwtl
mov
and
lahf
test
pop
fists
adc
mov
xchg
cld
xor
mov
mov
fstpl
das
jmp
adc
cmp
and
inc
aad
push
insl
sbb
cmp
std
shrb
add
dec
lret
fisubrl
dec
jl
and
mov
outsb
stos
insb
dec
outsb
push
inc
mov
jnp
inc
loope
fwait
movsb
jae
shll
sahf
xchg
sub
inc
sub
dec
lds
out
cmp
ret
cmp
outsl
xlat
jb
and
mov
jbe
test
sbb
mov
setne
cmp
loope
int
xchg
pop
xchg
add
fsubl
clc
jo
insl
mov
xor
lock
adc
fs
test
jp
cltd
cmp
add
not
jp
adc
jae
addb
in
push
sarl
add
sbbl
int
dec
je
pop
xor
cmp
jnp
or
repz
not
dec
fidivrs
jmp
insb
lahf
filds
dec
fisubs
cmp
pushf
push
sub
jno
xchg
xor
popa
cmp
sub
and
add
dec
dec
mov
lock
in
adc
out
sub
push
pop
adc
ret
scas
jno
xlat
enter
xchg
cwtl
cmp
test
shr
test
incl
and
pop
enter
push
movsb
mov
mov
loop
cmpsl
sarl
movsl
lret
out
stc
aam
in
cs
cmp
cltd
pop
roll
jg
dec
push
fidivrs
dec
lcall
adc
popf
call
xchg
shll
std
push
lret
lcall
xor
adc
sub
cmp
lods
pop
inc
pop
leave
or
mov
jmp
daa
or
dec
mov
fidivrs
jbe
div
negb
fwait
pusha
dec
inc
adc
xchg
lds
jmp
adc
call
inc
mov
hlt
push
cmp
addl
or
fs
sbb
push
dec
mov
insl
mov
pusha
push
mov
pop
mov
inc
mov
push
adc
mov
jmp
add
call
aaa
test
sbb
inc
stc
xchg
aaa
call
xor
add
cmp
add
call
lea
pushf
mov
jmp
das
mov
mov
int3
test
or
mov
repz
stos
jnp
sahf
xor
cmp
jmp
xor
mov
jae
pop
sahf
incl
lds
dec
stos
pop
ja
sbb
xor
xchg
adc
rclb
pop
mov
mov
dec
ret
insl
jo
jecxz
push
mov
push
into
add
nop
push
add
sbb
dec
in
or
lret
in
in
jmp
pop
insb
out
stc
dec
xchg
jb
insl
xor
push
inc
mov
add
mov
mov
in
and
mov
dec
js
or
mov
xor
jno
out
fwait
in
pop
addb
xor
loopne
test
push
xchg
mov
dec
repz
fistps
xchg
repnz
mov
dec
cmp
fs
fisttpl
inc
inc
jne
sahf
push
pop
sub
xlat
pop
mov
pop
xchg
jbe
imul
in
jmp
push
sub
inc
les
test
xchg
stc
enter
cld
sub
es
shll
fsubp
aad
aad
arpl
jnp
or
loop
inc
add
xor
pop
insl
mov
test
pop
cmc
fxch
fistpl
pop
jge
or
xor
mov
sbb
sub
stos
test
mov
sub
fs
push
dec
or
or
pop
roll
or
out
mov
pushf
mov
fcomps
lods
xor
or
cwtl
out
mov
aas
push
mov
fwait
xchg
push
dec
fwait
xchg
push
popf
jge
sbb
jb
movsl
xor
xchg
adc
push
push
dec
jmp
cmp
out
jle
rorb
aas
mov
inc
push
ss
jp
gs
es
faddl
addb
mov
cmpl
push
cmp
mov
clc
jns
sbb
mov
sti
es
ret
sub
leave
daa
xchg
in
push
dec
sbb
sbb
rcll
ljmp
aad
jp
add
fsubs
push
scas
nop
cmp
sub
adc
mov
dec
sub
popa
mov
pop
mov
xor
xchg
mov
mov
jo
dec
subl
adc
xchg
imul
or
gs
mov
inc
xor
pop
sbb
data16
mov
xchg
sub
sbb
jo
pushf
sub
pop
outsl
jg
adc
mov
mov
test
xor
test
adc
outsb
test
repnz
adc
stc
mov
repnz
movsb
repnz
pushw
cs
push
dec
xchg
dec
nop
xor
in
int3
mov
xorl
femms
push
mov
jecxz
push
mov
mov
and
out
fwait
imul
xor
cs
sub
xor
cmp
and
jl
ret
jl
scas
jecxz
jle
mov
jg
pushf
loopne
fsubrs
xor
cmp
and
arpl
dec
xor
jl
xor
dec
sbb
mov
xchg
rcll
mov
clc
and
out
aad
mov
mov
or
adc
pop
push
std
inc
dec
dec
ds
ja
pop
dec
xor
popf
mov
sbb
jbe
cmc
inc
cli
pop
push
loope
out
inc
rorb
pop
imul
inc
out
aam
loope
pop
pop
xchg
repz
imul
mov
push
xchg
fwait
cld
stc
and
pop
or
mov
push
jecxz
nop
mov
push
add
test
push
idivb
push
xchg
pop
mov
dec
pusha
mov
pop
inc
cmp
ret
pusha
fisubs
mov
sbb
and
xor
xchg
sub
add
rolb
sbb
pop
int3
aad
in
lcall
out
fwait
pop
pop
xchg
jg
sbbb
sub
push
in
aad
sbb
int3
mov
notl
ss
cli
add
xchg
frstor
bound
fisubrl
ficoml
dec
jl
cld
cmpl
fstps
mov
dec
fisttps
mov
mov
xchg
dec
dec
mov
jecxz
scas
mov
loopne
imul
pop
or
movsb
cmp
lahf
jae
das
pop
sub
pop
lcall
xchg
pusha
imul
mov
sub
shrb
rclb
pop
xchg
imul
and
jl
lahf
call
rolb
mov
iret
dec
sub
adc
xchg
iret
mov
xchg
sbb
push
push
repz
les
sub
mov
js
inc
cmp
jmp
or
adc
sub
std
inc
xchg
jns
pop
push
sbb
out
ljmp
addr16
sub
into
jb
inc
lcall
jecxz
int
mov
jb
inc
push
or
and
insl
or
push
call
adc
mov
and
add
push
mov
dec
mov
xchg
sarl
and
orb
cmpsb
leave
push
shlb
sbb
popf
in
mov
fwait
rcrb
imul
push
outsl
sub
lock
sub
xor
push
nop
sbb
add
ret
add
add
push
aaa
iret
pop
mov
dec
cmp
sub
stos
test
or
adc
push
push
stos
mov
popa
faddl
mov
xor
and
sbb
sbb
lret
aad
lret
dec
rcrl
and
imulb
xchg
lods
push
insb
xor
xchg
repnz
add
and
add
or
cmp
mov
xchg
aas
sbb
xor
sahf
sahf
xchg
lahf
mov
sub
adc
jo
imul
jns
xchg
mov
inc
cmp
sahf
je
sbb
cmp
lds
test
mov
and
or
fisubrs
popa
les
lahf
or
cltd
scas
xchg
scas
cmp
rcrb
rcll
mov
and
sub
push
pop
aas
mov
cld
pop
sub
add
xor
mov
sbb
pop
sub
popf
adc
out
sub
adc
outsb
add
sub
xchg
out
sbb
cwtl
and
adc
xchg
push
add
jmp
in
mov
pushf
mov
mov
cmp
mov
in
jb
mov
lock
or
xchg
cmp
fs
xor
push
add
or
lea
fwait
cmpsb
lea
out
jb
jns
movsl
or
adc
jg
xchg
fistpll
push
icebp
mov
ret
ret
xchg
jae
out
pop
jno
int3
jno
repz
fwait
addr16
sbb
jmp
inc
nop
imul
cltd
int3
data16
repz
shll
jo
fsts
mov
cmp
cld
and
mov
insb
cmp
fdivl
jecxz
cmp
ljmp
ljmp
and
mov
repz
pop
mov
push
sbb
pop
outsb
push
nop
xchg
ret
cmp
cmpsb
add
sub
cld
push
push
cmp
cmpb
loope
clc
push
hlt
arpl
imul
or
mov
pop
mov
push
out
bound
mov
mov
in
or
mov
in
xor
les
mov
ds
push
jmp
xchg
popa
lds
jb
imul
in
movsw
lea
sub
dec
test
fidivrl
out
jnp
addr16
jnp
pop
shll
mov
mov
push
xchg
push
pop
dec
or
or
jp
xchg
jno
fnstenv
cld
repz
outsb
out
imull
testl
negl
cmp
add
fisubl
or
hlt
xchg
fnstsw
mov
loop
push
out
xchg
xchg
fldcw
inc
fldenv
inc
je
daa
add
push
mov
jae
lods
and
jg
add
aam
cs
hlt
in
data16
ss
jmp
popa
jmp
ret
sahf
repnz
xchg
inc
or
mov
pop
xor
test
mov
or
aas
int
or
cmp
movb
xor
aaa
push
sbbl
and
loop
pop
sbbb
fimull
and
hlt
adc
stos
cmpsl
cltd
pop
lea
xchg
ljmp
mov
in
mov
lahf
mov
lds
sub
rorb
jle
and
rcl
mov
test
push
lret
pop
xchg
push
repz
mov
jae
lret
shrb
rcrl
in
or
data16
sub
sub
or
insb
cmp
mov
mov
stos
mov
andb
push
xor
pop
mov
push
cmp
pushl
push
xorb
mov
pop
mov
push
ror
shrb
dec
bound
mov
mov
lcall
in
bound
pop
aas
fs
movsb
pop
out
test
out
out
lock
adc
jae
and
xchg
js
mov
pushf
pop
hlt
push
pop
xchg
mov
xor
dec
inc
fwait
mov
mov
or
dec
das
mov
stos
jle
mov
aaa
mov
aaa
icebp
psrad
in
adc
dec
pop
out
mov
stos
push
imul
icebp
fisubrl
push
ljmp
sti
jae
mov
fstpl
xor
mov
add
dec
mov
pop
xchg
fwait
ss
push
mov
jg
lods
mov
ljmp
push
popa
push
rorb
sub
sbb
push
mov
add
sbb
mov
pop
add
ja
test
mov
fdiv
xchg
leave
mov
sub
out
ljmp
repnz
cmp
mov
xchg
imul
icebp
xor
rorb
inc
mov
loop
ss
mov
or
jmp
xchg
or
jo
fsub
push
mov
cmpsl
cmc
sbb
xlat
pop
aad
fsubr
xorb
mov
fidivs
sbb
push
jns
xor
in
mov
sbb
xor
dec
insb
push
xchg
fsubrp
xchg
adc
sbb
aaa
or
mov
movsb
add
dec
xchg
imul
xchg
in
jecxz
mov
imulb
pop
sbb
mov
aas
daa
xchg
aas
lea
xor
dec
pusha
ds
inc
xchg
add
mov
mov
pop
push
cmp
xor
pop
pop
cmp
loop
fsts
dec
jp
outsl
and
fisubrs
rcrb
xor
test
scas
and
push
adc
xor
rorl
and
sub
push
inc
and
lcall
mov
das
popl
xor
shrb
jp
int3
inc
sti
cmpsb
inc
repnz
adc
mov
roll
jl
jno
out
pusha
cmp
pop
call
push
lret
or
fcmovnu
cltd
lods
sbb
push
mov
inc
push
test
push
aaa
xor
jne
out
sub
xor
loopne
scas
in
mov
inc
insb
push
cmp
push
pusha
and
test
push
push
xor
icebp
imul
push
jnp
test
xor
arpl
inc
xchg
mov
xchg
mov
cmp
ljmp
call
sbb
arpl
sahf
and
sub
stc
and
fiadds
pop
iret
ds
pop
stos
cltd
imul
popf
lock
repnz
ja
hlt
das
xor
push
cmp
add
and
fs
sub
mov
data16
dec
push
popa
shlb
inc
jbe
imul
repz
not
pop
es
cmpsl
loopne
adc
in
add
dec
icebp
mov
pop
inc
mov
add
cmp
dec
pop
sbb
ss
out
in
imulb
testl
add
out
pusha
cmp
pop
out
cld
adc
pop
pop
cmp
jmp
in
imul
jb
ret
push
movsb
popa
push
inc
mov
or
pop
and
popf
sub
xchg
mov
aad
mov
adc
addr16
and
push
loop
in
sbb
lds
pop
test
and
inc
pop
mov
rorb
mov
sub
sbb
xchg
jns
gs
push
jl
mov
adc
xor
cmp
pop
inc
jl
jmp
mov
pop
cmp
out
adc
jle
mov
enter
sub
sbb
hlt
mov
iret
xchg
neg
addr16
iret
mov
cmp
push
leave
sub
into
mov
mov
stc
scas
push
in
sti
push
or
insb
lcallw
mov
mov
inc
jnp
xchg
push
pop
mov
cwtl
cmp
dec
repz
add
incl
push
es
jno
jb
jnp
loope
orb
aas
sbb
and
or
xchg
cmp
icebp
mov
in
inc
lock
dec
mov
mov
cwtl
xchg
sbb
js
orl
jne
or
gs
xor
stos
mov
outsl
shrb
push
popf
pushf
mov
jecxz
loop
sti
xchg
jne
jae
mov
inc
pop
movsl
fistl
pop
aaa
pusha
xor
mov
cmp
jge
in
cwtl
dec
push
dec
out
mov
mov
inc
mov
fwait
stos
cmpsl
pop
subl
pop
cmp
adc
jae
faddp
pop
testb
jp
xor
sbb
dec
pop
mov
cli
cmpsb
jp
push
dec
mov
pop
aaa
adc
xlat
sahf
dec
inc
inc
leave
repnz
mov
jnp
jecxz
and
mov
mov
or
sub
sbb
sub
idivl
movsl
dec
jne
inc
pop
xchg
std
push
xchg
lods
sti
cld
adc
imull
aad
sub
fistps
and
push
arpl
jnp
dec
in
roll
fbld
ds
xor
sbb
add
das
or
mov
cmpsb
mov
jo
dec
cmp
cs
movsw
lret
xchg
je
fstps
in
fwait
stc
mov
pop
sub
popa
inc
inc
add
pushf
int
sbb
add
add
aaa
mov
fsubl
int
xor
mov
les
hlt
jg
aaa
js
ret
fs
sarb
and
nop
in
sar
nop
rclb
lahf
or
xor
sbb
cmp
cmp
out
cmp
inc
mov
mov
jmp
push
mov
into
pushf
jno
inc
inc
cmp
sub
clc
inc
rorl
sti
push
negb
or
pop
fnstcw
sub
outsb
or
push
mov
mov
sar
adc
loope
jne
mov
add
mov
scas
in
jnp
sbb
lret
cmpsb
add
imul
scas
icebp
mov
mull
cmp
xor
mov
loop
push
mov
cmp
test
out
adc
or
je
test
jne
ds
decb
enter
mov
adc
nop
xchg
incb
adc
cmp
outsl
fisubs
pop
int
shll
inc
jmp
inc
idivl
rcr
out
popl
imul
or
lret
out
lahf
mov
loope
pop
pop
es
mov
cs
shlb
and
inc
out
mov
ja
sub
mov
adcl
xchg
pop
shll
outsl
loope
cmp
mov
mov
inc
clc
add
pop
bound
div
xor
int
cmpsb
icebp
imul
cli
bound
popl
jb
mov
popf
insb
stc
sbb
pop
pop
jmp
push
or
or
cltd
cwtl
mov
xor
scas
lock
cwtl
mov
push
enter
add
addr16
imul
dec
mov
lods
sub
mov
insl
push
add
pop
add
cmp
in
test
dec
push
cltd
xor
stos
adc
inc
iret
icebp
mov
jbe
pop
sbb
outsl
mov
ja
jp
jne
jecxz
sub
sti
cmp
pop
pushf
dec
hlt
mov
ret
out
je
sbb
adc
dec
int3
fcoml
xorb
das
add
pop
ret
add
divl
adc
and
or
outsl
outsl
in
jo
test
jns
out
jnp
pop
xchg
push
add
mov
adc
inc
cmp
fadds
jns
lds
mov
or
pop
mov
pusha
mov
mov
faddp
out
in
push
adc
mov
out
out
push
push
or
stos
addr16
lock
leave
cmp
loopne
aam
or
pop
mov
outsl
or
gs
inc
addl
cmp
aam
dec
sbb
push
jb
aaa
push
pushf
mulb
ror
enter
cs
xor
mov
test
out
cmpsl
pop
sbbb
pop
aam
xchg
xchg
cld
pop
push
jae
sarl
mov
sub
and
mov
xchg
and
adc
cli
arpl
ret
add
mov
jb
push
mov
inc
rcll
lahf
rcl
int
sub
lock
shlb
hlt
sub
addb
js
adc
mov
mov
sbb
and
das
mov
push
sub
xchg
or
test
inc
and
adc
add
pop
cwtl
arpl
sarb
mov
pushf
icebp
aam
jns
call
mov
loope
sarb
cmp
and
or
iret
sbb
inc
sub
aad
dec
iret
mov
push
jge
pop
cwtl
ds
and
shlb
xor
subb
mov
insl
or
test
test
mov
or
outsl
inc
jecxz
js
js
add
pop
std
std
jne
add
ds
mov
dec
mov
fucomip
jne
mov
pop
sbb
pushf
dec
pop
les
adc
dec
in
mov
divb
in
daa
rclb
mov
add
sub
je
jns
cld
push
clc
int3
and
add
add
dec
lea
das
sub
dec
jnp
test
add
mov
out
and
mov
sbb
lods
ucomiss
adc
aas
xchg
lret
out
adc
jmp
xchg
incl
in
jle
je
add
stos
out
pop
lahf
pop
mov
je
loop
xor
mov
jo
or
cmp
stos
jle
mov
lds
bound
ss
pop
cmp
test
pop
mov
jge
mov
mov
xchg
pop
and
jnp
push
jbe
fmuls
and
jb
daa
aaa
mov
loope
adc
cld
rol
movsl
pop
int3
data16
add
sbb
repz
sti
ss
xor
pop
loop
fdivrs
insb
fsubrs
mov
lahf
mov
lods
icebp
push
ds
push
roll
imul
and
or
scas
xchg
sbb
popf
inc
xchg
push
pop
mov
cmp
into
or
pop
lcall
fnstcw
xchg
pop
fmul
lret
xor
std
and
in
sbb
stc
cmpsb
into
jne
out
rorl
leave
lds
cmp
fstps
jg
cld
aas
xchg
jo
iret
addb
inc
and
xor
mov
adc
jns
fwait
icebp
cmpsb
mov
aaa
lahf
movl
jecxz
icebp
dec
inc
jne
icebp
fbld
mov
pop
sahf
jecxz
outsb
mov
push
or
int
dec
mov
add
push
outsl
lret
cmp
imul
push
add
mov
popa
aaa
or
fstps
push
fcomp
cltd
add
and
iret
stos
cmpsb
add
test
inc
jge
popf
cmpsl
aaa
push
inc
sub
jmp
inc
inc
push
add
iret
ljmp
add
cmp
mov
jg
jmp
pop
add
hlt
mov
pusha
or
je
push
popa
push
mov
icebp
ljmp
xor
lods
jp
adc
repz
mov
fisttps
adc
jle
out
push
sbb
cmpsl
sbb
icebp
xchg
mov
and
mov
jp
je
imul
ja
imul
sub
mov
popf
or
js
add
test
cmpsb
inc
lret
jmp
xchg
mov
ss
lock
aad
or
xchg
aas
nop
cmp
mov
xchg
sub
out
out
xor
ret
and
add
lea
dec
xor
stc
cld
test
les
add
add
mov
inc
or
gs
mov
cmp
adc
push
xchg
pop
imul
add
or
dec
dec
pop
loope
lcall
stos
roll
adc
adc
stos
xchg
adc
mov
lods
scas
cmpsb
or
adc
xchg
test
int
cwtl
mov
dec
fdivr
arpl
loope
jnp
int3
cmp
dec
xor
cmp
pop
xchg
in
mov
les
fs
incb
cs
push
ljmp
inc
rcll
lret
cli
dec
sbb
mov
push
pushf
or
mov
mov
popa
inc
pop
and
loope
rcll
dec
mov
cmp
pop
push
sbb
cmp
les
cmpsl
fisubrs
jnp
inc
addr16
ljmp
lds
sub
dec
ret
fwait
mov
inc
mov
scas
sub
gs
cmp
je
add
add
in
sub
repnz
stos
cmpsb
jnp
movsl
iret
pop
icebp
push
lea
push
mov
add
test
shrb
jg
dec
jne
inc
icebp
jne
mov
adc
pop
gs
jecxz
rcrb
adc
push
cmp
or
out
mov
sub
and
shl
cmp
push
pop
out
popa
scas
imul
and
fwait
mov
inc
rorb
push
mov
pop
cmp
sub
loop
pop
pop
ss
sub
mov
mov
jg
sti
repnz
add
je
inc
flds
lcall
push
fsub
xor
daa
jmp
jp
cmc
push
adc
xchg
inc
shrb
inc
rcll
adc
out
pop
cwtl
mov
icebp
add
inc
ret
hlt
dec
adc
loope
fldt
adc
add
inc
je
dec
lods
das
push
add
mov
mov
adc
in
push
pop
jns
jecxz
test
inc
loopne
pop
push
jp
mov
sub
repnz
cmc
cmp
or
out
inc
dec
fdivrl
daa
daa
inc
stos
xchg
xor
sbb
push
sahf
aam
mov
lock
lcall
adc
adc
popf
lock
mov
lock
sub
fsubr
push
mov
push
and
jge
dec
aas
push
push
std
lret
fstps
lea
dec
mov
mov
xchg
insl
les
or
sbb
lods
pop
xchg
xor
jp
aad
adc
adc
fwait
dec
dec
rcrl
lea
cmpsb
mov
cwtl
push
xor
push
test
popa
fidivl
test
sub
out
jp
leave
mov
jo
repz
add
jge
sbbl
mov
mov
inc
and
out
sub
ret
or
je
push
movsl
cmpsl
sbb
mov
loop
lock
pop
xor
adc
cli
mov
das
pushf
fstpl
repz
dec
adc
pop
dec
sbb
lret
add
imul
pop
xchg
in
ds
std
mov
fsubl
mov
or
push
into
fisubrl
dec
mov
insb
into
push
push
pop
outsl
aam
push
or
insb
pusha
jns
scas
inc
mov
stos
xorl
cmp
mov
pop
pop
inc
mov
xchg
cmp
int
pop
data16
outsb
jle
vshufpd
add
xchg
in
xchg
test
push
aad
dec
xchg
inc
push
stos
rsqrtps
push
push
cltd
inc
mov
movsl
mov
lret
arpl
jnp
inc
movsl
sbbb
call
mov
xchg
xchg
int3
jge
ljmp
inc
push
mov
xchg
repnz
cmpsb
lds
pop
sbb
nop
out
dec
mov
sub
cld
xchg
fstpl
xor
out
add
cmp
inc
les
in
ss
test
mov
lock
jnp
sub
cltd
xchg
int
popf
mov
data16
ret
cltd
push
mov
loop
adc
inc
push
clc
xchg
repz
test
mov
push
scas
lahf
lcall
lahf
out
cmp
sbb
cmpb
data16
pop
mov
cmpsl
mov
mov
pop
xor
xchg
xchg
cmpsb
mov
xchg
rcrl
mov
lock
pop
lahf
stc
xchg
mov
ds
cmp
fisttpll
xchg
mov
xchg
and
inc
vfrczsd
mov
cmp
loopw
xchg
nop
lods
pop
xchg
jmp
cmp
inc
sbbb
inc
add
rclb
jnp
fwait
xchg
push
stc
adc
test
insb
cltd
dec
out
adc
sub
mov
int
repz
xchg
int3
jbe
shrd
sub
lret
test
call
mov
lret
cmp
ljmp
daa
scas
mov
test
jl
shrl
jns
popf
ficompl
pop
xchg
in
out
jae
jle
mov
xchg
test
or
cwtl
add
loopne
sub
ret
adc
in
in
cmp
jns
push
dec
xchg
fwait
mov
ja
adcl
fucomi
rcll
mov
and
in
mov
mov
clc
jmp
cmp
jno
xor
mov
inc
adc
in
xor
push
cmc
dec
clc
mov
icebp
stos
cwtl
incl
dec
pop
xor
push
jbe
or
sbb
jmp
int
push
or
or
sub
push
fidivl
inc
mulb
pop
xor
in
imul
insl
mov
cmc
dec
data16
mov
push
lea
stos
outsl
pop
inc
mov
ret
jb
enter
lahf
dec
sbb
jns
mov
mov
ret
int3
dec
cmc
js
ds
lret
fnsave
xor
imul
nop
shl
repnz
nop
jmp
jno
imull
or
outsb
loop
pop
mov
cmpsl
push
xchg
xchg
mov
in
aas
xchg
hlt
fsubrl
orps
lea
rcr
cmp
mov
sub
or
es
adc
iret
ljmp
pop
aaa
pop
jge
js
popf
enter
lret
mov
lret
or
cmp
shlb
cmp
xchg
mov
pop
out
pop
and
sahf
test
fimull
arpl
jle
lcall
insl
rcr
jbe
shlb
in
jns,pn
and
add
cld
cmpsb
push
cmp
jp
push
das
add
mov
xchg
ret
call
push
mov
add
enter
cli
and
in
or
sub
std
cmpsb
jo
rorb
call
or
fldt
add
cli
jp
pop
mov
or
leave
mov
in
sbb
gs
js
mov
pop
cmpsl
sub
repnz
mov
push
mov
push
inc
jmp
push
push
jp
mov
xchg
xor
subl
push
dec
loopne
call
push
lret
out
cmp
xor
popf
stos
fisttpll
push
test
mov
in
call
sbb
jno
fmull
adc
or
stos
es
loopne
test
mov
pop
jbe
bound
cmc
jecxz
inc
sub
and
imul
xor
nop
push
jno,pt
sbb
dec
repnz
mov
and
mov
jl
jmp
rcl
or
mov
mov
ds
xor
fldl
xorb
adc
xchg
movsb
rorl
pmuludq
adc
add
adc
outsb
mov
nop
push
fmul
dec
sbbb
mov
dec
or
ret
mov
ret
xor
mov
xchg
sub
into
sbb
data16
repz
push
push
xor
pop
mov
xor
mov
mov
das
lock
adc
test
cltd
adc
inc
and
cwtl
subb
cmp
jb
out
mov
inc
or
inc
or
xlat
sbb
dec
jl
adc
mov
xchg
rorb
cmp
call
test
push
lds
adc
mov
xchg
into
pop
aam
lcall
mov
cmp
dec
insl
aam
lret
pushf
fisttps
movsb
xchg
out
mov
jb
outsb
or
test
or
pop
hlt
lret
cmp
out
iret
in
pop
adc
clc
jle
jl
inc
jo
sbb
or
fldl
test
xchg
fstpl
clc
shlb
shl
xor
dec
push
inc
mov
sbb
mov
andb
push
mov
ja
lock
inc
push
or
fstp
int
jnp
add
insb
and
aas
lea
or
fs
cmp
lret
pop
cwtl
mov
rorl
ja
jno
xchg
das
xchg
add
sub
lds
cmp
push
mov
mov
mov
ficoml
push
push
jge
mov
push
test
inc
adc
aad
js
popa
push
or
adc
sahf
inc
lods
insb
in
aaa
in
cmp
popa
imul
mov
mov
imul
in
rcrb
lret
adc
sbb
xlat
mov
dec
add
mov
adc
out
rcr
add
ret
in
lcall
aad
mov
scas
daa
adc
jmp
jmp
inc
repz
push
mov
jmp
mov
and
or
ss
ja
push
mov
push
mov
out
pushf
xor
pop
jmp
das
jmp
adc
test
pop
rorl
cmpsb
sbb
repnz
mov
incb
in
adc
lcall
out
imul
or
mov
sbb
ja
in
leave
sbb
and
dec
dec
xor
adc
push
mov
lds
mov
pop
xchg
pop
aad
adc
add
add
pushf
insl
in
mov
mov
clc
mov
or
xchg
scas
rorb
outsl
mov
and
nop
jbe
add
mov
pop
fdivl
pop
aaa
popa
subl
je
xor
pop
or
adc
cmpsb
cld
or
mov
dec
push
fsubr
subl
sub
cmp
jp
stos
and
enter
sub
nop
dec
into
in
jb
push
pop
sti
mov
push
dec
mov
sub
xor
xchg
pop
lea
cli
fwait
jae
and
and
inc
lods
push
mov
cwtl
div
jmp
loopne
mov
pop
mov
call
mov
filds
pop
add
pop
gs
push
sbb
jo
xor
dec
fdivrl
inc
rclb
pusha
mov
sub
lods
lock
insl
mov
sti
pop
mov
sbb
xor
pushf
add
out
or
cmp
aaa
lds
mov
push
jae
add
out
int
push
in
lock
es
push
inc
jge
mov
jnp
stos
jecxz
push
inc
sti
imul
outsl
les
cmp
xchg
addr16
movsb
cwtl
add
scas
pop
push
fisttpl
test
je
xor
aaa
jno
stc
and
orb
xor
aad
adc
stos
cmc
cwtl
pop
rol
je
jecxz
push
lahf
ss
leave
mov
dec
fldcw
addr16
push
push
cmp
clc
sub
adc
outsb
sbb
repz
jae
shlb
mov
lret
aaa
sub
mov
out
xchg
ds
popf
lret
push
fcmovne
mov
xor
adc
dec
push
loopne
push
out
push
inc
sbb
daa
lahf
cs
std
push
xchg
xchg
pop
mov
or
pop
cwtl
adc
and
sub
mov
xlat
jp
mov
xchg
adc
mov
out
push
xchg
call
imull
enter
lea
iret
inc
imul
bnd
dec
and
mov
pop
mov
xchg
mov
inc
pop
out
mov
add
push
mov
shlb
mov
aad
xchg
mov
mov
xor
movsb
mov
pop
sbb
sub
push
pop
xor
jns
inc
dec
fs
sahf
sub
or
mov
dec
imul
ljmp
sbb
cwtl
cli
lahf
inc
jle
xor
mov
cmpsl
add
inc
gs
jecxz
push
aas
pop
divl
cmp
iret
fs
lods
cmc
mov
cli
ret
dec
push
add
orb
ret
mov
dec
xor
loope
adc
negb
pop
sub
push
mov
sub
aad
subl
addl
cmp
fiaddl
pop
inc
sub
adc
pop
lods
mov
mov
cmp
scas
and
fistl
xchg
xchg
push
mov
dec
add
pop
outsb
inc
out
lods
leave
xchg
add
pop
imul
cmp
iret
test
insb
rcr
pop
lods
jle
xor
mov
pop
sbb
sub
pop
xchg
jns
dec
fistpll
dec
aas
add
cmp
lret
mov
or
popa
pushf
lcall
orl
inc
mov
enter
jbe
lods
push
fstpt
pop
sub
xchg
nop
pusha
xchg
and
repz
or
lea
pop
jnp
cwtl
out
jmp
fadd
mov
movsl
pop
xchg
les
iret
push
xchg
imul
cmp
push
mov
or
inc
shl
leave
mov
sub
fisttps
jb
pop
ss
scas
push
sahf
hlt
imul
inc
fiaddl
jl
adc
jns
ljmp
sbb
hlt
imul
jmp
and
stos
ret
lods
xchg
cmc
sub
roll
pop
rdmsr
jl
stos
test
mov
movsb
xchg
stos
add
mov
nop
mov
das
outsl
inc
lods
mov
fisubrs
mov
or
repz
jg
push
fildl
jle
fdivl
sub
mov
cltd
out
fists
xor
jns
pop
out
inc
adc
icebp
notb
int3
gs
mov
lock
in
inc
push
outsb
push
sbb
jb
jo
mov
insl
push
aaa
and
out
pop
pop
push
push
mov
push
jl
mov
sbb
out
movsb
jmp
and
jg
and
cmp
cwtl
inc
cmpsb
sub
cmpb
test
pop
rcrb
ss
adc
sbb
pop
fstpl
xchg
rolb
pop
or
mov
mov
lds
inc
fldl
dec
sub
mov
int3
xor
mov
jmp
adc
dec
mov
mov
jmp
pop
inc
outsb
es
mov
test
add
fninit
add
dec
clc
icebp
xchg
sub
cs
push
pop
sbb
lcall
scas
jns
rcr
iret
hlt
fcoms
xor
addr16
mov
jo
loopne
dec
testb
imul
dec
pop
cmpl
or
mov
test
loope
jp
xor
sub
ja
stos
adc
lahf
inc
pop
adc
mov
fisttpll
jp
cmp
call
and
jg
pushf
sub
fmull
jno
pop
adc
cmpl
lods
aam
xor
mov
fists
mov
xor
pushf
pop
dec
adc
mov
loop
imul
leave
lcall
cmpsb
sarl
mov
iret
bound
mov
adc
dec
jne
cltd
in
scas
pop
mull
pop
sub
les
cmp
gs
jb
inc
or
outsl
cmp
jne
into
mov
and
push
and
je
inc
mov
neg
push
movsl
pop
jae
scas
pop
mov
scas
dec
adc
insb
ja
pop
mov
xchg
sbb
cltd
cmc
cmpsl
data16
xchg
decl
add
sbbl
push
pop
xchg
inc
mov
sub
scas
sub
xchg
mov
xchg
mov
pop
fcmovu
adc
mov
jbe
pop
jbe
sub
push
jp
bound
ss
aas
jl
sbb
sbb
hlt
inc
movsb
ljmp
mov
xor
lea
mov
aas
lea
repz
sti
pop
in
mov
test
js
pop
add
das
cmp
push
jmp
cmc
push
fwait
lds
ss
outsl
fsts
xchg
or
mov
mov
or
test
xchg
pop
test
and
mov
mov
test
aad
sub
xchg
test
jp
mov
jno
pushf
fwait
push
push
in
mov
mov
test
divl
cmp
dec
xchg
sbb
loop
gs
leave
adc
loopne
and
jp
scas
aam
xchg
pop
ret
outsb
in
in
jle
not
xchg
loope
push
xchg
mov
fmuls
mov
pop
adc
xlat
fsubl
les
ret
dec
mov
leave
repz
lret
popw
js
jmp
add
outsl
aaa
shll
add
jmp
dec
cltd
lds
jg
aas
fstl
out
jmp
fisubs
add
mov
sbb
nop
outsb
push
cmp
int
mov
mov
mov
push
xlat
rcrb
lahf
mov
xchg
and
sbb
popa
loop
cltd
cs
adc
adc
es
gs
ja
seto
ret
mov
sbb
mov
psubusw
sbb
fmuls
test
cmp
je
iret
sbb
in
stos
loop
sub
mov
in
or
dec
pop
mov
addb
gs
psrld
icebp
mov
jns
test
xor
loopne
sub
xchg
xor
fildl
jg
jb
mov
jne
hlt
xchg
mov
je
lods
arpl
jge
adc
jle
pop
jmp
popf
ja
adc
sub
mul
sub
inc
cld
jnp
cltd
jecxz
or
fadds
lock
mov
adc
std
imul
jmp
cld
jns
repnz
xor
mov
jmp
mov
jg
or
test
lock
ja
mov
std
cs
out
push
rcrb
repnz
inc
cli
dec
les
lock
push
rorb
js
sub
dec
std
sub
je
mov
jns
dec
mov
xchg
add
pop
or
pop
ds
and
sub
out
mov
enter
xchg
sub
mov
movsb
push
lret
mov
lock
xor
fcmovnu
or
jmp
insb
mov
out
dec
js
lock
mov
test
cli
cmpsl
inc
sub
jno
inc
jle
xor
test
jne
cmpsb
adc
aam
push
push
jno
and
mov
out
pop
cmp
in
push
add
imul
sbb
test
inc
xor
lods
or
ja
hlt
in
mov
jge
or
mov
push
xor
pop
pusha
jnp
ljmp
push
push
out
inc
sarb
inc
lods
mov
jne
jb
ds
or
into
fcmovbe
mov
repz
lds
jno
loop
popa
rclb
ret
lret
inc
test
dec
call
mov
dec
and
aad
mov
jle
mov
imul
jecxz
cmpsb
jne
xor
cmp
lret
out
fldt
xchg
je
scas
stos
out
dec
out
je
cmpsl
sub
sub
in
adc
sub
xchg
mov
sub
adc
mov
sarb
adc
daa
outsl
sbb
sti
inc
mov
stc
pop
adc
std
cltd
xor
sub
and
inc
mov
inc
gs
int
mov
stc
daa
rcrb
ret
lahf
push
sahf
pop
out
lcall
leave
add
mov
adc
push
add
sahf
jne
xlat
rcrl
jge
pusha
sti
in
sbb
test
mov
fstpl
add
sub
cmpsb
mov
mov
lock
movsl
xchg
inc
ss
xor
inc
adc
add
jb
mov
scas
jmp
pop
adc
bound
pop
ret
mov
and
jg
fmuls
int3
sahf
pop
outsb
sbb
clc
pop
push
and
loope
movsb
jnp
sbb
adc
fisubs
mov
adcb
adc
cmpsl
add
aaa
mov
pop
dec
stos
shll
inc
and
pop
imul
imul
cld
je
inc
movsl
sbb
inc
ret
xchg
or
cwtl
xchg
inc
adc
or
cmp
outsb
dec
and
sbb
cmp
push
jne
push
ss
loopne
fistl
fsubrp
pop
dec
or
inc
mov
cmp
out
or
into
out
and
and
adc
stc
scas
add
mov
push
rcll
jns
jle
aaa
outsb
mov
aam
jp
jnp
popa
test
stc
push
fisubrs
xor
nop
sub
popf
pop
mov
aaa
push
jnp
cmpsb
pop
xlat
and
jle
mov
xor
scas
fs
mov
inc
pop
or
jmp
xor
addr16
xchg
lods
mov
mov
stos
imull
lret
xor
gs
adc
mulb
push
test
es
std
xchg
insl
ljmp
and
mov
sbb
ja
bswap
ret
mov
in
rcr
push
aas
stos
or
xor
push
inc
add
push
shl
loop
hlt
push
mov
pop
fldl
sub
jmp
sbb
adcl
loope
adc
push
or
sub
scas
js
insl
iret
xor
int3
mov
fwait
scas
mov
mov
xor
add
lock
sarl
mov
xchg
ret
stc
push
sub
sub
fucomi
xor
sub
mov
repz
cmp
call
inc
lahf
pusha
scas
xchg
jg
sbb
push
bound
pop
adc
std
daa
push
add
push
movsl
inc
sbb
mov
jne
or
ficompl
adc
ret
xorb
pushf
pushf
fwait
and
push
test
fs
test
fsubrs
sbb
jno
add
and
insb
dec
xor
lahf
mov
or
inc
stos
mov
mov
xor
xor
xor
iret
xchg
xchg
lahf
in
adc
xor
jno
adc
jg
je
sub
popf
out
adc
int
xor
cmp
push
je
bound
lods
dec
test
jne
jmp
fcomip
aaa
nop
lea
sbbb
inc
push
fstpt
pop
dec
cmp
jp
lock
dec
add
xchg
and
popf
divl
jl
push
sub
das
dec
rcrb
or
jp
pushf
fwait
sub
fistl
mov
test
icebp
out
xchg
or
mov
lea
out
pop
jecxz
lret
mov
jnp
xor
addr16
xchg
out
push
ss
and
aas
cmp
les
pushf
jle
adcl
call
dec
dec
xchg
or
sbb
test
mov
pop
push
and
scas
push
mov
push
add
push
call
adc
daa
lcall
dec
sub
cmpsl
xor
cs
and
lds
imul
mov
shll
daa
xchg
xchg
enter
push
pop
cltd
pushf
icebp
sbb
jecxz
sub
xchg
rorb
gs
mov
sub
int3
cmpsb
repz
jmp
inc
aas
inc
pop
cmc
mov
mov
push
in
mov
dec
mov
pop
out
jge
arpl
sub
repnz
or
addr16
adc
out
xor
call
mov
fmulp
pop
jmp
addr16
sbb
jb
add
insl
shr
pop
cmp
ret
cmc
add
push
out
leave
xchg
dec
dec
push
leave
mov
jbe
sti
xchg
and
push
gs
bound
inc
ja
outsb
adcb
iret
rcll
push
cs
lret
into
scas
sarl
sti
mov
pop
into
popf
mov
das
divb
xchg
cmp
rcrl
icebp
scas
sahf
xchg
pop
mov
cmp
push
fwait
inc
fidivl
rolb
xchg
daa
push
mov
xchg
cmpsl
leave
fistps
pop
jne
and
or
mov
sub
ljmp
push
iret
test
pop
lcall
xor
ss
mov
mov
mov
pop
lods
push
data16
cmpsl
lret
ja
xor
cmp
push
adc
dec
jo
cmpsl
pusha
push
or
pop
push
notl
sahf
adc
sti
push
cltd
lea
es
cs
idivb
loop
ret
lea
bound
mov
cmpsb
xor
out
add
shlb
dec
pop
or
sub
int
mov
sbb
rol
and
mov
mov
xchg
cmpsl
enter
jp
adc
popa
faddl
sbbb
pop
addb
rorl
fldcw
or
push
es
mov
testb
sub
and
cmp
or
fiadds
mov
fwait
and
data16
dec
jl
lods
mov
push
mov
adc
lds
mov
scas
fiadds
mov
lea
nop
push
fadds
xor
je
mov
fwait
jle
pop
lret
enter
inc
ffree
imul
rolb
das
js
add
inc
inc
rcrl
xlat
test
cld
ret
inc
mov
inc
cli
sbb
jae
dec
jp
rolb
push
or
mov
jo
daa
lahf
leave
cmp
jno
enter
imul
sub
lods
repnz
adc
xchg
jle
inc
xchg
popf
daa
sti
movsl
mov
mov
adcl
mov
jle
jl
adc
jecxz
ja
push
sub
sub
scas
lahf
stos
sbb
or
sub
leave
sbb
adc
cmc
mov
test
cmpsb
mov
jmp
xlat
pop
incb
out
sub
testl
adcl
lahf
mov
add
fs
repnz
cmp
ds
out
js
dec
sbb
mov
int3
in
jp
orb
inc
and
out
jp
cmp
adcl
and
xchg
add
sbb
xor
rcrb
pusha
ret
add
movsl
fwait
je
repnz
loopne
int
iret
ss
stos
or
xchg
in
xlat
add
orb
dec
fdivl
clc
cmpsb
lcall
xchg
jle
clc
lahf
pop
rcl
adc
mov
cmp
outsl
mov
leave
addr16
adc
mov
sub
jb
mov
cmp
add
das
insb
test
int
call
mov
cmp
or
gs
pop
xor
mov
cmp
roll
and
je
mov
xchg
pmullw
push
mov
push
sbb
repz
sub
or
dec
lahf
xorb
test
lret
adc
loopew
pop
lods
fists
add
sbb
bnd
test
jecxz
dec
imul
cmp
test
sub
repnz
xchg
cmp
xchg
in
sub
popf
xor
push
test
icebp
xchg
ret
pop
rol
je
mov
fidivrl
aas
popa
out
mov
ss
loope
inc
in
lea
push
mov
jg
dec
insl
mov
dec
repz
xchg
lcall
mul
push
jle
insb
inc
imul
lods
and
xorb
xlat
adc
add
ret
sti
aaa
xor
in
mov
xchg
in
rclb
sub
or
pop
dec
fiadds
pop
cli
aad
test
std
jnp
jecxz
xchg
cmp
pop
call
scas
inc
adc
fistpl
and
imul
aam
dec
adc
lahf
mov
dec
cld
pop
test
mov
sub
push
rcrb
addb
popa
stos
push
fdivr
dec
outsl
mov
insb
mov
sub
lea
adc
idivb
pop
sbb
push
cmpsl
adc
ja
cmp
pop
cwtl
sub
cmp
jnp
xchg
mov
inc
pop
orb
or
call
cmp
or
outsl
cltd
pop
or
pop
xchg
mov
push
mov
cmp
mov
loopne
pushl
xchg
jbe
shll
adc
testb
pop
lods
and
xlat
cmp
dec
fldenv
and
pushl
insb
sbb
out
add
in
fildll
dec
test
pop
jns
jns
lcall
or
out
pop
aas
xor
dec
cmp
ret
test
rcrb
sub
stos
fidivrl
outsl
add
add
scas
push
inc
ret
rcrl
mov
push
mov
es
insb
adc
in
daa
pushf
inc
gs
xor
int
push
cli
shll
cli
mov
rcll
jmp
bound
cmp
mov
repz
jl
out
ljmp
js
jb
shll
adc
fsubrl
xchg
push
or
faddl
fnsave
jns
inc
add
movsb
xor
cmp
jmp
cmc
cmc
adc
sti
das
mov
scas
xchg
dec
cltd
mov
cmp
fisttpl
scas
movsl
lret
mov
or
repz
pop
fidivs
push
mov
lods
dec
cld
sti
or
in
adc
cmp
repz
jl
call
int
sbb
out
std
push
cmpsb
int
pop
int
jle
outsb
lds
mov
jle
nop
test
dec
divl
sti
lea
fcoms
adc
filds
add
cmp
roll
mov
in
pop
xlat
jae
inc
rcrl
or
add
inc
sbbb
jecxz
roll
pop
lods
mov
mov
fs
inc
in
scas
add
movsb
pop
xchg
pop
pop
js
ficoml
int
add
movmskps
mov
pop
sbb
push
lods
insl
inc
aad
jae
dec
jae
add
fildl
mov
loopne
addb
roll
inc
add
sbb
pushf
test
fcompl
bnd
jne
fcomip
push
xchg
loopne
gs
push
add
inc
mov
ss
cmp
int3
mov
push
in
and
sar
add
mov
enter
mov
roll
mov
add
mov
test
xor
gs
add
into
sub
orl
jp
xchg
ret
xor
insl
fsub
push
push
cli
daa
loop
pop
shll
lods
sti
cltd
aad
cmp
cmpb
mov
mov
xbegin
or
pushf
vpmacssww
aam
jle
lret
and
fsubrl
adc
add
sbb
add
sub
dec
xor
outsb
xchg
xchg
repz
sbb
movsl
and
dec
add
in
test
jge
ret
jl
and
jne
cmp
fdivrs
xchg
out
fwait
stos
inc
mov
push
enter
jge
mov
in
daa
ret
ftst
pop
nop
jns
jle
xchg
push
mov
clc
and
test
adc
nop
decl
movsl
jnp
push
ds
push
xor
push
mov
mov
insl
xor
lret
sbb
mov
add
or
mov
add
cmpsl
cmpsb
inc
jne
jbe
das
insb
sbb
in
gs
adc
jne
test
lea
mov
ror
sub
in
lcall
inc
mov
xor
out
mov
es
adc
ja
mov
xlat
pop
mov
inc
enter
or
jle
imul
imul
push
jno
jno
pop
xor
notl
cltd
sub
and
pop
cmpsb
mov
sti
xchg
ret
push
movl
sub
les
jns
dec
sbb
sbb
mov
mov
sbb
in
inc
xor
aaa
mov
xchg
adc
test
mov
pop
fildl
mov
lea
rcrl
in
or
leave
mov
push
adc
push
lds
js
sbb
sub
cmpb
mov
les
adc
or
cmp
shrl
and
lea
test
jns
out
push
push
sub
fldl
js
xchg
in
cmc
loopne
or
sub
jl
jecxz
sub
int
fsubrs
imul
and
rol
xchg
sub
loop
mov
xchg
cmp
mov
out
inc
and
add
sbb
jge
mov
call
pushf
movsl
dec
fs
iret
jne
jge
or
jmp
out
cs
sbb
ja
shlb
cmp
jg
and
out
mov
loop
jno
insb
ljmp
jge
pop
mov
adc
negb
dec
mov
dec
dec
cmp
shrb
dec
stos
int
inc
pop
xor
test
lock
xchg
call
call
push
pop
mov
mov
pop
push
push
call
daa
push
out
ret
inc
insl
lret
outsb
sbbb
jl
les
fs
mov
jp
adc
notb
sub
clc
and
sbb
outsl
mov
xchg
mov
pushf
lock
lea
cmc
inc
mov
pushf
xor
cmp
mov
xchg
xor
and
iret
out
mov
mov
lret
push
mov
loop
fsubrl
cltd
push
jl
cmc
mov
sub
scas
stos
add
inc
movsb
pop
inc
pop
mov
mov
addr16
sbb
mov
xor
js
lods
dec
cmpsl
fucomip
lds
insl
inc
out
push
andl
jns
out
fisttpl
test
cld
mov
lock
sbb
add
lds
mov
and
mov
pop
aaa
sub
test
lock
pop
jg
cmp
mov
scas
jmp
push
lret
addb
jg
idivl
dec
jl
push
adcl
leave
test
flds
es
cwtl
pop
cmp
cli
push
sbb
ret
fstps
mov
lds
and
add
xor
jl
inc
daa
mov
sbb
stos
xor
stos
xchg
mov
not
mov
test
aas
test
loop
xchg
outsb
pop
repz
mov
sbb
icebp
push
cmp
je
jp
sub
std
rolb
mov
sarb
mov
je
movsb
mov
or
mov
jb
sub
lods
pop
adc
lahf
std
rorl
push
push
push
pop
xor
cmp
mov
lods
push
or
mov
cmp
mov
popl
in
pusha
in
fstpl
jne
mov
sbb
dec
or
cs
jo
cwtl
movsl
out
stos
imul
in
jo
repz
fucomi
jae
sbb
in
sahf
jecxz
ja
pop
nop
pop
xor
test
push
push
push
mov
nop
je
jo
xchg
mov
sub
dec
movsl
adc
push
into
loope
lods
das
jge
xor
fcomps
fwait
jmp
ficompl
push
lds
mul
jp
ja
xchg
xchg
pop
sbb
or
test
cmp
decl
sub
mov
mov
jnp
push
lret
pop
cmp
stc
jo
insl
mov
and
stc
jg
inc
into
mov
mov
or
cmpsl
jno
sub
pushf
lea
inc
xchg
cwtl
sbb
mov
sbb
leave
or
nop
outsl
xchg
add
stos
push
repz
add
add
pop
xchg
inc
jnp
adc
cs
gs
aaa
sti
loope
and
sbb
xor
stc
fsubs
jnp
dec
sub
outsl
push
dec
lods
jns
insl
je
cltd
xor
loop
lret
fnstenv
jmp
lret
lret
jp
mov
xchg
loope
add
xor
jecxz
roll
jecxz
iret
or
inc
loop
or
push
lock
lock
fdivr
in
arpl
sahf
dec
outsl
inc
cmp
xor
je
sub
scas
or
out
dec
pop
jns
lods
xchg
shl
xchg
jp
notb
mov
call
lahf
sbb
pop
pushf
aaa
js
sahf
pop
sbb
leave
push
cmp
rorb
movl
pop
ja
dec
mov
fbld
fwait
mov
and
scas
aam
fmul
aam
out
dec
cs
mov
sub
dec
push
mov
ret
xchg
shl
in
repnz
pop
inc
mov
push
push
dec
or
add
dec
hlt
add
jmp
mov
mov
mov
shrl
icebp
rcll
push
int3
dec
fimull
fldt
notb
xchg
repz
inc
and
xor
mov
mov
cwtl
lea
dec
jo
movsb
mov
cld
inc
adc
push
enter
dec
or
jecxz
mov
cmpsb
call
jo
and
mov
loope
outsl
jecxz
fildl
int3
push
cmc
ds
xor
and
jg
stc
cmpl
inc
dec
inc
xor
mov
pop
sub
or
dec
inc
sub
xchg
mov
outsb
or
lods
mov
enter
leave
scas
push
bound
inc
pop
and
pop
addb
nop
add
sub
mov
pop
adc
cwtl
dec
jae
dec
into
test
ja
outsb
aam
lahf
jae
loopne
ret
adc
inc
push
sti
cmpsl
loop
pop
icebp
aaa
cmpsb
mov
fwait
test
mov
xchg
js
dec
adc
xchg
sbb
mov
cmp
mov
daa
lds
adc
jle
je
jl
mov
out
sbb
add
xlat
and
stc
pop
dec
mov
adc
mov
sbb
out
dec
jmp
pop
sbb
sbb
shl
xor
mov
and
or
leave
int
or
stos
mov
and
lods
inc
add
insb
cmp
pop
out
push
lods
xchg
xor
inc
pop
movsl
push
xchg
cmp
divl
fisubrl
loopne,pt
cmp
fdivr
push
sub
daa
mov
scas
nop
jae
dec
js
fwait
cmp
mov
or
xor
dec
mov
int3
push
in
lds
lds
notb
ret
mov
mov
shrl
xchg
out
in
mov
iret
inc
jno
mov
jb
sub
dec
imul
cmc
jge
rcrl
jg
sbbl
and
out
xlat
cmc
inc
les
and
pop
and
push
dec
jns
push
rorb
cld
and
mov
xchg
adc
call
jo
lret
mov
push
icebp
cld
jno
mov
and
imul
inc
cmp
cltd
push
jecxz
sub
add
mov
bound
mov
inc
outsl
rcrb
add
insb
xor
in
dec
test
mov
or
arpl
mov
addr16
fbld
push
push
lods
hlt
rolb
out
fistpll
cmp
bound
leave
or
out
mov
fcompl
jmp
jmp
out
dec
in
fsubl
or
add
or
pop
jecxz
pop
mov
inc
aas
shrl
dec
add
add
or
mov
aas
aas
sbb
mov
sbb
push
stos
fidivrs
rclb
push
orb
stc
sbb
lret
mov
push
jmp
sub
sahf
mov
test
inc
repz
fistps
pop
shlb
xor
adcb
ljmp
pop
out
pushw
and
xor
daa
aad
xchg
leave
xchg
fisubrs
mov
dec
push
xchg
sbb
add
ret
push
mov
dec
aad
mov
in
scas
out
sbb
movsl
movsl
mov
pop
stos
iret
pop
sbbl
add
es
sub
dec
mov
shrb
leave
mov
rorb
pop
push
and
loope
add
pop
lahf
mov
dec
jns
add
pop
and
push
div
jb
mov
xchg
adc
add
pop
shll
adc
lahf
ljmp
outsb
cld
hlt
lea
dec
hlt
je
or
pop
fs
jo
aaa
cmc
cmpsl
push
mov
lods
jecxz
dec
xorl
jbe
out
sub
jp
out
test
lret
negw
jmp
adc
ret
mov
mov
rclb
jg
push
cmpl
pop
cmpsb
mov
mov
sub
ret
push
mov
fimuls
pop
imul
and
out
rcl
je
mov
cli
hlt
cmp
insl
leave
aas
or
frstor
fidivrs
or
add
testb
loop
es
sti
test
pop
adc
mov
icebp
aam
or
pusha
push
inc
ret
ret
aad
mov
cmpsl
xor
fnstcw
stc
dec
push
pop
repz
xchg
or
xor
jp
ljmp
or
test
test
mov
std
mov
imul
imul
fs
jg
icebp
lret
xlat
jno
adc
pop
jecxz
movsb
scas
push
sbb
jbe
repz
fwait
aad
aad
stos
mov
sbb
adc
lock
xchg
inc
jnp
inc
scas
jb
and
push
call
mov
jbe
xorb
stc
xchg
adc
hlt
mov
sbb
mov
test
loop
mov
pop
divb
mov
dec
imul
dec
test
sbb
cmp
xor
aas
outsl
cmp
push
jle
inc
incb
xor
aad
add
lret
xchg
in
mov
mov
test
fwait
or
dec
test
mov
stos
sub
ds
hlt
jp
sub
movsb
mov
adc
xchg
shll
out
xor
and
jns
or
cld
lds
push
adc
push
jle
insl
sbb
lds
pop
sub
adc
sub
push
cmp
inc
stos
rcll
icebp
xchg
adc
xchg
pop
hlt
pop
sbb
or
pop
mov
xchg
insb
cld
push
in
das
jnp
daa
add
mov
notb
jl
mov
int
fs
xchg
push
adc
cmp
dec
rorb
popf
addb
xor
shrb
ljmp
mov
stos
arpl
jo
sbb
aas
das
push
mov
shll
test
insb
jmp
sub
sub
mov
sbb
int3
adc
mov
add
das
hlt
cmp
pop
pop
out
stos
cltd
fdivl
push
repz
sub
fbld
inc
mov
and
in
pushf
daa
rol
ja
fisubrl
inc
inc
aam
dec
mov
push
testl
mov
or
das
scas
xchg
inc
dec
or
mov
add
inc
adc
inc
cmp
daa
insl
push
mov
mov
mov
das
test
adc
or
test
jp
lds
shrb
fstpl
pop
jle
fldcw
dec
lcall
stos
pop
bound
mov
adc
pop
ja
bnd
dec
xor
xor
and
pop
mov
jns
popa
jbe
stos
fstps
pop
or
push
lods
pop
jle
mov
out
dec
into
xor
inc
sbb
sbb
xor
sbb
push
cld
adc
jno
imul
inc
in
jnp
cld
cwtl
jmp
insb
rorl
in
loop
stos
sub
stc
cmp
push
pop
xlat
adc
cmpb
xchg
fcmovnu
xlat
in
xor
jns
inc
xchg
cmp
sbb
aaa
fsubs
xchg
idivl
pop
les
fucomi
negb
sub
xor
addr16
xchg
les
dec
xchg
loop,pn
imul
imul
and
mov
lahf
scas
jl,pt
and
js
sub
imul
fs
stos
xor
call
jne
dec
test
daa
or
mov
mov
mov
getsec
imulb
shrl
mov
lcall
sub
mov
es
lods
pop
mov
sub
cld
and
mov
xchg
stos
sub
mov
dec
icebp
in
data16
cmpsl
into
and
fs
cmp
xor
ror
push
lods
call
mov
sahf
cmpl
cwtl
stc
push
ljmp
cmp
enter
adc
cmp
adc
fstpt
fwait
lods
xchg
inc
out
inc
add
adc
and
xchg
arpl
xchg
fisubrs
add
rorl
loope,pn
pop
cs
inc
ret
cmp
andl
and
xor
sub
push
mov
mov
mov
cmpsl
sbb
jbe
fbld
sti
sbb
int3
mov
call
movsl
adc
jl
test
push
push
lds
and
xor
in
jle
pop
gs
adc
cli
adc
pop
out
in
mov
xor
lods
jb
pushf
adc
xchg
add
movsl
jno
add
aaa
cmp
push
add
push
xchg
lcall
xchg
push
lcall
adc
aas
adc
push
and
sahf
sbb
sbb
fmull
cmpsb
inc
jbe
mov
ds
mov
lods
movsl
xlat
hlt
aaa
stos
pop
shlb
in
ss
or
scas
or
push
push
dec
sahf
mov
mov
rorl
jmp
jle
je
std
scas
xchg
lock
lahf
shr
leave
cmp
mov
fiaddl
loop
addl
mov
aad
mov
popf
outsb
lock
mov
ret
aad
int3
mov
les
inc
lock
flds
jle
nop
imul
sarb
mov
mov
or
aam
lods
xor
out
hlt
push
adc
daa
and
sub
ret
mov
mov
and
jmp
int
jl
aaa
add
cmpsb
cwtl
cmp
das
fidivrs
push
pop
dec
and
mov
repnz
sub
cmp
aas
nop
aad
daa
fldl
and
adc
fiaddl
and
cltd
cmp
xor
sbb
add
mov
pop
sub
push
push
cmpsb
addb
xchg
xchg
xor
adc
push
push
sub
pop
mov
jnp
lret
xor
lods
out
sub
and
dec
cmp
push
cmc
pop
xor
mov
mov
jo
out
and
xchg
pushf
push
bound
lcall
scas
xchg
stc
cli
sub
daa
pop
sub
mov
pusha
xchg
js
mov
mov
mov
mov
xchg
push
xlat
bswap
xor
out
and
stc
mov
or
jge
in
hlt
ss
mulb
inc
jmp
popf
lret
push
sub
bound
xchg
push
jbe
sbb
lret
jecxz
fidivs
cmp
add
jecxz
pop
lret
cmp
pop
int3
mov
icebp
mov
adc
repz
lock
inc
sbb
call
pop
add
shr
pusha
inc
mov
int
rcrl
fsubrl
xchg
dec
js
iret
imul
nop
add
mov
push
loopne
and
cwtl
xor
ljmp
push
xchg
ret
loop
stos
push
cs
xchg
pop
mov
xchg
shrl
push
sbb
cmc
sbb
dec
out
inc
pop
sahf
outsb
rorb
data16
fisubl
jae
pop
mov
icebp
jge
ss
xor
mov
shr
jp
scas
xchg
js
data16
sbb
and
pop
dec
or
adc
push
jg
mov
xchg
dec
test
fwait
dec
ss
cs
and
fisubrs
iret
aad
xchg
adc
mov
jp
mov
xor
cs
xchg
push
sar
scas
adc
es
mov
xchg
add
fimuls
outsb
or
xchg
jb
pop
sbb
mov
inc
push
add
mov
out
push
in
test
out
push
mov
mov
mov
popw
and
es
or
es
cwtl
sub
scas
jle
ljmp
xchg
mov
sahf
test
cmp
cmpsl
jp
lds
or
out
cmp
rcll
stos
jp
cmpsb
push
and
push
fwait
lahf
les
mov
inc
xchg
imul
into
imul
lret
shrb
xor
inc
imul
ja
mov
rcrl
mov
les
pop
addb
dec
sbb
arpl
punpcklbw
ja
repnz
and
cmpl
mov
aas
inc
jle
punpckhbw
push
sbb
dec
ret
add
leave
sub
adc
andb
or
outsl
add
adc
push
jbe
or
je
hlt
inc
mov
mov
mov
add
push
jb
fidivl
nop
sub
ja
jns
int
xchg
xor
xlat
xchg
cs
ret
cmp
or
aad
fisttpl
les
mov
movsb
push
rorb
lock
sbb
jmp
adc
adc
push
mov
std
test
xchg
aaa
adc
jb
mov
movsl
adcb
adc
push
sahf
rcrb
hlt
arpl
xor
dec
ret
outsb
xchg
in
push
jae
mov
inc
inc
mov
stos
data16
data16
sbb
or
jbe
adc
dec
sub
jb
sarb
pop
mov
out
js
adc
iret
push
rorl
sbb
f2xm1
jle
call
pop
hlt
sub
xchg
es
outsl
std
outsl
loope
dec
jmp
mov
mov
xor
leave
mov
pop
ja
aam
add
or
xchg
aad
ret
mov
or
mov
out
cmp
jge
les
dec
sbb
les
adc
mov
jl
mov
orb
adc
xchg
and
inc
inc
leave
push
imul
adc
jo
sbb
int
leave
push
mov
lods
iret
xchg
fcmovbe
stos
dec
jg
pop
mov
add
pusha
out
aam
mov
out
out
dec
dec
cwtl
mov
out
push
or
add
push
and
int3
iret
ljmp
mov
jecxz
jp
push
mov
jle
xor
cmp
fwait
xor
icebp
ljmp
out
jl
imul
xchg
mov
push
lahf
ss
mov
xor
push
xchg
adc
scas
push
jnp
adc
cmpl
push
mov
cwtl
rcrl
cmpsl
or
jo
inc
rolb
addl
mov
out
clc
xchg
add
out
fs
mov
jecxz
and
jns
push
inc
xchg
mov
xorb
inc
shlb
je
jnp
subl
inc
sub
es
inc
std
dec
insl
sub
dec
daa
pop
ja
popf
pop
mov
in
divl
lds
push
aad
jne
mov
mov
clc
and
sub
lret
daa
scas
dec
push
dec
ja
stos
push
lea
sub
xchg
add
and
and
movsb
shlb
xor
mov
rorl
lcall
mov
mov
out
aad
add
cmc
push
mov
out
push
sbb
cmp
inc
pop
sub
std
dec
jecxz
jb
jle
sarl
push
imul
test
inc
cmp
fnstcw
fcmovb
dec
movsl
xchg
dec
cmp
jns
cli
and
and
sbbl
fwait
out
das
adc
mov
lods
pop
or
scas
subl
mov
stc
push
push
insl
pop
mov
movsb
rcll
mov
xchg
mov
sbb
test
pop
mov
jno
cmpsb
jbe
into
test
iret
mov
inc
aas
sub
fidivrs
sbb
cmp
jmp
std
cmp
mov
pop
lods
maxps
adc
jns
in
jno
mov
sbb
jnp
cmpl
pop
lods
insl
test
add
xor
add
mov
mov
push
push
lret
scas
sbb
adc
movsb
xor
pop
bound
sbb
inc
push
mov
xchg
or
mov
imul
ror
movsb
lock
ds
sub
into
push
fsts
nop
mov
inc
pop
xchg
lods
jge
popa
sbb
xor
roll
popa
push
inc
sbb
arpl
sbb
xchg
mov
lret
bound
mov
adcb
das
cli
or
rcrl
add
repnz
icebp
cmp
ja
imul
adc
inc
shl
gs
inc
add
nop
dec
rcrb
xchg
mov
into
lret
mov
jne
je
add
fsubs
shlb
inc
sub
stos
and
imul
sub
mov
sub
inc
mov
and
xchg
xor
sbb
mov
movsl
and
lock
jp
test
das
into
int
adc
mov
lock
daa
loope
lea
shrb
xor
mov
adc
in
mov
or
jle
lods
sub
mov
lahf
push
xor
ret
mov
std
loopne
add
sahf
aas
es
xor
fwait
cmp
push
mov
jo
xchg
and
xchg
add
insb
iret
pop
and
scas
mov
cwtl
jmp
inc
mov
xchg
divl
adc
sbb
jne
mov
std
inc
je
sbb
xchg
cwtl
test
daa
sbb
int3
mov
lcall
cmp
and
ret
sub
inc
push
stos
pop
or
arpl
lea
pop
outsb
and
lcall
lock
sub
insb
fistpll
pop
pop
add
js
sub
into
mov
sbb
sbb
cmpsl
addr16
stos
pop
sub
push
push
mov
shlb
loopne
xchg
xchg
shr
loopne
filds
fucom
and
in
mov
clc
shrl
jo
pop
inc
adc
lea
xchg
cli
out
ret
lcall
mov
pusha
repz
shll
xchg
ret
xor
js
or
xlat
outsb
ds
sbb
gs
movsb
dec
mov
add
xor
mov
arpl
inc
dec
xor
inc
xchg
sbb
jnp
add
push
dec
popa
jmp
xor
stos
jp
dec
cmp
sub
jne
movsb
in
cmpxchg
lea
xor
xchg
mov
mov
ds
shlb
and
and
cld
xchg
or
jge
data16
dec
andb
fs
xchg
arpl
into
push
dec
add
ljmp
xchg
cmp
xlat
sbb
popa
aad
imul
pop
sahf
pop
mov
or
dec
test
cmp
cmp
mov
mov
cmpsl
pop
and
mov
cltd
ljmp
outsb
sub
mov
adc
jmp
adc
xor
push
mov
dec
arpl
fdivrl
sbb
cmp
dec
sbb
pop
sub
pop
fcmovu
adc
pop
in
test
movsb
sub
inc
mov
inc
xor
sub
and
inc
xor
adc
adc
push
pop
andb
aaa
xchg
bound
popf
pusha
or
xor
add
repz
mov
mov
jecxz
cmp
mov
xor
xchg
mov
sbb
mov
cli
into
daa
or
adc
push
cmp
push
jnp
and
enter
push
jecxz
mov
xor
jne
jmp
das
pop
rorb
xlat
push
inc
fildll
pop
repz
and
push
inc
inc
fmull
pusha
shll
loope
jnp
sbb
mov
cmp
and
std
stos
or
xchg
push
stos
imul
dec
mov
sub
mov
fisubrs
jl
pop
ds
or
scas
imul
sub
mov
mov
lock
mov
xorl
mov
orb
mov
dec
sbbb
inc
fwait
lock
in
sbb
adc
cmpsb
mov
push
mov
orb
xor
dec
cwtl
sahf
inc
sbbb
jge
mov
hlt
adc
lock
fists
xchg
xor
lock
movsb
inc
push
xor
xor
mov
or
sbb
xchg
cmp
cmp
mov
loope
sbbb
mov
sbb
pushf
cmp
fcomps
mov
or
sti
mov
push
mov
cli
inc
clc
xchg
adc
aam
or
adc
out
pop
in
ret
pushf
lret
js
sbb
inc
xor
lods
push
sahf
test
inc
xchg
xchg
mov
and
daa
inc
repnz
fstpl
or
add
xor
lods
xchg
lret
jae
out
cld
es
fwait
inc
std
mov
cmp
call
sbb
bnd
ja
dec
dec
lret
jecxz
aam
mov
inc
idivl
sub
pop
lret
sbbl
lahf
mov
push
in
sarb
cmp
fdivl
setns
jnp
sbb
push
pop
stos
mov
pushf
pop
ret
or
and
scas
sbb
push
ds
or
test
jge
outsl
inc
into
pop
fbld
test
lret
mov
test
sub
mov
push
xor
ljmp
mov
xchg
cmp
ja
shl
mull
add
test
movsb
and
xchg
test
sti
sbb
lret
into
dec
fisubs
and
aad
push
js
lret
adc
iret
nop
test
pop
inc
dec
mov
jns
adc
push
jbe
icebp
bound
cmpsb
enter
sub
sub
or
jmp
push
ret
inc
sahf
loope
out
rcll
sahf
dec
cs
inc
sbb
bound
fwait
repnz
pushf
pusha
fimull
js
jmp
jb
cmpsl
and
rolb
cli
inc
js
jnp
push
into
popf
addl
negb
sub
js
lret
inc
mov
inc
pop
cmpsl
loope
lret
inc
fbld
enter
out
cmp
pusha
xchg
clc
imul
pushf
lret
fildll
fadds
dec
cmp
add
jae
loope
jb
mov
vucomiss
sbb
adc
or
jb
stc
cli
mov
push
out
jmp
imul
xchg
dec
gs
adc
ficomps
pop
jle
cmp
call
sub
jecxz
pop
and
sbb
sbb
cmp
cmp
movsb
pushf
aaa
ljmp
jmp
push
sbb
inc
aas
repnz
loope
sbb
addb
add
addl
push
sbb
xchg
inc
or
xor
lcall
mov
push
cmc
mov
mov
mov
test
fdivl
loopne
or
fnstenv
out
es
enter
idivl
gs
ljmp
addb
inc
jns
cli
adc
mov
pop
mov
cld
mov
mov
add
nop
aad
rorl
pop
push
and
fisubl
jbe
dec
shrb
iret
mov
mov
and
lods
mov
add
out
popa
ss
outsl
jne
mov
lcall
roll
xchg
rorb
loope
dec
lock
mov
aad
rcr
bound
scas
and
loopne
pushf
mov
jo
out
or
stc
lea
mov
push
mov
das
jno
push
or
arpl
push
xor
test
xor
sti
push
stos
push
pop
and
cmp
data16
out
jmp
pop
mov
gs
icebp
stos
les
mov
xorb
sub
enter
pusha
add
imul
sbb
mov
pop
sbb
sub
xchg
push
sarb
call
inc
xor
ffree
mov
ss
imul
mov
int
mov
jle
dec
ret
xchg
lock
lret
sbb
adc
mov
dec
pop
insb
popa
push
and
push
push
mov
movsb
outsb
adc
and
add
ljmp
jne
xor
je
lock
mov
xchg
test
pushl
pop
lret
repz
and
push
pop
sub
test
adc
cmpsb
enter
stos
call
inc
push
fstp
mov
sbb
cmp
jle
aaa
mov
xlat
js
inc
ja
xchg
jne
sub
or
xor
jecxz
popa
and
in
cmp
push
enter
mov
xor
jnp
aam
or
mov
push
imul
jl
fstpt
xor
pop
rolb
ss
push
in
dec
adc
loope
xchg
and
test
inc
dec
jns
gs
mov
repz
cmpsb
and
fcomps
fs
cli
out
jo
and
pop
repz
insl
xchg
mov
mov
mov
mov
inc
test
cmp
divb
lahf
inc
fs
mov
int
pusha
push
xchg
or
sub
ret
es
jns
xor
and
hlt
jo
pop
pop
inc
or
fs
cmp
lock
mov
sbb
sub
mov
inc
xchg
push
pushf
add
pop
popa
push
fsubrl
xlat
inc
dec
jo
and
and
loope
imul
es
nop
bound
and
mov
lret
inc
in
insl
mov
hlt
and
imul
loop
mov
movsl
pushf
outsl
scas
dec
and
mov
mov
ss
cmp
add
cmp
sahf
xor
mov
xchg
pop
sub
sub
xchg
sarb
or
je
and
enter
divb
sub
push
adc
jmp
int3
lds
shrb
inc
push
mov
addr16
out
sub
xlat
cld
mov
les
mov
lahf
out
js
and
dec
lret
mov
aaa
inc
fldt
iret
leave
addr16
out
dec
push
and
into
adc
adcl
jmp
cmp
mov
sub
add
xor
movsl
sti
dec
mov
sbb
cld
lahf
xor
cli
add
mov
andb
cltd
cmp
pop
cltd
mov
scas
adc
add
mov
push
add
sbb
cmp
mov
pusha
push
stos
stos
xchg
sub
decl
push
aam
push
xchg
fcomps
cmpsl
mov
loop
cmp
cltd
loop
cli
xchg
push
jb
xchg
mov
pop
fidivs
pop
add
dec
aaa
pop
fldenv
cmp
inc
pop
mov
mov
adc
int3
mov
xchg
push
repnz
test
inc
rolb
or
sbb
dec
lret
sbb
loope
mov
orb
and
push
add
lods
call
int
popl
das
push
or
xchg
dec
lret
dec
ljmp
lcall
or
test
ja
enter
jle
mov
adc
decb
jnp
jmp
pushf
xor
lahf
mov
xchg
fcoms
xor
dec
leave
pop
loopne
test
sub
cmp
inc
adc
pop
call
push
or
and
dec
mov
fnstenv
ja
dec
test
shll
cmp
ja
mov
in
xor
or
xlat
call
mov
xlat
sbb
mov
roll
sti
inc
in
mov
sbb
lods
stc
lcall
mov
icebp
xor
mov
test
and
xchg
xor
mov
sub
mov
aas
es
inc
insb
testb
call
adc
jle
rcrb
xchg
jbe
test
mov
das
dec
pusha
pop
jae
add
outsl
xor
mov
lock
push
xchg
lahf
int3
jno
fst
int3
mov
jle
xor
scas
in
mov
mov
shlb
je
cwtl
jp
push
hlt
addr16
xor
gs
loop
and
int3
movd
sub
lcall
call
mov
scas
inc
push
mov
roll
mov
sub
cmp
pusha
enter
movsb
out
xchg
jmp
mov
test
sub
ljmp
dec
ja
repnz
insb
out
xchg
shrb
jecxz
sahf
xchg
movl
ds
jbe
aas
int
sti
ss
fisubl
ja
xchg
aas
xchg
xchg
add
gs
repz
xchg
sbb
rcrl
adc
xor
mov
rcl
shlb
add
aaa
mov
lea
enter
hlt
xor
fwait
push
and
fs
mov
sub
repnz
cmp
addr16
or
inc
notl
std
push
sub
or
lock
fsubrp
adcl
outsl
ud0
popf
jmp
cmp
inc
leave
out
rorb
in
frstpm(287
shll
push
adc
je
cs
mov
out
hlt
lret
sahf
dec
mov
fwait
push
cmp
enter
jo
lods
xchg
lds
dec
cli
enter
icebp
xchg
scas
adc
es
mov
lock
xor
push
in
rcrb
mov
inc
shlb
cmp
jb
out
cmp
cld
mov
xchg
sbb
scas
rorl
push
mov
sub
jge
cmp
mov
lret
sbb
jl
mov
mov
rcll
xchg
push
or
adc
outsl
or
and
call
push
cmpsb
lods
adc
imul
lods
scas
mov
in
mov
push
insl
outsl
aaa
scas
inc
pand
jmp
adc
pop
pop
lods
add
sti
out
add
push
xor
push
mov
or
int
add
out
adc
or
faddl
mov
in
fscale
mov
into
mov
xor
dec
pusha
cmpsb
dec
mov
sahf
inc
jg
nop
mov
repz
jl
dec
or
or
xchg
sbb
mov
imul
mov
gs
mov
cmp
pop
mov
loop
outsb
mov
push
out
lods
movl
xor
insl
lret
lods
inc
xchg
and
das
lds
mov
nop
insb
cs
jns
add
mov
jg
enter
mov
dec
test
rolb
pop
pop
jb
sub
or
outsl
mov
aas
and
aam
jnp
pushf
and
arpl
mov
sbb
inc
inc
pop
leave
and
sub
xor
add
popa
mov
lods
stc
mov
leave
sbbb
cmp
insb
mov
std
test
mov
cmpsl
sub
mov
mov
imul
xor
fistpl
mov
repz
jecxz
stc
mov
pop
inc
insb
in
and
xor
lds
jo
scas
leave
movsl
pmaxub
in
add
pop
inc
sub
lods
push
cmpsb
sbb
xor
repz
mov
add
icebp
dec
add
xchg
or
xchg
idivl
stos
js
pusha
push
inc
lahf
nop
enter
xchg
shlb
dec
pop
ret
fcmovnb
lods
ret
orb
sbb
scas
mov
icebp
push
pop
sub
pop
lods
aaa
scas
mov
jmp
adcl
sub
adc
mov
push
add
dec
mov
lods
rclb
sbb
xor
fs
xorl
pop
mov
cwtl
sub
add
mov
stos
mov
lahf
aas
mov
jno
inc
push
lret
cmp
cwtl
repz
movsl
cmp
fdivl
cld
cwtl
popa
fisttpll
pushf
lcall
mov
add
xchg
adc
in
inc
pushf
push
adc
les
cvtpi2ps
mov
cmp
lods
cmc
je
int3
data16
sbb
and
fwait
xchg
mov
jne
or
and
add
repnz
vmwrite
daa
xchg
mov
push
push
leave
dec
loopne
cmovne
jnp
in
sbbl
sbbb
lods
sbb
test
and
adc
pop
pop
push
jp
test
cmc
imul
shll
mov
adc
ljmp
fnstenv
lds
ret
jmp
adc
popf
movsb
addl
dec
ret
dec
test
repnz
loopne
mov
sar
shll
mov
add
nop
dec
mov
mov
sbbl
negl
cld
inc
or
insb
adc
add
mov
inc
popa
sahf
and
mulb
mov
jo
aad
aam
lods
fbstp
test
xor
pusha
test
sbb
push
push
mov
cmp
stc
test
jbe
dec
daa
add
daa
lret
shlb
test
test
push
scas
mov
sub
aam
in
pop
jae
fcompl
std
arpl
adc
cmp
fwait
mov
lock
and
jb
or
dec
addl
std
ds
and
loopne
pop
stc
lahf
dec
add
std
mov
adcb
adc
jo
or
adc
out
cmp
fsubs
jnp
inc
lods
int3
daa
mov
mov
add
out
ss
pop
imul
pop
mov
push
add
lock
pop
adc
pop
mov
ja
mov
sbb
pop
ja
rcrb
fsubrs
or
inc
les
notb
cmpsb
adc
push
and
pusha
and
aad
xchg
dec
push
push
pop
mov
jnp
add
or
push
lahf
xchg
rclb
jo
pop
popf
lods
pop
sbb
in
fcompl
loop
idivb
scas
pop
jae
sub
jbe
loop
fstpl
nop
or
adc
testb
sub
xchg
push
push
pop
sbbb
in
add
movsb
mov
imul
add
aad
cmp
mov
push
divl
adc
in
dec
pop
sub
push
out
sbb
fsts
sub
icebp
insb
xchg
cmpsb
mov
jg
sti
dec
dec
repnz
dec
ss
int3
sub
pop
or
push
repnz
push
cmp
push
push
jl
push
dec
mov
mov
inc
mov
inc
int
add
jae,pt
add
jecxz
xchg
out
lods
popa
or
mov
sti
fstl
jmp
sbb
lds
dec
adc
cmpsb
repnz
rcl
xor
or
pop
push
push
cmp
gs
mov
mov
sub
xchg
sahf
sti
fdivrs
push
fcoml
jmp
mov
clc
cmpsb
inc
cld
adc
popf
mov
cmc
and
cli
or
jbe
imul
dec
dec
cmp
ja
mov
jg
adc
ret
lods
mov
not
lock
sar
sahf
inc
inc
adc
pop
xlat
fistps
jb
sbb
mov
and
ja
setne
and
jo
sahf
lods
mov
jp
mov
cltd
mov
adc
sub
ret
mov
mov
lds
and
flds
jecxz
lret
test
xchg
ljmp
adc
dec
addb
pop
cmpsl
pusha
mov
sbb
cli
xor
fimuls
add
sti
enter
sbb
pop
das
cltd
out
jne
lea
pop
movsl
sbb
mov
sbb
dec
movsl
lahf
pop
adc
jg
andl
fcoml
mov
and
push
in
dec
jne
or
dec
andl
push
daa
dec
push
fmull
lock
nop
xchg
mov
mov
push
int3
pop
xchg
push
hlt
stc
push
and
sub
mov
sbb
or
mov
push
imul
mov
dec
adc
ror
sub
pop
lret
imul
mov
fnstenv
mov
mov
mov
bnd
cmpsl
or
mov
jb
test
sbbl
pop
leave
cld
lea
dec
sbb
jo
push
cmp
add
insb
and
jg
in
xchg
imul
push
xchg
xorl
loop
mov
fs
pop
sub
insl
jns
xchg
inc
xchg
mov
mov
outsl
add
movsl
or
stos
jl
mov
inc
fst
pop
fadd
ret
hlt
rolb
adc
sub
and
mov
inc
xlat
sub
lods
lds
fcomip
cmp
leave
lahf
int
in
sub
adc
push
shll
notb
ljmp
loopne
lret
push
idivl
das
fs
sub
popa
bound
nop
jns
inc
test
mov
inc
push
outsl
insb
mov
fnstcw
repz
fwait
jl
adc
mov
sbb
enter
loope
sarl
les
xchg
add
andb
insb
les
enter
loope
dec
test
xchg
cmp
pop
mov
lds
xor
movsl
js
xor
adc
or
inc
cwtl
jae
out
stos
leave
jno
mov
sbb
in
shlb
cli
das
cmpsl
and
fldt
inc
scas
mov
push
in
shrb
and
in
pop
in
mov
outsb
out
sbb
mov
or
mov
js
jbe
sbb
seta
shll
outsb
cmp
rcl
iret
push
push
dec
or
jo
jb
nop
push
ss
data16
cmpsb
and
std
pop
or
sarl
add
mov
fisubs
adc
or
stc
pop
loopne
stc
and
mov
push
fwait
push
cltd
mov
push
adc
nop
xor
inc
leave
or
test
inc
jb
not
jno
adc
lret
data16
imul
cmc
cld
cld
fadds
inc
enter
xor
adcb
call
cmp
jnp
dec
in
inc
lahf
addl
mov
inc
in
add
cmpsb
mov
jl
mov
push
dec
add
ror
orl
es
lret
clc
sub
pushf
dec
arpl
fstps
xor
icebp
adc
loop
push
pop
aad
mov
add
popf
lock
loopne
imul
je
sahf
xchg
stos
dec
mov
ret
mov
loop
mull
pop
jle
fnstenv
scas
jecxz
in
repnz
pop
push
lods
jb
jecxz
jno
and
mov
daa
mov
mov
aad
xor
repnz
sub
icebp
jecxz
sbb
xor
mov
pop
jo
xchg
xchg
pushl
loop
hlt
or
mov
imul
xchg
or
mov
mov
mov
std
in
push
frstor
pop
mov
dec
lret
pop
imul
mov
lret
mov
int
lds
xor
outsb
push
sbb
outsb
popf
fwait
cltd
inc
test
jle
icebp
mov
xor
jnp
repnz
ds
mov
dec
xor
add
xchg
adc
shll
cmpsb
pop
insb
out
sub
data16
mov
add
sub
bound
push
mov
packssdw
notl
dec
outsb
add
mov
push
jecxz
sub
daa
pop
mov
mov
mov
or
jecxz
adc
xor
mov
lahf
lds
push
leave
xchg
rorl
cmp
pop
push
movsb
pusha
push
inc
xlat
call
cmp
add
adc
push
aad
dec
jle
notb
pop
push
xchg
movsl
out
ret
jle
mov
xchg
lea
cltd
push
adc
ja
push
jge
mov
or
insb
cli
mov
std
insl
add
popf
xor
xchg
fstps
iret
in
mov
outsb
sbb
sbb
xor
nop
inc
mov
mov
lock
xor
lds
flds
in
xchg
xchg
sub
loope
and
dec
jmp
pop
gs
fsub
fwait
adc
jle
lret
sbb
dec
and
hlt
stc
pop
test
add
aad
mov
sub
jno
pop
mov
adc
cli
sub
repz
pop
jecxz
xor
mov
clc
add
fwait
push
mov
dec
cmp
xorb
cmp
cmp
arpl
dec
xor
adc
sbb
cmp
push
loop
fadd
js
imul
and
mov
shrl
ljmp
sub
cmp
int3
dec
ret
pop
xchg
xchg
lds
lret
xor
fwait
js
fsts
in
adc
sbb
adc
jg
cwtl
sbbl
aad
cmp
pop
pop
push
mov
mov
jns,pn
xchg
dec
icebp
and
insb
inc
add
shll
fsub
inc
push
and
fiaddl
cmpsl
add
fwait
call
stos
sub
sbb
push
xchg
xchg
into
stos
pop
cwtl
push
outsb
rcl
dec
push
xor
and
cs
xchg
mov
js
pop
xchg
aam
cmp
aam
lods
paddusw
push
jmp
mov
lds
push
ret
lock
orb
adcb
push
xor
mov
cmp
pop
pushf
sbb
mov
add
mov
mov
xor
pushf
fistl
xchg
push
pusha
bound
daa
rcl
clc
aam
sub
cwtl
xor
inc
jmp
into
sbb
lods
jbe
cmp
loope
jl
nop
xchg
dec
push
das
repnz
jge
out
cmpsl
mov
into
inc
lods
xchg
mov
inc
add
leave
scas
inc
adc
stos
test
stos
xchg
jmp
sbb
mov
lods
fadd
push
xchg
dec
inc
lds
lock
mov
pop
push
mov
out
cwtl
mov
inc
pop
int
clc
add
and
movsl
cmp
lock
push
sbb
xorb
or
sahf
cmp
lea
pop
and
bound
sbb
sti
mov
sahf
jmp
pop
and
cmp
xor
push
sbb
xor
enter
jns
fdivr
test
cmc
push
xchg
jae
mov
mov
adc
loopne
jmp
movsb
stos
inc
movsb
mov
push
adc
fdivl
xchg
subl
and
std
mov
xor
stos
and
sub
aaa
cld
fadds
lahf
jae
and
stc
and
jbe
dec
aad
jbe
mov
je
push
and
rolb
std
jg
fdivs
fnsave
rcl
rorb
in
fidivs
jo
andl
faddl
push
stos
sub
shl
pop
inc
xor
dec
xchg
jnp
mov
lock
insl
jae
mov
sti
cmp
lods
jno
pop
sub
cwtl
addr16
movsl
cwtl
rcll
xlat
les
xchg
mov
pop
lret
into
fists
sbb
push
adc
dec
rolb
pop
lock
loopne
sbb
dec
cmp
sbb
std
aas
xchg
adcl
mov
mov
xchg
js
fiaddl
push
lar
jecxz
adc
fcoml
into
add
pop
xchg
std
out
std
push
outsl
inc
and
pushf
in
loopne
daa
mov
cmp
xor
in
fisubrl
pop
mov
push
cmp
in
inc
mov
sub
adc
lret
nop
mov
ret
jne
loopne
nop
dec
lods
std
jae
add
stc
cltd
dec
add
sbb
sbb
lds
sarl
xchg
sbb
test
jno
ja
mov
add
scas
xchg
rcrb
jl
or
call
frstor
dec
cltd
add
jbe
insb
lods
push
fsts
jl
mov
imul
xlat
mov
and
insb
out
pop
scas
jl
out
outsl
sbb
inc
xor
push
push
xlat
xchg
sbb
xor
rclb
stc
push
lahf
test
fistps
mov
xchg
mov
mov
dec
mov
mov
cld
aam
pushf
sbb
shll
and
sub
mov
cmc
pop
nop
inc
outsl
pop
mov
data16
adc
inc
sub
dec
sahf
js
mov
push
jp
mov
mov
mov
dec
xor
jle
xchg
add
mov
out
inc
jns
repnz
and
das
fwait
push
mulb
sahf
mov
out
hlt
out
in
mov
test
aam
sub
rcrb
test
in
inc
into
jne
pop
mov
or
lret
add
mov
xchg
movlhps
pop
xor
jmp
add
cmp
bswap
inc
xchg
fmull
stos
sub
mov
ljmp
sbb
fs
je
movsl
mov
jae
movsl
mov
jns
cmpsl
ret
mov
and
mov
ret
lds
pushf
sar
fbld
dec
lds
xchg
xor
in
add
fprem1
pop
neg
ficompl
dec
lds
add
sbbl
push
sbb
gs
andl
adc
sub
out
pmulhw
mov
sar
sbb
push
addb
dec
mov
test
mov
in
out
sub
insb
mov
imul
add
push
out
addr16
dec
xlat
mov
mov
shll
jg
mov
mov
mov
dec
jecxz,pn
pop
jge
je
mov
pop
fnsave
or
jmp
fisttps
jg
xor
ret
or
mov
lret
cltd
lods
test
mov
jg
cmp
mov
xchg
add
ret
fidivrl
enter
test
xchg
cmp
daa
and
out
mov
negl
sub
push
lret
insb
push
clc
lods
pop
add
sbb
gs
inc
xchg
movsb
call
mov
lods
mov
inc
fstpl
lea
adc
nop
jb
adc
push
xorl
sub
scas
mov
scas
mov
inc
lret
repz
mov
imulb
xchg
xor
sub
sbb
cmpsb
xor
cltd
push
or
mov
inc
sub
fldl
sbb
scas
xchg
push
xchg
ret
scas
fdivrp
mov
mov
out
cmp
pop
jne
adc
stc
jns
pop
ficomps
insl
pop
movl
aad
push
pusha
add
lea
fsubrs
aam
push
adc
pop
popa
mov
push
or
or
inc
hlt
pop
inc
cmpl
iret
movsl
and
arpl
xor
popa
sbb
pop
sbb
inc
fsubr
adc
nop
or
jg
pushf
outsl
imul
dec
insl
loopne
xor
mov
aad
lea
aaa
jno
pop
int3
xor
outsb
arpl
xor
or
pop
pop
add
pop
sbb
insl
adc
push
in
das
cmpl
cmp
push
das
push
jbe
add
jmp
shrb
mov
xchg
xchg
cli
popa
xlat
and
pop
sarl
fidivrl
clc
data16
xchg
aad
adc
cld
jmp
lds
jb
cmpsb
or
cmpsl
cmpb
imul
mov
lret
dec
push
loope
out
add
rclb
icebp
sub
insl
imul
xchg
ds
mov
push
test
je
mov
ds
ds
cmp
push
clc
les
mov
in
cwtl
push
fucomip
jns
xchg
in
inc
aam
or
cmp
icebp
mov
sub
mov
std
ret
cmc
leave
push
xchg
pop
xlat
cmp
xchg
mov
mov
out
adc
push
mov
popa
pop
mov
scas
arpl
scas
cwtl
xchg
xor
push
call
les
stos
int
daa
xchg
xor
adc
xlat
cmp
adc
arpl
outsb
int
cltd
mov
jmp
pop
mov
and
mov
sbb
mov
xor
mov
sub
pop
and
jmp
fs
stc
scas
popa
ss
push
pop
push
or
and
das
add
jbe
dec
and
loop
jl
jbe
fwait
negb
xor
test
imul
fwait
mov
ljmp
cmpsl
nop
call
xchg
xchg
cltd
cmc
cli
ret
push
loopne
or
push
dec
inc
inc
or
cmp
std
mov
push
fcoml
mov
lret
jcxz
sbb
in
test
push
and
or
cmp
sbb
xor
mov
aas
lret
mov
adc
push
jle
scas
loope
cmp
in
in
ds
mov
rolb
ds
inc
inc
xor
mov
test
or
pop
lods
fmull
test
pop
dec
xchg
lea
inc
das
in
jb
add
and
mov
clc
in
sbbb
push
jae
in
push
sub
mov
jmp
dec
lods
jl
stos
and
imul
std
and
sbb
mov
and
mov
es
lods
xchg
push
inc
ret
xorl
mov
push
aas
cli
push
pop
xchg
pop
inc
mov
dec
push
fdivs
dec
daa
aaa
sub
mov
sbb
sbb
lea
pop
sub
insl
cli
shlb
cmp
push
movsb
and
mov
cmp
std
rorl
out
dec
push
fsubr
sub
mov
xorb
push
out
sbb
aam
add
enter
scas
mov
xchg
push
insw
mov
push
rol
inc
xchg
lods
sbb
ds
rorl
sub
out
fstl
int
xor
rcrl
or
push
sti
sbb
add
mov
ljmp
ret
cmp
scas
dec
clc
cmpsl
addr16
adcl
mov
scas
jne
mov
xor
adc
sub
jecxz
outsb
cmp
xchg
pop
xor
push
xchg
out
add
jmp
jg
orb
repnz
cltd
in
xchg
mov
mov
pop
cmp
mov
inc
jle
pop
cmpsb
xchg
fstps
cltd
mov
movsl
repnz
jge
jae
cltd
adc
repnz
mov
pusha
repz
test
out
dec
ds
test
dec
xor
adc
loopne
sub
mov
test
lea
aad
pop
test
clc
xor
fdivr
mov
negl
testb
push
stos
jbe
push
and
faddl
inc
rcrb
popf
xchg
or
arpl
mov
inc
enter
or
xchg
inc
xor
scas
mov
mov
push
movsb
push
mov
mov
mov
clc
pusha
hlt
or
push
jno
lods
mov
cmp
mov
out
stc
and
out
mov
fisttpll
or
iret
xchg
imul
ret
fistl
inc
push
data16
jae
jle
xor
jmp
cmp
xor
sbb
in
cmp
enter
cwtl
cmp
sub
out
test
outsl
out
cmp
sbb
mov
sub
or
sarb
adc
clc
jbe
push
sbb
xor
sahf
mov
xchg
sub
pop
push
lea
testl
sbb
les
jnp
loopne
lret
and
inc
xchg
jne
jmp
mov
pop
dec
ficomps
push
sete
mov
mov
shl
mov
and
fxch
repz
jecxz
sub
mov
lret
lods
sbb
xchg
dec
aad
jecxz
fisubrs
sub
fisubrl
xchg
dec
divb
out
ja
mov
lret
mov
add
mov
int
lret
add
aas
xor
add
mov
addr16
movsb
enter
ss
aam
movsl
sub
push
call
or
ret
sub
movsl
ss
mov
inc
fdivl
int3
aas
cmc
insb
fwait
lahf
or
test
sahf
lahf
outsb
push
cwtl
cltd
lahf
xor
aad
fcoms
dec
cmp
jb
pop
lods
inc
lahf
xor
adc
ljmp
adc
or
jns
dec
xor
adc
mov
mov
jp
pop
mov
cs
iret
out
outsb
or
sbb
pop
pushl
int
lret
inc
inc
dec
and
aas
nop
fisubrl
jb
cli
push
fnsave
xor
into
repz
mov
adcb
jae
shl
mov
movsb
jecxz
out
test
mov
outsb
mov
mov
daa
mov
mov
int
int3
dec
adc
pop
sub
inc
xor
add
fcompl
mov
int
cmpsb
lds
mov
push
jmp
addb
or
mov
jp
mov
arpl
cmp
adc
cli
sub
ss
adc
dec
dec
push
and
jo
lods
arpl
ret
pop
in
push
cmpsb
mov
in
jmp
aad
ror
or
sub
push
jno
mov
cs
lret
jmp
cmpsb
cltd
out
mov
xchg
pop
test
leave
cmc
cmpl
inc
imul
mov
inc
movb
jns
push
push
jo
add
jae
xchg
pop
jmp
mov
xchg
stos
mov
in
cmp
mov
cld
fstpl
int
int3
loope
inc
cld
mov
cli
cmp
xchg
idiv
into
jo
je
cmp
in
fbstp
in
js
mov
dec
sub
in
pop
outsb
and
jp
add
jp
jg
sbb
fsubrp
jns
push
pop
repnz
mov
push
repnz
call
adc
js
mov
fidivs
repnz
loop
inc
inc
xor
popf
aas
cmpsl
aaa
push
movsl
insl
mov
pop
xchg
lods
xchg
pop
sub
add
or
ss
aaa
int3
scas
mov
add
adcl
dec
pop
stos
adc
scas
jnp
mov
jns
addr16
repz
dec
dec
out
jg
pop
sbb
movsb
clc
fstpt
mov
lods
add
inc
js
push
xorl
adc
mov
sarb
shl
adc
and
imul
pushf
pcmpgtw
fs
mov
adc
int3
mov
sub
scas
push
iret
mov
fcomi
ret
test
sub
repz
mov
pushf
ret
push
pusha
xchg
dec
cmp
hlt
jb
adc
popa
mov
mov
add
jecxz
icebp
pop
sahf
adc
test
jg
push
int3
aaa
mov
aas
stc
repnz
mov
adc
jecxz
xlat
arpl
mov
or
iret
jno
sbb
push
cmpsl
jp
pop
movsb
out
sbbl
xchg
ljmp
mov
mov
fs
dec
imul
jp
dec
gs
imulb
and
pop
adc
loope
mov
stos
lock
icebp
lahf
push
dec
jmp
pop
mov
mov
daa
es
jb
mov
mov
or
push
push
jns
sub
jne
pop
add
ljmp
test
imul
out
fcmovnb
sub
pop
xor
jno
in
xor
lahf
arpl
shl
xor
dec
jne
stos
jns
lret
jp
test
xlat
mov
jno
push
adcl
push
orl
insl
pushl
and
or
fdivrl
jge
call
mov
out
test
mov
lods
xor
shll
je
sub
mov
lahf
mov
pusha
in
cwtl
loope
loopne
sub
jmp
jb
mov
daa
xor
sahf
loopne
imul
sbb
hlt
fld
test
ds
push
jo
ret
cmpsb
inc
into
sbb
enter
pushf
inc
lcall
js
xlat
test
add
je
mov
or
out
cmc
aad
inc
inc
mov
mov
mov
mov
imul
mov
push
xor
es
push
sti
inc
inc
cmp
add
cld
sbb
pop
rolb
xchg
sub
and
sub
scas
jbe
jnp
je
adc
das
or
cmpsb
pusha
mov
dec
adc
cmp
inc
add
mov
mov
jmp
inc
ja
mov
inc
ss
repnz
popf
test
push
push
out
and
cwtl
mov
decl
push
movsl
add
mov
inc
jp
mov
mov
dec
mov
jmp
pop
cmp
test
pop
fistps
ss
pop
push
stos
iret
scas
sub
dec
mov
xor
ss
shrl
data16
out
or
adc
sbb
fs
mov
imulb
lahf
lret
pushf
repz
xor
pop
mov
outsl
adc
jle
push
fwait
xor
rcll
mov
mov
or
iret
decb
sub
push
xor
fstps
fld
push
outsl
addr16
in
scas
adc
jl
sbb
sbb
nop
ret
out
inc
cmpsb
fstl
push
sub
ljmp
imul
je
divb
xchg
mov
mov
test
dec
cmpsb
add
jo
inc
shl
mov
push
cmpsb
mov
shrb
arpl
test
add
movsb
cld
cmp
lods
xchg
xchg
push
or
outsb
xchg
divb
push
js
sbb
faddp
mov
cmp
test
xor
insb
or
ja
and
in
int
popf
mov
jns
adc
cmc
std
movsl
xchg
std
push
xchg
mov
dec
jge
or
icebp
mov
jns
cmc
aaa
out
adc
test
mov
stc
out
push
lds
scas
jbe
jecxz
dec
or
mov
dec
jmp
jl
subl
adc
add
loope
mov
mov
lea
inc
adc
out
or
repnz
add
push
mov
push
sbb
inc
push
stos
push
mov
lcall
jne
addr16
mov
mov
mov
subl
mov
mov
fistps
lcall
mov
or
in
imul
mov
xchg
int3
mov
out
pop
lock
mov
mov
xchg
js
lret
jbe
test
and
jno
push
jmp
andl
mov
stc
sbb
shll
aaa
adc
test
ret
jmp
into
sbbb
jmp
dec
adc
sub
out
adc
out
dec
shlb
cwtl
dec
inc
xor
subb
insl
jecxz
divb
push
dec
out
or
pop
mov
cmp
push
subb
jle
clc
push
mov
jl
mov
loopne
popa
jl
and
push
repnz
sarb
in
call
mov
cs
sub
mov
mov
call
or
push
out
aaa
mov
mov
xor
jo
mov
aaa
pop
lods
lahf
arpl
das
push
lock
sub
mov
ja
ja
iret
fmull
lods
push
mov
movsl
add
popf
roll
ficoms
jb
pop
imul
adc
pusha
bound
add
or
stos
sbb
cmp
je
imul
out
aam
rorl
je
fsts
sti
add
ret
imul
mov
jle
dec
incb
fnstsw
jecxz
jnp
mov
test
lods
insl
jmp
adc
and
mov
lret
mov
sub
pop
fsts
add
movsl
ds
jnp
push
sub
push
sub
mov
bound
je
insl
sahf
test
outsl
rorl
add
shl
rclb
lahf
outsl
call
and
and
into
mov
std
xchg
sub
pusha
mov
bt
loope
mov
cwtl
xor
jg
sub
xchg
dec
rorb
setge
stc
xchg
gs
leave
and
and
lock
leave
gs
xlat
lcall
inc
fcomip
sti
adc
mov
iret
cwtl
cli
jo
cmp
add
xchg
push
icebp
and
jp
dec
push
add
inc
mov
ss
sbb
popf
adc
arpl
or
fdivrs
insb
push
inc
push
lock
or
mov
mov
push
lahf
sarb
add
and
sub
in
test
mov
push
scas
pusha
pushf
ds
dec
push
enter
pusha
mov
andl
imul
xor
out
in
inc
mov
imul
addr16
fildll
jle
cmpsl
mov
frstor
dec
and
lea
out
mov
sbb
jecxz
dec
ljmp
inc
hlt
stos
movsl
dec
repnz
sbb
imul
lods
push
mov
insl
or
sub
daa
sub
inc
rol
adc
fidivl
jle
jle
test
cwtl
out
popa
jnp
popa
push
dec
in
test
dec
lea
iret
pop
dec
mov
cmc
aad
xchg
and
jmp
jmp
push
mov
data16
inc
icebp
out
iret
or
scas
addb
clc
lret
insl
jns
adc
adc
sbb
sub
scas
pop
pusha
lds
out
xor
sbb
notb
mov
cltd
nop
push
scas
push
push
ret
lds
jp
leave
mov
push
push
sub
add
data16
insl
daa
xlat
hlt
mov
test
ja
in
mov
js
mov
or
or
nop
in
popf
mov
lcall
sbb
test
jne
jbe
mov
sub
adc
std
iret
mov
andb
and
sbb
sbb
xlat
test
imul
xchg
stos
or
adc
sbb
cmp
callw
lods
sub
mov
addl
sub
movsl
push
mov
sti
or
mov
fdivl
out
push
inc
frstor
mulb
jne
mov
les
fsubl
stos
cmp
jmp
xchg
hlt
fnstenv
cmp
jge
xor
add
stos
addr16
adcl
xchg
outsb
pop
inc
aas
daa
and
inc
in
movsl
mov
out
adc
aam
push
roll
loopne
ret
mov
jg
sub
mov
sub
sub
xor
and
mov
mov
test
scas
movb
cmpl
or
mov
sti
loopne
push
dec
pushf
scas
mov
sub
jb
fistpll
loop
enter
pop
dec
leave
test
mov
adc
pop
fldcw
push
rcll
in
sbbl
les
pop
fnstsw
enter
jge
add
jmp
cmpsb
mov
jnp
jmp
inc
or
xchg
adc
mov
addl
sbb
pop
cmp
daa
push
or
pushf
insl
pop
push
test
xchg
mov
mov
mov
repnz
mov
cltd
or
add
xor
jecxz
mov
pop
mov
lock
or
mov
int
jg
sti
leave
out
xchg
cmp
test
pop
sbb
adc
pop
sahf
inc
orl
jle
dec
dec
addr16
jmp
scas
popf
push
out
js
fsubrl
push
push
subl
mov
aad
lahf
enter
inc
mov
adc
fistps
xor
insb
cltd
out
mov
mov
adc
adc
pop
mov
inc
addr16
sub
jb
inc
mov
mov
cmpsb
cmp
fsubrs
scas
mov
pop
or
test
xchg
sub
xchg
adc
mov
add
or
and
imul
cmp
pop
repz
and
iret
or
sub
xchg
fmuls
and
scas
push
sbb
dec
jno
and
mov
in
sub
sahf
mov
enter
enter
xchg
pop
add
sbb
xchg
outsb
mov
jecxz
cmc
push
les
xchg
xlat
ja
das
adc
nop
or
lock
jo
mov
dec
faddl
add
xchg
jge
jne
fbstp
dec
int3
cs
cld
cltd
mov
cmp
lock
frstor
cmp
inc
or
test
cli
jl
mov
xchg
mov
xchg
xchg
cmp
lahf
es
push
jecxz
xor
jb
scas
push
int
test
loopne
outsb
ss
mov
pop
fcmovu
xchg
ds
shll
insl
int3
or
inc
sti
mov
xor
sub
pop
fistps
loope
cmc
das
mov
dec
add
dec
sub
xor
inc
mulb
rcll
in
int
pop
fbld
and
cltd
push
cmpsl
dec
dec
sbb
mov
test
dec
or
stos
jl
pop
mov
mov
jle
mov
add
lret
lahf
out
into
xchg
inc
add
mov
xchg
int3
push
xor
mov
mov
add
add
push
pop
sti
in
sbb
push
loope
jg
pusha
or
loope
and
adc
sbb
rorl
aad
insl
mov
and
shlb
jno
dec
fmul
add
fwait
les
jl
cmc
adc
mov
test
and
mov
xor
pop
push
pop
or
sbb
pop
add
cmp
mov
ds
shr
jae
push
js
aas
pop
jbe
nop
jno
xchg
cmp
addr16
and
jg
das
mov
jo
in
xlat
ds
jne
adc
mov
adc
bound
cmp
sub
hlt
sbb
push
fwait
js
and
inc
mov
ret
mov
mov
mov
sbb
push
jmp
mov
sbb
addr16
in
and
imull
bound
in
pop
mov
jnp
inc
push
or
xlat
pop
shl
jbe
xchg
or
mov
mov
mov
in
add
push
pop
imul
mov
je
xor
xchg
movsb
lds
dec
mov
mov
mov
inc
push
aad
push
lods
shll
and
jb
dec
in
push
cltd
in
inc
shlb
and
adc
ret
mov
or
aas
loopne
adc
push
rcll
cmp
jmp
cld
pop
xchg
jp
pop
addr16
out
data16
add
lret
shll
subb
call
decb
mov
fsub
stos
sbb
adc
push
mov
insb
inc
scas
add
shrl
mov
popa
leave
lods
mov
push
push
pop
pusha
adc
lcall
sub
pusha
in
cmp
cs
in
cs
aas
call
lods
xchg
push
cmp
xchg
fucomi
jmp
mov
cltd
inc
pop
sub
or
pop
jne
lea
lahf
leave
xchg
jb
xchg
js
ja
aas
inc
sub
mov
in
movsl
sub
int3
pop
repnz
rolb
jo
test
push
push
shlb
bound
fmul
fucomi
into
adc
inc
dec
pminsw
ds
in
pop
sahf
mov
xchg
xor
or
incl
dec
and
hlt
inc
jg
imul
mov
hlt
cs
ret
push
dec
in
add
add
lret
lahf
inc
jo
cmp
fldenv
xchg
xchg
jae
mov
lret
dec
loop
hlt
cmp
jecxz
and
rcll
out
mov
or
xor
fs
in
dec
jl
mov
lcall
insl
out
pop
dec
into
cmc
and
inc
xchg
addr16
jbe
imul
scas
popa
inc
pop
pusha
pop
and
inc
loopne
push
mov
mov
and
bnd
mov
out
push
and
ret
sub
cld
lods
in
xchg
iret
push
cli
add
mov
jns
cmp
int
xlat
inc
pop
add
mov
or
ficoms
shlb
das
pop
jecxz
das
nop
pop
pop
fcoms
out
in
ja
stos
pop
in
pop
mov
stos
push
js
xchg
mov
cwtl
or
xor
jg
call
or
jl
loope
cmp
cmp
pop
pop
cmp
fists
inc
in
jmp
pusha
jmp
shr
cmp
xchg
repz
mov
in
pushf
cmp
xor
push
jge
mov
xchg
or
mov
test
lds
iret
xchg
icebp
loop
lahf
ret
sub
outsl
sub
lods
jp
out
mov
pop
popf
fcmovne
jecxz
mov
sbb
mov
inc
aad
cwtl
add
xchg
jnp
fdivrl
aad
loop
sarl
cmpl
sti
mov
in
aaa
mov
add
cld
dec
ja
sub
xchg
ret
rcrb
sub
scas
xlat
sarb
test
into
sub
mov
or
and
inc
sub
dec
adc
imul
mov
sarl
xchg
xor
xchg
adc
arpl
jge
fldcw
sbb
lret
cld
frstor
cmp
rcll
xchg
lods
das
andb
fwait
mov
or
mov
jns
idiv
scas
stos
mov
jg
pop
loopne
push
popa
loop
push
mov
sahf
and
inc
lcall
out
in
nop
popa
arpl
or
or
pop
cld
cmpsl
jo
pop
or
cli
les
stos
sti
cmpb
push
pop
push
xor
arpl
loope
or
xor
sahf
repnz
cltd
orl
inc
mov
mov
in
push
jbe
dec
dec
das
mov
fnstcw
mov
lds
outsl
mov
int
inc
mov
cmp
pop
sub
or
fcoms
ret
adc
add
inc
insb
cmp
adc
loop
sarb
or
test
push
cli
mov
xchg
cmpsb
inc
in
or
into
push
insl
mov
addr16
add
in
and
xor
adc
dec
pop
orb
rcrl
test
mov
add
adc
inc
xor
dec
mov
js
cmp
int
mov
insl
lods
xchg
or
mov
dec
mov
mov
push
pusha
xlat
repnz
or
mov
jp
or
call
adc
ret
icebp
jbe
sub
push
jge
in
in
pushf
add
ljmp
jp
sub
clc
in
xchg
stc
loop
fnstenv
js
aad
ss
repz
dec
rorb
ljmp
cmpsl
xchg
or
and
xchg
movsb
icebp
mov
std
mov
pop
es
jmp
out
mov
mov
sub
jmp
dec
test
aas
rclb
xchg
cwtl
cmc
popl
gs
xchg
mov
add
mov
dec
xchg
cmpsb
push
sbb
mov
add
pop
pop
jae
loopne
daa
or
outsl
lds
repnz
popf
cmp
cmc
push
or
adc
inc
cmpsl
bound
inc
xchg
mov
mov
push
dec
cli
xchg
subl
add
mov
cmp
pusha
addr16
ja
cmc
loope
adc
arpl
jo
pop
mov
cld
adc
mov
out
mov
shll
mov
pop
in
mov
cli
jno
xchg
or
xor
pop
mov
pop
and
insl
mov
xlat
out
movsb
iret
inc
das
ja
scas
cmp
into
addr16
jmp
sbb
mov
pop
data16
adcb
add
push
mov
call
bound
out
xor
inc
mov
push
xor
rclb
push
cmova
inc
addr16
lahf
movsb
aaa
hlt
pop
jb
adc
inc
add
pop
cmpl
push
mov
cmp
jp
xchg
push
cltd
das
shrl
lea
lods
pop
ror
jl
mov
push
imul
mov
out
fildl
xchg
mov
loope
or
xchg
rol
adc
popa
pop
push
pop
je
inc
mov
outsl
mov
shl
add
mov
or
jo
cltd
pusha
and
mov
dec
jo
popa
lret
jb
pushf
in
xchg
cld
push
pop
andb
sub
dec
xor
mov
insb
or
mov
out
les
mov
aad
pushf
stc
movsl
rclb
push
push
push
cltd
inc
data16
in
imulb
in
data16
repz
bound
loopne
xor
sub
stos
or
xchg
psrlw
fsub
cwtl
cwtl
es
bound
lea
inc
out
adc
cmp
jge
xlat
rorb
inc
xchg
push
xchg
es
test
push
orl
cmc
das
addr16
shl
scas
mov
jg
icebp
xor
ret
adc
push
push
ror
je
sahf
push
rolb
sbb
mov
es
mov
leave
xchg
inc
fadd
ja
mov
dec
mov
scas
xchg
push
mov
and
xchg
xor
imul
mov
jns
in
xchg
sbbl
fs
mov
xor
sbb
mov
addl
fisubrl
adc
insl
stos
pop
adc
iret
jl,pt
andb
and
mov
pushf
pop
lock
movsb
push
rclb
aaa
cmp
sub
and
out
ljmp
lock
sbb
leave
pop
lret
inc
mov
shlb
test
leave
jge
mov
cmp
std
xlat
sbb
in
xor
xchg
xchg
inc
data16
enter
ja
aam
inc
fmull
xchg
mov
dec
adc
icebp
dec
jmp
jge
arpl
pusha
test
outsl
stc
mov
inc
cmp
push
jge
jmp
cmp
ljmp
gs
lahf
push
jg
inc
add
sti
call
lods
or
inc
idivl
loope
in
jne
push
or
xchg
stos
in
jne
mov
lea
xchg
js
adc
popa
cld
xor
test
and
xchg
loope
outsl
mov
mov
aam
movsb
dec
xor
int
push
xor
fs
sbb
cmp
pop
fwait
push
mov
sbb
and
mov
insb
imul
mov
test
cmc
jbe
pop
dec
adc
popa
jg
jp
adc
and
jbe
call
mov
lods
push
clc
das
xchg
out
cwtl
and
jl
dec
mov
push
cmp
push
and
jae
les
daa
pop
push
push
jb
enter
inc
fs
data16
stos
les
rcr
out
adc
push
test
mov
arpl
imul
xchg
or
push
repnz
sub
xchg
pop
or
insl
es
jge
pusha
clc
lods
push
int3
pop
test
repz
push
cmp
xor
inc
enter
pop
out
stos
out
repnz
lcall
cwtl
or
cld
sbb
pop
fistpll
sti
addr16
jge
jg
sbb
ret
add
data16
mov
pop
int
push
frstor
adc
ret
cmc
dec
cmp
push
push
aad
pop
enter
je
retw
jmp
insb
shlb
insb
repnz
es
rcrb
faddl
and
or
fld
imul
enter
popf
imul
outsl
les
add
out
orps
add
roll
pop
pop
sub
negl
nop
rorw
je
pop
mov
xchg
add
push
cmp
sti
jg
mov
pop
sub
clc
je
imul
mov
ss
fmul
pop
cmova
sub
fnstcw
aas
out
jl,pt
mov
cs
lahf
jge
and
arpl
push
js
pop
test
loop
lds
outsl
ds
push
xchg
sub
mov
xor
bound
ljmp
test
pop
icebp
xor
mov
out
jg
adc
fdivl
dec
push
and
cwtl
cmp
roll
and
dec
xchg
dec
mov
das
push
lret
fistps
xchg
mov
cli
sbb
and
lret
mov
push
fnstsw
gs
pop
ljmp
aad
outsl
jmp
push
inc
jb
std
push
cmpsl
push
jmp
and
push
adc
ds
iret
xchg
push
cs
movsb
cmp
jge
mov
les
sub
cwtl
scas
or
xor
mov
sbb
dec
in
mov
in
xchg
aaa
push
dec
mov
aad
mov
rclb
push
jmp
xor
push
adcb
push
lret
mov
dec
fcoml
mov
gs
inc
xchg
mov
mov
xchg
ja
nop
dec
and
push
jb
mov
xchg
adc
push
push
aaa
bound
aad
lods
push
lods
sbb
stc
inc
cmp
jmp
lcall
xchg
icebp
pop
or
lahf
jbe
ret
lahf
dec
cmp
inc
push
and
push
adc
lret
loopne
dec
pop
sub
fs
xchg
dec
out
dec
bound
and
frstor
jbe
xor
mov
pop
xor
dec
cmp
push
adcb
fcmovu
shrb
sbb
fisttpll
push
mov
push
xchg
data16
xchg
fnstenv
xchg
js
adc
pop
cmp
and
add
mov
aad
ds
sbb
mov
sbb
xor
jo
cwtl
fisubrs
sahf
fchs
xor
scas
and
sbb
inc
fimuls
add
adc
xchg
sub
xchg
inc
adc
cwtl
cmp
es
sub
push
pop
adc
push
sbb
jle
add
inc
xor
in
ds
fs
in
loopne
insl
mov
add
nop
sarl
jno
imul
cmp
mov
adc
arpl
std
cmpsl
lods
xchg
pop
mov
outsb
fisttps
dec
iret
mov
push
arpl
leave
adc
mov
inc
out
movsb
mov
test
stos
pop
je
mov
cmp
pushf
mov
or
sub
cmp
mov
and
mov
cmpsb
hlt
cmp
cmc
push
fs
lahf
add
into
push
or
xchg
decb
lock
nop
push
and
sbb
dec
push
cli
pop
mov
les
divl
and
xor
fimull
es
xchg
or
push
cmp
pop
add
int3
push
xor
sahf
mov
mov
movsb
lea
mov
xor
loopne
or
and
sbb
xchg
mov
xor
mov
pusha
repnz
sti
jp
lret
bound
dec
subb
imul
cwtl
mov
inc
pop
cmpsb
sub
fsubl
push
cmp
jns
mov
negl
sahf
jbe
in
cmp
inc
mov
or
addr16
gs
leave
andb
push
inc
loop
imul
js
test
adc
jnp
and
xor
push
and
arpl
into
in
fmull
xor
mov
lds
call
push
inc
xchg
xchg
mov
je
mov
hlt
lds
stos
xor
and
mov
sbb
lcall
push
add
xchg
xchg
mov
mov
cmp
loopne
add
lock
push
addb
push
mov
bound
inc
jmp
dec
ds
jno
cli
xor
imul
aaa
push
push
fisubrl
js
add
pushf
dec
sub
mov
xlat
repz
popf
test
push
popf
mov
pop
mov
repz
cmpsl
sub
jo
sbb
sbb
imul
and
lock
addb
sbb
jecxz
shll
jmp
sahf
sub
cli
xchg
fiadds
clc
and
xchg
pop
jg
in
jae
neg
cwtl
in
inc
mov
and
xchg
jno
xorl
popa
or
sbb
addr16
pop
divl
add
mov
gs
leave
and
stos
rcll
or
add
mov
lea
cltd
inc
xchg
ret
cmp
lcall
mov
negb
dec
add
dec
adc
nop
bound
jle
xchg
sub
push
push
push
jb
cmp
sbb
into
xchg
iret
adc
adc
mov
sub
pop
mov
xchg
aas
mov
stc
mov
test
fldcw
fwait
addb
jnp
rclb
cmc
les
adc
push
movsb
call
dec
cli
aaa
jp
rclb
and
and
add
inc
pop
cmpsb
out
movsl
addr16
push
xlat
lret
cs
outsl
icebp
enter
test
fdivrl
sbb
icebp
sbb
rolb
pop
add
adc
sbb
popf
shlb
adc
mov
jmp
mov
ret
daa
bound
lret
mov
xor
adc
sbb
adc
xor
clc
cmp
jne
sub
xor
pop
sbb
mov
inc
sbb
add
mov
mov
jp
or
dec
ds
shlb
sbb
ja
dec
in
leave
lods
not
and
sub
cs
cs
push
je
aaa
push
int3
jp
cmp
scas
push
ret
xchg
enter
fs
pop
and
mov
add
sbb
cmp
or
inc
sbb
sub
sbb
add
aaa
shr
into
shrl
xchg
cmovae
jl
and
imul
xchg
mov
out
cmc
lods
mov
popl
std
inc
pop
xchg
add
lods
sbb
repz
and
inc
mov
jmp
cmpsb
lock
dec
push
fs
xchg
testl
inc
cmp
int3
les
lds
sbb
and
in
icebp
test
lahf
rolb
jl
jae
xlat
fadds
aad
out
movsb
xchg
dec
xchg
cmc
mov
sbb
insb
mov
lds
mov
dec
popf
inc
cmc
cmp
dec
cmpb
decb
mov
xchg
jle
jbe
rcll
jl
mov
cmp
lahf
sti
sub
sti
mov
sbb
repz
inc
mov
xor
mov
dec
iret
mov
push
loopne
mov
mov
pop
jbe
clc
pop
push
data16
cs
xchg
and
push
dec
push
jne
mov
rolb
add
push
outsb
sbb
fiadds
lods
shl
mov
cmp
fwait
dec
and
mov
out
aas
adc
jle
mov
sti
ja
inc
jae
lea
mov
es
imul
xor
scas
cmpsl
xor
lcall
inc
push
lret
pop
std
cmp
push
data16
popf
pop
jl
pop
stc
fnstsw
repz
xchg
iret
sub
or
loope
sbb
lcall
popf
out
adc
sub
je
dec
test
stos
xchg
jnp
call
mov
or
outsl
push
adc
fstl
popa
push
xor
sbb
shll
jae
fsubs
jb
mul
idiv
ljmp
sub
test
mov
fnstsw
ds
jp,pt
fsubr
cltd
outsl
popf
jmp
fstl
push
in
push
mov
sbb
jbe
lret
jo
aam
js
or
mov
dec
and
jge
mov
jne
cld
mov
add
popf
loopne
xlat
or
aam
movsl
adc
in
jl
dec
cmp
inc
testl
mov
orl
das
adc
sti
dec
addr16
push
mov
mov
scas
outsb
lcall
pop
scas
shrb
stc
mov
sahf
cmp
inc
mov
mov
lock
and
call
sbb
ret
mov
jae
and
pop
sahf
daa
inc
addr16
mov
cmp
cmpsl
and
pushl
mov
mov
xchg
fidivs
mov
rorl
aaa
scas
sub
lods
cwtl
ret
adc
xor
mov
push
clc
push
clc
mov
andb
and
or
fisubrl
push
pop
push
int
loopne
loopne
inc
pop
pop
pop
adc
jge
cmpsb
cmp
iret
ret
enter
jmp
insb
push
iret
sub
mov
mov
mull
les
outsb
push
out
ffreep
mov
sbb
dec
and
out
inc
xor
cmp
jb
jo
sbb
push
orb
pop
nop
stc
les
inc
lods
pop
nop
ja
pop
inc
int
push
mov
jo
popf
add
sub
cmp
cs
into
jnp
pop
jl
push
adcl
mov
sarb
scas
loop
mov
test
lcall
or
repz
cmp
jns
xor
and
jp
test
mov
ret
add
xchg
push
xor
aad
xor
mov
mov
jp
popf
and
imul
pop
fimull
movsl
lret
out
mov
add
in
out
or
rcrb
push
ficomps
and
insb
dec
faddl
xlat
push
cmp
insb
cmpsl
xchg
and
sbb
pop
int3
into
js
pop
xor
std
js
aas
jmp
push
out
pop
xlat
lock
jl
les
jg
push
cwtl
add
pop
xor
sub
mov
movsb
mov
pop
mov
sarl
adc
fisttpl
and
rorl
inc
adcb
add
loopne
out
xorb
movsb
push
xchg
pop
out
insb
cmp
mov
xor
or
mov
mov
mov
jmp
cmpsb
lret
cltd
mov
sub
pushf
push
out
adcb
cmp
call
popa
xor
pop
adc
lea
lret
je
mov
loopne
addb
sarl
mov
pop
mov
cltd
sbbl
add
pop
mov
cmc
pop
iret
add
sti
cwtl
cmc
inc
dec
pop
repnz
notl
sub
cmp
mov
cs
adc
stos
rol
in
push
add
jbe
mov
sbb
sahf
pop
xor
stos
mov
mov
sbb
ds
jecxz
data16
je
dec
ss
sahf
bound
loope
subb
movsb
ss
cmp
jae
mov
jl
or
or
ljmp
adc
jb
insl
push
mov
icebp
cli
mov
xor
xor
fbld
cmp
insl
pop
shlb
or
outsb
sub
inc
push
and
mov
hlt
cs
fdivs
or
roll
cld
cmpsl
rclb
jecxz
cmp
sbb
rcrb
sub
repz
dec
mov
lret
shr
adc
add
into
inc
popa
xchg
xor
xlat
adc
sbb
insl
out
pop
insl
stc
mov
cli
jns
sub
mov
inc
inc
mov
jge
cmp
subb
and
bound
push
mov
lret
movsl
testl
test
out
xor
push
xchg
popf
lret
shll
adc
fwait
mov
test
addb
imul
es
sub
and
add
sub
ret
xor
loop
fwait
rorl
andb
dec
mov
imul
adc
lods
dec
or
aam
mov
xor
xor
neg
cltd
negb
xchg
dec
ja
mov
jbe
cmp
jl
pusha
fiadds
or
in
mov
jnp
pop
mov
out
fidivrl
sub
dec
movsl
xchg
stc
mov
adc
push
repz
sar
xchg
jnp
adc
cmp
add
jbe
push
loope
inc
push
popl
rol
pushf
dec
aaa
outsb
push
lret
mov
cmovbe
xchg
pop
divl
xchg
xor
push
add
call
pop
test
sub
pop
insl
lods
hlt
das
sarb
xchg
je
xor
dec
mov
push
xchg
cmp
movsl
jno
lea
push
in
mov
jo
pop
loope
pop
sbb
xor
xchg
sub
sbb
xchg
jge
jmp
mov
stos
xlat
mov
cmp
push
push
loop
mov
ds
mov
push
imulb
movsl
shlb
cmp
inc
inc
fmull
das
mov
mov
punpckhdq
movsb
cld
xor
addr16
aam
daa
inc
jl
mov
xorb
mov
xor
in
jl
inc
into
adc
push
stos
pop
jno
scas
dec
pushf
sub
or
cmc
mov
cwtl
push
in
mov
jg
sub
scas
jb
push
xlat
and
push
xor
dec
ds
out
cmpsb
sub
cmp
cld
aad
cmpsb
mov
mov
sub
mov
xchg
ret
jae
sbb
std
jae
outsb
sub
inc
push
loop
mov
pusha
loopne
testl
pop
mov
ret
mov
jg
pop
sahf
aaa
sub
push
adc
ret
or
jmp
stos
lret
pop
adc
xor
or
mov
movsb
mov
iret
sbb
test
and
and
mov
sub
into
mov
stc
xor
bound
push
ss
cli
push
and
nop
mov
add
jo
cmp
dec
inc
jno
repz
pop
inc
xor
into
jge
int
mov
add
idivb
and
hlt
jbe
out
inc
sbb
nop
dec
push
aad
jl
sahf
jns
jl
sbb
add
cld
cmp
and
decl
dec
pop
or
loope
fistps
mov
jg
dec
notl
aas
notl
in
mov
inc
aaa
add
stos
popa
fwait
in
ja
inc
repz
js
in
xchg
cmpsl
jno
scas
pop
push
ret
popf
scas
movsb
pop
outsb
mov
dec
add
leave
or
dec
dec
and
pop
mov
mov
jle
pop
lds
or
jo
nop
add
call
lock
test
sbbb
cmp
mov
mov
iret
push
scas
or
mov
sub
sbb
xor
cmc
je
iret
jo
out
outsl
pop
xchg
shrb
mov
xchg
aam
ja
add
icebp
jecxz
stos
rcrl
mov
pop
adc
pop
mov
dec
idiv
dec
movsl
cmp
outsb
orb
pop
dec
sbb
cmp
xchg
imul
js
adc
and
rorl
mov
imulb
test
cmp
xor
xlat
cmp
outsl
dec
mov
pop
mov
arpl
dec
mov
idiv
or
push
adc
loop
or
repnz
adc
sub
loop
pop
test
mov
mov
cmpsl
pop
out
cmpsb
push
dec
pushf
adc
movsb
pop
pushf
sbbb
scas
cwtl
adc
add
inc
test
xchg
movsl
jp
cltd
and
movsb
das
sahf
insl
dec
mov
orb
or
xor
arpl
in
dec
push
dec
popa
pop
insb
push
outsl
push
push
daa
inc
push
pop
iret
popa
enter
lret
dec
mov
or
je
pushf
adc
sar
cmp
dec
inc
bound
pop
mov
inc
fs
sbb
lret
call
mov
inc
push
stos
addl
jb
dec
mov
icebp
cmpsl
inc
cmp
arpl
inc
enter
stos
clc
cmp
mov
mov
mov
imul
push
sub
popa
in
in
bound
cld
hlt
xlat
cmp
ljmp
ja
mov
pop
adc
sarl
out
dec
iret
decb
leave
sub
test
lret
and
shlb
jg
mov
push
lds
insb
or
adc
xor
mov
scas
sti
jns
cmc
xor
mov
adc
mov
push
test
loopne
mov
xchg
mov
pop
and
pop
xlat
xchg
cmc
test
push
roll
inc
xlat
lock
dec
sahf
xchg
orps
test
lea
sbbl
mov
subl
or
frstor
jbe
mov
aas
sub
or
mov
dec
in
cltd
insl
nop
std
mov
add
mul
sbb
test
outsb
les
or
pushf
jno
inc
xchg
sub
aad
pop
or
cli
pushf
aaa
fstpl
data16
jb
xor
daa
imulb
inc
rcl
lods
icebp
pop
in
inc
lea
xchg
mov
arpl
sahf
or
pop
mov
jle
jns
negl
sub
sbb
mov
ljmp
push
lahf
test
dec
push
xlat
cs
ret
mov
push
xchg
dec
repz
jnp
scas
or
lcall
or
and
sbb
dec
in
xchg
push
jmp
jne
lret
fadds
and
insb
lods
mov
push
popa
insl
inc
addb
les
push
insb
mov
jae
cmp
aam
sbb
xlat
xor
mov
movsb
out
push
sub
mul
je
dec
xor
inc
xor
shll
fstp
out
std
sub
mov
xchg
pop
inc
push
cmc
mov
test
cltd
pop
cmpsb
or
mov
test
ret
add
mov
daa
ret
jle
mov
dec
jl
pop
js
and
mov
rolb
fnstenv
add
sbb
ret
test
in
xlat
and
and
into
xlat
aam
xlat
xchg
mov
jecxz
mov
xor
jb
pop
add
cwtl
aad
insl
cmpsl
andl
push
nop
cwtl
arpl
popf
and
dec
cld
jnp
mov
ds
aad
mov
insb
mov
jp
imul
loope
pop
pushfw
xchg
sti
pop
ljmp
insl
xchg
mov
jno
dec
ja
sahf
shl
mov
loopw
add
lahf
cmpsl
test
push
jbe
xor
xchg
ja
and
jae
cmp
pop
push
jb
movsl
adc
movsb
test
repnz
mov
out
std
mov
pusha
xchg
xchg
adc
arpl
mov
leave
add
dec
push
pop
xchg
outsb
dec
fsubl
cmpsb
xor
lahf
push
hlt
movsl
lret
or
push
bound
fsubl
sub
cmp
xchg
xchg
pop
cwtl
inc
adc
sub
adcl
pushf
pop
pushf
stos
arpl
lcall
dec
pop
pushf
mov
mov
pushf
pop
fldl
pop
into
add
dec
mov
ss
repz
repz
xchg
xor
clc
ss
repnz
roll
imul
dec
and
int
popa
fisttpll
push
mov
cli
jl
cmp
test
loop
xor
cld
pop
repz
xor
mov
adc
out
mov
dec
lcallw
js
push
add
push
mov
gs
in
rorb
cmp
push
push
rcr
jno
add
cltd
in
inc
cmp
jp
lods
xchg
push
or
gs
stos
data16
jns
outsb
cmc
cli
jl
dec
sbb
xchg
repz
sbb
adc
je
jo
mov
stos
cmp
std
push
mov
jb
daa
insl
int
cmp
mov
lods
push
mov
outsb
jl
adc
fstpt
mov
data16
fsubr
sub
and
dec
xchg
and
sub
dec
aad
out
bound
sbb
mov
or
mov
cld
repz
push
and
or
popf
fildll
dec
pop
lea
sub
and
pop
data16
push
push
xchg
fisttpll
xchg
stos
sbb
jge
test
sbb
loop
int
leave
mov
mov
or
fnstenv
cmpsl
push
push
and
inc
out
push
mov
imul
mov
leave
jnp
data16
pop
fisubrs
mulb
lret
jmp
notl
loope
adc
and
sub
js
fisubrl
mov
adc
ds
js
std
ficoml
inc
hlt
mov
movsl
xor
push
scas
fst
push
ja
add
dec
in
aas
xchg
cltd
adc
xchg
dec
hlt
and
mov
sbb
rorb
mov
ja
std
mov
lock
xchg
sbb
jl
pop
pop
leave
xchg
movsb
dec
std
rclb
lcall
lea
inc
mov
jbe
mov
inc
adc
sbb
add
jge
fsubrs
cli
int
xchg
mov
add
ficoms
sbb
push
enter
mov
js
mov
sub
call
sbb
es
dec
cmc
arpl
xchg
in
loope
je
lods
lds
inc
mov
inc
cs
and
fcomps
and
mov
stos
add
push
cli
mov
notl
inc
mov
add
mov
popf
cld
or
in
scas
push
sub
inc
adc
pop
cmp
push
mov
loopne
out
not
inc
cwtl
out
cli
sub
mov
jne
jecxz
das
sti
mov
nop
push
adc
cli
out
push
push
dec
pop
adc
mov
jae
pop
pop
jp
mov
mov
js
push
push
loope
adc
nop
or
in
mov
inc
adc
lods
mov
push
xchg
mov
pop
lcall
cmp
testl
push
push
xchg
dec
pop
mov
add
inc
sub
and
repz
jl
movsb
jl
xor
outsl
or
jno
leave
xor
xor
pop
ja
jb
movsl
fstpt
push
lock
dec
hlt
ret
out
sbb
mov
les
inc
shl
test
shrb
mov
xchg
incb
into
ss
mov
and
xor
add
push
scas
pop
insl
xchg
outsl
or
pop
mov
sbb
jns
cmp
push
movsb
adc
and
mov
xchg
icebp
arpl
add
xchg
mov
jo
push
outsb
or
popf
push
je
cmc
push
fsts
mov
fnstcw
es
and
test
and
inc
jecxz
out
dec
cs
jne
cli
pop
dec
mov
or
enter
sbb
jbe
rorb
lods
lcall
cmp
dec
mov
jb
inc
addr16
aad
push
in
sti
js
clc
push
sub
xor
arpl
imulb
js
cmp
mov
imul
xchg
jmp
or
clc
mov
mov
jns
popf
lods
mov
jae
imul
test
pop
nop
cmpsl
and
sub
xor
add
icebp
nop
inc
popf
repnz
pop
insl
adc
inc
fisubrs
out
and
aas
inc
push
ja
in
scas
or
sub
mov
and
std
xchg
and
cmc
and
lea
pushf
outsb
out
mov
mov
mov
and
add
sub
cmpl
mov
ss
jo
push
sub
cli
in
scas
gs
loopne
mov
inc
lcall
mov
lds
shr
xchg
jmp
or
add
push
sahf
lea
inc
pop
and
loope
sarb
std
dec
inc
leave
push
inc
cmp
push
shl
jnp
sarl
add
add
mov
incl
ja
lcall
pop
xchg
cmpsl
rolb
pop
push
mov
add
daa
addr16
dec
inc
movsl
sbb
sub
cmp
sbb
mov
dec
lds
insl
xchg
pop
sbb
pushf
stos
mov
pop
push
and
imul
xchg
fisubl
int3
mov
lea
call
pop
or
inc
xrelease
cld
cmova
and
mov
adc
stc
pop
xor
or
push
ljmp
xchg
dec
inc
xchg
aam
test
into
ret
sub
fcomps
sub
ljmp
add
in
aam
adc
mov
cli
pop
dec
inc
fs
scas
adc
sub
leave
xor
nop
pop
sub
mov
dec
shl
insb
pop
adc
call
loope
xor
shrl
dec
pop
std
pop
mov
xchg
outsb
pushl
aaa
pop
or
outsl
fimuls
mov
xchg
stc
popa
rcr
lea
xor
insb
jno
xchg
and
mov
dec
insb
xor
sub
stc
xchg
sub
pushf
or
xchg
push
lods
ljmp
mov
sbb
in
movsb
fidivl
push
nop
inc
int
lds
pop
add
jo
and
icebp
imul
decb
inc
sbb
adc
outsl
mov
inc
jns
clc
cmp
fdivl
out
dec
outsl
fs
or
jb
insb
dec
shlb
xchg
cmpsb
sbb
pop
push
pop
loopne
dec
xchg
pop
xor
jmp
cmpl
and
into
mov
cmc
pop
push
mov
ret
adc
and
lock
pop
or
test
add
lods
push
jp
dec
inc
lods
fisttps
xlat
dec
sbb
xchg
xchg
and
inc
jae
adc
andb
ficompl
shll
add
sbb
mov
sub
cmpsl
dec
mov
cld
mov
xchg
mov
dec
sub
and
mov
sbb
cs
int
mov
adc
out
jmp
cmc
xchg
insb
addr16
fcoml
xchg
mov
ds
ss
mov
adc
xor
hlt
mov
xor
outsl
sub
loopne
imull
dec
gs
idivb
movsb
test
mov
xchg
imul
cmp
ja
fsubrl
je
mov
pop
jle
lret
sbb
or
leave
fsubl
adcb
stos
xor
fs
ljmp
neg
insb
lcall
loopne
push
mov
sbb
mov
push
xchg
nop
and
sub
jmp
daa
sub
jecxz
andb
inc
dec
push
frstor
add
addr16
lahf
add
dec
ret
test
sub
inc
push
lret
enter
mov
push
pusha
aad
pop
mov
adc
xchg
ret
adc
out
mov
stc
dec
sub
pop
sbb
cmp
je
pop
xchg
dec
pop
rolb
and
add
int3
rcr
addb
dec
stos
repnz
jne
sbb
in
js
das
sub
mov
shrb
je
popa
stos
movsl
sar
xor
mul
out
scas
rclb
pushf
icebp
incb
test
adc
idivl
add
addr16
in
mov
aaa
es
mull
push
jno
add
add
mov
cli
push
dec
push
inc
lods
xchg
jb
pop
push
ljmp
xlat
sbbb
inc
jecxz
and
and
test
lret
clc
fnstcw
cmp
scas
fists
call
push
lret
test
jg
popa
mov
ret
pop
outsb
popa
jl
push
ret
inc
int
lcall
aad
ja
aad
dec
push
cmp
imul
loope
ss
fildll
xchg
stos
sub
test
sbb
cld
adcl
lock
rclb
cmp
dec
stos
dec
sbb
adc
outsb
int3
bound
stos
ja
mov
push
in
jns
xchg
add
subb
xchg
test
sti
pop
popa
out
pop
repz
dec
dec
mov
inc
cmp
sbb
call
and
dec
aad
ljmp
cmp
in
dec
lods
mov
adc
pushf
mov
add
push
push
shlb
jno
iret
out
or
dec
das
push
lret
mov
out
lods
out
cltd
push
hlt
mov
or
fucomip
sub
mov
rorb
outsb
pop
lea
dec
or
lret
repnz
fdivrp
and
ret
add
add
mov
mov
inc
clc
cmp
incl
sub
jnp
jno
xor
dec
fisttps
or
mov
pop
or
and
inc
pop
sbb
mov
int
sbb
fistpl
in
scas
mov
jl
int3
push
adc
ficoml
inc
int
inc
cmp
lock
lds
mov
mov
mov
jne
into
nop
mull
sub
movsl
sar
sub
mov
shlb
and
pop
repz
mov
cmp
rcll
add
pushf
dec
movsb
cmc
push
sub
cmp
inc
lret
test
push
mov
sti
test
test
int3
and
clc
mov
jle
push
ljmp
sub
dec
sub
gs
data16
cld
orb
push
mov
jne
or
cmpsl
jo
adc
repnz
mov
popa
add
lret
push
jl
or
out
insb
js
movsl
jg
cmc
movb
out
sbb
test
pop
mov
sarl
xlat
or
stos
in
and
adc
push
lds
and
push
inc
mov
or
test
inc
scas
gs
loope
jmp
cmpsb
lahf
inc
les
dec
cmp
adc
inc
jge
shlb
into
inc
sbb
xor
adc
nop
fcoms
pusha
mov
cmp
jle
dec
sbbb
ja
lret
mov
mov
and
pop
dec
sbb
inc
movsb
or
addr16
stos
xor
pop
mov
imul
jnp
dec
pop
sbb
js
das
ret
fcmovne
jmp
repz
sbb
addl
cmp
fmuls
xchg
int
xchg
mov
lahf
test
cwtl
scas
xchg
enter
in
cmp
mov
or
jmp
insl
mov
ret
adc
jnp
add
fmul
sbb
xlat
jmp
mov
pop
mov
popa
in
mov
pop
or
mov
add
repz
sbbl
push
mov
dec
test
push
or
es
test
jmp
movd
mov
inc
adc
pop
iret
xor
shll
sub
out
sbb
pop
xchg
and
xor
aam
test
pop
adc
or
push
mov
xlat
mov
rcll
hlt
mov
sbb
jg
xchg
aaa
loop
out
mov
arpl
out
add
lock
ficomps
insb
push
cmp
mov
xor
in
cmp
push
cmc
add
adc
xchg
insb
dec
mov
js
dec
insl
and
subb
inc
add
aaa
and
cmp
cld
sub
add
mov
xchg
xor
outsb
mov
nop
xchg
adc
inc
scas
pop
mov
das
aas
xchg
xor
or
pop
insl
xchg
imulb
xlat
mov
mov
adc
or
inc
xchg
cltd
js
sbb
inc
int3
lds
add
xchg
sub
sub
fsubs
gs
mov
mov
popf
mov
iret
pop
xor
mov
inc
jp
inc
shrb
popf
mov
adc
das
cmpb
js
xor
aam
dec
out
out
lods
mov
fs
paddsb
repz
rcrl
iret
adc
inc
into
jae
stos
or
out
pop
xor
cmc
imul
outsb
adc
aad
lds
inc
fstl
cmp
sub
dec
negb
clc
js
inc
nop
inc
dec
bound
cmp
or
sbb
adc
inc
mov
rcll
imul
xchg
xor
fs
sbb
or
mov
xchg
ret
push
movsl
and
scas
jp
xchg
les
jns
pop
push
pop
xlat
shrl
mov
ljmp
mov
bound
popa
das
push
dec
imul
sbb
cwtl
mov
jae
mov
adc
in
in
inc
adc
and
ds
or
jecxz
idivb
leave
push
outsl
sti
mov
add
push
rolb
or
pop
call
sbb
incl
movsl
mov
sbb
shrb
outsl
leave
jge
xchg
cs
ja
xor
push
mull
int
mov
add
mov
pop
nop
scas
std
popf
sub
xor
xchg
or
scas
mov
out
imul
movsb
mov
fs
fldl2e
add
inc
mov
imul
jb
xorb
mov
or
movsb
mov
dec
jae
fcoms
mov
xor
inc
cmp
fstp
imul
cmpsl
test
sub
stos
fdivrs
sub
jb
pushf
push
ret
test
mov
pop
mov
add
out
cmp
jo
andl
push
cmc
lcall
pop
pop
push
stos
pop
and
sub
and
jnp
popa
xor
pop
jmp
out
sti
inc
shll
nop
arpl
loop
pop
push
iret
push
movsb
insb
aam
pop
adcb
cmp
rorl
push
sbb
pop
pop
mov
idivb
jmp
inc
aaa
lahf
lods
adcb
dec
je
mov
fs
sub
hlt
imul
insb
dec
js
mov
sub
std
cltd
dec
xchg
inc
iret
loope
add
aad
xchg
loope
fildl
scas
arpl
or
icebp
fidivs
dec
jecxz
fldt
rcll
and
in
cmpsl
or
daa
xor
call
scas
jl
sarl
xor
nop
adc
and
fldcw
cmp
add
pop
jmp
add
inc
sbb
pop
cmp
jae
nop
and
out
xor
mov
cmp
outsb
jmp
test
lea
jecxz
jecxz
loopne
and
js
aam
mov
sub
jg
mov
cmpl
pop
xlat
push
ror
add
sbb
cmc
sbb
mov
jle
mov
mov
or
test
lret
arpl
push
lcall
in
pop
add
or
pop
lar
clc
add
jno
aad
mov
sahf
aas
xor
jbe
loop
ret
pop
jo
in
lahf
or
fcompl
stos
mov
out
xchg
bound
popl
inc
fs
lret
ret
or
mov
movsl
add
lock
lds
mov
pop
adc
insb
mov
mov
pop
fisubrs
imul
push
mov
lret
cmp
emms
shl
cmp
xor
pop
and
cmp
loopne
inc
test
leave
pop
pop
sub
popa
out
stc
sub
cmp
or
cmp
repz
mov
mov
dec
repz
mov
adc
sbb
xchg
sub
push
lcall
mov
fdivr
testb
jg
or
push
sbb
jp
je
xor
cmc
push
lods
int
test
scas
xor
push
inc
push
push
int
sbb
ret
jno
push
inc
sbb
lds
cmp
pop
jns
scas
int3
test
popa
jne
inc
push
or
fcoms
inc
cmp
test
data16
shl
pop
xchg
and
xlat
inc
int
and
mov
cld
mov
mov
outsl
xor
adc
insl
jns
or
lret
cwtl
jmp
ret
mov
push
fs
dec
test
xchg
or
push
inc
mov
pop
out
cmp
jb
adc
mov
xchg
pop
cmp
adc
imul
ret
jge
dec
xchg
xor
into
xor
pop
and
daa
movsl
shrl
cmp
cld
and
movsb
push
and
cmpsb
mov
xchg
jno
mov
push
and
outsl
fidivs
xor
lcall
in
mov
mov
gs
adc
aad
push
and
xchg
cmpsb
mov
in
inc
mov
mov
fisubrl
sub
ja
mov
xchg
shlb
ret
and
mov
push
icebp
adc
mov
andb
insl
out
mov
push
loopne
push
je
pusha
cmpsl
push
fbld
adcb
daa
aad
stc
bound
cmp
lret
cli
xor
out
mov
mov
rolb
shll
xchg
jg
popf
push
incl
mov
jle
sbb
les
xchg
shll
icebp
mov
jb
ret
cmpsl
pop
pop
pop
pop
scas
inc
pop
jo
jg
cmc
or
int3
repnz
cld
enter
xchg
inc
push
out
xor
insb
mov
xor
lods
add
xor
sbb
gs
sahf
sahf
test
in
dec
test
xlat
push
nop
ja
in
vmovupd
push
lea
cld
test
xor
es
ret
bswap
loope
rcl
and
ret
jbe
mov
add
sub
daa
scas
push
lret
popa
dec
pop
mov
and
cmc
cmovp
in
andl
insb
out
fsubs
pop
sub
cmp
je
sbb
cltd
sarb
mov
xor
js
outsb
int3
sbb
adc
insb
lock
pop
push
or
in
in
inc
mov
into
idiv
mov
insb
inc
insl
lds
mov
and
outsl
cmp
mov
mov
orl
push
lods
loope
pop
sub
ss
pop
cmpsl
pop
adc
jl
sbb
icebp
xchg
and
scas
or
cs
shrl
sbb
std
or
lret
mov
out
mov
je
stc
lahf
in
mov
ret
jg
pop
insl
fbld
push
int
fcmovnu
mov
subl
push
sub
shl
mov
and
addr16
xchg
dec
mov
mov
stos
daa
add
lahf
call
test
notb
adc
pop
adcl
cmp
ret
sti
in
ds
push
mov
rcl
out
dec
sub
rcrl
jae
push
or
sub
iret
push
test
out
sbb
test
insb
jmp
pop
cmpsl
and
pop
loopne
mov
push
push
das
adc
stos
aam
dec
mov
xchg
lea
mov
rol
cmp
enter
fistl
pop
outsb
pushf
jg
dec
cmp
jmp
sub
inc
test
out
adc
outsl
lock
add
cmpsl
roll
or
xchg
jb
outsb
mov
loope
xor
lret
hlt
out
in
pop
dec
test
mov
nop
mov
js
addb
cmp
xor
mov
adc
stos
mov
into
push
add
leave
scas
repnz
mov
xor
cmp
cli
mov
push
cmp
imul
add
mov
mov
push
jmp
sbb
sub
sti
data16
lods
out
inc
lods
and
dec
dec
scas
xor
adc
jns
mov
testl
sbb
adc
pop
jno
xchg
cmp
movsb
jmp
xchg
aaa
cld
popl
dec
xchg
push
das
cmp
in
test
push
adc
sbb
mov
int3
mov
fucomp
inc
xchg
leave
int
push
addr16
in
mov
xor
es
dec
inc
mov
test
movsb
xor
or
movsb
test
mov
mov
pushf
mov
jmp
sbb
mov
jne
cmp
mov
es
ds
je
fldt
jnp,pn
pop
and
pop
dec
stos
test
and
pusha
fdivrs
lods
xlat
pop
xor
or
mov
into
jne
mov
push
xchg
mov
imul
and
cmovg
mov
repz
mov
cmpsl
fst
cmp
out
jno
adc
xchg
or
mov
add
and
les
lods
add
insl
xchg
lea
push
pop
sub
sahf
fidivrs
or
and
icebp
add
pop
fsubp
sbb
scas
loope
jbe
sub
push
xchg
imul
cld
dec
pop
xorb
fmulp
in
push
popf
test
push
out
push
sbb
jge
mov
ret
adc
pop
mov
cmp
daa
fwait
call
ss
add
insl
ret
mov
mov
pop
mov
lds
aas
rclb
subl
dec
mov
ret
or
cmpb
pop
xchg
sbb
mov
jae
stos
cmp
jmp
cmp
nop
xchg
inc
daa
lock
ret
mov
enter
xor
pop
push
ret
dec
cwtl
add
pop
jns
ss
aad
ja
shll
int3
loop
out
inc
cmp
jno
movsb
lahf
add
fbstp
jle
xlat
adc
out
jle
lock
mov
jbe
add
inc
or
out
lea
push
or
mov
jb
cmp
push
pusha
sub
adc
add
pop
dec
xchg
insl
and
and
adc
loope
test
jmp
mov
movsb
fs
push
and
loope
dec
loop
js
repnz
sub
adc
cltd
mov
jle
shrl
inc
aam
xor
pop
test
fnstenv
rcrl
ljmp
int
sub
ucomiss
lds
cmp
test
xchg
test
cmp
inc
ljmp
ror
pushf
je
ror
mov
mov
push
xlat
sub
pop
call
add
pop
fcmovnbe
xor
sbb
jbe
je
push
cmp
in
ret
sub
inc
xchg
mov
test
pop
subb
dec
jp
and
xor
fxam
dec
int3
xor
pop
mov
shrb
sbb
insl
pop
adc
ds
lods
test
sbb
fisubs
dec
sbb
into
lcall
mov
sub
push
repnz
pushf
loopne
jno
test
das
testb
xchg
jmp
pop
cmp
pop
xor
push
or
xchg
mov
lods
lea
pop
or
dec
cld
jmp
loopne
fs
jge
xor
or
push
pop
jne
insl
jo
out
push
testl
lods
mov
in
stos
push
add
pushl
add
popa
aas
xor
decb
or
enter
jo
sahf
cld
mov
in
inc
jno
jo
mov
mov
addr16
ss
repz
call
pop
icebp
jl
mov
clc
xchg
mov
mov
mov
and
shrl
hlt
daa
add
lret
repz
nop
mov
mov
mov
xchg
nop
adc
stos
add
lret
push
push
jno
inc
mov
in
mov
aam
mov
leave
movsb
add
push
xchg
jl
add
mov
outsb
sub
stos
test
jns
jo
push
popf
pop
roll
xlat
in
xlat
jge
das
xor
sub
gs
jg
or
or
xchg
cmp
xor
mov
popa
or
rcrb
mov
fistpll
rol
repz
mov
shl
js
into
mov
lcall
mov
movsb
testl
xchg
cs
jle
pop
imul
pushf
or
cli
int
mov
or
shl
pop
fidivrs
ss
sub
cmp
xchg
jb
jno
fs
movsb
cmp
or
lahf
rclb
aam
mov
push
mov
fidivrs
cmc
popa
inc
mov
sub
inc
mov
dec
daa
mov
enter
cmpsl
pmulhw
add
in
and
mov
aad
mov
enter
and
cmpsl
or
ds
lret
lret
cmpsl
mov
inc
vpsubsw
call
fnsave
clc
xor
and
mov
cmp
mulb
sub
les
je
xor
pop
cmp
stos
pop
xchg
pop
add
cltd
and
mov
pop
jl
ja
jecxz
xchg
sbb
rcrb
mov
nop
movsb
and
or
inc
xchg
test
mov
dec
popa
shll
jno
mov
int3
cmpl
popa
mov
mov
pcmpeqw
push
add
out
in
dec
jg
xor
inc
jne
mov
cli
js
pop
orl
sub
jne
sbb
loop
movsl
ljmp
repz
sub
loop
mov
stos
adc
push
stos
dec
push
leave
sbb
inc
add
xchg
xchg
pop
clc
mov
rcl
iret
push
dec
adc
jno
mov
pop
cmp
push
inc
mov
lea
into
outsb
das
inc
insb
setl
dec
mov
out
mov
loopne
add
jp
jne
push
adc
pop
add
fstps
mov
xor
mov
mov
pop
insb
scas
inc
xchg
lret
pop
popf
loope
clc
xchg
scas
pop
fstpt
in
faddp
jo
or
cltd
pop
sbb
stos
testl
jns
scas
cmp
mov
ljmp
fdivrl
sub
cmp
outsl
mov
xor
leave
pop
rclb
daa
nop
or
in
fsubs
je
and
adc
lds
mov
push
push
jl
xchg
push
jae
mull
fiadds
call
shrl
mov
std
lods
and
push
pop
pop
dec
cmp
cli
sbb
xchg
gs
pop
push
mov
int
cmp
dec
mov
ja
add
cmpsb
xchg
jno
rcrb
fsts
push
mov
movups
dec
fnstenv
sub
dec
ds
in
lea
push
std
and
das
mov
cmp
mov
adc
loopne
or
loope
sub
test
jge
mov
pusha
inc
jnp
cmp
push
andb
fnstsw
mov
jne
clc
pop
push
in
xchg
or
xchg
push
cwtl
sub
pop
cmpsl
cmp
lret
dec
jo
jns
jg
inc
loop
test
sbb
fnsave
popa
xor
test
test
mov
dec
push
push
sahf
scas
filds
sbb
scas
xchg
mov
stc
mov
mov
and
dec
add
outsl
int
movb
push
les
out
and
fsubrl
out
adc
fisubl
xor
jbe
mov
dec
xchg
outsb
jne
sub
clc
clc
xchg
jmp
cmp
cltd
mov
icebp
add
jmp
push
lcall
jne
sarb
xor
dec
movsl
sahf
jae
dec
lret
ljmp
xchg
lcall
cmpl
addr16
mov
sbb
mov
add
hlt
mov
subl
popf
sbb
xlat
dec
xor
and
sbb
fsubl
mov
push
inc
dec
fdivrs
repnz
push
cmp
inc
rcll
mov
push
sub
in
mov
dec
or
stc
xchg
rcr
sbb
stc
dec
or
xchg
ret
adc
jae
aas
jl
repnz
adc
mov
into
mov
mov
sbb
or
and
inc
dec
adc
stos
sbb
je
mov
outsb
xchg
dec
pop
and
jle
aad
xchg
mull
sbb
icebp
sahf
mov
xor
xchg
movsb
out
pop
or
pop
lsl
fisttpl
inc
push
sub
jb
cmp
xchg
mov
in
adc
fmuls
in
add
push
xchg
aam
mov
lods
xor
jge
outsb
dec
add
repz
aas
fsub
les
or
call
pusha
std
mov
fiadds
push
pushf
lret
xor
push
pop
adc
mov
lcall
add
jo
addb
xchg
daa
nop
call
stos
pushf
mov
ljmp
jno
in
xor
mov
fs
xchg
ljmp
bnd
jmp
out
pusha
mov
pop
fwait
lods
push
rorb
test
in
cmp
stos
fistpl
adc
or
or
mov
mov
or
sbb
std
sahf
stos
divl
fcomps
ficompl
outsb
and
sbbb
push
push
jo
or
mov
pop
js
in
mov
jp
in
lods
andps
leave
mov
xor
push
dec
xor
shl
sahf
orb
add
lret
cmp
jecxz
pop
or
movsb
fsubl
rclb
jg
lret
jp
sbb
mov
xor
mov
into
jp
sar
xchg
and
mov
lock
mov
jp
nop
inc
or
test
scas
bnd
xchg
out
mov
mov
jns
xor
into
xchg
inc
cmp
gs
roll
cmpsb
in
ja
add
pop
sahf
sarb
xchg
or
mov
or
mov
imul
fistpl
and
mov
mov
cmp
into
pop
sahf
shrl
xchg
scas
int3
sub
aaa
ljmp
std
jle
xchg
mov
mov
fs
aaa
test
add
mov
into
cwtl
xchg
lods
das
add
mov
adc
xchg
jge
lods
pop
ja
sbb
or
clc
lcall
mov
mov
sub
jae
es
daa
inc
les
jae
loope
dec
cmpb
cmp
mov
imul
sub
add
add
sbb
sbb
inc
jns
pushf
lods
out
inc
jmp
cmp
pop
mov
sub
or
test
addb
add
fdivrs
xchg
std
jno
and
lea
mov
mov
daa
rcrl
push
daa
lret
fisubrl
pop
loopne
or
add
xchg
fsts
unpcklps
imul
pop
sarl
xor
mov
fcomps
aam
mov
mov
push
je
rorl
mov
mov
mov
jg
xchg
repz
pop
gs
out
pop
sahf
pop
imul
repz
mov
int3
in
mov
lahf
mov
mov
xor
add
lods
lods
push
sub
inc
sbb
push
stos
dec
fsubrp
push
andb
pop
orb
push
sti
and
aaa
stc
mov
and
std
inc
add
adc
cwtl
data16
mov
out
gs
push
mov
fadds
mov
push
call
test
cmpl
jp
and
mov
jo
push
cwtl
and
mov
daa
enter
clc
dec
add
out
stc
adc
or
cltd
ret
mov
fnsave
in
testb
sbb
dec
ljmp
shll
leave
mov
jecxz
jb
inc
add
jb
out
push
and
add
jbe
mov
lret
add
cmc
js
xor
jl,pn
mov
hlt
push
inc
stos
aam
lret
pusha
adc
pop
in
outsb
fcmovu
shll
jle
lods
cmp
sbb
stos
mov
mov
mov
jae
outsl
sub
mov
je
mov
xchg
mov
imul
scas
lds
dec
sub
in
out
out
fadd
pop
scas
hlt
and
pop
test
dec
cmpsb
dec
test
cmpb
pop
add
or
push
inc
xchg
adc
imul
popa
cli
idiv
cmp
lods
pushf
ja
mov
mov
xchg
sbb
push
mov
cmp
in
mov
imul
ss
adc
popf
outsb
bnd
mov
cmpb
mov
and
add
jg
xorb
arpl
mov
or
fisttpl
insl
cmpsb
lahf
stos
out
sub
rorb
jle
loope
mov
in
scas
push
push
lret
inc
jle
mov
mov
mov
dec
insb
push
pop
rcrl
enter
out
test
push
or
add
jl
pop
mov
jl
sbb
xor
xor
sahf
stos
xor
sub
pop
jne
sarb
or
cld
sbb
mov
or
or
jnp
orb
nop
cmp
xchg
movsb
sub
test
jne
or
pop
les
int3
stos
mov
adc
jae
rcl
add
ds
hlt
mov
mov
out
or
inc
pop
xor
push
test
sahf
inc
arpl
loopne
sub
repz
xor
cmp
sbb
out
jo
loop
or
sti
inc
pushw
xor
adc
push
sarl
mov
sub
fisttps
pop
sub
xor
and
inc
sub
pop
inc
lahf
out
dec
jmp
lahf
pop
mov
xchg
cmp
mov
mov
rorb
mov
push
xor
insl
mov
pusha
mov
sub
sbb
and
mov
cltd
cli
iret
jp
subl
xchg
mov
popf
fdivl
pop
jmp
adc
stos
pushf
mov
cmp
loop
cmp
jp
mov
and
scas
adc
jmp
es
fnstenv
jmp
test
add
xchg
cli
mov
xchg
push
adc
mov
repz
xchg
add
jmp
sbb
adc
or
push
push
imul
out
push
or
lods
pusha
inc
stc
inc
push
frstor
xchg
push
fstpt
sub
fs
repnz
mov
fnsave
in
lahf
sbb
gs
nop
xor
es
cld
js
pop
xchg
sbb
fstps
lcall
xchg
and
xor
rcrb
cmp
mov
sbb
lds
and
imull
js
fwait
test
jle
mov
ret
or
push
sbb
jle
or
lea
call
jl
jno
jno
ficomps
arpl
push
insl
adc
idiv
cmp
sub
sub
in
pop
bound
cmp
push
xchg
or
loope
mov
cmp
aaa
push
lahf
sbb
data16
insb
mov
leave
stos
push
mov
pop
adc
outsb
dec
push
arpl
mov
mov
lds
pop
idivl
sub
add
add
fsubp
xor
sbb
push
imul
push
aad
jb
mov
leave
mov
xchg
call
lods
addr16
cmpsl
cmpl
dec
in
out
pop
addr16
out
addr16
mov
adc
fwait
jae
ret
jne
aad
loop
imul
push
and
stc
fnstenv
xorl
ficoml
hlt
push
xor
adc
cmp
loope
dec
jae
cmp
andb
pop
and
mov
jle
outsl
mov
jnp
daa
call
dec
sbb
mov
cwtl
fimull
data16
cltd
data16
sbb
xchg
addl
mov
sub
add
xchg
or
es
je
movsl
pop
push
fs
push
hlt
outsb
js
je
addr16
inc
jmp
push
mov
shlb
sahf
add
and
xlat
roll
cwtl
or
popf
mov
xchg
pusha
sbb
sahf
xchg
add
pop
and
sub
lock
cmp
pop
adcl
mov
add
std
in
or
inc
jmp
pop
sbb
jno
push
addl
cld
push
out
pop
in
pop
inc
pop
call
aaa
jne
pop
int
subl
mov
clc
xor
aad
xor
xchg
xorl
pop
xchg
lret
adc
or
push
push
xchg
cmp
test
mov
call
mov
stos
fcoms
in
int3
out
or
negl
cs
mov
mov
lret
adc
adc
pop
std
pushf
pop
mov
out
das
pushf
testl
inc
pop
jecxz
outsb
xchg
movsl
mov
inc
lahf
mov
pop
adcb
push
fwait
in
call
sbb
lret
mov
insl
imul
ret
jecxz,pn
pop
mov
pop
inc
cwtl
fbld
rcrb
sub
sub
mov
dec
pusha
mov
fisttps
scas
int3
lret
arpl
cmp
inc
jge
mov
scas
mov
jle
dec
lods
mov
and
rcr
iret
out
push
or
faddp
repnz
cmpsb
jecxz
add
push
lods
aam
movsl
add
inc
push
imul
cmpb
mov
cmc
add
ficoms
jge
push
nop
in
jb
cmp
inc
and
ja
mov
leave
nopl
jmp
in
test
inc
pop
mov
push
enter
cmp
xor
mov
ja
das
scas
popa
add
arpl
test
pusha
ret
out
dec
add
sbb
or
dec
and
inc
jae
and
adc
pop
mov
out
gs
jo
xor
repz
cwtl
mov
pop
and
ljmp
fisubrs
dec
push
mov
sbb
sub
jl
lock
fstps
xor
push
sbb
in
pop
addr16
adc
daa
xor
sbb
sub
ficoml
mov
leave
sbb
dec
jg
xor
in
adc
mov
pop
rorb
sbb
mov
push
jle
shl
push
mov
dec
xor
mov
xchg
iret
lcall
stc
jge
pop
hlt
push
sbb
in
push
lea
pop
movsb
xchg
ds
insb
mov
inc
mov
push
stc
rcrb
sbb
xor
shlb
sbb
jae
and
sub
mov
sub
push
insl
xchg
pusha
rcl
cmpl
pop
mov
or
mov
rol
frstor
jnp
repnz
add
dec
mov
xchg
mov
xorl
sub
incb
mov
divl
add
jmp
test
cmp
adc
or
hlt
cmp
jne
movsl
jns
jne
mov
jp
push
jae
adcl
mov
int
dec
pop
and
mov
jo
pop
cmp
in
divb
add
scas
add
cld
fbstp
std
adc
ret
in
cmp
sbb
inc
lods
sar
loop
fwait
shrb
dec
scas
lds
mov
adc
out
cmp
mov
pusha
lea
test
iret
push
cld
jae
andl
add
mov
test
jmp
repnz
and
mov
mov
inc
xor
mov
jmp
out
pop
clc
xchg
or
ja
cmp
stc
stos
repnz
sbb
jl
ror
cmp
sbb
insl
push
repnz
ljmp
rorb
jl
cmp
stos
mov
xorl
inc
fs
inc
les
fnstcw
or
int3
sbb
cmp
aas
lret
shll
and
div
adc
je
ret
ficompl
daa
lock
dec
adc
test
jmp
aaa
insl
sti
scas
mov
lret
add
mov
ficoml
or
iret
xchg
pop
pop
add
jle
cmpsb
mov
xor
inc
sub
mov
jge
lods
push
popa
je
inc
pop
cmp
xor
mov
fsubl
mov
xor
in
sbb
pushf
push
xor
int3
ljmp
bsr
pushf
mov
xchg
sub
imul
out
pop
push
mov
pop
dec
mov
out
pop
mov
nop
mov
cwtl
fsts
adc
arpl
in
push
xchg
movsb
xorl
js
jl
leave
aad
mov
popa
xchg
shll
fidivrl
pusha
pusha
mov
dec
or
dec
in
out
mov
inc
jno
pop
shrl
sarb
in
pop
ret
in
adc
ja
add
cmp
fcomps
sbb
push
inc
inc
mov
jnp
in
test
xor
scas
ljmp
jge
inc
adc
add
ds
inc
stos
push
fistps
das
push
fsub
mov
mov
imul
mov
js
mov
rclb
mov
cmp
or
xorb
lret
adc
push
dec
ds
addr16
mov
js
fisttpll
jp
pop
imull
mov
xor
rep
lcall
incl
lock
outsb
call
add
add
ret
movsb
das
int3
notl
mov
adcb
scas
sti
xchg
adc
mov
outsb
arpl
fnstenv
bound
or
xor
adc
in
jae
cmpsb
mov
sub
jae
pop
outsb
cmp
ja
push
sub
jb
mov
sub
pop
xor
cmp
insb
int
or
adc
iret
neg
jle
das
test
push
dec
dec
add
out
test
dec
push
adc
stos
imul
outsl
jns
mov
cmp
xchg
add
cmp
test
inc
loope
xchg
pop
insl
sub
cmpsl
shrb
adc
mov
and
insl
pop
ljmp
mov
fistpl
into
or
lcall
in
or
jge
iret
and
mov
fldcw
les
cmpsb
imul
aas
or
ljmp
leave
jl
adc
pop
out
dec
cld
inc
aam
jge
mov
xor
add
repnz
push
sub
push
test
adc
fs
orl
mov
nop
mov
test
rcll
mov
rorl
mov
mov
dec
xchg
push
fs
ss
cmc
xchg
hlt
or
pop
je
cli
enter
xor
hlt
insl
test
int
shlb
test
xlat
push
or
adc
inc
inc
jbe
int3
mov
xchg
cmpb
sub
jb
and
cmpsl
fwait
imul
inc
aam
jle
add
jbe
pop
xchg
xor
mov
push
jp
pop
pop
mov
dec
jne
pop
out
sub
dec
or
fwait
vrsqrtss
dec
stos
andl
jmp
xchg
mov
jecxz
pop
jge
imul
pop
out
js
mov
in
push
in
repnz
pop
rcrl
mov
xor
inc
scas
and
enter
test
add
and
sbbb
push
sbb
pushl
in
mov
jb
add
out
sbb
sti
ret
xacquire
mov
bound
hlt
pop
lods
imul
or
jnp
push
dec
mov
stos
push
mov
cmp
xchg
in
scas
mov
aas
in
jle
xchg
or
loope
sbb
loope
sbb
mov
fwait
mov
imul
cmc
push
xchg
test
xlat
mov
aam
in
sub
lods
and
ret
cmpsb
or
int
lahf
fiaddl
ficoms
das
and
lea
jecxz
les
sbb
lcall
add
sub
addr16
sub
test
loop
add
int3
mov
adc
jns
shrl
lcall
push
jns
xchg
inc
jne
cmp
idiv
cmp
lret
gs
aas
jge
ds
je
jl
mov
movsl
aam
or
xchg
inc
and
out
or
shlb
and
repnz
mov
xchg
ret
xchg
cmp
push
fisttpl
mov
ja
xchg
leave
dec
or
sbb
pop
dec
jb
sbb
lea
lea
in
cmc
out
add
jb
xorl
arpl
int3
inc
cmp
push
lods
mov
mov
pushl
lods
mov
fsubrl
jge
cmp
stc
sahf
dec
in
adc
daa
subb
adc
mov
cmpsl
add
imul
jo
mov
push
jnp
push
and
inc
cmp
mov
push
and
dec
xchg
sbb
pop
ret
dec
jnp
into
out
push
xchg
inc
movsl
jle
sbb
into
orb
xchg
gs
jle
cwtl
loop
and
outsb
cmp
cmpsl
mov
sbb
test
push
lds
out
das
jp
inc
sbb
hlt
pop
jae
jl
lahf
insb
sbb
rcrb
xchg
je
sub
sbb
pop
out
cli
movsb
faddl
push
cmpl
pop
in
mov
mov
sbb
add
mov
movsl
loope
xor
pop
add
xchg
ret
scas
cld
adc
aas
dec
cli
or
jno
out
lcall
fs
andb
mov
mov
js
xchg
jb
pop
adc
cmp
jmp
add
cmc
push
cmp
loopne
sbb
lcall
rcll
loope
testl
sbb
mov
xor
ja
sub
hlt
gs
fsubs
aam
mov
testb
popa
pop
xchg
mov
scas
add
lret
cmpsb
ljmp
outsb
sbb
dec
cmp
ds
pop
add
in
sbb
aam
loop
in
mov
xor
xchg
dec
loope
mov
testb
ljmp
lcall
movsl
and
test
sub
or
fcomps
cmp
add
cmp
daa
icebp
sub
or
dec
cli
testl
push
pop
inc
and
pop
mov
adc
inc
mov
xchg
xchg
add
fbld
fwait
mov
sub
pop
pop
mov
notb
out
add
push
or
mov
xchg
aam
sub
mov
pop
lret
rorb
gs
insl
aaa
cmpsb
or
test
aaa
fwait
or
test
cmp
cltd
dec
mov
jnp
and
and
xor
jnp
scas
cli
or
mov
negb
mov
leave
pop
mov
fwait
cs
not
dec
es
inc
cltd
test
scas
int
xchg
lcall
pusha
and
mull
add
and
out
mov
popa
ficompl
jo
gs
jmp
inc
cwtl
and
mov
nop
and
jg
aaa
fldl
faddl
popa
rcrl
add
test
lret
xor
cwtl
fidivrl
sbb
hlt
mov
push
aas
inc
cmc
adc
loope
mov
xchg
out
jl
ss
movsl
sbb
dec
cld
xor
jecxz
test
mov
pop
insb
xchg
add
xchg
mov
je
or
and
sub
mov
lods
push
mov
jge
and
rclb
cmp
rcll
dec
les
ret
fs
mov
push
shll
inc
lcall
mov
stc
fstl
push
into
arpl
pop
push
repz
jo
push
fstpl
inc
or
mov
pushf
shlb
cmpsb
mov
stc
lret
xlat
mov
jnp
hlt
xchg
fcmovnb
adc
dec
push
lods
sub
mov
in
cltd
xchg
pop
in
je
inc
sahf
or
add
mov
pop
popf
xchg
fcompl
aad
mov
mov
xor
scas
xor
cmp
fwait
jl
nop
jno
xchg
and
mov
dec
bound
ret
popl
pop
popa
ret
xor
or
jo
add
jmp
inc
dec
not
lock
xchg
aas
shrb
stos
test
pushf
aaa
gs
roll
mov
fwait
ja
push
xchg
jno
ljmp
out
and
mov
lahf
mov
ret
push
ret
imul
sbb
aad
push
add
push
das
subl
aam
and
in
ret
sbb
pop
int
and
stc
leave
xor
fmuls
rolb
cld
popa
and
ret
or
fsubrs
push
xor
mov
ds
aaa
ljmp
xor
loope
cmp
sbb
fistpll
movsl
das
dec
ljmpw
cmp
loopne
or
mov
adc
pop
mov
add
mov
sub
outsb
mov
aam
out
adc
out
ljmp
xor
push
push
cli
addl
cmp
push
dec
xor
insb
mov
daa
pop
xchg
lret
push
push
add
push
sbbb
mov
pusha
add
mov
movzbl
mov
inc
pop
cs
jg
jo
imul
sub
mov
push
xchg
mov
pop
repnz
inc
add
mov
pop
mov
inc
and
and
test
mov
jge
lcall
imul
lods
cmp
xchg
in
add
test
inc
rolb
or
fisubl
adc
pop
inc
dec
push
mulb
daa
xchg
out
cmp
fistpl
push
dec
jl
out
mov
inc
pop
push
sbb
and
sub
aam
mov
cmp
jnp
dec
sti
add
testl
sub
mov
mov
inc
xchg
out
inc
jmp
mov
dec
mov
push
sub
push
dec
jbe
shll
jb
push
fs
call
je
pop
into
sbb
shr
cwtl
mov
test
ss
sub
ret
push
pop
add
push
fwait
xchg
jno
in
lock
inc
lahf
adc
sbb
add
out
push
cmp
mov
jp
jne
pop
inc
xor
add
and
movsl
repnz
je
adc
les
dec
jge
dec
repz
div
mov
cmp
andl
mov
add
push
sub
xchg
movsl
fsubrs
shr
inc
inc
iret
pop
mov
jae
repz
shll
lahf
add
push
push
jp
fs
jnp
outsb
jge
add
out
pop
bound
scas
xor
cmp
adc
nop
and
je
aas
lret
mov
jmp
test
in
imulb
repnz
iret
adc
cmpsl
cmpsb
push
cmp
dec
xorl
dec
dec
or
ja
cmp
push
xchg
push
int3
sub
push
in
mov
and
aaa
pop
sahf
ret
mov
mov
mov
loope
pushf
xchg
and
fldenv
inc
movsb
roll
mov
pop
or
cmp
jle
ja
fidivrl
lds
push
jns
shlb
stos
mov
ret
push
in
dec
mov
nop
xchg
lret
or
test
or
ret
mov
fwait
je
xor
stos
test
setl
push
xor
xor
sti
adc
mov
cmp
mov
pop
shll
imul
out
mov
mov
add
adc
test
lahf
add
test
scas
enter
dec
adc
and
cmpsb
push
xchg
cltd
adc
and
cs
icebp
dec
sub
movsl
test
lea
sti
push
push
pop
aad
mov
or
nop
sub
cmc
test
dec
pop
inc
push
dec
pop
jae
mov
addr16
mov
popf
xor
lahf
cmp
mov
lret
or
inc
gs
dec
fdiv
cmpsl
and
insl
fs
orl
icebp
xchg
jmp
sahf
inc
xchg
xor
inc
mov
mov
mov
ja
outsl
xlat
mov
idivl
les
adc
rolb
dec
loop
pop
cld
stos
nop
pop
shll
dec
stc
lea
inc
lret
push
rcrl
jle
out
jne
fmuls
xlat
fs
cli
add
or
out
out
sub
push
aaa
mov
and
nop
mov
xchg
int
mov
sub
xor
mov
gs
cmc
add
push
jne
mov
ret
adcl
cltd
pop
inc
xor
lahf
pop
loope
push
shrb
mov
cmp
lock
xchg
inc
mov
sbb
stos
orl
es
jno
mov
mov
pop
dec
xchg
aam
in
mov
btc
outsl
push
pop
in
pop
sub
mov
cld
icebp
icebp
lcall
bound
dec
ret
lods
or
fsubl
lret
cmp
sub
sbb
andb
and
or
inc
xlat
aam
cli
mov
adc
out
pmaxub
inc
lcall
push
mov
shlb
dec
inc
push
sbb
mov
mov
pusha
inc
dec
dec
stos
ljmp
cmp
sbb
push
xor
push
add
roll
lock
lahf
mov
xchg
cmc
mov
jb
push
mov
jbe
mov
jecxz
push
fstps
sti
and
push
push
scas
xchg
and
or
in
shll
dec
cmp
mov
dec
sbb
and
lock
sbb
mov
dec
jmp
sti
je
out
mov
push
out
imul
movsb
les
std
lock
pop
test
dec
push
mov
pop
add
push
jns
movsl
lret
pop
daa
pop
sbb
lock
in
stos
jle
test
push
scas
dec
xchg
dec
push
jp
sub
adc
inc
xlat
repz
rorl
inc
aas
fwait
add
sbb
cli
mov
push
push
addl
inc
outsl
mov
ja
je
pop
cmp
iret
xchg
add
dec
sbb
add
mov
sub
xchg
push
inc
arpl
pop
push
std
mov
lock
pop
dec
jecxz
in
clc
aad
jge
call
sub
cli
notl
nop
test
jo
aas
or
or
xchg
add
jmp
cmp
fsubl
push
iret
lods
cwtl
lods
dec
pusha
iret
push
in
addb
bswap
out
inc
add
rclb
dec
mov
mov
and
cmpsl
sbb
outsb
imul
inc
adc
mov
inc
outsl
xchg
inc
shlb
mov
sub
dec
stc
or
mov
xchg
into
or
sbb
inc
je
dec
aad
loope
cltd
mov
push
mov
loopne
cmp
mov
test
mov
je
sbbl
mov
int
scas
push
loop
jb
cmc
xchg
mov
fwait
push
inc
pop
pushf
inc
add
pop
mov
mov
out
pop
pop
notb
outsl
and
fcomps
jl
xchg
inc
mov
mov
and
test
adc
adc
adc
add
mov
ret
adc
adc
outsl
dec
jo
push
sub
adc
or
je
jb
and
mov
cmp
in
test
sub
loopne
repz
inc
jns
inc
leave
sub
stos
cld
push
sbb
add
xor
sbb
test
sub
iret
daa
cmc
inc
das
adc
sub
inc
mov
insb
dec
fcmovnbe
pop
xor
inc
jno
fdivs
add
push
pop
sbb
scas
into
push
add
movsl
inc
and
fcmovb
push
shl
movsb
jl
fwait
xlat
push
xorb
sub
push
lahf
or
loope
ljmp
pop
or
push
imul
jne
add
and
test
cmp
pop
or
sbb
mov
daa
xchg
fs
mov
adc
cmp
pop
loope
cs
cmp
jno
xchg
mov
rclb
lea
test
dec
mov
ret
sub
mov
adc
cld
jbe
pop
push
add
and
dec
jae
sub
sbb
xchg
add
lock
js
cltd
pop
out
call
shr
mov
sub
ret
xor
jnp
dec
mov
and
ss
sahf
decl
jae
ret
pop
or
adc
pop
mov
imul
add
pop
lock
pop
xor
xchg
das
add
lods
mov
lret
push
outsb
push
dec
rclb
and
xor
ja
fwait
je
test
sbb
mov
push
mov
hlt
pop
mov
pop
push
pop
jmp
sbb
addr16
outsl
xlat
mov
jnp
lahf
clc
mov
fiadds
popf
or
mov
pop
cmp
inc
and
imul
pop
jp
out
sub
fxch
fnstcw
fmulp
add
cmpl
dec
into
stos
cli
mov
xchg
mov
lods
je
xchg
insl
int3
fisubs
loop
mov
xor
or
cli
lds
jbe
sbb
nop
out
out
cmp
and
loopne
rcrl
inc
inc
mov
xchg
push
mov
xchg
data16
add
xor
ljmp
popaw
aaa
rcl
lea
pop
std
dec
insl
stos
and
jno
loope
lods
push
and
sub
add
mov
enter
inc
fstps
inc
or
mov
pop
and
jle
push
in
and
int3
sarl
add
mov
add
or
je
stos
mov
jno
push
dec
jns
push
pop
int
pushf
js
movsl
push
test
rclb
sub
out
lea
rcll
aaa
adc
inc
rcrb
dec
add
sub
hlt
nop
sub
incl
arpl
xchg
mov
pop
dec
mov
mov
std
scas
mov
arpl
or
outsl
sbb
push
adc
fiaddl
lret
lahf
pop
cs
enter
adc
jae
and
push
sbb
call
cmp
cmpsl
fisttps
jecxz
popl
adc
push
xor
mov
in
enter
jnp
mov
shrb
pop
repnz
fildll
outsl
mov
test
lods
add
icebp
ror
xlat
lods
pop
xlat
enter
popa
mov
sub
push
and
mov
mov
test
sarb
jmp
and
mov
dec
or
xchg
cmp
sub
mov
sbb
pop
xchg
push
cmp
xor
mov
jb
add
fcompl
push
sub
mov
jne
inc
cld
mov
stc
and
repnz
jne
lret
hlt
push
xor
cmc
dec
mov
pop
pop
mov
fwait
cmp
psubusw
xor
add
sbb
xlat
mov
cmp
fisttps
ror
xchg
clc
xchg
rol
xchg
add
in
mov
pop
inc
rol
aas
and
mov
push
cmp
stc
repnz
mov
sub
or
or
rcrl
adc
aam
push
ret
push
adc
aad
jo
and
jno
mov
mov
out
les
mov
dec
xchg
pusha
lcall
cltd
rclb
test
test
mov
xor
popa
jne
push
or
int
lahf
jb
mov
mov
daa
sub
icebp
adc
jp
ret
inc
scas
cmp
pop
insl
data16
mov
gs
mov
cmpsl
ror
inc
mov
int
cmc
push
sub
leave
pop
jno
add
xor
aam
cmp
xchg
pusha
or
mov
xorb
addr16
rclb
insl
bnd
pop
loop
rorb
and
pop
pop
in
sarb
aaa
pop
push
sbb
jle
fcom
pop
pushf
sub
xchg
mov
cmp
or
inc
aam
sub
in
add
mov
pop
push
jle
or
hlt
and
je
pop
ss
pop
sahf
cmc
fwait
shlb
lcall
xor
push
xchg
imul
mov
inc
scas
mov
push
cmp
jge
lods
mov
mov
push
fsubr
adc
test
xchg
test
cltd
rclb
inc
sub
sub
movsl
daa
push
fisttpll
push
and
xchg
pusha
mov
or
sub
mov
psraw
and
inc
ret
stos
xor
mov
push
icebp
fisttpl
stc
stos
test
aaa
cmp
fdiv
stos
mov
and
in
and
xlat
and
mov
cwtl
mov
push
cmpsb
test
lret
jno
inc
insb
sub
sub
notb
xorb
xchg
inc
shlb
fisubrl
ds
ss
mov
add
leave
aad
xor
cmpsl
gs
push
mov
sub
call
xchg
shl
addb
mov
hlt
mov
lods
lret
flds
mov
jbe
push
cmp
pop
bound
cmp
push
add
xchg
inc
cli
sti
lret
mov
jp
out
imul
mov
fdivp
xor
xor
xchg
stos
in
loop
test
mov
daa
xlat
call
mov
ljmp
jae
sarb
lock
mov
dec
mov
xor
push
pop
xor
aad
loope
arpl
enter
mov
outsb
pop
adc
sar
jnp
inc
and
jge
fdivs
bound
repnz
clc
aam
ljmp
inc
adc
or
xchg
ss
out
jecxz
lret
ja
jmp
push
jae
loope
getsec
or
fadds
popf
jae
addr16
andl
mov
fcomps
inc
fldenv
xlat
or
pop
rcrl
sbb
pop
loope
pushf
sbb
aam
jmp
mov
test
pop
jno
mov
and
fwait
push
mov
out
adc
and
in
xor
out
ljmp
aam
mov
mov
sbb
mov
xchg
lods
mov
mov
cmp
mov
rcrl
adc
cs
repnz
fsubrl
sarb
xor
fldenv
xlat
push
pop
dec
mov
aad
mov
sbb
xlat
xchg
mov
mov
mov
xlat
pushf
gs
push
leave
lcall
push
sti
push
cmp
dec
mov
subl
frstor
stos
add
jnp
or
movsl
ljmp
gs
xor
push
or
das
out
jne
inc
pop
jecxz
insb
pusha
dec
xor
and
mov
mov
mov
mov
pushf
pop
add
adc
out
aam
nop
cs
push
jbe
dec
xchg
and
inc
std
inc
xchg
cltd
mov
decl
rolb
adc
adc
enter
cwtd
mov
mov
pop
test
movb
cli
ljmp
pop
mov
out
xchg
adc
into
inc
lods
pop
inc
jge
in
jnp
push
mov
cmpsb
inc
scas
xchg
xor
mov
cltd
xchg
jg
outsb
loope
ljmp
aam
lods
ret
and
cld
dec
cmp
loop
scas
and
xor
adc
dec
add
pushl
add
aaa
xchg
add
sbb
xor
or
cmc
stos
and
loopne
jmp
pop
jecxz
rclb
out
jg
testl
setnp
outsl
inc
xchg
rcrl
mov
push
mov
mov
mov
push
gs
pop
test
dec
dec
inc
pop
int3
xchg
inc
cmp
out
rolb
es
emms
pushf
mov
repz
dec
mov
aad
out
fnstenv
leave
dec
enter
cmc
cmp
cmp
rcl
into
or
addr16
neg
add
fisubrl
jno
mov
push
es
or
ds
adc
pop
movl
insb
pop
push
fcmovb
jae
mov
lods
leave
int3
repnz
inc
xor
outsb
cmp
lret
inc
xor
arpl
cmp
stos
dec
jmp
jno
push
jmp
cmpsl
jae
xchg
xor
pop
insl
fnstenv
mov
aaa
add
cld
outsb
mov
sbb
add
xchg
int
js
adc
lods
xor
punpckhwd
xchg
jl
inc
shrb
les
pop
xor
dec
xor
jmp
pop
push
or
test
jno
ret
pop
sahf
scas
add
pop
jo
and
mov
pop
xor
in
insl
push
adc
popf
pop
data16
push
inc
fsubrl
inc
cs
mov
dec
pop
mov
in
sub
inc
lret
pushf
shlb
or
out
or
mov
leave
push
fisubrs
jb
mov
rclb
inc
mov
jo
push
jnp
std
jb
jne
ficoms
push
ss
imul
test
std
dec
push
mov
faddl
and
aam
in
test
and
and
cs
daa
mov
add
cmp
out
xor
mov
pop
jb
cmp
fsubrl
inc
sbb
mov
jne
xor
cmp
xor
test
sbb
imul
jns
push
lret
dec
adc
inc
jge
scas
adc
cltd
jg
mov
or
out
inc
mov
lret
ja
scas
clc
lock
sbb
std
mov
mov
imul
faddl
test
mov
or
in
clc
add
xchg
mov
dec
sub
scas
imul
lock
popa
pop
or
push
pop
pusha
out
repnz
insl
sub
sbb
push
xchg
mov
ljmp
xor
nop
iret
sar
mov
iret
rorl
mov
nopl
fdivrl
aaa
xchg
cmp
call
inc
adc
sub
in
popf
popf
xlat
dec
push
imul
repnz
pop
jnp
insb
mov
mov
ret
pop
dec
push
pushf
xor
je
loopne
aad
push
adc
rcrl
movsl
mov
pop
mov
ss
add
ss
aam
pop
fldcw
mov
xorb
jge
jg
test
pop
mov
aas
enter
add
jb
movsl
sbb
fiaddl
repnz
jmp
dec
xchg
cwtl
mov
in
dec
out
fdivrs
daa
arpl
pop
jg
push
ror
xchg
add
pop
mov
sbb
ds
lret
daa
inc
mov
cltd
inc
mov
mov
cmpsb
in
movsb
pop
or
js
ret
stc
pop
aaa
fcmove
mov
cmp
push
jno
xor
cmp
and
cmp
pop
fadd
pop
mov
mov
add
arpl
sub
mov
mov
mov
imul
mov
scas
push
mov
xlat
or
insl
fsubr
out
je
xchg
or
scas
pop
and
sti
cmp
ljmp
jns
jge
sbb
dec
sub
push
outsb
das
cld
popf
push
push
xchg
gs
idivl
aad
pop
std
lret
xor
scas
in
pusha
pop
xlat
jge
mov
adc
sarl
leave
push
addb
in
add
dec
loopne
loopne
adc
inc
xchg
jp
xchg
das
pop
dec
jae
ss
mov
push
mov
stc
inc
add
and
sub
into
adc
mov
pushl
clc
fstp
inc
data16
inc
das
nop
and
aaa
fsubs
popf
stos
ds
cmpl
sbb
vmwrite
pop
xchg
and
orl
loop
mov
ret
mov
scas
lret
adc
idivl
int3
mov
add
jmp
popa
and
and
movsl
mov
xor
push
mov
adc
mov
push
lahf
add
call
adc
or
scas
fsts
push
clc
subb
int3
pop
mov
dec
adc
int
repz
and
dec
rclb
push
dec
xor
arpl
mov
wrmsr
push
mov
aas
push
lcall
or
xchg
mov
outsl
sub
xor
clc
fistl
cmp
jae
xor
ljmp
js
pop
int
cmp
mov
icebp
mov
jns
jp
mov
test
dec
cmpb
xchg
iret
sbb
in
dec
pop
rolb
gs
fidivrl
and
or
repnz
jecxz
inc
jno
pop
and
popa
mov
add
push
std
shlb
adc
sbb
fstpt
push
fs
insl
dec
call
dec
cmp
sbb
test
jle
xlat
outsl
sbb
xchg
pusha
sbb
int
cmp
sub
leave
pcmpeqb
ret
scas
ljmp
out
scas
xchg
in
mov
fmuls
jp
xchg
mov
inc
loop
xchg
xor
mov
dec
pop
lcall
inc
aad
ror
fcoml
call
dec
push
iret
push
jg
jmp
loope
pop
and
and
in
in
inc
shlb
call
pop
add
xor
clc
lcall
fs
and
loopne
or
and
loopne
inc
int3
push
faddl
mov
push
push
add
in
push
or
sbb
and
scas
dec
pop
cmc
mov
mov
sub
jnp
xchg
push
pop
mov
lcall
push
lcall
rclb
pop
mov
mov
add
jg
or
mov
jnp
lcall
mov
shll
add
jmp
push
inc
mov
test
mov
add
add
xor
mov
test
jo
xor
out
loopne
xchg
aas
add
push
mov
inc
outsb
fildll
test
adcb
mov
mov
popa
fst
jae
inc
test
or
cmpsb
and
sbb
xor
sub
dec
dec
das
mov
sbb
mov
and
ja
xor
cli
xor
mov
jns
sub
cltd
jp
push
mov
fsts
mov
inc
clc
outsl
push
xor
add
pop
insl
mov
ret
sar
inc
nop
inc
stc
mov
sti
mov
cs
and
mov
dec
cmp
xchg
cmp
sub
shll
and
cltd
aam
inc
dec
cmc
rol
jno
test
aam
popa
cwtl
hlt
insb
mov
cs
imul
scas
imul
inc
dec
sti
jne
les
subl
jmp
fs
inc
cwtl
cwtl
outsb
xchg
xchg
and
push
push
jl
push
lods
mov
xor
fisttps
adc
mov
cli
sbb
sbb
lret
test
fwait
ret
pop
inc
mov
stc
shr
das
mov
call
inc
add
or
cmovb
ret
arpl
push
push
pop
mov
push
and
inc
adc
ret
sbb
pop
mov
repz
and
jg
xchg
hlt
xor
aad
cmpb
test
cs
or
adc
xchg
xchg
cmpsb
pop
mov
fldcw
mov
sub
mov
adc
loopne
cmp
into
mov
pop
psllw
jle
int
mov
push
out
add
testl
pop
call
addr16
and
jae
mov
push
stc
pop
add
mov
dec
adc
jno
clc
stos
fstpt
jae
cmpsl
add
stos
and
lods
icebp
test
lods
pop
bound
pop
inc
rorl
inc
stc
dec
movsb
ljmp
jns
dec
cmp
cmpsl
and
lock
cmpsl
dec
fs
adc
icebp
mov
ja
gs
lahf
jns
mov
aaa
sub
in
adc
add
push
movsl
jns
dec
and
sbb
outsl
and
push
and
mov
mov
aaa
shrl
ss
repz
jae
mov
jl
xor
int
pusha
fidivs
insb
xor
and
push
hlt
and
sarl
adc
push
adc
push
jecxz
mov
imul
je
dec
rcr
arpl
xor
cli
xchg
sbb
inc
mov
mov
fcompl
inc
int
pop
aas
pop
adc
jb
sub
xor
and
push
and
jns
call
add
cmp
xchg
mov
out
les
movsb
xchg
jnp
mov
fsubrs
ret
mov
lea
mov
adc
out
shll
std
repnz
in
movsl
sbb
popa
movsb
je
push
cmp
xchg
aas
stos
loop
mulb
ret
arpl
or
mov
fsubl
out
in
and
mov
push
and
mov
cmc
mov
dec
dec
adc
out
push
es
loope
hlt
inc
cld
mov
flds
add
mov
mov
hlt
loopne
jo
push
lret
ds
movsb
push
shl
pop
testb
int
loopne
adc
adc
sbb
cmp
aad
ds
jp
ret
ret
insb
inc
mov
lcall
pop
sbb
mov
lret
mov
dec
xchg
mov
xchg
pslld
jecxz
push
cs
adc
cmp
les
pop
mov
push
push
mov
or
dec
pop
pusha
arpl
dec
add
popf
mov
sbb
add
xor
push
fists
enter
fisttpll
lcall
xchg
imulb
cmp
ljmp
xor
mov
mov
idiv
dec
pop
jge
lcall
mov
lea
cmp
enter
xor
cmc
xor
xchg
ficoml
insl
xchg
std
and
pop
test
inc
inc
sbb
mov
lds
jo
popa
push
frstor
out
jge
push
aam
xor
movsl
aad
mov
sbb
dec
push
xor
icebp
enter
call
fs
adc
rcll
lods
sbb
das
loopne
cwtl
pop
and
adc
mov
mov
test
addr16
cmpsb
inc
loop
roll
gs
xchg
les
pop
out
in
add
fsubrs
les
lret
movsl
rol
hlt
andl
mov
and
lahf
pusha
mov
ret
shlb
mov
xchg
xchg
aas
cmp
mov
xorl
push
mov
fs
push
cld
adc
jno
test
push
shl
add
sbb
pushf
push
push
std
int
inc
xchg
pop
das
and
bound
jp
imul
fistps
pop
sub
lahf
fcoms
adc
jns
je,pt
stos
shlb
sbb
cmp
sti
dec
push
sub
jg
and
push
aad
pusha
add
mov
sub
pop
mov
xchg
inc
cwtl
dec
pop
sahf
inc
xchg
pushf
fdivrp
adc
scas
xchg
out
movsb
adc
mov
lods
div
xchg
adc
jo
out
arpl
mov
cmp
cmpsb
lea
jecxz
and
popf
dec
push
ret
insl
mov
repnz
shll
add
movsl
jge
pop
ds
mov
addb
hlt
cmp
mov
mov
push
jp
sbb
push
insb
imul
sub
jns
sub
jg
int
pop
mov
mov
lods
fldenv
paddsw
mov
loop
cli
insl
outsl
push
outsb
pop
clc
adc
push
hlt
mov
cwtl
test
adc
or
out
test
mov
sub
repz
test
stos
xor
mov
addr16
outsl
mov
sub
or
inc
dec
and
mov
mov
xchg
mov
pop
adc
pop
adc
and
das
negl
por
push
mov
jecxz
mov
aad
dec
xor
sub
mov
in
std
add
or
dec
cltd
push
pop
cmp
jmp
add
ja
hlt
sahf
mov
add
adc
or
movsb
fisubrl
xor
loopne
jne
xchg
ret
lret
cpuid
adc
xor
jecxz
push
mov
insl
rolb
mov
jae
xor
sub
inc
sub
stos
pop
clc
push
inc
cmp
push
or
cmp
lret
shll
leave
mov
leave
xor
sbb
jp
fildll
xchg
push
test
dec
mov
or
push
das
cmc
and
ret
add
cmc
scas
add
jmp
jge
enter
mov
insb
fildll
inc
dec
mov
stos
mov
push
divb
xchg
xor
cmp
sub
mov
stc
mov
adc
pop
and
rorl
inc
sub
pop
addr16
ds
jg
bts
fdivrp
cltd
or
dec
dec
xchg
lea
or
inc
mov
mov
cld
jg
and
roll
ficoml
in
push
fistpll
loop
test
aaa
out
fiadds
xchg
lcall
add
push
or
js
ret
aaa
pop
dec
les
push
fcmovnb
jne
cmp
sahf
ja
mov
scas
sbb
aaa
sbb
dec
adc
xor
stc
lock
jg
outsb
shrb
or
dec
jge
fcmove
cmc
inc
lahf
xor
idivl
pusha
lods
xchg
clc
clc
stos
inc
push
fsubrp
ljmp
ss
fstpl
sub
ret
test
repnz
dec
add
mov
loopne
cmp
sbb
mov
pusha
shlb
ljmp
mov
mov
xchg
imul
test
test
sub
in
pusha
mov
mov
adc
in
cvtps2pd
pop
testl
imul
pop
std
in
sub
lcall
sub
sbb
adc
daa
bound
xchg
sub
mov
icebp
pop
xchg
and
mov
addr16
adc
sbb
fs
out
aas
pop
jmp
scas
mov
jmp
push
sbb
outsb
fsub
repnz
push
mov
mov
jbe
mov
adc
aas
cs
imul
add
pop
sbbl
hlt
dec
xor
or
fcoml
mov
or
hlt
xlat
jle
shrb
shl
scas
in
pop
push
mov
jns
inc
or
fistps
loope
movsl
push
sbb
pop
xchg
dec
and
cwtl
les
out
adc
mov
test
push
pop
punpckhdq
pop
dec
insl
pop
fstl
imul
inc
adc
fdivl
mov
cmc
leave
insl
ds
dec
push
mov
out
lahf
inc
cmpsl
lock
in
add
jbe
mov
inc
rcrb
lea
dec
ret
pop
cmp
mov
sbb
sbb
mov
sbb
mov
in
shrb
fcmovnbe
popa
pop
mov
cmp
in
insl
xchg
nop
mov
mov
xchg
lret
movsl
dec
std
xor
jp
adc
lcall
xchg
jb
xchg
std
or
xchg
mov
adc
incl
or
push
cltd
and
leave
out
and
testb
or
push
inc
push
mov
flds
push
jg
ret
add
xor
xchg
xor
dec
mov
outsb
mov
xchg
fs
jl
mov
stos
push
or
xor
mov
mov
cltd
into
add
lods
roll
insl
xchg
imul
pusha
push
cs
dec
rcrb
fcoms
pop
cwtl
rclb
xor
add
repnz
xor
mov
pop
cmp
sub
movsl
xchg
js
scas
aaa
push
pop
cmp
sahf
lock
xchg
xchg
lods
inc
cmp
and
lret
sti
int3
sub
ljmp
mov
fldt
push
xlat
lods
testb
sub
jmp
dec
mov
push
loop
outsb
sbb
inc
push
sub
and
leave
jno
adc
and
xchg
cmp
inc
xchg
pop
mov
in
pop
jbe
addb
cmp
push
loop
idivl
stos
rcrl
push
sbb
adc
shll
fiadds
rolb
lret
cmpsb
fidivl
cmp
inc
pop
outsb
rclb
fadds
shr
push
xor
jns
push
aaa
test
scas
pop
paddw
aaa
sbb
mov
std
mov
nop
mov
pop
xchg
clc
sbb
dec
ffreep
jno
arpl
movsl
hlt
fists
dec
and
sub
lcall
lods
rorl
into
hlt
or
ret
mov
push
inc
scas
test
int3
xchg
sub
inc
push
xchg
dec
xor
mov
sti
pop
fld
adc
mov
and
push
and
sub
mov
flds
jnp
jl
fimuls
lar
adc
adc
push
xchg
std
lds
pop
jne
and
repnz
dec
arpl
jnp
xchg
or
mov
js
ret
leave
mov
es
jecxz
sub
or
clc
pop
ret
lods
inc
cmpsb
add
out
or
mov
sub
loop
mov
fwait
and
fwait
sahf
mov
or
mov
adc
es
push
pop
lods
pop
jns
mov
call
outsl
inc
imul
dec
mov
clc
lea
push
mov
in
push
orb
jno
jge
or
inc
push
sahf
fdiv
daa
xchg
mov
adc
push
repnz
adc
jp
fmull
popa
stos
jle
ret
jb
adc
and
mov
ret
push
jmp
inc
xor
outsb
out
shl
inc
jecxz
outsb
ret
mov
mov
hlt
insl
jg
arpl
and
stos
jno
fimull
scas
xor
test
scas
sahf
gs
sub
jo
adc
ret
adc
ljmp
cmpsb
inc
pop
and
xor
and
add
push
outsb
fists
lods
xor
mov
adc
cmpsl
stos
test
and
xchg
call
mov
aaa
decl
into
jb
push
data16
and
cmpsb
sub
jnp
cmp
pop
adc
out
out
je
nop
jnp
adc
in
jp
cmc
sbb
jnp
lock
inc
cld
ljmp
popf
jl
stos
mov
cmp
call
mov
and
imul
imul
add
jo
mov
addr16
les
pop
cltd
jb
mov
jp
sub
aas
push
out
mov
fsubrp
lods
inc
dec
fdivs
cmp
xor
loop
movsb
xorl
jp
ret
out
repnz
mov
shl
xadd
xchg
pop
add
inc
xchg
or
setge
add
pop
push
addr16
cwtl
jbe
cmp
mov
adc
dec
fwait
hlt
jle
or
mov
lock
or
test
gs
push
insl
mov
int
test
dec
fwait
push
fsubl
pop
int3
mov
push
fwait
repnz
and
mov
mov
cmp
mov
loop
inc
cmp
int3
xchg
aaa
jmp
xchg
lock
xchg
push
pusha
cli
hlt
in
lea
xchg
xor
xchg
mov
dec
xchg
out
and
fnstsw
sub
mov
sbb
cmp
sbb
xchg
out
fdivrs
pop
out
mov
push
jecxz
ret
jns
lret
inc
ljmp
in
lret
cmp
push
push
xchg
xor
out
xor
jb
or
rcrl
mov
mov
je
add
ja
hlt
mov
sub
stc
pop
pop
mov
mov
int
shrb
inc
mov
stc
xor
xor
push
les
mov
test
sbb
shlb
or
in
jnp
jns
popa
xor
xor
inc
mov
push
and
cmp
lret
outsb
xchg
mov
clc
mov
mov
loope
lock
inc
cmpsl
icebp
add
aaa
call
inc
xor
add
mov
arpl
sbb
mov
fnstsw
or
cmp
pushf
shlb
or
stos
fcoml
icebp
and
xchg
mov
inc
loop
inc
rcr
imul
fstps
jbe
jbe
jns
shlb
aam
jbe
push
cld
sub
pop
mov
push
imul
sbb
cmpsb
negb
push
fsts
and
xor
adc
xor
cmp
add
dec
cmpsl
aam
mov
int
and
lods
add
in
fimuls
call
stos
sub
lret
lahf
xchg
mov
push
push
fincstp
or
lcall
xorl
mov
clc
cli
sub
pop
adc
dec
ja
push
and
mov
jg
mov
mulb
ret
xchg
aam
push
jns
and
inc
pushf
ss
sbb
xlat
movsl
sbb
add
mov
sub
shl
push
jle
adc
testl
mov
push
jnp
mov
cwtl
mov
lret
das
cwtl
sbb
cmp
aaa
pop
loopne
cmp
and
cmp
stc
bound
test
in
rcll
push
add
jo
jecxz
cmp
jle
push
int
mov
lret
and
lcall
stos
and
mov
push
fsubp
dec
mov
jbe
mov
mov
fwait
lcall
or
stc
pushf
lcall
jmp
std
pop
xor
mov
addr16
movsb
pushf
imul
inc
or
rcrb
into
aam
sub
xor
test
ljmp
in
push
sub
mov
xlat
lahf
out
aaa
fadds
call
and
dec
pop
mov
outsb
push
push
adc
pushl
mov
inc
xchg
sarb
faddl
mov
cmp
sbb
in
movsb
add
dec
outsl
rcl
fs
jmp
jae
pop
sti
xchg
movsb
movsl
cwtl
divb
push
xchg
mov
and
or
or
jle
inc
pop
add
loop
cld
dec
adc
sub
rcrl
out
hlt
or
jmp
inc
hlt
pop
cld
xor
push
nop
jge
xchg
ds
mov
adc
gs
mov
jns
xor
dec
cmpsb
mov
clc
mov
cwtl
and
inc
sbb
inc
xlat
in
add
lahf
xor
clc
sahf
adc
loop
mov
xor
xor
xor
inc
je
add
decl
lret
sub
cli
leave
xchg
inc
fstl
or
aas
addr16
dec
icebp
popa
loop
rcl
xor
push
mov
lea
insb
or
stos
dec
push
ss
loopne
mov
rcr
shrb
cli
cmc
pop
and
je
inc
add
mov
int
int
pop
pusha
mov
adc
add
xor
jns
sub
cwtl
push
lcall
ljmp
nop
loopne
mov
std
pop
mov
xchg
push
dec
or
loop
cmpl
sbb
mov
mov
stos
js
out
call
adc
add
xchg
xchg
fnstcw
in
cmp
imull
popf
mov
lcall
mov
inc
jle
or
dec
jl
les
push
push
std
arpl
lahf
aad
inc
xor
outsb
fcom
jo
setnp
cmp
push
and
sbb
sahf
fiaddl
cmp
idivb
push
jae
jl
test
jl
sbb
mov
pushf
xchg
dec
and
fstpl
push
dec
imul
insb
insb
inc
and
add
pop
out
add
das
cmc
scas
repz
xchg
xorl
lds
popf
inc
loop
and
aas
int3
jne
mov
fmull
lock
addl
cmovbe
out
jae
cwtl
dec
mov
iret
or
mov
mov
lret
or
outsb
loopne
in
pop
sbb
dec
cmpsl
pop
adcl
ret
hlt
push
adc
movb
popl
test
or
rcrb
shll
inc
jno
out
pop
mov
xchg
dec
hlt
or
das
bound
pop
or
sub
sbb
cld
sbb
xor
enter
movsb
xsaves
sahf
out
popf
insb
and
iret
loopne
aaa
es
xchg
inc
adcb
das
adc
push
fcmove
fwait
jle
xor
push
push
mov
sub
mov
or
mov
mov
mov
push
les
xchg
in
outsb
je
rcll
arpl
loopne
cmpsl
pop
insb
sub
mov
pop
pop
ja
mov
cmp
imul
sbb
std
inc
mov
loopne
inc
aad
bsr
mov
pop
xchg
out
pop
outsl
and
mov
insl
mov
mov
jns
pop
clc
imul
or
and
mov
and
aad
fsts
ds
hlt
xorb
out
cmpsb
adc
jle
mulb
mov
repz
scas
fwait
xchg
xchg
lods
sbb
cmp
fisttps
rcrb
in
lods
mov
xor
or
stos
lods
les
adc
mov
push
repz
sub
cs
adc
ljmp
popf
xor
add
xor
std
ja
andl
mov
adc
imul
int3
xor
sub
jg
cli
sti
dec
je
lret
stos
add
les
mov
inc
test
mov
dec
out
mov
xchg
jnp
fs
std
dec
dec
cli
jo
mov
nop
pop
shrb
cmp
jl
xchg
movsb
add
push
mulb
xchg
pop
and
mov
out
and
push
push
rcrl
inc
aaa
aad
xchg
or
inc
outsb
or
jle
fnsave
xlat
aaa
jge
hlt
xchg
lret
mov
outsb
aam
push
in
xor
arpl
cmp
stos
pusha
in
adc
loop
dec
insb
insl
data16
ds
orb
jnp
scas
mov
adc
popa
xor
or
mov
fs
test
lods
add
enter
insl
fsubrs
push
inc
mov
icebp
stos
xor
test
push
inc
xchg
mov
add
fcoms
repnz
in
shr
cmp
mov
mov
mov
xchg
dec
jae
jo
je
ret
mov
sahf
lcall
mov
add
dec
aas
into
mov
cmpsb
mov
out
inc
adc
les
mov
xchg
fldenv
lret
cs
test
cmp
icebp
divb
or
ss
jno
pop
jbe
push
bound
cwtl
jmp
leave
mov
push
cwtl
xchg
in
dec
mov
mov
pop
dec
push
sbb
test
sub
loope
pop
pop
or
popa
out
test
and
out
fbstp
fnstsw
bound
fcoms
aam
xor
out
inc
push
mov
cmp
outsl
mov
lea
loopne
push
push
mov
add
push
jecxz
jmp
lea
mov
mov
enter
mov
cli
stc
lret
xchg
jb
xchg
mov
pushf
or
icebp
inc
inc
push
neg
cmpsl
in
loop
push
xchg
in
pop
dec
je
or
adc
out
jne
aas
jle
sbb
push
mov
jns
push
dec
jbe,pn
ror
scas
jecxz
les
xlat
push
pushf
push
out
xchg
pusha
dec
push
jnp
stos
loope
xchg
sbb
push
cmp
cmp
jp
mov
mov
movsl
je
in
mov
xor
or
fistl
mov
aam
pop
movsb
jg
lahf
dec
enter
or
add
adc
test
lods
or
popa
sbb
xchg
push
cmp
dec
mov
stos
jmp
leave
mov
pop
repnz
pop
and
sti
jmp
fcoml
cmp
mov
jp
inc
std
push
loop
imul
pop
dec
scas
push
mov
mov
xchg
jo
loop
inc
jbe
mov
mov
fwait
xchg
push
push
mov
rcl
test
dec
inc
ret
stc
ljmp
bswap
int
sbb
jnp
sub
repz
insl
out
push
inc
sarb
inc
sub
fidivl
lret
mov
scas
stc
push
aam
in
xchg
xor
xor
pmaxub
xchg
inc
push
pushf
rcrl
mov
lods
pop
scas
jge
out
and
clc
add
or
leave
sbb
push
ja
mov
jle
cmc
jmp
in
shll
xchg
mov
xchg
psubq
inc
lea
mov
push
pop
fucomi
inc
das
in
imul
xchg
repnz
pop
xchg
popf
adc
dec
and
bound
xchg
push
in
mov
bound
fidivrl
shll
fwait
adc
mov
fiaddl
jns
shll
aaa
mov
shrl
xor
pop
aas
call
push
dec
lret
adc
xlat
jge
xor
icebp
jmp
add
adc
imul
inc
jae
lods
dec
lcall
jo
test
xchg
lret
scas
pop
pushf
sbb
dec
xorb
jo
out
rolb
js
subl
lea
fsubp
jg
fistps
adc
lret
push
out
adc
inc
sbb
call
pop
inc
or
xchg
call
sub
roll
test
push
lret
ret
lea
xchg
out
cld
and
adc
sbb
jae
jg
mov
pop
fists
popl
fdivl
repz
jmp
pop
out
jg
jmp
jmp
enter
xor
mov
mov
mov
nop
mov
movsb
movl
cmp
push
add
pop
push
int3
xchg
test
pop
xchg
sub
rcr
jns
nop
sbb
aad
sub
inc
and
or
push
dec
mov
push
mov
ds
push
mov
rol
inc
fidivs
and
sti
jle
sub
outsl
les
or
push
mov
inc
add
sub
jp
and
lds
ja
call
popa
pop
stos
jno
jecxz
cltd
rcrl
sub
addb
fucomp
es
add
xchg
push
jle
sub
push
cmp
jb
sub
mov
in
inc
pushf
sbb
adc
sbb
and
mov
adc
not
push
pusha
adc
adc
xor
mov
scas
shrb
lds
jmp
test
fsts
add
mov
fucomip
xor
sahf
inc
mov
xor
sbb
fdivs
and
pop
ret
mov
mov
mov
jle
pusha
pop
xor
xor
shll
sbb
sbb
add
out
mov
enter
mov
pusha
mov
cltd
dec
arpl
xchg
inc
xchg
push
cmp
mov
xor
jnp
fsubrl
sbb
dec
add
pop
adc
fnsetpm(287
imul
pop
jp
add
call
cmp
mov
dec
mov
rorl
sbb
fwait
mov
sti
adc
iret
scas
or
jo
clc
lcall
push
jp
xchg
xlat
fucomp
sub
les
cmp
push
fdivrl
and
into
in
adc
subb
popf
push
push
fildl
lds
fs
aaa
mov
clc
sub
out
mov
xchg
xchg
imul
inc
xor
leave
mov
adcl
rcll
mov
and
movsl
dec
dec
mov
ror
dec
fildll
sbb
lret
inc
sub
inc
addr16
hlt
aaa
out
push
jl
enter
or
leave
xchg
pop
add
icebp
sti
rcll
addr16
xor
xchg
fsubr
pop
aas
or
pop
mov
push
push
ds
dec
or
mov
cld
lock
mov
cwtl
sbb
rorb
xchg
pop
xor
sbbl
stc
fdivs
inc
cmp
notl
mov
rcrl
mov
outsl
add
xchg
add
mov
xchg
cmp
outsl
lahf
adc
mov
fsubrl
dec
daa
adc
dec
fs
push
dec
jle
bound
pop
push
stc
es
xchg
rclb
sahf
into
bound
fld
imul
fldenv
sub
cmp
lds
mov
mov
add
add
sbb
es
xlat
xor
rcrb
jb
inc
add
xchg
mov
insb
xchg
mov
test
xchg
clc
mov
sub
in
mov
jecxz,pt
mov
lahf
test
out
imul
pop
mov
mov
mov
adc
scas
pop
fists
xor
add
mov
roll
lock
pop
lret
jmp
into
int3
xchg
cmpsl
out
sub
sub
jg
jmp
dec
imul
mov
or
lods
cmp
dec
je
vpcmpeqd
aas
sahf
inc
push
leave
ret
xchg
test
adc
sub
sub
in
fldt
loopne
in
inc
push
adc
mov
leave
push
inc
out
or
jle
xchg
and
and
sarl
mov
cmp
rcl
sbb
rcl
inc
jbe
inc
add
xchg
scas
mov
sbb
imul
sbb
add
es
in
decl
outsl
sub
es
rep
mov
pop
dec
mov
repnz
in
jecxz
shrl
sub
add
mov
push
test
adc
in
lcall
mov
shr
and
mov
cmp
xor
adc
cmpsl
push
fists
add
aaa
mov
jp
pop
and
ret
add
or
push
jle
add
rorl
cltd
mov
jmp
test
sub
push
and
push
addr16
and
jle
lods
inc
mov
sarb
sbb
loopne
and
test
out
and
popf
jp
sbb
jno
add
add
xchg
jmp
push
cs
add
mov
mov
cmc
and
inc
xor
mulb
dec
sub
out
aad
sbb
inc
push
jno
cmc
mov
in
add
adc
cwtl
notl
mov
mov
inc
xchg
ret
mov
aad
scas
mov
das
sti
les
cmp
push
cmpsb
dec
shr
cmp
les
inc
and
and
je
or
cmp
push
push
dec
insb
sbb
pop
pop
dec
scas
aas
lock
jg
adc
sbbb
push
cltd
stos
int
out
lret
shlb
fwait
sub
jbe
xchg
stos
je
lcall
push
test
cmp
push
sbb
cltd
dec
mov
das
pop
xchg
or
andl
test
jmp
xlat
mov
movsl
push
xchg
fdivrs
and
popa
mov
pop
mov
or
adc
lea
xor
xlat
popf
xor
mov
shl
inc
push
xor
jmp
arpl
out
cmp
ja
add
push
push
jle
gs
jg
std
stc
lods
adc
inc
fnstenv
jmp
sub
in
dec
or
jno
test
add
rcr
ja
pop
push
lock
push
arpl
sbb
pop
sbb
js
push
inc
lret
das
xchg
movsb
in
loopne
js
mov
mov
jmp
into
xorl
and
ret
test
aad
mov
push
orb
push
mov
mov
das
cmc
cmp
lds
je
xor
push
xchg
sbb
jns
pop
fidivs
aam
fists
mov
test
repnz
push
clc
mov
shr
adc
aaa
add
test
sub
cmp
or
push
shr
mov
ljmp
into
sbb
jae
push
mov
xchg
fldl
cltd
cmpsb
imul
leave
xchg
xlat
lret
jbe
push
mov
lds
ret
mov
and
push
mov
mov
sbb
dec
xor
and
jb
sbb
fisttpl
jb
iret
subb
stc
adc
mov
mov
push
pop
and
or
rorb
movsl
sbbb
call
jecxz
pop
adc
pop
movsb
popf
mov
mov
pop
jae
int3
pop
lock
xor
cmp
lahf
fstl
push
addr16
dec
pusha
pop
mov
lcall
mov
insb
in
push
mov
iret
mov
cmc
cs
mov
nop
orb
xor
mov
cmovae
ficompl
bound
fisubs
lods
insl
mov
push
xchg
jno
movsl
mov
mov
sbb
mov
mov
sbb
insb
outsl
int
lods
sub
jg
sti
sarl
loope
adc
and
jg
mov
sbb
add
in
mov
adc
push
dec
cmp
stos
in
inc
sub
mov
lahf
out
mov
sahf
lea
testl
cli
mov
mov
pop
jge
pushf
pop
jae
add
pop
les
cmc
jle
sub
mov
testl
jmp
xchg
es
mov
and
mov
inc
jb
sbb
dec
sbb
lretw
cmp
dec
repnz
movsb
data16
arpl
sub
into
test
mov
out
cli
and
call
mov
add
test
aam
push
test
andl
cld
fucom
sub
lods
insl
movb
pusha
add
rcrb
jbe
push
mov
add
jp
jp
push
fnsave
test
mov
and
jge
psubsb
mov
imul
addr16
mov
mov
or
pop
test
inc
scas
lods
xor
les
adc
push
aam
pushf
mov
test
lods
or
lods
add
jns
jbe
sbb
or
pop
ljmp
xchg
or
cmp
sar
pop
mov
aas
stos
push
out
mov
push
stos
xlat
sar
in
stos
fwait
sbb
sarl
mov
jecxz
cmp
xchg
roll
je
xor
out
jle,pt
xlat
cmc
iret
gs
and
inc
sub
ljmp
cmp
cld
cmp
clc
add
jae
or
cltd
out
inc
bound
out
repz
aaa
push
push
ljmp
push
in
pop
pop
adc
mov
pushf
pop
sub
adc
add
pop
sti
mov
sbb
push
ss
mov
push
mov
scas
sub
iret
popa
push
aas
mov
cmp
inc
add
insl
sbb
mov
fidivs
fistpll
add
mov
sbb
insl
xchg
notb
imul
addr16
ret
push
push
nop
out
scas
xchg
mov
mov
lret
mov
daa
mov
pop
popa
hlt
pop
sbb
cwtl
pop
das
movsb
stc
ljmp
or
dec
ds
insb
addr16
data16
mov
lret
add
mov
xchg
fdivrl
scas
popf
dec
lods
sub
pop
inc
iret
dec
inc
out
lcall
les
insb
std
daa
push
jmp
mov
push
dec
call
mov
js
mov
out
sbb
push
pop
sahf
frstpm(287
jg
xor
icebp
xlat
pusha
mov
jns
dec
sbb
inc
sub
je
add
inc
inc
cltd
shll
inc
popf
cmpsb
int
or
sub
ret
cmc
mov
dec
dec
js
xor
mov
out
cmp
ljmp
sub
mov
mov
int
fadds
pop
int3
fstl
push
inc
lock
mov
jno
jb
in
in
rclb
clc
mov
test
and
push
push
xlat
inc
cmp
std
in
sub
ds
scas
push
dec
xor
lea
mov
push
lea
iret
xor
shl
aas
xor
notb
fisubrs
inc
mov
pop
jp
aam
jno
jecxz
pop
push
jns
push
inc
decl
mov
push
xchg
ds
divl
and
addr16
insb
je
jecxz
ss
xchg
int3
dec
sub
cmp
or
lock
test
xchg
pop
jp
int3
push
or
adc
xlat
fsts
xchg
jns
push
push
or
aam
mov
jecxz
mov
jl
mov
lock
push
lock
xor
lret
push
mov
out
ds
mov
cmp
cltd
mov
and
add
ret
dec
into
ja
push
pop
cld
iret
pop
hlt
int
outsb
ds
jecxz
dec
jae
jns
test
loope
lods
ficomps
cmp
ja
pop
shlb
in
fwait
add
dec
setge
rorl
aaa
push
mov
loope
xchg
push
jmp
mov
push
fdivrl
std
mov
rcrb
push
clc
rol
andb
push
add
add
mov
movsb
and
add
fildl
push
jb
pop
stos
xchg
mov
js
adc
pop
mov
mov
push
and
jp
add
jb
stos
pusha
push
mov
jne
flds
lahf
push
into
jns
les
sbb
jno
jb
call
and
sti
and
sahf
shll
dec
sbb
push
test
adc
lea
mov
xchg
add
push
push
ret
fldenv
loope
outsb
jo
sub
popa
add
mov
fistpll
mov
test
xchg
lods
pusha
iret
cmc
jl
cmpsb
fwait
jns
cwtl
addl
inc
lock
pop
inc
mov
push
les
and
ja
and
push
clc
adc
sbb
mov
xor
aad
push
roll
adc
pop
jne
xchg
sbb
add
int
ret
lcall
call
mov
mov
stc
popa
dec
ret
shll
add
pusha
mov
aaa
addr16
mov
shlb
and
repnz
inc
mov
jl
adc
ljmp
adc
jo
cmp
cs
xchg
pop
pop
stos
push
jge
xchg
and
dec
fisubs
push
bound
mov
ret
int
repz
inc
outsb
lcall
mov
adc
push
sbb
push
sbbb
test
lcall
iret
ret
xor
shufps
and
inc
lahf
popf
subl
rcll
cmp
addr16
cltd
lds
cmpsb
mov
cltd
mov
paddsw
pop
jno
cmp
sbb
xor
inc
mov
out
pop
fidivrl
sbb
pop
pop
pop
inc
inc
jl
pusha
aaa
lahf
imul
test
aad
leave
shll
or
leave
sub
gs
out
pusha
xor
outsl
mov
mov
sub
mov
ds
mov
or
gs
or
xchg
dec
mov
es
dec
xlat
pop
je
xchg
scas
call
jne
cmp
cmp
push
fistpl
loope
pop
push
xor
inc
jl
xor
mov
test
clc
xor
popf
stc
shl
xchg
mov
jge
jne
or
lret
pusha
out
push
leave
dec
adc
pop
cmp
or
lock
jae
dec
inc
rorl
pop
fwait
inc
xor
inc
inc
push
push
je
xchg
push
add
xchg
stos
adc
outsl
or
das
jp
pop
nop
je
add
mov
fisttpll
pop
or
sub
ret
mov
sub
sbb
mov
push
xchg
xchg
xchg
mov
mov
pop
xchg
lods
jb
sub
mov
adc
mov
shrb
jg
jg
scas
sub
jns
cmp
lret
add
adc
outsl
sbb
xchg
movsl
jb
sbb
addr16
cmp
insl
pop
xor
pusha
inc
inc
test
clc
shll
clc
push
andb
call
jno
or
and
ficoml
ljmp
cmovs
cmpsl
movsb
cmp
inc
test
jg
xor
sub
nop
or
xlat
hlt
leave
leave
jecxz
test
pop
mov
dec
cld
mov
xchg
jno
mov
sub
xlat
loopne
jbe
xlat
pop
je
jnp
lcall
loopne
mov
popf
roll
dec
cmp
cld
imul
inc
cwtl
lods
sub
lret
lock
or
dec
pop
cmpsl
adc
mov
inc
xchg
xchg
ud2
loop
cltd
test
mov
sbb
push
xchg
mov
push
clc
fstps
mov
push
and
fsubl
rcrl
push
sub
and
rolb
scas
push
adc
add
fcoms
lods
scas
mov
lods
cld
movsl
cmc
scas
pushf
jns
and
test
sbb
hlt
mov
mov
out
mov
or
dec
test
lcall
rclb
push
mov
mov
cmc
mov
dec
scas
je
into
cmp
dec
fdivs
sarl
test
pop
gs
loop
addr16
add
mov
pop
addr16
pusha
aaa
rcrb
popf
mov
fwait
add
jno
shrl
xchg
and
roll
pop
xor
and
std
jmp
test
add
mov
xchg
mov
loopne
pushf
int3
shll
std
adc
and
repnz
ljmp
inc
aas
mov
lcall
popf
iret
mov
sub
push
es
out
xchg
sbb
ljmp
shrl
inc
jle
andl
fdivr
fisubrs
inc
mov
call
rorl
cmpsl
movsl
sub
sub
xchg
cmpl
mov
cltd
xor
and
cmpsb
lods
and
movsb
lcall
aam
jno
mov
movsl
push
push
pop
nop
dec
or
fists
in
and
pop
sub
aas
push
xchg
xchg
fnstcw
insl
and
movsb
mov
mov
jle
and
les
mov
imul
cmc
call
dec
icebp
push
ss
mov
xchg
int3
mov
mov
jl
popf
dec
push
push
int3
fsts
mov
outsl
test
imul
pop
cli
mov
jb
xor
mov
lret
mov
lret
icebp
push
xor
lea
mov
jae
sahf
lcall
pushf
push
enter
xchg
int3
fsubrl
or
test
dec
lahf
push
pop
pop
jle
jl
imul
cmc
je
push
icebp
push
ja
std
insb
sbb
or
bound
mov
push
sub
test
dec
outsb
sbbb
cmp
loope
push
imul
sub
mov
fcomps
mov
ret
arpl
cmp
jle
pop
cmp
xchg
push
es
pop
pop
in
je
cmp
sti
cld
dec
push
bound
rolb
filds
ja
inc
adc
mov
in
icebp
mov
inc
in
lds
stos
adc
or
lret
mov
test
xchg
push
int
add
pusha
adc
push
dec
gs
push
sub
jns
or
insb
ret
imul
ret
adc
das
sbb
js
xchg
dec
adc
and
sbb
mov
jns
test
jne
rcl
pop
sbb
out
mov
mov
out
jns
adcb
bound
stos
jl
inc
sub
leave
add
jo
inc
adc
xchg
dec
sub
sbb
jns
adc
fs
notl
dec
push
lods
jb
mov
jno
out
hlt
data16
mov
jg
adcb
mov
sbb
cmc
dec
push
js
cmc
fcmovnb
jl
adc
roll
clc
lea
test
in
mov
aas
cs
cmp
mov
xor
out
jmp
fimuls
cmp
adc
sbb
xor
into
std
in
pop
lds
mov
push
xor
xchg
push
clc
sbb
xchg
inc
sub
mov
call
fwait
lea
sub
aad
push
jl
pushf
jae
repnz
movsb
aaa
mov
outsl
nop
fdivl
dec
fstpl
lods
and
shlb
in
fsubl
mov
test
inc
aaa
inc
xchg
lock
popa
adc
xchg
sbb
jnp
dec
pop
out
sub
dec
xlat
scas
and
jle
mov
bound
cli
mov
add
bound
add
jmp
fs
jmp
icebp
idivl
dec
or
into
inc
dec
sub
xchg
scas
clc
and
cmp
fucomp
mov
push
lds
sahf
lds
xchg
hlt
jle
adc
mov
push
mov
ret
sbb
dec
jp
stos
xchg
adc
xabort
jb
fldcw
lahf
mov
pusha
repz
xchg
inc
stc
insl
dec
inc
inc
scas
pop
xchg
scas
jns
add
fwait
xchg
ret
dec
repnz
pop
ret
inc
pop
in
xor
dec
stos
or
add
add
loope
aaa
scas
in
aaa
les
xchg
jo
adc
mov
insl
xchg
and
lds
pop
mov
push
jne
xchg
and
fwait
inc
xchg
mov
or
and
adc
aas
sub
sbb
test
pop
fdivrl
jae
adc
in
testb
inc
outsl
stos
mov
scas
out
jno
pop
inc
or
pop
pop
loope
xchg
mov
hlt
daa
imul
cmp
push
inc
pushf
mov
jo
mov
adc
jecxz
out
das
out
pop
cmp
sub
jecxz
frstor
iret
push
icebp
call
mov
les
data16
mov
mov
mov
jp
mov
outsl
push
xchg
sbb
ret
dec
pop
movsl
leave
iret
lea
outsb
call
clc
push
and
push
movsl
cmpsl
jo
jge
mov
cmp
fistpll
enter
mov
add
xchg
mov
fwait
movsl
pop
pop
inc
sbb
mov
mov
stc
push
dec
lret
xor
cs
pop
add
enter
add
sbb
mov
sub
jns
jnp
jle
mov
xchg
push
dec
outsb
push
ds
cmp
jnp
ljmp
add
pop
jg
add
xor
adc
add
xchg
movsl
xchg
mov
cmpsl
pop
xor
mov
es
cltd
xorb
sahf
aaa
xor
test
adc
or
mov
inc
pop
inc
mov
mov
sbbb
mov
addr16
shlb
xor
inc
jmp
movsb
xchg
push
js
inc
mov
mov
pop
push
sub
loope
rol
sbb
cld
bound
rolb
pop
and
rcll
mov
push
cmpsl
cmp
mov
push
sahf
dec
ret
xor
lret
lea
inc
xor
jl
mov
push
in
push
pushf
inc
pop
mov
les
mov
aam
shlb
aas
aam
sub
insl
xchg
sarl
mov
scas
out
mov
mov
nop
cs
pop
jl
mov
push
mov
daa
xchg
dec
stos
int
and
in
jns
push
jl
mov
in
lods
arpl
mov
mov
adc
test
popf
gs
popf
cwtl
pop
std
cmp
clc
inc
jbe
ret
mov
sbb
loop
xchg
push
inc
aaa
enter
sti
fidivs
xchg
add
sub
mov
inc
or
add
dec
push
ficomps
jbe
adc
sti
cmp
jo
and
pop
push
pop
shlb
lock
jle
jecxz
mov
movsb
adc
aam
shrb
int
ja
pop
pop
scas
roll
aam
sti
scas
or
sbb
loope
movsl
inc
pop
out
sub
and
mov
jl
hlt
add
and
fs
mov
test
lret
xchg
pop
pop
adc
sub
dec
cmp
mov
mov
xchg
ret
cmpsl
jp
sbb
jno
out
je
add
xchg
test
push
push
jmp
push
inc
or
add
fisttpl
push
pop
fiaddl
mov
pop
scas
filds
jb
jae
mov
in
sub
test
xor
fimuls
inc
mov
adcl
pop
dec
jecxz
cltd
call
gs
or
arpl
add
xchg
jae
les
pinsrw
int3
outsl
jecxz
xchg
mov
xor
mov
pop
mov
mov
xor
cmpsl
xor
xlat
in
sub
mov
mov
jl
ja
leave
pop
cmc
xor
or
xchg
fcomi
sbb
ljmp
stos
pusha
movsl
shrl
pop
push
mov
push
sub
out
cmpl
add
pusha
loopne
pushf
mov
xor
fisttpll
jecxz
je
xchg
sti
addr16
in
fldl
cmp
insb
daa
pop
mov
loopne
test
pop
hlt
jb
xchg
push
or
shrl
lret
or
fwait
xlat
push
stc
adc
cld
mov
jmp
dec
pop
mov
mov
loop
stc
mov
xchg
sti
or
std
jp
outsl
aaa
mov
add
les
movsl
test
popf
push
pop
add
jae
out
jge
jno
je
ficompl
fadd
mov
sub
add
enter
mov
dec
negb
jno
rcrl
aaa
test
mov
push
push
data16
mov
fnstcw
pusha
push
lods
sbb
jp
jne
out
jno
mov
cs
push
add
mov
and
rolb
out
mov
movsb
or
repz
mov
movsl
clc
mov
adc
cmpsb
jmp
sbb
sub
mov
iret
incl
shll
hlt
xchg
fistl
mov
jb
xor
out
repz
iret
jecxz
push
insl
mov
mov
data16
adc
repz
shr
stos
push
aad
div
mov
xchg
std
pop
aas
ja
and
push
stc
and
lock
pop
inc
lock
hlt
add
lret
imul
std
test
and
xchg
dec
pushf
data16
or
div
lods
sbb
pop
mov
clc
mov
xchg
mov
jl
aas
adc
jg
mov
loope
loopne
je
test
push
push
sti
add
mov
cmp
mov
cmpsl
pop
jle
arpl
rcrb
loope
fs
or
or
lret
push
fstpt
pop
mov
inc
cmpb
inc
xchg
scas
icebp
push
mov
test
add
paddw
inc
pop
ljmp
leave
push
ret
mov
dec
sbb
push
push
fwait
outsl
inc
adc
jbe
inc
je
cmpsl
stos
xlat
jg
fstpt
mov
mov
ljmp
and
and
fs
xchg
add
jne
leave
sub
xlat
sbb
pop
loop
inc
stos
xchg
adc
or
mov
xor
dec
testl
and
push
xor
test
fiadds
fnstsw
rclb
inc
and
inc
neg
lods
decl
adc
fisubl
popf
mov
stc
sbb
es
loop
imul
xor
jne
mov
mov
lds
mov
or
mov
outsl
icebp
dec
dec
mov
pop
out
cmpsl
les
mov
ss
xlat
pop
mov
jle
ret
sub
lods
add
jae
dec
nop
mov
mov
push
xchg
into
lsl
xor
mov
xor
push
jns
mov
leave
int3
inc
jb
fidivrl
jb
jle,pn
in
jae
decl
repz
mov
or
mov
pop
out
adc
pop
xor
ds
or
pop
aaa
test
ret
xor
dec
cs
xor
pop
int
or
and
jo
into
jge
scas
adc
adc
push
nop
das
lahf
mov
mov
inc
popa
iret
aam
fcompl
mov
jmp
add
ja
inc
cmp
mov
adc
into
movsl
xchg
mov
inc
in
sar
js
inc
popf
dec
xor
std
jge
call
ds
es
push
xchg
xchg
adc
or
mov
shld
dec
iret
mov
sbb
xchg
insb
jne
push
mov
jg
dec
popa
xlat
insb
inc
int3
addr16
mov
movsl
divb
mov
sbb
aad
out
loope
xor
outsb
fsubrs
add
cltd
jg
and
sbb
es
pop
fbstp
loope
into
cwtl
imul
sub
dec
mov
lock
and
jae
pop
mov
inc
push
add
ds
push
aas
loope
inc
daa
addr16
jp
sbb
pop
mov
jns
sahf
test
or
loope
mov
leave
fnstsw
data16
pop
sbb
and
xor
or
sbb
xor
mov
jmp
shll
or
xchg
push
nop
imul
push
and
bound
sbb
in
add
push
sbb
jnp
mov
cmovg
dec
push
jno
cmpsl
out
in
sbb
cmp
js
mov
shlb
dec
lahf
ret
cmp
dec
mov
xchg
jp
mov
clc
adcb
in
pop
adc
dec
jb
and
mov
sbb
or
dec
push
xchg
aam
fdivs
decl
mov
scas
dec
xchg
sbb
mov
test
add
pop
rcl
push
adc
mov
insl
lahf
ljmp
pop
push
cli
mov
call
dec
xor
scas
or
mov
inc
fcompl
or
fstpl
jmp
pop
rclb
dec
js
idivb
xor
sbb
jmp
and
pop
sbb
aad
sbb
mov
fiadds
sti
nop
jb
cltd
adc
gs
jle
push
sbb
and
pop
pop
iret
mov
mov
ret
pushl
pop
mov
pusha
sbb
cwtl
mov
shl
jecxz
add
dec
hlt
push
scas
inc
mov
adc
xor
xchg
and
sbb
adc
imul
adc
int
cmp
push
fiaddl
aad
mov
push
push
jecxz
loop
fwait
jl
rcll
and
ja
out
jne
test
push
test
jbe
shll
mov
sbb
test
out
popa
lods
add
or
jbe
and
loop
add
jmp
push
pop
clc
stos
push
jg
je
lods
call
cltd
loope
or
xor
jecxz
jecxz
rcrb
mov
xchg
mov
pop
negb
push
adc
in
mov
mov
adcl
dec
sbb
stc
inc
addl
repz
mov
shlb
inc
daa
push
jo
cmp
in
adcb
pop
ja
call
lea
xlat
adc
leave
inc
les
dec
mov
xor
rcl
inc
aam
pop
push
and
bound
jle
and
add
push
incl
push
jl
mov
daa
lret
jae
popf
scas
nop
sbb
aas
sub
popf
xchg
push
jnp
xchg
ljmp
movsl
sbb
rclb
in
adc
pop
addb
mov
ds
in
mov
mov
ss
test
and
scas
ss
inc
xor
popa
loopne
pop
inc
sbb
adc
mov
movsl
hlt
or
loop
pop
sahf
and
xchg
mov
roll
adc
add
cmp
xor
scas
mov
xor
loopne
sti
adc
xor
pop
ror
scas
xchg
pop
pop
fldl
and
pop
push
mov
mov
out
sbb
ljmp
push
fdivrs
and
xor
dec
cs
loope
cmpsl
sbb
jg
jecxz
push
cmc
pusha
aas
dec
push
jns
jmp
sbb
dec
sub
or
jge
push
dec
nop
lods
mov
sbb
jecxz
fs
dec
push
gs
xor
out
lock
jl,pt
call
mov
ficoms
outsb
rcrb
lea
xchg
cmp
push
push
lods
sub
push
adc
jb
andl
aad
scas
imul
hlt
loopne
in
dec
and
lds
stc
aad
notrack
aad
imul
lcall
mov
je
lahf
paddusw
pusha
mov
cld
mov
adc
pop
pop
lods
cmpsl
lret
cmp
icebp
jge
dec
jg
int
dec
sahf
out
hlt
hlt
add
inc
out
sub
dec
lods
hlt
mov
mov
push
adc
lea
push
push
cli
fst
mov
and
mov
xchg
push
or
jae
sbb
mov
mov
and
inc
cltd
test
xchg
sub
stos
mov
out
xor
mov
push
repnz
sub
es
insl
or
add
sbb
sahf
pop
xchg
imul
mov
pop
popf
cmp
jae
enter
mov
push
jno
aas
and
pop
adc
std
mov
mov
in
lock
dec
xor
adc
pop
xchg
out
addr16
out
xor
lds
mov
adc
add
pop
add
inc
mov
inc
mov
or
mov
or
xchg
mov
movb
rcrb
lcall
fdivp
pop
xchg
stc
xchg
cmp
ja
inc
lock
notl
sub
push
xchg
arpl
js
jmp
test
xor
es
je
lret
inc
push
mov
out
lods
cmp
nop
js
dec
jo
std
add
in
xchg
into
mov
add
bound
popf
mov
jnp
loop
adc
jle
push
inc
mov
jne
mov
inc
push
adc
adc
mov
mov
push
jmp
shl
adc
push
cmp
in
xchg
jno
xor
addr16
imul
sti
mov
rol
mov
inc
xchg
sub
mov
mov
pushf
sub
ss
mov
dec
outsl
push
adc
inc
lret
inc
into
jg
aaa
jmp
punpcklbw
mov
dec
pusha
in
int
dec
das
test
sub
pop
xorl
insb
ljmp
sbb
ja
mov
adc
pop
mov
mov
shlb
inc
and
sahf
jecxz
out
imul
adc
sub
je
movsl
push
cmp
mov
cmpb
sbb
jbe
movsb
and
push
xor
addr16
xor
push
xchg
mov
jns
xchg
loop
data16
std
lock
mov
and
adc
mov
sbb
out
inc
cmp
mov
sub
shll
pop
pushl
push
outsb
les
aaa
jle
jp
inc
in
rclb
imul
cmp
mov
jns
xor
je
shlb
call
add
cmp
movsl
xor
icebp
repnz
stos
sub
data16
addr16
in
stc
fldl
xor
mov
je
test
push
xor
daa
rclb
and
mov
adc
add
add
test
std
scas
mov
lret
nop
hlt
gs
insb
das
push
pushf
sub
dec
pop
lret
rclb
jg
inc
push
scas
lahf
aad
add
inc
jbe
xchg
leave
mov
scas
movsl
mov
cld
stc
stc
leave
rorl
pop
jb
pop
mov
sub
mov
rorb
sub
enter
inc
lods
pop
popf
adc
hlt
cmp
sbb
jle
lods
add
testl
xchg
cmp
jle
xchg
jns
mov
mov
jmp
xchg
add
je
pop
cmc
test
hlt
push
cmp
leave
addb
aas
sbb
testb
pop
scas
test
incl
mov
sub
subl
leave
or
mov
inc
pop
fs
mov
aaa
xchg
gs
je
mov
bound
xchg
movsb
pop
fimull
popa
jge
push
sub
dec
cmpsl
fisttpll
sbb
jecxz
xor
dec
imul
ja
aam
repnz
clc
cmp
outsl
outsl
push
mov
push
inc
jno
or
clc
mov
or
add
sti
jge
xchg
outsb
fstps
lock
push
fcomps
rcrl
movsl
push
clc
mov
xor
pop
in
mov
mov
xor
mov
bound
out
lods
sahf
shrb
jne
sarl
cltd
arpl
jbe
add
inc
xor
mov
ds
inc
fildll
jb
pop
sub
mov
cmp
das
aad
popf
daa
sbb
inc
push
mov
xor
loope
inc
test
testl
aas
xchg
js
push
push
sub
out
jb
mov
sbb
xchg
popf
das
add
push
int
pusha
mov
adcb
lds
loope
dec
xchg
pop
lcall
xlat
add
inc
sub
mov
mov
xor
imul
pop
test
jmp
cmp
xchg
pop
setl
inc
adc
sbb
sub
jne
mov
sti
dec
mov
scas
fcmovbe
inc
popa
gs
lcall
mov
outsb
mov
dec
sbb
incb
mov
mov
lods
lods
fstpt
jo
push
incb
in
mov
lods
test
pop
daa
push
jge
mov
aam
jmp
ret
int3
dec
pop
sub
or
push
sbb
push
inc
in
and
in
aaa
mov
in
push
cld
jmp
iret
sub
rolb
sub
add
or
lahf
cmp
enter
inc
inc
in
dec
or
fdivrl
pop
cmp
cwtl
cmp
ret
in
iret
xchg
and
mov
add
xchg
cltd
jbe
push
jmp
pop
add
sub
in
ret
push
xor
push
insb
orl
sarl
cld
push
push
pop
data16
add
insl
jnp
xchg
divl
xor
sub
shrl
out
fs
pop
or
add
push
xor
sbb
testl
xor
cmp
sarb
mov
repnz
push
aam
rcl
insb
adcl
mov
mov
add
xchg
fldenv
cmp
cmp
or
bound
inc
sub
cwtl
insl
dec
and
sarl
pop
fimull
jle
adc
mov
cwtl
mov
mov
push
sub
jecxz
jge
mov
lods
imul
pop
dec
dec
mov
loopne
jne
jle
and
enter
daa
jb
mov
jbe
test
test
xchg
fisubrs
pop
push
js
rorl
or
movsl
and
lock
cmp
outsb
add
test
mov
push
decb
sbb
mov
insb
aas
mov
ret
sahf
dec
or
and
add
ljmp
aam
lret
popf
push
xchg
les
fisttpll
pop
xchg
int
push
dec
repz
pop
iret
dec
hlt
push
out
mov
gs
xchg
xor
add
mov
jp
add
push
jbe
das
xor
je
pusha
lods
decl
daa
fdivrs
or
mov
inc
movsb
cwtl
cmpl
aas
cld
data16
adc
sti
dec
lret
ss
in
xchg
jns
insb
int
ja
enter
lret
loop
dec
insb
xor
push
add
jmp
xor
insl
mov
ss
jg
inc
jne
stc
jae
push
dec
mov
shll
scas
cltd
cmpsb
hlt
ret
pushf
xchg
xorl
inc
sub
mov
and
imul
add
cmpsb
mov
rclb
xchg
xor
sbb
lcall
mov
aas
pop
lods
sub
aad
mov
xchg
ret
hlt
lret
dec
dec
pop
xor
test
fbld
inc
pop
cwtl
xchg
xor
sub
rorl
loop
les
ljmp
ja
sub
mov
repz
fildl
push
dec
mov
sbb
scas
xlat
test
cld
adc
dec
xor
add
in
pop
sub
cmpl
jmp
pop
lcall
repz
test
dec
pushf
pminsw
push
ds
cmp
data16
mov
jbe
or
outsb
mov
push
adc
xchg
mov
in
insb
int
cmp
jnp
nop
xor
test
push
ret
mov
cltd
nop
xor
insb
std
or
push
and
test
in
sub
xor
je
mov
sub
xor
fidivs
lret
cmp
cmpsl
lahf
push
jno
push
mov
int
mov
repz
sbb
push
mov
lods
pop
cs
and
pop
and
in
jle
and
subl
scas
adc
ja
and
out
mov
inc
push
xchg
add
mov
sbb
mov
dec
cmp
dec
lret
xor
and
sub
or
jp
sti
movsb
adc
popf
je
pop
fisubrl
pop
outsl
pop
xchg
lret
and
dec
sub
mov
cmp
sbb
mov
pop
adc
xlat
das
inc
xorb
leave
fildll
mov
fidivrl
jle
jnp
add
fldcw
shl
fs
jnp
mov
cmp
or
rcll
addr16
outsb
scas
pop
jbe
test
add
adc
mov
dec
sbb
dec
push
imul
xorb
jge
pop
xchg
mov
mov
fisubrs
ljmp
xor
xchg
ret
xchg
jne
mov
inc
fs
adc
imull
cmp
fs
mov
das
fwait
and
fldenv
add
test
mov
pop
lret
xor
adc
and
fistpl
pop
and
or
xor
sbb
mov
adc
add
add
adc
call
xlat
dec
inc
sbb
dec
mov
mov
hlt
in
jge
fiadds
jne
sub
dec
fs
dec
dec
and
adc
outsb
out
push
sbb
sub
aaa
add
ror
jae
loop
add
arpl
pop
jne
xlat
pcmpeqd
sbb
pop
ret
push
ss
xchg
subb
sub
scas
iret
aas
rcrl
lods
loope
jnp
insl
dec
sub
push
cmp
clc
mov
add
aas
or
ret
mov
das
jmp
push
dec
sbb
pop
outsl
xor
sbbl
xor
leave
and
aad
jmp
pop
addr16
jge
inc
or
inc
push
or
popl
into
sub
scas
in
mov
fwait
xlat
sbb
dec
sub
ljmp
mov
push
cmpsl
cmp
push
fisubrs
push
jnp
push
push
hlt
shlb
jno
dec
mov
push
xchg
xchg
test
cmp
sub
xchg
mov
das
mov
xor
jb
js
sbb
andl
test
add
pop
add
mov
sti
test
sti
sub
or
rcr
jae
outsl
jecxz
repnz
negb
sub
sbb
jne
inc
int
jns
mov
loopne
push
subb
mov
push
out
nop
je
imul
mov
adc
dec
loop
push
xchg
adc
push
cli
cltd
hlt
leave
adc
and
xor
xchg
push
test
jae
or
mov
mov
iret
movsb
dec
test
cld
inc
cltd
cmp
jmp
jae
inc
addr16
lds
jo
mov
mov
and
add
lcall
xorb
push
hlt
pop
xchg
lcall
lods
mov
es
pop
call
out
orb
sub
and
rcrb
dec
imul
push
sbb
hlt
out
mov
adc
jae
cmc
das
repnz
in
lock
hlt
push
cmp
jnp
cmp
dec
ja
mov
adc
lret
ss
xchg
jp
jecxz
neg
cmp
or
cmp
leave
add
dec
cmc
push
xor
jo
in
es
sub
jmp
scas
mov
ret
dec
iret
loopne
push
icebp
adc
sbb
repz
cmpsl
mov
inc
sub
aas
aad
imul
outsb
jmp
ja
adc
add
incb
xor
scas
add
shlb
arpl
inc
cld
cmpsl
adc
sahf
gs
outsl
mov
scas
testl
lods
mov
cld
adc
ja
ds
push
sub
add
adc
mov
adc
add
addr16
push
out
sub
jbe
aam
dec
fbstp
ja
leave
or
mov
sbb
mov
cmp
int3
jno
fs
fadd
sbb
cmp
mov
pushf
imul
popf
cmp
ds
mov
add
or
xor
add
jnp
das
sub
js
xchg
cmp
ds
cli
stos
lcall
jmp
add
enter
or
inc
nop
mov
pop
cmp
and
adc
mov
sub
inc
decl
test
mov
pop
jle
xabort
pop
xor
ds
mov
outsl
aam
pop
mov
andb
inc
mov
xchg
add
or
mov
mov
lcall
mov
lret
xchg
xchg
or
add
add
adc
jno
mov
push
loopne
push
adc
inc
cmc
divb
hlt
addr16
or
call
pushf
adc
and
pop
xchg
mov
add
push
icebp
sub
pusha
out
out
push
fisubrs
jp
pop
add
pop
into
ds
or
jnp
mov
fs
pop
sbb
xchg
inc
lret
xlat
scas
or
dec
lret
add
cmp
jl
xor
movsl
adc
test
xlat
mov
mov
insb
imul
and
shrl
inc
adc
test
mov
aaa
adc
mov
cwtl
test
out
xchg
push
aad
je
arpl
stc
loopne
or
inc
ja
dec
lea
movsl
pop
jnp
icebp
push
mov
adc
mov
lret
xchg
jns
jmp
movsl
lods
sbb
adc
adc
push
fimuls
dec
std
xchg
imul
cmpsb
inc
fs
cmc
dec
loopne
les
int
test
xchg
fisubs
ss
orb
arpl
pop
incb
out
mov
cwtl
pop
sbb
sbb
push
cli
sbb
aad
mov
rclb
loopne
jl
insb
rorl
sub
rorl
sub
test
inc
pop
xchg
jns
es
mov
adc
js
xor
xor
pop
lds
fiadds
jb
jmp
out
push
jno
dec
outsb
testl
xor
dec
jbe
xor
test
ror
mov
rorl
outsl
xorps
pop
sub
jnp
xor
sbb
ja
sub
lds
cmp
in
xchg
testb
roll
jmp
jecxz
retw
push
cmpsl
sub
adc
lret
cmc
pop
fidivs
enter
fbld
data16
aad
pop
mov
jne
fdiv
fs
loope
jg
cltd
jecxz
cli
mov
add
xor
dec
sub
es
movsl
mov
pushw
add
ja
int
or
mov
enter
call
push
and
fimuls
sub
jle
inc
aad
or
test
out
daa
pop
rcl
inc
mov
cmp
mov
inc
dec
loop
push
push
aas
pop
out
out
dec
js
in
cwtl
pop
out
aad
insl
icebp
xchg
xor
loopne
ljmp
add
mov
pop
aam
notb
loope
lock
scas
push
push
push
mov
sbb
mov
push
popl
movsl
repnz
mov
jnp
jecxz
jo
xchg
fs
lea
xorl
enter
daa
arpl
inc
mov
cs
jne
test
or
mov
imul
mov
adc
movsb
sub
add
and
push
mov
mov
pop
in
or
inc
xor
rcrl
gs
rolb
inc
fsubrs
stc
mov
sbb
int3
xchg
cmp
shr
pop
sub
mov
xchg
imul
xchg
enter
das
xchg
adc
jno
cli
ret
jmp
cld
inc
mov
cmpsb
cld
dec
pop
pop
xchg
sub
ds
or
jo
dec
add
pop
inc
jb
push
lret
sbb
insb
jae
or
rorl
pop
cmpb
test
xchg
jbe
int3
mov
fwait
insl
inc
test
xchg
mov
sbb
mov
cmp
fmuls
lds
lahf
nop
leave
pop
aas
ss
cmp
dec
inc
cwtl
cmp
mov
cwtl
sub
or
in
call
cmpsl
cmp
cli
xchg
jns
push
gs
loop
pop
mov
mov
jae
and
cmc
lcall
dec
mov
and
mov
lahf
inc
mov
push
mov
lret
lret
jge
nop
fildll
mov
mov
or
divb
mov
fnstsw
loop
js
mov
stos
sbb
mov
add
inc
outsb
dec
cmpsl
hlt
ljmp
or
inc
mov
cli
vmwrite
fistpll
aam
sbb
sete
jg
adc
sub
mov
and
and
dec
mov
int
mov
lods
inc
scas
cwtl
outsl
rolb
dec
adc
test
adc
sub
std
and
jo
xchg
inc
or
xor
mov
icebp
cmp
inc
xchg
mov
mov
mov
mov
scas
push
mov
mov
and
lcall
push
sub
push
repz
icebp
adc
popa
lahf
jns
push
and
inc
adc
notb
lds
je
jbe
stos
ss
dec
pop
mov
jmp
outsl
xchg
insl
pop
adc
daa
neg
jae
test
ljmp
mov
adc
jnp
xor
mov
push
stc
fcomps
jno
push
mov
xchg
mov
cwtl
adc
leave
xchg
jg
cs
jns
mov
mov
rorb
cwtl
push
ds
mov
cmpsb
xor
insb
push
hlt
xchg
dec
xchg
inc
sub
mov
xchg
jne
sti
push
sbb
scas
pop
jmp
pop
cltd
out
jns
in
ja
rolb
cmp
gs
sarl
sbb
dec
or
push
imul
add
int
stos
mov
add
cld
jg
mov
test
notl
cmp
or
jmp
sub
popa
xor
nop
sbb
sub
add
stos
push
jg
addl
pop
shll
pushf
mov
shll
xchg
cmp
imul
xor
mov
out
sarl
lods
mov
loop
repz
sub
mov
jmp
repz
sbb
sbb
loope
popf
jp
aam
jmp
js
daa
sarb
sti
xchg
push
and
sbb
inc
stos
or
dec
xor
aam
sbbb
xchg
mov
cmc
mov
pusha
xchg
imul
mov
push
mov
sbb
and
sub
mov
dec
add
roll
sub
and
icebp
es
dec
jl
je
dec
sub
dec
nop
addb
fdivrs
hlt
test
inc
sub
addr16
rcrb
cltd
xchg
test
lcall
mov
jno
inc
test
in
out
adc
rcrb
pop
and
cmp
ds
jle
insl
mov
push
inc
push
mov
in
outsb
jnp
mov
mov
cltd
pop
lds
hlt
rorl
cmpsb
pop
jnp
mov
push
imul
sbb
leave
xchg
and
and
fcoml
out
int
sbb
jnp
sub
inc
lret
jl
in
rclb
inc
jno
hlt
loopne
and
sti
pop
mov
push
cmp
outsl
xorb
inc
and
pop
pop
inc
testb
fdivrp
cmpsl
rcl
xor
or
out
cmp
fs
jne
fisttps
cmpsl
pop
add
gs
dec
test
in
jmp
cmp
sub
xor
je
dec
outsb
cmpsl
xchg
call
fisubrs
in
mov
mov
std
lock
and
outsl
repz
push
add
dec
call
subb
es
cmpsb
mov
jle
or
popa
jbe
stc
mov
jne
ja
jl
outsb
push
fmull
push
hlt
inc
and
rol
mov
and
cmc
outsl
rclb
inc
ljmp
imul
scas
jo
imul
fucomp
cltd
xor
sbb
fcoml
repz
jae
jp
pop
pop
mov
cmp
sbb
iret
mov
jge
fsubrs
jno
rol
insb
fistpll
add
int
stos
adc
stos
test
push
pop
mov
sub
imul
into
sti
adc
xchg
xor
test
jg
sub
aam
ds
mov
dec
inc
push
shr
dec
cmp
dec
js
mov
dec
cld
jg
xchg
arpl
jecxz
cs
inc
push
scas
std
in
mov
call
in
mov
mov
push
movsb
gs
mov
xlat
test
or
push
fdivs
popa
dec
ljmp
orl
and
cmp
mov
sub
adc
roll
dec
and
stc
push
loop
lock
fisubrl
sub
xor
addl
and
xchg
mov
xchg
mov
test
inc
int
sub
xor
outsb
push
cmpsl
gs
dec
cs
jle
arpl
xchg
cmpsl
mov
dec
test
xchg
imul
or
push
jg
push
adc
xor
outsb
js
fucomp
adc
cmpsb
pop
ret
push
jb
ficoml
xchg
lahf
adc
sahf
inc
addb
or
sbb
scas
mov
push
clc
jnp
sub
call
test
add
lret
push
cmp
adc
hlt
lds
icebp
pop
push
or
add
jle
inc
pushf
adc
or
add
jne
sub
test
sub
add
sbbb
jp
in
or
sahf
in
or
js
fdivrs
imul
mov
mov
ljmp
fists
test
inc
pop
iret
mov
div
and
lret
jnp
or
vpor
leave
cmp
push
jge
gs
xchg
rcrl
das
pop
fcoms
push
mov
shr
inc
mov
out
inc
push
in
add
idivb
rcl
sbb
aaa
mulb
pop
push
stos
test
adc
in
lret
rcll
push
andb
fscale
xlat
lock
nop
mov
xlat
lods
lock
cwtl
ret
mov
jmp
sub
mov
add
movsl
arpl
cmc
cmpsl
movhps
mov
xor
push
adc
lret
mov
cmp
sbb
push
push
enter
xor
mov
pop
movsl
xor
mov
lret
and
mov
jbe
cs
lods
xor
cmp
and
xchg
inc
addr16
sbb
out
hlt
insl
push
xchg
mov
fsin
es
mov
cmp
je
repnz
and
test
ja
nop
inc
pop
or
mov
daa
xlat
push
push
push
divl
inc
iret
and
das
push
push
pop
daa
dec
and
in
sub
rcpps
rolb
andl
fwait
xchg
out
int3
sbb
arpl
test
lahf
push
push
pop
mov
in
test
mov
xor
lods
shrl
or
xor
lcall
addl
daa
push
mov
jge
pop
sub
sub
stos
movsl
push
xchg
jg
xchg
lods
lcall
js
xchg
repz
sub
adc
into
pop
repnz
out
gs
push
imull
jnp
mov
xchg
daa
sbb
cmp
fidivrl
or
lret
xchg
scas
xchg
imul
mov
mov
sbb
jl
sbbb
mov
pop
outsb
rorl
cmp
push
in
xor
adc
dec
jl
xchg
rcll
mov
pusha
pop
pop
idivb
pop
push
mov
jge
push
jae
lcall
in
xor
in
call
leave
daa
xchg
push
sub
jle
and
jbe
xor
mov
lds
jmp
fsubl
out
mov
movsb
push
pusha
cmp
push
leave
dec
adc
mov
fcoml
flds
mov
push
pop
in
sbb
mov
dec
std
stos
sbb
inc
lcall
push
out
jb
fidivl
stc
orb
fmul
je
sarb
jmp
cmp
add
lcall
cmp
mov
sub
jns
xlat
add
xor
test
popf
lds
into
pop
sub
and
pop
movsb
jge
fs
out
sbb
push
cmpl
mov
push
and
mov
fists
xchg
leave
sbb
fcmove
lock
data16
outsl
cmp
cmpsl
or
dec
ficompl
in
xchg
sbb
mov
jns
add
inc
lahf
rol
roll
lock
dec
xchg
mov
in
das
xacquire
xchg
and
mov
movsb
jg
je
shl
fisubl
test
enter
xchg
enter
in
hlt
cmp
test
xor
jo
xchg
xchg
dec
adc
in
loopne
shl
fsubrs
xchg
mov
dec
js
and
xor
repz
cs
xchg
sarb
sti
jp
popa
pop
add
and
mov
nop
hlt
cmpsb
movsb
addr16
loopne
pop
mov
dec
pushf
cmp
dec
mov
push
aas
pop
inc
pop
add
outsl
jmp
lahf
jmp
cmpsl
dec
movsb
jb
inc
mov
in
fdiv
cli
xchg
mov
popa
and
test
cmp
cwtl
and
xlat
mov
push
mov
add
test
insl
inc
push
out
sbb
ds
cmc
xorb
jo
inc
sbb
shlb
inc
push
mov
dec
add
or
test
lea
sbb
mov
lret
shrl
xor
pop
clc
mov
cmp
popa
insl
inc
xor
mov
leave
jnp
dec
adc
and
outsl
repnz
loop
inc
xor
and
sub
xor
jbe
cmp
inc
cld
mov
lahf
add
sub
sti
or
xor
cwtl
mov
movsb
add
or
aaa
clc
push
aas
push
pop
xor
mov
cs
dec
sub
aam
inc
psrlw
bound
outsl
xchg
imul
adc
mov
adc
cwtl
pop
ret
adc
data16
std
or
cmpsl
push
pop
stos
sbb
sub
xor
cwtl
movsl
and
pfcmpeq
leave
mov
dec
xlat
push
std
jmp
push
xchg
inc
cli
adcb
fst
pop
cmp
mov
xor
mov
mov
dec
and
cld
mov
js
xlat
test
or
popf
dec
shl
sub
loopne
stos
inc
and
fs
xchg
stos
pushf
adc
addr16
mov
mov
xchg
pop
dec
add
push
leave
in
ja
and
mov
xor
out
les
jae
cltd
out
ljmp
pop
sahf
jp
cmp
push
mov
mov
ret
push
sbb
mov
lods
ds
roll
jp
ljmp
imul
sbb
and
cli
mov
push
cmp
pushf
loopne
cmp
mov
mov
push
gs
pushl
cmc
in
lret
popf
je
aad
sti
inc
pop
xchg
mull
aas
dec
iret
jae
push
das
mov
cmpsl
ret
gs
lods
add
orb
xor
jl
mov
xor
pop
mov
sbb
jl
fcomps
add
lock
push
mov
out
rcrb
idiv
mov
mov
aad
sub
xchg
lret
and
adc
lahf
jl
hlt
inc
aad
cmp
sub
jns
pusha
adc
pusha
mov
mov
dec
arpl
clc
cmp
mov
sub
add
fwait
mov
stos
rclb
sbb
sbb
cmp
iret
push
rcrb
adc
add
jb
sbbl
mov
inc
pop
cltd
ret
inc
sbb
dec
scas
xchg
and
jecxz
sarb
ja
mov
stc
out
xlat
mov
sahf
scas
ss
mov
push
or
nop
jno
xchg
ret
xchg
aas
test
test
js
fbld
and
mov
and
lret
xor
xchg
and
mov
mov
cmpsb
paddsw
xchg
adc
test
loopne
repz
pop
outsb
in
xchg
cmpsb
push
cmp
cwtl
jo
adc
cwtl
xor
fimuls
les
jne
test
jno
addl
jge
push
mov
dec
cld
jns
pop
sbb
lea
xchg
cwtl
push
cld
fldt
push
shll
sub
repz
jp
cmp
mov
dec
inc
cmp
cmp
pop
sbb
fldt
in
xor
aam
aam
ljmp
cltd
rcll
lods
enter
inc
insb
jne
sbb
popa
xor
pop
ss
pop
cld
pop
hlt
repz
sub
outsl
test
loop
out
add
adc
adc
icebp
adc
mov
insl
jo
mov
jb
mov
xor
cmp
xchg
dec
inc
mov
mov
and
cmpb
cli
pop
adc
inc
cmp
add
aaa
jno
xor
dec
push
sub
mov
outsl
enter
jge
jb
push
pop
stc
jle
es
outsl
jmp
pushf
ja
das
mov
inc
pop
push
mov
popf
xor
scas
jl
out
push
inc
adc
or
and
push
or
mov
hlt
ja
iret
sti
pop
xchg
stos
sub
outsb
lds
test
pop
gs
add
sbb
sub
jno
leave
insb
pop
data16
stos
mov
mov
fists
shl
imul
arpl
mov
std
loop,pn
dec
imul
sub
pop
xor
adc
sahf
out
shlb
xchg
mov
testb
inc
int3
in
add
shlb
clc
sti
fbld
das
push
push
movsb
mov
add
aaa
ja
sbbb
xchg
addb
and
cmp
push
es
jp
lock
cmp
out
sub
in
push
mov
loope
jl
sahf
aaa
sti
inc
jg
outsb
ret
addb
aam
adc
and
pop
mov
push
rcrb
mov
loop
je
and
mov
insb
vandpd
jmp
adc
pop
xor
sar
xor
add
mov
fstl
xchg
fcoml
mov
in
fadds
fdivs
notb
stos
mov
lcall
add
es
adcl
mov
in
dec
fildll
aaa
adc
xchg
pop
dec
test
lahf
cld
pop
rcrb
cmp
push
push
cltd
push
sbb
pop
sti
sti
pop
pop
pop
jne
jae
pop
rcrl
xor
jno
jnp
aam
sub
and
js
pushf
ja
outsb
ficomps
jae
inc
pusha
int3
dec
mov
mov
xor
lret
xchg
aas
push
out
or
addb
aaa
mov
fcoms
fbld
xor
xor
xor
loop
std
shll
jae
pop
pop
cmp
cmp
arpl
inc
inc
aas
outsb
out
lret
loope
clc
call
inc
mov
outsb
pop
pop
outsb
mov
xor
add
jnp
bswap
add
mov
pushf
rcrl
test
sar
inc
aad
push
sbb
adc
stos
jb
repz
xchg
mov
int3
dec
lret
jne
daa
bound
fs
cmp
ret
imul
push
inc
add
fidivrs
add
fs
fsubrl
mov
mov
mov
inc
ret
jl
inc
mov
les
int
adc
outsb
stc
lods
dec
scas
loop
dec
push
lea
push
push
jg
jo
shrl
sbb
shl
mov
or
sub
shrl
mov
add
add
mov
jmp
psrad
in
inc
ret
mov
dec
sub
lret
sahf
and
lods
mov
inc
lret
repz
hlt
xchg
das
xchg
movsb
add
jle
sub
loopne
inc
dec
je
mov
leave
lret
fmul
imul
test
popa
fldenv
ss
or
aas
ds
mov
jg
es
call
pop
or
mov
movl
inc
je
iret
inc
scas
lock
arpl
adc
sbb
adc
setge
stc
jmp
call
or
fnstsw
pop
ds
jp
push
cld
mov
jl
or
lret
popl
notl
cmpsb
jecxz
jbe
and
dec
inc
lret
mov
pop
jmp
dec
sbb
scas
add
or
out
mov
andb
gs
cwtl
sub
pop
rcrb
daa
jb
sub
and
fstpt
or
stc
sbb
xchg
push
or
aam
dec
icebp
loopne
test
xor
loope
out
clc
fstpl
add
repnz
lret
pop
and
xchg
bound
sub
jno
mov
imulb
mov
mov
inc
xor
mov
ret
mov
mov
adc
xchg
and
add
cmp
jns
jmp
test
pop
inc
jle
xchg
mov
stc
outsb
sbb
inc
lret
dec
xor
mov
cmp
int3
mov
pop
jno
and
dec
loop
insb
fildl
ljmp
or
insb
sub
xchg
loope
out
fildll
push
lods
add
and
lcall
jecxz
cmp
fwait
dec
xchg
scas
cmp
nop
sti
cli
pushl
test
cli
inc
fiadds
into
sub
mov
adc
cld
ret
cmpsl
or
or
adc
pop
je
clc
dec
ss
insl
dec
cmp
or
fwait
xchg
and
mov
sahf
and
dec
out
arpl
mov
fsubrl
cltd
add
int3
xor
pop
je
mov
sub
mov
jp
lods
jecxz
push
inc
into
sub
mov
cld
jg
repz
xchg
loope
cmp
sub
enter
insl
es
popa
mov
sbb
sarb
pop
jl
imul
out
xchg
cmp
mov
int3
sub
jmp
daa
mov
bound
stos
mov
adc
lods
aaa
cmp
pop
sbb
jb
mov
repnz
jnp
aam
pop
loopne
cmp
fdivs
stc
sub
int
adc
and
sbb
movsl
jne
out
push
xor
cs
or
lret
add
dec
mov
push
int
ja
test
js
push
mov
dec
add
xor
mov
call
mov
divl
roll
scas
mov
leave
aam
iret
push
imul
jb
dec
aad
fwait
or
fmull
idiv
scas
repz
shll
mov
mov
cld
cmp
adc
out
inc
pop
iret
jns
mov
inc
test
pop
scas
fldenv
inc
jo
gs
das
ret
int
xor
add
pop
lret
xchg
mov
push
test
sub
movsl
sbb
mov
push
ds
shrl
imul
test
repnz
int
imul
cmp
insl
adc
fdivr
outsb
mov
ss
fildll
cmp
movsl
mov
cwtl
inc
mov
xchg
loopne
aas
stos
mov
decl
xchg
hlt
stos
cld
adc
mov
or
cmp
aam
jg
or
scas
inc
out
sub
insb
xor
int
out
xlat
int
ret
pusha
test
xor
addr16
cmp
adc
or
loopne
push
ljmp
subl
pop
in
xlat
inc
add
test
xchg
cltd
xchg
aam
sbb
and
dec
ret
pop
xor
lret
mov
and
mov
push
jbe
fwait
mov
repnz
stc
jp
cwtl
aad
or
loopne
rcll
jno
jmp
mov
ljmp
xchg
shl
out
iret
test
stos
xor
cld
xchg
mov
les
sbb
lea
hlt
inc
cmpsl
or
pop
ja
cmp
outsl
fldenv
leave
ss
jmp
inc
ffreep
imul
enter
mov
mov
inc
in
jae
push
mov
dec
in
pop
mov
orl
add
xchg
out
mov
mov
pop
push
outsb
push
int3
xchg
xchg
scas
or
xor
lahf
or
push
je
add
or
adc
pop
push
sbb
xchg
je
inc
xchg
jnp
adc
mov
or
inc
mov
dec
sub
xor
gs
fdivs
sub
jg
js
dec
push
and
ret
div
pop
out
add
dec
fidivrl
and
push
push
jno
ds
mov
mov
add
mov
mov
push
push
inc
and
std
xor
hlt
jno
jo
aam
jmp
jl
daa
mov
mov
sub
adc
push
outsb
call
loope
jmp
gs
bound
test
adc
popf
dec
lcall
inc
jae
negl
cmp
xchg
and
popa
xchg
mov
cmc
mov
lret
cmp
jp
mov
mov
jle
xchg
cmp
imul
and
cld
pop
sarb
jmp
sub
arpl
mov
cli
jmp
jle
mov
cmpsl
data16
add
mov
mov
push
jbe
pusha
push
cltd
pop
in
scas
enter
push
int
ret
dec
in
add
inc
movsl
loopne
jp
in
popf
inc
jb
inc
in
mov
lret
xchg
lret
stc
rclb
andb
cltd
fwait
mov
fwait
push
cmp
js
sbb
sbb
pop
xchg
test
sub
out
dec
adc
cmc
aam
push
ljmp
mov
aad
xchg
arpl
mov
pop
inc
sbb
les
cmp
popf
mov
test
jo
inc
ds
fldcw
out
sti
xor
xchg
jge
push
inc
jp
loope
test
fnstsw
pop
or
jge
jmp
add
pusha
sub
repnz
jle
outsl
out
fwait
test
mov
jns
xor
xor
imulb
push
sbb
cmp
mov
mov
dec
and
movl
lods
mov
add
pop
cmc
fistl
lods
test
ret
sub
lds
mov
call
and
shrb
xor
test
mov
cmc
icebp
jmp
adc
shl
adc
sahf
jmp
adc
gs
sbb
xchg
daa
dec
xchg
repnz
orl
push
dec
aas
out
inc
cmp
dec
jae
mov
js
or
icebp
cmp
mov
push
les
lret
es
pop
jnp
call
imul
xchg
loope
adc
test
adc
push
sub
fildl
fsubs
aas
push
in
out
decb
les
xchg
push
fistps
cld
pusha
aaa
xchg
cli
sub
xor
repnz
mov
dec
pop
iret
cmp
ds
xchg
jbe
xor
or
adc
in
jp
or
cli
int3
call
jg
ret
mov
jb
xchg
add
jns
imulb
inc
ds
or
pop
mov
test
pop
push
shll
push
leave
dec
inc
loopne
lods
fwait
or
call
or
mov
aaa
mov
mov
into
hlt
jg
cmpsl
push
and
mov
bound
ret
aaa
ficompl
adc
pop
pop
xchg
mov
in
imul
movsl
or
sub
addr16
daa
imul
pop
outsl
pop
push
insb
lret
mov
sub
mov
xor
xor
pop
mov
mov
mov
das
push
mov
inc
into
xor
decl
jae
pop
ss
call
add
pushf
ret
mov
mov
popf
mov
in
adc
xchg
ljmp
gs
lock
mov
cli
sub
mov
das
in
ds
fdivs
sti
adc
mov
lret
enter
in
mov
or
scas
iret
mov
sub
pop
and
lds
sahf
add
mov
xchg
sub
mov
and
fldenv
bound
pop
les
lahf
mov
mov
js
es
hlt
mov
call
fwait
icebp
add
fwait
jb
inc
inc
and
mov
push
cmpb
mov
jecxz
sub
pushf
cmp
adc
bound
push
icebp
scas
outsl
cmp
out
rclb
sub
push
adc
decb
rol
push
fcmovne
or
mov
cwtl
xchg
es
aad
xor
in
jl
orl
mov
movsb
push
add
icebp
push
mov
sub
cltd
add
mov
loop
testl
cltd
pop
fisttps
cmpb
lcall
sub
xchg
andl
pop
jle
sub
sub
sub
sbb
xchg
dec
push
dec
adc
mov
out
and
nop
push
jo
and
lret
leave
leave
idivb
aaa
push
jbe
repz
xchg
out
popf
cmp
or
sahf
adc
std
sbb
sar
ficompl
daa
arpl
pop
mov
sub
inc
and
xor
out
dec
adc
lods
daa
sbb
mov
sbb
test
aas
inc
fisubs
divb
imul
testb
push
loop
mov
sbb
xor
fdivr
data16
xor
cld
pop
adc
pop
pusha
xchg
arpl
sub
cmpsl
or
push
inc
push
or
out
in
ja
jmp
and
pop
fcmovnbe
scas
xchg
jle
or
dec
push
jle
mov
push
enter
mov
dec
outsb
adc
in
adcb
sbb
inc
cltd
dec
iret
and
cltd
outsl
xchg
push
cmp
adc
mov
push
sub
xchg
cli
mov
movsl
in
stc
ret
mov
pushf
and
dec
cld
lods
jne
xchg
icebp
into
ret
mov
jg
or
mov
jo
into
cmp
fldcw
inc
insl
mov
mov
mov
cmp
les
push
pop
out
jmp
mov
leave
adc
and
and
inc
inc
fisubrl
or
insb
xor
add
jno
jge
jbe
loope
lods
push
test
lea
test
push
or
and
pop
andb
in
popa
or
fcmovbe
repz
mov
or
fisubrs
ljmp
inc
pop
or
fistl
or
loop
out
loopne
mov
sbb
jp
xor
sti
jmp
mov
xchg
push
push
aam
aam
cmc
fucom
movsl
mov
lea
dec
es
clc
pusha
es
call
lea
dec
jne
adc
ret
fwait
daa
push
adc
jmp
cmp
ds
stc
test
add
jb
sbb
ret
repz
pop
xlat
test
pop
sbb
js
dec
pop
ltr
jne
pusha
add
dec
add
dec
pop
dec
adc
jecxz
out
arpl
stc
xor
cld
mov
imul
lret
test
add
or
movsb
and
test
push
xor
pop
pushf
ljmp
popa
movsb
xor
push
and
pop
sub
iret
push
and
adc
add
test
fucomip
mov
dec
jno
pop
xor
int3
lods
lods
vxorps
lret
jp
jp
lahf
scas
xchg
or
lahf
push
pop
fisttpll
mov
loop
mov
test
outsb
in
aaa
xor
cmp
cmp
ja
imul
pcmpgtd
ficoml
push
jle
rcrb
push
or
sub
add
adc
mov
push
mov
rorl
add
add
mov
sub
dec
xchg
popa
pop
stc
arpl
ret
pop
dec
jae
jno
and
sbb
arpl
mov
adc
rep
mov
sarb
pop
loope
mov
and
loop
cmpsl
inc
add
aad
aaa
mov
jmp
jo
cmpsl
repz
popf
cwtl
mov
and
mov
xchg
mov
lcall
adc
lret
jns
push
adc
sbb
fs
mov
add
mov
rol
inc
gs
icebp
mov
adc
fstps
mov
jae
in
fnstenv
inc
int
repnz
xor
mov
cmc
sub
fildl
fidivrs
aaa
push
xchg
ficomps
call
jno
jp
sub
mov
dec
icebp
fsubr
aaa
xor
jns
and
popa
pop
popa
inc
mov
pop
cmc
in
push
jp
icebp
and
add
mov
xor
push
pop
fsubr
into
cli
fmulp
iret
xchg
add
inc
lds
pushf
cmp
sub
popf
sub
fmull
jmp
dec
push
pop
dec
mov
cmp
inc
fisubrl
scas
push
mov
jno
pop
in
sbb
inc
lcall
loope
cmp
js
add
sub
test
dec
cmpsb
dec
adc
jl
or
cmpl
imul
push
lcall
dec
add
dec
xor
imul
inc
cmp
fcom
cmp
dec
sbb
clc
push
notb
sub
xchg
subb
pop
ja
inc
test
adc
cld
push
out
dec
xchg
stos
ss
fiadds
lret
addb
dec
fisttpll
popa
mov
pop
add
loope
imul
out
sub
lods
fistps
daa
icebp
aaa
in
cmp
push
dec
cmp
xlat
mov
in
xor
in
push
sub
loop
inc
cwtl
push
add
sahf
push
lea
int
push
js
mov
gs
sub
xchg
leave
push
je
mov
in
cltd
sub
push
loopne
jae
or
jb
dec
mov
add
sub
cmp
xchg
out
stos
sub
test
cmp
pop
push
and
push
es
add
xchg
stc
mov
sbb
cmp
les
ljmp
xor
or
in
dec
bound
mov
xor
add
popf
or
add
scas
inc
mov
inc
mov
pop
jnp
jnp
subl
xor
es
hlt
jns
add
lock
xor
lahf
loope
xchg
xchg
jns
jp
out
push
mov
bound
pop
mov
xor
jne
jo
imul
icebp
sti
outsl
push
sbb
int3
inc
cmp
sarb
cmpsb
and
jne
xor
repnz
inc
test
xchg
push
sbb
repnz
lods
lcall
repz
out
es
mov
lea
adc
clc
pop
fdivr
cld
sub
js
mov
imul
leave
mov
out
mov
ja
inc
adc
or
mov
mov
aam
cmp
mov
lods
int
jns
mov
add
dec
inc
mov
mov
mov
int
sub
push
xchg
int3
jnp
icebp
loop
repz
adcl
adcl
data16
jle
ret
adc
fstpt
jnp
push
hlt
loope
jne
mov
xchg
lahf
ror
mul
inc
and
loopne
adc
cmpsl
xchg
lret
sbbb
popf
pop
mov
mov
stos
or
mov
inc
xor
push
cs
int3
and
sub
mov
sbb
mov
xchg
cmc
je
adc
jns
in
and
shll
sub
mov
stos
or
jbe
addr16
fst
inc
cs
jp
fdivp
mov
mov
rcrl
push
popf
scas
dec
xor
arpl
insb
adc
mov
lea
ret
outsl
idivl
xchg
and
test
adc
stos
xor
jnp
imul
xchg
dec
sbb
add
popf
stos
push
mov
jae
push
xchg
mov
fsubrp
or
adc
icebp
xchg
xor
cmpsb
jo
jp
pop
int3
out
mov
mov
sbb
and
dec
jno
mov
and
fnstenv
cmc
cmp
push
push
mov
fdivrl
xor
jo
fistl
push
arpl
or
or
pop
test
mov
addl
cmp
movsl
aad
lret
lods
into
icebp
mov
mov
imul
nop
fisttps
sub
jmp
cwtl
enter
lret
push
adc
shlb
adc
mov
daa
add
xchg
out
mov
adc
clc
in
sub
hlt
lea
xor
jbe
mov
push
pop
dec
add
pop
fadd
into
stc
mov
out
ja
stos
fisttpl
or
dec
add
aad
inc
xor
out
xor
push
int3
fsts
cmp
sbb
popa
mov
xchg
jae
mov
cwtl
sub
add
inc
clc
rorl
mov
push
sub
jbe
in
fldt
sti
mul
push
les
add
int3
and
data16
sub
rep
mov
xchg
add
fwait
add
mov
jns
add
or
popf
iret
sub
xor
pop
xor
int
or
dec
jae
inc
cmp
popf
mov
pop
in
mov
mov
ja
in
cli
flds
sub
xor
imul
jns
pop
or
adc
mov
inc
stc
int3
pop
loopne
bound
aad
mov
out
test
push
mov
mov
ret
ror
test
incb
lret
subl
inc
sbb
lahf
cmp
fistl
dec
lods
push
es
xor
sub
or
rol
lea
scas
rorl
and
mov
mov
call
das
in
xor
xchg
repnz
xor
mov
mov
and
stos
inc
sarb
adc
xor
xor
pop
and
jecxz
mov
imul
adc
cmc
cltd
imul
push
or
rolb
jge
dec
es
jl
push
rcr
jmp
cmp
mov
and
mov
mov
push
js
fimuls
dec
mov
sahf
aam
dec
sub
inc
sar
std
shlb
sbb
fdivl
xchg
or
push
pop
or
pop
in
adc
stc
fldcw
mov
and
and
rclb
inc
mov
pop
loope
cmc
mov
push
and
aaa
orl
movsb
int3
lcall
fldt
xchg
jl
repnz
mov
dec
jns
js
in
icebp
add
xchg
in
movsl
mov
ljmp
jno
xchg
cli
nop
xor
lcall
rorb
cmp
and
in
sbb
aam
sub
dec
ret
and
jnp
aas
fnsave
mov
push
adcb
js
ja
or
in
outsl
pusha
inc
mov
leave
frstpm(287
push
popf
pop
mov
es
mov
aas
fucomip
add
and
or
push
push
out
cmc
movsb
pop
rorb
mov
sbb
fsubl
les
popa
and
daa
jnp
lret
jnp
in
hlt
fwait
pop
cmp
adc
mov
mov
push
leave
adc
ss
out
inc
sahf
mov
or
insl
gs
fldcw
call
imul
pushf
mov
cwtl
in
jnp
push
cmp
ljmp
xor
popf
lds
subb
hlt
adc
aaa
loopne
cmpl
mov
and
xchg
jne
mov
mov
cwtl
xor
pushf
popf
inc
fs
jne
sub
mov
and
sub
xor
rcrb
data16
fistpll
loop
jmp
jp
pop
push
add
iret
push
mov
cltd
pusha
inc
cli
sahf
inc
push
dec
xor
lea
test
jo
in
inc
push
sbb
sub
mov
jb
fdiv
mov
into
sub
push
lea
punpckhbw
xchg
xor
sahf
mov
dec
fbld
insb
sbb
mov
loop
sub
mov
fcompl
or
int3
or
addb
and
mov
push
xchg
dec
xlat
push
add
jb
adc
xor
mov
xor
popf
mov
pop
pop
mov
aaa
fstps
test
fadds
sub
mov
shlb
mov
jns
mov
in
cmp
jbe
jle
pop
or
scas
aas
repnz
lahf
movsb
ss
jo
daa
int
pop
lahf
inc
push
mov
dec
mov
jmp
pop
xchg
and
jbe
mov
push
pusha
jnp
lea
insl
sbb
out
xor
mov
mov
pop
jnp
jb
lahf
xor
xchg
fcompl
rorb
inc
test
iret
mov
sub
std
fisubrs
inc
mov
add
das
mov
out
ja
or
and
popf
lahf
fcmovnu
xor
pusha
out
lahf
xchg
decl
adc
into
outsl
mov
cmpsb
push
add
mov
ret
mov
sub
xchg
enter
inc
fildl
pusha
in
jmp
ror
mov
sti
or
movsl
loope
sbb
pop
pop
arpl
dec
push
or
test
and
xchg
adc
scas
repnz
nop
sub
mov
xchg
mov
push
lock
out
jecxz
fsubrs
xlat
fnstenv
test
pop
daa
adc
or
add
lret
mov
fsubrp
call
fidivs
or
stc
xor
in
sbb
or
pop
jl
push
add
xchg
push
xchg
xor
jg
xchg
jmp
insb
adc
fisubs
movsl
dec
in
sbb
mov
pop
add
sub
jp
cmp
out
test
pop
pop
dec
nop
adc
outsl
ret
cld
sbbl
xorb
jecxz
mov
or
int
and
mov
andl
sub
inc
jmp
mov
insl
je
jo
jne
xchg
aam
pusha
mov
cmp
jg
jecxz
ja
lds
rol
jmp
jg
jp
scas
test
mov
dec
jmp
cmp
xor
cmp
aad
ss
ret
inc
mov
lahf
mov
test
cmpsb
mov
aaa
dec
out
popf
pop
sub
xchg
cmpsb
into
fsubrl
les
push
inc
cmp
pop
push
jne
negl
inc
inc
pop
vcmpss
xchg
daa
mov
mov
test
mov
and
xchg
das
jbe
repz
lock
pop
ja
xor
dec
aam
aad
jl
fstps
pushf
iret
add
cli
pop
sbb
aaa
enter
sbb
mov
lcall
jl
xlat
inc
out
lods
cmp
addl
pushf
pop
outsl
inc
xorl
mov
loop
jne
push
jae
int
push
out
pop
imulb
negb
sti
sti
xchg
insb
push
into
mov
dec
mov
arpl
mov
adc
in
fsubl
lcall
sbb
xor
lret
sbb
repz
mov
pusha
cs
xchg
sbb
int
stos
xlat
adc
dec
dec
adc
in
and
stos
pop
sub
int3
mov
icebp
jns
fnstsw
sbb
int3
xchg
popl
pop
adc
and
mov
push
outsb
mov
movb
xchg
adc
movsl
sarl
jg
iret
cli
loop
xchg
test
rorb
jecxz
clc
xchg
or
lahf
fcoml
mov
mov
sahf
or
sahf
iret
aas
adc
repz
fs
and
shufps
out
xor
adc
xor
cli
or
cwtl
nopl
dec
dec
sbb
std
mov
jbe
inc
notb
xchg
push
in
sub
lret
pop
test
fs
addr16
int3
cmp
decb
inc
dec
adc
fs
push
adc
cmp
pop
scas
dec
outsl
dec
jge
adc
xorl
sbb
addr16
cltd
jl
data16
or
sbb
cmpsl
das
movq
inc
imul
mov
hlt
fildll
jle
dec
adc
and
mov
inc
int3
and
xor
xrelease
shll
push
cmp
ds
xchg
mov
test
cmp
push
mov
or
pop
xchg
sub
aad
mov
mov
mov
mov
imul
hlt
cmp
push
arpl
lods
cmpsb
lods
and
jmp
pop
adc
fmull
and
loop
aaa
fidivrl
xchg
out
ret
daa
js
xor
inc
xchg
test
cmc
fwait
divl
fldenv
lcall
inc
adc
mov
pop
out
jbe
adc
cmpsl
mov
jbe
or
add
aas
mov
mov
sbb
test
push
add
jno
lock
cmpsb
sub
aas
clc
lret
daa
cmp
xchg
adc
sarb
xchg
mov
aam
xchg
dec
inc
xchg
adc
daa
xchg
lods
jno
xor
mov
inc
pop
jae
fsubrp
jo
xor
loope
xor
lret
divl
add
je
jno
push
leave
stos
fistps
sub
call
pop
cld
or
jle
xor
cmc
push
clc
and
sbb
filds
fisubl
inc
scas
cmpsb
fiaddl
ja
pop
pop
jo
andl
fs
aam
inc
mov
mov
push
jmp
fimull
negl
call
popf
jb
mov
lahf
xchg
clc
and
mov
ret
mov
xor
adc
enter
add
mov
mov
shrb
popa
or
fs
lds
push
fnstcw
or
mov
push
in
inc
hlt
push
jne
jo
xor
scas
adc
cmp
add
or
das
mov
popf
sub
popf
out
test
push
loope
rclb
cld
xor
dec
jae
cmp
pop
shll
cmc
mov
hlt
popa
mov
push
mov
cmc
jo
mov
and
fcoms
fcmovbe
jg
pop
pop
in
lret
lea
add
lea
jnp
nop
outsb
pop
popf
iret
pop
scas
mov
push
iret
push
dec
aad
pop
pop
mov
mov
add
jmp
dec
or
dec
std
out
sub
fnstenv
and
fsubrs
and
or
int
xchg
rol
mov
inc
cmp
outsl
aaa
push
jae
pusha
jmp
jbe
dec
dec
imul
sub
sti
in
daa
mov
adc
lds
sbb
loopne
repz
fcoms
aad
mov
mov
inc
or
lahf
pop
jb
popf
push
sub
fstpt
sub
push
xchg
pop
lcall
aaa
inc
xor
push
leave
out
xchg
dec
add
push
out
movsl
repz
mov
aaa
lahf
add
roll
xchg
dec
iret
mov
scas
push
sub
mov
adc
mov
and
xor
adc
fs
xchg
pop
andl
mov
dec
inc
pop
mov
xchg
and
outsb
add
push
imul
in
sbbl
or
jmp
xchg
sub
test
jle
sub
fildll
scas
sahf
lcall
jp
in
or
xchg
xchg
jmp
jb
push
cmpsb
test
data16
in
scas
mov
xchg
outsb
fistps
xchg
jp
in
repnz
negb
pop
mov
xchg
xchg
movsb
fucomip
imulb
and
push
mov
mov
fldt
adc
push
add
mov
mov
pop
cmp
nop
jne
jb
popf
stos
mov
popa
xor
fidivrs
subb
and
fstps
sbb
notb
in
xchg
and
sub
jnp
and
int
push
jg
pop
stc
outsl
jnp
xchg
mov
sbb
lret
ja
mov
sti
add
out
jl
nop
fmull
jnp
mov
mov
jg
pushf
aaa
in
push
sub
dec
or
lods
inc
test
xlat
enter
inc
das
add
stos
mov
jecxz
fstl
int3
adc
cmp
add
push
or
push
mov
cmpsb
rorb
jmp
push
leave
pushf
pop
clc
shrl
test
mov
sub
fdivs
xor
aaa
mov
jnp
jbe
sub
mov
xchg
pop
mov
cwtl
test
mov
xor
outsl
pusha
push
mov
ret
fcomps
and
sub
and
insb
adc
or
into
add
pop
or
cld
cmpb
jmp
in
ret
jle
and
stos
mov
in
push
insb
adc
lods
dec
mov
fwait
arpl
call
xor
add
test
mov
dec
cmp
cltd
clc
scas
jns
pusha
aas
rolb
cmp
push
inc
imul
xchg
daa
sti
clc
sub
sbb
arpl
sbb
loope
push
testl
mov
sbb
sub
rcrb
scas
pop
xor
inc
xchg
leave
jl
inc
and
sbb
xchg
cmp
aad
hlt
mov
and
std
jbe
std
sub
scas
int
lea
out
lods
mov
or
cmp
leave
dec
repnz
push
and
jns
fcomip
out
sti
test
lret
or
cmp
fabs
dec
mull
in
mov
in
jae
cmp
stos
pop
loopne
xor
aas
fbstp
inc
dec
ror
or
or
xor
lods
test
cmpsb
cltd
xlat
sub
mov
xchg
je
push
cltd
mov
xchg
inc
inc
pop
xor
push
add
or
ja
jne
adc
mov
int
lods
jl
mov
in
cmp
dec
xchg
flds
cmp
sbb
adc
test
mov
pop
mov
sti
sub
push
rolb
sbb
or
repnz
fistpl
push
cltd
pop
incl
iret
dec
sub
pop
push
dec
inc
sbb
cmp
clc
cs
cmp
sbb
pushf
inc
push
cwtl
ljmp
stos
cld
push
mov
cmp
mov
mov
xor
fnstcw
push
add
pop
add
fcoms
push
cltd
dec
pop
or
mov
mov
test
mov
jmp
dec
ficoml
pop
mov
add
mov
js
push
mov
cmp
mov
and
out
mov
push
out
cmp
xor
adc
in
leave
aaa
add
or
dec
sar
mov
test
inc
push
and
pop
cli
out
sub
mov
jno
cmp
jge
hlt
adc
loopne
arpl
mov
lods
cvtps2pi
ss
incb
sarb
or
in
jo
cmp
sarb
jb
lds
push
or
mov
insl
test
pop
aas
lcall
jle
daa
dec
ds
jle
test
int3
hlt
repz
adc
or
jp
nop
ss
pop
inc
or
adc
out
test
mov
mov
push
sti
test
lret
sub
movsb
sbb
and
lret
xchg
into
sbb
mov
out
add
cli
adc
pop
popf
fs
xor
jno
popa
add
add
lret
lcall
add
push
out
pusha
pop
movsb
sub
mov
pop
outsb
jmp
ret
es
cli
add
or
inc
inc
aad
sbb
gs
sbb
xchg
mov
das
leave
xor
sub
cmp
pop
pop
in
ds
and
cs
and
push
push
aas
das
divb
fs
mov
xor
add
xchg
xor
push
leave
adc
addb
leave
mov
sub
xor
adc
sti
cmp
test
fstpt
pushf
dec
in
adc
popa
cli
mov
cli
xor
imul
push
movsb
fisttpll
jne
fisttps
push
sarb
out
mov
icebp
fdivrs
cmp
into
push
std
adc
jp
out
pop
or
dec
out
loopne
and
enter
xchg
das
sbb
and
mov
es
jmp
lahf
xchg
and
jmp
add
test
push
inc
xchg
fdiv
jmp
jnp
mov
xchg
out
shlb
imul
jecxz
test
jbe
aaa
inc
repz
les
jbe
cltd
sbb
dec
hlt
ss
ja
mov
and
xor
and
in
mov
dec
dec
cmp
fs
int
mov
daa
pop
inc
int3
sahf
jmp
jo
pop
dec
enter
and
pop
imulb
in
into
movsb
mov
jg
pop
fbld
mov
gs
fsts
ss
dec
lea
ret
cmpsl
sbb
add
shlb
cmp
lcall
push
in
and
dec
pop
adc
mov
outsb
popf
incl
jle
daa
sahf
aas
test
sub
cmp
xchg
mov
pop
inc
aam
mov
pop
xlat
and
xchg
mov
add
lea
jp
test
cltd
sbb
or
je
sub
push
fstl
addr16
add
xchg
sub
jbe
cli
int
inc
jp
xor
xor
aam
add
addr16
or
pop
aaa
inc
repnz
mov
notl
xchg
jb
testl
inc
dec
xchg
ja
jmp
mov
xchg
mov
bound
fdivrl
aam
xor
push
fcomp
pop
clc
in
notb
popf
cmc
lods
lds
repnz
push
les
xlat
jmp
in
enter
mov
cmc
sarl
fsubs
sub
and
push
movsb
stc
mov
lahf
stc
add
mov
or
xchg
adc
outsl
loopne,pn
mov
push
sbb
fsubl
xchg
jne
pop
xor
ret
dec
movsl
insb
test
sub
cmpsb
pusha
inc
push
jge
out
sti
pop
cmp
mov
and
push
and
test
stos
pop
fcomp
jbe
fsubrl
sub
jmp
pop
lret
shrb
xor
pop
sbb
sbb
or
push
adc
jno
cmp
mov
jecxz
lret
repz
imul
pop
cld
xorb
fisubl
clc
mov
mov
push
push
dec
es
mov
jle
push
andb
sarb
jns
inc
sahf
adc
xor
jno
jmp
push
push
pop
push
xchg
sub
mov
xchg
imul
das
lcall
adc
mov
jmp
jmp
dec
mov
xorb
addr16
xchg
call
add
lret
mov
jbe
push
testb
mov
jl
testl
jl
mov
cmp
ret
subb
adc
lock
mov
push
mov
es
cltd
sub
cmp
out
jne
popf
inc
loop
call
inc
or
mov
mov
jnp
out
in
lret
aas
sbb
ja
jp
xor
loope
test
adc
or
stos
push
pop
clc
cmpsl
cmp
cmp
jne
ss
jmp
jne
out
dec
xorb
adc
pop
pop
add
lret
cmp
push
dec
adc
ret
cld
ljmp
adc
xor
insb
pop
push
bound
test
cmp
in
into
push
inc
test
mov
mov
outsb
lahf
xchg
cld
dec
add
or
push
xchg
adc
mov
inc
or
pop
adc
inc
addb
addb
xlat
inc
sub
ja
ljmp
cs
mov
loop
and
repz
sub
mov
iret
mov
insl
lods
loop
cmc
mov
lods
stc
popl
fsub
jno
jecxz
cli
push
and
aas
and
jmp
test
mov
sub
das
addr16
xchg
sub
inc
pop
push
and
sbb
loop
movsl
xor
orb
adc
iret
jns
shlb
ljmp
lret
cld
outsb
out
sbb
xor
mov
notl
mov
shufps
dec
movsl
sub
aad
jb
stc
enter
aas
adc
fs
rcrl
outsb
andl
bound
notl
mov
insb
mov
push
sub
xor
lods
xor
pushf
adc
aaa
add
jle
rol
fwait
push
inc
push
pop
shll
mov
imul
mov
lahf
pop
dec
xchg
adc
imul
push
inc
mov
add
mov
sub
popa
sbb
push
xor
mov
jmp
popf
hlt
pop
loopne
and
int3
cmpsb
fildll
ljmp
les
inc
ljmp
adc
adc
imul
dec
adc
sbb
or
or
pop
aam
call
push
loope
inc
or
add
mov
jge
fnstcw
int3
jno
aad
xchg
das
fisubrl
jg
in
imul
popa
or
bsr
jp
sti
out
lods
stos
dec
lods
outsb
and
pop
sahf
ror
lock
jl
push
leave
sbb
repz
mov
sbb
nop
fxch
shr
xchg
in
or
cmpsl
or
cwtl
iret
nop
mov
iret
imull
jg
jnp
out
sbb
repnz
or
xchg
jne
xor
mov
fistpll
jb
xlat
push
ljmp
and
cwtl
scas
mov
pop
cmp
int
add
mov
dec
ret
sbb
cmp
sti
and
loopne
push
mov
mov
addr16
mov
sbb
call
loop
test
jmp
cld
dec
leave
popa
cmp
es
out
stos
add
mov
sbb
xchg
push
mov
mov
enter
push
mov
popa
cmp
push
mov
jne
cmpb
inc
stos
mov
xor
in
rcr
ucomiss
fists
adc
decl
in
mov
imul
dec
int
lcall
cmp
adc
addr16
lds
outsl
bound
adc
mov
cs
or
jl
insl
pop
xlat
jno
jge
cmc
out
jle
pop
dec
test
jbe
pop
and
cmc
stos
jmp
movups
inc
mov
fisubrs
fcoms
xor
imul
add
add
mov
push
push
in
bswap
sub
dec
mov
or
fdivl
andl
pusha
rorb
enter
mov
cmc
or
inc
mov
daa
jns
dec
gs
dec
aas
shr
enter
sahf
daa
pop
cmc
lock
sub
test
xchg
lea
fildll
lret
pavgw
es
lahf
int3
imul
js
jge
xchg
test
cld
xor
adc
gs
add
ja
sarb
cwtl
fmul
pop
inc
jne
fs
out
jbe
cs
out
jg
ds
and
call
mov
lea
jmp
add
int3
xchg
fcmovb
or
js
jl
cltd
loopne
fldcw
jns
testb
xor
sbb
or
lods
xchg
ja
cmpl
cltd
inc
loop
mov
aam
mov
fsubl
or
fisttps
sub
call
imul
sub
lret
sbb
pop
dec
xchg
repnz
in
ss
mov
mov
xor
adc
stc
jns
pop
add
adc
xchg
push
pop
dec
push
insl
xor
sahf
inc
lcall
enter
jbe
or
movsl
sub
push
cmp
mov
call
sub
pusha
les
clc
adc
mov
jo
jmp
add
adc
daa
ret
mov
out
dec
call
pop
loopne
insl
sub
sub
xchg
sub
ja,pn
pushf
add
pusha
outsl
push
push
lcall
mov
sbb
sbb
hlt
add
cli
pop
pop
cmp
out
inc
mov
int
add
sarl
int
and
fcoms
sbb
mov
sbb
cltd
std
push
jg
sbb
adc
push
fldt
pop
pop
sti
mov
pop
mov
mov
sbbb
popf
dec
insb
xor
or
or
jae
insb
sbb
int3
or
into
jbe
sub
pop
mov
fmul
pop
or
mov
dec
nopl
mov
xchg
out
sub
push
loop
ret
ret
je
aad
es
fwait
pop
mov
mov
sbb
and
imul
ficompl
inc
jb
mov
xor
sub
pop
ljmp
sbb
dec
shrb
lcall
and
sahf
xor
int
or
lahf
jne
imul
pushf
push
fimull
call
in
mov
mov
cmp
outsb
imul
inc
mov
mov
scas
xor
xlat
push
in
or
sub
fsubrs
pusha
dec
push
loopne
inc
cmpsb
into
outsl
jg
cmpsl
inc
fiadds
adc
jecxz
push
sbb
clc
cmp
xlat
sbb
adc
xchg
dec
pop
lea
daa
sti
mov
mov
jmp
mov
daa
fsubl
jmp
outsb
jae,pt
mov
ficoms
xchg
jb
sbb
popf
popa
sub
outsb
cltd
xor
push
mov
mov
scas
stos
arpl
jle
iret
shr
test
cmpsl
pop
rcl
jecxz
adc
nop
stos
cld
jnp
mov
jp
jae
add
cmp
sarl
inc
mov
mov
aas
or
test
and
push
jbe
je
sub
mov
sub
or
lcall
test
imul
or
cmp
sti
sbb
shlb
popa
aaa
mov
outsb
xor
sbb
jg
jns,pn
sbb
dec
test
xlat
rorl
outsl
movsl
je
bound
cmpb
xor
or
lret
mov
cs
jns
or
imul
mov
mov
popa
jae
iret
xchg
push
inc
fucomip
mov
ret
add
mov
mov
inc
cwtl
mov
adc
pop
outsl
shlb
push
or
add
xchg
pop
cmpsl
add
scas
sub
lock
pop
call
das
pop
or
nop
or
popl
lmsw
aas
cmovl
int
inc
or
pop
incb
add
mov
or
insl
jl
xchg
shr
rorb
lret
fisttps
adc
jo
or
inc
daa
sbb
mov
or
and
fmul
sbb
xor
jne
data16
aas
push
sbb
aad
cmp
cmp
repnz
inc
loope
jecxz
inc
faddl
cmp
xor
repnz
push
enter
fcompl
mov
push
mov
add
das
or
inc
in
rcrl
and
jg
jp
xor
clc
adc
lret
lret
fcom
test
movsb
sbb
sbb
dec
or
jb
ds
mov
gs
pop
inc
add
jno
mov
enter
imul
fsubrl
add
orl
divl
fs
xchg
imul
test
sbb
pop
push
inc
dec
pop
stos
insl
xchg
daa
lahf
and
sarl
sub
pop
lahf
push
ret
jmp
pop
stos
cld
pop
or
cli
lret
enter
add
sub
adc
into
push
mov
std
xchg
iret
sbb
clc
cmc
jnp
rcrb
xchg
ret
and
xor
mov
pop
lock
xchg
lret
or
jl
aam
jl
inc
dec
dec
ret
sbb
inc
sub
mov
out
sbb
insb
cmpsb
out
sbb
es
adc
hlt
into
mov
in
add
imul
or
adc
xchg
subl
cld
in
jg
test
jae
add
pusha
adc
movsl
fistl
leave
insb
mov
xorb
scas
je
int
clc
lea
mov
sbb
sbb
xchg
scas
ret
sub
ss
nop
int3
jl
mov
pop
outsl
push
adc
mov
stos
push
mov
inc
mov
movsl
arpl
push
and
nop
shll
push
pushf
dec
and
loopne
adc
ret
and
mov
xor
sub
or
fnstsw
shl
fdivrs
jae
mov
pop
popf
pop
adc
fiaddl
movsb
sti
ja
lods
loope
or
xchg
js
and
adc
xchg
mov
or
icebp
stos
call
push
mov
test
adc
sahf
add
jecxz
outsl
pop
jl
fwait
lret
nop
push
popf
ss
mov
cmp
mov
pop
iret
popa
cwtl
cmc
mov
pop
ret
gs
fistpll
sbb
out
lds
push
scas
das
popl
xchg
xor
std
mov
out
sarl
dec
or
sbb
jg
mov
ret
iret
icebp
outsb
xor
daa
cmp
fisubrl
push
mov
nop
xlat
cld
sbb
mov
push
std
aas
cmpb
xor
or
sbb
pop
xor
lret
dec
out
out
aaa
icebp
cmp
mov
call
push
dec
and
inc
adc
jmp
popa
ja
lods
jp
jae
xor
cmp
mov
push
xor
daa
lret
outsl
fimuls
adc
das
sub
bound
push
jns
outsl
add
jge
getsec
test
fs
jo
jb
and
nop
and
inc
enter
xchg
js
jl
jmp
pop
pop
jp
inc
mov
xchg
mov
jle
xchg
adc
in
sar
pop
ss
fidivl
sbb
xchg
iret
fidivs
xor
add
mov
inc
jae
jge
sbb
or
mov
inc
fnstsw
mov
push
inc
loope
xchg
ss
sub
lcall
push
es
mov
mov
jnp
mov
cmp
std
aas
ss
mov
jge
addr16
arpl
imul
xor
sub
mov
lods
mov
cs
cmp
xor
push
add
fwait
cmpsl
sub
pop
fstpt
and
xchg
xchg
mov
lret
pop
ficoml
push
int3
insb
js
ret
add
lahf
loop
test
push
pop
fstps
mov
adc
lret
mov
test
in
fwait
lahf
dec
or
mov
and
inc
pop
adc
add
fwait
jnp
push
das
movsl
ljmp
std
into
and
lret
aaa
cmp
xchg
sbb
into
sbb
add
sub
inc
rcrb
xor
pusha
xor
xor
rcrl
sub
notl
ljmp
adc
std
and
in
push
pop
outsb
xor
mov
push
xorb
sbb
mov
sti
jge
add
stos
arpl
mov
cwtl
and
and
jno
jno
aas
or
pop
pop
fwait
pop
mov
push
xor
scas
and
pop
cmp
shrb
push
mov
test
ds
jle
scas
add
in
jnp
fwait
lret
or
adc
dec
stos
mov
mov
xchg
call
stos
push
jp
lahf
sub
popa
xor
mov
push
into
xchg
mov
lcall
je
add
jge
lcall
das
movl
and
pmulhw
mov
into
mov
pop
adc
fldl
fstpt
ljmp
dec
daa
cli
aaa
push
or
and
test
ret
repz
dec
xchg
sahf
fwait
aaa
pushf
aam
cmp
call
jl
sbb
xor
addr16
lcall
fst
or
inc
add
sub
test
pmulhuw
cmp
inc
cmp
cmp
cld
dec
jp
jnp
push
idivl
insb
or
hlt
lcall
and
bound
mov
or
mov
xlat
sub
push
fstpl
addr16
pop
add
inc
das
loopne
fwait
jno
sahf
cmp
push
lock
mov
dec
daa
fwait
les
sub
jne
inc
mov
insl
mov
dec
mov
jp
cwtl
repz
xchg
inc
mov
push
pinsrw
jb
pop
les
push
imul
fimull
sub
jae
mov
push
xlat
lods
push
mov
adc
scas
mov
mov
cs
test
ds
xchg
out
aas
popf
mov
ret
jo
mov
push
sahf
cs
adc
xor
xor
mov
adc
jl
adcb
aas
pop
sarb
psrlq
mov
rcrb
cmpsb
arpl
xor
push
inc
mov
aaa
or
imul
sub
test
jg
mov
inc
mov
jg
test
stos
mov
jae
mov
add
pushf
mov
ljmp
inc
sbb
xchg
cmpsb
jbe
movsl
add
shl
pop
aaa
adc
popf
inc
out
dec
into
loopne
andb
mov
push
rclb
cmp
jb
push
xchg
adc
add
cmp
roll
mov
rorl
fsubrl
sbb
sbb
daa
notb
or
push
sub
push
dec
xchg
dec
rcrl
jae
dec
dec
dec
std
xchg
neg
mov
les
cmp
daa
inc
dec
cld
adc
or
sbb
mov
mov
mov
lea
xchg
test
loop
push
or
divb
inc
cmp
jnp
mov
push
in
std
cli
lcall
testl
shll
fstpt
mov
pop
sub
or
xchg
jns
xor
insl
and
cmc
gs
mov
lret
and
hlt
push
in
test
ja
xor
push
jnp
jle
call
insl
inc
push
inc
notb
daa
and
or
adc
jg
movsl
jg
adc
repnz
mov
mov
pop
popf
ret
mov
cmpsl
sbb
ret
in
add
aad
icebp
cmp
pop
adc
mov
cmpsl
sub
in
jns
xor
je
jns
dec
xor
mov
dec
sub
sti
leave
jle
sti
add
push
js
fs
dec
jne
idivl
lahf
movsb
sti
inc
dec
add
add
loopne
in
imul
mov
shll
mov
adc
add
sets
add
lea
in
xor
ss
or
mov
in
cmc
stos
outsb
sbb
inc
push
fwait
in
inc
mov
sub
das
aam
cmp
xchg
inc
push
push
dec
aam
loopne
in
pop
pop
shlb
sbb
lods
mov
pop
push
popf
mov
push
iret
push
mov
sub
adc
sahf
sub
lock
pop
sbb
test
stos
mov
ds
jb
push
test
leave
sbb
jmp
nop
les
mov
inc
xor
cmpsl
pop
sub
cmc
jmp
test
add
mov
cwtl
stc
jbe
xchg
fcompl
fnstenv
aas
mov
inc
stc
notl
sahf
lcall
testb
imul
lret
daa
test
repnz
and
mov
inc
popa
bound
decb
in
mov
adc
sub
or
adc
insl
ffreep
mov
fsubl
cli
rcll
mov
cmp
mov
or
mov
in
or
arpl
call
inc
adc
xorb
shl
and
push
pop
fdivs
imul
outsb
push
cmp
mov
nop
in
pop
fimuls
xchg
das
popa
addr16
lret
push
mov
aad
cltd
sub
inc
cmp
mov
ret
and
imul
mov
or
sbb
lcall
test
jge
jp
mov
mov
push
jecxz
iret
call
add
mulb
iret
mov
cli
jg
addb
jge
or
jle
and
dec
jecxz
or
xchg
jmp
outsl
xor
or
dec
cmp
std
pop
scas
mull
xor
cmp
sub
dec
jne
movntq
and
rclb
ja
aas
jle
movsl
cmp
enter
mov
subl
popf
and
jg
adc
sub
in
inc
jp
or
lea
movsb
pop
ljmp
jo
push
out
sbb
jns
daa
mov
mov
xchg
push
jle
fsub
jl
and
shr
inc
repnz
sbb
mov
idiv
icebp
or
bound
aaa
adc
mov
test
cs
es
ds
inc
jne
mov
sti
aam
push
sub
pop
xchg
jns
push
mov
xor
sub
hlt
dec
push
xor
mov
pop
mov
iret
adc
dec
jno
lret
dec
or
xchg
ss
or
dec
push
ljmp
mov
cli
repz
xor
inc
aam
lret
inc
jo
or
xor
out
pop
xchg
pusha
pop
push
adc
mov
andl
ret
sbb
pusha
jb
dec
jl
and
call
push
xchg
dec
rcrl
dec
mov
into
out
cmpsb
jno
test
fs
fwait
std
cli
add
enter
mov
jle
lods
sahf
adc
jns
scas
push
ja
cmp
push
std
lods
xor
mov
and
cmc
and
vpunpckhwd
aas
add
inc
in
mov
xchg
pop
rcrl
jle
pop
lock
jl
pop
iret
jne
sti
jne
outsl
inc
out
out
lcall
arpl
mov
fsubrl
add
xor
or
cmp
test
call
mov
inc
cmp
push
rcl
out
leave
or
sbb
mov
in
es
enter
mov
fisubrl
xchg
or
mov
inc
add
jb
mov
fabs
mov
sahf
repnz
gs
add
or
loop
fistps
cs
fnsave
nop
and
push
insl
ja
cmpsl
cld
fcmovu
daa
cli
fnstsw
jg
pop
out
mov
mov
mov
sub
jno
into
inc
lea
xchg
in
dec
stos
pop
dec
jle
popf
pop
insl
ss
xor
sahf
mov
out
add
push
rorl
ret
mov
js
xchg
or
aam
shr
ljmp
in
lcall
pop
xchg
cmpsb
add
ret
mov
mov
fistpl
inc
call
xchg
sbb
mov
jecxz
pop
xchg
xchg
sbb
push
jns
shr
jle
xor
hlt
test
cmc
xchg
stc
lea
add
jbe
in
and
jbe
in
lds
test
and
jge
addr16
lcall
jle
cwtl
xor
and
cld
cmp
out
movsb
mov
push
sarl
mov
leave
mov
dec
xchg
ds
cld
jno
lods
ret
data16
push
sti
insb
jmp
or
mov
test
insb
mov
xchg
imul
fisubrl
xlat
jne
fmul
aam
cmpsl
fists
arpl
or
inc
sub
xchg
sbb
icebp
iret
in
outsl
fsubp
ss
or
push
insb
lret
das
push
sahf
stos
int
lret
mov
imul
adc
add
push
sti
push
lods
pop
stc
mov
std
pop
pop
imul
dec
js
dec
jle
les
in
out
add
adc
fidivrs
sbb
ret
jae
imul
mov
or
lret
push
test
andl
sub
adc
clc
mov
jge
or
into
fxtract
cmp
add
xor
adc
fcomps
pop
out
ja
jmp
fwait
cltd
xchg
cmpsl
sbb
or
les
in
test
inc
idivl
cwtl
cmp
pop
rcrb
and
int
mov
test
es
filds
push
mov
fwait
dec
jle
bound
inc
and
mov
fsubrl
insl
daa
mov
mov
in
xor
push
pop
in
adc
or
xlat
and
stos
push
mov
jno
cmp
mov
jno
mov
or
dec
fs
es
mov
or
arpl
and
popf
inc
addl
jl
lahf
test
addr16
pop
push
dec
cmpsb
aam
jae
daa
xchg
imul
fsubrs
pop
lahf
pop
mov
das
inc
adc
jmp
mov
push
add
int
test
movsl
in
push
jl
stc
xchg
add
xchg
pop
iret
add
add
mov
daa
addr16
cmp
mov
and
loopne
hlt
mov
xor
je
pop
pop
inc
lods
jecxz
cwtl
mov
in
xchg
jg
mov
push
sub
loope
pusha
xchg
or
adc
sarb
jmp
aad
movl
leave
test
or
jns
and
pop
shr
aas
lods
ja
sub
js
mov
cmp
push
inc
jmp
adc
pop
pop
sti
inc
call
push
or
lds
mov
push
cli
shll
mov
nop
xor
push
cli
in
cmp
mov
and
jmp
dec
sarb
int3
iret
outsb
adc
jb
test
add
pop
cs
inc
add
mov
xor
and
xor
push
xor
sbb
pop
and
adc
xlat
std
daa
leave
sub
cmp
xchg
fistl
pusha
pop
negb
or
adc
xchg
jge
push
mov
jmp
es
aaa
cmc
in
push
mov
jns
repnz
dec
jecxz
mov
addr16
js
lock
cwtl
imul
outsl
inc
js
inc
pop
movb
mov
cli
mov
mov
cmpl
and
popa
pop
cmp
aad
add
sti
pushf
test
or
daa
shl
mov
adc
xor
comiss
pushf
ljmp
clc
cmp
outsl
fildll
scas
in
bound
rorl
mov
nop
aam
fistps
pop
lret
pushf
in
rcr
pop
jge
mov
ds
mov
pop
and
icebp
cmp
aas
mov
fldcw
xchg
pop
sub
mov
or
fcompl
push
or
push
and
imul
mov
dec
test
inc
stos
ret
and
jbe
mov
xchg
mov
xchg
or
cld
mov
nop
dec
aaa
ret
pop
out
push
add
adc
pop
add
jmp
test
xchg
ja
mov
insl
mov
fnstsw
fst
jnp
pop
inc
jecxz
push
push
into
cli
jp
mov
mov
cmc
out
nop
mov
mov
push
scas
dec
adc
or
pop
mov
and
xor
mov
scas
stc
jb
mov
adc
dec
loope
push
pop
rorl
pop
stos
int
repnz
sub
pusha
push
aam
adc
sub
adc
ja
ja
xchg
and
test
les
pop
jp
sbb
pop
fcmovbe
mov
clc
mov
and
adc
sub
repz
outsl
mov
push
loopne
xor
test
shlb
add
pop
xchg
or
cltd
jns
sbb
push
jbe
mov
mov
test
xchg
and
in
mov
popf
pop
dec
ret
ljmp
sbb
cmp
shll
xchg
fstpt
enter
fcmovu
pop
leave
rcll
rolb
mov
adc
out
mov
in
jmp
cmp
mov
xchg
je
cli
xor
icebp
or
sahf
out
mov
aaa
mov
roll
movsb
mov
in
imul
negl
addl
std
test
sbb
sub
cmp
inc
pop
int
addr16
mov
add
rorb
les
xlat
and
push
lret
push
xor
outsl
out
add
mov
std
jmp
movsb
sub
and
mov
shlb
xor
js
add
adc
cmp
imul
sbb
dec
arpl
mov
andl
std
mov
in
movsl
mov
sub
cmp
in
out
test
mov
xchg
or
out
ret
loop
js
add
mov
fadd
inc
orb
add
cld
arpl
sbb
jne
cmpsb
inc
daa
mov
inc
cmp
in
sub
pop
fbld
daa
or
arpl
mov
imulb
ret
adc
fidivrl
cmp
jbe
cmp
ret
sbb
sbb
mov
dec
nop
daa
ja
addl
push
inc
mov
les
push
mov
in
dec
xchg
mov
push
mov
es
pop
mov
stos
sbb
cwtl
les
mov
push
xchg
dec
lea
mov
jno
ss
dec
mov
sbb
adc
add
insb
data16
adcl
ror
dec
dec
unpckhps
mov
adc
mov
orl
aaa
subb
lahf
mov
rcr
dec
xchg
jbe
int
xor
popf
xchg
jmp
or
pop
in
std
cmpsb
jbe
or
inc
cmc
insb
loopne
inc
mov
mov
pop
pop
outsb
xchg
sbb
pop
dec
pop
mov
bound
sub
sub
pop
mov
rorl
stc
adc
cmc
lahf
shrb
inc
mov
mov
adc
sbb
cmp
and
das
jl
dec
ja
mov
add
test
or
sub
sub
fstpl
int3
inc
xor
push
and
pop
lret
gs
out
push
and
in
cmpsb
push
inc
adcl
loop
dec
out
hlt
idivb
sarb
aad
xchg
lods
scas
mov
icebp
shr
dec
inc
ja
hlt
sbb
rorl
cmp
pop
dec
repz
sbb
fsubp
sti
les
das
sub
mov
mov
xchg
push
inc
leave
lahf
xchg
in
and
or
addb
ss
push
js
dec
xchg
sbb
xchg
lcall
cmpl
test
adc
fsubrl
scas
loope
cmpsl
inc
icebp
push
ljmp
push
int3
jle
or
xor
pop
mov
pop
mov
push
xchg
ret
push
mov
xlat
push
pop
scas
incb
and
lahf
enter
mov
push
push
xor
orb
andb
pop
imul
shr
enter
hlt
mov
pop
lock
cmc
or
cwtl
jmp
xchg
in
xor
outsb
adc
in
out
xchg
cs
push
sahf
or
xor
pop
mov
divb
xor
sbb
add
dec
into
mov
or
mov
xchg
mov
pop
sub
rol
add
sbb
mov
and
rcrl
rorl
xor
int
mov
pop
mov
sbb
jl
sub
inc
xor
mov
movsl
rclb
pop
fstps
aam
push
in
fsubp
and
cmp
imul
and
push
xlat
push
ret
cmp
in
das
rorl
and
xlat
inc
mov
aam
das
int
lods
mov
into
sahf
lret
add
insl
mov
mov
leave
xor
jmp
das
shll
push
sub
jg
add
jmp
adc
dec
push
lahf
ljmp
xlat
xor
sub
mov
mov
xchg
fstpl
imul
std
add
push
loop
nop
pop
out
leave
arpl
push
push
cmp
icebp
mov
sbb
sbb
add
push
jg
sti
call
cmp
jbe
jnp
adc
lahf
add
adc
sub
lret
adc
leave
mov
into
push
inc
mov
sbb
sbb
jl
adc
or
jns
mov
es
mov
fadd
inc
fisttpll
sub
lret
stos
pusha
iret
mov
gs
sahf
dec
lock
jbe
xchg
push
inc
jnp
cmpsb
inc
pushf
pop
jno
sbb
cmp
lods
sub
sbb
inc
in
and
mov
or
fmul
hlt
cmpsl
out
or
push
add
out
pop
mov
add
inc
push
xchg
jne
sbbl
stc
or
jb
jne
pop
stc
jmp
jns
fisttps
push
fwait
jno
imul
pop
insb
mov
push
mov
push
push
ljmp
mov
jo
inc
xchg
decb
sbbl
adc
stos
xchg
daa
jle
add
jb
adc
in
push
or
in
xchg
cld
fildll
xchg
adc
push
pop
pop
xchg
fiaddl
mov
push
cld
les
add
mov
shl
fistpl
ljmp
and
scas
pop
jae
popa
mov
mov
pop
xchg
repnz
mov
dec
adc
mov
xor
fisubs
cmc
movsb
dec
rcrb
mul
dec
iret
jns
lds
and
mov
push
sub
imul
shr
in
dec
jae
lods
mull
pop
inc
pop
push
jmp
repnz
push
mov
jnp
lahf
dec
mov
push
push
arpl
adcb
push
stos
and
mov
ja
sbbl
lret
xor
test
mov
dec
mov
cmpsb
js
jge
jmp
bound
mov
adc
or
lods
inc
xor
insl
fmul
inc
mov
aad
imul
jnp
fmuls
mov
mov
sbb
jns
push
adc
dec
cmpsb
addr16
stos
aam
ret
addl
insl
pop
add
scas
or
fsubr
loop
sbb
mov
mov
or
mov
arpl
sub
lods
jmp
and
aam
mov
jmp
fstps
mov
out
pop
inc
inc
cmp
mov
fsub
loope
std
scas
test
and
add
cmp
popa
xchg
sbb
ss
cltd
mov
iret
or
rcrl
mov
test
cs
pop
add
es
out
fs
jg
out
sub
jnp
cs
and
fistpl
cltd
nop
mov
sti
dec
mov
movsl
mov
imul
sub
inc
jmp
push
mov
or
jge
pop
lret
js
call
mov
dec
push
xchg
sbbb
lcall
js
jp
pop
inc
cs
arpl
cmovns
add
hlt
xchg
daa
or
and
adc
scas
dec
or
mov
mov
testb
lods
scas
sub
jno
pop
pop
dec
outsl
dec
xchg
movsb
insb
pop
cli
adc
sbb
inc
dec
pop
cmp
call
xor
sbb
or
cmp
mov
jno
fists
inc
aad
xor
andb
orb
add
maxps
or
hlt
in
jge
jo
cmp
imul
push
jcxz
push
fidivrs
adc
xor
rcll
mov
push
rcrl
push
iret
pop
pop
push
fldl
xor
es
out
ja
gs
dec
lret
test
cmc
push
sub
xchg
inc
fistpll
pop
adc
jns
sahf
pop
aam
mov
or
lahf
push
mov
xchg
inc
fbstp
loope
jg
xchg
nop
ficoml
mov
scas
pop
cmp
test
dec
mov
fldcw
cltd
jecxz
cmc
nop
sbb
cmpl
add
ret
sub
in
jo
dec
aaa
or
inc
movsb
push
jl
push
scas
jne
aam
xchg
pop
and
inc
stc
sbb
ja
xchg
sti
lds
sbb
fs
jecxz
pop
add
pusha
ficoms
push
xchg
push
dec
lret
neg
into
jmp
scas
xor
cld
pop
jo
pushf
sahf
cwtl
mov
adc
leave
jns
jge
or
mov
addl
lret
fsubs
je
push
in
out
sub
ror
insl
test
dec
mov
fstl
sub
lods
imul
std
addl
aad
insl
push
test
andl
mov
es
data16
movsb
aad
mov
push
cmp
dec
pusha
add
roll
xor
push
push
add
dec
rolb
test
repz
stc
cmp
pop
stos
xchg
add
sbb
in
in
int3
inc
aam
xor
mov
fst
aam
mov
xchg
inc
int
je
jecxz
rclb
add
cmc
shrl
xchg
adc
and
sub
out
scas
fistpl
in
stos
sub
in
pop
jmp
dec
pop
push
adc
inc
push
jno
aam
push
xchg
jbe
imul
dec
shlb
inc
push
jg
mov
or
xchg
xchg
mov
xchg
leave
jg
fsubrs
subb
pop
cmc
cmp
and
cmp
in
sub
out
add
je
stos
jmp
adc
sarb
test
cwtl
mov
xchg
pop
cmp
insb
pushf
or
adc
fiadds
or
test
inc
add
xchg
push
mov
call
cmp
cmp
xor
sub
add
cmpsb
jno
gs
hlt
push
in
or
js
adc
xor
arpl
add
xchg
and
mov
in
lret
or
fwait
psrlw
lods
rcrl
cmp
mov
dec
movb
mov
std
add
sbb
out
pop
sub
sbb
scas
lds
mov
inc
imul
jp
andb
daa
outsb
in
popa
cs
xor
das
mov
inc
gs
outsb
cmp
insb
push
rorl
pushf
dec
xor
scas
dec
pop
push
xlat
popf
ljmp
das
in
aas
popf
pop
out
es
pop
in
nop
cmpsb
cltd
dec
mov
add
xor
sub
sbb
fcomi
mov
fst
arpl
ret
xchg
jb
sarl
adc
xor
sti
mov
add
jle
xorl
rorb
dec
fs
arpl
mov
pop
call
js
mov
call
pop
in
jp
scas
mov
mov
repnz
or
push
push
mov
push
push
clc
mov
push
loopne
push
add
push
mov
leave
idiv
push
jnp
test
mov
jo
mov
or
ljmp
imul
xor
inc
jecxz
arpl
mov
push
int
lret
adc
or
fiadds
jle
adc
je
cmpsb
mov
call
push
data16
cltd
adc
outsb
rolb
jo
std
hlt
pop
rcrl
cs
xchg
xor
hlt
xchg
jne
test
fs
xorl
mov
sbb
cmp
fildl
stos
lea
faddl
jnp
adc
shlb
cli
enter
mov
lock
mov
add
mov
repnz
sti
mov
inc
and
jns
push
popf
inc
xchg
add
sarb
xor
scas
fmuls
xor
scas
dec
xchg
mov
jmp
pop
aaa
ffreep
lahf
popa
jo
lret
popa
bound
dec
push
imul
push
push
push
xor
test
les
jg
iret
cmpsl
or
rclb
adcl
mov
xchg
mov
mov
inc
or
js
mov
pop
mov
hlt
push
or
sarl
lea
mov
jmp
push
sbb
leave
pusha
mov
sti
insb
xchg
shl
add
in
push
rcr
adc
push
push
repz
add
in
addr16
cmp
sbb
cmp
lcall
das
cltd
std
popf
jne
lahf
inc
add
js
inc
sub
dec
xchg
pop
and
cld
push
cld
mov
arpl
push
dec
lods
sahf
mov
xchg
xor
outsl
lret
pusha
fs
push
mov
int3
push
lahf
push
cmp
fs
dec
repz
mov
dec
add
aad
dec
test
push
mov
jmp
mov
push
mov
shl
in
mov
xor
outsb
push
mov
scas
mov
addr16
push
push
in
repz
xlat
aam
lahf
jb
cli
mov
push
add
dec
cmpsb
lret
popf
int
lcall
lret
popf
jnp
sbb
pop
dec
or
mov
pusha
test
stos
arpl
ljmp
dec
adc
sbb
adc
cmp
push
inc
xchg
addl
pop
pusha
mov
xorb
push
jns
shl
repz
push
insb
aam
push
xor
mov
insb
or
jb
lods
lcall
pop
xor
mov
mov
mov
ljmp
push
mov
fidivrl
cmpsl
sbb
test
pop
lea
imul
aas
adc
wrmsr
repz
jbe
mov
jmp
lcall
mov
sbb
movsl
scas
push
mov
daa
cmp
xor
mov
out
mov
or
xchg
dec
mov
pushf
rolb
xchg
into
mov
lock
push
mov
aas
ljmp
xlat
gs
adc
aaa
cltd
jns
ret
inc
pop
out
cmp
jb
cmp
xor
aaa
pop
or
mov
daa
push
adc
xor
add
pop
inc
cmp
dec
lret
sub
insl
adc
push
dec
inc
push
push
loopne
xor
xchg
cld
xchg
or
jne
fcomps
xchg
lret
cmpsl
pop
sbb
sbb
push
adc
dec
test
shlb
mov
jecxz
and
cli
jbe
popa
scas
bound
inc
jg
adc
or
addr16
mov
sub
sti
scas
pushf
cmp
in
sbb
fiaddl
inc
inc
jg
inc
fisubrs
sbb
cmp
cmc
jmp
dec
xor
add
jg
pop
test
mov
sbb
inc
mov
jge
pushf
mov
aad
push
push
insb
push
inc
iret
aaa
arpl
inc
push
cmpsl
popf
lret
xor
and
push
sub
sbb
stos
mov
rorb
movsl
imul
cs
insb
aam
xchg
push
inc
cli
shll
inc
pushf
les
inc
movsl
gs
sbb
mov
cmp
in
inc
lock
sub
cmp
repnz
dec
fdivr
mov
pusha
add
cltd
mov
mulb
mov
cmp
clc
addb
lret
ja
lods
sub
cld
out
repnz
fimull
popa
adc
call
lods
lods
and
cmp
lods
and
add
lods
push
cmc
cmp
rcrl
mov
mov
cltd
cld
shlb
jbe
push
sahf
cmp
sub
cltd
xchg
push
fistps
jl
movsb
or
inc
imul
in
xor
sbb
inc
fstps
hlt
arpl
pop
inc
add
lret
ss
jns
std
jp
add
in
jl
ljmp
jns
pop
mov
xchg
push
repz
pop
mov
shlw
popa
mov
xor
sbb
insl
push
mov
jne
mov
addr16
jle
jecxz
bound
jne
test
sub
loop
negb
fimull
inc
out
test
adc
ja
mov
int
lds
pop
fsub
mov
jno
popf
fstl
pop
and
mov
mov
jno
inc
push
insl
xor
pop
mov
testl
test
sahf
adc
xor
or
mov
addr16
xchg
imul
mov
sub
sub
test
call
sub
aam
popf
cmp
ja
mov
pusha
nop
jns
sub
xchg
sahf
mov
out
jnp
daa
das
ret
xor
fsubrl
jg
lcall
cmp
gs
mov
cmpsl
xchg
bound
adc
xchg
dec
mov
out
std
fisttpl
mov
pop
fdivrs
xlat
push
sub
iret
int3
mov
and
outsb
inc
out
pushl
iret
mov
cmpl
add
out
lret
ret
adc
and
pop
cld
xchg
adc
mov
xor
cmp
inc
mov
andl
xor
scas
and
pop
ss
fsubrl
xchg
or
stc
sti
aas
mov
rcll
out
and
imul
test
pop
lods
test
fidivrs
xchg
mov
push
daa
add
push
sbbb
sub
jno
repz
ret
rol
sbb
jp
dec
inc
xor
in
test
out
inc
mov
out
mov
xchg
out
sti
lret
dec
mull
test
addl
rclb
add
adc
gs
repz
mov
dec
test
sti
or
sub
pop
in
xchg
test
rclb
in
jae
pop
enter
push
pop
fdivp
sub
pop
xchg
les
xor
push
in
sbb
mov
and
outsl
dec
cwtl
jns
enter
sub
in
sbb
lods
sub
add
adc
insl
into
loopne
repnz
cmp
cld
fsub
rcrb
loope
scas
jb
jge
push
fldenv
push
sub
insl
pop
add
sarl
ret
mov
xchg
cwtl
push
nop
les
loop
imul
dec
lods
stos
jnp
jle
cmc
xchg
jb
pop
or
jns
out
cld
rorl
mov
mov
and
mov
icebp
add
mov
pop
mov
aad
sbb
xchg
rcrb
stc
mov
loop
cmp
cmpb
notl
lea
dec
xor
arpl
lret
jbe
inc
xor
sub
adc
adc
aad
xor
mov
xor
pop
mov
test
test
lret
mov
push
jg
clc
jmp
popa
inc
xchg
or
sub
cs
sbb
cmp
iret
sub
sbbb
hlt
jnp
jnp
dec
fisttpl
xchg
add
fdiv
jne
dec
pop
in
cmp
cmp
mov
jecxz
imull
cmpsl
xor
lea
pusha
add
pop
jns
les
pop
jns
cli
mov
ret
mov
jp
add
mov
sub
mov
jp
nopl
lahf
sub
add
mov
mov
mov
ret
in
es
test
mov
sub
clc
and
or
dec
lock
pop
shrb
pop
inc
dec
jb
iret
or
mov
lret
add
sub
jnp
movsl
test
fdivr
daa
enter
arpl
and
jae
frstor
ret
cmp
pop
lahf
loop
push
das
inc
or
das
scas
sbb
popf
popa
xor
cmp
call
jge
test
adc
cli
pop
pushf
aam
or
cwtl
xchg
pop
fsubs
cli
sti
fsubl
popf
cs
xchg
leave
add
dec
subb
orl
fs
add
enter
icebp
flds
xor
push
sahf
pop
aaa
in
bound
lret
rorb
add
insb
adc
outsb
and
mov
mov
in
xlat
cld
xor
mov
and
sbb
gs
jnp
xchg
in
xor
loopne
sarl
adcl
sub
mov
push
aad
test
ficoms
pop
in
fsubl
jno
pop
sbb
ja
stc
push
std
popa
shlb
popa
pop
push
fcomps
rclb
out
lea
xorb
mov
ss
jnp
sbbl
jmp
jl
movsl
mov
xor
ret
mov
jmp
sti
cmp
pop
dec
cltd
jns
mov
lret
mov
out
dec
mov
mov
out
xor
adc
out
cmpsl
mov
mov
mov
dec
imul
fs
aaa
xchg
push
stos
adcl
loopne
popf
ficoml
mov
fwait
sti
cmp
sbbl
xchg
inc
mov
arpl
add
and
jmp
mov
lahf
les
fidivs
inc
xor
popa
cmpsl
adc
fildll
ds
jle
and
aas
sub
cmpsl
insb
mov
jecxz
aam
jb
add
dec
loop
ljmp
pop
mov
xchg
loope
fisttps
pop
lock
int3
aas
adc
inc
cs
je
or
jne
push
in
cmp
imul
negl
ds
addr16
add
je
mov
sbb
xor
test
dec
sbb
sbb
adc
daa
sbb
popf
out
sbb
dec
roll
loop
fimull
pop
sub
xchg
push
popa
aas
iret
push
push
in
mov
popl
std
inc
int3
or
mov
mov
jge
ljmp
addr16
shll
add
les
push
lret
jns
out
and
rcl
mov
mov
mov
mov
and
stos
pop
jmp
ret
nop
in
jecxz
test
xchg
jo
xchg
ror
lahf
xchg
or
push
or
mov
lods
or
fwait
adc
callw
sarb
sbb
push
mov
push
jle
push
roll
pop
jo
idivb
sub
insb
pop
dec
stos
ja
fdivr
sbb
cmpsb
cmp
int3
mov
and
add
movsl
xchg
xor
adc
ds
lock
adc
sub
les
xor
cld
cmpb
adc
jge
shr
mov
lret
or
mov
pushf
fisubl
xchg
int3
cmc
push
adc
xchg
pop
pop
rcrb
into
mov
hlt
loope
cwtl
loopne
aam
and
mov
dec
shlb
stos
imul
dec
fistpll
gs
pop
nop
mov
xchg
ja
jecxz
clc
fisttpl
jne
xchg
fiaddl
addb
icebp
push
stos
shlb
dec
arpl
sbb
or
mov
or
gs
mov
aaa
push
adc
add
push
mov
or
jns
in
mov
xchg
subb
mov
dec
push
xchg
repz
push
aad
aad
xchg
or
adc
nop
scas
mov
sbb
cmp
push
mov
jmp
int3
inc
push
nop
xchg
repz
or
mov
jp
sub
loope
pop
sbb
pop
cmp
inc
pop
fbld
sarl
push
or
jmp
cs
pop
enter
xor
ja
and
daa
aaa
sbb
mov
ret
mov
fldl
add
sbb
iret
add
push
inc
in
push
int
sarb
arpl
in
fldt
xchg
je
mov
jns
int3
mov
sbb
loopne
sbb
xor
pop
mov
repz
daa
jbe
rorl
or
inc
jns
aam
fisubrs
je
mov
or
insl
pop
add
mov
adc
add
lods
or
outsb
cmpsb
sub
aas
es
or
outsb
addr16
xlat
sbb
jne
or
ret
or
inc
xor
adc
insb
mov
addr16
adc
and
pop
pop
add
sti
jns
sbb
sub
mov
sub
push
mov
or
and
xor
arpl
jno
push
fs
pop
add
jb
or
mov
icebp
adc
aaa
aam
mov
cmp
popa
sub
cmp
xchg
pop
into
sbb
sbb
adc
push
in
outsb
data16
mov
add
push
pop
dec
das
outsl
xchg
sbb
roll
cmc
rorb
je
mov
sbb
mov
pop
movsl
in
cmc
cmc
pop
mov
inc
test
sub
add
pop
jns
pop
dec
rolb
enter
lcall
imul
sbb
in
je
jbe
sbb
xchg
mov
sahf
scas
dec
std
mov
jmp
clc
das
or
and
mov
jecxz,pt
outsl
cli
fdivrs
push
out
cwtl
test
mov
psubusb
push
in
iret
mov
sbb
daa
xchg
mov
cmp
stc
sbb
cwtl
sbb
rclb
subl
sub
std
popf
mov
in
push
bound
fs
dec
xchg
push
lds
mov
in
lret
add
in
adc
jmp
and
repnz
xchg
cmp
mov
mov
jnp
pop
xchg
and
fisttpl
ljmp
aaa
xor
jae
test
loopne
or
test
and
xor
pop
mov
pop
ds
dec
push
into
shlb
shrb
ds
or
in
adc
daa
pop
dec
inc
pop
inc
mov
test
rcl
push
sbb
pushf
mov
fisttpll
inc
mov
aaa
sub
push
xchg
into
test
test
dec
fldenv
mov
out
sbb
sbb
cmp
enter
xor
adc
mov
mov
mov
dec
fdiv
sub
lea
dec
xor
mov
push
sysexit
arpl
or
add
sbb
stc
xchg
mov
mov
incb
mov
cs
outsl
push
xchg
and
and
ja
mov
addr16
aad
es
adc
jecxz
or
mov
push
stos
xchg
xchg
pusha
push
jge
outsb
mov
inc
push
jo
cmp
cmc
jmp
and
dec
int
sbb
mov
dec
xor
xor
adc
mov
mov
adc
mov
inc
int
mov
lods
test
jns
je
sbb
stos
repz
out
push
and
pop
fsubs
rcl
add
add
push
jno
pop
sub
jmp
sub
outsb
jl
les
adc
mov
popa
mov
add
xor
or
mov
call
add
rcrb
stos
inc
call
rcrb
pusha
jp
jns
int3
rcrl
pop
or
icebp
insl
mov
sbb
push
fnstcw
cmp
cltd
aaa
push
inc
jo
stc
std
adc
adc
outsb
cli
mov
sub
add
cltd
mov
fsubp
pushf
sbbb
pop
push
jae
rolb
cmp
ret
rcl
jp
cmp
stc
mov
out
push
xchg
push
scas
adc
cs
adc
mov
push
fsubrl
push
shll
sub
outsl
mov
and
pusha
push
scas
jo
xchg
lea
jo
aad
mov
fbstp
andb
inc
mov
or
rcll
sub
fldenv
jg
in
pop
xor
ja
inc
and
pop
js
or
xchg
stos
pop
push
int3
jecxz
aaa
pop
cmc
mov
mov
xchg
shll
pop
mov
es
or
jmp
and
mov
in
pop
and
sbb
mov
pop
cwtl
xorps
push
icebp
fcmovne
roll
pusha
jae
jb
and
push
das
clc
sbb
or
into
push
jl
popf
leave
mov
sub
pusha
mov
xchg
repnz
add
cmpsb
adc
out
lods
pop
cmp
jp
in
dec
cltd
mov
incl
aad
enter
or
add
cwtl
in
mull
stos
mov
cld
outsb
lret
push
mov
push
sub
fwait
mov
jbe
pop
xor
sbb
inc
clc
or
je
bound
cs
lret
xchg
outsl
jnp
mov
pop
ljmp
push
xor
cmp
les
xchg
push
scas
inc
add
mov
mov
xor
je
cs
popa
popf
fldl2e
jno
sub
sbb
xchg
cmp
pop
repz
aam
bound
pop
in
sbb
pop
je
fs
push
das
mov
mov
loope
pop
ss
lea
outsl
testb
nop
into
push
scas
int
push
adc
push
popa
es
jecxz
pop
movhps
lret
add
or
or
cmp
stos
sbb
rcll
sbb
or
mov
aad
push
jg
int
rcr
ret
jle
pop
test
loope
loop
jg
ds
or
xchg
and
lock
in
aas
decl
in
fidivrl
lcall
sbb
aas
xchg
ljmp
fidivl
out
test
das
imul
scas
add
int3
ficompl
adc
xor
mov
mov
jns
stos
out
xchg
pop
das
dec
test
cmc
loop
gs
cmp
mov
incb
or
inc
popa
aad
xor
push
sbb
cmp
lods
mov
xchg
mov
insb
mov
add
sahf
pop
lock
inc
lock
incb
in
lods
add
pop
push
push
push
inc
inc
ja
ljmp
test
fstps
fstp
imul
or
pop
jbe
incb
jl
in
std
rcrb
movsb
fwait
aad
add
push
fnstcw
js
adc
decb
cwtl
xchg
jb
jno
ret
in
cmp
call
popa
and
cmp
in
lods
inc
lret
andb
sub
cmpsl
repz
adc
inc
inc
sub
scas
lods
or
hlt
into
cmp
insb
and
lret
add
fildll
xchg
pop
inc
fcomi
in
push
pop
mov
mov
mov
xchg
xor
mov
xor
sub
fdivrl
sbb
cmp
mov
imull
mov
pop
adc
push
push
cmc
dec
sub
push
sbb
fnstsw
sbb
push
shll
daa
lcall
add
mov
xor
sub
imul
js
and
cmp
stos
loopne
stos
outsb
rcrl
inc
sub
xor
mov
mov
add
mov
jg
adc
pop
mov
add
rcrb
stos
mov
jno
cmp
inc
pop
mov
mov
mov
push
repz
sbb
addr16
clc
aaa
hlt
and
push
fildl
stos
aam
sahf
int
dec
dec
popf
jl
pop
sbb
xor
or
test
xor
add
xor
in
fsubrs
aas
rcll
cmpsb
fwait
shlb
fwait
jbe
fdivl
cli
pop
mov
add
xor
mov
mov
jnp
pusha
cmp
movsl
rorl
push
cltd
mov
sbb
xor
add
sub
dec
add
push
jne
ffree
imul
xchg
mov
std
and
fisubrs
push
or
ds
pop
inc
xor
push
jl
jp
or
dec
xchg
mov
repz
outsl
xchg
mov
or
add
push
jb
mov
mov
xchg
inc
push
cmp
mov
dec
jbe
nop
inc
mov
add
repz
cld
arpl
add
test
mov
sub
insl
dec
rcll
test
jmp
icebp
out
mov
jns
or
insl
aaa
pop
add
jg
xor
cmp
sahf
cmc
jnp
mov
push
imul
mov
testb
fcoml
lea
mov
push
pop
inc
inc
mov
pop
stos
and
in
fdivrl
pop
out
mov
push
icebp
cwtl
jmp
stc
ror
test
inc
inc
jmp
and
popf
add
and
insl
lret
mov
dec
js
sbb
leave
sahf
jge
sbb
inc
sahf
or
mov
mov
add
sub
lock
fidivs
rorb
std
nop
xchg
mov
insl
mov
push
and
test
mov
sbb
popa
inc
cmp
mov
add
test
adc
mov
ret
mov
dec
cmc
push
cmpsb
jne
sub
sti
aas
mov
sbb
mov
cli
jge
mov
mov
jmp
aas
dec
inc
sub
xchg
out
xchg
push
adc
cmp
inc
and
nop
int3
jle
or
and
adc
popl
rclb
cmp
movsb
cwtl
or
lock
scas
jne
aam
jne
cmp
inc
sub
cmp
push
cltd
mov
loopne
imul
xor
mov
ficoms
jg
jo
popa
das
test
sub
add
in
dec
inc
mov
sbb
pop
xchg
test
adc
dec
or
scas
std
test
jle
leave
pop
scas
inc
mov
arpl
lahf
mov
inc
mov
rcll
sbbb
rcrl
ja
aaa
test
scas
leave
or
inc
push
mov
lods
lea
mov
pushl
fsubl
leave
dec
dec
push
int3
mull
fisttps
daa
scas
fwait
hlt
cmpsb
and
fidivrl
inc
add
inc
jbe
and
aam
sbb
jmp
push
test
lahf
and
jecxz
jne
add
push
outsl
push
mov
shl
add
stos
test
ret
push
add
ret
sbb
mov
push
aam
aaa
icebp
movsb
xor
jns
push
xor
cld
loope
xchg
and
inc
push
mov
push
sbb
adc
outsb
xchg
ja
jle,pt
mov
push
mov
jmp
xchg
aad
jo
push
inc
sbb
lods
cmp
dec
data16
xchg
jne
adc
mov
leave
fmull
sbb
div
xor
jle
sub
mov
cmp
pop
cs
cmp
or
test
data16
sarl
rcr
and
aas
xor
mov
xor
push
mov
cmp
addr16
jge
mov
fucomp
rcrl
in
push
mov
sub
jmp
adcb
jae
hlt
out
and
adc
xchg
gs
inc
add
jnp
aam
inc
pop
sahf
push
sbb
scas
xorl
int
jecxz
dec
push
lret
lret
sub
popa
adc
es
pop
jecxz
adc
bswap
pop
dec
mov
cmp
add
rolb
mov
lods
aas
adc
push
rorl
lods
clc
int
je
dec
xchg
or
sbb
pop
mov
dec
pusha
mov
dec
loope
cld
jo
ljmp
mov
sbb
arpl
inc
adc
sub
loop
push
pop
rclb
data16
cli
popa
stos
popf
mov
div
or
inc
adc
jl
jl
stos
push
in
int
pop
dec
lods
xchg
pop
and
shlb
jb
test
hlt
cs
xchg
ret
popf
push
shr
pop
jb
daa
jmp
aas
fnstenv
daa
and
rcrl
pop
xorl
fisubl
ja
mov
jns
ret
std
push
or
cli
das
decl
pop
std
mov
sub
cmp
jno
push
mov
pop
dec
dec
daa
push
mov
std
lahf
jbe
lods
enter
mov
xchg
xlat
cmp
lahf
mov
leave
test
mov
push
jne
cmp
mov
mov
mov
cmp
add
faddl
push
sarb
xlat
mov
push
mov
jbe
xor
or
outsb
xchg
add
jb
mov
call
out
ror
sbb
movsl
mov
test
and
mov
mov
fs
mov
xor
stc
sub
xor
out
aam
push
sti
fnstcw
lret
cwtl
pop
loopne
lds
test
inc
fisttps
push
mov
mov
shll
aas
mov
mov
push
xor
xlat
or
in
repz
pop
pop
je
insl
xor
addr16
jo
jb
jns
mov
cmovo
aaa
fcomps
loope
sti
jne
or
jge
fidivrl
insb
rolb
mov
inc
mov
mov
or
fadds
outsl
push
loop
cmc
xchg
jno
push
pop
int
adc
scas
in
pop
adc
push
gs
adc
jo
aad
sub
jnp
push
popa
fistl
or
cwtl
pop
aas
jno
push
xor
dec
sub
lds
shlb
lods
dec
jb
rorb
mov
mov
mov
pop
sub
and
out
inc
cs
cwtl
fistps
add
pop
outsb
movl
cmpsl
inc
repz
adc
sbb
ret
xchg
leave
stos
iret
adc
xor
loope
jmp
xchg
push
push
test
pop
jmp
or
test
vpcmpgtd
inc
pop
lods
lcall
test
xor
xchg
cld
lcall
mov
mov
sbb
inc
lock
xlat
dec
out
adc
loopne
dec
mov
xor
pop
xor
push
jae
and
mov
and
sub
ret
testb
pop
jl
std
outsl
push
gs
popf
pop
into
xor
push
push
jb
call
dec
push
lods
dec
sarl
fucom
outsl
adc
jl
out
and
lcall
pushf
jae
loope
ds
cmp
pushf
mov
inc
xchg
lods
pop
sti
add
sti
push
fcomip
cmp
jbe
mov
dec
cmp
mov
jg
sbb
and
jno
mov
xchg
fcmovnu
dec
dec
ljmp
cmp
sub
dec
cmpb
call
xchg
xorl
mov
mov
xchg
lock
add
sbbl
pusha
int
mov
push
mov
cmpsl
sbb
pop
inc
iret
leave
add
bound
dec
push
inc
leave
sti
pop
out
sahf
mov
jecxz
icebp
testb
icebp
pusha
push
xor
test
lea
fadd
add
dec
or
jns
or
aaa
jae
dec
sbb
adc
mov
sub
stc
adc
lods
repnz
fistps
daa
push
mov
jmp
sbb
gs
ret
test
in
xor
inc
js
mov
sbb
adcl
test
pop
pop
jns
mov
and
mov
nop
add
add
mov
sub
pop
push
sti
xor
in
xchg
daa
dec
mov
das
add
pop
xchg
loop
popa
inc
mov
cwtl
jge
pop
jne
bnd
mov
test
mov
jg
int3
pusha
cmpsb
in
aas
push
sbb
data16
fsubrp
sbb
push
jae
sub
je
mov
mov
fnsave
dec
and
nop
das
imul
xchg
jbe
mov
out
cs
imul
int
and
das
fnstcw
sarb
mov
xchg
jb
xor
jecxz
sbb
iret
xor
adc
cmp
movsb
andl
mov
or
jmp
and
jmp
mov
or
inc
shrb
sbb
xchg
popf
jns
inc
mov
dec
ret
arpl
inc
loopne
std
push
pushf
fs
jl
xor
test
rcll
sbb
rcrb
pop
mov
xchg
int
sahf
xor
push
xchg
jp
mov
xchg
jmp
ret
jmp
sub
mov
imul
shlb
xchg
xchg
pop
xchg
sub
mov
rorl
xor
mov
dec
adc
jne
js
ljmp
add
sahf
push
push
dec
cmp
cmp
psllw
fisubs
jg
mov
add
xchg
aad
in
pop
decb
mov
test
and
stos
push
and
addb
xchg
or
fsubl
fbld
es
push
mov
pop
jle
pusha
jg
xchg
dec
lods
mov
jecxz
pop
cmp
lret
in
sbb
sbb
loop
fidivs
add
pop
xor
add
dec
dec
push
mov
cmc
std
sbb
or
jmp
or
xchg
adc
test
bound
out
mov
mov
stos
pop
test
inc
lea
std
sahf
mov
pop
outsb
dec
test
xchg
stc
cmp
adc
jecxz
mov
shlb
pop
dec
pop
mov
test
pop
push
movsl
rcrl
enter
mov
fnsave
call
imul
jle
repz
mov
pop
fs
in
push
loope
sub
dec
outsb
and
mov
push
rep
rolb
cmp
fildl
add
sub
fidivl
mov
pop
pop
out
adc
push
push
mov
inc
ficoms
jb
pushf
cli
push
sarb
dec
inc
or
repz
inc
sub
mov
gs
pop
aaa
icebp
icebp
xchg
cmp
fcomps
push
enter
jmp
sub
inc
jns
mov
aam
test
imul
les
pop
repz
cmpl
push
shrb
sub
push
je
movsl
adc
mov
clc
scas
icebp
sbb
and
les
inc
push
mov
cmp
mov
js
xor
mov
add
mov
sbb
subb
jae
xor
int3
jbe
adcl
rcl
enter
icebp
dec
and
lea
push
lock
imul
mov
jo
cmc
mov
aaa
lds
mov
fdivs
fs
int
push
ret
repnz
xor
or
push
xor
pop
popa
test
ret
ret
mov
or
aas
int
stc
int3
xor
or
push
data16
gs
adc
mov
jnp
addr16
inc
into
mov
cmp
xor
xchg
lods
in
pop
ja
push
lret
ss
jmp
mov
push
std
cmp
jp
imul
ret
sbb
rol
sub
insl
sub
and
push
inc
mov
push
imull
rorl
jo
or
sahf
fildll
in
push
or
rorb
scas
and
lods
fcomps
pop
and
pop
idivb
bnd
ljmp
arpl
lahf
ljmp
sub
int
sbb
scas
mov
pop
add
sbb
orl
jo
mov
or
mov
js
movsl
mov
aas
push
mov
call
xchg
mov
cmp
in
aaa
insb
stos
in
out
cli
pop
inc
fcoms
inc
stc
inc
fs
xor
mov
add
sbb
fisubl
pop
sbb
int3
int3
call
std
adc
xchg
lret
or
adc
ret
xchg
popf
dec
and
push
sub
aam
sub
adc
push
into
and
mov
sbb
mov
lock
and
dec
aaa
aam
test
jb
scas
rcrl
addr16
or
xchg
test
xchg
xor
cmp
scas
push
adc
mull
sahf
inc
mov
inc
std
fstpt
jge
sub
dec
out
inc
orb
jecxz
cmp
fsub
push
sub
jecxz
enter
mov
xor
rorl
lods
mov
dec
ljmp
nop
pusha
bound
cwtl
fxch
jno
jge
xor
cmpsb
mov
mov
mov
xor
add
hlt
dec
pushf
je
sbb
test
xchg
mov
outsl
mov
xor
push
jge
jecxz
bound
fwait
lods
jns
scas
arpl
fwait
aas
add
pop
cmp
mov
mulb
cwtl
xor
addb
inc
cmp
ljmp
outsb
pop
xchg
jno
jo
or
cmc
mov
sub
jb
sti
sbb
fsubr
fldl
or
xchg
sbb
fistps
pop
inc
adc
xor
sahf
xlat
inc
pushf
loop
xlat
xchg
adc
int3
inc
ss
movsl
cmpsb
cld
sub
or
js
xchg
sbb
fbstp
xor
sbb
int
jg
shl
addr16
insl
sub
xchg
mov
push
and
jb
scas
xchg
xchg
dec
pop
paddsb
mov
jge
fimull
push
sbb
and
lret
dec
pop
sti
lretw
push
repnz
pop
les
jp
cmp
xchg
xlat
testb
mov
sub
sbbl
popa
cmp
push
loope
dec
lods
or
insb
cmpsl
repz
test
insl
mov
std
outsl
bound
xchg
cmpsl
jno
and
xchg
inc
dec
inc
int3
sub
out
or
adc
enter
insl
movsb
fstl
or
push
xchg
inc
das
popf
aaa
sub
cwtl
lods
daa
push
adc
mov
and
cmp
cmp
mov
push
loop
in
addr16
and
loope
sti
inc
mov
sbb
shrb
int
xor
pop
jmp
mov
cmp
jnp
mov
or
add
popa
rol
inc
cmp
or
outsb
into
push
in
mov
aaa
int3
mov
push
cltd
addr16
mov
jecxz
sub
sbb
xchg
std
or
dec
shll
jns
scas
notl
mov
imul
sti
scas
shlb
add
lcall
push
movsl
std
scas
sbb
div
in
adc
xor
inc
dec
cmpsl
mov
sahf
add
jne
xchg
call
test
jns
int
inc
pop
sarl
xchg
les
bound
mov
fstl
cmp
pop
test
mov
mov
mov
mov
hlt
adc
add
fcoms
pop
orb
lret
sub
sub
rcrl
dec
xchg
paddusw
nop
icebp
shll
mov
mov
xchg
cmp
in
decb
dec
lret
cmpsb
jns
sub
or
xchg
movsb
push
jp
and
xchg
inc
mov
add
jp
es
out
mov
subb
fistl
push
xchg
and
dec
xlat
imul
jmp
sbb
mov
inc
clc
lods
pop
lret
cli
call
push
pop
mov
fdivs
mov
mov
jb
sub
adc
sbb
mov
add
xchg
jno
mov
mov
jnp
ljmp
repz
ja
mov
fsubr
cmp
push
adc
cmp
sub
rcl
in
out
jmp
rcrb
jno
jle
int
push
addr16
jecxz
popa
push
mov
push
dec
in
fsubl
fidivs
sbbl
cs
in
ret
shlb
mov
fadd
and
mov
outsl
inc
push
fs
fs
repnz
pop
sub
leave
lret
sti
stos
add
inc
or
cli
jne
inc
pop
cmpsb
lock
or
xchg
xchg
xchg
add
mov
sbb
aaa
in
sar
imull
nop
xor
out
pop
es
pop
out
and
lahf
aas
ss
lds
push
shrl
test
inc
movsl
xor
cmp
daa
or
jecxz
sti
mov
fists
enter
cmpb
mov
sbb
push
test
push
xor
jbe
cmp
adc
mov
enter
cmp
lret
imul
jg
pop
test
mov
loopne
mov
ss
les
cmp
hlt
dec
lea
lods
in
adc
outsl
out
pop
push
push
mov
jmp
dec
add
mov
out
jp
mov
lea
fstpt
cld
nop
inc
push
movsb
sub
and
cmp
mov
movsl
out
ret
or
and
push
addl
ret
cmc
leave
clc
push
addr16
nop
sbb
fcoml
jecxz
mov
shll
pop
cmp
lret
int
mov
xchg
mov
insb
mov
std
add
std
dec
lea
popa
and
in
lret
xchg
sub
scas
leave
stos
sbb
xor
push
add
jmp
pop
sub
xor
mov
dec
mov
icebp
sub
lcall
sub
or
add
xor
lahf
sub
mov
jae
dec
jl
leave
test
mov
aaa
xchg
cmp
aad
out
push
xchg
inc
mov
ljmp
das
add
and
in
mov
scas
xor
cltd
lret
test
inc
daa
sbb
outsl
addl
mov
out
pop
lds
sub
pop
out
ret
leave
xchg
jo
lret
arpl
mov
mov
push
push
xor
mov
adc
popf
add
out
xor
ret
cs
outsb
sbb
xchg
loope
fdivrs
js
arpl
push
mov
rcrb
adc
jnp
jecxz
pop
sarb
dec
int
out
adcl
dec
lret
fstps
inc
iret
cli
jle
aad
jle
ja
mov
adcb
xchg
pusha
outsl
pop
cltd
lret
mov
popa
jbe
decl
inc
push
in
pop
mov
dec
rcll
push
or
or
jmp
lea
mov
mov
sbb
push
lods
xor
pop
popa
xchg
test
cmp
jp
ficomps
bound
jl
or
xor
mov
cltd
and
adc
out
fsub
xchg
cmpsl
push
adc
int3
pop
subb
sub
clc
in
inc
mov
imul
xchg
shl
sar
lret
jg
stos
xchg
addr16
leave
dec
mov
dec
std
sub
fidivs
push
sub
pop
mov
add
pop
fildll
int3
jae
jl
clc
jne
sbb
cwtl
mov
icebp
mov
fnsave
or
sbb
cs
jo
dec
setbe
fnstenv
ljmp
outsl
dec
pop
dec
ja
cmpl
add
in
hlt
jmp
lods
jns
jno
mov
je
jno
or
lahf
and
adcb
andl
inc
and
push
les
add
cs
jle
outsb
je
pop
xchg
fists
out
pop
pop
sbb
jae
stos
xchg
push
ret
mov
mov
lret
push
xchg
out
cmp
popf
stc
pop
test
shll
jmp
xchg
sub
movsb
sub
popf
push
ret
mov
and
add
cli
mov
int3
ret
lcall
cld
test
mov
cmp
movl
imul
xchg
test
insl
jecxz
sub
sub
and
cs
or
mov
or
fldl
outsl
jg
jnp
mov
xor
rcrb
cmp
out
cmpl
imul
mov
stc
repnz
lods
dec
dec
adc
mov
fsubp
lcall
daa
add
mov
inc
xor
int3
push
in
rcrl
fcompl
adc
je
sbb
in
daa
mov
mov
rcrb
add
adc
sbb
sub
and
popf
push
aaa
andb
xor
xchg
lods
jge
mov
cmp
mov
and
push
aad
jge
and
adc
push
lods
adc
or
lret
push
or
cwtl
dec
sub
shlb
ja
in
scas
loop
mov
pop
add
mov
cmp
invlpg
sub
jl
dec
in
mov
sub
into
adc
mov
shll
fwait
rclb
xor
sbb
jge
mov
loop
cmpsb
and
fisubs
dec
jmp
cmp
lret
mov
xorb
in
icebp
lock
xchg
lods
daa
popa
mov
xchg
mov
cs
repnz
inc
imulb
lds
push
pop
dec
repnz
incl
mov
pop
divb
fwait
lock
mov
mov
push
jmp
jge
ret
push
mov
out
mov
and
aaa
push
pop
idivb
jp
mov
dec
dec
or
push
jae
xchg
fucomi
inc
push
fmull
xchg
in
fs
push
daa
sahf
jle
clc
orb
rorl
clc
insb
push
push
shrb
jnp
ss
pop
add
xchg
imul
aam
mov
aad
or
arpl
sub
aam
dec
mov
sub
inc
stos
pop
adc
lret
pop
rol
mov
mov
xchg
fwait
jle
add
inc
mov
mov
fimuls
and
lcall
insl
adc
jno
mov
sti
mov
leave
sbb
push
mov
dec
sub
mov
jle
or
pop
push
adc
pop
cli
push
adc
or
mov
jns
imul
inc
jg
fstps
lret
shrb
daa
adc
and
fistpl
add
xor
sbb
push
cmpsb
sub
sbb
rcr
xor
nop
cmc
and
sbb
clc
in
fisubrl
repz
pop
mov
adcb
int3
bound
adc
mov
lret
push
mov
pop
and
mov
add
test
inc
rcr
mov
pop
push
sbb
lcall
pop
dec
inc
hlt
fistps
fcoms
mov
ret
cwtl
fnstcw
scas
out
push
inc
push
out
inc
or
outsb
cwtl
mov
or
mov
push
test
testb
into
push
mov
xchg
lock
test
cmpsl
enter
mov
jg
jnp
xchg
push
inc
mov
push
push
mov
outsl
sub
mov
pop
xchg
cli
and
clc
cmp
sub
in
stos
mov
adc
mov
xchg
add
outsl
lcall
pop
push
jne
mov
lahf
fnstenv
mov
scas
dec
shll
jno
push
and
out
pop
mov
nop
shrb
mov
xor
cltd
lret
lea
adc
out
sbb
and
and
scas
popa
lret
rcll
push
or
mov
cmpb
xchg
movsb
mov
sbb
adc
stos
fbld
out
das
aaa
sub
jo
loope
jmp
loope
mov
out
imul
xchg
int
dec
hlt
ret
fiadds
and
add
and
sub
cmp
in
in
and
xor
pop
pop
fmulp
inc
jp
push
repnz
and
mov
in
sub
xor
dec
hlt
push
inc
imul
fists
ds
mov
or
mov
outsb
cs
xchg
scas
cmpl
dec
popa
push
push
lock
xchg
dec
jns
mov
lahf
enter
dec
rorb
xchg
push
in
lods
lods
push
outsb
out
sbb
rcrb
stc
insl
pop
movsl
fisttpll
xchg
inc
mov
mov
outsl
sbb
gs
icebp
sub
mov
lods
shrl
cld
mov
mov
sub
mov
cmp
sbb
mov
mov
rcrl
jnp
mov
sub
mov
push
mov
mov
inc
mov
cmp
push
std
xchg
ljmp
cltd
mov
in
pop
inc
mov
fisttpl
xlat
or
or
mulb
xor
sbb
inc
icebp
enter
movsl
cwtl
or
xchg
xchg
movsl
sub
daa
inc
adc
dec
xor
test
or
test
adc
movsl
enter
gs
arpl
ljmp
push
xor
cmp
cli
sub
test
lret
sahf
xlat
or
inc
xlat
pop
mov
inc
das
cmp
and
pushf
cmp
pop
lahf
xor
es
push
out
jne
cld
cmp
sub
cmp
ss
jnp
ja
push
cmpsb
dec
ret
dec
or
scas
out
subl
into
movsb
xchg
and
sahf
adc
stc
mov
cmc
ds
flds
pop
inc
movsl
or
or
lret
pop
jp
fmuls
pop
pop
sbb
les
push
cmp
ja
jno
mov
dec
adc
das
push
pop
imul
js
sbb
cmp
cld
in
pusha
aas
pop
xor
fists
cmp
cmp
mov
sbb
nop
fbstp
lcall
idivl
out
inc
pushf
cltd
dec
mov
xlat
lock
adc
insb
test
or
or
sub
lock
test
add
mov
in
ja
xor
xchg
mov
add
adc
jnp
mov
jb
hlt
sbb
fadds
add
inc
pop
repnz
mov
mov
sbb
add
bound
add
inc
ficompl
enter
insl
enter
clc
xchg
push
rcl
icebp
xor
aas
xchg
sahf
daa
jmp
inc
fs
pop
outsl
dec
pop
rcrb
mov
or
dec
xor
dec
jmp
movsl
leave
daa
in
or
and
mov
lret
shr
push
dec
pop
lret
xor
repz
dec
xor
fadd
cwtl
popa
add
adc
sbb
mov
mov
loope
out
fcoms
adcb
jnp
push
and
adc
inc
xor
adc
or
popf
pop
xchg
cmpsb
icebp
sbb
sub
fisttpl
jae
mov
inc
adc
xor
addl
fldl
mov
popa
cmp
ret
jp
jnp
xor
ds
in
out
dec
mov
nop
cld
push
daa
or
pop
test
xchg
jmp
xchg
ljmp
xchg
jo
jge
xor
and
addr16
or
imul
mov
cmp
scas
frstor
push
mov
adc
cmp
cs
fisttpll
cmp
jg
pop
mov
rorb
jbe
scas
xchg
push
idivb
push
jns
jbe
in
mov
pop
mov
ret
fisttpll
and
sbb
cmp
cwtl
and
cwtl
cltd
test
mov
out
adcl
and
cli
repnz
mov
or
adc
add
outsb
xor
in
inc
and
popf
das
icebp
notl
std
orl
xchg
push
bound
lahf
insb
testl
out
jo
das
adc
mov
ret
fcompl
lock
add
stos
decl
aam
outsl
repnz
push
outsl
test
inc
outsl
je
inc
pop
test
ret
scas
cmp
mov
and
fbld
dec
sub
jb
and
and
inc
jb
lret
xchg
cli
adc
pop
loop
jecxz
lea
mov
call
dec
sbb
pop
aam
imul
jb
sub
mov
cmc
push
int3
fists
fs
clc
sbb
xor
lods
fsub
lret
jmp
pushf
mov
jmp
cmp
pop
lds
out
push
sti
mov
daa
mov
or
leave
dec
into
ljmp
push
mov
je
hlt
outsb
into
stos
scas
ds
pusha
or
shl
das
call
mov
mov
mull
mov
or
jp
mov
imul
into
jne
subb
push
repz
aad
mov
pop
popa
scas
in
ss
test
pop
dec
call
ja
loope
mov
bound
popa
push
mov
push
sub
and
pop
fdivrs
aas
xchg
enter
add
pavgb
adc
mov
add
sbb
jb
test
loope
inc
mov
jne
out
cltd
jb
adc
xchg
mov
jge
adc
adc
cmp
int
jle
movsl
aam
dec
shrl
jno
pop
cmp
xchg
mov
cltd
and
xor
xor
jb
stc
dec
bound
ss
call
cs
jg
adc
cmp
or
jle
daa
dec
xchg
or
mov
out
sti
cmpsl
loop
mov
inc
sub
sahf
flds
xchg
test
mov
dec
and
pop
cmpsl
cmc
outsl
mov
pushf
inc
mov
lret
shrb
pop
cli
ret
mov
jmp
int3
jge
cmp
push
fcomip
dec
xor
sbb
pop
mov
mov
addr16
sarb
sub
inc
sbb
mov
je
add
call
sub
loopne
cltd
je
clc
xor
mul
repz
call
adc
fists
inc
shrl
cmp
repnz
and
fstpl
cmpsb
pop
and
sbb
sarl
icebp
add
jmp
insl
fildl
movsl
push
and
rol
imul
mov
mov
cltd
and
or
cmpsl
outsb
mov
fsubp
mov
ficoms
or
out
xchg
pushf
xchg
pop
xor
mov
movsl
dec
mov
daa
rolb
jb
mov
add
jbe
sub
icebp
loope
sahf
outsl
mov
cli
cli
fldt
mov
jmp
mov
mov
pop
scas
xor
sbb
sub
mov
add
fstpt
call
sbbl
adc
insl
mov
cs
dec
fldl
in
jne
shll
in
int3
gs
sub
xchg
clc
xchg
out
adc
or
aas
and
stos
pop
mov
rcl
mov
xor
push
mov
cs
outsb
bnd
mov
rol
mov
and
in
cmp
daa
add
pop
fdivs
aas
jg
and
dec
xor
add
pusha
dec
rcll
push
mov
mov
out
sbb
stos
adc
dec
add
cmpsl
push
inc
aad
movsb
add
mov
into
pop
xor
push
mov
push
fidivl
xor
jae
sub
data16
mov
or
call
jb
xor
or
int
xor
ss
leave
xor
aam
enter
je
ljmp
insb
xchg
in
fcompl
ja
inc
movsl
dec
test
dec
ja
inc
sub
push
or
or
fs
int
add
out
outsb
test
cmpsb
fs
adc
cld
sahf
insb
xor
xchg
lock
mov
jns
mov
dec
movsl
push
or
cli
xchg
fildll
jns
jge
out
mov
adc
imul
pop
jge
std
mov
cmp
lods
lcall
and
push
or
shr
repnz
mov
jp
fstpl
les
icebp
xchg
dec
fdivs
xor
pop
mov
jo
call
sbb
pop
pop
pop
pusha
popf
imul
test
insl
lret
push
mov
sub
jge
mov
jecxz
xor
cltd
outsb
sub
xor
sub
out
and
adcb
iret
cltd
insw
or
dec
mov
int3
bound
sub
ss
sub
sub
sbb
mov
cmc
in
add
loope
scas
roll
xchg
fistpl
adc
add
mov
jle
rorb
test
cld
sub
jecxz
jecxz
outsb
jnp
dec
lcall
inc
daa
sbb
mov
mov
cmpps
clc
ret
fwait
push
out
sub
jbe
mov
scas
sarl
sbb
test
shll
jae
loop
out
int3
mov
arpl
sbbl
inc
push
stc
cwtl
mov
sbb
js
fadds
out
pop
imul
call
out
mov
inc
fsubrl
sub
push
jg
lret
cmpsl
test
mov
bound
add
loop
lods
inc
cld
test
pop
mov
rol
pop
scas
test
test
pop
insl
pusha
std
cmc
jge
out
mov
pop
xorb
mov
push
loop
add
ss
dec
hlt
repnz
cmp
aaa
mov
pop
sub
cwtl
pop
imul
adcb
scas
jae
aad
add
dec
push
pop
fwait
iret
inc
ret
xor
mov
movsl
js
in
xlat
nop
gs
adc
jns
fsts
dec
sbb
xor
push
push
adc
mov
add
jne
adc
movsb
cli
mov
notl
cmp
xor
pop
fcmove
push
loop
ret
xchg
mov
jecxz
in
mov
push
cmp
and
push
pop
or
jmp
sbb
xchg
rcrb
and
jb
inc
inc
arpl
flds
rcl
push
fsubrs
hlt
loop
cmp
insl
lret
or
add
or
xchg
pop
push
ljmp
fcomp
outsl
test
out
inc
xorl
dec
sub
jo
push
push
lret
jmp
xor
loopne
loopne
mov
std
clc
dec
xorb
hlt
aaa
test
inc
adc
enter
or
push
popf
mov
call
push
addl
mov
cmpsb
jb
ja
push
mov
mov
std
add
pop
mov
popa
test
cmp
push
mov
jle
xchg
and
in
scas
add
and
jg
inc
cli
jno
cld
add
cmpsl
pop
pop
arpl
shlb
faddl
xor
mov
jns
mov
mov
xor
cmp
mov
shll
fchs
xor
mov
aas
popa
dec
das
push
adc
push
xor
jle
lret
mov
ret
insb
mov
pop
cmp
xor
and
in
jae
int
test
repz
ss
jl
or
cltd
addb
in
ja
push
push
je
adc
dec
negl
leave
push
orb
in
ret
loope
lock
xchg
jl
xorl
add
imul
xchg
out
test
inc
or
mov
pop
scas
and
pop
pop
jns
leave
test
out
adc
bound
and
js
add
sarl
push
int3
mov
in
mov
or
pushf
mov
mov
mov
cmpsb
or
push
add
jl
push
adc
lods
adc
cli
divl
jnp
xchg
out
arpl
sbb
fildll
pop
std
adc
adc
mov
cmp
repnz
movsb
mov
and
mov
mov
js
jle
jno
cmc
out
addr16
rcrl
lods
cmpsl
divl
add
add
sub
popl
dec
daa
and
jmp
les
les
out
lahf
pop
add
das
mov
push
dec
push
adc
mov
pop
addl
scas
cmp
sbb
jnp
in
outsl
dec
dec
daa
ljmp
xorb
shrb
pop
adc
lods
sti
outsb
testb
loopne
jecxz
xchg
add
loopne
sub
adc
push
mov
push
xor
mov
mov
out
js
inc
cmp
pop
dec
aad
int3
xor
and
pop
into
xlat
xchg
gs
in
leave
xchg
js
insb
sti
cmp
fucomp
xor
outsb
mov
fsub
inc
or
and
sbb
insb
imul
dec
mov
andl
movb
xor
xor
in
ds
pop
fwait
roll
xchg
cld
cmp
push
pop
push
rcll
es
decl
jne
jp
ror
movsb
ljmp
cmp
sbbb
inc
sub
inc
aam
ja
sbb
icebp
outsb
cmp
dec
mov
je
jnp
leave
imul
movsb
sub
je
push
ds
xchg
ds
aad
into
in
in
dec
test
mov
pop
lea
adc
ljmp
mov
pop
adc
xchg
fnsave
or
lods
push
sahf
dec
mov
loopne
shrb
ss
inc
mov
or
lcall
not
sub
loope
daa
xor
xor
sub
in
sub
push
pop
adc
pop
ret
leave
inc
adc
add
sbb
inc
ret
xor
xchg
add
xchg
or
mov
xor
sub
cmp
adc
xchg
jb
push
mov
and
insb
inc
les
lahf
inc
ret
rcr
sbbl
sub
dec
ret
jle
out
pop
mov
cmp
mov
xchg
insb
out
fldenv
adc
and
push
mov
xchg
pop
xchg
xchg
xor
or
pop
stc
lahf
int3
sbb
outsl
les
cmpsb
push
or
sub
outsb
cmp
sbb
cmc
xchg
sbb
mov
push
mov
add
xchg
imul
aaa
jo
xchg
or
mov
mov
lods
fucomp
push
insl
mov
xchg
jl
out
cltd
add
push
js
pop
ficomps
mov
imul
loop
jle
cmpb
out
lea
add
push
cmp
imul
or
repnz
mov
jl
nop
pop
in
outsl
xor
lret
or
dec
shlb
add
push
mov
cli
inc
mov
cmp
in
jb
push
lods
pop
notb
cmp
or
fisubl
xchg
pop
jmp
cmpsl
and
out
add
pusha
cmpsb
push
lods
cmp
in
inc
dec
mov
aam
and
push
popf
bound
jns
cmp
and
jno
ret
enter
and
lds
cwtl
arpl
in
ss
scas
scas
cmp
bound
out
pop
addl
aas
or
cmpb
jmp
cmp
ret
adc
xchg
pop
add
divl
lahf
jns
aas
ds
movsb
jae
sub
outsl
and
int
inc
mov
cmp
repnz
out
adc
lock
std
pop
mov
dec
stos
ficompl
test
adc
xorl
add
stc
add
pop
aas
mov
popa
cmp
ficompl
jl
js
fstpl
pop
shll
mov
sti
test
shll
dec
out
mov
jmp
xor
cmc
fnstenv
lahf
mov
cmp
sub
add
mov
xchg
sbb
in
push
pop
dec
in
xor
iret
out
dec
es
dec
xorl
and
lcall
ljmp
mov
hlt
dec
sub
into
push
pop
fwait
push
sbb
test
cmp
enter
in
jno
aam
xor
cli
js
mov
mov
sbb
ret
and
stc
cmp
push
jecxz
cmp
push
xchg
xchg
xor
cmp
mov
push
jecxz
aaa
int
rol
out
popf
xchg
mov
sub
bnd
lret
mov
jl
pop
loopne
cwtl
shll
push
mov
bound
test
int3
imul
pop
pusha
lea
jp
shrb
adc
pop
rolb
sbb
add
inc
adc
push
and
dec
fistl
xchg
dec
mov
rolb
cmp
cmpb
cmc
sbb
jbe
repz
fwait
push
iret
and
fwait
dec
push
sbb
dec
or
sub
push
addr16
inc
lea
mov
dec
movsl
scas
adc
adc
loop,pn
and
mov
loopne
mov
and
ret
les
addb
ret
in
test
mov
ja
lods
pop
xchg
clc
lret
in
jnp
pop
cmpsb
or
fsubrs
fisttps
pop
xchg
sub
dec
fidivrl
cld
out
and
sbb
pop
std
call
imul
xchg
mov
sbb
jge
addb
mov
or
push
out
xor
sbb
jg
mov
inc
orb
add
int3
fcomps
jno
out
pop
mov
cltd
jl
shrb
sti
xchg
mov
daa
rcrb
lods
mov
mov
push
ss
mov
jne
into
pusha
mov
testb
and
dec
outsl
ljmp
and
repz
in
and
repz
push
pop
test
mov
rolb
outsl
dec
add
sub
add
stos
sbb
jnp
fst
pop
push
in
fiaddl
pop
ljmp
movb
push
xor
lods
lock
xor
inc
or
xchg
in
mov
push
repz
pop
fcompl
add
ljmp
mov
push
push
mov
aad
faddl
or
fldl
adc
pop
loopne
and
pop
sbb
xchg
jns
add
cmp
cmp
mov
xor
aam
push
mov
sub
sbb
dec
loopne
inc
aas
xchg
test
cmc
in
push
add
adc
push
in
cltd
mov
je
dec
or
shlb
mov
mov
dec
add
sub
cmp
jle
test
dec
loope
pop
rcrl
xchg
xorb
shrl
fldl
das
stos
ja
sbb
pop
fst
pop
fistpll
mov
add
cmp
popa
mov
movsb
test
dec
int
movsl
lret
add
cli
dec
sub
scas
aaa
jge
inc
imull
fwait
or
adc
int3
pop
cli
mov
scas
jle
sub
fsts
scas
or
or
pop
icebp
lds
das
or
in
sarb
push
movsl
scas
popf
in
sbb
pushf
fwait
ljmp
jmp
sub
mov
ret
xlat
int3
sub
mov
or
mov
lds
lea
sbb
sbb
std
xor
lods
dec
mov
and
mov
repz
push
lock
mov
scas
popf
lahf
add
addr16
mov
nop
jne
jmp
sbb
addl
testl
scas
cmp
ret
mov
cmc
arpl
int3
xor
dec
sbb
rolb
adc
jp
jl
sub
push
cli
fucomi
ljmp
out
mov
push
inc
adc
out
pop
ret
je
or
test
insl
adc
xchg
fldl
and
test
into
dec
mov
or
inc
mov
sub
dec
push
call
loope
lock
jg
lahf
jecxz
jl
adc
and
push
jns
repz
cmp
outsb
mov
sti
sbb
and
out
les
pop
jnp
icebp
ss
mov
or
cmc
dec
mov
sub
dec
into
mov
sub
arpl
adc
stos
push
imul
mov
xor
or
and
mov
jns
sbb
test
cmp
nop
loop
mov
xchg
addb
lods
mov
pop
icebp
jl
daa
popf
daa
fsubrl
pop
jne
sbb
loopne
push
addl
ror
out
or
or
out
add
inc
xchg
repnz
aad
out
shll
push
add
addb
adc
dec
dec
pop
xchg
sbb
outsb
jp
sbb
fs
pop
lock
stos
mov
clc
loopne
or
jp
scas
pop
popa
dec
and
xchg
dec
cmpsb
jae
lds
outsl
idivl
hlt
hlt
mov
jno
pop
mov
in
mov
inc
out
ret
sbb
rorb
xchg
out
dec
fcom
imul
lods
jbe
popf
mov
je
cmpsb
pusha
add
pop
inc
pop
test
dec
fs
inc
ljmp
and
sub
shll
or
pause
idivl
and
adc
loop
lods
filds
inc
sub
xchg
fstps
cmc
sub
and
jae
xchg
imul
xchg
jnp
or
jnp
mov
inc
out
int3
mov
add
pop
dec
in
insb
or
mov
ret
pop
test
enter
in
pop
dec
pop
cmpsb
pop
xchg
mov
fwait
pop
stos
add
int3
sub
mov
and
sub
hlt
xchg
outsl
jg
subb
pop
or
cmc
pop
iret
pop
cmp
cmp
mov
in
pop
xor
xor
or
shlb
cmp
rorl
mov
lods
cmpsl
adc
push
mov
sahf
lcall
arpl
inc
faddl
cmc
mov
std
cmp
cmp
jl
push
sbb
pop
mov
mov
andb
mov
into
adc
lods
jecxz
sub
sbb
dec
in
inc
fmull
dec
inc
mov
lock
cmpb
adc
cmp
fidivrl
rorl
imulb
outsb
mov
mov
xchg
mov
loope
sub
daa
aaa
inc
xchg
leave
add
std
lret
lcall
add
pop
mov
cltd
cmpsb
adc
cmp
push
sbb
imul
ficompl
sub
mov
push
insb
sarl
jb
scas
les
and
js
and
xchg
mov
sbb
pop
in
inc
fcomps
insb
out
lret
test
sub
cmp
adc
push
out
xchg
jp
stc
fcoml
aaa
stos
push
popf
pop
in
sbb
ds
adc
mov
xchg
das
mov
dec
xor
enter
call
lret
fisttpll
xor
jbe
mov
cmp
add
aad
mov
les
xor
mov
mov
add
call
push
xchg
scas
mov
pop
mov
repz
and
adc
mov
stos
pop
cs
int
pop
pop
mov
jo
in
in
imul
aas
sti
imul
cmpsl
and
jge
push
pop
jmp
mov
pop
ret
jmp
sbb
pop
pop
call
push
test
popf
dec
jo
inc
cmp
dec
shlb
cmpsl
mov
pop
js,pn
cmp
repnz
bound
dec
jnp
sub
scas
dec
stos
jne
mov
orl
mov
cli
inc
pop
sbb
movsl
jb
mov
xor
cmp
xchg
add
push
mov
inc
outsl
inc
adc
pushf
or
sbb
mov
pop
int
and
mov
pushf
push
insl
push
jnp
inc
orb
cmpb
ljmp
nopl
mov
iret
lret
ss
push
lret
jmp
aam
lahf
and
and
lods
pop
push
or
lcall
push
andl
xor
or
cmp
sahf
cmp
and
jp
loop
xor
loope
push
insb
mov
mov
push
inc
xorb
out
loope
sub
dec
addl
jle
fsub
sbb
in
icebp
das
loope
xchg
fcmove
sbb
mov
xchg
sahf
pop
push
test
ljmp
lea
mov
imul
inc
stc
push
inc
test
jne
adc
jl
mov
out
mov
mov
addr16
push
jp
cmp
sub
lret
add
dec
dec
rcll
hlt
dec
dec
mov
fucom
cmp
fisttpl
mov
mov
push
in
daa
cli
rol
and
pop
out
adc
lea
pop
popa
cmpsb
xchg
ficomps
dec
and
push
cli
sub
jl
xchg
aad
mov
or
mov
dec
dec
or
into
es
xchg
rorl
aad
add
sub
clc
push
fwait
pop
mov
add
xchg
pop
in
or
stos
test
or
lods
mov
pxor
ja
and
adc
inc
mov
sub
fwait
lret
je
sti
dec
arpl
xchg
enter
inc
lods
btr
mov
cmp
push
pop
xchg
sub
lock
shll
jmp
xlat
jmp
fadds
add
ljmp
outsl
mov
xor
xor
movsb
call
xlat
pop
lret
test
inc
in
mov
push
inc
jle
cmp
inc
dec
xchg
mov
mov
push
mull
pop
cmpsb
xchg
pop
push
fmul
inc
movsb
stc
in
pop
mov
cmp
in
sbb
dec
dec
movsl
jbe
lret
and
xor
ja
adc
and
loopne
or
das
rcll
xor
adc
stc
cmp
dec
mov
test
fdivs
mov
cmpsl
sbb
pop
pop
cmpsb
jae
insb
out
popf
or
xor
mov
mov
test
dec
mov
mov
sub
std
popf
mov
pop
movsb
xor
push
mov
xor
xchg
and
movlps
cmp
bound
in
inc
mov
and
inc
int
les
xchg
sarl
dec
sarb
sbb
mov
mov
popa
push
inc
xchg
popf
mov
jbe
movsb
mov
repz
pop
test
jecxz
not
ret
stc
pop
shrb
sub
mov
xor
jnp
add
rorb
mov
inc
sub
sbb
pop
sub
inc
xchg
xchg
and
in
mov
pop
das
jle
or
addr16
inc
inc
mov
daa
jns
or
pop
dec
mov
mov
lds
jb
push
insl
and
adc
mov
or
ret
cmp
fidivrs
imul
in
adc
lods
call
cwtl
and
fistps
push
or
movsb
test
mov
push
add
mul
or
mov
dec
loopne
mov
fistl
enter
jle
xor
out
jae
jl
sbb
int3
adc
hlt
sbb
lcall
jmp
cmp
stc
push
mov
cs
pop
xchg
addr16
mov
mov
pop
sub
cmp
dec
inc
into
loope
stos
inc
fimuls
lods
add
lahf
mov
jns
dec
lret
mov
and
gs
sbbb
jno
addr16
cmp
mov
clc
stos
push
add
in
das
xchg
adc
decl
mov
cmp
jae
outsb
sub
cmp
loopne
scas
mov
cmp
dec
lea
sub
lret
cmpsb
pop
loop
rcrb
mov
loope
add
xchg
adc
adc
push
push
and
push
jno
pushf
sub
shr
dec
mov
push
lahf
jbe
add
jo
mov
inc
or
out
mov
jle
popf
xor
cmpsl
test
dec
fcoms
shrb
mov
es
leave
cmp
or
les
loop
nop
cmpsl
and
bound
inc
push
stos
cmp
scas
pop
sub
cmp
out
in
cld
cld
fcoms
mov
pusha
xor
out
int3
jecxz
and
inc
push
add
loope
cmpsb
mov
lret
mov
adc
inc
mov
cmpsl
das
push
je
mov
mov
mov
fnstcw
mov
mov
mov
lcall
outsb
push
icebp
push
dec
fdivrl
imul
repz
insb
mov
mov
popa
in
mov
arpl
or
sahf
rorl
pop
jp
pushl
push
subb
fstpt
mov
inc
pusha
xchg
inc
loop
mov
jo
push
mov
dec
subl
inc
sub
cmc
cmp
out
sti
outsl
fs
inc
movsl
call
in
sub
sbb
pop
ret
into
adc
in
push
mov
push
dec
cmp
dec
add
pop
inc
or
fs
stc
jg
adc
dec
lahf
sub
test
lods
dec
out
cld
nop
stos
movb
pop
movsl
lea
jmp
dec
test
in
pushf
sbbl
mov
mov
jge
ds
dec
mov
cs
mov
dec
jne
and
mov
jecxz
sbb
loop
add
test
int
cwtl
xchg
or
lds
add
stos
push
and
jp
adc
jb
popf
stos
or
push
pop
and
nop
pop
xchg
roll
push
sbb
jl
push
ja
lret
clc
jp
shlb
cmp
sbb
fildl
xchg
cmc
leave
std
into
fisttpl
inc
pop
push
mov
xor
dec
push
mov
inc
lret
sub
popa
xor
mov
pop
fidivrl
inc
xor
int3
xchg
stc
pop
jnp
dec
add
sahf
sub
sub
mov
ficompl
fstps
icebp
xor
and
out
cmp
out
addr16
int
mov
sub
ret
loope
push
jle
push
setno
int3
out
movsl
cld
mov
outsl
xchg
add
mov
or
push
push
push
fwait
jecxz
and
daa
sub
rorl
jo
cmpsb
lahf
mov
adc
cmpsb
scas
les
lea
cmp
and
repnz
xor
inc
lds
out
out
mov
adc
test
cmp
sbb
out
sbb
into
cmp
cs
dec
aaa
je
lea
fldcw
pop
sub
xchg
arpl
jmp
hlt
jge
xor
int
shrl
lea
jne
push
push
ret
imull
fsub
xor
mov
loop
test
push
data16
mulb
into
aas
fisubl
inc
test
jg
clc
adc
ret
stc
mov
in
stc
lods
inc
add
scas
jne
fdecstp
test
jle
push
aam
sti
mov
lods
mov
lret
push
sub
ret
cld
jne
lods
mov
sbb
les
mov
call
aas
insl
cmp
xor
test
or
mov
push
push
sub
push
sub
sbb
sbb
inc
cmp
fs
aam
loopne
and
or
mov
stc
sbb
pop
in
outsl
test
mov
mov
and
aas
mov
dec
shrb
jne
jl
and
push
dec
jge
mov
xor
sbb
adc
nop
add
cwtl
aaa
data16
in
cli
or
fs
jecxz
mov
push
mov
lds
push
bound
jg
popl
insl
jg
aad
test
sub
je
in
adc
jb
cli
icebp
xor
pop
aam
push
cmp
js
ss
jg
fistpll
in
cltd
call
jecxz
shlb
andl
clc
or
cmp
or
int3
int3
and
pop
inc
call
fcoml
fistl
sbb
pop
shrl
pop
xor
cli
lock
xchg
ss
xor
insl
decl
movsb
inc
cld
pushf
pusha
inc
fstpl
and
push
inc
and
scas
pop
ja
push
mov
cs
fbld
mov
adcb
add
sbb
jecxz
inc
sub
mov
mov
xor
lret
push
jae
xor
sar
jmp
lret
negb
mov
mov
pushf
add
sahf
push
out
mov
cmp
xorl
addb
inc
xor
xchg
mov
data16
mov
mov
pop
or
daa
stc
and
or
movsl
pop
icebp
mov
ds
test
fstps
leave
hlt
out
mov
adc
lret
lahf
scas
xor
push
mov
sub
xchg
fwait
push
stos
les
in
mov
and
inc
imul
negl
imull
les
mov
mov
popf
jg
imul
sub
ja
jmp
shll
js
mov
imull
ficompl
add
jmp
xor
fadds
inc
bound
ds
and
add
mov
mov
movsb
pop
cs
leave
adc
clc
std
push
lods
sbb
movsl
or
pop
push
fld
sub
cmp
mov
inc
jle
push
cld
add
dec
or
adc
mov
cmpb
aas
cmpsb
add
push
ljmp
mov
ret
outsb
es
xlat
push
ja
les
sbb
rcrb
sub
pop
and
jmp
jp
das
lret
sub
sub
inc
ja
mov
xorl
jmp
jle
lds
sub
out
loopne,pt
lea
decb
int
fstp
mov
cmp
sbb
mov
push
arpl
leave
imul
fisubs
xor
push
cmp
cmp
lods
insb
decb
xorb
inc
push
pop
les
js
hlt
mov
mov
pushf
shlb
insb
or
bound
sbb
sub
mov
mov
call
pop
jo
mul
jl
mov
imul
std
add
popf
out
add
es
adc
mov
cltd
lea
movsb
in
mov
cmp
repnz
fwait
lods
mov
xchg
ljmp
mov
jmp
int
jecxz
mov
scas
jo
inc
into
mov
mov
push
aaa
or
pop
and
popa
sbb
or
push
ret
or
cmpsb
jge
xor
xchg
jge
lock
inc
scas
stos
sub
std
cmp
icebp
addb
fnsave
out
stc
gs
enter
sub
jmp
fs
mov
push
imul
xor
push
aad
mov
lahf
or
xor
mov
sarl
out
push
sbb
mov
sub
inc
xchg
push
xchg
mov
int3
cli
add
jae
in
inc
daa
pop
pop
cmp
adcb
adc
mov
sbb
pop
idivl
sbb
push
stc
inc
and
aaa
fldl
loopne
out
mov
xor
sub
push
jg
fidivs
sahf
pusha
movsl
repz
mov
mov
adc
lahf
jbe
push
push
mov
fdivp
or
inc
dec
into
and
mov
sbb
jno
cmp
dec
xrelease
mov
in
fbld
aad
lret
stos
jno
xor
ja
add
inc
adc
and
pop
dec
sbb
dec
ret
xor
dec
pop
pop
ja
xchg
cmp
pop
mov
mov
out
add
adc
loopne
add
out
mov
dec
ja
fimull
loopne
mov
int3
stos
push
js
sti
sbb
fsts
idivb
faddp
inc
push
int3
fsubr
lret
xorb
std
cltd
jg
testl
and
aas
in
mov
jo
push
adcb
cld
insb
jl
repz
iret
mov
mov
in
test
fnstsw
pmullw
cmpsl
fidivrl
test
daa
out
cmp
arpl
into
cmp
int3
insb
push
cmpsl
xchg
and
lahf
xchg
mov
shl
add
insl
nop
and
loop
adc
xorb
insb
or
mov
mov
xlat
insb
loope
xchg
test
jns
cmpsl
pop
push
jecxz
sbb
into
sbb
jb
lahf
jae
inc
into
stos
push
sub
xor
dec
pop
adc
inc
sub
loopne
cmp
pop
fisttpll
fdivl
mov
outsb
adc
xchg
ret
fstpt
repz
pop
xlat
cltd
fstpl
jne
add
movsl
in
aad
pop
xchg
jno
jae
ss
cli
outsb
fs
test
mov
jmp
xchg
lahf
aam
mov
cmp
dec
enter
add
inc
adc
ret
add
daa
fdivs
mov
inc
adc
mov
fidivl
repz
int3
repz
pop
int
cmpl
jno
cli
mov
pop
or
fld
pop
add
pop
lahf
xor
mov
mov
mov
mov
pop
fs
movsb
fimuls
aad
repnz
test
xor
adc
xor
mov
mov
adc
and
mov
ss
dec
fs
test
lea
call
adc
adc
out
jl
arpl
fistps
push
mov
cmp
dec
out
sbb
sub
mov
dec
out
and
pop
test
inc
xor
cmp
xor
and
xor
inc
imul
mov
shrl
cmp
jne
mov
fdivs
mov
mov
stos
lds
dec
jnp
cmp
dec
mov
andb
out
inc
mov
adc
out
fidivs
cmp
push
pop
nop
pop
cld
xchg
idivb
popa
cld
mov
inc
sub
cmp
test
push
cmpsb
js
fdivrp
xchg
test
and
lds
fistpl
lret
inc
sbb
imul
aaa
mov
imul
data16
push
fstpt
jne
out
mov
inc
adc
int
scas
addl
lods
push
jo
mov
dec
addl
sbb
xor
out
mov
and
mov
fmuls
push
dec
add
imul
sti
add
decb
xor
jb
fstpt
arpl
enter
push
clc
xor
enter
jae
inc
mov
pop
mov
mov
dec
lds
loope
sbb
adc
and
movsb
jp
adc
enter
lret
sub
xchg
icebp
and
cmp
or
adcb
fdivr
int
adc
mov
add
inc
inc
out
out
ficoms
xor
je
stc
dec
push
out
rolb
inc
lods
loop
sub
je
int
lcall
mov
mov
lods
xor
cmp
popa
f2xm1
and
mov
adcl
movsl
cmp
nop
sti
inc
pushf
call
mov
nop
push
dec
xor
ror
rorb
shll
lret
xor
popa
or
jp
cltd
repnz
and
mov
cmc
mov
cld
test
jo
sub
adc
cmp
pop
cmpsb
ficomps
pusha
iret
scas
fsts
jecxz
xchg
dec
jnp
int3
jbe
bound
fucom
push
pop
push
das
jae
xor
jnp
add
ror
mov
popa
dec
lods
bound
rcl
cwtl
ret
lods
jne
push
cld
sub
sbb
jno
std
jle
js
push
lret
mov
call
or
pop
xchg
mov
aad
sbb
pop
push
dec
push
and
mov
push
mov
icebp
ds
nop
push
cwtl
dec
jnp
sbbl
test
stos
mov
xor
repnz
in
sbb
adc
inc
shl
xor
ja
pop
sub
dec
and
add
cwtl
int3
out
jns
stos
ja
iret
fsubl
add
pop
fisttps
aaa
outsb
stos
or
test
sbb
sbb
inc
repz
mov
lret
push
sbb
cld
loopne
xchg
cltd
cmp
pop
cmp
shrl
pop
mov
cmp
jno
in
into
jmp
out
push
ja
data16
nop
inc
dec
cmpsb
fsts
adc
xor
push
in
mov
cwtl
flds
jl
rcll
jno
mov
ds
lret
push
gs
test
adc
inc
pop
sti
std
sarb
xor
stos
idiv
mov
mov
xor
pushf
jbe
push
es
aaa
fisttps
xchg
enter
fs
mov
in
pop
and
sbb
mov
ret
cmc
xor
lods
mov
mov
cwtl
xor
adc
and
push
sbb
and
dec
es
cmp
mov
rclb
jae
jp
push
lock
or
push
push
pop
cmpsb
cmc
int
inc
or
movsb
bnd
push
fcoml
and
or
mov
pop
mov
ds
test
add
bound
pop
push
jno
mov
xor
mov
xchg
insb
push
insb
push
loopne
add
fdivl
fs
inc
ret
cmpsl
ja
stos
imul
jb
lds
inc
push
sbb
mov
sbb
imul
ret
sti
xchg
sbb
fsubs
jge
sbb
and
or
and
xchg
xchg
sbb
test
and
inc
mov
out
add
call
sbb
dec
cmpsl
dec
xor
aad
lea
or
xchg
mov
mov
dec
xor
iret
push
sbb
pop
stos
or
push
sub
enter
insb
test
add
mov
scas
fisttps
pop
xor
mov
cmp
loope
test
ja
sbb
movsl
iret
mov
sbb
add
mov
out
lods
loop
loopne
or
mov
repz
icebp
loope
test
mov
mov
push
loop
cmp
and
jo
movsl
or
leave
mov
mov
ret
add
fcom
popf
jo
sbb
jo
adc
push
and
add
push
push
or
add
or
fwait
mov
sbb
cmpsl
iret
cmpsb
pop
insl
dec
mov
mov
testb
rcl
xchg
insb
data16
adc
mov
ret
pop
lds
pop
mov
pop
in
jmp
sbb
push
mov
je
sbb
adc
or
mov
mov
dec
fdivl
cli
pop
cmp
cmp
adc
add
push
dec
jl
fiaddl
movsb
dec
mov
mov
pushf
les
sti
scas
fstpt
jns
sbb
fnstenv
mov
mov
outsl
rcr
lds
xchg
cmp
test
dec
xor
push
scas
mov
jle
fldenv
test
pushf
out
and
or
fs
mov
lcall
lds
jo
fiadds
push
push
push
mov
imul
and
jns
cli
adc
sbb
and
pushf
fst
std
mov
lock
jl
cmp
mov
pop
rcrl
xchg
mov
xor
in
and
xor
mov
mov
insb
sub
inc
mov
sbb
out
pusha
aam
jb,pt
jg
movsl
jno
inc
std
popf
lret
out
jg
clc
mov
lret
dec
out
out
loope
nop
jle
sahf
cmp
pop
imul
mov
xchg
sub
notb
out
rorl
or
rolb
movsb
jnp
movb
movups
std
mov
fdivp
push
cmp
xchg
scas
and
movsl
cmp
les
aaa
cmp
fdivrs
icebp
jl
and
rolb
mov
into
jne
cmp
mov
jle
push
sub
jle
ficomps
mov
testb
mov
faddl
pop
mov
jne
clc
xchg
setg
mov
xlat
movsl
aas
test
jmp
outsb
test
in
push
outsl
shlb
jno
cmp
and
push
push
sub
inc
mov
imul
in
jmp
cmp
out
xchg
mov
lcall
js
dec
push
cmc
test
lcall
rorl
adc
pop
adc
push
mov
inc
orl
mov
push
xlat
jmp
popa
push
outsl
ret
inc
or
add
fldcw
fstpt
cmpb
mov
xchg
sti
sbb
shlb
cmp
sahf
je
or
pop
push
jl
sub
cmc
test
addb
dec
xchg
ss
into
movsl
cld
lret
sub
movsl
sub
cmp
sub
xlat
or
cwtl
push
inc
pushf
in
daa
mov
xchg
inc
out
jo
scas
mov
outsb
out
lret
mov
dec
lea
xor
or
mov
mov
daa
aam
inc
push
mov
add
test
inc
ja
mov
lret
jno
jle
push
inc
jbe
pop
mov
fs
dec
sub
scas
jbe
mov
mov
add
cmp
add
wrmsr
xchg
inc
jmp
subl
fnstsw
gs
jno
and
and
loop
pushf
cmpsl
loope
jl
push
pop
push
inc
cmpsb
pop
adc
mov
leave
daa
ret
aad
aad
pop
rcrb
lahf
jl
or
xchg
scas
cmp
or
push
int3
pop
xchg
xchg
push
daa
pushf
jnp
insl
int
out
push
and
sti
or
in
adc
xor
in
loop
xlat
jae
cmpsl
out
sbb
jp
pop
jle
xor
scas
adc
pop
xchg
dec
in
jbe
mov
pop
ja
aam
in
inc
cmp
outsb
pop
inc
into
lret
fldenv
lret
cmpsl
or
adc
jl
cmovg
pop
cld
ss
lods
inc
jns
insb
mov
gs
inc
scas
push
in
add
sbb
mov
adc
inc
mov
in
out
nop
pop
scas
jge
repz
mov
lods
cs
in
gs
or
xchg
test
sbb
int3
inc
add
nop
jae
jo
repz
fldln2
loop
dec
popf
or
pop
jg
roll
push
js
aas
xchg
fdivl
cmp
adc
xlat
adc
ret
push
pop
inc
pop
pop
mov
sti
outsl
stos
addr16
into
sbb
jns
or
sbb
iret
movsb
or
sti
sbb
insb
fwait
sub
xorb
cmp
test
dec
imul
mov
mov
sub
pusha
lret
out
dec
into
xchg
cmpsb
cwtl
scas
lods
sub
leave
clc
sub
dec
daa
jnp
repz
addr16
inc
not
push
mov
out
aaa
and
stos
sarb
add
pop
hlt
inc
push
xchg
sub
cmp
and
dec
push
or
mov
mov
leave
in
push
jle
rorl
int
aad
outsl
jbe
pop
pop
rolb
dec
jne
gs
dec
sbb
cmp
jnp
cmp
mov
dec
mov
pop
sbb
sahf
roll
in
rcl
lea
addl
lret
fsin
mov
cld
enter
popa
add
mov
mov
pmulhuw
dec
dec
push
call
int
mov
adc
xchg
cmp
xlat
jnp,pt
out
je
mov
add
push
out
cmp
out
add
mov
xor
adc
mov
daa
pop
into
jne
and
sahf
sub
mov
scas
add
cmpsb
mov
sub
pop
lds
lret
mov
adc
repz
jl
jmp
dec
fldt
imul
push
bound
aam
jl
mulb
lret
mov
mov
fcoms
gs
out
daa
cmp
sbb
xlat
testl
cmpsl
xchg
and
mov
cmpsb
imul
and
je
mov
and
sub
dec
fstpl
sub
sbb
ret
sbb
mov
push
inc
aam
xchg
xor
inc
in
pop
xchg
inc
mov
test
ja
repnz
sub
jno
push
xchg
jecxz
adc
std
cwtl
in
jmp
sahf
sbb
add
int3
sahf
adc
int
cmpsb
xchg
int3
loope
or
or
xor
fcompl
pop
sub
cmp
dec
inc
mov
fiadds
es
lods
cwtl
or
sbb
xchg
fmull
jo
mov
minps
rcll
into
stos
mov
add
cld
add
xor
dec
bound
nop
jne
stos
mov
dec
fisttps
rorl
jae
xorl
add
inc
ret
lret
sub
in
aad
mov
xor
jecxz
lods
add
inc
push
sbbb
lcall
scas
inc
stos
popa
data16
enter
or
fildll
mov
pop
ljmp
rolb
jns
adc
out
loopne
ret
xchg
lea
adc
nop
pop
xor
sbb
sbb
xchg
aaa
adc
push
std
into
mov
xlat
pop
test
int3
cmp
mov
cmp
call
xor
popf
cmpsl
xor
ja
push
or
inc
sbb
sti
dec
decb
inc
test
fmulp
into
and
or
cmpsl
int3
clc
int
or
enter
arpl
adc
adc
xor
rcrl
cld
mov
push
jle
xchg
out
dec
ja
or
das
mov
push
das
icebp
test
fimull
inc
popf
add
out
mov
ret
xor
mov
lods
pop
mov
repnz
pop
fisttpl
jecxz
cmp
or
mov
shl
mov
fcmovnbe
rorb
sahf
jns
stc
aad
dec
mov
test
je
and
cwtl
pop
inc
fbld
enter
test
insb
mov
sbb
xchg
rorl
and
inc
out
xor
imul
or
jbe
dec
lea
paddq
mul
mov
sub
pop
and
faddp
and
adc
scas
lret
push
xchg
outsl
shlb
test
jo
je
sub
lret
ja
int3
aas
add
push
stc
int
push
and
push
jmp
leave
ret
or
mov
cmp
mov
mov
sub
aam
push
in
test
pop
bound
lcall
push
outsb
pop
arpl
rcll
idiv
sub
push
and
rclb
jle
sbb
cmpsl
aad
stos
daa
dec
sbb
sbbb
xchg
out
xchg
in
shlb
cmp
daa
xor
fwait
insl
fnstenv
xor
std
insl
fbld
adc
dec
sbb
lods
clc
fmuls
pop
fs
aad
mov
cmpsb
inc
add
test
cmp
pop
sbb
sbb
loop
inc
xor
test
inc
sub
in
enter
das
or
adcl
fildll
shlb
jmp
pushl
adc
ret
sbb
and
jae
idivb
pusha
dec
jo
pop
pop
ds
ljmp
mov
sbb
jo
sbb
shll
jno
pop
mov
jge
jl
lds
test
in
sub
mov
jmp
in
dec
aad
sbb
rcrl
adc
sti
imul
mov
inc
jl
ds
dec
mov
repz
incl
and
push
jae
cmc
sub
pop
jnp
ds
rolb
scas
xorl
rcrl
mov
xchg
mov
movq
aam
xlat
nop
outsb
xor
insl
cld
mov
mov
les
pcmpgtd
mov
rol
std
ret
push
jnp
push
aam
inc
mov
in
push
mov
jg
repz
pop
sub
ljmp
adc
loopne
mov
mov
pop
xor
and
lret
scas
les
jmp
add
out
pusha
cltd
sbb
cmpl
lea
mov
jl
push
icebp
icebp
pop
lcall
les
inc
xchg
adc
lods
les
xor
jp
sub
and
int
dec
loope
ljmp
mov
mov
pop
imul
pop
add
sbb
jecxz
mov
movsl
cwtl
xchg
jle
push
ret
in
add
sub
pop
fimull
dec
fwait
and
hlt
jp
sahf
ljmp
divb
stc
fidivl
repnz
inc
mov
mov
imul
dec
pop
rcl
adc
push
mov
mov
pop
cs
sub
imul
cld
jle
repnz
mov
dec
dec
in
je
pop
stc
repnz
adc
mov
outsb
ret
test
arpl
sbb
lock
lret
lea
adc
and
pop
push
out
lock
jmp
push
sti
jo
jl
pop
xchg
sub
das
mov
add
loop
push
dec
mov
mov
dec
or
imul
add
cli
test
arpl
icebp
fwait
rol
std
fiadds
out
movsl
test
push
sbb
xlat
loopne
mov
add
das
pop
iret
lds
std
sub
xchg
ljmp
das
cwtl
mov
pop
loopne
push
cmpsl
mov
jge
mov
mov
jl
xor
insb
cmp
jg
cs
adc
add
cs
outsb
inc
sti
vmovaps
mov
icebp
dec
shlb
out
hlt
push
mov
cmp
cltd
dec
pop
xchg
jb
loop
push
adc
or
fstpl
out
adc
out
inc
cmp
dec
mov
cmp
stos
ja
sahf
and
sbb
cmpsl
data16
or
adc
lret
and
xor
sub
sub
out
test
test
fcom
aad
rcll
mov
shll
shlb
stos
aam
loopne
mov
inc
movsl
xchg
sahf
mov
pop
call
dec
inc
dec
and
lret
outsl
int
jo
cmp
repnz
int3
xor
lret
mov
lods
push
fidivrs
mov
icebp
add
xchg
xchg
jg
or
cmp
rcl
movsb
bound
jg
mov
inc
xchg
int3
rclb
push
sub
pop
mov
imul
test
popf
xchg
xchg
jge
into
mov
cmc
mov
out
fildll
lahf
movsl
daa
mov
or
dec
jns
push
add
xor
cwtl
add
mov
loopne
xchg
mov
and
dec
adc
push
adc
std
stos
sbb
sbb
dec
fisubs
leave
popa
aaa
outsb
mov
fsubrs
pop
push
ds
imul
arpl
in
jg
cld
mov
cmc
adc
fisubrl
enter
pop
jge
xor
dec
out
sarb
dec
dec
ret
xchg
dec
gs
in
imul
aas
js
lods
xor
push
shll
mov
stos
shll
and
xchg
push
mov
mov
cmp
mov
sbb
mov
ret
push
sub
movsb
xchg
loop
and
iret
movsl
cmp
pop
pop
fimull
addr16
loope
xor
or
xchg
add
aam
imul
aam
std
mov
add
ljmp
cmpsb
pop
imul
jae
repnz
push
cmp
cwtl
daa
xor
mov
push
fldt
jg
or
rcrl
mov
adc
test
je
mov
push
aam
std
or
mov
dec
pextrw
mov
das
outsl
pop
add
nop
leave
mov
pop
jle
cmp
negb
xor
test
arpl
ja
jmp
xchg
push
arpl
stos
pop
cmc
adc
jp
ret
orl
dec
and
stos
fadds
xor
push
add
push
hlt
push
pop
push
mov
mov
stc
mov
test
arpl
je
out
push
lret
xchg
loopne
xchg
nop
stos
lds
mov
and
dec
push
das
sbb
inc
mov
xchg
pop
mov
insl
int3
orb
int3
inc
cmp
rcr
adc
add
xlat
loope
push
push
mov
fdivrl
mov
decb
idiv
xor
in
or
cs
adc
xor
dec
xchg
fdivl
sub
adc
lret
out
inc
dec
pop
js
shrl
or
stos
xchg
mov
les
add
leave
cmp
and
lret
pop
pusha
add
popa
xor
lea
push
in
sbb
addl
dec
lcall
insl
ror
leave
xor
pop
ffreep
sbb
aaa
mov
sub
std
out
stos
dec
outsl
pop
retw
pop
or
xchg
loope
addr16
and
push
pop
fidivl
mov
sti
mov
add
out
xchg
mov
pushf
adc
stc
cmc
xchg
inc
xor
hlt
rolb
push
sti
dec
repz
mov
push
xchg
xchg
out
sti
mov
mov
adc
js
mov
sbb
in
pop
add
xor
addr16
dec
and
and
and
sbb
push
jg
fs
leave
loop
mov
daa
jns
scas
mov
les
mov
sbb
jnp
cmp
stos
xchg
dec
pop
mov
add
mov
lea
addr16
shrl
loope
cmp
scas
jne
in
inc
icebp
pop
fcmovnbe
adc
inc
mov
mov
mov
lods
mov
leave
jge
aad
xor
sub
popf
iret
adc
mov
popf
test
int
sahf
es
cwtl
into
push
pop
mov
loope
jecxz
out
std
repz
loop
outsl
das
xlat
push
jb
lret
lea
lret
test
mov
sbb
in
push
mov
out
push
mov
lahf
lock
jno
imul
fistl
add
pushf
pop
mov
mov
jecxz
fbld
andb
cs
sbb
incw
stos
jne
mov
rol
sbb
fld
jmp
fmull
cmc
lahf
in
movsl
xchg
or
popa
pop
or
movsl
add
sbbl
lds
mov
xor
push
jp
and
pop
xor
xor
cmp
int3
cmpsl
xor
nop
cmp
hlt
or
iret
das
sub
es
in
fistps
loope
lock
addr16
pop
cmp
inc
lea
pop
push
outsl
frstor
jle
std
push
sbb
sar
shll
insl
shll
or
test
jge
mov
sub
arpl
push
lock
mov
scas
lods
and
sub
cli
or
pop
cmp
ja
adc
or
inc
sti
enter
aas
add
xchg
lea
push
jecxz
mov
pop
xchg
in
xor
test
fdivs
std
sarl
jb
sbb
mov
mov
pop
or
div
push
cwtl
js
cmp
test
aaa
jmp
fidivl
jmp
lahf
jae
rclb
sarb
fisttpll
iret
scas
add
and
jl
xor
shlb
sbbb
xor
iret
fnstsw
icebp
pxor
sub
sub
fldl2e
mov
jne
pop
icebp
cwtl
arpl
test
test
scas
pushf
out
adc
lcall
push
mov
add
pop
jecxz
jae
fdivr
shrb
adc
sub
mov
sub
mul
aas
jae
fwait
loop
ljmp
push
and
call
fcoml
orl
mov
xor
loopne
mov
xchg
fucomp
push
inc
sbb
icebp
sbb
xor
out
xor
mov
lahf
int3
das
cmp
jno
push
outsl
cmpsl
sbb
xchg
or
in
ss
push
rcll
dec
test
xor
call
mov
add
jns
lods
sub
jmp
addr16
fidivs
into
dec
clc
ss
movsl
ret
ficoml
je
adc
lret
add
int
clc
idivb
sbb
shrb
mov
test
add
xlat
xor
test
sahf
sbb
fadds
or
xchg
push
xorb
sub
roll
lahf
dec
imul
shrd
lock
les
mov
leave
inc
and
imulb
lods
ss
pop
jecxz
xlat
and
inc
mov
adc
cmp
les
sbb
sub
add
mov
sbb
jmp
jno
mov
sbbb
or
inc
dec
cmp
stos
les
cmp
xor
outsb
pop
mov
mov
sub
sbb
sbb
leave
xchg
push
pop
lock
ljmp
and
call
fadd
add
inc
mov
popa
inc
scas
xchg
stos
xor
gs
jmp
jbe
fs
in
jl
push
enter
outsl
out
sub
ror
in
mov
pop
add
int
cmp
fcoml
xchg
dec
rclb
xor
xchg
je
fbstp
shr
mov
movsb
dec
js
cwtl
mov
mov
adc
xor
pop
cmp
cltd
bound
aaa
mov
test
roll
mov
sbb
fnstsw
mov
repz
xor
in
andl
push
xor
outsb
lods
shlb
cs
movsl
jl
ret
js
addr16
addr16
mov
repz
adc
jbe
mov
mov
enter
or
aas
jbe
in
cli
or
lock
pop
and
rolb
pop
cltd
mov
arpl
ret
dec
add
ljmp
pusha
dec
dec
sub
push
sub
mov
or
adc
pop
xchg
loop
ds
fdivrs
or
fsubs
jge
adc
jo
xchg
jae
add
iret
mov
pop
out
lds
cltd
mov
lods
pop
cmp
imul
sahf
dec
dec
mov
mov
mov
ja
and
mov
fmuls
dec
mov
inc
sub
pop
sub
std
aaa
jno
leave
movsb
jbe
js
mov
sbb
roll
and
loopne
loope
mov
loope
mov
mull
mov
pop
cmpsl
sahf
adc
or
repz
jl
dec
jno
inc
mov
push
in
jmp
pop
sub
xor
xchg
or
popf
cmp
in
xchg
pop
sub
ja
pushw
aam
movl
fldl
loop
fbld
add
mov
jecxz
mov
les
popf
lcall
sbb
mov
fwait
sub
adc
cs
or
lds
mov
sub
pop
lcall
loop
scas
xchg
mulb
fcoml
lods
fisubrs
pop
dec
ret
push
imul
xchg
lahf
hlt
movsl
mov
sbb
leave
xlat
cmp
adc
xor
add
jbe
jbe
addb
sbb
mov
cs
sbb
sub
inc
jg
jl
mov
ss
jecxz
lcall
cmp
lods
cmp
clc
xchg
pop
sub
lock
std
adc
mov
popa
mov
xchg
stc
gs
movsl
imul
fldcw
repz
sub
pushf
imul
mov
xchg
mov
fcompl
orl
mov
dec
leave
jne
cmpsl
enter
push
lock
jne
adc
jl
loop
mov
and
jae
mov
mov
jg
daa
jae
xor
cmp
out
fucom
mov
mov
out
movsb
and
in
adc
mov
jb
cmpl
dec
cmp
test
jne
push
jno
and
adc
adcl
loopne
jbe
add
cmp
mov
test
or
testb
pop
aas
push
lock
and
inc
insb
sbb
inc
cmp
repz
imul
jp
dec
cmp
sbb
loope
dec
fstl
mov
vorps
outsb
jg
test
das
xor
shlb
xchg
or
in
inc
out
out
ja
fsubrl
or
int3
test
movsl
jo
repz
or
jle
xchg
add
pop
push
cwtl
sub
inc
es
ret
movsb
lret
outsl
ret
mov
adc
aaa
stos
in
fmul
mov
stos
jb
push
mov
or
or
imul
dec
add
push
inc
dec
shrb
jle
xor
xor
mov
mov
lods
lea
jbe
adc
notb
shl
les
xchg
stc
in
inc
fwait
cmpl
mov
int3
xor
adc
push
sbb
or
jecxz
pop
idivl
jecxz
cmp
fs
repz
fdivrs
jb
xor
mov
ja
cmp
insb
fidivs
enter
jmp
ret
cmp
dec
repz
push
popa
loop
je
fcoml
iret
gs
daa
add
mov
das
call
aad
or
xor
repnz
jl
add
pushf
clc
addb
ja
aad
popf
or
mov
push
aad
inc
test
mov
mov
xlat
cwtl
xlat
lods
push
cmp
sbb
sahf
add
insl
xchg
xchg
xchg
and
cmpsb
stos
and
cmpsl
mov
jmp
icebp
jp
mov
sbb
addb
lods
nop
jnp
xchg
in
xchg
in
lahf
sbb
fwait
cmpsl
int
pop
ret
xor
call
shl
sbb
out
sub
ja
mov
or
sbb
fidivl
fs
cmpb
icebp
adc
ret
js
sbb
xlat
cmpl
insl
cmp
cltd
ja
jg
cwtl
inc
stc
fs
or
cs
push
sbb
add
lods
sbb
orb
push
cmp
jmp
fld
add
cmp
mov
pop
ja
aas
testb
xor
fildl
ja
push
fiadds
icebp
or
inc
cmpsl
adc
dec
fdivrl
push
rcl
pop
lret
outsb
xor
les
aas
add
pushf
inc
imul
cmpb
push
mov
mov
ljmp
divb
mov
mov
pusha
imul
pop
push
cld
enter
std
and
adc
pop
neg
lds
fiadds
push
ficoms
in
loop
jbe
je
jns
sub
xor
cmp
push
dec
shr
inc
jge
test
cmp
ficoml
push
divl
shlb
add
adc
xchg
ss
test
mov
and
cmpsb
mov
push
jne
cmp
repnz
push
dec
xchg
nop
cmp
mov
xchg
xor
xor
xor
pushf
inc
add
mov
lret
ficompl
mov
jle
cmc
mov
sbb
lea
mov
mov
cmp
fistpl
notb
iret
mov
popa
iret
orb
mov
test
push
mov
mov
jns
lds
popa
add
ds
out
mov
mov
pop
jo
repnz
in
pop
je
add
inc
and
mov
cmp
pop
dec
test
mov
push
sbb
and
xor
ret
sub
mov
hlt
add
xor
sbb
out
sub
nop
mov
mov
sbb
leave
data16
outsb
adc
push
icebp
out
test
les
divl
sbb
test
sahf
jmp
shr
push
inc
out
mov
insb
jge
orb
rorb
push
dec
mov
add
push
xor
jg
push
movsb
call
dec
jecxz
and
mov
lret
iret
jns
mov
mov
cmp
loopne
ja
cmc
ret
push
fsin
or
jl
aad
lret
push
out
in
or
enter
test
cmp
into
in
pop
mov
mov
aam
test
bnd
aad
push
ret
push
mov
popa
xor
jl
xchg
repnz
pop
inc
or
adc
int3
popa
xchg
push
icebp
icebp
sbb
push
mov
nop
add
fcoml
sub
push
and
sub
jne
adc
cltd
adc
add
sub
pusha
xchg
and
dec
adc
sahf
lret
das
cmp
and
jmp
cmp
push
inc
mov
xlat
push
out
lds
mov
jnp
fmull
adc
outsl
insl
sti
cmp
test
sub
out
dec
movsb
repz
shrl
cmp
lret
and
xchg
jo
insb
mov
shl
loop
mov
mov
pause
or
repnz
or
mov
pusha
mov
popf
lret
cmp
addr16
aad
jns
jno
or
cmp
outsl
aaa
fildll
pop
call
push
adc
inc
mov
es
xchg
nop
leave
cltd
mov
mov
cltd
das
cld
mov
repz
lcall
or
test
adc
inc
std
mov
xchg
xor
inc
cmp
lcall
or
daa
mov
lods
leave
lds
mov
lcall
mov
xchg
mov
adc
daa
js
shrb
stos
push
das
shlb
sub
or
imul
jmp
cwtl
mov
stc
push
fadd
cmp
inc
and
fldenv
xchg
mov
sub
mov
aad
movsl
dec
pop
mov
sbb
push
push
mov
sbb
mov
pop
ret
scas
repz
cmp
stc
adc
mov
push
mov
mov
jbe
and
jecxz
dec
add
mov
push
inc
call
or
sub
and
shrb
std
push
daa
fidivl
xchg
lret
movl
xor
jo
pop
or
sbb
adcl
and
movsb
outsb
push
cli
or
mov
mov
mov
adc
test
mov
xchg
out
xor
mov
sub
mov
adc
sub
pop
mov
fs
push
cmpsl
cmp
nop
out
push
outsl
inc
leave
mov
jo
or
fdivr
xchg
aam
cmp
dec
cltd
cmpsl
sub
out
pusha
clc
imul
lock
dec
ljmp
out
loope
imul
xor
add
adc
test
shl
rcrb
pop
xor
xchg
into
pop
pop
mov
aam
or
inc
jmp
std
cmpsb
cmp
and
xor
jnp
shrb
and
inc
faddl
push
jp
push
dec
xchg
cld
sub
divl
popf
xchg
xchg
scas
test
pop
mov
jne
fwait
lds
jae
push
mov
imul
lods
inc
les
adc
aas
inc
push
xchg
sbb
scas
xchg
push
push
incl
lds
mov
xor
bnd
aas
sbb
push
cld
test
clc
fsub
jmp
cwtl
xor
shrl
sbb
xor
inc
test
jae
sbb
push
sub
clc
mov
rcr
inc
es
movsb
inc
pop
fcmovnb
ja
mov
or
and
je
mov
fs
cmp
or
rcll
rol
adc
cmpsl
mov
icebp
pop
ss
push
bound
ds
repnz
inc
sub
xchg
push
mov
push
and
push
in
inc
lods
insl
loop
jecxz
pusha
orb
mov
dec
mov
subl
adc
or
sahf
pop
adc
jle
scas
push
push
roll
les
jnp
fstpt
pop
jae
pushf
dec
push
cld
pushl
pushf
cmp
repz
jo
call
mov
lds
add
rclb
add
outsl
inc
ret
mov
jnp
jne
fsubr
push
xchg
push
push
lods
loopne
jbe
aad
fstpt
dec
mov
sub
mov
inc
push
sub
repnz
xchg
adc
fs
fmuls
inc
cmpsb
push
sub
adc
jnp
or
sub
in
or
rcl
repnz
jo
cmp
xchg
loop
dec
push
stos
adcb
add
xor
lcall
lcall
push
mov
movsl
push
sub
out
xchg
lds
add
int3
push
aam
repz
xchg
jp
mov
in
decl
fistpll
inc
jnp
outsl
push
cmp
sbb
dec
iret
cs
loop
jecxz
pop
mov
icebp
jne
sub
inc
xor
pop
std
sbb
jle
xchg
or
shll
xchg
jmp
fbstp
imul
jnp
incl
daa
jmp
lock
xor
mov
fstps
pop
dec
push
ljmp
fidivs
sbb
loope
push
dec
or
pop
in
lcall
push
stc
das
mov
push
jbe
sbb
cltd
pop
xchg
xchg
add
cmpsb
add
sti
sti
loope
or
cmp
push
cmp
cmp
lds
xchg
mov
jmp
lret
mov
andl
xchg
mov
mov
daa
es
mov
xor
popa
and
int
cmpsb
mov
sbb
push
xchg
mov
jo
mov
add
jnp
or
adc
xchg
rolb
iret
pop
push
pop
add
out
mov
mov
jmp
into
push
pop
rcll
mov
push
lods
and
std
lret
imul
repz
mov
sbb
lea
ss
sbb
lret
dec
jmp
sbb
cmp
or
lcall
fwait
into
movsl
xor
or
out
test
rolb
or
cmp
or
stos
lahf
xchg
adc
jle
cmpsl
push
add
subb
cmp
int3
dec
and
mov
in
pushl
mov
sbb
loope
mov
sbb
arpl
push
gs
arpl
push
dec
jnp
mov
xorb
cmpsb
sub
pop
clc
dec
or
sub
loope
out
addl
outsl
cwtl
out
dec
aas
inc
mov
outsb
lock
adc
pop
je
xor
daa
test
inc
inc
cmpsl
jbe
int
js
mov
lcall
push
mov
dec
mov
rcrb
fnstenv
mov
imul
mov
fwait
and
mov
mov
or
cmp
in
pop
imul
xor
pop
repz
ja
popf
movsl
insb
sub
outsb
xchg
popa
cmpsl
dec
test
inc
in
adc
adc
mov
lods
jno
call
pop
sbb
insl
nop
fwait
pop
dec
stc
push
fisttpl
cmpsl
jle
data16
lahf
pop
lock
push
cltd
mov
cmp
fneni(8087
sarl
pop
movsb
enter
fidivl
shl
imul
aad
push
dec
mov
test
push
hlt
ja
inc
inc
test
or
daa
jae
and
cmc
std
or
fs
sahf
adc
jnp
dec
inc
cs
jmp
push
push
je
mov
mov
in
mov
dec
shrl
mov
mov
mov
enter
out
cmc
mov
mov
xchg
push
xchg
sbb
insl
push
icebp
out
sar
fwait
test
aam
jg
ss
jae
mov
adc
xchg
sub
cmc
cmpsb
sarl
aam
inc
es
popf
out
sbb
lods
je
insl
loopne
and
pop
sub
in
lret
pop
in
in
outsl
loop
mov
push
adc
jg
xlat
mov
dec
xchg
jg
ja
loope
pushf
adc
xor
out
cmp
in
sti
lret
or
imul
ja
mov
jle
sbb
sub
adc
dec
mov
in
pop
or
jo
jbe
scas
fsubl
rcrb
out
stos
stos
cmc
inc
push
inc
in
stos
cld
and
in
inc
push
and
int
sti
jge
xchg
out
push
repnz
xor
aad
cmp
lcall
dec
in
jp
out
out
xchg
loope
mov
loope
mov
pushf
jb
stos
movsl
xchg
pop
mov
cli
cmp
cmp
in
sbbl
movsb
mov
movsl
das
aaa
imul
loope,pn
adc
adc
les
and
bound
lds
insb
add
dec
inc
loopne
xchg
pop
aaa
add
add
and
mov
push
and
rcl
aaa
jl
out
fisttps
je
daa
sub
push
or
js
xchg
stc
daa
mov
inc
data16
scas
mov
daa
pop
pop
dec
movsl
mov
jle
stos
mov
push
push
jg
sbb
mov
mov
jmp
push
or
and
dec
imul
shr
aad
push
loope
outsl
stos
mov
push
lret
ret
pop
push
sbb
stos
mov
mov
jb
scas
cmpsb
jmp
xor
or
movsl
outsl
jl
shl
incl
jle
lds
pop
cs
push
iret
mov
jge
or
jb
mov
fidivrs
jg
push
jno
arpl
sbb
stc
or
scas
or
add
lahf
fs
lret
mov
cmp
fstl
fsubrl
ljmp
leave
jle
xor
jns
clc
jmp
xor
xchg
cs
inc
cmpsl
pop
pop
aam
sbb
mov
fidivrl
fidivrs
rcr
aaa
adc
test
icebp
loope
dec
fcmovne
enter
das
sub
sub
fisubrl
fidivrl
or
pop
data16
push
inc
pop
fnstenv
mov
in
in
lock
cmp
and
hlt
dec
mov
push
xor
pop
dec
xchg
push
jne
cmpsl
movsl
adc
or
xor
aad
das
rcl
test
imul
notb
ds
inc
xchg
mov
mov
add
adc
pop
sahf
imul
lretw
pop
sbb
mov
cmpsl
setae
xor
sbb
inc
js
mov
xor
xchg
lret
mov
or
adc
dec
cwtl
fldl2e
fistps
jl
mov
dec
cmp
push
addr16
cld
xor
in
aaa
arpl
push
add
rolb
fsubp
jns
mov
or
ds
iret
into
test
pop
add
rcrb
fs
jns
xor
push
jmp
popa
in
push
add
and
les
notl
inc
dec
lcall
sbb
push
dec
xlat
jmp
mov
mov
mov
push
dec
xor
dec
jne
and
push
inc
div
int
ljmp
sub
sbb
pop
add
lods
test
leave
xchg
lock
sbb
push
push
lock
sub
jns
xchg
xor
cwtl
stos
das
xchg
out
testb
fisttpl
and
and
jmp
test
sbb
add
mov
add
inc
ret
jae
jle
cli
call
pop
ljmp
out
and
pop
pop
and
shlb
call
paddsb
xchg
pop
enter
fs
sahf
push
jp
movsl
testb
cmp
sbb
mov
add
sbb
cwtl
cmc
or
mov
fwait
pusha
jle
arpl
xor
xchg
and
mov
rcr
lret
add
and
dec
pop
cltd
jo
std
inc
lods
push
lds
pop
dec
int
loop
cmc
and
pop
xor
test
pop
inc
xor
lahf
shlb
mov
mov
pop
insl
sbb
dec
fs
leave
jmp
ficompl
decb
xchg
or
mov
es
inc
rol
and
or
jmp
jne
fsub
inc
test
xchg
jp
jmp
adc
mov
fisubl
and
fnstsw
push
mov
push
sub
add
mov
mov
lret
repnz
pop
stc
push
test
pop
mov
jae
das
out
mov
out
ss
cli
cmp
flds
test
insl
ret
ss
mov
nop
orb
fldenv
mov
mov
outsb
or
pop
rcrb
dec
insb
push
xchg
cmc
add
mov
jl
stos
mov
icebp
adc
roll
mov
mov
inc
inc
stos
adc
xor
cmc
cmpsl
stos
or
test
pushf
lahf
les
fidivl
and
ljmp
xchg
arpl
dec
dec
loope
push
iret
mov
jmp
lcall
sbb
es
jmp
mov
mov
std
mov
iret
orb
jle
rclb
ret
jge
jns
cmp
fcoms
ficoml
or
ret
fs
jle
out
bound
insb
inc
jnp
xchg
inc
jae
mov
and
out
cmp
cmp
sub
adc
nop
xor
pop
cmp
roll
lret
xchg
jl
cmovg
notb
adc
out
mov
mov
das
cld
cmp
pop
adcb
xor
test
lods
pop
pop
arpl
push
lds
nop
unpckhps
dec
insb
addr16
mov
mov
jl
jns
aas
jecxz
faddl
push
fsub
fsubrs
dec
ds
cmpb
cltd
mov
dec
int3
and
fisttps
inc
sbb
jle
aam
cmp
jne
push
test
sub
jbe
jae
mov
and
xchg
cltd
push
pusha
xchg
jbe
jo
daa
jo
mov
xor
pop
adc
jge
insl
ss
dec
sbb
xchg
mov
or
inc
cmp
cmpsl
and
test
imul
push
outsb
mov
mov
sbb
xchg
lods
mov
int3
arpl
pop
jb
jecxz
cmp
add
inc
icebp
arpl
iret
mov
push
outsb
cmp
movsl
or
jno
lods
mov
xchg
out
xchg
pop
pop
ret
mov
push
scas
pop
loopne
movsb
ret
cmp
push
test
jmp
out
out
pop
out
jle
std
aam
aas
lock
mov
je
mov
and
inc
mov
mov
ret
mov
addr16
cli
cmpsb
dec
dec
mov
jns
and
or
mov
popf
icebp
and
fimuls
fdivrs
add
sub
mov
jns
sub
inc
push
fmuls
fs
aad
and
aad
pop
xor
aad
cmp
pop
add
imulb
add
jno
cmp
pushf
mov
mov
mov
leave
sub
popa
sahf
cmp
add
pop
add
decl
mov
lcall
cli
lea
ret
int3
jmp
scas
popa
add
out
or
push
mov
fwait
dec
stos
pop
mov
sub
cmpsb
jg
mov
xor
stc
pop
xchg
arpl
sub
cwtl
xor
enter
aam
je
repnz
test
sub
cltd
push
scas
mov
pop
inc
ljmp
lret
jg
call
cmp
leave
xor
loop
and
mov
out
dec
gs
inc
xchg
inc
or
push
gs
scas
jnp
sti
inc
mov
es
adc
push
addr16
adc
jbe,pn
inc
divl
ljmp
adc
mov
fdiv
test
test
addr16
scas
jae
in
mov
and
inc
push
lock
sahf
xchg
xor
push
adc
cmpsl
outsl
xchg
testl
sub
adc
outsl
negl
sub
scas
push
fs
imul
test
cmpsb
sbb
iret
stc
aas
jl
lret
in
inc
jle
outsl
out
sub
push
nop
mov
sahf
sbb
jecxz
dec
sub
push
adc
lods
ja
iret
adc
movsb
js
stos
cmpb
lock
push
sahf
cmp
test
cmp
mov
sbb
loopne
push
aaa
outsl
pop
shr
popa
inc
dec
push
xor
daa
loope
int
clc
add
dec
popf
xor
sbb
jmp
sub
push
sti
std
lret
inc
movsb
aas
pop
gs
je
into
xor
jecxz
push
mov
push
adcl
insb
leave
lods
das
fistpl
adc
lahf
aas
cmp
xor
insb
stc
jecxz
dec
mulb
jae
jb
sarb
in
and
in
sub
mov
push
pop
lods
lahf
cltd
les
or
loope
xchg
arpl
out
nop
add
adc
or
int3
jb
push
pop
dec
jae
int3
xchg
fwait
in
fidivrl
xchg
pop
xchg
lret
dec
jp
hlt
sub
outsl
mov
push
and
and
pop
dec
out
mov
mov
cmp
icebp
add
mul
or
push
xchg
xchg
out
frstor
sub
outsb
xchg
jmp
inc
sub
push
out
sahf
mov
out
arpl
arpl
push
sarl
xor
pop
fsubrl
aaa
stos
push
xor
xor
scas
sbb
and
dec
mov
pop
pop
arpl
xor
fldenv
in
sub
test
loopne
fists
mov
pop
fisubrs
in
test
sub
xchg
dec
mov
sbb
filds
das
xchg
lret
xor
push
incb
outsb
xchg
add
in
push
jmp
popf
jae
imul
hlt
jmp
aad
in
lret
dec
dec
add
icebp
jp
push
lods
pop
ljmp
mov
cmpsl
sbb
dec
jns
sarl
mov
arpl
subb
cmpsl
lods
mov
aaa
and
leave
js
add
add
jb
psrlw
aam
ror
repz
js
inc
hlt
xor
test
hlt
sub
xor
xor
std
sbb
xor
clc
mov
jmp
xor
sbb
mov
adc
pop
mov
aas
xchg
rcrb
pop
clc
cs
aaa
add
cmc
jbe
sbb
add
loope
cmpsl
jno
pop
orb
shlb
mov
pop
loop
or
inc
add
ljmpw
sub
xchg
fs
sbb
sbb
cmp
out
and
push
cmc
add
sarl
adc
fimull
ds
pop
cld
mov
fistps
mov
xor
fldl
mov
mov
aam
and
call
in
and
push
and
sbb
lcall
and
mov
inc
dec
iret
jmp
pop
and
mov
adc
xchg
jne
mov
dec
loope
lcall
pop
aam
jne
or
in
rep
push
loope
xor
sahf
pop
les
inc
inc
push
fiaddl
push
mov
pop
mov
dec
test
xor
mov
jb
scas
repnz
insl
fimuls
mov
dec
inc
cwtl
add
shl
push
lret
jne
sbb
imul
popf
fisttpl
xchg
cmpsl
inc
fldl
mov
dec
cmp
mov
cltd
flds
imul
fldcw
mov
sahf
cmc
fisttpl
daa
jl
push
adcb
jo
in
add
cld
mov
out
leave
imul
ja
lahf
in
pushf
push
sbb
mov
xchg
cs
xor
fidivrs
bound
es
pop
xchg
movsl
adc
mov
push
push
or
mov
jnp
loop
fstpt
les
pop
pop
fs
sub
jmp
int
dec
lahf
test
and
push
xor
jo
and
cmpsb
int
push
bound
and
xor
dec
in
pop
subb
fidivrl
sub
outsb
cltd
adc
fimuls
sub
mov
add
sbb
xor
movsl
repnz
sub
dec
cli
outsl
add
rorl
aad
mov
rclb
rorb
sbb
or
orl
out
hlt
bound
sahf
dec
out
repnz
movsb
aas
cmpsb
mov
lret
dec
dec
cltd
lret
jmp
in
sub
add
add
loop
mov
pop
pop
push
loop
les
scas
loopne
test
lods
das
out
push
and
cmp
rol
and
dec
sub
fbstp
ja
cmp
cmpsl
movsl
pusha
and
push
xchg
push
lcall
push
js
mov
loopne
adc
mov
hlt
and
sbb
aam
es
mov
inc
and
xor
stc
adc
adc
add
int
jbe
sbb
adc
dec
pop
sbb
xchg
inc
pop
sahf
std
iret
adc
lds
outsb
mov
and
jne
lds
data16
scas
xlat
shl
es
inc
add
dec
xchg
xor
lcall
adc
scas
fistl
ss
lea
inc
loopne
sbb
mov
fstps
pop
xor
inc
jl
push
stos
gs
call
push
mov
adc
out
out
xchg
sub
loop
and
add
push
das
xchg
and
repz
cmc
and
and
setle
jbe
hlt
daa
gs
ret
or
inc
mov
pusha
shrb
mov
mov
cmpsb
movsb
cmp
movsb
loope
push
fistl
xor
push
call
rorb
shlb
lret
and
inc
add
xchg
mov
sbb
inc
std
push
or
push
es
push
jle
outsl
and
test
push
pop
xorb
jae
fimull
cli
shrb
jne
or
sbb
add
scas
shll
shr
adc
pop
js
in
clc
shl
call
push
fldenv
loope
orb
dec
mov
insl
cs
mov
xor
sub
mov
test
rolb
loopne
push
sub
inc
and
repz
cmp
or
pop
adc
jg
mov
jg
movsl
outsb
mov
icebp
xor
xlat
imul
xchg
mov
mov
mov
xchg
xchg
clc
fildl
mov
popf
into
je
clc
and
jne
imul
rcll
mov
pop
clc
and
clc
sbb
test
cli
ret
pop
cmp
lcall
dec
xchg
mov
inc
xor
loope
xor
ud2
cmpl
dec
in
cld
dec
nop
ret
and
loop
pop
cmp
mov
and
jno
or
into
mov
test
and
pop
test
cmp
fildl
int3
icebp
jmp
jbe
ret
or
cmc
jno
pushf
push
mov
mov
jo
fnstsw
or
add
push
aas
sbb
mov
sbb
push
mov
leave
cs
push
jno
call
mov
nop
mov
loope
mov
ret
and
dec
push
and
cmpsl
lea
lock
jle
jg
jle
cmp
xor
bound
pop
rcr
jb
lret
arpl
lcall
imul
lock
xor
fwait
adc
sti
scas
sbb
sub
inc
dec
add
dec
push
loope
inc
or
jp
add
stc
add
lods
xchg
roll
popa
js
popf
movsl
xor
and
add
imul
out
sub
cmp
xchg
dec
ja
mov
inc
sub
push
lods
adc
imul
sbb
add
jb
dec
cltd
xor
mov
insb
mov
test
xchg
pop
out
mov
in
jbe
mov
push
push
stos
mov
fistps
mov
sub
into
push
adc
into
sbb
loopne
bound
aam
test
out
add
add
pop
ret
add
icebp
and
adc
orb
jge
fcompl
cmp
xchg
mov
pop
mov
xor
lock
jmp
imul
sarl
mov
add
sub
dec
out
push
mov
movsl
cltd
bnd
cmp
pop
ret
or
mov
push
ds
or
or
fwait
stc
icebp
or
int3
lcall
test
and
push
mov
jecxz
mov
pop
aad
sbb
sub
aam
insb
add
jo
jne
data16
push
inc
add
mov
xor
or
push
arpl
xchg
je
ret
pop
cmp
jecxz
aad
inc
mov
int3
pop
xchg
xchg
mov
xchg
adc
lods
jp
jbe
push
cmp
mov
sbb
mov
jecxz
rcll
outsb
movsl
rol
push
mov
loopne
adc
das
mov
jp
aad
xor
adc
cmp
or
mov
loopne
xor
push
push
decb
pop
loopne
sbbb
cmpsb
popa
sbbl
sti
fimuls
xchg
adc
sbb
mov
push
mov
inc
pop
jnp
movsb
and
push
arpl
mov
subl
mov
push
lret
lock
push
sub
xchg
add
je
mov
cmp
loop
mov
add
aas
dec
xchg
cmpsl
mov
cli
push
push
cmpb
imull
mov
iret
ret
stc
scas
aam
xor
notl
lock
scas
or
push
mov
mov
and
stc
repz
fisttps
cwtl
pop
std
inc
call
lcall
jne,pn
push
cmp
xor
mov
mov
addr16
out
js
cmc
fcomi
mov
pusha
jg
cmpsl
std
lods
icebp
or
push
sub
std
jae
in
xchg
lods
xchg
mov
pop
push
movsb
int3
in
sbb
push
movsb
adc
jo
jle
mov
cmp
inc
sti
or
dec
aad
test
icebp
sub
xor
mov
shll
sbb
sub
cvtps2pd
hlt
sub
icebp
call
scas
insl
jns
dec
push
pusha
fimull
pop
clc
enter
push
aaa
inc
test
out
jns
fisttps
inc
jp
mov
out
je
das
cltd
mov
test
fwait
nop
les
push
xorl
lret
popa
xchg
push
jg
push
pop
or
sub
pop
popf
andb
mov
pop
cmp
jg
bound
adc
shlb
push
mov
pop
insl
and
sub
je
or
mov
mov
and
mov
jle
add
mov
inc
into
add
xrelease
fsubrl
xor
fidivs
mov
stos
mov
mov
jnp
rcrl
sbb
push
add
aaa
rorl
clc
std
aaa
ficompl
pop
or
pop
dec
pop
arpl
rorb
mov
sub
inc
cmp
in
ss
jmp
jg
insl
inc
and
loope
hlt
dec
dec
inc
cld
inc
or
pop
ds
push
mov
in
jmp
or
sbb
ljmp
dec
loopne
mov
lds
ror
jns
add
shlb
icebp
jge
ret
ret
mov
rorb
out
xchg
mov
pop
gs
cmp
sbb
mov
pushf
sbb
ja
fucom
ret
cmpsl
bound
mov
repz
fcoms
inc
inc
fwait
rcl
fldcw
divl
pop
fcmovnu
cltd
clc
testl
cmp
mov
popa
stos
jp
jmp
xchg
mov
mov
movq
sbb
aad
rcr
addl
push
lret
jbe
pusha
and
loop
shl
inc
cmp
push
js
in
add
xor
mov
cmp
ss
popf
pop
adc
imul
idivl
push
jne
mov
fs
test
add
in
mov
pushf
pushf
xor
lods
sbb
arpl
pop
mov
and
rolb
adc
fisubl
or
int
pop
in
daa
cmc
xorl
insl
jae
dec
jno
jmp
mov
fnsave
pop
adc
and
mov
out
jg
add
or
test
cmp
xorl
sbb
jns
sbb
aad
insl
fprem1
jbe
popa
fadds
push
aad
mov
fs
add
sub
jne
jb
xchg
cmp
scas
ds
mov
or
push
jmp
mov
bnd
mov
adc
lea
inc
sub
add
icebp
addr16
cld
mov
sub
sub
mov
repz
mov
or
adc
mov
mov
add
cmpsl
fs
ja
mov
rcll
and
and
pop
sbb
mov
dec
and
fwait
adc
cld
stos
stc
pop
pop
push
aad
mov
icebp
stc
jns
mov
enter
dec
pop
mov
push
xor
and
xchg
rcrb
mov
pop
ds
popa
int
cmp
push
inc
shll
shl
nop
xor
and
or
into
mov
int3
pop
xchg
add
aad
rcrb
movsl
icebp
out
mov
jmp
jp
dec
mov
in
add
xor
jle
jmp
mov
push
ljmp
adc
jo
in
fcompl
inc
sbb
cmp
je
mov
sti
fistl
jno
inc
lods
je
clc
push
add
cmp
push
cmp
je
cmp
mov
dec
in
test
pop
std
cmc
dec
cmp
popf
jecxz
nop
int3
mov
pop
imul
fbld
clc
fdivl
fs
adc
pop
xlat
xchg
push
add
out
lods
stc
dec
mov
sub
jno
jns
push
push
add
adc
out
jb
add
mov
ret
scas
xchg
xchg
sub
icebp
add
mov
scas
push
in
dec
into
out
adc
sub
sub
nop
inc
push
jge
pop
or
outsb
les
jecxz
lea
fnstsw
lret
add
bound
jo
mov
jg
push
jno
and
decl
and
call
addr16
ret
in
movl
daa
enter
and
pushf
add
dec
mov
sbb
lcall
push
cmpsl
adc
aas
imul
mov
int3
pop
adc
ds
or
cmpsl
call
stc
ss
xorl
insl
mov
xchg
xor
mov
cmc
notl
dec
cmp
popa
arpl
mov
popa
push
pop
pop
paddb
pusha
dec
daa
xchg
adc
aam
aaa
lock
loope
xchg
test
or
adc
mov
fnstsw
into
cmp
cli
or
lods
vorps
into
sub
jbe
test
leave
ret
lds
movsl
mov
or
push
stc
cmc
shrb
sbb
jno
data16
test
dec
jmp
and
lret
mov
lds
and
mov
dec
dec
aaa
rcrb
push
mov
jns
and
pop
pop
pop
fwait
dec
inc
lahf
iret
sbb
loopne
mov
lret
mov
fwait
daa
stc
aas
sub
add
pop
jns
ja
icebp
add
sub
cli
aam
and
outsb
insb
ss
pop
push
add
loope
addb
dec
cmc
in
cltd
rol
push
jnp
test
pop
in
dec
sti
fwait
xchg
enter
mov
adc
push
inc
stos
mov
push
shl
gs
pop
lea
je
rolb
nop
test
adc
pusha
shlb
dec
mov
test
das
mov
cli
cmpsb
test
leave
push
cmpsb
adc
mov
or
jmp
push
or
rcrb
adc
enter
jle
push
mov
sbb
imul
lods
xor
enter
pop
or
adcl
mov
mov
into
cs
into
jnp
daa
sbb
jp
flds
mov
pop
ds
mov
cli
cmp
clc
push
in
loope
mov
cmp
and
jbe
jecxz
insb
pushf
lret
cmp
test
cmp
fcoml
std
cmp
cmp
mov
xchg
add
outsb
cmp
shlb
sub
add
icebp
mov
mov
in
and
mov
inc
inc
pop
out
mov
inc
xor
jo
cltd
out
test
xor
fmul
fildll
xchg
adc
daa
xor
push
imul
mov
cmp
and
fcmove
push
cmp
clc
mov
out
push
cmpl
test
jmp
jnp
adc
jns
int3
inc
shll
popf
mov
int
cli
xchg
clc
fistpll
pop
mov
movsl
pop
rolb
and
gs
push
or
inc
scas
aas
mov
fwait
iret
insb
mov
roll
aad
test
aam
movsb
mov
dec
inc
add
mov
in
pop
addl
std
push
pusha
insb
jns
fst
les
dec
ja
and
test
push
push
in
idivl
pop
xchg
xchg
daa
insb
mov
test
jg
sar
jp
push
jl
mov
mov
push
dec
decb
incb
sbb
cmp
stos
popa
pop
add
pop
ret
data16
cmpsb
insl
jl
clc
icebp
cltd
xor
js
pop
ror
lret
loopne
addr16
loope
mov
add
pusha
dec
rol
pop
and
loopne
repz
adc
fistl
ret
xor
fsubrl
repz
lea
divb
jle
pop
fwait
sbb
xorl
and
sarl
xchg
test
jl
cmp
lret
or
pop
imul
out
or
cmp
mov
add
es
pushf
sub
dec
scas
test
scas
cmc
push
inc
ja
je
call
xchg
scas
test
outsb
add
js
sar
jp
je
cmp
dec
loope
dec
imul
lock
mov
pop
and
ds
lret
xchg
sahf
cmpsl
repnz
xor
jae
pushf
std
jnp
mov
push
and
jge
mov
push
lea
xchg
pop
hlt
add
push
sub
dec
push
lahf
sti
dec
das
mov
imul
lods
repnz
fld
mov
pushf
fstpl
pop
aaa
and
movb
arpl
mov
adc
dec
or
mov
out
ljmp
jg
push
and
jns
insb
jmp
jb
inc
xchg
push
addb
stc
clc
test
adc
aam
roll
adc
jae
inc
cmc
cli
stc
insl
aad
pop
loope
aas
dec
ret
aas
imul
xchg
sbb
cmc
mov
inc
leave
mull
dec
ret
jge
pop
xchg
mov
xchg
cmpb
sbb
jo
mov
sub
and
mov
stc
icebp
cmp
dec
jle
inc
imul
mov
inc
scas
or
pop
sub
xchg
rclb
adc
mov
mov
cvtps2pd
cmp
xchg
pop
unpckhps
lods
fistps
imul
divl
jg
ss
sbb
and
in
mov
clc
test
fwait
test
pusha
mov
dec
lret
mov
pop
adc
rolb
push
rorl
dec
mov
xor
rcrb
mov
imul
inc
rcrb
adc
mov
jne
subl
in
pop
pop
xorb
sarb
lcall
adc
leave
inc
pop
mov
sub
stc
lock
repz
jb
inc
mov
popa
dec
fidivs
clc
movsb
test
shrb
loope
sbb
ljmp
into
adc
push
movsl
adc
call
mov
sbb
sti
popa
xchg
rorl
sarb
nop
movsl
jl
lahf
adc
cmpsb
sbb
adc
icebp
test
ljmp
mov
nop
dec
stc
mov
adc
dec
les
arpl
daa
roll
add
jecxz
lds
dec
hlt
lahf
pop
and
xor
shll
in
add
fnstenv
mov
cmp
xor
jb
dec
cmpsb
dec
sbb
movsb
add
daa
xlat
mov
mov
lret
movb
and
aas
xchg
or
imul
inc
enter
adc
fadds
in
sahf
popa
je
test
cmpsl
test
call
or
sbb
jne
clc
call
inc
ficompl
adc
sub
icebp
mov
popa
push
add
pop
cld
mov
mov
dec
mov
lcall
inc
ds
shrl
add
les
cwtl
mov
outsb
cmp
jmp
popf
sbb
imul
sahf
adc
fstl
sub
dec
fwait
or
jmp
fistps
xor
jbe
mov
xchg
rorl
notb
add
sbb
out
daa
lahf
push
sbb
mov
pop
push
pop
das
adc
out
mov
mov
mov
cmpsb
jge
pop
arpl
or
or
pop
icebp
repnz
out
dec
sbb
cld
and
sbb
or
sbb
inc
imul
xchg
sbb
cwtl
call
xchg
mov
je
clc
xchg
inc
cmp
jl
jl
stc
aad
lods
repz
xchg
divl
lock
loop
adc
sbb
adc
jbe
jmp
add
mov
mov
dec
xchg
stos
cmp
fildl
sahf
pop
or
stc
sbb
fildl
cmp
push
imul
or
or
rcr
into
fwait
sbb
jae
push
pusha
ss
jmp
in
std
add
push
sub
xchg
cwtl
sub
jecxz
and
pop
mov
loop
arpl
push
push
fcoms
xchg
pop
mov
lods
addps
pop
cmpsl
or
xor
inc
loopne
xchg
js
lahf
ss
inc
xchg
push
stos
ds
inc
or
pop
jbe
cwtl
inc
push
pusha
pop
push
idivl
jae
push
jb
adc
popf
xor
mov
leave
sub
fistpl
jmp
jne
push
cmp
dec
jno
mov
cmpsb
test
adc
sub
repz
push
sbb
cld
lret
sbb
fistpll
add
sub
cmp
lods
xor
dec
sbb
cmp
mov
lret
int
xorl
pop
test
ss
ret
shl
sbb
xchg
lahf
leave
pop
or
and
enter
jno
push
addr16
imul
rcrl
stos
in
pop
lods
das
stos
fnstcw
loopne
movsb
inc
pop
cltd
mov
addr16
pusha
pusha
mov
mov
pop
in
mov
icebp
xor
mov
pop
arpl
repnz
jmp
ljmp
and
aaa
into
cli
ror
push
pop
add
and
aas
pop
mov
xor
pusha
inc
notb
ja
or
test
sbb
mov
cmp
scas
cld
inc
push
adc
xor
adc
mul
inc
shrb
adc
stos
mov
mov
cmpsl
pop
inc
cli
je
sub
sar
sub
shrb
inc
inc
arpl
jmp
sub
test
xor
fs
jecxz
cltd
xchg
arpl
je
idivb
push
cmp
ja
es
stos
push
lods
jo
and
faddp
inc
push
fdivl
int3
pop
mov
roll
sbb
pop
mov
add
fmull
jbe
inc
jo
push
adc
and
pop
mov
roll
xor
xor
adc
test
stc
jo
dec
sbb
stc
es
das
lock
adc
add
mov
cmp
out
pop
mov
dec
es
loop
or
cmpsb
push
inc
sbb
nop
stos
mov
inc
popa
into
add
aam
cwtl
repz
cld
loopne
push
stc
sub
fdivr
pop
out
pusha
pop
add
loope
mov
cli
jno
sahf
lods
jno
inc
cmp
or
outsl
test
xor
rcll
scas
sub
pop
sti
and
push
cli
mov
dec
lcall
in
inc
ret
add
mov
imul
cld
stc
pop
mov
cltd
push
or
adc
idiv
dec
xor
mov
ret
lret
mov
add
adc
add
mov
test
sub
push
sub
inc
cmc
mov
lahf
pop
xchg
movsl
or
aam
mov
outsb
fwait
movsb
fists
jne
hlt
xlat
xchg
xchg
push
je
pop
in
mov
sbb
call
insb
sti
ss
fldl
sbb
test
xchg
xor
or
imul
jg
cltd
loopne
mov
push
pop
int
popa
lds
loope
test
xchg
idiv
int3
xor
fwait
js,pn
jge
xchg
test
gs
mov
fists
sti
mov
push
icebp
fs
sbb
inc
mov
or
jle
fnstenv
cmpb
mov
mov
mov
fidivs
add
cwtl
ficompl
mov
jb
mov
jae
push
ror
dec
insl
ljmp
shrl
ljmp
les
mov
arpl
jge
xchg
leave
adc
sarl
dec
pop
or
fidivrs
fsubl
cs
mov
ljmp
xor
mov
add
shr
insl
push
insb
cmp
lds
jge
aam
loope
int
loope
push
jle
jecxz
xchg
leave
fisttps
dec
xor
int
cmp
inc
ljmp
lods
push
loopne
inc
jno
cmp
sbb
and
add
leave
loopne
mov
lcall
fwait
lods
arpl
filds
lret
push
nop
in
adc
sub
fcomi
rorl
shlb
dec
push
and
in
dec
ja
rorl
pusha
sbb
int
lahf
into
hlt
out
imul
xor
cmp
sub
jge
inc
fistps
mov
cmpsb
in
scas
pop
sbb
rolb
shlb
cmp
push
iret
sub
push
xor
data16
sub
mov
aas
cld
pop
call
cmc
jp
inc
xor
mov
test
pop
pop
pop
fists
mov
mov
inc
and
jae
dec
insb
cmpsb
sub
clc
icebp
add
adc
mov
jae
cmpsb
jo,pn
notl
xchg
xchg
xor
repnz
or
add
test
sbb
sahf
cmc
pop
push
into
adc
sti
jbe
cmp
lds
push
mov
push
int
jb
cmc
cmc
jmp
lret
mov
lcall
dec
je
in
lahf
cmp
mov
ljmp
fs
xchg
mov
repnz
out
bound
jbe
mov
sti
inc
mov
int
fidivrs
or
int
push
ss
insl
xchg
ror
aaa
jp
adc
xor
and
lock
js
popa
call
mov
insl
cli
pop
and
or
inc
jecxz
punpcklbw
pop
mov
mov
push
iret
pop
pop
pop
cmp
popa
test
cltd
pusha
push
pop
or
add
cwtl
test
add
call
fs
sub
xchg
jg
cmp
cmp
arpl
loopne
loope
insb
shrb
sbb
cmpb
icebp
repnz
pop
push
pop
push
mov
mov
data16
fwait
scas
mov
out
mov
mov
flds
dec
pusha
mov
lcall
rcl
pop
daa
jecxz
ror
sbb
bound
scas
adc
lret
loope
jp
xchg
cmp
out
je
fimull
jbe
add
call
out
dec
cmp
loope
jp
mov
cmp
jl
mov
inc
cmp
add
xchg
mov
loop
inc
mov
imul
fbstp
adc
dec
pusha
push
push
stos
or
stc
pop
fcoms
push
fstl
aam
mov
sbb
mov
inc
shrl
aaa
and
mov
and
adc
xor
inc
cmp
cwtl
cld
or
xor
mov
sbb
popf
push
jmp
xchg
test
ljmp
rcl
jae
ja
int3
rcll
testb
cmp
andl
jno
pop
dec
fidivs
mov
or
punpckhdq
insl
test
xchg
lcall
outsb
inc
jne
xchg
clc
and
sbb
fisttpl
sub
dec
jnp
cmpsb
data16
ljmp
mov
xor
cs
jno
pop
sti
cli
movsb
push
out
jb
inc
bound
ret
jns
jb
mov
in
rorb
push
test
std
add
mov
pop
in
xchg
test
xor
pop
jb
cmp
rorl
sar
xchg
cmp
repz
jb
in
push
scas
sub
insl
out
pop
aad
rolb
leave
sub
sub
addb
clc
sbb
arpl
sbb
int
cwtl
in
add
mov
jno
push
ds
aad
cmc
fwait
test
lcall
les
iret
sbb
enter
imul
fnstcw
scas
insl
jle
or
pop
faddl
jne
pop
inc
mov
std
add
ret
adc
jl
je
lock
mov
sti
cmp
adc
or
sub
dec
push
mov
addb
mov
sub
sbb
out
and
lods
jo
xchg
mov
xchg
xchg
pop
adc
sub
mov
pop
push
es
test
cs
rorl
add
mov
or
add
insl
inc
jle
lea
pop
xchg
in
cmpsb
cmpsl
sbb
mov
dec
fistpl
cmp
push
inc
mov
dec
adc
mov
dec
sub
inc
imul
sbbb
bnd
xchg
mov
adc
bound
mov
sub
adc
cmpsl
jns
mov
or
xor
lods
push
ja
jp
hlt
mov
test
shl
aas
sub
std
mov
mov
sub
ret
cltd
flds
imul
into
imul
jns
sbb
dec
add
xchg
scas
fldenv
pop
mov
push
cmp
adc
lods
mov
sbb
xchg
dec
packsswb
and
add
mov
pop
pop
jg
clc
test
fs
xlat
mov
and
mov
dec
jg
ljmp
pop
cli
insl
das
push
adc
fstpt
and
dec
mov
mov
fadd
adc
ja
push
in
inc
pop
cltd
js,pn
push
les
pushf
jae
leave
out
jp
hlt
sbb
lock
aas
add
and
hlt
testb
sbb
and
xchg
mov
add
adc
stc
into
sbb
test
adc
push
shl
divl
bound
out
pop
and
mov
pop
pop
lret
jns
push
cld
repnz
test
push
ret
xor
adc
js
cli
leave
xchg
std
dec
inc
xchg
ss
sub
loope
inc
je
jg
pop
inc
or
pushf
addr16
push
pop
mov
movsb
cmp
push
enter
imul
xor
jne
scas
cli
fisubrs
iret
ja
inc
xor
sbb
mov
addr16
jle
jns
push
pop
mov
fiadds
pop
jp
dec
int3
ret
adcb
movsb
jmp
inc
repz
or
fistps
dec
sbb
and
pop
daa
mov
push
loop
sub
pop
notl
ds
fs
push
into
icebp
mov
sbb
loopne
add
push
lods
adc
sub
int3
sbb
add
inc
sbb
loop
js
cli
cmp
rorb
incb
mov
ret
inc
arpl
pop
in
and
adc
sahf
pop
xchg
dec
je
xor
dec
jb
cltd
xchg
push
mov
jle
pop
or
iret
ret
adc
repnz
sub
repnz
ss
ret
lret
push
test
jp
fcoms
out
scas
icebp
xlat
cwtl
push
aam
mov
and
loop
jmp
mov
jp
and
pop
cmp
ja
ds
mov
jae
stc
in
mov
dec
notl
push
lcall
pop
and
gs
loopne
jb
fmull
jmp
pushl
jnp
ja
scas
stos
into
xchg
shlb
add
xor
xchg
adc
mov
mov
stos
aam
movsl
mov
and
xor
mulb
adc
cld
and
sbb
fildll
les
sub
rorb
ja
mov
adc
sbb
orb
ljmp
or
push
leave
repz
xor
retw
mov
sarb
shll
adc
mov
incb
popa
or
pop
pop
pop
push
xor
in
daa
adc
mov
xchg
std
add
mov
cmovl
int3
test
sub
xchg
in
dec
out
sbb
mov
sub
scas
bound
jmp
loop
mov
movsb
int3
xor
sub
mov
sahf
cmp
jl
xor
fwait
jecxz
les
or
aad
sbb
test
mov
mov
std
adc
cmpsb
movl
and
adc
sub
pop
jbe
jb
test
dec
push
test
dec
enter
add
int
push
out
mov
rcrb
out
je
and
lcall
insb
aad
out
out
or
add
clc
loope
pusha
or
dec
inc
in
subl
mov
and
das
add
fldcw
ret
jnp
aaa
pop
add
jno
pushf
push
flds
dec
xchg
sbb
mov
mov
mov
mov
xchg
in
fisttps
pop
mov
cmp
ret
adc
dec
adc
pop
sub
dec
mov
idivb
es
adc
xchg
lods
mov
push
xchg
push
aas
pushf
add
repz
int3
adc
int
sti
out
icebp
lods
sub
dec
lds
mov
pop
pusha
jbe
mov
pop
ljmp
jl
push
or
es
movsb
push
lahf
pop
or
or
pop
add
dec
fldenv
add
jmp
in
loope
clc
cmp
push
je
out
sub
stc
mov
cmc
xchg
test
pop
bound
fdivrl
pop
sti
xorl
sbb
mov
add
jg
lods
cmp
lret
inc
data16
in
repz
rorb
add
dec
ja
mov
pusha
mov
out
mul
roll
ljmp
lods
inc
mov
sbb
jg
mov
jns
scas
lock
mov
mov
or
mov
outsb
xor
repz
push
mov
std
mov
icebp
test
pop
sbb
mov
cmpsl
add
and
fs
test
sbb
nop
xor
mov
aam
jne
mov
ss
push
xor
in
ss
mov
mov
outsb
fs
xchg
out
pop
repz
and
push
inc
jbe
ja
jb
fisttps
push
test
add
cmp
add
pop
mov
and
leave
inc
cltd
les
and
mov
mov
stos
fucomp
pop
repnz
and
mov
imul
jg
mov
lea
mov
stc
pop
mov
filds
les
in
cmovge
pop
jg
pop
mov
lods
push
inc
and
push
pusha
bound
ds
stos
roll
dec
jg
sahf
and
fsubs
pop
mov
dec
dec
hlt
mov
sbb
imul
jg
int3
mov
jbe
push
sahf
jbe
fcmovb
xchg
cmpsb
ror
popa
lock
js
dec
push
movsl
mov
inc
outsl
lret
dec
cmp
mov
dec
jge
cld
in
xchg
add
jg
cwtl
fs
inc
mov
xchg
jge
outsl
aam
mov
and
clc
or
popa
pop
mov
lcall
jo
incl
in
aam
daa
in
arpl
jg
cmp
int3
ret
stos
leave
test
inc
gs
sbb
mov
fldcw
mov
sbb
xor
fucomp
push
mov
mov
fnsave
and
clc
rcll
pusha
cli
stos
dec
mov
arpl
sub
fwait
imul
pop
nop
movsl
jg
ss
dec
push
mov
add
jle
bound
out
subb
mov
mov
sbb
out
fwait
pop
pop
sub
cwtl
inc
sub
pop
xchg
ret
push
add
add
ret
sub
pop
sti
or
push
jecxz
les
aas
jb
popf
loope
mov
out
dec
mull
sub
rcll
out
mov
jmp
or
lret
jg
or
add
mov
je
scas
xchg
and
inc
inc
dec
mov
pusha
and
adc
pop
stos
xor
ret
scas
sbb
add
xchg
daa
jnp
mov
out
ret
je
inc
add
je
cmpsb
mov
mov
and
daa
icebp
xchg
mov
mov
add
xchg
jnp
inc
sub
jmp
or
test
lret
sbb
into
jg
cmp
mov
adc
out
dec
add
movl
jmp
xchg
shll
outsb
andl
fmuls
adc
or
jb
inc
mov
mov
xchg
cmpsl
xor
mov
mov
out
imul
adc
and
ljmp
adc
lahf
aaa
dec
add
mov
rep
and
sbb
pop
mov
cmpsl
jl
sbb
movsl
out
pop
jmp
stos
sahf
lret
negb
repz
lcall
mov
jne
pusha
sarb
ss
push
push
fs
test
ret
xchg
lret
pop
in
lea
push
mov
dec
inc
inc
or
in
push
mov
subb
jne
lods
jmp
loope
lcall
inc
cmp
push
negl
test
or
push
pop
pop
push
addr16
or
add
shlb
cld
or
push
or
ret
inc
dec
mov
js
mov
scas
scas
imul
pop
xchg
cmp
or
mov
ret
call
movsb
mov
and
mov
and
out
fsubl
inc
aaa
jge
mov
imul
lahf
jnp
pop
es
add
cmp
pop
mov
push
xchg
mov
fcoml
or
mov
push
scas
ja
push
xchg
mov
mov
push
jno
add
sub
jnp
xorl
cmp
int3
dec
pop
add
and
test
pop
repnz
inc
aam
pop
or
xchg
sbb
cmp
ja
test
sub
inc
xor
xchg
adc
jo
call
and
test
icebp
push
mov
testb
popf
add
stos
dec
cmpsb
push
dec
sbb
sub
inc
dec
in
inc
fbld
inc
bound
push
jp
fsts
push
outsl
inc
adc
adc
push
cmc
pop
cmpsb
mov
addr16
nop
rcrb
fmull
and
andl
adc
xchg
popf
xor
repnz
in
leave
sbb
ret
adc
pop
rorl
xchg
xor
mov
xchg
adc
pop
movb
add
mov
sbb
imul
addb
test
mov
mov
lods
enter
hlt
inc
jecxz
mov
dec
xchg
dec
pop
sub
xor
fld1
pop
or
dec
fmuls
int
lret
mov
mov
hlt
adc
sahf
jo
cmpsl
test
push
cmpsb
cld
cli
adc
aam
test
cmp
or
cld
add
or
fwait
into
repnz
cmp
add
out
arpl
dec
stc
jbe
sbb
sub
fiaddl
cwtl
fdivrs
sub
test
pop
dec
jmp
jmp
push
pop
addr16
inc
adc
inc
cli
div
roll
int
loop
mov
mov
adc
js
cmc
fcoms
cmc
rclb
pop
ret
mov
adc
pop
jle
out
pusha
movsl
ds
test
gs
rclb
cmp
cmpsl
mov
dec
int
inc
or
sub
adc
push
aas
sti
xchg
inc
push
das
clc
mov
and
jmp
ja
mov
inc
aas
add
pushf
test
div
jle
sbb
sub
jns
xchg
cmpsb
popa
int3
cs
pushf
aas
dec
popa
cmpsl
fnstenv
outsl
pop
popf
mov
in
pop
std
call
mov
inc
dec
int
iret
shlb
jnp
pop
cmp
aaa
inc
ffree
xchg
jp
js
xchg
and
fwait
inc
insb
cld
mov
idivb
call
je
ret
into
push
mov
add
xchg
cmp
mov
mov
xchg
add
add
sub
cmp
adc
in
and
and
or
adc
cltd
and
sahf
outsb
outsb
xchg
ljmp
push
das
gs
daa
push
ret
ljmp
movsb
out
cmp
mov
adc
iret
mul
or
mov
dec
in
out
mov
sub
cmp
dec
xor
popa
mov
loope
scas
shlb
adc
es
rolb
in
sub
idiv
and
mov
jns
inc
and
test
mov
lcall
mov
rorl
xchg
icebp
xchg
insl
arpl
sbb
sbb
sub
cmp
mov
mov
mov
enter
scas
stc
sub
jae
sbb
adc
xor
ret
subl
jns
test
pop
icebp
test
ficompl
fmulp
mov
rep
add
lret
push
ljmp
mov
mov
push
fwait
and
ror
and
xlat
clc
xor
into
divb
lods
and
xchg
loop
lods
psubusb
je
orb
hlt
iret
loope
sbb
sahf
xchg
xor
jb
repnz
outsb
loope
pop
icebp
dec
cmc
jg
mov
sbb
xorb
lret
je
push
shll
addr16
cs
mov
inc
or
leave
lea
pop
cltd
gs
pusha
hlt
aas
sub
sbb
mov
cmp
int
inc
xchg
bound
jns
pop
int
dec
mov
jb
jmp
xchg
loop
push
rorb
cmp
xchg
fimull
or
decb
out
fcmovbe
insl
sbb
inc
lock
or
mov
lahf
adc
xchg
pop
hlt
cmp
mov
cld
leave
icebp
lret
cmpsl
cmp
cmp
xchg
push
ja
dec
dec
adc
rcr
es
jle
add
push
add
pminub
jmp
mov
inc
push
mov
les
jecxz
lret
xlat
outsl
movsb
and
cmp
xchg
pushf
in
xchg
jl
in
cmc
scas
mov
lods
adc
push
inc
fsubr
int3
add
loop
pop
inc
push
push
scas
mov
das
sub
dec
jb
leave
jp
out
xor
pop
imul
scas
negl
and
push
loop
adc
test
pushf
int
dec
aaa
pop
pusha
adc
xchg
fnsave
sahf
add
hlt
dec
pop
sub
lock
inc
test
xchg
sbb
clc
mov
popa
inc
xchg
sub
outsl
popf
movsb
pop
ret
stc
aas
mov
cs
test
jno
fucomip
sub
ja
pop
iret
js
cli
dec
idivl
jns
imul
dec
xor
add
outsb
mov
out
sub
xchg
xor
call
mov
fisubs
or
cmpl
aas
int3
dec
inc
sub
cli
jmp
pusha
stos
pop
sbb
pop
scas
lret
sahf
dec
mov
sub
in
pop
adc
rclb
dec
and
mov
cwtl
sbb
in
jbe
sbb
dec
fldt
add
and
mov
cmc
add
int
stc
cmp
xor
mov
jns
outsb
mov
les
shll
jle
mov
adc
mov
pop
push
pusha
lds
pop
mov
scas
cs
adc
pop
mov
mov
loope
es
arpl
jnp
loop
icebp
add
mov
push
and
ja
lea
inc
movhps
loopne
jae
fmull
push
dec
aam
ds
mov
add
inc
sbb
cmp
daa
xor
jbe
stc
incl
aam
adc
ja
test
rorl
sub
pusha
iret
sti
rclb
pop
cld
and
hlt
pop
jb
and
fdivrl
andb
xchg
filds
push
xchg
push
lret
push
push
shll
notl
jno
sbb
imul
dec
sub
dec
shr
or
leave
inc
test
push
and
dec
in
xor
imul
lock
jp
inc
xchg
ret
inc
test
sahf
jp
pop
xlat
insb
xchg
xchg
sub
sub
dec
xchg
push
rorb
push
pop
mov
pop
inc
push
cmpsb
mov
and
cmp
sbb
cltd
addr16
xor
mov
cs
jae
leave
bound
mov
cld
xchg
mov
sub
push
xchg
cmp
and
ret
push
into
xor
and
inc
movsl
mov
cltd
dec
std
mov
leave
push
clc
mov
mov
fwait
jecxz
or
arpl
xor
lcall
les
dec
loop
subl
push
pop
dec
add
or
jg
das
fwait
icebp
adc
imul
jb
xchg
std
fwait
notl
mov
adc
and
push
ljmp
int
xorl
inc
and
lret
jns
aaa
gs
call
fmulp
pusha
xchg
jp
cwtl
lret
ret
pop
lahf
jne
stc
hlt
dec
test
xchg
pop
imul
sahf
lods
or
jnp
rorb
fisttpll
outsl
push
push
jnp
push
mov
sbb
scas
pop
sbb
call
mov
std
mov
jne
enter
orl
hlt
jno
inc
in
sub
mov
dec
or
movsb
aad
jae
aas
add
leave
movsb
pop
pop
inc
inc
cmp
or
xchg
push
mov
in
sub
sbb
jnp
xor
push
int3
fistl
jns
sbb
fwait
cmc
pop
or
sarl
adc
add
push
scas
xchg
mov
test
repnz
add
repnz
fmull
push
dec
dec
mov
mov
in
mov
fcoml
mov
and
xor
push
mov
or
lret
mov
fildl
adc
cmpsl
loop
aaa
js
inc
loop
pop
mov
or
mov
mov
jo
lcall
loope
add
std
repnz
daa
sbb
lods
stos
add
xchg
mov
xchg
movsl
pop
orb
lock
jb
add
push
sub
cld
mov
testb
lret
mov
or
dec
lret
push
lret
fnstsw
and
cld
pushf
cmp
cltd
and
push
lret
test
add
mov
jns
cmpsb
sub
aad
mov
ret
pop
push
dec
adc
sub
mov
jne
jl
aam
sub
aam
xor
fsubs
fimuls
inc
pusha
cli
data16
in
adc
imul
inc
mov
mov
shlb
cmp
or
lods
push
pop
ror
push
sbb
or
xchg
push
sbb
jmp
sbb
aad
mov
insb
dec
xor
in
cltd
xchg
mov
in
mov
inc
jae
push
sub
cmp
jle
orb
xlat
loop
push
rclb
in
out
jo
and
lcall
jne
pop
jmp
pop
lahf
pop
or
lea
pop
mov
imul
cmpsb
pop
sahf
sub
aaa
arpl
out
dec
jno
mov
mov
cmp
scas
repz
dec
xchg
lret
nop
sub
mov
dec
lcall
mov
xchg
jbe
push
je
push
lcall
movsb
inc
pop
enter
add
pusha
jle
lods
sbb
ss
mov
or
flds
inc
xchg
inc
xlat
push
hlt
pop
test
sub
in
je
pop
rorb
cmpl
ja
push
test
jne
or
out
mov
shrl
imul
mov
mov
mov
inc
cmpsl
sub
cmp
inc
scas
xchg
stc
hlt
xor
jmp
cltd
or
insl
mov
dec
shll
xor
lret
add
dec
cmpsl
leave
xor
cld
mov
add
sub
lret
adc
and
es
add
gs
fistps
jbe
add
fstl
xor
mov
xor
dec
dec
xor
unpckhps
rclb
stos
cli
leave
add
aas
test
mov
fadds
push
xchg
test
out
xchg
mov
mov
push
cmp
or
js
xchg
icebp
cli
pop
jge
hlt
jb
imul
jmp
xor
lea
add
jo
pop
fwait
out
inc
insb
push
dec
mov
sarl
lock
inc
movsl
xor
cld
inc
stos
xor
adc
push
mov
mov
or
push
call
push
mov
loope
lret
sbb
xlat
incb
ja
or
mov
mov
adc
pusha
mov
add
hlt
std
test
jb
mov
pop
pop
test
dec
or
sub
add
lcall
sbb
loope
push
mov
rolb
adc
leave
orb
sahf
cltd
cmp
cs
imul
subl
inc
mov
sub
xchg
shrl
and
push
push
jb
pusha
mov
mov
into
stc
into
jns
lods
outsl
adc
xchg
xchg
inc
es
aad
or
das
adc
pop
cld
or
test
ljmp
daa
sub
mov
adc
das
test
push
lods
adc
and
inc
and
imul
xor
test
hlt
in
in
xor
lret
cmp
leave
stos
lret
subl
push
mov
sahf
xor
cmc
lock
fisubs
mov
sbb
ss
sub
ret
iret
push
fiadds
js
mov
std
sub
jmp
ljmp
adc
mov
mov
fwait
xor
or
pushf
aas
mov
out
daa
loop
adc
nop
xlat
mov
setb
pop
aaa
jmp
mov
xchg
stos
pop
mov
insl
mov
stos
out
inc
arpl
int
pop
cmpsl
mov
enter
sbb
test
imul
xchg
sbb
dec
pop
mov
movsb
mov
das
fsubp
jns
pop
xor
mov
je
ds
xorb
iret
pop
in
ds
rcll
outsb
jnp
jle
test
jb
dec
mov
push
lret
sub
int
imul
shrb
lea
mov
push
and
pop
xchg
mov
cmp
jb
mov
mov
mov
dec
inc
clc
test
lcall
mov
xor
push
jl
adc
addb
enter
inc
out
or
aaa
adc
lret
inc
inc
daa
insb
imul
cmp
dec
mov
loope
cmp
test
or
push
shlb
es
adc
push
add
test
pushf
stos
repz
pop
mov
push
sbb
popf
xchg
stos
mov
xchg
mov
push
ss
or
mov
pop
dec
jmp
xchg
mov
sahf
sub
push
xor
pop
sub
or
xchg
fldcw
in
popa
cmp
and
xchg
add
bound
in
push
les
cli
stos
fisttpl
jle
mov
inc
cmp
femms
dec
pop
pop
xchg
and
lock
das
shll
fistpll
shlb
sarl
mov
fcmove
movsb
dec
jl
xor
sar
sub
pusha
bound
int3
push
cmp
jp
sbb
insl
add
outsb
cmp
jle
xor
mov
mov
xchg
outsb
outsb
jo
xor
mov
pop
pop
into
gs
xchg
cmp
push
add
pop
and
pop
clc
lcall
fnstsw
enter
mov
push
mov
sbb
out
dec
push
push
push
jge
rcll
movsb
mov
mov
and
imul
and
mov
or
mov
jg
mov
ds
push
out
adc
addr16
jmp
aas
add
or
sti
lea
gs
mov
scas
sub
sub
lock
lret
xor
jb
inc
dec
jle
or
sti
call
jmp
cmovb
mov
mov
push
pop
mov
dec
push
mov
add
sub
inc
jmp
pop
sbb
sub
sbb
sub
scas
or
lock
std
inc
cmp
stos
jns
push
repz
aam
xor
pop
shlb
pop
lret
sahf
mov
pop
cld
incl
sub
lods
or
mov
adc
lret
es
pop
or
inc
adc
loop
jl
jecxz
insl
lods
adc
jae
in
sub
scas
test
loop
bound
js
in
popa
fxch
daa
adc
sbb
xchg
mov
xor
sub
ficompl
and
aam
mov
jns
dec
sahf
lods
mov
adc
into
push
xor
pop
sub
pop
shl
jle
lock
sub
cmpsb
stc
push
aas
inc
loop
xor
push
or
stos
hlt
xor
jge
pop
jmp
inc
incb
cmovb
mov
sbb
adc
jmp
sbb
jmp
cmp
into
jmp
pop
lahf
pop
inc
inc
mov
and
jnp
mov
hlt
push
xor
ja
scas
dec
pop
xchg
pop
push
ss
xchg
cli
pop
cmpsb
sub
out
loop
rclb
sti
xchg
adc
icebp
ds
pop
lods
jp
cmp
xchg
or
sbb
push
leave
pop
dec
adc
in
push
mov
adc
stos
xorl
or
sbb
cs
or
push
ds
test
jb
in
or
inc
or
push
and
arpl
fldt
xor
outsl
adc
mov
icebp
push
aas
lds
ja
lret
faddp
sub
sbb
jecxz
mov
lods
pop
sub
inc
and
test
loopne
and
aam
in
push
pop
mov
negb
sub
jb
inc
jae
pop
hlt
push
mulb
or
jmp
fcmovne
ret
and
stos
ds
js
sbb
lock
loope
test
shll
mov
std
lret
cwtl
outsb
pusha
mov
push
sti
xchg
mov
mov
pop
orl
adc
or
dec
lds
adc
jno
cmp
jo
pop
and
sbb
dec
cmp
aad
xchg
decb
cwtl
dec
out
imul
jmp
pop
add
loop
sub
dec
ja
or
fwait
xorl
cs
aas
jb
push
fcmovnu
xchg
out
fdivs
scas
inc
pusha
jge
cs
in
add
push
pop
add
js
mov
fsubrs
adc
std
insb
dec
or
mov
stc
aaa
mov
rcrb
jle
pop
lcall
push
cmpsb
je
adc
push
mov
and
fwait
scas
lret
ret
jl
inc
sub
pushf
and
outsb
stos
mov
pop
aam
xchg
iret
mov
jb
aad
pushf
xor
fisttpl
push
mov
test
mulb
lea
and
cs
cmpsb
cs
test
cmp
or
mov
mov
stos
mov
mov
cmc
xor
sahf
pop
and
stc
aam
push
sahf
jno
fsubrl
test
test
push
jae,pt
and
jmp
leave
bound
pop
mov
ja
sub
sbb
add
jae
shlb
aas
movsl
inc
addr16
push
adc
jae
dec
and
repz
dec
cmpsl
fisubl
add
dec
push
push
xchg
pop
xor
push
push
shll
dec
jnp
adc
add
pop
pop
loop
cwtl
fs
push
fsts
pushf
adc
aaa
jno
fwait
or
dec
cmp
push
mov
insb
je
xchg
sbb
mov
and
outsl
and
fsubs
xchg
dec
pop
pushl
inc
inc
push
inc
fcmovnbe
mov
jecxz
div
pop
pop
inc
ja
sbb
adc
mov
enter
fists
pop
cltd
movb
pop
inc
mov
xor
sub
imul
cmp
pop
dec
movntps
cltd
ret
jmp
push
lea
fbld
icebp
sahf
data16
stos
aas
scas
imul
add
test
sbb
pop
xchg
inc
push
cmp
sbb
xor
and
repnz
add
sub
adc
dec
sub
into
sahf
in
out
lahf
sbb
mov
fcoms
fdivrs
dec
mov
xor
add
xor
sahf
mov
gs
or
push
sbb
pop
jge
idiv
lods
loope
mov
xchg
lret
push
xchg
scas
jp
out
jnp
push
std
imul
dec
add
in
shl
shll
and
cmp
scas
mov
mov
push
sub
mov
fwait
mov
rorl
and
mov
gs
ret
push
jmp
mov
pusha
les
insl
icebp
mov
mov
push
inc
cmp
mov
aaa
mov
loopne
ljmp
dec
mov
leave
and
ficoml
int3
pop
outsl
xorl
test
adc
jns
nop
adc
js
test
lods
ja
lea
mov
jbe
in
sbb
scas
lods
lret
jmp
mov
pop
icebp
inc
sub
insb
jg
pop
mov
push
and
mov
fsub
sub
jle
fs
inc
xor
cmp
ret
dec
adc
scas
fcompl
imulb
test
test
shlb
add
lods
mov
and
dec
movsb
cmc
scas
fildll
or
ficomps
mov
je
sub
loop
sub
mov
into
mov
xchg
sbb
or
add
jbe,pt
les
fwait
daa
out
cwtl
mov
sub
push
xchg
out
xor
lcall
xchg
dec
clc
push
out
mov
cltd
icebp
and
or
loop
outsl
int3
xchg
jno
daa
cwtl
clc
inc
xchg
and
pop
jp
pop
mov
js
dec
gs
mov
imul
pop
fimuls
cmc
mov
sbb
outsl
xchg
cli
mov
pop
xor
pop
pop
xchg
lahf
push
xor
jl
mov
leave
or
xor
jne
lret
in
pop
aad
push
movsb
ss
lret
icebp
stc
cli
ret
das
cmpsb
push
out
cltd
push
dec
stos
jnp
mov
fisubs
mov
xor
or
cmp
push
and
xchg
push
hlt
les
mov
fildl
mov
popf
push
sub
adc
sub
lcall
mov
jo
cmp
and
sub
mov
insb
nop
out
orl
test
test
sbb
cmpsb
push
or
push
pushf
fstps
ret
fcmovu
rorl
xchg
movsl
xor
inc
movsl
lea
push
mov
pushl
out
xchg
adc
and
addl
loopne
cltd
and
mov
xchg
je
mov
dec
inc
dec
adc
aam
inc
fs
into
int3
test
inc
popf
mov
adc
sub
in
outsl
inc
pop
dec
or
jo
dec
push
mov
in
stos
dec
add
outsb
or
add
rorl
adc
sub
sub
cmp
popa
out
dec
sub
inc
jecxz
shlb
add
xchg
in
cmp
outsb
and
sbb
stos
loopne
shrb
outsb
sub
mov
mov
inc
dec
xor
shl
mov
clc
sub
pop
mov
jnp
mov
dec
popa
jns
mov
xor
dec
xchg
dec
mov
and
fadds
or
or
push
adc
js
pop
sub
mov
stos
mov
pop
jmp
sub
push
std
add
iret
adc
movsb
xchg
xor
or
sub
arpl
push
scas
fidivs
xchg
mov
cmp
jecxz
adc
sbb
inc
repnz
fnstenv
sarl
lcall
imul
xchg
push
les
ret
inc
xchg
inc
sub
inc
ret
cmc
cs
add
adc
fldt
xlat
push
ud1
shll
dec
lahf
lret
jns
jns
loopne
pminub
call
push
jp
pop
lds
mov
add
push
in
leave
ror
sub
sub
jmp
mov
in
mov
xchg
cs
jbe
sub
add
inc
dec
adc
lea
icebp
push
cmpsl
addb
pop
cmpb
arpl
fstpt
sub
js
dec
jne
pop
scas
adc
les
pop
adc
mov
enter
jnp
add
je
push
test
dec
xor
in
pop
mov
insl
ror
or
cld
test
stc
dec
mov
xchg
jg
jp
in
inc
mov
fucomip
push
push
aad
xchg
pop
leave
or
pop
arpl
mov
jge
je
sti
repz
inc
jmp
add
lea
push
cmp
and
ret
stos
int3
sbb
jno
mov
xor
jb
or
xor
es
ret
jmp
or
mov
les
cmp
popa
sub
pop
in
imul
fwait
bnd
aad
std
outsb
or
scas
mov
mov
aaa
in
sbb
jle
push
in
inc
jbe
test
dec
leave
imul
pop
xchg
shll
cwtl
in
inc
mov
push
das
jb
das
inc
add
pop
rorl
btc
ds
dec
es
loop
sub
dec
and
xor
test
cmp
mov
out
mov
mov
orl
cmp
push
popf
sbb
movb
sbb
xor
andb
jb
dec
addr16
jge
cmpsb
adc
lret
fmulp
xchg
je
sbb
xchg
call
and
pop
std
out
insb
out
mov
aaa
mov
sub
ds
fstl
push
mov
jle
inc
out
mov
cwtl
pusha
mov
lods
rorb
lods
pop
idiv
mov
sbb
dec
je
out
push
loope
or
daa
xor
movsl
push
call
push
loop
xor
sub
or
ja
pusha
cwtl
adc
inc
in
and
dec
cmp
das
xor
push
loopne
loopne
in
std
jle
test
out
jle
cmp
test
mov
add
adc
sbb
movzbl
loope
mov
mov
adc
dec
jbe
adc
sub
adc
bound
rorb
mov
aad
xor
sti
pop
nop
jbe
pop
pushf
sub
mov
ret
shl
enter
cmpsl
add
test
inc
stos
rcl
inc
or
rolb
jg
out
dec
dec
mov
mov
es
jnp
mov
xchg
adc
and
inc
insb
pop
adc
int3
sub
int
scas
push
and
mov
xor
icebp
lret
cmpb
push
dec
inc
loop
outsb
lock
or
pop
adc
and
mov
faddp
pushf
jecxz
mov
stos
add
and
sbb
pop
cmp
pusha
outsl
mov
mov
adc
xor
rcrb
mov
xchg
sbb
mov
adc
jbe
lret
sub
push
or
sbb
leave
or
dec
cmc
fwait
roll
add
mov
ficoml
out
mov
jle
es
mov
repz
pop
stos
test
clc
jg
pop
mov
adc
lds
rorl
xorb
scas
adc
mov
shll
xchg
mov
movsl
rcrb
jno
or
jecxz
mov
ret
int3
addr16
in
nop
dec
adc
outsl
in
mov
or
pop
fistps
or
cli
loopne
jbe
push
pop
cmpsl
inc
divb
int3
add
fsubs
sub
cld
xor
sub
mov
jge
in
cmp
fisttpl
and
push
xchg
push
sbb
cmp
inc
dec
test
xor
movsl
shrb
bound
jmp
shr
lds
lods
shrb
test
addr16
loopne
imul
add
add
in
pop
push
les
notl
mov
repz
add
xchg
mov
sbb
inc
movsl
addr16
in
xchg
das
lret
push
ret
icebp
push
jns
add
push
int3
cmp
lcall
into
cmp
popl
push
nop
les
sbb
xchg
fldt
push
pop
cmp
arpl
jg
ss
ret
push
sbb
xlat
daa
push
mov
pop
stos
jno
push
cwtl
out
jge
xor
mov
jge
jle
pop
fidivl
fsts
and
xor
jb
out
imul
movsb
adc
adc
cmc
mov
das
insl
ja
icebp
xor
pushf
jb
sub
cmp
cmp
fisubl
stc
add
inc
mov
or
stos
outsl
cmp
add
lds
inc
into
jg
push
lds
in
push
mov
cltd
sahf
pop
test
bnd
inc
test
mov
jb
push
sub
mov
pop
xchg
movsl
xor
and
mov
mov
push
mov
loope
cmpsl
pop
xchg
ror
pop
aad
cmpsb
gs
in
in
and
pop
inc
stos
rcl
addr16
and
or
xchg
dec
out
pop
fsubl
push
xchg
mov
push
dec
aam
ret
out
mov
xchg
in
cmp
nop
addb
fwait
cmpsb
int
pusha
outsb
test
add
sti
icebp
rcrb
mov
jno
mov
fbstp
cmc
add
sub
loopne
cmp
xchg
or
lret
and
sub
test
or
adcl
in
add
dec
mov
imul
xchg
divl
push
movsl
jo
test
movsl
aaa
mov
mov
fld
xor
add
out
inc
lock
notb
cmc
mov
mov
sbb
div
out
dec
mov
adc
dec
leave
je
imul
fisubl
mov
inc
adc
movsl
sbbl
xchg
mov
enter
inc
mov
or
hlt
js
mov
mov
sbb
sbb
repz
addr16
ds
loopne
push
cli
lahf
pop
ret
add
mov
aad
shlb
mov
adc
aas
in
movsl
adc
into
pop
insb
inc
xor
pop
add
repnz
pop
icebp
dec
and
mov
outsb
test
arpl
pushf
orb
loope
shll
outsb
shr
pushf
push
ds
sub
fsubrs
xor
lahf
insb
jecxz
or
icebp
inc
adc
pop
dec
jmp
sahf
xchg
out
xor
ja
mov
cmp
fst
into
test
jecxz
xchg
fisubrl
pop
xchg
push
in
imul
sbb
push
inc
mov
divb
xchg
fcomi
sub
lods
sub
and
loopne
sub
xor
xchg
and
fsub
sahf
por
aam
cmp
xchg
lcall
das
aad
addr16
lock
rcr
fisubl
stos
inc
iret
mov
out
xor
ja
aaa
dec
jl
sti
pop
add
xor
xchg
call
pop
adc
jmp
pop
push
rcr
rcr
or
dec
test
or
je
push
roll
or
inc
inc
out
xchg
pop
test
xchg
hlt
test
mov
lret
jg
xchg
hlt
mov
push
inc
out
test
ljmp
lret
stc
mov
jecxz
push
cli
stos
js
push
ja
adc
jle
mov
popa
ret
mov
add
gs
aas
mov
jg
orl
movsl
aam
sahf
add
mov
cli
test
adc
and
or
aaa
shr
cmp
push
mov
iret
mov
into
jno
ss
mov
cmovbe
xor
cmp
xchg
jae
hlt
fs
mov
enter
dec
pop
push
add
mov
stos
dec
outsl
orl
test
ds
cwtl
pop
xchg
push
imul
divb
in
jge
dec
shll
inc
lea
mov
fisttpl
dec
sar
adc
jnp
xchg
sbb
int
mov
mov
dec
jge
push
xchg
rcr
call
push
stos
fwait
xor
inc
lret
fs
movsl
add
pop
push
push
sar
test
mov
mov
jp
cmp
sar
lods
sbb
lea
shlb
fsubrl
xchg
dec
cmp
std
jecxz
add
daa
mov
lds
mov
fldl
mov
xor
xor
sub
and
int
imulb
int
cmp
insb
imul
popa
and
or
fs
add
push
bound
inc
lcall
testb
lods
lcall
icebp
cmp
psraw
or
and
mov
add
jne
aaa
lret
add
mov
add
imul
xor
jecxz
mov
cmc
mov
paddw
mov
arpl
repz
testl
mov
movsl
fsubp
ja
xorl
jnp
lods
arpl
ja
out
sub
pop
jae
add
mov
js
sub
lahf
out
fadds
mov
adc
mov
fildll
aaa
ja
pop
push
jp
cmpsl
std
sub
wrmsr
lea
and
filds
vpminub
pop
outsb
mov
rcrb
jecxz
jnp
dec
cmpsl
fstpt
pop
cmp
dec
js
lds
test
ret
add
mov
xlat
sub
sbb
in
add
cmp
mov
xchg
add
subb
in
imul
inc
mov
cs
fimull
mov
dec
and
jo
subb
ret
push
sbb
scas
adc
scas
test
aaa
pop
das
fwait
pop
jbe
stc
push
inc
sahf
dec
push
stos
fstpl
cmp
mov
xchg
cmp
fidivrs
pusha
sar
pop
push
loop
pop
fmuls
roll
mov
cli
jg
adc
clc
lods
addr16
ret
sahf
add
cmc
push
movsl
bnd
or
loope
jle
andl
adc
push
sti
jns
mov
sub
or
mov
xchg
lods
jo
out
and
ljmp
leave
jb
ror
repnz
in
mov
data16
xchg
daa
cmp
mov
arpl
pop
xor
movsb
sub
pop
out
pop
fstl
push
push
popf
jp
dec
imul
xchg
pop
push
adc
iret
cmp
pop
daa
sbb
in
cld
and
add
jle
sbb
or
fsubrl
ficoms
jg
push
cmp
or
lret
sbb
dec
inc
out
dec
jno
add
and
dec
xor
scas
dec
fstpl
ljmp
lcall
mov
test
stc
sbb
mov
jo
and
or
dec
push
push
scas
mov
imul
fwait
jmp
scas
xor
fucomi
sub
sahf
inc
sub
mov
shl
inc
xchg
imul
dec
outsl
pop
mov
ret
test
and
adc
mov
popa
dec
cmp
lahf
mov
int3
pushf
ret
sbb
cmp
xor
iret
mov
iret
mov
jb
rol
jne
jne
add
jge
daa
add
je
fildl
add
xor
ret
cmp
adc
add
sub
push
ss
xchg
aaa
clc
sbb
ljmp
sub
dec
lods
inc
aam
inc
loopne
dec
lcall
jecxz
sbb
jmp
divb
and
cmp
popa
aaa
cwtl
xchg
xchg
std
test
adc
leave
pop
mov
in
mov
jae
lret
xlat
fistps
fwait
cmp
push
xor
push
xchg
in
fisubs
mov
xor
mov
xchg
mov
add
stos
in
dec
jae
push
mov
orl
jl
xchg
cmp
sbb
xchg
lret
dec
insl
pop
sub
inc
repnz
jge
or
sub
pushf
aaa
jne
cli
imul
stos
dec
lock
mov
int
hlt
add
popa
daa
ja
aam
cs
ficompl
pushf
fucomi
or
mov
inc
rcrb
dec
xor
data16
add
cmc
pop
add
in
dec
nop
out
leave
mov
aaa
mov
jp
push
dec
cmc
lds
test
das
mov
xchg
pushf
xchg
lcall
jno
clc
scas
shr
push
mov
mov
shl
or
je
pushf
std
loope
hlt
out
mov
adc
lcall
mov
int3
ret
lea
daa
or
cmp
mov
fstp
pusha
lods
pushf
cmpsb
lcallw
mov
mov
out
or
outsb
add
dec
iret
popa
pop
fldl
rcl
pop
sbb
pop
cmpsl
pop
cmp
sub
pop
lock
loope
push
popf
lcall
test
dec
popf
lock
and
outsb
ret
jo
rclb
ds
and
scas
adc
ja
cmp
outsl
das
cltd
and
shll
inc
fnstcw
mov
push
dec
cwtl
push
mov
jecxz
push
xor
pop
stos
xor
jno
bound
inc
jbe
fistps
pop
out
cmc
push
fs
jnp
xlat
fwait
sub
in
fdivs
xor
jns
movb
fmull
je
adc
sbb
shlb
xor
pop
sbb
cmp
nop
addr16
sbb
or
shll
adc
ret
pop
outsb
mov
jnp
mov
or
push
outsl
mov
punpcklwd
jmp
add
jl
dec
pop
movsb
push
sbb
adc
and
shlb
movsb
lret
in
sub
adc
lea
xchg
xchg
cmp
imul
mov
pop
xor
addb
push
push
fisubl
lret
mov
adc
shll
add
cmpsl
cmpsb
sqrtps
mov
mov
mov
rcrl
pop
fstpt
xor
shll
mov
xchg
add
lds
or
imul
jne
xchg
cltd
cmp
xchg
jmp
dec
sub
xchg
xchg
adc
imul
xor
or
fcoms
fs
outsl
cli
stc
xor
movsb
sbb
inc
popa
mov
mov
stc
mov
icebp
inc
daa
cs
jg
push
iret
jmp
insl
inc
push
popf
dec
not
mov
xor
lock
call
leave
lcall
enter
in
xchg
adc
jne
frstor
inc
insb
icebp
leave
push
pop
add
sbb
sub
dec
arpl
inc
and
jg
sbb
mov
std
fsub
lea
mov
or
add
daa
ret
mov
or
aad
ffreep
mov
das
in
mov
mov
mov
cli
je
inc
push
push
and
push
jecxz
loopne
and
sbb
mov
jecxz
inc
mov
or
insb
and
cmc
push
inc
pop
test
or
bnd
out
inc
lods
popf
xor
xor
stos
xor
cmp
xlat
push
push
ljmp
jp
push
cmpb
mov
adc
or
scas
pop
fwait
ja
mov
addr16
push
sub
mov
in
push
mov
sub
fwait
add
sarl
adc
push
mov
js
test
inc
and
and
nop
adc
inc
call
stos
jp
xchg
cmpsb
adc
dec
cmpl
nop
lcall
mov
outsb
push
int3
and
xor
outsl
mov
push
stos
xchg
popa
mov
cmpsb
and
fnstsw
jnp
cwtl
jle
adc
mov
insl
mov
pop
mov
cmp
pop
add
popf
lods
add
testl
jg
cmp
incb
inc
out
cs
and
lea
stos
jecxz
inc
mov
pop
mov
sahf
pop
pushf
sbb
loop
pop
icebp
sub
sub
hlt
data16
pop
push
mov
dec
cltd
xchg
pop
and
mov
sbb
test
cld
pop
adc
sub
mov
sub
xchg
aam
sar
gs
into
mov
movsb
add
stos
subb
movsl
add
icebp
rorb
xor
jmp
insl
pop
fsubs
subl
sub
into
sub
mov
in
mov
idiv
ret
xchg
adc
sub
stc
dec
push
pushf
mov
lcall
adc
nop
dec
fists
fstpl
cmp
imul
hlt
dec
push
in
xor
test
sub
mov
ret
data16
hlt
jnp
add
jge
xchg
movsb
insb
imul
xchg
dec
dec
outsl
cmp
clc
adcl
inc
sbb
inc
xor
sbb
stos
loope
push
mov
fcompl
in
xchg
pusha
add
test
and
jecxz
mov
cmpsb
xor
pop
mov
fisubs
xchg
add
imulb
repz
lcall
pop
je
xor
hlt
iret
fdivrl
mov
xor
test
icebp
sbb
mov
and
pop
xor
dec
pop
pop
je
cmp
sub
cltd
dec
inc
imul
mov
cmp
jecxz
in
gs
dec
and
out
sub
mov
ljmp
xor
ljmp
jne
in
and
inc
pushl
add
mov
push
jle
push
std
shl
xchg
cmp
fs
insb
xchg
fwait
sub
rorl
shll
cltd
dec
sub
cs
hlt
jl
cltd
jg
pop
dec
lcall
aaa
dec
add
xchg
or
cs
mov
or
aam
popf
out
add
js
xor
mov
es
rcll
shl
inc
test
repz
mov
inc
jnp
xor
adc
and
push
jnp
add
mov
jl
jg
adc
scas
neg
xchg
push
cltd
mov
and
sbb
sarb
mov
or
sti
pop
lds
mov
xchg
pop
je
adc
je
add
enter
int3
add
and
push
insl
out
add
ljmp
and
push
movsb
xor
sti
loopne
fsubs
push
out
movsb
and
cwtl
sarl
rep
lods
mov
cmp
add
mov
js
add
ret
push
leave
pusha
std
test
fisttpl
loop
aas
ja
clc
inc
or
mov
adc
mov
movsb
aam
mov
xchg
jmp
out
sarl
cmp
mov
stos
inc
push
jmp
or
fadd
adcl
lret
push
cwtl
push
xor
lea
cmp
add
and
sbb
pushf
nop
lret
xchg
mov
jecxz
push
scas
test
dec
shlb
xor
mov
stos
sub
and
sbb
inc
loopne
xchg
lea
lcall
ds
sub
test
push
or
mov
or
insb
jl
pop
mov
scas
mov
ficomps
pop
shrb
mov
das
add
xchg
xchg
adc
sahf
cmp
or
xchg
insl
add
stc
call
xchg
ja
or
ss
andb
loop
xchg
or
cli
inc
aaa
or
cmp
mov
fsts
in
or
jns
xchg
jns,pn
push
shrl
les
adc
pop
mov
and
test
sub
jbe
mov
pop
pop
add
addr16
inc
mul
cmp
dec
sub
sub
clc
dec
xchg
mov
sub
addr16
push
sbb
mov
iret
ja
sub
and
lds
fs
push
inc
push
mov
sub
scas
rorb
mov
pop
sub
mul
jb
hlt
movsl
ja
call
lret
imul
gs
sub
sub
or
pslld
stos
mov
imulb
jbe
ljmp
xchg
or
and
jle
sub
cmpsb
sbb
fnstsw
fs
pop
mov
pop
iret
rcll
cmp
jecxz
push
nop
add
push
outsl
jo
nop
int3
mov
mov
jmp
aas
inc
ss
cmpb
lret
sbb
jl
adc
rolb
pop
testb
mov
divb
fninit
dec
stc
mov
iret
mov
hlt
xchg
xlat
mov
inc
and
xchg
in
sbb
sub
xchg
inc
fcomi
adc
mov
jecxz
fisubl
shrl
lds
add
cld
dec
in
lret
pusha
scas
lret
gs
dec
xchg
je
outsb
mov
stc
pop
and
int
jg
cmp
pshufw
cmp
out
es
sarb
in
sub
mov
and
mov
cld
out
push
xor
add
popf
pop
dec
mov
and
daa
inc
mov
mul
jae
cltd
dec
into
jge
test
lods
jge
or
sub
xor
mov
bound
jns
push
hlt
es
jne
shrb
andl
mov
jp
push
cmpsb
adc
loop
or
sarl
jno
out
repnz
popa
addr16
loope
and
xor
sarl
pop
mov
outsb
add
xsaveopt
fistps
arpl
ds
or
rcrb
out
lcall
push
jae
cltd
mov
subb
arpl
jbe
ds
push
scas
mov
jae
popa
add
mov
jl
ss
lds
js
aad
popf
sub
mov
dec
orb
cli
jnp
out
push
xor
add
jmp
cmpsl
push
aaa
add
adc
mov
jbe
out
lret
sub
add
fs
pop
dec
mov
inc
sub
push
lods
sbb
mov
or
xor
push
lods
mov
jno
push
dec
fistps
push
lret
sbb
dec
add
jo
outsb
xchg
cmp
insl
call
xor
repz
and
push
cmc
je
cmp
and
in
movsl
sbb
fisubrl
mov
insl
nop
decb
cmp
lea
add
mov
jbe
es
or
popf
rcll
clc
mov
cwtl
jmp
sub
or
sbb
push
es
pusha
insb
xchg
fstpl
jo
mov
push
popa
jae
or
dec
stc
push
pushf
daa
bound
or
fdivrs
jl
enter
imul
stos
cmp
cli
adc
fiadds
push
pop
fstpt
fbstp
pop
loope
imul
dec
xor
insl
in
push
int
cmp
jo
push
xor
repnz
mov
gs
mov
add
xor
or
adc
xchg
mov
mov
jg
fnstcw
cltd
dec
push
jae
dec
inc
loopne
jmp
arpl
test
int
mov
in
or
popa
out
stos
dec
inc
fstpl
pushf
and
or
pop
movsb
outsb
mov
repz
in
mov
sub
inc
ret
test
push
add
cmc
repnz
out
mov
jnp
out
pusha
or
add
fwait
mov
pop
mov
test
xor
pop
sbb
fmull
xor
test
xor
rolb
jno
mov
inc
xor
push
cmp
and
ret
mov
or
mov
and
fnstcw
aad
dec
out
push
adc
dec
sbb
jnp
sbb
pop
inc
adc
inc
pushf
fxch
shll
push
add
subb
pcmpeqw
lock
or
xor
pusha
pop
rorl
lods
sti
dec
push
ror
jge
cli
mov
sahf
dec
mov
mov
pop
data16
loop
js
push
dec
inc
xor
xor
js
sbb
add
ret
xchg
jecxz
push
inc
cmp
enter
jne
js
int
outsl
mov
fwait
inc
ficoml
pop
mov
cmp
pop
sub
add
mov
push
jb
in
xchg
xor
mov
mov
mov
mov
bound
es
repz
pop
dec
call
push
sbb
aam
mov
js
leave
js
loope
mov
add
cld
imul
and
mov
fists
rorb
cmp
shlb
cmp
ror
pop
cmp
mov
cmp
sbb
aaa
push
pop
int
mov
fwait
adc
pop
rcrl
push
mov
push
inc
mov
lahf
call
xor
sub
and
int
aas
pop
inc
xchg
lods
insb
mov
shll
xchg
std
push
mov
mov
lds
stc
cwtl
xchg
mov
push
unpcklps
cltd
iret
pop
xchg
pop
aam
out
jecxz
inc
aam
nop
mov
pop
scas
xor
mov
sub
mov
jbe
add
lds
lock
das
cwtl
testb
inc
xchg
mov
mov
je
js
mov
sub
sub
adc
dec
push
rcrl
icebp
lret
lret
mov
jo
lods
bound
cmc
in
jl
mov
ret
adc
aaa
jae
mov
int3
xchg
or
jp
inc
fidivl
lock
sub
dec
sti
fldt
xlat
pop
sub
lods
clc
jl
in
imul
xchg
add
mov
sbb
xor
lret
movsb
pop
push
popa
lds
jb
jne
lock
xor
aam
divl
roll
int3
jmp
dec
pop
sbb
sub
xchg
divl
xlat
pop
mov
push
or
ficomps
xchg
inc
fwait
or
lret
inc
mov
out
adc
pop
jno
ss
jnp
bnd
mov
jl
add
push
jmp
mov
lahf
pushf
mov
mov
es
mov
sbb
fidivs
xor
test
movsb
pop
sbb
pushf
loop
loop
sub
xor
dec
ret
add
adc
push
pushf
xchg
mov
or
pusha
mov
aad
push
aad
sub
pop
stos
loop
and
inc
xchg
xor
out
mov
icebp
repnz
rolb
mov
xchg
dec
cltd
sbb
pop
mov
mov
and
dec
mov
cmpb
inc
inc
je
cmc
scas
pusha
pop
ds
add
and
shrb
xchg
cmpsb
adc
fildll
add
pop
add
jo
aad
add
in
or
scas
add
repz
lock
int
sti
xor
adc
jae
jmp
pop
into
je
ljmp
xor
stc
jp
loopne
mov
xor
lock
fmull
mov
sbb
mov
jne
inc
jp
push
nop
mov
inc
stos
scas
dec
cmp
push
push
sub
mov
xor
xchg
pop
inc
pop
xchg
pop
cmp
pop
pop
loopne
add
mov
jle
cmp
sub
push
push
mov
pop
sbb
ret
mov
enter
repz
scas
leave
jo
adc
lret
push
fdivrl
aaa
movsl
pop
sub
xchg
adc
movsl
loopne
mov
inc
mov
sub
imul
sti
sahf
dec
loop
mov
test
icebp
addl
loope
sub
test
mov
fimull
adc
std
clc
xchg
adc
movhlps
mov
pop
sbb
mov
fwait
leave
fmuls
sti
imul
pop
test
adc
pop
jns
in
sbb
or
push
push
mov
into
sub
xchg
movsb
jo
insl
mov
test
outsb
pop
push
pop
out
or
sbb
xor
les
std
xor
mov
ret
jp
sub
mov
std
in
ret
ds
cld
jbe
cltd
sub
ret
adc
insb
mov
push
push
add
xor
dec
mov
sbb
pop
sbb
stos
xor
nop
xchg
lock
mov
data16
inc
clc
rclb
jo
outsb
cmp
cmp
roll
push
push
gs
inc
push
mov
hlt
sub
push
push
mov
xor
cmpsl
sbb
xchg
jne
das
mov
je
xchg
jecxz
popa
rclb
gs
mov
xchg
add
jl
lret
addb
pop
divl
sbb
test
gs
pop
test
outsb
mov
cwtl
mov
test
movsl
mov
int
jmp
sti
cmc
lock
sbb
pusha
jb
cmpsl
inc
jmp
dec
mov
lea
push
sub
shlb
imul
cltd
decb
shll
push
scas
jnp
jmp
mov
fists
xlat
jns
mov
mov
push
xchg
mov
adc
lret
incl
ss
lret
xchg
std
shrl
gs
xchg
dec
stos
stos
jmp
mov
inc
inc
xchg
and
adc
xchg
les
setbe
sub
xchg
in
cwtl
ds
pushf
sub
inc
fdivl
or
nop
inc
aaa
mov
jae
adc
adc
ds
ja
sbb
jbe
lcall
sub
push
jae
cs
lock
xchg
jl
movsl
pop
movsb
add
and
jne
mov
enter
sti
bound
pop
xchg
repnz
int
dec
les
jne
cwtl
testb
mov
and
lret
xor
mov
ss
notl
imul
add
btr
mov
mov
push
ss
inc
pop
xorl
dec
sbb
pop
jecxz
add
daa
pop
or
xchg
jge
repz
dec
mov
lret
dec
mov
icebp
mov
mov
fdivp
mov
push
xor
int
push
sub
shr
jno
stos
rcll
str
mov
pop
sub
mov
frstor
xchg
gs
xor
int3
xor
mov
fldcw
mov
dec
bnd
repz
jg
add
stos
add
jmp
cmp
mov
dec
add
es
fs
pop
pop
enter
mov
int
faddl
mov
popa
scas
mov
cmc
mov
iret
ja
lods
stos
int3
xchg
jl
std
shlb
jg
cld
or
int
mov
mov
pusha
inc
js
adc
loope
pop
mov
pop
xchg
inc
fs
sub
test
pop
les
mov
add
inc
cmpb
dec
jg
test
mov
cmp
pop
mov
jbe
jmp
dec
fisubs
mov
mov
xor
es
pop
lods
jnp
ljmp
incb
jecxz
aam
adc
or
ja
int
cs
icebp
scas
loope
jns
pop
outsb
or
add
movsb
xchg
jmp
scas
ficomps
pop
pop
xor
je
push
icebp
mov
lods
sahf
nop
mov
leave
sbb
inc
stos
cs
xchg
inc
sub
ds
add
scas
fwait
pop
test
mov
lds
jae
adc
jg
cmp
cmp
fsubp
lock
scas
and
add
xchg
cmpsl
lret
mov
jl
jno
fisubl
sbb
inc
in
cmp
push
lret
inc
sub
cld
sub
add
test
sub
lahf
mov
jb
test
bound
sub
jae
std
xchg
ror
add
int
in
lea
jmp
popf
dec
mov
jb
fs
test
ja
ror
inc
mov
divl
fadds
jle
pushf
popf
push
mov
pop
mov
mov
call
dec
inc
fcmovnb
scas
cmpsl
and
dec
fsubrl
popa
adc
mov
add
popf
fwait
je
pop
addl
cmpsl
lods
and
xor
orb
inc
das
xor
sub
xchg
inc
es
jg
push
pop
dec
and
inc
push
push
ljmp
fisttpl
les
out
bound
xchg
cli
and
fsubs
jmp
enter
xchg
xor
data16
cmp
lea
cwtl
ss
mov
das
movl
jmp
push
push
xchg
xchg
dec
xchg
lret
pop
and
add
xor
incl
push
sahf
pop
and
call
stos
scas
adc
pop
shll
call
xor
mov
js
adc
jae
push
mov
jae
cmpsb
enter
mov
into
out
je
sbb
mov
test
stos
jg
test
push
jo
sbb
sbb
xchg
outsl
cmove
rcrl
add
and
ds
lods
xor
mov
lods
test
xchg
inc
lods
adc
aaa
jl
pop
les
or
and
insl
jo
cmp
jb
adc
mov
das
push
aaa
pushf
nop
cmp
push
out
pop
dec
mov
dec
jp
bnd
xor
and
mov
dec
add
dec
inc
btr
movsb
je
sbb
rcll
xor
cmp
sub
mov
repz
add
aad
push
dec
inc
out
push
imul
cmp
jg
or
pop
dec
popa
mov
outsl
xchg
imul
aaa
mov
loope
shlb
aaa
sti
jp
xchg
test
adc
cmpsb
xor
dec
dec
in
pop
push
mov
pop
and
gs
shll
lcall
iret
imul
cltd
hlt
aaa
insb
mov
xor
pop
push
xchg
push
sub
dec
jb
xor
aad
cmpsb
jb
push
out
xor
xchg
stos
test
mov
popf
lds
cmp
pop
jo
insl
xor
push
mov
in
ljmp
dec
fwait
sbb
sbb
sub
fnstsw
xchg
xchg
pusha
and
daa
add
jmp
lahf
loopne
bound
pmaxsw
in
repz
add
xchg
xorb
test
pop
dec
push
xchg
xor
xor
mov
dec
inc
subb
paddq
xor
dec
pop
lahf
outsb
out
repz
sbb
stos
mov
pusha
sbb
shrb
push
leave
in
fs
mov
jb
out
or
or
outsb
cmp
ficompl
dec
int3
js
shlb
cmp
ror
sub
xchg
push
mov
push
into
nop
in
sub
cs
jae
push
lds
pop
out
cmp
scas
cmpsb
iret
decl
dec
push
addr16
movsl
or
leave
dec
outsl
pop
cs
out
lret
in
and
imul
inc
orl
shrl
movsl
in
mov
inc
test
and
fisttps
jmp
adc
sbb
test
and
xchg
sbbl
cltd
mov
jge
clc
mov
xorb
fisttps
or
jns
add
jge
pop
insb
in
incl
pop
adc
fistpl
dec
cmp
sub
clc
imul
mov
or
xchg
add
fwait
sub
jno
cmp
cltd
push
xchg
repnz
add
mov
stos
jbe
push
cld
fs
nop
adc
and
iret
adc
arpl
aad
adc
or
fisubs
cmc
cmpsb
sub
adc
mov
mov
mov
mov
jnp
daa
sbb
sbb
lods
test
jle
stos
aam
aaa
or
cmc
into
push
lahf
adc
loopne
xchg
dec
fldcw
gs
mov
pop
cltd
inc
cli
in
lret
cmp
or
movsl
loope
shll
call
mov
daa
mov
mov
push
leave
push
xchg
hlt
xor
push
std
aad
inc
lods
adc
mov
mov
jp
mov
test
jp
mov
lret
insb
faddp
mov
movsb
dec
xchg
roll
or
push
loopne
adc
stos
out
sbb
dec
push
mov
jnp
sub
push
cld
cmp
lods
cmp
mov
mov
mov
push
sub
ljmp
out
push
leave
fsubl
lods
jp
sub
mov
lret
js
es
les
mov
mov
xchg
push
daa
imulb
adc
lods
jmp
clc
insl
sbb
dec
lcall
xlat
leave
xchg
sbb
cmpsl
xchg
cmp
addr16
jg
add
flds
data16
sub
pop
jecxz
test
lods
lea
pop
movntps
cld
gs
xchg
call
fsubrs
push
adc
nop
mov
pop
rcrb
or
sub
push
mov
clc
mov
and
push
cmpsb
pop
inc
ja
in
insl
leave
mov
test
stos
and
inc
test
jnp
mov
mov
xor
addb
and
push
shrb
or
shr
daa
cmc
and
in
dec
or
xor
xor
push
mov
call
loopne
and
and
push
sahf
jmp
adc
mov
loope
cld
add
movsb
and
jg
push
adc
ss
cmp
call
pop
fistps
mov
outsb
out
and
notl
in
xchg
dec
popa
xchg
inc
sub
and
cmpsl
loopne
out
arpl
out
jb
es
jnp
enter
and
stos
in
mov
push
mov
dec
int
loope
das
stos
xor
cmp
mov
sbb
or
dec
adc
push
ja
jne
sbb
pusha
sub
cmp
fdivl
cmpsl
rclb
in
or
lret
fdivrs
mov
and
out
and
pop
jge
dec
insb
jle
imul
or
add
mov
cld
stos
icebp
gs
rorl
push
aad
push
mov
out
stos
and
pop
adc
shll
push
loopne
scas
and
aam
call
test
ljmp
mov
fstpl
pop
sub
xchg
lret
xchg
aam
fstpt
adc
push
inc
push
rorb
or
pop
loope
stos
pop
rcrb
lret
cmp
jb
jb
push
loop
in
add
js
sarl
std
add
mov
sub
aaa
jecxz
cmc
inc
xchg
push
mov
arpl
scas
bound
test
or
jmp
cmp
movsb
xchg
dec
mov
jno
and
adc
lods
addr16
mov
mov
pop
lock
dec
mov
and
inc
cmp
bound
mov
in
arpl
xchg
bnd
arpl
aad
int
int
mov
adc
repz
xchg
push
xchg
stos
fmulp
push
xor
jle
stos
outsb
add
push
xchg
andl
add
imul
push
xor
insl
js
inc
aam
dec
xchg
adc
sub
cwtl
push
add
out
jns
sbb
pusha
shlb
cltd
dec
arpl
outsl
sbb
mov
test
push
outsl
sbb
cmp
jmp
fucomp
sub
push
jl
je
jg
mov
shll
sbb
dec
adc
mov
imull
dec
jns
mov
sbb
mov
xchg
inc
fiadds
addl
xchg
fbstp
mov
dec
jge
inc
sahf
repz
std
mov
add
test
sub
dec
xchg
jecxz
dec
nop
sahf
sbb
pop
popf
jns
mov
ret
stc
stos
loop
cmpsl
movsl
test
rclb
aaa
out
insb
test
fs
orb
mov
dec
mov
das
xor
mov
jp
and
dec
add
jno
out
inc
repnz
add
arpl
add
les
jb
test
fisubrs
repz
scas
fwait
shl
or
rcll
push
mov
lock
mov
sbb
nop
fs
ljmp
aam
scas
and
mov
xor
imul
cli
scas
or
sbb
mov
stos
das
cmp
scas
loop
cmpsb
xchg
adc
mov
mov
pop
or
test
push
dec
mov
rorb
arpl
ja
data16
inc
cmc
dec
dec
lret
insl
cmp
sub
and
cltd
test
jae
lahf
sahf
movsb
hlt
sbb
cs
cmp
jbe
push
xchg
out
push
sub
jl
or
shrb
mov
inc
lods
fnsave
call
jbe
repz
sbb
ror
lcall
call
mov
cmp
and
shlb
xchg
xchg
leave
loope
mov
push
and
fildl
lahf
sbb
mov
out
mov
test
xorl
xchg
ja
mov
scas
mov
and
jo
sub
xchg
or
cs
loopne
rolb
pfrsqit1
cld
add
xchg
dec
ficoml
hlt
in
add
cmc
or
out
call
mov
or
fs
jae
xchg
xchg
mov
xorb
cmp
subl
fisubl
lock
in
pusha
jno,pn
fwait
sarb
ret
and
cs
cld
out
push
jmp
jmp
icebp
lahf
lahf
mov
jbe
mov
adc
cli
cmp
lods
xchg
dec
pop
stc
scas
das
nop
mov
je
out
addl
sahf
xchg
inc
push
jg
dec
xchg
lcall
xlat
pusha
push
aam
aam
add
sahf
testb
push
ja
push
jmp
pushf
pop
pop
jle
jno
xlat
xchg
jg
sub
add
mov
adcl
push
in
in
jmp
aad
jecxz
xor
aas
push
lea
sbb
xchg
mov
or
jne
lods
clc
test
lahf
pusha
xchg
stos
adc
cmp
add
cli
cmp
xor
das
sbb
mov
xor
push
push
or
sbb
inc
jbe
ss
imul
pop
push
xchg
xor
xor
sbb
nop
std
arpl
mov
pop
mov
mov
xchg
lahf
cmp
mov
insl
add
pop
sub
sbb
fcmovnbe
cwtl
mov
adc
jne
dec
pop
fdivs
pop
fidivs
mov
adc
dec
mov
mov
nop
test
pop
push
or
adc
fisttpll
cmp
xor
paddusw
jg
sub
ds
or
push
inc
stos
ljmp
push
outsb
or
mov
faddl
pop
xchg
inc
insl
dec
aad
out
fadd
and
call
neg
mov
pop
lret
rolb
les
dec
push
call
cmp
cmp
inc
inc
popw
ret
fadds
lea
sub
pop
xchg
xchg
mov
dec
xor
movsl
push
lock
popa
xchg
or
lahf
imul
je
fwait
jl
pop
push
and
lods
stos
sub
adc
and
stc
pop
and
jns
fadd
sbb
sub
add
jb
mov
lcall
jge
test
dec
decb
rcll
jmp
dec
pmulhw
jno
aas
jno
cli
xchg
clc
mov
imul
daa
sahf
cmpsl
inc
jp
int3
insb
jmp
jle
aam
inc
clc
and
mov
mov
out
cmp
mov
lds
mov
jmp
inc
nop
lods
inc
jge
inc
xor
rcrb
ret
and
pushf
aam
xlat
push
clc
xchg
movsl
fidivl
inc
pop
loopne
iret
test
pop
or
push
es
cmp
cwtl
push
sar
mov
add
stc
ficoml
jo
push
mov
sub
or
mov
dec
push
sub
inc
rcr
mov
lds
and
fldl
into
xchg
adc
iret
shr
loopne
dec
push
inc
sahf
ljmp
add
dec
data16
lock
mov
in
mov
sbb
pop
cmp
in
xor
adc
mov
and
lods
xchg
ret
cmpsb
pop
mov
nop
xor
pop
shl
sub
jae
lods
cmp
inc
movsl
filds
jo
pop
jbe
fildll
repz
pop
in
mov
xor
es
push
lock
adc
jae
jmp
sub
inc
lock
rolb
push
pop
push
or
or
fistpll
dec
test
je
jo
cwtl
aad
mov
stc
mov
xor
sub
jmp
aam
lret
add
leave
pop
cwtl
fwait
sub
ss
xor
mov
nop
movsb
jge
dec
loope
adc
cmp
je
aam
xor
inc
hlt
jecxz
jne
out
or
mov
lret
cltd
clc
movsl
addr16
fdivrs
mov
xchg
xor
pop
lea
mov
mov
xchg
ljmp
popa
test
xchg
pop
test
mov
nop
cmp
outsl
sub
andb
fisubrs
loope
lret
lds
sahf
inc
xor
in
cmp
dec
sub
mov
jb
ja
xchg
insl
dec
dec
rcrl
out
cld
cmp
push
out
pop
ss
jne
jle
das
rol
addl
add
js
stc
sbb
outsb
dec
scas
cmp
testl
mov
xchg
add
test
push
xorl
mov
and
cltd
mov
mov
pop
sbb
idivl
jae
cmp
test
and
imul
mov
sti
stc
jecxz
lahf
push
push
pusha
popf
js
adc
add
mov
call
jb
pop
lock
jl
scas
push
sbb
or
aaa
call
out
daa
jg
dec
sti
filds
cmpsb
and
pop
adc
out
shll
enter
sub
push
xor
scas
imul
cmp
cwtl
cs
or
mov
jbe
iret
adc
mov
neg
inc
mov
movsb
jle
into
xorl
or
lret
insb
shl
inc
mov
push
push
jg
mov
daa
mov
jecxz
pop
cli
daa
les
push
idivb
mov
xchg
mov
pop
mov
xor
outsb
or
gs
roll
jp
movsl
lea
mov
xor
pushf
gs
push
out
aam
pop
rclb
adc
xchg
dec
sbb
pop
popf
dec
mov
lea
cs
xchg
jae
loopne
stos
repnz
sub
mov
inc
shll
repnz
cmp
inc
jl
fnsetpm(287
mov
gs
push
mov
ret
adc
fcomi
inc
cmpsl
cmp
pop
jl
jp
imul
sbb
jb
pop
in
mov
pop
pop
pop
popa
loope
and
pop
inc
or
fstpt
mov
cmp
inc
jecxz
xor
mov
pop
xchg
rcll
mov
jne
push
xchg
sub
aaa
pop
lret
sub
fisubrl
jecxz
xchg
push
jp
add
jp
or
gs
sbb
dec
dec
nop
mov
jmp
add
jns
sub
push
dec
adc
addr16
mov
stos
ret
mov
rclb
pop
ds
inc
popa
pop
jne
mov
mov
stc
jae
mov
jb
or
mov
test
push
clc
ret
mov
bound
lock
imul
pop
imul
adc
and
xchg
adcl
popa
inc
inc
gs
add
jmp
and
inc
test
lods
lea
or
ja
xor
pop
push
icebp
stos
dec
dec
lcall
dec
add
enter
inc
inc
mull
xchg
sti
xor
or
je
jl
les
jle
adcl
mov
loop
rcr
dec
les
imul
push
adc
clc
leave
stc
xchg
pop
dec
pop
shrl
push
js
ret
out
mov
push
pusha
push
fs
cmp
add
inc
push
xorb
mov
xchg
add
add
arpl
jg
leave
mov
fwait
pop
test
filds
jp
mov
jne
xor
mov
xchg
xchg
mov
aaa
add
mov
lcall
loopne
ljmp
lcall
movsb
xorl
mov
lret
testl
test
jnp,pt
jl
popf
dec
push
loope
loopne
addr16
in
adc
dec
loop
mov
add
lock
mov
mov
fmull
aas
and
inc
mov
mov
xor
xlat
dec
push
movsb
out
push
pushf
xor
inc
lods
cwtl
icebp
insl
lods
fists
add
jbe
adc
xchg
mov
fbstp
shll
movsl
sbb
mov
lahf
mov
cmpsl
decb
test
cmp
popf
gs
iret
sub
mov
jno
inc
std
inc
push
icebp
pop
int
or
xchg
and
cmc
loopne
out
sbb
icebp
stos
movsl
rorl
cmp
nop
repz
adc
cltd
and
sarl
adcl
adc
mov
repnz
xchg
xchg
mov
xchg
add
cld
leave
fwait
push
push
ds
data16
mov
sub
lret
dec
sub
js
iret
mov
lods
mov
lahf
xor
dec
mov
jne
sbb
fidivl
lds
and
std
clc
mov
pop
push
xchg
lret
push
push
mov
gs
out
lret
add
fcmovnbe
jl
dec
ds
andl
push
xor
inc
out
xor
inc
leave
add
pop
fisttpll
out
subl
std
cltd
sbb
cmp
fnsave
icebp
lock
inc
outsl
adc
pop
add
sti
daa
mov
lahf
std
add
pop
jp
xchg
aad
add
xor
out
lcall
popa
stos
jmp
jns
xor
aam
mov
imul
jg
test
out
lds
jae
inc
ret
stc
xor
lea
mov
sub
in
pop
mov
imul
sar
sbb
enter
and
mov
dec
hlt
xor
in
sub
cmp
pop
je
xchg
test
xor
jle
mov
pusha
mov
xor
push
loop
jmp
ja
jg
xchg
push
mov
daa
push
cs
mov
mov
popa
cmc
push
jecxz
mov
popf
std
push
dec
std
stos
xor
pop
jmp
mov
fwait
xchg
jl
popa
sbb
cmpsl
cmp
add
pop
xchg
in
xchg
dec
stos
and
popf
lret
bound
dec
adc
dec
cmpsl
loope
aas
outsb
cmpsl
arpl
shlb
add
push
inc
pop
fsubl
add
ret
aaa
pusha
inc
pop
aad
jge
xchg
scas
movsb
stc
loop
mov
aas
mov
movsb
cmpsb
add
cs
xchg
pop
or
cmp
and
test
cld
jge
fwait
adc
outsb
push
or
cmp
ds
inc
sub
sbb
jle
das
aas
mov
fnsave
jmp
inc
pop
xlat
gs
inc
in
cmp
jno
add
testb
jle
fldcw
xlat
jecxz
dec
lret
movsl
popa
negb
cmp
cmp
push
mov
xor
mov
or
pop
inc
cli
or
xor
bound
mov
lahf
fisubl
test
fisubrs
sarl
mov
pop
push
pop
push
mov
xlat
mov
aad
repnz
jbe
dec
ja
cmpsl
adc
addr16
pop
xchg
push
cmp
sahf
push
mov
mov
jge
lods
sbb
jle
cmp
cmc
mov
xor
and
pavgb
xchg
fbstp
jo,pt
jp
or
xor
xchg
push
dec
int
ljmp
cmp
mov
lret
je
ss
fidivl
movsb
ss
pop
in
fs
sahf
pusha
mov
imul
push
and
ds
sbb
inc
les
std
mov
sbb
outsl
adc
outsl
jle
movsb
sub
mov
xchg
cli
hlt
sub
cmc
mov
pop
push
jb
scas
mov
js
aaa
sbb
add
jo
mov
mov
xchg
dec
pusha
sub
cld
addr16
fwait
pop
in
mov
and
adc
xlat
push
jb
pop
hlt
outsb
lds
stos
rorl
adc
cmc
ss
xchg
jp
push
stos
sbb
call
or
mov
shrb
sbb
mov
adc
lea
test
sub
loopne
nop
ficoml
push
sbb
test
cmc
les
ss
mov
and
mov
xor
push
fs
mov
push
xchg
add
or
xlat
cmpsb
data16
sbbb
mov
pop
jge
imul
iret
or
add
jp
aam
mov
into
cmpb
dec
sub
lahf
add
popa
gs
imul
insb
mov
and
sbb
push
insb
push
test
std
lea
cmpsl
pop
outsl
cmp
inc
jle
leave
loopne
jno
sti
or
lods
mov
sbb
inc
loope
add
inc
or
push
push
adc
outsl
xor
mov
idivb
xchg
cmp
mov
cld
lret
std
out
mov
fiadds
lods
out
sbb
mov
sahf
push
lret
jge
adc
mov
add
rcl
adc
shrb
mov
outsl
push
adc
movsl
mov
shlb
repz
push
int3
outsb
scas
adc
out
mov
mov
dec
mov
loopne
loop
imul
and
stc
andl
faddl
and
jbe
dec
pop
iret
xor
xor
push
addr16
mov
push
jmp
hlt
jp
add
xchg
add
stos
jle
stos
in
jbe
int
dec
xchg
aam
push
pop
loope
jae
fs
fs
mov
je
xor
push
daa
outsb
cltd
mov
jnp
dec
ja
iret
lods
jmp
cmpsb
lds
cmpsb
mov
repnz
clc
cmp
cld
cmp
push
sub
push
lcall
push
lret
xchg
shll
into
adc
leave
inc
fidivl
mov
mov
push
cltd
push
lds
lods
sub
test
nop
rorl
arpl
jg
fsts
lock
jp
lahf
jmp
lea
mov
sbb
cmp
out
daa
mov
out
inc
sbb
mov
pop
add
xor
arpl
ljmp
insb
push
sbb
mov
arpl
pop
fisubl
scas
adc
out
sub
pop
mov
test
fwait
jbe
or
xchg
jmp
leave
aam
or
rolb
stos
fwait
jecxz
jb
aas
flds
out
xchg
xchg
mov
cmpsb
pop
cmpsl
sub
cmp
jl
jp
imul
xchg
cwtl
cli
stos
sub
out
int3
sbb
int
dec
xor
je
mov
sub
fldl
test
ljmp
inc
adc
pop
xor
adc
in
or
in
push
lcall
fsubl
daa
jo
and
mov
and
sub
ja
ja
fcmovnb
je
jle
jbe
xchg
mov
in
sub
mov
xchg
lret
pop
jns
pop
and
push
lock
mov
in
insl
or
fstpt
jmp
xor
dec
sti
mov
xor
xorb
roll
mulb
and
or
cmp
adc
adc
push
xlat
ljmp
inc
out
aas
xchg
mulb
ljmp
sub
mov
out
std
pop
sahf
sbb
insl
repz
mull
xchg
loopne
dec
mov
adc
fdivl
mov
lahf
push
add
xchg
jo
aad
mov
or
mov
xchg
loopw
scas
mov
mov
add
testb
in
sbb
loope
push
xchg
xchg
pop
cmp
nop
imul
enter
jle
cld
add
pop
addl
jb
test
fwait
pop
ret
mov
and
jle
je
xchg
pushf
adc
out
mov
xchg
hlt
push
test
sti
adc
inc
sub
cmp
jbe
js
mov
fldl
cmp
adc
mov
int
sbb
ljmp
and
mov
loope
leave
mov
dec
sbb
add
popa
xchg
adcb
lret
dec
repz
or
das
push
mov
in
cltd
jl
sbb
jno
cld
inc
scas
cld
ljmp
add
mov
arpl
pop
in
inc
in
in
clc
imul
das
loop
stos
push
sbb
xchg
icebp
jb
push
sbbb
insl
sbb
add
pop
mov
leave
xchg
cwtl
adc
out
jb
dec
cmpsb
stos
aad
add
imul
and
or
loope
adc
insl
mov
sbb
sbbl
jl
rcll
and
add
nop
gs
jo
outsl
lock
cli
push
jecxz
jne
push
sti
sbb
mov
mov
int
inc
repz
jae
in
div
lcall
rclb
cli
mov
xchg
and
xchg
mov
cltd
or
jne
rorl
dec
fcmovnu
mov
int3
or
push
add
call
in
mov
test
mov
or
jl
test
cmc
xlat
jno
sub
cmp
add
xchg
std
xchg
fildl
sbb
iret
imul
adc
ja
lcall
sahf
dec
mov
in
scas
mov
sbb
int3
stc
test
mov
sbb
xchg
pop
pop
or
push
push
aas
ja
dec
jb
pop
outsl
hlt
inc
fwait
lock
and
xor
inc
aaa
or
ffreep
mov
mov
jmp
jno
idiv
test
fadds
fdivr
push
push
mov
rcrl
sahf
hlt
xchg
mov
jae
or
sbb
es
pop
mov
in
adc
dec
ljmp
mov
pop
aad
ret
cwtl
xchg
pop
sub
inc
icebp
fmull
mov
jnp
sub
pop
ja
int3
cmp
and
xor
divl
fwait
xor
rolb
neg
mov
pop
addb
int
aad
outsb
or
daa
ds
mov
mov
adc
mov
inc
stc
imul
fwait
lds
pop
aaa
call
and
xchg
cmp
xchg
or
inc
cmc
inc
mov
xchg
std
pusha
ret
jae
cmc
sub
jp
shrl
test
call
jo
shrl
xchg
sbb
push
data16
or
ja
sbb
mov
inc
jno
imul
push
mov
dec
push
repnz
or
int
dec
outsb
mov
pop
cwtl
ss
cmc
imul
adc
mov
push
adc
mov
xor
dec
xor
decl
jnp
sub
cld
jb
lea
mov
mulb
aaa
fs
mov
sbb
in
pushf
mov
insb
std
fdiv
sbb
repz
sub
and
inc
sub
cmp
outsb
lds
sub
xchg
pusha
and
mov
imul
lods
and
jl
add
or
lods
mov
inc
cmp
push
push
movsl
nop
pop
jmp
sbb
orb
js
sbb
repz
pop
ficoms
lret
inc
movsb
xchg
mov
insl
loopne
fiadds
popl
sub
jae
cmp
xchg
xor
sahf
push
inc
inc
xchg
jp
jbe
loope
ret
cmp
adc
stos
push
and
fcos
jmp
js
insb
int3
imul
mov
adc
notb
xchg
mov
push
les
repnz
rolb
xor
or
mov
adc
out
addr16
push
cli
push
dec
inc
add
jecxz
movsl
dec
or
and
fsubrl
sbb
pop
sub
iret
mov
mov
js
or
cmp
push
iret
add
jae
outsl
shrb
xchg
cmp
jmp
push
add
int3
pop
mov
adc
xor
cltd
out
inc
inc
gs
ror
push
jne
pop
and
out
jle
fsubrl
add
mov
cmp
outsl
mul
xchg
inc
ds
mov
jns
pop
push
fstl
hlt
or
or
test
aas
pop
add
ficompl
out
adc
outsl
adc
mov
add
sahf
add
test
add
push
add
aaa
inc
xchg
popf
pop
cli
lea
mov
xchg
mov
push
mov
sbb
mov
sbb
repnz
add
push
adc
push
add
sbb
int
sub
add
jmp
cmp
xchg
fidivrs
inc
roll
sub
fwait
dec
push
push
orb
jne
out
arpl
sbb
cs
pusha
adc
jns
int3
push
sub
xor
aaa
xchg
dec
or
jnp
pusha
arpl
pop
leave
jge
jecxz
test
inc
inc
add
popa
insb
sarb
push
add
push
repnz
int
jle
mov
divl
mov
push
cmpl
cmp
add
shrb
xor
sbbb
xor
sub
push
mov
les
sti
aam
xchg
mov
ret
mov
inc
in
cmp
sub
push
sbb
xlat
lock
notl
loop
imul
popa
cmp
mov
pop
lods
mov
xchg
andl
lock
xor
jno
mov
shlb
jp
shrl
xor
push
jp
and
loop
or
adc
repnz
or
adc
sub
mov
mov
mov
jne
pop
xor
sbb
xchg
ret
push
clc
cmp
ljmp
xchg
mov
mov
roll
adc
push
dec
pop
test
sub
adc
dec
push
rcrb
or
imul
lea
cs
lret
les
shlb
sub
scas
mov
xor
mov
fs
jbe
out
jne
subl
jg
aas
dec
fisttpll
fwait
add
push
in
mov
and
and
xchg
out
repz
lods
ss
mov
inc
inc
push
shlb
sub
pop
cmp
iret
and
xlat
push
dec
ret
push
repnz
in
inc
aaa
sub
sbb
cli
outsl
leave
scas
fimuls
stos
xor
mov
mov
fdivl
or
xor
jecxz
mov
das
inc
out
gs
fnstenv
lret
add
jo
jmp
fstl
mov
cwtl
and
fadds
scas
cmpsb
push
fmuls
xchg
pop
fsub
cmp
scas
out
fildll
mov
adc
mov
ds
sub
add
and
outsl
jge
ret
mov
ljmp
inc
jmp
xchg
mov
ficoml
inc
addb
sti
pop
leave
jnp
cmp
cli
inc
push
inc
test
mov
enter
mov
lcall
pop
mov
das
dec
sbb
lock
sub
jecxz
mov
mov
mov
xchg
loope
push
cmp
mov
popa
lods
filds
test
pop
mov
cmp
test
jne
jo
sbb
stos
les
fdecstp
in
gs
push
push
xor
mov
mov
fldcw
lods
mov
pop
push
add
pop
fwait
jmp
or
pop
adc
inc
sbb
mov
popaw
loopne
xor
adc
inc
icebp
jb
cmpsl
aad
loope
popa
push
push
add
jle
dec
mov
jae
pop
faddl
pop
pop
test
mov
mov
cmp
test
add
adc
fs
sahf
push
in
sub
inc
jg
in
pushf
or
ljmp
cmp
rcr
jl
push
xor
xor
mov
mov
mov
test
xchg
add
mov
lods
push
sub
add
mov
inc
or
cmp
lcall
dec
cmpb
daa
adc
out
cmpsl
rorb
mov
xlat
aam
ss
rcll
subl
and
data16
xchg
testb
xor
fidivrs
out
inc
scas
dec
adc
popf
rcll
mov
inc
and
push
cltd
mov
sub
gs
ss
cli
fbld
sbb
enter
imul
sbb
sti
aam
insb
sub
lret
push
test
xchg
jb
xor
push
hlt
jmp
test
adc
mov
lea
pop
mov
lret
mov
mov
sbbl
ss
add
and
jle
out
aaa
fldl
cld
cmc
in
and
push
sub
xor
scas
adcb
sub
and
js
pop
push
inc
xor
pop
pop
mov
add
shrl
mov
icebp
cld
dec
inc
or
mov
popf
ss
pop
pop
je
rorl
cmp
xor
add
dec
add
cltd
sub
pop
in
rcrb
xor
push
and
push
arpl
call
nop
lea
int
in
int
lret
fs
push
xchg
sbb
sub
xor
aad
sub
movsl
ljmp
ljmp
mov
xchg
pop
cmp
les
lods
imul
rcrb
ds
mov
cmp
or
je
mov
sbb
ret
roll
pop
aam
push
sar
pusha
loope
mov
or
jne
jle
ret
push
ffree
or
push
int
sub
imul
enter
arpl
sbb
test
std
push
push
or
push
fsubl
or
sub
and
pushf
dec
add
mov
dec
push
je
jge
add
out
clc
pop
xchg
frstor
rcrb
push
sbb
cmp
mov
movl
lcall
xor
andl
xchg
pop
arpl
mov
or
test
fdivl
ret
pusha
popf
cmpsl
into
aam
dec
movsb
add
pop
in
mov
pusha
repz
jle
in
push
pop
loopne
mov
insl
add
add
sbb
xlat
sub
out
sbb
mov
loop
test
jle
ds
add
mov
clc
dec
into
stos
loopne
adc
in
jno
mov
xor
pop
cs
loop
xchg
gs
rcll
or
fbstp
lock
push
cltd
icebp
dec
add
mov
loop
sub
dec
daa
jnp
push
push
pop
xchg
sbb
cmp
push
cmc
add
inc
rcl
into
sbb
cmp
dec
mov
xchg
inc
xor
lock
sbb
out
sub
add
mov
push
or
addr16
fidivs
mov
push
out
jbe
aaa
mov
fwait
xchg
js
pop
mov
dec
imul
dec
out
rol
lods
mov
mov
ljmp
test
jmp
mov
add
ljmp
lahf
inc
popf
in
mov
arpl
mov
pop
lret
adc
xchg
outsl
pop
jp
fstps
int
pop
sub
cltd
aad
lods
push
sbb
clc
outsb
xchg
sub
mov
mov
aaa
movsb
pusha
jb
dec
shl
add
pop
imul
sbb
pushf
filds
shlb
or
xchg
pop
cmp
lret
sbb
test
and
in
add
sub
mov
arpl
into
loop
dec
add
mov
jb
xchg
repz
sbb
push
sub
xchg
dec
lret
int3
nop
inc
xor
inc
xchg
pop
lock
pop
xchg
ret
fwait
enter
sbb
jl
nop
mov
insl
sbb
xor
mov
inc
call
call
xchg
mov
push
xchg
jp
pop
jb
inc
mov
sbb
scas
int
rcrl
xchg
lods
adc
test
pop
cld
shr
shrl
lcall
sub
mov
loopne
cmp
mov
inc
and
dec
sbbb
fwait
sub
es
fsubs
inc
and
popa
loopne
scas
lcall
lock
movb
mov
xchg
inc
push
dec
pop
adc
ficompl
inc
fsts
mov
and
or
pushf
add
xor
push
and
into
and
repnz
add
sti
or
sahf
cmp
cs
mov
fadds
add
push
test
xchg
push
scas
jecxz
mov
sub
data16
movsb
orb
js
icebp
push
hlt
mov
add
xlat
mov
loop
pop
imul
inc
data16
pop
and
or
hlt
in
gs
pop
rclb
enter
je
sti
adc
repz
xor
pushf
nop
lahf
faddl
sbb
push
jp
imul
push
gs
std
xchg
pop
iret
aam
sar
fmull
inc
lcall
imul
dec
repnz
and
repnz
jmp
jmp
sti
fstl
shl
push
xchg
add
inc
je
outsb
lea
loope
movl
test
sub
mov
push
repz
ljmp
movsb
sbb
mov
pop
add
mov
pop
test
pop
pop
jmp
sti
sub
call
xchg
inc
stos
inc
mov
sub
add
outsb
cmpsb
popa
cmc
push
das
pop
rorl
jp
out
or
cld
mov
inc
mov
push
sub
cmpsl
subl
cmp
scas
enter
mov
and
int3
test
lahf
add
jae
rorl
fldt
jl
push
movl
hlt
out
and
mov
and
icebp
fincstp
jl
scas
hlt
or
dec
stc
jnp
or
lahf
xchg
xor
or
mov
push
xor
push
push
aam
push
outsb
push
sbb
jbe
loopne
les
stos
xchg
pop
sbb
bndstx
int
cltd
sub
iret
jecxz
je
mov
test
sub
mov
cmp
lods
mov
pusha
lea
cmpsb
pop
lret
popf
adc
lods
cmp
inc
out
lea
nop
stos
cmpsl
sbb
in
mov
cmp
icebp
sahf
mov
jp
sub
lahf
push
pop
xor
shrb
xchg
pop
cs
lret
dec
data16
xor
jmp
loop
nopl
leave
ret
push
in
bound
cmp
nop
fsubl
mov
sti
xchg
mov
cmc
inc
and
mov
or
loop
mov
imul
jp
inc
sbb
cmp
jo
and
inc
clc
adc
adc
jae
pusha
adc
shlb
ljmp
pop
xchg
push
pop
cmp
jbe
ret
enter
sub
shrl
jge
mov
sbb
jle
sub
mov
repnz
or
sbb
lds
cmp
and
push
sub
imul
and
jb
cmp
jno
int
mov
dec
mov
mov
push
mov
or
jns
cwtl
xlat
add
mov
ja
aad
enter
dec
adc
mov
dec
out
pop
mov
dec
in
bound
imul
xchg
jo
das
call
mov
das
pop
add
adc
aaa
sbb
cmp
shll
or
push
pushf
ror
jmp
test
lods
in
sub
or
inc
lret
sbb
jnp
xchg
iret
add
add
jmp
jecxz
repnz
add
lock
nop
adc
mov
or
inc
mov
ja
stos
add
hlt
dec
push
lcall
je
fistps
insb
xchg
insb
in
sub
pop
mov
jmp
outsl
mov
ja
movsl
jmp
push
push
or
or
pop
stos
xchg
cmpsb
or
loopne
pmaddwd
sub
jnp
xorl
jl
sbb
push
ret
push
test
mov
insl
xor
mov
in
paddw
test
or
jo
icebp
ror
jnp
aas
test
les
jb
mov
add
mov
add
push
in
xchg
mov
aam
fldz
loop
lds
mov
out
add
jmp
push
mov
pop
mov
test
mov
xchg
popa
sub
loope
mov
ja
mov
cmpsb
ds
icebp
xchg
or
push
sbb
mov
loope
mov
pop
ljmp
and
jne
inc
dec
int
push
lret
dec
dec
push
mov
in
sub
test
cmp
sbbb
cwtl
mov
jnp
loopne
adc
out
push
sti
js
xor
lahf
pop
push
jge
and
xchg
loope
sarb
mov
int
pop
aaa
sub
mov
dec
pop
jne
stos
xor
lea
imulb
and
mov
mov
or
mov
dec
std
fwait
cmp
ss
jo,pt
xlat
lahf
popa
repnz
add
mov
ljmp
mov
mov
jb
jl
pop
push
inc
mov
dec
faddp
dec
pushf
xchg
sbb
mov
add
mov
add
in
mov
or
fsubrp
shlb
push
cwtl
pop
jbe
cmp
add
mov
push
push
leave
dec
jno
jo
insl
inc
outsb
mov
cmp
je
xor
inc
int
cmp
jae
sbb
cmpl
pop
adc
mov
sbb
leave
mov
loop
xor
andb
call
cmpl
je
fdivl
adc
mov
inc
xchg
insl
push
jl
jge
enter
push
fimull
adc
outsb
jne
lods
mov
mov
sub
imul
shlb
outsl
enter
mov
mov
arpl
push
ljmp
out
iret
clc
xor
adc
add
xor
jg
jae
std
mov
or
rcrl
cmp
ljmp
lahf
jecxz
ljmp
mov
ja
and
xlat
or
pop
rolb
int3
addr16
out
pusha
insl
movsl
gs
mov
jg
adc
sub
dec
pop
mov
mov
flds
mulb
cmpsb
sbbl
decb
jne
ss
divb
xor
imul
out
in
inc
dec
cmp
lds
cmpsl
andl
inc
mov
pop
movsb
sub
adc
cmp
out
and
jp
or
movsl
repz
popf
or
jg
fbld
pop
testl
js
jno
dec
repz
sub
mov
aaa
add
pop
arpl
add
lret
mov
rcll
outsb
test
push
push
cmpsl
clc
xchg
sbb
ja
stos
addr16
movsb
push
pushf
test
aam
jbe
add
mov
mov
dec
testb
push
push
add
jmp
mov
add
sbbl
out
gs
pop
or
rolb
test
cltd
and
stc
ss
add
test
and
lods
or
mov
mov
pop
push
mov
fwait
mov
lcall
sahf
inc
loope
loop
arpl
lods
mov
lods
push
paddsw
add
sub
insb
mov
jo
lds
inc
jg
cwtl
sti
cltd
dec
mov
add
jmp
or
and
xor
outsl
adc
lods
sti
add
sbb
sbb
mov
jae
mov
js
repnz
sarl
xor
pop
in
sarl
push
mov
imul
hlt
pop
mov
mov
push
decb
mov
cltd
mov
mov
rcl
add
pop
and
mov
mov
or
outsb
hlt
nop
cmp
fsubr
push
sub
mov
mov
pop
mov
jmp
loope
ss
xchg
and
mov
out
pop
cld
cmp
sbb
xlat
cmc
test
mov
dec
dec
pop
mov
fxch
aad
movsl
jecxz
xor
out
sbb
in
or
call
lahf
ds
popf
xchg
aad
into
call
xchg
test
mov
aaa
pop
jg
in
sub
rolb
push
cmp
xor
fwait
in
daa
xchg
cs
shrl
jnp
sub
pop
roll
pop
jbe
mov
ret
icebp
mov
dec
lea
sbb
push
push
adc
dec
movsb
jns
incl
aad
pusha
mov
pop
into
inc
ljmp
and
dec
dec
xor
out
sub
mov
mov
push
fldcw
xchg
pop
xor
mov
js
je
sbb
fwait
dec
sti
xchg
sub
xor
adcl
fstpl
sbb
inc
and
iret
ja
aam
push
push
punpckldq
jge
fstl
enter
dec
add
lret
jge
data16
rcll
leave
je
nop
jne
jle
mov
mov
popa
inc
and
dec
push
int
mov
aad
repz
lret
dec
test
into
shl
roll
call
rorb
mov
dec
in
cmpl
loope
outsb
out
fsubl
adc
add
sub
sbb
push
dec
mov
lds
enter
into
mov
mov
sub
loop
out
and
insl
test
loopne
mov
and
mov
and
push
mov
mov
arpl
aad
xchg
push
dec
xor
jns
mov
fcmovu
and
stos
sub
jbe
dec
xor
das
xor
or
jl
adc
in
adc
push
inc
rcll
mov
addr16
push
jge
jmp
lret
das
push
mov
jg
inc
mov
icebp
push
mov
shll
pop
insl
ret
sub
rol
xchg
mov
sahf
mov
xchg
div
mov
scas
and
out
dec
sbb
sbbb
out
pop
inc
or
add
jp
jns
mov
push
leave
enter
popl
test
loope
xor
mov
xlat
mov
dec
dec
das
out
pop
push
fists
jne
mov
push
xchg
push
lret
push
movsb
das
popl
xor
or
sbb
adc
mov
sub
inc
out
cmpsl
cmp
jne
sub
cmp
cmc
dec
inc
and
add
cmpsb
or
push
rcrl
lock
movsl
dec
mov
sub
jbe
rolb
pop
mov
cmpsl
mov
sbb
sbb
dec
xchg
cmp
and
out
andb
test
mov
or
jg
inc
in
andl
pop
and
aaa
pop
push
cmc
movsl
sbb
dec
add
je
mov
out
jmp
in
out
add
xchg
inc
popa
bound
adc
pop
repnz
adc
das
xchg
gs
dec
ja
aaa
pop
dec
push
xchg
into
mov
test
xchg
inc
mov
pushf
jae
insl
lds
xchg
mov
xor
nop
sbb
rcl
out
jg
mov
call
xchg
adc
dec
and
testb
es
ja
inc
fcmovnu
cltd
cwtl
fisubl
stc
fcmovnb
sahf
lock
in
xchg
cmpsl
sbbl
mov
adc
jae
rcrl
cld
ja
dec
sbb
fwait
push
jle
xchg
das
out
xor
stos
or
imul
es
lds
jo
in
adc
fldcw
pushf
xlat
inc
mov
ljmp
jno
xor
mull
loopne
shrb
sarl
insl
pop
adc
or
sbb
or
fadd
pop
mov
push
cmc
and
or
push
movsb
or
out
pop
cmpsl
rol
hlt
jl
inc
dec
bound
cmp
pop
out
mov
fidivl
push
mov
pop
inc
jl
fdiv
test
jne
fisubs
mov
sbb
push
sbb
jmp
jmp
jmp
push
pop
je
scas
aas
mov
nop
movl
jae
mov
push
sub
xor
mov
int
out
pop
adc
cmpsb
sub
jne
push
loop
sub
jns
xchg
sbb
stc
lock
in
dec
jo
out
rcll
push
sub
repz
adc
hlt
fidivl
mov
jo
jecxz
push
sub
mov
movsl
inc
xchg
xor
loope
push
mov
divl
sbb
and
pusha
aam
and
imul
cli
jo
push
push
xor
jo
xor
fxch
leave
or
jb
movsb
test
insb
xchg
jecxz
and
mov
cmp
aam
push
hlt
lock
or
lods
shll
mov
cld
jns
push
or
data16
scas
xor
inc
fdivrp
dec
aam
shlb
es
cmp
stos
sub
mov
adc
lcall
adc
xchg
adc
shl
jae
movsl
push
dec
out
xor
movsb
and
les
or
mov
shlb
jns
mov
les
iret
dec
scas
pop
pop
insl
je
and
pop
dec
xlat
shr
and
push
or
push
in
test
aad
mov
es
sbb
mov
imul
sbb
leave
sub
jmp
lcall
dec
cli
out
xchg
je
mov
cmp
inc
outsb
fists
mov
mov
std
sbb
lretw
jnp
subb
cmc
movsl
push
or
push
idiv
cmp
pop
ljmp
rorl
and
or
test
cmp
mov
fstl
mov
ret
in
mov
push
out
les
cltd
pop
pop
fisttps
imul
pop
jge
jmp
jl
cmpsb
clc
idivl
es
jle
filds
hlt
sbb
inc
loopne
xchg
fs
mov
cltd
addr16
sub
loop
mov
or
imul
and
jmp
mov
push
int3
cli
dec
jns
xchg
xchg
in
inc
jnp
jo
loope
mull
xchg
xor
jge
into
outsb
movhps
stc
popf
out
jne
rcrb
mov
insb
loope
rorl
test
or
mov
push
or
pop
shll
aas
cs
shl
mov
es
lds
pop
adc
mov
cmpsl
movsl
pop
jb
push
icebp
cli
xchg
mov
sub
stos
fistl
into
jbe
incb
xor
adc
pmaddwd
lret
mov
and
gs
pop
ret
mov
prefetch
aaa
cwtl
push
mov
xchg
sub
icebp
dec
adc
add
pusha
push
pop
lea
push
pop
add
lahf
ret
ds
out
xchg
push
xchg
es
cmp
mov
popf
mov
fstl
xchg
stc
adc
call
adc
sub
xchg
xchg
jnp
shrb
xlat
mov
aaa
dec
imul
mov
push
scas
daa
dec
ja
int3
icebp
aaa
hlt
sub
xor
fs
ja
push
popl
jae
scas
add
sbb
pop
shrb
jl
test
cmp
mov
out
leave
pusha
sahf
faddl
and
push
fmull
sub
jne
aaa
push
stos
xor
leave
xchg
xchg
sbb
adc
ficoms
lods
inc
mov
fmuls
sbb
mov
lods
repnz
into
inc
nop
nop
mov
cmp
pusha
cmp
xor
adc
add
or
ljmp
movl
pop
jno
aaa
sti
aas
in
or
cmpsl
cmc
pop
addl
mov
mov
inc
mov
dec
test
lret
jp
daa
add
mov
xor
fs
and
jne
fcomi
and
adc
testl
mov
xchg
cmp
movsl
ljmp
cmp
aad
mov
lcall
into
ror
sbb
pop
addr16
add
cmp
sar
into
sbb
arpl
xchg
daa
xchg
adc
jg
test
outsl
fwait
out
inc
mov
addr16
and
aad
aaa
xchg
loopne
fs
push
testl
outsl
jge
push
jne
mull
mov
cmpsb
aad
fs
jb
fs
or
jmp
xlat
xchg
mov
push
or
xor
mov
mov
add
push
mov
inc
pop
push
adc
push
xchg
loope
mov
andl
test
lret
pop
inc
out
mov
mov
fwait
cmpsb
shrl
xor
lahf
movsl
scas
adc
ss
cld
cmp
push
jecxz
out
jmp
not
sahf
idivl
and
decl
dec
es
cmpsl
jne
rcr
clc
addr16
sti
pop
push
std
lock
mov
sahf
push
enter
clc
pop
mov
movb
jnp
movsl
xchg
ret
xchg
aas
xchg
dec
jno
arpl
pop
cs
aad
pop
xchg
xor
push
mov
lock
cmp
pop
js
dec
cmp
iret
popf
roll
adc
lock
dec
sarl
mull
mov
lcall
inc
mov
mov
cmp
call
or
sbb
test
rolw
cmp
mov
rclb
outsb
xor
mov
addr16
jecxz
adc
jl
pop
out
xchg
pop
lret
fimull
or
cmp
daa
pop
sbbb
sbb
sub
dec
pop
loop
and
or
outsb
orb
push
roll
call
push
push
sahf
mov
adc
jl
sbb
cs
and
sbb
movsb
xchg
and
neg
clc
lea
pop
xchg
push
fdiv
add
pop
cmp
mov
dec
movsb
add
dec
call
out
fucomip
test
mov
jle
pop
xor
in
imul
push
sub
test
outsb
xchg
rol
or
and
push
stos
aad
repz
sub
xchg
mov
out
cmp
adc
push
jecxz
in
in
jb
iret
mov
inc
jns
andb
out
out
lret
mov
sub
lret
sahf
hlt
xchg
shl
inc
cmp
imul
imul
nop
mov
sti
fidivrs
adc
xor
jmp
in
cmp
cmpb
xchg
fiaddl
mov
mov
inc
push
sbb
pop
jge
std
icebp
xor
pop
lock
cmp
hlt
add
cmp
mov
clc
pop
ljmp
push
xor
outsl
roll
pop
xor
mov
faddl
push
in
hlt
cmp
lret
mov
xlat
sub
jae
sbb
ds
daa
in
pushf
ljmp
xor
and
mov
add
push
mov
cmp
push
rolb
push
sub
push
in
mov
add
and
in
nop
sbb
in
xchg
mov
xchg
push
adc
gs
lahf
inc
xchg
outsb
push
aam
cld
stos
test
mov
or
decb
sbb
mov
and
insb
sub
push
adc
sbb
add
mov
mov
xor
adc
jb
mov
adc
cmpsb
outsb
add
popf
mov
cltd
ss
jp
lods
movsl
stos
jp
mov
lods
aad
addb
xchg
and
ds
add
or
cwtl
pusha
xor
cwtl
bound
in
out
dec
xchg
xor
cmp
in
test
imul
popl
lods
or
sahf
inc
lret
outsb
les
push
or
test
and
int
mov
enter
ds
sbbl
clc
sub
pop
ja
adcl
movl
sbb
pop
dec
ljmp
pop
cwtl
out
outsb
mov
scas
cmp
jns
outsl
insl
shrl
cwtl
nop
enter
push
add
fildll
or
xor
sbb
bnd
jge
imul
popa
adc
fnstenv
dec
xchg
rolb
lods
and
ss
push
push
fwait
ret
xchg
jp
out
jo
push
sahf
and
in
rorl
adc
jb
mov
mov
push
shlb
sti
rcpps
and
aaa
icebp
mov
cmpb
jae
jge
loope
jno
ja
xor
popa
xchg
test
and
xor
lahf
dec
mov
push
adc
js
inc
jg
xchg
fisubs
popa
inc
adc
sbb
imul
gs
ljmp
adc
aad
ret
cmp
in
shlb
jmp
sub
add
push
pusha
mov
ret
orb
mov
mov
or
xchg
scas
sbb
add
test
dec
cmp
cmp
and
les
and
fldcw
mov
fs
out
xor
leave
dec
repz
sub
scas
mov
repz
lahf
insb
push
call
fbstp
mov
es
add
jg
cmp
daa
sbb
add
jle
pop
fadds
lds
loopne
insb
ljmp
mov
or
mov
push
xor
xor
cltd
xchg
mov
js
aam
bound
leave
shrl
daa
test
in
jbe
cs
out
xchg
in
les
push
pop
mov
imul
and
divb
shr
mov
stos
test
or
inc
inc
mov
add
lcall
push
enter
jg,pn
enter
xor
mov
cmpb
adcl
or
and
scas
xchg
xchg
enter
cli
mov
cltd
or
insl
aas
xchg
out
jno
aaa
xchg
loopne
arpl
out
pop
sub
sub
js
push
aad
jge
lahf
fcmovne
cmp
lods
add
cli
pop
inc
mov
cmp
imul
xchg
in
stos
adc
jmp
cmp
mov
pop
pop
cmp
lods
sbb
test
arpl
ss
xor
and
dec
jno
add
dec
pop
dec
leave
xor
mov
jb
xchg
xchg
add
jg
mov
scas
xchg
sbbb
ja
faddl
or
movsl
jg
out
in
cli
pushf
aas
das
inc
test
imul
pop
pop
jecxz
or
cmp
adc
jg
push
test
inc
inc
addr16
test
fiadds
addr16
adc
fs
out
mov
dec
cmpsb
or
stos
xchg
add
push
sbbb
mov
inc
lahf
scas
jnp
dec
out
adc
outsb
ret
mov
xchg
rclb
lret
loopne
aaa
and
icebp
stc
sbb
int
cmp
outsl
movsl
loope
ljmp
stos
jae
outsb
pushf
call
pop
cmpl
and
fistl
push
jbe
push
mov
shll
cld
mov
xchg
sub
sub
addl
icebp
outsb
pop
std
notb
xchg
pop
imul
jne
add
out
add
push
push
or
xor
mov
js
enter
daa
sub
xchg
xor
dec
ret
js
lods
sbb
popf
ret
loope
loop
cmpb
lcall
cmp
dec
sub
negb
push
mov
lds
mov
sub
popl
sub
mov
mov
aaa
xchg
fwait
mov
inc
or
es
push
test
sbb
xor
add
hlt
push
js
push
pop
mov
rorl
jmp
pop
pop
and
xor
out
mov
push
popa
or
pop
test
imul
or
fidivrl
jp
adc
xlat
xchg
and
push
xchg
mov
push
pop
adc
cltd
xor
or
cmp
pop
aaa
xor
jle
push
rol
ja
out
das
lahf
dec
mov
push
add
mov
les
insl
popf
and
scas
dec
xor
sbb
sbb
add
sbb
stc
imul
aad
subl
test
pop
je
cltd
pusha
hlt
mov
enter
push
mov
fwait
in
sub
repnz
pop
or
jns
mov
xor
call
jle
push
in
add
nop
mov
sub
mov
mov
int3
xchg
mov
dec
adc
fcomi
cmpsb
iret
pusha
shl
mulb
dec
and
loope
out
inc
lret
add
in
mov
outsl
mov
xchg
cwtl
push
shl
mov
or
in
mov
lock
insl
jle
int
mov
or
out
xchg
and
or
ljmp
jo
xchg
mov
mov
cmp
fs
popf
inc
in
std
sbb
sub
jno
dec
into
xchg
mov
xor
pop
or
mov
add
loopne
sti
clc
inc
dec
les
in
dec
jmp
mov
add
jg
in
dec
add
imul
mov
mov
mov
adc
sub
test
xchg
push
push
xchg
adc
test
pop
push
or
mov
in
ja
or
xchg
dec
pushf
aas
popa
mov
lock
and
ja
inc
jne
dec
adc
xchg
and
jmp
jbe
push
sbb
jno
push
icebp
daa
addr16
inc
mov
icebp
in
or
inc
fs
incb
dec
push
pushf
movsl
push
nop
push
push
mov
daa
test
push
xchg
stos
enter
sbb
js
sub
adc
stc
and
insl
mov
lods
dec
mov
cwtl
icebp
aam
jb
jnp
mov
mov
xor
pop
mov
call
push
test
add
dec
andb
dec
hlt
dec
mov
push
ret
cli
or
leave
lods
inc
cmpl
lock
test
cli
mov
pop
scas
push
inc
cmp
mov
test
fs
xchg
js
mov
mov
sbb
sub
cmc
js
pop
adc
sub
xchg
rorl
add
dec
xor
push
xor
cmc
mov
and
in
je
cs
push
jg
jo
xchg
xchg
push
in
test
sbb
sbb
push
cli
lds
sub
pop
out
push
push
pop
in
mov
or
pop
and
cmpsl
mov
out
sti
adc
lret
sub
mov
fcmovne
ss
loopne
test
icebp
stos
lock
mov
add
xchg
adc
es
je
arpl
int
mov
rorb
mov
sbbl
test
sbb
loopne
push
sar
cmpsl
or
xchg
les
movsl
cmp
loop
pushl
cmp
xchg
es
inc
mov
clc
add
rcrb
mov
imul
out
mov
add
lcall
jno
fidivrl
outsb
lods
fidivs
sbb
jecxz
mov
icebp
pop
scas
jecxz
jno
arpl
cmpsl
mov
and
xchg
test
loop
or
mov
adc
or
cmp
ret
jmp
jge
cmp
and
cltd
mov
push
push
jne
js
les
data16
jecxz
mov
outsl
pop
pop
sbb
out
je
enter
mov
popf
fmuls
movsl
out
xor
jns
xchg
call
mov
mov
jnp
add
mov
out
adc
inc
clc
std
inc
stos
push
bound
push
dec
mov
mov
xor
int
push
loopne
mov
loop
jl
cmp
test
mov
push
js
push
rolb
mov
inc
xor
and
jno
fwait
mov
cmp
rol
and
add
cmpsl
cld
mov
decl
repz
in
dec
scas
inc
andb
in
push
add
stos
cmp
mov
rorb
ja
push
sti
loopne
clc
jmp
add
mov
out
test
sub
xchg
push
xchg
push
lahf
mov
cmp
sbb
test
iret
fs
sahf
dec
mov
jecxz
fistpl
outsl
mov
add
adcb
xchg
or
mov
adc
pop
int3
daa
and
mov
aam
sub
add
xor
ss
mov
sub
add
inc
mov
pop
rcll
cli
and
mov
repnz
out
daa
adc
sbb
dec
into
std
rclb
repz
lret
sub
inc
jle
mov
push
adc
addr16
mov
aaa
jbe
pop
repnz
cmpsl
lcall
cmp
xchg
jbe
icebp
xor
and
inc
fimull
cmpb
cwtl
sbb
mov
aad
fldl
test
cmp
pusha
insl
sub
and
add
xor
jne
outsl
into
int
stos
mov
pusha
outsb
lret
jle
inc
xchg
mov
xor
xor
in
sub
stos
popl
jmp
jmp
fildl
inc
cmp
repnz
cmp
call
clc
mov
int3
decl
aad
cli
push
adc
fisttps
pop
push
mov
jnp
fcompl
icebp
ficompl
ljmp
mov
loope
push
push
das
cltd
shr
sub
xchg
into
scas
aad
js
data16
hlt
mov
lahf
xor
repz
test
hlt
ret
mov
cwtl
cmc
imul
cmp
pushf
xor
scas
cld
cmp
std
sbb
push
mov
inc
mov
loop
mov
outsb
dec
mov
and
push
mov
and
jmp
fwait
insb
ret
mov
stc
fwait
leave
rorb
test
jmp
xchg
inc
data16
adc
out
adc
outsl
adc
push
in
dec
mov
sub
enter
pop
adc
imulb
int
push
fiadds
popf
fwait
ljmp
jae
cmpsl
jb
int
aad
jle
push
js
xlat
jbe
xchg
xor
leave
inc
or
dec
inc
fisttps
push
fs
sahf
inc
jl
xor
or
xchg
or
pop
adc
in
inc
cld
pop
push
icebp
cmp
mov
shl
into
sub
pop
int3
lods
push
gs
cmp
fldln2
push
pop
adcl
hlt
jnp
aaa
dec
mov
add
jne
repz
or
dec
popa
or
dec
cmp
mov
test
stc
xor
shrl
xor
sub
push
add
mov
lock
dec
and
stc
dec
clc
mov
adc
subl
in
inc
ret
rcrl
not
adc
shrb
popa
shll
or
xor
and
lret
in
mov
push
cmpl
fstps
sbb
push
and
dec
je
mov
pop
xchg
or
inc
in
mov
rcll
add
mov
stc
push
lret
dec
lahf
hlt
and
daa
scas
and
xchg
xchg
fstps
sbb
out
xchg
ja
cmc
std
xorl
jnp
xor
cmpsb
addr16
mov
shlb
lcall
scas
mov
xchg
pop
push
mov
push
fstps
ret
sbb
ljmp
das
dec
add
pop
jno
lcall
in
jae
push
xchg
ja
pop
inc
xor
addr16
into
dec
lds
or
cltd
std
add
out
mov
mov
xor
testl
and
xchg
or
repnz
pop
sbb
dec
out
test
xor
add
insb
xor
sub
movsl
je,pt
fwait
mov
fisubl
mov
mov
inc
outsb
lret
std
push
fwait
and
add
scas
adc
cltd
push
hlt
cmc
xor
pop
int
dec
addb
shr
stos
cwtl
dec
daa
jbe
inc
cmpsb
es
adc
adc
push
movsl
jl
push
pop
xchg
addb
xor
push
sarl
adc
cs
shlb
pop
ret
scas
notl
xor
int
and
cmp
movsb
ja
ja
xor
mov
sub
mov
cmpsl
add
sbb
mov
dec
push
popa
cmp
xchg
mov
fmull
popa
push
or
daa
jno
cmpsl
lods
mov
sub
or
inc
push
inc
dec
mov
cs
andb
cmp
lods
imul
mov
pop
dec
ljmp
out
divb
rclb
pop
mov
adc
nop
cli
pop
inc
or
and
das
add
mov
idivb
movsl
daa
dec
clc
data16
mov
scas
loope
mov
and
adc
dec
fwait
add
cmp
fwait
mov
aas
scas
ret
lret
sbb
test
sarb
xchg
fsubs
mov
pop
mov
xor
add
hlt
cmpsb
sti
adc
adc
mov
ja
cmova
push
aaa
push
inc
cmp
call
pop
incb
mov
xchg
add
lods
rclb
jo
xor
pop
jmp
enter
adc
lods
sbb
inc
repnz
cmp
mov
sub
and
mov
nop
in
and
dec
xor
test
les
daa
lods
in
mov
add
pop
into
inc
and
and
les
test
jle
insb
aam
repnz
mov
cmp
popf
cwtl
rcrl
pop
adc
rolb
arpl
fisubs
cmpsl
sbb
cmp
enter
xchg
and
dec
xchg
ja
fs
cltd
push
sahf
aaa
xchg
test
xlat
mov
xlat
fdivl
and
mov
and
cmp
daa
test
and
stc
sbb
sbb
jecxz
or
ret
repnz
insl
repz
push
fsubs
inc
notl
or
xorb
mov
call
leave
hlt
pop
cwtl
inc
aas
insl
or
jl
pop
nop
sub
adcl
mov
lea
mov
rorb
add
pop
xchg
pop
fs
push
push
pop
push
pop
ret
add
and
and
rolb
mov
pop
cmp
mov
out
std
test
cmc
mov
enter
adc
and
out
sub
leave
dec
daa
fnsave
in
adc
out
repz
mov
cmp
push
insl
or
dec
mov
mov
out
or
xchg
movsl
inc
adc
sbb
xchg
lds
push
cmp
jecxz
and
jne
leave
fmul
repnz
jbe
imul
shll
sub
adc
inc
xchg
cmc
mov
dec
bound
mov
cmpsl
movsb
inc
int3
adc
or
xchg
lea
pop
insb
decb
repz
lods
in
pop
pop
mov
or
xchg
movsl
add
mov
fisubrs
popa
dec
arpl
push
icebp
sbb
das
shlb
repnz
testl
jb
pop
int3
jb
sbb
ret
loop
xor
mov
dec
ljmp
sti
test
or
sbb
mov
xor
jno
adc
mov
push
in
push
fisubs
fistpl
or
and
test
aas
hlt
enter
in
adc
out
sbb
add
sub
jle
loop
mov
xor
aas
cmp
pop
and
jg
xchg
loope
mov
scas
insb
pop
pop
cmpl
imul
push
lods
imul
cmp
xrelease
testl
push
inc
lods
ja
xor
into
int3
sub
or
je
into
ljmp
or
push
or
or
sbb
movsb
or
sub
int
cmp
adc
fcmovb
inc
or
dec
pop
iret
imul
dec
scas
into
test
mov
ss
sbb
cmpsl
out
pop
push
pop
adc
stos
xchg
sub
push
pushf
int3
lea
rcrl
shrl
in
cmp
xor
adc
jmp
or
stc
mov
xor
cli
mov
inc
jae
push
js
adc
aam
jge
data16
cmp
jl
or
push
jo
push
sub
fsubrl
and
subl
in
mov
or
loopne
fildl
mov
xor
test
out
cltd
mov
rclb
shrl
add
in
mov
dec
test
jg
mov
cmp
and
mov
mov
and
or
push
or
sbb
push
mov
dec
cwtl
ss
icebp
jno
les
nop
loopne
int
xor
loope
inc
jp
cmpsb
fldl
or
adc
outsb
leave
loope
push
idivb
aam
orl
push
enter
inc
add
xchg
daa
push
xchg
inc
test
mov
or
mov
loope
cmp
adc
mov
adc
sub
jg
loopne
dec
popf
jns
mov
das
mov
and
or
sarb
xor
in
aas
popf
dec
jg
adc
sub
cmp
dec
mov
icebp
lds
dec
dec
pcmpgtd
adcb
sahf
push
lret
repz
popf
jmp
scas
xor
mov
dec
xor
mov
dec
adc
mov
addl
inc
cmp
bound
nop
mov
push
nop
push
jg
loopne
fstl
lods
mov
xchg
xchg
das
stc
push
mov
sub
iret
adc
jno
mov
sub
js
mov
fcoms
orl
orl
adc
pushf
repz
imul
push
dec
jg
or
imul
out
xchg
mov
hlt
fcompl
sarb
scas
in
xor
mov
fstpt
mov
out
in
mov
dec
mov
out
cmp
mov
push
test
and
mov
int
xor
imul
test
nop
rcll
addr16
cmp
into
mov
adc
je
jmp
mov
cmp
mov
aas
pinsrw
mov
push
mov
test
xchg
xchg
sti
dec
push
pop
push
inc
dec
xchg
and
xor
repnz
cld
pop
imul
push
mov
pop
gs
and
shrb
sbb
cmp
test
outsb
xchg
lret
pop
into
dec
xlat
mov
push
mov
movsb
lret
inc
mov
jae
push
std
ud1
pop
and
jp
xor
pushf
jae
pushf
adc
adc
mov
jbe
jp
dec
loope
ss
fistl
pop
jecxz
sub
inc
roll
jbe
in
cmc
sbb
push
out
ljmp
push
adc
jns
xchg
shlb
push
mov
dec
xor
test
xlat
pop
mov
xchg
fwait
loop
scas
mov
jnp
adc
test
mov
rcrl
jg
and
loope
pushf
add
adc
mov
xchg
or
add
sti
push
subl
iret
dec
addr16
inc
repnz
mov
repnz
jo
cli
pop
arpl
test
adc
lods
sub
xlat
call
inc
mov
pop
cli
fs
and
lods
loope
mov
adc
mov
ja
divb
loope
aad
addb
dec
push
cmp
jmp
inc
adc
cmp
jns
cli
test
inc
jl
sub
mov
imulb
mov
xchg
rcrl
jne
aam
sahf
cld
fdiv
inc
pop
jge
xor
and
mov
mov
sbb
pop
les
push
aad
and
int3
adc
or
push
stos
in
mov
mov
xchg
das
lret
jmp
pop
jb
xchg
inc
pop
loop
mov
fadd
in
pop
pop
pop
fistpl
aaa
jmp
mov
inc
ret
mov
mov
dec
outsl
or
xchg
jmp
dec
pop
testl
pop
dec
mov
dec
aam
pop
int
push
mov
adc
sbb
mov
insl
xchg
addl
frstor
cmp
aaa
inc
mov
adc
mov
xchg
out
push
jnp
andb
xchg
mov
xor
or
iret
in
addr16
jo
out
dec
xor
cwtl
mov
in
jmp
sub
xlat
in
mov
ljmp
addl
lods
js
test
stos
stos
test
popf
xor
mov
cwtl
hlt
xlat
fstp
xor
cmpsl
dec
push
inc
push
inc
lock
mov
repnz
cltd
mov
mov
cmpsb
dec
cli
xor
inc
sbb
sbb
outsl
or
sub
or
mov
rcl
ud2
xchg
enter
sti
mov
xchg
sahf
loope
popf
mov
in
js
pop
repz
fsts
dec
ret
shrb
rcrb
push
jno
nop
push
jbe
xor
xor
outsl
pop
lock
xchg
cmovne
cli
sbb
sarl
fistpl
cmp
lret
cltd
dec
or
fstpt
out
add
and
mov
les
sbb
pop
cmp
push
popa
dec
outsb
mov
movsb
cltd
clc
mov
inc
int
movsb
lds
xor
jmp
mov
adc
imul
or
sub
scas
and
out
data16
cmp
jno
adcl
fs
icebp
aam
jnp
mov
sahf
enter
inc
nop
scas
frstpm(287
dec
jl
jmp
neg
mov
cs
add
cmp
xor
aad
add
and
jae
leave
dec
add
or
fldlg2
pop
out
sub
cltd
icebp
fdivr
call
popa
outsb
or
dec
lods
in
adc
aaa
push
add
adc
sahf
lods
or
xchg
gs
cmp
adc
inc
es
sub
dec
dec
enter
hlt
pop
test
cli
mov
xchg
sbb
pop
pop
mov
es
movsl
cmpl
mov
loope
testb
dec
outsb
stos
movsl
fcmovb
sbb
cmpsl
inc
inc
jnp
js
ret
xchg
cli
cwtl
enter
sarb
mov
rclb
add
mov
loope
cmpsl
pop
mov
out
aam
pop
xchg
mov
ss
add
xchg
jp
mov
jae
test
push
jns
aaa
into
lods
push
je
sbb
aad
divb
test
scas
push
out
push
out
sahf
sbb
lret
add
sbb
dec
and
insl
das
fdivl
adc
and
cmp
nop
cs
sbb
insl
adc
inc
sub
pop
jg
popa
popa
out
xor
sub
pushf
push
ljmp
sub
mov
stos
inc
jmp
sub
data16
subl
sub
mov
in
pop
fwait
fs
xchg
sahf
inc
xorb
ret
fs
ret
cli
rcr
das
arpl
cmc
adc
inc
mov
fnstcw
mov
mov
lods
lcall
mov
nop
loop
popf
cli
nop
pusha
pop
mov
js
and
add
cwtl
lock
and
xor
push
fisubl
push
into
les
in
mov
cmpsb
dec
xchg
push
add
cmp
in
shl
rcr
lret
pop
sbb
daa
push
test
inc
mov
or
mov
push
inc
adc
mov
leave
dec
sub
hlt
repnz
sub
add
stc
inc
and
jnp
xchg
std
and
insb
std
xchg
xchg
mov
cltd
aaa
lock
into
push
inc
sbb
fs
ss
mov
push
rcl
outsl
add
mov
push
cld
cmp
nop
dec
mov
sti
fnsave
add
mov
xor
xor
cmp
sub
mov
pop
mov
outsb
pop
in
jns
xchg
ret
frstor
fwait
cmp
shlb
xchg
inc
push
xchg
nop
lahf
test
jmp
fcomps
pop
sub
cli
dec
repz
xchg
dec
sub
ja
sbb
jp
xor
xor
repnz
imul
scas
inc
ds
iret
or
xor
adc
add
xor
in
call
jmp
sub
push
rolb
add
fsts
lods
int3
mov
and
jno
cwtl
fbld
enter
sub
imul
cmpsb
cmpsb
addr16
loopne
add
sub
movsl
mov
repz
push
cmpsl
jbe
dec
jne
aas
push
mov
add
jnp
sub
hlt
or
fwait
sbb
lret
into
ljmp
mov
pusha
movsl
daa
sbb
in
fisttps
test
add
test
xchg
cmp
sarl
cmpsb
push
ljmp
add
xor
in
inc
xorb
inc
icebp
gs
fwait
and
cli
pop
mov
mov
mov
mov
and
jmp
loop
push
xchg
pop
adc
pop
xchg
mov
fwait
lcall
cmpsl
mov
popa
js
push
jg
inc
dec
xchg
mov
push
xchg
testb
sbb
js,pn
pop
mov
loop
ds
cmp
xchg
add
sub
push
fldenv
daa
xchg
mov
rolb
adc
jbe
inc
ljmp
inc
mov
icebp
push
jae
mov
test
out
push
jnp
out
pop
fidivl
jmp
je
jp
lock
xchg
aam
mov
rcr
or
movsb
in
ffreep
fildll
es
neg
and
mov
in
mov
lret
push
arpl
cwtl
cs
int
push
movsb
shll
sub
sbb
adc
pop
dec
and
and
lret
ret
roll
lret
in
cmp
cs
mov
mov
sbb
jbe
arpl
cmp
mov
inc
cs
int
loop
hlt
in
orl
xchg
daa
nop
xor
jmp
inc
xchg
xchg
sahf
imul
add
sub
or
lea
mov
lea
push
push
scas
xlat
dec
sub
in
push
inc
pop
jnp
jle
movsb
sbb
adc
mov
mov
pop
out
adc
stc
fidivrl
xor
sbb
shl
dec
mov
popa
movsb
or
mov
lea
in
jecxz
cmp
rcl
dec
sbb
pusha
aad
dec
cli
ds
cli
add
mov
loope
xor
sbb
dec
jle
insb
fmul
mov
movsb
pushf
sbb
xlat
lahf
jno
dec
aad
es
int
push
and
mov
inc
or
jle
insl
mov
out
movsb
add
mov
mov
dec
mov
xchg
mov
mov
test
sbb
in
fcoml
fnstcw
inc
or
mov
ret
sahf
and
mov
inc
or
mov
gs
repz
mov
xchg
push
shrb
jl
mov
lods
and
daa
or
adc
popf
sti
mov
xchg
shrb
dec
leave
mov
ljmp
mov
fwait
dec
into
push
addr16
inc
repz
lahf
or
je
inc
push
test
sbb
xlat
jo
inc
jnp
mov
pop
dec
inc
mov
pop
pop
mov
mov
into
lcall
adc
mov
add
pushw
fbstp
ljmp
sbb
add
xchg
dec
cli
cmp
push
fstpl
sti
inc
sbb
mov
mov
jae
incb
cs
lods
adc
xchg
pop
and
rolb
stos
lods
fmul
gs
test
rclb
cld
daa
leave
loopne
bound
imul
jne
shrb
mov
jo
add
mov
testl
and
cmpsb
cmc
sbbb
add
leave
add
sahf
pop
mov
je
test
mov
xchg
pop
je
pop
adc
xor
push
loop
cltd
shr
jo
ret
dec
mov
sbb
int
pop
cmp
adc
lock
and
sub
sub
insb
aam
add
mov
outsb
scas
pop
xor
std
xor
and
daa
arpl
or
add
mov
xor
rolb
sbb
sbb
hlt
aad
cmc
or
sub
add
inc
and
mov
sbb
cmp
out
mov
sti
mov
aad
jne
jns
ds
jecxz
lods
mov
jae
int3
pop
pop
jno
and
dec
mov
fucom
in
jl
repz
mov
pop
dec
push
insl
mov
xchg
and
aaa
or
xchg
movsl
push
stos
js
int
sarb
xchg
push
hlt
or
out
lods
loopne
int
stc
data16
fcomps
mov
ss
cwtl
and
ljmp
push
push
inc
mov
iret
dec
jecxz
fistpl
pop
in
mov
inc
cmp
xor
cmp
xchg
stos
mov
sub
add
push
lcall
mov
inc
lods
or
mov
dec
je
lcall
adc
jb
xchg
pop
push
mov
shr
xor
cmp
adc
xchg
push
or
push
sahf
push
adc
scas
lret
dec
aam
jecxz
aas
dec
jb
in
push
push
sub
ret
in
repz
xlat
xchg
jb
scas
cmp
or
sub
xchg
push
add
sub
jb
enter
mov
callw
and
cs
popa
lcall
xor
test
repz
pop
sbb
pop
xlat
aad
dec
ficoml
int3
repz
inc
in
out
inc
xchg
push
and
add
ja
dec
enter
jl
xor
pushf
andl
inc
cmp
push
mov
push
cmp
out
xchg
inc
int
mov
clc
rorl
imul
test
jmp
cmpsb
hlt
adc
xchg
dec
jbe
dec
mov
lods
xlat
or
xchg
test
dec
sub
jno
push
sar
dec
jge
and
negl
lds
dec
jbe
fnsave
inc
arpl
femms
fidivl
jne
clc
push
mov
jle
sahf
popf
ret
call
ret
imul
xchg
std
xchg
out
add
mov
int
stc
mov
cmpsb
addr16
test
lea
inc
mov
mov
popa
movl
cmp
popa
cmp
sbb
push
mov
jo
mov
pop
push
pop
popa
dec
sbb
fdivrl
je
sarb
popa
je
test
xlat
or
inc
lock
ret
dec
jnp
fisttps
xor
aas
movsl
push
xor
mov
cmpsl
adc
fdivrl
mov
mov
imul
mov
testb
push
dec
mov
adc
call
push
xor
push
push
mov
dec
sahf
add
cmp
xlat
leave
add
inc
es
inc
les
jmp
sub
and
jne
dec
insl
cmpsb
orb
adc
dec
dec
xchg
cmp
movsb
ss
mov
cmp
push
fimull
jo
xor
sub
xor
bt
in
ljmp
test
fisttpll
cmpsb
jno
scas
lahf
adc
push
sbb
gs
cmpsb
xchg
adc
push
xor
bound
clc
loope
adc
push
mov
xchg
jg
add
inc
in
push
mov
xchg
jl
popf
out
loope
sbb
xor
add
adc
lods
mov
push
stos
sbb
push
test
fs
xchg
mov
mul
and
inc
shll
stos
orb
jmp
pop
dec
daa
or
add
fsubrs
lods
cmp
bound
divb
popf
cmp
mov
add
enter
out
jae
les
sub
lods
pop
sub
mov
xchg
jmp
pop
sbb
adc
jle
and
mov
push
cli
push
test
adc
lret
push
mov
inc
adc
dec
jl
fs
iret
cli
push
xchg
lcall
mov
sub
icebp
inc
jo
jp
rcrl
dec
push
push
adc
cmp
mov
es
ffree
lods
xchg
mov
pop
repz
dec
sbb
mov
lcall
test
inc
gs
dec
neg
lea
addr16
pop
xor
mov
ljmp
dec
xchg
mov
cmp
mov
insl
and
adc
mov
pop
mov
xor
mov
scas
shll
push
xlat
cmp
incb
loope
adc
nop
pop
sbb
xor
leave
sbb
rcr
inc
sbb
ljmp
push
popf
or
cld
fs
mov
or
sub
and
inc
jp
jo
xchg
mov
popf
lret
xchg
xor
dec
les
add
cmp
push
mov
adc
scas
ds
dec
push
xchg
push
lret
addr16
pop
das
leave
jns
mov
gs
rclb
fldt
ffree
lcall
push
or
cmp
addr16
xor
cs
jae
jne
adc
pop
repnz
insl
daa
dec
andb
jns
cmp
test
repnz
mov
or
pushf
or
xchg
in
dec
dec
fwait
cmp
fcomip
jne
cmpsl
sarb
mov
jb
mov
mov
outsb
jae
add
stos
mov
push
test
std
sub
push
out
mov
scas
pop
xchg
add
jne
les
lahf
int
xchg
jl
add
sbb
dec
es
test
mov
inc
repz
cmpsl
stos
jb
ss
push
dec
je
sti
addr16
iret
adc
mov
dec
dec
es
lods
mov
ds
cmp
mov
repz
sbb
js
xchg
pop
pop
rcll
mov
adc
pop
push
lods
xchg
leave
pop
mov
dec
adcl
arpl
or
aas
sbb
dec
mov
cmpsb
mov
pop
mov
scas
sarl
aam
sub
dec
js
mov
and
scas
xchg
out
sbb
push
sub
push
ljmp
fldenv
jno
pop
add
insl
xor
xchg
inc
fstp
das
mov
mov
es
inc
jmp
sub
aad
jbe
aad
jbe
push
sub
pop
arpl
sbb
pop
cmp
cmpsb
xor
popa
nop
movsl
imul
ja
mov
inc
sbb
pop
fildl
and
dec
clc
sbb
in
enter
out
mov
push
cmpsl
sbb
cmp
inc
js
fisttpl
das
inc
pop
mov
xchg
jl
lahf
lds
int
sub
out
fistps
cmc
xchg
dec
mov
xor
jb
pop
jns
sub
xchg
loopne
inc
mov
push
out
cmpsl
sbb
push
cmc
push
or
push
sbb
jl
dec
into
pusha
mov
pop
lods
dec
pop
sub
sub
sub
jmp
clc
and
dec
adc
xchg
xor
xchg
rcrl
adc
mov
jge
mov
scas
inc
xor
scas
push
inc
push
aad
stos
push
jmp
lret
out
mov
jbe
xchg
out
out
outsl
outsl
sub
and
aad
aaa
mov
inc
call
aaa
mov
mov
je
mov
sub
scas
leave
shlb
leave
popa
iret
or
sbb
sub
cltd
and
leave
fmull
xor
sub
pop
mov
popa
push
adc
xor
mov
out
push
jle
mov
cmp
imul
in
popf
cmp
test
add
popf
dec
mov
mov
test
inc
lods
mov
stos
das
into
inc
cmpsb
sub
adc
sub
pop
out
std
lcall
insb
inc
sub
popf
push
fadds
mov
popa
jbe
insb
dec
lret
rol
aam
push
cmp
add
fucomp
cmp
mov
dec
movsl
jle
pushf
jecxz
bnd
sbbl
xchg
pop
dec
mov
mov
xor
mov
adc
jp
xor
aam
daa
mov
popl
mov
leave
insl
push
jecxz
clc
cmpsb
sub
sbb
mov
sub
andl
ds
xchg
sub
add
imul
pop
dec
sbb
mov
adc
xchg
cmpsl
and
movsl
add
dec
imull
std
aad
enter
dec
test
push
xor
jne
sbb
jns
pop
fstl
adc
pop
flds
xchg
ret
pop
mov
divb
arpl
arpl
mov
repz
mov
mov
bound
insl
stc
imul
jbe
rcrl
cmc
inc
jecxz
idivb
fisubrl
sub
xor
xor
inc
int3
stos
add
add
lret
mov
ss
fnsave
inc
push
push
roll
pop
add
cmp
jecxz
nop
mov
movsl
rcrb
in
decl
fbld
push
pusha
mov
dec
repz
jns
jge
ljmp
mov
xlat
cmp
jne
dec
or
ds
mov
iret
push
dec
mov
cmp
aaa
lds
div
pop
and
cmp
jl
mov
fimull
scas
mov
add
lea
mov
sbb
pop
aaa
push
icebp
mov
pop
sub
sub
pop
loope
scas
sbb
ljmp
lahf
sbb
mov
push
sbb
jo
sub
imul
mov
adc
test
ret
inc
leave
insb
and
scas
data16
in
insl
jecxz
int
rolb
pop
push
add
arpl
rorb
ljmp
fbstp
jbe
adcl
sbb
ds
stc
xor
jbe
inc
inc
andb
stc
inc
mov
or
inc
mov
push
fistpl
dec
out
lods
jl
dec
sub
mov
push
stc
movsb
and
pop
mov
pushf
inc
and
out
test
imul
mulb
jle
pop
or
adcb
push
mov
enter
in
clc
push
cmc
aaa
sub
xchg
sti
fldenv
cmp
lahf
cwtl
or
call
arpl
push
add
mov
aas
push
leave
inc
and
mov
and
pop
enter
ja
out
loopne,pn
jge
pop
cmp
xor
sbb
fisttps
aad
pop
cmp
add
movsl
scas
lea
or
lahf
fxch
xor
leave
mov
add
and
mov
push
out
iret
mov
loopne
lret
shl
rclb
sti
fstp
and
pop
jg
lods
sarl
jmp
cli
push
loop
shll
in
mov
mov
iret
add
imul
icebp
mov
sub
pushf
outsb
or
mov
out
mov
insb
inc
add
pop
outsl
xlat
and
jo
sub
sti
cmpl
jmp
cmpsb
mov
bound
mov
shll
push
mov
xor
das
cwtl
cli
cmp
fistpl
pop
out
mov
add
jbe
lret
and
clc
sub
and
pop
sub
mov
inc
ret
adc
or
cs
pop
inc
les
inc
cs
fsts
iret
xchg
js
add
insl
jb
fisttps
mov
cltd
scas
push
aas
lock
or
jns
push
ret
sub
push
sbb
je
xchg
das
nop
mov
repnz
decl
pop
sahf
testb
movl
dec
mov
loope
sub
dec
push
and
xlat
add
orb
push
shrb
cmp
cmp
cld
cmp
xchg
xchg
je
cmp
jecxz
scas
jne
cmp
fidivl
pusha
xor
mov
outsl
sub
pop
push
sub
sahf
shll
clc
xor
fimuls
mov
jb
aaa
icebp
out
mov
lahf
dec
ds
loope
call
jns
jl
sbb
lahf
fildll
cmp
sti
aam
mov
fidivs
test
into
pusha
lods
flds
sbb
lods
and
inc
add
movsb
xchg
jbe
loope
cmc
in
sti
and
mov
dec
inc
add
pop
push
mov
out
mov
push
cmc
sub
test
adc
decl
sahf
ret
rcll
adc
mov
dec
pop
mov
push
mov
xchg
std
sub
daa
mov
push
das
inc
xchg
adc
loopne
lahf
push
clc
iret
lahf
pop
mov
xor
std
xchg
push
imul
std
das
push
or
or
aad
fisttps
add
clc
xor
imul
mov
xor
inc
push
daa
ljmp
in
jp
lret
clc
cltd
xchg
sarb
fcoml
mov
jle
into
loop
fcmove
jecxz
cs
dec
jmp
pop
gs
xorb
imul
add
lods
cwtl
mov
dec
jns
sahf
movsb
cmpsl
push
mov
mov
push
stc
add
test
xchg
sub
jns
jp
sub
stos
push
jo
mov
mov
pop
mov
enter
mov
dec
imull
roll
mov
pop
xchg
and
lods
iret
in
mov
dec
xchg
sub
jne
mov
sub
test
lds
mov
sbb
dec
out
or
xor
hlt
rolb
insb
inc
dec
xchg
lea
mov
out
cmp
mov
pop
aad
lcall
or
out
mov
pop
push
xchg
or
outsb
std
cld
fists
outsl
lds
pushl
sub
leave
cmp
sahf
movsb
out
inc
repz
add
xchg
test
jle
add
insb
das
clc
aaa
scas
xchg
mov
push
mov
fwait
aad
mov
lods
cmp
shrb
ljmp
loope
pop
adc
add
xlat
mov
adc
out
les
movsl
add
repz
lock
call
mov
push
lock
fwait
fwait
or
les
pop
loope
add
xchg
xor
push
push
xchg
or
dec
sub
dec
inc
adc
mov
iret
push
je,pn
xchg
mov
filds
imul
push
lret
jle
movsb
cmpsb
rcr
jle
cmp
add
or
inc
mov
repz
add
xor
into
lock
lds
ret
fsub
mov
daa
push
out
mov
xchg
mov
add
iret
lahf
out
loope
dec
int
pop
negl
adc
cmp
dec
into
and
xor
data16
xchg
mov
or
sub
lret
pop
les
adc
loop
xchg
hlt
sub
pop
inc
popa
popf
repnz
add
movsl
rcr
and
cmc
push
lods
int3
enter
jae
stos
jbe
je
hlt
aas
mov
outsb
cli
daa
mov
mov
lcall
and
aam
mov
hlt
xor
mov
adcb
sarb
icebp
dec
mov
andl
xchg
imul
inc
mov
into
fnstenv
cmpb
inc
lret
jge
into
sbb
dec
lea
push
pop
test
sbb
rclb
int3
pop
jo
sub
shll
and
rorl
mov
hlt
mov
add
loope
mov
and
rcll
pop
aaa
dec
in
mov
daa
push
lods
xchg
insl
xchg
das
fidivs
adc
ja
add
mov
and
ffree
ss
fdivrl
cmp
ret
ds
push
dec
mov
xor
xor
and
mov
inc
stos
or
xchg
ljmp
call
int3
and
push
fsubs
lds
add
push
add
pop
inc
or
cmp
outsb
inc
je
push
and
ja
cmp
fs
pusha
xor
xchg
xor
cmc
test
jae
stc
test
loopne
mov
rcll
mov
les
scas
test
in
jo
divl
sbbl
jg
fdivs
push
insl
test
in
pop
mov
sti
cld
ss
rorb
mov
stos
cwtl
adc
mov
cmpsl
es
push
jle
mov
mov
cmp
mov
pusha
jmp
clc
push
push
cmpsb
mov
fwait
jo
mov
pop
scas
icebp
inc
adc
movsb
icebp
add
int
mov
inc
mov
sub
cmp
adc
popa
mov
adc
and
mull
imul
sarb
ja
and
inc
ljmp
sti
loopne
das
sub
test
adc
mov
or
pop
xchg
cmp
insl
mov
xchg
xchg
add
rol
lock
lret
leave
cs
mov
sub
je
dec
mov
test
xchg
and
repnz
cli
cs
hlt
andb
out
lret
daa
mov
jge
divb
stc
adc
mov
or
and
lret
stos
add
repnz
pop
aaa
mov
rol
cmp
push
inc
out
push
outsl
sub
push
aam
jge
fisttpl
sbb
pop
and
mov
or
filds
sbb
call
mov
stc
push
or
mov
lods
adc
testb
aam
inc
and
sub
cli
adc
imulb
gs
mov
adc
add
rclb
lock
push
mov
aas
adc
andl
mov
mov
sahf
ja
imul
rcrb
adc
push
aaa
outsb
pop
push
add
cli
sub
mov
es
fidivl
das
data16
pop
xor
mov
sahf
stos
jae
insb
or
sahf
mov
dec
je
stos
aas
outsb
xor
jg
cmp
xor
push
out
inc
imul
mov
mov
ret
movsb
fs
mov
test
push
leave
push
sarl
mov
jbe
fldt
call
aam
nop
cmpsl
das
jno
and
cmpsb
cld
push
sub
mov
jl
mov
add
pop
xchg
cmp
sbb
sahf
or
test
or
lea
mov
jmp
or
inc
aaa
fnstenv
cmpsb
sti
in
pop
sbb
push
push
sbb
fldcw
push
out
in
sar
lcall
shlb
adc
xchg
shlb
add
cli
bound
inc
out
mov
dec
xchg
add
push
xchg
inc
in
sbb
mov
ficoms
add
call
pop
mov
adc
push
cmp
inc
push
inc
push
xchg
push
adc
pop
or
pop
or
sbb
cwtl
sbb
mov
mov
or
mov
inc
mov
into
xor
sbb
mov
xchg
test
xchg
push
out
inc
loope
jne
enter
jp
adc
push
jo
es
test
pop
push
iret
xchg
ja
scas
xchg
jne
pop
mov
and
test
sbb
xchg
ret
scas
xor
out
jb
int
test
test
mov
lds
add
jb
lods
and
into
xor
hlt
jg
inc
add
ficoms
push
add
cmovbe
cs
xlat
aad
mov
mov
cmp
mov
cltd
or
push
mov
adc
dec
loope
hlt
xor
cmp
and
imul
inc
add
pop
mov
mov
add
sbb
int3
jmp
mov
enter
dec
popf
test
fldl
lcall
xchg
mov
push
push
fcmovne
shrb
shrl
fldcw
leave
pop
mov
or
fdivp
iret
cltd
inc
addb
add
push
push
pop
mov
adc
movl
in
das
mov
xlat
stos
adc
lcall
jnp
jno
js
push
fstl
add
dec
sub
and
mov
int3
mov
jl
fists
push
jmp
push
cmp
shll
icebp
push
or
jb
mov
xor
dec
push
dec
mov
in
and
sub
test
insl
cltd
mov
rcr
push
and
xchg
int3
loope
xlat
mov
mov
cmp
xchg
xchg
xchg
jge
or
aam
add
mov
js
daa
rcll
inc
fwait
cmpsb
out
test
push
mov
popf
mov
jge
push
leave
push
lock
push
inc
pop
jbe
mov
push
pop
jmp
pop
cmpsl
inc
push
xchg
fwait
adc
cmp
cmc
jo
add
rcr
or
leave
push
cmp
or
mov
push
dec
cwtl
rorl
std
fwait
sub
mov
ret
ljmp
fiaddl
sub
ret
pop
stos
fwait
pop
out
fnsave
push
inc
and
notl
cld
jg
push
sbb
pop
ljmp
sbb
or
xchg
and
or
dec
std
ja
in
nop
mov
lahf
mov
xchg
adc
fcompl
xchg
aaa
leave
push
fmuls
jns
shlb
in
ret
fucomi
dec
or
cs
mov
and
in
jnp
cwtl
fsubr
or
shlb
adcl
imul
gs
or
mov
imul
rcll
out
dec
stos
pop
shll
fnsave
mov
xor
inc
test
add
and
mov
ljmp
sbb
inc
cld
cmp
add
lea
mov
jp
inc
loop
stos
cwtl
mov
xchg
pushf
mov
cltd
push
and
dec
and
add
stc
lock
out
test
and
xchg
push
shrb
lahf
mov
jge
cmp
xor
jns
in
dec
adc
outsl
or
xor
mov
and
hlt
mov
repz
jbe
sub
jno
test
and
aas
fiaddl
outsl
or
mov
sub
mov
jge
out
jno
xlat
icebp
add
insl
dec
or
popf
jno
clc
lea
insl
sbb
jne
lretw
pop
mov
jecxz
loopne
cmp
ret
ret
ret
repz
sbb
icebp
jg
adc
xor
push
lds
adc
popf
jno
lods
lahf
sub
outsl
in
test
adc
xor
clc
pop
pop
inc
mov
nop
mov
xchg
in
adc
pop
xchg
popf
mov
andl
add
mov
and
incb
cld
sbb
pop
cmp
cmp
and
xor
mov
jp
into
rcrl
adc
or
popf
push
xor
adc
mov
int3
ljmp
iret
outsl
sbb
add
dec
add
stos
jbe
dec
lds
mov
add
xchg
js
add
in
xchg
jge
and
mov
lods
add
adc
addr16
cld
cmc
pop
inc
push
push
shlb
mov
or
repnz
jb
imul
push
dec
and
jle
in
insl
lcall
in
int3
aaa
inc
scas
inc
mov
scas
cltd
mov
mov
imul
lahf
out
icebp
roll
push
jne
push
fimull
xchg
mov
xchg
call
int3
test
push
mov
ret
xchg
addr16
daa
lods
xor
cmp
mov
mov
jmp
xchg
jne
jae
jmp
popa
ds
xor
add
leave
dec
mov
bound
mov
sbb
fcompl
loopne
mov
and
jbe
push
pop
sub
xor
mov
call
push
pop
mov
xor
imul
dec
mov
cmp
out
roll
xor
sahf
or
cmp
mov
mov
add
lock
adc
sub
andb
and
push
insb
dec
push
add
push
inc
sub
mov
leave
mov
and
mov
ljmp
mov
sub
fidivs
aam
cmpsl
lret
int
pop
push
mov
iret
cmp
cli
cmp
jmp
mov
sub
fwait
scas
imul
int
test
add
popf
aaa
pop
or
mov
mov
aad
lods
xchg
imul
xchg
jnp
pop
pop
pop
fimuls
imul
test
mov
sbb
mov
sbb
mov
xchg
xchg
mov
push
mov
mov
test
or
mov
sbb
outsl
je
mov
dec
xor
iretw
and
scas
cmp
in
test
push
sub
jge
adc
in
dec
dec
cs
call
xor
jg
movsb
push
lcall
pop
cmpsb
addr16
and
jmp
mov
jp
pop
ss
adc
xchg
mul
rol
adc
ljmp
mov
xchg
mov
xor
xchg
jnp
sub
ss
repz
cltd
inc
inc
cmpsl
andl
clc
out
repz
daa
loop
mov
loope
push
fldcw
mov
mov
lcall
stos
inc
adc
imul
fcoms
sbb
sysexit
lock
mov
testb
test
insl
mov
and
mov
sbb
outsl
sub
mov
mov
je
clc
dec
dec
xor
into
lds
sahf
mov
cmp
add
mov
push
pop
mov
ljmp
push
dec
js
lock
jne
jecxz
cmpsl
pop
les
test
add
mov
fs
dec
lcall
mov
mov
lahf
gs
sub
jl
jbe
cs
ljmp
jne
push
mov
cld
push
icebp
imul
cld
test
incb
push
repnz
sub
sbb
cmpsb
mov
mov
pop
cmp
test
subb
sbb
mov
mov
ret
jbe
cwtl
push
sub
in
cmpsb
mov
xchg
pushf
repz
mov
push
rorl
jb
cld
mov
test
mov
data16
cmp
pushf
cld
sbb
fwait
scas
sbb
mov
lret
stos
ja
std
jp
push
pushw
testb
lret
addb
inc
or
les
sbb
sbb
adc
lcall
loop
xor
add
pop
xor
test
push
addl
jno
bound
jg
cs
test
xchg
sub
shll
push
in
mov
adc
pusha
lea
mov
in
imul
adc
mov
pushl
insb
lret
je
test
test
rclb
cmc
push
jge
addr16
insb
test
aam
add
xchg
and
pop
inc
test
addb
pushf
int3
in
adc
sub
dec
or
rol
sahf
enter
dec
pop
mov
adc
and
xchg
xorl
scas
dec
jbe
pop
cli
jmp
push
ficompl
sbb
xchg
push
test
add
cmpsb
enter
inc
inc
xchg
ficompl
cmpsl
mov
xor
rorb
dec
or
aas
movsl
rcll
ja
jg
jg
push
lcall
dec
dec
mov
js
cmp
and
push
pop
loopne
or
add
pop
mov
xchg
movsb
imul
lahf
sub
inc
iret
popf
cmpsb
push
xchg
adc
arpl
cmpsb
sbb
sbb
cmpsb
mov
push
mov
adc
mul
pop
nop
andb
push
xorl
sahf
mov
ret
icebp
std
xchg
lock
fwait
enter
add
scas
loope
xor
mov
loop
movsb
jae
xchg
xchg
add
pop
pop
out
rolb
aas
and
mov
xchg
inc
idivl
popf
insb
lods
lods
in
aad
mov
inc
cmp
pop
inc
or
fiaddl
xchg
divb
jge
shrb
movb
cs
add
push
mov
mov
out
pushf
and
mov
stos
cltd
pop
mov
xchg
addb
sbb
movsl
pop
ret
sbb
push
push
cmp
dec
pusha
jb
add
data16
mov
mov
std
aaa
outsb
push
bound
sub
mov
sbb
sub
ljmp
sar
mov
in
or
push
mov
pop
sti
jecxz
dec
inc
icebp
sub
jne
out
push
jae
das
stc
std
dec
pusha
push
pop
movsl
sub
mov
inc
outsl
outsb
pop
push
and
lods
xor
jbe
icebp
jle
jg
ret
outsb
int
shll
push
movsb
or
jge
push
sub
rol
adc
mov
sbb
mov
adc
push
movsb
lods
cltd
shlb
push
hlt
packssdw
out
lahf
jp
mov
xchg
test
push
imul
adc
jne
pop
mov
int3
jle
test
push
or
and
mov
test
jbe
gs
sbb
xor
movsb
lea
jb
outsl
ret
add
inc
sbb
iret
imul
pop
jl
in
adc
andb
mov
or
gs
xchg
pop
mov
xchg
cmp
gs
mov
mov
jge
pop
adc
cmp
jae
jb
rorl
lea
ficoml
addl
cmp
push
mov
cmc
cmp
and
int
mov
sbb
jns
mov
enter
or
test
loop
outsl
unpcklps
out
jbe
push
adc
mov
lock
call
mov
in
ret
xor
bound
cmp
push
enter
ss
movsl
call
hlt
xor
cmp
mov
ret
pop
aam
xchg
pop
insb
or
add
xor
and
push
out
sbb
add
aaa
test
cmpb
pusha
fisubl
or
sbb
es
add
cld
push
xor
mov
bound
mov
cmp
push
mov
mov
sbb
outsb
push
sub
mov
sti
fsubs
arpl
sub
pop
xor
fbld
pop
or
dec
sub
inc
sbb
mov
inc
pusha
lahf
and
inc
imul
mov
arpl
sbb
js
push
ja
or
test
loopne
push
lcall
or
sbb
jmp
dec
mov
shll
or
je
leave
or
and
mov
pop
push
or
push
into
pushf
xlat
mov
fildl
ljmp
or
mov
cmp
jbe
shlb
aas
popa
push
sbb
jns
pop
mov
push
fsubrs
dec
rcrb
push
stos
mov
test
jne
xchg
sbb
jecxz
movl
cmovns
out
pop
ret
andb
xchg
jg
stc
inc
push
mov
test
cmpl
cmp
add
test
xchg
push
leave
repz
jg
popa
xchg
loope
dec
xor
push
push
in
xchg
add
out
fbld
fcomps
roll
adc
cmpl
jbe
repnz
shlb
outsb
bound
ja
lods
inc
cmp
test
adc
cmp
out
int
data16
mov
dec
xchg
push
or
inc
sub
pop
xchg
es
cmp
int
jae
sbb
push
pop
cmpsl
pop
xchg
int
sbb
test
cld
or
xchg
dec
daa
mov
popf
push
insb
mov
fsubs
dec
rcll
jno
inc
mov
ljmp
lahf
cwtl
lock
or
gs
dec
insl
shr
adc
pop
in
ret
sub
out
inc
nop
cmp
pop
pop
push
xchg
push
mov
into
push
xchg
adc
mov
xchg
cwtl
xor
fbld
hlt
js
mov
insb
pop
mov
icebp
ljmp
loopne
in
add
pop
xor
mov
cmp
and
in
add
dec
cmp
js
or
add
shll
mov
mov
push
scas
xchg
in
mov
xchg
out
adc
sbb
jmp
dec
test
cmpsl
adcb
jle
push
scas
dec
jbe
lea
fadds
fildll
nop
add
xchg
mov
pop
sbb
or
stos
adc
pop
jle
insb
imul
mov
cmp
sbbb
and
inc
dec
mov
lods
adcb
in
lcall
repnz
adc
add
sub
sbb
pop
lea
sbb
sub
jecxz
or
addr16
aad
cmp
inc
mov
fdivrl
fiadds
fiadds
rcrb
dec
inc
inc
push
sub
addr16
std
dec
sbb
cld
sbb
sub
pop
sub
mov
jo
sub
sbb
sub
jb
add
mov
daa
xor
sub
pop
cli
push
pop
les
mov
iret
mov
sbb
cld
mov
xor
mov
xchg
and
rcrb
scas
aas
scas
push
mov
mov
outsb
jnp
jle
into
xlat
or
xchg
xchg
xchg
xor
adc
test
dec
in
ljmp
adc
int
adc
mov
mov
aam
xchg
bound
mov
jle
inc
insb
mov
mov
test
or
push
pop
lea
mov
das
inc
es
shll
test
mov
std
pop
fs
pop
shll
cld
pop
sti
xor
push
cmp
sub
cmc
rcll
push
cltd
xchg
nop
sbb
shl
cmp
jg
rcll
push
add
jae
sarl
cmp
shlb
mov
pushf
dec
mov
dec
enter
xchg
xchg
subl
loop
test
mov
and
add
lock
adc
es
sarl
cmp
xchg
orl
add
aas
out
push
ja
sub
and
scas
dec
and
mov
ror
mov
push
mov
jbe
iret
cld
std
xchg
hlt
push
pusha
push
fisttps
mov
xlat
adcl
fsubrs
push
nop
lahf
pushf
loop
into
adc
insl
adc
xchg
jg
clc
jle
stc
jl
imul
stos
out
repnz
push
xchg
lahf
or
mov
xor
jne
fdiv
mov
jne
and
sub
cmpsl
lods
or
lods
pushf
leave
mov
sbb
jg
and
add
adcl
in
mov
mov
jp
mov
xor
or
not
in
push
mov
xchg
and
lret
shll
mov
mov
xchg
jecxz
cmp
or
mov
mov
xlat
sbb
clc
je
xchg
push
inc
test
frstor
mov
outsl
jl
add
cltd
fidivs
xchg
pop
iret
push
push
push
cli
sbb
push
adc
xor
lahf
push
jecxz
xchg
sub
das
loopne
adc
sub
lret
inc
test
fwait
ljmp
adc
mull
inc
push
jbe
dec
inc
pop
leave
mov
mov
xchg
les
pop
cltd
xorl
or
dec
decb
inc
ds
leave
lret
icebp
lcall
cli
cmp
ret
jmp
mov
jo
test
sub
adc
add
inc
or
test
psllq
and
dec
clc
push
mov
sbb
gs
lar
xchg
or
pop
hlt
cmpsl
cld
add
dec
outsb
xor
lods
cmc
clc
out
lds
imul
jg
loopne
and
dec
cld
or
stc
cmp
lds
xor
add
jnp
jb
pop
cld
mov
jae
push
push
xor
mov
fcom
lret
xchg
adc
jmp
cmp
cmp
pushf
mov
push
out
es
mov
fsts
mov
and
sti
dec
mov
mov
add
ss
cltd
lret
lock
fstps
ds
sub
dec
bound
rcl
mov
ds
mov
cld
cltd
in
jo
and
mov
lahf
xchg
outsl
xor
sub
nop
mov
jg
loop
cmp
lahf
adc
sub
pop
nop
scas
aaa
pop
xor
sbb
cmp
mov
mov
adc
cmp
shll
in
push
pop
push
xor
in
pop
popa
xor
cmp
lcall
loopne
iret
mov
dec
popa
sub
clts
or
xor
mov
push
sub
into
pop
push
movsb
add
xlat
int
dec
popa
or
dec
testl
movsb
js
jmp
imul
mov
dec
movsl
aas
fs
xor
jae
test
mov
jb
cmp
test
inc
lea
mov
ds
es
mov
mov
nop
or
std
jns
js
or
lea
loop
fldl
rorl
loopne
dec
test
insl
jo
idivb
and
dec
xchg
aas
mov
xor
mov
dec
cld
stos
leave
mov
mov
test
sbb
sahf
dec
dec
hlt
dec
mov
jl
es
push
pop
stos
or
gs
aas
addr16
jecxz
and
and
jmp
lcall
ret
out
sarl
mov
inc
scas
cs
dec
mov
stos
sub
inc
loopne
push
sub
pop
xchg
clc
cmp
sub
aas
aad
mov
notb
sub
jae
mov
imul
out
notb
pop
lods
repz
fidivl
leave
or
test
rcrl
das
mov
cmp
xchg
clc
mov
pop
and
call
sahf
jo
jge
xchg
in
jb
cmpsb
aas
repnz
xchg
inc
popf
frstor
xchg
std
mov
push
fcomp
test
addb
imul
jne
adc
dec
scas
int3
add
jmp
arpl
cltd
mov
or
add
inc
cmpsb
sbb
push
lcall
sahf
jnp
lret
inc
cmc
fsts
hlt
icebp
pop
scas
push
add
aad
inc
pop
or
imull
cmp
add
or
mov
lods
push
and
push
or
pop
insl
ja
ja
xchg
aam
adc
fwait
cs
je
mov
bound
sbb
mov
add
fmuls
cmc
jo,pt
adcb
jnp
out
xchg
lods
into
sti
out
inc
push
xchg
out
dec
or
pop
mov
out
add
xchg
repz
fstl
ss
ds
xor
outsb
push
frstor
jg
mov
mov
cmp
shr
nop
insb
inc
mov
loopne
mov
repnz
into
cmp
cld
fucom
out
push
mov
mov
add
std
pusha
jb
sbb
inc
subb
cmp
adc
icebp
push
push
test
mov
add
mov
nop
sahf
push
sbb
xchg
inc
movsb
not
cs
addl
lds
scas
fsubl
mov
mov
sbb
into
in
xlat
sub
and
mov
sbb
pop
lods
neg
xchg
fwait
repnz
inc
pusha
stos
fstps
adc
and
hlt
mov
cmp
btsl
sbb
popa
lret
adcb
imul
clc
inc
mov
repnz
mov
lret
fnstenv
bound
imul
inc
add
test
mov
sub
dec
enter
test
pop
mov
and
nop
pop
inc
sub
mov
scas
push
dec
dec
fwait
imul
inc
fcmove
andl
cmc
and
pop
sub
mov
loope
loope
fldl
jb
test
test
xor
lret
rcr
lea
add
mov
stos
int
ss
push
or
int
and
xchg
mov
imul
lahf
jle
shrl
dec
mov
dec
pop
movsb
stos
rcl
adc
fwait
popa
pop
sbb
dec
mov
pop
enter
imul
cmp
cmp
hlt
adc
stc
add
jne
lds
test
cmp
jmp
divl
cmp
lock
cmp
lock
lea
jo
je
cmp
jecxz
jle
mov
test
jb
xor
inc
push
jb
sbbl
pop
dec
pop
mov
sbb
mov
adc
push
scas
cmpsl
sbbl
inc
leave
jno
adc
fwait
dec
inc
rorl
sub
mov
aaa
xor
cmp
mov
jns
jge
inc
mov
xchg
pop
mov
jne
xchg
incl
inc
iret
xchg
and
das
add
jbe
pusha
jecxz
stos
lret
xchg
data16
xor
ret
lock
inc
xchg
andl
jbe
push
ret
nop
rcll
ljmp
add
nop
dec
stc
cmp
mov
pushf
sbb
iret
sub
into
sbb
inc
test
hlt
jo
fiadds
sarb
cmp
test
sahf
insl
pop
mov
xor
mov
mov
aam
jg
jbe
outsl
lret
int
in
lds
das
aam
out
xchg
dec
or
ret
leave
mov
pop
xchg
adcb
xor
mov
arpl
xchg
aaa
cmp
mov
xor
xor
inc
nopl
pop
icebp
addl
dec
cmpsb
cmp
and
xchg
sub
lcall
es
inc
ret
flds
xor
pop
xorb
aaa
inc
mov
jmp
mov
and
pop
cmpsb
push
cmp
ret
xchg
pop
inc
or
outsl
adc
dec
jge
mov
dec
add
lock
hlt
add
mov
inc
mov
jnp
sbb
and
push
or
cli
mov
push
hlt
outsl
arpl
addr16
out
pop
cmpsb
unpcklps
insl
mov
lret
dec
sbb
adcb
xchg
pop
int
fisttpl
test
test
mov
mov
xor
in
scas
notb
push
or
sahf
jge
movl
and
fstp
xchg
outsl
aad
cmp
push
cltd
pop
push
and
movsl
mov
sub
rorl
jnp
mov
pop
mov
ds
dec
mov
clc
dec
repz
ret
imul
and
divb
fdivr
sti
sub
mov
insb
cmp
lret
aas
popa
xchg
ret
sbb
mov
mov
xchg
rolb
cli
push
loope
std
mov
dec
imul
xchg
stos
or
pop
fsubrp
dec
xor
fs
mov
sbb
mov
inc
push
cwtl
jp
xor
test
jg
lods
cmpb
xchg
aam
popf
push
repz
mov
inc
outsl
call
cmp
adc
push
fistpll
mov
cmp
int
test
sar
std
stc
daa
cmc
or
lret
ret
xchg
xlat
lock
inc
ret
xchg
mov
adc
aas
dec
int
sub
mov
jno
repnz
rcll
mov
mov
xor
fdivrs
xor
jle
jo
loopne
xor
insb
jno
pop
mov
push
sub
fdiv
call
outsb
mov
cld
mov
adc
push
or
inc
jne
data16
scas
scas
movsb
jno
pop
mov
into
add
mov
lret
shlb
lret
call
inc
ljmp
jne
inc
fildll
sub
movsl
or
add
or
fildl
mov
mov
adc
add
inc
add
faddp
pop
cwtl
pop
push
test
inc
cmpsl
imul
icebp
out
or
mov
xor
jle
negb
out
cmpl
adc
push
pop
mov
lcall
aad
jnp
hlt
mov
insb
daa
pop
mov
out
xchg
jno
aad
lods
mov
fs
pop
jnp
and
mov
sbb
mov
sub
sub
jb
sub
out
fs
das
lret
daa
inc
mov
movsl
movsl
push
ss
pop
adc
jp
sbb
sti
cmp
stos
push
mov
andb
shr
out
mov
jno
sbb
add
out
dec
hlt
jbe
test
testl
xor
ficompl
and
push
std
mov
test
sbb
pop
das
jno
fstl
mov
dec
pop
jecxz
or
cmp
push
loope
add
divb
sub
andb
push
lock
jbe
jge
test
pushf
push
jp
mov
xchg
push
movsl
lret
repnz
out
pop
pop
out
mov
jae
fst
or
mov
add
xchg
imulb
jge
mov
in
leave
mov
adc
pop
mov
std
cwtl
shl
xor
mov
jae
xor
out
testl
sbb
lods
push
push
xor
jne
ficoms
jmp
pop
in
fnstcw
and
jg
outsl
xor
sub
movsl
and
cmpsb
repz
xor
or
jge
dec
mov
lock
inc
or
bound
aad
subb
js
mov
xorl
adc
mov
mov
negb
mov
xor
lret
mov
or
das
das
scas
rcll
add
sub
push
mov
push
xor
xchg
sbb
xchg
mov
in
adc
daa
xchg
iret
fmuls
pushf
js
and
xchg
dec
xchg
cmpsl
rcrl
sahf
int3
inc
mov
sub
mov
push
mov
sbb
stos
repz
push
imul
out
sahf
arpl
dec
movsl
insb
enter
dec
iret
setne
leave
iret
scas
xchg
int3
lret
loop
mov
push
pop
inc
ss
sub
out
jb
and
push
daa
sahf
inc
leave
outsl
ss
sar
mov
stos
adc
jmp
push
xorl
jne
popf
cs
in
in
rcrb
dec
call
stc
ret
sub
dec
or
mov
sub
xchg
jle
mov
mov
fcmovne
pop
sub
sti
jb
in
dec
aaa
sbb
inc
xor
sti
mov
iret
stc
xor
pop
pop
movsl
scas
ljmp
mov
and
outsl
cmpl
add
add
fs
jnp
int
iret
testl
fsubl
lahf
xchg
aam
pop
cmp
lods
xchg
ret
ss
sahf
dec
inc
jp
inc
jae
sub
pop
push
xor
sbb
loop
jo
mov
or
test
inc
leave
fstpt
mov
imul
ss
sub
cmc
mov
test
mov
lret
lods
cs
neg
jne
mov
imul
and
sbb
in
mov
or
rorb
aad
mov
sub
inc
sbb
mov
push
aas
insb
xchg
adc
lret
inc
xor
stos
sub
xor
jge
xor
outsl
clc
mov
iret
dec
cmovl
dec
mov
cs
mov
cmpb
dec
fisttps
popa
test
lret
jnp
push
jle
fildl
pop
xor
dec
hlt
adc
xorb
and
sub
lret
add
smsw
add
pop
xchg
and
hlt
jb
in
lock
stos
mov
inc
cli
add
cmpsl
mov
adc
push
enter
mov
test
cs
pop
adc
imul
fld
inc
xor
xchg
inc
mov
cwtl
lret
push
sbb
push
fiaddl
mov
rorb
daa
test
xorl
out
mov
inc
xchg
push
loop
push
pop
ss
test
jp
popf
mov
pop
lea
inc
dec
sbb
sbbl
std
pushf
pusha
adc
std
aad
je
mov
inc
stos
push
int
mov
mov
push
mov
push
in
adc
notb
fadds
jno
adc
and
pushf
inc
cld
sub
test
pop
aam
dec
xchg
mov
mov
psraw
lahf
lret
push
and
shlb
cmpsl
lock
or
inc
outsl
pop
add
lret
imul
pop
sub
in
in
push
mov
nop
fsub
xlat
mov
test
xchg
sub
push
stc
pop
cwtl
mov
dec
add
push
dec
inc
inc
lcall
mov
in
scas
nop
jl
inc
cwtl
mov
pop
dec
adc
mov
mov
adc
pop
loope
sbb
mov
inc
sbb
adc
cmp
std
push
insb
loop
adc
xchg
cs
or
cltd
sub
daa
xor
xchg
mov
repnz
cmpb
sub
pop
aaa
lods
fimull
push
nop
adc
jo
push
lahf
pop
loope
push
or
lret
fldln2
int
or
ss
pop
mov
test
mov
cmp
out
fcomi
xlat
sbb
jae
sbb
sbb
frstor
andl
cmp
jle
fidivrl
fadd
pop
aas
lds
xchg
push
mov
jnp
in
pop
and
cmp
lods
subb
punpckhwd
sub
hlt
ret
add
jne
imul
push
xlat
push
mov
sahf
inc
test
push
je
out
mov
xor
out
nop
iret
daa
sub
sbb
pop
shl
addb
pop
test
lret
cmovns
jns
sti
sub
dec
test
and
xor
out
or
pop
popa
hlt
sub
call
sbb
sub
cmp
testb
sbb
add
mov
in
test
push
jae
sti
lods
andl
mov
scas
cmpsl
or
gs
pop
cltd
cmpl
dec
mov
add
cmp
fscale
add
div
add
fisubl
sub
scas
repnz
or
cli
insl
bnd
mov
insb
into
add
fwait
ret
xlat
adc
stos
out
xor
insl
data16
out
test
or
inc
and
jns
xchg
inc
ss
inc
testl
fimull
shl
imul
xor
dec
xchg
das
sbb
sub
push
shl
idiv
fdiv
mov
in
sub
cwtl
lock
clc
xor
cmp
sub
aas
jnp
jge
dec
lea
sub
or
fwait
jno
inc
dec
pop
in
push
int3
cmp
lods
push
mov
sarb
cmp
xchg
cli
sub
rcll
cmpl
cmpsl
inc
stc
es
mov
lock
flds
cmp
mov
pop
jmp
test
dec
repnz
xchg
cwtl
jp
insl
or
pushf
or
add
dec
sub
sbb
inc
sub
pop
nop
push
fnstcw
pop
sub
sub
inc
add
pop
cmp
sbb
pop
mov
outsb
fld
test
clc
popl
pusha
flds
jbe
out
inc
or
pop
cwtl
jne
or
push
icebp
repnz
mov
mov
cmp
ret
jg
push
or
stc
dec
adc
fisttps
iret
pop
pop
sbb
push
jae
fstpt
sub
or
mov
mov
out
xchg
push
cmp
bound
enter
jo
jae
adc
bound
popl
cs
dec
inc
inc
xchg
das
out
xchg
test
add
cltd
daa
sbb
xchg
icebp
xor
cwtl
or
lock
leave
cmp
mov
pop
fdivrs
stos
jno
or
xlat
pop
pop
shll
mov
dec
jg
das
jae
push
cli
jle
cmp
xchg
fsubs
sub
mov
jl
push
add
sub
xlat
cmp
icebp
mov
xor
cmp
add
sbb
adc
imulb
jle
jb
and
movsl
js
push
pop
sbb
in
jno
mov
out
sbb
imul
mov
cmpsb
push
push
out
jbe
adc
andl
fists
xor
mov
mov
std
clc
xchg
idivl
fdivs
ss
jmp
faddl
idivl
or
adc
das
pushf
add
xor
jmp
push
shl
adc
dec
ret
xchg
scas
or
jb
sub
push
dec
sub
fimull
sbb
mov
pusha
fdivs
loop
mulb
leave
hlt
sub
mov
jg
mov
movsl
add
scas
stos
add
faddp
push
das
mov
push
lods
inc
popl
adc
into
xchg
fdivrs
into
ja
sub
insl
andb
xor
fstps
pop
sbb
dec
into
or
dec
pop
stc
fisttpll
je
xor
xchg
pop
cmp
popa
cli
sti
mov
push
aaa
ret
pop
subl
xchg
and
mov
push
loopne
ret
into
xor
pop
shlb
dec
dec
jmp
xor
movsb
mov
data16
sub
gs
stos
lahf
xchg
out
add
test
cmp
cwtl
inc
push
orl
or
adc
subb
sarb
xchg
mov
or
mov
sub
xor
adcl
inc
dec
dec
lahf
or
lea
cmp
addr16
ret
mov
mov
pop
adc
add
mov
fmul
arpl
xor
fdivrl
xchg
sahf
sbb
jno
push
ljmp
mov
lock
sbb
sbb
gs
iret
ficomps
in
mov
and
insb
cmpsb
mov
or
add
add
cwtl
loope
iret
cmpsl
aas
lea
out
movsl
imul
cmp
stc
sbb
lret
and
push
jns
scas
xchg
push
out
aas
stc
xchg
dec
push
sbb
dec
inc
das
loopne
mov
push
mov
xor
push
in
lret
cmp
cmpsl
push
outsl
sub
stos
aam
xchg
cmc
pop
jns
or
inc
jle
push
or
mov
icebp
sub
mov
iret
push
clc
outsb
icebp
jne
inc
scas
repnz
xor
aam
lea
cmp
in
mov
idivl
pop
push
sbb
pop
mov
push
icebp
fcoms
rcrb
and
daa
movsb
jge
stc
push
aad
test
mov
pop
pop
popf
mov
sbb
adc
mov
or
lret
sbb
mov
sbb
push
ja
sub
rorl
aaa
stos
fcompl
ret
push
adc
mov
ret
adc
out
imul
inc
dec
cmp
xor
adc
and
cmpsl
icebp
xchg
sub
mov
pop
jb
mov
push
xchg
or
adc
mov
push
je
aaa
shlb
ljmp
push
adc
sti
sbb
lret
adc
pop
or
push
mov
mov
or
loop
and
sar
mov
mov
int
test
sbb
push
jb
pop
lods
xchg
leave
loopne
std
ljmp
out
jl
inc
push
negl
push
push
aad
mov
and
cmp
mov
jmp
push
ret
add
movl
push
out
imul
jb
or
xor
or
jno
push
pop
popf
cmp
lret
xchg
and
push
test
test
popa
das
sarl
cmc
push
loope
negb
rorb
lcall
es
cld
pop
push
imull
leave
pop
xchg
lock
or
andb
cmp
pop
push
pop
xlat
int3
inc
cmc
gs
insl
xchg
cltd
xchg
jle
jne
push
sub
jp
es
mov
fcmovne
scas
outsl
xor
insl
je
cmpb
lret
mov
dec
lret
mov
out
clc
mov
sbb
stos
mov
jmp
sbb
cmp
sbbl
xor
shll
cmp
cmc
lcall
cmc
or
push
ret
push
jns
popa
in
nop
cmpsb
stc
xchg
pushf
mov
jge
jle
pop
imul
and
popa
out
shlb
pop
sahf
out
push
mov
jmp
daa
mov
add
jle
int3
jle
pop
in
outsl
add
ds
cmp
xor
inc
pushf
aam
sub
in
inc
xor
stos
lret
sbb
pusha
and
mov
fdivrl
outsb
arpl
das
into
mov
stos
sub
in
dec
imul
mov
mov
popa
rorl
mov
xor
fcoms
iret
iret
cltd
stos
lret
aas
pop
shlb
scas
fbstp
scas
stos
hlt
ds
cli
jecxz
call
adc
out
lods
imul
sub
xchg
sbb
or
xchg
fsubl
in
loopne
cli
frstor
adc
pop
ja
mov
hlt
nop
sarb
push
jge
xor
insl
pop
pushf
xchg
fcom
inc
inc
aam
ds
repz
shll
movsl
sub
lret
push
fs
scas
mov
ret
sarl
xor
repz
out
xchg
clc
icebp
sub
in
jmp
and
andl
sbb
mov
mov
call
cmp
dec
jmp
repnz
bound
xorl
roll
shrb
mov
aam
popf
sahf
xchg
aam
push
movsb
xchg
ret
inc
fistl
mov
das
les
mov
cs
or
jmp
xlat
imul
insb
cwtl
mov
out
cmpsb
pop
sub
aad
je
rcrl
pop
outsb
cmpsb
jmp
imul
cmc
das
loop
push
fmull
mov
xchg
dec
push
sbb
mov
mov
xor
pop
mov
loope
pop
jmp
cs
leave
sbb
sarl
jge
push
punpckhbw
dec
movsb
aad
fsub
nop
mov
jno
sub
mov
test
adc
in
sub
mov
xchg
mov
jae
mov
and
les
sbb
mov
add
sub
adc
iret
push
stos
loopne
push
push
mov
iret
loopne
pop
cmpsl
cmp
mov
into
sub
add
lcall
adc
mov
repz
lock
mov
std
roll
adc
ret
adc
addb
dec
dec
pushf
arpl
adc
stos
inc
in
lock
or
pop
fnstsw
orl
addr16
sub
call
pop
mov
xchg
dec
xchg
scas
sar
sub
mov
icebp
xchg
push
add
insl
stos
xor
xchg
repnz
inc
fstpl
cli
inc
mov
subb
ja
pop
cli
icebp
xstore-rng
cmpsl
xor
in
in
sub
fisubl
ds
shlb
mov
pop
iret
pop
rclb
ljmp
pop
ret
stc
enter
mov
pop
push
dec
das
loope
incb
fsubl
and
inc
dec
mov
or
sbb
fists
test
dec
dec
arpl
les
aas
push
xlat
vunpckhps
out
loopne
shlb
mov
insl
ja
out
imul
cmpsl
outsl
xchg
aaa
popl
stc
stc
pop
ds
int3
jne
xchg
adc
daa
imul
mov
les
and
dec
lods
mov
adc
jl
cmp
mov
and
shll
adc
subl
cmc
push
into
lcall
mov
rcr
pop
movsl
xchg
mov
jae
aam
fsubrl
ret
adc
repz
mov
lret
add
mov
jg
hlt
push
adc
xchg
dec
aaa
fnsave
test
ja
rclb
pop
lret
stc
mov
push
sbb
adcb
enter
std
dec
jle
dec
mov
and
sbb
outsl
stos
daa
sbb
push
xchg
pop
iret
fwait
mov
mov
inc
cmp
ljmp
cmp
andb
mov
ljmp
je
mov
cmpsl
cmpsb
xchg
jle
and
xor
inc
pop
sbb
clc
imul
popl
rol
lcallw
jb
cmp
into
shlb
push
and
cmp
ja
hlt
lret
lea
lock
leave
and
in
cmp
ror
int3
pop
mov
inc
push
dec
push
jg
lods
sar
sbb
jl
paddusb
imul
push
pushl
mov
icebp
mov
ret
sbb
inc
out
mov
imul
test
inc
sub
mov
and
std
popf
inc
pop
inc
xchg
push
sub
jl
imul
push
jecxz
or
jb
decb
and
xchg
call
es
addr16
data16
jb
push
jo
movsb
cmp
and
les
xchg
dec
iret
pop
orl
adc
xor
mov
jbe
dec
add
jb
imull
pop
fdivs
bswap
cltd
jmp
loope
bound
dec
xlat
xchg
hlt
aad
adc
sahf
dec
mov
nop
mov
adc
inc
xorl
call
clc
aad
inc
pop
xor
adcb
pop
in
jg
sbb
dec
pop
push
and
popa
jne
pusha
or
mov
ljmp
xchg
stos
add
xor
data16
cli
mov
jecxz
stos
mov
out
inc
jbe
sbb
dec
mov
ljmp
mov
inc
mov
stc
push
pop
sbb
bound
pop
hlt
outsl
add
cmp
popf
sub
mov
aam
popa
ja
jo
xor
divl
or
arpl
xor
jbe
ret
or
xchg
cmp
out
insb
jne
sub
into
movaps
loop
mov
stos
je
push
dec
jge
addr16
and
cmpsb
sub
push
and
cmpsb
mov
inc
ss
sbb
pushf
stos
jo
aad
f2xm1
mov
sub
ficompl
jle
insb
call
sub
dec
popf
dec
push
push
xchg
ret
push
lea
push
stc
push
pop
sbb
inc
pop
loope
movsb
dec
xchg
dec
aam
ss
in
lods
and
dec
add
cmp
jl
jp
pop
stos
nop
dec
sub
jl
mov
jl
movsl
mov
pop
jo
push
adc
ds
lock
and
mov
bound
lods
lret
fistpl
fidivrl
in
sbb
sahf
addb
sbb
dec
adc
jmp
push
mov
push
xchg
jge,pt
push
sbbb
pop
jge
xor
in
js
xor
outsb
data16
out
sbb
mov
mov
test
icebp
mov
sti
out
jg
pushl
rcrb
sub
xor
xor
jg
inc
fmuls
arpl
xchg
sub
inc
cli
jne
or
movsb
fadd
or
out
push
std
idivl
xchg
out
jns
xor
pop
out
icebp
jnp
sub
int3
xchg
mov
xchg
mov
pop
clc
and
mov
mov
mov
jns
clc
xchg
fnstsw
mov
and
sbb
dec
outsl
mov
xchg
in
xchg
psubd
test
inc
fadds
mov
jecxz
aas
mov
cltd
xchg
jo
and
in
mov
out
sub
cmp
outsl
ret
sbb
and
test
fneni(8087
je,pn
shll
add
outsb
mov
mov
adc
inc
sbb
xchg
jns
pop
cmc
int
and
test
pushf
cmc
imul
in
dec
jecxz
lds
cmpsl
call
aad
xlat
test
fsubp
sti
in
cmp
aaa
dec
das
popa
or
dec
cmp
sbb
es
lret
iret
xor
mov
pop
popf
and
mov
dec
jp
adc
pop
cli
lock
and
and
stc
push
jl
xor
adc
subb
jmp
sbb
test
js
xchg
xchg
pop
scas
jle
push
pusha
ficoms
inc
insb
dec
sbb
mov
test
add
outsl
pushf
pop
pusha
popa
subb
jns
mov
jbe
pop
rorb
xchg
arpl
jl
inc
and
pop
aam
push
mov
inc
xor
aad
pop
movsl
inc
repz
fldt
sbbl
enter
inc
adc
es
in
aam
in
adc
xchg
and
cmpsb
xlat
stos
rolb
fldcw
push
mov
movsl
into
push
dec
repnz
mov
pop
lret
pop
xchg
scas
jl
pop
lret
fyl2xp1
sti
insl
push
clc
out
lods
cmp
push
jne
push
into
lcall
cs
sub
fstp
inc
pop
popa
stos
scas
fscale
jp
sti
insl
inc
stos
mov
repz
hlt
xor
push
fsubl
shlb
popa
mov
xchg
test
jecxz
lods
repz
inc
lods
cmp
dec
pop
lret
in
addl
std
lods
push
sub
push
aad
divb
addr16
inc
or
xchg
lahf
mov
add
lds
cltd
cltd
mov
in
in
decb
xchg
dec
hlt
cli
xchg
mov
adc
mov
pop
aam
fwait
sub
push
sub
dec
push
icebp
and
adc
bound
mov
repnz
in
jo
xor
or
xchg
pop
sbb
adc
orb
xchg
sahf
sub
dec
fmulp
sbb
subb
sbb
sub
cmpb
mov
add
adc
cld
loop
push
sbb
fldt
inc
dec
inc
mov
sti
push
lods
enter
rcrb
pop
xlat
xchg
lret
jbe
shlb
pop
call
fmull
repz
sbb
insl
mov
jge
or
lcall
pop
out
cmpsb
out
inc
sub
lods
test
scas
jp
jae
xchg
sbb
push
cld
cmpsl
mov
xor
out
push
subl
nop
sbb
push
or
rorb
pop
inc
mov
lret
stos
adc
les
dec
or
mov
push
sbb
leave
nop
pushf
andl
sub
xrelease
mov
call
aam
mov
pop
cmc
lea
les
aaa
je
inc
mov
inc
jo
push
dec
push
test
pop
cli
roll
xchg
dec
mov
bound
xor
jns
aad
stos
addr16
js
push
repnz
xchg
adc
test
adc
cwtl
outsl
push
and
xchg
xchg
inc
adcl
inc
mov
imul
pop
ficompl
mov
mov
inc
outsb
cmc
aas
es
mov
aam
push
ret
js
loopne
mov
jne
xlat
je
ret
cmp
ror
mov
mov
mov
incb
push
and
jb
dec
dec
mov
jns
js
subb
das
push
in
and
popa
stos
inc
insb
mov
and
mov
aaa
sbb
or
dec
mov
adc
adc
dec
mov
jmp
pop
pop
hlt
pop
mov
test
lock
js
xorl
cwtl
jb
sbb
jmp
pop
mov
cltd
orl
mov
cmp
xor
jae
imul
fisttps
or
xor
push
ret
mov
test
outsl
lahf
mov
iret
pop
pop
mov
leave
mov
mov
leave
inc
cli
stc
lods
mov
xchg
push
push
fcoml
in
imul
xchg
clc
int3
divl
and
sahf
and
jg
push
dec
add
mov
add
cwtl
leave
mov
ss
idivb
int
fimuls
and
nop
pop
cmp
sub
js
jb
cltd
add
sub
cmpsl
jmp
add
jb
xchg
inc
fwait
mov
stos
flds
mov
cld
sub
int
shll
repz
or
mov
xchg
fisttpll
sbb
mov
and
sub
fstpt
pop
mov
sbb
nop
adc
lods
in
push
adc
fcompl
xchg
mov
jp
push
popf
cmp
push
mov
ds
test
leave
cmp
cmp
or
pop
rcr
out
jno
fsubrs
cmpb
dec
jne
gs
addr16
lret
das
in
mov
je
jno,pt
mov
in
jmp
sub
xor
repz
dec
push
dec
ds
clc
in
out
inc
xchg
xchg
mov
sarl
push
xor
cwtl
in
and
adc
mov
lahf
ss
movb
aas
and
aaa
pop
loop
int
cmp
inc
stc
ds
repz
out
ficompl
push
jne
in
cmpsl
mov
leave
pop
jg
in
cli
pop
xor
mov
mov
cmc
and
push
scas
ret
xor
mov
push
xchg
test
mov
sbb
xor
jns
lods
and
xchg
paddb
gs
adc
insl
inc
mov
push
outsl
sbb
dec
push
dec
enter
fimull
or
in
inc
xor
stos
adc
xorb
sbb
scas
push
mov
jnp
pop
int3
mov
push
icebp
ret
icebp
test
cmpsb
inc
and
dec
and
scas
jecxz
push
repnz
xchg
pushf
or
sbb
jnp
xor
dec
cmp
hlt
enter
cmovs
and
push
icebp
repz
test
fidivl
shlb
lods
std
mov
cld
xchg
add
pop
adc
mov
and
xchg
clc
push
dec
das
fmul
adc
jmp
repz
or
cmc
mov
inc
and
fwait
and
insl
pop
mov
iret
subl
loop
adc
mov
fidivl
fistl
adc
mov
sbb
test
sub
add
in
cld
mov
add
xchg
test
shrb
jo
dec
in
dec
mov
sub
pop
sub
push
inc
xchg
pusha
clc
roll
mov
arpl
and
rorl
out
lock
insb
and
mov
test
mov
ficompl
adc
push
test
stc
je
jo
psrld
popf
sbb
aad
aaa
sub
jae
push
jp
and
cmpsb
push
sbb
or
pop
test
hlt
pop
cs
fwait
and
lods
add
push
popf
stc
mov
nop
xlat
sub
and
add
cmp
pop
mov
pop
clc
sarb
imul
sub
mov
mov
mulb
xchg
int3
addr16
fdivl
repnz
mov
push
inc
push
gs
push
cld
shll
lcall
adc
in
push
aad
outsb
pop
mov
clc
add
test
hlt
clc
insl
pop
pop
cmp
jae
shlb
filds
push
push
sbb
xor
mov
mov
stc
sub
sub
sub
jmp
push
inc
jo
lret
popf
flds
lock
test
inc
push
in
push
xchg
std
fbstp
out
icebp
sahf
aas
or
mov
pushf
negl
fdivrl
jg
sub
and
jl
dec
dec
ja
and
jecxz
xchg
cli
pusha
dec
nop
imul
xchg
cli
fstpt
daa
js
mov
pusha
pop
lods
xchg
jecxz
andb
dec
or
cmc
mov
xchg
addr16
es
add
hlt
out
adc
bound
paddq
dec
pop
push
pusha
data16
stos
cs
outsb
or
push
aaa
inc
outsb
rorl
in
inc
jbe
lds
insb
jbe
in
push
rorl
insb
stos
pop
jne
pop
mov
inc
popa
jmp
imulb
cmp
dec
pusha
lock
pop
inc
xor
or
xchg
gs
ss
mov
sub
sub
ret
adc
enter
aad
xchg
xchg
or
adc
dec
outsb
jno
dec
in
add
andb
mov
into
lods
add
xlat
mov
lds
mov
mov
fbld
repz
aad
sub
in
loop
jbe
adc
sub
xor
test
clc
adc
int3
mov
and
jle
subb
and
sbb
aaa
loop
es
je
fadds
sub
mov
dec
sub
shr
adc
clc
out
mov
shrb
inc
mov
call
repz
lret
aaa
mov
xchg
dec
xlat
lods
sbb
orb
test
repnz
insb
add
jmp
cwtl
pop
pop
and
xchg
and
out
pop
jnp
subb
pop
cli
stos
ficompl
daa
fcompl
outsb
int3
ror
jbe
mov
push
cwtl
sbb
mov
and
jg
xchg
arpl
pop
mov
pop
and
jns
pop
das
and
mov
ret
dec
out
repnz
clc
sbb
nop
pop
lahf
inc
scas
in
aas
mov
mov
push
pop
pop
pop
xchg
push
dec
pop
dec
adc
icebp
add
inc
mulb
adc
mov
jns
xchg
jbe
icebp
loope
pop
xchg
fwait
ret
xchg
cmpsl
sbb
sub
subl
aad
mov
iret
iret
jnp
popf
pop
loopne
sub
roll
insb
xor
lcall
fimuls
mov
mov
mov
stc
fisubl
cli
imul
outsl
pop
je
cmp
leave
stc
xor
cmpsl
xchg
loope
loope
add
fdivs
fs
inc
jp
jnp
bound
mov
mov
mov
or
xchg
in
sbb
lods
and
or
jo
fistpll
sbb
xrelease
cmpsb
or
out
cmp
test
cld
mov
mov
dec
out
jnp
fs
xchg
mov
hlt
mov
sbb
mov
mov
pusha
fidivrs
inc
test
lods
sahf
mov
repnz
mov
push
dec
das
je
jno
adc
js
cmp
icebp
gs
push
fwait
jmp
xlat
pop
cmpsb
loop
sysenter
out
dec
ret
scas
aad
add
cmpsb
out
xchg
jmp
and
cmp
hlt
in
popf
mov
outsl
leave
pop
fistpl
adc
inc
scas
adc
jnp
mov
fbstp
rcll
jae
mov
loope
and
jg
pusha
cltd
out
push
lcall
sub
and
xchg
jg
mov
je
test
dec
int3
loopne
push
pop
jb
cmp
repz
aaa
pop
out
in
cli
je
push
or
jnp
loope
push
fdivl
dec
xchg
je
inc
dec
shl
out
push
lods
xchg
ret
xor
std
out
xor
adc
fimuls
sarl
jp
lret
fbstp
insl
add
xlat
cld
xchg
icebp
std
cli
out
dec
dec
fbstp
mov
mov
cmp
mov
addl
aaa
xor
std
das
repz
gs
movsb
sti
addr16
add
fsubs
cmp
fidivs
xlat
or
outsb
iret
addr16
leave
jl
insb
sbb
dec
sub
fstl
ffree
cltd
sbb
cmp
add
and
in
into
sbb
xor
jg
mov
mov
sbb
inc
jns
addb
cwtl
pop
lock
filds
sub
mov
js
lock
push
pop
ret
push
out
es
mov
dec
fsubrl
jo
jg
loop
mov
pushf
test
pop
sbb
add
xor
test
or
pop
mov
sub
fsubrl
std
es
fldl2t
xor
aaa
ljmp
or
ds
test
fsubr
jmp
in
scas
jmp
and
xchg
outsb
inc
inc
ja
out
inc
ja
jbe
imul
stc
push
xor
add
mov
aam
sub
mov
stos
jae
pop
and
adc
pop
pusha
xchg
mov
repz
or
popa
push
mov
xor
lds
jns
cmpsb
jo
test
fbstp
test
mov
int
add
pop
bound
pop
iret
cmp
sub
pushf
adc
clc
jne
xchg
adc
sbbl
ja
aam
fildll
push
adc
movsl
scas
insl
xchg
es
fsub
ficoms
sub
mov
repnz
adc
popa
in
sub
and
jecxz
xlat
push
out
push
pop
add
mov
in
hlt
fnstenv
lret
jne
cmp
jbe
xor
mov
fdivs
cmp
nop
push
faddl
aaa
out
pop
js
ljmp
jmp
in
ret
arpl
decl
leave
push
inc
loop
add
dec
xchg
jge
outsl
mov
dec
mov
xchg
dec
add
cmp
pop
inc
and
push
loop
test
neg
shll
fsubr
loope
clc
mov
mov
cmpl
xor
out
sbb
gs
add
in
and
ja
incl
push
push
xchg
insb
addb
cmpsb
daa
test
mov
add
jno
adc
mov
push
cmc
rcrl
lret
pop
out
add
je
loopne
test
rcr
les
mov
mov
mov
push
cmp
mov
inc
xchg
jae
mov
or
push
cmp
adcb
cmp
mov
cmp
enter
out
sub
jecxz
ret
shlb
loopne
js
mov
or
mov
sub
mov
pop
fnstsw
adc
pop
out
test
push
lahf
push
adc
jnp
sahf
movsl
xor
add
fisubs
in
jmp
mov
inc
ficompl
outsl
mov
adcl
cmp
mov
sub
repz
xchg
pop
pop
mov
mov
fxch
dec
pop
mov
sub
and
out
ljmp
and
loop
xor
lcall
int
lds
dec
fldcw
pop
fidivs
aam
jp
dec
scas
popl
cmpb
and
cmpsb
xor
add
mov
mov
mov
bound
or
inc
push
or
jle
ret
mov
lock
dec
dec
pusha
push
enter
stos
fmull
mov
fadds
adc
in
lret
iret
or
sub
ret
jns
fistpll
in
test
test
xchg
jnp
pop
shlb
xchg
xchg
call
sbb
popa
pop
push
fs
pop
out
or
arpl
movsb
js
pop
cmp
push
push
movsb
push
xor
in
mov
adc
test
push
pop
les
cmc
adc
cmp
push
jnp
std
lret
jo
sbb
adc
jbe
stos
jne
cmp
xor
push
testb
add
inc
adc
mov
lea
push
imul
into
loopne,pt
xor
sub
push
add
xchg
or
outsb
decb
int3
dec
mov
or
mov
xchg
cwtl
mov
pop
lds
shrb
das
insb
sbb
fs
and
bound
cmp
push
jnp
rolb
xchg
bound
xchg
in
sub
xchg
imul
pop
stc
push
fdiv
or
lret
imul
xor
sub
inc
dec
cmp
orl
inc
cmp
inc
jmp
shll
leave
lods
leave
lret
xor
jb,pt
jecxz
sub
jo
scas
pushf
inc
jl
jg
fidivrl
outsl
es
rcrl
xchg
xor
aad
lret
lods
lods
cli
nop
and
test
ss
fistpll
adc
in
xchg
leave
mov
lcall
pop
add
mov
xchg
hlt
dec
pop
push
inc
fcomps
or
ja
sub
cmp
jge
sbb
ds
icebp
bound
mov
test
outsb
jmp
inc
in
cli
in
shr
or
adc
pop
sbb
add
jae
mov
fprem1
sub
sahf
std
fwait
dec
fistps
and
imul
dec
aas
xchg
jmp
pop
mov
cmpsb
shrl
mov
dec
mov
push
pop
imul
sbb
mov
repnz
into
in
cli
xchg
iret
lds
inc
pop
sub
es
sub
pop
and
mov
scas
adc
fbld
xor
lahf
jmp
cmp
or
lock
clc
rcll
hlt
nop
lahf
ret
mov
mov
movsl
cmp
inc
cld
rorl
or
and
add
in
xchg
push
mov
and
push
dec
scas
out
cld
sbb
lock
pop
cltd
in
jl
ret
loope
adc
pop
pop
fdivs
pop
mov
daa
add
ror
mov
mov
pop
cld
addr16
sub
loopne
mov
aad
or
fmuls
mov
or
mov
test
adc
push
xchg
mov
loopne
sub
int
addr16
std
pusha
sbb
push
iret
aad
dec
cwtl
imul
and
popa
dec
or
lods
push
push
out
jl
jmp
loope
sub
push
mov
mov
adc
mov
xor
test
inc
jg
outsl
xor
cmp
mov
cmp
inc
and
push
lods
nop
mov
hlt
fsubrs
stos
arpl
enter
pop
pop
mov
inc
sbb
push
lret
sbb
arpl
fwait
cwtl
sub
shll
dec
lods
lock
fidivs
pop
das
ficomps
mov
mov
pop
aad
pop
xor
push
cmpsb
movsl
ja
xchg
lock
insb
iret
push
in
testb
add
fwait
ds
das
dec
test
sbb
sbb
adc
sbb
cmp
add
jae
js
push
mov
inc
sbbb
xor
inc
popa
shll
and
inc
mov
pushf
mov
dec
mov
in
mov
pop
or
jmp
mov
mov
pushf
movsl
jne
test
in
mov
push
pop
add
ja
or
rcrb
fisubl
jmp
fdivrs
push
test
dec
popa
shr
mov
xchg
sbb
mov
mov
jae
leave
fadds
jge
pop
lretw
mov
push
jo
inc
shlb
cld
test
and
mov
test
mov
dec
cmc
sub
mov
adc
xchg
insl
add
dec
dec
fwait
cmpsl
mov
fwait
out
xchg
xchg
sub
sbb
or
inc
dec
adc
sub
push
cmp
inc
hlt
mov
mov
bound
dec
lods
fcmovnb
jne
std
out
push
fldt
cmpsl
and
iret
out
fld
mov
sbb
dec
popa
mov
in
clc
bound
ret
testb
and
inc
sbb
add
xor
mov
popf
mov
mov
mov
clc
adc
repnz
cmp
mov
mov
pop
push
test
push
xchg
outsl
shlb
cmpsb
jnp
pop
sbbl
inc
pop
adc
divl
xchg
ret
fimuls
mov
mov
mov
cmp
lock
outsb
pop
push
out
xchg
jno
fiadds
mov
mov
and
pop
mov
mov
test
sbb
xchg
adc
mov
cli
shlb
jecxz
push
jb
lods
xor
out
pusha
fs
cld
push
imul
out
jnp
cmpsl
out
inc
fwait
xchg
xchg
mov
bound
out
dec
xor
cmpsl
orb
int3
inc
jle
cmp
mov
push
jb
xor
out
push
push
add
jo
cld
dec
cmp
push
int
lods
sub
andb
mov
mov
pop
push
int
mov
xchg
lret
into
scas
or
cli
stc
mov
jns
cmp
leave
dec
repnz
and
repnz
clc
xor
xchg
out
or
ss
lods
adc
sub
push
lds
es
jmp
int
aad
mov
repnz
test
rcll
jp
mov
sub
fidivrs
pop
pop
movsb
cmc
cmp
imul
outsl
rorl
jg
scas
movsl
dec
add
mov
cld
aas
xchg
sub
sub
fistpll
pop
mov
pop
shlb
faddl
cmpsl
jge
gs
in
push
sub
test
ret
in
push
bound
push
enter
aaa
icebp
aad
aad
xlat
inc
ss
int3
and
scas
mov
mov
aad
gs
sbb
std
push
ja
bnd
cltd
repz
dec
mov
xchg
jns
stc
pop
repnz
xlat
pop
lds
pop
sbb
xchg
test
sub
out
xchg
sub
mov
std
cmp
lahf
sbb
push
sbb
andl
xorl
loopne
test
pop
dec
lea
adc
sbb
sbb
push
mov
push
pop
in
cli
loopne
xor
sbb
fcmove
cmc
cmp
test
aas
cld
fwait
xchg
fsubl
or
insb
fstpt
xchg
xor
leave
aas
and
adc
in
sbb
lods
out
imulb
mov
cmp
es
repz
push
jge
xor
push
insb
imul
pusha
jle
xchg
dec
ljmp
pop
dec
data16
or
jnp
pop
lahf
or
push
pop
rcl
repz
mov
addb
jp
insl
je
lret
sub
push
and
mov
sarl
and
jns
mov
dec
jbe
adc
testb
ret
push
mov
pop
mov
fcompl
mov
inc
ror
add
inc
mov
adc
imul
dec
stos
push
int3
outsb
fwait
js
cmp
insb
pop
out
jns
stc
out
aam
fsts
arpl
mov
leave
cmp
pop
ds
daa
test
call
sahf
aaa
jecxz
cmc
mov
je
sub
ret
scas
and
xor
cmc
ret
out
push
dec
adc
movsl
inc
sub
int
cmp
fildl
dec
cld
movsl
sub
arpl
out
add
inc
fmull
jge
cld
sbb
out
out
add
fsubr
scas
and
into
popa
xor
fmuls
aad
xor
bound
add
bound
popf
fwait
jmp
dec
lret
mov
sbb
adc
sub
lret
sti
into
mov
test
stos
lods
dec
xor
faddl
mov
pop
scas
sub
jb
subb
fisttpl
cmp
in
xor
sbb
in
add
push
fsubs
mov
pop
add
lock
mov
jg
cmp
lret
fisttps
out
aas
inc
push
arpl
fistps
cs
test
jns
imul
outsl
inc
stc
outsb
and
or
dec
mov
stos
lahf
mov
mov
roll
adc
fistpll
adc
das
test
test
sti
rclb
enter
push
xor
out
sbb
or
fcoml
or
test
xchg
mov
xor
es
jae
test
inc
outsl
mov
sbb
mov
cmp
mov
movsb
push
loop
popa
rcl
or
cs
popl
fwait
cmp
xor
pop
decb
adc
stos
jge
pop
insb
pop
or
push
mov
mov
fnsave
cltd
push
popa
xchg
bound
imul
push
and
mov
clc
aam
adc
test
rcr
lea
pop
mov
das
repz
fwait
inc
or
iret
push
cmp
xor
xor
add
ret
jns
lods
push
cmpsl
aam
push
mov
int
ret
add
pop
mov
stc
das
xchg
cmpsl
xor
xor
or
mov
movsb
ljmp
jnp
adc
jb
push
xor
nop
lods
mov
andl
mov
iret
mov
call
wrmsr
loopne
sub
mov
and
xchg
jle
push
pop
repnz
pmulhuw
test
imul
jne
add
lahf
or
leave
ja
inc
mov
popa
enter
fcmovne
inc
into
mov
outsb
inc
xchg
repnz
sti
inc
jp
add
adc
shrb
test
lret
cmc
xor
cmpsb
subb
sti
je
nop
into
loopne
shl
jmp
and
loop
test
xor
xchg
dec
inc
and
cmpb
jo
stos
aam
outsb
add
adc
in
call
jmp
loope
xor
inc
sub
adc
ficoms
mov
loop
adc
jl
fdiv
jg
dec
mov
mov
pop
negb
dec
mov
rclb
xchg
add
movl
loope
pop
and
pop
in
idivl
ljmp
mov
fbstp
stc
jmp
or
iret
lahf
lcall
cld
jmp
jecxz
jg
mov
sub
sbbb
xchg
cmp
jmp
movsl
jle
enter
fcompl
jb
mov
stos
mov
inc
push
in
dec
cmp
repz
in
inc
add
xor
lods
cmp
int
xorl
push
outsb
lods
add
jg
das
adc
dec
adc
enter
fisttpll
das
rolb
xor
out
js
mov
mov
or
leave
mov
and
aas
cld
dec
cli
pop
imul
lret
lds
jmp
xor
js
cmpsb
mov
mov
sub
xchg
rorl
and
jle
pusha
ffree
aad
adc
fadds
popa
cwtl
ret
flds
aas
sbb
push
mov
sub
pminub
popf
pop
out
ja
mov
sub
add
push
out
jmp
cmp
or
or
cmc
mov
pop
stos
jp
mov
nop
jae
xchg
and
inc
sbb
sbb
sub
loope
push
leave
adc
stos
pop
adc
je
push
dec
sub
cmp
sub
lods
sbb
icebp
mov
sub
fwait
outsl
cmp
in
aad
cli
repnz
cli
lahf
mov
xchg
pop
add
sti
test
and
movsl
fs
test
nop
shll
dec
fmuls
adc
in
mov
std
jae
in
cltd
fists
pop
push
repz
mov
xor
dec
dec
mov
ret
xor
mov
js
mov
ret
test
mov
arpl
mov
stos
fnstsw
rep
ja
sub
mov
cmc
mov
mov
sbb
push
test
mov
and
enter
rorl
jbe
pop
insb
sub
stos
roll
mov
daa
and
cli
cmpsl
nop
fldenv
fs
aas
mov
insl
mov
xchg
ficomps
fwait
sbb
and
sar
std
jecxz
mov
hlt
cmp
add
call
ds
pushf
decb
popf
add
mov
outsl
push
mov
or
cmpsl
sub
mov
nop
in
aas
ds
xor
gs
andb
and
in
std
outsl
sarl
cmp
mov
adc
pop
aam
fs
aam
xchg
popf
xchg
loopne
fimuls
mov
sbb
sbb
dec
mov
adc
out
testb
add
cmp
mov
movsb
lcall
mov
aaa
lods
mov
mov
inc
mov
inc
and
pop
mov
test
inc
and
push
loop
mov
dec
ljmp
fiadds
mov
jp
pop
sbb
dec
in
xchg
mov
ret
push
pop
mov
lcall
cli
js
xor
popf
add
pop
pushf
xor
mov
loopne
enter
andl
push
hlt
fdivrs
mov
cld
xor
idivb
push
leave
jo
inc
testl
pop
and
sub
insl
mov
js
jnp
or
or
repz
bound
ret
lea
loop
inc
jp
lds
out
out
jne
call
or
jl
and
or
dec
dec
cmc
cmp
ds
push
sbb
mov
pop
mov
dec
add
sub
in
jbe
fldl
rorl
aad
mov
test
lahf
dec
enter
sub
loop
mov
in
enter
imul
cmpsb
and
dec
in
jb
dec
or
push
int3
in
fwait
enter
add
test
mov
mov
or
shrl
mov
and
inc
outsl
xchg
adc
xor
pop
mov
rcrl
aaa
xchg
imul
movsl
jmp
subb
xor
or
fisttps
ss
scas
inc
stc
ja
ljmp
ret
lea
sbb
out
out
push
fnstenv
add
lods
in
xchg
ret
mov
jmp
std
sbb
aas
shrb
mov
mov
xor
pop
loop
loopne
shlb
mov
clc
mov
push
inc
cli
hlt
out
sub
pop
outsb
xchg
push
hlt
mov
and
cwtl
xchg
adc
repnz
nop
pop
mov
sub
jae
mov
adc
stos
mov
sbb
movsb
iret
mov
pop
cmpsb
push
loop
dec
cmp
sbb
mov
mov
push
xchg
pop
iret
rcrb
adc
and
cmp
pop
or
movsl
dec
icebp
mov
lods
ss
inc
cmpsb
lods
and
ja
iret
pop
jecxz
movsb
push
sbb
jnp
xchg
xchg
mov
pushf
pop
dec
aad
mov
jo
xchg
into
dec
aam
out
lcall
push
jmp
pop
movsb
sti
fcompl
pop
movsb
add
aas
test
lret
mov
push
leave
xor
push
test
stos
push
subl
xchg
sbb
mov
lods
mov
iret
iret
cmpsl
lret
jl
lds
xor
add
scas
xor
cmc
jp
in
scas
fimull
xor
xor
jg
adc
mov
fists
cmp
sub
cmpl
pop
sub
add
mov
out
mov
je
stos
movsb
es
mov
and
leave
push
jl
sub
sub
xor
cmpsb
leave
out
daa
cmpb
xor
xchg
pcmpeqw
xor
gs
dec
stos
cltd
fcmovnu
ljmp
mov
ss
cmp
sbb
mov
nop
jge
and
jno
rcr
mov
mov
push
mov
add
mov
sbb
pop
pushf
ljmp
xor
adc
inc
cmp
xchg
add
dec
adc
rclb
addr16
cmp
dec
mov
push
mov
xor
adc
mov
cmp
or
cwtl
pop
jns
mov
in
aam
cld
mov
in
or
push
out
jne
cmpl
divl
inc
xlat
orl
pop
lcall
stos
movsb
pop
in
insb
jb
popf
das
fstps
mov
add
cwtl
pop
add
mov
sbb
lock
sub
mov
es
pop
adc
fld
inc
sbb
and
cmp
insl
data16
repnz
dec
mov
jmp
or
cmp
pop
xlat
es
inc
or
fisubrl
data16
loopne
cmp
push
pop
movsl
jo
add
pop
mov
sub
and
pushf
mov
imull
dec
fstps
xchg
jns
xor
xchg
sub
jo
inc
je
dec
or
out
jnp
push
popf
mov
mov
jb
test
pusha
mov
mov
test
insl
cmc
xchg
in
xor
std
and
xor
lods
scas
xchg
jne
sub
leave
and
push
int
pop
jmp
aaa
dec
pop
test
push
mov
and
je
and
or
xor
and
mov
lock
cmp
sbb
cmp
xlat
xchg
ljmp
outsb
xchg
repnz
mov
xchg
outsb
scas
nop
imul
es
data16
dec
add
jb
fucom
mov
bound
xchg
jno
mov
stos
mov
xchg
pop
jne
inc
mov
push
xor
push
sbb
mov
fdiv
aaa
outsl
push
add
cmpsl
loope
jmp
je
sub
fisubrs
stc
clc
pop
mov
jl
jne
mov
xor
mov
pop
push
clc
xchg
inc
leave
push
add
xor
int
dec
cli
loop
cmp
movsl
or
cmp
fbld
mov
push
sti
xlat
daa
xchg
mov
xchg
sub
xchg
mov
test
xlat
mov
jl
pushf
mov
popf
xchg
rorl
call
into
pop
jno
int3
fisttpl
jmp
push
ret
cmpsb
xchg
xchg
imul
cmpsl
or
rcl
mov
mov
enter
or
repnz
ss
pushf
and
mov
divb
mov
cltd
push
dec
cmp
xchg
add
sbb
adc
add
and
dec
in
inc
inc
mov
aas
shlb
fs
pop
or
aad
push
sbb
pop
arpl
dec
inc
pop
aam
sbb
mov
mov
jmp
xchg
aad
or
jl
imul
jae
into
out
daa
add
fldt
xlat
sub
push
icebp
daa
mov
or
and
sarb
pusha
mov
jae
jmp
nop
sub
lods
mov
int3
in
iret
sbb
out
cmpsb
enter
dec
sbb
dec
sbb
mov
xchg
scas
mov
dec
pop
popa
sbb
out
cmpsb
cli
mov
fwait
pop
gs
imul
sbb
ja
push
jns
shl
adc
lret
gs
xchg
loope
pop
cwtl
ret
or
or
or
jle
cs
loope
enter
pusha
jge
adcb
outsb
popf
mov
cmp
bound
lea
mov
pop
popa
idivl
repnz
movsl
lock
xor
mov
popa
aas
xchg
stos
mov
xor
lods
in
je
jle
pusha
pop
jle
cmp
add
push
or
bound
int
sub
hlt
or
inc
mov
push
and
jg
mov
fwait
les
lret
cmp
sbb
sar
sbb
xchg
mov
pop
mov
mov
xchg
or
sbb
xrelease
imul
out
adc
call
mov
sub
in
and
cmc
subb
and
mov
jnp
jo
and
cmpsb
insl
int3
sahf
cltd
jmp
loopne
popf
or
aaa
xchg
fstl
and
clc
mov
sbb
sub
ds
bound
inc
xor
out
pop
notb
mov
test
mov
cmpsl
ret
outsb
addr16
call
or
mov
stos
dec
enter
rorb
mov
nop
pop
fcoml
es
adc
in
xor
pushf
leave
jge
mov
add
cmp
jmp
ss
clc
mov
es
mov
inc
jae
ja
mov
clc
fcoms
mul
loop
xchg
fcoml
std
iret
test
mov
in
jne
cmp
jle
add
bound
mov
jg
popf
cmp
aad
adc
jbe
in
mov
jge
cmpsb
ret
adc
fldl
sti
dec
add
or
push
imul
push
out
mov
mov
subl
inc
jno
daa
xchg
js
pop
mov
out
cmp
add
fs
cmpsl
rclb
repnz
sub
lods
aas
stos
popa
jg
push
int
test
or
pop
xchg
cmp
jb
push
xlat
insb
mov
aad
test
lods
loopne
aad
or
jb
imul
mov
out
push
mov
inc
and
xor
lds
cmp
out
sub
or
lret
test
ss
shll
sar
jecxz
addb
daa
insb
loop
in
movsl
mov
mov
or
cltd
insl
jecxz
sti
mov
outsb
push
scas
hlt
icebp
or
mov
insl
out
mov
sbb
lret
adc
in
push
imul
sub
mov
xor
pop
test
in
jb
lock
push
std
repnz
xor
xchg
jge
cmc
push
cmp
mov
xlat
fsub
jge
or
lea
push
jge
push
ficomps
jb
sbb
jmp
mov
jne
aaa
js
repz
jns
test
pop
mov
add
insl
pop
gs
test
or
mov
pusha
push
xchg
pop
mov
and
cmp
mov
adc
mov
mov
jo
fstps
outsl
inc
mov
paddsw
adc
int3
jge
adc
push
subb
int
repnz
aam
aam
repnz
inc
jo
push
stc
inc
ret
insl
mov
mov
loope
in
xchg
dec
fldt
jmp
mov
mov
fcoms
dec
out
push
xchg
inc
fstpt
pop
sarl
sbb
pop
xchg
repz
sbb
add
xor
push
cmpsb
dec
loop
mov
sub
and
and
sahf
xlat
dec
lret
and
push
pushf
lcall
xor
pop
sbb
add
ret
fldl
mov
subl
je
movsl
daa
sub
fcompp
notb
mov
cmp
xchg
arpl
add
insl
adc
inc
icebp
dec
jmp
insb
inc
mov
mov
data16
and
repz
cwtl
jecxz
fwait
insl
jmp
nop
xchg
jge
mov
es
dec
pop
mov
imul
jp
jnp
xchg
cmp
not
push
add
cmpsb
cmp
orl
dec
lods
adc
or
jo
iret
jmp
push
cmp
int
inc
cmp
aaa
pop
xor
fmull
mov
mov
sbb
cltd
fsubrs
leave
fisubrs
fsubs
inc
and
scas
push
sub
aad
mov
add
je
and
jb
mov
shl
cmp
aas
xorb
pop
sub
push
std
nop
jmp
shr
mov
insb
fisttps
loop
mov
add
sbb
lahf
stos
test
jmp
ffreep
jne
mov
mov
orb
push
sub
imul
adc
push
dec
xchg
addl
push
sbb
cmp
jp
ja
adc
les
aad
ljmp
adc
cmp
adc
xor
aas
mov
inc
mov
jmp
inc
push
imul
or
ljmp
lock
adc
lods
aas
loope
xor
xor
mull
mov
mov
loope
shr
or
push
orl
call
lret
ds
mov
pop
sbb
cmpsl
xchg
imul
clc
test
inc
jmp
cmp
addr16
or
push
sub
outsl
mov
push
or
sarb
dec
out
and
sbb
das
in
bound
mov
mov
or
aam
lods
jbe
outsb
jae
addr16
push
int3
xchg
pop
les
pop
lcall
out
outsl
xor
outsb
inc
adc
clc
sbb
inc
dec
xchg
sub
pop
xchg
les
loop
lcall
and
fcoms
or
adc
lret
gs
xor
push
inc
mov
and
inc
pop
cltd
or
pop
jb
pop
shrl
jbe
cmpl
in
jnp
sub
sub
adcl
add
hlt
loopne
cmp
movsl
pop
leave
jg
mov
mov
das
sub
fisttpll
xchg
ds
shll
xchg
push
out
inc
and
cli
sbb
in
sub
jle
pop
nop
and
and
icebp
loop
xchg
add
pushf
pop
jecxz
mov
xor
cmp
push
lock
push
jmp
ljmp
ss
test
aam
movsb
pop
pop
cwtl
cmc
xor
stos
adc
aad
aaa
scas
pop
inc
stc
ss
or
ss
pop
pushf
add
aas
shl
mov
aas
mov
mov
sub
add
cmp
js
lock
push
outsl
es
lock
mov
mov
push
roll
jmp
jae
or
xlat
xchg
sub
sbb
int
nop
out
adc
xchg
xor
mov
ds
subb
cs
test
adc
lods
in
push
mov
and
fcomip
push
imul
fistpll
mov
loop
in
dec
cli
cld
push
push
out
movsl
dec
aas
outsl
fisubrs
lods
pop
arpl
or
mov
lcall
xchg
or
ret
in
insb
or
pushf
sub
jae
push
sarl
xchg
jne
das
pop
sti
test
sbb
sbb
jno
adc
scas
jge
stos
fisubrl
xchg
pop
sbb
aad
outsl
or
les
test
mov
fimull
xchg
sub
in
xchg
push
leave
push
mov
mov
test
cmp
cmc
in
andl
mov
nop
movsl
inc
test
loope
push
popf
hlt
rorl
sahf
adc
jecxz
or
sbb
jecxz
ds
ret
adc
sbb
dec
sbb
adc
cwtl
gs
js
push
rcrl
addl
popf
shll
and
sti
aaa
aaa
sub
je
mov
add
mov
popf
jnp
pushf
push
jae
push
cmp
pop
aam
and
mov
push
mov
xchg
sbb
mov
ljmp
adc
push
dec
in
xlat
sahf
das
divb
xchg
push
xor
push
mov
std
or
jp
sub
fs
adc
push
sbb
or
ret
mov
popf
pushl
xchg
fs
and
or
sub
add
push
add
pushf
fstpl
mov
rcll
xor
fsubrl
jae
clc
fwait
incl
pop
dec
clc
in
push
dec
das
jo
fcoml
lock
gs
inc
mov
push
add
daa
push
xor
inc
sub
js
orl
aad
mov
or
xchg
data16
mov
xchg
es
mov
sbb
loop
mov
out
ja
jnp
out
mov
test
pop
jmp
xor
out
mov
push
js
daa
xor
xor
jno
mov
fwait
sbbb
pop
cmp
mov
js
add
ficoml
dec
lret
dec
xorl
sbb
lods
in
jecxz
shll
push
repz
or
gs
das
push
xchg
mov
enter
je
movsl
fwait
lea
pop
ret
or
sbb
test
jnp
gs
movsl
xchg
test
xchg
or
sub
out
dec
sub
into
pop
pop
lds
sbb
dec
in
add
sub
add
shll
mov
adc
rcll
packsswb
shlb
shlb
call
jae
aam
fwait
js
xchg
sbb
cmp
sbb
and
jnp
in
or
or
and
mov
aad
jne
sti
inc
insb
lret
mov
push
ret
jb
fisubrl
cld
push
dec
adc
push
push
inc
test
inc
mov
jp
and
cmpsb
imul
data16
les
nop
loope
dec
dec
pop
adc
adc
or
jmp
fsts
sbb
loop
insb
mov
cmp
or
push
aad
ss
cs
push
stos
mov
mov
dec
adc
or
stos
ja
out
outsb
stos
add
inc
cmpsl
in
pop
loopne
into
cmp
scas
and
or
inc
lret
inc
mov
cwtl
xchg
xchg
iret
cmpsb
js
xchg
inc
int3
cld
sub
xor
mov
push
jbe
mov
jbe
inc
dec
add
iret
andl
push
lock
lock
or
jnp
and
xchg
test
mov
dec
xchg
outsb
shll
stos
sub
mov
in
ds
xchg
lods
cmp
sahf
in
pop
popa
pushf
cmp
or
mov
xchg
mov
ret
pop
and
js
stos
out
add
rcrl
sbb
sub
insl
loopne
mov
popa
sbb
cmp
cld
inc
sub
xor
icebp
mov
cmp
xchg
jb
outsl
mov
push
leave
repnz
cld
xor
pop
xor
pop
je
inc
xchg
pop
cmp
mov
push
sbb
inc
jns
xor
in
fsts
and
or
jge
push
in
pop
ficoms
push
xor
jle
ret
jae
rcll
ja
xor
loop
mov
sti
inc
dec
sub
push
adc
inc
and
fnstenv
inc
mov
jae
inc
mov
adc
jp
xchg
adc
fwait
pop
mov
mov
cmp
mov
mov
lret
jmp
sbb
jg
fsts
and
shr
pop
lret
stos
sahf
ja
cmpsl
jbe,pn
insb
add
cmp
mov
adc
loope
add
icebp
pushf
mov
cmc
or
imul
pusha
and
adc
inc
aas
call
subb
xchg
adc
mov
fimuls
out
add
push
jle
adc
push
or
sbb
call
xchg
or
sub
jae
or
and
mov
outsb
xchg
mov
sbb
mov
xchg
cmpl
gs
test
fstpt
inc
iret
adc
mull
popf
addr16
adc
xor
add
dec
roll
ret
fidivrs
outsb
xchg
pop
aaa
dec
jns
lds
push
cwtl
movq
cltd
inc
adc
aad
std
cmp
int
xor
subb
fidivrs
mov
mov
js
jl
mov
sub
push
pop
fs
cli
insl
ds
pop
dec
dec
popa
lcall
jbe
and
adc
sub
clc
loope
rcrl
cmp
dec
fsubs
adc
add
cltd
das
dec
push
out
mov
push
cmpsb
or
mov
pop
dec
loope
das
pop
jle
aaa
pop
cmp
les
call
repz
movsb
jl
inc
push
es
jnp
andb
dec
fmull
dec
push
mov
jno
shl
push
sbb
push
push
mov
notb
xor
cs
lods
jge
fimull
xlat
jno
shlb
mov
sub
mov
stos
insl
mov
jns
cs
cli
dec
pop
xor
insl
pusha
add
cmp
call
mov
mov
inc
mov
cmc
dec
aam
mov
popf
mov
loope
push
xor
stos
pusha
jb
sub
mov
add
stos
les
aaa
enter
jg
xchg
fldl
sbb
fcoml
popa
aam
adcl
inc
aam
adc
inc
sbb
data16
jp
rcrl
mov
mov
icebp
scas
pop
and
aam
sub
jns
insb
cmp
mov
sbb
push
xor
repz
in
and
xchg
and
inc
xchg
xor
loopne
inc
cmp
loopne
ret
mov
dec
mov
push
jle
in
inc
insb
mov
int3
xchg
adc
mov
mov
xor
mov
aam
shll
pop
pop
ds
into
add
push
shll
out
or
repnz
hlt
int
dec
mov
push
or
imul
pushfw
pop
pop
aas
stos
mov
shlb
out
das
jno
bound
mov
mulb
movsb
cmpsb
outsl
push
jge
mov
pop
xchg
mov
lahf
mov
iret
fs
imul
xchg
fistps
lcall
jb
rclb
ficoms
cmp
pop
adc
repz
pop
cltd
shll
mov
mov
in
stos
pop
stc
inc
mov
out
pop
mov
sbb
dec
mov
add
xor
or
push
sub
arpl
push
xchg
fidivrl
mov
shrb
inc
and
mov
adc
dec
out
push
out
pop
pop
sub
inc
inc
xor
xchg
cmp
inc
bound
add
ds
add
ljmp
cmp
sbb
mov
push
mov
mov
cmpsb
mov
pushf
fcompl
dec
pop
xchg
sti
fs
cmp
jmp
mov
lcall
mov
mov
in
ljmp
das
lret
and
pop
rol
testb
mov
add
sub
lret
sub
ds
push
call
hlt
pop
adc
imul
daa
and
flds
or
inc
dec
push
mov
cmp
xor
adc
jl
add
push
push
cmc
mov
into
xor
mov
movsl
nop
out
negl
jb
stos
or
xor
adc
icebp
stos
fldenv
lods
jne
dec
imul
pop
xchg
adc
sbbl
aam
rolb
mov
jmp
adc
cmp
sub
scas
jl
pop
es
cld
dec
jnp
test
xchg
cmp
les
xchg
cld
fs
cwtl
push
dec
dec
push
aaa
lds
insl
push
lods
pop
shrl
daa
dec
or
mov
jmp
aaa
scas
orb
push
xchg
xlat
xor
and
les
pop
xor
jns
cmp
insb
loop
ljmp
pusha
jb
push
sahf
cmp
fdivl
and
sbb
pop
jmp
ss
adc
adc
jge
int
sbb
mov
insb
jle
movsb
mov
lret
fidivrl
js
pusha
insb
ljmp
inc
mov
jmp
xor
jp
addr16
shrl
insb
cld
xchg
int3
xchg
das
ds
adc
ljmp
insb
cmp
out
pop
and
jecxz
pop
cmc
adc
test
je
leave
mov
sub
ja
cmp
add
mov
leave
pop
movb
pop
lods
mov
aas
or
xor
mov
jge
stc
jo
je
ja
cmpsb
icebp
scas
mov
aas
daa
adc
pop
loope
imul
push
mov
sbb
iret
js
mov
dec
jae
arpl
push
and
dec
test
mov
push
arpl
add
push
pop
repnz
stos
push
jmp
and
jl
mov
inc
out
addl
les
adc
out
lret
and
and
cs
fsubl
push
insb
inc
sub
inc
pop
inc
pop
mov
popa
out
xchg
and
mov
xor
inc
hlt
out
in
lea
dec
adc
sarb
ficomps
push
cmp
or
int3
sbb
in
mov
leave
dec
out
movsb
jecxz
ret
sbb
add
jo
in
subb
add
out
sub
inc
in
fs
sub
xor
pusha
mov
sbb
mov
adc
jae
pop
jmp
or
stc
ret
dec
push
cmp
ffreep
test
fs
repnz
add
std
repnz
fsub
sub
mov
sbb
push
push
xor
cmp
jb
mov
dec
out
mov
fs
pusha
cmp
inc
dec
xchg
xchg
mov
ret
setg
rcll
xrelease
pop
push
hlt
lea
lahf
or
fs
rorb
add
scas
pop
fwait
fwait
in
inc
repnz
lret
jmp
and
add
xchg
fwait
and
lcallw
xlat
push
mov
data16
lock
je
pushf
add
loopne
lret
push
pusha
push
cmpsl
push
sti
lods
adc
test
dec
cmp
add
or
cs
icebp
lahf
push
scas
push
xor
sbb
jo
jg
int
add
mov
push
xor
xchg
sysenter
int3
fists
sbb
cmp
and
icebp
hlt
nop
jp
aam
pop
jge
mov
pop
cltd
cli
jno
int
mov
xor
sbb
sti
cld
add
and
into
cmpsb
sbb
mov
inc
inc
scas
pop
lea
cwtl
fs
not
xchg
es
cmp
lcall
and
jae
enter
inc
movsb
lcall
loopne
in
or
loope
or
sub
fmull
ret
cmp
or
xor
push
jecxz
mov
dec
jae
sti
dec
sub
mov
int3
adc
cmp
cwtl
and
xchg
icebp
push
lods
rorb
xchg
sbb
cld
push
jle
imulb
roll
mov
mov
mov
lods
imul
add
inc
add
outsb
loope
mov
faddl
cmp
outsl
mov
loope
jb
mov
push
gs
repnz
arpl
stos
je
les
cmp
inc
mov
xchg
mov
xor
adc
shl
mov
xchg
jl
aas
pushf
rclb
enter
pop
jge
jae
sbb
adc
ds
outsl
cld
pop
orl
mov
and
jns
push
add
mov
mov
test
cmp
add
movsl
push
testb
mov
push
stos
xchg
sub
push
sub
dec
jg
xor
pop
jge
in
enter
cmc
fsubl
cwtl
sbb
aad
pop
sub
or
std
jbe
icebp
jno
jl
push
pushf
imull
loopne
pusha
cmp
inc
inc
jne
frstor
or
gs
adc
xchg
mov
lret
sub
ja
andb
push
jmp
sahf
popf
sub
je
scas
cli
lcall
and
mov
iret
stc
sbb
sub
in
addr16
xor
xor
lods
cld
sub
ljmp
lahf
adc
mov
inc
mov
mov
xchg
mov
adc
jb
shlb
and
in
leave
repnz
iret
cwtl
push
or
push
aas
shrb
xchg
push
sbb
lcall
mov
sahf
pop
add
addl
mov
fsubrl
aad
pop
xchg
cmpsl
xlat
lds
push
xlat
imul
cmp
movsl
push
inc
xchg
or
iret
int3
jno
pop
push
jmp
or
cli
mov
pop
jg
and
fldl
adc
mov
sub
cmp
icebp
xorl
jecxz
xchg
aas
outsb
xlat
iret
cltd
push
cmpsb
arpl
cmp
xor
in
and
ja
aaa
loope
or
out
push
or
in
push
pop
and
insl
xor
sub
mov
cli
sbb
mov
pop
mov
mov
sub
sub
or
loop
jle
add
cmp
mov
pop
mov
gs
loopne
inc
and
jbe
cli
insl
jmp
mov
mov
frstor
enter
leave
xchg
push
shl
shll
lret
jg
adc
jle
lahf
shlb
push
mov
push
aas
outsb
pushf
aaa
inc
add
js
xor
jge
add
pop
mov
add
push
and
mov
out
cmp
notb
mov
mov
fildll
call
or
out
mov
cld
daa
ret
sarb
push
push
xor
xor
xlat
jmp
loopne
cmp
sub
push
call
dec
lods
mov
addr16
popw
pusha
mov
mov
add
mov
gs
data16
imul
and
jbe
ljmp
push
mov
dec
jmp
mov
xchg
aam
xorl
cmp
into
out
cmp
fdivrs
mov
scas
adc
add
add
jno
vpcmpgtw
icebp
xchg
or
push
fcompl
jnp
or
jo
sbb
xor
jmp
pop
out
cmp
in
arpl
out
shrl
mov
jg
xor
cmp
push
sbb
insl
or
xchg
sbb
pop
call
sub
push
shl
je
cmp
shll
push
add
roll
imul
jae
iret
sub
fwait
mov
and
jae
cmpsb
sti
mov
data16
mov
sub
inc
push
push
inc
fldt
inc
mov
xchg
divl
dec
xor
and
in
jnp
loope
jne
cmc
out
adc
jbe
sbb
call
bound
bound
in
insb
mov
call
jne
xor
in
or
push
call
mov
adc
cs
xchg
dec
pop
and
push
jmp
movsl
call
cmp
jmp
or
int
bound
mov
retw
push
cmp
out
clc
lret
mov
mov
inc
loopne
in
mov
imul
push
or
jb
imul
and
fsubrs
sub
xchg
lock
jg
ror
fidivs
insl
adc
pop
dec
pop
pusha
lret
movsb
sub
cmc
nop
daa
nop
data16
sbbl
arpl
mov
push
shrl
fbstp
cmpsb
outsb
std
cmpsb
or
adc
fs
cmp
shlb
rclb
in
imul
inc
fsts
es
aas
mov
les
mov
sbb
imul
mov
cmpsl
inc
lock
mov
pusha
xchg
aam
pushf
imul
xchg
sub
mov
cmpsb
mov
outsb
mov
dec
dec
sti
stc
shrl
aas
jecxz
lret
add
popa
stos
daa
out
iret
inc
sbb
das
cli
mov
ljmp
xchg
push
cwtl
inc
ss
js
push
push
sbb
lods
or
push
aas
fisubs
jbe
sub
mov
iret
pop
rcrl
mov
push
iret
push
cltd
jo
sub
mov
iret
icebp
dec
orb
inc
popf
int
stc
sbb
js
push
or
push
std
stc
or
push
push
das
lea
push
mov
mov
sub
lock
stos
cltd
test
scas
icebp
xor
gs
pop
out
cmp
hlt
mov
jmp
add
arpl
mov
cmp
loop
mov
scas
sub
mov
xchg
aam
pushf
jns
push
aad
lock
addr16
imul
out
divb
jns
push
sar
mov
sub
cmpsl
stos
aaa
xchg
add
push
cmp
loop
test
jmp
and
jmp
and
jo
aad
sahf
int3
jae
rcrb
xor
ficoml
imul
push
push
les
icebp
jl
push
nop
pop
jo
jle
dec
dec
ja
mov
xor
sti
lods
fsubrl
mov
pop
cmpsl
adc
inc
faddl
add
mov
in
mov
adc
cmc
lock
mov
leave
mov
xchg
std
jns
cmp
dec
xchg
inc
cli
jg
jno
int
in
lds
push
cltd
in
adc
aam
std
cmp
lods
cmc
xor
push
lretw
ljmp
in
cld
xor
movsl
nop
add
movsb
xchg
enter
fstpt
call
mov
pop
arpl
fimuls
mov
push
bnd
es
and
mulb
xchg
xor
dec
push
movsb
sbb
jns
pop
fs
sub
inc
sub
data16
loopne
push
fucomp
cli
test
cmp
pop
or
hlt
mov
and
inc
or
xchg
andb
test
cmp
mul
pop
dec
lahf
xor
mov
push
sub
xchg
sbbl
pop
jge
push
bound
inc
pop
test
mov
rolb
mov
inc
or
xchg
sub
xor
call
mov
aaa
push
enter
xchg
jmp
inc
ss
mov
mov
and
add
or
fstpl
sahf
pusha
lret
mov
ret
mov
sti
dec
pop
jbe
cli
gs
mov
stc
out
sub
cli
es
enter
test
jbe
mov
aaa
jp
dec
pushf
or
pop
ss
dec
mov
and
sub
outsl
cmp
cli
adc
mov
dec
sbb
mov
inc
nop
js
mov
and
testb
jge
pusha
push
jge
or
ljmp
inc
scas
mov
xor
int
out
jmp
cli
adc
add
adc
roll
pusha
xor
andl
pushf
repnz
lods
cwtl
in
out
xchg
push
dec
rorl
cmp
sub
and
dec
pop
jl
gs
pop
pusha
ds
bound
mov
icebp
shlb
fabs
aas
push
jbe
shr
dec
insb
or
push
cmc
jns
mov
pushl
and
and
pop
pop
test
inc
test
sbb
jmp
dec
ljmp
ret
idivl
lret
dec
mov
push
sbb
or
mov
inc
sti
push
cli
ror
ja
arpl
jno
sbb
aad
test
add
imul
cli
into
sub
cmp
scas
sub
shrl
call
std
fldcw
subb
bound
pop
cwtl
test
test
add
fdivrp
in
dec
call
mov
lea
dec
cltd
leave
lds
inc
daa
push
aas
mov
mov
outsl
scas
dec
fsubl
and
mov
das
es
ret
dec
in
js
daa
jae
out
dec
gs
sub
push
cmpsl
xchg
mov
pop
loopne
add
or
mov
out
push
bound
sbb
xchg
sahf
mov
mov
lret
lret
and
loopne
push
xor
sub
aad
xchg
lods
cs
pop
inc
push
jle
push
add
popf
out
ja
xchg
repnz
xlat
push
xchg
insl
in
ljmp
dec
inc
xchg
xchg
arpl
pop
xchg
dec
outsb
and
add
ja
data16
jae
push
pop
pop
scas
add
push
inc
cmp
out
dec
outsb
ss
mov
xor
clc
push
out
push
mov
sarl
bound
mov
xchg
je
ret
mov
or
addr16
mov
scas
jp
mov
jnp
hlt
aam
xlat
ja
push
jmp
sbb
repz
popf
enter
cmp
gs
push
and
inc
fsubrl
aas
push
loopne
movsl
mov
into
push
lea
mov
sub
ljmp
push
scas
test
mov
out
call
sbb
adc
jg
dec
dec
das
mov
sbb
inc
popf
mov
pop
add
outsl
les
mov
add
cmp
in
roll
dec
xor
clc
ret
fdivrl
mov
pop
push
pop
int
dec
arpl
mov
stos
push
je
fcmove
adc
bound
je
mov
mov
jl
mov
lcall
xor
data16
aam
adc
ss
pop
lret
push
jbe,pt
inc
mov
push
jl
lahf
mov
mov
sti
fcmovbe
pusha
jmp
aaa
dec
jae
dec
rcll
fbld
ss
pop
mov
xchg
rol
jne
int
mov
push
pop
xchg
pop
push
rcr
mov
or
sarb
es
mov
xlat
inc
cmp
je
lret
cmp
cmp
sub
scas
jne
mov
rol
push
dec
gs
pushf
mov
testb
pop
xchg
push
sub
sahf
push
xor
xchg
xor
negb
adc
and
mov
mov
mov
inc
stc
mov
mov
adc
sub
jl
inc
push
xor
sbb
movsl
cld
shll
jo
mov
sbb
mov
cmp
push
jmp
mov
sarb
shlb
or
lret
jae
sbb
adc
jne
sub
lea
jg
or
insl
adc
sbbl
mov
out
cmp
hlt
lock
xchg
int
mov
dec
sub
or
mov
pop
fisubs
popa
xchg
jle
and
mov
stos
xor
dec
adc
cli
mov
pop
jp
aad
pop
pop
or
jno
mov
fidivs
ret
mov
insl
push
xchg
pop
stc
dec
sbb
imul
out
iret
push
repnz
sbb
jne
int
lret
mov
jl
fs
push
mov
mov
push
mov
pop
mov
cmpb
lret
iret
mov
cs
repz
sub
and
loop
inc
cmp
dec
inc
mov
loope
pop
cmp
adc
xor
dec
mov
fidivl
shl
setle
ds
pushf
pop
cs
test
in
mov
int3
nop
push
int3
push
cmp
pushf
dec
cmc
lahf
jns
push
imull
lods
int
push
in
xor
in
push
lahf
push
out
into
jle
mov
jne
jg
add
mov
imul
lret
xchg
xor
mov
sarl
stc
xchg
fstp
inc
add
into
sbb
test
cwtl
les
insl
or
pop
xor
icebp
das
movsl
mov
leave
cs
add
xchg
cmp
rcpps
mov
addr16
adc
sbb
stos
bound
jae
enter
mov
imul
nop
test
int
push
sub
mov
mov
popa
shll
push
xchg
loope
cltd
cmpl
jbe
xorb
stos
or
out
and
or
mov
sub
repz
cmp
sbbb
roll
into
mov
fsubrp
sti
sbb
pop
adc
push
jne
push
and
jb
cld
lea
jle
jb
movsl
dec
sbb
lods
pop
pop
es
adc
ss
ljmp
subl
mov
movsb
popf
sbb
fdivrs
clc
in
mov
sub
pop
xor
sub
lea
jge
loope
sbb
and
add
fcomps
mov
and
inc
int
fs
push
cmc
xor
popa
dec
inc
xchg
sub
test
add
or
add
and
imul
xchg
xor
mov
mov
decb
mov
xchg
jno
out
int
mov
dec
jbe
inc
push
in
out
mov
insb
enter
mov
xchg
repnz
cmp
dec
arpl
jno
jnp
fisttpll
testb
fnsave
cld
jae
cmpl
mov
bound
out
mov
push
aaa
pop
cmp
test
xchg
into
jnp
mov
nop
add
mov
or
push
insl
out
daa
cmp
add
mov
mov
pop
stc
jns
sbb
inc
push
sbb
out
push
xor
jl
aas
dec
mov
mov
lods
adc
sub
jbe
sti
push
popa
xchg
jbe
fsubrl
push
cmpsl
jb
bound
loopne
les
arpl
lods
ja
rcrl
or
popa
xor
js
test
jae
repnz
loope
pop
push
loopne
sbbl
inc
sbb
dec
dec
xor
adc
mov
mov
lods
cli
mov
xor
popf
lods
cmpl
test
cli
mov
nop
mov
sbb
jb
mov
dec
js
sbb
jns
clc
sbb
popa
sbbb
and
pop
fxam
out
aam
xchg
xchg
test
xor
add
popf
mov
mov
lock
mov
lock
xor
inc
dec
pop
mov
mov
repz
pop
mov
mov
pushf
and
pop
hlt
mov
je
test
mov
dec
negl
mov
push
xchg
nop
cmp
sbb
mov
movsb
stc
sub
shrb
scas
xor
pop
fwait
out
out
lods
dec
push
jl
int3
fistl
daa
cmpl
imul
lock
popa
xchg
pusha
add
push
jb
inc
sti
jg
sub
sub
cwtl
movsl
xor
pop
or
clc
shlb
push
sub
in
adc
add
mov
hlt
mov
fiadds
cmc
cwtl
out
lret
sub
jno
in
sub
fsts
jo
cwtl
adc
arpl
pop
aaa
xchg
xchg
cli
loop
sahf
dec
lea
rcr
lret
int3
scas
xchg
xchg
sub
test
push
fisubs
nop
in
xchg
mov
mov
stos
and
mov
lea
mov
fsubrp
decl
xchg
push
pop
sub
sub
scas
loope
xor
in
cmp
in
mov
pop
jmp
inc
cmpsl
pop
sti
shrl
dec
jo
push
sbb
inc
int3
icebp
test
add
or
cs
movsl
out
add
pop
pop
xor
and
push
push
push
mov
sbb
sbb
pop
dec
pop
leave
dec
shll
in
push
jl
imul
into
stos
xor
mov
movsb
roll
push
fcom
popf
dec
push
lcall
sbb
pop
push
mull
mov
bound
inc
inc
call
cmc
mov
shrl
sbb
push
mov
sub
cld
mov
adc
ret
testb
and
sbb
incb
lcall
xor
pop
ret
cmp
cld
jo
jg
loopne
mov
out
mov
mov
imul
js
or
push
mov
scas
push
pop
sti
popf
adc
out
lods
aam
mov
mov
jbe
loopne
inc
xchg
pop
mov
fistpll
xor
push
pusha
push
pop
or
inc
and
inc
rolb
notl
xchg
or
inc
popf
scas
es
in
dec
arpl
sub
inc
sub
add
insl
in
mov
push
mov
xchg
iret
mov
sub
pusha
xor
notl
xor
imul
xor
lret
stos
mov
jg
fwait
call
inc
xchg
mov
or
scas
sbb
xchg
push
pop
aam
mov
ret
lcall
and
adc
mov
xchg
and
fdivs
sarb
outsl
push
mov
dec
pop
mov
adc
cmpsb
or
movsl
push
xchg
xchg
ret
push
leave
popa
xchg
es
insl
ss
lds
xor
scas
pcmpeqb
dec
jg
ret
jecxz
std
stc
outsb
movb
or
sbb
inc
addr16
aad
hlt
mov
ds
sbb
fnstenv
stos
stc
fbld
pop
or
fsubrl
sbb
dec
and
jl
js
push
ret
mov
pop
push
and
mov
jmp
or
clc
arpl
jbe
adc
dec
dec
dec
nop
loop
and
popa
cmp
imul
cmc
sti
jno
hlt
stos
sbb
cs
ret
movsl
dec
pop
test
imul
or
stc
adc
sub
arpl
outsb
mov
scas
inc
inc
and
test
xchg
into
shl
adc
stc
insb
popa
out
pop
es
and
int3
pop
sbb
xor
jmp
int3
fsub
pop
jae
sub
ror
sbb
and
stos
int3
or
xor
gs
pop
cld
int
sahf
std
or
movsb
outsb
sahf
xchg
xchg
adc
stc
inc
mov
cmp
cs
out
jg
pop
in
dec
dec
mov
cmp
incl
cmp
stc
or
xchg
mov
push
and
xor
scas
jmp
insb
lahf
cmp
mov
pusha
inc
and
xchg
sahf
mov
imul
mov
or
dec
lds
test
aam
stos
cld
add
sbbb
les
ss
int
push
movsl
add
push
int
in
es
jecxz
mov
enter
sub
pop
arpl
inc
mov
pop
lret
outsb
dec
jmp
imul
int3
dec
push
xlat
popa
insb
cmp
ja
fsubr
or
pushf
dec
std
rclb
aad
shlb
movsl
notl
mov
xchg
jl
aaa
inc
sbbl
add
xlat
push
adc
mov
hlt
nop
mov
cmp
xchg
test
into
sub
and
adc
repz
jle
ss
scas
jp
push
add
cwtl
sbb
enter
mov
push
repnz
call
aam
xchg
sbb
xor
out
daa
pop
xchg
and
daa
xor
push
aad
or
dec
jbe
gs
test
sahf
cs
xchg
push
dec
sub
out
jp
sbb
xchg
push
mov
mov
call
subb
hlt
push
mov
mov
repz
imul
jge
pop
mov
or
cmp
outsb
lret
orb
lahf
dec
rcrl
fstps
jnp
outsl
inc
inc
dec
insl
divb
mov
es
mov
jno
retw
subl
cwtl
ds
int3
dec
dec
mov
or
sbb
nop
stos
stc
sarb
or
pop
push
cld
add
test
cmp
sti
adc
pop
cwtl
into
fs
fistpll
pop
in
dec
mov
add
mov
cltd
sub
in
lea
adc
ljmp
jns,pn
les
cltd
popf
mov
sbbl
jo
xchg
mov
loope
ja
int
and
scas
out
cwtl
jnp
dec
mov
vxorpd
mov
push
or
jmp
ljmpw
test
push
xchg
ljmp
jnp
fs
cwtl
dec
adc
jns
sahf
jp
pop
sub
add
imul
insb
push
jecxz
dec
push
adc
clc
les
scas
jb
jl
xchg
insl
push
das
sbb
out
mov
sbb
iret
sub
sbb
leave
and
sbb
testb
pop
sub
fcompl
cmp
xchg
mov
arpl
cltd
mov
loopne
mov
test
movsb
insb
repnz
mov
lret
addr16
and
lcall
push
ljmp
ret
gs
jg
int3
add
jo
mov
mov
adc
pop
jno
jg
sub
pop
push
addr16
cmp
nop
xor
cwtl
jnp
cmc
insb
int
cmp
int3
mov
push
js
push
add
in
sti
cmc
insb
add
add
jl
cmp
mov
pusha
cmp
sar
jno
mov
jl
push
insb
add
mov
jmp
mov
mov
fs
dec
shll
or
dec
sarl
mov
xorl
jl
enter
lahf
fs
adc
inc
cmc
mov
lea
jo
and
xor
cmp
int3
lcall
cs
outsl
test
clc
out
std
cmp
inc
lock
lea
inc
xchg
sbb
push
or
push
lods
xor
push
arpl
pop
jnp
dec
lock
fldt
movsl
xor
pusha
cwtl
mov
xchg
loop
daa
xchg
das
sbb
dec
sub
add
fdivs
jecxz
repnz
mov
fcomps
xchg
or
lcall
or
xchg
shr
xchg
adc
popf
push
sbb
es
xor
jge
in
cli
mov
xorb
sbb
out
ljmp
xor
xor
dec
push
jno
cmpsl
xchg
iret
arpl
push
test
mov
shrb
adc
push
and
fistl
aas
std
pop
js
repnz
mov
pop
mul
jp
repnz
cmpl
in
popa
loope
enter
subl
lret
sub
arpl
push
mov
lret
shlb
out
aad
loope
sti
ss
leave
sbb
sarl
cmc
fndisi(8087
stc
fmuls
cltd
add
mov
ss
pop
push
adc
shll
jno
xchg
mov
sub
pop
sbb
sbb
xchg
nop
daa
loope
add
jne
jmp
push
mov
fs
jns
movb
mov
insl
aas
jl
sbb
jns
jecxz
popf
iret
dec
cmpsl
ja,pt
mov
imul
iret
jns
sbb
das
ljmp
pusha
jl
sub
out
popf
sub
shrb
stos
shrl
mov
add
in
movsb
aaa
jl
mov
pop
xor
pop
push
or
cwtl
push
rclb
push
ds
jns
xchg
pop
bound
or
xchg
clc
into
fstl
xchg
pop
push
and
sub
pop
push
clc
cmpsl
push
cltd
aas
jecxz
std
cld
mov
movb
and
mov
jl
and
mov
dec
dec
and
xchg
aad
lret
lea
mov
inc
call
cld
out
jo
xchg
dec
jb
sbb
xlat
push
inc
pusha
xor
lea
sbb
adc
add
in
into
je
mov
dec
int3
sbb
shlb
inc
push
push
and
mov
jnp
xor
dec
add
pop
ds
mov
add
mov
xchg
inc
stos
cs
inc
data16
mov
mov
jne
mov
test
sbb
movsl
repz
inc
scas
rorl
hlt
inc
icebp
adc
push
sub
mov
addb
loope
std
mov
hlt
ret
repz
pop
in
pushf
mov
int3
pushl
or
stc
int3
or
pop
push
pushf
and
lods
jne
test
shrl
xchg
into
adc
mov
aas
fistps
xchg
mov
adc
shll
sbb
mov
fnstcw
jge
mov
xchg
and
shlb
or
jl
scas
jle
lds
stos
and
mov
sbb
or
push
pusha
and
dec
jp
push
or
cwtl
fstl
or
aam
adc
bound
out
ret
mov
cmp
cld
mov
and
popf
je
jns
shrl
in
adc
mov
cwtl
js
test
push
inc
jl
shll
or
daa
and
imul
outsl
mov
xchg
add
pop
insl
mov
sub
push
test
jmp
add
std
in
mov
xor
in
ds
push
leave
repnz
std
mov
sub
roll
dec
test
out
pop
mov
sub
nop
add
sbb
sub
sar
pop
jnp
aam
je
sbb
adc
inc
rcrl
out
pop
sub
lret
out
fcmovbe
popf
cmp
ds
cmpb
mov
lods
sahf
pusha
xchg
mov
fsts
push
imul
pop
inc
fxch
orb
jno
jge
dec
out
adc
mov
sbb
xchg
jne
dec
idiv
push
lret
stos
add
mov
mov
dec
call
jo
int
xchg
and
push
sti
mov
push
lods
xorl
push
push
cmc
inc
xchg
jmp
push
dec
pop
ja
push
sub
sti
in
push
fiaddl
hlt
jle
andb
fsubrs
in
cmpsl
add
sbb
xchg
sub
cmc
xlat
add
xchg
das
lds
and
push
dec
in
popf
fdivrl
test
lcall
sub
ret
ret
dec
push
aas
lcall
inc
rcll
mov
roll
test
daa
sahf
pushf
or
sbbb
dec
fsubl
inc
inc
ret
std
idivl
mov
jg
mov
and
mov
pop
out
jo
dec
add
imul
es
or
in
xchg
xchg
jns
sub
or
inc
imul
push
mov
shlb
inc
into
std
sbb
inc
addr16
mov
loop
mov
push
or
cltd
mov
sbb
js
subl
sbb
fdivrs
mov
lds
pop
iret
out
cmc
xorl
mov
loope
xor
add
subb
or
adc
or
and
cltd
xor
and
xor
fwait
sbb
xor
cmp
sbb
out
mov
mov
mov
into
or
les
xchg
cli
sbb
pusha
and
adc
dec
dec
or
sub
aad
sub
inc
push
pop
lret
mov
pop
mov
dec
xor
sarb
mov
movsl
cmp
inc
push
movsl
insl
sbb
inc
push
push
dec
outsb
or
adcb
adc
and
lods
movsb
mov
ret
dec
repz
movsl
insb
icebp
out
out
jae
inc
lock
in
ds
lock
sub
rolb
jle
pop
cmpsb
mov
mov
lods
fists
js
jns
frstor
ljmp
and
loop
pop
ret
test
pop
add
aas
cmp
out
in
pop
leave
adc
js
rolb
jnp
dec
ret
test
fnstsw
push
sti
rolb
inc
clc
insl
inc
sahf
sbb
fisttpll
add
dec
jl
insl
enter
inc
mov
stc
lret
jne
mov
push
mov
les
or
in
xlat
je
iret
and
shrl
hlt
inc
xchg
lret
mov
cmc
mov
nop
int
mov
outsl
outsb
sbb
jmp
in
ffreep
repz
push
xorl
push
je
cmpl
and
push
mov
in
jl
jle
imul
inc
inc
sub
mov
inc
outsl
adc
out
mov
out
jle
aam
pop
sbb
push
lock
jecxz
enter
cwtl
sbb
fcompl
xchg
push
jne
out
add
popf
or
imul
cld
imul
sti
fcmovu
cld
popf
orl
into
xchg
rclb
es
xchg
jb
mov
mov
cmc
loope
pop
fistpl
xchg
push
fstps
xchg
xor
or
jno
sub
jno
xor
iret
mov
mov
movsl
sub
test
jg
popf
test
push
fldcw
fbstp
fwait
std
push
loope
mov
hlt
lea
ss
rclb
xor
loope
shl
xchg
xor
shr
jo
sub
mov
fisubrl
enter
enter
insb
fwait
hlt
mov
pushf
scas
andb
lea
adc
sub
sbb
addr16
pop
jl
and
cwtl
shrb
insb
inc
or
sbb
fs
jp
ja
jb
jmp
sub
shrl
movsl
push
stos
popa
and
cmpsb
cmp
std
jmp
or
and
and
lods
inc
sbb
xchg
add
sub
loope
out
dec
xor
ficompl
repnz
dec
mov
cmp
ss
mov
push
mov
outsb
add
sub
lret
xlat
fwait
sti
or
movsb
out
push
push
repz
lock
jecxz
pop
mov
xor
test
adc
adc
pop
sbb
jl
fsubrp
xchg
pushf
aaa
jns
adc
test
movsb
data16
rol
inc
mov
xchg
shlb
stos
lret
or
out
fbld
ret
pop
rolb
cmpsb
call
cs
cmp
inc
test
xlat
popf
fimull
push
adc
je
dec
and
jae
dec
out
rorb
lods
pop
ss
movsl
add
cmp
popf
push
jmp
ja
xchg
aam
sahf
fsts
dec
loopne
stc
pop
in
es
mov
ret
scas
cmc
in
cmp
jge
mov
mov
cli
push
inc
add
out
lcall
sub
ret
mov
push
and
or
push
xchg
jno
dec
jmp
xchg
int3
mov
stos
sub
mov
test
sub
adc
clc
je
scas
push
es
add
aam
orb
push
cwtl
mov
push
sub
cmp
mov
les
or
stos
mov
jg
fmuls
jnp
pop
mov
mov
jl
out
dec
sub
or
dec
push
pop
arpl
adc
adc
ret
cmp
jae
outsl
xchg
push
js
sahf
jecxz
insb
sub
mov
sbb
cmp
xchg
bound
add
push
mov
dec
xchg
push
daa
test
jno
and
pop
sub
lret
adc
inc
in
push
js
sarb
push
fs
mov
ss
xchg
jmp
inc
imul
xchg
or
andb
dec
lods
and
inc
shl
mov
shlb
sbb
lea
xor
cmp
shl
mov
lods
std
cmp
push
lret
fldenv
dec
mov
fmuls
pop
divl
adc
sbb
sub
inc
ficompl
cwtl
icebp
mov
andl
cld
dec
leave
das
xchg
mov
ja
push
out
pop
lcall
les
and
and
lods
aaa
sahf
xchg
xchg
mov
dec
nop
dec
mov
ljmp
repz
adc
imul
repnz
sub
rclb
das
push
insl
jmp
aas
popf
sub
push
pop
and
jmp
testl
xor
stos
or
mov
cld
sub
pop
jnp
mov
hlt
ss
sbb
cld
xchg
cmpsb
fxch
mov
jb
movsb
push
push
dec
xchg
cmp
ficoms
sbb
rorl
jo
data16
out
pop
xchg
arpl
cmp
or
mov
push
int
fnstcw
popa
adc
imul
mov
pop
jl
leave
jp
add
fstps
rorb
pop
cmp
or
das
push
jle
in
out
test
lods
mov
cmp
imul
pop
push
dec
loop
pop
or
jmp
pusha
fiaddl
push
push
mov
dec
loopne
cltd
mov
in
adc
xor
and
out
jo
xor
ja
aas
data16
cld
sbb
mov
sbb
das
mov
daa
mov
mov
test
das
and
add
pop
int
dec
lahf
fcoml
push
hlt
lds
or
div
cs
pushf
test
lret
lcall
mov
xor
cmp
push
xor
fldenv
shrl
test
cmp
hlt
rorl
cltd
mov
iret
dec
xchg
or
es
cmp
mov
sahf
mov
xor
mov
icebp
jmp
add
mov
iret
inc
dec
jo
xor
rcrb
loop
testb
or
push
in
stos
push
fdivrl
mov
sbb
add
mov
pop
pop
cmp
outsb
lods
daa
pusha
fldcw
pcmpeqb
das
imul
mov
incl
outsl
in
data16
addr16
test
jns
xor
mov
mov
in
fdivp
dec
insb
push
int3
stos
iret
jns
xor
pop
adc
je
ss
dec
sbb
rcr
imul
es
add
push
xor
inc
and
xchg
xchg
adc
xor
jecxz
adc
mov
stos
xlat
clc
enter
ret
dec
or
pop
xchg
cli
outsb
adc
imul
fldt
into
les
jge
enter
sbb
adc
dec
xor
mov
sbbb
dec
scas
push
loopne
fistpl
mov
cs
xor
pop
or
add
or
movsb
lods
pavgb
xchg
push
mov
jmp
push
or
loope
enter
sbb
inc
mov
mov
push
loopne
mov
ret
and
dec
inc
jne
movsl
rcrl
push
dec
xor
sub
xchg
add
xchg
jns
sub
pusha
pusha
inc
in
jb
mov
add
add
adc
xor
sub
mov
aad
stc
in
lds
inc
mov
cmpsl
push
mov
std
mov
addb
mov
inc
cwtl
test
sarl
mov
sti
repz
insb
sarb
mov
lods
sub
sbb
in
loopne
cmp
lret
and
jle
push
pop
adc
rol
push
mov
sub
pop
and
xor
stc
push
pop
mov
out
mov
imull
mov
pop
and
mov
or
ret
rolb
xchg
inc
jp
and
cmp
or
mov
fbld
jo
sub
inc
jle
sbb
pop
iret
mov
in
imul
inc
dec
fsubl
sub
cmpsl
add
std
xor
fs
sbb
sbb
xchg
mov
movsb
fcmove
loope
adcl
xchg
shlb
cs
inc
xor
movsl
movsb
std
ja
sbb
mov
and
insb
mov
in
mov
std
dec
sub
push
and
loopne
and
into
cmp
je
arpl
inc
jle
jb
ret
mov
adc
pop
sbb
push
std
ja
mov
xor
or
add
cmpl
xchg
andl
nop
stos
mov
ficompl
in
into
mov
pop
cmpsl
dec
or
rcrb
addr16
adc
adc
les
iret
das
or
add
xor
js
fs
adc
xor
push
sahf
leave
jbe
les
lds
imul
or
sub
leave
hlt
aas
cmp
das
lock
out
and
sub
jnp
add
xchg
mov
mov
dec
mov
out
jno
dec
lods
insl
out
jge
mov
clc
fs
js
pop
mov
pop
push
clc
or
xor
outsb
test
outsb
sub
out
and
adc
sbb
stos
jp
sub
cmp
sub
xor
jbe
pop
or
hlt
pop
arpl
int3
lock
ret
rorl
cmc
or
mov
sbb
pop
push
pop
mov
stos
data16
cli
fildll
ss
mov
inc
mov
adc
add
cmp
add
mov
pop
test
fsub
fimull
or
xchg
out
mov
sti
sti
shrb
daa
shll
cmc
or
mov
push
popa
jno
push
xchg
inc
cmp
mov
repz
test
jae
lret
pop
mov
aas
and
ficompl
inc
icebp
sub
shlb
lret
add
imul
xchg
iret
int3
pop
xchg
ret
mov
clc
jno
inc
cmp
out
jo
ret
dec
insl
sbb
sarb
rclb
jne
imul
lds
jns
nop
push
pushf
andl
xchg
add
lret
push
dec
lods
les
cmp
lds
iret
stos
out
ss
xlat
andl
push
fistpll
je
and
mov
add
xchg
mov
mov
mov
and
ffreep
push
leave
xchg
mov
jne
into
inc
decl
mov
pop
leave
cltd
sub
lds
mov
dec
sub
mov
jmp
std
fldt
inc
mov
fdivs
jmp
pushaw
stos
roll
ret
pusha
paddq
js
inc
or
cmp
pop
js
mov
ret
dec
aam
mov
outsb
je
sbbb
fucomi
aaa
mov
mov
adc
add
jns
ljmp
mov
call
push
xor
outsl
xor
push
push
test
movsb
sbb
cltd
mov
dec
out
jle
pusha
rcr
cmp
aaa
xchg
xchg
std
xchg
shrl
pop
jbe
addr16
sub
fadd
imul
loop
sub
jns
sbb
lds
das
cli
stc
dec
sub
cli
pop
mov
add
inc
dec
fldl
adc
loope
mov
cmp
ljmp
outsl
outsl
mov
mov
push
mov
faddp
push
sbb
js
jne
jg
add
dec
aad
loopne
push
into
jge
mov
jbe
push
iret
pop
sbb
sbb
scas
sub
xor
mov
pop
mov
fwait
ds
jns
out
shll
xor
adc
rcr
jg
cmp
sbb
insb
xchg
das
push
lcall
fiaddl
insl
les
jp
idivb
scas
sub
adc
movsb
insl
push
imul
push
test
movsl
fs
jae
std
jg
sub
psubusw
test
stos
add
sbb
sub
ds
imul
push
pop
int
dec
ret
cmp
pop
in
int
sub
xchg
xlat
outsb
mov
jne
leave
repz
sbb
push
mov
xchg
mov
fcoml
cmp
pop
enter
or
cmpsl
pop
imulb
sbb
imul
mov
fimull
insb
mov
push
xchg
pop
adc
sarb
loope
bnd
jmp
mov
insb
xor
shll
aaa
movsl
int3
xor
dec
pop
adc
sbb
sahf
jg
iret
cmpsl
xchg
into
div
jmp
mov
and
stc
popf
push
mov
add
popa
aad
adc
loop
sar
out
mov
dec
and
data16
mov
ljmp
push
cs
inc
cvtdq2ps
lret
pop
jbe
fdivl
sbb
adc
push
push
imul
nop
lret
fiaddl
roll
popa
mov
mov
mov
jno
movsl
cmp
mov
push
lahf
jecxz
lret
push
or
daa
test
mov
loop
sbb
sub
jmp
mov
cld
mov
int
add
add
dec
imul
push
test
push
adc
and
ja
ja
fcomps
xor
mov
mov
loopne
xchg
js
fiadds
inc
in
inc
lret
repz
xchg
icebp
imul
cmp
push
sbb
or
mov
clc
lahf
jno
and
repz
enter
pop
dec
stc
cmpsb
adc
ljmp
push
rorb
mov
sbb
call
popf
push
jmp
add
adc
shlb
push
sbb
ret
divb
mov
test
out
push
aad
adc
call
leave
les
stc
icebp
cs
sbb
xchg
cmc
pop
pop
adc
ss
icebp
notl
cs
movsl
js
lock
xchg
sub
fstps
fyl2xp1
add
pop
and
add
dec
pop
lret
pop
xchg
sbb
mov
das
or
sub
dec
xchg
mov
xchg
ds
shll
cmp
dec
cs
add
ror
jbe
es
flds
rclb
xor
xor
fidivrs
hlt
xchg
and
add
mov
sbb
push
mov
insb
iret
sbb
mov
sbb
stc
cmpsl
push
or
xor
jmp
rcr
js
movsb
ret
xchg
dec
add
inc
mov
rcrl
std
test
or
stc
pop
mov
lods
cli
push
dec
mov
pop
push
lcall
xchg
add
js
addr16
inc
das
rcrb
push
cwtl
cmc
xor
repnz
insb
push
ret
icebp
xchg
xchg
test
in
hlt
int3
push
mov
insb
push
add
xlat
shll
add
inc
test
and
adc
xchg
sti
je
mov
mov
out
cmp
and
shll
fldl2t
pop
rclb
push
imul
in
dec
scas
mov
fcmovb
mov
bound
cmp
cld
rcrl
imul
push
pop
clc
sbb
cmpsl
cld
lea
mov
mov
xchg
adc
mov
sbb
es
cmc
xor
aaa
movsb
sub
cld
adc
gs
xor
paddd
fdivrs
or
jb
fs
subb
cmp
mov
mov
dec
pop
jl
jecxz
cmpsl
test
sub
imul
leave
in
or
aad
loop
mov
push
cmp
hlt
and
stos
stos
cltd
adc
mov
xor
imul
lret
loopne
and
inc
sbb
data16
sahf
roll
test
add
cmpsb
ret
push
pop
mov
inc
pop
push
sbb
sbb
dec
xchg
push
in
push
inc
push
adc
es
pop
pop
sbb
shlb
cmpsb
int3
sub
daa
mov
lret
xchg
sub
icebp
mov
or
jp
mov
jae
cli
xor
or
cld
mov
out
cwtl
mov
jecxz
and
xchg
lds
sbb
mov
repnz
out
cwtl
jecxz
es
fisubl
outsb
loope
or
sbb
jp
dec
fdivrs
or
sbb
inc
push
lods
ja
out
pop
cmpsb
jmp
stos
xorl
mov
and
movsl
adc
mov
or
orb
cltd
sti
test
outsb
lods
cltd
inc
sahf
cmc
jge
sub
jbe
pop
sbb
sbb
insb
xor
sbb
mov
cmp
push
lock
adc
mov
in
aas
clc
int3
call
cmp
call
mov
shrb
xchg
cmc
xchg
push
lods
push
dec
into
cli
push
imul
leave
pop
pop
idivb
call
and
outsb
add
das
or
jmp
xchg
cmpsl
fstpt
mov
xor
popl
lods
in
sub
xor
icebp
and
scas
test
or
jmp
orl
aas
xor
ffree
mov
lret
rcll
dec
nop
outsl
inc
or
mov
lds
add
xchg
imul
or
aaa
mov
or
cmp
jno
xchg
pop
es
sub
dec
and
mov
imul
lret
mov
int3
das
aam
dec
inc
cli
aad
jno
outsl
sti
pop
push
call
int
in
mov
mov
sub
xor
lret
loope
xchg
cmp
lret
dec
lds
cmc
mov
lock
adc
es
inc
std
clc
cmpsb
cmp
jmp
add
stos
aas
inc
out
in
adc
xchg
pop
push
dec
stos
inc
xor
sahf
fistps
inc
cmpsb
sbb
inc
inc
push
repz
test
xchg
mov
mov
xchg
xchg
adc
pop
mov
shrb
insb
mov
lahf
adc
int
inc
or
test
jecxz
sbb
inc
nop
fst
xchg
scas
stos
mov
mov
cmp
push
jo
out
out
icebp
push
cmp
sub
and
les
mov
xchg
popa
pusha
xchg
cli
jne
adc
leave
or
sbb
mov
inc
fidivl
arpl
dec
cmp
fwait
sub
pop
sub
adc
sar
popf
and
pop
dec
lret
repz
xor
xlat
aaa
push
icebp
mov
sub
js
test
mov
jb
xchg
push
mov
enter
mov
rolb
cli
sbb
jge
rcll
jno
shl
inc
fs
movsb
and
rcrb
xchg
test
jnp
pushf
push
sbb
mov
lods
push
shll
call
or
adcb
ljmp
aaa
inc
sub
dec
in
mov
xor
push
das
and
sbb
aam
cld
int
or
or
pop
dec
lcall
mov
xchg
jo
lock
fwait
cmp
push
fwait
mov
cmpb
xchg
mov
lock
lods
sub
insb
in
push
lea
sahf
dec
movsb
orb
sti
cmp
addr16
sub
nop
jecxz
jmp
cmc
cmpsb
lea
push
xchg
lcall
shll
dec
les
sub
jns
aam
mov
bound
fnstsw
xor
aaa
xor
or
and
lea
popf
testb
mov
insb
imul
xchg
subl
mov
inc
dec
mov
cltd
xchg
push
das
jne
push
push
aaa
sub
sarb
insb
jle
negl
bnd
bound
xchg
dec
ret
out
shl
stos
in
mov
mov
inc
out
mov
inc
and
mov
popa
adcl
fiadds
mov
push
stc
insb
add
lods
sub
sbb
adc
xchg
jo
mov
lahf
jnp
or
xor
lahf
mov
mov
xchg
repnz
sbb
daa
push
fisttps
outsb
icebp
lods
pop
popa
scas
jno
call
fidivrs
mov
and
in
jmp
xor
xor
adc
in
leave
xor
sahf
rclb
mov
fwait
addl
imul
mov
push
push
rcl
or
add
ficompl
lret
adc
aad
daa
jecxz
rol
add
pop
cmc
pop
sti
inc
adc
fsts
xor
hlt
lcall
push
fwait
dec
out
mov
sarl
inc
loopne
fsubl
push
or
mov
jle
js
add
nop
pop
xor
dec
arpl
push
in
clc
inc
insl
inc
mov
ficomps
stc
xlat
ljmp
lock
sti
insb
outsl
pop
xchg
stc
int
jns
loop
push
arpl
hlt
mov
cmp
add
ret
inc
hlt
xor
ret
cli
inc
rolb
mov
fbld
popf
adc
jecxz
ljmp
es
mov
insl
mov
push
add
ja
out
cmp
xchg
popa
into
or
push
gs
xor
addr16
mov
ret
aas
loope
pop
jno
add
mov
push
insb
dec
push
mov
sbb
das
pop
in
stos
jno
shll
dec
ret
fwait
xor
mov
das
push
xor
fdiv
xchg
fisttps
dec
cmc
test
pop
add
mov
mov
insb
int
push
imul
sbb
cmc
inc
mov
mov
cli
lock
inc
movsb
lods
mov
cmp
mov
ficoml
les
mov
pop
mov
sahf
sub
pop
imul
cmpsb
dec
iret
test
dec
loop
aas
fucom
daa
push
cmc
jle
inc
scas
inc
insl
pop
adc
jp
pop
dec
lock
inc
call
jns
int
inc
test
push
cmp
mov
xchg
pusha
push
hlt
mov
movsb
fimull
jne
pop
lods
jo
push
pop
cmpsb
xchg
fdivrs
data16
test
mov
pop
push
mov
cs
pop
jge
and
xchg
pop
xchg
ret
enter
xchg
jo
aad
fldcw
repnz
push
mov
cmp
mov
scas
jae
test
jbe
jge
repz
and
jmp
sarl
out
pop
push
sbb
lock
pop
test
stos
ljmp
sbb
mov
mov
insb
fisubrs
and
addb
jl
mov
sub
es
shll
dec
dec
lret
or
fsubs
cltd
test
push
test
out
movsl
mov
push
mov
sub
push
mov
clc
xchg
sti
lcall
adc
repz
fmull
ljmp
mov
push
sbb
xlat
or
lods
lods
mov
sub
sbb
ret
arpl
adc
jle
mov
mov
adc
sbb
bound
dec
out
scas
mov
enter
insl
push
test
mov
adc
lea
mov
outsb
aas
fucom
push
shlb
xchg
cmp
mov
movsb
sbb
mov
add
clc
xor
xor
sbb
scas
mov
fs
popa
mov
out
aad
xor
inc
add
mov
iret
push
mov
jae
paddb
out
xorb
call
cli
or
sub
pop
jg
xchg
inc
mov
xchg
leave
cmp
xor
sar
mov
filds
out
stc
xor
jmp
hlt
aaa
jle
sub
add
jo
mov
inc
scas
mov
fstpt
inc
leave
out
fdivrl
lods
add
sahf
jge
pusha
jne
mov
outsl
mov
and
mov
xchg
sahf
pusha
xor
sbb
outsb
xchg
pushf
aam
sub
sbb
sbbb
jns
or
out
test
dec
dec
add
jnp
jp
sub
daa
pop
inc
es
adc
pop
and
cmpsl
mov
mov
jle
and
adc
hlt
mov
push
mov
repz
lret
mov
inc
dec
xor
jne
pop
lahf
xchg
mov
mov
and
or
add
icebp
popa
mov
push
rolb
and
in
ja
mov
cmp
and
xlat
cmp
cmp
ds
sbb
jge
sbb
mov
movsl
ss
xchg
or
push
leave
es
mov
loopne
insl
sub
cmp
lahf
or
and
jmp
mov
and
pop
jns
inc
das
loopne
push
adc
cld
jne
jge
push
sahf
inc
negb
popa
xchg
les
cmp
mov
add
inc
push
dec
jmp
mull
add
mov
sti
xchg
ss
ret
fld
in
ss
popf
mov
mov
ret
push
dec
xchg
xor
lcall
cmc
mov
adc
mov
je
cmp
addps
mov
pop
movsl
or
push
outsb
bound
loope
cmp
add
iret
lods
fsts
cmp
sub
or
ret
imul
insb
mov
xchg
jecxz
jmp
call
dec
jle
cmp
dec
lods
push
cmp
mov
test
cmp
mov
mov
aam
addb
push
xchg
mov
jmp
adcl
test
clc
ret
mov
mov
popf
pop
xor
mov
push
mov
xor
loop
sub
mov
xchg
rcrl
ret
ds
or
lahf
or
stc
cmc
fcoms
xchg
push
jno
addl
js
cli
ds
adc
gs
fidivl
movsl
addr16
xchg
aas
adc
inc
and
sbb
mov
fucomp
xchg
dec
iret
cmp
cmpsb
push
jnp
pop
mov
push
data16
aaa
rcll
push
sbb
js
pop
xlat
aam
sbb
clc
xchg
test
out
aam
es
xor
rorl
loop
loop
gs
enter
rorb
mov
push
andl
imul
xchg
adc
sbb
xchg
push
movsb
pop
mov
adc
sbb
add
xchg
or
sbb
insb
pop
cmp
inc
push
sub
add
aaa
lret
sar
or
mov
add
mov
and
mov
cwtl
nop
ja
stos
push
mov
jae
lods
push
dec
cmpsb
lret
lods
adc
jge
mov
dec
dec
repz
xchg
mov
cmp
mov
addr16
mov
divl
inc
push
jmp
or
cmp
jecxz
mov
enter
lds
test
adc
int
aad
shrl
inc
cwtl
lds
mov
testl
xor
or
pop
push
cmp
mov
sub
cltd
mov
xor
xchg
mov
ja
add
lods
sbb
mov
jbe
adc
sub
in
cmp
leave
cmpsl
cld
sub
icebp
rcl
out
push
xor
sti
ret
sbb
push
jae
pop
or
and
ret
ljmp
sarl
sahf
das
hlt
mov
xor
insl
inc
mov
jb
orl
aaa
loop
outsl
and
fs
int
daa
xchg
leave
pop
pop
jl
dec
ret
fwait
add
inc
push
xor
ljmp
cmpsb
jmp
test
imul
cwtl
in
nop
push
sub
iret
insl
out
lods
push
mov
or
in
pop
insb
pop
ljmp
sbbl
xchg
mov
pusha
push
pusha
es
mov
nop
mov
xchg
lahf
dec
outsl
in
lahf
int3
mov
push
rolb
push
pop
dec
xchg
sub
into
out
int
insb
jg
jecxz
bound
shll
jb
adc
sub
cltd
outsb
adc
outsl
daa
aas
push
push
in
stos
outsb
sbb
dec
outsl
jnp
xchg
movsl
adc
arpl
test
or
mov
jbe
cwtl
dec
ror
mov
xchg
add
push
inc
cmpsl
out
push
mov
imul
dec
ficoms
cmp
or
cmp
cli
jp
jne
add
jl
pushf
inc
and
fadd
sub
mov
xchg
pop
leave
xchg
push
mov
bound
pop
subb
cwtl
lar
add
xor
in
sbb
cmp
enter
inc
js
int
jb
rcrl
xchg
sbb
insl
dec
lods
inc
add
outsl
pop
xor
jmp
cmp
outsl
and
and
int
add
cmp
iret
lock
sti
popa
enter
xor
xchg
pop
sub
add
sahf
stc
sti
xor
cmp
add
rcll
adc
mov
push
push
inc
out
movsl
imul
test
int
cmp
jne
sub
sbb
lods
outsb
xchg
jg
subl
inc
rcr
les
adc
icebp
xchg
fisttps
xchg
fistl
ljmp
enter
je
cmp
fsubs
pop
mov
sbb
push
aas
mov
shrb
mov
addr16
mov
and
inc
sbbl
sbb
das
push
mov
aaa
mov
mov
gs
fs
xor
pop
stos
sbb
sbb
popf
pop
lea
sbb
stos
add
inc
mov
hlt
sub
sbb
and
scas
and
dec
pop
inc
test
jnp
scas
mov
cs
jmp
sbb
add
mov
sarl
or
data16
arpl
sbb
imul
fincstp
push
int3
cmpsl
push
add
cmp
xchg
cmp
loope
lds
jge
inc
xor
jnp
and
sahf
mov
stos
adc
sub
int
push
pop
in
xor
push
es
int
movzbl
add
mov
push
push
leave
adc
pop
adc
fsubrl
imul
sbbl
arpl
push
inc
jbe
ds
xorb
cmp
cs
fs
pop
push
sbb
rorl
mov
sbb
mov
cli
pop
sti
mov
and
sahf
add
out
mov
jp
xchg
inc
mov
fidivs
mov
faddl
mov
movsl
loope
mov
scas
sbb
scas
adc
push
popa
aaa
loope
loopne
gs
movsb
in
paddsb
push
adc
test
sbb
mov
sbb
inc
inc
repz
rclb
add
imul
push
sub
fnstsw
jmp
fadd
test
and
cwtl
loope
std
cmc
popa
fnsave
sub
fistpl
jecxz
add
enter
aam
ljmp
pop
lock
push
inc
lea
enter
add
inc
shlb
imul
ss
clc
test
imul
add
loopne
mov
stos
mov
rorl
mov
in
mov
addr16
in
imul
jns
jmp
mov
cmp
cmp
nop
fwait
sub
test
leave
or
xchg
frstor
mov
cwtl
jns
pop
add
in
jbe
sub
xchg
jmp
add
sub
sub
jb
adc
jp
xor
inc
lds
fistps
jg
add
pusha
or
mov
mov
out
sub
pop
cld
pop
sbb
jno
repz
mov
sbb
nop
aas
cmp
inc
dec
push
push
mov
push
xor
xor
or
dec
cmc
mull
xchg
dec
outsl
lods
fsubp
std
faddl
adcb
fnsave
loopne
mov
lret
inc
orl
jp
push
mov
lea
lods
push
lret
adc
imul
jmp
dec
insb
mov
jo
add
push
mov
repz
push
cmp
and
adc
mov
das
push
test
xchg
push
inc
fdivs
in
or
or
jns
sub
mov
inc
or
cmpsb
dec
int3
sbb
loope
jl
shll
dec
out
xchg
call
test
fsubrl
aam
mov
mov
clc
out
cmc
div
clc
jbe
inc
std
pop
sbb
inc
pop
aad
movsb
in
xchg
push
ljmp
mov
adc
mov
sbb
clc
dec
dec
clc
mov
inc
cmp
rorl
mov
mov
lahf
mov
push
sti
out
rorl
xor
cli
jns
addr16
cmp
lcall
stos
enter
mov
mov
inc
sysenter
xchg
enter
mov
pop
test
or
jmp
in
lock
push
shlb
out
fistpll
cmp
lock
int
lods
dec
mov
add
dec
in
mov
or
mov
add
add
test
push
xchg
xchg
xchg
pop
dec
loop
xchg
jmp
cmp
push
loope
popa
cltd
sub
push
dec
mov
sbb
lcall
and
fbstp
push
xchg
vmulps
xor
lahf
jnp
shr
jae
xor
jb
scas
popa
or
aad
dec
mov
mov
faddl
jns,pt
cs
pop
sub
mov
jo
adc
rcrl
fsubr
inc
nop
jge
sub
iret
aam
sub
dec
mov
jno
cmp
push
repnz
in
and
mov
mov
cld
mov
clc
ficoml
xor
mov
repnz
push
mov
sbb
mov
add
flds
adcb
in
xor
pop
jmp
cmp
jle
sti
push
xor
push
cmp
push
push
je
icebp
sbb
or
dec
scas
add
xchg
repnz
cmpsl
test
cmc
dec
jmp
pop
mov
popf
pop
scas
aam
fwait
inc
push
into
jle
les
and
inc
fisttpll
and
test
loopne
mov
divl
mov
xor
mov
xchg
or
outsl
pop
cmp
adc
or
inc
push
out
xchg
shlb
xchg
or
sbb
or
cmp
dec
popf
jecxz
int3
mov
fnstsw
dec
sub
cwtl
pop
bound
cmc
outsl
pop
sub
mov
push
scas
rcrl
adc
fbstp
adc
stos
aam
push
adc
lret
and
in
andb
xchg
data16
in
push
enter
popf
sbb
adc
in
popl
mov
adc
and
mov
push
je
cmpsl
jmp
mov
adc
fcoml
mov
xor
xor
xor
xor
aaa
add
popf
mov
sub
test
lahf
xchg
mov
lods
mov
jo
jno
stc
test
aam
cld
mov
xor
aam
jg
lds
int
leave
adc
inc
stc
lcall
and
xchg
arpl
or
jle
or
popf
adc
mov
add
shrl
inc
adc
fidivrs
dec
test
fimuls
lret
and
ret
ret
imul
pop
sub
xchg
rcll
and
jns
lock
daa
stos
outsb
mov
sbb
loop
push
dec
into
cmp
sti
into
xor
aaa
pop
sbb
jb
negl
imul
and
loope
inc
mov
loope
xchg
out
xchg
pop
fsubl
jecxz
ljmp
popf
out
ret
mull
mov
mov
mov
pop
jg
mov
cltd
dec
rcr
or
cs
mov
or
pushf
in
jl
ret
or
mov
fwait
adc
sar
mov
jnp
jmp
dec
cmp
sub
subb
push
cmc
push
cmc
push
xchg
sbb
shlb
and
jnp
push
mov
sbb
jg
arpl
xchg
or
dec
ret
dec
xor
das
pusha
sbb
aam
jb
out
daa
push
loopne
and
test
stc
js
sti
in
clc
jbe
or
pop
xchg
ds
daa
jb
xor
adc
icebp
mov
es
imul
sub
adc
je
adc
int
cmpsl
xor
insl
rclb
frndint
mov
rol
pop
lods
dec
pop
push
movsb
lcall
push
dec
dec
fwait
pop
or
dec
push
xorl
jbe
jo
fisubrs
xchg
mov
mov
add
jno
call
lahf
cmp
roll
rolb
pusha
clc
mov
in
or
push
mov
hlt
cmp
sbb
dec
and
je
jb
aad
test
call
jmp
cmp
inc
push
mov
js
sub
or
stos
xor
scas
cmp
inc
or
push
xchg
xor
sub
mov
adc
in
outsl
push
outsb
inc
test
popa
xlat
add
ret
int3
js
enter
in
ds
mov
pop
xor
xchg
push
and
jge
push
scas
pusha
cmp
repz
pop
cmp
fnstcw
and
pop
ret
sbb
mov
mov
adc
movsb
push
js
int3
mov
scas
gs
movsb
and
mov
and
in
loopne
hlt
push
hlt
mov
cli
mov
call
mov
out
xchg
or
push
and
les
inc
lock
in
into
into
push
test
xor
mov
pop
loope
add
lahf
push
push
or
dec
sub
lret
pop
mov
in
test
push
push
into
mov
mov
jb
and
mov
and
dec
jne
ds
test
mov
inc
or
or
sahf
jg
mov
ret
cmp
mov
jb
sub
pop
mov
rcll
bnd
or
jae
insl
test
xor
sub
xchg
xorb
dec
jne
test
dec
sbb
iret
mov
ds
das
rol
lcall
js
mov
add
jmp
shrl
dec
add
mov
fcmovb
and
fidivrs
stos
rcl
cmpsb
ret
test
push
xor
sub
repnz
or
push
xor
nop
nop
je
xchg
fists
rorb
add
adcb
sbb
int
mov
ljmp
mov
add
mov
cs
imul
sub
leave
or
push
leave
sbb
sub
push
fwait
in
ds
cmp
inc
jns
shll
rcll
xchg
dec
pop
xchg
shll
mov
adc
ja
out
out
fstpl
imull
mov
inc
add
shrl
xor
mov
push
int
arpl
cld
mov
fisubl
daa
es
xchg
mov
jo
in
mov
testb
fwait
mov
inc
iret
dec
int
xor
sub
cmp
int3
fs
push
xchg
jmp
sub
fidivrs
scas
test
push
aaa
sbb
shlb
stos
rcll
push
cmp
mov
adc
fsubl
pop
insl
xchg
dec
jmp
inc
xor
cmp
aam
lcall
adc
hlt
outsl
repnz
jecxz
rcrl
mov
insb
jb
mov
divl
nop
ds
das
das
mov
fdivr
jae
cmpsb
xor
adc
pop
in
add
mov
insl
scas
pop
in
in
inc
pop
into
sub
xor
jo
je
leave
pop
jns
cmc
popf
outsl
push
lock
pop
mov
jo
ret
insl
mov
movsl
xchg
aaa
lret
fisubrs
loope
push
imul
pop
imul
lret
fsubr
adc
in
inc
mov
mov
and
or
push
sarl
fnstsw
jp
testb
push
fsub
jle
enter
inc
adc
push
jae
push
inc
xchg
sbb
ljmp
add
push
jno
js
in
sbb
fsubrs
sbb
push
rcrl
fdivl
push
fdivl
add
aas
xor
xchg
xor
inc
dec
popa
in
test
repz
sahf
repnz
jecxz
sub
jge
jns
lret
xchg
sbb
or
cmp
popa
arpl
mov
mov
adc
xor
mov
xchg
sub
push
daa
xor
and
imul
jg
insb
pusha
add
scas
outsl
xchg
out
pop
fwait
inc
xor
mov
mov
or
popa
add
testb
cmp
pop
sbb
test
xor
or
xor
sub
subb
mov
jmp
add
xor
push
sbb
out
cmp
nop
adc
out
cltd
test
daa
or
outsl
push
mov
sub
popf
add
fsubs
aas
xchg
pop
lea
xor
rorb
push
daa
dec
jns
pop
mov
xor
or
ds
aas
mov
cmp
fadds
xor
das
mov
mov
lods
mov
lret
push
fcomip
fcomip
repz
mov
mov
daa
dec
push
stos
mov
ret
mov
ljmp
js
mov
movsl
mov
outsb
jno
mov
das
es
or
and
sbb
xchg
adc
test
arpl
jns
adc
cltd
pop
aam
xchg
std
je
pop
lcall
fcoms
and
add
cld
int3
and
repz
mov
jbe
movsb
testl
fwait
and
ficoml
mov
cmc
mov
pop
ret
push
fstl
ljmp
andl
adc
aam
add
mov
rclb
push
mov
sbbb
xor
cltd
test
add
es
rol
ret
jg
lret
js
in
lods
jmp
mov
push
scas
pop
aaa
iret
cs
pop
push
mov
add
ret
lcall
insl
sub
leave
xor
out
cmp
add
mov
movsl
jo
jge
jns
cmp
sbb
pop
aam
enter
fsubl
lods
sbb
jmp
adc
int3
xor
je
aaa
push
cmpb
and
jl
mov
cmp
mov
insb
dec
clc
cmp
popf
mov
mov
test
cmpsb
push
push
scas
cmp
jno
xor
add
push
aas
mov
xchg
lods
sbb
out
dec
jno
and
aam
inc
jno
xchg
je
cmp
sub
push
xor
jmp
sub
mov
dec
fiaddl
mov
inc
shlb
cmp
test
push
jmp
inc
mov
mov
sub
pop
sbb
dec
out
xchg
fadds
sarl
xor
xchg
and
dec
mov
lret
enter
fiaddl
and
scas
pusha
mov
rorb
inc
cmp
out
test
subb
xchg
pop
and
mov
mov
ficoms
shll
mov
jbe
adc
mov
js
shrl
mov
scas
out
std
shll
xor
xchg
fwait
loopne
cmp
mov
mov
test
adc
xor
dec
fsubs
jecxz
mov
adc
mov
or
sti
movsl
fwait
jge
adc
fsubs
add
xor
sub
sub
fisttps
push
test
push
loope
cmpsb
cmpsb
mov
arpl
pop
jno
xchg
fidivs
push
cmp
inc
subl
into
leave
je
les
mul
xchg
mov
testl
into
mov
sahf
stc
mov
scas
mov
jo
ljmp
rorl
in
sbb
pop
jg
add
mov
dec
lds
dec
das
mov
pusha
push
mov
loop
push
fbstp
adc
test
in
adc
daa
repz
dec
jmp
pop
fwait
cmp
sbb
jae
insl
sub
push
hlt
pop
mov
mov
inc
add
icebp
inc
xchg
and
rcrl
xchg
ljmp
inc
fisubrl
xor
arpl
xchg
sbb
scas
out
mov
sbb
lods
jge
pop
cmp
negb
mov
xchg
sbb
orl
clc
mov
adc
lods
fldcw
cmpsl
jb
xorl
lret
pop
lcall
aaa
aaa
or
aaa
jb
push
xchg
cmp
xchg
daa
in
testb
ficomps
outsl
sub
inc
and
mov
sub
and
push
ja,pn
std
aam
in
mov
push
loope
outsl
xor
jo
in
jb
push
xchg
push
xor
push
std
mov
jle
xlat
mov
daa
add
xor
lds
ret
cmp
dec
lods
fcoml
ficoml
dec
nop
xchg
jg
pop
lods
ja
cltd
shlb
jb
add
fstl
add
das
cmp
jne
cmpsb
pop
lahf
add
and
add
xchg
pop
push
ror
pop
xor
loop
orl
cmp
push
imul
inc
out
adc
cmp
or
push
mov
xor
jl
mov
mov
test
and
mov
filds
stos
mov
scas
std
out
incb
sub
ljmp
in
push
pushf
outsl
or
mov
adc
in
into
popf
addr16
sub
ret
arpl
rolb
test
sbbb
inc
dec
ljmp
push
add
sub
sbb
dec
push
jecxz
xor
dec
iret
frstpm(287
jne
or
pop
fnstsw
aas
jecxz
mov
fmulp
jmp
mov
cmp
ror
inc
test
cmp
adc
mov
and
add
add
test
popa
into
arpl
lahf
test
mov
pop
outsl
cmpsb
mov
loopne
xchg
and
mov
out
clc
outsl
repz
adc
notl
out
cmc
out
xchg
inc
mov
test
jno
out
mull
fimuls
pop
xchg
shll
jl
out
inc
xor
cmpsb
adc
clc
lods
mov
pop
and
add
xor
ret
adc
pop
insb
aad
sub
sbb
pop
xchg
push
ret
cs
jp
dec
cwtl
test
aad
push
cmp
ds
out
adc
ja
leave
push
lahf
lret
push
jle
iret
into
ficomps
movsl
and
push
pushf
ja
stos
push
lock
inc
inc
pop
mov
lahf
fstps
push
jbe
fldenv
dec
mov
int3
xchg
outsb
mov
int
mov
pop
ss
sbb
jae
hlt
push
mov
movsb
lcall
clc
or
inc
inc
cld
loop
lcall
imul
popf
xchg
lods
int3
in
add
iret
dec
ret
sub
sbb
into
sbb
jmp
orb
push
xchg
push
xor
loope
cmp
iret
or
into
shr
arpl
lret
lea
or
sub
pop
sub
fiaddl
imul
push
xlat
cmp
ret
icebp
xchg
cwtl
xor
out
faddl
xor
ljmp
push
es
sub
negl
pushl
imul
mov
lock
or
cmc
sbb
cmp
adc
dec
dec
cmp
cmpsl
mov
dec
aad
mov
sbb
sub
lahf
jno
loope
mov
mov
jl
adc
xchg
clc
jnp
sub
dec
mov
xchg
push
push
fstpt
lret
scas
stos
push
clc
jg
push
push
mov
aad
insb
sbb
and
in
mov
push
imul
ljmp
xor
mov
add
adc
push
inc
push
dec
cltd
xlat
fiadds
inc
iret
dec
into
jg
hlt
sahf
mov
fildll
jl
xor
jno
xchg
call
je
mov
mov
mov
out
push
cmp
out
stc
jle
xor
daa
mov
cmpsl
pop
mov
scas
orb
inc
jae
cmp
jae
pop
call
sub
js
or
cvtps2pd
xchg
rol
out
push
inc
push
mov
lock
mov
frstor
add
or
or
and
mov
dec
inc
jnp
push
jbe
adc
mov
fwait
rcll
fisubrs
imul
mov
pushf
mov
fimull
lods
int
add
inc
inc
nop
and
pop
sub
fstpl
cli
dec
xorl
pop
push
or
inc
mov
xchg
dec
in
shll
add
mov
dec
or
pop
mov
pop
mov
cmp
repnz
aad
fdivs
jl
shrl
jmp
push
cmc
stos
xchg
and
lods
mov
push
xchg
add
lahf
add
sahf
inc
int3
es
enter
repz
jmp
jbe
pop
push
insb
push
or
mov
xchg
out
aam
fwait
push
mov
or
xchg
dec
xchg
fidivrl
push
loopne
add
inc
pop
gs
inc
ret
fsubl
xchg
mov
add
out
pop
ja
xor
loope
js
std
es
inc
js
imul
mov
mov
scas
shlb
jle
repz
xchg
cwtl
dec
mov
cmp
shrb
xchg
int3
cmp
and
in
mov
mov
cld
incl
sbb
mov
push
loop
rclb
ja
push
fisubrs
cmp
out
pop
fdivrl
lcall
pop
xor
mov
adc
rorl
fcompl
xor
call
jle
fbld
cs
and
mov
cmp
test
addl
mov
mov
jmp
leave
pop
in
cmp
popa
sbb
mov
push
pop
jg
cmpsl
push
imul
sub
ljmp
pop
das
sbb
lea
jge
cmp
xorl
in
into
xchg
sbb
lret
cmp
lock
or
das
sub
xchg
into
push
gs
loopne
jg
imul
jns
into
mov
in
frstor
mov
and
push
mov
dec
or
out
ret
inc
cwtl
pop
lods
lcall
test
lock
pop
fldenv
jne
andl
sbb
les
cmp
sub
jl
dec
faddl
xchg
jnp
dec
loope
daa
nop
push
in
in
ret
and
insl
mov
and
rcrl
hlt
sub
cmp
fs
push
push
push
in
mov
lock
arpl
push
push
aam
icebp
or
mov
cli
cmp
outsl
fldl
mov
lods
push
dec
cmp
jge
jnp
sub
sub
sub
inc
cmp
aas
mov
sbb
sti
rol
decb
rcr
cmp
mov
sahf
cmp
cld
pushf
incl
dec
xchg
ss
xchg
xchg
mov
cmp
push
cmpsb
inc
inc
int3
jbe
mov
mov
adc
jmp
cwtl
pushf
cld
pop
gs
and
inc
xchg
testb
inc
or
push
push
orl
jb
inc
jbe
arpl
xchg
arpl
or
lock
cmc
cmp
sub
sub
pop
cmp
xor
and
loop
mov
cs
mov
lods
mov
lea
pop
dec
push
inc
out
movsb
mov
repnz
xor
sub
inc
sub
xlat
pop
repz
mov
scas
rcrb
loope
popf
test
add
xchg
push
or
inc
or
addl
cmp
outsl
sub
pop
mull
add
call
sahf
lds
shr
nop
and
mov
mov
sbb
mov
sbb
inc
adc
pop
jne
jmp
mov
out
mov
fwait
mov
das
mov
or
xor
mov
cmp
cmp
test
cs
push
jae
and
sbb
push
dec
cs
cmp
xchg
movsl
insb
pop
push
adc
dec
lcall
and
int3
xor
sub
mov
pushf
test
repnz
dec
push
jns
mov
out
loope
je
xor
push
cmp
dec
mov
add
add
in
aas
pop
adc
shrl
jmp
cltd
or
inc
pusha
sub
xlat
and
mov
aaa
pop
xchg
lods
rcll
stos
push
jno
aaa
dec
inc
iret
cwtl
loopne
loope
scas
mov
lock
jge
add
xchg
xchg
ficompl
xchg
push
iret
xchg
mov
int
or
fisubl
dec
inc
leave
cmc
sub
sub
xor
adc
mov
fldl
bound
xchg
dec
adc
dec
int3
lcall
sub
add
dec
inc
ret
ret
int3
into
jae
mov
fisubl
push
pop
and
add
shrl
int3
xchg
sbb
and
or
ret
je
shll
push
test
mov
shlb
jg
or
xchg
pop
sbb
out
adcb
faddl
mull
push
push
enter
sbb
mov
sbb
mov
adc
jl
push
dec
into
rcl
mov
lds
jl
les
popa
jl
fsubrl
repz
jb
sarb
call
add
push
add
lds
xchg
ret
xchg
add
leave
inc
repz
and
inc
or
pop
dec
jo
mov
fstpl
pop
jne
add
leave
xchg
aad
popa
in
jne
out
out
xor
xchg
dec
fisttpl
into
divb
das
pop
mov
cmp
clc
pop
sub
sbb
adc
cli
jecxz
hlt
push
bound
push
sbb
ljmp
pop
hlt
mov
out
arpl
imulb
mov
hlt
jp
pop
jae
mov
mov
cmp
mov
dec
jmp
and
xchg
fwait
lods
shrb
sahf
shlb
call
xchg
fs
push
xorl
xor
loop
pusha
inc
mov
xchg
std
addr16
aaa
shrb
jl
into
inc
inc
push
cmp
xchg
mov
and
es
cmp
lret
test
push
jle
push
adc
pop
sub
decl
sahf
daa
ret
dec
mov
into
lds
jge
jge
cmp
loope
mov
ds
leave
adcl
js
mov
test
mov
dec
test
dec
ret
fnstsw
imul
jne
add
push
cld
xchg
add
xor
scas
adc
sbb
mov
jne
xchg
pop
sti
adc
push
jo
inc
and
xchg
sbb
sbb
sbb
jns
add
add
sub
sbb
mul
bound
test
cwtl
imul
mov
lret
test
mov
push
mov
mov
cmp
fwait
or
lcall
fstpt
scas
sbb
mov
xchg
orb
mov
mov
fldcw
out
cmc
shlb
xchg
icebp
cmp
jg
push
into
add
add
push
push
dec
xchg
cld
sub
xchg
call
inc
push
mov
mov
shrl
mov
jnp
push
ja
lcall
cmp
push
jnp
mov
cmp
pushf
test
mov
loop
mov
inc
cli
pusha
add
xor
je
pop
es
movsb
mov
sub
out
mov
lods
aam
push
addl
sub
stos
push
out
add
lcall
sub
dec
fists
mov
and
dec
pop
jle
ja
repnz
jbe
retw
gs
mov
push
pusha
test
into
in
imul
jno
jle
push
ljmp
daa
jbe
mov
xchg
xor
data16
cwtl
and
aad
inc
cltd
sbb
dec
mov
xchg
sbb
sbb
mov
add
addb
gs
push
sbb
push
jae
or
lret
mov
sbb
insl
mov
sub
push
popf
test
subl
lock
cwtl
aas
leave
adc
add
cmpl
cli
ret
test
and
insl
cmp
mov
mov
in
inc
sbb
fs
push
test
push
mov
popf
std
movsb
test
pop
ljmp
and
gs
lret
jge
nop
xchg
adc
adc
pop
pusha
sbb
scas
mov
push
jns
insl
sti
fidivrl
mov
xchg
stc
and
popa
adc
add
sub
jo
and
sub
xor
cld
mov
aam
call
aam
iret
lods
imul
pop
add
loop
lods
sbb
mov
ret
adc
popa
push
pop
mov
sbb
popa
xchg
or
pop
ja
fsubl
inc
stc
clc
pop
ja
dec
jp
icebp
std
jns
mov
out
mov
popa
jae
shrl
insl
nop
mov
stc
movsb
ja
xchg
mulb
add
xchg
fsubl
inc
push
adc
sbb
pop
mov
pop
xor
leave
in
pop
inc
push
sbbb
test
sahf
jge
rcrl
in
mov
push
test
dec
sub
xor
std
or
fcoml
jne,pt
out
sbb
and
sbb
inc
rcl
inc
inc
sbb
push
jae
jnp
cmp
iret
add
push
inc
mov
or
jmp
push
aam
inc
inc
addr16
jecxz
add
push
andb
push
inc
frstors
xor
fstl
aas
mov
hlt
mov
xor
or
pop
mov
mov
incb
imul
mov
pop
movd
jl
sub
fistps
add
sbb
pop
xchg
mov
sbb
aaa
imul
mov
adc
jb
xchg
out
lcall
lret
xchg
add
sub
nop
jl
cmp
and
dec
mov
jmp
lods
jnp
fwait
push
ds
mov
rcpps
xchg
in
sti
pop
mov
loop
sub
cs
fcomip
icebp
dec
lods
test
and
xor
js
call
lcall
and
cwtl
add
dec
lea
stos
adc
or
scas
cmp
pop
leave
dec
sar
mov
aas
imul
lcall
dec
sbb
and
jbe
mov
outsl
jge
dec
add
out
cli
push
dec
leave
jns
or
popf
and
adc
arpl
idivl
mov
pop
or
enter
sub
test
push
xchg
jmp
pop
xchg
jge
cmpb
push
cmpsb
fcoml
cli
mov
fucom
xchg
clc
and
inc
cmp
xchg
inc
dec
ds
mov
and
push
cld
jecxz
cli
ret
inc
adc
dec
mov
ror
insb
and
push
push
pusha
mov
add
mov
js
int
jnp
jb
jnp
mov
xchg
adc
mov
es
mov
scas
test
mov
pop
sbb
mov
xor
cmp
mov
imul
dec
movsl
push
sbb
add
daa
je
jp
inc
push
es
push
test
enter
mov
fistpl
int3
cmpsb
test
js
xchg
cwtl
daa
xor
out
mov
insb
fnstsw
repz
xchg
cmp
ss
inc
mov
cmp
mov
bound
sub
xchg
sub
sbb
or
mov
xchg
shlb
and
mov
inc
aam
ret
dec
mov
lcall
push
push
imull
lods
or
push
adc
push
into
xchg
rep
pop
push
in
xchg
dec
inc
das
bound
cmp
jle
jne
push
lods
movsd
and
scas
pushf
data16
xor
dec
or
add
mov
cmpsl
sub
mov
rorb
mov
cmp
push
dec
in
mov
in
and
cmpl
dec
adc
loope
out
sahf
cmc
ljmp
pop
fistpll
lret
imul
xor
ficomps
sub
clc
push
loop
or
stos
inc
lret
inc
stos
subb
jmp
hlt
cmp
or
or
jae
jb
ds
pop
pop
dec
cmp
aad
test
adc
dec
xchg
popf
jmp
jge
xchg
sub
xlat
lret
adc
enter
pop
push
addr16
imul
cmp
loop
int
dec
test
push
js
ljmp
push
jns
inc
fisubl
fimuls
add
lcall
sbb
mov
cmc
test
sub
sbbl
jg
or
cli
adc
cmp
push
xchg
pushfw
popa
lods
into
movsl
enter
adc
fdivrp
xchg
mov
inc
lods
push
jo
xor
sub
scas
out
negl
or
repz
adcb
dec
leave
cmp
or
jb
ret
inc
or
aam
xor
icebp
out
xor
add
sub
xchg
push
sub
xchg
sbb
pop
lahf
xchg
or
outsl
in
cmp
fiadds
xor
mov
in
es
dec
test
sbb
add
cmpsb
inc
nop
test
mov
cmp
scas
cmpsb
dec
lar
out
mull
test
push
shll
jp
sbb
iret
test
int
ret
mov
pop
aas
fs
fcomip
movsb
sub
sbb
outsl
xor
mov
in
mov
out
in
lea
sbb
into
rcll
div
insb
adc
xchg
sub
lret
jne
insb
jnp
leave
fwait
mov
imul
das
imul
outsl
test
jg
les
lret
sbb
hlt
sahf
cmp
xor
stc
imul
mov
repz
jp
xor
imul
shlb
jb
mov
cmpsb
push
sub
in
sbb
dec
pop
mov
rorb
pop
addl
popa
and
and
jnp
pop
out
or
daa
lds
inc
lds
mov
lods
shlb
lock
mov
jne
add
add
add
mov
cwtl
xchg
jl
adc
enter
loope
shl
xchg
cmp
rcl
mov
cmp
cmp
test
pusha
push
js
push
inc
fcoml
or
shll
mov
xchg
add
jns
inc
mov
leave
lods
stc
mov
dec
inc
sub
repz
xchg
jne
daa
xchg
or
adc
popf
sub
sti
push
cmpl
adc
xor
mov
adc
push
imul
jnp
or
cmp
mov
scas
adc
mov
push
xor
and
popf
sbb
mov
adc
imul
mov
pop
movsl
jl
lahf
cli
mov
jbe
pop
add
stos
or
inc
cmpsl
shl
dec
lods
repz
loopne
dec
mov
adc
pop
pop
fnstsw
jmp
pop
mov
call
sbbl
out
lds
cmc
xor
inc
push
xlat
addr16
inc
pop
jb
imul
push
sub
sbbl
add
inc
lcall
dec
imul
or
xlat
inc
les
or
fldcw
jle
imul
add
shll
xchg
jmp
aam
cltd
dec
inc
loop
push
cmp
mov
call
inc
mov
add
insl
pop
push
push
adc
out
out
sbb
mov
mov
hlt
daa
mov
dec
ja
cmp
jecxz
std
aas
lock
adc
inc
jo
iret
push
adc
or
and
and
aam
and
mov
xor
repz
outsl
test
xor
stos
push
sub
sahf
addb
clc
mov
xor
xchg
adc
inc
inc
sahf
stos
or
mov
mov
adc
ss
pop
inc
adc
pop
pop
lods
into
pop
jbe
jb
sbb
aas
add
test
mov
test
sub
add
jge
mov
aas
mov
xchg
or
xor
lret
inc
aam
pushf
fwait
arpl
adcb
adc
bound
into
mov
jnp
ret
shrd
mov
mov
bound
fistpll
mov
jecxz
stc
loope
cmp
int3
mov
adc
xchg
cmp
jmp
lcall
test
jg
dec
imull
stos
lret
jecxz
cmp
invd
pop
mov
xor
jmp
push
jg
mov
aad
push
push
mov
jno
mov
sub
js
out
push
xlat
es
cmp
xor
cmp
push
pop
mov
lret
mov
lock
aam
xorl
mov
jbe
cmc
fidivrs
mov
push
mov
pop
adcb
lcall
mov
inc
test
jnp
cmpsb
mov
lods
adc
push
pop
adc
lret
xor
and
insb
nop
mulb
aad
jae
sbb
ret
bound
ret
pop
popf
inc
fcompl
call
icebp
adc
mov
data16
mov
and
ds
mov
aaa
fcoml
into
mov
outsl
imul
stc
xlat
out
pop
and
pop
push
cld
adc
ret
inc
sub
clc
sub
dec
icebp
imul
pop
out
dec
mov
dec
push
loope
paddw
dec
movsb
and
push
jb
iret
adc
pop
in
loope
push
adc
ja
out
dec
lds
xchg
lock
sarb
inc
incl
xor
lods
insl
aam
cld
rorb
decb
mov
or
imul
fbld
outsl
mov
mov
xor
jno
mov
mov
ljmp
sbb
pushf
dec
gs
imul
pop
aad
xor
sbb
pop
loope
mov
mov
mov
sub
movsb
mov
and
lods
add
and
jns
out
repnz
push
notb
hlt
inc
ss
ficoms
sub
arpl
lock
jb
insl
xchg
dec
test
popa
pushf
out
sub
gs
test
mov
mov
sbb
push
xchg
mov
aam
repnz
add
or
insb
nop
fdivrs
sarl
int3
dec
inc
pop
bound
or
outsb
adc
sbb
push
mov
xor
xorl
movsl
stos
aas
xchg
jecxz
fmull
pop
mov
jae
enter
jno
cltd
sub
jecxz
xor
icebp
cld
jns
xchg
jl
jnp
mov
sub
sbb
jnp
popa
jbe
xlat
sbb
es
repz
fdivrl
or
cmp
testb
inc
sub
mov
mov
pop
das
idivb
xchg
sbb
jecxz
pop
or
mov
mov
pushf
cmp
pop
lds
mov
stos
push
jo
adc
cmc
inc
inc
pop
fcmove
sub
mov
in
int
orl
add
dec
mov
pop
je
mov
and
mov
test
shll
dec
call
mov
lock
sbb
xchg
loopne
and
xorl
pusha
bound
inc
subb
jp
and
mov
sahf
test
mov
inc
mov
adcb
sti
fistpl
inc
cmp
divl
push
adc
ja
fcom
adc
shll
sub
xchg
xor
aam
in
xlat
aam
imul
sar
push
xchg
pop
pop
cmp
inc
test
lahf
dec
rcll
sbb
in
fldenv
arpl
sbb
add
cmpsl
movntq
out
dec
mov
pop
neg
dec
hlt
push
lea
sarb
iret
rcll
pop
insl
sti
repnz
pop
dec
fmul
ret
mov
pusha
lahf
les
sbb
sub
mov
sub
pop
dec
pushf
pop
mov
lret
lcall
movlhps
sahf
xchg
jbe
mov
imul
cmp
outsl
movsl
cwtl
mov
inc
movsl
and
mov
mov
pop
int3
movsl
addr16
xorl
dec
sub
xchg
adcb
into
mov
xchg
xor
mov
out
cmp
mov
call
test
adc
aad
lds
lods
movsb
fnstcw
dec
cli
jge
sub
dec
rcrl
and
clc
xchg
push
xor
mov
fdiv
xor
in
fs
or
xchg
clc
inc
icebp
jg
sbb
inc
shl
pop
popa
add
clc
xchg
out
push
insb
xor
stos
push
mov
and
push
push
pop
sbb
mov
popf
xorl
outsl
fdivrs
cmp
or
pop
adc
fbld
or
mov
mov
cmp
sub
sbb
xchg
and
xchg
xor
insl
add
jno
fnsave
inc
hlt
mull
xchg
shlb
pop
hlt
inc
call
rclb
push
sbb
xor
and
inc
jl
jo
and
mov
out
into
ljmp
ljmp
adc
mov
jp
mov
xchg
shr
rclb
mov
out
add
pop
bound
and
adc
xor
fists
subb
lret
cs
testb
daa
aaa
jne
insb
mov
leave
cmp
fisttps
ss
fs
nop
dec
pop
and
xor
add
push
sbb
js
adc
add
fldl
sbb
push
mov
jmp
or
cltd
inc
xor
pusha
mov
sti
inc
xchg
test
repnz
xor
inc
addr16
dec
repz
repnz
cmp
push
and
jmp
xor
les
mov
pop
and
outsl
iret
cmp
and
repnz
mov
and
or
or
lds
cmp
mov
cmp
push
stos
fldt
mov
mov
adc
test
orb
pop
fisubl
out
ljmp
cmp
stc
roll
sti
xor
mov
ret
mov
mov
add
pusha
aad
filds
xor
fisttpll
mov
sbb
addb
add
add
mov
stc
pop
sahf
addl
jo
aas
testl
push
mov
cmp
push
out
jbe
test
outsl
shrb
jl
adc
mov
xlat
sbb
and
into
int3
in
cs
cmp
adc
pop
rol
push
mov
xchg
fwait
mov
mov
das
test
mov
adcb
stos
leave
call
sub
jp
mov
cmpsl
sbb
pop
xor
jae
sbb
rorb
push
sbb
loope
dec
mov
call
dec
mov
out
inc
ds
mov
loop
and
mov
cli
cmc
xchg
push
mov
xor
inc
incb
xchg
push
or
int3
add
mov
pushf
xchg
xchg
inc
adc
xchg
adc
arpl
mov
ficompl
pop
sub
push
es
pop
in
out
push
movsb
addr16
and
ret
adc
pop
sbb
aas
sbb
int
mov
lcall
iret
pop
or
xlat
xchg
jp
out
cwtl
sub
lock
andl
fiadds
repz
iret
mov
pop
mov
pusha
mov
pop
xlat
xor
lock
mov
xlat
jp
xor
dec
in
fstps
xchg
ds
sub
or
aad
mov
loop
sbb
cmp
mov
ljmp
andl
mov
sub
adc
lods
ret
push
cltd
jns
or
push
xlat
fsubrl
icebp
fsts
pop
push
sti
adc
js
notb
push
std
or
sbb
shrl
adc
xchg
or
and
aam
or
sarl
gs
jg
rcrl
loope
shrb
bswap
fwait
or
test
and
jp
pop
add
sbb
mov
bound
sbb
inc
or
cmp
sarl
jno
pop
mov
bound
loop
fldcw
orl
in
daa
testb
bound
out
in
int
fmul
fisubrs
jle
scas
std
ret
xor
gs
roll
je
inc
mov
jnp
sub
cmpsl
sbb
insl
icebp
fwait
ret
cltd
andl
mov
pop
dec
out
mov
pop
bt
sbb
sub
or
inc
adc
and
notb
jae
stos
adcl
mov
enter
rol
rorb
jnp
jge
rolb
pop
or
shl
mov
lret
sti
pop
leave
mov
dec
jg
xchg
jo
xchg
xchg
inc
lret
aaa
fistpl
lahf
sub
pop
in
imul
fdivr
hlt
fidivrl
fadds
leave
cmp
loop
dec
clc
jmp
dec
dec
pop
dec
mov
lret
int3
xchg
dec
pop
cmp
mov
sub
ljmp
lret
cmpsl
inc
into
jmp
sbb
ljmp
push
mov
out
stos
shl
fdivs
mov
jg
mov
aaa
outsl
adc
sbb
push
cmc
push
inc
fcomps
aaa
xchg
leave
ret
push
out
or
aad
add
mov
push
and
add
test
sub
arpl
out
cmp
sub
jns
bound
xchg
pop
jg
and
xor
mov
xchg
enter
stos
or
pop
push
cs
gs
insl
adc
test
stos
jp
dec
daa
pusha
jb
sbb
or
mov
xchg
cld
pop
in
mov
mov
sbb
cltd
mov
icebp
cwtl
jns
and
das
or
lock
push
movsb
mov
aaa
mov
dec
int3
add
imul
jle
xchg
iret
xor
mov
cmc
shll
sub
inc
fldenv
push
push
arpl
mov
icebp
stos
pop
sbb
xlat
insl
stc
ja
lock
xor
mov
mov
out
cmpsl
out
adc
push
jmp
iret
jb
fildl
xor
mov
imul
xorb
cmp
movsl
aad
sub
test
mov
xchg
push
cmc
mov
ret
xchg
xor
dec
js
decb
adc
sahf
popf
dec
out
and
lods
or
negb
lea
sub
sahf
stos
in
jp
or
xchg
inc
add
enter
pop
jb
roll
pop
cld
fnstcw
ret
cli
in
cltd
mov
jmp
ja
xchg
scas
or
dec
adc
sub
mov
in
cltd
cmc
out
pop
pop
jnp
stos
cmp
fists
hlt
mov
test
mov
and
ror
arpl
add
mov
sbb
ror
addl
cmpsl
mov
fisubrs
rcll
jle
sub
mov
ficoms
cmpsb
lcall
push
aad
fisttps
scas
inc
sbb
aaa
flds
aam
jnp
out
and
nop
negl
adc
fucomi
int
sbb
in
xchg
aas
dec
mov
iret
inc
test
jae
adc
test
sub
fwait
dec
enter
cltd
addr16
sti
ljmp
rclb
in
cmp
xchg
sti
and
or
sbb
out
gs
in
mov
add
push
adc
add
push
jbe
jnp
push
in
loopne
jo
sbb
das
mov
dec
test
popa
std
stos
imul
test
mov
mov
adc
inc
filds
pop
or
clc
out
cli
jns
and
out
jae
and
add
out
cmp
in
cmp
and
mov
or
sub
andb
lods
push
jg
lods
ss
out
lahf
rorl
push
jle
push
dec
rclb
lock
push
int3
sahf
xor
mov
repnz
dec
stos
sub
pushf
cmp
hlt
enter
test
in
outsl
fwait
pusha
xchg
scas
outsb
jecxz
fucomip
or
in
jbe
outsb
rcrl
stos
push
mov
clc
adc
pop
in
dec
out
dec
ja
pop
mov
pop
imul
mov
push
pop
xor
sahf
and
imul
add
adc
dec
sbb
popf
adc
movsb
dec
xchg
pushf
das
icebp
sbb
jp
jbe
jne
mov
aad
out
xchg
xlat
sbbl
sbb
je
pop
jno
add
pop
mov
repnz
mov
dec
pushf
lods
jmp
fdivrs
jns
jns
stos
pop
sbb
dec
sub
clc
int3
cs
cltd
jnp
push
aas
std
dec
and
call
push
fst
jge
xchg
in
cmp
negb
push
mov
sub
popf
xor
scas
out
inc
dec
test
pop
popf
outsl
ror
mov
cmp
jo
lahf
add
sub
cmp
add
fldcw
int3
cli
shlb
ja
repnz
or
sbb
pop
test
add
jne
fldenv
or
pop
sbb
or
outsl
sub
push
mov
jne
out
subb
cmc
push
test
cmp
pop
push
sub
loope
ja
in
or
cmp
ret
and
cld
push
mov
jae
and
test
dec
push
ds
add
lods
mov
jmp
jnp
in
fildl
sbb
pop
fs
fimuls
ss
pop
xchg
sub
mov
cmp
cmc
sbb
loop
add
sbb
insl
pop
scas
das
leave
xchg
lock
cs
adc
mov
outsb
mov
add
add
mov
lea
cmp
xchg
std
xchg
es
or
xchg
cmp
pop
mov
push
fsubl
and
mov
std
into
pop
xor
mov
pop
mov
mov
lods
jns
push
xchg
loop
inc
add
xor
xlat
mov
out
mov
jp
cmpsb
rorb
jo
ljmp
xor
cwtl
cmc
inc
test
adc
jb
xor
inc
add
sub
imul
int3
repz
shrl
andb
push
pushf
scas
loope
sub
inc
ret
pop
scas
jno
xor
or
je
loop
mov
leave
test
pop
cld
pop
rcr
pusha
aaa
test
shll
inc
cmp
cltd
mov
xor
popf
mov
fmulp
dec
dec
or
push
cmc
cmpsb
sarl
into
pop
pop
nop
andb
cli
xchg
sbb
test
out
mov
out
paddq
jbe
adc
rcrb
dec
popa
pop
fidivrs
mov
imul
adcl
fnsave
mov
inc
fsubrp
jo
cli
sti
xor
shlb
cwtl
outsb
mov
ret
js
xor
lods
jnp
cmpsl
sub
out
aad
cmp
fcomps
sbb
fimuls
lods
mov
std
icebp
add
imul
or
adc
and
movsb
mov
pop
sub
out
push
mov
out
int3
cmp
in
shll
testb
stos
dec
int3
imul
test
jne
fmul
jg
in
sahf
jl
xchg
dec
fbld
insl
fdivrs
push
mov
mov
mov
push
out
push
sub
loope
mov
out
inc
pop
mov
notl
jecxz
je
sub
dec
add
ljmp
push
test
push
sub
xchg
xor
fdiv
fidivrl
loop
sbbl
enter
dec
data16
mov
add
xlat
aaa
mov
pusha
jbe
ljmp
popf
sbb
subb
out
lcall
or
or
shr
lods
push
inc
arpl
sub
sub
movl
or
popf
jle
aaa
push
daa
cmp
push
sbb
inc
push
outsl
inc
fstps
imul
cmp
jb
mov
adc
pop
push
icebp
iret
cmpsb
xchg
add
adcl
or
test
sbb
inc
pop
mov
inc
jle
imul
cwtl
outsl
lret
add
sti
arpl
mul
movsl
jp
dec
mov
xchg
cmp
xor
or
sub
iret
sub
test
sub
iret
mov
xor
pop
jmp
lret
xchg
test
les
lea
sbb
dec
cwtl
ficompl
hlt
test
mov
cmp
push
and
xchg
aad
xchg
jne
mov
mov
out
incl
and
pop
push
ficompl
stc
xchg
fsubrl
jbe
sub
jmp
scas
and
jbe
fdiv
outsl
push
or
and
pop
nop
test
jp
push
xor
fildl
push
mov
cmp
mov
fwait
lcall
push
lret
jnp
push
daa
push
add
jae
out
cltd
or
push
enter
in
pop
sbb
cmpsb
push
push
or
pushf
rcrl
adc
clc
and
imul
gs
mov
sub
sub
sahf
push
in
faddl
and
leave
inc
and
lods
out
stos
adc
in
fisttpl
push
into
jns
stos
inc
cli
je
mov
and
and
xchg
movsb
dec
push
ja
leave
xchg
into
enter
pop
push
dec
mov
xchg
mov
or
mov
mov
or
xchg
and
cmp
mov
pushf
and
pminub
push
ljmp
aad
add
inc
aaa
cmpsb
adc
pop
pop
sub
movsl
sub
jbe
mov
cmpsb
or
xchg
mov
test
stos
nop
pop
push
xchg
dec
xchg
in
jno
mov
movsl
scas
lods
outsl
lock
call
sub
xchg
movsb
lods
mov
bound
lods
add
mov
push
dec
dec
aaa
jmp
rcrb
mov
pop
push
adc
movl
insb
mov
fisttpll
fsubrs
mov
push
push
lcall
sbb
pop
enter
sub
scas
sub
sti
adc
xor
test
imul
inc
sub
enter
frstpm(287
jp
popa
dec
jae
jns
cs
rorb
xor
jg
enter
pop
inc
xchg
inc
sbb
cmp
or
xchg
fadd
lods
or
aad
test
rcl
mov
add
and
cwtl
push
push
cltd
xchg
push
push
enter
dec
mov
mov
mov
inc
pop
lahf
shlb
lock
outsb
sbb
outsb
add
aad
data16
sahf
dec
cmp
out
pusha
cmp
sub
pop
cmp
inc
mov
hlt
lods
sbb
push
mov
fisttpl
shlb
pop
inc
cmpsb
popa
push
inc
dec
sbb
movsb
or
arpl
sbbl
adc
inc
outsb
xor
adc
pushf
or
mov
pop
adc
std
xchg
push
nop
cmp
movsb
mov
and
out
sub
out
ror
ss
rcrb
es
rcrb
lret
nop
mov
jns
jo
adc
ficompl
push
and
dec
dec
outsb
sbbl
xchg
nop
add
jae
sbb
cwtl
mov
add
mov
mov
das
sbb
int
in
xor
addr16
add
movsl
pop
inc
mov
sbb
fidivl
pop
dec
lret
cmp
fwait
push
bound
movsl
les
push
mov
mov
xchg
int
fcomps
das
xor
scas
in
jns
and
imul
inc
cmp
xor
push
scas
mov
push
mov
lcall
pop
dec
jmp
arpl
sbb
iret
insl
jge
enter
sbb
sub
shlb
cmp
pop
mov
cmp
inc
dec
xor
push
fwait
xchg
cwtl
insl
movsl
push
and
add
push
sahf
mov
mov
mov
mov
outsb
arpl
ret
or
ss
enter
ljmp
or
xchg
xor
dec
push
mov
cltd
lret
dec
xchg
cmp
dec
jb
fcmovnbe
pop
lahf
loope
test
pop
pop
shl
insl
xchg
mov
mov
loop
test
pop
push
push
lods
cld
fucomip
adc
es
cmp
repz
mov
pop
mov
jb
mov
or
nop
pop
jno
or
push
rclb
sbb
out
pusha
jbe
dec
ret
loopne
sub
xorl
push
jg
dec
jl
and
shl
sub
mov
fwait
adc
jmp
andl
dec
xchg
mov
mov
into
inc
push
cwtl
push
and
stos
arpl
and
push
and
mov
addl
xor
mov
repnz
add
adc
js
sbb
xor
lea
out
jmp
cltd
mov
repnz
cmp
stos
mov
and
std
popa
lds
out
jge
jg
mov
xor
test
leave
xchg
in
loop
push
scas
push
pop
mov
ja
mov
mov
ds
jmp
cmp
ja
fmull
jb
cmpsb
adc
mov
stos
outsl
sbb
mov
jbe
js
xchg
push
cwtl
adc
mov
loop
jnp
mov
jg
add
mov
lcall
cmp
imul
push
addr16
push
xchg
outsl
les
repnz
scas
mov
jae
pushf
jmp
fs
andl
test
arpl
mov
dec
pop
jecxz
xor
dec
ror
or
inc
sub
insl
stc
pop
arpl
int3
outsb
push
jp
push
inc
jns
ret
mov
iret
ljmp
ret
popl
add
fcomi
iret
jecxz
dec
pop
or
scas
or
xchg
pop
and
mov
push
in
fldl
mov
fcmove
ret
pop
daa
and
dec
call
in
cmpsb
push
cld
jns
mov
or
repnz
sbb
ja
add
repz
push
ja
sti
outsl
sarb
imul
mov
int3
mov
andl
mov
cwtl
xor
dec
je
cmp
mov
dec
fisubrs
idiv
jnp
lods
lods
mov
test
sbb
add
mov
imul
into
pop
outsl
in
rcrb
mov
sub
xchg
or
cld
sbbb
outsb
in
inc
mov
or
jne
cmp
outsb
and
ss
aam
push
pusha
pop
adc
xchg
fsubrl
stos
in
push
addb
scas
jo
loope,pn
es
lock
pop
fwait
icebp
xor
sahf
push
mov
out
xchg
mov
roll
mov
mov
cmp
in
add
cwtl
mov
aad
fs
and
lods
popf
fadd
shlb
mov
push
sarb
cmp
xor
sub
rcrb
pusha
insl
pop
xchg
push
mov
push
adc
mov
loop
adc
sbb
sub
inc
cmp
mov
mov
out
mov
mov
dec
addr16
add
in
out
and
xor
lret
jno
push
pop
in
jmp
mov
mov
pop
pusha
xchg
js
xor
and
aad
mov
in
pop
fucomi
leave
push
jnp
mov
mov
xor
pop
bound
adcb
neg
int
xchg
jp
mov
and
push
int3
push
sahf
mov
scas
push
fldenv
sub
cwtl
arpl
shl
cmc
pushf
jnp
cmc
shlb
or
call
adcl
mov
loope
movsl
divb
dec
aad
lock
and
dec
pop
sahf
cmc
cwtl
inc
mov
add
out
mov
clc
stos
cmp
rclb
push
cld
sub
adc
inc
enter
sub
divb
scas
sbb
dec
cld
scas
xlat
pop
push
and
std
fiadds
pushf
pop
inc
sub
fisubs
push
and
and
sbb
jl,pn
xchg
xor
inc
test
xchg
sbb
hlt
inc
jmp
xchg
mov
scas
xchg
pop
bound
aaa
and
push
pop
xchg
push
or
nop
punpckhwd
jae
lea
adc
imul
pusha
xlat
add
das
dec
sub
adc
clc
icebp
push
dec
in
push
xor
jecxz,pt
adc
loop
inc
fadd
ja
adc
push
add
and
data16
sbb
add
fldl
les
int
mov
mov
test
sbb
jo
lock
fwait
inc
or
shll
dec
mov
clc
jl
dec
dec
push
mov
inc
jb
pop
aaa
lods
sub
mov
nop
adc
adc
cwtl
in
adc
mov
fdivrl
mov
xchg
mov
and
adc
cs
push
xchg
and
and
xchg
adc
mov
fadds
jns
sub
inc
push
out
dec
in
ss
aaa
jae
pushf
aad
mov
and
fimuls
lahf
xor
sub
jge
jg
int
cmp
sbb
pop
shrl
call
loop
popf
dec
gs
cmpb
in
cld
fs
enter
add
xchg
cmpsb
mov
les
aas
sub
mov
jle
int3
and
stos
cmp
stos
mov
lret
pop
pop
push
cltd
add
xchg
mov
xor
fidivrl
mov
cmp
cmp
sti
or
adc
loope
xchg
sub
or
in
out
sub
test
add
mov
stos
in
pop
inc
mov
ss
xor
addl
cmp
cli
add
or
jp
insb
push
push
dec
outsb
icebp
clc
sub
fistpll
mov
lahf
inc
push
test
jne
cwtl
fucom
adc
repnz
js
aas
fsubl
xchg
jb
jne
cmp
pop
add
fcmovb
popa
scas
mov
adc
out
cs
into
or
stos
popl
aad
jns
in
outsl
call
lcall
xchg
inc
push
std
fisttps
cwtl
scas
cmp
sub
stc
outsb
push
mov
mov
aad
int3
test
mov
and
lock
cmp
mov
lds
and
jge
and
dec
insb
pop
pop
xchg
push
adc
insb
jno
out
push
mov
or
mov
push
cmp
mov
outsb
pop
push
or
mov
subl
lcall
ror
mov
push
fisttpll
arpl
push
lds
mov
mov
scas
pop
inc
or
push
pop
pop
aaa
sbb
mov
js
lahf
insb
lret
mov
dec
jbe
mov
mov
and
mov
ficoml
movb
mov
aad
mov
mov
mov
sub
pop
es
xchg
and
cmp
mov
in
cmovno
ljmp
lret
push
adc
subb
push
sbb
cmc
pop
mov
mov
inc
lahf
scas
divl
sbb
cs
in
jb
mov
or
xchg
cmp
xor
jmp
stos
jg
xchg
icebp
cltd
inc
add
je
cmpsl
xchg
cwtl
dec
les
enter
call
out
pop
xor
bound
or
xchg
das
sbb
fsubl
mov
adc
cmpl
and
pop
dec
roll
push
popf
imul
sbb
into
inc
loopne
pop
xlat
insb
aaa
cmp
dec
aaa
push
lret
fsubl
xchg
inc
mov
loope
sub
addl
mov
js
jne
mov
lock
xchg
jle
shlb
popa
ds
xor
xchg
pop
jbe
push
les
rcrb
jb
lea
add
sub
into
out
jns
dec
loopne
cmp
and
repnz
mov
ret
fwait
movsl
mov
jb
lds
or
cmp
xor
aam
cs
mov
mov
jge
nop
std
sub
int
jnp
xor
call
cltd
pusha
inc
mov
out
mov
inc
mov
dec
out
popa
mov
pop
cli
mov
jecxz
adc
lahf
fdivrs
mov
cmc
or
rcl
clc
enterw
cmp
call
mov
mov
in
outsb
sbbl
pop
inc
sub
jmp
clc
loopne
mov
dec
aaa
idivb
cmp
push
addr16
cmc
dec
jns
push
pop
jne
dec
inc
mov
cmpsl
testl
int3
or
adc
sbb
out
mov
movsl
mov
iret
in
in
test
cli
jnp
mov
cld
fldl
pop
out
mov
jns
mov
iret
cmpb
inc
sbb
aam
cmpsl
cmp
jecxz
sbbb
pop
repz
push
jge
sbb
loop
dec
aam
insl
xor
xor
andb
xor
lods
shl
push
pop
or
inc
mov
adc
jb
jl
sti
ds
decl
les
pop
in
sub
and
aas
adc
ficompl
inc
cmp
mov
inc
jecxz
scas
into
lea
rcll
leave
jmp
lret
mov
or
or
pop
cld
xor
aam
sbb
in
in
je
pop
push
mov
out
jno
xor
adc
loope
fldt
xchg
stos
je
pop
adc
rolb
mov
jne
mulb
dec
jne
insb
xchg
or
sbbb
xor
jo
outsl
fnstenv
nop
idivb
cmc
pop
mov
movsl
sub
movsl
push
jnp
roll
and
pop
lcall
push
shr
mov
push
jge
xor
fstp
xchg
inc
inc
cltd
aaa
push
xchg
sub
test
jle
jl
dec
clc
push
mov
test
lret
loop
inc
inc
es
mov
mov
fisttpl
in
xchg
pop
mov
or
add
push
and
push
xlat
mulb
cmp
pushf
xlat
scas
mov
dec
mov
in
scas
and
fstl
shrb
mov
sub
pop
lahf
xor
add
xchg
mov
outsl
scas
xchg
test
xchg
pop
mov
pop
sbb
rolb
mov
ds
enter
into
mov
or
int3
sub
mov
fcomip
addr16
aaa
std
and
inc
movsl
mov
dec
push
add
jg
insl
mov
pop
imul
push
sub
add
jmp
lea
sahf
jg
cli
dec
mov
add
mov
pop
sub
aas
imul
xchg
and
lds
or
push
cwtl
and
lcall
cmp
push
das
lret
or
cmp
or
sub
xor
fcmovbe
adc
mov
dec
push
addl
fwait
jg
mov
int
rcr
bound
inc
sbb
or
cltd
jbe
cmp
push
dec
xchg
mov
mov
and
dec
jecxz
mov
mov
and
push
repnz
iret
mov
cwtl
xchg
add
into
add
outsl
pusha
inc
divb
je
mov
cmp
je
leave
jge
movsl
push
jp
sarb
test
mov
inc
sbb
mov
cs
push
ret
out
xor
push
mov
add
testl
imul
push
xor
and
mov
insl
xor
sti
in
mov
inc
fs
mov
jae
xor
sbb
dec
fs
cs
sbb
jo
inc
or
xchg
in
cli
jbe
xor
gs
nop
stos
shlb
test
inc
mov
pusha
dec
push
test
pop
cli
loopne
ror
cmp
jg
push
add
movsl
mov
addb
push
jp
cmp
jo
jno
mov
nop
push
addr16
mov
repz
and
mov
clc
cmp
div
mov
mov
rcrb
mov
pushf
loope
pushf
leave
es
mov
xchg
shl
pop
push
xorb
mov
xchg
jmp
shl
xchg
test
sub
sbb
fnsave
jmp
pop
cmpsb
dec
mov
ficoml
sbb
incb
sbb
inc
fnstcw
push
mov
xorb
lcall
mov
insb
jmp
repz
shlb
ljmp
rcrb
dec
fs
sbb
jnp
push
mov
xchg
fwait
cmp
xchg
testb
sub
adc
gs
mov
add
js
ret
pop
adcb
jp
movsb
in
jbe
xor
and
cmp
mov
jae
xorb
cmp
pop
xor
adc
push
cld
jp
in
push
rorb
scas
addr16
stos
arpl
ret
lret
xor
pop
mov
jo
lcall
and
sbb
faddl
inc
sahf
pusha
testb
xchg
mov
aas
inc
divb
xchg
cltd
out
jae
call
dec
and
add
adc
cld
xchg
xchg
lds
test
dec
push
fdiv
and
cmp
sub
mov
push
cmpsl
pop
pusha
and
cmp
aad
fidivs
jecxz
and
mov
addb
inc
outsl
mov
mov
xor
mov
adc
pop
lcall
mov
loopne
and
inc
mov
xchg
xchg
push
das
pop
mov
dec
scas
js
and
pop
xchg
jge
push
cmp
inc
out
push
inc
mov
scas
cs
push
dec
pop
shl
fsub
in
mov
pop
pop
inc
mov
push
ja
and
inc
sahf
cli
xchg
mov
push
test
or
mov
hlt
xor
mov
rorb
popa
out
cmpb
in
sbb
movsl
xchg
fcompl
pop
xor
cmc
adc
mov
adcl
xchg
xlat
sahf
aas
pop
pop
rcrl
js
add
inc
es
cmp
adc
inc
or
mov
adc
aad
or
inc
int
pop
scas
dec
cltd
aas
cs
mov
sbb
mov
dec
sub
add
push
lock
or
or
xor
in
fsubrl
pop
mov
movsl
push
movsb
jmp
cvtpi2ps
lret
push
jp
push
mov
and
lahf
push
jmp
bound
nop
int
ret
pop
stos
xor
push
loopne
out
or
and
pop
aas
mov
inc
sub
lahf
push
push
scas
loopne
push
dec
pop
out
push
stos
lret
inc
cmp
or
mov
xor
jb
xchg
int3
sbbl
sahf
mov
add
sub
in
mov
and
sub
mov
mov
dec
xchg
adc
ror
scas
push
outsb
repnz
push
or
xchg
or
sub
dec
icebp
clc
mov
dec
jne
xlat
sub
mov
dec
lcall
pop
jae
rep
bound
sbb
mov
push
mov
pop
fldl
aam
lret
fidivs
jmp
popa
sahf
dec
loope
test
int3
adc
inc
pop
inc
and
stos
gs
inc
scas
mov
cli
cld
jge
inc
fcoms
jbe
bound
rcr
in
aad
xchg
xlat
adc
push
mov
mov
movsb
adc
inc
aas
and
fsubs
mov
mov
dec
push
std
test
mov
cs
xchg
in
test
shlb
ljmp
adc
imul
sbb
decl
cmp
lds
push
xor
push
push
fimull
lods
and
scas
pusha
pop
orl
cs
aaa
pop
jg
sub
jns
outsl
cmp
fists
pop
dec
sub
xor
adc
push
pop
sbb
jecxz
fadd
jno
push
aas
dec
push
outsl
addr16
or
mov
stos
pop
ficoms
fcomps
repnz
push
sbb
dec
cltd
mov
nop
jae
dec
insb
push
movsl
mov
imul
push
dec
icebp
sbb
xor
mov
leave
push
jl
sub
mov
ja
mov
fcmovnb
aam
mov
aam
imul
movsb
and
jecxz
scas
dec
add
push
stos
aas
mov
push
cmp
test
mov
shr
adc
lcall
inc
sbb
pusha
fstpl
push
jbe
xor
xchg
xor
loope
adc
out
mov
hlt
cmp
cli
subl
inc
je
stc
xchg
mov
or
stc
jnp
xchg
fimull
nop
jle
jl
popf
xchg
lds
push
stos
jbe
cld
iret
push
inc
fsubrs
and
xor
mov
in
mov
push
testl
jnp
mov
xchg
fldl
cwtl
cmpsb
dec
xor
lods
fisttpl
mov
xlat
adc
or
shlb
xchg
push
repnz
data16
popa
imul
cmp
fs
cld
mov
xlat
push
cli
enter
jo
das
push
hlt
xor
and
pop
mov
push
call
fldenv
in
lcall
mov
shlb
xor
or
mov
shrb
dec
jmp
addr16
cs
inc
push
rcrl
fnstenv
xor
push
mov
ja
mov
or
xchg
cmpb
std
xor
sub
aaa
adc
jns
or
sbb
sbb
test
test
push
aas
adc
push
insb
or
xlat
ficompl
cmp
loop
cld
stc
and
mov
jle
push
push
int3
outsl
xor
fstps
adc
jbe
push
test
cmp
cmp
lahf
cmpsl
insb
andl
mov
mov
push
daa
mov
or
fsubr
sbb
popf
aaa
cmp
mov
inc
jmp
fs
inc
mov
push
jecxz
hlt
add
mov
adc
sbb
fldl
in
dec
outsl
pop
outsl
and
insb
pop
pop
adc
sbb
in
jmp
outsb
adc
and
adc
xor
std
cmpsl
in
and
mov
hlt
insb
sub
dec
in
xchg
mov
in
lods
jb
incl
les
dec
scas
fldlg2
cmpsb
pop
xor
and
mov
mov
add
inc
lret
jge
outsl
xchg
cmp
sbb
push
dec
sub
mov
cmp
sub
inc
fst
jbe
mov
pushf
call
popa
add
int3
cmp
cmp
popf
pop
and
jnp
daa
movsb
mov
or
pop
outsb
sub
shlb
data16
int3
loope
popf
roll
add
inc
nop
and
subb
les
aaa
mov
sarb
add
nop
test
lret
add
adc
rcll
into
and
mov
pop
or
cmp
push
add
inc
push
or
ret
mov
es
scas
out
test
daa
scas
xrelease
insb
in
dec
jns
mov
fnstsw
mov
pop
dec
pop
out
cld
ret
inc
popf
out
xor
std
fstpl
xlat
icebp
in
xor
nop
cmp
test
sbb
jl
mov
je
add
movsl
insb
leave
stos
ja
push
out
test
push
lods
sub
sub
lods
imul
xor
andb
cmp
aam
fcomp
mov
gs
xlat
or
jmp
jp
cmpsb
adc
jg
sbb
outsb
add
hlt
out
pushf
int3
adc
lock
lea
or
fs
testb
cmp
pop
shll
daa
mulb
aaa
add
xor
or
pop
pop
jle
push
mov
sbb
xorb
add
xchg
jno
movsb
xlat
bound
xchg
in
jmp
sub
stc
cmpsb
es
mov
or
xor
sub
cmpsb
ljmp
xchg
inc
adcl
or
xor
les
imull
pop
cmp
shll
or
lods
in
mov
sub
dec
stos
movsb
sbb
xchg
push
dec
xchg
outsb
orb
inc
into
arpl
lret
addl
stos
aas
and
scas
fmull
jecxz
lcall
inc
scas
or
pop
inc
jb
sbb
push
adc
cld
xor
pop
mov
jecxz
mov
pop
jle
mov
mov
or
sub
mov
cltd
xor
adc
test
movsl
mov
shll
adc
pop
adc
jl
or
xor
sub
imul
push
jle
add
and
cli
mov
or
mov
mov
add
push
icebp
aam
sub
movb
insl
mov
shll
bound
es
cmpsl
pop
cs
jp,pt
call
roll
shrl
push
mov
jnp
bound
fbld
push
dec
out
push
ja
mov
out
clc
ljmp
mov
imul
es
or
jecxz
lds
xor
pop
pusha
sub
aad
cwtl
push
or
loope
push
pop
lods
mov
out
xor
push
mov
mov
push
sub
xor
and
inc
and
hlt
fimuls
push
push
jge
xchg
mov
adc
fsub
lcall
and
popa
popl
sti
leave
in
fildll
xchg
std
inc
jge
pop
lahf
imul
pop
cltd
sbb
sub
fcoms
in
lods
pop
repz
out
push
mov
shlb
scas
gs
mov
add
inc
jnp
loope
jge
fdivs
jle
call
sub
push
pop
inc
or
lea
test
sub
mov
mov
xchg
dec
les
fistl
adc
xor
lea
pop
into
test
jno
mov
lahf
jne
adc
xor
loope
inc
push
xorl
jns
or
fdivs
dec
jmp
jmp
pop
inc
data16
rorb
or
xor
lret
mov
mov
dec
dec
jg
push
mov
out
sub
ret
out
cmc
jge
ret
std
xor
xlat
fidivrs
mov
xchg
add
nop
in
fstl
pop
xor
jno
mov
or
xchg
and
inc
ja
sysenter
dec
xchg
addl
xorb
xor
pop
mov
or
ja
aam
mov
mov
xchg
repz
xchg
repz
repnz
adc
sub
lahf
add
dec
int3
outsb
fdivrp
push
mov
sub
lock
inc
mov
xchg
add
scas
push
popl
pop
fistpll
bound
insb
sti
fwait
sbb
inc
insb
mov
in
mov
dec
fsubs
sub
iret
add
call
pop
scas
cmpsl
add
jbe
and
fwait
cltd
jp
push
jns
addr16
xchg
mov
or
pop
mov
add
mov
mov
push
cmc
push
xchg
ret
subl
or
cmp
cld
inc
jae
mulb
or
push
test
sub
inc
aam
into
jl
xor
pop
push
sub
mov
outsb
rorb
lods
ljmp
xchg
jne
mov
pop
loopne
ss
jp
push
ss
call
push
enter
pop
mov
lcall
xchg
fisubrs
in
add
sub
and
mov
movsb
adc
dec
mov
push
popf
hlt
iret
mov
call
pop
lahf
mov
or
xor
aad
mov
pusha
sub
out
xchg
ret
mov
incb
dec
addl
xchg
push
je
lcall
adc
mov
int
lret
xchg
sub
insb
js
cmpsb
call
std
dec
add
ret
aam
les
fcmove
scas
and
cmp
or
cwtl
pop
cmpsl
sub
lods
dec
jae
pushf
popf
in
adc
fcmovnb
or
mov
xlat
mov
ret
nop
inc
sbb
outsb
fisubl
xchg
sub
sub
mov
enter
in
fnstcw
nop
addr16
mov
push
inc
rcll
xlat
jno
cmp
xor
in
out
pushf
add
stos
pop
div
loope
in
loop
mov
cmp
cld
ret
cmp
dec
sub
xor
add
imul
push
imul
daa
push
add
mov
pop
scas
pop
push
jp
mov
std
out
stos
test
or
and
testl
dec
or
outsb
dec
cli
jle
mov
jmp
js
inc
or
jbe
pop
push
xor
dec
mov
sbb
test
lods
mov
pop
shl
pop
mov
mov
sbb
xor
fidivl
pop
imul
ljmp
or
xchg
sub
mov
fstl
pop
mov
jge
mov
fiaddl
js
xlat
mov
test
fs
push
imul
clc
jmp
icebp
aad
sub
dec
sbb
cmp
sub
and
test
lahf
cli
out
aas
insl
push
xor
je
in
idiv
xlat
add
sarl
into
xor
fisubl
mov
popa
jbe
mov
push
adc
mov
shll
jmp
fsubs
jne
xchg
ds
mov
outsb
repnz
insl
jp
imul
lods
in
int
dec
stos
inc
pop
inc
lret
aaa
rorb
ja
push
xchg
je
adc
mov
pop
pusha
mov
xor
mov
jns
xor
test
dec
add
adc
jecxz
in
out
movsb
fbstp
insb
mov
stos
scas
add
sbb
sbbb
inc
in
fwait
insb
xor
or
lock
fsub
cltd
and
fwait
pop
sub
mov
sbb
inc
int
pop
dec
rorb
lcall
add
mov
test
jns
sub
loope
sub
subl
imulb
popf
test
rcrl
mov
adc
into
inc
hlt
sbb
jne
dec
std
gs
bound
adc
jg
aas
test
lret
mov
mov
xor
sar
std
pop
orl
lcall
sub
jns
cmp
push
sbb
jne
movsb
aas
mov
rcll
sbb
cmpsb
sbb
int3
shr
popa
cltd
push
ja
jle
cmp
cmp
cs
and
dec
test
dec
push
xchg
and
iret
ds
ja
jae
mov
dec
inc
jge
pop
lret
mov
or
cmc
ss
jl
pusha
cld
xchg
loop
or
nop
lds
sub
mov
pop
pop
or
insb
clc
rcrb
insl
pop
or
daa
daa
enter
jp
pop
add
pop
shrl
mov
outsl
inc
xchg
xchg
ss
lret
mov
test
idivl
cmp
xchg
jge
jo
cmp
out
leave
cs
dec
xorb
cs
sub
aas
outsb
sbb
loopne
test
cmp
iret
dec
mov
xlat
pop
push
int
mov
lea
lods
dec
sub
push
push
sub
shlb
pushf
inc
loope
lret
cmp
out
push
outsb
xor
xor
xor
sbb
xor
and
pop
lret
jno
mov
jb
lret
aas
sbb
popf
inc
add
leave
adc
mov
lds
lahf
jg
fmull
jnp
sbb
sub
gs
lahf
push
loop
push
bound
mov
jno
shll
sbb
stos
or
ficomps
sub
pushf
or
cs
sub
out
push
dec
adcl
push
add
or
lcall
xor
cltd
sti
or
sub
or
add
dec
push
mov
xchg
rcrb
or
sti
jae
lret
mov
sahf
jp
ret
adc
out
repnz
add
lds
jb
mov
addb
or
add
test
xchg
test
call
shlb
pop
rcl
adc
xchg
mov
in
jo
adc
test
bound
insb
call
adc
push
push
mov
lock
jbe
xchg
jae
arpl
ss
dec
ds
sub
shll
mov
mov
lahf
cmc
or
mov
aad
lret
dec
xor
stos
dec
or
in
dec
mov
fs
jns
test
jae
inc
jb
ljmp
sti
dec
xchg
jp
cmp
mov
adc
lcall
in
stos
mov
mul
pop
stos
jae
jp
enter
stos
jns
mov
adc
jecxz
out
xor
push
fs
pop
pop
das
push
jecxz
cmp
push
adc
sahf
stc
lods
add
adc
js
sub
ljmp
cld
cmp
pushfw
iret
jp
and
jmp
mov
sub
test
xchg
pop
pop
loop
mov
imul
fldenv
pop
lods
pushl
cmpl
pop
push
icebp
dec
lods
sbb
xor
cmp
sbb
jb
add
nop
sub
mov
push
test
lds
in
stos
testb
push
mov
loop
ja
cltd
lea
scas
add
push
idiv
adc
push
mov
sar
sbb
cmc
fcoml
xchg
xor
lock
std
xchg
aam
js
pusha
in
popa
xchg
jmp
loopne
in
in
sbbb
inc
ja
addb
repnz
cmc
xor
adc
jbe
or
push
adc
cld
and
pusha
dec
cs
mov
mov
xor
mov
clc
icebp
int3
imul
fimull
or
xchg
push
mov
adc
jmp
adc
lret
mov
cmpsl
fsubrs
sub
ljmp
xchg
cmpsb
cmp
push
inc
inc
add
sub
ret
mov
ja
ficoms
mov
aam
inc
cmpsl
xchg
dec
push
lods
push
xchg
mov
jmp
or
jge
insl
push
jl
sbb
inc
cmp
aam
dec
fists
jg
cld
inc
lahf
push
ss
xchg
lahf
or
dec
dec
ror
sbb
sbb
lcall
inc
xchg
mov
add
lret
dec
out
or
in
fdivs
sti
cwtl
cs
push
fwait
leave
jl
mov
or
dec
out
test
or
mov
dec
sub
sbb
jns
mov
pop
popl
rorl
inc
test
xor
fnclex
into
pop
jbe
les
pop
pop
push
loop
imul
enter
push
data16
cli
xor
mov
mov
jns
xor
jno
popf
or
fisttps
jo
sbb
dec
add
inc
jns
xchg
in
sti
sbb
xor
mov
inc
xchg
ss
stos
push
inc
dec
rcr
mov
outsl
mov
xlat
aad
cmpb
cld
xrstors
cmpsl
stos
rep
inc
cwtl
es
jmp
add
push
jp
gs
mov
xchg
into
fidivs
push
sbb
in
lock
push
push
xchg
or
fcomps
es
mov
ja
xchg
add
enter
sbb
fwait
adc
iretw
stc
cmp
mov
inc
pusha
push
sbb
xor
in
shrl
stos
ud0
repz
scas
loope
xchg
lret
fistpl
push
pop
mov
insb
xchg
cmpsb
pop
mov
movsl
sub
call
push
cmp
call
push
rcrb
mov
mov
in
insl
mov
daa
jmp
sub
push
mov
dec
cmpl
mov
pushf
loope
mov
dec
dec
insl
xor
fadd
dec
scas
add
pop
xor
popf
lods
fwait
std
xchg
push
pop
pop
jg
insl
dec
mov
mov
imul
in
mov
or
sub
leave
in
dec
mov
mov
lods
push
mov
adc
iret
sarb
aaa
inc
scas
cmc
and
in
xor
scas
push
out
aam
sti
add
ja
mov
xchg
mov
inc
xchg
jecxz
fwait
push
xor
jo
cmp
pop
pushf
dec
ja
lcall
fwait
sbb
mov
insl
fcmovnbe
sbb
jl
xchg
sbb
in
cmp
movsl
mov
or
les
cli
mov
cltd
or
jbe
or
xchg
aaa
sbb
rcrl
mov
fnsave
lcall
mov
loope
fmull
add
nop
lds
xchg
mov
vshufpd
mov
jne
stos
push
and
sarb
xchg
loopne
and
adc
les
or
add
cmp
lods
pop
mov
subb
lret
lea
mov
add
pminub
fdivl
sub
fstps
xlat
xchg
out
ljmp
aad
pop
daa
xor
or
insb
push
rcrl
sub
iret
mov
cmpl
xlat
lds
xlat
push
push
fiadds
xor
mov
xchg
in
cld
pop
add
imul
gs
insb
add
adc
test
sub
mov
pop
fwait
aas
gs
dec
daa
pop
mov
and
mov
mov
inc
and
mov
test
xchg
in
call
dec
lret
ret
cld
jg
in
or
scas
jmp
pusha
or
out
xor
shl
fimuls
dec
pop
or
aam
icebp
into
movl
or
dec
mov
cmp
aam
ret
jecxz
jne
jmp
pop
out
dec
pop
xor
add
jb
in
in
push
std
push
lret
push
jb
imul
stc
mov
gs
and
mov
add
jo
cmpsb
arpl
xor
push
int
mov
aaa
dec
pop
call
test
or
dec
sbb
cmp
loope
cmp
cmp
pop
cmpl
in
imul
enter
out
outsb
push
and
mov
loop
lods
incl
out
test
mov
pushl
or
mov
cwtl
mov
cs
jb
mov
mov
dec
sbb
dec
or
cmc
mov
pop
sbb
xor
or
pop
mov
or
xchg
adc
lods
ljmp
xor
rclb
xor
lock
ret
into
adc
enter
loop
inc
shl
movsb
adc
mov
cmp
adc
jae
sbb
in
pop
out
scas
push
aaa
inc
xchg
scas
and
test
inc
adc
mov
pop
cltd
cmpsl
mov
pop
jecxz
imul
adc
and
ss
movsl
in
mov
or
ja
or
lret
das
in
pop
mov
dec
rolb
test
adc
sbb
dec
in
push
add
shlb
in
out
adcb
inc
loopne
sbb
sbb
inc
aaa
mov
negb
push
mov
mov
fildl
scas
or
xlat
lock
mov
leave
data16
push
repz
sub
popa
mov
inc
popa
and
adc
adc
in
sub
in
arpl
lret
inc
or
mov
stc
or
fstl
xchg
fstl
ss
adc
addr16
rcr
ljmp
cwtl
testb
lahf
aas
or
addr16
sub
xchg
fstpt
jns
cmp
pop
xlat
mov
fcompl
xchg
jp
lds
or
push
push
cltd
cmp
fs
or
mov
aaa
cmp
sbb
pop
sbb
gs
mov
imul
mov
out
xchg
clc
loope
xor
daa
faddl
fptan
dec
nop
sub
std
fldcw
push
pop
push
enter
fnstcw
jb
bound
gs
mov
es
ja
loope
or
loop
jge
aad
mov
ret
dec
pop
cmp
outsb
int
jno
mov
loope
mov
nop
out
xor
add
add
lods
sti
int3
lock
mov
daa
mov
add
sub
sahf
fadd
leave
icebp
mov
repz
sarl
jl
in
xor
les
stos
das
mov
xchg
out
lret
aas
or
or
pop
fwait
lds
loope
xchg
idivb
xchg
inc
notb
sub
popf
les
jb
xchg
sub
sbb
imul
and
inc
push
lcall
fdivl
push
sub
xchg
mov
xor
pop
jb
in
lods
in
mov
in
in
add
xlat
popa
add
push
jg
mov
leave
mov
mov
mov
punpckhbw
js
aas
cltd
sub
xchg
lcall
sub
sub
aas
sbb
and
jb
sub
fcmovnu
outsl
add
fsubr
loope
je
outsb
mov
pop
push
lret
xchg
xchg
mov
ret
pop
sbb
push
popf
fs
clc
lock
push
rcrb
sub
movsb
cmp
lret
sbb
sub
movsl
mov
cmp
popl
sti
or
inc
addl
std
insl
push
jg
aas
mov
pushl
dec
mov
ljmp
cld
lret
pop
outsl
outsl
fnstenv
fldcw
out
inc
lods
xor
outsl
adc
fsubrl
mov
dec
rcll
lods
aas
mov
cwtl
mov
add
imul
and
das
loopne
sbb
jge
push
mov
sbb
inc
repz
rcll
jae
pop
and
ja
or
lods
andl
add
pop
push
in
fdivrs
lds
pop
or
ss
mov
dec
jmp
cmpsb
fcoml
dec
dec
lods
and
in
push
adc
or
ja
aam
dec
stc
lds
fnstsw
mov
frstor
les
push
mov
sahf
inc
jmp
cmp
pop
mov
sbb
dec
aas
aaa
in
inc
cmp
add
sub
in
shrb
sbb
cmc
xchg
adc
mov
dec
mov
int3
or
rorl
aaa
cld
in
fcmovnu
jg
rcl
das
mov
fdivrl
test
inc
cmp
out
cmp
inc
stos
jge
mov
in
cld
mov
adc
xchg
pop
mov
xchg
daa
dec
dec
and
in
rsm
pop
or
dec
shll
movsl
jbe
mov
xorl
inc
ret
pop
pop
dec
inc
lcall
mov
das
das
out
sbb
outsl
mov
in
insb
inc
popf
mov
mov
rcl
xchg
inc
xchg
scas
mov
stos
in
pop
sbb
and
xchg
inc
negl
shrl
js
add
idiv
fs
or
sti
or
shl
mov
jb
jns
mov
inc
test
push
jns
fisubrl
leave
das
adc
xchg
adc
add
insl
jo
cli
loopne
lds
cmp
and
in
sti
inc
xor
mov
sub
je
lret
ret
sub
push
mov
cld
jmp
cli
or
or
lods
mov
adc
jbe
clc
aaa
test
adc
das
test
push
jle
js
xlat
mov
imul
or
aad
out
jecxz
xchg
sub
call
sahf
jle
pop
jg
push
loop
je
mov
adc
sti
mov
push
lahf
in
cmp
popa
sub
addb
pop
inc
test
ss
cmpsl
inc
push
or
mov
clc
push
test
fdivs
pushf
das
mov
mov
outsb
add
nop
ret
arpl
inc
out
mov
les
fidivrs
mov
xor
fdivrl
bswap
xor
in
popl
lcall
mov
fistpl
dec
mov
cmp
sub
lret
adc
outsb
jl
or
mov
mov
mov
je
cmpsl
sti
mov
imul
lcall
mov
mov
dec
loop
add
add
push
or
cmp
jle
pop
and
ss
xchg
ret
fadds
xchg
sbb
or
xchg
push
stc
outsb
or
jbe
adcb
jecxz
ret
adc
mov
test
sbb
mov
lretw
sub
arpl
pushf
leave
push
outsb
cwtl
xchg
sbb
add
test
test
dec
xor
sarb
lcall
and
pop
mov
xlat
ret
fisttps
jns
mov
mov
aam
test
push
loop
sbb
sub
add
mov
mov
in
cmp
dec
jb
leave
push
loope
push
subb
fsubrl
int
add
ljmp
jnp
pop
jl
add
flds
dec
aam
popa
out
addl
fwait
inc
and
mov
into
or
into
ss
inc
ds
repz
cmp
mov
push
rolb
jecxz
icebp
dec
xchg
xor
addl
les
add
idivl
mov
xchg
insb
xchg
xchg
jbe
repnz
test
sbb
inc
repz
add
mov
nop
jne
sahf
jmp
gs
fldz
lods
push
fisubs
cmpsl
cli
test
aad
dec
cmpsl
sbb
outsb
pop
in
push
jmp
adc
jge
push
fldt
pop
out
xchg
mov
add
mov
nop
stos
roll
adc
cmp
xor
cld
sbb
hlt
push
inc
mov
adc
mov
fdivrs
mov
lahf
cmpsb
jmp
mov
mov
fnsave
rorb
sbb
cmovle
lahf
lret
les
sub
loopne
pop
sbb
adc
adc
pop
jno
sub
inc
jl
fwait
bound
sub
dec
xchg
in
hlt
xor
adc
out
je
pop
es
jno
fsts
mov
cmpsb
xor
mov
int
pushl
lahf
inc
push
divb
out
dec
push
xor
fildll
push
sahf
repnz
push
out
push
cs
lods
inc
in
out
sub
and
sbb
gs
adc
push
mov
xor
xchg
jle
push
rorl
out
cmpl
xchg
xchg
mov
arpl
and
leave
and
iret
push
mov
imul
xor
pop
inc
xchg
fs
mov
mov
dec
stos
rcrb
lds
pusha
cmp
jno
mov
sub
insb
push
cmp
adc
lahf
add
pop
inc
push
les
imul
scas
scas
push
xchg
jnp
xchg
sti
pop
cli
xor
lods
mov
cs
and
xor
cmpsb
aam
jl
ficompl
mov
test
repnz
inc
stc
or
stos
add
paddd
jle
fs
gs
adc
push
nop
sbb
je
ret
sbb
xchg
call
daa
xor
sarb
loope
push
cmc
push
lock
xor
cmp
fildl
in
out
jb
mov
in
mov
mov
push
std
pushf
pop
push
xchg
in
sub
cmp
push
add
shrb
ds
or
adc
xchg
jno
jmp
push
mov
pop
cli
rorb
jns
xorb
pop
xchg
dec
jmp
in
mov
mov
dec
mov
or
scas
add
pop
push
xor
call
push
sub
sbb
push
mov
push
xchg
aas
push
sbbl
and
add
je
jae
push
dec
out
repnz
arpl
outsl
xor
add
pusha
loope
pop
sub
nop
xchg
repz
out
dec
arpl
out
xor
loop
and
or
jle
pop
jo
cmc
mov
adc
pop
inc
bound
mov
in
xor
aas
les
sub
ja
pop
in
test
mov
adc
pop
in
int
pop
mov
mov
adc
jmp
punpcklwd
adc
sub
aad
jge
cwtl
xchg
sub
add
sub
xlat
cmpsl
dec
mov
repnz
jo
movsl
xchg
out
adc
clc
pop
add
ret
push
cli
mov
test
jmp
and
mov
sbb
dec
mov
ds
xchg
out
xchg
xchg
loop
push
in
ja
xor
mov
or
cmp
jle
in
inc
dec
jns
ret
ret
aam
test
dec
stos
push
sbb
lcall
push
pop
and
loopne
sbb
in
add
sub
aad
jno
and
hlt
sbb
stos
insl
popa
jge
mov
fcompl
addb
xor
std
rcll
mov
loop
dec
popa
es
imul
or
aaa
std
push
shll
pop
cmpsb
mov
dec
and
cmp
adc
stos
jo
dec
loopne
jbe
outsb
add
jo
fistl
scas
pop
add
dec
fs
enter
stos
ficoms
loope
mov
adc
mulb
jae
gs
mov
mov
sbb
cmp
sub
xor
nop
jns
cmp
lea
mov
je
in
lret
add
std
mov
push
sub
cmc
xchg
sbb
sarb
data16
and
sbb
fistpll
or
jo
mov
or
mov
xor
in
inc
pop
mov
ds
jle,pt
cmp
and
mov
inc
mov
lods
mov
jns
popa
lds
dec
sbb
jge
ljmp
outsl
cld
xor
adc
mov
div
pop
inc
int3
pop
pop
pop
sbb
ret
fnstsw
xchg
repnz
xchg
push
nop
int3
out
pop
and
in
repz
push
in
enter
fstps
xchg
divb
sub
test
imul
mov
xchg
fs
xchg
add
nop
jns
sti
add
mov
and
loopne
mov
mov
jb
mov
ficoms
repnz
insb
popa
inc
jnp
sub
cmpsl
inc
ss
sub
adc
aad
sbb
cmp
xchg
das
mov
stc
and
ss
mov
or
jae
shlb
aad
andb
sub
or
out
mov
xchg
dec
iret
pop
adc
add
jge
mov
insb
into
fcompl
fidivs
lods
sbb
in
xor
lcall
or
dec
out
add
inc
inc
cmpsl
xor
jge
sbb
into
lea
js
decl
adc
cwtl
iret
in
mov
mov
push
dec
sub
test
roll
aad
jg
fnstcw
inc
clc
fstpl
ret
inc
mov
lea
sbb
aad
sub
xor
cmp
loope
repz
push
fisubl
andb
dec
jl
inc
icebp
sbb
subl
scas
pop
inc
inc
xchg
hlt
addb
bound
jae
adc
int
xchg
testb
pop
pop
jnp
lea
out
inc
pop
pop
testb
mov
inc
mov
cli
pop
std
push
mov
ror
pop
jae
and
mov
mov
jle
mov
rcrb
std
out
mov
push
rcr
in
bound
mov
test
pushf
fbstp
out
fisubl
nop
sub
in
sub
pop
inc
jecxz
repnz
push
push
ja
fwait
xor
mov
scas
jge
popf
xor
mov
dec
sahf
shll
xor
out
cltd
not
push
arpl
leave
add
xchg
mov
dec
xchg
or
xchg
jbe
dec
into
test
insl
pop
mov
je
addr16
ficoml
and
fstp
mov
test
insb
adc
cs
movsl
gs
dec
add
jl
mov
push
cs
push
scas
out
fbstp
jmp
push
dec
mov
hlt
push
push
xor
push
add
jl
sar
xchg
and
rcll
or
xchg
ret
cmc
cmpsl
loop
jb
out
pop
mov
sub
sub
and
add
inc
push
jle
jo
jle
jp,pt
mov
aas
or
add
jp
ljmp
repz
adc
addb
andb
or
rcr
mov
pop
push
scas
mov
mov
inc
mov
push
std
movsl
push
into
fistl
fdivrl
mov
lret
jae
jl
ss
mov
sbb
shrb
ds
aad
fsubrs
sbb
add
xchg
jne
mov
sbb
xor
pop
cmpl
sbb
lahf
jbe
sahf
mov
out
mov
mov
cmpsb
inc
sub
dec
repz
add
dec
popf
call
xchg
mov
xlat
xchg
js
into
ret
ja
add
add
adc
insb
inc
sti
add
js
jmp
dec
nop
push
sub
or
fs
ds
sub
imul
sbb
xlat
dec
pop
adc
xchg
mov
jo
inc
or
scas
mov
and
mov
or
jg
sub
push
cli
dec
out
adc
lds
and
add
inc
movsb
sti
fwait
outsl
mov
push
ljmp
testb
lods
inc
gs
popf
mov
stos
push
sub
or
lock
mov
fcoms
sti
mulb
stos
cmpsl
mov
nop
clc
sahf
aaa
mov
flds
and
add
and
mov
xor
dec
push
js
add
sahf
sbb
stc
jp
inc
das
pop
out
lock
cltd
and
fsubrs
test
out
iret
adc
mov
ds
push
pop
pop
push
in
adcb
xor
or
outsb
add
xor
mov
xchg
sbb
dec
icebp
dec
imull
mov
decb
cmp
or
int
in
imul
jne
insl
xor
jns
mov
popf
test
dec
dec
and
sbb
push
push
xchg
fwait
pushl
push
sub
sarl
dec
xchg
stos
mov
test
pop
repz
cmp
xor
scas
xchg
jo
pop
repz
js
mov
ret
cmp
cmpsb
and
xchg
mov
cmc
test
mov
shll
test
push
pop
loope
or
or
js
shlb
addb
test
push
icebp
jl
cli
xchg
push
adc
cmp
ja
gs
in
fs
into
sbb
cmp
cmc
mov
xchg
inc
xchg
out
xchg
xchg
push
pop
divl
rcr
das
pop
pop
imul
cmp
aaa
fiadds
jnp
pop
pop
into
pop
fldcw
jecxz
inc
push
loop
fisttpll
rclb
call
inc
add
mov
xor
cmp
stc
inc
and
arpl
pusha
jae
jecxz
and
xor
dec
xchg
shlb
bound
outsl
lret
out
push
xor
addr16
enter
add
adc
inc
int
jge
fisubs
sub
ret
enter
mov
cmp
and
sbb
out
popf
call
fmul
mov
sti
cmp
sub
cld
dec
test
lock
jb
nop
pop
add
push
dec
rolb
aas
add
mov
mov
test
mov
aad
arpl
nop
fstpl
and
int3
adc
roll
push
push
or
sti
and
sbb
rorl
dec
mov
mov
test
add
cmp
cmp
dec
dec
adc
push
jnp
scas
mov
adc
clc
push
addr16
push
sbb
adc
fcmovb
fcmovnu
add
xor
and
ss
addr16
loope
dec
call
or
fsubrl
mov
dec
pop
jbe
fdivrs
and
jne
outsb
sub
pop
in
sbb
addb
mov
movsl
sub
mov
xchg
jbe
aam
test
popf
adc
imul
iret
adc
dec
push
pop
stc
jo
xchg
inc
jecxz
lock
movsb
cmpsl
xchg
mov
pusha
push
push
rclb
mov
dec
push
iret
cltd
cmp
xchg
mov
jb
push
sub
dec
jmp
and
or
xor
jne
jl
sbb
and
arpl
outsl
out
pushl
cwtl
jo
out
movsl
sub
mov
pop
loop
or
lcall
mov
pusha
aad
xchg
xor
cltd
rcl
dec
sub
mov
cwtl
pop
ds
jno
and
jmp
xlat
or
jmp
sbb
orb
gs
adc
push
fcmovbe
cli
pop
in
jns
lock
xchg
dec
dec
mov
xchg
ds
xchg
cli
xchg
fisttpll
aaa
xor
sbb
in
sbb
bound
idivl
pop
pop
les
mov
xor
inc
push
sar
mov
and
jns
cmpsl
das
cmovle
cmpsb
sbb
or
sti
je
or
fdivrl
add
xorl
popl
push
cmpb
ret
insb
or
xchg
adc
jb
ficomps
repz
mov
mov
stos
mov
pop
test
iret
test
lahf
lahf
out
lods
mov
lds
cli
lds
data16
sbb
negl
mov
adcb
aam
lods
adc
idivl
sti
fidivl
rolb
mov
orl
test
in
xchg
xchg
scas
jbe
add
scas
jmp
sub
push
xor
lcall
jb
mov
push
mov
sbb
dec
fmuls
sti
dec
mov
add
xchg
into
out
js
mov
jge
xchg
dec
repnz
dec
sbb
outsb
movsl
test
fidivrl
and
and
xor
notl
push
cltd
test
pushf
daa
add
es
lea
add
je
mov
aam
repz
loopne
pusha
mov
push
jge
pop
negl
and
mov
xchg
push
mov
insl
jns
out
push
jne
mov
xor
push
nop
xchg
pop
pusha
and
rolb
and
shlb
sub
cmp
jbe
xchg
xor
xchg
xlat
les
jnp
pop
and
push
pop
stos
push
addl
jge
fnstsw
shl
sub
loope
push
mov
adc
out
adc
data16
xor
cwtl
push
imul
lret
movsl
cld
or
icebp
xchg
adc
mov
ficompl
idiv
shl
push
leave
stc
out
mov
sub
cltd
orb
push
adc
loope
sub
xor
scas
jns
add
fwait
mov
push
cli
jnp
insb
jnp
sub
and
shrb
cs
mulb
xlat
push
xchg
aaa
sti
leave
jmp
pop
iret
repz
mov
jbe
std
jg
mov
lods
mov
pop
and
std
pop
je
mov
or
push
ret
ljmp
cmc
sbb
xchg
bound
inc
pop
es
sbbb
dec
dec
mov
xor
stos
inc
add
ja
fs
push
dec
xchg
inc
rcll
adc
lahf
cld
outsl
push
and
and
cmpsb
push
cmc
xor
pop
xchg
arpl
cltd
aas
cmp
jne
sub
adc
push
mov
inc
insb
lret
sbb
or
lcall
mov
xchg
imul
nop
aas
mov
lcall
mov
fcmovnu
jns
cmp
sub
std
aaa
sub
push
inc
dec
adc
daa
xchg
movsb
pop
xchg
cmp
mov
cmpsb
lds
jb
jnp
nop
push
jmp
xchg
jp
test
arpl
cmp
dec
and
js
je
sahf
push
mov
mov
sbb
call
push
in
sub
int3
hlt
lea
cld
sbb
add
pop
add
insb
decl
pushf
adc
xchg
sti
pop
sub
and
stos
push
sbb
aas
xor
and
dec
add
mov
jns
pop
sbb
orb
dec
test
adc
dec
data16
fisttps
jbe
cmpl
popa
rcll
int3
mov
std
pop
not
lock
movsl
or
popa
cli
test
inc
cmpsl
or
call
out
push
les
jns
pop
dec
iret
mov
and
jl
lahf
movsb
in
outsb
cwtl
ja
sbb
push
push
jb
pop
jmp
cmp
cwtl
mov
jmp
or
test
add
ss
mov
mov
push
sti
call
push
mov
and
call
cmpl
gs
xchg
xchg
fcompl
sahf
pushf
nop
mov
adc
mov
xchg
mov
inc
cmp
mov
movsb
arpl
mov
dec
jle,pt
call
mov
add
test
cld
imul
mulb
inc
sbb
inc
inc
pop
add
pop
add
repnz
adc
jo
int
adc
outsl
jno
pusha
ljmp
in
stc
mov
mov
adc
ja
inc
pop
jecxz
jnp
and
test
aaa
xchg
fisttpll
push
push
pushf
add
jg
jecxz
lcall
popf
shlb
xchg
cmp
jno
movsb
in
xor
lret
lods
sub
dec
jmp
cld
xor
cmp
int
insb
push
cltd
sub
nop
pop
addl
rorl
inc
sbb
or
mov
pop
mov
adc
ficoml
xchg
outsb
pop
out
aad
in
mov
les
push
fld
or
push
xor
ret
adc
popf
sub
dec
jmp
arpl
mov
fcoms
push
xchg
adc
js
xor
mov
lods
cltd
or
pop
sbb
insb
mov
adc
popl
lods
jne
gs
sbb
les
enter
or
cs
cld
frstor
stos
xor
ja
mov
sbb
pop
inc
movsb
iret
test
adc
ja
adc
add
loope
out
mov
or
inc
lret
sub
push
daa
inc
inc
or
lea
xchg
push
pushf
mov
lret
in
jne
add
mov
mov
jbe
shrb
orb
dec
xchg
ret
ljmp
insb
repz
dec
inc
mov
imul
jl
cmc
inc
daa
adc
imul
sbb
push
out
daa
jbe
adc
sbbl
sub
mov
dec
les
clc
jge
lds
popf
pextrw
sbb
add
sbbb
dec
stc
dec
adc
out
add
adc
loopne
arpl
sub
fnstcw
outsl
dec
inc
icebp
iret
cmp
adc
in
jp
xchg
mov
adc
loop
adcb
and
out
aam
inc
rclb
aaa
in
cmp
add
arpl
add
jp
repnz
popa
movsl
adc
mov
and
inc
test
movsl
in
mov
dec
xchg
je
mov
inc
and
sbbl
mov
xorb
add
xor
lcall
scas
push
dec
ss
lods
inc
je
jge
push
push
and
rcl
js
jnp
cld
jmp
scas
and
xchg
inc
inc
mov
movsb
jbe
dec
mov
push
addl
mov
ss
call
mov
ljmp
testb
mov
lcall
idivl
add
mov
dec
xlat
daa
push
cmpsb
cmp
movsb
je,pt
in
and
xor
out
adc
cmpsl
ljmp
fisttps
mov
shrb
mov
in
and
mov
inc
jmp
mov
jbe
mov
inc
and
and
ss
cmp
cmpl
adc
leave
sbb
stos
fimuls
add
add
jb
cmp
stos
mov
arpl
mov
xchg
hlt
sub
lds
mov
mov
mov
insb
jecxz
dec
mov
mov
fdivl
test
roll
inc
int
adc
repnz
mov
jle
inc
mov
rcrl
dec
sub
jg
and
fwait
sbb
dec
mov
xchg
cmc
adc
out
jbe
faddp
or
mov
adc
push
mov
inc
stc
fwait
mov
cmp
mov
repnz
test
mov
or
mov
ds
sub
pop
mov
jmp
dec
and
xchg
inc
and
sbb
in
push
insl
imul
pop
mov
shlb
mov
sbb
and
or
inc
lock
dec
xchg
pusha
je
loop
sub
arpl
sub
mov
inc
or
mov
mov
push
fdivrl
push
or
out
sub
sub
sbb
out
lea
daa
dec
xchg
mov
dec
arpl
outsb
test
shlb
enter
and
adcb
lea
movsb
add
test
jnp
repz
repnz
popf
jns
lret
stc
dec
lods
inc
jmp
push
adc
subb
pop
jg
test
add
xchg
das
aas
inc
pop
inc
rorl
cld
jne
outsl
mov
inc
into
sbb
mov
loopne
inc
mov
mov
jmp
push
or
fisttps
jno,pn
cld
ss
mov
arpl
cmp
push
das
adc
pusha
cmp
mov
dec
push
pop
pop
sbb
or
shll
mov
cmpsl
or
fstpl
ror
push
fcmovne
fstl
jo
frndint
data16
and
les
mov
xor
movsl
xlat
lods
repnz
aas
imull
in
addr16
cmp
enter
dec
mov
add
xor
dec
mov
aas
sbb
add
imul
mov
sbb
bound
loope
stc
dec
pop
divl
adc
or
or
and
cmp
mov
cs
in
push
mov
push
sub
or
push
add
movsb
push
bound
jle
shl
gs
jg
scas
xlat
or
xlat
push
pop
sahf
sbb
jmp
jo
test
bound
gs
loop
cmpsl
hlt
gs
scas
mov
dec
sub
mov
sbb
mov
mov
xchg
outsl
lods
cmp
insb
add
adc
shlb
jle
in
addl
and
or
and
mov
cmp
mull
push
fidivrl
icebp
lds
mov
mov
testb
lds
jmp
mov
mov
lock
dec
cmp
cld
inc
sbb
or
adc
add
sbb
push
out
jno
mov
pushf
push
lock
sti
cmp
mov
xchg
clc
loop
and
dec
cmc
sbb
iret
add
mov
dec
xor
cmpb
insl
repnz
call
cmp
mov
lods
add
stc
in
in
ret
test
dec
dec
jmp
pop
push
dec
mov
cmp
xchg
iret
xor
cmpsl
mov
mov
mov
jns
mov
xchg
loop
fs
sarb
jp
repnz
dec
fwait
scas
xchg
cmp
pop
pushf
add
out
dec
inc
inc
sub
aam
push
push
inc
movsl
xor
push
popf
pop
in
push
xlat
int3
popf
ja
sbb
sti
xchg
adc
mov
push
ja
cld
and
dec
addr16
lds
or
dec
scas
inc
movsb
enter
mov
inc
fsubrs
jmp
mov
ljmp
stc
pop
push
pop
xor
xor
push
and
rclb
je
std
cmc
in
icebp
jbe
pop
xchg
sti
iret
mov
mov
dec
mov
push
fwait
in
aas
insl
mov
ljmp
xchg
adc
add
pop
sub
add
andb
and
in
bswap
lods
fsts
fmull
dec
jne
shll
ja
cmp
fisttpl
es
dec
add
fsubl
cwtl
dec
mov
clc
dec
aas
inc
aas
cmpb
mov
pop
xchg
xchg
sub
mov
sbb
dec
push
insl
repz
jnp
repz
adc
lds
and
dec
push
lock
cmp
out
int
imul
sub
test
cli
dec
aad
pop
aad
inc
xchg
add
xor
jle
adc
ret
pop
mov
pop
ret
sbb
cmp
mov
mov
mov
pcmpgtw
mov
add
jl
loop
int3
ds
push
mov
loope
adcl
mov
jle
cld
jbe
jae
jmp
xchg
mov
pop
mov
jecxz
inc
adc
addr16
adc
icebp
push
aaa
xchg
mov
ret
xor
or
js
inc
sbb
mov
ss
jnp
pusha
dec
xlat
pop
lods
cli
mov
cs
inc
mov
fs
dec
inc
xor
test
call
or
pop
inc
xchg
rorb
fldenv
mov
ja
shlb
fsubp
scas
xchg
lret
lret
mov
xchg
add
cmp
andb
dec
popf
arpl
out
xor
push
pushf
xor
in
mov
xor
vmwrite
dec
pop
popf
dec
int3
sub
push
mov
enter
call
icebp
daa
mov
and
add
ss
scas
mov
repnz
xchg
pusha
dec
fmuls
pop
in
sub
dec
dec
das
sarl
fidivrs
jmp
and
enter
jl
xchg
sti
dec
push
cmp
push
adc
jnp
scas
out
jge
daa
xchg
add
mov
cmp
xor
cmp
ret
push
cmp
pop
out
push
movsl
sub
arpl
lahf
jg
aad
imul
or
out
std
xlat
or
and
fsts
scas
jae
icebp
in
orb
lahf
repz
jg
mov
mov
mov
jl
cwtl
aam
mov
out
mov
lock
lods
popa
inc
out
das
cli
lret
dec
fidivrl
pop
or
adc
mov
mov
enter
outsl
std
insw
cwtl
fldlg2
xlat
loopne
and
sbb
xlat
push
mov
add
push
fwait
dec
xchg
out
pop
sub
mov
movsl
jl
addr16
cmpsb
test
mov
adc
ss
movsl
adc
pop
imul
scas
stos
or
lods
sub
xor
repz
xor
fwait
mov
mov
scas
lahf
xor
pop
loopne
jae
mov
popa
mov
jle
fsts
mov
xchg
imul
jbe
iret
mov
push
push
imul
mov
test
hlt
dec
movsb
and
or
aam
je
jns
mov
and
mov
inc
test
in
scas
fiaddl
outsb
and
jecxz
jne
jne
aam
add
add
pop
mov
lret
cli
push
cwtl
xchg
xchg
adc
imul
add
cmp
cli
pop
push
jg
adc
je
mov
mov
dec
xor
std
xchg
sub
lods
iret
adc
cmp
mov
mov
sub
xor
out
fwait
movb
mov
jp
sarb
sub
add
nop
dec
mov
xlat
jl
mov
movzbl
mov
cmc
xchg
rorl
jne
jnp
mov
push
adc
out
dec
cld
push
adc
or
popa
imul
fistl
dec
mov
jnp
mov
in
mov
inc
add
lea
sbb
xor
lret
push
xchg
sub
dec
sarb
ds
iret
mov
sbb
out
adc
inc
jo
push
dec
clc
int3
or
pushl
inc
sbb
mov
dec
inc
mov
call
push
test
push
dec
pushf
movsl
aaa
fcomps
xorl
inc
mov
cwtl
in
xchg
push
fnstsw
mov
in
jp
jo
lods
scas
xor
cmp
sub
nop
imul
data16
imul
stos
cwtl
and
inc
mov
cmpsb
and
test
fimuls
mov
scas
dec
jno
pop
je
mov
cmp
cwtl
mov
push
lods
inc
daa
out
ljmp
jg
push
push
shl
call
aam
inc
ljmp
lods
or
out
sub
stos
mov
clc
jmp
inc
aam
pop
push
jge
das
pop
fistps
mul
testl
rcrl
ret
cmp
xor
or
dec
daa
inc
jmp
push
test
scas
adc
push
mov
sub
lret
nop
jo
in
xor
mov
das
aaa
testl
js
mov
mov
aaa
mov
mov
fs
dec
movsb
adc
iret
or
dec
cmp
inc
or
outsl
cltd
cmpsb
roll
bound
fnsave
decb
jp
mov
adc
cmpsb
add
lahf
push
fisubl
insb
mov
sarl
mov
fsubrp
mov
inc
mov
es
xchg
adc
fnstenv
pop
into
push
mov
outsl
fldcw
sarb
out
xchg
repz
dec
adc
ja
stos
js
xchg
out
cld
lods
aad
ret
sbb
outsb
aas
dec
ja
mov
movsbl
jnp
cwtl
daa
pop
push
cvtdq2ps
fildl
loopne
int
movsl
sarb
pop
adc
in
xor
andb
sbb
test
cmp
push
xor
inc
stc
push
insb
xor
imul
enter
and
daa
aad
sarb
int3
jae
ret
jge
je
mov
icebp
pop
in
lahf
std
jns
xor
rcr
lahf
fucomp
ss
cmp
popl
and
fld
imul
jg
int3
sub
cmp
jae
xlat
sti
bound
into
imul
orb
xor
adc
adc
jnp
mov
fs
sar
mov
inc
jbe
xor
fst
pop
in
std
sbb
jno,pn
fcmove
aam
in
dec
push
lds
mov
stos
mov
pop
push
sub
dec
xor
mov
sbb
xchg
add
push
inc
int3
lret
push
jle
iret
inc
es
push
jl
das
push
addr16
aas
lret
xchg
rcrl
shrl
add
lds
mov
cmp
fiaddl
cmc
jb
jns
stos
xchg
std
loopne
loopne
inc
jge
dec
jo
es
int
insb
divb
and
fmul
scas
loopne
dec
push
cmp
push
mov
sbb
test
jne
xor
jl
xor
enter
testb
es
cmp
cmp
pusha
add
inc
push
adc
or
addl
test
and
push
sub
pop
das
arpl
and
mov
shrl
ja
mov
pop
add
stos
out
ja
mov
stc
mov
loopne
cmp
jg
xor
jecxz
xchg
ret
dec
movsl
fnstenv
or
jmp
jmp
jmp
nop
jnp
icebp
aam
nop
daa
xlat
inc
pusha
f2xm1
mov
push
xchg
jns
jl
divb
aad
in
jbe
fisttps
or
jmp
jne
roll
insb
stos
movsb
sbb
add
ret
push
dec
into
sub
mov
ds
sbb
test
sub
xchg
and
into
bound
ljmp
add
and
jecxz
das
mov
repnz
imulb
xor
rol
pusha
xchg
push
das
in
movsl
sbb
popf
enter
mov
das
sbbl
inc
xor
cmp
out
and
mov
xchg
gs
mov
repnz
repz
out
sub
mov
mov
test
ljmp
push
fs
mov
out
pop
adc
outsl
cltd
subb
cmp
fsubrs
push
in
enter
fimull
aaa
push
xchg
jp
jnp
add
mov
idivl
jp
adc
push
dec
jmp
xor
fbstp
xorb
popf
ss
xchg
cmp
fdivrs
movsb
xchg
xor
jbe
xor
jle
mov
outsb
mov
push
xchg
jmp
dec
repnz
incb
test
int3
push
pop
mov
lds
into
jecxz
dec
fdivr
mov
test
je
and
orl
pusha
testl
repnz
es
rclb
sbb
push
idivl
mov
or
dec
xchg
dec
js
push
outsb
into
movsl
sbb
clc
dec
mov
sti
hlt
dec
jle
mov
in
movsb
movsl
inc
shll
test
mov
mov
mov
mov
mov
xchg
or
adc
mov
es
jb
int
mov
mov
pop
mov
xchg
movsl
sub
dec
sub
cld
bnd
leave
sub
adc
dec
xchg
iretw
ja
jle
out
inc
hlt
ret
mov
repz
addr16
test
mov
fnsave
sbb
pop
and
mov
inc
jge
mov
mov
xchg
pop
ret
pop
call
jmp
aas
fucomp
sub
ss
mov
pop
outsb
fs
jmp
in
dec
insb
clc
ss
fbstp
pop
jp
call
fcomp
loope
repnz
jns
xchg
cmc
loope
add
adc
jmp
mov
mov
mov
sbb
xchg
in
mov
pop
shlb
into
mov
or
divb
ret
sbb
xchg
adcl
mov
mov
dec
and
cmpb
fidivrl
pop
push
stc
lcall
ds
add
adc
adc
or
enter
mov
lods
test
xor
sbb
add
imul
shlb
ficoml
push
push
jl
pandn
call
add
in
adc
daa
rcrl
mov
adc
rol
xchg
xor
rolb
in
jns
sbb
icebp
aad
jl
ret
repnz
rol
sbb
out
push
ds
sub
lahf
pop
mov
addr16
lret
addr16
pop
inc
mov
fcompl
sbb
out
in
cli
cmpsl
add
jae
pop
lret
xor
mov
mov
hlt
dec
add
adc
out
and
cmpsl
fisubl
pusha
mov
sbb
ret
lods
lock
sbb
sbbb
icebp
jne
add
push
push
dec
push
cld
add
imul
xor
push
in
in
mov
sbb
loope
inc
adc
cmc
xchg
xchg
adc
push
xchg
inc
add
orl
dec
mov
push
int3
data16
adc
scas
adc
mov
movsl
mov
test
jb
fcoms
test
repnz
xor
inc
leave
lahf
cmp
or
dec
xor
rorb
hlt
push
lret
push
sbb
xlat
sbb
scas
das
xorl
sbb
addr16
into
fmuls
mov
shlb
cld
inc
inc
iret
int3
and
testl
push
lods
es
cmpsl
cmpl
inc
sub
leave
add
push
test
jae
xlat
leave
mov
add
or
shl
loopne
out
leave
je
adc
dec
test
xor
pop
pop
add
cmp
sbb
mov
ss
push
in
push
xsaveopt
sbb
scas
int3
mov
testb
stos
movl
inc
push
lahf
mov
jl
xchg
mov
clc
cld
outsl
add
jge
shll
adc
pop
in
cmpsb
aas
jle
adc
mov
xchg
pop
dec
or
and
rolb
mov
inc
and
fsubrl
jns
add
mov
inc
popf
popf
loope
out
popa
xor
iret
cmp
lods
je
es
cmc
adc
orb
in
insb
dec
mov
sbb
jbe
or
push
gs
sub
mov
and
orl
aad
inc
mov
push
aaa
or
js
add
add
int
xlat
popa
or
mov
mov
adc
cmp
cmp
imul
pop
cmpsl
daa
mov
inc
lods
lock
inc
inc
fmull
pop
cltd
mov
mov
repz
sahf
clc
sub
push
ljmp
mov
jnp
leave
loopne
mov
lcall
adcl
or
in
mov
lods
std
int
adc
aaa
jp
imul
insl
mov
out
scas
add
inc
mov
pop
add
ret
testb
aam
and
sbb
lahf
cmp
pop
cmp
push
outsl
jno
push
push
add
in
inc
cld
cmp
seta
or
jle
and
repnz
or
inc
dec
mov
ja
mov
jecxz
push
pusha
lret
movsb
call
cld
movsl
sub
mov
sub
shr
insb
mov
dec
adc
mov
arpl
mov
push
adc
mov
push
test
imul
repnz
insb
mov
or
cmp
mov
lret
jp
mov
or
mov
jo
add
cmp
adc
pop
add
or
xchg
jecxz
leave
adc
pop
mov
and
aam
or
adc
out
call
jnp
into
jb
mov
mov
ljmp
clc
jns
aaa
aas
enter
lods
and
add
ljmp
lcall
das
sbb
jbe
add
mov
iret
rol
xor
aaa
cmpsl
xor
test
fistl
int
mov
dec
les
out
faddp
leave
test
push
sahf
pop
inc
les
nop
adc
leave
mov
pop
roll
gs
jmp
xchg
imul
cmc
in
sub
clc
mov
jl
icebp
cltd
lahf
dec
cmpsl
mov
rclb
mov
mov
cmp
or
xor
push
pop
add
icebp
push
mov
sub
xor
jecxz
mov
xor
jp
imul
push
test
cli
jg
cmpsb
mov
add
jbe
leave
negl
mov
or
xor
xor
push
fwait
add
stos
dec
clc
push
sbb
push
jle
adc
hlt
fwait
cmp
stos
shll
mov
and
xor
in
adc
lods
pop
dec
lcall
in
les
jnp
out
icebp
js
pop
in
jle
cmp
jnp
inc
xchg
rorl
inc
inc
mov
xor
lea
or
loope
lret
jnp
xchg
and
movsl
call
jae
mov
jmp
ret
insb
frstor
sub
adc
push
or
xchg
push
insl
mov
adc
popf
mov
add
jne
nop
pop
icebp
insl
fists
pop
scas
sbb
jb
jmp
clc
test
arpl
push
lret
push
mov
mov
dec
rcr
xchg
inc
pop
icebp
xor
insl
xchg
ret
cmp
dec
test
jg
js
jp
out
addr16
sbb
stos
jecxz
fcoms
outsl
cwtl
or
push
push
repnz
jmp
cmp
js
ret
pop
fsubrs
mov
and
cmpsl
clc
dec
fdivrl
xor
jl
add
jmp
nop
inc
lret
enter
int3
mov
std
pop
cltd
sbb
and
cli
jbe
lods
xor
test
test
push
fs
adc
xchg
push
sbb
cmpsl
or
jnp
jbe
repnz
and
and
dec
add
sub
inc
bound
xor
sbb
cmpsb
xor
shl
sahf
jecxz
jl
pop
mov
xor
shll
arpl
inc
jo
mov
and
cmpsl
imul
lods
movsb
psraw
cltd
xor
push
or
in
dec
lret
cli
push
sub
pavgw
inc
test
icebp
in
imul
xor
cmp
xchg
pop
out
ror
aas
aam
test
into
cld
movsl
add
sub
pop
sbb
push
in
or
sub
xchg
fs
iret
les
mov
ret
mov
sti
push
cs
gs
pop
imul
out
mov
jecxz
in
mov
ja
imul
mov
push
lea
push
popf
ds
xor
cmpsb
mov
fidivs
push
call
xchg
push
cwtl
sbb
mov
sub
rcll
jge
jl
xor
divl
mov
xchg
adc
test
lds
int
mov
cmp
mov
push
inc
sub
in
mov
mov
scas
stos
mov
mov
cs
dec
sub
mov
jecxz
adc
jnp
sub
gs
std
sub
in
out
stos
jbe
fisubrl
icebp
and
into
dec
mov
dec
jmp
out
adc
fidivl
dec
adcl
fwait
jnp
jecxz
adc
mov
xchg
imul
sbb
push
ffreep
negb
pop
mov
xchg
scas
xchg
iret
mov
and
addr16
jp
sub
and
ds
and
mov
dec
inc
mov
dec
hlt
loop
mov
inc
lods
sbb
out
sahf
fs
inc
mov
in
fdivrl
inc
jne
adc
push
pop
mov
xchg
aas
mov
adc
xor
sti
hlt
mov
and
je
push
mov
nop
orl
xor
push
jae
out
inc
push
cwtl
gs
loopne
jl
ljmp
stc
icebp
mov
nop
push
jg
cld
gs
inc
loope
cmp
lea
adc
repnz
lcall
int
psubw
jne
std
rcll
das
fadds
icebp
dec
outsl
sub
loope
insl
pusha
jmp
mov
xchg
cmpsl
lret
movsl
pop
lret
pop
mov
gs
or
and
mov
cmp
fdivrs
or
ss
sbbl
xor
lock
gs
pop
cld
fwait
in
xor
dec
popf
jp
xor
mov
cmpsl
call
bound
or
aam
mov
push
jle
cs
gs
inc
imul
sbb
xchg
ds
mov
sbb
pop
cmp
lahf
add
or
mov
pop
add
mov
movsl
xchg
push
mov
mov
pop
mov
and
rol
pop
dec
addr16
jb
inc
dec
cmp
fdivs
pusha
cmp
xchg
mov
imul
mov
cld
mov
mov
push
ds
ljmp
iret
les
lds
mov
cmc
in
jmp
adc
jno
das
fsts
daa
int
jg
adc
hlt
mov
addl
push
cmp
dec
or
jb
js
sbb
in
mov
int
xchg
popf
out
cmp
shrl
mov
cld
jo
in
shlb
mov
cmp
ss
cltd
ljmp
mov
movl
fidivrs
hlt
mov
push
ja
les
adc
xlat
movb
mov
imul
lret
jp
cs
sbb
dec
ja
pop
sub
cli
inc
outsl
pop
xchg
push
mov
loop
or
push
and
push
push
fdivrl
pop
jecxz
xchg
lock
xor
lea
sarl
dec
fcomi
data16
mov
adc
xchg
je
cmp
pushf
dec
jg
sti
sub
push
sbb
sahf
or
es
pop
add
fsubl
jb
push
sar
mov
scas
sub
cwtl
xchg
std
fstps
mov
subl
int
jbe,pn
mov
sbb
shufps
jle
fwait
push
in
cmpsb
inc
andb
push
int3
cmpsl
or
cmp
lret
push
jb
hlt
mov
push
sbb
jp
in
sub
stc
into
push
nop
aaa
pop
xchg
mov
ret
dec
cmovg
popf
mov
and
outsb
inc
pop
sub
mov
push
stos
mov
mov
jecxz
sbb
cwtl
outsl
sbb
or
rorb
mov
pop
xchg
adc
and
dec
sub
inc
sub
test
rcl
pop
mov
and
and
cmc
sti
jecxz
xor
inc
xor
adc
cmc
xor
ret
pop
in
lcall
es
push
stos
test
lds
push
and
lods
xlat
mov
sub
push
add
fstps
dec
movsb
add
movsl
inc
inc
add
subl
cmp
or
pop
out
or
add
push
cmc
cmp
inc
in
xor
push
xor
mov
sti
aaa
fsts
push
fnstcw
cltd
sub
sub
adc
dec
test
lds
mov
fwait
or
testb
and
push
xor
xor
jg
pop
call
sub
lcall
fmull
mov
dec
cmpsl
pop
aaa
fucomp
call
dec
pop
and
inc
mov
aas
dec
inc
pop
push
ficomps
cs
stos
aas
call
stos
ljmp
push
aam
outsb
push
lret
pop
test
pop
adc
dec
insl
mov
in
js
pop
jecxz
popa
mov
in
test
fidivrl
xchg
cmc
into
inc
push
js
jecxz
add
fisttpll
filds
adc
cld
lret
ljmp
loop
call
cld
adc
and
add
fwait
dec
pop
ds
insl
sbb
bound
mov
add
mov
cmc
outsl
imul
mov
mov
dec
and
js
cmp
adc
push
lret
sub
pop
and
ret
xchg
or
push
fldcw
inc
cmp
mov
inc
and
mov
ss
adc
cmp
in
pop
loope
jne
mov
notl
cmpsl
iret
das
fidivrs
jne
xor
cltd
and
and
xor
cwtl
cmc
daa
sub
cmp
cmp
adc
es
push
mov
add
negb
out
cld
adc
lret
ud0
mov
insl
add
popa
xchg
call
ficompl
xchg
xchg
addr16
or
lods
push
aaa
imul
pop
stos
aaa
pop
lcall
mov
orb
sti
rcrb
mov
adcl
add
divb
inc
jmp
sub
fidivl
imul
mov
mov
je
std
jo
stc
xor
sub
push
fimuls
xor
int
loope
inc
nop
dec
sbb
and
sbb
fistps
sub
je
mov
in
mov
or
push
jb
outsb
xchg
pop
and
pusha
xchg
int3
push
push
jp
fdivs
add
movsl
adc
push
popa
mov
cmpsl
aad
adc
adc
sahf
xchg
in
add
jnp
mov
or
xor
fcmovne
sti
mov
sbb
negb
in
aaa
pop
rclb
sub
inc
cmp
pop
cmp
dec
cmp
add
mov
mov
out
fstl
mov
push
cli
add
shrl
mov
in
negb
and
xchg
insl
xchg
push
mov
movaps
mov
arpl
xor
jne
std
fisubrs
std
mov
and
push
adc
test
adc
mov
pop
mov
test
mov
out
inc
dec
pop
push
stos
out
mov
mov
xor
lock
push
stos
mov
bound
aam
jae
test
and
dec
fistpll
idivl
jge
stos
jle
jae
and
loopne
xchg
add
cmp
ljmp
or
loop
jns
push
pushf
mov
xor
pop
and
jge
lods
pop
sub
test
ror
and
mov
xlat
in
imul
xor
xchg
inc
sub
or
xchg
enter
sub
xchg
stos
xchg
dec
fistl
in
push
push
dec
add
sbb
jns
leave
and
add
sbb
xchg
xchg
cmp
ljmp
adc
scas
dec
cltd
inc
test
xor
loop
mov
and
mov
add
push
inc
lods
test
popf
cltd
or
movsl
pushf
ret
mov
test
mov
leave
in
dec
mov
inc
mov
in
inc
sub
aas
mov
hlt
test
out
cmp
or
sub
lods
dec
jmp
bound
xor
push
xchg
pop
sbb
jnp
and
sbb
sub
push
movsl
loope
nop
fnstcw
cmp
ficoml
xchg
sub
pop
pusha
pop
jae
xchg
movsb
js
adc
inc
mov
push
dec
dec
cmp
outsl
sbb
out
dec
lret
xchg
lahf
lods
xchg
jmp
bound
push
add
in
sbb
fistps
fdivs
shll
or
push
dec
mov
stos
xchg
dec
push
add
test
jmp
dec
jb
clc
fs
repz
fsubrs
lods
pop
inc
decl
xchg
lret
lods
in
mov
mov
in
enter
add
mov
cli
mov
iret
ljmp
cli
loope
jecxz
or
mov
jb
or
nop
cwtl
movaps
jbe
pop
dec
mov
mov
jle
out
sbb
xor
push
mov
mov
aaa
call
and
sub
int3
into
subl
ja
pop
jno
mov
inc
hlt
fstpt
lar
test
addr16
outsl
add
inc
pop
mov
test
gs
mov
xchg
sub
push
sbb
jb
xchg
sub
sti
mov
sbb
lahf
pop
cmpsl
ja
dec
adc
das
bound
les
aas
jmp
add
inc
movsb
xor
sahf
nop
adc
out
xor
cmpl
jmp
test
sub
imul
scas
aad
mov
cld
popf
cwtl
push
mov
and
mov
push
in
xchg
data16
add
dec
mov
daa
dec
xor
add
mov
sbb
push
jbe
das
jns
lret
jmp
mov
nop
repnz
xchg
mov
cmp
test
cmp
cmp
add
pop
jmp
scas
punpckhwd
xor
dec
sub
cs
sub
ja
adc
adc
mov
aas
cltd
jo
adc
adc
cmpsb
jae
add
or
in
cmp
xchg
int
xor
bound
mov
addl
mov
cmpsl
adc
jne
addr16
cli
push
or
mov
inc
add
add
mov
pop
xchg
divb
icebp
repz
and
insl
adc
cmc
bound
push
popa
sub
push
push
ds
sub
push
sub
or
jno
adc
jo
pop
cmp
xor
xchg
jbe
aas
xchg
adc
adc
test
out
dec
out
adc
pop
enter
ss
ds
pop
mov
inc
out
into
add
push
dec
cmp
cltd
aaa
pop
test
mov
jecxz
mov
fildl
inc
out
mov
cmc
mov
int3
dec
out
pop
cs
dec
inc
into
test
aam
outsl
std
inc
iret
mov
cs
js
aam
adcl
loopne
pop
and
test
push
mov
sbb
pop
imul
sub
sub
shll
test
daa
jle
das
xchg
and
jge
leave
inc
leave
mov
jp
lret
fs
jno
dec
pushl
inc
out
and
aad
cmp
mov
pusha
mov
dec
and
imul
daa
mov
xor
pop
pusha
mov
arpl
adc
jmp
mov
push
outsl
aad
lea
je
clc
dec
sub
add
and
shl
jge
cmp
push
sub
cmp
sub
aaa
fwait
xchg
test
add
push
sbb
js
add
pop
and
or
aas
mov
test
sub
cltd
loopne
mov
mov
xlat
mov
dec
jns
jg
mov
dec
adc
test
dec
ret
ret
lcall
cmp
sbb
adc
lret
scas
and
bound
lea
mov
dec
aas
out
xor
sub
shlb
cmp
ljmp
gs
fistpll
imul
mov
cmp
lods
insb
idivl
mov
pop
aaa
fdivrs
cmc
inc
xchg
sbb
xchg
sbb
jno
sbb
cmp
jge
adc
xor
shll
cmp
das
shr
mov
and
push
ljmp
sbb
push
sbb
fwait
push
inc
mov
movsb
popf
cmp
mov
or
shrl
outsl
pusha
rcr
clc
xor
shrl
aaa
pop
into
or
fiadds
jbe
push
jl
dec
mov
jle
cltd
insl
out
pop
fwait
jns
cmp
call
xor
pop
push
jns
outsb
popa
lret
inc
lods
sub
js
je
pop
xchg
and
jecxz
inc
mulb
push
repnz
mov
push
insb
scas
push
in
rorl
push
dec
das
shll
icebp
xchg
test
xchg
adcb
iret
and
in
inc
xchg
mov
push
mov
je
les
dec
push
jns
fstps
jmp
xorb
fldl
stc
cmc
inc
mov
pop
ja
daa
xchg
push
test
inc
pop
jno
jecxz
loopne
sbb
aas
out
push
scas
mov
fistpl
cmp
cmpsl
stos
into
cld
call
mov
sbb
pusha
sahf
jmp
leave
cmc
es
imul
movsb
in
sbb
push
pop
shll
shll
pop
outsl
mov
inc
xchg
xchg
es
push
cwtl
adc
mov
push
xchg
popf
rorb
mov
inc
fidivrl
test
add
push
lods
ja
jae
in
jne
pushf
popa
dec
mov
movsl
or
xlat
mov
sbb
or
xor
push
xlat
mov
mov
imul
and
test
push
jp
out
xchg
push
adc
cmp
xchg
ja
pop
outsb
mov
inc
mov
fadds
mov
scas
insl
cmp
jnp
sub
add
mov
add
and
xchg
sbb
xchg
push
cmpsl
pop
xchg
mov
insb
mov
test
ljmp
cmp
movsb
inc
or
jle
jle
cmp
add
ja
or
movsl
int3
xchg
aas
mov
add
and
dec
es
imul
pop
fsubrp
rcll
mov
cmp
into
dec
push
cmp
inc
shrl
or
mov
test
pop
out
icebp
xchg
mov
mov
push
enter
sbbb
xchg
std
loop
cmp
push
shrl
stc
daa
int3
jb
cmp
sub
out
dec
pop
aaa
mov
push
popf
inc
stos
insl
pop
fdiv
jb
scas
push
dec
ss
jl
mov
std
in
dec
sbb
movsb
test
or
ds
add
adc
iret
int3
push
mov
cmp
bound
xchg
jns
push
jmp
int
inc
add
pop
pop
stos
mov
enter
enter
xlat
xchg
mov
push
rcpps
add
and
inc
or
xchg
or
rorb
push
mov
sbb
ret
ret
lds
mov
in
mov
inc
fcmovnbe
icebp
mov
les
aam
out
call
and
xchg
xchg
pop
inc
mov
push
data16
movsb
mov
mov
das
out
sbb
leave
ss
adc
dec
sahf
mov
adc
sti
or
mov
in
outsb
inc
lea
std
sbb
pushf
xchg
outsb
fisubs
imul
dec
icebp
aaa
push
out
jno
aam
inc
pop
test
stc
popf
dec
je
popf
cld
mov
sti
std
pop
xchg
fldenv
mov
mov
push
pop
push
fnstcw
mov
push
mov
js
pop
inc
repnz
fs
and
rolb
in
add
pop
pop
mov
or
or
fadd
xor
jg
les
pop
loopne
stc
mov
pop
cmp
stos
test
push
inc
xchg
push
daa
std
jg
dec
lods
push
mov
and
xchg
cmpsb
xchg
mov
cvttps2pi
popa
ret
test
jae
mov
mov
mov
lret
hlt
sub
fidivs
hlt
add
sbb
in
or
dec
xorl
lret
push
cmp
out
add
arpl
inc
cmc
into
loop
fdivrl
in
xchg
jle
or
jno
pop
push
dec
into
cs
cli
add
aas
push
and
or
sbb
je
cmp
cltd
icebp
andb
jl
test
jge
or
pop
and
rorb
push
ljmp
adc
stos
mov
fsubrl
jno
loope
subb
ja
movsl
cmc
push
sbb
adc
or
jge
icebp
cmp
inc
lods
outsb
push
dec
cmpb
test
fwait
mov
dec
negl
jle
xchg
adcb
aad
xchg
jno
fstpl
mov
and
xchg
pop
mov
je
icebp
xchg
add
pcmpeqd
xchg
fdivr
push
cmpsb
movsb
shlb
sub
cmc
out
mov
js
jl
loop
cmp
out
push
mov
test
out
cmpsb
cmpsl
dec
adc
adc
in
stos
in
aas
adc
iret
stos
stos
es
mov
lret
cmc
stos
inc
testb
sbb
mov
orb
lods
xorb
fdivl
push
xorb
or
sbb
popf
test
jb
cs
fcmovb
insb
sub
test
enter
mov
mov
and
pop
xor
imul
mov
inc
stos
shrl
aad
xor
incl
aad
fs
inc
popf
arpl
xor
call
movsb
addr16
shll
sar
adc
push
sbb
ret
dec
mov
aas
cltd
sbb
fcomps
mov
jae
push
sti
aaa
mov
or
jg
out
jnp
mov
xchg
xor
int3
inc
cmp
or
pushf
sub
or
pushf
test
mov
leave
pushf
mov
mov
jae
mov
jne
call
sti
imul
lahf
insl
xor
cli
fucomi
stos
leave
xorl
loop
mov
push
push
xchg
push
loop
xor
xchg
movsl
sbb
outsb
push
cmpsb
mov
xor
in
movsb
sbb
inc
cmc
mov
jge
jmp
sbb
mov
outsb
jle
arpl
outsl
push
test
or
das
jmp
int3
jo
pushf
bound
addr16
mov
inc
jmp
add
jb
std
xorl
push
out
push
mov
outsl
add
jb
or
push
clc
test
icebp
add
or
js
pop
mov
das
out
or
mov
push
fcompl
cmpsl
and
rcll
repz
jnp
out
outsl
call
or
sbb
sbb
leave
jle
movb
data16
stos
sbb
shr
out
in
pop
fstpt
pop
int
daa
jle
shll
mov
pop
and
add
arpl
and
les
jg
outsl
sbb
aam
and
jbe
sbb
xor
xor
dec
fsubrs
push
imul
mov
inc
insl
or
mov
dec
mov
fwait
or
nop
and
and
pop
jnp
push
cmpb
nop
mov
mov
push
cmp
sbb
mov
inc
mov
aas
add
repz
mov
xchg
sti
mov
stos
inc
jbe
arpl
popf
loope
aas
sbb
loope
daa
into
xlat
sarl
daa
push
call
insb
cli
and
sub
adc
dec
sbb
imul
aas
test
imul
out
dec
mov
or
push
push
rcll
jecxz
out
push
add
ficomps
fistl
and
mov
xor
in
xchg
sub
out
mov
jmp
out
inc
insb
cmpsb
mov
jle
or
fiaddl
xchg
inc
gs
lea
xchg
out
jae
push
mov
cld
fisubs
popf
jne
adc
pushf
scas
popa
mov
mov
inc
cmp
and
mov
sub
jmp
jno
mov
cmpsl
faddl
xchg
loope
mov
jmp
xchg
mov
lods
mov
jno
ret
dec
fcomps
fisttps
mov
xchg
pop
push
pop
cmp
stos
fidivs
lret
frstor
jge
lock
pusha
iret
xchg
xchg
push
leave
xor
mov
xchg
mov
test
adc
ljmp
inc
mov
sbb
loopne
or
scas
mov
sub
or
xlat
pop
mov
mov
mov
repz
sbb
sub
mov
xchg
int3
mov
in
shl
das
inc
in
xchg
lock
and
out
mov
cmp
fnsave
orb
fsubrs
push
fcmovne
insl
leave
xchg
jmp
nop
push
adc
out
mov
repz
mov
aaa
xchg
sbb
sbb
leave
insb
cmp
cmp
ds
rcrl
in
push
out
mov
clc
ret
xchg
inc
repnz
cmpsb
xor
xchg
fstl
mov
jge
push
adc
add
cmp
pushf
sbb
cld
das
or
jbe
sbb
push
pop
dec
jmp
pop
inc
adc
pop
push
ficoml
das
andb
mov
and
cltd
or
inc
dec
adc
in
fwait
sbb
imul
lods
popf
or
cmp
and
push
or
cmp
xchg
sbb
imul
add
pushf
mov
adc
mov
jmp
and
push
or
scas
in
aas
gs
fnstcw
adc
pop
das
and
pop
les
jae
lds
dec
ret
adc
into
movsl
insb
addr16
jecxz
test
jmp
and
aam
fs
xlat
xor
jmp
and
loope
cwtl
into
fwait
mov
pop
ljmp
push
sarb
enter
lret
outsb
mov
cmp
leave
dec
mov
and
xchg
or
xchg
stos
adc
pop
imul
jns
cmp
mov
outsl
out
ret
mov
mov
nop
loope
cmpsl
movsl
jno
pop
inc
jo
jb
sbb
aas
mov
arpl
or
stc
ja
inc
cli
adcb
xchg
fucomip
dec
mov
inc
daa
jmp
sbb
repz
nop
out
and
add
dec
mov
mov
ljmp
cmc
push
add
push
cmpsb
jae
mov
cli
jo
std
clc
mov
lcall
int3
jo
xchg
fs
cmp
xor
rolb
jmp
push
xor
push
cld
out
or
movsl
leave
pop
rcrl
dec
sub
loop
jp
jmp
mov
imul
sahf
fnstsw
adc
ror
cmp
cs
cli
enter
cmp
data16
lcall
cmp
pusha
jae
xchg
xor
aad
sub
push
jecxz
sbb
or
push
lods
cli
sahf
in
fadd
je
jmp
mov
xor
and
pop
mov
cs
rorb
nop
jl
aad
int3
and
sub
sbb
int
mov
cltd
shll
mov
adc
xlat
es
or
and
mov
push
sbb
aaa
mov
fimull
jo
imul
adc
mov
xchg
mov
iret
cmp
push
sub
lret
imul
sub
jns
xchg
fucomip
adc
inc
and
cmp
lret
xor
xor
push
cmp
mov
xchg
sub
sti
push
mov
adc
popf
mov
dec
adc
mov
stos
sahf
lods
ja
ret
and
daa
pop
dec
cmp
push
push
add
cmpsb
mov
aam
shlb
push
lret
shll
xor
push
xor
loopne
shll
int
xchg
push
pusha
lahf
inc
and
jno
add
js
das
adc
pop
in
iret
inc
pop
or
jp
mov
es
jp
or
or
pop
and
add
int
add
out
jne
push
cld
punpckhwd
notl
stos
xchg
xchg
not
insl
leave
xchg
fisttps
add
jge
leave
hlt
inc
jae
dec
jge
insl
stc
cltd
or
gs
add
out
outsl
cmp
mov
push
cmp
inc
cmp
mov
loope
mov
push
pop
cmc
sub
xchg
mov
cmp
lret
jbe
andl
lret
and
loope
or
ret
cmpsb
mov
xor
shr
or
out
cmpsl
jmp
movsl
rcl
jmp
loop
int3
or
adcl
mov
cs
aad
cmp
gs
mov
mov
icebp
nop
arpl
push
push
ja
aam
int
or
and
rolb
inc
fidivrs
dec
testb
and
sub
popa
sub
jmp
std
hlt
cmpsb
or
out
fld
jle
jp
push
inc
add
xchg
dec
clc
js
jl
push
pop
shl
jbe
ljmp
icebp
mov
pop
std
outsb
fistpll
inc
jno
xor
aaa
scas
jne
xor
add
xchg
inc
adc
icebp
ss
and
xchg
loopne
xor
test
pusha
pop
stc
xor
cmp
hlt
pop
sub
push
adc
ret
sbb
ja
mov
mov
push
mov
lcall
dec
movsb
repnz
arpl
ret
aas
sahf
lret
and
and
js
add
shlb
dec
mov
test
push
test
ret
ret
outsb
daa
scas
or
xor
cmp
add
nop
sbb
pop
xor
add
sti
sar
push
pop
sub
pop
add
mov
push
adc
in
jle
stc
sbb
fldl
sub
je
or
adc
movsl
repz
inc
bound
jnp
je
dec
andl
scas
out
sub
or
test
cmp
mov
movsb
add
insb
mov
movsl
out
push
mov
ficoms
js
pop
adc
inc
xor
les
lret
and
arpl
lods
pop
mov
pop
stc
sub
cmpsl
stc
out
js
nop
push
pop
std
adcb
dec
inc
fisubrl
fcomip
dec
insb
into
mov
insb
mov
out
inc
lcall
movb
add
aas
stos
jnp
imulb
mov
mov
daa
cmpsl
addl
pushf
aaa
ds
test
jno
cmp
jmp
popl
mov
pop
sbb
adc
add
mov
and
adcb
pop
mov
jp
int
or
jp
arpl
mov
stos
les
ljmp
sbb
les
pop
cmpsl
jge
fcoms
movsl
imul
jg
enter
add
sub
ret
pusha
flds
dec
imul
es
ja
mov
ja
sbb
pop
inc
xlat
es
jo
add
aam
xlat
imulb
pop
shr
dec
or
push
jp
cmc
jmp
clc
and
gs
cmp
test
add
outsl
dec
push
fiadds
lods
sbb
shr
rolb
fdivs
jb
gs
mov
mov
mov
mov
nop
adc
ficomps
sub
fcompl
or
xor
mov
in
imul
dec
hlt
pop
hlt
xor
and
fs
add
xor
add
test
xor
addr16
and
jb
mov
pop
lock
sbb
adc
or
pop
dec
les
jmp
loope
mov
lahf
push
rolb
pushf
jns
ret
iret
out
scas
and
aam
cmc
repz
mov
or
push
ret
add
add
pop
push
fsubl
dec
les
outsl
clc
bound
sbb
jns
mov
mov
or
cli
sbb
pop
pop
out
inc
fisttpll
mov
xor
jb
mov
cmovo
xchg
into
cwtl
lds
push
and
inc
ficoms
cmpsl
mov
xor
adc
push
jne
sbb
add
stc
adcl
mull
inc
je
add
mov
push
add
lret
fs
std
xorb
xchg
mov
loope
ret
add
xlat
fstps
push
inc
in
test
inc
xor
ja
rorb
sub
loopne
mov
jno
mov
cwtl
push
dec
and
or
ja
cmpsb
pop
test
icebp
into
cmp
xchg
mov
dec
and
adc
movsl
fsubrl
adcb
pop
stc
jmp
pop
pop
popa
out
in
leave
out
mov
rorb
aam
mov
mov
aaa
repz
adc
inc
aas
aad
mov
inc
xchg
jg
cli
cmp
loopne
add
out
orb
mov
dec
dec
jne
rcrl
and
inc
adc
mov
scas
add
int3
push
inc
cwtl
sbb
leave
in
dec
out
and
repz
addr16
cmp
jmp
pushf
je,pn
outsb
inc
int3
xchg
mov
bound
adc
stos
jo
stos
fucomi
sbb
inc
dec
mov
jb
add
call
scas
sahf
rolb
call
jge
jbe
mov
mov
test
jmp
push
sub
push
or
push
push
cmp
cmc
aas
int
jl
dec
cmpl
pop
jno
idivl
fcoml
mov
dec
inc
call
es
pop
repnz
andl
dec
cmp
inc
cmovle
call
fistl
inc
jae
cli
daa
adcb
pop
jne
pop
bound
lods
daa
adc
leave
movsl
mov
bound
mov
sub
push
aad
sbb
dec
jbe
arpl
aas
shll
cld
mov
shl
test
push
adcl
xor
in
cmp
xchg
jp
mulb
fst
xchg
test
popa
push
pop
lods
sarl
mov
sub
popa
fidivs
dec
sbb
cld
pop
fnstenv
mov
sbb
add
orl
inc
jb
jle
jmp
add
repz
fsubr
leave
mov
mov
add
jp
pushf
fs
sbb
daa
mov
jl
inc
insl
fldl
mov
cmp
pop
adc
or
or
ret
mov
sub
aaa
shll
xlat
xor
adc
mov
fsts
jg
and
mov
test
or
pop
popf
imul
into
fs
fcomi
sub
loopne
rorl
rcll
mov
dec
dec
xchg
mov
ljmp
cltd
inc
and
ds
sub
xchg
test
ror
outsl
int
loope
bnd
idiv
push
mov
jle
test
in
int3
pop
adc
inc
test
and
cmp
xchg
mov
jmp
insl
dec
imull
push
xor
dec
jmp
fistpll
adc
rclb
orl
add
lea
ja
cld
or
aad
pop
jne
pop
mov
cmp
and
ret
ret
mov
iret
fistl
rcrl
in
rorl
push
push
cmp
lea
push
cli
inc
insb
fs
mov
out
push
in
xchg
jmp
or
xlat
dec
fisttps
xor
insb
jl
mov
shr
pop
fs
cltd
pop
push
aad
test
rcrl
inc
flds
idivb
cmp
sbb
jle
ja
cmc
dec
test
push
shrb
scas
pushf
js
test
jl
mov
push
dec
pop
mov
mov
ja
dec
push
addr16
adc
jle
leave
xlat
ss
push
xchg
in
movsb
jmp
cmp
mov
mov
or
int3
les
sarl
cmc
lods
mov
ds
mov
aad
push
jmp
rcll
mov
pop
cmp
mov
mov
push
inc
mov
cmpsb
and
nop
vpunpcklbw
movsb
lahf
pop
adcl
sbb
out
dec
add
shrb
lahf
loopne
idivb
loopne
clc
inc
pop
and
pop
aad
xorl
mov
insl
ljmp
sub
jecxz
cmp
push
scas
mov
out
movsb
and
push
ljmp
ss
jno
and
dec
mov
aad
jge
jno
not
cld
mov
mov
lods
push
cmc
sarb
aaa
pop
fadds
sti
mov
and
and
or
fwait
lods
jmp
jno
inc
sub
jge
push
repz
xor
mov
outsb
adc
lods
xor
ficoms
add
orb
clc
xchg
xchg
sahf
xor
add
or
mov
xor
shrl
loop
out
cmc
add
ja
jno
xchg
cmp
jmp
sarl
push
xor
jne
loopne
jg
nop
mov
add
inc
add
filds
aaa
jp
rcl
enter
in
popa
arpl
lret
dec
push
repz
adc
push
jp
xchg
test
repnz
popf
pushf
mov
into
cmp
popf
push
fnstsw
or
cmpsb
lea
cld
cltd
push
movsb
ret
test
push
mov
adcl
and
and
pop
mov
dec
addl
sbb
shlb
xchg
lds
mov
add
not
cmpsb
out
lret
xchg
mov
into
std
test
out
xchg
mov
stc
push
push
fnsave
dec
and
sbb
mov
inc
sarl
inc
ficomps
or
mov
cmp
push
xchg
sbb
jl
loopne
fisubl
repnz
sbb
cmp
push
sbb
sub
mov
mov
gs
add
std
mov
xchg
pop
adc
mov
jnp
mov
xchg
mov
ja
xor
mull
cs
lods
and
pop
imull
xchg
dec
jmp
scas
pushf
jmp
add
ret
add
ljmp
jge
or
pop
rolb
jbe
repnz
nop
pop
inc
inc
sti
je
icebp
push
xchg
test
aad
add
fisubrl
aas
sarl
jnp
xor
cmp
jl
mov
sub
dec
mov
inc
fcoms
pop
es
andb
jb
pop
repz
js
dec
pop
inc
mov
pop
and
inc
adc
xchg
daa
lahf
mov
pop
cmp
add
jbe
out
xchg
dec
lret
divps
les
fisubrs
sub
mov
mov
stos
xor
sti
movsl
repnz
ret
sbb
push
pop
xor
popa
mov
push
push
addr16
cmc
mov
mov
add
sub
push
jno
mov
xor
xchg
into
and
push
mov
dec
test
loop
repz
je
inc
push
and
ja
enter
je
movsb
dec
add
fildl
stos
test
cmp
push
mov
je
outsb
or
das
sbb
js
jns
mov
stos
xchg
aam
push
loopne
and
loopne
outsb
cmp
std
scas
inc
out
lahf
dec
add
add
pop
add
jns
xor
sub
movsb
mov
aaa
mov
loop
shlb
pop
push
je
add
jno
out
sarb
in
sub
cmp
stos
or
xchg
adc
sti
mov
out
xor
jae
aas
jmp
ds
testl
cmp
pop
jne
popl
sub
mov
out
sub
imull
pop
xchg
adc
add
popa
enter
sub
inc
jle
jmp
inc
cmp
js
xor
pop
sbb
and
mov
ret
adc
imul
inc
fcmovne
lods
bound
cmpsb
enter
sub
xor
mov
pop
inc
or
mov
out
fisttpl
rorl
mov
mov
jp
aas
ret
daa
aaa
addl
in
lock
outsb
into
push
lea
xchg
xor
cmp
enter
adc
fst
pop
into
fistpl
mov
daa
mov
and
pop
out
and
mov
int
ljmp
jmp
pop
and
stos
lret
enter
imul
movsb
jb
pop
in
clc
fnstenv
int3
cwtl
out
scas
test
cwtl
xchg
dec
scas
cltd
cmc
aam
sub
dec
add
rorl
add
xchg
sbb
mov
jle
mov
lods
shlb
hlt
adc
sub
ret
xor
dec
cs
cmp
add
sbb
inc
ja
add
jb
add
pop
fstp
das
insl
rcrb
data16
cld
adc
or
xor
sub
sub
hlt
pop
adc
xchg
addl
insb
ret
je
jge
dec
jo
mov
fwait
xor
xchg
push
outsl
sbbl
lret
dec
or
nop
rorl
dec
push
xchg
dec
and
xchg
mov
sbb
adc
fs
jbe
imul
push
mull
inc
xchg
mov
inc
add
sbb
xchg
dec
adc
pop
jmp
pop
cltd
or
test
mov
cmp
jae
rcrb
cwtl
mov
rorb
in
or
push
dec
lea
loopne
in
inc
and
fimuls
inc
and
loop
jmp
cwtl
mov
mov
addr16
push
mov
adcb
fwait
mov
inc
push
dec
fildl
ja
js
das
test
out
mov
pop
aas
adc
lds
or
mov
xchg
in
sti
test
sub
sbb
sbb
or
inc
lret
inc
pushf
lock
lahf
shl
mov
push
loope
and
stc
inc
dec
cmp
cmc
pusha
jl
bound
popa
inc
ds
add
dec
loope
jg
ror
addr16
dec
leave
sarl
hlt
mov
nop
add
lret
adc
push
adc
daa
push
clc
lret
pop
xor
je
mov
rcrl
push
das
push
inc
adc
lret
xchg
mov
fsub
xor
pop
mov
sbb
mov
jns
jns
dec
jge
mov
mov
mov
or
pop
test
adc
popf
xchg
add
mov
cmp
and
push
xchg
repz
dec
sbb
jmp
lea
adc
popf
lods
rcr
adc
and
fisttpll
ljmp
sub
popf
sbb
out
in
fstps
push
stos
dec
mov
in
in
adc
pop
adc
mov
test
std
xchg
xchg
inc
not
cld
mov
iret
popa
data16
addr16
sti
icebp
cmpl
mov
jae
xchg
mov
in
and
sahf
pusha
pop
and
push
cmp
inc
daa
cvtps2pi
mov
push
dec
pop
mov
xchg
xchg
popf
test
fdivs
cwtl
xchg
in
dec
xchg
push
push
aam
mov
movsb
frstor
jle
pop
cli
sub
jg
xor
jl
inc
mov
ds
arpl
fsubrl
loopne
iret
test
sub
sub
insb
pop
inc
cmp
aad
inc
out
mov
dec
sbb
fcomi
aas
movsl
and
ja
sub
fbstp
adc
call
dec
in
mov
adc
out
ficoml
mov
and
fwait
addr16
jae
fildl
rcr
add
mov
nop
insb
xorl
xor
jbe
jnp
jp
push
lahf
aas
pushf
lret
add
pop
mov
jne
adc
xor
decb
pop
adc
or
js
faddl
lahf
loop
arpl
stc
adc
or
fsubrs
and
pop
into
js
sub
sub
int3
jns
xor
pop
bswap
popa
sub
je
cltd
nop
cli
sub
inc
hlt
xor
push
test
sub
aad
ljmp
lods
cld
insl
cld
ja
sub
cmp
push
hlt
dec
rorb
xor
fwait
lea
xchg
jno
and
lods
bound
push
into
mov
xor
loopne
mov
xchg
inc
dec
or
jae
push
bound
sub
sbb
inc
int
int3
loop
fstp
mov
out
xor
dec
inc
push
pushf
stos
add
stc
jnp
insb
pop
dec
loopne
sub
fsubs
imul
mov
adc
loopne
jmp
dec
test
scas
adc
daa
stos
nop
into
adc
mov
push
gs
push
sub
enter
out
and
jns
enter
mov
cli
mov
dec
mov
mov
xor
adc
dec
mov
xor
push
mov
lock
insl
pop
push
inc
aam
mov
xchg
data16
or
jnp
incl
and
lea
addr16
sbb
cmp
in
pop
repnz
shrl
and
push
movhps
and
notb
inc
mov
fbstp
lea
cwtl
inc
mov
rcr
lcall
sub
adc
push
ja
icebp
test
enter
mov
push
mov
xchg
or
push
or
addr16
pop
mov
xor
das
in
xor
sbbl
pop
xor
dec
xchg
repz
pushf
mov
fwait
addr16
adc
testb
push
add
addr16
insb
xchg
dec
or
and
push
int
xor
ds
test
xchg
jne
int
jmp
test
or
leave
dec
pop
and
inc
movsl
mov
out
cmp
sbb
ret
sti
add
inc
pop
push
out
pop
scas
lcall
jns
int
scas
mov
xchg
mov
leave
lea
jg
int
mov
cmp
jge
stos
pop
and
sbb
shrb
out
sahf
cmp
mov
add
jp
dec
mov
and
and
cwtl
or
flds
lret
sub
push
ja
cmp
ljmp
jne
and
jns
sub
cmp
jnp
insl
xor
ljmp
incb
bound
pop
push
rcrb
jns
out
pop
mov
mov
push
add
sbb
xchg
in
inc
lahf
adc
and
dec
add
lcall
pop
in
inc
pop
lret
outsb
push
adc
ja
dec
mov
fisttps
dec
ljmp
push
pop
iret
sbb
lret
inc
gs
jns
pop
pop
lods
into
push
pop
jne
push
fwait
pop
fisubl
cs
add
fstp
pop
ficoml
imul
scas
div
push
dec
add
cli
cmp
add
sbb
aam
cmpsb
push
pushf
addr16
mov
bound
mov
jg
dec
and
fwait
and
repnz
jp
jb
loop
aad
inc
je
inc
into
addl
cmp
sub
mov
outsl
lods
push
gs
push
ljmp
rcl
xor
xor
scas
into
fidivs
push
xor
push
orb
mov
hlt
jge
jo
sbb
mov
mov
js
xor
xchg
ja
aam
xchg
mov
js
sub
lret
xor
movsb
rorb
pop
in
js
xor
inc
hlt
mov
pusha
adc
outsl
arpl
inc
push
dec
fadd
dec
cmp
jmp
mov
insl
jnp
push
fxam
fcoms
movsb
inc
stos
mov
test
fs
sbb
mov
sub
cmpsb
test
call
push
mov
fistpl
or
add
in
loop
rorb
std
mov
loope
movsb
pop
cmp
push
test
arpl
inc
dec
xchg
xor
subl
lret
add
mov
mov
rorl
insl
sub
add
lock
xchg
ljmp
loopne
pushf
xchg
lea
xor
dec
call
rol
leave
cmc
pop
out
cmp
into
xchg
xchg
pop
es
frstor
hlt
out
xor
shl
fsubrl
outsl
data16
pop
ss
xor
into
cli
andb
test
add
mov
sub
inc
shlb
jnp
xor
or
mov
jbe
push
in
xchg
js
dec
sub
or
test
cs
xor
aaa
inc
mov
out
push
sbb
jae
jnp
or
inc
roll
jmp
xchg
xor
cs
in
scas
cli
pop
mov
scas
popf
mov
and
sub
pop
test
mov
sub
cmp
lock
xor
pusha
ret
mov
fs
das
mov
inc
mov
sbb
or
leave
gs
jmp
test
pop
mov
adc
push
lods
lahf
jne
mov
or
in
xchg
push
sbb
mov
dec
pop
cmpb
insb
mov
outsb
inc
or
into
sub
pop
inc
cmpsl
and
cmp
push
out
jle
mov
je
add
pop
pop
ret
lods
dec
pop
fs
hlt
or
jnp
cltd
jo
ds
push
in
leave
jp
lea
and
push
into
rcll
fnstsw
dec
xchg
test
popa
push
cli
cmpsb
or
push
push
and
into
aas
ret
sub
insl
dec
push
mov
or
jbe
ret
pop
lcall
inc
loopne
lea
push
push
int
adcb
cmpl
xor
mov
lock
dec
ffreep
inc
lds
and
mov
scas
pop
lcall
js
push
mov
cmpsb
fsubrs
mov
xchg
into
fbld
test
sub
mov
fistl
test
fcoml
jbe
insb
arpl
jp
imul
imul
cmpsb
sbb
gs
xor
xchg
add
insl
xor
js
xlat
test
ss
jmp
adc
mov
adc
sub
fs
fcomps
aas
into
ss
fildll
notl
loopne
call
fnsetpm(287
ja
insl
jnp
mov
or
mov
sbb
pop
push
push
imul
movl
bound
jnp
sub
add
js
cmp
inc
mov
repz
dec
repnz
push
inc
fisubs
movsb
or
in
mov
mov
push
outsb
jno
fldcw
mov
push
ds
dec
pop
incl
mov
dec
test
mov
test
xchg
addb
pop
hlt
push
in
into
dec
mov
sbb
sub
jle
cmp
scas
sub
int3
lret
fs
jns
test
cltd
cld
pusha
shl
xchg
out
mov
cmp
sbb
shrb
das
pop
jecxz
adc
sbb
call
iret
dec
iret
nop
add
fnstsw
insb
fxch
mov
sub
js
mov
fistl
push
sbb
imul
fldl2t
inc
sbb
fisttps
stos
jb
stos
out
jns
push
mov
aad
and
enter
adc
repz
xchg
add
addr16
mov
or
add
jle
lcall
push
jge
adc
int3
shrl
or
xlat
jae
push
aas
bound
xchg
add
stos
icebp
sbb
pop
or
jle
add
jnp
adc
push
mov
sub
aas
imul
bound
insl
in
ret
mov
pop
dec
mov
in
outsb
js
adc
cs
jbe
and
or
xchg
lods
xor
dec
stos
xchg
xorb
outsl
mov
jmp
mov
pop
js
sahf
ljmp
lods
hlt
scas
out
lods
inc
cmp
dec
push
out
mov
fisttps
lret
pop
cmpl
test
daa
loopne
mov
lahf
scas
popf
bound
sub
pusha
fldenv
xlat
insl
outsb
ret
fsubrl
sub
pop
mov
jge
cmc
push
sarl
push
cmp
xor
les
xlat
outsb
jae
sbb
adc
mov
or
nop
cmp
in
cmc
insl
xor
xchg
test
or
pop
push
pop
sbbl
gs
sarl
in
fwait
arpl
cmpsl
daa
adc
imul
ret
call
mov
push
mov
jae
dec
int3
push
shlb
lods
imul
jmp
shlb
and
xchg
js
cld
cli
dec
jp
sbb
cmpsb
leave
xchg
and
loope
fstpt
jg
lods
fidivl
xchg
push
mov
fiaddl
jg
fcmovne
add
jg
clc
sbb
int
adc
out
shrb
mov
add
je
iret
mov
jae
mov
or
clc
mov
cli
movsl
outsl
notl
cmpsb
fidivrl
inc
fisttpl
lret
nop
outsb
stc
ds
call
mov
fistl
pop
push
jno
lahf
pop
and
es
inc
adc
push
cmp
mov
pop
into
sti
sbb
cmp
xor
icebp
inc
fidivrl
iret
pop
enter
dec
jo
insb
pop
dec
movsl
fistps
jle
shll
push
dec
dec
mov
mov
dec
jmp
gs
pop
stos
adc
cltd
iret
xchg
push
pop
in
inc
xlat
repz
mov
cmpsl
or
add
leave
andl
adc
loope
pop
int3
inc
aaa
dec
lods
mov
cs
dec
ja
mov
adc
test
repnz
call
sarb
loop
cmc
out
push
test
mov
aas
dec
outsl
mov
andl
ret
mov
sarb
pop
jmp
xor
inc
and
negl
mov
dec
fwait
dec
lea
sub
cmp
xor
push
insb
test
clc
in
xor
and
ljmp
mov
stos
test
xchg
pop
dec
xchg
jmp
jb
in
ret
xchg
mov
lahf
add
inc
lock
jmp
add
mov
cmp
xor
dec
mov
push
or
cld
adc
data16
out
mov
inc
cmp
rcr
shll
repz
pop
ret
mov
sub
fcmovu
lahf
stc
in
xchg
xchg
fisubl
push
xor
or
cmp
stos
arpl
push
neg
ds
xchg
sub
in
xchg
movsl
fsubrl
popf
and
ret
add
pop
ss
inc
mov
sub
data16
xchg
adc
sbb
bound
es
dec
aas
or
lret
jae
jg
lret
dec
inc
stos
adc
add
lods
mov
mov
lods
lea
inc
loopne
adc
lods
adc
mov
push
inc
push
outsb
in
rcrl
insb
push
add
fistps
push
xchg
jnp
pop
mov
jp
sub
fstp
stc
arpl
vcvttpd2dqx
incl
ret
cmc
test
mov
inc
jae
shl
in
push
test
jp
mov
dec
arpl
jmp
push
mov
scas
jae
add
dec
dec
add
jmp
js
jmp
inc
cmp
mov
sbb
pop
sbb
mov
mov
jbe
mov
lea
xchg
jecxz
add
sub
push
inc
sub
or
insl
or
adc
push
mov
sbb
ror
push
and
sub
cwtl
push
punpcklbw
fdivl
or
gs
in
mov
mov
xchg
or
test
in
lcall
cmpsl
cmpsl
aad
clc
xor
mov
insl
inc
cs
enter
hlt
fcomps
inc
cmp
jb
lcall
pop
lods
adcl
mov
data16
mov
popa
dec
incl
or
sbb
ds
mov
mov
xchg
fwait
adc
pop
push
mov
retw
jg
popa
aad
xchg
sub
add
rdpmc
nop
pop
mov
insb
sub
dec
in
scas
movsl
jno
dec
push
imul
icebp
insl
mov
mov
xor
in
cld
ss
lahf
cli
subb
fs
add
cmpsb
in
push
push
aaa
jae
cld
xchg
sub
push
loop,pt
push
test
and
popa
pusha
cli
mov
mov
pop
aad
or
push
movsb
mov
push
loop
cmp
mov
xchg
scas
into
popa
jmp
lret
push
cmc
imulb
stos
repz
scas
xchg
fs
imul
ja
rcrl
xchg
stos
pop
mov
jo
leave
aad
data16
fsubrl
add
mov
sbb
fiadds
fwait
inc
pop
rorb
cmp
mov
xor
lods
add
data16
iret
xlat
fs
in
frstor
fwait
pop
rcl
or
mov
cmpsb
out
lret
loope
in
aam
out
mov
test
ds
jl
repz
scas
loop
stos
mulb
arpl
and
cld
repnz
fnstsw
rcl
mov
jb
xlat
pusha
outsb
lcall
lahf
shlb
int3
dec
pop
ret
out
sub
fs
in
push
loopne
mov
sub
imul
jne
outsb
mov
pushl
int
fwait
cltd
push
mov
sahf
es
fdivrs
icebp
cmpsl
aad
ja
push
inc
jo
jo
shl
orl
incb
mov
and
das
cmp
push
or
cmc
jnp
mov
notl
pop
pop
fcmovne
sbbl
ljmp
xchg
out
mov
and
sar
aaa
and
cmp
mov
lods
and
cmp
xchg
js
imul
jns
leave
and
cmp
iret
int
int
inc
stos
mov
mov
mov
push
xor
jo
adc
sti
scas
notl
fsub
fmul
jbe
test
in
dec
sub
ret
mov
leave
dec
and
pop
repnz
hlt
xor
push
pushf
aas
imul
out
pop
push
in
lret
movsb
jae
jb
inc
mov
mov
sbb
scas
lods
mov
xchg
and
mov
xor
push
dec
ret
arpl
mov
jae
shrl
sarb
jle
sbb
and
sbb
stos
mov
push
mov
xlat
in
sub
andb
adc
sub
repnz
ret
or
popf
push
jp
mov
fxch
adc
cmp
das
shrb
shr
mov
testl
mov
push
incb
sbb
adc
jo
fistpl
movsl
xor
pop
lcall
outsb
mov
xor
outsb
xchg
cli
fs
or
xlat
mov
xchg
push
pop
insb
lret
repz
scas
imul
xor
and
in
push
pushf
test
hlt
jl
jle
call
sub
aas
clc
jnp
inc
mov
jle
test
push
in
lods
je
rcrb
sbb
add
mov
or
add
push
mov
or
in
shll
jns
xor
push
in
cmpsb
mov
push
sti
imul
mov
and
sub
add
loopne
sub
incl
cmp
dec
adc
inc
lods
xchg
in
xor
or
sahf
ret
xor
mov
lock
cld
adc
repnz
sub
and
negl
add
daa
sbb
xlat
push
rclb
movsl
xor
sub
stos
daa
or
filds
dec
dec
push
ja
xor
push
mov
cmp
sbb
ret
adc
movsb
jge
movsl
pop
pop
repz
or
sub
sub
addb
adc
and
dec
sbb
pop
loop
fs
bound
mov
mov
stos
dec
cltd
neg
ljmp
sub
call
dec
outsl
mov
mov
test
mov
xchg
or
add
repnz
fisubrs
push
pop
jmp
xor
es
pop
or
insb
rclb
fs
js
mov
lods
nop
and
sbb
jnp
jmp
les
mov
outsl
or
rorb
dec
push
test
push
repnz
xchg
int
mov
xor
in
xor
xor
pop
lea
adc
push
fistpl
loopne
xor
and
imul
repz
mov
int
imul
or
add
outsb
sahf
lret
dec
pop
mov
sub
jecxz
pop
testb
and
jecxz
rcrb
xor
imul
repz
cli
lahf
xchg
bound
adc
out
orl
jmp
icebp
clc
xchg
movsb
dec
imul
out
inc
inc
movsb
arpl
mov
jne
push
jbe
data16
decb
mov
ret
mul
jae
ljmp
loopne
test
jo
shl
popa
fs
imulb
sub
test
call
insb
mov
sub
dec
xchg
jmp
lret
sbb
push
bound
mov
sahf
sub
dec
stc
test
xor
add
subl
jne
aaa
push
iret
cmp
vmovaps
js
es
inc
das
jne
inc
popf
lahf
inc
rol
and
aaa
inc
inc
dec
in
and
or
xor
pop
mov
scas
movsl
push
push
sbb
outsb
in
loope
aaa
outsb
sbb
pop
inc
and
dec
imul
and
push
stc
les
js,pn
sbb
loopne
or
ret
js
jecxz
mov
mov
lock
jecxz
mov
enter
testb
adc
out
test
pop
and
mov
mov
stc
decb
stc
xchg
dec
arpl
add
dec
into
push
add
inc
fnstenv
call
enter
adc
push
jecxz,pt
sbb
dec
and
jne
out
in
dec
hlt
jmp
or
mov
inc
jno
aaa
xchg
mov
enter
in
aas
jge
inc
cmp
xor
imul
dec
lods
enter
popf
mov
xor
fwait
xchg
sbb
xchg
es
sub
mov
loopne
pop
sub
stc
insl
jmp
inc
popl
in
cmpl
leave
fistpl
movb
xor
push
xchg
pop
adc
loop
jae
mov
pop
fs
pop
and
scas
push
fdivs
xor
mov
pop
push
inc
lahf
mov
in
daa
addl
sbb
and
fisubl
jno
push
cmp
jl
scas
xor
cmp
lock
inc
sbbb
jg
in
xchg
leave
cltd
sbb
xchg
and
fwait
outsb
mov
xor
dec
fs
movsb
aam
mov
push
lahf
cmp
inc
adc
int
pop
fs
leave
repnz
insl
sahf
icebp
mov
xor
pop
pop
data16
dec
push
ss
inc
jnp
push
sbb
movsb
lret
mov
pop
int3
out
inc
ret
cmp
mov
mov
outsl
insl
je
pusha
xchg
movsb
mov
xchg
ja
outsb
fwait
cwtl
imul
sbb
jo
cld
cmp
cmpsb
xchg
dec
out
scas
inc
push
xchg
loope
inc
repnz
push
dec
pop
xchg
flds
push
and
in
ja
ljmp
loopne
adc
test
add
testl
repnz
push
add
adc
mov
mov
in
fmulp
jnp
mov
push
or
sarl
mov
popa
or
dec
imul
stos
sarl
divl
sbb
sahf
push
rcr
lock
clc
push
leave
jo
cmp
insb
shr
xor
lods
mov
scas
pop
mov
jp
mov
cmpsb
cld
inc
fidivrs
fdivl
stos
add
and
movsl
sti
imul
rcrl
pop
pop
cmp
les
insb
loope
int
movsl
aaa
adc
sub
fimuls
in
jg
lods
test
inc
mov
cmc
shrl
mov
fcmovu
cmpsb
add
and
cltd
jmp
cwtl
xchg
xchg
lcall
scas
into
insl
sub
ja
test
jno
pop
mov
sbb
xor
jb
mov
mov
ljmp
js
mov
int3
mov
enter
movsl
dec
adc
dec
cmp
sub
lds
gs
movsl
mov
cmp
or
mov
sbb
push
inc
out
fcmovbe
fdivp
xor
and
addr16
movsl
pop
lret
mov
xchg
ret
fwait
sbb
inc
add
pop
std
xchg
and
pop
lret
xchg
js
pop
xchg
pop
mov
jbe
mov
inc
lds
xchg
rcrl
inc
xor
inc
les
out
mov
jae
fsubr
and
jno
hlt
inc
jl
adc
fmuls
cltd
sti
and
jnp
inc
sub
mov
bound
mov
subb
sub
in
jnp
scas
ret
icebp
and
lods
cwtl
push
call
aam
jle
or
idiv
push
lods
sub
testl
vmread
fmulp
cmp
lret
dec
sub
and
mov
push
pop
xor
aaa
das
jecxz
stos
mov
arpl
icebp
mov
xor
cld
mov
and
jae
test
lea
pop
mov
iret
cmp
loopne
jle
int3
jnp
hlt
insl
das
push
ss
sti
nop
mov
xchg
testl
sarb
outsl
xchg
outsl
push
or
xchg
divb
sbb
ror
cmp
ret
insl
cmp
push
pop
stc
add
and
ja
sbb
movsb
nop
xlat
mov
cli
pop
test
gs
imul
pop
push
pusha
jnp
ss
int
jae
or
and
lock
icebp
inc
popa
add
fisubrl
cmp
mov
jle
push
push
or
mov
in
leave
xchg
pop
stc
xchg
aad
mov
xor
in
aad
imul
lret
bound
cmp
sarl
cmpsb
adc
ss
pop
inc
rcll
jne
and
fisttpll
dec
adc
fidivrl
decb
add
mov
sbb
cmp
mov
mov
mov
push
ss
add
jbe
scas
stos
aaa
jo
fdivs
jns
push
bound
mov
inc
sbb
sub
pop
add
in
test
sbb
mov
addl
out
pop
push
mov
fbld
inc
xchg
icebp
jno
cmpsb
stos
push
dec
fxch
cmp
adc
jne
lods
mov
cmc
inc
mov
pushf
sub
mov
aad
add
add
into
clc
loope
rcrl
repz
lcall
incl
and
push
sbb
jp,pt
js
inc
or
sub
test
mov
lcall
gs
mov
outsb
mov
jmp
mov
cs
movsl
aad
cs
ss
loopne
sub
pop
bound
ljmp
xor
shlb
test
test
ss
pop
add
ret
sub
setno
out
sub
popa
ret
in
int
jb
fildll
jb
add
arpl
jnp
cs
sub
cli
dec
hlt
cmp
pop
adc
xor
scas
out
xchg
pop
in
add
jg
inc
xchg
or
sub
mull
fcom
arpl
cltd
pushl
loop
lds
rol
rorl
cmpsl
clc
xor
mov
rolb
jmp
push
push
cmp
pop
shrb
aas
js
adc
sub
loop
stos
test
fucomi
aas
addl
test
fs
mov
push
cmpsl
imul
pop
icebp
mov
and
jl
lcall
lock
shrb
lcall
std
sbb
xlat
test
jp
push
push
fs
lahf
mov
jmp
dec
test
dec
aad
in
or
xchg
xchg
test
sti
in
icebp
in
std
xchg
push
ljmp
js
call
and
hlt
mov
sbb
mov
shl
inc
cli
xor
sbb
iret
int3
iret
pushf
mov
in
hlt
and
mov
mov
subb
sub
sub
es
jns
lcall
inc
inc
arpl
sti
pop
sbb
mov
sbb
adc
push
insb
lds
mov
adc
shlb
sub
mov
filds
popf
push
insl
shrl
call
clc
add
sub
int
sti
push
push
inc
arpl
mov
out
adc
push
clc
jnp
repnz
pop
cmp
dec
and
sub
lods
dec
xchg
dec
insb
and
mov
push
cmp
cld
inc
sub
addl
hlt
xchg
pop
test
aaa
mov
das
stos
push
mov
xchg
pushf
cwtl
jge
jmp
addl
cltd
clc
mov
push
fistpl
add
push
clc
and
push
mov
jae
clc
cld
jb
sbb
sbb
or
leave
int3
lods
pop
aaa
fidivrl
lret
cmp
int3
sub
pushf
pop
popa
and
inc
movsl
xchg
mov
cmpsb
test
jp
mov
mov
sti
inc
push
daa
xchg
jecxz
jl
pop
lea
push
sbb
mov
adc
inc
xor
pushf
add
mov
mov
sarb
scas
cmp
stc
cmp
in
and
dec
test
mov
jno
cmp
into
and
pusha
cs
cwtl
es
dec
cli
in
outsl
cmp
pop
sub
adc
imull
dec
andl
out
mov
xchg
aad
aaa
cmc
cmc
xchg
xchg
sub
pop
dec
mov
js
push
cld
xchg
sub
cmp
xor
mov
sti
cmp
jmp
cld
xchg
icebp
mov
data16
jle
bswap
es
and
cmp
inc
inc
outsb
imul
lods
into
inc
dec
mov
or
adc
push
pop
sub
ds
aad
inc
cmp
xchg
cmp
imul
ret
xchg
xchg
fs
stc
lock
jo
mov
mov
cmp
inc
aam
leave
outsl
inc
add
mov
ret
jmp
xchg
and
pop
cmp
dec
and
lea
sti
xchg
popa
loop
mov
addr16
jo
insl
push
popf
aam
mov
das
adc
cmpsl
jns
dec
shlb
jns
push
andb
punpckhbw
mov
das
dec
mov
stos
pop
jno
insl
pop
mov
sbb
out
pop
cmp
negl
xor
stos
movsl
sbb
lahf
push
mov
out
mov
adc
mov
divb
cmp
jg
pop
lcall
aad
xlat
pop
mov
and
ja
push
fisubl
inc
jl
inc
jnp
sub
xchg
cmp
jb
js
cmp
sub
pop
cld
pop
dec
dec
sub
and
jnp,pn
in
dec
add
cmpsl
aaa
dec
js
jl
jno
pop
rcrl
ret
in
pop
js
fists
mov
cmpsl
inc
lock
outsl
scas
and
jp
mov
inc
push
jne
and
adc
rcrb
testl
scas
enter
lret
sub
lea
mov
inc
pusha
push
mov
lcall
pop
push
ss
pushl
dec
push
pop
mov
cmpsl
dec
push
popa
mov
in
jge
mov
pop
cmpsl
loope
dec
mov
cmp
jle
js
roll
loopne
xadd
adc
jmp
push
add
pop
lahf
imul
fcmovnu
xorb
mov
sbb
cmp
and
jle
pop
add
aad
lea
jle
add
fdiv
in
lock
aaa
jnp
ds
sahf
or
popf
push
jne
jae
bound
aaa
and
out
movsl
jns
mov
nop
movsbl
push
negb
mov
shlw
mov
add
xchg
mov
push
push
decb
rol
fisubl
pop
lea
sarb
lods
push
sub
cmp
sub
mov
in
mov
jg
nop
outsb
cmp
push
clc
sti
aad
jecxz
in
mov
push
ss
into
add
cmp
inc
leave
bound
dec
cli
mov
adc
or
lea
pushf
adc
fistl
jb
push
inc
jl
outsb
adcl
dec
lahf
rorb
in
mov
mov
test
cld
insb
gs
ss
jo
icebp
loopne
fsubr
sub
roll
scas
pop
inc
jbe
jbe
inc
or
push
insb
shrl
outsb
cltd
mov
cmp
scas
stos
test
syscall
ljmp
imul
inc
dec
popf
inc
or
cmp
inc
jae
shl
lds
pop
cwtl
adc
lods
jne
mov
jp
xchg
ds
repnz
or
mov
movl
mov
call
out
andb
pop
adc
xchg
dec
dec
iret
out
jge
andb
pushf
punpckhwd
loopne
pop
fnstsw
imul
fcomp
sbb
and
fcomps
mov
es
pusha
inc
dec
fldt
lret
or
aam
push
xchg
cltd
aam
xor
lcall
adc
mov
and
mov
lret
fs
sahf
inc
sbb
mov
or
movsl
adc
inc
fyl2x
stos
pop
hlt
pushf
test
push
jno
pop
mov
pop
scas
jmp
fadds
scas
sub
add
sbb
or
sub
sbb
lcall
inc
push
mov
ret
xor
orl
test
sbb
sub
jl
ss
xchg
jmp
or
pushf
xor
add
dec
dec
and
int
mov
lods
pushf
repz
popf
xlat
xchg
cmp
xchg
adc
inc
aad
ret
insb
pop
xchg
dec
lret
inc
push
ret
imul
in
jmp
sub
lods
sub
push
lods
sbb
sbb
arpl
lahf
mov
fistl
ja
and
sbb
mov
fbld
cmp
pop
mov
fimull
jbe
cmp
fs
mov
imul
ret
lcall
xchg
leave
inc
repz
out
pop
mov
xchg
or
push
jbe
cmpsl
fldenv
aam
and
out
dec
imul
pop
fldenv
add
push
test
adc
je
pop
jecxz
js
push
aad
inc
add
adc
into
mov
mov
push
adc
mov
bound
int
jl
bound
mov
jge
cmp
int
xor
stos
js
dec
pop
add
lret
pushl
out
xor
testl
filds
andb
pop
loope
add
shrl
andl
xor
loope
mov
out
pop
or
jo
cmp
sbb
xor
cmc
inc
jnp
or
sahf
das
adc
sbb
imul
stos
adc
cmp
js
dec
push
lcall
cltd
inc
inc
jo
push
sub
loop
out
lods
fcomi
jno
out
pop
repnz
pop
ret
mov
fildl
shlb
and
add
sub
and
and
fidivrs
test
sub
pop
lock
je
xor
sahf
outsl
jp
rcl
fcom
bound
popf
shll
cmp
test
mov
xor
inc
pusha
cltd
fs
mov
pop
jl
dec
lret
jns
aad
inc
fiadds
popa
movsl
jne
lods
push
sub
lret
fcomps
jg
xor
int
lea
pushf
jne
sbb
mov
dec
jl
sahf
lret
lds
rcll
mov
pop
insb
jmp
xchg
lahf
mov
sub
mov
ja
inc
push
mov
dec
jmp
adc
xor
jb
pushf
mov
ljmp
inc
xor
mov
jl
test
cld
movsl
ljmp
lcall
pushf
push
sbb
jmp
into
inc
adc
shll
push
mov
out
ret
inc
addr16
lcall
rolb
pop
repnz
add
dec
push
dec
xchg
mov
or
test
or
lock
mov
lret
out
cmpsl
gs
ljmp
std
push
clc
mov
sub
out
add
mov
inc
push
cmp
push
lods
jno
mov
jb
ljmp
dec
pop
sbbb
das
arpl
adc
int3
lock
inc
rcl
or
testb
fisubrl
xor
mov
pop
push
bound
in
call
push
cmp
lea
dec
dec
roll
addl
pop
mov
inc
scas
mov
or
out
push
popa
in
in
dec
and
push
xchg
fwait
das
call
lods
mul
add
push
xor
add
mov
push
gs
push
mov
mov
adc
fimuls
in
cmpb
cs
or
push
push
adc
je
stos
pop
fmull
xchg
mov
inc
dec
cmp
mov
xor
pop
clc
ret
out
enter
push
cld
inc
pop
pop
and
mov
out
push
jg
jg
adc
mov
dec
add
inc
mov
outsl
add
jb
xor
subl
dec
xor
sbb
xor
mov
sub
mov
or
jb
scas
ja
imul
lahf
aam
push
jo
sub
test
cmp
ljmp
into
xor
xchg
fs
mov
adc
xor
pop
and
mov
cmp
sub
and
cmp
sarb
imul
je
cmp
sub
mov
test
mov
pop
loopne
mov
push
mov
dec
in
push
stos
add
push
push
lret
dec
push
in
lods
or
daa
std
cmp
repz
mov
insl
and
sbb
mov
sbb
jle
pop
add
adc
sub
jg
movsb
fsub
rclb
xchg
adc
std
gs
push
inc
pop
sbb
sbb
xor
mov
andl
add
add
fimuls
cmp
jnp
pushf
add
and
jo
sub
out
mov
dec
les
das
mov
stos
int
mov
or
push
sub
and
pop
sub
cs
in
or
jo
inc
inc
cli
jno
push
ss
into
lock
adc
xchg
push
mov
pop
fmuls
out
leave
js
or
mov
or
stos
mov
cmc
out
jns
mov
jecxz
pop
sub
insb
xor
cmp
jl
clc
sbb
lahf
cmp
dec
testl
lods
mov
fdivs
sbb
in
imul
or
fwait
jb
cmp
das
test
mov
mov
js
cmc
sbb
gs
add
addb
aad
jge
sub
inc
ljmp
rcr
cmp
adc
daa
mov
jno
jno
fbld
sub
popf
into
xchg
inc
aam
ja
xor
mov
popa
subb
xchg
clc
lds
stc
sbb
cwtl
or
enter
pop
or
add
into
or
mov
and
push
movsl
popf
sbb
and
in
lds
push
rcr
pop
sub
test
imul
inc
cmp
ffree
shlb
aaa
add
jbe
xor
xchg
shl
into
test
adcb
adc
or
mov
sbb
xchg
push
fistl
push
pop
xchg
dec
sub
mov
out
lock
call
and
cld
xchg
push
sub
and
insl
xchg
add
jne
cmc
stos
sub
into
xchg
aaa
add
mov
sbb
xchg
data16
or
add
mull
mov
in
lret
icebp
cwtl
pushf
dec
mov
dec
inc
xchg
data16
push
lds
fs
call
rorl
xlat
or
xchg
and
sub
cmp
push
push
pop
dec
aad
cmp
and
sbb
aad
mov
hlt
jns
add
movsb
imul
out
daa
xchg
imul
in
sbb
stc
sub
jne
xchg
testb
and
xchg
pop
sbb
pop
xchg
jl
lcall
outsb
sbb
xchg
push
mov
ljmp
shl
and
inc
sub
mov
gs
jge
xchg
pop
mov
lcall
add
adc
push
cmp
test
xor
push
pusha
daa
daa
lcall
or
inc
jecxz
inc
xchg
mov
and
inc
mov
enter
xchg
enter
mov
or
dec
ret
es
out
or
push
mov
or
dec
sub
repnz
push
adc
je
cltd
push
repz
cmc
lea
and
mov
add
mov
sub
push
xlat
addl
cs
push
roll
rorb
rcrl
mov
stc
cmp
in
jmp
dec
fstl
add
jle
hlt
popa
push
fs
icebp
call
dec
mov
outsb
sti
test
jge
jle
pop
fcos
jl
ja
push
inc
push
hlt
fimuls
shrl
jmp
add
out
inc
nop
push
or
xchg
cmp
push
lcall
mov
cwtl
push
pop
or
loopne
std
fyl2xp1
stos
fwait
and
lahf
cmc
push
shll
js
mov
push
fdivl
push
das
or
in
cltd
mov
lods
pop
das
jno,pn
pop
pop
jbe
xchg
fnstcw
mov
or
mov
leave
xchg
aas
mov
push
fistpll
or
adc
lock
ljmp
lods
lcall
stos
xor
dec
lods
and
adc
sub
filds
or
mov
inc
pop
sub
cwtl
ret
or
mov
sahf
cmpsl
into
aad
xchg
mov
sub
xlat
mov
mov
aas
bound
dec
dec
cmp
adc
call
sub
outsb
inc
pop
repz
jbe
sub
fwait
adcb
cmp
cmp
mov
cs
insb
jne
inc
cmp
mov
mov
xor
clc
add
mov
push
add
sub
or
nop
fwait
sbb
aam
stos
add
std
aas
lods
push
into
jo
enter
mov
add
loop
js
xchg
imul
push
pop
inc
and
jmp
xchg
cmc
cmc
and
mov
into
inc
sub
add
add
shll
xchg
mov
pop
insl
push
jnp
cltd
adc
ja
xor
lahf
sbb
mov
jg
and
push
add
out
pop
je
cmpsl
imul
mov
into
enter
cmp
mov
cmp
cmpb
enter
mov
mov
lods
mov
xor
push
adc
cmp
mov
adc
gs
das
sbb
test
movsb
ss
jl
push
test
pop
pop
push
pop
pop
push
fwait
cmpsl
test
popl
mov
sub
dec
ds
mov
fstpl
jb
and
stc
inc
mov
mov
loopne
cmp
jmp
xchg
cmpl
stos
xchg
loopne
push
clc
cmc
xchg
xchg
enter
dec
jmp
arpl
push
pushf
lds
adc
lret
les
nop
push
inc
xchg
stos
jp
and
into
mov
cltd
jmp
cltd
int3
jns
jnp
xor
xchg
movsl
in
xorl
aad
in
cmpsl
or
cmc
pop
ficoml
fmuls
xor
test
jg
push
mov
shll
cmp
xorl
pop
sti
roll
pop
sarl
jecxz
mov
push
cmp
inc
cmp
inc
jecxz
es
imul
jle
xchg
xchg
mov
inc
pop
xchg
add
dec
dec
mov
cmp
pop
add
in
lahf
jno
fisubrl
add
cs
stc
sub
sbb
or
out
mov
outsl
outsl
mov
jp
idivb
movsb
daa
int
adc
push
cli
adc
sbb
pop
rcrb
in
xchg
mov
inc
fimuls
pop
movzbl
dec
jae
mov
push
xchg
int3
sub
xlat
cmp
mov
data16
fs
enter
inc
icebp
ss
enter
adc
lret
push
mov
call
in
jle
test
mov
mov
clc
popa
inc
adc
mov
sbb
sub
and
sub
in
cld
xchg
in
mov
cmpsb
cmp
and
mov
mov
pop
rcll
mov
xor
cmp
ja
out
push
add
shlb
jmp
cwtl
push
pop
mov
cmp
movsb
mov
mov
mov
std
mov
call
ljmp
ss
and
adc
inc
pushf
sarl
jecxz
mov
inc
rclb
fiaddl
cltd
cmc
imul
addb
into
jbe
movb
lods
pminsw
or
mov
add
popa
jne
adc
sub
in
addr16
add
cltd
mov
jnp
jne
jl
inc
leave
cmp
jle
mov
in
loope
test
mov
xchg
cmpsl
push
leave
js
adc
out
aad
and
pop
inc
fisttpll
ficoms
dec
pop
aaa
into
jae
out
dec
fsubrp
pop
jbe
jmp
sbb
aam
divl
xor
aam
shl
loope
and
mov
shufps
testl
mov
fwait
hlt
add
scas
jae
imul
fsubrs
addr16
sbb
cmp
ret
jae
loope
inc
xor
mov
cld
stos
jb
and
xchg
jne,pt
sbb
leave
insb
fsub
je
dec
jbe
rorl
push
sbb
xor
orb
or
dec
insb
dec
cmc
addr16
mov
test
imul
mov
pop
movsl
cmp
dec
test
mov
pushf
jmp
cld
outsb
sbbb
loope
xchg
insb
sbb
les
cmp
dec
inc
incl
in
aad
and
lret
sub
fidivl
cli
ror
fidivrl
jmp
xor
mov
aaa
dec
sub
push
mov
push
jnp
out
hlt
jo
scas
inc
or
push
imul
push
push
sub
xchg
add
mov
sub
shr
mov
arpl
fisubs
in
jp
pop
pushf
xchg
movsl
fwait
lock
xor
fcmovb
fs
and
mov
je
or
mov
mov
out
scas
daa
arpl
cmpsb
pusha
clc
aam
mov
ljmp
push
fistpl
mov
ficompl
push
jae
movsl
ss
or
movlps
outsb
mov
push
int
lret
lods
loopne
in
movsl
imul
shlb
pop
mov
push
subb
xlat
mov
adc
rcll
pop
xchg
cmp
mov
stc
ret
sub
hlt
bound
bound
repnz
rcr
cmp
or
aam
sahf
adc
sbb
pop
loopne
or
cmpsl
out
dec
jo
or
or
or
jbe
adc
jb
cmp
cli
sub
push
cmpsl
mov
mov
rcll
push
sub
inc
imul
popa
ds
xor
push
jae
jae
sbb
adc
mov
fcompl
jnp
inc
push
fstl
mov
test
jle
xor
rcl
inc
test
fstl
and
je
xchg
popf
add
out
pop
jge
push
jle
movsb
cmp
adc
inc
adc
mov
loopne
mov
adc
mov
cmp
mov
xchg
pop
out
add
mov
xor
dec
pop
cmpsb
pop
sarl
pop
dec
scas
jmp
daa
pop
mov
pusha
pop
adc
mov
or
and
enter
fwait
ret
mov
mov
rcrb
cmp
inc
aaa
mov
push
sbb
cwtl
jecxz
add
loope
pop
pop
cmp
lret
js
xchg
pop
sub
mov
add
jecxz
add
mov
pop
mov
cmp
pop
pop
jne
and
dec
rcll
mov
mov
pop
mov
xchg
lock
lcall
mov
int
lea
fsubrp
cmp
xchg
mov
lcall
ret
cmpsl
out
das
jb
sarb
sub
test
or
push
add
mov
xchg
adc
push
js
push
mov
and
dec
cltd
cmp
add
fwait
mov
jo
rcrb
push
sahf
test
sbb
sbb
xchg
dec
inc
lds
testl
dec
sarb
fiadds
add
lret
pop
mov
imul
adc
cmp
ss
loopne
gs
push
loope
jae
insb
in
and
jbe
pop
mov
or
sub
std
jmp
pop
jnp
pop
cmp
cld
mov
out
inc
nop
ret
outsb
jae
fistpll
pop
out
xor
lods
popa
clc
cmp
sub
stos
cmpb
and
sahf
popf
out
mov
or
sbb
test
lock
dec
sbb
mov
mov
and
movl
sahf
pop
in
popf
pop
push
daa
fldcw
dec
jecxz
das
sbb
adc
xorl
push
rorb
pop
cmp
jl
inc
add
je
orb
rcrb
test
mov
push
and
cli
das
in
add
repz
jo
jo
or
push
ljmp
mov
mov
sub
or
fincstp
ljmp
mov
movsb
mov
mov
mov
in
je
and
and
jae
mov
rorb
mov
dec
jae
push
jmp
sub
xor
filds
popf
sub
stc
popf
shrb
stos
rcl
push
push
repz
inc
int
fcmovnbe
xchg
push
es
int
pop
jo
movsl
xchg
jecxz
mov
cmpsl
icebp
dec
mov
cmp
or
into
adc
ret
mov
fcoms
scas
fstpt
xchg
xchg
out
sbb
mov
inc
sbb
lock
cmp
pop
xchg
pop
jp
push
out
insl
mov
inc
add
ret
outsl
push
cmp
int3
sub
xchg
jns
jle
push
addl
xor
insb
lock
cvtps2pd
out
ja
and
popf
lds
negl
mov
movsb
adc
jmp
mov
call
mov
push
adc
jecxz
call
mov
cmp
js
push
pop
leave
jle
je
stos
cmp
and
pop
xchg
scas
xlat
xchg
dec
popa
inc
lcall
mov
lahf
pop
pop
add
cmp
aaa
scas
loopne
and
dec
and
mov
pop
jmp
mov
mov
lods
jmp
cmpsb
cmp
insl
mov
shll
rcrl
fldt
insl
and
js
push
or
jae
push
push
xor
add
pop
sbb
fchs
cmp
lods
add
xchg
xchg
cmp
test
dec
push
in
in
fiadds
cmp
sbb
stc
xor
ret
add
jne
daa
in
adcb
test
pop
lcall
sbb
push
jg
pop
or
ret
enter
sub
lcall
icebp
in
dec
stc
cmc
hlt
rclb
pushl
mov
subl
in
sbb
pop
test
insb
es
xor
sarb
push
aaa
test
xor
jmp
ja
scas
int
loopne
adc
jmp
in
jne
pop
push
stc
ret
arpl
mov
push
lahf
and
decl
scas
mov
ja
sbb
pushf
push
cmc
pop
jns
scas
xor
push
scas
popf
sub
jg
jp
jge
push
out
lods
or
nop
dec
xor
es
add
push
sbb
dec
repz
out
push
push
cmp
stos
jno
clc
cmp
mov
or
inc
inc
push
mov
jl
cmpsl
insl
sbbb
push
jnp
cmp
rcrb
pop
jns
dec
jp
xchg
gs
xchg
mov
mov
loop
lret
sub
lea
xchg
lods
bound
pop
xchg
cmpsb
pop
adc
pop
pop
and
movhps
jle
sub
sub
in
es
mov
cli
cmpsl
in
cld
mov
sub
pop
push
xchg
es
lds
dec
or
mov
push
jl
jge
popa
cmp
popf
loopne
scas
and
cwtl
shlb
sarb
ret
jecxz
push
les
adc
or
negb
leave
and
and
fnstsw
jmp
cmp
cltd
loop
pop
add
pop
lret
mov
cmpsl
inc
jo
dec
stos
lret
inc
daa
sbb
out
inc
cmp
xchg
adc
lahf
subl
cwtl
and
repnz
xlat
pop
cmpsl
adc
stos
int3
cltd
jns
jnp
xchg
xlat
popf
bound
pop
pmullw
lds
ljmp
pop
repz
inc
imul
inc
sbbl
popf
ja
push
imul
lds
and
mov
or
std
movb
jmp
sub
push
stos
jne
cmp
add
in
add
pop
test
xchg
push
mov
cmp
fisttpl
or
dec
cltd
and
lgs
cmpsl
in
adc
adc
jp
test
inc
stos
call
adc
jge
and
mov
inc
call
sub
imul
stos
sbb
jle
push
inc
lcall
and
jae
mov
dec
cmp
xchg
dec
mov
repnz
loop
pop
rclb
sub
sub
mov
jno
cmp
scas
mov
cmp
inc
pop
in
movsl
dec
mov
jmp
jbe
add
push
mov
test
xor
pop
mov
stos
test
pop
jb
gs
xchg
std
add
push
out
repnz
cs
dec
cli
popa
loope
in
gs
and
sbbl
dec
push
inc
push
lret
and
dec
xor
mov
test
xor
mov
fld
or
ss
daa
loopne
fildl
addl
mov
movsl
xor
mov
cmp
pop
in
push
add
sub
jo
aaa
dec
stos
popa
std
fidivrs
pop
stos
mov
cmp
push
xchg
inc
sub
leave
mov
dec
fs
pusha
mov
cwtl
pop
ljmp
imul
js
jmp
out
rcr
outsl
adc
icebp
push
insb
idiv
xchg
incb
xor
xchg
jno
add
jnp
sub
push
or
push
mov
sbb
mov
mov
jnp
rcr
push
xor
aad
test
xchg
mov
push
cld
xor
mov
rclb
xchg
jbe
inc
mov
stos
xchg
xor
imul
sarb
inc
shrb
cmp
rcr
lahf
inc
add
int3
inc
push
lods
stos
push
sbb
repnz
testl
test
mov
notl
les
mov
loop
pop
cmc
pop
dec
jmp
je
pop
cmp
popf
xchg
std
wrmsr
adc
adc
mov
push
push
enter
lret
dec
sbb
cmp
movsl
das
daa
mov
fnstsw
cmpsl
sti
xchg
or
dec
fisubl
mov
int3
sbb
and
dec
fs
gs
subb
adc
addb
push
daa
jp
xor
mov
push
fisubl
sbb
pop
mov
xor
mov
xchg
jne
adc
cmp
or
lcall
adc
sar
and
outsb
ret
stc
imul
add
mov
cli
outsb
adc
dec
sti
imull
scas
ljmp
daa
xchg
addr16
or
out
cmp
sub
leave
sub
aam
shrb
push
in
pop
xchg
ret
cli
and
xor
das
push
mov
loopne
xchg
adc
icebp
test
mov
mov
sub
jle
imul
dec
adc
iret
push
mov
push
cmp
popa
dec
xchg
fistpll
mov
bound
mov
stc
out
inc
xor
add
push
and
xor
and
fdivrs
fistpl
push
jae
add
pop
xor
fadds
shlb
pop
pop
in
xor
data16
xchg
fwait
data16
arpl
inc
sbb
adc
adc
out
mov
or
push
xor
int3
xchg
lock
js
jle
cld
mov
not
imul
sbb
jb
xor
jbe
into
test
or
jp
test
add
sub
mov
sti
ror
and
mov
pop
leave
dec
pop
inc
push
add
sahf
fdivs
pop
pop
mov
fwait
icebp
sub
cld
fistpl
ja
roll
in
flds
fsubr
insb
sbb
mov
or
repz
xchg
cli
icebp
aad
mov
sub
testl
adc
jmp
xchg
sub
cmp
dec
sbb
sarl
sbb
adc
out
add
jne
dec
fstpl
stc
imul
push
sub
jnp
data16
mov
pop
pop
in
and
jg
movsl
gs
add
push
ret
ljmp
loop
dec
mov
jo
lcall
push
test
sbb
fmull
pop
mov
mov
or
lea
xlat
lret
pop
ror
adc
xchg
adc
aaa
mulb
fimuls
sub
add
push
sub
dec
fdivl
aas
inc
ds
adc
outsl
cli
loop
or
jae
jnp
inc
adc
push
and
scas
pop
stc
es
loope
mov
sub
push
sub
sub
repz
jns
loope
adc
inc
pop
outsl
pop
push
cmp
xor
in
lcall
mov
mov
mov
push
jbe
add
push
ljmp
push
or
daa
mov
bound
movsb
sti
pusha
sub
mov
dec
andb
sahf
inc
push
aam
mov
movsl
cmc
mov
and
leave
inc
inc
aaa
or
out
sbb
ret
aas
in
mov
pop
rol
push
pusha
lret
jno
jp
out
stc
orb
push
dec
les
fmull
dec
lea
movsl
push
mov
fadd
repz
add
pop
out
mov
sub
aad
and
bound
lock
push
data16
scas
dec
loop
mov
cltd
jg
xchg
adc
fldcw
jecxz
adcb
pop
int
jmp
ror
aad
aam
movsl
sarb
lds
cmpsl
cld
cmp
test
out
lcall
fnstenv
mov
or
or
setne
mov
fimuls
adc
push
push
dec
mov
loopne
neg
sti
decl
pop
bound
fwait
xor
sbb
mov
mov
int
adc
arpl
inc
mov
fisttpll
dec
js
adc
enter
mov
mov
fistps
sub
inc
xchg
popl
adc
nop
jl
push
pop
lock
pop
insb
test
out
mov
or
pop
mov
mov
jle
xor
ret
loopne
fimull
flds
lods
fistpll
push
mov
jmp
inc
jl
push
dec
xchg
and
clc
imul
or
add
xchg
hlt
stos
mov
mov
and
mov
adc
jge
mov
shlb
std
sub
sub
pushf
lret
mov
push
dec
push
popa
shl
mov
repnz
xor
cmp
stos
cmc
adc
mov
popa
cwtl
fbstp
pop
jmp
pop
sub
add
add
jge
add
mov
dec
call
xchg
cmpsb
xor
fwait
mov
fidivrs
sbb
mov
add
mull
mov
jns
pop
inc
out
jne
roll
data16
sub
out
adcl
jle
mov
or
cld
sbb
stc
faddp
adc
int
add
imul
aad
lret
insb
cmp
jecxz
or
mov
es
es
test
sbb
push
sub
in
int
cmp
adc
mov
cmpsb
fsubrl
mov
cmp
iret
xor
stos
shl
xchg
fwait
mov
mov
test
xchg
aaa
out
call
adc
xchg
dec
outsb
mov
shll
sub
add
and
movsl
mov
cmpsb
movsb
sub
pushf
sub
mov
hlt
jmp
or
ja
inc
movsb
jne
mov
call
movsb
mov
rolb
aas
loope
popf
cltd
gs
popa
pop
sub
inc
outsl
pop
xchg
and
dec
fstl
cltd
mov
or
mov
lcall
push
mov
aas
and
test
jno
mov
movsb
orb
stc
mov
movsl
inc
repnz
aad
in
push
das
js
stc
fs
jnp
out
mov
mov
icebp
frstpm(287
sbb
lea
xchg
dec
js,pt
gs
pop
xchg
negl
jge
mov
ds
push
mov
movsb
lret
cmp
pusha
sti
inc
pop
and
push
pop
xchg
aad
lea
lcall
dec
or
xorb
jge
out
mov
mov
fwait
pop
and
pop
andb
into
bound
movsl
daa
imul
jne
nop
mov
es
push
into
push
dec
xor
xchg
in
pop
ficompl
jmp
ret
fisubs
loopne
js
xlat
adc
pushf
bnd
repnz
mov
cmp
and
xchg
mov
mov
dec
mov
insl
sub
xchg
jge
pushl
cltd
and
arpl
mov
js
pop
cmp
inc
inc
sarl
mov
insb
clc
out
jmp
mov
push
out
sarl
out
fsubrl
adc
inc
sub
call
in
outsb
xor
mov
and
dec
sub
mov
dec
arpl
xchg
lods
sub
mov
pop
lea
sub
push
xchg
sbb
or
addr16
cmp
out
push
out
je
int3
test
stc
ret
and
dec
cmp
daa
push
bound
daa
push
mov
jbe
adc
adc
mov
xchg
push
js
inc
dec
out
mov
loop
jecxz
jae
inc
dec
shll
in
adc
lods
or
push
fldl
fcoms
enter
test
pop
mov
and
mov
movswl
and
dec
mov
pop
shl
or
rolb
add
rep
or
out
xchg
xchg
jno
lcall
call
xchg
sti
shll
out
sbb
shlb
cmp
pop
out
bound
jge
stc
cmpsb
and
cmp
sub
inc
push
dec
loop
movsl
imul
and
sbb
push
in
add
or
dec
ds
loopne
mov
fnstsw
mov
pop
cmp
and
jb
test
mov
or
push
lahf
imul
sbb
test
mov
mov
push
in
cltd
stos
aam
adc
push
dec
imul
cwtl
inc
jl
dec
cmpsb
movb
mov
or
mov
jno
push
push
fadd
fildl
pop
into
std
out
pop
jle
mov
lret
in
pop
loop
inc
test
push
loop
or
jbe
or
and
ja
testb
xor
test
pushf
pop
mov
push
mov
pop
imul
cli
ret
aas
scas
pop
dec
mov
sub
push
rorb
mov
movsb
insl
pop
add
pop
sub
cmp
mov
xor
pop
adc
stc
sub
adc
lds
lea
stc
ds
jbe
push
xchg
or
cmp
out
dec
mov
sbb
dec
xchg
cmp
add
sar
jge
outsl
jp
fldt
dec
inc
xor
sbb
push
lret
imul
subb
dec
sbb
gs
mov
pop
lcall
movsl
sbb
roll
add
movsb
notb
std
cmp
pop
jg
sbb
mov
outsb
leave
push
in
push
dec
mov
movsb
mov
cltd
test
inc
and
test
sbb
shlb
xchg
es
jmp
or
adc
clc
dec
inc
in
add
rcr
addr16
sub
push
out
add
cmp
sbb
xor
xlat
add
and
js
mov
push
fidivrl
lds
aaa
push
xchg
cmovl
dec
adc
in
clc
jmp
or
pop
popa
xchg
je
divb
dec
orb
sarb
outsl
adc
dec
cmp
div
out
fcmovnu
pushf
hlt
sarb
out
mov
ljmp
ja
adc
stc
into
add
fisttpll
std
jle
clc
sbb
xor
inc
cmp
mov
arpl
daa
add
push
push
out
sub
out
int
clc
fwait
xlat
sub
lds
cmpsb
mov
pop
hlt
leave
sbb
mov
adc
ljmp
mov
push
out
es
test
ljmp
jg
pop
outsl
fsubrs
test
idivl
jecxz
out
mov
sub
pushl
sahf
sti
dec
or
test
aam
cmpsb
decb
mov
into
jmp
jno,pt
shrl
subl
call
inc
jnp
test
pop
inc
lods
dec
jecxz
sahf
cs
lods
shlb
icebp
and
pop
mov
xor
loopne
movsl
dec
pop
gs
or
cld
inc
inc
aas
loope
ljmp
xchg
imul
mov
cmp
loopne
push
or
mov
mov
out
pop
cmp
ljmp
pop
mov
sub
push
adc
fwait
adc
mov
decl
les
mov
cmpsl
inc
or
jecxz
xor
add
xchg
inc
inc
dec
lods
repz
loopne
lods
arpl
mov
sti
jge
cli
imul
inc
addl
pop
stos
mov
pop
and
adc
roll
adc
jl
loopne
test
ljmp
push
push
mov
sahf
int3
and
lret
push
jnp
daa
scas
loopne
aas
hlt
inc
jns
cltd
imul
adc
sti
std
femms
inc
pop
call
jl
cmpsb
ret
mov
andb
sub
pop
loopne
dec
lods
sti
jnp
rcrl
lea
mov
je
imul
dec
jb
pop
mov
cmc
xor
pop
out
pusha
xchg
pop
inc
ret
aad
js
dec
jnp
sub
cld
xor
shrl
xchg
mov
mov
test
addr16
loop
data16
jbe
cmpsl
push
jle
orb
or
inc
in
jns
mov
add
sbb
loopne
mov
add
out
mov
in
pop
imul
adc
adc
pop
adc
loop
and
inc
dec
lods
jb
out
mov
jne
xchg
jmp
aad
test
jp
aas
pop
outsb
jl
sbb
sarl
cmp
test
push
mov
add
pop
es
mov
sbb
imul
jge
inc
repnz
int
adc
fldenv
jmp
mov
mov
outsb
sahf
repz
xchg
test
mov
cmp
jbe
sbbl
cmp
lods
hlt
cmc
dec
movsb
nop
iret
add
stos
mov
sbb
out
mov
jne
pop
mov
outsb
aaa
mov
stc
fs
xlat
push
xchg
and
leave
cmpsl
popa
pop
or
shrl
inc
fcmovbe
sbb
mov
xchg
or
jae
jmp
dec
jbe
mov
xchg
cmp
orb
or
es
sbb
dec
das
in
out
lcall
fs
dec
shl
movhlps
mov
push
cwtl
xor
addr16
lcall
jecxz
daa
sub
sub
inc
pushf
movsl
sbb
push
dec
sarb
inc
and
mov
mov
jo
adc
lahf
xchg
stc
into
adc
sbb
pop
iret
xchg
dec
mov
pop
mov
add
pop
inc
sub
mov
popa
jbe
pop
cs
popa
sti
push
dec
loopne
stos
mov
jmp
shl
daa
out
mov
int
pop
mov
xor
add
test
cs
push
push
fistpll
mov
std
fwait
jb
dec
jp
cwtl
andb
mov
pop
divps
sarl
cmp
fs
cmpsl
loopne
clc
xor
pushf
popf
lcall
dec
mov
aam
pop
sbb
jge
push
or
std
jmp
mov
insb
lea
testb
add
fcoml
or
jno
fisttpll
inc
cmp
inc
mov
xor
loope
xor
insl
mov
push
es
ret
jle
sbb
gs
cs
aam
pusha
sti
out
adc
xor
and
repnz
or
inc
dec
pop
sahf
inc
mov
fsubrl
mov
inc
xlat
adc
cmpsl
arpl
add
fdivr
and
pop
sti
dec
pop
xor
dec
lea
leave
je
cld
mov
sbb
pop
or
clc
shrl
bound
or
or
aad
jge
push
fldcw
rolb
in
test
add
loopne
mov
jae
push
fcom
fcoml
inc
or
fs
xchg
dec
stos
adcl
es
sbb
pusha
clc
jo
sub
adc
testb
inc
mov
xor
push
jne
lret
into
pop
outsl
mov
push
push
lcall
xlat
or
push
cwtd
cs
subl
push
xor
xchg
out
xchg
add
push
loope
fsubl
data16
cmp
insl
daa
in
test
fisttpll
xlat
lods
pop
push
mov
je
xchg
sub
jp
add
jge
dec
lds
push
in
pop
xchg
sbb
insb
mov
or
cmpsl
or
add
stos
add
addr16
inc
jbe
sbb
inc
fs
call
scas
testl
or
adc
sub
test
lahf
stos
jmp
subl
movsb
and
lahf
cs
jae
pop
mov
sbb
jne
loop
adc
test
xorb
mov
jb
or
idivl
xor
jbe
rcll
shll
xchg
or
scas
test
ds
inc
mov
lret
pop
lret
mov
loopne
lea
and
test
lcall
xchg
xchg
cmp
jbe
imul
pop
sbb
mov
mov
mov
cwtl
int
je
int3
fbstp
fdecstp
fldt
mov
jecxz
lods
inc
out
xchg
fcompl
push
cmpsl
xor
nop
mov
arpl
js
sub
inc
lock
hlt
pop
ljmp
push
fildl
int3
popl
sti
pop
dec
js
push
pop
lahf
mov
add
cmp
cld
jle
dec
xor
cmp
out
mov
pop
in
repnz
cmp
dec
jbe
cli
push
std
repnz
dec
out
pop
dec
aas
lret
fcomip
sub
pop
and
popf
aam
inc
xchg
dec
int
inc
nop
mov
mov
pop
sahf
jp
lcall
cmc
and
movsl
pop
out
xchg
add
js
rcrl
out
cmp
in
mov
je
jns
outsl
jo
dec
repnz
dec
xor
clc
or
movsb
movsb
gs
lods
jge
jne
pushf
sarb
imul
jno
lds
sbb
lahf
sbb
cs
cltd
subb
add
push
and
mov
cmp
xchg
cmp
ss
inc
sbb
incl
rolb
add
push
lea
push
imul
stos
loope
fistpll
inc
xlat
sub
pop
dec
push
inc
push
fs
dec
jle
sti
lcall
inc
out
negl
inc
inc
call
cli
dec
mov
loop
mov
sti
or
mov
and
mov
fstpl
mov
idivb
test
xor
in
jns
dec
test
clc
xchg
cmpsl
or
lret
loop
jl
and
lds
call
jae
mov
shl
addr16
fs
pop
cmp
and
pop
mov
jecxz
sub
outsb
add
test
mov
sahf
add
fldenv
imul
mov
xor
pop
testb
and
arpl
fisttpll
std
mov
mov
addb
mov
xchg
mov
mov
arpl
sbb
xchg
xchg
enter
inc
fistpl
xchg
dec
out
in
jg
or
fscale
outsb
xlat
mov
test
xor
cmp
dec
mov
ljmp
pop
icebp
push
mov
sahf
jl
xor
sahf
mov
dec
jb
add
xorl
and
jmp
and
jae
sub
mov
and
fdivrl
dec
ret
sbb
mov
repnz
icebp
mov
mov
daa
adc
das
test
push
cltd
mov
scas
ss
sbb
xchg
aas
out
ja
fnstenv
dec
dec
mov
mov
aaa
inc
loope
sbb
jle
sti
xchg
jge
int3
mov
xor
insl
cmp
test
jle
fwait
movsl
jbe
xor
rorl
xor
xchg
ds
sbb
negl
jne
xor
in
or
in
clc
repnz
std
xchg
xor
test
scas
test
fbld
xchg
mov
xor
bsr
or
mov
pop
and
pop
cmp
fmuls
jmp
dec
mov
and
pop
ret
sub
and
pop
jbe
movsl
push
xchg
xchg
out
data16
fsubl
loopne
stos
jb
mov
dec
jnp
shrb
pop
xchg
or
test
mov
outsb
not
sub
js
in
ret
cld
and
mov
add
popl
iret
adc
add
dec
mov
sbb
add
cmc
jb
in
pusha
or
lods
dec
imul
push
out
push
mov
outsb
scas
pop
mov
xlat
push
dec
add
inc
add
jo
into
add
and
pusha
xchg
stc
hlt
pop
dec
fdivs
shl
add
sbb
sub
fst
and
repnz
aaa
call
sub
test
mov
out
pop
cmpl
mov
mov
or
imul
fsubl
idivl
jbe
adc
cmp
loope
mov
out
cmpsl
inc
jnp
adc
cmp
inc
mov
xchg
bound
and
adc
in
xchg
jbe
lret
sbb
loop
aas
mov
dec
add
mov
and
outsl
test
test
inc
rolb
mov
jae
or
scas
pop
mov
jp
and
pop
pop
and
aad
ret
outsw
dec
ja
in
cmp
ja
out
addl
ja
adc
pop
jns
loopne
mov
dec
add
mov
fidivrs
in
jg
push
imul
sub
xor
dec
or
pop
or
jnp
movswl
sub
and
fstpt
xor
push
pop
int3
int3
insl
inc
xchg
imul
inc
cltd
in
movsb
push
outsb
or
inc
pop
dec
aam
sbb
fbstp
fs
test
inc
clc
sub
xchg
cltd
push
xor
push
xor
xor
push
push
cmp
cmp
aas
inc
adc
lret
shll
or
or
or
in
loop
push
mov
sub
add
xchg
pop
or
mov
cmpl
pop
mov
add
popf
loopne
jl
xchg
mov
outsb
pop
les
push
fsubp
or
sbb
call
js
mov
outsb
sti
outsb
mov
mov
push
xor
fs
fcmovne
inc
clc
jb
in
in
push
push
mov
pop
pop
and
and
pop
or
pop
push
stos
sti
setbe
fidivl
xchg
sub
les
sbb
push
xchg
adcl
fistpll
dec
test
pop
xchg
lods
pop
and
andl
es
out
test
adc
shll
and
sbb
push
fadd
fwait
and
fcoml
out
jbe
xchg
push
xlat
ret
sub
and
jecxz
subb
or
es
lcall
pop
lods
ss
movl
push
jae
scas
shlb
ret
xchg
or
hlt
test
data16
and
les
test
cmp
mov
dec
ja
cmp
inc
mov
test
mov
mov
mov
xor
dec
jl
adc
shlb
xchg
or
aam
jae
push
push
pmullw
inc
stos
lcall
xchg
xchg
or
sub
nop
popa
cwtl
out
pop
mov
test
pushf
je
das
and
jae
test
cli
mov
mov
sub
je
fwait
or
and
mov
fldcw
in
push
push
idivb
or
ja
scas
cmp
mov
add
ficoml
popa
pop
sti
aam
dec
fildll
insl
cli
xor
mov
cmpsl
arpl
push
dec
add
jo
je
fstl
sbb
sbb
inc
call
loope
cmp
pop
imul
clc
in
push
xchg
int3
jmp
and
inc
jb
jns
fmulp
int3
adc
rorb
lds
daa
push
dec
loopne
popf
xchg
pop
pop
lea
test
popf
movsb
push
icebp
push
daa
inc
mov
jo
sbb
roll
xor
call
push
loope
pop
dec
sahf
mov
insl
xchg
and
lods
xchg
cltd
into
mov
nop
dec
push
cmp
shll
jae
es
sub
inc
mov
in
ret
flds
ret
mov
out
xchg
jno
das
mov
lock
dec
out
rol
cwtl
jp
pop
mov
xchg
pop
es
ret
push
out
mov
lcall
clc
add
loopne
add
mov
xchg
lock
scas
shlb
mov
jae
aad
pop
stc
iret
jo
inc
push
insl
aam
push
out
lahf
xchg
push
test
mov
xor
inc
pop
sub
loop
or
pop
int3
pop
popf
fs
cmpsl
gs
out
cvtps2pd
inc
mov
je
dec
mov
std
sub
push
inc
or
adc
jge
inc
xor
mov
cmpl
test
dec
aad
aam
jge
cmp
adc
cwtl
xor
sbb
mov
jno
faddl
push
mov
xor
iret
testb
iret
out
or
lcall
mov
repnz
xor
sub
add
xchg
sbb
mov
and
mov
outsl
les
les
in
xchg
int3
imul
das
fildl
pop
inc
add
movsl
rclb
mov
dec
leave
fisttpll
xchg
mov
jp
lret
mov
xchg
test
das
add
pop
adc
pop
push
daa
iret
mov
std
int3
lds
inc
outsl
inc
sub
dec
addr16
or
imul
aaa
mov
jmp
xchg
inc
sti
push
or
xor
pop
cs
xchg
dec
xchg
stos
shrl
inc
dec
test
bound
xchg
jge
add
inc
dec
mov
mov
pop
and
and
adc
pushf
cmp
lret
xchg
aad
hlt
xchg
inc
dec
mov
adc
lret
push
cltd
in
mov
das
aam
lcall
pusha
out
sbb
and
sbbl
lea
std
test
jb
das
sub
add
pop
and
test
adc
and
jle
jge
ja
push
lcall
lds
and
ljmp
lret
js
mov
loope
jb
insl
call
xor
jno
jg
gs
sti
sarb
jp
in
scas
dec
dec
xchg
jae
clc
and
push
dec
or
add
and
and
xchg
mov
or
mov
push
adc
mov
loop
xchg
retw
xor
jo
cli
add
jp
inc
in
andl
fidivl
xchg
jge
scas
pop
fnstcw
jp
rcrl
cltd
ljmp
xor
cld
stos
in
cmc
or
xchg
daa
aad
fiadds
mov
je
lret
cltd
xor
sbb
add
or
aam
push
test
sbb
call
sub
ja
mov
sbb
push
repz
inc
sbb
inc
rcr
xchg
or
mov
imul
xor
adc
insb
decb
xlat
xor
cmp
enter
out
inc
aaa
mov
mov
fistl
out
lret
dec
icebp
cli
fwait
jno
or
push
imul
aas
stos
inc
subl
stos
ja
and
jne
sub
sub
and
inc
in
scas
rolb
dec
jo
mov
stc
jmp
hlt
mov
test
scas
cmp
inc
mov
cmp
aaa
int3
xor
out
push
cmpsl
popa
xor
test
mov
fiaddl
xorb
cli
in
cmp
stos
and
fidivrl
xchg
in
cmp
push
adc
fisubl
cmpl
sub
and
sbb
lcall
and
test
pop
mov
cmc
repz
pop
jg
mov
das
test
popf
jb
jecxz
aad
ss
jb
sbb
in
lock
pop
movsl
rcrl
mov
out
or
inc
sbb
daa
aas
xor
movsb
or
jbe
sbb
or
popa
cmp
push
jns
out
lods
jl
imul
xchg
rclb
sbb
arpl
test
xchg
sahf
mov
popa
imul
cmp
sbb
popa
decl
push
dec
pop
jo
rclb
pushf
push
out
and
pop
mov
gs
popa
xor
imul
into
jp
test
jnp
cltd
pop
mov
scas
dec
push
outsb
sbb
sbb
movsb
mov
or
addl
popf
lods
arpl
cmpsl
mov
inc
mov
mov
cli
loope
sti
loop
or
idivl
sbb
enter
xor
icebp
and
jae
and
and
sbb
pop
jbe
insl
push
decl
xchg
cmp
cld
push
push
icebp
test
scas
not
push
dec
loopne
sub
jne
mov
mov
cmpl
adcl
movsl
inc
pop
icebp
shll
xor
push
xchg
jmp
das
xchg
jns
scas
xor
hlt
push
inc
cmp
xlat
ret
sbb
hlt
add
movsl
gs
test
jns
mov
dec
ja
sub
in
jecxz
jg
lret
out
pop
push
addr16
pushf
aaa
stc
into
dec
mov
insl
idivl
xor
ja
repz
decl
jmp
push
mov
js
jmp
xchg
inc
cmpsb
jns
sub
fsubs
mov
mov
and
scas
es
subb
dec
movsb
ds
rolb
call
hlt
rcr
fcompl
mov
jno
nop
push
bound
xchg
pushf
or
add
and
in
cmpl
inc
xlat
mov
jno
pop
imull
iret
adc
bnd
sub
adcl
movnti
mov
mov
cltd
xor
lret
adc
test
push
arpl
aam
lods
push
jno
outsb
andb
adc
rcll
loope
or
push
aam
pop
insb
roll
cltd
dec
add
mov
mov
sbb
testl
in
push
loopne
xor
jl
add
jae
xor
iret
loopne
mov
je
loopne
dec
fbstp
popa
data16
jge
mov
scas
insl
pop
push
imul
arpl
mov
mov
sahf
cs
sub
sarl
or
pop
adc
jmp
rcl
inc
fwait
or
jns
fcmovne
test
icebp
push
xor
std
fndisi(8087
les
negb
aas
mov
xor
xchg
insb
sbb
pop
push
lcall
out
int
pop
push
movsb
add
adc
mov
xchg
push
jns
ror
jno
leave
add
jmp
lret
mov
ret
push
hlt
lcall
cmpsl
xchg
cmp
loopne
nop
or
in
mov
rorb
xchg
dec
push
cs
sbb
cmp
hlt
xchg
xchg
fisttps
lods
lret
lcall
pop
mov
roll
test
ret
jo
frstor
lods
xchg
jnp
mov
mov
mov
and
inc
inc
and
xchg
imul
cmp
dec
test
movsb
cmovp
mov
fs
insl
lock
arpl
mov
mov
jno
jne
add
and
jecxz
pop
inc
jmp
xor
dec
ret
in
testb
loopne
negb
mov
pop
and
push
out
leave
std
lods
jecxz
xor
shll
imul
jo
sub
jl
cmpsb
sub
gs
cmc
add
dec
lock
jo
jo
and
call
pusha
mov
or
out
jmp
xor
lret
cmpsl
sbb
cmp
fsubr
enter
mov
adc
lcall
pusha
mov
mov
and
in
sub
popf
push
cld
mov
cmp
in
and
fwait
jp
mov
repnz
fs
cmp
xchg
and
inc
xchg
push
add
cmp
lahf
fnstenv
fcmovnu
xchg
push
adc
push
lret
loope
icebp
cmp
and
popa
aaa
movsb
test
adc
pop
jle
and
cmp
ds
pop
cs
outsb
test
jno
pop
or
lock
pop
loope
xchg
dec
lds
jns
dec
xor
scas
cmp
push
sub
mov
out
es
adc
inc
mov
mov
dec
movsl
sub
dec
adc
xchg
mov
adc
fdivl
jo
push
pop
movsb
mov
mov
orl
push
rcll
pop
add
pushf
test
cld
test
sbb
scas
cmpsl
shrb
pushf
pop
mov
dec
add
inc
std
and
adc
or
push
adcl
mov
adc
pop
aaa
movsl
fstl
dec
arpl
hlt
inc
add
dec
mov
adc
std
out
ret
sbb
xor
lcall
adc
push
mov
ret
fisttpl
dec
cwtl
ret
cmp
dec
adc
popf
ljmp
xchg
stos
cmp
jl
push
mov
jmp
add
and
mov
fsub
test
jle
mov
movsb
outsb
dec
test
imul
lods
jbe
cmc
and
nopl
repnz
clc
ljmp
xor
dec
pop
lret
mov
repz
das
fstpl
mov
push
popa
push
cmc
dec
cmp
out
xchg
push
lea
insl
dec
dec
xorl
neg
into
rcl
add
sbb
sub
inc
dec
mov
inc
add
and
repnz
jb
loopne
jnp
cs
mov
insl
xchg
pop
jbe
push
sbb
jecxz
std
bound
dec
pop
dec
mov
adc
inc
pop
jne
pop
xchg
into
addr16
rorb
imul
jne
pop
add
icebp
cmp
mov
lods
push
movsl
sbb
rcr
in
cmc
pop
pop
push
gs
sub
xchg
pop
jnp
outsl
jge
dec
cmp
das
jno
xor
jle
mov
push
movsb
add
pop
insl
push
ret
loop,pn
pop
and
ret
mov
pop
shlb
sub
sbb
pop
pop
inc
rep
int
dec
in
dec
push
mov
mov
fsts
aad
push
fstpl
push
loopne
pop
cmpsb
idivl
mov
fstpt
adc
fstp
and
imul
pop
mov
packssdw
arpl
jmp
in
fisubrs
mov
sbb
pop
inc
cld
jno
xchg
xor
out
dec
sbb
sbb
pop
cmpsb
push
inc
dec
xchg
jp
mov
sbb
dec
ss
fnsave
sbb
mov
ljmp
and
pop
sub
sub
cld
push
cld
add
sub
cmp
jecxz
movsb
lods
inc
test
rcr
test
test
imul
sub
sub
aaa
dec
ja
xor
sbb
jnp
jnp
xchg
push
mull
xchg
xchg
daa
dec
mov
add
mov
fld
cmpsb
pop
imul
cmpsb
orl
fdiv
cmp
loop
ss
mov
cwtl
leave
jo
jns
inc
mov
repnz
insl
hlt
mov
pushf
mov
mov
roll
jp
adc
call
sti
test
stos
fnstsw
mov
fwait
nop
outsl
adc
arpl
je
fisttps
in
xor
in
or
xor
jmp
iret
push
push
sbb
pop
dec
cmpsb
cmpl
leave
sub
ja
xchg
xor
jo
or
adc
testl
jns
inc
push
test
imul
popa
fdivs
xchg
cvttps2pi
and
adcb
arpl
out
and
mov
pop
push
cmp
lock
shrl
lcall
jb
dec
xchg
wbinvd
hlt
jecxz
js
not
out
cmp
aaa
push
fistl
shr
adc
xchg
aaa
loopne
clc
stos
popf
inc
dec
xlat
adc
or
jo
lods
in
jle
and
cmpsb
sti
test
int3
pop
scas
pop
adc
cld
fidivs
and
jo
dec
ret
std
cmc
fsubp
ffree
repnz
mov
aaa
and
mov
fcomps
xor
xchg
movsb
dec
mov
int
shlb
mov
ljmp
jg
enter
icebp
popa
stos
test
pusha
add
jmp
aas
jl
xor
jnp
rcll
je
add
fnstcw
mov
fsubrl
or
dec
or
push
pop
test
dec
cmp
mov
pushf
sub
sbb
lcall
sbb
push
test
nop
test
push
cmp
fs
mov
jmp
shlb
jle
xor
loopne
sarb
push
cli
hlt
dec
insb
dec
adc
mov
push
enter
stc
jnp
xchg
push
xchg
mov
xor
cltd
push
bound
mov
lods
test
adc
xor
mov
gs
test
mov
add
pop
imul
fwait
sarb
and
lock
push
testb
push
pop
mov
jae
imul
sahf
adcb
or
cmpsl
stos
pop
jp
insl
loopne
dec
add
mov
adc
scas
lea
xchg
mov
xorb
inc
mov
cmp
jb
xor
adc
push
mov
mov
dec
mov
mov
adc
lds
or
fcoms
mov
xor
cltd
cmc
out
pusha
ja
pop
gs
cs
addr16
inc
pushf
jge
sub
in
not
add
movsb
mov
dec
add
adc
add
pop
xadd
cmc
mov
ficoms
jmp
aaa
xchg
lods
xor
aad
sbb
popa
dec
xchg
mov
outsb
sbb
pop
xlat
jge
aad
pop
stc
inc
outsb
js
inc
and
adc
test
mov
cmp
jae
test
push
lcall
cmp
pop
fcmovb
sti
add
mov
mov
insl
add
out
dec
jecxz
gs
jle
jl
push
int3
push
movsl
shrl
mov
pop
cwtl
addb
stc
and
add
lock
mov
or
or
arpl
jno
push
lock
sbb
dec
int3
dec
ret
lea
arpl
fdivrp
mov
enter
mov
mov
jg
sbb
push
insb
jno
and
std
or
adc
pop
ret
lds
push
jb
cmp
dec
enter
loop
inc
dec
cmpsl
sub
adc
sub
mov
mov
mov
repz
in
nop
and
outsl
cltd
adc
xchg
mov
stc
out
cmp
mov
xor
mov
daa
mov
stos
xchg
int3
call
roll
mov
aam
push
adc
inc
jl
cmc
xchg
lret
out
insb
data16
inc
flds
test
adc
jne
fcmovnbe
inc
cmp
test
inc
shrb
sbb
scas
xor
loope
sub
sub
int
jg
or
xlat
mov
test
ds
in
loop
aaa
bound
imul
ficoml
sub
lea
rorl
out
cli
lret
pop
jb
and
add
stc
in
stos
push
dec
xchg
aad
rclb
rcll
cmp
inc
dec
sbb
call
sbb
push
and
cmp
test
xor
iret
and
bound
jo
mov
jmp
mov
pop
pop
arpl
sarl
in
push
mov
lcall
std
insl
nopl
gs
sti
mov
cmp
mov
iret
cmp
cltd
add
fists
in
cltd
ljmp
sti
push
mov
fsubr
mov
pop
lret
je
arpl
loop
cmpsb
sahf
enter
stos
push
mov
lcall
repnz
add
xchg
push
decb
cmpb
outsl
es
popa
and
push
inc
sbb
clc
aam
call
xor
xorl
pop
mov
push
inc
popa
out
push
imul
xor
xor
add
call
movsl
and
aaa
mov
arpl
xchg
mov
mov
aaa
add
push
loope
push
add
pop
sbb
sbb
add
daa
popf
leave
xchg
lahf
xor
dec
rorb
loope
mov
mov
addr16
inc
ret
popa
cmp
movsl
adc
je
mov
roll
lods
or
frstor
movsl
mov
xchg
cltd
fsubrl
popa
cmp
xor
sub
add
cli
jp
cmpsl
push
fbld
xchg
movsb
imul
inc
sub
mov
push
out
adc
mov
sbb
push
aas
jmp
inc
sub
cli
mov
push
cli
mov
aas
pop
maxps
mov
adc
and
jecxz
addb
sub
lock
sbb
cli
loopne
std
jle
call
in
movsl
dec
push
adc
pop
aas
mov
cmp
mov
cmp
test
push
dec
lods
sub
mov
or
enter
mov
mov
ljmp
repnz
popa
and
leave
ror
fwait
pop
fldl
dec
icebp
nop
cmpsl
shl
in
jbe
outsl
cmp
add
xor
shrb
leave
jg
mov
pop
inc
push
subb
adc
jb
sbb
loopne
mov
add
push
addr16
mov
std
inc
cmp
or
mov
mov
jno
jno
aaa
sub
shl
mul
enter
inc
in
or
mov
imul
hlt
movsb
adc
xchg
adc
ljmp
hlt
cmp
mov
xor
scas
xchg
mov
jge
popa
nop
jl
jg
lahf
sbb
scas
adcl
sbb
cmp
cmp
out
push
mov
adc
fcomps
sub
push
test
flds
shl
mov
push
aas
inc
mov
sbb
lahf
cmpsb
inc
sub
sbb
icebp
adc
push
insl
adc
mov
xchg
out
pop
sub
cmp
mov
js
and
inc
sub
fcmovu
push
sub
mov
push
stos
push
lock
movsl
jo
std
fadd
jae
add
int3
std
icebp
shll
fs
and
jae
test
pusha
mov
movsb
xor
insl
lret
push
stos
push
inc
jns
sbb
adc
cmpsl
out
mov
shr
sub
inc
test
movsl
pop
push
pop
jmp
cmp
gs
mov
scas
push
or
jb
leave
rclb
cmp
lods
xchg
cmp
xchg
loopne
adc
ret
inc
sbbl
pop
jno
repnz
je
stc
add
sarb
imul
push
bound
das
lret
loop
lds
lds
and
cmp
rclb
xlat
cmp
outsl
cmc
insl
fists
int
pop
inc
add
mov
dec
jg
fsubrl
push
pop
jg
xchg
jmp
add
idiv
adc
cmovno
fmul
sub
aam
cwtl
mov
outsb
cmp
popf
add
scas
inc
addr16
pop
movsl
xchg
in
int3
dec
push
mov
jge
jo
outsl
inc
out
lods
add
iret
dec
jle
cli
outsb
int
cltd
adc
and
fstps
sbb
clc
dec
mov
inc
aas
lds
cmp
jecxz
outsl
test
or
aas
mov
nop
sub
pushf
push
iret
jnp
ret
dec
fs
fxam
push
mul
lret
mov
fbld
mov
ja
inc
jmp
mov
shll
mov
and
fnstenv
jg
mov
dec
lret
xlat
jmp
cltd
sub
push
pop
sbb
mov
mov
add
inc
addr16
jae
jnp
lcall
scas
iret
aam
jg
xor
push
cmp
pusha
lcall
fbstp
fnstsw
cmp
clc
cmp
jb
xchg
fiadds
xchg
aas
push
bnd
repnz
loope
cli
fldt
daa
dec
insb
jbe
ljmp
mov
sbb
movsl
call
or
cmp
mov
mov
add
jecxz
cwtl
cmc
mov
in
test
subb
pop
and
jns
adc
or
leave
testl
in
inc
loope
fnstenv
sub
jnp
add
and
jb
push
add
decl
clc
cmp
pop
popa
ss
cmp
jecxz
push
cli
add
sti
push
dec
setge
gs
out
xor
or
pop
popa
dec
out
bsf
scas
mov
push
cmc
hlt
fmull
hlt
jnp
mov
mov
pop
xor
cmc
das
jecxz
ret
aaa
addr16
in
cmp
es
sub
jle
sbb
add
testb
addr16
xchg
push
inc
mov
pop
es
ficompl
mov
dec
sbb
out
std
adc
ss
xlat
sub
adc
daa
iret
mov
inc
adc
movb
inc
push
cwtl
xor
loop
pusha
loope
fwait
das
xchg
fwait
push
lods
notl
inc
jl
fisubs
xor
push
or
mov
iret
je
in
and
pusha
mov
mov
dec
leave
loope
push
mov
repz
cmc
mov
fadd
dec
sahf
mov
repz
scas
mov
sbb
aad
les
jg
sub
aam
mov
stos
and
cmpsl
push
int
cli
mov
stc
fisubrs
sbb
lock
dec
stos
loope
adc
jle
cmp
fists
cmpsl
cmpb
lock
fs
cmpsb
and
push
enter
sub
out
orl
mov
xchg
mov
sbb
inc
enter
fwait
inc
push
xlat
stc
or
popa
leave
out
addb
popf
pushf
push
shlb
and
sbb
push
push
adc
ljmp
leave
testb
xchg
jbe
fcmovb
pop
arpl
pop
sbb
outsl
push
or
scas
lret
cmp
sbb
out
movb
xor
jecxz
pop
sbb
inc
and
les
sbb
movsb
les
xor
in
cltd
shll
stos
mov
sub
test
imull
add
gs
loope
push
sub
in
mov
popf
ret
test
imul
dec
inc
mov
cmpsb
fdivrs
sub
icebp
ficompl
aad
test
mov
mov
pop
fisubrl
pushf
mov
lret
add
stos
das
xchg
dec
ljmp
cmp
out
les
xor
mov
call
jmp
push
xchg
std
sarb
stc
rcrl
lock
hlt
hlt
mov
lods
and
dec
sahf
push
test
aam
int
icebp
fwait
xchg
xchg
or
cld
pop
aaa
mov
mov
dec
cmp
not
loop
pop
inc
imulb
add
out
out
cmpsl
jmp
mov
lcall
fisubs
test
bts
sub
jns
push
inc
jg
fistpll
cmpsb
or
xor
mov
sub
cmc
scas
int
pop
jecxz
inc
lahf
jnp
sub
pop
mov
fwait
aas
ljmp
ret
mov
and
sbb
ret
xor
es
js
cmpsb
stos
inc
out
xchg
sbb
iret
mov
fcoms
and
mov
je
sub
add
rcll
aad
shll
xchg
jmp
divl
mov
lret
xor
adc
dec
ret
les
cli
dec
dec
xorb
icebp
loopne
in
loopne
enter
movsl
push
fcomp
loopne
jae
mov
int
xlat
jge
mov
xchg
jecxz
daa
add
add
jl
xor
daa
enter
paddd
jg
and
push
ljmp
imul
dec
aaa
sbb
test
cmp
sub
ret
cltd
mov
ss
fbld
gs
or
and
mov
fwait
push
insb
sub
pushf
cmp
inc
mov
fistps
jmp
and
dec
sbb
jno
push
fdivr
mov
mov
adc
jmp
xor
push
sub
test
mov
lcall
dec
cmpsl
cmp
mov
push
shll
es
js
out
lret
fcomps
imul
sbb
aaa
or
push
iret
and
lds
nop
inc
inc
cli
ficoml
xor
xor
inc
cmpsl
xchg
sbb
cli
jg
in
add
dec
arpl
sar
fucom
gs
into
lods
xchg
enter
mov
icebp
mov
inc
inc
lock
sbb
and
sbb
psllq
jge
movsl
adcb
jnp
ret
aaa
pop
pop
jle,pn
mov
jae
ret
in
outsb
inc
cmp
mov
xor
loop
jmp
cld
jno
jne
mov
test
mov
mov
jmp
mov
adc
es
sub
data16
clc
in
out
mov
popf
mull
cltd
shll
sbb
int3
push
push
call
dec
rcrl
call
xchg
loop
fwait
js
fwait
and
mov
sbb
dec
in
imul
pop
mov
jp
or
addr16
hlt
and
les
mov
ja
daa
mov
push
mov
shlb
jg
js
dec
sub
out
je
cmp
fsubrs
add
out
arpl
mov
dec
ljmp
sub
in
data16
lahf
movsl
push
mov
loop
push
enter
lret
and
sub
rcrb
mov
repnz
sub
and
incl
dec
dec
pop
mov
aad
or
fisubl
mov
lods
xchg
repnz
scas
into
movsb
fstpl
lahf
mov
dec
inc
ret
sar
push
dec
fucom
aam
adc
mov
jg
jle
jae
adc
psubb
mov
insb
shrl
insl
pop
jle
jp
lcall
push
loopne
xor
push
push
dec
mov
mov
mov
mov
inc
xchg
aam
xchg
aad
jle
in
xchg
roll
xor
inc
jnp
sub
not
push
jbe
nop
stc
cmpb
mov
cmpsl
std
push
push
pushf
pop
nop
test
scas
push
mov
into
fildl
inc
and
and
ret
mov
cwtl
adc
cmp
sahf
fucomp
pop
jnp
and
testb
mov
jbe
cmp
outsl
insl
sbb
lea
sbb
push
push
jmp
inc
insb
cli
dec
leave
loop
mov
push
mov
loop
pop
gs
in
ja
in
jo
xor
mov
out
imul
pusha
test
jnp
je
xchg
mov
jmp
mov
pusha
xor
add
dec
fmuls
mov
fnstenv
test
push
inc
xchg
push
jne
or
gs
fstpl
ja
dec
je
dec
into
mov
rorl
cmc
sahf
std
ljmp
cmp
jecxz
fcoms
aas
jns
xor
adc
pop
jp
adc
pusha
pop
loope
xchg
pushf
xor
xchg
das
inc
ds
sub
or
xor
add
dec
mov
test
cmp
in
push
lods
decl
adc
push
int
mov
ret
mov
sub
cltd
aaa
adc
jl
pop
sbb
cmp
lcall
fstps
xchg
mov
ss
xchg
adc
mov
movsl
jnp
lods
test
cwtl
pushf
jne
sbb
mov
push
inc
repnz
stos
dec
mov
dec
es
sub
mov
cs
sbb
cmp
cmp
sbbb
add
loopne
enter
inc
aam
mov
jnp
inc
adc
subb
pop
xor
jmp
sbb
test
xchg
fbld
fsubrp
xchg
pop
and
aad
xor
cmpsl
test
jo
inc
add
jae
jbe
std
inc
lods
js
jle
xchg
or
mov
jb
popf
jno
fisubl
adc
sbb
roll
jnp
push
and
mov
in
lret
aas
pusha
xor
adcb
js
test
mov
mov
mov
loopne
lahf
imul
clc
lods
lea
das
cltd
add
in
fwait
in
sbb
js
fstpl
jno
xor
xor
sub
mov
adc
je
lods
sbb
stc
push
ds
loope
mov
dec
xchg
add
xor
aas
xchg
sbb
into
into
inc
add
outsb
outsl
push
rcll
gs
imul
aad
mov
pop
and
adc
sub
dec
or
arpl
xchg
add
rcr
mov
in
repz
mov
imul
movsb
outsb
outsl
cmpsb
nop
lods
js
xorl
popa
push
pop
imull
aam
inc
rclb
incb
xchg
mov
mov
lret
jmp
pusha
popf
xor
xchg
pop
mov
adc
out
dec
repz
mov
sti
pusha
cmpl
inc
repnz
xlat
mov
jae
xlat
addr16
nop
sbb
into
push
mov
es
aad
bound
lods
scas
test
mov
arpl
xor
pusha
sar
xor
fiadds
jnp
lods
pop
outsl
jns
mov
or
mov
les
dec
jo
or
fcmovbe
decl
cmp
aad
addr16
xor
fucom
jle
xor
dec
push
sub
das
movsb
pop
fs
xor
mov
xchg
int3
je
rorb
fs
jg
cmp
sub
dec
call
jb
out
add
mov
out
subl
popf
mov
dec
movb
imul
add
and
addl
xchg
mov
loop
mov
nop
mov
xchg
mov
jo
fs
repnz
add
stc
mov
pop
add
mov
add
jge
repz
mov
push
leave
pusha
push
mov
fisttpll
dec
dec
mov
xlat
pop
out
push
xchg
and
push
inc
adc
cltd
movsl
inc
nop
cmpsb
jg
in
lds
dec
inc
testl
push
pusha
mov
es
mov
push
pop
pop
test
cmpsb
iret
fwait
cmp
lods
test
outsl
xchg
xlat
adc
jb
dec
aas
mov
mov
shrl
stc
sbb
pop
in
daa
mov
dec
in
icebp
sbb
fiaddl
out
push
mov
sbb
mov
dec
pop
mov
push
pop
sub
mov
or
inc
in
ret
jo
test
in
jb
xchg
pushf
imul
fsubrp
js
pop
sbb
fdivl
pop
inc
jno
mov
arpl
stc
cs
cwtl
push
push
push
push
mov
data16
mov
pop
sub
js
loop
cltd
out
sub
push
jecxz
cltd
bound
out
movsl
lods
push
pop
das
sbbl
mov
adc
inc
sbb
lds
test
pop
stos
ficoms
es
sbb
add
sahf
adc
and
rcrb
sub
xchg
daa
mov
pop
xorb
pop
shrb
sub
out
idiv
mov
inc
dec
inc
ret
loop
test
add
imul
shlb
sbb
dec
fidivl
and
bound
into
shr
sub
lods
aam
jnp
rol
mov
popl
test
push
inc
mov
pop
mov
push
and
das
adc
insl
jbe
xchg
xchg
lock
mov
mov
test
dec
mov
xchg
sub
sarl
mov
in
cmpsb
mov
xor
enter
inc
dec
hlt
shrl
notl
adc
ret
pop
shll
les
push
and
adc
cmp
sub
pushf
jnp
inc
xchg
movsb
or
fisubl
and
or
adc
daa
pop
mov
fmuls
ss
adc
mov
add
test
int
xchg
jle
jmp
lret
pop
aad
cmp
dec
sbb
imul
and
pop
add
stos
insb
mov
fldenv
push
add
imul
lahf
lock
insl
cmp
push
fwait
jns
mov
dec
popf
dec
pusha
sbb
cld
xchg
sahf
adc
add
sbb
xor
testl
sahf
fsubrs
pop
mov
sbb
aam
jo
jp,pn
push
xchg
adc
push
sbb
fs
xor
lea
sahf
sbb
xchg
add
subb
test
push
xlat
outsb
mov
jle
pop
lods
mov
mov
or
int
push
jno
or
pop
ret
lds
js
jo
dec
ret
iret
adc
or
push
ret
das
sahf
xorl
out
push
hlt
fists
add
xor
sub
outsb
sahf
insb
lcall
aas
orb
push
ret
pop
ja
movsb
mov
mov
nop
test
sti
mov
lods
mov
mov
and
inc
mov
mov
mov
ret
lahf
es
shlb
jno
js
mov
or
in
cld
leave
outsb
popf
shll
fcompl
incl
sbb
pause
lock
dec
clc
or
aaa
sarb
je
jle
or
mov
mov
add
mov
push
mov
pop
in
pushf
test
popf
je
loope
and
nop
pushf
dec
mov
dec
cmp
jne
xchg
push
add
lahf
add
sbb
mov
push
sbb
test
out
dec
xchg
mov
xor
jg
mov
movsl
xor
movsl
mov
lahf
jns
je
lods
jae
sti
jne
dec
sbb
add
xchg
cmp
xor
mov
ss
cmpsl
add
adc
mov
and
shll
mov
sub
mov
je
int3
inc
push
dec
int3
jae
adc
inc
andb
sahf
sbb
jnp
or
mov
cmc
pop
sub
cli
adc
inc
stos
incl
stos
sbb
adc
inc
and
in
push
and
pusha
add
xor
add
sub
push
in
push
pushl
repz
insl
mov
mov
cld
enter
cmpsl
xchg
shrb
jg
xor
pop
add
test
cltd
cmp
pop
sbb
sub
outsb
pushf
inc
jle
pusha
std
fistpl
cmp
enter
mov
xchg
xchg
mov
inc
jbe
out
jo
sahf
pop
pop
adc
push
dec
das
mov
std
jb
sub
lcall
jno
or
jmp
cmp
dec
push
pop
cmp
in
sub
mov
xor
shrl
push
shll
cmp
cmp
les
incb
pop
es
sub
jne
inc
imul
bound
insb
xchg
pushl
mov
aaa
fisubl
dec
stc
inc
ret
fst
xchg
add
cli
mov
xchg
mov
jp
fcompl
mov
jnp
lea
insl
mov
hlt
stos
and
pusha
cltd
scas
aas
test
push
push
lfs
in
mov
push
inc
cmpsl
or
jno
jno
fwait
test
into
divl
lods
or
dec
arpl
jmp
inc
pushf
push
push
mov
testb
fldcw
sub
js
arpl
fwait
mov
sub
xchg
sbb
out
int
mov
sbb
cmc
hlt
hlt
xor
test
fld
mov
nop
imul
lock
dec
add
xchg
or
adcb
mov
adc
sbb
in
sub
or
xlat
lret
fiaddl
daa
negl
jmp
inc
push
cld
fidivrs
roll
push
in
pop
add
push
sarb
rclb
mov
mov
loope
and
test
rorl
loope
aaa
test
dec
inc
pop
adc
fs
lods
pusha
imul
sbb
pushf
push
mov
push
imul
insb
or
or
push
xor
je
lret
jnp
jne
jge
std
sub
addb
or
cs
jb
xlat
push
sarb
mov
mov
jmp
daa
xor
lret
inc
xchg
stos
pusha
sbbl
pushf
ficoml
sahf
pop
rclb
icebp
mov
jo
cmp
add
adc
mov
popf
and
sbb
cmp
inc
push
mov
test
inc
xchg
sbb
mov
gs
inc
ljmp
hlt
xchg
adc
rol
int3
mov
inc
inc
lcall
pop
push
xchg
adc
cmp
loop
outsb
adc
mov
or
fwait
mov
out
pop
push
mov
mov
sub
sbb
lea
fistpl
mov
imul
push
out
cmp
mov
fcom
inc
inc
cltd
lret
mov
iret
mov
cmpsl
push
outsb
aam
testl
clc
outsl
jp
mov
scas
jge
mov
repz
adc
push
mov
adc
ja
add
je
dec
mov
pop
push
mov
mov
mov
mov
insb
lret
dec
push
cld
xor
lock
jmp
xlat
and
mov
add
outsl
movsl
iret
mov
mov
repz
add
xchg
jae
sbb
xchg
mov
jo
add
mov
mov
ja
add
cmpsb
mov
adc
lahf
jb
fwait
nop
je
mov
inc
add
in
pop
inc
xchg
inc
movsb
mov
inc
inc
mov
ljmp
imul
push
int
outsb
cmp
adc
push
clc
pop
dec
imul
aas
cmpsb
mov
cmp
ss
out
xchg
inc
mov
jecxz
pop
cmp
push
pop
cmp
aad
stos
jp
pop
mov
aas
cld
out
pop
notb
out
add
and
adc
daa
nop
repz
push
push
fsubrl
hlt
bound
mov
mov
and
aaa
mov
mov
mov
pusha
push
cli
mov
shll
ss
icebp
stc
lret
jno
jmp
cmp
sub
xchg
mov
mov
xor
rcrb
inc
pop
adc
mov
dec
adc
iret
dec
fisttpll
xlat
pop
orl
cmp
cld
sbb
xor
mov
cwtl
sahf
cmp
or
pop
jne
lds
mov
or
push
push
mov
lret
repz
push
push
aad
cmpsl
add
pop
cwtl
mov
mov
sbb
test
lock
or
jae
jmp
xor
cld
add
xchg
ljmp
or
inc
test
fildll
mov
aad
mov
cmpsl
lret
mov
mov
js
nop
enter
xor
nop
jmp
aad
xor
stc
mov
xor
js
pushf
add
out
add
clc
mov
inc
leave
xor
fdiv
inc
mov
xchg
subb
xor
cmp
dec
repnz
cltd
push
movsb
nop
xchg
es
ret
or
shll
or
imul
test
jb
in
mov
sbb
out
lea
fwait
arpl
ljmp
pushf
fsubl
call
out
jg
mov
lds
jp
sti
aaa
dec
mov
fs
in
cmp
push
lret
xchg
pop
inc
fldl
fwait
mov
sub
test
lret
xchg
decl
mov
inc
cmp
out
push
outsb
in
lock
mov
push
dec
aad
movsl
mov
mov
mov
nop
rcrb
mov
lods
rorl
bound
jb
lock
shrb
movsl
sbb
cmpb
loop
pop
faddl
jle
xor
insl
call
xchg
inc
sti
test
xlat
aas
test
or
lcall
adc
jecxz
push
xor
or
cmp
sbb
test
cld
dec
or
push
jae
cmp
mov
cmpb
push
pop
jnp
mov
or
sbb
inc
adc
lods
pushf
pop
pop
test
in
mov
push
jl
out
out
int
cmp
jno
outsb
fs
jmp
ja
lods
push
addr16
sbb
sub
jl
das
call
test
cmpb
sbb
outsl
or
and
cltd
dec
cmp
aas
mov
std
mov
push
out
loope
and
mov
sub
inc
stos
repnz
lret
adc
in
xor
cltd
sbb
sbb
xor
adc
shlb
xor
fcoms
sti
pushf
scas
push
cmp
out
xor
mov
sub
cld
ficomps
out
fyl2x
jno
test
xor
pop
dec
jecxz
sbb
add
xchg
icebp
or
xlat
sbb
popa
sub
lahf
push
mov
add
testb
jo
shlb
std
sbb
cmp
and
add
clc
mov
mov
test
insl
mov
sbb
test
call
xchg
and
pop
or
push
das
sar
ret
out
int
jg
xor
out
fildll
sbb
popf
sbb
cmp
dec
mov
pop
stc
in
lds
xchg
outsb
push
xchg
ret
fiaddl
shlb
lret
fwait
popa
lcall
xchg
icebp
mov
or
je
mov
mov
cmc
mov
mov
test
jnp
xchg
sbb
adc
pop
pop
mov
sbb
enter
push
ret
and
mov
jns
or
fwait
dec
mov
out
call
push
and
nop
int
or
lret
pop
pop
and
adc
or
and
xor
data16
pop
xor
mov
jae
inc
xchg
add
mov
mov
loop
sub
cmp
jg
push
mov
adc
xchg
dec
push
mov
xor
add
sub
pop
addb
clc
bound
or
pop
push
mov
roll
pop
sbb
ret
and
ret
and
xchg
out
mov
hlt
mov
sub
pop
inc
lahf
xor
loope
ja
jnp
das
and
mov
xchg
adc
rolb
jb
in
aam
pop
or
loop
lret
test
sbb
mov
adcb
inc
jns
jecxz
inc
mov
stos
lcall
popa
packsswb
xor
inc
insl
mov
loopne
lcall
sbb
add
jnp
pop
fwait
cmpsb
js,pn
ret
mov
loope
lea
lock
stc
dec
movsl
xorl
mov
repz
call
pushl
sub
push
pusha
sub
movsl
dec
in
push
sub
cmc
mov
pop
sarb
push
scas
outsl
das
rolb
cmpsl
inc
lds
xchg
add
cmpsl
mov
sub
push
aad
and
lods
lock
js
sbb
ss
je
hlt
xchg
sti
xor
sub
jl
cwtl
aam
lret
inc
sub
mov
sub
xor
iret
insb
xchg
js
icebp
loope
and
jb
stc
ds
mov
mov
std
dec
jecxz
stos
mov
jmp
sub
inc
push
lahf
sbb
mov
es
cmp
mov
adc
aas
fiadds
les
inc
cs
stc
xor
sbb
les
out
stos
cld
jns
rorb
mov
fcomps
int3
int
and
cmp
jae
pusha
or
mov
sub
popf
push
jae
bnd
pushf
insb
sub
xchg
daa
lea
roll
jge,pn
pop
cltd
and
xor
je
mul
in
fisubl
jno
sti
jae
fnstsw
mov
loopne
xchg
mov
mov
adc
mov
stc
in
push
cwtl
mov
xor
cld
add
mov
mov
push
stc
shll
mov
inc
add
mov
sub
push
add
dec
add
test
jmp
adc
cwtl
jo
sub
mov
das
xchg
sub
es
xor
loop
cmc
cmc
lock
pop
in
daa
push
dec
mov
movsb
xor
and
push
pop
pop
ficompl
lret
in
daa
dec
cmpsb
movsl
hlt
orl
cs
cmc
test
sbb
call
loopne
ss
lock
aam
jp
daa
sub
pop
bnd
pop
or
sub
divl
xchg
jle
mov
pushf
popf
shl
mov
cmpsb
mov
out
lock
xchg
mov
adc
dec
leave
mov
push
dec
sti
mov
push
inc
addr16
jne
js
push
mov
push
adc
xchg
and
push
or
cmc
push
xor
inc
in
inc
xchg
push
movsb
cmc
mov
mov
repnz
and
xchg
jnp
cwtl
ss
fyl2x
jnp
pop
adc
inc
mov
dec
dec
push
xchg
adc
cmp
test
mov
loope
clc
inc
addl
sarb
jbe
jno
or
pop
in
mov
fcoms
push
xchg
hlt
rcrl
lds
mov
xchg
pushf
mov
or
cs
leave
fdivs
cmp
lret
push
jle
push
push
iret
call
xchg
xor
call
xchg
lock
stos
dec
fstpt
dec
rclb
sahf
loop
insb
outsb
jecxz
pop
mov
dec
xorl
rol
dec
out
filds
sbb
xor
les
dec
lods
fldcw
addr16
adc
lods
nop
arpl
fadd
dec
insb
pop
pop
mov
ljmp
popf
rclb
jle
pusha
ret
jp
cmp
cmpsb
push
and
lock
rorl
mov
jecxz
add
inc
pop
add
push
je
push
in
out
inc
lock
shr
lret
insl
inc
dec
in
sub
gs
xor
stc
cmp
push
mov
nop
lods
push
xchg
hlt
cmp
cmpsb
xchg
into
scas
in
jmp
xchg
pop
popa
in
and
out
mov
xchg
nop
sbbb
ja
push
jp
dec
and
mov
or
cmpl
aas
sbb
ljmp
dec
mov
daa
lret
and
xchg
mov
in
pop
lcall
push
push
push
idivl
mov
add
fdivrl
pop
and
pushw
pop
add
adc
ret
insl
je
adc
or
dec
sub
adc
cmp
jno
and
dec
jle
mov
ljmp
xchg
add
out
dec
sub
popa
rcrb
mov
jnp,pn
ffreep
nop
sbb
jcxz
inc
dec
push
mov
cmpsl
sahf
orl
out
mov
push
aad
mov
xchg
push
jecxz
mov
xchg
fs
xor
sbb
jmp
cmp
sub
mov
push
aaa
xor
mov
aam
stos
jle
dec
adc
or
test
jge
stos
xor
mov
adc
cmp
xchg
or
pop
lock
push
shlb
sbb
or
ret
fldcw
or
jl,pn
mov
loope
icebp
pusha
clc
mov
dec
mov
int3
stos
pushf
mov
jbe
dec
cli
cmp
testl
and
jae
out
cltd
testb
ret
sbb
adc
mov
arpl
dec
cmp
lods
push
rcrl
pop
pop
or
add
repnz
es
sbb
xchg
shrb
in
and
jmp
push
cmp
mov
xchg
mov
xchg
jg
lods
sbb
xchg
iret
pop
xchg
das
stos
insl
std
sub
in
shlb
jbe
mov
cs
and
test
bnd
pushf
pusha
or
sbb
pop
outsl
sbb
pop
aad
ss
out
fmuls
out
fldenv
addr16
adc
sub
mov
lcall
ss
inc
mov
fcompl
mov
std
shl
jo
push
sub
add
ret
jnp
jecxz
mov
je
fcoml
mov
pusha
cli
jg
out
movsl
pushl
fs
xchg
int
pop
adc
sbb
mov
lods
pusha
fidivrl
call
xchg
xlat
jge
mov
cmpb
mov
push
or
dec
jl
jge
sbb
dec
xchg
jno
out
mov
add
and
bound
pop
insl
sub
hlt
stos
mov
and
pop
xchg
inc
notb
jo
loope
sub
decb
scas
in
stc
imul
push
jo
adc
cmp
push
xchg
call
insb
mov
pop
adc
leave
lret
sbb
inc
insl
sub
mov
dec
xchg
incb
add
dec
cmpsl
adc
xorl
and
push
lcall
add
pop
or
enter
arpl
add
repz
push
xchg
jle
add
jns
mov
into
xchg
pusha
outsl
push
xlat
fcomi
adc
sub
mov
sbb
arpl
aad
out
mov
shlb
xchg
lods
lret
insl
inc
jne
aad
pop
or
inc
les
mov
push
jae
mov
aam
sarl
outsl
scas
idivb
push
xchg
pop
lock
mov
pop
mov
sub
inc
or
outsb
fs
mov
mov
in
in
mov
shll
cmp
sub
xor
cwtl
push
or
adcl
cvtps2pi
lds
and
dec
xor
bound
fisttpll
cmp
outsb
push
xlat
nop
fisttpll
and
test
lret
push
js
mov
xchg
shrl
and
in
or
int
into
aad
test
mov
or
jle
pop
jno
inc
in
mov
fwait
pop
shl
sub
cmpsl
add
adc
push
popf
enter
mov
aaa
jecxz
or
pop
pop
fs
negl
call
mov
jmp
add
push
lret
cmp
xor
cmp
int
out
pop
jno
xchg
pusha
adc
push
pushl
inc
sbb
in
rorb
jg
jmp
andl
mov
inc
and
xor
imul
xchg
js
sub
mov
pop
fadd
xlat
xchg
add
cmp
mov
lock
imul
inc
lret
jecxz
adc
imul
dec
push
pop
insl
popa
xchg
inc
sub
jno
xchg
les
mov
xchg
cmp
repz
enter
out
je
addr16
inc
mov
nop
add
xchg
movsb
lods
test
movsb
or
xchg
xor
cltd
pop
dec
ljmp
push
cmp
inc
push
or
add
fcompl
jle
dec
add
out
sub
sbb
jae
lcall
lods
aaa
sbb
pop
adcb
cmp
xor
jb
sbbb
mov
fstpt
jno
jp
and
into
cwtl
pop
and
fisubs
dec
popl
ja
enter
cmpsb
hlt
mov
imul
cli
pushf
in
adcb
jp
std
je
out
pop
mov
mov
or
push
mov
dec
les
data16
imul
sub
loopne
inc
daa
div
adc
inc
mov
in
std
in
and
mov
pop
add
inc
mov
sarl
jno
arpl
rcl
pop
adc
scas
shrl
fistpl
mov
mov
lds
int
xor
faddl
add
push
in
jge
sbb
push
pop
sahf
fmull
or
cmpsl
popf
ljmp
push
push
dec
pop
mov
add
loope
into
xor
fisttpll
lahf
notb
adc
cmp
mov
and
pushf
lahf
jge
iret
je
das
jne
xchg
addb
cmpsl
or
loopw
jle
mov
ja
inc
data16
leave
xorb
inc
pushf
adc
in
pop
lahf
int
outsl
dec
sbb
repnz
push
jnp
xchg
dec
mov
int3
das
or
push
cltd
push
lea
xchg
jg
inc
in
std
stc
ret
fists
sub
mov
jo
add
fs
loope
cmp
xchg
enter
les
jp
push
ljmp
movsl
cwtl
xor
push
cmpsl
stos
repnz
inc
xchg
mov
push
mov
arpl
push
imul
mov
xchg
shll
in
jle
cli
je
in
in
pop
outsb
inc
fildll
test
mov
mov
outsb
movsl
nop
out
add
sbb
enter
sti
dec
pushf
xor
mov
mov
gs
lret
cmc
xchg
add
jae
sub
push
incl
mov
add
lcall
pop
mov
mov
stos
and
imul
mov
sti
sub
mov
xor
cwtl
pop
mov
mov
push
addl
neg
push
push
divb
pop
jno
pushf
sti
xor
jno
xchg
jo
fists
out
int
push
xor
pop
lock
xchg
adc
mov
adc
es
outsl
pop
pop
fcompl
fcos
les
movsl
xchg
mov
inc
pmulhuw
es
xor
lahf
cmp
inc
inc
push
adc
jg
sub
leave
push
pop
imul
mov
jo
imul
pop
mov
ret
mov
test
adc
cli
adc
stc
add
js
rcll
hlt
add
pop
adc
pop
mov
xor
dec
lds
inc
gs
cmp
push
push
mov
add
popf
mov
inc
imul
inc
mov
in
mov
xor
mov
jmp
ficompl
mov
add
push
fstl
jle
js
pop
pusha
pop
stc
push
es
mov
mov
jmp
xchg
mov
aad
fisubrl
push
cmc
mov
mov
test
mov
mov
fnsave
fstpl
out
pop
das
mov
sub
pushf
or
adc
mov
mov
negl
call
in
ret
xor
imul
or
mov
int
lods
int3
and
loopne
push
aad
jl
dec
cltd
and
add
decl
shrb
jb
jmp
xchg
or
adc
mov
out
sbb
das
pop
or
push
push
lods
pop
inc
add
and
xchg
in
shr
je
pushf
repnz
test
xchg
mov
xchg
in
insl
cmpsb
lds
cli
adc
pop
mov
movsl
rorb
dec
push
push
jecxz
addr16
std
arpl
imul
push
mov
sub
xchg
add
dec
cmc
and
add
pop
inc
sub
es
lods
inc
cmp
fidivrl
jecxz
arpl
pop
pop
iret
mov
nop
mov
push
popf
js
xchg
outsb
inc
cld
pop
pop
ret
cli
aas
pop
cs
insl
cmc
mov
ret
jle
mov
aaa
jnp
cmp
xchg
mov
lods
adc
xchg
adc
sbb
fwait
int
or
rep
shlb
adc
inc
es
cmp
or
push
into
outsb
lret
rol
jl
cmc
out
loopne
ss
cld
xchg
dec
aad
mov
sar
adc
sbb
clc
dec
lds
cmp
add
sbb
jns
je
das
mov
addr16
push
lret
adc
out
into
lods
stos
xchg
xchg
outsb
add
xchg
adc
lods
sbb
fldenv
adc
scas
jne
test
loope
add
jo
cltd
push
dec
and
and
inc
adc
mov
inc
sub
pop
jns
xchg
movsl
sub
cmp
nop
int3
sub
call
sub
inc
je
repz
cmp
mov
mov
push
cmp
mov
mov
mov
dec
push
rcrl
cmp
jno
repz
addr16
xor
dec
pop
push
fistpll
test
xchg
or
sbb
gs
push
mov
fbstp
push
in
jmp
jl
or
inc
cs
pop
rcr
cwtl
pushf
push
out
repnz
rcrb
push
jmp
fsubl
cmp
les
sahf
aad
movsb
lods
inc
stos
stc
scas
aam
mov
add
shll
push
jle
mov
xchg
xor
ret
xor
shl
cmp
mov
push
repnz
popa
fmuls
std
dec
jo
mov
movsl
imul
sti
sahf
lock
mov
loopne
insb
loopne
mov
adc
xor
add
sub
loopne
dec
insl
inc
pop
int3
les
fisubl
outsl
jne
xchg
push
and
push
repz
inc
or
push
and
push
sbb
jmp
sbb
cmp
pop
xchg
push
rcrl
imul
movl
mov
data16
dec
sarb
mov
inc
xchg
int
add
push
fisttpll
push
call
xchg
and
repz
xorl
hlt
cli
enter
stc
pop
xchg
cmp
cmp
lahf
push
inc
gs
xchg
adc
pop
cwtl
inc
stc
psubsw
addb
sarl
xor
inc
dec
push
cmp
inc
mov
jae
cli
xchg
stos
adc
idiv
pop
sbb
pop
pop
xor
pushf
shlb
stos
adc
push
inc
aam
push
imul
jge
addr16
mov
mov
and
and
xchg
cmpsl
popa
sbbb
add
popf
jne
xchg
dec
or
std
or
jecxz
dec
or
mov
icebp
xor
aam
add
mov
ret
mov
aaa
jns
aam
fs
imul
pop
jge
pusha
inc
xchg
nop
adc
leave
daa
fwait
adc
lret
stos
adc
mov
imul
fstps
inc
xlat
sub
mov
in
hlt
mov
int
mov
pop
fs
dec
push
push
or
mov
aaa
leave
jmp
inc
jl
sarb
sti
leave
add
xchg
inc
sub
ret
das
jne
int3
aas
pop
fs
jns
mov
dec
icebp
rorl
push
push
mov
mov
xlat
jle
test
mov
ss
lock
fs
mov
cwtl
stc
test
jb
jne
xchg
fs
icebp
mov
push
push
out
pop
mov
dec
adc
into
xchg
ljmp
out
out
mov
popa
imul
inc
insl
xchg
jl
xchg
test
mov
sub
test
xchg
mov
xor
scas
addl
and
stos
cmp
std
xchg
andb
cmp
leave
push
jne
lock
inc
aam
aas
lock
fsubl
xor
negl
loop
es
and
outsb
outsl
lret
in
dec
inc
cmc
jle
inc
add
lods
mov
xchg
adc
pusha
adc
jbe
filds
outsb
sti
adc
pop
dec
push
inc
mov
xchg
pusha
out
inc
or
out
mov
lds
cmp
in
shlb
push
or
pop
push
jne
aas
or
inc
adc
test
jmp
loop
mov
xor
mov
xchg
sbb
in
scas
jle
add
or
mov
lock
add
aad
pusha
cmc
pop
pop
or
stos
loope
sbb
mov
mov
loopne
mov
push
sbb
xchg
pop
xchg
mov
repnz
lods
stc
xor
cmc
adc
testl
cvtpi2ps
push
jl
dec
sub
mov
and
push
lret
push
repnz
loope
fdivrp
xor
out
mov
fwait
mov
ficompl
movb
and
or
sbb
or
cld
xchg
xor
or
enter
imul
sub
out
or
ljmp
daa
cmp
add
jecxz
sub
enter
je
mov
popa
mov
fidivs
in
cli
sub
out
sub
jbe
stc
shlb
scas
inc
adc
mov
sub
push
xor
pushf
sub
mov
int3
loopne
push
cmp
sub
mov
dec
repnz
jne
or
sub
inc
push
loopne
out
pop
les
ret
bound
inc
jmp
adc
xor
xchg
test
xor
pop
testb
movsl
cli
int
shrl
jns
loopne
scas
lahf
mov
pop
mov
cmpsb
lret
sub
lea
ss
xchg
pop
push
xor
mov
sub
aad
jle
cmpsb
cmp
pop
pushf
faddl
or
push
jnp
data16
mov
pop
sbb
or
repz
xchg
adc
xlat
bound
xor
xor
cmp
mov
push
aam
ss
mov
xchg
mov
mov
fdiv
dec
pushf
popa
lds
mov
stos
cmp
add
bound
stos
push
inc
sbb
sbb
inc
fdivrs
dec
mov
shrl
push
sub
sti
daa
cwtl
out
dec
add
hlt
sahf
loope
inc
leave
outsb
fwait
cwtl
adc
jo
add
pop
or
sbb
imul
dec
mov
xchg
daa
and
icebp
jg
movsl
pop
or
add
or
cmp
lock
int3
inc
fsubrs
lods
fs
clc
cmp
aad
sbb
mov
push
and
cmc
xchg
cmp
cmp
insb
pop
nop
aas
stc
das
jl
es
mov
or
sarb
pop
and
leave
mov
xor
push
jl
xchg
fdivrl
lds
jmp
enter
cwtl
cmp
or
cmp
ljmp
lock
mov
push
pushl
dec
adc
jp
jge
sti
cs
adc
inc
test
mov
test
sbb
sub
insb
outsl
xor
push
dec
push
and
jp
int
call
and
mov
push
jb
ret
cltd
imul
popl
xchg
dec
icebp
mov
xor
add
gs
and
inc
out
outsl
sub
js
iret
inc
inc
push
fs
dec
mov
in
sbb
pop
push
sbb
mov
jg
inc
aas
mov
addr16
push
mov
xor
out
and
out
in
ret
imul
ficoms
or
insb
pushf
xchg
fidivl
rcll
dec
dec
pop
pusha
sub
or
ud2
stos
sbb
cwtl
popf
movl
adc
jmp
mov
shrl
add
int3
and
sub
iret
pop
cltd
cmp
jle
in
cltd
lea
iret
cmp
roll
popa
lods
dec
mov
xor
cmp
enter
mov
push
leave
dec
mov
frstor
popf
push
cmp
sub
cwtl
mov
roll
add
repz
call
pop
call
fwait
sub
push
stos
js
mov
stos
or
fsts
in
pusha
sub
outsb
rorb
cwtl
jmp
inc
cmpsb
in
push
mov
idivb
pop
push
pop
or
jbe
pop
sbb
or
fwait
and
xor
push
shrb
js
inc
out
adc
inc
das
add
test
addr16
lea
adc
fildll
adc
call
mov
jbe
movsl
xor
mov
call
mov
test
pop
inc
movsl
and
xchg
inc
call
lods
loopne
push
dec
int3
pop
xchg
pushf
jg
push
test
sahf
xchg
out
mov
les
push
arpl
sub
and
in
mov
fwait
loopne
jl
test
cmp
adc
repz
cmp
adc
fs
leave
sbb
ds
sarb
out
cld
push
jle
dec
sub
mov
out
jo
mov
aam
clc
or
fsub
cmpsb
push
fstpt
xchg
push
pop
lret
repz
jne
adc
xor
pop
cmp
add
aad
shlb
or
popf
jge
sbb
sbb
cmp
test
adc
jb
cmp
adc
rcl
loopne
lret
xchg
cmp
fistpll
push
mov
scas
inc
ret
cli
cs
rorl
fdivl
mov
repnz
add
ret
sbbl
andl
jmp
jb
test
in
sub
sbb
jle
mov
dec
inc
pop
push
dec
jnp
popa
xchg
jge
int3
int
and
add
lcall
sub
adc
sub
std
add
loope
mov
mov
adc
lock
mov
pop
clc
imul
mov
idiv
pop
ret
push
cmc
arpl
orl
add
call
insl
mov
jle
push
rcrb
andl
mov
dec
xchg
stos
ja
in
mov
sub
xchg
aas
iret
pop
es
arpl
or
lods
cmp
fadd
jb
mull
sbb
fadd
xchg
popl
sti
adc
psubd
rorl
outsl
pop
sti
push
loopne
hlt
mov
push
lds
jo
ss
dec
addr16
pop
pop
lahf
loopne
aad
jg
sar
dec
cli
pop
or
push
sub
pop
repz
rolb
imul
cwtl
nop
inc
xchg
cltd
mov
rorl
xor
dec
repnz
nop
adc
ret
pop
arpl
sbb
aas
jmp
aam
sbb
jge
sbb
xor
or
xchg
cs
jne
repnz
push
and
popf
or
mov
icebp
cmp
and
jae
loope
and
mov
cmp
mov
imul
inc
pop
jo
iret
mov
cmpsl
fsts
add
test
push
inc
cli
lock
xlat
pop
loopne
cmp
push
addb
daa
pop
arpl
aam
rol
loopne
sub
int3
jno
push
div
out
and
pusha
inc
sbb
sub
mov
rcl
sub
enter
jmp
cmp
into
enter
shll
push
cmp
imul
jle
and
xchg
add
xlat
test
push
mov
lea
hlt
add
sub
jmp
bound
je
sahf
jecxz
mov
push
jae
jo
sbb
jge
icebp
int
bound
cmp
add
xorl
and
movsb
pop
sbb
loope
inc
or
std
cmpsb
outsb
lds
and
iret
sbb
and
lods
insl
gs
and
xchg
stos
test
cmpb
push
sbb
or
jmp
xorl
jo
adc
dec
inc
nop
mov
push
push
sbb
jle
call
scas
adc
fadd
cmpsl
jne
mov
mov
das
mov
lret
mov
popf
call
in
jno
out
subb
jl
sbb
in
and
test
cs
push
dec
push
xchg
ljmp
not
in
xor
mov
lahf
dec
ds
loop
push
inc
cmp
push
inc
mov
into
xor
mov
push
push
stos
or
enter
fadds
out
ds
aam
gs
pop
jg
pusha
cmp
jg
inc
shlb
cli
xchg
xchg
repnz
mov
pop
adc
xor
loope
xor
lods
dec
dec
call
lock
in
inc
pop
rolb
lahf
jp
in
decl
dec
fildl
xor
inc
inc
test
out
dec
or
sahf
pop
mov
mov
iret
popa
fdiv
jnp
mov
in
or
cmpsl
inc
pop
insb
jbe
in
dec
stos
cmp
and
push
pop
sub
stos
fidivl
subb
inc
sahf
sub
mov
lods
fnstenv
sbb
pop
push
dec
into
cmp
cmpsl
aam
mov
xor
shlb
push
imul
fisttpll
sub
jnp
rolb
icebp
sub
add
test
jmp
sub
mov
clc
mov
cmp
lret
pop
test
mov
mov
sbb
adc
push
adc
pop
movsb
push
add
icebp
pop
push
dec
fisttpl
jns
push
sub
lds
loope
mov
cmc
cmpsb
pop
xchg
inc
dec
xor
daa
je
cmp
cld
aam
jmp
pop
mov
addr16
fsubr
int3
mov
xchg
lret
inc
mov
out
sbb
dec
jns
inc
sbb
test
pop
sub
cmp
divl
je
loopne
push
push
mov
cltd
sbb
ljmp
jns
enter
lea
pop
mov
mov
add
mov
push
mov
inc
xlat
push
push
or
sbb
sub
jge
sbb
lret
filds
imul
ret
ss
adc
scas
xchg
push
push
les
fldl
or
loopne
xor
mov
push
sarl
pop
cwtl
cmpsb
xlat
adc
mov
jbe
arpl
jnp
shl
pushf
fmuls
or
mov
sub
mov
subb
movsb
aaa
fldenv
sarl
xchg
mov
add
and
jl
outsb
xchg
movsb
test
xchg
push
mov
popw
movsl
cmp
or
lahf
push
xor
data16
xlat
and
adc
or
stc
add
out
jb
lods
mov
call
fdivs
jl
pop
pusha
push
xchg
cmp
mov
movsb
dec
and
pop
sti
dec
adc
jb
iret
and
fwait
inc
mov
loopne
test
sahf
stos
mov
int3
dec
aaa
push
loopne
pop
and
xchg
push
or
movsb
inc
pop
adc
out
cmpsb
in
xchg
pop
or
sbb
ss
xor
dec
mov
and
lods
or
ret
nop
lds
leave
dec
cmpsl
push
jl
mov
jg
jg
icebp
lret
dec
fistpll
push
arpl
shlb
int
cs
icebp
aad
adc
mov
sti
cmp
andb
adc
push
push
cmp
cwtl
xor
pop
adc
les
ficompl
popa
push
push
push
add
add
jb
mov
and
mov
push
cltd
daa
adc
popa
std
int3
dec
mov
repnz
call
in
dec
jmp
dec
outsb
fidivrs
repnz
jb
mulb
xor
xor
jae
cli
lcall
ret
out
adc
mov
dec
in
and
push
cmp
and
nop
dec
inc
int
lock
shrl
push
mov
cltd
js
mov
in
pop
mov
mov
lahf
fildll
gs
shll
int3
aad
dec
push
leave
shlb
inc
es
push
jbe
in
xor
sub
push
icebp
mov
mov
test
sub
ja
push
int3
sbb
cltd
fs
sbb
jmpw
clc
cli
rcll
adc
cmp
pop
dec
loope
pop
lahf
repnz
push
test
std
sbb
int
dec
mov
mov
sbb
xor
bound
inc
stc
adc
cs
popa
inc
xor
sti
test
scas
pop
push
fidivrl
sti
ljmp
jg
mov
in
es
arpl
sarl
cwtl
jno
loop
pop
xchg
mov
push
cltd
xchg
mov
rcll
pop
jle
or
xor
movsl
pop
incb
push
movsb
imul
test
pop
sub
or
mov
xor
pop
test
or
stos
adc
fs
mov
push
sub
jg
inc
cmc
cwtl
inc
push
arpl
aas
pushf
dec
and
pushf
ja
add
inc
mov
pop
fidivrs
pop
mov
mov
or
dec
xor
idivb
jge
rol
filds
xchg
jg
daa
pusha
and
divb
aaa
fucom
or
je
push
sub
out
pusha
push
inc
in
xchg
ja
mov
lcall
xlat
dec
mov
jmp
fstps
fisttpl
cmp
mov
sub
mov
pop
in
sub
movsb
pop
inc
js
sti
cmp
sbb
jnp
pop
pop
adc
mov
pusha
ljmp
test
movsl
mov
xchg
dec
insl
shrb
xchg
adc
xor
shlb
mov
insb
xorb
mov
nop
cmpsb
rcrl
jb
mov
cmp
sbb
gs
push
dec
stc
cli
mov
add
cltd
or
pop
add
imul
subl
sub
in
or
hlt
jbe
inc
mov
mov
mov
or
cmp
push
mov
inc
aaa
test
in
and
out
or
bound
int
loop
gs
push
jmp
pextrw
cli
test
xchg
sub
mov
popl
xchg
test
int
in
push
outsb
lds
xchg
lods
ljmp
cwtl
popa
cltd
ds
jle
bound
jmp
loope
sti
sbb
pop
leave
stos
push
int
xor
mov
dec
or
test
mov
pop
sti
cli
mov
gs
mov
adc
movsl
je
inc
sar
andb
push
test
fisubl
xchg
or
xor
mov
jns
sbb
jae
enter
push
sbbl
push
aad
mov
push
push
ljmp
mov
div
mov
lahf
stos
adcb
fadds
mov
xchg
cmp
xlat
lock
rcrl
into
adc
cmp
xor
popf
scas
mov
popa
push
stc
lds
or
push
jb
clc
add
or
mov
sarl
out
rclb
mov
enter
and
out
sbb
xchg
and
popl
bextr
mov
cmpsb
add
pop
mov
ret
pop
mov
pusha
cmp
adc
mov
adc
hlt
lcall
mov
pop
lret
popf
leave
and
mov
cmp
lcall
shll
int3
ret
repnz
lods
cmp
out
inc
add
xor
fucomp
jns
pop
xor
cmpsb
dec
pop
arpl
cmp
adc
mov
jnp
hlt
inc
sub
lock
repnz
xchg
call
dec
sbb
jae
roll
fmuls
jge
jnp
inc
cmp
jae
enter
dec
stos
lahf
ljmp
out
shlb
incl
cltd
dec
call
inc
pop
xchg
and
xor
mov
outsb
es
fstpl
call
pop
mov
out
or
rcrb
adc
int3
bnd
dec
or
mov
mov
les
jno
rcll
ja
fdiv
fisttpl
add
shll
xor
sti
sub
sbb
jbe
outsw
shlb
ficoml
mov
and
and
pop
into
addl
or
enter
jl
pop
clc
xor
cltd
aas
add
insl
push
jb
adc
mov
mov
push
mov
imul
xlat
aaa
lahf
add
subb
mov
jl
int3
lock
repnz
stc
mov
shrl
xchg
or
nop
xchg
jns
rorb
decl
sub
inc
cmpb
aas
cwtl
push
incb
lds
imul
ds
mov
pop
les
into
pop
cli
fists
movsl
jns
jo
arpl
decb
in
push
sbb
jmp
push
sub
cli
mov
sub
lcall
xchg
adc
insb
ret
push
clc
out
test
fxtract
push
xchg
pop
xchg
dec
fsubl
bswap
dec
loop
mov
sbb
push
call
mov
adc
xor
push
mov
fidivl
sbbb
hlt
mov
inc
push
cmpl
insl
lods
or
ud1
je
ljmp
mov
and
or
xchg
xchg
jbe
pop
and
aam
test
stos
aas
popa
and
rorb
sbb
sbb
imul
adc
sub
repz
mov
mov
fdivl
out
arpl
popf
flds
push
pop
jae
lock
sbbb
and
mov
les
xchg
outsb
jle
xor
pop
popl
fstpl
lahf
inc
add
pop
insb
dec
lcall
or
iret
push
inc
or
jle
js
sbbb
xchg
cs
addr16
rcrl
mov
test
jge
adc
or
jo
mov
enter
js
lds
das
jecxz
stc
es
push
scas
cmpsl
xor
jecxz
mov
test
push
mov
in
inc
mov
cmp
jne
adcb
test
adc
into
jnp
stos
aas
xorl
in
xchg
ljmp
sub
orl
dec
stos
push
aam
fsubs
daa
subb
push
sub
jnp
mov
ds
and
jle
roll
xor
or
sub
jbe
and
pop
mov
ltr
call
jae
push
jmp
ljmp
test
inc
jno
xchg
mov
flds
pop
inc
push
aas
xchg
leave
lock
and
lahf
jg
cmp
imul
jge
inc
rcrb
mov
push
xchg
xor
mov
loope
popa
or
xchg
and
data16
sarb
pop
dec
cmp
jmp
hlt
add
rclb
cmp
cmp
mov
dec
mov
pop
adc
std
mov
sbb
cmp
adc
insl
xor
sbb
adc
dec
aas
cmp
stos
je
mov
test
cli
sbb
mov
adc
adc
push
sub
inc
push
xchg
stos
lock
push
sub
nop
and
mov
inc
sub
inc
and
xchg
and
lods
pop
sbb
sub
sarb
data16
pop
out
mov
test
mov
mov
int3
jl
or
imul
pop
movsb
repz
gs
mov
mov
jp
mov
mov
sahf
add
cld
scas
orb
xchg
test
aas
fistl
fcompl
push
cmp
push
out
and
int3
out
push
int
dec
fdivrl
imul
pop
xor
sub
loopne
mov
mov
notl
pop
push
popa
popa
icebp
add
mov
jo
fldcw
aaa
mov
sub
mov
ret
sbb
ja
in
inc
pop
push
dec
add
jp,pn
daa
fs
xor
ljmp
dec
and
lods
in
shrb
jbe
adc
jge
dec
xchg
cmc
cmp
into
xlat
jl
psrld
and
add
push
icebp
jle
lret
or
xlat
adc
jbe
in
adcb
mov
repnz
mov
int
fstpt
and
shr
add
ret
mov
xchg
xor
ret
stos
inc
or
sahf
out
icebp
sub
es
cmc
adc
enter
add
lds
adc
mov
loopne
sub
inc
setno
mov
jp
pop
push
insl
push
mov
sub
arpl
push
addl
stos
int
adc
or
sti
xchg
adc
xchg
inc
dec
lcall
idivb
scas
xchg
lods
push
ja
repnz
in
fs
jnp
outsl
test
mov
and
jl
inc
mov
xor
or
cmpsb
imul
aaa
das
sub
call
adc
test
xchg
negl
lds
push
add
and
scas
loopne
cmc
das
cltd
ljmp
stos
sbb
inc
jo
cmpsl
int
xor
jne
call
sbb
and
cmpsl
adc
int3
xor
push
pop
mov
jo
mov
sub
push
and
clc
cmp
push
sbb
pop
adc
jge
jno
test
jmp
adc
popf
push
test
add
mov
push
outsl
in
xchg
and
jg
cmp
mov
pushf
cmc
sub
add
mov
pop
mov
xchg
into
and
insl
cmc
xchg
sti
pushf
xchg
and
cmpl
ljmp
sub
aam
jbe
pop
jnp
cli
repz
push
loope
das
test
dec
fwait
lds
shll
in
push
jle
ja
clc
adcb
mov
sbb
nopl
cld
imul
sbb
push
xchg
sub
sahf
and
mov
xchg
mov
jbe
test
aas
jae
add
adc
test
sbbl
jge
dec
push
jbe
sbb
fwait
dec
jno
mov
leave
push
aas
dec
stos
push
sbb
push
xchg
dec
jmp
mov
push
fdivp
push
orl
mov
arpl
xchg
mov
out
cmpsb
dec
pop
loopne
jle
pop
int3
rorl
push
mov
cmp
inc
aad
lea
popa
in
cli
push
lea
mov
decb
int3
mov
mov
cmpsb
cmpsl
sub
cmp
ror
jbe
dec
mov
mov
mov
sbb
popf
jecxz
push
js
andb
xor
xor
iret
or
movsl
mov
dec
mov
in
pop
xor
push
test
xchg
je
mov
jecxz
mov
popa
vpsrlw
mov
jp
rclb
clc
add
push
lret
mov
fdivr
or
push
sti
aad
stos
icebp
scas
loopne
xlat
les
mov
push
data16
cli
std
hlt
lret
jle
pusha
adc
repnz
sbb
ljmp
push
cs
leave
jmp
pop
rcrl
xor
pusha
in
fwait
and
test
lahf
push
mov
sub
mov
add
outsb
int3
addr16
ret
loope
fnstenv
das
imul
xorl
mov
mov
xchg
mov
push
push
mov
add
loop
cmpsl
or
test
push
fsqrt
jge
scas
or
repnz
fstpl
mov
sub
fisubs
jle
dec
xchg
lahf
push
or
add
imul
and
add
add
out
push
lcall
stos
scas
pop
stc
fiaddl
aam
scas
dec
repnz
or
std
cmp
push
mov
lea
cmp
xchg
fnstsw
shlb
fisttps
sbb
std
or
das
popl
fmul
cmp
fistl
lcall
cmpsb
xor
add
and
mov
inc
enter
ljmp
mov
jnp
insb
dec
adc
push
and
iret
sti
mov
popa
mov
or
pop
lahf
jno
fwait
pop
out
sbb
inc
rcrl
adc
dec
lahf
insb
pop
dec
sbb
adc
mov
xor
fsts
mov
std
or
ds
icebp
popf
push
inc
mov
add
imul
das
ret
mov
lds
ja
les
or
pop
ljmp
loop
jne
mov
mov
push
mov
cmp
mov
nop
jmp
adc
pop
pop
sahf
cmp
ss
insl
fs
int3
xchg
or
dec
pop
loop
adc
adc
mov
loopne
aam
stos
mov
sub
pop
cmp
lds
call
mov
inc
cmpsl
and
lods
lock
imul
sbbb
mov
and
hlt
dec
inc
movsb
add
inc
jge
mov
cmpsb
push
sbb
iret
rcr
push
pop
addr16
sbb
or
cmp
pop
movsb
clc
in
out
loop
xor
lods
xor
xor
ja
cs
push
stos
out
es
mov
xor
jge
mov
fstpl
push
aas
push
xor
inc
and
rcl
cltd
mov
sbb
lcall
shll
popf
push
repnz
movl
push
or
pop
mov
sub
das
fs
adc
cmp
rcr
dec
mov
sub
mov
aam
pop
lds
mov
xchg
jge
xor
lods
adc
xchg
aaa
rolb
bound
cli
xchg
mov
js
inc
repnz
loop
add
rclb
or
testb
fldcw
in
mov
push
imul
cmp
pop
rcr
lods
cmp
mov
and
pop
jge
aaa
sbbb
cmc
sub
in
adc
or
into
add
jne
repz
shlb
add
jne
inc
cld
mov
test
xor
jmp
adc
sub
dec
jnp
sbb
sahf
xchg
mov
push
push
mov
mov
dec
out
arpl
in
and
and
cli
popa
cwtl
push
adc
pushf
mov
clc
adc
mov
fildll
pop
ret
mov
out
or
and
ljmp
fucom
mov
in
les
int3
mov
and
xor
xchg
test
leave
out
sub
clc
data16
cs
pop
jno
adc
mov
hlt
mov
int3
cmp
push
adc
and
cmp
dec
xor
js
in
lods
daa
test
mov
ja
push
adcl
loope
rcll
sbbl
or
pop
xchg
push
mov
scas
inc
sub
pop
cmp
push
mov
call
insb
inc
push
mov
jnp
sbb
xchg
push
out
or
sbb
cmp
pop
aaa
fldenv
xor
lods
jp
aaa
cmp
in
test
sbb
fnstsw
cld
in
xchg
divl
jcxz
push
in
sub
jb
cs
ljmp
fucomi
lret
lods
sub
jnp
push
insl
repz
frndint
repz
cmpsb
popf
movsb
icebp
mov
test
ja
lea
and
sub
inc
ja
pop
add
pop
movl
mov
inc
mov
daa
shl
xor
push
xchg
daa
add
mov
lock
xchg
in
shll
fisubs
clc
fsubrl
fsubs
icebp
fildl
imulb
int
sbb
jg
fbld
push
sub
insb
add
lock
mov
jecxz
stc
mov
lret
dec
and
bnd
lds
pop
mov
sbb
rorb
jl
bound
xor
outsl
aad
rcll
lret
repz
cmp
push
jo
out
xchg
xchg
in
dec
pop
jmp
and
and
lcall
sbb
scas
std
sub
arpl
push
stos
mov
xchg
sub
mov
inc
lods
sub
and
xchg
cmpsb
ret
out
mov
cmp
mov
push
cmpsl
xchg
add
pop
mov
dec
xchg
dec
add
add
pop
repnz
inc
out
xchg
xchg
mov
int3
inc
leave
bound
and
mov
jb
mov
sar
inc
imul
icebp
jle
pop
xchg
xchg
push
jbe
rcr
sbb
add
jecxz
xchg
imul
addr16
and
mov
les
jecxz
sbb
xor
and
jbe
lahf
jns
sub
push
stc
rclb
push
dec
jmp
add
popf
mov
jge
jnp
in
inc
out
mov
inc
sarb
ljmp
iret
enter
cmp
cmp
fcomps
pop
adc
loop
or
adc
sub
inc
fstl
cmp
lds
xor
ja
inc
mov
stos
jg
jnp
push
xchg
mov
ret
clc
lret
sarb
pcmpgtd
mov
std
addl
or
ret
jmp
dec
or
and
xchg
dec
aam
mov
dec
pop
inc
mov
mov
inc
cmp
or
xor
mov
cmc
lock
rcrl
pushf
ds
push
out
cwtl
inc
add
xor
arpl
rep
out
lea
cmpsb
jo
xchg
lcall
fimuls
add
pop
insl
fwait
pusha
push
call
ret
mov
jbe
xchg
out
mov
cmp
test
sbb
imul
call
mov
push
pusha
movsb
out
fisttpll
xchg
test
pop
subl
jae
scas
gs
gs
loope
ret
mov
out
data16
push
push
mov
mov
scas
stos
pop
das
inc
cmp
idivl
push
inc
pop
stos
xchg
and
and
orb
inc
push
jns
das
jmp
dec
push
outsb
nop
push
data16
and
fmuls
int
hlt
mov
or
pushf
and
xchg
int3
cmp
cmp
lods
ret
inc
sub
pushf
rolb
movsb
xor
pop
or
mov
int
insb
movsb
cmpsl
adc
inc
scas
sbb
jge
dec
out
test
mov
sbb
xor
ret
push
arpl
arpl
mulb
ds
insl
push
fadd
orb
mov
lds
adc
cli
xchg
ja
jno
pop
rorl
sarl
out
or
pop
mov
jnp
push
andb
jnp
adc
and
add
and
xchg
pmaxub
jo
cltd
int3
add
xchg
push
aad
xor
jns
jnp
insl
xlat
jge
inc
push
shlb
test
jo
mov
stc
rcrl
js
xor
cmc
pop
std
jae
rcll
lcall
arpl
pop
rcrb
and
push
add
add
and
push
push
dec
imull
adc
out
loopne
pop
in
ds
push
cmpb
repnz
push
stc
pushf
scas
arpl
lock
shr
iret
mov
jp
sbb
jmp
ja
lcall
jg
pop
inc
dec
out
pop
xchg
ret
sbb
in
push
mov
ljmp
fs
jbe
cmp
sub
pop
mov
push
and
fcompl
cmpsl
mov
leave
fldcw
mov
and
jnp
lret
idivb
mov
xchg
add
stc
add
add
or
sbb
jo
movsl
jmp
and
into
xchg
out
stc
push
cmp
jle
test
or
pop
sbb
outsl
pop
dec
push
pop
pop
jg
sub
fistl
cmpsl
push
mov
imul
cmp
arpl
sbb
fcomps
mov
hlt
in
jecxz
push
out
stc
inc
jl
sti
incb
mov
or
hlt
lea
fsubp
popf
int
mov
pop
shr
popa
pop
mov
repnz
jnp
rcll
stos
or
daa
fs
scas
mov
sub
dec
push
fidivrl
mov
pop
dec
mov
push
or
popa
fcoml
add
adc
mov
dec
dec
and
jg
out
cmp
lds
mov
xor
xor
mov
notb
mov
out
sub
lret
inc
aas
test
inc
adc
cmp
aaa
gs
fidivrl
aaa
cmp
int3
inc
xor
fisubrl
ljmp
mov
jns
clc
fbld
sub
jno
xor
inc
mov
inc
leave
cmc
push
icebp
mov
xchg
lcall
sbbb
push
and
in
mov
out
and
push
push
addl
sub
in
sub
adc
add
test
add
ja
or
clc
adc
ja
imul
cltd
lret
xchg
xchg
mov
sbb
popf
iret
iret
stos
test
or
aam
or
pop
push
clc
pop
orb
pop
sarl
mov
push
jo
lods
stc
pop
cmp
cmp
mov
push
dec
popl
push
call
mov
test
mov
out
and
aaa
add
inc
mov
jne
jno
lods
addr16
xchg
xchg
pop
sbb
mov
aam
testl
add
scas
lock
js
xchg
push
jmp
insl
xchg
andb
mov
lret
and
insb
xchg
mov
mov
xchg
lods
fdivs
inc
out
dec
mov
mov
loopne
mov
or
sbb
bound
cli
push
adc
out
out
popa
fs
sub
ljmp
mov
in
push
popf
push
mov
std
aaa
leave
in
outsl
pop
push
add
adc
into
xorb
mov
cmc
rcrb
sbb
push
in
mov
in
adc
hlt
sbb
and
mov
cmpsb
pminsw
insb
das
xor
or
pop
mov
orb
jbe
push
jb
xchg
xor
push
or
je
mov
push
into
enter
mov
ret
cmc
sti
push
jge
xlat
fstpt
int
cmp
cmp
xchg
xchg
fidivrl
sbb
jle
inc
mov
and
stos
scas
sub
es
sub
lea
frstor
clc
xchg
jae
sub
jbe
popa
testb
jo
mov
cmp
push
pop
dec
movsl
inc
pop
jo
jl
pop
arpl
or
push
les
inc
js
mov
sbbl
test
mov
sbb
sbb
leave
cmpsl
inc
mov
inc
dec
or
xor
std
cmp
push
imul
dec
add
sti
fucom
xchg
cwtl
sbb
call
and
jle
add
push
add
lock
loope
pop
pop
push
and
mov
mov
insb
sbb
xor
cmpsb
mov
push
or
sub
cs
out
fs
sbb
imul
mov
stos
lock
into
inc
repz
or
dec
nop
jle
inc
orb
popa
and
jmp
gs
mov
mov
xchg
pushf
fisttps
cmp
bound
hlt
imull
mov
jl
mov
jb
sub
inc
jo
adc
xchg
sbb
lods
rorl
and
adc
test
lods
mov
inc
pop
std
je
push
iret
pusha
add
je
js
imul
iret
shlb
outsb
sbb
jmp
sub
sarl
xor
sub
subb
push
fnstenv
push
mov
loope
in
insl
pop
pop
or
out
sub
dec
jmp
and
pop
insl
or
dec
pop
inc
jno,pt
mov
mov
loopne
inc
fbld
pop
in
sub
jae
adc
jne
fcmovb
mov
jmp
and
sbb
lret
scas
insb
mov
enter
jns
and
lock
addb
js
aaa
push
fsub
int
add
in
sub
dec
inc
dec
dec
fiadds
repz
mov
lea
jg
cmp
test
ret
jmp
push
or
lret
pusha
mov
das
mov
repz
jge
push
mov
movl
inc
imul
int
test
xor
aas
xchg
xor
jp
sar
inc
sahf
dec
mov
scas
ja
lods
inc
or
aaa
jg,pn
and
jbe
add
push
inc
or
sub
mov
daa
dec
rcl
jle
out
mov
push
jecxz
dec
outsb
push
ret
stos
aaa
sbbl
or
inc
ficomps
std
add
ret
xor
out
xrelease
mov
push
inc
filds
subb
sbb
dec
movsl
xlat
pop
push
les
cs
jb
outsl
xchg
jg
push
and
mov
into
mov
lock
mov
pushf
stc
sahf
add
mov
test
ljmp
cmc
pusha
in
lods
aam
subl
sub
xchg
xchg
lahf
dec
rorl
faddl
mov
mov
cmp
dec
dec
cld
push
ds
test
dec
lods
pop
push
hlt
es
out
jmp
loopne
mov
out
sub
inc
and
sar
cmp
jp
mov
scas
or
pop
inc
sub
pop
mov
add
jmp
lods
dec
xchg
in
flds
test
popa
inc
add
cltd
jecxz
fs
sub
std
rsm
inc
xor
roll
pop
rcrl
mov
jp
mov
out
xchg
sbb
mov
xchg
loope
inc
lret
aaa
sub
push
nop
sti
loop
push
sbb
add
std
addb
add
cwtl
dec
dec
mov
rolb
test
rclb
shll
cmp
rcrb
sbb
jo
cld
das
push
rcr
loop
in
pop
mov
popf
imul
xchg
sub
lret
xchg
and
xor
aad
out
pop
movsl
orb
adcl
int3
mov
pop
push
test
mov
ficoml
xchg
xchg
daa
sti
cmp
test
pusha
pop
sbb
push
ss
xor
pop
clc
push
add
out
xchg
xchg
sbbb
push
add
imul
mov
shrl
ds
dec
inc
push
hlt
ljmp
sarl
sub
mov
push
mov
ret
push
cmpsb
fnsave
or
cmp
out
inc
nop
adc
mov
addl
inc
cld
pusha
jb
fldl
xlat
adc
ss
popf
push
scas
jne
pop
add
pop
pop
outsb
adcb
popf
sti
jbe
je
xor
aaa
out
cmp
xor
mov
push
add
out
test
or
xor
cwtl
stc
adc
mov
dec
xchg
sbb
imull
adc
and
or
mov
mov
push
jo
std
xchg
inc
outsb
hlt
pop
pop
les
inc
gs
dec
pop
sub
mov
fstpt
adcb
js
ret
clc
xchg
not
test
push
mov
lret
push
add
xor
mov
sahf
decl
rclb
inc
cmp
out
add
mov
xchg
push
int3
mov
add
rorl
popf
cltd
call
push
mov
pop
lea
mov
aaa
pop
fnstenv
fisttpl
ljmp
lret
ficoms
arpl
sbb
stos
repz
or
clc
bound
sahf
jmp
xchg
int
mov
pop
or
cmp
mov
lock
fcompl
or
and
cmp
scas
jo
cmp
dec
dec
shr
jo
xchg
ret
daa
and
sahf
rol
outsl
shlb
pushf
adc
push
lcall
andl
xor
mov
cmpb
mov
fwait
xchg
pop
jne
and
insb
xchg
scas
or
add
mov
sub
test
loop
les
push
and
adc
and
out
dec
xor
js
push
fs
mov
and
push
mov
xor
dec
ret
mov
insl
fwait
es
xchg
add
adc
mov
mov
add
ss
in
mov
jnp
sub
dec
out
fisubs
pop
gs
ljmp
cltd
or
pop
dec
and
xchg
ret
dec
je
lods
cmp
fwait
sub
iret
and
jb
cmp
gs
pusha
and
test
mov
sub
in
push
arpl
popa
cmc
adcl
addr16
sbb
nopl
mov
lock
ret
gs
cld
inc
scas
push
aas
es
push
nop
or
and
adc
mov
jmp
cmc
adcb
xor
out
add
out
clc
xchg
ret
out
loop
insb
mov
stos
cmc
add
sbb
mov
xor
cs
push
fdiv
shll
icebp
pop
dec
or
daa
mov
les
in
pop
rcrb
jg
loope
add
pop
imul
cwtl
stos
out
xor
jmp
sbb
xchg
sbb
add
mov
mov
scas
push
sub
pusha
mov
lods
xchg
mov
cmp
add
inc
pop
inc
and
js
fstpt
xchg
loop
out
adc
mov
imul
and
outsl
add
iret
jecxz
and
scas
push
fists
xor
dec
pop
test
out
insb
mov
ja
ljmp
loopne
clc
fsts
xchg
cmp
push
dec
cmp
sbb
lock
mov
xchg
cmpsb
roll
cwtl
xor
popf
mov
add
popa
into
cmp
test
adc
push
add
or
loopne
jnp
pop
pop
adc
repnz
imul
rol
out
dec
mov
xchg
stc
dec
push
sbb
inc
cmp
je
or
xchg
ret
sbb
aas
repz
mov
mov
adc
and
xchg
cmc
and
jl
call
mov
mov
pop
push
mov
test
mov
mov
ret
fcoml
mov
inc
mov
loopne
add
mov
sbb
pop
adc
shlb
mov
jae
cmp
inc
insl
rol
cmp
and
mov
ds
jno
out
mov
out
imul
test
mov
int3
pop
xchg
aad
xchg
mov
or
push
inc
adc
sahf
inc
mov
inc
roll
incl
stos
in
stos
sub
roll
or
psubusw
loopne
shrl
dec
ret
mov
scas
test
push
mov
shrb
stc
into
shld
dec
mov
stos
cmp
xor
pop
xor
sub
mov
jmp
jmp
pop
sub
test
scas
mov
stc
sub
stos
jmp
mov
dec
push
and
and
push
std
dec
imul
test
jae
lcall
and
jp
insb
iret
popf
push
imul
sbb
xchg
cmp
movsl
scas
jns
add
popa
movsl
imul
add
loopne
dec
rolb
mov
xor
and
fs
fbstp
mov
test
push
mov
pop
stos
jl
dec
out
lcall
jg
movsl
mov
add
xchg
cmp
pop
test
jge
adc
inc
jae
enter
xchg
cld
mov
cmpsb
push
cmp
adc
cmpsl
divb
loope
dec
add
sub
jo
xchg
stc
mov
push
insl
adc
int
icebp
cmp
lcall
mov
mov
push
mov
call
cmp
cld
loopne
lret
mov
sbb
fcompl
dec
mov
add
popa
test
jo
loope
dec
sub
movsl
adcb
jbe
adc
pop
push
repnz
mov
mov
roll
aas
xchg
or
xor
jg
out
repnz
xlat
dec
ret
lock
xchg
call
cmpb
outsl
add
mov
jns
stos
adc
enter
outsl
loope
rcrl
pop
orl
insb
enter
push
fsubl
xchg
and
push
mov
cld
scas
imul
scas
jno
mov
xor
fadds
jb
aas
mov
mov
int3
out
jp
add
subb
cmp
pop
adc
scas
iret
arpl
addr16
jne
gs
test
or
pop
stos
aas
inc
xor
add
lcall
call
mov
jg
outsl
fnsave
ss
sbb
loopne
push
sbb
jmp
sahf
popa
push
cmc
xor
dec
or
jge
xor
cmp
inc
inc
sbb
das
add
arpl
jo
xor
push
ret
mov
rol
aad
lods
popf
adc
fidivl
std
dec
dec
adc
jmp
mov
scas
xor
pusha
mov
pop
inc
dec
jno
mov
int
loopne
add
aad
pusha
add
mov
pop
js
jl
sbb
dec
sub
cmpb
inc
cli
inc
xchg
xor
xor
pusha
outsb
mov
jbe
movsb
jge
mov
aas
mov
push
jne
jl
dec
sub
push
test
fs
fdivrs
mov
mov
jbe
leave
inc
aad
fs
xorb
push
pusha
mov
jae
dec
addr16
jle
push
push
arpl
pop
inc
mov
adc
xor
icebp
test
xchg
andl
xlat
out
mov
and
imul
mov
test
cmc
mov
arpl
je
movsb
jecxz
stos
outsl
cmc
popf
jg
inc
cltd
les
mov
pusha
cld
imull
xchg
shlb
inc
mov
jns
test
sub
lahf
test
jae
and
push
insb
lret
daa
ficoml
nop
and
jp
xorb
cld
icebp
mov
addb
mov
cmp
sub
dec
dec
fisubrl
daa
xor
cmp
sub
mov
mov
inc
pop
les
inc
sub
and
lock
inc
imul
pop
arpl
andb
inc
das
or
xor
push
mov
mov
enter
rol
ficomps
xchg
dec
out
inc
or
mov
dec
push
outsl
add
sub
ljmp
js
in
pop
jne
and
repz
jne
push
lcall
popf
xlat
xchg
das
jg
mov
sbb
repz
sahf
and
cmpsl
dec
shll
jp
insb
in
jb
adc
and
call
gs
jns
hlt
ljmp
dec
fcmove
cmpsb
lret
clc
mov
cld
hlt
adcb
fsub
incl
cmp
pop
ret
or
mov
lcall
es
xchg
pop
ss
add
push
adcb
pop
jb
dec
ret
xchg
pop
add
add
lret
cld
adc
repz
xchg
jecxz
xor
xor
add
lods
cmpsl
jp
fisubl
adc
push
test
dec
insb
das
insb
dec
and
out
push
insb
adc
insb
aam
cmp
cs
insl
inc
adc
xchg
jnp
insl
scas
movsl
xchg
xchg
call
jmp
dec
cmpb
lret
stc
out
testl
movsl
push
cmp
mov
out
pushf
push
lret
sbb
or
inc
pop
mov
fcmovnu
push
dec
push
adc
pop
xchg
js
mov
fdivs
push
push
mov
inc
in
cmp
clc
stos
loop
lret
inc
fisttpl
xor
dec
jne
dec
cmp
lcall
adcl
push
jp
lahf
xchg
fnsave
ja
rorb
pop
inc
pop
insb
xor
test
mov
xor
jmp
lods
sbb
mov
mov
aaa
xor
test
push
inc
xchg
push
dec
adc
mov
pop
shll
rcrl
push
outsl
imul
sbb
cmpsb
loopne
fs
mov
push
inc
mov
mov
xor
in
decl
mov
xor
clc
xchg
popf
pop
in
aaa
or
aad
pop
mov
std
mov
push
imul
popf
push
cwtl
push
mov
fildl
fmuls
mov
xchg
push
out
add
sti
sub
out
je
sub
xor
les
outsl
push
xor
xor
pop
fiaddl
jl
les
lds
cmp
out
rol
pop
rcr
ror
and
pop
add
stc
mov
lret
pusha
shrb
insb
pop
adc
hlt
push
lods
sbb
pop
mov
ret
aad
dec
xchg
push
hlt
dec
pop
pop
mov
rcrb
scas
or
out
out
addps
sbb
jle,pn
and
push
into
cwtl
les
ret
sahf
enter
movsl
repnz
dec
test
stos
mov
xchg
in
or
dec
jnp
cmp
mov
xchg
loopne
insl
adc
repz
cmp
hlt
btr
ds
mov
pop
xchg
aas
and
cmp
lcall
xor
rorw
out
aaa
outsb
les
popf
or
push
mov
push
adc
mov
push
or
dec
cld
cmp
sub
adc
mov
and
sub
jnp
adcb
jmp
mov
enter
call
sarl
out
push
test
and
gs
out
xor
hlt
outsb
and
fistps
lods
dec
mov
dec
ds
pop
fstps
mov
dec
ja
pop
sbb
es
imul
lds
push
mov
out
inc
jge
adc
or
xchg
arpl
loop
popf
mov
jl
bound
inc
testl
pop
adc
clc
sbb
in
xor
ret
dec
mov
pop
push
imul
pop
mov
and
lods
jo
popa
sbb
in
lods
test
cmp
adcb
jg
ljmp
xchg
jg
cltd
and
sub
gs
mov
fs
lock
stos
fldt
gs
push
sub
das
aas
sub
in
repz
mov
dec
inc
arpl
add
lods
out
or
ror
ds
aaa
aad
jae
or
jecxz
jmp
ds
test
add
aas
jmp
xorb
push
sub
xchg
and
mov
mov
shrb
adcb
inc
out
mov
xor
mov
cli
sbb
adc
stos
stos
dec
andb
addb
pop
jmp
xchg
data16
mov
adc
mov
idiv
test
jbe
mov
sub
cmpl
xor
hlt
out
sbb
xlat
or
lret
lret
pop
dec
mov
nop
arpl
pop
jae
addl
pop
xor
dec
ret
sbb
dec
add
sti
nop
mov
xchg
lock
lods
movb
and
dec
repnz
ss
rcr
lret
xor
sub
cmp
jae
pop
out
and
dec
xchg
lods
and
inc
ffree
cld
aas
cmp
lret
xchg
xchg
jno
mov
ror
mov
push
jns
mov
cmp
stos
push
sarl
dec
mov
cltd
sti
ljmp
jo
fstps
cld
fidivrl
out
sbb
inc
loop
add
outsl
xor
outsl
mov
xchg
sahf
popa
das
or
int3
jo
cs
and
mov
or
sbb
roll
cmpsl
rorb
sbb
out
out
std
or
lret
and
rorb
fldt
jge
xchg
lods
dec
pop
and
rcrl
out
sbb
adc
lods
test
nop
sub
dec
in
and
or
mov
mov
add
mov
xor
xlat
stos
jge
aas
mov
jno
inc
insb
push
sti
dec
mov
jno
inc
nop
sbb
dec
loop
inc
mov
loopne
movsb
imul
orl
push
add
popa
fs
add
nop
mov
cmpsb
mov
or
test
jg
sbb
push
inc
mov
loope
ljmp
xchg
mov
lea
mov
add
jl
sub
popf
into
popf
inc
out
or
arpl
ret
xor
mov
fcmove
mov
cltd
push
lcall
call
scas
push
psllw
cmp
xchg
ds
xchg
mov
add
or
lcall
hlt
sub
dec
loope
mov
jg
call
mov
ret
jbe
clc
cmp
mov
xor
out
lret
bound
jl
xor
stos
and
jne
push
sbb
jmp
sbb
loope
std
in
mov
out
fists
pop
mov
mov
inc
xchg
ret
clc
sub
mov
pop
insb
push
call
test
mov
dec
xor
out
push
sub
es
sarb
int
pushf
pushf
sub
cmp
imul
pop
mov
sahf
cld
rol
call
cmpsl
xor
sbb
addb
test
and
jecxz
decl
push
mov
or
call
pop
repnz
insb
mov
daa
sahf
xchg
jo
int
dec
inc
fwait
xlat
stos
jae
sub
or
repnz
or
jbe
or
xchg
in
pushf
les
fdivs
es
mov
xchg
mov
cmc
inc
or
push
xchg
cmp
jl
push
shlb
into
lret
pop
pop
mov
decl
ret
mov
das
popa
push
testb
mov
mov
xchg
cwtl
fcoml
lds
jp
into
push
jg
fdivp
inc
div
iret
lcall
dec
inc
mov
pop
gs
mov
out
xchg
adc
dec
sub
jnp
cmp
fldz
push
sbb
xor
fmull
cli
mov
push
inc
cli
jno
mov
inc
pushf
mov
or
fsts
add
rcl
in
fildll
add
dec
jno
sbb
mov
jmp
rep
dec
mov
lods
in
inc
cmc
jno
iret
out
jae
sahf
cmp
adc
pop
or
ffreep
addr16
std
jecxz
out
mov
inc
adc
pop
outsb
sub
jb
cwtl
into
and
push
jl
push
adc
sahf
adcb
xor
push
imul
adc
jae
jecxz
mov
xchg
jmp
mov
mov
sbb
jb
rorl
and
aaa
sbb
fs
movsl
dec
add
movl
mov
arpl
push
add
push
lods
push
int3
or
pushf
jb
pop
dec
pop
rorb
xor
mov
dec
daa
aaa
sahf
mov
xchg
nop
test
mov
adc
cmc
jnp
lret
js
push
ja
jg
adc
mov
lea
ja
das
subb
clc
shll
push
scas
mov
jg
xchg
sbb
and
fs
dec
xor
dec
adc
dec
cmp
pushf
jle
and
sub
aam
out
enter
jne
push
xor
fdivl
xchg
inc
cmp
cmpsb
icebp
jb
enter
push
ds
clc
cwtl
pop
cmc
je
ds
add
cmp
cmp
inc
adc
decb
push
stos
popf
push
aam
dec
incl
mov
or
fiadds
inc
dec
and
sbb
daa
arpl
mov
xor
cmpsb
xlat
iret
jne
jnp
loop
aas
xor
outsl
or
mov
jne
sahf
mov
mov
shll
sar
lds
and
mov
dec
mov
mov
ja
pop
stos
fnstsw
xor
movsb
jmp
test
pop
or
cwtl
push
leave
and
outsl
daa
xadd
lahf
push
movsb
and
cwtl
pushf
mov
stc
out
in
pop
or
inc
mov
lock
xchg
data16
add
mov
mov
sti
jecxz
mov
inc
dec
inc
stc
and
ret
jne
mov
and
popf
add
scas
dec
sub
jmp
jge
aam
mov
inc
scas
in
mov
pop
test
jp
mov
cmpsb
insb
ficoml
add
xchg
lcall
into
imul
enter
daa
sbb
cmp
inc
mov
add
or
fists
outsl
push
lret
xchg
dec
shll
cmp
rorb
xor
cld
or
aaa
outsl
popf
xor
xor
daa
or
adc
mov
adc
clc
stos
test
xor
add
test
int
test
add
lret
mov
push
daa
push
sub
insb
loopne
pop
or
lcall
loop
xchg
mov
loope
frstor
push
es
ret
xor
setle
int
or
cmpsb
pop
or
arpl
xchg
popa
ds
jo
scas
dec
enter
mov
fnsave
scas
decl
repnz
pop
adc
ja
pop
fstpt
fisttps
jle
adc
push
dec
pop
lods
ret
mov
xor
cmp
into
inc
rcrl
or
jle
test
adc
rorl
push
cmp
loop
addb
cli
out
mov
roll
js
and
or
push
int3
movsl
adc
insb
je
aas
jg
lds
jle
jecxz
lahf
cmp
divl
xchg
pop
sbb
fmul
add
xchg
fptan
sbb
pop
out
es
mov
fnstenv
popf
test
and
sub
sahf
cmp
sbb
cwtl
stc
mov
loop
and
jp
dec
adc
jecxz
lcall
dec
mov
pop
and
and
nop
jecxz
xchg
sbb
aaa
sub
stos
pop
cmp
arpl
mov
and
mov
add
testl
push
lret
iret
xchg
pop
sbb
roll
pushf
push
xor
enter
int3
fidivrs
repnz
cmc
imul
test
jecxz
mov
cli
push
cmpsl
ret
outsb
pop
sbb
imul
xchg
arpl
jo
hlt
xor
jo
cltd
sahf
test
cmp
lods
sbb
fdivs
jl
ret
push
in
fldl
popa
dec
fmul
sub
adc
ja
jno
or
call
sbb
cmp
or
hlt
add
or
faddl
or
lds
out
data16
sbb
popf
sbb
out
adc
test
popa
stos
pop
adc
insb
inc
push
jmp
enter
add
and
jns
and
push
je
rorb
sahf
sbb
ja
jmp
test
dec
fdivrs
cltd
inc
sub
cld
sbb
mov
pop
mov
imul
lret
das
push
xor
lea
rcll
and
idivb
ret
xchg
or
sub
call
div
iret
popf
jb
sbb
xchg
cmp
orl
fwait
adc
frstor
test
sti
out
sbb
mov
iret
dec
jns
or
push
push
adc
sarb
push
clc
jne
jp
in
sbb
into
adc
inc
ss
sbb
call
jb
push
test
or
pop
popf
pop
rol
movq
xchg
and
sahf
add
push
push
int
shl
mov
call
mov
dec
mov
push
roll
es
pop
daa
mov
popf
lret
cld
stos
test
flds
cmp
aas
in
mov
fmull
mov
aas
or
inc
ret
out
imul
mov
dec
jno
outsl
insl
rol
aam
rclb
pop
shr
adc
fbld
mov
fsubrs
and
adc
push
outsl
fisttpll
mov
mov
xorl
push
pop
cmp
je
mov
jp
shlb
or
dec
xchg
stos
in
pushf
jmp
sahf
sahf
jns
push
bnd
cmpsb
inc
or
mov
out
iret
dec
fwait
in
jge
pop
in
push
es
clc
lret
xchg
cmp
adc
pop
repz
test
lods
push
mov
mov
or
pushf
outsl
adc
imul
in
bound
lcall
testb
mov
cs
jbe
jp
es
aaa
jg
push
sub
xchg
int3
sbbb
inc
std
into
pop
fs
pushf
mov
fwait
adc
push
mov
mov
push
decl
mov
cmp
lock
jg
add
adc
ja
iret
inc
ds
insb
lods
dec
cmp
jnp
xor
adc
jge
and
std
daa
sbb
lea
xor
pop
cltd
popa
mov
divb
dec
inc
xchg
inc
and
iret
std
sti
xchg
stos
pop
push
cmp
xchg
add
addb
pop
mov
push
lret
repnz
icebp
cmp
outsb
ret
fwait
xchg
aam
xor
stc
push
repz
mov
sbb
xchg
mov
mov
fdivrl
jmp
xchg
subl
enter
jmp
sbb
aaa
xor
in
xchg
fdivs
jo
ret
aas
cmp
pop
and
cmp
icebp
sub
dec
xchg
movsl
jge
leave
mov
cmp
xchg
jge
movsb
adc
inc
xor
mov
insb
or
movsb
mull
lahf
mov
mov
mov
inc
and
mov
stc
lret
xchg
imul
pop
fisttpl
int3
add
push
push
inc
adc
test
test
push
mov
ja
jnp
push
dec
xor
mov
outsb
lret
testb
and
add
mov
adc
ret
dec
push
jns
dec
adc
pop
cmpsb
lcall
jo
cmp
pop
cmpsl
mov
push
inc
jo
shl
xchg
mov
lods
add
inc
fldt
rorl
bound
int
inc
jno
lea
xchg
cs
lds
scas
movsb
in
rcl
and
mov
je
sbb
and
or
dec
or
pushf
shrl
adc
icebp
pop
adc
shll
push
fmull
out
or
jns
mov
or
push
sub
inc
dec
addr16
cltd
fwait
push
ds
scas
sub
data16
push
mov
cmc
push
sub
sbb
push
dec
dec
aam
inc
sbb
xchg
adc
add
dec
jle
lods
xchg
jbe
out
mov
sahf
add
xor
mov
sub
test
ret
inc
movsb
cld
mov
stos
dec
dec
mov
pop
movsl
iret
pop
mov
pop
leave
sti
sub
adc
inc
mov
in
daa
sub
nop
sbb
push
in
xor
pop
jae
imulb
mov
in
xchg
add
adc
mov
mov
test
xchg
sbb
sub
and
inc
loop
rcr
mov
mov
mov
inc
jmp
xchg
stos
adc
into
sti
clc
adcl
add
insb
mov
pusha
or
adc
mov
les
mov
nop
js
sub
leave
jg
and
push
dec
push
fmuls
adc
cmp
rcr
stos
into
cmp
fimull
push
add
dec
ret
imul
faddl
test
jge
cmpsb
mov
enter
sub
int
or
push
inc
sbb
sbb
mov
adc
sbb
rol
mov
adc
mov
test
imul
addb
inc
popa
es
pop
in
push
fnstenv
les
push
lahf
aam
cmp
mov
scas
lea
pop
jle
sub
insl
pushf
and
pusha
xchg
pop
inc
jmp
mov
stos
test
mov
lods
lea
mov
pop
addr16
jne
dec
fiaddl
inc
add
push
jae
stc
xchg
add
fstps
repnz
cmpsl
cmp
shlb
int3
pop
jg
cltd
jno
loopne
inc
aam
movsb
mov
loopne
pop
dec
adc
rcrl
fcmovnb
out
sar
cs
mov
repz
rcrl
or
dec
jns
pop
pop
cmp
repz
testl
add
cli
pop
pop
xchg
xchg
mov
and
mov
es
stc
fs
push
sub
rol
fbld
lods
mov
xor
dec
test
in
push
or
frstor
shl
push
mov
faddl
lock
test
bound
inc
in
adc
pop
nop
in
testl
pop
push
fucomp
sbb
sbb
xchg
jmp
out
out
std
inc
std
jg
fs
jl
or
push
and
and
mov
jp
cmp
pop
push
pop
test
arpl
mov
je
and
or
pushf
mov
jg
popa
pop
ror
pop
and
sub
ds
js
mov
lret
js
into
aam
push
in
ljmp
mov
mov
sti
cmc
jecxz
int3
loopne
int3
rorl
test
ret
xchg
call
adc
ljmp
jl
int3
inc
cwtl
xor
idiv
cwtl
jo
movsb
jg
push
dec
cmpsl
lret
cli
push
mov
sbb
imul
add
sbb
int
mov
lcall
pushf
pop
int
mov
into
push
xchg
scas
popf
jnp
or
xchg
scas
stc
or
popa
cmp
xchg
dec
cmp
mov
adc
xchg
stos
mov
or
xchg
clc
ror
dec
popa
lods
xor
js
outsb
popa
data16
add
fcmove
sub
inc
cmc
dec
inc
rcl
popa
xchg
fisttpl
mov
pushf
into
addb
xor
mov
invd
mov
inc
cmp
adc
je
jg
xor
das
les
sbb
mov
xchg
dec
sub
addl
pop
mov
ds
neg
dec
out
and
xchg
cmpsl
and
cmp
jle
add
dec
ja
inc
test
pop
lcall
rol
mov
arpl
outsb
ja
sbb
shrb
or
pop
movsl
subb
arpl
xchg
cli
test
mov
mov
pop
imul
and
or
pop
mov
dec
imul
push
arpl
push
rolb
inc
jl
or
dec
outsb
add
lret
or
std
sahf
pusha
mov
pop
lods
clc
testb
clc
aad
aad
iret
jb
ljmp
mov
fildl
xchg
dec
or
pop
enter
in
das
mov
mov
insb
inc
rolb
jle
sub
jns
dec
dec
hlt
loopne
sub
scas
movsl
clc
xlat
movsb
mov
lahf
out
daa
pop
pop
mov
inc
push
sarl
mov
enter
rcrl
imul
or
in
call
lock
or
push
fwait
into
cmp
dec
adc
mov
push
mov
test
pushf
pop
inc
or
out
dec
dec
addr16
aaa
lock
push
pandn
test
inc
push
loope
jns
loopne
cmp
push
test
pop
les
in
dec
cltd
or
cli
sub
lds
pop
push
rcl
repnz
push
mov
push
push
imul
dec
pop
out
aaa
mov
mov
mov
mov
xchg
call
and
add
and
or
stos
xchg
pop
adcl
mov
fsubrl
fidivs
xchg
cmpsb
lret
addl
test
div
imul
mov
cmp
pop
or
ds
push
sub
xor
fldt
jo
inc
ret
inc
xchg
mov
mov
lods
mov
loop
jne
jl
push
int3
push
repnz
sub
adc
jae
fiadds
scas
movb
outsb
cli
cmp
les
sub
in
xchg
cmp
clc
movsb
and
push
adc
int
popa
imul
add
hlt
sahf
sarb
push
push
nop
loopne
movsl
test
dec
outsb
mov
xchg
dec
fidivrs
iret
scas
cltd
pushf
lcall
roll
dec
add
push
nop
mov
int3
xchg
inc
jne
xchg
xor
jge
fwait
stc
das
cmp
push
cmp
add
pop
sub
pusha
ljmp
push
loopne
mov
mov
lock
push
dec
adc
push
dec
jp
xchg
adc
in
stos
sub
leave
stc
jb
mov
mov
push
or
sti
js
sub
imul
xchg
push
jb
fbstp
pop
les
jl
call
cmpsl
adc
jo
aas
mov
lods
arpl
or
jb
sahf
insl
or
mov
xor
xchg
dec
jo
cld
mov
mov
imul
int
add
sbb
add
and
test
movsl
arpl
icebp
lret
imul
sbb
push
add
idiv
dec
lods
icebp
cmpsl
test
and
out
push
push
shll
or
pushf
sub
pop
and
mov
sbb
xchg
adc
lds
mov
adc
and
and
enter
loop
cmc
xor
iret
adc
add
jns
push
mov
add
jns
mov
push
add
cmp
inc
aad
or
jl
ret
cmp
pop
pop
out
cmp
sbb
addr16
jne
sbbl
mov
or
mov
out
xlat
ret
pop
hlt
lds
xor
jge
dec
cmpb
rcl
movsb
in
inc
sarl
xor
movsl
inc
jg
pop
dec
mov
jg
push
push
mov
sub
mov
push
test
xor
in
scas
cmp
bound
iret
pop
mov
mov
dec
dec
pusha
xlat
in
loop
enter
jbe
aad
jo
out
cs
pop
lret
sbb
or
mov
div
sub
shl
jo
mov
in
xchg
xor
jg
into
adc
lock
cmp
movsb
jg
loope
pop
and
xchg
fcomi
xchg
mov
sub
and
add
lea
shl
cmp
adcl
pop
shlb
add
add
fwait
push
dec
test
cmp
jmp
sbb
mov
lahf
aas
les
push
xor
fnstcw
push
mov
iret
jg
popa
and
cmpsl
inc
stos
stos
fs
lods
cmp
js
xchg
mov
dec
mov
testl
test
test
or
push
pop
adc
sub
dec
mov
mov
jne
scas
les
fdiv
les
pop
sbb
dec
push
and
sub
push
sbbl
and
ret
jno
daa
rclb
out
ret
out
cmp
fstpt
jnp
sbb
push
data16
jp
lea
push
or
adc
aad
lcall
mov
mov
repnz
loope
lret
rcll
jnp
or
fisubrs
mov
cltd
xchg
popf
mov
mov
pop
js
out
add
pop
lds
pop
shr
ja
push
jb
sbb
pusha
adc
mov
mov
mov
out
lods
adc
adc
sbb
inc
stc
xchg
push
adc
decl
inc
incl
aaa
cmc
pop
sahf
or
testl
xchg
das
fidivrs
mov
mov
add
pop
push
push
ja
dec
xchg
pop
ss
push
sbb
inc
mov
sbb
sbb
mov
push
std
cmp
roll
popl
pop
pop
cwtl
jl
jmp
lds
sbb
iret
dec
mov
filds
out
dec
xchg
or
mov
addr16
cwtl
fsubl
xchg
rcr
mov
jle
inc
ret
data16
lods
cmp
xchg
stos
xchg
mov
dec
cmpb
mov
push
in
or
mov
addr16
push
add
mov
je
ds
add
outsl
leave
pop
sub
movsb
ret
sbb
mov
fildll
adc
scas
lock
popf
cmp
jg
imul
dec
jae
mov
add
addr16
in
nop
jecxz
sub
sub
cmp
jo
fstpl
jmp
cmpsb
pop
inc
add
rclb
or
mov
cmpsl
jg
in
cli
les
stos
cmc
subl
push
xchg
fdivr
mov
addr16
xchg
rorb
inc
dec
aad
aad
fdivl
aad
mov
pop
int
std
outsl
stos
dec
pop
das
sets
sbb
mov
and
xchg
push
pop
cs
mov
lods
popa
add
popf
pop
sub
and
jg
jnp
je
pop
movl
sbb
lods
cmp
add
loopne
ljmp
pop
imul
ljmp
or
xchg
push
imul
dec
inc
push
fistpl
fs
jg
mov
push
ja
sbb
xor
mov
dec
jmp
pushaw
cmpsb
adc
pop
and
jle
fldenv
cmpl
jmp
sti
pop
pop
cltd
mov
out
mov
cwtl
add
jmp
or
test
fstpl
rcl
mov
or
adc
xor
aad
xor
popf
enter
jecxz
add
mov
sbb
adc
cli
adc
jle
je
int3
call
and
sbb
repz
push
fisttpl
jle
mov
mov
rcll
outsl
test
jns
dec
push
out
lahf
movl
out
jns
and
and
pop
push
mov
fiaddl
and
jae
or
dec
and
adc
mov
mov
iret
add
rcll
and
jp
test
rolb
aad
popf
cmp
lahf
jns
bnd
and
adc
ds
test
add
iret
dec
mov
push
pushl
repz
mov
sbb
pop
icebp
iret
int
int3
int3
cltd
push
in
adc
xchg
mov
cmp
push
gs
mov
arpl
mov
push
push
and
repnz
rorl
dec
js
mov
outsb
ds
sub
add
sbb
xchg
inc
xor
dec
dec
xchg
adc
and
mov
pop
add
or
cld
daa
loope
lcall
add
in
sub
lret
inc
jb
sub
pusha
insl
les
lret
inc
ficomps
push
outsb
imul
or
xor
notb
lret
stc
lret
push
nop
and
aam
daa
and
cmc
inc
inc
std
out
dec
mov
or
into
add
fdivr
or
mov
dec
pop
push
daa
ljmp
aad
push
outsb
jp
mov
and
dec
in
cltd
sbb
or
popa
aad
iret
cmpsb
fwait
jbe
mov
mov
cs
popa
cmp
sbb
pop
adc
jno
dec
or
popf
insb
sub
push
sbb
iret
xor
pusha
and
pop
pop
clc
xchg
sub
inc
adc
dec
cs
adc
loopne
jmp
mov
push
out
sub
mov
pusha
or
sti
and
sbbb
addr16
mov
lock
push
daa
sbb
into
add
std
movsl
and
adc
lea
push
jg
cmpsb
push
push
dec
cmpsl
pop
mov
lock
lock
cmpsl
pop
dec
push
pusha
pop
js
std
dec
loop
mov
fbld
lea
or
add
out
jmp
jl
xchg
dec
gs
add
and
and
xor
lret
push
test
test
ret
clc
cmp
xchg
sbb
scas
imul
sbb
mov
idivb
and
jo
lret
cmp
call
hlt
and
push
data16
leave
pop
ja
dec
sbb
hlt
or
mov
mov
mov
insb
mov
out
pop
sahf
and
xchg
cwtl
jnp
ljmp
repz
inc
cwtl
dec
sbb
arpl
fdivp
orl
filds
aam
jmp
cwtl
movsb
or
inc
stos
pop
bound
ds
nop
cmp
push
ss
mov
outsb
xchg
aam
mov
and
ljmp
fmull
sbb
rcl
fsubl
push
and
pop
sahf
pop
fnstcw
cmpsl
ss
push
hlt
jle
enter
lret
adc
xor
aam
lods
cmp
das
in
insb
dec
mov
scas
jb
sbb
xchg
ret
fcmovnb
repnz
mov
gs
mov
push
ljmp
leave
fwait
pop
out
ret
inc
pop
mov
in
jb
jl
stc
scas
inc
out
aad
mov
cmp
mov
dec
inc
jp
daa
insl
lods
push
xchg
fidivs
adc
shl
sarl
cmp
in
stc
mov
cmpsl
lcall
pop
jo
out
push
push
xchg
movsl
in
sub
xor
sbb
add
mov
xchg
popf
lock
std
outsl
xchg
sub
jmp
inc
fisttpll
mov
lahf
out
cli
cmc
in
fmuls
rcrl
mov
outsb
push
fiadds
ljmp
or
ret
and
out
shrb
insl
orl
hlt
les
imul
jno
sbb
test
xor
repz
out
ljmp
out
les
or
shl
shrb
sbb
xchg
lds
mov
xor
dec
jae
cltd
pop
loope
adcl
sub
out
jmp
mov
or
xchg
and
lds
cltd
xchg
cmc
in
insb
xor
mov
fld
stos
adc
mov
mov
lods
scas
xlat
pop
div
and
movsb
aaa
mov
jo
ficomps
add
lock
sub
lret
mov
adc
ss
out
push
pop
jns
cmp
xchg
or
push
iret
mov
or
mov
dec
adcl
js
fistps
incb
pop
stos
adc
ja
adc
ret
cmp
lock
loop
std
and
sbb
ss
popa
testl
fists
aad
push
stc
or
jecxz
cmc
cmp
popa
jno
call
ss
outsb
xchg
xchg
jg
add
add
or
clc
mov
add
sub
lea
push
ljmp
mov
inc
sbb
test
mov
arpl
repz
add
sarb
in
push
inc
or
push
push
es
mov
sub
jns
push
enter
push
mov
sub
mov
pop
xchg
sub
mov
cmp
inc
push
xor
sbb
pop
dec
lahf
outsb
cmp
pop
cmpsl
xchg
mov
subl
pop
into
xchg
jge
sub
inc
xchg
cmp
outsb
dec
push
bound
mov
push
lds
testl
xchg
out
cmp
xchg
sarb
dec
out
loope
dec
jp
cmc
loopne
add
xchg
jge
or
fidivs
movsb
negl
dec
mov
push
push
dec
add
gs
test
je
in
jge
repnz
sub
adc
je
shlb
rol
rcl
lea
xor
xor
or
dec
jmp
popf
mov
loope
jnp
repz
cld
call
jae
jb
jne
mov
and
lock
dec
shll
mov
insb
fwait
clc
mov
lods
mov
fwait
push
movsb
andb
dec
or
in
inc
mov
clc
adc
dec
sub
sbb
jbe,pt
mov
es
add
mov
addr16
nop
mov
bound
pop
mov
fistpll
pop
ljmp
xor
mov
adcb
cmp
xor
xlat
jns
je
popa
call
mov
push
jne
dec
ljmp
xchg
arpl
mov
xchg
pop
mov
in
test
daa
in
sarl
jmp
dec
xchg
mov
pushf
push
and
mov
xchg
jb
ret
shll
imulb
jl
mov
loop
add
inc
inc
imul
sahf
es
lret
sub
int
or
mov
jp
cld
xor
mov
and
aaa
mov
or
mov
inc
jnp
fcmove
or
cld
inc
dec
lret
lret
xor
mov
loope
xchg
insl
xor
ficompl
jmp
sbb
je
and
jae
sub
cmp
xor
mov
sahf
lods
jne
jp
adc
mov
add
insb
add
mov
in
stos
mov
ds
leave
loope
sbb
mov
add
add
jno
imul
repz
pushf
cmp
cmp
push
out
lret
fiaddl
sub
mov
lds
repz
testl
loope
add
or
nop
mov
xor
xor
rcl
xchg
insb
adc
je
add
mov
aas
bound
dec
sub
int
xor
repnz
mov
mov
mov
cmp
dec
or
int3
sbb
jmp
fwait
xchg
inc
jecxz
lcall
mov
nop
xor
das
test
inc
out
rcll
jb
test
cmp
loop
jae
inc
in
rcrb
mov
loop
inc
push
push
inc
out
dec
test
vmovlps
dec
inc
icebp
stc
adc
sahf
addr16
cmp
out
or
mov
lods
out
inc
xlat
xchg
or
stc
inc
in
jl
adc
inc
dec
bound
adc
sti
cli
pop
pop
rcr
movsl
jne
lcall
add
cmp
repz
imul
add
andb
aaa
mov
xchg
dec
pop
int3
or
xor
add
popf
or
or
testb
iret
adc
xchg
push
mov
scas
repnz
adc
je
test
ficoml
mov
into
lsl
jno
push
mov
int3
push
push
add
sbb
xchg
cli
fisubrl
sub
mov
fs
dec
pop
push
je
dec
ss
imull
out
pop
ds
and
outsl
mov
mov
dec
in
inc
out
xchg
call
out
inc
inc
andb
jge
sbb
cwtl
sub
cwtl
jb
icebp
cmp
push
sbb
fldenv
dec
dec
cmp
sub
dec
es
xchg
xlat
movsl
out
in
pop
sti
and
cmpsb
daa
pop
and
lret
and
or
sub
sbb
lcall
das
lcall
cmp
arpl
cmp
add
jecxz
push
repz
in
addr16
mov
aad
jmp
and
pop
mov
repnz
or
xchg
or
jp
cld
sub
daa
cwtl
and
jns
xor
cld
xchg
test
xor
add
jl
fisttpll
lods
test
push
and
orb
lea
sbb
in
mov
jno
rol
je
cmp
mov
or
inc
aas
imul
xor
adc
sub
sbb
or
adc
xchg
cmpsb
push
movsl
mov
add
xlat
cmc
mov
aad
lods
gs
inc
mov
mov
lds
jp
add
orb
adc
mov
daa
shlb
xchg
lahf
stos
mov
push
mov
out
call
orl
lret
and
ja
addr16
stos
in
les
jle
test
mov
push
jbe
lods
gs
ss
stos
mov
pop
clc
lcall
push
add
shlb
clc
mov
push
jmp
popf
shlb
inc
iret
dec
ret
add
cmp
sbb
subb
lods
iret
xchg
dec
out
rcl
subb
push
int
psrlw
stc
cmp
xor
dec
mov
lcall
cmp
iret
adc
pop
test
sbb
ret
push
daa
adc
sbb
mov
mov
mov
adc
add
cmp
push
sahf
dec
in
push
ret
xchg
out
add
xchg
adc
mov
insl
outsb
roll
fistl
into
cmp
sbb
add
ja
mov
stc
lret
jbe
sbb
jns
jbe
in
mov
cs
push
roll
aas
je
mov
mov
sahf
mulb
es
mov
xchg
xchg
fsubrs
js
push
fwait
jle
loopne
mov
jns
imul
dec
lea
adc
test
arpl
or
inc
loopne
sub
and
push
test
cli
sti
and
jg
mov
xchg
add
sbb
ret
ljmp
mov
fwait
imul
scas
mov
fnstsw
cmp
pop
aam
jmp
lods
jecxz
jb
push
nop
mov
icebp
cwtl
push
icebp
mov
adc
js
push
xor
shl
inc
sbb
add
call
iret
lcall
xor
dec
push
fsub
arpl
xchg
test
cmp
xor
xor
popf
pop
cmp
xchg
push
int3
cmc
xor
je
xlat
call
lcall
popf
lds
std
sub
lock
nop
rcrl
pushf
pop
fdivrl
mov
push
sub
mov
daa
lret
push
addr16
lods
notb
fs
shr
test
imul
jl
in
fdiv
call
fmuls
and
mov
and
into
xlat
xchg
xor
adcl
cmc
loop
push
pop
dec
stos
daa
or
test
xor
std
jmp
cmp
mov
and
aas
aaa
sbb
push
daa
push
cmp
mov
lcall
adc
jns
imul
or
lahf
sbb
xor
fs
xlat
pop
clc
sahf
lods
dec
xchg
mov
ja
aad
shlb
les
dec
test
test
icebp
pop
andb
aad
sbbl
lcall
stc
ret
push
inc
xchg
mov
iret
outsb
loop
push
pop
addr16
jle
sbb
push
push
push
les
mov
pop
jge
dec
enter
testl
aam
mov
loope
loop
leave
mov
jl
mov
les
sbb
or
hlt
add
mov
dec
adc
sbb
lods
rcll
and
pusha
add
in
inc
push
push
cmp
jnp
loop
fadds
inc
fsubrs
stos
nop
xor
ja
lods
js
xchg
movb
and
adc
repz
pop
das
dec
lea
pusha
nop
fdiv
add
repnz
movsb
xor
jnp
repz
daa
inc
lds
lea
inc
mov
out
loopne
mov
in
sub
in
jmp
fst
stos
jae
xor
sti
and
inc
xor
leave
sbb
outsb
sub
push
inc
lds
das
lcall
loop
into
xchg
sub
es
jmp
cli
rolb
mov
cmp
mov
mov
je
test
or
fidivl
dec
jnp
and
insb
mov
xlat
cwtl
in
push
int3
int
ret
addr16
xchg
sbb
adc
mov
je
dec
shrl
aam
mov
loop
int
jg
sub
test
sub
push
ljmp
pop
in
inc
or
mov
mov
subb
out
jb
popf
stos
lods
dec
push
shll
push
out
ljmp
imul
nop
int
subl
pop
dec
mov
sub
sub
sub
pop
pop
push
add
arpl
pop
pusha
insb
dec
mov
push
jne
xorb
xor
shlb
pop
sbb
inc
inc
mov
in
in
shll
incb
sub
sahf
clc
cltd
sbb
push
inc
fwait
rclb
scas
xchg
adc
xor
sbb
mov
xchg
mov
sbb
mov
and
adc
pop
cmp
sti
outsb
push
movsl
push
pop
xchg
xchg
jb
pop
aaa
mov
sbb
push
stos
and
sbb
xchg
sub
pop
std
into
cli
in
call
shl
mov
fnstenv
mov
lds
iret
mov
jg
add
mov
xor
int
fnstenv
movsb
or
xor
rorb
sbb
subb
push
add
pushf
mov
hlt
pop
and
cmpxchg
inc
xchg
jns,pt
outsl
cmp
subl
es
nop
jp
fsubrs
outsb
repz
pop
mov
xchg
mov
sub
lret
mov
dec
xchg
xchg
push
push
pop
fcoml
mov
bound
or
mov
and
sahf
out
dec
cli
outsb
or
or
pop
push
aaa
iret
jnp
or
dec
lds
rolb
movsl
jae
and
mov
jmp
test
js
mov
fs
andl
inc
arpl
sub
push
sbb
mov
adc
std
sbb
fsubl
in
loop
sbb
sbb
mov
mov
inc
sub
sbb
pop
sbb
cmp
daa
out
sbb
sub
lahf
and
sti
or
stc
mov
sahf
xor
mov
inc
movsb
sub
orl
gs
adc
mov
aad
inc
in
xchg
add
sbb
daa
das
xchg
popa
push
pop
aad
xor
push
sti
iret
jne
data16
int
je
test
jno
push
mov
pop
bound
mov
std
add
and
aas
inc
add
out
insl
les
ror
push
aaa
orb
ror
sub
jp
mov
mov
push
sar
dec
lcall
loop
rcll
jo
popa
cmc
stos
into
pop
int3
cmpb
jb
int
xorl
scas
or
fiadds
push
pusha
or
cmpsl
jo
pusha
xor
clc
notb
push
imul
in
dec
xor
jg
and
nop
cli
cmp
insb
popf
negb
jno
jae
push
sub
xchg
dec
inc
ljmp
or
inc
pop
xchg
outsl
loopne
add
inc
sub
shlb
adc
add
mov
or
inc
xchg
sub
cmpsl
les
push
je
aad
jmp
add
es
fbstp
fnstsw
pushf
push
in
stos
inc
sbb
sub
pop
out
xchg
xor
cmp
mov
cli
es
test
in
lahf
insl
shll
pop
in
mov
pop
fwait
je
pop
push
scas
icebp
push
lods
push
dec
jl
arpl
loopne
addb
in
call
stc
dec
ret
jno
scas
adc
ret
mov
cwtl
leave
jecxz
imul
xlat
cmp
cmp
jle
add
mov
push
jl
pop
pop
jp
into
das
mov
xchg
mov
mov
cmp
fcmovnb
jmp
jge
clc
or
test
or
add
loop
daa
stos
push
call
mov
or
scas
test
inc
lock
imul
mov
popl
mov
xor
cmp
jecxz
inc
dec
mov
lds
mov
lock
data16
mov
sub
popa
mov
push
ja
xchg
dec
rol
jmp
and
fwait
call
icebp
mov
imul
xchg
xorb
xor
push
add
add
and
pop
dec
inc
xor
cmpsl
into
jns
iret
leave
int3
dec
repnz
push
aaa
in
mov
add
divl
ret
out
cs
and
lock
popf
adc
adc
add
hlt
outsl
outsl
add
loope
lcall
sub
out
ds
lds
sub
push
hlt
or
fdivrs
lds
shrb
xchg
mov
or
sbbb
shlb
aas
lahf
ret
sbb
shlb
mov
add
push
push
adc
nop
and
divb
xor
stos
sub
stos
cld
push
int3
nop
lret
call
jl
lahf
in
fdivr
call
fistps
scas
sti
xchg
popa
or
adc
xor
add
mov
jge
sahf
stos
push
xor
sbb
gs
add
cmp
dec
rorl
popf
dec
xchg
lea
push
arpl
repz
pop
adcl
adc
push
adc
mov
xor
xor
or
mul
dec
xchg
and
push
adc
adc
or
push
xchg
stos
xor
push
jo
inc
cmpsb
dec
xchg
jno
stc
outsb
dec
mov
and
cld
inc
jne
lret
adc
xor
xor
inc
mov
inc
mov
pop
sub
sub
fnclex
mov
sbb
sbb
push
out
mov
sbb
push
lret
lods
aaa
push
fnsave
pop
loopne
in
pop
stc
loopne
sahf
mov
je
lea
mov
xchg
jo
stos
fisubs
call
stc
out
add
pop
dec
cld
pop
jb
repz
rclb
fwait
das
cmpsl
sub
daa
scas
cmpl
popa
xor
cmp
outsl
jge
push
sub
push
outsl
insb
pop
or
leave
or
dec
mov
bswap
loopne
fs
add
sbb
lahf
push
in
jnp
jp
sbb
inc
loop
je
adc
jecxz
push
add
mov
adc
stos
mov
fwait
push
pushf
sub
jecxz
adc
test
std
mov
mov
lret
dec
leave
rol
inc
lret
std
inc
lock
pop
inc
pop
leave
mov
jb
xor
pop
pop
dec
fistl
pop
dec
jb
xor
addr16
xlat
out
orl
jecxz
mov
aas
sbbl
xor
jb
mov
add
adc
cs
mov
lret
sub
jecxz
push
inc
xor
push
out
aam
jne
scas
paddsb
adc
and
clc
insl
xor
jb
cmpsb
jns
xchg
mov
mov
test
add
aam
fisttpll
cmpsb
std
bound
push
jne
insb
mov
in
push
mov
in
inc
cli
in
adc
jae
out
add
ja
stos
shrl
pushf
cwtl
movsl
adc
jne
mov
ja
in
cwtl
testl
push
insb
dec
sub
out
push
push
add
mov
fs
lcall
add
mov
les
adc
mov
cmp
out
mov
push
mov
in
pop
mov
shl
test
adc
fisubrs
ss
jne
jae
aaa
sbb
jnp
cmc
leave
popf
mov
insb
pop
jle
xor
lcall
push
enter
or
out
xchg
movsl
push
dec
mov
mov
dec
inc
sub
mov
pusha
mov
mov
pop
in
mov
mov
sahf
pushl
enter
mov
sarb
push
dec
cmp
adcl
push
mov
sub
jge
xorl
aaa
mov
cmp
inc
dec
outsb
adc
ja
lcall
icebp
cmp
push
jge
scas
mov
cmp
gs
xor
inc
orl
push
or
inc
mov
push
enter
imul
call
push
sarb
cmp
iret
insl
push
leave
push
or
pop
cs
or
gs
xor
sbb
mov
mov
push
inc
sar
scas
daa
jg
and
data16
push
mov
xor
mov
ret
cmp
stc
push
iret
pop
outsb
es
cmp
push
in
dec
aad
out
inc
fists
idivl
pop
test
cs
xchg
or
jnp
sbb
popa
ss
aam
pop
pop
or
cmovge
mov
xor
mov
jne
or
fs
push
dec
xchg
inc
movsl
or
add
popf
mov
leave
mov
movsl
roll
inc
push
sarb
cmc
cmp
fiadds
jl
sub
jle
push
push
add
daa
sub
push
or
clc
or
mov
jmp
hlt
sbb
scas
sbb
mov
nop
fldcw
xor
out
lock
push
aas
mov
aas
popa
cmpsl
inc
ss
clc
fiaddl
and
gs
push
mov
or
ljmp
adc
sbb
dec
push
ja
test
testl
int
mov
pop
mov
inc
and
mov
popa
out
repz
daa
sbb
mov
dec
xchg
xor
sub
lods
inc
adc
loop
outsl
cmpsb
out
jg
loopne
lods
cmp
cvtdq2ps
jp
fistps
pop
test
inc
adc
or
cmp
mov
test
mov
add
int
rorb
and
ret
popf
fldt
mov
push
inc
mov
aaa
fsubs
loopne
xchg
dec
scas
dec
sar
jge
or
test
push
sbb
movsl
aas
mov
inc
push
inc
sbb
pop
and
loopne
mov
cld
mov
lret
lods
add
lods
cmc
and
or
push
mov
ja
sub
stos
jb
mov
add
les
in
jmp
or
mov
cmp
xchg
sbb
cld
ja
mov
out
stos
aad
repz
inc
arpl
dec
std
sbb
fcompl
pusha
or
jo
lcall
punpckhwd
out
mov
cmp
xchg
jns
cli
mov
imul
push
jns
push
pop
loop
xor
xchg
jl
pop
addr16
cmp
in
insl
hlt
add
repnz
out
adc
cvtdq2ps
imul
sar
fsubl
rorl
inc
ljmp
xchg
call
test
mov
xor
mov
mov
adc
out
push
pop
repz
xchg
int
mov
push
loop
push
jne
in
or
pop
dec
cmpsb
out
inc
and
aaa
inc
dec
pusha
cli
daa
dec
loope
xchg
jne
inc
mov
push
hlt
mov
sti
test
js
adc
mov
lea
xchg
decl
movsb
icebp
repz
sbb
pop
pop
outsb
test
mov
lahf
push
rcrb
std
push
out
fnstsw
lcall
fiaddl
mov
data16
loopne
and
std
or
pop
sub
fs
mov
outsb
jmp
int3
cmpsb
cld
cmc
mov
mov
or
js
push
mov
xor
jnp
call
ret
popf
or
inc
jg
xor
pop
into
sub
and
lds
push
jae
xor
cwtl
rorl
push
pop
fcoms
lcall
lret
mov
lret
jge
sbb
mov
int
ljmp
insl
rclb
in
pop
clc
fs
outsl
jg
loope
lods
aad
jo
add
lea
ja
sbb
cmpsb
mov
fidivrs
hlt
cmp
js
leave
and
sbb
fs
dec
or
cwtl
lret
imul
push
mov
xchg
push
insb
dec
push
repnz
out
inc
imul
shll
sahf
in
cltd
add
sub
outsb
sbb
rclb
jbe
push
iret
jg
daa
cmc
fs
xchg
dec
pop
dec
mov
icebp
iret
mov
mov
mov
insb
mov
sar
stos
lcall
sub
pop
popa
jo
push
sahf
adc
pop
sub
scas
mov
and
sub
xor
pop
lahf
hlt
push
scas
dec
mov
imul
repnz
insl
scas
mov
outsb
int3
fimuls
into
adc
mov
add
or
data16
insb
and
leave
sub
dec
jp
lret
movsb
mov
cmp
jne
mov
rcrl
jl
stos
jecxz
out
adc
fstpt
scas
sbb
pop
roll
xchg
jmp
fmulp
data16
adcl
ret
push
negb
or
mov
cmp
push
dec
test
sbb
dec
loop
je
push
cmp
jnp
cmp
ja
inc
mov
call
mov
je
sub
repz
jb
aam
add
sub
scas
push
ja
mov
pop
ss
adc
jl
mov
inc
mov
hlt
loopne
inc
adcb
mov
and
cli
dec
enter
stc
sbb
popa
sbb
xor
ss
xchg
mov
outsb
mov
jge
cmp
mov
jp
hlt
out
rclb
out
cmpsb
out
ljmp
jae
ja
fstpt
lcall
cld
pop
mov
xchg
bound
push
pop
call
pop
mov
adc
pop
xchg
adc
outsl
lcall
ds
daa
lret
mov
inc
cmp
xor
in
es
addr16
adc
cwtl
ss
daa
loop
movsb
mov
es
mov
ret
test
ja
xchg
test
adc
cmp
iret
and
roll
mov
xor
cmp
or
mov
bound
fdivl
or
xchg
sub
scas
mov
in
inc
pop
shrb
dec
lds
sub
sub
insl
cmc
lods
dec
or
jno
jg
mov
mov
rcrb
mov
fists
cs
adc
mov
aam
or
cmp
pusha
xadd
add
xchg
ret
pop
stos
mov
pop
push
push
repz
push
mov
cmp
pop
mov
adc
xchg
arpl
into
nop
mov
cmp
les
xor
mov
mov
mov
negb
cmc
or
or
inc
data16
scas
dec
push
mov
popa
mov
cmp
loopne
outsl
and
rorl
mov
jno
mov
fs
sbb
push
imul
fcoml
cmp
pop
imul
stc
bound
loopne
fnstcw
rcrl
pop
pop
or
lock
ss
mov
in
adc
sub
and
pop
in
fdivrs
in
xchg
push
stc
repnz
xor
test
scas
fnstcw
pop
test
clc
fists
xor
les
rcrb
mov
push
in
push
push
lahf
mov
push
cmpsl
outsl
dec
xchg
fstpl
out
or
insb
in
sbb
jmp
sub
inc
adc
scas
cmp
jo
adc
or
shrl
sahf
xor
adc
stos
popa
inc
daa
cmpsb
push
push
mov
dec
add
push
outsb
push
pop
test
leave
stos
stos
not
mov
int
add
stos
push
cmp
jmp
insb
mov
scas
inc
pop
test
xchg
sbb
daa
dec
fcmove
pop
stos
jb
sub
ds
ss
mov
dec
adc
pop
jmp
xchg
jns
cs
xchg
ljmp
std
jno
push
inc
jb
fbstp
cli
pop
jo
push
inc
add
fsubrl
push
sub
sub
aam
or
or
popa
inc
mov
xchg
gs
or
in
mov
jb
dec
andl
cmc
dec
push
xchg
addr16
and
divb
xchg
arpl
pop
jno
push
sub
repz
jbe
test
ljmp
push
jp
or
in
adc
rcll
mov
mov
popf
adc
loop
and
push
ficompl
or
mov
sub
das
out
mov
shlb
scas
and
pop
cmpsb
mov
jae
sub
movsl
push
sbb
enter
jecxz
push
cld
jle
loope
inc
outsl
scas
mov
and
sub
cmpsl
mov
cmp
jb
mov
push
rcl
ljmp
popa
es
loop
sub
xor
xchg
cwtl
dec
xlat
ljmp
shrl
pop
pop
or
mov
adc
mov
add
push
loop
dec
aas
inc
loopne
or
das
cmpl
sbb
sbb
sbb
fadds
inc
add
mov
push
ja
push
inc
push
mov
xchg
out
dec
or
xor
bound
mov
fisubrs
in
push
push
stos
sahf
cmpb
out
sbb
daa
aas
test
sub
mov
mov
rclb
mov
pop
push
fbstp
adc
cld
sub
imul
dec
push
cmp
jecxz
push
loop
pop
sarb
out
fs
das
imul
test
mov
mov
ret
xchg
out
xchg
sub
mov
inc
int3
push
stc
imul
or
jo
roll
test
mov
jae
mov
aas
popf
adc
lods
ja
sbb
mov
call
jle
shrl
cmp
dec
dec
jge
jle
push
dec
jae
sbb
mov
xchg
mov
lock
lret
lret
xorb
jb
add
in
cwtl
dec
fidivl
jno
cmp
repz
out
loope
mov
addr16
mov
mov
jo
sub
push
pusha
fdiv
push
push
xor
int
sahf
mov
jnp
fs
xchg
inc
jnp
and
int3
rclb
nop
push
rorb
jbe
sbb
push
pusha
mov
fsubrp
adc
mov
xor
sahf
adc
push
outsl
call
mov
fisubrl
pushf
add
imul
enter
xchg
adc
sbb
sbb
sub
sbb
orb
mov
les
and
cmpl
les
fdivl
mov
int3
sub
jns
movsb
add
sbb
mov
push
xchg
mov
inc
cmp
inc
in
or
setg
dec
in
in
shr
sahf
repnz
fucom
dec
movsb
add
fcomps
push
mov
pop
pop
or
in
mov
fsubs
gs
mov
and
add
loopne
jnp
and
in
mov
fmuls
fwait
lahf
push
xchg
inc
push
mov
adc
sbb
pusha
inc
lret
cmpsl
js
add
popf
adc
imul
add
sahf
adc
notb
fsubp
std
stc
push
sub
cltd
jae
push
mov
scas
iret
outsl
rorl
jnp
lods
lock
gs
mov
cli
cmpsb
aam
les
mov
adc
push
sub
ljmp
sub
or
adc
ficompl
arpl
xchg
push
mov
mov
xchg
ds
jae
adc
xchg
mov
adc
outsl
lahf
ret
pop
es
add
fs
hlt
sti
jg
in
mov
imul
xchg
cwtl
ja
ja
xchg
mov
stos
psllw
sub
pusha
sti
push
cli
and
jecxz
sub
pop
sbb
add
shl
lds
ficomps
popf
rcrl
push
fistpll
jns
sbb
out
pop
cmc
sub
in
mov
adc
dec
orl
jae
aas
leave
loope
and
pusha
xor
test
cmpsl
mov
push
push
pop
sti
pushf
imul
cld
std
pop
jge
call
xchg
fnstsw
mov
mov
repnz
test
xchg
movsb
push
enter
popf
or
mov
setle
into
xchg
repnz
pop
das
adc
out
rol
or
and
sub
adc
dec
scas
outsb
aas
pop
xchg
sub
dec
ja
jbe
sbb
dec
mov
xor
sarl
arpl
idivb
sbb
pop
push
nop
mov
arpl
int3
xor
sbb
jb
mov
sbb
push
and
push
adc
aas
cmpsb
repz
jl
test
adc
cmp
push
mov
sbb
xor
xchg
test
divb
or
sub
mov
add
lock
mov
xlat
aas
lahf
rdpmc
sahf
into
inc
std
adc
add
fadd
mov
loop
xor
sub
fistpl
cmc
popf
dec
inc
xor
into
out
cwtl
xchg
xor
out
aad
push
jbe
jge
popf
adc
sub
cmc
mov
lds
in
mov
mov
pop
sahf
pop
sbb
gs
sub
movsl
daa
sbb
xchg
lock
jle
daa
fwait
ret
loopne
fs
lds
orb
ja
fwait
inc
xor
and
or
xlat
in
mov
jne
pop
xlat
and
dec
iret
mov
add
rolb
pop
clc
dec
mov
loop
flds
mov
mov
jbe
movsl
lock
fstpt
inc
sbb
lock
sbb
xchg
daa
push
jge
aad
cs
imul
xchg
adc
sub
inc
out
stc
and
adc
outsl
push
sbb
js
mov
rcl
mov
jmp
out
jecxz
enter
mov
mov
addr16
scas
push
push
and
inc
adc
sbb
sub
push
mov
xchg
aaa
sbb
outsb
clc
test
outsb
dec
test
int3
jg
or
inc
repz
pop
lcall
xchg
dec
int3
push
xchg
cmc
gs
frstor
aaa
sbb
movsb
adc
mov
pushf
fwait
stos
pop
xor
sbb
adc
jns
sub
or
std
repnz
fidivs
lret
loopne
cwtl
das
filds
pop
mov
pushf
cmc
or
push
insl
mov
pop
lock
sub
dec
in
push
xchg
gs
sub
cmp
cld
push
sbb
out
sbb
or
jecxz
pop
mov
outsb
scas
imulb
jmp
shlb
xor
repnz
outsl
jb
xor
sub
xchg
pop
mov
mov
or
es
cmp
fistps
sbb
sbb
ljmp
push
sbb
lcall
mov
out
and
sbbb
cld
push
test
sub
mov
popf
ret
mov
push
mulb
jmp
push
jb
out
movsb
xchg
cmc
pop
mov
or
lods
xchg
mov
pop
and
lds
push
outsb
cmp
xor
xchg
stos
push
mov
add
vpmulhuw
stos
mov
jo
aad
and
dec
or
jmp
hlt
jg
xor
or
or
lea
inc
push
adcl
bound
cmp
mov
push
subb
mov
add
cltd
stos
lods
out
sub
sub
jbe
mov
add
xor
stc
aam
pop
leave
sbb
mov
iret
shl
inc
cwtl
push
ja
inc
sbb
and
lods
or
push
dec
dec
cmp
jno
data16
stos
insb
dec
jb
push
xor
outsb
dec
popa
cmp
jecxz
push
lds
dec
mov
pop
jne
xor
xchg
int3
jae
mov
add
lock
or
std
paddsb
jno
inc
or
xor
mov
imul
add
jmp
jmp
jnp
xchg
mov
cs
adc
lahf
addr16
fcmovnb
ret
lods
mov
xchg
bound
jg
out
imul
jecxz
addr16
out
push
mov
cmp
push
xor
push
sbb
or
pop
or
std
scas
mov
es
lods
stc
stos
inc
shrd
push
imul
jo
fbstp
mov
jbe
neg
out
cmp
pop
inc
jle
idiv
test
mov
jae
xor
roll
clc
and
mov
rcr
cmp
push
dec
out
mov
add
cmp
insb
aaa
into
test
test
dec
mov
jl
or
sti
and
cs
xchg
xchg
into
out
loope
adc
cmc
sbb
mov
or
pop
icebp
jp
cmp
mov
clc
sbb
sti
leave
mov
mov
aas
add
sbb
dec
and
fwait
adc
mov
xchg
push
and
orl
lods
cmpsb
call
sub
or
mov
ja
in
sbbb
enter
jno
outsb
cmp
mov
es
add
inc
mov
mov
xchg
sub
jo
sti
mov
mov
rol
loope
or
imul
push
test
je
push
xlat
inc
jmp
loopne
aas
scas
inc
pop
and
test
add
stc
jns
sahf
cmp
sub
pop
lock
sahf
xchg
cli
insb
adc
pop
adc
add
mov
jp
jecxz
push
lret
xchg
xchg
es
push
inc
inc
mov
popa
mov
out
push
xchg
add
xchg
ja
sub
out
mov
push
in
push
jbe
xlat
insl
cmp
pushf
sbb
nopl
sbb
sbb
or
push
sub
jecxz
fadds
lock
ds
jmp
inc
add
jbe
lahf
test
mov
test
fnstcw
push
and
xchg
gs
pop
arpl
rorb
xchg
clc
lods
mov
fwait
mov
cmp
push
cs
lock
ljmp
sbb
jns
movsl
sbb
sub
js
xchg
popf
imul
int3
mov
js
add
pop
test
inc
fcmovb
repz
gs
mov
inc
mov
mov
bound
outsl
sub
rorl
ss
mov
pop
push
mov
fs
iret
jne
or
sub
pusha
jmp
xchg
cmp
lahf
mov
lret
out
or
pop
in
jne
xchg
aam
divl
mov
cmp
jb
out
insl
cmp
and
pop
pop
cmp
push
push
and
sub
pop
inc
or
sbb
push
mull
dec
mulb
xor
aam
sti
inc
xchg
mov
loop
mov
xor
inc
mov
fwait
and
inc
wrmsr
imul
dec
adc
inc
sti
out
jge
data16
sub
js
sbbb
pop
cmpb
hlt
mov
add
jne
sub
imul
adc
data16
pop
rcrb
lahf
push
xchg
or
fadds
jl
bound
and
mov
aam
mov
insb
sbbl
mov
pop
stos
add
and
sahf
std
xor
mov
repnz
repnz
loope
mov
xchg
jb
or
imul
mov
mov
mov
sub
xchg
js
lods
clc
add
push
xchg
xlat
js
repnz
addr16
xchg
or
jmp
scas
ljmp
cmp
jno
enter
jmp
adc
out
sti
idiv
mov
jbe
or
fld
cmp
xor
neg
push
cltd
sub
and
jg
rorl
adc
push
xor
jle
aas
lcall
jo
loope
inc
fnstenv
cmc
pushf
loop
mov
fadd
movsl
mov
out
into
add
mov
xlat
mov
mov
popa
rcrl
mov
xor
jecxz
ret
es
lahf
inc
into
fisubs
push
mov
push
sub
add
sub
repz
lea
inc
adc
adc
mov
cmpsl
sbb
in
lcall
lahf
or
push
xorb
mov
test
rcrl
sub
jo
pop
xorl
pop
leave
in
jbe
rol
mov
negb
and
or
inc
mov
aam
add
push
mov
push
push
push
mov
pop
xchg
mov
or
pop
mov
cmpsb
leave
fstpl
jmp
mov
outsl
insb
int
add
aaa
sub
fmull
mov
fldl
mov
cmpsl
ja
mov
xor
sub
pop
push
std
adc
cmpsl
jne
push
mov
pop
in
dec
xchg
out
les
lret
stc
or
loop
test
out
mov
and
push
mov
inc
cmpsl
mov
xor
scas
in
movsl
mov
push
sbb
mov
fwait
sbb
mov
inc
jne
sbbb
jno
dec
or
cltd
pop
dec
add
enter
sbb
popf
out
add
pop
adc
mov
jnp
mov
imul
mov
pusha
dec
fsubrs
stos
aas
mov
repnz
imul
add
cwtl
sub
mov
andl
xchg
arpl
pop
cmc
jo
les
repnz
test
mov
pop
popf
xchg
lahf
add
int
sbb
adc
mov
sub
rorb
stos
pusha
orb
mov
and
mov
push
dec
and
iret
push
sbb
push
scas
test
mov
pop
ficompl
aad
sbb
test
push
jecxz
imul
push
mov
or
pop
xchg
or
xor
in
pop
push
mov
ss
decl
jge
ljmp
xchg
clc
js
jecxz
mov
sub
push
mov
sbb
cmp
xor
stos
sub
out
in
ret
mov
mov
or
mov
stos
addr16
jns
mov
mov
insl
or
jne
xorb
aad
or
and
out
xlat
mov
inc
push
jg
sub
mov
xchg
cmp
test
adc
push
jmp
imul
pop
dec
cmp
lock
out
mov
ret
sbb
clc
mov
movsb
stc
xor
pop
mul
pusha
pop
int
fidivrs
adc
or
out
jl
mov
xor
push
jp
addr16
test
cs
das
pop
je
out
dec
ljmp
mov
xchg
pop
mov
or
dec
mov
decl
push
fwait
cmp
jb
stos
das
push
loop
fcmove
cmp
fnsave
xor
imul
cmp
xlat
mov
add
cmc
mov
ds
test
jnp
aas
xlat
lret
or
lret
push
adc
fwait
mov
fdivs
out
stc
cwtl
movsb
mov
or
call
lcall
stos
cmp
cmp
cmc
pop
adc
sbb
sub
inc
lods
push
jbe
mov
cli
in
push
mov
inc
adc
ficoms
pop
call
xor
push
pop
push
popl
loope
or
aaa
inc
cli
addl
movsb
cmpsb
pusha
adcb
mov
icebp
xor
xchg
sub
xchg
pop
pop
mov
hlt
mov
cbtw
test
xchg
out
pop
push
cmpsb
je
and
or
pushf
lret
push
ja
xchg
popf
jb
push
sar
sbb
rcll
fdivs
push
mov
int3
xor
mov
movsb
jmp
jno
xchg
jae
stc
loop
mov
fidivs
cmpsb
mov
int3
push
adc
and
adc
pop
ret
das
jle
and
cmp
pop
xchg
lock
mov
fimull
or
mov
add
test
lcall
repz
mov
mov
sti
ss
sbb
pop
sti
mov
inc
sub
mov
push
xor
mov
scas
stos
cld
imul
cmpsb
int3
out
bound
je
inc
xchg
mov
shrb
mov
dec
sbb
push
in
adc
test
mov
test
add
adc
pop
fisubl
stc
push
js
mov
xor
jg
mov
jp
cmp
andl
mov
rcl
ja
sbb
push
mov
fs
add
test
sub
adc
xchg
xchg
add
mov
lret
das
fsubrs
and
pop
sbb
push
inc
hlt
out
or
or
aad
stc
int3
and
in
pop
pop
imul
pop
orl
cmp
mov
xchg
mov
or
je
lahf
je
fcompl
xlat
mov
pop
addr16
xchg
fiadds
mov
loope
pop
es
dec
test
fistpll
imul
clc
scas
dec
mov
mov
jbe
jne
or
sbb
pop
inc
or
inc
or
push
pop
push
sbb
xlat
dec
jmp
push
cltd
lcall
jl
jp
dec
add
cmp
adc
mov
std
inc
ds
push
add
jp
mov
popa
dec
seta
mov
imul
test
fbstp
ds
push
rdpmc
mov
lods
cwtl
jle
inc
mov
sub
mov
cmpsl
push
cmpsl
or
adc
sti
aam
subl
cmp
fisubs
ds
rcrb
outsb
pusha
pop
data16
mov
mov
add
in
gs
cli
dec
pusha
pop
xor
pushl
jl
push
lods
pusha
pop
jnp
mov
out
popf
jmp
dec
jle
ds
loop
inc
enter
push
pusha
inc
arpl
cmp
scas
add
dec
push
add
adc
into
sbb
fdivs
testl
mov
add
push
mov
mov
sbb
cmc
lods
test
stos
les
inc
arpl
add
fnsave
xor
loope
fucomi
pop
fwait
andl
outsb
out
sbb
cmp
jae
push
fsubl
jp
outsb
jg
dec
in
push
jp
or
push
fstps
mov
mov
xchg
outsb
lock
adc
and
jnp
mov
repz
cld
mov
test
mov
dec
sub
mov
roll
inc
push
xchg
xor
pushf
cmpsl
subb
ljmp
fnstsw
sbb
sbb
push
fmul
insb
push
sbb
scas
sub
or
movsl
daa
mov
int
stos
ljmp
cld
mov
cmp
mov
or
jbe
or
push
popf
leave
sbb
cmp
dec
imul
pop
out
mov
aam
ja
mov
sbb
jmp
pop
cmp
inc
insl
or
add
lds
mov
hlt
int
add
mov
pop
xchg
enter
repz
or
test
rol
ret
rol
adc
lahf
js
and
incb
xor
cmpsl
mov
adc
or
pop
loopne
push
xlat
mov
lods
fldl
push
push
dec
ja
push
sbb
rol
xchg
jbe
testl
sbb
enter
cmp
push
mov
sub
pusha
adc
inc
in
push
bound
xchg
fmul
lods
cmpsb
and
push
jae
cwtl
push
adc
repz
mov
or
popf
and
imul
adc
gs
fs
daa
out
rorl
mov
gs
cli
push
fsts
insl
pop
pop
int3
dec
adc
std
int3
jmp
lret
jne
idiv
xor
mov
shll
jo
pushf
lahf
hlt
test
sub
scas
xchg
mov
in
pop
cmp
jns
enter
lret
dec
mov
repnz
imul
into
push
fnstsw
movsb
pop
mov
push
push
add
pop
in
pushf
adc
in
and
inc
push
inc
mov
fdivp
sbb
add
jb
enter
fmuls
adcb
mov
jp
movsl
int3
or
cmp
or
fs
daa
fsubl
ljmp
adc
mov
rcr
lods
dec
cmp
ja
mov
and
ror
lock
int3
adc
jo
xchg
lret
add
std
xchg
xor
and
mov
stos
cwtl
xchg
dec
fst
hlt
xchg
fmuls
mull
ljmp
jb
cmpsl
push
xor
mov
mov
inc
fdivr
lret
jp
add
es
in
mov
daa
cmp
adc
int3
cmp
sub
xchg
outsb
in
out
xchg
les
cmp
ja
or
jge
loopne
lods
pushf
xor
mov
sbb
inc
sbb
imul
inc
mov
movsb
add
jecxz
push
in
daa
test
fisttps
xchg
and
jo
jae
cmpsl
xchg
push
lret
rorl
aas
adc
dec
test
call
mov
scas
lods
inc
mov
sub
lods
data16
sub
sub
stc
and
cwtl
mov
push
xor
adc
movsl
push
negb
fwait
shrl
dec
in
int3
fwait
icebp
mov
outsb
adc
incl
cmc
dec
sahf
push
add
pop
aad
in
loope,pn
ficoms
fcoms
jmp
ss
mov
sub
inc
bound
imul
cli
cmp
lock
push
xchg
sub
out
out
xchg
dec
lret
outsb
pop
and
ja
cltd
or
push
inc
sbb
sub
mov
repnz
or
jns
pop
nop
push
scas
dec
sub
movups
mov
adc
push
jo
push
cmp
sbb
fisttps
sub
rcrb
mov
jecxz
pop
rorl
cmpsl
stc
xchg
cld
addr16
mov
mov
lea
inc
daa
ret
addr16
aad
sbb
adc
push
repz
out
aaa
pop
jl
imul
push
mov
jmp
stc
xor
xor
je
or
push
iret
stos
xchg
cmp
xor
adc
cmc
sbb
mov
jp
adc
push
mov
roll
cmc
fidivrl
test
movsl
cld
pop
pop
add
jp
and
push
mov
sbb
mov
out
lods
add
scas
testl
jg
push
pusha
push
sub
mov
les
push
pop
inc
stos
in
cs
clc
jbe
fcmove
imul
int
mov
icebp
mov
mov
push
mov
and
ljmp
cmp
sbb
cmc
mov
xor
add
sbb
dec
jl
call
pop
addr16
adc
scas
ja
pop
mov
scas
ficomps
movsl
movsl
mov
jbe
insl
sub
mov
daa
and
pushw
fnstenv
xor
fsts
push
pop
scas
in
or
mov
aas
add
push
sbb
jns
dec
jne
sarl
cli
adc
popa
xchg
push
xchg
mov
cmpsb
jecxz
jl
mov
call
cmp
pop
lret
mov
mov
in
pop
testl
dec
aas
fdivrs
mov
stc
mov
fmull
or
cmc
xor
sbb
test
fucomp
mov
lret
jae
clc
add
cld
clc
mov
arpl
test
orl
adc
mov
xor
dec
fldcw
xlat
popa
xchg
leave
iret
dec
pop
js
rcl
push
ljmp
out
cmpb
mov
dec
ljmp
test
mov
js
aas
inc
data16
pushl
cwtl
xor
push
and
and
push
mov
xor
fnstenv
fisttpl
mov
pop
data16
or
push
sbb
dec
dec
dec
sti
push
mov
jecxz
dec
cmpsl
push
jle
lds
mov
mov
jae
or
cmp
pop
les
sbb
ljmp
mov
loope
mov
nop
and
push
lods
enter
out
test
enter
sub
cld
sahf
clc
leave
pop
ficomps
daa
out
leave
xlat
mov
dec
cld
int3
rcrb
pushf
popf
fnstsw
and
test
aas
sti
fists
sti
add
and
push
imul
hlt
mov
inc
jge
mov
out
stos
stos
movsb
movsb
xorl
jnp
mov
in
fisubrs
cmp
in
sub
push
ret
inc
addl
stos
bound
dec
lret
rorl
dec
cmpb
cmpsb
or
add
out
push
or
insb
cmpl
insb
jb
es
ss
push
add
xchg
sbb
jg
pop
shlb
xchg
test
cli
dec
jp
data16
leave
dec
jbe
pop
das
xchg
pushl
jecxz
xor
mov
test
in
imul
iret
mov
xchg
das
fildl
push
js
push
xchg
popf
sbb
push
test
movsl
ficoml
sbb
aad
xor
cmpsb
cli
push
mov
mov
cmp
mov
repz
dec
jns
out
cmc
rolb
je
stos
addr16
sbb
add
xlat
test
push
or
add
test
pop
sarl
mov
pop
pop
adc
test
sub
mov
xchg
jmp
test
test
scas
cwtl
mov
out
push
incl
adc
data16
cmp
cmp
and
jbe
push
adc
sbb
jp
ret
scas
cs
mov
les
mov
jo
jle
inc
out
call
jl
sbb
xchg
je
cmp
pop
enter
ss
mov
out
aad
cmc
mov
movsl
mov
xchg
jnp
sub
sub
hlt
lret
adc
push
in
stos
pop
and
lods
divb
insl
inc
aad
cmp
cmp
inc
call
scas
xor
mov
push
jg
mov
call
pop
mov
arpl
scas
inc
fldl
adc
test
add
pop
popa
repnz
dec
mov
inc
xchg
sub
mov
cli
lods
mov
xor
or
jbe
push
pop
adc
sub
dec
pop
rclb
cld
xor
in
in
stos
sbb
sub
mov
loope
lret
mov
out
shrb
sbb
and
in
xchg
and
stos
imul
add
xchg
stos
sahf
icebp
pop
xor
ljmp
push
mov
mov
lock
xchg
mov
subb
mov
pop
rcr
cld
cmp
bnd
pop
xorl
xchg
lea
cld
xchg
mov
fwait
pop
and
cmp
vmwrite
lea
adcl
fsubrs
fstpt
aaa
add
stc
aas
je
jo
mov
mov
adc
lock
mov
mov
test
icebp
push
cmp
lock
fbld
hlt
lods
fcmovbe
mov
sbb
leave
push
jno
pop
shll
out
scas
cmpsl
cli
mov
fcompl
clc
rcr
icebp
adc
adc
mov
loop
das
ljmp
movsb
xchg
xor
outsl
mov
inc
inc
mov
jnp
fcmove
subl
lea
bound
add
push
xchg
jbe
and
push
sbb
lods
inc
mov
push
sub
mull
sbb
shll
and
xorb
sbb
or
js
sub
sub
dec
jg
cmpsl
cmpsb
lock
jno
mov
add
cmp
jbe
stos
pop
sbb
or
push
and
ds
add
repz
negl
idiv
out
cli
xchg
adc
pop
push
repnz
xchg
cmc
adc
adc
or
arpl
andb
inc
scas
pop
add
mov
popl
cmp
loopne
sbb
call
push
xchg
mov
lea
fwait
or
xorb
cwtl
xchg
or
pop
xchg
fimull
sbb
out
cli
sbb
popa
mov
dec
test
add
ret
xchg
movsl
pop
out
xor
xchg
xchg
sbb
sub
mov
pop
mov
sub
mov
cltd
xor
data16
pop
mov
leave
mov
shll
pop
add
mov
pop
stc
and
push
cmpsb
scas
outsb
xor
jb
sti
dec
adc
loopne
pop
notl
fs
sbb
mov
inc
bound
dec
inc
push
fildl
push
pop
pop
rcll
xor
push
ret
mov
addr16
dec
inc
or
lds
stc
xchg
je
sub
push
lret
mov
pop
jb
sub
add
dec
imul
and
adc
mov
push
sub
pop
sub
pop
movsl
xor
push
lcall
jg
rcr
push
jmp
inc
outsl
imul
es
cmp
or
dec
aaa
push
pop
aam
nop
in
mov
or
imul
jo
mov
mov
push
popf
or
and
dec
iret
push
rcll
imul
test
imul
pop
xchg
jecxz
pushf
mov
jge
adc
cli
rcll
push
movsl
xor
into
fisttpll
sub
inc
xchg
dec
ret
out
mov
or
or
lea
imul
lea
movsb
iret
ret
pop
xchg
pop
push
mov
int
nop
xor
iret
xor
arpl
aad
pop
outsb
xor
out
sub
mov
outsl
es
cmp
push
sub
jbe
fisttpl
mov
rcr
pop
push
sti
inc
jbe
test
inc
ret
sbb
dec
and
popf
mov
fidivrs
jmp
daa
sbb
add
movsl
sbb
dec
cmpsb
jb
cli
loope
pop
sub
data16
mov
mov
iret
clc
loopne
jne
add
sbb
popa
cmc
jo
lcall
cwtl
xor
pop
rcl
scas
test
aas
xor
cmp
push
sbb
loop
scas
test
andl
mov
ds
jmp
xchg
jp
aaa
addr16
aaa
out
ljmp
cltd
add
or
loop
mov
in
loopne
push
add
pop
and
mov
es
sbb
repz
bound
or
sub
test
and
mov
lods
mov
adc
rcrl
xor
jo
dec
daa
dec
lods
jmp
xorb
fnstsw
xchg
jl
es
lea
roll
jle
ja
sub
scas
scas
imul
aad
cli
mov
sarl
sbb
lods
xor
sub
je
sub
xor
ret
das
les
daa
mov
mulb
aam
pop
cmp
ror
aaa
inc
mov
test
fcoms
idivl
cmp
mov
sub
rol
out
dec
cmp
mov
push
xchg
add
or
dec
outsl
lods
loop
ljmp
aas
in
aam
xchg
sbbb
adc
bnd
xor
jne
pop
out
mov
das
dec
aas
inc
and
inc
add
int3
inc
pop
xchg
stos
pop
pop
sub
inc
in
das
outsb
push
and
fwait
xchg
lahf
inc
xchg
add
xchg
jnp
daa
jg
add
xchg
inc
add
les
and
mov
pop
mov
je
in
decb
mov
sub
xchg
hlt
jp
int
out
pop
in
push
mov
lods
bound
adc
pop
sbb
mov
lcall
je
movsb
in
cmp
cmpsb
pop
decl
xchg
cld
add
mov
aam
test
stc
push
adc
in
cmp
inc
mov
inc
es
bnd
repnz
lret
dec
ja
xor
into
loopne
les
adc
loopne
out
data16
jp
out
adc
adc
pusha
es
adc
nop
mov
push
lds
inc
ss
ljmp
sub
leave
test
xorl
das
orl
add
jle
pop
xchg
xchg
mov
sahf
rcrb
and
adc
or
arpl
pop
rorl
mov
push
push
inc
or
in
movsl
xchg
cmp
pop
ficompl
and
out
or
pusha
push
add
mov
daa
ficoms
xchg
add
andl
int
jnp
cwtl
jae
lds
sub
or
xchg
mov
xchg
enter
cs
sbb
fimuls
dec
jne,pn
repz
push
inc
jns
add
out
jae
add
cmp
rorb
in
lods
ljmp
mov
ljmp
das
push
xchg
lock
sbb
jle
cli
jae
cwtl
popf
push
xor
xchg
jecxz
nop
cmc
jg
ret
mov
int3
out
inc
inc
and
ffreep
sub
test
pop
pop
insb
mov
push
sbb
in
sbb
jb
rorb
ja
pop
dec
fsubrl
repnz
inc
push
out
fmulp
ja
test
adc
jns
mov
inc
add
pop
add
loope
stos
inc
inc
fwait
mov
aaa
nop
inc
mov
pushf
je
cmpsb
xchg
xchg
push
rorb
and
mov
ja
fwait
cmp
cmpsl
sbb
inc
xorl
shll
push
invd
and
out
pop
fucom
mov
pop
push
sub
adc
stos
push
lock
mov
cmpsl
mov
add
or
out
xchg
cmp
in
rcll
scas
pop
dec
mov
lds
js
sti
pop
pop
in
scas
dec
mov
or
hlt
popl
fcomps
shll
xchg
stos
cmpsb
adc
jbe
jg
mov
scas
sbb
and
out
jne
mov
xor
mov
xor
add
adc
xchg
inc
push
adc
and
xchg
dec
decb
les
mov
ficomps
aas
push
loope
loopne
adc
aam
das
pop
mov
xor
push
ja
imul
inc
in
imul
add
out
into
sbb
test
push
fs
xchg
mov
movnti
scas
js
xor
or
xchg
aas
dec
stos
bswap
rcll
mov
mov
adc
add
bound
rclb
xor
shl
test
pop
in
insb
arpl
xor
add
pop
and
mov
mov
popl
xor
push
add
mov
pop
jo
pop
aas
imul
jmp
loope
test
dec
imul
sahf
adc
rcrb
std
jp
aam
xor
call
or
pop
dec
and
shr
mov
fwait
pusha
push
pop
or
pop
nop
ljmp
ja
loopne
sbb
arpl
orb
rclb
loop
xchg
ffree
mov
ja
aas
jnp
sub
shrl
jb
popa
pop
adc
daa
xchg
xchg
sbb
out
jae
rorb
sub
in
xchg
xor
lret
xchg
or
pop
xor
inc
int3
push
xor
inc
jge
outsb
mov
mov
jns
adc
mov
cmp
push
test
test
jge
pop
fiadds
in
fwait
ret
sbb
bound
cmp
mov
pop
pop
push
nop
cmc
ret
testb
xor
jno
in
jp
rorb
ja
ds
sub
popf
ja
into
shll
fdivrs
enter
jnp
imul
mov
fnstsw
xor
not
mov
lahf
lret
cld
decb
inc
loop
cli
or
dec
test
inc
iret
out
es
cli
test
in
popf
icebp
mov
fs
fcompl
dec
out
inc
aad
dec
fwait
out
sarb
cli
add
lret
pop
or
imul
addb
out
cwtl
mov
test
insl
pop
imull
mov
jmp
cld
sbb
mov
fs
xlat
rcl
xchg
aaa
xchg
aam
das
add
jno
or
rcl
aam
inc
imul
xchg
jbe
stc
mov
push
cwtl
jae
or
aaa
xor
pop
push
mov
outsl
xchg
lods
fbstp
sub
xchg
jbe
lret
cmpsb
loop
lret
jo
xor
jmp
add
sbb
mov
mov
mov
clc
push
call
pop
sarb
xor
lods
push
push
pop
dec
mov
add
mov
lahf
rcrb
in
in
add
divb
aaa
cwtl
out
test
push
cmp
aaa
int3
lcall
sti
gs
inc
aaa
aam
in
jne
ffree
add
and
insl
test
mov
lret
into
lds
cli
adc
sub
xchg
stos
decl
out
das
loopne
mov
call
pop
data16
into
and
xchg
nop
sbb
mov
dec
dec
jne
lock
cs
jns
push
sub
jbe
out
cmp
mov
inc
lret
dec
aas
mov
stos
mov
in
xchg
scas
pop
fistl
pop
movsb
sbb
je
pop
pop
loop
out
in
pop
inc
adc
test
mov
call
xchg
xchg
push
out
ljmp
or
jmp
out
pop
js
push
sti
scas
adc
mov
sti
cmpsl
jp
mov
call
jnp
imul
cltd
leave
xor
adc
imul
add
sahf
lret
pop
jo
jbe
xchg
call
lods
sub
rorl
or
sbb
std
inc
cmp
test
add
movsb
pop
add
adc
adc
bnd
mov
jo
test
scas
push
mov
xchg
daa
hlt
imul
js
and
cmp
in
jmp
lods
xchg
sub
jnp
mov
aaa
adc
mov
xor
jp
mov
pop
cltd
dec
push
inc
cmovp
inc
das
pushl
addr16
rcrb
into
pop
stos
xchg
pusha
push
mov
push
test
ret
mov
inc
lret
pop
sar
test
fmull
shr
ffree
loope
lods
xor
sbb
ror
xchg
jbe
into
jo
sbb
dec
das
cmp
or
lcall
mov
lahf
ds
imul
or
loope
dec
cmp
lock
jmp
xchg
mov
cmp
dec
push
jle
xchg
test
inc
imul
lcall
jle
js
and
aam
mov
add
xor
mov
push
in
jge
in
xchg
push
push
ljmp
outsb
mov
inc
shr
stos
sbb
into
dec
dec
adc
cli
out
add
mov
sub
loopne
lret
add
int3
pop
sub
mov
add
pop
dec
mul
add
adc
lds
es
fidivl
aam
rorl
cmpsb
dec
mov
mov
test
lcall
iret
pop
push
in
iret
sub
in
sub
push
ret
jns
les
cmpl
inc
out
loop
push
cld
cmp
inc
out
cmp
iret
push
and
xor
imul
fcmovbe
outsl
gs
xchg
sahf
adc
icebp
push
lock
out
mov
fstp
arpl
fimull
jp
jp
mov
mov
out
mov
xchg
dec
gs
out
adcl
push
repnz
cmp
rorl
xlat
jl
mov
lcall
cmp
inc
pop
jp
movsl
imul
lret
gs
out
jb
addr16
and
push
std
mov
sub
xor
fisubl
dec
adc
cmp
filds
insl
push
inc
xor
daa
or
imul
mov
js
ret
mov
lret
pop
add
mov
aad
outsb
icebp
shl
and
fstl
fidivl
fisttps
test
fdivrs
push
sti
adc
ljmp
mov
jns
jo
fnstenv
aaa
rorl
dec
lods
xchg
mov
fisubs
adc
and
dec
addl
test
js
out
xchg
adc
in
mov
fmuls
jno
out
jmp
jg
xchg
cmp
and
add
cmp
dec
inc
aas
or
out
in
inc
jg
lds
shl
jbe
dec
outsb
stc
or
icebp
and
mov
push
cmp
pop
lret
adc
das
outsl
or
out
mov
fmuls
dec
cmpsl
shrl
int3
repz
ljmp
jns
stos
xorl
fistpll
imul
adc
and
pop
cmp
es
ficomps
test
xor
adc
mov
jnp
pop
lret
popa
or
push
rcll
lcall
loopne
test
in
add
fcomps
dec
cli
outsb
bound
hlt
in
inc
cltd
imul
push
push
mov
mov
ds
dec
mov
mov
test
adc
xchg
arpl
rcll
cmp
push
in
sub
inc
ljmp
rolb
icebp
pusha
cmp
pop
insl
rorb
mov
cmpsl
xchg
stos
xchg
loop
cmovbe
pusha
hlt
lods
call
cmp
xor
test
test
pop
add
es
notl
pop
out
int
call
xlat
int3
mov
mov
outsl
sbbl
out
cmp
inc
jb
stos
arpl
arpl
in
call
daa
inc
iret
xchg
imul
in
inc
test
adc
inc
scas
clc
ds
or
add
sbbl
sbb
stc
in
loop
cwtl
push
dec
xor
cmp
pop
test
addr16
cmpsl
test
fidivrs
mov
jmp
mov
mov
push
lcall
adc
sub
jne
or
enter
mov
cmp
ljmp
mov
les
mov
fs
arpl
mov
into
outsb
add
out
mov
das
adc
je
jge
or
dec
mov
sti
test
fwait
or
pop
movsl
mov
xchg
sarl
imul
push
pop
and
mov
pop
sub
jge
cmp
xor
xor
adc
rorl
jb
mov
xchg
xchg
cmp
cs
mov
sahf
aad
cmp
inc
fs
add
pusha
repz
pushf
add
pop
repz
lret
push
in
shl
mov
cltd
lock
sarb
push
sti
cmp
pop
imul
std
fcmovnbe
mov
xchg
mov
aad
faddp
push
out
iret
sub
incb
add
fwait
inc
mov
cli
hlt
popa
lods
and
mov
rclb
arpl
dec
enter
lret
xor
inc
mov
clc
sub
mov
add
mov
jnp
into
out
aam
xor
fwait
jmp
pop
into
dec
mov
neg
mov
push
xchg
scas
and
jns
ret
test
inc
leave
xor
cmp
cmp
ss
mov
sarb
sbbl
mov
mov
fldenv
in
je
cld
test
and
iret
aaa
pop
xlat
int
mov
mov
sbb
in
cmpb
out
cmp
outsb
cmc
or
or
pop
hlt
stc
rcl
and
cmp
frstor
or
dec
mov
into
movsl
into
subb
scas
push
lock
in
aas
sbb
xchg
sti
mov
mov
xor
cmc
push
mov
stos
pop
sti
push
gs
pop
dec
incl
dec
daa
idivl
sub
data16
into
adc
and
mov
lods
or
dec
inc
jbe
test
je
mov
adc
sub
xchg
mov
mov
mov
in
push
or
out
fiaddl
pop
sbb
mov
cli
fstl
mov
call
ret
pop
aad
push
mov
scas
sub
mov
ja
mov
out
loop
and
or
fstpl
mov
sub
or
mov
fcomip
lea
movsl
enter
in
pop
xor
out
mov
xor
adcw
cmp
sbb
divb
cmp
fnstcw
sbb
adc
mov
leave
mov
xor
cli
sub
out
mov
push
mov
cmpsb
dec
mov
lea
mov
scas
mov
insl
into
lea
mov
cwtl
roll
add
addl
push
imul
pop
mov
loop
std
mov
mov
imul
mov
and
and
push
inc
scas
jbe
cmp
mov
fimuls
shlb
dec
call
loop
mov
inc
out
and
leave
in
add
sbb
andl
jne
mov
outsl
pop
mov
inc
fcmovnu
ja
adc
je
nop
jnp
test
push
jecxz
data16
adc
pop
pop
scas
stos
cmpb
orl
aam
sub
pop
fnsave
mov
cld
xlat
mov
jnp
sahf
dec
mov
stos
pushf
repnz
into
adc
inc
in
jns
out
gs
clc
xor
and
aad
int3
jmp
push
or
repz
cmpsb
and
jnp
sbb
mov
test
push
sub
xor
stos
mov
loop
stc
xor
pop
cmp
push
sub
mov
js
sub
aas
jno
bndldx
out
jmp
ja
jno
pop
xlat
xchg
inc
stos
repnz
pushf
dec
jmp
mul
mov
in
int
lods
call
int3
cmp
repz
loope
addr16
sbb
adc
ret
xchg
push
and
stos
mov
jp
out
fstpt
xor
sbb
push
xor
cld
mov
push
push
jb
and
push
xlat
bound
xor
sbb
js
subl
call
push
pop
jno
mov
aas
shlb
lret
movsb
adc
movsb
sbbl
shlb
xlat
sbb
adc
push
jns
ret
in
stos
icebp
pop
jp
mov
sbb
xchg
xchg
movsl
jecxz
inc
mov
sbb
insb
dec
mov
fwait
data16
subb
cmpsb
sbb
or
jecxz
lea
insl
jg
inc
pusha
es
nop
bound
jle
bound
test
inc
push
call
outsb
shlb
inc
arpl
fcomi
xchg
adc
imul
cmp
mov
jp
cmp
mov
mov
loope
popl
orb
addb
out
test
or
fbstp
dec
ds
lret
or
mov
cmp
sub
xlat
stos
movsl
cs
cltd
mov
pop
jb
sub
and
fwait
mov
or
mov
push
jge
test
add
cmp
faddl
xchg
add
cmp
stos
or
jg
addl
shlb
jl
pop
das
push
sahf
gs
fisubrs
push
mov
mov
mov
std
pop
cwtl
movsb
push
xchg
testl
or
pop
sub
sahf
stos
rcrb
dec
scas
notl
mov
jge
mull
push
ljmp
sbb
lretw
fildll
aas
pop
mov
cmp
cmpsl
cmp
stos
sbb
pop
fidivs
icebp
outsl
push
adcb
test
pop
add
mov
sbb
push
pop
fwait
and
out
xchg
daa
jae
inc
sahf
pop
loop
sarb
aaa
xchg
shrb
roll
and
mov
add
int3
add
xchg
addr16
sbb
sub
movsb
mov
sti
xlat
hlt
inc
fadds
pop
xlat
imul
pmulhuw
mov
cmpsb
sub
fstpt
cmp
mov
and
bound
and
incb
sbb
xchg
out
mov
es
out
xor
sub
cmc
loopne
in
bound
aad
out
fwait
mov
testl
xor
aaa
out
in
outsb
push
lcall
pop
and
test
and
push
mov
fstl
xchg
mov
mov
out
pop
cmp
inc
iret
cmp
and
sub
lods
pop
and
jae,pt
lcall
les
lahf
ja
insb
push
jmp
mov
sub
clc
xchg
or
aaa
test
insl
cmovbe
rorb
shl
shll
pop
shr
sbb
andb
inc
add
jecxz
pop
dec
and
hlt
scas
add
adc
scas
cli
inc
arpl
int
and
mov
mov
xlat
out
rcrb
bound
out
xlat
out
es
dec
adc
or
or
shrb
call
leave
lea
test
data16
jbe
js
xor
outsl
mov
jae
xor
pop
leave
cmpl
jg
mov
sbbb
or
scas
and
icebp
sub
shlb
fists
cmp
jb
rcll
paddsw
pop
sbb
fidivrs
push
enter
imul
testb
cmp
mov
into
leave
push
push
insb
iret
xchg
cmpsb
loop
jb
sti
insl
inc
test
xor
lcall
out
cs
std
jnp
adc
mov
fsub
aad
leave
and
cmc
xchg
push
push
imul
inc
hlt
call
dec
xor
cmc
rorl
std
mov
pushf
jl
shl
jmp
out
jmp
xchg
sbb
test
lds
cmp
imul
js
in
mov
loopne
in
xor
orl
xchg
xor
hlt
lret
pop
pop
add
mov
jnp
jecxz
pop
fisttps
in
push
iret
push
fisubrs
clc
ss
jae
test
add
mov
outsl
aaa
sbb
imul
sti
insb
stos
cld
pushf
sbbl
xchg
xchg
push
insb
imulb
mov
mov
sub
xchg
sbb
movsw
cmp
add
shlb
cmp
icebp
push
fcomps
xchg
cmpsb
mov
insb
mov
mov
into
adc
iret
push
or
cmp
iret
outsl
aam
xlat
jg
fisttpl
pushf
pusha
add
outsl
xchg
stos
imul
ja
xor
fwait
in
popa
add
cltd
xchg
add
repz
pop
daa
outsb
xchg
jns
loop
mov
test
dec
and
outsb
push
loop
mov
pop
jae
sahf
lock
mov
xchg
or
in
jecxz
dec
add
jae
imul
sub
hlt
ror
or
imul
rcrb
out
inc
mov
push
shll
push
mov
stos
sbb
aaa
sbb
xchg
pop
mov
stos
or
icebp
dec
subl
or
outsl
jmp
mov
cmc
xchg
lods
xorb
rclb
aas
ret
psubusb
xchg
mov
mov
add
sub
movsl
inc
aad
and
stc
arpl
pop
sub
insl
cs
or
lret
lcall
xchg
negl
adc
test
dec
mov
pushf
dec
scas
inc
gs
imul
pop
jl
fisubl
push
dec
int
jno
jns
sub
push
out
cmp
add
out
test
ret
mov
or
lret
dec
xchg
mov
and
cs
popa
mov
gs
test
fsubrl
loopne,pt
jecxz
insl
dec
hlt
sbb
adc
jl
dec
jle
pop
mov
xchg
out
mov
bound
mov
stos
dec
push
jg
cmp
xor
jb
test
mov
int3
aas
dec
mov
xor
push
iret
shlb
mov
aas
push
mov
mov
shlb
das
pop
xchg
fs
loope
sub
push
mov
out
xor
andb
hlt
aad
push
out
negl
testb
out
push
je
les
cmpsl
rcll
xor
ret
fmuls
mov
into
cmp
jge
add
popa
inc
cwtl
mov
pop
mov
inc
fsubr
dec
sub
dec
adc
je
aad
bound
std
jns
iret
sbb
jle
lcall
mov
ret
mov
and
xchg
sbb
clc
out
cwtl
adc
pop
sahf
aad
sbb
ret
fists
add
imul
lea
push
adc
shrb
dec
jno
mov
loop
insl
ds
xor
aas
xor
icebp
dec
loope
add
in
stos
push
pop
push
add
push
negb
mov
xchg
ret
shll
pop
jae
in
in
enter
orl
xchg
xchg
lock
shrl
pavgw
popl
enter
pop
lret
fwait
and
mov
adc
ss
insl
mov
sbb
push
or
and
pop
loopne
jg
mov
sbb
xor
lock
cmp
lods
xchg
xchg
fcoms
cltd
js
loopne
je,pn
aas
mov
loop
inc
icebp
pop
in
fisubrs
cmc
out
push
adc
sub
xor
icebp
jl
jmp
repnz
aam
and
shrb
sub
fwait
les
xchg
scas
inc
mov
into
popf
out
popf
and
enter
sub
je
int3
inc
mov
or
test
lret
fsubs
dec
xor
mov
push
stos
es
sbb
shlb
ret
mov
int3
sub
aas
and
test
jo
sub
les
pop
fwait
adc
sahf
imul
sbb
out
sahf
iret
cmpsb
xchg
sub
mov
cmp
cmp
add
ret
inc
push
pusha
and
add
pop
repnz
into
xchg
cmp
lods
scas
cmp
and
jge
and
xchg
jnp
pop
cmp
cmp
movsb
addr16
push
stos
out
adc
lds
test
out
bound
in
std
lret
jb,pn
repnz
inc
outsl
push
daa
mov
jl
dec
fiaddl
xchg
cmpsb
xor
mov
scas
sub
pop
sti
aas
jo
pop
mov
lock
ficomps
mov
sub
mov
add
or
int3
pop
pop
inc
mov
stos
mov
push
xor
test
dec
jge
push
mov
mov
data16
seto
pusha
ss
push
or
adc
lcall
movsb
or
xlat
xchg
or
rorb
insl
xor
popf
sbb
adc
jp
mov
or
jp
cld
lret
pmaxsw
mov
int
data16
jle
push
push
in
leave
sbb
rclb
add
imul
sub
pop
lods
pop
jle
lods
rclb
mov
xchg
in
dec
jae
es
addb
mov
or
jbe
incb
shlb
stc
inc
sbb
pusha
ret
rcll
mov
cmpsl
mov
cmpsb
sub
popf
mov
test
and
sbb
mov
hlt
das
ret
cmp
and
adc
push
mov
pushf
rolb
inc
fwait
int3
sarl
iret
jo
popa
and
inc
rcl
jg
adc
insb
mov
and
push
mov
nop
lods
sub
sub
push
stc
add
mov
and
mov
fsubrs
iret
cmp
hlt
out
outsl
xchg
mov
adc
lahf
xchg
lods
mov
mov
cs
mov
out
dec
cwtl
leave
jno
cli
sub
popa
scas
pop
lahf
xchg
push
xlat
roll
adc
inc
andl
das
pop
cmp
mov
mov
shrb
enter
jmp
flds
push
out
adc
repz
push
mov
bound
adc
adc
push
mov
das
dec
push
push
fwait
mov
std
stos
inc
ja
sbb
cmp
cmp
es
pushf
add
pop
jnp
das
mov
and
xor
mov
in
outsl
xchg
cmp
cmp
jle
cmc
shr
xchg
cmp
push
or
shr
in
pop
push
mov
pop
pop
ret
addb
xchg
jns
aad
movsb
or
or
pop
mov
fs
pop
imul
incl
hlt
pushf
clc
cmpsb
xor
push
clc
jmp
mov
adc
mov
out
test
scas
in
rclb
repnz
pushl
pop
push
push
inc
push
sar
clc
xor
lods
and
outsl
sbb
push
outsl
dec
notb
lock
add
repz
insb
xchg
cmc
daa
and
dec
add
and
mov
pop
cmp
inc
retw
mov
mov
mov
in
adc
sti
xor
in
in
push
push
fsubl
in
or
pop
pop
cltd
or
sub
dec
fistps
xor
inc
rorl
hlt
pop
mov
xchg
mov
lret
push
sub
jmp
sub
adcb
into
lock
rorl
and
xchg
cmp
sarl
jp
jmp
in
or
aaa
lcall
imul
es
shrl
pop
int3
push
push
push
sbb
imul
jle
sbb
or
adc
lods
popa
jge
cmpb
in
arpl
lods
into
add
stos
jae
mov
pop
mov
dec
inc
mov
ret
mov
test
addr16
cli
loop
jb
fildl
popf
mov
mov
icebp
or
pop
out
sub
add
lods
les
sarl
mov
dec
adc
mov
aaa
fnsave
jge
nop
mov
and
mov
mov
cld
scas
aad
clc
mov
xor
insl
xchg
sbb
je
push
add
push
sahf
cld
mov
push
cmpsl
pop
sbb
and
dec
movb
hlt
mov
cmpsl
add
pusha
popf
push
mov
nop
fstl
lret
mov
push
out
inc
mov
sti
loope
rcl
aam
xor
pop
inc
test
jmp
ret
xor
cli
scas
jle
int
fmul
lret
push
sub
cltd
imul
imul
je
pop
mov
push
aas
and
push
pop
and
mov
push
xor
mov
add
popa
in
push
jecxz
jnp
push
xor
idiv
cmpsb
mov
fldl
scas
xchg
lds
inc
cmp
xor
lcall
popf
es
sub
icebp
cmp
arpl
sub
pop
push
mov
xchg
clc
stc
pusha
mov
lret
lcall
push
xchg
aad
loope
outsl
mov
mov
in
in
cmp
or
cltd
cmp
xor
scas
fucomi
hlt
adc
sub
pop
daa
or
jle
into
xor
movsl
and
pop
popf
mov
sbb
in
mov
and
lahf
bound
or
xchg
bound
rol
shrb
pop
js
lret
scas
ja
addb
dec
ds
scas
cltd
in
add
fstps
outsl
ljmp
clc
xchg
push
shr
mov
mov
shlb
or
jmp
add
push
int
dec
data16
pop
fisubl
insl
out
divb
xorb
jp
popf
lds
outsl
jge
subl
cmp
pusha
push
xor
cmp
ja
mov
fimuls
pop
and
cwtl
stos
xchg
sub
sarb
push
jle
xchg
fadd
adc
or
mov
or
ds
insb
pop
sbb
mov
push
lods
push
shl
lahf
mov
cli
adc
pop
dec
scas
jle
or
mov
loope
ret
sbbl
jle
dec
inc
sub
into
inc
cltd
mov
pop
fwait
stc
or
lret
sbb
jb
inc
rol
je
into
fiaddl
add
cs
dec
bound
cltd
into
xchg
xchg
dec
or
and
sarb
mov
lcall
mov
push
inc
int
lahf
test
inc
xor
cwtl
cmpsl
leave
cmp
mov
mov
loope
mov
orl
mov
test
pop
lret
jl
sbb
pop
or
pushf
shll
shrb
mov
in
inc
sub
out
pop
gs
jl
sarb
rorb
pop
hlt
aas
lock
loop
aam
roll
lea
jecxz
push
incl
sbb
sub
pop
add
ljmp
xor
cmp
insb
push
push
mov
test
cld
mov
xor
sbbl
push
push
sti
inc
aam
sub
cmpl
stc
outsb
xchg
cmc
add
hlt
push
pusha
imull
int3
in
imul
shll
in
add
call
dec
sahf
loopne
inc
adc
lahf
dec
jae
les
inc
xchg
adc
or
xchg
lea
ret
sahf
xor
mov
loope
and
pop
jns
fnstsw
xchg
nop
xchg
sbb
insl
xlat
mov
ret
cli
repz
ljmp
movsl
fs
jle
jnp
lods
mov
out
xchg
insb
das
push
lahf
xorl
repnz
icebp
mov
insl
mov
lock
xchg
and
jg
mull
jb
out
and
inc
xlat
test
mov
ss
mov
or
add
iret
aaa
xchg
lret
stc
pop
mov
mov
push
cmpsb
in
rcrl
push
mov
push
and
adc
stc
xor
in
lcall
fnsave
sbb
or
gs
and
jno
in
pop
push
xchg
pop
sub
mov
add
rorb
jmp
xchg
xor
movb
call
mov
test
js
push
push
xor
mov
xchg
push
jg
xchg
insl
ret
gs
and
xor
cmp
push
ljmp
sti
mov
or
outsb
jg
scas
pusha
jns
and
pop
movsl
lds
test
jp
xor
ret
sbb
xor
mov
inc
fld
rolb
jbe
jno
out
int
push
adc
xor
xchg
push
iret
pop
dec
cld
jge
pop
popf
loope
adc
cmpsb
sub
mov
iret
loopne
idivl
out
push
xchg
out
mov
pop
jmp
data16
xchg
inc
xchg
inc
inc
fistpl
push
dec
push
xchg
xor
inc
and
mov
sbb
mov
bound
scas
push
pop
or
fisubrs
jns
in
pop
cld
xor
add
sbb
jge
push
adc
xchg
adc
sbb
sbb
jae
pop
imulb
mov
adc
push
cli
ljmp
rclb
lahf
xor
popf
das
int3
mov
mov
mov
mov
pop
mov
xchg
dec
xor
pushf
jne
pop
pop
push
sub
fcoms
leave
jb
int3
mov
xchg
fldcw
sbb
add
popf
cmp
mov
jl
sbb
xor
aad
ljmp
or
dec
adc
jb
sub
xchg
or
lods
ds
out
sub
loopne
cmpsb
cmp
lds
and
jecxz
fisttps
cmp
ret
cmpsb
in
dec
mov
cmc
mov
insl
or
add
jnp
jmp
lock
cmpb
arpl
and
loope
mov
mov
mov
and
cld
push
pop
mov
mov
push
mov
int3
lahf
dec
jge
dec
or
mov
sub
aad
push
movsb
loopne
inc
clc
ljmp
shll
mov
inc
shl
adc
push
push
inc
loop
pop
or
dec
cmp
lret
pushf
imul
and
jae
add
adc
dec
je
add
shlb
outsl
and
in
lock
adc
ljmp
je
std
or
add
jecxz
fdivs
jle
cmp
cmp
mov
pop
pop
idiv
repnz
and
test
lds
push
out
gs
cmpsl
inc
jne
push
sub
pop
repz
push
movsb
mov
mov
test
adcb
das
dec
dec
xchg
xlat
and
aas
in
xlat
sub
push
add
into
inc
sbb
loop
icebp
icebp
add
dec
imul
inc
stos
lahf
dec
mov
popl
mulb
dec
jnp
std
xor
dec
mov
mov
add
sub
std
in
inc
repnz
add
jmp
push
or
sub
pop
cmp
and
popa
or
dec
mov
add
xchg
sbb
addl
dec
cmpl
clc
fisttpll
loope
sbb
lahf
pusha
shll
lods
shll
jns
inc
mov
inc
out
ljmp
cmp
fcmovnb
xchg
sbbb
scas
adc
sbb
inc
jno
or
bound
lret
out
and
sti
movsb
adc
cmp
outsl
fs
mov
mov
jl
xor
jecxz
ja
push
push
or
push
sub
inc
cwtl
insl
dec
call
out
in
push
ret
movsl
arpl
in
fnstenv
xor
out
scas
insb
call
andl
adc
mov
jg
cmc
test
dec
inc
loope
mov
pop
fwait
mov
lcall
in
mov
lock
xchg
shld
pop
push
mov
inc
test
outsb
enter
cmp
daa
mov
ja
xor
jge
ret
xor
push
sbbl
scas
jmp
push
insb
mov
add
add
enter
mov
cmp
pop
loope
mov
pushf
pop
xchg
adc
fucompp
out
pop
mov
addr16
iret
stos
sbb
mov
frstor
jae
inc
sbbl
dec
xor
sub
xor
outsb
mov
lock
mov
shr
in
mov
out
loope
jp
cltd
mov
roll
add
push
pop
scas
movsb
cmp
sub
enter
dec
fisubs
push
in
je
xchg
enterw
movsl
mov
add
cmp
scas
jg
cmp
in
push
mov
inc
pusha
or
pop
in
jb
fistpl
cmp
js
stc
sub
rcrb
mov
addl
jns
aaa
cmp
fisubrl
aaa
lcall
mov
fcmovu
pushf
xchg
test
in
rorb
sbb
adc
mov
xorb
outsb
pop
into
mov
lcall
mov
in
testb
xor
in
xor
xchg
sti
stos
adc
dec
in
adc
call
pop
imul
mov
punpckhdq
roll
cmpsb
add
rolb
xchg
fidivs
mov
imul
fsts
mov
daa
lret
rcll
mov
add
dec
movsb
insb
inc
jmp
pop
mov
in
ljmp
jle
in
rclb
adc
fwait
dec
sbb
mov
xchg
jl
pushf
push
fsubl
test
xor
cmp
dec
std
jo
dec
mov
aas
gs
fisubl
testl
xchg
inc
in
aam
das
insl
add
test
dec
dec
sub
enter
mov
dec
out
xchg
inc
cltd
std
xor
ss
dec
xchg
in
push
mov
in
mov
and
sbb
ja
fwait
sbb
fsincos
fwait
cmp
pop
cmovp
xor
std
or
mov
test
les
add
push
gs
or
sbb
imul
scas
cmp
fldln2
sti
push
push
aas
xchg
scas
sahf
pop
hlt
aad
sub
lahf
jae
and
jno
test
hlt
xlat
mov
mov
ret
or
and
ret
jnp
clc
adc
or
mov
pop
sti
sbb
cmpsb
ljmp
add
mov
sbb
pusha
adc
inc
shlb
lretw
stc
iret
aad
inc
mov
mov
in
sub
sbb
adc
push
fs
inc
jl
push
pop
iret
adc
shr
or
cmp
sbb
je
xor
mov
sub
add
ljmp
stos
lods
dec
push
lods
xchg
lea
arpl
or
push
inc
dec
mov
dec
add
pop
push
test
pop
pop
gs
sub
mov
cld
cmp
outsl
xchg
push
inc
arpl
jle
sar
repnz
cli
test
cwtl
arpl
push
lds
jne
enter
push
push
mov
jecxz
adc
pop
push
and
xor
addr16
out
xchg
add
cmp
shlb
xor
cmp
mov
scas
cmovne
repnz
in
mov
das
push
cmp
stos
or
shrb
cwtl
xchg
stos
lods
cmc
push
dec
push
out
cmp
jns
mov
adc
pop
pavgb
cmp
and
cmp
xchg
in
das
mov
test
push
insl
pusha
push
jno
xor
push
aad
inc
jmp
scas
clc
push
inc
pop
imul
push
or
add
sahf
mov
mov
ret
loope
xchg
scas
sbb
sub
push
clc
jns
or
das
dec
addl
mov
lea
in
shll
and
fadd
mov
pop
movsl
pusha
xchg
jne
dec
out
loop
adc
andb
mov
imull
loop
daa
push
cmp
add
es
adc
in
sub
inc
inc
in
mov
cmp
mov
daa
ret
decl
cld
mov
mov
add
enter
sub
and
push
shlb
scas
inc
orb
std
sar
scas
jae
inc
cmc
pop
push
xchg
loope
dec
push
je
sub
mov
xchg
push
lock
inc
lret
or
fistl
or
jno
inc
sub
nop
sbb
jne
jmp
xchg
sbb
mov
push
xor
fistpl
and
or
es
in
inc
push
add
sbb
shll
sub
popf
std
or
sbb
jbe
inc
leave
bnd
inc
mov
or
xchg
ss
mov
add
dec
inc
xchg
jmp
ljmp
jb
sahf
nop
jmp
jge
daa
loope
ja
cmp
push
xor
sub
outsl
lock
mov
imul
arpl
jge
fisubrs
in
xor
out
mov
rclb
iret
mov
stc
aad
dec
inc
int
out
push
test
ljmp
mov
pushf
fscale
arpl
xchg
pushl
and
dec
cmp
lret
pop
inc
int
push
in
shrb
cmp
push
gs
rcll
add
in
adc
jno
sti
or
mov
mov
pop
adc
xchg
push
movsb
xchg
fnstenv
or
add
stos
mov
xor
jbe
xchg
xchg
stos
inc
jo
sbb
test
jge
daa
mov
pop
sub
loopne
lret
mov
int
push
insb
pop
insb
and
mov
fcmovnb
imul
pop
or
repnz
mov
xchg
xchg
pop
xor
adc
mov
movsb
xor
std
ret
pop
imul
lcall
icebp
jno
popf
sarb
jg
pop
mov
push
inc
and
pushf
or
fsubl
jp
dec
rcll
dec
push
fcoml
pextrw
xchg
mov
cmp
adc
mov
dec
xchg
daa
adc
hlt
mov
inc
rcrb
leave
test
ds
das
xchg
test
iret
mov
inc
aas
das
push
repz
mov
sub
mov
push
mov
scas
add
push
rclb
lahf
popa
pushf
pop
sarb
out
xor
push
adc
sub
adc
adc
sbb
pop
cmp
js
sub
mov
pop
push
jne
sbb
cmp
test
shll
jae
scas
pop
xchg
cmc
dec
out
cld
xlat
hlt
cmp
pop
sbb
cmpsb
test
bound
in
lock
enter
movsl
adc
sbb
jb,pt
lea
xchg
scas
pop
orl
xor
push
add
sub
push
jl
jp
mov
mov
sbb
adc
nop
pop
inc
inc
inc
add
nop
xchg
push
lods
jno
stc
test
mov
frstor
and
cmp
and
subb
in
sub
mov
cmp
insl
pop
ljmp
hlt
stos
jmp
and
sub
dec
jle
mov
stc
sub
cmpsl
dec
inc
aaa
mov
movsb
cltd
xchg
enter
stos
pop
shlb
push
or
aam
cmp
lods
jge
mov
xor
aam
test
push
jl
pushf
jno
sbb
into
adc
ljmp
inc
pop
imulb
push
jmp
lock
imul
jae
push
fdivs
inc
push
inc
jo
shll
pop
jbe
cmp
cmp
jbe
lods
mov
shlb
sub
sbb
mov
mov
add
fwait
jge
xchg
xchg
jne
add
or
aam
fs
mov
iret
add
mov
adc
lcall
inc
add
pop
xchg
dec
push
sarl
inc
cli
mov
stos
cmp
xlat
add
loopne
js
pushf
push
rol
push
and
mov
movsl
gs
dec
pop
fucomp
jae
jns
pop
jle
sti
nop
sbb
cltd
lret
sbb
ds
jnp
lock
out
jl
push
les
mov
sarb
push
mov
test
push
mov
pop
add
xchg
jbe
imul
ret
stc
pop
imul
and
push
repz
sbb
idiv
mov
inc
inc
shll
pop
adc
int3
adc
jb
xchg
lods
mov
sarl
push
and
dec
or
jl
out
cmpsb
sub
dec
push
or
cli
add
and
bswap
out
jmp
aas
stc
jmp
inc
push
sub
inc
add
lret
cld
inc
ja
inc
in
lret
repz
lds
xchg
dec
push
in
sub
out
or
sub
lret
rcl
lods
shll
add
xchg
push
push
fsubr
push
call
pop
jge
or
adcb
jbe
in
and
lcall
or
mov
inc
adc
int3
adc
dec
andl
adc
subb
xchg
pop
inc
sbbl
adc
add
cwtl
ror
popf
int
lock
jp
mov
fldt
push
adc
int
inc
pop
arpl
adc
sub
sbb
scas
popa
outsl
or
cs
push
aas
out
dec
lret
or
push
inc
mov
arpl
test
repz
stc
pop
inc
mov
stos
call
mov
dec
mov
add
cmp
adc
sbb
rclb
or
xchg
scas
popa
jns
xchg
jg
add
loop
aam
xchg
jl,pt
inc
outsb
and
push
mov
dec
les
adc
aam
jle
stos
or
ss
mov
inc
lods
xchg
push
pop
dec
or
jg
dec
jecxz
pushl
inc
lea
int
and
inc
int3
sub
pop
aaa
aam
jbe
movsb
int3
pop
lsl
mov
inc
lcall
dec
test
cli
mov
push
fdivl
sub
add
adc
daa
xchg
cmp
pop
adc
fbstp
sub
dec
gs
fcmovbe
push
lods
cltd
test
mov
add
cmpsl
rcrb
cmpsb
mov
push
jecxz
mov
pop
mov
into
and
push
pop
dec
enter
js
fsubrs
mov
sbb
popf
dec
fnsetpm(287
xchg
ret
mov
inc
mov
or
loope
and
push
iret
cli
mov
ja
add
out
es
and
sub
jae
fs
pop
xor
push
imul
jbe
push
push
inc
in
xchg
sub
sub
repnz
out
test
dec
pop
and
adc
cmc
sbb
jp
pop
cmpsb
sub
jbe
insb
and
jne
xchg
sbb
mov
mov
xchg
or
jmp
cltd
push
xchg
sbb
and
add
cwtl
cld
inc
shr
cmpsb
xor
sbb
jmp
sub
ljmp
push
jns
dec
inc
movsl
lret
mov
shrl
out
jecxz
sbb
dec
ljmp
loope
xor
out
scas
aam
mov
cmp
and
pusha
enter
jmp
xchg
ret
int
bound
inc
mov
xchg
sub
dec
js
into
push
mov
shll
xor
lods
inc
mov
cltd
popa
rorl
and
cltd
or
add
outsb
lcall
test
jl
fwait
adc
jo
jns
dec
jecxz
aaa
bnd
pop
mov
and
inc
lea
je
pop
add
jl
mov
push
mov
scas
insb
repnz
sub
fisubrs
or
push
pop
pop
int3
cld
cmp
jge
and
mov
loop
sarl
inc
outsl
mov
mov
lods
mov
push
or
test
dec
or
sub
dec
inc
xor
js
dec
test
sbb
add
jmp
clc
pop
in
movsb
jae
xchg
or
fidivl
jg
ljmp
test
xchg
loope
jae
fnstsw
inc
insb
hlt
lret
lret
rol
cli
repz
jb
adc
je
xchg
dec
sbb
mov
clc
fcmovnbe
push
mov
or
inc
sbb
xor
jmp
mov
fwait
adcb
jp
push
and
fsubrp
mov
test
or
faddp
mov
insl
iret
repnz
lahf
mov
cmp
push
mov
out
pop
out
nop
divl
mov
pop
rclb
jns
push
jmp
mov
fildll
jbe
mov
bound
xor
add
mov
push
call
or
mov
aad
ret
arpl
aas
mov
xchg
mov
inc
or
test
int3
adc
mov
jmp
add
jae
xchg
scas
push
cmp
in
ret
sbb
cld
arpl
aaa
lret
in
push
sub
mov
sbb
mov
dec
xchg
stos
or
lret
sbb
fildl
aas
aas
insb
xor
je
sbb
mov
int
adc
daa
dec
mov
push
xor
scas
ds
xor
iret
cltd
mov
jne
imul
cmpsl
inc
pop
mov
push
pop
mov
xor
ja
and
or
dec
inc
cs
or
mov
popa
daa
dec
xchg
cwtl
stos
dec
outsb
mov
sub
pushf
mov
dec
sub
decb
mov
pop
int
pop
sbb
xchg
imul
push
icebp
jle
js
aam
push
cli
sub
sbb
sub
jp
mov
enter
xchg
cltd
jb
jmp
sbb
in
imul
dec
xor
jns
loopne
add
mov
xchg
jnp
nop
dec
ret
and
mov
ret
idivl
push
cld
cmp
repz
pop
fadd
mov
or
jbe
sarb
in
std
imul
add
pop
std
ss
daa
jne
inc
loopne
mov
enter
inc
leave
stc
adc
lock
pop
stos
scas
andl
nop
cmp
sbb
cmp
pop
sbb
faddp
ret
xlat
cmpsl
inc
decb
add
sbbl
mov
repz
fiaddl
push
and
jne
in
sahf
out
scas
into
push
aaa
aam
lcall
leave
xor
js
jns
sub
jle
es
out
add
xchg
lret
pushf
les
test
pushf
push
clc
lods
or
mov
mov
aad
cmp
aas
inc
xchg
inc
sub
outsb
out
rcrb
fwait
mov
and
and
mov
push
or
mov
add
push
inc
movsb
int3
nop
and
aam
addb
sbb
roll
dec
dec
push
inc
loopne
jg
mov
sbb
testb
cmc
out
movsb
push
add
gs
mov
dec
int3
push
sbb
or
imul
shll
mov
ja
cmp
add
loopne
insl
out
mov
cli
adcl
scas
pop
movsb
sbb
cmp
mov
cmc
les
mov
add
inc
into
add
pop
je
pop
jnp
out
shlb
xchg
mov
icebp
cmpsb
nop
jecxz
jecxz
stos
adc
cmpsb
mov
outsb
scas
jmp
pop
pushf
xchg
lods
leave
sub
out
xchg
xchg
mov
lock
mov
shrb
inc
mov
mov
mov
and
stc
lds
sbb
fisttps
xlat
xchg
aam
adc
dec
out
decb
inc
mov
shll
sar
sarb
mov
daa
icebp
cmp
cwtl
testb
adc
xchg
insl
lods
mov
lahf
test
adc
cltd
add
push
mov
or
je
sub
stos
sbb
inc
fsub
ror
mov
loope
dec
push
andl
leave
and
cltd
in
push
push
test
adc
inc
push
popf
mov
mov
out
ret
frstor
jg
andnps
call
pop
mov
rcll
lcall
mov
add
mov
addr16
inc
jnp
sub
add
pop
inc
imul
stos
pop
xchg
pop
pop
pop
and
imul
scas
dec
mov
pop
cld
dec
es
jg
and
cmc
xchg
iret
cmp
inc
scas
push
sub
sub
enter
mov
xchg
jg
mov
shll
dec
cli
cli
pop
sbb
jmp
push
dec
mov
adc
cmp
loop
push
sub
fistpl
fmuls
xchg
adc
nop
push
gs
dec
dec
cltd
xchg
add
xchg
outsl
sub
outsb
jl
and
push
repnz
notb
lods
cmpsb
mov
rclb
jnp
add
jg
mov
dec
adc
shll
inc
mov
xor
out
jle
dec
and
adc
aaa
cmp
sub
lods
inc
out
inc
adc
push
jmp
outsl
mov
mov
cmp
push
jge
pop
scas
mov
int3
or
push
jg
data16
sbb
lock
sbb
iret
lret
cmp
jne
ficompl
insb
dec
in
adc
lret
push
dec
push
mov
sub
jecxz
dec
out
movl
pushf
inc
fadds
loopne
hlt
sub
xchg
push
sbb
sbb
add
xchg
cmpsb
jl
daa
jns
push
movsl
leave
adc
ja
movsl
mov
outsb
dec
dec
int3
sub
xchg
mov
in
lret
push
jge
xor
sahf
in
fistl
sbb
lret
stc
in
mov
adc
dec
inc
sbb
pop
icebp
data16
fsubl
pop
push
push
shl
aas
inc
test
sbbl
sub
in
pop
addr16
pop
imul
pusha
movl
xor
mov
stc
or
and
aam
cmpsl
adc
push
lds
orb
addr16
sub
xchg
fcomps
dec
jbe
insl
incl
add
popf
popa
xor
pop
dec
mov
mov
mov
popa
decb
push
negl
inc
cmp
sub
push
arpl
mov
mov
xchg
mov
cmp
lods
movsb
call
xchg
sbb
xchg
fisubl
fst
xlat
rcrb
push
xchg
jl
loop
repz
mov
sbb
sub
in
sbb
xor
shll
mov
shlb
fsubs
cld
sahf
xorb
jle
jp
adc
push
push
pop
ret
cmp
or
std
aas
sub
adc
scas
insl
xorl
cmp
out
sub
mov
mov
cld
mov
outsb
and
xchg
gs
xor
fsub
test
aad
ret
mov
fxch
xchg
inc
dec
push
xchg
push
bound
mov
ja
mov
pop
mov
add
and
je
push
stos
mov
jmp
mov
xchg
add
push
mov
mov
add
xor
xchg
cli
adc
pop
inc
sub
repnz
xchg
dec
scas
cld
add
cwtl
mov
pusha
shl
pop
or
or
jne
in
popa
mov
into
inc
outsb
jle
xchg
imul
pop
mov
cmp
lock
pushf
scas
push
and
mov
sahf
push
lcall
je
or
and
jecxz
sar
xchg
leave
adc
jg
pop
pop
inc
stos
stos
and
xor
cmp
jbe
lods
lahf
rcrl
jns
pop
leave
aad
xchg
aas
adc
lds
cld
cmpsb
btc
xchg
loop
push
test
sbb
xchg
jbe
push
push
decb
or
pop
jmp
mov
movsl
bnd
pop
xchg
sub
es
jb
cltd
mov
xlat
lods
inc
adcl
adc
lahf
mov
jne
xor
ljmp
mov
or
pop
add
inc
lcall
sbb
xor
xchg
daa
adc
test
shll
insl
cmp
loopne
int
and
sbbb
test
mov
cmpsl
dec
add
shrl
cli
push
rcrl
adc
dec
dec
testb
dec
aaa
inc
popf
test
inc
icebp
loope
ret
dec
sub
arpl
dec
out
cli
enter
imul
btc
mov
sub
imul
pop
and
push
pop
data16
mov
push
push
mov
daa
and
or
jge
mov
cli
pop
jmp
push
daa
icebp
call
mov
leave
adc
fimuls
xlat
and
dec
outsb
add
inc
daa
es
cmc
sbb
sarl
or
mov
jg
sub
in
jp
ljmp
lret
or
xorl
dec
inc
push
cmp
push
int
and
sarb
mov
daa
push
std
fldenv
insl
push
or
stos
inc
ljmp
ret
test
and
sub
cmp
adc
sahf
into
sub
lods
fidivs
mov
dec
jne
pop
cmp
insb
xchg
or
lret
adc
rcll
push
xlat
sbb
adc
mov
sub
cmp
cmp
jb
mov
mov
data16
or
ret
sub
adc
loop
push
roll
ljmp
jbe
pop
lock
xor
xchg
dec
test
sub
add
loope
jnp
cmp
xchg
out
push
arpl
mov
pop
adc
jae
je
mov
scas
shrb
loope
aam
add
fdivl
cmovs
adc
imul
or
pop
cwtl
mov
outsl
push
mov
mov
repnz
sbb
pop
mov
sahf
iret
mov
jecxz
sbb
jno
add
or
cmp
jnp
lods
push
ds
mov
mov
inc
insb
ja
push
mov
mov
sahf
mov
ja
push
enter
or
adc
dec
int
jne
push
inc
repz
jbe
inc
xor
mov
mov
mov
mov
jge
insb
mov
mov
movsb
mov
sub
lock
cmp
repnz
or
aad
ficompl
sbb
sub
xor
xchg
fiaddl
stc
imul
adc
inc
mov
jnp
shl
push
out
loopne
push
hlt
lods
xor
push
dec
mov
ss
xor
sub
inc
sbb
fs
stc
sub
mov
fiadds
inc
pop
cmp
jg
test
mov
movsl
pop
loopne
loope
push
inc
imul
sub
inc
sbb
xor
and
jge
sub
out
sub
aas
push
in
loope
xchg
aam
hlt
push
dec
mov
inc
scas
insb
push
movsb
push
ljmp
pxor
jnp
punpcklwd
stos
inc
xchg
jnp
out
sbb
mov
add
jmp
cmpsl
push
imul
jbe
imul
pop
sub
add
mov
je
lret
aaa
lret
or
movsb
push
dec
xor
inc
in
mov
push
mov
mov
call
xchg
stos
rolb
fwait
pop
jns
test
jne
push
in
xor
lods
fdivrl
push
push
add
addr16
cmp
jge
inc
jmp
aas
cwtl
dec
orl
mov
pop
ftst
lea
sbb
jo
into
into
jb
jns
jg
cmc
mov
mov
or
jl
inc
popf
jns
xchg
pop
mov
in
test
pusha
push
arpl
hlt
pop
outsb
por
insl
add
push
cmpl
dec
outsb
outsb
sarb
dec
xchg
or
add
loopne
mov
xchg
mov
adc
jo
dec
pop
nop
cs
mov
fists
inc
outsb
out
mov
xchg
pop
out
dec
sti
pop
cmp
stos
fidivrl
sbb
mov
push
out
mov
xlat
sbb
sub
movsb
iret
lar
imul
imul
pop
inc
sub
ss
and
call
pop
push
and
imul
nop
mov
pop
xor
out
loopne
psrad
sbb
push
lcall
mov
sbb
push
push
xchg
iret
cli
push
test
xabort
aaa
call
mov
sti
cmp
pop
movsb
and
cmp
adcb
in
mov
xchg
ret
rolb
pusha
mov
sbb
lods
test
fcmove
out
dec
mov
mov
lods
insb
addl
mov
scas
cld
xchg
cmp
movsb
dec
xor
adc
push
pop
sbb
xor
scas
aaa
pop
rcll
inc
repnz
mov
leave
dec
xchg
enter
mov
xchg
push
cmc
sub
les
cltd
in
sbb
aaa
test
adc
push
in
jg
adc
sbb
gs
pop
and
pop
adc
xor
cmp
outsb
xchg
ret
lods
into
add
imul
xchg
aaa
loopne
push
xor
xchg
test
or
call
popf
push
sub
mov
rorl
pop
out
mov
int
psllq
dec
and
loope
mov
loop
js
add
cmp
aas
sti
shlb
sub
pop
out
sbb
rcrb
add
or
sub
sbb
fildll
jp
mov
repnz
into
push
add
push
or
rcrl
cmp
movsb
mov
jae
sbb
mov
adc
mov
into
jo
and
daa
lods
aas
icebp
xchg
mov
jbe
cmpsb
lret
xor
iret
popa
dec
mov
adc
inc
cld
pushf
lods
into
and
mov
jno
or
call
mov
rorl
jg
mov
ss
add
lret
dec
pusha
xchg
scas
frstor
xchg
xchg
ror
adc
fcomi
insb
fisttpll
adc
push
cmpsl
inc
popa
sub
push
mov
xchg
pushf
fistl
xchg
les
ds
in
xchg
aaa
jge
dec
sub
enter
lods
inc
fistpll
xchg
fsubl
inc
or
add
and
jmp
mov
aad
mov
pop
and
mov
addr16
xor
jne
shl
mov
les
mov
pop
add
ljmp
pop
push
pop
cmp
xor
roll
jo
dec
pushf
out
rorb
decl
sub
adc
pop
or
sahf
fs
mov
adc
add
adc
scas
sti
jge
mov
scas
xor
imul
loope
sub
push
nop
sbb
push
insl
xor
pop
insl
test
lcall
addb
stos
jge
push
popf
sub
adc
mov
sub
aaa
shlb
cmpsb
sub
add
inc
sub
into
mov
xor
sbb
xor
mov
mov
dec
push
pop
mov
xor
les
mov
sbb
loopne
sub
lods
pop
imul
adc
push
xchg
mov
xor
jno
idivb
mov
cmp
push
gs
xor
mov
xchg
or
rcrb
fstpl
les
or
int
pop
sbb
lods
sbb
je
ljmp
call
pop
test
add
aad
mov
mov
stos
mov
mov
lods
push
sub
lret
adc
mov
adc
dec
das
xchg
bswap
adc
mov
shll
shlb
ljmp
push
iret
inc
push
popf
test
out
lret
lahf
imul
mov
sarb
in
sbb
leave
mov
jb
pop
iret
pop
or
adc
dec
mov
in
xchg
cmpsb
xor
sbb
movsb
popa
jecxz
push
mov
pop
xlat
daa
xor
lahf
fdivr
mov
lahf
std
in
add
jae
insb
lea
jns
mov
fs
leave
push
mov
in
rorl
sub
add
stos
inc
lods
cs
and
int3
dec
dec
stc
call
xchg
shll
jae
jnp
dec
into
mov
pushf
outsb
fucom
les
inc
xchg
jnp
and
repnz
jmp
mov
push
mov
fidivrl
fwait
xchg
lret
cmp
mov
pop
roll
mov
push
in
icebp
popa
jmp
and
pop
out
sbbb
jae
into
inc
cs
rorb
push
sub
test
daa
mov
pop
ss
cltd
rcl
mov
mov
sub
ja
mov
sub
enter
dec
pop
shll
out
popa
adc
movsb
outsl
inc
iret
test
add
fldl
rorb
ret
push
inc
pop
mov
jle
pop
push
mov
in
cmp
arpl
mov
sbb
xchg
rcrl
loope
mov
cmc
pop
mov
jo
push
mov
add
xor
mov
std
adc
aad
repnz
and
jmp
push
data16
push
sarb
lods
gs
cli
sbb
loope
mov
sarl
cmpsl
movsl
inc
push
in
rol
mov
aad
push
clc
loop
mov
fisubs
addb
xchg
test
ljmp
sub
lcall
mov
sub
pop
ret
and
daa
jnp
aad
test
icebp
pop
add
and
add
das
push
adc
mov
nop
bound
pop
xchg
inc
and
imul
adc
pop
es
dec
xor
movsb
jp
dec
notl
pushf
jecxz
outsb
filds
push
cli
lods
fmuls
dec
dec
ret
adc
xor
lock
push
cmpb
lret
sti
jg
and
mov
lahf
or
jecxz
mov
pop
fsubr
aad
push
xchg
pop
cmp
sbb
jp
push
xor
cmp
pop
cmpsl
out
sti
mov
fldenv
fs
arpl
mov
pop
sub
push
sbb
data16
xor
rdmsr
loop
dec
sub
fwait
inc
mov
ret
xchg
push
pop
mov
sbb
mov
mov
mov
into
xchg
inc
push
stos
and
imul
cmpsl
xchg
loope
hlt
pusha
mov
dec
imul
add
fpatan
jl
mov
mov
lock
dec
js
aas
sbbb
push
mov
lcall
pop
inc
pop
inc
add
sbbb
rorl
ret
ja
mov
push
out
idivb
repnz
repz
lock
shll
outsb
lcall
es
cmp
push
push
ds
mov
jnp
xor
dec
jl
icebp
xor
lods
xor
jne
inc
out
push
mov
es
pop
popa
fists
mov
inc
lods
adc
mov
mov
ja
into
lds
std
dec
repz
ret
push
mov
cld
pop
xchg
call
in
outsl
out
push
in
adc
loopne
sub
push
xor
mov
mov
xor
mov
jecxz
mov
mov
in
mov
jno
pop
xlat
or
ret
shlb
or
ret
dec
push
insb
mov
dec
dec
mov
pop
cli
lea
inc
push
cltd
mov
add
rcr
cwtl
shrl
mov
adc
ja
sbb
mov
out
std
mov
cld
sbb
icebp
xrelease
push
insb
mov
nop
and
lcall
jmp
dec
pop
inc
outsl
insb
rcrb
andl
loopne
mov
mov
xchg
das
xchg
arpl
into
andl
or
in
dec
xchg
mov
dec
xlat
in
in
lcall
add
mov
xchg
mov
test
pop
in
dec
sbb
testb
sbb
test
iret
or
sbb
popf
inc
in
addr16
mov
sbb
and
ds
rolb
or
loop
outsb
test
call
inc
stos
into
notb
rep
xor
sahf
jns
ds
xlat
aam
imul
xchg
xchg
out
enter
jb
loop
call
xchg
jge
bound
inc
cmc
dec
movsl
nop
sub
bound
jae
test
add
sub
sbb
outsl
cmpsl
xchg
push
or
sbbb
cmp
gs
popf
mov
add
jb
fdivs
inc
fistps
mov
mov
ret
xchg
stos
jp
in
mov
lret
sbb
inc
sahf
fs
scas
pop
jb
into
js
in
or
neg
mov
testb
and
cmpsl
xchg
inc
push
ss
inc
xorl
in
int3
scas
mov
jge
pop
dec
push
xlat
mov
jmp
mov
test
fs
fidivrl
mov
fcompl
cld
push
or
fidivl
jnp
mull
pop
inc
rcl
mov
js
push
into
int3
pop
mov
clc
push
bound
jp
xchg
add
lahf
jmp
mov
jl
xchg
inc
lods
cltd
push
mov
movsb
mov
pop
cltd
add
cld
jb
into
jge
aam
rcl
push
mov
dec
and
xchg
push
jno
scas
je
mov
pop
movsl
jg
clc
ds
cwtl
jmp
hlt
mov
insb
lds
and
jae
cmp
gs
xor
cli
mov
sbb
lods
pop
sbb
ficompl
aad
adc
scas
jecxz
adc
dec
and
das
loope
cltd
out
lods
xor
inc
xchg
mov
roll
shr
mov
rcrb
in
jbe
cli
adc
pop
adc
push
or
mov
add
push
lret
test
sub
fs
cmpsl
sub
mov
jne
jns
jbe
aam
call
dec
in
xchg
add
shl
jmp
scas
dec
jo
test
inc
cmp
bound
jge
inc
xor
add
jle
xchg
fidivrs
mov
jo
adc
push
repnz
loopne
fnstsw
in
enter
mov
in
cmp
jo
jmp
insb
ss
mov
cmpsl
repnz
push
xchg
push
inc
mov
cmp
sbb
fwait
or
fisubrl
aam
xor
xchg
mov
or
push
div
rorb
scas
xor
je
scas
test
push
loopne
mov
fdivr
jbe
xchg
rcrb
push
test
mov
jo
hlt
xor
xchg
mov
or
stos
aaa
shrb
in
jle
int3
mov
mov
jb
push
hlt
push
out
jno
and
gs
dec
sbb
jne
xchg
and
mov
adc
push
into
xchg
jne
fwait
mov
push
pop
push
adc
and
ret
mov
add
xchg
hlt
adc
scas
jne
or
ret
inc
loop
add
ja
imulb
mov
push
cmpl
add
mov
shlb
and
adc
xlat
sbb
mov
or
xchg
add
test
xchg
cld
pushf
push
mov
pop
jp
pop
imul
jecxz
and
dec
dec
mov
loopne
shll
ret
bound
adc
lods
jae
add
and
iret
out
sbb
xchg
jno
mov
jge
xor
mov
push
xor
push
add
mov
and
jmp
filds
or
xchg
sub
xor
fildll
fwait
push
sub
ret
mov
fsubs
outsl
enter
mov
lods
pop
lret
lods
aas
or
and
ret
jo
ljmp
cmp
push
sub
sub
imul
xor
mov
fnstcw
into
leave
sub
test
jns
cmp
loope
mov
add
mov
in
mov
pop
call
inc
mov
out
out
cmp
daa
and
push
mov
add
add
das
rcr
cmp
mov
sbb
lret
lahf
add
jmp
rorb
xchg
fsubl
popf
push
inc
and
jle
cli
out
cmp
mov
sbb
mov
jmp
dec
and
out
cmp
xchg
aam
mov
xchg
jae
ret
cs
scas
daa
addr16
lret
out
inc
jl
jno
scas
lods
ja
std
ds
pop
cltd
fs
popa
inc
mov
xor
dec
inc
shll
repnz
pop
add
lea
lock
daa
mov
sahf
out
push
inc
xor
shll
mov
lcall
jae
dec
int3
xchg
dec
test
lcall
sti
iret
repz
mov
sub
xchg
jae
insl
and
pop
xlat
rolb
adc
cmp
mull
pop
sbb
xchg
loopne
jl
mov
pop
adc
loope
cmp
enter
and
repnz
pusha
add
int
or
test
test
jae
call
pushf
inc
addb
pop
leave
ljmp
sbb
insl
add
jg
or
sub
das
shrl
inc
loop
jae
in
enter
xchg
fs
sbb
aam
out
mov
xlat
or
nop
imul
movsl
push
fiaddl
hlt
mov
jne
ret
fisubl
dec
pop
nop
movl
pop
popl
test
pusha
lods
int3
cmp
or
rcll
jo
adc
into
call
wrmsr
mov
notl
repz
jns
dec
pop
aas
shrl
fimuls
and
add
int3
das
mov
mov
minps
lahf
push
adc
mov
mov
adc
mov
and
dec
cmp
and
adcl
cmp
mov
cmp
xchg
add
mov
adc
hlt
jge
mov
pop
adc
push
jo
push
xorb
pusha
mov
lret
mov
sbb
ret
bnd
movsb
cmpb
sbb
sbb
and
iret
cmp
fnstsw
pop
jg
inc
movlps
jo
mov
decl
loope
out
out
insb
mov
movsb
andb
push
sub
int3
mov
dec
sub
call
gs
lahf
and
sbb
xchg
inc
in
xlat
mov
cmp
and
or
cltd
inc
wrmsr
mov
cwtl
or
sub
pop
imul
adc
push
gs
inc
dec
pop
xor
push
stos
add
std
neg
pop
fsubr
pop
mov
cmc
data16
inc
dec
nop
or
out
outsl
data16
cltd
das
in
lahf
xor
lret
xor
adc
movsb
pop
mov
pop
repz
mov
subb
lods
inc
pusha
mov
pop
sub
mov
dec
push
sbb
pop
pop
cmpsb
mov
std
sbb
sub
lods
in
jnp
pop
aam
jns
stos
pushw
testl
xor
push
pop
cli
mov
mov
or
fcompl
fimuls
std
into
sbb
cwtl
jbe
mov
lock
inc
jg
cmpsb
pop
cmp
lock
cld
stos
std
int3
pop
xor
loopne
xchg
pop
adc
pop
mov
lods
jb
sbb
add
cmp
push
mov
fsts
jno
xchg
mov
mov
pop
mov
mov
jb
std
sbb
hlt
jbe
add
mov
xor
orb
xchg
mov
mov
or
inc
out
jecxz
test
inc
ds
jno
mov
and
leave
mov
sbb
fisubrl
jnp
bound
shl
mov
adc
inc
jns
out
and
sub
xlat
mov
iret
and
test
jnp
xlat
adc
lret
mov
and
and
lcall
xor
fcomip
loopne
sub
fistpl
add
mov
and
and
sbb
dec
ja
push
add
stos
popf
xchg
stc
stos
jecxz
cld
push
lods
inc
cwtl
jnp
pop
pop
pop
repnz
mov
lds
adc
fsubrl
lret
push
add
dec
inc
jo
mov
cmp
call
pop
and
xor
mov
dec
push
imul
das
repnz
sbb
movsb
mov
sbb
sarl
in
les
data16
dec
dec
lret
rorb
jnp
sub
mov
sbb
mov
movsb
fidivs
dec
xor
arpl
or
mov
js
ror
lret
cmpsl
es
cmp
stos
adc
mov
jbe
jmp
sub
inc
hlt
mov
dec
add
pop
imul
xor
xor
push
xor
fstpt
in
xchg
jmp
adc
xchg
int
in
decb
insb
std
pop
lcall
jns
in
inc
ret
sbb
stos
mov
xor
pushf
sub
sbb
stos
mov
sbb
je
jmp
xlat
pushf
in
mov
sub
aam
call
sbb
mov
out
cmp
scas
sarl
dec
jb
mov
daa
cltd
xor
pop
pop
repnz
ss
repz
inc
je
jae
xor
repz
cmpsl
sub
aam
sub
fistpll
jg
and
test
cmp
movsb
shlb
mov
jl
mov
inc
dec
adc
out
lea
aaa
and
mov
lods
je
lea
adc
sub
lahf
sub
jp
xor
pop
popf
pop
lock
das
xchg
dec
jmp
lock
loope
inc
xlat
xchg
int
test
popf
xor
adc
and
mov
adc
inc
jns
xlat
into
or
aad
into
fldt
push
fs
and
testl
or
inc
sbb
push
lods
stc
int
sub
xor
xor
pop
ds
out
cmp
pop
stos
add
lock
and
mov
call
push
mov
into
cmp
vpavgw
aas
mov
clc
lret
or
movsb
inc
pop
push
and
dec
into
mov
fiadds
movsl
mov
sub
dec
aam
hlt
mov
jno
orb
pop
scas
push
lahf
and
push
inc
cmp
lahf
sbb
jge
cmp
sbb
popf
mov
cmovp
shll
cmc
mov
aas
je
icebp
jae
jp
andl
jmp
add
xor
pop
insl
mov
add
add
xlat
call
sahf
xchg
out
std
pop
and
mov
adc
addl
movsb
jecxz
enter
or
dec
cmp
mov
adc
add
int
dec
pop
push
ret
mov
fcmovne
js
dec
mov
outsl
mov
lods
lahf
imul
jmp
in
adc
xor
mov
call
stc
inc
fwait
sbb
loope
cmp
adc
in
imul
das
repnz
test
or
scas
enter
pop
jne
jne
loopne
adc
sahf
lret
or
int
add
add
ljmp
movsb
ljmp
ljmp
pop
lea
test
fucom
sbb
dec
imul
ret
jecxz
fnstcw
pushf
jp
sbb
push
xor
in
mov
push
pop
mov
mov
push
push
jecxz
push
or
add
imul
js
in
scas
sarl
fcomi
popa
sbb
xchg
and
cmp
sub
aam
mov
std
repz
fsub
sahf
or
push
mov
int
scas
call
movsb
mov
iret
jnp
mov
addb
pop
loopne
jl
adc
test
dec
adc
adc
xchg
js
lds
sub
in
pop
addr16
ss
test
lret
xchg
adc
repz
mov
lds
lods
or
or
sub
in
mov
push
test
cmpsl
cmp
or
test
lret
mov
mov
xchg
in
popf
add
ja
jp
outsb
dec
adcb
lock
jb
or
add
lahf
dec
jbe
loop
adc
subb
mov
cmp
mov
and
mov
push
jae
and
ja
aam
push
xchg
insb
mov
mov
gs
cmp
mov
jno
cwtl
adc
mov
fwait
addr16
dec
addl
xchg
fisttpl
aas
xchg
inc
cmp
lea
dec
movsb
pop
sbb
lret
cmp
cmp
inc
jge
imul
std
lret
sub
cmp
das
mov
mov
cmp
dec
lcall
nop
and
xchg
add
cs
and
lcall
in
jbe
enter
pop
ds
xchg
cmp
inc
xor
mov
lods
jne
xor
pop
nop
xor
in
loope
pop
or
add
out
movb
sbb
cmp
lret
insb
insb
jmp
scas
enter
push
inc
aas
xchg
or
outsb
cmpsb
mov
lods
and
mov
aaa
mov
ja
in
movsl
mov
insl
sub
insl
mov
sub
mov
cmp
gs
lods
std
shr
cli
test
jb
inc
jmp
push
jnp
das
add
adc
inc
call
add
repnz
inc
in
fwait
gs
xor
mov
adc
ja
jo
inc
push
lret
jp
rol
push
pop
xchg
dec
xchg
fldt
dec
mov
das
sbb
mov
dec
test
faddl
inc
xchg
fdivrs
cmp
in
dec
mov
jge
imul
fdivrl
outsl
adc
cltd
mov
jb
inc
pusha
insl
sbb
lds
data16
mov
fldl
loopne
cmp
mov
lahf
mov
sahf
leave
ds
inc
fidivl
outsb
xchg
je
rolb
sahf
cmp
fcoml
rolb
cmp
leave
mov
enter
repz
mov
mov
out
lahf
add
inc
cmpsb
push
sbb
push
lea
xor
or
pop
sarl
mov
out
lea
jne
popfw
inc
adc
aam
sbb
pop
es
lods
cltd
push
into
jp
int
jbe
aas
negl
lods
stc
push
insl
xor
mov
fldcw
or
sarb
out
sbb
and
sub
sub
scas
mov
fdivs
push
push
dec
add
mov
loopne
push
push
sub
add
dec
in
mov
ja
or
add
push
mov
in
rcl
mov
cmp
xchg
repz
ficoms
dec
jnp
into
popa
lahf
int3
pop
int3
in
sub
xlat
jmp
ret
mov
fbstp
mov
push
add
sbb
xchg
addr16
out
outsl
lds
imul
jns
in
pushf
pop
mov
ds
sub
aaa
ja
cmpl
sub
mov
negl
aad
cld
out
mov
push
dec
clc
mov
push
mov
js
cmovge
ficompl
das
mov
fwait
cmp
dec
push
decb
xchg
ss
mov
fcoms
cmp
jnp
lcall
test
out
pop
or
rcr
and
lods
stos
jl
lret
pop
xchg
cmp
xchg
xor
jnp
jl
sbb
mov
cs
add
cmp
mov
mov
dec
insl
pop
je
cld
mov
cmp
add
cmp
push
add
mov
mov
imulb
or
lcall
sbb
xor
push
es
inc
repnz
bound
push
repnz
add
idivb
out
cs
sbb
mov
mov
or
popf
iret
jp
cmp
notl
faddp
or
aad
test
push
adc
pushl
or
imull
xchg
mov
daa
mov
shrb
movsl
mov
lods
inc
inc
fimull
lcall
fcoml
vpermi2w
das
sub
fidivs
outsb
lods
mov
repz
out
je
pop
test
sbbl
cli
xchg
rcr
jbe
jp
sahf
pop
cmp
mov
arpl
xchg
push
pop
adc
inc
adc
jb
jo
ja
jbe
jnp
out
adc
xor
out
test
popa
jne
pop
test
mov
sub
ret
das
lret
ret
movsl
outsl
leave
push
test
shll
mov
lods
pop
in
inc
cs
and
cmp
movsl
js
dec
xor
repz
lret
mov
test
loope
ljmp
ficoms
das
adc
lcall
in
je
mov
testl
fdivl
jl
mov
jae
pmaxub
jnp
xchg
cmpsl
add
outsl
movsl
inc
push
xorl
movsl
sbb
or
adc
dec
xlat
or
sub
push
add
fisubl
mov
out
or
sets
fs
jno
insb
in
push
scas
stos
inc
push
insl
in
dec
insl
dec
add
jp
adc
lret
xor
pop
add
jne
das
cmp
popa
lret
addb
add
dec
fidivrs
jle
jne
cmc
adc
stos
imul
xor
sub
jno
rcrb
push
sbb
nop
pusha
dec
dec
push
mov
ja
mull
add
adc
mov
cmp
and
stos
imul
repz
xor
data16
mov
mov
mov
out
ret
je
js
faddp
fcompl
lods
shr
mov
jnp
add
aaa
xlat
mov
add
ftst
ss
push
dec
and
push
mov
mov
mov
sub
and
neg
stos
dec
mov
dec
call
icebp
push
cwtl
mov
fmuls
and
pusha
in
dec
cmc
mov
push
pop
inc
push
cmp
sub
adc
jnp
js
mov
mov
cmpsb
jl
xor
sbb
pop
lcall
rcrl
jae
shrb
sub
out
adc
push
mov
add
mov
pop
sbb
mov
jmp
shlb
inc
sysret
icebp
and
dec
enter
dec
les
iret
pop
and
fstpt
loopne
test
sbb
pop
xchg
inc
xor
loope
or
push
mov
incl
arpl
xchg
or
jmp
inc
push
fsubrs
lods
sbb
leave
xor
inc
in
fisttpl
shlb
rol
movsl
data16
cmc
fadds
or
cmp
jmp
iret
data16
cs
mov
mov
add
push
cmp
cli
mov
ljmp
fnstcw
loope
sub
loop
jnp
lods
cmp
sbb
inc
mov
ret
rcll
dec
outsb
orl
and
lds
pushl
xchg
sub
add
outsl
aas
add
lcall
and
fistpll
pop
add
bound
imul
or
jl
js
adc
mov
or
dec
push
xchg
loopne
test
dec
push
ret
sub
push
xor
mov
lods
cs
jno
ret
dec
dec
cmpsb
push
add
cs
popa
sub
rcl
popf
cmpsl
xchg
enter
popf
int3
test
xchg
cs
push
and
lock
xchg
mov
xchg
mov
lret
pop
mov
fidivl
mov
dec
mov
in
inc
ja
cltd
pop
in
cld
std
xchg
xor
pop
popa
scas
leave
fcmove
and
xchg
inc
cmpb
cwtl
cmp
testl
pop
adc
adc
sbb
xor
sub
scas
daa
outsb
sub
fstpl
inc
lds
mov
in
cmp
xlat
pop
rcrb
mov
fcmovbe
js
mov
shr
in
push
add
sbb
lock
mov
mov
xor
mov
xchg
xlat
mov
stos
and
leave
and
mov
js
sub
inc
cmp
pop
aam
pop
imul
pop
cwtl
or
imul
mov
nop
aam
enter
dec
xchg
movsl
clc
sahf
push
xchg
jnp
mov
xchg
and
lods
ds
test
icebp
mov
pushf
add
arpl
and
dec
adc
rorl
idivb
add
arpl
cmp
pop
test
push
repz
sbb
cwtl
adc
xchg
test
fs
mov
and
pop
inc
mov
inc
push
out
filds
add
fstpt
and
adc
ds
roll
arpl
into
sbb
gs
xor
add
out
mov
inc
loope
sub
movsl
sub
sub
xor
repnz
sub
mov
bound
scas
popa
stc
and
inc
add
xchg
cs
fs
jge
hlt
aaa
xchg
add
mov
mov
out
pushf
mov
sbbl
xchg
daa
sbb
fs
in
sub
andb
cwtl
addr16
bound
stc
movsl
pop
in
push
xchg
sbb
xor
out
loope
or
xchg
enter
sbb
sbb
jns
imul
mov
inc
lods
add
je
xchg
stc
inc
arpl
dec
arpl
ret
fstpt
dec
nop
xchg
testb
rorb
mov
cli
stos
sahf
insl
adc
adc
shrl
test
jecxz
jae
icebp
mov
fstps
lock
jp
mov
push
pop
lock
inc
enter
inc
sbb
sbb
out
outsb
dec
inc
cmpsl
into
pop
pop
cmpsb
ret
add
sbb
lret
mov
sbb
cltd
push
shll
adc
lcall
shr
mov
add
dec
subl
inc
jmp
fwait
jle
add
xchg
enter
pushw
loopne
lods
ret
push
mov
mov
adc
mov
add
mov
sub
push
and
or
div
cmp
dec
out
cmc
mov
push
push
imul
jae
js
and
sbbl
mov
insl
mov
lods
les
mov
jge
test
xchg
adc
mov
cld
sti
and
xchg
ret
push
mov
cli
stc
hlt
mov
pushf
jge
xor
push
push
sti
push
ret
je
xchg
ret
cmp
dec
push
jnp
jno
xor
test
add
aam
cli
push
lahf
cmpsl
inc
lods
adc
fs
rclb
js
jecxz
xchg
inc
jns
adc
pop
adc
adc
popa
sbb
sbb
adcb
cmpl
test
push
daa
mov
mov
in
leave
push
test
dec
je
aas
jmp
push
clc
inc
fs
xor
pop
jnp
sahf
jl
cmpsb
out
add
into
push
int3
das
sub
pop
aas
pop
arpl
pop
xchg
sbb
imul
cli
sub
mov
xchg
mov
aam
dec
lock
int3
xlat
cmp
push
xchg
inc
fiadds
popf
rcr
clc
sub
inc
in
push
rcrl
rcrl
loopne
dec
or
and
xlat
mov
xor
jnp
aaa
cmp
sub
fistpl
arpl
icebp
fcoms
inc
aas
je
push
dec
cmp
orb
lods
bound
dec
data16
rcrb
xchg
imul
inc
mov
xlat
jne
add
idivb
jmp
dec
mov
stos
inc
loop
xor
test
in
cmc
fs
insb
pop
aaa
test
xchg
aas
cs
inc
adc
xchg
mov
outsb
arpl
dec
jno
imul
add
lea
jecxz
movsb
out
std
and
fisubrs
fisubrs
addr16
imul
aas
push
jns
test
test
cmp
in
icebp
repz
hlt
add
cmc
sub
out
out
jle
adc
push
mov
loope
mov
jne
inc
adc
or
ljmp
pop
daa
stos
js
pop
stos
cs
pop
out
inc
inc
lret
add
inc
frstor
mov
dec
lret
rorl
test
cmp
nop
aam
mov
movsl
iret
ds
xchg
js
mov
sarb
lahf
add
push
jge
outsl
adc
sbb
in
fs
xor
or
sub
repz
sti
ret
pop
mov
push
jo
inc
adc
test
or
xchg
add
push
cmp
adc
add
or
in
or
jg
pop
in
leave
push
jno
icebp
subl
xchg
jb
ds
push
test
scas
shll
mov
imul
test
jne
jmp
stos
xchg
cld
mov
movsl
sub
pop
dec
pop
std
xchg
mov
fisubrs
rcrl
xchg
mov
mov
cld
std
ss
mov
cmp
lret
cld
adc
ja
fsubp
mov
aad
cmc
movsb
jle
push
popf
sbb
and
adc
pusha
mov
xor
sub
and
add
loope
aam
sub
mov
fiadds
pusha
cmp
inc
ja
and
imul
mov
push
lahf
pushf
xchg
out
mov
loope
outsb
jnp
pop
add
inc
cmpsl
sub
mov
in
push
xchg
cmpsb
inc
idivb
and
pop
adc
outsl
sub
or
cs
sub
fs
pusha
sub
lea
xchg
jmp
sbb
mov
fucomip
lcall
test
jp
jl
and
addl
gs
ret
add
push
lock
sbb
pop
xor
mov
cmp
enter
pminsw
mov
aad
adc
adc
sbb
mov
icebp
out
shlb
mov
add
jl
and
jge
lcall
mov
lock
cmp
mov
loop
xchg
addl
mov
jle
sbb
es
test
jg
ror
inc
ds
push
in
in
in
pop
cmp
mov
std
jae
pop
add
xchg
pop
mov
add
movsb
in
outsb
xchg
push
sub
adc
jmp
jne
adc
mov
xchg
int
pop
jecxz
inc
das
sub
sbb
push
lret
aam
cmp
xchg
xor
out
movsl
sbb
lret
je
pop
int
jbe
jo
lahf
testl
orl
adc
jg
xor
dec
sub
xchg
std
loope
scas
cmpsb
fst
push
inc
fisttps
ljmp
inc
inc
outsl
int
outsb
adc
pushf
loope
xchg
in
xlat
lret
arpl
lds
cmp
nop
aad
jle
call
cmpsl
icebp
pop
rcrb
pop
sbb
loope
imul
ja
xchg
push
ss
cmp
xchg
mov
dec
cltd
insb
mov
push
icebp
mov
outsl
mov
roll
or
scas
or
in
cwtl
jo
scas
adc
sub
sti
in
cmpsb
lret
jno
add
sub
fs
sbb
loope
adc
movsb
mov
mov
icebp
sahf
or
mov
stos
mov
call
add
pop
andl
xlat
les
ljmp
mov
mov
rcr
fldl
movsl
cmp
mull
fst
fcoms
mull
js
jp
lret
movsl
xchg
mov
pop
ss
and
lea
rcrb
imul
xor
add
test
test
mov
lcall
test
jecxz
pop
lret
loopne
mov
adcb
xor
lock
mov
sub
dec
test
cmpsl
imulb
push
xchg
test
movsl
mov
mov
rsm
lret
xchg
subl
loope
cwtl
pusha
int
or
gs
jbe
daa
mov
stc
mov
xchg
add
shr
gs
cwtl
stos
mov
jno
fstpl
dec
pop
add
jns
mov
fistps
adc
mov
pusha
push
loop
jp
movsl
push
ss
scas
xchg
shlb
pop
xchg
ljmp
dec
sub
mov
mov
lret
mov
iret
push
jge
sti
xor
inc
and
pop
jp
js
test
push
pop
jb
push
adc
jne
jle
insl
mov
sub
outsl
adc
and
outsl
pop
ljmp
cmp
mov
ja
out
test
dec
imul
std
lods
subb
movsb
jno
fadds
xchg
test
aaa
sbb
out
pop
pusha
jg
dec
inc
xchg
or
icebp
push
add
das
jecxz
xchg
lret
inc
jl
popa
jae
add
pop
pop
jge
xchg
dec
test
xor
shlb
or
xor
inc
mov
into
call
push
jnp
sahf
push
dec
jp
out
rorl
inc
or
fbld
mov
test
and
shl
test
add
jge
pop
push
cmpsl
dec
xor
adc
pop
pop
mov
cld
mov
or
sarl
movsb
arpl
pusha
aas
fildl
int
cmp
xchg
sub
sti
call
ret
inc
fs
xchg
nop
hlt
aad
pop
testl
mov
clc
jge
hlt
lods
xchg
cmp
outsl
push
jb
push
add
dec
adc
mov
cmp
jl
outsb
enter
ret
push
out
int
jbe
fistps
aam
cli
inc
pop
into
mov
or
and
out
push
lcall
js
mov
iret
int
inc
jae
in
xchg
or
shrl
aas
cmovs
xor
xor
jmp
out
push
mov
stos
adc
mov
in
out
cwtl
aad
inc
js
or
inc
push
loop
sub
aad
mov
sarl
fwait
sahf
stos
cmpb
out
sbb
and
push
xlat
hlt
lea
or
mov
mov
test
xchg
mov
dec
cmp
ret
out
mov
jmp
pop
push
ds
pop
mov
cli
jmp
push
mov
pop
imul
jecxz
fmull
mov
lret
sub
adc
in
mov
mov
sbb
and
sub
inc
pop
ljmp
into
add
mov
sbb
mov
int3
inc
xor
push
cmp
test
xchg
push
loopne
repz
lea
mov
cmp
or
xchg
or
addr16
inc
push
mov
decl
xchg
insb
xor
jns
jge
mov
cmp
and
fisttps
call
addb
cmp
xchg
bound
xchg
fs
add
adcb
ja
out
mov
in
pop
in
sub
dec
aas
push
lret
sub
rclb
sbb
cmp
movl
addb
inc
cmc
lahf
cs
stos
and
in
mov
cs
add
jle
cmpsb
push
xchg
add
popf
or
adc
or
adc
dec
xor
or
sub
adc
into
cmc
mov
lods
xor
add
dec
mov
push
push
stos
and
sub
outsb
dec
stos
or
ds
dec
mov
daa
jmp
add
mov
push
dec
push
lock
xor
cmp
mov
andl
outsl
adc
cmpsb
and
data16
pop
in
or
or
testb
push
add
and
and
dec
js
pop
test
imul
and
jge
ret
jecxz
and
cltd
or
add
sbb
aaa
cmpsl
sbb
cld
dec
jae
mov
test
idivl
or
in
xchg
pop
ret
ds
into
mov
lock
fincstp
jg
mov
pop
add
je
sbb
dec
push
pop
or
push
adc
cltd
test
pop
cmp
cwtl
sbb
call
cmpsb
pop
je
xchg
lods
pop
test
lods
adc
xor
arpl
rcrb
pop
insl
mov
stos
imul
mov
mov
jns
bound
ljmp
jge
testl
xchg
cmp
xor
fwait
pop
push
push
je
dec
mov
outsl
dec
cltd
mov
xchg
push
insb
jp
pinsrw
xor
xor
stc
jp
fcmovnu
gs
cwtl
das
fsubp
push
ljmp
xchg
pop
add
or
sub
movsl
dec
das
fmull
insb
xor
mov
je
fadd
mov
and
bound
clc
jg
mov
add
jmp
leave
pop
repz
inc
fcomps
and
fidivrs
push
sbb
repnz
lock
sti
pop
fcoml
arpl
lcall
repnz
stos
inc
pusha
shrb
popa
mov
addb
jne
fisubrl
sbb
and
or
aaa
cwtl
dec
test
ret
ret
pop
movsb
xlat
shrl
jl
test
add
cld
insl
cltd
fiadds
sbb
mov
xor
aam
or
fisubs
sub
cmpsl
inc
pop
adc
xchg
ds
out
xor
add
repz
sahf
fstpl
les
jo
adc
pop
xchg
sub
push
and
imul
popf
push
outsb
addl
inc
inc
and
outsb
dec
sbb
mov
jge
push
in
call
xchg
cmp
clc
ffree
icebp
xor
in
mov
add
add
jne
cmc
xchg
popa
dec
ret
xchg
movsl
mov
and
pop
xor
nop
cmpsl
push
dec
adc
imul
push
push
jbe
cmp
add
jmp
scas
or
daa
shl
mov
repz
cmp
dec
into
cld
lret
adc
aad
int3
jp
fadd
sub
and
pushf
subb
shlb
ss
inc
inc
es
xchg
int
clc
mov
imul
shrl
pop
pop
cltd
push
pop
in
lods
or
push
insl
in
push
inc
mov
xchg
lahf
cmpsl
imul
or
mov
inc
test
nop
add
mov
mov
add
sub
fnstcw
lret
inc
inc
mov
jnp
xor
xlat
outsb
push
fistpl
xchg
push
and
mov
jae
cs
outsl
test
cmpb
addb
rolb
jp
push
lret
fcomp
jmp
daa
lcall
xor
movsb
cwtl
lret
push
pop
sbb
aam
push
std
or
adc
jg
dec
cmp
and
filds
jle
je
jne
mov
mov
xchg
cmp
out
ja
in
ret
adc
jge
cld
mov
xchg
inc
add
sar
ret
pushf
mov
vpunpckhbw
enter
jbe
out
paddusw
imul
popf
pushf
pop
cmp
push
cmpsb
lret
sbb
dec
nop
aas
lahf
mov
shrb
lods
rclb
add
fnstsw
push
pop
cli
cmp
stos
adc
inc
add
jle
int3
jb
sbb
adc
mov
out
or
cmc
scas
aas
mov
push
pop
push
add
dec
aad
loope
dec
ljmp
and
push
xor
incl
pushf
out
inc
or
popf
push
hlt
inc
cli
sti
jecxz
mov
sbb
or
mov
cmp
fcompl
ss
xor
xor
mov
or
dec
adc
push
pop
gs
fldt
rclb
cltd
push
mov
pop
cmp
lods
icebp
in
cld
dec
loop
gs
aam
sub
rol
nop
fld
fldcw
ss
insb
push
jo,pn
inc
push
mov
int
inc
mov
inc
rorb
faddl
iret
pop
loop
mov
dec
mov
xor
imul
inc
das
add
xor
mov
lock
std
jecxz
ds
sbb
inc
push
movsl
add
enter
les
shrb
jns
push
push
and
int3
bound
bswap
pushf
inc
xor
in
lcall
in
sub
mov
sbb
shll
dec
jno
lds
pop
mov
push
xor
cmp
test
add
mov
cmpsl
jg
jge
lock
jb
and
jbe
mov
xchg
pop
aad
negb
mov
jecxz
push
sub
adc
pop
bound
inc
cmp
xchg
jae
mov
xchg
popf
jl
or
lret
fcoms
jle
xor
or
mov
add
aad
cld
std
or
repz
jl
jno
scas
cmpb
ficomps
jp
out
xor
push
lret
andb
or
pop
cld
test
jbe
pop
inc
inc
pop
sbb
mov
cmpsb
shlb
push
and
stos
push
movsl
stos
fstpt
pop
mov
movsb
or
lods
pop
jae
mov
ljmp
aaa
jl
cwtl
dec
push
cli
cli
bound
jbe
cmp
mov
les
rcl
inc
mov
dec
mov
clc
lret
into
push
nop
int
out
insl
ds
sbb
mov
imul
icebp
fstp
loopne
outsl
stc
pop
or
cld
outsl
xchg
sbb
cmp
xchg
or
jle
xchg
out
cmpsl
loop
enter
push
test
loopne
inc
les
int3
pop
iret
mov
xor
pop
imul
push
add
scas
sbb
test
mov
outsl
xchg
mov
pop
jge
push
popa
xlat
fs
xor
stc
push
ljmp
inc
cli
and
or
jle
adc
jp
cmpsl
xor
rcrb
movsl
pop
dec
mov
inc
rorl
subb
add
ret
xchg
jb
mov
and
dec
jbe
popa
sbb
push
je
push
and
sub
or
sbb
push
andl
jg
into
mov
aam
xchg
or
leave
out
push
hlt
es
pop
fwait
sub
push
iret
jno
addr16
adc
ljmp
mov
ss
mov
movsl
aas
sbb
xlat
loop
ljmp
mov
mov
iret
xchg
aad
and
jg
into
and
cmp
jp
or
and
pop
sub
pop
cmpsl
dec
mov
je
stc
mov
popf
jb
cmp
outsb
mov
adc
outsl
pop
push
fldt
es
cmc
and
out
mov
fstpl
sub
loop
or
cmpsb
lcall
aam
test
mov
push
push
mov
or
loop
jno
je
stos
loopne
mov
out
cld
decb
lret
sbb
test
cmp
ja
sqrtps
mov
sbb
xchg
fldt
mov
and
mov
mov
ds
mov
and
mov
sub
sub
lock
and
cmp
push
cmp
test
int3
testb
sub
dec
insl
inc
lret
jp
cmp
mov
adc
mov
stos
jg
jp
push
gs
adc
mov
into
lds
adc
out
push
lea
lahf
fucomip
jns
outsb
enter
scas
scas
cld
pop
loope
jle
mov
or
sub
pop
mov
or
lds
xor
add
lret
ret
mov
adc
sbb
icebp
pop
jne
lock
jp
cmp
and
mov
repnz
lret
adc
sbb
adc
in
push
popf
or
cmp
add
in
outsb
jne
adc
cmpsb
xlat
pop
rorb
dec
imul
das
pop
push
cmp
testl
fistpl
mov
cmp
pop
in
mov
out
push
leave
push
mov
je
sub
ficoms
add
mov
scas
push
sbb
mov
sub
mov
mov
and
lret
cmp
rcrl
mov
push
and
sahf
lods
cmp
inc
cmp
ret
mov
outsb
icebp
pop
imulb
push
sbb
pop
adc
pop
push
lcall
fstpl
mov
push
pop
lods
ret
jo
cmp
xchg
ja
lock
ja
in
push
pop
jno
push
scas
loop
sbbl
mov
jnp
sub
fwait
into
repz
jbe
jnp
jo
cmpsb
out
add
int
pop
push
or
push
pop
push
cmpsl
sub
scas
mov
pinsrw
jmp
movsb
test
mov
ds
lock
cmpsb
dec
cwtl
insb
inc
sbb
pop
ret
outsl
push
cmp
inc
shll
push
lcall
daa
addl
cmpb
testb
pop
mov
mov
cmp
inc
jecxz
mov
xchg
ljmp
cmp
add
pop
seto
fstl
cmpl
dec
or
xor
ror
dec
repnz
adc
push
xchg
cs
mov
push
filds
mov
cmpsl
leave
xlat
inc
mov
jne
lret
aam
stos
nop
pop
jge
fdivs
lret
cmp
or
rorl
add
lock
and
loopne
out
adc
das
add
sub
cmp
cmp
cld
cmp
and
aad
xchg
cmp
lods
add
xchg
daa
sbb
mov
ja
stc
loopne
push
test
dec
mov
sbbl
ret
mov
dec
jbe
add
cmp
pop
cmc
jmp
test
jne
mov
or
add
movsb
pop
lret
lcall
icebp
ret
mov
imul
push
inc
imul
mov
mov
push
mov
sbb
fisttpl
imul
inc
cmpsl
push
mov
jg
xchg
xchg
mov
or
cwtl
cmp
sub
sub
mov
add
movsb
push
push
sarl
push
out
push
loopne
inc
ds
daa
loope
adc
aam
iret
or
in
add
add
add
aas
aad
out
les
and
pop
jnp
scas
imul
sbb
aas
je
out
sub
mov
pop
insl
mov
inc
shll
movsb
imul
iret
data16
mov
pop
jg
stc
test
iret
leave
lds
sub
jno
ljmp
out
xlat
nop
pop
repz
push
mov
loope
std
pop
xor
mov
mov
push
pop
inc
loop
push
push
mov
repnz
pop
dec
mov
outsl
sub
adc
xor
jmp
in
xor
push
call
sbb
mov
inc
mov
xor
iret
fadds
ja
push
fsub
cmp
xchg
xchg
cli
push
hlt
call
cmc
jae
sarl
les
or
inc
mov
das
add
int3
call
adc
fwait
push
stos
lret
mov
mov
xchg
mov
mov
xchg
cli
adc
push
insb
mov
inc
dec
sbb
test
xchg
jle
dec
fcomps
lods
add
clc
push
mov
out
add
call
pop
pop
jno
lret
add
or
adc
adc
xchg
jmp
test
push
xor
add
xchg
sub
call
mov
or
push
sbbb
jg
lahf
dec
pop
dec
outsl
xchg
mov
mov
popl
mov
and
lock
mov
icebp
cwtl
arpl
cltd
jns
into
ja
orb
outsb
sub
movsl
sub
push
outsl
aad
push
popa
rorb
sbb
shl
icebp
call
add
into
pop
negb
xor
insl
sbb
and
cmpl
fnsave
lods
cmpsl
inc
lcall
xor
das
push
rcll
cltd
xor
ds
fs
loope
mov
repz
and
divb
pushf
test
xchg
icebp
xchg
sbb
cltd
les
lahf
outsb
sub
xchg
and
add
sbbl
add
xorb
test
sbb
repz
lret
dec
test
cltd
xor
xchg
adc
xlat
sub
je
mov
clc
inc
mov
shl
ret
cmpl
popa
lcall
je
push
mov
mov
jbe
xchg
jbe
loop
gs
push
std
dec
pop
xchg
subl
push
xor
push
jmp
xor
xchg
sbb
and
call
pop
pop
scas
add
sti
inc
je
mov
fdivrl
jb
aas
mov
fnsave
lods
mov
pop
sti
in
pop
lock
stc
cltd
xchg
xor
pop
mov
cmp
mov
push
call
sub
cmp
xchg
mov
push
dec
loop
or
aad
gs
mov
loop
fs
jle
das
sbb
insb
lock
and
icebp
push
in
lock
fildl
sub
cs
jo
cwtl
popf
and
leave
sti
aad
jae
push
scas
xchg
mov
call
push
mov
cmp
push
lods
mov
adc
popf
dec
in
mov
and
ficoms
fidivrs
mov
and
push
pop
sti
fcmovbe
jecxz
xchg
jne
mov
xchg
dec
in
add
mov
jnp
pop
sub
xor
cmp
adc
icebp
or
stos
xor
ret
fcompl
jne
push
test
adc
mov
pop
pop
dec
fucomp
fstps
fstl
cltd
sarb
loop
mov
popa
loopne
cmp
ljmp
int
cmpsl
fcomps
sub
imulb
or
rolb
test
cwtl
push
sbb
imul
movsb
cmpsb
mov
sbb
jns
test
pop
decl
push
stos
mov
lock
xor
sbb
push
sbb
bound
mov
sbb
pop
iret
push
xchg
add
cmp
sub
mov
jp
push
cmp
push
sbb
ds
mov
rep
jmp
cmp
adc
shrl
test
stc
mov
ljmp
mov
mov
pop
js
fildll
push
add
subl
mov
movsb
xor
inc
push
pop
inc
inc
js
adc
pop
mov
imul
stos
xchg
mov
push
std
ja
xchg
mov
dec
out
mov
push
sbb
sbb
jl
mov
or
adc
xor
jg
pop
rolb
mov
pop
repz
test
ret
in
jl
dec
int
cmp
cmpb
jne
sbb
ret
mov
shlb
movsb
pop
and
sub
pop
sbb
imul
insl
lods
add
mov
xor
ret
imul
mov
cmp
mov
push
in
cmpsl
inc
push
and
jnp
iret
fbstp
and
int
repz
cmp
popa
xchg
lahf
xor
scas
loop
cmp
test
dec
mov
mov
mov
or
mov
mov
xorb
mov
insl
jecxz
ds
icebp
mov
js
aaa
cmp
inc
iret
imul
mov
cmp
sub
sti
or
jo
push
fstps
jae
sbb
dec
xchg
mov
fwait
icebp
mov
test
repz
cmovge
stos
jle
test
push
xchg
pusha
push
pop
push
xchg
pop
mov
dec
leave
repnz
mov
mov
pop
stos
daa
and
cmp
addl
fdivr
jnp
or
xchg
sub
mov
add
and
jbe
dec
movsl
bound
dec
inc
les
add
shrb
xor
inc
mov
movsb
mov
mov
fnstenv
leave
test
or
xchg
or
repz
add
hlt
sbb
fisubs
inc
xor
add
or
in
rorb
cmp
mov
xor
jl
xchg
sbb
pop
cmc
cltd
test
add
icebp
mov
add
jmp
ret
adc
and
insl
adc
dec
pop
jg
jl
pop
adcb
out
pop
mov
dec
jbe
push
insb
lret
sub
dec
into
xchg
dec
into
icebp
cmpsl
fdivp
pop
out
repnz
mov
enter
cmp
push
lret
xchg
lcall
ljmp
aaa
push
popa
fadds
test
scas
aam
inc
mov
rcll
mov
fmul
jg
in
sbb
xor
outsb
sahf
shll
and
pop
int
stos
jl
mov
out
insl
or
inc
lret
jg
and
mov
jnp
sub
mov
add
jo
ss
sub
pop
fcompl
inc
daa
dec
fildl
insb
inc
fsubrp
mov
mov
add
sub
out
dec
jns
loopne
sub
xchg
sub
sbb
cmp
cmp
shll
cmpsl
mov
mov
das
test
and
push
outsl
cli
or
and
push
sub
sbb
ljmp
xchg
pusha
jae
mov
fmuls
scas
mov
jne
iret
push
sti
cmp
scas
enter
push
xchg
nop
mov
mov
mov
jbe
imul
adc
addr16
jb
mov
movb
mov
mov
or
cmpsb
aaa
or
or
aas
and
in
std
mov
hlt
or
test
in
into
sub
punpckldq
mov
leave
lods
enter
dec
jb
add
sbb
popf
fs
inc
jmp
xor
inc
test
stos
int
stos
testb
fxch
sbb
in
fmul
testb
mov
xor
ljmp
into
mov
lcall
movsl
shl
dec
in
test
xchg
jns
insb
out
add
sub
daa
jnp
push
icebp
add
mov
flds
ds
daa
cltd
loop
jno
arpl
imul
sbb
dec
xchg
or
xchg
stos
jle
jae
popa
lcall
insl
repz
cmp
push
aaa
and
sub
or
cmp
jmp
rorl
push
je
fisttpl
notb
and
mov
dec
movsl
sbb
or
mov
imul
pop
idivl
aad
sub
lcall
cs
xlat
leave
add
xor
xchg
or
out
mov
in
mov
pop
xor
cmpsl
popf
daa
xchg
mov
jle
push
insl
out
arpl
mov
cmpsl
repz
dec
inc
cmpsb
inc
shrl
je
aas
dec
xor
mov
mov
xchg
fistl
add
cli
mov
mov
push
popa
mov
fimuls
mov
fldcw
jmp
mov
xchg
xor
mov
lcall
xchg
addr16
mov
xorl
adc
mov
push
loopne
and
ret
fwait
sbb
sbb
cmp
mov
pop
cmp
adc
sarl
cmp
pop
sub
dec
add
xchg
sub
mov
lea
and
mov
or
cmp
push
sub
dec
push
fldt
inc
test
popa
jl
das
pop
xor
int3
xchg
mov
mov
or
jnp
das
sub
cld
in
add
cmp
nop
push
cwtl
pushf
loop
je
fistpll
pusha
movb
or
faddl
jbe
add
mov
push
pop
or
push
cli
test
inc
aam
test
inc
and
jg
mov
bound
iret
movsb
cltd
xor
mov
std
gs
ret
dec
inc
in
test
or
fldt
or
cmpb
pusha
fcmovne
into
sub
out
daa
dec
ds
jbe
xchg
jmp
loopne
and
cmp
arpl
and
push
push
adc
xchg
push
cwtl
mov
push
bound
dec
cld
jbe
and
jb
dec
mov
stos
dec
mov
xchg
pushf
inc
je,pt
movsl
push
jmp
and
scas
int3
imul
add
mov
jge
inc
inc
cmp
insb
or
inc
push
sarb
add
popa
scas
inc
test
into
roll
fdivrs
out
enter
sbbl
mov
mov
add
push
je
jle
es
push
call
loope
dec
sub
mov
sub
jne
test
pusha
in
in
out
sub
jg
jmp
mov
loop
fimuls
adc
cli
push
popf
sub
imul
or
fstps
je
outsb
loope
rcll
data16
scas
dec
add
dec
sbb
jecxz
xor
fcoms
lahf
jle
push
push
cwtl
out
jle
jb
shll
mov
sbb
inc
dec
pop
iret
cmpsl
xor
sbb
in
mov
xlat
icebp
sub
jmp
js
xchg
popf
mov
xor
pop
out
xor
test
adc
mov
adc
pop
orb
cs
loope
popf
xor
ljmp
mov
add
mov
ds
pop
idivl
dec
ror
dec
jns
stos
xor
push
xchg
add
jg
enter
push
sbb
mov
mov
adc
cmp
xchg
sbb
jecxz
mov
loope
outsl
decb
add
aam
dec
cmpb
ja
xor
insl
bound
lret
mov
icebp
adc
push
fstpl
jb
dec
or
xor
rorb
mov
fs
mov
pop
cld
ja
test
fsubs
inc
jb
pushf
jmp
scas
push
pop
test
dec
xlat
fs
int3
nop
mov
cld
sub
add
cmp
xlat
aam
push
fcmovnb
jp,pt
out
ljmp
dec
iret
add
enter
aaa
pushf
mov
repnz
adc
popa
lret
push
cmc
jb
xor
fcompl
dec
ffreep
and
mov
pop
pushf
pop
push
push
or
ret
das
pop
or
out
push
cltd
cmp
pop
fdivr
ljmp
push
imul
sub
inc
xor
mov
addb
sub
adc
sbb
insb
xchg
xor
inc
imul
cmp
xor
and
mov
and
enter
add
push
mov
jle
xchg
push
jle
pop
and
cli
push
mov
mov
mov
cmp
xor
dec
popf
int3
inc
adc
ljmp
in
fwait
sbb
inc
adc
popf
test
je
cmp
lret
or
jge
cmp
fisttps
repnz
sub
pushf
cmp
addr16
js
das
sbb
adc
sbb
mov
lret
fsubrl
push
ret
mov
mov
stos
jne
call
aaa
andl
shll
pop
mov
push
or
jle
popa
sub
jns
fnstenv
inc
mov
push
cmpsl
pop
mov
pop
sub
sbb
test
lds
nop
or
jmp
inc
ret
test
lret
cmp
xor
jne
clc
adc
dec
inc
pushw
mov
and
outsl
pushf
test
adc
dec
xor
xchg
aam
jns
test
enter
xchg
add
sarb
mov
ret
cld
pop
mov
jbe
ficoml
nop
pop
inc
xchg
push
push
mov
add
mov
jnp
mov
and
add
iret
fisubrs
sbb
jae
mov
call
jnp
ret
mov
enter
pop
push
cld
pop
fcmovnb
xor
test
test
lods
push
add
loop
pop
or
or
js
orb
in
imul
popl
lds
add
clc
xchg
jbe
mov
hlt
cmpsl
mov
sub
daa
or
cmp
icebp
lods
mov
orb
mov
and
ret
add
fldcw
mov
and
xchg
pop
mov
fs
cmpsl
mov
shlb
xchg
imul
cmpsl
mov
jne
rcr
fidivrl
andl
cmc
mov
outsb
sbb
inc
ljmp
scas
push
dec
adc
lret
sub
mov
mov
dec
ret
movsl
dec
mov
adc
sbb
les
push
mov
das
pop
mov
xor
add
pusha
xor
out
int3
add
dec
scas
adc
push
les
dec
mov
ljmp
ljmp
lret
mov
sub
xor
xor
cmp
rcll
add
std
rcrb
stos
xchg
cltd
cmp
mov
adc
hlt
adc
xchg
arpl
adc
cli
push
cmp
mov
sub
pop
xor
shr
push
sti
xchg
cmp
dec
scas
mov
xchg
mov
inc
sbb
sbb
sbb
pop
mov
subl
das
adc
xor
pushf
xlat
mov
out
pop
inc
cld
xchg
xor
pop
std
pop
into
dec
jb
jae
movsb
ss
mov
push
ss
dec
in
pop
sbb
jo
sub
fdivs
jg
lcall
inc
mov
add
incb
adc
dec
shr
les
xchg
fdivr
jg
add
pop
adc
addl
jb
xor
in
out
sbb
int
stos
pop
aaa
and
test
mov
adc
loopne
xchg
loopne
in
sbb
adc
ret
cmp
imul
aad
jno
adc
or
cmp
cmp
sti
in
inc
sub
push
and
and
mov
ljmp
icebp
xlat
popf
mov
xchg
mov
test
fs
add
aas
or
test
push
call
outsb
imul
repz
pushf
or
gs
cmp
fucomip
sbb
pop
add
inc
fidivrs
lods
xchg
cwtl
mov
fldlg2
sbb
movsl
lret
lds
fdivl
mov
xchg
orl
push
mov
dec
pop
mov
es
in
push
mov
mov
insl
fwait
cs
cmp
enter
je
mov
or
lret
add
fstps
jl
add
pop
mov
push
insb
insb
movsl
adc
dec
ret
pusha
xor
std
or
pop
out
mov
sahf
and
fsincos
out
repz
out
or
push
sub
dec
imul
imul
dec
icebp
lods
sbb
pop
ss
mov
mov
mov
push
andb
sahf
jl
add
daa
jnp
lcall
mov
leave
sbb
mov
js
xchg
push
out
shl
in
push
or
add
rol
scas
shrl
cmpsb
sbb
mov
dec
into
cmp
inc
arpl
pop
hlt
movsb
roll
cmp
cltd
mov
data16
iret
or
lods
test
test
dec
fcomps
fdivrl
lods
adc
jbe
imul
fists
adc
loope
sbbl
mov
callw
test
int
xor
and
push
inc
mov
sub
aad
or
movsb
pop
cli
xchg
inc
sbb
aas
int3
adc
mov
popa
push
stc
je
pushf
adc
jae
mov
lret
pop
int
sahf
test
mov
xchg
inc
stos
test
jno
fldlg2
idivb
movsl
pop
push
mov
loope
and
jg
and
repnz
xchg
mov
mov
mov
inc
mov
mov
cwtl
xor
adc
cmp
mov
imul
repnz
pusha
jmp
inc
repz
mov
xor
and
and
dec
sub
iret
mov
cmp
aaa
aad
adc
sbb
data16
test
mov
cmc
sub
cmp
out
rorl
inc
out
xchg
push
inc
daa
dec
add
xchg
xchg
movb
cmpsb
scas
add
pop
push
dec
cmpsl
jno,pn
mov
loopne
sbb
jmp
rcr
mov
test
mov
add
pop
movb
and
jbe
rcll
push
sub
movsb
add
and
icebp
sbb
cld
push
insb
imul
dec
xchg
in
lret
test
xchg
lcall
lea
fildl
mov
imul
push
inc
ds
cmpsb
ss
mov
mov
jo
mov
shrl
icebp
call
std
js
xor
sbb
int
data16
cltd
stos
inc
mov
loope
xchg
dec
mov
inc
ret
and
out
imul
aaa
push
mov
cltd
jb
rolb
mov
push
orb
test
mov
lret
inc
cmp
loopne
adc
aaa
lods
lods
ss
adc
jl
pop
loopne
mov
dec
in
lahf
push
pop
sub
lock
lret
sub
movsb
inc
fs
sahf
mov
push
mov
cmp
jmp
cld
xor
aad
in
pop
add
rclb
addl
into
movsl
mov
push
int3
lcall
icebp
lret
outsb
inc
enter
cmp
mov
jmp
xor
xor
sahf
insb
cmp
inc
mov
jbe
aam
stos
inc
pop
test
call
shrb
std
shlb
mov
sti
lds
xchg
inc
enter
sub
dec
shll
dec
xor
or
xchg
scas
sub
xchg
inc
adc
sahf
scas
sub
aad
andb
mov
sub
cmp
or
mull
adc
out
aad
jmp
jns
jmp
dec
push
test
and
xchg
repz
addr16
lret
push
sbbl
ds
int3
mov
subb
cld
sub
lods
test
scas
movsl
or
push
lods
inc
cltd
pop
lcall
das
popa
rorl
adc
adc
inc
jp
fiaddl
mov
inc
dec
lods
test
xchg
jg
cmc
out
fsubl
mov
pop
sbb
inc
xchg
out
in
mov
int3
or
in
rcl
ficompl
mov
icebp
fistps
repnz
test
lock
xchg
jecxz
push
adc
pop
dec
jno
xchg
push
or
sti
jp
inc
push
dec
push
dec
mov
fldt
cltd
push
in
mov
jb
cmc
lcall
cmp
imul
mov
subb
inc
rcll
xchg
ret
fwait
add
idivb
pop
mov
jae
or
loopne
idivb
xchg
rorl
insl
sbb
push
adc
pop
aaa
jno
mov
cmc
cmc
roll
out
xor
mov
loop
xchg
test
xlat
push
sbb
add
cwtl
divb
and
ja
test
mov
cli
mov
mov
xchg
lods
sub
push
xor
bswap
popf
fbld
sbb
lods
imul
mov
cmpsb
xor
test
cltd
jg
pop
lret
data16
stos
cmp
xchg
outsl
negl
out
xor
add
mov
jmp
cltd
movsl
push
xor
adcb
jne
xchg
mov
push
push
jge
loope
loope
shrb
sbbb
mov
icebp
dec
sahf
dec
cli
roll
rorb
insl
adc
repnz
mov
fcom
add
lret
push
push
pop
test
popa
xchg
stos
mov
and
movb
rorb
loop
sub
daa
ficoms
movsb
es
imul
inc
rorl
lock
int
pop
push
add
push
lahf
mov
ljmp
cmp
inc
je
mov
into
sbb
enter
cwtl
xor
inc
sbb
flds
jne
mov
ds
jnp
lahf
sub
lds
lods
std
test
xor
lcall
stos
adc
xlat
lcall
test
outsl
out
cmp
cmp
lahf
movsb
or
dec
bound
add
mov
js
das
pushf
ret
push
idivl
pop
pop
and
adc
test
outsl
gs
movb
fcmovnu
sahf
pop
push
insl
das
dec
xchg
push
inc
lea
call
lods
fistl
test
lods
cld
cltd
subl
add
lcall
inc
and
sbb
adc
sarb
xchg
ds
imul
movsb
jbe
mov
jp
scas
add
insb
ss
sbb
mov
mov
inc
cmp
jne
pop
inc
sbb
add
cmpsl
add
cvtps2pi
popa
cmp
lods
jmp
cmp
jae
das
cmp
push
or
sub
ret
push
outsb
or
pop
cmpsb
add
cmpsb
jmp
add
mov
jmp
sbb
shlb
or
nop
addl
push
fstpl
lock
jae
adcl
cmp
xlat
add
inc
cmp
daa
cmp
pop
pop
ja
mov
stos
cmp
jae
pop
in
add
idivb
stos
fldl2e
push
rcll
dec
repnz
dec
sti
jecxz
js
in
or
xlat
cld
test
imul
nop
or
ljmp
xor
pop
ljmp
addl
in
lcall
sub
enter
mov
mov
shlb
nop
push
stc
sub
adc
add
xchg
mov
xchg
es
or
add
add
movsl
pop
sbb
icebp
jno
dec
xchg
shr
in
bnd
xor
mov
or
sahf
mov
loopne
mov
subl
les
add
ficomps
sti
cmpsl
push
lcall
imul
pop
sbb
push
stc
mov
cwtl
pop
popf
sbb
xor
daa
clc
cmpl
aad
mov
lret
xchg
mov
xchg
imul
ja
sbb
fwait
adcl
or
imul
sbb
pop
mov
fldl
in
fildll
xchg
int3
pop
jp,pt
sbb
lds
cmpsb
sub
movsb
subb
test
lods
sbb
dec
jne
jmp
adc
xchg
push
mov
cmp
add
mov
mov
add
dec
fcoms
jo
jg
mov
push
xor
iret
out
movsb
call
ss
repz
popl
aad
insl
cmpsb
dec
sbb
shlb
je
mov
jge
scas
vpmullw
test
xchg
pop
lcall
scas
mov
andl
test
add
in
pushf
in
sti
jecxz
inc
add
mov
dec
add
mov
sbb
cld
xor
mov
mov
mov
fadds
outsl
and
inc
jbe
xorb
inc
mov
je
jp
mov
mov
inc
mov
inc
xchg
mov
je
inc
mov
lahf
jne
pop
or
dec
jecxz
divb
scas
cmpsl
cmp
scas
dec
adc
cmp
mov
xor
mov
shll
xchg
mov
and
lcall
dec
lcall
sbb
sti
rcl
lret
pop
cmp
lcall
addr16
adc
jns
sbb
xor
inc
cmp
xor
call
arpl
pop
enter
pop
ss
mov
vrcpps
enter
adc
mov
jmp
push
fisttpl
aam
in
lahf
sbbb
out
mov
or
pop
inc
mov
mov
adc
iret
cld
push
popl
lret
and
aaa
outsl
mov
cmp
iret
sti
lods
aam
fisttpll
loope
push
or
pop
dec
les
sub
cmpsl
movsl
arpl
push
cs
cmp
test
lods
pop
dec
and
sar
pop
xchg
xchg
pop
and
icebp
add
lock
sbb
add
loope
and
add
push
mov
int3
es
lock
sbb
ljmp
mov
movsb
xor
je
and
mov
js
sbb
lods
sbb
sbb
and
dec
inc
push
dec
jnp
mov
cmpl
sbb
xchg
sarl
push
inc
cmp
sar
int
fmulp
cmp
jae
mov
mov
pop
roll
bound
add
das
or
idivl
sub
inc
add
cmc
or
nop
out
mov
mov
sub
in
push
and
mov
int
inc
in
sub
push
call
jg
daa
ret
popf
and
sub
jl
cmp
cli
adc
test
cwtl
add
ss
sub
mov
out
push
sbb
mov
jp
fisttps
adc
shll
or
inc
dec
out
or
cmp
adc
sub
sub
jg
inc
bound
out
fnsave
sbb
loope
xor
arpl
sub
inc
pop
cmp
or
and
or
dec
dec
or
jge
cmpsb
std
or
adc
push
rclb
ss
jl
popa
xor
jbe
lret
fs
jmp
fstp
push
xchg
outsb
and
push
xchg
push
into
incb
bound
popf
adc
aam
sahf
and
js
faddl
cmp
nop
lock
repz
cld
ja
jp
add
lret
add
push
and
bound
test
mov
adc
jns
cmpl
xor
dec
adc
fiaddl
hlt
mov
adc
xchg
jg
cltd
push
mov
cwtl
stos
ss
push
jecxz
xchg
loope
push
sub
fnstsw
xlat
mov
psllw
jbe
jge
xor
repz
ja
rorb
notb
negl
ds
mov
mov
xchg
xor
pop
pop
mov
bound
mov
push
imul
loop
lods
gs
stos
scas
xor
cmp
sahf
mov
ss
mov
or
dec
cltd
test
subb
jne
xor
or
sbb
jns
cmc
sbb
adc
mov
int
jl
gs
mov
sbb
jbe
adc
jle
les
aas
mov
cmp
cmpsl
and
mov
loop
adc
in
pop
mov
push
loope
and
movsl
add
adc
add
xchg
push
aaa
mov
inc
adc
mov
popa
rcrb
addr16
pop
and
bnd
es
mov
insl
jle
cmp
adc
adc
cwtl
lods
lret
push
fwait
inc
subl
sbb
xchg
fsts
es
in
popa
bound
xlat
and
pop
push
add
pop
mov
push
xchg
lret
push
int
outsb
push
dec
test
jecxz
jle
jne
in
sarb
mov
or
aas
ds
jne
cmpsl
adcb
fs
push
sub
andl
jg
push
test
xlat
data16
pop
in
sarb
pusha
add
loope
and
shlb
shrb
or
add
pusha
fcom
dec
push
inc
pop
cmpsl
xchg
mov
hlt
or
loop
insb
xchg
pop
jne,pn
fsubs
push
push
sarl
xor
jnp
popf
stc
cmc
add
mov
out
rorb
mov
test
push
test
pushf
ret
sub
ja
sbb
sti
xchg
add
push
enter
ds
subl
mov
adc
loop
dec
adc
outsl
and
jnp
xchg
jbe
mov
xchg
scas
jmp
and
nop
test
fsts
jecxz
xchg
mov
pusha
outsl
push
sub
dec
fsubl
cld
sti
pop
ds
mov
and
pop
rolb
add
push
xchg
aad
adc
and
in
loope
jp
xor
pop
mov
inc
ja
xchg
aam
into
lret
pop
pop
pusha
xchg
and
cmp
outsb
outsb
movsl
mov
sbb
cwtl
in
pusha
xchg
push
jnp
push
adc
addr16
jno
jbe
loopne
mov
rcrb
movsb
xor
pop
mov
out
outsl
pop
int
fucomip
push
pop
mov
aaa
into
jle
sub
scas
mov
xorb
test
stos
adc
test
pop
addb
cmp
imul
lret
pusha
bound
push
push
adc
pop
jl
iret
leave
testb
or
test
pop
cmpsb
mov
cmp
or
jns
aad
stc
aaa
movsb
gs
sbb
xchg
aad
mov
pushf
mov
dec
sti
call
out
mov
dec
dec
jne
pop
jle
test
ljmp
xchg
fwait
jmp
movsb
scas
mov
lods
and
dec
repnz
mov
gs
outsl
sub
ds
aam
call
xchg
lret
xchg
int3
outsb
fldenv
add
mov
insl
sub
xor
rol
sbb
mov
mov
mov
inc
aas
daa
std
fdivrs
mov
and
popf
ja
adc
mov
andb
dec
and
pusha
mov
rcrb
stos
int3
push
sub
cmpsb
jns
int
sbb
scas
out
and
rcr
psubusw
pusha
sahf
push
pop
mov
jno
cmp
adcb
mov
and
sub
sbb
icebp
xor
push
shl
push
cmp
out
out
fidivrl
jb
sub
in
lret
pusha
mov
and
inc
aad
cmc
fdivl
out
stc
or
cmp
inc
nop
push
fs
ds
je
outsl
test
push
out
lcall
fwait
mov
shrl
mov
push
sti
push
sub
cltd
les
xchg
lods
aam
popf
dec
loop
test
stc
repnz
xchg
xchg
dec
movl
or
lret
rolb
xchg
addr16
xor
cwtl
and
jp
aas
sti
mov
lock
aas
adc
jmp
lds
jns
xchg
dec
jo
lahf
push
pop
or
roll
insb
jecxz
aam
pop
mov
sbb
enter
in
or
sub
push
mov
ja
lods
lret
dec
xchg
push
pop
adc
xor
daa
in
pop
xchg
lea
js
add
inc
int
out
mov
jmp
add
dec
add
xor
jp
lahf
or
leave
dec
mov
add
inc
lds
and
int
push
call
cmp
sub
shrl
push
cmp
rolb
fadd
or
ftst
rorb
pop
pop
push
push
out
es
mov
pop
xchg
pop
jae
or
cli
inc
test
inc
imul
cmp
adc
scas
cmc
adc
and
sub
repnz
sahf
inc
xchg
inc
jae
mov
mov
pop
sbb
call
mov
ss
iret
mov
loop
test
enter
mov
push
jg
or
popf
outsb
pop
cli
push
xchg
dec
cltd
mov
xchg
dec
mov
push
cmp
arpl
pop
mov
int
xchg
daa
repz
fsubr
jne
sbbl
gs
fildl
out
les
inc
mov
push
es
shl
lock
pop
leave
fldl
dec
movsl
inc
jmp
pop
testb
leave
xorb
in
jno
mov
push
pop
sub
jp
fnstsw
cmp
sub
daa
lods
stos
cltd
ja
jge
movsb
movsl
xlat
shlb
mov
pop
push
push
mov
xor
jmp
dec
ja
loopne
out
cli
in
sub
pop
or
jge
cmp
popa
cli
ret
pop
or
bound
dec
loope
test
les
or
cmp
xchg
xchg
xor
test
mov
loope
adc
adc
mov
into
mov
mov
imul
aad
cmp
cmp
pusha
test
add
insb
jo
push
jecxz
inc
pop
lret
outsb
test
mov
push
aad
imul
movb
adc
xor
mov
jno
imul
sbb
shlb
pop
pop
mov
jo
adcb
mov
jp
mov
sti
add
outsb
and
movsb
mov
sub
and
jge
into
scas
pop
jno
test
cmp
add
cwtl
inc
leave
out
mov
addb
push
das
aaa
lret
xchg
jnp
push
insl
int
pop
inc
push
repnz
shrl
or
sbb
mov
stos
pop
fmuls
add
lcall
push
in
dec
dec
in
sbb
pop
cmp
mov
sahf
sbb
jae
cmp
dec
mov
adc
roll
jnp
jecxz
xor
adc
push
inc
pusha
adc
pop
setnp
push
push
cmp
inc
addr16
or
jnp
mov
fninit
xor
xor
mov
les
gs
pop
mov
aas
jle
ss
sub
cmp
adc
cmp
lods
lock
cmpsl
lret
and
mov
les
adc
pop
inc
idivb
out
outsb
sub
jp
lcall
mov
mov
sbb
xchg
xchg
mov
dec
xchg
dec
push
mov
fs
dec
les
movsb
lret
mov
inc
and
dec
cltd
into
fnop
pop
jmp
and
inc
jecxz
stos
adc
adc
dec
movsl
in
push
jno
daa
iret
push
aaa
test
pop
mov
xor
cmp
mov
xchg
pop
jmp
nop
sbb
fdivrl
cwtl
out
xchg
aam
lahf
loop
shrl
std
sarl
lcall
sub
mov
movsb
push
push
pop
pop
xchg
into
rcr
jle
pop
dec
cmp
cmc
jle
jb
int
daa
test
sub
popa
push
sub
adc
pop
cmp
sub
cmpsl
repnz
mov
shl
pop
mov
jl
mov
test
pop
popa
addr16
adc
imul
mov
sub
inc
shrb
xchg
xchg
push
mov
sbb
insl
xor
into
cmp
dec
mov
xlat
mov
lahf
ljmp
int3
xor
jbe
push
sbb
inc
fiaddl
mov
das
xor
in
push
cmp
scas
sub
xor
add
fnop
or
adc
icebp
les
je
cmp
in
popf
ret
andl
push
xor
mov
add
mov
cmpsl
adc
test
aas
mulb
dec
pop
shlb
xor
mov
cli
pop
dec
xor
shrb
ficompl
mov
enter
adc
or
and
test
int3
mov
and
mov
aaa
leave
ret
out
ja
es
hlt
sbb
ud2
jb
cmc
lods
cmpsl
call
das
lahf
into
addb
int3
rorb
jae
mov
sbb
jne
jb
xchg
mov
lret
mov
mov
call
insb
mov
and
xor
mov
pusha
in
lea
sbb
and
xchg
or
loope
sub
sub
mov
cmp
dec
push
sbb
cmp
pop
pop
loopne
mov
xchg
add
jmp
stc
adc
fcoms
rcl
mov
roll
ss
sbb
in
pop
mov
out
in
shll
mov
sub
jbe
ficompl
out
xor
mov
jne
xor
cltd
adc
icebp
add
dec
sub
or
icebp
gs
int
hlt
fnstsw
sbb
popa
bound
jp
push
movsb
jp
sub
aam
dec
clc
xor
rcrb
sbbl
xchg
aad
jns
lods
mov
pop
outsl
enter
notl
mov
shl
xchg
sbb
in
push
or
add
ja
loopne,pt
jg
test
ljmp
fmulp
in
fucomip
pop
sbb
outsb
cmp
loopne
testb
or
dec
nop
push
mov
fdivs
sbb
aam
rcll
push
push
out
dec
imul
inc
mov
cwtl
jo
mov
mov
popf
mov
xchg
and
fwait
cld
jmp
pop
insl
inc
xor
push
jb
and
and
adcb
inc
or
sbb
lods
cld
jmp
aad
mov
mov
adc
and
xor
add
jmp
xlat
inc
stos
jecxz
mov
sti
push
outsl
push
cmpsl
push
sub
sub
cmp
fdivrs
lret
or
jp
aad
lock
sub
lcall
outsb
and
and
aas
imul
add
xchg
cmp
or
mov
lock
fadd
fstpl
das
pop
stos
mov
out
jg
jo
xchg
loopne
sbb
inc
stc
pushf
fistl
or
inc
aaa
loop
pusha
iret
and
fisubs
jno
cmpsl
rcll
and
rcl
xor
and
rorl
push
cmp
xchg
ss
cmpsl
mov
xor
cmp
add
pop
xor
inc
lock
sbb
sbb
cmp
sbb
xor
sbb
lea
xlat
cli
add
inc
scas
dec
addr16
mov
jb
bound
dec
ret
arpl
scas
cltd
cmp
inc
lods
sbb
adc
sub
xor
icebp
push
mov
fldt
and
mov
inc
sbb
cmp
pop
sahf
nop
add
fwait
and
int
iret
add
xchg
pop
push
pop
mov
fildl
leave
cmp
jae
push
xchg
inc
xor
push
or
mov
adc
or
push
xlat
jns
repz
in
push
insb
xchg
xor
jbe
aad
dec
mov
xchg
lcall
fsubl
cmp
xchg
out
add
repnz
daa
int
mov
add
sbb
lcall
and
jle
clc
ret
sub
ret
push
aad
lahf
mov
and
std
cmp
sub
fisubs
out
daa
cmp
add
shl
std
pop
inc
push
call
mov
fiadds
pop
mov
or
adc
loop
clc
add
movl
jmp
into
dec
daa
xchg
insl
xor
jg
push
pusha
pusha
mov
flds
mov
inc
jle
cmp
stos
mov
xor
ficompl
insb
mov
or
and
cmp
sub
arpl
push
cmp
cld
mov
pop
inc
mov
notl
insb
in
jns
mov
stos
and
sbb
pop
push
nop
push
cwtl
xchg
mov
xchg
fdivrs
or
cli
loopne
mov
sbb
cmp
xchg
das
add
fdivr
jmp
pusha
push
iret
push
lods
xor
and
loopne
adcl
sub
jo
cmp
xchg
push
pop
cmp
jns
dec
or
lcall
adc
sbb
mov
xchg
inc
scas
jmp
push
addr16
mov
jae
xchg
xchg
pushf
cmpsb
fbstp
data16
xchg
and
cmp
std
mov
push
and
fadds
jae
push
sbb
push
in
jae
loop
xchg
mov
std
or
cs
add
and
ss
test
push
adc
xchg
aad
jmp
or
in
inc
int3
jmp
inc
add
sub
jp
andl
ret
adc
mov
mov
leave
and
inc
lret
mov
lock
pop
jne
inc
test
popa
fs
idivl
fmuls
sbb
mov
cltd
inc
loopne
lock
xchg
ljmp
cwtl
push
es
add
sti
repnz
ret
sarl
cltd
push
in
stos
sbb
mov
xor
cmp
or
popf
ds
push
gs
mov
clc
stos
adc
mov
mov
loopne
into
add
inc
notl
sub
sbb
pop
xchg
sub
ficoms
inc
std
daa
lret
je
jno
out
ljmp
inc
xchg
stos
push
jne
call
mov
cli
jo
sub
add
jne
call
jmp
jg
xchg
or
sti
pushf
add
push
in
jge
popf
fnstsw
xchg
or
lcall
je
ffree
and
js
pop
iret
dec
in
iret
punpcklbw
mov
inc
test
push
dec
or
fisubrl
and
xchg
push
push
shlb
or
sbb
pop
aaa
xchg
push
scas
popf
fnstcw
cmp
or
xchg
cmp
iret
mov
imul
add
sbbl
inc
push
aas
push
fisubl
jge
call
jbe
pop
into
fisttpll
rol
addr16
mov
testl
fs
aad
rolb
sahf
cmp
fcoml
pop
test
aam
and
ret
addb
mov
imull
mov
call
les
ds
and
add
or
imul
clc
jne
cld
pop
dec
dec
enter
jle
xchg
and
mov
dec
push
out
mov
mov
ret
je
ja
mov
mov
shrl
inc
push
xchg
or
cmc
inc
pop
ret
dec
pop
ret
aam
orl
or
push
pushf
jle
es
add
aaa
mov
aas
repnz
int
and
call
sti
xor
fbstp
or
push
rclb
dec
jmp
mov
fnstenv
pop
dec
call
dec
shrb
adc
enter
jno,pn
fwait
scas
ss
sbb
or
test
jb
imul
in
cmp
movsb
jp
mov
loopne,pt
xchg
pop
negb
cmpsb
call
pop
push
mov
add
pop
loopne
cli
sub
sahf
rorb
mov
xchg
rcll
fwait
pop
sub
les
dec
sub
psubusw
adc
push
push
add
add
pop
add
pushf
cwtl
fdivrl
addl
cmp
aaa
out
cld
mov
fisubrs
test
insb
and
fdivs
and
sar
inc
or
adc
xchg
mov
mov
jo
daa
jl
cmp
loop
dec
std
xchg
mov
sub
pop
fcmovu
mov
test
out
imul
pop
aaa
sbb
in
push
xchg
jle
add
aaa
add
les
push
es
inc
jmp
sub
fsts
xchg
test
out
mov
sbb
pop
push
inc
inc
inc
push
scas
scas
cmp
xor
xor
sahf
out
scas
sahf
lock
iret
popa
int
insl
in
inc
add
xchg
iret
and
push
les
dec
in
jmp
xlat
lahf
xchg
push
enter
nop
sbb
std
pop
pop
out
jo
fiaddl
loope
jmp
bnd
sbb
jl
enter
mov
movsb
ficomps
shl
mov
xor
std
inc
cwtl
jle
shrl
out
sahf
dec
mov
lea
jecxz
adc
jmp
cwtl
lds
test
inc
mov
out
fstl
dec
sbb
mov
test
inc
jle
int
jb
loope
mov
add
std
cmp
mov
sarb
lods
or
push
std
leave
popf
imul
and
xchg
push
clc
into
or
cmp
cmpsl
les
and
sub
jb
lock
push
pop
and
or
pop
daa
xchg
and
and
mov
out
cmp
add
pop
int
xchg
add
inc
lcall
adc
iret
xchg
dec
xchg
mov
mov
push
sub
test
cltd
sti
add
add
in
pandn
cs
and
cli
sbb
shr
fsubl
cld
int
mov
inc
out
into
mov
mov
jnp
mov
lods
cmp
out
jns
add
mov
clc
sbb
lahf
cmp
xchg
lret
fstpl
cli
ljmp
bound
jnp
cmp
pop
inc
lock
mov
xchg
lea
push
mov
jg
xchg
jnp
xchg
sbb
mov
iret
sarl
or
fstp
dec
popf
loope
cmp
push
pop
cli
mov
pushf
push
movsb
jae
mov
fpatan
int
pushf
out
add
je
mov
push
dec
sub
in
jle
loope
test
out
xor
xchg
pop
xchg
lods
jno
cmp
nop
stos
dec
pop
out
decb
sub
jp
fcmovne
xchg
push
pop
push
jbe
rorl
xchg
xchg
jmp
sub
imull
ss
repnz
pushf
aam
mov
call
bound
das
mov
mov
lds
adc
fstps
dec
sar
adc
cli
rolb
inc
cmc
dec
jo
cmp
mov
fnstsw
push
push
sahf
or
pop
shlb
enter
push
cmc
mov
sub
psubsw
ret
mov
out
push
xor
enter
mov
int
nop
push
arpl
pop
pop
jp
mov
push
loop
and
xor
pop
mov
mov
mov
push
es
jns
jecxz
adc
mov
mov
dec
mov
iret
mov
mov
mov
push
jne
sbb
sbb
arpl
in
add
jg
shrl
repz
mov
dec
cmpsb
xchg
insl
jmp
jp
movsb
sbb
sbb
test
mov
or
jae
push
mov
fidivl
cmp
push
adc
pop
jno
scas
bound
cmpsb
mov
lods
cmpsl
push
clc
test
test
jg
mov
ljmp
sub
jg
mov
popa
and
add
or
cmp
lds
inc
sbb
jne
fs
sbb
popa
es
mov
int
add
mov
aaa
stc
adc
scas
jecxz
adc
mov
push
leave
icebp
mov
cmp
pop
jmp
ret
cmp
adc
mov
notb
sbb
xchg
sub
into
or
cld
aad
out
das
mov
shlb
and
mov
shll
sub
mov
pop
sub
adc
outsl
or
xor
pop
jns
testl
hlt
ljmp
push
and
mov
pop
lods
sub
xchg
icebp
stos
adc
mov
outsl
sti
ds
inc
aam
lcall
or
loopne
out
push
jae
aaa
xchg
xor
cmp
filds
xor
mov
in
mov
popa
push
imul
jo
jo
xchg
push
dec
sarl
scas
je
xor
inc
ret
cmc
cmpsb
rclb
jp
out
inc
aaa
adc
xor
dec
insb
pop
jge
adc
mov
addr16
push
inc
cmpsl
mov
sub
push
rolb
cltd
mov
mov
sti
pop
mov
loopne
jns
sub
stc
and
sbb
cmpsb
lcall
out
push
rclb
test
xor
inc
mov
cmp
mov
dec
je
xchg
ja
movsl
or
iret
repz
lds
jl
nop
pusha
mov
jne
les
lods
int
jg
fmulp
push
adc
jg
pop
out
lea
ret
mov
fnstsw
mov
out
lea
add
popf
out
dec
cs
mov
int3
divps
sti
pop
or
dec
push
push
popf
dec
xchg
cmp
in
jl
pop
cmpsl
lds
jmp
les
push
sbb
adc
xchg
repnz
leave
xor
mull
hlt
in
sbb
pop
xchg
dec
bound
std
mov
pushf
clc
xchg
ja
mov
mov
ret
data16
jae
jmp
imul
xchg
pop
sbb
je
add
pop
daa
out
dec
mov
outsb
test
in
fwait
arpl
outsb
jbe
xchg
xor
cmpsb
lret
adc
adc
sub
mov
scas
push
cmp
inc
sahf
loopne
js
ret
or
aas
arpl
stc
xlat
icebp
pop
aad
or
and
imul
cmp
loop
test
lds
gs
lret
push
xchg
cmc
push
cmc
xor
stc
sti
inc
imul
and
test
fmuls
stos
and
daa
adc
mov
insl
push
sub
xchg
cmpsl
inc
mov
movsl
mov
mov
clc
test
cmc
fisttpll
jno
mov
mov
and
fimull
iret
repnz
jo
sub
mov
adcb
shrb
fsubs
inc
mov
int3
or
inc
sbb
daa
lods
addr16
jp
shr
cmc
outsl
ss
inc
inc
cmp
add
mov
sub
mov
jne
lcall
js
xor
in
sbb
fwait
mov
testb
and
push
dec
ljmp
fiaddl
dec
call
cmpsb
dec
add
fidivrl
dec
into
jae
bound
jmp
jb
sub
mov
pop
jno
repnz
jl
shll
inc
ds
mov
repz
sarb
jae
popf
nop
jae
push
ja
ret
test
iret
les
xchg
rorb
push
cs
test
mov
aad
xchg
push
inc
xchg
popf
cltd
mov
cli
or
mov
out
flds
mov
xor
inc
and
fsubs
xor
aam
ret
lods
int
sub
mov
push
inc
shlb
and
in
pop
stc
mov
push
jo
push
cmp
sarb
sahf
popa
inc
push
or
les
dec
in
stc
push
repz
mov
scas
daa
mov
or
outsl
call
rclb
mov
add
mov
add
adc
cmpb
push
movl
scas
addl
inc
ror
inc
pop
cmp
stos
cli
add
push
and
cltd
inc
sub
movzwl
adc
adc
inc
data16
sub
movsb
repz
clc
lock
lret
sti
mov
or
in
push
test
cmp
test
repz
mov
jge
mov
mov
fcompl
aad
out
xlat
jns
sub
sbb
pop
cmp
insl
mov
enter
ja
ss
add
lods
and
dec
dec
jecxz
xchg
rcrb
hlt
cwtl
mov
pushf
sub
jmp
ds
xchg
shr
inc
mov
jge
mov
frstor
or
mov
xchg
inc
pop
je
mov
xchg
mov
movsl
loop
cwtl
ljmp
pop
fldl
outsb
int3
and
dec
outsb
mov
jnp
dec
mov
pop
mov
es
daa
mov
cmc
xor
cmpsb
gs
lock
inc
xchg
outsl
lahf
add
xchg
shll
and
out
rol
sbb
xchg
js
or
cwtl
arpl
adc
pop
shll
pop
rorb
xor
insb
cltd
sbb
scas
dec
fsubl
leave
jp
mov
sbb
xor
fidivl
dec
lcall
pop
lock
pop
ljmp
pop
dec
mov
push
dec
push
lock
aam
imul
inc
out
xchg
mov
ret
pop
lret
and
xchg
inc
pop
mov
xor
adc
daa
add
push
mov
or
push
sbb
mov
dec
pop
dec
das
sub
hlt
test
mov
cltd
push
in
mov
fs
mov
cmpsl
outsl
test
adc
lods
out
push
pop
aam
in
or
mov
pop
mov
inc
addb
xor
push
push
cmp
jns
cld
movsb
ret
push
cmp
pop
int
add
fisttpl
repz
lods
mov
mov
adc
pop
outsb
int3
or
ss
xchg
sti
or
pop
pop
mov
dec
rep
mov
pop
ds
adc
adc
lret
roll
fwait
std
lds
icebp
adc
xchg
js
loopne
icebp
mov
iret
pop
cmc
mov
nop
pushf
mov
bound
sti
dec
or
shll
rcrl
push
mov
add
add
lcall
lds
mov
dec
jne
lcall
cmpsb
push
or
fistpll
inc
dec
div
pop
leave
jg
xchg
lcall
jne
int3
std
in
int
sar
ljmp
insb
imul
gs
xchg
out
xchg
add
pop
das
dec
lahf
jp
or
in
out
or
cli
mov
mov
out
jo
dec
mov
iret
push
arpl
xchg
sub
sub
outsl
enter
adc
jb
sbb
loopne
add
jne
outsl
adc
ss
mov
rcll
fiadds
xchg
out
sbb
loop
call
bound
and
add
out
fistpl
sub
mov
push
fs
in
cmpsl
sub
xlat
pop
adc
ret
mov
insl
jns
repz
lds
push
and
aam
jp
clc
sti
in
mov
cld
jecxz
lret
leave
call
add
insb
adc
mov
pop
repz
adc
notl
push
xor
pop
sbb
or
pushf
pop
out
rcrl
inc
rorb
addl
cmc
out
fnstsw
rorb
sub
pop
mov
mov
jne
add
jmp
mov
dec
and
fs
pop
insl
arpl
gs
out
or
dec
or
pop
dec
ds
push
xchg
xor
int3
daa
xchg
jno
xchg
nop
push
mov
jl
xchg
push
push
mov
push
dec
gs
dec
jmp
mov
loope
shll
aad
sub
pop
or
insb
icebp
pop
ja
cmp
rcr
and
add
mov
mov
mov
and
aad
xor
dec
push
lock
je
cmpsl
mov
test
lret
lret
in
add
jmp
repz
lcall
into
stos
pop
adc
outsl
inc
aam
add
mov
nop
jbe
xor
adc
inc
negb
mov
xchg
pop
mov
xor
pop
nop
pop
sub
and
outsl
cmp
or
xchg
inc
icebp
stos
ja
andl
cmp
or
dec
fidivl
iret
sub
lret
or
mov
loop
sbb
in
ret
out
jns
enter
and
mov
out
aam
movsb
pop
bound
pop
cmp
pop
rorl
mov
pop
dec
xchg
es
cmc
lds
mov
pop
mov
inc
or
or
sub
inc
stos
lds
rorl
inc
mov
cltd
inc
repnz
jb
sbb
sub
xchg
adc
popa
mov
jns
clc
pop
mov
sub
test
mov
or
fnstenv
lods
js
das
or
shll
xorb
rcll
mov
xchg
xor
jle
leave
inc
adc
or
pop
push
iret
cmc
into
ret
cltd
push
rcrb
lcall
pop
jno
shrd
mov
icebp
mov
cmpsl
lods
aaa
cmp
add
xchg
add
roll
mov
jge
and
inc
fisttps
scas
push
or
out
cmpb
mov
ljmp
mov
sbb
pop
dec
out
sbb
xor
push
inc
adc
test
cmpsb
shrb
jl
fdivs
loopne
pop
stc
xor
push
sub
add
xchg
pop
sub
add
dec
or
orl
mov
fistpll
lock
aad
aas
xchg
aad
lods
es
cmpsb
inc
xchg
ss
ret
sub
fs
ret
scas
cld
push
push
int
es
xchg
mov
fbstp
iret
pusha
xor
loop
fucom
jnp
inc
aad
xchg
repnz
ret
sub
ret
fbstp
push
inc
sub
add
into
addr16
inc
arpl
pop
cltd
mov
inc
leave
inc
scas
je
nop
imul
mov
rdtsc
scas
push
sub
mulb
pop
jnp
and
pop
shr
fsts
std
mov
inc
xchg
das
mov
push
and
pusha
out
outsl
inc
jae
xchg
add
xor
dec
mov
push
and
dec
inc
lret
cli
outsb
mov
enter
data16
jmp
cmp
aam
push
repz
inc
popl
inc
outsl
jb
stos
popa
sbb
shl
xchg
jmp
popa
and
dec
jno
mov
mov
push
call
lahf
test
push
lret
mov
mov
xor
subl
inc
push
sbb
insb
cld
xchg
lret
std
mov
mov
mov
insb
gs
pop
sub
test
js
xor
fadds
jbe
lcall
ss
icebp
lods
hlt
lds
sub
mov
sbb
mov
xchg
popf
pop
fnsave
adc
cmp
sub
pop
lret
fs
dec
sub
and
cs
dec
mov
and
imul
fidivrl
add
fists
xor
out
jae
dec
push
pop
mov
xchg
out
or
sbb
pop
rorb
imul
push
inc
insb
les
rolb
mov
sbb
js
mov
pop
sahf
imul
test
jbe
nop
lock
sbb
lcall
mov
lret
inc
arpl
mov
arpl
nop
mov
xor
fsts
rorl
push
inc
inc
aam
adc
daa
aaa
int3
sbb
lcall
and
jnp
mov
dec
jns
repz
add
imul
insl
in
cmp
jne
outsl
add
mov
pop
push
jge
push
add
or
lea
xchg
sub
loop
clc
inc
pavgw
cld
lods
pop
test
sub
pop
rcrb
mov
push
sub
cmp
inc
dec
shll
push
push
fucomi
imul
rcrl
jle
aaa
or
jle
je
test
or
aas
pop
and
pushf
incl
lods
and
mov
push
mov
iret
test
inc
imul
push
cmpsl
xlat
rolb
mov
orb
push
imul
mov
int
dec
int
mov
ljmp
push
jnp
mov
ficomps
movsl
lret
rol
ds
sub
adc
mov
jne
popf
test
mov
pop
pop
rcr
out
sbb
add
sbbl
rorl
inc
hlt
je
hlt
dec
out
fsubr
push
dec
leave
test
stos
loop
imul
push
loopne
xchg
cmp
xchg
jmp
cmpl
cmp
inc
stc
sub
xor
add
enter
out
fnsave
rorb
stos
jmp
mov
sbb
jb
outsl
mov
in
mov
call
push
fucomi
lds
ds
mov
lret
cwtl
pop
and
mov
sub
and
pop
das
and
fadds
jnp
sbb
ficoml
sbb
xchg
mov
xor
into
mov
pusha
test
lcall
mov
xor
fidivs
das
add
or
xchg
pop
mov
pop
lea
pop
ret
sub
inc
sti
xchg
lahf
and
jp
sub
fmulp
out
xchg
mov
fistl
aaa
and
adc
inc
fbstp
xor
leave
test
out
addl
xlat
int
popf
call
dec
adc
sti
loopne
or
push
jp
inc
imul
cmp
test
sbb
std
xor
and
sbb
sbb
nop
push
mulb
xor
ror
dec
dec
xchg
pop
aam
push
cld
out
fwait
es
stc
aam
sbb
cltd
jae
movaps
jg
mov
dec
repnz
fwait
rcr
std
jg
es
or
mov
pushf
sbb
dec
adc
or
dec
aaa
mov
pand
lock
lock
dec
mov
mov
mov
push
arpl
out
push
addr16
mov
lock
scas
push
or
fcoml
mov
add
ret
pop
mov
sub
push
shrl
mov
push
fidivrl
push
add
mov
cmp
aas
lret
push
inc
lods
inc
push
xchg
xor
xchg
cmp
mov
jp
or
jae
and
lcall
scas
sbb
call
xor
push
rcrl
mov
push
or
imul
cli
mov
das
int
clc
cmp
es
jge
in
push
jle
into
xchg
jg
push
jmp
out
daa
jmp
out
ds
mov
dec
inc
adc
jp
pop
es
shlb
int
pop
orb
add
popa
lcall
sahf
xchg
jmp
repz
xchg
mov
xchg
xchg
add
aas
add
xchg
dec
leave
mov
add
jnp
subb
mov
push
push
das
aaa
add
enter
ja
shll
out
nop
and
mov
divl
js
cvtps2pd
mov
push
movb
fldt
lahf
shll
mov
pop
xchg
out
pusha
mov
or
or
xlat
xor
xchg
repz
pop
dec
inc
in
fcompl
mov
mov
mov
sub
gs
adc
hlt
xchg
lcall
call
inc
lret
out
arpl
mov
push
and
dec
push
inc
and
in
fnstsw
adc
mov
cmc
mov
jb
mov
or
addr16
adc
push
repz
inc
insl
jb
pcmpeqb
xchg
sahf
mov
mov
adc
cltd
jnp
mov
mov
stos
add
jle
push
cmp
cld
pop
mov
int
loopne
push
movsl
icebp
cmc
inc
fldcw
dec
xor
cmp
and
jecxz
xor
cmpsl
or
popa
pushf
sub
mov
repz
mov
dec
bound
inc
hlt
fwait
push
test
push
gs
lods
fidivrs
pop
adc
mov
orl
push
inc
adc
xchg
jmp
stc
out
in
push
dec
mov
hlt
pop
dec
shlb
pop
lahf
pop
adc
lods
sarb
sub
pusha
fisttps
sbb
xchg
lea
sbbb
xchg
xchg
sbb
cli
mov
test
fstl
cltd
imul
cld
ja
add
mov
add
div
cs
cmp
pushf
in
mov
xchg
stos
sti
pop
adc
sbb
cld
out
dec
cld
inc
mov
sbb
xchg
in
mov
lret
cmc
scas
xchg
cmpsb
mov
jnp,pt
repz
out
je
mov
mov
js
or
mov
stos
psllq
testb
mov
loopne
xchg
mov
pushf
cmp
mov
push
pop
arpl
int3
xor
sbb
adc
data16
sahf
aad
adc
std
ret
sub
pop
sub
popa
xor
sahf
add
or
xchg
fistps
jbe
xor
arpl
sbb
dec
in
mov
mov
cmp
addl
pop
adc
popa
cmpsb
cmpsl
push
pop
sub
and
fldcw
lcall
pop
stos
push
mov
in
enter
js
push
jo
insl
cli
inc
jne
pop
mov
inc
push
jmp
push
mov
jb
dec
or
cs
jne
sub
sub
cmp
jb
dec
cld
fcoml
sub
xor
sbb
lcall
or
cld
push
jo
sti
test
xor
adc
outsb
jo
scas
ret
pop
adc
in
loop
sbb
mov
es
ret
jmp
xor
leave
or
mov
xchg
cmp
in
push
push
pop
push
mov
cld
pusha
hlt
sub
testl
sbb
lods
subl
add
jp
cmpsl
sub
int3
popf
add
mov
jge
insb
mov
mov
push
pop
enter
incb
cmc
les
xor
sub
imul
ja
xchg
std
mov
ror
xor
cmc
inc
xchg
call
adc
push
fs
dec
movsl
sahf
sub
sbb
ret
lcall
mov
mov
mov
cli
out
xchg
mov
jae
test
mov
mov
pushf
or
and
pop
push
test
and
test
rcll
xor
shl
repz
arpl
fdiv
std
jno
mov
dec
cmp
shll
cs
sbb
cmp
loope
in
jge
jae
out
sub
jns
add
fistpl
push
and
outsl
les
mov
pop
popa
mov
jns
loop
cmp
xchg
mov
imul
decl
xlat
pusha
lret
andb
add
ja
hlt
sbb
mov
lret
xchg
inc
hlt
stos
push
mov
add
or
cmpsl
sbb
sbb
cmp
int
or
scas
js
push
test
dec
sahf
sbb
mov
call
jb
xchg
lret
jle
push
sbb
jecxz
xor
jge
mov
add
loopne
or
outsb
and
sbb
jb
es
aam
or
ss
out
ret
mov
cmp
sarl
add
aas
jecxz
mov
xchg
mov
push
xor
mov
xchg
testb
push
push
sbb
insb
fstpl
xchg
pop
mov
push
pop
loop
mov
insb
int3
addr16
mov
sbb
pushf
adc
sub
cs
mov
or
movaps
xchg
mov
loopne
adc
jbe
pop
mov
dec
mov
cmp
out
mov
data16
dec
daa
jmp
test
jae
push
pop
cmp
imul
popa
cmp
cmpsl
xchg
cli
je
pushf
dec
pop
in
sub
dec
addr16
dec
dec
icebp
adcb
subb
movsl
mov
mov
and
mov
inc
fisubrs
dec
ror
cs
das
jo
push
rorl
mov
and
mov
insb
mov
push
jle
sbb
sbb
inc
sbb
outsl
ds
loopne
repnz
push
jmp
jno
dec
mov
rolb
loope
repz
sbb
aam
sbb
stos
mov
sbb
inc
ficoml
aas
pop
fucomi
movsl
daa
les
in
or
adc
adc
in
into
orl
push
or
ss
scas
mov
jecxz
ror
inc
cmpsl
pop
adcb
call
cmc
add
daa
and
mov
mov
leave
inc
jl
and
nop
rcl
outsl
mov
fwait
inc
sahf
jo
cmpsl
and
xchg
cmp
and
mov
xor
mov
mov
pop
push
mov
add
sbb
rcrb
sub
ss
nop
xor
hlt
mov
or
mov
cmc
sarb
mov
lock
sbb
in
stos
stos
mov
insb
push
lret
fbld
push
clc
cmp
push
dec
adc
dec
cld
mov
sbb
sub
jnp
sbb
and
sbb
lcall
addr16
shll
outsb
push
mov
and
mov
pop
push
push
lret
jp
cmp
out
add
adc
xchg
mov
and
or
adc
or
jo
adc
push
xchg
popf
lcall
mov
push
jg
imul
or
mov
jbe
jge
sub
mov
addr16
sbb
into
test
shlb
jle
xlat
mov
jecxz
jle
cmp
imul
imul
jle
in
fnsave
push
aam
adc
fimull
push
xchg
insl
mulb
sub
in
orl
jp
imul
fidivrl
pop
cmpsb
xchg
push
adc
dec
pop
or
xor
pop
imul
ss
dec
mov
dec
dec
push
xor
int3
jne
out
test
mov
dec
mov
loop
mov
fcomps
scas
mov
xlat
add
jb
scas
cld
sub
mov
mov
leave
sbb
mov
fistl
cmp
lret
mov
pop
stc
and
inc
xchg
enter
in
mov
sub
inc
xchg
call
loopne
notb
negl
pop
or
mov
repz
adc
pop
fadds
jmp
cmc
dec
push
cld
out
pmulhuw
dec
cmp
loop
jmp
aad
xchg
jecxz
jp
in
inc
xor
shlb
xchg
cmp
pop
xor
add
inc
pushf
adc
add
pop
arpl
enter
pop
add
sub
mov
hlt
pop
sti
push
repz
or
push
or
pop
into
push
pop
aam
lds
jp
pusha
sbb
cmp
or
es
jbe
cmp
dec
insl
test
scas
push
adc
imul
xchg
shlb
popf
fstpt
push
arpl
jle
stos
xchg
xchg
fldenv
mov
outsl
xchg
pushl
push
sbb
lret
mov
add
in
scas
xchg
rcrl
iret
mov
imul
call
push
cmp
fwait
push
hlt
sbb
sub
dec
cli
sbb
pushf
jns
jo
jp
inc
mov
mov
sub
push
fldl
push
push
lcall
pop
mov
jle
and
push
sbbl
sub
sub
pop
mov
aaa
sbb
ds
push
loopne
pop
cmpsb
fidivrl
mov
dec
int3
pop
or
mov
repz
xorl
pop
shlb
xchg
dec
lret
fistpll
int
jae
push
stos
mov
outsb
pop
clc
into
sahf
mov
and
fbld
test
enter
mov
and
inc
xlat
popf
and
shr
lret
aad
mov
push
pop
xchg
outsb
mov
mov
fisubrl
xchg
lods
lods
cli
add
cld
movsb
xchg
xchg
adc
bound
push
jnp
repnz
mov
push
or
arpl
push
pop
pop
jo
data16
inc
inc
popf
xchg
shll
sub
xorl
daa
and
mov
push
pop
mov
out
mov
jl
and
loope
add
out
loopne
jnp
mov
negb
jno
inc
lods
insl
push
add
push
mov
shll
ds
pop
inc
xchg
sub
adcb
pop
jl
ss
les
inc
xchg
in
pop
jecxz
sbb
out
push
jno
pop
xor
jo
pop
add
push
mov
outsl
and
ret
adc
inc
push
ret
loop
insl
xor
pushf
inc
int
xor
test
mov
mov
out
mov
cmp
cwtl
jmp
movsl
jle
mov
jnp
gs
mov
lea
sbb
mov
and
ret
pop
subl
add
stos
mov
adc
in
xchg
xchg
sub
sbb
fstps
mov
rcrb
inc
sbb
dec
mov
aad
andl
out
inc
and
xor
inc
jl
dec
lods
xlat
xor
je
adc
mov
insl
imul
iret
rolb
push
mov
loope
jecxz
cmpsb
inc
dec
fisubl
add
mov
stos
aad
idivl
adc
cmp
movsb
add
inc
icebp
or
mov
in
push
dec
nop
fs
dec
pusha
mov
enter
test
and
add
stos
rolb
mov
shlb
in
sub
push
xchg
xchg
out
lods
daa
add
xor
and
dec
adc
xchg
xchg
and
jg
push
and
pop
sub
rclb
inc
xor
inc
push
in
popf
dec
fstpt
mov
dec
lcall
dec
roll
dec
push
in
clc
mov
and
inc
repnz
xchg
out
mov
popf
rorl
pop
idivl
sub
popa
dec
in
lea
repnz
addr16
fisttps
xlat
cmp
mov
out
sbb
data16
or
fwait
jl
mov
inc
pop
dec
mov
in
out
iret
scas
adcl
sbb
sub
test
xchg
mov
xor
lods
movsl
mov
in
mov
pop
test
pushf
push
insb
shr
mov
int3
push
xor
arpl
jnp
fnstenv
ret
adc
out
loope
xlat
fimull
fcmovu
mov
mov
dec
add
das
jp
and
icebp
sub
adc
inc
inc
hlt
xchg
dec
pop
add
cmp
pop
push
pop
data16
iret
in
lcall
sub
push
xchg
shll
insb
fldz
flds
mov
ja
icebp
sbb
in
repnz
sub
jne
cmpsl
loope
fs
lahf
popw
icebp
cmp
fstl
push
lcall
fs
sbb
scas
sbb
mov
jmp
mov
fisttps
imul
xchg
add
pop
subl
sub
jno
xlat
roll
test
dec
cli
mov
lea
or
pop
fs
unpcklps
sarl
mov
int3
add
and
in
mov
add
inc
xchg
inc
cli
mov
add
addr16
imul
push
sti
cmc
pop
mov
jb
xor
pop
jae
stos
lods
xor
push
cmp
loope
jmp
pop
mov
jno
dec
aaa
mov
cmpsl
sbb
mov
push
orb
lcall
fwait
lea
aaa
fisubrl
lcall
hlt
jecxz
imul
popf
mov
or
pop
fstl
addb
mov
dec
cmc
je
push
fs
jns
inc
in
stc
mov
mov
xchg
fs
pushf
movsl
and
mov
mov
popf
mov
dec
xor
jae
cmp
dec
mov
rol
out
jmp
hlt
jbe
divb
loope
cmp
fs
or
xchg
es
outsb
xor
int
jno
test
cmp
or
cs
rcr
clc
shll
sbbb
insb
sub
cld
pop
sub
inc
std
in
xor
and
je
in
adc
mov
add
adcl
sbb
push
and
pusha
mov
push
jl
iret
loope
shrl
mov
mov
adc
mov
out
lods
rorb
mov
jbe
in
imul
xchg
adcb
loop
inc
cmpsb
sbb
pusha
push
flds
cmc
push
gs
repnz
jmp
add
test
or
dec
imul
push
sub
aas
int
pop
out
clc
jne
repz
push
sahf
repnz
xchg
jmp
xchg
ror
test
mov
ficompl
jb
lods
xor
push
xchg
fadds
outsb
sbb
mov
fwait
xchg
xchg
aas
stos
and
shlb
lods
xchg
dec
movsl
pop
push
cmp
add
daa
sub
cmpsl
imul
jg
loopne
mov
and
mov
fsin
iret
mov
or
scas
push
dec
subl
jmp
pop
push
adc
ret
mov
rcr
faddl
or
stos
lods
and
stos
out
push
inc
xchg
and
int
aad
and
inc
adc
xchg
xchg
push
femms
add
lea
sub
jge
lret
and
pusha
nop
pop
loop
push
std
dec
out
testb
popf
mov
xor
xor
lea
xor
xchg
addr16
ja
mov
mov
clc
sahf
jmp
jle
loop
pop
inc
cld
push
adc
aas
or
sahf
rorl
xlat
stc
xchg
xorb
mov
dec
dec
adc
punpckhbw
inc
inc
mov
scas
pop
sbb
push
mov
stos
or
in
ficoml
jnp
cmp
push
insb
mov
pop
out
xchg
mov
inc
adc
or
mov
and
gs
addr16
aaa
mov
ret
das
inc
call
mov
fs
rcrl
cmovnp
xchg
jb
sarb
ret
fdivrl
cmp
clc
inc
sahf
test
and
imul
fldcw
fsub
pop
jb
push
inc
sub
cmpsl
and
loop
cwtl
mov
and
or
jo
sbb
in
je
mov
leave
repnz
in
dec
sbbl
mov
lods
rcr
cltd
ljmp
sub
jb
or
cmp
pop
idivl
mov
dec
adc
xchg
fadds
sub
popf
aad
in
sbb
add
inc
mov
mov
xchg
insl
insl
jb
push
hlt
hlt
arpl
sub
mov
movsl
xchg
lods
loope
push
aad
dec
cmp
fstpt
mov
js
rolb
push
mov
xchg
cli
repnz
xchg
popa
pop
movsl
daa
sub
andl
in
ret
ret
rcll
cmp
jbe
cld
xor
ss
ja
xor
hlt
sti
pop
fimuls
dec
mov
in
int
inc
cmp
dec
adc
mov
in
sbb
and
push
or
call
popf
jo
sub
and
outsl
mov
cltd
cmpb
add
adc
push
and
and
pop
sbb
mov
inc
push
mov
enter
pop
dec
clc
enter
mov
add
jne
inc
aad
dec
jns
add
out
inc
jns
fimull
in
icebp
xlat
es
push
dec
aam
imul
out
mov
cmpsb
in
shrl
push
xor
movsb
dec
push
fwait
les
xchg
mov
sbb
add
mov
aad
and
xor
inc
bound
xor
dec
scas
or
push
das
lret
xor
jns
cwtl
pushf
adc
and
jmp
rorl
int
push
repnz
push
ret
lods
xor
inc
add
cmp
jae
sbb
dec
outsl
dec
pushf
sub
adc
add
xor
lcall
jo
sbb
or
bound
jno
jge
adc
lods
nop
scas
testb
and
mov
cmp
aam
loop
js
or
add
jns
in
xor
int
jecxz
sarb
jge
mov
mov
in
xorb
cltd
jl
sti
add
jp
jno
mov
lret
xchg
mov
adc
cld
repz
rcrb
aad
push
jae
notb
out
scas
sbb
rol
scas
cmp
cmpsl
cli
test
inc
into
jl
pop
lds
mov
push
lock
jno
and
mov
add
fcmovnb
add
mov
jp
jae
jbe
addb
pusha
ficoml
mov
sbb
sub
and
dec
out
sbb
add
pop
mov
and
jmp
pop
loop
rcrl
mov
mov
add
ret
pop
mov
push
frstor
push
pop
sub
sbb
test
mov
clc
les
and
pop
xor
or
dec
jmp
sub
mov
out
sarb
dec
xor
ds
cmp
cld
cmp
xchg
dec
mov
inc
lahf
call
sbb
mov
jle
sub
push
cltd
in
add
dec
or
fsubr
mov
mov
cmpsl
xlat
inc
xor
pop
das
mov
in
and
stos
mov
outsb
andb
push
outsl
ja
lret
mov
out
loopne
pop
jmp
inc
ss
cmp
dec
inc
lods
js
insl
insl
ficoms
insb
aaa
sbb
jo
mov
mov
lods
push
sbb
lret
iret
xor
dec
hlt
mov
mov
or
sti
mov
movsl
popa
pushf
mov
xchg
pop
icebp
mov
pushf
push
xor
repnz
das
mov
dec
mov
lock
xor
jne
sti
cltd
and
mov
push
int3
pushf
in
inc
dec
jne
insb
mov
adc
ja
mov
inc
lea
pop
and
cli
divl
pusha
fs
push
push
das
fsubrl
cmp
scas
lretw
popa
stos
ljmp
mov
ret
das
cmp
stos
mov
in
out
and
sub
sub
push
fbstp
push
jns
loopne
mov
sub
rclb
jmp
sbb
and
mov
daa
fisubs
or
cmp
lods
jp
push
jg
nop
xchg
mov
hlt
shll
adc
dec
pop
fwait
loop
iret
shll
dec
shr
stos
nop
ror
scas
mov
testl
lods
cmp
or
aad
test
sti
fwait
pusha
adc
cmp
xchg
adc
push
std
out
xchg
push
xchg
adc
xchg
push
hlt
mov
and
jp
stc
insb
dec
insl
lret
or
fadd
aam
dec
add
nop
sbb
mov
dec
or
add
add
xchg
out
stos
ss
jmp
xchg
and
dec
loopne
ds
adc
popf
cmp
cmpsb
fistps
pandn
xor
mov
in
sbb
cltd
fnstenv
ja
ror
or
push
pushf
test
mov
stc
sub
push
int3
fnsave
push
and
movsl
pop
aaa
or
es
xchg
je
jl
mov
aam
sbb
mov
pushf
lcall
xchg
push
outsl
loope
xlat
jne
push
jecxz
js
sub
sub
inc
je
push
or
dec
pop
insb
xor
cld
cmp
rcl
fisubl
xor
mov
sbb
push
mov
jg
rclb
popa
mov
xchg
pop
mov
lods
int3
rclb
aad
adc
out
in
push
test
jo
test
cmpsb
fisttpll
call
insb
jnp
mov
pushf
sbb
pop
push
push
je
xor
ljmp
shlb
gs
inc
sahf
inc
neg
cmp
or
sub
fisttpll
icebp
mov
push
inc
cwtl
jae
jg
push
xchg
shll
test
jmp
add
cmp
jo
mov
faddp
cmp
lods
shrb
sbb
pop
inc
je
xor
ret
pop
mov
sbb
dec
push
notb
cmp
aam
push
dec
sbb
stos
sub
dec
fmuls
or
sbb
adc
mov
jmp
push
jmp
jg
pop
add
fwait
lret
cmpsb
inc
mov
push
loop
popf
push
pop
addl
or
dec
xchg
jbe
sbbb
push
cmp
repz
mov
sahf
enter
jnp
pop
cmpsl
adc
lcall
loop
xor
pop
imul
sbb
adc
sub
sub
push
shll
mov
ljmp
push
dec
imul
cmc
push
ret
mov
fcmovb
iret
loopne
mov
mov
ds
jge
inc
pop
je
sbbb
mov
mov
test
scas
ret
repz
mov
loop
fdivl
pusha
addr16
jge
bound
bound
out
push
pushf
mov
xchg
out
aas
mov
jl
sbb
inc
enter
xor
lahf
jl
mov
adc
idivl
dec
addr16
adc
sarb
xchg
ret
push
scas
pop
fistl
xchg
jo
inc
mov
fldcw
or
iret
mov
mov
or
sahf
push
jb
ja
mov
cmp
call
pop
mov
in
leave
pop
lret
cmp
mov
pop
test
mov
ss
adc
mov
mov
lea
push
out
fldt
pop
cmpsl
xchg
add
sbb
xchg
test
test
pop
mov
gs
mov
std
sub
mov
sbb
mov
fwait
dec
scas
lods
jmp
jmp
jg
inc
clc
int3
ljmp
adc
jmp
pop
xor
dec
mov
into
cmc
hlt
sub
ret
jg
es
shrb
ret
and
mov
push
out
xlat
jne
push
mov
fdivl
aad
push
xchg
push
add
xor
xor
dec
popaw
push
push
cmp
mov
fdivrs
or
int
movsl
loop
or
pop
mov
xor
icebp
ret
inc
fisubs
bsf
ret
jge
inc
jbe
jmp
or
scas
lds
fcmovnbe
es
mov
mov
jno
aad
cld
lock
in
divb
push
in
imul
xor
xchg
pop
jmp
mov
inc
fldl
out
sti
jo
roll
shl
rolb
mov
bound
hlt
push
and
scas
es
scas
cmpsb
hlt
roll
lock
mov
and
fbstp
and
xchg
subb
mov
xor
cmp
sarl
loope
dec
or
push
add
mov
ucomiss
out
sub
das
or
lods
shl
adc
push
pop
subb
dec
mov
mov
cmc
outsl
mov
mov
dec
addl
es
lret
xor
out
aaa
xchg
cmpsb
and
mov
popf
push
dec
add
xchg
mov
cmc
xor
push
cmpsl
movsb
cmp
imul
push
outsl
test
sub
leave
pop
lea
and
iret
sbb
xor
shrb
or
mov
inc
out
sti
out
mov
mov
xchg
shrb
gs
insl
pop
jb
cwtl
mov
mov
fisttpll
mov
shrl
sub
xor
inc
in
int3
cmpsb
mov
jle
ljmp
cmpsb
aaa
sbbl
cmp
enter
ljmp
pop
push
icebp
jg
arpl
cltd
sahf
insl
test
scas
and
fsubr
mov
les
or
scas
mov
jg
mov
mov
jbe
and
inc
insb
and
fstpt
iret
out
push
jmp
sub
inc
sbb
mov
cld
inc
test
jle
into
xchg
cmp
sub
xor
jnp,pn
ds
pop
fnstenv
data16
mov
mov
clc
xchg
test
adc
mov
fistl
xchg
repnz
out
push
add
mov
and
mov
pop
loope
mov
jnp
rcrb
popf
dec
out
cmp
arpl
sub
pop
cmp
sbb
xorb
in
leave
lock
add
loope
jo
in
xchg
sbb
push
mov
scas
sub
or
sti
xchg
daa
cmp
call
mov
xchg
push
jecxz
outsb
push
sbb
enter
iret
adcl
cs
repnz
imul
aas
mov
sub
loope
mov
sub
and
mov
repz
mov
mov
adc
test
push
cs
ss
inc
push
inc
cmpsl
mov
xor
out
add
jne
call
and
inc
or
pop
enter
lea
mov
outsl
leave
pop
xchg
inc
pop
jp
mov
sbb
add
je
cwtl
sarb
scas
xor
cmp
adc
lods
xchg
and
ss
jecxz
stc
push
std
push
mov
sbb
inc
test
sub
ja
cmp
pop
and
xor
mov
inc
call
sub
dec
mov
mov
movlps
pop
fsubl
out
cwtl
adc
andb
pcmpeqd
and
jmp
lods
loope
sbb
lcall
sub
xchg
push
lds
push
out
out
inc
fcoml
ljmp
and
test
addr16
addb
push
mov
aaa
cmpsl
add
lret
lods
cwtl
jle
pop
inc
pop
mul
dec
pop
sub
insl
addl
inc
iret
iret
mov
loopne
fwait
sbbb
mov
faddl
pop
lret
popf
cmpsb
shll
sti
cmp
inc
aaa
mov
mov
outsl
lock
sub
das
aaa
xchg
pop
mov
push
cmpsb
fucomip
iret
xor
mov
das
and
add
scas
aad
ljmp
lods
mov
decb
imul
les
mov
sub
rorl
mov
les
xchg
dec
add
mov
stos
in
or
je
dec
xchg
int
dec
movb
jnp
hlt
fadds
icebp
adc
clc
add
adc
and
or
icebp
xchg
mov
xchg
pop
push
and
mov
cmp
loop,pn
addr16
pop
sub
call
lahf
push
mov
jecxz
and
push
ret
xchg
mov
push
cmp
inc
not
ss
pop
jge
out
aam
push
sub
ficoms
stos
cs
cmp
xchg
or
lock
pop
push
and
lods
inc
mov
lret
jmp
mov
insb
inc
pushf
mov
add
rorl
das
inc
loopne
iret
jecxz
cwtl
adc
mov
mov
insb
je
and
jns
ss
jb
lods
fldenv
pop
dec
pushl
add
mov
jp
repz
in
clc
push
sbb
lahf
popa
mov
and
adc
jl
cmp
inc
push
adc
ljmp
out
adc
daa
js
sahf
jbe
and
push
adc
call
incl
orl
mov
mov
jmp
lds
gs
je
fwait
lock
mov
lods
xor
rdtsc
jl
loopne
in
icebp
fwait
xchg
push
lds
das
pop
adc
mov
inc
jae
xor
fistpl
fsubrp
arpl
push
jnp
pushf
and
data16
xor
inc
jae
xchg
mov
scas
popa
sbb
loope
dec
dec
and
aam
push
push
fwait
popf
cmp
and
pusha
and
mov
loope
pop
push
lods
jmp
xchg
mov
mov
and
jns
sbb
ja
dec
sbb
mov
pushf
leave
add
negb
adc
rcrl
mov
les
xlat
das
jl
xor
jo
shll
lcall
cmpsb
or
push
and
fdiv
int3
or
mov
insb
push
cmpsb
hlt
push
sub
outsl
mov
cld
das
sub
or
in
call
xchg
adc
mov
mov
fisttps
orl
sub
sub
mov
iret
dec
mov
push
dec
fwait
jno
mov
gs
ficoml
aam
pushf
lds
pop
test
leave
and
in
orb
cmp
and
mov
dec
xor
pop
mov
clc
mov
cmp
ss
xor
mov
ret
shll
cmp
mov
cmp
hlt
adc
pop
in
inc
lret
shrd
sub
jle
int3
decb
add
nop
push
pushl
xchg
out
andb
dec
jne
ljmp
jo
sahf
mov
mov
lret
aas
adc
loope
cltd
lret
iret
inc
icebp
scas
xchg
xlat
mov
test
into
pop
sbb
les
addb
jp
jb
into
push
fidivrl
cmpsl
inc
sub
mov
into
in
jecxz
addl
aas
decb
call
sbb
stc
movb
lahf
pop
jae
aad
ret
mov
cmp
rcrb
ja
pop
xchg
lds
cltd
xor
rorl
clc
imul
inc
or
sub
test
or
xor
xchg
insl
jne
mov
loop
fs
mov
push
adc
adc
arpl
inc
movsb
mov
xor
xchg
xchg
inc
mov
cmp
lods
pop
fs
or
and
pop
cwtl
adc
movsb
scas
pop
push
fcoms
xchg
popa
mov
cwtl
jecxz
lds
sbb
outsl
pusha
ja
loop
cmpsl
stos
inc
aas
ja
addr16
movsl
mov
adc
pop
pusha
mov
es
insb
mov
or
stos
int
mov
push
lret
test
outsl
test
and
lahf
jg
enter
test
jmp
shlb
mov
lret
xor
aaa
inc
cmp
xor
pop
push
jg
or
jp
subl
push
call
jmp
push
sahf
inc
adc
xchg
enter
adc
push
sub
inc
aaa
stc
jle
ret
sahf
test
add
and
push
mov
jecxz
pushf
xchg
xor
test
mov
mov
push
jp
into
and
sbb
pop
fsubrs
sbb
adc
adc
jl
add
in
cltd
fsub
jp
jmp
test
or
lret
adc
aam
xchg
stc
repz
xlat
push
add
push
lods
mov
testb
jmp
clc
jge
inc
aam
xor
pop
dec
hlt
enter
mov
ret
mov
pop
gs
leave
add
mov
xor
lret
rcrl
mov
rclb
enter
es
je,pn
fildll
jmp
rcl
lret
sbb
xor
pop
addps
lfs
inc
or
xor
add
push
cmp
dec
aam
push
out
lcall
pop
or
or
daa
lock
inc
js
loop
xor
xlat
mov
xor
fs
fistpl
inc
sbb
cmp
pop
sbb
test
sbb
or
sbb
idivl
jnp
rcll
cmp
sub
mov
mov
mov
add
lret
popf
jmp
add
lret
cmpsb
imul
pop
cmpsl
adcl
subb
pusha
xchg
jg
cli
add
sbb
loopne
and
push
cwtl
stos
xor
add
jb
mov
lods
push
lods
push
rclb
stc
idivl
push
mov
aam
test
in
into
in
popf
clc
jg
fdivrl
in
pop
sbb
bound
pop
lock
aam
cwtl
xchg
aaa
sbb
fcoml
hlt
les
aad
lret
xor
pop
push
test
cmp
imul
mov
mov
xor
jle
sub
insl
dec
push
mov
out
mov
jl
mov
add
rcrb
push
xlat
or
shrl
mov
fiadds
mov
jb
cli
jle
and
scas
cmc
jecxz
jno
aaa
popa
mov
lret
lds
sbb
push
xlat
insl
lods
adc
add
cmp
ficoms
or
mov
test
insl
shll
lcall
stos
out
sub
add
pop
dec
stc
dec
cwtl
or
sub
sbb
lret
fs
push
sub
mov
gs
xchg
ja
cmp
outsl
das
lret
xchg
cmp
inc
nop
push
jmp
cld
push
dec
mov
rolb
sbb
clc
sbb
jg
mov
and
rclb
adc
and
and
inc
aam
aad
add
ds
out
les
jo
loop
test
cli
rsm
popa
pop
dec
xor
cmp
loopne
pop
test
xor
imul
test
out
cltd
pop
fstps
je
jmp
movl
add
out
sub
xchg
test
inc
sbb
mulb
or
out
in
sti
mov
xchg
jle
mov
repnz
das
xor
pop
movsl
mov
fdivl
xor
jnp
lret
icebp
in
sub
stos
subb
and
or
pop
test
shl
jle
js
sub
adc
cmp
call
inc
out
enter
fstps
aad
mov
outsb
lds
pop
iret
adc
add
lock
mov
orl
xor
out
adc
jbe
jle
cmp
roll
sbb
dec
sub
mov
push
sub
in
lods
dec
inc
mov
js
outsl
jae
cmpsl
pop
repz
adc
sub
push
mov
mov
push
sbb
push
loopne
jecxz
aaa
xor
mov
fldt
mov
dec
int
cld
scas
insb
into
sbb
nop
cli
cmc
fwait
pop
outsb
add
sub
lret
movsl
xchg
xchg
test
imul
gs
adc
or
inc
cmp
mov
std
ss
pushf
aas
xchg
or
and
wbinvd
xchg
cmp
dec
jge
jno
push
xor
push
fsubs
mov
fdivrp
mov
inc
std
pop
iret
mov
rep
cltd
lcall
cmp
xor
fwait
ret
incb
stc
push
fsubr
loope
pop
test
cltd
scas
icebp
sbb
aaa
or
mov
pop
pop
rol
sub
xchg
gs
jecxz
and
add
jecxz
sbb
push
aam
scas
pop
xor
out
xlat
rcr
lret
les
sub
aad
sub
or
push
or
inc
cld
popw
stc
adc
add
xchg
mov
mov
arpl
hlt
lods
adc
popf
jns
pop
push
mov
push
jne
test
xor
xchg
mov
ljmp
out
pop
push
xchg
sub
lock
cmp
std
and
inc
inc
mov
add
movsl
dec
jmp
mov
or
ja
cmc
jnp
negl
jno
dec
push
adc
cmp
sub
out
mov
lds
out
js
xor
add
ljmp
sbb
fisubrs
cmp
xchg
fucomip
movsb
shlb
filds
xlat
outsb
mov
leave
jecxz
mov
rcrl
fstl
pop
pop
jb
fmul
aad
loope
adc
xchg
inc
stc
ja
dec
mov
decl
adc
jl
dec
inc
sbb
loopne
cmpl
inc
inc
shrl
test
movsb
les
jmp
mov
dec
inc
cmp
or
inc
and
mov
jg
je
mov
lds
dec
mov
cli
add
cmp
mov
in
mov
imul
rclb
xchg
sub
and
or
dec
jmp
jle
in
or
les
imul
stos
and
loop
jle
cmp
xchg
sub
mov
insb
pop
cmp
insl
fcmovb
adc
int3
movsl
sub
jb
xacquire
push
sarl
mov
inc
and
mov
out
je
call
jle
xor
stos
nop
mov
mov
push
mov
sub
insl
test
cmp
icebp
in
stos
fs
mov
insl
add
jbe
cmp
mov
aaa
daa
shlb
lods
and
mov
xchg
mov
add
xor
inc
icebp
push
pop
frstor
or
add
jns
pop
bound
push
cmp
aam
dec
cmpsl
sub
jae
ret
jmp
ficompl
dec
hlt
mov
jae
fmul
pusha
xor
push
fxch
test
inc
adcb
lahf
fidivrl
sub
push
jne
fwait
push
cbtw
xchg
pop
lock
xor
push
xor
mov
test
fwait
pop
inc
cmovl
daa
lret
pop
xchg
out
push
cmpsl
sub
popf
xchg
add
popa
test
push
stos
mov
pop
jbe
fisubs
jle
push
rclb
aad
add
sbb
pop
xlat
mov
ret
add
push
cmp
pop
sub
mov
jbe
scas
rolb
jo
mov
out
jne
popf
clc
adc
jle
test
mov
fisttps
mov
adc
push
fimull
ds
xor
cmp
pop
ss
jg
and
cmpsl
cmp
sub
imul
xlat
sub
clc
jl
shll
in
lods
fmuls
jmp
mov
fiaddl
es
push
outsl
xchg
scas
lods
add
xor
cmp
jbe
adc
cmc
fsubrl
push
leave
test
inc
lret
xchg
cmp
push
mov
and
sbb
add
aam
jl
inc
push
jae
popf
mov
xchg
mov
sbb
sub
mov
push
inc
faddl
xor
add
out
or
icebp
pusha
sbb
fmull
mov
xor
sub
imul
in
pushf
mov
push
in
mov
cmp
mov
sub
sub
enter
and
sub
in
in
xlat
and
cmp
aaa
stos
ficomps
mov
popf
pop
cwtl
data16
push
cmp
cltd
jle
mov
inc
sub
or
cmp
mov
sub
nop
repz
mov
out
jne
xchg
sbb
or
jb
push
push
xchg
pop
arpl
cmpsb
cmp
call
hlt
out
adc
and
sub
cmpsb
nop
pushf
inc
xlat
in
test
clc
test
pop
and
pop
mov
fcomps
xchg
clc
mov
inc
imull
or
int3
and
or
loopne
mov
xchg
sub
mov
dec
iret
icebp
xchg
movsl
loop
xchg
fwait
fwait
int3
sbb
jl
or
dec
mov
sub
das
aas
pop
sbb
fistpll
test
fsubl
pop
mov
cmp
adc
not
es
adc
add
fwait
dec
mov
and
sbb
outsl
dec
loope
scas
insl
adc
add
cmp
jge
cwtl
jno
cld
fs
cmp
mov
aas
subb
inc
dec
lea
fucomp
xchg
call
stos
and
mov
pop
outsl
xchg
jmp
sub
mov
mov
inc
xchg
mov
je
flds
push
andb
mov
lods
sub
bound
and
adc
add
mov
push
inc
and
divb
pop
push
shll
mov
fildl
shll
loope
mov
fs
push
pop
fisttpll
mov
aas
adc
pop
dec
cmp
mov
xchg
dec
das
push
mov
sbb
outsb
mov
ljmp
mov
addr16
sbb
fildl
xchg
repnz
fdivrp
stos
cmpsl
xlat
icebp
sbb
fadd
mov
push
sbb
data16
mov
out
stos
out
push
xchg
sub
dec
add
aad
push
xchg
faddl
test
pop
mov
ss
jns
mov
cld
mov
icebp
cmp
or
sbb
add
cmp
xor
in
inc
lret
pop
ja
sbb
outsl
xlat
inc
sarb
jg
xorl
adc
fiadds
mov
inc
xor
lds
pop
add
push
mov
es
repnz
xchg
lods
adc
push
iret
cmpl
push
lds
test
shll
ljmp
and
xchg
xor
ds
sti
jp
push
lock
push
jnp
bswap
mov
mov
lods
in
inc
mov
sahf
mov
mov
xchg
jge
ja
xlat
movsb
sets
popa
mov
jo
test
jge
pop
cltd
nop
mov
push
and
and
cmp
int
lods
data16
mov
lock
xor
mov
dec
aam
sbb
popf
jae
push
inc
adc
hlt
add
mov
adc
fwait
or
in
ja
pusha
aam
into
sub
fldl
iret
adc
and
fbstp
inc
sbb
or
jmp
les
pop
sbb
into
testb
pop
dec
push
adc
pop
cmc
das
or
test
xlat
cld
jae
fldcw
outsb
lea
movsb
test
sbb
adc
mov
sti
sarb
and
add
mov
cmc
adc
mov
out
mov
fidivrl
les
orl
gs
mov
jmp
sbb
sahf
mov
dec
mov
fst
push
adc
xchg
inc
fidivs
xchg
mov
and
mov
inc
xchg
stc
sub
popa
dec
xchg
lahf
and
jp
jne
or
ja
mov
imul
mov
sub
jg
out
pop
inc
sbb
mov
insb
stos
push
push
orl
nop
adc
adc
insb
fidivrl
push
cwtl
movsb
rcrl
inc
jnp
xor
std
ret
imul
bound
adc
inc
cmp
jle
jle
sbb
push
out
mov
fst
lods
clc
xchg
mov
or
movsb
leave
dec
jle
adc
jle
add
or
xchg
ret
js
inc
jmp
dec
cmp
push
cwtl
cmp
push
xchg
cmp
inc
jecxz
mov
sub
and
clc
fcomps
mov
jg
adc
aas
cmpsl
xchg
fisubl
add
inc
fdivs
jp
in
inc
mov
lods
sub
loope
jmp
negb
mov
ss
mov
ret
push
xchg
push
jl
ret
cli
mov
rcrb
sub
ficompl
sub
pusha
int
js
out
cmp
cli
sub
mov
scas
leave
cmp
jg
gs
xchg
or
cmp
lods
sbb
lea
fnstsw
push
sub
vmaxpd
mov
movsb
add
outsl
mov
pop
ficoml
xchg
je
and
add
sub
cwtl
jnp
sbb
lahf
and
int
push
sub
inc
into
mov
scas
dec
xor
cmp
and
push
cmpsb
pop
or
ret
xor
mov
and
imul
in
push
jbe
bound
test
dec
dec
mov
mov
push
sbb
mov
or
cmp
dec
inc
or
cmc
push
sub
mov
add
jmp
and
push
jne
jle
add
push
inc
sbb
cmp
je
pop
gs
testb
adc
mov
out
mov
in
xchg
push
mov
rcrb
mov
arpl
jle
mov
rcll
jg
dec
push
adc
subb
je
pop
cmp
pop
mov
pushf
xchg
sbb
jg
cmp
add
mov
inc
je
int
movsb
mov
cwtl
mov
push
inc
mov
push
or
jle
push
sbb
test
add
imul
cli
stc
xchg
mov
inc
int3
dec
flds
and
negl
dec
xor
dec
hlt
movb
faddl
xchg
inc
test
mov
push
sub
mov
aas
in
xor
mov
push
test
inc
pop
leave
or
in
adc
lods
jns
popf
jne
dec
xchg
das
dec
js
cmc
pop
rcr
add
enter
sub
jns
jge
lret
mov
sahf
das
dec
sbb
sbb
in
mov
push
iret
leave
insb
push
sbb
arpl
mov
insb
mov
inc
lds
cltd
stos
pop
fcomps
pop
jnp
pop
or
or
ljmp
repz
repz
nop
mov
jns
sub
lahf
mov
shlb
mov
and
fildll
call
xchg
or
rolb
pusha
xchg
push
addr16
dec
inc
push
mov
push
mov
mov
mov
jo
fildll
mov
mov
adc
js
mov
gs
sub
insl
pusha
lahf
mov
mov
notl
fwait
lahf
mov
push
cltd
int3
in
and
sub
outsl
mov
in
and
adc
fs
addr16
cmp
cmp
xchg
data16
lcall
sub
dec
mov
in
or
mov
ret
sub
aad
test
push
int3
push
inc
lret
push
hlt
mulb
sub
add
mov
inc
add
repz
sbb
pop
sub
jmp
jbe
and
leave
rcrl
aad
lods
repz
loop
aad
dec
sub
push
mov
pusha
xchg
inc
xorl
lock
ja
testl
sahf
jmp
mov
xlat
popa
mov
in
add
lret
mov
xchg
xor
in
and
add
push
jbe
out
mov
sub
js
mov
sbb
mov
sub
rol
xor
mov
sub
mov
dec
addl
mov
out
cmpsl
jne
and
mov
push
mov
enter
mov
adc
aad
in
push
outsl
jbe
lret
in
cmp
mov
dec
push
dec
decb
or
jns
repz
negb
cmpsl
mov
daa
out
arpl
repz
neg
xor
jp
cmc
push
sbb
lock
sbb
mov
mov
test
clc
xchg
loopne
pop
daa
dec
inc
jecxz
cmp
and
jae
push
pop
cli
fcoml
icebp
out
scas
mov
dec
dec
xlat
stos
cmp
pop
mov
or
ret
into
sub
jle
out
out
fnstsw
dec
sub
adc
gs
inc
rolb
push
out
sub
gs
dec
mov
je
sub
inc
xlat
xchg
out
xor
out
lods
dec
mov
xchg
cmpsb
cwtl
rep
dec
jo
int
or
pop
and
push
out
pop
out
icebp
dec
push
push
popa
pop
out
mov
loop
push
xchg
ficompl
cmp
rolb
adc
call
mov
gs
shlb
out
std
adc
outsl
out
insb
cmp
mov
in
ljmp
ja
sti
mov
mov
iret
jbe
hlt
sub
push
cmpsb
dec
repz
daa
fiaddl
inc
cltd
sub
xchg
mov
gs
fsubrl
cwtl
aam
sub
adc
enter
xchg
insl
xor
pop
sub
inc
mov
jecxz
pop
push
sahf
jp
fwait
mov
fimull
aam
and
shrd
mov
cs
inc
test
add
jle
mov
das
jo
jl
mov
lods
out
push
or
adc
jle
inc
cld
sbb
rolb
xchg
stos
lods
xor
in
jg
dec
or
lods
das
mov
adc
mov
out
popf
sti
cmc
or
inc
lcall
sbb
lock
popf
pop
mov
push
fldcw
cmp
cltd
add
dec
mov
pusha
xchg
pusha
push
and
loopne
popf
sub
jne
orb
xchg
fs
pop
pop
mov
dec
sbb
sti
rolb
clc
hlt
push
cmp
cmpsl
lods
andl
je
sahf
push
rdpmc
cld
or
adc
insb
arpl
or
mov
lcall
cmpsl
int3
mov
mov
sarl
jnp
rcr
bnd
lds
shl
push
mov
adc
sub
mov
cmp
clc
and
xchg
shrl
popf
jl
pusha
push
aam
je
fxch
sahf
mov
lds
sbb
insb
outsl
and
fldln2
jl
sub
adc
mov
aaa
inc
push
lret
loope
je
xor
dec
es
mov
xchg
cld
scas
aam
xchg
js
scas
inc
je
shll
or
popf
xor
lcall
jmp
dec
mov
out
aas
lock
cmpsb
sub
xlat
add
pushf
push
add
dec
pop
add
jecxz
inc
imul
sub
pop
div
hlt
inc
jecxz
jno
aad
sbb
and
add
rcrl
inc
les
pop
mov
rclb
inc
inc
add
pop
pop
pop
xchg
mov
jg
dec
in
cli
insb
push
jmp
and
lahf
das
dec
bound
negb
inc
imul
fidivrl
test
push
lret
sub
pushf
xchg
cmp
subb
adc
pop
ds
or
into
mov
arpl
lea
addr16
mov
push
test
mov
pop
add
cmp
ret
int3
pushf
je
xor
jo
jbe
ret
loope
fsubs
popf
xchg
ss
inc
inc
fs
or
xor
adcl
sub
or
or
popf
pop
sub
inc
sbb
enter
stc
jp
and
lret
mov
loop
bound
cwtl
add
jmp
dec
sbb
aad
lods
out
or
jnp
cmpb
jp
or
inc
outsl
adc
xor
dec
lret
or
cmp
cli
sub
lea
mov
inc
push
sbb
or
lds
mov
push
sub
loope
mov
gs
push
gs
or
aaa
dec
loop
adc
or
scas
add
push
mov
lahf
call
mov
fwait
xchg
in
orl
jmp
leave
jbe
daa
mov
mov
mov
adc
jne
fdivs
insb
hlt
jno
fsubl
inc
ja
or
jo
xor
cmp
out
call
ficoms
dec
pop
scas
dec
dec
mov
andb
adc
pop
fists
out
out
in
test
addl
mov
loope
sbb
push
jno
jne
cld
icebp
pop
mov
mov
dec
mov
fbstp
fists
int3
data16
xchg
lods
insl
dec
sub
insl
aaa
jle
stc
out
std
cmpsl
xor
and
sub
jecxz
inc
loopne
in
pop
inc
sub
and
inc
out
movsl
mov
or
shr
lock
lods
cltd
or
hlt
ficompl
push
inc
jge
xor
mov
or
popf
popa
sub
jbe,pt
cmpsb
sbb
sub
xchg
rol
shrb
xchg
in
je
push
cs
sbb
ret
mov
push
mov
pop
test
jo
orl
das
sti
pop
cmp
xlat
mov
cmp
outsb
add
push
adc
cwtl
mov
jne
addr16
lds
test
jo,pt
lret
inc
and
pusha
push
sub
scas
daa
loop
xor
dec
jns
mov
adc
outsb
cmp
fists
repnz
lcall
adc
mov
push
repnz
jg
mov
pop
scas
cltd
out
out
cmp
fwait
addb
ud0
cwtl
push
push
outsl
nop
cs
pop
les
cld
enter
jb,pn
pushf
sbb
jge
xlat
adc
push
jmp
cs
shl
cld
mov
push
dec
rorl
lahf
mov
daa
cmpsl
sbb
rorl
dec
mov
adc
adc
cmpsl
inc
mov
xchg
sub
arpl
xchg
and
arpl
sahf
icebp
mov
mov
xchg
inc
faddl
in
xor
jle
shll
inc
test
ljmp
pop
adc
scas
jecxz
mov
xor
cmp
jmp
ss
push
movl
enter
push
cmp
aaa
inc
pop
loopne
mov
ljmp
gs
mov
sbb
inc
rorl
jns,pn
push
cmpsb
and
push
jmp
dec
les
xchg
lock
clc
dec
or
lcall
xor
add
enter
sub
add
pop
fwait
shrl
leave
xor
mov
add
cltd
mov
mov
mov
cmc
out
test
addr16
stos
lods
ret
inc
xchg
out
movsb
mov
rorl
mov
xor
adc
sarb
pop
sti
mov
mov
mov
ds
xor
negl
popa
rorl
shll
dec
sbbb
sub
stos
inc
push
mov
push
jp
push
fdivs
ret
add
push
sti
test
loop
mov
push
mov
pop
scas
and
repnz
inc
mov
aaa
sub
sub
insb
cmpsb
inc
dec
mulb
pop
push
fldl
das
cmpsl
adcb
stc
test
loopne
mov
xchg
jno
mov
call
outsl
pop
push
scas
call
lret
and
ja
jmp
and
and
jecxz
or
pop
dec
ss
mov
sbb
loop
mov
outsb
mov
inc
adc
pop
xor
sub
dec
ss
daa
sbb
add
iret
pusha
dec
lahf
xor
mov
fs
test
inc
xchg
test
mov
sbb
mov
cmp
cs
out
test
jbe
adcb
lret
popa
lahf
push
pop
movsb
insb
pushf
mov
jnp
jle
sub
jle
mov
lahf
cs
jge
stc
ret
push
push
imul
jp
adc
add
pop
rolb
imul
fbld
mov
sbb
movsl
das
incl
xlat
adc
xor
xchg
jg
sti
clc
mov
icebp
pop
xchg
ljmp
daa
inc
adc
out
jb
add
mov
test
daa
fbld
and
sbb
and
arpl
stc
sbb
stos
dec
cmp
mov
test
arpl
leave
nop
sbb
cli
lret
mov
out
or
push
call
pusha
movsb
insl
mov
andl
lds
in
dec
aad
mov
clc
pop
xchg
xor
mov
cmp
xor
sub
mov
pusha
imul
aam
adc
cwtl
jge
popa
jle
cmp
js,pt
bound
pop
cmc
dec
dec
arpl
xorb
sub
sub
or
push
incb
mov
sub
dec
insl
ret
scas
lea
jecxz
lea
xchg
subb
mov
mov
lcall
pop
mov
sub
stos
xor
iret
push
clc
cs
mulb
jp
jp
inc
sub
lret
mov
adc
outsb
xor
clc
inc
jae
jge,pn
lahf
fbstp
or
mov
mov
icebp
icebp
idivl
fisttpll
shll
mov
pop
inc
addr16
lock
jl
push
sub
ret
shll
mov
or
mov
inc
xchg
and
push
mov
jne
mov
test
push
add
sbb
aam
mov
in
cld
inc
cmc
in
enter
aad
push
in
arpl
in
and
shlb
sbb
or
hlt
rclb
push
add
inc
or
shrb
int
mov
scas
sub
mov
stos
pop
sahf
xchg
cwtl
or
aas
mov
lods
rcl
cs
pop
push
sbb
int
adc
aam
or
add
test
sub
pop
sarb
sub
pop
je
pop
sbb
push
push
cmpsb
inc
or
mov
mov
dec
jb
fwait
les
pusha
add
jae
jo
or
loope
fmuls
mov
xchg
cwtl
mov
iret
cli
insl
in
dec
dec
rclb
inc
pop
stc
rcrl
push
lret
test
or
mov
cmp
add
imul
fldl
arpl
adc
movsb
loop
xchg
outsb
jl
add
arpl
orb
mov
inc
mov
sbb
mov
add
add
mov
xchg
ret
xchg
mov
sub
fstl
jmp
or
rclb
ret
or
cltd
push
ljmp
movsl
mov
dec
add
nop
pop
data16
push
dec
push
out
iret
xor
out
inc
jp
into
dec
jl
icebp
dec
int
sbb
mov
aas
push
roll
cmc
push
popf
inc
ljmp
dec
xchg
repnz
jecxz
or
popa
scas
pusha
nop
jmp
add
dec
imul
nop
imul
test
sub
test
sbbl
fcomps
adc
inc
std
xor
sub
adc
enter
inc
faddl
mov
in
cltd
jb
into
jle
orb
std
xor
ret
xchg
mov
aad
cld
jge
cmp
lock
xchg
pusha
mov
addb
adc
leave
stos
mov
outsl
ret
mov
mov
outsb
adc
ss
es
and
cs
push
or
pop
xor
addb
push
in
and
mov
cld
jo
lods
negl
out
or
jmp
push
adc
idivl
cmc
hlt
push
sub
ljmp
sbb
mov
jae
in
jns
add
aad
pop
mov
adcl
imul
pop
lods
fstpl
sub
fwait
addr16
out
inc
mov
cmc
test
dec
push
clc
pop
gs
mov
out
mov
cmpsb
pusha
pop
push
arpl
xor
mov
mov
dec
cmp
lea
dec
adc
test
push
lret
scas
and
data16
testb
mov
cli
pop
shll
mov
inc
mov
sbb
imulb
mov
cld
in
pop
mov
pop
test
pop
mov
xor
adc
pop
sub
add
xor
mov
inc
push
pop
or
jbe
in
inc
and
sti
mov
sub
fstps
dec
add
jg
sub
into
mov
sub
xchg
loopne
xor
and
push
mov
push
pop
les
xchg
imul
sbb
or
shrl
adc
sbb
adc
xchg
cwtl
gs
cmp
inc
xchg
cmp
xchg
mov
push
cltd
test
pop
and
push
mov
das
mov
cmc
clc
dec
fwait
notl
xlat
in
in
in
dec
fs
push
fcoms
cmp
xchg
mov
add
mov
loope
aaa
iret
adc
stos
cwtl
das
in
sub
ds
sbb
insb
xchg
fs
int3
jecxz
nop
mov
fs
icebp
aad
testl
enter
inc
mov
or
aas
mov
dec
jo
fcomip
into
jg
cli
lahf
rcrb
push
add
mov
dec
int
dec
xchg
loope
lret
movsb
icebp
push
push
lret
scas
mov
jg
mov
lret
push
lcall
shlb
sar
mov
pop
arpl
loope
or
jecxz
push
lock
nop
jo
lock
add
mov
and
roll
dec
jnp
jb
xor
pop
sahf
scas
in
sbb
dec
repz
sbb
mov
repz
outsb
daa
insb
cltd
mov
xor
das
cwtl
sahf
jmp
jne
rcl
aam
push
pop
mov
fmuls
inc
inc
or
leave
lcall
out
jbe
cmp
aam
into
clc
gs
cld
mov
rep
mov
pop
and
mov
push
je
mov
sbb
xchg
scas
das
stos
sub
cs
ret
std
cmp
mov
daa
and
cmp
inc
cld
jecxz
mov
lds
in
cwtl
cli
addl
and
int
and
xor
sub
xorl
mov
pop
loope
sarb
js
cltd
neg
bnd
mov
xor
mov
ljmp
xlat
jmp
or
mov
scas
cmp
fwait
cmp
gs
loop
ja
push
xor
test
ljmp
loope
push
loopne
arpl
push
adc
xorl
mov
jl
adc
scas
push
imul
sahf
jg
inc
xchg
mov
mov
mov
stc
mov
sbb
lock
sub
loopew
xor
stc
cwtl
pusha
lret
adcl
cmpsl
ret
cld
adc
jecxz
pop
jae
cli
scas
jecxz
aas
and
fsubrl
sub
aas
adc
orb
jmp
dec
cmp
lret
fsubrp
xchg
inc
movsb
cmp
fnstenv
stc
push
and
mov
jae
xor
pop
in
das
xchg
jo
inc
shlb
dec
add
mov
fiaddl
dec
out
sub
addb
cwtl
xchg
jge
dec
rcrb
cmpsb
fiadds
push
jp
adc
pop
push
sub
bound
dec
jnp
xchg
pop
push
adc
add
icebp
out
jp
pop
scas
sarb
mov
out
loopne
inc
inc
push
outsl
jno
dec
push
pop
add
in
cmpsb
or
fidivl
xchg
push
aad
std
jge
mov
cmp
ljmp
imul
cmpsl
sti
nop
mov
lods
dec
adc
push
mov
das
cmp
mov
jl
dec
xor
mov
push
xor
mov
outsb
jno
mov
or
or
xor
leave
or
and
sbb
add
dec
or
orl
in
and
in
pusha
call
and
shll
lret
jg
sub
scas
sub
lods
out
bnd
xchg
pop
mov
mov
jns
lods
repnz
cli
mov
push
inc
pop
cmpsl
mov
mov
pop
mov
push
jbe
shll
push
and
shrb
push
out
xor
and
and
mov
fisttpl
inc
or
mov
les
mov
fstpl
jecxz
pop
mov
xchg
or
lret
adc
mov
mov
pop
cmp
fnstsw
jnp
xor
xchg
aam
shll
mov
and
cmp
fstpt
pop
je
icebp
and
stos
out
lcall
rdmsr
push
or
mov
mov
icebp
mov
fadds
fists
or
test
pusha
sbb
scas
sub
push
mov
sub
cmp
out
dec
pop
dec
fcoml
pusha
leave
and
add
shrb
fildl
inc
fwait
aas
jbe
inc
je
dec
jmp
incb
cmpsl
lret
sbb
mov
shlb
mov
mov
outsl
mov
cmp
and
dec
repnz
jl
insb
mov
call
xchg
shrb
adc
mov
sbb
int3
data16
xchg
lds
pop
xor
jmp
sub
das
out
mov
icebp
divb
or
push
xorl
mov
pushl
cmp
mov
mov
aam
bswap
std
and
mov
mov
leave
out
adc
or
jns
dec
sub
cmpl
mov
sub
mov
int3
aam
mov
aas
mov
cltd
and
dec
cmpsl
stc
test
lea
xchg
data16
xchg
bound
add
std
gs
xlat
faddl
sub
lret
sub
jl
jmp
mov
cmp
gs
sahf
mov
xchg
cmpsl
pop
adc
cmpsl
repz
gs
jae
mov
push
xor
das
xor
and
add
in
lds
lret
movsb
fcompp
push
pop
aaa
adc
jne
vpaddq
xchg
in
test
mov
jle
aad
fs
cmpb
shll
add
xchg
pushl
in
in
sahf
loop
lcall
adc
fwait
or
xor
xlat
ret
sbb
sbb
add
push
lods
mov
cmpsl
fs
aas
call
mov
dec
sub
sub
add
adcb
jae
add
dec
lds
insb
adc
sbb
add
pop
xor
fwait
and
stos
arpl
loopne
dec
aam
or
mov
jmp
xchg
pop
ljmp
adc
testl
xchg
mulb
loopne
cltd
retw
and
lcall
cltd
std
cmp
das
xor
inc
stos
shrl
jne
pop
jle
cwtl
adc
jl
sahf
ds
and
inc
add
sahf
jmp
jg
andl
fs
jns
jbe
cwtl
mov
fnsave
xchg
cld
stos
adc
in
xchg
push
icebp
inc
nop
nop
das
ljmp
xor
es
es
adc
popa
or
out
idiv
fidivrl
sbb
sar
out
daa
push
push
jne
pop
dec
les
xchg
out
push
add
arpl
lods
daa
xchg
int
cs
cwtl
mov
pusha
cld
xor
testb
cltd
fimull
cmp
sub
je
cmp
push
dec
jmp
test
xor
cld
or
inc
inc
jmp
or
rorb
xorl
and
and
iret
cld
or
jno
fimuls
cld
fiadds
inc
stc
test
jo
sahf
cld
push
cmp
pop
dec
cwtl
xchg
ljmp
inc
insb
xchg
xor
ds
push
cmp
add
inc
shrl
fimuls
test
fwait
mov
fwait
or
sub
dec
jle
out
pop
aam
cmp
in
rcll
nop
dec
imulb
or
or
arpl
mov
or
imul
pop
mov
fcmovnu
mov
dec
xor
out
addr16
xor
sbb
mov
sahf
lds
xchg
sarl
lds
mov
sbb
pop
addr16
push
mov
inc
into
mov
xor
rcrl
adc
sub
cwtl
pop
test
int3
jcxz
mov
cld
mov
pop
lock
sbb
xor
mov
cmp
les
lea
push
pushf
sbb
les
adc
adc
sub
mov
repnz
andl
movsl
push
cmp
and
les
xchg
in
pop
mov
inc
jle
decb
push
mov
mov
and
iret
inc
push
cmp
jae
fists
mov
lods
or
xchg
fnstsw
lahf
movsl
sahf
jge
hlt
push
in
dec
rclb
mov
mov
mov
dec
addr16
loopne
dec
xchg
mov
dec
and
mov
into
in
dec
clc
sbb
add
into
sub
xchg
add
test
xchg
fsubs
nop
sahf
notl
mov
xchg
sarb
ds
sti
mov
pop
dec
popa
and
push
cmp
out
push
mov
mov
mov
fwait
xor
pop
xlat
cmpb
cmp
dec
scas
rolb
cwtl
dec
mov
loop
push
scas
mov
dec
mov
push
out
push
mov
sub
dec
sbb
mov
or
insb
mov
xlat
xor
test
mov
adcl
jge
adc
lret
jmp
cs
cltd
push
mov
out
or
dec
mov
push
lods
mov
xchg
int
in
int
popf
idiv
fnsave
adc
or
enter
push
gs
and
sti
mov
insl
mov
xor
mov
insl
pop
inc
push
cmp
push
xor
cmp
push
sbb
pusha
std
xchg
xor
pop
lds
mov
js
outsl
xor
dec
addr16
fdivrs
dec
movsl
imul
lock
lahf
dec
and
mov
adc
mov
inc
divb
cmpsl
test
dec
xchg
fwait
nop
out
dec
xor
repnz
xor
into
push
faddl
inc
pop
in
sub
push
pop
xchg
or
push
push
lods
test
lock
loope
scas
jl
divps
sbb
scas
inc
test
add
rcrl
jecxz
adc
addb
ss
pop
movsl
movl
cmpsb
sub
adc
shrl
push
mov
inc
push
xchg
pop
mov
push
xor
mov
xchg
sbb
imul
ljmp
sarb
cmp
push
pop
pop
adc
or
or
mov
push
cltd
sbbb
andl
xchg
lret
int3
stc
mov
lock
inc
sbb
xor
add
insb
xlat
call
dec
add
xor
sahf
aaa
sti
cs
pop
nop
mov
inc
icebp
in
mov
or
add
xchg
sbb
lods
inc
stos
xchg
cli
jmp
movsb
sbb
jle
mov
sbb
fldcw
repz
jge
push
insl
movsl
cmp
pop
lods
outsl
movsl
clc
mov
add
in
cmp
cmc
mov
jo
repnz
dec
lahf
mov
ljmp
insl
insb
push
push
pop
xor
inc
int
sub
dec
das
and
push
push
or
push
or
sub
xor
loope
repz
test
loopne
mov
add
mull
shufps
loop
fmuls
sbb
cmpsb
cmp
mov
scas
iret
add
jmp
cltd
mov
cmp
cmp
xchg
ljmp
push
int3
xor
insl
nop
and
mov
cmpsb
dec
inc
and
and
cmc
adc
xchg
xchg
mov
pusha
inc
dec
inc
jno
mov
scas
js
data16
sarl
add
std
imul
repnz
pushw
mov
insb
mov
adc
push
mov
movsl
sbb
movl
lcall
fwait
cmp
lds
mov
aam
push
mov
ret
push
add
lds
cmp
sub
dec
ret
out
in
sbb
sbb
cmp
mov
jb
das
std
fmull
mov
aaa
cmp
mov
push
cmp
sbb
or
outsl
pop
sub
cmpl
insb
mov
aas
xor
and
ja
xor
clc
sbb
or
ret
sarb
aam
mov
addr16
sbb
xor
inc
xchg
shlb
stos
xor
xor
into
pop
movsb
ljmp
sub
rcrb
cli
mov
cmp
enter
xchg
out
jp
fcoms
jb
jo
sub
gs
movsl
xor
jl
outsb
jno
mov
xor
jne
xchg
xor
xor
mov
insb
jg
cmp
dec
sub
pop
lods
imul
sbb
negl
add
xchg
and
or
rolb
cmpsl
mov
jb
or
inc
pop
cld
add
repnz
mov
neg
cmc
lcall
and
out
fwait
sub
add
call
arpl
cwtl
popa
aas
jnp
jae
movsl
aas
cmpsb
repnz
xor
imul
cmp
repnz
mov
int3
cmp
dec
fdivrs
cmp
add
adc
sub
test
stc
and
dec
jmp
cmpsb
dec
jp
dec
leave
jne
rorl
jmp
mov
add
imul
dec
xlat
adc
cs
mov
hlt
sub
ja
xchg
imul
or
cmp
add
jnp
inc
mov
pop
insl
xchg
jbe
or
and
mov
push
or
mov
sub
mov
inc
pop
popf
fiadds
pusha
mov
rcll
gs
dec
fadd
push
mov
xorl
mov
inc
in
incl
mov
mov
jo
mov
stc
outsb
nop
sub
test
aas
or
dec
cld
fs
adc
pop
mov
inc
or
lea
add
push
cmp
orb
punpckhdq
mov
and
push
stos
jno
mov
inc
cltd
loop
mov
jecxz
je
stos
outsb
jo
fsubs
mov
mov
stc
fimuls
inc
fnstcw
dec
jge
dec
cli
orb
xorb
jle
xor
daa
in
lcall
and
aad
cltd
fsubrl
aad
xchg
lock
test
xchg
cmp
inc
jae
xchg
push
hlt
adc
cli
pusha
add
loope
das
xchg
push
jno
cld
pop
adc
sub
daa
jle
adc
dec
add
js
sub
push
scas
add
out
xchg
repnz
test
stos
imull
dec
pop
xchg
scas
imul
imul
jecxz
clc
cs
xchg
push
je
push
mov
dec
sbb
faddl
in
push
xchg
int3
inc
xorb
mov
push
inc
jle
jo
imul
push
inc
pop
les
dec
pop
fdiv
push
push
negl
subb
pop
gs
push
leave
andb
mov
test
inc
dec
xchg
ss
push
and
mov
adc
movsb
mov
enter
daa
ss
clc
outsb
inc
push
sbb
mov
orl
mov
dec
lret
cltd
popa
out
mov
test
xor
into
ljmp
ret
mov
xchg
lock
mov
jmp
test
imul
popf
mov
in
imul
rolb
add
outsb
fidivl
cwtl
sbb
test
mov
pop
sub
jmp
sub
adc
dec
jb
mov
lahf
movsl
sbb
cmp
dec
repz
lret
inc
outsl
push
rolb
shlb
insl
popa
sti
scas
or
mov
pop
inc
and
adc
sarb
insl
sbb
aam
xlat
pop
movsb
loope
andl
sub
insl
daa
cmp
and
cmpsl
mov
fbld
inc
inc
popa
jmp
ss
mov
repz
rclb
cmpsb
mov
jnp
pop
ds
mov
dec
mov
subl
mov
ficoml
or
push
xor
xchg
rorl
stos
popa
mov
orb
mov
mov
mov
sbb
add
ffree
inc
jo
gs
ljmp
pop
adc
jo
adc
jp
inc
lret
fwait
cltd
es
dec
mov
add
mov
sbb
sarb
push
data16
jge
mov
push
int3
jmp
inc
xchg
lret
push
mov
lahf
add
jb
rcrl
push
add
jb
sti
imul
sbb
aas
cmp
je
data16
or
les
fisubs
icebp
xchg
cmp
dec
cmp
in
sbb
outsl
subb
jno
adc
call
out
jp
mov
mov
adc
pop
insb
adc
orl
sub
mov
or
arpl
push
enter
cmp
mov
fdivrp
clc
sub
aad
sahf
lahf
xor
and
ret
inc
test
mov
jnp
adc
movsl
push
fwait
aas
stos
adc
adc
mov
sahf
lods
rcr
or
pop
dec
pushf
pop
xchg
cmpsb
mov
into
push
lds
push
sub
out
fimuls
lcall
inc
jecxz
pop
rcrb
sub
lea
out
cmp
loopne
movsb
add
and
fdivrs
cltd
out
mov
add
pop
jne
push
stc
and
jne
push
or
repz
cld
fcompp
loopne
jg
out
cmp
fs
out
xchg
and
mov
sbbb
mov
xchg
pop
push
movsb
xchg
lds
or
outsb
fs
push
test
cmpl
inc
cmp
movsl
cltd
insb
scas
cmp
test
mov
jno
lods
mov
inc
cwtl
aam
xchg
int
and
xchg
xor
or
push
leave
aad
test
mov
or
subl
adc
cmp
sub
mov
adc
adc
xchg
inc
out
inc
inc
dec
xorl
je
std
cld
out
lret
out
mov
lods
cmp
cmc
or
or
sub
adc
mov
push
out
inc
add
stos
aam
xor
adc
aas
fidivl
adc
mov
das
sbb
int
mov
bound
imul
popa
or
shll
jp
or
fs
stos
push
pop
js
movsl
jnp
imul
and
push
dec
push
ffreep
mov
pop
and
sub
add
repz
das
out
icebp
fwait
ljmp
lret
jle
mov
fisubs
inc
call
jecxz
mov
in
ss
fistps
adc
out
jmp
mov
mov
inc
ret
int3
push
shll
inc
and
inc
icebp
lea
notb
push
stos
cmc
pushf
push
loopne
mov
cmc
cmpsb
push
fisubl
push
stos
mov
hlt
push
faddl
dec
enter
dec
add
pop
mov
sub
arpl
mov
fidivrl
push
sbb
push
cmp
mov
jb
int3
push
xchg
jae
mov
cmp
in
mov
cmp
sti
sub
fbld
jnp
inc
daa
inc
daa
sarl
arpl
xchg
cmc
mov
fbstp
mov
call
adc
outsl
add
jge
rorb
sub
and
es
aas
popf
int3
mov
int3
sub
addb
fisubrs
stos
imul
mov
jns
sbb
or
mov
jecxz
pop
xchg
dec
repz
mov
inc
data16
add
push
movsb
adc
out
sbb
or
mov
inc
in
dec
dec
test
sbb
sbb
icebp
jmp
es
add
cmp
or
mov
mov
dec
test
aaa
into
das
int
add
shl
mov
sub
mov
mulb
mov
cmpsl
adc
out
pop
roll
sbb
aaa
scas
adc
sbb
hlt
xor
outsl
xchg
jl
mov
add
mov
push
xorl
mov
fnsave
lds
xor
aaa
xor
sbb
stos
dec
xor
in
imul
xor
push
loopne
adc
adc
jl
sub
cmp
sub
push
pop
jns
jne
js
int
mov
inc
jnp
add
ss
lahf
dec
icebp
enter
inc
call
out
xor
and
ss
sub
stos
in
add
sub
add
fisubs
aad
lret
push
lea
pop
pop
add
pop
xchg
and
xlat
jno
pop
mov
cmpsb
jle
cmp
sahf
mov
or
xor
lret
pop
push
and
pop
ja
les
rorl
fs
or
mov
xchg
mov
or
push
cli
mov
xchg
push
test
addb
adc
xchg
mov
xchg
dec
fists
imul
mov
lret
in
push
adc
mov
bound
imul
call
pop
cmp
in
xor
push
and
pop
lock
adc
lea
push
xchg
mov
gs
and
iret
dec
arpl
data16
mulb
cltd
xchg
arpl
cmpsl
in
adc
popw
xchg
xchg
xchg
add
push
insl
mov
lods
sub
push
mov
adc
sbb
rcr
pusha
xchg
jne
cmpsb
inc
xor
jl
jb
add
ja
mov
inc
cltd
fnstsw
stos
mov
sub
out
and
sbb
or
add
pop
outsb
ds
or
movsl
popf
xchg
xchg
xor
fdivl
jecxz
and
inc
cmp
inc
aad
dec
mov
rorb
jl
jo
pop
in
mov
out
dec
jecxz
call
fstps
jno
std
push
push
in
jo
jmp
or
int3
push
add
shll
pushf
je
or
or
mov
xchg
mov
ds
sbb
enter
add
lods
cltd
ret
jl
std
std
push
jno
mov
imulb
outsl
test
inc
ficomps
mov
loop
test
cwtl
pop
rcrb
rorl
jne
jnp,pn
movl
xlat
outsl
push
dec
pop
jnp
adc
jle
std
cmp
inc
mov
stc
das
or
test
mov
sbb
aaa
movsl
sbb
jp
je
sbb
out
sbb
and
mov
pop
divb
aaa
insb
push
mov
adc
dec
xchg
adc
lods
cld
pop
shl
adc
cmpsl
out
xchg
pop
push
pop
cwtl
inc
fcmovb
fisubs
cmp
push
hlt
shrb
aam
repz
fs
fisubl
mov
add
inc
leave
mov
xor
sbb
loope
cltd
mov
adc
sub
and
mov
and
loopne
addr16
mov
je
sub
movsb
mov
add
std
push
leave
jge
sbb
jl
mov
inc
orl
ficoms
das
adc
decb
gs
stc
imul
stc
xor
sub
push
push
jbe
xchg
mov
mov
inc
xlat
xlat
pop
ljmp
jae
fs
addr16
push
sub
adc
loope
push
lea
or
xchg
cli
scas
push
into
mov
loope
movsl
pop
loope
adc
dec
add
lods
mov
ja
in
mov
imul
in
xchg
xlat
jnp
or
lret
aad
add
sbb
sbb
gs
mov
mov
fcomps
aad
pop
popa
je
add
lods
fldcw
sti
fdivs
add
in
xchg
addl
xor
lods
sbb
or
out
pop
cmpb
out
fnstsw
cbtw
and
sbb
mov
inc
mov
stos
push
test
scas
out
enter
stc
and
int
push
cmp
das
test
mov
pusha
sets
xchg
push
inc
arpl
imul
int
loope
jmp
mov
pop
pop
xchg
and
bound
xor
mov
or
adc
cmpsl
dec
dec
lret
xor
mov
sbb
sub
and
adc
stos
pop
ljmp
loopne
push
stos
jp
cmp
push
movsb
or
inc
ret
fidivl
xchg
test
pop
fsubr
or
cmp
adc
in
push
mov
cmpsb
push
mov
push
xchg
cmp
pop
mov
xchg
mov
sahf
xchg
sbb
dec
mov
aaa
push
iret
in
jle
add
iret
xlat
and
in
or
inc
loope
aas
mov
fs
mov
addr16
gs
jns
movsl
xchg
sub
or
cmp
lahf
rcll
mov
mov
push
imul
scas
hlt
fucomip
in
xlat
push
xchg
inc
and
push
cld
pop
js
jl
inc
bound
xchg
cmp
fcoms
xchg
sbb
call
in
bound
adc
add
xchg
jb
popa
jbe
andb
ret
ljmp
popa
ret
test
sarl
adc
test
out
sti
pop
or
dec
jb
imul
fsts
out
fisubs
outsb
loop
jb
insb
adc
fsub
fnstsw
repnz
or
jnp
inc
jno
ja
call
popa
mov
out
sarb
dec
mov
outsb
out
jge
add
push
cmp
mov
inc
jbe
std
mov
push
push
loopne
inc
and
sbb
inc
add
push
xor
add
or
mov
cmp
jnp
shlb
jnp
mov
movsb
jb
jae
movsb
test
add
sbb
or
push
or
into
shrb
mov
das
mov
dec
dec
popa
outsl
jecxz
mov
xchg
push
jo
cmp
jmp
and
xorl
dec
popf
insl
jne
push
push
xlat
pop
jle
lea
mov
adc
stos
pop
mov
jge
and
adc
xchg
add
inc
cmp
mov
mov
movsl
inc
orb
adcl
or
xor
shl
mov
sbb
dec
mov
outsl
out
push
cmp
mov
mov
sarl
ffreep
stos
fnsave
sub
sub
adc
stos
pop
sub
cwtl
add
hlt
or
sub
data16
notb
or
pop
stos
aam
das
jae
popf
cld
mov
sbbl
pop
pop
cmpsb
inc
shll
dec
fcmovbe
or
int3
loopne
cs
pop
lock
jo
mov
inc
fwait
imul
stc
out
lods
pop
mov
test
and
add
gs
loop
outsb
add
lahf
or
mov
arpl
data16
or
insl
inc
je
incb
shrl
aam
movl
addl
cmp
jne
pop
xor
dec
dec
adcb
aam
dec
enter
jno
pushf
daa
fdivp
gs
adc
dec
mov
inc
lea
rorb
and
cs
xchg
sbb
mov
mov
cwtl
div
pop
pop
stos
xchg
lds
cwtl
adc
aam
inc
aad
pop
xchg
push
out
repz
lret
mov
sbb
jo
testl
fists
push
sub
iret
shll
cmpb
test
mov
scas
inc
imull
mov
pop
lods
enter
mov
jmp
cmp
xor
scas
push
cmpsb
lods
movsb
pop
push
js
es
jp
iret
outsb
mov
in
shld
push
shlb
mov
jnp
pop
jecxz
dec
dec
xchg
cmp
push
outsb
daa
roll
outsl
mov
test
cmp
loopne
jo
xorl
xor
add
mov
mov
out
repnz
test
loopne
or
mov
pop
out
inc
sbbl
adc
push
dec
ja
or
insb
std
mov
loopne
cmpsb
movsl
mov
outsb
pop
aad
pop
dec
xchg
out
cmp
xchg
int3
and
out
xor
stc
inc
mov
push
ds
inc
insl
sbb
lea
xor
loop
lds
aas
fdivrl
mov
xchg
mov
pop
aad
cltd
repnz
shr
stc
aas
inc
xor
clc
shlb
movsb
popa
add
fs
jp
fs
sub
mov
in
lods
cmp
lods
lock
mov
hlt
mov
loop
loopne
notl
clc
into
das
data16
push
out
pusha
adc
mov
jecxz
rcr
stos
scas
jmp
imul
sbbl
jmp
mov
mov
nop
and
cmp
mov
jge
lahf
add
into
mov
ret
lock
inc
sub
adc
popf
inc
inc
call
outsl
jp
mov
cmpsl
mov
mov
lret
push
lea
das
scas
mov
jmp
test
sbb
and
adc
sbb
pop
outsl
lret
ret
pop
xchg
pop
mov
pop
sub
and
inc
ljmp
mov
jp
pop
push
cmp
adc
std
xchg
mov
adc
push
cmp
sub
push
test
jmp
lret
enter
clc
lret
lcall
lea
add
in
stc
pop
mov
pop
jae
imul
push
mov
mov
lods
jbe
cmc
popf
lock
xlat
sub
mov
mov
je
add
loope
mov
int
xchg
cmpsl
je
mov
pop
ja
mov
dec
dec
cmp
push
or
hlt
mov
xchg
in
cld
lods
js
scas
cld
inc
aad
mov
cs
mov
adc
add
popa
dec
pop
pop
pop
cmpsl
int
out
or
cltd
jge
wbinvd
jns
push
hlt
je
xor
mov
pop
pop
push
add
add
mov
in
cmp
stc
cmp
mov
scas
mov
dec
adc
xchg
inc
dec
inc
sbbb
or
imul
jae
jmp
and
fistps
jl
aam
bound
xchg
out
jecxz
test
in
jl
lods
sub
jb
loop
jecxz
lret
mov
pop
nop
arpl
popa
cmp
loopne
cmp
imulb
fstpt
jo
ret
in
incb
sub
mov
mov
frstpm(287
dec
loopne
int3
aaa
lret
and
into
dec
lods
fwait
mov
adc
push
mov
fucomip
jmp
jne
clc
rcll
adc
xlat
inc
sbb
or
fists
imul
test
add
cmc
outsl
or
xor
push
fbstp
adcb
sarl
bt
inc
dec
lret
push
adc
fstpl
mov
in
fimull
adcb
or
xchg
pop
add
xchg
stos
pop
and
pop
or
and
push
daa
orl
mov
jg
sub
jmp
in
sbb
sub
mov
cmp
std
jg
mov
rcl
push
dec
adc
jnp
and
cwtl
cmp
xor
enter
push
mov
repnz
aad
sub
and
fidivl
out
out
mov
fstl
sbb
ret
inc
dec
mov
out
hlt
inc
imull
push
test
test
xchg
or
dec
sub
mov
mov
out
inc
in
mov
dec
cmp
out
test
mov
mov
sub
movsl
test
pusha
push
push
test
xchg
mov
mov
inc
in
dec
inc
in
loopne
ja
cmp
push
jecxz
mov
push
push
adc
pop
arpl
mov
dec
fs
adc
or
pop
daa
lock
hlt
jno
mov
xlat
jne
loopne
imul
mov
pop
push
mov
divb
push
jmp
leave
mov
out
mov
or
and
bound
popf
or
sub
mov
jecxz
or
push
jnp
adc
cmp
jno
xchg
ss
es
and
cs
lahf
xchg
mov
rclb
pop
aad
inc
add
add
sarl
and
adc
or
fdivrl
and
mov
int
dec
outsl
or
je
jmp
negb
inc
mov
inc
cli
fwait
adc
fld
cli
cld
cmp
in
mov
pushf
lahf
jbe
imul
jae
in
push
push
jae
rclb
lahf
or
fsubrs
pop
jb
or
jp
xchg
pop
inc
mov
lock
and
rol
xchg
jle
sub
push
imulb
or
push
pop
jp
adc
adc
adc
adc
adc
rcl
dec
cli
inc
push
pushl
push
jge
mov
inc
jns
push
xlat
push
in
xchg
cmp
push
stos
ss
aas
jl
nop
frndint
das
mov
jb
mov
cwtl
jno
inc
xchg
dec
push
pop
jno
fdivl
lret
add
push
pushf
lret
mov
std
fsubp
dec
xchg
fwait
es
loopne
mov
dec
xchg
insl
out
add
push
cmpsl
sahf
rolb
repnz
and
fdivp
xor
adc
lods
pusha
insl
fs
and
mov
jle
xchg
andl
ljmp
pop
jle
add
dec
loopne
clc
jmp
mov
jmp
pushf
ljmp
in
test
iret
cmp
add
xlat
and
adc
out
cmpsb
fwait
mov
xor
adc
les
push
ja
je
sarb
lahf
mov
xor
mov
icebp
cmp
add
sub
fsubrs
adc
int
cmp
jmp
es
add
fiadds
or
sub
mov
pushf
inc
mov
inc
je
imul
nop
gs
rolb
xor
cmp
mov
cmp
adc
insb
jo
ret
lret
cld
ficoml
pop
mov
xor
out
cmp
roll
dec
or
or
mov
orb
push
sahf
inc
adc
cmp
subb
arpl
mov
in
sbb
pop
test
inc
jle
das
jns
xor
sub
mov
mov
jge
add
arpl
cmpsl
pop
mov
dec
jge
lret
adc
dec
xchg
push
int3
xor
jb
jl
jmp
jbe
push
jle
and
or
xchg
sbb
lret
pop
das
mov
inc
ljmp
adc
in
add
imul
div
cmp
adc
ret
inc
sub
add
testl
cwtl
xor
lret
xchg
jl
out
inc
xchg
pop
mov
std
xchg
xor
xchg
push
dec
dec
and
xor
jl
xor
ret
imul
aas
aam
cmp
xor
ret
push
mov
lret
mov
cmpl
jl
xor
adc
imul
jge
sub
push
out
mov
xchg
repnz
mov
scas
jo
sbb
ds
in
jmp
in
int3
loopne
xor
xor
add
cmpsb
test
ljmp
iret
xor
xchg
test
mov
nop
loop
fs
enter
and
cltd
mov
xlat
mov
shlb
adc
int
dec
xor
pop
es
in
test
adc
pushf
adc
aad
insl
sub
push
adc
sub
cmp
fwait
ret
lds
mov
stc
test
add
fsubrs
mov
arpl
cmp
out
testl
cmp
enter
cmp
cmc
fbld
mov
movsb
test
fimull
inc
outsb
loopne
mov
cmp
xchg
sub
ret
les
add
push
jecxz
cld
test
jb
jns
push
xor
out
pop
rorb
leave
xorl
xchg
xor
mov
add
ljmp
mov
lds
push
jmp
jecxz
neg
xor
imull
aas
or
mov
out
fstp
fs
fsubs
sub
scas
xchg
lods
imul
mov
dec
fdivp
jge
in
push
mov
and
andl
jl
repnz
mov
ljmp
dec
fwait
cld
or
inc
cmp
pop
cs
fcmovnu
aad
push
mov
bound
pushf
subb
mov
mov
out
popf
cmc
stc
sahf
les
test
inc
lock
sub
imul
bound
sub
jo
ffree
pop
mov
sbb
or
mov
shrb
adc
xchg
dec
mov
repnz
pop
mov
sub
fwait
and
sbb
mov
jne
repz
jecxz
cmp
loop
dec
and
scas
arpl
ss
adc
test
out
add
mov
mov
jp
pushf
adc
or
dec
mov
clc
rcrb
shr
lds
or
cmp
test
inc
push
mov
test
lods
scas
jns
cmp
pop
xor
jecxz
stc
and
add
lds
sbb
rcrl
mov
add
mov
mov
test
cmp
shl
sbb
dec
das
in
rcl
test
xchg
jmp
mov
push
in
lea
mov
sub
xchg
testb
mov
jp
lahf
sub
and
add
cmp
mov
in
stos
add
dec
push
scas
cmp
in
mov
rorl
rcll
dec
push
and
int
outsl
mov
iret
jns
rorl
or
dec
inc
or
mov
mov
stos
dec
dec
cs
adc
int
lret
arpl
cld
into
push
xchg
and
dec
pop
add
sti
gs
or
mov
pop
outsl
jbe
je
stos
mov
jns
in
jns
in
faddl
mov
lock
mov
pusha
mov
mov
mov
inc
sbb
aas
adc
jge
adc
dec
mov
cwtl
jge
out
je
outsl
xlat
xchg
mov
and
xchg
or
outsb
and
xchg
cmp
and
or
or
and
inc
in
imul
test
or
adc
add
out
mov
adc
int
movsl
es
ss
mov
xor
push
add
push
pop
xchg
push
popa
iret
es
inc
xchg
and
mov
lds
cmp
scas
movsb
leave
cmp
and
mov
cld
pop
test
cwtl
lea
aaa
fisttpll
outsb
and
inc
aad
imul
js
addr16
incl
call
sarb
or
cwtl
out
push
movsl
and
ds
call
int
pusha
popa
cmpsb
outsb
pop
inc
aad
mov
repnz
mov
mov
add
das
mov
add
addps
scas
pushf
dec
adc
pop
in
fcmovb
inc
dec
push
rcll
insb
cmc
inc
in
rclb
xor
mov
das
push
rcrl
cwtl
or
add
cmp
aam
mov
imul
xor
sbb
mov
mov
cmp
push
jbe
inc
adc
insb
cmp
mov
and
add
sub
addb
imul
xor
sbb
mov
imul
enter
lods
das
cld
push
mov
ss
or
push
and
mov
push
aaa
mov
pushf
scas
setp
insl
jns
addr16
pushf
mov
lret
in
jbe
jb
push
ds
cmp
pusha
cmp
fcmove
ja
pop
lcall
inc
dec
push
xor
sbb
into
mov
cmpsb
xchg
cmp
fwait
and
das
mov
ja
inc
out
mov
pushf
les
rcll
adc
mov
pushf
mov
add
sub
mov
movsl
mov
or
dec
les
test
movb
aad
aam
sub
add
sub
aaa
popf
mov
test
int3
fsubrp
mov
inc
lods
mov
shrb
je
nop
xchg
cmc
ret
in
js
jno
icebp
jne
int
hlt
aaa
orl
lods
add
cmpsb
cwtl
nop
test
ljmp
rcrl
sub
ret
xchg
sbb
arpl
and
add
stos
cmpsb
int
pop
cld
divb
inc
xchg
and
enter
dec
push
inc
push
outsb
cmp
xor
pop
push
adc
cmc
scas
test
lahf
mov
pop
cli
rclb
fnstsw
cmp
cld
in
int
test
mov
bound
jo
mov
adc
push
call
test
jo,pt
pop
insw
jle
push
dec
jg
mov
sbb
dec
mov
push
sub
mov
add
movsb
push
fcomip
or
rolb
xlat
out
mov
shll
push
cmp
fbld
sbb
imul
mov
or
ss
mov
pop
out
adc
dec
addr16
lahf
cs
cli
and
daa
push
cmp
arpl
ljmp
inc
or
inc
ljmp
mov
mov
xchg
test
aad
xchg
into
out
xor
aam
lea
cli
movsl
xor
pushf
push
push
arpl
or
xchg
call
fnstcw
lea
lret
rcrb
data16
mov
icebp
push
lahf
lea
pusha
insb
adc
mov
xor
hlt
sub
cmp
inc
insb
mov
xbegin
dec
pushf
mov
das
std
inc
test
jnp
push
dec
adc
adc
ds
dec
push
mov
xorb
mov
dec
clc
sub
mov
sub
adc
dec
sbb
mov
adc
sub
push
mov
sahf
imul
js
lods
dec
mov
pop
add
push
int3
mov
hlt
mov
mov
dec
movsb
out
mov
out
pushf
mov
imul
push
rcrl
jmp
and
or
gs
lock
push
push
pop
sahf
pop
xchg
inc
popf
cmp
icebp
aam
push
loop
and
sbb
imul
push
push
mov
adc
push
int3
ret
dec
sbb
jne
xor
aad
cs
jl
sahf
test
hlt
mov
call
jmp
icebp
xchg
fcoms
pushf
mov
jmp
add
cmc
cmp
fstpt
push
jl
andl
pop
mov
aam
push
xchg
pusha
sub
pop
xchg
cmp
sub
and
popa
shrl
mov
cmpsl
popf
cmp
bound
imul
es
mov
data16
xor
outsl
dec
xchg
add
cltd
lahf
ret
aad
movsl
stos
push
fucom
sub
or
push
imul
or
test
xor
xchg
pop
cmp
imul
mov
scas
sti
loop,pn
cmp
mov
and
std
jp
dec
test
push
iret
dec
clc
xchg
clc
stos
inc
imul
bound
aaa
xor
sub
in
xor
gs
jbe
xchg
sbb
xor
out
cmp
jl
add
jo
loop
push
inc
js
lods
rcrb
jp
sbb
rcll
cltd
icebp
inc
stos
test
jo
jmp
mov
push
bound
loopne
sti
sbb
incl
or
in
incb
or
test
shrb
jns
cmp
push
mov
in
nop
insb
adc
scas
mov
jp
add
movsl
test
add
std
mov
inc
int
fwait
mov
mov
mov
iret
aas
cmpsb
notl
lock
mov
int3
jno
xchg
pop
aad
mov
js
mov
add
and
pop
test
xchg
xchg
mov
mov
pop
push
jp
mov
lret
out
dec
mov
in
push
rcl
lods
sbbl
or
lea
scas
pusha
mov
stos
adcl
je
mov
movsl
xlat
insb
push
rcll
xlat
cmpsl
stc
or
pop
mov
xchg
adcb
lock
lret
cmp
sub
xorb
mov
or
sub
sub
sbb
inc
mov
popf
in
cld
mov
iret
ss
test
cmc
cmp
dec
xor
mov
test
js
imulb
arpl
lahf
and
xchg
sbb
aad
pop
ror
subb
jge
loope
sbb
xchg
pop
cmp
xor
movsl
xor
push
dec
jp
push
shll
pushf
je
pop
mov
cmp
into
in
mov
daa
popa
stos
pushf
hlt
pop
lea
stos
sub
mov
xor
rcr
pop
jne
pop
lods
lahf
cmpsl
dec
daa
or
pop
movsb
xor
mov
movsb
sbb
fs
jnp
fwait
inc
push
push
mov
jl
push
mov
adc
xor
fbld
ss
mov
xor
jp
push
fdivrl
sub
sub
aaa
push
fdivrs
stc
andl
pusha
imul
pop
and
xchg
add
rclb
adc
xchg
inc
sub
add
es
xor
dec
adc
fisttpl
lcall
in
xchg
imul
xor
push
dec
xchg
mov
in
cld
lret
enter
jg
inc
mov
sub
mov
dec
frstor
daa
loopne
cs
sub
iret
mov
in
fmulp
inc
mov
mov
loopne
mov
je
jb
jg
jne
xor
inc
jmp
imul
lcall
fwait
stos
xor
shr
jno,pt
jp
add
push
dec
sahf
mov
in
adcb
scas
pop
loope
in
sbb
push
xchg
rdpmc
incl
pushf
dec
adc
data16
lods
pop
pop
mov
jbe
pop
jmp
pop
fsubs
pusha
mov
addr16
fisubl
cmp
fstpl
fmul
inc
push
cmp
shr
dec
daa
add
mov
mov
dec
test
inc
mov
and
jge
dec
mov
cld
ret
dec
xchg
cmp
pop
xchg
jge
ficoml
push
popf
test
jne
pop
push
xor
sub
pop
lock
xor
push
lods
mov
push
jae
out
add
pop
aad
sbb
test
mov
pop
or
and
mov
inc
mov
inc
or
sar
std
aas
pop
and
mov
push
add
adc
rcr
jo
test
jo
cmp
mov
cmp
cmpsb
cmp
jl
stc
jl
mov
and
jns
inc
or
mov
add
and
dec
repnz
or
inc
sub
inc
rcrl
mov
mov
mov
xlat
repz
jnp
inc
ds
les
mov
in
and
addr16
ret
enter
sub
fcompl
je
mov
popa
imul
test
dec
hlt
call
test
xchg
sub
sbb
lahf
cmpsl
dec
dec
ret
mov
jge
out
push
dec
jmp
test
push
and
shrb
loopne
push
xor
insb
xor
in
push
inc
push
test
rol
mov
adc
adc
jecxz
pushf
pop
addr16
dec
loopne
cmp
cwtl
lea
dec
pusha
jge
and
pop
sub
xor
add
out
mov
mov
sti
shrl
ljmp
or
push
jmp
lret
mov
cmpl
cs
push
call
mov
call
push
sub
jecxz
push
push
add
and
pop
sub
fs
sbb
mov
pop
in
dec
icebp
jp
xchg
divl
hlt
fsubrl
jo
movsb
rclb
mov
jb
xor
push
fidivrl
sub
mov
add
adc
cwtl
xor
xlat
or
in
ja
and
mov
cmp
pop
loop
fsubl
sbb
in
mov
jo
js
add
sbb
fstpt
orl
and
nop
pop
popf
je
xchg
sbb
mov
inc
mov
lahf
or
mov
into
mov
inc
inc
lretw
imul
in
aas
int3
mov
lds
add
out
lock
loopne
pop
mov
push
inc
push
stos
shlb
adc
movsl
inc
pop
xchg
sbb
xor
jmp
mov
cmpsb
icebp
push
cs
ljmp
in
push
inc
icebp
and
xor
pusha
test
add
jle
mov
dec
das
and
cmp
ss
pop
push
jnp
ret
dec
xchg
mov
jge
stos
lcall
mov
jp
cwtl
add
pop
pushf
repz
xchg
jbe
and
js
push
iret
addr16
sarl
pop
sub
dec
mov
and
xchg
std
push
fdivs
lcall
stos
pop
out
aaa
dec
jle
or
dec
sbb
dec
out
cld
add
push
jo
mov
dec
ja
xor
cmp
rorl
push
dec
loope
inc
sahf
sahf
push
mov
pop
out
push
push
and
mov
jns
mov
mov
jae
dec
and
test
or
call
aam
movsb
out
lret
xchg
in
cmp
inc
pminsw
fs
push
xlat
ret
add
mov
data16
xor
cmp
imul
mov
sub
repnz
jo
or
xor
dec
es
sub
or
in
xchg
mov
addr16
insl
dec
xchg
lret
mul
xor
jne
jns
sub
lahf
jno
dec
lods
sbb
push
sti
test
bound
adc
sub
loop
add
dec
jecxz
dec
mov
mov
jb
xor
arpl
mov
sarl
nop
mov
js
xchg
dec
pop
inc
repz
cwtl
decl
pop
pminsw
or
sbb
mov
scas
jo
stos
jns
fwait
pop
out
js
in
sub
insb
lock
xor
cld
mov
or
inc
lods
and
cmpsb
mov
rcr
pop
mov
adc
push
arpl
push
clc
dec
sub
mov
addr16
imul
xchg
subl
mov
sub
xor
inc
test
and
push
mov
xchg
sub
inc
fnstsw
xchg
mov
inc
adc
dec
test
add
adc
fcmove
dec
jmp
jne
cmp
add
mov
xor
pop
adc
and
es
out
lds
mov
dec
sbb
xchg
fistps
nop
jmp
cmp
fs
ret
orl
jo
dec
in
sub
fnsave
into
jg
adc
and
adc
adc
fisubrs
mov
add
dec
xchg
arpl
stc
sub
or
xor
push
popa
push
jno
repnz
cli
fnstsw
jmp
xchg
lcall
test
cmp
subb
mov
mov
adc
scas
jnp
cmp
push
push
out
int
push
sub
or
push
mov
mov
pop
outsl
dec
test
fistpl
iret
push
out
adc
xchg
mov
push
leave
shll
les
xor
icebp
inc
inc
dec
jnp
das
pop
add
push
loop
test
lods
js
or
lret
jb
addr16
fsubs
subb
mov
jle
insl
sbb
loope
ret
xchg
leave
push
gs
adc
cltd
aas
es
lods
mov
int
add
mov
jle
pusha
shll
lock
stc
repz
push
popf
stc
faddl
xor
xchg
cmp
lea
inc
add
test
adc
mov
dec
clc
mov
push
test
inc
mov
ds
sbb
nop
in
jl
stos
xchg
and
mov
adc
push
push
fbstp
daa
lret
ds
repnz
lock
pushl
cmp
cmp
xor
les
adc
sbb
sbb
jae
jnp
pop
cmpsl
shl
mov
or
push
ret
frstor
js
gs
cs
mov
fnsave
push
push
dec
lea
out
fs
loope
cmp
inc
lcall
adc
pop
push
arpl
cmp
iret
inc
inc
xchg
leave
cmp
mov
mov
sbb
jg
outsb
int3
popf
mov
jecxz
fimuls
jns
mov
sbb
in
out
pop
ret
lods
pop
sub
pop
call
mov
loope
imul
aam
add
xor
test
pusha
add
test
pop
inc
inc
lods
adcl
sub
mov
sbb
mov
and
pusha
sbb
sub
pop
push
test
push
jg
int
push
int
les
testb
jno
jbe
enter
xchg
mov
jecxz
push
mov
movsl
push
stos
cwtl
dec
xor
insl
call
loop
dec
mulb
jp
sub
jg
xor
lahf
in
push
roll
jbe
xchg
inc
repz
adc
sti
rorl
and
jl
ret
jecxz
mov
add
aad
sbb
cmc
loop
pop
testl
mov
aam
lahf
int3
push
gs
es
add
xchg
sub
jmp
cmpsb
cltd
jnp
inc
pop
inc
outsl
push
negl
ss
clc
je
pop
sarl
or
xchg
pop
mov
packuswb
popf
mov
pop
jo
pop
test
or
xor
adc
pop
loope
test
jle
fwait
outsb
pop
sidtl
xchg
xor
push
icebp
or
hlt
push
adc
sbb
popa
and
test
jne
or
popf
test
cwtl
lret
iret
mov
mov
fsubs
outsl
stc
sub
mov
sbb
push
mov
test
dec
sub
in
pop
mov
test
inc
mov
mov
jno
popf
adc
add
fdivs
add
test
and
xchg
repnz
jecxz
sub
stos
ret
xchg
cmp
mov
xor
rol
outsl
iret
mulb
lcall
fwait
sub
pop
and
push
call
adc
fidivl
fidivrl
xor
shll
sbbl
in
arpl
dec
pop
dec
imul
mov
and
data16
cmp
mov
push
lods
pop
outsb
sub
mov
sahf
pop
sti
les
mov
cmp
divb
mov
cmpb
popa
cmpsb
cmp
addr16
xchg
stos
or
int
icebp
sub
sub
ljmp
jl,pn
add
aaa
xor
mov
inc
sbb
fidivl
mov
pop
push
push
sbbl
imul
sub
xlat
sub
jae
xchg
push
dec
dec
jb
insl
in
in
jnp
insl
push
test
loopne
xor
pop
mov
fsubr
lock
jp
outsl
loope
adc
insb
fiadds
dec
mov
shll
fdiv
push
mov
fadds
jecxz
out
mov
fisttpl
std
or
loop
outsb
mov
sahf
pop
jo
aam
sti
test
xchg
push
mov
xchg
insl
test
popf
pop
push
sub
adc
mov
pop
loopne
pop
and
inc
stos
pop
out
add
aaa
nop
xor
addb
lret
pusha
ret
and
fmuls
addr16
lcall
popf
out
shl
test
mov
arpl
fs
cmpsb
daa
jnp
call
dec
test
xor
pop
xchg
pusha
rcll
ficomps
or
dec
push
lods
cwtl
lock
or
jo
fs
jo
mov
jo
adc
sub
cmp
inc
push
shlb
push
add
int
test
fildll
adc
dec
fcmovu
sbb
inc
cmc
push
pop
cmp
in
xlat
hlt
mov
sbb
push
fs
popa
dec
mov
pop
ss
call
jb
mov
jl
cmp
test
and
mov
iret
or
ficompl
data16
pusha
dec
faddp
fildll
and
cmp
fwait
cmpsl
cli
or
dec
cmp
aas
aaa
adc
mov
das
lods
or
test
rcll
popa
jbe
xchg
sub
std
xor
jmp
out
jl
mov
add
and
adc
add
inc
mov
adc
jmp
or
loop
jle
mov
add
stos
and
add
hlt
popf
push
push
dec
add
dec
jo
cli
outsb
loopne
fdivs
push
cld
mov
aam
stc
push
outsl
test
cmp
push
fdivrs
xor
sbb
in
mov
lods
jg
imul
roll
add
mov
call
sbb
xchg
add
ja
rcl
call
stc
daa
cs
mov
lcall
das
jg
rclb
sub
cmc
push
aad
dec
inc
sti
ret
call
stos
mov
inc
aam
daa
push
mov
in
lds
and
daa
mov
mov
test
popf
mov
mov
push
cmp
mov
sbb
out
inc
dec
insl
adc
pop
jbe
sub
cmp
gs
xor
jnp
mov
xchg
xchg
xchg
or
cmp
in
leave
in
cmpsl
sahf
lds
adc
rcr
ja
or
dec
stos
or
mov
jle
pop
out
cwtl
push
push
jmp
les
xchg
lods
roll
push
xchg
stos
jne
inc
outsl
out
mov
adc
jbe
lret
js
and
sub
push
adc
fisttps
ljmp
stos
xlat
jmp
jl
sbb
fwait
decl
pop
xchg
shrl
and
jle
push
fstp
popf
leave
push
movsl
outsb
cltd
sbb
push
lock
gs
xor
add
pushf
sbb
outsb
xchg
subb
cld
es
cmpsl
add
inc
xor
push
cmpsl
jnp
fs
test
push
dec
jae,pt
jmp
mov
pop
cwtl
roll
cwtl
push
aaa
je
sbb
out
insl
jbe
cmp
sbb
arpl
mov
mov
dec
setnp
mov
sti
jbe
test
cmp
sub
imul
ss
sti
adc
pusha
bound
mov
or
fbld
pop
mulb
orl
fildl
out
es
cld
movl
iret
mov
dec
cmp
pop
mov
lea
ffreep
mov
xchg
pop
and
push
out
xchg
jno
push
out
xor
or
push
xor
test
jmp
inc
mov
cmpsl
ficompl
mov
mov
jge
xor
sub
movsb
out
jmp
cli
rcrl
sub
enterw
xchg
ficompl
paddw
das
cmpsb
and
push
in
cmpb
jle
xlat
cld
inc
js
mov
mov
into
int
pushf
shll
pop
dec
in
loopne
or
pop
xor
xchg
data16
mov
cmp
pop
add
xchg
fstl
xchg
shr
shll
sub
roll
push
jecxz
xchg
hlt
sub
adc
cmp
jp
push
xchg
sub
mov
xor
daa
mov
lret
mov
push
dec
stc
pop
aad
mov
add
xlat
mov
cli
xchg
mov
pop
cld
xor
jle
add
pop
dec
out
xchg
shrl
add
xor
aam
or
ucomiss
cmpl
xor
sbb
push
inc
imul
inc
sub
mov
das
insb
clc
push
pop
inc
jmp
in
mov
mov
mov
fsubrs
adc
inc
int3
adc
dec
xchg
repnz
cwtl
into
sub
ja
es
add
fdivrs
mov
push
aaa
andl
sbb
ret
out
xor
insb
dec
or
add
cmp
adc
pop
ds
xor
push
inc
out
dec
insb
ds
pop
cmpsb
cli
mov
cmc
xchg
pop
xor
insb
xor
test
xchg
cmp
ja
jbe
out
mov
or
adc
ret
std
pop
mov
cltd
and
cmp
or
pop
jnp
enter
clc
lret
int3
inc
into
imul
or
gs
cmpsb
testl
and
and
movsb
mov
mov
popa
mov
xchg
cmp
push
inc
inc
lret
lods
out
into
mov
mov
aas
xor
inc
out
mov
popf
push
lds
xor
mov
push
out
mov
je
pop
sub
pop
andl
mov
jg
loope
and
jg
sbb
mov
int3
in
lods
popa
jae
mov
mov
xor
pushf
xor
inc
push
sahf
and
aam
mov
in
dec
adc
ja
ja
cmovge
mov
xchg
push
stc
add
adc
mov
fs
aad
js
dec
in
test
into
in
dec
xlat
pop
adc
es
test
and
xchg
data16
aam
dec
mov
fimull
imul
stos
ja
rol
pop
cmpsb
pop
xchg
lods
or
mov
test
jg
jge
adc
lcall
clc
inc
pop
jg
sbb
adc
test
lea
movl
sahf
clc
jge
scas
mov
add
ss
add
or
lcall
rcrl
test
aam
shl
outsl
lods
jp
pushf
rol
xor
cmpsb
mov
out
test
clc
pop
xchg
push
sub
pop
pop
sbb
cwtl
or
dec
icebp
xchg
add
into
in
cld
jb
bound
and
cwtl
mov
test
inc
imull
and
cs
pop
xorl
sub
mov
clc
pop
imul
sbb
and
cmp
mov
hlt
ja
mov
and
bound
mov
jno
sub
mov
int3
mov
xor
push
andl
sbb
orl
or
ds
mov
push
test
push
cmc
adc
push
push
cmpsb
jg
push
mov
xchg
or
rcrb
push
adc
fdivl
push
and
jecxz
mov
jecxz
xchg
pop
int3
mov
jmp
xor
and
lahf
mov
mov
sbb
lret
add
repz
or
pop
jecxz
arpl
push
xchg
loopne
jl
cmp
and
out
cmpl
jp
sbb
sti
jbe
and
xorl
sbb
std
pop
fmuls
test
hlt
or
daa
jnp
xchg
or
lret
popa
sahf
icebp
add
lret
ss
mov
lock
imul
pop
sbb
sub
subl
push
push
shr
movsb
js
cs
loope
insl
aad
icebp
mov
cs
push
jmp
test
cmp
mov
or
repnz
dec
aas
mov
xor
cwtl
je
push
pop
mov
push
xor
pushf
ficompl
lret
imul
mov
sbb
mov
pushf
mov
sti
adc
mov
dec
inc
adc
lods
roll
or
popf
lods
ret
lds
and
push
pop
sbb
aam
faddp
sti
sub
push
cld
pusha
shll
ret
imul
sbb
pop
jg
xchg
jb
and
insl
sti
adc
movsb
adc
push
mov
fisttpl
push
pop
ret
jne
cwtl
mov
mov
jne
test
add
cmp
idiv
lea
sbb
nop
add
js
inc
pop
pusha
test
addr16
dec
fwait
mov
jae
add
add
cli
dec
add
std
decb
enter
inc
lcall
in
xor
shlb
xor
in
xchg
sarb
lret
fildll
mov
dec
jae
adc
inc
lods
xlat
push
sbb
jle
fnstenv
or
enter
inc
mov
pushw
sti
test
mov
jbe
inc
test
jnp
mov
nop
pop
pushf
sub
jl
mov
mov
in
sub
xor
mov
mov
out
xor
popf
lods
jnp,pn
in
jnp
sti
mov
stc
inc
xor
pop
mov
sub
leave
ficoms
lock
movsb
jmp
ja
xchg
cld
in
sahf
in
mov
jo
push
dec
jg
xchg
lret
push
jne
cmp
test
sub
cmp
adc
out
adc
add
dec
movsb
in
cli
pop
rclb
mov
mov
push
mov
sub
adc
rclb
testb
add
std
inc
iret
jo
pop
and
mov
adc
mov
insb
dec
ficoms
insl
scas
fmuls
icebp
fistps
adc
fisttps
out
dec
subl
stos
aas
xchg
sbb
aas
sbb
xchg
xchg
cmp
lahf
outsb
test
aad
mov
dec
shrl
add
bound
cwtl
lret
push
lods
cmp
jne
inc
or
add
ret
push
mov
mov
je
mov
and
mov
sbb
mov
in
push
shll
mov
shll
pushf
lods
jb
mov
dec
mov
stos
loop
in
sbb
dec
jae
xchg
add
push
xchg
fildl
hlt
insl
sub
and
sub
outsb
das
lahf
sbb
xchg
dec
stc
lret
lds
add
mov
iret
or
adc
sub
dec
add
mov
sbb
out
test
outsl
push
incb
jbe
jmp
ss
lahf
jne
int3
cmpb
ficoms
pop
shll
inc
xlat
cmp
mov
inc
ficoms
mov
cmp
sub
cmp
push
push
lahf
fldt
lahf
mov
iret
or
add
cmp
mov
sbbb
loopne
iret
mov
fcmove
adc
movl
push
clc
fildll
jb
cmp
add
jbe
popf
and
jo
push
mov
test
xchg
in
sub
inc
mov
adc
loope
ds
inc
xor
mov
sub
push
xchg
rcrb
jp
add
dec
push
push
inc
mov
int3
pop
loop
adc
jae
pop
mov
sbb
loop
mov
nop
es
int3
push
in
xchg
lock
mov
inc
xor
jp
loopne
pop
je
ret
js
lret
adcb
outsb
imul
loop
xlat
mov
lods
out
xchg
push
xlat
jns
push
xchg
xchg
lcall
into
mov
cmp
lds
ficoms
jb
mov
mov
mov
jp
pop
jge
mov
pop
daa
fists
fadds
cmpsl
cli
mov
fistl
adc
mov
rolb
adc
sahf
into
stc
out
fcoms
jge
mov
cs
test
in
push
jbe
call
inc
aas
fs
stc
pop
dec
inc
cmp
dec
jns
xor
in
mov
inc
or
pop
mov
insb
xchg
cmp
and
cli
sub
dec
nop
inc
lods
stos
cmc
rcrl
pop
inc
out
enter
ds
lret
adc
repnz
jp
mov
dec
add
and
loope
je
nop
pop
cltd
push
dec
pop
mov
inc
pop
inc
std
and
jo
stc
push
add
sub
ljmp
das
dec
stos
daa
mov
popf
enter
pop
mov
bound
xlat
push
mov
xor
fcoms
push
mov
pop
scas
cltd
jg
inc
fisubs
adc
jg
xor
stos
nop
repnz
fs
fidivrs
xor
sub
movsb
data16
mov
push
ss
jne
dec
shll
shrb
xorb
shll
into
lret
clc
cli
push
xchg
andl
fcoms
cmp
pop
mov
and
insl
adc
xor
outsb
adcl
outsl
mov
gs
jg
mov
pusha
jo
notb
call
popf
pop
dec
inc
fmull
lods
ljmp
rorb
mov
lds
push
dec
loop
mov
test
insb
sbb
push
fisttpl
mov
inc
aaa
lock
push
jo
xor
push
loope
loop
mov
imulb
mov
or
mov
shrb
mull
ficoms
push
stc
rcrl
das
sub
dec
xor
iret
mov
lea
adc
xchg
mov
lds
cmpsl
cs
or
imul
test
jl
jl
xchg
data16
cmp
xchg
and
dec
sbb
bound
dec
cltd
mov
or
gs
rclb
call
mov
pop
ds
mov
or
sub
lcall
fnstcw
cwtl
xchg
jnp
push
out
fsubs
ds
lods
fldt
and
lret
jmp
and
adc
lahf
and
cmpsb
sar
out
cli
mov
mov
ljmp
stos
scas
push
daa
ret
dec
cmp
and
mov
cmp
sti
loope
clc
sbb
inc
test
cld
movsl
pop
xchg
push
or
aam
lahf
mov
lea
aaa
fstps
jle
inc
loopne
mov
jnp
xchg
jns
and
fldlg2
fwait
out
sbb
mov
imul
inc
das
inc
das
scas
in
and
push
hlt
arpl
mov
test
jno
fidivl
adc
mov
outsl
popa
in
mov
push
or
sti
shlb
pop
dec
mov
mov
xchg
add
pop
lods
add
mov
xchg
lret
aas
mov
sbb
lret
pop
fistpl
rcrb
xchg
xchg
sahf
fldenv
loopne
repnz
mov
js
add
ljmp
fists
cltd
mov
addr16
lcall
adc
cmpsb
nop
cwtl
subl
fcomps
mov
addb
gs
inc
movsl
clc
mov
push
mov
cmc
cmpsl
inc
push
sti
inc
or
mov
call
clc
mov
jl
sub
dec
and
movsb
push
loope
jecxz
mov
sbb
daa
pop
sub
sub
clc
cmp
test
adc
scas
fistpl
xor
mov
fiaddl
fs
push
shlb
jp
jo
xchg
cmp
xchg
call
adc
pusha
addl
out
dec
cmp
jns
mov
cltd
dec
call
cmp
cmp
inc
pop
es
add
dec
fists
lds
rcrb
add
std
xchg
add
push
dec
test
fisttpll
int
stos
mov
out
add
leave
mov
xchg
dec
in
mov
scas
cmpsl
inc
pop
push
sbb
add
punpckhwd
mov
dec
sub
pusha
test
mulb
xchg
cmp
dec
inc
icebp
jns
stos
or
xorb
mov
and
loope
pop
xor
jae
push
cmp
daa
outsb
stos
lods
jg
sti
add
std
enter
loope
inc
or
mov
pop
add
jnp
and
aas
inc
lret
mov
imul
pop
and
sahf
pop
int3
sarb
push
repnz
lods
jg
pop
or
dec
ret
jo
out
add
test
and
outsb
mov
ror
mov
dec
test
rcl
rcr
std
sbb
xchg
add
jmp
inc
or
and
jns
push
mov
add
sbb
loopne
leave
decb
xor
pop
loopne
jno
mov
lods
std
imul
adc
push
pop
push
adc
pop
fs
inc
inc
push
adc
or
gs
sub
sbb
xchg
leave
movsl
mov
cmp
dec
les
fstpt
in
dec
dec
lcall
dec
in
push
outsb
sbb
xor
push
mov
testl
jp
mov
pop
and
jne
push
cli
pop
inc
lea
adc
enter
scas
sbb
inc
or
nop
push
popf
insb
xchg
mov
pusha
mov
sbb
or
inc
xor
push
mov
cs
cli
mov
js
adc
loope
mov
inc
cmpsl
and
pusha
sub
add
jns
and
sahf
shlb
inc
fbld
and
outsb
test
fidivrs
dec
adc
push
sbb
dec
rclb
jb
clc
dec
push
andb
in
inc
pop
arpl
arpl
or
jp
pop
les
out
pop
fs
test
xor
and
dec
cmp
mov
cmp
inc
pop
sub
sti
sahf
lock
mov
inc
push
inc
cmp
inc
sub
aad
pop
push
inc
push
rorb
sub
push
popf
adc
dec
jp
push
mov
adc
mov
xchg
adc
popf
add
sub
out
pop
ret
pop
pop
mov
hlt
popf
mov
lea
inc
jnp
rcrl
gs
neg
nop
mov
popa
mov
pusha
movsb
adc
cwtl
xchg
loop
xor
jl
push
inc
mov
adc
pop
mov
fwait
adc
lods
leave
sbb
cmp
bnd
dec
movsb
bound
xor
jns
js
in
push
mov
pop
push
int3
in
jge
test
add
push
mov
cmp
lret
loop
jecxz
add
sub
fstpl
fcompl
shlb
push
inc
dec
shl
jg
int
pop
cmpsl
imul
pop
aaa
mov
sbb
imul
sbb
mov
jge
outsb
not
insb
add
sub
add
sbb
mov
mov
mov
fistpl
pop
dec
mov
xlat
push
mov
or
movsl
inc
mov
push
jecxz
test
mov
in
sbb
lret
loopne,pt
faddl
mov
dec
ljmp
mov
lock
pop
subl
jno
pop
and
out
add
sbb
push
dec
sti
hlt
lea
cmc
fimuls
sbb
ss
push
jne
jns
mov
cltd
jo
and
push
mov
xchg
mov
pop
lods
mov
dec
xchg
xchg
in
xor
sbb
in
add
mov
fsub
push
aas
out
stos
scas
aas
cmpsl
or
pop
mov
push
cmc
mov
or
push
jno
pop
xor
in
or
pushf
xor
in
iret
lea
inc
adc
mov
subl
mov
js
into
sbb
jmp
rcrb
fidivl
sub
pop
cmp
adc
jb
loopne
sub
ret
xlat
pop
fisttpl
or
and
or
rorb
push
orb
in
inc
shll
pop
scas
xor
test
imul
xor
in
mov
push
mov
xchg
add
shll
sbb
and
stos
push
roll
ret
cld
dec
mov
movsb
ljmp
sti
or
scas
pop
pusha
enter
push
aaa
cmp
dec
add
mov
and
and
cmp
dec
fisubrs
xchg
repz
jae
mov
out
dec
or
xlat
lret
push
and
mov
shrb
jno
pop
sti
cli
or
imul
lcall
jmp
jle
leave
ficomps
add
pushf
outsb
fmul
cli
jno
mov
sbb
push
repnz
aam
loop
rclb
cmp
sbb
or
xchg
sub
cld
cmp
sub
mul
movl
cmp
scas
fmuls
mov
mov
rolb
mov
shl
mov
inc
pop
mov
pushf
cld
adc
mov
xchg
pop
mov
js
into
mov
mov
mov
cmp
cmp
jg
iret
out
inc
jg
lods
xchg
test
leave
mov
adc
mov
or
push
xchg
adc
mov
repnz
scas
das
dec
cltd
loopne
inc
fwait
lods
insl
mov
icebp
jbe
xor
movsl
adc
lods
push
or
push
sub
jg
pop
movsl
pushf
outsb
and
jae
testl
mov
jmp
sub
jge
xchg
movsl
cmp
fbstp
scas
pusha
sub
rep
gs
cmpsl
addr16
scas
sarb
push
mov
jmp
xchg
add
add
out
dec
ret
sti
and
cmp
add
mov
mov
pmaxub
in
push
aad
dec
push
stos
dec
jnp
push
in
insl
lods
int3
repz
loop
lret
movsl
movsb
mov
filds
and
shrb
mov
mov
mov
pushf
or
xchg
and
das
or
mov
aas
js
filds
mov
cmp
cli
mov
jae
push
stos
das
popf
xchg
mov
das
mov
jmp
adc
movsb
loop
xor
push
mov
jbe
dec
loop
adc
mov
sbb
jb
loop
loopne
push
stos
mov
shlb
mov
fcmovnb
xchg
lds
fmulp
sbb
xlat
push
sub
sub
and
decl
inc
sub
lea
adc
call
test
imul
push
movsb
arpl
gs
in
scas
test
cli
arpl
push
jne
xchg
das
or
and
hlt
lods
scas
jns
dec
stos
dec
mov
mov
sub
imul
mov
mov
popa
lock
loope
mov
cmp
or
rclb
out
jb
cli
jno
xchg
push
xor
xlat
cmp
xor
xchg
pusha
sbb
cwtl
out
in
xor
xchg
lock
cmc
decl
mov
pop
mov
sub
push
rcll
inc
mov
ljmp
daa
sub
adc
xchg
lret
fldln2
cld
sti
repnz
repnz
mov
dec
cmp
inc
add
mov
scas
adc
xchg
dec
repnz
inc
dec
add
cmpb
popa
ja
aam
adc
xchg
pmulhw
jmp
test
aas
cmp
into
jg
jno
xor
movsl
clc
test
cmpl
mov
lret
fldcw
mov
and
popf
iret
mov
pop
out
dec
mov
fldl
mov
mov
arpl
testb
fdivl
mov
mov
sti
jp
enter
aad
xor
add
xor
cmc
xor
in
imul
dec
adc
sub
hlt
jb
fsubl
enter
add
pushf
mov
push
xor
xor
lock
pop
xchg
dec
pop
and
lret
xor
sub
pushl
stc
aad
jmp
inc
std
and
sbb
xor
sub
xchg
cmp
not
pop
sbb
fsubl
sub
adc
mov
pop
out
gs
fdivrl
mov
sub
jmp
fwait
push
iret
sbbl
cmpsb
pop
sets
insb
xlat
in
popa
jne
jnp
leave
cli
adc
testb
orb
push
add
scas
loope
sbb
js
jl
pop
sahf
pop
mov
punpckhwd
mov
lahf
cmp
cs
sub
fadd
jno
xchg
inc
jle
mov
adc
dec
in
lock
outsl
jg
dec
pushf
addr16
xlat
jnp
rclb
and
pop
dec
sbb
or
test
adc
mov
sbb
dec
dec
cltd
dec
lret
popf
pusha
enter
push
lods
adc
adc
xchg
leave
flds
mov
add
mov
pop
aaa
ret
jecxz
mov
pop
loope
hlt
cmp
lds
sbb
or
pop
call
movntps
jge
into
push
mov
ret
popf
jmp
fwait
push
sub
aas
fldenv
sbb
fcmovnb
js
es
xor
iret
mov
aam
mov
xchg
mov
out
lahf
fldl
andl
mov
les
jne
xor
xor
clc
shrl
lcall
jl
shrl
jno
cmp
das
aam
adc
rol
cmp
in
f2xm1
push
mov
stos
sbb
es
push
mov
fidivl
stos
mov
ljmp
jns
add
xchg
gs
lds
inc
dec
loop
lahf
jle
mov
jl
cmp
inc
shl
ljmp
mov
mov
mov
sub
or
adc
data16
ds
or
flds
das
mov
pushf
inc
push
leave
imul
insl
cmp
sbb
lcall
hlt
dec
fcoml
add
popf
sbb
push
sti
bound
or
mov
jne
cli
adc
inc
fwait
xlat
movsl
cmpsb
add
loopne
fdivrs
les
or
jge
test
push
mov
subb
pop
je
imull
dec
fldenv
mov
or
push
arpl
js
pusha
cmpsb
in
pop
sbb
shll
push
hlt
enter
jp
mov
mov
sti
cs
lret
inc
jo
sahf
cmpsb
cmp
adc
pop
dec
mov
push
sub
dec
dec
enter
icebp
and
mull
mov
pop
or
insl
cmp
dec
data16
sbb
jno
xlat
out
jb
cwtl
cltd
lea
pushf
insb
xchg
mov
pop
mov
daa
pop
fsts
dec
mov
push
test
mov
xlat
rol
cmpsb
ss
loope
ret
xchg
stc
xchg
dec
jno
and
sbb
mov
jmp
stos
and
push
cmpsb
fsubr
rcll
aad
or
pusha
or
push
ret
addr16
fsubl
push
mov
andl
jmp
xchg
sub
inc
into
sbb
mov
rcl
lock
jne
push
mov
xor
add
aas
out
mov
pop
pushf
dec
jbe
mov
imul
and
jl
jl
add
insl
cli
add
push
push
adc
subl
hlt
mov
sahf
cwtl
shl
mov
leave
jg
mov
dec
fistps
pop
inc
imul
ljmp
lds
xchg
sbb
or
mov
jp
mov
or
mov
lcall
sbb
push
pop
jmp
inc
ret
add
insl
bound
or
pop
into
jg
in
cltd
and
sub
scas
push
jno
cmpsl
xchg
icebp
movsl
mov
mov
xchg
xchg
cmp
adc
mov
xor
movsb
add
jno
shr
stos
popf
stc
int3
adc
dec
pop
fdivrl
lock
test
in
into
shl
push
roll
sbb
push
inc
xchg
je
loopne
mov
mov
mov
add
lahf
mov
pop
push
push
push
mov
push
les
cmp
stos
aaa
or
out
xchg
andl
jp
icebp
sbbl
aaa
imul
inc
cmpsl
mov
sbb
outsb
dec
mov
add
movsl
add
xor
int3
addl
daa
adc
jl
mov
cmp
xor
push
push
arpl
int3
pop
insb
ror
pop
xchg
dec
scas
sbb
ds
sub
imul
cli
and
sbb
dec
les
jp
pushw
and
cmpsl
jmp
mov
test
sub
into
cmc
test
in
inc
push
push
movsl
cltd
dec
imul
lods
jp
inc
dec
xchg
xchg
push
sub
data16
stos
imul
push
outsb
mov
pop
clc
rcrl
std
lock
iret
adc
or
xchg
movsb
mov
mov
and
ja
sahf
divl
imul
aad
and
lret
mov
fwait
ds
stos
dec
fstps
xchg
and
adc
inc
and
pop
sti
daa
cwtl
shl
mov
es
les
push
dec
xor
xor
es
std
mov
or
into
pop
bound
cmp
test
iret
int3
or
push
repnz
cwtl
clc
xchg
dec
imul
xchg
xchg
cs
pop
xlat
push
and
int
jmp
out
xlat
mov
push
stos
inc
or
clc
push
adc
cmp
xchg
xchg
or
pop
mov
lock
fsubrl
fwait
out
mov
das
adc
pcmpeqw
test
into
push
aas
out
jle
sub
out
add
sbb
xor
fmull
cmc
mov
dec
lahf
fs
xor
add
adcb
rolb
mov
push
or
or
rorl
and
sub
fwait
lahf
mov
cli
test
js
xorb
setb
inc
arpl
test
enter
lock
cmp
xor
rcll
add
call
mov
mov
or
inc
leave
sahf
mov
imul
addr16
xchg
popf
pop
and
and
mov
ds
cmp
pop
mov
xchg
xor
sahf
cli
and
xchg
push
stos
mov
lods
xchg
fucom
and
sqrtps
shlb
fcoms
les
ds
pop
mov
adc
inc
inc
aas
cmpsl
add
outsb
jge
test
adc
xor
xor
orl
cld
pop
cmp
fucomip
inc
outsb
test
gs
sbb
cmp
push
out
bnd
jns
inc
stc
cmp
in
inc
mov
movsb
clc
js
pop
enter
ds
inc
cmp
jle
cmp
jno
aaa
fxch
stos
cmpsb
lods
int3
lods
aad
push
push
test
insl
add
hlt
scas
adc
adc
out
inc
rcrl
cmpsl
lock
scas
cmp
pmovmskb
cmpsb
adc
and
popa
and
shll
and
adc
add
and
sbb
addr16
scas
jb
sbbl
mov
shlb
movsb
jns
pop
das
adc
xchg
or
sbb
jmp
xchg
jp
mov
jo
add
fdivs
ljmp
aas
sub
andl
aad
mov
and
jb
dec
adc
iret
ss
sub
addps
xor
push
aaa
fnstcw
mov
dec
or
subb
cmp
add
repz
jns
xchg
loope
inc
iret
pop
bound
lods
arpl
adc
push
fwait
in
cmp
ret
ja
imul
int
cmp
cmpsb
adc
adc
arpl
outsb
mov
or
pop
out
push
cmp
or
out
xchg
sbb
adc
push
pop
add
sub
mov
push
out
pop
pop
push
out
lret
fwait
clc
inc
sti
inc
notl
xchg
push
iret
cwtl
mov
outsb
mov
imul
mov
enter
pusha
pop
inc
pop
icebp
mov
test
sub
and
aas
mov
add
pop
je
or
fstpl
mov
adc
jecxz
gs
and
push
adc
xor
cmp
mov
stc
adcb
call
fistl
pop
add
jle
out
mov
std
push
sub
inc
xor
stos
inc
or
jle
sub
jo
scas
sbb
hlt
inc
xchg
lahf
adc
aas
fbstp
dec
adc
mov
sbb
adc
lret
xorb
or
test
daa
and
outsb
mov
add
mov
lock
push
outsl
fs
inc
push
aaa
jnp
fisubl
adc
cltd
cmpsb
fucomi
mov
jnp
test
repz
adc
xchg
push
je
adc
mov
or
int
insl
pop
mov
dec
adc
in
push
jnp
pop
leave
xchg
repnz
mov
repnz
adc
xor
stos
test
xchg
mov
push
adc
outsb
arpl
outsb
in
and
das
mov
mov
sbb
add
push
loopne
aas
add
sub
jp
push
xorb
cs
in
out
lcall
and
lds
mov
cmc
mov
enter
dec
mov
bound
sahf
xor
pop
adc
push
cmp
and
popf
mov
sbb
imul
push
mov
scas
mov
es
mov
adc
cmp
cmp
push
aaa
cmp
mov
out
sbb
sub
divl
inc
sbb
push
jnp
and
sub
mov
outsb
repz
or
xchg
cli
pop
orl
insl
dec
jp
pop
dec
dec
push
xor
mov
adc
pop
mov
ficoms
push
inc
mov
js
inc
mov
in
ja
jnp
jp
scas
or
mov
negb
in
rolb
mov
add
popa
xor
int3
dec
mov
inc
loope
ljmp
lods
dec
xor
mov
aas
lods
inc
mov
shlb
call
and
lods
pusha
push
aas
pop
rclb
cwtl
lcall
cmp
and
cmpsl
cmp
inc
push
jmp
jle
xchg
out
lret
daa
repnz
pop
pop
and
xor
iret
in
cmp
rolb
popa
xchg
insb
xor
fs
lcall
jg
aad
sbb
sbb
xor
pop
mov
imul
out
and
fcmovne
clc
jecxz
push
fidivrl
cmp
dec
mov
dec
lret
dec
mov
or
push
stos
and
xor
or
ja
das
sub
cmp
shll
push
std
daa
adc
arpl
ss
in
jmp
pop
xor
jb
out
cmp
jg
mov
fsts
inc
and
outsb
or
int
idivb
pop
insl
in
and
fstps
push
pop
stc
mov
mov
rcrb
inc
xchg
rorl
fcompl
dec
rclb
sbb
inc
addr16
test
mulb
sub
in
dec
mov
leave
mov
bound
aaa
test
cs
repnz
sbb
or
xor
out
mov
stc
adc
mov
sub
mov
fs
jmp
out
xorb
icebp
mov
mov
test
mov
add
lods
push
pop
ljmp
sub
jne
scas
inc
jns
push
pop
cmp
aad
jle
pop
bound
jbe
add
fidivs
add
jo
sti
cmpsl
scas
xchg
mov
nop
addl
xor
cs
mov
clc
rclb
imull
das
sub
adc
xor
movsb
pop
je
ret
popf
adc
fwait
sbb
fdivr
jno
pushl
cmc
rcrb
mov
xlat
aad
jmp
movsl
out
lret
test
xlat
bound
xchg
dec
sbb
inc
rolb
dec
xchg
ljmp
loop
adc
out
enter
jne
loope
xor
sarb
in
jmp
mov
dec
jp
add
sbb
ret
popl
leave
scas
lret
cmp
xorb
xor
pop
ret
and
sub
je
mov
int
xchg
fisubrl
mov
iret
jge
js
aam
xchg
mov
mov
xchg
xor
aas
and
fstps
cld
mov
lret
pusha
mov
mov
lret
outsl
testb
dec
mov
cvtdq2ps
bound
iret
cmc
int
std
xor
xor
loope
sarl
subl
cs
or
jne
push
and
test
ficompl
mov
sub
xlat
or
ljmp
imul
push
cld
pop
or
mov
stc
popa
clc
or
cmp
mov
out
out
mov
ficomps
jo
cmpsl
rcrb
test
nop
out
lods
mov
adc
ss
lods
dec
outsl
mov
in
fildl
test
leave
ds
ss
nop
pushf
pop
pop
dec
or
sub
add
das
shrb
decl
and
mov
xor
shll
xor
enter
loop
mov
adc
add
mulb
fdivl
repnz
shl
xchg
mov
sub
pop
adcl
scas
mov
iret
push
mov
gs
xchg
dec
or
stos
ds
gs
aas
xchg
mov
xor
mov
xchg
dec
gs
roll
cmpsb
lds
jp
sub
das
xchg
mov
sub
sub
imul
in
ds
cmp
jp
daa
cmp
inc
xor
cmc
cmp
mov
cwtl
or
sbb
aaa
addr16
and
ret
mov
es
inc
cmpsl
jge
mov
mov
std
inc
jns
jno
mov
xorb
push
insl
arpl
pop
lea
or
and
pop
test
daa
movq
jae
cmp
movsl
xchg
cmp
dec
cmp
jle
sti
sarb
xor
jg
movsb
fdivr
dec
mov
sbb
xor
repnz
xchg
adc
cmpsb
or
fstpt
or
mov
movsl
sub
jg
sbb
mov
dec
push
out
pop
inc
shrb
pop
and
jbe
mov
sub
imul
imul
lock
mov
inc
lcall
movl
inc
push
jo
dec
xchg
lods
lds
out
dec
bound
or
or
das
andl
jo
add
xchg
aas
xchg
repnz
mov
adc
shrl
lcall
pop
or
dec
or
fs
enter
ljmp
jb
jmp
call
mov
push
or
ss
std
jb
sub
fsubrl
sbb
shrb
push
or
sti
xchg
loopne
test
cli
push
shlb
inc
sub
sbb
subb
pop
lahf
mov
pop
insb
lock
xchg
jne
pop
js
ret
inc
fld
ljmp
scas
or
jbe
or
add
dec
xchg
push
jne
lock
lods
mov
dec
inc
pop
std
fisubrs
sbb
sbb
xchg
jbe
xchg
js
sub
jbe
aas
inc
xor
lock
xchg
repnz
push
stos
mov
stc
dec
stc
adc
daa
jl
imul
sub
push
fnsave
or
mov
sahf
pop
stos
dec
and
out
lods
ja
ficoml
and
leave
enter
dec
inc
add
negl
jb
jecxz
xlat
mov
das
lahf
fldenv
cmpsl
xor
inc
jge
mov
jns
mov
xor
ljmp
push
gs
dec
mov
mov
ficoms
dec
fildl
test
jg
shrb
daa
sar
sbb
test
mov
pop
and
pop
pop
rolb
jmp
in
cmp
fcoms
pop
adc
sub
bound
dec
sbb
pushf
push
fnstcw
inc
pusha
test
stos
lret
pop
testl
sub
jmp
mov
scas
mov
inc
je
mov
dec
addb
push
in
call
mov
sbb
jmp
push
out
cmp
inc
pop
imul
enter
testl
mov
jno
lods
mov
dec
pop
mov
xorl
lret
push
pop
jecxz
int3
cli
fildl
pop
cwtl
aam
jnp
pop
adc
movsb
ja
inc
mov
xlat
out
ret
dec
rorb
dec
adc
test
sub
jge
dec
or
and
sbb
pop
push
out
push
fldt
lea
mov
and
jl
push
pusha
adc
subl
push
pushf
or
fidivl
xor
in
mov
mov
adc
adc
sub
xor
jle
dec
ds
jle
fmuls
cmp
dec
clc
ret
scas
test
inc
xchg
lea
stos
add
push
push
adc
mov
aas
inc
jb
cmp
mov
sub
lea
sahf
rolb
addr16
and
inc
push
mov
inc
daa
fnstenv
mov
and
insl
xchg
sar
aaa
into
pop
cmp
cmp
test
dec
leave
mov
mov
sub
into
pushf
jno
push
lahf
mov
push
jecxz
and
scas
jmp
xchg
mov
sub
or
arpl
jmp
popl
inc
and
xor
nop
mov
pushf
insb
icebp
std
stos
cld
pop
mov
push
ret
leave
push
outsb
xchg
mov
into
cmp
inc
popf
sahf
test
cmp
sbb
iret
sbb
jmp
dec
negl
mov
ror
adc
bound
add
lods
leave
stos
dec
pop
dec
je
push
mov
sarb
imull
dec
add
jmp
mov
test
jg
lcall
xor
xlat
push
mov
cmp
addr16
xchg
ja
sbb
shrl
jb
lea
mov
push
rclb
mulb
and
lock
lea
xchg
cmpsb
fnstcw
push
jb
add
cli
xor
dec
in
lret
pop
inc
jmp
std
lret
stos
dec
mov
or
hlt
std
decl
sub
ljmp
sbbl
xchg
dec
or
roll
inc
sbb
or
mov
xor
repz
and
clc
push
in
scas
cmpsb
sub
insl
neg
int3
test
lahf
adc
out
scas
fnstsw
bound
shrl
int3
ret
cltd
fimull
and
cmpsb
mul
push
ds
jecxz
jbe
imul
iret
inc
mov
ret
inc
adc
push
in
repnz
lahf
or
shlb
pop
bnd
lds
test
and
ret
cmp
xchg
loopne
loopne
enter
fildll
aas
xchg
pushf
je
mov
fcompl
mov
outsb
xlat
les
icebp
xor
addr16
mov
xchg
call
sub
pop
cmp
mov
pop
sbbl
xor
pop
stos
rcl
stos
ds
cld
xchg
pop
pop
test
sbb
mov
repnz
idiv
das
aad
jne
mov
xchg
aam
sbb
les
in
orl
hlt
int3
cmp
xchg
inc
sbb
stos
jb
add
inc
outsb
xor
sub
into
jo
data16
xor
mov
ja
cmpsb
adc
cltd
fwait
nop
pushf
andb
mov
xchg
xchg
dec
pop
je
adc
scas
inc
push
cmc
mov
dec
aam
pop
mov
and
and
rolb
xchg
adc
xchg
or
jne
rcrl
pop
aaa
out
cs
les
outsb
push
pop
xchg
xor
aad
out
add
mov
cmp
cmp
test
repz
jg
dec
cmpsl
mov
and
fldenv
push
outsl
mov
inc
sub
sub
outsb
gs
ljmp
orl
push
and
in
xchg
lock
adc
out
test
pop
push
clc
insb
adc
inc
and
out
js
sahf
hlt
loop
cwtl
push
cmp
sbb
lock
xlat
ret
sub
cltd
pop
inc
pushf
xor
aaa
aad
push
repnz
adc
bound
loope
mov
ret
and
xor
sub
cmp
ret
jmp
lret
imul
push
int
pop
pop
xchg
cmp
or
rcrb
xchg
test
cwtl
aas
aas
bound
push
sbb
lahf
arpl
repz
xchg
sub
cmp
mov
movsl
movsl
aaa
push
pop
xchg
clc
inc
or
out
imul
insb
mov
cmp
aam
out
cmp
and
lret
mov
je
mov
and
mov
sbb
jg
jbe
sti
push
xlat
add
push
mov
pop
lcall
push
das
stc
movsl
or
and
inc
stos
cwtl
cmpsl
int
mov
and
fwait
or
push
pop
sub
sub
sbb
rol
ret
jle
and
push
jae
push
lds
cmp
jo
insl
xchg
xchg
test
pop
jmp
fisubrl
sub
mov
and
add
fwait
icebp
push
jmp
scas
or
aad
dec
test
or
inc
sub
outsl
add
adc
jnp
jg
xchg
jmp
lahf
rcr
cmovnp
or
arpl
cwtl
adc
cmpsb
jg
mov
pop
test
out
shlb
andl
lds
or
dec
sub
pushf
or
sti
inc
add
jmp
inc
xchg
lods
cmpsl
insl
daa
loop
add
cmp
mov
xchg
popf
xchg
inc
mov
add
mov
mov
pop
scas
inc
cmp
fwait
pop
jbe
flds
decl
fst
data16
cli
jmp
sti
push
add
out
lret
add
cmp
jge
sbbl
jmp
sbb
push
jae
sub
addr16
clc
add
ds
adc
mov
out
jb
adc
fcom
mov
scas
pop
push
into
icebp
loopne
sub
cvtps2pi
test
pushf
test
push
cmp
mov
lods
inc
pop
mov
mov
xchg
stc
mov
mov
push
nop
mov
lcall
dec
push
sub
inc
mov
and
cmc
cli
cltd
add
sub
inc
xchg
popa
addr16
adc
nop
jle
cli
push
cmp
or
arpl
sbb
test
nop
dec
pop
push
adc
jns
jmp
call
icebp
fcomps
in
lahf
clc
pop
out
sbb
sti
fistps
pop
ja
repz
pop
mov
ss
sub
stos
lock
mov
cmp
ss
push
xchg
inc
jl
popf
rclb
ljmp
shlb
inc
or
xchg
pop
into
pop
rorb
int
aad
pop
xchg
ret
hlt
enter
loopne
mul
je
sub
dec
cld
push
mov
or
movsb
or
pushf
pop
mov
in
push
dec
pop
pop
mov
dec
push
mov
icebp
mov
test
outsl
mov
int
mov
mov
loop
enter
ret
mov
mov
xchg
jmp
xchg
dec
lods
pop
rolb
xchg
inc
ss
movsb
xor
imul
mov
int3
ds
idiv
out
mov
out
enter
cmp
jne
aam
movsb
adc
adc
sub
test
inc
jl
clc
mov
movsl
movsl
add
sahf
imul
in
xlat
pop
enter
dec
and
and
xchg
dec
popa
push
sub
or
cmc
push
sub
xor
push
in
loopne
and
mov
mov
xor
cmp
push
or
xlat
arpl
sbb
lods
aad
mov
movsl
outsb
pop
hlt
fstpt
out
pop
loop
mov
jb
insl
addr16
pop
cmp
aam
adc
cmpsl
mov
je
dec
cmp
mov
jle
in
test
cmpsl
mov
movsl
std
mov
out
test
push
frstor
mov
mov
sub
cmpsl
stos
testl
aam
cmp
adc
nop
mov
mov
adc
movsb
sub
sbb
in
js
mov
sub
mov
test
push
cmp
or
cmp
cmp
incb
icebp
test
fcoml
test
jl
or
pop
lea
iret
out
xchg
jmp
xor
cmp
sub
mov
pop
xor
fnstsw
ret
lods
icebp
mov
jnp
stos
ss
xchg
loop
in
cmp
int
and
xchg
or
fidivl
mov
inc
xchg
dec
mov
push
jmp
adc
lods
fcmovbe
add
jb
outsl
fmull
into
xchg
sbb
call
sbb
cmp
mov
and
arpl
pop
mov
ljmp
filds
aam
push
inc
xor
jmp
jg
ss
mov
xchg
fcomps
inc
icebp
fisubrl
pop
and
ss
jge
xchg
mov
lret
cmpsb
add
lret
sbb
pop
stc
aas
inc
daa
cmp
cmp
sti
dec
mov
ss
cmp
cmpsb
jb
into
jp
pop
cmpsl
sub
mov
add
add
popf
dec
mov
daa
sbb
out
push
add
push
stc
ret
fimuls
jae
lret
jnp
jmp
leave
cmpsb
xchg
cmpsb
xchg
sbb
test
xor
fnstenv
xchg
inc
test
enter
xchg
imul
repz
lahf
sbb
addl
ret
push
insl
cmp
inc
sti
gs
aad
or
cmc
aad
inc
fsts
sub
js
add
out
cld
pop
xor
cmp
and
mov
fnstenv
lods
jmp
sti
fxch
in
jmp
cmp
rcll
jno
jns
int
sbb
ljmp
xchg
mov
bnd
pop
test
xchg
rcrl
leave
push
pop
jl
inc
push
das
lock
inc
iret
mov
out
lcall
adc
loop
or
mov
sbb
out
lret
pop
pop
jl
sbb
push
sub
or
jmp
add
pop
scas
inc
or
or
sub
sbb
adc
lret
add
gs
dec
cmp
loopne
mull
insl
mov
sub
push
fucomi
mov
pop
scas
xchg
outsb
stos
inc
adc
cs
and
outsb
lea
dec
iret
insl
iret
cmp
stc
mov
mov
add
bound
lret
cmp
adc
and
push
jae
daa
jl
push
inc
mov
adc
fwait
mov
cmp
ja
scas
shrb
aam
sbb
pop
add
in
int3
stc
jp
mov
and
aad
jge
fadds
fsubrl
setne
dec
xchg
mov
push
or
xchg
mov
addr16
in
insb
outsb
xchg
es
call
clc
pop
add
push
sahf
in
jecxz
in
push
cmp
test
sbb
mov
leave
mov
or
lret
jb
lret
mov
and
mov
fsubrp
cmp
push
jbe
iret
hlt
mov
ret
ja
and
cmc
jno
out
push
pop
mov
bound
jle
push
out
fs
cs
xchg
adc
push
sahf
sub
jne
mov
xchg
cmp
or
inc
inc
and
iret
xor
mov
and
cwtl
out
mov
leave
add
pop
jns
adc
mov
imul
inc
das
jl
test
movsl
or
add
pop
outsb
sbb
je
mov
bound
pushf
adc
ficomps
push
data16
sahf
orl
pop
xchg
lret
adc
jns
add
xor
cmpsl
test
test
cmpb
adc
mulb
cli
das
mov
adc
push
xchg
mov
lahf
inc
mov
nop
xchg
and
push
cltd
adc
arpl
mov
lea
fwait
nop
jae
xor
mov
xor
popa
push
loop
mov
mov
mov
out
inc
or
push
je
inc
push
xchg
lods
add
daa
cmp
mov
test
pop
cmp
out
addb
imul
dec
push
popf
adc
andl
and
inc
rol
or
cwtl
leave
xchg
mov
push
jnp
sub
pop
fs
jl
jp
jecxz
mov
or
pop
cmp
push
out
inc
clc
outsl
and
sub
cmp
mov
or
rcrl
jb
mov
jb
and
mov
sub
rorb
mov
inc
out
ffreep
and
and
cmpb
xchg
inc
ja
aaa
cwtl
cmpsl
mov
loope
jae
ja
inc
pushf
push
lea
rolb
inc
roll
inc
jne
stc
cwtl
loop
jmp
movl
dec
fldt
inc
fmulp
jecxz
roll
cli
cli
faddl
jmp
aad
mov
mov
movsl
lea
leave
dec
gs
cmp
jo
or
adc
inc
push
mov
popf
out
stos
mov
adc
jmp
lds
loopne
aas
mov
mov
hlt
pop
loopne
les
push
rol
cmp
jbe
mov
or
pushf
ret
inc
and
inc
jo
push
iret
je
pop
mov
fsubl
push
add
fldenv
scas
inc
movsl
sti
lahf
jge
jno
mov
es
push
ds
dec
jbe
push
push
jle
sub
test
rorl
jnp
clc
mov
mov
xor
in
push
bound
jg
imul
hlt
rsqrtps
xor
sub
out
xlat
fcomps
add
and
shl
mov
dec
push
imul
repz
push
jle
xchg
popf
stos
add
mov
ficoms
cwtl
aaa
mov
xor
divl
into
push
popf
sub
rclb
sbb
add
add
in
out
lcall
ss
pop
pop
shll
jmp
sbb
test
out
rorb
bound
mov
ret
push
inc
lods
mov
adc
cld
pop
bound
enter
movnti
sub
fs
jns
cmp
clc
test
les
orb
movsb
push
rcrb
xchg
mov
fs
xor
adc
imul
inc
xor
test
daa
frstor
in
jge
push
daa
dec
cltd
sahf
clc
orl
addl
je
jge
movsl
mov
mov
adc
pusha
test
sub
insl
adc
pop
mov
scas
outsb
addr16
stos
cmpsb
and
pop
fs
sbb
aad
mov
fcompl
push
repz
imul
xchg
je
aam
testb
pop
cmp
mov
add
insl
push
lods
insl
inc
movsl
pop
vpunpcklwd
rolb
aaa
test
dec
add
xchg
pushf
xor
test
sub
shl
add
mov
test
adc
cwtl
scas
cmp
xchg
jg
fcomps
sbb
dec
mov
arpl
adc
sbb
or
out
das
lcall
jno
fdivrp
mov
jecxz
divl
pop
test
cmp
incb
popa
pop
scas
aaa
lods
loop
cli
mov
mov
or
test
jecxz
std
jb
nop
pop
frstor
mov
xchg
insl
pop
push
inc
in
lcall
in
cwtl
and
cmp
sbb
das
ljmp
jge
pushf
movsl
fwait
out
xchg
into
pop
fiadds
sahf
xchg
and
stos
popf
sub
add
push
arpl
adc
pop
inc
inc
add
push
gs
push
push
rcrl
dec
add
mov
adc
out
push
push
mov
mov
xor
sub
mov
mov
pusha
je
dec
mov
xor
mov
xchg
add
sti
sbb
cmpsb
mov
jo
push
add
out
test
into
stos
sbb
sbb
insb
stos
mov
fmuls
push
or
stos
cltd
mov
xchg
fiadds
mov
mov
dec
push
add
lds
movsl
int
imul
out
adc
stos
dec
imul
cmc
outsl
and
ret
or
mov
cmp
lods
jmp
dec
jge
aam
sbb
adc
push
cmp
insl
in
add
lods
rcll
and
push
inc
call
sub
test
mov
adc
nop
sbb
jo
rcrl
orl
pop
lods
ds
in
push
jg
sub
or
jbe
sub
jge
mov
into
fildl
in
repz
fucomp
sbb
int3
call
jle
cli
cltd
fimuls
pop
push
mov
int
inc
cmp
out
inc
pop
pop
fucomip
test
nop
aam
inc
sahf
into
mov
insb
pusha
and
push
movsb
mov
mov
xchg
dec
ret
daa
sub
aam
rcrl
in
dec
aas
push
xor
andb
dec
rolb
loop
mov
out
push
data16
cmc
push
sub
push
push
inc
enter
sbb
sub
mov
nop
imul
or
das
insb
add
jp
inc
push
xor
dec
adc
inc
pop
out
fs
sarl
fwait
nop
xchg
ds
jg
sbb
mov
mov
divb
popf
fsubrp
cmp
popf
adc
push
loopne
out
mov
sub
mov
jecxz
mov
ljmp
xor
scas
mov
ljmp
cmpb
or
sub
aam
mov
push
mov
add
les
mov
aaa
mov
movsb
add
lcall
cld
repz
ret
add
jmp
jnp
cmc
jge
je
outsb
test
and
pop
inc
ss
nop
sahf
push
ret
jbe
popa
pop
jo
ja
xchg
lds
pusha
addr16
cmp
mov
leave
add
jmp
pavgb
mov
sbb
sub
ret
jge
sar
stos
pop
int
mov
movsl
cmovle
daa
mov
cwtl
aas
in
out
iret
daa
hlt
sub
pop
fstp
mov
mov
scas
test
mov
popf
add
sahf
leave
pop
bound
sbb
sub
mov
popf
repz
rcrl
add
ret
xchg
es
sub
bound
or
add
xchg
push
mov
scas
inc
add
inc
ljmp
imull
inc
and
pushf
xor
icebp
lcall
push
and
lcall
inc
xor
jmp
mov
adc
jne
leave
hlt
repnz
rcrl
mov
int3
leave
cmp
jae
fsts
dec
outsl
cmp
popa
call
int
adc
pop
mov
scas
ljmp
imul
fstl
js
xchg
inc
cmpsb
ret
int3
pusha
pop
in
rcrl
mov
rclb
rcll
or
xchg
push
xchg
movsl
popf
fisubrs
hlt
cmc
push
call
adc
push
jns
fiaddl
cmp
pusha
sbb
mov
pop
dec
sbb
jb
sub
roll
scas
xchg
xor
faddl
dec
push
pop
and
mov
notb
sbb
pop
pusha
lods
jge
shll
push
xchg
mov
cmp
add
lock
imul
sahf
test
cwtl
sbb
in
pop
xor
adc
pop
fstl
ljmp
mov
sub
loope
jae
inc
cmp
outsl
shll
pusha
push
pop
aad
ss
push
sub
fildl
mov
movsl
jge
lret
lock
pop
dec
ds
repnz
pop
div
mov
imul
out
leave
outsb
xchg
xor
pop
cmp
loopne
jno
es
jg
or
fsubrl
push
sub
or
testb
scas
adc
mov
and
xorb
in
mov
into
pop
in
xor
and
int3
jg
push
pop
int
in
mov
dec
inc
cmp
push
lock
mov
mov
aaa
cmp
push
xor
push
in
outsb
out
lahf
xor
pop
push
in
in
mov
xchg
xchg
mov
sub
mov
push
lret
mov
inc
rorl
dec
testl
dec
xor
popa
arpl
mov
iret
dec
adc
daa
cmp
mov
xchg
jo
not
rorl
in
ds
ficomps
jo
push
test
xchg
lcall
movb
sub
fbstp
leave
add
loopne
stos
stos
lods
imul
scas
fadds
and
cmp
and
or
adc
loop
aaa
xchg
cli
xor
cltd
imul
mov
pop
mov
dec
dec
mov
pusha
or
or
dec
mov
rcrl
xchg
das
mov
pop
test
mov
negb
addr16
mov
imul
mov
enter
push
sub
jecxz
cmp
xchg
pop
cmp
jae
mov
pop
push
dec
dec
repz
cmp
int3
fsub
cmpsl
imul
shl
mov
and
add
mov
dec
inc
int
jl
inc
inc
inc
shlb
add
cmp
mov
repnz
mov
or
adc
rcrl
movsl
fnstenv
mov
xor
or
cmpsl
mov
movsl
mov
push
adc
lcall
nop
rorl
xor
int
in
lcall
lahf
ds
aad
mov
cmp
out
out
insl
adc
and
mov
divb
adc
out
loop
int3
test
fwait
mov
clc
mov
dec
pop
sub
mov
aas
adc
push
cmc
sub
fidivrs
lahf
lds
mov
mov
mov
out
pushf
sub
xchg
jno
lds
xor
rcrb
leave
aaa
loop
lea
mov
jp
xchg
filds
adc
xor
xor
sub
imul
mov
orl
mov
mov
fwait
and
xchg
pop
scas
je
int3
sbbl
stos
pop
push
mov
mov
je
leave
shrb
lods
jbe
or
sti
cld
out
in
sahf
idiv
jno
js
pusha
clc
push
adc
adc
outsl
jno
shlb
out
push
and
pop
test
push
lret
mov
lea
sbb
cmp
into
xchg
mov
and
inc
ds
movsb
mov
jae
xchg
pop
rclb
pusha
sbb
scas
mov
les
hlt
scas
aaa
mov
cmc
rcrl
mov
das
inc
adc
call
mull
out
lds
stc
adc
popf
jo
pop
pop
in
xor
lea
mov
pop
cmp
das
getsec
loopne
test
mov
int
inc
xchg
and
les
andl
aad
test
ljmp
mov
pop
mov
and
pop
pop
and
sbb
sti
xor
inc
cmp
rcrb
adc
andl
xor
add
test
push
cmp
arpl
cwtl
mov
testl
test
xlat
mov
cwtl
mov
mov
movsb
jp
or
mov
sub
jnp
or
add
jne
push
or
cmp
adc
xlat
xchg
fdivrp
mov
ds
push
cmp
inc
es
lcall
or
adc
mov
xchg
ds
or
ficompl
lret
adc
sub
mov
sbb
iret
into
dec
out
add
xchg
dec
pop
cmp
lret
mov
js
push
pop
pop
aad
sbb
xchg
test
or
mov
inc
push
imul
jmp
mov
dec
sahf
call
mov
pop
xor
aam
cmp
and
mov
inc
int
aam
shrb
add
adc
popa
fdiv
mov
fimull
add
cmp
fcom
push
and
add
sub
cmp
fs
mov
xor
ja
les
sarb
jecxz
cmp
test
loope
push
sub
movsl
jle
aaa
cld
jecxz
testl
sub
mov
mov
mov
les
and
mov
inc
pop
sbb
xchg
call
sub
adc
xor
sbb
or
popf
sub
sarl
mov
not
add
adc
sbb
int
mov
sub
and
mov
clc
fwait
enter
sbb
or
lcall
xchg
jns
adc
mov
fs
outsl
add
stc
cmpsb
jno
dec
mov
or
xorl
in
sarl
imul
inc
cmpsb
cmp
pop
in
shll
cmp
jp
sarb
scas
mov
mov
jge
int
and
or
iret
xchg
sbb
ret
pop
out
out
lahf
mov
and
imul
or
cmp
addr16
outsb
push
push
mov
rolb
mov
mov
xor
xchg
fcompl
loop
sub
pop
sub
pop
xor
pop
sub
sahf
fcoml
xlat
addr16
push
sub
cmc
mov
cli
std
mov
inc
ficoms
mov
dec
aam
mov
cmp
fsubs
mov
in
sbb
call
data16
rorw
cltd
js
mov
es
inc
bound
pop
and
mov
mov
cwtl
push
push
test
out
test
lahf
int
js
and
mov
push
and
mov
inc
push
mov
inc
cmp
pop
ret
mov
clc
mov
jecxz
cmp
loope
setbe
int3
push
dec
xor
test
or
and
dec
dec
fstpl
or
adc
dec
cwtl
loopne
jp
ljmp
js
repnz
in
or
push
cmp
hlt
sarl
adc
mov
pop
cli
sbb
sub
pop
mov
test
es
add
cli
pusha
pusha
or
mov
xchg
into
popa
int3
adc
pop
mov
or
movhps
mov
adc
sub
fdivr
pop
mov
push
in
movsl
inc
das
pop
ret
adc
mulb
in
jnp
loop
sub
pop
movsl
adc
xor
cmp
in
cmc
pusha
mov
sbb
and
idivl
cli
push
repz
mov
frstor
fildll
lcall
popa
add
add
mov
jl
sbbb
mov
cli
mov
sub
lods
dec
roll
shll
int
stc
pop
hlt
pop
pop
dec
imul
push
ret
push
aad
mov
popl
idiv
lods
loop
cmp
and
or
dec
std
and
jnp
mov
std
std
jmp
dec
jl
sbb
or
dec
outsl
shlb
lret
sarl
dec
insb
out
fstps
xchg
xorl
add
push
jecxz
dec
bnd
iret
adc
lods
push
cwtl
mov
and
adc
inc
cltd
cmp
call
pop
push
loopne
mov
icebp
fwait
pop
push
pop
pop
and
xor
fwait
and
add
insl
mov
mov
jmp
xchg
fnstenv
sbb
or
enter
roll
ficompl
mov
push
or
enter
sti
adc
in
daa
sub
test
and
fsts
mov
rorl
pop
add
push
icebp
lods
lea
inc
je
hlt
popf
scas
fsubr
xor
xchg
inc
push
pop
aam
push
push
sbb
leave
dec
cmpsb
sub
jb
add
pop
pop
xchg
jo
and
fnstcw
or
sub
outsb
daa
adc
mov
cmc
repz
pop
icebp
je
sub
rcll
inc
xchg
daa
lcall
adc
inc
mov
out
repnz
pushf
jno
iret
xchg
mov
mov
ja
adcb
pop
jle
jne
icebp
mov
or
fsubrs
inc
jo
pop
add
outsl
test
mov
addb
int3
sbb
mov
mov
sub
jno
es
and
ljmp
add
das
pxor
add
movsl
jns
es
xor
cmp
cmp
mov
repz
add
pop
lds
inc
mov
fdivrs
iret
cld
ficomps
xchg
mov
fistps
mov
or
ret
adc
add
pop
push
add
add
ja
cwtl
jle
adc
icebp
in
je
and
into
imul
popa
cmp
out
push
jmp
add
pop
xor
inc
out
subb
scas
push
xor
ret
test
push
fsubl
dec
pop
xlat
mov
inc
inc
outsl
lods
std
mov
push
dec
stos
ljmp
mov
int3
and
or
es
je
mov
jae
stc
decl
pop
pushf
mov
jmp
xchg
outsl
jne
fidivrs
sub
xlat
shl
mov
imul
js
mov
int
cwtl
cmpsl
popf
insb
mov
call
or
orl
push
movsl
lahf
int3
sub
cmove
stos
xchg
int
push
daa
sub
les
jl
xchg
inc
dec
and
and
repnz
popa
fldl
sub
cmpsb
lahf
xchg
inc
icebp
add
sub
push
dec
or
out
jl
pusha
sub
push
fsubr
xchg
pushf
mov
xchg
bound
sahf
adc
test
fwait
fwait
int3
stc
iret
notl
ds
leave
mov
hlt
push
add
popf
repz
lods
pop
push
mov
cmp
jne,pn
js
xchg
push
mov
fnstsw
cmp
mov
push
dec
fcom
cmc
insb
fidivrl
pushf
mov
aas
test
mov
adc
jecxz
scas
cwtl
add
mov
jne
push
test
nop
repz
mov
in
fstpt
sti
push
mov
mov
jmp
jle
pop
imul
or
or
sbb
pop
int3
cwtl
mov
xor
add
add
cmp
xor
bound
jae
push
mov
jg
pop
hlt
dec
shrb
push
jge
jb
push
mov
pop
popf
dec
xor
push
inc
inc
sub
stc
mov
iret
push
cmp
xchg
mov
push
mov
push
scas
jns
sub
jle
lret
clc
mov
movsl
add
aad
leave
push
into
pop
bndstx
jo
pop
sub
mov
sbb
xchg
xor
pop
sar
pop
xor
es
addl
dec
inc
scas
jge
aam
test
imul
push
pop
stc
outsb
aaa
push
int
xchg
pop
lea
xchg
shlb
ret
pop
daa
sarb
mov
mov
mov
popa
out
adc
test
lock
pop
rcrl
into
cmpsb
inc
lcall
mov
xchg
jmp
ss
jnp
fsubr
shr
mov
and
sahf
mov
jno
rolb
test
sub
push
clc
divl
lock
xor
repz
and
movsb
iret
lret
pop
jo
mov
dec
adc
jge
mov
jp
std
repz
inc
xchg
sbb
hlt
dec
aas
sub
add
cmp
mov
into
out
aas
push
dec
pop
out
lock
xchg
push
jl
jmp
jnp
adc
leave
sahf
adc
gs
js
cmp
fsubrl
push
jb
push
sbb
sbb
jl
aaa
push
shlb
cltd
mov
pop
mov
add
or
mov
dec
std
orb
inc
pop
in
repnz
dec
pushf
sbb
jnp
push
lock
and
cmp
pop
cli
xor
dec
sbbl
pop
pop
and
sbb
inc
push
xor
je
pop
sbb
mov
xor
pop
add
je
rcrb
lds
aaa
stc
cmp
xor
mov
jb
xchg
fnstcw
cld
lret
cmpsl
pop
pop
xchg
scas
sahf
inc
cld
stos
xor
cld
mov
and
aas
pop
inc
out
mov
scas
movsb
sbb
push
clc
sub
and
ret
mov
inc
or
xor
mov
dec
bound
ret
adc
inc
add
cmpsb
sub
repnz
mov
mov
adc
orb
sahf
push
jp
shlb
adc
add
inc
mov
sub
mov
arpl
mov
or
pop
sub
fcomip
xchg
fisubrs
sub
scas
out
pop
mov
dec
movsb
lods
jae
sbb
pusha
cmp
divb
push
shrb
jmp
push
jb
in
clc
fisubs
push
es
in
cwtl
sahf
jae
bound
mov
or
scas
pusha
rol
sti
mov
pop
dec
adc
dec
iret
ret
xchg
jg
mul
fldl
mov
out
adc
pop
mov
push
dec
clc
and
fisttpll
mov
lea
testl
aas
inc
movsl
cwtl
sub
out
pop
loope
clc
jg
outsl
int3
pop
mov
adc
xor
outsb
jecxz
jecxz
lods
mov
es
je
lahf
sbbl
inc
fstpt
cltd
aad
clc
pop
fidivrl
icebp
add
repnz
cltd
dec
lea
push
xchg
repz
jecxz
cmp
sub
and
lea
imul
dec
cmc
out
arpl
mov
jb
cmp
aad
jge
xor
mov
mov
push
jmp
jb
and
out
loop
sbb
adc
repnz
cmp
and
cli
fisubl
ficomps
push
cmc
lea
push
cmc
mov
imul
pop
aas
pop
push
loope
sbb
adc
fbld
xchg
push
push
hlt
xchg
inc
xchg
int
repnz
call
stos
fidivl
pop
stos
outsl
repz
test
aad
out
mov
mov
das
jnp
push
xchg
jecxz
clc
scas
jns
int
das
pop
negb
sbb
lock
adc
in
std
xchg
mov
pop
decb
lea
adc
gs
repnz
ss
cmp
rclb
cs
sbb
inc
mov
cmp
movsl
pusha
push
fcomps
outsl
cs
mov
jp
clc
jne
repz
movsl
outsb
out
test
imul
jmp
xlat
adc
aam
xor
test
stc
cmp
or
test
sbbb
xor
push
ja
sub
lods
aaa
or
adc
rcr
lods
pushf
jbe
push
mov
push
or
popa
out
cmc
lret
pop
movq
ret
enter
xchg
outsl
pop
test
jle
pop
sbb
xor
add
ds
jecxz
and
addl
dec
enter
and
push
cs
lods
mov
ror
rorl
xchg
sub
stos
push
call
outsb
sti
mov
xchg
sbb
sub
mov
cmp
mov
jbe
mov
or
mov
test
inc
sbb
sti
adc
xchg
sub
popa
mov
jns
sbb
and
mov
js
lret
cs
sbb
push
pop
or
test
in
jecxz
jg
mov
mov
mov
push
mov
or
bound
std
push
jmp
xor
push
aas
sub
lods
call
ss
shr
ss
xchg
jns
call
popa
xchg
pop
pop
mov
andb
push
jno
sub
pop
or
movsb
xchg
movsl
movsb
insl
xor
test
pop
imul
popf
mov
js
mov
dec
bnd
movsb
or
jno
call
inc
adc
jns
sti
pop
dec
mov
inc
sbb
xchg
mov
jg
xchg
repz
cmp
dec
mov
pop
jl
xchg
imul
outsl
jecxz
mov
dec
xor
in
stos
mov
jae
sbb
icebp
dec
mov
xchg
mov
adc
or
add
scas
push
cs
imul
mov
mov
jg
cltd
pop
mov
and
add
clc
int
pop
push
mov
mov
adc
ss
jnp
jecxz
js
pop
jp
adc
dec
push
dec
sbb
das
rclb
sbb
or
imul
jecxz
mov
mov
xor
xor
cmp
insb
gs
cmp
sahf
shlb
and
lcall
stc
jmp
push
push
mov
jo
cmc
mov
jb
mov
add
outsl
in
outsl
mov
cs
data16
outsl
dec
cmp
pop
mov
push
and
cmp
jmp
xchg
mov
push
mov
fldenv
mov
cmc
out
push
cmc
mov
daa
xlat
or
roll
rcrl
enter
add
pop
daa
or
adc
jb
stos
or
sub
call
mov
mov
or
pop
out
jbe
jb
inc
mov
popa
pop
jo
push
lret
ret
std
stos
sahf
fimuls
fwait
mov
push
xor
les
dec
lds
mov
bnd
nop
xchg
orl
mov
xchg
cmp
push
out
adc
dec
push
xchg
push
ja
pushf
into
mov
in
jb
out
cmc
dec
cmp
lods
bound
jecxz
repz
in
aas
xor
mov
gs
fistpll
inc
stc
repnz
sub
sbb
jb
hlt
incb
mov
mov
testb
out
sbb
out
pop
loope
jb
sub
test
jge
jnp
subl
jge
cltd
movsb
mov
pop
jge
mov
mov
rclb
sub
pop
xchg
imul
in
and
in
test
lahf
add
mov
inc
ds
ficomps
jl
push
hlt
lds
cmpsl
push
addl
sub
push
iret
je
dec
aad
insl
pop
je
inc
add
shll
jecxz
loope
cmpsl
insb
ja
mov
inc
nop
xchg
sarb
mov
gs
dec
call
repz
or
sub
sub
clc
or
cmp
xchg
les
mov
gs
in
call
xchg
jecxz
fs
and
cld
mov
fimuls
sahf
insl
lcall
test
lret
jne
ljmp
popf
cmp
ds
das
hlt
inc
push
mov
je
ret
mov
mov
imul
inc
jecxz
fstpt
lcall
sti
jne
sti
mov
dec
adc
ret
mov
popa
add
push
dec
les
push
sub
scas
push
daa
scas
arpl
subl
and
out
and
sbb
ret
and
lret
jae
or
scas
sub
cwtl
lret
push
lock
push
sub
pop
lods
jge
or
push
jne
loop
xor
push
jecxz
iret
mov
lea
xchg
ret
aas
push
hlt
fs
jmp
lcall
inc
and
decl
mov
test
cmp
mov
sub
loopne
fwait
mov
lret
mov
xchg
stos
and
xor
lods
leave
int3
xchg
addr16
and
cmovb
mov
pop
xchg
idivb
or
jnp
ss
fucomp
jle
jg
nop
mov
lods
mov
xor
imul
mov
xchg
jae
xlat
mov
pop
scas
ja
pop
xchg
ret
hlt
fstl
out
pop
pop
mov
pop
fbstp
fsubs
cmp
adc
push
addb
movsl
mov
sub
push
push
pusha
sbbl
sar
adc
test
xlat
popf
bound
outsb
fsubrl
mov
mov
xor
insb
daa
sbb
or
es
xchg
mov
ljmp
nop
and
out
inc
mov
fists
test
addr16
stos
jle
stc
dec
fdivrs
cmpb
dec
fstpl
mov
lea
push
inc
popf
sbb
push
aad
sbb
jbe
and
pop
repnz
adc
add
and
inc
inc
push
repz
stos
jg
or
or
xor
int
popa
and
inc
dec
sub
mov
in
mov
and
fmuls
inc
jnp
inc
jmp
scas
dec
sub
xor
cmp
pop
mov
pushf
outsb
or
mov
jne
or
sti
sahf
pop
lahf
int
pop
mov
aas
fisubrs
jl
or
mov
fstpt
cltd
lea
stos
mov
icebp
loope
jno
std
pop
fdivp
push
push
jb
gs
lcall
in
aam
sbb
or
add
jle
lods
xchg
fwait
push
add
jg
iret
pop
fcoms
imul
xchg
pop
mov
shrb
aam
aaa
mov
out
movsl
jp
cmc
cs
iret
das
dec
clc
sub
sti
ljmp
and
add
mov
fimuls
push
or
fcmove
jnp
jno
es
mov
icebp
dec
mov
and
jnp
lods
cmp
mov
push
adc
dec
loop
adc
ss
hlt
ret
cmp
mov
jmp
or
pusha
js
loop
and
sbb
sub
xorb
add
test
rcrl
and
sub
and
scas
pop
xchg
jl
sbb
dec
hlt
into
xchg
sub
adc
push
jp
gs
addr16
mov
mov
stos
clc
dec
or
mov
jnp
fidivrl
insb
ja
mov
in
cmpsb
fwait
or
or
pusha
cmp
inc
pusha
fwait
repnz
aaa
xchg
cmpsb
push
adc
jp
inc
outsb
adcl
jno
push
sahf
outsb
lods
aam
xor
jnp
pop
subb
jecxz
adc
inc
std
jno
or
cmp
xlat
repz
adc
dec
loope
push
bound
cmp
mov
push
adcb
push
mov
movsb
loopne
inc
dec
xlat
cmp
mov
lock
mov
cmp
outsb
sub
lock
das
sub
mov
outsl
or
test
add
imul
mov
add
lret
sbb
or
ljmp
xor
and
aas
scas
bnd
ljmp
xor
lret
add
ljmp
cmpsl
lds
sbb
icebp
fadds
ret
add
ljmp
in
jecxz
xor
das
rcrb
ljmp
lahf
pusha
stc
xchg
lcall
pop
fdivr
jae
pop
fsubl
inc
push
mov
test
jle
addr16
stc
hlt
fidivrl
sub
mov
mov
test
adc
notb
jp
xorb
pop
mov
ljmp
hlt
int
mov
inc
call
test
push
outsb
dec
mov
stos
mov
or
outsb
push
xlat
fwait
xchg
mull
sub
xchg
in
xchg
jns
jns
lods
fsubrp
pop
add
enter
scas
and
adc
cmp
inc
push
and
pop
sub
mov
mov
jmp
pop
fstp
jnp
adc
hlt
xor
sub
cmp
xor
push
mov
dec
ss
mov
movsl
pop
inc
addr16
pop
push
mov
iret
add
jo
scas
outsl
xor
adc
dec
in
mov
loope
lret
cmp
dec
inc
lds
pop
stos
adc
sbb
or
dec
jge
xor
inc
sbb
inc
je
fimull
popf
popa
sub
push
sbb
into
out
imul
aaa
pushf
lret
sub
xlat
xor
and
or
fdivrs
and
iret
cmc
xor
into
mov
cmp
xor
mov
hlt
mov
add
lock
jle
sahf
pop
mov
aam
mov
in
ficomps
fisttps
pop
jno
popa
in
mov
rcrb
xchg
test
mov
cmp
add
cs
rcrb
pop
mov
lahf
negl
mov
into
push
imul
adc
cmp
adcb
mov
ret
fmull
push
push
inc
fs
cmp
jl
or
pop
insb
adc
mov
mov
pop
movl
push
movsl
nop
repz
repz
push
sub
in
clc
leave
jo
and
sbb
in
lods
movsl
pop
sub
inc
inc
repnz
icebp
smsw
fisubs
mul
cli
xchg
dec
xchg
pop
inc
push
cmpsl
gs
in
push
sbb
mov
out
and
cmp
into
out
inc
dec
mov
notl
sub
mov
in
fisttpll
pop
fiadds
dec
cmp
or
and
jge
adc
push
mov
inc
mov
xorb
out
sbb
xor
pop
rcr
imul
and
movsl
in
mov
repnz
push
or
popf
es
test
ja
nop
adc
testl
ljmp
jbe
bound
cmpl
lcall
loop
and
es
out
into
adc
data16
mov
scas
outsl
mov
outsb
icebp
popa
movsl
xlat
jbe
pop
fcompl
mov
mov
in
jl
mov
inc
out
dec
out
jecxz
aaa
bound
jo
imulb
adc
inc
mov
cld
push
xchg
fsubrl
mov
iret
dec
int3
and
mov
dec
aad
sub
out
mov
add
cli
mov
fldl
insl
or
insl
aaa
ljmp
ja
cmp
in
push
nop
fbstp
fisttpll
add
ds
jb
mov
cltd
jns
cmpsl
cmp
xchg
iret
ljmp
jo
sub
xchg
xchg
mov
xchg
adc
mov
sub
adc
cmp
loope
mov
mov
xor
pop
dec
or
jne
hlt
jecxz
js
pop
movsl
int
jp
lock
flds
sub
push
mov
repz
hlt
mov
das
and
rcrl
push
insl
aad
sub
pop
dec
dec
fstl
icebp
or
addr16
sub
push
pop
data16
jae
movsl
ret
push
and
xchg
lea
addr16
leave
cmpsl
inc
rcrb
imul
push
daa
mov
cmp
das
into
and
fcmovu
negl
in
jb
mulb
inc
pop
arpl
aam
xor
out
jae
add
or
cmp
fcmovnb
lahf
adc
or
push
lock
adc
mov
or
cmp
and
and
bound
test
popa
xchg
ljmp
mov
inc
enter
aas
mov
mov
pop
adc
and
movsb
push
pop
mov
xchg
andl
add
mov
adc
push
repnz
push
push
xchg
ss
je
dec
and
jnp
fsubr
adc
or
aas
sbb
adc
out
mov
les
push
inc
or
data16
push
jle
or
in
js
push
mov
js
into
mov
shlb
and
mov
sti
xor
hlt
je
cwtl
stc
insl
jg
xchg
jmp
lock
insl
pop
pop
out
jno
cli
sub
mov
clc
insb
shl
and
push
loopne
xchg
add
dec
in
clc
xchg
test
lcall
or
int
test
lahf
add
pop
int
shlb
inc
dec
push
xchg
in
mov
cld
nop
fs
imul
pusha
fdivrl
shrb
mov
lock
mov
jne
test
inc
fiaddl
notl
shlb
lret
pop
jno
insl
call
mov
and
xchg
push
mov
aam
iret
dec
pop
mov
adc
pop
movsl
popl
ja
cs
xor
shll
sub
xchg
pop
fs
jmp
leave
insl
aad
and
fsubs
das
cmpsl
pop
jle
iret
jae
fwait
pop
les
loop
cltd
mov
pop
loope
test
rorl
lret
test
push
xchg
xorb
cmp
iret
shrl
cmp
out
dec
mov
cmp
loopw
add
scas
dec
daa
mov
push
cli
inc
aaa
add
jecxz
mov
lret
mov
cmpsb
push
and
cli
daa
dec
jbe
cmpsb
xor
xchg
xlat
xchg
mov
dec
inc
sar
fwait
or
sub
cmc
xor
pop
xor
inc
test
in
lahf
enter
xchg
push
fimuls
mov
sbb
add
add
cltd
test
mov
xlat
sbb
pop
hlt
enter
pop
cmp
dec
mov
dec
fldlg2
data16
inc
repnz
dec
pop
xor
push
aas
addr16
adc
cs
and
aad
pop
fs
dec
and
test
sub
jmp
jmp
repnz
hlt
or
mov
cmpsb
outsb
xor
dec
xchg
sbb
test
enter
sahf
push
rolb
or
mov
sbb
test
lods
lods
lods
testb
xchg
imul
pop
stos
push
sub
push
ljmp
into
adc
sub
out
mov
std
lret
je
pop
imul
xchg
sbb
adcb
mov
cld
cmp
dec
les
arpl
mov
or
push
jp
daa
stc
mov
mov
xchg
xchg
shlb
bound
inc
js
jo
fistpll
cmp
inc
mov
xlat
sbb
and
stc
xchg
shlb
or
inc
jg
adc
mov
cmp
mov
and
popf
pop
mov
insb
pop
jmp
cwtl
xor
addr16
scas
mov
cmp
cmp
sub
and
popa
mov
ds
pop
adc
and
in
mov
scas
shlb
pop
cmp
or
orl
adc
xor
sbb
aas
and
xchg
cs
into
call
xchg
call
or
fsubrs
inc
je
add
xor
aas
mov
lods
aaa
mov
mov
xor
cmp
adc
loop
mov
popa
pop
mov
loope
mov
jno
dec
adc
pusha
out
add
enter
pop
adc
imul
iret
sub
xacquire
mov
cmp
clc
push
js
push
dec
sbb
div
cmpsb
lret
jne
fucomp
mov
sub
movsl
jno
arpl
lea
mov
testl
data16
or
gs
xchg
add
lods
fdivrl
xchg
leave
xchg
int
mov
jbe
add
repz
fdivs
cmp
mov
addb
je
popf
call
inc
or
jecxz
jge
pop
lahf
adc
jbe
cmp
fstps
mov
stos
mov
lret
pop
jecxz
lcall
ja
pop
jne
inc
test
aad
inc
mov
mov
loopne
int3
outsl
hlt
dec
jno
sub
and
loop
jne
lock
mov
rcrl
sbb
mov
les
push
bound
fsub
aas
jmp
xchg
jle
cwtl
pop
pop
lcall
inc
xchg
push
inc
xor
mov
aad
cmp
jne
sbb
pop
movsl
xor
in
sub
inc
sbb
inc
rcrb
ret
mov
or
repz
push
popf
add
sbb
pusha
enter
xor
adc
pop
mov
lcall
mov
pop
ret
ja
mov
loop
int3
popa
mov
out
adc
mov
jmp
fnstsw
lods
and
enter
sub
mov
imul
nop
inc
scas
wbinvd
fstpl
mov
push
stos
scas
jns
adc
or
insb
dec
stc
and
rclb
aad
bnd
ficoml
xchg
loop
inc
lods
push
not
jmp
pop
scas
inc
imul
fisubrl
icebp
jo
fmulp
xchg
ds
mov
imul
jg
mov
xor
xchg
movb
popf
mov
or
and
jl
fwait
rolb
xorl
hlt
insb
mov
pop
cmp
mov
dec
mov
sub
xchg
pop
cmp
cwtl
les
push
mov
sbb
lds
mov
mov
ds
jge
jno
xorl
imul
bound
xchg
incl
xchg
push
sbb
aaa
mov
ljmp
popf
int
mov
jle
mov
xor
aaa
push
out
mov
xlat
inc
out
jmp
and
ss
nop
jae
cmp
fstps
ficoml
sbb
cmpsb
inc
cmp
jns
bsr
jbe
mov
ds
lock
in
dec
call
jnp
leave
in
insb
jbe
lods
fimull
or
test
scas
push
cli
mov
add
fisttpl
push
xchg
int
adc
jg
push
aaa
scas
xchg
add
dec
daa
sub
es
push
cwtl
push
add
fldt
jmp
jbe
out
mov
sarb
bound
stc
gs
mov
jae
push
scas
xor
scas
mov
adc
jbe
adc
dec
sahf
mov
repnz
cmp
add
loop
jge
push
xor
les
xchg
jns
fcomip
or
mov
scas
cli
fnstsw
push
jmp
stos
mov
out
mov
jecxz
mov
jmp
stc
mov
mov
mov
je
insl
add
fwait
pop
and
dec
aad
call
cs
js
push
nop
bound
xchg
sbbl
imul
daa
adc
inc
pop
call
jnp
or
in
bnd
ljmp
pop
pop
sar
lea
je
in
lock
popa
fimull
mov
sbb
cmc
cmp
in
adc
mov
stos
jmp
push
pop
fidivs
push
insb
mov
das
and
ret
out
cmpsb
mov
cmpsb
and
inc
pusha
addr16
add
sahf
scas
jl
fcompl
mov
mov
xor
jle
aam
test
jae
out
sbb
leave
sti
adc
jae
and
mov
test
ja
push
sub
mov
inc
fildll
mov
lock
mov
mov
outsb
xchg
mov
jmp
arpl
sbb
test
fstp
sbb
int
jae
mov
shl
mov
test
inc
mov
movsb
dec
jg
fdivrp
lea
jle
and
cltd
xchg
sbbl
sub
cmpb
test
jl
lods
inc
push
dec
push
push
ret
jnp
sbb
into
or
sbb
out
aam
sub
sub
pxor
add
or
mov
in
mov
adc
in
daa
xor
dec
js
ss
dec
xchg
jle
dec
pop
dec
lret
mov
cmp
add
daa
ss
adc
sbb
out
cmp
shr
mov
xchg
push
jge
adc
sub
xchg
std
or
arpl
lcall
xor
shlb
ss
shr
jg
mov
mov
fmull
jle
jecxz
insb
mov
pop
test
push
and
xchg
stos
jle
xor
and
xor
ficomps
ds
mov
leave
rcrl
jno
sbb
cs
ja
rolb
test
push
mov
xor
push
push
xchg
sti
xchg
stos
push
jmp
popf
inc
cli
lea
push
mov
xor
mov
movsl
pop
fwait
aaa
inc
icebp
fsubs
xor
pop
mov
sahf
roll
faddl
add
ss
cmp
std
lods
jmp
push
cmp
xchg
cmc
clc
push
adc
push
push
and
negl
pop
xchg
shrb
fdivrs
mov
or
pop
nop
xlat
mov
xchg
sbb
sub
adcl
mov
jno
add
lcall
mov
sahf
mov
stc
mov
loop
aam
xchg
dec
test
cmpsb
xor
and
out
ja
aam
add
lret
jmp
pop
jb
fistl
out
lods
inc
rcrb
ret
lods
int3
lret
incb
int
sub
adc
out
call
inc
stc
xchg
lret
mulb
outsb
xor
insl
jne
inc
pop
out
xchg
xor
sbb
ss
add
xchg
nop
sub
mov
rclb
push
sti
sub
push
roll
dec
cmp
inc
cmp
pop
xor
xor
xchg
push
add
cli
and
jo
jne
or
cs
fbstp
mov
mov
out
mov
push
xchg
cwtl
and
mov
mov
or
shlb
mov
sub
mov
mov
loope
mov
data16
sbb
xor
pusha
xchg
insl
pmulhw
dec
and
xchg
inc
inc
sub
inc
pushf
or
cmp
and
mov
pushw
mov
leave
cmc
mov
stos
loopne
fidivrl
enter
shll
test
inc
loopne
clc
loope
sbb
jns
outsl
mov
sbb
out
nop
lret
inc
lods
pop
fdiv
mov
push
loope
imul
cltd
jbe
jecxz
pop
lods
daa
pop
jne
adcl
dec
and
sub
insl
ror
aad
jg
ljmp
cmp
out
shrl
pop
out
push
data16
lahf
insb
addr16
in
data16
insl
mov
in
add
cmpsb
add
or
pop
dec
mov
fidivrs
inc
frstor
or
xchg
scas
lds
fs
xor
lea
mov
out
cmpsl
xor
pushf
push
sub
sbb
pop
fnsave
test
mov
adc
xor
mov
lods
out
or
mov
ljmp
je
loope
xor
mov
cmp
xchg
ret
lcall
inc
negl
or
or
mov
std
xchg
dec
pcmpeqw
and
push
xchg
fsubrs
stc
xchg
fdivr
xchg
cmp
shlb
jl
fldenv
in
mov
shll
popf
cmpsb
nop
cwtl
daa
cmp
push
out
cwtl
sarl
daa
and
cmc
pop
lods
out
dec
push
loop
nop
jecxz
push
rcr
adc
sub
push
loopne
rcr
push
push
adc
cwtl
pop
pop
xlat
cmp
sahf
jmp
push
stos
pop
mov
out
jb
into
test
ret
jecxz
xor
fiaddl
cmp
movsl
dec
add
fistps
mov
or
cmp
and
sbb
sahf
lret
mov
jno
dec
imul
rorb
add
sub
sbb
testb
push
push
cli
fiadds
push
fwait
jae
call
dec
lea
lret
push
fs
xchg
rcrb
cvtps2pd
xchg
daa
xchg
or
out
loopne
hlt
adc
dec
mov
push
pop
inc
ja
jbe
xlat
fwait
scas
push
lahf
insl
lcall
push
fiadds
sbb
push
jmp
jbe
lahf
adc
test
lock
pop
inc
inc
movsl
movsb
add
and
jbe
repz
pushf
sbb
push
and
test
cmpsl
data16
xchg
jecxz
xor
rcll
into
jne
ret
aas
out
lods
sub
fiadds
scas
pop
mov
jnp
xlat
in
sbb
repnz
mov
decb
xchg
add
push
pop
fldcw
sbb
xor
pop
nop
rcrb
xor
outsl
sub
in
repnz
add
or
mov
xchg
add
dec
aam
inc
sub
inc
sub
dec
addr16
or
lods
fisubl
xor
ret
das
mov
inc
pop
or
pop
sub
arpl
mov
test
sbb
popa
mov
sub
or
stos
scas
xchg
cld
aas
sbb
mov
orl
push
cmp
jle
mov
pop
or
imul
lret
dec
ret
clc
fistps
push
push
in
and
xchg
mov
ret
push
and
cltd
insl
or
fs
jecxz
add
ss
xchg
push
push
js
inc
jns
insl
mov
call
mov
pop
lods
pop
push
sbbl
dec
pop
jbe
jbe
lea
lds
popa
aam
mov
push
adc
jnp
cmovge
fs
inc
cvtps2pi
outsb
add
out
jne
inc
xor
dec
pop
lods
xchg
stos
jmp
imul
lds
insl
scas
sti
js
sti
jp
pop
jne
push
stos
mov
rcrl
adc
add
pop
loope
adc
xor
cld
das
fmulp
xor
call
sbb
pop
pop
insb
xchg
clc
cli
test
andl
fnsave
adc
sahf
sbb
popf
xchg
pop
add
push
push
call
cmp
repz
lahf
negb
mov
les
daa
sub
add
sbb
sbb
pop
loope
dec
push
xorb
out
aad
gs
dec
xchg
xchg
sbb
lcall
mov
ja
xchg
test
enter
cmp
sti
and
push
push
push
movsb
dec
xchg
jne
and
lods
adc
xchg
pop
in
jge
mov
fbld
stc
push
push
inc
mov
out
andl
test
pop
imul
mov
cltd
and
push
mov
or
mov
sub
cmp
push
push
cmp
and
mov
mov
sub
add
test
add
inc
pop
push
aad
enter
adc
add
jecxz
push
xor
push
sub
dec
out
and
mov
aam
sbb
aam
push
and
dec
fmull
sbb
sbb
fstpt
repnz
lret
sahf
and
icebp
sub
popw
dec
sbb
pop
fnstenv
add
dec
add
dec
sub
jp
fldt
jmp
cltd
jae
fldenv
pop
testb
or
inc
in
inc
rcll
jae
js
cld
jne
loopw
pushf
inc
in
bound
mov
jecxz
inc
outsl
jae
adc
int
mov
cmp
lds
jecxz
sarl
into
sahf
fwait
pop
hlt
mov
sbb
or
test
sti
stos
das
xchg
add
adc
js
sbbb
decl
xchg
and
and
repz
xchg
jg
xor
inc
cmc
loope
push
stos
inc
mov
popa
jnp
and
mov
and
fnsave
push
ja
gs
cmp
mov
mov
sti
mov
lret
mov
push
pop
pop
push
dec
jbe
sub
lea
add
rol
pop
std
mov
push
add
cmpl
inc
jno
in
aas
adc
or
cmpb
in
in
insb
push
btr
cmp
ds
gs
es
xor
xor
xchg
add
incl
int
addl
fisttps
dec
xchg
ja
insb
sarl
aaa
push
add
pop
jbe
out
xor
cmp
or
push
and
mov
push
lahf
inc
imul
movsl
and
cmp
aas
fisttps
shl
sbb
insl
clc
ret
ficompl
lods
out
cmp
shlb
or
and
xchg
inc
test
cwtl
lods
xchg
and
popa
push
push
jne
xlat
leave
pop
inc
lods
testb
push
pop
lret
cmp
jmp
jp
sub
jae
mov
test
sub
mov
mov
lret
push
gs
or
das
ljmp
rorb
mov
movsb
fwait
mov
mov
xchg
push
push
push
in
clc
mov
loop
fiaddl
xchg
pop
lahf
pushf
jns
imul
mov
fnstsw
stc
iret
cltd
aam
inc
sub
inc
mov
jp
dec
int
xchg
dec
rorl
add
dec
sti
out
xor
adc
mov
push
dec
fbstp
cld
lahf
fcomi
or
out
rcrl
fistpl
orl
stc
dec
adc
test
movsb
and
mov
lds
jns
lret
mov
movsb
add
mov
test
xlat
pop
push
pop
cmp
mov
xlat
les
cmpsl
jno
fstps
xchg
push
pop
aas
adc
dec
lock
mov
xchg
or
arpl
jo
mov
subb
je
stos
jg
mov
rorb
mov
ljmp
jnp
lea
je
xchg
adc
sub
adc
movsb
xor
add
jae,pn
test
cmp
sbb
adc
xchg
loope
sbb
inc
sahf
inc
and
mov
adc
xor
mov
and
or
push
cmc
pop
insb
stos
idivl
jno
imul
mov
rcr
inc
mov
jp
mov
fdivrs
sbb
cmp
pop
jle
cld
pushf
sub
enter
add
jae
gs
stos
jno
or
dec
dec
adc
or
adc
leave
shlb
or
lock
fwait
lret
push
and
inc
loopne
scas
push
cmpsl
in
push
xchg
inc
stc
adc
stos
enter
adc
rcrb
pusha
outsl
lcall
cmpsl
fistps
xchg
add
mov
adc
or
addr16
mov
cmpsb
stos
jl
inc
sub
fsubrs
cmp
mov
xor
sahf
sbbb
pop
test
paddd
ror
jmp
cmp
aaa
scas
ja
inc
dec
jg
cmp
gs
jmp
pop
push
popa
add
outsb
addr16
sti
sbb
mov
jle
lret
adc
out
imul
add
fldt
add
stos
inc
outsb
scas
add
aaa
push
mov
and
in
call
sbb
adc
push
loopne
sub
jno
mov
push
or
push
push
jb
or
testl
cmp
mov
cmp
mov
add
xchg
cs
pop
mov
loop
std
movb
popa
das
dec
mov
add
rcll
ss
push
xchg
mov
fmull
mov
dec
pop
mov
jb
pop
or
push
out
lret
pop
shr
outsl
aam
or
push
repz
loopne
pop
in
push
daa
adc
inc
scas
das
sub
scas
cmp
clc
iret
mov
add
mov
mov
ficoml
popa
icebp
add
push
loop
stc
and
xchg
add
mov
shlb
insb
gs
leave
push
je
jne
neg
mov
nop
xor
fidivrs
push
fldl
es
push
push
jns
fstpl
jae
fisttps
cmp
in
inc
clc
repz
pop
adc
stos
js
in
arpl
stc
mov
lock
arpl
dec
or
lea
les
sub
ljmp
lret
out
adc
or
in
lret
mov
dec
das
das
pop
sub
fstpl
adc
fwait
xor
or
mov
adc
adc
cmpsl
push
int
adc
arpl
pop
test
sub
outsl
inc
pop
add
cmc
mov
data16
sbb
dec
xchg
xchg
stc
sbb
push
out
mov
mov
ds
sub
lods
lret
pop
jae
outsl
cltd
jae
push
jne
aam
dec
out
fs
xor
popf
incl
add
lahf
inc
test
add
cmp
hlt
pop
das
mov
lds
movsl
jmp
les
pop
pop
clc
xchg
xor
sub
and
insb
jge
in
or
dec
add
inc
fisubrs
test
popa
das
popf
sbb
imul
pop
jo
lahf
std
jae
in
inc
jbe
sti
adc
inc
sahf
ficoml
or
jl
call
jmp
bound
std
dec
xchg
popa
ret
int
fisttps
fisttpll
mov
cli
or
lds
enter
cli
inc
cltd
jp
setb
adc
outsl
in
mov
jmp
xor
add
aaa
mov
mov
and
jo
daa
inc
lret
lods
mov
push
xchg
push
clc
ljmp
adc
xorb
adcb
lds
pop
pop
add
or
out
loopne
jp
ljmp
addr16
add
arpl
arpl
xchg
and
test
pop
adc
out
lods
xchg
popf
pop
xchg
push
dec
fsubrl
stos
jle
dec
stc
add
fsubrs
push
dec
es
sub
mov
movsb
ror
daa
in
icebp
and
push
or
cltd
in
loop
movsl
out
das
sbb
mov
sbb
addr16
je
sub
pop
push
mul
pop
jg
or
push
cmc
mov
sbb
loope
ret
call
sbb
shlb
insl
ja
in
jnp
shlb
sbbb
cmc
pop
stc
pop
hlt
xor
fstpt
jle
out
and
sbb
mov
jmp
mov
adcl
adc
jge
add
stc
into
add
sub
jb
xchg
enter
aaa
inc
jne
ret
sti
mov
inc
call
popf
mov
ret
adc
jne
xchg
int3
mov
jl
jle
xor
int
xor
xchg
or
jl
and
js
jns
dec
test
daa
aam
xchg
dec
stos
xchg
push
lods
rol
in
pop
add
ret
or
jmp
xor
or
adc
popf
push
xor
sub
mov
xchg
out
cmpb
fidivl
add
cmc
in
xchg
mov
jnp
mov
sub
and
aaa
dec
push
mov
data16
cli
jle
int3
mov
iret
loope
ret
int
scas
jo
fistpl
xlat
into
lret
or
in
cmp
push
xor
xchg
push
sbb
std
add
leave
in
cli
imul
mov
sbb
ljmp
scas
into
enter
js
push
xor
insb
xor
mov
divb
adc
xchg
add
fstps
lahf
cld
mov
jb
cli
xchg
jl
or
and
les
lret
jg
sti
leave
xorl
sbb
test
push
or
pusha
mov
fdivl
popf
push
jb
and
insl
imul
notb
inc
jmp
in
data16
mov
jmp
leave
mov
xor
dec
pop
iret
dec
sbb
sbb
movsb
cli
rorl
mov
sbb
push
inc
outsb
jg
adc
push
sbb
pushf
les
in
dec
dec
inc
add
cmc
lods
xchg
xor
mov
sti
into
fcomps
fistl
push
jle
mov
jg
pop
sbb
into
xchg
mov
add
nop
stos
sbb
pop
jle
je
es
pop
fsub
push
dec
lock
jl
adc
sub
push
sbbl
mov
push
xchg
sub
lret
mov
mov
pop
cmp
cmp
in
je
jnp
mov
dec
dec
mov
push
lds
iret
dec
jmp
pop
ret
pop
insb
insl
mov
jmp
add
xchg
popa
lahf
lahf
cmp
in
mov
cmp
dec
xchg
lahf
pop
lea
adc
loop
pop
inc
sbb
or
popa
mov
jl
sarb
and
push
fcomps
iret
dec
fimull
lahf
sahf
dec
push
mov
dec
std
shrl
add
je
fwait
sbb
cmp
sbb
daa
jo
xor
in
xchg
jmp
imul
aas
cltd
jne
sub
ljmp
into
push
sbb
push
or
mov
les
inc
mov
sbb
in
loope
jmp
ljmp
pop
mov
imul
dec
mov
ja
in
fdivp
imul
lods
cmp
jae
les
sbb
mov
aad
rcll
mov
mov
clc
daa
sti
out
jle
cmp
jp
inc
pop
into
adc
cmp
iret
iret
and
mov
insb
fndisi(8087
mov
aas
lcall
adc
ss
shl
mov
adc
inc
adc
sti
pop
lret
and
jnp
jecxz
adc
add
push
add
adc
movsb
je
or
outsl
and
scas
scas
jnp
nop
insl
and
aas
jmp
repz
leave
popa
cwtl
pop
dec
pusha
inc
insl
mov
mov
cmp
pop
push
repnz
pop
adc
mov
fidivrs
dec
shlb
shrb
mov
mov
push
cmp
stos
or
pop
sub
pop
outsl
sbbb
mov
dec
ds
les
jb
add
or
loopne
push
inc
mov
push
inc
mov
pop
pop
adc
mov
cmpsb
xchg
mov
popa
scas
dec
sub
xchg
scas
loope
mov
cld
dec
xchg
fcomip
out
mov
std
xlat
sub
mov
dec
pop
test
repz
lret
cmpsl
mov
cltd
incb
mov
dec
lcall
fwait
test
arpl
fadds
adc
je
mov
mov
stc
pop
in
stos
inc
sbb
lret
loop
test
dec
fnstcw
mov
test
cs
sbb
aam
pop
les
ljmp
pusha
addr16
lods
data16
push
mov
pop
je
fs
or
insl
mov
inc
insl
pop
push
stc
loopne
sbb
test
jae
sbb
jl
clc
xchg
inc
popa
daa
cmp
mov
adc
push
outsb
add
pop
nop
repnz
fisttpll
dec
lods
and
rcrb
testl
pop
xchg
cmp
pop
mov
int3
xchg
ss
icebp
mov
mov
fistpl
inc
fmulp
movsl
mov
pop
scas
inc
mov
bndstx
pop
mov
xor
mov
iret
insb
arpl
pop
mov
out
sarl
test
cmp
mov
cltd
iret
outsl
int3
mov
xchg
movsl
std
xchg
sti
and
lds
cltd
lahf
nop
push
jmp
mov
dec
jno
adc
loopne
sarl
pop
je
add
xchg
pushf
mov
ret
mov
jnp
inc
inc
shll
dec
adc
pop
cmp
lds
shl
pop
push
mov
movsl
jbe
lods
int
movsl
pop
icebp
mov
gs
push
add
xor
jae
xchg
xlat
inc
gs
mov
xchg
dec
mov
dec
hlt
xchg
sar
mov
xchg
es
dec
jp
jmp
mov
adc
loopne
cld
jno
pop
jle
adc
out
in
cmpsb
fs
xor
push
xor
stos
pop
loope
in
push
jl
es
sbb
mov
jecxz
sub
adc
test
mov
add
fbld
div
adc
movsl
jmp
xor
push
cld
dec
dec
dec
push
fdivrl
adc
in
pop
add
mov
jnp
xchg
gs
mov
ss
mov
shll
cmp
adc
rcr
mov
out
or
pop
cmp
mov
add
jmp
stos
jnp
cmc
or
push
insl
inc
sub
fneni(8087
fs
mov
sub
nop
in
rcrb
pushf
lea
sbb
push
ja
mov
insl
inc
jns
loopne
add
in
jge
imul
loope
mov
mov
popa
sbb
lret
pop
pop
and
fistps
push
sarb
dec
movsb
out
fsubr
pop
dec
sub
pushf
push
and
push
add
mov
inc
or
push
pop
push
dec
or
inc
fstpt
push
push
decb
add
pop
loope
xor
push
mull
add
sbb
adc
mov
mov
jmp
test
dec
popa
jmp
and
sub
xchg
iret
lock
mov
outsl
insb
xchg
xor
mov
xchg
int
adc
xchg
rcr
mov
xor
jg
xchg
pop
pusha
sahf
add
nop
xor
dec
cwtl
mov
push
inc
cpuid
out
lahf
pop
icebp
lahf
dec
cmp
xchg
in
adc
mov
pop
adc
js
loop
sub
or
push
pop
pusha
ljmp
sbb
dec
mov
mov
mov
fistps
lods
cmp
dec
xor
daa
addl
add
cmpsl
out
mov
pop
mov
sbb
xchg
fisubrl
imul
fwait
cmpsb
enter
jg
cmp
out
sbb
pop
push
jns
icebp
in
xchg
popl
lods
or
and
psrlw
dec
mov
shll
jecxz
inc
out
js
mov
pop
imul
or
rcr
mov
out
xor
sub
into
push
adc
push
mov
dec
jl
cwtl
daa
pop
push
lea
addb
xchg
and
sahf
iret
add
and
ficomps
pop
movsb
xor
jp
lock
out
push
fisubs
fbstp
cmc
push
add
cmp
sbb
lock
pop
xchg
inc
insl
add
movsb
pusha
push
sub
sub
inc
cld
lahf
lret
dec
xchg
mov
lock
push
incb
outsl
lcall
sbb
sti
pop
and
imul
cwtl
xlat
movsb
xchg
sahf
pop
test
jecxz
mov
pop
push
dec
mov
gs
ljmp
jo
adc
andb
pop
in
xchg
push
insb
add
movl
fcmovu
out
jno
mov
jmp
push
arpl
sbb
call
sub
dec
int3
push
sbb
jb
ss
add
xor
adc
mov
sub
adc
fmul
mov
push
adc
or
shr
mov
test
pop
inc
cmpsl
xchg
push
pop
scas
idivb
loope
sbb
fstpt
es
inc
fnsave
je
push
int3
jmp
mov
jno
xlat
hlt
add
shrl
mov
icebp
fsubr
outsb
cmpsb
fidivrl
add
fcompl
test
insl
mov
in
add
loope
mov
xchg
lret
pop
pop
je
mov
add
xchg
rorl
inc
out
mov
incb
dec
addl
mov
mov
es
call
insl
popf
shrl
dec
fstpl
and
ss
sbb
xor
not
fstl
sbb
add
push
clc
es
sbb
mov
sbb
add
mov
lds
inc
mov
add
push
sahf
inc
jecxz
testl
data16
xlat
pavgw
jb
jmp
loop
popa
adc
inc
push
addr16
lcall
shr
and
clc
es
mov
repnz
insb
add
xchg
sarl
jbe
into
push
push
pop
sub
repz
add
pop
cmp
repz
hlt
dec
das
add
pop
aaa
imul
sub
push
mov
lret
int3
fimull
lahf
ss
mov
rclb
xchg
aaa
stos
push
sahf
push
dec
push
push
and
pminsw
mov
loop
inc
jne
jmp
enter
repnz
mov
lret
inc
movsl
sbb
or
insb
ljmp
mov
sub
pop
xor
loopne
jns
push
push
das
cs
xchg
xor
in
sbb
ss
clc
call
pop
push
or
or
xchg
mov
mov
cmp
and
push
mov
negb
pop
popa
jbe
push
push
jo
cmpsb
mov
dec
mov
cmp
xchg
int
std
and
inc
insl
cmpsl
xchg
lret
pop
fildll
and
loope
or
fs
mov
loopne
sub
rol
pop
and
jl
xor
sbb
int3
sarb
adc
pop
mov
loopne
xor
sbb
pop
out
mov
ficoms
lahf
jno
mov
dec
es
loopne
and
pop
xchg
mov
dec
and
sahf
scas
cmp
aas
pop
cs
sub
insb
xchg
movsb
push
lea
jg
arpl
fidivrs
imul
adc
orl
pop
hlt
data16
add
or
mov
lods
mov
mov
and
pop
push
mov
ret
pop
test
cmp
adc
cld
call
es
mov
cmpsb
lods
mov
jl
sbb
lock
mov
nop
fs
fs
or
jmp
mov
mov
jge
and
xchg
repz
in
nop
inc
in
inc
pop
fldl
push
push
test
cmp
pop
sbb
inc
xchg
loop
pop
adc
mov
xchg
cmp
cmp
mov
sahf
sub
filds
sub
test
addr16
inc
sbb
lds
in
adc
add
lods
aaa
jg
dec
inc
pop
lea
sti
sub
xor
ss
push
mov
and
jp
sti
add
testl
mull
movsb
xor
fnstsw
ss
mov
push
out
inc
cmp
data16
push
mov
adc
ret
gs
xor
sbb
mov
fcomi
movsl
jae
and
mov
les
into
pop
stos
jp
push
arpl
dec
lods
adc
or
fwait
andl
adc
test
lret
push
cld
std
inc
push
sub
ficompl
cld
adc
rcr
mov
and
ficomps
mov
mov
out
popf
jle
pop
stos
mov
sbb
or
mov
add
ss
stc
inc
push
jns
fnstsw
fistpl
mov
icebp
pop
sub
aad
daa
sub
gs
push
jmp
xchg
mov
xchg
dec
in
jp
fsubl
aam
push
xchg
lahf
inc
dec
fiadds
xchg
inc
je
xchg
cmp
inc
push
sub
adc
je
shr
imul
sbb
adc
clc
xchg
shlb
in
sub
jno
ret
add
and
cmpsb
lods
push
rcrl
add
push
enter
aaa
mov
test
adc
or
icebp
dec
dec
sub
mov
xchg
xchg
stos
jne
lea
pushf
aam
adc
cmp
aas
in
xchg
rclb
push
fmuls
insb
gs
scas
cwtl
pop
or
mov
jp
xchg
mov
stc
mov
adc
cmpsb
sbb
test
push
ss
rorb
sub
sbb
pop
dec
inc
add
sub
mov
and
cmc
arpl
mov
fidivrl
and
sub
out
in
cmp
pop
les
xor
aad
lahf
inc
mov
adc
lret
xor
mov
shll
mov
add
insl
mov
pop
les
cmp
aas
cmp
jns
jae
ficomps
scas
int3
add
sub
mov
mov
mov
ss
jmp
imul
xorb
nop
cmp
imul
xor
jmp
xchg
cmp
shll
sub
jg
push
dec
dec
xchg
dec
dec
or
jns
push
jmp
push
arpl
aaa
dec
mov
xlat
push
jbe
pusha
scas
lret
push
in
sbb
jle
jbe
add
jge
fidivl
and
sub
jbe
mov
loop
xchg
lds
sbb
int
enter
sahf
mov
sahf
push
inc
pop
jle
sub
or
cwtl
xchg
cmp
mov
cmpsb
mov
and
sub
shl
push
pop
ja
adc
pop
and
fwait
dec
dec
ret
sarl
and
jbe
adc
jo
and
add
loope
data16
leave
and
lods
cmp
push
sbb
movsl
xor
jne
mov
nop
sbb
mov
imul
and
xchg
cmp
ret
les
ss
pusha
mov
js
add
mov
lods
adc
pop
ret
push
es
int
cmove
mov
div
add
add
dec
lea
mov
xchg
cmp
ret
xchg
imulb
mov
fucomi
jnp
fsubl
pop
ja
cli
xchg
and
mov
cld
add
push
xor
shlb
stos
jbe
sbb
test
cmp
int
fbld
mov
pop
xlat
pop
in
into
or
mov
sub
les
xchg
mov
lahf
mov
pop
jb
push
push
lods
bound
arpl
xchg
mov
push
outsb
fwait
cld
jo
adc
pop
dec
xchg
test
sub
pop
mov
decl
daa
adc
je
int
incl
pop
xchg
cmp
cmp
fwait
repz
in
jp
cmpsb
ss
xchg
test
push
jnp
add
andl
xor
fiadds
aas
sub
hlt
pop
aam
pop
sbb
or
xor
xchg
repz
xlat
shl
andb
lret
cwtl
cmp
movsbl
scas
cmp
vcvtss2sd
sub
mov
or
lret
jb
aad
mov
mov
cmp
jnp
sbb
ret
or
nop
inc
add
mov
scas
ljmpw
cmp
mov
iret
hlt
xchg
xchg
dec
xlat
push
push
mov
mov
in
insb
inc
imul
jne
icebp
add
loopne
ret
rorb
adc
mov
adc
pop
fwait
push
into
ret
mov
js
cwtl
sbb
call
xchg
xchg
adc
and
sbb
push
pusha
popf
loopne
outsl
mov
xchg
fbstp
scas
lods
dec
xchg
sub
stos
xchg
icebp
or
movsl
cmp
pop
adc
push
inc
mov
cltd
ljmp
cmp
mov
lret
inc
mov
xlat
or
ds
repnz
rcrb
jnp
inc
test
xor
inc
xchg
fidivrs
jae
repnz
hlt
lods
push
and
dec
fdivp
push
push
lods
lcall
leave
add
cltd
sbb
fdivrs
ds
cmc
adc
dec
out
sbb
pop
dec
mov
aam
cmp
mov
fldenv
sahf
xor
xor
test
insb
jae
mov
out
inc
stos
in
mov
inc
sub
sub
ss
loopne
mov
cltd
stc
jecxz
jge
push
push
add
cmpsb
sbb
loope
in
ret
mov
dec
push
dec
icebp
jns
mov
mov
jnp
jbe
fildl
lahf
dec
and
std
ja,pt
jo
incl
push
or
shr
sub
in
inc
jge
mov
add
dec
je
mov
mov
xchg
dec
int3
shrl
xlat
add
push
mov
mov
sti
fcmovbe
pop
cmpsb
je
xchg
jae
sti
pusha
aad
outsb
ds
add
dec
xchg
and
push
fadd
or
aam
test
add
cmp
pop
js
pop
rcrl
arpl
cmp
mov
cmp
jno
hlt
leave
ret
popf
push
cmp
ret
jnp
xchg
add
lds
sbb
into
clc
push
fists
je
and
mov
xchg
cmp
scas
xchg
dec
aaa
adc
xchg
clc
lret
mov
out
int3
nop
cmp
mov
ret
jmp
loop
mov
mov
ds
jo
pop
xchg
xchg
pop
in
mov
cli
inc
mov
stos
mov
call
jns
repz
jecxz
flds
lcall
cmp
nop
scas
adc
mov
jp
pop
dec
mov
push
xchg
add
xor
adc
cmovs
in
loopne
ret
test
stos
jge
mov
bnd
jb
mov
jge
in
leave
pop
lods
mov
mov
fidivl
rcrb
jp
fcoms
loop
sbb
cmp
xor
lods
sti
jg
lea
jne
sti
adcl
test
or
aam
jmp
mov
sarl
xchg
fnstcw
repnz
shll
push
sub
ss
push
and
push
inc
cmc
fwait
or
push
cmp
shl
adc
frstor
in
cmp
sub
jbe
xor
lock
sub
test
cld
scas
out
stos
push
movsb
cmp
mov
adc
cmp
xchg
cmp
aad
lea
pushw
out
xchg
out
mov
xor
and
pop
pop
mov
jle
or
jmp
pop
rcrb
test
pop
cmp
sbb
stc
add
mov
imul
lret
int3
xlat
sbb
jg
cmp
dec
mov
push
sub
xor
cmp
sbb
cmp
push
push
xchg
test
lret
addl
out
add
rep
cli
sahf
out
push
dec
negb
daa
xor
fs
inc
loopne
dec
leave
aad
jae
adc
mov
mov
pop
addb
sbb
push
xchg
sahf
or
pop
and
movsb
mov
push
leave
int
xchg
xor
jle
call
jecxz
sub
dec
xchg
insl
in
or
push
push
pop
daa
notb
arpl
adc
cmp
mov
fcomps
push
cltd
jl
or
add
jmp
lret
ja
call
cmp
cmp
inc
idivl
and
and
les
ret
addr16
inc
add
sub
jmp
cli
out
sub
push
mov
movsb
jle
cmp
movsl
mov
mov
outsl
xchg
testb
xchg
hlt
iret
add
and
sbb
jge
fiaddl
xchg
add
testb
test
sub
mov
mov
mov
mov
sub
js
sti
mov
js
fcomip
sbb
mov
sub
sub
cmp
add
movsb
jae
jg
or
sbb
mov
dec
inc
mov
mov
cmp
in
push
ret
add
push
add
sbb
xchg
and
jns
sub
daa
push
mov
sbb
cltd
inc
mov
stos
lds
test
ja
lret
dec
push
push
xor
lds
test
gs
xchg
test
pop
dec
lea
mov
adc
push
push
and
nop
inc
fistpl
ja
cmp
imul
nop
cmp
andl
xor
xchg
fdivp
lret
pop
cld
jmp
mov
sub
jl
ja
push
push
in
sbb
push
mov
out
ficomps
stos
ljmp
cmp
pop
jnp
aaa
add
pushf
out
xor
mov
push
shll
dec
push
cwtl
leave
fsub
out
mov
xchg
xlat
hlt
add
or
test
jp
or
lods
xchg
test
nop
mov
lock
fmul
enter
mov
mov
xchg
mov
mov
xchg
jge
push
cmovp
sub
sbb
sti
outsb
cli
xchg
mov
in
gs
xlat
dec
mov
mov
dec
jae
cmp
adc
adc
and
fildl
scas
mov
movsb
je
inc
sub
mov
and
cmp
ljmp
jge
lcall
test
cmp
aad
in
mov
mov
jp
imul
adc
and
outsb
clts
mov
jmp
adc
and
mov
mov
pop
and
xchg
sbb
pop
push
pop
xchg
insb
sti
orb
add
and
or
es
imul
fcmove
pusha
and
dec
popa
mov
faddp
push
nop
icebp
ds
sti
inc
and
fnsave
push
andl
pusha
jnp
mov
notl
sub
mov
inc
jnp
mov
push
hlt
pop
fucomp
bnd
push
cmp
stc
stos
push
cmp
lods
das
insl
shlb
mov
mov
inc
in
dec
adc
dec
stos
cs
out
into
or
jno
xor
add
or
mov
push
or
bound
and
ja
aaa
xchg
arpl
and
scas
mov
mov
jb
das
mov
in
fst
and
inc
mov
jmp
aaa
pop
jge
cmc
and
mov
push
incb
int
sbb
sub
mov
jge
jb
add
mov
pop
mov
cli
mov
ror
xor
sbb
adc
ss
or
and
cmp
pop
and
jle
inc
mov
pop
and
add
xchg
aad
sbb
mov
popf
push
and
or
and
scas
dec
jo
scas
pushf
sub
scas
jecxz
stos
jb
dec
pusha
imul
or
hlt
cmp
in
xor
stc
call
cmpsl
mov
repz
mov
push
xor
das
leave
imul
sbb
push
inc
adc
popa
jns
dec
ja
sbb
add
xor
jns
push
mov
jecxz
cltd
add
xor
pop
fiaddl
js
adcl
and
int
scas
push
inc
add
xor
dec
sbb
lret
sub
mov
fadds
adc
push
lock
ss
cli
or
fbld
push
inc
mov
pop
in
out
sub
cwtl
movsb
rorl
mov
jg
fldenv
pop
stos
ss
inc
mov
add
dec
lret
inc
mov
mov
mov
or
call
test
push
test
jle
and
test
xor
xchg
lock
jno
pop
loop
je
cwtl
mov
movsl
mov
ja
test
sub
push
int
adc
or
fwait
mov
rcr
push
mov
cmp
push
sti
rcr
roll
jns
lods
fistpll
mov
call
dec
cmp
or
cmp
sbb
es
push
int
adc
push
stos
xchg
pop
je
in
jbe
call
xor
in
or
push
in
in
mov
shrl
outsl
cmp
jae
test
inc
mov
daa
movsl
push
mov
std
iret
lcall
sbb
jnp
and
jnp
jge
test
ss
js
icebp
in
sti
dec
mov
popa
mov
mov
lcall
std
xor
sub
in
sbb
aas
pop
pop
outsl
lds
push
into
xchg
and
inc
out
fildll
lcall
mov
push
outsb
dec
es
fmul
dec
aas
mov
cmp
js
mov
push
out
add
das
testl
cmp
jae
jb
xor
add
fstpl
add
pop
mov
inc
jmp
or
bound
leave
mov
add
stos
lcall
js
mov
jns
loopne
icebp
jp
xchg
and
jg
mov
xchg
sub
sbb
mov
notl
in
clc
lret
inc
loop
push
xchg
clc
or
push
fsts
jp
outsb
rorl
mov
lds
adc
es
push
int3
lret
dec
push
pop
clc
pop
dec
sub
subl
lds
aam
jp
pop
loope
push
dec
in
call
fdivs
ss
data16
pop
fmull
idivl
jo
pop
jp
xchg
lahf
mov
xor
ret
je
pop
xor
sbb
jmp
pop
scas
xchg
mov
sbb
and
mov
sbb
mull
sbb
or
rorl
data16
xor
mov
mov
data16
in
std
push
test
xchg
test
imul
enter
add
sub
fisubl
sbb
movsl
rolb
jo
negb
push
mov
scas
fisttpll
das
cld
in
adc
adc
loop
daa
loopne
pop
out
pop
cmp
aas
mov
loop
mov
xor
jle
fstpl
lret
outsb
mov
sarb
pop
ficoms
pop
add
cmpsb
lret
scas
mov
sti
cmp
xlat
jp
out
pop
mov
repz
adc
rorl
in
inc
ret
cs
sbb
out
mov
cmp
sub
fwait
sub
push
inc
and
sub
ficoms
pop
push
insb
xor
adc
jl
aad
pop
mov
lods
aaa
adc
cs
ja
dec
rcrb
pop
mov
outsb
mov
shll
test
xchg
mov
push
adc
fsubrl
test
inc
out
je
jmp
fadds
adc
pop
cmc
or
push
movsl
xlat
loope
sub
jae
leave
es
dec
sub
popa
ljmp
shll
test
pop
movsl
shr
and
or
notl
cmpsb
shll
cmp
cmpsb
cwtl
outsl
sbb
addr16
movsb
scas
mov
dec
adc
add
cs
subl
xchg
outsb
xchg
cmp
dec
outsl
in
enter
fcompl
mov
sbb
rcl
xchg
mov
pop
imul
lods
mov
jge
scas
lahf
pop
jg
mov
xchg
xor
adc
xor
mov
out
insl
loope
flds
mov
fimuls
call
jl
pop
cwtl
addr16
sub
enter
outsb
pop
loope
adc
fidivrs
imul
cld
cwtl
mov
adc
movsb
inc
pop
aam
fs
fidivrs
addr16
sbb
std
adc
dec
push
mov
xorb
jmp
dec
shlb
int
out
shlb
xor
icebp
sbb
and
sar
mov
movsb
sarb
adc
sub
push
imull
movsl
mov
pop
nop
and
popa
jecxz
fistpl
mov
push
pop
push
lcall
inc
fwait
mov
add
xor
les
mov
leave
mov
out
sti
inc
lock
jnp
push
aad
leave
lret
dec
inc
jo
xchg
icebp
cli
jae
mov
fs
jns
outsl
int
nop/reserved
sarb
inc
testl
addr16
lea
cmp
testb
adc
mov
xchg
aam
xchg
out
xchg
push
pop
stos
stos
daa
push
scas
icebp
mov
ret
dec
into
cmp
stos
inc
pop
lcall
sub
push
sbb
repz
faddl
or
les
cmc
pop
dec
js
sbb
push
cwtl
push
fsubrp
sub
mov
popa
div
cmp
insl
push
lcall
stos
outsl
sbb
rcrl
mov
fistpll
xchg
sbb
cmc
mov
lret
fnstenv
dec
out
jmp
mov
call
insl
fadd
sbb
lret
jecxz
stos
or
repz
xchg
mov
test
inc
lock
pop
fdivr
add
stos
pop
mov
pop
mov
pop
iret
out
pop
mov
stos
xor
icebp
iret
and
adc
xchg
fs
jle
pushf
lcall
iret
inc
jmp
fisubl
or
lods
inc
and
ret
add
add
daa
mov
mov
enter
inc
subl
push
xchg
cmpsl
icebp
mov
adc
int3
mov
or
or
pop
ret
mov
arpl
mov
sti
or
xchg
or
outsl
std
mov
pop
sub
pushf
subb
into
mov
out
dec
in
mov
or
sbbl
pop
mov
movsl
lea
fisubrl
xchg
xor
mov
fsubl
lds
add
dec
fcom
mov
decb
push
je
dec
or
pcmpeqw
inc
xor
push
or
push
sub
push
sub
ljmp
sbb
push
push
rolb
js
sbb
and
inc
pop
leave
sub
js
into
test
mov
push
outsl
push
clc
and
jbe
daa
sarb
push
mov
lea
imul
shr
sbb
mov
mov
cwtl
adc
adc
outsl
int3
inc
cmp
movsl
rcll
dec
pop
aam
repz
adc
nop
lods
ds
push
leave
mov
subb
cmpsl
push
jge
lret
test
stos
jb
insb
sahf
or
flds
out
add
pop
xchg
lock
mov
jl
or
lea
adc
stos
mov
push
or
sbb
inc
arpl
ficompl
es
popf
pop
fmull
jnp
fists
bound
cmp
shrb
movsl
inc
movsb
fwait
in
adc
jne
jp
adc
repz
inc
or
lds
mov
jne
repz
cmc
mov
imul
dec
outsb
aaa
xor
movsl
lret
std
pop
xor
int
pop
int3
mov
or
loop
sbb
xchg
pop
lret
js
loope
pop
adc
cld
cmpsb
sub
ss
sbb
sbb
imul
sbb
jbe
sarb
push
mov
mov
hlt
pop
push
ss
fidivs
sub
jp
fcompl
mov
in
or
jmp
rol
xchg
mov
xchg
add
or
add
cmp
jo
lret
xor
lret
cmp
adc
rcrb
push
shl
cmp
cmp
dec
add
test
push
es
xchg
push
mov
xorl
test
jnp
aas
popf
aas
push
lods
inc
ljmp
imul
mov
fcmovnb
rclb
lret
adc
sub
icebp
les
cmp
icebp
xchg
in
jg
ljmp
jge
push
repnz
test
push
cwtl
adc
lods
mov
std
and
pop
mov
pop
xor
test
push
incb
mov
xlat
inc
out
mov
repz
jno
jl
push
hlt
adc
dec
dec
lods
mov
and
and
call
cmp
testb
clc
mov
and
rcrb
push
add
es
ret
pop
bound
mov
rcr
pop
shlb
push
cmc
ret
popa
adc
loope
adc
ret
cmp
mov
mov
cs
inc
cmc
lds
ret
mov
aad
negb
popf
js
cmp
xchg
loopne
inc
sahf
out
cmc
in
jbe
jecxz
xchg
ret
or
fistps
dec
dec
pop
enter
xor
inc
mulb
clc
push
int3
adc
mov
in
and
xchg
add
addr16
rol
xchg
push
sbb
ljmp
lea
jmp
roll
cmc
cltd
or
sbb
jg
jbe
call
pop
push
pop
xlat
data16
xchg
icebp
push
fcompl
jge
push
xchg
cmp
test
sbb
enter
sub
dec
ret
dec
in
std
sbb
imul
cltd
stos
fsubrl
mov
popf
movb
fmuls
mov
mov
xchg
or
loop
and
push
mov
fwait
jle
notb
adc
adc
sbb
insl
add
lea
or
jne
sub
pop
push
xor
lods
or
mov
mov
mov
outsl
push
xor
insb
sbb
sbbl
mov
aad
ret
add
aaa
call
sub
xchg
ljmp
popa
jnp
mov
xchg
outsb
bnd
dec
add
sbbl
movd
cld
shrb
sbb
adc
add
cld
sahf
inc
or
cwtl
int
ss
fnstcw
pop
out
or
dec
scas
add
ja
xchg
negb
dec
cld
aad
cli
dec
lret
xlat
mov
lods
loope
or
fwait
inc
sbb
sub
negb
out
bound
sub
push
sarb
jge
mov
imul
xchg
cmp
sarb
imul
or
mov
cld
cmpsl
arpl
mov
add
xchg
inc
inc
jbe
jmp
lods
subb
or
and
cs
jp
push
or
lods
jp
and
mov
popa
pop
and
xchg
mov
stos
and
add
outsb
mov
dec
addr16
stos
andb
mov
jg
int
dec
xchg
aas
data16
mov
and
repnz
repz
daa
ja
sbb
add
push
lods
or
sahf
or
sub
in
filds
in
cmp
adc
mov
jmp
or
dec
test
cmp
mov
es
xchg
or
lahf
push
mov
cwtl
scas
inc
push
jb
call
aas
add
inc
sbb
jge
push
add
pop
cmp
or
imul
or
mov
cmp
insl
xor
pop
push
inc
shlb
imul
pop
imul
leave
inc
stos
pushf
inc
mov
sarl
stc
jg
sbb
jg
mov
arpl
dec
cmp
push
xchg
mov
mov
pop
jbe
jg
push
imul
cmp
push
mov
repz
bound
das
xor
mov
jle
xchg
sbb
idiv
or
fimull
lea
or
push
or
rcll
dec
movsl
xchg
cmp
dec
repnz
neg
out
jge
arpl
inc
sub
stos
cld
sub
in
cli
or
or
mov
or
lea
es
aaa
not
enter
or
mov
xchg
jl
mov
pop
jno
in
sarl
ljmp
xor
lods
xor
lods
pop
xchg
and
gs
adc
dec
movsb
lret
popf
cld
cmc
insl
mov
mov
popf
push
mov
cwtl
jmp
cli
mov
mov
sub
shl
and
mov
jae
dec
inc
pop
test
jo
or
jbe
imul
repz
stc
out
loopne
scas
jne
mov
std
shlb
fdivp
imul
add
inc
add
lock
pop
loop
mov
mov
test
test
mov
pop
pop
mov
add
push
ret
inc
int3
fistpll
out
or
push
xchg
rolb
mov
xchg
sti
andl
adc
clc
imul
hlt
mov
add
push
adc
pop
mov
fdiv
paddusw
xor
dec
mov
enter
fisttpll
int3
sbb
and
adc
add
push
or
das
or
ret
mov
enter
jnp
int3
out
out
jge
pop
dec
push
cwtl
enter
dec
cmc
mov
sbb
outsl
pop
dec
cmp
fidivl
lea
add
addr16
out
sbb
ret
pop
js
jb
arpl
inc
xchg
xorb
hlt
mov
test
mov
or
pop
mov
xchg
xchg
sub
lahf
mov
mov
ja
pop
std
ds
out
fst
or
push
mov
je
std
jns
loop
insb
xchg
sbb
xchg
lock
mov
mov
lods
ss
pop
adc
mov
insl
ficoml
push
mov
lret
fmuls
sbb
pop
add
push
xor
enter
pop
or
loop
or
les
or
outsl
push
pop
mov
xchg
cmpsb
aaa
popa
loope
push
jnp
leave
loope
and
mov
ret
ret
std
sub
subl
mov
mov
loope
mov
xchg
addl
sbb
pop
mov
jl
addr16
shlb
mov
sub
mov
insb
sub
stos
sub
sub
divb
pushf
and
sub
cwtl
pop
inc
sub
mov
addr16
nop
fdivp
lret
stc
xlat
pop
lea
ret
jl
mov
hlt
lock
dec
push
pop
jne
xor
outsl
and
aam
sbb
pop
les
or
xchg
jge
inc
into
shlb
ficompl
popa
adcl
push
push
outsb
cmp
mov
ja
leave
popf
or
pop
movsb
and
mov
cmp
movsb
xor
xlat
add
stos
add
lock
push
xchg
pop
adc
pop
sbb
dec
mov
mov
jnp
into
or
mov
sahf
mov
scas
xchg
pop
add
ds
inc
cmp
mov
int3
inc
js
inc
cmp
jnp
das
mov
cltd
pop
testl
jl
jecxz
push
cs
jecxz
xor
cmp
mov
jg
mov
xchg
lahf
jmp
jmp
xor
in
daa
pop
push
inc
mov
adc
mov
mov
jo
inc
lret
stc
iret
dec
pop
rolb
mov
xchg
aaa
xor
pop
outsl
pop
adc
rcrl
mov
sti
push
jle
cmc
sbb
jae
out
and
iret
add
daa
pop
pushf
mov
ja
sub
inc
repz
aad
mov
cmp
xor
ss
xchg
pop
lods
idiv
mov
pop
dec
or
xor
rclb
add
mov
pop
xor
adc
and
into
lahf
repnz
mov
mov
add
cmp
shrb
add
cwtl
sbb
and
jns
jno
je
fstpt
ds
subl
mov
imul
stos
inc
sub
xchg
adc
add
sbb
adcl
or
pop
cmp
mov
in
or
sbb
in
js
adc
jo
lcall
mov
jmp
pop
xor
lret
outsl
fdivrs
mov
mov
and
push
cs
mov
pop
aad
xor
and
stc
stc
mov
mov
and
mov
bound
sub
jno
cmp
ss
and
fdivr
inc
sbb
jle
mov
xchg
daa
pop
repz
xor
push
jecxz
icebp
fimuls
in
idivb
cmp
lret
mov
xchg
mov
mov
sahf
add
xor
sub
mov
insb
pop
les
inc
or
dec
or
push
leave
jno
sbb
push
mov
cmp
mull
push
add
sbb
add
push
jl
in
lahf
push
sbb
imull
lret
adc
xchg
hlt
cmpl
nop
loop
adc
pop
fwait
insl
aaa
pushf
sti
or
inc
add
outsb
xor
jl
stos
mov
mov
ss
jp
rcrl
inc
mov
mov
sub
push
xlat
adc
add
xchg
sbb
imul
decl
and
aaa
hlt
or
lods
out
sbb
push
sbb
lcall
push
or
add
movsb
insb
sbb
cli
or
pop
push
jl
lret
dec
mov
mov
sbb
scas
roll
insl
cmp
fs
out
xchg
adc
lcall
and
jg
orl
inc
lret
sub
sub
and
jb
movsl
lods
pop
inc
cmpsl
call
outsl
mov
cmp
lea
push
iret
sti
jmp
sub
fadds
outsl
repnz
adc
rcrl
mov
arpl
fimuls
gs
loop
push
jb
add
dec
mov
xor
lcall
jle
jge
add
es
xchg
mov
lock
and
xor
or
fwait
scas
lret
dec
sub
andb
jb
dec
push
sbb
jb
das
push
stos
cmpb
pop
inc
frstor
inc
xor
add
out
shlb
xchg
push
cmc
std
or
and
lods
xchg
mov
inc
dec
sub
jle
fdivr
outsb
dec
pop
cmp
adc
and
shrb
int
outsl
out
iret
cli
cmp
gs
pop
add
lahf
rcrl
jge
into
out
add
ds
aas
ret
and
mov
sub
pushl
movsb
aam
and
jne
dec
push
sti
cmp
out
inc
inc
or
in
cmp
loop
jae
sub
or
fstpt
mov
int3
push
lret
jae
add
push
ficoms
test
sahf
xor
mov
ror
mov
and
or
mov
jmp
jno
outsl
icebp
sar
es
or
scas
sub
mov
in
mov
mov
jns
js
rcrb
sub
cmp
jno
scas
pop
cmpsb
cmp
inc
loope
push
daa
cmp
lock
inc
arpl
testl
cmpsl
testb
fstpt
dec
or
mov
fldenv
js
mov
adc
mov
xlat
test
lods
rorb
mov
in
and
xor
dec
movsl
jne
xchg
or
sub
out
scas
aaa
xchg
xor
sbb
xor
popa
lods
mov
push
imul
add
sub
mov
gs
mov
ss
push
movsb
push
into
bound
cwtl
xchg
pop
test
push
testl
push
stos
das
jl
jmp
jp
gs
lcall
pop
sbb
outsl
fcoms
xchg
enter
push
push
push
adcb
sbb
sbb
adc
repnz
imul
mov
fmul
movsl
sub
enter
ss
cmpsl
mov
cltd
pop
adcb
mov
push
mov
insb
adc
push
inc
cmp
aam
mov
out
cld
fwait
xchg
push
add
push
or
and
hlt
subb
push
pop
jmp
mov
in
push
out
hlt
int
dec
add
xor
out
add
pop
ja
add
test
inc
test
imul
jp
jmp
in
mov
in
push
push
jle
push
test
xchg
push
scas
in
pop
int
test
or
mov
call
jl
pop
lahf
out
movsl
ja
add
mov
cltd
call
faddl
fadd
and
pop
out
popfw
outsl
loope
iret
push
mov
dec
jmp
mov
add
mov
adc
cs
mov
xor
stos
cs
lock
jp
jecxz
out
insb
push
add
imul
mov
sti
push
mov
cld
sub
nop
dec
sbb
stos
stos
cmp
test
ljmp
mov
push
sti
out
pop
fsts
sub
je
scas
adc
mov
add
xor
xor
mov
push
pop
repnz
mov
mov
int3
push
xor
adc
sub
lret
pushf
test
lods
pop
jecxz
mov
dec
orl
lcall
into
leave
xchg
sub
jbe
mov
dec
push
push
fcmovbe
imul
sub
loop
mov
jmp
or
aam
mov
adc
and
enter
dec
pop
pop
mov
stos
mov
das
into
xor
aam
adc
clc
test
bound
negl
pusha
imul
int
mov
gs
dec
shlb
into
push
push
push
sbb
shlb
add
insl
sbb
in
xlat
mov
lahf
divl
fsubr
iret
outsb
sbbl
bound
jle
enter
lods
int
iret
popf
adc
mov
or
andb
sub
cmp
jns
popf
inc
pushf
or
inc
stos
or
fcoms
push
stos
xchg
stos
movsb
cltd
test
cmp
loope
dec
inc
daa
jo
out
adc
or
mov
das
add
adc
sub
loope
les
mov
mov
lds
imul
sub
dec
mov
xchg
mov
ffree
cmc
imul
mov
inc
leave
jb
adc
pop
test
jl
std
sbb
and
or
out
inc
lret
cmp
mov
inc
sub
loope
clc
imul
mov
push
sub
sarl
mov
sub
sarl
mov
test
sub
cltd
dec
sar
adc
jae
mov
pushf
mov
out
and
enter
and
repnz
shlb
and
shrb
icebp
movsb
jmp
mov
xchg
sti
push
mov
pop
jg
cmp
adc
adc
pop
mov
cmp
adc
nop
out
shrl
aas
outsb
pop
mov
push
popa
push
insl
fimull
aas
sbb
adc
or
das
scas
mov
add
sub
rcll
inc
out
cmp
call
arpl
xor
mov
adc
dec
mov
inc
mov
stc
arpl
fs
xchg
test
and
in
and
ret
stos
in
cltd
push
in
pop
rorl
stos
hlt
xor
jmp
mov
or
inc
mov
add
stos
cltd
movsb
test
dec
pop
stos
dec
pop
test
dec
jb
mov
mov
sub
scas
add
or
xchg
fs
in
pop
mov
mov
ds
fnop
and
jle
idivl
xchg
push
mov
add
sbb
out
xchg
adc
imul
incl
and
push
inc
adc
dec
das
push
jae
jl
mov
cmpsb
lea
std
inc
xchg
jmp
xchg
jne
movsl
cmc
insl
pusha
xchg
adc
int
jle
insb
int3
das
fs
xchg
cltd
arpl
push
negb
xor
cmp
test
jge
pop
leave
pushf
rcl
faddl
das
loope
pop
addl
out
mov
jp
dec
jecxz
dec
mov
adc
xchg
mov
mov
dec
pop
fsubrs
dec
xor
or
stos
es
push
jmp
mov
into
xchg
sbb
jne
dec
in
ja
les
jo
mov
pop
ficoml
std
lea
inc
cvtpi2ps
xchg
dec
xor
push
and
cs
outsb
aad
push
andb
sarl
lahf
icebp
fdivs
sbb
rolb
and
inc
ds
daa
fbld
popa
xor
mov
xchg
jge
lret
mov
fmull
loope
mov
sti
and
jge
arpl
xchg
out
cmp
lret
inc
into
les
cli
sbb
mov
cmpsl
rorb
enter
imul
add
adc
popf
setne
pop
imul
mov
lds
xchg
sbb
add
fs
movsl
outsb
or
cmp
dec
adc
scas
hlt
fsubrl
aam
mov
sub
jg
nop
imul
pop
fdivrs
dec
into
add
popf
in
lock
or
dec
lea
push
aas
popa
sahf
jge
arpl
test
dec
int
clc
mov
pop
adc
push
sbb
push
jl
stos
sub
hlt
out
lock
inc
jp
add
sbb
cwtl
je
jnp
pop
jnp
xchg
fsub
arpl
data16
and
mov
scas
mulb
sbb
sahf
aam
das
fisttps
mov
adcb
cmp
mov
push
mov
sub
dec
sub
or
bound
xchg
jl
test
data16
in
testl
test
test
mov
arpl
or
mov
fidivl
add
or
or
sti
lods
rorb
push
xchg
sub
push
nop
mov
je
stos
add
cs
jmp
push
dec
mov
cli
loopne
scas
fsts
jmp
fwait
xchg
pop
mov
push
idivl
add
mov
push
dec
mov
shl
mov
call
jnp
js
pop
out
repz
movsl
fwait
mov
ja
outsl
add
or
pop
test
xchg
int
neg
aam
mov
clc
iret
testb
mov
clc
test
mov
cltd
mov
xor
jge
cmp
inc
cmp
stos
jmp
adc
cmp
cmp
fimuls
jns
adc
lret
pop
imul
push
iret
mov
hlt
xchg
mov
loope
negl
andb
popf
mov
xor
iret
sbb
cmpsl
out
test
cld
test
clc
dec
cmp
sub
shll
mov
mov
ljmp
adc
arpl
popf
ficomps
roll
push
loopne
mov
icebp
das
iret
fwait
shrl
test
gs
xor
jl
or
enter
mov
outsb
pop
call
add
cmpsb
inc
jno
xor
mov
pop
mov
cmpl
cltd
cs
out
ret
fbstp
cwtl
and
push
in
negb
fmul
sub
int3
or
in
xchg
xor
subl
loopne
jge
scas
mov
inc
test
adc
test
adc
push
scas
xchg
push
pop
mulb
add
into
aad
test
xchg
push
pop
popa
push
repnz
or
clc
jmp
and
popa
insl
pop
push
in
test
mov
sahf
jmp
sbb
sub
fucomp
mov
jp
adc
int
and
adc
or
sub
dec
and
xchg
out
cmp
js
push
xlat
cmp
sbb
mov
clc
sbb
call
fildl
pop
out
and
imul
adc
repnz
test
pop
ds
or
pop
iret
fdivrs
mov
aad
mov
sub
adc
shrb
cmp
jbe
adc
mov
hlt
cmp
cwtl
cld
les
lret
xchg
add
cmp
subl
jb
xchg
iret
sti
ret
xchg
aas
inc
mov
test
leave
mov
cmpsl
xchg
insl
inc
push
cmc
lea
cli
xchg
cmp
sbb
call
cmp
shlb
out
lcall
sbb
lret
cltd
lcall
sbb
fwait
leave
and
mov
out
decl
jle
jbe
adcl
out
and
jb
in
js
addr16
mov
push
das
data16
cmc
inc
jbe
ret
add
dec
mov
cmp
nop
sti
inc
out
mov
and
add
cmc
inc
xor
das
mov
fstpl
sbb
ret
mov
fcmovu
incl
fsubrs
xor
test
or
pop
xchg
sbb
test
rclb
test
lret
in
push
in
xchg
jno
adc
sbb
fdivrp
pop
in
add
dec
es
leave
cmpsl
or
test
pop
add
in
push
in
aam
cmp
outsb
jbe
test
mull
cmp
xchg
xchg
mov
xchg
push
mov
in
mov
jb
out
dec
sbb
iret
insl
fists
dec
cltd
cmp
clc
addb
cwtl
aad
loope
out
data16
arpl
or
pop
fisttpll
jbe
xor
fcmovnu
popf
add
lds
xor
out
jne
inc
fwait
or
xchg
std
jae
insb
or
sbb
shrl
in
jl
mov
psubsw
test
pop
notl
cltd
adcb
inc
jne
std
and
imul
out
adc
pop
sub
push
push
push
adc
push
aam
pop
nop
cld
push
and
or
inc
call
sbb
mov
test
jecxz
add
outsl
lea
test
cmp
mov
sbb
bound
xchg
ja
stc
test
xchg
out
les
loop
lods
daa
insl
push
fiadds
xor
pop
out
in
mov
push
bound
lahf
loope
cmp
js
jge
mov
and
sub
mov
adc
std
lret
dec
out
insb
mov
jne
aaa
dec
roll
push
pop
mov
mov
pop
mov
inc
pop
shrl
lods
sbb
pushf
pop
popa
sbb
dec
adc
cli
pop
lret
out
fldt
cmp
loopne
repz
shl
and
inc
mov
xor
ds
lcall
in
pshufw
pop
fdivrs
ret
cmp
fdivrs
lods
pop
jp
push
aad
out
xchg
xchg
jnp
inc
jmp
xchg
jo
sub
sub
xchg
mov
xchg
mov
add
pop
roll
push
sbb
out
push
cld
add
adc
push
add
inc
mov
clc
loope
insb
mov
jae
jns
pop
mov
into
adc
push
popa
in
push
decl
mov
rcll
addl
or
xor
call
sub
xor
or
loopne
mov
arpl
mov
daa
cmpsl
add
hlt
cmp
inc
lret
or
push
arpl
fbld
arpl
xor
push
jl
pushf
inc
sbb
push
xchg
pop
mov
dec
inc
jb
sarb
ss
pop
dec
pop
ror
mov
cmp
cmp
ja
xor
imul
sub
outsl
mov
jno
mov
scas
icebp
pop
mov
in
cmpsl
int
aam
mov
jecxz
cmp
int
mov
loope
jmp
xor
inc
hlt
dec
pop
push
xor
mov
pop
cltd
add
or
shrl
sbb
and
xor
shrb
xlat
jp
and
in
push
mov
dec
cwtl
mov
adc
repz
xchg
pop
mov
outsb
enter
push
pop
mov
mov
movsb
adc
mov
sbb
inc
push
in
jb
pushf
rcl
stos
ss
addr16
dec
xor
dec
xor
cmp
test
test
lret
in
cwtl
xchg
cli
xchg
jb
push
loope
pop
dec
jg
xchg
xchg
popa
xor
dec
sti
aad
push
cmp
or
leave
cmp
inc
jae
jno
mov
sbb
add
punpcklwd
mov
int3
cmp
xor
push
cwtl
sub
mov
mov
gs
cmp
test
outsl
les
jmp
and
mov
and
es
shlb
xlat
adc
enter
push
jge
add
mov
loope
or
pusha
mov
imul
les
faddl
mov
lods
movsl
push
inc
add
lcall
pop
mov
fstpt
mov
outsb
xor
das
out
mov
ljmp
push
push
sarb
stc
and
or
jmp
shl
test
fisttpl
inc
adc
lcall
cmpsl
xchg
insl
pop
movsb
sub
in
pop
pop
push
mov
data16
rclb
rorl
or
jmp
jg
vpunpcklwd
dec
jo
dec
lret
ljmp
dec
and
shlb
adc
mov
jo
out
loopne
lods
repnz
negb
es
xor
pop
sbb
cmpsl
jge
ffreep
lea
je
repnz
add
mov
daa
add
jecxz
pop
or
fwait
sahf
loopne
and
fildll
mov
jmp
adc
adc
je
lds
cmp
mov
rcrb
jbe
mov
jmp
pushf
in
xchg
clc
scas
loop
cmc
stos
xlat
iret
neg
inc
daa
cmp
and
std
jl
mov
je
addr16
imul
add
pusha
arpl
pushf
cmp
pop
xor
xor
mov
out
cltd
rolb
repz
fmull
push
mov
cld
sbb
sbb
leave
lcall
icebp
jbe
nop
mov
pop
jg
inc
inc
xor
std
cmc
clc
aad
sbb
adc
test
dec
nop
fs
test
pop
push
mov
lods
insb
in
push
add
out
idiv
lcall
stos
jge
fs
roll
fiadds
jecxz
pop
adc
aad
sub
mov
leave
jae
mov
fidivs
test
sbb
adcl
ljmp
das
shll
mov
cmp
xchg
dec
cmc
jmp
test
dec
daa
jnp
mov
cltd
iret
nop
adc
stos
aam
stos
or
add
sub
in
or
cmpsl
dec
repz
loope
orl
xchg
sub
loope
sti
fdiv
loope
cltd
lret
cmp
or
stc
add
push
push
and
sub
or
sub
and
repnz
pop
lret
and
shll
pushf
outsl
adc
out
stc
mov
aaa
pop
mov
loope
lock
xchg
mov
jg
and
inc
daa
fbstp
push
add
mov
mov
or
rcll
pushf
jo
outsl
lea
lock
or
adc
pop
adc
shrb
cmpsl
dec
hlt
mov
jnp
jmp
jle
mov
sbb
leave
adc
dec
aam
xchg
mov
into
add
jle
pushf
shl
icebp
pop
pop
mov
push
out
xchg
mov
pop
divl
gs
test
inc
ret
cmp
sahf
cmp
aas
int3
adc
mov
mov
push
fldenv
add
mov
ret
push
fdivl
or
inc
out
call
movsl
lcall
clc
and
pop
in
outsl
scas
xchg
jb
jb
inc
xorb
cmpsb
sub
stos
jno
cltd
scas
push
mov
mov
ds
popf
popf
sbb
push
lods
mov
ficoml
loope
xchg
mov
push
movsl
jbe
lahf
inc
stos
test
xchg
aam
cmc
jbe
mov
push
xchg
cmpsb
adcl
jecxz
sub
add
pop
int3
jne
js
ljmp
fistps
aad
scas
jge
lods
sahf
shlb
or
in
ficoml
fisttpll
mov
enter
arpl
mov
and
stos
xchg
cmpsb
mov
jmp
scas
cmp
scas
pop
sub
mov
inc
test
and
mov
js
pop
mov
fld
cmp
sbb
push
dec
jbe
mov
je
push
fildl
sub
lods
push
stc
aaa
je
gs
and
xchg
dec
inc
popa
imul
testl
loop
popf
lea
out
lods
mov
or
outsl
and
jp
cs
fsubs
xchg
adc
mov
jne
jnp
cld
outsl
inc
xlat
xchg
jg
cmp
cwtl
mov
sbb
int3
mov
daa
les
pop
repz
dec
pop
imul
xor
fs
cmp
jnp
or
and
andl
xchg
jl
dec
jb
jno
mov
ret
cmp
in
outsb
cmp
in
pop
xor
mov
xchg
push
xor
push
shl
push
lods
lahf
xchg
or
mov
dec
xchg
hlt
dec
outsb
sbbl
mov
add
sub
test
loope
xchg
and
sub
inc
jle
pop
sub
jo
adc
xchg
lods
jno
inc
imul
lock
loope
or
jecxz
push
mov
into
aad
pop
pop
xor
aaa
push
jo
sar
sbb
dec
testb
inc
cmp
insl
mov
push
cmp
addl
jl
add
fisubrl
rolb
in
int3
subl
xchg
sbb
jns
mov
jl
jecxz
push
cwtl
sbb
xchg
ret
jbe
adc
inc
or
fstpl
cli
ret
mov
lret
inc
and
repnz
sub
mov
sar
sub
ret
dec
jl
ja
xor
sarb
cltd
in
push
es
test
inc
icebp
push
fcompp
and
in
mov
mov
ds
maxps
pushf
mov
in
adc
insl
adc
out
cwtl
fs
lea
cmp
fsubrl
or
sub
pop
jns
push
imul
mov
jmp
stos
cmp
jl
ror
push
test
pop
out
sbb
icebp
stos
pop
test
jae
xchg
push
xlat
add
in
in
and
mov
aad
std
mov
pop
repnz
xor
or
xor
test
incb
jb
outsb
dec
aas
and
xchg
outsb
rorb
cmp
cmp
addr16
sub
pop
stos
popa
cmpl
jl
es
push
fmuls
testb
pop
dec
mov
mov
push
add
test
lods
shll
xor
pop
jmp
into
jp
pop
into
sbb
push
or
das
lock
in
jbe
and
lea
xchg
jne
mov
testl
pop
pop
in
js
lret
and
dec
pop
subb
and
xchg
sub
adc
xchg
fstpt
ljmp
xor
cli
out
push
jnp
jno
push
mov
das
push
xchg
mov
out
das
pcmpeqb
inc
loop
subb
add
nop
scas
mov
addr16
fisttps
jp
xor
pop
mov
testb
cmc
push
lea
add
lea
xor
pop
rclb
mov
mov
cwtl
fisubrs
das
les
paddsb
fdivrs
inc
sbb
jle
jp
xchg
sahf
and
inc
aad
pusha
movsl
or
fidivl
scas
push
cmp
lods
jb
in
jg
lods
and
push
or
push
jge
sub
stc
loop
adc
mov
notl
test
aam
xor
mov
in
dec
sub
clc
jmp
add
cli
and
sbb
out
jle
mov
test
out
adc
push
pop
pop
outsb
lds
xchg
aaa
cbtw
xchg
adc
pop
sub
lret
mov
cmpl
sub
jge
or
rclb
jo
jo
jmp
pop
inc
mov
in
mov
push
js
nop
dec
inc
mov
lret
mov
in
xchg
insl
nop
adc
pop
repz
test
inc
sub
inc
sub
andb
int3
fsubr
add
sbb
sbb
jbe
in
adc
js
inc
xchg
imul
imul
fisubl
sub
sbb
je
cmp
scas
dec
adc
pop
and
sti
cmp
das
jl
insl
dec
push
shll
mov
iret
mov
mov
xchg
inc
xchg
pop
cli
or
add
movsb
mov
xchg
xlat
repz
inc
in
xchg
setb
jne
lods
sub
in
cmovae
sbb
or
sbb
jle
or
mov
sbb
sub
insl
pop
fwait
arpl
and
inc
scas
sbb
xor
and
add
cwtl
pop
mull
cli
sub
movl
cmp
cmpsl
xchg
dec
jge
sub
lea
arpl
xchg
xchg
push
jae
and
and
or
andl
cmpsb
cmp
movsb
fistps
pop
add
xor
imul
ds
loop
sbb
xchg
loop
repnz
lods
mov
es
cli
mov
dec
stos
std
fistpl
clc
push
dec
or
inc
fcoms
mov
xchg
fcmovb
test
data16
mov
sbb
push
faddl
or
lcall
loopne
xchg
and
hlt
es
lcall
mov
ljmp
jae
sub
sub
scas
imul
int
fmull
dec
xchg
xorb
xchg
dec
jbe
outsb
push
ljmp
and
or
push
lods
ret
jmp
cmpsb
les
scas
out
pop
shrd
icebp
icebp
fldt
dec
inc
mov
ss
loop
push
in
pop
seto
test
imul
xchg
pop
inc
mulb
adc
xchg
sub
leave
fsubrs
inc
or
test
ficomps
cmc
ficoml
jb
scas
xor
xor
xor
push
sti
jl
stc
xchg
push
xchg
push
bound
dec
push
sbb
and
arpl
inc
dec
loop
cmpsb
xchg
push
popf
lods
movsb
call
inc
push
pop
adc
and
enter
fs
pop
mov
cmp
xchg
sbb
dec
ret
jmp
pop
add
pop
loopne
es
cmp
cli
sahf
and
ss
in
fwait
testb
dec
cld
dec
imul
pop
xor
lcall
outsl
dec
adc
idivb
mov
fsub
cmp
sub
rol
scas
shrl
jge
push
mov
add
adc
movsl
adc
or
cs
pop
mov
xchg
mov
xchg
jb
pop
adc
or
loope
outsb
push
mov
ss
pusha
mov
xchg
xchg
icebp
loop
prefetchwt1
ret
in
cmp
sub
inc
mov
xchg
xor
push
add
lea
cmp
add
fcmovbe
push
shll
add
push
sub
cli
icebp
mov
push
test
dec
cmp
nop
loopne
dec
xor
adc
mov
inc
in
inc
jae
mov
in
push
lret
or
lcall
xchg
iret
pushf
shll
ljmp
xor
cmp
ja
sbb
sub
xchg
push
mov
push
jne
cmpsb
mov
xchg
cld
lcall
stos
test
test
fldenv
dec
adc
jge
stos
sub
or
jle
jo
mov
push
sti
and
jne
cmc
rcr
push
mov
cmp
dec
sub
sbb
inc
shrb
xor
mov
lret
xor
fdivs
xor
or
and
fs
xchg
dec
mov
mov
dec
shll
scas
icebp
lret
or
push
push
fs
mov
add
cmp
xchg
mov
decl
push
jmp
or
and
jmp
mov
jge
es
or
sbb
mov
clc
shll
addb
scas
push
push
push
dec
je
gs
jnp
pusha
dec
or
iret
test
fs
insl
lret
push
sbb
orl
jecxz
testb
mov
into
call
into
mov
lret
ss
sarb
les
cmpsl
aam
das
or
xchg
xchg
stc
jg
imulb
xchg
test
nop
push
inc
mov
and
enter
fldt
sbb
sbb
stos
mov
cmp
mov
lea
adc
mov
push
dec
ret
xchg
cmc
inc
pusha
add
loope
and
sub
push
stc
xchg
jbe
dec
popf
ficomps
in
leave
mov
xchg
xchg
cltd
push
jg
call
in
add
scas
push
inc
in
sub
mov
mov
ss
repz
push
add
cmc
mov
cmp
stos
push
xor
sbb
dec
jle
lods
xor
sbb
ret
cltd
adc
cmp
daa
rorb
out
fsubl
aaa
sbb
jns
mov
daa
jne
lret
dec
subb
mov
shl
inc
and
push
aad
cmc
pop
push
mov
jne
mov
je
gs
jne
cltd
aas
int
les
cmp
lock
pop
cmp
jae
push
fidivl
sbb
pop
mov
fdivr
mov
nop
imul
lret
fs
outsb
jmp
sbbb
mov
xor
mov
add
pop
inc
adc
cmp
cmp
je
lds
and
insl
hlt
xchg
inc
pop
pop
lcall
ret
mov
xchg
leave
imul
or
mov
mov
scas
enter
ss
push
xchg
mov
lds
shlb
add
jecxz
mov
inc
mov
xchg
inc
shrl
fldcw
daa
lods
add
cmpsb
sub
pop
lods
das
mov
aas
pop
or
dec
leave
shrl
lret
imul
mov
xchg
arpl
cwtl
adcl
jg
stc
add
adc
movsb
cmp
jno
hlt
in
in
es
jae
mov
orb
push
in
hlt
add
mov
lahf
popf
cmc
fldpi
and
sahf
pop
mov
ret
xlat
aad
insb
les
cmc
ljmpw
sbb
xchg
fs
insb
cmp
mov
jns
push
adc
xor
xchg
das
adc
dec
inc
jmp
adc
js
sub
sbb
jmp
jb
movsl
mov
jnp
xchg
and
xor
aad
aaa
dec
test
jns
stos
xchg
sub
pop
inc
or
je
popa
xlat
mov
inc
jnp
xor
imul
cwtl
fldcw
fmuls
add
mov
xchg
xchg
add
sahf
les
lods
sub
scas
or
adc
lock
sbb
inc
dec
sub
cwtl
mov
mov
fnstenv
sub
imul
mov
push
fld
jg
cmpsb
add
mov
cwtl
idivb
mov
push
cmp
sbb
and
scas
repz
repnz
mov
or
std
push
add
imulb
pop
mov
jnp
aad
pusha
aad
in
jae
add
lea
aad
cli
pop
int
fistl
out
mov
pop
cmp
lahf
mov
mov
sbb
add
cmp
jg
mov
adc
dec
andl
sbb
scas
nop
aaa
push
rcll
dec
outsl
shlb
rcrb
pushf
jle
lret
mov
fsubr
mov
or
rolb
mov
xor
lods
call
fdivr
xor
adc
or
mov
popf
fs
mov
add
stos
xor
shrb
add
shll
lret
or
mov
mov
xlat
sub
pop
icebp
rcll
inc
push
mov
mov
andb
inc
cmp
in
insl
popf
adc
mov
jge
test
mov
hlt
out
sbb
ret
stos
stos
cwtl
xor
lods
xlat
popf
dec
ret
mov
insb
dec
mov
enter
lret
push
out
ret
add
in
pop
std
mov
es
push
jge
sar
sbb
cltd
lds
pop
scas
or
mov
cld
sub
cmp
xchg
int
push
insb
jl
or
dec
imul
mov
pop
imulb
cmpsb
shlb
jmp
inc
test
stos
enter
cmp
les
inc
pusha
xchg
mov
repnz
jmp
mov
inc
lea
mov
and
jmp
mov
into
jmp
inc
das
cmp
ret
xchg
aam
fs
fs
mov
xchg
clc
cmp
lcall
inc
cmp
mov
out
int
add
dec
hlt
aad
addr16
loopne
test
aas
and
mov
gs
jne
imulb
xchg
xchg
mov
and
sub
adc
jmp
xchg
stos
out
test
dec
lahf
daa
repnz
rorb
ret
divl
lock
pop
sbb
imul
pop
popf
or
and
in
loopne
pop
inc
cmp
imul
loopne
jb
mov
pop
sbb
sbb
decl
rep
sub
xchg
in
or
out
add
lahf
xchg
jle
jno
dec
add
sub
mull
mov
push
in
push
xor
inc
mov
or
mov
aam
and
mov
lahf
popf
push
mov
mov
int3
sahf
mov
leave
xor
int
stos
fsts
push
sbb
mov
fstpt
fcmovnbe
bnd
mov
adc
mov
mov
and
call
movsl
jnp
mov
mov
mov
xchg
mov
arpl
dec
xchg
mov
rorb
inc
mov
push
mov
lret
out
adc
mov
xchg
pop
cltd
bnd
push
add
jl
das
pop
in
in
stos
test
dec
ljmp
jecxz
test
cwtl
dec
stos
vsubps
mov
mov
mov
daa
das
enter
adc
ret
sub
mov
pop
std
adc
push
mov
test
cmc
pop
addr16
cmp
orl
dec
mulb
popa
nopl
pop
xorl
jns
pusha
clc
push
adc
push
xchg
mov
mov
mov
mov
test
mov
xchg
int3
addr16
pop
fistpl
call
adc
jo
lock
and
jp
decl
hlt
test
cmpps
lods
mov
inc
ret
jecxz
add
add
xchg
push
mov
pop
enter
cmpl
shl
or
lods
jae
mov
fidivs
insl
in
stc
ret
cmp
pop
popf
out
mov
subl
cmp
imul
mov
fsub
pop
jg
pop
xor
xchg
jne
repnz
cltd
subb
fisttps
jno
mov
dec
and
pop
bound
das
das
ret
mov
jae
fs
or
xchg
jae
fwait
movntq
out
xor
imul
push
inc
das
inc
push
loope
sub
je
xchg
mov
push
add
mull
push
sbb
sub
hlt
or
push
add
mov
mov
int
dec
stos
mov
xor
sub
js
add
sbb
pushf
out
and
xchg
daa
pop
cmp
inc
cli
lods
mov
mov
sbb
lock
aaa
and
cmpsb
mov
icebp
mov
popf
dec
ret
xlat
test
repz
xchg
insl
lods
je
daa
outsl
inc
mov
dec
loope
sbb
pop
iret
mov
dec
mov
mov
cmc
mov
cmp
jle
insb
mov
lods
pop
fstpl
push
xchg
mov
and
cmp
sub
xor
out
in
jmp
xchg
loop
fucomi
inc
test
jg
mov
adc
lahf
mov
andb
jl
pop
pop
mov
xchg
addr16
fsincos
add
inc
icebp
test
xchg
fwait
add
sbb
inc
out
popf
cmc
fildll
pop
fmull
test
call
xchg
xor
lock
fnstcw
mov
fadd
fcmove
sbb
repnz
shlb
ja
cmp
jae
or
add
mov
mov
cmp
shrl
pop
sbb
enter
lcall
das
jne
push
pop
jbe
into
adc
push
fwait
xor
mov
call
inc
fs
in
adc
mov
cmp
push
lods
in
ret
mov
fisubl
lods
fdivrl
adc
cld
int3
adc
mov
out
mov
fdivrs
cmp
js
pushf
push
xor
ds
push
movsb
out
pop
sbb
push
scas
mov
es
fsts
rcr
clts
cmp
dec
dec
dec
xchg
test
leave
js
rorb
mov
mov
je
push
pop
xchg
add
loop
leave
fsubp
lea
mov
sub
cmp
out
inc
into
ss
or
call
and
clc
mov
xor
inc
sub
sbbl
and
sti
imul
push
test
jge
and
pop
dec
leave
cmpsl
add
pop
jg
js
sub
insl
and
cmp
cli
sti
fstpt
xor
js
rorl
repnz
jo
fs
xor
int3
and
insb
inc
mov
add
sbbl
mov
and
xchg
xor
dec
leave
inc
sbb
jge
aaa
negl
jge
or
fwait
jmp
jns
mov
push
pop
cmpsl
scas
xchg
and
movsb
xor
xorb
jl
in
sbb
int3
adc
mov
sbb
cmpsl
mov
in
sbb
mov
adcb
out
push
xchg
jne
pop
rolb
ljmp
pop
jno
cmpsl
push
dec
xchg
add
inc
fiaddl
movsl
das
roll
dec
and
mov
adc
roll
rol
dec
movsl
test
clc
iret
mov
jne
ret
lcall
xchg
lods
dec
pop
or
sahf
cmp
outsl
push
cmpsl
adc
add
stos
nop
dec
jb
dec
xor
andb
lea
scas
daa
inc
sbb
jno
sbb
mov
add
jle
add
or
call
std
xchg
cmp
in
std
out
lret
insl
sub
lods
gs
loop
xor
add
pop
mov
rol
repz
cmp
dec
iret
movsb
inc
imul
jo
jg
sti
push
outsl
or
je
or
inc
jne
data16
fs
cmpsl
je
and
shll
push
xor
and
mov
lret
xor
imul
call
imulb
rorl
orl
in
dec
add
mov
or
xchg
inc
xchg
jmp
in
repz
push
pop
jae
rcl
add
outsb
sti
and
dec
lahf
push
or
xor
push
in
es
loopne
std
inc
loopne
mov
insb
cmc
mov
pop
inc
cmp
push
mov
and
scas
cmpsb
inc
dec
and
fcomps
mov
cmp
mov
jne
add
sub
lcall
xor
sub
lcall
out
in
xor
mov
mov
pop
mov
xchg
dec
push
gs
int3
inc
sub
dec
mov
xchg
ja
cmpsb
stos
in
cs
xor
mov
xchg
pop
inc
dec
pop
dec
shll
popf
sahf
mov
push
aad
fcoml
dec
jle
out
mov
daa
mov
xor
imul
or
dec
pushf
xchg
in
pop
pop
cld
fsts
dec
daa
or
xor
mov
xor
cmc
fldl
jmp
rcrl
jmp
mov
dec
jae
sahf
aad
loop
addr16
jae
pop
push
xor
sub
ds
cli
mov
or
xchg
push
sbb
lret
in
loopne
sub
adcl
xlat
addb
cmp
cli
mov
enter
pop
fldt
cmpb
inc
stos
or
adc
popa
cmc
pushw
adc
push
mov
stos
mov
mov
cmc
test
sub
into
int
loope
cmp
or
stc
fsubp
cmp
mov
mov
cmp
inc
es
push
xchg
jg
mov
and
nop
jp
in
jae
sbb
push
idiv
pop
or
add
cs
mov
dec
jle
popf
dec
ja
out
mov
jne
jo
scas
or
daa
push
movl
or
cld
clc
mov
push
xlat
dec
lock
aam
ret
stc
add
mov
xchg
orl
cmp
psubw
mov
push
movsl
mov
pmulhw
movsb
mov
xorl
or
xchg
add
push
data16
jp
cwtl
lods
out
inc
das
and
ljmp
lock
fwait
loope
inc
sbb
add
xor
es
repz
pop
xchg
adc
mov
xchg
popl
aaa
push
pop
mov
mov
loop
inc
int3
pop
rclb
bound
jecxz
inc
add
rcll
out
add
inc
ret
hlt
pop
xchg
xchg
je
imul
pushl
imul
imul
and
mov
inc
jne
fldcw
mov
rolb
inc
int3
cltd
lea
sub
lahf
mov
adc
jl
adc
sub
int
mov
adc
cwtl
jne
adc
rolb
stc
xor
jbe
gs
xchg
leave
sub
icebp
jo
fiaddl
nop
ja
add
fidivl
push
or
mov
repnz
ret
mov
xchg
js
inc
fstpt
jo
or
sbb
ds
xor
mov
out
mov
jns
pop
iret
xor
mov
je
pushf
sub
dec
jl
jae
push
call
in
pop
sarb
jge
mov
addr16
adc
or
cmpsl
shrl
andb
and
inc
xchg
jb
test
xor
xchg
xchg
popf
outsl
fisubl
mov
fistl
iret
mov
mov
dec
adc
je
xchg
daa
jmp
sub
repnz
call
and
popf
jl
imul
and
cld
addr16
adcb
xchg
inc
fadds
adc
mov
mov
push
push
jbe
es
out
movsl
add
push
and
cli
mov
clc
push
or
gs
nop
in
mov
int
lods
xchg
in
adc
imul
clc
cmpb
push
cld
pop
inc
out
jge
xchg
mov
jp
cld
outsb
cmp
sbb
push
rcl
xor
pop
push
stc
iret
mov
push
mov
sub
jb
cld
dec
test
sbb
mov
sbb
and
mov
sub
out
and
add
mov
mov
loope
lock
repnz
scas
push
or
xor
iret
outsl
jl
popf
lcall
sbb
xchg
ljmp
mov
mov
gs
stos
jp
aad
mov
cmp
cmp
mov
or
pop
out
xchg
mov
sarb
push
rep
pusha
scas
cs
in
inc
jecxz
xchg
sub
cmpsb
adc
mov
aad
fs
mov
imul
int3
jecxz
jmp
jbe
icebp
push
inc
sbb
sbb
mov
cmpsb
xor
test
fimull
xor
or
or
imul
outsb
out
lret
mov
and
cwtl
andb
push
enter
push
test
lods
or
fstpt
ficomps
push
and
xor
xchg
stc
aad
out
inc
inc
test
add
jo
xor
mov
test
mov
je
rorl
insl
cmc
testl
rcrl
or
jns
movsl
into
mov
jbe
push
stos
cmpl
pop
lcall
stos
std
lcall
insb
in
push
loopne
cmp
cltd
xchg
xlat
shl
cwtl
mov
lret
hlt
out
sarb
inc
ret
mov
sahf
mov
inc
add
dec
and
fwait
and
das
mov
insl
ss
loop
fst
rcrb
insl
repz
loop
sti
cmp
mov
les
fucomi
mov
dec
xor
je
or
push
daa
dec
es
inc
jns
mov
pop
push
lods
out
sub
test
push
pop
je
inc
jge
scas
lret
lahf
adc
pop
hlt
add
mov
xchg
jns
jmp
mov
addr16
fisubl
cmp
push
jne
test
fwait
mov
shrb
imul
das
jge
or
jmp
xchg
hlt
sbb
rclb
xchg
aam
mov
pop
mov
push
das
in
fwait
pusha
cmp
cmp
mov
bound
push
xchg
in
or
js
cmp
pop
mov
aas
scas
mov
and
aam
mov
push
mov
lahf
pop
mov
adc
nop
cmp
xor
mov
add
mov
cs
mov
inc
cmp
add
cmpsb
and
cs
pop
lods
jle
popa
movsb
xchg
xor
cmc
bound
cs
or
jp
sbb
call
pop
add
data16
lods
call
rclb
xchg
lret
dec
mov
and
xor
push
loope
lcall
dec
inc
jne
pop
sub
xchg
lods
fidivrs
inc
adc
outsl
mov
inc
out
inc
mov
das
xchg
xor
mov
or
cmp
insb
inc
pop
cltd
mov
loope
pop
jg
loopne
add
cmp
pop
jle
mov
daa
dec
in
in
ljmp
and
fucomp
sarb
idivb
push
push
and
xchg
fwait
iret
cmp
and
stos
stos
pop
mov
pop
pop
ficoml
mov
shl
or
xor
mov
subl
jne
outsb
sub
gs
xchg
xchg
cld
inc
shr
mov
sbb
sti
je
jmp
mov
out
pushf
adc
mov
aaa
pop
mov
loop
clc
shrb
inc
sbb
fldl
push
jg
add
sbb
pop
stos
dec
test
stc
mov
int3
mov
add
scas
outsl
or
sub
adc
daa
xor
int3
ds
mov
pop
popf
adc
cmc
mov
fucom
mov
decl
adc
pop
or
outsl
add
mov
cmp
imul
dec
cmp
mov
movsl
sbb
lods
push
leave
jl
lahf
mov
out
push
hlt
jp
addr16
push
repz
cmp
xchg
push
sbb
insb
sbb
ja
out
dec
cmp
insb
push
int
xchg
fwait
lret
nop
pop
mov
test
in
jg
sub
push
shl
popf
xchg
pop
gs
test
jo
or
sub
pop
push
mov
mov
dec
add
popa
cmpsl
adc
loopne
sub
or
loop
aad
add
rcl
fwait
add
cmc
xchg
mov
stos
xchg
pop
movsb
popa
xor
scas
leave
and
shll
push
inc
fimuls
adc
mov
lods
fistpll
test
sbb
mov
enter
jno
leave
leave
mov
or
mov
out
jo
inc
test
pop
test
add
popf
mov
insl
cld
jmp
testl
sbb
loope
mov
push
fsubrs
xchg
mov
dec
stos
jle
icebp
sbb
test
pop
dec
mov
dec
stos
lods
push
jb
cmc
mov
jg
pop
mov
and
push
jecxz
jnp
pop
pop
out
sahf
add
mov
jp
fldl
in
adc
ret
loope
inc
adc
sub
notl
dec
push
push
dec
jle
xchg
push
push
into
push
enter
mov
clc
cs
or
and
sub
lds
push
in
jno
ds
out
xlat
xor
cmp
adc
mov
into
pop
cli
push
cmc
dec
and
push
cs
aas
movsl
int
jno
inc
addr16
nop
into
add
mov
mov
push
mov
push
adc
cmpb
in
in
mov
lahf
cmp
dec
mov
aad
jmp
sbb
mov
scas
fildll
dec
jmp
jns
lds
cmp
cmpsb
mov
in
sub
sub
enter
jl
push
shlb
mov
stos
mov
xchg
xchg
xchg
xlat
call
stos
mov
pop
mov
enter
clc
repz
fsubrl
and
and
jmp
push
int
lahf
sbb
mov
cmp
sti
fs
pop
push
jae
push
xor
cmp
push
pop
cmpsl
outsb
sbb
or
fdivl
fmull
push
add
mov
mov
icebp
jecxz
cltd
movl
and
lret
ljmp
sti
fisttpll
cwtl
sti
mov
movsb
sub
or
xchg
pop
or
dec
sub
int
jnp
add
and
xchg
cli
inc
dec
add
rclb
inc
es
jmp
push
pop
loop
adc
test
pop
call
mov
enter
mov
sub
xor
cmp
sti
cmpsb
ss
push
call
imul
in
or
adc
mov
arpl
leave
iret
xor
push
push
std
jle
insb
scas
xchg
jmp
push
sti
pop
loope
xchg
sbb
adc
inc
mov
cmp
icebp
jp
mov
push
test
mov
and
outsl
mov
fcompl
in
int
aam
cmp
jecxz
xor
mov
lock
mov
pop
lret
lds
xchg
fwait
lcall
arpl
pop
popa
stos
stos
sbb
and
dec
mov
sbb
lahf
fucomp
mov
loop
shlb
rcll
cli
addb
cs
movsl
dec
xlat
cmp
pop
mov
push
xor
push
lods
pop
lahf
in
hlt
cmp
imul
bsf
lret
out
xchg
sub
or
sub
sbb
js
mov
push
into
ret
push
mov
and
or
jbe
cld
mov
pop
xchg
sub
daa
mov
nop
xchg
and
pop
lret
cmp
mov
xor
or
das
fnstsw
pop
or
movsb
mov
test
scas
xchg
push
out
cmp
lds
cmpsl
sbb
or
or
inc
rolb
jnp
pop
scas
stos
sti
pusha
jo
loop
push
mov
dec
cmpsb
xchg
das
or
adc
dec
clc
lret
add
aad
mov
iret
sbb
inc
xor
sub
cmp
dec
xor
data16
mov
mov
mov
dec
int3
les
xor
jecxz
pusha
push
push
test
adc
lcall
inc
fnstsw
xor
sub
adc
push
pop
fsubl
ret
push
mov
mov
lret
dec
cld
push
mov
outsl
jne
cmpsl
loop
addb
hlt
mov
adcl
xchg
scas
in
mov
shll
push
stos
into
jmp
mov
mov
pop
pop
pushf
push
push
rcl
sbb
push
int
faddl
push
sub
and
xchg
xor
cs
push
test
inc
test
popf
sahf
dec
push
pop
sbb
outsb
enter
stc
subb
adc
push
mulb
clc
test
loopne
or
aad
adcl
pop
sarl
push
mov
es
push
pop
ret
lea
js
dec
dec
aas
or
cli
bound
pop
and
cmp
sub
pop
adc
jo
mov
popa
mov
add
loope
aaa
jno
mov
push
pop
inc
xor
cmp
inc
xor
xchg
je
pusha
xor
test
mov
push
adc
shl
adc
fsubrl
xchg
pop
mov
push
mov
push
test
adc
or
bound
in
aad
fisttpl
ds
movsl
das
pusha
mov
scas
rcl
push
test
mov
dec
cmp
sub
jae
dec
mov
out
jmp
cmpsb
lods
jae
sbb
insb
pop
mov
jo
xchg
push
dec
addr16
add
fwait
ret
add
in
test
cmc
jno
adc
push
xlat
push
jecxz,pn
shll
pop
adc
sbb
xrelease
dec
sub
daa
add
pusha
dec
icebp
pop
add
dec
loop
pop
sbb
insl
xchg
sub
inc
sbb
push
sbb
shr
inc
push
mov
cmp
insb
sub
pop
xor
adc
mov
sub
test
ret
imul
cmp
aaa
fnstsw
mov
inc
fbld
aam
pop
dec
dec
mov
mov
dec
pop
jg
fwait
stos
push
cmpsb
xchg
push
adc
dec
jae
aaa
shll
lods
push
imul
int
jae
ror
dec
ds
adc
fwait
das
testl
xor
adc
ljmp
xor
stos
xor
nop
mov
hlt
mov
xchg
cmpsb
les
adc
jne
mov
mov
pop
sub
cld
jne
cli
imul
ss
outsl
addr16
xchg
cmpsl
in
jno
push
sub
int
pop
mov
cwtl
xor
mov
nop
mov
mov
dec
lods
ljmp
push
push
repnz
mov
dec
or
jmp
xor
mov
dec
icebp
jmp
jae
mov
out
jne
xchg
test
sbb
xchg
out
sub
or
test
add
jb
repz
fbld
ficoml
push
mov
aas
stos
insl
test
shlb
cli
mov
scas
leave
fidivl
push
pop
aaa
ret
fistpll
sarb
rorl
les
in
sub
mov
fdivrl
jae
xor
loope
out
cmpb
scas
xchg
out
insl
ss
loope
loopne
gs
in
pop
inc
scas
jns
push
scas
or
sbb
bound
arpl
inc
adc
loopne
jl
lods
and
sahf
mov
lret
fdivl
cs
scas
push
cltd
mov
lea
dec
das
cmp
mov
or
cmp
mov
xchg
arpl
add
pop
aam
int3
addb
cmp
stc
push
xchg
push
dec
and
ljmp
inc
leave
sarb
jl
lock
leave
popf
aad
fdivrl
xor
dec
or
dec
ret
out
sbb
dec
jbe
stc
cwtl
idivb
or
or
add
push
notl
adc
adc
sub
fstpt
mov
mov
rorl
outsl
out
sub
mov
cmp
loopne
into
jne
mov
jae
nop
cmpl
test
mov
dec
adc
add
inc
jno
lock
pusha
sbb
lret
mov
pop
mov
mov
dec
call
mov
cmpsb
in
cmp
rorb
inc
adc
sub
fadds
xchg
inc
lea
lea
lcall
cltd
and
je
arpl
push
cli
mov
decb
dec
aam
mov
js
cmp
mov
ret
xorb
scas
cmp
das
cmp
mov
ret
jmp
push
je
mov
aad
outsl
push
mov
and
insl
out
and
push
hlt
sub
jmp
movhps
push
imul
faddl
push
dec
push
sub
sti
lea
int3
arpl
cmp
inc
push
enter
mov
push
mov
imul
insb
jae
sub
shrb
dec
xchg
mov
dec
pushf
lea
jge
imul
in
cmpsb
out
push
sub
adc
xor
sub
hlt
adc
inc
lds
lcall
add
test
or
mov
bound
test
loopne
add
cmc
cld
out
jns
ficomps
mov
outsl
mov
dec
daa
mov
xlat
sarl
aas
jg
mov
jg
jnp
orl
repnz
mov
add
sbb
jb
popw
pop
mov
ds
lea
sbb
dec
or
int3
xchg
push
leave
pusha
enter
pop
adc
cwtl
sbb
out
and
jo
js,pt
cmp
in
cmpsl
imul
outsb
adc
std
scas
data16
jns
xor
sub
xor
int3
insb
div
adc
adc
mov
fs
jb
adc
mov
loope
sub
sbb
loopne
cmp
mov
call
lea
ljmp
pand
mov
xor
inc
mov
xchg
nop
rep
dec
mov
hlt
pop
cmpsb
inc
dec
mov
sub
test
movsb
xchg
and
mov
pop
mov
pop
jmp
push
cld
inc
or
mov
or
xchg
mov
arpl
adc
inc
xchg
jg
ds
xchg
mov
add
cmp
push
lret
or
push
xor
enter
or
cld
aad
jecxz
xor
in
push
cmp
push
loope
and
lcall
fildll
cmpsl
clc
sbb
dec
pop
movsl
sbb
repnz
aas
test
xchg
mov
fcos
enter
lds
jge
dec
adc
add
mov
push
insb
cwtl
mov
out
xlat
jmp
sarl
rcll
int
lea
adc
dec
hlt
sub
movsb
in
icebp
movsb
unpcklps
sub
aad
jmp
mov
xor
xor
std
or
into
pminub
or
scas
mov
mov
jle
cs
mov
adc
lea
inc
shl
dec
jbe
push
ror
lods
inc
shrb
arpl
mov
addr16
cmpsl
icebp
mov
popa
inc
mov
movb
xchg
testb
arpl
into
ds
cld
popa
jl
scas
dec
mov
pop
cmp
lahf
cmc
out
jo
jnp
cmp
bound
cmpsl
mov
jmp
lret
fsubrs
jle
pop
sarb
adc
out
push
fcmovbe
daa
vpcomq
lods
shl
aaa
sbb
pop
ret
mov
mov
push
ljmp
mov
adcl
add
xchg
in
and
pop
cmp
les
cmc
dec
sub
mov
dec
mov
cmp
mov
stos
adc
xor
add
xchg
inc
movsb
or
cmpsl
sub
repz
cmp
leave
outsb
iret
out
jbe
out
push
lret
mov
xchg
into
and
dec
adc
test
dec
and
jae
leave
leave
addr16
mov
call
subb
ljmp
pop
push
push
mov
das
pop
jecxz
sarb
out
outsl
ret
je
es
in
es
insl
sarl
lret
mulb
adc
cmp
icebp
xor
fdivl
ficomps
shrl
cmp
fldcw
jb
fmulp
xchg
and
sbb
adc
mov
adc
jo
loopne
mov
inc
nop
les
scas
inc
nop
jo
loope
stc
add
push
push
into
gs
int
addb
pop
addr16
pmulhuw
ret
mov
and
add
scas
push
jne
popf
repz
dec
inc
or
ljmp
das
ss
pop
adc
xor
popa
and
dec
add
cmpsl
jmp
mov
inc
out
nop
dec
pop
jne
and
test
add
sbb
data16
mov
out
jnp
and
sub
pop
pushf
pop
lock
add
shrl
push
scas
movsl
mov
fs
cmp
movsl
ja
sahf
jle
push
fidivrl
cvtps2pd
and
or
int
ret
je
shr
pusha
arpl
shrl
cmp
decl
push
xor
in
aaa
cmpsb
sbb
lods
sti
mov
rcll
xor
pop
mov
scas
xor
test
or
mov
stos
aas
mov
loope
lods
test
mov
and
rolb
sub
js
jns
dec
lret
xor
lods
add
xchg
int
out
xchg
sub
cmpsb
mov
sub
and
xchg
ss
les
cmp
sub
mov
dec
dec
push
dec
lods
sub
or
cmpsb
in
dec
mov
jge
ret
cmp
jle
jl
popa
jecxz
cmp
inc
pop
sub
cwtl
adc
stc
dec
xor
cmpsl
xchg
mov
insb
not
jecxz
aaa
mov
or
lock
sbb
xchg
adc
pop
push
loope
xor
fists
add
xor
repz
mov
aam
ja
cli
push
mov
mov
cmp
mov
aam
add
ja
jmp
loope
inc
inc
out
aaa
fists
adc
popa
push
sarb
test
imul
scas
std
adc
jl
or
aam
adc
cmpsb
inc
mov
mov
popf
stos
add
pmaxub
in
bound
mov
scas
insb
add
jmp
add
xchg
gs
pop
push
out
adc
jecxz
sub
inc
mov
cmpsb
ret
lds
cld
subl
adc
ficoml
push
dec
dec
jecxz
iret
jge
jl
les
mov
push
push
or
inc
lcall
push
nop
into
lds
les
adc
adc
fists
mov
inc
popf
jnp
mov
mov
cmp
cltd
pop
xor
pop
and
stos
sbb
scas
add
enter
cmp
push
out
xor
mov
mov
std
test
xor
push
mov
lock
dec
pushf
int
xor
sarb
mov
loopne
repz
inc
and
and
xchg
gs
cs
fwait
ss
jno
shll
ss
inc
mov
stos
dec
sarb
inc
mov
cmp
inc
js
push
jnp
cs
mov
enter
xor
jnp
jecxz
dec
cli
in
fistps
push
mov
dec
xchg
ss
lret
stc
sub
in
cmpsb
pop
dec
cs
test
aad
scas
mov
jbe
lods
mov
inc
cltd
pop
pop
and
or
into
dec
scas
ja
pop
jmp
je
or
and
stos
dec
fnstcw
scas
adc
pop
in
sbb
pop
cltd
icebp
jbe
test
clc
ja
lret
fildl
xor
lcall
and
je
stos
addr16
xchg
dec
push
jp
out
push
adc
xchg
fmull
mov
lods
sbbl
xor
sbb
subw
push
pop
jns
movsl
add
push
jp
and
fs
xchg
add
nop
shl
mov
dec
cwtl
fisubl
add
mov
movmskps
insb
mov
popf
dec
adc
rolb
xchg
xchg
movsl
xchg
iret
mov
push
push
sbb
xchg
adc
or
jmp
insl
xor
cmpsb
mov
mov
aam
pop
adcb
aaa
popf
adc
mov
pop
push
inc
xorb
cmp
sub
fwait
call
js
fwait
inc
add
sbb
and
push
pushf
cmp
jg
pop
inc
inc
pop
add
cmp
mov
rorb
pop
mov
bound
add
ja
mov
pop
add
xor
xchg
push
cmp
push
pop
cltd
inc
and
fs
test
mov
into
loopne
pop
sbb
and
imul
jbe
and
xlat
movsl
in
mov
subl
adc
push
adc
ja
dec
add
sub
or
ret
sbb
rcrb
or
lea
cmp
in
ffreep
mov
jge
or
xor
in
xchg
das
je
stos
mov
mov
pop
ret
pop
xor
mov
ret
push
fnsave
test
arpl
mov
mov
insl
add
cltd
flds
lret
xor
popa
adc
les
push
pop
outsl
dec
mov
dec
mov
adc
jp
mov
push
mov
mov
repz
imul
nop
stos
add
adc
out
pop
jle
inc
and
faddl
dec
lret
int
inc
xchg
inc
jg
push
icebp
cmp
movsl
test
xchg
ljmp
and
xchg
ret
cmpl
test
in
inc
push
fdivp
dec
sbb
in
aaa
xor
pop
add
jge
sub
and
lds
int
aad
enter
mov
mov
rorb
jbe
out
in
sbb
lret
push
dec
arpl
bound
mov
pop
adc
bound
jg
or
ja
mov
clc
das
in
mov
pop
jecxz
mov
pop
out
or
cld
cmpl
aas
test
push
gs
xor
popf
sbb
shrb
sub
rcrb
lcall
aas
cli
xchg
xchg
cmp
jnp
mov
sub
fildl
adc
jbe
mov
xchg
or
pop
jo
xchg
xchg
xchg
cmpsb
addb
mov
dec
daa
jb
inc
int3
fwait
cwtl
outsl
inc
out
fsts
xchg
test
test
clc
jge
inc
add
and
pop
data16
sbb
sub
lahf
push
out
cmp
mov
loopne
add
negb
inc
test
mov
repnz
fs
aam
in
adc
out
xor
stos
bound
fcoms
dec
and
insb
sbb
loope
or
xor
lcall
push
test
dec
mov
mov
daa
inc
mov
popf
fdivs
out
std
ja
jmp
pop
xchg
mov
test
insl
fdivrs
or
notl
in
or
inc
mov
and
gs
jno
aam
mov
mov
push
mov
mov
test
dec
mov
dec
call
ljmp
dec
daa
dec
add
movsl
add
lds
sub
scas
jp
mov
or
or
lcall
in
notb
and
aas
add
movsb
iret
adc
mov
mov
ljmp
xchg
and
pop
mov
arpl
mov
cmpsl
fdivrl
mov
scas
inc
xchg
add
xchg
inc
call
es
mov
add
push
sub
mov
add
and
mov
jns
push
movsb
scas
jp
pop
xchg
out
pop
pop
faddl
lret
clc
jecxz
std
in
ret
push
or
aas
push
roll
adc
rolb
inc
and
jb
cmpsl
adc
xchg
mov
fisubl
jmp
adc
add
mov
pop
ds
push
ja
stos
push
lcall
mov
jp
push
jno
icebp
insb
sub
inc
and
out
sar
int3
stos
xor
loopne
adc
xor
sbb
mov
out
shl
lods
ret
fwait
shrb
mov
dec
xlat
fwait
stos
fidivl
jb
push
mov
dec
pop
jmp
and
push
lcall
jmp
mov
sti
sub
outsl
lods
sub
or
sbb
sub
out
movsb
adc
xor
je,pt
xor
clc
ljmp
icebp
mov
push
mov
ds
and
inc
push
stos
push
test
mov
mov
xlat
mov
jle
push
in
push
xor
mov
pop
sub
data16
aad
pop
stos
aaa
sahf
fs
popl
rcll
mov
jecxz
push
movb
jb
outsb
imul
fs
sub
pop
mov
mov
in
xor
into
roll
stos
xchg
sbb
and
sbb
xchg
fmul
and
out
test
imul
mov
out
nop
sbb
pop
jo
push
lods
mov
outsb
or
adc
mov
adc
insl
inc
and
fisubl
mov
cltd
sbb
or
shlb
mov
ljmp
mov
mov
dec
loope
es
mov
hlt
repnz
jnp
and
pop
gs
pop
aam
dec
xor
mov
mov
cltd
dec
dec
xor
push
push
pop
push
push
outsl
test
xchg
lea
cli
jecxz
lods
stos
mov
movsl
lock
loopew
mov
out
xchg
push
xlat
lods
out
fldt
nop
out
jne
dec
inc
mov
jl
xor
jp
push
imul
jmp
pop
rcl
dec
cmc
mov
daa
imul
int
inc
or
push
ljmp
test
inc
add
test
lea
pop
and
pusha
push
jg
jecxz
popf
mov
lock
orb
adc
inc
cmp
add
jo
and
addr16
mov
mov
adc
mov
dec
addr16
inc
shlb
fucomi
xchg
push
jo
xchg
bound
lea
xor
cmpb
lret
mov
ds
nop
cmc
data16
sub
xlat
adc
ja
jns
xchg
iret
sbb
iret
push
popf
xchg
ja
dec
not
mov
mov
lock
mov
add
jle
daa
jecxz
xchg
mov
rcll
gs
pop
inc
rcrb
sahf
cli
and
add
jge
push
insl
repnz
lret
sahf
pop
sbb
sbb
push
pop
stos
outsl
test
jg
lds
pop
cmpsb
sbb
xchg
jb
xchg
aaa
or
cmp
cli
str
xor
add
mov
int
jo
mov
mov
cmp
cli
fadd
test
data16
pop
mov
int
jmp
lea
fcomip
jbe
loopne
out
loope
arpl
in
mov
push
push
out
jns
add
mov
dec
das
cmp
dec
cld
cld
dec
xchg
fiaddl
leave
int
mov
lahf
js
mov
cmp
cmp
jo
inc
xor
jle
fprem
xchg
gs
aad
outsb
ds
jnp
sbb
gs
xchg
add
pop
enter
pusha
movsb
jbe
lcall
lock
push
aas
dec
sti
and
scas
repnz
scas
push
push
mov
scas
test
xchg
push
or
stos
mov
push
xchg
and
movntq
add
lea
bound
clc
xor
loopne
in
cmp
add
cmpsl
mul
in
push
push
and
call
stos
ja
jl
jae
adc
inc
add
jb
sbb
jmp
sbb
lea
adc
inc
cwtl
orl
cmp
sarl
xchg
push
imul
sub
mov
inc
test
icebp
push
sbb
dec
rcrl
pop
bound
and
sti
mov
cwtl
cld
jmp
ljmp
out
push
add
orl
ret
sub
push
fimull
les
lahf
in
dec
mull
out
pop
or
push
shlb
ret
mov
and
mov
sbb
sbb
imul
out
sar
sub
sbb
lock
fscale
mov
inc
mov
push
xlat
cmp
sbb
adc
fadds
loop
and
sbb
mov
adc
loop
mov
push
cmp
into
dec
test
dec
out
push
loope
cmpb
cli
sbb
jb
out
in
sub
rcll
sahf
repnz
xchg
sti
sub
outsb
fwait
movsb
pop
jmp
les
mov
or
repnz
mov
add
and
aaa
mov
xchg
add
inc
lods
lcall
mov
test
test
lahf
scas
sub
es
cmp
popf
jl
ret
pop
and
inc
xor
xor
add
inc
subb
jno
mov
je
jnp
push
test
pop
aad
out
fdiv
adc
fiadds
in
mov
push
xor
add
ficoms
and
inc
adc
std
adc
add
clc
jae
mov
hlt
cmc
inc
movsb
inc
ss
cmp
lods
rcrl
xchg
andb
dec
add
adc
mov
xchg
adcl
rcrb
rep
movsb
das
dec
mov
shrb
popf
idivl
add
test
xchg
aaa
xor
sbb
stos
in
dec
lods
adc
in
add
scas
movd
sbb
mov
and
outsb
sbbl
dec
sbb
cmpb
cmp
push
rcll
sysenter
jno
dec
cltd
orb
rcr
dec
imul
cmp
repz
jae
xor
rcll
ss
push
shlb
rcrb
lcall
xor
mov
in
mov
pop
cmp
pop
xor
sub
loopne
repnz
das
push
ja
imul
dec
subl
sbbb
pushl
sarb
andb
dec
inc
dec
jb
imul
inc
cmp
add
divl
mov
jne
jp
pop
out
pop
push
shll
pop
aas
mov
pusha
ja
pop
jle
psrad
arpl
xchg
and
add
mov
repz
lcall
jge
fwait
cmp
cs
mov
or
inc
jno
aad
cmp
pop
test
ret
xor
int
daa
mov
lcall
jae
ljmp
pusha
pop
dec
jns
cs
xchg
pushw
loope
or
pop
mov
arpl
adc
je
jne
lods
fdivrl
sub
add
aam
xchg
pop
insl
and
movsl
dec
shrl
inc
sub
data16
outsl
lcall
dec
hlt
adc
call
jb
fimuls
xor
sti
jg
mov
pop
out
push
cmp
jae
sbb
push
fsubl
sub
imulb
xor
push
rcr
jnp
mov
xor
dec
pop
les
add
cltd
imul
aaa
test
rorl
or
adc
into
lret
add
and
arpl
sbb
jmp
lods
stos
sti
lods
arpl
adc
jnp
scas
mov
ror
repnz
dec
lods
push
xchg
fmulp
mov
enter
add
push
add
rcrb
inc
and
adc
xor
nop
mov
loope
sti
jae
and
jnp
ss
hlt
ss
pop
adc
pop
cmp
pop
imul
adc
inc
mov
mov
adc
cmpsl
sahf
mov
sub
push
mov
call
int
ja
push
lret
into
mov
sbb
cmc
lds
je
inc
and
movsl
push
ss
dec
inc
mov
push
ret
icebp
shll
xchg
xor
mov
push
dec
cmp
mov
or
stos
mov
mov
loope
dec
movsb
je
xchg
adc
int
cmp
lcall
aad
rcrl
and
sbb
iret
xchg
sbb
lea
adc
xchg
repz
shlb
adc
add
dec
adc
xlat
leave
rcrb
pushf
leave
je
cs
popa
jle
arpl
popf
jmp
inc
pop
mov
cltd
and
rolb
mov
and
jmp
dec
aas
into
and
into
cwtl
das
gs
out
mov
add
push
sub
outsb
pusha
cli
psubb
and
insl
add
xorl
in
jmp
xor
out
or
hlt
jecxz
hlt
shld
add
mov
cvtpi2ps
mov
and
inc
into
movsl
int3
scas
jne
movsb
and
jp
inc
sub
stos
or
dec
das
les
sub
hlt
in
mov
into
je
inc
dec
insl
mov
add
xchg
or
jg
out
cltd
aas
lods
mov
testb
mov
and
ds
test
arpl
lds
test
jno
add
lret
pop
popa
xchg
inc
imul
in
movsb
ret
popf
mov
stos
inc
pushf
adc
test
xchg
and
or
pusha
mov
fildll
pop
rolb
ror
js
mov
push
xor
mov
fbstp
iret
ljmp
xor
add
dec
mov
jecxz
mov
or
xor
sbb
icebp
loopne
nop
mov
add
jb
dec
cmpsb
icebp
xchg
and
es
sub
ja
dec
sti
cltd
mov
pop
imul
into
outsb
push
ja
test
inc
add
pop
stos
pop
pop
mov
xorl
bound
push
loopne
loopne
xor
in
fsubrl
pop
jo
je
mov
insb
xorb
sub
mov
cwtl
pusha
clc
jns
test
lret
inc
loope
add
inc
fstl
cmp
in
in
push
roll
cmc
sbb
dec
mov
sbbl
mov
addr16
loop
mov
jns
xchg
in
sub
and
in
into
push
mov
cli
js
bound
out
or
mov
hlt
mov
loopne
mov
mov
mov
aas
inc
pop
mov
cmp
lcall
sarl
mov
js
jno
call
or
repnz
adc
cmp
adc
dec
shl
les
push
push
pop
out
jle
sti
shrb
inc
sub
and
cmp
sti
mov
jb
sub
repnz
add
adc
popa
je
add
nop
add
push
aad
pop
fwait
outsb
sbb
lds
out
incb
es
push
clc
inc
add
ljmp
inc
inc
lods
sub
mov
in
cli
dec
xchg
adc
jp
inc
adc
iret
test
fstpt
and
jns
sti
or
subb
call
enter
push
shll
dec
sub
add
jmp
ds
mov
xchg
mov
in
nop
aam
aaa
lret
fmul
xor
pop
cmp
adc
movsl
pop
inc
aam
cmp
shrl
fistpll
jb
and
aad
xor
jae
data16
inc
std
fistl
xchg
or
mov
or
orl
jae
daa
dec
xchg
xor
into
ja
jbe
push
dec
jbe
mov
inc
loopne
clc
push
cld
insl
mov
adc
jmp
sbb
sbb
sub
sbbl
test
nop
mov
movsl
jb
or
in
cli
je
fiadds
add
adc
lods
mov
jno
mov
roll
sub
rol
sahf
or
sahf
add
fbld
and
xor
and
xlat
inc
adc
cmp
dec
out
jno
fcoml
mov
lock
mov
bound
fisubrs
punpckhbw
jle
cmpsb
xor
in
mov
cmp
xchg
in
bound
aas
mov
and
xchg
subb
cs
push
pop
mov
ret
inc
divb
push
movsl
arpl
jmp
repz
or
into
mov
in
mov
sub
lods
scas
bnd
sahf
jnp
andl
or
cmpsb
call
xchg
loopne
call
xchg
mov
rcll
roll
jns
test
dec
test
mov
jg
icebp
cmpsl
rcll
dec
repz
insl
and
mov
in
sbb
rorl
int
jg
pop
mov
and
arpl
testb
mov
mov
jge
enter
arpl
jb
jl
jle,pn
mov
sbb
mov
sbb
mov
jbe
mov
cmp
cmp
je
aaa
pop
nop
lcall
and
cltd
jns
fidivl
cwtl
jg
mov
push
jnp
in
xchg
add
pop
mov
sbbl
mov
int
imul
addr16
test
cmpb
test
pop
fs
hlt
pop
jbe
aad
js
repz
shlb
or
push
aaa
scas
xchg
out
inc
cmp
cmp
pop
mov
lahf
ret
daa
mov
repz
fisubs
cmp
rclb
sub
fisttps
jo,pn
mov
imul
xor
mov
sti
xchg
cmpsb
mov
testl
bound
sub
test
add
mov
push
fcoms
loop
push
hlt
inc
mov
popa
pop
mov
or
in
mov
jns
jg
iret
mov
and
pushf
pop
je
sub
aad
xor
jbe
divl
sti
mov
flds
jecxz
je
xlat
jl
iret
aam
pop
fldl
add
mov
imul
jp
xor
sti
sbb
dec
lods
fists
inc
dec
imul
scas
adc
or
lret
xchg
stos
lods
lock
adc
jo
test
sbbl
leave
imul
xor
sbb
xchg
pop
or
jmp
sub
push
fadds
jno
jns
mov
imul
jno
lods
push
cmp
sti
or
xor
adc
xchg
f2xm1
scas
xchg
xor
addr16
lock
cmpsb
xchg
adc
sbb
inc
pop
add
test
sub
addr16
inc
push
dec
repnz
or
leave
cmp
dec
je
xchg
nop
testl
cmp
clc
mov
popf
push
sbbb
dec
mov
mov
pop
call
push
push
adc
push
pop
mov
cmpsb
pop
jmp
in
arpl
call
and
out
mov
outsl
iret
adc
dec
movsb
mov
icebp
lahf
cwtl
mov
in
mov
imul
cmp
and
pop
adc
mov
shlb
out
xchg
pop
adc
xchg
and
pop
out
int
add
pop
or
push
shl
mov
sub
cmp
xor
loope
push
in
dec
xor
shr
lock
popa
or
jnp
js
xchg
cmpsl
fmulp
outsb
imul
and
adcl
mov
mov
jmp
mov
sub
jnp
loop
push
orb
hlt
xor
push
pop
imul
xchg
push
nop
cmc
push
push
mov
loopne
rorl
arpl
mov
push
mov
test
clc
mov
ret
je
imul
pop
nop
jecxz
in
cltd
out
sti
stos
imull
and
shlb
and
fisttpl
mov
imul
enter
dec
rcrl
or
test
loop
or
cmc
hlt
jnp
jae
fisttpll
aad
add
hlt
lcall
out
ja
dec
and
xchg
fdivrp
inc
stos
xchg
int3
cltd
mov
rcl
movsl
repz
rcll
pop
test
or
rolb
sub
imul
or
add
or
inc
or
pop
jne
movsl
pushf
jl
stos
arpl
cld
cmp
inc
push
loop
xchg
repz
repz
and
sbb
push
jb
push
pop
lret
fsts
xlat
mov
mov
cmp
fwait
and
das
push
test
xchg
pop
and
pop
movsl
test
das
jne
adc
mov
pop
data16
push
xor
cmp
xor
sti
sbb
imul
and
adc
std
sub
fwait
hlt
mov
push
gs
pop
cmpl
cmp
imul
mov
cmp
push
aad
lcall
or
or
or
and
test
mov
inc
dec
subl
loop
scas
mov
add
or
jnp
mov
dec
movsl
push
and
sbb
les
loopne
repnz
daa
arpl
mov
sarl
mov
jnp
rorb
and
test
lods
add
or
test
into
fs
into
std
mov
clc
mov
bound
into
xchg
push
mov
dec
add
jbe
mov
cmp
loopne
mov
fldl
gs
fisttps
pop
sub
push
pop
xchg
lahf
sbb
sub
pop
mov
rcll
repz
pop
inc
push
xor
or
int
xchg
inc
inc
xor
orb
movsb
push
aaa
xchg
stos
jg
dec
or
mov
xchg
fwait
cmc
enter
adc
cmp
mov
sarl
fnstcw
mov
sbb
pop
mov
pop
les
rcl
dec
sub
jae
and
aam
cld
jecxz
fists
cmp
and
adc
dec
mov
addl
jns
mov
sarb
push
aaa
repz
test
or
enter
inc
dec
mov
aaa
sti
xchg
leave
xlat
aas
sbb
ret
icebp
jmp
inc
icebp
jae
shll
pop
jge
xchg
cmpb
out
movsb
ds
sub
js
sub
test
repz
filds
scas
fs
jg
xchg
sbb
jo
shlb
sysexit
cld
sbb
adc
mov
sub
sub
sub
popa
mov
pop
mov
dec
sahf
add
popa
jno
xchg
pop
lods
lahf
push
repz
add
fptan
out
pop
cli
push
push
pop
lock
adc
addb
shlb
add
icebp
js
mov
aam
pushf
and
sysenter
adcb
pop
cmp
dec
mov
xchg
xor
ja
aas
adc
xchg
mov
mov
mov
psubb
dec
sbb
lea
mov
jno
xor
aad
add
lahf
sbb
or
xor
les
xchg
mov
in
or
enter
add
xlat
xor
in
xchg
push
xchg
dec
cmp
cltd
and
dec
dec
pop
cld
lret
dec
adc
mov
rorl
std
xchg
push
or
inc
lret
jns
fisubl
dec
sbb
loop
in
dec
pop
out
mov
xchg
dec
aam
dec
cli
xor
scas
stc
sti
and
jo
loope
pop
clc
jmp
push
xchg
shl
fistps
cltd
jmp
leave
jb
rcrb
or
stc
js
pop
pop
stos
scas
fwait
rcr
sbb
int
in
sub
push
jb
aam
pop
out
hlt
fwait
call
repnz
push
cmp
daa
cmp
dec
cmp
stos
lret
cmp
and
cwtl
rclb
inc
xlat
inc
std
mov
mov
sahf
cmp
je
fcom
add
shlb
adc
sbb
push
pushf
mov
fnstenv
add
push
jge
sub
lods
aas
icebp
call
fs
int3
sbbl
push
lock
push
sub
test
cmp
sahf
jmp
pop
inc
fisttps
push
xor
mov
in
fidivl
cmp
addr16
add
and
sub
mov
mov
cltd
arpl
adc
movsl
pushf
popf
and
ja
mov
daa
lods
jecxz
and
call
test
ficoms
pop
xchg
pause
gs
and
push
inc
mov
ja
inc
cmpsl
ror
pop
mov
movsb
mov
sbb
int3
das
adc
xchg
push
lret
cmp
inc
and
arpl
push
icebp
int
mov
or
cmpsl
lods
lcall
xchg
outsb
popl
cmp
cmpsb
cmp
cmp
sub
cmp
mov
adcl
dec
jle
jmp
repz
mov
add
and
std
xchg
pusha
mov
scas
mov
jp
jl
js
test
lods
sbb
mov
cwtl
cmp
rclb
clc
stc
or
sub
sbb
jne
sahf
pop
lds
cld
ss
push
mov
outsl
sbb
mov
sbb
jae
jg
in
into
mov
arpl
dec
aas
fcom
jns
sahf
repnz
jnp
or
out
stos
cmc
push
jmp
or
out
sbb
jg
call
dec
jne
in
hlt
movaps
ja
pushf
icebp
sub
cs
add
mov
in
or
pop
inc
inc
daa
rcrb
mov
mov
and
xor
cmp
movsb
cld
data16
inc
mov
in
jle
int3
xchg
and
jle
add
out
shrl
in
stos
and
mov
enter
or
lahf
iret
insb
or
fnsave
adc
adc
mov
stc
mov
out
fstpl
push
inc
mov
xor
xlat
lret
hlt
mov
jb
rcl
or
movsb
lock
pop
outsb
push
cltd
notl
imulb
inc
xchg
jg
pop
sbb
insb
fildl
pop
xchg
mov
jecxz
clc
add
movsl
gs
jle
cwtl
sti
fnstenv
bound
dec
add
pusha
filds
cmp
pop
jl
mov
push
push
sub
insl
lds
pop
jle
es
xor
mov
xchg
lahf
xlat
push
int
push
test
cltd
lahf
lods
mov
push
jl
mov
mov
insb
cmc
fisttpl
mov
mov
outsl
sub
jecxz
dec
jmp
inc
pop
ja
pop
popa
push
push
sbb
dec
enter
mov
imulb
xor
inc
xchg
ret
gs
ss
push
ss
scas
adc
cmc
pop
and
xchg
mov
mov
dec
outsb
or
sarl
dec
cltd
sahf
mov
rcrl
movsb
and
jmp
jno
inc
adc
add
ljmp
dec
adc
rorl
inc
push
dec
mov
push
inc
inc
arpl
sbb
pop
popf
aam
out
repnz
outsl
shlb
push
incl
out
pop
shl
nop
fcom
call
mov
xor
loope
push
adc
and
xchg
mov
xorb
cmc
data16
pop
bound
mov
lret
lods
jl
sbb
cmc
ret
and
lcall
sarl
arpl
mov
and
adc
cwtl
xchg
pop
sub
sub
mov
js
add
add
enter
mov
cmpsl
stc
rclb
cmpsl
cmp
ss
iret
int3
repz
or
dec
cwtl
cmp
push
xchg
in
clc
adc
rorb
repz
cmp
pop
int
dec
fidivl
add
fisttpl
lods
jne
lret
xchg
cmp
jmp
cmpsl
sbbb
into
ficompl
out
mov
mov
jge
add
mov
enter
and
shlb
rol
ret
pushf
imul
in
mov
rorb
jo
lret
inc
xor
xor
jle
lock
pop
dec
data16
repnz
stos
shrb
aam
mov
or
loopne
dec
cwtl
shl
leave
jle
addl
cmpb
imul
test
subb
dec
cltd
sbb
xchg
faddl
xchg
out
iret
pop
test
mov
fcmovu
stos
cmp
pop
imull
sbb
lods
int
jmp
mov
in
jo
pushf
sti
movsb
dec
mov
push
lods
lods
sbb
mov
outsl
jg
sbb
and
popf
lahf
add
stos
pop
xchg
shll
adc
jbe
xchg
pusha
sbb
and
mov
xor
ljmp
inc
adc
in
repz
cmp
push
pop
lcall
add
pushf
mov
repz
xchg
lea
hlt
sahf
lret
push
stc
rcll
sti
sub
lcall
cld
in
clc
xchg
ljmp
fwait
jno
loop
or
mov
addr16
lret
loop
mov
aam
pop
rcrb
xlat
mov
mov
mov
or
push
mov
int3
push
jge
lret
sub
jne
mov
popf
orb
sbb
mov
lret
jmp
call
add
mov
push
rorl
jo
mov
dec
mov
pop
push
mov
in
popa
in
insb
cld
sarl
lcall
ret
mov
push
aaa
pop
insl
mov
push
sub
xlat
xchg
add
pushf
out
xchg
mov
cwtl
pop
gs
mov
sub
cmp
mov
loope
pop
aam
stc
rolb
mov
or
jl
dec
jle
btl
sbb
fiadds
jae
clc
test
inc
stc
out
aam
negl
inc
pop
push
or
out
cmp
xchg
dec
sbbb
pop
pop
inc
repnz
addr16
inc
out
xchg
xchg
jge
mov
sahf
and
lds
sub
or
sbb
int3
pop
xchg
in
mov
xor
ja
movsl
pop
dec
mov
dec
pushf
loope
and
mov
in
mov
push
arpl
lods
lods
inc
and
movl
or
jo
push
or
lods
or
bnd
adc
dec
push
idiv
and
out
mov
adc
js
cmp
add
lcall
mov
push
jne
dec
push
repnz
push
mov
jp
mov
sbb
xor
in
int
xchg
outsb
sub
daa
addr16
std
xor
outsl
sbb
xchg
inc
add
cmp
inc
decb
lret
push
mov
mov
mov
xchg
lret
push
fldenv
stos
cmp
test
gs
add
mov
adc
clc
daa
or
les
aad
or
push
or
lcall
pop
jne
mov
scas
jnp
mov
inc
sbb
mov
cmp
sarl
arpl
int3
or
test
adc
xor
scas
push
mov
sub
in
and
inc
inc
cmp
outsl
mov
or
and
pop
mov
and
adc
add
mov
sub
sbb
add
jns
sahf
pop
jl
scas
pop
jno
mov
dec
xchg
jl
insb
popa
loope
call
inc
jmp
lea
adc
xchg
out
lea
mov
push
mov
inc
xchg
popf
jle
gs
add
add
std
xor
int
insb
xchg
sub
add
pop
pusha
test
mov
sti
jecxz
dec
dec
push
dec
adc
sub
aam
scas
loop
adc
fiadds
sbb
dec
in
cltd
pop
shll
sub
cmp
neg
ret
add
repz
loope
sbb
in
mov
pusha
clc
dec
mov
les
push
sbb
js
lret
push
adc
adc
in
out
enter
out
jp
adc
sub
dec
xchg
arpl
mov
mov
je
inc
jge
pop
pop
test
dec
popa
sbb
cmp
stos
clc
icebp
mov
push
addr16
add
mov
lods
xorb
pop
shrl
push
sbb
mov
cli
imul
adc
push
dec
stos
enter
lods
idivl
jmp
mov
mov
nop
ret
lcall
ljmp
mov
xor
and
cmpsb
loop
xchg
scas
cli
scas
pop
mov
add
mov
adc
cltd
dec
add
add
jle
aad
mov
mov
loop
xchg
jge
lods
fdiv
sti
mov
shll
and
rol
pop
jmp
aaa
cs
mov
ret
and
dec
into
leave
xchg
in
mov
pop
pop
inc
test
fistps
ffreep
mov
jl
outsl
out
add
cld
ja
and
pop
sbb
mov
xor
push
es
shll
and
pop
pop
xchg
push
pop
sbb
and
and
mov
repz
xchg
cmp
pop
repz
rcr
or
pop
mov
ds
adc
push
add
mov
cwtl
jmp
xor
pop
pop
ss
scas
xchg
cs
add
and
sbb
xor
jb
maskmovq
imull
mov
adc
push
dec
popf
pop
push
push
scas
jle
xchg
pop
cmpl
cld
std
test
fwait
rcll
aam
mov
aaa
shlb
orb
sbb
hlt
loop
or
into
mov
roll
lods
push
mov
cmp
adc
xchg
stc
clc
pop
ss
pop
into
mov
lret
shll
aaa
imul
pop
jae
rcll
push
cmpsl
ret
pop
mov
jle
mov
cs
xorl
jnp
cwtl
out
xor
lock
adc
insl
mov
xchg
outsb
iret
daa
cmpsb
mov
inc
int3
xor
test
sarl
hlt
mov
popl
pusha
xorb
pop
fmull
jbe
jno
sbb
xchg
divl
push
sub
dec
into
lea
mov
jmp
shll
pop
fildl
inc
aam
shrl
adc
sbb
xor
sub
fidivrl
push
push
add
lcall
sub
sub
cmp
out
pop
lcall
sbb
sbb
lds
and
jmp
pop
push
sub
hlt
jb
mov
xor
dec
cs
sarb
inc
sub
mov
daa
cli
and
and
fldenv
fidivrs
pushf
enter
popw
outsb
sub
roll
out
cli
add
jb
out
add
dec
add
inc
bswap
inc
or
jecxz
fwait
mov
mov
mov
pop
fs
xchg
pusha
xor
aas
push
cmp
push
xlat
imul
mov
sahf
xchg
pushf
sbb
sbb
lfs
rcl
mov
jnp
inc
pop
mov
cltd
mov
gs
pop
inc
mov
ss
sbb
cld
or
jae
push
push
mov
pop
sti
loopne
xchg
lahf
shrb
pop
in
or
les
fwait
mov
push
std
adc
std
bsf
xchg
jg
rcr
out
faddl
in
or
in
mov
or
mov
popf
out
jg
push
lcall
outsl
xchg
jno
cmp
sbb
push
jge
jbe
push
cmp
addr16
test
and
daa
mov
icebp
lods
push
xchg
mov
cwtl
jmp
xchg
cmc
and
mov
push
int3
fdivrs
add
out
add
rorb
adc
jp
xor
js
outsl
or
mov
inc
push
push
and
testl
loopne
mov
push
dec
xor
inc
aam
jbe
xchg
push
data16
push
mov
ficomps
xor
mov
pop
sbb
and
sub
es
add
dec
jbe
ja
adc
sbb
xchg
sbb
cld
mov
lahf
insb
cmp
adc
movsb
mov
lds
xlat
popf
or
push
mov
or
cmp
jns
sub
imul
jns
push
leave
js
mov
fidivs
dec
or
fiaddl
sbb
popa
lahf
imul
aaa
xchg
rcll
imul
adcb
jno
push
stos
inc
insl
ret
pop
push
add
ficompl
fistl
pop
xor
mov
das
add
pushf
mov
xor
push
and
or
imul
call
or
cmp
mov
mov
mov
fstpl
repz
inc
mov
xor
push
movb
inc
mov
repz
sub
or
or
std
sub
and
rcl
movsl
fmuls
jp
lock
fs
mov
lods
test
sahf
and
xchg
in
sbb
mov
test
mov
or
gs
stos
and
xor
push
add
std
adcb
ret
sub
and
inc
push
ret
int3
push
mov
xor
dec
jne
bnd
std
sti
shrl
mov
inc
lods
mov
fisubrl
test
inc
jbe
or
cmc
sbb
xor
rclb
jns
adc
xchg
jecxz
je
sahf
pop
mov
xchg
leave
adc
frndint
inc
fisubrs
xchg
pop
xor
aad
add
cs
pop
aam
push
mov
int3
aaa
repz
push
loop
sti
adc
xchg
outsl
jo
push
cmpl
lods
add
iret
call
movsl
imull
fcmovne
lcall
ret
inc
loope
mov
jo
pop
mul
into
sbb
out
sub
add
adc
and
ret
rcl
jns
and
scas
out
cmp
ret
jb
mov
xor
js
sbb
inc
fcompl
ja
sub
movsb
sub
fidivrl
popa
xchg
ljmp
es
sahf
mov
ds
inc
out
sub
sbb
cltd
mov
les
sbb
ja
sarl
fcoms
int
xor
lods
mov
inc
adc
outsb
mul
push
dec
sub
fisubrl
or
lea
xchg
inc
dec
popa
and
enter
sub
xor
mov
add
xor
shl
jo
inc
out
jmp
nop
jecxz
mov
clc
xor
jge
xor
mov
mov
popa
ficoml
mov
mov
pop
icebp
mov
cwtl
sub
aad
push
enter
fs
rorb
pop
sarb
pop
cmp
mov
inc
xor
pop
cmp
loop
out
jmp
pop
pop
fimull
ds
fistpl
and
xchg
sub
add
add
stos
aad
mov
inc
clc
out
mov
jns
or
pusha
or
adc
divl
ds
mov
scas
cmp
push
rorl
fstp
push
movsb
push
sub
push
push
loop
imul
in
xor
sbb
out
push
dec
cmp
push
imul
push
adc
pop
inc
xchg
cmp
in
cld
jl
pop
mov
rcll
inc
mov
push
fsub
mov
cmpsb
aad
jp
leave
fimuls
or
jns
dec
dec
lock
inc
out
loopne
lds
mov
xchg
jbe
scas
xchg
xor
data16
hlt
cld
add
outsl
mov
fnclex
dec
mov
movsl
lcall
imul
gs
cltd
sbb
jne
mov
and
push
sti
dec
mov
adc
scas
leave
xchg
xchg
xor
mov
sbb
cmp
bound
sbb
sbb
jle
movsb
sub
popf
pop
push
fsubr
ja
push
xlat
pop
dec
sbb
out
dec
cli
push
and
mov
cmc
pop
mov
loope
and
jb
xor
or
call
bound
mov
mov
out
pushf
outsb
leave
enter
sub
jp
jo
imul
pusha
cmpb
cmc
pop
jb
aaa
dec
pop
pop
pop
lods
lods
xorb
mov
in
mov
loopne
sbb
push
in
mov
ret
loopne
and
jo
ret
into
mov
pop
lock
xchg
loope
push
fwait
and
and
dec
xchg
sub
ljmp
fdivp
les
jle
ljmp
add
call
adc
rcrb
and
mov
lret
inc
fwait
loope
clc
sbb
cmp
jecxz
and
adc
inc
cmpsl
roll
mov
cmp
dec
shl
pop
push
stc
add
dec
lret
int3
js
add
or
lret
subb
cmp
sbb
js
adc
lods
push
aas
xchg
add
mov
adc
int3
jmp
ret
stos
push
je
stos
inc
mov
lahf
iret
leave
mov
mov
xchg
jmp
mov
mov
xor
aaa
inc
mov
cmp
jo
sbb
cld
push
ret
push
stos
popa
mov
mov
xchg
mov
in
fsubp
push
sub
xor
subl
pusha
in
sub
dec
fisubrl
js
outsl
mov
dec
dec
xchg
shrb
mov
mov
jno
sti
shl
fstl
and
inc
rcr
outsl
movsb
faddl
sub
push
cli
repnz
inc
arpl
inc
sub
jns
add
call
fldenv
lea
and
mov
cli
mov
movb
roll
add
mov
jmp
iret
mov
popf
pusha
cmp
loope
lock
rorb
pop
cltd
sub
mov
fstpl
loope
mov
cmp
xchg
jmp
fstpl
jp
xor
not
pop
inc
adc
ds
addr16
popf
cmc
or
jbe
aad
mov
fildll
iret
adcb
es
pop
jge
sub
ror
sub
scas
mov
clc
jno
adc
mov
imul
imul
jmp
add
inc
gs
flds
inc
lret
inc
xor
js
or
paddd
cmp
xor
out
inc
and
add
daa
stos
xor
js
in
xor
cmpsb
aaa
imul
jb
movsb
rorl
mov
sarl
xor
fadd
icebp
sub
adc
in
shrl
mov
push
dec
movsb
cld
ret
jmp
sbb
rolb
mov
mov
testb
lcall
clc
lods
shlb
push
push
movl
sbb
flds
mov
notl
inc
cmp
and
dec
xchg
sahf
data16
leave
and
mov
dec
out
cmp
mov
xchg
nop
adc
test
dec
imul
xchg
mov
lret
dec
lahf
cltd
outsb
lret
xchg
mov
mov
adc
sub
xor
jne
orb
push
xchg
mov
pop
out
inc
inc
lcall
jno
cmp
pop
fnstsw
in
or
call
dec
or
test
jae
ret
sub
rcll
es
push
or
pop
cwtl
popf
jge
dec
xchg
cwtl
hlt
mov
pop
mov
icebp
push
aas
out
jno
inc
add
popa
xlat
aad
ret
imul
out
pop
ret
sbb
movzwl
jmp
mov
adc
pop
loop
mov
adc
outsb
bound
jmp
lods
shll
sub
or
stos
jle
mov
fcoml
outsb
or
repz
gs
pop
push
push
out
cmpsl
pop
out
ds
jb
xor
pop
test
mov
ret
or
xor
cli
lcall
add
bnd
lea
jp
shl
sub
mov
pusha
out
inc
adc
or
push
addl
lea
add
adc
xor
in
and
xor
mov
or
cmc
arpl
js
add
bound
pop
fwait
or
xchg
pop
sbb
mov
cld
pop
mov
sub
sar
ljmp
stos
lahf
xchg
jae
sbbb
es
cmp
je
push
rol
xor
int
iret
pop
sub
pop
pop
mov
je
cwtl
add
pop
mov
sti
out
mov
mov
jle
je
movsb
sub
xchg
xchg
dec
idivl
inc
push
out
sub
lret
mov
xor
loope
rol
cltd
setle
out
pop
pop
cmp
sbbb
aaa
stc
addl
xabort
shll
push
outsl
or
popf
shlb
sub
xchg
cmpsb
daa
jp
and
jg
lods
out
xchg
adc
xor
adc
push
shlb
xor
aas
ret
cmp
inc
in
and
xchg
dec
fildll
leave
ljmpw
inc
mov
dec
xor
pusha
jae
or
xchg
fmuls
pop
and
imul
adc
adc
jecxz
push
sbb
xor
sbb
push
mov
mov
inc
shll
cld
ror
dec
add
mov
add
test
mov
xchg
ja
daa
cmp
pop
data16
lahf
push
lret
fisubs
adcl
lods
and
pusha
and
rorl
mov
sub
push
call
mov
add
fs
sbb
clc
pop
into
adc
cmp
test
loopne
roll
mov
das
lret
push
inc
test
test
dec
and
adc
nop
mov
pop
xchg
insb
movsl
add
pop
repz
mov
and
or
sbb
dec
jle
adcb
and
inc
out
pushf
negl
pop
adc
mov
fwait
inc
xor
sub
fisubrl
clc
andl
fdivrl
mov
add
push
push
test
lds
loop
sahf
xchg
shlb
stos
cs
dec
pop
mov
repnz
push
xor
dec
in
sub
or
sbb
mov
push
je
stos
or
rorl
fnstsw
pop
cld
mov
inc
lret
loop
mov
add
adc
clc
lods
jle
adc
dec
insb
stc
inc
mov
sub
fsubrs
xlat
imul
in
sub
jns
es
pop
lret
inc
cmpsb
pop
mov
or
push
inc
or
mov
das
jb
and
out
inc
outsb
jns
cmpsb
pushf
out
pusha
inc
lcall
cwtl
mov
xchg
jns
lea
mov
mov
scas
add
and
mov
sbbl
leave
jbe
in
push
or
ret
cmc
in
xchg
adc
subl
es
or
cmp
shl
add
les
ret
jge
pop
cmp
imul
adc
shr
pop
mov
jne
mov
mov
hlt
and
in
cmp
pop
out
pop
add
imul
mov
sbb
jns
sub
test
ljmp
push
or
dec
aad
sbbl
inc
ret
out
mov
inc
js
scas
ja
add
lea
movsl
sbb
pop
imul
popa
insb
xchg
sbb
mov
faddl
insb
fadds
addps
dec
in
mov
dec
push
jge
movsb
outsb
mov
add
push
sub
inc
xlat
fsubrl
push
xor
or
fs
dec
std
shll
into
pinsrw
loop
out
mov
sub
and
add
ret
xor
js
mov
mov
fimuls
mov
pop
jno
aad
les
fwait
pop
lock
movsl
mov
sub
lock
jmp
stos
xchg
jg
lret
mov
addr16
cmp
iret
pop
mov
mov
leave
add
andb
lea
xlat
out
fdivrl
cwtl
cmp
cmp
xchg
fsubrl
je
test
jno
fildll
dec
repz
fs
lock
cld
and
outsb
out
cmp
fstpt
int
jne
sub
je
dec
cmp
mov
cwtl
aaa
or
sti
adc
ss
int3
cmp
pushf
xchg
shll
jb
mov
xchg
cmc
ret
or
and
lahf
je
cmp
divb
popf
f2xm1
rorb
das
popa
or
and
into
sbb
mov
mov
andl
adc
xor
fildll
scas
outsl
xorl
push
sub
das
imul
lret
pop
in
test
or
push
adc
xchg
insb
sarb
adc
addb
cld
pop
movsb
xor
push
push
push
sbb
ret
mov
stos
mov
ljmp
xchg
or
mov
adc
shrb
xchg
arpl
push
sbb
xor
dec
test
adc
in
inc
pusha
popf
inc
popf
adc
movsb
dec
out
bnd
cmp
cli
lock
ret
shr
fistl
insl
jbe
jns
and
loopne
jl
push
adc
cld
add
inc
and
std
push
cs
xchg
into
aad
ficompl
inc
push
jbe
jnp
lcall
rolb
pop
into
popa
and
xchg
in
mov
or
setne
cltd
out
leave
test
lcall
rcrl
xor
lock
jmp
mov
fstps
cwtl
in
clc
lock
popf
pop
sub
lea
ret
movsl
pop
add
popf
fbstp
push
jp
addb
dec
mov
fisttpl
mov
sub
outsl
imul
stc
cs
rolb
outsb
fld
aas
mov
pshufw
pop
dec
das
pop
xchg
jg
mov
add
out
cmpsb
jle
and
leave
sub
lcall
jmp
sub
mov
cwtl
xchg
xlat
mov
popl
mulb
ror
shll
aas
pop
pop
add
lock
lock
addr16
xor
cltd
jno
nop
pop
addr16
js
idivl
cmpsb
test
sub
fldt
xchg
xor
scas
outsl
push
mov
pop
int
ds
jns
pop
mov
cwtl
inc
into
xchg
lret
imul
dec
jle
sahf
xchg
xor
sbb
inc
cmc
cmp
and
dec
mov
jg
in
shr
pop
leave
jg
jb
mov
inc
adc
jae
mov
bound
jecxz
loop
mov
and
out
jmp
cwtl
dec
orl
or
sub
rolb
pop
and
loope
adc
sub
mov
mov
push
loop
ds
iret
xor
fs
je
mov
sub
stos
xor
in
outsl
pop
cs
lods
fisttpl
es
cmp
nop
in
icebp
push
xchg
gs
mov
sub
inc
add
sti
shlb
jmp
bound
xor
mov
pop
ficompl
fstpt
imul
inc
addr16
aas
mov
jmp
aaa
adc
mov
sti
pop
inc
pop
dec
ret
cmp
xchg
and
pop
jbe
jns
jecxz
mov
fidivs
test
xor
shrb
dec
dec
mov
cmp
scas
lods
cmc
incl
xchg
mov
or
adc
in
mov
inc
inc
mov
scas
bound
fs
clc
loopne
fwait
pop
and
lock
jecxz
push
add
and
decb
inc
lods
jg
gs
inc
scas
repnz
insl
test
js
sarl
sub
shl
sti
data16
push
test
jb
in
bound
sub
sbb
adc
push
mov
push
testl
lea
mov
mov
repz
lret
mov
cmp
int
fcomi
in
mov
outsb
mov
inc
sub
xchg
xor
js
insb
fildl
hlt
sub
add
in
fwait
cld
mov
xor
loopne
popa
xor
int3
mov
int
sub
inc
and
jmp
lods
pop
xchg
mov
repz
adc
sti
test
das
add
mov
in
insl
fisubrs
bnd
xlat
popa
jae
rorl
xchg
lret
and
jl
mov
ret
xlat
pop
in
lret
jns
fwait
in
pop
mov
call
sbb
test
or
sbb
mov
push
inc
loopne
push
xor
sahf
mov
sbb
adc
sub
test
lea
iret
xor
sub
add
ja
jo
pop
pop
lcall
sub
sub
add
mov
stos
fdivrl
sbb
jge
popf
push
inc
in
jbe
icebp
lahf
push
sub
test
fwait
inc
cmp
push
fistpl
inc
popa
inc
loopne
int
push
sti
push
scas
addr16
mov
jae
pushf
mov
sahf
fistpl
sub
movsb
and
fwait
mov
sbb
shl
xchg
mov
sbb
rorl
push
lcall
in
push
insl
testb
or
aam
nop
xlat
inc
nop
pusha
inc
popf
pop
dec
sub
test
cltd
sbb
mov
lea
xchg
test
cmp
mov
push
sti
fyl2x
sbb
inc
inc
or
shr
sbb
xor
xor
dec
or
jo
and
mov
xchg
mov
mov
lcall
cltd
mov
or
cli
push
mov
dec
xor
push
out
in
test
sub
push
popf
xchg
and
cs
loope
push
pop
mov
movl
jmp
jecxz
lret
push
icebp
xchg
cmp
jecxz
fildl
mov
pushf
jmp
sti
mov
and
sub
or
movsl
push
in
jle
and
lods
adc
and
outsb
out
add
jo
xor
scas
pop
sbb
outsl
repnz
mov
jmp
jo
and
xor
lds
dec
fstpl
cmp
hlt
adc
test
mov
pop
adc
mov
mov
sbb
imul
push
add
mov
test
in
jno
ljmp
lods
int
push
jnp
fmull
inc
push
repz
rolb
adc
aad
inc
mov
push
decb
push
cmp
fucomi
adc
fidivrl
mov
loop
push
bound
xchg
jl
or
jl
out
decl
mov
add
insb
inc
fidivl
popf
xchg
mov
in
int3
push
cmp
sub
and
mov
adc
cmp
outsb
mov
ret
js
lcall
iret
daa
leave
jns
and
nop
hlt
or
xor
test
lret
push
mov
jl
or
jns
cmc
gs
xor
inc
movsl
cli
cltd
mov
cld
lea
addb
test
mov
fnstsw
ljmp
insb
fistps
inc
insl
push
mov
js
jle
cwtl
dec
or
clc
mov
dec
pop
mov
sbb
sub
js
xor
and
lcall
imul
aam
push
jp
or
cld
xchg
es
cmp
cmp
and
mov
jle
and
add
sub
jne
jl
lcall
mov
push
shrl
data16
jl
mov
xor
pusha
jmp
add
push
mov
imul
int3
adc
jg
jnp,pn
lock
daa
xchg
imul
jns
pop
mov
push
ret
fs
fwait
enter
roll
fcmovbe
cmp
cmp
outsb
mov
hlt
sub
add
and
aas
add
dec
cmp
mov
xchg
out
mov
dec
sbb
pushl
push
std
outsb
stos
mov
pop
or
cli
sub
popf
or
lods
outsl
and
mov
lods
push
lods
push
and
inc
lods
and
pop
icebp
mov
add
push
hlt
out
lahf
adc
adc
ja
mov
pop
mov
sbb
ret
add
movsb
mov
ret
mov
test
int3
jle
or
and
inc
sarl
test
movsl
mov
aaa
test
xchg
adc
sub
pop
cmp
in
into
sub
pop
fnstcw
xchg
inc
clc
gs
add
pop
and
movsb
ds
test
inc
fistps
fsubp
lods
into
mov
movsb
mov
fldt
repnz
pop
xor
not
nop
push
mov
outsb
inc
sub
sahf
stos
inc
cmp
sub
cmp
jae
jmp
pop
push
jmp
inc
lret
sub
out
in
mov
xchg
rcrb
cmpsb
cwtl
ds
nop
jp
add
add
mov
cli
mov
add
hlt
sub
ljmp
inc
pop
or
stc
iret
mov
and
inc
out
addr16
popf
rcll
leave
fwait
xchg
shll
int
lea
out
xchg
bound
jle
mov
mov
rcr
lcall
into
push
inc
test
jb
hlt
push
push
cmpsb
sbb
add
inc
arpl
insl
lret
adc
add
fbld
in
stos
rolb
sahf
push
test
push
pop
add
mov
push
pusha
mov
sub
mov
mov
adcb
mov
inc
mov
fnstenv
bound
sbbl
fwait
pop
out
negl
dec
rcr
push
xchg
repz
cmp
aam
dec
out
cmp
inc
pop
jae
cld
dec
mov
jns
mov
mov
pop
fisttps
jb
mov
repz
lret
xor
jmp
shrb
scas
lds
add
fwait
xor
test
jno
inc
sar
pushf
notl
or
or
sbb
cmp
push
cmpsl
xor
mov
or
sbb
mov
pop
mov
stos
pop
push
adc
and
test
pop
jp
sbb
mov
sbb
pop
and
inc
dec
test
addb
adc
add
and
repnz
add
xchg
mov
mov
xchg
mov
xchg
jno
fstps
jle
add
add
inc
fwait
cwtl
sub
jbe
inc
or
loopne
push
inc
jbe
lcall
jge
ficoml
int3
das
clc
arpl
mov
push
mov
daa
jp
mov
mov
sub
sbb
imul
dec
ljmp
push
ret
mov
fs
insl
sbb
mov
sbb
lds
pop
pop
mov
subb
sbb
fs
int3
sbb
aas
inc
push
push
inc
jae
cld
cmp
xor
fdivr
adc
stos
mov
xchg
sti
enter
dec
cmp
mov
xchg
pop
or
lods
stc
pop
es
stos
stos
cld
adc
add
mov
mov
push
mov
and
mov
jno
mov
mov
jns
je
leave
jo
ss
inc
orl
cwtl
jns
ds
enter
das
mov
inc
cli
jle
lret
push
cmp
cmpsb
cmp
mov
call
adc
test
pop
clc
rcrl
repnz
mov
inc
cmp
repnz
ret
pop
add
icebp
ss
sbb
stc
shr
lods
fstps
hlt
shll
je
aad
push
je
outsl
pop
sbb
cltd
das
push
pop
lcall
fisubrl
push
lock
enter
mov
les
pushf
pushf
xor
or
jno
sbb
loope
in
xchg
xchg
jecxz
scas
push
fsts
daa
mov
test
cwtl
add
nop
ds
test
mov
push
mov
sub
popa
push
fs
mov
popa
into
lods
xchg
xchg
pusha
jnp
adc
adc
xor
jbe
xor
mov
fildll
stos
mov
mov
aas
push
iret
clc
test
adc
xor
aam
jle
icebp
jnp
or
xor
pop
shll
cmpb
sbb
dec
enter
mov
jle
sbb
orb
outsb
in
dec
pop
callw
sahf
mov
push
lds
mov
push
js
ds
push
popa
test
stos
lods
add
repnz
cmp
aaa
push
arpl
sub
out
out
jno
pop
sti
jle
mov
shr
mov
inc
or
xchg
ljmp
test
repz
adc
mov
hlt
add
shl
lret
add
out
mov
mov
psubw
rorb
pushf
push
or
inc
scas
stos
jb
sbbb
enter
mov
call
pushf
mov
cmpsl
in
shll
mov
jo
or
sbbl
ljmp
enter
mov
jnp
les
mov
jge
cld
inc
aad
mov
inc
add
inc
push
lock
jle
inc
out
mov
je
adc
popf
jae
sti
loopne
lret
jecxz
in
notb
cmp
xchg
and
pop
shlb
xor
test
repnz
cmp
xlat
push
cmp
lods
push
ja
cmp
jnp
test
loopne
cld
xchg
inc
ret
sbb
ret
cwtl
pop
call
jg
ret
cmc
adc
mov
in
xor
and
or
inc
nop
and
pop
fstpl
and
sub
sti
gs
insb
jns
ja
push
cwtl
shrb
dec
mov
adc
seto
add
xchg
push
push
xor
jg
adc
stc
pop
andl
mov
push
ds
repnz
sub
out
test
fwait
lods
and
mov
cwtl
mov
mov
lods
mov
ss
pushf
xlat
sbb
jl
adc
mov
je
pop
gs
outsb
fsubrl
jge,pt
pop
push
mov
mov
dec
cwtl
pop
push
mov
hlt
adc
aad
adc
cmp
insb
mov
cmpsb
call
out
inc
sti
inc
sub
sub
andb
movsl
jg
jno
fsts
out
inc
loop
shlb
stc
push
push
dec
scas
xlat
inc
cmp
xor
fsubrp
jne
mov
fs
inc
ljmp
cld
stos
pop
shlb
or
add
sub
cmp
jnp
xchg
fisubrl
inc
pop
pusha
jp
fistl
fwait
xchg
inc
pop
rcrl
ss
push
mov
mov
sub
add
mov
int3
xchg
dec
testb
repnz
mov
enter
lods
aad
lret
pop
fdivrs
lret
sub
cltd
out
and
mov
std
je
xlat
xchg
cmp
test
sti
es
add
push
add
inc
shll
pop
sbb
lahf
lds
jl
loope
shlb
jno
adc
lock
lock
jbe
idivl
xor
push
fsubs
jbe
mov
aas
and
xor
pushl
adc
mov
popf
test
scas
mov
or
sbb
out
test
mov
mov
adc
add
test
cltd
jnp
das
fs
push
pop
sub
and
jmp
mov
xlat
push
xor
stos
test
push
nop
les
dec
adc
push
int3
fwait
dec
xchg
inc
jg
or
aas
in
lret
loope
sbb
pop
and
push
xchg
adc
or
mov
xchg
mov
out
jecxz
xchg
adc
jmp
cltd
call
jg
cli
movsb
dec
jp
outsl
loope
andb
push
xor
inc
cmc
inc
jg
dec
icebp
arpl
mov
jecxz
inc
imul
addr16
jl
shrl
hlt
iret
inc
leave
fdivrs
cld
jno
xchg
mov
negl
push
add
xor
inc
cmp
jo
test
loope
or
aaa
stc
cmp
roll
push
push
xchg
in
subb
and
sub
or
inc
enter
lret
mov
lret
cld
mov
sahf
shrb
mov
push
inc
mov
shld
cmpsl
xchg
mov
pop
dec
sbb
add
scas
and
ss
insl
test
or
jo
fiaddl
inc
shlb
sub
rcrb
push
adc
jno
mov
xor
push
pop
mov
or
out
xchg
insb
jno
in
mov
outsb
ja
jnp
push
arpl
fs
adc
les
pop
out
jmp
js
sub
sub
mov
inc
xor
pop
pmuludq
dec
xor
cmp
push
out
mov
jmp
sub
xchg
jb
push
mov
fs
mov
les
push
sti
pop
adc
cmp
jne
out
adc
sahf
jecxz
out
sbb
bound
pusha
push
cli
add
pushf
mov
movsl
mov
mov
inc
push
popa
pop
jg
push
sahf
outsb
aad
ficompl
sar
add
jns
nop
mov
push
cli
das
add
push
cli
outsb
out
push
sub
stos
and
jno
cld
js
mov
hlt
mov
test
fbstp
lahf
mov
or
iret
pop
inc
and
fsubrp
pop
add
in
loopne
xor
add
out
inc
adc
mov
push
and
stc
push
and
mov
sahf
mov
in
mov
sub
add
movl
mov
pop
jecxz
lret
es
cmp
push
jb
xchg
hlt
inc
pop
adc
inc
cmp
mov
push
jg
mov
or
subl
negl
xchg
hlt
dec
pop
neg
pop
iret
sbb
jle
inc
aam
movsl
idivb
dec
in
mov
sub
cmp
push
dec
dec
adc
push
cld
pop
xor
xchg
xor
pop
popa
stc
lods
cmpsl
add
inc
scas
les
bound
sahf
das
mov
add
pcmpgtw
push
dec
int3
outsb
dec
cmc
mov
in
mov
pop
cld
or
adc
pop
mov
xchg
push
mov
jle
jp
int
push
sbb
sbb
mov
out
je
xchg
xchg
push
ljmp
push
jge
repnz
mov
pusha
xchg
jae
loopne
scas
cmpsl
orl
sub
dec
jmp
jbe
fisubrs
subb
dec
adc
jb
pop
cwtl
xchg
xor
fwait
push
fidivrl
xchg
ljmp
dec
pop
shrl
test
pop
xchg
mov
pop
xor
adc
sbb
cmp
mov
sub
adc
iret
mov
je
outsb
mov
nop
xchg
sbb
inc
sbb
adc
ret
out
xor
and
aas
ja
out
lods
lahf
mov
and
out
mov
mov
inc
dec
mov
add
sbb
push
push
jnp
inc
clc
or
add
clc
mov
push
inc
ret
sti
dec
pop
mov
subb
mov
inc
scas
jnp
mov
test
and
jae
fs
xor
call
and
jae
jno
enter
fwait
cmp
fs
xor
jb
xchg
cs
inc
mov
jg
sbb
or
push
dec
sbb
sbb
cmp
cmp
fdivr
sarl
add
imul
cmpb
cmp
add
sbb
jns
mov
leave
ja
loope
xchg
daa
push
inc
cmp
add
dec
or
push
cwtl
jns
sub
adc
xchg
pop
xlat
mov
call
sub
cs
popf
out
ss
inc
scas
xor
shll
xlat
add
jb
test
rcrl
xchg
mov
push
mov
and
dec
or
int3
jnp
es
je
sbb
xor
bound
push
push
loop
aas
out
cmp
push
lods
mov
movl
and
lret
adcb
cld
adc
jmp
call
jle
mov
pop
pop
push
fcoml
jge
arpl
xchg
aad
push
sub
imul
repz
mov
jnp
xchg
cmp
jbe
int
xor
scas
lods
les
cmpsb
push
repz
js
idivl
pop
in
lcall
cmpsl
and
mov
imul
mov
xchg
mov
stos
add
mov
sub
pop
push
sub
push
jae
fwait
call
add
pop
rcrl
jg
or
imul
dec
ret
gs
jg
popl
shlb
pop
fistpll
loope
dec
negb
roll
insb
daa
pop
pushf
xor
add
adc
and
clc
sub
ficoms
add
aad
push
mov
pop
inc
or
ror
or
outsb
sub
mov
and
inc
dec
mov
dec
adc
aaa
mov
repnz
xchg
in
pushf
lock
lds
cmp
lods
or
sbb
cmp
les
ret
rcl
mov
out
mov
inc
mov
jge
inc
jle
fwait
fs
push
add
mov
dec
stc
mov
dec
jno
lds
leave
or
lcall
jne
lahf
je
inc
test
mov
xchg
inc
inc
or
dec
lret
xchg
push
add
mov
pop
sub
clc
out
daa
dec
push
mov
shll
outsb
lds
pop
lea
ret
stos
pop
lahf
int3
aam
ret
ljmp
mov
jecxz
jns
arpl
mov
and
jge
and
pop
jmp
jns
dec
std
jo
mov
mov
ljmp
mov
sahf
out
adc
filds
scas
and
leave
out
test
mov
xchg
cmpsl
insb
add
jmp
jo
mov
mov
cli
dec
mov
xor
hlt
fs
adcl
pushf
dec
push
jbe
xor
lods
push
xchg
fidivrs
xor
lret
xchg
or
xchg
xor
addr16
push
shrl
jecxz
sub
sar
mov
dec
ja
jbe
xor
out
pop
pslld
shlb
ret
and
pop
and
xchg
or
and
insb
xor
int
push
cmp
in
insb
shl
ja
push
lock
mov
setge
cmp
stos
dec
lods
jbe
icebp
inc
test
fwait
movsl
mov
cli
xchg
adc
in
imul
inc
iret
sub
xchg
xorl
xchg
fwait
push
imul
mov
jp
cli
add
bound
xor
add
pop
rorl
cli
imul
sbb
les
jae
xchg
push
mov
mulb
pop
cmp
xlat
outsb
rorl
pop
jno
jbe
out
sbb
das
pop
adc
jno
jns
out
movsb
rclb
dec
lock
into
adcb
cwtl
mov
rcll
lahf
cmp
pop
xchg
ja
lea
add
fiadds
out
and
loope
lock
xor
lahf
push
lret
lods
push
jae
jne
leave
cmpsb
lods
mov
xchg
bound
dec
pop
cmc
pop
xchg
add
xor
and
xor
or
in
inc
mov
pop
push
int
mov
push
sbb
adc
sub
xor
cmp
lcall
pushf
mov
push
mov
adc
pop
icebp
cli
das
adc
xchg
xchg
mov
mov
mov
fcompl
push
fcmovnu
xor
iret
jle
loop
xchg
lods
mov
push
insb
xchg
fldenv
aad
rcr
arpl
mov
int3
dec
pop
stos
mov
ljmp
pop
jno
es
mov
or
mov
push
sar
adc
fistl
mov
or
dec
push
aad
sbb
leave
jo
inc
fisubrs
push
sbb
xlat
inc
fcmovnu
arpl
mov
imul
sub
sbb
js
push
lcall
roll
jbe
mov
mov
popf
dec
cmp
pop
stos
fwait
mull
mov
adc
aad
shrb
cwtl
push
xlat
leave
or
leave
shlb
sub
mov
stos
out
push
sub
add
lock
je
sbb
push
loope
fsubs
cli
adc
pop
sarb
jae
cltd
mov
mov
iret
add
xchg
orl
std
arpl
addr16
aaa
cs
push
pop
mov
arpl
jmp
mov
pop
je
dec
icebp
pop
push
mov
std
push
pusha
sub
add
sub
jbe
mov
sub
adc
add
loopne
pop
and
or
test
outsl
jno
insl
fstpt
in
dec
jne
lock
adc
xchg
or
push
rorl
stc
and
mov
sbb
and
into
pop
es
dec
mov
pop
es
not
dec
push
fnstcw
jns
cmp
pop
xchg
addr16
lahf
sbb
or
cmpl
inc
xchg
lret
pop
push
lock
stos
jmp
jnp
mov
xchg
mov
dec
insl
divl
jo
pop
enter
mov
cs
push
mov
lods
cmp
mov
jno
pop
aad
jmp
in
repnz
add
mov
or
jg
mov
xlat
add
ds
sub
bound
nop
xor
insb
repnz
test
xchg
mov
movsb
lea
scas
jle
lock
mov
dec
cli
shlb
mov
mov
mov
pop
mov
scas
sub
xor
sub
enter
pop
movsb
aaa
jb
pop
jecxz
cs
lds
ja
push
dec
repnz
adc
insb
sahf
test
mul
push
jg
lret
mov
jmp
cld
in
xor
cmp
sub
repnz
and
pushf
gs
add
fcomps
je
scas
or
mov
call
push
push
lret
outsb
mov
pushl
push
dec
nop
dec
xchg
fs
mov
sbb
and
xchg
fnstenv
pop
or
sti
outsl
or
insl
bt
inc
js
cmp
sub
stos
adc
in
out
dec
and
lret
in
cld
jnp
sbb
xor
mov
popa
xchg
orb
jbe
add
mov
mov
les
push
pop
int3
xor
js
mulb
add
scas
stc
jg
daa
scas
stc
mov
mov
call
je
and
loope
enter
into
push
imul
int3
push
and
jle
lods
push
and
ret
imul
cmp
pop
inc
adc
and
fisubs
fwait
adc
xchg
je
fs
inc
iret
push
inc
adc
rolb
pusha
lret
popa
loope
push
or
mov
push
mov
mov
stos
xor
ror
xor
or
dec
enterw
push
pusha
or
inc
push
cli
pop
repz
xchg
das
out
dec
adc
pop
ljmp
add
in
mov
mov
insb
push
stos
rcrb
div
ss
data16
in
xchg
jne
xchg
pop
sub
ss
jne
and
out
xchg
fldcw
test
sbb
mov
sbb
pop
mov
sbb
movsl
fdivrs
pop
cmp
sub
int
lea
subl
adc
cmpsl
jbe
jo
inc
loopne
mov
xor
xor
notl
mov
push
sub
pusha
ja
cmpsl
jb
and
sub
fiadds
cwtl
sbb
shrb
pop
sub
rcll
sub
jp
sbb
fisttps
mov
pop
cwtl
and
shrb
aam
fidivrl
jl
out
jl
std
xor
xchg
cmpsl
jb
push
cmp
stc
cmp
into
bound
or
mov
outsl
mov
sub
cs
bound
int
push
dec
rorb
in
cli
test
push
cmp
sar
loop
ficoml
cld
stos
pushf
mov
or
adc
inc
clc
cmp
aam
lret
daa
sbb
pop
ret
gs
mov
lods
out
sub
ljmp
mov
stc
pop
leave
mov
push
add
sbb
std
mov
xor
lods
push
push
sbb
add
outsl
xchg
insb
inc
xor
inc
add
pop
mov
mov
lret
dec
mov
int
and
scas
rcr
jae
or
out
push
mov
xor
push
outsb
in
jne
push
cs
jge
xor
insb
in
add
add
lods
dec
inc
jmp
push
movzwl
cltd
adc
sbb
mov
arpl
dec
mov
scas
mov
add
push
xchg
cld
pop
aam
mov
xchg
jne
jns
sub
test
notl
stos
aas
cmp
inc
cmpsb
push
lods
ret
pop
dec
jne
xorl
and
dec
movsl
mov
jecxz
fcoml
mov
push
xchg
pusha
daa
out
push
cld
inc
pop
ret
adc
or
xchg
cmp
mov
xchg
mov
jno
std
sbb
ljmp
xor
jns
fistpl
pop
sub
test
adc
ret
xchg
and
push
ds
push
mov
mov
push
and
loop
pop
dec
pop
outsb
pop
sub
stos
mov
dec
push
inc
mov
push
and
add
and
popf
out
jbe
cli
popa
cltd
flds
les
sub
inc
test
sub
jno
popf
movl
cmp
aas
pop
icebp
insl
or
jns
dec
mov
push
subb
popf
or
sbb
push
jne
inc
cmp
sub
or
ret
sub
jecxz
fistps
mov
ds
movsl
xor
xlat
mov
ja
pop
lret
push
leave
adcb
dec
movsl
lods
jo
add
out
hlt
pop
cmp
js
movsl
jnp
dec
enter
xchg
outsb
pop
fsubs
inc
sbb
aad
in
lods
loop
xor
das
icebp
call
adc
andl
test
xor
loop
gs
pop
jb
or
call
enter
push
sbb
pop
or
push
mov
std
call
inc
sarb
arpl
inc
push
and
adc
dec
andl
inc
cmp
push
cmp
jb
fdivr
cmc
mov
dec
xchg
dec
pop
mov
scas
xor
icebp
iret
xchg
jns
mov
clc
fs
add
movsl
jmp
xor
sahf
sub
sbbb
addr16
xchg
ds
lock
mov
cwtl
mov
inc
cmp
and
test
insl
das
roll
ret
adcl
sbb
adc
cmp
fidivs
add
fiadds
sbbl
lods
xchg
add
shll
mov
test
mov
xlat
mov
push
out
call
push
push
mov
push
dec
js
add
popa
and
fsubs
imul
fwait
movsb
jae
cmp
mov
dec
push
add
repnz
xchg
clc
cltd
push
xor
js
mov
js
add
dec
cmpsb
shrb
cmp
sti
mov
xor
dec
cltd
daa
jg
cwtl
je
jmp
sbb
jmp
dec
movsl
dec
add
mov
lahf
mov
mov
iret
call
and
xchg
cli
cmovae
out
gs
push
leave
mov
push
or
inc
lahf
lock
js
xor
push
fdivp
mov
push
nop
dec
pop
xlat
lock
inc
or
cmp
xchg
lea
jle
mov
xchg
mov
cwtl
popf
mov
jle
xor
pusha
enter
mov
test
adc
mov
stc
xor
lods
mov
shrb
cmpl
mov
xchg
hlt
cmp
pushf
sahf
mov
mov
inc
in
inc
cmp
sub
push
sahf
dec
fdivr
stc
das
push
in
or
mov
push
ficompl
xchg
inc
adc
leave
ss
inc
decb
call
sbb
sbb
data16
xchg
arpl
or
shl
xchg
jp
bnd
das
jle
xor
sbb
jne
insb
pop
cmp
mov
pop
out
and
outsl
mov
out
lea
rclb
daa
sar
jae
lahf
mov
ja
js
cmc
cmpsb
mov
jb
negl
or
inc
fcoms
aad
dec
mov
mull
dec
gs
mov
xor
ljmp
jnp
lock
addr16
jb
loopne
rorb
imul
xchg
xor
loope
add
jmp
sbb
sbb
jge
adc
mov
test
add
insl
add
pop
xchg
jmp
pushf
sahf
jb
jle
daa
inc
imul
ss
loope
mov
sub
jnp
mov
sahf
lretw
push
lret
xchg
dec
in
loop
data16
loop
push
ret
dec
or
cs
dec
mov
lods
adc
fisubrs
dec
mov
mov
and
and
xor
sbb
inc
enter
sub
jnp
xor
and
outsl
push
mov
dec
xchg
mov
out
mov
lods
int3
sahf
pop
pop
popf
cmpsl
shrl
mov
les
sub
jp
mov
sahf
out
add
adc
or
push
cwtl
loopne
push
sub
mov
push
adc
sub
aam
xchg
pop
jb
cmc
mov
mov
and
pop
cli
xchg
mov
mov
test
std
dec
push
mov
inc
repnz
mov
arpl
arpl
cmpsl
sub
call
mov
mov
mov
sub
lock
ljmp
sub
insb
ret
inc
or
test
inc
push
flds
dec
jmp
dec
dec
jge
cmpsb
ja
mov
fmul
stc
pop
fnstcw
add
cltd
fs
push
maxps
es
mov
out
das
ja
pusha
fildll
test
imul
inc
fwait
xor
push
insb
lods
jle
loope
fstl
fdivl
btc
pop
xchg
enter
sbb
ss
dec
outsb
out
cltd
cld
lds
add
sbb
mov
inc
mov
mov
and
pop
add
out
dec
pop
add
mov
sbb
mov
and
mov
push
out
xchg
test
sub
roll
sub
and
loope
pop
lret
sahf
pusha
pop
sahf
sahf
xor
popa
mov
sbb
and
jns
push
mov
xor
fnstcw
xor
and
or
stos
push
sbb
out
out
ret
pop
mov
dec
scas
js
pop
jo
pusha
or
out
mov
adc
or
cmpsl
es
outsl
dec
jg
add
and
dec
in
inc
cmp
hlt
sti
and
or
mov
push
sbb
or
jmp
dec
hlt
pop
inc
adc
dec
sbb
repz
fnstenv
push
sbb
mov
push
pusha
adc
dec
mov
adc
inc
fidivrl
sub
ss
int3
xor
ja
sub
bound
or
xchg
add
mov
push
ds
mov
xor
inc
adc
mov
push
push
fnstsw
add
mov
dec
rcrl
mov
mov
int
insb
enter
jecxz
mov
inc
cwtl
cld
jg
inc
mov
jo
cmp
scas
insb
mov
push
add
aad
push
addr16
out
movsl
test
test
push
and
push
std
icebp
repnz
inc
jecxz
jmp
push
xor
int
mov
shll
out
xchg
add
jb
dec
ret
mov
in
clc
je
xor
fwait
arpl
or
add
push
ja
sbb
sahf
in
outsl
iret
sub
out
or
xor
adc
sbb
adc
sub
movsb
shrb
movsb
adc
dec
aam
mov
rclb
mov
jecxz
pop
lock
xlat
daa
inc
and
pop
sbb
xchg
mov
aam
push
and
stos
xorb
movsb
inc
data16
es
sbb
pop
arpl
sbb
dec
jge
or
mov
pop
outsw
out
cmp
outsl
ret
test
aam
or
imul
psrlq
pop
add
cmpb
rcll
into
dec
xchg
xchg
sbb
in
scas
sbb
dec
clc
icebp
aas
push
xchg
repnz
loope
jmp
xlat
jg
repz
loop
loop
sbb
pop
addr16
adc
jmp
sbb
inc
sub
sub
in
mov
lock
movsl
and
in
das
in
and
in
fnstcw
push
dec
mov
stos
into
push
ret
hlt
xchg
add
mov
cmp
jge
icebp
rcll
mov
cmp
xor
data16
cmp
ret
out
push
bound
je
aad
das
inc
scas
shlb
jg
fidivrl
sbb
jg
cs
stos
pop
mov
lret
cs
push
test
mov
insb
dec
aas
repz
ss
cmpsb
jo
cwtl
lea
sub
fldcw
sbb
and
xchg
sbb
arpl
dec
out
fpatan
push
xor
fwait
ret
or
push
test
or
cmp
pop
inc
xchg
xor
and
clc
jno
lret
jae
dec
ja
dec
shrb
movb
stos
and
stc
into
mov
sbb
xchg
push
push
inc
inc
xlat
and
xchg
jne
inc
jl
inc
scas
test
fimull
cmc
fs
adc
test
pop
push
in
lods
stos
in
insb
add
jbe
pop
addr16
outsb
push
xor
xchg
sbb
xchg
test
mov
adc
add
sbb
bound
pop
mov
xchg
xchg
inc
bound
iret
jge
mov
adc
xchg
ret
popa
cmp
sub
mov
sbb
cmp
sbb
xchg
gs
int3
ret
push
movsl
fdivs
shlb
or
repnz
fimuls
imul
leave
addl
mov
mov
dec
clc
imul
mov
push
enter
scas
out
inc
pop
roll
add
jae
imul
aam
test
inc
cmpsl
inc
jmp
and
push
pusha
loop
ret
icebp
lret
mov
fdivp
iret
xor
shrl
pop
in
movsb
out
addr16
es
daa
ficomps
xchg
das
mov
cmc
repnz
xor
shll
call
idivb
fstpt
cmp
dec
dec
xchg
dec
cmp
xor
jg
mov
pop
dec
xchg
adc
bound
cmpsb
inc
addr16
xchg
mov
sbb
dec
sbb
cmc
test
scas
adc
fcmovnu
sbb
mov
es
push
mov
push
shll
lcall
fldl
subl
jg
in
add
sbbl
and
jae
or
orb
not
imul
dec
dec
mov
test
dec
lods
jmp
and
je
adc
mov
cltd
cmpsb
mov
push
inc
or
dec
enter
xchg
adc
jmp
mov
xchg
iret
jmp
pushf
das
lcall
push
push
cmpsb
cmp
mov
inc
out
xor
cmp
cmp
adc
stos
ret
lock
sub
pop
inc
mov
sbb
out
sub
sub
add
mov
cmp
jmp
push
std
adc
sub
pop
ret
call
mov
sbbl
gs
enter
sbb
dec
mov
movl
and
enter
in
lret
sti
cmp
in
rorb
in
scas
and
pop
xchg
ljmp
ret
push
sub
or
dec
jl
jmp
dec
sub
mov
addr16
dec
xlat
das
mov
fs
int3
sub
dec
jb
loop
cmpsl
in
int3
mov
or
add
mov
rclb
add
loope
fldenv
jl
ss
mov
mov
pop
jmp
lods
add
jge
mov
cs
mov
add
add
inc
push
fdivl
sbb
add
adc
xor
es
rolb
shrl
and
add
jmp
sbb
mov
sbb
outsl
scas
push
int
sub
mov
pop
nop
sbb
iret
adc
es
mov
sub
or
imul
popa
lret
cmp
push
mov
mov
jl
fldcw
mov
data16
mov
lds
jnp
call
inc
divb
arpl
mov
leave
push
xchg
int3
xchg
ljmp
push
inc
rclb
cmp
cs
and
aam
pop
and
push
iret
dec
inc
fs
out
mov
add
mov
push
or
mov
xorl
ret
rcl
mov
inc
mov
dec
sarl
mov
and
mov
out
int
fcoms
das
test
in
movsb
bound
xlat
cmc
lret
aam
mov
xor
pop
cmp
fs
movsl
mov
sbb
leave
xlat
or
out
lds
shlb
bound
das
cwtl
js
sbb
adc
lret
es
or
xchg
ja
out
add
aaa
dec
lret
pop
repnz
pusha
leave
lock
pop
jmp
mov
cmp
das
pop
cmpl
hlt
mov
add
sub
pushf
aas
cmp
ja
xchg
aaa
iret
pop
xchg
inc
in
cli
cs
jo
lcall
xchg
std
jb
adc
push
insb
lret
push
in
jae
mov
jecxz
jb
into
pushf
mov
in
fmull
sub
xchg
pop
fisttpl
cltd
push
push
push
adcb
xchg
popa
sub
int3
sub
fmuls
jns
xor
pop
dec
bound
pop
scas
inc
fwait
xchg
test
aam
movsb
cmp
push
iret
or
enter
or
xor
push
pop
movsb
lods
lahf
push
fwait
sub
aaa
mov
inc
xchg
rcrb
sbb
out
loope
push
std
aas
mov
std
pop
cmp
xchg
and
mov
imul
daa
je
adc
sbb
repnz
into
fldl
ja
cwtl
pop
mov
sahf
int
iret
ljmp
push
and
xchg
pop
or
lret
mov
adcl
mov
ret
jnp
lods
incb
pop
cwtl
cmp
je
movsl
outsb
scas
or
shlb
into
ficomps
aaa
cmp
in
fiaddl
xchg
jno
ret
push
and
cmpsl
out
xor
pop
in
mov
sbb
rclb
xor
mov
stc
mov
cli
test
shrl
add
jne
jne
cmp
out
or
mov
stos
rcll
rcrl
jmp
insl
lret
pop
sbb
in
jnp
adc
leave
sarb
add
in
mov
xor
repz
sahf
and
test
add
es
fdivrs
ficomps
nop
imul
mov
and
cmp
ficoms
xchg
imul
inc
adc
mov
add
xor
cmp
test
pusha
xchg
lods
xchg
fnsave
sbb
dec
dec
ret
push
scas
adc
lret
mov
pop
sub
test
and
sub
jge
cltd
inc
enter
inc
cld
xchg
pop
cmp
sub
enter
mov
cmpsl
sbb
in
mov
call
aam
cmp
stos
fstpl
push
sub
clc
hlt
loope
bound
test
or
inc
shlb
comiss
sbb
xchg
movsl
out
imul
jge
xor
or
scas
cwtl
sub
ljmp
bound
pop
int3
clc
jp
scas
loop
mov
sar
fcomps
inc
cmp
or
xor
mov
pop
or
sub
push
xchg
inc
scas
mov
loop
jbe
xchg
mov
xchg
mov
fiadds
mov
lcall
call
sarl
lock
call
fs
inc
cmp
sbb
cmp
mov
mov
popa
dec
cmp
sub
lods
popa
mov
lods
and
sbb
cmp
push
pop
andb
lcall
mov
or
push
lods
faddl
dec
jmp
adc
ss
jne
fadds
push
cmpb
cli
mov
pop
pop
push
or
pop
adc
jecxz
cwtl
shl
mov
mov
sbb
jp
sbb
add
fiaddl
sub
cmp
push
cmc
sub
mov
push
inc
mov
das
jne
adc
add
sbb
or
mov
out
mov
adc
das
sub
sahf
dec
loopne
lods
out
jbe
pop
ds
cli
sahf
popa
inc
cs
mov
push
mov
adc
ss
stos
inc
lahf
daa
rcrl
lahf
out
imul
sbb
mov
push
xchg
ret
imul
fs
push
loop
push
add
hlt
ljmp
mov
ret
cmc
mov
dec
sub
dec
or
dec
divb
push
pop
mov
ud0
in
data16
pop
push
arpl
popa
stos
cmp
fmuls
shrb
aad
dec
hlt
icebp
mov
cmpsl
popa
scas
sub
add
and
nop
mov
mov
mov
push
xchg
mov
clc
or
fwait
xorl
inc
enter
lea
inc
mov
lahf
push
xor
lock
pushf
xlat
xor
xchg
repz
xchg
int
jecxz
jle
insb
mov
icebp
in
sbb
mov
out
in
daa
jb
push
pop
imul
push
and
shrl
js
lods
rorl
cmp
repnz
nop
aam
or
pusha
dec
lods
lret
shlb
paddd
int3
lcall
adc
push
andl
movsl
lods
sbb
shll
jbe
dec
jp
or
xchg
mov
push
popa
shrb
inc
cmpsb
inc
pusha
dec
in
pop
ret
fadds
xchg
div
insb
mov
mov
jne
or
jmp
mov
ret
in
sar
enter
sub
mov
pop
push
mov
xchg
insb
mov
pop
adc
aam
jb
jle
jno,pt
pop
sub
outsb
jae
out
mov
insb
test
inc
idivl
andb
ret
das
orl
lret
mov
sahf
xlat
mov
add
or
cmp
in
sbbl
add
mov
ja
aaa
sbb
add
cmpsb
inc
pushf
sbb
stc
mov
jo
fnstsw
int
sahf
jmp
test
ljmp
jmp
xor
mov
lret
in
mov
popl
push
push
call
add
and
cld
stos
outsb
xchg
jmp
xchg
pop
sbbl
sbb
outsb
sbbb
bound
cmc
xchg
inc
std
pop
xchg
push
clc
movsb
fbld
aam
mov
jnp
sbb
insb
ja
mov
mov
ljmp
xor
xchg
cmc
mov
arpl
out
sub
cmpsb
mov
mov
sub
xchg
mov
mov
cli
repz
cmpsb
lods
push
and
adc
scas
outsb
cmpsl
jno
inc
jbe
into
dec
mov
repz
push
inc
or
xchg
xlat
push
fisttpl
leave
cmpsb
push
mov
xlat
scas
xchg
repnz
jmp
gs
rcrb
xlat
in
imul
push
and
fisttpl
fsubs
adc
mov
xor
repz
addr16
pop
or
inc
or
jns
sub
fistpl
push
repz
push
out
fcomps
stos
ud0
add
cmp
jne
fsub
xchg
jge
sub
out
fnsave
cmp
or
les
jmp
cmp
push
push
fsubs
and
ret
jo
in
lods
or
out
aam
sub
inc
mov
mov
fidivrs
pop
inc
inc
ret
xchg
pop
and
nop
test
xor
dec
jmp
aas
mov
jbe
jnp
dec
test
pop
lcall
loopne
push
loop
fwait
adc
js
push
int
fists
std
das
xor
ja
adc
mov
xor
pop
cwtl
push
sahf
shlb
fs
and
inc
test
shll
fwait
cmp
jle
mov
xchg
pop
pop
add
popf
shlb
mov
inc
push
addb
mov
iret
stc
sbb
mov
outsb
add
imul
cmp
sbb
add
xor
adc
adc
xchg
popa
mov
in
add
stos
insb
push
gs
xchg
scas
or
pusha
fldl2e
add
mov
or
hlt
aam
add
lods
in
push
mov
stc
ss
and
aad
lahf
pop
and
sbb
cmpsb
xchg
xchg
inc
lret
imul
sbb
xchg
loope
mov
lret
mov
add
repz
jge
fistpl
dec
popf
inc
js
lods
mov
out
pop
into
or
xchg
push
enter
inc
cmp
cltd
ss
mov
sbb
popf
sarb
aam
xor
cs
addr16
push
aam
inc
fidivs
push
pop
mov
sub
push
sub
out
jno
lcall
push
test
call
jnp
mov
pop
das
adc
or
mov
fs
repz
movsb
dec
xchg
rolb
fisubl
fisttps
jne
fstpl
pop
lea
mov
sbb
add
push
sbb
add
and
sub
fdivl
or
sbb
xor
and
jl
mov
jg
xor
pop
lock
pop
aas
or
addb
and
mov
in
inc
push
dec
insl
push
push
in
pusha
jne
add
pop
cltd
inc
call
pop
pop
icebp
outsb
out
enter
cmp
dec
out
out
enter
dec
cli
minps
cs
jno
pop
cld
xchg
out
mov
sarb
mov
adc
ds
cmp
rcll
out
fcoml
push
sti
imul
rcrb
aas
jmp
mov
sbbb
in
loop
mov
adc
stos
gs
cmpsb
jge
outsl
xchg
out
adc
ror
or
repnz
sarl
std
pop
int3
xchg
stos
cmp
sub
adc
jno
sub
inc
push
das
dec
movl
xor
popa
cmp
adc
hlt
jl
dec
repnz
nop
and
add
fwait
inc
imul
dec
or
add
add
push
addr16
jb
ret
lds
pusha
push
push
or
push
fld
sub
add
mov
inc
mov
shrl
add
lds
pop
xchg
fldcw
sarl
xor
sub
ficompl
inc
or
fwait
and
sbbb
push
hlt
fwait
lret
ret
stos
mull
das
lds
xor
dec
cmp
sti
lahf
cli
mov
add
push
mov
push
mov
daa
imul
mov
sub
jbe
push
mov
rorb
jmp
dec
pop
and
mov
int3
mov
xchg
sti
sarl
jno
inc
pushf
clc
jg
dec
mov
lahf
aaa
cltd
out
pop
jae
aad
fsubr
xor
mov
jne
lret
stos
mov
lret
pop
sub
loopne
pop
lret
mov
imul
outsb
insb
mov
icebp
pop
ss
jno
mov
mov
xchg
push
inc
xlat
data16
test
cwtl
pop
lods
xorb
mov
repnz
push
mov
xchg
shrb
jnp
loopne
arpl
lcall
adcl
and
mov
push
adcb
mov
insb
dec
inc
xor
xlat
sahf
mov
aas
jnp
dec
sti
or
pop
add
es
push
sahf
aas
call
mov
inc
scas
mov
das
sub
jg
or
or
push
xor
movsb
mov
jge
out
xlat
out
mov
fwait
adc
push
or
daa
xchg
imulb
pop
dec
ss
xchg
mov
sub
xor
or
arpl
in
or
popa
cs
in
aas
xchg
adc
inc
add
pop
xorl
pushf
mov
call
cwtl
fldt
sub
bound
adc
fstps
mov
das
cmp
imul
sub
insl
inc
mov
pop
add
flds
sbb
add
ja
xor
push
cmp
pop
xchg
cld
icebp
mov
mov
or
push
push
enter
arpl
scas
sub
outsl
mov
dec
mov
arpl
cltd
pop
jle
mov
sbb
xchg
add
fwait
hlt
mov
sub
or
sbb
mov
mov
into
xchg
sub
push
inc
mov
enter
ds
fwait
mov
cmp
adc
sbb
cmpsb
fidivl
and
adc
in
dec
leave
xchg
and
jmp
mov
in
sub
mov
pop
push
mov
jno
fisubl
pop
xor
mov
leave
jbe
lods
add
std
cli
sbb
cld
jge
movsb
jl
sub
dec
insb
xchg
movsb
divl
loop
jb
rorb
dec
inc
pop
pop
pcmpgtd
idivl
inc
in
mov
test
stos
lret
or
in
or
mov
push
push
mov
pop
push
sbbb
sbb
jo
xchg
inc
hlt
mov
xchg
xchg
mov
aas
mov
pop
in
mov
les
jge
bound
loopne
movsl
cli
rolb
mov
sub
adc
incl
jmp
or
inc
adc
or
push
inc
cmp
xor
fstl
shl
adc
cmp
jnp
and
cmpsb
push
xchg
jae
dec
add
xor
lcall
das
nop
inc
pop
jge
jmp
lcall
cwtl
pop
adc
mov
jns
test
add
inc
out
sub
aad
out
jo
ret
ljmp
adc
xor
ja
les
or
cld
and
stos
cltd
fisttpll
cs
test
ljmp
inc
js
filds
sahf
jae
push
mov
push
cmc
popa
scas
cmpsb
pop
imul
or
inc
mov
add
fdiv
cmp
test
lcall
dec
push
or
les
popa
inc
mov
sbb
pop
dec
andl
adc
insb
movsb
push
xor
les
aam
add
adc
nop
sbb
mov
adc
test
mov
mov
dec
outsl
incl
mov
daa
sbb
and
add
ret
ret
es
xchg
sub
aaa
dec
or
mov
loope
idivl
cli
pop
sbb
xor
test
jg
jo
mov
mov
je
adc
push
fstp
sbb
andb
pop
push
pop
lcall
fadd
pop
data16
popf
xchg
in
xchg
xchg
lods
xchg
sub
repz
mov
lret
push
out
and
inc
xor
xchg
adc
iret
lods
lret
ss
scas
pop
push
fisttpl
adc
popa
dec
adc
sahf
adc
pop
push
mov
mov
xor
daa
aam
pop
xor
and
inc
push
xchg
loop
dec
jg
add
mov
ds
dec
pushf
cmp
inc
lods
fistpl
loop
sahf
add
clc
dec
pop
divl
jb
repz
dec
sti
stc
xor
fsubrp
cmpsb
pop
xchg
scas
add
pop
cwtl
mov
push
insl
test
mov
push
fs
cmp
cmpsb
ss
int3
mov
inc
mov
filds
pop
pop
ret
mov
and
test
sti
jns
int3
cld
jg
inc
mov
xorl
mov
inc
xchg
mov
or
push
cmpsl
add
out
push
xchg
mov
arpl
push
pop
int
rorl
push
pop
xor
jnp
aaa
inc
fcmovne
aad
jo
leave
jge
xchg
out
sbbl
xchg
pop
mov
mov
les
dec
cltd
sarl
sbb
out
int3
aaa
or
repz
fdiv
subb
mul
movsl
adc
dec
inc
xchg
cmpb
cmp
jb
int3
sub
loopne
das
xchg
push
and
lret
add
cmp
dec
test
mov
pusha
mov
pushf
xchg
adcl
movhps
push
pushf
sub
insl
add
dec
pop
out
mov
hlt
mov
mov
sar
and
cmp
pushl
and
pop
mov
jp
jl
rcrb
ss
sbb
scas
fdivl
loope
sub
mov
mov
mov
mov
lods
scas
aaa
sub
mov
jge
addr16
sub
mov
lds
out
rclb
enter
and
sub
test
addb
pop
dec
inc
mov
sti
cmpsb
mov
or
aad
test
movl
and
jne
mov
gs
push
lock
les
icebp
add
rolb
jmp
add
dec
pop
outsl
mov
enter
js
scas
arpl
push
sbb
sub
inc
pop
ret
mov
in
mov
loope
xlat
inc
loope
into
gs
repnz
shll
pop
sub
loop
ror
std
rorb
dec
in
mov
lret
imul
xor
das
mov
aaa
xor
fwait
loop
lcall
adc
in
les
pop
xchg
out
ret
jmp
pop
lock
lock
dec
stc
shlb
dec
adc
mov
dec
sub
or
std
dec
dec
jno
stos
adc
imul
jl
out
popa
lcall
pop
dec
sub
or
mov
out
adc
clc
outsb
mov
int3
push
repnz
lea
inc
adc
repnz
lea
dec
imul
xor
das
inc
test
iret
ucomiss
and
sbb
jno
inc
sbb
mov
or
push
repz
xchg
std
xchg
xor
pop
and
sbb
leave
add
cld
scas
sbb
int
clc
in
add
xor
in
ds
mov
xor
dec
push
mov
lods
ret
or
pop
in
sub
lds
out
fisubrl
sti
xor
push
in
sti
jo
pop
adc
add
aaa
dec
lds
xor
dec
lods
mov
lret
push
push
inc
mov
lods
mov
and
push
jmp
cmp
mov
mov
cld
push
jge
mov
xchg
out
cmp
fisubrs
imull
addb
mov
mov
test
sti
xor
fiadds
xlat
sub
pop
fldcw
lods
pop
adc
loop
out
aam
mov
lret
sti
imul
mov
mov
insl
aad
dec
inc
sbb
sub
xor
jle
jmp
idiv
xchg
push
fdivs
cmpsl
inc
test
divw
mov
popa
add
repz
and
outsb
mov
movsl
por
add
pusha
rol
int
cld
and
sahf
mov
and
ror
push
mov
stos
xchg
pop
orl
imull
pop
inc
inc
mov
addl
nop
xor
cmp
xor
lods
sbb
xor
fsubr
nop
mov
daa
mov
aad
dec
or
insb
jle
out
aaa
mov
cltd
dec
aam
jmp
pop
push
imul
push
pop
fistps
add
or
jne
out
xchg
xchg
addb
stos
push
push
pop
pop
lcall
fcmovnb
aaa
ja
sub
jmp
jnp
mov
stc
in
xor
cwtl
enter
in
imul
add
stos
mov
or
or
unpcklps
pop
xchg
pop
add
sbb
add
jecxz
dec
sbb
nopl
movsb
mov
mov
pushf
adc
mov
fwait
mov
pop
pop
inc
or
movsb
imul
sub
mov
adc
pop
sub
in
out
inc
push
cmpsl
mov
jmp
mov
cli
adc
in
sbbl
cltd
mov
in
sahf
or
mull
aaa
call
jmp
jmp
push
push
mov
movsl
sub
andl
into
inc
out
pop
lahf
hlt
add
in
ffreep
add
es
dec
jo
xchg
adc
idivl
xor
mov
jl
xlat
hlt
pop
pop
in
push
ret
jmp
popf
cmpsl
xchg
fmull
loope
lcall
scas
inc
popa
cmpb
xor
push
test
dec
and
lret
cmp
push
mov
sti
cmp
cmpsb
add
pop
cltd
jp
jge
out
ficoms
mov
or
clc
addl
cmp
fnstenv
adc
movsb
insb
push
jecxz
jno
cmp
mov
test
jmp
imul
mov
sub
pop
sub
adc
push
frstor
mov
pop
cwtl
aaa
shlb
sarb
adc
pop
test
pop
push
push
pop
inc
cltd
mov
sbb
cwtl
test
leave
cmp
pop
ja
aad
out
or
mov
lds
or
loope
jmp
push
lea
push
and
dec
xchg
repnz
imul
pushf
mov
pop
loop
jo
ss
test
jae
inc
mov
pop
idivb
test
das
sub
mov
iret
frstor
push
adc
pusha
sbb
std
jl
mov
fcoml
arpl
icebp
xor
leave
das
in
mov
cld
test
mov
push
stos
aaa
int3
sub
or
dec
sub
dec
pop
pop
push
mov
adc
sbb
sbb
push
ret
cmc
sub
push
sarb
je
sub
sbbb
push
xchg
stc
mov
mov
in
push
addl
or
test
out
push
mov
ret
out
push
and
jle
cmp
outsl
push
gs
lds
inc
lret
aam
pop
loop
sub
js
or
ror
imul
lods
xchg
loope
ret
add
out
mov
hlt
jle
add
inc
fildll
jmp
dec
jle
lcall
push
das
xor
mov
and
repz
mov
and
inc
pop
push
push
jecxz
cmpsl
mov
mov
aas
mov
cmc
daa
or
dec
shll
loope
cld
mov
jno
push
push
outsb
adc
adc
mov
aam
inc
mov
pop
cmpsl
cmp
and
push
jae
jg
sbbb
adc
leave
paddusb
dec
mov
or
cmpb
jno
xor
mov
mov
sahf
js
xor
sub
pusha
pop
out
add
outsb
cmp
and
ficompl
and
dec
xchg
add
fcmovne
sub
cmp
mov
jns
dec
loope
sbb
sub
jp
mov
jb
cwtl
jmp
mov
xor
xorl
cmp
das
adc
in
push
xor
stc
sub
mov
xchg
lret
pop
push
jnp
push
xor
or
lahf
jae
call
lahf
xchg
adc
xor
mov
mov
mov
or
xchg
mov
dec
xorl
add
fldt
fstl
ds
add
and
call
cmpl
aam
jl
ds
scas
notl
shll
mulb
pop
adc
push
test
cmp
lods
gs
je
shufps
lret
adc
scas
add
sub
xchg
lds
xchg
imull
adc
add
jns
or
nop
and
or
or
ja
lods
leave
fdivl
mov
fildll
inc
push
push
test
push
lds
sarb
pop
and
push
pop
dec
fisttpl
icebp
inc
incl
push
cmpsl
sbb
cmp
movsl
in
icebp
insb
jns
pop
mov
mov
adc
adc
mov
or
call
ficompl
sahf
fs
adc
dec
fwait
cld
pusha
sub
adc
dec
push
fadds
negb
pop
sahf
repnz
pop
mov
and
loop
aaa
jb
popf
pop
pop
push
cld
aas
imul
dec
xchg
js
mov
cmp
dec
scas
mov
pop
cmp
xorl
jnp
leave
xor
mov
idiv
jbe
add
ja
and
jbe
out
rcr
frstor
sahf
push
inc
mov
dec
pop
test
pop
or
push
push
and
or
addr16
stos
stos
test
push
add
mov
and
mov
mov
mov
xchg
add
xchg
addr16
outsb
xor
loopne
les
jne
xchg
dec
test
add
mov
notb
bound
fbstp
lock
pop
lds
into
call
adc
test
out
adc
mov
sub
notb
in
jnp
subb
jae
mov
aas
test
and
out
insl
inc
fsts
cs
lods
cmovne
fsincos
sub
pop
add
adc
cbtw
jp
inc
stos
mov
xchg
popf
pop
ret
outsl
sar
push
mov
addr16
or
popf
popa
sub
sub
mov
inc
xchg
addb
dec
in
add
mov
mov
das
cltd
repz
aas
pop
icebp
outsb
ffree
aad
out
stos
sti
cwtl
fcomi
movsb
jne
dec
not
lock
mov
xor
add
lcall
sbb
cmp
cli
dec
cli
push
cs
aad
insb
imul
add
jae
inc
sub
or
pop
fcoms
out
dec
mov
call
push
incb
bound
pop
fcmovnbe
pop
mov
cmp
movsb
cwtl
into
add
sub
rol
out
inc
dec
test
ffreep
jns
push
inc
adc
fiaddl
fistps
punpckhdq
jo
cltd
push
add
mov
testl
pfcmpeq
or
cmovo
lahf
or
mov
xchg
cltd
dec
mov
clc
inc
insb
andb
scas
mov
push
les
sub
and
cmp
add
loope
dec
adc
sbb
xchg
call
gs
cmc
sbb
mov
call
xor
inc
mov
enter
les
mov
insl
pusha
dec
dec
sub
cmp
mov
jae
jnp
and
movsb
shll
push
push
mov
in
dec
jae
mov
movsb
mov
mov
dec
shlb
roll
mov
test
push
mov
cmp
fwait
out
cld
jbe
repnz
jecxz
jg
ror
xchg
mov
xor
pop
mov
into
aad
repnz
arpl
pop
cmp
jmp
xchg
clc
vcvtps2pd
add
pop
lea
mov
xchg
inc
fstps
push
das
pushf
movsb
cmp
push
testb
jg
gs
das
and
ljmp
xchg
pop
mov
pop
lea
lret
pop
pop
jnp
jp
jge
lcall
mov
sbb
pop
push
insb
outsb
fwait
xor
xor
dec
adc
shl
mov
jae
pop
adc
lret
cmpsb
add
push
add
push
icebp
sar
xchg
repz
loop
inc
xchg
push
adc
jl
mov
mov
cmp
jnp
jno
push
repz
cli
xchg
jge
lcall
shl
jno
cld
cwtl
test
rorb
je
pop
mov
sti
pop
or
or
fdivrl
sbb
stc
out
cltd
xchg
mov
mov
lock
test
xor
insb
xchg
lock
dec
push
in
push
jae
div
add
stos
jecxz
lods
cmp
fstpl
es
test
out
push
aas
arpl
pop
cmpsb
rorl
fsts
push
add
test
lods
mov
loop
arpl
out
ja
test
popa
sub
push
fucomp
lcall
jle
dec
les
popa
imul
scas
das
outsl
add
cwtl
in
dec
cmp
push
inc
xchg
push
sbbl
lcall
add
mov
jp
imul
dec
add
sbb
rol
pop
mov
in
jns
add
add
and
aaa
fdivr
or
or
jns
imul
stos
fnsave
and
mov
and
sti
mov
popa
xchg
mov
inc
push
push
test
mov
and
adc
ds
or
loopne
insl
mov
sbb
cmpsl
inc
push
psadbw
adc
mov
int3
xor
push
dec
outsb
daa
rclb
fimuls
loopne
xchg
jecxz
pop
daa
jp
idiv
in
mov
mov
aas
adc
in
js
lahf
or
mov
frstor
ds
imul
dec
inc
adc
loop
dec
pop
loopne
sub
sbb
dec
aas
and
int
add
imul
shl
imull
mov
dec
cmp
or
sub
mov
cmpsb
daa
test
imul
mov
xor
add
loop
push
jl
sbb
push
lock
sub
add
aas
mov
adc
jne
jb
clc
cmp
sbb
cmp
dec
aaa
rcl
mov
sahf
add
mov
insb
imul
int
xor
sti
sbbb
mov
stc
push
sarl
mov
mov
mov
sahf
lods
xor
mov
sar
addr16
mov
mov
movd
adc
and
test
fdivrs
clc
mov
cltd
std
dec
imul
mov
dec
stos
mov
jno
adc
sbb
movsb
aad
pop
xchg
sub
aam
lods
fidivl
leave
or
lods
lea
aam
xchg
push
jno
pop
inc
cmp
popa
push
scas
xor
ss
xlat
fadd
jne
cld
push
xchg
or
lods
jg
out
xchg
push
mov
mov
sbb
ljmp
scas
adc
insl
scas
push
mov
fisttps
sub
sbb
mov
xor
or
mov
lret
mov
pushf
adc
hlt
aam
das
xchg
test
daa
pop
aad
cmc
adc
and
cmp
sbb
jecxz
mov
cmc
add
sub
loopne
icebp
sub
clc
out
xchg
pop
jae
lea
cld
inc
mov
mov
lahf
dec
pop
pushf
mov
mov
fsubr
add
std
or
rorb
loope
in
cmpsb
shlb
mov
iret
outsb
rolb
or
addr16
mov
push
mov
lret
into
adc
loopne
mov
fxtract
bound
fstpt
roll
inc
xorb
mov
hlt
outsl
jmp
imul
xlat
scas
add
push
fdiv
xchg
add
mov
cmp
dec
pop
loop
pop
sti
sbb
mov
cli
ja
sub
pusha
popa
xor
xchg
add
mov
repnz
dec
test
push
and
or
sub
arpl
pop
aas
lods
and
cmp
js
stos
enter
inc
push
dec
xor
loop
daa
push
dec
lret
iret
int3
out
xor
xor
or
mov
repz
mov
test
pop
idivb
cltd
xor
in
and
imul
pusha
mov
fidivrl
popa
mov
push
mov
int3
mov
nop
shlb
jb
add
push
cmpsb
pushf
rclb
xchg
lret
and
popf
or
icebp
push
sbb
cltd
mov
cld
repnz
pop
mov
clc
sub
stos
int
out
cmp
icebp
fldcw
xchg
adc
cltd
push
iret
adc
mov
clc
sub
test
push
ja
aam
sahf
pop
lahf
inc
mov
ds
mov
sahf
lds
ds
pop
mov
adc
andb
out
dec
pop
mov
xor
push
dec
sub
cmpsb
jns
xor
scas
ds
mov
into
popa
sbb
sub
push
push
mov
pushf
dec
sub
mov
jp
ja
insl
jle
add
mov
lea
jae
jbe
mov
mov
add
mov
xchg
sar
test
or
data16
mov
xchg
jecxz
sub
push
mov
jl,pt
mov
add
arpl
lods
pop
les
jecxz
cmpl
test
mov
push
dec
bound
insb
jno
adc
into
cmp
pusha
dec
sbb
es
mov
sub
sahf
rcrb
dec
mov
push
das
sbb
shlb
jae
jnp
ret
xor
xlat
roll
jns
push
add
ja
leave
push
adc
lds
jae
filds
mov
mov
add
or
pop
dec
lock
test
int
inc
mov
filds
cwtl
fdivl
test
cmc
mov
dec
dec
xor
fs
push
mov
sarl
sub
repz
add
outsl
fildl
ds
jbe
cld
pusha
xchg
lds
in
xchg
je
mov
pop
xlat
inc
out
icebp
jge
xor
pop
jp
mov
pushf
add
adc
daa
pop
mov
f2xm1
call
cmpsb
lods
gs
add
repnz
dec
loopne
popa
mov
sbb
jnp
add
sbb
stos
inc
xor
inc
cs
test
cmp
sub
inc
popf
xchg
imul
sub
lds
mov
push
test
std
mov
sbb
mov
jns
dec
pop
and
stc
xchg
ss
into
dec
mov
mov
iret
jl
mov
and
stos
int3
maxps
scas
and
xchg
push
mov
fimull
add
testb
movsb
mov
push
jmp
nop
mov
lds
adc
pop
in
cmp
mov
pop
out
pop
sub
sub
pop
cltd
sbb
shlb
pushf
jp
inc
paddq
in
call
mov
xor
xor
mov
nop
add
aaa
dec
sahf
pop
aas
and
mov
push
test
cmpsl
mov
dec
lcall
sbb
repz
pop
push
adc
jne
inc
enter
or
mov
jp
scas
pusha
cmpsb
or
pop
imul
int3
add
push
sbb
mov
pop
push
push
mov
fadds
mov
sbb
xchg
pusha
push
xchg
js
mov
or
push
xor
push
addr16
push
sub
mov
sub
mov
cmp
ds
inc
movsl
pop
dec
xor
fists
scas
into
loopne
out
pop
out
dec
fdivrl
jb
fcompl
xor
jmp
ret
inc
cmpsb
mov
test
push
adc
inc
fwait
in
push
pop
mov
jl
hlt
jge
sub
xor
roll
xor
xor
inc
and
xchg
rorb
jle
mov
jo
insl
cmp
fisubrs
inc
push
aad
xchg
enter
and
out
and
aad
sbb
sub
notl
adc
inc
cmp
dec
mov
setg
ljmp
pop
or
mov
dec
shll
shll
cld
mov
dec
addl
ds
hlt
xlat
sub
sahf
pop
scas
jle
popa
sub
adc
mov
cmp
mov
pop
mov
or
dec
mov
mov
les
pusha
sub
jecxz
dec
int3
add
jb
cmc
add
sar
fnstsw
mov
aam
sub
fnsetpm(287
mov
mov
call
xchg
mov
scas
into
inc
push
xor
aam
mov
xor
daa
mov
daa
inc
andl
xor
xor
dec
sbb
rorl
fbld
roll
test
aad
or
mov
mov
mov
lods
push
out
aas
in
mov
lds
xchg
inc
push
mov
mov
dec
sub
mov
lret
sti
stos
or
or
ficoms
aam
ja
das
int
push
rclb
jg
dec
or
adc
or
rolb
pop
inc
jne
sbb
xchg
pop
dec
or
dec
or
aaa
in
bound
ret
inc
add
out
scas
and
rorl
mov
xor
das
fistps
fadd
xor
or
push
mov
data16
pop
scas
push
rep
push
pushf
mov
mov
pop
jp
lret
int
gs
iret
adc
mov
filds
push
iret
dec
lret
das
lahf
aaa
push
pop
test
sbb
add
popa
adc
push
in
bound
dec
mov
pop
adc
jne
stos
jo
jno
xor
adc
xchg
in
jne
sbb
pop
outsl
mov
cmpl
loopne
dec
add
add
lods
cli
stc
fisttpl
fisttps
out
idiv
sahf
xchg
adc
out
pop
loope
movsl
push
jge
fcompl
loop
adcb
fldt
sbb
fcompl
pop
lods
pop
cltd
icebp
pushf
rolb
cmp
mov
mov
xlat
pop
scas
dec
insl
ja
repz
mov
push
mov
movsl
adc
les
fwait
push
ret
jb
js
cmp
adc
push
out
and
insl
outsl
mov
mov
outsb
xchg
inc
outsl
dec
jecxz
xchg
xor
mov
insb
notl
sarl
push
fimull
xchg
mov
daa
jne
pushw
or
sahf
xchg
cmp
gs
imul
or
fildll
ret
mov
stos
shlb
ret
mul
sbb
dec
sbb
out
or
je
adc
cmpb
adc
mov
xor
rorb
inc
movsl
mov
push
fldl
jo
je
js
mov
mov
sub
sbb
adc
fnstsw
shlb
pop
gs
jl
jmp
and
pop
xchg
mov
mov
jno
out
push
xor
push
and
inc
mov
adc
fsubrs
jg
pusha
mov
cmc
push
out
mov
inc
push
stos
push
ret
pop
jge
sbb
push
pop
xchg
or
sub
aad
inc
cld
push
shll
scas
test
stc
xor
mov
rcll
pop
pop
test
nop
das
addr16
cwtl
mov
fwait
pop
aaa
loop
sub
push
leave
addl
mov
add
inc
inc
mov
inc
pop
call
and
rorb
data16
add
movsb
mov
in
mov
xor
sub
xchg
loope
jmp
or
fsts
xor
repz
in
adc
test
pusha
mov
dec
push
pushf
or
xchg
mov
cmpsb
xchg
push
fnstsw
movsl
in
or
push
sub
iret
pop
xchg
mov
adc
sbb
jnp
hlt
push
xor
cmpsl
mov
mov
mov
mov
scas
adc
or
push
mov
mov
stos
cmc
scas
or
add
and
aaa
sub
test
lock
cmpb
ds
out
movd
and
push
jge
cmc
sbb
add
jo
movsl
pop
jmp
call
and
mov
sub
cmp
pop
sbb
outsl
jmp
and
fstl
adc
outsb
and
jle
cmp
push
or
lods
sbb
orb
filds
adc
andb
add
mov
jae
loope
mov
xchg
xor
push
call
push
bnd
add
cmpsl
std
xor
adc
sub
bound
subb
xchg
outsl
push
ljmp
call
sbb
insb
andl
stos
fwait
jnp
mov
jno
bound
inc
data16
test
nop
push
fnstsw
xchg
adc
cmp
xchg
push
fcomps
out
sub
add
push
insl
jns
outsb
mov
jno
dec
mov
push
and
adc
sub
in
jno
sub
int
cmpb
sub
pop
popf
sub
ret
mov
lret
hlt
movsb
dec
into
iret
stos
dec
test
mov
outsb
push
and
stos
pop
jge
cmpsb
vpackssdw
test
shll
cmpsb
and
push
and
icebp
pop
inc
popf
mov
pop
pop
sbb
jle
in
push
mov
ret
add
xchg
aad
imul
out
imul
sub
adc
push
jne
push
stos
sbb
and
stos
pop
pop
mov
cmc
lds
cld
stos
sbb
mov
xor
pop
jle
mov
mov
fs
sub
loop
je
jge
adc
lahf
cmp
pushf
pop
sub
push
incb
inc
iret
cmp
xchg
nop
mov
or
xor
fisubs
icebp
test
dec
jl
mov
stos
sbb
shrb
sti
sarb
test
lods
cld
jl
cld
sub
and
movsb
push
fstpl
iret
inc
push
sbb
add
cmpsb
xchg
lock
xor
dec
outsl
cmpsl
or
xchg
jo
mov
ret
roll
xor
pop
mov
xchg
sti
subl
xor
mov
cmc
js
scas
add
dec
push
cmp
bound
dec
leave
lea
rorl
pusha
and
adc
rolb
iret
insb
jecxz
je
add
stc
add
mov
leave
lods
in
daa
xor
mov
add
jo
inc
push
lds
sbb
inc
int3
add
sbb
in
xchg
mov
call
push
arpl
shl
ret
out
adc
and
cmp
jge
rdmsr
aas
push
in
lret
jg
inc
jb
sarl
push
enter
xchg
lcall
mov
pop
mov
repnz
cmp
mov
add
or
jge
in
pop
inc
lods
or
sarb
mov
ljmp
shr
stos
xchg
push
mov
test
or
cmp
aas
idiv
subl
sub
lret
mov
into
cwtl
push
push
ljmp
pop
cmp
inc
js
adc
call
xor
mov
scas
sub
je
mov
cmp
aad
sbb
inc
test
pcmpeqd
pusha
mov
stos
lea
and
lds
sti
or
sub
adc
fwait
outsb
lock
jle
sbb
pop
xchg
pusha
lea
inc
shll
inc
addr16
and
cmp
push
outsb
mov
iret
js
aad
push
inc
dec
int3
lcall
pop
lea
push
in
xchg
push
jecxz
popf
inc
clc
aaa
shll
cli
and
mov
shll
pushf
or
mov
in
xor
inc
add
cmp
dec
xchg
pop
xchg
in
dec
lcall
fstpt
push
mov
ljmp
xor
sub
mov
fs
cmc
cmpsl
mov
cmp
ficoms
pop
ret
repz
jb
xchg
xchg
jno
pushl
push
sub
sub
lods
orl
cmc
mov
jmp
dec
scas
push
sti
xchg
mov
inc
sub
pop
dec
stos
dec
mov
push
aad
pushf
xchg
mov
repz
out
or
sbb
enter
call
ds
mov
xchg
popl
push
mov
mov
push
cmp
fsubrs
or
les
into
mov
gs
and
popf
inc
push
dec
and
and
pop
into
jns
mov
push
dec
cmpsb
mov
pushf
movsl
in
int
adcb
pop
loope
je
ds
mov
ret
cwtl
dec
mov
les
subb
mov
cmp
sbb
out
cmp
push
out
xchg
pop
insl
mull
mov
cli
cwtl
add
or
aam
in
mov
adc
sbb
and
and
mov
mov
push
xor
loop
in
and
mov
mov
arpl
sbb
sub
bnd
jb
xor
jno
jne
les
sub
mov
adc
xor
addl
push
or
jecxz
in
push
add
mov
mov
cmp
pop
loop
xor
movsl
dec
sub
xor
insl
or
sbb
xchg
cwtl
jb
xor
clc
and
xor
cmp
sbb
sbb
adc
and
and
jmp
out
dec
dec
pop
adc
outsb
sbb
pop
adc
mov
and
incl
mov
sub
mov
data16
inc
xchg
cwtl
xor
jns
cli
popf
sbb
pop
pop
pop
push
movsl
mov
mov
pop
jno
aad
lret
std
loope
fs
fdivrs
clc
jg
xchg
in
stos
jle
sub
shlb
and
ljmp
sbb
in
repnz
idiv
in
xchg
dec
inc
sarl
jo
pop
push
enter
pop
mov
fsubs
jns
mov
out
cmp
cmpsb
pop
mov
jae
adc
movsl
fstpt
mov
test
icebp
call
cmp
ret
jp
cmp
and
jno
pop
scas
inc
cmp
scas
adc
imul
nop
shlb
fsubrs
enter
sub
pop
pop
or
pop
pop
add
pop
jmp
xor
sub
or
loopne
incl
jb
adc
sbb
cmp
adcl
shrl
adc
mov
mov
scas
fidivrl
mov
dec
std
cld
inc
out
lds
aad
xchg
lahf
sub
xchg
in
stos
decb
sub
xchg
mov
addr16
addr16
mov
icebp
jecxz
xor
dec
xor
sub
push
and
fimuls
cld
jl
mov
stc
sahf
or
outsb
xchg
sub
repnz
mov
cwtl
fistpl
stc
sbb
pusha
and
scas
outsl
fmull
push
imul
mov
movsl
adc
lret
cmpsb
jmp
mov
test
cmp
in
mov
inc
jge
dec
arpl
and
lahf
jecxz
aaa
cmc
inc
inc
mov
adcb
nopl
sarl
jb
pop
lahf
cmp
ss
jmp
cld
xor
jno
cltd
cwtl
mov
sbb
jo
das
repz
shlb
test
loop
clc
sbb
xor
insb
push
scas
jmp
dec
adc
int3
in
lahf
sub
pop
imull
sub
cwtl
xchg
ljmp
repnz
movb
pop
dec
xor
adc
push
jmp
in
subb
or
daa
mov
icebp
or
xchg
mov
push
dec
inc
mov
jnp
jne
out
das
stos
lods
dec
int3
hlt
mov
movsl
sbb
jecxz
add
xlat
insb
test
jne
sahf
pop
mov
sbb
xchg
fdivrs
cmp
and
fs
int
int
sub
vmovdqu
inc
scas
mov
fldt
pushf
sbb
in
sub
dec
pusha
mov
push
sub
push
insb
jae
cmpsl
xor
lods
sahf
stos
mov
imul
sub
scas
mov
addr16
add
mov
test
pop
mov
cmc
push
pop
pop
mov
cmpsl
adc
mov
and
ds
sub
hlt
push
call
sub
push
outsb
add
jns
lahf
sub
pushf
frstor
movsb
mov
sbb
pushf
cmp
cld
leave
sub
out
xor
sti
andnps
repnz
clc
mov
arpl
test
mov
mov
dec
testl
shll
jp
aam
outsl
pusha
rcll
hlt
sub
xchg
cli
mov
xor
subl
mov
lahf
es
or
mov
data16
jns
das
xlat
jne
cmp
sbb
xorb
jecxz
and
mov
dec
mov
ljmp
outsl
mov
test
stc
mov
cmpb
inc
jae
mov
loop
daa
inc
mov
jmp
pop
add
jne
xchg
mov
loope
or
ret
movsb
inc
push
push
push
aam
in
mov
jmp
jecxz
jge
mov
dec
in
jge
divl
sub
int
xor
mov
jbe
outsb
add
xchg
mov
rorl
ret
mov
mov
sti
xor
or
mov
push
daa
sbb
ja
jp
inc
inc
add
aas
cmc
stos
push
popa
fldcw
jmp
push
fstpt
imul
inc
sub
leave
lret
pop
and
insl
arpl
pop
sub
call
ss
jmp
out
jp
jbe
js
mov
test
push
add
hlt
xchg
out
inc
mov
mov
xor
movsl
cmp
lret
sahf
cwtl
mov
je
aam
stos
ja
push
fadd
aam
mov
xchg
gs
mov
gs
pop
jbe
xor
push
cli
cli
cmp
fiadds
imul
xchg
popa
mov
in
and
cmp
or
mov
shll
dec
je
or
ljmp
test
lret
push
test
cmp
mov
mov
int3
cmp
push
sbb
add
mov
pop
iret
clc
sbb
loop
mov
push
outsl
sub
adc
inc
lea
inc
pop
xor
arpl
andl
and
rorl
add
or
dec
sbb
ds
mov
shll
mov
inc
sbb
inc
cltd
inc
into
xchg
int3
push
fdiv
dec
aad
or
fistpl
pop
xor
daa
push
scas
or
imull
xor
bound
popa
mov
xchg
jp
push
sub
adc
loop
cmc
hlt
shlb
ret
sarb
xchg
dec
push
pop
call
jg
jl
or
or
push
cmp
and
test
mov
sub
adc
mov
inc
ffreep
cmc
iret
dec
test
dec
shlb
push
addr16
or
mov
xchg
stos
lret
mov
mov
and
lods
mov
dec
pop
mov
xchg
sub
add
dec
imul
add
stos
in
scas
clc
pop
xchg
icebp
and
imul
jb
into
adc
jge
mov
cmp
movsb
xchg
pop
pop
stc
dec
inc
xchg
adc
clc
inc
inc
jecxz
push
sbb
jle
pop
fstl
gs
sbb
jecxz
iret
mov
xchg
or
mov
mull
sub
xor
fmulp
imul
pop
mov
push
fdivrs
pop
fdivl
arpl
xlat
lods
in
mov
rorb
xor
fs
insb
nop
push
adc
sahf
and
out
cmp
dec
movb
nop
mov
or
adc
dec
cmpsl
adc
adc
mov
daa
push
ds
xlat
mov
mov
jmp
xchg
daa
jl
es
inc
cmpsb
das
je
sbb
insl
cmp
fisubrl
and
inc
popa
push
test
popa
cmpsl
movsl
outsl
fisubrs
ja
in
jbe
dec
cmp
cwtl
adc
inc
mov
push
mov
out
fwait
cld
outsl
shrb
adc
rcl
pop
popf
push
pop
and
sahf
pop
test
cmpsb
shl
mov
pop
mov
and
and
cmp
xchg
push
push
xchg
loope
jl
push
add
dec
notb
shlb
lock
adc
pushf
add
jmp
cwtd
push
and
fcmovnbe
sbb
jno
inc
lock
jbe
mov
push
adc
xchg
mov
push
test
out
sbb
sbb
add
cmp
adc
mov
insl
lahf
dec
inc
push
in
or
or
loope
mov
sub
clc
inc
xor
lahf
int
sahf
lds
bnd
in
push
cmp
pop
mov
cmp
or
xorb
pop
sbb
test
jnp
mov
cmpsb
jo
dec
mov
jmp
incb
stc
pop
jb
int
sub
dec
wrmsr
jo
and
mov
mov
ficoml
int3
push
lcall
fnsave
cmc
push
push
jge
ds
dec
or
loopne
fistpll
jp
xchg
mov
xchg
lea
sub
or
push
add
sbb
jo
je
sub
inc
add
jo
fimull
mov
ficoml
dec
ret
and
push
push
xor
add
jle
or
xor
mov
testl
add
xor
lcall
std
dec
out
pop
xor
enter
movsb
mull
jmp
sbb
into
xchg
push
dec
shlb
jns
loopne
bound
adc
test
pop
orb
out
lret
test
mov
imull
loope
cmp
pop
dec
xlat
fldt
lret
jnp
lret
lahf
scas
mov
xor
inc
rcll
fcoml
fdivrl
sti
sub
or
mov
scas
and
sbb
push
jle
rcl
mov
fstpt
dec
dec
mov
arpl
inc
cmp
roll
xchg
fldt
mov
xchg
mov
scas
in
push
jne
rcr
mov
test
bswap
mov
int
rolb
insl
scas
cmp
push
loop
loop
in
pop
dec
movsl
mov
xchg
int
js
std
cmp
jnp
xchg
dec
mov
movsb
pop
xchg
icebp
fsts
cmp
push
dec
and
cmp
adc
push
lock
iret
push
insl
jnp
ja
xor
shrb
cs
pop
dec
shlb
mov
scas
lock
jbe
jp
aam
scas
adc
push
mov
leave
negb
sub
cmpsl
pop
push
arpl
sahf
adc
cmp
or
jle
jo
out
enter
fst
pop
out
mov
ss
int3
pushf
push
add
and
call
cwtl
dec
pushf
shl
insb
in
je
dec
ficomps
fcomps
dec
frstor
shrb
je
sarl
repz
lahf
and
aaa
lea
int
sbb
push
adc
stos
dec
dec
jne
bnd
xchg
rorl
mov
or
pop
xor
pop
push
dec
repnz
sbb
aas
mov
das
daa
out
or
jmp
ds
xor
cs
js
repz
stos
insb
xor
push
test
cmp
rcl
xchg
imul
es
mov
movsb
lods
mov
adc
push
aad
fs
xchg
or
lret
stc
jns
inc
les
xor
getsec
push
mov
sub
out
fdivl
cmp
or
test
addr16
shr
cmp
xchg
and
gs
add
test
aaa
cwtl
jmp
popf
inc
and
lods
mov
in
mov
xchg
jo
decl
pusha
pop
and
daa
jno
sub
ds
rorl
mov
pop
call
outsb
mov
dec
xchg
mov
mov
enter
jo
dec
inc
sbb
mov
xchg
push
sub
mov
movsl
rcr
outsl
dec
int3
pop
outsb
inc
cmp
sub
jne
sbb
push
xchg
pop
jecxz
jo
out
push
in
adc
adc
fcoml
mov
int
or
cmp
xor
xchg
dec
insb
inc
inc
aad
sbb
pop
sub
icebp
jo
scas
jp
push
loopne,pn
jb
push
stos
orl
add
in
sarl
mov
sub
cmp
xchg
loopne
or
insb
les
jbe
cmc
sub
jae
push
push
or
stc
test
xchg
adc
pushf
pop
and
out
dec
and
or
les
push
jmp
lcall
jl
or
mov
xchg
ds
pcmpgtd
outsb
cmc
je
pop
sub
clc
lahf
leave
jl
arpl
or
in
xor
inc
mov
inc
cmp
loop
cmp
int3
cli
pop
add
xor
prefetchw
or
pop
jae
negl
mov
data16
push
pop
cwtl
cli
cmpsl
insl
dec
xchg
adc
mov
xor
cmp
mov
push
inc
sub
jbe
sub
loop
lahf
sub
pop
rcrl
inc
mov
leave
sarb
push
add
mov
pop
mov
jae
mov
out
jg
lahf
push
add
in
xchg
je
enter
sarl
sbb
aas
cli
jmp
inc
pop
and
dec
mov
xlat
pop
and
cli
xchg
add
jg
inc
sahf
adc
call
in
xchg
pop
ror
jg
and
push
jno
in
dec
mov
jmp
jb
fcomi
aad
aam
cmp
into
dec
sbb
jbe
and
in
or
sub
aaa
faddl
pop
stc
rcl
insl
mov
leave
adc
stos
in
fidivrs
pushf
mov
sbb
or
sub
pop
mov
sarl
mov
cmp
insb
jb
inc
movsl
jo
out
test
rorl
cli
cltd
arpl
adc
fbld
mov
dec
in
add
fwait
mov
cmp
mov
pusha
mov
xchg
jns
pop
popa
movsl
lcall
call
pop
sub
loope
fs
xor
jnp
inc
and
sub
or
sub
cmpsb
notl
mov
shlb
jmp
and
inc
mov
and
mov
fldlg2
frstor
shl
mov
push
mov
cmp
sbb
cs
sbb
lods
fidivs
daa
lcall
cmpsl
add
mov
test
mov
inc
out
outsb
das
mov
cmp
mov
movsb
imul
jp
add
sbb
addb
jne
mov
dec
mov
cwtl
xchg
mov
push
cmp
mov
mov
rcll
add
int
jae
dec
lcall
pop
cmp
lea
in
pushf
dec
mov
sub
addl
inc
ss
sub
pushf
aad
adc
je
into
cltd
add
pop
or
sbb
pusha
fwait
jg
or
rclb
fadds
rcll
idiv
mov
mov
sbb
mov
mov
pushf
or
loope
fstpl
shlb
xchg
mov
lahf
jg
mov
and
xchg
loopne
add
lret
mov
std
shll
add
addr16
jo
aas
rorb
lret
xchg
pop
into
and
rorb
jnp
xchg
push
pop
insb
inc
int
mov
roll
sahf
gs
cmp
outsb
cli
movsl
pop
mov
xor
stos
sbb
xchg
or
jecxz
cld
dec
mov
cmc
mov
jbe
sub
sbb
mov
mov
out
test
inc
ljmp
mov
std
sub
add
sbb
js
jge
mov
int
mov
stos
cld
lret
cmp
dec
jo
jnp
testb
jge
lcall
ljmp
lahf
loope
jno
push
push
jmp
mov
mov
push
jge
or
mov
ds
jno
mov
and
sbb
push
scas
insl
in
daa
mov
or
pop
cmp
jmp
xor
data16
cmp
fnstsw
or
test
xorb
fwait
jmp
xor
sub
mov
cmp
mov
pop
push
sub
movsb
jle
mov
subl
jp
pop
in
and
bound
xor
iret
insl
mov
popf
or
sub
pop
popa
mov
stos
adc
cltd
inc
mov
inc
daa
shlb
jb
out
push
in
jg
ss
sahf
xchg
xchg
dec
adc
jmp
mov
pop
jecxz
dec
xor
sbb
sub
out
mov
call
jbe
xchg
lret
divl
lcall
and
sti
cmpsb
dec
cmp
sub
mov
data16
mov
insl
inc
std
push
jno
xor
shl
sarl
add
jmp
push
pop
mov
test
sti
scas
inc
pop
fs
xchg
jl
sbbl
sbb
jge
stos
ljmp
mov
test
add
xor
sub
cwtl
fildl
test
lea
inc
jmp
pop
add
adc
scas
and
cmp
add
repnz
or
jo
imul
and
pop
into
push
dec
aas
dec
out
xchg
mov
xchg
jno
or
adc
sarb
cmp
test
popa
adc
sub
jno
hlt
sub
xchg
repnz
dec
imul
jge
mov
xor
mov
jns
dec
add
cmp
dec
pop
dec
imul
es
jg
cmp
xor
movb
or
xor
pop
pop
cmp
cld
add
mov
inc
push
inc
mov
fs
out
in
idivl
sbb
sbbl
sbb
xlat
pop
cltd
dec
out
scas
je
mov
jo
jne
jne
pushf
cmp
insb
push
inc
xchg
pop
sub
dec
or
std
fsubl
mov
lods
sbb
stos
lds
pusha
loop
punpckhwd
gs
fndisi(8087
lahf
ret
out
ds
pop
lea
mov
inc
movsl
pop
jmp
sti
add
test
int
mov
mov
push
sbb
and
repnz
jl
jne
out
push
jnp
mov
bound
divb
dec
xchg
mov
test
out
repnz
sti
dec
mov
push
xchg
pushf
adc
scas
in
fsubl
push
or
xor
and
jecxz
movsl
inc
dec
loop
popl
gs
jg
mov
add
mov
pop
adc
xchg
icebp
and
leave
pop
in
jns
or
stos
ret
push
push
std
xlat
xchg
add
in
ret
cs
or
aas
mov
nop
sub
fsubs
sti
leave
sahf
dec
xor
jae
cmp
mov
jle
and
loopne
gs
fcomps
dec
mov
stc
or
loopne
fs
or
jg
pop
comiss
xchg
in
fnsave
or
inc
insl
mov
or
push
shr
neg
jnp
scas
ljmp
mov
aas
jne
data16
cmpsl
mov
shll
daa
cmp
pop
jl
sub
int3
adc
into
int3
adc
push
mov
add
cli
mov
pop
addl
fwait
cmp
ja
sti
dec
aam
mov
scas
cmp
cmp
lods
pop
xchg
aad
mov
in
push
shlb
cmp
jno
inc
sbb
movb
stos
sbb
push
pop
rclb
or
stc
mov
and
addr16
addr16
xorl
cmp
xchg
mov
xchg
push
aaa
daa
test
jns
sahf
ss
icebp
push
and
mov
call
pop
sub
sbb
icebp
pop
mov
mov
dec
out
int
sbb
lods
vprotw
rcrb
testl
or
jl
mov
clc
nop
sti
add
sar
call
ljmp
dec
ficoml
test
lods
inc
xchg
sarb
xor
in
jbe
fnsave
and
outsl
ss
jge
lea
sbb
cmpsb
pop
sbb
xchg
add
aaa
mov
pusha
push
jae
add
mov
test
in
xchg
ds
daa
enter
dec
scas
dec
xchg
sbb
shrl
cltd
xchg
pop
jmp
xchg
add
xchg
es
inc
mov
inc
xor
ret
pop
jg
shlb
jl
shr
enter
insb
and
sbb
mov
sahf
push
rorb
mov
add
jnp
cli
push
xchg
lret
mov
mov
add
push
jne
xor
pushf
inc
incb
mov
or
mov
inc
inc
dec
pop
mov
out
mov
dec
push
dec
out
xor
fwait
xchg
into
cmpsb
lret
sti
xorl
rcrl
test
and
sti
push
shl
mov
pushf
sbb
out
lds
les
test
mov
fucomp
and
mov
aaa
imul
adc
cltd
into
into
mov
sbb
repnz
cmp
sbb
mov
bound
pusha
jne
sub
and
lahf
sbb
in
cmp
outsb
fwait
jl
mov
enter
mov
dec
or
or
cmp
mov
adcl
push
sub
ja
shrl
in
sub
fcomps
cmpsb
cli
je
xchg
into
xchg
lcall
adc
and
sub
xor
push
testl
pop
fisttpll
mov
cli
mov
adc
fidivl
push
mov
das
sub
loop
push
add
cltd
xor
pop
insb
mov
sbb
or
and
popa
mov
int
insb
xor
clc
sub
xchg
add
jbe
and
popf
int3
lods
xchg
xor
outsb
in
cmp
sub
adc
test
stos
data16
push
jnp
mov
xchg
jecxz
mov
jnp
push
or
add
jg
into
fnstsw
clc
mov
sub
popf
aaa
iret
pop
nop
rcll
mov
sbb
lock
mov
sub
enter
fs
pusha
mov
sbb
jle
push
std
lahf
lret
call
cs
add
in
ja
dec
jle
pop
insl
subb
movl
mov
loop
mov
repnz
js
xchg
add
in
adc
push
lahf
lcall
js
lods
or
or
sbbb
sti
mov
addr16
inc
adc
std
rol
sub
pop
in
mov
xchg
jg
lock
jp
mov
pop
lcall
or
insb
fistpll
xchg
repz
ja
decb
adc
ret
data16
movaps
jo
sbb
sbb
pop
fildll
mov
push
fistps
add
cmp
xchg
mov
loope
xchg
insb
xor
es
pop
rcr
jnp
cli
gs
xchg
cltd
or
push
arpl
add
iret
stc
mov
jmp
lret
xchg
insl
je
mov
addr16
adc
mov
loope
pop
push
cmpsb
sbb
jle
adc
inc
pop
iret
sub
pop
sahf
mull
sub
addl
jge
xchg
mov
popa
aaa
mov
inc
and
cmp
mov
repz
mov
addr16
sarl
jne
fmull
fidivl
mov
inc
mov
sbb
xor
sahf
sub
jecxz
leave
inc
clc
nop
pop
ficomps
mov
inc
lock
movsb
leave
rclb
scas
shlb
pop
push
jge
or
inc
xchg
in
push
jno
cli
popf
push
sti
bound
mov
enter
and
in
inc
jno
mov
sub
jp
dec
and
cmp
xor
adc
adc
jo
or
xor
mov
jl
outsb
sahf
stc
jbe
jle
lock
addl
and
pop
sbb
add
pop
jns
insb
jne
fstpt
or
jns
test
mov
sub
sbb
rolb
cmp
inc
adc
or
rorl
mov
cmp
sbb
dec
js
iret
test
push
in
mov
sbb
in
nop
out
lods
ret
test
adc
push
rorb
fnstsw
lret
mov
rcll
jl
fimull
jae
cmc
jl
and
or
enter
adc
ds
lock
out
push
out
sbb
test
lcall
add
aam
mov
insb
movsb
cmp
and
xchg
jae
fsubs
fwait
or
cli
icebp
mov
push
sbb
xchg
add
fisubrl
stos
mov
popa
push
xchg
xor
ficomps
jmp
mov
dec
xchg
sub
fwait
shrl
ficompl
push
mov
out
rcr
or
and
push
fwait
insb
and
add
ss
cmp
lock
enter
or
xlat
push
adc
cmpsl
lds
cwtl
leave
pop
sub
repz
ljmp
jecxz
or
cmpsb
adc
inc
cmpsl
test
subb
rcrl
cmpsb
push
sub
loope
push
push
daa
push
notl
sub
imul
jmp
push
repnz
jg
je
jp
or
push
mov
xlat
xchg
sbb
adc
iret
mov
push
imul
mov
mov
and
xchg
sbb
jp
mov
cmp
lahf
popa
int3
mov
js
sbb
dec
push
mov
test
jmp
inc
popa
insb
jmp
ret
fcoml
pop
add
je
ds
int
sub
je
inc
xchg
add
sbb
pusha
adc
jle
sub
xor
xor
cmp
sbb
add
mov
ljmp
movsl
andb
cmc
adc
jmp
mov
sub
cmp
out
mov
sahf
dec
dec
and
xor
pop
and
pop
cmp
fisttpll
iret
outsl
dec
repnz
mov
jnp
jae
in
enter
mov
enter
inc
jne
out
aam
inc
xchg
fnsave
aam
xor
loop
int
push
mov
sbb
jmp
rorb
ds
pop
imul
fists
in
dec
push
lods
xchg
sbb
fdivrp
jg
sti
cmp
push
jp
sub
push
ds
or
or
mov
pop
jl
and
lds
mov
xor
jecxz
pop
adc
ds
or
lock
mov
jge
mov
mov
mov
mov
inc
test
jl
sub
jbe
movsl
mov
pop
lret
push
lea
and
dec
or
or
or
pop
pushf
sbbl
push
cmpsl
lock
cmp
pusha
push
cmp
sbb
dec
cli
jle
or
leave
lds
fldt
inc
loopne
push
scas
xor
fnstsw
dec
lea
ret
jno
scas
fdivr
push
addb
xor
imulb
daa
in
mov
mov
scas
xchg
cmpsb
pop
inc
xchg
gs
xchg
sbb
into
aas
mov
repz
cmpsl
les
fwait
popa
rorb
loope
mov
das
jae
cld
sbb
cmc
in
or
xlat
out
adc
sbb
outsl
int
push
and
fdiv
rcrl
jno
test
cmp
pmuludq
sti
fwait
jbe
cmp
std
push
and
push
mov
fdivrl
mov
jbe
imul
add
sub
loopne
xchg
fdivrs
ficomps
sti
push
mov
jbe
push
xchg
lss
dec
mov
mov
add
mov
stos
ficoml
dec
or
pop
ret
movsl
inc
loope
or
jp
sub
ds
inc
pop
sub
pop
jbe
mov
mov
movsb
jno
out
outsl
shrl
icebp
cmc
cmp
cmpsl
jnp
pop
cmp
cmp
push
mov
adc
push
pop
into
ljmp
inc
sbb
push
fisttpll
shl
dec
xlat
scas
mov
nop
push
xor
xlat
in
sbb
push
fsts
inc
aam
outsl
adc
mov
out
movsb
aam
scas
andl
stc
movsb
stc
pop
mov
stc
dec
es
add
leave
enter
add
push
inc
xor
mov
cli
ss
jnp
or
insb
js
fcos
div
data16
cmc
xchg
push
mov
xor
push
fistpl
stos
movsb
pop
pop
loope
clc
outsl
mov
mov
pop
mov
cmp
mov
pop
adc
and
adc
mov
jge
inc
cld
loop
push
adc
dec
inc
inc
push
fldl
mov
insb
outsl
leave
imul
jg
out
rolb
xchg
xlat
outsl
cmc
pop
pop
add
rolb
loope
js
int3
mov
mov
movsb
pop
andl
mov
iret
movsb
push
mov
xor
pop
mov
pop
aad
xor
lods
cmp
cmc
out
dec
movsl
mov
inc
dec
in
push
mov
popf
add
push
loop
xchg
pop
psadbw
fstpl
add
leave
arpl
dec
sbb
shrl
or
test
mov
in
cmp
mov
icebp
cmc
sbb
jb
xor
xchg
and
loope
and
push
loope
in
cli
jno
ljmp
xlat
lret
cltd
fnsave
or
xor
sbb
imul
jbe
andb
xchg
mov
jl
mov
lods
ds
test
inc
pusha
sub
sbb
hlt
cmc
sbb
cs
xchg
sub
cwtl
js
xlat
mov
adc
fs
in
mov
jge
push
pop
xchg
rcrl
dec
daa
inc
dec
sub
or
jl,pt
cmp
push
pusha
xor
xchg
inc
cs
xchg
mov
push
mov
inc
push
popf
cld
adc
xchg
jmp
cs
push
stos
aam
push
adc
add
cmpsl
mov
pop
and
dec
add
jne
fdivrs
pop
and
mov
icebp
xor
scas
cmp
cmc
pusha
ja
out
push
ss
int
clc
inc
cmc
out
or
and
and
dec
jns
fbstp
stc
lods
and
jnp
xor
mov
frstor
or
lret
outsb
add
xchg
lcall
dec
rorb
xchg
mov
pop
test
or
pmovmskb
popa
push
das
jmp
aaa
xor
mov
movsl
sbb
xchg
fcmovnb
aas
scas
aam
jne
pop
ret
push
dec
xchg
cmc
lret
sbbb
push
jo
mov
ljmp
or
mov
xchg
jnp
pop
daa
lds
or
jns
and
push
mov
jl
mov
ret
sub
push
stc
add
adc
dec
sbb
fnsave
sub
cltd
imul
cwtl
add
jb
ud1
ds
imul
or
xor
sbb
sub
sahf
mov
rorl
out
xor
pop
or
divl
movsl
adc
icebp
inc
lea
pop
jp
test
mov
xor
jle
push
jle
enter
test
inc
jl
shll
out
cmp
sbb
scas
fidivrl
test
fwait
adc
pushf
loopne
mov
jg
push
loope
and
dec
test
aam
cwtl
dec
test
or
mov
cmp
sub
shlb
cmc
test
dec
mov
fsts
mov
xor
mov
mov
inc
stc
push
nop
sbb
mov
push
and
inc
dec
stos
jmp
xchg
pop
mov
push
sbb
or
subl
pop
pop
sti
push
hlt
repnz
out
cli
cltd
test
bound
xlat
jae
xchg
xor
pushf
mov
inc
mov
popa
sub
loopne
mov
cmp
insl
sbb
sbb
xor
jle
dec
enter
add
jge
adc
jle
cld
lods
jle
jo
lea
loopne
pop
icebp
sbb
mov
das
stos
jae
cmp
sbb
xlat
out
lret
jae
ljmp
hlt
inc
push
mov
out
mov
push
sbb
out
sbb
imul
or
testl
mov
fsts
push
pop
jmp
mov
pop
fsubrs
scas
leave
clc
inc
cmp
insl
out
sahf
aaa
pop
cli
mov
fs
pop
lods
sub
fnstsw
lds
push
mov
test
push
push
out
mov
or
out
inc
bound
in
inc
dec
add
leave
in
ljmp
aad
insb
cmp
repz
xchg
jbe
pop
mov
sbb
adc
sbb
std
xchg
xchg
fcomps
cs
loopne
cmp
leave
leave
mov
cmp
xchg
sbb
lret
jmp
mov
scas
or
mov
daa
adc
mov
cmp
sahf
repz
and
add
jle
xor
cmp
into
sbb
dec
add
sahf
mov
push
mov
insl
mov
cwtl
xor
inc
mov
jle
aam
add
xchg
xchg
push
mov
popf
das
idivl
jb
inc
push
adc
xor
xchg
dec
dec
mov
movsl
stos
mov
paddq
push
jne
jg
rorl
movsb
pop
lcall
or
adc
mov
xor
jnp
fwait
cmp
xor
popa
mov
lods
xor
aas
xlat
loope
into
cld
out
xchg
xor
mov
dec
push
pop
dec
sbbl
shlb
mov
jbe
xchg
cltd
shlb
idiv
xor
inc
ja
cli
pop
daa
std
faddl
xchg
and
leave
xchg
aaa
aaa
fisubrs
sub
adc
lahf
or
sbb
in
negb
push
mov
pop
bound
out
stc
lahf
dec
jmp
adc
pusha
xchg
mulb
mov
mov
iret
ss
out
inc
lds
sti
mov
fdivrp
iret
push
jp
repnz
fcoml
inc
sub
push
xchg
xor
mov
mov
imul
loop
push
aam
sbb
rclb
test
xchg
adc
mov
sbbl
hlt
cmp
rclb
add
loope
pusha
push
cmp
cmp
adc
lcall
inc
xor
jl
mov
out
jnp
add
lds
or
xor
jl
mov
push
rolb
pop
leave
mov
imul
pop
pop
test
jbe
int
push
xlat
dec
sbb
pop
and
addr16
dec
cmc
xor
push
jmp
push
popf
mov
lahf
xchg
mov
cmp
aaa
cmp
pop
jge
popa
pop
notl
push
cmp
mov
fstl
mov
gs
lods
and
cmpsl
stos
jo
scas
cmpsl
fnstcw
test
aam
jns
mov
cmpsl
adc
sbb
inc
add
mov
and
jl
add
jg
pop
pop
sbb
imul
xchg
inc
out
bndldx
das
pop
fxch
testl
push
inc
hlt
cmp
std
cmp
movsb
frstor
call
rcrb
movsl
shlb
dec
shll
dec
adc
std
mov
adc
sbb
or
mov
out
hlt
fnstenv
or
jmp
or
inc
stc
jge
sub
mov
cmp
xorb
cwtl
hlt
push
pop
jmp
inc
ljmp
mov
les
jp
ror
andb
faddp
or
ret
lods
mov
clc
or
jns
sub
adc
xor
add
jle
jmp
fldl
push
fwait
int3
jmp
in
dec
xor
loope
dec
aad
xchg
xor
inc
addr16
xchg
pusha
das
xchg
fcoml
push
stos
aam
shr
loope
and
jo
pop
into
insb
adc
hlt
movb
inc
out
addb
add
std
rcll
insl
inc
test
jle
in
dec
pop
add
stos
lahf
test
adc
jb
lea
stos
adc
jg
lret
loope
stos
roll
xlat
mov
inc
call
repz
ret
adc
scas
cmp
lret
jae
fmuls
jnp
lret
fdiv
inc
in
mov
roll
lds
mov
cltd
mov
data16
push
in
fidivs
je
in
pusha
jecxz
sahf
mov
adc
adc
add
mov
add
sbb
out
out
pop
xchg
mov
jno
push
cmp
hlt
add
scas
sbb
xchg
or
xor
fdivrs
or
pop
scas
lret
mov
loop
les
xor
adc
push
cs
mov
or
cld
mov
fimull
in
jg
daa
inc
cmc
dec
std
lcall
dec
mov
call
movsl
mov
aam
mov
call
fwait
imul
add
xchg
cld
add
xchg
clc
loope
in
loope
cmpsl
sbb
xchg
add
sub
push
das
push
repz
cmp
or
fmuls
mov
lret
mov
jnp
popf
sbb
mov
fwait
into
xchg
stc
ret
nop
movsl
add
cmpsl
pop
dec
and
leave
fimuls
or
jp
dec
mov
int
andb
mov
jp
pop
outsl
sub
outsl
pop
jns
or
adc
lret
cmp
mov
mov
imul
xlat
push
icebp
clc
aad
mov
add
dec
cmp
or
and
add
adc
and
adc
jo
imul
dec
sbb
add
xor
or
lea
ret
out
mov
pop
or
je
xor
out
outsb
pop
or
mov
scas
les
fs
jg
add
xchg
sub
loope
fldl
scas
inc
les
aaa
lock
sbb
push
fnstcw
inc
sub
dec
insl
mov
inc
subb
test
dec
iret
fwait
push
shl
outsl
push
mov
bound
xchg
inc
cmpl
out
mov
lods
jns
iret
out
sub
insb
pop
push
pop
faddp
mov
push
inc
mov
add
mov
mov
out
mov
lods
xchg
jno
xor
adc
in
xlat
out
adcl
mov
dec
sub
jl
jp
adc
add
enter
pop
or
stc
mov
fcmovnb
jl
shlb
fsubrs
mov
negb
pushf
cs
cmpsb
mov
repnz
jle
clc
std
dec
fcmovne
sti
out
push
ljmp
push
jge
in
popa
fsts
rcrb
mov
imul
call
loopne
pop
insl
push
jo
xchg
rcrl
cmp
es
adc
cmp
push
fisubrs
jne
push
xor
xchg
test
push
subb
stos
pushf
pop
inc
cmp
das
push
mov
adc
jae
je
in
outsb
sbb
inc
or
in
xchg
in
rol
pusha
jb
fidivl
jns
sahf
stos
cmpl
ret
pop
addr16
ljmp
add
push
orb
mov
sahf
cmpsb
mov
mov
mov
imul
rcl
mov
sbb
pop
addr16
xchg
add
rcl
test
in
inc
pop
loope
xor
and
hlt
roll
mov
ja
add
inc
gs
xor
xchg
pop
jbe
sahf
adc
cmp
sbb
adc
je
ss
inc
mov
rolb
sub
in
mov
stos
adc
fidivrs
enter
fcoms
xor
pop
aad
fcoml
inc
js
icebp
js
pop
and
sub
dec
mov
call
leave
int3
das
arpl
fs
pushw
mov
pop
sarl
push
mov
xor
cmpsb
into
mov
cmp
iret
add
inc
mov
dec
jg
push
mov
xor
and
jle
xor
pop
and
cmp
jbe
inc
test
push
subl
lock
push
cmp
je
push
rorl
and
mov
xor
jo
in
sti
aad
mov
sub
rcll
and
push
dec
push
fldcw
test
add
push
pop
aad
adc
mov
push
in
or
daa
add
out
and
xor
fcoms
add
hlt
push
js
aam
push
fmul
jp
ja
mov
scas
in
sbb
mov
push
shll
cmpsl
push
shrl
jg
add
mov
cmpl
xor
or
repnz
pop
push
iret
sbb
sub
pop
mov
push
inc
xchg
loopne
or
lods
jne
lods
nop
std
cmpsb
aas
pop
lcall
iret
imul
mov
pop
fwait
jae
or
add
lcall
inc
inc
and
mov
clc
mov
mov
add
pop
pushf
push
mov
cs
stos
mov
mov
sub
mov
push
stos
jo
scas
xchg
leave
pop
movsl
dec
mov
jecxz
sbb
pop
xor
ljmp
adc
pushf
and
pop
emms
or
fwait
or
mov
aam
xchg
lods
cmp
jecxz
add
mov
push
and
mov
loopne
lods
and
xlat
mov
push
push
lret
fildl
mov
loopne
mov
shlb
outsl
xor
test
lahf
js
lahf
mov
inc
jmp
mov
cli
mov
mov
mov
pop
pop
push
jnp
out
mov
push
or
cmp
test
in
addr16
sub
rcll
inc
sub
mov
xchg
call
and
shll
mov
psubd
xchg
add
scas
dec
data16
mov
cmp
or
mov
fdivp
jns
arpl
inc
xor
add
inc
in
inc
sahf
mov
cltd
enter
mov
push
movsb
mov
pusha
fnstcw
popa
je
pop
fiaddl
cmp
in
jl
dec
adc
mov
hlt
arpl
lret
out
add
cmpsb
jl
fidivrs
popa
lock
daa
loopne
jns
sub
fwait
sbb
loop
mov
adc
faddp
hlt
scas
sbb
jb
add
mov
sub
jecxz
mov
sbb
imul
push
test
lea
in
enter
pop
lods
shlb
or
push
jbe
sti
push
add
jnp
sarb
ja
gs
jecxz
andb
sbb
jp
scas
lods
aam
mov
orb
bound
pop
push
out
dec
mov
imul
push
mov
push
lods
jmp
repz
pop
testb
repnz
hlt
jns
cld
mov
jb
dec
mov
std
addr16
jo
int
rcrb
rol
sbb
idivl
mov
jp
outsb
aad
add
mov
or
mov
or
mov
mov
fcompl
jg
adc
jo
jae
mov
jle
aad
nop
int
out
fisubrl
ret
mov
daa
add
push
or
stc
mov
clc
pop
mov
sbb
mov
mov
add
leave
aas
dec
mov
jne
daa
gs
push
add
inc
mov
mov
lods
push
std
xlat
and
popa
cmp
sbb
jecxz
xlat
sub
mov
std
mov
xcrypt-ctr
cmpsl
sahf
pop
in
int3
cmp
arpl
xchg
xchg
adc
cmpsl
and
cmp
in
sti
sub
into
adc
adc
dec
lret
into
arpl
mov
ds
push
inc
or
scas
rclb
lea
sub
addl
fucomip
jmp
push
ds
xchg
test
loop
xchg
je
push
fwait
bnd
xchg
add
inc
xchg
rcrb
sbbl
cmp
scas
push
xchg
dec
pop
xor
or
xor
ret
cwtl
dec
inc
sbb
data16
mov
and
mov
shlb
repz
es
sbb
xchg
and
push
in
cmpb
add
int
mov
jns
inc
mov
imul
cmpsb
int3
dec
pop
repnz
cli
orl
xchg
mov
ljmp
mov
notl
popa
cwtl
lock
lahf
jbe
lds
orb
aad
cmpsl
pop
push
pop
xchg
cmp
dec
lahf
jb
test
dec
ljmp
dec
mov
popa
sub
bound
dec
and
jge
mov
in
popf
lds
movsl
pop
bnd
add
adc
pop
pop
sbb
enter
inc
add
add
decl
push
mov
pusha
out
cmpsb
inc
pop
lret
movsl
mov
mov
mulb
inc
aas
repz
int3
ficomps
sahf
jns
xchg
cs
xor
out
out
sub
or
jg
dec
lods
dec
in
test
sbb
loope
pop
mov
daa
lods
test
xchg
xchg
cmp
fdivl
add
nop
lahf
inc
cmpsb
aam
mov
test
pop
pop
call
scas
dec
mov
add
stos
testl
sahf
mov
add
sbb
and
fidivrl
ret
sbb
popf
cmp
pop
mov
lods
lea
mov
shll
lock
push
outsb
enter
adc
sbb
int
or
sub
daa
in
jne
lret
xor
pop
sbb
negb
inc
mov
and
sbb
dec
xor
pop
in
and
xchg
push
sub
negb
mov
xor
scas
cmp
mov
cmpsb
ret
cmpsb
call
jnp
insb
mov
adc
scas
aaa
or
add
jo
adc
iret
push
xor
test
icebp
mov
jo
inc
lds
mov
scas
jge
repnz
cs
orb
dec
incb
xlat
cmp
add
adc
pushw
fadds
mov
fsubrp
int3
fnstenv
inc
call
divb
sbb
push
xor
insb
cltd
sub
ljmp
mov
mov
popa
sub
sbb
lea
jbe
pop
sub
cli
add
dec
movb
push
xor
jns
gs
daa
pop
mov
hlt
hlt
inc
cmp
cwtl
xor
jecxz
mov
lcall
in
push
dec
add
push
or
pop
xchg
test
adc
add
ret
data16
aam
insl
sbb
pop
xchg
mov
fwait
sbbb
cmp
mov
test
repz
xor
push
xor
cmp
aaa
pop
mov
jp
sbb
pop
pop
inc
cmp
cli
dec
mov
outsb
adc
push
sub
ret
push
scas
shll
ds
push
or
es
imul
dec
cmp
scas
mov
xor
pop
jbe
xchg
fs
mov
stc
add
or
outsl
mov
pop
cmpb
mov
imul
imul
pop
or
xchg
arpl
xchg
jne
popf
fnstcw
xchg
ljmp
outsl
jo
jne
aad
mov
add
cmc
push
mov
and
sub
iret
les
out
and
add
fsubs
test
loopne
cmpsb
add
inc
sbb
cmpsb
outsl
enter
mov
mov
ljmp
sbb
ja
cld
and
fsubrl
add
xchg
lods
jp
dec
inc
jnp
icebp
xor
mov
or
mov
fmull
sbb
and
jnp
push
inc
sub
dec
dec
or
sbb
and
push
stc
jg
scas
mov
repnz
dec
dec
test
or
mov
mov
or
in
adc
enter
inc
les
jecxz
loop
push
jecxz
jle
sahf
fcmovu
movsl
or
pop
add
mov
ljmp
movsl
out
xor
cltd
cld
daa
fidivl
fcoms
inc
adc
dec
xor
into
cmp
add
std
test
test
inc
inc
adc
xchg
inc
leave
scas
fcompl
adc
sbb
fidivl
push
adc
push
shrl
ret
mov
hlt
mov
dec
adc
mov
jb
les
sub
out
pop
sub
std
xchg
sti
into
aaa
sahf
ret
ss
les
inc
fwait
adc
push
fwait
loope
shlb
lds
sbb
aam
sti
mov
mov
in
cmp
imul
mul
push
in
xor
cmp
jg
cmc
jns
popf
or
jg
mov
mov
aam
dec
cmpsl
mov
push
pop
scas
inc
ret
adc
xor
xchg
lcall
pop
push
arpl
pushf
stos
lea
ljmp
jmp
pop
mov
pop
pminub
and
call
pmullw
shlb
lods
sub
sbb
push
fidivl
cltd
cwtl
popf
fisubs
jg
lret
scas
jo
test
xchg
js
mov
imul
push
lret
cmpb
into
cmp
mov
fcomps
cmpsb
fwait
pop
mov
in
int3
mov
repz
xchg
loop
xchg
adc
sbb
test
cltd
imul
inc
add
adc
sub
or
cmp
cmp
fidivs
das
dec
rclb
push
xchg
popf
aas
inc
stc
inc
insb
shlb
int
pusha
icebp
rcl
lcall
fildl
inc
pop
push
pusha
xor
fwait
rcll
inc
lds
dec
sarb
imul
xchg
mov
adc
mov
arpl
out
sub
int3
dec
cmp
out
test
fsubs
sbb
aas
cld
movsl
in
jbe
in
or
xchg
cmp
adc
xchg
in
loopne
pop
add
orl
daa
testb
aam
ss
push
into
xor
shll
xchg
xlat
mov
imul
push
rorl
jmp
push
lods
sbb
and
loopne
adc
dec
cmpsl
or
fs
sbb
push
stos
adc
pop
dec
idivl
fcomip
push
sbb
test
loop
mov
pushf
jg
xchg
cmp
sbb
scas
add
fwait
sbb
jne
lret
jbe
add
push
pop
sarl
xchg
xchg
xchg
mov
scas
xor
loopne
xchg
mov
jbe
push
inc
lods
sbb
in
inc
mov
mov
mov
hlt
cmp
xlat
stc
or
addr16
adc
pop
jb
mov
push
les
jmp
mov
push
sbb
jns
iret
cmp
out
out
popf
lcall
sbb
dec
or
xchg
enter
inc
cld
hlt
int3
and
xchg
divb
imul
das
and
xlat
pop
bound
movsb
out
iret
inc
test
outsb
push
scas
xchg
bound
arpl
or
cwtl
xchg
cli
sbb
ret
int
sub
filds
mov
mov
inc
jmp
or
movzbl
repnz
stc
gs
inc
arpl
xchg
mov
push
jb
mov
enter
or
xor
subl
rolb
das
lcall
test
jle
and
mov
jne
or
and
mov
aaa
pop
mov
push
mov
in
mov
cltd
xchg
int3
aam
mov
sarb
or
cwtl
cmpsl
out
dec
mov
jae
dec
fs
inc
mov
je
cmp
mov
xchg
cmp
outsb
xorb
ret
xor
jle
add
inc
mov
cld
in
repnz
arpl
pop
andl
stos
xchg
data16
lcall
push
inc
jge
inc
das
push
fildl
sub
add
hlt
std
mov
add
sbb
xchg
mov
imul
les
daa
add
xchg
stc
lret
mov
enter
jg
xchg
nop
pop
test
repnz
ret
es
pop
int
push
cwtl
push
jmp
mov
ret
pushf
pop
aaa
sarl
mov
dec
inc
out
sub
out
das
cmp
mov
xchg
mov
push
psrlw
sti
adc
dec
jb
or
fchs
fistl
pop
lret
mov
mov
push
daa
divl
mov
mov
hlt
daa
mov
mov
nop
cmp
jbe
call
dec
sti
insb
lods
mov
les
inc
jecxz
cmp
enter
daa
mov
sti
inc
cmc
sbb
mov
push
out
flds
lods
mov
pop
outsb
xchg
mov
icebp
jo
loop
mov
adc
jb
inc
or
pop
popf
dec
push
adc
xchg
movsl
xchg
mov
sub
or
xchg
push
movsb
inc
mov
sbbb
test
ret
scas
out
test
stos
mov
push
mov
mov
cwtl
pop
out
mov
xor
ds
movsl
sbb
sahf
pop
jmp
sarb
pop
jle
mov
pop
enter
push
pop
icebp
mov
and
fwait
es
xor
mov
pop
cmpsl
subps
and
pushf
cmpb
xor
fidivrl
mov
pop
pop
leave
and
pusha
jle
add
test
pop
int
and
mov
or
rcl
mov
or
mov
push
int
daa
sub
cmc
out
inc
push
imul
icebp
dec
test
and
mov
cmp
clc
adcl
cltd
icebp
pop
fiadds
mov
cmp
insl
cmc
rcrb
jmp
add
fsubl
mov
test
popf
std
push
cmpsl
adc
nop
cmc
repnz
fistpll
das
adc
ret
xchg
sti
sub
push
jbe
xor
jg
lea
imul
mov
pop
out
mov
notl
sub
jbe
jo
insl
das
xchg
fistpll
mov
jne
xchg
scas
outsl
mulb
rcll
insb
int
lea
rcrb
in
sbb
lock
mov
fwait
xchg
cs
jle
adc
lock
pop
leave
mov
xchg
mov
stc
shlb
mov
mov
xchg
jne
sbb
iret
in
pop
leave
or
aam
push
xchg
rcrl
in
mov
repnz
imull
repnz
js
mov
xchg
cld
pop
mov
adc
xchg
daa
sbb
mov
cli
push
hlt
repnz
mov
dec
scas
sub
xor
mov
test
idiv
fdivrl
dec
enter
pushl
in
pop
cmp
int3
fs
arpl
dec
int
stos
push
mov
test
insl
les
daa
push
aaa
cs
sbb
loopne
das
ret
repnz
mov
lds
push
and
jl
imul
stc
cmc
mov
add
rcrb
xchg
push
inc
gs
fldl
fstps
inc
push
pop
addb
out
add
push
pop
mov
dec
cmp
sub
es
pop
xor
orb
adc
xor
repnz
jmp
sbb
pop
jl
add
subl
cmp
pop
lret
movsb
and
push
insb
aaa
hlt
xchg
mov
pop
ljmp
shll
jge
adc
jp
cmc
adc
push
ss
test
les
jecxz
cs
popa
inc
lods
test
and
rclw
in
inc
jne
xor
push
ret
int
ret
lock
sub
lcall
les
xchg
test
push
mov
dec
scas
pop
mov
mov
lea
push
sbb
inc
push
xor
stos
movsb
jno
movsb
mov
or
subb
sub
lea
shl
xchg
adc
xchg
inc
add
or
pop
cwtl
insb
aad
rcrb
push
lods
jae
jmp
pop
mov
sarb
cwtl
imul
sub
dec
fstpt
jbe
hlt
inc
gs
sub
jmp
scas
inc
xchg
ret
addl
pop
jae
gs
or
xor
jecxz
mov
pop
jae
mov
lahf
cmpsl
or
std
dec
cmpsl
jno
insb
dec
cli
push
pop
jp
std
fisttpl
or
cs
das
mov
sti
mov
sub
push
pop
xorb
xchg
cltd
add
into
and
jp
loopne,pn
mov
xor
std
inc
test
xor
inc
xchg
ljmp
push
or
aam
jns
fwait
cld
cmp
int
jecxz
sbb
cs
jbe
inc
push
mov
pushf
add
mov
cmp
sbb
mov
mov
aaa
adc
stos
fsubl
or
mov
mov
cmp
rcr
pop
push
shl
jb
adcb
xchg
stos
notl
xor
mov
int3
or
cli
rcrl
push
jno
or
pop
test
stc
mov
pop
pushf
lock
xor
sbbl
fbld
sub
inc
inc
fidivrl
xchg
jg
imul
insb
lret
adc
mov
xchg
out
daa
jb
pop
or
outsb
aad
push
add
pop
push
aam
loope
in
mov
jb
dec
pop
xchg
sbb
inc
inc
stc
or
int
outsb
pop
mov
cld
jl
es
push
fdivs
mov
out
sbb
arpl
xchg
mov
inc
xchg
mov
push
xchg
jl
call
cltd
mov
jae
dec
ret
mov
cmpsb
sub
cld
inc
or
repz
and
sti
in
jge
jp
xchg
push
mov
ss
mov
js
mov
rclb
lods
ja
je
dec
dec
fists
pop
hlt
imul
pusha
das
ss
or
push
mov
add
aas
mov
cmp
movsl
fisubrl
out
hlt
out
ss
dec
inc
mov
and
push
or
push
xor
inc
sbbl
dec
aas
ds
mov
dec
push
movsb
add
xor
lds
stos
sub
das
leave
xchg
cmp
mov
mov
dec
jmp
sub
pop
pushf
cmpl
aam
mov
data16
imul
lds
or
inc
push
mov
mov
aam
add
add
mov
testl
shufps
stos
xchg
jnp
shrl
sub
sbb
jae
jo
inc
incl
add
cltd
add
jle
xchg
test
sub
pop
xchg
pop
pop
jns
lea
jae
int3
xchg
fcoml
push
pushl
lock
loop
pop
ljmp
mov
fs
stc
xchg
dec
xchg
hlt
push
mov
das
mov
out
mov
dec
or
fsubrs
xchg
enter
sbb
arpl
jb
dec
insl
fnstenv
arpl
ret
mov
mov
xchg
mov
das
mov
adc
fsubl
filds
cmp
add
push
bound
or
add
pop
cmp
mov
add
mov
jns
adc
movb
cld
xor
shlb
add
xchg
leave
pushl
pusha
dec
and
in
aaa
rorb
jne
or
cmp
iret
pop
dec
push
and
xchg
pop
or
mov
in
in
lock
fsincos
cli
cmpsb
or
add
and
cli
mov
adc
mov
arpl
inc
sbbb
bnd
es
mov
loop
test
sub
pushf
jg
stc
fcmovnb
insb
add
fwait
adc
sbb
in
negb
ss
cmp
movsl
loop
sbb
pushl
sbb
sbb
mov
popa
pushf
xchg
xorl
sbbb
in
sbb
cltd
ss
xor
lahf
ficoms
sub
sbb
clc
nop
adc
int3
push
lahf
in
rcl
jle
jno
inc
fcomp
adc
ljmp
test
into
dec
jge
flds
jp
inc
inc
lods
xor
push
cmpsb
pusha
imul
push
jmp
lea
sbb
add
xchg
mov
movsb
ret
test
xor
push
inc
dec
mov
xchg
jg
movsl
andb
xor
loopne
adc
or
hlt
sbb
loope
idivb
orb
es
cltd
lds
leave
les
mov
push
sub
cmp
les
cld
fiadds
sbb
lret
inc
inc
cmp
push
call
jl
dec
pushf
dec
push
xor
iret
int
fs
cltd
je
and
jecxz
sbb
pop
imul
icebp
aaa
nop
jecxz
imul
sbb
test
lret
aaa
fiaddl
or
out
and
cmc
jb
adc
out
jmp
adc
fisubrs
lds
shrl
xlat
jne
stos
outsb
push
cli
push
pop
push
movsl
daa
jmp
roll
push
fwait
sbb
mov
jp
push
jb
cmp
mov
or
scas
pusha
in
addl
lock
xchg
repz
in
push
shl
xor
or
jmp
les
cmp
sub
push
sub
mov
mov
test
fdivl
fsub
mov
jge
and
popa
push
cmpsb
xchg
lds
iret
xor
push
jmp
das
xchg
dec
in
daa
sub
cs
cli
sbb
mov
xlat
adc
in
pop
xor
faddl
dec
or
cmp
adc
jns
int
or
dec
pop
sub
add
push
and
bound
dec
cmpsl
in
shll
cld
sub
inc
dec
jle,pn
subb
and
push
push
movb
aaa
cld
jae
movsb
xorl
ljmp
addr16
cmpsb
ret
push
push
outsl
push
rdpmc
xor
fists
andb
mov
sbb
aaa
jp
sbb
sbbb
sbb
cvtps2pd
mov
pop
mov
dec
cld
mov
inc
sti
insb
jae
mov
cmpsb
adc
cmp
out
sub
jp
scas
xor
repnz
enter
in
inc
fnsave
jbe
mov
outsb
loopne
add
inc
out
xchg
inc
test
imul
dec
inc
push
scas
sbb
loopne
rclb
les
inc
fcomi
sub
jbe
test
mov
or
sub
lods
pop
std
lret
add
dec
dec
rol
pusha
out
jg
xchg
xlat
add
xchg
int
loopne
test
test
in
data16
xor
inc
aad
stos
mov
out
mov
sbb
cmc
scas
add
stc
fidivrs
cmpsl
xchg
push
sbb
and
cmp
movsl
mov
xchg
mov
sbb
daa
inc
and
xchg
out
cltd
mov
push
lods
out
aas
stos
aam
jge
mov
arpl
cmpsl
ljmp
pushf
outsl
lods
cmpsl
sbb
in
mov
mov
jl
inc
mov
sbb
ret
lret
sub
sbb
sub
mov
jmp
dec
lea
repz
lea
mov
pop
xor
push
lods
mov
or
add
adc
outsl
cmc
xor
bound
adc
out
rcrl
fnstsw
arpl
adc
cmp
dec
xor
pop
insl
jb
leave
and
shl
dec
jbe
rclb
adc
jge
adc
inc
sbb
rcll
pop
inc
and
fstps
or
rcr
das
pop
outsb
icebp
xor
adcl
fdivrl
pop
jns
or
unpcklps
aam
jmp
adc
jge
arpl
push
out
roll
jle
sub
fsubl
cs
cmpsl
stos
push
ds
dec
jp
pop
into
insl
jmp
push
pop
push
jnp
jle
mov
enter
or
movsl
mov
icebp
jns
sarl
add
inc
pop
daa
jnp
xchg
popa
test
into
dec
sbb
cld
and
jo
jo
sarb
imul
jle
lea
pop
into
mov
imul
pop
into
pmaddwd
aas
push
push
ret
out
and
bound
ds
sub
push
aas
jns,pn
add
sbb
jae
jge
jmp
push
iret
cmc
lods
jbe
leave
inc
pop
jo
xor
xchg
cmpsb
cmp
mov
nop
stos
aam
xchg
insl
sub
adc
or
je,pn
xor
pop
inc
jmp
mov
pushf
lret
mov
fidivl
mov
ret
jb
mov
hlt
sub
xlat
sbbb
xlat
into
push
test
inc
lea
int
push
jno
pop
popf
or
dec
xor
push
insb
adc
je
mov
pop
inc
jo
std
or
pop
popa
or
imul
pop
push
mov
mov
xchg
mov
adc
fs
jb,pt
push
cmp
cmp
cltd
prefetch
mov
lea
and
les
xchg
aad
roll
loope
lods
xor
xor
in
fists
add
pop
repz
in
dec
xor
jns
icebp
xchg
jnp
cs
std
jl
mov
mov
sahf
loopne
jb
pop
mov
stos
jo
dec
pop
cmpsb
mov
sbb
pop
mov
cmp
ss
divb
cmp
xchg
dec
add
fsubr
adc
test
xor
divb
xor
jb
movlps
pop
fsubr
jbe
imul
popf
test
insl
xchg
pop
sub
sahf
and
or
cltd
add
lds
or
push
out
sub
push
fs
or
es
jae
jmp
out
hlt
icebp
inc
outsb
ljmp
out
sarb
pushf
inc
lret
cmp
adc
faddp
fiaddl
pop
pushf
nop
test
adc
std
cmp
psllw
cmp
pop
mov
mov
sub
out
cmp
cs
mov
jbe
inc
in
dec
cmovo
adc
lret
mov
mov
movsl
xchg
mov
jmp
dec
inc
add
je
pmaxsw
xor
test
loope
les
movsl
mov
sub
mov
jmp
adc
iret
add
aas
xchg
je
aaa
dec
cwtl
jb
testb
popa
jo
or
mov
lret
fyl2xp1
jbe
xchg
bound
cli
xor
daa
sub
div
lret
adc
fnstsw
dec
aam
xchg
fildll
push
and
cmp
arpl
enter
mov
inc
aaa
mov
mov
outsb
cmpsl
cmp
arpl
addr16
inc
and
shrb
add
sub
inc
sub
loop
ss
mov
ds
fmull
dec
ljmp
sub
outsb
stos
add
xchg
test
jns
sub
dec
sti
jbe
add
inc
mov
scas
aad
int
pop
outsl
cmp
cmpsl
clc
adc
mov
adc
cld
cmp
mov
ror
lahf
negb
sub
push
mov
out
cmc
xchg
dec
out
inc
les
push
dec
aas
jg
lret
test
dec
call
jo
les
dec
loopne
pop
adc
in
lcall
dec
push
popa
fldcw
mov
addl
addr16
xor
lods
out
shlb
lods
je
add
movsb
dec
insl
nop
lahf
add
test
lret
and
push
movsb
and
outsb
int
adc
xchg
xchg
and
pusha
out
inc
jne
mov
pop
pop
test
in
mov
ja
xchg
retw
add
sub
cmp
scas
and
sti
pop
movl
divl
and
fsubl
negb
ljmp
sbb
dec
jmp
std
movsl
addr16
add
fsts
call
jo
dec
arpl
loopne
xchg
push
mov
sub
add
ret
aas
inc
mov
push
jnp
imul
sbb
roll
lods
leave
inc
outsb
popf
xor
imul
inc
push
fcoms
lods
in
xor
mov
sbb
jmp
jecxz
mov
aaa
inc
add
bound
mov
push
inc
hlt
inc
jbe
mov
mov
imul
pop
sarl
jmp
add
cli
push
mov
daa
jae
jle
fs
jns
dec
outsl
ret
shlb
push
rcrl
mov
or
lods
mov
lock
dec
lods
pop
out
push
push
pop
enter
mov
jecxz
mov
fwait
hlt
add
repz
test
rolb
cli
std
or
aam
cli
inc
rorl
scas
loop
or
inc
cmp
dec
mov
xchg
insb
sahf
stos
cld
cmp
leave
enter
int3
leave
lcall
and
xor
fimuls
sbb
andb
pop
std
sti
push
bound
shl
fsubrl
push
push
std
jg
in
xchg
lock
xchg
lret
jbe
jnp
xor
push
xor
cmp
xchg
sub
dec
lods
test
jo
mov
sbb
std
out
rcr
mov
jmp
stc
or
out
sub
lds
and
sub
and
xchg
bound
push
mov
add
mov
scas
xor
loopne
imul
xchg
mov
dec
dec
cmpsl
and
push
scas
lahf
mov
or
mov
fcomps
scas
jb
sbb
push
fsubs
add
dec
rolb
fdivl
repnz
jge
out
ror
fwait
lock
das
mov
cmp
cs
fiadds
test
scas
lret
in
or
push
mov
add
xor
sbb
cs
insl
mov
imull
and
xor
cmpsl
cmpsb
test
pop
ljmp
adc
cmpsb
incl
les
and
std
xchg
jae
fnstsw
pop
add
inc
dec
mov
lret
fisubrs
popa
push
stos
lea
scas
push
movsl
fcompl
icebp
into
pop
push
cmp
and
dec
out
insb
jp
sbb
lods
in
or
repz
fmuls
repz
jecxz
bound
fmull
in
inc
in
mov
and
sbb
imul
rorb
or
movsl
adc
mov
dec
notl
lds
sub
jge
xchg
movb
cmp
cwtl
sti
cmp
lods
sub
push
xor
pop
xlat
shlb
loopne
movsb
and
dec
xor
jp
in
jno
mov
mov
out
daa
jno
push
pop
iret
add
insb
add
fnstsw
daa
sub
pop
out
faddl
stos
mov
popa
roll
ficoms
bnd
clc
aaa
jns
mov
test
ss
xchg
jecxz
cmp
sub
cli
jl
and
jl
jg
cmp
sbb
imul
adc
sub
fimull
add
xchg
lea
dec
mov
adc
sahf
fcmovb
loop
sti
cmp
enter
lret
xchg
fwait
pop
cmp
in
mov
cmpsl
cmp
movsb
imul
ds
roll
xor
inc
iret
adc
daa
add
rcrl
repnz
and
pop
adc
iret
or
push
cld
push
cwtl
int3
mov
xchg
xchg
popf
jns
aam
push
jnp
lret
xor
loopne
jle
loop
jnp
add
dec
mov
lcall
inc
outsb
lret
adc
pop
out
daa
cli
hlt
mov
jns
insl
xor
cmpsb
push
clc
es
sbb
mov
fcoml
adc
cmp
sahf
inc
sbb
mov
push
jecxz
xchg
adc
movsb
mov
or
repnz
addb
add
imul
jl
es
jecxz
pop
xor
and
es
enter
xlat
call
sub
mov
in
add
daa
stos
pop
loope
mov
mov
roll
outsl
add
int3
bnd
fstpt
aaa
mov
mov
dec
mov
push
in
mov
mov
mov
adc
cmp
adc
stos
imul
out
push
mov
mov
pusha
cmp
push
dec
and
jnp
in
insl
sbb
loop
shlb
add
lcall
int
ljmp
js
clc
cmp
or
dec
stos
in
in
aam
dec
add
dec
int3
jbe
pusha
xor
pop
mov
inc
and
cwtl
xchg
jbe
nop
mov
sub
or
add
xchg
xchg
cmp
dec
jmp
fwait
divb
cmp
clc
dec
scas
pop
sub
dec
jae
push
fdivs
cmp
pop
sahf
mov
lds
lret
mov
mov
dec
jns
fisttpl
xor
add
push
jnp
fists
nop
adc
xlat
lret
mov
loope
cmpsb
enter
js
jo
add
dec
mov
adc
or
repz
loopne
and
push
out
or
jbe
mov
icebp
ja
xchg
push
lods
or
inc
mov
add
daa
mov
adc
cmp
inc
int
in
mov
jl
cmp
push
inc
mov
insl
adc
sub
xor
jae
in
pushl
insb
mov
dec
addr16
sbb
cld
inc
popa
jo
test
dec
and
cmpsb
and
sahf
mov
push
imul
mov
sbb
aad
icebp
ds
test
push
insb
add
loopne
mov
jl
jg
xchg
lock
sub
leave
xchg
sub
cmpsl
cli
test
cwtl
pop
setno
jg
inc
in
call
cmp
mov
adc
fcomp
or
jnp
int3
push
jmp
lods
cmpsl
ret
and
lock
addl
stos
sub
xor
aaa
movsb
imul
int3
cmp
lods
xor
add
push
xor
mov
aas
inc
dec
and
fcompl
or
lahf
imul
enter
fisubl
jecxz
fwait
les
sub
pop
add
dec
mov
mov
out
cmp
stc
test
adc
xchg
shll
push
add
mov
int3
add
cmpsl
dec
sbb
fidivl
loope
lcall
shlb
insl
pop
int
int3
insl
mov
and
push
pop
jbe
adc
mov
lcall
popf
sub
lods
pop
xchg
sti
loope
mov
mov
mov
pop
fnsave
mov
lods
arpl
mov
or
jecxz
jg
push
cwtl
xor
inc
lret
aas
outsl
xchg
sub
hlt
outsb
popa
repnz
inc
mov
adc
sbb
mov
pop
or
aam
and
mov
rcrb
pushf
cmp
insl
imul
dec
dec
inc
push
mov
scas
gs
add
fdivr
xchg
not
mov
shl
sti
outsl
cmpsl
fidivrl
xorl
sbbb
jno
ds
pop
fnstcw
subl
sub
into
xor
adc
lods
adc
stc
les
adc
ffree
push
das
mov
and
fabs
sub
mov
jno
fimuls
int3
ja
mov
leave
aam
outsb
das
add
pusha
pusha
jb
add
adc
lahf
xchg
repz
pop
dec
xor
and
xchg
stc
xchg
adc
hlt
pop
ret
add
lock
adc
and
jle
xchg
ss
lea
sub
adc
stos
clc
test
lds
lret
inc
cmp
jge
ds
fisubrl
imul
test
shl
ficomps
pop
aam
or
outsb
xor
pusha
pop
loope
inc
and
dec
and
lret
inc
testl
out
pop
hlt
push
je
ret
mov
and
sbb
inc
lea
es
and
scas
inc
clc
dec
or
insl
stos
dec
sahf
inc
and
mov
icebp
aaa
dec
add
adcl
adc
pushf
stos
add
mov
push
loop
ja
inc
icebp
into
mov
in
push
dec
cltd
mov
fmull
pop
jo
lcall
jno
xlat
test
mov
leave
cwtl
mov
stos
cmp
cmp
adc
das
seta
les
sti
sub
cli
cltd
push
add
cmp
in
repz
loop
int3
mov
adcl
popf
sub
scas
enter
insl
and
jmp
mov
loop
jnp
add
mov
fwait
jmp
fistl
testb
idivb
cmc
jno
push
lret
cmp
pop
push
xadd
cli
insl
mov
adc
mov
enter
mov
imul
jg
xchg
aam
pushf
cwtl
cli
xor
push
xchg
dec
ret
test
out
or
add
and
mov
aaa
leave
stc
xchg
push
lret
leave
xchg
scas
mov
xchg
sub
rcrb
pop
test
mov
inc
in
adc
cli
and
test
lods
cwtl
xchg
xchg
sbb
inc
enter
imul
mov
and
push
ljmp
inc
add
mov
sbb
stos
mov
or
sarl
out
and
jle
fnstenv
mov
leave
push
rcl
xchg
sbb
lahf
sbb
or
push
and
stc
push
mov
cmp
xchg
in
gs
jb
push
mov
xor
es
or
add
je
pusha
mov
popf
stos
sti
outsb
lahf
push
cmp
or
jmp
outsb
lahf
jecxz
les
jns
mov
sahf
pusha
popa
inc
outsb
cmp
jmp
in
xorl
sbb
mov
sahf
pop
hlt
rorb
shrb
add
or
mov
sbb
push
in
mov
add
in
das
jae
pop
push
pop
mov
pop
xlat
and
sbb
es
movsb
mov
cmc
push
dec
jmp
and
daa
imul
cmp
push
dec
jo
faddp
cmp
inc
test
push
or
popa
push
jns
xor
xchg
and
ljmp
xor
mov
cmp
dec
cwtl
fisttpl
popf
or
xlat
and
cmpsl
xchg
int3
stos
sbb
stc
into
gs
pop
xchg
mov
inc
shrb
lods
test
inc
fwait
hlt
push
pop
aam
or
push
sbb
cld
in
pop
shl
negl
aad
push
mov
sub
notl
pusha
and
push
loop
mov
mov
cmpsb
mov
stos
push
cmp
data16
inc
add
cs
or
enter
push
mov
or
cli
das
sub
inc
inc
and
adc
cmp
mov
dec
divb
ds
sub
lds
xchg
mov
adc
mov
in
imul
popa
dec
stc
mov
ret
out
jmp
sarb
and
sub
sbb
xchg
sbb
sub
xlat
sbb
ficomps
xchg
pop
lods
jbe
sub
not
push
and
scas
clc
inc
jnp
dec
leave
or
daa
add
call
outsl
lock
mov
das
mov
sub
xor
inc
push
adc
mov
loop
push
add
int3
ss
or
clc
jne
jmp
les
hlt
and
imul
jle
sub
hlt
push
mov
mov
push
xlat
mov
xor
and
mov
out
js
jnp
adc
push
push
sbb
xor
bound
add
lock
aad
jmp
xor
shlb
test
mov
aad
lahf
sub
je
mov
pop
sub
cmp
lock
je
rcrl
dec
cld
jl
push
enter
mov
icebp
pop
jno
leave
addr16
sub
scas
imul
int
ret
mov
push
pop
addr16
sbb
repz
jne
mov
inc
jnp
mov
fisttps
pop
das
scas
xor
mov
pop
aad
pop
out
es
icebp
xor
sahf
rcll
xchg
pop
or
ja
sub
fs
xchg
xchg
test
xor
jns
rcrb
cmp
jo
mov
fstl
les
fnclex
dec
push
pop
jmp
int3
cmc
addr16
jne
pop
cmp
cmpsb
push
jg
scas
shrb
jo
and
cmp
popa
cmpsb
push
test
cld
inc
jmp
pushf
mov
push
idivl
mov
and
shll
jns
aam
push
cltd
push
cmp
std
sub
add
out
xlat
inc
xchg
mov
jo
push
insl
mov
mov
cmp
inc
leave
pop
adc
jb
add
lds
fs
int
cmp
fstps
sbb
and
mov
push
in
add
test
mov
subb
movsl
stc
cmp
mov
in
andl
shll
mov
fcmovbe
les
jns
outsb
test
fisttpl
mov
adc
sbb
daa
sub
push
inc
jae
loope
insl
add
adc
into
xchg
test
pop
test
leave
mov
fdivs
or
mov
push
enter
sbb
imul
int
frstor
cmpsl
xor
ss
jg
mov
not
dec
xor
xchg
mov
adc
nop
dec
xor
out
cmc
lahf
xchg
or
movsb
dec
das
scas
jno
jno
stos
dec
inc
insl
jmp
out
adc
sub
xchg
stos
xor
pop
mov
cmp
and
fsubs
outsl
mov
pop
punpckhdq
enter
mov
or
es
popf
lahf
test
jge
mov
xor
gs
dec
mov
mov
or
mov
bound
idivl
iret
imulb
pop
sar
cmp
cmpsl
cmp
shll
stc
mov
movntq
sub
fcom
add
adc
xchg
mov
jmp
scas
and
pop
fcomps
fwait
mov
jae
rcr
cmc
aaa
int3
rcrb
ljmp
mov
fildl
pop
dec
stc
repnz
xchg
pusha
lea
jbe
add
cmc
sub
addr16
inc
jns
mov
cmpsl
pop
mov
lods
and
lea
inc
pop
outsl
mov
push
dec
aam
dec
testb
xor
outsl
pop
lar
arpl
push
add
mov
mov
adc
rolb
cmp
lods
movsb
lds
fcomps
push
call
aam
xchg
fsts
int3
sahf
sbb
add
sub
das
mov
xor
cmc
stos
or
inc
mov
sub
les
inc
xchg
lcall
dec
add
addr16
sbb
mov
mov
pop
insb
in
pop
jae
adc
andl
push
movsl
aaa
mov
push
add
mov
xchg
outsb
jnp
adc
mov
pushf
insb
push
jge
insb
insb
insb
js
xchg
or
or
and
jnp
hlt
sbb
imul
sahf
test
or
test
sti
test
push
neg
cmp
mov
hlt
mov
jne
xor
push
ret
int
lret
scas
push
cmp
test
popf
lods
push
cltd
add
mov
pop
add
addr16
cmp
add
dec
xchg
mov
push
push
add
add
mov
aam
jmp
out
inc
or
popa
repnz
add
cmpsb
stc
call
xchg
or
pop
lock
mov
popl
sbb
mov
push
dec
push
mov
repz
roll
mov
dec
gs
or
push
fldcw
daa
sub
jns
ret
push
inc
cmp
ss
jl
ss
dec
sbb
test
jb
jle
and
dec
or
and
js
loope
mov
xchg
test
add
adc
fdivl
add
cld
lods
or
push
jae
aad
push
stc
popa
push
icebp
sub
sbb
pop
mov
adc
iret
test
or
xor
cld
fisubrl
mov
mov
sbb
cmc
in
push
in
jl
frstor
sub
add
sbb
push
add
mov
cmpsl
in
stc
repnz
jmp
loopne
pusha
cwtl
xchg
fdivr
adc
shll
aas
fsubrp
lahf
dec
lods
data16
inc
mov
jns
js
jg
sarl
mov
out
rol
mov
pop
pusha
inc
xchg
lret
push
xabort
int
aam
aam
xchg
gs
sahf
jecxz
xchg
aam
and
inc
inc
xor
push
movsb
mov
dec
js
mov
mov
fwait
hlt
mov
jo
into
popa
mov
test
imul
mov
add
dec
push
je
sub
insb
jp
mov
xchg
push
test
pop
popf
lahf
jmp
imul
mov
incl
nop
mov
scas
imull
ss
mov
lock
cltd
and
movsl
xor
and
movsb
in
xchg
ds
sahf
mov
mov
test
ja
icebp
inc
inc
pop
in
sbb
fisttps
mov
or
lock
xchg
and
cmp
jno
sbb
arpl
repnz
jmp
xchg
adc
lea
push
push
jle
mov
mov
arpl
aad
ja
in
repnz
mov
test
sub
or
outsb
rcl
xchg
and
call
ds
lods
fisttpl
rcr
sub
stos
push
mov
or
inc
jle
enter
xor
xlat
inc
cmpsb
arpl
cmpsl
das
mov
pop
outsl
ss
insb
loopne
jecxz
popf
push
lea
push
test
stos
push
jb
scas
out
adc
lret
cmovb
mov
push
fs
mov
jno
loop
push
mov
pop
aaa
int3
je
out
sbb
push
inc
cwtl
mov
dec
cmp
pop
add
sbb
jg
sbb
add
in
jno
push
lock
insb
outsl
rol
mov
lods
sahf
insl
stos
inc
stos
pop
cmpsb
jo
int
sub
out
js
xchg
or
dec
mov
cltd
cmp
ret
pop
xchg
and
fildl
push
push
enter
dec
inc
push
sbb
sub
loop
and
jne
in
mov
add
mov
repz
inc
mov
add
ret
daa
test
or
push
popa
dec
gs
aas
sarb
mov
jne
dec
sub
adc
inc
push
fwait
test
or
fcomps
inc
push
int3
mov
imul
test
push
cli
lret
lock
pop
nop
sbb
and
jnp
test
call
jg
xchg
aaa
xor
punpcklbw
push
imul
add
mov
xchg
fcmovne
popa
es
in
dec
cwtl
outsw
mov
push
out
jecxz
into
jnp
mov
push
inc
in
pop
mov
hlt
loopne
or
jecxz
xlat
cmp
mov
daa
and
mov
jg
mov
pop
dec
sbb
int
fdivrl
sub
sti
cmp
mov
jp
and
shrl
pusha
cmp
mov
xchg
jnp
out
xchg
adc
adc
dec
fucomp
pop
jbe
stc
xor
out
jo
mov
aas
scas
lcall
dec
shrl
dec
pop
cmp
adc
and
xor
sbb
or
push
mov
dec
mov
add
push
les
repz
stc
in
lcall
popf
adcl
mov
andl
xor
sahf
popa
jnp
loopne
jg
sbb
sbb
test
ljmp
mov
pop
xor
sbb
mov
sbb
lcall
cmc
xchg
sbb
push
xchg
nop
out
fildll
push
push
xchg
dec
dec
lret
mov
repz
adc
out
sub
mov
js
and
sbb
jo
xor
push
fs
push
or
mov
or
int3
je
rol
stos
pop
xlat
cmp
pop
cmp
mov
or
add
inc
lcall
clc
imul
push
xor
popf
push
loopne
ret
fcmovne
push
aam
adc
adc
xchg
in
xchg
mov
mov
pop
add
icebp
sub
data16
and
dec
push
add
adc
dec
mov
cmc
and
mov
mov
enter
data16
jns
push
xchg
loope
ret
push
stc
rorl
pop
push
cltd
rol
mov
loopne
sbb
mul
cmp
mov
ds
test
jne
adc
test
or
fidivs
xchg
cmp
ljmp
cmp
in
in
dec
inc
add
adc
sbbl
paddusb
repz
stc
dec
jecxz
mov
jp
push
bnd
inc
push
or
or
mov
mov
mov
les
inc
add
sub
into
repz
loop
dec
stos
mov
xchg
add
sbb
jg
jle
or
and
mov
and
mov
stos
ljmp
mov
scas
mov
sub
mov
rcrb
cmpsb
mov
aas
loop
sbbl
dec
mov
std
lock
jmp
movd
cmpsb
mov
leave
aaa
pop
arpl
pusha
pop
cmp
or
mov
stc
loopne
mov
or
mov
add
cmp
mov
das
je
add
xchg
in
cmp
dec
xchg
movb
js
into
xor
std
mov
faddl
xchg
add
dec
fisttpll
dec
pop
fs
jmp
mov
rcrb
cmpsl
pop
xchg
in
dec
dec
repz
outsl
xchg
cltd
popf
lahf
or
dec
paddusb
xchg
jle
roll
mov
xchg
jle
sbb
mov
mov
gs
mov
mov
pop
cmc
aam
loopne
cmpsl
subb
pop
xchg
repz
lods
jb
pop
push
dec
lcall
mov
shll
scas
mov
enter
orl
jmp
cwtl
cmpsb
shll
cmpsl
andb
or
ds
sbb
push
cmpsb
and
mov
lret
jg
out
cmp
inc
xlat
rcrb
or
ret
data16
cmp
ja
push
xchg
repnz
in
sub
xor
push
jge
sbb
sahf
jae
mov
add
sub
or
imul
push
xchg
mov
cltd
and
push
lock
xor
jle
addps
movsb
xchg
and
in
clc
jne
inc
test
mov
or
sbb
jns
inc
js
int
inc
sbb
inc
push
scas
dec
fsubp
std
mov
enter
sbb
in
xor
out
push
sahf
dec
mov
dec
data16
xchg
mov
ret
scas
insl
ja
mov
repnz
les
mov
pop
test
push
push
mov
or
cmp
inc
push
lret
jp
xchg
inc
jmp
aam
sbb
test
xlat
shll
or
jle
mov
ja
lods
mov
mov
das
repnz
xchg
xor
fadds
in
clc
mov
rcrb
pop
sahf
dec
repz
and
and
pop
xor
clc
repnz
add
cmp
int3
sbb
sub
aas
xchg
xor
jmp
xor
xchg
push
es
mov
push
xor
mov
stc
pop
call
xor
bound
nop
or
adc
adc
dec
pop
inc
ss
lret
in
stos
cltd
pop
arpl
adc
inc
jmp
out
aad
movsl
xchg
push
xchg
stos
cmp
xchg
imul
aaa
popf
or
je
lds
movsl
cld
pop
fcomp
jne
xchg
pop
push
xchg
dec
pop
inc
test
frstor
push
fwait
iret
ss
dec
mov
xlat
cmp
adc
into
sbb
call
xchg
cmc
ret
test
aam
test
popf
and
sbbl
repnz
jnp
jl
lea
lcall
jb
ljmp
mov
xor
jmp
mov
movsb
xchg
or
das
mov
pop
pusha
mov
enter
adc
int
icebp
ficomps
mov
mov
idiv
test
in
mov
dec
mov
add
xor
inc
push
xchg
jp
jbe
pop
dec
sbb
ret
loop
mov
loop
add
push
lds
call
or
adc
fmuls
test
lret
lods
push
pop
popa
mov
inc
sub
cld
divl
jns
int3
je
addr16
insb
flds
test
scas
dec
repnz
lea
dec
add
aas
faddp
test
xchg
add
call
sub
aas
lret
mov
mov
push
jl
pushf
test
cmp
push
fcomps
jb
leave
or
add
cmp
dec
or
mov
loop
cmp
loopne
push
mov
xchg
jne
or
lods
dec
movaps
push
push
fsubrl
sti
cld
add
imul
popf
movsb
or
and
push
jno
in
mov
ds
pop
xchg
leave
lcall
cmp
sbb
rcrl
cmc
test
lods
mov
stc
adc
mov
rol
add
aam
lcall
call
fldt
aad
cmc
push
insl
xchg
push
pop
jmp
xchg
mov
fcompl
and
aas
push
call
fcomps
loope
icebp
sarb
mov
es
jbe
xlat
cwtl
sarb
lods
lret
xchg
pushf
in
les
mov
add
jns
jmp
into
sub
mov
add
inc
addr16
jbe
jne
pop
js
push
iret
xor
add
pop
bound
shr
mov
inc
js
sub
jae
dec
out
inc
push
adc
stc
loope
popa
mov
out
inc
cmpl
push
in
dec
xchg
sbb
fsubl
sti
stos
jl
outsb
xor
fwait
lock
push
insl
push
cmp
fsubrs
xchg
adc
adc
into
jnp
cld
lock
sbb
jnp
in
rorl
sahf
push
ja
jbe
cmpsl
js
shl
dec
pop
repz
mov
jo
rcrl
imul
xor
dec
cmp
pop
lcall
rolb
inc
sbb
mov
sarl
mov
ffreep
pop
pop
leave
mov
mov
fldt
ss
pop
fwait
call
addr16
je
stos
adc
mov
xchg
pop
cmp
or
pop
sub
into
sub
shl
cmp
jle
loop
fisttpll
jl
test
sub
inc
inc
xchg
inc
xchg
mov
pop
div
sub
mov
jno
xchg
mov
lods
outsb
pop
push
mov
sub
cmp
lcall
int
sarb
test
cmpsl
pushl
aam
out
call
cmp
xchg
ret
or
xor
mov
mov
mov
popa
dec
push
mov
ret
sub
in
jae
stc
std
scas
push
cli
shl
and
jmp
xchg
mov
jl
mov
jecxz
push
ja
enter
add
mov
xchg
xor
push
xor
mov
xor
fmull
stc
jge
pushf
xor
mov
mov
fs
pop
mov
icebp
inc
cmpsb
aad
popa
out
icebp
aad
lahf
shlb
ds
xchg
add
mov
cld
sub
aas
sahf
pop
cmp
dec
aas
jno
idiv
lds
imul
in
icebp
xor
push
enter
cmpsb
cld
add
fstpl
push
mov
jne
adc
xor
mov
inc
shr
dec
push
mov
adc
lock
clc
mov
xlat
clc
push
xor
pop
inc
mov
add
pop
jne
sbb
push
cmp
add
mov
test
fsubr
mov
sbbl
stos
cmp
xor
fnstenv
aas
shlb
test
pop
scas
mov
pop
popa
cmp
sub
mov
cmpsb
push
pop
cs
sbbl
divb
xchg
test
addl
repz
leave
mov
push
jmp
andl
pop
cmp
inc
ss
mov
test
ljmp
jp
mov
popa
gs
addb
fidivrl
mov
int3
adc
jmp
sti
pinsrw
push
pop
sub
bound
stc
or
xchg
sub
pop
mov
lret
imul
adc
sbb
sub
sahf
adc
xchg
dec
jne
inc
movsl
lret
dec
xchg
jmp
pop
je
mov
ljmp
andl
testb
or
rcrb
xchg
jbe
fidivrs
fstl
pop
cmp
and
push
xchg
add
mov
aad
cmp
push
clc
bound
sub
mov
je
dec
cs
mov
cmc
mov
fmuls
int
sub
rcl
mov
pusha
cmp
xor
mov
pop
adc
push
cli
out
and
mov
insb
bound
shl
out
push
aaa
dec
aas
andl
mov
frstor
jnp
push
repz
adc
fwait
icebp
jnp
mov
fstps
jecxz
je
jmp
mov
movsl
pop
popa
push
clc
or
and
sbb
bound
ss
mov
int3
push
lock
push
shl
jbe
xchg
pop
inc
sti
lcall
std
nop
dec
cmp
mov
mov
mov
inc
and
divb
cmpsb
adc
les
mov
mov
sub
cmpl
sti
in
hlt
ljmp
stc
pop
xchg
jb
mov
lret
push
dec
incb
insl
cltd
fstp
shrl
fdivs
int3
ja
and
daa
inc
dec
iret
lock
arpl
mov
xor
pop
or
pop
les
scas
insl
push
fs
and
push
adc
pop
xchg
and
iret
cmp
fldl
ret
sahf
je
mov
les
inc
xor
fldln2
push
jg
mov
sub
movsl
lock
rcr
or
pop
pop
sti
xchg
test
add
mov
shlb
imul
cmp
inc
push
jbe
adc
in
sbb
ja
scas
and
in
dec
imul
fdivr
jg
adc
add
pop
push
fs
int
sub
iret
xor
inc
dec
mov
sarl
in
xor
cld
movsb
mov
shll
dec
adc
jecxz
std
lret
mov
mov
mov
mov
in
or
shll
ret
pop
xor
lods
pop
andb
xchg
sub
push
enter
jp
cmovl
call
dec
cmp
in
pop
jg
or
lea
cmp
daa
into
les
jecxz
or
xchg
sub
fcmovnb
xor
cwtl
arpl
clc
aas
adc
dec
loope
jbe
sub
repz
adc
pop
jp
adc
cwtl
jl
loopne
dec
mov
call
aad
pop
mov
jno
cmp
stc
in
repnz
adc
lahf
add
mov
cmpsl
xchg
push
dec
xlat
in
cmp
mov
mov
xlat
es
xchg
fadd
xor
mov
sbb
stos
or
fistps
jae
fmulp
insb
sti
dec
sbb
outsb
and
jae
rorl
xchg
xor
fnstenv
cmp
dec
push
dec
mov
fstpl
or
sub
jmp
cmpsl
cmp
mov
or
andb
cli
outsb
jmp
testb
push
mov
xchg
adc
pop
popf
inc
and
pextrw
pushf
sbb
mov
mov
and
add
xor
lock
in
into
les
sub
jne
mov
add
aam
or
sub
mov
xchg
pop
sbb
lahf
jle
jp
ret
pop
jg
fbld
sti
and
sbb
lock
leave
mov
sbb
rolb
push
insb
lcall
je
shr
mov
jp
mov
mov
xchg
fisubs
sub
sbb
mov
test
lods
adcb
nop
stos
xor
rorb
ficoml
dec
std
dec
repz
outsb
inc
add
ja
dec
or
and
mov
lcall
push
fwait
gs
fnstsw
lret
xchg
adc
xchg
xchg
filds
sbbb
test
cltd
daa
add
mov
test
pushf
lock
int
daa
outsb
fs
pushf
sbb
aaa
pop
sti
addr16
shrl
or
xchg
fs
scas
push
mov
in
push
jg
int
cmc
insl
or
add
fimuls
ljmp
sbb
jecxz
xchg
adc
cmp
movsl
hlt
bound
and
mov
xor
jmp
ds
jge
je
in
sbb
in
jb
pop
sbb
aad
arpl
outsb
or
jne
lret
insl
enter
daa
mov
repz
mov
jmp
mov
push
dec
or
lea
add
and
and
es
addb
jmp
mov
out
cli
addr16
repz
addr16
and
mov
test
mov
inc
mov
xchg
lret
push
in
dec
sub
mov
cmp
xor
push
cmpl
lds
jno
pop
ja
js
sbb
fimull
aam
sub
sub
cwtl
leave
xlat
fstps
lahf
xor
fistpll
inc
cmp
xor
xchg
lret
jmp
int3
jnp
nop
fistpll
xacquire
inc
pop
inc
clc
add
push
add
fsubp
cli
int
push
cmp
test
incb
push
stos
pop
repnz
aam
movsb
jb
inc
or
repz
shl
es
icebp
or
sbb
add
inc
cs
mov
push
mov
movups
adc
jp
xchg
adc
dec
loopne
cmpsl
lock
addb
jno
aad
cltd
sbb
sbb
sar
and
in
jge
in
mov
fcmovnu
scas
jbe
mov
and
pop
xchg
mov
popa
dec
movaps
pop
outsl
lcall
push
lods
xchg
xchg
repnz
jmp
sbb
inc
ljmp
pop
mov
xchg
lcall
push
jns
push
or
fucomp
sbb
paddsw
es
adc
fpatan
jmp
xchg
aam
int3
repz
in
xchg
lahf
xchg
or
mov
test
mov
cmpsl
mov
das
push
popf
mov
imul
xor
mov
add
pop
test
mov
mov
xchg
sti
sar
push
or
andb
or
push
jge
xlat
jg
inc
movsbl
cmpb
sti
int3
cmp
call
or
test
negl
fwait
cmp
fidivrs
xchg
cmp
xor
stos
cmc
int
scas
push
jno
push
xchg
js
cmp
in
dec
sub
mov
jne
add
rorb
incl
lods
clc
lock
ficoms
mov
call
dec
cmpl
xor
add
fdivl
cltd
jl
mov
push
or
and
sub
mov
mov
push
addr16
cmpb
jl
sbb
ljmp
out
jnp
repz
or
in
js
xor
mov
rol
jne
jmp
adc
ljmp
lret
jmp
xchg
inc
cmp
sbb
stos
fildl
sub
mov
loop,pt
pushf
sahf
es
cmp
rorl
into
push
divb
loop
ljmp
jecxz
arpl
mull
adcb
addr16
out
in
adcl
loop
pop
jge
test
sbb
stos
stos
xchg
movsb
lds
cld
int3
gs
subl
int3
add
cmp
stos
xor
inc
sti
pslld
mov
scas
sbbb
dec
pop
lea
imul
mov
xchg
add
fiaddl
les
cld
pop
loopne
push
mov
js
or
xor
pop
xor
cs
mov
xor
and
out
jp
jmp
xlat
push
cwtl
mov
fs
scas
push
fidivl
or
pusha
sahf
mov
fmuls
je
mov
out
scas
and
cmp
imul
push
mov
aaa
mov
pop
jns
hlt
call
mov
cmp
sub
negb
cmp
pop
push
psubusw
mov
sarl
cld
lds
es
xchg
and
push
pop
cmp
xchg
mov
adc
jae
aam
stos
ja
mov
dec
test
pop
icebp
cmp
xchg
bound
pop
dec
cli
cltd
mov
push
cld
push
push
sbb
mov
mov
jnp
sahf
jo
xor
cli
cld
out
fistpll
ss
inc
arpl
invd
xor
cmp
pop
push
sbb
lret
cmp
jmp
pop
jle
repnz
push
jl
inc
loope
jnp
jle
jno
or
pop
repz
mov
dec
lcall
rorl
cmp
js
adc
and
push
in
aad
push
pop
fisubrs
add
xchg
icebp
xchg
cmc
in
pusha
arpl
lcall
dec
pop
cwtl
jo
test
jnp
in
adc
sbb
into
testl
or
cmpsb
bnd
divl
lods
jmp
fwait
test
and
inc
xor
or
lods
movsb
mov
push
adc
mov
jge
imull
out
addr16
lds
pop
sbbl
jle
out
mov
test
in
divb
dec
sbb
paddsw
in
jle
push
stos
mov
icebp
fnstsw
add
jmp
pushf
inc
pop
aam
jbe
or
clc
fistps
dec
fisttps
ret
lret
imul
jg
cmc
mov
inc
dec
push
lret
pop
xor
mov
mov
sbb
and
add
lahf
sub
loopne
cli
mov
dec
pop
jle
cmpb
xchg
pushf
mov
xor
cmc
loope
jmp
jns
jne
mov
jb
insb
push
jg
jbe
gs
orb
test
scas
push
pop
int
mov
hlt
cmpl
std
add
or
and
nop
push
sbb
and
mov
stc
mov
xor
add
pop
jnp
out
aad
push
mov
mov
ds
inc
repnz
pop
xchg
sahf
sbb
pop
das
jae
inc
cmp
jle
not
je
xchg
shlb
dec
mov
pop
lods
sub
push
ds
repnz
and
ret
cwtl
sub
cmp
stos
xchg
adc
sbb
cmpsb
push
fnsave
leave
cld
cmc
repnz
sub
fdivs
cmp
cmp
je
mulps
inc
mov
xchg
xchg
mov
sub
mov
daa
rolb
sbb
outsl
sub
outsl
pop
dec
aaa
add
ja
xchg
clc
and
sub
test
xchg
movsl
mov
aas
jp
inc
mov
dec
loope
notl
add
int3
mov
cmp
movsb
test
movsl
imul
cltd
movsb
int3
arpl
out
jmp
hlt
clc
cmpsb
inc
lahf
or
jno
mov
in
or
mov
jl
pop
aad
push
mov
xchg
sub
sbb
xor
repnz
push
push
mov
sub
ja
out
push
in
dec
mov
ret
xor
or
out
xor
stos
icebp
dec
xchg
dec
loope
lahf
imul
lret
lods
jmp
in
movsl
add
popf
adc
daa
sub
adc
and
test
sbbl
pop
addl
jge
sub
mov
jmp
lret
ljmp
dec
test
daa
loopne
test
js
adc
pop
sti
mov
lds
pop
jne
loope
fnstcw
repnz
int3
pushf
mov
lahf
sahf
stc
xchg
aam
cwtl
sbb
sahf
or
cmp
add
mov
repnz
ds
and
ret
sub
mov
rcrb
xor
mov
lock
xchg
out
lods
add
inc
repnz
mov
shlb
cmpsl
lret
cld
mov
cld
xor
inc
test
inc
fcoms
ret
sarb
and
dec
cmp
sahf
call
inc
loopne
cmpsl
mov
scas
imul
nop
icebp
scas
ror
push
fcomp
adc
sar
clc
fsubrl
js
push
cmpsb
mov
push
out
mov
mov
test
stos
push
lock
shrl
es
test
outsb
dec
mov
iret
daa
pop
mov
adc
movsb
cmp
push
sub
sub
inc
rep
test
mov
jmp
mov
imulb
sbb
add
ja
xor
xchg
outsl
xor
mov
lret
cmp
sbb
fists
xor
dec
push
push
adc
scas
fdivrs
add
jb
pop
iret
sub
sbb
test
inc
mov
push
pusha
lret
movsl
ret
jns
sahf
repz
popa
adc
imulb
pop
rorb
fsubl
pusha
lea
jns
imul
cld
inc
pop
ss
or
fistl
shrl
push
pop
jge
imul
es
pop
sub
lret
out
lods
cmp
inc
push
mov
dec
dec
insb
push
sbb
stos
pusha
js
repnz
int3
xchg
fbstp
cmp
stos
xlat
stos
movsb
sub
gs
push
mov
jbe
pop
mov
dec
and
adc
lret
lea
test
jecxz
sbbl
data16
loop
pop
pop
insl
dec
ja
dec
insb
cmp
mov
dec
pop
sub
aad
or
dec
dec
pop
es
or
incb
and
out
mov
inc
push
mov
repnz
dec
jg
inc
into
lods
pop
data16
dec
lock
jb
out
inc
nop
test
adc
ja
push
cmp
add
sbb
push
push
fmull
adc
xchg
cmc
inc
les
mov
mov
and
test
popf
sbb
fincstp
mov
pop
xor
in
es
mov
push
inc
cs
in
adc
insb
mov
mov
pop
mov
jo
cmp
dec
xchg
or
lods
xchg
repz
scas
xchg
pop
xor
jb
je
xor
daa
jp
mov
movsb
test
lahf
xor
pop
jp
popf
scas
adc
dec
out
mov
into
test
aad
mov
and
out
and
pop
jmp
scas
mul
cwtl
int3
sub
lcall
dec
sbb
cwtl
pop
mov
stc
sub
hlt
lods
lock
ja
test
jno
inc
in
and
jl
popa
hlt
lds
jmp
fwait
sbb
mov
and
mov
hlt
lret
inc
sub
inc
or
pop
mov
bound
stos
in
inc
mov
jns
xchg
mov
pop
test
push
lea
ret
clc
movsl
divb
sub
mov
insl
fbstp
sahf
xor
xchg
mov
push
pop
inc
push
push
jecxz
push
cltd
sti
out
in
mov
dec
out
fsubrs
push
das
outsl
loopne
std
sub
bound
movsb
or
sub
push
imul
sbbb
mov
insb
mov
mov
in
or
add
rcrl
pop
and
es
lret
leave
lods
cmp
lods
pop
cmp
inc
int3
and
xor
xor
mov
loopne
cltd
ficoms
imul
lcall
add
shr
popa
lret
inc
pop
mov
pop
out
sti
adc
je
sti
push
xchg
cmp
mov
add
sbb
push
aad
or
enter
jmp
js
mov
xchg
out
cmp
jge
cmp
jns
enter
xchg
stos
cmp
add
lods
out
pop
int3
imul
inc
jbe
test
and
enter
test
into
inc
in
xor
push
add
xchg
push
xchg
cmp
cmp
jb
sub
fcomps
fs
cmc
xchg
loopne
test
fnstsw
outsb
imul
mov
std
or
lea
pusha
cwtl
sbb
stos
xor
aam
push
jns
adc
shrl
xor
inc
jb
dec
mov
in
jge
test
push
ljmp
mov
ss
int
sbb
lcall
push
outsl
jp
xor
or
imul
mov
jle
in
adc
outsl
or
andb
rolb
pushl
sbb
outsl
popf
cmp
lods
pop
hlt
jno
pop
ret
xlat
in
addl
hlt
sub
jb
pop
sub
insb
push
aam
stos
jp
cwtl
push
divl
ret
call
ficoml
mov
imul
ja
and
jg
sub
fcoml
sbb
mov
mov
mov
sub
fidivl
cli
loopne
sbb
pop
add
pushf
lea
je
ja
push
push
in
test
sbb
sbb
mov
mov
test
testl
push
into
mov
das
sub
out
mov
sti
shl
popf
stos
xor
je
dec
adc
push
shll
cmpsb
sub
dec
or
cli
add
pop
stc
pop
incl
in
pop
pop
or
fsubrl
cld
adc
jle
dec
jb
jge
jecxz
sbb
push
add
push
outsl
cmc
push
sbb
mov
push
leave
into
loope
mov
inc
sub
and
mov
jp
pusha
das
aaa
stos
aas
bound
fisttps
test
jge
stos
in
pop
and
mov
stos
mov
es
ret
addb
adcl
fstps
cmp
ret
cmp
rcrl
out
lea
into
and
pop
adc
mov
adc
push
rcrb
ss
rorl
lods
in
inc
cs
cs
sub
xor
dec
inc
or
sub
test
mov
push
shrl
xchg
aam
cmc
xchg
repz
dec
iret
push
and
test
mov
cmp
ret
mov
dec
pop
test
mov
jle
popa
popf
cld
and
pop
pop
pusha
outsb
xchg
mov
sub
xor
mov
cltd
shll
and
sub
mov
mov
mov
xchg
repnz
push
fwait
xchg
xor
mov
shll
loop
or
insl
sbb
mov
and
mov
mov
nop
add
icebp
cld
or
fwait
inc
ret
jnp
jno
in
pop
jo
ds
mov
cmp
fst
cmpsb
cwtl
imul
insb
pushl
add
inc
adc
push
sbb
imul
pop
or
mov
push
push
mov
xchg
leave
xchg
jmp
in
sbb
cmp
insl
fidivs
xchg
dec
or
xchg
push
punpcklbw
scas
in
add
and
aas
inc
sub
push
xchg
lret
inc
mov
push
subb
mov
inc
movsb
cwtl
clc
in
sarb
ret
movsb
and
lods
push
add
sahf
sbb
jg
std
add
clc
or
mov
addr16
loope
xchg
outsl
lahf
das
xor
push
xchg
shll
push
pop
fisttpll
fistpll
dec
rcl
pop
push
aaa
push
mov
mov
jecxz
xlat
inc
ret
ljmp
pop
fidivrs
jb
test
je
cmp
imul
cmp
cmp
movsl
cmpsl
and
mov
sbbl
or
jle
fs
dec
jge
sbb
sbb
fldl
ret
stos
mov
movsl
and
cs
fstpl
dec
fwait
lret
lea
lods
xchg
punpcklbw
rclb
sbb
jo
xchg
pop
inc
mov
subl
mov
inc
sub
dec
mov
push
pushw
push
or
push
scas
push
je
rorl
mov
push
jmp
fdiv
dec
mov
xchg
je
ficomps
movsb
xor
cmp
lahf
lock
jl
lock
xchg
mov
xchg
or
jae
xchg
and
xchg
data16
cmp
out
dec
aaa
push
ljmp
xor
imul
out
fcomps
loope
pushf
add
inc
ss
repnz
icebp
int3
les
xorl
out
enter
fists
mov
cmpsb
sub
gs
sbb
adc
bound
pushf
cs
sti
inc
ja
loopne
jne
fistps
and
or
rclb
call
dec
pop
ret
pushf
es
adc
inc
cmpb
in
or
push
xchg
icebp
out
pop
fsubrp
mov
pop
imul
mov
cmp
push
push
push
mov
fbld
jp
push
ficoml
in
out
xor
lds
mov
jo
add
xchg
inc
dec
or
pusha
jo
xor
mov
xchg
inc
scas
sbb
pop
fisubl
mov
pop
sbb
sbb
clc
das
cmc
cmpsb
push
cmp
loopne
into
out
sub
mov
or
outsl
jnp
mov
pop
ret
xchg
idivb
or
push
pop
int
ds
or
xor
or
cs
pop
add
sub
sbb
sbb
sub
pop
loop
lds
cmp
push
inc
pop
dec
and
movsl
jae
xor
imul
cli
mov
push
push
js
sub
mov
insl
and
daa
push
xchg
dec
std
mov
arpl
shrb
in
xchg
adc
jno
mov
add
nop
imul
sub
mov
out
or
push
shrb
pop
adc
add
inc
sub
xchg
sub
lahf
int
cmp
jg
mov
xor
outsl
dec
mov
into
and
std
cmpsb
loop
adc
add
sub
jns
imul
mov
push
push
pop
test
fcoms
pusha
rcrb
insl
or
push
inc
jecxz
adc
fldt
sub
aam
lods
aad
not
adc
inc
dec
cmp
ret
jl
imul
in
push
aam
fpatan
mov
lods
jle
pop
rclb
push
add
cwtl
jbe
leave
push
shll
dec
xor
pop
mov
outsb
lea
sub
add
ret
lfs
add
out
and
sbb
inc
ret
sbb
cwtl
insl
mov
shl
adc
pop
scas
cmc
xchg
mov
and
js
jne
gs
inc
push
or
mov
das
dec
lahf
bswap
in
cs
in
fstpt
inc
mov
jecxz
scas
push
nop
jo
sub
add
xor
adc
mov
scas
pop
mov
nop
mov
pushf
mov
aad
pop
loopne
das
or
lock
adc
aaa
out
in
sahf
repz
repnz
or
repnz
inc
sbb
push
and
lea
inc
push
mov
xor
push
shll
mov
jge
ljmp
in
lea
enter
pop
dec
xchg
lret
daa
arpl
imul
pop
into
pop
mov
data16
adc
mov
or
adc
adc
enter
enter
movsb
mov
inc
lods
lret
xor
xchg
mov
push
js
fildll
paddusb
jmp
mov
jp
push
cmp
sub
movsb
test
in
inc
push
enter
lods
xchg
jno
test
stc
mov
and
lds
inc
jp
cmp
imul
mov
cld
sti
inc
loopne
dec
cld
xorb
orl
xchg
rolb
hlt
adc
cmp
es
in
adc
sbb
cmp
sti
pop
bound
push
lret
lcall
fmuls
add
out
mov
add
push
gs
rorl
scas
sub
push
out
mov
or
mov
loope
adc
sub
mov
inc
int3
enter
sbb
push
rorl
lahf
sbb
or
fsubrp
out
pop
inc
add
mov
add
loopne
push
jmp
cltd
shll
mov
cmp
dec
outsl
sub
mov
lock
lea
lahf
pop
rcrb
push
jl
outsb
push
or
das
pop
sub
sub
jne
in
mov
addr16
insb
movsl
xor
mov
add
or
ret
jns
xchg
out
scas
movsb
mov
ljmp
sti
dec
xorl
xchg
lea
stos
mov
inc
mov
std
je
add
test
and
or
add
mov
dec
and
xchg
cmpl
cmp
adc
cmpsb
test
xorb
push
sub
or
push
loopne
mov
push
movsb
pop
sub
xchg
push
out
add
iret
js
cltd
pop
imul
leave
popa
jbe
pop
aaa
pop
fdivrl
xor
jp
loop
fidivrs
cmp
sti
lcall
sbb
lcall
xchg
jns
add
data16
ss
add
popa
mov
mov
push
sbb
jbe
testb
mov
ss
aas
in
shll
es
pop
mov
or
pop
and
test
mov
int
fs
sbb
mov
add
jbe
loop
out
insl
mov
popa
xchg
pop
fidivl
jns
aam
out
or
ja
movsb
sahf
sti
or
sub
cmp
mov
sub
cli
cwtl
mov
sbb
scas
movsb
push
shr
sub
mov
or
in
nop
mov
pushf
mov
xor
in
scas
fsubrs
mulb
adcl
lahf
ds
xor
shll
xor
adc
idiv
test
daa
cmpsb
clc
ret
dec
int3
in
push
stos
and
push
mov
mov
jbe
std
js
sbb
roll
mov
xchg
movsb
cmp
mov
cmp
pop
ret
fdivs
lcall
rclb
add
push
sbb
mov
notl
mov
scas
pusha
in
pushf
cmp
mov
pop
mov
lret
cltd
jo
and
lcall
lds
xchg
fstpt
push
and
js
lret
and
or
jnp
or
call
jnp
aad
jle
mov
sarl
cmp
ljmp
into
int3
mov
jmp
push
inc
rcrl
add
sub
inc
xlat
or
cmpsl
pop
test
sbb
jecxz
cmc
outsb
push
inc
pop
stos
pop
test
sbbl
out
imul
das
aas
cltd
movq
dec
es
mov
fdiv
mov
scas
hlt
mov
scas
movsl
sbb
lahf
jne
xchg
jmp
add
sbb
bound
or
test
ss
pop
mov
notl
mov
or
adc
jns
aad
cmp
xchg
adc
scas
stos
add
fwait
mov
pop
nop
mov
cmp
add
mov
mov
sub
push
jmp
push
mov
dec
sub
call
sar
pop
loope
mov
mov
cmp
xor
outsl
icebp
jp
mov
xchg
into
inc
xchg
stc
jg
cli
mov
je
rcrb
test
je
push
or
stos
mov
inc
xchg
add
idivl
jecxz
sbb
sub
inc
aad
ja
jl
fdivl
cmp
add
lock
push
jnp
fisttps
insb
lea
push
repz
adc
pop
pop
inc
and
iret
jbe
push
ficoms
cwtl
in
inc
mov
inc
and
sti
hlt
rcl
cmp
pop
fisubrl
cld
and
loopne
xchg
rcl
mov
xchg
or
sbb
sbb
outsl
sahf
mov
filds
mov
das
dec
les
xchg
mov
dec
test
cltd
rcl
int3
out
loop
fwait
test
jae
sbb
rcrl
mov
push
jmp
push
aas
call
fbld
xchg
inc
mov
mov
leave
mov
cmp
stos
outsb
insl
repz
movsl
mov
pop
hlt
sub
enter
push
cmp
cs
jg
adc
pusha
inc
cmp
mov
mov
cwtl
scas
pop
sar
jmp
sub
or
mov
shl
inc
arpl
cmp
or
lds
lcall
push
cltd
je
pop
xlat
ret
loope
ss
jge
sbb
sti
out
or
add
lods
lahf
repnz
data16
mov
xor
jo
mov
mov
pop
push
pop
push
sbb
out
pop
pop
inc
adc
mov
pop
cmp
andb
ja
orb
in
push
or
and
adc
outsl
clc
ret
subb
and
arpl
aaa
cmp
push
xchg
mov
lret
xor
insl
addr16
dec
jbe
cmp
es
mov
inc
sbb
outsb
mov
push
push
mov
mov
xchg
divb
lret
push
cmc
sub
mul
xchg
cltd
xlat
repz
cwtl
ret
jg
in
pop
or
nop
pop
ja
cld
sbb
fistl
xchg
sub
test
cmp
jge
push
push
aas
push
lea
loop
push
pop
adc
lea
add
movsb
inc
mov
sub
mov
inc
pop
push
in
dec
mov
dec
jb
mov
cli
jge
pusha
pop
mov
popf
xor
inc
repz
or
scas
sub
test
cmc
adc
iret
mov
not
push
mov
lret
inc
lea
pop
movsb
cs
faddl
je
push
xor
call
loopne
in
roll
aad
sub
shll
pop
popa
mov
cmp
xchg
push
addr16
stos
adcl
mov
cmpsb
inc
mov
xor
or
jl
adc
sbb
lods
sub
sahf
insl
jmp
dec
cmp
arpl
sub
idivl
jmp
pop
push
mov
out
push
rolb
addb
out
mov
jo
lret
ret
cmp
rcl
adc
or
pusha
mulb
clc
pop
or
xchg
pushf
mov
ljmp
into
add
xorl
sub
xchg
add
push
in
cli
scas
sahf
pop
rolb
ss
call
sahf
add
cmpsb
cmc
cmp
test
xchg
mov
loope
es
rcll
cmpsb
add
and
lods
mov
sbb
outsb
lahf
leave
fisttpll
pop
int
stc
jg
nop
lock
pop
jl
inc
repz
scas
movsb
fstps
dec
add
lahf
cld
fistpl
lcallw
mov
fidivs
adc
lock
insb
sbb
dec
xor
add
pop
cli
xchg
add
out
jl
xor
fdivrs
mov
clc
lods
sub
aaa
pop
cmp
push
leave
mov
pushf
cld
cmp
imul
jne
or
incl
mov
xchg
sbbb
xchg
stos
cmp
jmp
inc
xor
imul
or
movb
adc
mov
rclb
add
aas
ja
inc
shll
jb
push
fnstenv
stos
adc
xchg
fisttps
orb
mov
adc
sub
jp
mov
js
out
testl
and
dec
sub
mov
cs
mov
scas
ret
idivb
cmp
lds
jbe
mov
cmpsl
mov
inc
mov
rol
aad
idivb
testl
adc
lret
adc
lock
dec
mov
push
popa
mov
lods
ds
mov
mov
mov
jecxz
push
ss
sbb
notb
dec
in
mov
ret
inc
orps
mov
xchg
xchg
lret
inc
xor
orb
adc
fldl
adc
inc
sbb
adc
adc
aas
xchg
jle
sahf
mov
jecxz
shlb
les
add
push
jp
scas
and
dec
mov
popfw
out
aad
dec
sub
push
xor
roll
cmp
or
sbb
pop
dec
sbb
es
bound
sub
sahf
push
push
sub
cmp
out
mov
push
cmp
cwtl
mov
loopne
clc
jmp
pop
sbb
stos
and
mov
rcll
mov
xchg
sarb
jge
cmp
cmpsl
imull
ljmp
pushf
loop
std
sbbl
sub
lods
xchg
ds
stos
outsl
stc
mov
es
imul
insb
jne
cmp
dec
popf
aaa
out
xchg
movhlps
cmp
inc
adc
pop
lods
sbb
inc
sbb
push
stos
dec
cmp
mov
dec
jnp
dec
cmp
xor
cmc
mov
sbb
cmc
pop
jbe
pusha
pop
mov
fistl
and
out
in
mov
mov
fistpll
in
jae
movsb
jmp
popa
jns
insl
fldenv
add
cwtl
and
mov
test
in
pop
and
sbb
nop
jmp
insb
push
mov
fs
stc
pop
dec
push
mov
jns
cmp
shlb
and
dec
inc
into
aam
xor
das
jnp
lea
das
rcll
sub
jae
mov
fwait
loop
mov
pushf
aas
sub
adc
arpl
mov
xor
or
xor
fwait
cmp
xor
mov
in
or
jl
add
sbb
adc
popf
inc
inc
cmovp
or
sub
push
mov
adc
push
adc
add
jns
rorl
jno
pop
mov
dec
mov
cltd
ret
lret
ljmp
lret
sbbl
scas
cli
inc
xchg
fstps
inc
cmp
sbb
add
xchg
push
adc
in
cwtl
jae
out
pop
sub
push
rol
stos
js
sbb
imul
jge
lcall
mov
loope
mov
add
cmp
aad
fldl
lock
int3
mov
popa
add
cli
lods
pop
in
dec
int
mov
enter
push
pop
cld
pop
mov
xchg
adc
jmp
jge
cmp
mov
jo
jns
cmp
into
test
sub
mov
jae
repz
xor
cmpsb
mov
cld
adc
adc
mov
pop
sahf
inc
dec
bound
adc
in
roll
ds
dec
mov
pop
enter
push
test
pop
rcrl
jecxz
out
fnsave
out
bound
or
add
and
in
mov
lock
jno
popf
inc
shr
jl
stos
rorb
js
cmpl
mov
out
adc
jle
out
fildl
loop
lcall
push
mov
fs
xchg
stos
xor
dec
jne
sbb
push
ficompl
mov
mov
icebp
ds
and
mov
dec
andb
jl
or
xor
fcmovb
arpl
jmp
sbb
data16
das
lods
mov
mov
mov
rolb
addl
push
pop
and
mov
sub
aad
mov
dec
add
xchg
shl
jge
in
ja
fidivrs
fmuls
test
mov
lret
adc
fcmovbe
mov
sub
sub
mov
jbe
call
stos
out
fcoms
rcrb
movsb
pusha
add
xor
adc
or
xor
and
dec
pushf
clc
sbb
popa
xchg
push
popf
inc
sbb
inc
fsubrl
fiadds
adc
pushf
jns
loop
rclb
mov
xlat
sub
pop
mov
inc
and
mov
gs
mov
mov
add
into
pop
ds
or
stos
popa
dec
sti
xchg
cwtl
fnstenv
mul
jp
stos
dec
mov
pusha
inc
inc
out
aad
mov
jle
mov
cmpsb
in
sbb
hlt
cmp
out
mov
fsubrs
jns
or
adc
pop
push
sub
sub
cli
mov
in
pop
mov
inc
mov
aad
mov
adc
push
sub
in
sarl
aam
jno
jecxz
inc
push
push
mov
xchg
mov
or
loopne
out
adc
lret
xchg
cld
sbb
jo
pushf
cmpsl
aas
sahf
xor
cli
and
loope
mov
push
pop
xor
xor
inc
xchg
or
jne
dec
loop
popa
add
push
sbb
mov
xchg
xor
xor
mov
dec
dec
bound
mov
pop
mov
mov
inc
mov
pop
push
xchg
ret
xchg
ljmp
addr16
or
call
inc
stos
cld
cltd
and
inc
pusha
mov
sub
lods
test
cli
dec
mov
imul
ret
dec
hlt
in
jae
dec
test
imul
or
push
mov
mov
insl
nop
xchg
push
push
aaa
push
xchg
pop
jb
adc
cmp
jg
jecxz
xchg
inc
mov
fcomip
movsl
sub
pop
mov
xchg
ficoml
xor
js
fidivrl
subl
loop
push
test
aas
shlb
int3
lret
xlat
xlat
mov
lret
push
repz
loop
nop
xchg
mov
jo
xchg
mov
call
inc
and
ljmp
das
and
sti
ds
push
cmp
stc
mov
xchg
popa
sbb
cmpl
cmpsb
gs
push
fistpll
fiadds
or
push
sub
mov
roll
fwait
jo
inc
adc
push
dec
jg
mov
jg
lret
movsb
fstl
aaa
dec
les
je
adc
and
dec
jmp
cmp
xchg
mov
xchg
test
stos
into
ret
pop
cs
ficoml
fdivrl
sahf
aaa
cmp
cld
gs
imul
or
outsb
fimuls
cmpsb
call
js
lcallw
push
mov
fnstcw
mov
xlat
out
jne
fs
adc
stos
into
jle
mov
push
divps
cmp
bound
dec
xorb
nop
pop
fs
pop
xchg
out
in
push
jp
jge
fisubrs
mov
ljmp
pop
and
addr16
mov
mov
andl
movsl
cmp
adc
cltd
xor
push
inc
shrb
test
inc
mov
add
test
add
mov
adc
add
or
jb
fs
aad
fcmovbe
insb
push
pop
lahf
mov
mov
loop
cmpsl
jg
mov
cli
rcl
jle
enter
clc
cmp
xor
push
cmp
movsl
sub
imul
cs
cltd
test
aas
ljmp
jl
outsb
les
push
pop
inc
pop
je
xchg
mov
testb
rorl
stos
push
leave
dec
xor
sbb
and
and
sub
push
push
aad
pop
sub
mov
push
dec
popf
test
pushf
loop
stos
mov
insl
aam
jg
xor
jb
std
jne
call
xchg
movsb
movl
jae
lcall
jecxz
xchg
push
addl
pop
inc
outsl
sub
mov
movlps
lock
cmp
pop
xchg
rcl
stc
cld
and
dec
lahf
mov
data16
or
in
xchg
sub
mov
jle
cs
aam
test
and
lret
fidivrs
out
lahf
adc
mov
leave
repnz
lock
mov
jmp
fs
sbb
scas
adc
push
sbb
sub
mov
fidivl
xchg
cs
xor
sbb
into
pop
sarl
mov
adc
adc
xchg
popa
mov
add
sbb
jb
jb
les
out
xchg
add
subl
cmpsb
mov
out
das
into
mov
cmp
into
in
jnp
mov
pop
clc
mov
cmp
push
das
loopne
scas
inc
jecxz
out
stos
outsb
inc
mov
mov
icebp
dec
fstpt
push
leave
orl
rolb
ret
clc
int3
idivb
std
adc
mov
pop
add
push
mov
orb
out
movsb
cli
aaa
into
push
cmp
adc
push
adc
mov
incl
cltd
popa
in
ds
adcb
push
jbe,pt
inc
cmp
pusha
mov
neg
or
mov
test
fs
cmpsb
fisubl
pushf
outsb
mov
mov
push
leave
cltd
aas
mov
fld
lods
xchg
or
or
and
clc
xchg
and
xchg
inc
aaa
jbe
xchg
aad
mov
pop
mov
mov
cwtl
lahf
jbe
sbb
push
push
in
ljmp
lcall
div
stc
push
cmp
pusha
mov
mov
sbb
xchg
lds
outsl
push
push
pop
cmp
pop
jge
scas
jb
mov
test
addr16
or
std
outsl
es
xor
pusha
in
adc
pop
mov
daa
jnp
or
cld
popa
hlt
popl
cmp
movsb
filds
cmpsl
adc
mov
fisttpl
loope
test
mov
xor
xor
dec
fmuls
mov
cmpl
jns
jmp
aaa
imul
inc
mov
rcrb
sub
or
xchg
lods
mov
jp
add
sti
stos
pop
inc
dec
pop
adc
or
mov
dec
jmp
dec
in
push
jne
sub
sbb
sbb
gs
bound
sub
mov
sub
adc
sti
push
addr16
cmc
sub
es
test
frstor
lea
iret
mov
lcall
xchg
cmp
repnz
cmc
outsb
inc
call
lret
testl
loopne
test
cmp
push
cmp
adc
mov
outsb
mov
xchg
push
pop
or
nop
shll
inc
es
sbb
lds
idivb
popa
jmp
lcall
call
ss
fs
jne
sbb
enter
out
enter
and
xchg
mov
in
icebp
push
inc
decb
das
out
mov
and
fsubrl
in
xor
push
push
or
ret
pop
mov
fnsave
clc
repnz
mov
sub
orb
add
fbstp
movsb
cmp
jae
mov
mov
add
sti
xchg
xchg
pop
sub
rclb
inc
in
jno
cmp
icebp
cltd
mov
cltd
jecxz
inc
lods
cli
mov
mov
fimull
or
test
movsl
dec
pusha
clc
cmp
push
jae
aaa
or
cwtl
shrl
loopne
pop
data16
jne
mov
jp
imul
fsts
cmc
outsb
xchg
cmpsb
pop
std
int3
cmp
shl
jns
add
add
sub
adc
xor
ret
dec
stos
sbb
in
mov
mov
pop
imul
mov
outsb
rorb
in
pop
data16
lds
nop
inc
cli
test
mov
push
loope
lcall
call
test
xchg
jno
ret
and
xchg
jbe
adc
xchg
jge
lds
xchg
stc
sbb
mov
sbb
imul
pop
lcall
jp
xor
sti
jno
xor
sbb
movsl
mov
jp
sbb
inc
into
enter
hlt
shll
cwtl
dec
or
xchg
ret
jmp
in
dec
jmp
sub
cltd
xchg
ss
lods
fldl
out
jg
pushl
scas
dec
and
fst
dec
out
sbb
das
jns
add
stos
jno
rcrl
fiaddl
loopne
pop
aas
loop
pop
fldcw
jmp
xlat
jecxz
pop
jne
cmp
std
adc
stos
scas
scas
xor
dec
and
out
bound
mov
inc
xor
mov
lods
inc
sub
repz
cmp
leave
test
cmp
dec
add
in
inc
in
out
adc
hlt
jbe
test
lahf
push
xchg
or
add
mov
movsb
inc
inc
ret
cmp
pop
mov
pop
cs
in
inc
cld
icebp
mov
mov
dec
orl
mov
lds
add
or
pop
xchg
mov
push
push
jge
push
popf
insb
xor
mov
cmp
mov
pop
orl
jns
dec
mov
mov
mov
out
fimuls
dec
dec
mov
xchg
lcall
add
mov
shl
nop
push
inc
lea
xchg
cwtl
outsb
jge
cmpsb
or
or
enter
sbb
clc
mov
sub
adc
mov
xor
sub
push
out
incb
sbb
pop
pushl
add
lret
push
jge
mov
lds
mov
popf
xor
pop
in
mov
sbbl
ret
sub
mov
pop
inc
shrl
cltd
js
inc
sub
adc
push
and
cmp
inc
cmp
out
aad
mov
inc
icebp
jne
mov
orl
stos
fcmovu
inc
clc
xchg
lods
movsl
or
jne
in
xor
adc
pop
jl
test
sbb
clc
ds
mov
pop
adc
subb
mov
shl
sub
dec
mov
sbb
lret
js
scas
test
sub
jo
stos
stos
push
fistpll
cs
xchg
mov
cmpl
test
or
imul
pop
test
fcmovb
rcrb
dec
xchg
push
push
stos
mov
sub
or
xchg
inc
hlt
outsl
leave
mov
push
outsl
mov
andb
cmpsb
cmp
mov
sbb
fsubr
cmp
xchg
jg
in
push
xchg
jo
shlb
lret
imul
cs
xchg
aas
loope
sub
add
lea
sub
pop
mov
ret
out
push
pop
mov
xchg
jbe
ja
rorl
pushf
fst
adcb
sub
cmp
scas
in
sbb
lea
push
or
shlb
pop
push
inc
mov
mov
scas
pop
mov
je
lahf
dec
xor
or
aas
push
pop
add
push
jnp
stos
jle
scas
shr
pop
repnz
adc
test
stos
paddsw
mov
cltd
pop
push
arpl
xor
lcall
ja
fcmovnbe
out
xchg
into
lahf
and
push
add
cmpsb
fld
subl
cmp
inc
jbe
inc
inc
insb
aas
adc
sbb
or
xchg
lret
pop
lods
call
fwait
ds
add
testb
enter
incl
add
and
fwait
sti
data16
dec
add
sbb
mov
adc
xchg
mov
daa
jnp
scas
addr16
inc
push
jmp
cld
enter
cmp
aam
arpl
mov
and
rolb
add
mov
jp
testb
mov
cmp
mov
fwait
inc
lcall
add
inc
jle
pop
jmp
mov
pop
dec
inc
test
and
adc
dec
insb
das
add
cmp
popf
mov
mov
mov
rcrb
insl
inc
add
je
jmp
sbb
daa
loope
mov
xor
cmp
mov
xchg
push
push
testb
cmpsb
mov
pmullw
xchg
cmp
xor
cmp
jmp
mov
lods
nop
sbb
cmp
inc
rcr
cmp
lea
int
fiadds
out
jl
xchg
and
mov
xlat
xor
pop
fdivr
pop
dec
mov
cmpl
je
in
or
mov
xor
push
imul
in
fnstenv
cmp
pop
xor
stc
js
jne
adc
ds
std
repz
roll
xor
lock
mov
and
mov
lds
inc
adcl
fstps
push
je
push
outsb
push
sub
sbb
subl
ret
test
aaa
pop
arpl
lcall
add
dec
jno
mov
adc
scas
pop
cmp
lods
cmp
inc
adc
mov
cs
cmpsl
mov
imul
iret
scas
or
pop
jle
call
pop
repnz
arpl
push
pop
and
cmpsb
fcmovu
mov
sar
repnz
xchg
jo
cmp
pop
sbb
in
icebp
pop
adc
dec
xor
mov
ret
mov
pop
movl
ds
sub
and
adc
ljmp
mov
xor
mov
cwtl
sbb
ret
xor
pop
inc
test
insl
test
in
mov
pop
fiaddl
cs
fldl
repnz
hlt
mov
sub
scas
mov
imul
mov
daa
mov
pushf
pushw
xor
std
sbb
stos
add
stos
sub
mov
frstor
mov
mov
cmp
int
ds
mov
sub
sub
mov
mov
and
loope
pop
das
pushl
adc
pop
adc
ljmp
sbb
shrb
call
leave
int
mov
arpl
xor
or
mov
lods
stos
stc
mov
sahf
in
clc
add
sub
xchg
mov
lret
rcr
jne
cs
fs
pop
mov
sbb
pop
inc
mov
pop
mov
inc
xor
mov
rcrl
pop
jecxz
mov
je
fucomp
push
cmpsb
test
pop
loop
negb
push
push
test
stos
mov
fstp
fdivp
sahf
add
xor
jge
fisubrs
loope
dec
sarl
jns
into
fldcw
push
and
xchg
cmp
int3
dec
xchg
aad
in
sub
add
jge
cs
arpl
lret
mov
dec
jl
ret
xor
cld
jge
pushf
insb
nop
cwtl
inc
dec
dec
push
mov
dec
or
pop
add
leave
test
insb
push
jbe
pop
add
xchg
outsb
lcall
in
imul
pop
outsb
fsubrs
and
leave
jnp
sbb
lea
mov
movsl
cmp
jmp
aaa
rcll
inc
xor
inc
add
out
or
pop
sub
inc
xchg
mov
divl
data16
pop
mov
add
xchg
sub
and
cltd
adc
xchg
inc
mov
dec
or
push
movsb
sbb
and
inc
inc
cs
rcrb
lahf
addb
mov
pop
push
jg
lds
sahf
xchg
adc
fistl
in
pop
popa
cmpsl
and
pop
mov
pop
fldl
pop
fldcw
adc
std
mov
jle
ljmp
xlat
push
push
fcoms
es
into
xor
xor
pop
jns
jmp
aam
imul
pushf
xchg
dec
mov
cmp
cwtl
fistps
repnz
mov
jp
jge
inc
es
les
dec
jo
loop
nop
push
stos
int
stos
pop
movsb
sarl
xchg
or
sbb
je
cwtl
stos
es
xor
xor
lret
les
cmp
pop
lock
jns
add
pop
pusha
mov
xchg
sub
repnz
cmp
bound
lods
addr16
push
ja
fwait
inc
aad
data16
stc
das
stos
fcomp
popf
orb
mov
push
std
loopne
pop
int3
cld
test
outsb
mov
xchg
sub
adc
testb
loop
add
jp
xchg
jle
lea
add
pop
fwait
pop
rclb
into
lret
mov
cmp
inc
add
or
inc
mov
pop
adc
mov
fisubrl
inc
das
fcomps
es
pop
je
inc
test
inc
cmpsb
imul
mov
dec
sbb
and
jne
pushf
loop
sub
pusha
inc
mov
movsb
xor
lock
jg
in
dec
loop
lcall
jp
jae
out
jne
leave
sbb
es
or
lea
push
lcall
or
or
lretw
test
daa
daa
icebp
test
or
xchg
out
nop
imul
std
std
mov
jle
push
outsl
push
mov
scas
dec
inc
cltd
xchg
jbe
pop
decl
inc
lea
adc
jns
pop
mov
push
test
xchg
std
cmpl
int3
cld
outsb
or
mov
iret
stos
and
shrl
stc
jns
aam
push
sti
adc
cmp
adc
pop
add
mov
out
mov
dec
sbb
fwait
cltd
popf
push
mov
add
push
mov
jg
cmp
imul
pop
stc
pop
mov
xor
cmpsb
inc
insb
out
fscale
mov
xchg
addr16
push
mov
out
mov
xchg
inc
sbb
mov
fldcw
sti
cmpsb
sub
lds
jb
pop
pop
add
xchg
pop
fsubrp
fsubl
stos
pop
daa
fwait
push
lahf
mov
ret
lods
push
lods
cs
dec
jo
adc
aam
loope
test
mov
push
in
xchg
mov
push
shlb
outsl
jg
movsl
cmc
or
push
movsb
cwtl
cmp
pop
jecxz
jo
jecxz
leave
cltd
sub
daa
mulb
icebp
imul
and
mov
push
cmp
mov
jno
mov
jg
shlb
out
movsb
xor
jmp
add
cli
and
cmc
sbb
loope
orl
test
stos
scas
bound
in
clc
cli
inc
push
aaa
sbb
push
inc
lret
dec
aaa
pop
int3
or
jb
rolb
adc
jle
mov
icebp
lcall
jne
cwtl
mov
dec
sahf
lret
xchg
adc
jg
out
sub
int
sarl
outsb
cld
add
jg
fs
push
push
rclb
or
xchg
lahf
sbb
cli
icebp
sti
jbe
push
xchg
jge
mov
adc
mov
sbb
lds
loop
cmp
in
cmp
mov
inc
out
stc
jge
dec
in
cmp
jo
mov
push
sub
mov
mov
push
mov
push
xor
ljmp
popf
lock
pop
jp
and
popf
das
rcrb
call
popa
xchg
pop
or
fstpt
mov
fidivl
ds
push
xchg
fisttps
stc
clc
add
add
ret
fcmovne
xchg
inc
sub
cmp
cs
and
scas
pop
dec
push
sahf
fsubl
push
enter
and
inc
cltd
in
and
push
fists
ja
jb
hlt
sbb
jnp
scas
cs
outsb
xor
jb
imul
push
sti
push
test
aaa
pop
or
cmp
rcrl
xchg
mov
rcr
lahf
sbb
sti
pop
mov
adc
sub
scas
das
xor
sub
xchg
ljmp
inc
das
pushf
sub
sahf
mov
mov
repnz
xchg
lcall
sti
push
loopne
sub
in
xchg
mov
pop
inc
mov
pusha
or
ret
fdivs
dec
cmpsb
ret
popa
rcll
fsubs
jns
in
pop
mov
inc
stos
mov
pop
sbb
ljmp
xor
lds
mov
scas
push
xor
push
mov
sub
aad
lahf
popf
clc
rcr
lcall
dec
sahf
stc
xchg
inc
test
popf
cli
sub
loopne
or
pop
or
jno,pt
in
sti
push
out
imul
out
and
and
xorl
xchg
pop
fildl
adc
inc
adc
mov
out
add
fistpl
mov
rcrl
mov
mov
popf
clc
add
jecxz
loopne
jb,pt
cli
xchg
xchg
fsubs
int
mov
sbb
mov
add
inc
in
push
daa
mov
popa
push
mov
xor
or
sbb
adc
inc
mov
ss
sub
mov
jge
jne
dec
fdivrl
daa
pusha
arpl
sub
movsb
jp
inc
xor
out
gs
popf
cmpsl
orb
and
jmp
xchg
xor
inc
or
inc
sbb
scas
mov
shll
dec
fmull
movsl
in
pop
dec
and
imull
aaa
in
inc
jae
jb
aad
xor
repz
jnp
mov
enter
das
push
xor
enter
jg
xlat
in
sti
mov
ss
and
sbb
xor
jno
lods
inc
sar
mov
pop
pop
jp
lea
pop
jmp
cmp
dec
jp
sbb
inc
divl
stc
test
outsl
xchg
mov
fwait
sub
ret
xchg
pop
and
cli
pushf
imull
psllw
adc
into
out
push
fld
adc
les
into
adc
cmp
inc
es
scas
into
inc
mov
scas
ss
imul
enter
cmp
inc
js
addr16
adc
mov
sub
inc
ret
fwait
ljmp
lods
mov
cmp
out
jle
pop
pop
fisttpll
lret
rol
mov
pop
clc
add
jb
and
adcl
xchg
xor
addl
lds
clc
adc
jg
jmp
cmp
or
dec
mov
hlt
jl
sahf
stc
lret
push
nop
les
jbe
js
sub
or
jg
mov
sub
loopne
pop
sahf
loope
mov
sub
test
add
push
lret
movsl
add
inc
lret
adc
push
aaa
lods
push
fdivs
sbb
mov
or
fisttpl
nop
push
shrl
push
aaa
inc
pop
out
adc
fwait
ret
or
pop
adc
pusha
jns
scas
mov
fcomps
in
inc
jmp
xchg
pop
inc
mov
jmp
mov
cmp
xor
push
mov
sarl
arpl
xchg
fdivr
inc
repz
xor
ds
mov
fidivs
push
xchg
fnstenv
jg
xorb
out
out
sbb
push
insl
mov
insl
sbb
inc
ds
stos
into
xor
adc
cwtl
jmp
insl
and
sub
mov
fisubrl
xchg
cwtl
xchg
outsb
jne
das
dec
pop
mov
mov
mov
sub
cwtl
std
out
lcall
mov
mov
rcr
mov
lods
pop
mov
add
or
imul
repnz
insl
cmp
and
pop
hlt
jmp
jnp
cmp
or
movsb
jmp
push
mov
iret
stos
push
div
out
adc
imull
aas
jl
inc
cmp
daa
mov
xor
mov
mov
add
imul
jecxz
inc
leave
bound
dec
in
mov
and
inc
imul
in
adc
insb
mov
sbb
jno
cli
xor
xor
out
mov
sbb
out
xchg
addr16
jno
lret
pop
pop
jmp
add
add
cmpb
cmp
xor
mov
cld
iret
cmpsb
xchg
cmp
lret
and
push
xchg
sub
adc
out
inc
test
ja
sbb
call
mov
imul
imul
mov
das
call
mov
adc
scas
cwtl
cwtl
add
mov
cmpsb
test
out
dec
ret
scas
inc
sbb
test
xor
testl
inc
xchg
pop
inc
cmpb
ds
ss
lcall
test
inc
bound
lcall
lcall
fistpll
mov
push
pop
mov
mov
pop
call
cmp
cwtl
xchg
lds
mov
out
pop
cmpsb
lahf
imul
andb
cmp
lock
push
mov
mov
push
xorb
clc
inc
fists
push
xor
adc
xchg
sbb
rcr
lret
and
mov
jmp
mov
mov
ficoms
jle
into
dec
sbb
ss
and
mov
mov
jo
adc
or
or
inc
dec
inc
xchg
dec
sbb
mov
repz
aam
pop
subb
pop
push
addr16
cwtl
push
fstpt
aaa
jle
dec
ja
sub
and
ret
mov
nopl
movsl
sub
shr
dec
mov
mov
adc
out
pusha
cmpsb
push
pop
add
scas
test
sarl
in
inc
ret
sbb
jmp
inc
dec
mov
lds
rcrl
and
popa
mov
ljmp
lret
ficoml
fs
xor
gs
xor
pop
and
adc
int3
mov
out
pop
xchg
push
mov
inc
add
mov
jne
push
je
stos
xchg
push
lcall
addr16
mov
or
inc
cmp
mov
popa
rcll
ljmp
icebp
xor
jl
cmp
xlat
dec
movsb
inc
mov
sub
loopne
inc
xor
shr
leave
xchg
ljmp
into
test
push
sub
outsb
cmp
xchg
insb
mov
and
push
notb
jmp
out
repnz
cltd
call
mov
movsb
push
jle
scas
xchg
repz
sub
lahf
rorl
xlat
cmp
add
cs
cli
lret
gs
mov
ss
push
fistps
outsb
mov
push
shl
or
scas
or
aaa
pop
xchg
and
mov
addr16
fwait
jl
hlt
js
and
scas
push
inc
outsl
sahf
inc
call
sub
dec
fdivp
mov
sbb
push
lock
mov
rorl
out
and
ja
and
cltd
sbb
jl
and
fst
fstl
mov
cs
ss
pop
add
ret
jae
jmp
gs
jne
pop
adc
leave
scas
push
lahf
jns
lock
das
dec
jo
pop
iret
repz
lods
sbb
pop
mov
or
dec
adc
pop
leave
outsl
fldt
pop
xchg
aad
cmp
adc
lds
fisttpll
stos
mov
enter
nop
or
and
ds
je
sahf
leave
push
lcall
mov
leave
outsb
or
popa
and
outsl
movsl
dec
xchg
xchg
ds
in
inc
rcll
inc
pop
cmp
cwtl
adc
cmp
sbb
push
mov
cmp
push
repnz
jg
scas
pop
or
dec
das
leave
testl
push
repz
push
outsl
mov
xchg
push
adc
xchg
scas
lahf
adc
inc
adc
adc
mov
and
mov
mov
or
push
adc
jnp
jbe
jg
je
test
es
enter
leave
add
in
ds
scas
cld
pop
fldl2e
dec
shll
jecxz
and
popa
sbb
push
jns
aas
ss
popf
imul
adc
push
enter
or
mov
mov
adc
popf
jns
jne
add
jmp
add
idivb
out
ss
movsb
push
rcl
jb
pop
stos
jbe
sti
enter
inc
subb
xchg
mov
cmp
xchg
out
out
jmp
daa
mov
or
fdiv
lds
aaa
jge
mov
push
pop
push
push
movsb
cmpsl
sahf
jl
mov
scas
cs
mov
cs
sub
orb
test
sbb
xchg
aam
addr16
or
fiadds
or
and
push
dec
nop
subb
les
insb
sahf
mov
loop
pop
xor
loope
sbb
leave
outsb
stos
push
lods
repnz
ss
dec
push
mov
pop
inc
aam
repz
jmp
or
cmp
pop
testb
or
xchg
mov
or
and
sub
mov
ror
bound
icebp
mov
jge
sarl
addr16
adc
sbb
dec
scas
cmp
shrl
lods
scas
std
xchg
hlt
or
stc
inc
lret
inc
jp
push
xorb
mov
sub
mov
aad
daa
int
xchg
inc
and
inc
test
mov
repz
push
add
lds
sub
sub
push
cltd
out
dec
push
clc
sbb
or
cld
std
and
or
add
pop
lret
sbb
xor
cmp
inc
into
movsb
sbb
cmp
mov
hlt
shrb
out
out
loopne
mov
incb
pop
add
push
and
das
pop
pusha
ds
outsb
push
jae
xchg
inc
push
outsl
rolb
xchg
push
rclb
mov
dec
test
dec
das
fsubs
insl
arpl
movsl
sarl
cmpsb
movsl
cmp
jle
sbb
cmp
loop
stos
add
addr16
pop
jl
shl
repz
aaa
and
test
or
pop
cmp
orl
push
add
jno
cltd
and
dec
or
cmp
pop
pusha
inc
jmp
push
movsl
ss
mov
rcl
repz
adc
xchg
popf
adc
jecxz
jl
mov
jno
test
adc
adc
out
mov
daa
pop
stos
and
mov
dec
push
scas
fimull
std
mov
lods
mov
mov
sbbb
out
push
and
movsl
jnp
xor
insb
xor
enter
jge
rcrb
cmc
negl
jl
insw
push
and
test
xlat
fs
xchg
mov
and
shr
mov
ret
test
or
sbb
xor
cmp
outsl
popa
push
mov
repz
adc
dec
xchg
cmpsb
xor
jecxz
mov
leave
fidivl
lds
insl
cmpsl
shrl
dec
cmpsl
ret
aas
adc
jb
mov
fdivrs
outsl
and
call
leave
les
mov
add
push
fadd
mov
xor
mov
insl
loop
popf
add
mov
stos
pop
push
dec
push
insl
jp
push
xor
outsl
and
out
cmc
xchg
add
hlt
lret
dec
jecxz
cld
lcall
mov
push
cmp
dec
and
movsl
lock
push
popa
clc
xorb
es
sar
cltd
adc
call
sbb
cs
jns
xchg
fbstp
outsb
mov
and
xchg
and
nop
iret
and
xchg
lea
stos
add
outsb
iret
cltd
lock
mov
sbb
addb
into
and
ret
xchg
lahf
and
bound
mov
sub
les
mov
or
and
cs
lods
pop
aaa
adc
adcl
mov
mov
push
add
mov
data16
xor
fcomip
cmp
movsb
cmp
ret
push
mov
push
dec
pop
pushf
jb
hlt
pop
idiv
push
popa
dec
das
sahf
lret
popa
aam
and
and
paddsb
lods
movsl
push
rclb
pop
xor
push
stos
inc
jno
or
mov
filds
xchg
cmpsb
out
inc
dec
out
mov
fld
jl
mov
xchg
out
in
jl
and
jns
mov
daa
and
jb
insl
jbe
inc
jp
push
push
jns
ret
and
mov
test
out
pop
dec
jl
gs
outsb
jge
push
or
aaa
and
stos
jb
repnz
in
out
or
jae
and
cli
stos
mov
push
or
cli
jbe
mov
pop
scas
cwtl
ss
arpl
add
lret
std
pop
scas
js
mov
xor
push
fcomps
mov
sbb
negl
cmp
mov
leave
add
int3
hlt
mov
mov
and
cmp
daa
mov
std
fists
dec
popf
jns
and
in
test
nop
sub
inc
outsl
jg
adc
xchg
and
es
dec
insl
icebp
enter
xchg
lcall
cmpsb
andl
fnstsw
or
aas
xchg
mov
and
je
stos
xor
aad
mov
dec
and
out
xchg
cmp
fiaddl
repz
loope
rolb
push
fucomip
sbb
mov
pop
cld
sbb
xchg
lods
xchg
sbb
mov
sbb
out
out
add
push
xor
pop
out
pop
lds
pop
and
roll
cmp
sbb
adc
or
pushf
fisttps
cmp
mov
hlt
arpl
dec
hlt
and
mov
jo
dec
jmp
sbb
xchg
xor
cltd
iret
cs
jno
pop
test
shll
xlat
dec
dec
mov
inc
sbb
pop
adc
jbe
mov
push
inc
push
and
push
dec
fstpt
jg
and
jle
or
pop
pop
jnp
icebp
fidivrl
mov
fiadds
enter
jb
icebp
in
outsb
movsl
sub
xchg
aaa
addr16
xchg
pop
mov
cmp
fdivr
or
dec
inc
hlt
sti
js
es
shl
movsl
fwait
push
cmpsl
int3
jp
xchg
stos
push
fisubrl
rcr
sti
clc
loop
cs
lea
mull
es
dec
adc
jmp
and
dec
lods
ja
push
or
add
pop
jae
sub
sbb
push
add
out
mov
lods
pop
inc
into
pop
adc
cmc
fldcw
inc
mov
jo
rcrb
ret
fstps
pop
mov
movsb
test
mov
or
mov
ss
inc
jle
fiadds
xchg
sahf
cmp
jmp
adc
add
ja
cs
mov
cltd
push
mov
subb
adc
loop
cmp
sbb
sbbl
mov
inc
cld
mov
leave
fbstp
nop
cmp
mov
pop
dec
es
inc
mov
aas
pop
lret
loopne
insb
mov
xlat
mov
fsub
test
loopne
dec
fists
mov
cmp
lcall
pop
into
stos
mov
fisubrs
sahf
mov
sbb
jg
mov
xor
loop
imul
cli
dec
xchg
rcll
pop
lods
mov
roll
sbb
jecxz
or
dec
push
into
cmp
mov
jb
movsb
sahf
cmp
ja
sbb
testb
xor
test
std
adc
or
jg
or
push
icebp
jmp
ret
xchg
addr16
cld
mov
xchg
xlat
xchg
imul
cld
fldcw
loopne
pushf
rcr
cmc
mov
pushf
scas
sub
xor
pushf
mov
push
jge
sub
sub
mov
mov
out
adc
inc
inc
dec
dec
pop
adc
cmpsb
mov
add
dec
xchg
call
dec
dec
test
test
xor
subl
push
pop
pushf
mov
jecxz
push
xor
sarb
jl
pop
cmp
nop
idivb
sub
js
add
dec
pop
jl
inc
inc
push
adc
mov
pop
jo
sbb
inc
sbb
mov
clc
or
sub
jg
cmp
bswap
leave
xor
out
fs
pop
cmc
xlat
fsubrl
daa
stos
pusha
aaa
sub
dec
inc
cwtl
cmp
adc
jmp
cmp
pop
dec
mov
jo
shrl
adc
les
out
leave
imull
getsec
and
mov
orb
rolb
pop
dec
in
or
add
in
cmp
call
out
sarb
jb
idivb
adc
inc
fistps
mov
hlt
sbb
sti
mov
aas
arpl
fistpll
aaa
jnp
xor
or
dec
sbb
jae
pop
out
dec
mov
roll
test
and
mov
insl
mov
pop
dec
out
mov
subl
loop
insl
pop
sub
xchg
xchg
shll
adc
ljmp
sbb
lds
clc
adc
orb
es
mov
lcall
lahf
jl
and
dec
fs
call
add
mov
adc
jl
pop
xor
sub
or
mov
dec
imul
xchg
fisttpll
xchg
and
mov
cmpsl
pop
inc
jnp
or
push
lds
fyl2x
dec
repnz
and
jo
insb
out
fidivl
adc
jae
rcrl
pop
sarl
cmp
imul
roll
push
dec
imul
data16
lds
inc
sarl
jl
daa
addr16
cltd
push
or
xchg
mov
pop
movsb
mov
leave
pop
push
andb
cmpsb
and
pop
and
push
faddl
push
xchg
mov
push
lcall
xor
push
stos
push
jno
xchg
sbb
fadd
aam
push
test
dec
xor
lods
add
xor
popf
xorl
xchg
dec
adcl
decl
sarl
rorb
sbb
cwtl
push
xchg
jns
int
add
xchg
in
dec
jnp
dec
xor
test
push
lahf
fcmovbe
leave
stos
ja
xchg
int
mov
mov
aaa
pop
mov
ret
pop
in
notb
xchg
jns
in
ret
outsl
test
xorb
lahf
out
dec
int3
dec
sub
mov
lods
sbb
movsb
and
nop
pop
shr
fldt
mov
sahf
lahf
sub
pop
pop
adc
addl
in
outsl
add
push
stc
xor
pop
loopne
out
mov
insb
pop
pop
jnp
fimuls
fldl
adc
inc
enter
xor
dec
xchg
push
scas
les
sbb
and
sub
and
fld
fildl
add
cmp
movsl
cmp
shll
pop
ja
push
fdivs
or
push
cltd
or
push
mov
les
adc
das
int
or
loope
jl
xchg
rcll
inc
ret
mov
je
cmp
xlat
mov
cmp
dec
mov
add
lahf
mov
mov
xor
dec
adc
mov
out
loope
sub
cmp
outsb
dec
fcoms
sbb
xlat
adc
jecxz
shlb
mov
mov
loop
in
mov
mov
pop
push
dec
call
into
mov
lret
sub
shll
nop
jmp
sarb
pop
cmp
xchg
out
cld
mov
test
outsl
mov
ficoml
dec
popa
xlat
pop
pop
movsb
rcr
fsts
jg
mov
popl
stos
push
adc
ret
cmp
repz
outsb
pusha
and
push
cmp
fcoml
push
lret
jmp
jle
loope
cld
dec
push
icebp
pop
dec
sub
push
jo
mov
add
int3
out
push
lret
icebp
or
cmpsl
adc
sti
cs
push
xchg
jmp
sbb
imul
out
mov
pop
repnz
loope
in
sub
add
fcompl
fcmove
int
out
movsb
hlt
rclb
pushf
js
adc
add
es
add
iret
in
aad
inc
or
adc
adc
loopne
fbstp
fisubrs
fdivrl
imul
scas
jnp
mov
mov
xchg
cmp
sub
loopne
xchg
rclb
mov
push
pusha
inc
inc
or
cwtl
dec
add
mov
inc
insb
jns
jecxz
or
jae
cs
stos
sti
loopne
add
cmc
and
js
fwait
adc
mov
cld
fldenv
mov
dec
leave
jl
sbb
cwtl
xor
ds
xor
inc
jo
bound
jl
xchg
mov
pop
add
leave
sbb
xchg
das
aad
into
repz
cmp
dec
jg
adc
pushf
sti
rclb
mov
test
sbb
stc
mov
testb
out
pop
lret
imul
pop
sub
push
loope
mov
jp
insb
mov
mov
inc
imul
sbbl
pop
imul
add
lds
pop
push
jne
ljmp
rcl
ja
xor
fldenv
push
and
mul
xor
rorl
xor
bound
aam
xor
lods
and
inc
mov
outsb
test
out
dec
dec
mov
pop
inc
int
and
adc
int
in
cmc
add
jmp
call
cmpsb
andl
jle
dec
leave
add
fcomps
jae
inc
jb
sub
sbb
out
ss
xchg
adc
push
mov
mov
shrl
sub
jge
mov
inc
nop
xlat
cs
adc
inc
cmp
mov
cmp
cmp
mov
sbb
ljmp
push
test
jl
daa
leave
jne
mov
inc
inc
les
call
out
popf
and
fdiv
xor
or
jnp
lret
jl
mov
scas
cmp
out
mov
fisubrl
lock
arpl
arpl
adc
mov
and
aas
cs
in
leave
cmp
std
xor
mov
ss
pop
cltd
mov
mov
or
pushf
scas
ss
into
mov
add
xor
jle
out
xchg
sbb
cmp
rcll
add
mov
xor
mov
jb
mov
sbb
jo
scas
movsb
testb
adc
push
rcrb
dec
aad
jae
movsl
push
mov
mov
pop
fdivrs
and
push
testb
stos
sbb
push
jb
cmp
ljmp
push
adcb
jno
mov
sub
adc
cmp
mov
push
xor
int
movsb
notb
or
sbb
sub
mov
ds
jge
test
test
cmp
negl
push
call
cli
fdivl
jp
cmp
push
cs
mov
call
mov
fs
pop
jno
rcl
inc
loopne
push
jecxz
adc
mov
mov
pop
add
mov
adc
rol
mov
clc
jbe
inc
out
inc
xchg
jmp
xchg
aas
xchg
xor
jnp
out
scas
scas
mov
stos
push
cli
call
push
dec
aad
push
push
mov
adc
pop
adc
push
dec
mov
repnz
and
add
mov
mov
mov
jne
sub
jmp
addl
sbb
inc
jo
shll
add
pop
or
pop
cmc
aas
lcall
jne
fwait
fwait
arpl
add
xchg
cmpsb
mov
mov
imul
add
aas
lds
jb
ficoml
push
add
push
lahf
pop
push
fmulp
cld
adc
sbb
call
lahf
pop
sahf
sar
dec
or
pop
xchg
stos
aas
enter
adc
sahf
or
je
mov
push
push
sti
out
dec
int3
and
mov
ljmp
jno
sbb
fs
mov
into
notb
xchg
aam
sahf
mov
lahf
pop
lds
mov
xor
mov
xor
cmp
scas
ja
mov
push
mov
cmp
xchg
mov
fldt
outsl
inc
std
mov
push
repz
out
push
mov
mov
push
and
pop
cld
out
mov
mul
cmpsl
dec
fwait
push
mov
push
sub
cwtl
adc
inc
adc
test
push
ljmp
mov
xchg
mov
data16
jl
cli
and
pop
out
or
aas
or
ss
in
adc
mov
loop
ds
hlt
mov
out
rcll
mov
mov
xchg
add
xchg
mov
into
adc
jge
insb
push
movsl
stos
adc
push
test
test
call
jmp
mov
xor
int
cmpsb
inc
lcall
ljmp
push
add
cmpsb
js
test
int3
das
inc
inc
xchg
into
xor
pop
mov
mov
mov
xor
dec
into
pop
cli
cs
cmpsb
sbb
addr16
jns
lcall
pop
mov
popa
dec
ss
out
sbb
in
xchg
imul
dec
lret
popf
cmpl
fcmovne
pop
inc
xchg
dec
jle
aad
repz
loop
adc
test
lahf
movsb
mov
shlb
jp
add
xchg
ljmp
cmp
xlat
lods
or
inc
lods
neg
inc
cwtl
popf
cmc
xchg
call
xlat
sahf
push
adc
icebp
jecxz
cmp
mov
scas
add
pusha
mov
movntq
data16
cmp
sbb
sub
mov
adc
pop
repnz
xchg
inc
outsb
add
testb
lods
inc
mov
insl
aam
push
sahf
negl
or
repnz
mov
mov
adc
fsubr
inc
pop
ljmp
shrl
sbb
mov
and
push
insb
movsl
loopne
das
xchg
pop
mov
add
and
inc
icebp
mov
repnz
leave
or
test
data16
mov
inc
ljmp
pop
mov
pop
push
push
sbb
jg
repz
mov
xlat
push
lcall
testl
inc
stos
mov
test
xchg
mov
adc
stc
lods
dec
out
in
inc
push
out
rcrb
icebp
dec
mov
cmpsb
sarb
jnp
fwait
xor
jb
mov
jl
jb
push
mov
pop
adc
filds
push
push
pop
jbe
sub
and
cmp
xor
add
int
rcrl
mov
jns
push
lods
shll
mov
mov
pop
icebp
fwait
lods
adc
xchg
pop
insb
out
stos
aam
call
nop
cs
fmul
nop
cli
les
das
pop
push
lahf
pop
inc
scas
lods
loop
jb
enter
dec
test
and
adc
xor
mov
pop
dec
out
stc
dec
imul
sbbb
mov
mov
or
lea
xor
cs
imul
test
or
push
sbb
sbb
ret
mov
xlat
or
push
pop
xchg
movsl
movsb
lahf
dec
xor
sub
jecxz,pn
int3
add
push
add
in
mov
inc
inc
cmpsl
cmp
lcall
sti
adc
out
xchg
sti
loopne
aam
mov
das
jbe
mov
jo
jg
jb
jl
inc
inc
add
push
stc
pop
ss
pop
mov
mov
lcall
cwtl
repz
xlat
ret
outsl
ret
dec
jb
xlat
pop
inc
fwait
stc
jge
xchg
mov
push
or
aad
loop
sub
lahf
dec
test
sub
and
dec
inc
pusha
jge
xor
mov
inc
ret
push
or
pusha
jb
mov
notl
in
push
imul
loopne
xor
push
leave
mov
sti
lea
enter
add
repnz
mov
push
and
mov
pop
mov
jbe
mov
sub
lods
movsb
adc
jle
cli
push
dec
fstpl
js
dec
call
pop
and
shr
xchg
dec
cmpsl
pusha
add
push
add
or
insl
push
pop
cmp
push
dec
pop
pop
or
outsl
out
movsl
sahf
adcl
lahf
inc
push
gs
ret
test
movsl
xor
cltd
mov
bound
inc
aam
bound
mov
in
inc
call
and
rcrb
repnz
cmp
mov
push
inc
mov
fisubs
xlat
lods
jecxz
add
lods
fwait
mov
mov
mov
push
fwait
outsl
mov
ds
or
jnp
cmpsb
mov
enter
and
dec
sub
cmp
push
or
neg
lahf
fimull
or
cmpsb
les
sbbb
pop
bound
pushf
and
subb
mov
movsl
addb
and
cltd
mov
push
xor
mov
cs
and
popf
and
xor
mov
leave
lods
or
mov
es
sub
cld
arpl
and
fwait
scas
in
mov
pop
lods
pop
and
mov
shlb
orl
scas
stos
jno
jne
mov
or
subb
xor
cmpb
mov
pop
mov
fs
icebp
je
dec
faddl
fucom
ret
cmp
cmpsb
xchg
jb
or
lret
imul
mov
outsb
add
repz
xchg
in
or
adc
aad
hlt
js
cmpb
xor
popa
adc
adc
lret
lods
outsb
sbb
mov
mov
jle
insl
mov
pop
cld
mov
movsb
les
adc
enter
sbb
scas
lods
in
or
dec
jnp
mov
lods
imull
or
test
iret
fmull
stos
idivl
call
cmpsl
xchg
fs
popf
sbb
xchg
iret
push
dec
jae
mov
add
stc
cli
mov
sub
ds
mov
add
lds
aad
cmp
insb
icebp
test
and
push
lret
dec
mov
aaa
mov
es
stos
mov
add
es
and
dec
adc
pop
mov
repz
add
imul
ret
popf
inc
ljmp
addb
sub
sbb
xchg
cmp
je
jg
mov
adc
xchg
push
gs
loopne
xor
cli
jne
xor
mov
cmp
push
inc
jge
sbb
mov
push
lret
mov
jl
adc
enter
addr16
sahf
push
imul
jno
out
adc
xchg
in
mov
jb
in
inc
rcrl
mov
ljmp
mov
jmp
dec
orl
cmc
lret
bound
in
movsl
cwtl
cmp
dec
sub
cwtl
jge
mov
int
fmull
mov
or
jne
mov
lret
sbb
out
insl
ret
inc
stos
testl
inc
xchg
sub
dec
jle
movsb
mov
jne
lea
movsb
pop
mov
cmpsl
js
adc
sbb
lcall
test
pop
mov
popa
push
sbb
jmp
test
mov
bound
adc
mov
cs
movsb
pusha
cmp
fwait
clc
push
ja
adc
dec
jge
dec
clc
or
jg
fwait
lret
mov
les
mov
push
push
out
mov
lahf
fdiv
popa
jne
dec
sarl
mov
test
sarl
add
xor
imul
jbe
jp
ss
pop
sbb
outsl
push
jp
mov
roll
fnstcw
dec
sahf
cmp
pop
not
lret
outsb
int
jge
sbb
inc
nop
stos
mov
in
cmc
cmp
pop
loopne
aas
push
pop
sub
dec
mov
cmpsl
dec
stc
cld
enter
cmp
test
pop
push
and
add
dec
xchg
jge
fwait
jmp
adc
jl
stos
pop
fucomip
rol
sub
push
imul
jle
pop
jb
sar
loope
nop
push
clc
or
dec
jo
addr16
cmpsb
rol
pop
push
cmp
roll
pop
loop
cmp
inc
sub
popf
sub
or
testl
lret
call
mov
nop
push
adcb
mov
loop
sbb
fisubrl
je
sbb
mov
shlb
in
cli
stos
xchg
add
insl
and
xchg
push
and
les
or
ret
xor
pop
and
cltd
aam
std
ljmp
test
sub
xchg
mov
aam
push
cmpl
push
sbb
push
addb
lret
enter
mov
push
out
dec
shlb
mov
int
jge
lcall
rorb
popf
ds
mov
add
cs
es
mov
sub
das
sarb
cmp
mov
out
mov
mov
leave
outsb
emms
leave
cmp
orl
movsl
test
sub
inc
pusha
cmpsb
and
in
leave
dec
ficoms
push
hlt
xchg
xorl
sahf
push
xor
popf
jp
shrb
adc
push
jmp
rcl
jb
fsubs
stc
cs
push
mov
inc
jbe
insb
jno
les
push
aas
fwait
mov
cmp
test
int3
and
mov
pop
sub
pop
fistpl
test
shrb
and
mov
or
outsb
mov
mov
es
mov
jmp
movl
scas
pop
cld
cmpsb
out
and
stc
loope
scas
js
pop
pop
shrb
fimuls
mov
xchg
sarl
cmc
and
loop
xchg
pop
and
shll
cmp
aas
iret
cmp
out
push
fdivr
cs
out
js
aam
pop
and
add
das
ret
jl
fildl
fcmove
lahf
xor
cmp
insl
data16
std
mov
adc
sarl
mov
cwtl
stos
xchg
or
mov
into
rcl
dec
lret
in
and
push
adc
repnz
or
test
mov
iret
iret
sub
xlat
mov
pop
movsb
jecxz
mov
mov
sarb
pop
sbbb
sti
cmpsb
jmp
mov
add
cmc
pushf
jecxz
popf
jo
dec
call
push
add
addr16
push
cltd
stc
push
lea
jbe
xor
in
or
aad
dec
insb
xor
test
sub
push
sub
pop
movsl
xlat
inc
bound
mov
xlat
dec
sti
addr16
mov
in
hlt
cmp
xorb
sbb
push
adc
adc
xchg
hlt
cli
pop
xchg
ficoms
pop
iret
adc
jmp
pop
jne
das
jg
pushf
jno
ljmp
stc
test
sbb
inc
mov
fildll
mov
ss
dec
aam
and
dec
add
inc
mov
add
push
call
dec
cmp
ror
xor
lahf
aad
mov
out
mov
add
movsb
sbb
or
lds
out
jle
mull
sbb
incb
dec
xchg
loop
enter
sub
pop
pop
sub
or
mov
test
or
sub
addr16
jp
test
mov
aaa
mov
sbb
lods
and
popa
sahf
cmpsb
xchg
mov
pop
fwait
sub
fstpt
cmp
and
or
out
out
mov
mov
jb
pop
jo
lea
cli
inc
jae
rdpmc
fdivr
fists
out
cltd
je
jbe
adc
dec
subb
or
push
imul
arpl
cli
mov
jge
or
or
aam
rol
push
nop
and
mov
leave
xchg
int3
sbb
xchg
xor
xchg
xor
fwait
lods
xchg
popf
push
adc
sub
add
mov
mov
jmp
cs
add
popa
jbe
std
cld
data16
sub
repnz
sbb
loope
sti
mov
test
xchg
adc
sub
clc
repz
adc
arpl
sub
rcrl
aaa
sub
out
imul
add
sub
push
and
mov
cmp
sub
mov
cltd
pop
iret
les
jle
and
fidivrl
arpl
into
cmp
jb
adc
xor
mov
shl
mov
fisttps
pop
xor
push
loop
outsl
cmp
sbb
pop
and
rolb
inc
dec
sahf
test
jno
mov
lods
push
cmp
repnz
into
adcb
jns
stos
or
mov
lock
sub
stc
in
scas
push
dec
xor
jmp
mov
or
arpl
inc
aad
das
cld
out
lret
ss
imul
scas
test
pop
sub
xchg
jge
fbld
imul
mov
sbb
jno
arpl
push
in
or
sub
push
mov
sub
jnp
mov
xor
pop
lret
dec
fisttpll
sub
sbb
jb
push
jp
shlb
mov
adc
rcrl
push
bound
cmp
adc
lahf
pop
popa
jbe
dec
or
xorb
and
jmp
jo
in
mov
scas
mov
jbe
lds
inc
push
cmp
sti
adc
sub
pop
lahf
inc
imulb
arpl
push
gs
mov
cld
dec
xlat
mov
call
stos
adc
pushw
std
mov
stos
cltd
mov
push
push
jae
cmp
ja
lcall
lods
lcall
aas
pop
inc
and
inc
shrl
jle
repz
mov
int3
fisubrl
sbb
fstps
fs
rcrb
call
cmc
jmp
mov
pop
jne
rcl
outsl
nop
imul
das
rclb
icebp
lock
adc
or
fisubrs
rcrb
fildll
jmp
dec
inc
mov
hlt
and
adc
test
das
push
pop
xor
call
mov
pop
pusha
lea
enter
cwtl
sbb
fisttpll
roll
jl
dec
addb
push
xchg
xor
dec
mov
lea
call
es
aam
stc
movsb
mov
mov
xchg
xor
sub
pop
mov
je
out
loopne
xchg
mov
inc
cmp
lods
dec
cmp
mov
sti
mov
add
icebp
inc
outsl
xchg
out
cwtl
in
mov
cwtl
rolb
inc
inc
outsb
and
add
idiv
negb
mov
jp
dec
push
shlb
pop
or
inc
inc
cmp
roll
add
fimull
push
and
mov
rorb
or
mov
push
jns
adc
bound
lock
out
aad
or
xchg
mull
push
inc
adc
data16
sbb
jae
fs
jae
mov
inc
ret
out
push
shrl
mov
add
mov
pusha
aam
pop
test
sbb
adc
mov
mov
dec
inc
popf
jno
test
addr16
std
lock
jb
add
push
sbb
sahf
jle
lahf
das
stc
xlat
movsb
out
jge
js
je
xchg
loopne
xor
jecxz
jo
outsl
and
cli
adcb
divl
push
push
pmaxub
jnp
inc
lods
aas
icebp
pop
jg
mov
rcrb
pop
ja
mov
out
cmpsl
aad
xor
pop
mov
push
sub
mov
subb
aaa
stos
test
arpl
push
and
pop
mov
scas
or
mov
and
jb
arpl
outsl
mov
or
jnp
jns
rolb
loop
fwait
sub
inc
int3
ds
mov
test
and
jae
das
mov
inc
add
push
xor
cli
jp
lods
and
shrb
xchg
cmp
insl
iret
xorl
mov
add
pop
push
aas
fwait
and
push
xchg
xchg
js
scas
gs
xor
lock
nop
pop
push
push
movsl
pop
lret
mov
loope
sarb
fildll
aad
repnz
adc
adc
jge
push
ljmp
fs
out
pop
pop
je
movsb
ja
push
mov
popf
popa
inc
test
lds
or
xor
mov
sbb
mov
repz
push
test
mov
and
imul
jmp
pop
rcll
shlb
aam
cmp
sub
cmp
xorl
sbb
push
jmp
xchg
mov
mov
jbe
xor
or
adc
inc
pop
inc
push
lods
mov
in
inc
out
inc
mov
shrl
mov
sub
inc
mov
dec
fwait
and
in
push
mov
pop
pop
enter
cli
sti
sub
in
movsl
inc
push
out
fwait
cmpsb
add
mov
or
push
jle
outsl
icebp
out
pop
pop
movsl
lea
xchg
cwtl
int
aaa
adc
out
push
mov
mov
outsl
cmp
ss
or
push
mov
sbb
movsl
jnp
mov
mov
or
sub
adc
jmp
out
test
cmpsb
cmp
jno
pop
add
into
leave
dec
rcrb
sbb
pop
iret
aas
sbb
sub
test
loopne
sub
fninit
jg
jo
ds
adc
loope
pop
push
dec
adc
lock
pop
mov
mov
push
push
stc
mov
sbb
or
add
daa
push
lds
dec
scas
sub
in
cmp
push
mov
jl
out
adc
mov
in
push
sbb
cld
rolb
data16
sbbb
in
and
les
ret
aaa
imul
cld
fildll
or
mov
mov
in
xor
shr
mov
scas
xor
add
xchg
add
stc
or
pop
mov
xchg
sbb
ds
sbb
and
push
mov
sub
or
bound
and
and
push
rcll
stos
lret
int
enter
sbbb
jne
faddl
sahf
fidivs
call
fidivrl
cmp
in
jmp
ds
imulb
add
es
mov
sub
sub
xchg
push
mov
movsb
pop
mov
movsl
insl
mov
idivl
out
sti
lret
clc
fsubrl
es
inc
sub
mov
add
dec
add
jns
in
jb
and
pop
ret
lea
and
dec
fwait
sub
lcall
test
push
cwtl
arpl
mov
jecxz
jmp
push
test
int
sbb
rcll
movsb
and
out
mov
adc
mov
push
leave
decb
lahf
xor
inc
adc
xchg
inc
popa
pop
inc
dec
jmp
or
sbb
pushf
fs
dec
pop
dec
test
rorb
lret
mov
mov
daa
add
sbb
outsl
xchg
lahf
add
add
adc
mov
js
xchg
mulb
sahf
dec
pop
cs
movsb
aas
test
jge
mov
andl
icebp
jb
pop
xchg
fisttpl
or
jns
add
movsb
add
arpl
mov
mov
std
daa
jp
cmp
nop
jle
mov
pop
inc
rcrb
dec
xchg
fcmovnbe
sub
enter
add
or
xor
pop
sub
mov
push
pop
ret
stos
ljmp
xor
mov
ret
ret
jo
andl
jge
mov
ds
call
pop
mov
cmc
leave
mov
icebp
shl
mov
xor
js
sub
cmpl
sub
les
popa
push
subl
pop
and
xchg
jmp
add
movsb
adc
sub
rcrl
fsubrl
enter
ss
sub
ret
out
xchg
rcrl
xchg
adc
and
adc
or
push
mov
mov
mov
inc
into
adc
rcrl
pop
push
loop
sub
getsec
aam
lods
mov
add
repnz
cmp
pop
push
ret
hlt
xchg
push
dec
repnz
stos
or
adc
mov
inc
sbb
int
or
insb
movsl
arpl
pusha
jb
jae
lea
addr16
jnp
xor
fstl
test
mov
clc
mov
adc
mov
mov
or
mov
fcmovnbe
popa
and
bound
call
adc
or
sub
dec
jge
xchg
pusha
scas
push
mov
mulb
fucom
andb
out
fwait
and
js
lret
lret
add
lods
xor
jecxz
stc
push
cmc
push
or
std
lret
divl
xor
cmc
push
fdivrl
add
adc
popf
xchg
push
cmpsb
orb
xchg
pusha
in
mov
out
test
pusha
add
sbb
decb
out
es
int3
sbb
or
cli
std
mov
cmp
out
add
test
adc
xor
or
in
mov
push
xchg
pop
lret
int3
add
daa
xchg
add
mov
pusha
dec
and
outsl
stc
inc
rclb
mov
test
jns
push
mov
pop
dec
sahf
pusha
fistps
mov
inc
loope
push
test
hlt
push
jbe
mov
adc
push
inc
movl
ret
mov
sahf
in
popa
cmp
or
cmpl
push
stc
push
in
sbb
add
dec
fcmove
fdivrs
jbe
xchg
mov
or
mov
fisttpll
xchg
xchg
rcr
cmp
in
mov
xchg
out
orb
std
dec
pop
movsb
ss
sub
xchg
or
push
popa
xchg
pop
xchg
sub
dec
aam
xchg
xchg
jecxz
adc
sbb
push
ja
jbe
je
imul
fwait
mov
flds
add
movsl
scas
or
xor
sub
or
imul
dec
sbb
hlt
ret
pusha
popa
out
push
rcrb
fildl
aad
xchg
test
cmpl
adc
loope
mov
jecxz
pop
or
dec
add
ret
pop
fsubl
in
cmp
ja
jl
pusha
lods
addl
inc
dec
es
adcb
pusha
and
int3
cmpsb
jl
jno
mov
shrb
in
inc
rcrl
lret
push
sub
mov
jbe
inc
sub
mov
shrl
xchg
add
mov
xchg
je
adc
das
cs
dec
xor
cmp
shl
outsl
sbbl
int
fistl
cwtl
test
je
lock
dec
and
stc
jmp
sub
loop
xorb
pop
test
outsb
mov
out
cmpsb
dec
push
jle
je
xor
imul
mov
jle
sbb
mov
cmp
mov
push
mov
push
flds
cmp
call
inc
inc
sbb
ret
cmp
imulb
cwtl
addr16
sbb
dec
fucomip
mov
adc
and
add
or
pop
nop
mov
ret
xchg
cmp
push
out
mov
int3
js
rol
cwtl
dec
xchg
fistps
imul
das
test
ja
inc
cld
ficoms
mov
int
mov
movsb
xor
lcall
mov
in
pop
gs
nop
jg
pushf
push
insb
je
inc
sahf
pop
das
xchg
sbb
or
je
adc
jmp
lcall
sti
sbb
mov
je
test
repnz
sbb
and
push
jp
or
pop
push
inc
inc
test
cmp
fsubl
jbe
cmp
jp
lret
or
fisttps
movsl
push
imul
or
cmp
cli
push
cs
push
mov
push
xor
jb
sbb
jge
sub
push
push
dec
adc
lcall
imul
scas
sub
insl
xor
test
pop
sub
inc
fdivp
shrl
dec
jge
pop
andb
and
jecxz
imul
in
arpl
ljmp
out
leave
sbb
lret
je
cltd
jnp
js
dec
pop
jo
xchg
and
mov
sbb
or
jl
scas
rorb
jns
mov
and
mov
cmp
mov
mov
fsub
clc
pop
xor
adc
pop
push
sbb
jnp
mov
outsl
dec
mov
jp
daa
insb
jl
jb
push
mov
mov
mov
call
push
ljmp
mov
sbb
stc
push
mov
inc
xor
or
mov
inc
mov
pop
ud0
lahf
dec
aaa
mov
aam
xor
aad
add
xchg
ss
inc
mov
mov
xchg
das
xor
mov
mov
cmp
fdivrs
repnz
scas
xchg
lods
repnz
xor
lds
push
repnz
int
je
push
test
sbb
jecxz
stos
sub
in
int3
or
adc
mov
iret
aaa
dec
sub
dec
out
add
into
inc
or
adc
push
xchg
jne
imul
push
ficoms
adc
sub
or
pop
movsl
jl
cld
out
adc
push
mov
and
cwtl
mov
out
mov
jno
loope
into
adc
stos
add
sub
xchg
and
data16
push
fcoml
mov
aaa
lret
pop
daa
inc
leave
or
push
jle
repnz
sub
sub
ret
xor
adc
test
out
out
and
push
dec
lods
lret
jle
mov
lods
sub
ds
xor
fabs
repz
mov
cmp
outsb
repz
adc
dec
mov
ret
dec
mov
sbb
dec
cmp
leave
pop
cmp
mov
fdivrs
test
cmpsb
es
repnz
mov
cmp
inc
addr16
adc
into
call
cmp
fidivrs
and
loope
das
add
push
idiv
and
hlt
lock
xchg
gs
test
js
inc
imul
addr16
into
repnz
fsubrs
pop
or
stos
popf
jg
int
ljmp
cmc
popa
fwait
pop
fwait
mov
or
mov
std
out
inc
mov
sbb
loope
jecxz
sti
mov
mov
jb
mov
clc
repnz
pop
mov
pusha
outsl
enter
push
mov
push
cmp
mov
cmpsb
ds
int
jp
dec
inc
dec
push
mov
mov
jecxz
mov
fs
xorl
mov
shlb
popa
aam
aam
xchg
xchg
data16
js
std
add
pusha
cli
loop
scas
mov
inc
pop
pop
lock
jmp
xlat
jne
adcb
jno
pop
pop
sti
test
xchg
fstps
add
movsl
out
clc
xchg
pop
popf
movsl
ret
mov
loopne
pop
nop
fs
sub
lcall
outsl
sahf
fadd
inc
mov
popa
jmp
in
dec
dec
cmp
mov
mov
push
push
mov
push
fimuls
mov
outsb
fdivl
cs
bound
pop
gs
rclb
in
jecxz
in
inc
cvtdq2ps
pop
lahf
xor
xchg
js
aaa
pop
lahf
mov
lock
iret
xor
mov
faddp
mov
movsl
xlat
or
popf
mov
fdivrs
mov
add
loopne
jo
push
xor
mov
enter
mov
rcrb
out
mov
pusha
add
mov
mov
xor
cmc
imul
aas
scas
sbb
add
sahf
into
xchg
ds
adc
push
push
int
jne
adc
jns
mov
push
pop
jecxz
cmp
test
and
push
pop
leave
jno
in
sub
iret
fcomps
dec
mov
mov
hlt
cmp
mov
movsl
test
ret
sub
outsl
fwait
idivl
or
outsb
mov
and
fwait
push
test
int
hlt
repnz
pop
and
aas
stos
mov
movsb
mov
popf
cmp
cwtl
push
lods
or
aam
add
add
stc
inc
fiaddl
add
cli
je
stos
mov
pop
out
xchg
scas
shlb
sub
mov
popf
popf
rclb
iret
mov
imul
pop
ret
dec
fadds
and
jb
adc
js
cmp
inc
sub
push
add
mov
int3
in
mov
arpl
test
xchg
dec
ret
inc
or
inc
push
ljmp
into
inc
inc
fisubrs
adc
sub
stc
sarb
lods
roll
push
lahf
out
in
mov
dec
mov
and
cmp
lock
loopne
popf
rcr
xor
cli
repz
and
cmp
loopne
push
push
sub
and
ret
cmp
mov
mov
and
or
std
mov
cmp
inc
push
xchg
aad
clc
lods
es
add
lahf
das
jb
xor
in
mov
ret
dec
push
repz
xchg
inc
sbb
pop
xchg
or
or
insb
daa
sbb
lea
mov
lcall
cmp
fsubs
jno
cmp
addb
mov
or
sbb
pusha
pop
stos
int3
stos
sarb
mov
mulb
adc
call
inc
nop
dec
or
mov
loop
in
xchg
pop
invlpg
sbb
jecxz
insb
pop
push
mov
int
dec
xchg
xchg
hlt
cmpsb
sub
mov
loope
xchg
pop
cmp
mov
hlt
jmp
call
imull
insw
iret
aas
cmp
cmp
in
aas
in
mov
repnz
and
stc
movsl
mov
insb
std
inc
and
popa
fsubl
adc
mov
lea
scas
mov
add
inc
jo
xchg
mov
pop
xor
cmpsl
jno
sar
ss
loop
jno
push
jbe
loope
scas
dec
sub
inc
push
adc
bound
ficoml
pop
sti
mov
jne
jnp
pusha
rcrb
mov
dec
lahf
mov
mov
mov
shrb
out
mov
mov
sub
push
test
pop
lahf
pop
xor
popf
pop
mov
adc
xor
push
adc
test
xchg
sbb
lcall
arpl
push
hlt
and
dec
mov
jae
jmp
aaa
arpl
mov
out
inc
cmpsl
mov
and
jnp
dec
fisttpll
inc
addr16
dec
push
pushf
inc
and
dec
mov
movsb
mov
imul
mov
jle
mov
inc
pop
cmpsl
jmp
movsb
push
loop
outsl
mov
pop
cwtl
shrb
cmp
mov
int
xchg
inc
dec
pop
push
adc
xor
imul
fs
mov
das
cmc
mov
pop
cs
repz
hlt
movsl
mov
sti
mov
pop
add
mov
pop
adcl
mov
jo
mov
xlat
out
fstps
lods
mov
fisttpll
pushf
mov
stos
inc
movl
adc
iret
mov
add
into
push
aad
scas
cmp
out
out
and
pop
or
imul
push
adc
mov
cld
dec
or
outsl
sbb
inc
cmpsb
mov
jge
cs
leave
add
mov
call
dec
xchg
outsb
inc
mov
sbb
test
clc
xor
lret
leave
add
insb
sub
sub
sub
sbb
nop
outsb
lods
ds
mov
and
cld
ds
stc
cwtl
pushf
cwtl
xchg
or
mov
xchg
lock
outsl
sbb
pop
mov
cli
cmp
ret
std
jge
inc
repnz
inc
mov
sti
and
jmp
frstor
and
xlat
mov
push
cmp
jnp
lds
pop
dec
mov
ret
mov
mov
ret
sbb
ret
jae
ljmp
shrl
jg
rolb
xchg
lea
lds
jecxz
imull
aas
pop
aaa
and
lea
rcrb
es
gs
mov
and
cld
pop
out
jo
or
pop
mov
xchg
jge
nop
sub
mov
leave
fldcw
jle
pop
mov
bswap
imul
lret
out
iret
icebp
cmpsb
mov
enter
js
sbb
push
fidivrl
dec
jo
dec
pop
es
mov
jb
jge
fsubl
sub
xor
add
push
xchg
scas
arpl
aaa
sahf
mov
lret
mov
aad
push
les
and
stos
add
in
sbb
cmpsb
movsb
popf
test
xor
adc
pushf
jno
xchg
lret
and
or
fcmovbe
sbbb
sbb
mov
rcr
stos
cmpsb
inc
mov
fnstenv
int3
loope
push
scas
dec
xchg
push
cld
sub
jp
mov
dec
sti
mov
xor
hlt
xchg
add
loope
fildl
scas
sub
stos
loop
cmp
add
jg
fcompl
mov
mov
arpl
ja
loope
fildll
dec
mov
mov
or
fmuls
ret
jg
cltd
pop
lock
lahf
daa
mov
enter
aaa
ja
inc
lea
int3
mov
bound
dec
mov
add
repz
mov
xor
lods
in
push
push
gs
in
out
or
fistpl
rorl
subb
roll
jns
jg
into
mov
adc
pop
push
gs
jnp
leave
dec
pop
jne
jp
and
adc
xchg
popa
adc
popa
clc
add
icebp
dec
and
cli
inc
insb
in
push
out
xor
in
and
fcoms
cmpsl
pop
les
mov
xchg
or
scas
add
hlt
add
pop
rcr
movsb
xor
inc
dec
push
addr16
clc
jge
outsl
push
jae
out
or
and
test
mov
imull
out
jnp
adc
adc
out
push
lcall
add
pop
cmc
nop
and
loop
adc
or
cmp
jp
pop
inc
ret
icebp
add
scas
add
xchg
adc
add
dec
sub
jnp
mov
dec
push
lea
and
sub
jo
lret
xlat
xor
andb
xchg
dec
add
and
sbb
cld
leave
jl
mov
incl
dec
sbb
sbb
std
or
sub
mov
shll
xchg
aas
aas
xchg
movsl
aam
cltd
mov
in
mov
and
adc
sbb
xchg
int3
adcb
lods
adc
dec
xchg
in
sahf
jmp
jmp
hlt
push
punpckhwd
adc
movsl
int3
mov
pop
mov
popf
aas
add
out
mov
lods
adc
es
xor
add
dec
xchg
gs
lret
adc
xor
dec
outsb
cmc
cmp
and
mov
dec
aam
daa
or
insl
mov
sbb
aas
jo
arpl
push
add
sti
sub
mov
jecxz
lds
add
jne
jge
jnp
sub
xorb
adc
add
dec
push
jecxz
push
xor
pop
ret
mov
pop
lds
rolb
dec
inc
cmp
lahf
mov
subb
scas
cs
insb
or
xor
and
xorl
push
pusha
sarl
test
mov
nop
cld
cmp
or
xor
hlt
ljmp
insl
sbb
and
push
jp
xor
jp
out
into
push
bound
testb
aas
stos
jecxz
sti
adc
push
inc
adc
or
pop
add
mov
ljmp
mov
mov
inc
mov
mov
ja
pop
fcmovnu
aas
push
dec
xlat
imul
rcr
add
repnz
xor
mov
fsubp
rclb
arpl
inc
je
sbb
mov
fcoms
test
xchg
and
pop
test
or
out
fldl
out
mov
adc
add
xor
stos
mov
call
mov
mov
mov
gs
sti
xorb
xchg
pop
lcall
loopne
out
out
mov
xchg
movsb
dec
xchg
lcall
js,pn
cltd
movl
mov
pause
or
adcl
fmull
cli
lcall
xor
das
sbb
or
out
inc
shlb
adc
cld
cmp
clc
out
jmp
lock
sbb
cmp
xchg
mov
adc
mov
xchg
add
and
dec
mov
xchg
lret
roll
popl
mov
lret
test
gs
ds
cmp
lds
enter
repnz
repnz
imul
aaa
jmp
test
aaa
rcrb
jo
mov
cltd
or
imul
mov
mov
pop
mov
adc
movsl
mov
rolb
js
xor
and
loope
mov
jg
and
sbb
inc
add
push
mov
adc
aam
lds
addr16
pop
outsb
int
movsl
or
test
mov
mov
icebp
pop
push
cli
cmp
imull
lods
fisttps
je
or
inc
cld
ja
mov
xor
imul
xor
pushf
pop
mov
je
leave
jp
lods
or
mov
cltd
lds
sti
je
add
and
gs
lds
mov
jp
cwtl
in
add
insl
das
imul
inc
fcomps
jns
lods
int
push
orb
aas
add
movsb
push
dec
pop
inc
or
nop
fwait
mulb
xor
cmpsb
fnstcw
outsb
rcr
jle
nop
fildll
int3
mov
jae
fwait
rcrl
sub
xchg
dec
xchg
mov
repz
roll
mov
cwtl
pop
pop
daa
mov
jno
add
and
rorb
add
mov
and
mov
mov
pusha
inc
pop
cmp
cmp
fstl
push
enter
rolb
rcrl
push
mov
lods
sub
adc
sub
and
insl
inc
je
ljmp
int
es
pop
aad
lods
sbb
xor
mov
push
jbe
scas
movsb
push
and
xor
push
jmp
out
inc
mov
adc
fcoms
adc
fwait
jbe
cmp
cli
mov
sbb
or
add
mov
out
push
mov
cmp
insl
fists
shl
inc
sbb
inc
lea
mov
lds
xchg
inc
fcmovne
add
cmpsb
mov
dec
shll
adc
dec
mov
mov
jb
inc
xor
imul
scas
push
pop
das
rcll
adc
cmc
jb
incb
stos
xchg
outsl
push
sarb
mov
mov
or
and
imul
mov
in
scas
or
call
lahf
and
addr16
imul
btr
sahf
inc
loopne
sbb
fnsave
jp
sbb
stos
sbb
push
sbb
bound
stc
fdivs
inc
push
cmp
test
mov
lcall
add
fidivl
outsl
in
jno
inc
dec
pop
pop
jecxz
dec
jns
xor
decl
testl
dec
push
rolb
and
les
push
ffreep
push
sbb
or
in
aas
popl
mov
mov
cmp
dec
dec
test
cmp
adc
push
lret
or
addl
or
cmp
sbb
pop
in
xchg
xor
and
sbb
sbb
sub
xor
or
adc
mov
add
xchg
jno
mov
iret
pop
pop
loop
int
fdivs
xlat
inc
cli
enter
popa
xchg
pop
xlat
sub
insb
add
aas
les
mov
add
leave
lahf
mov
push
push
sbb
lret
out
and
stos
mov
add
sub
mov
jmp
jg
pop
cli
repz
push
push
int3
adc
xor
mov
sbb
pop
xchg
cmc
mov
and
ss
loopne
lods
cltd
ss
aaa
or
mov
mov
inc
fbstp
adc
arpl
mov
lret
inc
fcoms
jne
loop
lea
add
jecxz
ljmp
inc
dec
xchg
arpl
dec
mov
into
dec
pop
lahf
call
ja
cmp
cmpsb
cmp
out
in
pop
xlat
add
inc
jbe
das
jnp
imul
cmp
sbbl
and
cmp
jo
push
imul
xor
out
pop
repz
int3
jo
dec
popa
idivb
stos
or
mov
hlt
sarb
and
stos
cli
mov
push
popa
in
dec
adc
jmp
xchg
ret
xchg
fidivl
mov
rcrb
push
ret
pop
rolb
sub
and
pop
mov
push
mov
fimuls
lcall
lret
jp
mov
xchg
mov
add
lock
popf
sub
adc
sub
lods
popa
mov
ss
mov
mov
arpl
sti
imul
bnd
lods
xchg
cmpsl
in
out
aam
dec
hlt
xor
push
mov
adc
fnstcw
push
test
icebp
pusha
inc
test
xchg
inc
dec
sbb
cli
xorl
xlat
dec
outsb
bound
push
adcb
movsl
and
loop
mov
roll
adc
inc
cmpsb
jbe
movsl
out
mov
mov
or
mov
cmp
jmp
pop
pop
mov
aad
and
rcll
pop
lock
xor
sub
bound
adc
and
fninit
dec
ret
loope
sub
pop
filds
mov
loop
cli
bnd
mov
jle
decb
outsl
lock
sti
xor
fwait
js
sti
sub
pop
lock
mov
mov
fidivrl
adc
adc
push
xor
mov
stos
ret
xor
cmpsb
and
pop
xchg
pop
das
xchg
movsb
leave
mov
int3
movsl
pop
lods
jne
outsl
aam
jg
test
fnstcw
fbstp
xchg
xor
jg
out
test
lods
pop
pop
sub
hlt
dec
outsl
out
cmp
int
mov
inc
jbe
dec
shl
stos
out
or
push
xchg
loope
cmp
fdivrs
mov
or
lahf
mov
dec
cmp
sti
arpl
xchg
push
push
pop
pushf
insl
sub
cmp
and
xchg
roll
xchg
xchg
in
js
push
lea
das
les
inc
test
mov
mov
dec
nop
popf
int
rorb
je
out
filds
xchg
in
push
out
mov
in
mov
inc
adc
sub
add
icebp
xor
mov
sub
loope
xchg
jnp
ja
mov
movsl
jmp
pop
andb
mov
adc
push
mov
pop
add
dec
js
push
xor
shll
mov
xchg
pop
lods
nop
lret
cmp
add
inc
outsl
imul
push
mov
inc
xchg
or
and
cli
push
cmpxchg
xor
sub
adc
ja
mul
outsb
add
mov
lock
pop
test
ss
mov
adc
lret
mov
and
push
xor
adc
xchg
loope
mov
shrl
cmpsb
leave
inc
add
rcl
aad
or
pop
fdivrl
jbe
xchg
repnz
xchg
addr16
sbb
movsl
repnz
outsl
in
test
and
cmp
sub
lret
popa
push
mov
inc
jbe
in
xor
add
sbb
aas
cmp
lock
loope
xchg
pop
jb
outsb
cwtl
fcoml
outsl
dec
sarl
jne
or
sub
lahf
repz
out
arpl
pop
test
out
pop
mov
stos
push
div
rcll
loope
add
dec
mov
in
addr16
clc
mov
leave
enter
push
push
cmc
dec
jmp
push
and
mov
shr
xchg
xchg
lods
dec
mov
lods
xor
mov
adc
push
outsl
xchg
fildl
arpl
mov
ret
dec
mov
rcll
push
lret
xchg
sbb
push
mov
mov
fcmovu
in
fdivr
imul
dec
inc
cmp
mov
mov
leave
mov
mov
jecxz
in
push
mov
fmull
lret
dec
adc
jno
enter
repnz
push
popa
mov
leave
popf
sbb
arpl
cwtl
pop
shll
sbb
call
pop
jle
jno
pop
fildl
push
ret
jp
inc
ret
cmc
cpuid
rclb
sbb
cltd
or
ljmp
clc
cmp
ljmp
pop
inc
mov
idivb
js
int
jg
dec
mov
pop
or
ds
pusha
out
inc
fs
xchg
rcrl
pushf
out
imul
push
and
xor
or
fwait
cwtl
mov
ret
add
rcrl
or
aam
aam
int3
sbbb
dec
test
and
popa
aam
pop
jnp
mov
cli
out
mov
add
cmp
lods
je
jle
arpl
out
cmpsb
loop
jp
add
insl
movsb
cmpl
dec
lods
outsl
and
inc
out
int3
cmp
addr16
sbb
adc
popf
test
sti
push
outsb
xchg
adc
xchg
and
push
mov
xchg
mov
push
out
and
imul
push
imul
add
mov
mov
repnz
mov
repz
jle,pt
je
pop
mov
outsb
and
add
adc
call
xchg
in
dec
jmp
mov
push
push
lock
ds
cs
les
shrl
ds
test
in
inc
lea
jae
mov
cmp
fstps
inc
aaa
push
xchg
dec
sbb
mov
xlat
sbb
lret
test
pop
inc
jae
push
aaa
ficoms
cs
adc
fcomip
or
xchg
hlt
pop
popa
cmp
dec
shlb
popf
aad
jns
mov
mov
scas
loop
dec
xchg
addb
sbb
arpl
fwait
iret
add
test
arpl
cmp
inc
mov
inc
test
stos
mov
cmpsb
gs
pop
pop
orl
mov
push
into
in
or
ss
fsts
mov
jnp
movsb
pop
dec
loopne
imul
sub
push
xchg
scas
xor
and
mov
push
push
pusha
sbb
out
stos
push
repnz
out
test
lods
sbb
xchg
cmc
sub
test
shll
xor
inc
loope
sub
in
mov
and
pop
add
or
add
lods
enter
js
xor
xor
stc
lea
sub
pop
cltd
add
add
cmp
and
out
xor
dec
sahf
out
sar
lds
fsubr
push
cmp
addl
insl
movsl
fyl2xp1
jge
or
pusha
imulb
adc
lcall
cltd
mov
xchg
ss
sarl
aam
clc
fs
and
imulb
sub
jno
frstor
call
inc
ljmp
pop
dec
jae
jae
xchg
inc
or
jl
arpl
add
pushl
pop
je
aas
add
xor
sbb
sub
adc
jns
mov
into
pop
adc
out
imul
js
add
push
aam
std
pop
ret
jle
icebp
sti
or
ret
xchg
lcall
loopne
push
and
repnz
ds
push
sub
xor
push
adc
pop
add
add
repz
xor
mov
ror
pop
mov
adc
adc
jbe
loopne
sbb
or
je
aaa
jno
pop
loope
jne
and
mov
nop
sbb
out
sub
cwtl
jp
sub
pop
dec
aas
and
fldenv
scas
insb
dec
cmpsl
xchg
movsb
ficoms
or
testl
in
sbb
movsl
mov
cmp
lods
xchg
movsb
cli
sti
adc
cmp
ja
jnp
mov
flds
jg
popf
xor
lods
shrl
pop
das
dec
xor
sbb
inc
sub
push
add
addr16
pop
ja
testb
or
pop
mov
outsb
fisttps
sbb
int3
push
xchg
add
das
or
dec
sub
and
ljmp
dec
mov
dec
lock
iret
repz
leave
dec
push
sbb
ljmp
sbb
jno
aad
xchg
xchg
xorl
jecxz
mov
xchg
mov
test
add
inc
xor
icebp
loop
push
inc
pop
mov
add
adc
mov
sub
inc
ds
dec
sub
xchg
push
lahf
mov
imul
adc
inc
xchg
mov
jne
cltd
or
push
push
stos
pushf
jl
out
mov
imul
adc
add
mov
dec
pop
add
lods
dec
scas
adc
dec
scas
xchg
sub
push
lds
mov
stc
ja
repnz
mov
jl
mov
mov
inc
mov
mov
loope
mov
ret
getsec
out
mov
xor
dec
rcll
enter
out
sbb
sbb
test
popf
push
shlb
jl
xchg
mov
imul
mov
iret
cs
js
mov
or
mov
mov
stos
lods
cmp
lea
xor
flds
ret
adc
xchg
insb
xchg
int3
out
jnp
outsb
scas
xor
xor
popf
mov
or
pop
shrb
add
nop
int3
aam
aam
orb
andb
ret
sbb
push
lods
lret
cmp
xchg
xor
rorb
jecxz
fmull
out
or
push
clc
popa
or
sbb
xchg
leave
or
xor
orl
es
and
cmp
ret
ret
adc
xchg
inc
ljmp
mov
mov
fnstcw
movsl
mov
jne
loope
and
xchg
mov
xchg
flds
hlt
in
sbb
rorb
in
imul
std
shll
and
or
pop
mov
cmc
in
sub
cli
cmp
in
add
xlat
jmp
sub
pushf
flds
jo
cmp
sbb
ds
or
cmc
aam
add
and
mov
lret
scas
and
lret
sub
xchg
sbb
loopne
xor
or
dec
mov
sarb
sbb
cmp
and
inc
mov
or
aas
jo
lods
push
in
add
int
push
fwait
es
adc
sbb
push
cmp
xchg
test
fwait
mov
lods
movsb
inc
mov
negb
xchg
ret
shr
aaa
jle
lcall
or
popa
mov
mov
testb
imul
ret
hlt
inc
ja
pop
shrl
rclb
xor
cmp
out
int
xchg
lcall
mov
lret
pop
or
jp
add
fnstsw
lahf
xor
push
aaa
pop
inc
scas
es
test
jns
mov
jb
sahf
nop
jecxz
mov
stc
pop
negb
js
sbb
into
xor
xchg
sbb
jle
je
negl
stc
cmp
pop
aas
stos
lods
mov
pop
cwtl
jnp
mov
rol
add
test
xchg
dec
popf
dec
mov
jae
daa
pop
aaa
or
cwtl
mov
insb
stos
cmp
pop
hlt
out
ljmp
in
in
pushf
iret
adc
mov
mov
or
sub
dec
sbb
shlb
aas
out
jle
fimuls
cmp
or
hlt
mov
ja
enter
pop
sbb
add
mov
popf
jl
stc
lcall
ret
iret
xchg
pusha
or
aam
pop
fisubrl
jne
pop
mov
mov
mov
jno
test
mov
cmp
lret
je
mov
aad
mov
pop
cmp
push
add
jg
loope
pop
pop
lods
inc
sub
sub
cwtl
cltd
pushl
xor
or
leave
es
cmp
mov
clc
test
lods
ret
fidivl
dec
shll
lcall
xor
shrl
jle
sbb
inc
and
adcb
jb
sbb
in
mov
dec
pop
cmp
data16
gs
rcl
ss
shrl
push
jle
xchg
xchg
add
sahf
loopne
inc
dec
mov
sub
out
add
subb
lods
xchg
aas
sti
rcrl
roll
adc
xorb
jg
jge
mov
jmp
inc
jge
cmpl
xor
mov
idivl
xchg
pop
out
mov
test
fistpll
mov
out
or
mov
imull
pop
sub
sub
and
add
stos
lods
push
rclb
sahf
aaa
cmc
push
movsl
adc
jl
out
jnp
mov
das
pop
out
call
add
inc
xor
sub
mov
outsb
mov
loopne
rcrb
enter
inc
mov
std
jecxz
inc
mov
popf
inc
adc
daa
pushf
subl
adc
rclb
mov
cs
in
pop
popl
cli
mov
inc
imul
and
add
mov
sahf
mov
jecxz
mov
das
mov
xor
lea
dec
cli
pop
xchg
add
cmp
cli
ss
push
enter
inc
pop
cmp
aaa
inc
jmp
sbb
mov
mov
lret
test
insb
imul
and
fldcw
xchg
test
out
sbb
or
ret
loop
dec
jmp
inc
stc
test
xor
or
adc
inc
dec
in
lahf
xor
rorb
notb
scas
sub
adc
inc
dec
xchg
dec
inc
shll
mov
jle
cmp
mov
xchg
in
scas
mov
test
pop
adc
lods
adc
mov
adc
pop
mov
fwait
hlt
and
fiadds
rolb
pop
bsr
sti
popl
in
dec
mov
and
adc
push
loope
pop
aam
add
pusha
lret
xchg
fdivrs
adc
jne
jg
sub
addr16
sub
push
mov
leave
cld
dec
mov
rorb
xor
stos
or
idiv
divl
out
adc
xchg
es
cltd
insl
insb
jmp
mov
pop
fsub
xchg
fs
adc
ss
jbe
inc
pop
lds
scas
mov
je
pop
loopne
cwtl
push
aad
dec
shlb
pop
leave
dec
mov
xchg
imul
cmc
jnp
push
xchg
pushf
inc
and
aam
dec
xor
repz
js
shl
loop
inc
out
add
sub
dec
out
pop
push
pusha
and
add
xchg
into
push
mov
push
loop
bound
add
mov
sbbl
push
mov
adc
sub
mov
adc
ss
cwtl
sub
adc
lret
dec
stos
xor
mov
sarb
insl
mov
subb
push
sub
inc
inc
testb
js
stos
sub
sub
mov
into
shll
iret
dec
inc
pop
lret
mov
js
jns
xchg
cmp
fwait
outsl
mov
cwtl
repnz
cwtl
test
mov
push
icebp
dec
or
mov
mov
jecxz
xchg
rol
iret
js
in
orb
out
or
insb
jecxz
insb
jmp
nop
lods
xchg
sub
mov
push
mov
inc
jno
jge
or
fdivrp
mov
ja
add
mov
add
push
xor
outsl
lahf
push
push
sbb
in
pop
outsl
sahf
idivb
and
das
inc
sahf
scas
mov
incb
imul
adc
push
hlt
jle
std
clc
fidivrl
mov
cwtl
into
push
ja
lods
push
fs
sub
cli
in
sub
cmp
shlb
pusha
cwtl
inc
mull
or
inc
icebp
daa
mov
int3
adc
mov
inc
loope
push
jb
jecxz
loope
repnz
dec
cmp
or
push
lret
sub
cmp
test
out
jo
notl
mov
or
addr16
fwait
nop
test
adc
cltd
push
sbb
mov
xchg
mov
ret
loop
fs
xchg
addr16
xchg
jecxz
enter
insb
sti
cmpsb
jmp
inc
push
sub
fs
sbb
mov
lcall
jne
push
roll
loope
fwait
dec
lds
pop
cmpb
inc
sbb
stc
fdiv
and
lret
cmp
xchg
je
or
add
push
frstor
add
fistpl
fmulp
sbb
pop
out
mov
xchg
sar
mov
mov
sub
ss
int3
mov
outsl
imul
test
and
fmulp
lcall
or
addl
xor
push
fisubl
lret
out
out
push
jne
jp
imul
and
pusha
ljmp
sub
jbe
int3
fsubrl
inc
mov
mov
mov
jb
aas
call
push
xchg
repnz
cmp
test
push
lret
mov
ret
ds
cmp
adc
cwtl
stc
mov
push
dec
sarl
hlt
mov
jp
lret
sarb
inc
shll
std
xchg
pusha
shrl
mov
push
xor
insl
xchg
pop
in
daa
cld
lds
mov
cltd
js
aam
into
push
sub
scas
rolb
stc
ss
inc
scas
cmp
push
mov
adc
mov
je
and
pop
es
insl
cmp
mov
mov
es
cmp
inc
dec
add
daa
jne
mov
sub
mov
rolb
stos
or
loope
jge
outsb
call
andl
arpl
pop
pop
pop
mov
sub
xlat
imul
fwait
mov
add
sbb
or
cmp
sub
pop
pusha
mov
push
add
enter
jbe
or
loop
xor
fwait
xchg
and
lret
scas
das
icebp
inc
std
add
cmpsl
mov
mov
pop
into
bound
push
sbb
xchg
pop
sbb
sub
in
mov
jno
es
jo
loope
std
aam
sbb
xchg
jnp
repz
movsb
fcmovnb
clc
inc
in
daa
and
loop
hlt
inc
inc
out
pop
stos
inc
add
mov
aas
jl
call
pop
mov
dec
out
mov
int
scas
negb
xorb
movsl
jnp
push
pop
jb
gs
insl
divl
adc
sbb
popa
pop
lods
push
jno
pop
jno
push
repnz
cld
pop
int3
addr16
popf
xor
mov
push
sbb
dec
pushf
fwait
pop
add
mov
fldcw
movsb
mov
daa
cld
fldl
add
xor
mov
sub
enter
xor
push
js
xor
lods
sti
js
pop
insl
sti
dec
mov
inc
push
in
sub
icebp
ret
add
xor
push
js
xchg
mov
adc
pop
pop
cmp
clc
inc
cmp
xor
lods
jecxz
push
in
dec
pop
rclb
ret
in
add
leave
sub
inc
fstpl
pop
and
mov
jg
orb
or
mov
les
cli
imul
xor
iret
loopne
dec
jne
mov
add
movsl
ret
mov
neg
ffree
jge
ret
sub
lret
cmpsl
les
mov
mov
sbb
es
add
jo
dec
mov
das
loopne
xor
cmpsb
or
aad
aaa
mov
cmpb
or
xchg
sub
ljmp
imul
mov
cmp
fld
test
in
inc
mov
cmp
out
lods
add
xlat
add
mov
mov
sub
add
pop
rolb
or
roll
push
pop
sahf
sbb
mov
mov
stos
stc
loop
xchg
sbb
cwtl
push
in
cs
dec
inc
cmp
int
out
bound
incl
pop
and
cmp
xchg
mov
js
push
shll
repnz
add
sbb
and
sub
mov
jns
es
orb
insb
inc
mov
jnp
and
dec
push
stos
mov
aaa
jmp
out
pop
fcos
add
lret
pop
and
aad
aad
sbb
mov
cmp
loope
test
scas
jle
dec
data16
shlb
bound
or
xchg
sbb
hlt
into
sub
nop
dec
cmp
or
in
hlt
insb
or
sbbl
lret
lds
jmp
fdivr
mov
insb
mov
loopne
inc
jb
push
ja
out
xchg
scas
and
in
movsl
inc
push
mov
pop
xor
rcrb
push
jp
ret
cmp
mov
test
and
aam
pop
or
cmp
jnp
xor
leave
push
icebp
inc
ljmp
xchg
or
mov
shrd
int3
fs
jo
mov
fisubrs
scas
and
fdivp
ret
xchg
repnz
push
inc
lcall
popa
add
lcall
pop
xorl
push
sbb
inc
xor
std
ja
inc
pop
xlat
pop
cmpsl
pop
jle
xchg
jne
push
mov
insb
dec
xor
or
push
xor
jo
sbb
xchg
xor
test
rorl
add
cli
out
imul
fadds
insb
int
dec
cmp
std
sbb
push
hlt
rcrl
mov
popa
popf
inc
or
ret
daa
sub
inc
and
dec
inc
in
fs
pop
scas
push
repz
jo
popf
fprem1
push
xchg
mov
jne
xchg
aaa
fwait
int3
outsb
push
call
push
ljmp
push
pop
inc
xchg
push
pop
sub
jb
popf
push
or
pushf
inc
and
repz
in
add
les
push
js
dec
add
push
inc
lods
aam
mov
sti
sub
test
cmpsb
fists
cvtps2pd
mov
mov
push
jae
ficomps
jmp
xchg
xchg
jb
pop
rcrb
out
pop
mov
clc
push
jmp
bound
aad
mov
lcall
filds
es
xor
mov
mov
ljmp
daa
leave
call
xchg
dec
cmc
sub
add
add
cltd
fcomps
mov
test
or
xor
test
mov
push
mov
xchg
dec
xchg
and
mov
dec
mov
int3
jle
aaa
rolb
or
sbb
cld
mov
lods
jmp
inc
in
ret
inc
lret
and
sub
add
mov
mov
rcr
out
adc
int
push
aam
cmpsl
adc
repnz
fwait
cli
popf
arpl
sbb
add
gs
xchg
mov
into
cmp
xor
sbb
xchg
cltd
push
pushf
or
pop
into
mov
ret
sbb
mov
fcmove
ret
std
mov
mov
jl
aad
into
mov
fst
je
movsbl
add
push
sbb
ja
loopne
fmuls
and
rclb
push
int3
fwait
xchg
and
ja
mov
movsl
sub
arpl
loopne
mov
pop
pop
xor
sub
adc
adcl
xor
imul
pop
mov
mov
adc
out
je
or
push
inc
xchg
gs
in
mov
or
orl
cmp
scas
jge
inc
stos
mov
mov
js
push
inc
push
outsl
cmp
insb
test
cmpsb
adc
fldt
jmp
add
jle
mov
sub
fdivrl
pusha
push
or
incb
lods
incb
mov
fisubl
inc
xor
lods
fwait
rcrl
xchg
mov
test
repz
xor
mov
xor
xor
adc
rclb
jne
pop
mov
pop
add
mov
sub
pop
mov
mov
cmp
push
pxor
fs
or
ja
push
jns
subl
lret
push
push
sub
ja
inc
fwait
add
pushw
sub
fimuls
int
mov
or
jp
xor
repz
or
add
les
pop
aaa
and
out
sbb
gs
push
push
cwtl
pushf
add
sub
ljmp
push
pop
das
mov
pusha
jecxz
sub
xor
push
adc
dec
aad
sub
xchg
mov
push
push
daa
dec
js
mov
jnp
mov
xor
push
add
arpl
push
mov
xor
and
sbb
xor
fdivp
repz
fs
pop
rolb
jmp
enter
inc
inc
add
insl
div
aad
jle
pusha
push
sarl
inc
jo
int3
imul
and
orl
fcoms
sbb
into
inc
sbb
enter
inc
mov
enter
vcvtss2si
pop
aas
mov
sbb
addl
jmp
in
mov
js
jecxz
insl
fcmovnu
mov
xchg
push
cli
xchg
insl
jbe
sbbl
call
test
jg
bound
cltd
lcall
cmp
mov
das
jmp
or
enter
jge
and
xchg
xchg
jo
arpl
add
cmpsb
and
adc
dec
mov
dec
xchg
push
fs
dec
push
xchg
xchg
sbb
incl
sub
aam
pushf
mov
pusha
in
xor
cwtl
xor
xchg
je
xor
xlat
add
mov
xor
dec
inc
xor
jno
cs
jae
rcrb
cmpsl
or
jne
push
repz
cmp
jge
fdivrl
addr16
das
in
mov
dec
scas
insl
lock
stos
xchg
jmp
mov
sbbb
lret
mov
adc
cli
pop
add
leave
decl
push
inc
imul
lret
cld
scas
xchg
sbb
or
dec
cmp
and
stos
es
jnp
jge,pt
xchg
pop
or
cmp
push
or
xchg
jae
fmul
daa
outsb
sbb
pop
mov
push
and
xchg
out
aad
pop
mov
dec
push
xlat
addr16
leave
pop
movsb
sub
sbb
cmp
add
inc
lss
sub
mov
dec
jle
imul
js
rorb
pop
fwait
enter
mov
and
jecxz
sbb
mov
test
inc
push
xchg
imul
std
adc
subb
mul
xlat
cwtl
lret
xchg
push
cs
fwait
mov
mov
cmpb
aam
push
dec
std
push
popa
xor
inc
out
push
js
pop
xor
jmp
pop
inc
popa
es
add
add
out
xlat
cwtl
mov
rol
popl
xor
shrb
fsubrs
sbb
xchg
xchg
stc
mov
rclb
dec
pop
ror
ds
iret
push
or
shrb
iret
mov
cli
lret
test
test
dec
xor
movsb
fst
out
pop
sub
pop
insl
add
inc
je
add
sbb
loop
inc
aad
jns
ja
popf
inc
gs
jmp
testb
pop
ret
aas
rol
lret
ret
ds
iret
mov
dec
push
rclb
xlat
jmp
jo
fbstp
mov
xor
sub
xor
dec
sub
or
loop
adc
and
xchg
or
jmp
fistpl
jnp
sbb
push
sub
xor
or
xor
pop
sub
or
push
adc
mov
mov
mov
mov
out
inc
ret
stc
mov
push
lret
repz
dec
jne
imul
jl
psllw
mov
push
loop
lods
shrb
iret
push
jmp
xlat
lods
lret
in
in
out
popa
jp
add
xchg
adc
in
fcmovbe
aaa
cli
je
xor
aam
mov
hlt
dec
jmp
mov
loope
cltd
xor
fsubrl
xchg
rcrl
and
insb
popa
pop
mov
sbb
jmp
sub
xchg
jo
cli
xor
ret
push
inc
dec
push
lret
mov
cmp
push
jmp
outsb
xchg
imul
cmc
rcll
movsl
mov
mov
movsl
fs
pop
out
mov
shll
mov
mov
int
pop
pop
xor
stc
adc
nop
mov
add
lock
je
sub
int3
pop
mov
loop
inc
cmc
push
mov
pop
or
jae
adc
not
adc
inc
lret
rcll
jp
outsb
xchg
add
xchg
stos
cmp
js
sar
outsl
into
dec
adc
sub
test
mov
iret
push
cli
sarb
pop
sbb
mov
mov
into
test
mov
je
sub
cmpsb
jge
adc
lock
stos
pusha
mov
xchg
add
push
mov
inc
push
xchg
ja
and
loopne,pn
fwait
test
mov
jb
data16
fptan
mov
dec
imul
roll
popa
lds
sahf
xchg
add
pop
push
jnp
mov
pushf
icebp
cli
je
in
mov
pop
in
out
mov
sbb
push
pop
xchg
mov
adc
lahf
cs
hlt
and
loope
mov
sbb
dec
cmp
xor
mov
insl
ffreep
fs
dec
ret
xchg
sbb
xor
xchg
sbbb
adc
jae
adc
xor
pop
mov
insl
arpl
or
ja
cmp
in
rcrb
inc
push
negl
pop
cmp
jp
push
test
js
mov
xor
loope
inc
push
sbb
push
xor
jno
add
push
push
test
or
lret
aas
insl
cmp
call
sbb
int3
cmpsb
aam
and
push
mov
jecxz
and
mov
out
jbe
sub
dec
mov
jge
dec
aam
into
subb
lcall
jp
mov
push
sbb
mov
sti
repz
negl
les
inc
in
imul
mov
mov
iret
sbbb
dec
ljmp
out
mov
aas
and
shrb
push
and
mov
inc
pop
sbbl
leave
imul
data16
cltd
scas
out
lock
shrl
xor
adc
cli
pushf
xor
popa
imul
arpl
xchg
jno
icebp
imull
sbbl
or
pushf
push
sub
lods
icebp
mov
pusha
cltd
jge
push
popf
and
cltd
test
cmp
xchg
adcl
lods
mov
or
push
stos
xchg
jb
arpl
mov
mov
jb
stos
rclb
mov
pop
lea
or
int3
xorl
std
add
inc
movsl
mov
pushl
shll
mov
enter
test
scas
add
inc
enter
shr
scas
push
in
imul
jbe
jb
mov
or
dec
pop
xorb
out
test
pop
movsl
lcall
mov
gs
imul
cmp
cmpsb
jmp
fiadds
xchg
jnp
lea
cmpsl
jne
sbb
and
mov
jns
insb
fiadds
push
repz
js
imul
std
push
insl
rcll
jge
daa
fcom
hlt
mov
mov
add
js
pop
pop
test
inc
pop
pop
mov
xor
mov
lock
popf
leave
fldt
mov
in
test
dec
add
loope
or
jl
push
jmp
xor
adc
adcb
mov
pop
dec
xor
or
out
xchg
cmp
jge
fwait
cmp
or
daa
out
fiaddl
pop
dec
insb
mov
imul
dec
fs
test
jne
stos
lahf
sub
push
js
out
mov
or
lods
gs
into
mov
repnz
jns
out
pop
fildll
jmp
es
nop
fmuls
enter
daa
dec
adc
inc
dec
xchg
mov
sub
inc
pop
nop
xor
mov
cmp
rcrb
add
dec
xchg
sahf
stc
enter
dec
mov
or
dec
inc
sbbb
imul
adc
loope
jg
mov
jmp
scas
mulb
xor
repnz
sbb
dec
and
les
daa
jb
push
push
xchg
es
imul
inc
js
jne
cwtl
movsl
ss
sbb
mov
sub
test
mov
mov
cmp
push
inc
imulb
rorl
loope
mov
pushf
gs
and
ljmp
out
cltd
mov
dec
sbb
push
stc
mov
pusha
ret
dec
or
into
jo
mov
xchg
cmp
jle
aaa
pushf
mov
pop
das
add
dec
mov
inc
into
pop
mov
pushf
lods
ret
dec
cmp
xchg
fildll
and
lret
das
inc
add
jbe
push
mov
lahf
popf
addr16
bound
sbb
in
cltd
ret
into
nopl
fwait
iret
mov
or
mov
lds
inc
cmp
ret
shl
jo
mov
int3
imul
mov
cmp
aas
outsb
push
mov
mov
xor
sbb
dec
or
pop
mov
mov
or
xlat
mov
je
pushf
jne
sahf
loopne
xchg
rcpps
dec
mov
cmp
pop
sub
jnp
je
push
gs
clc
mov
xor
test
jl
mov
loopne
fsubr
pop
ds
scas
mov
aas
test
pop
scas
clc
pop
fs
pop
lods
jge
adc
dec
iret
dec
lock
flds
loop
je
daa
lret
in
cmc
test
fldcw
sub
inc
addr16
xor
cwtl
and
mov
call
lea
sub
xor
insl
ret
jne
test
ficomps
sub
ret
mov
shrl
and
jge
icebp
mov
out
push
adc
push
sbb
cmpsl
scas
sbb
mov
xor
sahf
add
lock
bound
stos
fistl
mov
xchg
mov
adc
lods
in
mov
add
sbb
mov
test
mov
push
jno
cltd
push
inc
pushf
mov
sbb
lret
and
jmp
ds
pop
xchg
repz
sub
sahf
xchg
jmp
jg
lods
repz
mov
or
ss
ds
dec
adc
sub
push
jne
mov
dec
push
push
mov
dec
les
push
lds
loopne
add
in
push
mov
jp
jmp
xchg
fnstenv
fwait
shl
nop
popf
outsb
push
popa
daa
mov
push
loop
xchg
push
jb
ss
stos
ja
shlb
pushf
inc
je
push
or
lret
pop
push
push
fs
je
xchg
jbe
ss
mov
or
rcrb
and
sub
nop
out
cmp
bound
stos
repnz
jns
and
lods
mulb
ret
test
aad
xor
iret
add
pop
add
out
dec
pcmpgtw
sbb
cmp
xchg
call
out
xor
xchg
repnz
jle
mov
imul
loopne
mov
cmp
push
pop
cmp
add
pop
push
sarb
mov
push
cmp
in
ret
and
pop
xchg
or
enter
xor
mov
sub
xchg
shlb
mov
rolb
xchg
fwait
inc
jne
imul
pop
test
jmp
orl
sbb
mov
mov
aam
push
sahf
ja
fidivl
fs
adc
hlt
dec
lock
sbb
mov
or
pop
pop
jg
adc
popf
jl
jnp
adc
or
push
adc
cs
pop
das
mov
stos
push
mov
mov
jp
pop
lret
pop
mov
das
aad
out
jb
mov
pusha
adc
out
xchg
clc
adc
in
cmpsl
popf
test
xorl
mov
outsl
inc
scas
pop
pop
mov
stc
gs
cmpsb
add
mov
mov
mov
pusha
mov
mov
or
adc
mov
xor
cmp
pop
in
shr
in
xchg
push
cmp
loop
outsl
das
imul
bound
jb
add
imul
and
xor
or
outsb
fisttpl
mov
jg
repnz
add
imul
mov
push
sub
pop
pop
mov
sbb
jns
xchg
lock
stc
lock
inc
aam
iret
and
mov
stos
roll
lret
cld
fnstsw
push
inc
shll
sbb
fdivrl
sbb
imul
inc
pop
dec
sub
or
dec
les
lret
push
inc
inc
fisttpll
cmpsl
out
jb
arpl
lret
loopne
or
xchg
lds
mov
inc
loop
xchg
jg
mov
and
data16
add
aaa
adc
imul
fcoms
dec
les
movsb
dec
adc
inc
aam
loop
popf
xchg
adc
xchg
ja
jl
fcomp
sbb
jne
shrb
fildl
pushw
jbe
stc
add
std
in
popf
add
jl
ret
dec
sub
sub
xchg
add
adc
push
cmp
lds
pop
mov
lahf
adc
sarl
mov
fsubrl
and
in
test
je
and
push
dec
aaa
hlt
lock
roll
xchg
sbb
lea
adc
sub
mov
xor
cmc
andb
cmp
call
and
or
jmp
adc
repz
cmpsb
mov
sbb
out
ljmp
in
cmp
xor
insl
lret
psraw
jne
xchg
pusha
lcall
sub
jo
xchg
ljmp
sub
or
and
lahf
jo
sbb
arpl
pushf
cli
pushf
mov
xor
push
mov
out
arpl
lahf
xor
jp
enter
cmp
or
popf
adc
cmpsl
js
xor
sbb
dec
dec
in
mov
jecxz
and
sbb
daa
fwait
inc
int3
jle
pop
inc
jb
out
jecxz
nop
add
push
loopne
jnp
adc
and
inc
push
ljmp
mov
xchg
ds
lahf
push
je
dec
push
push
fs
adc
xor
mov
push
pop
or
rolb
testb
mov
imul
aaa
and
in
orl
scas
pop
add
icebp
loope
sub
push
push
xchg
jno
inc
dec
mov
push
inc
loopne
bound
jl
addr16
xor
imull
clc
dec
mov
scas
arpl
lock
cmp
xor
cmpsl
jecxz
aas
arpl
adcb
movb
and
fildl
popf
hlt
outsb
jno
xor
inc
sub
pop
adc
push
icebp
test
fcomps
pop
mov
jecxz
cmp
xlat
and
or
cmp
cmp
icebp
cli
int
inc
sti
adc
mov
fnstenv
lods
jmp
ja
jo
sub
mov
pop
xchg
pop
mov
and
ss
mov
xchg
xor
pop
mull
inc
jmp
lea
lods
xchg
pop
arpl
loop
mov
jnp
cmp
std
mov
sub
pop
movsl
lods
insl
cmc
cmp
cmp
test
shrl
out
popa
scas
lret
pop
mov
ret
xchg
xor
mov
loopne
cmp
pop
cmp
out
cmpsl
mov
mov
xchg
xor
push
test
test
test
out
mov
and
push
gs
cwtl
mov
ficomps
pop
cmp
fs
adc
ret
cmp
ss
push
ret
ret
les
shld
stos
cmpsb
and
jmp
jmp
mov
mov
pop
pop
mov
mov
mov
inc
push
and
mov
pusha
push
adc
inc
mov
outsb
dec
rorl
bound
xor
stos
mov
and
lcall
jno
xchg
mov
fwait
pop
arpl
out
mov
inc
mov
add
aaa
iret
cwtl
sub
xchg
sbb
lret
push
fidivrl
ds
pop
aad
rorb
add
sbb
dec
sbb
sahf
cld
out
xchg
inc
push
dec
adc
jo
or
loopne
mov
arpl
sahf
inc
mov
subb
add
fsubrl
into
adcl
sbb
cmc
in
xchg
scas
ret
lods
stc
pop
push
aaa
cmp
mov
xchg
inc
imull
cwtl
cltd
xchg
movsl
xchg
mov
aas
push
mov
or
or
mov
scas
or
icebp
pop
aas
test
pop
mov
imulb
sbb
sub
or
mov
sub
aaa
xchg
out
xchg
add
cmp
add
fstps
pop
fcmovne
fisubrs
adc
jae
add
sbb
cld
les
sbb
sub
bound
pop
dec
icebp
lcall
loope
gs
cld
xorb
inc
ja
sub
sbb
jno
nop
cltd
imul
pop
add
sbb
test
xor
fs
into
insl
lods
loopne
sub
mov
aaa
push
call
clc
adc
jle
fwait
ljmp
xor
xor
mov
dec
cwtl
movsl
mov
or
in
frstor
in
cwtl
in
cmp
dec
rorb
repnz
test
cmp
mov
xor
push
xchg
cli
and
push
cmp
inc
sbb
adc
adc
xchg
cltd
cld
cmpsb
xchg
and
mov
sahf
hlt
mov
leave
mov
scas
stos
pusha
movsb
xlat
ret
aad
leave
jg
fldenv
std
mov
fwait
push
mov
pop
jb
adc
cli
rclb
imulb
sarl
mov
add
imul
add
cmpsl
push
dec
adc
rcrb
mov
xchg
xor
xchg
ljmp
mov
pushf
sub
jo
clc
dec
adc
xchg
dec
jp
push
inc
xchg
loopne
pop
lock
cmpsl
std
pusha
movsl
and
and
mov
outsl
jno
aam
or
stos
repnz
mov
push
fsubl
sbb
hlt
cmpl
dec
pop
and
push
or
imul
cmc
cmp
xorb
clc
mov
test
out
mov
mov
push
sbb
lret
and
jmp
pop
dec
imul
aas
mov
pop
les
add
add
xchg
and
loopne
xlat
stos
addr16
pop
xchg
in
sbbl
test
imul
out
inc
inc
repz
and
adc
cs
aad
out
pop
add
sbb
lret
rorb
mov
pop
nop
in
sbb
fwait
xchg
adc
mov
aas
mov
pushf
inc
xor
pop
push
pop
scas
sbb
pop
in
mov
pop
das
push
lock
popaw
pop
mov
leave
xchg
dec
pop
cli
cmpsl
mov
es
sarl
test
scas
ret
jl,pn
and
lcall
jns
cld
shlb
push
or
inc
notl
in
xlat
cmpsl
sti
test
lds
lods
int
mov
lret
xchg
lods
popf
inc
shlb
jnp
js
push
pop
xchg
cmp
shrb
lock
mov
idiv
mov
add
es
mov
push
in
sti
jb
push
xchg
fstpl
push
dec
aad
dec
rorl
call
pop
mov
sub
inc
jns
inc
stos
cmp
test
mov
pushf
shlb
dec
adc
call
ficoms
xchg
or
shlb
daa
shlb
sub
cmp
xchg
loopne
push
orb
std
loop
push
and
sbbb
aaa
sarl
or
mov
or
jbe
jl
push
repz
sub
jae
shll
stos
xor
jno
aas
ds
out
mov
xor
pop
jbe
test
ja
cmp
mov
sbb
push
pop
lret
ljmp
jle
lret
sti
mov
jae
mov
aaa
sbb
loope
jns
jne
fsubp
gs
mov
cmp
sti
lret
mov
ret
out
repnz
xchg
cmc
fwait
call
sbb
mov
and
dec
lock
xchg
sub
add
lret
xor
mov
dec
fldenv
lea
stc
movsl
out
xchg
in
sbb
fs
sbb
lret
pop
xlat
inc
cmpsb
sub
or
add
mov
pop
out
and
fstl
jge
bt
mov
mov
in
daa
add
repnz
fcoml
lahf
and
sub
xor
mov
dec
out
fdivrs
insl
jmp
mov
jae
faddl
scas
push
or
cmpl
mov
dec
pop
lods
lods
loopne
cmp
imul
cmp
fdivp
xchg
mov
in
rol
dec
push
and
les
mulb
addr16
ficomps
adc
out
mov
cmpsb
gs
lods
dec
sarb
cmp
sub
jae
repz
xor
rolb
mov
cmpps
mov
push
fdivr
inc
jb
addl
ret
dec
fwait
shlb
mov
jp
and
insl
pop
jae
xor
jno
sahf
cld
loop
dec
lret
jae
push
mov
out
icebp
and
fstpt
pop
out
xchg
push
inc
or
jg
pusha
inc
mov
push
arpl
ds
sti
insl
enter
addr16
clc
nop
mov
xor
popa
orb
enter
mov
dec
addl
push
xorb
cmc
or
rcrb
mov
fldenv
das
xchg
test
push
outsl
shrb
loop
jle
lea
or
lahf
cmp
outsb
cmp
cmp
mov
ret
and
mov
je
jmp
fdivrl
aaa
addr16
enter
pop
dec
scas
jmp
pop
pusha
mov
mov
mov
je
cli
pop
push
xchg
jp
pop
je
cmp
dec
mov
xchg
in
mov
std
sbb
or
sbb
outsl
lcall
fstpl
mov
xchg
push
cmpsb
popf
sub
mov
add
cwtl
loope
jae
scas
jge
lock
test
push
lahf
inc
stos
xchg
out
sub
mov
fisubs
pop
jle
in
jg
add
ftst
out
lea
stos
mov
pop
inc
mov
sbbl
aam
adc
or
dec
shrb
sahf
fwait
or
dec
out
ret
push
push
or
jp
fdivs
test
shrb
stos
ds
adc
ds
lock
pop
insb
mov
cmpsl
mov
leave
inc
orl
mov
xchg
jno
ret
sti
or
inc
pusha
mov
or
add
jns
xchg
cmp
or
adc
aad
shrl
popa
ret
jl
adc
out
lea
pop
push
cmpsl
mov
scas
nop
lods
fcomps
or
icebp
test
or
xchg
sti
sbb
stos
mov
in
sub
dec
pop
neg
dec
std
sub
ret
pop
adc
adc
scas
gs
cltd
decl
into
cmp
add
xor
push
out
int3
aam
lea
dec
jns
mov
dec
and
nop
push
insl
sbb
add
cmpsb
push
pop
sahf
out
ja
push
mov
pop
dec
adc
jb
inc
adc
sbb
lahf
arpl
lods
fwait
adcb
xor
push
sbb
insl
dec
add
fisubrs
add
stos
int3
pop
imulb
and
fimuls
rcrl
adc
push
xor
dec
push
jbe,pn
adc
mov
pop
push
xor
sti
jl
sub
push
mov
dec
sub
aam
sub
aaa
lock
cmp
pop
scas
pop
subl
mov
int3
shlb
cmp
cmc
mulb
into
loope
test
xor
lods
ljmp
loop
orb
data16
xlat
enter
and
fisttpll
shll
xchg
sbb
pusha
popl
pop
lock
push
imul
stos
pop
add
inc
cwtl
cltd
movsb
daa
push
mov
push
inc
jg
or
mov
xchg
aas
std
mov
scas
or
mov
xchg
imul
imul
adc
jp
add
add
adc
xchg
movsb
sbb
adc
stos
stc
xchg
add
loope
sub
loop
pop
adc
add
pop
subl
and
bound
mov
fbld
dec
adc
xchg
lret
pop
jecxz
movsl
push
push
scas
mov
or
rcll
mov
inc
popf
out
dec
mov
push
rolb
aas
loopne
inc
testb
shlb
call
dec
repnz
xor
inc
pop
into
lea
in
mov
cmc
push
sahf
jg
jge
test
imul
xchg
sub
fbstp
int
lret
pop
sbb
xlat
fdivp
push
aas
hlt
sahf
in
mov
pop
and
or
rclb
int3
pop
and
push
adc
add
adc
mov
cmpsb
xchg
mov
push
jl
xor
mov
cli
faddp
push
imull
sti
shrl
jl
xchg
stos
pop
sub
inc
inc
xchg
pop
jo
insl
gs
sub
jmp
ds
adc
jmp
inc
hlt
adc
or
xchg
stos
xchg
hlt
xchg
cmp
jl
pop
xor
ja
or
xor
mov
pop
pop
xchg
xor
ds
pusha
mov
loopne
cmp
xchg
xchg
loope
add
inc
xchg
dec
jge
xor
add
aam
sbb
scas
inc
std
gs
or
mov
push
rcrb
pusha
adcb
and
mov
add
or
dec
cmp
mov
das
repz
daa
jae
fwait
out
and
lock
jno
sbb
in
inc
mov
cld
xor
hlt
lret
xchg
push
lcall
aam
mov
leave
outsl
push
adc
lahf
add
sbb
andl
stos
jo
push
xchg
xchg
int3
pop
sbb
jecxz
dec
sub
or
leave
adc
ds
aad
push
outsl
push
and
ljmp
iret
sbb
push
loope
or
lret
xchg
pop
loop
adc
add
cmp
in
dec
pop
push
scas
sarl
pop
xor
pop
or
cmc
mov
lret
daa
das
pop
jns
or
movsl
mov
ficompl
add
mov
rcrb
lret
xchg
mov
cmpsb
outsl
loopne
add
std
mov
loop
mov
call
pushf
xor
shrb
aas
pop
add
pop
ljmp
popf
repnz
cmpsl
cs
and
add
jecxz
push
aaa
lods
lret
xchg
ds
push
cmp
iret
in
bound
push
aaa
mov
lea
loopne
lock
xchg
adc
shr
cwtl
dec
pop
bound
mov
fistl
rcrl
jbe
cwtl
loop
sbb
lret
mov
jb
shll
mov
daa
mov
out
adc
in
xor
movsb
sub
imul
jecxz
jns
ret
ret
gs
jg
es
cmp
push
push
call
stc
mov
stos
test
ja
jmp
xchg
push
in
mov
popa
lahf
mov
jmp
lods
adc
xchg
arpl
push
int
in
cmp
adc
cmp
jge
push
mov
pusha
dec
insl
mov
dec
data16
lea
lods
xchg
mov
and
push
pushf
lcall
pop
fcomps
cmp
mov
xor
or
xchg
push
fs
out
mov
stc
icebp
xchg
xchg
xlat
test
jmp
lock
mov
fnstenv
push
pop
cld
add
popl
lret
jns
pop
cmp
xchg
arpl
or
cmp
or
std
jecxz
addr16
psllq
mov
add
sar
adc
mov
pusha
inc
cwtl
jnp
popf
dec
test
push
mov
or
divl
xor
or
push
and
push
dec
dec
arpl
or
cmp
ss
mov
cmpsb
ds
sbb
gs
dec
daa
ret
repnz
imul
push
loop
fucomi
sbb
or
push
into
stc
adc
jne
nop
sbb
xor
sub
mov
cmp
pop
aad
popf
out
adc
sub
push
out
lahf
jecxz
fisttpll
xchg
mov
push
pop
jae
and
adc
cmp
xor
iret
dec
lahf
mov
mov
pop
inc
mov
sbb
lock
ja
sub
aas
push
jns
jne
loope
orb
jne
pushf
shrb
cli
and
stc
push
lds
dec
xchg
sbb
mov
xor
mov
es
dec
push
xchg
fisubrs
shlb
mov
dec
test
call
lret
pop
pop
fimull
dec
adc
mov
pop
sub
data16
dec
or
inc
xlat
adc
sub
mov
lods
icebp
cmp
inc
pop
mov
ljmp
in
jmp
jl
int
pusha
cltd
jmp
dec
xchg
sti
lret
outsb
and
test
xchg
repz
test
add
fnstsw
mov
add
sahf
mov
mov
push
cmp
push
mov
mov
sub
aam
es
shrb
mov
cmp
push
and
mov
xor
call
ja
xor
dec
mov
inc
or
xor
fnstcw
test
mov
out
jge
mov
mov
loopne
pusha
jmp
cmp
pop
cmpsb
adc
and
or
jno
lcall
sbb
stc
jno
mov
xor
rclb
out
insb
mov
rcll
mov
ret
inc
and
dec
sbb
ljmp
cmp
sahf
fwait
push
mov
pop
movsl
push
test
mov
cmp
add
cltd
xor
inc
out
xchg
inc
xchg
iret
movsb
jmp
and
scas
fmuls
mov
je
addr16
outsb
adc
mov
repnz
jecxz
sub
leave
aas
push
cmpl
sub
shrb
loope
addr16
das
lods
test
lods
adc
push
and
out
into
xor
pop
dec
cmp
adc
ljmp
mov
rcrl
shrl
testb
add
fcomps
sbb
sub
mov
xlat
sbb
sub
fidivrl
rorb
repz
fadd
pop
fists
xchg
adc
inc
jge
ficoml
dec
adc
xchg
jbe
popf
int
inc
int3
adc
imul
xor
sbb
mov
xor
fmuls
sub
mov
jb
dec
cmpsl
aaa
adc
mov
and
mov
fstl
cmp
nop
cmp
icebp
dec
out
xchg
test
add
cld
mov
shrb
pushf
std
sbb
mov
mov
dec
mov
push
ja
mov
out
dec
lret
sub
aaa
fcoml
mov
inc
data16
and
jp
test
lret
cmp
and
scas
cmpsl
int3
fstps
jl
outsb
jbe
inc
inc
ficoms
fwait
lret
out
out
or
sbb
xor
jb
in
test
adc
mov
clc
in
mov
jge
insb
insb
push
in
testb
and
dec
das
cli
xor
pop
xchg
insl
outsb
cmp
lcall
into
mov
mov
lret
dec
mov
xchg
fildl
pushf
add
das
mov
lret
idiv
jo
nop
test
cli
dec
mov
mov
jo
jle
sub
sub
and
notl
jp
jmp
sub
jne
fiadds
jne
jns
dec
inc
xor
movsb
pop
rcll
int
dec
mov
xor
lea
faddp
in
dec
into
out
mov
rclb
scas
lods
sahf
add
cmpsl
in
xor
vmovdqu
mov
pop
enter
mov
aas
sbb
cmp
nop
pop
and
jle
cwtl
mov
fucom
call
cmp
push
mov
mov
xor
clc
or
sub
aam
push
add
xchg
das
js
lret
inc
cmc
lds
lea
cmp
test
jle
lea
sbbb
pop
cmp
mov
ret
mov
dec
lcall
mov
inc
test
aad
movsb
and
cltd
dec
in
sbb
xchg
fdivl
jbe
clc
stc
xchg
fcoml
pop
test
mov
sbbb
or
loope
les
outsl
lods
and
cld
daa
fstpt
movsb
mov
sbb
fisubrs
adc
and
scas
push
imul
es
insl
notb
lret
shlb
in
add
int3
or
decl
imul
mov
add
ficompl
push
cli
or
cwtl
push
aaa
in
and
bnd
push
movsl
scas
fbstp
and
add
mov
cwtl
pop
cld
cltd
dec
push
rorl
pop
sbb
arpl
dec
rcrb
jae
pop
pop
outsl
sbb
cmpsl
add
ds
mov
sub
push
pusha
shrb
movsb
xor
and
dec
mov
inc
push
inc
cmp
and
std
or
add
add
cmpsb
sahf
ja
mov
leave
xchg
mov
jae
jae
pop
ds
aad
fs
lods
jg
add
movb
xor
push
rorb
pop
rcrl
sub
jb
push
lret
loopne
and
rcll
dec
pop
pop
filds
sub
lods
sbb
fimull
mov
add
inc
lret
ds
imul
sahf
or
sub
jle
or
dec
mov
adc
xchg
movsb
sbb
dec
cmpsb
sarb
decb
arpl
jne
jmp
test
mov
cmpsb
sub
fidivs
aad
jbe
cmp
sarl
mul
pop
push
xor
scas
stos
xchg
adc
test
mov
pop
add
ja
sti
add
loopne
jae
rorb
xor
cmpsl
xchg
xchg
xchg
int3
pusha
sbb
fiaddl
bnd
inc
into
scas
fldl
data16
aam
mov
mov
inc
mov
stos
subb
jp
mov
lret
adc
add
imul
ss
push
add
mov
aas
ljmp
fnsave
xor
in
pop
xor
roll
and
stos
cmp
fwait
daa
pusha
pop
dec
push
xchg
xor
fs
pop
ficomps
mov
add
mov
xchg
sub
inc
test
and
jb
loope
mov
push
add
lock
cs
fbld
daa
xor
and
lds
xor
xchg
pop
pop
xor
aas
fldt
fiaddl
rclb
mov
cmp
andnps
mov
mov
filds
loop
jnp
cmp
cmc
fistps
mov
sahf
nop
int3
mov
or
call
inc
mov
pop
push
xchg
inc
jns
daa
fistl
addr16
mov
jmp
aad
jns
xchg
jmp
cmpb
sub
sub
rcl
adc
outsb
shl
jae
jnp
ds
push
int
es
pop
ja
inc
cmp
lret
lcall
xchg
adc
ja
insl
inc
jno
mov
xor
sbb
mov
pop
lea
movsl
jp
add
les
adc
pop
stos
and
outsl
jbe
adc
jb
outsb
cmp
sub
je
mov
mov
movsl
stc
popa
inc
sar
outsb
ror
stos
cmpsb
arpl
mov
mov
sti
xor
insb
or
ret
fiadds
jns
push
mov
je
inc
imul
pop
mov
mov
int3
jl
add
jnp
fildll
test
xor
cwtl
cmp
shlb
in
dec
xchg
inc
cmpsl
fsts
adc
jbe
lock
cmp
shll
or
and
sub
sbb
jge
sub
cltd
loop
addr16
out
out
orl
adc
cld
push
xor
int
pop
lahf
loope
add
and
xorl
jp
mov
xor
inc
jle
sub
pop
sbb
daa
and
mov
add
and
jns
or
adc
ret
push
sub
daa
int3
or
sub
jnp
cmp
sarl
ljmp
xchg
movsl
ret
nop
sub
hlt
add
stos
sub
inc
adc
mov
jb
push
xchg
mov
and
rcll
mov
mov
insl
leave
test
cmp
outsb
test
in
loop
sub
add
loopne
outsl
xchg
or
outsb
adc
rcll
inc
test
in
imul
pop
ds
loope
adc
sub
test
xchg
push
mov
jae
lock
cwtl
iret
and
xlat
ss
push
adc
das
mov
dec
jmp
cmp
aam
mov
ret
cmp
daa
sbb
daa
xchg
shlb
call
shlb
sub
push
nop
das
xchg
mov
cwtl
or
orb
cmp
inc
push
pop
fimuls
lock
add
pop
sub
movsb
test
es
mov
out
sbb
inc
out
imul
fldcw
push
fstpl
cs
push
cmp
ret
fisubs
leave
in
rorb
sub
jg
mov
add
lcall
sub
mov
loope
sbb
add
iret
ds
mov
push
xlat
cmp
cmc
sbb
add
idivl
sub
loope
add
cli
call
in
es
fildl
adc
push
insb
pop
xor
shll
ret
push
pop
je
push
enter
lods
ja
out
test
in
lcall
mov
in
adc
setge
mov
xchg
cmc
pop
inc
mov
pop
mov
enter
das
orl
push
gs
ret
test
pop
popa
xchg
mov
dec
filds
js
mov
push
les
or
ret
orb
mov
jns
ja
pusha
push
sbb
stc
aas
cwtl
cmp
pop
inc
xchg
daa
push
mov
int3
cs
ficompl
mov
dec
jg
add
orl
inc
movsl
in
loop
or
ret
jnp
out
insl
push
inc
pop
rorl
push
adc
stc
mov
push
mov
jae
mov
mov
and
xchg
cmp
mov
fdivr
and
or
add
je
iret
and
ret
scas
lret
ja
and
sub
jle
ja
and
lret
xor
inc
or
aaa
or
lret
mov
aaa
out
mov
addr16
adc
xorl
push
jb
and
cmp
fmuls
outsb
scas
add
push
xchg
stos
mov
test
inc
mov
xlat
pop
incl
dec
xchg
shl
xchg
push
jge
dec
sti
cmc
mov
insl
cli
daa
jl
mov
mov
ss
mov
dec
mov
mov
pop
fwait
xor
stos
and
xchg
cwtl
stos
fsubs
mov
inc
jne
stc
sbb
fs
int3
sub
lret
dec
xor
int3
movsl
mov
cmp
pop
and
out
add
or
jp
push
in
mov
mov
push
xchg
jae
lock
ret
ficoms
push
movsb
inc
in
ds
fdivrl
xorl
outsb
jns
inc
xchg
leave
push
bound
sub
rcrl
incb
les
mov
cmp
in
lods
mov
and
ret
push
mov
or
sbb
mov
es
addr16
shll
push
and
insb
lret
ficoms
sbb
or
test
loope
pushf
or
mov
test
aam
cmc
lret
mov
xchg
dec
dec
adc
mov
xchg
lret
xchg
jns
in
shl
ret
and
jl
lcall
stos
mov
bound
stc
loope
sbb
lahf
fdivrs
imul
sbb
int
xchg
jnp
mov
arpl
rorb
add
adc
jmp
dec
ret
dec
daa
loop
sub
lahf
pop
jnp,pt
mov
fldenv
inc
movsl
bound
pop
mov
jp
or
xorl
aam
pcmpeqw
mov
daa
das
nop/reserved
pop
lret
rorb
xor
sub
push
lret
mov
mov
dec
cmp
mov
lret
and
sar
cwtl
popa
scas
sub
sti
pop
int
push
dec
cmp
into
mov
repnz
shll
push
sbb
sub
or
popa
pop
xchg
mov
mov
pop
in
pushf
fstp
jae
arpl
xor
jmp
mov
inc
xchg
ja
iret
test
adc
xchg
xor
sub
dec
jbe,pt
ret
mov
cld
cli
inc
xchg
sahf
push
pusha
push
pop
pop
repz
nop
mov
xchg
sbb
pop
testb
mov
lahf
lahf
fisttps
xchg
push
xchg
push
pop
xlat
pop
fwait
pop
mov
fnstcw
repnz
push
and
int3
mov
dec
shl
xchg
jb
pusha
dec
sbb
push
xchg
out
jns
mov
fldenv
mov
jbe
int
lcall
lcall
sub
push
dec
ljmpw
sbb
fdivl
mov
push
jle
stos
jns
adc
push
aas
xor
aad
jp
sbb
aaa
fbstp
rorl
repz
insb
sub
stc
aad
imul
dec
mov
lahf
xchg
lcall
pop
pop
mov
or
in
push
addr16
xchg
icebp
cmp
jmp
sub
or
xchg
pop
or
loopne
mov
xor
cmp
loope
daa
sbb
roll
pop
jbe
add
push
or
add
or
ljmp
or
pop
pop
or
jnp
outsb
push
xchg
mov
jbe
dec
inc
repz
mov
ret
push
xchg
int3
xchg
cmpsl
jns
inc
cmp
mov
aaa
cmp
pop
repz
mov
scas
pop
rol
popa
sub
mov
fxch
inc
outsl
jmp
movsl
dec
sbbl
ror
aaa
cmpsl
cmpsl
in
aam
ss
jge
sub
mov
sbb
lcall
cld
mov
sub
pop
adc
add
faddp
in
in
fcoms
xchg
adc
in
push
in
lcall
nop
pop
ret
data16
pop
mov
aam
out
in
cmp
push
fwait
xchg
popf
cmpsb
and
push
out
pop
popf
lret
cltd
aas
or
jo
sub
pop
lahf
stc
scas
push
aas
dec
add
sbb
ss
pusha
loopne
int3
cmpsb
ss
or
jge
lret
mov
xor
lods
inc
scas
xchg
push
dec
ds
negl
int
icebp
or
mov
flds
lcall
cmp
pop
jns
ja
mov
adc
mov
mov
subb
inc
cmp
xchg
fdivl
pop
es
in
inc
iret
aas
jnp
cli
call
fdivr
pop
push
es
sub
mov
xchg
xor
mov
push
xor
jg
loop
cmp
daa
cwtl
pop
out
xchg
hlt
or
dec
or
cwtl
out
xchg
ss
jle
cld
dec
mov
cmc
loope
enter
fbstp
rcll
punpckhwd
cmp
mov
push
stc
mov
mov
out
or
fldt
in
rol
sbb
cmp
sbb
push
out
mov
mov
inc
xor
into
in
scas
cli
dec
dec
push
and
cwtl
imul
aas
inc
sbb
leave
lcall
jle
mov
push
shl
xor
cwtl
sarl
push
mov
aad
jb
and
in
mov
xchg
inc
les
popa
adc
push
jb
cmp
imul
nop
outsl
dec
or
sub
aas
xchg
gs
xchg
fadds
inc
or
pop
xchg
jo
es
shlb
or
inc
mov
mov
or
xor
adc
xchg
and
xor
arpl
cmp
jno
mov
inc
into
cmpsl
mov
into
cmc
pop
out
inc
test
push
adc
and
cwtl
outsl
inc
xchg
push
push
add
sbb
adc
cld
test
hlt
lret
lds
push
adc
gs
or
movsb
sbb
pop
leave
negb
inc
pop
mov
mov
ja
test
gs
xor
inc
loope
cli
xor
dec
das
add
and
dec
scas
or
and
out
enter
ss
fcomip
mov
in
iret
mov
or
mov
scas
call
mov
jecxz
int3
stos
in
mov
push
adc
rcr
pop
xor
adc
clc
add
xlat
cmc
jne
lret
push
movsb
dec
aaa
pop
adc
pop
sbb
push
cmp
imul
pop
aam
lods
data16
ja
xor
mov
lods
dec
stos
in
shrb
lret
sar
mov
inc
cs
xchg
adc
push
push
int
shll
ficomps
lcall
mov
or
adc
mov
clc
xor
orb
jecxz
mov
inc
int
bound
gs
pushf
pop
jno
mov
xchg
loope
cmpl
stos
fiaddl
pop
jne
fidivl
or
faddl
mov
add
dec
sub
out
pushf
jl
lret
dec
dec
xor
cwtl
lret
pusha
mov
pusha
sti
sub
jge
jle
inc
mov
lret
sbb
cmp
das
or
sar
sub
sub
sbb
in
jbe
and
insl
jo
int
sbb
clc
aad
out
movsl
std
cmp
inc
lahf
das
cmp
inc
nop
xchg
pushf
xchg
popa
jle
mov
adc
movsb
add
sub
cmp
loope
fadd
lods
lods
mov
es
sbb
mov
push
and
xor
dec
xchg
jae
movsb
fwait
dec
mov
orb
imul
lds
imul
lcall
mov
add
cmp
adc
stos
pushf
int
mov
in
adc
xor
int
daa
push
pop
sbb
fisubs
adc
into
push
out
sbb
movsb
mov
test
adc
mov
mov
sbb
js
adc
and
arpl
xchg
cwtl
ret
pop
jne
out
mov
bound
cmpl
rolb
in
dec
xor
xchg
push
jno
daa
movsl
pop
inc
xor
mulb
icebp
push
cwtl
mov
cmp
and
inc
mov
pop
ret
lds
je
adc
outsl
dec
add
mov
addr16
stos
jge
andb
mov
std
sbb
int3
xor
jmp
loop
loop
popa
mov
fildll
fnstcw
inc
scas
enter
and
mov
out
xchg
adc
stos
movsl
jb
repnz
mov
push
sti
fldenv
dec
imulb
mov
sbb
and
dec
fdivs
xor
orb
mov
cmpsb
or
sbb
cltd
push
imul
and
sub
ftst
jge
out
mov
mov
add
sbb
test
xchg
mov
sbb
dec
icebp
stos
lea
mov
cs
js
idivb
push
sti
inc
mov
xor
aad
lds
loope
mov
push
out
aad
repz
mov
cwtl
or
fiaddl
ror
fsubrl
movsl
inc
insl
add
add
idiv
mov
and
push
or
dec
xchg
call
cmp
insl
outsl
cltd
scas
stos
rorb
sbb
xchg
movsb
and
mov
outsb
mov
int
int3
insl
jnp
fidivrl
mov
mov
daa
jo
push
mov
aaa
dec
adc
fdivrl
push
adc
adc
lahf
or
pop
mov
xchg
or
iret
cs
xor
add
cmc
subb
lods
cmp
cmp
and
das
cs
mov
and
dec
mov
mov
xor
jg
mov
jb
dec
push
cmp
ret
mov
adc
push
xor
imulb
imul
dec
sbb
mov
popf
sahf
jl
xchg
frndint
nop
cmp
test
mov
mov
je
mov
dec
pop
inc
dec
movsl
push
pusha
into
sub
dec
scas
pop
pop
addr16
sbb
popl
cli
fldt
xor
mov
fdivr
push
add
adc
fwait
lods
push
sbbl
sub
sbb
jo
adc
and
push
stos
jle
loope
out
xor
add
mov
pop
push
aas
lahf
hlt
jbe
jmp
movsl
dec
cmp
loop
inc
xlat
mov
test
push
mov
sahf
mov
cltd
popf
push
insl
mov
xchg
cld
stc
or
into
push
push
call
mov
cmp
flds
idiv
pop
es
shl
sahf
fildll
or
cmp
mov
jmp
int3
into
mov
cmp
ljmp
mov
rcr
mov
adc
mov
xchg
sub
imul
lods
add
mov
adc
xor
inc
pop
hlt
pop
push
lods
or
dec
xor
and
imul
lock
iret
mov
push
test
imul
jl
loope
push
leave
sarb
xor
jbe
xchg
jbe
cmp
imul
shrb
nop
aaa
mov
stos
push
std
jbe
sbb
lcall
jp
clc
sahf
in
push
stos
ljmp
inc
mov
mov
xor
stc
negb
pop
pop
ret
cmp
and
pop
pop
std
jp
push
inc
popf
jge
cli
add
xchg
idiv
fcmovne
int
sbb
sbb
mov
dec
into
ljmp
push
clc
ret
test
pop
pop
or
sbb
cmp
xchg
cwtl
out
clc
lret
lock
fsts
xchg
bound
add
or
aas
std
fwait
ret
mov
mov
push
repnz
enter
repz
inc
push
addr16
jle
or
in
imul
mov
insb
call
mov
add
dec
inc
lret
imul
push
and
push
cmp
aad
xor
adc
add
int3
push
insb
lcall
xchg
pusha
ss
movsb
cmpsb
jge
aam
mov
mov
pop
rcrb
mov
fs
cld
xor
ljmp
mov
pop
aam
movsb
inc
daa
add
inc
mov
sub
outsl
adcb
dec
mov
aam
sbb
mov
bound
xor
inc
mov
adc
pop
sahf
jecxz
push
push
add
insb
pop
int3
ja
sub
pop
enter
sbb
mov
push
and
jge
mov
adc
pop
fsubs
and
sbb
inc
mov
sub
popf
cmp
adc
outsl
pop
sub
lods
int3
sahf
fildll
adc
outsb
xlat
loope
aad
clc
lret
dec
push
mov
mov
cs
or
ret
or
sarb
loope
xchg
rcrb
addl
jmp
pop
xor
ds
or
mov
xor
daa
pop
add
fwait
loope
mov
lahf
outsl
movsl
pop
sub
pop
data16
cmp
stc
in
fimull
push
add
das
movsl
xlat
mov
pop
sub
pop
rolb
xchg
jl
lock
pop
cmp
xor
sub
push
mov
in
out
and
div
and
push
or
out
adcl
jne
imul
pop
repz
sbbl
cmp
xor
or
sub
stos
sub
fistps
add
or
into
lock
rcrl
xchg
imul
xchg
cltd
mov
sbb
inc
loope
pop
sbb
sub
movsb
pop
cmc
push
cmc
mov
add
nop
std
dec
je
mov
push
pop
mov
mov
addb
sbb
nop
dec
shll
push
jp
mov
mov
shlb
push
mov
xlat
sub
or
out
xor
inc
popa
jb
mov
or
mov
add
xor
jbe
pop
sbb
cmp
cltd
xchg
ror
sub
and
arpl
inc
jo
jle
fistl
outsb
mov
jnp
xchg
fisubrs
jmp
or
push
repnz
adc
lock
shll
cmpsb
mov
aad
cwtl
xchg
pop
repnz
add
pop
mull
fistl
in
sbb
into
pop
movsl
jmp
sub
in
push
rcr
push
je
out
jg
pop
fdiv
pop
hlt
and
hlt
mov
push
ja
push
out
div
ja
faddl
cltd
insl
inc
mov
dec
xor
or
scas
pop
out
fwait
in
cmpsl
pop
xchg
mov
cmp
xchg
hlt
shrl
mov
push
nop
fs
cmp
dec
push
add
fidivl
dec
negl
sub
inc
pushf
adc
fidivs
mov
repz
dec
xchg
and
adc
inc
adc
pop
and
jp
adc
mov
int
push
movntps
shrl
stos
inc
sti
adc
add
sbb
stc
std
or
and
xchg
xchg
mov
mov
xchg
mov
pop
dec
cli
pop
push
shll
cmpsl
aad
sbb
andl
dec
mov
rcll
es
mov
or
pop
xchg
hlt
popa
nop/reserved
cld
pop
and
loopne
cmp
aad
aaa
or
push
or
into
divb
cwtl
xchg
mov
jp
rorb
or
cmp
and
mov
cltd
sub
inc
ret
movsb
movsb
scas
push
sub
iret
int
cmp
sbb
sbb
xorb
mov
nop
icebp
pop
xor
jb
xchg
notl
loop
xor
mov
aaa
xchg
xchg
or
jp
out
mov
mov
dec
xor
scas
loope
mov
mov
aas
lds
xor
inc
pop
cmc
dec
popf
dec
fldcw
jl
shr
out
inc
sbb
mov
cltd
cmp
ja
ljmp
sub
push
mov
ret
lcall
rcl
pop
cmp
fs
pushf
push
lret
fistpll
fwait
cmpsl
jno
loope
push
insl
push
aas
mov
cmpsb
jge
cmp
test
push
les
cwtl
insb
adc
or
std
lods
jnp
jp
repnz
dec
loop
ret
inc
cltd
sub
out
sahf
push
in
das
mov
mov
fcmovnu
cmp
pop
adc
fisubrs
cmp
xchg
lcall
aad
int3
sbb
mov
int3
inc
mov
filds
out
out
hlt
mov
mov
add
pop
repz
pop
std
mov
ljmp
xor
insb
dec
cld
inc
or
dec
outsl
je
test
mov
mov
cmp
call
cmp
sub
andl
inc
pop
mov
push
inc
mov
mov
aam
pshufw
out
mov
xor
in
add
popa
movsl
movl
dec
mov
xor
jl
adc
inc
test
push
push
testl
fidivl
sbb
leave
adc
scas
rorb
cmpsl
jnp
sti
jo
sbb
mov
repnz
lods
iret
or
mov
subb
repnz
imul
frstor
out
push
repz
push
testb
cmpsl
xchg
or
and
fwait
std
mov
out
jae
push
jmp
adc
add
push
movsl
shrb
int
add
pop
stos
sbb
lods
mov
sbb
jmp
jne
orb
out
repz
fldl
loop
xchg
jnp
dec
sahf
and
cwtl
adc
cmp
adc
xchg
out
sahf
fdivl
or
mov
jne
xor
sti
pop
insb
dec
add
adc
lret
push
jmp
test
xor
push
add
pop
add
jg
insb
jns
jo
sub
int3
mov
mov
add
imul
dec
mov
es
xor
mov
pop
into
test
mov
outsb
leave
sbb
and
add
and
popf
ret
lret
and
xchg
cmc
pop
scas
cmc
xchg
out
das
mov
xchg
add
cli
push
jnp
jecxz
das
mov
xchg
shll
dec
cltd
sti
out
mov
mov
fs
mov
mov
sub
jne
sbb
adc
filds
cltd
cmp
push
mov
add
scas
and
adc
push
das
xor
mov
cmp
xchg
sub
mov
xlat
adc
leave
negl
lcall
out
into
dec
or
ret
cwtl
leave
int
jle
loopne
out
mov
stc
std
mov
sub
aas
mov
daa
aaa
into
sbb
xor
shl
loope
stos
jle
add
xchg
or
ret
inc
lret
mov
xchg
lea
and
das
into
mov
adc
sbb
scas
sub
mov
push
std
dec
inc
outsl
or
jns
hlt
mov
jl
xor
xor
mov
aam
mov
dec
movsb
and
fwait
arpl
xchg
mulb
jne
push
sub
cmp
lret
dec
dec
inc
insl
dec
stos
mov
push
push
sbb
adc
into
jb
es
stos
cmp
xchg
cmpsb
xchg
sarl
loopne
pop
clc
adcl
push
or
xor
mov
pusha
stos
jbe
mov
bound
loopne
push
cmpsb
cwtl
pushf
mov
sub
stos
out
nop
sub
rcrb
lret
push
jmp
cwtl
and
adc
enter
ficomps
xlat
loope
add
ljmp
add
xchg
popf
scas
mov
mov
aad
cmp
call
sarl
and
out
shll
movsl
movsb
adc
push
jg
push
fs
xchg
mov
pop
xor
insb
adcb
mov
pop
ss
or
shll
ret
rcrl
test
lret
mov
je
cltd
test
cs
pop
in
push
fidivl
into
into
dec
ret
out
stos
test
es
mov
bound
or
pusha
push
loopne
inc
lcall
repnz
aad
jae
push
mov
lcall
stos
or
add
and
aad
jno
lods
dec
es
cmp
fsubrp
push
xor
dec
or
xchg
inc
push
push
add
push
loop
popa
mov
mov
scas
jo
sub
shll
pop
cltd
jnp
inc
jp
pop
fcoms
repnz
sub
pop
sahf
out
mov
cli
lods
scas
sub
dec
push
repz
sbb
fiaddl
pop
pop
cmp
stc
popa
or
dec
adc
js
push
lods
inc
xor
es
roll
cmc
pop
subb
pop
jbe
xor
sub
cmp
cmp
mov
add
das
adc
outsb
test
aaa
stos
fstp
lds
mov
or
xor
bound
jae
or
stos
enter
sbb
cmp
rclb
ljmp
add
jbe
hlt
adc
jecxz
dec
jmp
cmp
aam
fidivs
adc
je
pushf
mov
rcrb
push
and
fmuls
aaa
pop
and
mov
sbb
xlat
int
cmp
ret
cmp
test
adc
or
pop
lods
nop
pop
test
or
popf
add
test
inc
pop
leave
push
fwait
push
mov
xchg
jmp
xchg
int
pop
frstor
sub
sub
dec
inc
std
scas
or
aam
movsl
gs
inc
fidivrl
mov
add
aam
sub
jl
push
sbb
mov
call
jae
hlt
fdivs
mov
orb
xchg
mov
mul
out
or
xchg
mov
ss
xor
shrb
jns
cmp
fcoms
xchg
int3
cld
adc
or
lahf
mov
aad
sub
push
jo
xchg
pop
mov
cld
xor
mov
inc
out
xchg
cli
cmpsb
xchg
jmp
lods
fsubl
sub
test
repnz
add
aad
add
pop
mov
adc
call
jp
test
lcall
fisubs
add
js
pop
pusha
daa
xchg
lahf
or
mov
mov
outsl
into
out
mull
out
or
jmp
mul
clc
bnd
and
xchg
sub
adc
xchg
jnp
cmpsb
sub
and
and
enter
mov
cmpsl
sbb
mov
or
sub
xchg
rolb
xor
push
icebp
test
adc
jmp
add
cltd
inc
cmp
inc
push
mov
rcll
lahf
and
push
enter
in
mov
xor
cmp
pop
sub
roll
mov
fists
inc
mov
xchg
xchg
push
stos
addr16
push
xor
add
adc
add
sub
mulb
out
push
pop
das
mov
push
mov
push
xchg
into
outsl
fldenv
sbbb
scas
mov
call
jns
jnp
ss
add
test
and
inc
aad
and
sbb
xor
ljmp
mov
repnz
lret
out
cmp
fmull
or
mov
jae
cmpsl
movsb
sub
lock
mov
jbe
mov
loopne
push
sub
hlt
int3
in
adc
pop
mov
sbb
mov
mov
sub
pop
xor
pop
cmpb
inc
int3
out
mov
loop
and
lds
xlat
iret
lcall
mov
ss
lahf
mov
xchg
pop
rclb
ss
out
cwtl
jl
mov
aaa
je
pop
sbb
pop
in
adc
and
stos
xor
xor
push
pop
faddp
int
push
cmp
adc
push
mov
test
sbb
xlat
add
adc
fs
call
roll
push
dec
or
cwtl
dec
out
scas
jp
inc
sub
jl
hlt
dec
and
inc
mov
mov
jge
pop
sbb
add
std
loope
fimuls
in
mov
pop
fstpl
jmp
xchg
inc
imulb
and
pop
out
xchg
xchg
fldl
psllw
loopne
das
xor
lcall
rolb
mov
mov
lds
push
lods
sub
in
add
jge
sti
push
stc
pop
jmp
shrl
movsl
imul
and
pop
xchg
fimull
add
fwait
shl
push
xchg
sub
js
imulb
sub
repnz
xor
shlb
bound
xor
or
nop
enter
mov
faddp
sub
les
xor
popa
test
pop
mov
pop
push
push
lea
adc
pusha
push
daa
or
jns
push
repz
enter
xor
xor
cmpsb
cmp
sub
sub
dec
add
adc
stc
mov
fnstcw
mov
jecxz
divb
test
push
leave
sar
sbb
sbb
es
mov
aaa
add
xor
fldt
leave
pop
xchg
int3
fnstenv
in
mov
cmpsl
out
and
and
xorb
in
lahf
mov
jle
fstl
pusha
fistps
sub
adc
out
js
insb
out
mov
adc
dec
test
pusha
xchg
stos
push
out
pop
daa
popa
adc
out
push
xchg
out
ret
cmpsb
dec
xchg
lret
sbb
sub
jl
push
imul
in
fimuls
xchg
mov
iret
cmp
and
lahf
sbb
jmp
add
xchg
fnstsw
push
sub
xchg
push
jno
out
fwait
adc
adc
push
sub
xchg
fsubp
shll
dec
add
push
cmp
ss
out
pop
xor
stos
inc
and
icebp
imulb
jmp
ljmp
repnz
sbb
adc
mov
out
rcl
pop
es
push
inc
pop
xchg
add
and
pop
movsb
mov
mov
or
lock
cmp
and
lcall
mov
sub
mov
stos
imul
hlt
cmpsb
fimull
les
repz
iret
sbb
ja
sbb
ret
outsl
push
push
mov
mov
push
mov
ffreep
int
cltd
aam
je
xchg
jg
mov
mov
repnz
push
xor
lock
mov
adc
orps
cmp
shrb
negl
push
mov
mov
xchg
sub
int3
sbb
or
out
pop
test
sbb
hlt
fisttpl
or
mov
jmp
subb
popa
or
cltd
adc
hlt
pop
test
sub
inc
ret
xor
lcall
fsubr
xchg
jne
push
or
and
adcb
ret
icebp
jbe
mov
cmpsb
pusha
inc
dec
push
mov
shr
mov
in
xchg
in
mov
nop
aam
and
push
xor
loopne
into
adc
jl
loop
and
mov
xchg
leave
cmp
icebp
rolb
fs
pusha
fistps
pop
dec
scas
ss
pop
pop
jo
inc
jmp
in
xchg
test
sahf
fdivrs
push
sbb
dec
mov
fwait
pop
mov
jecxz
insl
sti
and
sahf
mov
pop
aad
scas
pop
xchg
inc
sub
xchg
sub
dec
lret
mov
inc
xor
push
mov
jl
mov
xor
imul
and
outsb
sub
in
cmp
test
xchg
pop
call
or
xor
sub
fcoml
xchg
mov
fldt
idivb
imul
mov
es
aam
ffree
ficompl
int
test
mov
aas
pusha
aam
arpl
mov
ret
aas
xor
pop
les
dec
cmpsl
sbb
mov
and
xchg
lock
add
test
out
pop
mov
repnz
ret
and
mov
mov
dec
stos
out
sbb
push
out
into
xor
and
arpl
mov
scas
iret
shll
int
push
xchg
inc
add
adc
or
adc
jge
call
leave
jecxz
hlt
pop
sarb
push
nop
dec
int3
es
xchg
push
mov
dec
push
xor
les
jbe
aam
add
dec
pop
ljmp
test
add
xchg
inc
push
pop
sub
ds
mov
pop
adc
mov
jbe
ret
push
sub
sub
sub
add
jns
fsubs
loopne
mov
in
dec
test
sbb
ds
cmpsl
lahf
pushf
jmp
push
mov
hlt
repz
xchg
aam
aad
cmp
fidivrl
pop
movsb
shll
or
jnp
movsl
lahf
sbb
and
lods
xchg
out
sbb
arpl
call
push
adc
mov
add
out
xchg
mov
push
lahf
inc
cmp
clc
sar
fcmovbe
pop
leave
pop
xchg
cmc
outsl
dec
dec
sbb
mov
adc
mov
push
inc
popf
dec
test
xchg
cmp
adc
mov
scas
xor
inc
xchg
ja
jg
or
sbb
insb
outsb
and
pusha
fstps
aam
shrl
rcrb
call
call
addb
icebp
mov
cwtl
inc
sbb
imul
sahf
push
xor
mov
ficomps
sti
ja
push
cli
clc
cwtl
sub
negb
pop
or
js
and
fmuls
loop
push
jle
int
test
adc
dec
pop
dec
shll
movsb
mov
lods
jp
pop
fcmovbe
push
sbb
movsl
cli
jp
js
and
cli
pushl
sub
mov
scas
xchg
enter
lret
loopne
loopne
or
fimuls
orl
cmp
and
cli
inc
xor
test
into
mov
pop
fcmovb
push
in
cltd
mov
sti
push
inc
fdivrs
iret
orl
pop
push
int
sbb
insl
ss
add
xchg
jb
cltd
cmp
mov
inc
movsb
pop
pushf
mov
test
stc
fs
pop
jnp
or
ret
adc
adc
test
test
cmpsb
test
jp
add
lds
inc
es
loopne
in
fmulp
pop
add
int3
in
inc
adc
rcl
jnp
je
mov
and
testb
dec
bound
int3
and
data16
lret
pop
mov
call
sti
out
and
pop
or
xchg
pop
xlat
jg,pt
addl
xor
adc
in
test
fldcw
mov
lea
sbbl
int
add
cltd
xor
dec
xchg
pop
ljmp
and
std
push
subb
mov
add
scas
int3
out
imul
pop
add
xor
inc
mov
push
pushf
mov
stos
push
mov
ja
pop
int3
int3
sbb
dec
rcrb
ljmp
imul
cmc
incb
aad
int3
test
mov
shlb
shrl
jg
sub
movsb
movsl
push
sub
mov
xchg
or
sbb
loopne
addr16
mov
sub
cmp
pop
jns
pop
ret
dec
add
lahf
mov
add
lods
pop
sahf
sub
iret
and
jecxz
push
lret
jnp
into
test
imul
les
repz
addr16
dec
pop
mov
in
jp
movsb
sbb
sub
mov
shll
test
inc
mov
outsl
add
mov
mov
mov
pop
loop
repz
and
addr16
shrb
leave
mov
inc
in
lret
stc
mov
sbb
ljmp
insb
fsubs
or
mov
dec
int
xchg
cs
imul
mov
rorl
cmpsb
clc
cmp
clc
cmp
idivl
push
div
fimull
ret
push
sarl
test
xchg
je
test
adc
mov
sti
sarb
outsb
sbb
inc
dec
adc
cs
daa
mov
pop
scas
sbb
es
pop
push
cmp
dec
fnsave
out
fptan
add
xor
mov
or
or
xor
add
fsubl
or
jbe
xchg
and
fldl
dec
jg
dec
xlat
pop
fisubrs
adc
pop
fldenv
cwtl
imul
xchg
adc
jl
fsubrs
ja
pop
daa
push
jne
or
ficomps
mov
nop
pushf
add
sub
jns
test
out
into
shrb
cmpsb
ds
sub
sub
dec
lcall
rorl
cmp
sbb
jae
xchg
int
out
sbbl
or
mov
and
mov
js
inc
mov
xchg
sahf
or
mov
sub
or
fists
out
cltd
cmp
pop
xchg
daa
lds
ret
aam
rcll
ja
push
es
sub
mov
les
ret
push
in
fchs
xchg
lods
out
je
or
aam
roll
sbb
jmp
aaa
pop
inc
push
mov
add
dec
ja
jmp
lods
jbe
test
mov
ret
iret
push
xchg
mov
popa
xor
push
lock
mov
pop
ss
push
loope
mov
inc
inc
xor
xchg
mov
push
mov
dec
xlat
rcpps
stc
and
xor
dec
mov
push
cmc
sahf
mov
mov
mov
roll
add
test
lock
clc
mov
fistpl
xlat
daa
jmp
pop
mov
mov
jge
rolb
xor
lcall
sub
jl
stc
mov
mov
cmpl
or
sahf
pop
add
or
inc
hlt
xor
or
fbstp
data16
decb
jae
push
xor
sahf
jbe
clc
fidivrs
jmp
test
arpl
hlt
push
xor
xchg
in
mov
jb
out
aam
adc
pop
jnp
xchg
and
inc
inc
loope
mov
aad
into
push
ret
cmp
decb
jno
jle
imul
adcb
push
mov
fbstp
lds
lret
int3
mov
lods
popf
jns
sbb
inc
and
push
sbb
push
mov
ss
add
mov
inc
inc
pushf
sbb
sub
mov
hlt
andb
lea
in
iret
adc
and
sbb
mov
cmp
clc
and
or
imul
aas
std
jns
jo
push
push
sti
cmp
and
and
sbb
inc
outsl
and
cwtl
orb
sti
push
pop
xor
add
shlb
cmpsl
xor
lock
inc
adc
mov
insb
inc
pushf
insl
divl
cs
xchg
jb
adc
pop
repnz
faddl
imul
mov
rcr
xchg
or
aad
inc
push
jg
mov
addl
jb
xchg
mov
je
ficoms
sbb
in
ss
fnstenv
ja
test
popa
push
sub
negb
add
stc
out
sti
xchg
push
mov
out
pusha
loopne
sub
sub
loop
js
xor
fcoml
cmp
int3
rcll
addr16
and
das
popf
mov
mov
imul
push
loope,pn
into
cmc
in
add
or
mov
loope
rcr
je
je
cs
out
or
jno
fdiv
mov
loopne
inc
mov
test
jb
call
adc
ficompl
sub
mov
sub
push
dec
pop
stc
sub
mov
mov
insb
in
pop
sbb
sub
push
fwait
mov
or
mov
cs
xchg
shl
dec
ret
dec
je
inc
dec
xchg
insb
scas
and
pop
jnp
pushf
mov
mov
stos
iret
call
jmp
cmpsl
fstpt
jo
out
mov
pop
ficoml
fidivl
fimull
iret
lock
cmp
mov
mov
mov
cmpsb
pmulhuw
dec
or
pop
andl
push
mov
fidivrl
lret
ficoms
out
jb
sbb
or
sti
cld
or
inc
or
fnstcw
iret
cmp
jecxz
cwtl
cmp
xor
push
jnp
test
mov
rcll
jns
test
dec
fmul
scas
inc
test
mov
test
icebp
xchg
and
out
sti
mov
jecxz
and
mov
mov
adc
cmpsb
cmpsb
sti
inc
fwait
jp
jle
add
push
fnstenv
rcll
dec
xor
movsl
inc
inc
fwait
xchg
gs
std
or
in
jl
test
jle
jl
addr16
cltd
insl
popf
dec
push
loopne
pop
sub
sub
rclb
push
outsb
mov
jle
lret
xlat
and
fbstp
enter
notb
movsb
enter
push
sbb
push
or
push
mov
mov
fwait
cmpb
cmp
mov
jp
adc
push
sbb
add
cld
inc
or
xchg
cmp
mov
push
xor
imulb
jo
dec
divb
call
jnp
fwait
fwait
or
sbb
dec
jb
sarl
lods
shll
mov
pop
into
aam
jecxz
in
mov
mov
ret
and
aaa
adc
xchg
xor
mov
lods
ljmp
push
icebp
push
lret
mov
pop
adc
mov
shrl
lret
pop
es
adc
insl
fiaddl
sub
jo
or
cwtl
jne
cld
cmp
pop
sti
jbe
lret
popa
lret
mov
fs
stos
xchg
arpl
fdivs
iret
lcall
and
add
test
lcall
ds
inc
mov
mov
movsb
add
cmc
cmp
insb
mov
lds
sub
pop
jge
out
lea
add
push
fdivr
and
or
test
int3
add
mov
mov
sbb
int3
push
xchg
push
addr16
jns
fistpll
and
movsl
mov
incb
xchg
imul
push
push
and
data16
sub
and
mov
mov
jecxz
add
hlt
adcl
ja
xor
xchg
andb
sahf
xchg
fadd
pop
sbb
into
and
sub
decb
das
mov
and
je
aaa
sub
cmpsb
add
fmull
cmp
pop
insl
or
pop
mov
int
inc
pop
dec
lods
push
sbb
sbb
mov
dec
jb
sbb
cmpsb
fwait
jge
aad
jo
xor
push
pop
fs
push
push
pop
jne
push
mov
inc
stos
and
pusha
fdivrl
ret
das
jne
aad
xchg
pusha
and
loopne
cmp
cs
cli
xchg
mov
jb
in
mov
xchg
lcall
cmp
test
std
mov
nop
pop
fdivrs
push
mov
fdivrs
sti
test
movsl
fwait
mov
testl
cmp
jecxz
aas
movsb
in
fistl
decb
addl
sbb
inc
jle
lcall
mov
in
xchg
cltd
lret
ja
test
je
lret
adc
mov
stos
push
push
sub
xor
std
imul
inc
inc
outsl
and
inc
rcr
mov
lahf
test
call
xor
inc
into
pop
jge
lock
test
cmp
pop
ss
sub
mov
and
inc
test
sbb
test
mov
enter
lret
lock
pop
int
popa
and
out
adc
lahf
inc
pop
ja
xchg
sbb
dec
xor
push
xchg
pop
out
inc
push
into
and
test
call
loope
mov
cmp
lods
in
mov
test
inc
mov
inc
sub
xor
dec
int
sub
adc
mov
inc
pop
inc
jl
dec
or
mov
sti
pop
je
ret
mov
or
pop
cmc
mov
rcll
mov
notl
xchg
icebp
lods
mov
pop
cmp
daa
imull
xor
xchg
std
dec
push
and
push
lret
icebp
sbb
jp
fnstenv
mov
sarl
inc
or
lea
mov
pop
ljmp
dec
das
daa
inc
inc
push
jnp
in
or
jnp
xor
out
lret
cmp
das
push
out
mov
inc
dec
iret
add
hlt
mov
enter
adc
cmp
rcl
ljmp
lea
ret
loopne
test
fdivrl
lds
add
mov
outsb
pop
clc
push
cs
pop
test
sub
arpl
ror
pop
cmp
cmp
sahf
jg
aad
mov
pop
cmp
jno
lock
mov
test
xor
sahf
loopne
movsl
fs
mov
fnstsw
xor
lods
out
pop
lret
mov
and
outsb
clc
xchg
inc
and
insl
mov
adc
mov
cltd
push
in
mov
je
shll
clc
jle
xchg
mov
push
into
lods
push
jno
adc
sahf
mov
fdivrl
xchg
popa
insl
popf
jnp
out
xchg
sbbb
mov
xor
push
loope
aaa
call
sub
fwait
pushf
jecxz
cs
dec
or
add
ja
lock
inc
xlat
push
test
add
lret
movsl
or
cmp
xor
adc
ret
xor
and
mov
cltd
mov
add
xorl
sub
lock
ret
movl
or
jns
cltd
and
xchg
mov
call
jmp
test
int3
lock
xor
push
outsb
call
ret
jle
in
out
icebp
test
add
clc
jbe
dec
cmpl
add
sub
xor
mov
popa
lahf
int3
pop
inc
xchg
bound
mov
ljmp
in
fdivrl
ljmp
or
jb
dec
bound
push
iret
adc
ds
xchg
lods
jns
dec
lcall
adc
mov
or
cmpsl
xlat
andb
aaa
lock
push
jmp
xchg
add
xchg
cmp
and
mov
into
dec
loop
out
cli
shl
mov
cs
frstor
cmp
mov
push
call
mov
sbb
cmp
out
ds
std
xor
dec
cmpsl
xchg
arpl
push
inc
imulb
imul
pushf
int
push
test
out
xchg
xor
xor
insb
adc
int
dec
inc
mul
lods
xor
lods
inc
in
jp
fs
mov
shll
test
adc
push
cld
or
aaa
dec
cld
inc
pop
testl
xor
sub
sbb
dec
mov
test
pop
lock
xor
mov
ret
test
xchg
pop
jne
out
scas
pop
push
pop
dec
pop
or
and
sbb
fmulp
int
jmp
cmp
jmp
add
fstps
or
add
pop
mov
fsubl
adc
mov
lret
repz
inc
xor
mov
cmc
in
lahf
or
imul
or
cmp
and
push
cmpsl
ret
pop
pop
xchg
xchg
out
notb
jl
mov
mov
mov
adc
fisttps
fidivs
shl
xchg
int3
jae
sti
mov
xchg
sti
jg
sahf
cs
jl
mov
test
arpl
xchg
fdivrs
mov
jp
adc
add
outsl
js
aas
int
jecxz
movsb
jg
in
sub
stos
xchg
inc
in
jnp
mov
jecxz
mov
adc
push
pop
mov
inc
dec
cmp
mov
sarb
es
je
mov
inc
idiv
ja
mov
pop
mov
shr
pop
xchg
xor
std
clc
mov
je
pop
jb
test
fs
inc
out
or
in
and
dec
fs
mov
sarl
push
mov
add
sub
imul
fwait
pop
sub
and
loop
call
in
dec
push
in
daa
or
hlt
inc
mov
sbb
inc
xchg
out
ja
adc
sbb
push
xor
adc
push
and
mov
repnz
rolb
jns
cli
dec
push
pop
jl
xchg
insb
ret
pop
popa
cmc
sub
pop
pop
push
dec
xor
fdivrp
push
sahf
mov
cld
mov
cmpsb
pushf
rol
lcall
enter
insb
xor
jo
cmc
add
add
xor
pop
cld
lret
push
dec
rcrb
jecxz
iret
add
jbe
or
push
scas
lods
imul
aad
jo
test
fsubs
ss
mov
xchg
in
xchg
std
jg
es
aam
in
iret
pop
xchg
jle
add
inc
inc
idivl
cs
in
mov
sbb
add
popa
call
cld
jmp
insb
push
pop
mov
int3
aam
inc
aam
sbbl
aam
pushf
mov
cmp
and
pusha
push
scas
cmp
and
and
fdivrl
pop
je
movl
jno
gs
cltd
jp
jp
sub
xchg
xlat
xchg
sarl
xchg
sbb
imul
mov
sbb
pop
cmc
mov
add
out
ret
pop
and
xor
mov
sbb
pushf
inc
repz
cmp
lds
jg
aas
pop
push
js
scas
es
sub
mov
ret
add
adc
inc
pop
fisttps
jae
xchg
jecxz
aam
enter
jb
es
fs
shrl
mov
push
mov
add
stos
addb
cwtl
fistl
lcall
xor
pop
cmp
jmp
jge
mov
andl
cwtl
inc
scas
roll
jl
loop
je
stc
mov
add
mov
rcrl
repz
xchg
jae
xor
stc
mov
xchg
not
fs
in
xchg
or
add
cmp
xchg
stos
ret
or
sti
pop
push
xchg
movsl
sbb
push
jns
xor
ja
cmp
pop
nop
sub
jl
popf
cmc
xor
sub
jle
cmc
adc
adc
adc
add
inc
xchg
sbb
mov
imul
aad
mov
in
daa
movsb
push
pop
shrb
rol
add
sub
ret
dec
sub
mov
insb
jns
psubsb
enter
fists
scas
cltd
lret
fsubl
filds
rcl
fdiv
into
cltd
stos
add
lret
cs
and
dec
push
pop
cltd
pop
lea
loopne
adc
lock
mov
dec
mov
sarb
adc
mov
mov
xor
xchg
in
inc
xchg
or
pop
lea
in
aas
lret
dec
and
insl
push
fstps
icebp
dec
in
loope
cmpsb
mov
mov
mov
add
dec
lcall
or
pop
xchg
jle
push
pop
jle
ss
dec
and
mov
cs
cmp
test
jg
jecxz
movb
xchg
sub
cmpsb
xchg
jmp
movsb
dec
dec
adc
imul
pop
sbb
out
adc
ja
cli
mov
mov
sahf
mov
stc
xchg
data16
loope
jno
add
mov
xchg
adc
add
fisttps
push
daa
jmp
cmp
mov
cltd
push
scas
fisubl
jno
push
sub
pop
or
int
cld
or
or
fmuls
push
add
mov
and
mov
test
push
insl
adc
push
add
andl
in
pop
pop
lcall
pop
pop
dec
pop
mov
fildl
ds
jo
mov
ret
gs
mov
jnp
adc
clc
loop
push
xchg
rorb
inc
into
push
xor
aaa
je
lcall
xor
sub
xchg
xor
movsb
mov
adc
mov
movsb
test
xor
les
in
divl
insl
dec
mov
inc
xor
sub
ja
cmp
push
and
cmp
push
pop
mov
arpl
mov
sbb
test
fistl
repnz
or
push
fistl
enter
dec
xchg
xor
cmp
fmul
aas
sub
loop
aas
rcrb
out
scas
call
cmovne
xor
xchg
push
jge
repnz
outsl
jne
jecxz
add
pusha
add
cld
insl
fstpt
add
shll
mov
mov
and
lods
jle
shlb
addr16
pop
shrl
test
adc
and
pop
mov
and
int
sub
out
loop
fstps
jbe
mov
mov
imul
icebp
xchg
int3
ret
fcomip
adc
xchg
dec
lds
push
dec
mov
mov
pop
jbe
xor
or
pop
jno
stc
pop
insb
sbb
mov
cwtl
rep
pop
mov
arpl
rclb
dec
jge
adc
xor
xchg
out
sub
push
mov
out
push
and
rorw
pop
inc
ss
jg
pushf
mov
leave
sbb
sbb
movsl
int3
sbbb
push
shlb
test
lret
imul
test
jb
aas
nop
jmp
push
lock
add
mov
mov
xchg
push
pop
sbb
repnz
scas
adc
cwtl
lock
push
push
lahf
add
scas
push
inc
call
xchg
mov
jbe
push
pushf
outsl
daa
lret
lods
lock
pop
or
or
lock
push
je
iret
nop
push
cmp
loop
sbb
lods
aaa
or
std
cld
pop
clc
mov
jne
sub
xchg
out
mov
and
adc
jno
rcr
inc
adc
enter
mov
or
pop
adc
cmp
sub
addr16
cli
addb
rcr
and
push
add
mov
cmpsl
dec
cmp
pop
xor
popa
pop
sub
jb
andb
movl
cwtl
adc
mov
jmp
adc
das
inc
dec
stos
sbb
jne
pop
lock
pop
daa
cli
sbb
or
xchg
xor
jmp
lfs
scas
gs
fsubrl
leave
jmp
dec
inc
xchg
stos
leave
clc
sub
pusha
mov
pop
mov
cmp
sti
div
mov
decb
js
dec
inc
cmp
jnp
push
jno
and
inc
and
push
outsb
ret
rclb
out
mov
rorb
jae
fidivl
jle
negb
cli
into
mov
ds
imull
push
insl
in
xor
data16
xchg
xor
lcall
push
sbb
pop
xchg
stc
lods
gs
testl
mov
sbb
xor
in
mov
push
and
cmpsl
loopne
cmp
push
xor
xchg
push
sub
cmpsl
push
sahf
in
and
in
mov
jbe
imul
xor
inc
sbb
test
mov
pop
mov
insb
icebp
jmp
xor
add
dec
insl
dec
push
mov
xlat
inc
inc
xchg
cmpsl
adc
add
push
adc
xchg
xchg
adcl
sub
pusha
and
jo
dec
xor
loopne
scas
jo
aad
outsb
lock
adc
shlb
cmp
fstps
stos
je
test
les
pop
mov
out
or
mov
adc
adc
sub
jmp
dec
push
aas
mov
add
lods
cmc
cld
jno
js
bound
fwait
outsl
cmp
es
push
cli
cwtl
aad
dec
dec
sub
and
jle
cmpsb
ret
mov
hlt
icebp
add
ljmp
orb
mov
movsl
push
xchg
inc
mov
sbb
xchg
stos
stos
enter
jae
js
xchg
sbb
fnstenv
inc
je
lods
xchg
mov
test
dec
cmpsb
lds
cwtl
pcmpeqb
ficoml
mov
xchg
hlt
lret
add
stc
push
push
lcall
xchg
shrb
jmp
or
inc
cmpsb
out
dec
sbb
push
adc
mov
in
dec
or
dec
push
cmp
adc
xchg
ja
adc
rcrl
sub
cwtl
out
add
sar
adc
ret
jg
inc
cld
sahf
adc
jmp
subl
jmp
dec
mov
xor
mov
jae
shrl
cs
pop
and
cmp
inc
mov
ljmp
lds
cmpsb
sub
cmp
jnp
or
sbb
sti
repnz
push
rorl
sub
daa
sub
lods
push
xor
out
fdivp
popa
or
jp
sub
in
es
mov
pop
les
add
ficompl
out
push
pop
subb
push
inc
movl
mov
push
push
lcall
aad
cltd
fdivrs
dec
les
sti
or
cmpsl
jle
mov
pop
ljmp
jnp
dec
or
push
cmp
mov
cwtl
cmp
sub
push
mov
xchg
pop
mov
mov
out
pop
cwtl
pushf
and
addr16
add
fs
jmp
aaa
and
xchg
sar
or
add
dec
push
or
or
mov
sbb
fistps
xchg
xor
push
pop
outsl
xchg
inc
lods
daa
fbld
push
pop
out
mov
fldt
cld
loop
movsb
cmp
sbb
std
push
jns
xchg
sub
bsr
stos
out
jge
lcall
es
mov
sti
ja
jne
pusha
pop
push
mov
out
mov
jns
mov
in
jns
outsl
sbb
adc
and
icebp
test
notl
or
adc
rclb
in
int
gs
mov
repz
imul
sbb
test
and
pop
arpl
and
pop
movsb
shlb
or
pusha
lods
shll
xor
add
scas
ret
in
cmp
push
adc
adc
test
or
xchg
aam
imul
inc
pop
fidivrl
arpl
mov
push
xor
arpl
dec
push
jno
lock
adc
cmpsl
movsb
mov
insb
sub
fimuls
test
fsubr
lock
push
popf
outsb
pop
jl
arpl
push
lret
fmull
enter
pop
xor
shll
fs
shlb
subb
ret
push
lcall
push
cmp
inc
stos
or
adc
scas
jae
je
jae
sub
add
inc
pop
sbb
adc
jae
or
or
jns
aad
pusha
lret
lea
mov
push
mov
mov
sub
add
aaa
mov
out
in
out
ret
cmc
jmp
jmp
lcall
repz
mov
fcoms
xchg
pop
xchg
xchg
xchg
fcoms
repz
mov
call
push
mov
add
jno
icebp
mov
and
test
lret
pop
sbb
xor
sub
dec
cwtl
mov
ljmp
add
lcall
fsubrl
sbb
ss
gs
pop
push
sub
mov
data16
pop
inc
loopne
shlb
jmp
loope
sub
fstl
nop
cs
xchg
fildl
or
adc
movsb
punpckldq
cmpsb
fdivrp
and
sub
movl
sub
dec
pop
sbb
roll
cmp
mov
mov
mov
aas
ret
mov
push
clc
lahf
add
repnz
jmp
pop
cmp
out
xor
push
mov
fldenv
mov
sub
xchg
inc
enter
xor
dec
js
xor
xor
and
insl
gs
shr
aas
ljmp
stc
jnp
stos
ja
cmp
les
adc
fld
xor
insl
gs
iret
xchg
es
roll
jb
lret
inc
inc
pop
push
cmp
mov
imul
jmp
inc
sbb
fistpl
cmp
test
lahf
cld
sub
aas
mov
mov
imul
pop
int
mov
test
std
cmpsb
stos
cmp
xchg
je
mov
test
jb
aaa
mov
jp
mov
mov
mov
imul
sets
outsb
mov
jmp
fdiv
fwait
pushf
mov
push
ret
rclb
mov
xchg
fidivl
shlb
rcrb
mov
addr16
in
cmp
adcl
sub
repnz
sub
pushf
sub
adc
pop
cmpsb
imul
adc
xchg
mov
lret
jmp
jo
push
int3
divb
dec
fnsave
jbe
andb
pop
into
jb
fsubrl
push
lret
sub
push
and
jmp
or
or
popf
dec
xchg
addb
outsb
call
insb
cld
add
movsl
cmp
xchg
sub
ret
pop
in
dec
and
std
clc
lea
aas
jns
shrl
data16
inc
scas
dec
inc
xlat
push
cwtl
inc
mov
sbb
dec
popf
mov
mov
inc
jl
mov
sti
stc
out
pop
dec
mov
and
push
aad
shr
push
int3
fsubrl
pop
pop
pop
bnd
jnp
pushf
adc
add
fistl
or
jp
push
ficoml
jmp
xlat
cmc
add
ret
inc
cmp
repnz
mov
jmp
jb
push
test
and
imul
sbb
pop
cmp
aaa
dec
push
subb
mov
icebp
loope
out
pop
out
insb
loopne
je
and
push
jmp
mov
add
mov
sbb
insb
dec
lods
loop
ds
call
add
outsl
cmp
push
mov
pop
clc
add
movsb
mov
scas
ret
mov
xchg
sub
gs
push
bound
pop
mov
fidivs
fisubrs
test
add
lahf
sbb
sbb
pop
rcrb
pop
out
or
and
pop
fstpl
int3
sarb
ret
sbb
inc
mov
push
inc
loop
xchg
dec
ljmp
mov
pop
push
add
gs
lea
test
test
dec
leave
cmp
pusha
pushf
daa
xorl
inc
loopne
loop
pop
pop
idiv
imul
pop
mov
jg
daa
or
popf
je
fs
clc
movsb
sub
cmpsl
mov
push
sahf
loop
nop
cli
repnz
fcmove
cli
icebp
pop
loopne
fildl
test
or
je
xchg
push
adc
inc
pop
inc
sti
lea
and
out
out
xorl
fnstenv
repz
dec
fisttpl
push
daa
cmpsl
push
stos
cs
movsl
movsb
imul
iret
push
in
lods
jns
mov
mov
in
mov
push
mov
pop
mov
push
pop
xchg
test
orb
push
dec
jge
js
adc
fdivrp
push
jmp
imul
xor
rcll
and
cmp
insb
cmc
mov
outsb
je
add
pop
js
sbb
movsb
mov
xchg
jge
push
out
pop
mov
adc
xchg
adc
and
pop
test
cli
xchg
ds
adc
mov
shl
or
cmp
divl
or
sbb
push
cwtl
cmp
jp
lahf
jo
sub
push
imul
push
sub
and
fisubrs
or
mov
dec
and
repnz
sbb
jb
push
mov
push
mov
negl
les
mov
lret
inc
rcrl
lock
jmp
es
std
inc
scas
mov
imul
loope
xor
push
ret
sbb
push
fcoms
iret
sub
fcoms
icebp
xor
cli
push
cmp
adc
mov
jnp
outsb
mov
lcall
add
push
lods
add
fidivrs
sbb
adc
push
mov
cmp
push
xchg
adc
lcall
mov
lds
sub
add
in
dec
das
and
pusha
pop
pop
sbb
sub
inc
clc
filds
mov
out
mov
mov
and
pop
sbb
daa
ljmp
gs
jnp
inc
int
jmp
rcrb
popf
cmp
inc
and
fwait
mov
xor
mov
stos
ficomps
inc
mov
mov
add
mov
in
lea
imul
sub
std
add
imul
mull
fistpl
loope
xchg
sub
sbb
int3
fidivs
mov
pop
movb
scas
je
push
xor
xlat
mov
dec
adc
ret
or
shlb
out
push
xchg
shlb
ss
cmp
sbb
mov
fisttps
addr16
movswl
mov
jae
cs
and
movsl
into
ret
cltd
mov
aad
out
sahf
je
lds
das
push
lds
push
jmp
stos
jmp
dec
popf
outsb
rolb
jnp
std
ds
aas
mov
bound
stc
sbb
dec
sbb
xchg
nop
test
shl
mov
push
mov
jmp
mov
jge
cmp
subb
stc
test
sub
pushf
mov
mov
mov
push
push
and
in
xor
neg
fisubl
test
pop
xor
lcall
rcrl
popf
ja
popa
lods
dec
ljmp
cld
add
mov
add
pop
jle
mov
lods
jmp
cmp
pop
arpl
je
or
push
daa
mov
stos
lods
sbb
inc
imul
or
fstps
adc
push
and
push
inc
dec
ret
cmp
addb
scas
or
push
in
rcl
inc
in
jno
pop
xor
mov
jecxz
call
mov
pop
xor
fisttpl
cmp
int3
sahf
aas
addr16
jnp
gs
adc
in
xor
mov
sti
testb
pop
mov
dec
loope
jo
mov
aad
das
les
inc
mov
scas
xchg
aaa
mov
outsl
hlt
pop
dec
mov
or
mov
jmp
push
xor
sbb
cli
dec
and
int
push
mov
cmp
sbb
dec
push
lods
call
pop
aad
shrb
cmp
dec
pop
nop
cmpsb
cmpsb
into
mov
dec
and
in
and
add
out
icebp
add
mov
jmp
add
xchg
pop
cltd
xlat
aam
repnz
mov
fisttpll
into
sub
mov
inc
jmp
fdivrs
es
inc
lret
push
clc
imul
xchg
adc
jns
add
data16
mov
cmpsl
insb
jnp
out
lods
mov
lock
pop
ret
mov
fisubl
add
ljmp
ror
testb
xor
sbb
xlat
pop
dec
mov
dec
arpl
popf
push
push
jge
sub
ljmp
pop
lahf
sbb
xchg
lret
ret
out
arpl
cmp
add
cltd
lcall
adc
or
pop
pop
mov
cmpsb
adc
je
mov
xchg
out
lcall
imul
mov
ljmp
daa
cld
gs
into
add
add
stos
mov
sahf
nop
sti
mov
ficompl
pop
adc
lea
sbb
dec
pop
into
iret
outsl
mov
cmp
mov
push
nop
cs
rorb
test
rep
jae
xchg
xchg
nop
lea
mov
cltd
cli
faddp
xlat
adc
pop
mov
cltd
sbb
into
mov
mov
push
hlt
jo
shlb
adc
lods
jp
into
or
or
sub
add
add
ss
in
xor
ss
and
xor
jb
push
sub
scas
add
bts
andl
ret
jno
xor
in
addr16
pop
and
mov
bound
jg
dec
ss
out
in
loop
es
loop
mov
xlat
pushf
dec
incl
out
mov
arpl
js
sub
out
cli
fdivl
shrl
mov
cmpsb
xor
dec
fs
test
lods
or
aaa
inc
or
push
repz
stos
dec
and
add
mov
roll
sub
add
mov
cmp
mov
sub
or
dec
cld
and
lds
cmc
and
inc
pop
sub
negb
mov
xor
adc
icebp
shll
mov
in
xchg
repz
pop
push
xlat
shl
sub
push
adc
xor
in
mov
push
ljmp
pop
ss
lahf
mov
in
mov
sub
movsb
jp
leave
loop
loopne
sbb
loope
adc
movsb
or
jo
test
push
stc
add
divl
sbb
adc
mov
jl
movsl
mov
scas
push
aaa
sarl
lcall
in
xor
in
ss
add
das
mov
sti
pop
jno
dec
inc
push
gs
or
dec
mov
mov
add
gs
xorb
jbe
inc
imul
jecxz
fimuls
mov
out
inc
es
in
outsb
adc
mov
or
ja
ret
and
push
cmpsb
push
xor
cmp
add
pop
pop
jecxz
fidivs
jecxz
out
stos
xchg
fidivrs
xchg
push
mov
shlb
ja
enter
stc
dec
pop
imul
cmp
mov
xchg
rorb
insl
dec
movsl
xchg
jge
sub
mov
insl
push
pop
cmpsl
mov
and
lods
inc
pop
int3
pop
aaa
lret
int
adc
and
fndisi(8087
nop
movsl
daa
inc
jmp
hlt
cli
dec
mov
push
icebp
push
ficoms
icebp
les
inc
adc
je
loope
enter
sarb
push
movsb
add
jmp
test
popf
jmp
pop
mov
test
fldl
mov
cmc
lahf
out
loopne
jg
dec
pushl
mov
pop
push
rcr
shrl
add
fisubl
add
mov
data16
push
jbe
mov
mov
cmc
inc
js
push
push
jle
shll
out
or
test
cld
add
xchg
insl
push
data16
push
push
jno
jmp
es
sub
mov
push
data16
ljmp
mov
jg
cli
stos
fisubl
lds
mov
dec
sti
mov
push
imul
jne
sub
inc
inc
rcl
out
inc
out
in
sbb
sbb
mov
lods
push
int
adc
fdivr
jae
sarb
pop
push
fsubrl
dec
dec
in
mov
outsb
pop
mov
aas
rorb
pop
outsl
xchg
mov
repnz
add
or
inc
arpl
mov
ds
push
addb
xchg
add
jp
push
sbb
add
jge
aam
arpl
mov
imul
push
mov
pop
pop
adc
sub
cmc
cltd
mov
mov
sbb
adc
mov
sarb
dec
sbb
sub
cmp
in
enter
mov
xchg
rcr
and
ds
loop
dec
mov
ljmp
iret
cmp
fnsave
mov
add
pop
sub
mov
xchg
aam
les
sti
out
xor
mov
cwtl
in
xor
and
mov
movzwl
testl
inc
mov
add
mov
cmp
into
stos
leave
adc
dec
in
movsb
stos
leave
dec
mov
push
cmp
xlat
cli
ret
pop
sub
jge
push
mov
loope
mov
rorb
xchg
lds
mov
shlb
pop
and
sarl
fstpl
gs
scas
jns
xchg
js
pop
pop
jle
js
outsb
jge
mov
loopne
stos
ror
dec
std
mov
push
push
or
jp
xchg
push
orb
repnz
jns
cmp
aam
push
xchg
jno
add
add
jmp
push
aad
lret
test
pusha
jmp
bound
sub
mov
or
nop
jbe
sub
inc
nop
test
idiv
xchg
or
cmp
push
lahf
ret
xor
xchg
pop
mov
and
sahf
hlt
pusha
dec
sti
aam
dec
sbb
mov
lds
outsb
jo
or
xor
pop
in
mov
sysenter
push
mov
test
mov
jp
pop
lock
push
enter
sub
pushf
mov
sbb
jge
es
ret
repnz
mov
mov
out
mov
lods
sbb
jo
mov
add
and
aas
shll
ret
pushf
xor
pop
sbb
sub
mov
test
push
mov
dec
dec
mov
loopne
pushf
loop
je
sbb
xchg
mov
xchg
rcl
test
or
inc
adc
test
repnz
cmp
push
test
dec
leave
dec
jb
insl
outsl
sbb
fmull
bound
cwtl
mov
stos
lret
aad
fiadds
xor
aad
cmp
aad
cmp
insl
test
jp
aad
mov
aas
stos
mov
das
std
nop
std
movsl
std
pop
push
sbb
iret
lahf
push
mov
push
sub
mov
xor
mov
dec
ds
xchg
jl
xor
popf
and
notb
adc
fidivs
pop
cwtl
sti
xchg
loopne
push
and
dec
or
xchg
jp
loopew
or
mov
and
mov
sbb
inc
ljmp
data16
daa
ss
push
clc
cmpsb
cmc
pop
stc
cmpl
in
ljmp
enter
jge
ficoms
imul
mov
scas
push
shl
pop
jecxz
data16
pop
add
mov
in
mov
ficoml
inc
imul
sarb
sub
mov
or
add
pop
in
shlb
xchg
arpl
mov
push
mov
xchg
into
and
shll
mov
insb
pop
adc
push
and
adc
jne
negl
inc
outsl
dec
xlat
stc
daa
fsubs
dec
repz
insb
loopne
dec
sarl
jne
lods
mov
mov
mov
pop
xchg
add
out
jne
inc
cwtl
jle
cld
cmc
in
mov
sub
push
cmc
xchg
mov
mov
and
mov
add
fcomi
pop
into
insb
mov
orb
cmp
shrb
mov
popf
pop
xchg
inc
movl
xchg
push
int
push
and
test
cmp
adc
xchg
cltd
or
insb
and
imul
je
data16
cmpsl
fdivl
dec
jb
cltd
add
sub
cld
pusha
push
mov
out
out
stc
dec
jb
cmc
adc
test
push
inc
decl
dec
sub
mov
dec
xchg
enter
xchg
inc
aaa
jno
imul
push
fidivs
ljmp
js
inc
push
mov
loope
loop
and
lcall
add
pop
outsb
movsl
mov
lcall
sbb
pop
lods
ficoms
lock
rcrb
mov
fwait
sbb
xchg
mov
icebp
mov
cmp
fdivr
outsl
scas
jmp
pop
xlat
call
dec
int3
fistl
add
fcompl
adc
sbb
jbe
xor
aaa
mov
pop
lcall
dec
ljmp
loope
into
arpl
idivl
pop
cmp
fildl
add
xchg
and
lahf
iret
sbb
sbb
add
imul
ljmp
daa
fisubrl
pop
sahf
sbb
mov
push
fs
jnp
mov
dec
xchg
mov
hlt
xchg
xor
test
lcall
out
insl
jl
movsb
adc
pusha
pushl
aas
insb
scas
sub
mov
lods
jge
inc
adc
mov
jmp
loopne
movsl
sub
jnp
and
jb
ds
int3
sub
xchg
adc
data16
fstpl
xchg
pop
in
iret
push
push
mov
call
out
mov
cmpl
dec
and
dec
movsb
sub
xchg
loop
or
roll
dec
call
sti
movsl
push
mov
fistpll
rcl
mov
out
sbb
cmp
pop
in
adcb
sbb
mov
ficoms
cmpsb
adc
fdivr
cmp
lcall
cmp
nop
inc
pop
or
scas
xchg
or
jbe
fwait
pop
or
test
in
xor
pop
sub
int3
mov
fstp
addb
inc
les
sahf
into
dec
push
and
rcl
insb
mov
mov
cmp
pop
mov
iret
adc
cmpsb
mov
mov
fmul
addl
fwait
jne
and
xchg
dec
or
rorb
cmp
pop
lea
lods
popf
out
inc
test
fwait
jp
sbb
xor
popf
xchg
add
mov
pop
and
lods
test
push
sbb
ret
mov
add
push
xchg
mov
adc
xchg
add
sub
loopne
xor
or
mov
xor
pop
pop
dec
adc
mov
sbb
loopne
and
test
subb
mov
pop
sub
pusha
insl
lret
mov
xchg
scas
pop
stc
pop
into
mov
orb
cmpsb
xchg
jle
mov
mov
mov
add
add
adc
mov
jno
pop
xchg
pop
xor
nop
xor
sahf
xlat
enter
jp
nop
cmpsb
dec
mov
mov
popa
lahf
cmp
sub
insb
or
jo
addr16
mov
sub
sub
and
sub
call
push
and
mov
dec
jge
add
sub
xor
arpl
rcr
push
loope
imul
push
fstpt
mov
int3
sub
and
jmp
int
xor
idivb
inc
popa
adc
pop
fisubl
xor
jmp
cmp
lcall
adc
fcmove
dec
adc
test
cmpsb
pusha
aas
adc
shlb
int
mov
cmp
sub
shrb
or
ss
jo
mov
je
rolb
mov
cli
fs
adc
and
jle
sbb
loope
data16
lea
jge
push
dec
les
insb
push
dec
sub
push
lods
xchg
sub
stos
pop
jp
in
mov
mov
rolb
push
pusha
das
movsl
mov
hlt
lds
sar
inc
mov
lods
push
fisubl
xor
rol
xchg
inc
lret
gs
adc
xor
testb
cmp
sub
in
sbb
movb
mov
jb
cmp
cmovl
and
cli
fldt
sub
add
inc
add
in
push
add
mul
jecxz
out
repnz
and
cmp
jp
ret
mov
mov
sti
out
adc
push
leave
daa
mov
push
push
mov
adc
add
dec
int
xchg
dec
dec
flds
or
cmp
lret
sub
nop
pop
adc
xchg
mov
xchg
andb
mov
xchg
push
mov
hlt
or
mov
sbb
or
add
pop
dec
push
mov
stos
orb
xorl
lret
in
js
dec
mulps
jg
mov
mov
xchg
enter
sbb
enter
les
mov
xor
mov
xor
push
jl
sub
test
xchg
sub
pusha
into
in
dec
and
mov
leave
inc
lods
insb
ficoml
xchg
in
ja
push
lahf
add
inc
loope
cltd
dec
leave
mov
dec
repz
cmp
je
outsl
ret
mov
adc
cli
jmp
sbb
repnz
aam
fnsave
adc
jle
xchg
push
sti
and
test
in
jmp
mov
adcl
cmc
sub
jmp
fcomps
rcr
add
cltd
movl
sarb
jns
or
shll
jmp
daa
shld
jno
mov
dec
jge
fs
mov
mov
daa
pop
pop
jo
int3
dec
pop
sub
daa
adc
sub
push
stc
popa
cmpsb
rcr
xchg
js
dec
add
mov
push
mov
mov
or
aad
jnp
cmp
scas
add
daa
andl
jns
xchg
leave
lock
jmp
sub
mov
dec
inc
jle
imul
clc
adc
mov
mov
cld
sub
call
or
pop
and
push
fcomip
push
das
xchg
ljmp
sbb
pop
fsubrs
cmp
lret
test
gs
mov
mov
pop
adc
pop
inc
dec
int3
push
idivb
jnp
dec
jg
icebp
jl
stos
cmp
inc
shll
sbb
push
mov
pop
jae
js
mov
sahf
xchg
push
push
fldt
loop,pn
inc
sti
xchg
and
sub
push
repnz
lds
push
cmp
je
adc
jmp
test
adc
push
and
pop
add
hlt
lret
push
outsl
ficomps
pop
pop
fiaddl
cmpsl
mov
cmp
jo
add
jecxz
jae
mov
arpl
loopne
loop
and
es
out
loope
xchg
xlat
inc
inc
outsb
insl
fldt
ds
jecxz
lods
xchg
mov
pop
nop
mov
dec
cmp
mov
inc
mov
out
xor
andl
fbstp
xchg
or
adc
xor
adc
lret
shl
dec
xchg
xor
movsl
lods
movl
push
out
xchg
fimuls
or
mov
stc
xor
lahf
aad
fwait
or
cmpsl
dec
fcomp
outsl
mov
dec
shll
or
mov
into
out
addl
or
xchg
popa
stc
push
sbb
adc
dec
cmp
jne
lea
jecxz
jb
pop
mov
jmp
lahf
mov
roll
mov
or
mov
mov
inc
mov
push
xchg
push
xchg
nop
aas
and
pop
or
out
sub
repz
ds
add
insl
daa
push
insl
xchg
sbb
sarb
bnd
dec
mov
mov
sbb
fidivs
insl
pushf
pop
scas
jne
cwtl
xchg
or
jns
adc
js
imul
repnz
fidivl
dec
xor
and
test
insb
mov
repz
lcall
shlb
imulb
aas
lahf
add
rcrb
frstor
push
cs
jne
jg
aad
jg
xor
popl
lcall
mov
push
pop
inc
lahf
push
mov
arpl
xor
test
jge
cld
and
sub
cmpsb
stc
enter
decb
pushf
shll
push
sbb
xchg
jge
pop
ja
fdiv
xchg
std
rorl
daa
out
dec
cwtl
pushf
mov
test
stc
cwtl
ds
inc
outsb
leave
lods
lea
push
xchg
jne
mov
add
lahf
mov
inc
pop
es
imul
push
into
arpl
sub
cmp
lret
mov
cli
call
xchg
mov
loopne
mov
cmpsl
dec
mov
fxtract
std
mov
inc
or
imul
faddl
cmpsl
push
dec
inc
mov
dec
cmp
sub
and
popa
into
pop
dec
cmpsl
inc
mov
out
imul
lock
mov
pop
loope
in
mov
jecxz
out
int
lret
push
fdivp
fsubrl
mov
pop
push
dec
adc
pop
xor
mov
mov
pop
stos
mov
mov
neg
shlb
add
arpl
lods
loop
sti
dec
push
jge
dec
mov
xchg
outsl
popa
sub
in
push
lahf
in
or
loop
mov
dec
xchg
addr16
inc
sub
mov
xchg
mov
repnz
daa
fmuls
into
scas
and
fwait
enter
popa
sahf
xchg
inc
jo
dec
cmp
lea
jg
test
jmp
dec
daa
out
rolb
arpl
push
xor
add
adc
aam
cmpsl
adc
mov
jbe
and
jl
cmp
ja
adcl
test
pop
hlt
mov
xor
jnp
lret
in
sub
cmp
mov
das
inc
out
and
test
mov
fists
in
iret
mov
mov
dec
push
test
in
pop
sti
outsb
into
movb
inc
push
adc
imul
bound
out
lea
xchg
pop
mov
cmpsl
jnp
push
loopne
in
mov
mov
mov
into
jo
xor
sub
dec
push
mov
xor
adc
and
pop
jle
sbb
jmp
mov
jb
xor
and
push
and
in
push
xchg
adc
xor
cmp
jmpw
mov
mov
in
jl
scas
dec
shr
es
jns
jecxz
in
push
mov
stc
or
iret
jae
xchg
jne
js
scas
popf
or
fdivrs
jge
fimuls
add
dec
mov
xlat
xor
int3
in
sub
or
push
mov
cmp
push
popa
insb
mov
lcall
add
and
pop
popa
cmp
pop
ret
add
xchg
loope
inc
push
xchg
mov
mov
lods
and
aas
xor
scas
test
arpl
mov
addb
cmp
pop
je
push
fnstsw
xor
pop
inc
push
cld
fistpl
jbe
loop
lret
dec
outsl
dec
dec
sbb
push
in
add
movsl
or
xchg
lea
out
inc
mov
ja
push
enter
sub
sub
bound
pop
lds
test
dec
into
popa
inc
adc
mov
repz
add
xchg
mov
sbbb
sbb
fldt
loopne
dec
mov
enter
les
inc
xor
push
scas
clc
xchg
mov
shll
xrelease
mov
xor
adc
movsb
push
pushf
mov
addr16
jb
ljmp
iret
cmpsb
in
movsb
or
jg
sbb
sbb
in
stc
fidivrs
add
and
push
lds
shl
pop
jmp
out
mov
lods
mov
ja
push
int3
js
jb
loope
mov
mov
outsl
scas
insb
add
xor
popa
leavew
sub
pop
lods
push
push
fcmovu
cmp
push
add
mov
icebp
cmp
sub
jge
sbb
add
leave
dec
andb
push
xor
lea
out
xor
int
or
or
or
je
or
jb
ds
adc
add
add
fists
mov
aaa
fiaddl
xchg
mov
mov
fwait
movsb
rorl
and
mov
stos
lea
popa
add
nop
pop
fucomp
mov
in
inc
out
cwtl
pop
dec
movsb
call
movsb
nop
dec
and
fwait
mov
insl
push
sarb
rcl
lods
cmp
cmpsl
inc
adc
mov
loope
push
fdivs
subb
push
sarl
int3
out
addl
sub
fiaddl
aaa
push
pop
int
push
cltd
repz
out
lea
fs
roll
sbb
dec
and
xor
and
xchg
inc
imul
iret
or
aaa
leave
stos
adc
iret
sub
pop
xor
mov
fisubl
scas
pop
stc
popf
mov
mov
mov
mov
xchg
jp
xchg
shll
dec
sbb
cmpsl
fsts
mov
dec
out
and
lds
or
shlb
dec
out
in
xchg
ljmp
dec
sub
sbbb
or
inc
xchg
ret
push
pop
in
mov
cld
dec
add
test
pop
nop
jae
pop
jl
ret
mov
loop
mov
xor
lea
inc
mov
push
pop
mov
popf
mov
inc
das
push
test
cld
mov
rclb
sub
and
mov
push
cmc
decl
or
repnz
sbb
aaa
sub
in
inc
mov
scas
push
sti
jecxz
and
je
hlt
and
int3
inc
js
hlt
sub
aaa
cmp
out
stc
repnz
dec
jmp
jae
popf
sti
les
xor
push
jl
sti
jne
decl
stos
mov
push
sub
sbb
inc
xchg
cld
ds
mov
jae
mov
xlat
outsl
mov
mov
jg
aam
bound
in
jge
pop
mov
jl
sub
xor
loop
mov
mov
mov
insl
shlb
dec
ds
sub
push
iret
ret
rorl
sub
in
xor
sbb
insb
fstpt
ror
test
call
xor
out
lock
push
aas
mov
stc
out
xchg
or
mov
pusha
lds
lret
jne
arpl
sub
adc
dec
in
jle
jno
fwait
xchg
std
inc
test
sarl
dec
xor
dec
pushf
or
call
out
jp
adc
xchg
mov
mov
xor
rorb
insl
add
mov
pop
add
ja
xchg
icebp
xchg
jge
outsb
mov
popa
mov
cmp
jo
xor
loop
in
fwait
jns
dec
pop
cmp
lods
iret
aaa
stc
cmp
aaa
cmp
push
rcll
lea
jo
push
jecxz
sbb
or
loop
pop
mov
sub
inc
push
jbe
xchg
mov
das
imul
xor
in
or
dec
mov
adc
xchg
push
xchg
jle
in
mov
jbe
xor
inc
jae
cltd
adc
and
pop
fsubrp
mov
jb
cli
mov
adc
pop
test
inc
loop
ficoms
out
pop
test
leave
das
adc
shll
or
pop
adc
xchg
push
jp
repz
dec
xlat
pop
inc
cmp
pcmpeqd
fs
in
daa
mov
hlt
nop
out
push
popf
push
mov
pop
sbb
or
outsb
sbbb
imul
stos
int3
nop
or
shr
jno
ds
addr16
fadd
sub
add
mov
repz
and
jp
push
popa
mov
mov
lea
loopne
adc
call
inc
pop
stc
out
xor
pop
jge
mov
xchg
pop
cmpsb
cmp
dec
in
mov
push
xlat
stos
int3
cltd
mov
call
ficoms
or
addr16
leave
jl
nop
push
inc
and
push
imul
fwait
jge
aas
notl
ret
sti
xor
rol
adc
mov
jle
inc
cli
subl
push
lret
sub
sahf
sbb
jb
xor
and
mov
sub
dec
mov
dec
pop
imul
lahf
jb
mov
sub
fsubr
dec
and
push
push
lds
popf
inc
testb
lea
ficompl
jecxz
lahf
mov
jbe
xchg
mov
mov
cmp
jg
cmpsb
dec
and
pop
pop
out
fimull
pop
ficoms
dec
sti
and
or
xlat
imul
inc
jg
movsb
pushf
jmp
or
mov
subb
inc
jno
data16
addr16
out
enter
stos
out
les
es
addr16
pop
xchg
mov
sub
xor
xchg
sbb
cltd
push
cltd
cmp
jmp
xor
cltd
rolb
lahf
test
mov
ds
jbe
adc
lods
and
into
inc
inc
cs
test
ret
or
add
or
cmp
xchg
mov
icebp
mov
pinsrw
cs
js
insl
sbb
and
cmp
imul
adc
sbb
aad
sahf
out
xor
data16
sub
xor
aad
lods
cmpsb
sbb
in
mov
outsb
xchg
adc
lods
nop
loope
out
test
imul
push
leave
push
es
ds
and
mov
cmp
in
std
test
jns
pop
in
mov
mov
lcall
ss
divl
test
bnd
mov
rclb
faddl
notl
xchg
xchg
test
xchg
cmp
outsb
outsl
aaa
pop
cmp
lret
jne
ja
mov
jno
ss
sbbb
loopne
dec
sarb
stos
dec
loop
inc
loope
adc
jl
out
insl
jmp
or
pop
mov
dec
jns
cmpsb
mov
int
daa
or
ss
inc
jmp
mov
scas
aaa
or
ja
push
jp
and
or
xchg
pop
sahf
sub
fs
cli
mov
scas
push
cld
testl
repnz
outsl
add
ja
lock
dec
adc
or
js
subl
cmp
add
sub
jae
es
mov
mov
jb
inc
xor
jmp
xchg
lcall
add
xchg
add
scas
and
leave
pusha
ret
cmc
cmp
clc
adc
xor
movsb
nop
push
xchg
dec
pop
or
xchg
adc
addl
out
sbb
mov
in
rolb
mov
ljmp
leave
push
add
and
adc
lea
cmpb
or
sarl
add
cmp
add
lahf
sbb
add
aas
push
push
pop
hlt
das
insb
lods
flds
pusha
xor
and
or
shrb
pop
je
mov
sub
popa
mov
sub
pop
shlb
stos
std
sub
imul
and
stos
or
fimull
decb
sbb
push
jne
push
inc
inc
push
inc
xchg
hlt
pop
mov
push
test
xchg
and
imul
mov
popa
cwtl
imul
mov
jp
scas
es
out
and
jecxz
mov
aad
adc
in
outsb
dec
lock
jmp
imul
sub
fstpl
mov
or
ficoml
pushf
mov
mov
dec
repz
repz
ljmp
ljmp
xchg
xlat
adc
ss
fstps
repnz
test
clc
inc
jl
jns
lea
sub
rcll
inc
cs
mov
leave
mov
xchg
pop
insb
and
ss
add
in
in
sbb
pop
cmp
cmc
add
push
or
insl
dec
test
dec
js
dec
mov
leave
inc
mov
and
adc
es
xchg
pop
add
sub
repz
mov
xchg
and
xchg
xor
xor
seto
sbb
faddl
sbb
insl
test
xor
aas
xlat
lds
in
mov
and
pop
xchg
or
xlat
dec
push
and
dec
in
repz
push
mov
xchg
mov
dec
add
xor
rclb
jb
and
cs
popf
dec
jne
jecxz
mov
pop
adc
push
mov
and
jecxz
sub
dec
or
xorl
and
fcom
mov
sbb
inc
mov
xchg
jne
or
leave
sbb
xlat
decb
repz
xor
test
pop
fdivrs
das
or
mov
push
jge
shll
dec
or
cmpsl
mov
adc
or
pushf
outsl
push
pop
add
and
mov
mov
push
xchg
jbe
shrl
dec
or
repnz
nop
xor
cmc
cmp
inc
dec
jae
into
shrb
shl
inc
idivl
cmpsl
daa
movsb
loope
sti
in
adc
ds
xchg
push
push
or
ficoml
mov
cmp
mov
jmp
mov
add
sbb
and
inc
loope
fs
jo
enter
adc
shl
in
subl
shll
int
in
inc
idivb
shl
loope
leave
jge
or
loope,pn
repnz
jp
cltd
cmpl
mov
add
or
sbb
mov
sub
pop
mov
mov
and
jg
insb
lock
or
and
shl
je
ret
mov
push
dec
shrl
pop
pop
aad
mov
test
mov
mov
ret
sbb
jno
mov
andb
fs
loop
xchg
or
xor
xlat
sti
sub
in
stos
dec
scas
cld
mov
mov
test
dec
insb
sub
dec
gs
push
xchg
arpl
and
jne
sahf
pop
int3
js
cmp
pushf
push
lds
inc
into
insl
mov
and
cmp
test
pop
xchg
mov
cs
xor
out
sahf
push
push
cmpl
fcompl
xchg
cmpsb
and
mov
cmp
jno
mov
insl
inc
stc
xor
jl
pop
data16
push
ficomps
std
push
sbb
cmp
and
pop
push
mov
push
orl
int3
xor
sbb
sbb
data16
mov
daa
jo
popa
sbb
pop
cmpsl
pop
popfw
jecxz
icebp
jno,pn
cmc
mov
xor
jb
int3
test
adc
stc
out
sub
incb
aad
lods
jge
mov
mov
push
pop
mov
push
mov
scas
fsubl
lret
mov
xchg
not
sti
xchg
sbb
out
cmc
lods
subb
push
jne
mov
xchg
inc
push
nop
dec
imul
out
fadds
jae
cld
xchg
call
adc
loopne
scas
or
push
jg
ret
and
mov
das
dec
mov
push
pusha
pmulhw
sub
jns
jecxz
cld
ss
scas
dec
imulb
add
imul
testl
cld
jb
sbb
push
fistpl
mov
out
push
inc
lea
dec
push
xchg
jo
sub
cmp
sbb
pop
test
je
jg
fidivl
add
dec
outsl
xor
pop
in
popf
jbe
adc
pop
ret
jo
imul
push
jae
push
rsqrtps
gs
add
ljmp
jg
xchg
sar
xor
xor
lret
aaa
jmp
inc
mov
ror
adc
jmp
je
jmp
fdivrs
movd
sarb
jns
leave
js
clc
js
mov
loop
idiv
test
insl
mov
sub
out
jno
les
jmp
mov
sub
and
iret
dec
add
jecxz
and
and
rclb
cmp
int3
mov
cld
shl
pusha
lds
aaa
inc
xchg
lock
and
add
in
push
scas
cs
imul
jo
inc
or
loop
fwait
jae
or
aad
ds
test
mov
test
jne
push
int
shll
jnp
sub
out
les
test
pop
xchg
repz
xor
syscall
data16
jg
sbb
cmc
xlat
xchg
movsb
icebp
or
add
jmp
mov
mov
jne
dec
or
and
push
std
push
dec
scas
xorb
out
push
stos
data16
jo
into
mov
or
jmp
push
mov
xorb
xchg
in
aaa
mov
cmp
inc
or
xorb
fcompl
jle
cld
aaa
divl
adcl
xchg
cmc
pop
jnp
pop
mov
scas
cltd
test
mov
ret
fiadds
icebp
js
xchg
xchg
push
fsubl
decb
dec
cs
xchg
cmp
dec
popf
or
in
dec
loopne
dec
pop
mov
xor
insl
sub
adc
xor
pop
daa
dec
fstpl
fildll
push
dec
imul
sbb
lret
stc
inc
stc
add
sbb
dec
add
xor
imul
mov
and
xchg
lret
inc
dec
pushl
push
pop
xor
jg
mulb
out
mov
mov
loop
fxch
ffreep
mov
sub
jno
lods
ds
or
cmp
xchg
test
xor
pop
jns
pop
add
sarl
fs
decb
dec
cwtl
mov
mov
sub
xchg
loop
push
mov
sbb
xchg
mov
add
pop
pushf
jns
lret
inc
and
xchg
cs
movsb
cwtl
pop
mov
push
mov
push
mov
imul
stos
mov
pop
imul
or
fsts
sbb
incb
lds
pushf
test
vdivpd
inc
es
iret
mov
and
fcmovnb
sub
xchg
nop
imul
out
out
mov
hlt
insb
cs
lds
or
orb
xchg
fucom
and
mov
inc
cmp
fiaddl
jbe
or
mov
and
add
lods
mov
lahf
jae
insl
fwait
into
mov
in
lods
arpl
sub
inc
ds
cmp
into
mov
xor
inc
adc
sub
popa
or
mov
das
stos
in
jl
dec
int
in
pop
mov
stos
sti
sbb
fmul
sbb
call
sarb
sub
mov
push
cltd
icebp
cmp
fimull
xor
xchg
mov
mov
loopne
jp
and
mov
test
xchg
jmp
xchg
iret
jne
data16
out
scas
mov
adc
add
cwtl
jl
xchg
or
cmpsl
or
jge
enter
sub
push
add
test
add
decl
js
dec
sbb
mov
sub
mov
dec
mov
mov
std
fistpll
add
or
aaa
daa
xor
adc
xchg
icebp
fwait
xchg
fs
inc
xchg
int3
rorb
aad
incl
cmp
sub
loope
fnsave
ret
sarb
adc
ja
add
inc
divb
add
jns
inc
or
cld
das
push
jbe
rcl
cmp
jno
idivl
aaa
fiadds
inc
push
hlt
movsl
outsl
pop
loope
in
jno
bound
mov
fnstsw
mov
bound
pop
enter
mov
xchg
pop
mov
inc
jae
sarb
mov
inc
iret
mov
dec
fmuls
in
fisubrl
cmp
pop
ljmp
mov
or
xacquire
xchg
mov
enter
mov
jae
or
or
or
dec
xor
sub
mov
mov
std
push
bnd
testb
out
out
pushl
cmp
pop
lds
cld
mov
outsb
mov
cmp
xchg
push
pop
adc
scas
adc
sbb
nop
xchg
mov
sub
nop
mov
ret
cmp
pop
mov
adc
dec
sbb
push
cs
movsb
popa
mov
ret
icebp
mov
iret
enter
and
into
dec
push
test
lcall
test
into
jno
dec
mov
pop
sar
xchg
mov
adc
decl
subb
fwait
mov
sbb
addr16
test
xchg
stos
loope
in
inc
cli
cli
add
daa
mov
xor
les
dec
icebp
lock
into
sub
nop
mov
mov
mov
xchg
sbb
mov
sub
and
push
push
and
push
in
inc
adc
cmp
lcall
insb
ret
fs
pop
xchg
gs
pop
enter
mov
das
push
jge
jb
dec
add
cwtl
dec
push
pusha
aas
jge
in
push
mov
cmp
inc
add
cwtl
mov
pop
xlat
cmp
es
outsb
scas
jno
sub
mov
adc
or
add
sti
mov
jmp
out
cmp
sbb
jl
clc
pop
mov
sub
bound
inc
push
arpl
cmp
mov
sbb
push
cld
mov
mov
in
push
sbb
mov
mov
stc
cmpsb
cmp
dec
mov
call
xchg
dec
iret
rolb
push
sti
adc
push
mov
cmp
aas
mov
jp
leave
aas
xor
daa
popa
mov
jne
pop
push
push
gs
sub
mov
movsb
sbb
scas
jb
pop
push
and
pop
pop
xchg
daa
mov
insb
imul
pop
pop
jo
iret
mov
push
iret
outsl
lods
jle
inc
mov
jnp
arpl
outsb
in
mov
mov
cmc
add
adc
jge
adc
outsl
mov
pop
mov
xchg
xor
add
loop
arpl
push
fcmovnb
cmpsb
daa
push
fiaddl
arpl
sti
push
sti
sahf
or
stos
data16
lret
xlat
pop
sbbl
pop
sbb
adc
rcrl
aad
fwait
or
add
sbb
lods
les
xchg
movsb
test
jmp
pop
cltd
dec
ja
lea
adc
mov
gs
xchg
leave
and
sbbb
fwait
mov
add
rcr
popf
jecxz
xor
xchg
push
lds
mov
mov
ret
insb
or
lahf
pop
jne
add
or
and
fnsave
dec
push
inc
popa
test
and
ret
por
or
cmp
mov
xchg
call
aaa
push
push
mov
icebp
push
lcall
out
imull
nop
fwait
xlat
movl
idivb
inc
mov
pushl
popf
mov
mov
sti
adc
ja
inc
cmp
shll
mov
mov
shll
cli
iret
idivb
outsb
popf
cmpl
sbb
add
aad
xchg
test
sbb
inc
sbb
lahf
inc
mov
jecxz
outsl
xor
push
jle
add
add
sub
dec
outsb
inc
leave
fiaddl
in
jo
push
push
scas
ficompl
push
fsubs
loope
inc
add
pop
mov
fildll
daa
push
unpckhps
out
jp
roll
add
clc
and
and
stos
mov
adc
mov
pop
cs
mull
lods
arpl
push
and
sub
cli
cmp
fsubl
rcr
icebp
jg
push
icebp
in
jge
or
push
cmp
call
pop
sbb
push
or
aam
repz
inc
in
clc
pop
adc
jne
dec
shr
rcl
mov
push
jbe
and
out
xchg
sbb
cmp
sti
sub
int3
cli
out
fsubl
xor
pusha
lea
sub
mov
inc
les
hlt
sub
or
add
or
out
mov
cli
icebp
sahf
fst
test
ljmp
leave
xchg
and
repnz
push
sarl
mov
loopne
cmpb
push
mov
ljmp
mov
xchg
push
add
cmpsb
mov
pop
xlat
popf
inc
aam
loope
add
mov
pop
sbb
or
clc
pushf
sbb
test
out
decl
outsl
addr16
mov
fwait
or
stos
mov
dec
or
into
out
in
xchg
popf
cmp
nop
adc
and
pushf
adc
loop
into
inc
scas
mov
fisttpll
outsl
aas
or
or
or
shrl
mov
dec
imul
fcompl
jns
gs
xchg
test
cmp
mov
adc
sbb
sub
inc
dec
movsl
fwait
cmc
xor
mov
sub
enter
xchg
push
aam
es
loopne
mov
mov
mov
andl
lcall
mov
popf
shrb
dec
pop
lret
stos
mov
mov
pop
push
lcall
out
fstl
cmp
xor
cmpsb
test
les
mov
add
sbbl
xor
test
shlb
test
pop
sahf
bound
sub
jecxz
leave
pop
call
push
adc
ds
out
test
insb
add
testb
bnd
pop
xor
adc
filds
mov
mov
push
movsl
dec
and
push
and
fstps
aaa
daa
dec
pop
sbb
or
adc
add
jmp
adc
lea
mov
sub
jmp
xchg
jb
adc
decb
mov
sarb
mulps
push
pushf
imul
inc
imul
stc
aam
push
shrl
pop
and
movsb
jmp
lea
call
sub
pop
not
jge
mov
adc
jb
push
and
mov
sbb
rcrb
lods
mov
inc
or
shl
xchg
sti
xor
mov
mov
adc
xlat
ret
cmp
and
fstps
xor
mov
ds
aaa
sbb
icebp
lahf
insl
xlat
cmc
add
hlt
xor
lock
jbe
xchg
jl
stos
or
arpl
icebp
add
mov
mov
push
mov
lds
xchg
and
sub
cmc
pop
mov
sub
outsl
cmp
repz
movsb
or
mov
xchg
jp
inc
or
cs
xor
dec
push
ds
lcall
cmpsb
popf
add
adc
iret
xchg
xchg
cwtl
mov
movsb
les
or
cmp
fistpll
stos
jae
in
mov
pop
jnp
scas
les
xor
aas
jb
std
lahf
mov
xchg
cmp
and
and
sub
cmpsl
or
mov
add
dec
out
cmp
js
push
and
fwait
cmpsl
pusha
dec
iret
xor
popa
xor
pushf
nop
dec
rclb
sub
addb
cld
inc
in
aas
mov
in
inc
xor
icebp
pop
pop
iret
pop
inc
lahf
dec
lds
dec
mov
jl
jecxz
sub
cs
adc
sbb
fldt
xchg
cmp
pop
push
sub
mov
mov
adc
or
lahf
cmp
dec
mov
lods
loop
or
pop
mov
pop
dec
mov
jl
int
mov
sub
fiaddl
test
or
jb
jns
and
mov
cld
xchg
sub
add
and
sarl
push
shlb
test
movsl
push
mov
sub
mov
aam
push
or
xchg
shlb
testb
mov
lcall
push
pop
push
cmp
pop
fdivrs
mov
jmp
xchg
insb
fisubl
scas
sbb
mov
or
sub
cmc
push
sub
mov
pop
jle
sub
std
pop
jmp
mov
pop
pop
jp
mov
dec
cwtl
fs
popa
pop
lock
outsl
sub
jae
adc
lahf
xchg
push
or
out
mov
or
clc
xchg
mov
sbb
loop
jmp
jl
xchg
test
mov
mov
mov
pop
orl
dec
inc
outsb
adc
cmp
mov
sbb
push
adc
cwtl
mov
cmp
mov
ljmp
int3
and
std
js,pt
and
mov
lret
pop
cwtl
nop
mov
mov
or
xor
cltd
sti
dec
in
jo
or
fistpll
aad
jge
mov
inc
fstps
cli
push
jge
mov
les
fidivs
ss
sbb
jmp
xchg
sbb
div
out
fisubs
fsubs
or
sbb
or
movsl
pop
cltd
call
ds
fistpll
cltd
repnz
jne
jle
mov
fsts
scas
or
mov
test
xchg
mov
xchg
cwtl
fstpt
mov
inc
push
jp
lret
out
stos
mov
test
gs
int
xorb
xor
aad
insl
xchg
popf
mov
leave
jne
mov
inc
sbb
sbb
imul
add
sub
nop
xchg
mov
cs
pop
mov
mov
sahf
pop
jle
imul
jecxz
xorb
rolb
popf
out
inc
xchg
mov
sbb
test
sbb
daa
es
adc
lret
dec
dec
xchg
js
inc
mov
inc
cmp
cli
or
js
imul
adc
cmpsl
add
movsl
mov
bound
vmovaps
or
adc
lret
sub
push
cmp
jae
sub
cmp
push
rcrb
imul
rcll
push
sbb
shl
cmp
addr16
cmp
aam
push
fstps
ret
loop
jg
lock
insl
rolb
ljmp
jg
lcall
sub
outsl
repz
test
sarb
inc
sbb
or
inc
fisubrs
push
add
jg
mov
fstpl
in
hlt
jecxz
daa
gs
iret
aam
push
or
scas
shlb
mov
adcl
sbb
ljmp
out
rorl
lods
test
xor
inc
sarb
sub
cmp
and
mov
addr16
adc
push
int3
sbb
push
xchg
mov
into
dec
lcall
out
xlat
inc
ret
mov
mov
mov
inc
sub
sarb
aaa
dec
pop
mov
dec
data16
lret
cmp
mov
or
push
cld
mov
clc
test
in
lods
mov
and
sti
popf
movb
ljmp
mov
hlt
xchg
outsb
dec
mov
jnp
jae
xchg
push
xorb
push
out
adc
jp
iret
std
div
lret
js
insb
movsl
mov
pop
pusha
pop
dec
xchg
sti
push
in
mov
ja
addr16
jno
scas
arpl
sub
aad
push
jns
sahf
or
lods
jbe
rcll
push
and
in
push
sbb
push
fcoml
in
pop
pop
rcll
or
outsl
mov
push
xor
mov
les
push
fwait
outsl
mov
orl
and
fimull
fisttpll
jle
dec
adc
fisttpll
mov
repz
push
jne
inc
lds
sahf
xchg
lret
pop
jb
inc
push
jo
in
sbb
sbb
mov
shrb
mov
adc
aam
lods
or
add
mov
insb
lahf
scas
rcrl
lahf
push
cmp
lods
sti
rorl
pushf
out
jl
jmp
and
sarl
out
xchg
lcall
in
cltd
cmp
cmpsl
cmpsb
cmp
ds
push
push
fldt
or
adc
mov
pusha
out
push
push
push
enter
cmc
loop
ja
lcall
out
lcall
pusha
push
addr16
or
shll
push
push
sbb
xor
test
lods
repz
adc
lret
and
sbb
stc
ja
jle
lahf
mov
dec
lea
arpl
stos
xor
push
clc
lcall
scas
fildl
add
jae
jmp
pop
push
lcall
loope
or
mov
stc
js
fidivs
cwtl
push
xchg
inc
jbe
sub
cmp
pusha
mov
xor
jbe
data16
adc
inc
mov
push
mov
scas
loop
jo
xchg
stos
cmp
and
addb
shr
int3
push
sub
push
rolb
mov
mov
popf
outsl
and
sti
push
out
outsb
add
mov
insb
adc
fists
or
cltd
cmp
fcompl
ret
popa
sahf
ret
into
adcl
mov
jmp
gs
rcll
lret
shll
dec
popl
pop
dec
pop
call
adc
sahf
push
mov
in
sub
in
mov
adc
pop
xchg
imul
mov
sub
enter
or
push
je
es
shrl
sti
jo
mov
in
std
nop
jg
hlt
lock
bound
cltd
repz
add
movq
std
and
ret
lcall
dec
int3
mov
popa
cmp
mov
mov
out
incb
inc
leave
outsb
dec
xorb
mov
and
out
jg
adc
insl
add
pop
dec
stos
adc
jmp
add
jae
fsubs
or
fistl
adc
push
dec
xchg
into
cmc
into
outsl
cld
xor
out
jb
jle
fnsave
aas
fneni(8087
jo
jle
dec
ljmp
rcrl
hlt
adc
push
dec
inc
xchg
ljmp
xchg
jg
pop
mov
out
sbb
push
fisubrs
push
inc
outsb
imul
lret
jmp
popa
mov
sbb
fld
ljmp
adcl
add
add
xor
shlb
roll
int3
cmc
leave
and
cs
push
gs
movsl
stc
fs
mov
in
push
or
daa
insl
cmpsl
push
cli
test
movb
shrd
movsb
cwtl
jmp
call
mov
xor
popf
xchg
mov
pop
stos
add
iret
dec
sti
fists
fsubrp
int3
mov
adc
pop
loopne
fldcw
dec
loopne
movsl
rolb
push
popl
fdivrs
mov
fiadds
adc
sub
and
and
inc
in
in
sub
pop
push
adc
or
aas
rol
push
leave
inc
enter
shrl
hlt
lretw
mov
iret
insb
stc
mov
and
fildll
dec
dec
cmc
lret
jmp
pop
iret
std
add
and
dec
xchg
mov
cmp
xchg
inc
push
push
enter
call
shll
add
insl
xchg
sbb
ds
shll
mov
add
xchg
mov
cmpsl
std
jbe
jbe
dec
sub
cs
xchg
pop
add
adc
scas
push
inc
mov
pop
popf
pop
cwtl
cmp
ja
jp
push
push
sub
push
cmc
xchg
stos
mov
ror
dec
pop
js
jbe
js
aad
pop
inc
pop
xchg
jo
out
mov
pop
sub
cmp
iret
cwtl
sbbb
cld
mov
fsts
jb
adc
push
loope
lds
or
or
jge
fimuls
movsb
cmpsl
sti
lret
cmp
push
pop
dec
int
jns
into
sbb
pop
inc
loopne
sbb
or
jns
imul
cli
mov
jmp
rol
mov
sbb
and
adc
lea
push
mov
mov
push
adc
pop
mov
jl
adc
lahf
mov
das
nop
psubq
into
fistl
xor
inc
gs
cwtl
push
rorl
pushf
push
jnp
sub
clc
sbb
add
aam
pop
fcoml
cmc
fs
enter
int
arpl
and
add
mov
ret
xchg
fwait
mov
or
jo
pop
sbb
mov
into
or
xorl
shrb
arpl
cmpsl
loop
mov
cmc
int
je
ljmp
loopne
stos
in
mov
test
cmp
xor
dec
in
mov
ljmp
iret
and
mov
nop
lods
pusha
lock
mov
decb
sarb
jmp
jne
or
mov
cld
int3
jne
sub
ss
out
lcall
mov
sub
jl
adc
sub
inc
mov
inc
push
adc
daa
mov
lods
scas
lods
std
xchg
lods
pop
adc
adc
adc
enter
mov
testb
mov
and
ret
subb
pop
loop
imul
mov
ljmp
pop
mov
xor
cmp
movsw
cmp
xchg
sub
inc
pop
inc
lret
push
cmp
dec
std
icebp
sub
or
mov
int3
mov
shlb
dec
cltd
adc
fidivs
mov
dec
cs
addr16
jns
sub
inc
xor
in
int
ljmp
aad
xorl
cmp
std
js
cmpsb
and
inc
cmp
not
movsl
push
pop
xchg
or
jmp
cmp
insl
jecxz
aaa
sub
mov
aaa
xchg
fsubr
adc
mov
call
int3
nop
std
inc
test
jge
dec
lcall
mov
dec
lret
inc
add
imul
test
sub
push
clc
fsts
jns
jle
jp
pop
push
lods
ljmp
mov
jmp
jb
add
and
mov
stos
addr16
dec
jno
ja
pop
cmp
xchg
add
mov
in
clc
push
jmp
xchg
xchg
stc
sbb
fistpl
in
je
mov
jmp
or
xor
fcomip
loop
or
pop
jnp
pop
mov
lds
mov
inc
xchg
int
test
mov
xchg
repz
aam
into
scas
fbstp
add
lods
es
jecxz
add
out
ficoml
jmp
jecxz
loope
jmp
sbb
es
adc
enter
cmp
out
rcll
push
or
rcr
inc
mov
outsl
mov
ljmp
sub
in
jne
xchg
pusha
sub
xchg
fnstsw
jp
stc
inc
shlb
sbb
and
inc
imul
push
ds
add
jle
lds
push
jo
pop
lock
mov
and
xor
xchg
dec
ss
and
xchg
enter
or
iret
xchg
jl
mov
mov
cmpsb
icebp
mov
lret
ret
cmp
adc
xor
cmpsl
adc
mov
sarl
push
outsb
mov
pop
sar
mov
in
jmp
jne
hsubpd
and
mov
cmp
stos
sub
int
sbb
shlb
and
pop
jo
fs
inc
leave
les
cmpsl
sbb
lods
dec
sbb
fidivrl
jo
dec
fcmovne
sub
ljmp
dec
in
out
pop
jb
pushf
mov
rorl
ja
sti
leave
iret
out
inc
cmc
cmp
add
push
nop
mov
push
mov
or
les
add
fnstcw
pop
insl
mov
xlat
sbb
scas
mov
pop
push
push
mov
ss
gs
or
insl
inc
fsubs
inc
mov
in
xchg
or
add
stos
cmp
pop
sub
xor
adc
jge
xor
out
jbe
sbb
je
jns
push
movsb
mov
or
aam
mov
inc
sbb
icebp
sub
xchg
ja
jmp
sub
jp
shll
jae
mov
sahf
insl
mov
hlt
push
gs
and
fstps
fs
xchg
cmpsb
stos
mov
inc
cmp
pusha
ds
cmovo
dec
out
lods
cli
sub
push
push
imul
sahf
dec
xchg
push
sub
xchg
and
mov
rcll
call
mov
jl
mov
pop
movsb
and
sahf
inc
shrb
push
mov
jo
pop
imul
cmp
inc
and
rolb
imul
mov
out
pop
pop
pusha
add
ret
ds
and
push
sub
mov
das
imul
pusha
pushf
clc
shrb
ljmp
xchg
ljmp
sar
sbb
shl
mov
frstor
dec
xor
cmp
push
lret
fwait
pop
inc
sti
xor
add
stos
cmp
scas
inc
std
lahf
sub
jno
mov
xor
push
xchg
outsl
call
pop
fs
arpl
jg
mov
and
sub
jns
popa
mov
jbe
arpl
enter
cs
testl
lret
mov
sbb
mov
push
fsubr
or
cmp
pop
pusha
push
sub
xchg
shll
mov
ret
cmp
in
xchg
sahf
data16
dec
loope
xchg
andl
cmp
out
mov
sub
dec
dec
loop
dec
mov
jge
mov
mov
lcall
dec
xchg
call
pop
jo
mov
sub
mov
stos
mov
sti
cld
icebp
mov
xchg
mov
mov
ja
push
imul
pop
xor
sbb
fists
shll
test
mov
dec
sahf
mov
clc
call
leave
rcl
movsl
or
mov
pop
mov
sbb
cmp
cmp
iret
fidivl
sti
scas
xchg
add
jmp
xchg
jge
ljmp
popl
and
in
dec
xchg
jl
rcr
pop
cltd
and
dec
in
lods
pop
aaa
dec
push
mov
testl
and
inc
aad
pusha
clc
xor
push
push
idiv
pop
shlb
mov
dec
shrl
cmp
mov
imul
mov
fisubrs
lcall
add
sahf
fbld
inc
cmp
decb
jecxz
xchg
adc
daa
jnp
std
sub
and
clc
jnp
adc
pop
std
inc
mov
add
pop
cmp
movl
mov
xchg
lahf
fstps
pop
out
test
sti
cmp
xor
dec
mov
ss
fnstsw
add
and
iret
shl
jnp
fsin
inc
loop
push
xor
pop
add
adc
ja
das
mov
out
push
into
das
dec
sub
rol
xchg
sub
aas
mov
imul
cmpsb
adc
jne
fsubrl
xor
cld
add
inc
inc
mov
je
jg
outsb
ljmp
int3
aad
fstpl
cmp
sbb
push
test
jne
gs
mov
cs
aaa
fsin
mov
xchg
fsubp
cmp
sar
jecxz
sub
xchg
and
cltd
adc
stos
ja
dec
jle
std
jl
and
lcall
mov
mov
incb
dec
cs
lret
push
jo
inc
xor
imul
leave
pop
lods
or
push
outsl
mov
push
pop
sub
fiaddl
pop
xor
sbb
xorl
sub
imul
aam
adcb
pusha
xchg
into
sbb
es
jl
scas
mov
mov
andl
sub
pop
push
sub
lret
cmpsb
scas
xlat
add
cli
fsts
adc
lahf
adc
mov
adc
loop
daa
push
cmp
mov
jnp
jp
nop
pop
inc
xchg
es
loope
xor
sub
sub
mov
ret
iret
data16
pop
rcrl
mov
dec
push
jl
dec
sbb
movsl
mov
jle
in
adc
or
and
pop
dec
dec
shrl
xlat
loop
jg
lods
testl
sub
mov
mov
aad
push
xchg
pop
scas
or
js
rcl
inc
mov
jo
or
cli
sub
cld
inc
push
adc
imul
pop
loopne
sbbl
xor
jl
in
xchg
movb
sbb
dec
xor
sbbl
dec
hlt
mulb
movsb
xor
adc
mov
add
cmc
add
jl
je
loop
mov
jbe
jb
call
movsb
popa
movsb
aam
hlt
dec
jbe
in
insb
pop
sub
mov
scas
or
data16
jg
push
lods
and
fisttpll
pop
jl
jle
popa
mov
ret
ret
notb
xchg
insl
loope
sub
mov
das
lret
push
std
test
adc
push
outsb
jae
xchg
sub
jecxz
rorb
push
add
pop
ffreep
mov
or
clc
gs
or
dec
mov
jl
xorb
mov
sbb
lock
das
shlb
jae
and
jbe
stos
in
xlat
repnz
xor
outsb
dec
in
mov
jb
imul
and
int
in
shlb
sarb
sub
jecxz
push
mov
ja
push
adc
inc
dec
scas
sub
out
cmpsl
pop
pushf
adcb
lods
adc
mov
and
pop
inc
dec
xchg
pop
fidivs
jg
or
daa
shrb
adc
gs
cmp
mov
call
pop
fadds
nop
cmp
rolb
mov
push
xchg
mov
stos
dec
into
add
pop
jnp
sub
fidivrl
imul
sbb
lea
les
or
enter
jbe
push
rcl
inc
mov
pop
pushf
xchg
cmc
mov
xchg
mov
or
lret
inc
add
cmc
fs
outsb
and
cmp
adc
pop
jmp
leave
pop
lret
lret
stos
sbb
adc
mov
dec
add
js
lods
aaa
je
das
cmp
popf
out
sub
fldlg2
and
cmp
adc
lret
out
jl
pushf
cmpsl
jb
fbstp
das
xchg
xchg
repnz
add
lods
adcl
jecxz
dec
jecxz
cltd
pop
dec
pop
xor
xchg
inc
pop
sub
lea
sbb
in
mov
sub
frstor
dec
lret
aaa
test
push
data16
or
scas
repz
xor
loope
fisubrl
cmp
out
ds
xor
je
mov
dec
jl
sbb
push
frstor
push
test
adc
pop
xchg
mov
add
and
aas
pop
xchg
sub
jne
mov
jb
mov
insb
and
out
pop
test
mov
subl
sub
lahf
push
xchg
or
mov
call
ja
sahf
cmp
mov
jle
push
sbb
mov
jae
sub
mov
rclb
insl
jl
outsl
and
sbb
xor
push
mov
lahf
push
xor
popa
or
int
cwtl
and
and
xor
push
daa
sbb
xor
mov
pop
dec
nop
inc
and
push
sarl
movsb
mov
fisubs
shrl
pushl
add
cmp
xchg
call
sbb
cmp
mov
std
mov
call
push
jae
jne
out
insl
cs
fs
push
xchg
sub
cli
add
cmpsl
push
fdivs
lret
dec
dec
inc
pop
cmp
sbb
mov
add
test
sub
push
cmp
jle
xor
jne
mov
adc
mov
fbld
jne
or
and
fnstcw
jge
gs
or
loop
dec
sub
in
int
cmp
enter
or
sbb
or
adc
jbe
pop
inc
mov
test
iret
sahf
popf
sub
les
jns
es
xor
jmp
andb
xchg
dec
mov
jae
popa
mov
sahf
cmp
jle
sub
mov
sbb
jecxz
insb
fcoms
xor
inc
dec
xor
fwait
jnp
int
insb
lods
test
jns
cld
xchg
cli
fs
cmp
xor
rep
dec
xchg
cmpsl
push
cmc
cmpsl
or
mov
jae
loope
cmp
dec
jl
and
mov
jg
sbb
inc
jle
mov
js
ds
add
push
cld
loopne
sarl
jns
ffreep
sub
jae
xor
lods
dec
lods
jns
mov
ljmp
pop
ja
daa
outsb
andl
jge
xor
dec
mov
xor
sbb
and
in
cmp
pop
rcl
dec
push
xchg
int3
adc
jb
fstl
loopne
fldl
mov
gs
pushaw
ficoml
mov
xor
aam
push
leave
outsb
sbb
push
hlt
jbe
fcmovb
add
jo
hlt
sti
dec
jge
lahf
mov
in
and
inc
sbb
test
ret
aam
inc
out
fiaddl
out
xchg
mov
outsb
std
mov
push
adc
add
inc
dec
bnd
hlt
lcall
mov
sub
outsl
divl
or
jle
movsb
pop
mov
push
aad
jl
inc
fimull
or
mov
lods
inc
add
ret
inc
mov
stc
mov
sbb
pop
add
mov
xchg
mov
sbb
jmp
inc
inc
shlb
or
sbb
mov
gs
insb
or
cmpsl
add
xor
leave
flds
sahf
cmpsl
sar
xchg
mov
add
dec
mov
pusha
jno
jge
sub
cltd
aam
jno
in
lret
mov
lock
jae
pop
or
or
aaa
insb
pushf
lds
xor
push
out
and
mov
cmpsb
imul
mov
push
jbe
inc
jmp
pop
adc
js
push
adc
or
pop
sub
push
sbb
sbb
jno
stos
pop
pop
mov
repz
inc
mov
xchg
outsl
pop
scas
leave
jecxz
mov
mov
mov
orl
add
fdivl
jns
out
bound
push
add
jge
inc
sbb
out
divb
push
jb
add
jl
imul
sub
mov
add
sub
cmp
sbb
dec
add
outsb
fsub
dec
dec
jge
mov
cmp
loop
clc
inc
sbb
test
lcall
xchg
aam
insb
sbb
sarb
aas
stos
scas
dec
mov
push
test
xchg
in
test
jns
shll
or
scas
ljmp
fbstp
dec
loope
icebp
xchg
leave
pop
mov
pop
mov
jmp
inc
idivb
movsl
push
mov
outsl
fwait
cmpsb
hlt
js
adc
adc
out
fildl
xchg
stc
popf
in
rcrb
and
leave
fwait
and
stc
adc
popf
mov
fwait
sub
inc
testl
out
lods
test
sub
jle
jbe
and
xchg
int
jbe
sbb
or
xor
sti
out
cmpsl
sbb
xchg
nop
pop
xor
inc
pop
out
jg
sbb
or
outsl
xchg
ljmp
xchg
xchg
cmpsl
inc
add
jmp
pop
inc
insb
inc
adc
repz
dec
movsl
sub
ljmp
call
push
xor
xor
and
pop
push
hlt
add
xor
gs
and
cld
inc
test
jbe
cvtps2pd
xor
out
and
into
push
mov
sahf
xlat
js
outsl
and
shlb
gs
inc
push
lret
sub
lahf
imul
ror
repnz
inc
push
push
mov
push
jb
ret
cmp
clc
xchg
and
fildl
sbb
jae
mov
push
xchg
mov
jp
repz
cli
pop
popf
je
rcpps
jecxz
xchg
mov
jno
cwtl
or
xchg
gs
mov
jae
sbb
int
outsb
test
rcrl
xchg
dec
cs
jb
jmp
pop
mov
dec
jmp
fneni(8087
xor
pop
test
mov
sub
inc
mov
int
js
xchg
xchg
xor
mov
roll
push
and
loop
pushf
mov
rcr
fdivs
iret
imul
out
movsb
xchg
fwait
pop
sub
adc
adc
jne
mov
movsl
jecxz
dec
cmc
in
and
icebp
scas
mov
cmp
cmpsb
jle
cltd
fstpl
jecxz
aad
sbb
das
cmpb
mov
pop
pushf
or
add
inc
pop
in
out
jae
xchg
xor
insb
add
fwait
xchg
cs
xchg
mov
jp
or
and
sub
jge
jl
inc
iret
mov
jne
addb
or
aad
jle
ljmp
fisubrl
inc
sub
je
rcrb
sub
and
xlat
add
loope
adc
xchg
outsl
jbe
scas
aad
stc
mov
dec
imul
inc
add
aad
inc
dec
int
dec
xlat
push
mov
or
out
mov
dec
hlt
mov
pop
cmp
cmp
xchg
xor
push
xor
xchg
jg
lea
inc
pusha
jle
int
jne
mov
ret
inc
dec
testl
out
outsl
xor
fldl
jle
loope
mov
xchg
sub
add
int
sbb
movsl
adc
or
jp
cld
mov
xchg
add
mov
dec
imul
sub
push
int
xchg
fnstsw
ja
mulb
fstpl
mov
xlat
gs
jno
cmpsl
vpcmpeqd
sbb
or
dec
jmp
xorb
mov
sbb
std
and
mov
inc
cs
sarb
lahf
xchg
in
adcl
cmp
cmp
imul
mov
jo
std
hlt
ss
inc
imul
pop
inc
add
es
dec
mov
shll
fs
inc
lock
filds
bound
cmc
loop
fdivr
lds
push
ds
dec
loop
cld
rolb
repz
mov
sub
icebp
mov
inc
lods
mov
jecxz
ja
outsl
mov
cmp
xchg
ss
scas
xchg
mov
test
push
mov
arpl
xor
shrl
mov
ja
inc
jle
inc
push
mov
call
sub
jno
int
mov
inc
test
jae
cmp
icebp
jo
inc
ljmp
out
push
ret
fnstcw
ffree
sub
pusha
push
dec
xor
xor
fidivl
adc
daa
cmc
lock
mov
or
jns
pop
mov
fdivrp
cmpsl
je
push
pop
adc
div
ja
mov
outsl
movsl
jmp
int3
ret
shrl
and
pusha
adc
lds
lods
xchg
push
stos
pop
mov
js
cmp
into
jne
aad
in
jb
add
scas
repz
adc
clc
and
sbb
push
jnp
mov
pop
jg
movsb
adc
push
ds
pop
cmp
out
pop
jl
push
and
xchg
add
xchg
ljmp
mov
in
out
adc
inc
movsl
or
fidivl
pop
and
divb
popf
dec
bound
push
es
cmp
jnp
push
or
in
filds
cmpsl
jnp
push
dec
sbb
jle
mov
cmp
pop
cmpsb
in
push
add
jle
daa
jae
cmp
cmp
push
je
cmp
loop
push
popl
es
sub
pop
mov
sub
daa
test
jns
sub
stc
mov
cmp
call
mov
aad
bound
inc
xchg
mov
pop
push
loopne
outsl
push
fcoms
sub
pop
lea
ss
mov
lea
jmp
jo
loopne
sbb
into
push
mov
gs
int
scas
mov
sbbl
fidivs
add
add
jle
add
and
fcompl
loop,pt
jp
mov
sub
lds
rorb
or
stc
xchg
fnsave
aad
dec
dec
dec
xchg
arpl
shl
sahf
jb
xor
out
cmp
iret
stos
or
icebp
mov
out
loope
xor
xlat
dec
call
pop
or
xor
mov
mov
pop
mov
ret
jmp
and
xchg
dec
repnz
shrb
push
iret
jbe
jns
mov
insl
pop
shlb
xor
ret
add
test
aad
pushf
bound
aad
or
xchg
xchg
int
adc
xor
arpl
pushf
adcb
xchg
addr16
cmp
outsl
xor
jns
cmpb
mov
sub
pop
sub
dec
adc
sub
mov
pop
pop
add
sub
dec
daa
xchg
cmp
sub
mov
daa
xchg
mov
sub
jbe
push
push
scas
lcall
lods
mov
add
pop
mov
add
stos
sub
pop
push
cmp
jg
or
jmp
jae
movsb
mov
pop
aad
in
out
xchg
std
cmp
aam
cmp
xchg
jp
push
jle
or
cli
cmp
pop
xchg
stc
xchg
jmp
les
xchg
and
sahf
pop
jns
adc
sub
repnz
out
sub
stos
cmp
lcall
rclb
cmp
lods
push
lret
xchg
or
enter
and
fadds
arpl
cmp
pop
into
aaa
xchg
dec
rclb
test
add
push
adc
inc
rcl
or
stc
cltd
adc
jne
loope
xor
fcompl
imul
negb
sbb
test
out
out
sahf
cmp
xchg
jbe
push
jp
and
popf
out
test
in
arpl
rcrl
jae
push
mov
sub
jbe
fsubs
pop
paddq
jecxz
in
jecxz
out
xchg
and
clc
mov
push
loopne
into
lret
jno
lock
mov
jno
mov
lock
inc
imul
stos
sbb
push
popa
popa
pop
mov
push
rcll
mov
aam
sub
ss
push
outsl
lock
test
or
xor
jno
int
push
or
jno
adc
orl
sub
jmp
pop
mov
add
jg
adc
js
je
dec
xor
adc
sbb
das
jbe
push
sbb
mov
insb
cmc
or
sbb
in
mov
dec
xchg
fnsave
cwtl
aad
repnz
pop
out
inc
aad
in
mov
dec
out
dec
sub
fadd
lret
jl
sbb
lcall
push
xor
fdivp
or
in
sbb
mov
or
sub
sbb
pusha
lods
lahf
cmp
cltd
jecxz
loope
mov
lods
fisubrs
push
mov
mov
mov
repnz
xchg
sbb
pop
xchg
jge
ss
and
ds
push
les
xchg
cmp
add
sbb
shll
mov
int
cmp
decl
rcrb
fisubl
fld
adc
push
sbb
xor
pop
addr16
inc
jae
js
test
mov
popf
pushf
jecxz
mov
rcrl
outsb
outsl
cmp
js
loope
fcomi
adc
mov
xchg
add
xor
xchg
mov
cmp
in
test
ss
inc
xor
insl
jnp
popf
rolb
shr
mov
jbe
inc
push
clc
aaa
scas
nop
mov
or
sub
jle
aad
mov
sbb
and
mov
insb
fadd
dec
or
jmp
inc
mov
fdivrl
mov
xchg
push
insl
lcall
lods
xor
hlt
enter
arpl
arpl
cld
xchg
es
mov
jp
push
sarb
rcl
mov
mov
mov
in
rorb
or
sbb
in
das
std
ljmp
stc
push
mov
stos
mov
xchg
loopne
in
and
mov
std
stc
out
outsb
cmpsl
jg
ss
pop
add
or
mov
daa
call
jg
lods
fcoml
xlat
in
aaa
aad
aaa
gs
lds
int3
es
mov
mov
out
nop
sbb
fs
mov
cwtl
jmp
sti
in
xchg
or
out
repz
or
pop
cmp
arpl
outsl
jp
insb
inc
sbb
xchg
cmp
pop
dec
jo
cmp
push
mov
mov
push
fdivs
jmp
fistps
enter
not
ss
xor
push
loopne
inc
mov
ret
in
mov
rolb
cmpsb
lcall
dec
sahf
jns
mov
inc
lods
sub
mov
or
stc
js
lock
cli
out
mov
xor
addr16
pop
hlt
cmp
add
push
ss
test
aam
les
pop
jae
and
and
jae,pt
inc
jo
lods
repnz
push
lret
call
ss
and
in
cmp
ficoms
sbb
ret
adc
test
lods
movsl
std
loope
mov
jecxz
in
in
xor
or
add
dec
loopne
ds
pusha
ret
int3
mov
sbb
mov
test
mov
jo
iret
sbb
fsubr
sbb
mov
and
jp
lods
push
push
movsb
cmpsl
mov
push
add
pop
pop
das
loop
push
and
das
shrb
push
mov
push
fisttpll
jmp
push
jmp
push
dec
fildll
jp
shll
ret
rcll
sub
ss
or
xlat
jb
mov
mov
daa
outsl
add
xor
inc
xchg
mov
nop
insb
push
iret
jo
insl
or
push
aad
xor
ss
cmp
jl
mov
inc
out
lea
cmc
jecxz
shll
scas
sbb
jg
mov
push
fimull
ret
lahf
jae
pop
xor
cmpl
pminub
fldcw
in
xchg
loopne
push
xchg
sub
pop
push
sahf
nop
shrl
outsl
sahf
xchg
add
cmp
dec
cmpsl
or
sbb
icebp
mov
fdivs
push
sbb
stos
sbb
rcrl
sbbb
fcomip
bound
stos
cld
aas
cwtl
xor
mov
sub
aas
adc
sub
push
in
cmp
add
jmp
xor
xor
arpl
and
jae
mov
pusha
dec
cwtl
jecxz
int3
add
jle
cmpsb
stos
dec
or
mov
into
fucom
outsl
dec
dec
pop
xchg
lahf
in
iret
pop
in
mov
sbb
add
lret
pop
add
sub
push
fstl
fidivrs
cmp
inc
pop
pop
out
mov
popf
cmc
xorb
popf
mov
cmpsl
mov
imul
dec
out
inc
jmp
mov
sub
jmp
mov
and
lret
jo
stos
and
shlb
in
rclb
lcall
fldt
mov
leave
mov
pop
jg
andl
fs
imul
pop
call
fs
dec
jns
pop
cmp
push
pop
pushf
inc
or
jle
add
lret
mov
pop
std
dec
aad
ret
mov
mov
cmp
daa
lea
ret
test
jmp
adc
jne
pop
push
xor
xchg
jmp
cmp
inc
mov
xor
sub
cmp
cmp
inc
jmp
dec
test
mov
in
mov
addr16
jns
push
rcr
and
mov
jmp
jae
adc
insb
fimull
es
sbb
cli
roll
test
int3
test
mov
bound
cmp
xchg
adc
clc
cmpsl
aad
dec
adc
adc
lahf
xor
lret
cmc
cld
adc
cmp
cmp
mov
pop
pop
out
xchg
mov
scas
in
movsl
and
mov
data16
mov
mov
xchg
push
fisttpl
pop
mov
adc
mov
cli
jecxz
mov
cmp
aaa
gs
jo
add
mov
add
push
mov
shr
or
mov
jg
sub
and
in
sbb
std
xchg
stos
or
sub
pop
adc
js
push
addr16
lea
mov
orl
mov
lea
push
lods
test
imul
into
xchg
insb
push
dec
popa
inc
adc
ja
sbb
or
xchg
test
addl
out
pop
push
push
ss
es
stc
lcall
loop
mov
stos
jmp
mov
push
mov
or
test
cmp
aam
mov
fbld
dec
push
in
pushf
int3
test
lea
jne
in
fwait
movsb
subb
fists
std
cmp
out
and
lock
fistpl
mov
jl
mov
lret
sbb
lahf
cmpsl
test
out
data16
xlat
or
cmp
js
pop
sbb
mov
popa
mov
dec
jmp
jb
pop
stos
push
mov
ret
or
xlat
xor
test
iret
mov
mov
pop
dec
adc
bound
pop
pop
mov
dec
jb
enter
jg
pop
sub
push
in
jl
in
ljmp
xchg
mov
in
clc
push
movsb
std
test
mov
inc
rcll
fsubl
fidivs
clc
ss
adc
scas
mov
scas
iret
mov
sbb
aam
fstps
pop
add
jb
scas
ds
sbb
iret
or
inc
sub
ficomps
in
lds
js
inc
addr16
sbb
fadds
dec
jmp
je
xor
lods
push
mov
pop
sbb
adc
jne
outsb
into
mov
outsl
std
je
mov
sbb
in
cwtl
fs
mov
hlt
pop
subb
adc
cmp
dec
enter
imul
jne
push
pop
das
add
testb
rclb
cld
inc
xchg
xchg
lods
xchg
roll
lret
loope
aad
dec
in
shlb
pop
mov
shlb
movsl
mov
scas
fcomip
test
or
sub
cmc
push
xor
mov
lods
sti
or
xchg
adc
push
dec
dec
jge
icebp
sbb
pop
and
fsubrs
mov
scas
push
cmp
nop
xchg
int3
sahf
mov
insb
aaa
add
xor
mov
cmp
into
inc
ljmp
sbb
out
pop
rcll
push
mov
arpl
das
and
mov
push
icebp
sbb
mov
mov
call
mov
xchg
pop
jb
sbb
adc
jl
adc
sbb
lret
ss
lods
sahf
pop
jo
mov
in
int3
mov
sub
ja
jl
lcall
iret
pop
cmpl
fimuls
fiaddl
push
jge
or
icebp
push
shll
loop
mov
sbb
jl
mov
push
sbbl
arpl
mov
jno
lret
mov
adc
pop
xchg
dec
hlt
or
push
add
shlb
lods
push
adc
sub
pushf
pop
lret
push
dec
push
enter
es
aaa
call
xchg
jg
push
lods
shlb
push
cmp
cmp
inc
lea
jae
jnp
lret
in
roll
rcll
out
push
push
ret
jg
xchg
sbb
and
adc
mov
push
mov
aad
inc
cmp
jno
push
mov
ret
mov
imul
std
jo
inc
dec
je
cmp
out
call
push
cwtl
sbb
push
std
inc
lret
enter
ret
out
clc
out
cld
push
push
fnstsw
cwtl
xor
sbb
in
mov
xor
adc
loop
or
sbb
ret
push
mov
jns
mov
dec
lds
pop
pop
cmp
lahf
jb
loope
mov
std
pop
out
aas
out
in
andb
out
mov
es
mov
addr16
lahf
fldt
popa
call
mov
fisubl
aad
adc
notb
cltd
adc
sub
push
add
inc
enter
fimuls
outsb
cmp
mov
cmp
dec
add
cltd
pop
repz
je
mov
push
inc
push
mov
sbbb
popa
push
xor
or
mov
pop
es
jmp
ss
push
js
push
xchg
add
sbb
push
shr
xchg
push
fisttps
out
scas
scas
lea
push
cmpsb
cwtl
or
cmp
sub
cmp
pusha
out
push
iret
int3
ret
stc
push
std
mov
or
xlat
mov
dec
jp
inc
add
inc
mov
adc
sbb
jne
push
cmp
dec
pop
ret
movsb
inc
adc
xchg
and
out
push
mov
dec
add
jno
dec
pop
xchg
sub
mov
out
sub
xor
pop
aam
adc
stc
ror
inc
sub
mov
pop
mov
or
lea
xchg
cmp
adc
mov
sti
or
sub
adc
dec
dec
pop
test
push
aaa
dec
pop
xchg
or
and
jl
stos
mov
jnp
jno
and
outsl
sub
or
mov
adcl
cmp
outsl
fcmovnb
shlb
sarb
mov
in
lds
inc
mov
jno
data16
js
or
sub
pusha
pop
adc
cmp
nop
xchg
lret
mov
adc
dec
lret
fimull
cld
inc
jmp
stc
mov
rcrb
fidivrl
mov
pusha
xor
divl
js
xor
ja
or
sbb
lods
fs
fucomp
in
jnp
stc
stc
jno
sub
add
clc
push
nop
or
test
lods
mov
and
xchg
jge
cmp
shrb
adc
pop
or
dec
hlt
jno
movsl
test
cmp
int3
iret
xchg
adc
aas
icebp
xchg
cli
in
pop
and
ss
mov
mov
mov
jge
movl
xor
sbb
xchg
fs
andb
call
out
pop
add
sbb
and
mov
mov
jae
mov
and
dec
mov
lret
add
repz
data16
adc
fisubrs
cld
lret
jecxz
icebp
repz
mov
mov
adc
loop
fwait
push
js
movsl
scas
arpl
sbb
dec
cmp
ja
adc
in
mov
sub
stc
xchg
dec
stc
push
subl
pop
cmp
mov
sti
cwtl
mov
js
or
test
call
push
dec
ljmp
xor
push
push
add
ret
loop
les
mov
addr16
dec
out
testl
dec
pop
cmp
and
and
mov
or
leave
xchg
ret
insl
das
repz
adc
ret
aam
mov
fdivs
stos
jge
fsubrl
xor
enter
xor
or
rorb
scas
stos
inc
mov
repnz
xor
test
dec
xlat
daa
fsubp
lods
adc
aas
data16
dec
and
ja
push
mov
fwait
jno
mov
push
jp
dec
inc
sarb
mov
pop
xchg
cmp
insl
or
xor
push
jp
sub
push
dec
jne
fnstsw
mov
iret
into
enter
movsb
mov
out
xchg
dec
gs
mov
jns
jns
and
cmc
push
test
addl
ss
addr16
cmp
or
roll
sbb
xor
insb
enter
shrb
out
aad
cmp
and
pop
into
sub
lret
lods
cmp
xchg
dec
das
popa
mov
jp
lcall
sub
xor
outsl
int3
push
leave
and
lret
iret
dec
cmp
stc
fidivrl
nop
mov
or
scas
test
roll
nop
cmc
scas
pop
cmp
cmp
rorb
pop
into
test
push
xchg
hlt
orb
addr16
cld
notl
sub
popf
jle
in
xchg
jb
dec
push
jno
aaa
lods
inc
cmp
pop
mov
jmp
mov
int3
out
jge
xchg
mov
rclb
mov
sub
stos
mov
mov
fmull
sub
add
mov
xchg
xor
xchg
jo
xor
push
mov
stc
faddp
outsb
and
xor
xlat
dec
out
and
xor
pushf
rorl
sbb
xchg
scas
call
int3
jp
int3
inc
mov
xor
sbb
lds
add
insb
push
mov
pop
icebp
in
mov
cltd
insb
cmp
jnp
adc
mov
push
mov
fcmove
mov
mov
cmp
stos
inc
fcoms
xor
scas
sbb
mov
js
xchg
sbb
push
cltd
out
addr16
lret
dec
jp
jge
iret
stos
imulb
xlat
or
leave
lret
aas
icebp
mov
mov
adc
and
imul
and
sbb
adc
jno
xchg
push
jg
lock
es
pop
pop
enter
ja
aad
enter
cmp
pop
pop
aaa
inc
xchg
dec
cmp
sbb
and
and
ret
xor
sub
clc
aas
shrl
sub
sarb
jno
adc
jnp
subl
sub
inc
bound
js
test
loop
push
aad
dec
push
in
stos
push
xor
sub
mov
sbb
push
sbb
push
cmp
cmp
in
xchg
rolb
mov
aad
or
and
test
dec
adc
sbb
daa
mov
cltd
sbb
roll
in
mov
call
lods
adc
ja
xchg
dec
inc
fimull
mov
ja
cmp
jae
sub
xchg
mov
push
adc
fcoml
mov
pop
sub
xchg
dec
sbb
cmp
jecxz
jnp
js
cmp
inc
fldenv
out
into
cmpsb
lds
pop
mov
push
icebp
inc
sub
add
out
and
rol
dec
arpl
cmp
lock
fwait
repnz
sbb
lea
shll
mov
push
in
mov
sbb
mov
popf
mov
shll
cmc
rcrb
scas
mov
imul
rcrl
out
movb
cmp
sarb
es
xor
nop
xchg
inc
std
inc
push
jle
push
sub
cwtl
mov
mov
pop
and
jb
ret
sbb
bound
dec
rol
pop
lock
mov
cmp
pop
sahf
xorl
add
pop
test
scas
and
push
nop
pop
mov
stos
lret
cmp
jnp
and
xchg
xchg
lods
cmp
enter
add
jbe
dec
mov
jl
iret
inc
adc
lahf
js
into
dec
jns
push
cmp
je
xchg
or
cmc
jmp
xor
push
mov
push
jmp
pop
adc
sub
jle
rorb
addl
lods
nop
xor
hlt
notb
and
xor
dec
sbb
daa
or
aam
movsl
jmp
fdivs
leave
mov
out
int3
mov
scas
test
ror
test
dec
xchg
mov
mov
pop
ss
push
and
xor
mov
std
or
imul
stc
or
cltd
and
adc
aam
add
xchg
inc
outsb
into
jge
jmp
pop
aam
test
call
or
insb
xor
or
shll
jo
jp
mov
popa
insl
add
cmpsl
sub
jge
push
ljmp
inc
cmp
popa
mov
les
cmpsl
ret
insb
adc
pop
jp
fwait
aam
lock
pop
sahf
dec
out
sub
dec
cwtl
es
stos
adcl
and
xor
pop
xor
lret
pushw
arpl
jp
sbb
fidivrl
hlt
pop
int
sub
ja
scas
frstor
push
cmp
pop
mov
fstps
and
fidivrl
sahf
out
int
lcall
adc
aam
ss
jp
lods
cmp
xorb
sbb
stos
lods
push
fimull
push
dec
xlat
stos
adc
jg
pop
xor
loopne
call
add
cltd
adc
cmp
int
and
mov
xchg
mov
jne
push
ljmp
and
cmp
mov
lods
mov
mov
sbb
sbb
pop
or
in
add
mov
inc
lods
arpl
jl
push
mov
dec
aam
jle
ret
lcall
cmp
pop
int3
orb
sub
mov
push
push
xchg
jne
xchg
stos
pop
rcrb
xor
lret
push
gs
sbb
dec
dec
mov
sti
cmp
push
mov
shl
inc
jmp
test
mov
lret
fwait
insb
test
shlb
mov
xor
arpl
nop
xchg
insb
pushf
cmp
mov
in
lock
push
hlt
mov
mov
jp
or
cmp
dec
cmp
dec
js
loope
add
push
stos
pop
imul
push
mov
sub
mov
loop
rcrl
das
cld
xchg
je
xchg
jns
sahf
pop
bnd
stos
mov
cmpsb
rcl
fistpll
out
ss
add
mov
xor
fwait
lds
and
insb
in
leave
sbb
loopne
leave
mov
add
mov
sbb
adc
pop
leave
jle
adc
es
pop
mov
xchg
push
pminub
je
addl
fildl
cld
dec
mov
loope
xchg
jmp
ret
notl
stos
or
xchg
fsub
sub
inc
mov
and
out
pop
or
fwait
mov
and
adc
ret
xchg
jg
mov
fs
mov
and
mov
xchg
pushf
pop
jle
aam
out
das
int
inc
push
nop
xchg
lea
icebp
aad
aad
sub
mov
clc
pop
lods
in
xchg
mov
add
sub
test
mov
out
lahf
mov
jl
negl
inc
push
add
nop
loop
pop
in
push
repnz
ja
and
mov
aam
lret
pop
sahf
insl
inc
cwtl
xor
cmp
adc
test
adc
mov
ja
add
mov
je
lods
xchg
xor
xor
ret
lret
push
cld
cpuid
rorl
call
and
test
adc
mov
add
call
fwait
xor
jo
je
sub
sub
push
mov
js
mov
or
stos
loope
adc
mov
sahf
fwait
stc
in
repz
add
test
sahf
push
xchg
test
inc
rdmsr
out
push
xor
outsb
dec
cltd
push
cmpsl
jle
loope
pushf
dec
cmp
sbb
dec
arpl
in
sbb
ds
jo
sbbl
or
pop
xchg
je
sbb
in
subl
jnp
jns
fwait
push
subl
push
and
mov
pminsw
mov
or
and
inc
adc
shlb
mov
sbbb
pop
jne
mov
js
add
mov
cmp
cmp
add
jp
mov
and
pop
leave
arpl
bound
js
and
add
test
pusha
mov
pop
negl
add
jo
mov
fs
push
mov
mov
cmpsl
pop
out
inc
aad
dec
divl
lret
test
outsb
dec
inc
ss
push
ret
icebp
cmp
pop
rolb
test
jne
pop
dec
test
mov
stos
inc
loopne
mov
mov
push
inc
mov
and
pop
dec
out
sub
dec
xchg
dec
xchg
out
or
xchg
and
orb
ljmp
cmp
loope
flds
push
pop
mov
jmp
jns
and
dec
nop
nop
in
jae
add
xchg
pop
jecxz
mov
add
dec
rcrb
insl
shlb
lret
aam
jge
push
mov
and
rolb
ja
or
movsb
add
xchg
cmp
lret
lock
ficoml
repnz
mov
movsl
fwait
sti
sub
aaa
push
decl
inc
loop
jbe
pop
lds
stc
les
sbb
stos
push
lret
and
add
dec
xchg
imul
shrd
cmc
dec
mov
pop
lahf
test
insb
ret
add
mov
push
ja
inc
and
lock
mov
daa
sub
in
repz
dec
das
sbb
lods
mov
fildl
call
cmp
jp
icebp
cmp
or
jecxz
bound
rcll
push
das
mov
scas
bound
push
int3
cld
mov
add
cmc
adc
xchg
mov
or
imul
aaa
or
daa
sbb
xor
cmc
xchg
cmp
inc
test
mov
rclb
jb
in
push
das
loopne
das
mov
subl
add
cmp
mov
fldt
or
xchg
sub
lret
mov
fisttpl
add
jbe
inc
imul
daa
out
mov
dec
stos
leave
lock
dec
xchg
xchg
ja
mov
jge
repnz
in
inc
adc
push
xor
adc
stos
or
mov
pop
sub
insb
cmp
popl
inc
mov
in
imul
jnp
pop
mov
jmp
insb
sbb
adc
cs
xchg
inc
sbb
ljmp
xor
xor
push
fists
mov
fildl
jle
pop
push
cmp
insb
sbb
cmp
inc
adcb
cmp
xchg
insl
jl
xor
in
fldl
ds
mov
stc
scas
test
xor
add
out
pop
xchg
bound
xchg
roll
pop
mov
aam
or
mov
dec
out
xchg
pop
and
iret
in
insl
jp
test
xchg
test
jo
into
cmp
xchg
lods
dec
roll
dec
mov
jmp
xchg
ja
pushf
pushf
nop
test
inc
jb
arpl
jg
jnp
pop
lahf
push
imul
je
lcall
mov
aam
cmp
arpl
push
rolb
gs
cmpsl
mov
in
adc
mov
das
push
mov
push
sbb
hlt
and
pop
xor
aam
adc
add
insb
mov
jp
outsb
sub
lock
out
sub
inc
inc
push
push
into
mov
test
idivb
aam
jne
es
repz
dec
inc
or
mov
mov
dec
in
adc
in
test
les
dec
dec
mov
rcll
sub
mov
xchg
mov
rcrb
xchg
hlt
mov
mov
pop
push
and
fs
pop
mov
in
jp
insb
mov
mov
into
daa
int3
sbbl
ffree
pop
call
push
sbb
pop
mov
dec
enter
mov
std
mov
mov
imul
pop
jne
xchg
aad
jp
shrl
jb
mov
xor
outsl
fcmove
adc
mov
push
xor
loope
push
or
pop
xor
jmp
sbb
pop
sub
shrb
mov
loope
outsl
mov
arpl
out
jbe
fldt
push
rclb
rcrb
ja
sarb
dec
pop
cwtl
pop
inc
mov
jbe
sbb
mov
leave
aas
dec
subb
sar
in
xor
fisubs
and
sbbl
mov
outsb
jmp
cwtl
xor
pop
mov
arpl
cli
sbb
jne
push
scas
lds
out
mov
pop
das
add
and
movsb
jecxz
int
xchg
push
ret
pop
jne
nop
sbb
xchg
insl
push
adc
scas
and
lods
sub
dec
cmpb
fs
sbbb
fmuls
pop
jmp
add
push
pop
mov
dec
push
jp
fistpl
sbb
xchg
sbb
sar
mov
scas
jo
push
push
scas
sbb
call
mov
push
in
push
add
cltd
sti
pop
test
xor
mov
fs
or
stos
js
push
fisubs
sbb
lret
popf
xor
ret
sbb
or
incb
popl
or
inc
push
sub
xor
fdiv
mov
jns
pop
gs
mov
push
dec
xor
and
pop
pop
into
sbb
dec
jnp
xor
lock
cmp
inc
popf
push
es
mov
xchg
iret
xchg
xchg
leave
adc
cmpsl
in
inc
xchg
movsl
xor
int
jbe
mov
mov
sbb
orl
and
xor
inc
jmp
pusha
mov
lcall
adc
push
xlat
fbstp
cmp
mov
nop
or
sub
xchg
push
sbb
es
adc
xor
std
pop
movsl
push
xchg
insl
mov
inc
scas
pop
in
fiadds
arpl
push
loop
mov
enter
push
mov
std
xchg
shlb
ja
lods
pop
ds
sub
je
pop
lock
adc
cmp
push
xchg
xchg
add
and
jge
inc
outsb
and
sub
ret
mov
xchg
cmp
hlt
xchg
or
repz
sahf
sbb
push
lret
ljmp
push
pop
aam
pusha
sub
out
mov
or
pop
sahf
cmp
inc
inc
pop
fimuls
out
fstp
daa
ljmp
fxch
push
jge
movsb
dec
lods
lods
add
xchg
and
in
lods
jecxz
cmp
test
mov
jne
jae
adc
das
sbb
jno
fildll
mov
out
push
in
or
arpl
inc
sarb
ret
add
insl
sbb
cwtl
or
in
mov
push
imul
xchg
bnd
adcb
mov
cmp
push
xor
lods
add
lea
dec
xchg
aam
mov
jp
or
into
pop
mov
sbb
mov
pop
jge
dec
ja
inc
mov
leave
pop
es
cmp
cmp
sub
push
dec
fs
pop
mov
push
push
ds
cmpsb
in
pop
jl
pop
mov
xlat
cmp
lods
fwait
jg
lahf
dec
insl
inc
xchg
insb
jp
cwtl
xorl
sbb
jmp
lret
mov
jle
pop
rclb
punpckhdq
jnp
in
pop
adc
mov
mov
cwtl
and
and
daa
mov
leave
cmpsb
cmp
divb
lock
inc
in
xchg
stc
test
stos
mov
xchg
mov
pop
rol
pop
adc
cmc
insb
shlw
mov
cli
jno
or
hlt
shl
insb
mov
mov
loope
cmp
ret
lcall
lahf
in
xchg
out
scas
push
mov
or
popa
stos
rcll
inc
push
push
lret
scas
xlat
adc
fstpl
xor
in
les
dec
stos
mov
sarb
add
mov
fisubrs
mov
adcl
jne
fdiv
lea
push
mov
mov
pop
push
jae
push
stc
xlat
add
cmpsb
test
mov
sbb
pop
or
mov
jp
int
or
popa
add
enter
or
mov
gs
orb
jp
push
cltd
call
clc
xlat
xchg
mov
gs
std
ret
mov
xor
mov
mov
and
jg
mov
mov
xchg
imul
or
xor
out
stos
jmp
mov
push
lea
cltd
inc
add
stos
inc
das
int
mov
imul
imul
inc
aam
mov
cmp
jecxz
mov
add
cmp
xchg
lahf
ret
dec
pop
xchg
data16
sub
das
adc
enter
movsl
inc
xchg
pop
int
lretw
subl
cmp
xchg
cs
je
pop
mov
cmp
mov
dec
mov
xchg
push
decl
pop
sub
lea
xor
into
sub
mov
mov
jl
xor
push
insl
xchg
lret
xlat
test
test
mov
add
aad
inc
movsb
rdtsc
lds
adc
aas
orl
lret
ss
sub
push
sub
xor
andl
and
add
push
ret
jbe
rcr
pop
push
fcomi
mov
dec
pop
ljmp
jno
xor
mov
pop
scas
sub
push
mov
inc
je
push
mov
add
inc
jecxz
rcr
lods
cmpsl
sbb
xor
fidivl
xlat
jmp
jno
leave
jmp
mov
inc
sbb
sbb
pop
push
xorl
subl
movsb
inc
adc
mov
lods
inc
lcall
rcrl
arpl
cmp
out
movb
shl
sub
clc
adc
aam
pop
inc
cmp
push
out
cmp
add
std
and
sarb
fistpll
in
rcrl
pop
arpl
arpl
mov
daa
and
mov
cmpsl
enter
mov
lods
iret
push
jnp
jp
xor
das
adc
xor
clc
dec
sub
in
mov
rorb
test
inc
or
fdivs
pop
gs
icebp
xchg
cmp
icebp
dec
mov
cmp
std
lods
mov
lret
cmovge
mov
faddl
negl
push
popf
jns
and
enter
sahf
insl
in
cmp
sub
mov
xchg
jle
xchg
mov
push
das
or
add
sbb
jmp
cmp
cmp
xchg
adc
test
adc
in
push
les
or
sbb
xlat
pop
in
out
pop
dec
frstor
push
mov
dec
cli
push
jns
lock
lods
pop
shlb
push
push
ljmp
loope
cmp
pop
stos
jnp
inc
sub
add
addr16
pop
pop
mov
stc
jl
xchg
int
sarl
jl
xchg
lahf
sub
dec
and
fs
aaa
pushf
mov
decl
cvtdq2ps
inc
clc
inc
sti
data16
jns
outsl
mov
sub
xchg
icebp
push
in
out
mov
lds
xchg
arpl
pop
push
jae
outsb
mov
jge
ret
xor
lock
ret
cmp
cmpsb
fisubl
popa
jnp
mov
andb
pop
out
rorl
inc
mov
lcall
mov
lock
xor
xor
movsl
inc
divb
push
cs
call
ja
lret
cmpb
jmp
pop
mov
std
enter
insb
mov
lock
loope
xchg
inc
lret
push
pop
and
cmpsb
dec
leave
cmp
sub
dec
aaa
push
js
rcl
or
or
sub
inc
loope
sbb
imul
outsb
fwait
dec
cltd
mov
add
test
adcb
xchg
jmp
pop
mov
jae
movsl
aam
das
xchg
mov
dec
inc
lret
std
pop
dec
pop
pop
sub
in
data16
mov
rol
int3
fdivrs
popa
add
inc
gs
lret
ds
mov
and
iret
push
into
lods
insb
pushf
and
jo
push
into
stos
aaa
in
movw
sub
xchg
pop
cmp
je
adc
pop
es
movsb
dec
std
sbb
mov
testb
dec
imul
or
fstpl
push
pop
sahf
mov
mov
or
inc
or
ss
hlt
pop
mov
jnp
xchg
fnstsw
pop
jmp
fsub
push
push
pop
sub
repz
xor
jb
inc
loopne
sbb
negl
or
imul
sti
xor
jle
mov
pop
inc
pop
cmp
mov
pusha
push
in
push
mov
fisttpl
sar
insl
popa
pop
mov
out
shrl
mov
in
adc
arpl
xchg
jo
pop
push
fsubl
divl
sub
cli
add
xor
aas
dec
mov
add
popa
jl
int
push
shlb
cmp
fnstenv
mov
int
cmp
jl
popa
push
push
push
jnp
xor
xor
cs
orl
mov
int3
stc
jmp
cmove
xchg
cmp
lods
test
das
testl
xchg
ds
and
ss
pop
sbb
adc
inc
ret
xchg
adc
xchg
fdivrl
icebp
adcl
mov
and
pop
dec
in
and
subb
jle
adc
je
xor
rclb
adc
mov
mov
test
inc
mov
aad
xchg
inc
fbld
push
push
out
cmpl
xchg
xchg
xor
cmc
push
mov
xchg
test
hlt
fcmove
pushl
mov
imul
xor
into
xchg
les
mov
gs
jle
and
iret
dec
int
xchg
sarl
sub
push
inc
sub
outsl
das
imul
enter
out
arpl
loopne
sub
inc
leave
and
popa
movsl
das
jp
dec
iret
jne
or
jmp
in
aaa
ja
and
adc
push
push
out
fbstp
jl
jo
fdivrs
pop
cmp
nop
push
mov
pop
mov
push
jecxz
mov
jb
leave
insl
iret
inc
sub
xor
sar
mov
lock
adc
jp
jge
es
pop
lret
xchg
ljmp
mov
pop
jmp
push
les
call
xchg
out
into
jmp
mov
jae
sti
imul
stc
pop
imul
adc
into
mov
fs
dec
lahf
xchg
jns
push
ss
dec
mov
mov
mov
mov
mov
lock
add
push
gs
xorb
ds
xchg
out
xchg
sbb
out
es
ja
inc
mov
fsubrs
add
test
dec
hlt
mov
shll
mov
inc
aaa
mov
mov
pop
fisttpll
xchg
sub
dec
stos
mov
adc
cld
push
lock
popa
lret
test
pop
add
inc
test
adc
aaa
cmc
call
cli
rcrl
xor
out
push
sub
mov
mov
inc
fsubs
pop
push
and
mov
and
jg
mov
leave
ficoml
pop
push
outsl
addl
inc
push
xchg
and
das
gs
dec
cmp
inc
cli
sbb
mov
cmpsb
cmpsl
es
adc
add
outsl
or
leave
out
mov
insl
cld
cltd
stc
es
and
inc
pop
push
mov
les
inc
mov
dec
add
roll
in
adc
loopne
lcall
ss
lds
test
incb
ja
out
sbb
fcoml
xchg
clc
jge
or
mov
jp
sbb
sub
pop
or
sub
push
addr16
clc
ret
dec
xor
imul
add
adc
cmc
or
and
lds
push
testl
jg
cmp
inc
adc
fcmovnbe
stc
sahf
mov
pop
jge
pusha
outsl
push
lods
out
pop
call
int3
xchg
in
das
clc
nop
pop
push
mov
int
push
loopne
mov
lods
sahf
in
sub
insl
cmpsb
mov
sub
pop
inc
dec
bound
nop
or
mov
dec
adcl
mov
jo
cwtl
aam
fstpt
sahf
addr16
fwait
mov
xor
jg
xchg
ret
gs
xchg
loop
fwait
out
sub
sbb
jl
das
mov
adc
scas
stc
mov
pusha
xorl
xor
fdivl
xor
fsubrs
push
repnz
hlt
lea
pusha
loope
xchg
std
dec
cmpsb
aaa
mov
sbb
les
into
add
sub
lret
hlt
int
or
movsl
cmpsl
xchg
pop
lret
fwait
mov
cmp
rcrl
faddp
mov
or
es
iret
sub
aam
pop
or
fists
mov
sub
loop
adc
and
mov
aam
xor
xor
mov
pop
sub
pop
sbbb
pusha
shrl
mov
jb
jae
jecxz
das
repnz
xchg
into
xchg
inc
jl
movsb
cmp
mov
pop
mov
xchg
scas
or
in
push
push
sbb
xor
test
inc
jl
lods
pop
in
fs
jb
test
inc
je
mov
mov
pushf
push
sarb
cli
mov
adc
cmp
outsl
jecxz
jmp
sbb
aas
sub
add
mov
out
push
add
lret
and
push
jnp
sbb
push
cltd
hlt
and
jbe
pusha
sbb
nop
icebp
xchg
mov
sbbb
xchg
clc
cmpsl
out
stos
lahf
push
sbb
push
pop
cltd
jnp
push
mulb
aad
outsl
add
sahf
fs
daa
inc
fisubrl
insb
fisttpl
fwait
sbb
dec
fcoms
pop
inc
jae
sub
hlt
mov
xor
lds
sarb
xor
ja
pop
iret
cmp
mov
add
repz
insb
or
mov
xchg
sub
or
dec
push
sub
and
icebp
imul
mov
pop
jg
pop
add
fwait
pop
jno
mov
scas
jg
push
dec
bound
fstps
scas
aam
out
or
mov
stos
pop
scas
loop
add
ficompl
test
jp
mov
mov
popa
mov
cli
popf
lods
adc
rcrl
test
jo
mov
pusha
mov
jl
jg
cld
andnps
mov
sbb
jg
push
rcrl
jne
aas
bound
xchg
lea
imul
mov
movsl
test
sub
mov
pop
adc
les
idivl
inc
daa
shlb
or
xchg
sbb
mov
std
inc
jg
in
imulb
scas
jecxz
dec
sub
retw
mov
cmc
jne
gs
mov
insb
int
inc
cmpsl
fsubl
adc
ljmp
leave
lret
xchg
jge
push
push
lds
incl
es
push
lds
add
into
jns
popf
adc
add
sbb
add
cmp
mov
push
cmp
lea
addr16
and
or
dec
inc
dec
in
lea
sbb
cmp
loop
je
pop
mov
lret
ficoml
pushf
xchg
call
insb
cmp
imul
mov
push
fnsave
mov
dec
movsl
ds
xor
mov
sbb
xor
jp
test
outsb
dec
das
in
outsl
in
rcrl
jnp
ss
mov
dec
mov
adc
out
test
mov
jo
xchg
inc
sub
pop
cmp
mov
jp
or
sub
in
jb
mov
insb
test
das
adc
dec
push
test
repz
aam
sub
imul
cmp
aad
dec
cmpsl
mov
imul
sbb
sub
jae
cmpsl
out
mov
add
lcall
sbb
mov
xor
movb
pop
xchg
movsb
mov
loope
arpl
pushf
mov
lods
mov
or
shl
or
repnz
daa
mov
mov
mov
xchg
cmc
xchg
inc
and
lods
mov
xor
gs
and
test
outsb
pusha
and
jnp
add
inc
and
inc
andb
sbb
jl
cmp
filds
int3
fisubl
scas
in
xchg
lcall
lds
mov
push
push
jle
pop
fs
or
mov
loope
mov
cwtl
jmp
pop
jns
shrb
dec
or
aas
inc
pop
andl
fstl
in
cmp
xor
cmova
adc
xchg
push
shll
jbe
jae
out
cmpl
mov
inc
and
or
imul
mulb
nop
scas
jns
jge
jne
js
xchg
sub
mov
jo
add
mov
push
xlat
sti
into
adc
or
push
mov
addr16
mov
jno
test
inc
push
adc
mov
orl
push
std
xor
das
jmp
and
stos
in
dec
aas
movb
inc
dec
lcall
sbb
test
sub
add
fwait
and
lods
test
mov
inc
push
mov
cwtl
sbb
int
nop
je
inc
xchg
mov
add
mov
imul
enter
pop
negb
sub
scas
scas
jnp
push
fcmovb
inc
in
std
sbb
int
shlb
out
dec
cltd
data16
and
sub
mov
add
jbe
mov
and
adcl
inc
insb
push
ficoms
insl
pandn
dec
sub
outsl
imul
into
pushf
mov
gs
sti
call
ja
scas
aas
pusha
jge
mov
sbb
repz
xchg
and
das
pusha
inc
imul
mov
sbbl
xchg
pop
mov
inc
cmpsb
adc
adc
push
mov
mov
sub
ljmp
inc
inc
dec
push
sbb
rol
mov
jbe
inc
mov
sbb
nop
jne
in
sub
xchg
xorb
loope
mov
rcll
pusha
mov
ja
shll
mov
test
aaa
sub
lods
outsl
repnz
adc
mov
mov
stos
xchg
frstor
fbld
sub
lret
jns
mov
sbb
mov
rolb
mov
sub
das
xchg
push
pop
ret
sbb
jg
xchg
and
mov
inc
iret
xor
mov
mov
and
cmp
cmc
sti
jle
call
xchg
lods
mov
adc
xchg
stos
lds
daa
scas
sbb
push
sub
sub
pop
dec
mov
push
inc
popa
icebp
sub
out
jnp
xchg
mov
pop
rolb
dec
mov
push
test
jl
mov
ret
pop
mov
jne
dec
ja
dec
push
iret
fistps
out
dec
pop
les
lods
xor
mov
pop
outsl
call
les
jmp
bound
mov
xorl
add
pop
mov
int3
cmp
shrb
or
push
adc
mov
adc
adc
clc
fsts
in
in
cli
call
out
cmp
mov
call
out
pop
daa
dec
xor
add
cld
xchg
push
test
gs
or
pop
or
xor
out
sbb
je
lea
sub
xchg
jns
or
es
ret
icebp
in
pushf
cmc
and
aad
outsl
jecxz
stos
arpl
jnp
rcrb
fidivrs
ret
mov
sub
test
out
shlb
inc
scas
and
test
jl
aam
push
subb
test
aad
dec
stos
jl
xor
push
in
xor
lahf
outsb
mov
lods
mov
lds
das
and
inc
loope
repnz
xchg
in
aad
movsb
mov
inc
cli
and
jecxz
mov
mov
xor
jge
cmpsl
lea
or
mov
fcoms
mov
rdmsr
xor
mov
adc
pushf
push
pop
test
lcall
jns
sbb
inc
and
popf
push
push
push
or
scas
mov
sbb
mov
gs
call
aas
fistpll
sub
pop
jb
lret
icebp
in
push
ja
out
cwtl
cmp
sub
sarb
outsb
pop
faddl
aam
fimull
xchg
int
js
mov
sbb
lods
push
divl
ror
push
jmp
in
mov
mov
mov
mov
lahf
cwtl
xchg
testl
rcrb
rorl
mov
iret
lahf
iret
add
xchg
mov
icebp
mov
es
sub
mov
fstpt
enter
sbb
xor
stos
inc
mov
mov
lods
dec
inc
fstps
gs
fdivrs
adc
sub
fisubl
xor
jg
jae
sbb
push
imul
jge
lcall
push
loop
insb
adcb
xchg
hlt
das
hlt
adc
dec
cmc
ret
xor
lds
shrl
hlt
int3
call
fstl
mov
lret
xor
push
lcall
sbb
push
pop
roll
or
jge
jns
inc
pop
int
pop
cmp
fstl
cltd
adc
and
aaa
fcmovu
aaa
xor
shll
aad
adc
adc
dec
loopne
fldenv
pushf
dec
arpl
mov
insb
dec
cwtl
retw
cmp
mov
sub
or
std
enter
out
lods
cltd
add
out
enter
pop
loope
ljmp
idivb
mov
mov
or
jmp
mov
xchg
mov
xor
sbb
mov
push
loop
sub
push
jnp
icebp
call
pop
and
xchg
push
mov
xchg
add
dec
mov
cmpsl
jge
cmpsb
seto
mov
mov
test
mov
jge
mov
es
inc
repnz
cmpsl
filds
lahf
fsts
sbb
pop
mov
inc
lea
or
mov
jl
shlb
stc
test
sbb
dec
call
jae
adc
adc
iret
or
shlb
xor
xchg
adc
or
xchg
fwait
pop
xchg
dec
mov
sub
ljmp
jb
push
pop
addr16
or
xchg
mov
jge
dec
push
sub
add
dec
testb
int
imul
cmp
mov
mov
push
orb
adc
addr16
pop
shrl
mov
push
sbb
les
add
jns
hlt
cli
or
hlt
inc
outsb
xor
mov
and
sbb
mov
jmp
sti
insb
mov
fwait
jns
mov
je
dec
jb
mov
sbb
jmp
pop
push
jb
sti
inc
push
dec
arpl
lahf
jnp
fistpll
sub
jno
push
in
xchg
xchg
push
adc
sbb
dec
sbbl
in
je
cmpsl
xor
cmp
movsb
lods
dec
ljmp
cmp
sbb
test
jmp
lahf
loope
push
adc
fadds
or
stos
sahf
jg
fdivrs
call
addr16
iret
or
mov
nop
cmp
test
cs
jle
aam
and
movsl
xchg
inc
lds
int
mov
lret
cmp
shlb
xchg
inc
mov
repnz
jb
xchg
popf
mov
cmp
lock
xor
lods
icebp
stc
xor
loop
cli
test
cs
sbb
xchg
out
sbb
cli
xor
lret
sbb
js
push
ret
and
sub
js
push
mov
enter
ret
jnp
sahf
aaa
adc
add
pop
sub
int
cmpsl
xchg
xor
mov
push
lret
inc
fimull
pusha
adc
mov
sub
out
inc
scas
or
push
xorb
adc
sbb
lods
ljmp
arpl
mov
mov
fimuls
test
push
fxch
or
dec
loop
shr
and
movsb
lahf
ds
shr
out
fs
filds
push
ja
xchg
mov
mov
xor
pop
sbb
sarb
adc
std
mov
mov
mov
ror
outsb
sti
pop
jmp
cs
gs
mov
in
or
sbb
test
mov
or
fldenv
repnz
loope
je
push
cmp
adc
push
rcll
scas
div
rclb
sub
push
aaa
lds
push
lods
push
inc
lahf
xchg
dec
call
sub
jne
sub
popf
sahf
mov
mov
push
inc
mov
aas
mov
loopne
enter
out
and
arpl
cltd
lahf
insb
leave
lahf
bound
pusha
ja
inc
bound
cltd
mov
mov
pop
xorb
push
cmp
nop
cmpb
lcall
ret
lcall
sub
jmp
bound
sbb
jnp
icebp
stos
mov
xor
inc
je
leave
mov
jne
pop
adc
in
inc
dec
fwait
adc
ss
xor
adcb
xchg
dec
adc
pop
jne
ss
loopne
cmpsb
test
dec
mov
mov
mov
or
fldenv
mov
sub
popf
iret
adcb
cmp
je
fs
jmp
es
jnp
dec
ja
xor
or
xchg
or
lods
stos
xchg
jmp
jnp
imulb
adc
ror
lods
leave
rcr
push
in
inc
and
lods
jbe
push
mov
mov
out
pop
lock
add
cmpsl
sbb
adc
and
xchg
sbb
js
enter
xchg
sbbb
rcll
js
cmp
dec
testb
testl
ss
fcmovu
cmpsb
push
dec
jle
push
fdivl
cwtl
loop
jmp
jge
add
cmpsl
testl
and
fcmovb
and
push
ret
dec
loope
mov
cld
xchg
dec
inc
add
mov
lahf
mov
pop
arpl
aam
push
adc
inc
cmp
lods
jno
add
cmp
inc
lcall
mov
inc
push
mov
and
mov
int
imul
orl
fscale
adc
add
and
movsb
push
inc
mov
mov
daa
mov
mov
xchg
sbb
out
add
stos
or
mov
or
jecxz
hlt
add
lea
in
jle
xchg
aad
and
mov
lret
fninit
cmc
in
loope
jb
xorl
bound
ljmp
out
movsl
sbb
fs
push
loop
push
pop
jne
cmpsl
into
ret
jmp
mov
popf
out
mov
pop
imul
jnp
sub
arpl
sbb
sbb
fldenv
sbb
outsl
sub
imul
jb
jmp
push
or
and
aad
jl
mov
xchg
add
jnp
xchg
or
add
mov
xchg
test
fidivrs
aaa
add
je
push
scas
lea
adc
jle
iret
jne
cmp
push
cmp
outsb
jmp
jg
ret
xlat
jg
rclb
cmp
lds
dec
mov
outsb
sbb
jle
xor
out
inc
adc
cmc
outsb
mov
pushf
repz
jle
mov
dec
test
roll
sub
test
icebp
pushf
repz
ss
movsb
xchg
in
xor
jmp
mov
hlt
mov
ret
fisubl
cwtl
icebp
gs
pushf
mov
xor
mov
int
stos
push
aas
and
adc
bound
xor
int3
lock
push
jl
adc
jmp
mov
or
cld
fstl
int3
sub
lods
jne
jno
add
in
push
mov
mov
call
adc
cmp
scas
push
subb
sbb
push
push
test
sbb
xor
mov
lcall
jo
cmp
xor
loop
pushl
push
ja
mov
stos
and
add
into
mov
inc
and
and
mov
int3
push
leave
xor
shll
and
inc
sbb
roll
les
mov
fildll
mov
mov
movsl
insb
mov
test
pop
ret
popf
ja
adc
and
addl
xchg
stc
dec
xlat
clc
subw
pop
xor
js
adc
sub
lods
pushf
test
mov
mov
enter
psubusw
and
push
lahf
mov
mov
cmp
aaa
or
andb
rol
push
pop
cmpsl
out
cmp
cmp
out
adc
fdivs
orl
rcll
out
or
inc
xor
add
sub
imul
popf
scas
pop
push
loopne
cmpsl
mov
push
push
inc
aas
pusha
sbb
in
or
std
mov
sbb
pop
mov
mov
lcall
sub
sub
cltd
mov
movsl
divb
mov
xchg
sahf
out
xchg
jns
movl
inc
and
loope
xor
imul
mov
gs
sbb
test
add
sbb
and
andl
test
pop
xchg
sub
leave
xor
cltd
push
mov
leave
pop
dec
xchg
mov
fwait
cmp
add
sub
test
sahf
sahf
cwtl
scas
cmpsb
cmp
jecxz
cmpsb
neg
cmp
nop
pop
lcall
movsb
rcrl
xchg
stos
cmp
test
outsb
lret
dec
jno
arpl
aad
xchg
push
mov
enter
sub
fwait
sbb
fs
and
ret
fisttps
mov
hlt
aad
jns
jo
scas
xchg
cmpb
cli
push
repz
enter
aad
aam
xlat
add
testl
add
std
aaa
insl
popa
push
popa
iret
push
es
das
es
adc
xchg
test
cs
arpl
jp
scas
jmp
jp
out
mov
jno
sub
pop
pop
push
push
popf
jle
cld
clc
sbb
sbb
xchg
add
pop
mov
nop
gs
fldt
ret
jp
sub
mov
jecxz,pt
iret
dec
inc
fdivp
fidivs
mov
enter
cmp
cwtl
adc
flds
fwait
int3
pop
div
add
test
mov
xchg
stos
loop
and
adc
and
jnp
jp
push
pop
pop
jae
and
cwtl
rorb
dec
das
or
pop
mov
jnp
cmp
push
ljmp
and
adc
pop
cwtl
push
ss
int
xorb
movsb
mov
lret
shr
pushf
pushf
push
mov
lea
in
mov
push
cmc
push
nop
stos
daa
ret
sbb
dec
or
xchg
mov
mov
and
push
test
pusha
fsubrl
mov
mov
xor
fisubrs
sbb
js
lock
inc
cli
das
cmp
inc
std
jg
add
push
test
je
mov
insb
in
jb
cmc
mov
jne
dec
fdivrs
int
sbb
sub
mov
push
push
faddp
xchg
cs
sbb
mov
pop
ja
sub
xlat
sbb
mov
hlt
push
test
and
xorb
sbb
or
lcall
pop
sub
cs
or
lahf
je
shll
mov
mov
xchg
dec
sbb
jle
aam
lock
sub
cmpsb
cltd
movsb
cmpsl
leave
rclb
cli
out
arpl
push
sbbl
ds
add
arpl
dec
ret
fildll
push
or
push
rcl
jp
mov
insl
pop
aas
out
add
lret
mov
scas
scas
sahf
rclb
inc
push
call
fisubrs
in
fistpll
fadds
outsl
bnd
push
inc
outsb
negl
lods
pop
addr16
or
pusha
mov
clc
mov
add
in
movsb
aaa
pop
aas
sarl
test
mov
fcoms
in
lret
or
inc
popf
ljmp
movsl
sbb
and
dec
mov
pusha
sub
std
clc
xor
dec
divl
xor
out
mov
inc
or
in
add
loope
inc
pusha
push
jo
xchg
inc
pop
push
jmp
or
clc
into
mov
int
lcall
test
pusha
jno
sub
jl
sub
sub
pop
pop
jno
or
jmp
add
dec
das
cs
push
outsb
data16
pop
adc
push
repnz
dec
mov
sbb
mov
sbb
clc
add
mov
aaa
int
adc
lods
call
push
or
mov
sbb
lahf
dec
xchg
add
add
je
mov
data16
jecxz
or
hlt
mov
movsl
mov
adc
cmpb
sbb
dec
jns
lcall
stos
xor
mov
loope
cld
xchg
pop
mov
outsl
enter
aas
jb
or
or
sti
out
inc
out
adc
and
loope
rorb
xor
jle
xor
sub
lcall
fs
jge
iret
pop
push
stos
aad
insl
and
pusha
inc
sbb
or
jbe
lock
nop
in
out
mov
mov
or
mov
push
ljmp
int3
fsubrl
inc
push
or
icebp
aam
pop
outsb
push
nop
lea
ja
in
pop
push
jl
sub
test
push
les
fucomip
movsl
mov
lds
inc
xchg
adc
and
inc
fadds
push
lahf
js
test
xchg
and
addr16
lret
mov
loopne
cmpsl
dec
inc
test
add
or
pop
sbb
sub
notb
mov
stc
xchg
fistpl
xor
adc
das
ds
mov
mov
in
xchg
sarl
icebp
call
jecxz
mov
push
sub
inc
lcall
int3
insb
or
daa
jno
inc
sbb
pop
push
or
gs
test
pop
ss
repnz
maskmovq
negl
dec
lret
or
jnp
xor
int
push
or
xchg
cmp
pushl
pcmpgtd
inc
sar
xlat
mov
mov
js
jmp
test
andl
popf
inc
scas
out
fwait
mov
xor
inc
fs
out
sbb
lds
nop
bound
aaa
sbb
jb
mov
jge
out
mov
daa
out
outsl
insb
clc
sub
out
pop
cltd
dec
dec
mov
test
lcall
dec
cmp
cld
cmc
xchg
lds
xor
push
inc
mov
or
call
and
or
jmp
xchg
push
cmp
or
ljmp
adc
in
xor
cmp
sbb
sti
jl
insb
mov
push
sbb
nop
scas
or
hlt
xchg
ret
dec
and
lods
icebp
sub
sti
mov
pop
inc
sbb
mov
jb
pop
scas
xchg
push
sti
dec
nop
in
xor
sub
aaa
inc
add
sbb
jnp
dec
fisubl
rorl
out
lds
or
sbb
xor
popa
in
out
add
inc
pop
nop
xlat
test
mov
ret
icebp
test
and
movsb
jb
inc
inc
lret
sub
notb
jmp
and
inc
jl
mov
call
sar
lcall
sbb
lea
adcb
lret
cwtl
lods
and
xchg
push
shrl
gs
dec
inc
add
cwtl
mov
scas
cmp
int
sbb
insb
popf
in
xchg
adc
and
and
int
pop
daa
repz
xchg
xchg
nop
out
ftst
scas
add
popa
adc
sbb
aad
stc
and
test
xchg
andb
xor
mov
sub
push
cmpsl
shr
pop
mov
and
jecxz
sub
or
add
mov
jge
inc
jl
adc
repnz
testl
sti
mov
out
and
leave
xor
mov
pop
loop
out
out
out
or
ds
lods
in
sbb
sub
cmpsb
repz
xchg
aaa
in
icebp
movsl
aaa
out
jo
xchg
mov
lcall
stc
ficoml
jo
hlt
icebp
mull
sbb
lret
push
mov
addr16
rcll
fidivrl
test
sarl
bound
ds
adc
jnp
popa
inc
mov
inc
push
mov
ret
xchg
sub
mov
gs
adcb
inc
add
or
cmpb
cli
mov
xchg
xchg
and
repnz
jl
fistpll
xor
cmp
lret
push
adc
cld
out
jge
push
shll
dec
out
push
ret
sub
not
arpl
jne
push
cmp
ljmp
mov
or
icebp
cltd
pop
and
mov
data16
push
jo
sub
add
xchg
inc
test
fucomip
hlt
call
or
mov
jbe
add
jmp
imul
sbb
mov
sbb
fs
push
mov
dec
repnz
movsl
mov
sub
je
sahf
lcall
mov
hlt
xlat
inc
enter
sbb
push
pop
or
cmpsl
jno
mov
mov
adc
dec
fdivr
mov
push
mov
imul
inc
mov
sti
push
and
pushw
inc
sarl
pop
xor
out
push
inc
lahf
repz
add
arpl
pop
lret
fstp
incw
inc
daa
inc
push
pop
push
mov
pop
mov
outsl
adcb
fcmove
pop
icebp
xchg
test
fnstcw
int
jmp
ret
pop
dec
sub
mov
in
jg
push
ljmp
addr16
dec
in
movsb
arpl
sarl
les
dec
jecxz
int
or
and
adc
repz
add
cwtl
jns
pop
lret
js
test
ljmp
cmp
dec
or
xchg
fsub
aas
shl
xor
or
popa
nop
int3
int3
push
or
sbb
imul
jecxz
xlat
xchg
push
and
clc
fsubs
inc
and
test
push
xor
adc
xor
pop
loop
pop
push
xor
cmc
pusha
popf
dec
mov
push
lods
inc
xor
idivb
out
mov
fistps
mov
add
xchg
arpl
mov
ret
out
scas
divl
jne
shlb
mov
lds
cwtl
cmc
pop
xlat
aad
mov
mov
aam
fistps
jo
popa
inc
and
mov
aaa
cmpsb
push
shrb
adc
mov
fwait
add
xor
sub
jp
lcall
imul
push
and
je
in
pop
testb
out
loopne
inc
cmpsb
fs
cli
pop
jl
testb
stos
or
popa
enter
divb
push
push
push
jle
adc
pop
pop
or
adc
sar
dec
sub
in
repz
lea
xor
stos
popa
subl
dec
mov
stc
push
dec
stos
popa
sbb
jg
adc
xor
mov
lods
jnp
sbb
mov
xchg
jbe
insb
insl
xchg
add
out
icebp
xchg
cmp
lahf
xchg
mov
sbb
addb
aad
in
popa
fldz
jmp
inc
call
insl
cmp
mov
sub
pop
mov
and
mov
out
clc
cmp
adcl
inc
into
xor
fs
cmc
adcb
ret
cmc
pop
pop
rorl
and
mov
scas
shlb
jl
shll
xor
fidivs
insb
mov
out
sar
ret
imul
and
xchg
fucom
xchg
sub
lds
mov
lahf
mov
pop
jno
mov
or
xchg
out
clc
mov
sub
mov
mov
adc
sub
mov
jno
mov
mov
xor
lods
sub
ljmp
xor
sub
dec
test
mov
xchg
xchg
sbb
push
lcall
sbb
dec
or
push
into
jp
lods
int3
cmp
mov
sti
xchg
jg
loope
mov
icebp
in
push
lcall
and
pop
std
xchg
int
sub
je
jl
jne
pop
andb
mov
xorb
jb
mov
daa
xor
pop
mov
xor
sahf
xor
aad
movsl
jbe
rcr
cmp
adc
inc
push
sbb
int3
jns
cmp
inc
imul
out
ljmp
test
xchg
mov
pop
testb
ja
xor
out
xlat
cs
rcrb
inc
dec
je
sub
ss
ret
xchg
arpl
mov
and
xchg
cs
or
mov
or
jo
and
cmp
bound
jle
pusha
jns
xchg
leave
adc
popa
mov
aas
pop
addr16
bswap
test
push
arpl
les
mov
fistpl
mov
pushf
or
inc
jge,pt
xchg
cmc
clc
rol
sbb
pop
out
mov
or
mov
adc
movsl
movsl
adc
jg
or
mov
imul
mov
rcrl
cli
out
cwtl
mov
mov
int
js
jnp
test
movsb
mov
sub
mov
test
and
and
test
stc
push
mov
mov
cmp
jno
imul
rcll
popa
mov
daa
sahf
scas
lret
push
dec
fnsaves
shll
cmp
xor
into
lret
adc
movsb
pop
xchg
hlt
lds
mov
xchg
push
push
insb
push
fsub
jb
and
leave
and
mov
xchg
and
fldl2t
add
pop
push
popa
cli
out
xor
inc
fs
sbb
cltd
cmp
inc
outsl
xchg
or
push
mov
subb
fadds
mov
sbb
jb
rep
out
aam
dec
and
xlat
mov
test
jae
cmp
adc
inc
and
lods
lock
add
and
rcll
jmp
lea
rcll
xor
dec
push
dec
xlat
pop
out
jl
test
das
js
or
cs
adc
lcall
cmc
xchg
xor
fldcw
pop
ja
inc
hlt
jb
int
pop
in
shrl
cmp
cli
add
sti
xchg
sbb
jecxz
mov
xchg
into
xor
je
xchg
leave
rolb
popf
pusha
pop
je
pop
adc
fsubrp
xchg
ficoms
cwtl
xchg
rorb
and
neg
push
imul
xchg
cmp
push
mov
pushf
into
mov
inc
in
pop
jnp
xchg
je
xor
pop
ret
mov
pop
mov
fmuls
xor
sub
cmc
dec
sbb
jmp
sarl
adc
imul
out
mov
jae
sbb
gs
vmwrite
into
mov
xor
cmp
dec
mov
xchg
xorl
adc
pop
xor
mov
inc
push
add
incb
loopne
cmp
inc
into
mov
inc
mov
push
int3
test
mov
rcll
outsl
addb
inc
in
pusha
test
dec
xor
in
hlt
xchg
jge
pop
ss
mov
popf
icebp
xchg
sbb
mov
iret
clc
jp
inc
cld
or
test
cmp
jle
out
jge
sbb
lret
out
mov
outsl
push
orb
sub
cli
mov
push
ljmp
lahf
adc
push
sub
stos
mov
xchg
iret
sbb
mov
test
shll
and
pop
or
lds
add
push
dec
lret
add
sub
js
scas
test
and
stos
lds
pop
fiaddl
imul
mov
jecxz
test
xchg
in
aad
mov
push
loopne
add
std
xchg
insb
addb
or
xchg
repz
dec
adc
jo
shlb
movsl
stc
jg
pop
fs
xor
adc
xchg
cmpb
dec
or
sub
leave
push
les
cmp
rcl
and
ret
out
mov
mov
in
sbb
jno
or
pop
and
push
fstpt
psubsb
cmpsl
rorb
and
in
sti
int
fisubrs
insb
pop
in
fistpll
dec
sub
ret
nop
pop
test
mov
cld
sub
sub
bound
je
or
push
lock
sub
loope
adc
add
dec
dec
xchg
loopne
ret
push
fistps
mov
sub
push
test
pop
repz
push
imul
stc
mov
jnp
scas
pop
test
inc
std
pop
lods
push
hlt
popf
pushf
lcall
fmul
xor
mov
test
mov
adc
jecxz
call
or
mov
icebp
imul
lret
jns
mov
and
mov
push
push
fiaddl
fcomp
fsubs
movsl
fsubrs
inc
xchg
add
rcll
jg
jnp
lret
adc
repnz
mov
pop
xchg
leave
sub
imul
outsb
inc
std
mov
sbb
aam
sbb
jne
insb
or
and
loope
insb
pop
mov
loope
add
sub
jae
or
pop
push
mov
call
jl
pop
pushf
push
jns
aaa
jmp
jb
sbb
outsb
out
pop
arpl
or
jno
cmp
sub
insb
lret
jl
mov
fadds
or
sub
lds
ja
push
sbb
mov
mov
push
scas
imul
cltd
addr16
rcrl
or
sub
cmp
imul
add
fistps
mov
cmp
lahf
sub
lock
inc
mov
sub
and
inc
inc
mov
arpl
xchg
push
hlt
ss
pop
ret
mov
cli
mov
xchg
jnp
sbb
cmpsl
fwait
mov
cmpsb
iret
lods
lcall
dec
jae
js
pop
inc
dec
xchg
test
jp
pusha
lret
dec
mov
fimuls
stos
adc
test
jno
pop
push
push
ljmp
inc
daa
pop
ja
fldenv
jg
fcmovnb
insl
imul
sbb
dec
xorb
mov
iret
int
lahf
sbb
adc
mov
jecxz
jne
push
cwtl
mov
add
fsubr
xlat
movl
das
push
add
mov
out
cmpsb
aad
imul
aam
push
push
fwait
or
cmpsl
pop
in
sbb
lret
outsl
fwait
or
fstpt
jmp
insb
daa
mov
pop
test
mov
into
inc
adc
in
push
enter
add
mov
add
push
mov
lret
mov
imul
lahf
or
pop
sub
mov
adc
dec
es
lods
ret
out
or
xchg
inc
jnp
sbbb
jbe
cmp
mov
ret
setno
in
mov
push
xchg
jnp
data16
add
movsl
pop
mov
adc
pop
dec
aad
jg
scas
repz
sti
inc
mov
jno
xorb
lock
xor
cwtl
lret
jns
repz
cmc
and
popa
inc
cwtl
popa
push
fwait
jbe
shlb
jmp
sarb
sarl
lods
mov
push
xchg
push
add
xor
insl
sub
lcall
xchg
gs
pop
das
add
push
push
cmp
cwtl
pop
xchg
ds
xor
add
or
mov
push
imul
stc
sbb
push
add
shlb
stc
mov
push
mov
push
aam
loopne
in
pop
inc
addr16
xor
cmp
mov
subb
aam
dec
lods
xchg
rcrl
shll
adc
pop
inc
pop
pop
dec
cmc
add
enter
out
adc
or
pop
out
shlb
xor
xchg
adc
cmpsl
jns
mov
jns
mov
lds
mov
out
xor
dec
bound
in
stos
sahf
les
sub
xchg
jge
jp
mov
xor
mov
sbb
mov
enter
mov
lea
inc
xacquire
mov
scas
insl
xchg
mov
sar
and
add
mov
loope
mov
in
mov
lret
fcoml
push
push
in
fisubrs
ds
and
lods
test
popa
daa
cld
lret
gs
addl
ss
fwait
movsl
gs
pop
fisttpl
cwtl
ret
adc
mov
cld
sbb
sahf
adc
pop
fwait
scas
mov
aaa
in
mov
outsl
cmpsl
ret
sub
jg
scas
aas
xor
paddusw
sbb
xchg
popa
add
les
xchg
jg
pushf
aas
in
cmp
data16
add
rolb
insb
inc
mov
sub
sti
inc
fldl
out
adc
or
push
cmp
or
es
jo
cmc
xor
pop
repz
in
cmp
lea
push
insb
js
es
flds
add
mov
fwait
or
mov
push
mov
mov
std
rorb
pushf
pop
sub
movsl
fisubrl
xor
xchg
pushf
inc
pop
sub
inc
and
dec
pop
js
inc
cmp
lock
jbe
push
add
sti
les
ja
lea
xchg
out
fucomp
lock
hlt
cvtdq2ps
sbb
scas
mov
or
movsl
xchg
decb
or
scas
out
pop
mov
data16
inc
pusha
sbb
dec
lea
mov
pop
mov
pop
xor
xor
sub
sbb
xor
mov
mov
mov
xor
fsubrp
fcmovne
in
push
stos
xchg
dec
mov
test
ja
push
out
push
and
fcomps
fidivrs
das
mov
iret
mov
sbb
mov
mov
push
movsb
xchg
xchg
and
xor
jne
lahf
test
xor
mov
or
push
or
sub
mov
dec
inc
jge
fsubrp
push
outsb
inc
adc
cmp
or
cmp
push
insl
push
push
in
rdtsc
jbe
nop
leave
fwait
cld
jno
mov
jno
out
test
enter
aad
inc
push
push
cmpsl
gs
xlat
sub
mov
cli
sbb
aaa
out
push
add
push
dec
aaa
pop
dec
jbe
mov
dec
movsb
outsb
jnp
dec
sti
icebp
jbe
add
stos
jnp
sub
dec
outsb
inc
cmp
ljmp
cwtl
cmpsb
mov
in
pushf
popa
mov
repnz
cli
mov
popa
fistpll
outsl
push
inc
mov
pop
dec
add
mov
leave
mov
jnp
mov
das
test
lock
push
dec
fs
inc
cmp
sbb
rclb
or
fdecstp
mov
decl
inc
ret
sub
scas
stos
inc
popa
in
jnp
jbe
sub
rcll
xor
mov
mov
fisubs
cmp
jno
cld
bound
mov
xchg
cmp
mov
xchg
into
cmpsl
addr16
pop
aad
push
jb
icebp
add
sub
aaa
mov
and
cld
aad
repnz
xchg
cli
dec
mov
mov
cltd
add
imul
and
jnp
add
sbb
mov
inc
sbb
cmp
push
sbbb
inc
sarl
cmpsl
ljmp
and
in
movsb
jle
sahf
xchg
daa
pop
cltd
or
addr16
mov
shl
xor
inc
bound
inc
jns
clc
dec
out
add
loope
and
enter
push
sti
repz
nop
mov
sbb
xor
lret
add
pop
aam
aaa
cmp
mov
daa
lods
xchg
add
mov
cld
sti
inc
ret
movsl
mov
test
jp
add
sahf
dec
shl
adc
sbbl
and
cld
fimull
mov
push
in
jno
pop
sub
testl
push
out
xchg
jbe
cmp
int3
lods
xchg
pop
in
jge
inc
jnp
mov
add
es
fwait
out
ljmp
xchg
pop
inc
inc
jo
ficoml
cli
insb
es
adc
pop
fs
bound
push
in
mov
mov
ljmp
mov
out
mov
push
outsl
call
scas
lahf
in
mov
xchg
or
lods
jmp
shl
and
mov
mov
xchg
jae
adc
fstl
lods
cmp
das
jl
xchg
mov
xor
mov
je
mov
and
jne
pop
shlb
clc
adc
cli
out
fidivl
jb
sbb
push
loop
daa
mov
jecxz
test
out
test
or
iret
test
out
cmc
xchg
dec
repnz
or
scas
cmp
cmp
mov
pop
sub
mov
inc
and
sbb
fwait
mov
cmp
dec
es
ret
adc
lea
ffreep
cli
cli
xchg
fwait
sbbb
out
cmc
in
mov
cmp
cmp
jecxz
push
adc
movsl
icebp
mov
out
rcll
mov
inc
sbb
dec
test
repz
sub
mov
mov
lahf
dec
or
ljmp
add
pop
mov
bound
out
movsb
pop
fimull
outsb
aam
mov
mov
fnstsw
jo
shrl
retw
scas
ss
out
aaa
xchg
pop
cs
leave
xchg
repz
fidivrl
mov
pop
and
jl
pop
sbb
icebp
push
dec
mov
mov
cmp
push
sbb
pop
push
aaa
xchg
and
push
and
jmp
push
and
cltd
xchg
push
inc
jg
cmp
dec
pop
adc
mov
mov
mov
test
xor
icebp
clc
cmc
test
dec
lods
mov
push
sbb
mov
push
jle
inc
push
push
rcrl
xor
ja
in
push
cmpsb
pop
jno
and
mov
sahf
call
cmpsl
xchg
nop
fidivs
xchg
loope
stos
jbe
inc
jmp
in
jne
jmp
in
mov
cmp
add
ficomps
jns
cmpb
cli
movl
pop
fs
repnz
lds
out
dec
out
std
cmp
lods
pop
out
les
xor
push
aad
mov
sub
add
cmpl
stos
mov
mov
add
dec
xor
movb
add
imul
push
mov
loopne
es
pop
es
lods
jno
pushf
rolb
pop
js
ss
push
or
dec
addr16
pmulhuw
ljmp
outsl
sbb
leave
add
jl
xor
sahf
jl
mov
into
cmp
imul
mov
adc
mov
std
scas
and
scas
popa
scas
push
mov
imul
mov
das
mov
cld
loopne
mov
mov
adc
fnstenv
insb
mov
loope
ret
xchg
ds
xchg
rorb
sub
inc
shrb
leave
icebp
cmp
pusha
add
jmp
mov
push
lods
jg
outsl
xchg
sub
or
sbb
orb
mov
fwait
inc
mov
sti
insl
int
xchg
add
cmp
pop
stos
pop
pusha
pop
int3
adc
jns
jmp
daa
or
es
dec
inc
mov
addb
add
add
std
popa
out
xor
fildll
aam
adc
xor
std
pop
sbb
inc
dec
mov
mov
jnp
movsl
push
int
mov
stc
das
sub
jns
fnstsw
sbb
testb
and
pop
andb
mov
pop
pop
repnz
adcb
jl
pop
insb
fildl
push
sbb
or
rcll
mov
jae
sahf
xchg
or
mov
jbe
lahf
fidivrl
and
mov
mov
sarl
cmp
xor
out
loope,pt
jbe
inc
sbb
out
mov
punpckhdq
xchg
dec
xor
out
stos
cmc
and
loopne
fstpt
div
stc
nop
fidivrs
push
stos
mov
mov
push
loope
lods
scas
pop
add
pinsrw
aas
or
mov
mov
adc
mov
mov
ror
add
sbb
mov
inc
mov
cltd
scas
pusha
pop
cmp
outsb
adc
mov
xchg
bound
mov
ret
xchg
mov
jmp
or
cwtl
adc
push
out
int
pop
cld
dec
pop
leave
imull
xlat
inc
xchg
aas
jle
ljmp
and
lods
test
std
rcrb
pop
cmp
lret
popf
test
fwait
add
jge
jmp
push
push
lock
pushf
mov
dec
scas
jge
mov
mov
loopne
sbb
jge
jb
xor
cmc
pop
xchg
pop
jl
dec
popf
ror
mov
pop
mov
dec
loope
adc
cmp
das
shll
addr16
es
add
mov
jns
andb
test
ss
or
imul
dec
loope
cmp
xor
fisttpll
enter
inc
pop
jp
pop
and
rep
lods
test
lods
into
imul
xor
divl
sbb
jle
push
sub
and
test
movsb
in
cmpl
xchg
popf
add
cwtl
jne
mov
lahf
testb
jecxz
pop
sbb
xchg
inc
inc
dec
push
mov
sahf
shld
movsb
and
test
dec
int3
shll
adc
sbb
fdivrs
inc
into
aam
jge
inc
test
xchg
jle
jge
clc
adc
inc
sub
aas
out
adc
mov
out
xlat
aas
fisttpl
sub
dec
pop
outsl
sti
test
lods
ds
xchg
test
sub
test
sub
mov
sub
jecxz
sbb
xor
and
fsts
jo
in
dec
mov
leave
push
aas
push
sti
adcl
lods
mov
pop
jl
js
jae
dec
in
jae
adc
mov
iret
adc
bound
scas
cmp
jae
adc
cltd
movsb
sub
add
or
clc
and
fsubrl
aaa
cmp
pop
aad
pop
fwait
sti
cwtl
push
mov
jp
push
sub
push
mov
jle
test
sub
jo
lea
scas
mov
dec
or
stos
lret
cmp
je
push
and
jbe
xlat
push
ror
add
adc
call
lea
aas
lock
stos
icebp
adc
fidivrl
mov
into
and
int
cmpl
sbb
fdecstp
mov
daa
sub
jnp
adc
mov
inc
jo
aaa
xor
loopne
jp
cmpsb
and
jmp
shr
jne
mov
pop
out
or
in
adc
xor
dec
dec
test
mov
add
data16
pushf
mov
mov
imul
cs
popl
rcll
cmovge
mov
jp
imul
mov
mov
leave
pop
es
dec
test
mov
adc
addr16
mov
add
mov
ja
cmovs
jae
mov
out
fsts
or
sub
mov
loopne
gs
cmp
fistl
xor
add
xlat
shl
or
inc
push
push
leave
dec
fcmovne
sub
inc
mov
mov
jno
jmp
lcall
pop
divl
add
jmp
pop
sbb
mov
sbb
or
in
jo
pusha
jo
xchg
inc
sub
jge
repnz
pop
jo
fildl
int
rolb
or
cmp
mov
cmpsb
sbb
mov
xor
cmp
aad
repnz
and
mov
test
outsb
fisttpl
xlat
inc
jle
lds
jmp
leave
push
aam
dec
cmp
ret
ret
mov
add
jmp
push
popa
int3
out
mov
sbb
or
and
mov
jae
addr16
inc
push
popf
jb
jnp
stos
lret
jns
xor
scas
por
xchg
sbb
sbb
fs
xchg
and
and
pop
mov
jno
mov
push
and
shrl
in
out
popf
or
xchg
mov
xor
mov
add
fmuls
adc
jo
mov
outsb
sbb
pop
xlat
outsl
adc
or
sbb
mov
mov
pop
or
inc
xchg
cmp
xchg
xor
inc
adcb
jmp
or
faddl
sbb
push
mov
loopne
push
jecxz
fdivs
mov
lods
add
fstpt
std
ss
call
xchg
mov
cmp
insl
stos
imul
dec
jne
testl
mov
aam
xlat
inc
jg
out
mov
clc
cmpps
sbb
out
mov
fildll
clc
push
pop
mov
outsl
daa
sbb
scas
sbb
aam
xchg
xchg
out
sti
sbbl
adc
xchg
mov
xchg
mov
add
xchg
addl
xchg
xchg
push
mov
push
push
dec
inc
into
ret
cmp
andb
std
or
test
repnz
addl
add
icebp
hlt
fildl
dec
pushf
cmp
orb
out
fcmovu
test
insb
dec
sub
das
movsb
jne
dec
push
and
sub
stos
repz
push
stos
xchg
arpl
push
lods
lcall
stos
xorl
xchg
mov
add
es
out
mov
adc
in
adc
mov
cmp
push
int3
pop
iret
js
mov
orb
jne
pop
jns
out
insb
inc
sub
icebp
mov
xor
sbb
out
xor
leave
aaa
push
mov
outsb
mov
fucomp
push
adc
mov
jecxz
push
inc
shlb
addr16
push
scas
insb
cwtl
shll
inc
pop
std
in
addr16
in
jmp
sub
jecxz
insl
push
test
push
mov
ret
jo
cmc
inc
rclb
test
in
cs
jne
es
cmp
aam
clc
mov
xchg
jo
iret
repnz
inc
fs
lret
insb
shl
jecxz
fs
out
std
sbb
jae
out
into
aam
jl
jb
test
adc
pop
stc
in
mov
loop
push
inc
sbb
shlb
push
ds
mov
shlb
lret
mov
clc
insl
sbb
psubd
in
or
lds
adc
adc
js
mov
inc
lds
pop
ds
cld
jns
pop
and
mov
ret
pop
loope
jno
scas
xchg
xchg
and
xchg
lock
xchg
jl
add
sahf
lcall
lea
sbb
push
adc
fdivl
mov
and
adc
sbb
stos
in
jmp
jle
push
out
loopne
insl
mov
xchg
push
pop
mov
xchg
fcoms
movsl
xchg
push
cmpsl
test
shr
sbb
xchg
mov
inc
sbb
add
push
insl
je
ljmp
enter
ficoms
dec
jb
and
repz
push
cmpsb
cmp
insb
fcmovne
pusha
out
mov
sub
mov
int
dec
sub
dec
mov
xchg
aam
xchg
mov
mov
insl
xor
pop
inc
imul
fs
pusha
cmpsb
dec
cs
dec
jecxz
bound
mov
rcll
and
cltd
decl
mov
cli
out
xor
popa
loop
jmp
pop
cmc
movsb
jle
cli
in
xchg
push
andb
fcomps
ljmp
pop
xor
scas
into
lock
dec
andl
cmpl
jmp
gs
test
sarb
or
cmp
sub
push
shlb
ret
mov
sbb
push
inc
and
inc
out
or
sub
in
mul
rclb
mov
inc
outsb
xor
enter
daa
inc
jnp
mov
and
into
popf
and
cmp
ret
flds
es
dec
adc
add
sbb
shrb
shll
in
dec
mov
jne
xor
jge
mov
pop
cmp
dec
or
test
psrld
or
cld
mov
push
lcall
in
cmpsb
popf
push
push
mov
stos
cmp
in
data16
rorb
repnz
iret
sub
dec
pop
in
adc
popf
push
shrl
lahf
or
lods
out
jl
mov
cmp
movsl
in
mov
repnz
roll
jge
in
inc
mov
or
and
mov
inc
ja
out
shl
roll
mov
movsl
cmp
or
dec
popf
xlat
lahf
in
adc
add
data16
jp
xchg
cmc
pushf
nop
cltd
jmp
adc
mov
mov
inc
cmp
sub
loope
cli
sub
mov
xchg
fs
shll
sti
push
dec
les
aas
lea
sub
or
mov
stc
fs
sarl
ret
rolb
cs
cwtl
mov
loop
out
sbb
add
nop
addb
dec
std
imul
imull
and
outsl
mov
addr16
pop
jle
in
or
or
clc
rcll
outsb
mov
jge
dec
add
jp
test
es
or
ja
das
push
dec
aad
sub
pop
mov
insb
aaa
mov
pop
stos
mov
pop
add
fistpll
cwtl
inc
popf
pop
dec
loopne
lcall
pop
add
dec
jae
rcl
fs
adc
push
dec
xor
call
lret
fistpl
fidivs
xchg
jne
sbb
and
fwait
test
mov
ret
jmp
mov
jl
fbld
aas
sahf
dec
push
mov
jmp
stos
push
loope
ret
call
js
xchg
lock
cli
das
sbb
mov
out
inc
out
jae
cld
dec
mov
test
ja
bnd
in
push
pop
xlat
jecxz
sbb
sbb
fistpl
cmpsl
sub
jge
dec
or
inc
xchg
mov
loope
sub
clc
mov
inc
cld
pop
leave
js
xor
push
pop
pop
jp
icebp
cmp
and
leave
xchg
pop
mov
cmp
in
xchg
outsl
jb
dec
inc
mov
pop
sbb
xchg
cwtl
dec
pusha
loope
push
mov
int3
fistps
movsb
lcall
lret
js
les
mov
lock
int3
shl
sub
sbb
and
mov
push
dec
popf
pusha
loope
mov
mov
mov
movsl
inc
dec
in
inc
xlat
adc
pop
movsl
loop
inc
push
cmpsl
push
pop
testb
jg
dec
jbe
cltd
iret
cmp
or
insl
push
data16
clc
icebp
and
dec
int3
cltd
mov
call
iret
sbb
jmp
xchg
cwtl
aas
fistl
push
xor
shl
push
push
fnstsw
sbb
js
iret
cmp
fists
mov
dec
sbb
cmp
inc
movsb
es
cmp
repz
ss
icebp
fidivrs
add
outsb
sub
and
adc
and
jo
xchg
jae
sbb
sbb
loop
mov
into
xor
aad
sub
pop
stos
mov
test
in
jnp
jno
rcl
mov
jmp
push
mov
and
lahf
xor
dec
cmp
xor
xor
mov
sbb
js
xor
je
xor
lea
cmp
pushf
jmp
jg
xor
pop
rorl
jl
fwait
xchg
mov
pop
stc
mov
or
in
inc
xchg
sbbl
scas
leave
fsub
jmp
mov
cld
subb
sbb
int
push
in
push
cli
sub
and
xchg
mov
sbb
sub
shl
mov
dec
and
xchg
mov
sbb
xchg
xlat
dec
or
lret
inc
repnz
mov
and
cmp
xchg
dec
test
inc
aaa
xor
jae
adc
sti
jp
leave
js
lahf
mov
test
mov
rcl
mov
lahf
jl
call
out
pop
idivb
mov
orl
add
adc
out
jo
test
add
lahf
popf
call
mov
mov
xor
dec
add
adc
fidivrl
ja
push
mov
outsb
adc
xrelease
xor
sarb
jge
std
xor
xchg
push
insb
xchg
inc
movb
mov
push
pushf
inc
icebp
mov
xchg
and
jnp
stc
cmpsl
mov
outsb
push
and
lods
rolb
out
data16
inc
lret
add
aam
mul
mov
push
cli
stos
or
inc
mov
mov
cmpsl
test
sti
pusha
cli
popl
cltd
and
call
mov
movsl
dec
sub
xlat
aam
lods
mov
fwait
out
sbb
iret
pop
popf
inc
nop
cmp
ljmp
sbb
dec
or
mov
mulb
in
loope
sub
test
clc
adc
push
dec
into
sbb
inc
pop
setne
sbb
xchg
jae
je
mov
push
jns
add
pop
pop
sbb
cmp
insb
aad
xor
out
push
xor
push
mov
jle
cmp
and
cmp
mov
lcall
xor
jl
test
roll
testb
in
sahf
adc
jnp
fiaddl
movl
notl
lcall
test
ret
in
js
loop
mov
test
in
stos
sbb
aam
aaa
pop
lret
dec
icebp
jbe
or
pop
mov
jg
sub
add
in
int
ret
int
push
pop
adc
sub
cmpsb
adc
out
roll
call
sbb
or
xchg
outsl
imul
and
rclb
pushf
mov
cmc
jg
test
lret
dec
std
mov
rcrb
lret
sbb
and
stos
out
notl
sbb
pusha
dec
sti
inc
lahf
or
pop
popa
jnp
ds
fldenv
cld
in
add
xchg
pop
int3
aam
mov
test
pop
cmpl
sbb
mov
stc
ds
or
jae
stos
imul
jge
inc
aas
or
sub
dec
xorb
test
adc
mov
imul
les
arpl
sahf
xchg
sbb
push
out
rclb
out
rolb
adc
and
jnp
cmp
xchg
out
test
push
sbb
roll
jmp
mov
addb
jo
dec
lock
loope
cli
call
dec
jmp
xchg
sbb
fcmovne
push
mov
out
pop
mov
flds
sub
cs
cltd
inc
add
loopne
push
adc
int
subw
cltd
dec
outsl
pop
mov
out
popf
test
push
lds
and
sbb
notl
pop
or
mov
sbb
out
mov
hlt
push
or
je
pop
push
pop
lods
mov
stos
sahf
sub
mov
cmp
mov
jno
sbb
adc
pop
dec
jmp
push
mov
mov
inc
pop
or
xchg
mov
sbb
in
loop
mov
out
adc
push
lds
xor
out
xchg
je
mov
adc
popf
int3
jmp
fsubrs
scas
movsb
je
das
xchg
rcrb
out
in
push
mov
push
push
aaa
out
dec
loope
cmp
dec
shll
sub
test
add
andb
sar
push
mov
je
mov
test
pop
les
repz
jecxz
and
loope
sub
ds
out
jbe
lcall
xor
out
adc
push
pop
addr16
shr
sbb
lret
and
adc
dec
push
dec
cltd
bound
sub
sbb
xchg
push
push
fists
out
pushf
sti
mov
add
aad
cmpsl
lds
sbb
adc
mov
ret
in
mov
cmpsb
and
test
mov
xchg
cwtl
lods
xor
pop
sahf
add
adcb
aam
jecxz
or
dec
sarl
xchg
arpl
cmp
lret
in
xor
push
add
fcos
je
push
push
sbb
and
lock
sahf
shrb
test
cmp
outsl
mov
icebp
adc
mov
pop
loop
popa
stos
adc
in
test
jp
sbb
xor
push
cmp
cmp
cmpsb
shll
add
aam
adc
push
jecxz
mov
or
fisttps
pop
icebp
or
lret
sbbl
mov
negl
movsl
test
pop
jns
sbbb
popa
jae
mov
cmp
pop
pop
cli
test
sti
lcall
inc
and
mov
loope
call
add
pop
jo
negl
in
stos
leave
popa
notb
repz
daa
xchg
sbb
sbb
ss
inc
cmp
fiaddl
add
sub
test
aaa
xlat
dec
sti
pop
sar
mov
xchg
addr16
push
cmp
dec
push
or
xchg
in
push
repz
xor
popa
or
push
cmp
cmpsb
data16
dec
inc
movsl
mov
lods
or
popf
cltd
and
nop
sbb
lods
pushf
fcomps
mov
dec
adc
xchg
stc
mov
jnp
popa
lcall
int
inc
cmp
add
dec
mov
push
mov
int
mov
cmpsb
rolb
sar
or
mov
movsl
fisubrl
cltd
iret
xor
push
or
faddl
dec
jp
jno
xor
dec
movhlps
cmp
jo
addr16
push
and
mov
cmp
fisubrl
add
or
pop
int
mov
jno
test
pop
or
pop
add
dec
xchg
xchg
rorl
in
xchg
je
sub
jb
scas
in
sub
addr16
dec
mov
or
jecxz
lret
cmp
int3
mov
aas
sbb
imul
mov
jecxz
ret
rcll
or
movsl
xor
outsb
popf
dec
clc
pushf
out
aas
sbb
mov
or
jnp
dec
inc
sub
lds
subl
add
movsb
out
push
add
jmp
fwait
iret
inc
pop
lods
roll
test
cwtl
xchg
mov
clc
pop
fs
fmul
popa
jmp
stos
arpl
shrl
enter
scas
lock
pop
adc
popf
adc
nop
xchg
jo
xchg
in
test
das
inc
jmp
stos
push
inc
repz
inc
mov
mov
jg
pop
cmovs
ljmp
addl
push
aam
lods
adc
push
arpl
add
loope
push
in
hlt
rcll
dec
mov
out
int3
jb
and
into
js
nop
or
lods
test
shrb
xor
cmpsb
xchg
ds
mov
loop
into
push
push
xchg
cwtl
xchg
cmc
sbb
push
loopne
lods
int
shl
and
popa
push
cltd
test
and
aaa
xchg
push
mov
loopne
lods
pushf
ja
dec
jmp
es
jp
xchg
and
movsl
imul
dec
xchg
dec
mov
dec
call
mov
ja
xchg
sti
cmp
mov
adc
loop
jp
dec
arpl
dec
scas
xor
pop
mov
leave
pop
gs
sbbb
aas
and
push
fwait
mov
cmp
mov
dec
hlt
xor
enter
fmuls
mov
outsl
les
inc
nop
mov
cwtl
outsl
lahf
mov
loopne
leave
push
jae
fucomp
bound
test
hlt
xor
popf
xor
dec
outsl
popa
mov
jno
int3
sbb
ret
pop
dec
loope
out
callw
mov
mov
push
inc
cmp
cwtl
dec
cs
xor
adc
loope
test
jns
pop
dec
xor
loope
xor
dec
insl
and
dec
xchg
or
test
push
inc
enter
fdiv
push
push
dec
pop
jge
mov
dec
inc
iret
pop
and
jl
aaa
mov
sbb
cmp
aad
sbb
aas
adc
imul
inc
icebp
add
xchg
aas
out
dec
cmp
and
push
lods
or
xchg
sarb
mov
sarl
push
mov
gs
xchg
xor
pop
pushf
data16
into
xor
sbb
add
rorl
jp
xchg
gs
scas
mov
fdivrl
dec
jnp
mov
ficompl
jmp
adc
push
movsl
mov
pop
adc
fsts
cltd
xchg
inc
adc
cmp
mov
xchg
add
iret
sahf
mov
incl
push
fcmovu
push
aam
push
dec
push
lret
pop
jne
lods
inc
push
nop
fisttps
push
push
fcoms
aaa
lods
daa
xor
in
shlb
fbstp
and
test
mov
inc
add
stos
or
xchg
and
in
mov
fidivs
dec
insb
push
vpminuq
sbb
push
inc
ljmp
fs
lods
mov
mov
xor
jbe
mov
xor
mov
jge
outsl
in
mov
or
pop
mov
and
in
adcl
aam
sahf
pop
cmpsl
mov
push
test
mov
mul
cli
jge
fwait
stos
dec
nop
mov
sbb
ja
outsb
rorb
and
push
imul
mov
push
test
bound
adc
mov
and
outsl
sbb
dec
fiadds
push
jg
push
lods
sub
sub
and
fmul
out
call
addr16
insb
cmp
mov
mov
mov
aad
mov
stc
cmp
lods
sub
pop
jnp
shll
dec
and
mov
sbb
add
mov
jno
or
jl
ds
push
inc
clc
outsl
and
inc
ret
inc
push
adc
clc
add
sub
lcall
jo
stos
xor
ds
mov
jno
inc
mov
xor
fisttpll
add
cmc
inc
push
mov
nop
push
sahf
mov
ret
adc
add
cmpsb
and
push
fildl
add
imul
fists
shl
outsb
pushf
into
push
push
inc
sub
dec
test
in
pop
lahf
jmp
xor
je
jb
orb
and
and
rorb
out
outsl
or
sbb
sub
lcall
outsl
add
repnz
jmp
ss
cs
dec
add
dec
aam
call
lods
push
test
scas
and
sub
movsb
xor
in
pop
ljmp
cmp
sub
xchg
push
aaa
sbb
icebp
xor
adc
inc
sahf
sbb
fisttpll
pop
pop
or
inc
sub
adc
jno
cmpsb
mov
outsl
mov
xchg
arpl
or
mov
imul
jns
jp
lcall
jnp
inc
inc
enter
aas
cs
imul
ljmp
mov
les
xor
adc
int3
fdivrl
mov
scas
aam
mov
stos
iret
jge
mov
ret
and
push
test
or
lahf
add
repnz
xor
shl
je
arpl
pop
lahf
es
mov
fidivs
es
mov
xor
iret
shlb
pop
mov
or
push
hlt
aas
inc
cwtl
pop
test
mov
add
aad
aas
inc
xchg
push
stos
sub
fmuls
and
adc
inc
popl
adc
in
fld
pop
fimuls
arpl
mov
hlt
lock
out
and
movhps
mov
daa
adc
cmpsb
or
inc
je
subb
test
das
jns
adc
test
cwtl
loop
inc
adc
xchg
xor
mov
pand
stos
in
add
pop
lea
xlat
ljmp
sbb
or
jp
stos
fadd
adc
dec
stc
cmp
dec
or
rcll
test
xchg
inc
xchg
in
jp
repnz
sbb
nop
movsb
or
stos
pop
adc
mov
cmp
xchg
sub
clc
rorl
or
mov
js
inc
and
dec
ret
loop
xor
jl
fwait
cmp
sbb
enter
enter
xor
xchg
arpl
dec
sub
mov
out
and
fs
xor
pop
cwtl
xchg
mov
scas
test
mov
call
dec
adc
daa
ret
lcall
pop
sub
not
or
lcall
mov
inc
pop
inc
scas
or
orl
pop
dec
cmp
shrb
push
mov
test
mov
cwtl
cmpsl
inc
leave
and
out
lahf
mov
and
cld
sahf
and
inc
jnp
push
fisttpll
pop
push
mov
mov
in
mov
mov
fcmovnbe
call
sub
stos
sub
fnstcw
mov
xchg
int3
push
sbb
sub
push
fstpl
sub
out
in
push
xor
out
and
mov
cmp
inc
inc
cmc
test
sub
cmp
mov
and
insl
aaa
mov
mov
outsl
addr16
lret
xor
inc
fisttpl
cli
icebp
cli
and
lret
testl
enter
ret
int3
sub
mov
fldenv
mov
movsl
cmp
inc
stos
inc
mov
sub
lret
aad
fdivl
js
pop
push
adc
in
lea
and
lcall
push
iret
fdiv
in
lcall
jg
ss
out
mov
push
xchg
jnp
int3
xchg
or
inc
in
pop
adc
sbb
test
dec
pop
mov
out
sbb
into
mov
outsb
push
sti
pushf
mov
jo
cmp
mov
pushl
dec
push
loopne
mov
leave
cs
dec
jmp
imul
add
push
xchg
std
cmp
mov
mov
aas
outsb
sbb
pop
jmp
subl
inc
out
push
pushf
sbb
int
mov
gs
inc
xorb
dec
mov
test
push
pop
mov
xor
or
pop
aaa
pop
movsb
add
and
hlt
adc
sbb
sbb
xchg
jle
xchg
std
cmpsb
inc
and
push
scas
movsb
mov
sub
call
in
xchg
inc
dec
and
adc
cmp
insb
pop
cmp
and
nopl
sub
lret
push
jb
xor
rcrb
push
enter
push
inc
jl
pusha
adc
arpl
sub
and
iret
add
ja
add
aad
sub
jg
add
pop
les
and
xor
pop
xchg
sub
inc
in
pop
insl
packsswb
fisttpl
lret
addr16
shll
sbb
xchg
jno
and
sti
mov
xor
add
in
dec
shl
xchg
xor
push
sti
xor
sub
jge
inc
and
je
cs
sbb
mov
mov
pop
sub
xchg
repz
push
push
dec
mov
xchg
push
dec
jl
push
pop
jno
cltd
cmc
leave
mov
xchg
inc
inc
aam
jl
xor
jp,pn
jns
pop
je
push
popa
mov
dec
repz
sbb
adc
mov
lds
mov
add
outsl
js
lds
or
dec
rolb
movsb
das
inc
pop
popa
cmp
sahf
sbb
push
aad
adc
ss
add
cmc
js
pop
push
mul
push
cwtl
mov
lahf
repnz
xchg
sahf
mov
addb
jg,pt
xor
add
add
add
xlat
jp
outsb
imul
adc
jge
lock
lods
pushf
aad
idiv
jno
scas
fildll
es
pop
leave
iret
dec
bound
lds
sahf
nop
incl
inc
inc
push
sti
cmpsb
add
pop
and
mov
adc
add
fsts
push
ret
xchg
popl
mov
adc
aam
cmp
repnz
fwait
cmpsb
inc
push
repnz
jbe
popf
and
bound
rorl
jns
test
cmc
mov
das
int3
sub
lret
mov
and
imul
mov
push
test
lds
ret
pop
add
dec
or
mov
mov
fwait
pop
fstpl
rcl
xor
stos
aad
loopne
xchg
rol
add
or
call
mov
xchg
pop
cmp
add
adc
push
inc
cmpsb
daa
lock
xorb
imull
lahf
xchg
test
inc
ss
add
inc
ficompl
bound
mov
cmp
mov
fidivl
pop
inc
out
pop
xchg
repnz
int
push
es
cmp
cld
xor
pushf
int3
aad
ds
fcompl
mov
andl
mov
decb
outsb
xchg
fucomp
test
jmp
jb
gs
fs
xchg
sub
dec
and
enter
jmp
outsb
div
inc
push
mov
xor
cli
pop
andb
test
repz
hlt
inc
repnz
rorl
mov
xor
lods
mov
inc
cmp
subb
movsl
in
adc
add
addb
mov
outsl
je
jnp
mov
mov
mov
jge
stos
push
xor
and
cmp
insb
ss
aam
scas
popf
xor
hlt
test
sahf
inc
movsb
hlt
ds
mov
movsb
fwait
add
dec
andl
movsl
packssdw
stos
xor
pop
xchg
inc
in
pop
inc
push
test
push
shll
inc
push
cs
fadds
bound
sbb
push
adc
lock
cmp
lds
xor
xor
xchg
imul
xor
repz
ljmp
fisttpl
in
int3
sub
pushf
cmp
ds
test
rolb
aas
out
or
insb
or
adc
inc
cmovb
inc
xchg
add
mov
iret
sahf
mov
mov
pop
cmpsb
jns
pushf
jae
and
mov
in
insl
push
mov
bound
pop
or
in
movsl
mov
mov
push
je
movsb
xchg
or
shll
scas
nop
out
sbb
xlat
adc
cltd
inc
xchg
lods
xchg
or
mov
and
jne
call
aas
ja
rcll
test
xchg
cmp
mov
sbb
jo
out
hlt
jge
in
ja
or
push
push
js
and
jecxz
inc
fisttpll
icebp
aad
aaa
ret
outsl
mov
leave
dec
daa
test
frstor
adc
mov
pop
pop
pop
mov
loop
jo
enter
nop
or
jae
pop
jnp
push
sahf
in
cs
push
inc
pop
das
pop
cli
cmp
mov
push
std
cmp
xchg
and
sbb
sbb
outsb
fcompl
das
cmp
shll
ret
xchg
jecxz
mov
lea
stos
cmpsl
mov
dec
push
ljmp
add
cmp
faddl
or
ret
inc
shl
add
in
rolb
out
adc
mov
enter
addl
ret
inc
mov
mov
jno
sbb
out
sub
and
inc
xor
jbe
js
pop
push
cmp
sub
pusha
push
lcall
jecxz
jb
mov
fdivl
xchg
pop
int3
loopne
cld
insl
dec
pop
fnsave
jmp
jnp
mov
push
jae
cmc
incb
jle
xorb
dec
sbb
scas
jg
mov
push
mov
outsl
repnz
ljmp
push
shrl
jg
dec
inc
ss
fptan
aam
mov
dec
sbb
test
inc
push
ja
lret
fcoml
pop
xor
sub
push
je
dec
test
imul
clc
cmpsl
ret
lahf
fisubrs
scas
imul
jl
mov
mov
push
sub
adc
scas
das
cmc
jne
push
mov
push
mov
cmp
out
pop
xor
add
inc
in
rcr
rcrl
cmpb
mov
mov
adcl
jo
clc
ja
rcrl
cs
subb
xchg
gs
fucom
mov
xchg
xchg
rcrb
dec
nop
and
dec
mov
mov
in
cmp
inc
out
xlat
in
cmpsl
jno
sti
lret
dec
shr
cmp
jmp
lret
lds
cs
push
or
xchg
stos
sbb
dec
jo
popf
aad
xchg
mov
mov
jecxz
lret
out
movsl
and
mov
sbb
shrl
insb
jg
cld
addr16
sbb
pop
adc
jecxz
cmp
mov
mov
add
mov
int
int3
mov
mov
jno
xor
in
lahf
or
scas
xlat
cmp
shrb
dec
or
arpl
jmp
xchg
inc
mov
xor
mov
inc
mov
into
pop
and
cmp
fdivrs
jne
mov
push
dec
das
or
adcb
jb
into
mov
fimull
pusha
in
dec
adc
jle
cmp
jne
ret
mov
pop
mov
adc
shl
mov
cmp
loop
and
aaa
push
loope
int3
fs
in
repnz
and
mov
idiv
daa
movsl
or
or
addb
jns
inc
add
mov
mov
cmc
aam
test
andl
repz
out
mov
adc
mov
fwait
add
jecxz
push
outsl
sub
xchg
jb
outsl
mov
push
mov
mov
or
inc
gs
cmp
fsubr
jbe
aaa
shll
push
jno
jle
fdivr
mov
adc
dec
arpl
aaa
lock
pusha
mov
xchg
int3
pop
outsb
sbb
into
mov
jg
mov
cli
pop
ss
popl
xor
loope
push
mov
mov
pop
mov
in
imul
imul
cmpb
inc
popf
ds
pop
mov
sub
fxtract
aas
sub
mov
ljmp
mov
daa
ret
or
mov
mov
jle
mov
lcall
mov
data16
sbb
lret
sbb
fsts
or
test
cltd
and
push
lret
inc
dec
popa
pop
mov
sub
push
or
out
adc
pmaxsw
xcrypt-ecb
cmpsl
push
inc
push
cwtl
shlb
icebp
aam
jnp
mov
ljmp
push
xchg
cmp
arpl
dec
lods
cmp
scas
adcl
push
jae
push
pop
fldcw
pop
je
enter
scas
aaa
dec
mov
pop
mov
hlt
stos
sub
xchg
xor
or
sbb
dec
lahf
or
popa
popf
adc
mov
mul
mov
jnp
dec
jno
cs
mov
loop
dec
pop
or
mov
jbe
jns
stos
inc
ds
nop
ss
or
mov
test
mov
enter
jmp
xor
sbb
push
sub
xor
adcb
pop
mov
push
loop
lock
jns
mov
add
jle
pop
roll
cmp
pop
adc
push
sahf
repnz
or
ljmp
out
fiadds
sbbl
fisttps
sub
mov
loope
add
daa
pop
addr16
sub
dec
mov
out
lahf
dec
cmpsl
into
insb
push
mov
pop
ficoms
cli
pushf
test
jecxz
popf
imul
adc
fnstsw
pop
cmp
popa
xchg
mov
clc
lret
adc
adc
push
dec
sbb
add
dec
fiadds
ds
jns
sub
mov
fcmove
fcoml
loopne
mov
fdiv
loop
and
or
dec
add
xor
mov
ljmp
jg
jne
sub
push
in
inc
inc
and
jbe
xor
aaa
inc
jg
push
pushf
xor
imul
inc
and
shlb
cmp
lss
testb
sarl
cld
mov
fdivs
ja
lret
iret
movsl
push
mov
pushf
aam
sub
test
push
xchg
dec
int
pushl
xchg
mov
lret
ret
popa
out
sub
mov
and
and
inc
testl
out
add
call
xor
popf
stc
add
mov
or
pop
jno
ljmp
sbb
xor
xor
push
push
sub
mov
mov
in
stos
pop
mov
mov
pop
pop
sbb
cmp
cs
push
mov
cmc
fwait
sbb
mov
inc
pop
cmp
in
test
loope
xor
fiadds
mov
outsb
loopne
shrb
cltd
pop
inc
push
addr16
push
cs
and
push
test
insb
rcll
movsl
cmp
push
stos
jns
mov
sub
mov
cmpsb
repnz
test
mov
lds
mov
out
fisubs
lcall
dec
outsl
cmp
test
mov
mov
stos
lock
inc
cmp
dec
inc
stos
adcl
xchg
cmpsb
mov
mov
enter
mov
jp
push
mov
cwtl
out
fdivr
pop
inc
fwait
cmpsl
dec
push
scas
divb
frstor
push
jge
pop
push
outsl
lea
sub
sub
test
jno
aad
subb
mov
mov
xlat
jle
dec
sbb
repnz
or
mov
mov
pop
ja
aas
imull
add
add
or
jmp
aam
das
jo
jbe
adc
jle
xchg
pop
jnp
dec
stos
jp
aad
add
ret
lods
push
fidivl
pop
pop
xor
aam
inc
push
push
push
xor
sbb
prefetchw
pop
ljmp
dec
testl
out
dec
push
push
inc
xchg
jge
daa
test
and
fisttpl
add
sbbl
out
shr
mov
adc
adc
in
lea
fiaddl
mov
jno
scas
xchg
inc
and
cmp
adc
push
pop
push
in
xchg
push
jg
jge
test
jge
sub
dec
icebp
pop
jno
mov
call
cmc
mov
and
cmp
xlat
ds
arpl
mov
out
push
xchg
ret
movsb
xor
imul
mov
xor
cmpsb
je
popf
and
shl
addl
into
les
and
popa
into
inc
mov
xchg
mov
aam
fsubrs
jmp
lods
adc
dec
and
mov
mov
pop
repnz
fisubrl
aas
shrl
jl
mov
jns
push
hlt
fistl
dec
pop
outsl
dec
notb
mov
shlb
in
push
popf
cmp
lret
aad
mov
stos
js
sbb
test
adc
sub
push
cli
das
sbb
lods
jl
push
aaa
addb
dec
pop
jg
imul
or
repz
sbb
pop
lods
inc
das
test
add
cmp
and
mov
sbb
jle
mov
dec
xabort
les
inc
sub
cmp
mov
dec
fstps
mov
stc
mov
cli
add
mov
rorl
adc
push
out
sarl
add
xor
jnp
xchg
ljmp
mov
cmp
mov
hlt
xor
xchg
cs
hlt
inc
inc
std
cmp
loopne
adc
xor
adc
fisubrl
lahf
jge
and
scas
add
pop
xchg
add
pop
pop
popf
hlt
lcall
xor
out
je
mov
pop
or
int3
mov
pop
add
lret
mov
cli
xchg
mov
sbb
mov
negb
pop
push
xchg
sub
dec
mov
mov
and
sbb
mov
jecxz
hlt
cmc
sub
push
push
mov
cld
nop
mov
sbb
add
iret
movsb
ljmp
imul
jnp
jle
std
inc
mov
add
push
stos
dec
inc
mov
insb
xchg
sbb
sub
or
fnstenv
outsb
pop
mov
mov
xor
out
out
iret
jp
dec
dec
rcl
bound
mov
push
dec
ds
and
rcrb
hlt
scas
cli
jge
loop
inc
pop
mov
cmp
call
stc
pop
lock
or
mov
mov
dec
push
mov
mov
fnstsw
and
es
adc
jl
inc
or
leave
or
mov
mov
fldenv
andb
dec
dec
mov
loop
mov
cmp
out
movl
rdpmc
pop
data16
scas
cmpsb
insb
gs
xor
inc
push
rcr
fcoms
mov
sbb
ja
mov
mov
pusha
jecxz
mov
test
dec
ja
inc
pop
jo
cmc
jnp
es
adc
mov
pop
ja
int
inc
pop
repz
pop
in
mov
lret
lea
mov
leave
or
nop
mov
jmp
dec
dec
aas
mov
fistpll
in
sbb
jbe
daa
shll
inc
test
call
cmc
sub
repz
push
test
stos
push
jle
push
in
add
mov
dec
data16
pop
sbb
add
lds
icebp
mov
push
xchg
mov
cmpsl
fwait
or
lret
adc
lahf
imul
mov
shll
mov
ja
cmp
sub
adc
push
shl
test
popa
movsb
sub
adc
cmp
sub
add
cli
jns
adcl
js
or
adc
sbb
inc
ficoml
jo
mov
rolb
iret
or
pop
xchg
stc
xor
in
push
lods
sahf
stos
js
arpl
ss
adc
imul
insl
dec
dec
push
and
xchg
push
add
adc
or
imul
fldl
popa
add
sub
and
dec
icebp
mov
push
and
mov
sbb
movsb
pop
call
xchg
rcrb
push
ja
inc
xor
jnp
arpl
pop
pop
push
in
xor
enter
imul
push
inc
mov
aas
dec
xor
out
out
mov
pop
popa
rol
je
stos
and
mov
ljmp
ficompl
sub
jle
inc
cmp
sbb
fcoml
sbb
pop
ss
sbb
stc
fdiv
pop
inc
adc
inc
std
loope
loop
pop
and
dec
xor
jl
ror
mov
mov
adc
mov
stos
lahf
les
mov
std
sub
mov
push
inc
pop
sbb
addr16
and
inc
enter
arpl
movsb
test
js
cmpsl
loope
fstps
sub
je
mul
mov
and
scas
ficoms
sbb
jmp
sub
sub
mov
roll
movsb
mov
pop
sub
sub
dec
push
rcrb
iret
outsl
out
jb
insb
call
fnsave
dec
fstpt
dec
inc
dec
das
loopne
mov
mov
xchg
push
fstl
push
fdiv
inc
int
adc
sbb
out
movsl
xorb
int
sbb
or
inc
inc
dec
in
arpl
vmulps
in
xor
or
lock
adc
pop
mov
ljmp
shll
aaa
filds
mov
push
cwtl
dec
out
and
pop
pop
cwtd
out
xchg
mov
xchg
testb
inc
sub
ds
pop
and
xor
mov
iret
jnp
sub
push
popl
inc
push
xor
xor
in
jge
fsts
cltd
dec
int
test
int3
ret
lret
cmc
subl
jnp
push
out
cld
enter
or
xchg
pop
scas
loope
jae
out
daa
insb
cltd
lods
dec
cmpsl
push
lds
stos
dec
shrl
add
push
imul
bound
ret
jg
bound
push
jg
inc
jmp
mov
fs
mov
xor
pop
rcr
lds
mov
idiv
inc
mov
xor
adc
fadds
movsb
add
loope
jo
sub
out
cmp
cmc
push
jge
rol
add
push
in
jbe
movsb
jp
bound
shll
dec
cmp
or
mov
jne
jg
cmpsb
stc
lret
jbe
add
out
cltd
mov
cmp
dec
out
lcall
cmpsl
and
fisttpll
fstps
loopne
clc
shld
in
dec
mov
sarb
pop
ss
push
push
lock
or
push
and
stos
push
jae
mov
bound
jno
pop
jnp
mov
sub
sti
mov
popf
xchg
dec
mov
mov
cmp
fiaddl
cs
mov
xor
mov
mov
adcb
push
adc
xlat
dec
cli
or
xor
bound
test
iret
cmc
and
cmp
adc
lret
mov
add
mov
call
mov
fcmove
lods
pop
lret
push
adc
adc
in
adc
sbb
out
lret
xchg
lret
xor
inc
xchg
addr16
sahf
or
sub
xor
add
nop
call
pop
rcrl
xchg
dec
xor
jne
movzwl
mov
cmp
pop
jo
pop
fs
push
dec
insb
shrb
xorb
cmc
mov
mov
mov
mov
dec
popa
movsl
pop
pop
lock
pushf
jbe
fcompl
jno
jp
fwait
outsb
rcrb
add
sbb
xorb
fnsave
push
sbb
xchg
pop
shlb
add
or
cmpsb
or
fs
loop
fwait
popf
mov
mov
data16
cmp
divb
xchg
sbb
js
out
pop
pop
lods
adc
xchg
jmp
push
mov
fnsave
mov
movb
mov
sbb
jle
fs
das
or
inc
xorb
or
icebp
fsts
mov
scas
mov
loop
out
push
push
out
fucomp
push
adc
dec
scas
add
mov
icebp
imul
or
fiadds
pushf
push
push
je
sbb
ret
sub
inc
xor
in
jne
faddl
mov
addr16
stos
xchg
xchg
scas
push
aad
xchg
int3
aam
sbb
mov
push
test
inc
and
sbb
xchg
fidivrs
push
add
pop
sbb
pop
jno
aad
pop
shl
lds
jns
push
aas
stos
inc
in
scas
push
inc
xchg
movsb
aas
inc
push
mov
pusha
xor
dec
idivl
cmp
or
xchg
mov
sub
leave
jecxz
or
fidivl
push
and
insl
movsl
mov
fisubl
xchg
out
adc
in
xor
inc
sub
dec
cltd
cmp
jo
repz
and
addr16
or
fisubl
pop
lods
push
clc
pushf
fsubrs
push
sbb
es
incb
ds
shll
sbb
lret
jle
and
xchg
cmp
scas
xor
and
push
pusha
lahf
out
lds
ret
outsl
icebp
addr16
jns
sub
xorb
mov
and
push
mov
outsl
fisttps
cmp
inc
jle
xchg
loopne
in
pop
xchg
fdivs
and
xchg
mov
or
xor
mov
ljmp
or
xor
and
cmp
mov
iret
out
sub
or
jns
pop
jne
push
jge
dec
jmp
pop
out
cmp
sbb
jecxz
popa
pcmpeqd
mov
inc
cmc
jnp
cmpsl
repnz
push
fdivl
dec
cmp
add
enter
sbb
dec
and
xchg
jne
incl
mov
lea
mov
bnd
lds
push
testb
adc
ja
clc
rorl
out
mov
in
scas
into
test
fsts
ljmp
xchg
xchg
es
cmp
movsb
mov
add
popa
sti
enter
pusha
xchg
ljmp
pop
inc
das
mov
dec
test
ficomps
adc
rclb
pop
cmc
movsb
fldenv
ja
call
cli
mov
cmp
pusha
test
cld
je
sub
data16
fwait
mov
and
cmp
push
adc
pop
ret
ret
daa
xor
inc
xor
mov
jnp
mov
sub
test
push
add
push
enter
ret
inc
pop
mov
fwait
movl
or
pop
lock
insb
iret
stc
in
sahf
mov
imul
mov
jno
idivb
outsl
stc
push
cmp
lds
dec
mov
inc
fstpl
or
aam
pushf
mov
incl
inc
xchg
jg
xor
jle
lods
mov
jne
andb
sub
leave
or
clc
push
pushf
imul
pushf
mov
xchg
mov
cmc
lcall
sub
cmp
sbb
lods
xchg
lret
xor
or
cltd
pop
js
cmp
leave
push
jbe
fsubrs
ror
ja
adc
xchg
js
xchg
lds
lret
ljmp
ds
mov
lods
mov
push
pusha
push
cltd
mov
sbb
ficompl
lcall
cmp
adc
inc
fstl
icebp
sub
jb
or
bound
in
ljmp
dec
pushl
jmp
and
jmp
push
xchg
dec
cmp
and
test
stos
outsl
rolb
jl
cld
cs
sbb
sub
push
or
xchg
xlat
cld
in
add
out
cmpb
inc
cmp
data16
lcall
mov
stc
inc
clc
pop
inc
imul
sbb
dec
add
xor
fdivr
mov
fmul
jp
jo
bound
jbe
sub
sahf
or
pushf
mov
and
jne
and
inc
ret
dec
and
mov
xchg
repnz
addr16
xchg
jmp
mov
lock
inc
cmpsb
inc
into
sbb
in
mov
lods
pop
aam
aaa
lcall
add
outsb
inc
sti
stos
pop
mov
dec
je
push
jl
sbb
mov
loope
pop
or
mov
cmp
mov
pop
cwtl
popa
hlt
push
sbb
dec
dec
mov
add
xchg
cli
mov
push
push
mov
mov
and
xor
loopne
popa
jl
fcmovnu
pop
cmp
lods
lcall
jecxz
inc
pop
or
push
jne
imul
lret
movsl
ja
icebp
mov
xchg
in
faddl
mov
insl
icebp
fcomps
fdivl
cmp
mov
push
inc
and
movsl
xor
sbb
xor
addl
jb
jge
jge
adcl
adcb
push
loopne
cmp
iret
scas
jne
popa
cltd
cwtl
test
sbb
sbb
test
jbe
popf
clc
enter
mov
jbe
mov
pop
push
pop
es
inc
adc
sbb
adc
rorb
push
xchg
xchg
lods
ss
scas
out
pop
push
mov
mov
inc
outsb
hlt
out
add
sbb
imul
lock
pop
sbb
jno
sahf
mov
add
or
sbb
shl
mov
lods
repnz
mov
fadd
roll
sbb
pop
test
push
adc
mov
push
pop
mov
or
cmpl
test
cwtl
jne
fs
jmp
xchg
push
cmp
stos
out
jle
std
inc
or
sub
cmpsl
mov
std
enter
push
jb
loop
mov
into
les
fbld
xchg
xor
insb
mov
pop
mov
arpl
jbe
jne
test
inc
and
das
pop
daa
sbb
mov
mov
cmp
pop
test
dec
cmp
xchg
jl
dec
pop
push
cmp
mov
cmpsl
pop
cmp
mov
push
mov
imul
adc
pop
cmp
mov
xlat
xor
xchg
mov
bound
push
aas
bound
fistps
ljmp
mov
std
pop
dec
push
lods
adc
pop
aad
or
dec
fildll
cmp
cmpsb
add
sub
stos
nop
sub
movsb
push
enter
xchg
mov
mov
push
popf
out
dec
xchg
aad
or
push
les
jmp
enter
scas
clc
adc
push
and
scas
in
mov
test
fidivrs
fdiv
inc
ret
dec
mov
dec
movsl
rol
es
ret
loopne
mov
icebp
xor
or
repz
mov
sub
add
shlb
loop
ljmp
ds
call
sti
adc
sub
ljmp
in
push
xlat
jmp
pop
out
mov
lahf
lret
dec
push
mov
dec
push
mov
and
xchg
stos
shlb
cmp
adc
lods
mov
out
jbe
sub
dec
stos
dec
pop
add
popa
aaa
nop
popf
mov
xchg
xor
or
dec
cwtl
jp
fcompl
jnp
adc
testl
lret
jne
mov
sub
mov
mov
lods
inc
jecxz
mov
int
xor
iret
push
mov
or
and
or
mov
cmp
jb
mov
and
mov
xchg
pop
add
es
inc
in
add
cmc
push
ret
fcoml
mov
fdivs
pop
mov
enter
inc
or
pop
enter
sti
dec
in
xchg
loopne
add
push
insb
xchg
or
lret
clc
pop
mov
mov
pop
cmpsl
push
pop
sub
test
jne
mov
outsb
and
aam
mov
das
or
xlat
add
push
jecxz
cmp
inc
add
mov
icebp
fs
and
push
setno
cld
jle
jnp
pop
lods
iret
or
or
jno
push
mov
lds
test
fistpll
push
in
jae
hlt
into
mov
imul
fs
rcll
push
jge
xor
std
cmp
scas
out
mov
subb
into
mulb
or
mov
int3
daa
into
cmp
enter
stos
icebp
adc
scas
cmp
push
sub
or
in
add
repz
in
daa
ja
xorb
jne
pop
dec
inc
iret
add
je
lods
in
jno
aas
not
imul
lods
js
push
rcr
push
lret
lret
lcall
xchg
mov
mov
shll
pop
pop
in
daa
cli
outsb
jne
dec
cmpsb
pop
adc
or
sub
and
pop
add
aam
and
adc
push
filds
mov
scas
loope
xchg
test
bound
adc
pop
pusha
popf
and
mov
push
inc
add
inc
xor
imul
mov
test
jo
jno
int
inc
jae
xchg
bound
int3
cmp
add
popf
mov
in
mulb
sahf
adc
xor
das
fdivr
movsl
adc
sub
jecxz
add
mov
sbb
test
sbb
mov
dec
push
outsb
or
loop
cs
sbb
pop
jmp
ficoms
pop
addr16
add
test
mov
cmpsb
xchg
dec
test
out
mov
cmp
sbb
addl
jmp
cmp
jno
lret
xor
out
call
cmp
sbb
lahf
fisttps
popa
sbb
fnstenv
jmp
mov
sbb
or
aam
jecxz
loop
fnstsw
mov
cmp
xchg
mov
pop
inc
repz
cmp
sbbb
push
loop
cltd
push
inc
or
lods
fcomps
xchg
movsl
out
push
mov
xor
daa
repz
jno
sub
pop
mov
aaa
cmp
sbb
or
lcall
mov
mov
adc
mov
aad
movsb
mov
sarb
dec
out
out
subb
cmp
pop
imul
fsubr
ja
in
notl
bound
sub
sbb
lods
and
mov
dec
icebp
or
pusha
dec
cli
pop
inc
mov
mov
ds
cmpsl
ficoml
mov
mov
int3
ret
adc
mov
call
and
out
popf
xor
andl
mov
outsb
leave
pusha
mov
push
inc
shl
repnz
scas
aas
pop
mov
adc
pop
bound
ficoms
aaa
ljmp
mov
pop
outsl
sahf
in
lock
inc
rorb
xchg
pop
int
mov
inc
and
shlb
and
or
scas
fnstcw
inc
jmp
adc
xchg
aaa
imul
adc
faddl
jg
sbb
pop
and
cld
pop
push
xor
stc
aam
enter
adc
mov
test
push
in
mov
pop
xor
incl
jg
xchg
mov
jo
mov
or
xchg
jl
mov
inc
xor
cli
xor
mov
aam
fwait
ss
in
repz
and
popf
dec
clc
or
pop
pusha
bound
inc
dec
mov
sbb
shlb
xor
cmpb
xchg
xor
fwait
mov
fisttpll
sub
or
pop
cmp
push
push
dec
mov
js
outsb
sbb
inc
mov
sbb
aaa
jle
loop
call
repnz
fdivs
sub
shl
cs
cmp
int
mov
or
jl
repz
aad
lds
xor
aad
inc
fcoms
insl
cltd
mov
outsb
outsb
loopne
add
jl
and
mov
gs
inc
mov
mov
sbb
xchg
mov
fwait
lcall
mov
xchg
or
adc
xor
mov
test
cltd
ja
push
fdivrs
aad
cmp
pushf
repz
mov
jb
out
fbld
and
jns
gs
flds
subl
jle
push
inc
loope
int
aas
je
and
out
dec
fisubrl
loop
or
insb
and
mov
negl
inc
inc
call
ret
cmp
movsb
cmp
dec
repz
fistps
aam
cmpsb
pop
les
xchg
mov
cmp
dec
sahf
cmpb
adc
push
sahf
icebp
dec
cwtl
jp
dec
xor
scas
insl
inc
andb
sub
dec
inc
std
mov
repnz
sub
mov
lret
out
mov
aam
int3
push
adc
arpl
les
aaa
inc
negl
mov
push
jno
pop
sahf
adc
stos
repnz
popa
xor
mov
pop
nop
or
ret
orb
loopne
lock
and
icebp
loope
push
mov
loop
xor
in
or
cmpsb
push
popa
icebp
iret
jns
inc
pushf
lods
mov
loope
lret
mov
xlat
test
out
cmc
add
adc
test
nop
xchg
add
lcall
xchg
or
sub
xor
test
mov
and
push
mov
mov
fdiv
cmp
mov
mov
sub
mov
pop
popa
std
dec
lods
xchg
push
enter
cmp
arpl
sbb
adc
pushf
ret
mov
and
mov
cmpsl
sbb
push
test
cmp
and
xor
xchg
xlat
gs
mov
mov
cmpsw
sub
nop
pop
cmp
push
test
xchg
pop
addr16
xchg
mov
lods
mov
push
jns
xchg
pop
loopne
push
jo,pt
incb
out
out
in
movsb
les
stc
mov
mov
outsb
inc
out
aad
jle
in
cmp
data16
inc
int3
outsl
cmc
add
adc
loopne
cmp
mov
stos
in
push
xorl
mov
dec
xor
cmp
xchg
mov
and
loop
mov
xchg
xchg
pop
rorl
xor
jb
xchg
test
cwtl
in
inc
fs
inc
cmpsl
dec
fldcw
ror
sti
sbbb
pusha
dec
out
dec
mov
mov
cmp
addr16
ficompl
cmp
mov
out
push
xor
adcb
dec
sbbb
inc
and
mov
push
movsl
xchg
pop
jg
push
adc
ds
clc
jae
test
and
std
xchg
faddl
or
mov
pop
lahf
push
push
in
imul
scas
pushw
add
cmp
mov
and
xchg
daa
mov
jnp
or
cmp
nop
jns
sti
mov
push
movsl
inc
ds
dec
std
push
jmp
inc
out
jae
or
loopne
fisttpll
hlt
daa
jns
mov
jmp
cli
jg
push
mov
jg
xorl
or
sbb
sbb
in
sub
scas
jle
les
jp
mov
mov
mov
xchg
sahf
or
into
clc
sarl
sub
ret
pop
sbb
lcall
push
addr16
aaa
in
fldcw
add
jb
mov
mov
push
out
mov
mov
into
xor
sub
dec
push
pop
xchg
cmp
xor
scas
sbb
xor
adc
xlat
pop
mov
cld
or
insb
adc
je
mov
mov
setae
mov
sub
dec
sbb
sbb
std
inc
outsb
das
movsb
dec
jmp
dec
push
push
xchg
pop
inc
test
bound
cmp
inc
mov
mov
stos
sbb
popa
dec
mov
pop
daa
js
rcrb
mov
lret
adc
pusha
ret
sub
loope
mov
adc
mov
sub
test
lods
aas
jae
or
int
xor
sbb
cmp
xchg
lcall
mov
lea
jmp
adc
or
pop
cmp
fadd
push
mov
test
cmc
fwait
pop
cmp
ror
xchg
test
fs
jne
add
hlt
inc
stos
imul
into
mov
mov
sub
out
rcrb
cmp
mov
push
sbb
gs
aad
pushl
inc
and
xor
js
fisttps
mov
or
jns
ss
jbe
pop
sbb
cmpps
xchg
rclb
xchg
cltd
cmpl
idivb
loopne
shlb
xchg
stc
and
cmp
sti
lods
and
scas
outsl
lcall
fldt
push
into
and
mov
adc
mov
jp
inc
or
push
jbe
xor
sub
jo
fisubl
push
and
mov
sahf
test
fsts
sti
lahf
scas
cmpb
jbe
xchg
push
xor
flds
or
sti
mov
sbb
imul
repnz
and
dec
jl
push
mov
sub
xchg
inc
mov
fisubrs
adc
xchg
sub
cmp
les
pop
pop
fistpll
xchg
arpl
testb
push
or
push
movsb
nop
fdivrl
aas
inc
sbb
mov
lret
xchg
je
rcll
adc
sbb
pop
inc
pop
inc
mov
xchg
mov
repnz
push
imul
filds
sbb
call
das
rorl
mov
xor
pop
int
mov
mov
sub
cwtl
inc
jne
push
add
testl
adc
push
xchg
sbb
sub
les
fsubrl
add
adc
stos
nop
inc
aam
jo
out
fs
cmpsb
fsubrl
pmullw
jg
add
fistl
movsb
insb
jl
mov
repnz
cmpsl
mov
jmp
pop
push
scas
fildl
pop
daa
dec
stc
notb
mov
add
int
shll
fildll
rcrl
xchg
loope
jmp
dec
subb
in
fcmovne
lret
icebp
das
inc
pop
lock
test
test
and
popf
xor
mov
and
adc
stos
insl
mov
insb
pop
rcl
ficoms
sub
cmp
and
lahf
outsl
lret
push
inc
rcrl
int
ds
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
daa
mov
inc
xor
pop
cmp
sub
out
ficoml
adc
pop
aaa
js
mov
mov
je
xchg
pop
mov
cmp
dec
cmp
fadd
and
push
mov
sbb
test
jns
inc
fistl
mov
jns
push
out
xor
inc
out
cmp
addr16
pushf
or
mov
cli
adc
jno
xchg
jl
xchg
cli
mov
mov
xchg
in
cmc
ljmp
movsl
mov
lret
addb
les
dec
arpl
ret
aad
cs
xor
cmp
je
aaa
std
xchg
leave
rolb
out
cmp
sti
data16
mov
jo
sysexit
sbb
test
lahf
dec
mov
imul
subl
imulb
xor
imul
sarb
jl
je
mov
addr16
sti
popa
rcll
jb
xchg
int
mov
dec
lahf
scas
dec
out
push
jmp
je
out
cmp
ret
inc
inc
ds
sbb
xchg
outsl
in
mov
movsb
out
scas
cmp
sub
ss
mov
sub
rclb
dec
adc
test
aaa
push
lret
outsb
xorl
enter
fiaddl
mov
arpl
pop
fmull
or
sub
icebp
test
and
out
into
movsl
scas
push
insl
cmp
adc
nop
call
aas
push
subb
and
repz
jge
lcall
leave
push
sti
inc
sub
leave
push
jae
std
jl
pop
ds
mov
sub
or
lds
call
mov
pop
dec
iret
cs
rcrb
pop
jns
xchg
mov
sbb
es
pop
mov
lds
mov
testl
add
add
add
inc
xchg
rcrb
cmp
pop
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
mov
