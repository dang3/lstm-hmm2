sbb
dec
add
add
add
rolb
aaa
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
mov
cmp
jne
pop
jmp
mov
cmp
je
pushl
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
mov
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
mov
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
mov
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
push
push
push
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
test
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
mov
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
je
lea
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
mov
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
mov
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
lea
mov
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
cmpl
ja
mov
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
pushl
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
xor
mov
call
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
pop
pop
lea
pop
add
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
call
push
push
lea
push
pushl
call
pushl
mov
pushl
call
test
pop
pop
jne
xor
lea
call
mov
test
jne
lea
call
mov
test
je
mov
push
call
lea
call
mov
test
je
mov
push
call
lea
call
xor
pop
pop
pop
leave
ret
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
xor
push
mov
call
mov
add
cmp
jne
push
call
xor
add
cmp
je
mov
mov
movl
mov
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
test
je
mov
push
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
js
mov
mov
push
call
pop
pop
mov
pop
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
cmpl
je
push
mov
test
push
jne
cmpl
jne
pop
pop
pop
leave
ret
cmpl
je
xor
xor
mov
mov
mov
xor
push
pushl
push
push
pushl
push
push
call
jmp
testw
je
jmp
mov
cmpl
je
pushl
mov
pushl
mov
pushl
call
xor
ret
mov
add
jmp
push
mov
mov
test
jg
push
mov
call
test
jne
pushl
call
pop
ret
cmp
jle
jmp
mov
jmp
mov
mov
mov
push
push
call
xor
ret
push
mov
mov
sub
test
push
push
push
je
push
lea
xor
call
mov
cmp
ja
mov
push
push
push
lea
push
call
cmpl
jne
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
mov
lea
rep
xor
cmp
mov
mov
je
push
lea
call
push
push
lea
push
push
call
add
test
lea
js
mov
push
call
push
lea
push
push
call
add
test
js
mov
push
push
call
add
cmp
je
mov
lea
push
push
push
mov
movl
call
mov
push
push
push
push
push
call
mov
mov
mov
add
lea
push
push
lea
push
push
call
mov
test
jbe
mov
mov
xor
jmp
lea
mov
test
jne
add
add
cmp
jb
mov
push
call
mov
add
push
xor
mov
lea
mov
call
mov
cmp
je
mov
push
mov
call
test
js
lea
mov
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
mov
lea
push
push
add
call
mov
mov
add
push
mov
push
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
call
mov
add
jmp
push
mov
push
push
push
mov
mov
test
jne
cmp
je
incl
pop
leave
ret
cmpl
je
cmpl
jne
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
pushl
push
call
lea
call
jmp
incl
cmpl
jne
xor
push
mov
push
push
call
push
call
add
jmp
push
mov
and
sub
push
push
mov
xor
cmp
push
jne
mov
pushl
call
mov
call
cmp
jne
pop
pop
xor
pop
mov
pop
ret
push
call
cmp
pop
je
mov
lea
movl
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
mov
mov
call
push
lea
push
lea
push
mov
call
add
lea
push
mov
lea
call
mov
push
push
mov
mov
mov
lea
push
push
call
jmp
int3
int3
int3
sub
mov
mov
push
mov
push
push
mov
lea
push
push
call
sub
mov
sub
mov
mov
js
mov
sub
sub
js
mov
mov
mov
push
push
mov
call
push
mov
call
mov
call
mov
mov
call
mov
cmp
je
cmp
je
test
jne
cmpb
je
cmp
je
mov
mov
mov
pop
mov
mov
pop
mov
pop
add
ret
mov
sub
cltd
sub
sar
add
jmp
mov
sub
add
jmp
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
sub
push
push
push
xor
mov
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
mov
mov
lea
call
mov
mov
xor
push
lea
lea
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
cmp
jne
xor
inc
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
jmp
push
mov
sub
push
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
lea
pushl
call
test
je
mov
mov
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
call
mov
cmp
je
mov
mov
push
push
movl
mov
mov
mov
push
call
lea
xor
call
push
call
mov
cmp
pop
je
pushl
xor
call
pop
push
push
pushl
call
mov
mov
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
mov
mov
lea
push
push
call
cmp
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
test
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
call
mov
mov
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
addb
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
push
call
mov
push
aad
mov
push
add
mov
jno
aam
add
jb
je
add
mov
in
test
add
xchg
add
rcrb
in
mov
add
push
add
fisttpl
jb
sub
push
mov
add
push
push
lea
push
push
call
add
mov
add
add
fiadds
mov
xchg
mov
xchg
mov
jae
mov
add
mov
arpl
add
add
add
hlt
icebp
addb
add
add
rcrl
popf
add
add
mov
out
sub
pop
popl
push
push
push
push
call
fldl
lea
mov
add
push
enter
add
add
imul
add
add
cld
mul
add
xlat
add
cwtl
pop
add
add
add
ja
mov
std
in
add
aad
lret
jmp
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
test
shrl
fsubrs
imul
mov
lcall
popa
add
mov
add
pop
rorb
add
sti
out
lods
cmc
mov
jbe
add
xchg
arpl
add
testb
pop
add
frstor
sub
pop
push
push
push
push
push
push
push
call
iret
loope
iret
add
add
arpl
pop
je
add
pop
movsb
filds
xlat
test
pusha
outsl
push
add
loop
add
scas
leave
add
lods
in
enter
pop
add
pushf
add
mov
test
lods
call
add
add
add
lock
sub
pop
call
push
push
push
push
push
push
push
call
add
add
test
add
iret
add
push
les
mov
add
mov
mov
sahf
add
ficomps
pop
rcrb
mov
in
add
mov
rcl
add
jl
add
lret
jp
pop
add
jno
cmpl
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
repnz
jge
add
add
add
jecxz
jnp
out
mov
lea
add
les
je
jle
outsl
insb
add
xchg
out
mov
scas
mov
lea
add
imul
in
mov
mov
in
loopne
call
push
lea
push
push
push
push
push
call
add
add
jnp
bound
push
data16
fs
out
add
aam
js
add
icebp
imul
in
pop
add
lret
add
add
add
inc
add
add
push
push
push
push
push
call
push
mov
add
mov
push
lret
add
add
hlt
jnp
ljmp
add
sub
pop
mov
push
push
push
call
add
add
nop
clc
add
out
lds
int3
add
push
fs
add
pop
sub
pop
mov
push
lea
push
lea
push
push
push
push
call
subl
incb
add
lods
add
add
add
add
add
in
lahf
mov
test
mov
jmp
add
add
add
lret
add
int
push
stos
sub
pop
add
push
lea
push
call
xchg
add
add
jne
stos
mov
add
add
jle
add
add
test
add
test
add
add
jecxz
mov
xchg
add
insb
add
test
stc
sub
pop
add
push
push
lea
push
lea
push
lea
push
push
push
push
call
stos
lret
xchg
push
je
add
les
add
add
add
pop
std
add
roll
xchg
add
leave
testb
add
add
add
add
add
add
lock
xchg
fwait
add
mov
add
lcall
ret
pushf
inc
add
push
push
call
movsb
jbe
mov
jmp
add
pop
push
xchg
cmc
mov
mov
add
add
std
add
add
cli
add
add
repnz
cli
add
push
mov
in
add
add
rclb
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
int3
add
fnstsw
add
add
add
jne
xchg
add
push
iret
data16
mov
iret
lods
cmpl
add
pusha
lea
add
lock
int3
jmp
arpl
cmpsl
test
ja
movsl
add
sbb
push
push
lea
push
push
push
push
push
call
popf
add
popl
mov
add
jne
add
int3
cmpsl
xchg
xchg
add
push
add
mov
add
mov
lds
stc
mov
add
pop
lret
add
add
fstps
add
mov
xchg
hlt
add
jne
aam
add
add
add
add
add
sub
pop
add
push
push
not
sub
add
push
and
add
add
ror
sub
pop
not
ror
pop
push
push
push
push
lea
push
push
call
jo
push
add
call
add
add
clc
addr16
fmulp
addb
loop
rolb
popa
mov
lcall
jne
push
push
push
lea
push
push
call
add
sti
add
pop
enter
ljmp
jmp
in
jno
icebp
imul
mov
pop
roll
add
rcll
add
leave
add
roll
add
add
xchg
popf
jno
sahf
lods
add
mov
xchg
mov
add
xlat
add
lcall
sbb
add
mov
xchg
push
push
push
lea
push
call
add
add
mov
fdivrl
add
lcall
pop
add
add
clc
mov
lret
add
jbe
rolb
jp
arpl
out
add
add
in
call
push
push
lea
push
push
push
push
call
mov
js
sahf
out
push
jecxz
les
xchg
mov
mov
shl
mov
add
add
rcll
lock
jns
add
lods
mov
hlt
data16
push
stc
cld
add
add
in
call
add
add
push
lea
push
push
push
push
push
push
lea
push
push
call
jp
rolb
add
rol
loop
fiadds
add
rcrb
add
sti
mov
imul
cli
in
add
xlat
bound
add
data16
out
xchg
add
add
fdivr
lcall
inc
call
je
lea
push
lea
push
push
push
push
push
call
cld
add
pop
rorb
jle
add
je
je
mov
ja
in
push
add
add
add
popa
add
jne
push
push
push
call
cld
pusha
add
jge
pop
add
lds
add
cli
push
mov
add
addl
sbb
xchg
ror
push
gs
add
outsl
add
xchg
add
arpl
mov
outsl
scas
add
into
aad
push
rcll
scas
push
jns
add
pusha
mov
lcall
jne
call
push
lea
push
push
push
push
call
lds
int3
bound
push
push
add
add
lahf
into
movb
push
add
add
scas
pop
jb
out
add
sarb
add
fiadds
jne
push
push
push
lea
push
call
add
insb
add
sti
add
add
cmpsb
push
je
pop
rcr
add
int3
addb
arpl
add
mov
in
into
mov
in
lock
pushl
call
push
push
rol
push
push
pop
add
sub
shr
sub
rol
sub
shl
pop
lea
shl
xor
pop
push
push
push
push
lea
push
push
call
add
add
push
mov
add
loope
movsb
xlat
add
add
jl
add
mov
pushf
lcall
mov
aad
loop
pop
mov
add
add
mov
imul
in
call
pushl
push
push
push
lea
push
push
push
push
call
enter
add
mov
addb
fwait
scas
cli
fiaddl
fwait
add
add
movl
add
push
js
add
add
add
aam
jp
arpl
int
lret
in
in
lcall
pop
pop
add
push
push
push
lea
push
push
push
push
call
popa
mov
lret
add
shl
jecxz
iret
je
add
loopne
jp
mov
out
faddl
int
add
lcall
inc
push
push
add
rol
rol
lea
push
sub
add
add
add
sub
add
add
pop
sub
pop
push
push
push
push
push
push
push
call
jp
add
std
add
add
add
mov
lret
xchg
fwait
add
jge
add
iret
jo
rcll
add
rclb
jae
sub
pop
push
push
lea
push
call
add
mov
add
mov
add
add
mov
add
lret
movsb
flds
stos
addl
add
lahf
push
add
add
jnp
jne
mov
add
jp
add
add
lret
add
sti
in
test
data16
pop
imul
lcall
add
rclb
punpckhdq
sub
xchg
push
push
push
call
add
add
movsb
mov
add
add
rolb
push
js
mov
add
add
add
lahf
pop
add
fadds
add
add
addb
loop
loope
add
jns
movsl
xchg
add
clc
push
push
push
push
lea
push
push
call
xchg
add
lret
add
mov
mov
add
add
sti
mov
jmp
xchg
add
lahf
lds
lcall
push
push
lea
push
call
add
lret
aad
add
fld
mov
add
call
aad
mov
add
cmp
cmpsl
stos
jbe
mov
xchg
add
add
clc
pop
mov
push
push
call
add
into
jle
add
or
mov
jp
jo
add
mov
js
jle
lods
add
add
jae
jecxz
add
lock
push
je
mov
pop
jo
mov
icebp
add
test
add
add
add
xchg
fwait
push
movsb
popf
lock
mov
add
push
push
call
add
jge
mov
roll
add
scas
lret
jp
xlat
mov
and
je
insb
arpl
add
mov
int3
fdivl
lcall
ret
add
add
push
push
push
push
push
lea
push
push
push
call
add
add
test
push
mov
incb
mov
xchg
jge
rcrb
je
xchg
shl
add
push
jmp
call
mov
add
add
lret
add
pop
add
jge
add
sub
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
jnp
add
add
add
add
add
add
cld
fiadds
imul
add
add
add
js
in
fdivr
lcall
xor
mov
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
js
lret
js
gs
push
add
push
mov
add
movsb
int3
mov
jae
lcall
jle
out
add
add
sti
add
into
add
xchg
lods
faddl
ljmp
sub
pop
add
push
push
push
push
lea
push
call
add
roll
mov
stc
add
add
cmpsb
cltd
add
ret
add
add
xchg
add
mov
mov
pop
in
addl
in
lock
lcall
inc
or
or
pop
add
lea
push
push
push
call
pop
add
add
lret
cwtl
cmpsb
add
add
jo
add
sahf
add
mov
sahf
testb
popl
add
add
add
pushf
mov
xchg
ljmp
lcall
add
push
push
lea
push
push
lea
push
push
push
push
push
call
add
push
add
scas
pop
add
in
mov
add
mov
in
add
add
ljmp
mov
add
stos
add
add
lock
add
add
push
push
lea
push
push
lea
push
push
call
insb
add
add
add
roll
pop
push
mov
jecxz
fbld
add
add
add
ljmp
int
add
clc
faddl
lret
push
mov
lods
mov
pop
scas
leave
xchg
jnp
imul
cmpsl
lret
pop
add
push
shlb
add
sub
pop
add
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
mov
popl
add
pop
add
enter
andb
aad
jmp
jb
mov
out
push
in
stc
add
lea
decb
mov
xchg
rcrb
loopne
pop
push
push
lea
push
push
call
add
jge
arpl
jge
add
add
add
cwtl
add
mov
xchg
add
les
push
mov
mov
jnp
push
stos
or
in
lock
mov
push
push
lea
push
call
mov
add
add
fiadds
add
test
add
add
add
add
add
popa
mov
sarl
outsl
imul
jmp
push
mov
mov
movsl
hlt
xchg
add
out
sub
pop
xor
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
jl
jbe
add
mov
add
add
into
mov
xchg
fiaddl
xchg
je
push
roll
xchg
add
push
mov
add
sub
pop
add
push
push
call
add
faddl
add
add
mov
roll
mov
add
xlat
fiaddl
std
int3
add
add
mov
lret
std
jecxz
in
lret
add
fstpl
lods
add
popa
pop
fcomip
shrb
add
imul
xchg
test
pop
push
push
ror
not
shr
pop
mov
push
push
push
push
lea
push
lea
push
call
mov
jle
addb
fs
lods
mov
add
hlt
jae
mov
out
fldcw
add
in
pop
xor
push
push
call
out
movsb
add
imul
fcmovne
add
add
add
add
xor
stc
mov
add
add
fists
iret
add
add
lods
rolb
xchg
add
add
out
add
xchg
arpl
mov
lock
pop
push
add
stos
test
call
add
push
sub
shr
pop
sub
pop
push
pop
rep
pop
push
shr
shl
not
not
pop
mov
push
push
lea
push
lea
push
call
add
mov
pop
sahf
add
out
add
add
add
add
aam
popl
add
jbe
xchg
add
add
mov
lahf
rolb
xchg
std
mov
add
out
out
add
xlat
in
sub
pop
add
push
shr
pop
add
push
shl
dec
ror
pop
add
push
xor
dec
pop
mov
xor
push
lea
push
push
push
call
push
lea
add
add
add
add
add
js
sarl
jbe
cli
add
push
jecxz
add
pop
addl
add
jnp
int
add
add
mov
add
add
add
mov
add
addb
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
call
push
mov
add
popa
pop
int3
mov
into
add
jo
add
aad
rorb
fwait
add
add
clc
add
xchg
in
shlb
movb
add
add
mov
lds
add
lcall
adc
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
pop
add
testb
add
pushf
fwait
jo
add
js
pop
add
ja
add
push
add
add
popf
cwtl
pop
int
mov
out
cltd
loop
pop
add
pusha
jp
faddl
fsubl
mov
add
les
add
push
push
push
push
call
add
jmp
push
pop
mov
lcall
add
add
fiadds
xchg
jb
pop
add
cld
jb
pop
cwtl
jo
scas
add
mov
cmc
addb
push
fs
popf
out
scas
add
xchg
addl
popa
add
add
int
roll
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
call
add
push
add
cmp
jae
call
mov
data16
mov
push
mov
fildl
add
add
xchg
jge
lcall
add
popf
add
scas
jmp
data16
aam
pop
mul
rclb
bound
rclb
jb
in
call
push
push
push
push
push
lea
push
call
shr
mov
jne
test
add
fnstenv
shr
pop
xchg
popf
mov
add
fdivr
mov
pop
mov
pop
add
pop
add
push
add
push
js
push
lret
roll
sub
pop
add
push
ror
sub
pop
add
push
push
push
push
push
call
xchg
fnstcw
in
jmp
mov
mov
rolb
lods
add
mov
jmp
lods
stos
jmp
push
cli
jb
xchg
cmc
add
in
lret
push
in
in
pop
add
push
xor
pop
mov
push
push
push
and
add
shr
xor
sub
ror
rol
lea
pop
sub
rol
add
rol
pop
push
inc
ror
rol
pop
pushl
push
push
push
push
push
lea
push
push
push
call
arpl
mov
fisubrl
int
in
scas
loop
add
fwait
mov
add
loop
jp
mov
add
add
test
add
mov
jge
add
enter
add
testl
jno
push
mov
add
xchg
add
lcall
out
dec
add
push
push
push
shl
xor
push
and
add
sub
add
sub
lea
ror
xor
pop
dec
inc
not
shl
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
roll
loopne
add
add
push
add
add
fadds
ja
out
add
xchg
add
fiaddl
fldl
jmp
add
add
add
stc
pop
push
add
mov
push
push
push
push
push
push
push
push
call
mov
add
test
push
cmpsl
popf
add
xchg
scas
jmp
in
add
fisubl
out
je
fiadds
popf
add
add
popa
add
add
add
mov
push
push
ror
shr
shr
sub
pop
call
push
shr
pop
mov
push
push
shl
dec
rol
pop
push
push
inc
pop
mov
add
push
sub
add
lea
sub
pop
add
push
ror
shr
pop
add
push
add
xor
not
pop
mov
push
push
push
push
push
push
push
push
push
call
add
xchg
test
add
in
add
jo
add
add
mov
loopne
add
iret
mov
add
xor
push
push
call
add
test
int3
in
js
add
mov
xlat
mov
push
incb
pusha
mov
add
test
mov
add
fiadds
lods
add
mov
fs
add
arpl
int
jp
movsl
imul
les
add
push
xor
pop
add
push
push
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
ja
add
mov
repnz
imul
mov
popf
add
cltd
jle
fwait
roll
jbe
add
cmpsl
loop
add
add
into
mov
lcall
add
push
lea
push
push
push
push
push
push
call
push
loopne
push
rcrb
repnz
in
fcmovu
add
xchg
dec
in
add
mov
mov
fwait
add
mov
loopne
add
rcrb
add
mov
out
push
add
cli
add
push
sub
pop
add
push
add
sub
pop
add
push
push
call
add
lock
add
add
into
cld
jl
add
push
cmpsl
out
add
pop
ja
clc
add
add
add
out
mov
add
mov
lret
add
xchg
rcl
add
add
add
add
ljmp
push
rolb
sub
pop
pop
push
sub
sub
pop
mov
xor
push
not
add
pop
rep
push
lea
push
push
push
push
push
push
push
call
rcl
push
fwait
add
icebp
iret
mov
add
add
fcoms
mov
loopne
jl
push
add
addl
in
loopne
lcall
dec
and
icebp
cmp
push
push
call
hlt
add
mov
mov
sti
sbbb
popl
add
negl
jb
add
fadds
fcmovb
cmc
enter
mov
lods
push
repnz
sub
pop
or
je
mov
xor
push
add
ror
dec
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
push
pop
je
popl
add
add
test
push
push
push
arpl
gs
aad
lahf
add
mov
add
lock
add
xlat
fnstcw
fwait
add
xchg
add
insb
out
sub
pop
xor
push
push
call
add
fcoms
add
add
mov
add
cwtl
gs
lds
js
jns
repnz
scas
loopne
stos
sub
pop
add
push
push
push
push
lea
push
push
call
xchg
mov
jae
add
add
insb
icebp
fadds
jae
aad
flds
mov
push
mov
mov
add
push
lds
push
push
xchg
add
lcall
repnz
add
pop
add
push
push
lea
push
push
push
push
push
push
push
call
add
mov
out
add
add
add
add
add
test
mov
add
add
add
cli
mov
add
jbe
int
leave
xchg
jne
sub
pop
mov
xor
push
sub
inc
ror
pop
add
pop
push
lea
push
push
push
push
push
push
call
add
add
add
movsb
sti
pushf
mov
mov
add
add
add
pop
cmc
pushf
add
add
mov
sahf
add
insb
nop
shll
add
in
in
rep
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
sub
repnz
add
test
add
add
out
jle
add
add
xchg
xchg
add
call
stos
add
pop
jne
mov
add
add
sub
pop
mov
push
push
push
lea
push
call
jle
call
add
stos
insb
iret
xchg
mov
mov
gs
jne
jne
add
add
add
push
fwait
mov
add
jge
in
pop
imul
mov
add
jp
fs
aam
out
mov
add
lcall
or
push
push
call
add
jmp
jbe
jnp
lret
add
mov
aam
faddl
insb
add
add
imul
add
add
repnz
add
fildl
movsb
fldl
into
pop
sti
xchg
mov
pop
add
lods
jns
in
shll
imul
mov
cmpsl
loope
ljmp
pop
add
push
push
push
push
push
push
push
push
push
call
xchg
flds
neg
add
mov
push
mov
rolb
add
xchg
add
imul
out
test
add
out
add
xchg
leave
sub
pop
or
je
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
pop
push
cmpsl
add
jae
add
icebp
add
mov
add
add
add
test
add
add
shll
popa
mov
mov
sub
pop
mov
push
push
call
mov
pop
add
std
loopne
mov
add
add
int
addr16
mov
lret
mov
mov
ja
add
subb
push
add
add
sub
pop
add
add
push
push
push
push
push
push
push
lea
push
call
add
add
ret
add
jno
int3
bound
cmpsl
mov
cmpsb
cld
aam
add
std
jnp
add
add
add
add
lret
add
imul
in
loopne
rep
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
push
arpl
add
ljmp
add
loopne
add
fadds
pop
pop
mov
add
loop
add
call
fwait
push
add
mov
add
jne
fwait
lahf
fwait
insb
xchg
add
les
jne
add
jp
push
add
push
push
lea
push
push
pop
add
shr
shl
add
sub
xor
rol
shr
pop
lea
pop
push
ror
dec
sub
rol
pop
pop
mov
push
push
push
push
push
push
push
push
push
push
call
icebp
rolb
jo
add
xchg
divb
add
mov
add
add
imul
jge
movsb
add
add
popa
aam
add
loope
pop
jb
enter
add
push
cmpsl
jns
mov
sahf
pop
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
xchg
mov
jne
add
push
leave
add
add
add
lret
pop
push
add
ret
stos
insb
add
mov
add
add
add
lcall
lcall
inc
and
jmp
push
not
shr
pop
push
push
push
push
call
xchg
outsl
lret
in
lret
mul
mov
popl
add
sti
add
enter
cmc
jmp
add
cmpsb
mov
test
into
mov
add
mov
add
add
jmp
in
add
sub
pop
mov
add
push
not
xor
add
pop
push
push
dec
pop
push
push
push
push
push
push
push
push
push
push
call
pop
nop
hlt
jb
outsl
lods
add
ljmp
xchg
andl
add
add
in
test
fadds
movsb
add
xchg
add
out
cwtl
pushf
scas
loope
add
fldl
add
add
add
jmp
pushf
push
fisubrl
sub
pop
push
mov
push
push
push
push
call
mov
add
rcl
add
andl
addb
pop
mov
fisubs
int
xchg
add
add
add
add
xlat
add
jle
push
add
push
add
inc
pop
pop
push
add
xor
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
cld
add
testb
pop
shrb
movsl
add
add
add
mov
popl
iret
ljmp
add
jp
loop
xchg
add
add
stos
popa
fadds
add
xchg
pop
push
add
add
cmpsb
add
loop
add
rcr
add
out
push
leave
out
mov
add
in
fcomps
push
sub
not
pop
leave
push
lea
push
push
push
push
call
movsl
add
add
push
std
add
fs
lods
add
pop
add
imul
jb
les
mov
add
add
mov
in
in
add
add
popf
mov
fadds
popa
add
mov
nop
mov
test
add
add
pop
sub
pop
ret
push
lea
push
push
push
push
call
add
mov
pop
add
add
stc
addl
mov
out
push
add
ret
add
add
rolb
mov
scas
jl
add
lret
add
add
xchg
cwtl
add
mov
add
ja
mov
mov
scas
add
lcall
mov
push
push
push
push
call
lods
push
ficoms
shlb
add
jne
test
iret
add
add
xchg
lret
out
mov
movl
lcall
clc
push
shl
rol
shr
pop
push
push
shr
sub
not
pop
push
push
add
add
pop
push
push
push
push
push
push
lea
push
push
call
movl
push
add
roll
pop
fisttps
mov
add
int3
int
add
add
add
xchg
add
add
lcall
push
push
push
lea
push
lea
push
push
push
call
add
add
gs
add
pop
xchg
add
add
stc
addl
int
jecxz
fwait
add
add
jecxz
stos
popf
sub
pop
movl
push
inc
add
ror
lea
pop
addl
push
sub
inc
add
pop
test
je
push
push
push
call
mov
mov
mov
mov
mov
cmpsb
outsl
loopne
add
add
push
pop
mov
add
vcvttpd2dqx
add
stos
popa
sub
pop
mov
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
out
add
mov
mov
xchg
insb
push
lods
sar
mov
mov
add
add
lahf
add
add
clc
pop
add
ret
add
lret
add
add
xlat
add
add
push
lret
push
xchg
lea
pushw
pop
out
mov
push
mov
jmp
add
in
fdivr
lcall
push
lea
push
push
push
push
call
lret
add
add
add
add
mov
mov
add
add
add
mov
add
jmp
scas
les
mov
mov
lret
add
js
cmc
add
push
rol
ror
sub
pop
pop
leave
push
push
push
call
je
add
imulb
add
flds
mov
leave
fldl
mov
in
ja
pop
xchg
mov
add
add
push
pop
add
les
fistpll
add
add
js
add
add
loopne
add
sub
pop
ret
push
dec
sub
shl
pop
push
mov
push
push
call
movsl
fs
nop
lea
insb
iret
add
stos
pop
test
add
add
add
add
add
lea
add
mov
add
jns
add
int
lds
mov
imul
add
sub
pop
add
push
dec
pop
push
push
sub
dec
dec
pop
push
push
xor
sub
add
pop
push
push
not
dec
pop
push
testl
push
not
add
add
dec
pop
addl
push
push
push
call
into
add
xchg
add
push
add
xorl
adc
roll
add
arpl
add
lcall
add
je
cmp
lea
push
lea
push
lea
push
call
cmpsb
hlt
fiadds
add
push
roll
loop
add
add
movsl
add
sbb
add
cld
add
lret
add
xchg
pushf
mov
filds
add
in
call
call
mov
push
push
push
push
call
add
fildl
add
enter
ret
arpl
add
add
pop
stc
fxch
add
in
jo
add
mov
int
fdivrl
add
add
add
cmpsl
add
add
sub
pop
pushl
push
not
rol
pop
push
push
xor
pop
push
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
push
shll
movsb
sahf
stos
add
arpl
add
loop
pop
rcrb
popf
xchg
add
out
mov
cmc
add
pusha
jb
mov
std
mov
fcmovne
add
rcrb
cltd
sub
pop
cmpl
jne
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
div
sti
jo
pop
stos
add
lods
add
pop
add
xchg
mov
add
rcrl
add
movsb
add
add
jno
add
add
add
fucom
add
clc
stos
xchg
cmpsl
out
push
add
out
fadds
aam
mov
roll
mov
sub
pop
pop
pop
push
lea
push
push
lea
push
push
call
add
add
ja
mov
add
push
add
movsb
mov
ret
mov
hlt
insb
xlat
cltd
addb
mov
mov
cmpsb
lods
pop
loop
aad
in
in
pop
pop
push
xor
inc
sub
shr
pop
leave
ret
push
rol
lea
shr
pop
push
push
lea
not
pop
mov
add
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
jmp
add
cmpsb
xchg
mov
mov
add
jb
test
mov
add
push
push
not
pop
push
push
push
lea
pop
movl
push
push
push
push
lea
push
push
push
call
hlt
add
lods
pop
stos
lahf
mov
add
add
add
imul
not
jae
add
push
push
jp
add
enter
pusha
movsl
jl
jbe
jns
bound
lcall
add
js
call
shll
rcrl
adc
ret
sub
pop
call
push
shl
pop
subl
cmpl
jne
push
lea
push
push
call
fadds
enter
test
sti
lods
mov
add
repnz
jae
add
repnz
sub
pop
pop
push
sub
shr
shr
not
pop
pop
push
push
push
call
add
add
mov
xchg
lods
push
jmp
jne
add
add
xchg
add
iret
repnz
iret
pop
mov
add
hlt
add
pop
jle
loopne
lock
jno
add
bound
sub
pop
pop
push
dec
inc
add
pop
pop
leave
push
inc
rol
ror
pop
ret
push
push
lea
push
push
push
push
call
mov
bound
stos
add
fistps
call
push
add
push
lods
lret
bound
add
movsb
stos
add
sub
pop
push
push
shl
rol
xor
sub
pop
mov
push
not
rol
pop
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
add
push
mov
add
popf
pop
add
push
mov
ret
add
in
std
add
add
insb
add
add
add
push
shr
dec
dec
sub
pop
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
pop
add
add
out
add
lock
add
jecxz
add
add
fiaddl
add
roll
in
fdivr
lcall
push
push
ror
sub
add
pop
mov
push
lea
pop
lea
sub
push
sub
sub
sub
pop
mov
shr
push
push
call
add
add
mov
pop
jl
fiaddl
movl
cmpsb
shll
addl
xlat
mov
pop
add
gs
add
push
subb
nop
add
add
add
add
add
push
lods
sub
pop
add
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
add
stos
mov
add
mov
add
jle
ljmp
addb
int3
aad
cmpsl
sahf
add
stos
add
sarl
xchg
in
fdivr
lcall
andb
inc
pop
add
push
shl
pop
add
mov
push
lea
lea
sub
add
pop
mov
push
inc
ror
pop
cmp
jne
cmp
jne
push
push
call
int
lret
mov
int3
xchg
mov
mov
sbbb
add
mov
ljmp
jecxz
mov
add
cli
add
add
xchg
add
shl
add
mov
mov
in
clc
pop
mov
movl
push
push
call
mov
lods
add
stc
pop
divb
xchg
add
stc
add
add
lods
pusha
lret
jl
sub
pop
jmp
push
xor
inc
add
dec
pop
mov
push
inc
pop
mov
sub
jne
push
rol
inc
pop
mov
push
push
lea
push
push
push
push
call
xchg
add
add
fcomps
push
add
cmpsl
cmp
bound
mov
shrl
add
add
jle
aam
push
int3
lea
xchg
mov
cltd
sarl
sar
js
insb
xorl
add
mov
add
int3
add
add
sub
pop
movl
push
add
shr
ror
sub
pop
jmp
push
rol
pop
mov
mov
push
lea
sub
add
pop
cmp
jne
push
inc
pop
mov
movl
push
shr
ror
dec
pop
jmp
push
ror
pop
mov
push
push
push
call
aad
add
lret
aam
rolb
mov
repnz
add
cmpsb
add
pop
stos
filds
add
cmpl
jne
mov
push
push
push
call
loopne
add
add
add
idivb
rclb
shrl
add
xchg
hlt
data16
cmpsl
push
int
sbbl
out
jbe
add
data16
out
xchg
add
add
add
roll
mov
mov
lret
add
mov
ret
add
lcall
add
push
lea
push
push
push
call
movb
stos
faddl
add
flds
fs
hlt
leave
add
lea
popl
add
jmp
xchg
add
add
add
lret
jne
lret
add
add
jns
add
add
in
clc
popf
cltd
arpl
lods
or
add
js
push
push
push
push
push
push
call
add
add
add
cmc
nop
test
test
mov
lahf
faddp
xchg
mov
add
inc
mov
add
sbb
sub
pop
pushl
push
lea
push
call
scas
add
mov
pushf
add
call
fstpl
add
repnz
std
ret
test
ja
add
add
hlt
pop
add
pushf
add
jp
add
clc
in
addl
xchg
aam
in
sub
pop
pop
push
ror
pop
mov
mov
push
push
push
push
push
push
call
add
mov
add
sti
mov
imulb
add
push
mov
add
mov
add
add
icebp
add
mov
notl
in
sub
pop
mov
push
push
sub
ror
rol
add
push
or
inc
add
shr
sub
rol
pop
sub
pop
push
push
call
add
add
xchg
addl
add
add
pop
ret
pusha
sti
push
add
popa
add
add
add
in
mov
out
out
enter
add
out
fs
add
lcall
add
xchg
add
sub
pop
push
push
shr
pop
call
push
push
push
push
lea
push
call
add
add
test
add
test
idiv
addl
mov
leave
jo
mov
fistl
mov
mov
jl
jle
aad
xchg
jb
xchg
cld
fildl
faddl
sar
loope
pushf
scas
push
je
lds
add
out
mov
in
in
pop
cmpl
je
push
push
ror
add
push
or
not
add
sub
shl
xor
sub
add
pop
ror
add
pop
push
push
push
push
lea
push
call
pop
add
fldl
jnp
rcl
lret
jae
lods
in
add
testb
mov
test
add
movsl
add
imulb
divb
repnz
add
cmc
jle
mov
add
popa
add
in
add
jp
movsb
loopne
jno
add
mov
add
out
sub
pop
push
push
lea
pop
call
push
dec
add
pop
cmpl
je
push
push
shr
ror
push
or
not
add
sub
add
xor
sub
dec
not
shl
ror
pop
shr
add
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
pop
add
pop
jl
pop
add
add
add
push
xchg
add
addb
into
lds
add
fs
xchg
mov
push
jecxz
mov
sub
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
mov
mov
ror
imul
jo
loop
add
add
mov
add
add
push
out
iret
add
rcr
push
add
imul
in
fcomps
pushf
xor
add
int3
je
push
push
sub
shr
sub
not
push
or
inc
add
sub
sub
sub
sub
shl
xor
add
pop
shl
shr
not
inc
pop
push
pop
push
push
inc
pop
call
push
not
sub
pop
cmpl
je
push
push
sub
add
push
or
inc
add
rol
lea
inc
shr
sub
not
shr
dec
pop
lea
pop
push
push
call
add
mov
addb
add
roll
add
mov
lock
add
add
cmpsb
push
movsb
rorb
aad
add
add
add
out
jnp
ljmp
out
cmc
add
fwait
add
mov
filds
mov
add
lcall
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
roll
xchg
insb
push
add
ja
add
roll
push
mov
add
add
lret
add
jbe
add
add
leave
jne
call
jbe
pop
add
pushf
out
faddl
add
js
out
add
add
add
mov
je
push
in
lcall
mov
jae
gs
sub
pop
call
push
inc
sub
lea
pop
cmpl
je
push
push
rol
sub
push
xor
add
not
ror
sub
add
inc
pop
inc
pop
push
inc
sub
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
add
add
add
mov
popf
xchg
add
add
ffree
mov
imul
jp
add
add
add
add
xchg
lcall
add
add
add
pop
mov
add
cmp
add
cmpl
je
push
push
add
push
and
add
sub
rol
inc
sub
sub
dec
add
pop
lea
pop
push
push
call
into
enter
add
jae
push
pop
add
xchg
filds
add
cwtl
test
add
add
pusha
movsb
add
push
roll
insb
add
add
add
pop
lret
in
mov
add
imull
add
mov
add
add
out
scas
xchg
pop
sub
pop
push
push
push
call
push
add
insb
ret
shl
add
add
pop
fiaddl
int3
push
mov
mov
test
add
xchg
add
push
mov
les
bound
sub
pop
call
push
sub
not
pop
cmpl
je
push
push
shl
push
and
add
shr
add
dec
dec
sub
sub
inc
sub
pop
rol
sub
xor
pop
push
push
call
gs
add
test
add
cltd
ja
add
add
mov
in
scas
testl
add
xchg
fildll
push
add
movsb
add
mov
add
sarl
in
clc
pop
push
call
push
sub
pop
cmpl
je
push
push
add
shr
push
and
add
shr
add
add
sub
xor
add
dec
pop
xor
inc
pop
push
lea
push
lea
push
call
loopne
imul
je
push
add
jbe
rolb
int
add
cmc
xchg
add
fldt
cltd
negl
add
rcl
faddl
faddl
add
rcll
add
outsl
add
add
addb
add
jo
add
lods
add
jp
add
push
leave
add
sub
pop
push
call
push
push
push
push
lea
push
lea
push
push
call
lret
add
cwtl
cltd
lds
add
jp
jle
pushf
test
add
mov
mov
out
mov
testl
jno
add
ret
je
les
scas
faddl
lcall
cmp
rol
je
push
push
add
lea
shr
push
or
inc
add
inc
rol
sub
rol
sub
pop
add
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
push
testl
testb
movsb
in
cmpsb
stc
add
popa
mov
jbe
jp
lret
add
add
sahf
out
xchg
add
add
popa
popf
mov
cwtl
add
popf
movsl
jp
faddl
mov
outsl
add
fcmovnbe
mov
into
add
fs
add
add
sub
pop
push
call
push
rol
pop
cmpl
je
push
push
shl
push
push
pop
add
dec
not
sub
sub
shl
pop
shl
pop
push
pop
push
push
xor
sub
shr
shr
pop
call
push
push
lea
push
push
lea
push
push
call
nop
mov
mov
xchg
add
test
mov
add
movsb
mov
add
clc
push
fdiv
fnstcw
add
add
add
iret
add
add
imul
in
call
xor
ret
test
lock
stc
ja
xor
sub
push
and
add
rol
inc
dec
rol
sub
xor
pop
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
add
add
add
mov
mov
cwtl
mov
clc
lea
hlt
jmp
jecxz
mov
pop
add
jo
mov
push
add
je
add
movl
add
fbld
stos
add
add
popa
jb
popf
pop
stos
add
incb
mov
in
loopne
lcall
push
push
push
lea
push
push
lea
push
push
push
push
call
xchg
add
aam
add
mov
cltd
mov
je
xchg
add
std
lods
add
push
lret
fmuls
push
mov
fcompl
pop
sub
add
ljmp
add
add
test
aaa
or
out
dec
push
and
add
sub
not
shr
sub
shl
pop
shl
shr
pop
push
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
roll
add
add
add
out
pusha
jp
add
movsb
insb
addl
mov
sub
pop
call
cmpl
jne
push
shr
pop
mov
push
add
ror
pop
movl
jmp
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
cmpsl
push
xchg
add
add
cmc
pop
add
ja
movsb
add
add
imul
add
sahf
mov
add
add
add
add
add
into
add
aad
into
add
xchg
add
insb
jb
jb
add
add
mov
nop
cld
shlb
add
lea
add
in
loopne
xor
pop
push
add
shr
pop
pop
push
not
rol
pop
pop
pop
push
ror
add
pop
leave
push
rol
pop
ret
push
push
push
push
push
lea
push
push
push
push
push
call
jbe
stc
add
add
push
add
icebp
add
add
add
in
popa
add
scas
add
mov
lds
add
cli
push
jns
and
repnz
jge
lret
xchg
xchg
cmpsl
fwait
icebp
std
stc
pop
add
sub
pop
mov
push
lea
push
push
call
lahf
stos
add
push
out
add
test
add
jns
les
mov
arpl
add
cmpsl
add
pop
imul
push
test
sub
pop
add
push
shr
inc
add
pop
cmpl
jne
push
push
sub
add
not
xor
push
and
add
inc
sub
inc
pop
pop
push
lea
push
call
jne
jge
add
mov
out
add
mov
out
rcrb
xchg
add
aam
loop
add
add
add
jno
stos
pushf
fldl
nop
add
push
div
movsb
add
lods
add
mov
in
clc
pop
pushl
call
push
inc
dec
pop
push
call
push
xor
ror
pop
jmp
cmpl
je
push
push
lea
push
call
cwtl
cltd
mov
call
add
mov
jo
add
sti
add
loop
add
add
xlat
jnp
add
xchg
cmpsb
add
popa
add
fs
pop
cmpl
jne
push
push
call
out
mov
cmpsl
add
cwtl
xchg
andb
loop
jb
mov
loopne
add
addl
cmpsb
push
out
add
imul
add
add
test
pop
loope
popf
mov
jno
add
add
test
add
add
mov
add
mov
push
shl
dec
pop
call
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
push
add
add
in
add
add
mov
xchg
popa
add
imul
add
js
lret
iret
lahf
jae
mov
jle
test
add
add
mov
aam
lcall
push
push
call
mov
add
pusha
jbe
lret
je
add
add
add
sti
cmc
imul
imul
in
clc
lcall
pop
push
add
push
push
push
push
push
push
push
push
call
xchg
add
add
mov
add
jns
aam
mov
add
mov
aam
aad
add
add
incb
add
bound
int
aam
add
in
loopne
lcall
jge
add
test
add
add
push
aad
push
ror
push
and
add
dec
add
shr
sub
add
shl
pop
rol
sub
pop
push
shl
pop
pushl
push
rol
add
pop
call
push
xor
dec
pop
push
push
push
push
push
push
lea
push
call
rolb
mov
add
movsl
filds
add
out
add
add
add
mov
jbe
add
pop
cmpsl
add
add
sbbb
add
add
leave
lret
add
add
std
into
out
test
mov
add
push
add
xchg
push
fwait
lahf
add
lcall
rclb
lea
push
call
repnz
add
add
jno
int
addb
add
add
pop
add
clc
lea
jnp
jnp
add
jns
aam
jmp
add
stos
popa
pushf
fldenv
call
fwait
lods
add
push
add
add
add
pop
jmp
cmpl
jne
push
xor
xor
shr
pop
mov
push
lea
pop
mov
push
push
push
rol
dec
push
sub
add
ror
sub
inc
lea
pop
sub
pop
push
push
push
push
call
or
add
popa
add
jp
xchg
cmc
add
add
add
in
add
jnp
mov
je
movsl
mov
add
fwait
data16
lock
pushl
call
push
add
pop
call
push
push
add
shl
push
push
pop
add
dec
sub
sub
sub
pop
xor
sub
add
shl
pop
push
lea
push
lea
push
push
push
call
add
xlat
enterw
ret
mov
pushf
outsl
fiaddl
stos
add
shrb
lret
jecxz
loop
jae
add
jge
mov
xlat
aam
js
imul
lea
pop
call
push
shr
pop
call
push
push
inc
inc
add
dec
push
or
inc
add
ror
sub
sub
shr
inc
sub
pop
inc
pop
push
not
pop
pushl
push
lea
push
push
push
lea
push
lea
push
call
add
add
outsl
pop
enter
add
loop
stc
in
add
fstp
lret
addl
lock
add
jae
popa
js
cwtl
loop
add
loope
add
scas
push
fiadds
sub
pop
call
push
lea
add
xor
pop
call
push
push
add
shr
add
shr
push
or
not
add
shl
shl
sub
sub
rol
add
not
xor
pop
lea
sub
not
pop
push
sub
pop
pushl
push
shl
pop
call
push
push
lea
push
push
push
push
lea
push
push
call
mov
pushf
mov
add
addr16
add
fisubrs
add
pop
leave
testb
mov
test
add
cld
aam
roll
sub
pop
call
push
push
sub
shl
push
or
not
add
sub
dec
ror
pop
add
lea
pop
push
dec
add
not
pop
pushl
push
dec
xor
ror
pop
call
push
lea
inc
xor
shl
pop
call
push
push
dec
add
rol
push
and
add
sub
dec
shr
sub
inc
pop
rol
pop
push
not
pop
pushl
call
push
push
push
push
lea
push
lea
push
call
mov
add
add
mov
add
add
loopne
scas
jmp
add
lods
add
pop
cwtl
in
insb
add
lods
test
in
call
call
push
push
lea
push
or
not
add
not
add
sub
dec
lea
pop
rol
sub
shl
pop
push
shl
xor
sub
inc
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
add
add
add
repnz
aam
enter
add
testb
xchg
push
add
xchg
lret
mov
add
test
pusha
mov
insb
add
insb
add
lahf
add
ja
roll
push
add
inc
and
add
shrb
imul
enter
incl
sar
pop
add
inc
ror
shr
not
sub
xor
ror
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
xchg
lret
cmc
fiadds
add
add
xchg
add
imul
jle
pop
mov
add
add
jno
push
mov
lret
jle
in
loopne
pushl
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
faddl
jnp
add
fdivl
jns
cwtl
xchg
call
ja
xchg
filds
add
testb
add
pop
pop
imul
cmpsl
add
insb
push
test
jl
mov
addr16
in
fdivr
lcall
aaa
pop
add
push
pop
call
push
push
sub
dec
push
and
add
add
sub
add
sub
pop
rol
sub
shr
pop
push
push
push
push
call
stos
in
add
mov
add
mov
add
add
data16
lea
mov
mov
int3
lea
add
add
mov
aam
add
sub
pop
pushl
call
push
push
push
push
push
lea
push
push
call
in
add
xchg
add
pop
add
pusha
add
aad
add
add
in
push
ja
addl
sahf
insb
cmpsl
add
in
lcall
add
cld
out
push
add
add
loope
out
cld
fsubr
adc
push
push
aad
add
out
xchg
add
fiadds
xchg
lds
mov
sub
pop
call
push
push
lea
push
xor
add
shl
inc
sub
shr
pop
dec
pop
push
not
pop
pushl
call
push
push
push
push
lea
push
push
push
call
out
hlt
push
push
test
jnp
aad
scas
add
sarb
mov
loope
add
aad
in
in
aam
add
stos
enter
stos
pop
fwait
mov
add
lcall
pushf
and
call
int3
not
pop
push
push
lea
push
push
push
lea
push
push
lea
push
call
out
add
jnp
add
add
add
add
jecxz
mov
leave
faddl
xchg
jno
add
bound
cld
clc
test
add
iret
add
in
add
jecxz
add
mov
add
out
testl
addl
xchg
jb
rolb
js
jmp
lcall
shrb
scas
jp
push
add
shl
sub
push
xor
add
xor
sub
ror
pop
not
pop
push
lea
push
push
push
lea
push
push
push
call
scas
add
fdivp
add
add
loop
add
jns
aad
add
add
ret
add
enter
add
mov
push
pop
repnz
jp
out
mov
add
popf
add
into
clc
iret
add
add
lds
mov
lcall
jne
push
push
push
push
push
call
add
mov
mov
add
add
jecxz
xchg
out
iret
jb
add
jle
mov
xchg
popf
add
add
pop
add
bound
add
add
cli
mov
leave
sub
pop
call
push
shr
add
pop
call
push
push
inc
add
push
and
add
shl
lea
sub
sub
xor
pop
shl
add
pop
push
lea
push
push
push
push
push
lea
push
call
add
push
rcll
cld
lcall
mov
add
add
sbbl
movl
fsubrp
add
add
add
leave
mov
add
add
repnz
add
add
scas
add
add
mov
std
pop
add
add
sub
pop
pushl
push
lea
push
push
call
mov
pop
add
scas
push
mov
pop
add
lea
fs
mov
add
add
into
icebp
add
xchg
lret
add
loop
add
sahf
add
add
add
mov
add
add
add
xchg
sub
pop
call
push
sub
sub
pop
call
push
push
sub
push
xor
add
xor
ror
shl
shr
sub
add
pop
shr
lea
pop
push
ror
pop
pushl
push
sub
inc
ror
shr
pop
call
call
push
push
rol
push
or
not
add
sub
shl
ror
sub
pop
lea
pop
push
lea
push
push
push
push
lea
push
call
nop
push
jo
cwtl
add
lahf
xchg
add
mov
ret
ljmp
xchg
add
xchg
add
mov
add
jl
lods
pop
std
add
xchg
mov
std
fsubr
add
lcall
jne
call
push
push
add
add
push
xor
add
xor
sub
sub
rol
rol
pop
xor
add
not
pop
push
push
shr
push
or
not
add
sub
inc
sub
sub
inc
pop
xor
pop
push
push
push
push
call
jle
imul
mul
jbe
add
fcmovnb
add
add
cmc
fidivs
fdivrl
mov
add
jb
add
add
shlb
shrl
mov
mov
add
jnp
push
imul
add
call
push
sub
shl
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
add
stos
add
popa
add
enter
loope
xchg
jae
jp
add
arpl
add
movb
flds
xchg
ljmp
add
in
loopne
lcall
jne
push
not
pop
call
push
pop
mov
push
ror
shr
add
sub
pop
int
push
ror
pop
lea
push
push
rol
inc
dec
sub
push
or
inc
add
sub
sub
lea
add
shl
pop
ror
add
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
int3
sti
xchg
add
add
pusha
jle
add
lcall
add
add
lds
mov
add
add
lcall
jne
push
lea
push
push
push
push
push
push
push
lea
push
push
call
jae
add
pop
add
stc
add
add
jb
add
add
out
add
add
add
addl
add
xchg
xchg
jo
cmpsl
cli
add
mov
out
add
imul
fsubr
ja
popl
std
sub
pop
call
push
push
push
push
push
push
lea
push
push
call
mov
jns
add
add
add
ror
in
enter
push
in
outsl
add
mov
add
rolb
lcall
pusha
stc
lret
fiadds
add
imul
sub
pop
push
call
push
push
sub
rol
sub
push
xor
add
shr
sub
sub
xor
shl
inc
pop
dec
sub
sub
add
pop
push
push
call
add
test
jne
nop
push
push
push
popa
add
mov
jae
pusha
mov
mov
scas
lret
jbe
push
mov
add
push
add
imul
aad
icebp
xchg
stos
cmpsb
push
ror
jp
xchg
out
add
xchg
mov
lret
mov
in
clc
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
jne
push
popa
pushf
xlat
add
in
add
cmpsb
jmp
popf
aad
pop
pushf
add
std
add
add
add
shll
jp
mov
adcl
stos
add
add
insb
sub
pop
call
push
ror
ror
add
pop
call
mov
push
add
pop
lea
push
push
add
push
push
pop
add
shl
dec
sub
shl
pop
rol
add
dec
pop
push
push
push
push
push
push
push
call
roll
out
fwait
iret
add
imul
into
out
rolb
fimull
in
ror
iret
imul
add
nop
add
add
add
add
mov
jo
scas
add
icebp
stos
addb
add
mov
pusha
jp
add
lods
out
int
repnz
pop
pushl
call
push
lea
push
lea
push
push
call
int3
xchg
add
ljmp
stc
pusha
popl
loopne
cmpsb
lcall
add
mov
cmpsl
add
gs
lahf
pop
mov
add
jle
add
jl
jae
cmpsl
popf
lahf
mov
mov
pop
faddl
lcall
add
push
push
inc
rol
inc
pop
push
push
push
push
push
call
addb
testl
add
push
leave
add
lock
popa
mov
mov
icebp
mov
push
add
add
sar
sub
pop
push
pushl
push
push
shr
lea
dec
push
push
pop
add
ror
xor
sub
add
sub
shr
ror
pop
sub
pop
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
add
add
add
push
add
roll
push
push
clc
add
lock
add
mov
mov
mov
jle
test
add
gs
mov
jnp
add
add
add
add
add
add
ljmp
sub
pop
push
call
push
push
shr
xor
push
sub
add
sub
ror
sub
shl
xor
add
pop
sub
pop
push
not
inc
xor
pop
pushl
call
push
push
push
push
lea
push
push
push
push
push
lea
push
call
imul
add
fs
add
jns
pop
fildl
lcall
push
add
add
mov
cld
mov
lcall
mov
stos
stc
fidivl
mov
fwait
shlb
fdivr
lcall
call
out
in
aas
ror
ror
pop
call
push
push
add
not
push
or
inc
add
add
sub
add
xor
lea
shr
pop
sub
pop
push
push
push
lea
push
push
push
push
call
cmpsb
add
pop
fwait
add
push
add
pop
jnp
mov
add
clc
mov
xchg
cltd
fdivs
lods
add
jge
gs
pop
pushl
push
xor
sub
add
pop
call
push
push
push
call
xchg
add
popf
in
push
xchg
xchg
fsubr
pop
add
insb
clc
in
std
imul
add
xchg
add
add
push
add
idivb
push
pop
lret
xchg
add
iret
sub
pop
call
push
ror
pop
pushl
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
rolb
ljmp
add
loope
hlt
add
cli
fwait
test
mov
add
add
add
enter
xchg
mov
mov
add
add
add
add
fwait
push
addb
add
add
fcomps
mov
push
add
pop
jmp
push
push
rol
push
push
pop
add
shr
dec
ror
sub
add
add
dec
shr
pop
shr
shl
dec
xor
pop
push
push
call
movsb
cld
addr16
mov
xlat
xor
add
jge
add
out
push
cli
adc
pop
sahf
mov
loop
xchg
movsb
pop
push
mov
add
push
mov
pushl
call
push
rol
pop
push
push
pop
call
push
push
shr
ror
xor
push
push
pop
add
sub
sub
sub
add
xor
pop
shl
shl
pop
push
shl
sub
lea
pop
pushl
call
push
lea
inc
pop
push
push
shr
shr
pop
call
push
add
pop
leave
push
push
call
lods
into
add
call
imul
mov
cmpsl
add
add
add
mov
bound
mov
mov
add
add
les
pop
push
inc
pop
pop
pop
push
push
push
call
add
loop
mov
xchg
shll
repnz
add
nop
xlat
add
push
lock
add
int3
add
mov
jne
cltd
mov
add
add
bound
add
xlat
push
xchg
fadds
sti
add
add
mov
test
in
mov
lcall
rclb
je
adc
sub
add
addl
add
add
jmp
add
add
mov
imul
hlt
mov
jmp
pop
inc
ret
push
push
push
push
push
push
call
stos
cmpsb
mov
mov
xchg
add
bound
add
add
add
add
mov
push
mov
mov
roll
cmpsb
je
fs
add
mov
push
mov
scas
fiaddl
add
add
test
add
add
mov
aam
xchg
add
std
jge
add
in
mov
sub
pop
leave
push
push
push
push
call
iret
jns
add
loope
add
hlt
stc
test
add
aam
aam
xlat
add
add
jae
add
add
push
pop
add
mov
pop
out
faddl
jbe
clc
fsubp
add
mov
xchg
mov
mov
in
lock
lcall
or
push
push
ror
add
shr
shl
pop
mov
cmpl
jne
push
lea
push
call
add
add
or
frstor
rcll
add
int
add
incb
add
add
sti
add
add
add
add
add
add
fidivs
clc
lcall
inc
and
push
lea
push
push
push
call
add
xchg
repnz
add
add
jmp
test
jmp
add
xchg
jnp
popf
push
subb
add
jne
std
add
add
repnz
add
add
add
subl
mov
jmp
mov
push
push
lea
push
push
push
push
push
call
mov
jo
stc
cli
add
push
jb
jmp
pushf
ja
jne
add
pop
lahf
add
mov
in
cltd
in
data16
negb
popa
add
cmpsl
hlt
add
add
sub
pop
and
push
push
push
push
push
call
fldl
out
mov
add
add
jmp
add
cld
aad
add
add
jle
add
in
add
pop
ljmp
push
add
data16
add
jae
pop
mov
in
lcall
leave
push
push
push
push
push
push
call
pusha
int
add
add
mov
add
push
xlat
add
stos
in
stos
mov
cmpsb
lods
pop
add
add
ret
icebp
fsts
jns
push
mov
add
roll
push
pop
jbe
scas
xor
inc
pop
add
push
sub
pop
xor
dec
push
push
call
mov
jae
mov
jbe
pop
add
jge
in
out
fs
jge
xchg
add
add
add
js
add
add
add
jle
sahf
lret
add
mov
add
add
add
add
shll
test
cmpsl
lcall
add
addr16
pop
sub
jmp
push
rol
pop
sub
pushl
push
push
push
lea
push
push
push
push
lea
push
push
call
add
aam
stos
js
add
test
mov
push
in
aam
lea
add
add
in
add
mov
xchg
lock
add
mov
scas
add
add
out
xchg
add
add
add
in
fdivr
lcall
push
lea
pop
sub
push
push
push
push
push
lea
push
call
add
add
add
add
push
lcall
les
outsl
mov
arpl
add
add
mov
add
out
add
add
mov
xchg
mov
mov
mov
add
add
add
cmpsl
add
sub
pop
cmp
jne
push
push
push
push
call
mov
stc
jbe
cli
add
add
pop
jbe
test
add
pop
add
add
mov
cld
pushf
arpl
lock
lcall
enter
push
push
push
push
push
push
push
push
push
call
add
add
mov
jbe
push
nop
add
add
mov
add
shr
add
sahf
push
movsb
add
les
add
add
mov
add
add
add
add
mov
out
jge
add
mov
movsl
stos
jl
mov
jmp
lea
push
call
shll
mov
nop
out
push
jl
jns
add
add
data16
push
mov
mov
scas
addr16
lods
jmp
mov
pop
jo
jl
notb
push
xlat
imul
mov
loopne
sub
pop
shr
push
not
pop
add
push
inc
pop
sub
push
lea
push
lea
push
lea
push
push
push
call
mov
shr
add
add
add
push
add
out
lea
add
in
jle
add
test
add
lcall
xor
push
lea
push
call
mov
add
add
mov
add
pop
lods
jno
add
lds
fidivs
push
mov
roll
add
add
in
hlt
lcall
jmp
and
push
push
push
push
push
call
xchg
add
andl
insb
add
jl
add
addl
add
fildll
add
add
sub
pop
sub
push
push
push
lea
push
push
push
push
call
movb
push
jae
mov
add
add
jne
add
add
mov
rol
add
add
loop
mov
ljmp
or
add
movl
sub
pop
cmp
jne
push
lea
push
push
push
push
push
call
arpl
ret
ja
add
jo
stc
xchg
jmp
insb
test
insb
rolb
out
push
mov
cmpsl
mov
movsb
add
add
mov
cltd
add
add
mov
add
clc
add
add
add
mov
add
add
add
mov
add
stos
xchg
mov
sub
pop
leave
push
shr
pop
ret
push
push
push
lea
push
call
sahf
add
jge
stos
add
add
push
faddl
testl
add
add
ljmp
sar
add
fstl
jne
aad
add
add
ljmp
hlt
lcall
in
add
push
push
push
lea
push
lea
push
call
arpl
pop
rclb
add
mov
add
mov
add
enter
popa
pop
xchg
cli
fadds
xchg
add
cld
xchg
rcll
add
mov
add
hlt
scas
add
sub
pop
push
push
push
push
lea
push
call
mov
add
add
shrl
xchg
add
add
mov
xchg
add
jno
add
into
pop
cmc
lods
fcmove
add
add
mov
add
subb
mov
pusha
fidivrs
pop
add
out
mov
add
shll
sub
pop
push
push
push
call
addr16
xorl
push
into
sarl
add
mov
add
fwait
pop
incb
mov
testb
mov
add
add
fldl
push
not
pop
push
push
push
ror
ror
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
add
int3
iret
jl
rcr
push
lret
add
addb
push
insb
sarl
add
imul
add
stc
mov
loopne
lea
push
lea
inc
pop
sub
push
push
push
lea
push
lea
push
push
lea
push
call
xchg
add
movb
mov
imul
in
add
xchg
pop
jle
add
add
int
push
cli
gs
add
je
add
lahf
add
movl
out
scas
add
add
repnz
add
add
add
cltd
add
aad
add
in
in
mov
push
push
lea
push
push
push
call
add
add
int3
pop
mov
add
add
lea
jecxz
add
add
add
jecxz
hlt
add
addl
add
cld
push
sub
pop
shr
add
push
lea
push
push
push
push
call
add
imul
int3
lahf
jb
add
in
addl
lock
push
add
xchg
std
imul
add
add
add
add
filds
fwait
addb
add
out
add
lea
not
pop
add
push
ror
pop
mov
add
push
shl
pop
xor
push
push
push
lea
push
call
xchg
add
jmp
pop
mov
mov
add
xor
int
add
jge
out
pop
mov
add
mov
push
push
in
lock
lcall
xlat
and
push
ror
inc
pop
rol
push
sub
ror
sub
ror
pop
rol
push
sub
pop
xor
push
lea
push
push
push
call
add
jge
mov
jne
mov
add
ja
add
push
add
pusha
js
add
jnp
sti
jmp
in
lock
lcall
cmpb
jne
push
sub
pop
add
push
not
inc
rol
pop
cmp
je
push
sub
rol
pop
add
push
push
call
add
add
push
add
out
add
jae
mov
testl
add
out
jge
int3
add
cmpb
push
ja
jge
add
movsl
mov
push
xorb
jne
movsl
xchg
add
into
mov
add
jmp
mov
out
insb
add
jnp
add
test
rclb
xor
push
push
push
push
push
push
push
lea
push
call
add
add
testl
in
pop
add
mov
jb
mov
cmpsb
add
lods
imul
lea
mov
add
jl
divl
add
add
add
mov
rcr
push
add
sarl
jae
mov
mov
jb
cmpsb
loop
or
push
mov
fdivr
lcall
pop
push
push
push
call
addb
lods
push
add
jbe
fucomp
add
add
add
mov
add
nop
mov
ret
pop
lock
xor
jne
push
add
add
jge
jo
add
fwait
mov
push
lods
add
push
sub
pop
pop
push
sub
inc
pop
pop
leave
push
push
call
gs
jbe
mov
add
add
cltd
aam
push
add
fprem1
add
in
jns
jbe
xchg
mov
ljmp
add
mov
add
add
add
add
fldl
add
call
pop
sub
pop
ret
mov
push
lea
push
lea
push
lea
push
push
push
call
jnp
fsub
add
jne
add
add
add
add
add
movb
mov
pusha
popa
add
stc
add
test
add
mov
sub
pop
add
push
push
call
pop
mov
lahf
out
push
mov
add
add
aad
add
mov
mov
ja
add
nop
jge
stc
add
sub
pop
mov
push
add
lea
add
pop
push
push
push
push
lea
push
push
push
push
call
jbe
jno
fs
add
jnp
jge
fiadds
add
test
test
pop
incb
add
add
iret
hlt
add
add
fidivl
add
subl
mov
stos
cmpsl
xlat
xchg
mov
add
rol
je
mov
rcr
mov
lods
sub
pop
mull
push
push
push
push
call
lret
cli
imulb
add
push
cld
add
pop
je
cmp
add
jge
fnstcw
stos
clc
stos
shrl
fiaddl
in
cltd
add
push
stos
add
shr
stos
add
in
add
add
add
icebp
add
sub
pop
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
stc
iret
movsb
addr16
jbe
add
les
push
add
jne
sahf
mov
notb
imul
add
shrb
add
add
call
add
in
mov
add
imul
mov
movl
push
push
lea
push
push
push
call
cltd
js
add
rcll
arpl
jb
xchg
testb
push
stos
jae
add
in
lcall
lcall
call
push
xor
pop
xor
push
rol
sub
dec
pop
pop
pop
push
rol
pop
pop
push
rol
shr
xor
pop
pop
push
sub
not
shl
add
pop
pop
leave
push
shr
pop
ret
push
dec
ror
sub
pop
push
push
shl
pop
mov
add
push
lea
add
shr
pop
push
push
push
lea
push
push
push
lea
push
call
sahf
mov
lret
stc
pop
xchg
add
add
add
mov
in
mov
mov
arpl
add
add
imul
pop
pop
add
lods
mov
cmpsb
xchg
loopne
in
mov
add
pop
mov
add
add
add
jmp
mov
popf
scas
je
mov
lcall
push
push
push
push
push
push
lea
push
push
push
call
jbe
lcall
add
mov
aam
pop
test
mov
mov
stos
add
add
add
add
jmp
popf
push
bound
lret
loopne
jns
add
jb
add
add
lock
mov
jbe
add
mov
int
add
cwtl
enter
lcall
push
sub
sub
pop
mov
push
push
push
push
call
out
mov
out
movsl
add
pusha
ljmp
movb
imul
testl
rorl
add
stos
add
bound
add
mov
enter
xchg
add
sahf
mov
add
addl
mov
mov
repnz
mov
lds
add
jecxz
cli
mov
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
imul
mov
ret
std
mov
mov
add
add
sahf
sti
xlat
add
add
add
data16
bnd
pop
add
mov
jnp
xchg
add
mov
sarb
clc
loope
mov
rcl
sub
pop
pop
lea
push
push
push
push
push
lea
push
lea
push
push
call
mov
mov
add
mov
add
lret
add
mov
lods
add
out
add
jne
pop
add
add
pop
jae
stc
add
add
cmpsl
stos
mov
add
ljmp
pop
shr
push
rol
pop
add
push
push
lea
push
lea
push
call
stos
push
jmp
add
lods
aad
mov
testb
add
add
out
mov
add
in
jmp
add
popa
push
push
leave
test
add
push
push
ret
ret
add
roll
xchg
push
aam
iret
aad
add
cld
movsl
bound
add
cmpsb
add
test
lcall
out
mov
lcall
pop
js
dec
shl
xor
pop
add
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
icebp
add
jo
loopne
mov
add
cld
add
add
out
ror
add
out
add
lods
aad
add
add
mov
icebp
test
in
mov
test
mov
push
add
add
int3
add
xchg
in
fiadds
roll
lcall
jae
push
push
call
cmc
cmpsb
lds
xchg
add
add
ljmp
add
add
testl
ficompl
movsb
fs
out
testb
fidivrl
jns
pusha
sarl
clc
shlb
xchg
pusha
add
add
inc
clc
push
rol
pop
mov
push
push
lea
push
push
push
push
push
call
add
ljmp
scas
add
arpl
pop
add
add
inc
in
xchg
add
pop
add
jecxz
add
add
popl
jnp
add
sub
pop
add
xor
push
shl
rol
sub
pop
lea
push
push
lea
push
lea
push
push
push
push
call
jb
add
add
pop
int3
add
gs
in
add
loop
jle
in
add
mov
movsl
add
add
add
leave
add
outsl
ret
in
in
lcall
adc
rol
pop
add
push
push
push
push
lea
push
push
push
push
push
call
jne
lods
push
push
add
movsl
add
out
add
test
cld
push
add
outsl
add
rolb
mov
add
cli
jnp
movsl
sahf
jno
add
mov
in
sbbb
mov
jle
gs
add
lcall
rclb
add
rol
nop
push
add
shl
add
add
pop
nop
push
not
add
shr
pop
xor
push
push
push
push
push
call
add
scas
add
in
pop
int
in
jbe
jae
hlt
add
popa
mov
rolb
add
add
add
add
add
in
lcall
push
shr
sub
add
pop
nop
inc
push
push
push
push
push
lea
push
lea
push
push
push
call
add
scas
add
shlb
add
add
add
jl
pop
jne
adc
movl
mov
add
add
add
loopne
push
add
add
mov
in
fdivr
lcall
push
sub
ror
pop
nop
push
lea
push
push
push
call
in
add
mov
add
add
cmpsb
push
fcompl
add
lcall
add
clc
mov
add
movsl
add
arpl
add
test
add
data16
add
add
add
lcall
fnstcw
add
mov
sub
pop
cmpb
jne
push
push
push
push
push
push
call
out
add
add
add
lds
outsl
mov
jle
shll
je
stos
fistpll
movsl
js
shll
pop
ficomps
add
test
push
imul
in
addr16
add
sub
pop
add
nop
push
add
add
ror
pop
nop
cmp
je
push
ror
pop
nop
nop
push
push
push
call
mov
fst
mov
add
sti
add
imul
ja
sahf
mov
add
add
push
add
stc
testb
out
mov
nop
push
sub
dec
shl
pop
nop
push
add
pop
cmp
jb
xor
push
pop
jmp
mov
push
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
rorl
lock
jl
mov
add
loopne
add
add
mov
push
xlat
add
sub
pop
add
movzwl
push
push
push
push
push
push
lea
push
push
push
call
push
push
mov
movsl
add
xchg
add
mov
xchg
cli
add
imul
popl
jl
test
add
jle
mov
push
add
add
add
mov
mov
jecxz
add
in
fcompl
inc
sbb
rcll
xor
shl
inc
pop
mov
push
shl
shr
pop
xor
push
lea
push
lea
push
push
push
push
push
push
call
xchg
add
lcall
mov
add
pop
add
add
addl
add
add
fildl
add
clc
clc
add
les
add
add
add
pusha
mov
xchg
add
sarb
push
je
add
add
add
sub
pop
xor
shl
push
lea
push
push
push
call
repnz
add
add
add
add
test
add
cmpsb
add
add
add
pop
mov
lcall
dec
nop
add
adc
push
lea
push
push
call
add
add
add
jmp
imul
jbe
cmp
push
fsubrl
cli
add
pop
in
push
rolb
ficoms
fbld
add
push
mov
pop
add
sub
pop
shl
xor
push
push
push
push
call
add
push
add
xchg
jno
add
push
add
jge
stos
add
jp
add
mov
xchg
add
mov
mov
in
add
add
stc
pop
out
mov
incb
cmpsl
leave
in
into
add
faddl
xchg
cli
add
mov
add
sub
pop
shl
push
inc
inc
shr
pop
xor
mov
push
push
push
push
lea
push
push
push
push
call
out
jb
push
jmp
add
add
sahf
fistl
pop
add
xchg
mov
int3
add
rorb
mov
js
pushf
enter
icebp
les
cmpsb
add
stos
add
shlb
leave
push
cld
pop
rcrl
jo
add
xchg
cmpsl
icebp
loopne
arpl
add
add
sub
pop
add
push
sub
pop
pop
push
xor
inc
add
add
pop
pop
pop
push
xor
inc
pop
pop
push
dec
sub
add
pop
leave
push
pop
ret
push
push
push
push
lea
push
push
push
push
lea
push
push
call
cli
jbe
add
add
mov
xchg
pop
js
cltd
add
mov
add
add
add
pusha
mov
add
add
fcmovbe
in
ja
add
add
pop
add
add
add
shl
in
fdivr
lcall
mov
push
xor
pop
push
push
push
lea
push
push
push
push
call
add
add
int
mov
add
add
hlt
jmp
xchg
in
jl
push
hlt
pusha
mov
notl
add
pop
lcall
pop
push
push
sub
shr
pop
push
mov
push
shl
ror
sub
lea
pop
mov
mov
push
add
not
not
pop
test
je
push
push
lea
push
push
push
push
push
call
lcall
clc
add
mov
push
addb
jb
not
stc
pop
stc
pop
mov
leave
shr
mov
add
add
add
nop
jo
gs
outsl
ljmp
add
mov
in
lcall
jno
push
push
push
push
lea
push
push
lea
push
push
push
call
iret
mov
add
add
mov
stos
add
add
push
fwait
loopne
popa
add
add
add
add
add
lcall
testb
lret
add
ffreep
ret
cmpsb
pop
mov
push
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
mov
add
xchg
loope
loop
add
pop
push
add
add
add
cltd
mov
add
mov
mul
add
fiadds
push
xchg
add
add
add
imulb
jmp
lcall
pop
inc
push
lea
push
call
out
add
jae
in
add
xchg
xchg
mov
add
xchg
shrl
lret
add
fildl
add
add
add
andl
popa
mov
insb
add
filds
rorb
test
add
add
fisttps
ret
jg
test
je
push
push
push
push
push
push
call
mov
xlat
add
add
imul
add
add
push
mov
add
pop
ret
add
imul
arpl
push
xchg
add
pop
mov
push
push
push
push
push
push
push
push
call
add
add
sti
cmc
test
shrl
add
lahf
push
add
jns
add
add
add
imul
add
add
in
faddl
mov
movsl
pushf
add
movsb
add
xchg
add
sub
pop
inc
cmp
je
push
lea
pop
test
jne
xor
push
push
push
call
push
in
add
add
add
xchg
xchg
ret
pop
aad
add
push
scas
add
int3
add
add
imul
popa
push
fldl
ret
add
jl
add
add
pushf
test
js
hlt
push
sub
pop
pop
pop
push
push
call
add
loop
add
add
mov
imul
push
add
add
nop
mov
push
mov
add
add
mov
add
mov
add
add
add
add
jp
add
mov
filds
xlat
mov
add
add
add
out
in
clc
lcall
push
shr
shr
pop
pop
leave
push
lea
push
lea
push
push
call
mov
add
jne
scas
repnz
loop
add
mov
add
pushf
test
mov
xchg
add
out
add
pop
mov
jns
add
lret
jl
cwtl
push
cli
add
add
call
add
stos
add
mov
loopne
sub
pop
ret
push
rol
lea
ror
pop
mov
push
shr
sub
inc
sub
pop
inc
cmp
jne
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
addl
movl
jns
cmpsl
mov
add
cmpsb
push
cmpsb
push
lret
mov
add
mov
mov
xchg
scas
add
pop
add
pop
cmp
push
add
cwtl
add
frstor
mov
push
in
add
mov
fucomp
add
jle
mov
push
sub
inc
pop
test
je
mov
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
icebp
jecxz
xlat
jmp
ljmp
pushf
add
aad
add
rcrl
cmc
loop
int3
add
cld
pop
mov
add
sti
xchg
add
pop
jns
xchg
mov
ja
hlt
in
fdivr
lcall
movb
loopne
test
sti
call
iret
adc
inc
add
stc
pop
test
je
push
shl
add
xor
pop
mov
push
lea
lea
shr
pop
add
cmp
je
push
lea
push
push
push
push
push
push
push
push
call
add
mov
fstp
add
jb
cli
shll
add
ficompl
repnz
movb
mov
push
mov
cli
mov
mov
fcompl
inc
sti
call
xor
pop
push
lea
push
push
push
push
push
push
lea
push
call
jnp
imul
jge
add
mov
add
xor
push
pop
leave
mov
add
rolb
into
aad
in
loopne
lcall
push
ror
shr
shr
sub
pop
pop
push
push
push
push
lea
push
call
jecxz
add
add
faddl
xlat
mov
in
add
stos
add
test
ja
mov
add
pop
xchg
pusha
add
fists
add
push
insb
scas
add
lcall
leave
push
push
lea
push
push
push
push
push
push
push
push
call
jb
add
lcall
add
add
add
jle
add
stc
pop
lret
add
add
add
test
mov
add
sub
pop
ret
push
lea
push
push
push
push
push
call
add
add
add
jb
add
std
jl
imul
add
add
testb
cmpsb
add
push
add
into
add
pop
add
xchg
mov
mov
orb
faddl
ljmp
add
test
cmpsb
loop
ljmp
add
lcall
inc
call
lret
shr
add
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
shll
mov
popl
add
add
popa
les
lds
js
pop
enter
popa
cli
sahf
add
lds
out
add
jecxz
mov
repnz
test
mov
mov
jo
in
fcompl
pop
push
rol
rol
pop
pop
leave
push
push
push
push
lea
push
lea
push
push
push
call
shl
add
add
cli
stos
add
add
add
add
lock
add
out
out
add
pop
in
stos
add
lcall
add
push
add
add
nop
add
push
mov
add
add
repnz
out
add
add
loop
add
rcl
pop
mov
les
sub
pop
ret
mov
push
rol
ror
pop
pop
push
push
push
lea
push
lea
push
call
faddp
fabs
push
xchg
movsl
jl
mov
mov
add
data16
pop
add
xchg
add
xchg
jmp
add
mov
mov
mov
sub
pop
pop
push
push
call
add
ret
add
lds
stos
xchg
aad
mov
add
add
mov
push
add
nop
pop
add
lahf
enter
add
mov
pop
add
test
add
add
add
scas
aam
in
clc
pop
pop
push
push
push
push
push
push
lea
push
lea
push
call
jmp
add
add
add
add
push
aam
lods
xlat
add
pushf
add
add
mov
ja
mov
add
xchg
add
add
push
jmp
popl
je
push
push
add
add
xchg
xchg
fmul
flds
add
fldl
movsb
pop
add
imul
sub
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
popa
add
ja
in
cmc
add
add
in
lods
push
add
mov
push
mov
imul
jge
jnp
in
mov
add
add
add
fwait
rorb
in
fcomps
push
rol
ror
pop
ret
cmp
mov
inc
lret
ror
cmp
into
mov
ror
mov
mov
mov
in
lret
std
lret
xchg
lret
or
test
add
add
sti
lret
sub
add
int3
ds
stos
and
lock
lods
in
scas
xor
enter
lds
repz
jg
mov
loop
es
loopne
aad
stc
jbe
inc
add
inc
xor
daa
push
mov
test
xchg
push
imul
mov
stos
out
popa
jne
jo
test
insl
add
movsl
push
test
adc
clc
push
movsl
sbb
pop
mov
mov
addr16
jg
sbb
sub
into
out
push
test
jl
popl
lcall
push
cmp
pop
aam
adc
push
sbb
add
ja
icebp
or
dec
dec
lods
out
jno
and
mov
ret
testl
pop
adcb
sub
push
ljmp
fwait
imul
test
adc
cwtl
or
out
inc
and
je
sbb
ss
insb
test
aas
aaa
sahf
mov
sub
sub
lahf
or
aas
mov
fdivrl
xchg
cld
shl
sub
negb
pop
andb
push
loop
fld1
adc
inc
mov
movsb
mov
or
jae
inc
xor
scas
mov
jecxz
enter
int3
aas
push
xchg
insl
xchg
jmp
mov
aaa
xor
loopne
imul
insb
jle
cmp
and
and
sub
call
cmc
sti
sbb
stc
pushf
jl
bsr
loope
jbe
inc
mov
lcall
add
inc
iret
push
dec
mov
jne
mov
stos
les
dec
adcb
pop
mov
sbb
add
enter
ja
gs
sub
es
xor
mov
ret
and
pop
clc
mov
sub
test
out
inc
push
xor
dec
push
and
xchg
xchg
xchg
lea
dec
outsl
mov
gs
sbb
outsb
adc
outsb
js
scas
mov
arpl
push
and
fdivrl
push
push
rclb
negb
pop
fs
sbb
inc
aam
dec
adc
inc
and
in
inc
xchg
pop
inc
aam
pop
dec
sahf
test
pop
call
xor
fistl
aaa
mov
add
cltd
add
inc
test
int
rcll
inc
and
add
ret
daa
idivb
data16
cli
int3
push
mov
push
icebp
cmp
fsubs
orb
mov
push
stos
and
inc
xchg
shrb
push
les
pop
rcrl
shll
cmpsl
xchg
xchg
in
stc
fwait
jp
adc
aad
adc
out
repnz
in
cld
or
cli
cwtl
inc
push
outsb
or
dec
jl
add
xchg
mov
pop
call
mov
fsubrl
gs
cmpsb
cmp
push
test
pop
adc
out
stos
sahf
xor
ss
or
dec
subb
push
or
iret
pop
mov
jnp
add
adc
test
jae
sbb
cmp
shl
fiadds
mov
add
jae
icebp
in
lahf
push
lock
pusha
dec
push
jae
xlat
pop
lahf
out
aad
push
fwait
mov
sub
enter
jb
xchg
mov
xor
and
dec
out
mov
gs
sbb
roll
jg
pop
pushw
sub
jecxz
lods
dec
adc
jo
ss
and
and
stc
pop
dec
sbb
test
add
dec
insl
mov
rclb
push
pushf
in
test
adc
push
mov
pop
jmp
add
sbb
push
imul
call
pop
mov
jl
sbb
ds
xchg
xor
pop
aaa
roll
mov
fcoms
ja
jo
sbb
jp
shl
xchg
sub
xchg
push
cmpsl
cmp
and
imul
inc
push
gs
xor
sbb
arpl
jmp
or
int3
pop
xchg
adc
mov
jbe
pusha
fcoml
mov
xor
sbbl
daa
fidivrs
xor
push
sub
xor
jge
pop
pop
scas
mov
or
or
jbe
div
adc
xor
iret
rcrb
popf
mov
ss
inc
imul
int3
rolb
data16
aam
int3
xlat
jge
loopne
clc
pop
shll
fisubrs
add
pop
icebp
push
adc
mov
dec
add
test
cwtl
push
xor
cmp
test
rolb
mov
cltd
outsb
jae
jns
cmp
stos
mov
arpl
pop
testb
fisubrl
xchg
mov
movsb
bound
fdivrl
pop
cmpsl
mov
jp
addb
in
sub
push
cmc
mov
sub
sbb
call
jb
add
jp
xchg
xlat
fiadds
js
jp
mov
cmpsb
movsb
testb
or
jp
jmp
sub
add
rorl
xchg
test
adc
xchg
sbb
inc
imul
xchg
jmp
xchg
cli
mov
imul
pop
jb
jp
rorb
push
lea
xchg
das
mov
xchg
pop
or
push
dec
pushf
aam
sub
scas
and
stc
mov
pop
adc
cmc
aaa
aas
jo
mov
cld
jg
pop
cmp
push
les
and
mov
jns
bound
dec
push
sub
push
mov
popa
jbe
mov
divl
std
in
jecxz
shl
outsl
fimull
pop
ret
mov
movsb
ljmp
pushf
jno
out
stc
ret
sub
fcmovbe
push
jmp
jmp
add
hlt
jle
aam
mov
push
and
scas
movsb
xcrypt-ecb
cmpsl
dec
push
inc
movsl
mov
xlat
test
push
sbb
mov
lcall
testb
jns
mov
push
or
and
movsl
fistl
outsl
mov
fsubp
fwait
mov
aam
lahf
setb
push
jecxz
ret
pop
cmp
add
out
es
sub
push
jg
ja
repz
cmp
xor
mov
dec
out
mov
daa
nop
dec
or
xchg
aad
push
mov
mov
js
outsl
mov
arpl
jmp
dec
jne
into
mov
subb
or
repz
rcrb
pop
adc
sub
dec
pushf
xchg
leave
jb
test
xor
ret
lret
test
adc
sub
lcall
dec
jmp
adc
les
xlat
sti
mov
sub
arpl
add
cmp
mov
jmp
out
or
testb
mov
sbb
push
pop
mov
cmp
ret
and
sarb
dec
xchg
mov
lds
repnz
inc
push
ljmp
sub
jp
mov
push
cmc
test
cmp
ret
in
push
xchg
and
mov
fs
out
fimuls
jno
loop
mov
xchg
icebp
clc
fnstenv
std
pop
incl
xor
mov
fsts
hlt
sbb
sahf
adcl
js
add
stos
movsl
lret
pop
push
in
jge
dec
dec
daa
pop
xor
mov
test
aaa
leave
inc
fidivrs
xor
roll
add
outsl
aad
lret
or
add
mov
jno
outsl
xor
inc
mov
out
in
cmp
mov
leave
data16
xchg
test
dec
out
aas
ret
aad
adc
test
sub
add
loopne
mov
push
dec
jmp
lret
or
sbb
add
sti
push
inc
xor
and
aad
cmp
push
adc
repnz
mov
ror
popf
cmc
push
mov
aad
fs
and
pop
fistpll
in
sbb
loopne
pushf
cmp
mov
adc
ja
ja
outsl
into
mov
xchg
cld
and
jbe
call
mov
mov
dec
push
sbb
aad
test
out
jg
scas
mov
mov
gs
and
cmp
mov
pushf
mov
andl
mov
orl
mov
mov
lods
fiaddl
mov
cli
jmp
test
negl
dec
push
imul
pop
rorl
mov
das
jl
outsb
adc
outsl
mov
push
scas
jae
lock
jle
jmp
orl
ljmp
mov
in
cld
lcall
or
rolb
fwait
or
pxor
and
mov
jmp
call
pop
mov
mov
test
xlat
clc
je
cmp
mov
and
pop
jne
dec
inc
dec
les
das
fstl
in
push
repz
cmc
pop
sub
stc
negb
movsl
nop
je
popf
lds
stos
cltd
add
jnp
mov
xor
adc
xor
inc
nop
or
das
xor
ds
aad
cltd
mov
push
push
inc
adc
scas
loopne
jmp
daa
mov
ja
mov
loop
lret
cmp
xchg
enter
fsubrl
pop
xorl
adc
add
mov
push
cmpsl
xchg
sbb
sarl
arpl
mov
adc
addr16
sbb
fcoms
adc
jg
push
or
cltd
sbb
outsl
scas
xchg
mov
xor
add
jns
or
addr16
jge
insl
imul
int
jno
xlat
mov
clc
fwait
sub
fsubs
leave
adc
das
cmc
cmp
mov
fcoml
mov
ret
sbb
int3
add
push
adc
pop
jnp
stos
int3
iret
rorb
push
out
push
mov
pushf
ret
fnsave
clc
hlt
xchg
fdivs
cmp
cmp
orl
or
add
sbb
lods
jae
fisubl
jg
aas
pop
ljmp
outsb
rol
push
ror
push
adc
sbb
or
sti
rcll
pusha
inc
mov
push
cmp
mov
daa
pop
mov
mov
out
aas
and
or
add
mov
pop
dec
cmp
lods
cmp
mov
pop
dec
mov
inc
cltd
ret
inc
nop
xchg
jno
mov
adc
inc
inc
int
int
mov
repz
imul
mov
ret
pusha
loope
pop
pop
xchg
or
jge
jo
imul
sbb
rol
inc
fistps
and
or
add
cmp
int3
pop
rcr
stos
adc
xchg
inc
push
sbb
add
mov
dec
cmp
xchg
add
push
pop
or
mov
and
aas
xchg
jl
cld
lds
jecxz
inc
xor
popf
push
xchg
ja
mov
int
shl
lea
cwtl
or
mov
jp
scas
out
xchg
iret
lods
jo
mov
cmp
lret
ret
mov
pop
cli
shrb
fildll
movsb
dec
test
roll
inc
cmc
repnz
cs
roll
jmp
int3
div
xor
popa
inc
mov
fildl
sub
xor
hlt
cmovg
loop
jnp
adc
dec
inc
mov
cmpsl
fdiv
and
dec
cli
int
pop
xchg
xchg
and
cmpsb
outsl
add
mov
xlat
and
jb
test
mov
test
fs
lock
ss
and
dec
repz
add
movsb
pusha
mov
push
jecxz
and
xchg
adc
in
or
xor
inc
inc
mov
test
xor
mov
fdivrp
leave
int
imul
pushaw
xor
sbb
cmc
push
pop
imul
fs
aaa
pusha
lock
stc
inc
or
loopne
hlt
imul
push
adc
jb
out
xchg
and
int
add
xchg
repnz
js
fiadds
imul
pop
and
int3
leave
jb
out
sbb
jb
xchg
fwait
cs
insb
mov
lods
repnz
jns
cltd
mov
cs
das
cmpsb
jl
pusha
orps
ds
dec
inc
inc
ficoms
mov
mov
xor
stos
and
mov
stos
and
arpl
add
dec
add
xchg
ret
imul
pop
add
scas
sub
pop
nop
movsl
scas
sahf
sub
in
aas
es
pop
cmc
arpl
add
mov
hlt
xor
inc
adc
test
lahf
sbb
stos
shll
fwait
jne
popa
fldt
xor
xor
call
push
jmp
dec
mov
aam
dec
and
inc
test
push
or
stos
jl
mov
add
out
fmuls
mov
mov
into
in
into
dec
arpl
leave
neg
inc
pushf
mov
sub
mov
das
enter
loopne
dec
pop
add
lds
mov
cld
roll
cmp
int
push
stos
lods
mov
lret
in
mov
pop
clc
outsl
test
les
adc
fisubrl
ret
enter
push
adc
dec
add
adc
ret
sbb
out
lock
push
cmp
adc
ljmp
gs
jg
aam
pop
cs
int
pop
push
push
mov
cmpsb
cmpsl
jge
mov
sarb
pop
dec
sbb
dec
xchg
es
outsb
xor
or
sub
mov
mov
mov
adc
xchg
pushf
loopne
sub
das
add
jbe
adc
les
xor
sti
mov
lods
aam
fidivs
xor
pop
fdivrs
stos
add
and
jge
test
enter
cmp
mov
mov
dec
ss
cmp
fs
aaa
pop
or
jo
adc
fcomps
cli
cltd
rol
adc
in
sbb
xor
mov
and
dec
xchg
sti
aam
mov
arpl
dec
lcall
jno
das
inc
insb
cmp
lret
pushf
mov
or
add
pop
lds
leave
aas
sbb
ret
loop
lret
mov
movl
mov
pop
repz
scas
sbb
sar
loope
dec
out
or
nop
mov
int3
fnsave
jae
mov
cs
pop
out
cmpsl
xor
inc
hlt
cld
rclb
stc
les
inc
ds
call
mov
gs
std
adc
scas
ja
inc
insl
mov
mulb
das
loop
dec
fbld
in
js
pop
in
das
mov
mov
cmp
in
aaa
inc
xchg
push
in
mov
adc
movsb
push
pop
gs
jne
js
mov
pop
out
adc
push
sub
mov
xor
mov
push
int3
cmp
inc
mov
test
jmp
xor
inc
aad
subl
adc
lret
and
js
mov
sub
fsts
push
popa
push
adc
movsb
xchg
movsl
adc
cmpb
mov
test
stc
add
inc
js
inc
sbb
hlt
outsb
insb
lock
push
fisubrl
ljmp
pop
fcompl
xchg
fimull
push
fstps
pop
mov
std
outsb
mov
lahf
in
mov
sbb
or
dec
shlb
movb
dec
or
mov
xchg
mov
mov
add
mov
jne
xor
mov
repnz
pop
mov
mov
cmp
out
out
pop
push
addr16
loope
scas
mov
xorl
mov
add
popf
or
cmp
lods
cs
mov
sahf
lods
ljmp
in
and
dec
adc
mov
shrb
pop
sub
pop
repnz
mov
cmpsl
les
cmp
rcrl
scas
push
xchg
pop
stos
lea
in
jmp
ljmp
les
xchg
in
add
mov
test
sub
popf
xor
shr
mov
clc
add
pop
dec
xor
sahf
mov
pushf
cmc
dec
push
popa
ja
ret
and
jmp
shrb
hlt
mov
pop
sbb
add
sbb
mov
xchg
scas
orl
adc
dec
iret
das
push
sbb
mov
push
cmp
lret
sbb
out
fidivs
mov
sarl
in
stos
rcl
movsb
push
inc
ret
xchg
ljmp
mov
mov
aas
les
jbe
lcall
jle
sbb
cli
mov
scas
xchg
mov
mov
in
or
mov
or
scas
fwait
ljmp
movsl
push
outsb
andb
mov
out
test
ret
mov
mov
xchg
std
insb
daa
dec
xchg
fs
sbb
cmp
cmp
insb
mov
outsl
sarb
addr16
loop
push
cmp
lock
roll
dec
sbb
pop
inc
xchg
lcall
cmp
sahf
push
jb
xchg
xor
xlat
dec
andl
jo
test
nop
data16
movsb
testb
dec
into
in
push
jp
fsubrs
push
and
test
lahf
nop
mov
nop
ja
icebp
mov
sub
lods
addr16
daa
movsl
popf
ljmp
fs
push
mov
aam
sti
push
pop
jno
pop
jle
lock
out
out
ret
mov
jp
dec
mov
xor
mov
push
pop
pop
pop
push
sbb
int3
xchg
test
pushf
push
fwait
test
xchg
mov
fwait
or
mov
mov
test
hlt
cmpsb
pop
cltd
cmp
and
push
jo
mov
test
prefetcht1
mov
shl
cmp
ljmp
pushf
sbb
scas
in
xor
lds
scas
divl
fs
lods
imul
xor
cmp
divb
jns
mov
lahf
out
add
call
jmp
adc
xchg
aad
insb
pusha
sub
jns
inc
sub
mov
mov
jmp
loope
fwait
imul
pop
rcl
and
and
test
push
in
push
mov
or
out
xchg
or
jge
jns
fldcw
jle
fdivrp
cmp
sbb
xchg
and
clc
out
xchg
out
mov
cmp
jp
and
leave
inc
or
into
lods
int
add
fdivp
push
in
inc
add
xor
aas
scas
pop
filds
fists
mov
fimuls
je
daa
jnp
push
inc
movl
cmp
repnz
loop
sub
lahf
adc
inc
lret
cmpsb
stc
les
fildll
inc
adc
and
inc
cs
push
es
je
dec
in
bnd
arpl
cmpsl
add
jl
pop
cmp
enter
mov
arpl
dec
mov
cmp
adc
les
out
push
sti
scas
jbe
jnp
aaa
lods
xchg
jno
pop
xor
inc
mov
in
xchg
pop
mov
adc
mov
fdivs
mov
mov
mov
je
leave
push
jbe
pop
inc
adc
loopne
adc
push
mov
js
cs
leave
pop
in
stos
fistpll
or
ret
sbb
imul
fcoms
push
ret
std
sbb
out
push
mov
mov
mov
ss
lods
fdivs
pusha
pop
pop
adc
mov
push
mov
inc
or
out
lahf
xlat
out
lcall
les
cltd
das
clc
push
adc
dec
lea
jae
popf
dec
adc
cli
and
push
bound
and
xor
dec
jnp
repz
xor
or
or
stos
and
fists
adc
out
rcl
jle
movsb
iret
inc
or
movsl
lods
push
xchg
pop
aaa
lcall
mov
ficomps
mov
aas
xlat
inc
lcall
addr16
cmp
incb
gs
mov
fstl
fcmovbe
jno
inc
repz
push
push
ljmp
fsubr
mov
rolb
jo
ja
push
out
inc
push
mov
ljmp
xchg
and
adc
lea
js
mov
jne
mov
xlat
xchg
inc
imul
lds
popf
xor
into
dec
jle
add
test
ljmp
and
inc
push
push
dec
out
push
outsl
sarl
popa
gs
mov
mov
pop
imul
mov
out
mov
inc
jle
test
cmp
out
xchg
mov
add
es
adc
mov
dec
xchg
stc
je
jo
daa
rcll
fnstenv
inc
out
xchg
xchg
lods
adc
push
adc
pushf
xchg
lcall
xchg
sbbl
addr16
out
cmp
inc
push
xchg
dec
and
xchg
ret
jo
dec
push
push
mov
lds
sbb
pop
lds
out
adc
and
inc
mov
pop
add
popf
adc
stos
int3
nop
push
lahf
dec
mov
fldl
or
subl
or
test
xlat
aas
repnz
outsl
aaa
pop
mov
or
aaa
mov
mov
movb
mov
scas
or
add
movb
popf
xor
pop
punpckhwd
push
popa
jb
or
mov
test
fiaddl
cli
fbstp
push
and
xor
cltd
cmp
inc
jp
push
xor
cmc
xchg
setne
cmp
insl
stos
mov
clc
add
cmp
jae
data16
mov
fidivl
leave
fxtract
jmp
scas
in
ja
xchg
loop
adc
sub
push
dec
mov
dec
clc
pop
xor
repz
insl
cli
cli
adcb
push
push
das
into
mov
insl
push
aam
sub
jge
cmp
and
fs
dec
mov
adc
xchg
xor
dec
decb
subl
rorl
mov
ss
sub
fwait
outsl
outsb
test
cmpsb
fdecstp
xchg
loop
inc
call
cmpsb
cmp
xor
out
cmpsb
subl
jno
cmp
or
das
fiadds
mov
xor
cmp
adc
jmp
bound
bound
shlb
cmp
movl
xor
fnstsw
jmp
or
push
jb
jl
mov
mov
lods
inc
mov
loopne
dec
das
jecxz
lret
gs
mov
push
mov
repnz
or
pop
sub
je
push
addr16
mov
fs
notl
push
imul
push
or
add
out
push
jle
sub
pop
xorl
scas
cwtl
inc
fldl
mov
adc
push
inc
scas
insl
inc
xchg
enter
inc
pop
mov
stos
clc
cmp
lods
xor
mov
ja
mov
je
out
imul
iret
fstpl
lds
insl
mov
push
arpl
pushf
movsb
ds
jns
jp
movsb
ljmp
imul
pusha
inc
aas
data16
aaa
cmp
dec
adc
mov
inc
mov
inc
push
dec
push
test
int
pcmpeqd
pop
icebp
pop
icebp
mov
daa
aas
lock
mov
xor
sar
or
push
int3
push
mov
add
vrcpps
lds
addr16
loop
jo
mov
out
jb
adc
jl
add
inc
push
push
pop
or
pop
out
adc
push
ljmp
adc
mov
dec
jle
jle
fistps
inc
xchg
mov
mov
and
inc
jmp
mov
jae
mov
int3
mov
mov
lds
lret
lret
sbb
adc
testb
lahf
stos
int3
bound
pop
inc
jnp
mov
stc
add
push
nop
lods
int
dec
adc
xchg
dec
out
dec
dec
adc
mov
fistps
dec
or
mov
sub
mov
in
jo
jge
cltd
jnp
lahf
jle
pop
test
inc
js
add
adc
call
out
lret
push
mov
cli
dec
mov
xchg
aam
and
int
jle
pop
push
jp
adc
xor
mov
nop
cmpsb
xchg
xlat
fisttps
mov
lods
flds
jge
sbb
push
popf
jae
mov
mov
add
aam
cmc
scas
mov
stos
or
push
inc
lods
or
and
pop
xchg
pop
push
mov
push
pusha
pop
adc
xchg
jecxz
xlat
negl
and
repnz
inc
jge
pop
dec
int3
inc
sahf
push
mov
jb
and
lods
sbb
fimull
adcb
inc
mov
adc
gs
adc
je
sub
xor
jbe,pn
jno
pop
int3
test
repnz
clc
mov
xchg
adc
inc
lcall
pop
jne
pushf
loop
push
mov
test
xchg
out
ss
les
or
xor
mov
xchg
scas
lea
sbbl
scas
add
testl
lcall
cmpl
in
jae
ljmp
xchg
in
xchg
push
sub
and
push
inc
aad
sbb
movsl
push
mov
jmp
mov
outsl
pop
or
pop
ds
daa
fisttpll
mov
xchg
fldenv
pop
imul
xor
mov
dec
rcll
int3
je
cli
cmpsl
int3
paddd
aaa
pusha
adc
cltd
fildl
mov
add
inc
adc
popf
insl
or
pop
in
inc
stc
jae
scas
mov
push
lds
sub
dec
or
test
xchg
shrl
xor
pusha
fidivs
loopne
jbe
out
cltd
ja
mov
fisubs
outsb
add
sub
push
lds
cs
je
push
mov
movsl
clc
or
pop
lahf
xchg
dec
sarb
and
das
mov
push
cmc
cmp
mov
ficompl
push
mov
inc
lods
sbb
mov
popa
das
and
sbb
xchg
inc
jmp
sub
pop
cli
pop
push
repnz
stos
adc
sub
adc
ljmp
push
push
mov
scas
or
xchg
or
fs
scas
xor
sub
sbb
dec
push
push
fidivrs
adc
sub
mov
inc
cmpsl
bound
jmp
les
rorl
jbe
insb
loop
mov
xor
jns
fs
and
je
inc
xchg
lret
jecxz
jecxz
arpl
repnz
mov
fstpl
mov
lea
mov
imul
in
cmp
test
pop
pop
jno
mov
test
dec
mov
pushf
mov
xchg
jo
cli
pop
into
xchg
jle
stc
shrl
xchg
into
pusha
loopne
inc
rol
sub
add
xchg
pop
jnp
dec
dec
lahf
jge
outsl
inc
jle
cmpsb
scas
in
push
or
dec
push
into
cmc
fwait
jbe
adc
and
fistpll
xor
pop
sbb
enter
lea
xor
pop
lods
fs
shlb
rclb
insl
cltd
mov
mov
sub
sbb
jecxz
lcall
sub
pop
enter
fwait
push
and
roll
test
xchg
cmpsl
push
fnstenv
mov
adc
jae
jae
dec
lods
popf
ss
lret
adc
imul
pop
and
icebp
xor
adc
push
adc
push
dec
lods
mov
push
leave
outsb
or
jge
pop
aas
pushf
leave
ss
stos
icebp
add
mov
mov
pop
icebp
mov
cmp
pop
addr16
hlt
pop
dec
xlat
add
sub
arpl
xor
inc
mov
or
sahf
dec
ds
cs
sbb
add
lret
loop
cmp
imulb
pop
dec
ss
xor
jge
cmp
jne
mov
div
cwtl
movsl
icebp
mov
cli
cmpsb
mov
dec
xorb
jmp
inc
mov
jns
mov
xchg
aas
mov
xchg
pop
mov
int3
add
xchg
xlat
test
add
push
imul
aas
dec
iret
jno
sub
and
xor
outsb
inc
sub
lock
lret
xor
andl
movsb
imul
add
push
jg
loope
xchg
pop
fldl
lods
mov
pop
fstp
xchg
das
lods
sub
cmpsb
shll
lods
lret
sub
fldt
out
xor
inc
cmpsl
xchg
add
sub
xchg
ss
out
inc
test
pushf
stos
test
je
mov
arpl
cmp
pop
fcmovbe
in
test
jp
flds
inc
popa
pop
scas
sub
mov
test
pop
sbb
lahf
sbb
ret
mov
pushf
mov
aaa
adcl
xor
cli
cmp
mov
or
fldenv
or
cmp
add
push
inc
jnp
orl
xor
loop
cmpsb
fwait
loope
push
lods
loope
call
mov
test
sub
mov
xor
push
repnz
leave
cld
test
pop
aam
add
or
test
andb
lea
push
shr
and
fidivrs
push
inc
rcl
sbbb
ret
cmp
test
popf
or
inc
hlt
sti
sub
dec
inc
scas
scas
nop
or
mov
pop
adc
jbe
sub
inc
mov
xchg
movsb
cmpsl
jp
mov
push
cmp
out
imul
and
jb
ds
das
sbb
xor
cli
push
sbbb
and
test
inc
lds
mov
mov
or
inc
xchg
inc
lock
xchg
test
and
mov
mov
rorl
push
cmp
xchg
test
mov
xchg
imul
mov
push
mov
jnp
out
mov
movsb
xor
sub
hlt
rorl
cmp
mov
pop
push
fcmove
mov
or
pop
and
outsl
andb
jmp
add
push
and
xlat
insl
and
push
xor
add
ficomps
mov
jp
xchg
adc
adc
sbb
sti
xor
and
fldcw
add
dec
jns
xor
andl
xchg
push
adc
popa
xchg
mov
loope
or
mov
mov
xor
imul
xchg
mov
arpl
jo
scas
sbb
les
and
dec
cmp
jne
adc
pop
and
adc
testl
sub
out
pop
insl
ds
adcl
aad
int3
push
and
mov
andb
repz
cmpsb
testl
lods
out
test
inc
lcall
std
and
movsl
out
xchg
inc
aaa
mov
push
mov
lds
out
pop
jo
lret
mov
jb
lret
or
push
mov
insb
hlt
sub
jmp
mov
clc
pop
cmp
in
mov
shlb
xor
pop
imul
jo
inc
and
in
mov
jecxz
mov
insb
adc
es
push
push
popa
mov
pop
mov
mov
mov
fstpl
sbb
or
cltd
adc
test
das
in
in
aad
xchg
loopne
adc
dec
inc
jmp
pop
adc
loopne
add
pop
pop
cmp
lods
loop
pop
mov
fadds
test
push
mov
inc
cmp
cmp
or
into
fistpll
dec
mov
lcall
repnz
lret
and
popl
ficoms
xchg
nop
add
cmpsl
mov
sub
loope
inc
pop
negl
or
filds
inc
xor
pop
pop
dec
out
pop
mov
lods
and
xchg
xchg
pop
xor
cmp
jns
test
add
test
or
scas
inc
insl
add
mov
xchg
psrad
insb
xchg
jmp
and
inc
jl
jmp
or
scas
cltd
push
nop
gs
fisttpl
scas
cs
mov
pop
xor
fsubrs
jnp
in
jmp
ljmp
test
sahf
fsubrl
or
test
filds
call
sub
adc
and
insl
pop
ja
mov
aaa
xchg
std
dec
sbb
and
and
mov
insb
test
cmp
mov
fadds
sbbb
xchg
sahf
shrb
mov
and
or
cmpsb
jne
dec
aad
mov
test
test
sbb
outsb
or
in
inc
mov
inc
ss
sarl
xchg
add
das
mov
push
lahf
ret
fnstenv
ret
insl
arpl
inc
mov
mov
fstpt
cmp
dec
fcmovb
dec
and
fistpl
and
mov
push
lds
mov
mov
inc
mov
jmp
jb
jno
sbb
dec
rol
shll
insl
mov
stos
jle
sahf
mov
popf
cmc
dec
rorl
xor
adc
jge
adc
pop
mov
enter
hlt
pushl
ja
lahf
jg
xchg
fildl
fistpll
dec
ficoml
push
jo
fidivl
lret
mov
ja
xorl
sbbb
mov
push
push
daa
lret
dec
sub
inc
push
js
push
mov
das
addb
inc
call
xor
xchg
aad
outsb
je
enter
stos
push
mov
push
add
inc
out
sub
jecxz
sbb
shll
or
js
bound
and
pop
lcall
and
jbe
std
inc
mov
jno
pop
fiadds
rolb
cmp
popa
jle
dec
mov
jle
sub
rclb
mov
sar
popa
mov
mov
pop
movsb
inc
push
addb
lods
shrl
call
and
and
xor
int
int
adc
inc
test
mov
ret
inc
rcrl
sub
pop
ja
jmp
mov
sub
add
sbbl
in
pop
and
enter
push
mov
stos
xor
lock
jp
insl
fdivrl
ret
cmp
aam
test
push
dec
jle
stos
loope
test
aad
adc
testl
xchg
dec
sti
push
ss
out
mov
dec
adc
cmp
ret
xchg
bound
mov
jp
push
xchg
inc
dec
adc
cmp
scas
sbb
in
cmp
and
sbb
rcll
or
test
push
icebp
mov
ret
push
mov
ss
add
loope
lcall
loopne
into
cmp
sbbl
aad
adc
shrl
mov
stos
test
push
cmp
jne
sbb
lods
loop
adc
stos
adc
es
adc
mov
inc
sahf
jmp
mov
fs
test
sahf
in
cmpsl
push
lds
test
pop
inc
inc
icebp
cs
cmp
or
adc
ljmp
mov
jae
dec
mov
cmc
and
ljmp
push
std
ret
stos
imul
dec
xor
cltd
pop
lods
std
gs
push
loop
fs
call
loop
addr16
inc
adc
push
push
push
punpckhwd
int
outsl
icebp
or
or
in
sub
pop
xchg
inc
xchg
test
int3
adc
xchg
lahf
cmp
movb
in
inc
xchg
jb
jnp
into
adc
adc
mov
adc
pop
and
rcrl
xchg
push
dec
das
pop
xchg
in
lcall
aas
frstor
jge
and
cld
iret
cmc
shrl
lods
jge
stos
mov
dec
pop
jle
ljmp
daa
xchg
cmc
pop
dec
sahf
fstps
inc
negl
jne
es
xor
pop
scas
lahf
dec
rclb
xor
mov
mov
jnp
xchg
int
out
iret
lock
mov
sbb
mov
fs
es
or
inc
loopne
mov
mov
or
jg
adc
sub
pop
fidivrl
in
jecxz
jle
add
mov
adc
mov
out
jge
and
add
das
and
jge
sbb
sar
in
xchg
cmp
shlb
pop
xorl
pop
adc
xor
dec
inc
addr16
lods
cltd
jl
inc
jg
jg
xchg
sbb
xor
cmpsb
lods
or
aam
lret
mulb
je
jnp
dec
into
jle
or
dec
lcall
jnp
cmp
lea
xchg
fcmovbe
sbb
jns
jno
test
in
nop
rcl
cmp
xchg
inc
sbb
mov
cli
dec
insb
lea
jbe
mov
jg
jg
mov
loop
inc
jl
aam
imul
mulb
mov
mov
or
shl
xor
push
popa
inc
and
push
push
xor
pop
popf
adc
pop
mov
sahf
cs
pop
mov
mov
stos
cmp
push
adc
or
mov
cmp
jle
mov
movsl
adc
lret
int3
loopne
mov
adc
movsb
add
or
scas
xor
es
push
xor
stos
inc
out
ret
or
mov
xchg
testl
mov
dec
pushf
scas
outsl
sbb
cmpsb
sarb
dec
fcoml
pop
mov
lcall
aaa
ret
lock
push
popa
push
pop
lods
rolb
mov
mov
push
jne
stc
xchg
mov
ret
pop
ja
pusha
mov
dec
sarl
pop
push
or
mov
gs
or
pop
shlb
and
sbb
outsl
out
xor
jecxz
clc
mov
mov
clc
dec
lods
jl
ja
sbb
add
dec
cmc
repnz
cmp
fwait
inc
mov
gs
lods
hlt
lods
pop
xchg
fmuls
sub
adc
subl
mov
xor
adc
and
jne
pop
mov
adc
push
enter
or
cmp
fimuls
outsb
pop
mov
add
scas
adc
sub
inc
outsb
fdivr
jnp
lahf
inc
scas
inc
je
lods
lods
xchg
sbb
pop
sub
push
outsb
adc
xor
lahf
dec
inc
push
stos
dec
cmpsl
or
aaa
imul
xor
movsl
ja
out
popf
jne
pushf
push
mov
jae
ljmp
int
xorb
addb
add
in
aas
stc
cmc
ret
sub
inc
push
loop
sub
inc
aad
ja
cmp
repz
in
pop
cmpsb
dec
fcompl
popf
sbb
int
add
fmull
xor
jl
cmp
cmp
es
shrb
sub
fisttps
mov
sbb
jp
push
cltd
aaa
repnz
das
js
inc
add
xor
dec
hlt
jnp
repz
ret
icebp
push
lcall
mov
aad
out
xor
xor
jg
or
lods
scas
setg
and
or
adc
xchg
fwait
and
dec
sbb
pop
dec
xor
das
cmp
pop
in
inc
les
cmp
rol
fwait
data16
or
out
mov
imul
popf
inc
hlt
jle
and
lea
or
shl
dec
jnp
imul
jo
mov
imul
lock
movsb
pop
out
xor
cmp
jnp
loope
push
cltd
cli
pop
cli
mov
lock
pop
iret
aam
repnz
mov
xor
inc
mov
ss
inc
iret
nop
test
cmp
and
std
cld
inc
pop
popf
mov
outsl
aas
jb
shlb
fs
inc
cltd
mov
pop
inc
movb
adc
xchg
sbb
dec
sahf
pop
divb
pushf
repnz
cwtl
or
jl
push
jo
pop
inc
out
inc
test
cmp
sahf
and
jp
in
jp
push
mov
les
das
lcall
sti
stos
jo
test
adc
inc
mov
lret
aad
movsl
rorb
mov
data16
les
lret
pop
scas
ret
orl
dec
adc
cli
xorl
lahf
lock
jnp
sbb
cmc
jb
in
or
mov
lods
repz
mov
out
or
or
sbb
stc
scas
xchg
pusha
mov
into
loopne
push
adc
pop
cltd
lahf
pop
outsl
addr16
daa
push
sub
jae
scas
ds
int
push
mov
mull
fwait
xor
test
stc
dec
out
jmp
jo
push
and
ficomps
imull
mov
rorl
inc
dec
loope
push
aad
movsb
mov
mov
ss
cmp
pop
sub
mov
mov
out
popa
jp
popf
ret
iret
fldenv
aam
cmpsl
in
test
mov
push
adc
pop
pop
in
in
jl
dec
movsb
mov
push
andl
push
in
sbb
sti
xor
movsl
push
jne
cmp
out
adc
leave
inc
mov
and
dec
ss
jae
pop
mov
jge
jp
pop
int3
mov
push
dec
mov
stos
xor
pushf
mov
sub
test
lea
addr16
dec
sbbb
xor
sub
test
push
cmp
push
les
sub
push
ss
mov
inc
mov
sub
cmp
push
insl
push
aas
outsl
hlt
cmc
sarb
sbb
rcl
testl
data16
or
sub
or
dec
or
adc
add
or
push
stc
xlat
jnp
and
and
or
mov
dec
mov
jmp
loop
into
fsubrl
adc
pop
repz
and
sarl
mov
pop
pop
out
mov
mov
mov
scas
dec
scas
int
movsb
out
xchg
jmp
sbb
test
les
adc
out
js
sub
scas
movsl
movntps
pop
jne
xor
loop
push
rcrl
mov
mov
jmp
add
cmp
insb
mov
adc
sarl
ret
jge
mov
or
cld
test
adcl
pop
inc
dec
fisubrl
data16
popa
mov
mov
lret
dec
rol
mov
adc
into
mov
mov
stos
jb
jmp
iret
out
pop
mov
jnp
sarl
andb
cmp
sbb
popl
lcall
or
sbb
punpckhbw
dec
jecxz
or
sarb
jae
xchg
fwait
sbb
push
outsl
push
das
in
mov
shrb
sar
adc
mov
stos
inc
adc
push
sti
push
fstps
int3
test
mov
adc
xchg
add
inc
cmpsl
mov
xchg
adc
shl
sub
shll
sub
sbb
inc
or
pop
sub
lret
fs
or
or
mov
xor
imul
orl
add
test
test
jb
pop
add
and
mov
cltd
mov
jge
xor
in
daa
movsl
inc
cmp
or
shll
ret
mov
mov
int
add
negl
xchg
ret
or
addb
cmp
fstpt
jge
lcall
pushf
mov
cmp
fidivrl
in
sbb
test
or
pop
sbb
jno
test
sub
mov
jge
or
sbb
pop
cmp
xchg
and
push
and
mov
iret
fisubl
sahf
or
mov
insl
cmpsb
sub
xor
int3
or
std
xor
adc
inc
sahf
pop
mov
cmp
jle
mov
out
xchg
adc
sbb
cmc
je
xor
das
and
cmp
adc
ret
das
mov
xchg
iret
imul
xor
andl
ficoms
test
adc
xchg
inc
out
mov
push
das
dec
mov
or
pop
addr16
mov
or
aam
imul
push
xlat
test
push
and
in
and
push
scas
pop
lret
das
jne
push
fildll
mov
push
xchg
adcl
imul
xchg
or
sbb
popa
rol
sub
or
jp
mov
or
int
mov
cmpsl
cmc
dec
push
adc
mov
pushf
popa
jecxz
mov
repnz
mov
cwtl
pop
or
fldenv
pop
aad
push
push
fs
in
jno
jae
incl
leave
xchg
mov
pop
sub
cwtl
sub
rol
fistps
in
repnz
shufps
xchg
sub
sahf
jle
lret
inc
cmp
mov
lcall
sub
sub
xor
push
inc
push
adc
leave
sbb
icebp
sbb
jle
mov
xchg
insl
pop
mov
xor
aaa
loop
lret
sbb
dec
cwtl
es
sbb
push
sub
shll
add
push
das
xor
push
in
pop
pop
mov
fsubl
repz
mov
sahf
add
movsb
or
push
fdivrs
sub
jne
ds
dec
push
or
and
cmp
pop
push
ret
mov
mov
ret
test
cli
int
pop
repz
push
mov
les
insl
cmp
push
repz
pop
dec
and
out
sbb
push
daa
add
dec
negl
dec
aam
mov
dec
add
sbbb
roll
mov
sbb
add
sbb
pop
push
jbe
adc
sub
pop
xchg
in
movb
xor
faddp
push
nop
push
pusha
rorb
pop
jmp
inc
xchg
fs
xor
cmp
cmp
cwtl
sbb
adc
idivb
push
outsb
into
jg
in
xorb
dec
sub
in
mov
orl
cmpxchg
stc
mov
nop
lret
dec
call
inc
mov
fildl
aad
mov
fstps
ljmp
push
jle
xlat
cmp
and
jnp
sbb
popa
xor
dec
fisttpl
cmpl
pop
pop
xor
and
fistps
or
inc
mov
lahf
and
outsb
lcall
mov
inc
enter
inc
xor
mov
jnp
push
sub
mov
mov
movsl
aas
insl
fstps
or
in
movsl
gs
inc
sti
sub
add
clc
outsb
out
push
fists
mov
pop
push
push
and
dec
test
lds
test
lea
mov
add
xor
out
push
mov
stc
test
push
pop
adc
adcl
je
jbe
gs
rorb
jb
mov
jo
imul
ret
inc
mov
add
lcall
pop
fs
mov
mov
loope
xor
scas
push
outsl
lret
mov
pop
fs
roll
sti
scas
dec
loop
inc
call
shll
cld
pop
icebp
or
push
pop
xor
test
insl
sbb
jle
adc
jp
sbbl
xor
pop
andl
rolb
lret
movb
popf
test
add
cmp
lock
stos
and
xor
mov
dec
outsb
xchg
adc
adc
mov
mov
push
jg
and
fwait
push
in
inc
lahf
push
iret
ljmp
mov
rorb
add
sbb
jmp
loopne,pt
mov
xlat
into
incb
rcll
mov
cltd
pusha
loop
sbb
aaa
pop
sub
arpl
lcall
or
loopne
scas
add
xchg
daa
and
pop
jnp
mull
sti
fptan
repz
and
in
jmp
lods
xor
icebp
lea
jl
out
loop
cld
mov
adc
xchg
push
outsl
hlt
cmpsb
push
fbstp
in
mov
ljmp
cli
xor
outsb
xchg
es
add
imul
sbb
imul
mov
addr16
xor
out
in
cmp
repz
shrb
push
xchg
xor
pop
mov
lahf
cmpsb
daa
test
rcl
adc
sbb
and
pop
jle
sbb
pop
das
xchg
in
cmp
add
dec
in
js
and
xchg
js
dec
aam
and
jge
and
xor
enter
jecxz
loopne
clc
bound
mov
in
in
sbbb
sahf
xchg
sbb
loopne
jecxz
mov
ret
inc
fsubl
adc
jmp
jmp
fidivrs
cld
je
gs
adc
aad
xchg
hlt
stos
test
imul
xor
jge
cmp
clc
lock
in
jnp
pop
cmpb
sar
mov
loop
loop
mov
ret
cld
mov
lds
mov
xchg
movsb
mov
imul
sbb
pop
jmp
xchg
cmc
das
fnsave
push
lcall
fucomip
gs
addl
sbb
sbb
loopne
mov
icebp
or
adc
mov
rorl
mov
loope
jl
rcll
push
sub
pop
push
and
ljmp
movsl
xchg
lret
mov
pop
sbb
xor
push
dec
test
sub
sub
out
test
push
xor
mov
hlt
jmp
mov
aam
jge
mov
lock
jg
push
mov
inc
sbb
pop
testb
call
negl
lahf
clc
mov
jns
fwait
js
aaa
pusha
pop
mov
outsb
mov
inc
pushf
fs
es
fwait
lock
xchg
or
ret
jp
js
inc
push
test
jecxz
hlt
mov
push
xorl
mov
test
std
xor
pop
test
add
dec
pushf
divb
add
clc
in
out
sbb
icebp
das
sahf
or
push
xchg
mov
ret
cmp
cmp
xor
stos
es
mov
stc
dec
push
out
stos
lret
ds
and
dec
lahf
dec
sbb
clc
out
sbb
je
xor
bound
lret
xchg
les
in
xchg
pop
mov
sahf
das
mov
test
mov
add
dec
cwtl
mov
sarb
jo
xchg
mov
sbb
xor
xchg
xlat
cmp
mov
into
test
cmpsb
jo
sbb
push
out
push
out
cs
jo
out
popf
cmpsl
adc
out
es
push
mov
jg
dec
inc
or
and
dec
adc
xor
mov
fcom
pop
cld
jae
inc
dec
cli
xor
scas
push
push
ret
xor
mov
dec
cmc
lods
mov
pop
jae
push
mov
xor
and
push
bound
clc
dec
int
and
mov
aas
ja
adc
movsl
shlb
sbb
sahf
out
mov
ret
dec
jo
cmc
testl
ss
imull
ja
jae
pop
inc
test
pop
and
adc
lds
repz
lret
imul
lcall
repnz
push
jl
jecxz
stc
std
lret
divb
loopne
mov
fs
ret
jbe
dec
arpl
jp
int3
or
mull
xchg
adc
int3
xor
nop
xchg
scas
and
lods
inc
jg
xchg
mov
or
divb
jle
mov
int
outsb
leave
movsb
fisttpl
adc
movsl
test
xor
imul
shrl
das
sbb
adcl
and
dec
xchg
xor
xchg
push
shlb
movsl
adc
test
repz
leave
mov
or
mov
push
insb
inc
in
xchg
mov
sahf
aad
stos
mov
dec
lret
cld
pop
pop
shlb
jge
mov
fcomps
jnp
scas
ja
push
in
scas
dec
adc
test
insb
imul
faddp
or
sub
mov
pop
xor
fs
add
adc
lock
xchg
or
jmp
mov
scas
lods
mov
mov
scas
jbe
mov
push
cmpsl
xor
sub
pusha
sub
cltd
inc
ds
stc
and
leave
out
push
dec
add
gs
mull
jge
adc
test
xor
fisttpll
sub
ret
or
test
mov
cmpsl
dec
sub
out
jne
add
setns
shrl
ficoml
int
mov
sti
in
push
mov
inc
lea
xchg
aaa
movsb
or
test
xor
ret
std
lcall
add
inc
or
inc
sbbl
sarb
push
sub
cs
loopne
xchg
mov
jg
mov
clc
cmpsl
pop
mov
xor
insb
jo
and
arpl
mov
xchg
sub
subl
xlat
cmpsl
cmpsb
out
sub
pop
dec
stc
loop
movsb
shlb
mov
pusha
cs
data16
ss
mov
jmp
and
std
movsb
adc
and
adc
daa
cmp
nop
or
lods
xor
push
lret
pop
imul
test
mov
push
cli
jge
shl
stos
mov
rorl
in
push
repnz
jns
push
add
test
enter
xor
les
test
fstpl
mov
mov
xlat
xlat
jb
aas
fidivrl
cmc
sbb
int3
mov
sti
enter
dec
ss
xchg
arpl
sti
mov
cmpsb
and
jbe
hlt
rcr
ficoml
fstps
mov
imul
fadd
push
adc
orb
mov
xor
out
jmp
clc
dec
pushf
mov
xor
call
mov
push
inc
inc
cli
mov
insl
ficoml
aad
pop
sub
sub
mov
out
lea
lock
icebp
push
lods
push
enter
outsl
stos
in
xchg
aad
mov
or
mov
fsubrs
jle
sub
nop
push
sub
addb
lods
stos
out
in
and
mov
pslld
push
insb
inc
xchg
mov
xlat
jl
insb
add
xchg
cmpsb
ss
adc
bound
xorb
enter
dec
das
hlt
aad
arpl
stos
stos
in
jecxz
mov
in
test
imulb
inc
and
rcl
lods
add
lcall
stos
or
cs
jno
popa
mov
inc
out
in
xchg
ss
push
sbb
sub
cld
sti
jne
dec
cmp
sub
nop
or
sbb
sub
insl
or
into
and
sahf
and
pop
out
pop
ret
mov
xchg
shlb
sub
out
sub
mov
cmp
inc
xchg
dec
cmpsl
xchg
pop
add
add
jl
inc
mov
movsl
loopne
mov
or
xchg
or
add
jmp
mov
fstl
dec
xor
cmp
xor
loope
ret
add
xlat
sbb
push
outsb
pop
and
mov
xchg
movsl
adc
pop
push
adc
cmpb
idivb
scas
std
lcall
sbb
mov
ja
xlat
jmp
and
fsub
sbb
rcrb
fistps
mov
ret
inc
jecxz
pop
jmp
xor
push
dec
mov
sbb
jns
ds
js
cmpsb
add
test
xlat
add
push
xchg
fmuls
mov
inc
frstor
popf
mov
popf
mov
sar
fisubl
adc
push
rcrl
das
mov
push
call
dec
dec
cmp
hlt
jo
and
add
xchg
add
divl
inc
imul
js
movb
dec
jno
xchg
jmp
xchg
rorl
ss
xchg
dec
xchg
fsubp
xor
pop
ljmp
insl
ja
xor
add
mov
aaa
dec
rcll
lock
mov
addr16
fldl
push
imul
loop
sub
sub
push
sti
adc
std
lds
sbbb
lahf
xchg
jne
in
mov
cs
subl
out
sbb
or
lock
adc
inc
mov
xchg
out
or
adc
mov
out
sbb
pusha
jbe
mov
out
add
xchg
fisubs
pusha
xchg
and
or
xor
decl
ret
dec
cmpsb
shlb
fadd
shld
jns
repnz
xchg
aas
fcom
out
cmc
inc
arpl
jg
mov
mov
mov
scas
or
in
xor
lock
out
jno
push
adc
sti
ds
push
leave
xchg
jns
xor
mov
jnp
repz
pusha
andb
or
bound
hlt
inc
movsl
jo
popa
cmc
rol
jne
adc
rclb
cmp
pmuludq
js
lret
push
fstl
and
movsb
xor
lock
pop
fwait
out
sbb
push
xchg
push
js
adc
dec
sbb
rorb
sbb
jns
cwtl
sbb
ljmp
in
or
pop
lahf
lods
xor
test
shll
add
loop
cmp
je
adc
stc
hlt
lock
push
xchg
rorl
fs
lea
mov
mov
divl
jne
enter
fucomi
incl
imul
adc
xor
loop
mov
pop
adc
mov
cmpsb
mov
out
mov
js
sbb
scas
xchg
les
and
lahf
addr16
xchg
daa
sub
pop
pop
fldl
les
ret
dec
aas
imul
test
mov
push
hlt
add
xchg
fisubl
and
cwtl
repnz
stc
fs
insl
pop
sbb
pop
sbbl
inc
aaa
pusha
hlt
repnz
cmp
mov
std
add
je
fucom
stos
mov
sub
lock
test
mov
mov
imul
inc
mov
jecxz
lea
pusha
lods
test
orb
pop
jno
in
mov
add
mov
lret
push
outsb
mov
or
sbb
jbe
cltd
dec
or
push
aas
cs
cltd
lods
mov
test
or
and
ds
xor
int3
sbb
insb
push
push
out
inc
insb
pop
push
xchg
add
pop
aam
pop
jae
jecxz
pop
into
scas
or
and
js
mov
sub
aam
dec
jae
push
pop
fucom
into
push
lcall
mov
mov
aaa
mov
scas
xor
dec
adc
icebp
mov
lods
ficoms
push
mov
dec
out
loope
int3
in
addr16
adc
fcoms
clc
fisubrs
and
push
int3
mov
push
orb
sub
adcb
mov
aam
ljmp
sbb
sub
and
insb
stc
jmp
adc
push
jb
aam
lods
mov
inc
dec
push
scas
int3
add
cmp
inc
adc
pop
pop
xchg
push
mov
or
dec
lock
mov
mov
inc
aam
repnz
sti
mov
fwait
js
data16
mov
inc
ljmp
adc
mov
ficoms
xchg
shrl
int
xor
push
sbb
mov
lods
mov
hlt
xchg
test
adc
fsts
lods
xor
loope
xor
adc
leave
pushf
fists
es
int
jg
dec
mov
jno
sbb
cmc
push
xchg
mov
aam
and
fisubl
ss
jmp
das
mov
cmpsl
xchg
mov
inc
stos
out
jp
or
nop
push
sbb
mov
cltd
push
cmp
cmc
adc
out
inc
movsb
or
cmp
cmp
jp
leave
xor
out
xor
arpl
push
in
adc
in
and
mov
pop
push
andb
cmp
jne
cmp
pusha
mov
jle
push
or
int
or
data16
pushl
cmp
daa
daa
dec
daa
and
push
add
outsb
xor
inc
cmp
jg
adcb
sub
mov
xor
and
js
push
out
adc
mov
mov
repz
cmp
lock
push
add
cmp
mov
aad
fiaddl
test
fldcw
xchg
xor
and
xchg
lds
xchg
rol
ss
addb
jg
jno
inc
lret
and
sub
pop
popa
and
repz
sahf
mov
in
jns
mov
fidivrl
or
sub
jno
arpl
in
popf
adc
insl
add
jl
gs
jp
sahf
outsl
jae
cmp
and
mov
test
adc
clc
jle
jns
xchg
ret
sbbl
stos
xchg
mov
hlt
outsl
rcrl
cli
popf
and
xor
loope
mov
les
and
cmp
stc
add
mov
jbe
std
jbe
push
jl
pop
out
aas
inc
mov
cmp
int
jae
lcall
pop
std
adcb
cmp
aas
imul
pop
push
xor
cmpsl
das
and
lret
lret
gs
lcall
divb
jne
loop
cmp
adc
adc
add
ret
idivl
lods
sub
dec
jge
aas
xchg
hlt
cmc
insl
cmpsl
adc
dec
mov
fdivr
and
xchg
andl
clc
mov
mov
loopne
out
add
xor
stos
bound
xchg
cmp
jle
lods
or
mov
mov
adc
jmp
sub
push
daa
bound
jp
adc
dec
ficompl
lcall
xchg
andl
lret
xor
xchg
in
xlat
bound
mov
scas
cwtl
in
xor
stc
xchg
dec
mov
jl
fnstenv
aas
lret
stos
mov
loope
mov
scas
nop
daa
add
xchg
jmp
dec
jns
lock
stc
fists
inc
ficoms
adc
ss
repz
sub
and
mov
lock
rcrl
vrsqrtss
loope
cmp
test
or
adcb
xchg
jle
and
int3
cmp
xchg
sub
mov
or
test
add
int
pop
pop
out
fldcw
cld
push
mov
jno
xchg
dec
pop
mov
pop
call
pop
xchg
inc
inc
aas
adc
dec
addr16
sahf
xor
lcall
pop
enter
rorl
sub
cmp
mov
fcmovne
mov
mov
push
icebp
adc
mov
in
sub
aaa
pop
aad
fcoml
aad
cmp
loop
std
imull
out
test
inc
adc
enter
adc
jp
call
dec
sub
into
dec
inc
outsb
fsub
and
jg,pn
pop
mov
mov
push
adc
scas
in
jae
mov
sbb
jle
pop
sbb
pop
xor
fnstsw
adc
xchg
xor
adc
stos
in
lcall
hlt
dec
jp
pop
or
int3
xorl
mov
sbb
mov
pushf
mov
sub
jmp
xor
pop
jmp
fisubl
subl
pop
add
push
or
popa
pusha
push
jno
pop
cs
lret
xor
leave
pop
pop
repz
mov
shlb
jmp
lock
das
sub
in
stos
sti
or
xchg
adc
pop
sahf
scas
daa
sub
push
dec
push
popa
sub
sbb
repnz
push
mov
dec
idivl
mov
sub
imulb
xchg
xchg
push
pop
insl
cmp
push
xchg
int3
dec
push
shll
test
sarl
sub
repz
or
ljmp
je
rorb
pop
mov
pop
sub
xor
jno
adc
repnz
rolb
pushf
sub
or
add
fistpl
pop
cmc
jle
mov
fbstp
mov
cmp
popa
out
subb
push
jmp
push
inc
jge
push
mov
je
jae
xor
adc
ficomps
cmpsb
rclb
mov
sbb
rcrl
pop
jmp
ret
bound
cmc
es
insb
shlb
testl
cmp
dec
push
dec
inc
ja
jns
sbb
daa
inc
lcall
fwait
hlt
jno
xchg
jae
or
add
shrb
pop
xchg
cmp
test
push
and
or
jmp
dec
mov
xchg
cmp
repnz
lret
out
pop
mov
mov
fneni(8087
bound
adc
lods
add
arpl
int3
in
mov
jecxz
lds
cmp
xor
sub
popa
int
mov
and
xor
cwtl
into
iret
out
scas
pushl
fcmovu
or
cltd
xlat
jg
frstor
int3
roll
clc
jmp
mov
mov
and
nop
icebp
in
pop
pop
inc
arpl
das
push
mov
fwait
les
mov
fistps
cmp
fwait
scas
mov
mov
mov
mov
call
push
add
bnd
mov
sub
imul
push
jae
outsl
xchg
cmp
test
mov
pop
je
test
or
dec
inc
stc
test
loopne
loop
shll
push
lock
sbb
arpl
mov
sahf
adc
mov
lret
andl
add
mov
cwtl
lcall
adc
pop
jne
fs
or
xor
cwtl
ja
mov
inc
xchg
je
mov
sti
popf
push
lds
jle
mov
inc
pop
movsb
pop
mov
xchg
pop
jo
jnp
cwtl
pop
pusha
cltd
call
adc
mov
jo
jecxz
addr16
push
xchg
mov
jbe
ljmp
mov
mov
mulb
add
add
std
adc
orl
mov
add
into
pop
inc
and
fadds
jecxz
xchg
jae
out
stos
addr16
nop
sbb
insl
pop
call
xchg
int3
test
stc
pop
mov
pop
movsl
ret
das
adc
cmp
or
mov
lcall
jb
cmp
push
cmp
push
hlt
and
xlat
js
lcall
jmp
in
push
and
push
sbb
ja
push
mov
ja
lds
prefetch
or
adc
xchg
or
xchg
add
or
ds
sbb
dec
pop
inc
sbb
add
pop
fnstcw
xlat
loope
out
dec
nop
mov
dec
sbb
call
pop
mov
cli
pop
dec
xchg
mov
cltd
mov
cmc
xor
std
or
pavgb
and
test
lret
loop
mov
ss
mov
pop
jns
inc
js
fnstenv
adc
test
jns
mov
sbb
addr16
mov
lea
or
cltd
pop
jne
or
ficomps
dec
rcr
arpl
gs
sbb
cwtl
jg
add
int
repnz
inc
ds
xlat
pop
sub
arpl
mov
call
add
loop
lahf
orb
cmp
xchg
pop
into
sbb
stc
push
les
and
jl
or
jne
mov
push
in
call
mov
test
mov
shrl
push
fimuls
xlat
sahf
lahf
adc
xchg
push
cmp
jp
or
mov
lods
aas
loop
es
mov
rep
iret
dec
inc
add
ret
cmp
jp
add
jbe
gs
movsl
sahf
out
out
or
shl
shlb
cmp
adc
pop
in
sbb
mov
xor
mov
jb
lahf
sub
inc
jns
inc
pusha
xchg
mov
js
jae
aam
call
int
std
inc
inc
fnstsw
sub
movsb
ds
outsb
jb
in
int
fwait
mov
in
in
fcmovnu
ss
adc
dec
leave
repz
loopne
dec
mov
push
lods
pop
push
jge
outsb
data16
in
add
pusha
adc
in
out
jle
dec
jns
aad
xchg
lds
mov
es
jns
mov
gs
push
pop
int3
lock
inc
popw
mov
or
jle,pn
sbb
insl
pop
inc
sub
sub
daa
add
out
stc
stc
das
in
hlt
aad
ja
lods
mov
adc
add
and
lock
out
fwait
rcrb
and
mov
push
cmp
jg
les
imul
lea
adc
sbb
fiadds
out
cmp
iret
xor
adc
icebp
mov
inc
pop
pop
mov
dec
mov
and
hlt
adcb
mov
pop
aaa
mov
push
and
sub
in
outsl
cvtps2pi
cli
pop
cwtl
push
mov
insb
scas
adc
push
shll
insb
xlat
push
xchg
cmp
push
bound
mov
push
stos
test
sbb
sub
jne
push
xchg
add
and
jecxz
imull
cmpsb
rcl
pusha
aas
jl
ljmp
cmp
repz
shll
test
das
adc
jmp
xlat
test
push
addr16
cltd
jge
sbb
mov
push
in
shlb
jg
call
add
inc
lea
cli
inc
fstpt
in
lods
cmpl
mov
cwtl
fcoms
cli
enter
mov
rcr
mov
ja
cmp
and
mov
inc
fisttpl
push
sbb
mov
jp
negl
rolb
gs
add
js
ljmp
ficoml
loop
dec
fwait
jecxz
fdiv
into
int
mov
or
loope
das
inc
push
cmp
aam
xor
sbb
add
addr16
rcrb
lret
add
sbb
imul
stc
jb
mov
aas
test
and
incl
in
jno
mov
push
sbb
shlb
fisubl
in
scas
inc
dec
push
dec
xchg
jno
mov
and
in
and
or
popa
out
mov
or
lahf
and
in
hlt
jle
pop
aas
mov
cmpb
stos
jb
sti
add
push
out
addr16
popf
popf
xchg
out
inc
adc
xchg
pushf
dec
dec
scas
sub
cltd
pop
outsl
div
shll
push
cmpsb
pop
lahf
add
dec
mov
nop
adc
imul
inc
lahf
mov
jae
xor
jne
add
insb
inc
outsl
ret
dec
hlt
and
add
data16
xchg
jbe
inc
mov
sub
sarb
mov
movsl
je
jns
jg
jmp
dec
jno
pop
and
lahf
scas
pop
rcrl
add
orl
adc
pop
xchg
in
inc
loopne
movsl
push
push
das
jbe
lahf
fcmovu
out
dec
inc
xchg
addl
out
and
sub
pop
jns
and
pop
rolb
sbb
fiadds
jbe
adcl
rcll
js
or
mov
stos
push
addr16
adc
or
pop
lcall
dec
lds
sub
jp
add
daa
in
cmp
sarb
mov
inc
lret
fldt
inc
cmp
jb
and
jp
out
in
sbb
jb
ficomps
adc
std
ss
movsb
dec
fsubs
push
jmp
faddl
test
in
sti
add
and
shrb
ret
jp
cmpsl
scas
aam
xchg
mov
es
adc
call
mov
sbb
pop
out
outsb
jmp
rcrl
lahf
fildl
mov
jnp
scas
std
pop
sbbl
cmp
inc
dec
out
loope
mov
mov
xchg
xchg
jnp
test
hlt
ds
sub
jecxz
pop
ja
xchg
fisttpll
pop
cmpsb
and
fistpl
xchg
lret
mov
sbb
sub
int
and
pop
add
mov
push
dec
adc
ret
jmp
add
inc
lods
push
inc
push
data16
das
mov
imul
add
testl
inc
adc
ret
jbe
mov
cmpsb
imul
ds
dec
mov
fsubrs
loop
add
pop
in
sarl
jnp
inc
add
xchg
dec
inc
push
shlb
ja
imul
dec
mov
stos
jmp
adc
out
jo
push
ror
divb
out
div
mov
rcrl
add
aam
adc
inc
xorb
dec
in
iret
jne
cmp
mov
popa
ljmp
aam
and
jl
dec
mov
pop
cli
inc
pusha
lock
dec
lock
test
jns
shlb
popa
mov
sub
inc
out
push
ret
jb
aad
xchg
dec
stos
insb
insl
sub
inc
fs
or
or
pusha
xorl
sahf
push
xchg
jp
mov
scas
and
adc
xchg
jl
mov
jle
imul
lret
inc
repz
arpl
and
push
mov
or
lret
inc
dec
popf
xor
dec
pop
mov
add
aad
cmp
stc
xor
incl
cmp
dec
stos
mov
shlb
jnp
mov
sbb
pop
or
int
dec
add
xchg
xor
pop
pusha
cmp
and
stos
in
jg
enter
lock
push
pop
fxam
nop
cmp
loope
scas
mov
jno
fildl
push
cmpsl
inc
pop
sub
jb
in
push
inc
dec
fnstenv
xchg
push
aas
mov
test
jmp
arpl
lods
test
sbb
fs
out
jno
loope
scas
push
stc
jno
jg
test
mov
mov
aaa
std
shrl
test
divb
or
sbb
mov
xchg
xchg
adc
movsl
pusha
mov
outsb
inc
push
pop
test
jmp
xchg
sub
popa
dec
mov
fcoms
or
mov
ds
cmpsb
notb
test
insb
shll
mov
sbb
stc
jnp
push
push
xchg
adc
xchg
inc
xchg
sbb
adc
popw
push
sbb
mov
daa
pop
movsl
fnstcw
xchg
mov
push
jle
xor
shrl
pop
rcl
mov
insl
lret
fldcw
sub
iret
sub
and
mov
dec
aam
mov
add
not
mov
jns
lods
mov
add
cld
pop
mov
icebp
repz
or
pop
test
mov
mov
loop
pusha
bound
pop
icebp
andnps
and
lock
fcmovb
jne
push
add
xchg
mov
loopne
jmp
addr16
call
test
pop
push
icebp
mov
ret
mov
test
lock
lds
dec
call
mov
pop
mov
xor
and
push
jae
or
fwait
mov
aam
jno
lds
shlb
sti
xor
scas
jns
scas
incb
add
sub
mov
mov
xor
hlt
iret
pop
addr16
jge
mov
setg
adc
fnstsw
fdivr
pop
fisubl
fiadds
ret
cmpsb
loopne
sbb
push
test
cld
add
mov
inc
int3
cmp
sub
repnz
cs
clc
adc
lret
fmuls
lods
xchg
jbe
add
push
repz
pop
call
jns
mov
sbbl
gs
movsl
clc
ficoml
loope
jbe
mov
gs
cmpb
insl
cmc
in
or
add
jmp
adc
pop
icebp
sub
sub
pop
in
cmp
jne
bound
pop
cmc
xchg
in
cmp
xor
xchg
push
add
enter
mov
cmp
ret
jae
jge
scas
movsb
xchg
jns
ficompl
lea
fisubrl
sbb
insb
in
sub
lret
sbb
aas
sbb
fistpll
pop
pop
xlat
popa
out
sbb
mov
in
sub
cltd
cmpsb
xor
out
sub
mov
add
add
mov
pop
sub
into
mov
adcl
int
and
mov
inc
dec
or
pop
xchg
test
mov
adc
add
shrb
aam
cmp
inc
das
mov
mov
add
cmpsl
into
popf
xor
pop
sti
pop
push
data16
loopne
notl
popf
sub
mov
jmp
jp
jle
repnz
or
inc
out
jp
or
dec
add
cmp
push
sub
jbe
mov
mov
or
mov
stos
lahf
fdivs
jno
xchg
rolb
cmp
ret
pop
mov
adc
lods
ljmp
dec
cmp
es
fcomip
rcrb
dec
ror
pop
add
cmp
sub
and
or
test
adc
aaa
cs
push
mov
and
xchg
adc
xchg
int
ja
pop
mov
not
aam
in
and
adcb
repz
inc
nop
divl
mov
mov
shlb
inc
shll
mov
mov
mov
in
repnz
imulb
mov
mov
imul
pop
cmp
add
stos
aad
icebp
je
jae
into
jno
mov
es
cmpsb
mov
mov
xchg
inc
xchg
jp
cld
and
adc
and
rcrb
jmp
cmpsl
stos
lock
das
dec
push
and
lret
int3
and
scas
xchg
rcrb
lahf
mov
or
stc
pop
outsl
test
aam
sub
leave
sub
iret
jo
fimuls
push
into
fildll
jle
mov
lcall
aaa
lahf
cli
fucomi
xchg
pop
lods
inc
aas
mov
adc
and
push
pop
test
insb
xchg
jae
insl
cwtl
and
and
mov
inc
push
mov
mov
mulb
adc
dec
scas
fnstenv
cmp
pop
push
add
cwtl
adc
enter
rorb
dec
cltd
sub
out
mov
mov
fisubrs
push
in
pop
mov
xchg
fisttps
lds
outsl
mov
mov
or
enter
mov
or
sbb
cltd
test
adc
fdiv
xor
pop
clc
push
inc
xchg
push
lods
fstpt
out
loop
out
add
and
xchg
dec
loop
mov
cltd
xor
das
inc
xor
mov
xchg
out
leave
enter
insl
loope
fwait
jo
leave
outsb
mov
jo
inc
jae
push
mov
mov
xor
mov
mov
sub
and
sub
sub
cmp
subb
mov
dec
mov
movsl
mov
mov
add
mov
mov
push
xor
mov
inc
into
repnz
aam
pop
xchg
sbb
incl
mov
and
mov
pop
movsb
fwait
in
iret
and
or
and
outsl
lea
mov
jb
mov
icebp
outsb
and
das
jle
xor
mov
inc
mov
cmp
sbb
subl
xchg
fistl
pop
mov
lds
push
in
sub
mov
mov
nop
stos
lcall
popa
push
das
jl
cwtl
enter
jg
sbb
cld
xor
xor
mov
popa
test
mov
insb
push
outsb
enter
inc
fcmovnbe
iret
sbbl
adc
shrl
jo
xchg
jle
xor
inc
pop
inc
fadds
xor
mov
inc
push
loope
mov
or
mov
sbbb
mov
pop
xchg
cmp
fcmovne
imul
fdivs
push
sbb
add
cmp
adc
ret
je
rcl
test
jecxz
pusha
dec
mov
sub
movsb
jg
adc
inc
mov
jle
pop
push
pop
lahf
and
xor
imull
mov
xor
adc
out
xor
out
jb
lds
jno
sub
push
jae
jo
xchg
lahf
mov
aaa
or
push
aad
and
pop
cld
push
fwait
or
mov
mov
adc
int3
hlt
push
xor
cmp
mov
mov
jbe
mov
pop
and
jg
sub
jmp
lds
test
loop
add
outsb
loop
and
mov
cmp
js
insb
cmc
jbe
nop
shrb
les
mov
leave
in
push
jmp
adc
mov
or
push
es
popf
lds
or
cmc
pop
or
in
mov
cmp
pop
cwtl
xchg
loopne
xchg
mov
dec
aaa
imull
jp
mov
aad
cmp
xor
xchg
inc
cmp
jle
cwtl
js
or
adc
arpl
lea
pop
add
mov
nop
insb
arpl
pushf
rcrl
lock
mov
das
fst
adc
imul
call
cmp
imul
outsl
das
sub
pop
xchg
xchg
in
and
cmp
pop
pusha
mov
mov
mov
daa
xchg
push
outsb
hlt
dec
xor
je
and
test
mov
adc
test
push
call
push
lss
mov
js
imul
pop
pop
pop
negl
imul
cli
adc
jle
out
mov
or
jge
addr16
adc
sti
insl
jmp
aaa
js
gs
push
xor
xor
sahf
lock
and
addr16
loopne
pop
push
hlt
aaa
pop
and
adcb
pop
and
addb
pushf
inc
adc
ja
dec
test
xor
jge
lret
outsb
mov
faddp
ds
xchg
and
arpl
cli
jmp
fiadds
arpl
fidivrs
cmp
scas
xor
jo
fwait
sbb
hlt
add
shrb
jno
cs
cs
inc
push
ss
icebp
fstpl
arpl
xor
sub
sti
push
add
popa
push
out
and
pop
jae
push
inc
pop
mov
dec
xor
loopne
je
cmpsb
cmp
lret
pop
cli
out
cmpsl
push
lcall
std
lods
fstps
sub
mov
sub
and
sub
pop
mov
mov
jp
fucomp
xlat
xchg
push
ret
test
and
outsb
mov
lock
insb
push
and
pop
je
movaps
mov
inc
aam
ljmp
inc
test
jmp
lret
jbe
pop
xchg
pop
pushf
pop
inc
stc
sbb
xor
insb
add
push
xor
pop
mov
arpl
subl
std
mov
fucomp
xchg
lret
push
lods
stc
aad
in
out
push
sbb
cmc
dec
lock
aam
frstor
lods
push
cltd
cltd
testb
inc
fnstcw
inc
outsl
mov
inc
test
lods
insb
popf
mov
popl
cmpb
imul
push
lods
int3
inc
cmpl
inc
lret
dec
fiadds
push
mov
mov
mov
mov
int3
mov
hlt
dec
fwait
str
push
out
jl
cmp
lcall
xchg
jmp
xchg
popf
or
mov
fwait
movsb
xchg
sbb
or
icebp
add
adc
and
ds
sahf
mov
mov
ret
fcomps
or
repz
lods
mov
jmp
and
mov
and
jae
insb
jg
dec
cmp
cmp
je
add
mov
leave
mov
adc
mov
or
or
inc
add
mov
lret
idiv
jecxz
gs
sti
fnsave
int
xchg
imulb
push
out
mov
cmc
cld
cmp
shlb
or
hlt
adc
jg
xor
mov
add
or
xor
and
out
int3
adc
out
xchg
nop
pop
mov
and
or
or
xchg
fldt
sub
mov
adc
aas
adc
sbb
mov
aad
jae
pop
and
inc
xchg
rcrb
in
mov
sbb
lock
insl
ljmp
cli
or
and
jne
jp
rcll
into
iret
pushl
dec
dec
or
test
test
mov
add
testl
push
add
loop
mov
xchg
imul
insb
in
cmpsl
in
cmpsb
fcoms
iret
test
call
mov
mov
or
repnz
push
daa
aas
dec
and
cli
mov
xor
mov
lock
xchg
das
push
clc
dec
test
mov
cmp
pop
pop
test
mov
inc
nop
scas
pop
sub
or
insb
mov
mov
fcoml
dec
xchg
lock
jp
and
jl
gs
movsl
cli
es
test
and
sbb
fcoms
dec
faddp
dec
mov
aad
xchg
popa
les
mov
mov
loopne
popf
add
aad
fdivs
pop
mov
jbe
movsb
scas
inc
sarl
inc
push
out
test
mov
clc
jb
jmp
sbb
lret
jae
xor
sub
mov
xchg
andb
jl
jl
dec
lea
cli
dec
fwait
jmp
jno
jae
imull
sub
inc
sub
loopne
shlb
add
lods
lods
xlat
pop
cmp
inc
lea
rcrb
lods
addb
int
sbb
add
push
add
xor
mov
xchg
jo
not
jle
push
in
xor
jp
out
pop
out
add
incb
xchg
cwtl
push
pop
cs
mov
lods
and
push
loope
mov
pushf
xor
lcall
cmc
test
in
aad
aam
imul
pop
daa
xlat
and
xchg
imul
push
insb
lret
mov
xrelease
cmpsl
pop
pop
imul
adc
or
inc
cmpl
ficoml
test
int3
xchg
ljmp
mov
gs
sbb
and
cmp
xchg
xchg
insl
movsl
clc
sub
test
and
jae
xchg
loop
fstps
fucompp
out
or
scas
xchg
es
xlat
lret
lods
movsb
mov
lcall
mov
mov
add
call
inc
ds
insl
add
cmp
mov
testl
scas
je
pop
out
js
mov
mov
adc
shr
nop
ss
adc
mov
scas
bound
test
repnz
push
sbb
out
push
dec
sub
adc
incb
dec
decl
jg
aam
insl
mov
stc
mov
dec
sbb
sub
mov
gs
ret
add
imul
sub
popf
cmp
cmp
inc
sbb
es
fistps
test
aas
out
out
mov
sbb
lock
and
jecxz
cwtl
push
ljmp
mov
es
inc
jnp
pop
sbb
adc
bswap
mov
mov
cli
lock
adc
inc
bound
jge
jns
and
pop
imul
jae
orb
sbb
cmc
shll
insl
mov
mov
jmp
shrl
lahf
push
in
jge
add
data16
lds
dec
shr
cmp
fstpt
adc
in
cmpsl
pop
repz
movsb
cwtl
sub
cmp
jno
xchg
sbbl
insb
aad
subb
xchg
sbb
sub
cld
or
cmp
inc
insl
call
inc
add
aam
mov
sub
cmp
cmpsb
aas
cmpsb
sub
mov
inc
or
inc
mov
orb
sub
xchg
stos
mov
in
cltd
addr16
inc
xchg
jg
mov
ret
pop
cli
stos
push
cli
mov
lods
int
jle
popf
push
cmp
sub
mov
xor
and
dec
ds
mov
repnz
enter
jle
scas
lret
out
incb
dec
es
in
or
jns
or
pop
aam
mov
cmp
mov
dec
repnz
inc
push
decl
imul
outsb
xchg
and
xor
xor
add
popf
iret
xchg
sub
xor
lea
es
mov
jno
mov
mov
leave
adc
mov
mov
stos
sti
pop
adc
push
push
add
inc
or
and
iret
sahf
jp
inc
sub
and
xchg
mov
jmp
aas
jle
andb
xchg
movsb
in
pop
pushf
ror
xor
and
pop
mov
jge
add
outsl
fmulp
icebp
xor
aam
std
call
in
daa
fldl
ret
fisubrl
mov
dec
or
jbe
leave
fiadds
out
rol
outsb
push
push
jb
aas
sub
xchg
adc
into
shll
hlt
jge
pop
adc
jmp
sub
inc
push
jo
call
xor
mov
mov
fs
cli
pop
int
cmpsl
sub
mov
sbbl
andb
and
jno
xchg
xor
push
sarl
popf
fwait
and
adc
add
cmpsl
cmpsl
sbb
call
sbb
dec
fsubrs
mov
movb
pop
in
daa
or
arpl
jge
fdivrl
scas
mov
inc
ss
dec
mov
xchg
lcall
dec
lahf
lds
dec
jle
xor
cld
mov
dec
js
sbb
mov
les
mov
push
pop
and
imul
ja
jo
stos
cmp
ja
lds
das
lock
clc
lods
bound
into
xchg
push
push
jmp
mov
sbb
lds
pop
jnp
cli
sbb
jle
lret
mov
lcall
mov
add
sarl
notb
adc
jl
stos
ss
push
jnp
push
jl
mov
das
adc
xchg
adc
cmpsb
mov
inc
adc
ja
dec
or
mull
loop
lea
repnz
mov
ret
adc
scas
mov
rorb
outsb
push
cmp
pop
and
dec
imul
dec
jo
inc
stos
cmp
adc
data16
stc
lds
cs
inc
mov
push
xchg
xchg
loopne
out
ds
mov
or
scas
push
test
hlt
addl
movsb
sbb
xchg
jle
lods
jns
dec
movsb
inc
movsb
xor
movsb
aam
jp
or
pushf
adc
inc
mov
addr16
addl
ret
push
xchg
add
add
jns
scas
push
push
inc
mov
sub
and
loopne
mov
pop
xchg
pushf
cmpsb
in
test
mov
scas
xchg
pop
andl
pop
xor
inc
dec
mov
mov
mov
idiv
mov
test
scas
in
movsl
adc
mov
jg
inc
jne
xor
notb
imul
filds
scas
push
mov
sbb
ss
adc
in
lock
inc
inc
inc
insb
in
cmp
rol
push
pop
inc
jge
pushf
push
jmp
stos
data16
push
xor
sahf
pop
or
sub
inc
mov
sbb
clc
mov
sub
das
or
out
mov
es
outsb
loopne
xlat
or
cmp
inc
js
jns
frstor
shll
sub
dec
sbb
imul
rcll
xchg
imul
repnz
or
dec
pop
adc
int3
cmc
lea
in
lods
hlt
hlt
inc
pushf
dec
or
aad
popf
stc
jae
sbb
iret
daa
push
int3
xor
popa
neg
jle
pop
stos
xchg
ss
adc
scas
push
data16
xchg
pop
stos
call
push
jecxz
cmp
roll
sbb
push
sbb
outsb
add
xor
mov
out
xchg
movsb
xor
jae
movsl
inc
inc
in
shr
push
push
add
pop
in
mov
scas
in
jne
daa
mov
andb
icebp
adc
jae
sub
jge
dec
ljmp
inc
sub
leave
cmc
rolb
push
comiss
int
inc
or
jg
xor
add
out
pop
jmp
out
shrl
xchg
xchg
push
popa
xchg
ficomps
mov
jae
inc
sub
out
hlt
std
in
imul
shl
faddl
fisubs
push
pop
out
icebp
cltd
je
mov
movsl
xchg
lds
aam
nop
jb
pop
xchg
cwtl
stos
aaa
jb
cltd
cmpsb
lods
insb
inc
scas
insb
sub
pop
int
cmpsl
push
sbb
nop
adc
movsl
jae
jg
popf
cmc
lods
in
fisubrl
dec
rorb
test
cltd
rcr
sbb
bound
dec
stos
mov
or
and
lret
mov
or
pusha
push
pushw
decb
add
cmc
ja
jnp
lcall
fimull
repnz
popa
leave
inc
out
das
jmp
sbb
out
flds
dec
mov
fisttpl
xchg
mull
add
std
push
decl
les
fdivs
mov
dec
adc
jecxz
jle
aad
and
sti
jae
leave
or
ret
in
bound
ds
sbb
add
dec
mov
add
mov
and
or
jge
fldcw
fnstcw
sub
mov
lods
push
enter
lea
sub
cltd
jle
cmpsb
inc
fwait
mov
cmp
fisubs
or
cmpsb
lock
sub
mov
imul
into
orl
ret
or
add
clc
das
scas
cwtl
jae
es
pop
mov
test
cmp
cmpsb
ret
cli
jae
push
pop
mov
insb
fistpl
sub
mov
mov
divl
and
shr
jo
and
pop
push
lret
and
fsub
clc
cmp
jbe
mov
je
testb
cmp
orb
fistps
adc
inc
mov
fdivr
lods
mov
scas
ja
outsb
lret
nop
movl
lcall
xor
fadds
mov
inc
dec
enter
dec
stos
pop
sub
imul
mov
dec
xchg
scas
pusha
or
clc
and
loope
jp
mov
nop
pop
lret
lods
xor
sub
hlt
sahf
cmp
fwait
test
movsl
out
aas
fs
jae
pop
ret
mov
cmp
stos
dec
jecxz
out
pop
pop
mov
int3
outsl
in
mov
xchg
push
xlat
clc
add
mov
jl
das
sbb
push
sarl
push
or
lret
pop
les
add
int3
mov
mov
or
inc
jmp
jle
mov
pusha
test
stos
cmp
fs
and
ss
jbe
shr
lds
or
sahf
ljmp
dec
shll
add
mov
pop
std
cltd
cld
insl
jnp
lock
in
pop
cmp
xor
cmp
loopne
xor
add
sbb
push
bound
and
and
mov
fwait
data16
and
repnz
cli
fs
cld
outsl
jo
insb
ja
orb
ret
adc
add
sahf
add
loopne
cmpsb
shl
notb
iret
sbb
repnz
mov
adc
push
mov
dec
outsl
xchg
outsl
mov
out
mov
push
sbb
subl
test
lea
jmp
sbb
int
repz
call
inc
mov
xchg
rcll
cmc
popa
or
mov
rorl
neg
pusha
cmp
mov
push
rol
dec
push
fistps
stos
inc
stc
xchg
sub
and
aam
js
inc
mov
insb
notl
cltd
add
sub
hlt
rclb
and
mov
jp
or
add
inc
fcmovu
xchg
mov
adc
xor
adc
sbb
mov
push
mov
xchg
fwait
loopne
xor
xchg
add
xchg
out
jle
mov
mov
dec
daa
mov
push
cmpsb
in
mov
dec
das
lahf
cmp
sub
lds
inc
imul
aad
out
js
cmp
pop
dec
xor
push
jmp
or
mov
ss
inc
mov
add
fiaddl
mov
pop
arpl
mov
pop
imul
push
mov
or
outsl
repz
mov
cmp
mov
fidivs
hlt
or
push
cli
lret
addb
mov
cs
mov
ds
shlb
fldl
fcmovne
sbb
loopne
inc
mov
rorl
movsl
in
xchg
clc
pop
lcall
imul
cmp
add
push
jae
pushl
mov
addr16
inc
jne
add
mov
rcrb
fsubrs
sub
pop
imul
dec
jnp
imul
daa
cs
inc
fldt
repz
insb
ss
pop
inc
stc
iret
jg
sarb
cmp
sub
addr16
mov
addr16
dec
xor
in
icebp
push
xchg
scas
sbb
shrb
icebp
push
scas
hlt
je,pn
mov
ret
and
rolb
cltd
scas
fstl
out
icebp
cld
sub
mov
std
cmp
out
mov
je
mov
xor
dec
jb
stos
out
mov
push
pop
or
sub
lret
stos
inc
aad
inc
add
les
leave
sub
lret
pop
xchg
out
inc
aam
cmpsl
dec
or
cld
or
inc
cmp
jo
movsb
push
arpl
ja
xor
or
cmovo
inc
daa
push
jmp
lahf
cmp
es
aam
pop
pop
call
or
adc
insl
mov
out
movsl
scas
sub
cmpsl
sbb
jbe
pop
jecxz
mov
and
sahf
inc
out
jno
imulb
cmpsb
ss
cmpsl
lahf
add
xor
dec
jnp
pop
mov
dec
sub
les
daa
cmp
dec
cli
sub
dec
lret
xchg
pop
mov
xchg
xchg
jo
xchg
adcb
sbb
mov
gs
imul
clc
sub
leave
imul
roll
imul
outsl
adc
adc
loopne
fsubrl
stos
and
sbb
fimull
add
mov
mov
sub
dec
loope
xchg
sar
sbb
push
pop
pop
cs
dec
or
pop
or
jmp
mov
jno
test
mov
cli
mov
aad
sti
inc
es
jno
mov
in
ljmp
sti
inc
or
outsb
add
out
lods
ja
fcomps
inc
cmpsl
mov
xor
lret
pop
cmp
loope
loopne
push
ficompl
mov
enter
adc
mov
mov
es
jb
gs
sbb
push
cld
cmp
jle
sbb
push
into
dec
push
fwait
in
fidivrl
insl
insl
pop
out
sti
imul
movb
jecxz
loop
daa
outsb
xchg
sub
lock
into
sbb
test
xor
sarl
dec
int3
mov
fwait
scas
mov
movb
xchg
push
add
mov
cwtl
add
jmp
es
ss
cmpsl
xchg
push
sti
test
rorl
cwtl
loopne
jp
cmp
pop
test
sub
mov
xor
daa
mov
in
sub
mov
jmp
or
arpl
inc
mov
push
jle
inc
in
sti
jnp
repz
loopne
push
lods
loopne
ret
lea
fs
leave
ret
ret
cld
fsts
imul
cmpsl
jo
fwait
inc
loopne
push
xchg
xchg
and
lret
pop
inc
mov
mov
or
or
mov
stc
push
jmp
scas
sub
bound
and
push
clc
out
ljmp
cmpsb
shlb
ja
imul
movsb
adc
outsb
nop
add
icebp
and
cmp
in
mov
repz
xchg
dec
dec
jecxz
add
push
sub
mov
xor
xchg
push
daa
xor
jo
add
cltd
push
pop
mov
aaa
or
test
xchg
xchg
push
popf
xchg
mov
lods
stc
pop
out
cmp
mov
cmp
xorb
jo
lcall
xchg
int
cwtl
arpl
and
in
cmpsb
jne
adc
pop
jno
jg
mov
add
out
fstpt
insb
aad
mov
pop
data16
rorb
pop
aam
loopne
stos
fmuls
bound
inc
and
sub
in
pandn
mov
jne
mov
or
xlat
xor
mov
dec
xchg
sbb
sti
push
xchg
cmpb
inc
call
lock
cmpsb
cld
dec
mov
imul
sbb
les
mov
dec
dec
mov
addr16
sub
mov
call
aaa
lock
imulb
aad
add
jns
mov
jno,pt
lods
or
mov
loope
fisttpl
aam
stos
bound
or
xchg
rcl
movsb
cmp
outsl
xchg
seto
sub
leave
xchg
cmpsl
sbb
sub
loopne
nop
mov
ret
cmp
adc
xchg
test
mov
mov
in
inc
cmp
push
or
lcall
mov
arpl
loope
cmp
cmpsb
sub
push
cmp
popa
sub
lcall
cld
push
push
mov
pop
and
xor
pop
ljmp
sub
cmp
imul
repz
mov
jns
mov
pop
lock
lds
pop
and
add
xchg
popf
cs
fwait
test
jecxz
in
push
pop
jl
and
push
and
push
xchg
decb
mov
mov
xchg
aas
lods
int3
add
pop
pop
pop
out
pop
cmpsb
aad
scas
enter
mov
fbstp
jecxz
jnp
sti
in
fxch
aad
adc
pop
jmp
shl
iret
jg
inc
xor
lods
jno
lods
ret
mov
movsb
inc
dec
sbb
pop
add
xchg
shll
and
nop
or
pushf
xchg
rcll
add
or
in
int3
mov
lods
mov
loopne
jp
xchg
out
shr
mov
sub
mov
lds
test
in
xor
or
hlt
pop
mov
add
adc
ret
cld
dec
fidivrs
and
push
je
mov
mulps
iret
adc
xchg
cmp
out
shll
jmp
nop
fs
push
mov
sub
out
push
sbb
leave
xchg
int3
xchg
adc
lcall
mov
adc
ja
sbb
lahf
mov
xchg
cwtl
sub
jns
loopne
loope
mov
fsubr
outsl
cs
aas
sti
popf
inc
fs
mov
cmp
jo
dec
push
loopne
adc
mov
mov
sbb
in
out
inc
ja
test
insb
fstl
mov
push
decl
test
jge
outsb
addr16
dec
or
and
out
or
push
cmp
ficoml
es
rcrl
dec
dec
sbb
jno
popf
lock
data16
fists
mov
push
xorb
ret
and
xor
adc
xlat
dec
mov
out
ja
sbb
xchg
mov
or
pop
ret
arpl
lret
pushl
mov
loop
out
cmp
mov
mov
add
aad
push
ja
cli
sbb
repnz
push
test
sbb
adc
cli
outsl
add
mov
sbb
sbb
cmp
inc
jbe
bound
mov
pop
mov
mov
lock
in
cmp
movsl
sbb
pop
lea
mov
popf
jbe
jno
gs
outsb
aad
push
in
addr16
scas
xor
lahf
jle
mov
aaa
xorb
fldlg2
movsl
lret
loope
mov
cld
sti
iret
insl
mov
xor
xchg
lret
stos
push
pop
and
push
clc
pop
adc
mov
fcmovnbe
pop
dec
out
test
xchg
add
add
test
rcl
adc
pop
fiadds
rcrb
mov
js
test
sub
cltd
jle
mov
test
loop
mov
xchg
and
push
mov
mov
mov
push
adc
add
inc
testb
adc
adc
out
xchg
repz
lock
fildll
movsb
inc
repz
arpl
mov
adc
push
jns
mov
push
push
cld
jb
ljmp
movl
xorb
dec
ljmp
ss
jg
arpl
sbb
mov
cmp
push
sbb
xchg
rorb
xchg
push
dec
cli
sub
stos
idivb
fildll
pusha
cmpsl
call
iret
arpl
clc
sahf
xlat
xchg
sbb
inc
imul
imul
sub
push
or
jns
mov
pop
push
mov
lret
mov
in
shl
iret
scas
push
add
sub
mov
leave
lods
les
mov
push
dec
gs
bound
xchg
stc
ds
fildll
mov
mov
cmp
into
aas
push
mov
xor
jg
loop
mov
xchg
and
nop
inc
add
jns
push
add
lret
std
ret
ljmp
fiadds
jne
shrl
mov
call
lods
fs
xchg
fwait
test
xchg
addr16
sahf
push
bound
shll
pop
and
aaa
pop
in
scas
mov
ffree
cs
mov
aad
jo
das
pop
rorl
stos
loopne
mov
mov
cmp
sbb
mov
ret
push
push
outsb
repnz
mov
sbb
fdiv
jns
xchg
lret
dec
rcrl
mov
mov
ret
outsb
inc
push
repnz
sti
pushf
ds
test
cmp
lods
add
inc
dec
jo
sbb
pop
jp
in
aas
xchg
mov
jae
adc
sbb
pop
push
pop
push
jge
xor
mov
not
sbb
fdivs
push
xchg
inc
dec
iret
in
test
sub
lods
data16
je
rclb
inc
mov
loope
fwait
push
scas
cld
in
pop
sub
inc
lret
in
aam
gs
movsb
fs
jns
jmp
pop
mov
xchg
clc
out
and
fidivs
stos
sbb
adc
and
nop
pop
inc
stos
mov
mov
sbb
xchg
cmp
je
bound
out
push
loop
lock
cwtl
js
adc
add
xchg
add
out
aad
imul
cwtl
mov
add
push
mov
jnp
mov
repz
cmpsl
mov
fnstsw
adc
and
les
pop
hlt
in
js
fxch
sbb
jle
aaa
cmc
adc
add
shrl
sub
pop
jl
or
jecxz
hlt
sarb
test
adc
aad
pop
and
cmc
popa
mov
jbe
jle
xchg
xor
lahf
aad
add
cmp
inc
adc
gs
add
inc
adc
xor
nop
je
inc
inc
or
mov
loop
insb
push
push
arpl
cltd
add
jg
xchg
es
and
and
push
stos
jns
icebp
sbb
outsb
shrl
dec
adc
cld
mov
je
push
inc
js
add
jo
int
cmc
lds
sub
aaa
sahf
cmpsl
xchg
push
or
repnz
push
xor
cwtl
pop
add
pop
sub
xor
testl
pusha
inc
sbb
xchg
cwtl
pop
add
ret
sbb
sub
jmp
aas
fcomi
movsb
ds
mov
push
pop
inc
dec
addr16
fwait
or
inc
dec
mov
pop
popf
cli
inc
or
shll
jno
xchg
sbb
or
sbb
es
push
push
shl
lods
lods
aad
push
mov
pop
xchg
inc
data16
lea
cmp
pop
mov
xor
and
in
sahf
aad
mov
or
in
test
mov
repnz
lods
out
rorl
or
jecxz
js
push
rorl
mov
scas
or
loope
mov
test
cmp
test
adc
push
fs
fadd
cmpsb
jle
adc
pop
jno
scas
out
mov
add
jmp
dec
jbe
adc
sarl
out
sbb
pop
out
push
mov
popa
sub
andb
pop
and
push
icebp
add
or
mov
dec
inc
leave
stos
clc
inc
leave
lret
xor
rcrl
leave
and
xchg
and
jecxz
mov
lcall
jmp
jno
sbb
test
mov
jbe
jg
fldl
push
fwait
rorb
add
push
jns
push
lea
sub
and
jae
mov
test
in
roll
jnp
mov
add
shll
xchg
inc
stc
cmp
out
lock
pop
adc
adc
leave
icebp
mov
and
test
bound
ret
adc
adc
loopne
in
jno
and
ljmp
push
imul
xor
mov
inc
or
mov
pop
jge
mulb
ret
repnz
add
scas
leave
les
cmp
hlt
mov
rcll
mov
leave
sub
cmp
mov
movb
push
inc
inc
ret
mov
adc
mov
les
sub
gs
jb
out
push
mov
cmp
enter
jecxz
push
xor
mov
loopne
jnp
clc
dec
nop
test
push
mov
add
in
xchg
sar
je
xchg
mov
fwait
adc
xchg
adc
push
xchg
gs
mov
xchg
out
mov
dec
mov
std
dec
pop
xchg
adc
mov
xor
cmp
shrb
xor
inc
repnz
call
sar
jp
push
jae
pop
and
pop
popf
pop
cs
es
inc
pop
and
dec
mov
mov
sbb
pop
in
int3
push
lret
mov
into
daa
push
je
mov
xor
loope
into
addr16
fwait
out
or
lods
xor
icebp
push
out
mov
cli
dec
scas
sbb
jg
into
push
movsl
sbb
rolb
and
test
sbb
push
xor
lods
sbbl
lds
addr16
lock
dec
in
cltd
scas
daa
test
and
cmp
movsl
sahf
rol
ffreep
test
sbbb
imulb
clc
rcrl
jge
jp
fcmovnu
arpl
xor
test
shlb
mov
into
inc
icebp
inc
dec
and
leave
lret
add
cmp
call
mov
imul
ss
aam
lret
lock
lods
ja
mov
decl
inc
loop
movsb
cmc
test
jo
add
insb
loope
jecxz
push
jl
lods
xchg
stos
pop
mov
cltd
pop
pop
mov
mov
mov
inc
jb
loope
dec
sbb
int
icebp
mov
enter
daa
je
scas
arpl
mov
lods
loopne
or
dec
inc
xor
xchg
add
sub
mov
shll
cld
cmp
fcompl
pop
mov
mov
add
jbe
sub
aad
add
dec
push
iret
fnstcw
dec
out
mov
ret
roll
cmc
mulb
jg
push
in
dec
adc
rcrb
add
xchg
decl
or
imul
jle
xchg
xchg
or
sbb
cmpsb
push
or
xchg
ret
mov
fstpt
add
rclb
push
movsl
sbb
ljmp
push
roll
mov
dec
and
rcll
outsl
adc
mov
dec
xor
hlt
mov
inc
outsb
pusha
dec
and
add
test
mov
std
gs
or
out
enter
loopne
xlat
jbe
lahf
mov
loope
sub
push
jmp
insl
sub
pop
test
push
loope
das
pop
dec
leave
ds
cli
xlat
or
add
jo
lods
roll
mov
mov
adc
mov
mov
push
jo
cmp
or
jns
cmc
xchg
jmp
sub
outsb
insl
lret
daa
icebp
mov
scas
scas
jo
lcall
mov
mov
lret
pusha
jne
outsb
sub
push
add
mov
pop
imul
test
test
cmpsb
mov
push
mov
jbe
lret
out
in
cmp
inc
or
sub
push
mov
xlat
dec
lahf
jns
sbb
aaa
jecxz
sbb
mov
nop
jl
imul
shr
es
pop
adc
scas
xchg
rcrl
mov
cmp
out
inc
out
mov
iret
data16
add
sub
out
xchg
jno
sti
js
adc
jle
ljmp
in
test
fcoml
scas
sarb
and
and
xchg
stos
es
int
pop
xchg
pop
mov
or
ds
fcoml
adcl
sub
xlat
outsb
fwait
mov
pop
jg
jmp
test
aam
hlt
cltd
inc
mov
xchg
sbb
sbb
jb
dec
mov
inc
or
xchg
fmul
roll
lret
mov
mov
pop
shrl
out
cmp
outsl
xchg
gs
loop
mov
inc
mov
push
bound
lcall
mov
out
cmp
shl
mov
push
jmp
or
sub
es
push
test
dec
imulb
pop
sbb
pop
dec
rolb
add
sub
adc
inc
das
subb
dec
push
mov
repz
xor
outsl
cmp
dec
loope
and
ficoml
inc
mov
mov
decl
mov
sub
sbb
addl
mov
jp
sbb
jecxz,pt
stos
leave
dec
daa
movsb
add
inc
mov
xor
xchg
popf
mov
dec
nop
or
int3
ret
pusha
inc
movsl
movsl
imul
xor
sahf
lods
add
fs
inc
enter
fs
aam
cmc
or
fcmovb
leave
sub
mov
movsb
jmp
sbb
lret
addr16
lock
movsb
push
pop
sbb
push
rcr
clc
pop
rclb
ljmp
movsb
and
mov
or
cs
cmp
cmpsb
fistpl
std
jl
incb
lcall
stc
cmc
aam
and
je
ror
sbb
xor
jp
pop
outsl
jnp
dec
lods
mov
test
adc
mov
mov
scas
or
and
loopne
mov
add
push
sti
in
aaa
cmpsb
lcall
mov
jle
mov
push
stos
movsb
mov
sbb
sbb
int3
lret
inc
jne
or
push
out
mov
sbb
xchg
push
stos
or
fwait
cld
jecxz
and
addb
cmc
mov
mov
sub
sbb
jo
push
mov
nop
pop
sub
push
shr
ljmp
clc
pop
sti
bound
jmp
inc
dec
outsl
into
cld
hlt
dec
in
mov
push
jns
push
sbb
sub
aad
ret
lret
mov
xchg
test
lock
mov
mov
sbb
loope
out
popf
pop
xchg
or
sub
mov
add
outsl
mov
jbe
pop
adc
popf
imul
shll
leave
jae
mov
test
rcll
divb
mov
xor
inc
mov
mov
shrl
loop
out
cmp
movsb
mov
stos
jne
fmuls
mov
inc
add
je
xor
aas
pop
nop
xchg
push
xlat
ror
adc
cmp
pop
loop
arpl
mov
js
jecxz
push
pushf
nop
cmpsb
jb
xor
lods
mov
jle
push
popf
mov
xchg
gs
and
xchg
cmc
aam
push
add
aad
adc
pop
sub
dec
xchg
into
inc
pop
insl
xor
or
std
push
mov
inc
jns
mov
pop
in
rclb
fldt
das
test
scas
cmpsl
cli
arpl
and
xor
fbstp
inc
fbstp
xchg
and
fidivs
ret
pop
mov
dec
or
jo
arpl
in
or
scas
add
ja
repz
ja
imul
cs
mov
test
xchg
jle
bound
pop
cmp
cmp
fdivs
shlb
outsl
daa
fmulp
in
popf
xor
xchg
stos
pop
dec
push
and
cli
pop
jmp
add
and
add
popf
jp
add
push
adc
sarl
outsl
int
dec
lods
jno
insl
in
push
lret
in
cmp
fwait
dec
pop
pop
inc
lcall
cmp
in
mov
push
jp
mov
nop
jp
fcoml
imul
std
and
scas
insl
mov
mov
hlt
inc
lods
fldenv
movsb
jmp
lcall
cmpsb
dec
cmp
push
mov
add
ret
mov
jo
ja
adc
lea
ret
or
cmpsl
scas
push
jle
or
inc
xchg
pop
jno
xchg
lods
lea
hlt
adc
in
ds
xor
jbe
sarb
and
sub
ss
fstp
mov
dec
dec
pop
rcrb
das
mov
les
fs
sbb
mov
out
lret
or
daa
in
icebp
mov
fists
in
mov
icebp
dec
adc
dec
inc
pop
inc
data16
dec
in
or
fisubrl
mov
rcl
jae
or
std
push
std
pop
aad
stc
or
popa
fs
adc
repz
xlat
or
sub
insl
xor
mov
stos
pusha
inc
pop
mov
push
mov
and
int
mov
and
cmp
push
sarb
mov
bound
mov
push
or
into
sub
sbb
loope
jg
mov
enter
insb
push
lods
dec
push
test
loop
data16
xacquire
mov
shll
cltd
push
out
addr16
adc
push
xchg
lds
cmp
cmp
mov
mov
push
jle
dec
adc
xchg
jmp
xchg
xlat
xchg
push
lret
or
in
inc
xchg
cmp
mov
or
iret
leave
and
sub
lock
sub
ficoml
push
xchg
mov
leave
cmpsb
fistpl
repz
lock
mov
and
lock
daa
mov
sub
test
popf
mov
test
push
outsb
sub
sti
std
cmp
push
enter
test
cs
clc
test
cmp
jg
push
shl
gs
mov
xchg
cmp
sbb
pop
inc
xor
xchg
addr16
sahf
rcrl
jmp
push
call
or
and
call
xor
aaa
xchg
movsb
dec
sub
jno
mov
ss
sbb
or
pop
jno
sbb
rcll
daa
dec
pop
in
fwait
pand
clc
inc
dec
das
add
outsb
sahf
movsl
dec
aas
push
mov
adc
popf
and
jns
test
fdivrs
fistpll
xor
popf
rcll
add
loopne
push
mov
pop
stos
jl
repz
push
fld
push
scas
fisubs
lea
xor
ljmp
adc
sub
mov
xchg
xor
and
dec
cmp
imul
dec
leave
repnz
cmp
pushf
dec
mov
dec
aaa
and
push
lcall
push
inc
fwait
aam
out
repz
sbbb
cli
fisubs
ja
call
aad
shlb
sub
jge
cmc
adc
addr16
add
lds
outsl
sub
out
jmp
and
scas
xor
xchg
jmp
mov
incl
fidivrl
sub
or
dec
repz
es
je
je
dec
out
dec
cmpsl
int
gs
mov
jo
lods
out
mov
cmp
inc
out
ret
dec
dec
pop
into
mov
mov
jg
xchg
mov
or
or
aas
nop
pop
sbb
gs
adc
push
sbb
inc
push
stos
inc
pop
push
xchg
pushf
ret
pop
push
mov
inc
dec
inc
cmpsl
jecxz
lods
fcomp
xor
jmp
mov
xor
stos
inc
xchg
ds
mov
inc
and
lods
dec
cmpsb
enter
test
sub
loop
add
sub
mov
mov
fs
or
mov
mov
aad
jmp
mov
inc
xchg
mov
testb
lret
jbe
jbe
lods
jmp
xor
cmp
inc
jns
adc
and
pop
inc
add
daa
in
jmp
cs
mov
ret
pusha
lods
test
pop
jo
shr
xor
stos
hlt
mov
ret
lahf
out
inc
mov
mov
pop
pop
adc
adc
xchg
add
adc
or
dec
fwait
sub
pusha
cmp
cmpsl
cmpsb
sbb
pop
jnp
xchg
xchg
add
repnz
test
xor
lods
adc
dec
cwtl
addr16
cli
dec
mov
aad
test
pop
lock
push
shrb
fdivl
dec
ds
push
xor
lcall
adc
xor
mov
popf
gs
fisttps
faddl
test
cld
pusha
aaa
jbe
xchg
fwait
and
es
or
and
adc
add
iret
aaa
cltd
push
js
fwait
test
inc
mov
jns
mov
add
ljmp
mov
fs
fmuls
jnp
pop
sub
aas
mov
mov
pop
fimull
fdivrs
sub
mov
inc
fwait
lahf
stc
or
xchg
xchg
push
push
fwait
adc
mov
dec
je
pusha
mov
and
subl
add
mov
pop
into
movsb
adc
inc
es
dec
js
xchg
cmpsb
cmp
dec
lds
sbb
std
xchg
xchg
lods
loopne
mov
jns
test
push
aaa
mov
push
call
dec
xchg
sti
aas
ds
popf
cmp
dec
add
stos
pop
mov
push
in
jmp
cmpsb
out
fstl
add
mov
lret
inc
dec
cmp
sub
lods
out
or
lcall
ficoms
pop
inc
xor
pop
aam
dec
popa
test
or
stos
shll
loop
lret
mov
adc
xor
sbb
fnstsw
sub
out
xchg
cmp
pop
lret
cmpl
les
jecxz
and
ja
cmp
out
test
xorb
or
popa
lahf
aaa
push
out
movsb
lock
fsts
xchg
cmpsb
das
pop
popa
mov
dec
mov
sub
add
pop
stos
cmc
divb
push
roll
test
xchg
test
sub
shlb
mov
adc
adc
out
xor
das
movsl
sbb
dec
mull
jb
jo
adc
or
addr16
cmpsb
imul
int
xchg
xchg
repnz
add
test
loopne
enter
push
test
xchg
lods
push
mov
mov
insb
inc
mov
lret
dec
cwtl
iret
inc
sub
ljmp
loop
imul
add
clc
aaa
shll
dec
lea
shlb
adc
jns
or
imul
push
inc
out
push
test
push
inc
ljmp
dec
pop
aam
xchg
lods
cld
aam
pop
shlb
sbb
sub
push
enter
addl
jb
sar
mov
xor
fsubrl
ss
outsb
xlat
mov
insw
mov
pop
and
sub
test
and
out
out
or
rcrb
cmp
call
das
out
icebp
repnz
sbb
sub
dec
mov
dec
fwait
add
cmp
stos
pop
fdiv
push
inc
clc
mov
sbbl
scas
push
xchg
cwtd
or
mov
int
mov
or
cmpsb
divb
decl
xchg
out
xor
push
sarl
jbe
xor
outsl
mov
xor
in
aaa
leave
out
loope
dec
aam
push
cmp
cmp
add
lods
mov
dec
jne
mov
mov
lret
enter
inc
or
push
sbb
out
lods
fcmovb
sub
adc
sub
sbb
jl
repnz
mov
ret
xchg
addr16
adc
das
pop
pop
sbb
sbb
and
mov
mov
hlt
movsl
dec
aad
notb
ja
sbb
or
call
aaa
clc
test
dec
data16
gs
loope
mov
jecxz
pop
mov
jg
cmp
mov
inc
or
out
adc
push
push
test
test
rcr
in
cli
add
stc
dec
add
add
iret
jnp
push
cli
lret
jnp
in
and
fs
pushf
fcomps
xchg
leave
div
loopne
mov
mov
sub
bnd
pop
dec
dec
addl
pop
sbb
addl
mov
mov
jmp
pop
scas
ret
pushf
mov
dec
jns
dec
fisubrl
sti
pop
data16
and
mov
xor
inc
mov
in
dec
adc
push
add
cmp
lret
movsl
test
test
imul
sbb
jns
loop
insl
inc
sbb
inc
xor
cld
cld
xchg
cmp
outsb
add
addr16
repnz
push
mov
ljmp
in
xchg
bound
mov
stos
in
fnstcw
daa
ss
out
hlt
aaa
fidivrs
ljmp
scas
xor
mov
gs
outsl
pop
inc
jns
and
jg
mov
rorl
pop
into
sbb
movl
jb
xor
jp
icebp
xlat
jmp
out
sub
stos
adc
popa
push
mov
sahf
mov
aas
sahf
popf
addb
adc
repz
into
cmp
or
mov
sbb
insb
adc
mov
movsl
test
inc
and
inc
decb
sbb
sarb
mov
or
leave
jmp
fsubrp
lret
rcrb
jge,pt
in
mov
push
mov
shl
ss
xor
push
pop
out
jnp
push
gs
lock
adcb
add
sub
in
sub
scas
jne
sub
and
in
sub
mov
ret
mov
lahf
bound
mov
sub
lock
scas
cmp
mov
mov
in
or
arpl
xchg
je
addr16
popl
push
cmovae
sarl
mov
or
cwtl
popa
adc
lahf
push
xchg
mov
call
clc
jmp
stc
jns
adc
dec
or
shlb
ja
inc
or
xchg
notl
push
mov
pop
pop
cmp
call
jo
push
inc
cmp
ljmp
orl
pop
loope
push
pop
shlb
je
jae
imul
xchg
add
in
jnp
pop
push
push
int3
mov
pop
push
jmp
cmp
cmpl
aam
sbb
inc
or
js
sub
aas
push
jge
inc
rolb
lahf
push
shll
stos
gs
lret
mov
in
fdivr
cmp
cli
flds
push
pop
cltd
sbb
xchg
pushf
jno
sti
sti
jnp
xor
fmulp
add
mov
or
cld
sub
ret
test
mov
cmpsb
insl
enter
add
inc
inc
mov
push
out
cmpsl
cmpsl
andl
jecxz
inc
fs
adc
lret
mov
and
cmp
push
push
sbb
adc
push
pop
jle
leave
ss
mov
xor
dec
jbe
notb
jbe
in
inc
xor
sub
inc
lret
leave
xlat
add
and
pop
aas
pop
loop
bound
out
jnp
add
imul
fbstp
dec
es
addl
push
jmp
cmc
gs
pop
mov
sbb
push
mov
scas
dec
mov
mov
push
stos
jle
jmp
sub
mov
add
jmp
adc
icebp
push
xchg
pop
push
mov
adc
dec
cwtl
mov
fsubl
loope
xchg
mov
add
fstpl
inc
mov
pop
mov
rorl
leave
fs
out
jle
nop
add
push
pop
jnp
inc
test
or
push
addr16
dec
push
mov
push
arpl
add
sarb
mov
jo
lret
inc
jno
or
inc
call
stos
mov
movsb
sub
inc
push
inc
xchg
or
iret
out
fldt
movsb
jmp
mov
test
das
xorb
das
dec
fmuls
xor
sti
es
adc
sub
sahf
sbb
test
or
imul
repnz
push
cli
ret
inc
xchg
loopne
insb
push
and
ret
es
or
or
dec
jmp
adc
xor
and
mov
add
jno
lock
fwait
dec
lret
and
insb
outsb
cmp
and
sub
adc
mov
dec
xchg
pop
call
adc
nop
pop
mov
cmp
add
test
std
enter
pop
cs
ds
jmp
mov
orb
xor
mov
pop
enter
pop
ret
into
and
in
lea
lahf
lds
mov
pusha
xchg
or
and
adc
outsb
sub
xlat
jp
addr16
aas
stos
rol
enter
xlat
mov
fcoms
xor
addr16
jle
js
pop
cmpsb
je
push
mov
or
ljmp
sbb
shlb
pushf
mov
ret
ret
lret
fbld
and
cmp
loop
or
push
lock
insb
jne
sub
push
out
lcall
mov
clc
mov
sbb
add
add
mov
adc
cmc
mov
adc
jecxz
loop
repz
popf
in
mov
in
loopnew
je
insl
push
xchg
push
inc
pop
mov
andb
xchg
ljmp
jbe
stos
fmull
stc
rclb
insb
push
push
mov
hlt
data16
xchg
mov
outsl
pop
in
fmul
cmp
or
sbbl
jecxz
dec
or
lret
and
int3
jnp
pop
fcomps
jnp
fs
jle
sub
sti
sarb
cmp
test
lret
out
dec
mov
js
cmpsl
xchg
or
stos
add
push
pop
lock
mov
xor
fimull
loope
ds
inc
rcrb
jnp
cs
mov
clc
lods
lock
mov
push
mov
cs
imul
dec
jp
jnp
into
test
dec
cmp
adc
into
or
pop
xchg
jge
loope
sbb
mov
dec
insl
out
push
stos
loop
jno
rorb
dec
jno
hlt
dec
int
pusha
jb
xor
dec
imul
pop
subps
lock
fsubl
adc
rolb
push
inc
arpl
adc
aam
arpl
call
cmp
dec
cld
and
push
orb
sbb
xchg
in
in
clc
stc
cmp
pop
cltd
mov
mov
mov
cli
lcall
push
adc
add
mov
fidivrl
fadd
sbb
mov
lea
xor
imul
sbb
popf
jl
lret
shrl
sbb
lods
in
pop
mov
mov
repz
lea
sarl
xor
fsubr
lcall
scas
sahf
loopne
mov
leave
push
mov
push
js
mov
dec
loop
lea
aas
lcall
out
or
movsb
dec
dec
ja
das
cli
rorb
shlb
aam
jbe
rcll
in
jns
jns
sti
xlat
pop
cmp
xor
add
imull
push
lods
adc
jle
repz
scas
cmpsb
fiaddl
xchg
sub
bound
test
inc
sbb
icebp
out
stc
js
into
mov
ret
pusha
xor
mov
mov
nop
out
test
or
std
inc
insb
push
sbb
arpl
xchg
or
mov
pop
lret
mov
and
dec
and
mov
movsl
bound
or
cmp
inc
and
ljmp
jl
lock
lahf
mov
or
lds
mov
shrl
fnstcw
xor
fcmovbe
add
mov
inc
dec
sub
pop
xchg
out
mov
je
mov
inc
out
lock
loopne
aam
fstl
mov
in
je
mov
movsl
pop
mov
mov
xor
dec
loopne
xchg
or
sarb
pop
jnp
test
rcl
mov
mov
repnz
fldcw
pop
lock
js
popf
and
int3
jae
faddl
xchg
rcll
test
jmp
loope
cld
imull
lcall
lea
into
xabort
mov
shlb
push
rolb
outsb
and
mov
stos
ljmp
sub
in
mov
in
sbb
xor
mov
xchg
stc
mov
inc
test
or
and
popa
jge
gs
sub
cmpsb
cwtl
sbb
dec
and
insl
shlb
jl
insl
loop
push
sbb
inc
dec
inc
mov
repz
xchg
xlat
aam
xor
icebp
jle
iret
sbb
jg
jg
push
stos
adc
jne
cmp
ljmp
fidivrs
push
rcll
xlat
fwait
mov
xchg
call
repnz
and
xor
add
into
hlt
das
xor
out
dec
sbbl
inc
sti
push
jl
push
loope
sub
cmp
in
inc
xchg
aam
adc
mov
cltd
std
das
push
sti
jle
aaa
aaa
mov
stc
scas
sbb
ljmp
xchg
cmpb
sub
fistpll
or
and
fcompl
push
pop
mov
jnp
pop
xchg
jno
sub
push
test
fwait
jno
add
mov
lock
test
cmp
sbb
out
fs
lock
push
pop
int
mov
cwtl
jnp
mov
add
aad
ss
dec
sbb
dec
cld
sbb
daa
mov
int
ljmp
push
stos
lds
xchg
mov
sbb
inc
cmpsl
sbb
cwtl
enter
inc
cmp
push
data16
or
push
inc
outsb
add
pop
loope
jle
push
and
sbb
adc
mov
jnp
outsb
bound
je
sbb
scas
push
sbb
jl
popa
mov
addb
jnp
lahf
dec
shrb
jle
loopne
ret
lcall
pop
fcoml
push
icebp
mov
jae
mov
push
js
frstor
jg,pt
lcall
call
and
call
in
sbb
push
jnp
mov
dec
in
and
jg
sti
pusha
add
cmpsl
or
sbb
leave
mov
aaa
xchg
jmp
test
and
or
adc
inc
in
subl
xchg
xchg
sub
scas
stos
movb
inc
in
sbb
out
lock
rcll
push
sbb
push
xchg
outsl
adc
inc
push
je,pn
rcrb
or
mov
dec
inc
es
mov
sbb
out
mov
ret
push
lcall
outsb
fisubs
jbe
jmp
push
pushf
mov
aaa
sub
add
mov
xlat
movsl
jle
add
loopne
or
aam
jb
add
movsl
xor
pop
add
aas
iret
stc
cmp
xchg
mov
cmp
mov
shrl
aad
es
test
es
sub
push
pop
add
stos
xlat
int
cmp
iret
rorl
mov
sub
ret
or
and
and
daa
lods
scas
sbb
sbbw
pop
jecxz
stos
aad
and
fnstenv
cli
movsl
repz
lahf
xchg
popa
dec
push
inc
adc
shrl
leave
ja
int3
out
scas
fstl
ficoml
lret
jne
and
sbb
mov
fwait
mov
rol
movsl
mov
xor
fdivrp
dec
cld
push
imul
call
mull
push
ss
jb
mov
fnstcw
xchg
mov
jno
jns
xchg
clc
fs
push
stos
and
or
fisttpll
xchg
push
fists
xor
xor
cmpsb
mov
jae
outsl
pop
ret
add
jecxz
pusha
dec
sub
shr
cmc
inc
xor
jb
push
cmp
or
mov
cmp
or
insb
fcompl
add
push
sbb
inc
jno
mov
leave
fdivrl
mov
sub
das
divl
fidivs
gs
popa
icebp
dec
ret
mov
in
and
pop
push
jg
push
mov
cmpsb
mov
leave
xlat
xlat
daa
adc
sbb
xchg
aas
addb
not
fwait
ss
mov
movsl
jae
mov
push
iret
jae
cltd
jns
and
adc
ret
in
fcoml
inc
fs
push
jns
add
push
ficoms
mov
arpl
add
gs
mov
int
pop
inc
sub
xor
xor
dec
mov
addr16
inc
lret
push
jge
xor
ret
ljmp
rorb
call
inc
and
push
adc
push
jae
pop
cld
fidivrs
rorl
mov
inc
adc
jl
or
push
push
mov
lret
les
pushf
add
cli
test
jns
stc
inc
xchg
lock
shl
mov
dec
inc
pop
jp
xchg
mov
out
int
xlat
inc
ja
add
pop
repnz
mov
pushf
cmp
jae
jnp
and
icebp
xor
sbb
xchg
stos
fstpl
sub
cli
std
fnstsw
lods
push
out
mov
pop
xor
or
sbb
es
push
shll
add
sub
arpl
lahf
lcall
push
push
push
aas
js
cmp
test
int
leave
pop
cmp
idivb
jmp
jecxz
cmpsb
dec
mov
mov
mov
pop
jle
mov
clc
mov
insb
cmc
addr16
cwtl
lret
dec
cmp
roll
cmp
mov
dec
arpl
out
testb
pop
fstp
repnz
enter
inc
xor
ffreep
dec
mov
in
jecxz
sub
jge
add
xchg
inc
lahf
xchg
test
fidivrl
clc
jnp
sub
aaa
pop
push
pop
sub
inc
dec
in
mov
cmp
mov
xchg
sub
inc
jb
adc
orl
daa
stc
ss
cmp
sbb
data16
into
je
mov
lea
sbb
or
sbb
push
xor
js
test
or
les
sbb
add
fldenv
je
sub
out
dec
lods
xor
mov
loop
repz
call
cmp
sbb
imul
repz
dec
popf
and
cmc
decb
jbe
lret
mov
nop
rcll
sbb
neg
aam
fdivrs
arpl
jno
scas
das
mov
call
cmp
mov
movsb
xor
sbbb
packuswb
stos
pushf
inc
add
push
push
mov
jae
jo
das
inc
insl
mov
push
mov
cwtl
adc
cli
aaa
incb
lea
popa
inc
fnstcw
stos
sub
flds
sahf
sbb
adc
popf
insl
sbb
mov
leave
mov
pushf
xchg
and
mov
or
orl
xchg
inc
out
pop
mov
ret
sbbb
cmpsl
ror
sbb
in
xchg
and
mov
cmp
mov
repnz
cs
adc
addr16
mov
inc
rolb
inc
lcall
les
dec
xor
pop
andb
inc
xchg
or
dec
or
ja
sbb
pusha
sbb
notb
leave
test
pop
sub
mov
mov
loop
pop
stos
cltd
scas
testl
xor
lcall
add
inc
jbe
and
dec
stc
sahf
fcmovnb
jae
and
je
cwtl
fistl
nop
outsl
arpl
sbb
les
mov
inc
aad
ret
aas
arpl
xchg
out
aam
lock
jle
orb
xchg
movl
je
jns
mov
ljmp
dec
in
mov
repz
mov
insl
mov
sbb
sbb
jb
pushf
stos
push
fcomp
adc
scas
inc
ficomps
xchg
icebp
adcb
sub
insb
ds
cmpsl
dec
ja
and
aas
movsl
pop
adc
out
sbb
xor
inc
or
mov
pop
sub
sbb
sti
xor
hlt
mov
mov
or
std
sar
mov
arpl
xchg
pop
mov
and
lods
pop
jns
sbb
sub
in
sbb
pushl
push
iret
lcall
rclb
ret
dec
inc
pushf
push
inc
add
push
sbbb
orb
pop
sub
adc
les
pop
jg
and
movsl
sahf
dec
fldt
jp
pop
or
sbb
mov
and
push
lods
stc
sub
cs
sub
lea
sub
scas
lret
pop
push
push
xor
jb
sub
sub
in
and
push
loop
test
pop
pusha
jno
jno
addr16
ds
push
cmpsb
push
cmp
out
cmp
mov
cmp
lods
ret
add
push
stos
cmp
movsb
sub
imul
mov
xchg
into
sub
mov
fiaddl
repnz
into
out
cmp
sbb
push
lahf
jnp
inc
mov
inc
jne
dec
repz
jo
sbb
and
loopne
clc
dec
bound
sbb
test
in
sti
fsubl
jb
mov
sub
out
dec
push
or
dec
jg
push
int3
ljmp
pop
mov
andl
rcr
bound
shl
dec
clc
dec
out
push
inc
and
sbb
loopne
movsb
add
shll
lods
mov
push
test
pop
lods
and
out
mov
fyl2xp1
inc
add
pop
mov
sbb
leave
push
ret
jbe
cmp
fildll
in
cwtl
xor
popl
sbb
xlat
daa
hlt
mov
mov
jecxz
dec
ljmp
sahf
shl
jae
jae
je
adc
add
mov
cmp
shll
repz
movsb
inc
inc
aam
test
jb
push
lahf
mov
cmpsb
sbb
fisubl
sub
mov
push
mov
addr16
cs
push
push
push
aam
push
mov
jno
in
jae
push
clc
movsl
jo
mov
xchg
cmp
int3
in
mov
mov
dec
push
xchg
lcall
adc
loope
cmp
jo
jecxz
in
adc
testb
push
sbbl
imul
mov
xor
jnp
int
inc
fwait
jg
in
shll
pop
adc
arpl
scas
push
pop
xchg
xorl
mov
imul
stos
and
mov
in
add
in
push
sbb
jge
enter
popf
mov
cmp
test
jl
xchg
imul
jmp
iret
or
enter
out
or
sahf
je
fidivrs
ljmp
or
shlb
popa
decl
jle
mov
mov
jp
mov
dec
or
insl
outsb
dec
aas
push
mov
jmp
push
repnz
sahf
out
and
sbb
jnp
xchg
dec
insb
insb
mov
cltd
fisttpll
mov
lds
rol
dec
inc
pop
push
sbb
push
push
fisttps
negl
in
dec
lock
adc
andb
or
daa
mov
mov
out
mov
mov
push
mov
in
es
sbb
stos
orl
add
mov
xor
mov
cmp
addl
test
xchg
mov
xchg
push
mov
into
xor
mov
aas
push
jo
sub
push
cmp
rcl
ja
out
add
or
ljmp
sbb
mov
cmp
cmc
das
jg
pop
pop
xchg
push
pop
jl
in
out
popa
ds
std
dec
mov
add
loope
addr16
xlat
mov
std
fwait
push
fs
stc
ljmp
loop
outsl
add
xor
or
push
pop
popa
dec
imul
lret
dec
xor
mov
mov
mov
jno
stc
xlat
jle
loope
popl
lret
sbb
clc
arpl
test
pop
push
rol
mov
lahf
popf
gs
std
jmp
orb
dec
inc
inc
mov
or
cmc
xchg
inc
mov
scas
jae
lods
test
sbb
sub
shrb
daa
xchg
mov
jge
ljmp
shufps
sbb
ret
jmp
sub
dec
pop
pop
mov
sbb
add
daa
jl
rcrl
mov
push
test
or
fmul
inc
bound
mov
dec
mov
push
nop
mov
sub
stc
lods
popf
jno
test
xor
and
icebp
pop
mov
xchg
addl
outsl
mov
hlt
subb
xchg
aam
cmpsl
outsb
dec
enter
adc
cmc
mov
xchg
xchg
mov
aas
xchg
mov
push
and
mov
lea
xchg
sbb
mov
hlt
jno
xor
popf
std
fdivrs
xor
in
cmp
movsb
std
hlt
scas
sub
jns
push
jge
or
cmp
and
dec
mov
and
cmpsb
setae
jns
lcall
jno
mov
ficompl
sti
jp
test
lea
outsb
inc
jecxz
lds
add
pop
orb
jbe
push
int
insl
and
loopne
pop
sbb
imul
sti
mov
adc
js
and
sub
push
popf
mov
enter
xchg
cmp
enter
aam
or
push
sub
xchg
xor
xchg
imul
dec
popa
pop
outsl
divb
xor
ss
fs
jae
pop
sti
psubusw
jbe
popf
push
sub
test
inc
das
adc
es
ja
pop
sub
test
cltd
fimull
xchg
out
and
je
testb
or
pushf
jns
loope
rcrb
shrl
or
push
das
pop
sbbl
fst
pop
add
xor
iret
jge
out
xorl
je
je
xor
jb
pop
clc
sub
sarl
pop
aam
sbb
inc
fldl
lds
nop
inc
das
adc
push
sbb
jns
ret
pusha
andb
pop
sbb
in
sub
add
aam
lods
cmp
popf
data16
aas
int3
xchg
ret
jle
subb
cmc
pop
nop
test
adc
push
in
sbb
clc
popf
addr16
jg
icebp
in
fs
fsubrs
ljmp
mov
out
push
test
in
in
pop
sti
jne
push
rcrl
fwait
movsl
push
mov
out
mov
sti
sub
fistps
mov
cmpsl
aad
mov
and
aas
lahf
scas
sbb
mov
dec
lods
add
shl
movsl
imul
pop
jno
add
pop
xchg
je
out
mov
test
addr16
jns
insb
mov
insl
xchg
xchg
dec
jo
fldenv
mov
pop
mov
insl
sub
loop
mov
scas
mov
ficoms
xor
pop
pop
mov
push
pop
sti
std
jge
cmp
xor
pop
sbb
mov
push
jbe
mov
std
jae
mov
addr16
pushf
cmpl
scas
dec
ljmp
out
lods
loope
add
jne
sub
push
lahf
cmp
push
cmpsl
les
mov
jbe
rcll
in
daa
cmp
mov
sbb
jae
push
and
mov
into
test
lret
clc
enter
roll
mov
add
lret
add
sbb
xor
das
xchg
inc
jae
sbb
cmp
sub
out
out
cmc
aas
jnp
aas
push
out
stos
call
mov
gs
ja
out
xchg
jbe
loope
sarl
adc
mov
push
jne
mov
mov
xlat
pop
inc
cmp
xchg
jp
addl
inc
inc
jb
stos
or
pop
adc
in
xchg
dec
jae
xchg
imul
jg
xor
jmp
push
mov
mov
or
mov
fmuls
mov
cmp
sub
lret
mov
scas
hlt
fidivrs
sub
cmp
popf
testb
int
push
jb
mov
mov
inc
pop
lds
cmp
test
nop
sub
and
mov
push
aam
and
xor
xor
notl
ret
jmp
adc
ds
mov
xchg
ja
inc
fimuls
xor
inc
inc
cli
int
mov
mov
popf
or
in
insl
fsubp
adc
and
jbe
imul
out
mov
ficoms
xlat
adc
aaa
ret
sub
and
jg
fistpll
pop
and
stos
mov
ret
xchg
imul
dec
push
add
out
xchg
int3
aas
sarb
mov
jmp
fstp
out
mov
pop
popa
jg
jl
inc
sbb
jmp
dec
cmp
mov
jg
jle
test
mov
push
sub
es
iret
test
imul
xor
lods
push
in
ror
test
mov
xchg
ss
outsb
insl
out
in
cmp
cltd
cmp
push
pcmpgtw
int
das
push
jmp
inc
imul
dec
push
je
inc
and
and
int3
jg
movsb
or
sbb
xchg
mov
cwtl
lock
rol
xor
pop
adc
or
popf
sbb
les
lret
adc
xchg
iret
pop
mov
cmp
adc
dec
and
icebp
enter
shrl
shlb
mov
xor
jb
add
in
add
jl
xchg
inc
lods
mov
jbe
fs
mov
push
sub
mov
arpl
push
fnstsw
jno
jmp
leave
incl
out
cmpsl
xcrypt-cfb
cmpsl
movsl
xor
shll
sub
outsl
mov
jp
inc
dec
daa
js
push
imul
call
fcomi
out
rcrb
and
lahf
sbb
outsb
and
in
adc
adc
popf
lods
test
dec
lret
sub
sub
imul
les
pushf
mov
jmp
ja
cmp
lea
sbb
loopne
lret
or
xor
leave
pop
data16
adc
xchg
sub
in
mov
add
cmp
push
pop
test
pop
movsl
push
mov
bound
ret
loopne
add
add
data16
sbb
sbb
pop
testb
add
and
sarb
scas
pop
ja
dec
shlb
int3
sbb
lods
xor
fprem1
int3
imul
outsb
aad
imul
or
push
pop
dec
stc
lahf
inc
shlb
inc
add
add
cmpsl
insb
push
push
int
movsb
xor
repz
push
push
xchg
das
cmp
movsb
pop
icebp
cmp
mov
lcall
mull
inc
xchg
xchg
adc
pop
js
sahf
pop
std
nop
cmpsl
and
in
lret
push
adc
imul
rcpps
scas
and
mov
jmp
insb
jo
mov
jb
enter
and
mov
push
pusha
pop
xchg
cld
mov
xor
aas
inc
mov
jl
sub
push
pop
out
arpl
cwtl
negl
and
rcr
sbb
xor
in
call
jae
xlat
and
shlb
jecxz
movsb
xor
dec
sub
fcmovnu
or
jp
lret
mov
xchg
mov
jnp
adc
outsl
repz
mov
cmp
sbbl
idivb
jge
ret
and
shl
mov
call
cmc
sub
test
mov
into
push
test
add
sti
sar
adc
js
fdivrs
test
fbstp
and
pop
push
jmp
call
dec
mov
dec
sub
insl
lods
push
scas
addr16
sbb
dec
stos
mov
push
test
scas
aad
cmpsl
xor
fstpl
inc
cmp
push
xor
sub
fwait
add
dec
sbb
nop
sub
push
mov
sbb
mov
lods
rol
push
xor
adc
rcr
push
push
mov
ds
icebp
xor
pop
xlat
push
cmpsb
mov
mov
xchg
cld
mov
jno
push
repz
leave
add
lds
pop
mov
out
insb
push
leave
xchg
loop
sbb
iret
in
dec
shll
sub
pop
mov
mov
in
hlt
sbb
stc
shll
push
ja
xor
fcmovnu
stc
sub
stos
or
jmp
imul
test
mov
icebp
sbb
inc
pop
inc
push
jnp
das
push
or
fldl
je
pop
mov
sti
es
mov
inc
mov
int3
or
stos
jg
jae
idivb
mov
fs
cmpsb
rcll
fiadds
adc
pop
decb
das
cs
mov
add
cmpsb
jl
adc
sbb
jl
xor
pop
dec
jbe
lcall
scas
or
lods
mov
fbld
dec
add
pop
and
fiadds
jne
clc
aad
out
adc
mov
and
inc
shll
rolb
rcll
outsl
add
lret
test
mov
out
ficoml
gs
pop
mov
mov
test
sub
inc
imul
jmp
or
mov
inc
movsb
scas
sub
cwtl
insl
out
sub
fistpll
jle
mov
mov
or
pop
stos
pushf
rolb
xchg
es
std
lret
aad
xchg
jo
aas
cmp
mov
jb
ret
cmp
jbe
jle
outsb
and
jmp
xor
dec
pop
arpl
mov
fdivr
sub
mov
inc
fmul
aad
mov
scas
pop
test
jne
dec
xchg
sar
dec
mov
mov
xchg
jmp
ret
testb
mov
adc
jne
and
sbb
into
jg
sbb
push
jmp
push
loopne
jmp
imul
rcrl
xor
jmp
push
mov
out
pop
sub
out
fwait
push
fstp
adc
sbb
rolb
ss
xchg
cmp
movsl
lret
mov
sbb
xchg
mov
inc
sbb
dec
jmp
push
adc
arpl
and
dec
out
sbb
in
adcb
xchg
or
dec
fwait
orb
dec
mov
mov
xor
insl
pop
ficoms
loopne
sbb
lods
pop
das
adc
mov
in
fadds
mov
jno
loopne
sbb
mov
push
enter
js
rorb
in
dec
mov
cmpsb
jmp
pusha
das
es
push
xor
sub
jne
xchg
repnz
jmp
mov
cmp
add
mov
mov
jp
fldln2
xor
roll
add
pop
push
pushf
mov
lret
cwtl
mov
sbb
xlat
out
loopne
outsl
xor
cli
jecxz
cmp
mov
push
mov
mov
fisubl
mov
les
add
adc
jns
push
adc
inc
lcall
adc
hlt
mov
cmp
data16
push
outsl
jmp
cmp
shl
xchg
popa
push
and
inc
adc
cmp
adc
das
adc
dec
jl
ja
sbb
sti
out
aaa
es
pop
mov
mov
int
xlat
or
sahf
xchg
das
testl
pop
sbb
jno
cmc
repnz
mov
inc
pop
add
sub
dec
out
mov
adc
add
aaa
and
popa
loopne
out
mov
std
test
ljmp
adc
jmp
xchg
inc
mov
xor
push
aaa
adc
mov
and
cmp
lock
and
insb
push
push
in
pop
das
xchg
push
push
cwtl
filds
in
in
inc
pop
push
xchg
test
mov
stos
sbb
cmp
out
nop
jbe
xor
aas
fistps
push
xor
sbb
or
arpl
jl
and
cmovg
test
dec
sub
cwtl
and
lds
mov
in
sbb
xchg
les
pushf
xor
and
push
in
and
cmpsb
inc
lds
shlb
cwtl
nop
insb
xchg
fidivrs
cwtl
xor
add
xor
clc
les
push
movsl
jmp
adc
outsb
int3
jg
fisubrs
mov
dec
hlt
mov
in
sarb
inc
test
mov
out
mov
cmp
jne
mov
stc
sub
add
dec
xlat
xor
nop
scas
or
sbb
ret
fisttpll
shlb
xlat
pop
ja
lds
pop
jp
sub
inc
adc
cltd
pop
pop
call
xor
push
cmp
jg
add
loope
or
mov
cmp
mov
int
lahf
xor
in
sub
aaa
cmp
mov
push
push
sbb
lock
test
daa
push
stc
mov
daa
cmpsb
jb
xor
jge
dec
mov
pop
imul
neg
jp
in
mov
push
lahf
inc
sbb
hlt
cltd
sahf
inc
shl
rol
cmp
add
ret
push
adc
adc
cmp
call
mov
ds
mov
lods
xchg
popa
pop
sub
jmp
and
dec
loop
or
loop
movsl
imul
jecxz
scas
mov
or
out
pop
inc
push
scas
mov
aam
jb
mov
sub
push
leave
xchg
jle
mov
jne
lods
lret
ret
std
mov
insb
dec
jo
xchg
in
cltd
add
aas
adc
xor
arpl
jecxz
add
mov
xchg
dec
dec
mov
dec
and
arpl
lahf
fdivp
or
std
jge
mov
lret
rorl
hlt
pop
lahf
mov
notl
fcomp
imul
sbb
fildll
stos
pop
pop
adc
inc
in
fwait
jbe
xchg
inc
inc
xchg
mov
fidivrl
inc
sahf
add
clc
fsts
repz
pop
loop
cmp
adc
mov
test
cmp
sti
lock
xchg
sbbb
push
adc
push
roll
or
mov
xchg
fs
in
sbb
and
lret
push
rolb
cld
pusha
lret
scas
fldt
mov
repnz
sbb
push
mov
lods
cld
div
out
enter
cs
push
test
cltd
lods
dec
lret
mov
data16
inc
jg
push
jl
popf
icebp
divl
fcomip
imul
jp
inc
add
dec
fistpl
out
mov
mov
out
cli
in
nop
mov
scas
iret
movsb
movsb
or
cwtl
mov
add
insl
lock
lock
pop
cs
inc
mov
shrl
dec
inc
outsb
sarl
or
iret
out
shrb
jne
test
adc
ds
cmp
push
sub
push
aam
mov
pop
mov
in
stos
or
xor
pushf
push
adcl
out
in
aaa
sbb
out
lahf
xor
fnstenv
xchg
iret
lcall
out
pop
xchg
shlb
lock
loop
cmp
jnp
add
mov
add
add
adc
mov
js
imul
xor
mov
adc
inc
loopne
jnp
pop
mov
popf
inc
das
test
xchg
mov
mov
and
dec
loopne
out
cmpsl
cmc
and
xor
cmpsl
data16
mov
or
lret
pop
and
fcmovb
jns
xchg
inc
dec
in
loopne
push
rolb
in
gs
add
inc
fisubrs
jge
std
jbe
pop
clc
es
cmp
lods
fldl2e
mov
mov
jmp
pop
leave
inc
testb
iret
dec
test
push
mov
jecxz
rolb
ds
out
xorl
bound
sbb
xchg
mov
dec
imul
dec
es
lahf
pop
pop
mov
inc
fwait
aam
je
cmpsb
addb
mov
sbb
jp
jp
test
cs
repnz
out
notb
ljmp
and
mov
cmp
and
ljmpw
std
rcrl
daa
imul
out
into
add
lods
xor
dec
fcompl
xchg
mov
ljmp
call
and
push
and
xchg
insl
mov
jge
daa
mov
jge
mov
pop
jle
xlat
loope
cmp
inc
outsl
pop
xor
fadds
mov
adc
pop
mov
jnp
retw
shlb
mov
sub
add
xchg
stos
movsb
jge
ja
pop
adc
mov
pop
movsl
cltd
shlb
aad
cmc
cwtl
inc
cmp
mov
psrlq
add
pop
mov
jno
lds
inc
pop
mov
mov
sar
aam
ret
pop
cmp
add
bound
cwtl
jge
and
sar
test
push
xchg
push
and
jne
adc
daa
orb
mov
fisubl
sub
scas
ljmp
aaa
jb
pusha
xor
dec
dec
adc
fisubrl
dec
cmp
lret
push
cmpl
and
js
cmpsl
pop
mov
add
cmp
xchg
shlb
cld
shrb
test
mov
frstor
pop
insb
leave
inc
stos
push
sbb
test
dec
int3
in
shll
jne
iret
mov
fmulp
aam
xchg
add
or
std
icebp
jne
cmp
sahf
cwtl
mov
and
inc
mov
push
or
in
hlt
aam
add
sbb
es
pop
xchg
cmpsl
je
sarl
pusha
stos
mov
into
add
dec
loope
dec
pop
inc
out
adc
mov
or
mov
push
cli
add
iret
outsb
jno
jle
in
and
pop
es
dec
ljmp
xchg
sub
jae
out
dec
jnp
mov
pop
imul
sbbb
sbb
adc
das
jg
ret
cwtl
mov
cwtl
dec
xchg
dec
insl
popf
and
bound
enter
pushf
das
push
inc
ret
cmp
cmp
cli
mov
jmp
pop
adc
test
stos
fdecstp
mov
lods
nop
xchg
adc
adc
mov
inc
int3
adc
xorl
in
outsb
push
mov
imul
loop
aam
xor
inc
add
inc
sub
adc
rorl
and
cmp
cmc
outsb
lock
and
pop
xor
scas
dec
mov
inc
jmp
mov
add
test
lret
aas
stc
shl
push
movsb
pop
arpl
cli
sub
inc
loope
sbb
push
dec
mov
or
pop
imul
ljmp
jnp
push
popa
imul
jne
mov
int
jl
out
push
stos
jnp
or
inc
sbb
lods
daa
cltd
mov
icebp
pop
sub
pop
cs
xchg
jnp
xor
and
or
rorl
lret
sub
xor
dec
in
sbb
sbb
inc
int3
loop
dec
and
push
push
push
mov
stos
movlps
stc
add
xchg
cld
mov
out
ss
mov
insb
mov
aam
shlb
and
mov
add
xchg
fmull
clc
aad
cmp
sarl
nop
xor
pop
test
push
gs
mov
jne
sahf
loop
cld
mov
call
add
push
sub
jmp
or
int3
inc
mov
mov
push
outsl
std
mov
pushf
movsb
arpl
pop
or
adc
cmp
stos
iret
cmc
adc
lahf
push
inc
mov
subl
cmp
daa
add
fisubl
and
push
sar
xchg
inc
mov
sub
les
cmpsb
or
push
mov
mov
xchg
xor
pop
dec
mov
loopne
movsb
shl
pop
pop
loop
or
mov
out
inc
ret
cmpsb
cmp
mov
js
arpl
out
and
mov
jne
fildl
std
pop
pop
das
xchg
sahf
cmpsb
int
mov
daa
stos
int3
mov
in
mov
push
push
pop
popa
pop
sbb
rcrb
adc
jecxz
test
call
xor
cltd
and
push
aam
pop
add
mov
bound
push
pushf
push
repz
imulb
mov
lods
xchg
mov
mov
pop
shlb
icebp
movsl
xchg
xchg
cmpb
shrb
fwait
sar
stos
fcmovnbe
jmp
lds
pop
adc
jl
lods
and
mov
add
cmpsb
inc
jecxz
xchg
in
pop
por
popa
inc
push
jmp
add
fs
pop
ret
in
fldt
idivl
sahf
inc
pop
sub
cwtl
subl
pop
stc
xor
jmp
call
or
js
stos
xchg
icebp
es
mov
xchg
push
in
in
out
mov
mov
cmp
cmpsl
cmpsl
push
cltd
xorl
rcrb
adc
out
or
push
mov
and
mov
aaa
mov
add
dec
push
imul
lea
mov
cmp
in
pop
and
into
or
std
lods
call
xor
dec
xchg
fcompl
into
xchg
mov
xor
fwait
mov
sub
adc
je
and
lea
and
xchg
sub
scas
inc
jmp
mov
test
repnz
into
rcll
mov
cmpsl
stc
or
cmp
jb
lods
test
mov
add
lret
in
ds
push
leave
es
mov
inc
add
in
jnp
hlt
xor
pop
test
mov
imul
sub
cmp
jbe
push
ljmp
sub
mov
and
sbb
cmp
les
dec
mov
mov
cltd
sbb
loopne
call
and
daa
cmp
shll
dec
adc
xchg
lods
repz
xchg
sub
pop
icebp
push
andb
adc
outsb
in
pop
fldcw
fsubl
mov
push
mov
xor
jae
test
or
mov
in
cmp
inc
jnp
roll
jae
outsl
into
outsb
daa
stc
shrb
inc
sub
cmpsl
ljmp
cli
inc
lea
sub
cmp
cltd
adc
andb
push
ss
mov
leave
xchg
pop
jl
fs
dec
xor
rcrl
inc
lods
bound
push
dec
inc
jmp
fimull
pop
xlat
jo
int
pop
cltd
pusha
sbb
cmp
push
xor
cmp
es
or
add
add
pusha
imul
mov
xchg
xchg
mov
inc
mov
pop
mov
adc
ljmp
pop
and
lds
or
jl
mov
or
dec
adc
lahf
das
or
sub
jae
xor
or
push
pop
ret
iret
push
xor
outsb
pushf
fadd
cmp
bsr
adc
ret
mov
dec
sbb
xor
testl
arpl
ja
repnz
xor
rcrb
push
in
daa
scas
inc
pop
aam
dec
mov
jmp
jns
xchg
mov
sub
mov
dec
pop
jg
push
arpl
std
push
xor
xorb
loopne
in
xchg
cmp
movsb
dec
push
rcrl
std
stos
repnz
cs
ss
lcall
in
push
dec
push
ret
cwtl
sub
mov
pop
popl
add
je
push
or
dec
push
sets
mov
test
insl
sahf
xchg
add
pop
adc
push
dec
lock
pop
aas
or
test
fistps
outsb
or
mov
mov
enter
jl
jp
xchg
aam
lret
xor
mov
mov
test
ret
sub
orl
inc
pushf
stc
outsb
test
xor
cmp
inc
idivl
or
and
nop
iret
sub
arpl
inc
jbe
xor
sti
or
leave
adcl
insl
test
es
xchg
loopne
fwait
popa
int
adcl
push
mov
push
jae
push
stos
push
aaa
mov
jge
xor
inc
je
in
cmp
es
xor
dec
stc
int3
movsb
aaa
andl
fildll
sub
lds
imul
sbb
cmpsb
out
push
mov
daa
mov
aas
or
pop
xchg
xor
lods
xor
pop
daa
pop
mov
inc
hlt
in
and
inc
idiv
scas
daa
aam
inc
in
xchg
xchg
xchg
hlt
inc
jo
es
or
jno
iret
cmp
scas
push
mov
mov
xchg
mov
jnp
mov
sub
mov
daa
adc
pop
push
movsb
push
mov
lea
int3
mov
cmp
std
cmp
push
lahf
mov
xor
add
xor
add
pop
outsl
or
mov
inc
cmp
adc
stos
adc
call
jmp
imul
rolb
insl
xchg
adc
push
int
xor
inc
aam
mov
sbb
mov
sub
cmp
pop
ja
or
adc
push
js
push
fmuls
divb
mov
shll
xchg
imul
fwait
push
inc
bound
or
xchg
enter
xor
cwtl
fidivl
es
cmp
lret
jo
cld
lods
cs
test
je
push
clc
sahf
lods
enter
or
fsubr
mov
mov
jecxz
xchg
movsb
in
push
dec
and
sub
add
mov
xchg
dec
test
or
xor
cmp
insl
xor
fiadds
xchg
push
jp
inc
xchg
or
arpl
xlat
lret
dec
andl
jg
jg
or
cwtl
jp
mov
shlb
lods
addr16
push
enter
jecxz
mov
mov
out
cmova
lahf
rcrl
sbb
cmpl
inc
and
and
mov
stos
or
mov
sar
lea
icebp
in
je
ret
add
lods
mov
mov
mov
cmp
cmp
pop
or
push
pop
scas
fsubrs
jle
loope
popa
sub
pop
pop
jne
xor
xchg
jle
sbb
divb
sub
lret
pusha
pusha
jb
test
push
cmpsl
inc
pop
mov
mov
mov
dec
push
xchg
fst
arpl
dec
mov
push
inc
test
gs
test
push
outsb
cli
jo
movsl
pop
add
sub
mov
jo
dec
sbb
notb
ret
jo
out
mov
mov
popa
fs
jg
xor
mov
xchg
or
fpatan
aaa
imul
sbb
mov
jmp
sub
push
outsl
fwait
inc
xor
notb
es
and
imul
clc
ret
dec
mulb
pop
aaa
lret
and
pop
push
or
mov
xor
enter
inc
cmpsb
arpl
cmp
add
cmp
pop
mov
cld
mov
cli
loope
sarl
inc
mov
ljmp
cmp
push
xchg
fwait
mov
ret
mov
jb
pop
gs
inc
es
and
inc
ljmp
or
pop
cmpb
clc
fbstp
and
repz
std
stos
inc
add
out
pop
mov
call
movsb
out
insb
sti
mov
jo
jns
mov
sbb
les
in
shrl
movsl
pushf
insl
mov
add
push
divb
push
imul
ljmp
scas
hlt
imul
aad
add
fbld
insl
mov
or
push
sbb
loope
pop
ret
icebp
mov
jne
loope
inc
lahf
in
adc
mov
movsb
mov
dec
cmc
mov
cmp
popf
adc
jns
xor
add
mov
sahf
mov
mov
movsl
test
test
inc
and
sub
lods
push
mov
fcmovne
xor
fdiv
mov
jnp
leave
and
out
movsl
pop
xchg
les
dec
pop
pop
jmp
or
shll
lahf
ljmp
movsl
xchg
test
add
gs
int
jecxz
jl
jl
sub
pop
test
inc
bound
notb
inc
dec
repz
mov
movsb
jmp
js
sysexit
stos
test
and
push
inc
sti
jg
in
rcll
inc
mov
cmp
lret
gs
dec
aaa
out
mov
and
fcmovu
lock
rcll
mov
sbb
jnp
cli
jp
mov
sbb
imul
aaa
dec
es
jp
inc
and
in
sbb
dec
mov
hlt
lea
pop
or
out
adc
out
arpl
int
je
ja
ss
mov
out
test
ret
push
movsb
xchg
and
mov
inc
inc
insb
outsl
dec
mov
es
ja
pusha
push
outsb
dec
test
inc
cs
lret
pushf
rolb
adc
cmpsl
mov
cmp
int
mov
fisubl
je
xchg
push
loope
cmp
inc
lea
stos
mov
shr
xchg
in
in
fnstcw
or
popa
popf
pop
pop
mov
in
xchg
pop
fstps
test
mov
icebp
adc
add
mov
or
pop
out
in
pusha
fstpl
imul
fiadds
loopne
das
loopne
xchg
add
xchg
or
jmp
inc
pushf
es
fadds
cmpsb
out
daa
xchg
lret
pop
mov
sub
test
adc
mov
inc
fcomps
mov
test
shll
dec
andb
cwtl
gs
scas
scas
lret
addb
inc
sub
push
ds
fcomps
js
lock
in
loopne
cmp
xlat
adcl
in
push
mov
aam
cltd
jle
cmc
in
pop
stc
repnz
push
pop
and
push
fwait
ss
inc
mov
mov
cmp
sub
mov
jnp
mov
pop
imul
jnp
pop
test
fnsave
addl
ja
inc
mov
xor
cmp
push
mov
es
xchg
andb
jns
lock
call
imul
test
mov
sbb
or
insl
and
push
lcall
cmp
pop
jl
aaa
jne
enter
imul
mov
cli
dec
call
or
push
sbb
or
mov
ljmp
jo
leave
push
lea
or
inc
sti
mov
repz
cwtl
jge
mov
sarb
stc
cmp
pop
loop
sbb
in
push
dec
xor
or
inc
mov
push
inc
lods
rorb
mov
add
test
testb
adc
mov
xchg
pop
fisubl
leave
imul
bswap
ss
adc
cmp
jl
and
sbb
cmpsl
arpl
stos
in
or
stos
cmpsb
movb
and
shl
or
adc
call
jge
rorl
xor
or
pop
les
into
js
shl
shlb
stos
push
pushf
and
fwait
cmc
je,pt
sub
iret
mov
sbbl
and
outsl
lods
and
add
or
adc
mov
add
lfs
xchg
jne
out
push
into
aad
push
jns
adc
and
je
xchg
sbb
lock
mov
or
in
mov
cmpsb
push
xchg
jmp
cmp
pop
jle
dec
xchg
mov
push
rcr
and
sbb
test
lods
std
mov
adc
in
pop
xchg
mov
mov
notl
sbb
fisttps
xlat
jnp
fisubrs
mov
mov
loop
dec
lret
sub
dec
mov
sbb
pushf
mov
cmovg
lds
sub
and
loop
lret
aad
mov
idiv
mov
vzeroall
fwait
js
pop
loopne
push
adc
stos
call
and
aam
inc
push
sbb
rcrl
mov
call
lds
adc
mov
ffreep
sbb
lds
inc
test
cmp
sarl
out
aas
repz
ret
pop
or
cltd
pop
dec
in
adcb
jmp
fsubl
push
and
mov
push
fcoml
jp
jb
and
adc
lods
pop
xchg
or
loopne
pause
xchg
lret
imul
rcr
ja
rorl
fwait
xor
jmp
mov
ljmp
xlat
sub
jae
leave
lret
or
movsl
jae
outsl
inc
inc
inc
sbb
pop
push
add
xor
fcomps
push
inc
push
ret
pop
into
xchg
inc
inc
xor
ds
cmp
jbe
rcll
cmp
or
shrb
rclb
jmp
xor
cwtl
xchg
hlt
pop
sbb
lcall
and
pop
mov
stos
or
outsb
pop
addl
adc
cmp
sbb
mov
xor
fsubrs
mov
test
xchg
jno
add
xchg
ret
nop
aaa
jbe
sub
push
xchg
stos
ljmp
lahf
add
or
xchg
stos
movsl
pop
push
sub
push
xchg
imul
fcomps
mov
lcall
jp
jnp
xchg
in
sbb
mov
loop
movsl
sbb
sbb
gs
sbb
dec
mov
cmp
aad
mov
inc
adc
pop
add
dec
mov
iret
mov
mov
std
jmp
jae
xor
pop
sbb
enter
sahf
stc
call
push
pop
pop
sub
mov
aad
lahf
andb
in
cmp
out
fisubs
and
insb
stc
dec
xchg
cmp
adc
clc
cld
cmpl
leave
test
sbb
scas
and
mulb
out
cli
jecxz
outsl
adc
push
push
cwtl
loopne
or
loope
or
fimull
lock
scas
lahf
sbb
outsl
les
and
jnp
xchg
inc
push
in
dec
incb
movsl
push
jnp
inc
outsb
scas
jge,pn
std
mov
fucomip
mov
inc
lods
scas
mov
pop
mov
push
push
outsb
jbe
mov
ljmp
pushf
jo
fsts
mov
lods
dec
out
or
ret
mov
mov
repnz
sbb
cmp
cli
inc
jb
cmpsl
movsb
imul
sub
mulb
dec
cwtl
or
add
mov
jl
aas
je
add
add
inc
imul
xor
insb
aam
adc
push
fcoms
pop
test
xchg
dec
push
fnstcw
ret
lods
xchg
lods
cmp
inc
scas
fildl
negb
out
fcompl
and
cs
push
and
and
nop
xchg
push
aam
mov
mov
outsb
sbb
sub
add
mov
cmc
fcomp
push
inc
inc
xor
stc
shl
mov
mov
jne
or
mov
int
mov
jg
xor
movsl
lret
cmp
aad
test
adc
xor
cltd
mov
xchg
cld
cs
xchg
in
sbb
das
outsl
test
jns
shlb
mov
aas
push
sarl
ja
gs
push
adc
mov
xchg
mov
mov
int3
popa
sub
out
clc
push
mov
add
inc
cmpl
sarl
jl
sti
push
js
add
cmp
mov
pop
mov
mov
sub
cmpb
cld
jae
mov
daa
stos
adc
cmp
fnstenv
inc
mov
jae
ja
cmpsl
mov
mov
adc
cmpsl
mov
mov
push
cmc
jmp
pop
xor
lret
fldlg2
and
or
jns
or
test
cltd
xchg
hlt
popa
and
sbb
dec
jle
cmp
pop
sbb
imul
test
adc
fists
iret
xor
and
xor
sti
stos
push
repnz
push
fldt
fsubrl
sub
js
out
es
xchg
mov
test
and
push
push
mov
das
jp
pop
fistps
sbb
iret
cwtl
sbb
test
pop
mov
inc
cs
pop
data16
add
lahf
sbb
jnp
outsl
inc
xor
fwait
mov
cmp
mov
incl
sbb
rol
or
jae
insb
xor
inc
pop
mov
adc
sahf
mov
add
sub
push
mov
scas
adc
sbb
cld
cmp
cmp
sub
mov
popf
nop
dec
and
mov
adc
sahf
dec
out
pop
ja
ss
push
xchg
mov
aas
adc
dec
mov
out
jecxz
mov
repnz
xchg
bound
adc
adc
pop
sub
ss
icebp
aas
sub
push
jl
insl
cs
add
scas
ret
fstpl
jns
xor
adc
ret
int
es
icebp
adc
mov
aad
cmp
ja
pop
dec
push
aam
xor
dec
jmp
repnz
rcrb
test
push
add
fsubs
inc
and
mov
xorl
ljmp
inc
imul
sbb
inc
dec
jecxz
mov
jne
fdivrs
push
sub
into
sbb
and
mov
xchg
jae
mov
mov
push
into
inc
leave
mov
mov
cwtl
push
mov
inc
xlat
ret
fistps
int
fsts
xlat
push
aas
dec
jg
dec
test
pop
push
mov
mov
gs
pusha
insb
rclb
imul
mov
jp
in
mov
push
dec
and
xchg
push
fdivs
and
in
data16
pop
movsb
ja
mov
xlat
ficoml
add
sub
lahf
mov
xchg
stos
dec
in
leave
mov
sub
mov
test
das
push
mov
cs
stos
jge
int3
mov
or
arpl
xor
fneni(8087
imul
jno
cltd
popa
jcxz
lock
xchg
pop
push
jle
stos
in
das
loop
inc
jbe
dec
pop
repnz
lods
add
mov
test
dec
fwait
fs
lcall
addb
or
je
mov
mov
test
fstl
push
outsl
adc
data16
adc
imul
xchg
mov
mov
xor
lcall
adc
lret
push
or
jae
cld
imul
out
push
ja
out
stc
cltd
sbb
insb
xor
and
push
mov
mov
std
cld
push
lcall
ss
pop
iret
stos
adc
cld
test
lea
cli
push
mov
mov
test
inc
xorl
pushf
cli
sbb
or
stos
call
jae
push
xor
jl
fwait
test
mov
and
fdivs
mov
daa
jo
nop
dec
lret
iret
ja
add
icebp
xchg
insl
and
jg
push
aam
jns
inc
aam
aas
cwtl
pop
mov
cs
jecxz
inc
rorb
aam
cmp
fisubrs
and
cmp
cmp
mov
or
mov
outsb
aam
xor
sbb
pop
add
scas
js
imul
popf
or
mov
cltd
lcall
mov
jp
mov
popf
xchg
iret
xor
jle
cmp
mov
lock
xchg
xchg
jae
push
xchg
movsb
dec
inc
sti
enter
icebp
inc
cld
jno
adc
lea
pusha
cs
adc
xlat
cltd
cmp
rolb
into
out
cmp
mov
xor
inc
sti
cmp
xor
cmpsb
inc
inc
shrb
or
cmp
std
or
mov
fnsave
jl
lock
pushf
andb
push
mov
dec
mov
cmpb
pushf
shl
push
rcrl
and
aam
inc
cmp
xchg
popw
adc
mov
push
imul
and
mov
push
inc
scas
lahf
in
jno
adc
jno
shl
xlat
xchg
divl
ror
mov
int3
jo
xor
pop
sub
xchg
add
daa
sbb
and
out
add
nop
xchg
imul
sub
mov
loop
xor
arpl
mov
pushf
pop
mov
imul
lret
sub
fcomip
data16
mov
mov
fisttpl
jmp
enter
cmp
pushf
mov
pop
js
dec
mov
cmp
sti
lret
cmp
fldt
push
fwait
into
popf
jnp
push
push
and
das
xchg
dec
mov
mov
jns
mov
xchg
aam
jbe
or
dec
cmpsb
add
mov
addr16
movmskps
push
out
adc
inc
push
ljmpw
imul
hlt
ret
mov
and
icebp
jmp
xorl
push
ficomps
scas
sub
ljmp
ja
mov
jbe
pop
mov
pop
hlt
cltd
push
stos
shlb
inc
jnp
and
insl
adc
out
clc
sbb
data16
add
out
icebp
dec
add
add
iret
cmpsb
ror
jl
dec
cwtl
xor
xlat
push
cltd
movsb
std
xor
push
pop
adc
xor
fwait
pushf
mov
sarb
cmp
push
sbb
sub
sbb
shrb
adc
std
adc
inc
ss
js
aaa
dec
sbb
adc
jo
je
xchg
insl
jge
inc
in
lods
jns
push
and
mov
xchg
mov
inc
sarb
nop
mov
xchg
gs
mov
or
fisubrs
fcoms
test
or
test
fcoml
and
sbb
and
ret
test
in
and
mov
xchg
pop
and
push
and
mov
xchg
mov
xor
int
fcmovne
adcl
xor
in
cs
hlt
loope
push
addr16
or
or
xchg
ja
inc
loope
and
jp
add
lods
jp
push
sbb
adc
sbb
cmp
inc
cmp
pop
test
mov
sbb
pop
aam
sbb
xchg
out
or
push
dec
sbb
addb
imul
cmpsl
or
sub
fst
rorb
pop
movsb
shlb
pop
inc
jns
dec
cmpsb
test
inc
inc
repnz
jp
fadd
lods
sub
adc
in
push
in
cmp
mov
arpl
push
sbb
sbb
jne
test
jo
mov
mov
fiaddl
lcall
ret
cmp
ror
stos
jo
push
push
adc
sbb
cs
and
daa
imul
sub
adc
xchg
mov
and
out
pop
clc
push
stc
fisttpll
pop
lock
jmp
sbb
pop
nop
lods
mov
mov
stos
movsl
outsl
push
add
xor
or
int3
cwtl
adc
sahf
mov
call
mov
mov
pop
fisttpl
call
cmp
aam
cs
dec
sub
pop
loopne
addr16
insb
int
xor
jle
push
xchg
xchg
ds
in
cld
lret
ja
ds
add
mov
cld
or
mov
sub
and
mov
sbb
dec
fwait
push
int3
fsubs
outsl
adc
sarb
jno
dec
dec
stc
je
sub
lret
mov
stos
sbb
bound
sbb
jb
sub
fwait
mov
jge
test
inc
les
inc
lret
inc
jle
loop
xor
pop
fwait
dec
adc
jl
sarl
mov
push
leave
sti
sub
jno
mov
jl
fcmovnb
cli
sbb
mov
out
orl
insb
jle
sub
push
insb
push
bound
mov
push
mov
in
nop
lret
jb
jmp
push
outsl
and
sub
lock
pop
aam
lret
lret
ret
cmp
inc
sub
ret
stos
mov
sub
loopne
push
jne
inc
xchg
mov
testl
xor
adc
aad
pop
test
icebp
xchg
notl
repnz
int
adc
sbb
add
push
jne
xchg
cld
pop
cmp
stc
cwtl
jl
mov
mov
inc
repz
xchg
scas
aad
test
inc
xchg
sbb
adc
sbb
in
cmp
sbb
sub
push
cwtl
lahf
in
pop
cmc
aam
xlat
jmp
mov
xchg
arpl
dec
adcb
or
jno
cltd
or
iret
cwtl
cmpsb
mov
pop
adc
aam
xor
rorl
jo
mov
add
inc
roll
mov
jl
xor
pusha
xor
pop
add
int3
mov
pop
push
xchg
pop
pushf
pop
sub
sbb
js
mov
dec
jns
inc
mov
mov
cmp
ffree
mov
mov
test
das
inc
stc
cmp
sub
push
add
mov
dec
mov
mov
dec
xchg
pop
fcoml
xchg
test
ljmp
lea
xor
mov
dec
sti
push
mov
fwait
mov
cld
ds
into
in
dec
pop
jmp
pusha
iret
cld
cmp
test
push
mov
push
loopne
mov
into
sti
std
hlt
dec
add
ficoml
add
mov
mov
repnz
xor
ja
add
mov
fwait
pop
push
cmpsl
dec
fwait
mov
popf
stos
xchg
popf
movsb
int
jle
mov
mov
add
das
scas
mov
loope
sub
xchg
mov
cmp
push
mov
rcll
mov
sahf
jmp
fnsave
xchg
xor
jmp
fwait
mov
bound
out
bound
jle
push
pop
jbe
mov
mov
or
std
mov
jge
stos
cmp
jns
pop
xchg
inc
xchg
pop
pop
ljmp
into
lods
mov
pop
cs
xchg
int3
imul
jne
mov
adc
jg
push
in
imul
outsb
repnz
hlt
xchg
dec
push
and
pop
lods
jp
out
int
stos
test
or
lea
in
cs
es
push
jge
pop
jb
xchg
dec
fstpl
sbb
bound
roll
orl
cmpsl
pushf
outsb
sti
lds
adc
add
pushl
fs
mov
mov
mov
loopne
pusha
mov
sub
pop
fsubrl
push
xchg
mov
fsubrs
jbe
adc
pop
mov
cmp
pop
add
adc
mov
jmp
xchg
pop
sub
jecxz,pt
mov
jle
repz
pop
mov
lea
sbb
hlt
ja
cmp
sti
add
sbb
push
scas
clc
call
dec
inc
mov
cmp
sub
loope
cmp
jbe
repz
sahf
push
mov
aas
jno
insl
push
fcompl
xor
ret
pusha
ljmp
sarb
mov
ljmp
inc
in
ja
lahf
xchg
ret
or
jge
dec
dec
mov
stos
int3
mov
das
xor
pushf
sahf
mov
sbb
aaa
imul
sbb
je
mov
add
xor
das
sub
xorl
lret
mov
xor
sbb
out
test
test
xchg
icebp
notb
es
and
in
lods
sub
in
mov
and
dec
jo
lret
mov
adcl
push
mov
cmp
fadds
jno
movsb
pop
cli
les
xchg
add
cmp
jge
cmpsl
push
push
repnz
mov
lret
mov
sti
cli
in
or
in
cwtl
gs
mov
xor
jbe
cmp
rclb
xor
stos
les
sbb
or
hlt
mov
rol
jbe
flds
mov
popa
sub
dec
lds
clc
jecxz
xor
jmp
cmp
pop
push
push
out
cmp
sbb
or
pop
js
cmpl
mov
popa
sub
lret
ds
addr16
sub
mov
xor
testb
add
pop
cmc
mov
fs
movsb
lea
ja
orb
xchg
les
cmc
pop
pop
mov
pusha
jmp
test
pop
fcom
adc
movsl
idiv
add
ja
or
sbb
imul
test
mov
dec
pop
decb
stc
je
xor
or
std
mov
sbb
mov
stos
pop
mov
in
adc
mov
les
and
cmovp
cmpsl
mov
jmp
sbb
cmp
ljmp
mov
fsubl
or
push
inc
pop
push
lret
and
arpl
mov
popf
cli
fcom
add
lods
rcr
mov
lcall
icebp
and
or
arpl
mov
aas
adc
mov
mov
data16
cli
mov
or
lods
xchg
sbbl
adc
aad
lods
or
and
xchg
hlt
fs
sbb
sti
sahf
sub
sub
pop
inc
ficoml
test
xor
shl
lcall
sub
adc
pop
mov
shlb
adc
add
shrb
gs
rorb
rclb
ret
sbb
test
rcr
xchg
and
xchg
jnp
jmp
or
pop
les
movsb
mov
mov
and
int
cmp
fcmove
push
sahf
jmp
add
leave
lock
inc
lods
push
sbb
subl
jb
dec
insb
lret
in
jecxz
outsl
sbb
add
int
mov
and
sbb
mov
add
fldenv
hlt
fsts
jp
rorl
and
pop
dec
adc
js
inc
inc
cmp
out
fstl
adc
lcall
out
jmp
sbb
mov
xor
je
js
pop
xor
pusha
ret
pop
adc
enter
prefetch
popa
loopne
pop
lret
fdivl
stos
scas
cmp
pop
jecxz
out
or
movsb
jbe
pop
stc
loope
in
xor
stos
leave
outsb
mov
mov
xchg
mov
dec
mov
dec
cs
stos
dec
push
cmp
pop
mov
xor
mov
stos
pop
ja
adc
lahf
ja
rcrb
xor
jne
mov
inc
or
sti
aam
in
dec
xor
cmpsb
aaa
dec
mov
or
mov
jb
mov
iret
insl
lret
into
dec
fsubrl
sbb
mov
cmovae
pop
xor
scas
insb
pop
mov
subb
hlt
sub
int3
adc
add
xchg
sbb
insl
mov
push
hlt
pop
out
negb
call
adc
iret
aad
stos
out
dec
nop
lock
xchg
stos
or
mov
fs
and
jbe
test
loope
addr16
lret
lods
mov
sub
sbb
xlat
fsubrs
loop
sbb
mov
int
lods
popf
pushl
adc
mov
mov
dec
pop
lea
xchg
mov
jmp
sahf
nop
gs
pop
into
mov
mov
test
lods
pusha
xchg
scas
jle
cltd
gs
xchg
rclb
xchg
xchg
je
push
push
lods
push
mov
fnstenv
inc
add
enter
jb
jge
dec
sti
inc
imull
movsb
in
bound
mov
out
xchg
mov
adc
outsl
push
mov
lahf
inc
in
pop
shr
rclb
out
mov
daa
lds
push
loopne
icebp
cmp
fistl
andl
les
sbb
ret
nop
aaa
push
mov
stos
push
mov
outsb
fistpl
pop
lods
sbb
into
xchg
xchg
sub
pop
shrl
stos
jo
imul
std
mov
popf
xchg
aam
scas
dec
xchg
add
bound
sub
xchg
sub
mov
xor
das
dec
pusha
mov
gs
xchg
mov
test
fmuls
daa
push
mov
mov
ss
enter
add
pop
mov
test
sbb
and
xchg
sti
jnp
inc
mov
inc
xor
scas
fs
fsub
or
adc
xor
loopne
or
cld
pop
rorb
sbb
ret
pop
adc
sub
and
inc
jbe
clc
or
adc
loopne
dec
add
jg
push
ljmp
mov
push
repnz
iret
imul
repz
ret
in
scas
mov
in
test
test
andl
test
cmpsb
and
push
rol
xchg
cmp
shlb
mov
or
notb
daa
dec
pop
mov
mov
jae
lret
adc
inc
cwtl
sbbl
dec
in
sbb
icebp
xchg
pop
int
leave
jl
mov
or
out
gs
mov
int
sbb
js
xlat
xlat
addr16
call
jne
or
in
fsub
sbb
daa
scas
imul
bound
outsb
lods
decb
inc
bound
test
cmpb
js
lods
add
adc
jge
and
mov
pavgb
jg
stos
fsubl
push
sub
cli
push
xorl
loop
lods
lock
jl
jge
pop
mov
jmp
and
ds
add
xchg
xlat
ficomps
dec
bound
inc
aad
add
out
bnd
lea
mov
dec
insb
jbe
add
push
jle
adcb
dec
mov
arpl
mov
xor
clc
or
or
es
inc
les
imul
jmp
mov
pop
and
leave
sub
fstps
rorl
lcall
data16
and
inc
jo
fimuls
shl
jae
and
fwait
jnp
pop
jb
cmpsl
into
test
enter
add
das
jno
iret
mov
mov
jae
push
rcll
pop
shlb
mov
or
cltd
mov
mov
test
mov
xchg
mov
ficomps
mov
pop
push
ljmp
stc
jge
js
adc
fisttpll
pushf
jnp
adc
sub
xchg
fwait
popf
gs
sti
or
mov
xlat
fdivs
mov
es
dec
cltd
cwtl
dec
fwait
pop
mov
addr16
outsl
jno
repz
cmp
cltd
cmp
sbb
mov
sbb
stos
and
fmuls
fidivs
inc
repnz
test
mov
xchg
popa
add
lea
push
pop
push
cmc
xchg
mov
mov
inc
dec
mov
rclb
cli
push
and
and
sarb
cmp
addr16
inc
arpl
pop
pop
hlt
mov
mov
int
lret
xchg
mov
push
popf
ja
mov
outsl
cmp
adc
xor
std
xchg
in
cmp
jno
jbe
inc
push
inc
data16
negl
push
sbb
add
mov
mov
in
add
es
inc
adc
push
cmpsl
inc
sbb
scas
dec
cmc
push
cmp
jbe
sbb
add
inc
outsb
mov
mov
add
insb
shrl
push
mov
rorb
in
das
adc
fnsave
xchg
out
mov
cmp
gs
loope
mov
das
stc
sbb
and
in
and
div
int
sbb
lods
push
ret
ds
adc
clc
aas
mov
cmpsb
jl
loopne
lahf
in
fistpl
loope
inc
int3
jbe
lds
lods
js
sbb
xor
fwait
push
das
shll
aas
mov
das
sub
mov
xchg
xchg
vaddsd
cmc
rcr
stos
and
or
jmp
sbb
xor
rcr
adc
jno
jnp,pt
adc
cld
std
sti
jp
cwtl
icebp
push
ret
in
cwtl
jp
inc
adc
lea
std
sbb
inc
jge
pop
insb
cld
xchg
imul
lcall
stos
ds
jp,pt
inc
scas
push
inc
insb
jl
test
xor
enter
fcmovb
and
les
jecxz
jae
mov
jnp
pusha
aad
fstl
cmp
hlt
push
aaa
nop
jns
sbb
cmp
and
movsb
adc
xor
push
inc
frstor
mov
and
xor
ljmp
push
push
dec
add
inc
mov
jno
cmp
incl
push
mov
fiadds
mov
fsubrl
inc
imul
pop
fisubl
mov
lods
loope
lds
in
inc
push
dec
shlb
jnp
mov
movsb
jg
sbbl
inc
jnp
cmp
sub
pop
roll
xchg
leave
adc
cmp
hlt
sbb
mov
les
and
jae
aad
call
pop
popl
push
out
xlat
fs
mov
and
inc
rolb
imul
dec
cwtl
add
push
mov
pop
ror
mov
push
test
dec
ss
adc
jb
push
pop
pop
mov
aad
mov
je
loop
stos
popf
scas
fucomp
or
repz
pop
cli
add
dec
jg
pushf
xchg
xchg
jae,pn
lock
push
test
or
in
mov
js
pop
sahf
leave
aas
lret
push
call
or
imul
scas
fcmovnb
mov
imul
mov
add
or
pushf
inc
dec
sbb
cs
lea
pop
subb
mov
fbstp
pop
das
dec
push
adc
aas
jb
mov
dec
mov
lcall
mov
outsl
pop
testb
fwait
aam
lcall
jne
cli
inc
xchg
test
sbb
dec
xor
fwait
dec
insl
inc
add
daa
sti
enter
jne
lock
mov
inc
movb
pushf
push
push
bnd
cmp
js
out
test
and
inc
fcoms
cmp
xchg
sub
sahf
jno
jb
aad
mov
lea
stc
mov
jge
xchg
lret
mov
adc
shlb
aad
ja
mov
mov
push
sbbl
xchg
dec
mov
pminsw
adc
push
jns
mov
pusha
lahf
cmpsb
push
ret
push
or
in
dec
jge
mov
jae
rcl
mov
adc
mov
enter
mov
dec
jp
cli
inc
arpl
fs
lret
mov
cmpsl
mov
mov
jnp
jmp
xor
aaa
aas
lahf
jmp
pop
orl
xor
rcrl
xchg
mov
iret
mov
test
icebp
xchg
dec
ret
call
mov
popf
addl
test
pop
or
pop
jnp
lahf
ret
xor
insl
pushl
mov
int
inc
adc
jp
adc
fldt
or
inc
inc
test
dec
push
dec
and
jge
pop
out
push
fsts
sbb
and
pop
ljmp
orl
mov
lock
pusha
insl
hlt
jns
iret
scas
popl
insb
in
negl
test
stos
jne
enter
scas
call
addb
fisubrs
dec
aam
stos
fstpl
mov
mov
add
sub
stos
adc
mov
xor
stc
jl
inc
jo
mov
xor
adc
xchg
shll
xor
add
xchg
fucomi
scas
or
or
call
sahf
std
leave
add
mov
mov
addr16
inc
sbb
das
andb
imull
push
out
mov
ret
das
push
rcll
out
sbb
hlt
push
lret
mov
cmp
pop
repz
test
out
jp
insb
sbb
jne
mov
popf
xchg
push
inc
xorb
jmp
and
js
jmp
lods
pop
insl
dec
insb
lds
sbb
movsl
fdivrl
and
cld
testl
mov
or
fimuls
mov
inc
sahf
test
add
fadd
movsl
outsb
decl
mov
fwait
pop
fimuls
mov
push
dec
sbb
sbb
fdivr
cli
neg
jp
movsl
mov
and
mov
mov
cmp
aad
in
popa
rcrb
cmp
in
sbb
push
add
sbb
in
mov
aaa
shr
add
hlt
jno
and
xchg
sbb
test
call
imul
push
dec
test
cld
inc
sub
or
inc
sti
jno
fcompl
inc
call
dec
lods
mov
pop
push
test
fsubl
imul
insb
rorl
pop
pop
nop
cmp
sbb
js
xor
sub
xor
ror
inc
inc
adc
mov
and
mov
bound
or
ja
fiadds
xlat
pop
repz
in
scas
sbb
mov
add
scas
dec
mov
add
notb
pop
aad
or
int
and
test
das
dec
jns
test
inc
dec
daa
sahf
mov
popa
outsl
lret
stos
test
fs
incb
xor
loop
call
xlat
popa
inc
dec
outsb
pusha
fwait
push
ss
scas
sub
cli
sbb
pop
sarl
shll
mov
jne
sbb
cwtl
or
inc
cmp
loope
or
icebp
add
jno
cmp
mov
mov
jae
cmp
lods
cltd
scas
xchg
dec
sbb
push
inc
ficomps
mov
mov
mov
jb
gs
incb
addl
cmpsb
lds
push
mov
fadd
xchg
incl
js
stos
es
sti
pop
daa
sbb
sbb
pusha
test
jne
ficompl
mov
and
clc
loope
jns
dec
lods
out
rcrl
lahf
loope
rclb
inc
stos
lret
push
add
cwtl
pop
cmovb
rcr
pop
sbb
iret
icebp
sub
sub
xlat
dec
mov
test
xchg
cmp
sbb
jne
stos
dec
or
sub
aaa
dec
fs
out
dec
cwtl
fsubs
sub
clc
sahf
sbb
xchg
mov
icebp
dec
loop
inc
lods
sbb
pop
pop
mov
xor
mov
mov
ret
pop
std
and
xchg
xchg
insb
scas
test
push
dec
xor
out
adc
in
fstl
in
mov
jno
adc
rorb
add
fiadds
xorl
loopne
adc
mov
mov
movb
pop
push
inc
pushf
push
arpl
iret
or
test
dec
and
xlat
scas
sbb
repz
pop
jb
pop
mov
data16
test
adc
pushf
pop
jae
adc
test
push
lods
sarl
je
or
shlb
test
cmpsb
hlt
std
add
jmp
xchg
outsb
sbb
outsb
sbb
sub
mov
movsb
ss
push
jae
int3
in
js
aas
rcrb
pop
cmpsl
xor
adc
adc
mov
ss
push
push
repz
push
das
and
adc
fwait
mov
movsb
mov
xorb
sti
nop
lea
mov
out
sub
movb
adc
or
lods
and
jmp
sub
xchg
pop
cmp
fdivrp
fiadds
test
sti
mov
stos
rcrb
shrl
inc
imul
jno
ret
push
fidivs
movsb
inc
scas
mov
mov
cwtl
fldl
or
imul
sbb
inc
push
dec
sub
ja
into
jno
and
sbbb
xor
sbb
push
push
and
xchg
ds
insl
mov
rolb
sbb
mov
stos
sub
and
sbb
sahf
push
lock
pop
or
mov
mov
pop
sbb
push
push
jg
fs
pop
cmp
xchg
dec
mov
icebp
lcall
mov
adc
mov
bound
push
leave
movsb
imul
in
jmp
lret
test
out
out
mov
stos
call
push
insb
loopne
mov
js
fs
pop
nop
mov
mov
int
in
sub
insb
and
fwait
dec
sub
test
mov
test
pushf
hlt
mov
cltd
addr16
arpl
dec
inc
data16
and
mov
pushf
xor
push
cmc
fsubr
cmp
inc
xchg
jae
sub
sahf
adc
pop
aam
pop
pop
rcr
adc
jbe
ja
ds
jae
cmp
std
mov
push
mov
xchg
and
inc
jb
pop
out
popa
imul
int3
pop
out
enter
out
mov
cltd
mov
jnp
aam
xlat
jl
push
sahf
dec
or
mov
movsl
sbb
arpl
rcr
repz
push
insl
add
mov
jl
dec
das
xor
idiv
and
imul
mov
int
frstor
ljmp
dec
jb
xor
into
loope
cmpl
mov
aad
or
adc
out
addr16
xchg
fidivrl
cmc
xchg
sbb
mov
fs
inc
sub
fwait
addb
mov
inc
xchg
pop
xor
aad
cmp
xlat
aad
sbb
das
adc
jbe
and
xor
fstps
sbb
mov
frstor
mov
lods
in
xchg
imul
jl
jp
xor
stc
sub
test
xchg
and
in
pushf
push
daa
pop
scas
ret
jge
push
and
jecxz
add
and
in
cmp
adc
scas
mov
fdiv
enter
add
fidivrs
std
cld
mov
les
lcall
jae
add
mov
add
lahf
insb
xor
ret
xchg
push
xor
ja
inc
rcrl
add
mov
sub
aam
aas
test
test
xor
xchg
mov
sbb
and
pop
ret
and
inc
cwtl
sbb
call
add
xchg
subb
imul
sub
pop
call
shrb
or
adc
xchg
ljmp
push
mov
push
insb
rol
pop
sub
sbb
mov
or
dec
fsts
or
call
dec
aaa
imul
add
sbb
sub
mov
lret
imul
insl
orl
stc
mov
xchg
mov
pop
sbb
js
and
sti
lret
dec
test
adc
gs
fwait
call
lret
xor
std
lret
aam
jl
insb
ja
mov
das
jne
push
movsb
mov
or
rorl
or
xchg
adc
cmp
sub
test
negl
clc
fwait
in
in
and
mov
aas
mov
ret
sbb
lock
inc
lcall
lods
das
jg
lods
mov
out
and
subl
xor
mov
xor
sub
or
cli
mov
jmp
lret
in
ljmp
test
cmp
lret
jno,pt
jae
dec
jge
pop
or
adc
and
push
mov
xor
mov
into
cmpsb
imul
inc
mov
inc
push
jmp
sub
insb
adc
or
fstpl
imul
sub
pop
dec
stos
adc
mov
hlt
jmp
pop
mov
sub
mov
cmpsl
cmp
ficoml
lea
rcrl
rep
testl
stc
add
mov
jmp
mov
jns
movsb
insb
push
pop
xchg
and
and
notb
out
jae
lcall
imul
out
cli
jnp
addr16
sti
and
pushf
pushf
je
jb
pop
out
adc
bound
insl
popa
or
loop
cmp
push
jmp
test
mov
outsb
pop
lret
cld
push
and
jne
dec
lods
mov
cs
dec
xor
mov
adc
pop
ret
aam
shl
in
or
or
je
sub
aaa
xchg
mov
call
call
iret
fwait
sahf
cmp
jne
mov
loope
pop
std
ffree
dec
add
pop
mov
push
xchg
leave
mov
push
sub
and
inc
mov
pop
mov
and
lcall
adc
imul
adc
insl
popf
out
mov
sbb
jmp
dec
mov
cmp
bound
ltr
cld
movsb
jp
push
imulb
movsb
jns
out
lcall
dec
outsl
add
jbe
sbb
icebp
jns
adc
mov
or
inc
loopne
mov
dec
clc
jl
mov
mov
iret
and
dec
and
shr
lret
stc
outsb
mov
mov
inc
fsubr
dec
pop
dec
pop
push
or
push
cmpsl
ja
mov
mov
dec
dec
xchg
xchg
pop
push
and
jle
add
loopne
jo
movsb
lods
mov
jo
add
ds
add
inc
push
mov
jo
aad
das
pop
pop
adc
and
ret
in
cmpsl
sti
pop
push
fxch
adc
inc
inc
add
nop
sub
gs
rcrb
mov
lcall
sbb
test
lock
lcall
or
leave
ffree
pop
cwtl
pop
int
jns
jns
gs
jmp
movsb
and
pop
es
sbb
and
pop
sti
and
cmp
aas
fbstp
aas
icebp
pusha
outsl
xor
insl
adc
mov
scas
pop
or
cmp
jo
pop
popf
dec
xchg
sub
pop
xlat
jl
adc
cltd
cmp
imul
xlat
jge
jl
enter
fnstenv
or
mov
icebp
lret
rsqrtps
adc
lea
and
adc
cs
or
jno
clc
jmp
arpl
sbb
das
lods
lods
repz
sub
mov
jbe
dec
loope
adc
mov
sub
xchg
mov
rcrl
rcrb
dec
dec
lret
loope
mov
dec
push
hlt
jb
mov
shll
mov
std
xor
popa
jo
gs
incl
test
sbb
fnstenv
xchg
insl
stc
mov
jge
inc
test
sbb
add
pop
aad
cld
inc
out
ret
out
sub
adc
lods
pop
pusha
je
push
or
inc
mov
scas
fdivrl
jbe
mov
mov
shrb
xchg
jmp
es
adc
cmp
rcr
sbb
ss
aaa
mov
push
mov
jae
popa
ljmp
addr16
in
mov
add
lret
cmp
rclb
xchg
stc
mov
mov
mov
add
jle
ljmp
jg
adc
xor
push
leave
sbb
lea
pop
sbb
aam
sub
fcmovnb
test
and
jns
fimuls
outsl
ljmp
inc
xchg
mov
popa
and
enter
add
or
inc
das
loope
dec
rcrb
lahf
idivb
push
inc
or
lock
insb
movsl
ja
xor
adc
mov
xor
inc
adc
dec
pop
arpl
mov
pop
jg
hlt
lea
js
hlt
notl
adc
sbb
xchg
mov
jp
xorl
ds
adc
dec
call
fists
push
lock
loope
mov
mov
sbb
jle
gs
push
xchg
push
imul
and
sbb
jle
test
out
mov
lods
jl
out
jl
and
mov
dec
xor
xchg
xor
je
mov
jno
je
ret
or
faddl
repnz
mull
aas
adc
adcl
sub
loope
jae
sub
add
ds
mov
mov
fs
jl
popf
mov
push
sbb
mov
cli
dec
outsb
mov
int
cmpsl
xor
or
or
fadds
js
cmpsb
jnp
or
and
xchg
add
daa
dec
xor
shlb
out
aam
out
mov
fistps
hlt
orl
fstps
xchg
sahf
xchg
dec
or
clc
and
pop
jns
pop
orl
scas
sub
mov
push
out
jbe
mov
roll
and
pop
addr16
subl
xor
ljmp
mov
fcompp
or
and
fisubrs
jmp
sbb
push
sbb
sarb
and
mov
and
inc
push
pop
mov
xor
xchg
inc
loope
or
dec
mov
xchg
jmp
mov
or
cld
push
xchg
sti
popa
and
sbb
mov
fsin
fwait
cltd
dec
das
pop
cmp
mov
or
lds
adc
imul
int
cmpsl
ss
mov
jne
sbb
inc
loopne
ja
jne
xor
cmp
xchg
loopne
mov
xchg
add
xor
pop
push
aas
or
pop
iret
jg
in
xor
jecxz
loopne
lock
mov
rorb
movsb
xchg
fisubl
and
loop
sti
pusha
xor
stos
pop
adc
cltd
idivb
push
lea
sub
pop
sbb
mov
test
mov
call
clc
call
cmpsb
sti
mov
xor
push
cmpsb
dec
adc
ret
xor
outsl
inc
add
int3
shlb
xor
mov
xlat
mov
sub
mov
sti
fstpl
mov
xchg
adc
ficoml
or
mov
mov
orl
fmul
cmpsl
xlat
das
cld
xor
add
rcll
push
or
call
inc
mov
jp
lcall
outsb
shl
int3
clc
xor
fucom
push
sarb
jg
pop
jle
mov
fs
subb
or
xchg
arpl
mov
into
into
testl
test
adc
into
ror
cwtl
outsl
lahf
pop
mov
and
sub
mov
js
hlt
sbb
fiadds
das
mov
pop
rcll
mov
inc
push
xchg
lea
mov
adc
inc
jp
stos
ja
jp
dec
mov
js
pop
les
push
outsb
sti
in
dec
inc
xlat
mov
sbb
push
mov
jmp
or
das
lret
fldt
aaa
inc
jns
jae
mov
add
cmp
mov
adc
stos
sbb
adc
addb
jmp
add
nop
sbb
dec
inc
shll
mov
inc
scas
xchg
mov
out
pop
je
adc
imul
in
loop
pusha
add
lahf
mov
sbb
cmp
fs
dec
fdivl
enter
push
mov
and
adc
dec
in
pop
sbb
stc
push
call
sbb
das
mov
lods
add
mov
inc
or
mov
les
mov
add
rclb
adc
add
lods
pop
add
or
fidivl
repnz
jbe
mov
stos
dec
xchg
push
aam
test
daa
mov
stos
movsb
ret
add
sbb
enter
shlb
mov
dec
loope
data16
pop
pop
xchg
cmpsb
sbb
add
mov
pop
cmpsb
aaa
jge
mov
adc
aam
jnp
mov
mov
add
jle
xor
mov
xlat
rclb
xor
out
lock
cmp
rolb
adc
or
or
popa
icebp
xor
push
sub
dec
jnp
xchg
mov
bound
mov
push
jl
nop
mov
inc
testb
out
lret
mov
insl
add
out
push
in
jo
inc
mov
test
insb
sub
aas
stos
je
sar
lock
andl
test
in
and
or
jnp
les
loop
mov
jae
sub
cltd
push
and
sub
cs
mov
cmp
movl
cmp
sbb
push
add
aaa
push
lds
jo
and
ss
xor
andb
dec
pop
and
push
dec
add
insb
aam
mov
xor
fsts
addb
ret
daa
or
popf
sahf
xchg
jge
sub
sbb
dec
aaa
insl
xor
lcall
lret
pusha
pop
mov
jle
push
push
xchg
push
ficoms
pop
jo
ret
and
sub
cmc
test
imul
cmpsl
adc
cltd
mov
pusha
shr
mov
dec
cmp
test
sub
inc
pop
jae
mov
fdiv
aam
addr16
cmpsb
shr
add
das
sbb
cmp
cmp
jbe
and
add
xchg
mov
je
stos
jle
shr
mov
xor
mov
movsl
je
ret
sbb
fs
or
mov
dec
push
movsl
data16
inc
hlt
mov
dec
aad
pop
mov
mov
inc
fsubrl
inc
dec
lret
sbb
mov
mov
testb
in
mul
dec
sbb
push
into
jle
lock
jecxz
divb
lea
xor
cld
jno
jnp
fsubrl
cmpsb
and
std
lahf
mov
cmpsb
xor
imul
mov
rcrb
fsubrp
lret
xadd
xchg
addr16
mov
clc
xor
pop
push
xor
push
in
sahf
mov
cmc
in
in
test
stos
jg
mov
mov
xor
mov
roll
mov
xor
pop
jae
xchg
xorl
pop
sbb
pop
xchg
outsb
aad
flds
call
cs
jp
invd
xor
movsl
aad
xlat
aad
shr
and
cmpsl
inc
ror
sub
jmp
cli
push
cmpsb
dec
xchg
mov
test
pop
adcb
leave
test
cltd
rcr
cmp
scas
sti
fcmovu
fdivp
xchg
je
or
out
decb
adc
jne
jmp
sub
scas
sbb
sub
mov
add
push
jno
maxps
in
xor
push
jge
fistpl
add
cmpsb
dec
push
imul
sub
popa
push
sub
test
mov
jns
imul
jecxz
lea
cmc
pop
push
cmp
fists
push
add
ljmp
sub
pusha
test
dec
add
or
jp
inc
adc
cmp
push
push
jle
and
insl
inc
out
inc
or
fimuls
fs
push
push
repz
xchg
mov
and
and
mov
mov
cld
hlt
sahf
jns
sbb
fs
test
mov
push
addr16
pop
cmp
adc
cmp
jl
push
mov
dec
pop
mov
lods
jmp
and
push
into
mov
xchg
and
into
and
jae
cmp
adc
add
sbb
jae
sti
fs
repnz
xlat
xchg
pop
test
mov
gs
mov
lret
pop
in
ljmp
push
cmpsb
inc
pop
mov
sbb
xchg
adc
dec
repnz
mov
xlat
add
inc
rcl
mov
add
daa
fwait
mov
push
leave
in
jmp
repz
insb
repnz
shrl
mov
add
test
jmp
dec
xchg
pop
and
dec
xchg
mov
in
mov
ss
popf
push
sbb
cmpsb
mov
mov
es
data16
pop
lea
xchg
sbb
sbb
cmp
xchg
and
enter
movsl
sbb
outsl
dec
movsl
xchg
xlat
fdivrl
mov
out
lahf
out
cltd
push
push
cmpsb
icebp
ret
out
mov
ds
cli
mov
cmpb
fld
pop
sbb
sarl
repz
mov
push
icebp
fwait
popa
push
into
rcll
rclb
aad
xor
aad
addl
addr16
push
pop
into
dec
mov
aaa
std
push
mov
test
xor
dec
cltd
sub
adc
in
sbb
fisubrs
aad
lods
jbe
fsubrs
outsb
fildl
push
les
out
test
sub
and
in
shlb
cmp
int
cld
push
push
xchg
lret
popf
mov
stos
pushf
pusha
mov
xchg
cld
xor
roll
pop
aas
inc
xor
mov
mov
mov
ja
pop
mov
jns
jge
ss
and
les
imul
aaa
push
imul
test
in
add
cmpsb
xchg
mov
xchg
addr16
adc
mov
sub
xor
pop
xchg
and
add
adc
jecxz
in
stos
subb
insl
xchg
pop
sbb
dec
lahf
lret
lcall
ljmp
out
jg
enter
and
jo
pop
in
pushf
sbb
jge
pop
je
lret
jle
mov
test
test
test
mov
loop
xchg
fisubrs
xchg
jne
fstps
test
sub
jo
je
add
int
das
sbb
fadds
lods
sub
shlb
stc
mov
dec
sub
pop
daa
ss
popa
or
mov
aaa
nop
and
inc
sbb
push
int
sbb
inc
mov
enter
add
aam
movsb
jecxz
mov
and
pushf
pop
shlb
in
mov
mov
lret
mov
popa
addr16
add
stc
sbb
xor
int
xchg
add
out
aam
es
into
je
je
call
xchg
mov
iret
cmc
data16
adc
xor
dec
push
mov
adc
insb
pusha
scas
pop
mov
lods
cmpsb
xlat
pop
sarl
addl
adc
mov
xor
inc
in
scas
jbe
jecxz
push
out
sub
mov
hlt
xor
inc
push
movsb
lods
fs
or
lcall
pushf
and
cwtl
popl
dec
mov
xchg
aaa
pusha
adc
lock
mov
and
push
rolb
lahf
add
pushf
ja
rcrl
sub
jmp
fsubs
gs
shl
sub
and
pop
insb
jne
pop
pop
int3
inc
xor
sbb
les
jbe
and
pop
neg
into
mov
shlb
jne
xchg
inc
leave
adc
aaa
push
in
mov
js
iret
mov
fdivrs
jl
cmp
loopne
lods
out
sti
fmuls
test
pushf
clc
les
in
add
mov
clc
adc
popf
out
inc
pop
jnp
ret
out
pop
je,pt
adc
mov
cmp
push
jge
ljmp
movsb
leave
negb
cmp
cmpl
dec
mov
faddl
inc
sbbb
or
movsb
or
shl
cmp
jno
out
js
out
cld
dec
in
pop
mov
pop
xor
aas
dec
cmp
fs
scas
gs
cmp
dec
lds
call
lahf
or
mov
adc
mov
or
add
cld
stos
jo
repz
imull
shrl
rolb
mov
cmp
and
mov
movsb
or
lret
sbb
cmp
ret
in
cltd
jns
shlb
stc
push
nop
mulb
sbb
jb
mov
dec
jmp
xor
inc
adc
cld
push
inc
aam
xor
fisubl
data16
mov
lods
js
mov
mov
inc
mov
cmp
cld
push
jge
sub
pusha
cmp
out
stc
jmp
daa
pop
adc
cmp
jno
cltd
scas
mov
roll
jmp
test
mov
dec
ja
mov
out
mov
mov
push
imul
push
mov
push
jne
je
jp
outsb
adc
test
push
out
daa
fldcw
adc
cs
dec
gs
popf
mov
cmp
sub
jae
sbb
xlat
push
stc
test
mov
push
das
cld
and
insb
add
jae
jp
and
orl
test
rclb
mov
jne
or
fistpl
cwtl
fdivr
xchg
mov
xchg
stc
js
movsl
jb
imul
xchg
cmpsl
pusha
push
arpl
mov
cmp
push
jo
adc
call
arpl
jne
mov
xor
inc
inc
daa
push
divb
jns
clc
mov
and
fsubl
roll
pop
xlat
les
gs
fstps
loope
insb
xchg
shll
into
sub
mov
mov
popa
scas
push
scas
aaa
cld
inc
mov
data16
adcl
icebp
daa
and
cs
fwait
mov
fldl
sbb
xor
fisttpll
movsb
rcll
lds
inc
ss
jb
or
jmp
stos
xchg
les
add
sub
pusha
fsub
jmp
and
jge
xlat
xchg
jle
cmc
loope
jbe
cmpsl
sar
hlt
pop
fdivrl
mov
xor
push
popf
out
enter
inc
imul
cltd
call
mov
std
add
sbb
cld
xchg
pop
mov
pop
xchg
ret
dec
push
ret
adc
cmc
push
rol
cmp
xchg
ret
fistps
adc
adc
outsb
bswap
inc
jmp
in
push
mov
inc
mov
stc
push
out
pop
stos
add
pop
sub
jnp
rcrl
popf
iret
xchg
ret
movsl
mov
xchg
adc
adc
sub
stos
lret
mov
leave
mov
decb
pusha
hlt
inc
xchg
gs
inc
or
jmp
movsb
ds
pop
int3
icebp
jp
inc
loope
mov
jne
mov
jne
rdtsc
jge
repz
mov
popf
icebp
xchg
outsl
ljmp
lods
leave
adcl
leave
xchg
incl
add
mov
insl
xor
imul
popa
xchg
mov
rcll
and
mov
dec
inc
mov
adc
sbb
xor
mov
pop
flds
adc
adc
emms
or
or
cmp
and
mov
cltd
stc
sub
dec
push
les
repz
add
ljmp
mov
sub
scas
pop
mov
inc
call
add
fsubrp
outsb
pop
mov
ret
hlt
icebp
mov
sar
cmp
mov
rcrb
xchg
out
pop
ss
ss
in
incl
cmc
call
mov
xchg
sbb
sub
adc
mov
pop
xor
outsl
and
pop
fidivs
loopne
xchg
lea
sub
je
dec
adc
out
stc
loop
and
sub
popa
nop
stc
out
and
cmp
ret
adc
psubusw
ja
cmp
out
subb
sbb
push
outsl
test
pop
out
lret
add
xor
dec
inc
jmp
cmp
mov
and
stos
sub
mov
inc
repnz
inc
in
in
xor
sbb
jb
and
mov
repz
xchg
or
movsb
dec
ficomps
xchg
xor
pop
je
stos
and
lock
or
imul
data16
pushf
inc
movsb
test
roll
dec
fisttpl
sub
sahf
jl
out
std
add
sub
add
lret
ret
push
pop
loopne
movb
pop
lret
fidivs
adc
push
jl
dec
mov
enter
aas
rcll
cmc
add
xlat
aad
lahf
data16
pushf
add
test
mov
out
int
sbb
pop
loopne
sub
pop
and
and
fnstcw
sbb
adc
lahf
inc
enter
lret
pop
leave
push
sub
add
inc
stc
icebp
lret
movsl
add
cwtl
mov
test
xchg
sbb
dec
adc
mov
cmp
jmp
lret
jbe
push
mov
shrb
int3
jnp
cltd
jnp
fucomip
jg
mov
mov
ljmp
lock
ret
pop
lea
cmpsl
jb
shll
inc
pop
test
mov
loop
push
mov
xchg
pop
cmpsl
xchg
or
je
mov
dec
test
jbe
shll
fwait
mov
and
jmp
lods
mov
out
adc
mov
daa
push
jl
jae
xor
sub
mov
nop
pusha
popa
in
pop
out
imul
lret
scas
test
pop
adc
adc
or
mov
pop
imul
loopne
xor
movsb
rcrl
imull
out
xorb
repz
mov
mov
insl
mov
pop
or
outsb
add
insb
cs
enter
test
xchg
or
or
push
sbb
fcoml
inc
pop
ljmp
sbbb
stc
ljmp
mov
fcom
ja,pn
call
loop
jb
rorb
jge
mov
nop
xchg
jg
dec
mov
sub
fnstenv
adc
xchg
clc
adc
jle
int3
call
xchg
jmp
adc
mov
and
jmp
fistpll
add
test
mov
sbb
mov
movsl
inc
xchg
inc
fdiv
xor
lods
cmp
jae
and
shll
adc
push
insl
mov
jnp
leave
mov
lret
loope
int
sahf
popa
jne
push
sbb
jo
xor
outsb
lds
pop
bswap
sbb
mov
lahf
ss
mov
jecxz
mov
aas
in
dec
mov
mov
stos
push
cmp
mov
scas
pop
popf
mov
jo
je
adc
outsb
popa
add
pop
scas
aam
ds
gs
mov
pop
cmc
mov
ljmp
jg
aaa
scas
mov
mov
and
adcl
dec
xchg
dec
pop
mov
test
int3
scas
arpl
test
xor
in
xor
add
cmp
jb
test
xchg
les
jo
in
iret
adc
lahf
adc
lods
lea
cs
sbb
mov
pusha
xor
hlt
fdiv
push
arpl
xor
pop
gs
leave
cmc
pop
or
mov
daa
xchg
ss
or
mov
test
mov
xchg
xor
cmpsl
pop
hlt
out
stos
add
stos
mov
das
mov
cli
adc
aas
mov
and
out
pushf
fnstsw
xchg
sbb
stos
push
and
divl
pop
sub
jne
lahf
add
adc
xchg
aam
frstor
cmc
repz
inc
divl
jno
pop
cmp
jl
sti
mov
pop
jge
test
cli
nop
mov
repnz
add
cmp
mov
jecxz
xor
mov
cs
pop
jb
cltd
or
xchg
out
shlb
stos
sbb
add
ja
cmp
scas
cmp
jo
ljmp
xchg
lret
mov
aas
ficoms
ljmp
hlt
mov
aaa
cmp
pop
bound
add
adc
insl
dec
jae
fcomp
cmp
bnd
sub
leave
fisttpl
inc
xchg
popa
xor
sbb
mov
outsl
mov
fwait
movsb
in
test
cwtl
dec
adc
daa
es
bound
movsb
add
ret
in
push
dec
out
cli
arpl
sub
cli
shlb
or
movsl
sbb
js
repz
push
or
hlt
cmpb
test
int3
imul
xchg
jp
pushf
pop
ja
cltd
push
testb
adc
into
xchg
inc
mov
shlb
data16
flds
dec
inc
mov
mov
in
rclb
fisubrs
mov
or
push
popa
test
mov
xor
cmp
mov
pop
int3
push
les
inc
loope
repnz
cmpsl
adc
ja
pop
andl
test
ljmp
iret
add
adcl
fisubrl
movsb
ljmp
mov
add
insb
xor
jge
or
sti
cmp
sub
neg
int3
push
iret
pushf
xor
lea
fidivs
mov
add
xchg
testl
pop
mov
mov
sub
repnz
lds
xor
or
adc
out
jmp
mov
and
fistl
push
dec
xor
imul
gs
enter
fstl
mov
dec
sub
nop
lret
rorb
repnz
and
or
pop
cmp
mov
xchg
daa
push
sahf
mov
fidivs
lret
scas
dec
into
mov
fists
lds
cli
int3
cltd
jb
xchg
les
jae
xor
subb
pop
pop
imul
jg
xchg
scas
cmp
jno
push
sub
jb
sbb
add
add
mov
fs
dec
jmp
or
or
or
and
decl
scas
ret
icebp
mov
std
mov
dec
xchg
out
outsb
dec
mov
mov
jle
mov
call
dec
push
add
inc
addb
lea
movsl
jnp
mov
sub
sub
push
call
dec
add
pop
lahf
daa
popl
leave
les
inc
test
or
out
std
fs
int
test
adc
adc
add
ret
leave
mov
mov
xorl
js
sbb
xor
push
mov
jne
testb
sahf
lcall
cwtl
js
xor
xor
cmp
push
inc
mov
jo
notl
nop
sub
dec
mov
imul
mov
inc
or
scas
inc
out
push
aaa
adc
rclb
push
mov
insl
dec
sarb
mov
push
rorl
in
test
xchg
in
inc
push
rclb
fcoml
insl
mov
or
pushf
das
xor
mov
stos
add
gs
andb
push
out
push
push
std
sti
xchg
lods
pushf
push
outsb
xchg
inc
sahf
addr16
xor
xorl
ljmp
mov
test
cmp
and
fcompl
mov
mov
lods
sbb
movsb
sub
pop
sub
cmp
ret
lahf
sahf
cmp
cmp
stos
pop
inc
movsb
roll
mov
xchg
add
js
mov
pop
dec
ds
xchg
mov
jno
push
dec
inc
dec
push
dec
andb
adc
paddb
jmp
jl
test
xchg
outsb
in
testl
mov
decl
pop
adc
push
mov
leave
sbb
out
jae
adc
xchg
push
adc
in
lods
pop
not
imul
dec
sbbb
and
sti
jo
sbb
cli
add
xor
jo
dec
repnz
add
xchg
mov
xchg
jl
in
mov
adcl
push
aad
cwtl
xchg
sub
sub
pushl
cmc
dec
cli
inc
incl
sub
jge
cmc
movsl
adc
mov
jg
xchg
pop
ss
fiaddl
cwtl
cmp
pop
add
push
jge
test
pop
push
jae
inc
cmp
loope
fcmove
insl
adc
fisttpl
push
and
lahf
xor
stos
mov
fisubrl
cmpsb
call
lods
stc
mov
jmp
dec
push
jecxz
aam
jo
hlt
testb
and
out
cmc
mov
cld
icebp
loope
sbb
fisubs
cld
sbb
and
dec
inc
call
test
int3
pop
mov
sbb
sbb
shrb
fwait
push
lods
dec
dec
push
in
push
aaa
adc
cwtl
push
sbb
mov
push
icebp
and
repz
shll
sti
cmp
adc
inc
pop
lahf
pop
dec
pop
mov
sarl
fiaddl
fmul
ds
push
fcomp
fisttps
outsl
sbb
jbe
inc
sti
fstpl
addr16
arpl
mov
jl
push
mov
sbbl
mov
int3
lds
pop
mov
cmc
icebp
xor
cmp
mov
push
hlt
inc
popa
loop
int
xchg
xor
je
mov
lcall
mov
loope
mov
cld
fstpl
jle
js
cli
mov
mov
inc
lock
jl
cmovge
enter
or
add
popf
das
add
shr
push
add
data16
cmc
and
jl
out
xlat
ljmp
mov
pop
fcomp
push
sub
std
dec
daa
stos
mov
xchg
xchg
push
pop
out
lds
imul
pop
sbb
lea
cld
dec
xor
lock
and
or
cmpsb
jb
mov
enter
push
add
dec
test
mov
pop
repnz
loopne
les
cmp
inc
push
arpl
call
mov
xchg
pop
loope
xor
pushl
xor
pop
iret
xchg
cmp
divb
mov
test
jns
and
cmp
fcmovnu
adc
popf
out
lds
pop
jb
push
push
push
cmpsb
push
sub
mov
arpl
rcll
rclb
and
jmp
sbb
movsl
push
std
sahf
pushf
xor
adc
ja
cmp
mov
lods
test
pop
add
push
jecxz
nop
pop
lds
dec
es
and
mov
out
repnz
pop
cld
das
flds
adc
scas
push
insl
xchg
inc
rcrb
lea
jo
mov
pop
jecxz
mov
jg
and
daa
xorb
je
xchg
jne
xor
xchg
leave
js
add
sbb
inc
xorps
es
scas
mov
sub
sarl
fisttps
mov
mov
icebp
jl
or
subb
lret
out
or
jl
jmp
sbbb
adc
sahf
pop
cwtl
push
add
setb
or
jo
sub
lahf
cltd
jmp
push
dec
cmp
movsb
inc
outsl
and
fimull
mov
pop
cltd
xchg
adc
mov
mov
pop
les
repnz
popf
inc
call
mov
fwait
mov
adc
nop
imul
rorb
cli
pop
test
lahf
add
ds
ss
cmp
fsub
jl
pop
xor
imul
mov
adc
rcll
cltd
sahf
cltd
push
adcl
in
in
fwait
imul
jbe
lock
cmp
aaa
call
ficompl
repz
add
out
adc
or
sahf
es
push
xor
stc
int3
jne
mov
xchg
lret
cmpsl
jnp
std
arpl
adc
xchg
dec
lahf
xchg
fsubr
or
cmp
std
adc
xchg
sub
push
jle
in
in
lahf
jmp
jnp
rorl
nop
bound
mov
adc
iret
or
mov
hlt
lea
push
adc
push
mov
cld
stc
std
aam
ficoml
adc
aaa
loopne
mov
sarl
mov
shr
out
ljmp
movsl
movsl
je
jp
jmp
sub
mov
arpl
popa
cmpb
repz
stc
mov
or
push
xchg
add
inc
lock
hlt
repz
fdivrs
lcall
fcomip
fnstenv
push
out
sub
xchg
xlat
in
lret
addr16
mov
ljmp
aaa
mov
sarb
pmuludq
iret
adc
mov
dec
mov
jmp
int3
popa
pop
roll
dec
sub
mov
loopne
dec
pop
ret
imul
sbb
enter
insb
shlb
xchg
ret
fistl
int3
shl
movl
adc
pop
sub
fdivrl
dec
lods
pop
iret
mov
jbe
or
loopne
es
xchg
push
xlat
push
mov
scas
imull
jle
xchg
jb
push
cmp
call
jns
xchg
or
loop
xchg
dec
imul
fsub
inc
gs
adc
daa
daa
pop
loope
push
fldcw
xor
jae
and
das
or
daa
sbb
aaa
stos
add
mov
shrb
scas
jg
pop
mov
pushf
jnp
jmp
add
movsb
sbb
push
mov
imul
xor
stos
clc
inc
mov
push
pop
inc
dec
cmp
mov
out
call
dec
sub
mov
inc
into
jb
mov
xchg
pop
mov
mov
xchg
je
outsb
mov
jb
std
push
xchg
dec
fstl
sub
jnp
ds
inc
cmp
lahf
push
imul
jl
mov
pop
mov
xchg
movq
dec
dec
mov
sarl
cmp
call
and
insb
data16
outsb
cmc
in
push
repz
mov
dec
pop
aad
jae
das
jo
mov
mov
cmp
cmpsl
mov
repnz
or
ret
xor
cli
cmc
cmpsb
aas
loope
ror
ficoml
data16
fmull
pop
push
xchg
push
xor
insb
push
or
mov
mov
mov
mov
lret
adc
cmp
pusha
sahf
test
lcall
add
out
xlat
lea
mov
xchg
sbb
nop
sbb
push
ret
sub
cmp
mov
insl
add
test
in
cmp
lahf
mov
dec
mov
mov
lods
inc
xchg
pop
fs
sub
mov
dec
sti
mov
jns
pop
xor
adc
das
add
adc
push
push
cmp
cmp
in
repnz
ljmp
pop
jno
fstp
or
pusha
mov
mov
and
out
out
subl
or
jl
mov
xor
out
mov
xchg
sbb
test
adc
pop
jo
inc
add
jg
inc
movb
cmp
fwait
sbb
daa
outsb
and
xlat
loopne
jb
xchg
mov
insb
in
push
neg
cmc
ja
xchg
adc
mov
sbb
push
sarb
or
popf
aad
pop
and
dec
mov
cmp
popa
ljmp
cmp
repz
add
push
js
cmp
adc
inc
push
xor
add
jle
jl
loope
mov
repz
in
shll
add
shl
imul
into
cwtl
fisttpl
frstor
mov
ficomps
dec
repz
repz
fcoml
nop
xchg
push
in
data16
adc
mov
std
push
sbb
mov
and
pop
push
test
fwait
out
sub
loop
mov
loop
mov
mov
pop
mov
int3
or
push
shll
add
or
mov
clc
and
jne
add
sub
sti
ss
lret
pushf
into
negl
dec
imulb
adc
insb
mov
test
lock
mov
push
xchg
cmp
sub
outsb
decb
idivb
dec
test
or
add
bound
push
push
mov
mov
scas
sub
insl
subl
pop
das
mov
mov
and
dec
movsl
pushf
daa
cli
xor
jp
jle
jecxz
sub
faddl
stos
cmp
iret
aaa
mov
mov
dec
pop
fiadds
in
movsl
push
cwtl
mov
or
xchg
stos
arpl
ja
adc
hlt
inc
lock
mov
inc
jp
jo
insl
lea
data16
xchg
das
sub
xor
lds
ds
pop
jbe
mov
dec
fs
fisubs
jl
jg
lods
hlt
out
pop
xor
movsl
in
cmp
bound
cmp
fidivl
xor
icebp
mov
mov
inc
insb
add
and
push
lret
in
push
into
inc
cmc
push
imul
les
pusha
stos
out
shl
pop
or
mov
stos
lahf
cli
xor
outsb
adc
fmuls
mov
fsubs
sbb
std
div
pop
mov
popa
call
xchg
test
cmp
mov
xchg
arpl
push
aad
cmp
pop
test
jecxz
inc
mov
mov
push
loope
dec
call
loop
push
hlt
iret
or
lahf
das
lret
sarl
xchg
mov
jmp
js
lcall
int
or
dec
sub
jl
rol
jae
shr
test
and
outsb
xchg
ss
dec
fbstp
push
inc
mov
aaa
repnz
adc
xlat
icebp
xchg
inc
sahf
xlat
fidivrs
or
enter
imul
pop
stos
sub
inc
mov
fidivl
jp
bound
sbb
sbb
cmp
lcall
jmp
in
shll
in
xchg
cmp
stos
das
mov
mov
in
imul
lds
loope
adc
pusha
xchg
das
pop
jbe
sub
scas
lcall
or
popa
pop
cmpsb
and
daa
mov
xchg
push
sbb
out
inc
jns
lret
mov
cmp
test
popf
cmp
xor
popa
push
sbb
in
shll
out
jecxz
adc
bound
cmp
arpl
sbb
xchg
mov
xor
cmpsw
mov
sub
fs
fisttps
daa
out
push
pop
lahf
mov
xor
xchg
mov
mov
dec
out
stos
mov
pop
sub
jecxz
push
arpl
jnp
pop
pop
cmc
xchg
rorb
enter
loop
push
jecxz
lahf
and
shl
jnp
pusha
mull
push
jp
mov
sbb
pop
jbe
aam
jb
push
mov
pop
xchg
mov
gs
cmpsl
dec
ss
dec
mov
std
mov
and
in
insb
mov
sbb
xchg
movsb
xchg
lock
insb
test
cmpsl
push
fs
add
push
push
jbe
mov
xchg
sti
pop
mov
mov
dec
cmpsb
add
out
fld
mov
inc
push
and
mov
dec
mov
das
sar
mov
popa
inc
es
lahf
dec
add
pop
jmp
add
mov
and
mov
bound
fcmove
or
xor
lock
or
shl
push
adc
ljmp
ret
lret
fcomi
jo
jne
cmpsb
jg
into
in
add
test
mov
sub
js
xchg
clc
stc
inc
push
cli
loop
jne
popf
jp
scas
mov
sub
mov
adc
movsb
loopne
inc
inc
push
call
mov
jno
or
in
rcll
lahf
cmpsb
pcmpgtw
jle
daa
std
jb
sahf
mov
fnstsw
fsub
jae
mov
int
sbb
add
and
xor
mov
movsb
push
insl
dec
in
loopne
jecxz
inc
xchg
movsb
lret
cmpsl
jle
scas
inc
pop
ret
xchg
stos
sbb
push
mov
fldt
mov
and
pop
mov
inc
popf
arpl
dec
xchg
js
push
sti
sub
dec
add
aam
arpl
push
data16
fimull
dec
movsl
adc
es
hlt
push
jo
loop
out
in
stc
adc
and
add
rcrb
sub
and
xchg
inc
rcrl
imul
jmp
outsw
das
push
jb
dec
icebp
adc
lahf
ss
call
fistpll
addl
inc
add
enter
pop
and
ds
mov
shlb
mov
js
add
push
cli
and
add
mov
push
js
xor
jae
xlat
cli
adc
cli
xchg
popa
xchg
mov
cltd
sahf
shr
push
inc
mov
test
jmp
sub
mov
pusha
sbb
imul
daa
xor
add
jmp
stos
mov
scas
pop
mov
mul
repnz
int3
and
clc
xchg
repz
nop
pop
lods
push
mov
mov
inc
mov
xor
mov
pop
test
mov
loop
sahf
lcall
les
rcr
sti
lock
inc
mov
cmp
mov
mov
pop
lret
dec
stos
rclb
movsl
das
inc
jle
mov
hlt
adc
mov
outsl
imul
xor
cwtl
jbe
xchg
nop
stc
adc
adc
pop
push
and
mov
push
call
mov
xchg
mov
into
into
sub
jbe
mov
push
and
inc
push
fstl
icebp
inc
add
popf
jae
ret
pushf
push
fmuls
or
lcall
inc
out
fimull
call
inc
cmpsb
xor
adc
cs
shrl
sub
add
mov
lret
aad
sbb
adc
lcall
xchg
push
fists
sbbl
pop
push
sub
mov
orb
sub
lods
or
ret
orb
add
jo
pushl
test
inc
add
pop
sbb
std
inc
adc
add
aad
cmp
movsb
lods
mov
sbb
lea
xor
cmp
jmp
lahf
add
push
cmpsb
test
sbb
pushf
inc
cmpsb
mov
imul
xor
lcall
push
mov
jns
xchg
iret
pop
insb
lea
add
daa
cmp
push
es
and
sbb
xchg
imul
xor
lods
lock
xchg
sbb
fidivs
jb
xchg
into
jle
test
movsb
xchg
sub
ds
xlat
aas
into
std
imul
sbb
loop
fcmovnu
inc
or
call
hlt
adc
out
cmp
mov
nop
icebp
test
nop
fnsave
dec
dec
lods
nop
pop
orl
lret
or
mov
negb
add
mov
xlat
add
xchg
mov
lds
loopne
and
scas
and
cmp
lds
inc
pop
and
ret
xor
fmuls
scas
arpl
mov
lcall
pop
push
xchg
subb
arpl
lods
fimuls
cmp
cwtl
imul
cwtl
add
jge
jns
loop
sub
in
into
pop
gs
jns
cmp
mov
add
ds
rcll
cmp
and
sbb
xchg
jmp
test
idivb
fstl
lahf
lret
pop
gs
push
je
jge
insb
jb
dec
sbb
sbb
push
adc
jecxz
mov
dec
cmc
jg
inc
stc
pop
mov
dec
leave
pop
adc
stc
imul
push
fwait
lea
add
sub
int
lret
jg
pop
xchg
rcl
push
aad
das
jae
lock
jae
daa
sbb
inc
pushf
sti
or
dec
jnp
pop
jae
mov
out
or
popf
into
xchg
adc
ret
js
add
rcr
push
push
mov
rcpps
sub
ds
jbe
sarb
cmpsb
push
out
jge
aas
cltd
xor
rolb
mov
jmp
imul
mov
add
inc
les
leave
mov
mov
mov
xchg
jmp
icebp
fidivs
lret
sub
jg
push
pop
mov
jnp
gs
mov
mov
adc
movsb
and
clc
jge
push
inc
out
mov
add
clc
lret
lea
mov
add
fbstp
rolb
cmp
add
fidivrl
push
push
ror
adc
mov
sub
push
fwait
or
pop
inc
mov
cs
test
or
or
mov
ror
inc
xorb
aaa
insl
add
sub
cltd
call
nop
cmp
ss
sub
out
cmpsb
jo
fisubrs
mov
fwait
dec
je
cs
aas
push
addb
mov
xchg
mov
xor
xor
int3
and
push
stos
inc
lret
add
dec
fidivrl
sarl
mov
pop
push
adcb
in
mov
pop
outsl
int
or
inc
scas
lock
cmp
pop
jns
mov
or
das
mov
outsl
outsl
inc
lods
mov
js
popf
or
cmp
sbb
pop
inc
jnp
not
ret
fildll
cmp
push
inc
out
or
xchg
mov
push
sti
sub
jecxz
loopne
fwait
cmp
fs
dec
xchg
mov
rol
adc
mov
insl
stos
dec
fstpt
scas
inc
cmp
dec
cmp
ds
or
dec
inc
scas
pusha
inc
and
pop
xor
lods
lods
ret
das
or
subb
inc
scas
sbb
and
dec
jo
mov
movsb
adc
sbb
mov
pop
mov
xor
xorb
and
lock
cmp
idivl
sti
aas
mov
jg
jb
jb
movsb
test
dec
sub
rcl
mov
lock
in
xchg
mov
xchg
addr16
imul
fsts
jo,pn
enter
es
xchg
add
lcall
mov
fildll
stos
icebp
mov
sub
cmp
mov
ja
imul
negb
fmull
jbe
imul
or
in
pop
enter
xor
xchg
test
xor
push
rclb
xchg
out
in
mov
sbb
jno
inc
lock
or
cmc
iret
ds
xchg
push
lods
add
sbb
cmp
dec
or
popf
and
in
je
aaa
jne
pcmpgtb
cmpsl
lahf
cmpsl
mov
pushf
cmpsl
cli
rorl
stc
in
jmp
sti
mov
clc
xlat
pop
adc
pushf
das
dec
outsb
jg
jmp
push
aas
test
lock
xchg
dec
mov
enter
pop
sbb
xchg
iret
daa
or
cltd
jbe
lea
or
loope
xchg
add
icebp
pop
sbb
test
xlat
js
loopne
shrl
je
repnz
nop
add
sbb
scas
idivb
fiaddl
fldcw
push
sub
shrl
inc
add
in
lahf
mov
idivl
jp
push
cmpb
ret
rcrb
je
shr
xorl
mov
xchg
add
inc
add
mov
sarl
fyl2xp1
ss
pushf
jb
fdivrs
cmc
cmp
mov
int
outsl
push
add
in
fwait
test
xor
push
xchg
sbb
fcmovu
push
stos
push
push
pop
sub
or
jno
sbb
mov
rorb
int3
adc
outsl
movhps
ljmp
inc
xor
inc
pop
lahf
into
sub
sbb
cld
mov
dec
das
push
icebp
lock
int
mov
out
jns
push
in
push
add
and
andl
fsubs
sbb
jno
and
lret
test
fildl
arpl
seto
sub
mov
lret
push
add
xchg
les
mov
fucomp
loope
int
dec
mov
mov
loope
jmp
add
pop
mov
ficompl
fdivl
xlat
mov
aam
pop
lcall
adc
dec
mov
subl
mov
jmp
into
lea
jl
add
mov
xchg
fsubl
jecxz
fisttpl
adc
push
fwait
mov
clc
push
or
sbb
insl
adc
pop
hlt
mov
inc
sti
xlat
cli
out
arpl
mov
stos
jle
cwtl
test
cmp
aam
jbe
enter
sahf
push
clc
jle
ret
mov
mov
mov
test
pop
jbe
jnp
es
subl
dec
lahf
arpl
cld
mull
pop
ret
je
xchg
shrb
bound
jmp
scas
push
pushf
or
xchg
das
insl
aas
addb
mov
pop
dec
pop
int3
cmp
lods
mov
stos
mov
sbb
sahf
mov
jmp
andb
rcr
adc
je
inc
add
mov
pop
jg
jecxz
jp
inc
xor
call
push
in
lods
push
test
scas
sbb
cmpsb
add
jle
mov
jle
dec
stc
movsb
jne
imul
pop
sbb
inc
pop
mov
syscall
stos
daa
sbb
pop
jb
inc
je
push
mov
pop
shll
mov
mov
aaa
pusha
ret
mov
ljmp
shlb
daa
sub
in
mov
sub
pop
jo
add
adc
adc
pop
inc
dec
cmp
fwait
ds
sub
clc
hlt
push
mov
rcrb
adc
mov
sti
mov
ljmp
data16
out
sub
mov
inc
dec
push
sub
out
dec
fs
clc
into
int3
pop
movsb
aas
cltd
aam
jp
cmp
lret
inc
sub
mov
adc
popf
adc
divb
add
jne
loope
xchg
pop
xor
sarl
dec
in
scas
sbbb
in
mov
daa
in
scas
pop
pop
pop
cmp
cmp
hlt
cmp
mov
test
mov
cmpsl
arpl
loopne
stos
lods
jl
dec
xchg
sub
xchg
fdivl
fimuls
popa
and
cmp
adc
xor
test
or
xchg
aam
into
jne
movsb
or
int3
mov
add
lods
push
sub
ret
outsl
stc
mov
sub
es
or
repz
dec
lods
xor
cli
aad
push
jns
jo
lahf
mov
xor
add
inc
fnsave
dec
sbb
inc
xlat
xor
sbb
adc
xchg
popf
mov
cmp
pushf
dec
nop
shlb
vmread
mov
mov
xchg
sub
dec
pop
adc
jb
notb
in
cmpsb
jns
fisttps
cld
icebp
mov
ds
nop
cmp
daa
stos
aas
adc
imul
mov
inc
jne
icebp
out
pop
xchg
mov
cmp
cmp
shrl
int
pusha
imul
cld
test
bswap
cwtl
stos
cmp
testb
dec
test
jne
or
loopne
cltd
dec
push
cmp
je
movsb
push
or
inc
xor
mov
aas
lods
imul
or
push
stc
repz
cs
add
cmpsl
lds
pop
loop
andb
add
leave
stos
imul
scas
xor
mov
fiaddl
stos
nop
outsb
add
push
out
lret
and
test
fnstenv
jb
cmp
or
jecxz
xchg
ret
lret
bound
lret
jl
clc
mov
mov
mov
jmp
test
mov
push
sub
leave
pop
sbb
enter
testl
push
fcompl
out
aas
add
lea
adc
adc
sarb
dec
lcall
adc
mov
lcall
cmc
pusha
cs
out
add
and
aam
pop
movsb
divb
pop
ret
mov
mov
and
movsl
repz
or
jmp
cmpsl
mov
das
jno
jno
call
adc
jae
stos
int3
or
add
pop
mov
pop
sub
push
repnz
jg
enter
test
cmc
pop
mov
cs
aam
jmp
hlt
inc
sahf
jecxz
and
jp
xchg
xchg
cmc
sbb
flds
mov
lea
fwait
mov
and
jmp
ja
mov
mov
or
or
insb
roll
adc
cmp
adc
sub
sbb
adc
pop
cmp
lock
inc
js
stos
mov
push
lahf
call
rorb
fimuls
mov
scas
je
jl
vpsrad
xor
push
stos
jne
adc
icebp
arpl
dec
fiadds
sbb
sbb
inc
sub
mov
lahf
sarl
addb
or
scas
sbb
adcb
adc
mov
cmp
pusha
jbe
adc
cmp
fisubrs
call
je
lea
scas
mov
stc
jne
pop
aas
cwtl
xchg
andl
sub
jle
jecxz
sbb
push
lea
cmpsb
in
mov
cs
arpl
jbe
pop
push
mov
ss
lcall
call
jg
scas
sbb
mov
push
mov
lods
dec
jnp
rorl
xchg
xchg
les
xor
push
add
movntq
out
pop
daa
mov
rcr
jge
cmp
push
mul
push
pop
pop
xchg
fisttpl
aad
mov
iret
pushf
imul
loop
gs
jle
mov
cld
cmp
stos
shlb
iret
or
cltd
fucom
nop
pushf
stc
js
xor
jne
sub
test
sub
imul
xchg
pop
fstps
fwait
and
dec
mov
loope
ss
sub
dec
sbb
cmp
rcll
call
push
inc
cwtl
scas
pop
cmp
repnz
pop
sbb
outsb
adc
ret
pop
push
inc
sbb
inc
mov
adc
sbb
xchg
push
mov
jg
jo
jecxz
jae
push
or
dec
mov
enter
addr16
lods
and
movsb
outsl
aaa
mov
adc
scas
xchg
ds
pop
nop
mov
pop
enter
stc
cmp
insb
aam
and
and
outsb
in
or
aaa
fsts
mov
push
subb
clc
mov
push
and
scas
aas
into
xchg
data16
sub
lea
scas
mov
popl
pop
pop
repz
add
pop
jecxz
pop
xchg
in
jle
orl
sub
test
and
jo
lcall
arpl
or
xchg
aad
cmp
test
sbb
and
lods
jecxz
push
mov
adcb
or
fadd
arpl
mov
addr16
test
out
lahf
adc
cwtl
test
pop
je
pop
fldt
push
fdivrl
cwtl
push
push
inc
inc
mov
inc
dec
pusha
in
out
xchg
lods
mov
add
dec
das
ret
stos
cmpsb
loop
mov
in
test
xor
aam
loop
mov
out
inc
mov
push
loop
orb
dec
xchg
mov
push
push
xchg
cmpsl
sbb
inc
ja
mov
add
mov
test
push
add
adc
add
sub
jb
push
mov
or
lahf
aad
mov
mov
push
stos
mov
idivb
xchg
sahf
aad
mov
jb
add
lods
inc
jo
mov
cltd
sub
or
shll
add
jmp
lret
push
sarl
cwtl
jmp
in
adc
xchg
sbb
dec
cwtl
jl
popa
xchg
arpl
xlat
mov
bound
dec
outsb
mov
out
in
jbe
and
in
jno
inc
js
cli
outsl
aad
clc
cmp
test
and
ret
fsubr
ret
scas
or
lds
xor
mov
lds
sub
rcll
out
adc
xor
repnz
sbb
je
and
jo
fnstsw
add
mov
imul
scas
hlt
sbb
fs
addl
add
fstl
mov
mov
fisubrs
sahf
jmp
test
arpl
adc
test
xchg
aam
fwait
pop
add
stos
and
scas
xor
mov
add
adc
pushf
mov
mov
fbstp
mov
ja
inc
lods
sbb
sbb
sbb
mov
dec
or
mov
sub
adc
mov
sbb
dec
adc
pushf
mov
add
test
sbb
outsl
xchg
jns
cmp
add
mov
or
xchg
call
lret
mov
cmp
pop
div
xor
xchg
cmpsl
std
in
sub
test
daa
dec
stc
mov
mov
push
inc
add
adc
clc
and
ret
paddsb
leave
mov
cmp
std
jb
xchg
shlb
fcoml
ret
into
ljmp
leave
cmp
les
lea
inc
fdivl
inc
sub
filds
jecxz
frstor
jmp
stos
mov
jns
sbb
sub
loop
jbe
lock
imul
aas
sbb
and
or
sub
ret
out
sub
loopne
fimull
xor
and
lods
dec
adc
ja
rcll
das
cmp
mov
in
ds
sbb
clc
cmpb
and
test
jne
and
stos
aaa
mov
fucomi
outsb
lret
mov
inc
out
loope
ja
in
cli
mov
add
adc
iret
add
inc
adc
lret
ja
and
dec
dec
adc
push
bnd
pop
stos
xorb
test
inc
out
inc
lds
sarl
mov
movsb
add
xchg
jnp
dec
mov
orb
inc
lds
adc
jno
out
addr16
fmuls
push
and
repnz
call
jle
push
into
and
push
test
int3
rol
ja
mov
insb
test
aaa
cmp
ret
sub
in
mov
mov
dec
ficompl
adc
pop
dec
fwait
dec
sub
xchg
sti
out
and
enter
or
je
fldl
add
xor
cmpsl
jmp
lds
jl
sahf
call
add
movsb
cmp
clc
rorb
fwait
pop
or
dec
cld
repz
mov
push
icebp
inc
push
mov
mov
insb
aas
lods
or
imul
bnd
ret
aaa
dec
push
add
cmp
sbb
sbb
add
pop
fwait
imul
lea
enter
cmp
or
fists
lahf
or
mov
add
in
gs
out
lods
or
jge
jecxz
imul
rorb
mov
subb
xchg
xor
jecxz
jae
clc
idivl
add
addr16
jmp
and
pop
pop
or
and
push
sar
jae
add
inc
cmp
jecxz
push
movsl
cmc
fmuls
dec
sub
loopne
nop
jge
test
and
nop
xchg
mov
gs
adc
pop
lcall
nopl
out
aam
je
push
mov
dec
dec
je,pn
cmpsl
xor
stos
inc
test
aad
fchs
repz
cltd
mov
fsubl
sub
inc
adc
fmul
inc
sub
das
push
and
icebp
nop
lret
faddl
or
and
rcr
jle
pop
push
pop
mov
xchg
inc
inc
fbstp
mov
pop
lds
test
mov
bound
pop
sbb
dec
bound
movl
ldmxcsr
push
adc
pop
repnz
inc
adc
adc
divl
ret
fldt
sbb
cli
out
lods
fstps
mov
pop
mov
cmp
pop
mov
jae
imul
lret
cwtl
xchg
sub
lret
jae
sahf
sti
mov
ret
imul
stos
sbb
mov
mov
sbb
stos
pop
pop
dec
imul
jmp
daa
or
xlat
jns
dec
cmpsb
push
push
adc
xor
lahf
mov
daa
jmp
js
and
mov
stc
fldenv
sbb
pop
pop
sbb
clc
and
sbb
jmp
mov
xor
or
data16
jae
lret
jg
mov
dec
mov
cmpsl
or
mov
inc
or
and
and
outsb
mov
scas
in
das
sub
push
xlat
xor
xchg
sub
mov
shll
push
fldcw
sar
adc
add
or
loopne
repnz
popa
shll
ret
cmp
and
pop
jp
jp
sbb
mov
fstps
test
add
xchg
jle
mov
sbb
outsb
fs
fcomps
ds
pop
and
pop
jns
inc
cmp
daa
leave
mov
push
cmpsl
bound
cmc
sarl
mov
pop
test
ret
jecxz
push
es
adc
sbb
sub
stos
movl
andb
shll
adcl
cmp
into
ljmp
push
movsl
mov
fwait
aad
gs
lret
jle
xor
test
outsb
shlb
sbb
xor
mov
jmp
jmp
rorb
cmpsb
fisubs
pop
inc
dec
stc
pop
popa
cmp
mov
mov
or
stc
push
jmp
xor
pop
sbb
outsl
xor
mov
fsub
jno
mov
add
sarb
sbb
xor
or
push
jg
scas
repz
jns
sub
mov
xlat
pop
aam
xor
add
pop
mov
test
test
cmp
ja
cwtl
das
aad
mov
dec
cmp
ljmp
push
dec
mov
data16
int3
test
je
cmp
jne
fs
add
and
xor
sub
and
repz
call
mov
nop
mov
mov
sahf
sub
adc
and
jge
and
sub
sbb
sarb
mov
in
outsb
mov
stos
mov
dec
pop
test
cmp
enter
pusha
into
fstl
xor
cld
mov
outsl
rcll
sub
sub
and
fidivrl
imul
cwtl
test
cmpsb
call
pop
add
cli
daa
fwait
in
repnz
sub
dec
pop
add
loopne
daa
in
mov
adc
jbe
and
sbb
pop
fwait
mov
jb
or
dec
out
ficomps
xorb
mov
and
jae
inc
cmp
mov
sbb
lcall
add
adc
shl
rcrl
add
mov
or
jns
dec
add
mov
arpl
sbb
sub
jmp
das
mov
gs
cmp
stos
mov
xchg
adc
out
pop
test
inc
ljmp
lock
subl
xlat
loop
push
cmp
mov
push
enter
xchg
push
mov
or
mov
xchg
sub
js
repz
pop
fcompl
cmpsb
inc
dec
pop
jo
mov
xor
mov
pop
sbb
jb
dec
les
ret
or
push
jb
enter
shll
xchg
int3
movsl
fcompl
mov
mov
in
pop
or
inc
leave
jne
test
in
and
dec
fwait
mov
or
loop
lea
dec
push
xchg
imul
jmp
add
adcl
sub
lahf
mov
push
cmc
iret
test
cltd
jecxz
and
test
adc
pop
mov
lahf
and
push
and
push
sbb
cld
out
sbb
dec
sub
loope
add
repnz
jl
adc
arpl
xchg
push
fnstcw
imul
and
jb
jmp
aam
popf
ljmp
xchg
mov
sub
mov
mov
std
rclb
mov
cmp
mov
mov
sahf
insl
cmp
es
notl
aam
jle
dec
add
dec
mov
lds
mov
mov
popf
sbb
mov
push
daa
mov
sub
mov
mov
mov
sbb
or
hlt
mov
xor
push
out
xor
ljmp
cmp
addr16
xchg
xadd
loope
test
adc
lret
mov
test
or
cs
jge
sbb
xchg
insb
rorb
outsl
and
xor
movsl
or
inc
pop
pop
adc
outsl
movsl
xor
mov
test
pop
rcr
repnz
push
mov
and
or
push
jge
xchg
xor
shll
jecxz
loopne
fisttpl
lret
mov
sahf
loope
sbb
gs
cld
cld
loop
data16
jmp
shrl
push
jb
test
pop
jne
pop
adc
dec
inc
mov
repz
mov
inc
push
sbb
mov
inc
push
mull
jg
stos
xchg
or
nop
rcr
dec
movb
mov
leave
test
fs
pop
inc
cwtl
stos
or
loope
mov
mov
ja
fnstsw
test
inc
xlat
lret
shlb
xor
mov
mov
pop
mov
shl
push
ja
xchg
lods
pop
incl
dec
mov
mov
jecxz
iret
jmp
push
xchg
pop
jne
adc
inc
push
pushf
les
testb
cltd
aas
and
js
and
insb
inc
lret
jns
push
xchg
mov
cmp
adc
sbbb
fadds
or
sbb
push
js
popf
sbb
mov
mov
movsb
jp
lods
popf
out
xor
add
popf
mov
fnstsw
inc
cli
nop
imul
ss
in
inc
popa
sarb
mov
repnz
stos
xorb
dec
sub
daa
iret
insb
cmpb
jge
fsts
and
daa
invd
sub
call
lret
xchg
lds
pop
into
mov
xchg
jg
das
mov
sub
into
cmovae
adcl
push
lret
jno
jno
out
mov
mov
cmp
inc
stc
push
std
mov
ja
pop
stc
xor
cmp
cmpb
cli
dec
and
ss
xchg
pop
sti
test
ret
rorl
xor
dec
and
in
in
test
adc
ljmp
fsubl
stos
aam
leave
lcall
cs
call
hlt
repz
push
enter
out
pop
jl
and
ret
xchg
cmp
jbe
jmp
fdivrl
xor
ds
or
jge
rcrl
adc
cmp
or
sub
js
in
push
mov
mov
pop
shl
cmc
mov
add
jg
sub
dec
pop
minps
jo
mov
jmp
push
mov
push
add
loop
cld
scas
lods
icebp
das
pop
xchg
xchg
inc
adc
sub
ss
ljmp
adc
lods
pop
lea
add
cs
mov
sti
sub
adc
clc
loopne
push
sbb
mov
std
mov
popa
pop
add
sti
mov
and
add
mov
mov
loope
mov
addr16
mov
popa
jp
pop
add
push
dec
jnp
int3
adc
push
fcoml
fbstp
pop
push
jbe
in
mov
and
dec
push
repz
repnz
imul
push
sbb
xchg
arpl
into
mov
jns
rolb
mov
mov
inc
ss
jbe
xchg
out
cmp
jg
lods
push
pop
pusha
push
dec
pushf
push
aas
leave
jno
shlb
adc
jno
sarb
mov
pop
dec
push
or
xchg
or
call
inc
mov
in
orl
push
in
cwtl
ss
sub
cmp
add
jge
clc
rep
sbb
xor
jbe
add
lods
jg
cmp
pushf
cwtl
and
sub
les
jb
das
imul
lods
shlb
push
mov
mov
mov
xchg
enter
adc
sub
mov
loope
jo
repnz
mov
inc
popa
lds
adc
mov
lret
cmp
fwait
movsb
jns
rorb
int3
sar
inc
adc
mov
add
lods
mov
pop
mov
xchg
adc
inc
add
push
out
subl
sti
sub
jb
or
repz
cmpsb
xchg
fs
mov
xchg
imul
cmp
lods
gs
insb
pop
mov
dec
add
mov
nop
idivb
add
test
or
in
and
jno
jnp
fdivrs
mov
arpl
outsb
das
in
pop
cmc
das
add
adc
das
mov
lahf
stc
movsb
addl
sahf
jo
cmc
mov
push
scas
xchg
mov
jg
ja
push
dec
pop
ret
stos
pusha
xchg
repz
mov
cmc
xchg
mov
add
pop
dec
dec
dec
nop
push
add
fdivr
lcall
out
adc
mov
addr16
scas
fs
std
xchg
loopne
push
in
mov
add
dec
std
and
in
scas
sbb
xor
xor
xchg
sbb
add
push
xchg
aaa
push
push
or
inc
sub
call
adc
jmp
jns
kmovb
fnstcw
mov
loop
aam
xor
adc
ss
pop
loope
test
xchg
inc
xor
sti
insb
mov
mov
cld
inc
xor
push
add
out
ss
xor
pop
xlat
mov
aam
xchg
icebp
testl
insl
mov
sbb
xor
fcomps
int
je
fists
iret
push
sbb
dec
lea
push
fcmovb
lea
movsl
orl
mov
xchg
pop
inc
enter
mov
decb
xchg
lcall
rorb
gs
push
iret
sub
repnz
in
adc
cwtl
cmovne
and
hlt
xchg
pop
sahf
jg
fdivr
inc
ret
sahf
and
andl
and
and
jp
ds
add
mov
int
daa
cltd
xchg
das
sbb
data16
and
pop
or
mov
pushw
sub
mov
les
subl
mov
int3
mov
adc
push
ss
lcall
movsb
xchg
add
int
rcrb
jb
xchg
sbb
sub
add
iret
xchg
aas
inc
inc
std
repz
fdivrs
dec
jo
pushf
jno
xchg
call
dec
xchg
or
add
cmp
stc
lods
jno
mov
xor
pop
inc
fwait
insl
and
ja
outsl
ret
insb
ret
sbb
lods
movsb
adc
dec
dec
call
fisubl
cmc
or
xor
push
and
xchg
pusha
fldt
sub
rcrb
mov
push
jp
pushl
xchg
mov
pop
ljmp
xlat
xchg
fidivl
leave
cmp
mov
inc
mov
mov
jno
into
jno
push
jp
dec
lret
mov
loope
inc
hlt
imul
test
mov
fwait
or
shlb
pop
or
lret
loop
jo
xchg
fcmovnu
movsl
and
enter
popf
jnp
pusha
xchg
fwait
mov
sub
jl
xchg
jmp
into
dec
cmpsb
or
pusha
mov
fwait
push
jae
nop
into
imul
adc
mov
xchg
fnstenv
mov
mov
icebp
push
test
in
clc
lret
insl
mov
pop
loop
mov
cmp
stos
stos
and
bound
add
repz
sti
add
and
fnsave
pop
out
mov
sub
imul
test
adc
dec
pop
fstp
outsb
jg
clc
mov
insb
mov
popf
in
push
in
daa
pop
mov
inc
popf
fsts
dec
testl
mov
jbe
movsb
mov
ds
das
push
nop
pop
cmp
fisubrl
cli
ret
stc
arpl
and
cltd
add
adc
sti
cmp
ljmp
nop
dec
sub
dec
or
daa
inc
std
pushf
clc
mov
pop
ds
les
cmp
mov
stos
lret
mov
aad
xor
adc
mov
rorl
arpl
ss
insb
add
mov
sbb
into
xchg
jg
inc
or
xchg
bound
jge
and
inc
outsb
jnp
aam
push
ret
test
cmp
jns
jmp
inc
xlat
xchg
adc
jle
sbb
jl
dec
mov
gs
cwtl
mov
lods
or
lahf
fucomp
mov
sbb
leave
push
xchg
xchg
mov
inc
insb
xchg
push
shlb
fucomp
push
jno
adc
xor
lret
dec
lcall
dec
rorb
dec
cmp
sub
arpl
dec
dec
cs
sub
in
ds
cmpsl
mov
adc
add
inc
shll
pushf
push
mov
int3
cmp
std
in
ret
lods
sub
movsb
into
iret
es
jae
test
test
loop
adc
and
mov
jnp
sbb
call
inc
data16
jg
mov
add
and
data16
xor
dec
pop
fidivrl
mov
xor
pop
jg
scas
adc
lret
int3
out
insl
sbb
pop
insl
adc
fcoml
mov
inc
xchg
imul
mov
dec
jp
mov
push
add
and
add
sbb
pop
sahf
rolb
fwait
fadds
jns
xchg
repnz
in
fsubrs
sub
jge
loopne
cmp
scas
or
xchg
popf
lds
mov
fdivrl
dec
in
out
push
lds
call
push
and
push
insl
cmc
adc
add
idivb
pop
lods
sub
imul
cmp
jle
rcl
push
inc
aam
push
fs
comiss
sub
mov
xchg
push
push
and
or
pushf
sahf
xchg
mov
inc
iret
cmp
sbb
movsb
xchg
mov
or
push
pusha
mov
sahf
add
mov
sub
add
pop
fsts
inc
rolb
cmp
repz
jmp
das
mov
faddl
sub
cmp
adc
cmp
sbb
loop
fs
stos
insl
int3
add
ds
xchg
push
cmp
jl
movsl
or
mov
jp
pop
cmp
push
mov
and
pop
lock
and
out
sahf
mov
pop
pop
sub
adc
outsb
outsb
xchg
pop
sbb
enter
xor
inc
sub
aaa
icebp
adc
push
mov
imul
out
sbb
jmp
xchg
jl
xor
jnp
xchg
sbb
pop
lock
sbb
imul
mov
sub
pop
into
fdiv
cmp
mov
lock
iret
dec
xchg
ds
xor
lahf
jge
rclb
jge
xor
sti
dec
jmp
or
jns
sub
inc
nop
and
ret
lahf
adc
bound
movsb
mov
cltd
dec
or
adcb
inc
mov
pushf
fwait
or
mov
lods
int
ds
in
sub
add
cmp
mov
jge
inc
jo
cmp
push
aas
sbb
andl
inc
push
lods
out
sbb
cmp
arpl
cmp
mov
add
repz
adcl
pop
mov
jne
xlat
mov
pushf
fisubl
jmp
jbe
shl
adc
adc
dec
shl
and
mov
pop
int3
sbbl
scas
xchg
faddl
push
sbb
inc
sub
adc
out
test
sbb
sbbl
js
stos
jns
inc
push
repz
out
mov
cmp
popf
or
jo
mov
hlt
popa
add
subl
jne
test
stos
iret
insl
xchg
dec
cld
rep
loop
cmpsl
cmp
dec
loop
shrl
out
jo
leave
and
cmp
mov
jle
dec
lea
in
jle
lds
xor
sbb
test
mov
sub
pop
movsl
xor
ljmp
jbe
push
jmp
inc
and
dec
repnz
scas
xor
sbb
add
sbb
adc
jae
scas
addb
roll
adc
mov
jl
push
xchg
dec
adc
or
je
jns
or
clc
test
int3
mov
sub
cmpl
adc
cmpl
jbe
mov
push
testl
bound
sub
add
sub
mov
sbb
outsb
sbb
cld
lds
cmp
sti
jmp
adc
in
stos
push
fwait
inc
xor
add
outsl
jg
in
xchg
popf
adc
push
mov
add
shlb
jne
ss
mov
repz
mov
hlt
scas
dec
cmp
inc
mov
loop
mov
popa
xchg
xchg
pusha
dec
dec
jno
mov
push
lock
int3
inc
lcall
mov
testl
pop
arpl
in
in
fimull
sub
or
sahf
xchg
xor
or
sbb
jp
imul
sbb
sar
nop
leave
mov
mov
cmc
sti
orl
xor
stc
mov
jo
loope
xchg
xchg
imul
dec
or
sbb
std
iret
inc
imul
dec
fisubrs
dec
sahf
int
add
push
or
pop
hlt
gs
dec
jp
call
and
pop
int
mov
xchg
dec
or
in
cmp
divl
es
lock
mov
mov
loop
mov
mov
inc
jecxz
shll
shl
fstp
sbb
push
xchg
jge
cmpsb
add
mov
into
ret
and
ret
nop
jl
cltd
adc
test
adc
lahf
addb
xchg
dec
insb
sbb
mov
push
repz
add
test
push
sub
sub
call
insl
sbb
call
imul
mov
cmp
inc
add
sub
fsubl
leave
stc
add
jmp
les
mov
push
adc
mov
aaa
scas
call
je
cmp
adc
lds
dec
jp
out
inc
sarl
dec
xlat
and
scas
icebp
jle
dec
add
test
sar
jecxz
adc
push
aas
push
dec
pop
mov
push
cmp
and
push
fninit
pop
pop
mov
in
js
push
pop
movsl
addr16
mov
jns
jns
sarb
adc
sbb
aad
aad
add
ja
call
jb
pop
lock
push
int3
cmp
aas
mov
stos
loope
jno
xchg
push
daa
cltd
pop
or
aam
test
rcll
mov
int3
testb
mov
sub
xchg
ljmp
or
or
push
mov
and
loope
inc
sub
jle
fdivrs
into
or
repnz
mov
stos
fld
in
xchg
pop
in
mov
pop
lods
pop
pop
fmull
pop
cli
test
push
sub
mov
dec
mov
pop
cli
fidivrl
ja
cmp
xor
arpl
add
mov
push
stc
aas
pop
inc
int3
shrb
xchg
cmpsl
je
sub
xor
sbb
fwait
popf
mov
ret
xchg
dec
ss
clc
fdiv
or
pop
mov
stc
test
scas
es
lahf
pusha
cmp
pop
mov
xchg
adc
fadd
ret
dec
sbb
sbbb
ror
or
icebp
rorl
in
ljmp
mov
push
and
cmp
mov
rcl
daa
test
xchg
mov
push
jbe
mov
push
imull
xor
push
out
lods
int
testl
dec
mov
ret
xor
sbb
or
or
ficomps
std
mov
pop
pop
lret
mov
ds
push
push
pop
push
nop
in
out
outsl
dec
ds
loopne
dec
pop
cmp
es
push
mov
sbb
adc
shll
push
sahf
mov
sub
popa
lods
dec
aas
dec
or
imull
pop
xchg
add
loope
mov
scas
and
mov
js
add
sub
jecxz
loopne
push
rcll
das
ret
xor
cwtl
iret
and
jl
pop
psadbw
jb
xchg
testb
mov
or
loopne
mov
sbb
mov
jo
dec
cld
insb
in
cmp
pop
pop
push
fdiv
cmp
or
out
jl
gs
pop
in
mov
daa
aaa
cmp
dec
and
pop
nop
pop
or
inc
lea
or
jle
repnz
cmp
cmp
adcl
fildl
inc
push
jecxz
loope
jns
cmp
xchg
and
jno
int3
mov
clc
aad
mov
mov
pusha
adc
xchg
cmpsl
les
hlt
jne
dec
inc
dec
in
movsl
loopne
mov
pop
nop
jle
push
mov
popa
push
test
in
cmc
jl
outsb
pop
or
ret
jne
sarl
aad
xlat
bound
dec
inc
jge
imul
dec
inc
sub
mov
mov
ds
int3
jmp
mov
clc
cmp
rclb
ja
fs
cmp
cmp
fnstsw
in
cmp
sub
mov
outsl
jmp
pop
pop
pop
mov
push
mov
cmp
stc
gs
add
mov
pop
xorb
notb
sbb
dec
ror
pop
aam
xchg
je
mov
and
leave
sub
xlat
stos
sti
add
insb
xor
test
inc
loope
xchg
popa
pop
cmp
mov
jmp
dec
vcvttss2si
dec
orl
decl
push
lds
dec
inc
out
je
testb
shl
cltd
into
popa
xor
sbb
sub
jmp
outsl
fdivrs
enter
inc
xor
mov
or
push
mov
cmpl
xor
pop
pop
imul
mov
cltd
fdivs
or
jg
rorb
cmp
push
into
mov
sbb
icebp
jg
add
loope
xchg
mov
pop
nop
test
mov
jge
nop
mov
fstps
mul
pop
fdiv
cs
jp
and
popf
pop
in
sar
cmp
push
mov
xchg
cwtl
ja
mov
pop
xchg
stos
or
pop
cmp
add
mov
lods
jmp
sub
and
push
cwtl
insl
push
leave
xchg
jp
leave
ljmp
pop
ss
or
shlb
shll
nop
outsb
xor
ret
sub
xlat
jne
xchg
pop
faddl
mov
sub
out
mov
mov
fs
fwait
sbb
fstpl
scas
les
inc
sbb
pop
nop
push
mov
or
inc
inc
push
andb
jle
dec
inc
mov
sbb
or
fistl
cmpsb
cwtl
dec
mov
dec
sub
xorb
mov
xor
pop
repz
adc
in
push
xor
pop
test
in
roll
pop
mov
jb
cmp
imul
add
mov
pusha
add
mov
adc
dec
pushf
mov
int3
int
xor
out
jle
inc
ss
inc
jg
pop
mov
add
cltd
push
mov
loop
aas
sub
leave
adc
pop
sbb
pop
inc
sub
inc
adc
cmpsl
ret
pop
or
shlb
add
rol
fists
or
inc
xchg
jae
fcoml
xor
sub
lahf
ror
xchg
loop
notb
pop
inc
and
movsl
or
adc
or
mov
xchg
jecxz
rcrb
repnz
pop
mov
pusha
cmp
pop
cmp
ret
push
repz
fidivrl
push
fwait
pusha
xchg
adc
dec
hlt
lea
cld
std
add
adc
pop
sbb
cmc
stc
push
out
and
frstor
mov
add
mov
lcall
push
ja
shlb
lret
pop
cmp
fs
out
cmpsl
inc
add
lret
pop
pusha
das
or
add
es
out
sbb
xchg
dec
push
cltd
lret
push
sbb
lds
lock
jp
jmp
mov
stos
loopne
push
popa
cmpsb
dec
outsl
out
lds
scas
lea
xor
sub
mov
fbld
div
aad
lock
inc
jge
stc
and
xor
mov
jmp
or
leave
frstpm(287
gs
cmp
dec
xor
cmpsb
push
jnp
pop
push
rcl
mov
pop
test
push
gs
pop
pushf
filds
pop
or
in
push
mov
neg
inc
push
lods
inc
loopne
es
and
cmpsb
xchg
scas
inc
in
xchg
cld
loope
outsb
adc
jecxz
xchg
mov
xor
inc
call
fistpll
daa
jp
aas
int3
shlb
andl
in
push
int3
addr16
dec
pushl
fwait
lods
sub
and
fstl
insb
push
mov
bound
repz
xor
aad
lret
jle
mov
ljmp
leave
shlb
rcrl
mov
mov
xchg
or
dec
movl
arpl
scas
mov
pop
xchg
mov
sbb
jbe
mov
test
imul
insb
pusha
loope
push
sub
xchg
outsb
sbb
xor
testb
test
shrb
mov
hlt
jne
arpl
sub
push
stos
adc
mov
nop
outsb
mov
xchg
ljmp
xor
cmp
dec
loop
sub
movsb
or
add
ret
call
in
test
inc
in
mov
das
aam
xor
inc
pop
flds
mov
sub
test
push
repz
mov
and
sub
adc
mov
xchg
cmp
and
push
adc
add
pop
inc
mov
fistl
mull
and
repz
mov
cwtl
in
popa
pop
fwait
scas
mov
jo
dec
pop
inc
mov
dec
ret
ret
fcompl
rcl
stc
inc
xor
xor
xchg
jp
fwait
jmp
xor
cmp
xchg
xorl
lahf
sahf
loopne
out
fistl
cmpsb
xchg
sub
sbb
cld
xchg
bound
add
in
out
fsubs
pop
repz
jae
ficomps
iret
pop
cmp
cmp
xchg
jnp
xor
rol
lods
repnz
ret
stc
adc
fcoms
movsl
sbb
adc
and
inc
sub
pop
cmpsl
clc
dec
mov
pop
in
in
push
and
in
jge
add
cmc
push
cld
scas
push
push
cwtl
test
js
push
xchg
loop
cld
cmc
mov
xchg
cmpsb
mov
push
idiv
cmp
xor
in
imul
cmpsl
jg
dec
jb
adc
scas
sub
adc
cmc
test
std
sub
jo
inc
test
pop
inc
jno
outsb
push
push
fimuls
data16
and
pushf
or
jl
jl
push
pusha
aam
cld
mov
sub
mov
in
add
into
mov
scas
cmp
push
arpl
cmp
mov
sbb
jmp
mov
inc
or
inc
scas
loope
add
dec
add
xchg
out
negl
and
in
or
add
adc
sar
bound
sti
cmp
mov
minps
nopl
lret
scas
movsl
cmp
add
out
outsb
dec
test
push
cmpsl
mov
mov
mov
pminsw
loope
and
scas
add
dec
test
xor
cmovl
sbb
ja
sub
dec
into
dec
into
aad
lock
pop
hlt
jp
data16
gs
push
gs
sbbb
popf
mov
mov
ret
insl
shrb
dec
push
or
pop
mov
shrl
and
cmp
push
and
cmp
pop
enter
shrl
dec
jle
adc
sub
mov
push
jl
xorl
ss
jp,pt
sub
adc
cmp
clc
roll
jae
aas
imulb
leave
pop
in
push
jne
testl
or
and
in
fsubrp
ret
xchg
out
mov
pusha
pop
into
insl
or
shll
push
xchg
or
adc
sbb
sbb
add
cmp
pop
sub
pop
imul
push
mov
leave
pushf
sbb
sti
lods
add
loop
push
mov
mov
and
cmc
gs
stc
dec
push
inc
push
xor
and
cmc
sub
add
es
mov
jmp
rol
stc
hlt
dec
sub
cld
push
and
lock
lea
adc
ret
add
xor
fwait
xchg
mov
and
sub
rcl
pop
mov
inc
rcll
add
fmuls
popa
push
stos
mov
int
jae
adc
outsl
outsb
adc
jmp
shrl
cli
sub
sbb
data16
pop
mov
mov
repz
mov
imul
jge
adc
cmc
xchg
cli
out
inc
cmpsl
adc
push
ret
inc
mov
std
mov
fldcw
dec
es
mov
movsb
or
dec
add
out
mov
popf
jle
lds
jne
mov
loopne
adc
push
aad
or
add
and
into
dec
imul
iret
movsl
mov
call
fmul
ret
movsb
xor
lahf
in
mov
test
jo
sbb
push
jbe
out
xlat
scas
sub
sbb
mov
mov
or
push
pop
loopne
push
jo
mov
mov
insb
cld
bound
cmp
push
mov
sub
mov
cs
std
cmp
loop
ss
call
outsl
push
popf
inc
add
psubb
jns
mov
call
lcall
test
enter
test
push
fidivl
ljmp
xchg
rcr
insb
bnd
dec
mov
mov
sbb
xor
xchg
shll
out
in
dec
stos
jnp
adc
mov
in
mov
jbe
sbb
mov
ja
or
jp
pop
daa
xor
dec
aad
jnp
repnz
push
and
and
aad
pop
xchg
mulb
lods
pop
lds
adc
popf
clc
add
lea
cltd
dec
or
sbb
add
mov
movsb
loopne
cmc
jg
imul
lods
enter
jno
aam
cwtl
fwait
push
imul
les
jl
shlb
ret
arpl
jno
lea
xchg
rcl
xor
testl
outsb
cltd
lahf
mov
sbb
imul
sti
pop
mov
pop
xchg
mov
pop
pop
adc
test
dec
add
or
push
mov
enter
sbb
stos
jno
lret
rcr
push
pop
cmp
xchg
leave
lods
push
adc
data16
in
and
inc
int3
and
mov
mov
ret
mov
lock
mov
xor
stc
outsb
push
inc
es
imul
sbb
ret
jmp
and
mov
imul
jnp
mov
jae
test
pop
mov
sub
in
dec
fsts
push
inc
sub
out
inc
out
cli
loop
or
inc
and
and
movsb
xchg
scas
rcrl
push
jle
xor
push
sahf
std
lret
lds
shlb
mov
ficoms
xor
roll
mov
or
iret
pop
fcmovbe
dec
dec
or
in
ljmp
adc
xor
fistpll
inc
xor
orb
sub
and
mov
rorl
adc
sub
mov
xchg
pop
dec
push
andb
repnz
mov
adc
mov
fwait
add
jl
ja
mov
cwtl
jb
mov
ret
and
lret
add
ds
test
das
and
or
js
in
mov
lock
adc
mov
faddl
dec
mov
sbb
lcall
dec
ja
mov
lock
loopne
mov
add
push
xchg
jle
pop
dec
cmpsl
pop
in
out
push
lahf
dec
fs
push
xor
sti
cwtl
adc
insb
and
test
sti
sbb
xchg
jne
data16
icebp
rcl
or
adc
addr16
xchg
aaa
test
and
inc
popf
xchg
aaa
in
pop
xchg
les
pusha
jno
mov
fwait
jg
cmovne
dec
rcl
jae
add
iret
sub
test
iret
insl
cmp
and
test
dec
mov
add
xchg
jnp
or
push
pusha
xor
out
cs
ds
out
mov
cmp
sbb
jl
xchg
sub
in
adc
add
add
iret
mov
and
mov
inc
out
mov
inc
adc
pop
sqrtps
loope
lahf
fmul
sub
or
lahf
subb
cmpl
inc
dec
sub
mov
sub
pop
lret
aam
and
xor
lret
insb
mov
nop
mov
nop
lds
xor
adc
jb
fwait
ss
lahf
loope
das
mov
aam
lock
inc
or
stc
and
pop
ret
and
daa
in
mov
aam
jnp
popf
jae
lea
inc
xchg
push
jecxz
add
pop
fbstp
into
pop
pop
jge
mov
andl
inc
repnz
test
pop
pop
push
mov
xchg
xchg
xor
dec
push
push
xor
pop
inc
add
repz
mov
pop
push
jno
in
adc
lret
sub
imul
jl
pusha
mov
mov
dec
mov
int
enter
cmp
push
mov
nop
push
push
dec
ror
call
inc
mov
push
repnz
std
lret
shll
into
pop
jno
xorl
add
xchg
lock
and
loop
sbbl
xchg
popf
pop
mov
addl
inc
mov
repz
xchg
fs
sub
add
leave
xchg
push
adc
dec
sub
into
ljmp
dec
leave
roll
or
in
push
lods
cld
xor
inc
ror
cmpsl
fcmovbe
icebp
sub
adc
jne
aas
ja
sbb
dec
fcomps
lret
ret
shll
sub
cmp
les
xor
cmp
cmp
xchg
xor
cltd
daa
sbb
sti
cwtl
mov
or
sub
fcmovbe
inc
les
test
shrb
scas
or
and
xchg
or
outsb
mov
ds
jns
mov
ss
test
push
jge
sub
xchg
nop
or
mov
cltd
dec
mov
imul
dec
aaa
mov
out
scas
xor
cmpsb
data16
ja
inc
jo
pop
insb
sti
xchg
negl
stc
adc
or
out
mov
call
dec
pop
clc
cltd
cmp
out
insl
jge
hlt
xor
hlt
dec
jge
std
ficoms
repnz
or
scas
mov
das
xlat
adcb
xor
or
int3
popl
jl
and
push
mov
lcall
int
xchg
cmp
push
mov
sbb
or
add
fsubrl
mov
repz
inc
scas
test
lock
or
int3
mov
out
aad
nop
push
int3
das
mov
repnz
sub
push
dec
inc
in
ret
sbb
cmpsl
stc
adcl
aad
jg
add
sti
inc
and
imul
dec
rol
cmp
shrl
cmp
sarl
cmp
dec
inc
arpl
mov
lock
repz
adc
push
xchg
test
mov
rorb
mov
pop
xchg
push
sub
mov
mov
int
cmpsl
add
and
add
add
jmp
int3
adc
insb
dec
scas
sub
pop
sbb
cmpl
dec
loopne
popa
test
or
stc
rorb
cmc
clc
cmp
arpl
push
js
inc
hlt
ret
ficoms
mov
mov
mov
addb
xchg
mov
push
sub
es
pop
or
test
cmp
xchg
pop
fsts
xchg
push
sbb
cld
test
jno
jmp
testl
fistpl
mov
cwtl
hlt
lods
rclb
mov
pop
cmp
mov
sarl
jl
add
leave
cltd
cld
xchg
add
pop
jbe
jnp
std
xchg
fstps
xchg
call
dec
adc
xchg
imul
dec
xor
sti
mull
out
mov
mov
adc
adc
outsb
jb
subl
dec
ja
scas
adc
or
cmpsl
push
xchg
pop
jmp
int
xor
add
fwait
insb
sarl
or
andb
pop
cmp
mov
ret
sub
push
or
pop
inc
adc
inc
icebp
in
pop
sbb
mov
inc
adc
sbb
pop
popf
inc
sub
pop
mov
ret
clc
cwtl
sub
xor
mov
mov
jno
mov
enter
loopne
daa
mov
test
std
aaa
and
out
in
mov
lods
pusha
xor
xor
dec
add
scas
and
test
lcall
popa
mov
xchg
insb
push
inc
adc
in
add
add
or
das
add
int3
or
xor
mov
mov
jp
or
mov
pop
add
cltd
mov
int3
ret
aam
cmp
xchg
mov
loopne
xchg
jnp
cmpsb
mov
push
test
or
mov
in
out
imulb
push
in
dec
cld
shll
cmp
jg
or
add
sbbl
outsl
mov
das
push
scas
jg
arpl
int3
push
xlat
sub
rorl
fcomps
jbe
pop
mov
into
add
inc
loopne
ret
push
mov
les
scas
dec
mov
dec
adc
insl
sbb
pop
push
add
inc
in
or
jb
and
sbb
sub
xor
jb
out
push
sub
mov
cmp
pop
mov
xor
jnp
mov
push
mov
out
stos
js
add
dec
xchg
xchg
dec
js
call
sub
pop
es
push
jns
add
fstpt
bnd
cli
aam
adcl
mov
ds
and
push
push
xchg
adc
inc
or
test
jno
and
dec
movsb
pop
pop
adc
addl
ljmp
xchg
xor
ja
call
or
xor
sub
sbb
sbb
incl
xor
push
dec
cmpb
sub
lret
mov
fidivrs
pop
fsubs
insb
mov
rcrb
pop
inc
fstpl
test
jle
mov
xchg
aad
mov
pop
outsl
test
imul
out
mov
and
xor
out
cmp
pusha
es
add
loop,pn
xchg
xchg
or
mov
ljmp
aas
push
mov
cmp
cmpsl
or
adc
pop
sub
mov
inc
ds
mov
int
int3
pop
pop
mov
jmp
pusha
mov
int
jo
ja
ds
orl
dec
pop
fisubs
xchg
or
shlb
xchg
xor
enter
adc
push
and
mov
into
stos
dec
cmpsb
cltd
mov
jae
inc
sti
sub
cmpsb
popf
pop
mov
ja
jmp
stos
lock
lods
bound
mov
sub
xlat
adc
adc
test
outsb
sub
mov
inc
jg
jle
inc
mov
jecxz
add
ret
mov
xor
scas
inc
nop
call
push
lea
inc
pushf
loope
shlb
das
adc
pop
lods
dec
cs
mov
mov
xchg
int3
adc
in
add
imul
adc
test
sbb
mov
xchg
mov
int
mov
dec
ja
dec
or
daa
adc
xchg
mov
repnz
leave
lahf
dec
mov
push
movsb
daa
pop
ss
mov
push
add
jne
xchg
out
adc
gs
add
popa
push
test
mov
stos
repz
dec
add
je
dec
jb
gs
mov
repz
or
push
cmp
jg
jnp
push
jne
mov
icebp
ds
pop
jb
jle
and
loopne
lret
lea
fwait
lock
dec
push
imul
mov
aad
das
daa
xor
adc
scas
lea
lods
aam
jg
mov
adc
sti
pop
cmpsl
push
jb
xor
mov
arpl
mov
addr16
sub
loopne
cmp
push
cmp
push
incl
in
sbb
inc
cs
imul
lock
popf
int
outsb
ja
int
cmp
mov
sti
mov
out
or
or
mov
inc
mov
cmp
pop
aas
hlt
negb
shlb
xchg
js
fstpt
pop
push
out
pop
cmp
cmp
dec
ljmp
test
dec
mov
loopne
test
leave
movsl
xchg
push
nop
dec
jae
ljmp
pushf
shl
arpl
jae
lcall
xchg
data16
sbb
inc
jnp
mov
scas
lret
out
hlt
mov
mov
xor
aad
test
imul
aas
mov
lods
cmpsb
dec
and
jg
andb
push
aas
movsb
lahf
shll
mov
hlt
aaa
cmc
cmp
add
jp
jmp
or
scas
mov
cld
inc
lds
lods
call
aam
mov
mov
sbb
jg
cmp
test
int3
in
fs
jns
test
rol
push
fs
das
dec
add
ljmp
or
pop
or
adc
xor
iret
loopne
xchg
dec
scas
jmp
inc
pop
jge
das
sbb
repnz
push
imul
xlat
sub
scas
subb
add
arpl
loopne
in
sbb
xor
mov
aad
fwait
dec
xor
das
mov
testl
clc
xor
lds
mov
dec
fisttps
pop
and
shrl
pop
daa
mov
enter
dec
xchg
testb
jmp
jnp
push
bound
scas
mov
push
outsb
sti
out
mov
cmpsb
mov
jns
popa
push
inc
shlb
ljmp
ret
lret
fs
xor
sarb
addr16
ds
cmp
mov
cmp
aas
push
mov
lret
daa
cmp
inc
or
add
lods
cmpsb
pop
nop
inc
push
scas
pop
cmpsl
in
push
es
or
cmp
and
and
out
testl
pop
loope
lea
stos
mov
jecxz
cmp
mov
mov
stos
fiaddl
sbb
repnz
mov
pop
aas
mov
mov
aam
cmc
pop
or
pusha
pop
ljmp
jg
mov
mov
and
jp
out
and
cmpsb
shlb
xchg
mov
adc
int3
divb
and
pop
stc
push
insl
loope
out
arpl
ret
xchg
pop
repz
mov
jecxz
hlt
mov
dec
cmp
inc
pop
decl
out
aaa
xlat
cmp
sbb
ss
pop
sahf
jbe
mov
cmp
pushl
pop
cmp
lods
gs
sti
xor
or
loopne
cwtl
jne
fstps
mov
adc
push
xchg
jg
arpl
test
add
out
pop
test
push
or
gs
add
jns
cmp
and
push
sbbb
pop
das
inc
sahf
xchg
cmp
xor
xchg
or
pop
out
sub
dec
test
bound
movsl
inc
jle
out
popa
fwait
lock
fisubrl
jmp
jno
or
orl
imul
sub
rcll
mov
cmpsb
push
pop
push
out
jecxz
cmpsl
loopne
fwait
popa
addr16
stos
cld
inc
adc
fmuls
xor
gs
add
add
daa
out
sbb
mov
cmp
push
jbe
insb
lret
adc
loopne
push
sub
lock
sbb
cli
jo
pushf
stc
jne
shll
gs
add
es
lret
imul
jecxz
sub
jmp
mov
sbbl
dec
cwtl
inc
sbb
fimull
lods
sub
leave
repnz
test
push
imul
xor
adc
xchg
mov
sbb
mov
xlat
pop
aaa
jl
push
cmpsb
lock
xchg
jb
divl
insb
rolb
fcmovb
inc
sarb
push
into
outsb
mov
pop
std
add
xchg
nop
pop
leave
sub
scas
mov
lret
or
pop
mov
adc
mov
jecxz
lock
add
decl
pop
dec
mov
sub
cmp
and
and
outsl
pop
mov
or
iret
sub
jmp
repz
mov
xor
in
mov
scas
pop
loopne
inc
cwtl
xor
aad
ret
xor
mov
enter
stos
add
adc
lods
pop
pop
in
dec
imul
xor
shrl
xor
mov
mov
movl
mov
push
xor
jg
adc
push
sub
inc
and
dec
dec
xor
out
jp
inc
shrl
inc
push
pop
in
jg
out
lret
jle
aam
in
sub
sub
in
push
push
pushf
or
sub
arpl
inc
cwtl
pop
mov
mov
test
cmpsl
adc
xor
aas
sub
inc
js
jbe
jg
cmp
je
movsl
dec
jle
je
push
inc
xor
add
leave
cmp
jl
jmp
add
xor
and
or
cmp
jns
pop
and
ja
rcr
pop
scas
mov
lea
loope
in
cmp
stos
test
pop
lret
pop
xchg
push
clc
sbb
add
cmc
xchg
mul
aad
sti
mov
cmp
ss
clc
xchg
adc
pmuludq
shll
pop
addr16
movsl
cmp
movsl
adc
dec
jnp
and
pop
jno
xchg
sarb
mov
cli
cld
xchg
xchg
jmp
ss
inc
mov
testl
lea
xchg
rcrb
mov
fcmove
shrb
or
or
lcall
in
orl
sbb
and
sahf
xor
or
test
mov
adc
daa
fadds
dec
and
movsb
aad
inc
je
xor
lahf
pop
inc
ja
nop
stos
shll
pop
pop
sbb
aas
mov
repnz
into
inc
cs
lods
cmp
inc
cmp
or
jmp
cmp
lret
mov
cli
ret
adc
xor
roll
mov
ja
mov
test
inc
or
mov
in
shrb
stos
mov
sti
mov
scas
sbb
and
pop
or
imul
outsl
sub
ds
movsb
rclb
scas
push
rclb
in
dec
mov
sar
out
push
sbb
sahf
mov
mov
sbb
movsb
outsb
dec
xchg
aas
sbb
inc
jne
test
mov
subl
push
lds
popf
les
stc
sbb
cmp
mov
and
fsubl
add
and
mov
lret
inc
add
nop
sbb
mov
nop
aad
pushf
cmpsb
cli
xchg
mov
push
test
inc
push
lds
daa
jle
jecxz
sbb
mov
pop
sbb
or
cld
test
mov
rorb
sarl
cltd
lret
pop
mov
sahf
adc
ret
insl
iret
or
sub
jae
xor
xchg
repnz
ljmp
je
mov
sbbb
xor
cld
test
cmp
out
std
in
outsl
push
stos
push
xchg
lahf
add
push
or
sub
js
mov
bound
mov
add
frstor
xor
test
test
hlt
cltd
daa
ds
sbb
xchg
stc
add
sbb
scas
cwtl
stos
dec
fnstenv
std
out
sbb
test
mov
sbbb
or
mov
xchg
or
xor
in
sbb
rorl
jnp
mov
cmp
in
mov
xchg
movsb
inc
ljmp
mov
xchg
ds
testl
lods
push
fwait
dec
or
sub
or
xchg
cwtl
out
mov
aam
popf
sub
arpl
es
test
dec
pop
movsb
mov
mov
lods
add
sbb
dec
or
cld
pusha
cmp
mov
jecxz
and
mov
adc
xchg
aad
cli
and
pop
in
das
inc
cmpsb
adc
inc
aam
loopne
decl
sub
out
xchg
cmpsb
xor
or
mov
sub
ss
mov
adc
mov
insb
adc
jno
int
insb
aad
push
call
mov
lcall
loope
adc
gs
add
pop
xchg
or
and
mov
ja
adc
jnp
push
push
test
shl
and
lcall
cli
notl
pop
aam
jecxz
mov
sub
incl
push
mov
pop
mov
push
jl
and
jns
dec
cmp
hlt
rorb
adcl
jge
xor
out
mov
adc
push
leave
fmull
push
sbb
aad
and
lret
cli
sbb
pop
fwait
mov
inc
mov
lods
dec
mov
mov
push
test
imul
cmp
dec
fstl
imul
dec
xchg
test
test
negl
cltd
clc
in
mov
lock
sbb
lock
and
mov
adc
mov
out
jbe
pop
dec
cmpsb
cmp
std
ret
sbb
fdivl
clc
mov
inc
fcmovnbe
cmpsl
fs
idivl
fcoml
sub
dec
or
pop
fcmovbe
movsb
incb
hlt
leave
out
cmp
xchg
or
outsb
out
rorb
shll
loop
out
rcrb
test
mov
cld
adc
popa
adc
push
stc
daa
push
enter
rol
call
xchg
or
setl
ja
dec
cmp
pop
mov
pusha
test
aaa
outsb
popa
stos
adcb
lret
pop
cmc
pop
and
iret
stc
jbe,pt
aad
push
loop
nop
in
xor
mov
loope
iret
test
addr16
sbb
and
xor
sbb
pop
jae
mov
xorl
inc
in
fmul
push
jg
insl
cs
movb
mov
ss
mov
dec
les
notl
aad
sub
mov
jns
jnp
sbb
xchg
mov
adc
stos
sbb
jns
scas
xchg
call
sub
lret
addl
cltd
pushl
sti
and
or
lret
aam
jp
mov
pop
mov
dec
dec
or
xchg
sahf
jbe
jp
pop
sbb
mov
mov
aas
adc
out
mov
push
imul
sbb
dec
and
idivb
popa
xchg
jnp
ss
data16
out
mov
mov
ret
or
aad
xor
push
shlb
sti
enter
icebp
and
lods
inc
fcoms
xlat
xchg
fdivrs
cmp
push
mov
push
xor
in
xor
inc
jl
roll
sbb
in
mov
negl
push
or
cmp
loop
sahf
pushf
xchg
add
bound
imul
fsub
jl
mov
inc
pop
adcl
jno
cmpsb
lret
xor
ficompl
inc
in
xchg
sbb
sbb
mov
idiv
lret
fstps
fiadds
adc
pop
add
aaa
jnp
fsubrs
popf
or
or
jle
test
mov
fnsave
cli
jmp
push
lahf
movsb
hlt
adc
mov
fbstp
mov
hlt
out
stos
outsb
add
push
adc
mov
xor
xchg
add
xchg
jmp
je
fsubrl
aas
xor
jle
pop
js
push
gs
ljmp
mov
fisubrl
rcll
clc
jecxz
sarl
lcall
inc
inc
push
cmp
test
data16
ljmp
gs
stc
lock
push
nop
les
arpl
xor
cmp
or
and
pushf
adc
imul
or
push
and
push
ds
sbb
pop
mov
xor
fcomip
test
or
shll
sub
leave
push
xchg
movsl
insl
fcmovu
add
adc
xor
inc
loop
mov
js
add
jnp
xor
push
and
data16
and
sub
push
push
insl
mov
repz
stc
fwait
int
in
push
cltd
fcomp
js
mov
enter
in
int3
insb
push
mov
daa
aaa
cmpsb
adc
in
pop
iret
jg
sub
outsl
add
cmp
pop
adc
dec
adc
pop
imul
std
add
mov
mov
sbbb
push
ret
fsubp
xor
test
mov
inc
sub
in
out
mov
xchg
push
pushf
test
mov
pop
jp
pop
push
lahf
push
adc
cmp
mov
in
sti
fldt
nop
inc
rcrb
rcll
mov
negb
sbb
inc
or
mov
insb
dec
xor
jecxz
adc
or
sti
or
inc
jp
popw
sbb
jmp
imul
sbb
pop
xchg
cmp
nop
sbb
jmp
mov
xlat
leave
jns
lret
ret
cmp
mov
nop
jge
pop
cmpsl
jno
mov
test
lret
bound
dec
push
mov
or
rcll
jo
das
adc
jl
test
push
test
cmc
pop
jbe
les
scas
dec
int
push
bound
repnz
cmp
cmc
mov
dec
inc
clc
fwait
push
ret
mov
xchg
cmp
mov
loope
and
xor
cmpsl
mov
inc
lods
aas
fs
jbe
shl
hlt
or
imul
fsubrl
leave
push
dec
jae
jo
outsb
cwtl
aam
shrl
in
nop
in
shl
es
add
pop
cmp
cmp
ds
ljmp
pop
cs
pushf
cmp
inc
adc
or
cmpsl
dec
daa
ljmp
aam
mov
scas
clc
in
movsb
fbstp
cmpsb
daa
or
push
push
jno
inc
pop
and
pop
mov
cmp
sub
sub
push
push
int3
ret
roll
lods
call
dec
mov
scas
stc
leave
push
adc
imul
add
cwtl
cmp
pinsrw
aad
rcl
and
outsl
int3
fimull
xorb
cwtl
fildl
mov
mov
les
mov
pop
push
cli
scas
arpl
icebp
out
cmp
jno
add
push
mov
add
mov
mov
or
orl
xor
roll
mov
out
ljmp
dec
es
xchg
push
xor
test
pop
mov
jns
inc
xchg
mov
fstpt
and
pop
nop
push
xor
fstl
cld
sbbb
xorb
push
jmp
outsl
stc
inc
inc
cltd
pop
ljmp
mov
in
movsl
jmp
in
or
dec
add
cwtl
mov
jne
or
lret
ret
repnz
shrb
aas
out
enter
addr16
pop
std
mov
mov
clc
jg
inc
lret
les
sbb
gs
dec
pop
pop
pop
push
ljmp
insl
fptan
mov
add
sub
mov
push
mov
lret
pop
and
inc
nop
jne
notb
inc
mov
jae
aaa
jae
sti
inc
fwait
mov
xchg
sbb
dec
xchg
xor
loope
repnz
cli
add
add
mov
cli
das
push
mov
mov
push
int
inc
repz
dec
jbe
xor
loope
loope
jno
mov
out
push
dec
sub
or
loop
and
sbb
cmpsb
mov
lds
aad
iret
mov
adc
dec
rorb
lret
shrl
stos
xor
pop
push
xor
push
xchg
mov
insl
mov
ljmp
andl
and
fisubrl
jle
fs
mov
fisttpll
pushf
mov
testb
popf
pop
xor
inc
xchg
cld
ret
movsl
adc
sub
movsb
ja
aad
dec
sbb
cmp
push
lods
or
mov
sub
cltd
mov
ja
push
and
inc
test
cld
or
cli
ret
arpl
hlt
stos
daa
push
add
push
out
test
and
icebp
mov
fildll
adc
push
in
loop
jge
jmp
sbb
mov
xchg
mov
dec
push
mov
jp
mov
int
sbb
adc
sub
fcoms
jb
ja
pop
add
xchg
pcmpeqd
jo
outsb
push
aam
and
js
dec
cwtl
in
xchg
testb
test
mov
lock
jo
fistps
cmp
jb
shrl
dec
addr16
nop
shrl
aad
adc
movsl
pop
xor
mov
cwtl
clc
and
jae
and
cld
dec
cmpsl
loopne
aam
sbb
pop
mov
repz
loope
ljmp
iret
cmp
out
push
out
push
ret
sub
ds
ds
fldt
adc
hlt
lret
ret
pop
out
les
es
cmp
sbb
add
stc
add
dec
mov
dec
stc
push
fisubs
les
cmp
iret
xchg
mov
movsb
and
cmp
sub
cld
cmp
sub
push
or
adc
and
dec
inc
pop
loopne
jp
jle
push
fiadds
fxch
xchg
adc
movsl
dec
sbbb
clc
imul
clc
adc
test
xor
outsb
or
push
out
repnz
push
and
inc
rcrl
lods
cmp
push
addl
pop
jo
jae
outsb
daa
mov
outsl
mov
pop
scas
inc
mov
je
adc
arpl
jb
aaa
in
push
add
lret
fnstsw
enter
std
jp
insb
addr16
imul
jmp
arpl
dec
dec
pop
pop
out
inc
arpl
sarb
mov
mov
sub
cmp
sbb
and
in
xchg
fucomp
inc
jnp
xchg
out
faddl
adc
insl
xor
mov
outsl
dec
push
or
jnp
fadd
pop
inc
rorl
sub
leave
xchg
imul
mov
mov
int
ficoml
mov
lds
loopne
and
xchg
xchg
rcll
cmp
xor
popf
aam
inc
pop
push
std
mov
sub
jnp
loopne
xchg
je
lret
popa
leave
sub
call
xor
xchg
lcall
or
adc
ljmp
and
or
and
mov
test
add
and
lret
and
cltd
mov
insl
movsl
daa
dec
mov
shrl
adc
test
test
cmpsl
mov
add
aas
les
lods
shl
xchg
lds
leave
mov
cmp
sahf
xor
out
fnsave
pop
xchg
sbb
mov
or
jbe
push
aad
test
out
pushf
mov
daa
ret
or
mov
or
ljmp
hlt
sbb
fs
jle
dec
fimuls
mov
or
sbb
or
call
cmpsl
int3
outsb
mov
bound
jns
pop
xor
cmp
aas
andl
xchg
pop
mul
ljmp
adc
sub
int3
mov
into
and
and
cmovg
sbb
into
xchg
call
ret
mov
bound
adc
clc
inc
popa
xor
ljmp
adc
pop
repnz
fmuls
mov
add
adc
mov
sbbb
shrb
repz
pop
out
pop
xor
fcompl
jb
pushf
adc
pop
push
jmp
or
cmc
sbb
cmc
pop
add
inc
fs
mov
inc
adc
cld
pusha
nop
pushf
dec
data16
cli
stc
pop
lret
fistl
fs
push
hlt
aad
mov
aaa
sub
test
insl
jecxz
push
cmp
test
adc
sarl
adc
jb
push
cmpsb
xchg
add
xor
push
fdivl
inc
mov
loope
xor
sub
push
rorb
loopne
repnz
inc
sbbl
push
cmp
mov
mov
call
jbe
ljmp
adc
lahf
push
notb
add
pop
ds
scas
lock
dec
sub
jecxz
test
jmp
icebp
mov
pop
dec
mov
xor
mov
inc
daa
sbb
push
and
movsl
ds
stos
mov
add
and
cmc
stos
pop
jo
xor
mov
das
xlat
inc
and
xchg
jge
jbe
mov
js
cwtl
jp
fsubs
test
jmp
enter
sbb
rorb
sti
push
hlt
or
pop
jb
push
xorl
mov
push
clc
push
xor
iret
popf
orb
pop
sub
lods
rclb
js
movsl
and
pop
faddl
outsb
stc
xchg
movsb
mov
mov
scas
and
mov
dec
popa
add
les
inc
xchg
mov
or
movsl
out
adc
outsb
pop
imul
cs
fs
nop
push
mov
or
aas
loop
into
addr16
xchg
jae
fdivl
sub
scas
idivl
loope
add
pop
cld
and
jo
mov
out
ds
out
gs
mov
outsb
mov
pop
popa
or
mov
push
and
inc
xor
or
fidivs
lods
add
test
cltd
ja
scas
jmp
adc
aam
push
push
data16
out
cmp
imul
dec
xchg
jb
xor
ret
arpl
dec
add
mov
dec
inc
cltd
mov
hlt
lahf
or
pop
movsl
pop
jne
push
add
push
push
call
sub
fisubl
cld
dec
and
pop
repz
xchg
jg
lea
and
je
inc
mov
sub
push
aaa
test
push
or
xor
mov
push
lea
and
push
aad
pop
insb
sbb
mov
cmp
jbe
aam
lods
push
mov
sbb
mov
jo
xchg
xchg
ret
fld
rorb
xchg
movsl
pop
cmp
jle
stos
aad
lods
jno,pn
scas
adc
gs
add
mov
out
in
push
xor
mov
sbb
out
sub
and
leave
jb
sbb
sub
inc
leave
mov
xchg
adc
jg
shl
dec
in
add
pop
outsb
jecxz
adc
inc
std
pop
xchg
lods
and
imul
inc
int3
push
adc
inc
and
mulb
je
cmp
ds
test
inc
add
push
mov
pop
out
mov
xchg
inc
cmp
cmpsl
leave
jo
xchg
rorb
jae
data16
xchg
cld
and
mov
mov
jle
aaa
dec
in
or
xlat
incb
or
les
adc
xor
xchg
fimuls
mov
je
repnz
lea
shl
sti
mov
ficoml
scas
xor
lcall
inc
ficomps
pusha
push
and
mov
fcomp
out
das
cmp
aaa
bound
mov
inc
cltd
add
inc
push
xchg
push
dec
mov
add
movsl
lret
loope
mov
inc
xchg
cli
testl
insb
stc
pop
lahf
jnp
test
stc
arpl
sub
push
andl
fisubs
inc
lea
les
cwtl
daa
jbe
xchg
add
pop
lcall
enter
inc
mov
xchg
insb
mov
cli
nop
clc
xorl
fstps
pop
push
xchg
push
insb
add
cmpsl
ljmp
aam
mov
dec
push
mov
push
jno
out
test
mov
or
mov
rorb
push
inc
sbb
ja
lcall
hlt
inc
ret
ret
int3
out
lods
test
loopne
das
push
xor
iret
int
scas
popf
out
fadds
aad
mov
out
call
xor
push
mov
jmp
xor
sub
aad
js
loopne
lods
scas
arpl
adc
add
lahf
mov
in
sbb
sahf
stos
pop
sub
arpl
push
stos
mov
mov
pop
push
lret
sub
sbb
leave
pop
pop
pop
adc
insl
sub
mov
dec
roll
jne
or
add
jge
popa
sub
lahf
lea
sub
fwait
jno
aas
lock
cltd
adc
ja
dec
xor
das
mov
stos
sub
and
or
cmp
dec
inc
inc
pushf
sub
daa
dec
xchg
lods
ret
mov
negb
jno
mov
lret
or
pop
and
out
pop
xor
pusha
outsl
movsl
push
fs
imul
sub
in
aaa
xlat
imul
ret
xchg
in
ljmp
test
add
cmp
movsb
outsb
lds
xchg
subl
adc
mov
add
pop
cmp
adc
add
sub
std
mov
jp
adc
out
lret
sti
in
fsubl
mov
mov
stos
addb
jns
cmp
mov
xchg
aaa
outsl
imul
add
adc
mov
sbb
cmp
inc
leave
dec
jmp
lds
adc
push
ljmp
push
stos
cmp
add
inc
cmp
std
mov
dec
aam
push
imul
int3
pop
out
mov
std
clc
mov
out
dec
outsb
adc
mov
mov
pop
daa
dec
fidivrs
push
mov
test
push
enter
imul
cmp
mov
mov
testb
mov
mov
xchg
jp
and
pop
mov
ret
xchg
push
dec
xchg
test
scas
mov
mov
fldl2e
ret
adc
add
inc
pop
mov
dec
es
das
or
sbb
scas
push
or
nop
mov
mov
mov
fcoml
push
sbb
addr16
push
cs
adc
cmp
imul
loope
xchg
sti
fcomi
fildl
cld
pop
cltd
aam
adc
dec
rcll
inc
xchg
or
popf
pop
push
rcr
test
stos
xchg
sub
sub
push
pop
outsb
mov
in
dec
push
sbb
mov
in
fdivrs
push
or
mov
push
ss
incl
outsb
or
push
imul
sbb
in
pushf
cli
vphaddbw
adc
adc
dec
lahf
in
mov
sub
mov
jb
ss
insb
scas
js
inc
mov
movsb
push
add
xlat
dec
lock
fdivr
mov
ret
lds
aam
sub
push
push
mov
pushf
mov
jbe
scas
xchg
mov
clc
dec
pop
adc
mov
mov
rcrb
and
test
dec
lods
mov
push
and
out
and
jecxz
inc
push
push
ret
and
imul
stos
cmp
mov
xchg
mov
add
movsl
lret
movsb
scas
dec
cmp
dec
jle
add
popf
out
jne
addr16
ja
sarb
xlat
xor
fcomi
jo
int3
std
xchg
xchg
jp
sbb
pop
jne
dec
add
je
gs
jb
dec
mov
jns
mov
lret
enter
iret
jne
mov
jmp
push
andl
dec
fimuls
mov
sahf
ja
sbb
pop
pop
imul
pop
shl
xor
and
lods
mov
popa
mov
xchg
pop
sbb
pop
jno
je
jle
mov
out
dec
and
sbb
ss
cmp
mov
icebp
adc
cmpsl
pop
lods
and
sub
jnp
or
aam
mov
into
sbb
lahf
rol
push
adc
rcll
add
xchg
mov
fwait
jo
push
adc
lds
push
xor
push
mov
mov
data16
je
repnz
push
xchg
enter
inc
inc
test
adc
out
pop
rcll
xchg
push
pop
outsl
sbb
js
adc
dec
aas
or
std
push
imul
aam
pop
adc
fbld
std
jge
inc
jo
add
into
bound
xor
hlt
adc
outsb
lods
dec
xor
sub
aas
test
cmpsb
pop
stos
mov
sub
int3
stos
inc
push
mov
orb
or
cmp
dec
loope
dec
mov
inc
lods
mov
sbb
inc
add
jae
mov
sarl
aaa
jo
popf
mov
push
inc
std
stos
and
cmc
or
jge
shrb
cs
rol
or
lea
cmpsb
mov
es
out
mov
push
orb
mov
xchg
sub
cmpsb
into
xor
push
fistl
insb
shl
mov
test
push
dec
mov
xor
jmp
add
adc
mov
mov
or
or
loope
shll
add
int3
add
pop
xchg
insl
mov
addr16
mov
jecxz
outsb
dec
push
adc
sbb
xor
cltd
inc
adc
in
push
lods
cmp
and
in
cmp
xor
sub
xchg
inc
out
ljmp
add
insb
jecxz
adcb
sub
cwtl
mov
pop
jno
loopne
cmc
movsl
inc
xchg
mov
mov
inc
push
push
or
sub
adc
xor
mov
stos
ds
xor
lods
sbb
scas
dec
mov
push
or
pushf
sbb
pop
add
mov
repnz
xchg
jecxz
cmp
cmp
adc
loope
pop
cmp
cwtl
jge
and
arpl
mov
stos
cmpsb
or
mov
das
mov
xchg
pop
and
jle
sbb
cmp
dec
xchg
outsb
cmp
mov
jns
aaa
mov
cs
sbb
pop
imul
cmpl
jmp
pop
xchg
aas
jo
jmp
mov
xor
repz
fsubrp
ret
mov
call
daa
push
sbb
out
xchg
push
adc
icebp
pop
adc
sub
dec
inc
test
cmpsb
scas
inc
shrl
mov
lret
or
xor
mov
xor
jge
out
xchg
int
jbe
jp
movsb
aad
fs
jmp
loopne
pushf
ficoms
scas
mov
dec
fiaddl
loop
arpl
or
outsl
lods
mov
pop
into
lret
sub
stc
xor
lods
push
and
cli
jb
mov
fwait
adc
jge
mov
cltd
ljmp
adc
cltd
or
adc
mov
in
incl
and
cmc
out
xchg
dec
pop
jb
dec
push
mov
mov
or
jge
dec
scas
jl
jae
xchg
dec
inc
sarl
je
popf
jns
fimull
push
arpl
xlat
aad
testb
bound
push
clc
xchg
cwtl
push
repnz
adc
cmpsb
push
arpl
push
sbb
cmp
dec
lret
xchg
and
or
lret
outsl
ret
xor
mov
xchg
lds
fcompl
pop
mov
leave
cmp
mov
add
jle
scas
push
scas
cltd
shll
push
sub
lret
lcall
call
push
test
xchg
pop
dec
enter
xchg
in
addr16
cld
stos
aam
lcall
icebp
sub
in
in
cmpsb
sbb
dec
adc
pop
into
stos
subl
or
lock
push
adc
imul
mov
jl
lcall
popa
sahf
lahf
shll
dec
mov
ret
scas
mov
xor
inc
xor
std
or
in
in
addr16
or
addb
xchg
jne
ret
dec
pushf
xlat
xor
jge
mov
add
mov
sub
jnp
jo
xchg
repz
outsl
xchg
cmp
cwtl
jp
ds
jle
mov
inc
ja
sar
fldl
sbb
mov
cmp
outsb
andb
gs
movsl
jnp
add
and
dec
in
lock
fwait
mov
cmp
fnsave
xchg
popa
movsb
scas
pop
cmp
das
out
or
add
inc
faddl
jl
leave
jbe
pop
sub
dec
rclb
xchg
push
mov
call
aaa
je
ds
aas
push
iret
push
push
xchg
out
mulb
sub
and
push
push
dec
dec
repnz
scas
test
scas
scas
hlt
rorb
pop
and
fs
fimull
dec
xor
mov
push
pop
cmp
inc
movsl
and
call
dec
icebp
pushl
popf
dec
dec
insl
and
or
call
inc
int
mov
lods
sbbb
jp
fstpl
adc
fisubl
rorb
mov
fisubl
test
outsl
jge
sahf
leave
ja
nop
mov
jb
sti
mov
jle
inc
icebp
jecxz
dec
cmpb
push
xchg
aaa
pop
loop
and
jp
loope
push
movsl
inc
xorb
dec
sub
push
push
lods
cmp
sub
xchg
insl
sbbb
cli
dec
mov
inc
sti
aaa
push
inc
movsl
sbb
sbb
xor
jo
dec
cmp
loop
das
xchg
pusha
loop
rorl
mov
adc
lcall
je
bound
arpl
ja
into
bound
fnstenv
nop
inc
cmp
rol
std
inc
stc
jae
cmp
por
jbe
pop
pop
sahf
push
adcl
sti
sub
das
aam
divb
aas
push
and
fwait
out
mull
scas
imul
clc
mov
in
inc
and
jo
sbb
lods
cmpsb
or
scas
xchg
enter
pop
sbb
popf
repz
loop
and
or
into
mov
test
mov
es
cmpsb
xchg
dec
cmp
sub
jmp
mov
inc
jmp
daa
loop
xchg
xchg
call
mov
jae
lcall
insl
pop
sub
cmp
je
push
and
jne
out
sub
mov
cld
insb
cmp
pop
fstl
mov
mov
pop
mov
shll
mov
int3
jbe
enter
mov
jge
push
das
and
xchg
sbb
popa
sub
neg
gs
xchg
jg
iret
xchg
jp
fldl
insb
stc
xchg
shl
xchg
aam
lcall
mov
cwtl
sbbb
out
fst
pop
sbb
xchg
xchg
sbb
pop
inc
xor
cs
call
stos
pusha
cs
or
push
icebp
xchg
aam
mov
sub
mov
shll
or
pop
clc
mov
sti
push
push
addr16
and
push
xchg
xchg
push
pop
cmpsl
popf
jo
sub
jl
lret
repnz
sbb
pop
inc
sub
pop
lret
dec
les
pop
in
fldcw
push
inc
jmp
mov
insl
jecxz
pop
sbb
in
push
xor
mov
xchg
dec
inc
mov
test
ret
xchg
dec
mov
inc
out
mov
pop
xor
sbb
iret
cmp
aaa
movsb
or
jno
cmpsl
rclb
sub
cmp
cmc
or
xor
or
adc
mov
cmpsb
sbb
mov
repz
movsb
and
push
sbb
and
push
or
xor
je
push
pop
dec
cmp
gs
imul
insl
jle
stos
add
adc
push
jecxz
jns
xchg
cwtl
dec
sub
dec
fldt
jge
or
dec
push
push
mov
pop
xchg
jne
push
sub
inc
cmc
pop
xchg
ret
insb
adc
bound
mov
mov
mov
xchg
mov
push
inc
sub
and
or
ss
leave
dec
iret
fldl2e
xchg
push
xor
xor
js
cmp
xchg
dec
sti
inc
push
lret
sbb
xchg
xor
loopne
aad
rorl
xor
sbb
dec
and
mov
lds
fisubrs
int
mov
or
or
sub
lahf
out
movsl
imul
push
sub
out
mov
daa
aam
mov
ret
xor
jge
sbb
mov
arpl
dec
mov
int3
pushf
fisttpl
xchg
mov
adc
and
cmp
pushf
aas
pop
loopne
mov
or
inc
sahf
xchg
pop
mov
inc
xchg
fnstcw
or
lea
cld
dec
xchg
into
sbb
jmp
push
xchg
cmp
insb
or
dec
insl
or
lcall
fstpl
daa
inc
pop
enter
sbb
jno
pop
call
aad
fsubp
jb
adc
jge
int3
push
out
int3
sub
daa
test
imul
xor
test
in
fxch
addl
dec
pop
mov
xor
ret
jge
js
hlt
mov
jo
fistpll
cmp
test
daa
jne
xlat
pusha
xchg
adc
mov
js
fcomps
clc
or
lds
and
ret
mov
popf
nop
mov
lods
stos
pop
in
mov
leave
mov
mov
push
je
mov
cli
cld
or
or
mov
loopne
pusha
outsl
test
dec
jbe
mov
loope
imul
mov
lret
jb
js
mov
add
lock
push
mov
push
pusha
sbb
test
fidivrl
mov
cwtl
je
mov
and
scas
mov
daa
es
insb
ret
mov
mov
add
push
outsl
inc
and
sbb
sbb
repz
into
mov
xor
rcll
ret
stc
je
movsb
mov
or
or
fwait
pop
lcall
adc
push
xor
mov
jne
movsl
stc
cmpsb
out
inc
repnz
dec
popa
push
mov
push
pop
add
and
cmpsb
cltd
inc
jp
mov
fstps
iret
imul
mov
sub
jmp
and
xchg
push
mov
push
push
daa
inc
push
cmp
xchg
das
cmp
test
add
ja
loop
mov
movsb
imul
fimull
aas
jns
push
jne
adc
out
adc
cmpsb
fdivl
cwtl
pop
xchg
push
stos
or
or
shlb
push
int
mov
fldt
pop
movsb
in
adc
mov
push
lock
shlb
cmc
arpl
cmpsb
sahf
dec
or
andb
and
imull
es
test
mov
push
outsb
lock
icebp
adc
sbb
fdivr
add
inc
mov
jge
bound
pop
jno
jmp
insl
cwtl
popa
sbb
adc
xlat
test
adc
cmp
fwait
scas
pushf
pop
sub
xchg
push
pop
data16
out
je
mov
inc
lds
fmul
pop
bound
push
setg
sti
clc
inc
jno
mov
pop
mov
movsl
js
xchg
fistps
testb
std
add
mov
insb
push
mov
or
and
subl
lret
add
mov
xchg
cmc
in
push
imulb
lret
loope
sub
mov
sarb
mov
dec
loop
les
imul
leave
xor
xor
das
shl
cmp
sbb
cmovb
out
or
sbb
cwtl
pop
or
push
jle
cli
repz
push
hlt
pop
loopne
fcompp
dec
jl
xor
jecxz
xor
les
and
out
ds
pop
scas
pop
jns
scas
jmp
mov
mov
loope
jle
pop
fidivs
adc
jnp
mov
rorl
es
mov
pop
mov
cmp
mov
xor
sub
int3
ljmp
outsl
fdiv
popf
add
clc
into
xor
sub
shll
sub
pop
pop
fcmovne
mov
ds
mov
mov
fcomps
shlb
jae
sahf
push
cmp
mov
mov
inc
pop
xor
mov
add
mov
mov
loope
lret
jne
push
inc
dec
sbb
imul
sub
add
sarl
repnz
xchg
xor
or
mov
ljmp
ljmp
adc
jo
push
jae
mov
loopne
and
fstpt
shll
fwait
scas
adc
inc
adc
xor
sub
xchg
pop
cltd
mov
lahf
pop
cmc
push
mov
mov
fistpll
push
pop
and
adc
out
xchg
jns
das
cmpsb
pop
lret
in
jnp
filds
mov
outsb
repz
cld
push
enter
jg
cld
shld
cld
enter
je
or
push
cs
ljmp
push
out
fsubrl
pop
sahf
mov
ficoml
jnp
xchg
bswap
mov
cmp
or
hlt
aas
sub
orb
pop
out
sbb
sbb
sub
dec
inc
cwtl
push
cltd
in
jnp
stc
cmp
cmpsb
jnp
fadds
mov
ss
ret
les
sub
or
dec
loopne
fidivs
xor
pop
and
inc
mov
andl
int
mov
ja
xor
xchg
mov
stc
xchg
pop
shll
arpl
inc
insl
inc
sub
pop
je
cld
pushf
mov
inc
je
jmp
fnsave
push
inc
out
jne
push
cs
xor
sub
pop
icebp
inc
je
or
mov
aaa
int
inc
test
push
xchg
addr16
out
or
inc
xchg
pop
mov
aad
push
xor
mov
xchg
adc
out
xor
les
push
jnp
mov
fdivl
jae
cltd
sub
mov
shrb
sub
loop
jl
xchg
mov
xlat
imul
outsb
push
push
pop
jmp
pop
pop
push
mov
std
outsl
cld
adc
push
and
adc
push
inc
mov
aas
mov
lret
cmp
aas
ror
xor
fbld
divl
iret
adc
and
mov
push
fs
lock
and
xchg
cmp
push
pop
rcrb
adc
mov
mov
popf
mov
dec
fbstp
mov
jae
adc
pushf
jge
and
push
lahf
pop
mov
mov
bound
and
popf
sbb
mov
cmp
mov
pop
add
dec
shlb
stc
adc
stc
and
adc
mov
addb
dec
js
std
pop
add
imul
fucomi
mov
mov
ret
outsb
enter
addl
fadds
or
push
fistps
mov
mov
shlb
cli
lods
mov
mov
mov
and
push
outsl
push
mov
push
loopne
and
test
adc
push
test
mov
lcall
sbb
dec
push
jo
icebp
aam
cmp
add
pushf
push
outsl
imul
add
dec
lds
testb
inc
cmp
and
mov
push
repnz
aaa
lahf
xlat
js
mov
loopne
pop
sub
dec
clc
cli
insl
add
outsl
enter
or
scas
sbb
xlat
fwait
push
movsl
fcomps
mov
inc
xor
call
movb
hlt
loope
shll
and
jecxz
cmc
xchg
jle
ret
test
jecxz
hlt
insl
pushf
dec
mov
scas
ds
mov
add
nop
fmull
pop
jle
push
jle
and
call
cmpsl
jmp
les
xchg
imul
inc
push
xor
repnz
mov
sbb
xor
loope
fs
insl
adc
mov
insl
out
out
movsb
jnp
xorb
shrl
std
dec
fcmovnb
mov
mov
je
adc
out
pop
fwait
push
dec
cli
jp
inc
xor
inc
sbb
ret
fmuls
lods
icebp
jl
aam
cmp
jb
pushf
hlt
rclb
faddl
mov
adc
iret
scas
or
negl
add
cmp
movsl
adc
or
shl
xlat
xor
test
lret
push
mov
int3
mov
pop
aas
xchg
scas
and
fcom
push
jnp
sub
lahf
shlb
xchg
xchg
and
adc
sbb
dec
add
push
aam
adc
mov
test
pop
mull
add
in
sub
subl
xchg
sub
shll
ss
outsb
jnp
inc
mov
adc
jmp
mov
insb
std
mov
fucomi
push
jle
add
cmp
insb
jne
or
iret
sbb
xor
sbb
dec
popa
mov
mov
in
pop
sahf
jg
sub
gs
cmp
dec
popf
ret
insl
dec
jne
and
popf
stos
pop
and
and
jmp
lods
hlt
aaa
pop
jl
inc
stos
repnz
xchg
leave
call
jmp
testb
sub
sub
aad
xchg
jl
sub
es
xor
jb
mov
lock
pop
sub
cmpsb
daa
sub
xchg
xchg
push
push
in
fistpl
adc
scas
jno
mov
sti
rcl
test
test
loope
jno
mov
and
jp
and
negb
inc
loopne
mov
js
lods
xor
push
bound
pop
jb
jg
sbb
xchg
sbb
repz
xlat
movsb
xchg
pop
imul
mov
pop
and
jo
xor
pop
mov
mov
cmp
out
and
pop
cmovg
into
shlb
mov
inc
loope
loopne
ds
push
leave
xchg
lods
jg
int
imul
mov
and
daa
mov
imul
mov
cmp
outsl
mov
lods
inc
mov
subl
push
mov
xchg
xchg
ret
insb
lock
mov
cld
jno
jmp
lret
pop
testb
ss
push
mov
shl
daa
dec
insb
inc
insb
pop
mov
data16
mov
add
add
xchg
push
cmp
and
repz
leave
sub
push
mov
sbb
cmpsl
outsl
sbb
mov
cmc
or
push
cwtl
inc
inc
lret
int
ljmp
sub
push
adc
shl
in
insl
push
lods
and
xor
scas
xchg
cmp
pushl
mov
daa
sbb
lods
xchg
mov
pusha
scas
push
push
ja
sbb
ljmp
dec
pop
xor
sub
jg
ljmp
or
movsl
cmc
movsb
fldt
mov
xchg
jbe
pop
cli
push
cmp
inc
ja
xlat
sbb
mov
inc
sub
inc
fs
mov
outsb
pop
or
ja
sbb
mov
jnp
aad
and
pop
mov
testl
mov
xor
pusha
pop
mov
ret
mov
xor
jp
push
bnd
pop
mov
out
pop
jns
fisubrl
int3
cs
aam
xor
pop
idivb
mov
jl
mov
dec
imul
xlat
jge
lahf
rcrl
mov
insb
fcoml
jns
cmpsl
lahf
mov
mov
test
push
adc
loopne
mov
jp
mov
sbb
and
pop
add
xchg
and
roll
cmpb
out
jmp
or
add
sbb
loope
push
outsb
int3
jbe
aad
je
pop
jge
push
sarb
mov
inc
xchg
js
mov
cli
stos
int3
jmp
addl
cmp
fwait
dec
and
mov
pop
and
jecxz
and
sub
vmovlps
inc
or
test
loopne
idivl
or
fiadds
mov
jl
mov
shrb
insb
mov
leave
sub
dec
or
pop
and
fadd
xor
pop
xchg
sub
xor
outsb
mov
push
add
sub
pop
inc
xchg
cld
cmpb
fs
sub
inc
jg
inc
int
sarl
adc
xchg
sub
pop
movsl
dec
lahf
sbb
loop
insb
addw
inc
push
fmul
adc
nop
shlb
aam
fstl
push
sub
nop
dec
hlt
sbb
clc
pop
rcpps
pop
cmpb
sti
imul
cmp
jne
inc
popa
loope
cmp
popa
stc
mov
sarb
outsl
pinsrw
sti
inc
cmp
sahf
bnd
and
mov
int3
pop
aam
movsl
xor
sbbb
faddl
movsl
stos
into
lcall
xchg
or
imul
and
mov
inc
nop
fwait
adc
pop
das
loopne
fs
xchg
test
pop
cmp
or
testl
mov
nop
xor
lock
jno
lock
xchg
jge
adc
ficoml
sub
adc
imul
cld
pop
adc
jg
dec
loope
sbb
inc
sub
outsl
in
xor
lcall
nop
test
cmpsb
lcall
jnp
test
push
ja
and
mov
mov
mov
fcompl
nop
xchg
adc
divl
sub
idivl
and
jg
bound
xor
in
pop
cmp
dec
loop
pop
xorb
adc
and
inc
int
lret
shlb
sub
sub
outsl
aad
add
push
ljmp
mov
sub
mov
outsl
xor
or
gs
adc
leave
cmp
es
and
pop
mov
std
mov
sub
add
mov
push
jle
sub
sbb
jae
add
in
sub
add
pop
loopne
js
xchg
lods
movsl
imul
inc
stos
mov
jle
out
in
and
mov
ja
inc
aad
and
or
loopne
lret
jg
inc
and
pop
movsb
fiadds
imul
jge
add
scas
sbb
and
lret
pop
add
insb
push
pop
arpl
push
mov
push
outsl
cmpsb
mov
lods
sub
rcrb
mov
repz
arpl
mov
std
fnstcw
mov
jle
or
aaa
cli
imul
outsl
je
adc
test
test
jmp
jmp
cmc
or
add
mov
int3
sbb
xor
pop
mov
pop
mov
mov
and
pop
in
mov
shrl
mov
xchg
xchg
add
js
and
xor
dec
shrb
cwtl
iret
jge
shll
out
xchg
mov
xchg
stos
loop
repz
sahf
push
test
xchg
ja,pn
mov
stos
cmp
xchg
insb
adc
push
icebp
pop
lret
pop
lea
mov
mov
aas
cld
xor
insb
sbb
test
or
loope
out
cmp
xchg
jbe
dec
shll
xor
inc
or
inc
and
pop
cmc
xlat
lret
pusha
ljmp
pusha
and
mov
test
mov
addb
sbb
sbb
mov
inc
sub
sub
sysret
das
dec
adc
jne
pop
pop
dec
imul
pop
push
sub
mov
push
pop
jecxz
addr16
lahf
in
test
pop
mov
jp
cmp
adcb
xchg
out
dec
data16
mov
jb
push
fldt
pop
cmp
mov
loope
cmc
call
cwtl
mov
cltd
loopne
popf
add
cli
pop
jae
inc
or
push
bound
fldcw
or
stc
xchg
neg
es
outsl
adc
jecxz
sbb
les
xchg
dec
lock
ror
mov
cmpsb
add
mov
stos
xor
xchg
jl
cmpsb
and
lahf
fdivl
cmp
mov
out
jae
int
and
fldenv
mov
aaa
iret
mov
lret
jecxz
aam
cmc
or
dec
adc
ljmp
mov
imul
push
aas
daa
icebp
test
lods
mov
or
enter
mov
mov
std
dec
ret
adc
push
aam
cmp
cld
movsb
fwait
jl
pushf
iret
out
sbb
neg
fdivrl
sub
mov
scas
pop
cli
push
sbb
pop
mov
jle
in
lods
sub
xchg
rcll
mov
cmp
repnz
inc
je
cmp
xchg
adc
pop
sub
push
jmp
cs
ror
aam
pop
cmp
and
jbe
and
fisubrs
xchg
jg
ja
cmp
sub
mov
mov
repz
xchg
fists
jae,pt
in
lock
imul
popa
int3
xlat
xor
jmp
jecxz
mov
inc
xchg
lods
shlb
shr
sbb
mov
pop
cmp
fs
dec
frstor
test
cmp
insl
xchg
mov
std
inc
jbe
add
lock
xorl
cmpsl
call
and
mov
testb
or
mov
and
inc
sub
ljmp
push
mov
mov
out
roll
xchg
mov
call
and
push
mov
sbb
movsb
inc
popf
lods
sbb
sbbb
xorb
or
pushf
dec
inc
lret
push
add
inc
cwtl
iret
and
aam
pusha
cmc
scas
sub
bound
std
mov
dec
xor
icebp
idivl
lcall
leave
add
mov
pop
imul
mov
xchg
cwtl
rcrb
push
in
push
mov
repnz
or
clc
shlb
fyl2xp1
cli
xor
pop
lea
ret
jge
push
out
jb
imul
push
rdmsr
cmp
inc
pop
sbb
and
loope
add
psrlw
test
jge
imul
push
jb
push
pop
xor
scas
pop
std
cltd
sub
repnz
pop
mov
mov
inc
filds
and
mov
stos
xorl
inc
mov
sub
dec
jmp
jb
addl
sub
cmp
je
pop
sarl
movsb
adc
dec
sub
test
adc
add
sub
in
gs
xor
int
imul
mov
dec
icebp
jbe
dec
loopne
out
loope
mov
jg
or
push
repz
int
ja
push
pop
push
inc
or
jmp
xchg
sub
outsl
daa
mov
dec
dec
jle
mov
mov
aam
jecxz
stc
jmp
mov
mov
add
out
popf
mov
sbb
test
xchg
xor
lea
pop
shlb
and
sbb
push
test
stos
adc
aaa
sub
mov
mov
fnstcw
inc
cmpsb
pop
mov
push
inc
push
imul
sbb
cmc
das
scas
je
aas
in
sub
pop
lods
cld
sti
into
ljmp
pop
mov
push
sbb
popa
xor
dec
xchg
sub
push
fsubs
imul
out
daa
aas
xor
or
xchg
and
ljmp
pop
repnz
push
pop
mov
loope
cltd
jle
fs
jge
jle
jo
mov
iret
pop
add
fistps
xchg
jecxz
sbb
mov
je
test
call
ret
test
push
loop
aad
jmp
sbb
inc
insl
fsubrl
sub
add
xchg
dec
mov
jmp
sbb
out
lods
int
xchg
push
adc
mov
pusha
pop
xchg
lea
jo
shrl
xor
gs
add
imul
xchg
push
push
or
and
dec
inc
scas
mov
dec
loope
loop
xor
xchg
xchg
mov
imul
push
xor
mov
cmp
and
sub
mov
lea
xchg
pusha
out
push
rcrl
xchg
add
arpl
inc
popa
xor
aas
fisubrs
xchg
xor
aas
daa
daa
leave
add
loop
jmp
dec
inc
arpl
lahf
mov
rol
push
cmp
adc
int3
testl
and
fucomip
sbb
mov
clc
jae
mov
sti
mov
stos
push
call
sub
nop
arpl
cmp
sbb
test
arpl
jo
adc
mov
icebp
jl
push
loopne
in
push
mov
inc
jo
rcr
cmp
sbb
xor
not
adc
cwtd
xor
pop
ljmp
cmpsb
fnstenv
and
adc
or
mov
pop
mov
ljmp
push
jg
and
push
leave
jb
xchg
and
repz
inc
xor
outsl
sti
add
and
add
ljmp
frstor
jge
jne
dec
pop
jo
popf
aaa
sbb
lods
leave
pushf
int
cltd
pop
jbe
cwtl
ret
lea
sar
mov
sbb
jp
shll
push
xor
xchg
push
push
add
inc
push
in
mov
aas
mov
xchg
test
adc
adc
add
sub
loopne
mov
xchg
out
shlb
decl
pop
inc
ret
fnsave
jp
cmp
dec
inc
shlb
mov
popa
xchg
loopne
pusha
call
pop
shl
in
sbb
icebp
or
les
dec
mov
dec
sbb
inc
loopne
adc
mov
pop
add
pop
ret
push
lods
lods
in
and
sub
movsl
adc
lock
fnstsw
cmp
arpl
push
lret
int3
adc
xor
xchg
cltd
xchg
scas
insl
mov
in
sub
int
stc
xor
xchg
outsb
fldl2e
xor
es
mov
push
adc
movb
push
xor
aaa
or
inc
movsb
add
xor
cmp
xor
les
jnp
roll
add
daa
mov
mov
rol
daa
pop
call
test
shlb
xchg
test
lock
or
andnps
push
pushf
js
mov
je
cmp
sbb
stc
mov
push
mov
stos
jge
mov
xlat
push
outsb
rorb
sbb
into
dec
imul
inc
add
fisttps
and
sub
cld
adc
lahf
addr16
popa
fistpl
sbbb
xor
icebp
data16
pop
pop
jne
mov
xchg
cli
or
in
xor
mov
insb
shrl
daa
insl
shl
xor
incb
aad
push
xor
int
dec
roll
sbb
shll
fs
daa
hlt
loopne
or
jae
lods
pop
xor
mov
fisubl
sbb
out
outsl
out
mov
lcall
pop
ret
or
js
test
fldl
jns
xchg
mov
jmp
mov
and
rclb
pop
or
rolb
and
mov
rolb
test
mov
push
inc
jmp
xchg
inc
or
stos
inc
push
loopne
inc
in
jmp
pop
ffreep
xchg
mov
mov
jmp
mov
and
das
shlb
test
push
push
cwtl
pusha
outsl
ficoms
pop
subl
daa
sahf
pop
xor
pop
mov
push
xchg
xor
inc
sub
xlat
in
out
cmp
mov
mov
out
jnp
imul
inc
jae
lret
cmp
in
adc
mov
sahf
add
adc
dec
cmpsb
cmovo
fstps
mov
popa
or
fnstsw
jmp
mov
jle
inc
cmp
dec
and
cmc
and
imul
repnz
daa
vphaddbd
lods
sub
movsl
and
and
rol
dec
inc
aas
hlt
orb
xchg
insb
xor
stos
out
shlb
mov
repz
or
fildl
enter
xor
test
adc
sarb
insl
call
sbb
adc
mov
insl
cmpsb
cmpsl
scas
sub
mov
lock
pop
and
sbb
mov
jbe
mov
jno
mov
jge
fiadds
xchg
xor
mov
ja
mov
adc
jbe
xor
or
mov
xor
sub
sub
int
mov
xor
cmp
test
fldcw
loop
loopne
test
adc
mov
ffree
lods
es
roll
push
orl
jb
adc
in
or
push
das
sbb
popf
int
or
das
stos
addb
push
adc
cmc
aam
fisubrs
mov
ret
stos
mov
stc
push
or
inc
dec
movl
lds
push
fstl
jmp
xor
push
cld
gs
pop
xchg
and
sbb
cmpsb
insl
imul
sub
jbe
insl
out
cmp
sub
subl
push
sub
leave
repnz
js
jne
pushf
repz
pop
inc
dec
cmp
mov
daa
mov
mov
ss
xchg
iret
imul
inc
loopne
and
push
in
mov
adc
mov
bound
mov
jae
jns
and
orl
adc
pop
sbb
sub
pop
gs
xchg
mov
cmc
test
mov
mov
int
inc
mov
clc
cld
push
xchg
pop
sahf
loopne
pop
push
cmp
roll
hlt
push
mov
jno
mov
das
inc
ljmp
in
insl
cmpsb
fildl
jns
test
stos
sbb
aaa
movsb
movsb
mov
cmc
insb
aad
rolb
aas
repnz
insb
mov
pushf
and
ja
add
push
gs
out
mov
xor
lcall
jb
cmpsb
cld
and
or
or
mov
outsb
imul
fcompl
dec
mov
pop
push
jmp
cs
pop
sbb
inc
ljmp
dec
xchg
outsl
inc
ja
mov
insb
imul
mov
outsb
fistl
jg
add
repnz
xor
and
mov
and
call
fcompl
mov
adc
mov
add
mov
popa
addb
inc
mov
dec
fstpt
repnz
prefetch
or
and
popf
enter
cmp
popl
js
and
push
push
xlat
adc
dec
jecxz
push
clc
xor
adc
mov
stos
in
fstps
mov
stos
xor
scas
stc
dec
aad
filds
loopne
shl
fidivl
stos
mov
jne
imul
or
fcmovb
gs
lea
movaps
mov
jge
imul
mov
mov
mov
ljmp
dec
xchg
xor
inc
aas
push
cld
sbb
or
outsl
insb
scas
cmpsl
add
loop
lret
std
pushf
imul
mov
cmp
xchg
xor
das
iret
cld
pusha
pop
mov
cli
je
scas
dec
jmp
adc
mov
gs
cs
inc
dec
ficoml
mov
popf
pop
inc
mov
hlt
xor
xor
je
inc
jg
sahf
jne
xchg
xor
dec
imul
dec
setns
cli
pop
gs
aad
shrb
sbb
shl
mov
sub
repz
jne
data16
lret
int
loope
loopne
and
stos
lods
repz
icebp
bound
std
out
or
leave
sarb
lahf
test
mov
cmp
jno
in
je
jp
fmul
xor
cltd
jns
inc
xchg
or
xchg
das
xchg
mov
inc
decb
rcll
or
mov
aas
xchg
shlb
dec
and
or
in
int3
int3
adc
or
movsl
jl
clc
les
add
xchg
mov
adc
mov
mov
sbb
pop
inc
icebp
push
cld
or
popf
jg
loop
rcr
inc
shl
jg
lods
bound
dec
fldt
cltd
pop
fwait
push
ljmp
out
out
imul
mov
lods
or
sbb
mov
xor
mov
ja
mov
dec
mov
pop
fildll
rol
xchg
cmp
jl
scas
aas
sub
mov
pop
shrl
cmc
popa
das
mov
dec
push
push
xchg
pop
rcl
in
xor
sub
das
cmpsb
add
shrb
lret
shl
jecxz
and
mov
push
cmpsl
xchg
mov
rclb
xor
fcomp
js
dec
lods
inc
add
in
add
xchg
out
add
insb
add
xchg
pop
cli
inc
in
rorl
dec
add
popa
jmp
mov
or
push
sbb
or
in
in
dec
jno
aad
xchg
imul
call
cmp
mov
fwait
mov
and
jecxz
aad
pop
adc
hlt
mov
sbb
mov
add
fstps
xlat
cmp
fiaddl
jae
xchg
mov
stos
mov
outsl
cmpsl
push
pop
cmp
push
sub
stos
inc
ljmp
mov
cltd
ret
mov
pushf
lahf
inc
xchg
dec
bndstx
ret
and
adc
fadd
xor
lahf
or
mov
cmp
movsb
into
mov
mov
cli
mull
ljmp
sbb
int3
pop
inc
cmp
int
push
add
push
jl
or
pop
fstpl
pop
mov
cmc
sbb
xchg
sahf
cld
mov
jle
inc
or
and
stc
popf
sarb
out
cli
mov
fstl
cmpl
fistl
jns
sarl
cmpsb
sub
insb
das
mov
subb
shll
pop
push
daa
repz
andb
and
nop
imul
push
enter
xchg
mov
outsl
lds
mov
shll
scas
cmp
lret
scas
mov
jp
lret
cmp
jns
nop
out
or
push
dec
in
cltd
fnstenv
dec
dec
jne
hlt
shll
icebp
mov
les
pop
rclb
cmpsb
out
movsl
shrl
mov
out
jecxz
loopne
inc
mov
pushf
mov
call
dec
fildll
popa
inc
or
pop
fstpl
mov
cmpsl
ljmp
aaa
sahf
ds
in
lods
xchg
lret
jnp
pusha
decb
xchg
xor
stc
xchg
lcall
mov
pop
inc
dec
dec
sbb
add
out
out
mov
xorb
add
addb
loope
dec
shlb
jno
mov
imul
movsl
fldenv
dec
mov
imul
mov
and
mov
mov
sahf
in
rcll
int3
dec
mov
pop
mov
sub
or
subl
jmp
dec
mov
lea
adc
les
outsb
fiaddl
add
int3
add
icebp
stos
in
and
xchg
and
xchg
mov
jb
mov
dec
std
lea
push
mov
and
mov
leave
or
pop
push
cwtl
imul
cli
xchg
adc
adc
adc
and
add
or
inc
test
ja
mov
lcall
out
pop
rcll
and
push
shr
rcr
dec
sarb
add
adc
imul
pusha
scas
fwait
popa
add
pop
cmpb
cld
mov
ret
icebp
lcall
jmp
daa
loop
or
push
shll
faddl
pop
ret
rcl
js
push
fs
adc
jmp
mov
or
jbe
sub
fucom
and
jmp
xor
fnstenv
jp
inc
mov
cmp
pop
out
test
arpl
fdiv
xchg
loope
cmp
sub
push
ficompl
add
lahf
idivb
add
sbb
mov
dec
xchg
push
mov
cmpsl
es
fldcw
mov
xor
nop
mov
and
pushf
adc
cmp
outsl
pop
inc
mov
out
xchg
mov
addr16
enter
sbb
mov
jmp
sub
les
adcb
xchg
fidivs
pop
cmp
stc
test
add
xor
mov
imul
pop
cs
jmp
shrl
push
add
sub
mov
add
add
cmp
push
add
jle
mov
jg
in
subl
sbb
cltd
adc
out
je
push
cmp
aam
lock
mov
fisubl
scas
adc
clc
dec
inc
aaa
xor
int
push
imul
mov
xchg
aam
sbb
cmp
mov
xchg
adc
outsl
fcmovu
mov
ds
enter
mov
jne
shlb
jbe
add
cmp
push
xchg
movsb
jp
pop
jecxz
test
sbb
xchg
dec
sbb
movsl
add
cltd
testl
lock
sti
mov
movsl
aas
mov
inc
or
push
out
mov
daa
dec
ja
add
inc
sti
iret
call
or
add
lods
fs
test
pop
cwtl
sbb
test
lea
pop
lods
cmpsl
jns
cmp
jne
sub
push
inc
push
hlt
lahf
paddb
sbb
add
insl
push
gs
shll
shlb
pop
je
mov
or
jmp
lods
int3
add
pushf
jne
xlat
jns
cmpsl
int
jl
cmp
jnp
dec
fistl
outsl
ret
std
xchg
and
adc
aaa
pop
fadd
orl
test
rolb
sahf
mov
pushf
mov
cmp
inc
ficoml
mov
jno
scas
cmpsb
xchg
jne
jmp
dec
fisttps
or
and
leave
cld
rcl
pop
ljmp
scas
fcmovb
cmp
frstor
mov
dec
jbe
adc
scas
jb
and
mov
imul
inc
mov
fucom
shrb
aas
jno
jecxz
mov
inc
inc
in
push
ss
adc
xor
mov
push
xor
mov
pop
ret
adc
shll
mov
lret
jno
dec
fwait
adc
push
dec
xor
test
nop
inc
popa
mov
add
pushf
fisubrs
fnsave
jge
fldenv
jmp
inc
ds
add
lock
movsl
jae
mov
xor
pop
pop
out
cmp
xor
mov
xchg
imul
daa
iret
cmp
and
pop
add
cltd
outsb
dec
mov
pop
test
mov
mov
shr
jmp
lea
out
sbb
cs
mov
or
mov
fldenv
dec
les
scas
fldenv
push
sub
out
in
inc
mov
pushf
cmp
test
out
rcll
ret
in
and
mov
cmpsl
sbb
cli
or
mov
pop
scas
mov
cmpsb
adcl
lcall
adc
jbe
int3
in
icebp
inc
sbb
lock
dec
lcall
xchg
out
test
les
dec
dec
sahf
push
add
sbb
in
push
cmp
dec
mov
xchg
bound
xchg
adc
adc
adc
or
imul
sbb
decl
cmpsb
mov
divl
cwtl
inc
stos
xchg
lcall
out
out
mov
adc
test
mov
js
push
sbb
es
popf
outsl
inc
movsl
rcrb
mov
mov
pop
pop
test
push
sub
push
pop
push
lds
mov
int3
aam
movsb
aaa
mov
lret
xchg
xchg
aaa
jp
cli
add
sarb
jne
jns
push
shrl
cs
aam
scas
mov
jae
cmp
fsts
decb
pop
push
cmp
mov
and
mov
lds
jle
int3
fstpl
push
lods
dec
ret
inc
mov
mov
js
adc
fstpt
scas
cmp
xchg
outsb
mov
xchg
mov
sbb
xchg
mov
or
test
dec
inc
sbb
pop
xchg
cmp
xor
int3
mov
ficomps
mov
sub
nopl
pushf
jmp
mov
xchg
imul
cmp
add
ss
jl
xchg
dec
sbb
lret
movsl
ds
jns
movsb
jo
cltd
cmp
loope
ja
out
dec
sbb
pop
pop
sub
sbb
loopne
aaa
inc
ret
fnstcw
scas
mulb
push
stos
lea
mov
jle
repz
inc
mov
movzwl
lcall
shrb
sub
rolb
shll
push
cs
xchg
fistpl
and
push
sub
sbb
jnp
out
mov
sub
dec
pop
push
call
mov
scas
lods
lods
mov
sbb
or
test
fstpl
lods
push
ss
insb
inc
push
cmp
inc
push
mov
int3
popf
neg
lds
out
pop
jno
dec
lcall
xor
ja
jb
inc
icebp
lds
mov
cmp
mov
mov
mov
outsb
lods
into
ljmp
sub
adc
ss
and
inc
jne
dec
mov
xor
popa
xor
add
push
fwait
push
lahf
inc
idivl
mulb
mov
jg
out
cmp
mov
xchg
adc
dec
scas
mov
dec
lret
mov
addr16
test
push
imul
out
cmp
repz
out
pop
pop
lea
loop
xor
out
and
loope
sbb
xchg
jp
lahf
sub
int3
fiadds
fldt
sub
mov
push
jbe
fsubr
jo
pusha
mov
call
sub
cmp
je
inc
mov
sbb
dec
in
popf
jnp
pop
pop
jge
insb
popw
sbb
mov
ja
sub
popf
add
and
es
push
out
scas
cltd
cmpsb
sahf
aas
shll
frstor
lcall
lret
aaa
sub
ljmp
sahf
outsb
jae
outsb
and
out
lods
outsb
imul
xor
or
outsb
xor
inc
pop
and
jmp
dec
test
aad
mov
movsl
sub
setge
jnp
xchg
pop
or
or
xchg
pushf
sbb
je
jb
clc
inc
aam
pop
jnp
stos
ljmp
push
xlat
negl
sbb
pop
pushf
js
call
push
jnp
mov
adc
add
mov
lock
xchg
mov
sub
popa
addb
outsl
sbb
rorl
fsubs
loopne
add
sub
pushf
jecxz
test
push
sbb
push
addl
test
in
dec
in
xchg
xchg
sbb
es
in
add
ds
sti
pop
mov
and
in
popa
loope
fdiv
or
fnstcw
xor
mov
push
cmp
adc
cmp
ss
gs
iret
cmp
mov
cmpsl
xchg
mov
inc
ss
movsb
pop
jo
push
mov
fdivrs
adc
pcmpgtw
popf
rcll
js
jecxz
stc
out
adc
les
in
jbe
mov
stos
mov
lds
cmp
push
inc
test
loopne
cmp
inc
push
add
push
xchg
scas
lcall
repz
ljmp
jb
into
mov
stos
mov
or
out
adcl
xor
imul
jnp
lds
les
or
and
jle
ret
or
push
bound
lret
mov
pop
xchg
or
into
push
xor
pop
xor
cmp
imul
scas
and
je
dec
les
fistpl
repz
push
dec
pop
loope
dec
mov
push
popf
and
cmc
inc
in
int3
push
clc
leave
mov
ret
mov
int
pop
sarb
xchg
lea
sti
sahf
cmc
push
pop
cmc
int3
gs
push
outsb
push
jbe
ficoml
mov
sbb
sbb
stc
hlt
sbb
aaa
xchg
mov
fildll
add
mov
or
pop
sub
rolb
fs
push
dec
mov
sahf
inc
xchg
orl
push
mov
aad
mov
sub
xchg
jbe
aas
mul
cs
popa
mov
lods
sbb
jb
jns
out
outsl
pop
lahf
cmpsl
push
cmp
dec
push
sarl
enter
imul
add
incl
ja
xchg
inc
insb
movsb
popf
loop
clc
sti
pop
jns
push
jge
cmp
dec
sbb
fcoml
or
or
xor
fisubs
sti
roll
push
mov
aad
jecxz
or
leave
inc
insb
shlb
es
mov
add
int
sahf
cli
stos
jbe
jg
and
mov
test
notl
arpl
inc
push
mov
mov
or
das
mov
jae
inc
inc
das
xor
pop
add
dec
out
dec
mov
leave
shrl
into
cbtw
lret
lcall
aam
ja
inc
in
pusha
mov
imul
repz
fwait
add
int3
mov
mov
xor
add
sub
sbb
dec
movsb
ja
xchg
testl
xor
unpckhps
sarl
sbb
lea
mov
std
mov
mov
imul
enter
in
es
xor
pop
fwait
dec
int3
jge
mov
pop
inc
mov
lea
les
adc
in
repz
icebp
sub
mov
mov
cmp
and
outsl
xchg
ss
imull
fdivr
lds
outsb
mov
jnp
xchg
stos
push
fidivrs
add
jae
sbb
rcll
or
push
inc
mov
add
push
pop
xchg
fmul
fstl
stos
hlt
test
mov
add
das
cmc
push
aaa
shll
pop
ljmp
xor
mov
cli
add
nop
add
add
enter
sarb
aad
mov
xchg
sub
push
shr
inc
lock
cmpsb
push
fsubrl
add
pop
dec
xor
loopne
inc
cmc
std
scas
push
lods
pop
mov
loope
jb
out
inc
cs
xchg
shll
lret
cltd
sub
fcmovne
push
jno
cmp
addr16
test
cmp
cmc
sub
cmpsl
dec
jmp
dec
int3
pop
gs
sbb
adc
les
jp
gs
ss
xchg
mov
xchg
jns
daa
xchg
aam
dec
fstpl
push
in
mov
bndstx
lret
dec
lods
sub
sbb
mov
icebp
call
fcomps
mov
push
mov
add
xor
pusha
jg
clc
and
xor
mov
pop
pop
in
loop
mov
adc
xchg
xor
scas
test
mov
mov
add
pop
lret
mov
outsb
movsb
adc
mov
mov
dec
test
push
jp
mov
out
shlb
leave
cmp
xchg
dec
xor
call
jae
mov
inc
call
bound
mov
arpl
pop
cld
loope
stos
mov
xchg
inc
push
imul
push
movaps
push
and
in
cmp
sub
and
jle
mov
sub
xor
mov
mov
jmp
fisubrl
xchg
xchg
inc
mov
inc
jb
loop
or
or
cmc
jmp
aaa
sub
dec
dec
add
and
dec
js
cmp
fidivrs
jbe
mov
mov
notb
cld
xorb
test
jecxz
push
jmp
adc
insb
mov
sub
jae
or
pop
iret
jns
jns
and
aaa
sub
mov
call
jecxz
lods
mov
lret
mov
dec
pusha
sub
lods
or
jle
pop
dec
popa
adc
test
xchg
lcall
adc
pop
sbb
mov
jg
jle
mov
sub
addb
jl
hlt
cmp
scas
and
outsb
jmp
dec
inc
push
fcomps
shrb
decb
add
rcrb
inc
clc
dec
sub
and
stc
mov
push
or
or
and
popa
lods
push
xor
dec
mov
mov
adc
adc
cltd
ror
mov
fisubrs
xchg
stc
mov
adc
xchg
adc
ror
fimull
sbb
dec
mov
ror
lcall
mov
lods
mov
pop
imul
push
push
sub
and
jb
adc
mov
sarl
subb
lock
enter
sahf
stos
hlt
fisubrs
test
sub
andl
pop
cli
mov
mov
rolb
subb
mulb
icebp
fwait
pop
es
mov
xchg
mov
lods
into
sbb
pop
mov
rorb
cld
jnp
adc
jb
pop
xor
leave
shl
repnz
xchg
loopne
mov
mov
sar
mov
rolb
xor
cmpsl
pop
movsl
loope
into
xchg
gs
imul
in
adcb
in
fidivrs
sub
mov
outsb
ret
inc
cld
mov
or
les
fildl
pop
dec
shrb
jbe
sub
dec
push
out
das
paddd
jl
repnz
ds
add
sbb
aam
inc
jl
mov
test
jg
pop
cmc
sahf
mov
sub
jle
mov
popa
pop
jecxz
jbe
sbb
shlb
mov
push
mov
insl
inc
insl
dec
shlb
lret
mov
add
pop
adc
lahf
jae
xchg
jp
sbb
aam
mov
push
push
or
add
mov
jbe
cmp
stos
jge
das
adc
or
push
cli
adc
xor
cmp
adc
out
xchg
mov
stos
adc
loope
les
add
xchg
imul
mulb
aam
mov
arpl
fcoml
scas
jg
xchg
fs
out
push
xor
cwtl
mov
cld
out
scas
xchg
iret
fisubrl
mov
jge
imul
fbld
std
dec
out
add
jecxz
mov
les
jmp
fistps
push
aaa
roll
mov
gs
dec
push
sbb
sbb
mov
mov
mov
pop
call
jae
fiaddl
movsl
rolb
out
sub
enter
nop
sub
stos
rcrb
inc
test
dec
mov
mov
punpcklwd
mov
pop
jmp
nop
mov
mov
xor
jmp
addr16
add
std
mov
out
push
mov
or
lahf
cld
jecxz
outsl
dec
dec
mov
fwait
rcll
add
push
cmc
mov
mov
push
popa
aas
mov
xchg
movb
sub
inc
mov
inc
gs
in
sub
mov
sub
out
fs
mov
adc
repnz
ss
lret
sbb
add
jbe
shrb
push
das
dec
push
ret
mulb
ds
cmp
or
daa
cld
mov
push
test
xor
jb
arpl
cli
insl
xor
mov
jb
aam
pushf
repnz
sub
push
inc
dec
leave
xor
xchg
add
ds
les
daa
addb
int
add
mov
pop
jns
test
jnp
cmc
lret
mov
sti
xor
popf
xor
dec
les
push
sub
and
or
or
or
popl
adc
mov
shlb
cwtl
fldt
fidivrs
movsb
mov
loopne
sbb
cmc
add
ja
and
sub
xor
pop
dec
pop
scas
pusha
movsl
push
loop
dec
sub
jo
sbb
bswap
jmp
addr16
mov
negb
cmp
popf
in
mov
sub
leave
test
cmpsb
inc
xchg
lcall
cld
sbb
stos
scas
mov
push
btc
xor
sahf
stos
test
push
and
pop
lret
jg
adc
lahf
aaa
jo
mov
cmp
test
subl
add
fdivp
lods
les
call
mov
jecxz
fiaddl
in
jns
pushf
test
jo
popa
mov
sbb
cmp
test
add
jmp
and
popa
xchg
jb
jne
pop
in
clc
aaa
pusha
aad
das
inc
and
pop
jle
rolb
pushf
nop
jnp
jno
mov
cmp
cld
loope
jge
push
je
mov
push
int
add
test
mov
push
and
insl
or
gs
add
lock
in
adc
push
inc
mov
ret
pop
jbe
or
xchg
mov
jae
test
das
cld
mov
mov
in
mov
add
xchg
lods
movsl
and
imul
jne
add
mov
scas
test
xchg
lods
xor
hlt
inc
mov
dec
mov
mov
loopne
pushf
daa
push
divl
add
jge
fs
or
xchg
xchg
inc
js
sbb
jo
gs
les
adc
lea
fwait
in
mov
iret
bound
xchg
out
cmp
pop
arpl
sub
mov
jo
xor
sbb
movl
and
cmp
lock
mov
jno
add
xor
das
push
sbb
les
in
scas
mov
jo
add
popf
dec
and
aad
test
outsb
jo
sub
or
popa
nop
mov
cmp
pop
addr16
mov
mov
movsl
and
scas
xchg
add
mov
stc
or
push
std
or
cbtw
dec
pusha
cld
pushf
jno
or
add
movsb
das
mov
hlt
out
xchg
int
sbb
mov
xchg
scas
adc
sub
fldenv
scas
cld
insl
mov
push
pop
jp
aad
jnp
lock
push
insl
ja
es
add
or
fildl
adc
add
push
jg
mov
mov
pop
mov
lods
in
iret
mov
xchg
jnp
cli
pusha
sets
dec
xchg
xchg
xchg
std
mov
jmp
mov
xchg
cld
adc
jp
in
jae
push
push
cmpsb
testl
add
gs
and
inc
cmp
jae
sbb
in
dec
fidivs
cmp
pop
mov
imul
shll
sbb
jbe
mov
pop
and
int3
jmp
or
mov
jns
lret
and
mulb
mov
pop
mov
xchg
inc
fstpl
add
lods
ds
push
inc
jmp
lods
fbld
jl
adcl
mov
sub
jle
fisttps
add
shll
cmp
xor
mov
clc
and
mov
sti
popf
cwtl
dec
cmpsl
hlt
sub
movsb
cld
or
cmp
mov
adc
mov
cmp
add
int
sbb
dec
push
and
lods
sub
jmp
movsb
mov
dec
push
sbb
fisttpll
inc
xchg
fs
les
nop
cltd
fnsave
movsl
mov
loopne
mov
dec
popf
les
inc
data16
adc
out
cmc
movb
stc
inc
dec
inc
mov
dec
fmuls
mov
xchg
dec
dec
enter
cli
scas
add
imul
cld
mov
jge
jne
adc
sub
test
push
pop
adc
mov
push
iret
outsb
outsb
aam
mov
fs
fidivs
js
jno
movsb
pop
aad
xchg
sbb
fidivl
daa
and
fstpt
mov
sbb
mov
das
sbb
lcall
ja
popf
mov
mov
lret
aas
cmp
xor
xor
sysenter
cmc
leave
inc
xorl
adc
into
cmp
xor
dec
sbb
cmp
or
outsb
rorb
fnsave
push
ljmp
lret
insl
cmp
lods
or
stos
jl
pop
std
xchg
pop
imul
mov
rcrl
scas
cmp
shll
cmp
push
ficomps
lret
movsl
lret
cmp
push
or
cmp
jl
push
aas
movsl
cmp
nop
mov
jne
lods
addl
pop
out
jecxz
adc
rcrl
ja
xlat
sbb
mov
inc
sub
aam
ljmp
jp
adc
cmp
cmpsb
xor
cmp
mov
pushf
xchg
xchg
enter
sbb
ds
cld
inc
shlb
icebp
lock
xchg
adc
sbb
shrb
mov
inc
xor
hlt
and
stos
outsl
shrb
test
sbb
lea
ss
orl
aaa
and
test
add
jo
and
mov
adc
mov
hlt
mov
xor
dec
in
sub
dec
adc
cmp
and
mov
lock
inc
cs
add
out
dec
and
jo
cs
cmovbe
cmpsb
notb
sbb
mov
dec
aas
leave
dec
imul
stc
push
sahf
cwtl
fwait
ljmp
loopne
mov
mov
sti
sub
insb
push
test
add
movsb
adc
daa
dec
test
mov
ret
and
xor
aad
ret
mov
jbe
pop
sbb
lret
shrl
mov
dec
adc
pop
mov
or
pop
mov
push
cmp
dec
pop
pop
or
push
shll
dec
popf
adc
in
inc
push
push
sub
fdivrs
cld
adc
scas
and
fldenv
xchg
add
cltd
movsl
and
jg
mov
popf
xchg
pop
es
push
insb
xor
xor
inc
jmp
shl
js
jge
pop
in
out
push
movsl
nop
cmpsb
xchg
and
push
or
pcmpeqd
sahf
sbb
std
cmpsl
test
call
or
jp
jecxz
mov
sahf
in
repnz
int
ret
sti
jb
aaa
dec
aad
sahf
jle
jno
mov
inc
enter
cmp
mov
mov
pop
cmp
insb
es
mov
inc
pop
mov
gs
cld
pushf
sub
loop
icebp
inc
testb
and
movsb
pop
loope
loope
sbb
or
in
fisubrs
inc
bound
cmpl
call
je
mov
popa
sub
cmp
sbb
pusha
adc
and
and
testb
es
mov
lock
into
inc
add
stos
packsswb
mov
sub
xchg
std
shlb
stos
fdivrs
dec
push
xchg
insl
fcoml
daa
inc
add
xor
jne
in
mov
in
add
mov
cs
pop
iret
mov
push
push
repnz
div
out
add
inc
inc
xchg
mov
shl
aam
nop
movsb
push
sbb
sbb
jne
movsb
test
sbb
mov
shll
push
dec
sarb
lret
mov
lret
iret
jg
cmp
or
orb
outsl
jg,pn
les
push
shl
js
cld
sub
pusha
sub
lds
pop
imul
xor
enter
pop
cltd
sub
cmp
xor
or
jp
mov
sub
fldl
pop
xor
jb
mov
sti
xchg
mov
jns
call
adc
fiaddl
push
jp
call
pop
xor
dec
cmp
jmp
arpl
or
dec
sbb
mov
or
pop
repnz
add
test
xorl
arpl
inc
outsl
mov
mov
jg
mov
jbe
push
bound
push
jae
mov
sub
dec
cmp
xor
cmp
push
lods
mov
inc
mov
les
push
cwtl
stc
nop
jno
push
lcall
lret
gs
cli
add
cmp
push
lods
dec
and
or
dec
sahf
mov
pop
adc
or
jg
imul
aad
imul
and
movsl
ret
xchg
nop
inc
ds
push
pop
push
imul
stos
lock
arpl
mov
mov
mov
and
xabort
das
jl
mov
mov
cmp
mov
inc
cmc
inc
cs
in
fstps
loopne
sub
out
jg
mov
lds
cld
or
push
push
xchg
je
repz
fs
mov
into
test
addb
insb
les
fbstp
in
mov
push
or
push
inc
mov
xor
xchg
fldenv
aas
mov
push
xchg
lea
pop
cmp
add
or
bound
fisttpll
into
mov
push
jo
sub
pop
or
pop
add
dec
addl
xchg
std
cmpsb
pop
sbb
adc
jle
rcr
push
ljmp
jno
xor
fucomip
cmc
xchg
sbb
xor
inc
pop
cmp
gs
push
nop
fadds
repnz
and
das
sahf
imul
mov
out
shrl
push
lock
outsl
aas
out
lret
sub
lcall
cmc
pop
hlt
call
pusha
outsb
sarb
shll
inc
adc
sub
jnp
add
xchg
push
movsl
cs
jl
sub
ja
lret
sub
fildll
shrb
dec
dec
cmp
or
sbb
into
pop
add
pop
sti
arpl
shl
add
mov
inc
and
arpl
sub
pop
call
xchg
in
stc
ret
mov
mov
adc
js
xlat
ss
in
stc
mov
cmp
inc
call
pushf
jae
inc
call
fmuls
push
ja
pop
mov
push
sub
jge,pn
stc
and
push
addr16
int3
sbb
shll
pop
pop
out
mov
aas
pop
or
in
xchg
les
dec
adc
pusha
test
imul
mov
pop
adc
sbb
loopne
mov
into
xchg
cmpsl
into
ljmp
lret
movsb
insb
cmpsb
aam
bound
stos
orl
rol
cmp
fdivl
xchg
sbbl
jae
mov
loopne
or
mov
lods
xor
inc
push
pop
mov
xchg
xchg
leave
outsb
test
mov
mov
shrb
js
pop
push
jl
sbb
xor
addl
sub
push
iret
mov
pop
xor
das
cmpxchg
std
sub
push
sub
push
ror
scas
push
cmp
jae
pmullw
mov
dec
fadds
lds
rcll
mov
cltd
pop
ror
ret
or
in
and
jge
les
roll
mov
and
mov
lahf
jl
mov
mov
sub
cld
sbb
mov
inc
jg
and
stos
add
fwait
mov
jmp
inc
fs
jno,pt
clc
pushf
outsl
sub
xchg
rorb
out
jle
out
pop
fistpll
pop
cmc
add
out
push
mov
xchg
xor
sbb
push
insl
adc
mov
fwait
xchg
xchg
or
testl
imul
pop
mov
dec
call
sbb
pop
pop
sub
and
cld
in
cmp
jb
neg
ja
adc
ss
cmp
dec
andb
push
adc
jmp
adc
lcall
in
jmp
lea
jecxz
scas
inc
cmp
mov
mov
int3
scas
lahf
jmp
xlat
cmp
push
mov
adc
mov
test
xor
cli
jle
dec
push
inc
adc
jmp
cltd
and
add
fisttps
call
pop
imul
push
xchg
fwait
das
add
mov
fstpl
lods
scas
out
movsl
rol
xchg
les
fnstenv
scas
das
dec
push
arpl
mov
scas
or
push
pop
mov
sbb
imul
test
xor
lock
adc
xchg
ja
test
inc
clc
aaa
xlat
cmp
outsl
lea
enter
mov
mov
stos
test
jmp
mov
mov
and
push
test
jb
and
jmp
mov
cmp
ja
popf
mov
adc
lcall
in
pop
cli
mov
jecxz
js
or
ficoms
addr16
subl
subb
mov
aad
inc
enter
dec
lret
xchg
pop
pop
aas
lret
mov
mov
in
cmp
fwait
push
cmp
pop
add
fsts
fdivrl
shll
ja
xor
sbb
push
outsl
mov
jg
stos
imul
sbb
jne
jg
movsb
mov
inc
negl
call
cmp
fcompl
and
mov
or
or
aam
push
and
adc
push
push
movsb
xor
or
fimull
xchg
nop
stos
pop
xor
xor
test
test
mov
cmp
jmp
add
fs
or
sub
rdtsc
rorb
in
sbbl
push
xor
lods
icebp
mov
outsl
sbb
inc
pop
mov
jge
pop
loop
fwait
iret
jmp
sub
clc
adc
mov
adc
imul
cmp
test
mov
fnstsw
je
mov
lret
push
in
push
iret
sbb
adc
mov
pop
clc
sub
mov
sub
ja
xchg
fbld
fstpl
sub
jbe
mov
jle
or
mov
cmc
lcall
hlt
mov
jb
and
jo
ds
pusha
xchg
pop
xor
leave
test
lret
adc
shll
jae
push
jl
out
cmp
popf
jb
xor
fists
popa
ja
fs
dec
pusha
enter
sbb
sti
ret
or
mov
jnp
stc
imul
adc
xchg
out
in
rcrl
aam
test
je
std
icebp
fs
rclb
cwtl
js
add
pop
pop
int3
mov
fmuls
and
faddl
or
jns
xor
fwait
xor
orl
dec
mov
inc
fs
popa
add
push
imul
sub
mov
rcrl
push
sti
in
andl
push
xchg
sbb
negl
push
or
loop
rcl
paddw
out
in
js
and
call
sub
and
xor
jecxz
dec
pop
js
inc
or
in
pop
or
sub
jmp
fwait
dec
jmp
in
cmp
or
jmp
test
repz
fisubrl
adc
add
orb
jae
test
dec
pop
outsb
and
ss
add
mov
push
loop
adc
rol
lds
sub
inc
lret
push
jae
mov
pop
push
lahf
mov
into
adc
gs
divl
pmullw
and
and
jnp
lret
jae
lea
pushf
cmp
add
add
push
cmp
inc
les
fcomps
mov
loop
jns
xchg
dec
jno
test
push
jle
xchg
dec
dec
dec
or
lds
cmc
insb
and
push
xchg
cmpsl
pop
cmp
pop
push
jns
inc
rorb
jne
add
and
out
test
mov
icebp
jp
cmp
or
mov
rcrl
sarb
icebp
negl
inc
add
lret
clc
inc
cmpsl
int
les
cmp
add
nop
cltd
inc
xor
rcll
mov
test
js
or
decb
add
sub
cvtps2pd
sbb
xor
pop
in
fcmovbe
jecxz
dec
xor
push
mov
sbb
imul
mov
dec
sbb
pop
insl
test
xchg
cmp
mov
pop
jecxz
rorb
or
mov
mov
xor
shl
jbe
fimuls
push
lods
fsubl
dec
fistps
rcll
pop
inc
dec
fldenv
aas
jmp
inc
xchg
lret
add
cmovp
sbb
sub
inc
stos
and
pop
inc
int3
aaa
push
movsl
decl
cmp
pop
jmp
in
inc
ret
xlat
jne
aaa
paddb
mov
pusha
test
sub
mov
inc
repz
or
xchg
pushf
xor
dec
cmp
pop
or
mov
cmp
ds
das
mov
lcall
inc
pop
or
adc
lcall
lret
mov
jmp
dec
shrl
pop
into
lds
call
push
jle
or
pop
sub
insb
pop
cmp
xchg
repz
pop
or
jg
xchg
int
cmpsb
outsl
mov
jo
aaa
adc
add
fadds
pop
vmulpd
mov
out
dec
dec
fwait
stos
add
gs
mov
jmp
xchg
xorb
mov
pop
arpl
dec
jne
sub
adc
mov
sub
jno
adc
jmp
int
ljmp
adc
mov
and
push
outsl
add
pop
movsl
scas
and
sub
xchg
shrl
mov
test
jbe
pushf
adc
in
orl
cs
cltd
or
aas
pop
js
push
pop
cmc
into
pop
sahf
clc
sub
push
xor
test
push
imul
xor
push
das
test
push
push
fs
add
sub
mov
imull
stos
mov
inc
cmp
int
mov
mov
stos
jns
pop
roll
mov
les
sub
dec
inc
aad
sub
or
xor
imul
loop
test
sbb
ss
inc
mov
int3
or
out
push
ss
jns
int3
jnp
xchg
cmp
movsb
push
inc
xor
mov
add
jge
push
pop
stc
imul
aaa
ret
gs
push
es
or
in
sub
xchg
nop
adc
mov
gs
addr16
push
push
imul
nop
mov
dec
ja
jle
pop
bound
lea
mov
mov
fcmovne
or
frstor
test
stc
cmp
in
mov
and
fwait
inc
push
test
jge
cld
jo
pop
cmpsl
push
rorb
cmpsl
cltd
loopne
sub
daa
std
insb
shl
gs
call
cmp
pop
mov
rorl
cmp
push
mov
fptan
pop
fnstsw
js
dec
jno
pop
insl
aam
xor
lods
cld
dec
mov
add
xchg
out
and
fstpt
test
repnz
mov
repz
jmp
pop
and
and
xor
rcrl
mov
hlt
inc
rorb
ret
cmc
repz
popf
lcall
push
jp
push
jno
iret
aam
or
fildl
jp
adcb
cltd
sbb
pop
pop
mov
mov
push
adc
sti
xchg
aad
adc
push
mov
cmpsl
pop
bound
aaa
xor
or
adcb
enter
movsl
fsubrl
sahf
popf
lret
jbe
jb
ret
fstpl
push
shrl
dec
mov
jb
stc
nop
or
mov
cmpl
push
sbb
mov
push
rorl
mov
dec
or
push
cmp
and
sbb
pop
mov
inc
in
or
sarb
mov
cli
pmuludq
adc
jnp
sbb
or
repnz
hlt
jge
nop
ja
aam
das
movsb
les
fxsave
orb
clc
fucompp
dec
shll
pop
jmp
push
mov
nop
call
add
mov
cwtl
sbb
test
sahf
jno
cmpsl
in
fcoms
xor
pop
pop
scas
xchg
push
outsb
dec
ficoml
mov
and
jb
adc
pop
mov
sbbl
idivl
shlb
inc
cmp
mov
mov
push
incl
or
sbb
add
dec
mov
das
lret
xor
push
or
cwtl
jb
mov
in
mov
or
cmp
outsb
std
sub
mov
adc
lcall
pop
ds
add
add
cmpsb
jb
or
lds
iret
scas
mov
arpl
insl
fidivrs
fldenv
push
repz
mov
aam
std
call
add
test
aaa
mov
rcr
push
fldlg2
jge
in
cli
or
xor
pop
push
add
std
push
mov
jge
jecxz
lahf
push
push
stc
scas
outsl
dec
pop
mov
lds
and
mov
test
aaa
mov
pushf
outsb
mov
sbb
push
push
data16
lahf
cmc
test
mov
shl
cmpsb
lock
mov
sti
int3
or
cmc
rcrl
cmpsb
adc
inc
ret
ficompl
dec
jne
or
and
jmp
sub
mov
push
lret
imul
jns
or
sahf
dec
cwtl
push
lret
out
dec
aaa
mov
adc
xor
out
fisttpl
movsl
outsl
pusha
pop
loope
push
inc
lods
jo
inc
jge
es
pop
xorb
push
inc
ret
lahf
ss
fwait
pop
bnd
pop
scas
xor
ficompl
fnstsw
jbe
xor
popa
xchg
mov
cmp
inc
lea
push
and
outsl
jno
dec
lret
xchg
xor
lea
sbb
out
loope
les
or
push
sti
cmp
inc
push
sti
fcmovne
out
loope
inc
xchg
mov
sbb
cmp
add
cmp
push
outsb
stc
mov
mov
mov
dec
sub
je
adc
xor
push
dec
pusha
out
adc
sbb
lods
clc
pop
sub
in
insl
and
fwait
popa
rclb
gs
inc
jns
and
repnz
jnp
or
out
loop
adc
mov
or
jns
or
stos
andl
xchg
jb
push
mov
and
iret
cs
cmpsl
push
mov
mov
xchg
pop
notl
ljmp
int
cs
loope
inc
sbb
sub
insl
jmp
mov
out
les
sbb
push
popl
dec
push
inc
cwtl
mov
dec
cltd
call
call
iret
pop
fisubrl
incb
outsb
xchg
ror
test
cmp
and
inc
das
es
in
loopne
aam
aas
das
cld
addr16
clc
xchg
xor
jns
mov
cmp
mov
cmp
jb
xchg
or
jmp
out
mov
jl
cld
inc
bound
scas
push
pop
add
mov
iret
jmp
repz
cmp
and
mov
push
pushf
push
mov
mov
test
pop
adc
insl
mov
and
sti
add
xor
push
mov
dec
test
pop
jne
xchg
push
roll
add
and
mov
iret
daa
ffreep
cmp
leave
test
sub
sub
mov
xchg
stos
shll
inc
adc
mov
scas
xor
push
mov
or
shlb
inc
sbb
fwait
mov
stc
fiadds
pushf
cld
out
sar
ss
jo
pop
and
pop
insl
pop
aam
cmc
daa
cmpsl
pop
push
dec
cltd
xchg
notb
mov
das
sbb
js
test
add
imul
xor
sub
stos
mov
mov
jl
fistpll
je
sub
xor
cmp
sub
js
imul
fsubs
xchg
adc
push
add
inc
test
shl
add
rcrl
int3
mov
mov
jge
mov
sbb
inc
out
inc
loop
fdiv
fbld
xchg
lahf
leave
sub
dec
in
sub
iret
lahf
cmp
mov
mov
cmpsl
mov
push
xchg
fidivrs
test
and
out
outsb
mov
mov
sti
cmc
loopne
aad
int
insb
jno
inc
dec
mov
xchg
scas
mov
inc
mov
shlb
shrl
push
sbb
enter
aad
push
jnp
sbb
xchg
jae
lret
mov
push
pop
push
popf
outsb
scas
xor
or
jl
repnz
insl
dec
push
lds
jp
scas
mov
dec
and
std
sub
insl
xchg
sub
jno
sbb
add
lock
push
add
dec
mov
lret
test
stc
popf
push
and
or
shll
sub
repz
repnz
mov
adc
daa
mov
jp
out
dec
aad
sub
leave
push
stos
adc
sbb
in
hlt
out
push
jle
dec
add
lock
mov
adc
aad
mov
daa
cmp
mov
and
outsl
ds
mulb
in
and
clc
adc
rorl
xchg
ret
jae
es
insl
nop
cmpsb
sbb
dec
mov
bound
jo
push
xor
insl
push
imulb
pop
sub
ds
or
jp
stos
sbb
andl
adc
enter
mov
pop
add
dec
push
and
dec
and
xlat
dec
shrb
mov
fs
stos
adcb
pop
ljmp
loop
pop
fnstsw
rcll
or
xor
test
mov
test
aam
mov
les
mov
gs
sbbl
loope
out
imul
dec
pop
inc
mov
cmp
dec
sub
fists
gs
mov
fwait
insb
ljmp
jmp
mov
rol
jge
xchg
xchg
ds
cs
mov
testl
adc
push
out
das
sbb
in
aaa
inc
out
rol
rcll
ror
cmp
inc
and
loop
mov
lret
or
cmp
jne
xchg
cwtl
das
xchg
mov
mov
fstpl
mov
inc
adc
jo
or
inc
xchg
pop
fcmovnb
cmp
icebp
mov
xchg
jbe
push
mov
jl
popa
mov
pushf
cmp
mov
jmp
clc
sbb
sub
pop
jecxz
dec
shl
xorb
dec
push
es
daa
cld
pop
inc
jne
and
mov
add
inc
fdiv
dec
mov
push
push
dec
mov
add
pop
in
add
mov
movsb
filds
inc
dec
xor
in
iret
mov
filds
push
cmpsl
orl
fiadds
sub
cmp
shlb
cmpsl
pushf
rcrl
jo
xchg
inc
mov
sub
lds
adc
pushf
jnp
scas
fwait
add
int
pop
lret
dec
or
and
jl
pushf
inc
fidivrl
dec
popf
outsb
jle
adcl
sbb
mov
mov
ret
enter
add
sub
jl
or
mov
cld
mov
fwait
fidivs
cmp
stos
and
mov
sbb
movsb
mov
test
xchg
sub
mov
subl
push
push
rep
gs
jg
xor
adc
fs
int
xchg
repnz
sbb
push
jae
imul
cmc
into
dec
jo
lds
jnp
jl
add
enter
pop
xor
aaa
xchg
incl
sbb
ficomps
push
dec
sub
lea
push
rol
adc
insb
stos
sbb
out
push
push
push
or
flds
jg,pt
mov
int3
lret
jns
sarl
ss
push
jbe
jo
mov
icebp
xchg
insb
pushf
test
sbb
inc
inc
mov
push
ja
popa
adc
mov
add
mulb
xor
cmp
fnsave
jb
jnp
in
cmpsb
lret
popa
mov
into
add
adc
mov
scas
es
mov
jge
scas
xchg
sub
mov
pop
push
sbb
mov
push
push
movsl
inc
popa
jmp
fsubrl
dec
push
movsb
jmp
ss
test
jbe
rcr
cld
lcall
xlat
lds
pop
ret
xchg
push
outsb
or
inc
outsl
fdivrl
or
and
insl
xlat
push
das
mov
adc
mov
pop
xchg
dec
stos
test
mov
sbb
cmp
lods
repnz
int
imul
xchg
mov
icebp
xchg
xchg
inc
pop
outsl
mov
jnp
sub
pop
xlat
mov
xchg
xor
jbe
and
das
sbb
aaa
sub
adc
or
loop
push
into
outsl
cltd
ss
fdivs
pop
inc
stos
shrl
cld
test
sub
jge
pop
inc
shr
rcrl
mov
mov
and
pop
stc
aad
sbb
jae
scas
and
mov
stos
or
dec
jne
mov
push
out
leave
or
iret
push
or
and
pop
lcall
testl
fildll
iret
lea
outsb
out
outsl
nop
jae
cmp
cmp
std
aas
push
adc
jp
cmpsl
setle
out
push
adc
subb
jnp
inc
sbb
repz
or
and
pop
shlb
xchg
aad
in
inc
lret
in
xchg
xor
adc
bound
jnp
loope
icebp
push
rcl
pop
xchg
mov
mov
and
insl
in
call
cli
imul
add
sti
lret
jmp
jg
hlt
add
gs
add
push
adc
or
out
push
out
clc
and
push
jp
in
add
gs
lock
sbb
inc
fisubrs
test
cmp
or
sub
orb
jns
ret
push
fnsave
lcall
mov
push
sbb
dec
imul
aad
int
outsl
pop
push
imull
mulb
pop
imul
pusha
out
mov
stc
adc
mov
test
jge
dec
cwtl
into
add
fnstenv
mov
out
sbb
insb
or
pop
filds
sub
pop
lods
push
and
jle
jmp
out
jmp
movsb
jle
sarl
mov
jnp
adc
testl
mov
les
out
dec
ds
cs
mov
mov
in
pop
lret
shlb
js
add
cli
popa
sbb
fistl
lds
lods
cmp
les
mov
stos
rcl
and
jnp
jg
inc
jno
sbb
ja
push
sbb
ficoml
or
into
cmove
sub
sbb
das
cmp
bound
subb
push
lahf
insl
mov
mov
sub
lods
hlt
std
out
or
jg
dec
lea
mov
jb
xchg
test
jbe
popf
mov
subl
les
add
jno
inc
lret
sbb
sbb
sahf
mov
jle
popa
nop
ss
cmpl
stos
xor
in
lods
dec
scas
clc
cmp
push
dec
inc
pop
sbb
cmp
jae
ss
inc
push
adc
mov
sub
movl
sbb
xchg
stos
stc
movsl
jle
ss
inc
xchg
jmp
int3
pusha
xchg
out
mull
mov
cltd
jnp
rorb
jns
or
xchg
rcll
pop
lods
cmp
sahf
add
pop
mov
mov
ds
xchg
jb
inc
fistpl
add
adc
cmp
ljmp
inc
sbb
movsb
or
lods
or
xchg
add
daa
and
popa
aas
cs
aam
out
dec
popl
cltd
repz
and
xchg
mov
adc
sub
and
das
testl
sub
inc
pushf
stos
scas
push
push
fnstenv
lods
xlat
sbb
jbe
xor
repz
pop
cmp
nop
fwait
test
stc
lods
cmpsb
fsts
int
pushf
mov
imul
les
in
out
cmpsl
add
mov
push
in
loop
shrl
hlt
punpcklwd
cmpsl
gs
loop
adc
pop
lret
push
call
sub
mov
mov
jbe
lcall
idiv
pop
dec
dec
lcall
mov
jb
lock
mov
xor
les
aam
mov
jp
pop
and
cli
inc
subb
pusha
lahf
loopne
mov
dec
fdivl
mov
dec
sbb
xor
mov
sbb
int3
js
dec
push
xor
cmp
pop
jo
pop
sbb
push
imul
dec
jge
out
jmp
dec
stos
cs
es
mov
cli
sbb
scas
jge
shrl
inc
mov
lret
xchg
sub
inc
mov
shr
aam
and
ss
pop
jecxz
inc
pop
imul
pop
xor
cmp
dec
icebp
mov
jbe
shrl
sti
push
sbb
hlt
lds
jg
mov
mov
push
push
push
push
hlt
cltd
mov
andl
sub
repnz
inc
arpl
dec
xor
or
cmp
outsl
dec
int3
sbb
scas
push
add
stos
pop
pop
lock
cwtl
leave
inc
cld
push
loopne
test
sbb
push
insl
les
out
jns
mov
mov
cwtl
lea
mov
mov
popf
sbb
mov
mov
lcall
loopne
sub
mov
inc
aam
mov
xlat
pop
add
scas
cwtl
es
std
fsubrs
jmp
mov
push
lock
jle
rclb
jns
call
andl
pushf
and
jo
outsl
scas
sbb
js
jne
cwtl
cmp
jecxz
sti
push
je
stos
jle
dec
jbe
loope
icebp
stos
inc
lods
add
negl
jae
js
sbb
ret
mov
out
cmp
pop
and
adc
cmpsb
js
mov
lock
hlt
xorl
decb
pop
pop
test
je
lea
push
pop
xchg
sub
std
sti
int
push
add
push
enter
add
dec
push
flds
cmp
jge
jo
les
push
mov
jns
or
or
mov
adc
mov
push
xor
jb
inc
insl
or
scas
add
cmpsb
test
and
hlt
cmp
mov
ljmp
xor
push
movsl
fcmovu
js
outsb
dec
insl
sarl
push
fsubrl
mov
mov
xorb
std
xchg
mov
das
sarl
loopne
and
in
je
fadds
cmpsl
addl
cmp
loop
andb
jbe
stos
cmc
cs
fidivrs
icebp
ds
hlt
mov
lods
push
addr16
push
jns
xchg
xchg
jb
pusha
out
cmp
or
movsb
xchg
jmp
xor
test
int
pop
xor
pop
adc
pop
and
or
ds
add
xor
icebp
xlat
inc
inc
xchg
push
cs
repnz
push
and
push
pop
iret
dec
mov
ret
movsb
mov
popa
mov
mov
cmp
insb
push
out
into
cmp
xchg
int3
and
std
inc
inc
fsts
mov
lods
int3
cmp
jmp
mov
cmpsb
push
jge
ja
push
xchg
lea
adc
clc
mov
fldl
loopne
mov
mov
cmp
mov
and
cmp
in
adc
and
push
sbbb
insb
jne
gs
pop
int
scas
leave
mov
dec
mov
inc
hlt
xchg
add
xchg
and
adc
rcr
push
cmc
jnp
leave
and
popf
rcll
lcall
add
push
cmp
rclb
stos
adc
jle
pop
fwait
outsb
push
enter
xor
pop
outsl
pushw
inc
and
test
out
jge
mov
cmp
gs
xchg
lds
mov
call
mov
mov
mov
cmp
mov
adc
int3
adc
jg
cmp
out
jle
sahf
scas
icebp
or
jmp
ror
pop
adc
in
inc
sbb
push
aam
test
mov
sbb
popa
mov
mov
adc
pop
or
lods
sub
imul
std
loop
sub
fldenv
inc
aam
xlat
ja
cwtl
insl
sbb
jnp
dec
cmp
xor
add
cmp
shll
lock
and
sub
pop
mov
shr
jae
outsl
cmpsb
jbe
gs
bnd
xlat
xlat
lcall
push
push
enter
jle
dec
stos
sti
pushf
adc
loopne
and
xchg
jno
sub
imul
sbb
add
fiaddl
lods
or
mov
mov
insl
out
sub
scas
push
cmc
xor
pushf
cmp
xchg
add
inc
mov
and
shll
maxps
sti
xchg
adc
in
inc
and
mov
mov
mov
sub
pop
sbb
aaa
mov
je
push
jbe
jnp
and
sarl
push
mov
jp
dec
pop
xchg
fldt
mov
sbb
or
mov
loope
pop
sbb
psrlq
mov
mov
repnz
test
and
les
je
lcall
lods
outsb
sbb
std
das
add
popa
in
subb
xor
push
pop
xchg
loopne
aaa
push
and
xchg
xchg
sub
xor
stos
push
repz
pop
mov
aam
xorl
int3
int
pop
mov
mov
xlat
mov
cmpl
or
jge
adc
pop
aam
mov
aas
sbb
pop
inc
jo
cmp
icebp
movsl
mov
cld
fcmovnb
cmp
adc
adc
jnp
sbb
push
in
adc
or
aad
rolb
sti
or
cltd
popl
push
cltd
repz
call
cmp
loop
sti
ret
or
pop
or
testb
insl
fs
popf
std
lret
xor
ffree
call
imul
jnp
pop
pop
mov
and
mov
jno
fwait
mov
and
daa
push
out
fsts
dec
pop
out
push
mov
ss
sub
cmp
mov
push
into
mov
pushf
cld
mov
fsubs
add
imul
cmp
pop
shlb
push
push
jecxz
and
popa
inc
mov
fsubl
lret
pop
insb
add
mov
andb
dec
pop
mov
stos
fsubs
jl
imul
mov
add
clc
lock
fldl
lods
movsl
add
and
loope
pop
into
addr16
insb
fidivrl
adc
or
push
daa
and
popf
xchg
movsb
ror
push
mov
or
pop
jae
jo
movsb
or
data16
mov
pop
addb
rcrb
pusha
ret
mov
push
inc
outsb
cltd
rorl
mov
lea
xor
test
std
pop
lret
outsb
pop
jo
test
sbb
jmp
mov
hlt
dec
add
stos
pop
pop
dec
xchg
mov
mov
call
mov
jno
add
das
cltd
shl
dec
xchg
cmp
push
movsb
rcrb
xchg
push
xor
xchg
pop
jne
jecxz
rcr
mov
sub
ljmp
loope
push
adc
je
int3
mov
call
push
popf
cmpsl
mov
jns
mov
out
std
pop
inc
cmp
scas
jp
ret
mov
or
pop
adc
fsubp
daa
insb
mov
hlt
outsb
cs
push
outsb
lods
ffree
sbb
add
nop
negl
repz
idivb
mov
add
nop
mov
pop
push
jnp
fldcw
sahf
mov
shl
push
ljmp
dec
inc
popa
jg,pt
mov
push
xchg
movsb
push
mov
test
cmp
jmp
mov
scas
sub
pop
dec
sub
mov
dec
dec
pop
cmp
movsl
dec
dec
repnz
add
aad
dec
pop
push
stc
sahf
cs
mov
in
pop
testb
xor
mov
xor
sti
inc
xchg
mov
int3
cmp
pushl
and
and
into
fildll
scas
pop
pushf
sbb
mov
and
cld
into
adc
sbb
flds
push
lods
mov
sub
fstps
fidivl
pop
lret
mov
fidivrs
out
mov
or
cli
jbe
lods
ret
lea
ror
lods
push
add
out
test
push
inc
xor
imul
dec
inc
push
ljmp
xchg
cmp
sti
cli
fnstenv
in
repz
xchg
adc
mov
out
je
inc
cmc
cmp
xchg
icebp
mov
add
int
push
jb
xor
add
and
out
mov
xor
icebp
adc
loope
cmp
add
adc
mov
push
and
sbb
fs
push
jnp
push
mov
jg
fisttpl
ss
idivl
add
test
insb
adc
leave
aam
sahf
lret
jle
loop
mov
imull
enter
movsb
stos
xor
jb
jge
inc
clc
or
mov
fucomip
lds
inc
enter
and
loope
or
nop
mov
inc
jb
mov
push
icebp
push
inc
mov
pop
cmp
popa
inc
and
es
mov
mov
jle
pop
lahf
cmp
pop
sti
xchg
pop
ret
pushf
add
jg
pop
imul
callw
mov
stos
loopne
lea
add
imulb
lock
andb
inc
xchg
mov
xor
stc
sbb
dec
ja
inc
sbb
mov
adc
add
sub
sub
sub
adcl
add
pushf
or
aad
sub
lcall
jbe
inc
or
dec
add
jp
inc
bound
jmp
pop
ret
cs
int3
cld
cmp
decb
das
cli
out
sub
adc
push
jg
pop
cli
jns
scas
nop
loope
add
xchg
ss
push
leave
dec
xchg
cmp
dec
fsubl
sub
mov
mov
nop
sub
jg
mov
ss
cmp
int3
jecxz
jl
repnz
lret
mov
xchg
mov
mov
loopne
mov
and
test
push
jne
push
in
jmp
ret
test
clc
rcrb
adcl
sub
adc
aad
jle
lret
dec
push
push
bound
pop
mov
int3
mov
out
ds
rorb
xchg
fwait
iret
mov
mov
inc
adc
int
fs
shlb
xor
pop
mov
out
add
les
mov
and
lock
mov
jbe
incl
sahf
movsl
out
push
mov
ljmp
into
rolb
xchg
cwtl
cmp
mov
int3
jl
mov
jle
fstps
mov
dec
les
fdivs
ss
loopne
mov
div
push
dec
lahf
fwait
add
inc
add
cmp
jmp
jge
mov
insl
test
lcall
mov
push
push
cmp
mov
push
inc
xchg
ret
movsb
imul
scas
pop
pushf
lret
scas
mov
loopne
into
jns
push
inc
outsb
adc
mov
sti
cwtl
cld
or
cmc
mov
sub
jns
adc
add
cld
mov
pop
add
push
fwait
stos
xlat
add
lret
or
movsl
cmp
fcmove
cmpsl
lret
leave
or
xchg
das
adc
or
dec
mov
mov
fisttpll
cmp
jmp
bound
xor
mov
mov
addl
sarb
inc
mov
push
adc
rorb
mov
pop
fsubs
fmulp
sar
icebp
mov
mov
imul
les
or
sbb
call
jo
mov
loope
jb
dec
jb
mov
adc
movsb
iret
cmpl
xchg
sub
xor
mov
jbe
int
outsb
jbe
fwait
mov
add
into
fadds
jge
rorb
jg
mov
inc
rol
repnz
scas
xor
jb
mov
mov
lahf
dec
ja
xor
adc
cs
loope
or
jo
adc
push
cwtl
pop
jg
je
test
outsb
les
js
xchg
dec
dec
jnp
loope
push
sti
shl
sub
popf
lahf
iret
cmp
es
cmp
xchg
clc
cmp
test
dec
cltd
lea
cmc
push
int3
push
and
cmp
negb
pop
add
lods
inc
in
pushf
loop
add
cmpsb
insb
ja
out
mov
fwait
lahf
sarb
arpl
out
lcall
fs
pop
push
cmp
or
stos
and
iret
push
es
pop
das
mov
ror
loop
jae
pop
cmc
and
jl
inc
loopne
jmp
aas
xchg
test
xor
pusha
add
mov
popa
cli
mov
add
into
std
cmp
testb
xor
mov
xor
aaa
fld
cmp
mov
sub
jo
or
push
mov
mov
xchg
mov
loop
repz
lret
aaa
fucomi
shl
xor
inc
ss
sbb
dec
sbb
cld
lahf
mov
scas
rclb
mov
push
mov
cltd
imul
je
add
xchg
in
popa
andb
push
lds
inc
mov
out
xor
xlat
lock
xor
jl
dec
testl
mov
push
pusha
pop
jbe
lods
outsl
ja
fmul
mov
in
add
xchg
adc
insb
mov
lret
pop
aaa
andb
mov
push
sarl
xor
sbb
inc
mov
jbe
xor
dec
js
divb
inc
pop
cmpsb
cwtl
push
and
cmp
insb
sub
out
push
daa
loope
pop
icebp
sbb
ja
std
jo
jo
ds
push
call
aam
inc
mov
mov
inc
rorb
and
adc
nop
fstpt
xchg
push
and
in
cmp
mov
mov
adcb
lahf
orb
pop
ror
dec
add
dec
add
push
and
scas
pop
sbb
pop
jmp
jae
lret
adc
sbb
dec
lds
add
pop
icebp
int3
iret
mov
xor
jae
xchg
adc
lods
jmp
sarb
xor
sbb
jns
lock
sub
call
ljmp
into
subb
pop
mov
jo
mov
add
mov
mov
test
fiaddl
mov
mov
leave
lods
movsl
bound
outsb
dec
pop
cmpsl
sub
pop
jmp
pop
daa
mov
in
movsb
jne
pop
fistl
test
leave
aam
std
dec
jae
or
mov
xchg
cmpl
not
jb
mov
dec
mov
pushf
ficompl
mov
cwtl
pop
inc
js
xchg
inc
jbe
add
clc
mov
jo
cli
cmpsl
adc
or
push
enter
in
push
int3
adcb
jg
mov
mov
clc
pop
arpl
jge
push
sub
add
frstpm(287
xchg
movsb
add
sub
push
test
push
cltd
lret
sub
popa
or
mov
mov
push
xor
mov
cmc
jo
ficoms
out
ret
mov
sub
in
cmp
je
loopne
mov
pop
sbb
repnz
bound
filds
and
adc
repz
push
push
add
inc
ret
mov
push
cmp
lods
mov
cs
sbb
iret
cmpsb
insb
ljmp
jno
jnp
adc
stc
pop
mov
pop
mov
or
lods
imul
insl
pop
test
mov
movsl
pusha
aad
sbb
cltd
mov
popa
insl
xor
cli
scas
mov
aam
inc
jle
mov
mov
adc
dec
inc
dec
shll
lret
notl
cmp
xor
es
jecxz
test
arpl
repz
sbb
sbb
shrl
mov
cmp
mov
lret
outsl
lahf
repnz
adc
push
mov
mov
push
inc
movsl
mov
mov
call
cmc
das
es
jmp
pminsw
cmpsb
jge
imul
dec
inc
and
jp
xchg
xadd
test
push
inc
xchg
stos
js
lahf
movsl
mov
out
lret
jns
xor
loope
rcr
cltd
xor
push
sbb
insl
loopne
push
xor
dec
ds
sub
xor
adc
es
mov
mov
push
mov
inc
cld
inc
sub
es
outsl
sub
mov
mov
and
xchg
out
jno
add
xchg
sub
adc
mov
jno
lret
dec
loop
outsl
or
push
adc
inc
les
or
fisubrs
out
push
cld
insb
negl
add
das
dec
xchg
test
bnd
xchg
mov
out
dec
idiv
int3
subb
iret
mov
in
inc
out
jns
or
lods
adc
je
cmpsl
push
cwtl
rclb
push
add
in
sbb
enter
das
pusha
jg
in
jl
mov
fidivrl
jae
add
outsl
pop
cwtl
inc
or
adc
lea
test
mov
adc
jb
sahf
lcall
pop
pop
mov
mov
add
or
fs
mov
mov
xor
or
idivl
push
int3
or
fidivs
push
inc
fisubs
add
mov
stos
aad
adc
lock
adc
cmp
jae
mov
in
xchg
add
outsb
fldt
cmpsb
emms
xor
pop
sbb
lods
nop
xlat
or
mov
jns
push
loop
pop
arpl
imul
pop
leave
pop
push
mov
aad
in
mov
lods
sub
mull
inc
xchg
hlt
mov
or
lds
aas
popa
lea
mov
stos
adc
cmp
cmp
movsl
adc
dec
xor
xchg
dec
xlat
sub
add
daa
xchg
inc
js
stos
mov
cmpsb
rcrb
add
sbb
mov
outsb
fstps
fwait
sub
mov
aaa
fcom
or
and
pusha
or
in
mov
push
test
sub
xchg
pop
xchg
sbb
push
imulb
mov
popa
enter
pusha
arpl
sbb
xor
mov
add
fadds
xor
shrl
pop
or
or
js
sub
mov
jnp
imul
adc
inc
lret
mov
cmp
int3
fidivrl
pop
in
push
and
inc
icebp
outsl
mov
test
mov
in
in
popa
lret
lahf
cmp
and
std
and
adc
xchg
dec
pop
js
or
jg
and
xor
scas
stos
es
push
scas
outsl
mov
iret
sub
and
stos
out
or
ret
adc
movsb
fmul
jnp,pn
fstpt
cmp
shr
ss
inc
fmull
push
dec
dec
mov
xchg
jmp
jns
cmpsl
xor
ja
dec
and
cmp
movsl
add
das
and
test
and
repz
mov
cmc
daa
pop
jnp
jmp
aas
jb
inc
mov
stos
mov
fwait
push
jecxz
jae
push
movsl
fldl
mov
xor
fidivs
pop
xchg
xlat
subl
push
lods
ret
adc
insb
push
jne
xlat
mov
xchg
scas
pop
daa
and
push
shl
lods
mov
stos
int3
hlt
cli
das
rcll
out
dec
loopne
int
out
xchg
and
mov
xchg
xor
xchg
leave
pop
loopne
lcall
mov
std
mov
xchg
leave
mov
dec
add
and
loopne
orl
adc
in
dec
fwait
inc
xchg
out
pop
push
test
lods
jl
sub
popl
and
test
mov
dec
add
mov
lret
jl
ljmp
inc
sub
push
push
or
dec
xor
and
out
adc
jg
out
jecxz
rcll
popf
outsl
pop
add
mov
lret
adc
sar
add
into
and
mov
cli
cmp
aas
shll
daa
test
shrl
push
fcmovnu
ret
add
cmp
xchg
cli
in
xchg
aad
in
cmpsl
mov
test
mov
adc
jmp
inc
mov
in
xlat
int
addr16
mov
clc
cmp
test
daa
pop
cs
cmp
push
sti
rorb
dec
rorl
sbb
mov
jge
mov
shlb
xchg
or
sub
ds
mov
cmp
jp
cltd
adc
pop
push
repnz
lret
sub
jns
cmp
jno
pop
xor
jmp
push
fdivrp
rcll
repz
pop
lcall
sub
jne
popf
imul
xchg
adc
daa
jae
and
mov
cltd
and
xchg
and
adcb
cld
out
arpl
mov
out
addr16
mov
daa
cmp
jmp
ss
pop
dec
ljmp
cmpsl
pop
loop
push
outsl
movsb
mov
pop
mov
test
or
out
lret
incl
sub
mov
into
out
sahf
add
push
das
pop
mov
cmp
cmp
aam
cmp
or
mov
test
mov
imul
adc
imul
jb
xchg
loop
jl
sub
sub
loope
call
jae
cltd
jg
test
pop
pushf
aam
sbb
mov
or
fwait
cmc
enter
xchg
loopne
lods
and
pusha
push
insb
mov
cmpsl
scas
pop
pop
xlat
cmp
mov
mov
aaa
inc
jb
ss
leave
and
imul
xchg
scas
push
mov
inc
sarl
pop
lret
fstl
dec
cmp
hlt
ret
push
lret
sbb
out
xchg
shl
aas
test
mov
sbb
sbb
sub
ret
push
loopne
mov
ficoms
push
cmp
and
or
nop
lcall
in
jp
mov
call
popa
shll
mov
lock
imul
hlt
lods
stc
cmpsl
mov
push
sahf
cmpsb
cmpsb
xchg
pop
jno
and
stos
or
or
jb
scas
jns
iret
push
push
mov
jnp
xor
loopne
fs
jo
jb
lea
jp
out
cmp
and
sbb
xchg
dec
out
scas
cmp
add
or
ljmp
push
add
xor
jge
cmp
mov
mov
mov
outsb
xchg
dec
mov
inc
mov
popa
scas
push
mov
stos
jle
sbb
jae
ss
mov
test
cmp
xor
dec
or
mov
lret
push
inc
jo
fcmovb
push
push
and
subl
push
push
xchg
inc
aaa
icebp
sub
xor
ds
dec
imul
std
xchg
pop
xchg
popa
xor
pop
jmp
fs
sub
mov
fldl
xlat
xchg
jne
xchg
outsl
in
jmp
push
lret
jo
les
inc
xchg
in
add
je
mov
das
push
and
test
pop
xchg
push
ror
shll
leave
test
bound
mov
imul
stos
cmpsl
mov
cli
cmpsb
mov
dec
mov
jns
and
and
xor
insb
push
mov
xor
or
sbb
arpl
dec
dec
pop
xchg
mov
int3
inc
js
addr16
mov
int
mov
in
add
mov
cmp
jae
fmuls
cmp
jmp
add
mov
add
fnstsw
mov
xchg
pop
dec
int3
and
or
subb
std
mov
xchg
mov
addr16
lahf
gs
mov
cld
ret
xor
je
stos
ja
mov
xchg
pop
push
nop
scas
clc
xor
test
xchg
std
mov
out
ljmp
sub
aam
push
or
cld
fdivrs
jmp
mov
jbe
jp
ljmp
fildll
jecxz
insb
cli
aam
inc
movsb
jecxz
mov
dec
pop
xor
insb
jl
dec
sahf
js
sub
add
mov
aas
push
dec
in
dec
or
hlt
cli
lret
xchg
test
add
sbb
push
or
pop
inc
inc
pop
std
pop
imul
mov
cmp
pusha
insb
aam
cli
pop
dec
pop
cmpl
mov
dec
in
xchg
stc
ret
adc
and
cmp
lcall
cmpsb
pop
mov
arpl
pop
cmpsb
cmp
addr16
ss
sbb
cmp
jmp
add
sub
cmpb
sahf
dec
ljmp
cmpsb
pop
hlt
dec
pop
cmp
adc
ja
sbb
daa
xor
cli
in
gs
sbb
sti
mov
fldt
push
mov
cmp
xlat
test
jnp
dec
sub
loop
dec
mov
cmp
inc
lock
sub
jnp
mov
lret
mov
ja
mov
mov
mov
fadds
lods
pop
cltd
inc
dec
push
rcl
sbb
jno
in
loop
idivb
push
mov
xchg
or
or
movsb
outsb
pop
push
xchg
js
test
or
jle
inc
clc
pop
adc
cmp
in
repnz
add
leave
out
pop
mov
shl
js
mov
adc
and
push
mov
pop
mov
mov
mov
sub
and
dec
loopne
xchg
mov
loopne
xor
popa
lds
rorl
and
in
in
sbb
pushl
mov
push
imul
test
cmp
and
mov
xchg
lds
lds
int
xchg
adc
sub
xchg
adc
ret
xchg
sarb
jne
aam
rorl
pop
test
or
outsb
cmp
sbb
jl
sub
mov
push
rcl
dec
sahf
push
dec
xor
leave
ds
mov
xor
sti
or
xchg
sahf
aam
stc
sahf
or
push
add
mov
and
or
loop
sbb
push
pop
jl
sbb
or
fwait
mov
fwait
sahf
cmp
dec
xchg
aaa
loope
inc
shlb
sbb
mov
insb
in
fdivs
sbb
int3
jne
cmp
lods
sub
push
aam
imul
jne
pop
xor
dec
lea
imul
mov
mov
movsl
lcall
cmpb
push
sub
loop
sbb
mov
xor
sub
repz
lock
enter
test
mov
test
outsl
in
ficomps
cmp
rcl
iret
fucomp
dec
stc
leave
cmp
leave
lahf
lcall
ja
xchg
mov
call
mov
scas
add
sbb
xlat
bound
xlat
test
inc
cmc
jb
dec
xor
jnp
dec
and
pushf
jmp
cld
stc
out
fwait
cmpsb
in
mov
xor
gs
mov
add
shrb
cmp
cmpsl
jne
push
cmp
test
mov
cmp
sub
jecxz
mov
test
lahf
cmp
dec
movl
cmpsb
push
pusha
push
outsl
stos
aad
outsb
mov
xchg
ret
push
inc
lods
and
shrb
ficoml
pop
or
add
leave
inc
xchg
call
sbb
test
and
jo
inc
test
push
outsl
cltd
mov
pop
pop
xchg
leave
xor
mov
in
push
scas
mov
sbb
sbb
xor
push
in
nop
push
dec
jge
mov
sbb
fldl
daa
inc
sahf
cmp
aaa
shlb
xor
sub
loop
push
xor
loopne
sbb
or
xor
cmpl
dec
sbb
jns
mov
and
fiaddl
cmp
add
push
sub
shrl
stos
cmc
push
jle
mov
imul
dec
xor
nop
jns
jbe
shrl
cmp
mov
sub
add
loope
ds
in
pop
adc
pop
inc
mov
dec
and
in
fiadds
sub
and
adc
mov
aaa
ja
ljmp
das
in
push
sbb
push
in
std
test
out
jp
xchg
xchg
or
inc
sbb
daa
jns
push
loope
popa
xchg
movb
sub
mov
gs
dec
cld
mov
out
sub
inc
jne
movsb
pop
dec
inc
clc
xor
cld
cmp
pop
pop
pop
mov
add
mov
pop
and
xchg
fmul
mov
clc
shlb
sbb
push
xor
loope
idivb
cltd
sbb
and
inc
in
arpl
popa
jns
into
sti
scas
push
std
pop
fdivr
add
mov
test
push
imul
loop
push
in
imul
or
lea
mov
pop
testb
addr16
cmp
mov
jecxz
xchg
xchg
sub
sub
bound
jne
aad
aaa
in
sbb
test
out
lea
scas
adc
cmp
and
movl
repnz
loope
mov
or
shl
cmp
jnp
mov
push
cmp
outsl
pop
shr
and
js
imul
xor
xor
fs
pop
pop
jg
xchg
lea
fs
pushf
xor
pop
sub
push
in
pop
xor
jmp
aaa
mov
jbe
add
iret
ret
dec
stos
leave
pushf
adc
loope
test
lcall
fisubs
dec
in
mov
mov
mov
mov
inc
dec
ret
sarb
sbb
xor
or
adc
prefetch
shll
sbb
leave
testl
or
cmp
fdivl
mov
inc
push
stos
mov
xor
lds
jecxz
cmc
sub
vprotb
mov
sub
popf
inc
pop
std
jb
lcall
and
sub
inc
arpl
fnstsw
in
lods
test
push
aam
jno
dec
push
out
pop
pop
xchg
xchg
lods
mov
lods
dec
in
xchg
leave
mov
xchg
cld
cwtl
push
lahf
shrl
inc
inc
roll
iret
sbb
mov
in
cmp
repz
and
xchg
fadds
ret
and
das
mov
or
mov
add
pusha
icebp
bound
cmp
movsl
inc
inc
fistl
aam
pop
xchg
cmp
aaa
lret
sahf
inc
adc
dec
rcl
ret
int3
insb
adc
lret
lods
push
leave
out
jmp
mov
xchg
adc
test
fistl
outsl
cltd
mov
adc
inc
test
stos
mov
aaa
sub
sbb
out
pop
mov
dec
test
xlat
aas
jnp
lods
fistpll
movsb
inc
xor
ror
sahf
insl
pop
scas
sbb
pop
inc
cld
out
pop
loope
and
and
add
icebp
xchg
shrb
push
cli
and
test
cmpsb
out
mov
add
jb
fs
cmp
push
mov
sub
xor
test
adc
lcall
xchg
push
xchg
jb
mov
cmpsl
inc
pop
add
xlat
pushf
rorl
loop
xor
icebp
int
dec
adc
in
or
jge
insl
mov
notb
shl
dec
dec
imul
out
repz
cmp
jge
pop
fldenv
dec
sbb
lods
das
and
jae
adc
fwait
mov
pop
icebp
daa
outsl
xchg
xchg
dec
ficompl
leave
jb
shll
jb
mov
adc
pusha
mov
ds
cmp
data16
inc
jns
jge
push
mov
mov
add
push
aas
imul
add
ljmp
stc
int3
sbb
or
and
xchg
mov
add
cltd
std
test
aad
dec
xor
adc
sbb
cltd
in
mov
mov
sbb
sbb
cmpsl
arpl
sti
jmp
test
mov
inc
data16
dec
jp
lock
aad
pop
rolb
xchg
iret
and
mov
mov
fidivs
jecxz
and
ja
lcall
ss
divb
hlt
xchg
push
inc
mov
aad
xchg
jl
ret
pop
test
sahf
lods
mov
je
ja
mov
cmp
cld
mov
sbb
lea
inc
add
movsl
fnsave
aad
push
adc
ficompl
lcall
xchg
xor
inc
pushf
sbb
pop
or
xchg
xor
sbb
push
jecxz
data16
xchg
xor
mov
dec
adc
fucomip
xor
daa
ds
cmp
icebp
and
sub
cmp
movsl
loope
nop
das
dec
mov
push
or
ret
mov
or
lds
sbb
mov
lret
push
in
stc
sti
stos
mov
mov
adc
mov
cmpsl
push
add
ds
jns
and
mov
sub
lds
sub
loope
outsb
xchg
mov
loop
shl
pop
mov
loop
xchg
stos
ss
push
shl
test
xor
sub
jle
dec
insb
das
push
into
rorl
cld
in
int
addr16
inc
jge
inc
mov
jp
fwait
lahf
int
sbbb
mov
mov
add
pop
or
cmp
into
cmp
adc
adc
pop
cmpsl
jmp
jae
or
cmp
push
inc
movsl
imul
jmp
xchg
outsb
push
shl
fs
rolb
and
mov
xor
lods
adc
adc
xchg
fwait
or
cwtl
xor
stc
and
mov
dec
xchg
pop
test
inc
movl
mov
pusha
push
lods
jle
dec
aad
jp
xchg
lcall
or
call
cld
add
dec
cmp
adc
push
cmpsb
test
ffreep
stc
inc
push
jge
push
cmc
and
dec
fidivrs
push
fsubs
int3
out
xchg
hlt
and
sub
pop
frstpm(287
cmc
adc
pusha
mov
mov
pop
ret
mov
or
nop
outsl
add
daa
stos
cmpsl
pop
out
mov
mov
mov
pusha
mov
xchg
ja
adc
push
test
cmp
or
mov
add
mov
cltd
out
scas
sahf
mov
xchg
mov
mov
or
cmp
dec
cmpl
int
push
push
in
fdiv
insb
inc
fldenv
jp
adc
adc
and
cld
jp
scas
cltd
jmp
lds
or
xchg
cwtl
push
pop
loop
das
repz
jns
add
pop
in
clc
mov
fimull
jns
lret
mov
fiaddl
in
outsb
shr
xchg
mov
fcmovu
xor
push
sub
and
daa
or
insb
jge
rorb
js
sub
pop
and
mov
fistl
call
pop
loope
xor
cmp
mov
cld
mov
and
jae
jbe,pt
mov
hlt
rcrl
ss
scas
aad
pop
in
leave
popa
add
andl
adc
fnstenv
jmp
add
notb
mov
mov
outsb
mov
mov
and
pop
into
cmp
sbb
jno
imul
test
inc
clc
outsb
mov
loopne
or
mov
jecxz
outsl
scas
rorl
inc
push
and
pop
test
xchg
lahf
mov
arpl
push
dec
std
pop
roll
push
add
inc
pop
lds
and
pop
or
jnp
mulb
jne
adc
xchg
ds
sbb
dec
int
mov
pushf
xor
push
dec
fcomp
fidivl
adc
pop
js
jecxz
push
adc
sub
je
push
std
mov
test
aam
jg
or
stos
popa
push
mov
jge
adc
ja
mov
mov
pop
mov
out
mov
push
jp
pop
repnz
push
dec
jno
xor
mov
cmp
dec
jne
sbb
adc
jne,pt
out
sahf
repnz
xchg
out
lret
lods
pusha
jl
aam
sbb
pop
xchg
add
push
and
mov
cli
loop
shlb
mov
mov
xor
insl
idivb
lret
cmp
ds
fnstcw
sbb
and
pop
or
cmp
movl
icebp
fisttps
jne
and
and
jae
decb
pop
int3
inc
arpl
js
out
xchg
adc
lods
jb
jb
fsubr
sbb
cld
push
repnz
xchg
xchg
cmp
data16
jae
in
cmp
jnp
jns
movsb
testb
in
or
jmp
aaa
ja
adc
add
out
jns
lods
dec
aad
mov
xor
std
jo
and
sti
and
jmp
and
fidivrs
pop
ja
loope
mov
fwait
aas
nop
sbb
rcl
rcl
push
cmpsb
repz
sub
xor
test
inc
or
mov
inc
pop
jnp
pop
push
outsl
push
sbb
cmp
hlt
es
fcmove
mov
xlat
pop
rol
and
cmp
sarl
mov
rcll
inc
add
xor
mov
jg
push
les
push
rolb
mov
sbb
xor
mov
out
mov
xchg
subb
pushf
adc
dec
mov
cmp
xorb
mov
sub
fwait
int3
or
test
hlt
sub
sti
pop
movsb
jnp
add
xchg
jbe
mov
fldt
pushf
stos
add
adc
jnp
push
js
cwtl
shlb
and
jmp
push
cmp
xchg
sub
xchg
and
jbe
loope
test
sub
popa
sti
lds
pop
mov
cltd
fisubl
fwait
or
rcl
sti
stos
icebp
xchg
int
stc
loop
xor
ffree
push
xchg
jle
sub
mov
sbb
outsl
aad
cmp
fisttpll
push
fwait
out
fimuls
inc
jb
xchg
xchg
sub
lcall
in
bound
lret
inc
dec
mov
fucom
ljmp
fbstp
push
daa
pop
aad
outsl
jle
pop
sub
xchg
dec
and
std
sub
lods
mov
push
mov
sbb
ss
cmp
addr16
arpl
iret
push
push
fidivrl
dec
add
bound
fwait
imul
subb
mov
adcb
push
push
mov
mov
repz
shrb
push
cmp
aam
mov
add
or
stos
sarl
out
pop
lock
xchg
lods
sbb
add
dec
or
cltd
cs
mov
sub
cmc
sub
xor
push
and
sub
and
mov
cld
adc
dec
leave
cltd
nop
dec
mov
push
sub
mov
sbb
pop
icebp
dec
cmpl
stos
icebp
xchg
lods
dec
push
das
ds
push
adc
rcrl
insl
cmp
int
lcall
sub
fcomp
sahf
lea
push
add
lcall
and
mov
dec
and
lds
xor
scas
popf
xor
faddp
fwait
aam
and
push
arpl
jbe,pn
inc
xor
cwtl
dec
jo
fsts
inc
inc
push
xor
in
xchg
insb
cmpsl
ror
cli
push
xor
jg
lea
cmpl
mov
fwait
lcall
fs
push
push
mov
arpl
jne
idivl
push
pop
sbb
dec
push
int3
xlat
or
pop
out
inc
lods
xor
fisubs
js
fldl2e
xor
and
xchg
lods
adc
pop
pop
das
xlat
out
mov
xor
adc
test
ret
test
adc
pop
push
cmpb
popa
push
test
sub
out
sub
jg
adcl
or
xchg
push
stos
sbb
push
aas
sbb
inc
dec
int3
cvttps2pi
dec
enter
frstor
fidivrs
out
mov
xor
dec
aad
mov
pop
adc
sti
fwait
test
push
pop
push
and
repnz
or
mov
imul
sub
sub
jge
iret
sub
sahf
cmpsb
ds
ljmp
in
out
xor
cmp
xchg
adc
imul
pusha
repz
gs
and
push
cs
cmc
mov
adc
sbb
aas
test
cmp
sub
xchg
pusha
dec
mul
pop
das
in
fisttpll
jle
in
mov
adc
imul
cmp
jl
leave
gs
and
cli
push
lea
shr
sbb
out
inc
jne
sub
sub
gs
push
pop
push
dec
cmp
bound
leave
adc
xorb
lret
ds
dec
test
scas
adc
dec
loope
jb
jbe
pop
sbb
or
fwait
pop
cmp
daa
fyl2xp1
push
sub
outsb
inc
sub
jns
mov
xchg
xchg
push
and
jns
push
sbb
sub
enter
sbb
xchg
adc
mov
jl
cmc
mov
lock
loop
insl
mov
lds
lock
and
lret
call
out
mov
push
cmpsl
sbb
mov
inc
cmp
dec
pop
inc
inc
push
je
mov
addl
jg
in
insl
je
cmc
fcompp
dec
mov
jg
xchg
in
and
push
xor
xor
pusha
push
fists
data16
sub
push
out
les
out
mov
pusha
sti
xchg
mov
mov
jbe
mov
sub
xor
add
iret
jecxz
jno
stc
add
cltd
nop
dec
mov
xor
jl
addr16
out
mov
mov
movsl
mov
pop
out
repz
nop
out
jp
xchg
dec
jg
adc
sub
mov
jo
and
dec
pop
adc
push
in
cli
jno
sahf
mov
ljmp
ljmp
inc
dec
fs
or
push
xor
aas
mov
dec
pop
inc
insb
repnz
mov
cltd
shll
fbstp
sbb
dec
shl
jmp
mov
sub
cmp
jecxz
aaa
daa
ret
and
popa
mov
mov
sub
dec
ja
xchg
xchg
cmp
out
xlat
out
enter
idivl
hlt
fmuls
xchg
push
xchg
dec
insl
das
pop
fwait
adc
sti
sub
mov
testb
lods
test
add
cmp
or
arpl
pushf
push
push
std
jp
sahf
jl
pop
or
mov
add
jg
mov
mov
cmp
jmp
sub
rol
sub
mov
jge
push
push
add
mov
lahf
or
jecxz
jo
and
pop
and
call
ret
ret
xlat
shll
lods
inc
jecxz
sbb
inc
push
outsb
jnp
test
paddsb
adc
ss
add
insl
inc
jb
xor
movl
loopne
sbb
pop
nop
dec
rclb
sub
out
daa
jmp
mov
cmpsb
xor
dec
pop
movsl
or
fisttpll
jmp
push
xlat
mov
inc
call
shrb
pop
ds
int
and
pop
add
add
adc
mov
je
aam
in
sub
xor
aad
sub
popf
mov
push
addr16
into
jne
into
and
sahf
mov
lods
popf
insb
add
inc
inc
je
push
loope
fidivs
sbb
jb
jnp
mov
mov
in
ss
inc
or
icebp
mov
jbe
jno
orl
lcall
ret
inc
imul
les
aam
out
sahf
mov
aam
out
pop
dec
jg
rcll
int
mov
movsb
adc
test
rol
and
add
xchg
in
dec
mov
or
pop
out
xor
mov
sbb
pop
lret
not
adcb
cmp
xchg
out
push
outsl
mov
xorb
pop
mov
stc
cmp
fmuls
add
inc
dec
push
xor
jbe
int3
mov
lahf
movsb
xor
cvtdq2ps
popa
insl
call
ret
inc
xchg
iret
pop
lea
cli
sub
out
das
daa
lock
mov
cwtl
mov
pushf
jb
stos
outsb
in
in
push
loop
and
add
mov
repz
scas
xor
mov
outsb
je
loope
loope
adc
scas
mov
jecxz
push
cmp
inc
push
push
cltd
insb
jl
popa
sbb
inc
je
test
adc
adc
pushf
aaa
pop
jbe
test
jns
mov
add
sub
fmuls
sbb
rolb
call
sub
pop
adc
jnp
orb
or
adc
dec
xor
pop
sub
movsb
mov
out
in
xor
lea
mov
xchg
stos
jo
inc
loopne
add
fisttps
push
lahf
and
push
pop
dec
out
add
xchg
mov
loope
stos
xchg
scas
mov
xchg
mov
popl
mov
push
pop
push
fwait
pop
mov
jne
std
jmp
dec
push
sbb
jbe
sbb
sbb
fstpl
push
insl
ficoml
ficoms
es
psubw
cmp
shl
sti
xchg
jo
mov
add
xor
push
inc
imul
and
shll
adc
mov
or
lret
dec
test
jmp
fsts
stos
cmp
outsl
stc
cmp
out
inc
mov
in
dec
imul
out
push
push
or
je
repnz
sti
cmp
xchg
lds
mov
xchg
out
or
push
jno
insb
mov
aaa
sub
sti
xor
inc
or
flds
push
fimull
xchg
in
nop
subb
ljmp
sbb
dec
test
pop
cmpsl
pop
int
mov
dec
push
push
adc
mov
lcall
out
fnsave
dec
sbb
sbbl
dec
push
cmc
ja
mov
fiadds
rorb
adcl
pop
push
mov
iret
hlt
sub
add
mov
mov
xor
push
mov
pop
fimuls
pop
xor
jae
inc
jmp
push
xor
jle
call
inc
fisttps
in
sbb
xor
sbb
sbb
mov
enter
lret
cltd
add
lds
sbb
loop
or
sub
cmp
xchg
and
out
push
outsl
in
push
add
jo
stc
jnp
test
mov
pop
mov
sbb
cmpb
or
out
mov
test
fildl
pop
cwtl
xchg
xchg
ja
hlt
mov
xchg
std
fwait
ja
mov
jle
adc
mov
push
sbbl
in
add
out
imul
mov
decb
fildll
call
ljmp
sti
dec
int
adc
js
jo
add
out
leave
mov
ljmp
addr16
fidivl
mov
shlb
sbb
dec
sub
push
leave
jne
mov
push
dec
insb
in
jle
xchg
repz
andl
scas
sub
inc
adc
pusha
les
arpl
in
pop
movsl
cmp
jmp
nop
cmpb
mov
ret
and
lahf
jge
ret
jno
jl
dec
mov
add
add
rcrb
mov
mov
xor
imul
popf
xchg
bswap
out
cmc
jmp
loopne
and
aaa
or
out
aam
dec
shl
inc
sbb
xor
notl
mov
xchg
inc
cmpb
jecxz
cmpb
pushf
pop
sub
pop
inc
lea
test
mov
mov
gs
and
inc
sub
lahf
xor
ss
ds
stc
dec
mov
popf
enter
lods
push
mov
inc
sti
imul
xor
and
out
mov
mov
pushf
cmp
push
xor
pop
jmp
mov
xchg
iret
inc
mov
sub
jle
cmpsb
les
icebp
add
mov
dec
sub
mov
xchg
js
cmp
test
push
pushf
sub
inc
mov
sub
jae
adc
xchg
cmpsb
xor
imul
das
hlt
or
lahf
popf
inc
sarb
xchg
inc
sbb
adc
inc
arpl
cmp
icebp
and
sub
insl
mov
mov
jp
inc
iret
dec
call
push
negl
sbb
cli
mov
push
jno
pusha
mov
movsb
xchg
or
jbe
and
inc
jno
sbb
inc
or
jo
int3
mov
mov
pop
jmp
insl
lea
subb
sub
in
xchg
mov
cmp
js
cmpsl
iret
jmp
cld
add
mov
xchg
dec
inc
popa
inc
ficoms
data16
shrl
mov
and
inc
add
in
mov
pop
clc
cmpsb
push
daa
fs
mov
shlb
dec
lret
ds
push
or
in
testl
jo
pusha
jns
sub
add
and
cmp
jbe
xorb
stos
adc
int
push
fsubrl
lods
test
adc
sahf
mov
mov
mov
out
push
mov
mov
adcl
cwtl
adc
frndint
push
mov
xchg
insl
push
out
loopne
jae
push
sbb
jne
pop
cwtl
xchg
imul
ret
sub
movsb
and
andl
loope
sbb
mov
int
xchg
in
jl
mov
lret
mov
insb
outsl
icebp
imul
pushf
jne
mov
inc
inc
sub
shlb
insb
adc
jnp
aam
in
in
inc
dec
or
rclb
dec
sbbl
cmovbe
fucomp
mov
pop
ficoms
sbb
int3
pop
sbb
or
sahf
adc
jle
pop
or
jecxz
addr16
cmp
dec
arpl
pop
iret
ljmp
or
dec
jp
jno,pt
jo
or
pusha
adc
sarl
fdiv
in
bound
and
xchg
mov
fisttps
test
fs
cli
mov
test
test
or
pop
pop
insl
push
xchg
push
dec
push
call
popa
dec
cltd
loop
pop
test
sub
pop
and
jbe
xchg
mov
or
cmp
xchg
sbb
ja
sarl
pop
es
inc
je
int
mov
xor
repnz
inc
jge
cmp
lret
lahf
rorl
out
fwait
xchg
add
add
pop
es
faddl
sarb
jmp
or
dec
out
int
sub
cmpsl
lret
outsl
pop
add
sbb
adc
test
and
pop
bound
mov
in
arpl
jno
mov
popa
outsl
mov
loopne
push
mov
fbstp
filds
subl
mov
lods
push
jbe
and
data16
xchg
xor
test
ds
sbbb
dec
sub
test
pop
repnz
pop
scas
pop
mov
pop
fldt
inc
repz
clc
cmpsb
insl
pop
xor
test
test
push
cmpsl
mov
jbe
or
fildll
mov
fildl
aad
aad
ljmp
lahf
mov
aad
sub
iret
mov
jne
ret
mov
and
jae
or
xchg
shlb
pop
xlat
cli
stos
lods
int3
lret
sbb
scas
xchg
rcrb
lock
iret
mov
movsl
push
add
mov
mov
pop
notb
dec
pop
jno
lret
loopne
addr16
cld
iret
inc
in
pop
lret
xor
add
pop
mov
cmp
in
sahf
or
mov
push
jg
pop
lret
sub
jne
sub
mov
add
das
aad
jle
push
mov
sbb
lret
int
xchg
jae
movsl
and
loop
fmull
loope
scas
ss
outsl
mov
insb
inc
push
std
push
sti
dec
je
pop
in
lods
pop
scas
in
inc
mov
test
xchg
out
mov
jne
call
mov
push
call
fisubs
popa
mov
clc
mov
daa
xor
or
cmp
adc
mov
cmp
ss
mov
pop
mov
cmc
add
pop
adc
inc
pop
shl
das
fisubl
ds
push
mov
fs
push
xor
out
push
sti
arpl
inc
and
sub
inc
xlat
pop
movsb
mov
and
popf
cwtl
sbb
data16
popa
pop
aas
xchg
mov
enter
xor
cmc
test
mulb
push
sbb
std
sbb
adc
in
cltd
xlat
andb
pop
jne
sahf
inc
insb
fwait
imul
repnz
jnp
sbb
push
or
pop
or
mov
cmp
xor
repz
and
push
and
out
xorb
xchg
pushf
test
clc
clc
cmp
pop
sarb
sub
adc
stc
jno
lea
sbb
sbb
dec
into
and
faddp
shl
sbb
mov
xor
pop
out
jecxz
dec
xchg
inc
jnp
push
fldl
inc
sub
shl
in
sti
and
xchg
cmp
int3
adc
xchg
scas
dec
aam
cmpsb
pop
push
out
sub
mov
mov
pop
or
and
pop
es
out
ljmp
sub
jns
nop
hlt
loope
ret
arpl
int
dec
fdivs
mov
imulb
cmp
orb
test
and
and
out
mov
lret
in
xchg
insb
sbb
push
insl
jbe
arpl
mov
stc
arpl
je
inc
cli
fs
hlt
mov
adc
or
aas
jg
pop
xorb
adc
xchg
cmpl
fcoml
adc
mov
push
inc
icebp
pop
in
dec
mov
test
data16
xchg
dec
rorb
adcb
int
cmp
xchg
mov
add
pushf
cmc
xor
shlb
pop
lahf
and
stos
mov
adc
mov
push
mov
mov
sub
in
loop
inc
popf
in
inc
orb
jae
ljmp
dec
mov
fisubl
mov
mov
adc
aam
insb
cmp
mov
orl
jmp
lds
inc
pop
int
iret
xchg
test
lds
cmpsb
sbb
inc
mov
sub
enter
push
and
scas
sub
mov
jp
add
push
lahf
test
clc
les
aas
inc
ja
loop
test
mov
xchg
and
hlt
subl
xchg
or
cmpsb
in
fcoms
mov
mov
jle
sahf
xlat
xchg
sahf
cmp
fisubrl
mov
inc
adc
in
cmp
cmp
js
add
iret
jp
loope
fcomps
mov
mov
addr16
sbb
daa
mov
popl
xor
pop
push
and
mov
icebp
es
inc
shll
sbb
pop
cwtl
or
scas
xchg
xchg
arpl
adc
loope
in
frstor
xchg
push
pusha
ja
fcmovnu
xorl
cltd
fucomi
inc
lds
jne
add
xchg
add
jmp
rcl
add
movb
cmpsl
dec
insl
and
popf
bound
cld
cs
add
or
push
enter
aaa
push
fucomip
xchg
insl
cmp
fwait
testl
cltd
roll
inc
in
push
stos
push
pop
cmpb
into
leave
or
aam
test
xor
gs
out
lret
jmp
pop
data16
mov
jmp
pop
push
test
push
push
inc
jno
jne
arpl
cmp
or
cwtl
push
ret
jmp
packsswb
sbb
xchg
fmulp
mov
inc
adc
push
das
add
xor
lods
daa
nop
cmp
loopne
testl
jbe
lea
push
dec
das
sahf
shl
or
jl
sub
outsb
mov
xchg
push
mov
xor
shrl
xor
add
push
jl,pn
dec
mov
mov
cmp
fisubrl
push
stos
mov
mov
cmpb
fs
fsubp
sub
xchg
sub
pushf
iret
mov
cli
je
ljmp
das
xor
xor
pop
mov
fldcw
mov
mov
xor
jge
aas
adc
iret
push
cli
adc
push
sti
mov
mov
cmp
inc
into
mov
xchg
push
out
addw
outsl
gs
packssdw
ljmp
cmovp
aad
mov
cli
push
mov
xor
push
add
mov
popf
pop
test
mov
push
jle
outsl
xlat
mov
sarl
loop
xor
lods
test
into
sub
ja
jne
pop
xor
adc
pop
in
jne
dec
nop
sub
xor
cltd
out
call
push
inc
lock
pop
std
push
mov
data16
mov
loopne
pusha
xchg
in
add
pop
inc
ret
inc
xor
mov
jmp
movl
cmc
sti
sahf
nop
jl
adc
push
dec
inc
arpl
imul
pushf
mov
inc
mov
mov
imul
and
mov
push
push
mov
mov
pop
inc
movsb
fnstcw
pusha
add
pushf
xchg
repnz
out
enter
das
push
xchg
popl
lret
popa
mov
test
pmulhw
int3
fnstcw
xchg
xchg
mov
jbe
subb
aas
iret
inc
dec
out
repnz
mov
xor
fcmovb
test
jb
fs
or
jne
pop
jp
repz
sbb
add
arpl
imul
stos
cmp
xchg
xor
nop
sbb
jmp
repz
rcrb
bound
arpl
testl
imull
pusha
outsb
jg
xchg
pop
adc
mov
push
mov
mov
dec
in
mov
and
push
inc
jg
jge
pop
int3
inc
inc
jmp
inc
xchg
xor
adc
or
jb
and
es
adcb
rcrl
sbb
push
adc
mov
xchg
xor
pushf
pop
adc
push
imul
xor
ret
mov
mov
and
push
lods
cmp
and
cmp
xor
fmuls
lcall
test
fisttpll
out
aaa
jle
daa
in
aaa
mov
pop
pop
sbb
push
adc
jle
xchg
sbb
cld
cmp
pop
ja
gs
loop
push
stos
and
lea
jp
push
pop
aas
lcall
jge
or
aaa
adc
mov
jge
mov
int
cmpsl
jl
pop
aam
ja
mov
leave
mov
xor
in
push
lret
pop
shlb
stos
mov
mov
lock
mov
jl
xchg
divb
icebp
pop
sti
pop
out
aas
or
hlt
sub
xchg
inc
icebp
stos
push
jne
xor
dec
sub
negb
insl
loop,pn
mov
lea
rcr
mov
or
pop
pushf
pop
popa
lret
call
cmp
sbb
cwtl
sbbb
inc
je
lea
repnz
cmp
mov
cmpsl
cli
push
and
test
rolb
jno
cmp
adc
pushf
gs
rcl
or
pop
push
lods
repz
adc
mov
or
push
pusha
ljmp
frstor
pop
popf
dec
dec
and
sbb
fildll
loopne
xor
or
int3
inc
es
jge
adcb
scas
mov
xchg
cld
mov
dec
enter
out
inc
fs
cmp
and
ja
cli
dec
test
jge
mov
mov
mov
add
mov
jp
outsb
or
sbb
push
pop
pusha
nop
push
mov
call
xchg
jbe
or
jnp
pop
enter
int3
cmp
xchg
fs
je
cli
ret
insl
mov
pop
lods
inc
dec
push
fsub
add
adc
mov
mov
mov
xchg
pop
fiaddl
and
ja
leave
sbb
aas
pop
std
push
pop
ret
push
les
aaa
adc
into
mov
adc
test
push
push
inc
popf
or
xchg
out
dec
sbb
loope
mov
call
sub
clc
stc
push
xor
mov
xor
mov
sbb
mov
and
dec
inc
xchg
dec
ds
and
sti
adc
or
movsb
xchg
outsl
jl
mov
dec
adc
lret
hlt
mov
loopne
push
mov
xor
fdivs
and
mov
fmull
pop
mov
ret
or
cli
xchg
mov
lcall
ss
je
sbb
data16
inc
sbb
push
xchg
inc
dec
cld
sbb
test
lahf
jp
or
inc
movsl
pop
mov
pop
mov
push
call
ds
mov
lahf
adc
ja
add
add
rcr
cmpsb
dec
pop
sbb
lea
xchg
lock
movsl
addr16
enter
add
jmp
out
iret
ljmp
dec
not
pop
xor
adc
das
fcmovnbe
push
jle
scas
and
test
mov
bound
and
adc
mov
push
aam
sbbb
sub
js
imul
xchg
jb
mov
sub
idivl
dec
jnp
ret
push
enter
cltd
loope
sbb
fcomi
inc
outsb
fadd
pop
addr16
mov
cmp
xchg
mov
out
icebp
mov
call
pop
out
data16
xor
out
mov
mov
sahf
or
mov
stc
lock
lcall
push
shrb
cmp
out
xor
mov
sub
push
testl
fistpll
out
fistps
shr
shlb
aam
jecxz
cmpsl
cmpsl
cltd
sti
stos
fsts
and
xchg
add
nop
mov
or
fst
test
xchg
repnz
jns
add
std
pop
mov
es
jnp
sbb
pusha
pop
dec
cmp
sub
outsb
fwait
jmp
xchg
mov
pop
xor
xor
inc
outsl
jne
loopne
rcrb
pop
int
outsb
push
mov
hlt
loopne
jno
pop
leave
and
jmp
fcom
push
push
inc
inc
jbe
mov
loopne
cmpsl
push
rcrb
or
push
movsb
les
push
fwait
adc
test
or
out
push
je
dec
dec
shl
movsb
pop
jg
cmp
fadd
pushf
dec
into
pop
test
mov
stos
in
lahf
inc
adc
cmc
pop
jo
repz
mov
mov
xor
xchg
inc
push
or
sub
cli
fisttps
adc
xlat
inc
addr16
daa
mov
popf
shll
add
test
lret
jb
xor
xchg
xchg
mov
adc
jmp
mov
mov
dec
pop
jne
inc
mov
lret
out
sbb
lret
inc
repz
jnp
push
subb
mov
lds
bswap
jne
mov
daa
fiadds
push
adc
adc
imul
lahf
shrb
ret
jns
mov
cwtl
lds
nop
movb
pop
enter
je
add
out
aad
lahf
cmp
xchg
in
stos
fdivrs
mov
xor
rorl
add
in
into
cmpsb
push
cwtl
mov
and
loop
aam
je
popl
lds
jns
pop
imul
dec
lret
sbb
lods
sahf
in
mov
mov
mov
pop
leave
test
jno
add
push
stos
sub
and
cli
sbb
and
gs
push
scas
jecxz
cwtl
sub
pushf
les
insb
aas
sub
dec
stos
jl
mov
sbb
inc
xor
pop
cmp
push
cli
popf
ret
push
roll
dec
sbb
or
fcompl
cmpl
adc
ljmp
jl
adc
or
mov
adc
daa
fwait
mov
adc
push
pushf
test
sub
mov
or
xor
repnz
ss
push
lods
idivb
dec
xchg
into
mov
gs
xor
jbe
fldenv
push
mov
in
fisttpl
adc
out
iret
pop
int
js
insl
cmp
fsts
or
and
decl
cmp
mov
xchg
add
adc
je
cli
fs
outsl
in
jge
xor
ret
sub
xchg
mov
and
mov
xchg
dec
mov
mov
dec
cwtl
ds
mov
and
enter
and
add
pop
mov
mov
jo
xchg
inc
cli
sub
xor
pop
icebp
jecxz
ja
movsl
popf
sbb
adc
mov
test
xor
pop
jne
fsubs
int
xor
inc
test
dec
xor
cmpl
lea
adc
popa
lahf
dec
rcr
sbb
mov
sti
dec
out
test
out
call
fistpl
xlat
popa
imul
call
xchg
ljmp
outsl
les
push
pop
and
push
xor
add
sbb
and
sti
pop
hlt
mov
fidivrl
out
push
insb
ss
fidivs
frstor
inc
leave
sbb
ret
inc
mov
mov
hlt
pop
xchg
xlat
pushf
gs
daa
fs
in
mov
dec
mov
shrb
push
out
push
test
push
iret
lock
jle
jb
ljmp
fadds
rcrl
iret
adc
dec
mov
out
and
push
lcall
push
jle
mov
or
pop
loopew
sub
push
pushf
decl
das
shll
push
push
mov
in
add
arpl
sbb
xor
testb
ljmp
ror
xor
test
clc
mov
push
pop
xchg
stos
xchg
cmp
dec
and
std
rcrl
out
xor
divl
imul
lds
imul
repz
movsl
aam
cmc
push
cmpsb
loop
aam
stos
xchg
dec
std
pop
cmp
push
rcrl
push
addr16
mov
mov
sti
push
pop
adc
mov
or
imul
adc
sub
movsl
int3
cmp
adc
movsl
sub
xchg
fwait
scas
cmp
mov
or
or
fisttpll
mov
jne
ljmp
jns
out
shrb
test
sub
push
mov
pop
mov
jl
iret
subl
sbb
mov
push
repnz
jl
lahf
adc
ss
ffreep
leave
add
insl
andb
adc
jmp
lock
lret
ja
inc
imul
sbb
nop
mov
push
out
pop
mov
jl
push
push
testl
dec
or
xor
inc
dec
int3
popa
xchg
xor
cs
je
fadd
dec
flds
pop
into
pop
js
stc
add
xchg
or
mov
aaa
insb
test
shr
adc
pop
inc
rolb
in
shll
cmpsl
mov
xchg
sbb
pop
mov
and
or
sahf
stos
mov
cmpsl
jmp
data16
lods
fcomp
push
ljmp
out
pop
jnp
cmpsl
mov
jmp
pop
repnz
push
insl
sti
pop
movsl
addr16
mov
repz
sub
pop
pop
ss
push
jno
sbb
icebp
xchg
ja,pt
push
jb
jns
cmpsl
sub
adc
jmp
pop
inc
mov
repnz
lret
test
call
fldl
test
cmp
pop
pusha
xor
push
cmp
inc
fisubrl
pusha
pop
add
jl
inc
xor
sub
dec
stos
jle
in
push
inc
fcmovbe
rorl
dec
mov
pop
in
aam
jb
xor
push
cltd
arpl
out
xchg
test
xchg
pop
fwait
test
mov
std
mov
pop
xor
imul
aaa
movsb
cltd
dec
xchg
and
jae
push
push
push
sub
pushf
aaa
cs
pop
sbb
jmp
decb
xchg
lea
jo
jl
mov
mov
mov
push
sub
inc
sarb
pusha
negb
out
xor
lret
aad
pushf
das
gs
xchg
aaa
mov
mov
xor
mov
jl
popa
cwtl
and
mov
mov
push
add
imul
cmp
lods
mov
ret
pop
jae
addr16
push
xchg
es
mov
fwait
in
xor
mov
xorb
les
hlt
jnp
stos
leave
call
out
lret
or
push
bound
jbe
pop
ficomps
jmp
xchg
inc
inc
and
je
pushf
or
pop
orb
pushl
adcl
jnp
push
mov
roll
and
ret
or
jg
addr16
xchg
in
and
adc
inc
xor
movb
jb
shl
rcll
pop
fstl
sysenter
dec
mov
mov
leave
fwait
cmpsb
jnp
je
jne
fwait
pop
popa
and
inc
jge
jae
add
imul
inc
popa
outsl
adc
popa
addr16
jmp
push
mov
fsubl
mov
scas
inc
mov
aad
fsts
aad
sub
cld
adc
mov
mov
pop
call
scas
push
clc
xchg
cmp
fs
dec
adc
in
push
sahf
mov
pop
fists
jns
dec
fisubrl
xorb
popa
lcall
mov
jne
jbe
mov
jne
sahf
push
xlat
test
jge
cltd
aaa
push
or
fwait
sub
outsb
pop
xor
xchg
stos
rep
fadds
sub
dec
rol
cmc
lcall
outsb
jbe
xchg
ja
les
enterw
adc
stc
faddl
add
fidivrs
cmp
repz
sarl
cwtl
and
lods
push
rcrb
jns
je
jle
inc
cld
loope
mov
call
lret
jno
cmp
push
xlat
fwait
icebp
mov
cltd
xlat
out
mov
pop
xchg
xchg
fsubrs
push
dec
insb
scas
xor
xor
push
out
stos
int
add
addr16
jmp
nop
hlt
mov
fmull
inc
pop
out
jb
jp
cmpsb
cmp
fistpl
into
mov
ret
dec
dec
push
in
addr16
mov
scas
or
imul
add
or
sahf
int
jecxz
das
ja
or
and
test
pop
repz
xchg
jne
fsubp
or
test
inc
imul
imul
and
sub
sbb
pop
gs
fnstsw
xchg
mov
lds
mov
call
or
mov
fidivrl
inc
bound
adc
or
aam
ljmp
cmpsb
mov
js
mov
jge
mov
inc
inc
int
js
lcall
rcl
inc
mov
sub
mov
scas
add
stc
stos
sub
cli
roll
shll
lds
inc
fists
xchg
test
outsb
dec
pop
dec
sub
inc
andb
sub
lods
lcallw
ret
xor
xor
sbb
aad
and
adcl
jle
cmpsb
ds
bound
dec
out
mov
arpl
sbb
std
lret
mov
push
fistps
fwait
cmpsb
jmp
pop
lods
add
mulb
push
fstpl
das
push
push
loop
lds
xorl
add
xor
jmp
aaa
mov
sub
or
add
pop
aas
lahf
int
mov
mov
mov
xchg
insb
lcall
inc
out
int3
push
aam
cmp
xor
xor
stos
adc
cmp
sbb
jl
sarb
adc
xchg
stos
bound
pop
xorb
ret
arpl
negb
push
mov
mov
mov
call
sarb
sbb
xchg
icebp
push
ja
mov
icebp
xor
add
rolb
es
jno
push
mov
stos
repz
ja
test
mov
lds
lahf
mov
push
mov
push
xchg
mov
shrl
mov
fdivr
xchg
push
out
mov
es
test
ret
push
lods
push
andb
push
pmaxub
jmp
test
in
imul
xchg
stos
inc
pop
out
add
hlt
rolb
lock
jmp
xchg
sbb
movsb
cmpsl
cmp
call
push
xchg
shlb
pop
mov
iret
outsb
loopne
jecxz
stc
push
jg
cltd
fs
pop
lods
xor
and
inc
test
push
pop
inc
scas
iret
cmc
jnp
xlat
or
andl
xor
mov
add
imul
in
cltd
lods
sub
xchg
in
lea
lahf
mov
cmp
pop
jp
mov
cmp
pop
or
mov
pop
movsl
pop
mov
mov
or
test
inc
outsl
dec
aam
fmul
int
lea
sbb
js
bnd
jmp
ss
scas
cmc
jno
xchg
repz
dec
cmp
push
sub
leave
cwtl
jge
pushf
and
jecxz
pop
push
cli
ret
sbb
cld
pop
daa
sbb
in
add
fisubs
les
les
cmp
aas
aam
mov
jno
jnp
sub
mov
shll
add
cmp
dec
iret
popf
cmp
add
xor
nop
jge
jl
mov
dec
and
out
xor
push
inc
dec
xorb
push
xchg
add
adc
sub
or
xchg
fbstp
es
daa
push
pushf
nop
mov
ret
pushl
arpl
dec
xchg
dec
cmp
movsl
mov
xor
rcll
and
sbb
xor
loop
sub
ss
sbb
in
sbb
xor
inc
mov
in
or
stos
scas
out
push
mov
pop
in
adc
inc
popf
pop
add
fstpl
and
or
mov
stos
sbb
xor
mov
sahf
int3
addr16
jno
mov
push
cwtl
jne
mov
ret
dec
dec
rcrw
and
cmp
sarl
sbb
or
inc
addl
and
mov
je
stos
adc
push
sahf
in
mov
mov
pop
adc
cmp
mov
dec
add
pop
outsb
cmpl
push
mov
mov
xchg
inc
xor
icebp
es
xchg
repz
sbb
imul
mov
sub
push
inc
jo
dec
cwtl
test
mov
add
sbb
aad
cli
mov
dec
inc
lods
lahf
dec
cwtl
ret
sti
fstl
push
sarl
sub
out
fbld
push
cltd
ljmp
and
sub
cltd
push
shr
dec
and
and
aam
test
mov
jecxz
xor
xlat
loop
into
jo
pop
cs
xchg
jmp
mov
sub
cmc
mov
or
inc
testb
iret
and
insl
rcrb
pop
mov
out
das
dec
ss
cmp
imul
call
lcall
jnp
adc
mov
xchg
pop
pop
lahf
mov
or
or
popa
jnp
pop
mov
in
mov
ret
lret
bound
sbb
inc
into
imul
jo
xor
xlat
and
inc
movsl
lcall
movsb
push
add
pop
cmc
sahf
pop
sub
stos
dec
int3
dec
outsb
popa
push
stos
ljmp
inc
decl
iret
rorl
or
scas
pop
pop
fstps
test
cmp
je
ss
mov
push
cmp
out
xor
dec
cwtl
es
sub
pop
ss
loope
lds
mov
push
xchg
xchg
out
mov
repz
mov
lahf
mov
lcall
test
adc
adc
outsl
xorb
lahf
mov
adc
xchg
xchg
aaa
rcrb
adc
mov
lods
std
or
rol
rorl
cmp
jo
xchg
movsl
push
aas
lret
sub
cwtl
push
jno
xor
fdivl
hlt
cs
fistl
movsb
xor
mov
outsl
out
xchg
adc
mov
dec
in
dec
rcrl
jge
pop
jle
dec
mov
andb
cs
in
aad
xchg
test
jae
or
pop
inc
push
int
mov
push
xchg
out
loopne
lea
add
xchg
jns
jle
pop
mov
or
xlat
mov
mov
jg
xchg
xorl
adc
adc
or
xor
fucomip
int3
lret
add
adc
xchg
aaa
mov
or
push
pop
popf
shll
mov
sbb
cmp
cmp
mov
dec
adc
hlt
ret
lret
or
pop
push
pop
push
addr16
enter
xor
pop
jae
addl
insl
nop
iret
arpl
add
out
inc
cmp
mov
arpl
ret
out
jmp
sbb
stos
rcr
jne
push
aam
idivb
mov
movsl
xchg
in
sbb
js
iret
push
filds
fwait
cmpsl
leave
cmpsl
mov
data16
repnz
scas
pop
dec
jnp
and
dec
gs
test
fwait
int
ret
xchg
jg
dec
inc
std
stos
stc
push
jae
adc
cmp
ret
xchg
popf
xchg
xor
inc
les
push
mov
fstpl
test
subl
leave
repz
int3
xchg
xchg
faddl
test
mov
lods
ss
push
and
mov
dec
divl
cmp
xchg
call
lcall
xchg
das
jle
imul
pop
dec
mov
and
ljmp
rcll
in
mov
cmp
fidivrl
sbb
pop
aad
inc
xchg
test
cwtl
mov
imul
dec
mov
lds
lahf
cld
sbb
jp
mov
sbb
add
mov
or
fdivrs
scas
imul
or
pop
jo
sub
imul
pop
mov
cmp
sbb
lret
ds
outsb
ljmp
sub
ret
inc
add
jecxz
test
loope
jne
push
insl
cmpb
enter
ret
es
aam
xor
loope
aaa
mov
dec
sub
pop
iret
or
jg
out
push
cli
test
xchg
cmp
push
test
cli
and
icebp
or
push
mov
mov
xor
movsb
fdivl
jnp
dec
mov
ret
test
imull
shll
inc
ret
push
adc
mov
sti
add
shl
mov
adc
add
push
mov
mov
xchg
mov
and
add
repz
sub
outsl
xchg
xor
adc
cli
inc
fldl
pop
adc
mov
adc
cld
mov
gs
pinsrw
popa
out
and
mov
lahf
loopne
inc
mov
cmc
xchg
stos
jae
mov
or
adc
push
jg
jecxz
sbb
cmp
sahf
xlat
std
adc
js
push
sub
stc
inc
bound
ficompl
push
adc
xor
ja
cmp
pop
fimull
push
aas
xor
adc
or
cmp
imul
xchg
mov
push
and
rcrb
inc
outsl
rcl
jg
inc
das
sbb
mov
stos
and
or
inc
mov
decl
mov
sti
pop
icebp
test
inc
fs
cld
dec
xchg
popa
out
and
inc
sub
das
test
push
inc
xor
mov
leave
jbe
movsb
rcrl
mov
sub
mov
jnp
fs
mov
xchg
add
outsb
cwtl
test
pushf
ljmp
xchg
pushf
dec
dec
rol
jb
dec
mov
ja
inc
imul
arpl
int
adc
in
jmp
bound
xor
pop
shlb
and
pop
cli
xor
mov
xchg
mov
mov
popa
xchg
push
xor
sub
xchg
out
into
pop
xor
mov
dec
add
xchg
pand
lret
in
out
add
imul
jnp
cld
test
cwtl
pushf
into
xchg
arpl
and
cmp
imul
adc
loope
loopne
repnz
into
test
sub
enter
outsb
cmp
push
mov
negb
aas
sub
fnstcw
mov
mov
dec
sti
inc
scas
icebp
arpl
xor
xor
imul
pop
push
sub
imul
jl
lea
pusha
into
and
push
push
lock
jge
sbb
test
std
mov
enter
dec
movsl
sbb
daa
addr16
mov
xchg
add
inc
jns
rol
out
jle
xchg
push
imul
scas
js
outsb
mov
or
icebp
fsubr
xor
cmp
adc
hlt
andl
int
data16
and
xchg
push
xor
jg
pop
pop
outsl
aad
loope
xchg
mov
test
cmpsl
cmp
ficoml
shrb
cmp
inc
cmp
add
in
das
add
jo
int3
xchg
movsb
lock
mov
xchg
clc
fstps
push
and
or
or
pop
dec
and
data16
mov
xor
add
cmp
add
test
iret
int
insl
stc
jmp
jle
bound
call
mov
mov
fnstsw
jae
mov
daa
cmp
shll
dec
test
pop
out
fistl
mov
popa
out
jp
and
xor
mov
mov
idiv
push
xchg
lcall
pop
adc
lcall
sub
aas
hlt
ss
call
fsubrl
adc
mov
imul
stos
push
jge
clc
insb
xchg
mov
call
jl
sti
pop
test
call
push
loope
repz
mov
imul
lret
xor
ljmp
aas
nop
xor
sahf
xchg
adc
test
rol
nop
lret
xor
xchg
xchg
mov
inc
lods
ljmp
dec
shlb
jp
lea
fmuls
mov
pop
pop
popf
repnz
dec
repnz
out
xor
mov
sub
xchg
aas
xor
jge
popa
mov
int3
dec
pop
mov
jmp
repz
lods
ret
aad
mov
jle
mov
push
inc
iret
and
outsb
mov
jno
sbb
aas
loopne
sub
loopne
pop
pop
scas
jnp
scas
sub
in
lahf
push
imulb
sub
mov
popa
or
fcmovb
pusha
or
pop
fwait
mov
pop
out
mov
out
leave
les
mov
loope
jns
call
aaa
xor
loope
jl
aas
icebp
aaa
xor
lods
adc
xchg
imul
es
std
ds
pop
sub
js
cmp
or
xchg
adc
into
inc
mov
pop
jo
push
cltd
ljmp
in
pusha
iret
pop
pop
ss
insb
mov
stos
pop
xchg
pop
in
loop
pop
scas
fcompl
push
lahf
push
push
jbe
inc
mov
cmp
sti
add
jb
cmp
inc
les
rolb
jne
scas
jge
dec
fdivrs
sub
es
and
lcall
pop
mov
rsm
fldcw
xor
sbb
mov
add
out
hlt
aam
jbe
jne
andl
add
sub
ljmp
lds
adc
jae
jo
and
xchg
sbb
rorb
adc
aas
xor
add
stos
jnp
cltd
xchg
push
pushf
push
or
fs
xor
imul
sub
shlb
aaa
fsubrl
or
dec
into
out
mov
pop
clc
cltd
or
sub
dec
cmc
stos
inc
jge
sbb
in
and
imul
jns
push
pop
sahf
mov
decl
sub
xor
imul
addr16
xor
inc
pusha
push
jl
popa
inc
and
adc
xchg
addr16
or
loopne
inc
xor
or
sub
sti
dec
fidivrl
bound
repnz
push
pop
add
jecxz
jge
and
popa
jg
ja
mov
jnp
mov
inc
out
dec
xor
or
xor
scas
mov
fsts
mov
mov
xchg
and
mov
sti
psubq
jo
data16
xlat
inc
es
repnz
mov
fdivr
cld
cmovs
rolb
pop
mov
cmc
sahf
or
lcall
xchg
and
stc
loope
add
cmp
fs
dec
mov
mov
and
mov
ljmp
xor
mov
mov
fprem
scas
outsb
sbb
mov
call
iret
fadds
and
jne
scas
rol
imul
add
fs
pop
imul
mov
jp
out
cltd
in
lcall
mov
xor
idivb
pop
in
xchg
and
xor
std
cmpsl
cmp
jo
cmp
scas
push
les
popa
cwtl
xchg
scas
imul
push
lea
jmp
inc
loop
push
pop
cltd
cwtl
mov
mov
adc
cmp
scas
cmpsl
aas
pop
sbb
fwait
pop
jl
sbb
mov
popf
push
ret
insb
aaa
push
cmp
repz
adc
stos
jge
jbe
stos
push
ljmp
lea
cmp
fwait
sbb
pop
js
shlb
mov
imul
add
adc
rcl
jg
push
jnp
dec
mov
lahf
lods
and
stos
mov
lret
jnp
or
xor
cs
sub
or
push
cmc
jo
mov
ljmp
xlat
aas
or
repnz
stc
jb
rorb
sbb
sub
stos
stos
add
repnz
jne
lock
addr16
jle
add
and
xor
mov
mov
xchg
mov
cmp
and
cmpsl
pop
sti
lcall
leave
mov
mov
out
pop
out
fildl
fnstenv
jle
leave
sub
xlat
push
sahf
stos
adc
pusha
scas
stc
cmc
cmpsb
into
xchg
xor
fsubs
into
jp
cmc
mov
out
andb
mov
xorl
pop
dec
psubusb
cmp
adc
fldcw
dec
cli
mov
mov
int
add
ud2
dec
mov
insb
pop
jbe
scas
imul
cmp
sub
push
out
pop
pushf
jle
or
jge
les
cld
ret
jp
sub
test
xchg
js
cmp
add
pop
xor
xchg
xchg
mul
mov
xor
jnp
pop
subb
inc
nop
js
push
jns
adcl
insl
jl
pop
jl
je
leave
mov
pshufw
andl
dec
loope
enter
jne
and
outsl
pop
sbb
daa
pop
cmp
ror
cltd
test
mov
jbe
popa
mov
lahf
sub
mov
es
sub
mov
add
adc
pop
ret
xor
cmpsl
ljmp
ja
lret
cmp
mov
cmc
es
sub
lahf
test
aas
aas
fwait
push
push
int
fisubrs
lcall
sbb
xchg
scas
adc
pop
pushf
mov
mov
sbb
ret
sahf
jae
ljmp
cwtl
xor
clc
and
iret
test
mov
jo
and
mov
sub
mov
or
and
mov
pop
adc
fucomi
dec
scas
pop
in
mov
out
push
sub
and
fs
scas
push
sub
adc
fisttpll
mov
mov
mov
loopne
mov
stc
fs
ret
test
inc
mov
push
add
out
mov
inc
pop
add
add
and
incb
add
movsl
cmp
lods
gs
sbb
es
or
add
pop
sar
pop
jle,pt
mov
mov
cmp
jg,pn
stc
pop
decl
xchg
and
lret
xor
xchg
xor
aas
fstpt
push
mov
fcmovne
or
aad
push
in
mov
jae
adc
hlt
add
stos
pop
ret
ret
fcoms
pop
and
mov
xor
fucomp
movsb
outsl
jae
iret
inc
fwait
ret
aam
sub
je
sahf
cmc
xchg
int3
test
and
dec
outsb
lods
sbb
and
mov
jno
leave
cld
insb
push
mov
pusha
or
pop
test
xor
jne
jge
xlat
jg
push
divb
jo
test
sub
aaa
cmp
orb
pop
or
stc
lock
jne
dec
pop
adc
pop
aam
inc
jne
xchg
scas
es
fucom
jo
clc
dec
lcall
scas
jge
aas
aad
mov
and
inc
mov
andl
push
and
jecxz
clc
mov
jl
es
add
lret
shll
dec
adc
ror
sub
lahf
mov
fadd
out
std
add
clc
push
xor
or
add
jl
cmp
cmp
xchg
pop
lds
or
mov
int
cltd
push
fstl
int
mov
lods
bound
or
scas
nop
es
out
fs
inc
ret
jg
xchg
inc
pop
or
lds
rcrb
xchg
mov
ljmp
sbb
stos
mov
rcr
xor
test
stc
aaa
aaa
cltd
adc
sbb
mov
test
jl
mov
push
mov
jno
jbe
lcall
mov
push
mov
in
jmp
sbb
aam
aam
inc
jp
inc
out
cmpsb
mov
insl
push
inc
add
pop
aas
ja
dec
sub
pop
inc
inc
pop
scas
jg
mov
daa
out
dec
xchg
xor
sub
jl
daa
xchg
jecxz
fsub
cmp
orb
cmp
mov
lahf
xchg
enter
cmp
imul
insl
fs
sbb
inc
push
xor
or
scas
lock
inc
cmpsl
lods
cltd
xor
les
mov
loop
jmp
imul
dec
mov
push
shrb
fs
inc
jne
loop
leave
jge
ficoms
sub
out
nop
jle
add
inc
mov
subl
mov
dec
mov
cmpl
inc
frstor
sub
or
add
bound
or
sahf
int3
fisubrs
aad
inc
mov
sbb
and
mov
pusha
jnp,pt
cmp
in
cmp
mov
mov
jo
cmc
gs
mov
jb
fldenv
or
push
clc
inc
and
jp
sub
or
cmp
fldenv
jo
scas
xor
inc
nop
aas
jge
dec
push
jns
jns
call
repz
dec
mov
pop
gs
sub
movsb
ret
xchg
js
adc
inc
pop
dec
cmc
insb
dec
mov
mov
data16
jbe
loopne
mov
lret
sub
pop
xor
or
test
into
daa
fwait
or
ret
pop
in
jbe
repz
sub
iret
mov
int
scas
loop
mov
add
stc
adc
push
jecxz
push
mov
orb
adc
mov
push
adc
mov
mov
neg
fcomps
xchg
ret
repnz
inc
ja
sub
ljmp
dec
xor
sub
arpl
mov
jp
cli
pop
pop
cwtl
pop
cmp
clc
loopne
aas
push
inc
out
cltd
adc
push
dec
in
jle
pop
cmp
push
xchg
mov
jo
sub
pop
lea
das
jbe
rorl
xchg
xor
call
mov
pusha
jge
xor
sbb
ja
jecxz
out
jnp
jo
stos
leave
rcrb
mov
jno
test
push
dec
daa
mov
dec
xchg
test
cwtl
mov
je
push
dec
subb
icebp
cmc
or
xchg
outsb
add
pop
sbb
cli
scas
bound
xchg
cwtl
and
nop
dec
and
enter
and
xchg
pop
jno
inc
imul
cltd
and
js
pop
pop
in
mov
fcmovbe
add
add
and
push
sub
ss
ret
adc
aaa
sbb
mov
cwtl
mov
imul
notb
or
jmp
pop
pop
jg
gs
push
mov
loop
test
and
push
pop
inc
das
das
xchg
das
repnz
shlb
and
adc
repnz
cwtl
jnp
adc
fldl
enter
ja
adc
std
mov
jp
pop
mov
adc
repz
xor
shl
ror
cmp
push
dec
jne
test
pusha
lahf
dec
cmp
mov
mov
adc
popa
cmp
push
jno
popa
sbb
enter
add
sub
fisttpll
aad
jns
data16
movsb
data16
pop
roll
xlat
jo
add
pop
stos
inc
cwtl
and
jecxz
sub
lcall
push
test
dec
aaa
xor
sub
fcmove
pusha
dec
pop
add
jno
inc
or
aad
out
push
xchg
cmp
xor
test
push
cmp
mov
sub
in
mov
jno
pusha
mov
sub
or
addb
sti
jecxz
mov
inc
sub
lods
cmpsl
andb
stc
insb
clc
ficoms
mov
lea
gs
add
jne
adc
vfrczsd
push
or
mov
nop
mov
in
in
lret
mov
push
add
scas
adc
fs
jmp
rcrl
loopne
cmp
decb
sub
lods
xchg
dec
int
dec
adc
dec
push
leave
roll
pusha
xchg
insl
xchg
jae
shr
insl
hlt
push
and
sarl
fcmovnb
push
jbe
out
fwait
pop
lahf
mov
mov
es
scas
ja
push
xor
cmp
xchg
pop
out
xchg
scas
pop
aad
add
push
mov
das
sarb
imul
loopne
cmp
je
ds
std
pop
in
stos
sbb
pusha
nop
mov
xor
jbe
pop
shll
data16
mov
push
enter
and
outsb
lcall
ret
xor
test
and
sbb
dec
or
xor
movsl
mov
push
popf
scas
js,pn
repnz
pusha
ja
test
dec
sti
pop
adc
xor
sub
push
add
jne
xchg
push
orl
in
and
hlt
inc
lds
jns
outsb
dec
aas
xor
jbe
push
xor
pop
inc
adc
cmp
cmc
pop
xor
shr
push
xchg
in
mov
mov
movsl
idivl
mov
lds
sub
push
outsl
jmp
insb
imul
or
mov
or
pop
setg
arpl
cmp
pop
or
hlt
pushf
cmp
nop
andb
filds
notb
icebp
imul
bt
mov
pop
gs
es
inc
testl
sbb
mov
lds
sbb
scas
push
sub
and
aad
xchg
idivb
xor
jne
adc
push
enter
vcvtsi2sd
sti
ss
arpl
push
xor
mov
outsl
sahf
sub
cmc
ret
pop
adcb
jne
cmc
mov
cwtl
daa
pop
mov
pop
mov
push
push
sub
fisttpll
pop
das
and
lock
popl
fbld
lret
mov
adc
cmp
jae
fists
push
testl
call
arpl
insl
idivb
pop
dec
push
lret
and
cmpsb
cmpsb
stos
cmpsb
adc
dec
cmpsb
sti
cmc
lods
jle
xor
cmovno
mov
pop
fwait
inc
add
inc
mov
jmp
adc
xor
pushf
mov
outsw
adc
or
sbb
sub
xchg
icebp
gs
daa
push
cmp
mov
dec
jecxz
dec
mov
push
lods
dec
dec
dec
enter
shll
daa
push
int3
mov
out
mov
fistpl
pop
push
or
sbb
and
cmpsl
test
cmp
daa
popa
xchg
out
dec
add
ret
cmp
mov
fwait
lcall
ret
in
sbb
les
mov
cmp
out
inc
icebp
lods
pop
dec
jp
into
adc
call
xor
mov
mov
cwtl
shrb
pop
mov
mov
std
pop
sub
mov
push
orb
popa
sub
dec
xchg
or
divb
mov
cmp
mov
jg
adc
sar
insl
push
sahf
inc
inc
cmc
aad
lret
mov
loop
ret
sub
and
mov
jns
mov
jne
cli
lret
flds
adc
mov
iret
mov
dec
push
add
adc
mov
hlt
add
or
clc
push
sub
out
mov
inc
add
je
popf
sbb
aad
jmp
rcrl
mov
jno
subb
loope
arpl
mov
add
cvtps2pi
xchg
push
lret
test
push
sbb
mov
iret
mov
jp
cmp
or
jg
or
sub
ss
adc
pop
aaa
or
popf
ja
fcmovbe
sbb
pusha
cmpsl
lret
in
subl
mov
inc
roll
inc
insl
stos
pop
or
pop
enter
outsb
movsl
xchg
mov
adc
jno
sub
sub
push
fistpl
data16
mov
lods
scas
lds
arpl
sahf
insl
jecxz
insb
in
push
xchg
mov
xor
pop
icebp
out
fs
xor
movsl
js
ds
ret
sub
jns
out
dec
cmp
subl
adc
mov
test
imul
xor
push
ja
push
mov
sbb
dec
mov
lods
jecxz
outsb
push
jge
add
mov
inc
lcall
insb
push
outsb
push
inc
stc
sub
fidivrs
fnsave
fwait
mov
mov
cmp
xor
sub
push
mov
push
push
xchg
inc
cmp
sbb
out
nop
fsubl
je
scas
adc
push
insl
push
dec
inc
xor
call
cmp
inc
pop
cmc
xor
test
cmp
add
cltd
out
hlt
loopne
fcomi
pop
push
lret
or
lods
cmp
jg
sbb
out
mov
daa
pop
int
mov
daa
xor
cmp
dec
repz
fdivr
push
jp
dec
sbb
pop
jmp
pop
cmp
jl
mov
arpl
xor
iret
mov
inc
or
decb
xlat
jb
fstl
std
jl
mov
pop
or
xchg
pop
in
test
jmp
sub
xor
lcall
and
mov
push
je
push
fucom
cli
fdiv
xor
and
xchg
ljmp
imul
cmp
lods
and
stc
hlt
outsl
into
sub
stos
or
aaa
ss
add
orl
ret
lods
adc
jns
sub
jge
jl
cmp
dec
lea
subb
stos
mov
xchg
sbb
push
mov
mov
inc
and
dec
pusha
pop
aaa
es
ret
pop
mov
dec
lret
push
xlat
aam
xor
push
pop
in
adc
fistl
shrb
or
loop
aad
sub
ret
ret
cwtl
adc
ret
rorl
mov
scas
xchg
out
nop
cmp
pop
clc
pop
sub
rolb
and
stos
mov
xchg
popa
test
insl
xor
cld
mov
clc
pop
xor
mov
add
mov
loope
inc
shrb
push
mov
cltd
jns
xor
out
inc
sti
xchg
xor
xor
insl
out
jp
inc
mov
fsubp
mov
clc
mov
push
jp
adc
loope
and
dec
shlb
push
stc
ficoms
fbld
gs
xlat
sub
je
int3
repz
ljmp
dec
jae
sub
pop
sub
imul
std
and
movsb
imul
or
aad
mov
aad
pop
adc
push
mov
lea
insl
mov
js
pop
sub
lea
xchg
fisubl
xor
sub
dec
nop
mov
insb
cli
jo
jae
adc
repz
fiadds
pop
push
movsl
and
fiaddl
arpl
xorl
cli
sub
cwtl
xchg
in
fisubrs
sbb
inc
push
jl
mov
popf
jecxz
icebp
mov
jmp
or
mov
dec
loope
xor
xchg
mov
out
mov
pop
sub
ljmp
daa
cwtl
xor
cwtl
adc
stos
idiv
mov
push
or
xor
adc
loopne
cmp
leave
test
jo
dec
test
es
icebp
jge
mov
std
ficoml
dec
andl
pop
dec
dec
loopne
aad
iret
adc
push
outsl
imul
cld
inc
shl
popf
lahf
rcr
adc
das
xchg
mov
dec
jmp
pop
loopne
jae
jg
or
js
insb
mov
mov
popa
cmpsl
add
inc
push
dec
inc
rclb
loop
das
jo
sub
mov
leave
popf
jnp
sti
cmpsb
jno
xchg
orb
add
and
aad
pop
cmpb
cmp
mov
das
push
movsb
scas
sbb
clc
cmp
pop
aaa
inc
popa
scas
pop
cmp
inc
dec
popa
and
test
int
out
je
adc
sub
loopne
mov
adc
mov
push
push
movsb
cwtl
pop
insl
xor
mov
jmp
sub
or
ret
jge
xor
push
mov
adc
pop
and
xchg
fcomps
dec
lret
mov
push
lret
push
mov
rolb
or
ror
inc
cmc
mov
fbstp
cmp
jne
sbb
jns
mov
fsubl
filds
sub
lret
fcoms
xorl
mov
leave
xor
fstpl
inc
aam
sbb
cld
aad
sub
repz
mov
idivl
addr16
push
mov
fcmovb
call
test
pusha
sub
pop
ss
pop
mov
pushf
push
pop
loopne
and
dec
aad
outsb
jae
int
mov
jnp
shlb
lods
push
mov
xor
or
clc
aad
les
inc
jnp
scas
push
or
fs
ss
or
mov
sbb
fs
cmp
push
test
pop
jae
mov
push
inc
aad
sbb
lcall
stos
cmp
addb
call
push
sbb
sbb
pop
xchg
mov
cli
inc
in
subb
add
ja
xchg
dec
lret
push
cltd
xorl
shlb
roll
xchg
sarl
gs
adc
or
cmpsl
mov
lock
out
dec
cmp
or
push
mov
ja
lea
sub
adc
stc
or
xor
add
daa
pop
mov
dec
inc
loop
in
rolb
in
dec
or
dec
sbb
mov
inc
pop
test
pusha
fadds
or
inc
adc
jnp
imul
and
outsb
cmp
repz
sub
dec
sub
or
addl
sbb
dec
and
mov
push
dec
sub
jno
iret
sbb
push
bound
jl
cmp
pusha
movsl
lock
cwtl
push
xchg
mov
adc
cmpsb
mov
out
imulb
mov
fsubrs
rorl
stos
dec
cmp
iret
add
imul
cmpsb
xor
ficoml
repz
sbb
mov
mov
pop
xor
xchg
mov
fcompl
cwtl
cmp
pusha
movsl
out
nop
clc
cwtl
jl
mov
jmp
repz
lock
and
and
in
or
int3
testl
shll
push
cmp
push
std
add
fwait
sub
cmpsl
push
pop
or
jle
or
lret
aam
push
add
cmpl
push
mov
push
ljmp
sub
adc
ror
gs
ss
gs
jne
ret
mov
add
out
ret
or
xor
jb
insb
push
and
cmpsb
cmp
pop
pop
push
ljmp
lock
cmp
sti
push
gs
mov
push
rorl
lcall
lcall
mov
mov
mov
enter
push
lret
cmpb
ljmp
stc
inc
cmpb
stc
shlb
jl
add
pop
mov
cmp
mov
and
sbb
push
mov
mov
sub
daa
jno
rcll
jp
jbe
xor
negb
jle
mov
xchg
and
sub
jg
icebp
or
arpl
or
adc
mov
cli
pop
xor
push
outsb
repz
inc
pop
stos
mov
add
pop
inc
jb
ret
or
imul
sub
psubq
xor
sbb
xchg
insb
cmc
sti
cwtl
ror
pop
fdivrs
lock
out
out
leave
fwait
push
jnp
lods
sbb
sbb
mov
icebp
mov
push
cmpsl
in
mov
fcomi
dec
push
lock
mov
xor
add
push
cmp
mov
jp
fnstcw
pop
or
cmp
ret
jge
dec
shlb
fxch
and
jmp
and
dec
push
xchg
test
int3
aaa
test
shl
mov
cli
icebp
or
scas
movsb
fwait
push
sbb
mov
mov
jge
push
cmp
inc
scas
sbb
mov
fstpt
or
iret
test
in
dec
test
pop
or
jae
adc
add
pop
push
xchg
fdivs
jb
adc
sbb
dec
add
jae
ljmp
test
xchg
mov
es
inc
xchg
xlat
into
clc
mov
scas
in
add
and
dec
cwtl
repnz
lds
sub
inc
rorb
mov
and
aas
aas
pop
test
daa
push
fmuls
adc
jmp
cmpsb
xchg
mov
test
imul
shll
ficoms
in
movsl
pop
push
sub
out
sub
mov
daa
cmpsb
add
jp
lods
pop
ds
outsl
cs
cmp
push
mov
push
popf
mov
mov
sarl
fs
into
sbb
les
sub
sbb
or
test
lret
clc
xchg
daa
in
push
jb
gs
push
les
xor
dec
pop
and
xor
es
pop
sbb
andb
and
dec
mov
dec
outsb
mov
fdivrp
jl
pop
mov
sbb
repnz
cmpsl
cmp
dec
subl
or
xor
or
xchg
mov
or
cmp
sub
daa
stos
xor
cmp
dec
cmp
scas
adc
faddp
fcompl
adc
stos
cmpsl
mov
test
cltd
cmp
push
adc
mov
xchg
push
inc
jmp
sbb
subl
test
dec
push
movsl
pop
adc
push
push
mov
xlat
lahf
aas
cwtl
sub
sbbl
scas
mov
push
jb
loope
shrl
cmp
add
cwtl
mov
dec
jbe
xchg
inc
loop
out
daa
mov
out
and
int
arpl
pop
or
scas
xchg
push
mov
jne
lods
cs
lock
and
sbb
aaa
ret
pop
imul
lods
das
negb
push
jne
or
das
mov
sub
fstps
sub
dec
mov
popf
jbe
add
push
std
loope
push
xchg
inc
mov
loopne
jle
lods
mov
adc
shll
mov
popa
mov
cs
enter
fdivrs
into
lock
divl
jp
mov
popf
add
xchg
lock
mov
fildl
push
inc
sbb
stos
call
mov
add
ja
push
aad
sub
movsb
cwtl
jns
xchg
mov
fnstenv
jno
add
retw
fidivl
into
pop
add
js
push
or
xor
out
cli
mov
add
leave
insb
push
stc
mov
mov
push
sbb
lahf
shll
mov
ljmp
mov
inc
or
jns
cmpsl
dec
mov
lret
fninit
xor
push
insb
adc
fstps
into
in
inc
dec
inc
out
insb
mov
mov
lcall
outsb
jmp
adc
adc
push
inc
sbb
pop
jnp
test
aad
sub
adcl
push
pop
stos
pusha
aaa
dec
or
js
or
repnz
push
push
ss
mov
and
mov
lret
pop
aam
movsb
std
lods
jmp
rol
jae
cmp
repnz
dec
jne
cmp
jg
popa
sub
hlt
int3
mov
repz
cli
mov
and
pop
sbb
vmwrite
lret
pop
sub
das
sahf
iret
shr
ljmp
das
out
xchg
inc
sub
aam
imul
out
mov
fwait
sbb
dec
std
mov
out
sbb
jo
hlt
push
insl
adc
and
test
js
pop
xor
lods
enter
out
dec
sub
xchg
cmp
adc
mov
xchg
in
orl
inc
mov
jmp
dec
mov
mov
sub
pop
sub
inc
sbb
movb
push
test
sub
filds
lds
xchg
loopne
ffreep
stc
jae
arpl
imulb
and
jns
cs
icebp
sbb
push
mov
pop
dec
xchg
pop
das
mov
stc
sub
sub
adc
xchg
out
and
sahf
dec
js
adc
rcrb
push
sub
inc
test
sar
xchg
aas
or
sbb
popa
cmp
xchg
dec
fstpt
mov
aas
jo
adc
add
sahf
sbb
inc
daa
fdiv
mov
xchg
inc
imul
test
in
add
mov
inc
sub
imul
push
jecxz
jns
and
call
adc
popf
andb
jle
jl
pop
fwait
insb
mov
inc
lcall
pop
mov
sub
mov
or
aas
xchg
mov
out
int3
rol
mov
leave
ret
int
out
mov
mov
adc
loope
repz
mov
jmp
xchg
popa
loopne
push
fsubr
lret
std
jle
adc
dec
fildll
outsl
js
bound
jno
mov
jl
mov
aas
cmp
lods
dec
lock
loop
dec
inc
add
xchg
mov
fldl
cwtl
aas
push
nop
mov
shr
aaa
lret
out
imul
add
inc
or
test
cmc
mov
inc
stos
pop
sub
adc
push
xchg
inc
pop
imul
repz
pop
stos
bound
or
popa
jb
mov
sbb
and
aas
push
aas
pop
adc
sub
flds
or
sahf
and
cmp
shrl
sub
inc
adc
cld
push
mov
sbb
adcb
pop
ret
mov
fwait
rorl
jnp
sub
mov
into
stos
inc
lock
ds
inc
int3
loopne
pop
adc
mov
jbe
loope
int
fbstp
hlt
fnstenv
cmp
dec
nop
inc
rolb
push
jb
mov
lock
and
sbb
and
sub
mov
push
lret
pop
mov
push
mov
fildll
or
jp
pop
jb
inc
jg
cwtl
add
cmpsb
leave
mov
outsl
dec
lcall
lds
mov
jae
imul
adc
arpl
or
mov
xlat
adc
push
xchg
push
outsl
mov
mov
xor
hlt
sbb
dec
das
rcl
add
jecxz
ss
pushf
stos
pop
mov
ljmp
insl
pop
push
cmp
xor
fiaddl
pop
mov
cmc
mov
sub
adc
mov
lods
outsl
push
xor
stos
xchg
addr16
dec
push
mov
xor
pop
mov
or
stc
jmp
idivb
leave
aaa
cmp
fsubs
shl
in
out
aas
xchg
mov
mov
push
popa
inc
xchg
pop
push
xor
jmp
inc
scas
adc
inc
adcb
cwtl
xor
sub
shrb
and
ljmp
cmp
jmp
out
flds
mov
and
jmp
or
stos
sub
aam
mov
cmp
pop
lock
fst
xchg
lods
enter
pop
add
mov
inc
inc
xor
or
ja
mov
push
cmc
pop
push
push
adc
mov
repnz
in
xor
push
jae
loopne
jno
dec
int
mov
mov
out
outsb
sub
cmp
xchg
rcr
xchg
jbe
dec
add
pushf
dec
cmc
sub
sbb
dec
mov
int
fidivrs
jge
push
inc
fmulp
push
inc
mov
or
imul
in
ret
lock
movsb
or
lock
clc
popa
push
lcall
lods
push
es
sbb
sbb
outsb
ss
stos
repnz
mov
lock
lds
or
jl
push
inc
fcomps
mov
in
dec
subl
mov
mov
xchg
idiv
xchg
mov
xchg
movsl
xor
jb
addr16
test
int3
mov
xchg
addl
sbb
insl
sbb
ret
clc
pop
adc
das
jg
es
enter
shl
stos
mov
mov
mov
mov
dec
int
mov
adc
and
inc
dec
aaa
jecxz
xor
mov
inc
pop
inc
mov
adc
jg
sbb
je
fmull
lcall
push
out
jp
popf
sub
mov
nop
dec
jno
mov
adc
pop
rclb
mov
jmpw
adc
daa
xchg
pop
insb
pop
lcall
mov
mov
fsubrl
lret
cmc
hlt
and
push
lret
xor
test
shrl
enter
clc
jp
sub
sbb
dec
fidivrs
rorb
out
cwtl
mov
mov
adc
adc
imul
jo
ja
and
mov
push
jbe
inc
mov
sahf
mov
pop
push
inc
outsb
bound
inc
adc
or
push
fiaddl
xor
mov
ficomps
push
mov
loope
ret
andl
rcrl
adc
out
push
mov
fs
push
cmp
xor
jl
push
out
scas
sbb
sbb
xchg
sbb
sarl
out
cld
xor
into
movsl
mov
shlb
and
inc
jecxz
jp
or
aad
hlt
movl
pusha
inc
out
or
imull
add
and
jb
mov
cmpb
pop
ja
adc
push
lahf
pop
adc
sub
lret
sbb
jne
xlat
or
adc
xor
cmp
sti
jo
xlat
iret
imul
movsb
adc
mov
mull
in
mov
sarb
in
stc
sbb
test
mov
clc
add
stos
or
mov
iret
loope
out
mov
mov
imul
mov
test
leave
movsl
add
pop
test
sub
test
add
movsl
movsb
mov
sti
ror
out
sub
adc
scas
lods
pop
xchg
ret
adc
hlt
cltd
push
or
mov
in
jae
pop
outsb
push
mov
icebp
mov
or
cmpsb
cmp
mov
sub
mov
cmp
pop
pop
sub
cmc
add
popf
mov
mov
lcall
jb
cld
sub
mov
lcall
int
icebp
xor
pushf
lcall
shr
jp
add
sub
in
add
aam
sbbl
pop
and
or
cmc
pop
adc
rcrb
test
mov
fisttpl
cmpsl
popa
rcrb
push
mov
dec
gs
xchg
xchg
sbb
mov
mov
inc
data16
jg
or
jb
ds
les
cs
push
inc
sub
push
ret
dec
es
mov
lcall
xlat
cmp
insb
cmpsl
mov
and
lds
xor
stc
jge
xlat
xor
cwtl
push
sub
sub
pop
push
or
aaa
das
fmuls
sub
fnsave
or
enter
in
lret
and
inc
push
or
and
push
add
jp
xchg
inc
push
adc
imul
pusha
iret
dec
xchg
lock
mov
sub
pop
sti
testb
sbbb
ss
jp
lds
or
div
xor
ljmp
inc
andl
lods
aad
lods
out
and
pop
inc
pop
mov
mov
insl
fdivl
add
jns
fs
push
lods
mov
test
push
or
cwtl
ja
mov
sarl
rol
cli
test
add
scas
ss
stc
je
das
sub
dec
das
pop
imul
in
insl
sbb
sbb
mov
shl
sbb
lds
sarl
and
stos
adc
inc
add
rcrb
aaa
pop
sahf
js
and
adcb
test
leave
pushf
lcall
pop
aam
sub
or
cmpsb
jno
jmp
mov
lahf
scas
xchg
lcall
inc
dec
push
aad
sarl
fdivrs
jae
sbb
xchg
mov
dec
sbb
pushf
adc
add
or
movsb
jbe
lock
xchg
out
xchg
inc
mov
inc
notl
lods
out
cmp
jae
jne
jne
movsl
pop
xchg
aaa
jne
cltd
cmpsl
ret
clc
push
inc
pusha
mov
movsb
aad
incl
jecxz
mov
mov
and
int
lret
repnz
push
or
pop
shlb
sti
push
sbb
loopne
repnz
cmp
push
mov
loopne
add
cmc
and
adc
pop
jmp
xor
inc
push
out
out
mov
mov
pop
dec
xchg
fdivl
cltd
jle
addr16
loopne
mov
icebp
mov
adc
stos
fildl
cmp
fdiv
sub
pop
shll
xor
push
ds
shlb
out
movsb
pushf
sub
mov
inc
je
pop
repnz
dec
jl
shrl
das
inc
dec
decb
and
inc
orl
flds
mov
xor
sub
mov
rclb
push
loop
outsl
out
cmp
dec
imul
iret
sub
mov
add
cltd
test
mov
imul
mov
jmp
inc
or
fdivp
int3
cs
sar
pop
divb
rorb
aad
mov
insb
add
push
divb
sbb
je
or
dec
inc
loopne
iret
int
add
outsl
out
shll
xor
int3
mov
fs
jecxz
cmpl
aas
push
gs
and
loope
fldt
lods
rcl
sub
test
movsl
push
jl
pop
in
movsb
jbe
inc
dec
and
xchg
fcomps
xor
ds
loopne
dec
test
or
mov
xor
sarb
or
ficoml
add
or
xor
popa
shrb
hlt
fdivrs
fld
push
sub
jmp
push
jecxz
xchg
xor
push
push
inc
cmpsb
cmp
inc
iret
mov
test
pop
mov
insl
sbb
push
into
into
sti
sub
dec
hlt
mov
in
rclb
xor
push
push
in
mov
cltd
sbb
fists
or
inc
fldenv
std
pop
xchg
jmp
test
cmpsb
xor
popa
dec
repnz
pop
xorb
jg
popf
leave
xor
pop
pop
or
mov
std
stc
dec
push
ret
push
jmp
jo
out
outsl
fsts
mov
iret
inc
mov
xchg
and
adc
ja
loop
add
enter
les
mov
cli
sub
cwtl
outsl
adc
movb
jecxz
xor
gs
inc
pop
fucomp
mov
stos
mov
or
leave
mov
enter
dec
xchg
push
jle
push
cld
or
jge
jo,pt
pushf
xchg
mov
ja
fdivs
cmp
jg
mov
lahf
add
and
lods
and
adc
daa
icebp
xchg
push
xchg
leave
mov
cmp
loopne
pop
mov
mul
lods
ss
or
iret
push
jmp
mov
push
leave
stos
add
push
add
mov
imulb
xchg
push
mov
push
fimull
adc
and
flds
pop
ret
pop
test
mov
adc
scas
jne
das
iret
add
pop
push
insb
dec
cli
pop
icebp
push
stos
mov
nop
hlt
in
daa
ret
push
imul
popf
sub
into
cmpsb
cmp
mov
dec
cwtl
jp
data16
iret
shrb
in
lds
xor
jne
and
fstpt
pop
inc
shll
and
pushf
lea
int3
or
andb
and
sub
and
test
mov
or
test
cld
ja
jle
ret
inc
fldt
add
addr16
xorl
into
pop
stos
test
ja
and
dec
mov
jmp
pop
and
pop
adc
lock
in
mov
jae
sub
xor
adc
aaa
popf
push
test
clc
pop
dec
repz
imul
dec
cltd
sarl
inc
jbe
test
emms
mov
xor
loop
push
mov
cld
or
mov
inc
mov
jnp
cmpsb
sbb
std
rcrb
stc
test
rclb
inc
push
cld
cmpb
fs
into
mov
push
mov
mov
adc
pop
sub
popa
sub
and
test
jmp
cmp
dec
mov
jecxz
ret
dec
imul
insb
ds
inc
aas
scas
popa
and
loopne
shlb
lcall
cmp
test
loopne
xor
movsl
xchg
fisttps
pop
sbb
ret
dec
pushf
cmpsb
mov
pop
ffree
fimull
cmpsb
xchg
jmp
push
push
int3
addr16
and
and
cmpl
inc
fwait
jns
xchg
daa
popf
adc
or
adc
loope
jge
jae
hlt
daa
mov
lret
repnz
pushf
call
sbb
lock
mov
dec
outsb
jae
enter
inc
mov
in
add
jmp
jecxz
mov
jmp
cld
cld
repz
hlt
push
dec
cmp
jb
adc
mov
aaa
gs
xlat
call
mov
outsl
mov
int
ljmp
sub
inc
xchg
add
leave
stos
packuswb
into
dec
ljmp
bound
cli
shlb
xchg
or
arpl
outsl
call
imul
in
ds
in
stos
sub
cs
xchg
movsb
repnz
mov
adc
and
mov
xor
and
inc
repnz
lods
xchg
aaa
cmp
aas
inc
mov
lret
cs
sti
fiaddl
jne
sub
xchg
adc
in
sub
pop
mov
loopne
subl
ja
cwtl
add
rcr
mov
cmp
aas
dec
push
mov
daa
in
xchg
psllq
lods
jl
cmp
mov
sbbb
inc
jmp
lock
mov
lret
push
cltd
lcall
clc
jge
pusha
test
mov
mov
push
loope
ss
icebp
cld
xchg
cmp
jmp
sub
xchg
mov
cmp
mov
std
fstpl
adc
dec
inc
xor
fwait
subb
mull
and
pusha
movsb
xchg
and
iret
sbb
inc
mov
mov
mov
test
xor
jno
ja
jg
add
js
jl
pop
out
pop
stos
js
pop
mov
and
aam
arpl
loope
mov
sbb
mov
jecxz
mov
push
cmpsl
mov
mov
cmp
clc
xor
mov
push
mull
aad
rcrb
or
repz
adc
sub
into
les
inc
pop
fimuls
das
or
mov
in
add
cmp
cmp
das
push
dec
cmp
stos
xor
push
aam
xchg
stos
rcr
ljmp
test
out
es
xchg
push
cmovg
lahf
inc
jg
cmp
mov
pop
or
add
mov
jecxz
xor
jb
jae
xchg
adc
cld
sub
data16
in
addb
hlt
daa
fnstcw
xchg
push
test
js
pop
insb
add
js
aad
fwait
mov
enter
hlt
xor
cmp
inc
sbb
cmp
bound
xchg
jo
sub
cmc
jnp
mov
mov
add
int
imul
push
cmp
sti
fs
xchg
enter
xor
fisubs
fwait
sti
cli
sti
leave
or
jmp
cmp
inc
ljmp
in
in
push
ljmp
out
inc
in
fisubl
push
inc
sub
dec
jae
insb
imul
and
pop
mov
or
pop
outsb
scas
rorb
fcmovnb
movsl
sbb
outsl
popa
inc
push
xchg
sub
and
push
or
mov
add
jl
jmp
lcall
add
and
dec
imull
aaa
pop
ljmp
inc
xchg
jecxz
adc
test
cvttps2pi
test
dec
outsb
sub
push
fcmovnbe
mov
and
outsl
test
stc
dec
popf
jge
aad
inc
adc
push
out
js
xchg
inc
push
aaa
imul
in
test
xorl
movsl
adc
in
mov
das
pop
xchg
push
shrb
mov
es
out
loope
cmp
cmpl
push
pushf
mov
movsb
and
ljmp
push
adc
cmpsb
dec
jmp
enter
push
ret
dec
in
shll
orb
jle
clc
sarb
push
imul
push
jo
mov
jbe
loop
sarl
in
pop
jo
or
ss
mov
cmp
mov
mov
lcall
ds
dec
cmc
push
xor
dec
mov
mov
adc
shll
lock
adc
ret
outsl
adcb
mov
inc
sub
xchg
jmpw
jle
lahf
or
push
ret
rcrb
push
cmpsb
push
test
loop
mov
negl
es
push
in
add
xor
or
cmpsb
aaa
sub
adcl
repz
jne
mov
pop
push
adc
mov
filds
ja
dec
xchg
xor
cwtl
dec
scas
jl
adc
cltd
adc
mov
jb
icebp
outsb
idivl
sub
fwait
inc
mov
mov
xor
fstpt
aam
and
pop
lods
scas
cwtl
mov
or
sub
push
imul
and
enter
push
dec
sub
addr16
jp
ret
adc
mov
shlb
ja
push
testb
arpl
fcoms
push
out
es
push
sbb
in
bound
sbb
inc
pop
xlat
push
dec
xor
adc
repz
and
test
mov
xchg
notb
cltd
scas
mov
xor
jecxz
cld
outsl
jmp
mov
stos
mov
pop
push
sub
push
cltd
add
out
dec
insb
cmc
scas
push
ds
add
movsl
test
or
cmp
fisubs
dec
jne
mov
fists
js
lds
lahf
not
adc
pop
add
shl
pop
popf
mov
inc
adcl
out
cld
jecxz
clc
sub
icebp
pop
jbe
xor
xlat
add
pop
xchg
add
mov
fstpt
inc
xchg
sbb
sbb
out
lds
sbb
mov
jge
pusha
gs
push
mov
insl
mov
lods
stc
loope
insb
ret
sub
lock
pop
test
ret
std
mov
test
in
add
mov
xor
or
sbb
cmp
push
aam
mov
outsl
stos
sbb
cltd
andb
push
or
rol
arpl
incb
mov
test
pop
push
sub
pusha
dec
ficompl
mov
pusha
repz
sarb
cmp
je
xor
int
repnz
or
out
das
sbb
out
out
lock
jo
mov
clc
in
cmpsl
jle
pop
insb
les
xchg
push
xchg
jb
pop
xchg
or
call
mov
mov
cld
jo
mov
icebp
cmp
es
xchg
repz
xor
in
pop
ficompl
mov
rcrl
pop
fbstp
lods
add
js
aam
mov
sub
repnz
ljmp
das
mov
clc
mov
sub
out
cmp
daa
leave
rcrb
xor
adc
cld
lret
test
push
test
ret
shll
out
js
mov
mov
outsb
mul
or
pop
jmp
xor
dec
scas
xlat
insl
jle
dec
hlt
cmp
push
sti
aas
and
test
or
adc
in
mov
mov
mov
dec
mov
or
jp
mov
repz
sbb
in
dec
sbb
aas
inc
in
pop
test
xchg
mov
scas
jmp
xchg
out
sbb
test
sub
dec
mov
jp
mov
adc
stc
dec
xchg
push
loop
cmp
not
hlt
push
xchg
mov
sbb
iret
in
in
mov
mov
test
int3
pop
mov
push
lock
das
and
cwtl
enter
sub
ror
addl
pop
icebp
fnsave
cmpsb
gs
or
xchg
loopne
stos
add
and
ja
dec
push
xor
xchg
jl
inc
pop
mov
jne
xorb
mov
jno
or
xchg
xchg
ljmp
dec
mov
mov
jb
inc
pop
mov
xor
mov
shll
jne
lock
enter
dec
xor
mov
lahf
mov
ror
testb
push
mov
push
xchg
outsl
adc
or
dec
rcrb
in
adc
mov
cmp
adc
fdivrs
hlt
pop
cmpsl
scas
lret
mov
int
add
push
adc
std
or
jo
fdivl
lcall
push
xor
aad
cmc
jbe
out
mov
inc
mov
ss
xchg
jp
aas
shrl
pop
jle
jecxz
dec
add
jae
and
sarb
xor
mov
push
pop
mov
mov
mov
popa
or
lock
aad
inc
ret
xchg
add
sahf
mov
cmp
stos
mov
xor
cmp
push
mov
jb
mov
add
cmpsl
mov
xor
in
sbb
bound
aas
mov
sub
cld
inc
and
test
pop
pop
andl
push
mov
sub
cmp
mov
jb
ja
icebp
out
cmpsb
sbb
pop
in
js
sbb
inc
jbe
adc
aad
mov
movsb
cmp
xlat
les
hlt
mov
aad
adc
cmp
leave
mov
mov
mov
pop
popa
lock
in
out
xor
out
mov
scas
inc
xchg
in
idivl
cmpsb
je
icebp
fmuls
mov
or
mov
mov
bound
cs
or
inc
dec
pop
enter
addr16
lock
lahf
les
add
mov
mov
push
out
in
mov
add
or
sbb
cltd
call
mov
pop
and
pop
dec
xchg
xchg
ret
imul
push
or
aam
movsl
inc
dec
es
sub
jmp
fldl
sbb
xchg
sub
fdivrs
dec
pop
daa
push
mov
jp
sub
sub
mov
xlat
adc
add
xor
ret
cmpsl
loopne
out
repz
sti
addb
leave
stos
insl
fiaddl
lret
pop
pop
call
push
pop
ds
mov
mov
cmpsl
jno
push
xlat
sbb
dec
or
scas
iret
mov
nop
adc
int
gs
pop
pushf
orb
mov
add
add
bound
movsb
ljmp
or
fidivrl
int
push
mov
and
sub
fcmove
mov
mov
in
dec
int3
shrb
loop
jno
dec
or
fdivs
xor
or
subb
icebp
sbb
jne
pop
push
mov
movsb
inc
les
in
dec
sti
mov
mov
xchg
sbb
outsl
test
in
push
jmp
xor
mov
jmp
arpl
inc
jo
xor
mov
fisttpll
imul
daa
lock
xchg
mov
adc
pop
cmpsb
imul
ret
push
mov
aas
sbb
shll
cli
jp
stos
hlt
jb
push
xchg
icebp
int3
setns
out
jmp
sub
inc
fwait
inc
push
mov
cli
shl
dec
sbb
das
mov
insl
inc
stos
jmp
inc
adc
cltd
jo
sti
cltd
insb
in
pop
lea
ret
pop
insb
inc
sbbl
xlat
hlt
out
movsb
jb
adc
xor
mov
cmp
ror
cmc
lods
mov
xor
mov
ficompl
sbb
xchg
imul
mov
ja
ficoml
pop
cwtl
push
xor
xor
sbb
mov
out
outsb
xor
in
inc
xlat
sub
fildl
mov
pop
icebp
rorb
ret
je
mov
lds
add
data16
inc
pop
jae
jmp
mov
rcll
int
dec
adcb
imul
in
rolb
int3
loopne
sar
push
cmp
adc
push
mov
mov
push
test
push
xor
add
sub
decb
movsl
stc
dec
cmp
and
dec
sub
and
cmp
add
dec
in
add
xchg
lock
stos
cli
scas
cmpsb
cld
mov
mov
inc
cmp
ds
mov
cmp
into
adc
and
stos
into
loopne
lret
add
sbb
mov
jecxz
sbb
pop
pop
adc
inc
pushf
jb
and
ficoml
jno
sub
aas
xchg
adc
inc
ret
dec
lods
aas
scas
sub
adc
push
stc
movsl
lods
subb
popa
jo
lds
push
inc
cs
fcompl
repnz
or
jl
or
je
decl
mov
sub
test
and
pusha
sar
je
movsl
mov
lret
sub
mov
or
insb
mov
dec
mov
jmp
pop
mov
dec
iret
cmpsb
ficoml
enter
aam
sub
lods
outsl
xor
stos
mov
dec
xchg
push
xchg
push
fsts
pop
sub
jge
orl
cmpsl
mov
aam
add
xchg
loopne
aam
filds
xchg
dec
adc
xor
leave
sub
cmpsl
cmpsb
scas
popf
cltd
jns
mov
in
mov
into
push
cld
test
sbb
sbb
out
xchg
cld
fldl2e
pop
sbb
add
push
push
mov
xlat
lea
enter
sbb
lret
lret
pop
dec
inc
inc
or
dec
jbe
fwait
mov
ljmp
or
into
pushf
pop
mov
xor
mov
mov
cmp
push
outsb
jg
imul
inc
test
icebp
dec
ret
iret
push
fists
xchg
or
aam
scas
inc
pop
push
mov
imul
mov
ficompl
stc
cmp
cmc
xchg
data16
cld
push
outsl
sub
out
jge
push
mov
add
in
clc
xchg
outsb
cmp
cmpsb
dec
mov
imul
out
jl
pusha
je
out
xlat
dec
cmpsl
pushf
sahf
pop
loop
xchg
rcrl
adc
inc
jecxz
mov
jge
jae
adc
sub
test
mov
dec
adc
sub
je
shll
xchg
mov
mov
test
or
pop
sbb
adc
hlt
loope
adc
pop
lds
inc
inc
xchg
in
mov
daa
mov
mov
xor
mov
nop
push
cli
jmp
xlat
mov
pop
mov
jne
dec
ss
xorl
and
xor
pop
xchg
imul
inc
pop
push
mov
and
test
or
jp
fwait
jp
mov
push
je
dec
ret
ficoms
xchg
push
xor
mov
test
rcrb
js
in
xchg
cmc
hlt
mov
push
mov
stos
cmpl
scas
aas
mov
dec
test
out
and
or
imulb
add
inc
cmpsb
cli
dec
out
dec
cmp
in
adc
push
shrl
sub
mov
sub
push
jp
pop
aam
push
stos
std
pop
sub
in
inc
xor
jg
dec
push
mov
cmp
test
jno
sbb
lea
and
add
fimuls
mov
jne
mov
pop
out
leave
lret
inc
arpl
and
mov
es
pop
incb
gs
cmp
push
or
dec
mov
add
insl
ret
mov
mov
in
fsubl
rcr
or
fistpll
xchg
sub
imul
push
and
bnd
dec
roll
aam
push
mov
rcl
jns
outsb
mov
jge
xchg
movsb
xor
jnp
cmp
mov
dec
mov
pushf
ret
jmp
adc
cli
cmp
mov
dec
shll
cmp
sub
icebp
xor
call
cltd
inc
or
or
mov
add
scas
je
xor
ljmp
addb
push
std
jg
out
mov
leave
les
mov
mov
leave
jae
fstps
cltd
jo
lea
cwtl
arpl
jnp
jle
mov
or
in
push
call
shll
push
add
repnz
sbb
lahf
mov
mov
ja
adc
rorl
sarl
arpl
push
dec
out
mov
in
icebp
xchg
sub
mov
jne
cwtl
and
jp
aaa
mov
sbb
ja
dec
pop
xchg
or
sub
cltd
xchg
cmp
xchg
dec
pop
lcall
arpl
mov
sbb
es
fcomps
mov
aaa
mov
push
inc
ds
mov
loop
xchg
lret
mov
sti
hlt
push
sahf
test
inc
xor
cli
xor
sub
push
cmc
ffree
fucom
xor
mov
push
popf
jae
dec
stc
pop
outsb
sahf
movsb
inc
sti
mov
dec
ds
pop
cltd
mov
lea
das
and
shll
inc
shl
pop
sbb
dec
xchg
into
inc
mov
mov
dec
jge
test
jae
fs
repnz
sbb
jbe
clc
sub
pop
jg
lods
inc
xchg
scas
adc
sub
mov
jl
mov
pop
into
xor
and
insl
ss
incb
fsubrs
ds
adc
mov
mov
test
inc
out
sti
mov
call
lret
lock
inc
lods
insl
pop
push
mov
les
leave
xchg
fisubl
pop
push
aam
sbb
or
mov
xchg
fisttpl
loop
stc
arpl
cmovne
stos
clc
pop
sbb
pop
icebp
adc
push
out
push
cs
pop
xor
mov
inc
stos
add
xchg
xchg
cmp
sahf
or
lahf
cwtl
popf
or
cmc
cmp
test
in
xchg
adc
mov
test
xchg
xor
mov
dec
ret
xchg
lds
add
jnp
pop
add
xchg
xorl
xchg
adc
js
xor
fistl
mov
fadd
xor
ljmp
pusha
mov
mov
mov
mov
aas
sarb
in
jecxz
dec
cmp
cs
addr16
lock
mov
shlb
fiadds
es
adc
popa
cltd
xchg
mov
push
mov
xor
xchg
imul
mov
test
jl
xor
ret
mov
add
mov
mov
sbbb
fcomp
in
repnz
call
les
iret
lds
cmp
and
test
dec
mov
test
cmp
in
mov
les
xchg
jp
in
das
enter
test
fst
call
mov
fmull
divb
pop
leave
xchg
scas
or
push
mov
lock
out
shr
insb
pusha
dec
dec
xor
fucom
sub
dec
lret
jbe
nop
enter
mov
dec
dec
dec
in
sbb
sub
add
push
mov
inc
cs
mov
scas
jmp
push
dec
aam
in
sbb
jno
mov
in
push
jb
sarl
sbb
loope
test
and
lock
xchg
cltd
mov
xor
notb
sbbb
sub
xchg
rcl
call
mov
dec
mov
scas
and
cli
cmpsl
cmpsb
ret
lock
sub
in
inc
jo
jo
add
push
leave
inc
nop
pop
jae
ffreep
loope
sar
jle
ds
into
cmp
cli
sub
xor
xor
scas
aaa
lahf
ret
xchg
dec
and
test
push
mov
xor
pushf
inc
test
xor
jbe
mov
lods
fsubrl
or
mov
or
dec
or
je
fnstcw
jl
lret
pusha
dec
mov
mov
mov
sub
pop
sub
push
ljmp
imul
and
insl
outsl
int3
adc
movsb
pushf
add
push
push
cli
sub
fidivl
shll
push
cltd
lret
fistpll
fcomp
xor
sub
xchg
mov
call
ljmpw
mov
mov
and
adc
xor
das
lret
cli
pop
pop
enter
cli
stc
sbb
loope
notl
jo
fisubs
js
stc
icebp
add
adc
cld
mov
cli
mov
push
sbb
fs
cmc
cmp
jecxz
aaa
test
out
sbb
out
repz
in
cmp
fwait
xchg
cld
xor
js
xchg
xchg
sbb
inc
shlb
sub
jbe
xor
shl
pop
adc
shll
in
jmp
cwtl
insb
and
insb
ficoms
cmc
mov
addr16
xor
dec
sbb
mov
movsb
adc
test
out
mov
sarl
mov
add
xchg
hlt
ud2
fldenv
mov
mov
xor
dec
cmp
scas
cli
pop
jnp
xor
cmp
xor
leave
lret
push
cmp
je
pop
xchg
rorb
test
pop
loop
add
aam
iret
lock
cmpsl
adc
in
dec
jle
pop
je
xchg
xchg
sbb
or
movsb
inc
loopne
mov
aas
imul
adc
fadds
xor
fmulp
loopne
push
neg
stc
xchg
sub
into
hlt
cmpsl
int
shr
push
add
test
ret
sbb
jge
add
cmp
jnp
push
inc
inc
fmul
cmpsb
in
dec
popa
or
mov
popf
scas
fwait
jmp
lods
aaa
mov
inc
mov
gs
pop
int
addr16
mov
or
inc
xor
pop
cli
ret
pop
in
lea
fsubrs
in
and
fldl
sbb
sub
mov
out
xchg
std
cmpsb
dec
jbe
dec
dec
pop
addl
push
sub
imul
outsl
in
mov
cltd
inc
dec
mov
adc
das
mov
or
sub
std
xor
cld
push
shrl
mov
test
xchg
add
test
insl
hlt
inc
xchg
clc
inc
mov
aaa
insb
jl
push
jnp
outsb
jbe
ss
push
mov
mov
ja
pop
adc
jnp
or
cmp
sbb
jge
inc
gs
push
push
mov
sub
hlt
repnz
mov
fcomp
paddb
shrb
inc
rcrl
adc
lods
stos
test
mov
sbb
cmp
cmp
push
push
and
sbb
xchg
rcrl
push
aas
rcrl
lret
insl
xlat
push
ljmp
and
into
sub
loopne
add
test
add
movsl
das
cld
push
dec
sub
loopne
inc
fsubrs
sub
pop
pusha
je
pop
adcb
pop
enter
push
shll
sub
or
cs
daa
addr16
ss
xchg
fidivl
and
negb
jno
loope
dec
adc
adc
sub
xchg
mov
lahf
jbe
outsb
test
jnp
arpl
cmp
sbb
push
dec
and
pop
jnp
sub
pop
cli
ret
jl
xor
int
repz
adc
movsl
or
xchg
sbbb
mov
shrl
xor
ja
cmpsb
leave
inc
dec
outsl
das
sbb
lret
ret
outsb
int
pop
dec
dec
inc
iret
fisttpl
adc
xchg
lcall
insl
and
jge
sub
jp
jb
xor
into
lods
xlat
setae
lret
mov
xlat
and
adc
push
mov
mov
xor
inc
jo
repnz
jmp
or
jns
sub
inc
pop
sti
cmpsb
mov
adc
xlat
xchg
push
lret
dec
data16
mulb
and
data16
adc
add
hlt
xorl
cmp
adc
mov
bnd
sbb
aaa
pop
inc
outsl
mov
or
nop
mov
es
mov
cld
leave
or
mov
shll
cmpsb
jns
adc
cmpsl
xlat
movsl
cmp
leave
cmp
pushf
mov
jecxz
nop
sbb
mov
stos
ja
in
lret
push
sarl
jle
pop
cs
inc
int
add
addr16
rolb
cs
pop
mov
push
mov
and
adc
mov
pop
inc
mov
movsl
ficompl
aad
subb
adc
cltd
cld
or
sbb
jge
jg
mov
sbb
pushf
xchg
jg
scas
add
insl
in
sub
ficomps
popf
or
mov
sahf
out
aaa
fwait
add
out
mov
pop
dec
mov
adc
xor
dec
cli
jmp
dec
out
cmp
sub
mov
into
sub
pop
aas
dec
orl
cmp
dec
mov
push
mov
fstl
dec
sub
inc
cmpsb
in
stc
sbb
outsb
mov
stos
neg
xchg
outsl
lock
arpl
pop
lret
iret
sbb
xchg
scas
clc
sub
push
shrl
mov
or
in
sbb
sbbb
je
leave
dec
scas
sub
push
mov
jb
adcl
xchg
mov
cwtl
pop
mov
and
mov
insb
repz
lret
scas
mov
xor
dec
leave
ljmp
mov
clc
scas
pop
sub
xor
adcb
fincstp
addl
gs
xchg
ret
lds
mov
mov
in
xlat
lret
sti
mov
cmc
add
ficomps
cltd
adc
dec
dec
fsubrs
pop
fiadds
dec
fidivl
fucomi
enter
inc
repz
loopne
and
int3
mov
scas
xchg
adc
xchg
adc
mov
aam
lcall
sub
dec
push
mov
les
adc
xchg
shr
mov
cmpsl
loope
pop
or
in
daa
sub
lds
mov
or
cmp
mov
movsb
mov
push
dec
out
sahf
push
gs
mov
xchg
xchg
push
cld
mov
rcll
inc
jl
cld
or
popa
add
call
push
adc
mov
push
je
lahf
add
xor
rcll
lret
lcall
test
add
iret
jmp
push
dec
push
in
stos
rorb
push
ss
inc
inc
in
orl
push
push
stos
add
mov
dec
orb
mov
adc
push
mov
mov
jo
mov
pop
mov
jnp
jl
and
jge
sbb
dec
imul
jmp
or
cmp
xchg
imul
jmp
jmp
xchg
push
mov
lock
jnp
lahf
sahf
cmp
std
mov
repz
adc
fdivp
cmp
xchg
insb
ss
leave
push
out
cld
adc
aas
xchg
icebp
xlat
push
out
or
ret
mov
testl
mov
push
sahf
jp
in
add
scas
inc
inc
mov
mov
ljmp
add
mov
xor
xor
insl
inc
xlat
lods
mov
pop
and
cmp
cmp
aas
sub
aas
mov
test
arpl
mov
nop
lret
movsb
xchg
fcomps
fstp
ds
cmp
ret
lret
inc
cmp
int3
leave
ja
or
jno
lea
cs
mov
push
aaa
sti
pop
pop
fldenv
xchg
xchg
popa
ret
inc
shr
stos
xchg
insb
cwtl
int
outsb
mov
sub
shrl
or
ret
adc
ficoms
inc
int3
aad
xchg
jb
addl
mov
inc
lret
mov
or
sub
jbe
sbb
push
mov
and
dec
sbb
and
faddl
cwtl
shlb
mov
mov
fildl
jmp
daa
add
sar
mov
or
push
mov
jnp
pop
mov
lret
mov
pop
into
out
fisubs
inc
test
ljmp
mov
adc
loop
inc
lea
add
in
mov
mov
repz
adc
push
into
sti
xchg
xor
cmp
enter
jge
xor
int3
pusha
adc
movsb
xor
std
addr16
mov
mov
mov
adc
lock
jge
jnp
push
les
pop
ret
ds
mov
push
fidivrl
fbld
ds
and
fistpl
mov
sbb
inc
push
cmc
sub
cmp
mov
add
lcall
mov
mov
cmp
cwtl
mov
in
andl
ror
cwtl
mov
mov
and
js
mov
movsl
sub
pushf
movsb
loopne
jo
arpl
into
mov
daa
loope
lea
mov
jae
out
movsb
lahf
pop
xchg
subl
sub
test
testb
jo
jge
pushf
mov
adc
andl
rcrb
xchg
in
and
push
pop
daa
sbb
insl
bnd
jo
cmp
pop
call
movq
into
sub
les
push
adc
jae
scas
push
push
push
add
mov
stc
stos
sub
pusha
pop
add
cmp
in
jg
mov
test
sub
shll
repnz
sahf
das
loop
mov
xor
insb
and
scas
shl
pop
push
ljmp
mov
dec
out
or
or
aam
xchg
inc
testb
notb
inc
add
mov
pop
push
push
inc
fwait
jl
inc
dec
push
sbb
mov
xorl
jl
sub
push
sbb
cmp
jmp
cmp
out
je
push
sub
jle
sub
aas
mov
or
outsl
sub
mov
es
je
scas
pop
push
cltd
cmp
test
fnstcw
rcr
inc
je
icebp
in
and
fcoms
xchg
jp
les
test
mov
sub
sbb
std
push
lret
or
inc
push
sub
pop
roll
or
adc
mov
inc
adc
out
adcb
aas
xor
imul
pop
pusha
imulb
mov
cmpsb
incl
loop
xchg
sahf
fwait
cmpsb
jbe
mov
xor
or
std
lret
call
or
out
jp
popa
clc
sti
in
pop
lret
addr16
push
sub
inc
leave
dec
loop
fidivrs
je
push
mov
and
fldl
imul
or
sub
cli
aam
mov
pop
add
not
xchg
dec
mov
mov
pop
jp
mov
jbe
fnstcw
lcall
fidivrs
adc
adc
sub
and
mov
dec
xchg
fimuls
mov
out
lret
imul
cmp
xchg
or
mov
mov
sbb
sahf
lock
out
cmc
sub
scas
xor
push
adc
and
repnz
xor
jo
xor
sub
lea
pop
jnp
cmp
les
adc
out
sahf
sbb
dec
and
sbb
in
mov
int
adc
mov
mov
movsl
jbe
adc
sbb
stos
mov
pusha
sti
int3
int
or
pop
sbb
ret
loopne
fldl
and
jae
dec
pop
test
stos
add
icebp
mov
lahf
inc
push
mov
push
xchg
jp
movsl
jo
stos
or
nop
jecxz
pop
xor
mov
jno
xchg
pop
or
arpl
int
push
arpl
jecxz
out
pop
pop
scas
cmc
outsb
push
or
scas
cld
aas
test
test
pop
out
dec
fwait
jb
push
pop
xchg
dec
cs
js
or
pop
cltd
ja
jno
mov
xor
das
pop
push
jnp
mov
push
push
fwait
les
scas
ss
cmc
lock
cmp
sti
jae
push
mov
push
sub
cmp
mov
jbe
icebp
mov
je
sub
mov
cmp
mov
mov
ja
loopne
nop
sub
jno
inc
into
outsb
lea
loopne
cmp
and
shl
push
sbb
sbb
cwtl
in
iret
jl
and
popf
cli
cmp
xchg
xchg
stos
dec
lods
and
jl
stc
and
sub
jne
cwtl
xor
and
hlt
jg
pop
xor
icebp
mov
add
sub
ror
xlat
ficomps
pop
sbb
subl
mov
push
cmp
mov
xchg
lcall
cld
cmc
daa
pop
mov
pop
fsubp
arpl
dec
mov
orl
sub
loope
daa
in
loopne
xlat
xor
mov
push
lods
aam
mov
xor
and
mov
out
loope
sahf
mov
inc
push
mov
mov
xchg
sar
icebp
insl
cmp
jg
mov
jmp
fstl
fistpl
add
or
cmp
adc
fisttps
sub
shll
aas
push
inc
call
and
dec
adc
add
sar
nop
cmovns
jmp
sarb
dec
sub
push
dec
popa
push
lods
js
xor
push
mov
xor
mov
stos
repnz
inc
inc
popa
shlb
xchg
adc
idiv
fistpl
mov
mov
int
push
repnz
add
or
jns
sub
test
pop
clc
mov
push
outsl
pop
enter
test
inc
jb
sub
test
aam
cmc
call
fcompl
bound
mov
test
and
jnp
aas
or
ror
mov
cmpsl
cmp
notb
xchg
mov
pushf
and
lods
add
and
icebp
dec
cmp
in
xlat
cmp
mov
jae
jo
mov
js
leave
cmc
or
in
xor
xchg
pushf
sbb
daa
inc
jmp
shl
cmp
cld
add
popf
in
mov
repnz
inc
dec
mov
clc
hlt
jl
mov
dec
leave
push
dec
es
bnd
pop
sbb
sub
lret
push
push
jge,pt
xchg
or
jmp
push
pop
push
insl
sti
and
fimuls
jge
sbb
dec
out
inc
jnp
neg
aad
mov
xchg
mov
cmp
jecxz
mov
jp
pop
lock
or
and
scas
outsl
loope
popf
dec
inc
mov
push
cld
out
mov
pop
mull
xchg
xlat
or
mov
pushf
test
js
dec
ds
xchg
lea
pushf
stos
jne
fs
repnz
and
scas
ljmp
iret
int
test
sub
sbb
xchg
push
fs
jnp
mov
xor
popa
add
sub
bound
jno
mov
in
pop
out
jae
xchg
dec
inc
mov
insl
clc
popa
pop
sbb
icebp
loope
mov
sub
bound
leave
fistpll
addr16
jns
aam
fs
imul
hlt
mov
into
ljmp
aam
adc
sbb
rolb
xor
out
movsb
add
mov
xor
adc
pop
in
into
movsl
lahf
mov
sub
push
mov
into
dec
clc
mov
std
mov
std
xchg
aaa
in
adc
mov
lods
insl
out
jl
je
arpl
bound
aas
jle
fcmovb
decl
dec
out
sub
xor
popa
cmc
sub
fisttpll
xor
shll
pushf
popf
mov
and
cli
fistpl
sbb
lods
mov
push
sahf
je
addl
pop
pop
movsb
push
movl
adc
enter
mov
es
add
ds
enter
mov
pop
or
outsb
andl
insb
mov
loopne
or
lods
cmc
jns
dec
lea
pop
xor
inc
add
mov
daa
dec
inc
pop
mov
sti
adc
mov
jg
mov
push
adcl
mov
mov
stc
or
pop
sar
adc
hlt
fbld
divb
cmp
mov
or
inc
repnz
sbb
mov
stc
push
push
xor
fcomps
ret
pop
mov
inc
push
pop
mov
push
jbe
push
xchg
or
out
int3
jo
push
lds
sub
dec
sti
adc
mov
mov
stos
jae
sub
cmp
adc
pop
fldl
sub
aad
push
test
fnstsw
shlb
jmp
mov
or
ss
sbb
rcr
xchg
push
minps
dec
jns
into
dec
cli
sti
inc
or
lea
or
rcll
popl
out
imul
sbb
jno
in
insb
fwait
inc
mov
lret
inc
pop
dec
aam
je
jle
pop
cmp
push
mov
sbb
adc
adc
push
inc
lret
inc
vpmulhw
or
mov
data16
lds
adc
into
leave
aam
cmp
jno
pushf
insl
push
scas
les
imul
or
imul
push
add
or
je
sbb
int3
mov
inc
cmc
mov
push
mov
dec
fs
mov
fs
lret
jne
ret
in
sbb
outsb
adc
nop
dec
ljmp
sub
cmp
lret
imul
sub
pop
and
mov
sbb
loop
aas
xor
enter
adc
ret
inc
shlb
push
xor
xchg
lret
testb
mov
in
or
test
dec
inc
gs
test
adc
lcall
jecxz
jle
sbb
and
iret
fistps
cmp
inc
push
lea
or
xchg
int
stc
dec
dec
jbe
cld
sub
ffreep
aaa
dec
mov
ficoml
add
aaa
outsl
mov
cmp
popf
jo
je
les
daa
pop
inc
popw
mov
clc
jp
int3
xlat
data16
xor
pushf
ss
inc
mov
xor
cld
mov
mov
push
aas
gs
jnp
pusha
add
mov
dec
ror
push
cmp
cmp
popf
adcl
sub
aas
and
lods
cld
std
sbb
cmp
int
and
jmp
jb
repz
inc
or
pop
lock
out
xor
loopne
notl
ja
adc
mov
jmp
repz
jno
pop
sub
mov
ret
movsb
popa
xor
frstor
inc
int
aad
inc
stos
test
mov
mov
lret
or
lods
jecxz
fnstsw
loope
popa
sbb
jge
popa
jnp
xor
inc
imul
into
or
int3
mov
dec
aad
test
adc
repz
mov
test
adc
xchg
sub
xchg
lea
mov
mov
xor
loop
add
mov
lea
mov
ljmp
mov
sbb
or
and
pop
mov
push
lcall
pop
flds
pop
cmp
jge
xorl
mov
lods
jno
xlat
lock
jnp
fstpt
in
jnp
mov
clc
rcll
mov
inc
aam
or
xor
lock
fldenv
clc
sub
jge
and
fisttps
mov
add
lretw
repnz
and
add
stos
lahf
push
loopne
and
popf
ss
iret
test
mov
xor
pushf
jg
in
das
lds
test
jno
push
push
mov
jp
mov
gs
into
or
dec
sbb
sub
mov
inc
arpl
test
leave
int
push
movsb
jno
add
and
jne
cmp
inc
jo
mov
sbb
cmpl
ja
push
pop
jbe
int
rclb
add
xchg
add
test
pop
leave
pop
nop
cmc
jge
lea
jge
mov
popa
test
aad
lods
and
sub
test
aaa
push
jo
movsl
rclb
mov
cs
mov
shlb
cwtl
adc
sarb
popf
and
cmc
into
jp
js
test
lds
mov
sub
sub
mov
and
outsb
sub
mov
stos
pop
jecxz
out
xchg
jno
jg
cld
pop
lret
push
decl
cmpsl
lret
sbb
dec
mov
imul
xchg
fistps
mov
cld
ret
inc
dec
sbb
mov
jne
dec
imul
sbb
push
fwait
loope
in
pop
xchg
xlat
into
inc
test
inc
mov
test
sahf
cmc
faddp
mov
lret
dec
stos
cmpsl
mov
jecxz
lcall
pop
scas
test
and
push
mov
imul
sub
jge
adc
jnp
sub
jp
pop
jno
pextrw
xor
pop
mov
or
lcall
dec
adc
ja
pop
xchg
pushf
into
lock
add
jno
mov
test
jl
jnp
rcll
mov
aaa
aaa
xchg
pop
lret
out
ret
loope
stos
sahf
sub
jae
pop
mov
mov
lret
inc
and
loope
ljmp
or
push
and
outsb
roll
fdivrs
ds
adc
adc
mov
mov
imul
adc
inc
push
fwait
and
cmp
and
scas
ret
mov
mov
mov
pusha
enter
push
adc
mov
cmp
es
push
cmpsb
jmp
popf
scas
lods
lea
fwait
jo
push
xor
dec
mov
roll
push
popa
je
icebp
mov
lock
dec
sti
lods
xlat
mov
mov
aas
fdivrs
fsubrp
mov
mov
aaa
mov
and
push
xchg
jle
sbb
lcall
aad
inc
loope
pop
or
aam
pop
int3
or
jne
sti
ret
sub
or
cld
xchg
lds
gs
sti
jne
adc
add
aad
cli
push
push
xlat
sbb
mov
jo
ja
orb
mov
inc
push
les
stos
int3
test
fldt
fiaddl
iret
cmpsl
fstp
inc
int
jp
pop
inc
cmc
xlat
push
jns
jno
push
sahf
jns
mov
dec
sbb
sbb
mov
insl
stos
jbe
in
mov
mov
and
addr16
pop
mov
imul
stos
push
nop
dec
xrstor
adc
sub
pop
gs
daa
pop
push
mov
xchg
out
mov
push
enter
xchg
in
cmp
jl
dec
loop
push
cmpsl
add
adc
xchg
jp
sahf
das
js
inc
fnstsw
int
enter
push
inc
adc
cmc
xchg
cwtl
dec
jns
sub
in
mov
inc
or
dec
ret
cs
add
mov
dec
or
mov
ds
vunpckhps
inc
xchg
jne
dec
dec
add
mov
aas
xor
mov
add
or
sub
pusha
add
lock
inc
and
jne
imul
pop
xchg
jne
or
jle
add
mov
aad
clc
and
mov
cli
les
cld
sbb
push
jne
sbb
xchg
push
ret
adc
nop
mull
leave
xor
push
xor
int
cmp
aaa
mov
fdivl
std
xor
imul
dec
loop
cld
dec
lcall
pop
adc
pop
lods
inc
popa
ret
cli
sub
stc
lea
inc
mov
mov
adc
fcoms
shll
jbe
mov
rcrb
leave
push
xchg
lret
xchg
jp
mov
mov
push
imul
jmp
xor
repnz
mov
inc
ss
fwait
sti
aad
sarl
xchg
ret
std
xchg
mov
cmc
jle
stc
jae
and
lods
rclb
aaa
addr16
test
ret
negb
xchg
inc
mov
mov
outsl
gs
xchg
xorb
incl
in
add
test
jnp
daa
adc
out
mov
mov
and
mov
sub
subb
push
test
xchg
je
sub
dec
add
push
adc
mov
bound
aad
aad
xchg
add
and
cmp
jecxz
outsl
pushf
mov
int
dec
xchg
jne
out
dec
daa
repz
lods
pop
adc
out
add
test
sub
lock
in
ja
cli
jge
xchg
and
out
mov
and
and
popa
inc
sub
mov
sbb
add
ss
jo
ss
fsubrl
dec
icebp
daa
inc
lcall
cld
mov
pushf
jbe
sbb
mov
into
add
xor
out
cmp
cli
rol
aam
in
mov
sub
add
mov
imul
adc
shl
inc
inc
fcomi
pop
mov
mov
out
dec
fucomip
repz
loop
or
lret
add
sarl
lahf
adc
fcom
int3
in
xchg
lods
inc
in
and
ljmp
call
mov
mov
or
divl
sub
add
in
test
cmpsb
sbb
mov
mov
pop
push
inc
cmp
shrb
cmp
xchg
filds
iret
inc
mov
push
mov
add
cs
inc
xor
out
popf
std
xchg
adc
or
push
jbe
mov
jecxz
pushf
in
popa
test
fistps
push
into
cmpsb
cld
int
mov
and
or
outsl
movsb
rcll
test
sub
in
push
in
inc
fwait
push
leave
sti
add
jb
pop
push
lods
jb
outsb
ficomps
negb
pusha
add
clc
bound
ret
cmp
and
push
push
cli
adc
sub
mov
dec
testb
daa
sbb
ljmp
or
sar
fistps
lcall
mov
icebp
lods
pop
cmp
popf
clc
mov
and
cmpsb
pop
mov
cmp
sbbb
lret
into
xchg
ss
xchg
mov
lret
das
mov
ss
xor
pop
pop
pop
cmp
data16
insl
stc
dec
push
ss
sbb
mov
and
sar
add
test
mov
call
mov
rcr
aad
out
sti
rcll
jb
cmp
ret
inc
sti
into
dec
mov
mov
dec
addb
neg
pushf
mov
das
adc
fstl
mov
or
and
std
sub
xchg
ds
sub
dec
fimull
fsubs
or
gs
out
mov
jo
mov
sub
cli
dec
insb
xor
jne
lcall
cmp
mov
ljmp
pushf
movsl
jp
cmpsl
sub
xchg
pop
sbb
clc
jne
aas
pop
mov
fnstsw
pop
nop
jmp
mov
or
mov
out
inc
cwtl
inc
adcl
leave
push
in
scas
xor
mov
xor
inc
xor
stos
enter
adc
nop
xchg
pusha
sub
add
xlat
xchg
ret
lret
push
pop
xor
sub
loopne
inc
push
icebp
mov
push
or
test
dec
fistl
lret
lock
stc
jno
popf
mov
lcall
fcomps
clc
out
sbb
stos
jns
lcall
loopne
lret
out
jno
mov
stc
ret
xor
fistps
mov
xchg
clc
inc
insl
pcmpeqd
and
pop
cmpsb
ds
jnp
cmp
dec
sbb
js
aas
stos
lea
pop
pusha
je
ss
mov
jae
sbb
stos
test
or
mov
test
dec
cmp
mov
pusha
fcomps
cmp
mov
ljmp
fadd
insl
popa
int
cld
fdivl
insl
xchg
lcall
lcall
js
mov
jmp
es
sbb
xor
psubw
jecxz
fmull
nop
ljmp
inc
push
add
cmp
out
mov
mov
hlt
adc
xchg
push
addr16
push
sar
pop
pop
xchg
adc
sarb
pop
les
push
xlat
pop
push
dec
into
add
add
xchg
pop
cmpsb
mov
fsubrp
call
push
cld
sub
push
cmpsl
rcl
dec
mov
fwait
insb
jno
insb
xorb
fwait
adc
xchg
xchg
xor
or
scas
rorl
sbb
pop
cli
push
cli
mov
mov
addr16
jbe
cmp
push
popf
push
test
sbb
and
lret
fsubs
into
xor
xchg
sbb
inc
xlat
into
bound
or
push
aas
inc
jne
sbb
insl
xchg
and
xor
cmpl
inc
pop
pop
cmp
mov
inc
xchg
loopne
es
add
pop
push
xchg
jmp
stc
and
inc
jae
iret
xchg
push
orb
cmc
mov
xor
mov
mov
hlt
mov
sbb
push
mov
mov
gs
loope
jnp
add
popa
cltd
sub
mov
and
xor
rclb
jmp
mov
inc
aam
mov
adc
lcall
jo
jl
popa
mov
std
jmp
lret
shlb
gs
xor
repnz
iret
mov
mov
jae
notb
add
mov
mov
dec
scas
add
popf
fs
dec
loop
mov
jno
std
mov
loop
shl
punpckhdq
dec
mov
imul
xchg
adc
lock
sarb
push
nop
imul
pop
jecxz
inc
lcall
xchg
stos
insl
orl
sub
sbbl
xchg
mov
mov
movsb
xor
hlt
pop
repz
pop
mov
aas
inc
lcall
int
mov
frstor
or
inc
fs
add
add
fdivrp
lods
mov
lea
xchg
sub
test
jb
addb
dec
sbb
lcall
dec
add
push
lcall
jae
add
clc
sarl
jnp
xor
aad
push
jecxz
and
sbb
sbb
aam
ret
push
push
sub
cmpsl
pushf
aad
xchg
aam
test
pushf
mov
push
incb
jno
adc
or
add
in
loop
std
mov
mov
fsubp
mov
insl
inc
movsl
arpl
fwait
andl
add
repnz
add
je
fisubrl
push
ljmp
inc
sub
mov
enter
inc
nop
ret
cmp
mov
and
das
shll
sub
pop
push
xor
add
mov
lods
out
jno
mov
movsl
subb
fisubs
or
cmp
or
cmp
outsl
in
jge
and
inc
mov
push
mov
repnz
lods
mov
jno
adc
or
out
outsl
fidivrs
addr16
mov
jecxz
add
push
in
pxor
dec
cmp
lods
loope
popl
dec
lcall
mov
mov
mov
adc
bound
dec
mov
mov
stos
pop
ds
inc
data16
push
imul
mov
sbb
xor
fs
mov
lahf
mov
std
mov
jns
std
jp
out
mov
inc
jbe
outsb
int
outsb
xchg
je
lret
ss
xchg
mov
cmp
into
inc
in
mov
jbe
push
std
adc
mov
mov
jmp
dec
xchg
lods
arpl
push
push
in
fisubrl
lds
les
or
lds
stc
fs
push
jg
mov
adc
call
cltd
xchg
inc
add
dec
or
and
nop
imul
adc
in
inc
xchg
insl
or
sub
ret
xor
pop
adc
insb
dec
and
and
insb
cld
inc
or
and
scas
inc
cmc
pop
je
dec
xchg
mov
inc
lock
fcompp
scas
sub
ss
adc
cld
fs
push
sub
lock
loope
test
mov
movsl
icebp
sub
mov
outsb
dec
fs
sub
add
cmp
imulb
jmp
and
pop
js
mov
outsb
push
icebp
push
jle
mov
bound
mov
push
cmp
in
mov
dec
and
and
dec
sbb
sub
mov
fwait
add
mov
inc
popa
mov
pop
jb
xor
inc
sarb
push
pop
repz
inc
clc
jl
pop
jne
pop
mov
sbb
pusha
mov
std
jmp
shl
fwait
js
call
jne
pop
ret
adc
jg
ja
mov
or
mov
push
imul
fisubrs
jg,pt
mov
in
cwtl
mov
loopw
lock
mul
sub
fsubl
lret
clc
add
cwtl
loope
xor
into
sub
imul
popa
pop
push
cmp
dec
fcompl
popf
mov
notl
ja
jge
sahf
inc
mov
aaa
loope
pushf
sbb
lods
std
xchg
lcall
and
jbe
inc
mov
jne
or
call
pop
sbb
dec
push
cmpsb
pop
lcall
inc
pop
mov
dec
xchg
mov
notb
mov
push
adc
and
test
cmc
push
inc
sub
jae
shl
push
and
lret
lods
and
inc
dec
cmp
push
lods
inc
mov
sti
cld
cld
std
je
int
mov
jmp
aaa
movsb
js
repz
cwtl
test
cld
cld
sub
xor
stos
lret
cwtl
push
cmp
popf
cs
inc
jo,pn
ds
mov
xor
mov
fcomps
sub
add
fwait
sarb
mov
sahf
sub
add
push
xchg
loope
test
cmp
ljmp
test
mov
data16
xor
mov
sbbb
cmp
mov
dec
pusha
mov
mov
ja
jne
cmp
arpl
or
packssdw
test
scas
in
dec
cmp
std
xchg
in
jne
int3
jne
mov
jns
push
fldl
and
inc
mov
and
or
mov
and
dec
in
and
mov
lahf
ret
das
jns
inc
add
mul
xchg
subl
jge
and
clc
cmc
int3
jle
mov
enter
cltd
insl
pop
add
pop
shll
adc
lahf
pop
mov
out
inc
pop
inc
pop
mov
jp
test
mov
xchg
inc
and
xorl
pushf
sub
mov
lods
mov
inc
or
jmp
cmp
sti
xor
shrl
js
test
repnz
xor
enter
pop
and
pop
fistpll
sub
pop
jae
add
aad
in
fmuls
or
mov
aam
dec
xchg
pushf
clc
push
mov
dec
movsl
pop
cmp
pushf
and
ret
xor
and
xchg
ljmp
push
addr16
cmp
jg
int
out
loopne
xor
sbb
rol
dec
subps
shrl
addr16
jno
enter
sub
xchg
push
das
mov
pop
inc
dec
sub
or
jbe
sarb
mov
hlt
insl
xchg
lock
xor
pop
adc
jbe
adc
addr16
stos
sti
mov
and
cmp
cmp
mov
sahf
or
inc
int3
adc
loop
call
mov
lock
mov
mov
jp
jno
mov
fcmovu
rclb
xchg
pop
popa
ss
pop
addr16
aaa
inc
aaa
xchg
mov
push
mov
add
popa
cltd
fidivrl
daa
push
xor
ret
imul
add
cmc
cmpsl
fimuls
cmp
adc
popa
and
icebp
xor
xor
push
nop
enter
fisubrl
mov
lcall
rcrl
cmovae
adc
loopne
test
test
sbb
ljmp
out
shll
jnp
ret
jbe
inc
lret
rep
adc
out
jp
and
fidivrs
add
fistl
imul
pop
inc
scas
pop
cli
mov
cld
cwtl
repz
push
pop
sbb
pop
jmp
mov
loopne
mov
add
sub
pop
mov
fildl
dec
fisttpll
jae
xchg
aaa
adc
stos
enter
xor
cmp
sarl
lret
push
js
and
xchg
enter
fcoms
in
lret
push
das
adc
aas
mov
mul
xor
push
push
aad
add
dec
lea
push
icebp
data16
and
enter
mov
sub
sub
insl
xchg
add
mov
jne
ds
mov
fwait
loop
mov
scas
popf
mov
lret
int
scas
inc
hlt
test
jle
or
mov
or
pop
fwait
pop
lds
mov
push
stc
mov
jmp
fucom
push
dec
push
jg
pop
or
outsb
inc
or
icebp
xor
jbe
add
jg
xor
push
mov
call
or
dec
nop
hlt
jns
js
push
outsl
ret
repz
aas
jo
dec
shl
in
pop
std
fdivr
lods
std
mov
sbb
rclb
cmpsl
pop
cmp
sahf
in
daa
sub
mov
pushf
shr
dec
adc
insb
dec
inc
imull
pop
sbb
loopne
in
mov
adc
pop
mov
out
inc
and
xchg
in
sub
inc
mov
push
addb
mov
mov
jnp
test
inc
out
mov
fidivl
fwait
mov
and
daa
outsl
or
nop
out
unpcklps
push
push
lcall
sbb
aam
fs
lahf
fdiv
sub
mov
data16
jae
xchg
inc
test
imul
jbe
inc
stos
aas
cmpsl
cmpsl
add
dec
in
push
jbe
sahf
jmp
and
xchg
mov
ftst
pop
stc
mov
jnp
xlat
and
ret
xor
rcr
cld
jno
inc
arpl
out
and
jae
lcall
pop
inc
sub
jb
aas
sbb
xchg
push
pop
lods
mov
scas
and
push
jp
shlb
pusha
lahf
leave
adc
sbb
sub
loopne
sub
mov
xchg
dec
repz
or
insb
dec
xchg
mov
mov
in
adc
add
adc
xchg
cltd
mov
mov
fcomi
or
std
xor
insb
iret
mov
mov
sbb
xor
pop
in
cmp
add
inc
xor
xchg
stc
and
popa
movb
pop
scas
lahf
mov
lock
xor
mov
leave
cmc
jnp
popl
rolb
ret
ja
out
vxorps
dec
add
mov
jg
repz
sub
insl
inc
cmpl
and
lea
sub
imul
outsl
inc
fiadds
addr16
dec
shlb
xchg
aad
xchg
aam
in
push
pop
or
aad
mov
xchg
adc
jns
out
outsl
loopne
mov
sbb
test
pop
addr16
xlat
clc
lret
adc
pop
movsb
xchg
xchg
jae
xor
mov
or
adc
lret
push
xor
loop
cmp
sarb
clc
push
loop
dec
mov
daa
out
jp
xchg
fiadds
pop
dec
nop
inc
out
cmpsb
insl
setae
fidivl
mov
aaa
and
ss
mov
shl
bound
sub
popa
std
pop
push
dec
push
ljmp
adc
jbe
sub
cmpsl
xchg
cmp
sahf
stos
inc
sahf
test
or
jmp
hlt
lods
adc
mov
frstor
jge
push
movsl
jnp
inc
test
rorb
dec
add
outsb
push
lods
xchg
fnstcw
je
add
les
or
xlat
push
xchg
out
xor
cmp
in
cmpsb
push
push
addr16
push
mov
cmp
or
ljmp
or
push
jmp
fsubrs
push
sbbb
or
mov
and
jns
in
lods
dec
sahf
scas
sub
sbb
adc
test
pop
repnz
push
adc
call
comiss
aas
xor
icebp
pop
xchg
sahf
daa
inc
out
imul
jno
jae
pushf
fcmovu
push
pop
add
xlat
inc
fst
fdiv
fnstcw
inc
mov
inc
mov
inc
sub
sub
dec
xchg
mov
push
sbb
and
fstpl
jne
in
in
jae
dec
xor
negb
test
movsl
stos
divl
cmp
ret
inc
mov
subl
insl
shl
inc
test
or
sub
add
test
out
jbe
fisubl
int3
inc
adc
dec
cwtl
push
mov
cmp
dec
pop
xchg
pop
mov
mov
add
push
cmc
imul
lods
pop
daa
fisubrl
push
adc
push
jae
data16
xor
inc
add
out
into
cmp
and
es
mov
fldenv
subb
mov
mov
mov
xor
loop
pop
mov
fcoml
xchg
pusha
dec
jmp
push
stc
cmp
int
mov
adc
push
clc
sub
add
cwtl
pop
mov
mov
rcrb
lret
and
pop
push
insl
or
xlat
push
call
xcrypt-cfb
cmpsl
mov
inc
adc
data16
xlat
fld
jge
mov
icebp
dec
xlat
dec
push
aad
imul
test
mull
test
loopne,pn
dec
movsb
shll
data16
lock
pop
in
push
into
mov
jo
jge
mov
jno
push
sbbl
out
dec
mov
jns
mov
insl
mov
cmc
xchg
push
cli
adc
lock
sar
mov
leave
xor
div
pushf
jp
cld
adc
dec
das
lret
shll
fldl
jp
add
fsubrs
inc
cs
adc
pop
imul
mov
push
lcall
adcl
js
sahf
or
xor
pop
push
mov
or
xchg
movl
call
bound
and
or
in
mov
jnp
push
pop
scas
xor
out
xchg
aaa
jbe
xchg
bound
fists
ljmp
xchg
cmovbe
inc
lea
add
jnp
fistps
lock
into
push
mov
cmpsb
sahf
iret
mov
mov
mov
loop
int3
out
imul
cmp
aad
pushf
outsb
leave
adc
adc
push
dec
cmp
scas
jle
add
repz
pop
aad
pop
dec
sbb
mov
xchg
lcall
shll
out
mov
outsl
inc
push
pop
popf
adc
test
lcall
call
pushf
adcl
mov
or
pop
inc
xchg
lock
gs
mov
arpl
adc
dec
dec
jp
mov
out
adc
fwait
or
sbb
jb
adc
mov
adc
or
xchg
jl
pop
pop
movsl
jnp
roll
jne
cs
movsl
pop
rolb
adc
addr16
rcrb
gs
sti
xor
shlb
punpckhdq
loopne
loopne
mov
scas
adc
pop
mov
push
pusha
mov
decb
fisttpl
inc
stc
int3
xor
lea
shrb
insl
pop
rcll
stos
jl
decb
xor
jle
mov
or
sar
inc
xlat
rcrb
pop
xor
push
pop
adc
inc
mov
aad
ds
cmp
and
mov
enter
push
xor
fnstcw
jge
pop
inc
fcomps
push
sub
adc
mov
mov
rcl
and
rcll
or
cmp
add
sub
roll
add
loope
mov
mov
xor
gs
pop
imul
adc
cmp
call
cmp
dec
bound
in
lret
loopne
and
int
xorb
adc
scas
lods
and
stos
lcall
insb
add
and
sbb
dec
xor
aad
xchg
shlb
xor
dec
adc
lret
fdivl
arpl
sbb
rcrl
out
arpl
loop
mov
jae
sbb
inc
jb
sarl
sub
xlat
aaa
scas
lods
sti
pusha
adc
outsb
out
dec
jge
push
pop
or
call
adc
repz
xchg
sahf
test
cmc
insl
call
jle
mov
stos
sbb
mov
xorl
aad
sbb
fstl
mov
adc
in
sub
repz
jge
push
loopne
mov
push
outsl
mov
daa
dec
jo
loopne
jae
inc
sbb
push
in
in
fs
ret
ljmp
inc
mov
xchg
fcmovb
aas
mov
out
push
repnz
push
cmp
pushf
dec
das
jo
loop
scas
sbb
inc
lods
pop
mov
jb
sar
xchg
shrb
insl
pcmpgtd
in
and
ja
repnz
sbb
jecxz
pop
xchg
and
dec
aam
fcomps
jl
inc
mov
add
push
sub
mov
loop
pop
dec
or
lds
xchg
jo
cmp
jl
mov
xor
out
in
or
lods
push
xor
and
push
test
mov
inc
inc
cmp
fstp
mov
cs
push
xchg
add
jmp
aad
push
sub
rorl
sbb
mov
sub
sarl
push
adc
pop
inc
sti
sub
icebp
jae
add
jno
cmpsl
js
cmc
rorb
in
loope,pn
ficompl
test
mov
enter
cmpsb
test
push
pop
int3
aam
in
dec
adc
imul
add
aas
es
iret
xor
sbb
lret
stos
in
xchg
and
fdivrp
inc
loop
inc
sbb
jnp
lods
mov
pushf
push
and
movsb
popl
jbe
pop
pop
push
addr16
dec
popa
imul
lds
ljmp
ss
xchg
push
push
cmp
dec
add
jns
std
and
js
out
jmp
insl
lods
or
mov
lret
mov
push
sahf
clc
jo
outsb
push
dec
jmp
adc
rcll
mov
out
ret
ljmp
leave
test
dec
jge
imul
pop
jnp
sbb
aad
jb
fimull
scas
enter
jnp
jbe
lcall
test
or
aad
lods
jns
sub
and
xchg
push
sbb
mov
sbb
js
lahf
push
ret
adc
or
je
scas
mov
mov
cmp
lea
setle
inc
xchg
pop
out
std
ret
outsb
inc
and
ret
dec
mov
dec
adc
in
dec
mov
mov
fidivl
mov
push
repz
dec
or
xor
fwait
xchg
imul
mov
test
stc
xlat
adc
mov
cmp
mov
mov
xchg
mov
scas
lahf
push
mov
int3
mov
dec
jns
jl
fistpl
mov
adc
movsb
cwtl
ss
sub
sub
ret
roll
sbb
scas
pop
push
add
jnp
mov
test
pop
mov
add
mov
out
jb
cmp
jmp
shll
fnstenv
mov
scas
dec
dec
jno
rolb
push
and
sbb
repnz
or
mov
pop
popa
push
adcl
jbe
or
shll
out
iret
pop
add
imul
mov
movsb
addr16
lret
mov
jns
add
ficoml
adc
nop
out
push
je
mov
mov
mov
push
jle
pop
andb
mov
mov
mov
cmp
xor
mov
dec
push
lods
aas
sub
pop
mov
jl
movsl
loopne
cwtl
outsl
sub
out
sbb
lods
add
lahf
mov
rcll
int
cmp
add
or
xor
xor
cmp
add
add
sub
test
pop
push
mov
xchg
push
test
mov
adc
jbe
xchg
aad
xchg
sbb
jmp
fcomps
cmpsb
dec
push
hlt
sub
push
and
in
mov
fs
push
add
addl
push
unpckhps
fs
ret
sub
add
rolb
cmpsb
jnp
inc
sbb
ret
jl
aas
and
lea
dec
mov
dec
enter
popa
xrelease
mov
out
nop
sbb
arpl
push
sbb
pop
pusha
xor
cmp
dec
xchg
imul
jb
cmpsb
pop
or
aad
mov
or
outsl
lods
scas
xchg
repnz
cmp
jl
nop
arpl
repz
ret
inc
mov
in
push
mov
and
pusha
cmp
repz
push
jb
fmul
fstl
adc
icebp
adc
sub
mov
mov
out
fs
pop
lods
inc
insl
int3
lret
pop
insl
imul
in
cmp
or
or
enter
pop
jecxz
imul
pop
push
mov
dec
int
jb
xchg
xor
mov
xlat
xchg
sbb
push
leave
pusha
es
iret
pop
test
mov
xor
in
xchg
sbb
sub
push
je
sub
mov
call
mov
out
nop
sub
jg
push
imul
lods
cmp
loopne
push
xchg
inc
lcall
cli
push
jecxz
push
ljmp
stc
sbb
xor
out
stos
xor
inc
mov
or
dec
fwait
jnp
clc
lcall
xor
movsl
mov
call
inc
mov
out
stos
ret
in
in
cmp
pop
lds
sub
jp
add
shrl
fmuls
or
dec
movsl
jbe
xchg
jp
lock
xlat
test
xchg
inc
xchg
loop
mov
mov
shlb
xor
push
adc
aam
dec
mov
add
cmp
cmp
adc
sub
sbb
icebp
out
fildl
aas
pushf
roll
and
jo
adc
sub
jae
bound
mov
jmp
cmpsb
dec
ror
lock
push
testl
or
out
inc
fiaddl
pop
or
jle
out
fildll
push
sti
rolb
enter
and
les
dec
enter
cwtl
int
dec
cmpsb
loopne
scas
rol
push
dec
dec
sub
nop
push
and
fdivrs
mov
jl
push
mov
mov
add
xor
add
jae
or
cmp
or
xchg
and
pop
dec
ljmp
leave
xor
mov
push
mov
mov
cli
cmc
xchg
cmp
jmp
jp
fisttpll
mov
test
xlat
xor
xchg
sbb
and
call
cmpsl
repz
scas
stc
mov
repz
inc
ljmp
into
adc
or
je
imull
ss
fsub
and
cmpsl
and
cmp
leave
xchg
xchg
js
outsl
adc
mov
out
and
int3
inc
adc
rcrb
out
adc
ss
aam
pop
xor
test
out
loopne
cmpsl
in
jbe
mov
out
lcall
xchg
pusha
enter
aam
mov
and
adc
sub
jecxz,pn
adc
fldl
mov
loope
mov
or
aas
mov
test
xlat
sahf
hlt
std
loopne
adc
jns
xcrypt-ecb
cmpsl
int3
push
adc
inc
arpl
or
cmp
lcall
je
addb
bound
or
dec
popa
mov
imul
cmpsl
push
pop
enter
add
mov
mov
pushf
xchg
out
lret
mov
or
and
stos
mov
in
pop
sbb
rcl
cltd
adc
cwtl
stos
fmulp
sub
addb
cmp
dec
push
jmp
push
mov
ret
sub
sbb
mov
outsb
mov
test
jl
cmp
push
xchg
adc
xor
pop
push
or
js
adc
out
mov
or
movsl
jne
clc
aam
pop
adc
iret
xchg
inc
xchg
pop
jnp
scas
rcr
movsb
bound
mov
mov
mov
add
sub
ret
jno
pushf
xchg
lods
cmp
out
cs
mov
imul
loope
and
aam
pop
sbb
dec
mov
dec
xchg
cmpsl
pop
leave
jecxz
lods
cmpsl
roll
inc
les
shll
repnz
sbbl
notb
mov
lods
or
or
mov
fnstsw
sub
mov
in
hlt
jecxz,pt
mov
adc
sbb
mov
add
adc
call
lods
jg
movsb
push
insb
cwtl
lods
push
mov
and
cmp
mov
aas
outsl
adc
ficoms
sti
ja
addr16
xor
push
add
int3
popa
loopne
sbb
cmp
fldz
mov
jne
cltd
js
leave
mov
data16
mov
decb
mov
mov
gs
push
push
mov
movsb
dec
jmp
push
inc
mov
out
mov
jae
fs
insl
xor
xchg
xor
xor
cli
cmpsb
sar
repz
lock
fidivrs
mov
pop
aaa
inc
lret
cmp
mov
mov
or
test
mov
sub
es
add
call
push
insb
and
pop
inc
xchg
enter
jnp
das
jae
mov
inc
int
mov
repnz
movsl
mov
sbb
mov
xor
mov
repz
dec
sbb
inc
and
sub
loopne
test
dec
or
inc
sahf
icebp
shlb
mov
cld
add
andb
adc
jl
sub
inc
add
mov
adc
fwait
push
test
add
fs
add
pop
dec
or
inc
adc
cli
push
dec
adc
adc
aam
push
sub
xor
repnz
fsts
out
adc
int3
inc
inc
mov
in
ds
out
pushf
push
xchg
and
cmp
and
mov
inc
lods
into
sbb
mov
lock
arpl
push
out
push
cmp
inc
decb
es
adc
push
data16
fadds
cmpl
mov
xor
jge
fcomps
xchg
xor
cmp
clc
xchg
mov
push
aas
sub
arpl
adc
add
ss
aaa
push
lret
or
imul
shrb
add
xor
imul
data16
push
sarl
sub
mulb
or
movsl
dec
mov
xchg
mov
xchg
xor
inc
in
mov
xchg
loope
rcll
sbb
lds
test
int
push
negl
jns
leave
or
sbb
inc
push
loop
ja
dec
bound
add
inc
cmc
xor
sbb
sti
push
fmul
insb
testl
pushf
inc
fstps
mov
nop
arpl
mov
pop
sbb
pop
into
adc
call
mov
pop
dec
mov
fdivrs
mov
out
ds
jns
jo
dec
es
push
pusha
dec
mov
inc
xchg
inc
sbb
es
fs
mov
xchg
stc
sti
mov
ds
cltd
lret
stc
inc
xchg
jg
pop
cltd
ret
stos
pushf
mov
inc
orl
push
lret
inc
popf
cmp
or
mov
sbbb
push
dec
and
add
scas
stos
rcl
dec
mov
movsb
inc
popa
add
in
mull
inc
pop
iret
push
push
pop
jbe
incl
cmp
test
pop
xor
pop
mov
fsts
call
icebp
mov
daa
addr16
push
scas
cmpsl
mov
push
aas
dec
mov
andl
iret
pop
sbb
mov
call
nop
mov
pop
scas
movsl
into
mov
dec
push
ljmp
xchg
lret
inc
add
imul
je
pop
movsl
arpl
fdiv
int3
data16
das
dec
jne
cli
push
into
cltd
addr16
or
inc
lds
pop
xchg
out
insb
lock
push
cmpsl
in
in
jns
jnp
and
xchg
jecxz
inc
mov
pop
push
cmp
js
nop
mov
call
push
sbb
cmp
fisubs
jle
loopne
push
aad
jo
mov
lods
push
mov
inc
movsl
lahf
rorl
in
add
add
or
sbb
sub
mov
in
add
call
lods
and
jne
push
jle
dec
les
dec
adc
pop
xchg
scas
mov
call
