add
add
add
call
and
add
add
ljmp
add
add
inc
add
sbb
add
clc
add
and
add
mov
add
add
aas
add
sub
add
inc
aas
add
dec
aas
add
fadds
add
add
pushf
inc
add
test
add
add
pusha
inc
add
dec
inc
add
cmp
add
inc
add
sbb
add
inc
add
clc
inc
add
ljmp
add
inc
add
idivb
add
sahf
inc
add
mov
add
add
push
inc
add
inc
inc
add
xor
add
and
add
add
idivb
add
call
aas
add
mov
aas
add
mov
add
jb
add
push
aas
add
add
add
adc
add
cwtl
cmp
add
cmpb
add
add
adc
add
cmp
add
loopne
add
sarb
add
je
add
push
cmp
add
xor
add
adc
add
push
cmp
add
in
cmp
add
cmp
add
cmp
add
add
add
sub
add
sub
subb
add
sub
add
enter
fsubrl
add
add
add
sbb
add
cs
dec
add
bound
add
jl
add
xchg
add
movsb
add
mov
add
les
add
add
call
add
adc
add
sub
add
cmp
add
dec
das
add
pop
das
add
insb
das
add
subb
add
das
add
mov
add
das
add
fsubrs
add
out
das
add
add
add
adc
add
xor
add
add
pop
xor
add
add
add
add
mov
add
les
add
fdivs
add
ljmp
add
xor
add
add
sub
add
cmp
add
dec
xor
add
add
xor
add
add
xor
add
add
les
add
loop
add
cli
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
jp
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
inc
xor
add
add
add
add
mov
add
lcall
add
xor
add
xor
add
xor
add
add
sbb
add
add
cs
add
add
dec
xor
add
add
jbe
add
test
add
xor
add
xor
add
xor
add
xor
add
xor
add
and
add
cmp
add
push
xor
add
push
add
pop
sub
add
add
js
add
mov
add
xor
add
sbb
inc
add
add
sub
add
sub
add
sub
add
add
add
clc
inc
add
push
inc
add
add
add
pushf
add
lods
add
shlb
add
add
loop
add
out
add
add
add
push
aaa
add
push
aaa
add
cs
add
ds
add
dec
aaa
add
push
aaa
add
push
add
jp
add
mov
add
xchg
aaa
add
stos
aaa
add
mov
aaa
add
fdivs
add
divb
add
or
add
sbb
add
sub
add
cmp
add
dec
cmp
add
add
outsb
cmp
add
add
xchg
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
pop
cmp
add
xchg
inc
add
add
mov
add
cwtl
cmp
add
add
enter
aam
add
loopne
add
out
cmp
add
cmp
add
add
sub
add
cmp
add
dec
cmp
add
add
insb
cmp
add
cmp
add
add
les
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
inc
cmp
add
add
mov
add
add
cmpsb
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
cmp
add
add
pop
cmp
add
add
jle
add
mov
add
cmp
add
add
dec
add
cmp
add
sub
add
push
add
or
add
clc
xor
add
les
add
lcall
add
add
add
add
push
add
call
add
add
sub
add
sub
add
sub
add
add
add
add
sbb
add
lret
add
add
data16
jbe
add
test
add
lret
add
addb
add
adc
add
adc
add
sldt
orb
add
or
add
or
add
aaa
add
xorb
xorb
add
add
add
add
add
jae
add
outsl
add
xorb
add
adcb
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
add
push
jne
jb
push
popa
insb
jne
push
add
push
inc
push
push
dec
dec
dec
cs
insb
add
push
push
inc
push
je
imul
fs
jae
inc
add
xor
xor
fs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
gs
gs
inc
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
scas
add
imul
jae
in
inc
insb
jne
push
inc
jne
data16
add
in
add
gs
outsl
outsb
jae
insb
gs
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
imul
cmc
add
je
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
xor
inc
gs
outsl
outsb
jae
insb
gs
imul
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
jne
jb
outsb
je
push
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
imul
imul
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsl
arpl
push
imul
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
insl
add
je
outsl
arpl
gs
outsb
outsw
push
add
jne
inc
gs
outsl
fs
gs
imul
add
jbe
inc
gs
outsl
fs
gs
imul
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jp
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
inc
dec
inc
push
add
cwtl
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
jb
arpl
jae
gs
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
je
jb
jne
dec
outsb
outsw
push
add
push
je
dec
popa
outsb
fs
add
mov
inc
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
mov
push
jns
je
insl
inc
imul
jns
add
push
jns
je
insl
inc
imul
jns
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
fiadds
inc
gs
gs
imul
inc
gs
gs
imul
loopne
inc
gs
gs
imul
jmp
push
imul
imul
jns
add
in
add
outsl
bound
inc
fs
je
insl
push
add
out
add
outsl
bound
inc
insb
insb
outsl
arpl
lock
outsl
bound
inc
gs
gs
inc
je
insl
add
repnz
outsl
bound
inc
imul
push
add
add
outsl
bound
inc
insb
popa
addr16
cmc
add
outsl
bound
inc
jb
add
testl
popa
insb
inc
gs
je
insl
dec
popa
insl
gs
add
clc
add
outsl
bound
dec
popa
outsb
fs
add
stc
add
outsl
bound
dec
outsl
arpl
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
adc
dec
gs
jo
imul
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
popa
fs
outsl
fs
je
add
sub
dec
jae
popa
fs
gs
fs
je
add
sub
dec
jae
popa
fs
jb
je
push
je
add
popa
insb
imul
add
add
push
popa
insb
imul
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
add
dec
add
fs
imul
add
dec
add
popa
insb
inc
insb
insb
outsl
arpl
add
dec
outsl
arpl
inc
jb
add
dec
outsl
arpl
push
gs
insb
insb
outsl
arpl
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
push
popa
imul
jo
imul
push
gs
fs
imul
gs
gs
jae
dec
jne
gs
add
add
insb
push
outsb
ja
outsb
fs
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jb
outsl
jb
outsl
fs
or
push
gs
jbe
outsb
je
add
add
je
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
je
dec
popa
outsb
fs
add
cmp
push
gs
outsb
push
gs
js
gs
imul
gs
inc
add
gs
dec
add
insl
imul
outsl
arpl
jae
add
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
push
outsb
push
gs
js
gs
imul
gs
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
imul
push
arpl
add
fs
push
dec
jne
je
inc
jns
add
gs
imul
imul
je
push
jb
imul
imul
mov
gs
jb
imul
imul
insb
jae
jb
popa
je
add
mov
insb
jae
jb
insl
jo
add
mov
insb
jae
jb
insl
jo
add
mov
insb
jae
jb
insl
jo
inc
add
arpl
imul
je
arpl
push
add
mov
jb
jo
outsb
push
add
insb
outsb
inc
add
mov
jb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
fs
jae
push
imul
arpl
add
or
inc
imul
push
imul
jae
sldt
imul
outsl
ja
outsl
push
outsl
jo
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
inc
popa
insb
insb
push
imul
outsl
arpl
cmp
inc
push
outsb
jne
je
insl
add
inc
insb
imul
arpl
outsb
add
dec
add
jo
push
arpl
popa
add
gs
je
push
imul
push
add
push
imul
outsl
arpl
add
gs
imul
jae
add
je
outsl
jns
outsb
jne
cltd
add
je
outsl
jns
imul
add
jo
je
push
popa
addr16
add
mov
ja
gs
push
add
add
popa
bound
outsb
jne
je
insl
add
les
inc
outsb
popa
bound
imul
lds
inc
outsb
fs
gs
imul
jae
fildl
inc
outsb
jne
push
push
push
imul
fiadds
inc
outsb
jne
push
imul
filds
inc
jno
popa
insb
push
arpl
add
je
arpl
gs
imul
add
je
popa
jo
jne
add
stc
add
je
insb
popa
jae
dec
outsb
outsw
push
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
insb
imul
je
or
inc
gs
jne
jae
jb
outsl
jae
add
inc
gs
inc
add
add
je
gs
je
jo
imul
adc
inc
gs
insb
addr16
je
insb
dec
inc
add
adc
inc
gs
insb
addr16
je
insl
add
push
add
je
outsl
arpl
add
pop
add
je
outsl
jb
addr16
jne
fs
imul
add
je
gs
je
je
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
inc
gs
outsb
jne
add
je
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
add
je
outsb
jne
je
insl
dec
inc
add
add
je
outsb
jne
je
je
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
cmp
dec
gs
popa
addr16
imul
inc
gs
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
inc
gs
popa
jb
outsb
je
dec
add
je
jb
jo
add
pop
add
je
jne
dec
outsb
jne
add
inc
gs
jns
inc
outsl
insb
outsl
jb
pop
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
js
inc
add
je
jns
je
insl
dec
gs
imul
inc
gs
outsl
jo
imul
push
inc
gs
imul
add
je
imul
outsb
addr16
add
jae
inc
gs
imul
popa
arpl
outsb
je
add
gs
imul
arpl
add
je
imul
js
push
add
jle
inc
jb
jns
je
imul
dec
outsb
jbe
insb
imul
je
add
arpl
imul
jae
imul
scas
add
push
imul
popa
bound
add
imul
jae
bound
mov
dec
imul
add
fs
arpl
insb
gs
je
jb
push
add
fs
imul
add
fs
jne
jae
jb
add
fs
arpl
push
add
add
fs
outsb
jne
add
add
fs
je
imul
dec
popa
jo
imul
imul
dec
gs
popa
addr16
outsl
js
add
add
imul
push
add
add
imul
jae
addr16
add
add
push
outsl
jae
dec
gs
popa
addr16
add
add
push
outsl
jae
push
jne
je
gs
popa
add
add
dec
outsb
push
arpl
sbb
push
imul
popa
jae
push
add
sub
push
imul
outsb
outsl
ja
gs
popa
addr16
add
sub
push
gs
gs
jae
inc
popa
jo
jne
add
sub
push
gs
gs
jae
inc
inc
add
outsl
jbe
push
jb
jo
add
add
jne
gs
inc
inc
insb
push
popa
jb
insl
add
xor
push
arpl
outsb
push
outsl
inc
insb
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
outsb
fs
gs
popa
addr16
add
inc
add
je
arpl
gs
imul
add
je
jne
jae
jb
push
add
je
outsl
arpl
add
push
add
je
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
popa
add
je
outsb
jne
je
insl
inc
imul
imul
gs
jb
jo
add
insl
add
je
arpl
jo
jns
add
push
gs
imul
add
je
imul
outsb
addr16
add
addl
gs
imul
jae
add
push
imul
js
push
add
mov
push
gs
imul
outsl
outsl
imul
add
stos
inc
add
fs
outsl
jo
jo
add
popf
inc
add
outsl
ja
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
gs
gs
dec
jne
push
add
test
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
outsb
jae
popa
je
dec
gs
popa
add
scas
add
push
imul
outsl
outsl
imul
mov
push
outsb
jo
arpl
inc
inc
insb
push
popa
jb
insl
add
imul
popa
jae
push
add
mov
popa
je
push
imul
ret
add
insb
imul
je
add
add
imul
gs
add
outsb
dec
gs
jo
add
xlat
add
jo
imul
push
inc
push
xor
cs
insb
add
daa
add
gs
je
inc
imul
add
gs
inc
inc
add
popl
inc
gs
gs
dec
bound
arpl
aam
inc
jae
popa
jo
add
fiadds
inc
js
push
gs
dec
jne
push
add
inc
gs
insb
imul
imul
gs
gs
arpl
popa
jo
add
dec
bound
arpl
add
push
je
arpl
bound
arpl
aad
dec
data16
je
imul
dec
jb
inc
js
icebp
add
push
imul
cmc
add
arpl
jae
bound
add
push
gs
outsl
jb
inc
inc
add
add
jbe
inc
inc
add
or
push
arpl
gs
imul
inc
js
inc
js
add
add
popa
insb
gs
imul
je
js
add
add
insb
arpl
push
arpl
adc
inc
imul
outsl
jb
add
add
je
popa
jo
outsl
fs
cmp
push
gs
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
inc
js
inc
js
add
add
je
imul
dec
jb
inc
js
add
push
gs
imul
je
js
add
push
gs
dec
jne
push
add
inc
inc
dec
xor
cs
insb
add
add
fs
jb
outsb
je
jb
outsl
outsb
outsb
arpl
outsb
push
add
add
outsl
jae
push
jb
outsb
je
jb
add
add
gs
push
jb
outsb
je
jb
outsl
outsb
outsb
arpl
outsb
push
add
inc
add
jne
outsb
je
jb
jo
jb
imul
inc
outsb
jne
push
jb
outsb
je
jb
push
add
gs
jb
outsb
je
jb
popa
je
push
add
inc
gs
jb
outsb
je
jb
add
dec
jo
outsb
push
jb
outsb
je
jb
add
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
sbb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
outsl
jae
push
gs
imul
insb
add
mov
inc
gs
imul
outsb
je
outsl
jne
arpl
fadds
inc
jno
popa
insb
push
imul
gs
imul
push
imul
imul
je
shll
pop
add
je
imul
push
jns
add
add
je
imul
push
jns
outsl
jne
je
sbb
inc
gs
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
inc
gs
jae
jb
popa
insl
gs
add
xor
dec
outsb
imul
push
arpl
imul
imul
add
push
popa
insb
imul
add
imul
arpl
jne
je
popa
insl
gs
add
dec
add
imul
arpl
jne
je
imul
outsb
push
jb
arpl
jae
outsl
imul
add
push
inc
dec
popa
outsb
popa
addr16
add
scas
add
outsb
push
gs
imul
add
outsb
push
push
push
outsl
imul
roll
jne
jb
push
gs
imul
jne
add
leave
add
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
outsl
je
data16
push
dec
gs
popa
insb
jne
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
stc
add
addr16
gs
popa
insb
jne
inc
js
add
cli
add
addr16
gs
popa
insb
jne
inc
js
add
incb
push
imul
outsb
je
outsl
jne
arpl
add
or
push
gs
jb
inc
jbe
outsb
je
add
or
push
gs
jb
push
outsl
push
gs
data16
das
add
je
arpl
imul
imul
arpl
add
je
push
push
outsl
imul
add
push
inc
push
dec
xor
cs
insb
add
pop
add
addr16
imul
inc
add
addr16
jne
jb
inc
imul
inc
dec
dec
xor
cs
insb
add
dec
inc
push
dec
xor
cs
insb
push
mov
push
push
call
cmpl
je
mov
cmp
jne
mov
mov
leave
ret
and
add
mov
and
add
add
add
add
adc
add
sub
add
ss
add
dec
daa
add
pop
daa
add
push
add
js
add
mov
add
cwtl
daa
add
lods
daa
add
shlb
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
add
lcall
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
call
sub
add
add
push
sub
add
sub
add
add
push
sub
add
add
add
sub
add
add
loopne
add
out
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
pop
sub
add
add
jl
add
mov
add
add
inc
add
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
sub
add
jl
add
nop
sub
add
mov
add
lret
add
sub
add
cld
sub
add
sbb
add
and
add
xor
add
ds
pop
add
subb
add
add
enter
fsubrl
add
out
add
add
push
das
add
push
das
add
ss
add
inc
das
add
push
das
add
data16
add
jbe
add
subb
add
das
add
mov
add
ret
add
das
add
call
xor
add
xor
add
xor
add
add
dec
xor
add
add
je
add
xorb
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
xor
add
add
dec
xor
add
add
add
mov
add
mov
xor
add
add
fidivl
add
in
add
repnz
add
xor
add
add
xor
add
xor
add
add
add
add
sub
add
add
add
add
pop
sub
add
add
add
add
add
add
mulb
add
loopne
add
adc
add
add
add
adc
add
sub
add
xor
add
add
jae
add
add
add
outsl
add
xorb
cmpb
add
or
add
or
add
sldt
adcb
add
adc
add
adc
add
push
add
adcb
add
add
add
les
add
shlb
add
add
add
fs
and
add
mov
add
sub
add
add
outsb
sub
add
add
add
add
cmp
add
je
add
dec
xor
add
add
push
and
add
add
add
add
adc
add
sub
add
ss
add
dec
daa
add
pop
daa
add
push
add
js
add
mov
add
cwtl
daa
add
lods
daa
add
shlb
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
add
lcall
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
call
sub
add
add
push
sub
add
sub
add
add
push
sub
add
add
add
sub
add
add
loopne
add
out
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
pop
sub
add
add
jl
add
mov
add
movsb
cwtl
inc
add
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
sub
add
jl
add
nop
sub
add
mov
add
lret
add
sub
add
cld
sub
add
sbb
add
and
add
xor
add
ds
pop
add
subb
add
add
enter
fsubrl
add
out
add
add
push
das
add
push
das
add
ss
add
inc
das
add
push
das
add
data16
add
jbe
add
subb
add
das
add
mov
add
ret
add
das
add
call
xor
add
xor
add
xor
add
add
dec
xor
add
add
je
add
xorb
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
xor
add
add
dec
xor
add
add
add
mov
add
mov
xor
add
add
fidivl
add
in
add
repnz
add
xor
add
add
xor
add
xor
add
add
add
add
sub
add
add
add
add
pop
sub
add
add
add
add
add
add
mulb
add
loopne
add
adc
add
add
add
adc
add
sub
add
xor
add
add
jae
add
add
add
outsl
add
xorb
cmpb
add
or
add
or
add
sldt
adcb
add
adc
add
adc
add
push
add
adcb
add
add
add
test
inc
jb
jo
inc
arpl
imul
gs
inc
add
xchg
add
jns
je
outsb
push
popa
outsb
outsl
insl
add
mov
jo
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
stc
add
addr16
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
inc
push
push
dec
dec
dec
cs
insb
add
add
push
lahf
inc
add
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
add
je
jae
inc
add
arpl
imul
push
dec
inc
gs
gs
dec
gs
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
jo
inc
imul
jb
popa
je
inc
imul
jns
add
dec
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
push
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
pop
add
gs
je
dec
popa
insl
gs
imul
add
gs
je
push
jb
arpl
jae
add
add
gs
je
push
gs
popa
jo
xor
imul
je
push
push
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
gs
gs
inc
imul
imul
arpl
insl
gs
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pushf
add
jne
push
gs
jne
arpl
popa
insl
gs
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
scas
add
imul
jae
mov
inc
js
je
push
add
mov
gs
imul
arpl
inc
imul
mov
gs
imul
jae
gs
push
imul
inc
imul
gs
add
outsb
fs
imul
gs
add
roll
inc
imul
inc
imul
imul
jne
arpl
add
add
jne
push
inc
jne
data16
add
out
inc
insb
jne
push
dec
inc
imul
jb
popa
je
gs
popa
addr16
add
in
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
imul
cmc
add
je
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
outsb
jae
insb
gs
push
add
sub
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
sub
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
cmp
inc
gs
jne
jb
outsb
je
imul
jns
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
jb
jbe
push
jns
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
js
je
outsl
fs
jb
arpl
jae
add
inc
gs
js
je
outsl
fs
push
add
inc
gs
imul
bound
gs
add
pop
add
je
imul
pop
add
je
imul
popa
add
je
jne
insb
push
popa
je
fcoml
imul
popa
jae
inc
jb
outsl
jb
add
gs
outsl
arpl
gs
outsb
outsw
inc
add
insl
add
je
outsl
arpl
gs
outsb
outsw
push
add
jb
inc
gs
outsl
outsb
addr16
popa
je
fld
inc
add
add
inc
gs
outsl
fs
gs
imul
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
inc
dec
inc
push
add
cwtl
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
je
dec
popa
outsb
fs
add
mov
inc
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
mov
push
jns
je
insl
dec
outsb
outsw
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
gs
jo
imul
add
lret
add
je
gs
jo
popa
je
sbb
inc
gs
imul
je
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
filds
inc
gs
gs
imul
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
adc
dec
gs
jo
imul
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
bound
addr16
jb
jae
outsb
je
xor
popa
insb
imul
add
add
push
popa
insb
imul
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
add
dec
add
fs
gs
jne
arpl
add
dec
outsl
arpl
gs
jne
arpl
add
dec
popa
jo
imul
insb
add
outsl
jbe
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
add
dec
jo
outsb
inc
jbe
outsb
je
add
jp
dec
jo
outsb
push
jb
arpl
jae
jle
dec
jo
outsb
push
push
add
addl
jne
inc
bound
push
je
imul
add
imul
gs
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cwtl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
fwait
add
imul
jo
imul
push
gs
fs
imul
gs
gs
jae
dec
jne
gs
add
gs
jae
push
gs
popa
jo
xchg
mov
add
add
gs
imul
jns
add
ret
gs
je
jbe
outsb
je
add
add
jae
insl
gs
push
add
lret
je
push
outsb
ja
outsb
add
add
je
outsb
fs
inc
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jbe
outsb
je
add
push
gs
imul
bound
gs
add
push
add
je
imul
gs
add
add
je
imul
gs
js
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
je
dec
popa
outsb
fs
add
add
je
push
push
jb
outsl
jb
je
add
add
je
outsb
push
gs
js
gs
imul
gs
inc
add
jp
outsl
push
gs
jne
arpl
add
push
insb
gs
dec
add
insl
imul
outsl
arpl
jae
add
push
gs
imul
ret
xchg
inc
add
push
add
inc
insb
insb
outsl
arpl
add
push
insb
jae
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
push
outsb
push
gs
js
gs
imul
gs
add
push
outsb
insl
popa
jo
imul
insb
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
je
outsl
jb
imul
push
arpl
add
imul
insb
gs
bound
arpl
add
je
popa
insl
gs
imul
add
fs
push
dec
jne
je
inc
jns
add
je
inc
outsl
outsb
jae
insb
gs
add
je
inc
outsl
outsb
jae
insb
gs
add
gs
imul
inc
dec
xor
cs
insb
add
sbb
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
add
inc
push
arpl
cmp
push
push
inc
push
outsb
add
push
push
inc
push
outsl
arpl
je
add
push
push
xor
xor
fs
insb
add
fiadds
dec
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
and
add
mov
and
add
add
add
add
adc
add
sub
add
ss
add
dec
daa
add
pop
daa
add
push
add
js
add
mov
add
cwtl
daa
add
lods
daa
add
shlb
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
test
add
je
add
bound
add
inc
xor
add
xor
add
xor
add
xor
add
add
add
add
out
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
xor
add
sub
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
sub
add
add
pop
sub
add
add
add
xchg
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
sub
add
jbe
add
mov
add
test
add
ret
add
sub
add
imulb
add
es
ss
inc
add
push
add
pop
add
push
add
js
add
test
add
mov
add
loopne
add
imulb
add
push
das
add
and
add
xor
add
inc
das
add
push
das
add
fs
add
jl
add
mov
add
pushf
das
add
lods
das
add
mov
das
add
fisubrs
add
in
das
add
cli
das
add
or
add
push
xor
add
xor
add
add
xor
add
add
xorb
add
add
add
add
add
add
loopne
add
hlt
daa
add
add
add
pop
sub
add
add
add
add
adc
add
sub
add
add
add
add
orb
add
push
add
cmpb
add
add
add
or
add
jae
add
jo
add
xchg
sub
add
add
outsl
add
xorb
sldt
adcb
add
adc
add
adc
add
pop
add
adcb
add
add
add
les
add
shlb
add
add
add
push
add
add
add
mov
add
fs
push
sub
add
add
insb
sub
add
add
mov
add
mov
add
cld
and
add
add
cmp
add
dec
add
push
and
add
add
add
add
adc
add
sub
add
ss
add
dec
daa
add
pop
daa
add
push
add
js
add
mov
add
cwtl
daa
add
lods
daa
add
shlb
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
test
add
je
add
bound
add
inc
xor
add
xor
add
xor
add
xor
add
add
add
add
out
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
xor
add
sub
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
sub
add
add
pop
sub
add
add
add
xchg
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
sub
add
jbe
add
mov
add
test
add
ret
add
sub
add
imulb
add
es
ss
inc
add
push
add
pop
add
push
add
js
add
test
add
mov
add
loopne
add
imulb
add
push
das
add
and
add
xor
add
inc
das
add
push
das
add
fs
add
jl
add
mov
add
pushf
das
add
lods
das
add
mov
das
add
fisubrs
add
in
das
add
cli
das
add
or
add
push
xor
add
xor
add
add
xor
add
add
xorb
add
add
add
add
add
add
loopne
add
hlt
daa
add
add
add
pop
sub
add
add
add
add
adc
add
sub
add
add
add
add
orb
add
push
add
cmpb
add
add
add
or
add
jae
add
jo
add
xchg
sub
add
add
outsl
add
xorb
sldt
adcb
add
adc
add
adc
add
pop
add
adcb
add
add
add
test
inc
jb
jo
inc
arpl
imul
gs
inc
add
xchg
add
jns
je
outsb
push
popa
outsb
outsl
insl
add
mov
jo
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
stc
add
addr16
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
sbb
push
popa
je
mov
imul
inc
add
insb
gs
dec
gs
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
inc
push
push
dec
dec
dec
cs
insb
add
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
sbb
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
add
inc
push
arpl
cmp
push
push
inc
push
outsb
add
push
push
inc
push
outsl
arpl
je
add
push
push
xor
xor
fs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
jo
inc
imul
jb
popa
je
inc
imul
jns
add
dec
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
push
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
pop
add
gs
je
dec
popa
insl
gs
imul
add
gs
je
push
jb
arpl
jae
add
add
gs
je
push
gs
popa
jo
inc
add
add
inc
jb
popa
je
push
push
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
gs
gs
inc
imul
imul
arpl
insl
gs
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pushf
add
jne
push
gs
jne
arpl
popa
insl
gs
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
scas
add
imul
jae
mov
inc
js
je
push
add
mov
gs
imul
arpl
inc
imul
mov
gs
imul
jae
gs
push
imul
inc
imul
gs
add
outsb
fs
imul
gs
add
roll
inc
imul
inc
imul
imul
jne
arpl
add
add
jne
push
inc
jne
data16
add
out
inc
insb
jne
push
dec
inc
imul
jb
popa
je
gs
popa
addr16
add
in
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
imul
cmc
add
je
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
outsb
jae
insb
gs
push
add
sub
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
sub
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
cmp
inc
gs
jne
jb
outsb
je
imul
jns
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
jb
jbe
push
jns
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
js
je
outsl
fs
jb
arpl
jae
add
inc
gs
js
je
outsl
fs
push
add
inc
gs
imul
bound
gs
add
pop
add
je
imul
pop
add
je
imul
popa
add
je
jne
insb
push
popa
je
jne
inc
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
gs
outsl
arpl
gs
outsb
outsw
inc
add
insl
add
je
outsl
arpl
gs
outsb
outsw
push
add
jb
inc
gs
outsl
outsb
addr16
popa
je
cmp
jne
inc
gs
outsl
fs
gs
imul
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
inc
dec
inc
push
add
cwtl
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
je
dec
popa
outsb
fs
add
mov
inc
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
mov
push
jns
je
insl
dec
outsb
outsw
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
gs
jo
imul
add
lret
add
je
gs
jo
popa
je
lds
gs
imul
je
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
filds
inc
gs
gs
imul
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
adc
dec
gs
jo
imul
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
bound
addr16
jb
jae
outsb
je
xor
popa
insb
imul
add
add
push
popa
insb
imul
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
add
dec
add
fs
gs
jne
arpl
add
dec
outsl
arpl
gs
jne
arpl
add
dec
popa
jo
imul
insb
add
outsl
jbe
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
add
dec
jo
outsb
inc
jbe
outsb
je
add
jp
dec
jo
outsb
push
jb
arpl
jae
jle
dec
jo
outsb
push
push
add
addl
jne
inc
bound
push
je
imul
add
imul
gs
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cwtl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
fwait
add
imul
jo
imul
push
gs
fs
imul
gs
gs
jae
dec
jne
gs
add
gs
jae
push
gs
popa
jo
ret
cmpsb
inc
add
mov
outsl
jbe
inc
imul
jns
add
ret
gs
je
jbe
outsb
je
add
add
jae
insl
gs
push
add
lret
je
push
outsb
ja
outsb
add
add
je
outsb
fs
inc
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jbe
outsb
je
add
push
gs
imul
bound
gs
add
push
add
je
imul
gs
add
add
je
imul
gs
js
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
je
dec
popa
outsb
fs
add
add
je
push
push
jb
outsl
jb
je
add
add
je
outsb
push
gs
js
gs
imul
gs
inc
add
jp
outsl
push
gs
jne
arpl
add
push
insb
gs
dec
add
insl
imul
outsl
arpl
jae
add
push
gs
imul
sbbb
push
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
push
outsb
push
gs
js
gs
imul
gs
add
push
outsb
insl
popa
jo
imul
insb
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
je
outsl
jb
imul
push
arpl
add
imul
insb
gs
bound
arpl
add
je
popa
insl
gs
imul
add
fs
push
dec
jne
je
inc
jns
add
je
inc
outsl
outsb
jae
insb
gs
add
je
inc
outsl
outsb
jae
insb
gs
add
gs
imul
inc
dec
xor
cs
insb
add
push
add
pusha
movl
je
inc
add
inc
dec
dec
xor
cs
insb
add
add
mov
and
add
add
lock
add
fsubl
add
sbb
add
xor
add
inc
daa
add
pop
daa
add
data16
add
mov
add
lcall
add
daa
add
add
add
mov
add
cmpsb
xor
add
add
fdivl
add
pop
sub
add
add
add
nop
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
add
mov
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
xor
add
dec
sub
add
add
je
add
mov
add
lcall
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
add
add
mov
sub
add
sub
add
sub
add
sub
add
es
add
inc
sub
add
je
add
test
add
scas
sub
add
aam
add
loopne
add
out
sub
add
data16
add
add
and
add
ds
data16
jle
add
xchg
add
lods
add
shrb
add
add
loop
add
repnz
add
add
sbb
add
sub
add
cmp
add
dec
das
add
pop
das
add
data16
add
jl
add
mov
add
cwtl
das
add
cmpsb
das
add
mov
das
add
out
add
add
add
adc
add
and
add
xor
add
inc
xor
add
add
data16
add
add
xorb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
test
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
int3
xor
add
add
add
xor
add
add
add
add
call
add
add
xor
add
add
add
sub
add
sub
add
add
add
add
je
add
sub
add
inc
xor
add
add
jo
add
jae
add
add
add
add
add
cmp
add
or
add
or
add
sldt
adcb
add
adc
add
adc
add
push
add
adcb
add
push
add
or
add
mov
add
les
add
add
add
add
add
fs
push
sub
add
and
add
xor
add
and
add
add
push
xor
add
add
and
add
cwtl
and
add
add
lods
inc
add
add
js
add
lock
add
fsubl
add
sbb
add
xor
add
inc
daa
add
pop
daa
add
data16
add
mov
add
lcall
add
daa
add
add
add
mov
add
cmpsb
xor
add
add
fdivl
add
pop
sub
add
add
add
nop
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
add
mov
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
xor
add
dec
sub
add
add
je
add
mov
add
lcall
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
add
add
mov
sub
add
sub
add
sub
add
sub
add
es
add
inc
sub
add
je
add
test
add
scas
sub
add
aam
add
loopne
add
out
sub
add
data16
add
add
and
add
ds
data16
jle
add
xchg
add
lods
add
shrb
add
add
loop
add
repnz
add
add
sbb
add
sub
add
cmp
add
dec
das
add
pop
das
add
data16
add
jl
add
mov
add
cwtl
das
add
cmpsb
das
add
mov
das
add
out
add
add
add
adc
add
and
add
xor
add
inc
xor
add
add
data16
add
add
xorb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
test
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
int3
xor
add
add
add
xor
add
add
add
add
call
add
add
xor
add
add
add
sub
add
sub
add
add
add
add
je
add
sub
add
inc
xor
add
add
jo
add
jae
add
add
add
add
add
cmp
add
or
add
or
add
sldt
adcb
add
adc
add
adc
add
push
add
adcb
add
sbb
push
popa
je
add
arpl
imul
push
dec
inc
gs
gs
dec
gs
add
push
dec
dec
push
inc
push
dec
cs
insb
add
jo
inc
arpl
imul
gs
inc
add
xchg
add
jns
je
outsb
push
popa
outsb
outsl
insl
add
mov
jo
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
inc
push
push
dec
dec
dec
cs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
jo
inc
imul
push
call
mov
jo
in
add
push
add
testl
add
divb
les
add
add
add
add
mov
mov
add
enter
add
imul
roll
outsl
add
flds
add
mov
mov
mov
insb
call
add
add
add
pop
add
push
add
add
cmpsl
add
les
mov
out
add
cmpsl
push
fiadds
jecxz
jecxz
roll
add
xchg
adc
imul
add
push
out
int
out
xchg
add
add
add
add
mov
hlt
add
add
test
mov
add
push
mov
add
push
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
jp
add
test
ja
push
movsb
add
lods
shll
xchg
pop
test
mov
outsl
jnp
mov
sti
movl
call
xchg
in
gs
add
push
xchg
xlat
iret
xchg
mov
stc
popa
cmpsl
xchg
add
ret
add
lret
repnz
add
mov
mov
lea
pop
movl
popl
push
push
push
lea
push
lea
push
call
add
js
mov
roll
push
push
addl
aam
lahf
sti
push
mov
add
add
jae
in
mov
push
test
jmp
mov
add
std
pop
add
push
add
mov
add
add
jbe
out
add
cld
add
in
add
adc
push
push
push
push
push
lea
push
call
add
stc
add
add
aad
add
add
add
add
mov
filds
add
loope
jp
add
sarb
add
add
bound
add
push
add
add
add
lods
xlat
add
xchg
add
add
hlt
add
pop
add
scas
add
movsb
fiaddl
add
pop
push
call
push
push
push
call
pop
add
add
add
push
lahf
loope
add
divb
test
in
add
cld
mov
mov
add
xchg
add
mov
mov
add
add
lds
add
add
push
imul
sti
mov
in
jae
fs
add
mov
add
add
jmp
lea
pop
call
push
push
push
lea
push
push
call
add
ljmp
add
add
mov
cld
add
add
push
sti
push
add
add
add
add
jnp
mov
add
jmp
mov
add
aad
mov
test
add
out
pop
in
lahf
bound
repnz
mov
mov
push
mov
faddl
je
mov
jecxz
add
bound
pop
call
jmp
ret
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
lea
std
pushf
cmpsb
add
jns
pushf
add
add
loop
into
mov
fs
jbe
xchg
fldl
add
add
add
nop
rclb
add
popa
sahf
jb
add
pop
add
jno
out
jecxz
add
add
push
jl
test
mov
scas
movsl
add
mov
add
out
mov
lea
pop
mov
mov
add
push
push
push
push
lea
push
push
push
push
push
call
mov
add
add
add
add
add
popf
add
add
add
std
add
lret
stc
imul
negb
mov
add
pop
ja
clc
add
into
add
mov
fnsave
jns
fildl
add
pop
add
enter
stos
add
add
cmpsb
jle
add
jp
xchg
add
mov
lea
pop
add
add
mov
push
push
push
lea
push
push
push
push
push
push
push
push
call
push
add
add
call
ja
push
cli
add
add
rolb
add
add
js
addr16
loop
mov
test
xchg
push
addl
jo
add
js
mov
add
popl
fwait
add
add
xchg
add
add
add
add
add
nop
xchg
add
je
les
add
push
push
push
call
add
nop
out
add
add
add
loope
add
add
add
add
rol
add
movsl
cmpsb
jl
add
add
lret
add
mov
jno
jbe
xchg
add
add
popf
add
lret
data16
push
mov
add
imul
outsl
loopne
aad
add
pop
add
cltd
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
call
add
add
add
add
flds
add
arpl
fcmove
fidivs
add
xchg
add
xchg
add
mov
add
add
test
icebp
add
in
lahf
fwait
out
add
arpl
mov
fwait
addb
clc
add
fbld
cmc
out
cmpsb
idivb
add
push
lods
add
out
lret
add
loop
shl
pop
mov
mov
lea
pop
add
call
mov
xor
push
push
add
push
sub
add
sub
sub
shl
pop
pop
push
push
push
call
add
add
roll
cld
mov
add
mov
add
mov
outsl
xlat
add
lods
rolb
fildll
pop
lock
test
mov
add
push
xchg
add
ret
lret
mov
mov
mov
pushf
push
lock
repnz
add
fucomp
add
add
add
mov
lea
pop
pushl
call
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
popf
imul
add
add
fdivl
add
add
pop
add
cmc
add
add
jns
iret
xorb
out
mov
mov
add
popa
mov
add
enter
mov
clc
add
pop
push
aam
in
add
add
test
insb
add
add
add
add
add
lea
pop
mov
push
push
lea
push
push
push
call
add
add
rorb
add
add
addl
add
add
push
lret
in
add
add
add
mov
test
add
jge
add
add
add
add
pop
push
add
in
out
add
fcmovne
add
add
add
add
mov
add
xchg
add
push
add
ljmp
add
add
add
lea
pop
movl
lea
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
xorb
lahf
add
push
add
mov
int3
jne
add
popf
int3
mov
faddl
jbe
into
pusha
lods
add
add
in
add
popf
add
loope
add
add
add
icebp
andb
mov
outsl
jmp
push
mov
movsl
add
pop
add
add
jno
push
add
pop
incb
mov
pop
aad
lret
bound
in
int
rorb
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
jl
cwtl
test
add
mov
xchg
xor
jecxz
push
ja
jne
add
cmpsb
stc
mov
ljmp
add
add
lret
add
pop
fs
sahf
jmp
sti
xchg
add
pop
pop
xchg
std
add
add
add
jne
lahf
add
add
mov
data16
add
ret
add
in
mov
pop
pushl
push
push
push
lea
push
lea
push
call
out
out
add
enter
add
push
add
test
add
add
mov
in
pop
clc
add
sahf
mov
jbe
pop
in
add
out
mov
add
mov
in
jge
cmpsl
mov
icebp
loope
lock
mov
lock
mov
add
jne
sarb
add
push
jge
mov
lea
pop
call
push
push
lea
push
push
lea
push
push
call
add
sahf
fldl
iret
out
cld
mov
add
fwait
add
jl
scas
cld
in
roll
jno
enter
lock
add
fadds
add
add
mov
push
test
fwait
cwtl
sar
add
add
cltd
mov
cld
add
push
add
add
loopne
mov
cli
arpl
mov
lea
pop
pushl
pushl
call
push
push
sub
not
push
and
add
shr
sub
inc
sub
dec
add
pop
ror
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
loop
add
fs
fimuls
add
add
add
push
add
add
add
add
add
add
add
jle
add
imul
ja
add
add
add
cmc
filds
mov
xchg
faddl
xchg
add
stos
add
add
add
lods
add
add
add
add
jge
add
retw
hlt
lea
pop
pushl
call
push
push
push
not
push
or
not
add
inc
dec
add
sub
shl
add
not
not
pop
dec
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
sbbb
add
in
jno
sti
mov
add
sti
mov
add
cmc
test
add
aad
add
mov
pushf
icebp
add
xchg
add
add
iret
add
add
add
add
sahf
arpl
add
ljmp
add
lea
pop
push
push
push
push
call
add
shll
insb
add
mov
add
add
mov
add
add
mov
lds
add
jbe
pusha
add
repnz
add
add
sti
lock
add
add
jns
fsubrp
mov
add
jecxz
add
push
ljmp
add
add
mov
lea
pop
push
call
mov
push
push
lea
push
lea
push
lea
push
push
push
call
test
mov
jae
add
add
add
bound
pop
leave
cwtl
add
pop
add
xchg
ja
add
std
pop
add
add
std
insb
movsb
into
add
xchg
mov
add
pop
pop
movl
add
jp
ja
lcall
aad
aam
mov
add
add
push
mov
lea
pop
push
push
push
lea
push
lea
push
call
lock
mov
jae
mov
add
cmpl
ljmp
test
add
add
jne
mov
mov
add
lods
mov
cltd
out
add
add
add
add
add
add
xchg
add
fsubrl
add
add
scas
cmp
add
push
mov
mov
lea
pop
push
push
push
push
lea
push
lea
push
lea
push
call
ja
mov
adc
aad
in
roll
pusha
jo
add
push
add
pop
mov
add
add
add
aad
out
xchg
int3
add
call
lds
in
add
nop
add
pop
push
stc
add
add
adcb
out
push
add
jae
mov
mov
outsl
in
popf
mov
add
push
insb
jge
sti
add
scas
testl
mov
data16
pop
in
push
push
push
push
push
lea
push
lea
push
push
call
mov
outsl
xchg
xchg
add
add
jno
out
add
mov
imul
roll
fwait
add
fidivl
push
mov
add
cmpsl
sti
xchg
mov
add
pop
xchg
add
add
jnp
jge
add
add
mov
mov
add
add
add
xchg
fstl
fmull
pop
in
push
lea
push
push
push
push
push
push
push
call
out
add
add
pop
mov
rolb
mov
rorl
lahf
out
fiaddl
adcb
pop
add
shrl
add
add
xlat
roll
pop
nop
stos
add
lock
add
mov
jge
cltd
add
xchg
stos
xchg
fwait
loop
add
mov
shl
add
mov
scas
add
add
and
add
add
push
lea
push
call
add
add
jae
add
add
pop
jecxz
aad
cltd
jp
loope
fucom
add
add
push
int
stc
in
lahf
mov
add
add
add
test
push
test
add
xchg
in
int3
enter
lret
lods
add
loop
xchg
mov
jne
in
int
mov
clc
cmc
jge
add
jp
add
or
xor
jno
jne
push
push
push
push
push
lea
push
push
push
call
jnp
jb
pushf
add
leave
xchg
mov
addr16
cmpsb
jno
add
pop
lock
add
fs
xchg
jle
add
pop
push
loope
add
mov
pop
add
add
push
mov
add
add
pop
pop
push
scas
mov
scas
mov
sti
add
add
rolb
push
lods
fiadds
shll
pop
sti
add
lcall
loope
lea
add
push
add
pop
push
push
push
push
call
add
rolb
mov
shr
add
push
jb
add
add
movsl
jns
lahf
pop
aad
add
jmp
add
aad
popf
add
push
popf
cmpsb
shr
je
add
mov
nop
mov
icebp
pop
icebp
add
roll
add
lret
movb
outsl
ljmp
add
lea
mov
add
add
mov
jb
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
imul
jecxz
push
pop
push
lret
shlb
jmp
xchg
int
mov
mov
add
popa
xchg
mov
xlat
aad
add
gs
add
add
add
add
lret
aad
add
add
add
jge
add
add
movsb
jo
pushf
add
push
add
jmp
scas
scas
xchg
testl
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
push
call
add
add
rolb
jle
js
leave
add
addr16
nop
add
xchg
jbe
add
movl
xchg
add
std
jne
cli
jl
add
add
add
push
add
ljmp
add
scas
addr16
mov
xchg
add
xlat
lods
add
add
jnp
call
mov
lea
pop
add
add
push
lea
push
push
push
lea
push
call
jo
xchg
jp
movsl
add
fstl
leave
add
jp
add
out
add
add
mov
add
arpl
in
xchg
lods
adcl
add
add
jl
in
rolb
test
pop
add
jno
fcoml
add
xchg
shlb
xlat
add
faddl
fst
int3
add
push
add
pop
mov
leave
mov
lea
pop
pop
push
push
push
lea
push
call
jne
movsb
incb
add
add
test
negl
shrl
add
add
add
jle
pushf
add
pop
jne
lods
scas
push
add
xlat
add
add
loop
mov
mov
loope
push
xchg
out
add
add
push
loopne
orl
pop
mov
xor
push
push
push
push
push
push
push
push
call
enter
cmc
add
add
fs
lahf
lcall
sarl
fdivr
mov
cltd
mov
add
scas
hlt
fisubs
mov
fiaddl
addb
mov
xlat
add
data16
sarb
rol
lcall
add
jle
aam
fcmovnu
jae
add
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
movsl
add
push
roll
add
add
rorl
cwtl
pop
add
test
popa
in
add
stos
mov
in
mov
add
scas
sti
push
hlt
cmc
add
fiadds
incb
mov
mov
add
mov
popf
add
aam
jmp
sbbl
xchg
add
add
jle
je
fcmovbe
mov
add
add
pop
mov
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
sti
push
add
jmp
imul
flds
fstps
clc
add
into
push
notb
jp
jnp
mov
add
mov
add
add
add
test
jnp
add
popa
push
push
mov
add
xchg
add
lret
xchg
add
mov
add
add
add
pusha
add
ljmp
lea
pop
xor
push
lea
push
push
lea
push
call
add
add
pop
add
flds
mov
add
in
add
add
mov
mov
lahf
outsl
out
adcl
test
imul
jb
add
add
jo
add
cld
add
test
add
add
add
add
pushf
les
int
pushf
lcall
mov
add
mov
lea
pop
add
push
push
call
vsubpd
add
lock
jb
sar
lcall
add
repnz
add
mov
jmp
add
add
add
into
cmpsb
stc
pop
add
test
out
shl
add
add
add
scas
movsl
stos
jmp
fiadds
jecxz
lret
add
add
xlat
cmpsl
xchg
lret
sbbb
std
add
mov
lea
pop
sub
push
push
push
push
lea
push
lea
push
push
call
pusha
add
fcom
mov
add
popf
push
testb
add
ljmp
add
add
jne
jl
jbe
add
ret
lahf
imul
mov
jecxz
push
lods
push
xchg
add
lea
add
add
fwait
out
cltd
lcall
add
jge
into
add
add
add
clc
add
jmp
loopne
mov
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
call
add
roll
sti
xchg
add
add
nop
add
pop
add
mov
cltd
add
iret
add
addb
mov
fcmovu
add
add
add
add
add
mov
pushf
jge
xchg
lods
int3
add
lods
rolb
loop
push
int3
push
cld
incb
add
cli
mov
add
add
std
xchg
add
test
add
add
js
pop
mov
cmpsb
scas
leave
jne
push
mov
popa
sbb
rep
push
push
push
lea
push
push
push
push
push
push
call
leave
imul
jp
mov
add
add
icebp
fstpt
mov
add
pushf
add
test
add
mov
add
push
mov
xorb
int3
fildl
out
jl
mov
jno
insb
divb
push
add
add
add
addb
fidivrl
push
add
add
add
outsl
icebp
xlat
addl
lea
pop
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
add
mov
rolb
addr16
add
add
add
cli
add
push
je
out
jbe
mov
repnz
out
add
repnz
insb
cmpl
imul
push
test
xchg
add
add
xchg
add
pop
add
int
xchg
roll
addr16
fsubp
add
andl
mov
lea
pop
add
add
add
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
push
jb
add
jle
add
mov
xchg
push
mov
add
add
mov
xchg
jne
addl
pop
in
mov
jmp
add
add
ljmp
add
les
add
cltd
push
xchg
add
fcomip
add
shll
cwtl
add
jp
int
fs
mov
in
sti
add
addb
out
add
pop
mov
xor
push
push
push
push
push
push
push
call
bound
add
add
xchg
addl
les
in
in
cmc
add
rcrb
outsl
popl
callw
lock
add
add
add
mov
cli
aam
out
add
add
rolb
push
pop
outsl
add
loop
add
pop
add
mov
mov
add
add
add
add
mov
add
data16
mov
scas
mov
lea
pop
mov
xor
mov
push
push
push
push
push
lea
push
call
add
flds
std
pop
add
add
test
add
addb
jne
jo
mov
push
shl
add
mov
mov
lret
add
add
add
pushf
mov
popa
jecxz
sarb
add
add
jnp
add
xchg
sbb
aam
bound
xor
push
push
push
push
push
push
push
call
jge
lea
add
pushf
nop
add
popf
test
add
hlt
add
out
add
add
imul
movb
add
mov
add
push
add
mov
add
adcl
add
add
push
test
jp
add
insb
mov
add
movsb
js
cltd
mov
lea
pop
add
push
push
push
push
push
call
mov
jl
jmp
add
jmp
imul
xchg
add
lret
add
add
add
xchg
xchg
call
add
add
add
add
mov
jnp
add
add
add
xchg
cld
lea
add
mov
mov
loope
add
pop
mov
repnz
mov
les
add
jns
cld
lea
pop
add
add
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
jp
add
jns
add
add
add
add
add
lds
add
andl
pushf
jb
add
cld
jne
cld
add
xchg
add
mov
repnz
pop
add
add
xchg
xchg
add
xchg
mov
pop
in
add
xchg
push
mov
add
mov
add
mov
add
add
push
mov
lea
pop
mov
push
push
xor
push
xor
add
add
rol
xor
rol
sub
ror
dec
pop
dec
shr
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
les
add
add
jno
add
add
add
out
test
mov
fsubl
add
pusha
add
add
add
fiadds
mov
add
add
xlat
leave
rolb
in
add
iret
push
jmp
jl
ret
add
mov
add
cltd
lds
mov
imul
mov
lea
pop
pushl
push
push
push
push
push
call
mov
jbe
add
adcb
add
sti
test
add
add
pop
mov
fstl
arpl
sti
add
add
add
aad
add
lahf
mov
shl
add
mov
xchg
add
leave
jo
jecxz
sti
bound
out
add
add
add
add
pop
call
push
push
push
xor
xor
rol
shl
push
and
add
rol
rol
sub
lea
shr
not
pop
dec
dec
sub
shr
pop
push
push
push
push
push
call
movsl
mov
lods
mov
add
or
add
test
add
add
loopne
lods
add
add
mov
add
in
leave
std
add
stos
add
cmpsl
mov
add
push
add
add
mov
fs
loop
jae
add
lods
mov
push
cli
mov
lds
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
in
add
push
cwtl
add
add
imul
add
incb
add
jecxz
testb
add
add
test
add
add
jbe
jp
add
add
rclb
add
cli
int
add
mov
cltd
insb
jae
add
lods
imul
fnstsw
add
xchg
mov
bound
mov
xchg
xchg
mov
lea
pop
push
call
push
push
call
xorb
xorl
add
addr16
add
add
aad
int
add
mov
push
add
push
add
addb
add
add
loope
pop
fidivrl
xlat
add
lds
add
jle
sti
push
ja
int3
add
int
add
shll
add
in
int3
ret
int3
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
mov
mov
add
lcall
add
add
shll
call
push
movl
jnp
jecxz
push
add
mov
mov
add
lods
shr
add
rolb
add
add
pop
icebp
add
add
add
cli
add
test
int
add
iret
jp
add
sub
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
popa
stos
add
add
movb
cmpsb
imul
fiadds
lcall
roll
loope
add
add
jae
add
sti
mov
add
into
faddl
push
add
arpl
push
fwait
add
jb
jle
fsubr
iret
xchg
mov
fldcw
in
loope
mov
push
add
add
repnz
aam
fmull
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
into
jge
mov
add
cld
ljmp
imul
add
leave
clc
iret
add
dec
movsb
add
pushf
push
jge
mov
pop
add
shlb
cmp
jmp
mov
ret
popf
ret
add
movsb
add
add
mov
mov
add
cli
add
fwait
popa
mov
push
mov
lea
pop
mov
add
push
push
push
lea
push
push
push
lea
push
push
call
mov
xchg
les
int3
into
add
add
flds
ffreep
fnsave
add
add
popf
add
test
mov
aam
jb
jno
add
xor
pop
push
add
add
test
add
add
js
orl
add
add
cltd
in
fdivl
mov
add
add
and
ret
add
add
add
mov
xor
push
push
call
add
in
add
add
add
in
mov
loope
hlt
add
mov
add
jl
fwait
test
add
add
jl
cmpsb
add
imul
imull
fsubrs
stos
imul
add
aam
push
aam
add
rcl
add
fs
mov
cwtl
add
add
mov
lea
pop
add
push
mov
push
push
lea
push
push
lea
push
lea
push
call
jmp
cmpsb
cmc
mov
add
sahf
lret
ret
div
push
in
add
push
xchg
xchg
add
fmul
test
mov
roll
sarl
add
add
mov
in
add
xchg
add
push
push
int3
nop
js
loopne
mov
add
add
add
lret
stc
jmp
data16
xor
push
lea
push
call
add
mov
lea
lea
je
fbstp
add
add
pop
push
add
add
stos
testl
negb
cltd
movl
add
add
add
mov
add
mov
mov
add
lahf
xlat
add
addr16
jle
xchg
mov
push
add
lahf
out
mov
lea
pop
add
push
push
push
lea
push
push
push
lea
push
push
push
push
call
cli
pushf
mov
add
add
shll
add
mov
push
iret
in
gs
repnz
mov
add
outsl
mov
addl
add
add
add
cld
loopne
add
mov
add
add
popf
in
rorb
shr
test
mov
jb
add
pop
add
pop
push
push
lea
push
push
call
add
jns
push
jge
add
add
insb
addr16
add
addl
outsl
ljmp
sti
test
add
add
xchg
mov
add
add
mov
add
add
clc
mov
add
add
andb
add
add
test
aad
add
add
pop
stos
rolb
mov
lea
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
pop
mov
push
out
add
pop
shrl
pop
les
scas
add
push
mov
add
add
xchg
add
pop
int
xchg
add
ror
add
sahf
stc
mov
imul
sahf
lret
insb
add
mov
ja
mov
ja
add
add
add
ret
add
test
fcomi
add
add
jbe
xchg
add
scas
mov
idivb
lea
pop
xor
push
push
push
push
push
push
push
push
push
call
adc
add
add
mov
mov
pop
movsb
jecxz
add
add
xchg
iret
add
stc
popf
test
add
movl
scas
add
add
add
imul
add
pop
in
add
jne
mov
add
xlat
add
add
add
add
add
js
mov
lea
pop
add
push
lea
push
call
popf
ja
add
jno
add
add
loopne
add
mov
add
test
fldenv
mov
popf
mov
addl
jns
pop
test
xchg
loope
add
jmp
cmpsb
add
popf
push
test
flds
movsl
push
rol
mov
in
add
xchg
mov
lea
pop
rep
mov
xor
push
push
call
pop
ret
add
insb
js
mov
flds
xchg
push
mov
add
add
fistpll
add
push
add
add
stc
add
lret
add
add
stc
pop
add
add
pop
fs
mov
rolb
cwtl
stos
add
add
jmp
pop
add
add
jmp
in
scas
out
mov
lea
pop
or
je
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
xchg
mov
add
mov
int3
rcr
jne
add
jecxz
add
add
xchg
add
xlat
mov
lds
data16
pop
pop
out
add
xchg
add
push
fwait
pusha
add
rcrb
add
xchg
stc
sti
scas
fadds
repnz
sahf
add
add
add
lods
jnp
movsl
add
lea
pop
mov
xor
push
lea
push
push
push
push
push
push
lea
push
push
call
cmpsb
add
jp
add
add
imul
add
add
in
add
fucom
mov
gs
xorl
mov
int
stc
add
fnstcw
add
push
jbe
jne
add
addb
add
jo
out
add
je
jl
add
shlb
mov
hlt
mov
add
les
push
sbb
jno
pop
add
push
ror
lea
shr
lea
pop
add
push
push
not
shl
inc
pop
mov
push
push
push
push
lea
push
call
loop
stc
xchg
jnp
add
add
push
add
add
add
push
add
add
icebp
repnz
add
add
push
add
mov
add
xchg
out
add
push
add
xor
shll
jno
cmp
stos
filds
pop
xlat
mov
stc
add
loopne
cld
lea
pop
xor
push
push
push
lea
push
push
lea
push
call
add
add
shlb
test
add
push
pop
mov
xchg
pop
add
cmc
mov
add
add
aam
add
fadds
push
nop
pop
movsb
xchg
nop
mov
loope
add
mov
std
out
out
stos
int
add
jo
add
mov
fdivl
add
add
hlt
lea
pop
add
push
sub
pop
add
push
shl
pop
pop
push
push
push
push
push
lea
push
push
call
pop
mov
push
mov
xchg
call
add
add
movsl
add
add
add
testl
stc
fwait
xchg
add
lahf
les
pop
jge
bound
add
int
negb
pop
add
add
push
fwait
call
jge
add
les
xchg
push
add
rcrb
lea
pop
rep
mov
push
push
push
call
pop
pop
in
cmc
add
mov
add
mov
add
repnz
add
xchg
add
loop
add
xchg
ja
xchg
add
add
lcall
jnp
je
lods
add
popa
xchg
out
xchg
imul
pop
jecxz
popa
imul
in
mov
testl
int3
lds
lods
std
fwait
add
addb
mov
mov
lea
pop
xor
push
lea
push
push
push
push
call
jge
add
add
add
mov
stos
add
lahf
mov
add
add
lret
push
add
mov
fildl
in
test
lcall
mov
add
je
pop
mov
add
int3
add
fs
add
stos
mov
popa
adc
add
push
lea
push
push
push
push
push
lea
push
push
call
jmp
xbegin
add
mov
pushf
add
pop
mov
add
add
popf
call
ljmp
roll
add
nop
fisubrl
add
add
jo
cmpsb
jl
add
add
jge
cmpsb
add
add
lea
add
jnp
push
pop
add
add
and
leave
je
mov
add
push
push
push
push
push
push
call
rcr
rol
add
push
add
filds
ja
aam
mov
jno
add
jne
test
lods
test
add
add
add
fs
mov
add
scas
stos
popf
push
add
add
cmpb
add
add
add
add
cmc
roll
add
into
add
clc
xchg
add
add
pusha
add
pop
add
rep
pop
push
push
push
xor
add
shr
sub
sub
shr
sub
pop
xor
ror
pop
push
add
not
ror
lea
pop
pop
push
shr
shr
pop
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
cltd
add
add
xchg
js
clc
add
mov
mov
les
push
add
push
add
add
stc
mov
add
xchg
add
add
fnsave
add
popa
mov
imul
fiadds
push
push
loop
mov
add
pusha
add
scas
add
jle
fistl
add
lahf
add
add
ja
insb
mov
je
add
push
jge
scas
add
movsb
mov
lea
pop
mov
mov
push
dec
add
rol
add
pop
jmp
push
mov
push
push
lea
push
call
jle
add
jnp
add
test
add
add
shll
add
cltd
add
add
xorb
roll
add
add
lahf
fisubrs
add
les
mov
loopne
mov
lods
add
add
add
add
bound
negl
mov
out
mov
lea
pop
add
push
dec
pop
push
push
push
push
push
push
push
lea
push
call
mov
gs
cmpsl
cli
push
mov
mov
add
insb
mov
push
mov
add
add
mov
fdiv
flds
rol
add
lds
add
test
jne
les
add
fxch
in
jl
xchg
gs
add
fdivrl
add
rcr
mov
add
mov
rolb
add
rolb
xchg
popa
push
add
cld
lea
pop
push
push
push
push
push
push
call
test
lahf
pop
add
xchg
movsl
fnstsw
add
pop
mov
add
add
iret
ret
jae
pop
mov
push
add
push
mov
add
jnp
add
fmuls
add
stos
cmpsl
jl
add
add
stos
add
pushf
cmpsb
mov
js
lds
cmc
fiaddl
movsb
xchg
xchg
fwait
add
lea
pop
mov
push
lea
push
call
pop
add
imul
in
add
mov
mov
aad
fcmovnu
cmc
js
xlat
add
sahf
mov
mov
leave
pushf
fwait
add
add
cwtl
pop
xchg
mov
flds
fndisi(8087
add
add
mov
add
add
out
ja
mov
arpl
ret
int3
lea
pop
pop
push
ror
not
pop
pop
push
lea
push
call
js
add
insb
adcb
add
fwait
in
xchg
add
mov
add
add
fcompl
divl
add
mov
mov
add
outsl
movsb
add
add
add
js
add
movl
movl
xchg
test
pop
add
mov
add
lea
pop
pop
push
push
push
push
push
call
ja
add
add
add
add
out
mov
aad
xchg
icebp
ljmp
pop
mul
add
test
mov
iret
jno
add
add
add
push
std
mov
add
ficoms
xchg
pushf
add
add
add
add
enter
out
sahf
add
subl
add
push
push
add
pop
shrl
stos
add
nop
gs
lea
pop
pop
leave
ret
push
not
add
pop
push
mov
push
shl
pop
add
push
push
push
push
push
push
push
call
enter
add
test
add
add
add
mov
jae
push
add
scas
jb
add
in
in
loope
add
mov
movsb
add
loop
movsl
loop
std
add
test
add
pop
addb
add
xchg
aam
add
add
test
pop
fldl
add
add
jb
jo
cld
lea
pop
push
push
push
push
lea
push
push
call
bound
mov
add
les
jo
fildl
add
incb
cltd
fildl
add
xchg
mov
jb
mov
out
cld
mov
pop
add
jmp
lret
sti
test
jle
add
jb
test
pop
pop
push
test
xchg
xchg
pop
iret
push
add
sahf
loopne
cmpsb
in
add
add
add
gs
mov
frstor
lock
std
mov
lea
pop
push
movl
addl
push
push
push
push
push
push
push
push
push
call
lret
jae
mov
jnp
pushf
lret
mov
jne
add
ret
stos
pop
mov
clc
sti
vpmovmskb
add
jecxz
shl
pushf
icebp
rcrb
hlt
jo
add
add
add
add
mov
add
mov
imul
pop
pop
add
xchg
fs
add
push
test
fdivs
add
lcall
test
je
mov
pop
push
shl
not
pop
pop
pop
push
push
push
call
add
jmp
jecxz
mov
arpl
jecxz
mov
leave
cltd
mov
fadds
ret
add
jnp
add
out
cld
les
mov
mov
popl
add
add
fwait
arpl
add
test
push
add
mov
cmc
pop
mov
imul
add
cmc
add
jb
rolb
gs
rolb
add
lret
add
fistpl
add
pop
pop
leave
push
ror
xor
sub
pop
ret
push
mov
push
push
lea
push
push
push
lea
push
push
push
call
jns
stos
mov
cli
push
faddl
addb
rolb
add
add
add
add
addl
add
sti
add
pop
jbe
movsl
add
add
scas
pop
add
test
fists
outsl
mov
xchg
mov
out
add
mov
loope
mov
add
mov
add
lds
fmull
cld
push
rol
xor
pop
push
push
push
sub
pop
push
push
push
ror
inc
shr
pop
testl
push
dec
shr
sub
add
pop
addl
push
call
push
shl
ror
add
pop
mov
push
pop
pushl
push
push
shl
ror
dec
pop
push
push
rol
pop
call
cmpl
jne
push
sub
sub
dec
pop
pop
pop
push
lea
push
call
scas
jb
movsb
pushf
lcall
fdivrs
add
add
mov
fstps
iret
fildl
loopne
lock
cld
add
mov
add
add
add
in
push
mov
add
jmp
pop
add
in
add
push
ror
add
scas
add
jle
add
pop
movl
mov
add
add
jp
shrb
fmull
push
inc
pop
pop
leave
ret
push
add
xor
pop
push
mov
add
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
add
pushf
bound
popl
mov
movl
add
add
add
fsubl
add
pop
ljmp
addb
popa
cmp
add
imul
pop
push
mov
add
lahf
add
stc
add
add
jecxz
cmpsb
add
mov
test
add
clc
mov
lea
pop
push
push
sub
sub
pop
push
push
not
add
dec
pop
push
push
lea
push
push
push
push
call
enter
add
test
add
scas
icebp
fcoms
cmpsb
add
pop
jl
add
add
cmc
push
add
mov
pusha
lock
add
mov
add
jl
add
cmc
fdivr
fwait
add
pusha
int3
enter
add
cmpsl
imul
xchg
movsb
mov
add
fisubrl
jno
add
mov
loopne
add
mov
ljmp
add
pop
push
push
push
call
add
jo
mov
push
data16
add
jnp
add
clc
in
mov
clc
mov
add
iret
mov
icebp
fs
add
add
add
add
add
add
sub
add
scas
in
push
add
popl
std
add
add
mov
add
addb
mov
xchg
mov
jno
add
lea
pop
movl
push
push
push
push
push
push
push
call
shl
add
fildll
lcall
mov
pop
pop
mov
mov
loope
add
je
add
mov
bound
push
push
mov
add
popl
add
add
pop
add
add
fwait
add
mov
push
add
mov
add
add
add
add
fucompp
lds
loopne
clc
add
add
mov
add
mov
sbb
mov
call
lea
push
push
push
call
addb
add
mov
add
add
lret
add
je
mov
je
add
add
stos
add
lods
into
push
cmc
in
iret
add
popf
xlat
jmp
add
add
jge
push
mov
add
stos
in
add
push
hlt
push
add
add
shl
in
pusha
lock
jle
add
pop
push
call
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
add
sti
mulb
fwait
add
lcall
add
movb
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
movsl
aam
add
add
cld
fsubs
add
add
pop
sti
lret
stos
scas
mov
add
js
mov
mov
xchg
add
out
cmpsl
xchg
lea
pop
subl
cmpl
jne
pop
push
add
rol
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
jecxz
add
mov
xorl
lods
icebp
lcall
add
add
inc
add
faddp
popa
xchg
stc
xchg
add
data16
clc
mov
movsb
fdivr
cltd
insb
jbe
add
mov
int3
add
add
cmc
vshufps
pop
pushf
outsl
test
lret
pusha
push
clc
xlat
jns
add
mov
lea
pop
pop
push
sub
sub
add
pop
pop
push
lea
add
add
add
pop
leave
ret
push
shl
pop
push
mov
add
push
dec
sub
pop
push
push
push
push
inc
xor
sub
pop
push
push
push
push
call
aam
cwtl
cmc
clc
in
ror
add
mov
loop
rcrb
cmpsl
jns
pop
shlb
add
add
add
test
movl
jnp
pop
add
out
test
add
fimull
stc
add
lods
add
mov
cld
add
loop
mov
add
jl
out
pushf
xchg
movsb
xchg
add
sti
movsl
xchg
add
add
mov
loope
outsl
mov
mov
lea
pop
mov
push
lea
push
push
push
call
jmp
xchg
test
in
les
add
xorb
add
add
add
data16
test
push
add
fisubl
add
add
xchg
lcall
pop
add
add
addl
add
jb
mov
add
jecxz
mov
fistl
mov
lea
pop
lea
push
push
lea
push
push
push
push
push
push
call
aad
add
les
movsb
add
movl
fld
js
mov
sbb
mov
add
push
add
clc
mov
lock
jp
push
hlt
add
iret
add
push
movsl
insb
incb
jae
add
add
lret
rcl
into
jp
rolb
add
enter
add
add
add
test
mov
fs
add
add
pop
sub
mov
push
add
pop
shr
add
push
lea
push
push
lea
push
lea
push
push
call
add
cmpsb
outsl
std
test
add
test
cmpl
loopne
add
in
fldl
ja
add
outsl
lods
into
mov
call
add
js
jns
int3
fwait
mov
jns
testb
out
add
add
add
mov
mov
pop
test
add
test
add
out
rolb
scas
notb
sbb
inc
cld
mov
push
push
push
push
push
push
push
push
call
add
imul
jne
xlat
lock
xchg
pop
xchg
add
add
add
mov
add
test
mov
add
xchg
mov
add
rcl
push
add
enter
lahf
add
jns
mov
add
xchg
add
iret
xchg
push
add
add
data16
jnp
add
roll
call
popa
scas
add
mov
mov
lea
pop
add
push
push
push
push
push
call
xchg
add
lea
jae
add
cld
push
ja
xchg
jp
jnp
push
stos
iret
out
fidivrl
hlt
add
mov
mov
xchg
fwait
cwtl
cmpsb
jle
in
call
jbe
jnp
mov
mov
add
test
add
push
pop
mov
clc
add
scas
add
insb
add
add
call
lods
jle
clc
xchg
subb
mov
add
mov
in
add
pop
add
mov
push
xor
xor
pop
mov
cmp
jne
cmp
jne
push
ror
shl
add
add
pop
mov
movl
push
add
ror
pop
jmp
mov
push
push
push
push
push
push
push
push
push
push
call
add
nop
xchg
lret
data16
les
int3
jns
fadds
xchg
lret
add
add
add
add
add
fnstenv
fildll
add
xchg
fldl
add
add
mov
jo
jns
push
add
add
add
add
lret
in
test
add
jno
pushf
stos
in
je
test
add
lock
add
int
sar
mov
xchg
pop
jge
cmpsl
add
movsl
rolb
mov
fmull
push
or
pop
push
push
lea
push
push
lea
push
call
xchg
add
pushf
jne
mov
out
add
mov
xlat
not
add
add
rclb
adcl
aam
mov
int
adcl
jl
pop
add
lcall
push
popa
add
add
add
mov
add
int
add
lret
add
movsb
lret
pop
add
mov
iret
mov
add
add
mov
lea
pop
sub
jne
mov
movl
push
add
dec
pop
jmp
mov
push
shl
not
pop
mov
cmp
jne
mov
push
add
add
pop
movl
push
xor
pop
jmp
mov
push
xor
not
sub
pop
cmpw
jne
mov
push
lea
push
push
push
push
push
lea
push
lea
push
call
clc
add
add
scas
add
mov
add
add
fsubrp
add
add
roll
add
fldl
add
lahf
mov
les
add
shl
jmp
arpl
mov
add
add
pop
add
mov
jo
mov
add
add
rolb
leave
add
jne
add
movsb
add
fisubl
popa
lock
int
test
add
pop
movl
jmp
pushl
push
lea
push
push
push
push
push
push
call
mov
xchg
add
ja
bound
add
mov
mov
leave
cmpb
add
pusha
add
add
mov
mov
add
cltd
add
test
xchg
mov
add
add
jo
bound
add
loopne
mov
ret
jns
pusha
add
in
mov
pusha
mov
les
add
fmull
mov
push
push
push
push
push
push
call
push
flds
pop
ljmp
jl
aad
test
mov
add
shrl
rcr
pop
add
add
scas
mov
mov
add
add
jne
jno
stos
pushf
mov
bound
mov
loopne
add
fwait
add
xchg
mov
les
and
add
add
out
pusha
out
add
outsl
mov
lea
pop
mov
push
not
ror
pop
mov
push
push
add
add
ror
push
and
add
sub
sub
lea
pop
add
pop
push
push
xor
sub
pop
call
push
rol
pop
cmpl
je
push
push
inc
shl
push
and
add
shr
rol
lea
sub
rol
xor
shl
pop
inc
pop
push
inc
sub
pop
push
push
lea
pop
call
push
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
test
shll
cli
add
addl
in
add
add
add
rolb
add
add
jl
test
out
fisttpll
add
in
lcall
cld
push
add
jno
mov
iret
push
jl
add
add
iret
mov
add
add
mov
lea
pop
cmpl
je
push
push
xor
inc
not
push
push
pop
add
ror
sub
lea
shr
pop
shr
pop
push
sub
sub
pop
push
call
cmpl
je
push
push
add
push
push
pop
add
ror
sub
shr
pop
dec
inc
inc
shl
pop
push
xor
shr
not
pop
push
push
push
call
test
add
add
push
je
mov
fldl
add
pusha
add
into
jno
xchg
add
ja
mov
out
push
add
mov
in
movsb
shlb
add
add
popf
push
mov
loopne
fldl
mov
lock
xchg
data16
add
shlb
add
je
mov
add
out
out
cltd
mov
jne
loop
push
push
add
add
mov
pop
addl
lods
add
out
rol
in
outsl
fiadds
add
mov
lea
pop
call
cmpl
je
push
push
add
push
push
pop
add
ror
not
dec
sub
shr
pop
not
lea
add
dec
pop
push
dec
pop
push
push
push
call
arpl
add
jp
call
add
add
add
addr16
imul
jl
add
add
enter
add
roll
pop
imul
mov
cwtl
call
add
cli
add
clc
mov
xlat
add
add
add
popa
lret
shlb
mov
add
add
aad
hlt
mov
lea
pop
call
cmpl
je
push
push
xor
inc
push
sub
add
lea
sub
sub
sub
pop
dec
lea
pop
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
fsubrs
add
ror
mov
xchg
subl
xchg
clc
flds
jmp
add
mov
add
jp
cltd
addb
xorb
jge
into
add
add
xchg
add
add
add
mov
pop
add
rcr
jae
stos
mulb
add
xchg
xchg
imul
mov
mov
fldcw
mov
std
je
mov
lea
pop
push
call
cmpl
je
push
push
xor
add
ror
push
sub
add
ror
ror
sub
add
inc
pop
rol
pop
push
dec
add
not
pop
push
call
cmpl
je
push
push
dec
not
sub
push
or
not
add
shr
inc
shr
sub
dec
add
pop
add
shl
sub
pop
push
lea
push
lea
push
push
lea
push
call
jb
add
add
rolb
lods
add
pop
push
cmc
cltd
cld
fldt
pop
xchg
roll
add
test
test
pop
ja
add
add
fiaddl
fwait
sarb
movsb
fildl
js
add
add
mov
add
add
cmpb
nop
mov
popf
lret
jo
pop
add
add
add
add
ljmp
roll
xchg
add
in
jge
mov
lea
pop
push
push
push
push
push
call
mov
mov
pop
add
test
cmc
jnp
add
call
outsl
pop
gs
mov
add
pushf
add
clc
add
add
mov
mov
add
mov
movsl
push
add
hlt
add
add
rcrl
pop
add
mov
pusha
xchg
jbe
add
add
pop
call
push
xor
pop
cmpl
je
push
push
inc
sub
add
dec
push
and
add
dec
sub
shl
lea
shl
pop
add
rol
pop
push
inc
dec
pop
push
push
push
lea
push
push
push
lea
push
push
call
filds
add
xchg
popa
add
scas
fildl
xchg
add
add
mov
cmc
pop
push
arpl
js
addl
pop
fbld
add
jae
add
fwait
add
push
stc
out
jbe
rclb
lahf
add
incb
imul
mov
add
fisttpll
in
cmc
pop
add
cmpsl
add
add
mov
lea
pop
call
push
push
push
call
add
add
mov
push
icebp
stos
addl
lret
add
add
imul
test
int
incb
push
mov
mov
add
mov
push
add
add
add
loop
add
add
mov
add
xchg
out
loope
pop
add
add
add
push
push
push
nop
jno
popf
lds
bound
cmpl
je
push
push
add
push
or
not
add
sub
not
pop
dec
add
pop
push
push
lea
push
lea
push
push
push
lea
push
call
add
popa
push
push
push
data16
add
jmp
mov
add
add
into
add
add
test
add
push
clc
add
cmpsl
pop
fdivrl
roll
jne
add
pop
add
ret
add
popf
add
std
cltd
mov
mov
mov
jae
loopne
popf
xchg
in
andl
add
pop
add
jae
lock
lods
mov
add
add
mov
loopne
push
ljmp
sbb
push
push
push
push
push
lea
push
push
lea
push
push
call
add
xchg
add
add
add
mov
push
xchg
add
add
add
push
add
movsl
lret
add
add
add
add
out
out
xchg
in
push
jne
cwtl
rcll
mov
add
mulb
push
mov
js
icebp
fmul
fstps
addr16
add
add
pop
xlat
mov
add
fmull
sbb
add
cmpl
je
push
push
inc
not
shl
shr
push
xor
add
sub
rol
rol
sub
not
sub
pop
shl
shl
pop
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
add
jge
add
mov
shl
cld
cld
mov
jecxz
fwait
lods
lds
add
out
scas
pushf
add
mov
push
cmpb
addb
cwtl
push
pop
and
mov
mov
cwtl
mov
add
shll
push
add
add
pop
add
add
iret
add
test
test
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
pushf
cwtl
add
mov
pop
add
add
jge
add
jb
add
add
jb
arpl
addb
mov
add
fwait
xchg
cwtl
out
xchg
xchg
icebp
movsl
add
add
aad
add
clc
std
in
add
push
add
xchg
mov
ja
add
add
roll
mov
aam
bound
pop
call
cmpl
je
push
push
shr
push
sub
add
sub
sub
ror
sub
dec
shr
pop
ror
pop
push
push
push
push
push
call
mov
add
ret
add
iret
add
add
add
addb
add
add
jo
add
stc
add
out
lea
add
enter
add
add
cli
lret
add
add
in
sbb
add
jae
js
loopne
arpl
add
add
add
loopne
mov
int3
lea
pop
push
push
push
push
lea
push
push
push
call
fiadds
insb
push
out
mov
add
xchg
in
jle
add
mov
leave
add
add
add
pop
test
mov
jmp
fs
mov
add
stc
add
add
add
out
test
mov
xchg
add
mov
add
nop
mov
ret
add
add
add
add
push
add
add
clc
mov
lea
pop
call
cmpl
je
push
push
not
push
or
inc
add
add
add
rol
sub
sub
pop
xor
rol
pop
push
push
push
lea
push
lea
push
call
pop
add
add
pop
lret
add
mov
jnp
jbe
xchg
add
pop
add
jne
pop
add
fs
rol
add
add
imul
jmp
icebp
add
mov
add
call
loope
arpl
mov
jo
testl
loop
js
imul
call
mov
lea
pop
push
push
lea
push
push
push
push
push
push
call
fwait
rolb
add
cli
add
add
add
add
push
lods
pusha
mov
add
test
add
add
mov
xchg
push
stos
test
fwait
push
mov
repnz
sahf
in
jp
fldl
xchg
add
add
ffree
jmp
add
add
faddl
xlat
addl
add
mov
pop
int3
add
add
push
jne
hlt
lea
pop
call
push
push
push
push
call
jl
add
rcl
jecxz
add
addl
ja
sti
cli
loop
lret
fadd
add
jae
nop
add
stc
xchg
cli
mov
sarb
in
pop
lcall
add
add
out
add
int
pop
jb
stos
add
add
jge
xorl
testl
cmpsb
pop
push
faddp
aad
test
mov
jnp
mov
cld
lea
pop
cmpl
jne
push
add
shl
pop
mov
push
push
push
call
add
lds
add
ja
mov
loopne
xlat
leave
mov
sti
pop
add
add
add
add
hlt
push
add
xchg
lahf
add
add
add
pop
mov
add
add
xchg
lock
mov
add
stc
jnp
test
add
mov
add
aad
add
add
add
data16
add
add
fistpll
mov
lea
pop
movl
push
ror
pop
jmp
xor
push
push
push
push
push
push
push
push
call
push
rolb
shll
add
add
nop
icebp
imul
fldl
mov
add
popf
movsl
add
xchg
add
add
add
add
mov
testb
add
mov
pop
add
clc
mov
push
out
add
div
repnz
add
jae
add
mov
push
add
cli
push
xchg
add
fmull
pop
push
push
call
add
add
out
imul
out
add
add
xchg
mov
mov
int3
xchg
mov
mov
fnsave
mov
mov
lock
into
imul
mov
jle
xlat
add
sahf
stc
lret
mov
lahf
xchg
mov
add
fistpll
push
mov
rcll
cltd
add
lea
pop
pop
push
dec
not
not
pop
pop
leave
push
push
push
push
lea
push
push
push
call
add
add
add
rclb
add
pusha
add
add
mov
jmp
out
cmpsl
add
xchg
mov
test
add
add
mov
imul
xchg
add
xchg
adcl
add
repnz
loop
add
add
pop
aad
iret
mov
add
sbb
ret
push
push
xor
sub
pop
mov
push
xor
pop
add
cmpl
jne
push
push
add
push
or
not
add
xor
shr
sub
ror
shl
pop
shr
add
dec
pop
push
dec
pop
pushl
push
add
shr
pop
call
push
call
push
shr
pop
jmp
cmpl
je
cmpl
jne
push
push
lea
push
push
push
push
call
mov
add
fldl
add
out
test
mov
add
hlt
add
fiaddl
push
sbbb
scas
mov
fcmovnu
cmc
add
add
pop
add
roll
mov
add
mov
mov
loope
xchg
icebp
add
add
add
aam
movb
addr16
add
jl
jb
add
cmpsb
shlb
add
out
xor
cwtl
hlt
xlat
mov
roll
jae
les
push
xor
sub
pop
add
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
xchg
fcmovne
add
add
add
out
scas
cmpsb
mov
std
pusha
data16
fwait
imul
add
add
add
addr16
add
enter
rolb
add
add
cwtl
jge
add
add
into
add
jecxz
pop
add
xchg
js
mov
ror
add
roll
clc
nop
lret
popl
rcr
pushf
pop
add
pop
rcrl
bound
pop
pop
pop
leave
push
xor
pop
add
push
ror
pop
ret
jmp
push
push
lea
push
push
call
push
add
out
add
add
add
imul
jo
out
add
add
test
add
in
add
mov
add
add
pop
mov
jl
clc
push
data16
pop
add
mov
mov
add
mov
jns
nop
mov
nop
scas
les
iret
mov
out
mov
lea
pop
cmpl
jne
push
push
lea
add
push
or
inc
add
not
sub
add
sub
shr
pop
add
xor
pop
push
not
ror
pop
pushl
call
push
push
call
add
cwtl
add
mov
mov
add
add
adc
add
add
add
add
cwtl
add
leave
test
lock
addr16
add
add
mov
add
add
iret
mov
add
out
lds
jp
scas
add
jmp
sahf
mov
aad
andl
hlt
into
mov
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
call
push
mov
lds
add
add
mov
xchg
add
movsl
add
xchg
xchg
int
sub
add
hlt
add
frstor
fwait
add
push
jmp
jge
push
std
add
mov
add
add
add
add
mov
add
add
leave
addb
call
int3
lea
pop
call
push
push
push
call
jp
add
push
add
mov
jl
add
mov
add
js
pop
mov
add
loopne
loopne
out
add
out
mov
xchg
add
add
add
mov
add
jns
lret
gs
add
mov
add
leave
jmp
add
fldt
int3
lea
pop
jmp
push
sub
xor
pop
cmpl
jne
mov
push
add
shr
sub
pop
mov
push
push
push
sub
ror
shl
add
push
push
pop
add
inc
xor
sub
not
shr
pop
xor
sub
pop
push
lea
add
pop
pushl
call
call
push
push
not
rol
push
push
pop
add
sub
ror
rol
dec
sub
sub
sub
pop
shr
add
pop
push
not
pop
pushl
call
push
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
stos
add
icebp
add
aam
mov
push
add
cmpsl
stos
rcrb
arpl
pop
mov
mov
add
add
add
lahf
add
add
add
js
add
add
add
add
add
xchg
add
jne
add
jbe
stos
imul
add
add
jne
testl
jo
add
fxch
jbe
lret
rcr
bnd
aam
bound
pop
call
push
push
inc
ror
sub
shr
push
or
inc
add
rol
sub
inc
add
lea
pop
add
rol
sub
not
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
filds
add
aam
xchg
add
add
mov
add
movsb
add
testb
mov
rcr
mov
add
addl
mov
add
add
add
iret
lods
pop
cwtl
sar
mov
loop
add
lock
add
into
add
add
lcall
call
sarl
add
aam
jle
add
fimull
pop
pushl
push
xor
lea
sub
shl
pop
call
call
push
push
shl
add
push
or
inc
add
inc
dec
sub
lea
sub
pop
xor
pop
push
push
push
push
push
lea
push
push
call
push
add
mov
js
add
add
lret
fidivrl
call
clc
add
cli
loop
add
in
imul
add
ja
jno
add
ljmp
add
add
xchg
ficoml
in
jno
add
fisubrl
push
add
add
mov
call
add
mov
aam
bound
pushl
push
add
add
shr
pop
call
call
push
push
dec
shr
inc
push
or
not
add
xor
sub
shl
sub
ror
ror
dec
sub
pop
shl
shl
inc
lea
pop
push
push
call
xchg
roll
insb
add
add
lcall
add
mov
cld
mov
incb
leave
add
xchg
in
add
out
add
cmpsb
mov
imul
mov
push
jle
jge
popa
add
stc
lret
add
xorl
add
imul
mov
lea
pop
pushl
call
push
sub
pop
call
push
push
ror
dec
push
or
inc
add
lea
sub
shl
dec
pop
dec
shl
pop
pushl
push
push
push
push
push
push
lea
push
call
jbe
jle
mov
cli
add
scas
add
stos
xchg
jbe
repnz
pushf
push
add
add
xchg
add
scas
std
add
add
add
ret
mov
cmpsl
push
pop
xchg
shr
jl
mov
aam
add
add
sarl
stos
add
pop
stos
lods
add
rcr
add
add
mov
lea
pop
call
push
push
call
add
pop
int
mov
add
ret
add
imul
mov
aam
add
imul
lahf
fadds
add
sti
xchg
add
lcall
addl
add
lret
lcall
lods
shll
mov
fmulp
mov
in
scas
int3
add
add
add
add
xchg
add
popf
fiaddl
add
mov
jge
les
shrb
insl
mov
push
shr
xor
sub
xor
push
or
inc
add
inc
add
sub
ror
rol
pop
sub
pop
push
add
add
shr
pop
pushl
push
inc
pop
call
push
sub
shl
sub
inc
pop
call
push
push
add
shl
push
or
inc
add
not
sub
shr
sub
pop
sub
pop
push
add
sub
pop
pushl
push
push
push
call
addl
add
aam
xchg
leave
add
rcr
xchg
int
pusha
loop
add
sarl
test
add
jnp
add
arpl
pop
push
add
bound
add
roll
add
add
fnstsw
jae
add
mov
jae
jns
loopne
add
mov
scas
add
stos
fcmovnb
add
mov
lret
mov
pop
enter
bound
call
call
push
push
dec
add
push
push
pop
add
shl
shl
sub
add
sub
pop
rol
add
pop
push
push
push
push
push
push
push
call
add
ljmp
call
data16
add
add
mov
add
add
data16
cmpsl
arpl
mov
addl
xorb
add
cltd
bound
scas
in
mov
stos
add
xchg
add
sti
add
add
out
fcoms
add
add
jo
cmpsb
add
cmpsb
mov
add
pop
pushl
call
push
dec
pop
call
push
push
push
sub
add
inc
sub
sub
inc
rol
inc
pop
shl
pop
push
ror
sub
pop
pushl
push
push
push
push
call
add
jge
mov
call
add
add
mov
add
push
add
add
rclb
add
add
leave
lcall
iret
je
mov
enter
test
outsl
add
addb
add
rolb
mov
cmpsl
js
test
repnz
mov
add
add
mov
add
add
fmull
dec
daa
add
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
shlb
outsl
mov
mov
testb
add
add
addl
scas
shll
std
popf
stc
in
xchg
insb
stc
add
into
iret
stos
int
push
xchg
add
jae
fbstp
stos
add
xchg
add
add
add
jge
pop
xchg
add
add
mov
add
lea
pop
call
push
push
push
or
inc
add
rol
sub
dec
inc
xor
pop
inc
pop
push
sub
rol
pop
pushl
push
push
push
push
lea
push
call
std
mov
xlat
lock
add
fcomip
scas
jmp
push
push
add
mov
cmpsl
jbe
adcb
int
add
rorl
fildl
add
xchg
jecxz
add
test
add
add
aam
imul
xchg
mov
add
add
add
add
mov
mov
loop
add
fldl
add
add
pop
mov
push
add
add
jno
adc
sahf
cmpsb
xchg
add
push
mov
lea
pop
call
push
call
push
push
xor
inc
sub
push
and
add
shl
shl
shr
sub
xor
pop
lea
shl
xor
pop
push
inc
xor
inc
pop
pushl
call
call
push
push
xor
inc
push
and
add
lea
sub
ror
not
inc
xor
pop
add
xor
shl
shl
pop
push
shr
pop
pushl
call
call
push
push
shr
xor
push
or
inc
add
ror
sub
dec
pop
sub
shl
not
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
stos
add
mov
add
shrl
pushf
push
add
rolb
hlt
jle
add
add
push
mov
lods
mov
push
mov
test
movb
in
add
add
mov
add
mov
rolb
pop
roll
add
add
add
mov
xchg
imul
int3
lea
pop
pushl
push
rol
sub
pop
call
call
lea
push
push
ror
push
or
inc
add
rol
add
xor
sub
sub
pop
sub
shr
pop
push
push
call
mov
jmp
mov
pop
iret
fwait
add
add
add
jb
test
add
mov
add
mov
add
add
fsts
add
cwtl
in
add
lods
add
stos
rolb
add
loope
shr
jge
jnp
add
push
int
add
imul
add
add
jbe
add
push
add
add
fisttps
pop
pushl
call
push
push
shl
add
pop
call
push
push
rol
push
or
not
add
ror
sub
sub
add
pop
ror
sub
pop
push
push
call
ljmp
add
add
test
add
movsb
ljmp
pop
add
movb
xlat
movsb
add
test
add
negb
adcl
add
arpl
jmp
add
add
push
int3
add
add
add
je
jae
je
arpl
cltd
cwtl
addr16
mov
add
pop
add
add
int
add
cltd
mov
lea
pop
pushl
call
call
push
dec
dec
pop
mov
push
push
add
push
and
add
shl
sub
sub
lea
rol
add
pop
shl
sub
shr
inc
pop
push
lea
push
push
push
push
lea
push
lea
push
call
add
lods
loopne
jl
ja
add
subl
in
add
mov
push
add
push
jbe
add
push
add
ret
xchg
add
data16
rolb
rolb
add
test
fiadds
add
push
mov
add
into
xchg
add
add
add
add
add
pop
pushl
push
lea
shl
not
pop
call
push
call
push
push
shr
ror
lea
add
push
xor
add
sub
sub
rol
sub
lea
rol
pop
rol
shr
sub
pop
push
push
push
push
push
push
lea
push
call
jno
pop
add
sti
in
add
lcall
add
pop
mov
xchg
mov
add
push
jns
add
add
sti
fwait
int
imul
out
in
call
add
mov
add
cwtl
add
flds
mov
add
pop
pushl
push
push
push
push
call
stc
lods
add
add
add
add
ret
imul
push
mov
add
add
push
add
mov
pusha
loope
ret
push
lret
add
lock
lret
push
add
add
decb
add
nop
add
add
add
cltd
push
imul
add
add
xchg
add
add
mov
lea
pop
call
push
push
push
push
lea
push
push
call
lea
testl
into
add
sahf
movsb
mov
in
add
mov
add
call
pusha
add
add
jge
add
int3
sti
out
add
jb
add
add
add
add
mov
jb
add
aam
clc
add
add
jl
addr16
add
add
mov
lea
pop
pushl
call
push
push
lea
sub
push
sub
add
add
add
sub
dec
shr
pop
ror
lea
pop
push
lea
push
lea
push
push
push
push
push
push
call
lds
add
add
mov
add
xlat
add
add
mov
movsb
popf
fnsave
add
xchg
gs
cmpsb
shrb
xchg
add
add
add
push
test
call
xchg
data16
adcl
in
mov
mov
pop
fisubrl
int3
mov
add
lea
pop
pushl
push
push
push
push
call
out
iret
add
add
div
iret
push
bound
fstpt
incb
negl
add
add
xchg
call
popa
sbbl
add
jo
jo
pop
add
mov
add
loopne
subl
push
add
pop
gs
jnp
test
cld
jle
orb
cmc
mov
imul
pop
add
pusha
mov
pusha
adc
call
mov
ror
push
or
not
add
add
ror
add
sub
ror
ror
inc
pop
sub
dec
sub
sub
pop
push
push
ror
push
push
pop
add
shl
sub
xor
add
rol
pop
pop
push
push
push
push
push
call
push
testl
xchg
add
mov
mov
add
add
fidivrl
movsl
out
add
fistpl
xchg
jne
add
in
int3
pop
rolb
rcrb
pop
add
add
add
shr
rol
add
add
imul
cwtl
jae
add
add
add
roll
lds
mov
sbbb
fmull
rclb
mov
push
push
call
ret
xchg
std
push
add
jmp
mov
andl
add
add
lcall
movsb
aad
out
add
add
add
mov
lods
add
add
xchg
add
add
mov
scas
data16
xchg
icebp
mov
cmpsb
testb
addr16
test
add
in
je
xlat
add
mov
int3
lea
pop
pop
push
sub
not
pop
dec
jne
push
shr
pop
jmp
call
push
push
shr
ror
push
xor
add
shr
add
rol
sub
lea
shl
not
pop
xor
xor
shr
pop
push
push
push
push
push
push
push
push
call
add
test
aad
add
add
mov
iret
push
add
mov
sarb
lds
in
faddl
mov
add
jb
les
add
jno
fsubs
data16
int
mov
nop
add
subb
mov
fiaddl
mov
movsl
add
pop
add
ret
jmp
xchg
sahf
push
insb
add
les
push
mov
lea
pop
pushl
call
push
add
add
pop
push
push
lea
ror
pop
call
push
not
shr
pop
mov
push
shl
not
sub
pop
lea
push
push
lea
push
and
add
sub
pop
dec
pop
push
pop
pushl
push
sub
dec
sub
shr
pop
call
push
push
lea
push
lea
push
push
push
call
add
jle
add
add
add
push
enter
movl
xchg
xchg
add
addr16
pop
ftst
add
jle
add
pop
add
sarl
mov
rolb
add
add
loope
repnz
add
add
arpl
mov
data16
mul
add
add
pop
push
call
push
push
ror
lea
push
push
pop
add
add
sub
sub
pop
sub
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
popa
mov
mov
mov
mov
lods
movsl
add
test
fstps
lea
add
add
fisubrs
add
add
flds
andl
xchg
pop
add
add
add
les
add
add
add
add
lret
xchg
nop
mov
outsl
mov
mov
lea
pop
pushl
push
lea
push
push
lea
push
call
add
ror
add
movsl
push
jmp
add
fwait
push
fsubrs
add
test
mov
addb
int
lret
add
lds
add
cmpsl
mov
cmc
mov
mov
add
pop
add
xchg
test
add
jmp
orb
add
add
lds
mov
lea
pop
call
push
lea
push
lea
push
push
push
lea
push
push
push
call
nop
in
add
add
xchg
iret
fdivr
add
xchg
les
xchg
pushf
add
add
out
add
add
mov
divb
xlat
mov
in
push
test
add
les
scas
add
add
mov
add
add
add
testl
cmc
jp
add
shr
add
and
rorb
and
ljmp
xorl
push
ror
sub
rol
push
sub
add
xor
rol
rol
sub
pop
ror
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
data16
jl
fisubrl
fistpll
lret
clc
add
add
add
add
add
push
add
in
add
add
xchg
xchg
flds
mov
nop
add
add
add
mov
add
iret
add
lcall
xchg
add
fwait
out
mov
lea
pop
pushl
push
push
push
push
call
ljmp
cltd
add
leave
xchg
test
test
mov
ret
add
add
jl
ja
add
xchg
test
add
add
mov
jmp
aad
cld
std
in
add
add
add
add
add
mov
addb
add
nop
add
gs
add
add
add
lea
pop
call
lea
push
push
push
call
add
mov
add
add
jnp
add
add
movsl
push
add
ljmp
popl
add
nop
pop
pop
add
add
out
add
add
add
pop
add
add
add
add
cld
pop
add
add
add
stc
jns
stc
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
js
add
stos
add
add
pop
nop
rcrl
je
add
pusha
jmp
add
flds
mov
pop
add
cmpl
add
jne
out
test
mov
push
ret
stos
js
js
jmp
add
jp
add
rcrl
xlat
add
mov
shrl
les
jne
push
push
lea
inc
push
push
pop
add
dec
sub
sub
dec
not
pop
pop
push
add
rol
lea
pop
push
push
inc
inc
pop
call
push
push
shr
push
or
not
add
inc
lea
ror
sub
sub
sub
shr
lea
add
pop
xor
shl
pop
pushl
push
push
push
push
push
push
push
lea
push
push
call
jnp
add
push
add
fisttpll
jo
add
pop
mov
add
mov
add
add
add
add
in
fiaddl
mov
cwtl
imull
int
iret
xchg
lock
add
jnp
add
add
mov
add
cli
mov
mov
mov
fldl
leave
imul
add
insb
lods
pop
mov
lea
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
addb
out
jp
hlt
pop
stos
xchg
out
add
cmc
mov
aad
scas
xchg
mov
jp
scas
add
clc
scas
jmp
add
add
add
ja
jo
jl
stos
bound
add
mov
outsl
repnz
push
lret
int
add
xlat
lods
js
rcrb
pop
loop
jae
loope
jecxz
add
cmpsb
jne
push
jns
nop
nop
mov
imul
stos
fs
lea
pop
push
call
push
push
push
xor
add
not
sub
inc
xor
pop
shr
pop
push
sub
pop
pushl
call
call
push
push
push
push
lea
push
push
lea
push
push
call
rolb
loope
jbe
jbe
clc
add
lcall
add
out
xlat
out
out
add
add
add
add
movb
mov
add
addb
rcrb
add
add
pushf
add
repnz
xchg
xlat
jle
cltd
push
arpl
fwait
add
xchg
add
add
mov
add
push
add
mov
xchg
mov
lea
pop
jmp
push
shl
sub
inc
pop
pushl
push
ror
add
shr
pop
mov
push
push
lea
push
push
push
push
lea
push
push
call
cmpsl
movb
jnp
add
add
insb
add
loopne
loopne
add
mov
insb
add
int
add
hlt
into
add
hlt
jp
mov
gs
arpl
popf
add
out
add
in
add
test
mov
add
jle
add
add
pop
sub
mov
add
lahf
xchg
testl
lea
pop
jmp
push
push
push
and
add
dec
xor
sub
sub
shl
pop
rol
inc
pop
push
sub
pop
pushl
push
shl
sub
pop
call
push
push
lea
push
lea
push
push
push
push
push
push
call
out
add
add
pop
mov
add
cmpsl
push
jno
add
mov
add
repnz
xchg
add
add
pop
pop
xlat
arpl
mov
add
pop
mov
popa
vmaxsd
add
jae
add
mov
data16
pushf
add
mov
add
ljmp
add
add
cld
mov
lea
pop
push
push
push
push
push
call
add
loop
jmp
add
mov
imul
add
cltd
add
out
out
add
movsl
mov
cwtl
out
xchg
rcr
roll
ljmp
add
mov
iret
pushf
add
cmpsl
int3
jmp
mov
out
mov
add
xchg
push
loopne
clc
rolb
cmpsl
add
mov
add
imul
fwait
repnz
push
out
hlt
lea
pop
call
push
push
inc
ror
push
or
not
add
shl
sub
ror
inc
pop
sub
xor
pop
push
shr
pop
pushl
call
push
push
dec
pop
call
leave
add
push
push
push
push
lea
push
push
call
arpl
shrb
add
lods
jo
lret
je
loop
test
lods
pop
add
add
jecxz
push
lcall
rolb
jnp
add
add
mov
fwait
xchg
xchg
mov
int
add
out
add
push
push
mov
add
add
add
jge
add
add
mov
lea
pop
pop
pop
push
rol
pop
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
call
je
pop
jl
in
push
stc
mov
mov
int3
sahf
sti
repnz
add
mov
jno
push
add
outsl
pushf
add
add
add
loop
add
sti
movsl
mov
subb
jno
lods
add
jbe
mov
add
add
add
fidivrl
cltd
add
add
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
call
pop
pop
mov
pushf
mov
test
mov
jae
int3
lret
repnz
lcall
add
lahf
add
add
add
cli
popf
mov
pop
mov
mov
pop
push
add
pusha
orb
lret
add
add
in
xchg
clc
add
jecxz
add
add
pop
leave
push
pop
add
ret
leave
push
push
push
call
lds
mov
mov
lret
out
xchg
add
rclb
add
cmc
add
add
add
lods
movsl
push
mov
add
mov
xchg
add
add
mov
in
loopne
fsubl
add
les
xchg
add
add
xchg
mov
les
or
push
push
push
lea
push
call
cld
add
add
add
lahf
popl
mov
add
add
add
mov
fmulp
mov
data16
xchg
mov
test
push
cwtl
cmpsb
add
mov
add
add
mov
in
add
cmpsl
mov
flds
pop
bound
mov
sti
mov
add
add
shll
add
pop
push
push
add
lea
pop
mov
cmpl
jne
push
ror
xor
shr
pop
mov
push
push
push
lea
push
push
call
rolb
jmp
mov
rolb
clc
add
add
push
add
add
jmp
mov
mov
add
mov
mov
scas
add
scas
mov
mov
add
loop
out
int
lret
add
fldl
movsb
popf
outsl
pop
pop
pop
mov
stc
jnp
add
xchg
add
add
add
add
test
add
xchg
add
add
add
popf
jge
add
mov
bound
jmp
push
sub
add
sub
pop
mov
push
add
pop
and
push
lea
sub
pop
xor
push
shl
add
dec
inc
pop
xor
push
push
lea
push
push
push
lea
push
call
test
mov
add
stos
add
jl
sti
add
xchg
jne
xchg
fs
aam
pop
mov
add
add
add
push
addb
add
test
add
int
nop
add
cld
add
jb
xchg
pop
add
add
jo
add
hlt
cli
cmpsl
add
fadds
lret
fstpl
jo
les
rolb
dec
decl
push
push
lea
push
call
add
add
incb
xchg
mov
jge
into
add
add
jno
out
sti
insb
add
mov
gs
add
add
add
add
jl
rcrl
insb
xchg
add
add
hlt
jmp
jecxz
mov
sbbb
cltd
add
out
lock
mov
add
mov
bound
pop
sub
push
lea
push
push
push
push
push
call
add
add
add
xlat
leave
add
add
mov
popf
add
add
jge
in
add
jp
jae
out
add
mov
jo
add
xchg
stos
add
add
add
enter
add
xchg
lods
pop
add
mov
add
mov
add
in
pusha
testl
add
push
add
add
push
ror
add
lret
ja
lock
mov
lea
pop
jmp
push
ror
not
pop
sub
push
lea
not
xor
inc
pop
pushl
pop
push
not
sub
pop
sub
cmp
jne
mov
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
mov
add
add
pop
out
add
xlat
in
push
fnstcw
jp
mov
add
add
fsubl
add
add
add
lahf
add
lret
xchg
add
jnp
hlt
xorb
mov
lret
push
add
testl
add
push
xchg
sarl
fsub
xchg
je
mov
data16
dec
cmp
push
push
push
push
push
push
call
shl
add
xchg
int3
mov
rolb
pusha
add
jb
add
clc
test
add
cli
xacquire
je
jbe
in
mov
xchg
test
clc
xchg
xchg
add
add
rcrl
pusha
xchg
aam
out
mov
add
clc
lcall
xchg
jecxz
pop
jae
mov
lods
add
add
mov
sbb
sub
mov
shr
push
pop
add
sub
push
lea
push
lea
push
push
push
call
fisubrs
add
fdivs
xchg
push
add
jmp
mov
cld
ja
add
cwtl
orl
mov
mov
fadds
add
mov
test
add
ret
add
andl
outsl
jno
test
add
mov
add
push
filds
add
add
add
jle
in
xchg
jmp
jno
leave
mov
lea
pop
pushl
push
sub
inc
pop
pop
shr
push
lea
push
push
lea
push
push
call
pusha
ficompl
mov
add
mov
sahf
add
cmc
push
jmp
stc
lods
lahf
rclb
jb
movsl
jl
mov
jne
add
pop
stc
add
add
ret
add
add
push
add
rolb
add
jns
test
add
mov
lret
mov
add
add
stc
mov
lea
pop
and
push
push
push
push
push
push
push
push
push
call
stc
insb
lea
add
in
out
add
mov
jl
add
ljmp
pop
test
add
add
lahf
jl
pusha
add
add
pop
push
add
mov
inc
push
imul
loop
add
add
add
adcb
add
shl
addr16
flds
gs
lea
pop
sub
push
ror
pop
cmp
jne
leave
ret
push
sub
not
not
pop
push
push
push
lea
push
call
negl
add
add
add
outsl
imul
add
lret
add
add
rol
shlb
stos
xchg
jmp
adc
add
add
add
ljmp
fsubrs
add
add
add
cli
int
jge
add
scas
mov
arpl
mov
add
int
mov
lea
pop
mov
push
lea
push
push
call
add
push
add
fsubp
roll
fbstp
add
add
add
mov
add
popf
bound
jl
popaw
push
cmpsb
add
cwtl
push
add
add
mov
mov
xchg
add
push
add
jp
jecxz
add
mov
mov
pop
push
jo
mov
enter
xlat
jnp
add
mov
imul
loopne
cld
lea
pop
add
push
lea
push
push
push
call
stos
add
add
mov
add
add
add
pushf
add
movl
jns
fistpll
sahf
sti
add
add
add
hlt
jbe
jns
andl
xchg
add
add
add
add
add
push
add
add
add
pop
call
mov
jl
lock
mov
xchg
mov
add
add
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
roll
test
pop
add
add
add
add
add
aam
add
int
cltd
xchg
add
cli
iret
cltd
add
jmp
jae
mov
xchg
add
jp
jge
add
aad
jmp
cmc
add
data16
xchg
fcmovb
add
cltd
mul
repnz
add
mov
fwait
add
lock
add
add
in
push
push
add
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
test
jp
fsubrl
jns
js
add
loopne
add
add
stos
push
add
add
enter
pop
xchg
fwait
xlat
push
fstps
add
ja
mov
les
mov
fiadds
loope
lcall
lods
mov
ficoml
push
mov
lea
pop
push
push
mov
push
ror
pop
lea
push
add
not
pop
sub
push
lea
push
lea
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
pop
add
add
add
subl
add
rcr
sbbl
addb
xorl
add
lret
add
add
add
add
les
les
aam
cltd
test
filds
pop
add
mov
add
push
pop
pop
add
ljmp
lahf
jo
add
cmpsl
loopne
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
test
mov
add
add
ret
jp
add
mov
js
data16
add
imul
add
push
popf
out
add
mov
fldenv
add
filds
add
cltd
cmpsb
add
add
icebp
notb
movsl
scas
add
frstor
add
jns
out
jno
add
add
mov
filds
add
out
fimull
pop
xchg
addb
add
fiaddl
add
add
imul
add
push
push
push
push
push
push
call
icebp
shl
mov
flds
mov
add
mov
add
in
jnp
pop
pusha
jno
les
add
ja
jb
test
add
add
xchg
addr16
mov
cltd
imul
push
pop
cltd
int
add
add
add
cmpsl
addr16
mov
in
mov
add
jl
add
fwait
jecxz
imul
add
pop
mov
add
push
ror
lea
pop
mov
push
ror
shr
pop
add
xor
mov
push
add
pop
and
push
push
push
lea
push
push
push
push
call
cmc
add
add
add
in
add
add
add
mov
lahf
jno
rclb
add
add
add
imul
lret
jnp
add
pushf
lods
fistps
mov
lcall
data16
aad
add
add
lock
add
mov
loop
ljmp
push
add
lea
pop
call
push
lea
push
lea
push
push
push
push
call
add
add
mov
scas
jl
lods
lahf
add
lock
cltd
push
push
add
add
mov
mov
nop
add
cld
mov
std
addb
add
fidivs
add
add
add
int
nop
cmpsb
fcompl
add
add
fadds
mov
lea
pop
add
push
push
push
lea
push
push
push
call
add
stc
mov
add
aad
ret
add
imul
jp
jb
ljmp
rolb
lcall
add
add
faddp
mulb
add
fcomp
add
imul
popf
fwait
mov
push
mov
in
xchg
jecxz
clc
add
popf
pop
add
lods
popf
mov
lea
pop
cmp
je
add
push
sub
pop
cmpl
jne
push
lea
push
call
mov
orb
xchg
sti
outsl
pop
out
add
rorb
add
add
ja
add
mov
xchg
push
lds
jmp
add
mov
in
rclb
out
lcall
into
add
aam
add
data16
jecxz
jns
add
jle
xchg
cmpsl
add
lret
pop
add
std
add
je
aam
sarb
lea
pop
xor
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
mov
out
add
add
mov
popf
rclb
scas
push
fcoms
add
mov
mov
mov
add
roll
add
mov
insb
out
add
add
out
mov
movsl
add
add
mov
aad
out
add
add
data16
mov
lea
pop
pop
pop
push
inc
dec
lea
pop
pop
pop
leave
push
shl
xor
pop
ret
mov
push
push
push
lea
push
push
call
in
jecxz
add
jbe
add
jge
stos
mov
addr16
icebp
add
loopne
add
ja
add
add
repnz
add
add
jp
xchg
fisubl
mov
pop
in
add
add
add
jns
out
fdiv
add
mov
mov
mov
add
jno
out
sti
add
add
mov
add
pop
add
push
not
rol
add
pop
push
push
push
xor
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
jge
lods
fldl
add
add
rol
stos
add
push
xchg
add
add
add
add
jp
mov
int3
mov
mov
add
rcl
mov
add
add
add
fadds
add
add
lret
sahf
add
jo
roll
add
je
xchg
add
pop
add
add
pop
mov
push
add
not
pop
push
call
push
push
lea
push
push
lea
push
push
push
call
add
push
add
add
xlat
repnz
fs
mov
loope
pushf
add
call
jl
add
mov
fidivrl
mov
jle
xchg
add
add
xchg
add
lock
bound
loope
aad
in
cwtl
fdivrp
icebp
faddl
add
in
jo
jp
pop
add
add
mov
add
push
jb
popa
add
mov
lea
pop
xor
pop
push
dec
pop
pop
push
push
call
pop
add
add
std
lock
push
cwtl
mov
hlt
std
les
add
mov
add
cmc
mov
xlat
sti
aam
mov
add
fiadds
pop
add
enter
add
imul
add
add
shl
add
mov
mov
push
add
mov
add
xchg
add
roll
add
movsb
shr
lods
add
add
lea
pop
pop
pop
pop
push
lea
pop
leave
ret
push
dec
add
pop
push
mov
add
push
shr
pop
push
push
ror
ror
not
pop
push
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
jle
add
pop
xchg
push
push
xchg
nop
les
pop
cmpsb
add
std
fldl
pop
mov
add
pushf
fs
pop
mov
add
xchg
mov
ljmp
add
movsl
mov
rcrl
mov
andb
jne
mov
popf
pop
lahf
pop
add
bound
add
add
lret
std
pop
jbe
les
mov
push
push
lea
push
push
call
mov
add
add
stos
add
add
mov
xchg
add
adcl
negl
jno
hlt
in
add
out
ja
add
xchg
cmpsb
movsb
in
mov
lods
leave
mov
add
add
ret
stos
add
add
repnz
incb
xorl
ja
add
add
movsl
test
test
in
add
add
pop
push
pop
lea
push
rol
add
sub
pop
sub
push
inc
lea
rol
pop
mov
push
dec
add
add
pop
shr
add
push
push
call
add
lods
pop
mov
add
pop
in
add
add
pop
movsb
add
xchg
std
add
repnz
add
mov
nop
jo
fiadds
jne
rolb
jl
push
pushf
ret
add
test
mov
outsl
add
int
add
add
faddl
fstpl
pop
add
js
xchg
add
push
add
stos
insb
nop
add
xchg
fiaddl
fcmovne
push
add
fwait
add
push
fistpl
pop
andl
pop
mov
add
pushl
push
push
push
push
push
lea
push
call
push
aam
fldl
pushf
mov
mov
cltd
leave
mov
add
popa
add
mov
jne
add
gs
xchg
add
loope
flds
add
push
jo
addl
fsubrp
add
ret
hlt
stos
cli
add
add
add
add
test
pop
add
add
pop
add
popf
add
add
lea
pop
popl
push
push
push
push
push
push
call
add
lods
add
add
add
mov
lods
in
xchg
push
add
fadds
add
jl
add
je
add
icebp
pop
test
add
add
popa
add
in
add
jb
aad
jge
mov
add
add
nop
add
add
add
ror
add
add
mov
jl
loope
mov
std
add
leave
add
add
sti
mov
lea
pop
mov
add
xor
push
lea
push
push
push
call
add
fcmove
add
pop
add
add
loop
out
lret
jns
pushf
testl
pop
add
add
add
add
lock
stc
jmp
outsl
add
add
mul
add
ljmp
addr16
gs
jl
jecxz
ja
aad
add
add
add
add
add
test
add
add
fsubl
repnz
loop
in
fldl
mov
lea
pop
lea
mov
add
push
add
pop
xor
call
push
lea
sub
pop
add
nop
nop
push
push
push
push
push
push
push
push
call
enter
orl
add
add
in
add
xchg
add
add
nop
mov
lcall
movsb
push
add
shr
add
add
add
out
test
mov
lods
add
jne
xchg
test
xchg
push
push
addl
fwait
movsb
add
outsl
add
add
mov
add
cwtl
out
mov
aam
mov
lea
pop
cmp
je
nop
push
push
push
push
push
push
push
push
call
add
add
add
stos
add
test
lods
outsl
mov
add
add
add
add
sar
shll
cli
outsl
bound
jbe
scas
jmp
test
arpl
push
push
imul
loop
nop
stc
aam
out
mov
xchg
stos
add
jne
fwait
sahf
out
loope
add
jge
fmull
jae
mov
lea
pop
nop
push
push
lea
push
lea
push
push
push
push
push
call
clc
add
mov
lcall
add
add
lea
add
add
mov
popf
add
add
add
add
add
imul
jae
arpl
test
add
add
mov
add
add
add
mov
rol
mov
into
fldl
nop
add
pop
add
add
add
sarb
leave
mull
mov
iret
popa
scas
cltd
mov
mov
lea
pop
inc
push
push
push
push
push
push
call
cwtl
add
aad
aam
add
add
add
add
insb
les
add
push
add
add
mov
out
jb
pop
mov
add
sahf
add
add
mov
iret
add
int3
mov
jne
add
mov
cld
lods
add
mov
add
subl
arpl
pop
nop
push
inc
add
pop
nop
push
lea
push
push
lea
push
push
lea
push
call
add
add
insb
test
mov
imul
add
cltd
stc
ljmp
add
je
fmul
mov
fiaddl
lret
add
push
rcr
lods
popa
push
add
arpl
xchg
jmp
lods
out
pop
add
lahf
mov
jle
xchg
add
lret
add
in
xor
int3
lea
pop
cmp
jb
xor
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
movsb
add
nop
add
mov
mov
add
lods
enter
scas
add
push
push
les
add
mov
in
add
pushf
out
notl
jle
add
add
add
xchg
jle
xchg
add
nop
jbe
insb
mov
fcomip
mov
bound
add
sar
xchg
add
add
add
sahf
stc
add
and
test
push
push
push
lea
push
lea
push
lea
push
call
add
fidivrl
mov
mov
add
loop
add
add
outsl
add
pop
add
add
add
mov
jge
add
add
jmp
jno
mov
divb
xchg
pop
add
add
int
int
shl
nop
hlt
add
cltd
sahf
fwait
in
repnz
cli
nop
test
loope
add
add
lcall
fs
fadds
add
lea
pop
mov
push
inc
sub
pop
add
movzwl
mov
push
lea
push
push
push
push
push
call
cwtl
stos
mov
push
add
add
add
add
movl
in
vpextrw
lds
add
add
lea
pop
mov
add
shr
add
push
add
test
add
xchg
add
add
movsl
fisubrl
addl
out
add
add
push
add
mov
mov
lea
pop
add
push
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
lahf
add
fistpl
pop
xchg
add
push
stc
add
in
add
add
add
add
call
call
push
add
add
loopne
movsl
cli
fwait
pop
imul
pushf
add
call
add
insb
add
add
pop
fwait
lret
iret
mov
lea
pop
xor
xor
shl
push
rol
xor
pop
xor
push
lea
push
call
jno
lret
mov
lods
out
add
ja
mov
stc
nop
test
test
add
shr
add
add
push
mov
mov
fcompl
hlt
jno
call
mov
add
rcr
mov
add
push
add
rolb
cwtl
jp
enter
mov
lea
pop
shl
xor
shl
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
mov
ffree
add
add
xchg
add
fdivr
mov
add
bound
add
bound
enter
test
hlt
push
jns
addr16
add
sahf
fdivr
add
add
add
les
add
mov
mov
add
rolb
in
cmc
sti
arpl
xchg
add
mov
lods
add
add
add
xchg
jp
les
or
push
push
call
add
jne
add
clc
scas
clc
xchg
sahf
add
push
int
xchg
mov
add
push
int
lods
xchg
add
filds
xchg
mov
enter
pop
add
add
mov
in
add
mov
test
loopne
movb
fadds
fldl
mov
add
push
add
movsb
add
add
roll
lahf
jmp
add
add
push
fcmovnu
add
lea
pop
mov
push
push
push
push
push
push
push
call
add
add
jae
add
leave
insb
arpl
push
arpl
xchg
mov
mov
loope
xchg
add
add
je
add
lret
add
jl
les
pop
add
rol
ret
add
mov
jle
add
cld
cltd
add
icebp
add
icebp
mov
add
xchg
cmpsb
push
movl
outsl
aad
add
add
clc
mov
testl
scas
popa
test
jecxz
mov
lea
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
xchg
int
mov
popf
mov
mov
outsl
add
gs
add
add
fcoms
add
pop
scas
cmpsb
in
add
imul
add
pop
cld
add
add
add
leave
add
mov
ret
add
orl
jbe
add
popa
bound
add
data16
push
shr
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
ja
add
push
add
add
out
repnz
add
mov
xlat
add
fwait
add
add
aam
add
pusha
fnstsw
ja
add
add
add
fcoml
pop
jbe
add
mov
int
xchg
std
add
add
xchg
ja
ja
add
add
int3
add
popf
add
pop
lods
add
add
mov
cli
add
and
push
lea
add
inc
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
iret
push
imul
add
stos
add
adcb
fiaddl
add
roll
in
test
testb
add
jae
std
xchg
add
stc
xchg
rolb
out
xchg
xchg
pop
mov
add
out
scas
push
add
mov
add
rcll
add
pusha
xchg
gs
into
lret
add
mov
lcall
jl
add
mov
lea
pop
leave
push
push
push
push
lea
push
lea
push
push
call
add
lods
lahf
push
jno
je
add
stos
cmpsl
add
jbe
in
lods
add
add
cld
push
cmpsl
add
scas
add
xchg
mov
add
mov
cli
pop
shr
movb
add
mov
add
cmc
mov
call
mov
out
lret
lret
fstps
in
add
xlat
jbe
push
in
jmp
lea
pop
ret
push
push
inc
rol
pop
mov
push
add
add
pop
push
push
lea
add
pop
push
push
push
push
sub
not
pop
mov
push
add
pop
mov
mov
push
inc
ror
not
ror
pop
test
je
mov
test
je
push
push
push
lea
push
call
sti
add
fsub
scas
add
mov
stc
repnz
lcall
add
add
data16
fs
rcrb
jl
mov
movsb
add
nop
add
loopne
add
add
stc
incb
jp
mov
mov
mov
bound
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
call
add
jns
jmp
cltd
mov
add
imulb
add
repnz
shrl
add
add
add
add
push
lret
stos
add
jecxz
add
add
add
pop
add
pop
mov
xchg
data16
mov
test
imul
fwait
arpl
add
add
mov
lea
pop
mov
push
shr
rol
pop
mov
inc
push
shl
shr
add
pop
cmp
je
test
je
push
add
pop
mov
inc
push
shr
rol
pop
cmp
je
test
jne
push
shr
pop
xor
pop
push
lea
push
push
push
call
shlb
les
add
lods
popl
mov
add
test
push
add
jo
outsl
add
push
add
in
imul
movsb
lea
lret
mov
cltd
add
cmp
mov
cld
add
imul
lea
pushf
fildl
jl
cld
xchg
jno
xchg
add
add
mov
shll
mov
add
fildl
add
loope
mov
roll
add
adc
push
shr
inc
pop
pop
pop
leave
push
not
ror
pop
ret
mov
inc
push
sub
pop
cmp
jne
lea
mov
push
lea
push
push
push
lea
push
push
push
push
call
mov
jecxz
mov
je
in
pop
imul
movsl
add
mov
jae
in
mov
mov
cmpsl
add
stc
mov
jle
add
aad
xchg
mov
arpl
mov
add
je
add
hlt
add
loopne
add
add
clc
rolb
movsl
leave
roll
leave
add
andb
std
mov
mov
lea
pop
test
je
mov
add
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
add
js
lods
test
clc
add
jl
filds
add
add
add
les
popf
add
jmp
fiaddl
jge
add
pop
add
shl
leave
add
add
mov
je
add
add
add
add
pop
aam
add
pop
in
add
loopne
add
pop
cmp
jne
push
shl
sub
pop
mov
push
push
call
fstpt
add
add
mov
fldl
add
add
icebp
mov
xchg
add
pop
add
lahf
add
add
insb
mov
add
jle
add
add
push
add
add
pop
add
cld
add
xlat
jmp
add
stos
mov
add
add
hlt
lea
pop
test
je
push
push
lea
push
call
imul
add
add
pop
add
add
add
add
xchg
popl
movsl
add
add
lea
cmpsb
add
add
mov
add
add
test
test
add
add
add
add
add
aam
add
mov
mov
add
add
addr16
add
popa
or
mov
add
push
pop
cmp
je
push
sub
sub
pop
jmp
xor
pop
push
push
lea
push
push
push
call
imul
pop
scas
insb
mov
shlb
repnz
add
stos
fwait
insb
mov
add
int
outsl
ret
add
jnp
popf
mov
xchg
js
rclb
add
fdivl
mov
addl
data16
mov
add
add
clc
add
add
shl
add
add
add
test
add
add
push
mov
lea
pop
pop
push
pop
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
pop
add
imul
pop
add
add
push
push
add
test
mov
jb
add
movsb
add
add
add
pop
out
add
add
cld
call
xchg
mov
add
mov
mov
add
jmp
fldl
jbe
add
add
in
les
jo
add
cli
cmc
mov
and
leave
ret
lea
push
push
call
add
mov
add
data16
lret
lahf
ljmp
add
mov
xchg
mov
lret
add
pop
add
add
add
add
mov
add
scas
mov
call
add
shlb
popf
xchg
cmpsb
mov
add
push
pop
add
pop
add
lods
scas
scas
jo
add
pop
pop
pop
pop
push
rol
dec
shl
shl
pop
pop
push
push
push
call
add
scas
lods
mov
movsl
add
cmc
add
lcall
cwtl
outsl
add
call
add
in
mov
ljmp
mov
mov
add
scas
in
jno
loopne
pop
xchg
shrl
pop
mov
shr
out
mov
add
push
call
xchg
jno
mov
add
mov
faddl
mov
lea
pop
leave
push
pop
ret
push
add
rol
pop
mov
push
push
push
push
push
push
push
push
call
out
ficoms
add
jmp
add
push
lcall
add
into
add
xorl
add
mov
iret
add
jle
mov
frstor
add
icebp
mov
add
xchg
add
loope
add
loopne
ror
add
lds
fcomip
ror
les
add
lea
pop
pop
pop
pop
push
dec
shr
rol
pop
pop
push
push
push
push
push
lea
push
push
call
jmp
in
jae
mov
jne
lods
add
jo
add
add
out
add
jmp
xchg
pop
add
orl
add
test
add
mov
add
popf
out
mov
pop
cmp
in
add
mov
sarb
mov
mov
lea
pop
leave
ret
rol
push
inc
pop
rol
push
lea
pop
xor
push
add
inc
sub
inc
pop
inc
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
pop
push
jae
mov
cwtl
pop
add
add
mov
sahf
fcomps
jne
add
add
mov
fs
add
add
mov
roll
add
movsl
add
add
movsl
imul
mov
in
movsl
lods
jnp
add
jbe
add
movb
push
pop
add
cltd
mov
add
into
add
add
in
add
add
pop
cmpb
jne
push
shl
add
pop
ret
adc
and
xchg
and
insb
and
pop
and
and
arpl
jno
sub
jno
into
and
scas
and
push
and
aam
jno
push
cmp
jno
add
add
xor
lcall
ss
mov
pop
mov
cli
push
out
jle
loope
dec
mov
jns
fwait
mov
pop
lret
and
mov
fistpl
ret
adc
aam
sbb
clc
enter
pop
mov
xor
jp
icebp
add
sbb
movsl
lods
adc
jg
push
in
int3
xchg
mov
push
push
mov
mov
lcall
mov
jbe
jle
xchg
pop
pop
xchg
lea
jne
popa
rorl
aas
aaa
inc
xor
or
outsb
cmp
push
mov
adc
outsl
push
mov
inc
aam
je
outsb
je
rorl
leave
mov
mov
call
inc
cltd
or
push
push
hlt
cmp
bound
inc
mov
inc
dec
jg
jecxz
aam
dec
bound
push
mov
rcr
cwtl
sahf
popa
pop
lret
jle
outsl
test
mov
clc
or
ret
adc
or
or
add
fdivl
or
dec
es
ljmp
mov
lret
jp
xchg
lods
push
clc
loope
inc
xchg
out
cmovb
movb
test
outsb
shll
jmp
xchg
xchg
push
dec
push
sbbl
aaa
mov
hlt
gs
es
bound
xchg
movsl
lods
jl
sbb
das
imul
subl
adc
ds
scas
popf
testl
add
sahf
ss
rorb
cmp
xchg
mov
or
mov
xor
fs
jge
test
xlat
shll
mov
jne
fcoml
xor
insl
das
dec
popf
mov
xchg
pop
jne
frstor
mov
fldcw
aaa
repnz
ja
test
cwtl
pop
mov
es
xchg
sbb
add
sbb
sub
mov
jge
mov
in
cmc
xchg
and
mov
xor
add
push
cld
jb
inc
xlat
cmp
dec
movsb
out
cmpsb
push
orl
dec
mov
cmc
sub
dec
pop
sub
pop
fstpt
data16
xor
inc
mov
xchg
daa
jo
repnz
popf
ljmp
lds
out
dec
in
xor
sub
shl
cs
gs
dec
lahf
sub
or
xchg
mov
jecxz
mov
lret
shll
push
pop
inc
add
or
or
cmp
fsubrs
cmpsl
stos
js
push
adc
std
repz
mov
mov
inc
xchg
ret
adc
fldcw
jle
pop
cmpsl
mov
mov
mov
push
mov
xchg
scas
mov
fisttps
daa
ljmp
movsb
imul
dec
push
cs
movsl
xchg
jl
fcoml
jmp
test
lods
loopne
popa
pop
push
add
imul
scas
sahf
ss
inc
out
push
mov
dec
cmp
xchg
cli
mov
push
sub
popf
into
lods
jno
and
leave
ret
shlb
mov
aad
test
add
sub
lods
mov
test
mov
nop
movsl
xchg
js
imul
in
and
daa
repz
les
mov
je
rcll
mov
dec
xchg
xchg
jae
cmp
iret
dec
jnp
adc
inc
rcrl
push
mov
jnp
outsb
cmp
jae
push
xchg
jne
mov
and
xchg
xor
and
movsb
out
imul
insl
js
sub
dec
xor
mov
jecxz
mov
or
and
fcomip
lcall
push
mov
ja
push
mov
adc
xchg
pop
nop
inc
cmc
stos
into
icebp
test
push
add
cld
lods
inc
decb
inc
lret
sub
repnz
sahf
imul
jne
cld
sti
addb
mov
minps
pop
paddsw
aaa
sbb
sub
inc
add
inc
mov
xchg
cmp
push
lods
out
push
inc
test
pop
cmp
mov
out
shll
clc
repz
sub
and
cmp
mov
pop
lods
jo
addl
or
pusha
dec
fs
iret
or
sub
lcall
call
add
pop
sbb
nop
mov
fiaddl
ret
js
lock
inc
sub
sub
clc
mov
pushf
sub
push
add
loop
mov
int
add
dec
es
push
mov
push
jmp
xchg
leave
push
imul
sbb
imul
stos
adc
rcrl
in
out
mov
jp
mov
pop
dec
jp
inc
gs
into
push
lods
jno
loope
sbb
push
std
xchg
insl
adc
mov
testl
push
enter
add
xchg
rorb
mov
mov
xor
mov
shlb
insl
push
aam
icebp
shrl
or
cs
test
imul
les
aam
xor
gs
cmc
or
xor
jne
leave
or
cmp
popa
pop
cmp
add
fimuls
fwait
mov
pop
jae
stos
pop
xchg
xchg
cmpb
push
dec
sbb
inc
divl
xchg
mov
aas
hlt
shll
in
js
cmp
lcall
mov
jae
adc
subl
sub
stos
fsubl
push
pop
ss
cmpsb
orl
test
add
fs
iret
pop
xor
rcl
int
mov
pushf
int
inc
jne
xchg
xorb
xchg
popa
sahf
add
addr16
fs
call
mov
bound
jae
in
dec
bound
mul
out
or
adc
aad
lcall
sarb
out
jp
dec
stos
push
inc
lret
jp
mov
xor
push
enter
sub
xchg
push
aad
jne
xchg
cmp
cmp
ret
outsb
test
xlat
imul
das
sarl
mov
popa
xor
push
sbb
xchg
mov
xor
loopne
gs
in
pop
mov
push
xor
mov
sbb
repz
ja
pop
adc
jbe
mov
std
xchg
sbb
and
out
fstpt
fs
push
daa
push
cwtl
aaa
fwait
lods
adc
inc
int
mov
or
add
cmp
or
frstor
mov
sbb
dec
mov
outsl
adc
inc
add
les
lods
pusha
xor
adc
dec
imul
sbbl
dec
adc
or
mov
sar
dec
mov
mov
lret
mov
pop
lret
mov
or
and
cmp
xor
dec
jl
mov
pop
stc
shl
cltd
sbb
or
push
xchg
xchg
cmp
gs
jns
out
pop
fdivrs
rorb
jmp
mov
jg
shlb
mov
jb
and
cmp
sbb
or
sub
pop
test
loopne
hlt
repnz
imul
out
push
call
push
sub
push
rcrl
xchg
cmp
ret
je
in
add
addr16
nop
call
cs
xchg
int3
jge
adc
fstl
test
into
jg
mov
iret
shr
cmp
sbb
ret
dec
sbb
sbb
pop
inc
pop
pop
stos
and
dec
into
mov
insl
dec
sbb
int3
popf
test
sbbb
lahf
push
adc
mov
cmp
pop
psubsb
mov
bound
pop
jb
test
movsl
cltd
std
mov
jnp
out
insb
pushf
adcb
add
leave
dec
mov
mov
jg,pn
cmp
movsl
cmp
jno
test
imul
out
aam
sbb
push
xchg
ljmpw
inc
mov
pushf
out
mov
jmp
cld
addr16
mov
pop
push
js
popa
and
out
cmp
xchg
dec
or
inc
aad
dec
mov
lret
xor
cmp
in
std
fbld
jg
push
and
cld
jle
mov
mov
inc
rorl
dec
push
dec
jge
push
fwait
dec
jns
adc
pop
test
lds
pushf
popa
mov
mov
stos
aaa
sbb
push
jmp
sbb
inc
mov
push
notl
ljmp
dec
das
cmp
aad
jne
fcmovbe
mov
push
xchg
sarb
pusha
movsb
pop
jno
adc
lret
dec
ror
or
scas
cmp
adc
pop
sub
add
popf
mov
imul
out
addr16
dec
loope
test
fnstcw
fisttpll
sbb
xchg
mov
cmpsb
dec
mov
fidivs
into
loop
jmp
in
mov
jmp
fwait
in
sbb
adc
andb
mov
test
gs
pop
int
pop
mov
jns
mov
nop
mov
xor
icebp
sub
std
and
inc
xor
dec
or
xchg
mov
or
filds
popf
mov
adc
ret
je
push
inc
out
add
scas
mov
je
into
cmc
mov
mov
ret
add
jg
int3
outsb
rcll
in
aas
outsl
cltd
cmpsb
mov
sbb
dec
pop
iret
jp
ret
add
pop
xchg
mov
pop
pop
test
cmp
cmpsl
nop
push
mov
loop
rcrb
je
mov
add
mov
mov
rcrl
jp
cli
and
insl
or
and
fwait
and
inc
shlb
push
jne
jnp
icebp
mov
dec
push
pop
push
dec
and
inc
mov
popa
insb
popa
sbb
inc
rorl
popf
mov
popa
push
pop
jge
cmpl
dec
in
pushf
aas
aam
lahf
daa
lcall
dec
dec
mov
inc
xchg
sahf
push
jnp
dec
mov
inc
sub
fadds
out
or
mov
add
in
stos
push
dec
inc
xchg
iret
icebp
push
xchg
ret
sub
push
xchg
and
cmp
xchg
inc
xchg
mov
daa
mov
pop
jmp
sub
adc
int3
js
or
xchg
adc
outsb
push
add
int
jnp
pop
les
flds
push
xchg
pusha
push
ret
out
ret
test
imul
sti
or
hlt
imul
mov
insl
mov
mov
add
xor
xor
out
hlt
sti
push
and
fildll
arpl
mov
xchg
jo
arpl
movsb
mov
sbb
xchg
lret
aam
add
roll
jmp
stc
ja
dec
cmp
mov
lock
push
and
addl
mov
sahf
push
xchg
je
push
ss
les
and
add
mov
inc
push
mov
loop
dec
sarb
sti
mov
mov
and
ja
lea
add
sbb
cmc
imul
and
mov
pop
jnp
and
movsl
insb
jmp
jl
adc
data16
mov
xor
ds
addb
push
cmp
sbb
push
lea
insl
clc
and
imul
sbb
xchg
push
cmp
xchg
daa
popf
rorl
sbb
mov
jo
dec
dec
out
mov
push
pop
mov
ret
out
out
pop
pushl
or
dec
mov
sub
mov
dec
in
sub
lods
in
leave
add
inc
fisubs
mov
dec
mov
popa
add
fidivs
fidivrs
lods
cmp
mov
push
pop
push
and
mov
adc
xor
jl
jmp
mov
addr16
nop
xchg
and
mov
push
dec
adc
jmp
sbb
es
cmp
in
xor
decl
add
sbb
inc
mov
adc
and
or
shrl
cmp
std
pop
mov
dec
push
push
test
push
rcll
and
mov
sbb
mov
xchg
jb
mov
and
xor
outsl
push
arpl
and
insb
popf
cmpsb
dec
out
adcb
or
mov
in
mov
movsb
push
sub
fwait
dec
or
xchg
push
movsl
addr16
testb
inc
aaa
jbe
add
sub
mov
popa
lret
nop
ffree
lods
jp
dec
push
push
pop
rclb
jae
dec
push
sbb
repnz
mov
rclb
inc
xchg
sub
movsl
cmp
mov
dec
sbb
push
cmp
data16
sub
cmpsb
cwtl
lahf
test
dec
push
aad
or
shlb
mov
push
pop
cmp
fstps
xchg
mov
test
xor
mov
mov
dec
les
push
inc
fistpl
jns
dec
lcall
fists
icebp
cli
imul
stos
xchg
ds
popf
jge
push
jle
and
scas
insl
dec
mov
cmc
popf
fistl
push
mov
dec
adc
push
pop
ret
mov
pop
sub
push
lock
mov
call
arpl
cld
scas
hlt
out
pusha
fsubrl
cmp
aam
cmpsl
lds
jl
jb
pop
bound
hlt
sub
dec
cmp
daa
inc
gs
ljmp
test
push
add
and
mov
aaa
sbb
movsb
add
mov
test
mov
clc
test
add
push
das
in
ja
cli
iret
call
mov
pop
stc
push
outsb
cs
shl
mov
jnp
mov
fwait
inc
les
pusha
push
cmpsl
in
aas
pop
cmc
pop
pop
fldenv
jno
ficoms
andl
inc
lret
pop
scas
pop
adc
cmp
push
xchg
mov
mov
mov
mov
sub
xor
fldcw
pop
mov
sti
or
lahf
mov
cltd
add
jae
xchg
push
mov
fs
lcall
adc
pusha
mov
dec
sbb
lret
adc
and
hlt
fnstenv
or
in
fistpl
mov
or
out
xor
stos
outsl
pop
aam
jp
fnsave
sub
hlt
jp
mov
shl
push
mov
xor
in
mov
out
imul
lahf
pop
inc
leave
xchg
dec
fisubs
arpl
das
lret
dec
mov
jmp
popl
push
out
adc
xchg
mov
aaa
push
daa
addr16
mov
call
iret
cld
or
fwait
and
loope
repz
outsb
cs
pop
dec
scas
mov
dec
sub
sbb
leave
rorb
int3
mov
data16
xchg
pop
das
push
push
addl
push
lret
gs
sahf
inc
pop
lea
sub
sub
and
outsb
xor
daa
push
cmp
mov
xchg
in
orb
mov
sub
mov
add
std
fisubrs
dec
ret
push
cmp
xchg
cmp
push
ret
test
mov
sbb
push
insb
push
sub
fcoml
je
enter
inc
jb
cld
aaa
jno
fwait
xchg
imul
fmuls
sbb
pop
loopne
cmpsb
ret
js
inc
mov
add
sbb
jae
dec
mov
cltd
pop
adc
jo
or
xor
mov
sub
adc
inc
mov
ss
push
je
sbb
roll
sub
imul
lods
xchg
sub
xchg
sbb
sbb
pop
xchg
sbb
out
sub
mov
lds
cli
cld
lcall
xchg
cmpsl
fwait
ljmp
pop
dec
cmp
inc
in
and
and
pop
jo
dec
mov
xchg
pop
or
adc
decb
mov
ss
shl
ljmp
movsb
adcb
pop
push
inc
pop
adcl
out
mov
scas
adcl
imul
inc
and
pop
xchg
test
lea
pop
mov
iret
int
imul
imul
mov
cwtl
call
popa
mov
rclb
clc
out
xchg
iret
or
leave
adc
push
data16
ficompl
hlt
mov
mov
jmp
pusha
xchg
test
mov
out
add
fsubr
int
outsb
sbb
or
and
test
mov
adc
imul
push
sahf
and
pop
int3
sbb
sbb
xchg
jb
fldenv
pop
xor
jns
add
push
push
dec
lea
cmp
insb
jb
je
mov
ss
out
je
jo
rcl
addl
or
movsl
jp
pop
mov
and
arpl
mov
mov
sub
push
cmp
repz
rolb
cld
mov
inc
xchg
enter
ds
sub
cmp
push
mov
scas
stos
out
repz
jno
lock
sbb
push
xor
ret
out
testb
test
cltd
pop
fsts
icebp
sub
jnp
xchg
xor
lds
lea
sub
cmpsb
movsl
dec
fwait
xor
push
cmpsl
shrb
fs
nop
sub
mov
pop
dec
or
clc
fsubrl
mov
push
inc
mov
and
leave
inc
and
daa
lahf
aam
push
inc
xchg
movsb
push
cmp
pop
pop
clc
aaa
inc
movsb
or
or
mov
pop
or
sbb
test
cmp
inc
xor
inc
pusha
adc
mov
jae
mov
outsb
mov
popa
pop
js
add
scas
jae
mov
das
cli
xchg
mov
push
cmp
loopne
out
popa
imul
sub
orb
cmpsl
xchg
pop
out
add
inc
and
lock
lock
out
cld
or
sub
xchg
arpl
xor
dec
pop
iret
xchg
mov
push
xlat
in
cmc
mov
xchg
adc
mov
rcr
loop
insl
cmp
rorb
pop
and
mov
xchg
jg
jns
push
jmp
dec
loope
and
out
mov
dec
mov
mov
mov
mov
imul
sbb
rcrl
cmp
neg
inc
mov
inc
hlt
cmpsl
pop
mov
outsl
xor
insl
int3
mov
je
push
adc
pushf
lds
xor
cmpsb
mov
out
xchg
push
out
add
adc
aas
cmp
popf
sbb
or
into
sti
inc
adc
fidivrs
ret
or
sbb
call
mov
push
sahf
jg
sub
iret
aaa
or
mov
add
cli
imul
mov
xor
ret
aas
mov
int
mov
imul
int3
push
repnz
fstps
sub
pop
fdivrp
inc
push
insl
jae
mov
mov
es
stos
push
dec
in
and
inc
lcall
cmpsl
sti
rclb
mov
xchg
lock
dec
push
lods
mov
fst
cmp
dec
lcall
loopne
mov
or
inc
cmp
rcr
ljmp
sarl
out
in
jmp
inc
addr16
push
mov
mov
xchg
xchg
adc
cmp
fs
jo
push
xlat
pop
out
neg
pop
sub
loopne
mov
cltd
mulb
orl
fists
add
out
pop
inc
mov
mov
icebp
mov
add
or
out
xchg
aam
mov
shrb
lds
vpcmpeqd
js
push
xchg
xor
dec
int
js
cmpsb
fcoml
out
pop
jmp
dec
stos
sub
fsubp
and
mov
mov
jbe
inc
xlat
lds
outsl
or
sub
pop
push
ljmp
mov
mov
cmp
rcrl
arpl
incl
pushf
pop
ljmp
inc
rclb
mov
or
fstp
rcr
dec
rolb
bound
jae
mov
movsl
xor
gs
dec
pop
movsb
es
add
loope
jge
sbb
icebp
push
pusha
stos
repnz
sub
inc
push
fwait
fs
sub
or
pop
dec
lds
pop
cmc
mov
jle
ja
arpl
nop
mov
movsb
jo
inc
and
push
aam
push
arpl
hlt
cmc
pop
in
jb
push
push
mov
inc
inc
mov
inc
movsl
xchg
aam
and
and
and
xchg
inc
test
cwtl
fs
or
lret
dec
idivl
int
shrl
jecxz
arpl
pusha
sbb
cmp
pushf
gs
shlb
out
dec
hlt
and
pop
mov
dec
std
cs
xor
inc
es
inc
sahf
sub
rorb
lods
jecxz
imul
jp
inc
in
and
push
inc
sbb
and
mov
je
adc
not
aad
inc
adc
repnz
push
sub
sahf
in
dec
cmp
ret
push
stos
push
scas
pop
jo
sti
cmp
jle
xchg
add
into
inc
aam
pop
fnstcw
inc
je
push
inc
mov
inc
rorb
push
add
enter
jnp
punpckhdq
jb
testb
cltd
aaa
hlt
push
insb
sbb
inc
dec
lods
clc
dec
jo
cmp
sti
in
mov
mov
jbe
fisubrs
stos
aad
pop
aad
int
adc
inc
mov
ret
popa
jne
mov
jmp
jg
xchg
pop
lods
sub
jb
jns
jae
mov
lret
pusha
dec
xor
push
negb
jbe
adcl
push
mov
frstpm(287
mov
je
fmul
es
dec
jns
test
movsb
loope
lcall
test
mov
pop
cltd
shl
mov
lret
pop
xchg
repnz
das
bnd
pop
incl
push
mov
gs
xor
mov
sbb
sub
shll
lods
or
lods
loopne
imul
std
and
aaa
xor
leave
pusha
pop
ja
adc
aaa
sub
imul
mov
mov
lods
cmp
shll
pop
mov
sub
outsb
test
leave
aas
pop
out
sbb
push
insl
loop
out
xchg
jo
in
shll
push
std
adc
jg
pop
mov
push
shl
pop
dec
jmp
adc
xchg
or
jp
mov
mov
std
out
data16
jl
out
adc
push
gs
aas
cmp
inc
sub
aad
enter
cmpsl
ficompl
gs
aas
outsb
leave
and
or
xchg
sbb
cld
fdivrs
lods
call
mov
or
movsl
mov
or
cmpl
dec
repz
add
leave
cltd
push
jmp
mov
dec
cltd
pop
in
outsb
stos
adc
ficoms
push
mov
out
negb
fs
int
shrl
sbb
mov
mov
mov
xchg
push
sbb
ljmp
adc
enter
xchg
xchg
es
iret
mov
or
hlt
in
pop
repz
iret
sub
sti
jl
and
and
outsl
fiadds
sub
shlb
mov
pop
and
test
out
push
bound
pop
cmp
mov
call
xchg
mov
mov
scas
xacquire
mov
outsb
jmp
inc
and
dec
xchg
jo
enter
jno
adcl
sub
jne
lds
sub
aaa
js
mov
cmpsb
pop
cmpsl
aas
cmp
inc
jge
sahf
pop
stc
popa
push
pushf
test
cmpsb
daa
xor
ret
loope
xor
and
sub
call
out
insb
dec
fs
sbb
pop
dec
ret
int
repnz
notl
lds
cli
iret
mov
cwtl
pop
dec
and
jmp
int
movsl
std
and
sbb
cmp
leave
pop
xor
in
adc
mov
adc
and
es
insl
cli
fmuls
and
movsl
xor
scas
ja
lret
mov
pop
xor
loope
test
push
mov
dec
or
ja
out
lret
lcall
enter
push
cmp
popa
xchg
inc
fwait
jns
cmp
mov
xchg
xor
add
add
outsl
inc
in
in
inc
shr
pop
xor
mov
push
pushf
and
int
ja
ljmp
cmpl
loope
jno
test
add
lcall
push
mov
push
lock
aaa
mov
add
pop
dec
xchg
cli
push
or
lods
cwtl
dec
push
cmc
jnp
xor
and
inc
mov
lahf
test
dec
pop
das
lret
and
and
mov
dec
gs
imul
testb
jno
xor
cmp
aas
mov
add
inc
repnz
xchg
cli
jbe
cmpsb
push
xchg
xchg
pop
aam
fists
pcmpeqd
mov
aaa
inc
je
sub
dec
pop
sbb
push
subl
sub
jp
outsb
and
pop
mov
pop
lods
ret
pop
and
inc
les
sub
mov
adc
xchg
adc
ss
mov
clc
jb
call
pop
cmp
aam
shll
and
add
insl
test
out
loop
xchg
inc
in
xchg
jmp
mov
inc
inc
sbb
dec
pop
dec
insl
cmc
push
in
ds
add
jge,pt
sub
cltd
cltd
cmpsl
dec
add
leave
hlt
push
in
enter
mov
cmpsl
leave
cs
in
xor
sub
dec
xor
mov
and
jmp
out
jb
loop
subb
test
ret
pop
dec
jnp
arpl
movsb
shlb
fwait
sub
dec
pop
cli
add
not
mov
jo
mov
adc
aas
adc
add
gs
add
sbb
xor
xchg
popf
pushf
push
lret
mov
add
inc
cmpsb
das
dec
pusha
rcrl
dec
mov
cmc
sahf
adc
jp
push
call
js
xchg
mov
dec
andl
and
js
jg
in
scas
add
jbe
push
pop
sar
pop
xchg
insl
dec
rcrl
mov
pop
and
or
cld
sub
sbb
inc
mov
jnp
add
ret
mov
xlat
subb
push
jb
pop
testl
pop
je
xor
sbb
insl
hlt
fwait
sub
call
dec
or
leave
jo
inc
dec
jle
mov
adc
jnp
jbe
jp
aad
adc
movsb
scas
test
jmp
pop
loopne
pop
repz
push
sbb
shll
popa
and
lods
sbb
mov
in
mov
jns
add
inc
shlb
scas
aam
dec
mov
mov
inc
cld
jne
fstps
repnz
imul
xchg
outsb
jl
in
jmp
arpl
or
int
cmp
xchg
stc
adc
fcmove
sub
stc
lret
loope
sbb
xchg
bound
int
add
insb
stc
int
mov
mov
sub
mov
je
das
inc
bound
addr16
jo
jno
jle
cs
sub
xchg
out
iret
pop
add
addr16
mov
add
loop,pn
divb
push
jae
mov
add
pop
cmpsl
jno
adc
mov
les
idivb
sahf
pop
pop
iret
shr
xor
pushf
push
rcll
dec
mov
std
and
subb
ret
adc
or
sub
pop
enter
sub
flds
sbb
mov
fiadds
mov
js
stos
call
jns
pusha
lock
jns
and
add
inc
lock
adc
pop
jmp
push
les
pop
push
insb
stos
or
pop
loope
jmp
hlt
ret
cld
push
xor
jge
lea
xchg
xor
mov
jo
inc
cmp
stc
call
xchg
ss
hlt
sub
or
add
sbb
pushf
add
int
mov
mov
cwtl
les
sti
inc
rolb
out
out
jae
sub
rol
push
xchg
pop
cwtl
fiadds
mov
imul
adc
sub
mov
fdivr
xabort
lahf
testl
add
sbb
sub
add
mov
add
rclb
loopne
push
jecxz,pt
flds
xor
mov
mov
dec
pop
or
inc
lret
sub
jp
daa
repz
insb
in
jmp
scas
pop
dec
lcall
outsb
mov
sbb
xchg
sarl
mov
js
cltd
insb
sti
sub
inc
scas
xchg
xchg
inc
sbb
stc
insb
enter
mov
ljmp
scas
outsb
pop
enter
adc
sub
pusha
push
insb
sahf
test
sub
and
cmp
adc
add
add
ret
push
out
stos
lods
or
inc
xchg
push
mov
cmc
pop
cmp
xor
cld
add
mov
sbb
and
cmpsl
or
add
lds
test
arpl
sahf
pop
bound
pop
sbb
or
dec
cmp
xchg
lods
mov
das
in
iret
and
dec
cs
mov
cli
call
mov
lds
dec
sahf
lods
xor
push
cmp
fnstcw
xchg
push
into
jmp
jnp
lds
pop
lcall
ljmp
add
xchg
xor
add
adc
or
sahf
outsl
fisubrs
scas
out
sbb
inc
xor
repnz
arpl
cmc
addr16
ds
sbb
mov
push
hlt
xor
call
mov
xor
imul
pop
or
jns
lea
sbb
dec
and
adc
sub
ret
scas
shr
ret
ret
lds
pop
sub
mov
inc
std
daa
sbb
stos
sbb
mov
ljmp
cld
adc
mov
shll
sahf
jno
pop
dec
dec
inc
mov
xchg
mov
mov
stos
adc
add
fistl
dec
lods
mov
dec
adc
fwait
inc
sub
inc
scas
out
inc
es
lret
jb
dec
sar
in
push
jo
in
dec
fsubs
xchg
mov
fisttps
fmuls
jo
lods
mov
fimull
int
movsb
adc
mov
mov
xor
pop
and
mov
shr
pop
lcall
shll
mov
sahf
int3
add
outsl
pop
in
loope
or
or
xchg
mov
nop
cmp
int
adc
lret
or
stc
push
ja
fwait
and
xor
test
in
dec
xlat
xchg
stc
xor
int3
pop
mov
nop
scas
fs
xchg
mov
mov
fsubp
xchg
in
sub
rcll
sahf
test
and
aaa
fdivrl
cmp
test
mov
jae
mov
icebp
adc
fs
movsl
insl
and
sahf
dec
push
mov
xchg
dec
inc
and
adcl
cmc
pop
stos
dec
in
add
inc
arpl
mov
in
mov
adc
lods
pop
xchg
lret
std
fsubr
pop
jae
imul
js
mov
fdecstp
insb
ss
outsl
jmp
shlb
jle
in
push
fistps
aaa
icebp
cmp
dec
ss
sbb
fs
cmp
nop
jo
ljmp
sub
nop
pop
cmp
mov
or
jbe
mov
leave
fldt
fs
in
cmpsl
dec
cmp
outsb
rorb
pop
iret
les
xlat
and
fstl
call
inc
add
mov
popf
mov
sahf
call
data16
ss
pusha
aad
and
in
ljmp
das
and
icebp
pop
ret
mov
rclb
push
pop
or
subb
add
arpl
clc
mov
rorb
lods
cmpsl
pushf
sbb
stos
testl
hlt
mov
scas
test
lods
outsb
dec
cwtl
into
imul
add
pusha
pop
out
push
sbb
dec
push
jb
adc
repnz
add
push
fs
popf
out
xor
push
or
mov
nop
clc
or
mov
movsl
jbe
clc
mov
mov
mov
iret
jecxz
push
orl
fsub
sbb
into
scas
and
bound
les
push
xor
sbbl
fadd
inc
adc
test
lahf
movsb
loop
cmp
out
sbb
inc
xchg
inc
mov
mov
outsb
dec
out
mov
cmp
stos
push
or
push
inc
dec
and
cmp
pushl
push
iret
and
and
fcoml
fsts
enter
daa
dec
dec
rol
pop
in
lret
mov
int
mulb
das
pushf
xchg
outsb
movsb
data16
fcmovbe
xchg
out
adc
jg
adc
test
gs
in
test
jge
enter
jns
cli
ror
fcompl
fldl
jecxz
and
or
sbb
sub
lock
daa
xor
xchg
dec
and
aad
mov
push
js
rclb
push
fst
fidivrl
mov
push
pop
push
stos
mov
shlb
pop
sbb
fbld
lds
jbe
xor
xchg
lret
sub
adc
xchg
into
sti
mov
push
inc
dec
aam
and
call
imul
pop
adc
adc
dec
push
lods
repnz
sub
leave
dec
ljmp
into
mov
xor
in
insl
mov
aas
adc
shlb
lret
jg
arpl
lret
lcall
test
or
ljmp
movsl
xchg
call
rorl
test
xchg
xchg
or
mov
pop
inc
mov
xchg
lret
outsb
jmp
fidivrl
xor
push
add
ja
loope
jp
mov
lds
or
cmp
mov
je
lcall
add
fdivl
dec
sbb
ja
push
mov
dec
in
adc
loopne
sbb
icebp
lods
push
dec
and
out
outsb
loop
stos
orl
int3
arpl
fdivrs
popa
gs
cmp
nop
inc
enter
jae
jle
jne
arpl
subl
pmaxsw
jae
inc
lcall
push
out
pop
std
ja
popa
scas
mov
orb
lds
das
das
imul
mov
into
insb
add
ret
rcll
call
jmp
mov
test
add
xchg
adc
scas
jns
daa
adc
push
pop
sub
fcmovne
mov
fsubrp
lock
mov
bound
add
xchg
push
or
ret
aas
mov
mov
shll
cmpsb
insb
mov
bound
divb
cs
arpl
mov
inc
xor
pop
cmc
repnz
lahf
sti
mov
push
sub
imul
std
rep
cmp
mov
inc
jne
sub
add
rolb
mov
mov
fs
leave
clc
push
ja
push
mov
dec
and
mov
inc
lods
pop
inc
aas
dec
and
add
pop
icebp
xchg
jb
mov
pop
fisubs
popa
or
fistpl
insb
daa
insl
dec
mov
js
fnstenv
and
cs
xor
loope
cmp
clc
fs
hlt
ljmp
pop
outsb
xchg
mov
sti
jmp
imul
sbb
add
push
stc
dec
or
jecxz
jo
jg
xor
shl
mov
add
xchg
cmpsl
pop
in
push
jno
add
xor
stos
bound
xor
push
mov
adc
lret
movl
sub
mov
sti
sbb
xchg
inc
fisubrl
clc
ja
int
dec
int3
arpl
cmpb
xor
fwait
loop
std
out
in
pop
fbstp
fcoml
add
mov
cmc
fidivl
xor
adcl
inc
pop
push
fldt
aam
insl
imul
jle
and
mov
xor
xor
adc
add
and
test
xchg
dec
xchg
pushf
in
mov
xlat
ret
dec
fidivrs
mov
inc
mov
push
jmp
and
jl
dec
add
lahf
ljmp
push
mov
movb
dec
test
cmc
aam
inc
movntq
mov
sbb
ja
out
in
add
fdivl
xchg
sub
data16
pop
lret
xchg
cld
pop
adc
daa
sbb
sbb
div
pop
push
stc
loop
out
xchg
sub
into
mov
sbb
mov
sub
jmp
jecxz
lods
mov
sbb
and
shl
cmpsl
fwait
xchg
out
into
orl
xchg
pop
aaa
mov
jp
dec
pop
inc
fnstsw
popl
dec
lcall
inc
xchg
shlb
cmp
and
push
push
dec
nop
ret
aam
sub
pop
lds
mov
add
jmp
jp
fwait
in
inc
hlt
pop
cmp
add
fldenv
and
jg
or
jno
sahf
cmp
out
push
addl
loope
nop
mov
push
dec
imul
mov
xchg
ja
cmp
cmc
xor
lcall
dec
in
dec
inc
jmp
test
pusha
fmull
hlt
mov
je
add
icebp
sbb
and
add
ss
mov
and
fstps
dec
fidivs
inc
stc
rorl
inc
repz
mov
icebp
clc
xchg
xchg
imul
add
cmp
xchg
jp
ss
mov
pcmpgtw
dec
shlb
sahf
sub
pop
sbb
jno
cli
daa
jae
and
xchg
add
mov
lods
outsl
or
push
add
popa
jns
xor
das
inc
repz
fwait
js
pop
pushf
sub
dec
lods
lret
rcrl
bound
out
inc
push
pop
scas
mov
loopne
imul
mov
mov
and
xchg
fists
popf
popf
outsl
jae
pusha
jb
loope
mov
jno
ljmp
into
add
mov
adc
sbb
adc
orb
jbe
lret
sub
push
mov
sub
sub
sub
lds
dec
push
gs
in
or
mov
cli
adc
jo
sbb
mov
mov
sub
fs
outsl
mov
es
mov
icebp
dec
dec
lea
subl
fs
add
mov
ss
ficomps
out
mov
xchg
jp
call
js
je
xlat
aaa
adc
aas
popa
in
push
fsub
sub
mov
fstpl
and
push
cld
arpl
icebp
and
add
adc
inc
adc
jl
lods
mov
pushf
ja
imul
xor
gs
hlt
pop
arpl
jb
push
cmpsb
in
cmp
ret
addr16
push
sbb
mov
stc
pop
dec
popa
ss
dec
xor
jmp
push
push
push
adc
mov
fisubrl
cmp
or
leave
mov
push
out
mov
loope
stc
sub
and
jmp
cmpsb
jle
leave
mov
sub
hlt
sahf
sub
jle
lcall
adc
push
push
in
insl
loop
mov
adc
cmp
cltd
adc
ss
das
sbb
enter
add
dec
movl
orb
push
imul
pop
jge
out
xchg
jp
cltd
jg
out
push
xor
std
sbb
ds
nop
mov
in
mov
mov
in
nop
shlb
xchg
and
or
adc
ds
push
add
lcall
xor
pop
xor
lds
add
test
mov
cmp
out
sbb
inc
add
dec
inc
in
insb
clc
shll
pop
fbstp
ds
pushl
add
into
dec
and
outsb
cmp
cmp
dec
xchg
loopne
icebp
sti
ss
sub
sbb
scas
adc
pusha
inc
dec
xor
push
outsb
xchg
or
dec
inc
inc
insb
or
or
fistl
cmp
and
dec
xchg
cltd
ror
popf
stc
inc
xchg
lcall
out
adcl
xchg
inc
leave
int
ljmp
in
jns
dec
mov
pusha
dec
mov
decb
inc
adc
sub
loope
fbld
cmp
fdivs
repnz
dec
inc
int3
cli
add
bound
lcall
fdivs
sbb
int3
pop
lahf
test
push
insb
xchg
ror
aaa
shll
push
dec
mov
cvtdq2ps
xchg
enter
pop
inc
xor
rolb
je
out
push
add
xorb
mov
and
dec
pop
fidivl
mov
pop
inc
aas
jg
push
sbb
lea
insl
idivb
mov
and
mov
int3
xor
mov
stos
or
dec
pushf
adcb
cmp
ror
add
leave
jecxz
andl
in
lcall
out
mov
add
in
shl
push
push
cwtl
notrack
rol
and
fmulp
popa
add
lods
popa
js
lret
lcall
or
nop
cmp
sub
dec
sub
stos
clc
dec
xor
iret
pop
pop
bound
pop
iret
mov
jbe
dec
add
sbb
jle
jle
inc
and
xchg
std
cmp
cmp
sarl
jns
lods
add
orb
pushl
sti
mov
lahf
pop
sub
fcmovbe
push
movsb
mov
sub
or
xchg
jne
stos
fildl
out
xchg
push
pushf
dec
in
repnz
lds
adc
cld
pop
mov
rorb
cmp
push
xchg
pop
outsb
incb
sbb
mov
sub
xchg
aaa
xor
cmpsb
jle
pop
sahf
push
fisubrs
xchg
jb
push
and
jns
add
sbb
and
and
cwtl
push
dec
lods
cs
and
into
jmp
loopne
rorl
iret
or
rclb
stos
lock
dec
sbb
inc
arpl
movsl
orl
mov
cmp
jmp
inc
sti
loopne
enter
adcl
fldl2e
xor
pusha
xchg
leave
gs
jae
data16
testb
cmp
inc
sbb
adc
cmc
jl
inc
push
mov
jg
int
loop
ret
stc
sub
test
ds
xchg
inc
push
mov
loopne
pusha
movsb
rolb
call
cmp
sbb
push
filds
ror
imul
bound
jg
testb
add
and
out
or
mov
jp
cld
loopne
adc
mov
imul
aad
and
xchg
mov
scas
pop
test
push
mov
mov
icebp
xchg
xchg
ljmp
mov
fistl
fsubrs
insb
lret
push
ds
pop
in
or
or
xor
xchg
push
das
mov
into
jns
jl
pop
add
jl
jbe
mov
repnz
repz
jg
inc
imul
xor
cmp
and
rolb
add
fnstenv
jno
dec
fldt
in
xor
test
lods
jno
mov
or
cwtl
mov
leave
push
mov
add
fdivs
movl
dec
stos
out
jb
dec
rclb
mov
out
sbb
lods
inc
mov
mov
dec
push
mov
cmp
mov
xchg
and
icebp
inc
pusha
jne
push
push
rolb
push
andl
hlt
dec
pop
scas
inc
lods
shll
xchg
inc
imul
xor
or
movsb
out
mov
imul
pop
mov
jns
jb
sub
lods
lcall
dec
or
pop
lods
je
les
dec
loopne
push
daa
aad
nop
add
fcom
mov
pop
push
in
jns
jle
sbb
cmp
lea
out
jne
dec
int3
movsl
xor
ficomps
lds
add
jg
in
gs
adc
loop
loop,pn
xchg
dec
cwtl
sahf
test
imul
pushf
mov
xor
call
mov
ficoms
shlb
sub
cli
notb
orb
lcall
mov
std
lods
vmovhpd
xchg
rcr
mov
je
call
jg
add
sbb
arpl
fiadds
sti
cmp
push
scas
out
hlt
stos
mov
hlt
xchg
rclb
pop
jmp
xchg
fptan
mov
jge
imul
mov
mov
or
mov
mov
fnstcw
in
xchg
es
xor
xchg
xor
decb
mov
leave
imul
inc
mov
stos
stos
inc
rep
add
adc
pop
sahf
fildll
fdivp
fs
inc
fadd
rorl
movsb
loope
pop
mov
sbb
lods
dec
xchg
scas
sbb
fdivr
or
in
enter
mov
push
fisubrs
add
dec
fwait
or
or
inc
adc
imul
inc
into
in
pop
push
imul
in
xlat
rcl
int
out
sti
es
aaa
lods
ss
jbe
mov
sub
cmp
sub
lahf
lds
ss
and
js
in
push
popa
stos
les
cmpsb
outsl
jo
or
push
cltd
cmp
sub
in
daa
ljmp
pop
js
mov
fisttpll
dec
push
xor
push
jo
loop
test
orl
jnp
lock
insl
sahf
sub
clc
sbb
pop
clc
push
scas
adc
sub
xor
leave
xchg
push
decb
mov
pop
inc
std
imul
int3
rcrb
cs
add
fwait
mov
xlat
cmp
sbb
icebp
add
repnz
and
mov
or
outsb
andl
pop
cld
cwtl
outsl
cmpsl
dec
pop
popa
mov
int
test
aas
enter
jns
and
and
scas
orl
push
adc
push
pusha
jae
out
jp
fs
mov
mov
pop
movsl
jnp
lahf
scas
out
jo
pop
imul
stos
lock
inc
xorl
popf
pop
fiadds
mov
filds
mov
inc
imul
pop
leave
pop
sbb
daa
int
paddw
inc
jnp
push
mov
in
out
lock
in
add
cmpsl
mov
sub
sti
inc
leave
orb
inc
int
je
pop
insl
rcl
mov
pushf
pop
mov
adc
and
and
or
js
push
cmp
sbb
pop
test
dec
xor
pop
pop
leave
outsl
addr16
mov
adc
adc
test
popw
push
mov
in
dec
push
lea
ja
in
pop
pop
mov
mov
enter
mov
bound
xlat
loop
mov
cmpsb
popf
pop
imul
enter
adc
out
into
or
xchg
push
mov
sub
jae
bound
xor
popa
add
push
cltd
aas
xor
mov
bnd
out
cli
cmp
je
sub
nop
cmp
stc
repz
xor
mov
xor
lods
dec
out
fcoms
fmulp
aas
movsl
shl
mov
aas
sbb
iret
movsb
push
pop
and
mov
les
cld
pop
icebp
or
cmp
sbb
jmp
push
mov
psadbw
jnp
cs
jmp
fidivrs
jp
mov
inc
and
clc
adc
jns
dec
orb
test
insw
sarb
mov
in
arpl
and
jae
pop
jle
mov
dec
pushf
pop
test
mov
jl
aam
test
fst
fmuls
push
shlb
inc
std
inc
stc
movsb
inc
scas
lahf
outsb
je
ss
lock
xlat
insl
lret
testb
arpl
mov
enter
cmp
push
cmpb
push
cli
jmp
addr16
push
out
inc
push
in
repz
xchg
cmp
int3
mov
subl
rcl
int3
scas
scas
mov
mov
test
loope
aam
rclb
mov
scas
loop
jne
push
mov
dec
rcrl
in
add
add
pop
jg
lret
stc
call
push
and
mov
inc
insb
fists
cmp
je,pt
dec
add
in
fs
mov
cmp
lock
inc
xchg
sub
and
adc
outsb
pop
scas
cmp
mov
bound
mov
lock
jae
push
xchg
mov
xchg
iret
mov
cmp
and
enter
push
jo,pt
pop
clc
lret
inc
xorb
adcb
test
jmp
in
mov
daa
lret
xlat
pop
push
mov
cmp
push
jne
ss
cltd
cmpsl
in
push
cmp
imul
fcom
in
or
aad
push
stos
idivl
add
sahf
in
and
scas
fistpll
gs
imul
das
out
cmpl
fs
xchg
clc
mov
pop
iret
sub
push
jmp
int
dec
lds
test
shl
enter
mov
cmp
imul
adc
xchg
xor
inc
insb
lock
sbb
daa
inc
mov
or
aad
jle
popa
inc
xchg
loopne
cmp
ret
dec
ficomps
mov
mov
jl
and
pop
jno
jb
xchg
push
or
xchg
add
mov
scas
in
jbe
outsl
test
stos
das
popf
imul
sub
jp
push
push
xchg
in
adc
test
fidivrs
jmp
shlb
dec
pop
test
push
loopne
mov
inc
sub
ficomps
stos
mov
scas
or
adc
lahf
mov
subb
pusha
repnz
lahf
lods
negl
addr16
cmp
add
and
mov
into
mov
aas
pop
sub
popa
subl
mov
or
mov
bound
cmp
sbb
and
sub
push
in
pop
mov
add
pop
push
and
nop
sti
cmpsb
push
jg
ljmp
pop
jmp
insl
in
jns
inc
mov
pop
in
dec
push
jno
mov
pusha
into
mov
dec
cmp
sub
jb
ja
lds
jecxz
movsl
and
push
testb
mov
mov
adc
jno
andb
pop
pop
jg
mov
xchg
pop
inc
xor
test
in
pop
dec
inc
mov
test
mov
ret
stc
mov
mov
xor
mul
mov
mov
mov
fsub
pusha
or
out
or
stos
cmpsl
repnz
xchg
cmpsb
adc
dec
jmp
inc
mov
add
lods
int
cmp
mov
popa
pop
push
movsl
sbb
adc
cltd
xchg
push
in
ljmp
mov
iret
mov
lods
loope
mov
sahf
xchg
xlat
adc
lcall
sbb
mov
xor
fcomp
mov
das
call
es
cmpsb
push
jno
dec
loop,pt
xchg
mov
ret
daa
xorb
push
popf
pushf
es
push
xor
push
or
call
xor
fcompl
pop
sbb
cld
sub
push
sbb
push
test
bound
into
mov
xchg
push
fnstenv
sbb
inc
and
movsl
mov
pop
mov
pushf
inc
mov
push
xor
add
das
sti
push
xchg
adc
repz
add
pop
adc
pop
leave
xchg
aaa
push
jnp
pop
mov
stc
dec
les
fcmovnu
jno
ds
movsb
test
out
push
inc
xor
push
pop
lret
xor
ret
orl
pop
in
or
imul
or
adcb
leave
pop
sahf
fdivrl
insb
mov
lret
dec
pop
or
loopne
outsl
mov
arpl
icebp
int
inc
dec
mov
xchg
add
push
jnp
mov
stos
sbb
sbb
scas
test
arpl
hlt
adc
cmp
cmpsb
push
mov
stos
add
or
mov
pusha
rclb
mov
cmp
mov
mov
js
nop
pusha
pop
imul
imul
andl
loope
in
xchg
aad
xchg
in
popa
sub
jae
repz
outsl
jle
xchg
outsb
addr16
js
cmp
mov
sub
pop
adc
add
dec
fisubrl
cmp
scas
movsl
pop
lds
xlat
aad
into
pop
cmp
lea
lds
arpl
sub
fidivrl
inc
popa
aam
mov
jno
xor
test
cmp
jge
jae
das
in
xchg
lret
or
pop
xchg
inc
jl
xor
mov
mov
cmp
adc
xchg
and
stc
ret
sbb
pop
aad
cmpsl
fdivl
dec
aad
pushf
jae
mov
xrelease
mov
push
dec
stos
test
fwait
aam
sub
mov
jne
inc
dec
jmp
and
aad
cs
js
popf
pushf
faddp
fists
add
ljmp
xchg
mov
mov
mov
jo
aas
mov
or
ret
in
push
test
fwait
sbb
mov
loop
and
icebp
adc
pop
push
push
ljmp
data16
pop
stc
clc
pushw
es
and
inc
lret
or
iret
mov
je
adc
lea
lock
ret
sti
bound
imul
pop
out
mov
push
pop
addb
enter
pop
aam
or
dec
call
inc
movsb
pop
xchg
push
imul
test
imul
jmp
dec
es
mov
push
dec
xchg
xchg
cli
out
in
inc
xor
lea
xor
mov
sbb
pusha
push
aad
imul
push
ret
or
leave
xchg
scas
push
jb
jecxz
sbb
cwtl
push
stos
jnp
jo
stos
pop
dec
sub
or
jmp
inc
xchg
cmpsl
xlat
pusha
jb
lods
xchg
xchg
xchg
lret
xchg
ret
jmp
ljmp
mov
jg
out
dec
or
idivl
ss
loope
lahf
sub
mov
push
xor
cli
push
andl
enter
or
and
jle
inc
shrb
arpl
stc
adc
pushf
or
fstp
jo
mov
lcall
cmc
cmp
mov
sti
xchg
lret
jo
dec
je
jmp
or
loop
mov
insb
add
or
ret
xchg
inc
and
inc
enter
cmp
iret
scas
push
jns
pand
cmpsl
dec
pop
add
xor
xchg
lock
adc
mov
mov
xor
xor
roll
dec
sub
adcb
push
xchg
jmp
lock
in
lahf
push
mov
jae
push
jmp
sbb
mov
ja
mov
stos
stos
cld
or
xor
xor
fwait
add
loope
push
lret
dec
testb
jo
sub
cmp
clc
aas
or
mov
xchg
mov
dec
sub
inc
das
pop
movsl
pop
xchg
fadds
imul
out
jmp
cmp
jecxz
enter
cmpsb
repnz
or
add
pop
mov
sbb
push
push
in
cmp
or
lock
dec
jo
adc
iret
pop
pushf
clc
pop
mov
push
scas
sub
dec
sahf
lods
lods
icebp
fadd
push
enter
xchg
xchg
shlb
or
call
stos
pop
shr
out
in
ret
mov
pop
mov
andl
cmpsb
hlt
shrl
in
pop
popf
xchg
or
lret
pusha
adc
xlat
insl
mov
push
dec
inc
dec
and
mov
jge
and
adc
adcb
test
sub
pushf
movsl
push
jp
shr
addr16
jne
mov
add
mov
aad
js
mulw
sbb
cli
out
sbb
out
ret
xor
push
mov
insb
add
push
in
sbb
aaa
push
xor
call
mov
test
popf
or
sub
call
mov
mov
dec
aad
scas
movb
and
push
lea
imull
pop
sub
int
push
xchg
sti
mov
jmp
sub
mov
jle
cmc
das
inc
pusha
stos
fyl2xp1
cmp
sbb
xchg
daa
xchg
icebp
and
call
cs
loop
pop
test
push
lahf
xchg
fisttps
inc
jo
aam
dec
pushf
push
xchg
mov
add
jle
mov
lahf
lahf
or
sub
loopne
adc
insb
daa
xchg
or
dec
pop
imul
and
bound
in
push
ret
inc
stc
push
ds
jp
mov
jno
lock
into
jnp
adc
hlt
lock
movsb
rorb
cli
mov
fisttpl
les
ret
lahf
cmp
xchg
cmp
mov
mov
leave
jo
pushf
jns
xor
stc
ffreep
sbb
push
or
push
sbb
inc
mov
aam
or
xchg
or
inc
pop
insb
outsb
pop
mov
fldt
push
jmp
push
ds
xor
jns
lds
mov
lret
sub
add
addr16
leave
or
pop
aad
lea
orl
pop
dec
mov
jle
cmp
lods
ljmp
cmpsb
pop
movsl
es
jae
lds
loope
movq
or
pop
xchg
dec
cmp
bound
mov
push
inc
bound
iret
cmp
sti
jo
jne
aas
push
dec
js
inc
xchg
pop
push
jnp
xchg
sar
jnp
inc
and
stos
mov
loope
std
jmp
and
jmp
xchg
adc
xchg
add
ja
ljmp
je
fs
or
mov
adc
cmpsl
clc
push
mov
mov
lods
fisubl
into
test
fwait
jecxz
push
dec
sub
jp
cwtl
iret
popf
jnp
mov
add
in
in
sub
mov
bound
popa
rcl
call
mov
sbb
test
insl
es
lods
sub
add
jmp
iret
sbb
dec
jge
sbb
inc
cmp
or
add
or
pop
pop
lods
push
add
sub
push
pop
in
xor
mov
movsb
dec
cli
push
lods
mov
jo
mov
fisttps
jge
lods
push
add
push
and
insl
jne
leave
cwtl
or
mov
fwait
mov
test
inc
xchg
push
into
fwait
shll
dec
int
out
aaa
inc
icebp
push
aam
repz
push
push
arpl
test
mov
jecxz
lock
sar
push
dec
jbe
in
stc
sarb
dec
in
das
int3
cmc
in
sbb
pushl
mov
sub
push
adc
sbb
movsl
mov
inc
ficompl
and
pop
bound
pop
into
push
dec
gs
adc
pop
repnz
add
imul
push
dec
shrw
cli
rorl
aad
jo
addl
loopne
movsl
mov
mov
stos
inc
dec
sub
xor
clc
loope
push
outsb
mov
sbb
bound
popa
stos
rcr
test
pushf
inc
mov
call
hlt
lcall
sub
xchg
ret
mov
xor
sbb
mov
lcall
and
inc
and
cmp
dec
cltd
int
pop
or
or
mov
lcall
push
jns
push
addl
cwtl
addl
loopne
mov
mulb
or
pop
push
jp
push
pop
in
cmc
in
mov
and
or
push
inc
sub
dec
inc
inc
pop
xor
xlat
jl
pop
and
test
xor
mov
sbb
test
lcall
test
ljmp
iret
les
xor
out
imul
and
cmp
and
xor
fstpl
arpl
ret
cmpsb
mov
das
movb
hlt
xor
adc
scas
xor
and
movsl
dec
dec
shl
mov
aad
push
fsubl
cwtl
int3
int3
stc
jns
adc
and
enter
lds
adc
mov
sub
and
mov
adc
mov
loope
stc
sbbb
rcl
jecxz
push
repz
pop
push
in
lret
call
mov
scas
dec
sahf
cmpsb
push
bound
outsl
jp
cmp
cmpsb
loope
pop
in
bnd
and
jae
sbb
jb
push
pcmpeqb
mov
inc
jge
add
into
aas
push
inc
pop
cmp
inc
jns
cmp
jl
imulb
or
test
add
loop
insl
sahf
stc
lds
sub
mov
and
ss
cli
mov
inc
xor
mov
sbb
jae
mov
sbb
scas
stos
mov
push
pop
ja
pop
jmp
or
mov
xchg
lock
cwtl
aam
push
sbb
xchg
lcall
jmp
sub
mov
push
jge
rcr
cmp
xchg
push
addr16
insl
sahf
bnd
clc
loope
jle
jo
scas
adc
nop
sbb
inc
mov
decb
cli
jbe
mov
push
mov
and
ret
sub
cmp
adc
dec
pop
in
loopne
ds
cltd
mov
pop
and
add
inc
fistpl
lock
and
pop
xor
mov
add
in
enter
mov
or
lods
adc
jbe
sbb
rol
add
popf
jge
out
aas
popa
in
test
mov
or
movsl
inc
pop
std
ret
or
mov
dec
push
xlat
sahf
ds
sbb
pop
lret
mov
sbbl
lock
adc
icebp
stos
shrl
mov
mov
and
lcall
inc
sbb
out
test
cli
jo
mov
pop
mov
push
dec
repnz
in
cmp
cmp
or
push
insl
mov
popa
sahf
inc
fbstp
stos
out
ret
jbe
shrb
or
inc
sbb
cmp
xchg
push
insb
mulb
jp
xor
test
jae
cmovo
mov
cmp
cwtl
lcall
dec
cwtl
aad
mov
mov
cltd
repnz
xchg
adc
popf
sub
push
add
inc
popa
jmp
sbb
xor
adc
push
movsb
xchg
add
loopne
inc
lret
fildll
cmpsb
cmp
jno
sarl
cmp
dec
lods
scas
pop
inc
lahf
cltd
incl
cmp
out
or
stos
mov
test
sub
mov
xlat
dec
aas
iret
out
sbb
mov
sbb
orb
jge
jae
adc
repz
popf
cmp
jp
aas
mov
mov
fsubr
sub
fistps
lock
xchg
dec
in
mov
push
jno
lahf
sar
stos
cld
adc
xchg
xchg
insl
xorb
test
stos
mov
dec
pop
shlb
test
stos
mov
push
orl
inc
xor
or
adc
xor
fs
push
pop
loopne
dec
hlt
test
fimuls
inc
mov
sbb
mov
adc
jle
out
ficomps
or
imulb
pop
les
sti
hlt
ret
cli
mov
push
loop
aaa
sbb
fmulp
pop
pushf
jl
mov
out
add
popf
aad
xor
lea
sub
jbe
imulb
insb
or
aam
mov
call
jns
cmpsl
mov
ror
mov
cmp
push
pop
ja
cmp
imul
xor
jns
loop
jo
inc
rsqrtps
rclb
or
mov
xchg
mov
push
jge
dec
dec
aas
or
cmp
sub
int3
rcl
jno
pop
repnz
outsb
imul
loopne
mov
jo
loop
cli
negl
adc
cmp
pop
sub
mov
push
push
mov
xchg
or
sub
mov
insl
shrl
jmp
jae
mov
fisttpl
fsts
and
dec
aaa
inc
lods
inc
testb
adc
push
mov
add
push
das
dec
sub
pop
sbb
pop
push
mov
stc
inc
pop
subb
sbb
xchg
inc
sar
mov
in
mov
nop
jno,pt
jle
stos
jae
lds
icebp
imul
shrb
es
inc
or
dec
push
and
dec
outsl
sti
insl
sub
push
inc
into
sbb
xor
hlt
and
sbb
rorl
icebp
inc
cmpsb
inc
cltd
bnd
and
add
push
rcl
notb
push
adc
daa
jae
jbe
sahf
popf
lods
push
push
push
dec
gs
xor
pop
mov
mov
out
out
add
cli
mov
inc
cmp
mov
pop
fwait
add
pop
int
inc
xor
mov
enter
data16
push
sar
fstpt
adc
scas
test
inc
xchg
pop
mov
in
out
roll
outsl
lods
in
lods
jmp
push
jl
bound
sahf
loop
xor
or
push
jle
imul
or
or
lock
scas
dec
adc
sub
ret
mov
push
and
push
pop
loopne
mov
mov
into
xor
shrb
in
aad
out
push
mov
and
ret
inc
imul
sahf
movsl
jecxz
mov
out
adc
mov
fsub
push
pop
fsubrs
adc
cmpsl
push
movsl
inc
in
arpl
sub
pop
pop
adc
ljmp
pop
mov
xchg
cmp
dec
insb
sub
out
push
mov
xorl
xor
pop
cmpsl
test
pop
rcll
cmp
add
arpl
bound
ja
cmp
cmp
jne
jnp
jne
pop
xchg
outsl
lea
or
mov
stc
rclb
inc
jmp
sub
xlat
lock
test
pop
add
sub
lods
mov
sub
addr16
mov
mov
sti
sub
push
hlt
adc
add
cmp
add
outsb
cmp
add
lods
leave
pop
or
xchg
dec
sqrtss
adc
cwtl
add
sti
jne
clc
xchg
mov
movsb
and
aas
movsl
push
orl
inc
out
insl
mov
das
cld
cmpsb
cwtl
and
or
sarb
nop
xor
int3
pop
in
int
sub
jp
pop
loope
cmp
pop
js
cmpsl
pop
or
fwait
ss
lret
jmp
pop
pop
stc
pop
pop
insb
in
out
sub
fcomps
pusha
fdivr
shrb
mov
adc
sub
pop
sbb
arpl
push
add
xor
cld
add
pop
sbb
dec
mov
pop
pop
pushf
test
xchg
mov
dec
and
cmp
notl
rorl
dec
fmuls
xorl
clc
xchg
cmp
fucompp
outsb
test
in
iret
push
inc
inc
pop
and
pop
lcall
push
lock
cmp
arpl
mov
sbb
test
jbe
jl
mov
dec
inc
nop
pop
int
lcall
jb
rcll
std
fdivrs
adc
and
scas
out
das
push
ss
or
gs
cwtl
inc
mov
dec
or
pop
pop
ss
cmp
das
sbb
jb
test
fwait
dec
fisttpl
dec
xchg
dec
mov
cmp
push
xchg
push
ficoms
int
outsb
aas
sub
ljmp
dec
sub
in
push
fcompl
cmp
aam
pop
dec
mov
mov
gs
push
aaa
inc
inc
push
lahf
jmp
push
movsl
mov
xor
adc
pop
cmp
daa
cmp
adcl
mov
inc
gs
sahf
and
jb
aad
jl
test
sub
in
cmpsl
xchg
mov
ljmp
mov
ret
sub
dec
ss
aaa
jle
das
xchg
jmp
hlt
sbbb
insb
pop
out
sub
pop
or
mov
out
insl
out
fs
out
sbb
in
mov
xor
and
pop
mov
inc
out
in
jnp
gs
cltd
pcmpgtw
movsl
mov
stos
loop
test
inc
pop
testb
outsl
push
rorl
jmp
outsl
clc
mov
mov
lret
lods
jb
push
pop
outsl
cmpsl
add
std
inc
add
jl
mov
cmc
xlat
pop
dec
pop
sbb
test
fdivs
push
daa
daa
lods
jp
dec
jmp
mov
js
lock
fwait
adc
and
adc
insl
pop
jb
cld
pop
or
adc
push
xlat
mov
or
fmulp
jbe
mulb
movsb
cmovnp
jg
inc
test
sar
icebp
adc
sub
xlat
cmpsl
sbb
movb
push
add
dec
repz
pop
std
fiadds
jbe
cwtl
iret
pop
pusha
and
cmp
adc
jg
xchg
jno
stc
push
mov
sub
inc
sbb
sub
sbb
stc
lea
or
pop
pop
dec
ss
jns
out
and
pop
std
sarb
dec
je
jbe
loope
js
lds
inc
mov
pushf
fildl
mov
mov
lods
and
bound
ds
pop
sbb
add
mov
jle
push
xchg
adc
out
push
cmpsb
pop
mov
adc
lahf
jne
mov
push
xor
dec
pop
repz
out
clc
fildll
popa
push
push
mov
sub
add
jno
cmp
mov
subl
xchg
and
pop
push
jg
fisubrs
jbe
int3
call
sub
imul
popf
xchg
mov
bound
lea
into
xor
push
inc
add
jp
pop
data16
or
and
je
loopne
pop
out
pmullw
sbb
mov
jb
sbb
insb
push
hlt
jmp
out
fcompl
jl
call
and
or
cwtl
add
push
cmp
or
inc
push
cmp
pop
lock
and
mov
dec
mov
cli
addb
aad
rcrb
repz
mov
xor
mov
adc
jp
jp
push
jo
pop
testb
push
js
lods
pop
mov
jnp
inc
cltd
pop
movsl
inc
jge
out
jae
lret
ret
or
shll
push
jg
mov
jns
int
les
xchg
ds
or
inc
dec
outsl
jge
insb
xor
push
scas
mov
jnp
jnp
aas
mov
call
sub
out
push
cmpsl
movsb
sbb
jae
mov
data16
cmp
outsb
out
fldenv
push
lcall
fadds
dec
push
inc
into
add
xor
sub
repnz
xchg
iret
pop
scas
mov
push
xorb
xchg
inc
aam
fmull
test
les
nop
aad
push
push
xchg
mov
and
jnp
or
call
aam
adc
arpl
xor
hlt
dec
aad
lret
add
test
jl
jp
cmc
mov
loope
das
mov
dec
fwait
in
push
imul
xor
mov
and
movsb
cmp
xor
roll
add
data16
pop
adc
push
pop
cmc
fdivs
mov
popf
sub
test
pushf
cmp
mov
sbb
sub
dec
pop
push
mov
jge
xchg
adc
and
xchg
sub
dec
xor
cmp
cs
pop
sti
out
addr16
aas
xor
andl
jle
rcrb
jne
pop
imul
mov
lock
out
mov
xor
add
test
in
xor
js
call
shlb
xchg
mov
mov
mov
ja
enter
loopne
push
ret
in
push
in
sar
mov
test
inc
pop
imul
jnp
sbb
cmp
mov
xor
xchg
lods
out
or
popf
stos
pop
call
or
jbe
mov
lea
mov
call
jno
xchg
call
add
xchg
divb
into
popa
mov
or
inc
adc
cmpsl
lods
adc
les
cmpsb
cmpsl
out
xchg
pop
mov
jmp
clc
stc
test
std
lret
push
dec
adc
loope
inc
sti
jg
mov
fnstenv
icebp
cwtl
mov
sub
cwtl
cmpsl
adc
mov
push
in
mov
xor
stos
or
insl
cld
xchg
sbb
mov
nop
fstps
shrb
repz
adc
jmp
cmp
cli
jg
dec
jnp
push
sti
mov
and
mov
sub
and
dec
sub
movsb
pop
icebp
mov
lret
inc
bound
mov
pop
hlt
xor
or
cmp
mov
fldl
fmuls
mov
mov
sarb
addb
dec
dec
cs
shl
shrl
push
add
rclb
cmpsl
xor
sub
sub
test
cli
aad
mov
pop
pop
push
sub
aam
sbbl
add
push
dec
sub
leave
fmull
sahf
pushf
fdivs
lret
int3
push
es
cmpsb
sub
add
inc
xchg
test
jno
test
imul
rclb
vpavgb
push
xchg
or
pushf
pushl
outsl
iret
js
dec
cmpb
sub
into
movsb
jmp
orl
xchg
es
cmp
dec
sub
jp
movsl
out
lcall
push
mov
mov
push
imul
fnclex
int
fists
inc
dec
mov
lods
xchg
lahf
fimuls
in
add
cmp
xor
addr16
aad
adc
adc
fs
hlt
mov
xchg
inc
sbb
xadd
cmp
call
add
nop
jle
test
or
add
and
call
add
add
mov
das
nop
imul
test
adc
jb
in
sub
pop
shll
sub
mov
fldl
je
pop
push
cmpsb
sbb
sti
addr16
lahf
pop
in
jno
sbb
pop
mov
lret
cmp
cmp
mov
adc
or
and
mov
fistps
dec
js
mov
xor
pushf
jge
push
sti
dec
push
fstp
jno
jae
aad
test
pop
inc
push
rcr
cmp
jge
cmpsl
fstpt
or
stos
push
adc
cmp
jnp
pop
and
and
cmc
jno
push
and
dec
test
xchg
dec
lret
leave
sbb
dec
adc
out
xchg
loop
xlat
or
mov
or
pop
out
xchg
call
mov
lahf
sbb
jae
inc
mov
mov
mov
mov
pushl
stos
xor
cmp
mov
pop
push
push
outsb
filds
mov
rol
popf
ja
push
add
mulb
int3
or
iret
fsubrl
xchg
ds
stc
lret
jbe
xor
jle
int3
jg
jbe
dec
movsl
repz
cmp
pop
repz
inc
mov
gs
addr16
dec
movsl
pop
sbb
test
in
sbb
lcall
lahf
popf
mov
sbb
push
arpl
mov
inc
mov
mov
mov
mov
mov
pop
push
lahf
cli
inc
js
or
mov
testl
add
leave
fsub
stc
dec
push
bound
sbb
gs
jmp
add
ljmp
dec
pop
mov
mov
xor
mov
gs
adc
mov
out
xchg
dec
push
jno
mov
xchg
xchg
add
scas
inc
pop
aad
sub
inc
mov
jp
mov
mov
jae
inc
or
test
mov
insb
icebp
data16
movaps
jns
scas
xlat
fsubrl
jl
mov
mov
orl
loopne
hlt
gs
stos
rolb
xor
sahf
push
movsb
movl
dec
sbb
sbb
or
mov
imul
test
xor
jmp
call
xor
out
lahf
fsubl
data16
jg
ljmpw
mov
das
lods
pop
adc
inc
jle
mov
in
cmp
push
test
addr16
sub
or
push
xor
inc
orb
add
adc
out
out
sub
cmc
ret
stos
dec
aas
inc
mov
add
jae
pushw
arpl
xchg
mov
pop
mov
sub
cmp
mov
rolb
lahf
imul
data16
imul
in
sbb
inc
dec
jmp
sub
mov
sbb
loop
leave
nop
jae
loopne
adc
or
das
adc
mov
add
xchg
fadd
lahf
jmp
cwtl
and
rcrb
pop
jne
jecxz
test
fucomp
jae
jbe
inc
and
mov
nop
fldl
sbb
rcl
xchg
repnz
jl
mov
sub
push
je
add
movsb
lock
mov
pop
mov
jns
js
inc
lods
add
call
mov
jnp
sahf
aad
add
dec
and
aam
cmp
pusha
mov
mov
sbb
fnstsw
push
mov
add
mov
mov
aas
xor
mov
mov
mov
and
mov
jb
sti
pop
push
jnp
out
inc
mov
mov
icebp
das
add
adcl
or
sub
dec
pusha
and
fimuls
xor
fistpll
shr
mov
inc
push
dec
sub
xchg
xchg
jp
stc
sbb
scas
stos
jle
stc
loop
cltd
scas
sub
pop
movsl
push
cmc
xchg
hlt
and
js
mov
aaa
lahf
dec
mov
in
sbb
sti
fldcw
sbb
xorl
xor
in
in
iret
mov
adc
push
inc
sbb
mov
cmpsb
inc
mov
jmp
fs
fwait
pop
and
adc
mov
daa
mov
xchg
cmp
sbb
in
push
imul
mov
jge
xor
loop
adcl
test
imul
mov
push
dec
sub
jp
sbbb
jns
mov
or
push
les
mov
sbb
std
and
out
notb
dec
int
mov
stos
mov
dec
sub
jl
dec
mov
sbb
push
lock
stc
jo
cmc
hlt
xchg
mov
jle
fiaddl
cmc
adc
inc
sbb
pop
dec
pushf
jecxz
dec
and
popa
add
ret
mov
pop
cs
sbb
scas
jb
xchg
int
enter
pop
loope
loope
jne
shl
and
lock
mov
cs
or
xor
or
repnz
sbb
cli
pop
xor
call
jg
lcall
mov
in
inc
push
mov
pop
and
mov
hlt
scas
scas
lahf
mov
mov
and
daa
add
inc
repz
or
xchg
mov
mov
or
lahf
out
xor
sub
jbe
das
andb
bound
mov
jae
mov
daa
mov
repz
test
mov
nop
es
lahf
fcoms
sti
mov
into
stos
mov
mov
xor
out
lcall
scas
inc
es
clc
imul
cvtps2pi
cmp
mov
ss
adc
dec
and
insb
pop
sbb
ljmp
mov
arpl
cmp
pusha
and
test
mov
mov
xchg
and
cwtl
cld
xor
sub
testb
scas
movb
dec
pushl
push
ljmp
cmp
test
icebp
sub
les
fs
xor
inc
push
out
xor
xor
int
push
or
and
inc
cmpsl
in
adc
jmp
push
jl
cmp
int
sub
mov
daa
mov
ret
push
pop
jecxz
and
xchg
mov
jae
repnz
mov
push
inc
into
mov
sub
sbb
mov
push
pop
jge
test
lea
xchg
jb
outsb
mov
cld
cmp
sti
sbb
mov
xchg
je
outsl
scas
aad
cmc
incl
cmp
int3
negb
cmp
pop
and
xchg
mov
pop
data16
mov
jecxz
cmp
sbb
fldl
pop
xor
mov
or
fwait
xchg
rorl
sub
ss
push
cld
adc
xlat
xchg
mov
jnp
cmp
sbb
xchg
lcall
adc
repz
sbb
cmp
ds
pushf
mov
cmp
into
push
mov
into
xor
cmp
stos
pop
add
dec
cmpsl
imul
pushf
movsl
adc
xlat
fisttpl
fsub
mov
rcrb
xor
xchg
xchg
add
aaa
pop
sbb
ret
mov
mov
test
leave
out
sti
cmc
inc
jbe
inc
or
insl
fs
rcll
cmpsb
stos
clc
and
lods
mov
cwtl
adc
loope
or
jnp
aaa
inc
insl
shrl
enter
test
xchg
dec
mov
jnp
sub
inc
xor
jg
add
std
xor
push
lret
clc
fbstp
lods
mov
sbb
mov
shrb
xchg
xchg
out
mov
test
xor
xchg
jns
mov
inc
pushf
add
test
fwait
cmp
sub
sbbl
fcomps
test
cmpsl
popa
test
jns
push
dec
mov
xchg
and
pop
push
loopne
sahf
fwait
or
mov
bound
fiaddl
movsb
sbb
jo
stos
mov
jg
aas
cmp
dec
cmpsl
pop
ficomps
shl
pop
fisubl
clc
loop
cmpsl
adc
lret
gs
cmp
or
adcl
js
jnp
jne
pop
aaa
dec
pop
gs
stos
mov
jo
fbld
mov
mov
imul
push
bound
push
in
cld
movsb
mov
xor
fmul
pop
adc
loope
loop
inc
daa
stos
fistpl
push
sbb
dec
sub
pop
cmp
shll
lcall
punpckhwd
je
xchg
icebp
movsb
or
lret
adc
test
push
jl
in
and
jo
mov
adc
bound
jnp
push
inc
lods
in
lcall
in
dec
or
push
scas
inc
fisttpll
push
sarl
mov
enter
sarb
in
mov
test
ljmp
sar
push
movsb
xchg
lcall
xor
aaa
cmp
das
addr16
and
jbe
fs
mov
jp
scas
lea
push
mov
jo
pop
addr16
sbb
aam
sbb
or
enter
push
cmpsl
add
fidivl
outsb
in
ss
xchg
adc
and
lods
in
push
outsl
sbb
popa
lea
and
movb
aaa
add
mov
xchg
or
test
or
stos
jecxz
xchg
push
jno
and
inc
loope
inc
push
add
dec
jns
mov
int
cmp
jae
xchg
pop
mov
cmp
xchg
pextrw
test
movsl
lock
dec
popf
pop
cmp
jbe
enter
dec
popf
out
lret
lods
sub
js
push
jmp
cltd
pushl
adc
loop
inc
arpl
push
mov
clc
out
sub
dec
add
lds
pop
imul
mov
sbb
rorl
add
push
data16
mov
outsl
and
ja
scas
mov
sti
fdivp
rorb
idivb
xor
xchg
test
inc
insl
mov
fmull
and
sbb
dec
mov
dec
stos
xor
in
mov
dec
lret
sbb
cwtl
jmp
sarl
push
ss
xchg
push
andb
sbb
push
mov
adc
push
or
pop
or
popa
sbb
xchg
outsb
mov
push
mov
ss
sbb
xor
in
dec
testb
pop
leave
sbbb
add
je
lea
and
jnp
scas
pop
adc
inc
ljmp
mov
push
cltd
inc
int
pop
ret
xchg
push
push
push
sub
nop
ss
dec
pop
pop
jmp
sahf
xchg
cmp
dec
cwtl
fwait
pop
clc
jecxz
out
addr16
test
xchg
loopne
sarl
loop
test
add
scas
jbe
xchg
cmpsl
push
pop
scas
movsb
test
push
jne
inc
mov
jbe
cmp
mov
xchg
std
jg
sti
rcl
push
xor
adc
mov
or
push
aad
sub
inc
je
xchg
xchg
mov
push
stos
movsl
cltd
imul
mov
push
test
in
or
mov
icebp
dec
add
mov
pop
xor
pop
iret
mov
aaa
icebp
nop
cmp
dec
or
lcall
push
mov
movsl
pop
or
sub
push
add
icebp
jnp
jle
je
dec
or
lock
lcall
sub
nop
xchg
hlt
icebp
jecxz
fwait
mov
lcall
daa
pop
movsb
add
loopne
adc
fprem1
mov
jae
and
fld1
pop
data16
push
int3
push
lea
jo
mov
mov
into
scas
imul
lods
push
and
mov
lcall
sbb
and
dec
das
mov
add
fwait
hlt
lcall
jmp
mov
push
dec
or
push
jae
or
scas
repnz
int3
scas
jge
dec
jno
lock
pop
add
sbbb
hlt
xchg
dec
jns
scas
push
jns
or
adc
in
repnz
aam
les
int3
xchg
push
pop
jg
bound
lods
pop
adc
mov
fisttpl
mov
shlb
repnz
mov
pop
jne
pushf
std
call
jns
mov
mov
mov
aam
roll
ja
int3
pop
insl
scas
call
xor
mov
enter
mov
imull
and
icebp
into
insb
mov
lret
xor
out
mov
or
out
lds
pop
out
leave
xor
pop
adc
push
jo
cld
xchg
jp
push
inc
jge
sub
mov
cmp
jle
movsb
js
pop
es
pop
lds
dec
es
fdivl
sbb
mov
push
dec
jecxz
loop
sti
xchg
dec
sbb
jle
test
xchg
lock
mov
cmp
sahf
in
jecxz
inc
add
jno
rol
outsb
data16
call
hlt
in
xor
clc
adc
xor
bound
lahf
xor
xor
mov
mov
aaa
jb
lret
mov
push
shlb
out
push
push
sub
adc
popa
loop
ljmp
fstpt
cwtl
mov
pop
insl
sub
mov
fistps
sub
and
ficomps
sti
xchg
pop
addr16
inc
jnp
pop
and
jnp
repz
mov
xlat
jne
xchg
fsub
jbe
lds
mov
aaa
and
je
fisubrs
sub
ds
int3
mov
pop
add
cmc
aas
addr16
sbb
mov
dec
in
pushf
or
sub
inc
add
rolb
shlb
add
ss
mov
pop
scas
jmp
pop
mov
dec
testl
int3
ja
movsl
mov
mov
sti
cmp
loopne
jb
aas
cwtl
repnz
pop
data16
mov
add
xchg
xchg
loop
adcl
lret
xor
push
mov
daa
filds
cmp
push
lods
outsb
imull
xchg
stos
jns
or
ficompl
pop
fmul
or
push
aam
and
sub
xor
pop
out
adc
mov
aad
sub
lock
xchg
movsb
mov
and
jp
sbb
push
and
mov
jecxz
dec
subb
mov
add
mov
in
mov
mulb
fwait
inc
dec
mov
nop
sub
popf
cmc
iret
inc
sub
cld
lds
cmp
cmc
imul
lods
jmp
in
bound
mov
aad
add
jne
mov
pop
icebp
or
push
mov
lds
gs
pusha
int
mov
into
int3
cmp
mov
stc
add
out
testb
cs
ret
icebp
scas
jmp
gs
cmp
ljmp
sti
push
jmp
and
jmp
shrb
hlt
inc
mov
xor
xor
push
fidivrs
mov
mov
cmp
adc
enter
jb
mov
pop
rcr
shll
and
in
sub
adc
and
jmp
dec
sub
xchg
and
loop
arpl
sbb
test
roll
fucomi
das
lods
rcl
scas
ror
insl
aam
pop
adcb
int3
hlt
es
sub
mov
push
xchg
roll
mov
sbb
out
mov
ret
sbb
jecxz
push
cmp
push
cs
arpl
xchg
dec
int3
aas
adc
push
mov
ja
icebp
shlb
inc
addr16
rcrl
fisubrs
int
out
in
pop
sbb
dec
clc
push
lock
lods
fistpll
pop
push
mov
mov
rclb
mov
mov
mov
test
cmpsl
scas
or
adc
and
cmp
add
ja
daa
sahf
iret
cld
sarl
jmp
movsl
jbe
popa
adcb
dec
add
dec
inc
cmp
mov
movq
loop
pop
aad
cli
push
jmp
mov
dec
jbe
int
lahf
lock
leave
sub
push
mov
into
imul
sbb
jmp
xchg
daa
and
les
xchg
inc
xor
sub
xlat
adc
ljmp
pusha
mov
js
inc
push
jbe
cmp
xchg
scas
mov
add
and
adc
mov
aad
cmp
or
sbb
sbb
clc
ljmp
dec
dec
hlt
icebp
imul
into
scas
mov
inc
add
or
push
fsubrl
repnz
or
adc
aad
inc
lret
mov
movsl
mov
arpl
jmp
enter
mov
xchg
fwait
pop
pusha
test
pop
loope
outsb
dec
pop
sbb
push
lds
lret
inc
lods
call
or
adc
repz
add
push
out
push
cld
loope
jo
cmp
and
daa
lock
hlt
jno
mov
ret
add
scas
mov
out
in
xlat
fdivl
sub
pushf
mov
pop
in
mov
lahf
cmpsb
mov
push
cmp
fildl
cmpsb
inc
gs
fldt
pop
cmp
sbb
test
and
int
pop
repnz
lcall
dec
and
dec
mov
add
out
xchg
xor
leave
outsl
dec
loop
cli
faddl
sub
adc
xchg
jg
dec
subl
mov
pop
or
adc
out
add
das
test
out
adc
cmpsl
rcrb
fstl
xor
add
and
mov
lahf
icebp
mov
pop
lea
cli
mov
addb
and
xchg
add
inc
repz
xchg
push
adc
xorl
int3
sbb
cmp
inc
imul
pop
mov
jnp
inc
mov
daa
rclb
idivl
out
shll
jno
pop
fildll
jb
divb
fcomps
fidivs
dec
lcall
lahf
out
in
add
lods
push
shl
das
arpl
lret
adc
es
and
imul
or
mov
dec
jo
hlt
or
ja
mov
shl
push
stos
aaa
xchg
lock
addr16
in
xchg
pop
dec
jmp
outsb
xchg
mov
jne
jecxz
mov
loope
loope
jge
test
jg
lods
aas
mov
mov
jo
lea
cmp
push
pop
or
add
or
adc
push
mov
sbb
enter
aam
out
outsb
imul
das
imull
mov
std
insl
or
movsb
adc
xchg
pop
out
xlat
push
lock
mov
mov
cs
xor
xchg
cmp
cmp
mov
mov
pop
adc
and
add
cmp
je
sahf
hlt
add
pop
gs
xchg
mov
rorl
rorb
out
daa
fildll
pop
icebp
add
je
push
sub
add
fcmovnb
loopne
adc
xchg
test
loope
in
xchg
ja
ret
xor
popa
test
daa
jge
inc
xlat
sub
cmc
repnz
dec
mov
cmp
sub
adc
fxtract
iret
mov
cmp
das
cld
push
daa
ds
scas
iret
mov
mov
mov
movsl
dec
mov
lahf
or
outsb
mov
add
fists
clc
lods
int3
adc
add
cmp
mov
pop
add
clc
testb
sbb
shrl
lock
mov
jo
jl
pop
js
ja
push
std
scas
lret
jo
ja
and
and
pop
stos
mov
mov
incb
add
xorb
shlb
fs
mov
mov
xorb
in
push
push
adc
adc
dec
and
cltd
repnz
and
filds
mov
inc
adc
dec
bound
sub
jle
jmp
popa
rcr
rcll
cwtl
faddl
stos
and
cltd
subl
push
cmp
les
int
sbb
test
xlat
aad
out
sub
push
jnp
ds
and
nop
in
lods
sub
pop
leave
xchg
in
cmpsl
jp
pop
lret
test
or
loop
sub
lret
aas
mov
in
scas
mov
rorb
jge
shrl
addl
xchg
jbe
popa
aaa
push
add
cmp
lahf
shlb
inc
jle
in
mov
xlat
pusha
sbb
lahf
dec
mov
jb
jo
push
stc
and
or
push
xchg
or
mov
add
js
and
cwtl
pop
mov
iret
and
sbb
push
out
testl
shl
cmp
fimuls
dec
hlt
in
inc
jecxz
dec
adc
aas
sub
push
xchg
inc
ss
mov
mov
xlat
fwait
add
mov
pop
into
inc
push
in
mov
jnp
mov
dec
push
inc
add
rorl
movsl
and
xor
dec
push
pop
inc
call
xlat
repnz
gs
outsl
into
sbb
push
or
sub
pop
stos
xchg
and
rorl
sbb
cmpsb
dec
repz
dec
xor
sub
test
and
data16
enter
jl
test
jl
pop
incl
xor
xor
xor
int
ds
ja
mov
and
nop
out
shrb
or
gs
add
push
cmpsb
sti
and
andl
push
jb
mov
mov
cmpsl
xchg
jge
lcall
movsb
xor
mov
adc
mov
xchg
je
addr16
push
fwait
add
pop
ja
add
imul
add
lea
sub
cmpb
outsl
shll
fs
cmp
fwait
stos
and
cmp
fistl
dec
stos
aam
mov
and
stc
ds
mov
mov
xabort
es
adc
ljmp
aas
xchg
aad
mov
ror
insb
rolb
jge
mov
ftst
inc
or
mov
rolb
scas
aas
jg
and
adc
shl
repz
jle
js
or
jbe
and
add
jmp
mov
jp
popf
mov
dec
push
in
movsl
outsb
cmp
push
push
movsl
xchg
std
lods
lock
sbb
pop
sub
pop
sub
push
adc
jne
popl
adcl
mov
lcall
mov
fidivl
or
stos
jno
inc
mov
inc
lds
hlt
push
mov
clc
xchg
inc
clc
push
lahf
pushf
loopne
sbb
lcall
sar
add
xor
mov
lock
add
stos
and
cwtl
mov
addr16
inc
push
lods
push
and
pop
lcall
out
jle
roll
sarb
ss
add
ljmp
jge
dec
pop
mov
cli
lods
les
jle
xchg
inc
pop
xor
adc
leave
pusha
scas
pop
mov
adcl
sub
pop
xor
stos
call
faddl
cmp
shrb
and
or
iret
xchg
notl
inc
test
push
push
add
out
mov
xor
fadd
dec
imul
sub
jno
lods
or
or
fmul
cwtl
mov
or
jne
loopne
insl
sbb
or
in
sbb
mov
xor
adc
andl
mov
icebp
scas
scas
cmpsb
fidivrl
scas
cmp
mov
fmulp
hlt
xor
push
inc
jnp
xchg
inc
outsl
imul
fs
repnz
repz
jae
sub
sbb
out
mov
mov
sbb
cmc
lds
rol
xchg
shrb
fdivs
lock
pusha
mov
pop
add
mov
int
pop
sbb
sub
mov
pop
jmp
mov
jo
roll
sbb
xorb
ret
cmp
cmp
scas
outsl
mov
mov
adc
mov
mov
sarb
pop
hlt
out
loop
jle
pop
icebp
mov
mov
dec
rcl
call
inc
clc
inc
push
sub
and
xchg
dec
dec
sbb
repnz
aas
fildl
nop
aam
cmp
push
push
push
sahf
inc
cwtl
sbb
add
or
mov
lret
mov
rcll
dec
dec
ja
sub
adc
loop
lock
and
inc
xor
xor
lock
bound
cmovg
aam
gs
xchg
pop
sti
push
cli
mov
mov
addl
stos
shll
out
sti
ret
mov
cmp
ja
aam
idivb
fisubs
jbe
jp
and
or
sar
push
ret
cmpb
out
clc
arpl
xor
mov
notl
xchg
push
mov
mov
mov
jno
adc
lods
inc
add
imul
and
and
xchg
loope
jle
or
mov
int3
xlat
es
add
or
dec
lock
fistpll
out
xchg
icebp
xor
cmp
jg
cwtl
xchg
or
jp
push
push
sub
pop
andl
call
shll
es
and
stc
rolb
stos
pop
pop
mov
dec
xor
stos
mov
pop
and
mov
add
cwtl
les
mov
fwait
out
or
test
pop
iret
push
xor
sbb
subl
jg
popa
and
shrb
push
enter
pop
inc
push
mov
add
push
lahf
mov
sbb
movsb
mov
push
daa
push
inc
movsl
fsub
scas
sbb
xchg
mov
xchg
adc
sbbb
mov
and
iret
push
call
add
popl
sti
mov
testl
mov
jns
adc
ja
pop
pushf
lret
daa
push
shlb
add
in
in
sbb
xchg
aad
mov
sub
cli
add
inc
mov
cwtl
mov
ss
sub
mov
pop
scas
test
jp,pn
jmp
incb
and
xor
shlb
les
subl
push
in
cmp
sarl
pusha
cmp
and
mov
fucomip
fistps
outsl
fidivrs
xchg
sbb
add
insl
cmpsb
lret
inc
and
jo
incl
push
repz
dec
adc
mov
or
adc
test
outsl
fadd
mov
cld
and
sub
test
mov
popa
xchg
incb
push
out
mov
fimull
sub
sub
jge
sbbl
dec
mov
xor
inc
mov
pop
jp
out
mov
es
dec
xor
or
xchg
jmp
in
push
cmp
and
fcoms
push
loope
sub
int
shlb
inc
jnp
mov
pop
repnz
mov
test
push
push
adcb
lcall
mov
das
dec
shl
sub
inc
and
inc
ds
scas
dec
xorl
jge
ret
int3
lock
mov
mov
xor
mov
sbb
aad
or
scas
stc
mov
mov
mov
sar
jb
jle
decb
lea
js
stos
stc
sbb
fsubr
push
testl
test
mov
dec
push
lods
adc
inc
jne
inc
dec
push
push
icebp
test
xor
inc
jb
cwtl
or
clc
data16
push
jbe
dec
stos
sbb
mov
sbb
xchg
mov
add
shll
xor
mov
pop
orb
js
lahf
hlt
aam
fisubrs
fildll
mov
sub
cmp
adc
pop
adc
inc
std
jmp
xor
ja
ja
mov
pop
pop
test
xor
xor
test
jne
and
sub
or
bound
xor
mov
loop
xor
rolb
repnz
idivl
cmp
fldl
pushf
mov
mov
pop
andb
aaa
jecxz
lcall
addr16
jge
pusha
xor
xchg
sbb
jo
mov
mov
xor
addl
sbb
arpl
pop
sbb
adcl
add
adc
bound
jecxz
repz
push
inc
cltd
mov
adc
and
xor
xchg
dec
imul
int3
xor
dec
je
dec
mov
push
pop
sub
fsubl
dec
mov
jmp
xchg
xor
je
pop
push
adc
and
popf
imul
mov
into
or
scas
cmpsl
push
add
add
in
or
inc
icebp
popl
sarl
imul
cwtl
outsb
popa
cli
and
pop
cld
adc
aas
add
push
jecxz
jbe
pop
scas
fcmove
xor
cmp
push
mov
push
push
jne
cmp
jno
cld
jecxz
icebp
call
dec
jnp
sub
ljmp
je
add
filds
fiadds
sub
or
repnz
cmp
or
sub
pop
stos
or
nop
iret
mov
mov
cmp
inc
testb
test
jmp
sub
pop
daa
inc
repz
out
inc
fstpt
pop
rclb
inc
insl
cmc
pop
pusha
push
cmp
xchg
or
out
and
cltd
and
es
cmc
dec
pop
mov
sub
nop
cmpb
ljmp
into
mov
stc
shll
cmp
repnz
mov
adc
stos
hlt
in
or
sbb
xchg
shrl
pop
scas
add
mov
test
dec
movsl
jl
into
lahf
shl
je
rcrl
dec
xchg
mov
adc
jp
push
das
mov
test
outsb
call
sahf
mov
int3
dec
jle
mov
push
jb
push
shr
js
inc
mov
fwait
jb
test
sti
test
outsl
std
out
mov
sub
xchg
subb
mov
aad
jno
hlt
xor
sub
bnd
popa
sahf
cmovge
sub
fcoml
jle
pop
jle
loope
add
popa
or
lret
mov
sbb
test
jmp
mov
inc
and
sbb
lcall
fwait
scas
push
xchg
in
in
dec
mov
popa
bound
jnp
xchg
xchg
cmpl
adc
pop
adc
mov
iret
jg,pt
inc
cmp
fcomip
lods
insb
stos
hlt
test
push
imul
rcrb
shlb
mov
mov
loop
sahf
repnz
cltd
insl
mov
loop
jnp
mov
ja
out
addr16
scas
pusha
je
jle
je
xchg
rcrl
xor
mov
pop
das
pop
ljmp
stos
cli
test
mov
lahf
fldt
jp
popa
inc
inc
xchg
and
popf
insl
pushl
rcrl
dec
sbb
cwtl
mov
push
int3
lods
mov
aas
sbb
shrb
lcall
add
pop
sub
aas
ror
gs
xor
xor
stc
imul
jecxz
ret
sub
and
mov
sar
sbb
out
cmpsl
shl
xchg
push
les
or
mov
daa
sbb
mov
inc
stos
arpl
rcll
xchg
cwtl
xchg
add
int
ja
and
or
clc
test
jb
arpl
test
mov
jmp
aas
mov
mov
lods
dec
out
cwtl
fbstp
sbb
or
xlat
imul
clc
pmaxub
imul
xchg
mov
leave
sarl
push
cmp
cmp
ret
xchg
sbb
daa
div
xchg
mov
mov
xchg
mov
ss
rep
aam
ret
inc
push
adc
pop
in
pandn
mov
out
mov
rcr
add
gs
lods
xor
push
jne
insb
push
xor
mov
test
cli
dec
jmp
jne
jp
in
stos
shlb
push
les
mov
and
xlat
ret
icebp
mov
js
and
cltd
sarl
int3
mov
outsb
push
loope
sbb
shl
fsubl
inc
les
std
loope
xchg
mov
mov
int
es
xorb
pop
adc
fstl
sub
addr16
jge
cmp
cmpsb
mov
ja
test
aam
jg
rolb
aaa
xor
mov
lahf
push
mov
outsl
mov
push
inc
mov
data16
jno
cltd
aaa
les
cmp
loope
add
mov
fstsw
jge
dec
std
mov
loope
inc
mov
shlb
xchg
sub
xchg
mov
cmp
inc
mov
mov
je
dec
xchg
push
aam
xor
mov
fscale
fldenv
loopne
fsubrs
push
jb
leave
pop
cwtl
int3
cmp
mov
scas
adc
sub
in
out
pop
test
pop
outsl
dec
mov
jecxz
jne
mov
inc
mov
xchg
popf
cmpsl
mov
jmp
cmpsl
dec
add
out
icebp
pop
jg
je
xchg
pushf
xor
sub
loopne
pop
loopne
xor
dec
les
popf
aas
fnstenv
mov
repz
xchg
inc
push
and
fdivrs
xchg
divb
rclb
lods
adc
cmp
nop
or
xchg
sbb
lock
or
les
ret
fsubrs
insl
in
pop
lcall
xchg
sbb
pushf
addl
push
cmp
mov
popf
lret
adc
mov
std
jb
push
push
xor
hlt
cmp
add
bound
stos
div
je
fs
shl
inc
and
dec
loop
mov
sub
mov
aad
andb
and
mov
pop
subb
lret
jge
mov
mov
testb
stos
adc
jbe
adc
jge
test
add
ja
clc
and
pop
repnz
push
fdivs
fstp
call
push
scas
sbb
push
int3
push
inc
xorb
dec
ret
lock
mov
xchg
push
pop
fbld
pop
add
cmp
cmpsl
mov
adc
xchg
pop
ds
dec
orl
sbbb
inc
dec
jl
movq
call
shrl
mov
mov
push
pop
push
inc
fcompl
arpl
pop
loop
sbb
adc
xor
stos
pop
scas
addb
jnp
stos
jp
pop
popa
jnp
pop
xchg
loope
cli
pop
dec
mov
jbe
mov
out
mov
cmc
push
out
sbbb
jg
pop
ret
dec
pop
jae
in
jecxz
std
out
pop
cmpsb
pushf
add
fnstcw
pushf
aad
or
movsl
pop
fsubs
xor
and
lret
mov
adc
cmc
mov
and
lods
repz
or
cld
push
mov
xchg
mov
or
insb
lahf
rorb
mov
adc
es
mov
inc
sub
popa
xchg
clc
fnstenv
inc
fneni(8087
and
dec
repz
jg
shlb
add
mov
in
add
sti
and
xor
jg
test
and
aaa
mov
sub
mov
adcb
lcall
enter
das
mov
sahf
pop
xchg
xor
jo
or
jo
nop
cmp
icebp
rclb
popf
roll
loope
adc
jbe
out
xor
iret
mov
adc
std
gs
jne
es
out
stos
add
push
jbe
cmpsb
inc
mov
pop
icebp
insl
mov
adc
aam
xchg
out
addr16
pop
jecxz
sbb
ficoms
leave
sbb
jge
addr16
mov
sti
stos
dec
push
fcoml
aas
icebp
dec
dec
sahf
push
push
int3
mov
xor
ljmp
enter
and
push
hlt
fwait
test
and
mov
mov
push
sahf
jle
jno
popf
lcall
jae
imul
int
les
std
pop
outsb
or
out
sbb
mov
imul
ss
cmp
shll
mov
mov
pop
mov
or
fildll
das
outsl
leave
and
xor
fstps
loope
xchg
mov
mov
daa
dec
pop
outsb
imul
jecxz
int
lret
xchg
jbe
xchg
adc
in
add
es
les
xor
fistpl
cmp
cmp
nop
jae
mov
and
in
sbb
xlat
test
ret
mov
cmp
sbb
mov
pop
jle
sbbl
lahf
out
adc
jg
and
fisttps
repz
xor
sub
xorb
out
insb
dec
test
pop
push
dec
jmp
adc
mov
xchg
xor
mov
jge
sbb
gs
sub
and
in
push
jecxz
mov
arpl
mov
jl
add
ljmp
outsb
out
mov
test
cmp
aad
jecxz
xchg
fmuls
sub
mov
and
out
xchg
mov
mov
imul
and
out
sub
jg
insb
imul
test
xlat
inc
xchg
or
or
push
cmc
lods
sub
cmc
movsb
int3
out
push
imul
pop
loope
test
ljmp
adc
inc
jl
cmp
imul
std
pop
jge
sub
movsl
push
dec
jo
add
sub
lret
ds
push
push
push
jle
xchg
pusha
mov
fwait
shl
push
mov
subl
movsl
fwait
dec
sub
popf
mov
movl
mov
mov
dec
mov
xor
cmp
out
in
jl,pn
inc
mov
mov
insl
sbb
adc
pop
add
sbb
xchg
adc
repnz
sub
push
data16
clc
sbb
aas
jmp
insb
cmp
es
enter
popa
rolb
lret
xchg
jnp
push
add
test
pop
cmpsb
mov
ds
leave
lret
aam
into
je
sbb
loope
aaa
cmp
push
xor
add
insl
or
mov
out
jns
adc
lret
mov
jb
mov
xor
push
adc
mulb
xchg
mov
cmc
out
test
xlat
cld
shll
aad
cmp
icebp
nop
out
arpl
lea
cmp
pop
out
mov
stos
sbb
lock
add
outsb
push
or
inc
xor
outsb
sbb
push
xchg
and
aas
lods
mov
inc
sbb
and
xchg
adc
sub
lods
mov
fiaddl
lods
sub
es
lcall
dec
sarb
shr
testb
aad
dec
ja
lret
dec
jns
jecxz
ficoms
inc
mov
inc
inc
xchg
dec
dec
push
test
fwait
inc
or
mov
add
mov
movsl
cld
cmc
bound
and
out
inc
xor
inc
enter
adcl
inc
xchg
pop
das
jmp
jp
sarb
lock
or
and
pop
or
insl
add
jbe
jno
outsb
lret
cltd
sbb
imul
push
pusha
xchg
pushf
fs
push
dec
aaa
test
pop
cmp
int
jns
leave
xor
dec
pop
xchg
repnz
lret
cmp
stc
movsl
jge
call
jge
out
in
std
cmp
mov
lahf
icebp
aas
xor
jbe
sti
loope
fisubrs
addr16
pop
xchg
sbb
xchg
xchg
stos
stos
jl
pop
push
add
dec
mov
xchg
outsl
lea
sbb
sti
insl
cli
fs
out
mov
or
or
mov
or
int
pop
jne
mov
mov
mov
mov
in
sbb
movsl
daa
push
xor
outsl
insb
jecxz
fistps
int
ja
sub
add
movsl
cs
jno
in
jmp
cltd
sbb
in
add
sub
loopne
lods
dec
mov
aam
xor
stos
popf
ljmp
addr16
jg
scas
out
les
andb
cmp
mov
cmp
ss
pop
or
fdivs
and
insl
mov
sub
xchg
aaa
xchg
cmpsb
cmp
jecxz
mov
xlat
js
cli
ljmp
mov
movsl
clc
cmpsb
jbe
pop
fidivrl
inc
mov
cmp
inc
clc
in
setbe
loop
daa
mov
sbb
cmp
jo
fdivs
fwait
push
mov
test
in
push
shll
xor
push
pop
popf
enter
and
js
cmpsl
sub
idivl
stc
jno
mov
sbb
aaa
push
mov
fists
pop
out
ds
data16
sbb
mov
icebp
inc
sbb
push
dec
or
pop
js
jb,pn
and
push
iret
lret
icebp
enter
push
mov
push
aad
push
test
xorl
lods
or
xchg
xor
dec
mov
ja
sbb
push
inc
aad
xchg
xchg
xor
adc
stc
xchg
inc
aam
out
jl
adc
fwait
js
and
fwait
xchg
jne
ja
aam
push
mov
xchg
divl
sub
jmp
xor
out
mov
push
xchg
in
subl
and
jge
je
sub
test
stc
dec
fsubrl
clc
sub
int
pop
cltd
push
jnp
js
addb
jae
push
lret
push
daa
inc
fisubrs
arpl
pop
cmp
pop
or
arpl
jle
inc
and
std
shll
push
repz
jmp
lret
bound
sbb
out
pop
add
sub
inc
mov
jne
jge
ss
xchg
mov
jmp
cmp
fmull
daa
ffree
repnz
push
mov
push
nop
jnp
and
ret
mov
xchg
xchg
nop
pop
xor
stos
filds
jbe
cs
pop
cltd
mov
clc
xchg
xchg
adc
mov
arpl
sbb
lock
or
mov
ja
mov
cmp
mov
jb
xorl
xchg
movsb
sahf
je
push
cmp
jb
cwtl
test
push
mov
repz
adc
sub
push
inc
ljmp
cmp
in
mov
dec
loope
aaa
or
insl
fstl
out
jne
xor
ds
pop
lret
mov
clc
dec
or
cmp
sarl
add
add
add
mov
and
push
pop
push
or
lret
insb
data16
mov
sbb
out
or
pop
out
into
je
push
loope
xchg
stos
jno
or
or
adc
mov
push
and
pop
and
imul
jbe
jnp
sti
adc
pop
outsb
rorb
loopne
je
xchg
jne
test
cmp
and
call
ja
clc
rorb
adc
rcl
xor
in
adc
jno
stos
addr16
lock
lea
leave
pop
fmull
gs
and
outsb
stos
pop
dec
jne
aam
cmc
dec
sarb
pop
xor
mov
adc
mov
mov
fbld
push
fimull
lea
mov
inc
popf
push
popf
inc
call
xchg
mov
adc
inc
pop
outsb
cmp
mov
je
jge
lods
dec
outsl
mov
sub
aas
xchg
std
shl
fwait
into
adc
lea
mov
push
dec
rolb
push
int3
cwtl
scas
out
test
push
enter
cli
dec
xchg
pop
loope
add
lcall
mov
jno
fldl2e
repnz
enter
xchg
mov
pop
xor
adc
into
inc
in
cs
hlt
cli
sbb
or
dec
sbb
pop
in
sahf
divl
shr
sub
xor
pop
stc
and
adc
mov
es
fs
add
pop
and
insb
inc
push
movsb
cmp
sub
stos
add
adc
jne
fdivr
fs
in
xor
out
jp
ljmp
add
mov
inc
shll
dec
inc
popf
stos
sub
mov
mov
mov
cmpsb
sbb
idivl
mov
into
cmp
push
mov
pop
pop
testl
dec
jg
outsl
or
ljmp
add
push
jnp
sbb
mov
scas
adc
dec
aaa
lret
xchg
test
add
mov
roll
test
cmc
xor
sahf
sub
enter
push
andb
add
int3
rep
pop
inc
and
push
shrb
mov
je
rorl
dec
movl
jno
inc
jns
adc
repnz
loop
pusha
ljmp
push
inc
test
mov
and
mov
js
cld
ret
and
aad
xlat
shr
and
int3
ds
jge
mov
cltd
dec
out
mov
cmp
dec
adc
stc
xchg
cmpb
imul
call
clc
scas
dec
pop
inc
cmp
insb
inc
add
jecxz
and
testb
push
sub
xor
clc
insl
test
sbb
ljmp
mov
sbb
xchg
inc
ljmp
stos
cli
pop
shll
not
stos
fcompl
in
lea
mov
dec
or
jecxz
jle
test
mov
and
cmp
mov
imul
mov
repnz
outsb
sub
mov
mov
cmp
shrb
pop
sbb
and
mov
pop
cmpsb
jge
stos
mov
sarl
mov
inc
mov
cmpl
mov
mov
mov
xchg
sub
jne
insb
pop
subb
sbb
cmp
pop
data16
inc
push
jnp
jg
cld
inc
jmp
insb
push
subb
insb
aaa
mov
mov
jns
ror
repz
idivb
pop
jmp
xchg
inc
rcll
imul
pop
pop
fnstenv
scas
pop
sub
nop
popl
out
repz
xchg
mov
out
lea
pop
out
lret
outsb
les
jmp
cli
jecxz
xchg
cmpsb
pop
outsb
jmp
test
ret
jo
cli
xor
push
subl
jae
mov
mov
xchg
cmp
mov
stos
les
in
push
mov
loop
xchg
hlt
xor
outsl
inc
adc
jbe
scas
xchg
push
pop
jge
push
fdivr
mov
hlt
lret
push
pop
push
xchg
jb
inc
push
int
hlt
mov
xor
push
negl
sbb
push
loope
mov
mov
jb
aad
in
jnp
sub
cltd
lds
jo
push
insb
fdivrl
rolb
push
je
das
ret
xchg
sti
xchg
pop
pop
push
or
orb
push
xchg
mov
shl
mov
or
aam
sbb
dec
arpl
iret
icebp
dec
cmp
and
adc
ljmp
dec
daa
test
aad
mov
sub
xor
test
sbb
dec
sbb
loope,pt
lret
sub
and
dec
mov
ss
orb
movsl
xchg
add
sahf
js
cmp
mov
and
cmpl
fimull
outsb
fsubrl
outsb
dec
ljmp
add
mov
lahf
and
sbb
in
imul
sub
in
fldl
sub
jle
mov
mov
xchg
xor
shll
iret
xor
jne
xor
push
mov
mov
sub
jo
xchg
adc
sbb
dec
outsb
sub
repz
mov
mov
inc
mov
out
jae
sub
inc
test
enter
lret
shll
ljmp
in
push
or
outsl
push
xchg
ja
inc
aad
add
pop
call
mov
daa
add
das
hlt
and
leave
imul
nop
lock
movsl
mov
hlt
sbb
xchg
and
addr16
mov
sahf
pop
scas
repnz
push
push
je
push
mov
pushf
imul
cmp
aas
sub
jecxz
insl
pop
movsb
push
jae
push
or
jnp
jmpw
std
sti
subl
fs
mov
sub
into
jmp
push
cmp
insl
int
jl
das
insl
shlb
xchg
into
lock
mov
xchg
jg
loop
cwtl
or
xchg
mov
movsl
mov
jb
aas
jle
ss
xchg
movsb
in
sub
cmp
jmp
cmp
fs
or
mov
inc
fsubs
addr16
pop
mov
mov
cmp
lcall
push
push
xchg
pop
and
loopne
sbb
sti
pop
hlt
ds
repnz
push
movsl
xchg
dec
sbb
iret
mov
adc
xchg
xchg
pop
xorl
clc
sahf
mov
aas
or
pop
popf
and
push
cwtl
mov
inc
test
test
rcrb
cmp
mov
xor
js
je
loopne
sub
xchg
sar
cmpb
cld
and
lock
cmc
clc
mov
loop
sbb
adc
push
loope
pusha
les
icebp
pop
adcb
xchg
in
sub
xlat
loop
jge
iret
dec
pop
adc
dec
xchg
pop
iret
pop
cmc
pop
pop
push
push
push
jg
xchg
out
sbb
pop
aad
ret
and
in
fs
mov
in
and
and
inc
mov
out
test
in
scas
xchg
inc
aaa
cmpsb
push
mov
ss
dec
jge
lea
inc
mov
add
and
mov
xlat
icebp
addr16
xor
cmp
into
push
hlt
stos
popa
inc
inc
xor
fisubrl
fwait
repz
xor
roll
lret
sbb
mov
lcall
mov
or
inc
or
mov
adc
add
int
cltd
ret
xchg
je
nop
fwait
and
xchg
ret
mov
into
int3
pop
mov
dec
mov
lea
iret
sbb
mov
das
mov
mov
cmpsb
nop
ret
jno
cs
or
or
sbb
out
mov
xlat
std
add
xchg
loope
add
pop
cmp
xchg
adc
sbb
icebp
test
arpl
call
jnp
mov
cmc
ss
lahf
cmpsl
fs
jmp
lods
call
sbb
dec
cmp
cmp
jb
loop
xor
lods
pushf
adc
imulb
add
adc
mov
je
add
cwtl
ljmp
stos
ret
test
das
mov
xchg
popa
in
fistpl
mov
in
cwtl
sbb
push
xchg
sbb
ss
mov
cmp
push
mov
add
mov
mov
cmpsb
or
insb
adc
mov
in
repz
sub
bound
fildll
jp
mov
loope
scas
jg
subb
movsb
xchg
mov
std
or
inc
and
push
daa
shll
repnz
scas
lcall
ds
cld
xchg
movsl
cmp
adcb
jne
outsl
sahf
enter
pop
insb
repz
fsub
mov
out
repnz
jns
adc
push
cltd
mov
xlat
in
into
pop
mov
adc
shrb
jo
scas
rolb
loop
imull
fstl
cli
outsb
lods
push
and
scas
hlt
rorl
js
or
in
icebp
je
bound
dec
rorl
das
pop
pop
mov
sub
es
mov
outsb
call
xchg
into
sub
push
pusha
shlb
mov
aas
mov
lahf
dec
mov
jmp
cmp
in
lcall
fists
hlt
fildll
cs
push
add
outsb
out
jbe
and
pop
pop
add
jno
out
mov
add
mov
pop
dec
ds
cmp
and
push
pushl
pop
jbe
sbb
ja
xchg
or
lcall
push
jne
rcl
fwait
sub
cmp
sbb
leave
fwait
insl
fwait
mov
sarl
lods
ret
shlb
inc
ljmp
lock
jl
mov
imul
in
sarb
inc
mov
repnz
and
jno
les
xor
flds
xlat
sti
std
inc
outsl
xor
mov
ret
and
or
in
lds
mov
cmp
and
jnp
cwtl
add
addl
cmp
xor
out
int3
dec
lock
scas
ljmp
mov
cmc
xor
cmp
lcall
mov
xchg
fwait
pop
lret
sbb
cmpl
mov
pop
jmp
shl
in
pop
sbb
test
jo
mov
jmp
lretw
adc
or
cmp
in
ljmp
movsl
cmpsl
loop
loopne
xchg
sbb
and
aas
and
mov
fnstenv
xchg
dec
xchg
arpl
ss
scas
fmuls
dec
outsl
mov
inc
cmp
adc
pusha
das
lcall
fiadds
repz
ret
popa
icebp
test
scas
int3
cmpsb
in
add
pop
fcom
in
lds
mov
divl
arpl
mov
movsb
pop
rcl
loop
bound
add
lcallw
adc
or
daa
or
push
xor
inc
negl
int3
call
lahf
repz
sbb
arpl
filds
mov
sahf
jp
inc
in
adc
cltd
fistps
xchg
addr16
loope
add
xor
movsb
mov
jmp
cmpsl
sahf
xchg
xchg
push
and
sbb
jnp
mov
mulb
mov
dec
add
in
je
inc
xor
jecxz
mov
xor
flds
jns
sarb
xor
arpl
adc
push
out
sub
sub
cmp
in
xchg
loope
lcall
mov
dec
push
insl
iret
dec
fwait
push
shr
es
add
xor
jp
cs
push
cmp
fldenv
lods
or
scas
inc
cmc
adc
xor
dec
mov
imul
fldl
mov
insb
add
pop
xor
cmpsb
leave
sar
inc
and
and
dec
out
sub
sub
data16
dec
xlat
xchg
dec
insl
pop
jp
pop
or
push
pop
sarb
int3
push
cmpsl
cvtdq2ps
ret
sbb
je
ret
orb
cmp
aad
es
dec
imul
xor
adc
int3
and
sarb
sbb
fchs
repz
out
inc
movsl
ret
addr16
or
pushf
shl
cmpsb
jmp
cli
addr16
add
jae
push
sbb
and
add
cld
lods
and
out
fisttpll
jle
aad
insl
sbb
rcr
push
mov
scas
sahf
or
cmpb
fidivrl
xchg
mov
out
xchg
pusha
lahf
rcll
jecxz
push
ja
cli
push
jo
loope
loop
cmpl
outsb
aam
shrb
mov
and
xor
fldl
fimuls
cmpsl
mov
cmp
fadd
fimuls
push
or
inc
xor
xchg
xchg
or
push
or
jp
adc
movsl
and
lock
pop
mov
add
adc
imul
mov
or
push
and
pop
inc
in
lods
add
fistps
incb
cmc
mov
addr16
sti
mov
mov
ret
cmp
arpl
or
xor
mov
dec
jo
add
mov
push
adc
stc
mov
or
out
pop
dec
pop
mov
mov
inc
sub
push
je
mov
inc
xor
jmp
idiv
xchg
inc
xorl
jne
xchg
add
shrl
rcr
xor
cwtl
sbb
jo
lcall
dec
test
dec
mov
inc
or
std
pusha
hlt
dec
nop
stc
negb
jns
add
call
leave
in
add
dec
pop
pusha
jmp
jp
lods
push
sub
insb
xchg
stos
xchg
int3
lahf
sbb
mov
bound
stc
xor
or
xlat
sbb
sarl
dec
cmp
add
xor
imul
mov
fistpll
pop
xchg
pop
in
imul
ja
push
fwait
push
int3
adc
lock
cmp
dec
adc
pop
add
and
cmpsb
mov
in
aas
jae
ret
sarl
mov
adc
fdivrs
test
ret
push
popa
outsb
lds
push
jle
jecxz
lret
subl
xchg
push
mov
cmp
aam
add
cmpsl
enter
cld
xor
adc
jp
fs
pop
aaa
mov
call
dec
insb
repnz
imulb
dec
mov
test
inc
dec
inc
push
rcrl
in
cmp
js
outsl
test
sbb
outsl
and
stos
jbe
or
mov
ljmp
icebp
jmp
fistpl
daa
sbb
or
or
cwtl
xor
jns
add
fldl2e
stos
xor
sbb
adc
bound
pop
jb
pop
or
hlt
repnz
inc
lcall
add
dec
jl
sub
popa
jl
add
adc
cmp
ret
inc
adc
xchg
popf
lea
adc
insl
cmpl
sbbb
mov
cmp
push
lds
mov
sbb
dec
dec
mov
lret
sbb
test
cwtl
add
mov
push
ljmp
les
inc
xor
sbb
js
cmpsl
mov
sbb
in
xchg
push
mov
cmp
clc
insb
lea
mov
js
sbb
movsl
xchg
cmpsl
stos
cmp
pushf
xlat
repnz
xor
mov
mov
in
xchg
pushf
das
jle
fisubrl
lock
in
test
jg
jg
inc
aas
xor
mov
xchg
mov
std
push
outsb
lcall
popf
loop
mov
adc
lods
scas
add
add
test
std
add
push
dec
sub
inc
fwait
sbb
xchg
push
mov
mov
push
xchg
add
ret
cmp
ljmp
jb
rol
mov
jb
sub
dec
cmp
nop
ret
add
cmpsb
lods
mov
xchg
jb
pop
xchg
nop
clc
insl
pop
daa
cld
js
mov
mov
mov
cmp
mov
push
mov
pusha
and
lock
and
testl
stos
lahf
mov
push
jl
sub
incl
lret
aas
or
cltd
data16
ja
lcall
jo
inc
test
and
lock
and
push
sarl
repnz
ds
sbb
hlt
cmp
mov
and
inc
mov
mov
loop
jmp
mov
xor
hlt
push
sub
or
pusha
popa
mov
shlb
lcall
xchg
adc
mov
roll
push
sub
test
lret
add
xor
into
cltd
sub
mov
xchg
lret
add
mov
arpl
aad
dec
mov
mov
mov
shll
sub
cmpsb
jecxz,pt
stos
push
cld
inc
ficompl
cltd
jg
imul
cmpsb
jecxz
ror
xchg
aad
sub
xchg
or
outsl
call
add
jbe
fcompl
mov
addl
das
or
daa
cwtl
sarl
inc
jecxz
sbb
ljmp
dec
out
fucom
test
xchg
pop
cltd
hlt
std
xchg
lahf
loop
or
js
mov
xor
jg
or
or
imul
adc
push
xchg
test
add
fadds
push
ffree
jle
jle
js
ss
emms
mov
stc
push
mov
xchg
shr
mov
icebp
stc
cli
and
add
int3
iret
xchg
xor
sub
mov
xchg
mov
mov
add
cmc
ds
andl
cs
frstor
gs
pop
lods
pop
int
add
fs
dec
mov
xor
push
fisubrs
jb
sub
mov
dec
push
dec
scas
xchg
push
cmp
dec
mov
xor
sbb
pop
mov
sub
sti
add
roll
adc
into
bound
cmp
mov
adc
dec
outsb
jns
out
fwait
mov
call
xor
push
je
sti
mov
into
xchg
mov
je
dec
lea
popa
sbb
clc
jle
sbb
adc
outsb
rcrb
xchg
mov
lret
lds
in
mov
out
aad
mov
dec
std
push
mov
sub
fbstp
mov
mov
and
int3
adc
aaa
fdiv
or
iret
aaa
fists
sub
outsb
or
mov
xor
out
mov
add
popa
mov
jp
std
pop
mov
xor
movsl
mov
jnp
int3
xchg
sub
inc
arpl
dec
push
push
adc
and
cmp
cmp
push
xchg
xchg
sbb
fistps
jbe
bound
shrb
xor
icebp
mov
mov
push
sbb
dec
shlb
stc
shll
js
add
sub
pop
int
iret
cltd
sbb
sub
sbb
imul
stos
or
sbb
mov
loopne
loopne
sub
and
jbe
fstl
xor
pushf
lahf
xchg
test
mov
and
push
sub
adc
pop
jmp
mov
push
out
call
sbb
cmp
push
fiadds
rcll
mov
stos
testb
sbb
fildl
ljmp
jecxz
xor
enter
pop
mov
add
out
sar
sarl
hlt
test
loop
inc
add
lds
lret
inc
add
jg
mov
in
ja
fnstcw
popf
push
mov
add
test
mov
adc
push
jo
icebp
stc
or
sbb
jp
cmpsl
lret
fstl
inc
pop
fwait
arpl
pop
aad
lds
fsubrp
in
stos
mov
dec
mov
pop
movsb
mov
cmpsl
sbb
xorb
icebp
insl
repz
add
ljmp
leave
mov
push
rol
inc
and
test
popa
mov
mov
pop
flds
jmp
sbb
and
pop
int3
mov
addb
push
cmp
insl
dec
popf
repz
and
test
in
add
or
lods
outsb
mov
add
pop
fsubl
dec
dec
out
pop
test
add
in
testb
adc
inc
enter
push
enter
jge
xchg
cmc
and
push
int3
lds
sbb
mov
loop
test
in
divl
push
sbb
sbb
divb
aam
cmpl
dec
push
ja
dec
lods
xchg
jne
mov
lods
sbb
lock
fimuls
ds
and
push
xchg
insb
dec
aaa
in
rcll
add
or
ljmp
inc
jno
jnp
mov
fsubs
outsl
fsubrs
inc
ret
in
pushf
xor
pop
adc
insb
push
jmp
addr16
adc
int
inc
pushf
xchg
mov
mov
rcrl
push
push
fwait
sarl
cmc
push
dec
push
call
scas
push
rcr
stos
lea
popa
push
mov
add
fdivr
imul
and
mov
xor
int
test
hlt
jl
daa
jge
aad
pushf
xlat
lcall
enter
sbb
mov
push
push
push
mov
mov
xchg
arpl
push
push
fldl
mov
pop
out
ja
sub
test
movsl
mov
and
sub
jg
sub
sbb
dec
repz
pop
mov
xchg
dec
xchg
jmp
mov
mov
ljmp
inc
das
fs
xchg
mov
test
cmp
pop
fdivrs
add
sub
or
push
loop
lret
loope
adc
or
test
call
call
add
push
cmp
jo
dec
sbb
pusha
jle
add
lods
daa
test
iret
and
and
popf
fwait
push
push
adc
bound
pop
dec
pop
jnp
dec
rcl
push
mov
ret
push
notb
mov
mov
pop
sbb
sti
notb
std
cmp
sub
jnp
clc
data16
lods
insb
mov
dec
in
mov
in
in
idivb
hlt
loopne
ds
aam
repnz
in
jmp
cmp
mov
cmp
ret
jnp
xchg
scas
insb
movsl
pop
daa
imul
movsb
fisttpl
xor
shl
out
movsl
inc
out
in
int
fcmovnb
pushf
sbb
jg
jg
pushf
push
cs
es
sub
adc
dec
int
cmp
mov
daa
fsubl
lret
inc
xor
inc
and
inc
in
dec
int
adc
movsl
pop
mov
add
lret
sbb
inc
jmp
in
jne
add
sbb
ret
test
cmp
shrl
clc
xor
pop
or
jmp
jbe
sub
wrmsr
cmp
mov
out
in
push
push
sub
test
aas
xor
xchg
test
dec
popf
daa
and
sahf
scas
dec
ret
pop
xor
lahf
lds
inc
sarl
xor
pop
sbb
and
dec
jo
push
int
mov
into
ret
inc
lods
insb
fidivs
ret
adc
jecxz
mov
lcall
sbb
jae
dec
into
addr16
add
and
dec
inc
movsb
cltd
cmp
dec
out
aaa
rorb
jns
das
out
sahf
repz
js
cmp
nop
jge
push
mov
push
out
shl
shrl
in
xchg
cmc
loope
jnp
cld
es
imul
pop
and
sub
jg
js
jmp
push
aaa
ret
push
je
cld
ss
in
loop
jp
fs
in
dec
mov
inc
push
cli
out
cmp
push
inc
popa
inc
mov
sbb
mov
cmc
aaa
loope
jbe
mov
or
and
pop
call
inc
dec
ljmp
jmp
sbb
and
pop
pop
insl
fildl
pop
out
rcrb
push
push
sbb
rorb
insb
fmuls
push
lods
mul
mov
jns
fsubr
mov
jns
sub
xor
push
int
pop
ret
xor
mov
dec
xchg
icebp
insl
notb
sub
movb
dec
inc
and
push
mov
adc
dec
lods
push
aaa
jmp
pusha
jmp
xchg
jbe
xchg
cmp
cmpsb
jns
mov
imul
ret
mov
ret
xor
fsubrs
pop
andl
adc
adc
or
pop
dec
xor
xor
or
dec
or
insb
fs
mull
and
mov
dec
in
and
sub
enter
sbbl
dec
mov
jb
sbb
adc
dec
shlb
hlt
xchg
nop
push
dec
inc
test
sbbl
inc
xchg
ror
dec
cld
test
or
andb
ljmp
and
out
adc
fdivl
enter
dec
push
aaa
dec
mov
push
test
icebp
xchg
repz
xor
cmp
ret
in
sub
cmp
adc
dec
mov
jnp
cmp
jmp
movsl
cmpsb
fsubl
aad
repnz
fucomp
lcall
mov
iret
les
cmp
push
push
jp
sub
in
loope
lcall
ret
popa
stos
dec
out
dec
mov
sbb
scas
jmp
pop
sahf
inc
mov
in
addr16
fdivrl
pop
inc
sub
or
xchg
inc
adc
lahf
push
nop
jp
lret
or
cs
lcall
aad
jnp
outsl
les
mov
push
pop
dec
cmc
rorb
dec
xchg
out
ds
movsb
adc
test
arpl
push
push
pop
add
enter
psubusw
cmp
movsb
xor
in
adc
test
aad
out
jecxz
jae
pop
jge
push
cltd
mov
jmp
adc
test
xchg
mov
icebp
pop
popa
mov
push
lcall
xor
inc
inc
call
add
insb
mov
adc
mov
mov
inc
mov
pop
and
mov
jns
loope
fiadds
rclb
and
subb
andps
popa
xor
stc
xchg
movsl
and
fsubrl
sbb
pushf
jp
popa
arpl
inc
nopl
mov
je
imul
subl
aam
inc
lret
mov
and
xchg
lea
or
sbb
pop
fwait
insb
test
and
into
fsub
mov
and
mov
mov
bound
mov
jne
adcl
rclb
xor
dec
add
pop
out
cmpsl
lahf
dec
xor
imul
hlt
mov
rorl
add
ja
sub
push
adc
gs
mov
cs
pop
sub
fisubs
sub
ds
fdivs
cmpsb
loop
push
add
les
out
ret
jg
jb
repnz
fsubs
xchg
inc
dec
test
pop
lret
xchg
enter
arpl
pop
sbb
xlat
lahf
inc
sbb
popa
and
lods
inc
insb
bnd
jl
inc
jp
popa
sub
jbe
fstl
mov
and
cmp
jecxz
and
rcrb
or
jae
pop
rol
lret
in
add
sbb
jnp
adc
ljmp
fdivs
or
xor
mov
loop
repnz
ds
jmp
jnp
das
inc
and
lea
lahf
xlat
es
lret
pop
int
arpl
fistps
mov
xchg
pop
lahf
xor
int3
mov
pop
mov
lahf
mov
rcrb
pop
jle
cmp
add
pop
mov
mov
hlt
mov
sub
fsubrl
bound
dec
mov
add
addr16
push
push
jl
push
inc
orl
je
inc
sbbb
cmpsb
dec
cmp
movsb
xor
push
jl
adc
and
sub
and
jl
xor
mov
out
jecxz
xchg
fcompl
mov
sti
out
push
lretw
adc
rcl
ret
inc
add
mov
add
lret
hlt
pushf
mov
rcrl
and
mov
inc
push
inc
int3
inc
shl
add
cltd
in
push
mov
xchg
inc
rclb
stc
dec
dec
push
sub
push
xchg
xchg
ffreep
sbb
jecxz
test
fcompl
inc
les
add
test
pop
shld
scas
mov
pop
int
mov
ss
stc
mov
into
dec
xchg
lcall
cwtl
pop
lods
pop
push
dec
pop
outsb
xchg
addr16
inc
mov
js
lods
push
ss
enter
nop
movsb
out
std
inc
xchg
arpl
jg
and
or
ficoml
into
cwtl
sub
and
xor
cmp
dec
mov
or
push
jg
and
pop
sub
frndint
lock
or
pop
mov
imul
in
sub
xchg
mov
sbb
or
inc
lret
xor
lods
ja
and
jb
mov
std
pusha
dec
and
aad
jae
xchg
sbb
add
repz
into
lods
shl
sarl
adc
add
push
aas
jecxz
xor
int
cmc
push
add
xor
fwait
mov
fs
or
mov
roll
ss
jno
xchg
mov
push
dec
rcll
cwtl
jns
hlt
push
sbb
sub
stos
int3
cmp
pop
xor
loop
inc
jl
xchg
imul
push
repnz
xor
ds
lock
rcrl
dec
dec
and
fdivrl
mov
cmp
rcrl
fidivs
mov
addl
dec
pusha
mov
add
xor
loop
cmpsl
xlat
jns
mov
pushf
mov
test
rcll
or
inc
scas
aaa
ret
inc
lods
jmp
scas
dec
jno
call
out
add
lea
daa
sub
in
dec
sbb
xchg
push
xchg
notl
out
add
outsl
out
lock
pop
add
mov
je
test
sub
push
loope
push
andl
addl
repnz
fsts
stos
adc
repz
cld
faddl
jno
adc
push
xor
ret
jo
mov
cmp
fmuls
fdivr
cmp
in
inc
mov
and
jle
bound
das
insl
xor
add
mov
pop
xor
dec
imul
int
ret
ljmp
or
outsb
mov
aam
sbb
adc
pop
mov
lods
jb
adc
dec
sbb
into
xchg
dec
and
pop
test
dec
lret
lds
and
xor
xor
mov
shll
rclb
mov
jno
testl
fisubs
mov
sbb
es
xor
mov
jbe
loopne
sbb
aaa
daa
push
shr
add
sub
bound
imul
lcall
sbb
call
out
or
shlb
and
jno
mov
push
xor
xchg
mov
inc
insl
cltd
sub
jns
scas
ret
adc
fwait
jle
and
sbb
aam
adc
push
fwait
mov
jge
mov
aam
inc
shll
sarb
leave
ljmp
addr16
fidivl
dec
les
ljmp
sbb
outsb
test
jg
jp
sti
lret
dec
iret
outsl
pop
xchg
mov
enter
movl
mov
push
popa
sub
adc
add
repz
test
js
iret
repnz
das
shrb
or
mov
iret
test
pop
xor
xchg
push
fsubs
repz
xor
xor
xor
inc
and
cmc
pop
jle
xor
dec
and
mov
and
popa
scas
out
dec
imul
jae
jns
xchg
or
sti
or
stos
in
add
sbb
ja
lcall
jo
stc
fcomp
cmp
test
mov
movsb
lea
shl
sarb
jns
push
ret
push
sbb
ss
xchg
push
jmp
cmc
add
nop
stc
xchg
test
or
es
mov
sbb
lock
in
stos
xchg
xlat
add
cmp
subl
jne
sub
xor
movsl
mov
enter
add
ret
xchg
adc
fs
stc
mov
je
jecxz
test
pop
inc
jb
iret
mov
movsb
fs
push
dec
dec
adc
cmp
ds
cmp
jbe
pop
mov
sbbb
div
mov
or
adc
add
out
rcrb
aas
jne
aam
into
std
fisubl
and
mov
mov
int
push
movsb
lahf
imul
lods
andb
mov
iret
into
adc
out
mov
mov
lret
cmp
pop
aam
add
into
ljmp
mov
xchg
pusha
scas
dec
cli
add
adc
pop
jo
stos
pushf
imul
and
js
int3
rclb
jo
aaa
ja
or
mov
hlt
ljmp
out
xor
dec
in
or
dec
jge
jmp
mov
fnsave
int
repnz
jge
out
mov
sbb
out
mov
cmp
mov
loope
dec
lds
mov
add
lahf
sub
xor
push
push
sbb
sbbl
call
fstps
aas
dec
ja
mov
inc
xlat
sbb
dec
sbb
es
je
and
icebp
mov
jbe
inc
ret
fisttpll
imull
xchg
push
sahf
outsb
dec
mov
das
mov
cltd
jl
sub
rorl
mov
fldpi
stos
mov
or
jae
fldenv
mov
mov
cwtl
mov
pop
cltd
fcoml
push
arpl
mov
pop
pop
jo
cmp
inc
inc
jbe
cmp
mov
push
inc
inc
mov
jb
lea
ds
fldt
jbe
loop
jp
cmp
adc
xor
icebp
jae
lock
push
jmp
mov
les
pop
fisubrs
xor
fisttpll
push
mov
xchg
lret
std
or
filds
in
jl
jp
lods
int
aas
dec
add
cmpsl
xlat
adc
insl
cmc
ret
pop
push
add
mulb
aad
lods
mov
sti
cs
fidivrl
adc
jae
fwait
aam
jo
insl
pop
pop
repnz
shrb
outsl
mov
icebp
push
cmc
inc
aaa
loopne
pop
fstpt
cltd
loope
mov
xchg
out
add
call
cmp
adc
movl
mov
ret
out
dec
add
jns
xor
cmp
mov
adc
cmp
sub
or
mov
arpl
push
mov
stos
xchg
mov
sti
jb
xchg
dec
addr16
lret
imull
inc
les
fnstenv
shlb
pop
jns
lret
dec
pop
mov
xor
lods
push
cmpsb
mov
pop
mov
call
inc
cmp
dec
testl
test
fisubrl
mov
xchg
mov
inc
ja
loopne
stc
je
sbb
pop
sub
ds
imul
inc
imul
xchg
inc
pop
fcom
cld
or
pop
enter
xchg
orb
pusha
loop
bound
xor
rorl
inc
add
inc
xor
testb
and
scas
mov
loopne
inc
lret
mov
nop
sbb
in
push
test
mov
aam
pop
mov
lea
insl
jle
leave
dec
clc
xlat
fistps
popl
jp
dec
repnz
dec
inc
xor
test
repnz
inc
aaa
sahf
or
dec
xor
xchg
ljmp
in
xor
pushf
idivb
out
inc
pop
push
in
cmp
ret
sbb
xor
inc
push
pushf
push
and
sbb
push
xchg
push
or
dec
add
gs
in
iret
mov
lcall
out
aad
push
cmpsb
cmp
sbb
and
add
mov
shrl
rolb
je
mov
jle
lret
loopne
cwtl
jp
sbb
shrb
mov
daa
pop
jo
fsubrs
jp
xchg
fwait
adc
cltd
loop
push
insl
sbb
sbb
jmp
popa
pop
dec
sbb
dec
and
pop
xchg
jb
mov
inc
daa
mov
adc
aam
cmp
in
sbb
push
mull
out
loope
fisubs
xor
push
mov
fidivl
ss
in
adc
outsl
and
into
xchg
aaa
sbb
pop
cmp
jle
jno
xor
inc
pop
imul
bnd
inc
leave
xchg
lret
cwtl
adc
lea
aaa
aas
inc
mov
call
xchg
sub
out
push
xor
xor
xchg
xchg
or
pop
sub
jno
bound
icebp
fstpt
popf
mov
lds
aaa
into
and
into
mov
scas
lret
pushf
in
adc
jae
imul
cmpsl
cmp
pop
cmp
cs
scas
jbe
test
inc
add
ja
nop
orl
bound
nop
and
cld
cwtl
idivb
xor
les
dec
mov
jle
cmp
leave
imul
rolb
sub
ljmp
shr
decl
bound
inc
xchg
dec
je
push
xor
xor
mov
int
in
xchg
fimull
shll
or
lcall
mov
xchg
imul
mov
push
jle
sub
insl
sarb
xchg
and
icebp
cmp
insl
xor
rclb
addb
mov
mov
scas
pop
clc
shl
cmp
nop
push
sbb
mov
xchg
dec
add
in
push
cli
gs
adc
stos
jle
sarl
divl
bound
aaa
pop
dec
add
sbb
push
xchg
nop
call
loop
sub
add
or
push
dec
fbstp
xor
pminsw
push
out
mov
push
inc
jge
cmp
jg
mov
stos
jle
xchg
popa
dec
lahf
test
std
push
rclb
shlb
subb
pop
aas
push
mov
push
mov
roll
cmp
and
sub
and
daa
lods
int
jle
cmpsb
mov
xlat
xor
imul
mov
push
jmp
js
in
mov
mov
popf
fisubrs
add
jb
js
mov
ljmp
mov
jle
jne
mov
mov
jge
movsl
or
xor
test
dec
push
movsb
popa
inc
or
lahf
fwait
out
sbb
pop
cli
cli
scas
sub
dec
xorl
sub
or
mov
mov
scas
push
loope
push
lea
push
mov
cmp
mov
cld
push
lahf
sbb
int3
cmpsb
mov
xor
jp
sbb
or
out
loope
push
iret
ljmp
ja
xchg
mov
inc
repz
bound
sti
insl
adc
cs
in
jmp
mov
aad
sti
lcall
mov
out
cmp
sbb
rorl
adc
pop
rolb
or
ds
repnz
insb
out
mov
xchg
adc
outsb
nop
sbb
aam
repnz
ret
sbb
fsts
insl
leave
call
jl
jns
pop
dec
add
mov
xchg
mov
lret
call
mov
imul
inc
test
inc
sub
mov
adc
xchg
punpcklwd
xchg
fistpll
dec
subl
mov
jae
and
test
rcl
xchg
orl
loop
cmp
xchg
incb
jecxz
ret
iret
lds
xor
inc
bound
push
mov
arpl
loope
mov
xchg
sti
cmpsl
mov
in
sub
negl
cmp
mov
dec
and
rorl
inc
orb
and
mov
repz
jo
sbb
inc
scas
or
loope
or
mov
lods
adc
rolb
cmpsl
adc
nop
mov
out
pop
push
lcall
sbb
cmpb
adc
loop
jae
icebp
ja
cmp
in
mov
mov
inc
push
mov
repnz
xchg
adc
ds
lods
call
push
sbb
fdivrs
cmp
fisttps
cld
and
sbb
lret
fistl
mov
mov
cmovb
adcl
lods
out
addr16
add
or
mov
inc
mov
movsb
mov
pushl
mov
mov
push
adc
rcrl
jmp
xchg
sbb
mov
rorl
orl
push
add
test
or
test
jle
icebp
cwtl
mov
jns
pop
lods
pop
cmpsl
movhps
mov
or
sahf
test
fildl
adc
dec
or
out
icebp
dec
ja
int
cwtl
icebp
push
out
jp
adc
out
bound
mov
sarl
xchg
jne
pop
mov
dec
addb
lods
aad
in
push
adc
mov
cmp
addr16
xchg
out
scas
adc
jmp
lock
orl
sbb
popf
insb
sbb
push
sbb
loop
jbe
mov
lods
xchg
addr16
mov
pop
iret
popa
shlb
pop
cwtl
and
arpl
jmp
into
lea
mov
cmp
jg
rep
inc
mov
jge
popw
jecxz
cmpl
clc
daa
inc
mov
or
dec
jmp
pop
mov
mov
mov
test
subb
roll
scas
pop
mov
lret
loop
sub
sbb
scas
call
cmp
movsl
and
or
adc
in
mov
or
insl
out
mov
pop
mov
or
xlat
mov
pop
cmovno
add
push
xor
lcall
and
dec
pop
inc
loop
mov
jbe
or
mov
push
sub
nop
mov
movsl
mov
ds
stc
inc
xor
out
push
sub
mov
test
lcall
cmp
fsub
add
and
in
adc
cli
shrl
pop
out
push
sub
scas
mov
xchg
div
shlb
fcomps
jo
mov
mov
push
mov
aas
mov
xor
push
dec
mov
adc
inc
push
jl
ljmp
ret
push
stc
mov
sbb
cmp
and
add
adc
cmc
call
mov
sahf
cmp
arpl
mov
push
loop
mov
sarl
jmp
and
rcrb
mov
sahf
loop
jne
cmp
mov
aad
icebp
jno
pushf
push
jecxz
lret
shll
roll
inc
sub
push
pop
test
cltd
mov
fisttps
in
pop
pop
gs
jl
xor
int3
inc
in
stos
jecxz
dec
sub
js
mov
mov
sbb
out
fnstcw
inc
xchg
mov
pop
sahf
dec
cmp
dec
test
jl
mov
cli
jg
push
adc
sarb
rep
loop
movsl
cmc
cmp
push
push
sbb
test
mov
daa
add
cmpsb
je
jg
xor
and
mov
push
pop
repz
xchg
dec
push
loopne
pop
add
mov
or
shr
test
or
test
ret
pop
push
sti
pop
sarl
jmp
cs
int3
fdivl
out
dec
mov
loopne
roll
push
loope
push
ds
jg
in
sub
dec
mov
in
test
mov
pop
stos
daa
push
xor
jns
xchg
cmpsb
mov
decb
and
cmp
stos
clc
repnz
pusha
push
inc
imul
dec
or
inc
adc
popf
jecxz
xchg
xor
hlt
daa
adc
mov
push
lds
add
pop
insl
xchg
cmp
inc
or
scas
test
loope
push
jl
push
sub
lahf
fisubrs
pop
mov
adc
jle
test
mov
lret
leave
dec
sbb
inc
movb
xchg
mov
test
and
repnz
push
in
push
imul
ds
sahf
push
jmp
ficomps
sti
cmc
lods
mov
pushf
xor
jl
divb
dec
popf
mov
inc
cs
es
dec
nop
lods
in
nop
outsl
rcll
call
sub
mov
popf
cmc
aam
dec
pop
cmp
out
fwait
cltd
repnz
movsl
inc
pop
cmp
cs
ret
adc
jnp
or
outsl
lea
clc
fidivs
outsl
gs
or
sub
pop
and
sub
loopne
xchg
aad
dec
movsb
pop
mov
in
mov
sbb
push
push
cwtl
sub
mov
dec
adc
lahf
sub
aam
mov
pop
pop
gs
cmp
jmp
lds
gs
repz
sbb
add
in
clc
test
movsl
fcomi
mov
pop
mov
lret
mov
jae
test
pop
mov
xor
inc
adc
pusha
das
iret
mov
cwtl
cmp
sbb
pushw
inc
inc
movsb
add
cmp
aaa
enter
xchg
aam
pop
gs
mov
repnz
xchg
jnp
mov
jne
pop
stc
test
jg
mov
push
nop
test
ja
xlat
out
xor
pop
fstps
sub
inc
mov
aad
cmp
jp
sub
mov
pop
xchg
or
cmp
aam
lret
xchg
mov
popa
pop
imul
xchg
rcrb
xor
and
xchg
bound
movsl
pop
enter
je
mov
and
sahf
imul
test
xor
push
jb
js
push
jns
push
push
adc
push
ficompl
pop
mov
or
sub
pop
jle
inc
sbb
inc
cmp
adc
jb
xor
jmp
xor
mov
divb
cmpsl
mov
sub
mov
xor
cmpsl
push
pop
cmp
jae
repnz
jae
sub
add
lock
sbb
mov
and
pusha
jb
mov
icebp
cmp
nop
icebp
mov
movl
addb
mov
push
mov
jno
add
jge
rorb
cmp
add
aas
cmpsl
fidivs
fxtract
inc
in
xchg
and
inc
push
jg
dec
fs
inc
shr
mov
and
mov
xchg
inc
data16
cmp
pop
addl
adc
fmul
dec
rep
les
rolb
data16
pop
adc
bound
inc
and
mov
mov
sbb
mov
mov
mov
jnp
mov
mov
jno
adc
nop
cwtl
shl
cs
jl
and
aaa
or
mov
xor
sub
or
sbb
hlt
adc
in
bound
pop
mov
js
add
fldl
mov
fcomps
aaa
es
mov
popa
pop
cmp
das
int3
scas
add
das
mov
push
and
adc
fadds
out
jecxz
adc
or
adc
setle
subl
int3
or
jns
adc
subb
mov
lds
xor
push
mov
cmp
mov
mov
inc
les
dec
mov
cs
mov
das
je
jno
jo
pop
add
pop
repnz
mov
xor
cmp
sub
cmp
jo
pop
pushf
adc
dec
lock
push
inc
sbb
test
cli
imul
dec
pop
push
xor
jge
scas
loope
sbb
fsubp
xor
and
fldl
lea
rorb
imul
ret
clc
jmp
push
stos
je
cmp
dec
fmuls
mov
mov
cli
pusha
sarl
cmp
jns
setb
add
sbb
lds
xlat
xor
push
mov
lret
pop
ljmp
add
fadd
sbb
and
test
sbb
jae
aaa
jmp
filds
cs
hlt
pop
cs
mov
hlt
mov
loopne
popf
sbb
daa
xor
aaa
int
cli
inc
lods
xlat
incb
jge
jmp
cmp
mov
dec
mov
xlat
sub
ja
orl
mov
outsb
adc
add
or
test
std
out
sbb
push
mov
push
std
fistl
xorl
pushf
dec
sti
int
inc
push
or
arpl
pop
hlt
outsl
rolb
adc
mov
or
les
movsb
loop
ja
jnp
test
cwtl
iret
lea
or
xchg
lcall
packuswb
test
test
jle
sbb
lret
out
inc
and
loop
pop
stos
out
xchg
xchg
scas
jne
push
movups
test
popf
call
filds
decb
mov
push
jecxz
cmc
fs
jns
fistl
loope
push
adc
adc
imul
and
cmpsl
inc
in
lea
jno
adc
xchg
imul
outsl
inc
mov
push
mov
ret
mov
jae
fsubrl
and
sub
int
cmp
std
scas
ret
addb
das
sahf
mov
jb
into
mov
cmc
scas
mov
jbe
add
sarb
cltd
jp
mov
inc
jae
out
jo
mov
dec
sbb
pushf
inc
and
idivb
addb
adc
mov
dec
repnz
or
lcall
pop
sbb
inc
int3
and
out
addb
mov
sbb
jbe
sub
outsl
push
ret
pop
push
push
test
test
cmp
mov
sbb
lret
inc
mov
xlat
jno
inc
sub
xor
out
std
jae
test
js
in
cmp
das
push
icebp
adc
push
cmp
movsl
int
rclb
lret
in
or
and
loope
faddp
xor
fnstcw
pushf
push
inc
das
les
das
sub
rorl
div
or
pusha
pop
mov
jle
inc
or
mov
lods
dec
lods
sub
adc
push
pop
push
dec
sub
shl
mov
repz
mov
sbb
mov
mov
push
sahf
add
or
lcall
sub
scas
scas
pop
push
int3
ret
mov
aam
pop
inc
mov
xor
push
icebp
in
xchg
and
sbb
mov
pop
stc
xor
enter
pop
idiv
xor
xchg
mov
inc
sub
push
aad
xchg
pop
adc
in
or
push
shlb
push
adc
fsubrp
xchg
add
cmp
insb
or
fsubl
icebp
sub
inc
cli
sbb
jne
outsb
jo
aas
int
pop
mov
sub
mov
jg
mov
cmp
jle
aad
and
stc
arpl
daa
pop
dec
sbb
repz
mov
repnz
jmp
vmovaps
push
xchg
jb
lret
ret
stc
dec
test
add
inc
mov
lock
in
xor
inc
call
push
and
dec
int3
xchg
movsl
pushf
outsb
lea
xor
hlt
fsts
jecxz
clc
fidivrl
arpl
adc
stos
xor
jmp
movl
jge
fs
push
xchg
pushf
loopne
mov
cmpsb
out
fisttps
adc
pop
enter
mov
mov
test
jp
popa
fstl
dec
pop
mov
mov
add
fld
sub
clc
or
cmpl
out
xchg
mov
insb
movsl
inc
push
and
xor
jo
mov
scas
adc
pop
adc
andb
cmpsl
insb
or
sbb
mov
out
fbld
loope
inc
mov
out
scas
lock
mov
sub
cli
rcl
or
push
jge
orb
dec
and
mov
cmc
mov
mov
mov
dec
push
inc
add
push
mov
mov
inc
fistl
cmp
mov
add
sub
rorb
imul
mov
and
pop
push
mov
pop
lds
sti
jle
push
inc
lods
jno
mov
lahf
jo
ret
inc
hlt
out
xor
sbb
inc
xor
inc
jae
hlt
mov
arpl
mov
add
arpl
and
fstpt
inc
repnz
emms
movsb
push
push
out
cmc
dec
xchg
fldl
pop
scas
aad
push
xor
pop
pop
pop
fsts
aas
mov
and
repz
xor
enter
sub
addr16
push
scas
mov
cmc
mov
push
out
fld
jp
mov
mov
cwtl
mov
clc
sub
xchg
test
inc
xchg
add
adc
pop
and
jle
xchg
lods
gs
popa
adc
adc
out
stos
dec
mov
mov
dec
insb
mov
mov
cmp
mov
sbb
push
ss
mov
hlt
sti
scas
dec
mov
fwait
hlt
mov
pop
mov
test
cmp
xchg
xchg
ficoms
push
iret
mov
xchg
nop
test
popa
packsswb
cmp
add
xorb
daa
xchg
arpl
daa
inc
divb
jnp
adc
rcll
int3
pop
pop
jno
adc
mov
lret
cli
repz
sbb
movsb
call
pop
add
bound
dec
addl
out
ss
je
and
cmp
add
lret
dec
popf
jns
xor
mov
jne
fdivr
dec
filds
xchg
out
jno
mov
jecxz
mov
test
jmp
mov
pusha
loopne
test
cld
mov
jbe
loope
shl
aas
vpaddsb
cld
sbb
or
test
xchg
jg
adc
into
fninit
orl
and
in
mov
inc
mov
xchg
mov
es
xor
in
inc
div
mov
adc
sahf
pop
loopne
dec
push
pop
mov
testb
cmp
ss
daa
fldenv
popf
add
fstpl
jle
test
dec
sarb
jae
mov
jne
push
lds
sub
add
mov
les
andb
repnz
mov
pop
or
ljmp
adc
repnz
mov
jl
xchg
arpl
popa
push
mov
fstl
out
push
out
mov
xor
fldenv
fldt
nop
int
pusha
dec
sbb
sub
mov
fimull
xor
int
test
add
mov
in
rorl
fisttpll
mov
fcmove
pushfw
push
push
int3
mov
aam
scas
stc
cmpsl
cltd
subb
sbb
les
adc
cli
push
push
push
inc
pop
clc
je
jp
mov
add
arpl
and
fcomps
cwtd
sub
andl
xlat
jp
cmp
xchg
pusha
xchg
or
mulb
inc
push
adc
jmp
pop
sub
jmp
mov
cmpsl
dec
out
fistpll
and
xchg
int3
lahf
dec
sbb
in
inc
jns
pop
sbb
jmp
daa
add
aam
mov
cltd
or
fmuls
mov
jecxz
jg
test
lods
xchg
das
into
and
mov
leave
aas
cltd
jb
cmpsb
ja
pop
bound
cltd
adc
js
repnz
ret
inc
xor
pop
int
xlat
add
sahf
mov
rcl
sub
pop
pop
daa
imul
imul
sub
popa
dec
push
jge
mov
xor
inc
fldenv
xor
iret
fwait
int
push
rol
push
sbb
data16
loop
stos
insl
orl
xor
stc
stos
ljmp
popf
insb
adc
pop
xchg
xchg
mov
mov
dec
push
sub
scas
stos
lock
push
or
cmp
sub
add
mov
cmp
push
fisttps
cmpsl
iret
xchg
fnstsw
pop
fstpt
adc
cmp
lret
dec
mov
fucomip
lret
mov
adc
cmp
imul
in
sbb
mov
call
xlat
jbe
outsl
cmp
filds
pop
fcoml
stos
into
fcom
pop
xor
jmp
pusha
mov
mov
sbb
push
shlb
je
fs
out
push
and
push
pusha
divb
mov
sti
or
jne
push
and
out
fs
insb
repz
jo
mov
in
and
mov
push
xchg
pop
movl
sub
pop
sbb
inc
xor
push
inc
and
mov
mov
iret
jnp
fnstcw
imul
pop
pusha
mov
loop
pop
repz
cmp
iret
lods
je
jge
lahf
lahf
stc
add
ret
imul
out
adc
mov
leave
mov
or
enter
jns
ljmp
fcomi
fbld
xchg
out
aad
cmp
sub
jbe
mov
xchg
repz
stos
and
mov
loop
jg
add
ja
sbb
repz
cltd
sbb
push
inc
mov
xchg
adc
sbb
fadd
int
mull
sbb
scas
sbb
data16
insl
cwtl
or
std
jo
mov
mov
shrl
call
rcr
xchg
sub
or
xor
jae
sbb
lcall
push
lcall
mov
cmpsb
lret
repz
fwait
pop
push
ds
ret
andb
rcl
adc
out
pop
insl
jmp
mov
or
jp
or
lret
scas
or
rcl
popa
pop
add
rcr
sub
stos
imul
xor
test
roll
jb
rorl
or
mov
jg
mov
push
jb
or
cmpb
rep
pop
lret
cltd
or
sub
shlb
fisubrl
adc
mov
add
dec
jge
jnp
pop
jns
mov
shlb
mov
adc
xlat
test
icebp
insb
aad
push
aaa
enter
push
dec
xor
aas
xchg
lock
xor
fldl
data16
mov
iret
arpl
cs
mov
test
clc
xchg
lock
fldenv
test
fisubl
sbb
cmp
jmp
stos
mov
jmp
push
repz
xor
roll
ss
shrl
xor
clc
add
adc
push
dec
pop
leave
mov
fbstp
or
dec
mov
dec
mov
xor
cmc
nop
pop
jb
icebp
and
mov
js
test
lods
rclb
sti
into
jo
cmp
inc
mov
inc
sbb
sub
lahf
stos
jbe
pop
adc
inc
dec
push
inc
xchg
jb
mov
daa
push
out
enter
sbb
xchg
je
mov
int3
inc
xchg
cvttps2pi
xchg
cmpsb
int
call
push
mov
fnstsw
fnop
popa
add
cmpsw
test
xor
flds
fidivrs
xor
mov
loop
lret
popa
enter
cltd
fisttps
cld
fnsave
cmp
and
imul
dec
daa
jp
mov
push
movsb
inc
orl
pop
ja
dec
push
push
sub
jp
in
mov
inc
lahf
mov
cmp
movsl
lds
out
add
xor
add
int3
in
pop
cmpsb
mov
or
scas
ljmp
jmp
jae
shrb
js
test
test
push
or
jno
imul
xor
mov
push
mov
and
imul
lods
mov
or
push
rcrl
loopne,pn
cmp
adc
fadds
pop
fs
adc
jg
jl
mov
insb
dec
jae
mov
mov
or
adc
sahf
out
adc
ret
jae
call
jle
loop
hlt
les
pop
adc
repnz
loopne
cwtl
push
ret
fdivrp
jle
adc
popa
push
shl
mov
sbb
aam
sub
scas
sbb
mov
sub
es
cs
sti
fwait
sub
sub
lret
mull
sbb
stos
in
xor
cmp
addr16
hlt
xor
arpl
test
mov
inc
fldt
scas
test
jge
repnz
pushl
ret
mov
mov
gs
sub
sub
mov
sub
es
cmpsb
cmpl
pop
or
sbbb
cmp
insb
add
out
or
movsb
aaa
add
sti
inc
xchg
fs
xor
jb
xor
add
idiv
cmc
push
ss
dec
inc
insl
je
arpl
stos
adc
lea
addr16
fwait
jo
outsb
cmp
loop
mov
outsb
add
cmp
iret
mov
insl
sbb
sahf
mov
in
or
mov
dec
pop
arpl
std
push
repnz
shrl
push
inc
xor
stc
sbbb
and
jae
push
sub
pop
push
pop
mov
int
jbe
rcll
rorb
and
call
ljmp
inc
mov
push
fs
mov
pop
xor
fdivr
mov
jle
inc
icebp
xor
mov
push
aad
mov
pop
add
push
cmp
repnz
add
imul
mov
xchg
test
xchg
fsts
add
rcll
stos
adc
cltd
popa
xchg
sbb
xchg
lds
rcrb
aam
addr16
push
sbb
icebp
arpl
loopne
js
push
xlat
jns
inc
fwait
out
test
fimuls
lcall
daa
insl
and
sub
aas
sti
out
test
pop
add
jle
popa
jecxz
fstpl
jns
pop
mov
or
inc
mulb
add
leave
push
cmpsb
out
clc
insb
mov
jmp
push
mov
testb
js
leave
adc
out
push
in
lods
test
jb
cmpb
negb
jle
adc
jns
jp
sub
push
or
test
sbb
imul
mov
xchg
sahf
imull
in
inc
sbb
xchg
testl
loop
adc
adcl
and
and
xchg
xchg
leave
jle
bound
out
scas
inc
lds
sub
jecxz
sbb
pop
mov
notb
add
jno
adc
push
cmpsl
lods
addr16
push
mov
add
mov
pop
lds
rclb
push
int3
cwtl
mov
jo
sub
mov
lcall
cmp
fimuls
mov
xchg
cmc
lock
push
mov
dec
scas
or
push
test
sbb
sub
add
jns
lret
adc
mov
mov
fdivrl
imul
mov
cmpsl
jno
rcrb
enter
sbb
jo
cmp
mov
xorl
jmp
jno
test
lret
inc
dec
push
aas
orw
cmp
push
pusha
mov
xor
dec
inc
ficomps
jg
mov
int
mov
stc
jp
or
sti
ss
adc
mov
movsb
mov
out
or
push
fcmovnb
shl
mov
xor
push
mull
jg
sahf
test
rcrl
movsl
lahf
ds
inc
or
scas
mov
ds
mov
jl
in
sub
mov
sub
add
xchg
pop
in
iret
lret
outsb
mov
jmp
int
jo
in
movq
mov
or
js
push
out
sub
mov
mov
cwtl
lock
loope
jle
or
pusha
pop
push
ja
mov
das
test
dec
mov
sub
insl
sbb
frstor
dec
daa
scas
icebp
mov
data16
in
jecxz
jge
jne
mov
cltd
pop
leave
lret
or
push
std
cmp
mov
in
mov
sub
xchg
jo
ret
cwtl
jo
adc
shrb
add
mov
dec
aam
xor
add
pop
icebp
mov
fstps
add
push
arpl
ja
mov
movsl
stos
popf
cmp
loop
insb
push
mov
dec
adc
sbb
insl
dec
scas
pusha
sbb
out
cltd
push
dec
or
scas
fstpt
xchg
pushf
and
sarl
sbb
in
test
inc
mov
das
add
jo
iret
data16
pushf
popf
loope
jb
sub
scas
xchg
loope
pop
loop
xchg
inc
cmp
and
repz
xchg
add
xchg
lea
hlt
sbb
mov
xor
shlb
inc
dec
push
push
adc
pop
out
gs
lods
xchg
leave
divb
repz
mov
xor
sbb
cmp
lea
and
pop
sbbl
pop
mov
and
repnz
pop
ficoml
mov
add
aam
cmp
lds
aas
repz
ss
out
jns
cli
mov
ret
out
and
loopne
jo
aaa
mov
ljmp
mov
cmp
out
pop
popa
pop
into
imul
or
xchg
push
jmp
sub
test
cmc
cltd
js
test
jge
shll
jle
adc
adc
insb
adcb
mov
or
je
and
dec
dec
fcmovnbe
and
rcrb
shrb
xchg
data16
rol
popa
mov
mov
aas
dec
inc
and
sti
xor
popa
mov
mov
jle
xor
inc
shll
jl
dec
fs
mov
jo
adc
scas
mov
in
icebp
jmp
nop
shrb
pusha
outsl
daa
out
sti
cs
mov
shr
int
jp
fidivrl
shrb
int
in
inc
gs
repnz
jl
add
cwtl
ffree
packsswb
jno
mov
jl
jae
pop
xor
jne
gs
hlt
sbb
arpl
xchg
or
push
cmp
and
push
sbb
adc
sbb
sti
hlt
fildl
push
dec
and
sbb
xchg
pop
pushf
jae
cmpsb
cmp
in
mov
pop
pop
lea
xchg
xchg
xor
dec
push
dec
sbb
pop
frstor
xchg
stos
sbb
aam
jo
push
xchg
pusha
cmp
pop
sub
mov
testb
bound
ss
loope
pop
pop
int
or
lods
in
or
mov
enter
fimuls
clc
pop
pop
sub
jae
adc
adc
cmp
mov
mov
cs
inc
test
std
adc
or
push
bound
std
imul
mov
sti
mov
ja
jge
adc
push
adc
xlat
push
pop
ds
fs
mov
mov
push
scas
pop
sub
xchg
jnp
xor
dec
add
lcall
sti
sbb
outsb
or
mov
icebp
cltd
ret
fmull
dec
add
xchg
clc
cmp
int
push
mov
dec
add
inc
mov
push
push
dec
xor
pop
shr
les
ja
jo
xchg
push
xchg
push
je
fistpl
and
clc
dec
mov
mov
insl
jmp
pushf
jl
cmpb
movsb
inc
add
xchg
and
mov
push
and
repz
idivl
adc
insb
je
adc
dec
fdiv
dec
pop
ds
movsl
call
xchg
ret
sbb
cmpb
push
or
loop
cmp
insb
pop
sub
cmp
fsubrl
lahf
sbb
idiv
add
gs
into
xchg
push
subb
mov
pop
xorb
in
repz
dec
lock
add
repnz
ret
xchg
pushf
cmp
dec
cli
movsl
fnsave
push
cmpsb
out
cwtl
mov
lods
into
lcall
push
sbb
adc
in
xchg
nop
ds
jo
lret
in
xlat
les
shlb
ss
imul
lret
bound
out
repnz
jo
ret
jno
sti
pop
mov
repz
cld
jb
pusha
es
adc
mov
adc
jmp
into
dec
mov
in
fdivl
cmp
in
jmp
std
cld
dec
ja
and
shr
xor
sti
jo
or
mov
int3
icebp
sti
js
test
or
dec
out
mov
xchg
roll
iret
loopne
add
sti
push
out
jp
mov
rcrb
sti
movsl
addb
mov
fsub
xchg
cli
dec
fldcw
sarb
xor
leave
sbb
fldt
enter
jns
pop
scas
movsl
lods
cmp
and
jmp
jg
dec
mov
in
test
mov
xchg
jo
outsb
dec
push
js
cmp
xchg
test
scas
add
pop
push
push
xor
dec
leave
ret
and
sbb
hlt
add
std
adc
sbb
int
arpl
mov
insb
mov
data16
daa
je
xchg
stos
out
lea
aam
loope
aam
or
pusha
pop
nop
xchg
push
fmul
push
cmpsb
cmp
and
mov
lcall
leave
inc
push
call
movsl
out
mov
sub
and
loopne
int
dec
enter
xchg
jl
adc
in
addr16
mov
mov
xor
and
mov
lock
clc
add
mov
cld
lds
add
sbb
ja
cs
adc
jne
das
mov
add
cwtl
sbb
adc
adc
ss
or
or
out
fcomi
push
arpl
loopne
or
dec
mov
insl
xchg
or
imul
insb
jnp
inc
cmp
cmp
push
idiv
sbb
stos
cld
add
pop
push
rorl
popa
lea
sar
mov
mov
adc
add
inc
and
gs
jg
lahf
xchg
outsb
cmp
jb
sbb
sub
in
cmp
fptan
mov
dec
in
out
push
jp
inc
repnz
shrb
dec
ss
xchg
sti
shlb
stos
mov
loop
inc
mov
pop
dec
jno
cld
add
pop
push
pop
cmpsl
out
mov
fidivl
stc
pop
add
mov
mov
lret
or
lods
dec
out
cmc
repz
std
movhps
inc
or
mov
ljmp
or
push
mov
insl
enter
out
leave
test
push
outsl
and
fsubs
aam
enter
ss
jl
outsb
mov
push
popf
inc
loope
push
and
clc
decb
sbb
mov
xchg
rcrb
pop
jecxz
fwait
mov
or
nop
xchg
lret
push
popa
out
mov
sbb
add
push
jns
aas
mov
popf
adc
stc
pop
xchg
test
adc
adc
mov
xor
mov
dec
sahf
inc
int3
clc
push
or
cmp
adc
xor
pop
imul
scas
addr16
fisttps
mov
mov
shlb
push
pusha
dec
mov
lods
cmp
sub
push
jne
adc
ds
pushf
push
xlat
cmp
stos
sub
lcall
xor
pop
xchg
pop
sbb
ja
pop
fstpt
dec
cmp
rorb
pop
insw
enter
stc
pop
xchg
push
fstl
cld
push
mov
jo
or
pop
and
ret
mov
iretw
in
dec
orb
lock
jecxz
xor
xchg
pop
inc
nop
loope
lahf
and
shrl
imul
or
pop
repz
lock
push
sub
sbb
dec
or
fstpt
mov
sub
or
imul
cmp
xchg
loope
testb
pop
clc
lods
bound
je
jle
xor
loopne
adc
mov
sbb
jmp
and
out
outsb
lahf
bound
inc
dec
lret
aaa
jmp
stc
xor
movsb
push
pusha
mov
ja
int3
and
mov
inc
cmc
push
jg
jmp
xchg
fadds
loop
jns
fistpll
rclb
dec
push
ror
mov
sti
gs
inc
add
adc
fdivr
inc
add
aad
lret
sub
pop
mov
out
ljmp
pop
cmp
jne
daa
lods
testl
pusha
sbb
xchg
les
xor
in
or
mov
adcb
xchg
xorl
cmp
xchg
enter
sbb
testl
cmp
ja
dec
inc
test
push
ret
fldt
call
mov
push
incb
lret
jl
orl
stos
call
adc
dec
adc
je
jge
and
mov
out
pop
pop
mov
loopne
sub
cmp
pop
adc
cmc
mov
sub
mov
mov
scas
pop
stos
jae
xor
lahf
ljmp
dec
or
fs
in
xlat
push
jp
dec
jmp
sbb
stos
repnz
dec
sarl
add
jb
js
add
dec
push
mov
and
jmp
pop
lcall
lock
in
jnp
aaa
imul
mov
lods
lock
stc
aad
pop
sar
mov
imul
sbb
scas
pop
cwtl
push
daa
xor
or
cmp
es
mov
mov
sbb
nop
loopne
jecxz
popf
push
mov
inc
adc
test
xchg
adc
sti
fidivrl
add
in
dec
fld
gs
push
pop
sub
test
sbb
mov
js
inc
stc
out
lock
jno
push
xor
jle
mov
jle
xchg
inc
movsb
int
jge
frstor
dec
movsb
aam
xchg
mov
mov
xchg
bound
movsl
mov
in
popf
mov
sbb
repz
rclb
cmpsb
jg
push
roll
sbb
jl
adc
sub
xchg
incl
push
imul
iret
or
pushl
pop
out
scas
outsb
insl
imul
pop
xchg
mov
cld
test
idiv
and
xchg
test
aad
mov
jne
int
into
sbb
divb
add
lret
xor
cltd
test
push
dec
bound
sbb
push
sub
jbe
xchg
repz
mov
jns
sub
cmp
push
ss
push
xor
dec
and
adc
pop
cmp
xor
push
movsb
cmpsb
push
ljmp
fildll
xor
mov
aaa
sbb
mov
xor
inc
jl
xor
or
ret
sub
dec
lock
cmpsl
lret
call
cmpsl
in
cmpsb
lock
addr16
mov
aaa
adc
dec
inc
das
mov
dec
mov
mov
add
cwtl
das
lea
sbb
fcoml
in
add
pop
push
cmp
sbb
shl
xchg
movsb
repz
shll
mov
add
sahf
hlt
cmc
cmpb
dec
pop
inc
stos
aam
push
fnstenv
fidivs
xor
push
aam
and
cmpsb
jg
fsub
test
clc
mov
dec
dec
sub
fs
add
cmpsl
mov
das
jb
mov
add
out
clc
cmpsl
mov
shlb
mov
repz
cmpl
cltd
adc
push
pop
scas
movsb
pop
sti
jae
bound
push
mov
jle
sbb
xchg
add
push
mov
test
aam
dec
add
stc
bound
inc
int
mov
mov
enter
loopne
inc
xchg
lock
movsb
adc
imull
rcrl
mov
mov
sub
push
mov
scas
cld
jnp
push
fwait
outsl
mov
nop
stc
xor
loope
ss
gs
test
rol
ss
pop
jle
mov
enter
fidivl
icebp
out
pop
iret
xchg
pop
xlat
ljmp
stc
aad
test
insl
daa
xchg
imull
jns
int
mov
test
outsl
int3
sub
je
int3
mul
test
xchg
inc
xor
mov
sti
rorb
adc
mov
jne
pslld
mov
or
ja
mov
xchg
clc
sbb
ret
repnz
cmpsb
sub
std
cmpsb
out
xchg
outsl
push
repnz
test
mov
mov
scas
mov
dec
inc
lock
lcall
inc
inc
jo
ret
stos
mov
ja
fnstcw
shll
and
sub
adc
and
cmp
jp
insl
sbb
inc
rorl
pushf
in
inc
leave
push
loop
mov
mov
leave
mov
hlt
inc
ja
xlat
test
and
ficompl
and
seta
mov
add
fs
leave
push
cld
lods
in
and
mov
or
icebp
push
int
adc
jle
out
popa
cmp
jge
mov
or
popa
dec
pop
or
xor
xor
adc
divb
notb
lahf
imul
mov
std
scas
hlt
xchg
add
push
daa
nop
arpl
in
orb
insb
mov
sbbb
mov
stc
filds
imul
push
pop
xor
sbb
je
mov
scas
les
dec
adc
das
out
inc
ljmp
push
daa
xchg
sub
sbb
not
cmp
outsl
push
lock
out
pop
cli
jne
push
add
mov
mull
fwait
jo
bound
jae
xlat
repnz
jmp
jecxz
fsts
fmul
push
fnstenv
shrl
pusha
in
mov
push
push
clc
pop
xor
jp
aaa
push
mov
add
mov
fdivl
adc
je
pushf
add
jb
out
scas
insb
lods
sub
cmp
xchg
insb
loopne
sahf
jno
jno
outsl
add
xchg
mov
adc
test
lcall
and
outsb
out
pop
sub
aaa
cld
sub
pop
dec
outsl
and
xchg
dec
jnp
arpl
adc
jnp
or
pop
int3
ja
cltd
subps
out
fwait
in
push
sub
aam
icebp
push
sub
fs
imul
and
out
inc
stc
lea
cmpsb
fnstcw
pop
out
mov
jp
insb
mov
lock
adc
std
inc
sub
xor
out
inc
xchg
xchg
push
jecxz
mov
shrl
addr16
jb
push
lahf
jecxz
pop
jl
enter
xor
mov
outsb
loope
inc
xchg
sub
and
shll
lcall
dec
jo
inc
push
pop
lret
gs
int
loope
adc
xor
mov
jae
jmp
pop
jle
fmuls
stos
xorl
add
or
loope
popa
sti
mov
je
inc
sarb
ja
js
or
mov
pop
jne
lods
add
int3
add
inc
mov
cmc
loope
adc
sti
inc
cltd
outsb
sub
or
das
jecxz
adc
push
adc
push
mov
bnd
or
sbb
lret
dec
jne
inc
divb
add
or
sarl
les
aad
outsb
sbb
cmp
aam
movsl
inc
xor
push
scas
into
cs
fstpl
das
addl
push
mov
jp
cmpsb
out
mov
mov
jl
cmovns
nop
dec
test
imul
mov
fdivl
sbbl
aam
frstor
inc
pop
test
mov
pop
popf
insb
pop
dec
cmp
cmp
cmp
xchg
push
nop
sbb
sahf
or
pop
dec
xchg
push
loop
xchg
outsb
pop
daa
and
shll
jne
adc
ljmp
mov
loopne
mov
mov
fwait
test
xlat
lahf
hlt
lret
sub
cwtl
and
outsl
ja
cs
dec
mov
xchg
jbe
cmpsb
adc
or
mov
cwtl
flds
repnz
dec
pushf
add
aad
lcall
ljmp
jg
clc
sbb
cmpsb
pop
ljmp
push
out
mov
lcall
pop
inc
or
push
icebp
sahf
jno
inc
scas
dec
scas
repnz
dec
sub
mov
and
mov
mov
jecxz
fbstp
stos
xor
in
fwait
adc
inc
mov
dec
push
inc
loopne
lods
sti
pop
or
rcr
sbb
inc
cli
jae
mov
mov
shlb
jl
stos
imul
jge
leave
cmp
pop
adc
push
fidivrs
push
lods
leave
push
out
inc
mov
jg
jmp
stos
or
arpl
adc
pop
cmpsb
pop
push
dec
push
out
fidivrl
decl
and
jle
mov
xor
lret
int
adc
shll
pop
repz
hlt
sbb
add
add
sbb
lret
jbe
mov
in
jp
enter
pop
ljmp
add
stos
mov
mov
cs
dec
xchg
mov
popa
lret
pusha
jle
push
fadds
jo
cmc
sahf
jae
jb
arpl
add
fcomp
filds
andl
lea
setp
nop
pop
mov
orl
lcall
or
adc
loop
bound
xchg
xor
dec
add
inc
xor
sub
arpl
add
cli
mov
adc
mov
movsl
stc
pop
cmpsl
dec
stc
lea
nop
cmpsb
sub
and
inc
mov
cld
cmpl
push
push
cmpsl
jns
or
clc
add
adc
bound
dec
ljmp
lahf
sub
fwait
jge
lods
cmpsl
mov
ss
pusha
into
popf
and
sub
or
mov
into
out
and
inc
mov
aas
inc
ror
stos
lret
pop
mov
push
stos
mov
stos
sbb
mov
push
cmp
or
cld
mov
lahf
movsb
lea
insb
mov
mov
sub
mov
outsl
adc
dec
outsl
xchg
mov
adc
push
rcr
das
mov
ret
int
mov
fistl
ja
adc
inc
cli
pop
call
mov
mov
xchg
out
jae
mov
push
mov
sub
aaa
or
scas
loope
xor
jo
cmpsb
ret
shrl
andb
test
cld
jns
xchg
adc
pop
cmp
pop
aaa
push
mov
jmp
pop
sub
icebp
cmp
xor
test
loopne
lea
in
dec
ss
in
std
jmp
mov
hlt
lds
adc
mov
sub
inc
test
mov
mov
jb
mov
rcll
lahf
push
and
js
mov
lods
push
xchg
cli
cmp
movsl
add
cmpsl
jle
xchg
aaa
gs
mov
jp
adc
and
in
pop
and
pop
fidivrl
les
fnstenv
jns
cmpl
adc
pop
iret
stos
cmp
out
lds
outsb
mov
outsl
jmp
std
push
mov
push
and
sub
sub
pop
jmp
jnp
mov
pop
das
jbe
cwtl
shlb
adc
push
add
add
and
xor
sbb
popf
aad
inc
jp
pop
lds
push
leave
cmp
fucomip
in
dec
sub
mov
or
push
dec
in
xchg
jnp,pt
insl
inc
mov
mov
xchg
xor
mov
es
lret
lret
xor
mov
stos
pusha
hlt
xor
cwtl
dec
adc
adc
lods
fsubl
push
dec
data16
test
or
sbbl
dec
pushf
xchg
fidivl
test
cld
sbb
pop
lods
dec
jge
js
mov
mov
ss
jbe
or
add
subl
mov
jecxz
mov
mov
xchg
dec
repnz
push
dec
and
push
mov
add
icebp
aas
mov
stos
pop
jns
push
gs
roll
mov
out
dec
lret
aaa
notl
mov
mov
push
xchg
mov
sar
pop
movsb
in
pop
push
bound
aad
call
ret
push
inc
push
xchg
insb
lcall
mov
xchg
xchg
in
psrld
xor
cmpsb
sub
fists
fadd
enter
pushf
xchg
push
inc
lock
in
les
adc
pop
xchg
mov
out
push
ds
fs
je
pop
xchg
xchg
bound
loop
pop
lods
sbb
test
jne
jmp
lds
sahf
sub
rcl
and
fsubrl
push
or
orb
mov
pushf
in
add
push
inc
ja
notb
xchg
enter
hlt
mov
xchg
arpl
ss
daa
jmp
lret
scas
lcall
pop
rcr
outsl
repnz
out
dec
add
shl
test
adc
shl
inc
addl
sub
xchg
and
add
sarb
xor
push
or
inc
lahf
popf
aad
mov
jp
mov
pop
lret
xlat
stc
pushf
add
dec
mov
inc
dec
pop
nop
add
fistps
xchg
outsb
mov
push
jmp
movsb
pop
fcmovb
or
dec
dec
mov
leave
stc
lahf
imul
mov
pop
enter
mov
mov
test
fbstp
and
and
ror
jecxz
inc
push
cmp
inc
pop
mov
push
rorb
and
push
out
fadd
push
mov
daa
sub
dec
push
outsb
cmp
loopne
jns
shlb
or
mov
xchg
jb
mov
orb
popa
test
jbe
inc
pminub
sub
xchg
outsb
jl
mov
inc
pop
stc
aas
stc
mov
addr16
sub
mov
xor
mov
adc
push
testb
jmp
push
add
dec
lea
int
push
add
jl
push
stos
sub
mov
pop
mov
pop
or
aas
push
lea
sti
sbb
push
lods
push
mov
mov
or
popa
sub
push
pop
or
xchg
movsb
and
lfs
rolb
sarl
leave
pop
cmp
lock
fmull
loop
inc
xorl
sub
and
das
mov
push
mov
loope
add
lds
and
and
xor
xlat
and
adc
dec
sbb
fcmove
adc
icebp
or
add
scas
pop
test
dec
fimuls
xchg
jecxz
ljmp
xor
loope
test
stos
shlb
jnp
jnp
jge
lahf
testb
fdivrs
mov
jmp
int
mov
sub
cli
idivl
mov
xchg
into
mov
add
or
inc
jnp
jae
mov
mov
test
ret
lods
shll
xor
add
repz
inc
inc
scas
inc
lcall
cmp
lods
ljmp
sbbl
and
fimuls
sub
lcall
imul
out
sub
jge
add
popf
pushf
mov
paddsb
lcall
mov
addr16
xchg
cmc
cmp
test
scas
out
add
jmp
fwait
shll
mov
aam
dec
cmp
mov
sarb
scas
mov
push
jp
xchg
inc
loop
xlat
aad
jno
cmp
or
out
cmpsb
mov
sahf
es
ljmp
dec
imul
stos
dec
imul
loop
pop
cltd
cltd
adc
sub
insl
jecxz
mov
mov
pop
ret
xchg
cmc
add
rorl
test
aad
js
jne
fcoms
lret
cmp
lods
arpl
popf
das
mov
push
push
push
dec
add
xchg
icebp
clc
inc
lea
mov
lods
outsl
mov
or
add
adc
xchg
fs
ja
push
push
add
push
lahf
jg
or
shlb
mov
stos
cmp
sbb
push
movsl
shr
repnz
fimuls
jno
xchg
popa
sbb
sub
sarl
mov
jae
inc
mov
out
stos
xor
sbb
or
add
cmpsl
dec
cwtl
jmp
or
xchg
iret
fwait
mov
mov
je
imul
out
mov
pop
ret
cmpsb
out
insb
imul
mov
inc
hlt
lods
addr16
ljmp
shll
dec
je
xchg
int
ja
ljmp
int
and
loopne
fidivl
mov
daa
inc
pop
es
cmpb
or
sti
mov
dec
leave
jecxz
mov
popf
adc
pop
scas
repnz
clc
sub
mov
adc
div
fiaddl
repnz
ja
scas
std
cld
pop
xlat
mov
fildl
jg
lret
and
mov
mov
sbb
ss
push
scas
int
add
mov
nop
in
or
movsl
pushl
popf
ljmp
out
in
lods
cmpl
les
mov
cmp
aad
inc
jae
cmp
adc
push
or
outsl
push
int3
mov
movsl
mov
adc
cmp
mov
add
add
push
adc
adc
icebp
jle
mov
cmp
test
insb
adc
jns
movsl
sbb
stc
std
xchg
lret
outsl
fisttps
adc
ljmp
sbb
jge
insl
jmp
bnd
sub
adcl
int
fnstenv
iret
test
jns
inc
mov
pop
addr16
call
cmp
fs
lret
inc
adc
dec
stos
and
mov
jae
and
cmp
and
mull
jns
sub
mov
subps
add
fisttpl
out
jle
add
pop
jns
aad
insl
jno
and
cmp
jns
lds
addr16
jge
in
sub
push
fildll
loop
jp
or
jge
jge
xor
mov
pushf
mov
sbb
and
dec
daa
scas
dec
mov
mov
push
dec
lret
inc
pop
and
mov
pop
xchg
mov
jmp
jb
pop
push
mov
outsl
adc
inc
hlt
adc
lea
inc
lcall
dec
inc
lret
dec
xchg
shrb
mov
insl
arpl
push
pop
inc
fbld
pop
jge
xchg
inc
xor
fidivrl
pop
stos
or
push
in
ja
mov
roll
adcb
decl
or
arpl
jg
outsb
add
cmp
out
les
out
adc
loop
push
dec
dec
adc
jns
mov
mov
and
sbb
out
mov
ja
lds
mov
call
jg
and
xchg
inc
arpl
in
and
lea
and
push
sbb
int3
mov
popf
xor
lcall
out
mov
xor
xchg
movsb
inc
test
das
or
test
push
mov
daa
test
dec
repnz
icebp
popf
mov
pushfw
popa
cld
xchg
xchg
or
insl
sbb
cli
fdivs
push
js
or
push
insl
imul
fdivs
mov
jecxz
sub
pusha
cmpl
or
or
inc
sub
xchg
rcl
out
xchg
cmp
cmp
push
mov
xchg
sbb
mov
inc
jbe
lret
xchg
inc
js
push
test
xorl
or
mov
lcall
xlat
jbe
insl
and
in
push
push
mov
cwtl
cld
in
cmc
pop
stc
test
or
jo
xor
dec
inc
ret
inc
sub
push
adc
fsubl
scas
inc
pop
mov
jmp
inc
int
aad
and
popa
sub
repz
pushf
pop
aad
mov
sarl
shlb
mov
mov
sub
daa
xchg
repz
xorl
dec
ret
in
add
ja
lahf
mov
cmp
push
push
out
repnz
shrb
cld
divb
lods
fimull
in
int3
jle
and
pop
imul
insb
mov
fidivs
fildl
lret
add
cmp
stc
popf
mov
stc
jns
outsl
cmpl
or
xor
js
fadds
fisubs
jl
xor
fldcw
and
push
ret
test
lret
test
movsl
lods
inc
adc
insb
push
mov
ret
mov
out
sbb
popf
mov
hlt
imul
rcl
sbb
mov
test
int3
test
dec
adc
jge
and
add
js
insl
add
xchg
xchg
cmp
test
das
mov
push
shlb
xchg
sub
lcall
les
pop
daa
push
repz
dec
sub
xchg
mov
orb
or
sbb
jb
test
or
mov
jecxz
inc
sub
fcomps
mov
int
adc
inc
shl
lds
and
adc
repnz
lods
loope
in
mov
es
test
jge,pn
xchg
mov
jbe
push
out
jnp
xchg
lahf
into
out
pop
outsb
add
lret
pop
test
addb
add
adc
pop
insl
lds
xlat
sbb
inc
in
insb
ja
inc
add
jl
movsb
mov
dec
in
shlb
leave
icebp
js
int
rorl
stos
mov
jo
and
jecxz,pn
mov
stos
cmpsl
test
push
dec
dec
push
pop
cmpsl
notb
mov
mov
cwtl
push
shlb
scas
push
lahf
lea
mov
adc
pop
flds
xor
inc
jmp
lret
test
or
xchg
mov
hlt
lods
cmp
in
shll
xchg
jl
sub
out
pop
mov
push
xor
cmpb
add
icebp
cmpl
adc
xor
test
sub
mov
adc
dec
jbe
rclb
lcall
push
shll
xor
pop
push
iret
lds
xor
lea
out
pop
imul
scas
dec
mov
jno
sahf
aam
popa
sahf
pushl
pushl
imul
mov
mov
das
adc
mul
fcoml
stc
xchg
sub
adc
mov
nop
in
ret
xchg
inc
adc
cmp
shll
aad
jbe
sbb
mulb
fmuls
lcall
aaa
in
or
icebp
dec
rcrb
pop
pop
sbb
push
aaa
mov
push
pop
dec
fstpl
mov
in
std
repz
ljmp
and
ficomps
jb
movsl
arpl
mov
jle
leave
and
jle
pop
pop
ja
into
ret
aam
xor
adc
in
bound
fistl
test
mov
xchg
mov
mov
and
mov
xor
adc
xor
mov
pop
mov
cmp
sbbb
mov
mov
xchg
icebp
popf
loopne
pushf
adc
mov
dec
lds
imul
repz
mov
mov
ret
xor
pop
sbb
push
sub
in
in
in
cmp
js
nop
jae
push
es
lock
rorl
xchg
jae
xchg
xor
cmpsl
iret
xchg
mov
imul
inc
loop
adc
gs
ffree
inc
push
pop
push
jmp
add
into
mov
jmp
mov
in
mov
stos
bound
inc
jnp
nop
xor
dec
jg
je
sbb
sub
mov
sub
es
xorb
es
xchg
jl
add
std
mov
xor
ljmp
dec
lock
fisubl
cmp
inc
stos
mov
xchg
mov
mov
jle
inc
pop
inc
sbb
cmp
inc
stc
push
mov
ja
inc
cmp
hlt
bound
add
ss
inc
pop
jecxz
inc
addb
fidivrs
cmc
sti
cmpsb
sub
mov
cli
push
push
pop
testl
bts
test
push
xchg
and
cs
imul
sub
mov
je
sbb
add
incl
imul
rolb
repz
pop
cs
imul
cld
cltd
rcrb
lret
mov
push
push
shlb
add
push
xor
pushf
mov
cmc
xor
shll
sub
mov
pop
addr16
out
data16
lods
lcall
mov
mov
jge
or
jmp
insl
in
xchg
stos
jnp
and
adcl
mov
std
mov
xchg
pop
ret
push
sbb
inc
or
sahf
in
xchg
test
std
nop
dec
out
xor
inc
xchg
push
out
fimull
push
xchg
xchg
nop
mov
sbb
cmpsb
xchg
nop
mov
rcr
loope
jb
sub
add
out
push
and
jbe
inc
xchg
fstps
pop
xchg
stos
movsb
punpcklwd
mov
jp
sbb
mov
push
leave
xchg
sub
pop
xor
and
stos
mov
pop
stos
lods
mov
jle
sub
xchg
mov
out
xchg
mov
jl
test
ljmp
push
movb
js
lods
fistpl
jae
jbe
outsb
cwtl
dec
rol
sub
in
mov
lods
mov
negb
ja
jne
xchg
adc
test
pop
pop
push
xchg
daa
js
mov
push
mov
ljmp
std
and
sbb
jnp
je
movsb
sbb
inc
lds
or
xchg
mov
push
loope
cmpsl
insl
negb
push
jg
mov
out
cmpsb
inc
xchg
xchg
sub
ss
dec
adc
jge
push
data16
btc
into
dec
mov
in
dec
fiadds
cmc
hlt
mov
imul
jnp
sub
jo
xor
hlt
add
and
jecxz
decb
push
sbb
jl
test
pop
dec
cmpsl
mov
cmpsl
outsb
inc
mov
mov
in
jb
adc
add
cmp
fcmovb
hlt
clc
sbb
fdivrs
insb
cmp
gs
sbb
int3
pop
mov
xor
pop
jl
push
and
mov
fimuls
push
xchg
xor
push
aad
cmpb
aaa
or
add
sahf
sub
leave
lock
addr16
mov
je
rorb
popa
pop
push
loop
pushf
jnp
cmpsl
push
adc
mov
mov
insl
test
mov
inc
adc
pusha
push
rorb
gs
insl
xlat
push
dec
pop
and
pop
imul
iret
xorb
xchg
shlb
stos
sub
push
cltd
add
int3
sub
mov
adc
adc
jne
mov
cmp
or
arpl
xor
mov
and
push
in
sub
sub
std
out
mov
xchg
dec
jecxz
sub
mov
lcall
das
cmc
insl
mov
or
sbb
pushf
outsl
bound
imulb
mov
into
mov
xchg
cs
or
jae
push
mov
mov
pop
outsb
sarb
or
popf
mov
dec
xor
sbbl
lret
lods
leave
pop
rcll
jo
stc
mov
clc
les
sahf
pop
rolb
imul
call
sub
test
je
fstpl
dec
stos
test
mov
pushl
into
shlb
imul
and
outsb
xchg
fwait
pop
arpl
add
xor
cmpsb
mov
jecxz
out
cmp
pop
idivl
ljmp
fisttpll
es
xor
xor
xor
add
stos
out
mov
xchg
outsb
adcb
mov
pop
xlat
incl
and
mov
dec
ret
push
push
add
out
in
jo
test
pop
cmp
sub
sahf
loope
int
je
jns
mov
fisttpll
xor
inc
xor
addl
test
fwait
add
jb
shll
rolb
cltd
dec
int
pop
jge
push
pop
ror
sahf
mov
xchg
sub
add
jge
das
pop
lret
nop
lea
lret
test
hlt
jmp
into
adc
stc
sub
push
lret
fstl
ret
push
fmuls
and
movsl
daa
xchg
pop
lcall
adc
or
add
jnp
sti
or
lcall
lea
pop
inc
js
sbbb
jb
pop
in
inc
bnd
in
cmp
mov
and
adc
icebp
mov
cmp
adc
cli
sub
adc
negl
mov
sahf
inc
out
fs
pop
sarl
lahf
xlat
movsb
mov
pusha
gs
das
xchg
sub
xchg
ret
mov
ret
test
cli
push
popf
mov
imul
fwait
inc
xchg
and
jbe
fwait
addr16
xchg
fwait
scas
mov
lods
popf
jp
dec
jb
lds
mov
adc
fsts
repz
sahf
mov
mov
jg
push
cmovle
adc
ret
or
cmp
add
js
mov
inc
gs
adc
sti
jl,pt
jno
dec
cmp
sahf
and
mov
or
xor
test
test
sti
divl
mov
icebp
fwait
int3
fwait
mov
outsb
sub
xchg
adc
add
int
jl
dec
test
mov
cwtl
inc
mov
cld
jo
dec
mov
and
fcomps
xchg
orb
pop
jecxz
push
fsub
xchg
xchg
or
mov
lcall
xchg
addr16
dec
dec
and
push
xor
push
aas
cmc
inc
mov
cli
dec
bnd
lret
or
push
inc
sub
ret
sub
call
cmp
inc
in
xor
sahf
xor
out
jg
mov
cwtl
pop
push
lods
test
es
jb
xor
test
lcall
mov
int
sub
clc
dec
lock
sti
in
mov
cmp
test
in
xlat
outsl
pop
dec
nop
xchg
mov
sub
shlb
fucomip
ss
loop
outsb
sahf
lar
sti
test
mov
or
add
insb
outsl
xchg
cwtl
mov
call
push
pop
int3
cltd
dec
int
sti
xor
cmpl
pop
inc
cmp
jmp
pandn
jb
mov
inc
cmpsl
sub
adc
cmp
sahf
add
and
xchg
fdivp
mov
mov
and
adc
add
and
mov
lock
loopne
das
aaa
inc
mov
lret
ret
call
in
aam
sbb
pop
fimuls
jge
adc
test
ss
mov
add
lcall
push
push
cmpsl
roll
repnz
leave
repz
movsl
mov
and
dec
js
push
hlt
ljmp
mov
jmp
push
popl
js
xchg
sub
xchg
lods
fs
ss
or
aad
push
es
hlt
and
jae
add
sbb
insb
mov
push
insl
es
enter
iret
add
rcl
dec
pop
and
into
or
jg
push
jbe
es
jb
repnz
mov
aad
fistpll
je
cwtl
dec
inc
mov
fwait
xchg
mov
lods
mov
jae
cmc
mov
pop
pop
dec
jnp
es
xor
test
hlt
fldt
data16
test
inc
aad
xor
ljmp
ret
jb
imul
aam
fstpl
dec
mov
in
je
sbb
inc
mov
clc
loope
fildll
inc
jne
in
cwtl
out
fnstsw
mov
dec
out
roll
cwtl
cmp
xchg
idivl
cmc
adc
and
icebp
lods
stos
push
or
mov
mov
sbb
jne
nop
nop
mov
pushf
mov
fs
int3
dec
aam
jp
jl
imul
leave
loop
push
mov
cmpsl
mov
std
das
ss
loop
loop
sub
lods
movsl
loopne
sahf
sub
dec
mov
fs
mov
inc
inc
xor
lret
mov
mov
das
pop
xor
aam
xor
pop
sub
xchg
jl
mov
push
pusha
or
cmc
mov
daa
inc
je
hlt
inc
jnp
mov
mov
lock
clc
pusha
insb
in
mov
out
sbb
adc
repnz
pusha
cmp
xchg
sar
call
mov
stc
push
push
int
mov
adc
dec
sub
mov
jns
cmp
mov
insl
inc
push
ss
out
pop
pop
mov
into
test
adc
jmp
dec
dec
dec
jmp
sub
push
rcl
xchg
and
and
pop
and
adc
push
call
loopne
jb
push
loope
fs
leave
insb
xchg
lret
inc
mov
into
stos
mov
sub
daa
push
mov
std
mov
cli
cmp
push
push
dec
jne
lock
leave
jl
jns
ds
cmp
dec
and
sub
mov
xchg
inc
sbb
pop
pop
inc
push
into
test
xor
pusha
test
pop
addl
leave
push
rolb
pop
push
ja
rdpmc
or
adc
in
adcl
and
mov
sti
mov
movsb
xor
xlat
mov
popf
xchg
mov
cltd
popa
mov
jl
repnz
out
pop
sub
imul
lret
xchg
mov
in
scas
push
or
lret
fdivl
add
xchg
jl
and
sbb
faddl
or
xchg
fisubs
in
mov
in
test
jno
int3
or
movsw
add
sub
gs
add
popf
pop
cs
repz
inc
arpl
dec
jle
and
dec
rclb
jge
mov
or
sbb
out
sub
push
aas
pop
xchg
adc
push
inc
jo
push
repnz
popf
jo
mov
dec
cmp
lods
add
icebp
lock
inc
pop
xor
dec
roll
mov
mov
xor
sub
or
popa
nop
jecxz
nop
dec
fsubs
andl
aaa
xor
in
imul
dec
shlb
leave
sbb
inc
cli
scas
jmp
and
pop
add
sub
jne
rolb
mov
lret
push
xchg
xchg
jle
sbb
mov
nop
gs
iret
jp
jp
adc
adc
test
out
sub
jge
inc
adc
mov
xchg
mov
push
jl
dec
xchg
mov
mov
nop
and
cld
dec
jb
movsb
or
lcall
mov
movsb
jo
lea
dec
movsl
mov
xor
icebp
adc
and
mov
push
test
pop
lahf
xor
mov
xchg
movsb
jg
repnz
pushf
imul
xchg
lods
jb
movsl
inc
mov
cs
add
dec
and
outsb
sbb
inc
dec
adc
add
cmpsl
test
lods
sbb
pop
aad
je
aad
adc
cmp
insl
push
nop
sub
dec
ss
push
ret
ja
test
movsl
pop
dec
ret
pop
push
inc
and
inc
lret
mov
ja
add
fs
dec
mov
aam
pop
sbb
add
mov
mov
shl
mov
mov
push
out
fwait
push
outsl
adc
rorl
imulb
cmp
jecxz
inc
xchg
sti
jecxz
addb
xchg
jae
loop
dec
pop
mov
jecxz
cld
sbb
dec
js
sahf
int3
dec
sbb
negb
in
push
out
jno
inc
dec
mov
cmpsl
fdiv
in
xor
mov
mov
addr16
jbe
mov
cmc
in
inc
cmp
bound
add
fucom
mov
popa
sub
scas
or
rolb
inc
repnz
aaa
mov
repz
sub
push
cmp
je
and
int
pop
lods
je
popf
and
push
mov
out
xor
leave
fnstsw
insl
xchg
cmp
sbb
or
repz
adc
and
pusha
add
and
jb
testb
rclb
sub
xchg
dec
jbe
sub
xorl
arpl
add
push
int3
push
add
adc
cmp
inc
cwtl
jge
rolb
mov
push
hlt
mov
cmc
xchg
push
xchg
test
push
pop
dec
cwtl
sbb
lahf
mov
stc
push
add
pop
pop
sbb
cmp
or
stos
or
andl
cs
shlb
dec
ljmp
push
mov
in
pop
into
lods
or
and
inc
pushf
sahf
cmp
jp
mov
das
fnstenv
cli
add
mov
inc
lret
js
adc
mov
lds
es
xor
push
jae
enter
mov
cmc
inc
mov
mov
jnp
int
shll
mov
repz
test
ret
scas
sbb
imul
imul
call
jg
shll
mov
mov
shrb
mov
pop
or
movsb
loope
ljmp
mov
or
dec
push
imul
mov
addr16
cmp
fmul
cltd
loopne
xchg
aas
out
mov
test
stos
pop
sub
cmp
sub
cmp
outsl
lods
loope
push
out
push
pop
adc
mov
js
mov
xchg
mov
dec
dec
sub
adc
cmp
sub
push
movsl
loopne
out
in
dec
je
sub
adcb
cld
add
mov
notb
outsl
out
jno
dec
mov
mov
stc
and
sub
mov
sbb
imul
jg
repz
lahf
out
xorb
push
pop
xor
and
push
xchg
xor
sbb
mov
dec
leave
aas
dec
jno
repnz
and
xchg
sub
mov
sbb
or
jp
pop
xor
pop
xor
dec
shl
adcl
push
or
sti
adc
es
or
pop
xchg
adc
test
inc
jns
lock
jle
movhps
rcl
shl
jp
sub
js
aam
xchg
scas
dec
out
and
push
adc
rorb
sbb
stos
add
daa
stos
aam
dec
xchg
xorb
or
aas
sarb
pop
add
jbe
aaa
mov
add
or
daa
mov
arpl
inc
ss
sbb
gs
push
popa
inc
out
in
hlt
out
pop
sbb
fdiv
push
xor
mov
inc
in
lods
push
or
inc
mov
icebp
icebp
xchg
jbe
cmc
mov
pop
outsl
mov
xorb
and
stos
inc
adc
cwtl
movsl
sbb
mov
xchg
loopne
aaa
sbb
push
repz
sub
pop
cmpsl
dec
jo
outsl
pop
xor
jae
cli
negb
or
mov
adc
ret
bound
xor
movsb
mov
les
push
jnp
sub
addr16
mov
fistl
lcall
mov
push
cmp
addr16
add
adc
mov
mov
idivb
sbb
es
out
outsb
sub
test
push
in
cmc
adc
rolb
xchg
jl
jl
cmpsb
sahf
cmp
mov
and
inc
daa
push
mov
repz
shrl
mov
xor
nop
cmp
daa
adc
push
pushf
insl
pop
repnz
push
add
popf
push
pop
out
hlt
push
rclb
add
mov
movsl
movsb
outsl
rcrl
insl
xchg
cmp
outsb
pop
ret
das
popf
sub
pusha
pop
adc
push
mov
scas
sub
adc
in
roll
xor
jnp
xor
clc
xor
add
call
scas
mov
push
movsl
gs
fisubs
lock
aad
jae
push
mov
icebp
cld
jp
popl
das
fs
pusha
ljmp
fstpt
mov
into
cs
mov
scas
ss
ljmp
lods
pop
cmpsb
jge
shlb
pop
adc
roll
pusha
addb
mov
mov
xchg
xor
js
jl
inc
lahf
and
repnz
ljmp
or
adc
mov
aam
gs
cmp
sub
outsb
cmp
inc
rcl
lahf
lret
push
mov
cltd
pop
jle
mov
movsb
mov
insb
into
xchg
push
insl
mov
and
pop
adc
mov
mov
sub
imul
fwait
mov
insl
sub
xchg
push
sahf
orl
add
adc
xchg
inc
in
lods
xchg
xor
shll
scas
jnp
mov
iret
pop
daa
ljmp
insl
jbe
mov
es
add
push
fs
popf
js
test
in
cmp
insl
aaa
mov
fs
pop
out
daa
dec
mov
jae
clc
or
xchg
stc
cld
cmp
lahf
rol
je
dec
jbe
cmpsl
xor
mov
mov
jo
jnp
or
shll
push
loopne
out
inc
xchg
push
jb
loope
sti
js,pn
xchg
cmp
mov
pop
mov
ret
adc
outsl
mov
and
adc
adc
mov
sbb
out
loope
push
lods
mov
mov
insb
cmpsl
mov
xchg
xor
inc
hlt
jb
inc
ret
movsl
cld
mov
rclb
in
in
data16
je
lea
fildll
fmuls
fbstp
lret
pushl
sub
sti
mov
jl
mov
imul
or
and
cmp
in
or
push
mov
sub
inc
mov
pusha
sbb
xchg
sub
jle
xchg
mov
or
adc
inc
pop
sbb
sub
fists
pop
pop
je
jbe
mov
scas
leave
inc
and
dec
xor
cmp
jmp
push
mov
das
hlt
stos
cmp
test
rcrb
in
test
in
and
std
cmc
cmpl
mov
cwtl
xchg
dec
pop
es
mov
hlt
pop
jg
and
out
pop
ja
mov
cmp
pop
mov
inc
and
fists
mov
sbb
hlt
shrb
pusha
xor
mov
lds
clc
call
imul
rcll
mov
int3
and
sarb
xchg
cmp
iret
movsl
cmpsb
aam
jno
jl
shll
inc
inc
dec
fimuls
loopne
jnp
push
fs
in
out
pusha
and
add
sbb
push
aas
push
aas
dec
cmpsb
cmc
push
pop
inc
xor
ds
int
sahf
ds
stos
and
cli
add
mov
jbe
daa
xchg
cmpsb
inc
xchg
mov
dec
loopne
mov
test
push
inc
mov
jge
and
xchg
insb
adc
in
lret
mov
jg
insb
sbbl
or
pushf
or
jle
bound
loop
jo
loope
inc
push
iret
or
lea
push
mov
lret
rcrb
ljmp
inc
testb
xor
lret
xlat
and
and
sbb
js
mov
xor
push
fcmovnb
and
mov
inc
xor
jmp
bnd
lds
or
xchg
xor
mov
and
xchg
mov
pop
jbe
push
mov
mov
adc
les
inc
out
pusha
mov
icebp
loope
push
arpl
mov
dec
xchg
test
xchg
aaa
into
arpl
push
mov
xor
pop
fs
add
sub
in
push
movsl
das
sub
mov
jl
pushf
xchg
dec
aam
cmp
jmp
inc
test
fcmovnb
push
push
or
push
mov
adc
dec
or
jmp
jl
outsb
int3
cmp
push
pop
xchg
out
in
aas
push
imul
out
mov
aad
loope
jne
repz
mov
data16
clc
and
and
and
out
cmp
rorb
repz
jns
movsl
or
sub
sbb
data16
cmpl
push
add
icebp
mov
jecxz
lock
adc
cs
push
inc
xor
sti
inc
insl
xor
aas
and
arpl
mulb
and
out
lds
cld
dec
mov
xor
cmc
cmpsl
xchg
xor
movsl
in
jle
fwait
ja
jg
dec
lahf
xor
inc
lods
inc
sbb
push
icebp
pop
loopne
pop
scas
xor
xchg
ffree
rolb
movl
push
sbb
movsb
xchg
iret
dec
ret
pop
mov
inc
clc
push
mov
cmp
mov
dec
sbb
cmp
divb
push
in
out
mov
mov
push
and
mov
jle
adc
stos
dec
push
pop
aas
mov
sbb
mov
add
xchg
fadd
push
push
mov
mov
leave
or
jl
mov
es
jle
sbb
pop
jp
mov
aam
subl
out
addr16
jbe
xchg
pop
mov
inc
jbe
dec
dec
outsb
jns
mov
xor
repnz
insl
cmp
inc
push
rcll
inc
hlt
mov
mov
mov
iret
or
in
inc
je
shll
lea
imul
pop
rcr
lcall
mov
mov
cld
daa
adc
or
cmp
adc
mov
lods
std
in
xorl
stos
loop
jns
inc
repz
or
dec
jo
mov
les
hlt
lret
rcll
pop
mov
pop
cmp
mov
xor
jl
es
xlat
pop
mov
lock
aas
scas
xlat
pop
adc
in
jae
out
std
icebp
cmp
xor
xor
sbb
lock
ret
dec
loop
fwait
jbe
cmp
cltd
mov
xchg
jbe
sarl
cmp
cmp
lcall
rorl
mov
mov
adc
leave
test
stc
lcall
imul
dec
xchg
and
cli
enter
jno
leave
call
mov
dec
stos
jmp
jbe
jle
cmp
les
loope
lret
pop
adc
stc
test
pop
dec
fs
jnp
test
pop
push
fmuls
loopne
cmp
loop
rcll
dec
addr16
or
decl
pusha
push
add
cs
pop
xchg
push
int3
sbb
stos
test
lea
pop
add
movsl
and
mov
clc
mov
pop
push
shll
sub
out
mov
out
xchg
das
lods
dec
xchg
ljmp
push
lahf
push
mov
ja
imul
stc
jle
dec
xor
xchg
cmpsl
lods
jne
ret
or
fsub
icebp
sub
cmc
xchg
and
les
push
je
lods
mov
ss
sbb
fimull
jbe
icebp
mov
nop
hlt
fistpll
repnz
mov
insb
add
call
cmpsl
imul
jg
std
testb
mov
mov
orb
fildll
flds
mov
cmpsb
pushf
js
xchg
add
inc
or
popf
push
sub
sbb
mov
lods
dec
xchg
mov
repz
out
clc
imul
fadds
push
sub
or
bound
sti
test
stc
les
or
add
jnp
js
int
mull
dec
xchg
sub
xor
sub
pushf
push
inc
and
inc
xchg
repz
pushf
jb
xor
lret
bound
out
int3
ss
das
mov
mov
movsb
aam
addb
inc
cmpsb
nop
or
or
jmp
into
std
push
cmc
xlat
clc
inc
in
fwait
inc
fdivrl
inc
lock
test
and
aas
mov
mov
mov
xchg
or
sti
jo
rorl
je
jle
push
aaa
aas
ljmp
jne
clc
mov
mov
outsb
je
or
lock
pop
xor
out
in
stos
dec
jmp
mov
ret
out
pop
ds
pusha
insb
cmp
mov
insb
addr16
pop
adc
in
push
fisubs
or
sub
cs
push
lahf
stos
push
cmc
adc
mov
mov
mov
into
add
in
shrb
add
push
enter
call
ret
scas
pop
and
shlb
pop
xor
mulb
shll
out
out
pop
movsl
repz
sahf
jg
dec
jle
mov
cmp
lret
pusha
mov
xchg
dec
fwait
adc
xor
push
mov
xchg
lods
sbb
int3
imul
outsb
push
push
imull
popa
adc
jae
sub
insb
or
test
mov
outsb
popa
mov
out
mov
pop
in
push
adc
jb
dec
or
xor
sbb
lods
dec
scas
inc
movb
jnp
test
add
mov
loope
loope
stos
out
ds
add
inc
out
mov
stos
push
mov
popf
sbb
mov
ficoml
or
xlat
jb
js
into
cmpsl
xor
jae
xchg
sbb
add
adc
adc
sub
sbb
lret
sbb
mov
push
cmc
dec
mov
push
sub
in
sub
lret
imul
out
leave
jno
inc
bound
and
sub
xadd
xchg
movsl
jbe
je
push
xchg
aad
popa
fucomip
stos
mov
test
loope
les
mov
imul
or
mov
mov
pop
cmp
mov
cmpsb
lcall
or
call
pop
clc
mov
test
fsubrl
lret
push
js
jbe
ficomps
daa
or
cwtl
popa
jae
loopne
ret
mov
sar
testb
add
mov
adc
lret
iret
add
dec
fnstenv
scas
mov
push
testl
mov
jae
insl
out
jae
popf
sbb
dec
push
mov
cmp
into
push
mov
sub
pusha
test
ds
xchg
jmp
dec
push
dec
inc
dec
sahf
xchg
aad
mov
clc
loope
pusha
ret
js
mov
dec
inc
pop
mov
aad
aaa
pop
dec
test
mov
jecxz
add
pop
loope
stos
jl
jg
cmc
mov
mov
sub
lcall
adcl
or
sti
pop
cwtl
out
jl
mov
je
icebp
jbe
testl
pop
xor
mov
jle
mov
aaa
insb
jecxz
mov
xchg
xor
out
adc
cmp
pop
rorb
jg
icebp
cmp
and
ret
out
jecxz
inc
in
push
mov
std
mov
pop
cltd
loop
adc
cmp
mov
push
in
mov
and
jp
loope
or
pusha
adc
mov
xchg
fs
loopne
mov
stos
mov
xchg
sbb
in
push
jp
sbb
xor
sub
xor
sub
xchg
lods
imul
rep
fdiv
mov
js
add
and
xor
mov
fstl
mov
sub
push
sbbl
movsb
out
gs
movsl
adc
pusha
jns
or
ss
out
in
xchg
push
add
iret
add
push
scas
adc
mov
jecxz
push
and
jb
stos
push
inc
push
cmpsb
inc
or
into
cwtl
faddl
mov
xor
lcall
xor
or
in
cmpsl
cmp
push
sbb
xchg
hlt
mov
packssdw
out
add
xchg
shll
lds
jbe
sbb
push
pop
sbb
loop
ljmp
sbb
imul
fdivrl
movsb
out
push
mov
mov
fisttpll
sbb
dec
ret
cmpsl
decb
mov
xchg
or
mov
inc
dec
fmull
xchg
inc
add
inc
fcompl
outsl
addl
movsl
lds
scas
cs
orl
push
jp
addr16
cmp
push
inc
cmp
bound
jg
mov
xchg
cltd
scas
or
movsb
mov
sti
mov
subl
mov
pop
cmpsl
push
fsubr
add
ljmp
xlat
loopne
incb
clc
adc
pop
and
pushf
push
mov
pop
cmp
inc
movsl
stos
lods
lock
aam
push
cld
sub
stos
mov
push
das
push
or
sahf
fcom
rorb
sti
mov
adc
mov
cwtl
mov
push
add
add
ja
sbb
int
add
dec
and
and
jecxz
jae
pop
push
dec
push
cs
jnp
sub
rcll
decb
xlat
mov
sbb
push
or
dec
adc
add
lahf
jne
stos
pop
ja
mov
jnp
jae
mov
sbb
add
frstor
jo
mov
jno
xor
or
push
dec
pop
cwtl
mov
cmc
or
or
mov
add
jmp
lret
jg
inc
push
fidivs
call
jno
in
mov
icebp
push
out
inc
sub
add
mov
mov
out
lock
dec
test
testl
insb
int3
push
sub
lods
flds
pusha
stos
mov
out
pop
xchg
mov
in
sahf
fs
cmpsl
idivb
jne
fstps
out
lods
loope
scas
push
xor
rolb
jmp
pop
add
mov
mov
xor
pop
adc
movsb
loopne
adc
sbb
fistps
mov
push
imul
std
mov
cs
and
sub
repz
nop
dec
or
pop
testb
pop
lret
mov
xor
or
scas
sub
xchg
scas
lret
sbb
xchg
pop
inc
inc
mov
push
aas
sub
hlt
jnp
cmp
sbb
inc
ljmp
cmpsb
add
cmc
jmp
xchg
adc
adc
xlat
stos
loope
and
mov
call
movsb
push
push
sub
aaa
cwtl
sti
xorb
in
inc
nop
insl
mov
pop
push
sub
out
mov
sub
fisttpll
and
ficomps
inc
fwait
adc
mov
sub
ret
jbe
xchg
hlt
pop
imul
adc
insl
into
cmpsb
sbb
jle
jecxz
mov
mov
pop
sarl
xor
sti
adc
jbe
inc
js,pn
jecxz
cld
add
push
fchs
sbb
int
fsubs
fs
insl
pop
xchg
adc
aas
xor
test
loop
jo
cmp
lret
and
insb
mov
in
dec
xchg
fwait
imul
cli
cmp
adc
pop
ss
mov
daa
lods
xor
sub
scas
fimull
fstl
xor
dec
and
movsl
icebp
jl
xchg
xor
std
add
or
mov
lahf
mov
enter
xchg
sub
sahf
sbb
nop
aam
dec
jbe
sub
negl
in
into
or
test
pop
mov
mov
aas
clc
imul
insl
inc
je
sub
and
inc
adc
xchg
sahf
pop
adc
insl
aad
pop
btc
adc
test
mov
adc
mov
mov
push
push
fdivl
jecxz
cmp
jg
aas
cmpsl
mov
outsl
in
adc
lret
adc
and
mov
mov
sbb
sbb
shrb
fstpt
shll
sbb
push
rcl
ss
mov
and
mov
shll
call
test
add
and
add
test
cmpsl
ljmp
jp
int3
out
jg
inc
fadds
notb
sbbl
pop
hlt
sahf
test
insb
fistpl
shll
adc
nop
sub
or
dec
jb
scas
jmp
jg
test
ret
inc
fmuls
popa
inc
jbe
xor
cmpsl
push
sub
sahf
por
scas
cmp
add
decb
imul
fisttpll
push
and
adc
and
push
popf
mov
sbb
scas
insl
pusha
lret
jmp
xchg
inc
into
addr16
les
mov
into
dec
jb
jne
xchg
js
adc
setne
jge
or
xor
js
cmp
icebp
mov
int
rol
loopne
fbld
mov
into
sti
push
dec
idivb
call
lret
lahf
xchg
xor
mov
adcl
jo
dec
repz
cmp
cwtl
addl
stos
mov
scas
movsl
popf
and
push
adc
sbb
mov
bound
add
idivb
mov
mov
fdivrl
outsl
push
imul
inc
xchg
ret
cmpsl
add
ror
loope
inc
dec
sub
add
repz
adc
fldt
jle
sbb
sub
mov
add
or
jl
pusha
lods
push
icebp
mov
mov
repz
icebp
mov
int
sbb
mov
stos
jbe
mov
mov
adcl
cmp
repnz
in
mov
shl
leave
int3
jbe
fcomi
mov
ja
add
push
bound
hlt
fildll
lret
repnz
cmpsl
shlb
push
mov
and
mov
push
jp
test
xlat
in
xchg
lods
lock
cmc
mov
inc
and
mov
sbb
push
les
testb
add
pop
dec
ud1
ss
loopne
insb
cs
pop
add
test
rcrl
sbb
or
dec
test
add
fs
xchg
adc
xor
ljmp
rol
mov
dec
dec
je
shl
and
sub
enter
push
adc
inc
jl
mov
lahf
stos
sbb
xlat
sub
jns
in
dec
and
movsl
mov
add
js
shlb
movsb
mov
rclb
or
xor
add
pop
aam
outsl
repnz
movsb
jae
sub
movsb
inc
test
adc
es
dec
pop
sti
and
icebp
xchg
adc
jle
jl
mov
fisubs
mov
aaa
and
stos
mov
dec
std
addr16
sub
neg
std
mov
and
jne
mov
movsl
or
jae
aaa
mov
adc
and
xor
sub
jge
js,pt
cmp
push
cmp
jecxz
xor
cmp
enter
xor
add
xchg
insb
xchg
cmp
add
dec
push
fists
incl
mov
sub
cwtl
mov
ss
sbb
mov
dec
sbb
sbbl
push
pop
addb
mov
inc
push
mov
icebp
mov
adc
and
jbe
iret
repnz
sbb
popf
iret
je
push
cmp
js
in
pusha
ret
std
adc
push
sar
cli
test
ja
in
pop
outsb
pop
stos
and
push
mov
scas
ja
out
nop
ss
leave
fildll
mov
push
test
ja
stos
xchg
lahf
adc
ret
sub
lret
setl
fistpl
cmp
push
mov
inc
in
mov
push
xchg
enter
cmpb
adc
ret
enter
fisttps
mov
or
ss
in
jle
out
mov
enter
dec
lahf
xchg
dec
lock
xchg
test
stos
push
popf
insl
xor
leave
dec
xlat
fcompl
jno
pop
imul
pop
inc
je
aad
adc
sbbb
inc
cmp
jp
inc
scas
add
adc
dec
xchg
fwait
sub
push
mov
sti
inc
scas
and
sti
vmovd
les
lds
add
push
xchg
jmp
sti
lods
adc
lcall
cmp
lods
xor
aam
mov
sub
cmpsl
jg
jge
mov
push
das
imul
rorl
outsb
enter
sbb
add
ja
mov
mov
lcall
mov
or
mov
jne
cmp
jo
sbb
mov
imul
add
fwait
inc
popf
popf
xor
add
sub
or
lds
and
aaa
lea
aad
lea
cmp
in
leave
fidivl
arpl
popa
xor
fidivrs
pop
lret
mov
stos
dec
adc
or
sbb
gs
sbb
mov
je
test
sbbl
xor
dec
dec
andl
shll
js
in
mov
call
jmp
in
xor
mov
pop
outsb
stos
lret
mov
aas
xlat
adc
mov
mov
repz
shrb
sbb
scas
ljmp
movsb
loopne
ficompl
je
mov
xor
cmpsb
sbb
repz
imul
adc
or
mov
push
push
addr16
cmp
pop
int
les
dec
inc
xchg
ja
jne
decl
dec
lahf
mov
icebp
bound
xchg
sbb
dec
pop
cmpsb
cmp
sub
je
rcrb
ror
cmp
std
mov
aaa
scas
neg
icebp
sarb
jmp
fisubrl
cmp
mov
mov
stos
mov
jle
inc
mov
inc
dec
xor
and
mov
sbb
mov
xlat
je
test
xchg
add
out
jp
test
hlt
xlat
mov
xchg
sbb
cmp
sbb
fdiv
negl
sbb
xchg
inc
ss
sub
arpl
and
add
jne
std
dec
dec
cld
jae
dec
pop
dec
divb
mov
mov
sub
mov
addr16
int3
cmpsb
arpl
pop
loope
out
mov
cmp
fwait
inc
mov
mov
movsb
scas
mov
lcall
iret
sub
mov
xor
xor
xchg
mov
pop
or
movsl
jg
push
mov
xor
xor
fs
inc
mov
es
fnstenv
inc
loop
jbe
cltd
sbb
push
cmp
js
out
push
aas
jle
in
cmpb
enter
in
or
js
dec
clc
iret
or
lcall
jo
movsb
xor
addb
and
or
cltd
sub
stc
jno
or
adc
ret
and
pop
clc
popf
pop
lret
lods
sbb
add
sbb
pusha
dec
inc
add
mov
jo
mov
jae
cld
inc
or
pop
popa
insb
popa
cli
cmc
cwtl
push
jmp
jno
shlb
mov
lret
push
rcrb
push
mov
mov
jo
insl
mov
push
adc
push
hlt
cmp
pcmpeqd
xchg
mov
dec
or
adc
popfw
out
js
pop
shll
pushf
cmc
mov
idivb
ret
jnp
lret
fimull
dec
pusha
xchg
push
cmp
inc
in
icebp
pop
mov
jb
jp
xadd
xor
mov
pop
or
sarl
sub
pop
ljmp
fistps
xchg
cmp
mov
mov
in
test
cmpsl
pop
jl
lock
dec
mov
incl
jge
call
sub
mov
jne
test
repz
pop
mov
mov
std
mov
or
icebp
inc
xchg
jg
shrb
pop
sbb
push
xchg
fs
fs
outsb
adc
pop
imul
fsubrl
int3
jecxz
movsl
adc
sti
mov
xor
hlt
lods
test
pop
sub
jno
xorl
dec
aas
mov
loope
and
daa
jp
mov
push
ret
xor
popa
out
cld
test
inc
dec
movups
push
xor
mov
filds
dec
ja
imul
pop
lcall
aas
enter
jge
jg
dec
inc
clc
sbb
cltd
xchg
sub
insb
pop
lcall
sbb
stc
xor
fnstenv
mov
repnz
std
adc
jl
mov
hlt
idivb
fs
ret
std
leave
mov
movsl
cmp
loop
imul
lret
inc
or
sub
adc
insl
loopne
xchg
lret
imul
testb
fs
cwtl
cwtl
mov
mov
in
push
jl
mov
repz
roll
sbb
adc
lods
in
dec
mov
pusha
hlt
aad
mov
pop
xchg
jns
call
pusha
ss
out
scas
fs
xor
cmp
dec
jnp
sbb
dec
bound
and
push
and
ja
xchg
add
jne
xchg
cmp
shlb
dec
add
les
dec
pop
xlat
xchg
loope
lret
and
cs
xor
cmp
mov
sahf
mov
pop
ds
nop
xor
sti
je
pop
push
mov
adc
or
xchg
inc
cmc
inc
pop
outsb
push
insl
mov
mov
cwtl
xchg
out
cmp
out
sti
xchg
cmp
scas
pop
roll
shll
into
mov
fmulp
das
fsub
out
mov
xor
sub
mov
sarl
adc
push
sub
cmp
ss
je
scas
adc
cmc
jb
test
loopne
pop
adc
xlat
imul
pop
movsl
xchg
roll
ss
lret
dec
cmp
movsl
push
sub
xor
pop
shr
orl
add
aaa
add
adc
rclb
pavgb
mov
jg
les
fdivrs
addr16
or
icebp
clc
cs
mov
es
lods
cmp
fiadds
push
xchg
movsl
pop
mov
xchg
test
jp
push
mov
adc
stos
ja
xchg
aam
repz
sub
adc
mov
repnz
sbb
pop
dec
mov
jecxz
mov
push
leave
daa
jle
insb
mov
sbb
mov
xlat
imul
lea
pop
mov
cmp
into
lahf
and
sbb
sahf
pop
mov
out
pop
sbbb
adc
enter
mov
mov
cmp
call
inc
roll
and
add
in
or
push
bswap
pop
adc
mov
les
jg
add
imul
pop
rcrl
sbb
jle
push
mov
ret
mov
add
aaa
mov
cltd
add
jg
adc
jnp
mov
int3
fsubrl
cmp
fcomps
mov
mov
iret
movsl
dec
sub
mov
aaa
mov
xor
cltd
pusha
sahf
shlb
aaa
outsl
cs
mov
jbe
outsl
insb
loopne
pop
out
adc
cmp
mov
leave
lahf
sub
push
mulb
fsubs
stos
or
cmp
adc
or
enter
jle
jge
xchg
jge
ljmp
or
push
mov
ljmp
mov
mov
or
xrelease
push
jnp
loop
out
push
add
pop
mov
adc
sbb
push
cwtl
adcl
lea
addr16
dec
adc
sahf
daa
test
jle
lret
sbb
xor
sbb
dec
arpl
push
push
out
jmp
shll
scas
mov
xor
aas
insl
xchg
je
inc
sub
iret
stos
test
sub
adc
mov
sub
rorb
imul
in
insb
jle
cmp
dec
cmp
inc
add
out
and
imul
imul
test
mov
in
ja
mov
mov
lods
mov
mov
ja
ja
mov
stos
pop
orl
ss
and
inc
xchg
or
test
push
mov
add
mov
mov
ja
jg
je
dec
mov
scas
je
or
and
in
jbe
cmp
aaa
repnz
push
sarl
out
pushf
stc
and
icebp
sbb
cld
mov
ffree
push
movsl
lcall
xchg
or
outsl
push
sub
sbb
cmc
sbb
pop
inc
punpckhwd
and
and
insl
mov
mov
aad
sub
addr16
pop
push
je
aaa
or
adc
testl
xorb
and
lods
ds
xchg
inc
or
and
je
stc
ja
repz
adc
and
scas
add
mov
mov
push
jl
or
clc
push
inc
out
cli
mov
mov
sub
sbb
or
or
clc
add
xchg
jmp
pop
pop
jne
cmc
sbb
pop
stos
mov
stos
dec
cmp
pop
andb
movsl
aas
ja
mov
sbb
push
popf
or
cmp
inc
pop
fucom
jg
inc
cmp
adc
lahf
adc
dec
nop
mov
mov
ror
mov
int
cmp
inc
and
jne
call
adc
adc
or
xchg
push
sub
in
mov
fwait
movsl
jno
pop
push
jl
push
popf
mov
scas
sbb
mov
dec
mov
movsl
pop
lods
ja
or
cmp
es
sti
lods
jmp
notb
fwait
cmp
shl
sbb
or
cld
ds
mov
and
inc
sub
lods
xchg
bound
outsb
sub
inc
mov
insb
call
fcompl
pushf
fidivl
mov
mov
loope
jns
icebp
adc
cmc
mov
stos
orl
push
jmp
sahf
add
xchg
std
pop
movsl
addb
aas
jle
je
add
outsb
repz
pop
push
mov
cmp
and
cltd
aas
sub
jb
mov
cmp
jmp
push
movsb
fdiv
pop
iret
sub
fiaddl
push
add
aaa
dec
adc
imul
xchg
dec
dec
mov
sub
dec
icebp
cmp
xor
pop
shlb
add
mov
outsb
ret
daa
dec
sbb
test
xlat
aam
ds
sub
dec
je
dec
dec
test
mov
stos
adc
cmp
push
add
mov
add
inc
push
emms
je
ljmp
in
daa
pop
hlt
xchg
imul
int
ja
mov
aad
adc
push
or
cmp
out
mov
cwtl
pop
pop
sbb
rcr
fbld
faddl
xchg
jno
and
andl
or
insl
or
hlt
into
lahf
movsb
lods
or
xlat
int3
dec
pusha
mov
lret
and
cmp
lods
push
mov
lds
cwtl
out
jnp
rcrb
jl
fwait
push
insl
fst
mov
pop
js
dec
push
mov
out
aaa
jbe
push
mov
sub
mov
push
mov
insl
sbb
sub
xchg
mov
xchg
test
fimull
cld
hlt
ja
mov
fisttps
lods
jmp
lds
adc
adc
js
imul
sahf
test
daa
lea
inc
mov
dec
leave
jae
imul
ljmp
aad
fnstsw
jnp
outsl
paddq
ficoms
xlat
or
lret
daa
popf
cltd
adc
aas
jns
pop
cmpsb
xor
mov
xchg
je
xor
test
int3
mov
mov
jp
popa
addl
mov
xchg
and
pop
pop
inc
leave
mov
fistpll
or
test
jne
xor
cli
stc
xorl
mov
pusha
add
popf
xor
jmp
pop
sti
cli
rorl
mov
mov
push
or
cmpsl
loopne
sbb
sbb
test
lods
fsubrs
mov
addr16
gs
test
bound
mov
pop
push
cmpsl
lea
lret
shll
test
ja
sub
sub
mov
xchg
lret
ja
sti
xor
jae
push
dec
mov
sbb
ljmp
cltd
inc
adc
pop
sub
mov
lods
hlt
sub
insl
push
adcb
stos
imul
mov
loopne
das
dec
or
cmp
ja
rclb
nop
lret
inc
jns
sbb
add
mov
stos
sbb
scas
xor
xor
cmpsl
cwtl
jne
sub
adc
hlt
push
dec
into
sbb
or
sub
outsl
xor
test
lahf
lahf
insb
pushf
push
mov
scas
fisttpl
jbe
jb
hlt
bound
lock
mov
pop
add
shl
daa
mov
mov
xchg
and
imul
in
jg
add
mov
aas
insl
lds
sahf
mov
xchg
mov
mov
lahf
scas
mov
jb
inc
xor
addl
ja
xchg
and
push
dec
out
mov
rcr
sub
ret
sub
out
and
xlat
cltd
jle
xchg
testl
sbb
adc
xor
mov
aaa
rcll
jmp
mov
mov
mov
sub
out
add
xor
dec
cmpsl
push
repnz
xor
data16
in
push
mov
test
loop
xor
jnp
cmp
testb
ss
or
cld
int
fadds
mov
mov
inc
jg
push
mov
leave
rolb
push
add
out
cmp
outsl
dec
xchg
jb
decl
inc
push
jl
into
ljmp
xor
sahf
cs
fstp
cld
jle
data16
xor
push
push
stos
or
addb
cmp
lock
insl
rolb
sti
leave
dec
fstpt
xor
and
pop
std
push
cmp
loopne
xchg
mov
mov
add
mov
test
xor
push
ds
mov
aaa
pop
jns
pop
clc
xchg
lock
push
jecxz
xlat
dec
pushw
cltd
mov
or
push
je
pushl
add
dec
adc
xchg
jnp
scas
cmp
cli
xor
xchg
repnz
mov
mov
ljmp
jecxz
cmp
sub
push
and
xor
mov
jl
xor
mov
adc
jbe
or
in
mov
jp
jns
inc
sarb
je
out
inc
mov
sti
std
xor
jle
dec
mov
adc
xor
sub
mov
push
inc
loopne
lret
xchg
sub
inc
push
mov
stos
pushf
arpl
stos
mov
out
inc
rclb
lret
xor
int3
stc
cmp
dec
fidivrs
inc
xchg
mov
mov
insl
pop
mov
or
mov
dec
fiadds
xchg
and
out
repz
ret
lret
jae
sub
not
or
fcmovb
xor
adc
inc
pop
clc
scas
insl
or
mov
cmp
mov
loop
movsb
lds
test
sbb
leave
fnstsw
sarb
and
lds
frstor
ds
mov
jl
push
dec
cmp
sub
jecxz
push
inc
das
rclb
inc
and
dec
stos
dec
mov
notb
test
sahf
push
cmpsl
jmp
scas
inc
push
xor
jecxz
xchg
mov
rorl
scas
inc
sbb
sbb
xlat
rcll
adc
out
mov
std
pop
std
xchg
ljmp
xorb
dec
xchg
push
mov
pop
jecxz
test
lret
std
jp
xchg
jmp
das
mov
mov
xor
cmp
dec
or
sub
popf
add
xor
mov
pop
mov
mov
adc
jg
lea
stos
push
adc
xchg
ljmp
or
push
lock
andb
into
dec
cmpsl
lahf
lock
adc
cld
dec
sti
in
in
outsl
or
sbbb
sbb
pop
imul
mov
add
mov
jecxz
push
repz
push
mov
fninit
sub
iret
mov
add
movsb
dec
lret
pop
add
fcmovu
scas
cmpsl
adc
popa
rcl
ret
lods
push
je
fmuls
lcall
fldcw
sub
movsl
jne
add
adc
pop
aad
lcall
jl
xchg
xor
repnz
packsswb
ss
dec
loope
sti
lods
imul
test
mov
mov
movl
add
movsl
jne
ljmp
adc
mov
imulb
sub
mov
sub
xchg
ljmp
and
sub
sbb
mov
fiadds
je
out
mov
aam
sub
pop
in
ret
stos
push
daa
push
in
push
fnstsw
stos
stc
mov
lcall
int3
test
mov
adc
add
push
movsb
pop
jno
xlat
ja
mov
adc
pop
mov
lea
int3
pop
sub
or
sub
xchg
cmp
cmp
lcall
es
into
je
pusha
pop
cmp
ror
add
adcl
inc
into
rcr
xor
fnclex
mov
inc
push
cld
cli
ljmp
cmp
jnp
xchg
rol
scas
stos
repz
mov
inc
mov
cmpsb
addr16
hlt
aas
or
or
cmp
mov
fstp
mov
jns
shl
lea
dec
jp
fnstcw
or
cmpsl
push
dec
dec
cwtl
loopne
cltd
dec
inc
jb
out
xor
sarb
jb
rorl
shll
loope
dec
dec
insb
shlb
jle
cltd
in
pop
ss
cmp
aam
and
aad
pop
sti
outsl
fwait
add
mov
pop
std
cli
scas
fbstp
stos
xor
int3
cwtl
cmp
into
pusha
pop
or
push
cmc
shlb
incl
jecxz
mov
mov
add
scas
lret
sbb
xlat
and
mov
ds
add
cmp
sbb
mov
sahf
fimuls
mov
shlb
xor
icebp
fdivl
sbb
dec
nop
mov
out
adc
pop
push
ficompl
push
std
aam
ja
xchg
pop
insl
mov
mov
aam
les
inc
add
push
outsb
sub
ja
mov
xchg
out
push
sub
fstpl
lods
jl
jmp
or
dec
sub
xchg
aas
cmp
lcall
out
jg
cwtl
push
in
testb
push
push
fcomps
xor
je
lock
icebp
jns
stc
or
gs
xchg
test
imul
push
ficoms
mov
outsb
test
std
jae
dec
idiv
jle
pop
bound
pop
mov
lds
fidivl
xchg
aam
inc
mov
or
inc
sub
or
lock
push
movsl
lret
pop
shrb
mov
xchg
jle
shlb
sub
push
fsubr
jbe
jmp
push
adc
xlat
jbe
pop
imul
loopne
in
push
in
sub
lds
je
sti
adc
stos
jo
orb
lea
lods
xor
out
jb
mov
sub
int
aas
push
cmp
jecxz
cmp
std
iret
std
movsl
or
les
pop
sbb
xlat
inc
dec
fsubs
mov
inc
xchg
mov
popa
pop
mov
fcos
roll
aaa
cwtl
gs
mov
test
fsubl
push
loop
popa
std
out
sub
xchg
sub
loopne
pop
sub
fidivl
jno
jbe
pop
jns
loope
ss
out
mov
sti
push
mov
pop
daa
inc
cmpsb
jb
mov
fistps
insb
or
and
push
fistl
jbe
je
xlat
fisttps
adcb
call
aaa
cs
movsl
arpl
stc
cwtl
fwait
xchg
lods
cmp
adc
shlb
icebp
inc
insl
push
cmpsb
adc
push
fdivl
xor
lret
push
inc
inc
stc
fs
jg
jnp
xchg
or
jae
mov
push
sub
add
outsl
jge
cli
ret
ret
pop
test
aas
dec
jo
cmp
inc
dec
xor
std
push
insb
sahf
push
jae
push
sarl
push
or
leave
fidivrl
call
mov
inc
aas
mov
inc
lds
int
loopne
inc
paddq
data16
push
loope
mov
je
shl
add
push
xchg
insb
cmp
daa
jns
subb
dec
mov
mov
faddl
ljmp
imull
fcmovb
pop
dec
inc
std
cmp
xor
pushf
fwait
xchg
leave
cli
out
loope
popa
repnz
imul
push
mov
icebp
into
lahf
ret
or
mov
loope
fdivp
jp
fistl
cmp
nop
sub
sarl
adc
mov
pop
leave
mov
movups
sub
xor
sbb
enter
shlb
sub
fstl
jle
mov
xor
rorl
xchg
inc
jecxz
daa
dec
mov
xchg
pop
bound
cwtl
cmp
xor
add
pusha
xchg
jnp
ss
repz
lods
lret
outsl
fsubp
inc
stc
jmp
ror
lret
repnz
sub
insb
mov
loopne
je
cwtl
dec
pop
jne
and
aas
sbb
dec
dec
mov
insl
xchg
cmp
xchg
xlat
xchg
adc
xor
jb
inc
adc
adc
ljmp
pop
aad
cmp
push
data16
adcl
pusha
and
aas
cmpsl
xchg
mov
popa
push
sub
jb
sub
aad
cmpsl
adc
jmp
push
push
push
call
mov
iret
pop
mov
jle
cmp
or
lret
fmull
fldcw
stos
xor
jg
inc
stos
xor
jnp
mov
cmp
insb
aaa
mov
pmaxub
pop
pop
insb
adcl
or
es
test
ret
xor
inc
pop
popa
adcl
icebp
dec
lret
pop
je
fldcw
cltd
or
fnstsw
addr16
mov
fsts
mov
lods
sub
adcb
xor
aad
cltd
mov
add
xorl
jmp
push
pop
adc
and
inc
add
mov
jge
decb
cs
add
add
sbb
pop
outsl
fldl
xor
xchg
sub
or
adc
out
loopne
xchg
imul
jge
sub
jge
adc
test
sahf
add
cmpsl
rcrl
adc
sub
call
push
push
or
rcr
cltd
in
faddl
jo
mov
repnz
sbb
add
test
into
push
or
jecxz
enter
shr
shl
inc
xchg
inc
mov
outsl
xchg
test
and
xor
fsubrp
fimull
cmp
pop
dec
mov
or
daa
std
jbe
stc
std
and
xor
sbb
jnp
sbb
addr16
cmp
xor
shrl
xorb
jp
xchg
adc
ret
jecxz
push
cs
push
dec
push
and
xchg
cmp
mov
lret
cmpl
mov
movsb
xchg
inc
int
mov
pop
or
jnp
adc
std
pop
popa
punpckldq
pusha
es
in
sub
jecxz
bound
inc
ds
xchg
xchg
sub
pop
or
dec
aaa
xchg
pusha
cmp
neg
jl
xlat
bound
cmp
push
rcll
movsl
dec
mov
test
push
mov
push
jb
ret
mov
in
or
pop
mov
shl
leave
adc
mov
scas
push
idivl
add
or
lret
inc
dec
xorl
lahf
xor
jg
iret
aam
sbb
roll
arpl
cmpsb
and
jbe
es
pop
cmp
cmp
dec
sub
cmp
sbb
xor
pop
mov
out
mov
jns
rcl
pop
mov
pop
xorb
sub
mov
jae
mov
mov
jmp
pop
call
ss
inc
mov
and
mov
inc
cmpb
inc
movsl
xchg
nop
sbb
rcl
lock
stc
adc
lea
jl
mov
test
xchg
sbbb
cmp
mov
push
iret
ja
int3
test
pop
xchg
lea
or
sti
mov
jno
add
sub
test
popa
out
dec
daa
pop
sbb
std
adc
inc
mov
dec
in
lahf
sahf
xchg
cmpsl
bound
ficomps
xorb
test
jb
nop
dec
test
sbb
jo
add
cmpsb
imul
mov
cmp
sbb
aaa
push
and
adc
roll
xor
mov
lods
popf
xchg
cwtl
pop
adc
inc
clc
xchg
test
xlat
data16
insl
insb
fstp
mov
aad
push
jge
and
xor
add
sahf
xchg
stos
mov
out
sub
ss
ficoml
dec
dec
lods
stc
int3
icebp
cmpsb
push
insl
pop
xchg
or
jbe
add
add
cwtl
std
cmpsl
ss
pop
out
or
sub
lret
call
push
cltd
cltd
adc
sbb
xchg
mov
add
fdivrp
adc
out
dec
ret
cmp
lock
stos
ficomps
xchg
cld
or
jmp
repz
sub
shr
and
push
sub
jmp
cmp
imul
ret
cwtl
lahf
gs
lret
test
lds
dec
into
arpl
mov
jo
adc
test
pop
mov
rorb
sbbl
add
inc
mov
pop
or
call
inc
nop
pop
stos
cmp
dec
cli
push
jns
pop
lret
xor
cmpsb
out
and
mov
jno
enter
jo
incl
adc
ja
test
adc
mov
and
xchg
or
push
pop
mov
jno
leave
aad
pop
dec
push
xchg
push
inc
lods
ja
popa
fcmovu
in
sbb
push
rcll
xor
mov
loope
and
pop
ja
pusha
ja
push
mov
jp
negl
adc
inc
push
iret
out
xchg
push
sarb
flds
push
sbb
incl
aad
sub
push
aaa
mov
sbb
push
loopne
in
dec
pop
mov
lock
aas
or
jo
outsl
push
fldcw
jl
ds
jle
mov
cmp
mov
jmp
ret
cmp
pushf
leave
mov
sbb
inc
fldl
aad
out
mov
fisttps
mov
out
fcmovnb
xchg
out
ss
int3
mov
jmp
and
mov
dec
test
popf
push
jo
xor
xchg
lret
xchg
sti
dec
repnz
sbb
data16
or
jmp
shll
lds
lret
xchg
leave
cmp
mov
lret
mov
lods
sbb
ss
jmp
xor
addr16
enter
insl
sbb
push
inc
push
jg
adc
int3
mov
dec
xchg
jne
adc
loope
imul
xchg
shl
adc
cmc
push
sarb
xchg
add
push
and
jecxz
in
rorb
xor
adc
add
xor
xor
fnstcw
inc
dec
subl
sbb
mov
jb
pop
xor
xchg
cmp
nop
clc
js
xlat
dec
fstl
loop
popf
push
loopne
xor
js
dec
nop
andl
int3
push
pop
insl
shlb
shrl
sub
outsb
ss
pop
sbb
jno
push
loop
xchg
cmp
jno
sbb
cmp
jae
pop
loope
push
sub
jge
xchg
fildl
fsubl
sub
stos
lods
fsubrl
inc
call
cmpsl
jp
mov
inc
mov
or
out
arpl
xchg
hlt
mov
mov
xacquire
mull
lds
cs
add
dec
mov
rol
and
mov
jge
pop
sbb
jb
jb
mov
rorl
xchg
lahf
lret
and
enter
dec
outsl
or
and
adc
dec
xchg
mov
push
lret
and
imul
mov
imul
push
lahf
mov
rcrb
insl
outsb
test
sub
or
es
cmpsb
add
orl
mov
pop
mov
pusha
rorl
dec
inc
es
es
fdivr
xor
addr16
aas
hlt
pop
or
stos
mov
xchg
popa
mov
test
je
int
stos
ret
iret
jb
addr16
push
popf
jbe
jns
and
and
std
mov
mov
xchg
or
add
ss
les
xchg
ljmp
mov
mov
cmp
ja
jge
addr16
xchg
jae
fldenv
subl
dec
xchg
adc
call
jg
pop
sti
xchg
test
push
add
in
scas
or
pop
dec
inc
or
lods
sti
lods
outsl
lock
sbb
cmp
rorl
dec
jno
mov
inc
sbb
negl
jno
cmp
push
add
jmp
push
pushf
push
adc
pop
into
adc
push
cmpps
cltd
dec
mov
jle
jge
fisubrs
popf
idivl
dec
push
sub
push
insb
js
and
popa
mov
mov
add
mov
aas
mov
enter
pop
mov
jg
gs
push
dec
dec
rcrl
xchg
adc
jecxz
movsl
in
scas
xor
cmc
jl
lods
lods
lahf
loopne
inc
dec
sub
ret
add
lcall
pop
dec
cld
mov
aas
mov
ss
jg
jmp
subb
loope
jo
call
dec
out
cld
mov
and
test
insb
inc
dec
or
arpl
pop
sub
and
in
int3
add
aam
cmp
aas
sbb
fisttpll
dec
lods
stos
cmp
int3
xor
sub
sub
push
neg
jb
dec
add
imul
and
lds
sti
imull
cmp
push
jmp
popf
or
jo
sbb
orb
popf
insl
jle
lahf
push
add
lds
pop
out
cmpsb
pop
xor
dec
sahf
mov
or
loop
add
sbb
shrb
cmpb
out
stos
cmp
loop
fbstp
dec
cmpb
jae
hlt
sub
xchg
pop
into
pop
mov
xor
mov
mov
push
inc
adc
imul
jb
xchg
jo
data16
daa
lret
jb
add
mov
xchg
push
cld
xchg
imul
cmp
loope
jmp
ss
repz
testl
cmpsl
jbe
repnz
dec
jg
outsl
jne
cmpsb
ss
cmc
mov
and
push
js
mov
push
fidivrs
mov
sti
lret
inc
pop
es
xchg
pop
mov
mov
lret
mov
iret
jbe
inc
pusha
lds
or
jbe
cmc
mov
out
cld
jle
ss
mov
dec
pop
addr16
mov
xchg
nop
adc
push
mov
stos
leave
sub
cmp
sub
mov
arpl
pop
out
sub
xchg
sub
xchg
bnd
daa
ljmp
sbb
lret
ret
jbe
mov
and
in
and
fstpt
mov
rol
out
insl
inc
inc
jnp
outsb
rorb
mov
mov
popa
jae
aaa
je
ss
dec
fidivl
xor
shlb
cmpb
jmp
imul
adc
pusha
ds
sub
iret
int3
add
test
iret
repz
xchg
fwait
xor
xor
cmpsl
aas
ja
dec
dec
mov
mov
daa
repz
mov
lret
jb
mov
mull
cmpsb
lcall
mov
jo
movntps
or
push
pop
sar
flds
and
cmp
sbb
push
es
jp
pusha
sbb
dec
enter
xchg
subb
int3
and
lea
test
movsb
insb
inc
xor
adc
test
lret
cld
mov
xchg
pop
lds
jo
jae
dec
jnp
mov
sub
mov
arpl
jnp
mov
adc
lcall
mov
add
mov
aas
or
xor
push
inc
ja
xor
es
fistps
jb
movsl
jb
mov
cmp
xor
adc
xor
popf
jge
pop
cwtl
pop
ljmp
mov
int3
call
mov
ret
sahf
es
mov
sbb
ljmp
cmp
sti
push
xchg
dec
jnp
ret
xor
push
pop
inc
jno
sub
popa
rcll
mov
test
sbb
int
inc
jne
jo
test
cltd
xchg
call
push
mov
int3
aam
lcall
mov
sub
dec
dec
or
adcl
por
xchg
and
mov
push
or
mov
int
roll
sbb
mov
pop
push
imul
mov
mov
jae
popa
xchg
addb
ja
lcall
sbb
shrb
cs
sysret
cmp
mov
ret
in
mov
sbb
pop
sub
pop
dec
enter
fs
out
sbb
sbbb
in
cmpsb
add
add
jne
and
out
enter
loope
leave
mov
lock
daa
fstpl
imul
out
mov
sbb
inc
or
not
jo
sub
add
jno
xchg
jp
repz
mov
iret
xchg
dec
sbb
adc
mov
lcall
xchg
aas
mov
roll
dec
cmp
xor
add
cmpsb
fxtract
xchg
imul
jle
sub
mov
dec
sub
icebp
mov
lahf
repnz
or
push
comiss
push
cmp
sbb
dec
daa
xchg
jg
iret
aam
shr
incl
add
sti
xchg
fisubrl
loop
ret
cmc
movsb
mov
dec
mov
pop
cmp
push
ret
xor
mov
and
sub
arpl
popa
cmp
or
jge
mov
jns
pop
sbb
push
sub
insl
inc
mov
in
hlt
shll
lahf
push
in
out
xchg
shlb
test
sbb
inc
mov
out
rol
inc
loope
cmp
out
mov
insl
repz
add
daa
adc
dec
xchg
call
inc
orl
inc
push
adc
jl
je
jg
loop
lock
dec
mov
xchg
push
and
rcr
aam
and
adc
out
aam
dec
out
pop
insl
jnp
cmc
adc
loope
sbb
pusha
ds
xor
out
inc
mov
icebp
test
add
and
lahf
fiaddl
cvtps2pd
cmp
test
ffree
lahf
and
xchg
xor
ss
inc
mov
adc
pop
sbb
scas
mov
enter
sbb
lret
push
xor
cmp
repz
and
cmpsl
add
sbb
mov
mov
push
pop
mov
and
inc
lds
and
jno
mull
incl
cmp
repz
add
in
filds
cmp
push
cltd
xchg
scas
push
stc
lret
lret
psrlq
lret
xor
and
xchg
jnp
mov
imul
cmp
addb
fcmovnbe
shl
test
inc
mov
dec
dec
imul
jb
sti
iret
add
mov
sub
sub
leave
sbb
insb
mov
iret
hlt
sub
inc
lds
pop
cmpsb
insb
out
or
xlat
xor
jbe
out
fwait
mov
js
hlt
jae
in
sub
xor
ds
xchg
cmp
rcrl
dec
pop
push
rcll
cmp
xor
shl
out
call
sbb
fidivrs
cmp
lahf
loope
add
mov
and
mov
sub
nop
xchg
xor
push
repz
jne
jp
jbe
dec
lret
jge
movsb
mov
int3
or
mov
mov
adc
xchg
inc
ljmp
cld
sub
in
xchg
rorl
inc
sbb
mov
js
fiadds
and
js
lret
in
sub
insl
adc
inc
jbe
fiadds
jmp
xchg
out
mov
xchg
lds
mov
jle
cld
insl
inc
xchg
push
fcmovu
enter
mov
out
shll
push
mov
sbb
mov
dec
stos
add
jns
cmp
cltd
sarb
ret
fcmovne
add
pop
sub
out
cmc
test
mov
fsubl
sub
cld
xor
push
add
jg
int
stc
fdivl
js
subl
jnp
pop
sbb
std
repnz
sbb
into
mov
rol
sbb
mov
dec
pop
inc
mov
das
push
jns
xchg
ss
imul
xor
mov
clc
dec
fisubl
mov
popa
scas
pop
int3
push
push
sub
cmc
and
int3
pop
push
push
add
adc
movsb
je
dec
test
nop
jo
cli
sbb
inc
adc
rolb
adc
sbb
and
push
fwait
lret
inc
lods
sub
pop
outsb
movsl
push
aad
movsb
scas
push
mov
mov
inc
stc
add
xor
xchg
mov
test
iret
push
push
xor
xchg
cmovle
sbb
add
push
js
jl
sbbl
cmpsl
pusha
repz
xor
push
inc
cmp
adc
xchg
fucom
mov
lock
sub
mov
std
xor
jecxz
clc
push
push
bnd
push
add
inc
jmp
addr16
repz
seta
repz
dec
add
sub
add
bound
ds
adc
cwtl
daa
lds
xchg
cs
out
mov
adc
mov
in
mov
or
iret
into
and
sbb
sub
inc
sbb
daa
cmpsb
mov
ss
adc
fucomp
mov
aad
adc
xchg
adc
cs
mov
xor
outsl
sub
push
in
mov
inc
cmp
stc
xor
mov
popf
std
pop
int
aaa
loopne
test
addr16
add
pop
xchg
add
lret
cmpsl
mov
or
ret
xchg
fsubs
clc
sbb
mov
and
gs
xlat
pop
mov
push
push
int3
push
dec
adc
jne
mov
xchg
xchg
push
adc
jno
dec
mov
jnp
or
int
mov
lea
mov
lock
dec
add
outsl
arpl
pop
stos
aaa
stos
neg
push
sbb
pop
andps
or
dec
das
pop
lahf
cmp
call
popf
dec
mov
mov
jmp
out
inc
ss
xor
loop
sub
pusha
in
int
shlb
inc
fsubrl
add
and
push
push
test
jl
pop
push
or
xor
mov
cltd
ljmp
sub
dec
cmpsb
cmp
and
mov
adc
jnp
out
cmp
jns
and
jnp
addr16
pop
shlb
xor
cmc
xchg
xor
imul
push
test
movsl
sub
mov
sahf
cs
data16
push
lods
sbbl
test
xor
inc
cmp
mov
dec
mov
sbb
cmp
outsl
inc
fwait
enter
push
jno
jp
jecxz
add
into
inc
popa
mov
popf
mov
or
int
inc
mov
inc
cmpsl
repnz
pop
pop
push
mov
pop
fstpl
mov
aaa
mov
rorb
aas
mov
out
pop
cwtl
adc
enter
lds
add
cmp
cli
push
add
cmp
cld
adc
mov
int3
adc
mov
mov
mov
mov
mov
jno
mov
mov
sub
rolb
addr16
xchg
mov
lods
out
sub
out
loopne
jp
jl
das
inc
dec
inc
lret
mov
sub
out
imul
xchg
adc
fcmovbe
jns
je
mov
out
xchg
loope
mov
add
mov
lea
mov
shrl
jbe
jp
add
jecxz
icebp
inc
xchg
icebp
sub
inc
es
adc
push
in
adcb
adc
iret
inc
xlat
rorl
cmc
dec
or
inc
xchg
inc
fdivrs
inc
sub
sub
test
inc
push
or
shrl
lds
add
xchg
jmp
pop
jge
je
sbb
xchg
push
pop
insl
dec
jbe
mov
jnp
cli
dec
cli
fidivs
sbb
xchg
xor
lret
pop
inc
stc
jecxz
dec
addl
nop
fmuls
xchg
xchg
clc
gs
leave
icebp
insl
ja
lea
ds
lea
lahf
orb
loope
rolb
fcmovnb
xchg
lods
jae
adc
ret
lret
sub
fs
lret
and
cmc
loop
jae
scas
lods
sbb
movsl
ss
pop
loope
lret
pushf
fisttpll
and
inc
sti
idiv
fldl2e
mov
pop
ret
cmp
push
mov
ret
inc
out
dec
mov
pop
push
fdivl
and
jae
stos
repz
xor
in
dec
repz
and
cmp
shlb
lea
sti
enter
push
dec
les
xor
adc
repnz
inc
xchg
sub
pop
mov
sbb
outsl
scas
sbb
inc
ffreep
pushf
testb
sbb
add
ss
faddp
cmp
psrad
mov
jmp
and
sahf
iret
sub
sub
lret
mov
pop
jno
or
out
out
lds
fcmovne
and
scas
pop
ror
out
fistpl
jg
pop
test
cmp
and
lods
push
pop
scas
lahf
insl
fmuls
cwtl
pop
add
mov
pop
jnp
scas
xchg
lahf
xchg
ja
adc
lds
ret
dec
inc
fisttpl
lds
cmp
jecxz
mov
jle
or
outsl
pop
mov
mov
and
mov
mov
xchg
repz
mov
jbe
sahf
lret
mov
mov
jge
sbb
sub
repz
daa
pop
or
push
cltd
or
cs
xchg
test
lock
sub
scas
cmp
cs
bound
push
mov
mov
call
jmp
mov
mov
mov
cmp
rcll
out
fmull
std
adc
pop
test
cmpsl
cli
mov
adc
xor
int
or
cmp
mov
in
xchg
lahf
push
rcrl
hlt
jge
mov
divl
jne
roll
jecxz
push
xchg
test
xchg
stos
cmc
cld
clc
inc
clc
xor
test
mov
mov
ja
push
sbb
cmpsb
dec
sahf
push
dec
sbb
imul
push
mov
sahf
jg
icebp
inc
fisttpl
nop
leave
sbb
inc
clc
push
scas
ret
inc
cld
not
xorb
pop
mov
jmp
mov
pop
adc
mov
xor
jne
stc
sub
or
jbe
lret
enter
mov
pop
cmp
sub
je
fdivs
mov
cs
test
out
lahf
dec
lods
lea
ret
cmpsl
sub
push
fwait
push
sbb
imul
movsb
push
sti
add
test
fimuls
jp
sbb
arpl
push
xchg
cmp
sbb
shl
sbb
cmp
idiv
fwait
push
add
push
bound
and
push
pop
in
imul
dec
sub
in
add
dec
push
sbb
xlat
repnz
push
stos
push
frstor
fistpl
fdivrl
mov
cld
shrb
iret
lret
push
lea
in
pop
inc
sbbl
or
xor
inc
lea
mov
ret
or
loope
test
cwtl
push
pushf
cmp
sbb
jb
dec
roll
aas
mov
xchg
xchg
jne
rclb
dec
fcom
out
out
mov
and
adc
push
mul
mov
nop
push
dec
jne
movsb
aam
js
sub
imul
cs
dec
jp
data16
nop
pusha
adc
sub
jge
sub
and
rcr
xchg
pop
pop
inc
mov
mov
mov
mov
clc
push
sub
add
rcrb
lsl
add
pop
push
pop
cmpsl
fimull
negl
inc
ret
jl
pop
mull
out
fidivl
dec
or
xor
cmp
mov
mov
out
ss
in
sbb
fidivrs
push
push
push
jge
push
cmpsb
test
cmpsl
aas
jmp
outsl
xorl
lock
insl
insl
scas
outsb
add
cmpsb
rol
dec
icebp
sbb
sub
aas
or
or
aam
testb
imul
cmp
or
daa
push
fcomi
into
inc
cmc
sbb
ljmp
pop
or
outsb
sti
xor
fsubrs
jae
jp,pt
cmc
test
mov
addr16
push
call
add
mov
insl
xorl
pop
rorl
pop
inc
adcb
dec
or
pop
push
and
mov
xor
push
cmc
pop
rcrb
pop
xchg
or
inc
icebp
fdivrs
in
mov
test
nop
lock
xchg
imul
pop
mov
add
cmpsb
ja
dec
leave
jp
or
repz
pop
xor
xor
push
mov
aas
xor
sbb
jl
jg
sbbb
jno
and
ret
popa
icebp
add
cwtl
inc
jae
mov
mov
dec
or
ss
add
sbb
arpl
arpl
add
insl
loope
bound
add
outsb
insl
xchg
roll
ljmp
stc
or
pop
and
xor
movsb
cmpsl
inc
int3
sub
push
and
xchg
testb
cmp
insl
mov
ja
int
xor
mov
or
pop
lods
lcall
mov
inc
cmp
enter
sub
mov
cli
lret
movl
cmpb
pop
rorl
pop
xchg
inc
mov
mov
adc
lahf
sub
movl
xor
addl
jmp
push
test
and
cmp
outsl
repnz
rclb
jge
int
aaa
hlt
jno
sbb
out
iret
stc
sub
cmp
mov
and
popa
cmc
pop
hlt
add
aas
mov
jmp
push
mov
xchg
pop
mov
jg
mov
sarb
push
cmpsb
je
fdivrl
mov
fcomps
pop
fists
cld
push
mov
lea
adc
or
jp
add
ret
cli
testl
pop
fs
mov
add
ds
mov
jae
shl
imul
movsl
arpl
js
imul
pop
xor
arpl
xor
repnz
inc
into
pop
or
pop
pop
fmul
aas
jecxz
aas
xor
mov
jge
ja
dec
push
imul
ds
rcrb
mov
and
jg
negl
dec
pop
ja
fs
dec
filds
into
and
mov
inc
negl
outsl
mov
push
push
lret
ret
sbb
lods
adc
and
xor
pop
js
dec
fwait
adc
lock
jp
and
stc
loopne
inc
pop
xor
out
add
fisttpl
mov
das
adc
dec
loope
adc
pop
sub
pushf
adc
ja
and
aas
sbb
inc
adc
fdivrp
push
or
push
jnp
mov
pusha
xor
pop
outsl
or
icebp
sbb
rol
pop
mov
mov
adc
fidivs
mov
mov
jae
adc
out
ffreep
jne
mov
ljmp
movsl
dec
xor
cmpsl
aaa
and
adc
mov
repnz
jo
aas
adc
mov
push
mov
lret
iret
xor
push
addr16
fnstcw
cmp
mov
pop
cmp
mov
movsl
push
xchg
pop
movsl
rol
pop
or
loope
jmp
pop
xor
mov
and
repz
fistpll
inc
pushf
leave
jle
adc
je
int
mov
dec
sbb
or
outsl
xchg
inc
nop
lcall
xchg
stos
mov
sbb
add
cwtl
pop
aas
mov
add
xor
sbb
int
out
sbb
int3
push
xchg
daa
pop
jno
and
aaa
mov
jne
fwait
mov
mov
adc
mov
int3
lea
faddp
out
into
pop
lahf
stc
test
mov
lea
cmp
loopne
mov
dec
ja
js
xchg
or
xchg
jb
mov
sbb
iret
sbb
ret
push
inc
movsb
adc
das
mov
push
cltd
loope
mov
rcrl
bound
into
adc
sbb
sbb
lods
stc
add
aas
lods
arpl
lcall
int3
pop
mov
mov
pop
fcomp
pop
out
adc
fidivl
pop
jg
push
and
cmp
adc
test
lret
mov
aaa
mov
dec
icebp
lea
sbb
repz
or
jg
or
lret
cs
fwait
enter
add
jne
icebp
push
cmp
aaa
push
ret
inc
in
adc
jge
clc
stos
mov
xchg
int
mov
cs
pop
fistpll
jg
ret
pop
movsb
js
add
pop
add
mov
mov
popa
je
and
subl
lcall
pop
in
stos
or
lahf
cltd
or
mov
xchg
mov
push
fs
std
cmp
dec
sub
push
jbe
mov
adc
stos
push
test
sub
dec
mov
out
cmp
int
mov
xor
xor
mov
rcl
ja
mov
dec
int
sub
jne
cmp
cmp
xor
xor
shrl
lods
mov
dec
add
inc
sub
push
sarl
mov
sbb
jbe
repnz
mov
cmc
cwtl
cmp
fidivl
mov
cmc
lcall
test
adc
imulb
pop
ror
jnp
lea
push
inc
dec
fldenv
popf
cmp
inc
lods
mov
jg
ljmp
into
aad
pop
cmp
jp
cmc
or
daa
mov
shrb
xor
cmp
jno
xchg
in
mov
add
push
xor
xorb
js
cmp
fs
jg
lods
inc
pop
icebp
dec
aas
xor
cmp
jg
jne
sbb
pop
pop
mov
cmp
jbe
jge
stc
and
loop
xor
les
ret
pop
pusha
repnz
jecxz
das
or
inc
scas
les
adc
sub
lods
sbb
jnp
push
xchg
add
fwait
insb
sbb
sti
pushf
out
pop
sarl
fmull
push
subb
jp
inc
lods
out
push
out
dec
mov
and
push
jo
mov
les
cli
mov
sbb
out
iret
jo
xor
or
fbstp
adc
out
addr16
push
jnp
je
shll
fs
cs
test
aad
jns
cld
or
aaa
ja
mov
mov
dec
adc
pushf
sbb
hlt
push
cmpsb
scas
sub
dec
dec
cmp
bound
aas
mov
rcr
xor
mov
ror
lock
pop
aas
int3
xor
sbb
dec
cmp
cmpsb
sti
cmpsb
cmovne
flds
jp
mov
cli
mov
test
jmp
inc
lea
jmp
cli
repz
mov
push
jbe
sub
jnp
roll
dec
pushf
test
fidivrl
mov
scas
outsl
add
repz
cmp
lret
xor
and
into
shl
test
push
push
xchg
fimull
aas
sub
jbe
jnp
inc
negl
cmpsb
xor
pop
add
lret
lock
jb
fcoms
xchg
cmpsl
int
xchg
cmp
dec
fs
test
and
push
out
xorb
mov
xor
jae
lcall
fisubrs
mov
pop
push
jl
dec
rcr
dec
insl
xchg
loope
fstp
out
add
mov
sbb
xchg
sbb
test
xchg
mov
aam
cmp
dec
in
fistps
dec
inc
ljmp
jo
mov
les
rolb
mov
mov
ficoml
fneni(8087
imul
xchg
and
movsl
jns
addb
aas
push
hlt
aam
aam
test
sbb
cmpsl
ret
cwtl
repnz
mov
mov
ds
call
pusha
xor
inc
insl
sbb
inc
adc
repz
and
addr16
sub
add
and
pop
xlat
movsl
dec
or
pop
mov
stos
in
out
xor
and
fwait
icebp
fcomps
add
hlt
mov
mov
stos
movsb
fmull
in
jns
gs
cwtl
add
push
pusha
std
sub
mov
test
das
pushf
das
lock
mov
dec
cmp
adcl
jmp
mov
adc
mov
leave
jp
mov
jno
leave
xchg
je
aas
shll
push
jno
adc
lret
xchg
add
push
repz
movsb
sub
lods
loopne
insl
insb
jmp
sub
cmp
fsubs
push
adc
mov
mov
mov
push
or
dec
jb
dec
dec
cmp
xchg
insl
scas
ja
ror
pop
ja
jge
out
sbb
in
inc
dec
dec
frstor
in
mul
sbb
mov
cmp
mov
mov
mov
mov
insl
pop
icebp
arpl
jbe
mov
mov
daa
sbb
or
cli
out
sub
and
push
jne
xchg
or
iret
or
lcall
and
and
jae
lret
das
in
dec
push
mov
pop
dec
sbb
sub
add
hlt
lcall
int3
sub
lcall
cmp
sub
shrb
jecxz
mov
sahf
xor
mov
shll
fidivs
cmpsb
adc
dec
pushf
mov
lret
cmpsl
dec
mov
cmp
aad
lret
pusha
mov
mov
outsl
jo
mov
cli
repz
and
sub
enter
mov
fs
ds
mov
sub
xor
push
dec
push
or
js
dec
imul
filds
push
cmpsb
mov
lret
movsl
mov
jb
inc
scas
dec
incb
xchg
jl
mov
jp
test
fadd
aas
mov
push
pop
dec
sub
jae
addb
jo
lds
push
cmpsb
or
jmp
and
jle
mov
or
mov
ret
dec
pop
add
dec
out
dec
dec
sub
dec
popf
add
push
dec
cli
hlt
sub
lret
mov
cmp
add
mov
int
sub
mov
fsub
add
cmpsl
jns
sub
call
addr16
push
inc
cmc
and
lcall
cmpsb
xor
in
cld
jo
cmp
mov
sub
lret
je
in
das
sbb
ja
mov
repnz
ret
mov
je
add
faddl
mov
test
jge
mov
and
shl
andb
mov
add
adc
push
inc
pop
add
mov
out
push
mov
cmc
sahf
adc
or
sub
ja
xor
xor
mov
aad
dec
dec
and
xchg
ja
test
outsb
popf
mov
cmp
int
add
pop
cmp
and
popf
cmpsb
xchg
sbb
or
xlat
mov
push
scas
pushf
cmp
mov
cwtl
vpor
lods
sub
popa
in
in
mov
out
testl
jmp
dec
inc
jecxz
add
dec
mov
lret
pop
add
sar
lcall
inc
sbb
sti
add
inc
push
jl
lret
cmp
cmp
leave
inc
das
jecxz
sahf
lahf
mov
and
jecxz
fldcw
leave
xchg
xor
sbb
popa
pushf
jo
repnz
mov
aad
outsb
mov
mov
sub
jns
xlat
xchg
movsl
out
mov
sar
add
ss
sbb
xchg
add
jg
mov
cltd
sub
enter
mov
adc
stc
fistpl
push
pop
xchg
ret
mov
or
aam
test
sti
and
cmp
cli
jbe
inc
jns
pusha
and
sbb
test
shrl
call
sbb
sbb
xor
sahf
cmp
or
jne
mov
mov
sub
js
jae
imul
sbb
fs
stos
pop
je
test
xor
mov
push
lahf
jecxz
aas
int3
push
push
fnsave
insl
sbb
sti
xor
or
rclb
mov
mov
mov
xchg
jge
bnd
mov
nop
out
addr16
dec
lods
or
push
dec
fnstsw
mov
xor
repz
es
out
sbb
addr16
popf
xchg
dec
stos
stos
xor
das
shrb
or
repz
hlt
popa
mov
add
and
ljmp
adc
daa
pop
jle
jg
sbb
outsb
cmp
fnstenv
mov
xorb
repz
push
pusha
push
add
mov
push
hlt
mov
add
sarb
mov
int
cmp
mov
xor
dec
mov
xchg
xchg
and
sbb
cmp
inc
xchg
je
shlb
loop
rep
icebp
andb
push
js
test
icebp
xchg
popf
test
repz
and
pop
and
ds
je
mov
sub
cli
mov
insb
xchg
pop
std
cmp
sub
jg
xor
cmpl
mov
sub
sti
lahf
unpcklps
xchg
fnstenv
iret
jmp
mov
rolb
sbb
test
dec
arpl
rclb
xor
add
stos
leave
pop
and
jnp
add
mov
imul
and
clc
or
les
fildll
mov
mov
sti
lods
push
lds
popa
jo
xchg
in
sub
xchg
mov
inc
add
or
ja
mov
adc
adc
out
and
out
iret
add
and
mov
push
les
sahf
outsb
in
fisttps
xor
push
mov
mov
lods
imul
loop
sbb
inc
mov
test
lret
loopne
cmp
push
sbb
cmpsl
mov
or
fcom
pop
jno
int
xchg
lock
xor
push
sub
sub
divb
or
xchg
xor
cld
and
les
xchg
repnz
int
dec
out
xchg
lea
shll
add
xor
adc
xlat
mov
add
jns
pop
dec
xor
fildl
xchg
mov
idiv
or
rcrb
leave
add
in
mov
arpl
test
aad
push
or
jns
push
lret
bsf
push
lea
testl
cmpsl
hlt
mov
and
cmc
imul
xor
aaa
aas
stc
or
jb
jp
and
hlt
into
pop
test
xchg
andb
inc
rcll
or
cmpsb
arpl
jno
mov
push
cmp
cmc
mov
imul
xchg
ds
add
inc
cld
das
ret
call
aas
mov
lods
xor
xor
push
ja
cmp
xor
push
repnz
enter
add
sbbl
add
xor
daa
lahf
jle
mov
insb
dec
mov
rolb
imul
stc
push
dec
xchg
mov
lret
adc
jbe
stos
inc
mov
or
xor
aaa
enter
and
xchg
pop
adc
out
cwtl
data16
mov
cmp
ficompl
ljmp
xchg
call
movsb
adc
jae
imulb
stos
subl
jnp
push
mov
sub
scas
push
add
std
test
sahf
push
push
push
ja
pop
addr16
jae
or
mov
adc
dec
imul
xchg
nop
jnp
mov
and
fnsave
pop
in
stos
adc
jns
and
ds
cwtl
sub
mov
stos
mov
lea
push
mov
cmc
insb
mov
test
dec
ss
push
dec
xor
mov
sbb
inc
clc
and
jb
and
aam
push
and
jge
xchg
sbb
rolb
adc
nop
bound
push
and
nop
jg
mov
mov
dec
mov
lret
fcompl
xchg
das
lods
adc
dec
xor
lods
dec
std
leave
in
pushf
and
push
test
cmp
lcall
xchg
movsb
inc
test
ret
add
lret
and
jle
inc
stos
sbb
push
inc
mov
ret
xchg
enter
in
insl
mov
insb
loope
and
adc
jnp
push
enter
lods
fisubl
stc
adc
call
mov
hlt
adc
pop
adc
add
mov
add
fsubrs
ja
jge
fsubrs
sub
mov
fwait
mov
pop
test
dec
bound
notl
fcoms
jle
sbb
js
cmp
sbb
pop
or
and
adc
repz
cmp
sub
jmp
pop
loop
push
cmp
scas
pop
mov
les
test
add
jne
mov
ss
clts
jmp
pop
add
addr16
fldenv
mov
icebp
cmp
out
xor
mov
clc
notb
nop
fwait
push
pop
stos
ljmp
nop
pop
or
and
dec
mov
cs
add
out
sub
push
rcrb
fmuls
cmp
pop
test
push
sti
fdivs
mov
jbe
pop
int
loope
xor
stos
lcall
fwait
push
xchg
cmpl
pop
test
pop
sbb
movsl
movsl
mov
loopne
pop
jae
sbb
ficompl
or
in
mov
insb
or
inc
mov
xchg
cli
xchg
and
add
popf
imul
mov
sbb
stos
lret
testb
insb
cmp
mov
pop
movsb
adc
out
jbe
popf
leave
mov
xchg
shrl
mov
pushf
out
jge
mov
mov
pusha
mov
lock
pop
psubusw
jb
dec
sbb
jl
inc
and
xor
push
mov
orl
imul
shll
jae
jge
jecxz
out
pop
fldt
adc
nop
leave
and
fistpl
movsl
jle
fsqrt
or
xorl
and
std
icebp
xor
test
and
jne
repnz
and
pushf
data16
push
dec
orl
and
pop
mov
or
pop
pop
aas
lar
push
mov
or
xor
sbbl
adc
push
jg
cld
cmp
imul
jnp
mov
fidivrs
pop
fstpt
fsub
scas
pusha
mov
dec
jge
push
push
icebp
add
pop
aad
sbb
subb
cmc
and
push
stos
imul
xor
xchg
dec
pop
std
imul
push
popf
test
rcll
mov
movsb
push
sbb
add
jecxz
push
xchg
add
movsl
add
arpl
ja
and
mov
xor
clc
cmp
xchg
cmpsb
push
stc
pop
sar
lods
iret
stos
adc
xchg
lcall
mov
cmpsl
test
adc
inc
sub
nop
mov
test
in
sub
mov
pusha
sbb
dec
dec
not
or
xchg
out
ss
sbb
ss
dec
dec
scas
push
loop
in
adc
push
aas
push
or
xchg
and
adc
jge
mov
fs
push
push
push
inc
shl
cmpl
scas
inc
mov
xlat
out
ljmp
movsl
xlat
repnz
and
outsl
add
iret
mov
sti
int3
push
push
add
ss
in
js
xor
scas
xchg
adc
test
or
btcl
lcall
pop
roll
jns
scas
fimull
rcll
adc
insl
sbb
mov
xor
ret
outsb
xchg
push
mov
mov
loop
pop
mov
jp
sub
lea
push
icebp
arpl
popw
ffree
mov
push
or
sahf
scas
std
test
lahf
loopne
popa
sub
adc
sahf
lret
lret
mov
pushf
arpl
stos
lret
xchg
push
or
mov
into
cmpsl
stos
mov
sub
dec
insb
push
pop
in
jbe
out
adc
lods
adc
cmp
jp
adc
pusha
mov
xor
dec
push
mov
cmpsb
xor
mov
ret
cmc
outsl
inc
jne
inc
push
and
xor
rclb
in
xchg
pop
fnstcw
adc
dec
rcrb
and
adc
enter
mov
ja
sti
jg
xor
mov
dec
lea
data16
cmpsb
mov
or
shr
xor
das
inc
enter
pushf
xor
pinsrw
or
sub
cmp
push
mov
shll
inc
adc
or
fs
repz
repnz
idivb
mov
jbe
mov
mov
push
push
add
sti
xor
in
les
inc
stos
iret
cld
push
pop
xchg
ja
mov
shl
icebp
jb
add
fidivrs
cmp
dec
mov
in
lret
pop
rcll
cmpsb
jno
sbb
and
dec
pop
ljmp
jl
ljmp
add
mov
jge
aaa
add
in
test
loopne
loop
ss
cmp
dec
dec
mov
mov
cmp
cmp
scas
lods
rcll
decb
fsubs
into
cmp
push
dec
vpaddw
push
xchg
and
ds
pop
cmp
aam
stc
inc
mov
aaa
cmp
je
and
daa
shlb
pop
fwait
and
jg
mov
dec
inc
int3
cmp
mov
pop
pop
clc
lahf
jp
lea
data16
xchg
int3
je
jbe
aaa
push
mov
cmc
inc
shl
add
jnp
cmp
cmp
xchg
jbe
jno
fwait
mov
sarb
pop
sbb
std
imul
fisubs
or
mov
cld
xor
imul
xchg
cmp
inc
inc
arpl
and
mov
cmp
push
loopne
aas
into
mov
jp
mov
adc
pop
push
xlat
mov
xlat
rorb
pop
push
insl
adc
push
or
je
pop
pop
jns
adc
cmp
dec
xor
sahf
pusha
movsb
mov
fidivs
dec
jbe
shlb
lret
sub
ret
es
dec
xchg
dec
stc
inc
xor
cld
pop
lahf
push
push
ret
les
cltd
pop
inc
cmc
xor
cmp
jmp
and
xchg
or
data16
or
inc
mov
rolb
xlat
and
mov
repz
insb
in
sub
adc
lds
jl
sbb
inc
nop
test
push
xchg
xchg
scas
push
mov
inc
testb
arpl
dec
sbb
or
xchg
popa
hlt
fnsave
cmpsb
sub
nop
xor
xchg
xor
test
push
orl
dec
neg
arpl
mov
mov
xor
dec
mov
push
pop
lock
in
pop
lret
repnz
or
sub
sti
xchg
dec
or
out
inc
cmp
aam
push
out
push
xchg
sub
sbb
mov
lock
cli
testb
jp
add
mov
sbb
stos
dec
and
cmp
pop
cmp
xor
stos
dec
ret
loopne
push
jne
aam
xor
cmpsl
sbb
sti
adc
sub
clc
mov
xor
pmullw
xchg
insb
mov
lret
in
jae
pop
push
clc
jmp
xchg
or
out
add
mulb
ficomps
notb
adc
dec
je
mov
jbe
loop
jl
sbb
shlb
gs
and
sub
stos
adc
shlb
in
push
jnp
fnstsw
int3
test
ror
cmc
cmp
daa
xor
outsb
fsubs
inc
shl
loopne
in
inc
push
xor
push
sti
inc
pop
mov
out
cmp
sub
add
jecxz
jg
lret
and
mov
mov
into
pop
fwait
xchg
sti
mov
sbb
aam
dec
sbb
aam
sti
mov
imull
loope
and
lea
loop
ret
in
popf
mov
pushf
es
cmp
stos
loop
pop
mov
pop
push
adc
xchg
pop
cli
jno
enter
arpl
cmpsl
std
orb
hlt
jbe
imul
cltd
lds
pop
xchg
push
mov
outsl
ds
test
lahf
jle
repz
cmpsl
or
notl
rcl
sbb
pop
mov
in
icebp
xor
dec
and
and
push
jno
cltd
fsubs
or
mov
xchg
jmp
insb
mov
sub
cmp
xchg
adc
repnz
das
and
push
xchg
inc
sbb
mov
mov
icebp
imul
adc
push
push
inc
fnstenv
jp
xchg
int3
jle
gs
shll
and
fiaddl
insb
stc
push
test
mov
cmp
pop
or
out
pop
jo
aam
jno
movl
lock
push
push
pop
enter
addr16
ret
mov
cmp
adc
xchg
gs
das
push
mov
adc
into
xor
daa
aaa
lea
add
insl
xchg
pop
repz
js
dec
rcrl
dec
out
sti
jle
jb
insb
insb
nop
add
imul
jno
test
jns
loope
inc
add
dec
and
pop
lods
pop
xchg
mov
mov
inc
dec
or
lret
sbb
and
jns
lahf
lcall
xchg
fsubrp
pop
push
loope
lds
cmpsl
incl
std
inc
gs
add
mov
push
sbb
popf
fwait
outsl
addb
fldt
cmp
sub
gs
adc
or
stos
icebp
lea
sbb
out
cmp
mov
jno
loopne
push
popa
fisubs
pop
cld
int
jp
xor
adc
xchg
jmp
push
hlt
push
jns
lret
rolb
mov
add
push
sub
jo
dec
daa
mov
fstpl
fwait
rol
dec
push
push
xchg
pop
pop
aas
xchg
mov
push
pusha
adc
shlb
adc
xlat
cmpsb
std
divl
out
lahf
pop
clc
mov
js
pop
outsb
mov
mov
cli
xor
push
jne
imul
in
mov
sub
lods
in
push
xchg
cmp
movsl
leave
pop
ret
loop
insl
daa
xchg
or
mov
xchg
and
lahf
jns
xor
adc
or
out
jp
jmp
imul
xchg
rcrl
in
inc
xor
jns
inc
fs
pop
mov
dec
push
or
jno
repz
fcomps
loop
adc
pop
inc
call
loopne
jmp
pop
xor
push
into
arpl
xchg
testb
shl
mov
fcmovnbe
mov
ljmp
xchg
mov
stos
dec
sbb
mov
sbb
ficoml
cwtl
lea
lret
movsb
sbb
movsb
or
adc
scas
mov
push
push
sbb
xor
loop
cs
pop
adc
das
aas
mov
lods
cwtl
fcmovne
pop
jmp
adc
pushf
ja
mov
sbb
sub
or
and
jmp
xchg
fists
data16
aas
cld
je
std
sub
jbe
mov
jmp
xchg
fisttpll
and
in
inc
movsl
pop
je
add
call
andb
lea
sub
cmpb
xor
xchg
test
lods
dec
jnp
add
incl
cmp
mov
adc
lock
mov
and
subl
mov
jae
add
in
cwtl
inc
push
adc
ret
outsl
mov
movsb
out
or
jb
mov
cmp
or
push
rorl
lcall
mov
xchg
xor
rorl
scas
cmp
or
cmp
out
jle
ret
repz
or
leave
dec
adc
mov
jbe
jb
jle
loop
cmp
adc
sarb
lea
loop
cld
mov
mov
jb
fistl
sub
pop
pop
int3
push
mov
clc
xor
mov
jp
sahf
sub
xchg
sub
call
push
mov
pop
adc
fwait
sahf
andl
cmp
shll
andl
repnz
dec
cltd
mov
mov
cmp
fcoml
jge
movsl
sub
jnp
stos
xchg
lods
cmpl
cmp
inc
dec
out
dec
cmp
bound
xor
sub
ja
daa
pop
adc
dec
int3
jo
mov
int
ret
roll
arpl
in
jg
mov
lahf
int3
fldenv
test
push
mov
je
ja
xchg
lock
lea
mov
idivl
jno
inc
lret
pushf
sbb
xchg
rorl
fdivr
sti
movsl
xor
das
inc
in
lods
xlat
or
jmp
pop
mov
test
lcall
cs
jl
and
aam
shlb
pop
push
test
adc
adc
sub
popa
push
push
cmp
jle
pop
cwtl
jg
add
mov
shll
lock
inc
ficoml
xor
stos
xor
cli
addr16
lods
add
hlt
out
cmp
rol
loope
arpl
lds
or
negl
cmp
cmpsb
ficompl
cmpsl
pop
mov
xor
pusha
stos
std
sub
push
xchg
ja
pop
arpl
shl
cld
fldt
pop
sarl
sub
pushf
add
rol
outsb
bound
shrl
ljmp
adc
cwtl
rcll
jmp
imull
stc
icebp
testb
mov
dec
insl
sub
sbb
jp
mov
outsl
mov
loopne
dec
pop
or
mov
jg
data16
mov
lock
cmp
loope
pusha
xor
sub
aas
mov
scas
pushf
push
clc
add
shrb
add
jbe
cmp
adc
fldenv
pop
push
xchg
xor
jmp
push
ret
mov
rclb
mov
inc
es
pop
insb
std
xor
je
and
jecxz
nop
mov
add
cmc
xchg
cmp
adc
lock
adc
jns
cmp
pusha
sbb
jno
aas
mov
bound
pop
shll
or
pop
cmc
cs
popf
and
adc
add
pop
insl
push
insl
and
into
enter
sahf
fsubrl
loop
xchg
fnstenv
movsl
jnp
jmp
mov
sahf
inc
notb
out
mov
xchg
xor
sbbb
mov
mov
mov
lods
cmpsl
sub
adc
push
scas
enter
pusha
xchg
mov
dec
aad
shr
repz
adc
sbb
lods
ret
clc
fisttpl
outsl
movsb
int
xchg
subl
scas
jbe
jne
lahf
jp
sbb
add
ss
xor
sub
jle
scas
mov
xor
push
sti
gs
inc
sbb
xchg
jno
sbb
fwait
lods
push
or
lcall
mov
decl
dec
imul
xchg
jb
lds
cli
fdivs
ror
cmp
xor
push
call
xchg
cmp
or
mov
cmpsl
fstps
and
adc
arpl
shll
adc
std
addl
mov
pop
outsb
inc
add
add
mov
repnz
or
out
or
jbe
jle
popa
pop
cmp
movsl
cmp
mov
add
loopne
inc
popa
xchg
add
fidivrs
or
lcall
adc
push
loopne
mov
jmp
shlb
arpl
ja
daa
repnz
mov
pop
and
lea
and
mov
pop
ja
hlt
sub
xor
fs
popa
test
das
jmp
fs
xor
sbb
test
sbb
dec
ret
mov
outsl
add
addr16
jl
sbb
repz
daa
xchg
and
xchg
pop
fucomp
out
and
fstpt
dec
das
ret
dec
pop
xchg
lds
jnp
xor
sub
xorl
loop
imul
and
arpl
bound
dec
sti
repnz
push
sub
or
outsl
shrb
test
mov
and
test
xor
mov
jo
jmp
sbb
add
pop
fadd
and
push
xor
fsubrl
mov
adc
adc
pop
stos
sub
dec
test
ljmp
add
insb
addr16
xchg
cld
sub
cmc
jns
push
sub
jne
and
dec
out
aaa
push
mov
jge
ficomps
mov
loop
or
xor
and
sub
adc
or
and
scas
into
fwait
int3
xchg
jl
dec
jne
pop
jo
adc
out
out
push
int
scas
lods
xchg
enter
mov
lret
lret
xchg
int3
sub
mov
enter
dec
push
stos
mov
and
and
lcall
gs
push
mov
jae
dec
mov
mov
cwtl
faddl
dec
ljmp
sar
outsb
loopne
and
sahf
mov
inc
xlat
xchg
pop
jbe
repz
push
dec
outsb
scas
loop
or
mov
mov
popa
mov
add
je
daa
xchg
iret
xor
iret
mov
mov
loop
inc
add
dec
outsb
cmp
in
xor
jge
sub
sub
rcrb
cwtl
fstpt
sbb
push
dec
lret
cmp
clc
jne
ja
jnp
das
lret
mov
and
lods
jno
jg
sti
ret
push
mov
imulb
mov
jne
ljmp
or
cmp
add
cs
cvtps2pi
out
add
push
xor
pop
fsubl
or
sarb
rcll
fsts
repz
cmpsl
call
cltd
filds
repnz
lcall
pop
bound
lock
xchg
push
inc
inc
jecxz
dec
sti
push
flds
jb
mov
or
adc
add
mov
mov
dec
ret
mov
imul
push
pop
sbb
xlat
stos
out
inc
sarb
xchg
movsl
mov
and
ja
fs
sub
loopne
neg
dec
cmpsl
sti
popa
mov
sbb
rcl
jnp
dec
fisttps
push
mov
pop
aas
fdivl
stos
cltd
add
sbb
mov
bound
movsl
xor
dec
cmp
scas
xchg
cmc
shrl
popf
or
mov
fimull
adc
in
inc
xchg
ficompl
pop
cmp
in
std
pusha
xchg
out
dec
xor
add
call
add
sti
scas
mov
loop
shll
icebp
loope
clc
adc
xor
test
dec
jle
pop
data16
mov
enter
pop
loope
ret
das
sub
and
dec
or
inc
mov
loop
add
js
or
test
sub
sbb
or
mov
in
sbb
out
stc
pusha
xchg
stos
loop
bound
mov
push
xchg
jp
push
lea
enter
sbb
mov
fidivs
sarl
xor
push
xchg
xor
fdivs
leave
push
push
push
ss
xor
or
cmpsb
mov
rolb
movsl
push
jae
mov
stos
in
jns
les
clc
xchg
mull
dec
mov
cmp
jo
mov
xor
pop
negl
hlt
pop
aas
call
cmp
jg
std
imulb
mov
mov
decb
lods
outsl
ja
sbb
sub
sub
iret
mov
adc
push
mov
ss
in
dec
or
insl
imul
in
inc
sub
inc
or
repnz
jle
inc
push
sub
or
adc
sub
mov
fiaddl
push
add
or
aas
fcomip
or
cmp
aad
xor
in
mov
fdivrp
and
add
jns
xor
pop
sub
push
mov
aam
jmp
push
pushf
mov
lods
mov
in
push
fmuls
dec
rorb
iret
dec
decl
inc
cmc
dec
cltd
fsubr
jle
mov
aam
out
xor
fldl
push
mov
inc
psrlw
mov
mov
hlt
sbb
insb
sub
lcall
add
test
jge
jmp
inc
mov
mov
call
lret
cmp
dec
cmp
inc
jl
jmp
adc
jb
imul
mov
jne
iret
sub
daa
lahf
sbb
je
dec
sbb
dec
shlb
scas
popa
cli
iret
lea
arpl
test
dec
mov
mov
cltd
add
adc
lods
les
movl
jecxz
notb
xor
xchg
cli
loop
iret
call
sahf
adc
mov
leave
rolb
add
and
sbb
fmulp
ss
mov
mov
lcall
adc
jns
sbb
jno
dec
fldcw
imul
jae
scas
and
mov
sub
cmpb
pop
adc
sbbb
cld
sub
jb
cli
lret
aad
pushf
pop
sub
push
cmc
stos
and
jmp
jne
push
aad
mov
test
sbb
aam
cmp
enterw
cmp
popa
mov
push
cmpsl
outsl
fucomip
jle
adc
aam
imul
mov
add
mov
push
cmp
and
stos
fidivl
jmp
scas
popf
cli
cmp
adc
lock
pop
in
outsb
int
mov
pop
jg
shr
dec
orb
cwtl
mov
add
sbb
test
lock
mov
call
jbe
daa
fcomi
adc
jae
mov
xchg
loopne
add
hlt
aas
sbb
aad
lret
xor
push
lcall
inc
int3
xor
into
sbb
dec
dec
sbb
dec
scas
mov
and
cmp
pop
push
leave
push
cmp
dec
jbe
pop
idivl
in
idivl
jecxz
inc
cwtl
movsb
mov
push
inc
dec
gs
xchg
in
xor
in
inc
xor
int3
mov
jns
and
popf
scas
arpl
repz
jo
lahf
js
outsb
cmp
pop
ss
mov
xchg
lcall
int3
mov
cmp
jne
and
repz
imulb
je
cmp
in
pushf
inc
insl
fsubl
mov
test
shll
fcoms
cmp
lea
dec
mov
mov
dec
pop
inc
add
mov
jl
pop
mov
fucom
sbb
jl
cmp
push
fdivp
iret
in
lcall
repz
mov
mov
add
pop
cmpsb
mov
or
jmp
sub
in
popa
aaa
inc
lea
in
movsb
dec
repnz
jp
mov
leave
mov
shrl
fisttps
lods
popa
mov
adc
out
repnz
movsl
cmp
inc
pop
pop
inc
jo
dec
lcall
test
mov
hlt
push
gs
sbb
push
jp
inc
and
xor
or
push
subb
lds
ljmp
or
push
aaa
lea
mov
or
cmp
push
sarb
cmp
notl
or
sbb
pushf
inc
pop
fsubrl
and
push
les
les
jno
inc
iret
mov
and
cmpsl
mov
inc
daa
ficomps
xlat
mov
dec
imul
pop
ss
imul
cmpsb
cld
jns
mov
jne
aam
pop
pop
sub
daa
mov
movsb
cmp
imul
sbb
fcmove
cmp
in
jbe
pop
cmp
addr16
mov
iret
adc
and
cli
sub
idiv
xlat
lds
js
loope
add
xchg
or
das
bound
in
loop
repnz
sub
sub
in
loop
xor
push
nop
mov
fwait
push
fstps
insl
test
jge
lret
imull
stc
in
xchg
inc
addr16
pop
fmul
sbb
int
movsl
std
fwait
outsl
out
jle
clc
cwtl
lea
push
sbb
dec
xor
rolb
imul
lods
lret
cmp
and
xchg
cmpsb
jp
push
out
xchg
or
or
mov
test
stos
sbb
out
insb
fdivrl
jbe
aam
ljmp
notl
fisubs
into
mov
icebp
pop
aas
test
divl
sbbl
and
xor
sbb
jnp
push
mov
sahf
mov
jmp
inc
das
pop
lret
jne
in
xor
loope
into
jle
sub
cwtl
aas
movsl
std
lock
mov
test
cmp
mov
out
jne
xchg
sbb
cli
or
shrb
test
lret
outsl
dec
cmp
add
push
repz
xchg
divl
loope
lahf
dec
lock
or
mov
fs
add
into
repz
imul
ja
add
aas
push
jne
into
push
mov
int3
mov
xchg
pop
cmpsl
idiv
or
pop
call
sub
sub
ja
push
or
push
mov
test
pop
mov
sub
sti
es
iret
lret
movsb
pop
or
mov
lock
pop
pop
data16
xchg
sub
ds
and
push
shl
xchg
mov
xchg
sar
clc
repz
add
shrb
jnp
mov
test
or
sbb
dec
rcrl
sub
sbb
int3
cmc
sbb
fists
cmc
test
and
jb
out
push
mov
in
fisubrs
movsb
jmp
data16
sub
adc
jmp
xchg
mov
movl
sahf
jg
imul
lods
adc
jns
test
jnp
sbb
negl
push
test
add
mov
call
mov
movsl
and
cmp
ss
inc
out
pop
dec
push
ret
jecxz
sub
adc
xchg
inc
inc
mov
dec
scas
mov
and
xlat
rol
pop
jb
cltd
pop
repz
mov
mov
cmpb
inc
insl
mov
fidivl
in
jo
sub
pop
xchg
negl
jbe
mov
hlt
jae,pt
cld
dec
insl
pop
fldt
mov
inc
jmp
adc
shll
cmp
adc
fsub
mov
arpl
push
push
lods
jle
in
adc
mov
test
fstpl
movsl
loopne
xchg
jmp
xor
push
mov
daa
inc
cmc
adc
imul
rorb
mov
dec
add
mov
cmp
xchg
and
fnstsw
pop
fstpl
mov
andb
pop
cmp
mov
movsb
adc
pop
mov
xchg
pop
or
ret
imul
sbb
push
sahf
dec
fisttpl
out
scas
pop
jbe
push
inc
lahf
jno
fidivrs
imul
pop
mov
fists
adc
ja
inc
jmp
mov
sbb
ljmp
sti
iret
xor
sub
in
movsl
add
int3
inc
push
inc
mov
dec
adc
pop
xchg
push
popf
jecxz
fisttpll
mov
test
call
and
and
mov
mov
jle
je
xchg
mov
enter
mov
pop
dec
dec
or
sbb
ss
das
orb
ljmp
mov
jns
adc
add
arpl
adc
test
and
int3
cwtl
mov
jno
cmpb
data16
clc
fucomi
mov
push
xchg
cmp
or
sub
stc
pop
mov
or
outsb
push
and
fildl
lea
jne
jmp
push
adc
clc
sub
or
ret
imul
sbb
je
sbb
or
bound
shr
push
int
mov
sti
arpl
rcrb
into
inc
mov
ret
pop
fimull
mov
cmp
or
out
test
movsl
in
cli
jge
and
aaa
mov
sub
or
jge
sbb
mull
jp
sub
pop
cmp
pushf
shll
lods
pusha
mov
pop
mov
cli
shr
pop
gs
and
adc
inc
popa
jmp
xchg
mov
les
mov
dec
insl
fdivl
movsb
mov
lret
cli
aaa
jnp
arpl
ds
int3
call
push
mov
cmp
clc
and
add
add
sub
ror
in
sub
jae
lock
stc
pop
sub
out
in
daa
dec
and
jns
or
mov
repnz
and
mov
cmpsl
outsb
scas
pop
das
add
lods
sbb
jbe
adc
dec
repz
mov
cltd
pop
scas
pop
fdivs
fdivs
xor
popf
sbbb
inc
sahf
add
je
push
push
and
imul
aas
and
jmp
push
pop
jbe
cmpsb
jo
popa
xchg
clc
movsb
call
dec
ljmp
pop
hlt
push
mov
adcl
add
hlt
lahf
popa
xor
mov
and
popf
sahf
in
xor
sub
mov
fst
xchg
xor
cmpsb
in
jb
cmpsl
loopne
mov
xlat
data16
adc
push
insb
or
je
clc
push
notb
sbb
cmc
dec
jle
fistps
fstsw
sub
dec
fdivrl
and
jp
sbb
cwtl
sarb
imul
icebp
clc
addr16
add
scas
jo
jmp
lock
in
pop
out
push
cmpsl
mov
jnp
fimull
test
aas
push
push
adc
jae
add
mov
scas
xchg
lock
insb
roll
cmp
insb
mov
inc
cwtl
loopne
fsubrl
in
xor
stos
sub
mov
jg
cs
and
push
aas
sahf
out
jbe
das
cmp
xor
cmpsl
cmc
cmpsb
dec
xor
test
std
jbe
dec
loop
sub
or
inc
push
xor
cwtl
push
sbb
mov
cmp
adc
xchg
out
andb
mov
incl
out
push
xor
sub
cmp
