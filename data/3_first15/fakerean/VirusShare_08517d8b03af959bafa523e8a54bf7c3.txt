stos
in
dec
inc
jb
adc
jne
in
jae
push
adc
push
sar
dec
movsb
adc
dec
cmovle
mull
inc
pop
testl
in
lock
nop
insb
pop
arpl
push
sti
add
cmp
adc
sti
sub
cmp
cmp
sahf
jb
repz
cmpsb
sbb
testl
repz
jb
repz
dec
imul
jmp
in
or
mov
outsl
mov
scas
lret
push
aaa
movsb
inc
or
dec
loop
inc
jae
jge
jae
test
or
mov
push
out
mov
aaa
mov
add
push
sar
mov
cmp
jmp
js
out
stc
add
cltd
cmp
scas
xchg
lods
out
mov
shr
lds
stos
xchg
hlt
push
lret
test
mov
lahf
test
test
mov
mov
ret
ret
push
and
inc
inc
rcrb
ret
cs
pop
test
dec
mov
ret
cmp
pop
cmp
mov
jecxz
loope
mov
or
dec
inc
mov
cli
push
loop
movb
inc
daa
dec
lods
mov
je
sub
andl
stos
loop
jge
repnz
sub
cli
repnz
xor
pop
or
mov
dec
add
pop
push
cmp
ret
xor
xor
pop
inc
dec
subb
mov
stos
loop
sub
cmpsl
cmpsb
outsl
js
dec
jnp
out
cmp
jnp
stc
inc
inc
pop
dec
inc
ret
inc
add
movl
mov
mov
pshufw
ret
leave
add
mov
int3
test
lds
int3
dec
mov
imulb
sarb
adc
add
movsl
mov
lods
inc
test
xchg
dec
sbb
dec
ret
push
inc
mov
jno
divl
sub
in
dec
outsl
push
mov
js
or
mov
faddl
pop
pop
mov
mov
pop
sbb
test
push
dec
mov
call
mov
mov
jmp
clc
add
dec
inc
je
pop
xor
pop
int
mov
xchg
lret
xor
negl
push
outsl
xor
xrelease
ret
xor
mov
add
aam
test
mov
xchg
add
fs
push
in
je
clc
cmp
addr16
mov
xchg
movsb
cmp
xor
addr16
push
ret
push
push
sbb
mov
pop
cmp
jb
fadd
enter
xlat
dec
xchg
or
inc
mov
add
jp
int3
adc
xchg
inc
roll
sub
pushf
lahf
dec
push
lret
jnp
ret
jb
sub
jno
dec
xchg
sbb
insb
sbb
ds
xchg
dec
xchg
cmp
popa
dec
push
cmp
jl
icebp
mov
dec
or
jo
jp
cmp
xchg
je
pop
xchg
dec
cmpsl
mov
mov
bound
cmp
ljmp
call
adc
enter
cmp
or
xchg
or
xchg
sbb
fldl2e
mov
xchg
insl
ret
jb
sub
or
push
push
and
push
loop
jl
sbb
jle
dec
inc
sbbb
xchg
push
or
pop
testb
push
cmp
clc
pop
iret
xorl
or
push
push
sbb
jb
sbb
jp
enter
sti
test
dec
xchg
mov
xchg
cmp
pop
xchg
dec
je
and
inc
into
xchg
xchg
sahf
in
jb
cmp
dec
xchg
xorl
or
stos
inc
mov
in
pop
push
add
jle
in
sub
xor
pop
jp
cmp
pop
or
lret
push
sti
xchg
sbb
lods
mov
imul
aad
xchg
ret
test
out
js
mov
arpl
loopne
push
arpl
mov
sub
pushf
lahf
dec
push
lret
jnp
ret
xor
inc
push
mov
testl
fbld
out
pop
xchg
dec
xchg
mov
dec
pop
lds
dec
xchg
ret
loopne
xlat
dec
push
sbb
inc
notb
xchg
fiaddl
push
jg
stc
jp
sti
xlat
aad
dec
or
imul
xchg
or
add
or
clc
movb
sti
loopne
xlat
dec
push
jbe
mov
lods
lret
in
aad
dec
mov
mov
sti
call
push
jns
mov
push
inc
pop
adc
pop
xchg
ret
pushl
shlb
sarl
inc
pop
cwtl
int
pop
xchg
dec
push
aaa
jg
cli
sbbl
xchg
mov
dec
adcb
push
push
inc
outsl
aas
clc
dec
xchg
jbe
mov
iret
ret
jp
sbb
repz
pop
dec
dec
cmp
push
xorl
pop
push
xchg
adc
pop
and
xchg
push
lahf
xor
ret
jp
xchg
ss
flds
adc
cwtl
movsb
xchg
push
mov
sub
fstps
or
cmp
hlt
mov
push
add
mov
mov
fs
mov
sbb
add
dec
in
sbb
dec
test
lahf
ret
je
pushf
mov
xor
cmp
mov
mov
sbb
dec
jg
cli
add
pop
or
pushf
mov
test
lahf
dec
jp
cmp
add
cmp
push
lds
push
imulb
jnp
jg
cli
imul
bound
xor
adc
cs
inc
cmp
push
adc
and
dec
xchg
test
jb
xchg
sti
daa
pop
xchg
dec
or
xchg
xor
add
lahf
cltd
out
jae
in
add
cs
cmpsl
cmp
inc
push
pop
mov
push
xchg
lret
daa
pop
xchg
dec
test
xor
pop
lods
mov
ret
pop
xchg
dec
in
sbb
pop
xchg
dec
test
lahf
ret
dec
push
mov
sbb
jns
mov
push
arpl
inc
repz
pop
xchg
dec
or
lahf
popl
lret
mov
dec
xchg
inc
or
fwait
inc
icebp
add
inc
addr16
xchg
and
scas
mulb
xchg
ret
inc
dec
sbb
mov
fists
xor
dec
or
scas
add
ss
adc
rcrb
dec
xchg
rcrl
xorl
xchg
or
clc
sbb
das
test
pop
orb
dec
jg
popf
stos
pop
pop
sahf
inc
cwtl
jmp
xor
imul
and
and
cmp
out
jnp
stc
push
sub
pop
out
jae
cmc
sub
lret
cmc
scas
or
pop
les
push
sub
mov
pop
fisttpl
pop
aas
inc
orl
pop
out
xchg
aaa
xchg
push
imul
call
cmp
inc
pop
fiadds
addr16
push
or
stc
jno
out
cmp
cmp
push
test
pop
xchg
push
enter
test
or
fisubl
imul
jle
mov
imul
fwait
bnd
or
pop
dec
dec
jg
xchg
sbb
in
aad
sub
repz
lahf
pop
pop
leave
xchg
lret
xlat
cmp
lahf
iret
inc
inc
and
call
rol
xchg
nop
adc
pushf
jl
test
xchg
dec
add
mov
mov
adc
jg
xchg
push
ljmpw
lahf
xchg
push
mov
xchg
popf
jne
xchg
inc
pop
mov
hlt
fsubr
loopne
xor
inc
dec
loope
test
rcll
jno
mov
sbb
leave
mov
xchg
ret
adcl
pop
jge
pop
dec
jecxz
jg
ffreep
mov
mov
cs
mov
xchg
dec
hlt
stos
sbb
mov
icebp
dec
stos
xchg
mov
dec
arpl
shr
orb
addl
mov
mov
sbb
jnp
pop
jle
testl
lret
loope
push
test
mov
cmp
sub
mov
inc
pop
out
cld
rol
sbb
push
xchg
inc
mov
mov
hlt
inc
cmp
cmpsb
jp
jl
sbb
into
fcompl
mov
outsb
aad
jp
mov
lret
fwait
inc
push
mov
or
pop
xor
lahf
mov
cmpsb
fs
lcall
jp
push
scas
adc
jo
cmp
scas
fisttpl
shll
mov
movb
orl
add
push
mov
lahf
mov
pushf
rcrl
ret
inc
scas
inc
aaa
fdivl
mov
repz
daa
mov
xchg
ret
push
mov
push
xchg
aad
popl
xchg
jge
mov
push
aad
push
mov
sarl
hlt
lea
mov
mov
dec
jno
lock
test
divb
imul
add
sub
push
push
sub
stc
lret
lea
jg
dec
insb
xchg
mov
je
mov
cmpsl
call
xor
test
fs
jp
test
pop
fiadds
mov
nop
and
mov
nop
mov
test
push
dec
and
popf
mov
scas
ret
adc
add
jne
loop
adc
mov
ret
add
pushf
rorl
in
adc
adc
pop
pop
or
add
cwtl
cltd
or
mov
cmp
lret
aam
cmp
fs
pop
loope
sub
push
lods
adc
push
and
loop
scas
dec
pop
lods
xchg
aad
add
or
lret
int3
push
rcrb
mov
out
ss
adc
cwtl
mov
jle
enter
push
add
pop
sbb
sub
mov
in
fcomps
cmc
add
push
and
add
jp
icebp
iret
mov
jmp
gs
push
outsl
les
popf
jbe
call
mov
cwtl
xchg
ret
sbb
add
and
insl
adcb
cmp
mov
rcrb
aad
rcr
sub
or
leave
les
aam
adc
xor
mov
dec
or
pusha
xchg
push
or
mov
sbb
roll
sbb
jae
ds
xchg
gs
gs
cmpsb
xchg
ret
or
loope
pop
push
pop
je
cmc
outsb
sub
arpl
stos
mov
aas
xchg
in
arpl
cmpsb
or
lret
push
xchg
push
or
dec
inc
scas
xchg
lcall
js
lret
jo
pop
mov
pusha
insb
dec
jp
cltd
xchg
in
push
std
sbb
stos
jns
sub
out
mov
es
enter
jl
les
push
xchg
movsb
cmc
addb
xlat
sub
mull
call
mov
lahf
xchg
fs
xchg
insb
inc
mov
test
add
push
pop
mov
orl
push
jbe
jno
in
scas
fwait
popf
fsubrl
sub
dec
movb
add
dec
sahf
jle
xchg
movsl
add
cmpb
mov
ret
jle
xor
sar
or
dec
pop
xchg
sbb
push
xor
dec
scas
mov
inc
out
jg
or
in
je
sub
mov
and
addr16
mov
jmp
loop
dec
pop
push
add
fwait
aaa
pop
push
jno
pop
ficoms
add
out
adc
loop
sbb
sub
xchg
xlat
add
add
xor
fadds
dec
inc
rorb
jl
xchg
cmp
sub
jnp
inc
pop
dec
std
ss
lret
mov
jl
xchg
gs
ds
inc
xchg
mov
xchg
mov
mov
mov
pop
das
lret
sbb
xor
xchg
in
in
adc
mov
cli
adc
inc
lcall
test
dec
sbb
mov
xchg
inc
pop
adc
dec
or
jo
mulb
sbb
scas
dec
push
push
jle
in
adc
and
lock
mul
dec
xchg
xlat
or
cmp
sub
lea
cli
test
add
movsb
lock
lods
dec
and
mov
or
sub
out
fwait
add
dec
arpl
mov
add
cmpsl
jnp
scas
decl
cmpsl
push
fdivrp
xchg
addl
push
xor
aam
lret
ret
mov
and
enter
psrld
aas
dec
xchg
jp
aad
jl
xchg
sbb
dec
mov
cli
xchg
sub
xchg
and
orl
jg
mov
out
jle
loopne
jb
dec
jno
or
mov
pop
xchg
repz
repnz
pop
leave
pop
or
js
and
mov
mov
repz
push
fnstsw
pop
dec
dec
out
dec
pop
jae
fwait
xor
cmp
jl
mov
cmp
scas
rorl
xchg
repnz
inc
mov
addr16
mov
jnp
jge
lcall
pusha
rolb
or
sub
imul
mov
mov
test
ds
daa
in
les
pop
add
inc
in
or
out
dec
xchg
mov
xchg
scas
push
cwtl
lock
xlat
inc
ja
sbb
gs
mov
pop
cmc
cmc
xchg
lock
xchg
cmpsb
fstpt
push
dec
dec
pop
aad
inc
arpl
add
testl
inc
or
cmpsl
mov
mov
mov
push
xchg
clc
push
pop
pop
cmp
repnz
sbb
dec
movsl
xchg
adc
gs
aam
pop
jae
ss
push
pop
jp
or
xchg
mov
push
scas
cmp
mov
pop
shl
test
aad
dec
inc
xchg
mov
push
dec
scas
pop
es
fmuls
shl
mov
cmpsl
lret
ret
fimull
and
or
sub
and
dec
adc
insl
cmc
or
loope
mov
cmpsl
sbbb
test
insb
iret
aad
divl
inc
pusha
test
dec
cmpsl
call
xchg
jnp
repnz
dec
sub
fisubrl
xchg
mov
mov
adc
jge
jmp
jo
adcl
fists
into
test
repz
jbe
push
nop
mov
pop
and
xor
outsl
or
popf
aam
pop
sbb
repz
fucomi
mov
xor
pop
stos
pop
lea
dec
aam
pop
mov
add
cmp
push
mov
divl
add
dec
push
xchg
sub
addr16
xchg
jle
add
inc
jo
mov
repnz
jno
jbe
xchg
jg
jnp
add
sahf
ds
out
ret
mov
dec
fstl
pop
pop
cmp
cmpsb
push
out
xchg
sbb
sub
popa
clc
pop
stos
dec
sub
mov
jo
push
xchg
cmova
popf
pop
mov
movsb
dec
scas
sbb
pusha
outsl
aaa
pop
call
and
fs
dec
pop
add
mov
xchg
cmp
loop
pop
out
dec
dec
cs
test
cmc
hlt
xor
xchg
ljmp
punpckldq
lret
push
pop
je
jne
mov
shlb
into
iretw
and
bound
loop
hlt
lds
jbe
sti
xchg
ja
out
xchg
mov
jns
iret
ror
lods
mov
fdivs
gs
mov
mov
add
sub
std
mov
pop
les
adc
cli
test
push
movsl
sbb
inc
xchg
sbb
popa
xor
xchg
stos
lret
jle
jle
into
ss
sub
push
sbb
fdivrl
popf
cmp
or
sahf
iret
scas
lock
xchg
stc
cmp
or
dec
fiadds
popa
cltd
scas
fldcw
push
pop
sbb
sahf
xchg
dec
cltd
xchg
ljmp
leave
and
push
lret
dec
push
lock
xchg
xor
daa
movsl
imul
hlt
xchg
mov
cmp
call
push
ja
sbbl
mov
jmp
xor
dec
es
xor
xlat
lds
xchg
lret
cmpsb
pop
shlb
test
jp
sar
dec
outsl
adc
test
xchg
in
ljmp
add
xor
cld
xchg
adc
sbbl
fimull
movsb
clc
fwait
cmp
and
leave
lahf
xor
pop
xchg
rcl
hlt
or
lds
clc
push
lret
xchg
mov
jo
nop
inc
fisttpl
or
pop
mov
jp
pop
xchg
imull
or
fs
insb
jns
clc
xchg
mov
loopne
pop
dec
iret
std
rcr
push
cmpl
xchg
scas
outsl
inc
mov
push
adc
mov
ja
movsb
mov
inc
and
mov
dec
jae
mov
adc
and
pop
into
dec
dec
inc
ret
shll
xchg
dec
sub
fdivrl
pop
cmpsl
movsb
cmp
pushf
sahf
out
xchg
adc
into
cmp
mov
adc
and
xchg
pushf
popf
cmp
lods
sahf
inc
rcrb
aas
jg
test
mov
jle
adc
dec
mov
ljmp
stos
sbb
pushf
stc
jmp
inc
lea
pop
pop
test
adc
cmp
jle
dec
jle
aas
nop
jno
xchg
rorb
movsb
sbb
inc
pop
fdivrs
stc
jmp
mov
iret
inc
out
mov
xlat
xor
addb
mov
dec
popa
je
mov
stc
mov
xchg
add
push
jmp
mov
jnp
inc
mov
mov
pop
mov
bound
push
adc
roll
sahf
adc
cmp
jb
outsl
and
mov
xlat
mov
in
bound
aam
mov
nop
push
lahf
adc
sbb
cltd
push
std
push
jnp
add
bound
xchg
leave
dec
enter
pop
xor
into
cwtl
dec
mull
push
ret
jge
sub
maskmovq
sub
jno
cmp
mov
mov
push
mov
hlt
xor
gs
pushl
std
mov
sahf
push
pop
ja
enter
jg
mov
mov
mull
inc
mov
cmp
xchg
gs
xchg
mov
sbb
cmp
pop
xlat
xchg
push
xchg
and
sub
int
pop
out
sub
jmp
sbb
xchg
cmp
push
pop
pushf
in
leave
mov
lret
mov
mov
sti
aaa
dec
push
cmpsb
jnp
idivl
fisubs
js
fimuls
ja
ret
inc
mov
dec
mov
sub
loopne
xor
sub
adc
icebp
pop
mov
ss
dec
leave
cmp
adc
mov
xchg
xchg
dec
mov
push
movsl
dec
sti
stc
out
enter
add
cmp
mov
xor
jbe
add
arpl
mov
jno
jo
pop
repz
xor
or
mov
fwait
decl
lcall
dec
stos
mov
mov
cmpsb
or
lods
inc
inc
ret
dec
push
loope
dec
jge
loopnew
jnp
test
mov
mov
clc
dec
frndint
inc
ror
mov
js
xchg
push
fmuls
cmp
jae
dec
scas
inc
mov
outsl
int
pop
movsb
sarb
jg
outsl
push
daa
dec
sub
daa
jne
xlat
cmp
xchg
lds
pop
not
add
out
cld
popf
mov
push
add
movsl
cmpsb
jae
shrb
fwait
xchg
fwait
cmp
push
ror
add
mov
fdiv
pop
addr16
cmp
dec
mov
push
iret
inc
add
clc
test
lret
add
or
ja
inc
mov
mov
jecxz
stos
sbbb
inc
push
mov
xchg
test
inc
cmp
inc
pop
jae
loopne
sbbb
ljmp
rcll
in
cmpsb
pop
out
pop
out
lea
xlat
out
jmp
fwait
cmpsl
icebp
orb
mov
outsb
out
mov
jl
paddusw
addr16
enter
fisttps
or
xlat
nop
fmul
push
push
pop
push
dec
int3
jp
scas
mov
sbb
jge
sub
into
paddsw
pusha
xlat
dec
mov
add
mov
rcll
lahf
pop
pop
add
dec
pop
pusha
sahf
sub
gs
push
xor
mov
scas
inc
sbb
cmpsl
xchg
jae
mov
push
xchg
pop
outsb
sub
shrb
xchg
jge
mov
or
dec
mov
mov
xchg
in
fs
sub
fcomps
mov
ljmp
pop
add
push
dec
pop
enter
push
mov
mov
xor
mov
das
jno
adc
and
sahf
dec
inc
or
rcrb
arpl
popa
mov
sti
cld
push
jbe
jge
xchg
fs
pop
pop
xor
mov
mov
incb
cld
xchg
jp
dec
bound
or
push
sbb
pop
adc
and
js
sahf
adc
sti
pop
movsb
xchg
in
cld
inc
pop
jecxz
scas
dec
add
mov
add
pop
sbb
imulb
pop
sbb
lret
adc
das
jl
sarb
mov
push
pop
xlat
pusha
jne
inc
and
mov
jg
testb
movsl
cmp
xor
stc
xchg
inc
pavgb
mov
cmp
lods
outsl
xchg
cmp
pop
rcll
push
mov
mov
dec
cmpsb
xchg
mov
dec
jmp
and
pop
xchg
fbstp
js
and
mov
xchg
cli
fldenv
lret
sbb
sbb
jo
sbb
adc
xchg
and
popa
push
iret
fs
mov
test
sub
fldt
lahf
push
xchg
cmpsb
mov
jne
jb
decl
insb
adcb
into
mov
rcrb
rcl
insl
lds
lock
xchg
imul
loopne
xchg
ds
xor
out
dec
test
mov
mov
push
test
adc
mov
test
jecxz
dec
xchg
and
ret
xor
jl
sbb
mov
pop
outsl
add
sbb
jmp
xchg
sahf
dec
push
jecxz
std
and
jae
dec
sub
lahf
notl
ja
dec
xor
fs
arpl
arpl
je
push
mov
inc
sahf
js
es
xchg
adc
jno
adc
cltd
sarl
cs
dec
scas
test
mov
sub
fwait
push
jne
inc
jns
inc
inc
aad
notl
cltd
bnd
enter
dec
dec
leave
mov
roll
add
ds
ret
or
pop
dec
and
cwtl
popf
lcall
icebp
and
std
and
inc
push
daa
dec
fucomp
lds
mov
mov
xchg
outsl
jp
dec
xor
ss
shlb
out
int
xchg
in
outsb
pop
out
xor
dec
mov
loopne
xlat
jne
xchg
popf
daa
fwait
ljmp
jl
and
mov
mov
cld
pop
es
sbb
fdivrl
lods
scas
enter
mov
sbb
jg
pop
pop
add
xchg
es
mov
xchg
pop
fistpll
xchg
sub
mov
xchg
and
out
lods
pop
inc
aad
out
das
rcrl
fistps
call
insl
xor
dec
dec
rcl
movsb
mov
xchg
mov
dec
in
movl
push
xchg
and
mov
pop
push
mov
xlat
mov
ljmp
dec
push
inc
xor
mov
adc
cltd
xchg
mov
jo
inc
jne
sub
xor
push
pop
xor
cmpsl
sbb
mov
xor
cmp
out
outsl
push
dec
jecxz
xchg
or
pop
push
mov
mov
sbb
mull
mov
movsl
fnsave
mov
ret
jl
pop
adc
scas
addr16
jns
mov
aaa
xchg
inc
dec
push
pop
mov
imul
mov
adc
adcb
mov
xchg
dec
cmpsl
or
and
jae
xchg
fstps
inc
push
push
pushf
or
mov
dec
fsubr
dec
and
cmpsb
pop
mov
call
aaa
jmp
mov
jl
sub
xchg
fnstcw
add
pop
scas
ss
mov
xchg
ficoms
decl
in
stc
popf
cmp
mov
pop
int3
sbb
inc
pop
push
test
das
mov
sub
insb
cmpsl
lret
shll
push
or
sub
in
xchg
out
xchg
popf
sub
and
cmpsl
add
bound
xchg
ja
xchg
cmp
dec
sbb
jge
mov
xchg
cmp
xchg
xor
loopne
into
push
push
push
ficoml
addb
loopne
adc
mov
and
mov
mov
jae
mov
or
pop
cmp
jno
add
jae
cmp
cli
sbb
popa
mov
std
dec
shll
cwtl
jo
or
dec
jae
inc
mov
xchg
inc
push
mov
pop
cmovge
push
nop
ljmp
addr16
les
dec
gs
sub
aad
mov
pop
inc
cmpsl
enter
aas
mov
push
ljmp
add
dec
mov
pop
xor
cmc
insl
es
sub
stos
cwtl
and
mov
movb
jno
insb
and
and
insb
test
add
xchg
enter
test
pushf
movsb
sub
push
or
in
and
pop
xchg
dec
mov
jnp
xor
outsb
push
imul
xchg
fcmovb
es
dec
cs
loopne
add
sub
addb
sbb
xchg
and
insb
aas
xchg
push
jmp
and
push
aad
in
xor
jp
xchg
ret
push
inc
imul
xchg
hlt
imul
roll
scas
lahf
dec
lock
xchg
imul
and
mov
adc
inc
scas
mov
loop
dec
mov
add
call
jae
in
or
test
xor
lret
loop
inc
xchg
pop
mov
subb
mov
rolb
mov
js
push
scas
stos
and
dec
sbb
push
lahf
aad
out
cmp
imul
repnz
out
mov
hlt
nop
das
sub
ja
xor
xchg
inc
jo
push
pushf
lea
int3
insl
cwtl
test
sub
int3
bound
imul
mov
mov
cmp
pop
dec
subl
xchg
aaa
cmova
dec
sbb
std
enter
push
xchg
out
js
pop
inc
pop
pop
addr16
or
mov
xorb
mov
or
xchg
or
mov
pop
adcl
jl
dec
jne
sub
mov
add
jb
in
dec
dec
mov
sub
aam
jmp
xchg
lods
mov
sbbl
es
scas
jp
mov
xor
cmp
jno
lea
loope
les
pop
in
in
mov
sbbb
pop
andl
or
pusha
outsb
mul
adc
xor
add
xchg
jge
adc
and
lret
inc
into
sub
xor
adc
pop
mov
xlat
ret
dec
pop
sbb
xchg
outsl
mov
repnz
aaa
arpl
inc
pop
and
dec
jecxz
and
stc
and
and
mov
movsl
push
imul
outsb
mov
sbb
roll
jb
inc
pop
inc
push
in
test
mov
jge
inc
dec
pop
imul
out
stos
lods
mov
adc
decb
pushf
out
fcom
std
pop
and
or
pop
lret
mov
pop
fcoml
std
in
mull
addr16
scas
sahf
call
xchg
test
lock
sub
mov
jnp
inc
out
pusha
cwtl
test
mov
pop
pop
ret
imul
pop
jp
xor
jp
mov
bound
xchg
dec
mov
into
dec
icebp
hlt
lahf
je
repnz
lock
mov
xchg
out
sub
shll
pop
imul
xchg
xchg
stos
and
aam
xor
push
in
fistpl
xchg
test
roll
mov
xchg
testl
inc
sub
in
shlb
add
sbb
lock
or
popf
pop
dec
sti
adcl
icebp
lahf
push
in
xchg
pop
repz
pop
mov
nop
ljmp
mov
rcrl
or
and
adc
fcoms
lret
push
dec
rclb
mov
sbb
popf
sti
jns
dec
cmp
dec
push
pushf
inc
or
xchg
jno
xchg
enter
mov
pop
pop
mov
sub
mov
mov
or
pop
add
mov
xchg
int3
sbb
je
or
loop
jae
mov
xchg
or
xchg
cmpsl
enter
xor
aam
mov
and
outsb
dec
mov
ret
lcall
in
clc
jmp
sub
add
xchg
xchg
and
jb
push
movlps
push
pushf
and
or
dec
inc
or
push
pop
pop
xchg
adc
mov
out
pmaddwd
dec
and
int
xchg
repnz
mov
imul
sbb
adc
clc
fucomip
movb
push
je
xchg
adc
test
icebp
jnp
push
xchg
xchg
out
add
mov
shlb
cmp
movsl
mov
pop
movsb
ret
ret
outsb
test
adcb
lea
or
les
jecxz
lock
xchg
shr
jge
pop
sahf
dec
cmp
outsl
sbb
cmc
pop
leave
std
addr16
xlat
mov
dec
rcrb
in
xchg
mov
clc
fwait
sahf
sub
out
pop
imull
xchg
cltd
jl
pushf
data16
cltd
es
cmc
js
mov
leave
mov
xchg
lods
add
into
jl
pop
jecxz
mov
cmp
mov
sbb
dec
es
mov
pop
js
cld
mov
adc
add
and
enter
repz
push
push
sub
inc
popf
dec
dec
in
ret
or
xor
into
jg
jo
roll
cmp
lret
pop
push
leave
mov
xchg
push
pop
stos
test
and
mov
scas
std
push
lods
rcrb
cwtl
popa
loope
xor
push
inc
push
xchg
push
add
xchg
mov
outsl
dec
nop
adc
xchg
xchg
dec
jno
daa
ficoml
jns
mov
daa
mov
dec
xchg
ja
and
xchg
imul
mov
dec
sub
fdivp
je
add
int3
dec
and
push
dec
dec
mov
push
sub
enter
pop
cmp
dec
pop
or
mov
push
rclb
add
xchg
mov
clc
rcrl
test
sahf
dec
out
push
mov
int3
movsl
repnz
fcoml
jbe
in
sbb
xchg
daa
and
outsl
dec
cli
lahf
out
subb
push
jmp
adc
and
push
mov
mov
dec
sti
aas
movsb
adc
rcll
jne
je
pop
dec
fisubrl
cmc
inc
lock
adc
nop
pop
pop
mov
mov
dec
fcoms
adc
imul
dec
cmp
out
adc
mov
push
sub
sahf
cltd
lahf
aas
pop
sub
mov
xchg
xchg
pop
inc
dec
test
out
incl
nop
ljmp
mov
inc
jae
rcr
repz
test
xchg
std
test
xchg
out
mov
adc
pusha
mov
sbb
xchg
out
jns
push
jg
cmp
arpl
fs
xchg
sbb
push
test
fdivs
inc
adc
sahf
sub
and
out
insb
aad
jns
in
pop
fidivs
mov
cmc
jo
xchg
push
jb
push
mov
aas
ret
sub
sub
xchg
cmp
in
lock
pop
popf
xchg
mov
xchg
cmp
jnp
xor
iret
clc
gs
repz
sahf
xor
mov
cld
sub
shlb
xor
dec
inc
icebp
fadd
push
xor
stc
jg
xor
std
pusha
xorl
cmp
xchg
leave
jb
scas
jg
cli
dec
ficomps
shlb
xchg
pop
popf
icebp
out
xchg
leave
inc
sub
call
hlt
sahf
cmp
aad
rcrb
call
sbb
pop
mov
adc
jae
rcll
shrl
fisttpll
addr16
cmp
stc
push
mov
scas
push
dec
mov
pop
orb
sbb
aad
sub
shlb
sbbl
pop
mov
xor
xchg
or
pop
pop
inc
stos
jns
scas
dec
mov
mov
xor
testb
xlat
sub
add
xlat
xchg
cld
sub
xchg
or
dec
or
mov
mov
sbb
adc
int
cmc
push
aas
enter
dec
movb
and
push
test
xchg
xchg
xor
iret
pop
into
cltd
stc
int3
aaa
push
je
add
push
das
pop
xchg
add
in
and
xchg
cmp
jl
or
add
xchg
xchg
jno
sarb
aaa
cwtl
test
insl
mov
in
dec
push
dec
sbb
cmpsl
adc
jne
inc
pop
sbb
fistps
inc
xchg
js
mov
xchg
int3
cltd
in
cwtl
ja
pop
dec
add
into
jecxz
or
xor
xor
lock
sahf
lret
scas
arpl
inc
mov
pop
push
add
mov
imull
in
imul
mov
inc
push
js
and
mov
test
aas
in
xchg
cli
arpl
test
enter
push
push
sbb
or
and
dec
rcll
addr16
xchg
jmp
ljmp
cmpsb
cmp
ret
in
lock
xchg
fsub
mov
sbbl
fst
iret
jne
cli
xchg
out
lds
and
pop
nop
repnz
fstl
gs
data16
xchg
mov
clc
jge
jno
pop
js
jecxz
idivb
loope
xor
adcb
lods
pop
aam
stc
mov
xchg
mov
push
inc
ds
mov
mov
addr16
rcll
and
test
jge
sub
sarl
aas
seta
outsb
push
pop
sbb
inc
out
arpl
nop
adc
cltd
mov
sahf
ja
xor
jp
push
cmpl
popa
jbe
or
push
xchg
jb
and
ss
xchg
icebp
les
cmp
les
xor
insb
in
fisubrs
push
mov
jge
inc
jp
pushf
std
cltd
aad
dec
mov
movsb
pop
inc
pop
lods
out
pop
adc
test
fsubl
sbb
decb
testl
adc
sub
mov
xchg
pop
mov
lock
lret
popf
dec
xchg
push
xchg
pop
shr
xchg
ss
clc
test
sbb
or
push
in
leave
sub
packuswb
clc
gs
mov
mov
jb
dec
inc
fiadds
test
scas
scas
lock
ficompl
push
arpl
inc
cmpsl
cltd
add
sbb
aam
mov
imul
mov
dec
cli
push
outsb
or
ljmp
dec
jb
mov
pop
cmp
bound
mov
sti
xchg
mov
mov
and
bound
adc
xchg
fcoml
stos
add
dec
mov
fistpl
and
or
clc
add
jp
jecxz
xchg
stos
scas
or
dec
addr16
std
sbb
pusha
inc
add
jno
mov
div
sub
add
mov
sarl
dec
mov
daa
lods
daa
call
cli
xchg
sbb
pop
pop
dec
push
data16
rcrl
pop
sti
sub
xchg
hlt
push
outsl
pop
mov
fldt
or
cmc
xchg
aaa
testl
fidivs
xchg
push
jbe
inc
addr16
push
xor
fwait
les
aaa
cmp
cmc
mov
inc
rorl
xchg
cmp
xchg
adc
or
push
mov
lods
sub
subb
mov
inc
dec
jge
cld
pusha
fs
add
lcall
aas
cmp
adc
pushf
push
out
dec
push
push
mov
lods
fldcw
jns
int
into
mov
mov
lds
int
xchg
inc
jbe
xor
aam
pop
ret
or
push
stos
ss
js
xchg
lret
inc
jg
sarl
cmp
and
into
ret
add
out
xor
pop
cmp
scas
lock
lea
leave
lea
cwtl
out
xchg
mov
jg
gs
inc
jne
dec
idivl
pop
push
out
mov
sub
xor
jmp
xchg
xlat
loopne
cmp
push
mov
cmp
inc
pop
clc
lea
cli
inc
xchg
pop
aas
push
fstl
dec
cmpps
jmp
sti
xor
inc
mov
jnp
mov
into
dec
mov
into
xchg
dec
test
enter
cmp
leave
pop
add
sar
mov
sbb
push
mov
fidivl
dec
xchg
pop
inc
lds
sbb
inc
std
pop
push
sahf
pop
std
cmpsb
test
test
daa
pop
pusha
mov
mov
andl
pop
sub
push
push
mov
add
jg
pop
clc
dec
sti
mov
std
cwtl
pop
call
scas
xor
fsubrs
cmp
cld
adc
into
sub
xchg
inc
sti
dec
push
dec
push
pop
je
xor
cmp
xchg
cwtl
mov
xor
jno
pop
xchg
insb
jle
mov
inc
jne
mov
lret
xchg
adc
ja
pop
mov
repnz
and
dec
dec
imul
xchg
dec
outsb
pop
sub
mov
xchg
mov
popf
or
push
rolb
fdiv
sar
pop
xchg
mov
neg
xor
insb
fistps
dec
pop
mov
add
sub
push
sbb
imul
jl
jnp
xchg
mov
ss
and
xchg
sub
inc
xchg
ja
or
jbe
pop
cli
dec
add
jbe
in
sbb
xor
and
dec
xor
push
gs
movb
sub
stos
pop
insb
mov
incl
sub
out
jl
jl
add
ljmp
testl
fmul
mov
mov
aaa
mov
mov
ss
cs
ja
xchg
mov
add
pop
or
imul
bound
cmpsl
push
sbb
xor
dec
push
mov
fistl
dec
xchg
and
xchg
sbb
rcl
push
xchg
inc
daa
push
dec
dec
mov
fiadds
test
cmc
fildl
inc
add
dec
or
or
sub
xchg
and
js
mov
loope
mov
add
addr16
pop
mov
aam
dec
xchg
rcrl
xchg
pop
loope
dec
data16
shrl
adc
xor
pop
mov
rclb
mov
pushf
inc
pop
fimuls
dec
xchg
addl
in
jle
cmp
xchg
xchg
out
xor
inc
ret
mov
pop
fimuls
xchg
testl
in
orb
or
mov
inc
pop
inc
repnz
test
or
xchg
xchg
lahf
arpl
add
jmp
add
xchg
shl
dec
pop
out
add
js
out
int3
xchg
jne
mov
hlt
dec
sbb
add
es
cmpb
cwtl
stos
pop
and
frstor
and
pusha
imul
add
jo
subb
xchg
stos
out
mov
mov
mov
pop
xchg
push
sub
call
dec
push
xor
xlat
add
mov
mov
into
push
dec
pop
pop
mov
flds
les
sub
cmpsl
mov
lret
fisubs
xchg
ds
xor
push
mov
inc
xorb
pop
loop
cmp
sub
push
adcl
and
dec
movsl
push
push
push
push
xchg
pop
sahf
rolb
paddd
xor
or
adcl
aam
sahf
xchg
fstps
roll
les
inc
adcl
hlt
xchg
es
fsub
pop
jnp
inc
popf
lea
call
push
inc
push
fcmove
sahf
mov
cmp
icebp
pop
jecxz
dec
and
adc
test
mov
in
mov
pop
sub
fwait
lods
aaa
dec
aad
inc
sbb
jl
mov
dec
xchg
stos
jmp
dec
out
ss
fnstcw
mov
pop
inc
mov
lcall
xor
push
outsl
popf
xchg
add
xchg
out
scas
jmp
xchg
fs
int
pop
add
jg
cmc
lret
mov
lea
push
pop
pop
jg
call
jns
jae
dec
mov
dec
je
push
mov
ljmp
adc
int3
inc
or
dec
je
mov
aaa
pop
pop
mov
mov
repnz
movsb
lret
adc
cmpsb
lahf
cmp
mov
inc
xchg
xchg
pop
cmp
gs
repz
cmp
add
mov
movq
lods
testb
repz
mov
adc
add
push
js
repz
cmc
sub
inc
push
xchg
jae
scas
mov
inc
push
cmp
pop
daa
loop
lret
mov
pop
xchg
and
inc
js
xchg
hlt
jl
pop
inc
les
mov
lods
cld
inc
dec
cmp
add
sbb
push
xchg
cmp
or
out
and
stc
push
and
mov
xchg
xchg
xchg
aaa
fisttps
dec
nop
jp
fimull
rorb
pusha
loop
sub
fiaddl
test
xchg
ret
pop
mov
arpl
ja
adc
test
outsl
pop
push
je
pop
sbb
fwait
add
daa
cmp
add
push
adc
bnd
mov
popf
aaa
xchg
addr16
inc
jl
in
xchg
outsl
xlat
mov
call
and
hlt
dec
xchg
enter
mov
xor
test
shrb
adc
dec
cmp
cmp
jne
cmp
cwtl
lret
mov
lods
test
cmp
xor
in
fbld
cmp
push
lret
jo
rcrb
push
dec
inc
add
inc
add
fiaddl
mov
sbb
mov
jne
cmp
lds
data16
xor
pop
sub
mov
xchg
daa
jno
and
pop
and
sbb
jg
xchg
shll
mov
sbb
imul
xchg
test
fdivs
jae
push
cmpsb
rcll
xchg
inc
out
inc
jle
mov
inc
xor
ror
mull
fistl
inc
dec
lret
inc
lahf
pop
dec
pop
orb
fwait
je
fsubrl
mov
decb
int
loop
je
jnp
xchg
add
fiadds
jae
xorl
add
mov
leave
mov
xchg
xchg
lret
inc
sahf
or
inc
mov
mov
xchg
das
jp
mov
ljmp
adc
out
adc
sub
cmc
insb
inc
and
inc
ds
push
cmp
xchg
mov
data16
sub
xlat
xchg
xchg
push
mov
push
orb
xchg
pop
sahf
push
shll
mov
imul
sarl
roll
hlt
add
mov
sbb
fldcw
ja
decl
mov
test
lcall
mov
sub
out
je
mov
add
pop
xchg
mov
cmc
xor
sbb
push
sbb
rolb
xchg
fs
out
dec
cld
aaa
adc
test
xor
sahf
jae
inc
add
dec
pusha
dec
and
gs
call
and
fistps
add
in
jnp
push
inc
mov
pop
sbb
lods
cmp
cld
fidivrl
js
dec
shrb
or
inc
incl
cmp
scas
pop
mov
xorb
xchg
cmp
das
ret
aaa
dec
fimuls
and
aas
push
mov
lahf
mov
inc
mov
dec
xor
xchg
push
dec
out
movsb
mov
mov
xchg
push
mov
dec
inc
pop
or
mov
mov
inc
jb
rcrb
mov
loop
mov
arpl
push
pop
inc
adc
dec
mov
negl
addb
cmc
push
adc
xchg
pop
dec
mov
imul
jne
xchg
fwait
pop
insl
push
fstpl
jge
les
dec
clc
outsl
insl
fucomip
dec
std
or
jb
es
cmp
dec
das
cmpsb
pusha
sbb
out
mov
imull
shll
pop
add
pushf
stc
lcall
pop
adc
imul
jge
jae
xor
push
xchg
push
push
repnz
shrl
addr16
push
pop
jge
lods
push
lea
xlat
jl
les
pop
dec
xor
sbbl
mov
scas
ja
or
dec
mov
inc
in
xchg
jbe
mov
pop
pop
pop
cli
lods
adc
daa
and
cltd
mov
rolb
adc
mov
fisubs
inc
js
ljmp
movsb
xchg
mov
or
sub
inc
add
andb
jge
jmp
push
std
xchg
jle
xchg
jnp
lea
cmp
ds
push
int
pop
dec
mov
jecxz
imul
push
pop
data16
test
stos
fstl
dec
sbb
dec
dec
ss
sbb
inc
fs
int
sub
fidivrs
xchg
stos
jbe
push
jnp
xchg
out
xchg
xor
pop
pop
mov
fstpl
sahf
mov
mov
enter
inc
bound
sub
xor
sahf
fstl
dec
lret
adc
out
out
adc
aas
inc
xchg
jg
xchg
loop
addr16
jns
add
lock
xchg
and
jns
pop
or
orl
sahf
mov
push
dec
xor
shlb
xlat
nop
mov
mov
lret
dec
jl
jmp
sti
pop
cltd
xor
push
push
jg
sub
pushf
inc
mov
lea
shl
cmp
cmp
int3
pop
jbe
loop
add
sbb
lea
xlat
fs
dec
jb
adc
mov
dec
xor
cli
dec
ds
lods
sar
mov
xchg
dec
fmull
in
xchg
bound
neg
clc
xchg
and
scas
fdivp
push
and
pop
xor
ja
in
cmp
inc
jbe
call
or
inc
fnstsw
ret
add
jle
or
mov
xor
loop
sahf
mov
xchg
add
lock
add
idivb
mov
cs
dec
sbb
std
orl
lods
or
je
jne
xchg
pop
pop
mov
dec
shl
leave
jnp
xchg
aas
xor
lds
inc
xchg
mov
inc
seta
fwait
aaa
pop
mov
outsl
ljmp
sbb
fs
es
movsb
push
xchg
adc
rorb
jnp
pop
inc
sub
cwtl
ja
xchg
mov
jmp
call
aam
sbb
pop
addr16
sbbl
bound
xchg
xor
sbb
dec
ret
pop
jnp
int
mov
cmp
push
xor
into
sub
push
jmp
loope
xchg
jnp
lcall
sbb
xor
cmpsl
push
xchg
xchg
cwtl
daa
jae
fsubl
mov
sahf
xlat
or
daa
sub
lock
in
ljmp
out
fadds
push
stc
cmp
pop
jge
mov
and
mov
add
loopne
xchg
je,pt
xchg
cmpsb
ja
sbb
or
xchg
fidivs
loope
xchg
mov
jnp
xor
xor
shll
out
subl
out
jle
clc
or
dec
jno
test
jno
mov
sahf
out
push
xchg
mov
mov
scas
hlt
jge
add
push
jb
jle
cmp
in
test
rcl
jbe
pop
into
lcall
test
lds
enter
fiaddl
mov
adc
outsl
mov
pop
outsl
or
inc
xchg
push
ja
dec
filds
adc
lret
stc
dec
pop
cmp
xchg
mov
pop
stos
lods
pop
cmc
dec
loope
call
imul
dec
dec
dec
sbb
stc
xchg
into
jge
pop
push
add
xchg
cmp
and
mov
sbb
jb
xchg
addr16
stos
mov
mov
testl
fmull
mov
out
insb
dec
cmp
xchg
sub
adc
jnp
mov
pop
testb
enter
dec
iret
add
mov
mov
test
out
jo
mov
mov
sbb
ljmp
adc
sbb
dec
aas
je
pop
ljmp
subb
sub
js
lods
lds
mov
lods
xchg
or
jno
cmp
cwtl
hlt
imul
std
xchg
xlat
xchg
add
dec
xlat
sub
mov
into
cld
cld
xchg
sub
repz
adc
sbbb
dec
mov
push
cmc
xchg
fmuls
add
dec
test
aad
lock
mov
push
add
cmp
es
push
daa
xchg
out
aas
pusha
cmpsb
or
push
dec
roll
or
push
xchg
sbb
or
and
inc
or
inc
pop
insl
jmp
mov
xchg
out
sub
cmp
stos
mov
fmull
xchg
jno
jo
and
loopne
or
cmpsl
sub
add
rolb
sub
mov
lcall
push
mov
jno
mov
orl
out
nop
iret
jecxz
fidivs
pop
pop
sahf
fs
mov
out
popa
xchg
push
cmp
pop
enter
jnp
add
in
idiv
jne
nop
aad
jmp
out
xchg
outsb
inc
in
pop
mov
jbe
add
push
test
mov
das
arpl
aad
inc
lcall
ds
rcll
or
pop
jae
mov
dec
and
dec
inc
pop
test
sbb
xor
push
ret
and
pop
and
xchg
sbb
add
inc
scas
ret
push
gs
mov
mov
hlt
inc
xchg
add
mov
pop
jg
repnz
pop
xor
jmp
daa
and
dec
push
arpl
sub
jo
mov
xchg
and
les
inc
int3
ss
pop
pop
out
cmpsb
fcomps
nop
out
mov
pop
out
out
push
call
mov
enter
adc
mov
jno
stc
aaa
movsl
pop
std
test
aad
xchg
movsb
cwtl
push
jg
sbb
jnp
aas
mov
xchg
add
clc
movsb
cmpsb
sbb
xchg
dec
fmull
jmp
mov
icebp
cmp
mov
pop
pop
fdivrl
sbb
inc
fisttpl
or
cmp
ret
adc
dec
hlt
fwait
mov
mov
push
xchg
dec
mov
faddl
and
push
push
js
dec
out
push
fwait
adc
and
pop
cmpsl
mov
fcoms
cmpsl
or
xchg
popf
je
or
fisttpll
ret
shlb
cmp
xchg
cs
mov
xchg
adcl
pop
jl
jbe
mov
push
push
mov
sub
mov
push
pop
test
bnd
jecxz
xchg
sub
hlt
cmp
mov
add
xchg
fwait
jl
push
xchg
and
rclb
cwtl
out
mov
sahf
mov
int
je
xchg
rolb
aam
pop
sub
jo
cmpsb
clc
xchg
in
xchg
sahf
push
mov
scas
test
mov
push
jl
js
in
lcall
push
mov
in
mov
addr16
push
sarb
mov
jne
sub
pop
pop
lret
cltd
int3
push
and
lock
mov
inc
mov
pop
decl
in
xchg
cmp
mov
dec
je
imul
cmp
fnsave
adc
and
xchg
xor
inc
sub
pop
lods
fdivrs
mov
fnstsw
sbb
inc
imul
push
pop
inc
or
add
inc
push
insb
xchg
andl
jp
dec
imul
mov
cmp
jo
into
mov
pop
test
xchg
push
insl
ljmp
repnz
or
pop
insl
lcall
jge
xchg
call
addr16
into
pop
icebp
sbb
out
clc
pushf
sti
stos
xchg
xchg
jb
push
xchg
dec
mov
mov
dec
pop
pop
inc
sbb
mov
mov
mov
dec
cld
test
add
cmp
popf
bound
aaa
xchg
pusha
inc
pop
push
ret
cmpsl
dec
fiadds
dec
sbb
rcl
lods
adc
pop
add
ficomps
or
sbb
xchg
mov
jae
cmp
pop
xchg
push
clc
cltd
mov
mov
adc
sbbl
mov
mov
mov
mov
xlat
mov
js
cmp
sahf
adc
aaa
xchg
xchg
dec
int
cmpsl
add
inc
pop
inc
pop
adcl
clc
hlt
icebp
pop
add
sub
jo
xchg
cmp
in
or
popf
dec
enter
addl
xchg
jne
mov
xor
push
xorl
mov
int3
test
fcoms
adc
mov
or
test
movsb
sbb
add
sub
xor
repz
fst
mov
xor
sbb
cmpsb
xor
pop
adc
pop
imul
lods
xchg
pop
jg
xlat
jns
sbb
jne
jno
mov
jg
test
fidivl
loopne
mov
out
jmp
fs
add
enter
aad
outsb
orl
loopne
imul
cmp
js
jg
sub
push
cmp
xchg
jne
cmc
mov
fsubl
movsb
xchg
jecxz
lcall
dec
ret
xchg
insb
mov
cmpsb
lea
xchg
incb
insl
push
cmp
cmp
je
push
jns
sbb
mov
sbb
push
lahf
sbb
push
dec
dec
push
enter
stos
mov
call
fildll
xor
xchg
push
push
rol
mov
mov
in
pop
std
mov
es
stc
neg
mov
out
je
jge
sbb
push
pop
sub
mov
mov
rorl
add
cmp
jle
ljmp
std
lret
das
bound
repnz
jo
jmp
cmpsb
mov
sti
pop
out
xor
xchg
nop
repz
fiaddl
sahf
cmpl
sbb
fnstsw
rclb
pop
int3
in
andb
dec
mov
pop
outsl
dec
sbb
imul
shl
sub
fs
insl
pop
push
test
cmp
ret
insb
mov
shll
pop
in
mov
or
in
pushf
mov
dec
arpl
inc
sti
wbinvd
xchg
jmp
call
pop
in
mov
gs
and
dec
push
std
notl
das
mov
filds
inc
mov
mov
mov
mov
scas
adc
mov
bound
push
dec
not
mov
mov
aam
out
sub
adc
inc
cltd
or
pop
sub
push
outsb
xchg
inc
pop
mov
jecxz
fldl
sbbb
fstps
mov
shlb
dec
rcrb
sahf
push
xchg
mov
dec
pop
lea
xor
or
sbbl
pusha
push
hlt
and
mov
xor
add
mov
pop
dec
sbb
add
xchg
pop
xchg
adc
aas
sub
pop
fwait
inc
push
stos
inc
aam
mov
sbb
lds
aas
xchg
arpl
sbb
jns
imul
imul
inc
lods
add
dec
ja
popf
fidivrl
cwtl
hlt
enter
ja
jb
dec
push
mov
arpl
lcall
filds
test
lods
mov
scas
push
sub
jns
ljmp
aam
sub
cwtl
xchg
lahf
stos
mov
jae
stos
xchg
sbb
mov
lcall
in
and
ret
fisttps
jle
fs
pop
jecxz
clc
fsubrl
jnp
scas
xchg
cmp
inc
fisttpll
jge
decb
adc
mov
shlb
pop
pop
lds
or
neg
cmpsb
inc
adc
and
sar
enter
push
jmp
loop
imul
mov
icebp
ja
ret
xchg
push
mov
mov
xor
push
daa
jg
push
mov
mov
sub
pop
xor
insl
test
sbb
call
movsl
dec
ss
pop
pop
pop
negb
add
pushf
int
xchg
sub
pop
pop
and
jmp
repnz
out
xchg
daa
cmpsl
decl
cld
insb
test
or
sub
xor
fnstsw
mov
add
jno
xchg
imul
int
inc
je
jmp
xchg
jnp
mov
mov
enter
adc
cmp
inc
sub
xor
xchg
push
fistpl
jae
sub
mov
add
call
fdiv
xchg
or
sti
pop
je
cltd
xchg
pop
in
je
xor
inc
jp
jl
stos
adc
pop
ss
push
xchg
in
stos
sub
shrb
inc
aam
push
aaa
pop
or
push
mov
ljmp
mov
and
cwtl
je
mov
push
or
dec
mov
mov
data16
pop
imul
loop
mov
nop
xchg
je
stos
mov
dec
pop
jmp
clc
testb
xchg
mov
rcrl
jmp
clc
pop
scas
xchg
lahf
test
test
sub
adc
sbb
stos
cmpsb
insl
addr16
repnz
or
sbb
xchg
or
jle
inc
mov
or
addr16
xor
ret
pop
andl
jns
pop
mov
dec
sub
test
xchg
scas
dec
mov
shlb
pop
pop
lahf
loop
push
cmpsl
ja
inc
jne
add
int
pop
pusha
test
jmp
xlat
xor
add
xchg
mov
pop
push
xorb
xchg
sub
sbb
ljmp
popa
xchg
cmp
pop
xchg
mov
cmp
sub
movsl
fxch
jb
jle
xorb
in
repz
rclb
loope
mov
scas
dec
imul
adc
test
inc
xchg
rcrl
push
and
push
fwait
xchg
and
cltd
xor
in
dec
enter
vrcpss
repz
push
mov
shll
dec
inc
fnstenv
pushf
jecxz
xchg
or
dec
dec
xor
scas
xchg
jl
xchg
xchg
push
push
or
pop
cmp
dec
je
in
xchg
dec
movsl
inc
mov
push
addl
xchg
arpl
dec
push
xchg
daa
ret
cmc
xor
clc
or
int
repnz
adc
mov
addr16
adc
adc
imul
lcall
xor
repnz
mov
pop
pop
jo
sbbb
outsl
aam
xchg
cmc
clc
jmp
call
stc
js
mov
xor
cmp
adc
sbb
xor
and
mov
sbb
pop
ljmp
loope
and
mov
pop
aas
nop
dec
push
sbb
pop
dec
dec
xchg
int
pop
mov
lods
xorl
lock
mov
fistps
cld
dec
xchg
dec
dec
and
jg
rclb
mov
sub
rcl
test
aam
mov
sbb
lret
pop
fdivrl
orb
sub
bound
or
xchg
test
lcall
lcall
xchg
dec
dec
jb
jo
pop
adc
daa
and
imul
out
adc
pop
arpl
loop
mov
fdivl
popf
out
adc
push
imul
dec
inc
imul
mov
nop
dec
daa
pop
adc
sbb
pcmpgtd
xchg
lret
jmp
lret
stc
dec
into
into
xchg
or
mov
sbb
xchg
or
dec
mov
mov
or
subl
les
fiadds
jb
ret
xchg
cld
clc
pushl
xor
mov
adc
sub
sbb
jae
leave
ja
xchg
fcomi
pop
popa
mov
into
jb
in
push
lcall
jae
adc
push
clc
fs
xchg
imul
outsl
js
icebp
jno
aaa
jns
cmp
test
and
inc
int3
hlt
hlt
aam
pop
aas
xchg
mov
cmpsl
adc
or
lock
fcoms
inc
sub
testb
std
jb
pop
xorl
add
addb
add
xorl
jmp
cmovg
xor
mov
adc
aad
cld
dec
mov
jecxz
jb
pop
hlt
xchg
cmp
or
mov
push
loopne
in
js
int
int
push
jge
xchg
out
add
ss
mov
leave
psraw
xchg
aad
mov
mov
adc
xlat
xchg
cmpsb
mov
subl
das
add
push
or
sub
add
inc
testb
xor
arpl
xchg
jns
pop
sbb
mov
jl
xchg
inc
mull
xchg
xor
mov
dec
cli
push
inc
sub
push
xchg
cwtl
fldenv
mov
jns
inc
fmuls
push
insb
clc
xor
jne
xchg
nop
push
int
push
fs
sbb
lds
jb
addr16
test
and
aaa
nop
xchg
roll
mov
cmpsl
xchg
pop
xor
pop
jbe
xchg
lahf
pop
pop
ficoms
movsl
mov
cmp
stos
cmp
sahf
inc
bound
push
push
in
mov
hlt
and
xchg
xchg
fucomi
imul
pop
fisttpl
es
or
scas
xor
or
je
mov
dec
out
js
mov
cwtl
xchg
je
sbb
mov
repnz
test
adc
push
test
neg
pop
subb
dec
scas
cmp
rcrb
sub
test
add
xchg
je
notb
add
adc
lcall
xchg
mov
insl
cmp
add
inc
xor
xchg
pop
cmp
ret
dec
imul
sub
xchg
fsubp
idivb
pop
pop
adc
sbb
jg
xchg
dec
leave
or
dec
stos
mov
frstor
pop
xor
mov
mov
xchg
test
sub
ljmp
test
or
ja
jg
in
or
aad
imul
pushf
jge
dec
adc
xor
sub
and
push
call
jg
sbb
leave
mov
dec
sub
xchg
push
aaa
in
push
dec
mov
push
fildl
mov
add
push
hlt
dec
cmp
fadds
xchg
dec
add
inc
or
mov
stos
or
dec
je
imulb
sub
jo
cmpsl
cmc
lahf
dec
adc
cmp
xchg
xchg
sbb
cmp
push
inc
cmpl
xchg
rcrb
mov
dec
xchg
dec
enter
imul
or
pushf
push
inc
data16
mov
and
pop
cwtl
sub
mov
ss
sbb
dec
out
mov
cmp
cmp
addr16
lcall
icebp
mov
stos
in
loope
adc
xor
xlat
sub
enter
push
inc
movsb
inc
loop
mov
adc
xchg
dec
movb
test
test
sti
ret
aas
fsts
push
loopne
cmpsl
cmp
dec
dec
xchg
ret
xchg
outsl
mov
test
aaa
adc
pop
sbbb
outsb
repnz
inc
push
ja
or
das
inc
mov
lods
cmpsb
daa
fcomi
cs
testl
pusha
or
lahf
mov
lock
insl
jno
iret
dec
adc
xchg
mov
and
mov
leave
mov
pusha
xchg
mov
mov
xchg
xchg
scas
arpl
fcomip
jg
dec
fdivl
sbb
pop
mov
les
js
mov
aad
pop
lcall
jno
mull
xchg
fcoml
mov
lods
data16
incb
aas
push
dec
iret
pop
xor
adc
popf
xor
inc
insl
popl
lcall
mov
push
xchg
jmp
shrb
dec
iret
or
cmp
jmp
lahf
fstps
push
aad
cmp
movsl
pop
xchg
mov
loopne
or
push
icebp
cmp
ljmp
mov
or
fs
rorl
leave
scas
test
dec
or
and
jmp
xchg
sub
cmp
in
iret
dec
ds
fwait
xchg
fwait
daa
xchg
out
xchg
jg
loope
cmc
mov
sbb
or
pop
xchg
sub
jno
jl
xchg
and
je
jmp
aaa
push
les
jno
bound
decb
enter
jnp
push
jo
stos
mov
fsub
adc
pop
test
insb
push
adc
xchg
pop
imul
out
pop
mov
mov
and
lods
mov
mov
std
fstps
stc
push
sub
add
add
sub
lods
ret
lods
and
xchg
fwait
sbb
inc
mov
aas
mov
sbb
out
xchg
pop
cwtl
std
cmp
mov
and
subl
lret
jl
dec
push
and
pop
mov
push
jmp
sub
mov
out
sbb
mov
pop
dec
push
sub
sub
mov
lcall
pop
dec
mov
icebp
sar
dec
aas
and
insl
inc
jecxz
push
aad
imul
sbb
or
jge
fstpl
enter
pop
mov
push
cmp
sti
dec
or
mull
jg
dec
mov
fcompl
xchg
cmc
mov
in
mov
mov
in
cld
imul
daa
pushf
testl
inc
loopne
mov
and
push
push
mov
test
mov
add
cmp
xlat
repnz
adc
pop
jp
pop
sub
test
xchg
or
lcall
push
je
sbb
pop
jb
inc
mov
pushw
cwtl
fadds
imul
xchg
xchg
dec
mov
lret
sbb
dec
lcall
jg
dec
add
pusha
mov
and
jbe
pop
adc
lahf
and
pushf
cmpl
cwtl
fwait
bound
inc
loopne
jecxz
push
rorb
stos
xchg
push
sub
xchg
and
pop
push
xor
xor
and
pop
jp
fdivrp
cmp
andb
scas
mov
lock
push
jne
dec
cltd
inc
dec
sbb
pop
test
pop
xchg
lret
js
lea
faddl
xchg
es
pop
sub
je
shrb
pop
cwtl
call
dec
in
sarl
popa
imul
rolb
add
xchg
jo
cmp
cmp
dec
dec
or
fistl
sub
nop
cmp
push
dec
imul
push
push
inc
inc
push
aas
mov
dec
jg
bound
cmpsb
aad
cmpsb
lcall
sbb
pop
add
pop
shrl
cmpsl
les
adc
xchg
push
dec
dec
imul
pmullw
adc
pop
push
lods
js
jnp,pn
xchg
inc
hlt
in
bound
cmc
std
pusha
dec
cld
pop
mov
popf
cmp
mov
aaa
js
fcmovne
cld
lods
fmuls
or
jmp
loop
test
jl
dec
lss
iret
inc
jns
xchg
pop
jb
fimuls
and
pusha
dec
xchg
mov
out
xchg
pop
leave
push
jno
jns
pop
arpl
inc
push
pop
mov
add
dec
xor
sub
ret
xchg
adc
sbb
jecxz
mov
xorl
pop
jne
pop
pop
inc
iret
rcl
popa
iret
clc
xchg
in
xchg
loopne
pop
cmp
test
fisubrl
notb
jne
scas
ds
scas
push
ja
in
pop
les
mov
lret
cmp
pop
js
dec
xor
fwait
mov
cmp
and
add
mov
hlt
popl
xchg
ja
mov
xchg
movsl
mov
pusha
gs
xchg
mov
lods
pop
data16
call
xchg
xor
sbb
or
jg
ret
dec
inc
out
loope
and
xchg
xor
in
mov
xchg
push
scas
mov
shl
add
sbb
loope
push
test
pop
les
inc
push
add
rorl
rorb
aam
movsl
sub
cmpsl
imul
mov
adc
or
and
cmp
pop
mov
imulb
out
cmc
xor
dec
scas
add
rol
test
pop
ds
pop
out
sub
mov
dec
jp
pop
mov
sub
fstpl
jnp
fcom
jnp
out
leave
sbb
pop
rol
out
test
out
pop
dec
mov
xchg
xchg
loope
stos
add
push
pop
xor
jecxz
push
xchg
ss
icebp
xchg
dec
enter
repnz
mov
inc
cmp
out
sbb
outsl
jo
iret
aaa
xchg
pop
pop
xor
enter
pop
push
lock
test
ret
test
mov
pop
ljmp
jp
fwait
mov
fidivrs
ficomps
inc
mov
fisubrs
sti
clc
mov
lcall
push
aaa
push
add
pop
mov
mov
lret
and
arpl
gs
arpl
sub
sbb
pop
mov
mov
pushf
add
sbb
mov
pop
jnp
rcrl
or
xchg
iret
xchg
mov
cmpsl
les
stc
and
sub
orl
dec
add
jno
test
inc
push
and
shl
pop
add
popa
jbe
call
fs
fisubrs
pop
cmovs
mov
out
sbb
fldl
imul
jecxz
add
jbe
leave
push
pop
cmpsl
mov
test
lods
xchg
cmp
or
dec
dec
inc
and
xchg
cld
adc
and
movd
sub
shll
stc
or
add
mov
jb
jecxz
in
mov
js
push
jmp
xor
xchg
fidivrl
aam
fdivrp
mov
xchg
xchg
push
lret
mull
nop
inc
out
sahf
bound
pop
add
xor
mov
xchg
cld
sub
adc
and
xchg
into
in
adc
pop
cmpsb
pop
call
jno
pop
lret
rcrb
imull
cmp
js
pusha
cmpsl
jp
and
mov
pop
xchg
xchg
lcall
cli
cmpsb
add
dec
scas
movb
xchg
mov
je
pop
lods
dec
test
and
lcall
psrlw
fdiv
fdivrs
pop
cwtl
lahf
inc
fildl
mov
sub
lahf
xchg
cmp
pusha
addl
sbb
dec
and
jo
cs
adc
cmpsl
pop
imul
mov
icebp
and
inc
mull
cmp
sbb
insl
fmuls
xchg
cltd
add
cmp
adc
pusha
xchg
mov
mov
ret
repnz
sub
scas
xchg
pushw
cwtl
in
mov
pop
pop
outsb
jl
iret
js
cs
call
mov
jb
pop
mov
fcomi
dec
int
xchg
movsb
popa
aaa
cmp
int3
loopne
dec
aas
popa
jns
pushl
push
lea
xor
mov
and
outsb
add
lods
test
and
fidivs
js
rclb
sub
push
and
push
int
mov
mov
or
js
xchg
ljmp
xlat
push
or
popf
and
cld
xorb
inc
jg
add
icebp
adc
inc
pop
enter
cmp
test
out
xchg
xchg
pop
das
loope
shrl
sbb
mov
mov
xor
clc
adc
dec
shl
mov
xchg
rol
loope
cmp
cmp
scas
xchg
outsb
push
in
mov
sub
inc
mov
cmp
and
fistl
aaa
push
bound
dec
int
cmpsl
mov
inc
xchg
sbb
movsl
stos
inc
inc
sbbl
jo
mov
es
cmpsl
fldenv
enter
out
aaa
in
int3
push
pop
xchg
test
adc
xor
pop
shlb
dec
cli
xchg
in
outsb
mov
xlat
pop
cmc
scas
stc
mov
repnz
ret
push
arpl
fbld
enter
aaa
cmp
gs
hlt
aad
dec
ljmp
pusha
push
loop
add
movsl
add
xchg
adc
ss
pop
cmp
mov
jnp
mov
cmc
jns
adc
filds
push
cmpsl
fildll
rcrb
xchg
mov
push
jge
push
pop
dec
xchg
sub
mov
xchg
les
pop
sbb
cmp
push
add
addr16
mov
jno
or
pusha
cmpsl
pop
add
mov
aam
dec
addl
popf
dec
push
adc
cld
add
imul
dec
mov
dec
dec
xchg
sub
faddl
xchg
sbb
pop
stos
rclb
arpl
ljmp
mov
cld
sub
mov
pop
mov
sub
push
and
aas
cmpb
clc
dec
fisubrs
dec
push
jo
lods
lret
pop
les
sbb
mov
sbb
sub
les
xchg
xchg
dec
rcrb
inc
jl
mov
in
xor
pop
test
cmpsb
ret
pushf
mov
bound
insb
pop
outsb
aam
dec
dec
inc
and
mov
xchg
je
lods
cmpsl
sbb
gs
mov
popf
pusha
inc
daa
rclb
pushf
cmpsb
addr16
lds
sbb
arpl
ja
int3
xchg
pop
into
jb
and
sub
mov
dec
dec
bound
jo
movl
cmpsb
cltd
xchg
jmp
clc
add
sbb
inc
inc
int3
push
inc
mov
or
mov
stos
xchg
pop
cmpsb
cld
das
mov
xchg
xchg
fiadds
sbb
mov
mov
jns
fiadds
and
xor
cwtl
nop
clc
xchg
or
enter
fnstenv
jle
pop
mov
imul
or
leave
adc
mov
jp
jb
cmpsl
dec
or
dec
dec
mov
dec
in
and
xchg
cltd
lahf
popa
mov
shl
and
xchg
lret
xor
dec
aas
aas
xchg
fsubr
push
jp
xchg
shll
pop
dec
sbb
in
imull
mov
roll
fs
dec
rclb
mov
decb
pop
mov
mov
pop
nop
adc
imulb
mov
fwait
mov
pushf
xchg
dec
dec
cmp
lret
push
pop
xchg
add
mov
popf
andl
out
mov
aas
es
fldenv
outsb
in
or
fnstcw
pop
sbb
fadds
test
sbb
loop
movsl
cli
push
dec
stc
mov
loop
ja
icebp
cwtl
xchg
jbe
push
push
add
push
ljmp
push
xor
cmpsl
jo
aaa
sub
mov
jo
adc
or
dec
xchg
fnstcw
mov
mov
jp
pop
lcall
adcb
dec
and
mov
pop
clc
js
clc
js
dec
dec
es
aaa
mov
mov
mov
mov
inc
xchg
and
sub
jae
dec
sbb
xor
pop
out
aas
sbb
push
pop
or
scas
mov
js
sub
sbb
mov
stc
dec
fcom
dec
movsb
mov
or
cmp
out
out
mov
repz
ficoms
or
sbb
leave
out
jae
ljmp
lret
repnz
jnp
dec
jns
outsl
pop
push
xor
arpl
adc
testl
outsb
xor
xor
cmc
dec
test
daa
in
xor
xchg
cmp
sbb
out
dec
or
xchg
sub
mov
adc
jae
cltd
inc
shlb
xchg
mov
sbb
scas
dec
mov
test
mov
mov
push
je
out
xchg
jle
sub
xor
xchg
rorb
cmp
add
ja
or
sti
jmp
pop
lods
daa
dec
add
xchg
sub
and
xor
adc
sahf
mov
dec
push
cmp
aas
dec
scas
mov
push
sub
sub
fisttpll
cmp
push
xchg
pop
mov
test
or
xchg
imul
add
dec
sahf
cmc
push
inc
js
iret
xchg
mov
mov
and
mov
jns
adc
sub
pop
push
xchg
xchg
loope
mov
outsb
push
aam
xlat
loope
test
xchg
sbb
ja
cwtl
push
jge
mov
sub
xchg
mov
xor
xchg
daa
pop
mov
lods
pusha
xchg
mov
gs
in
arpl
dec
xchg
cmp
mov
cmp
fmulp
jl
popa
xchg
push
inc
repnz
jbe
loope
adc
or
ret
xchg
mov
jbe
mov
addr16
shr
call
jl
sbb
fisttpl
push
test
enter
out
std
outsl
xchg
jne
pushf
cld
xor
adc
inc
adc
push
mov
adc
lds
inc
fistpl
sub
xchg
imul
cwtl
sub
add
mov
lods
xchg
fcoms
lock
dec
lcall
pop
add
scas
adc
out
inc
movsb
dec
int
sub
lds
xchg
shrb
incl
dec
jns
mov
int
ret
sub
mov
mov
fcmovb
xchg
add
and
aaa
xchg
icebp
xchg
js
mov
lcall
mov
mov
inc
setae
fimull
jle
fdivrs
fisttpl
adc
icebp
sub
mov
mov
call
jmp
imul
and
xor
push
dec
loop
xchg
push
sub
add
sti
scas
int3
mov
pop
jle
leave
jae
mov
xchg
adcb
pushl
jbe
loope
enter
insb
xchg
push
cmp
adc
dec
cmpsl
mov
ljmp
test
sbb
mov
push
pop
adc
xor
fcompl
push
int
mov
mov
mov
ljmp
sti
or
in
xchg
pop
lods
inc
and
inc
aas
outsl
pusha
mov
out
adc
xchg
arpl
cli
pop
js
aad
xchg
mov
inc
xchg
jb
insb
out
fisttpll
jge
inc
shl
push
testl
pop
mov
pop
test
pop
iret
mov
aaa
shr
lods
fldl
imull
xchg
out
mov
outsb
fs
es
insl
cld
and
outsb
lods
sbb
scas
xchg
cmp
mov
dec
inc
fists
jg
scas
hlt
ja
cmovl
pop
pop
test
in
fldt
xchg
out
sub
repnz
add
dec
xchg
int
mov
add
test
outsl
cmp
adc
sub
cmpsl
add
loopne
dec
inc
pop
jmp
loopew
in
dec
and
pop
out
outsl
dec
cs
jmp
xchg
xchg
cld
mov
test
push
nop
pop
out
mov
jb
enter
xor
mov
xchg
mov
pop
push
addb
scas
fwait
call
mov
imul
das
dec
mov
test
adc
cmp
cmpsb
arpl
adc
add
adc
loopne
imul
xchg
cmp
pop
sarb
add
fdivs
inc
cmpsl
xchg
int
push
jns
xor
mov
js
imul
iret
enter
fcmovb
enter
xchg
shl
pop
dec
in
orb
dec
sub
xchg
out
fbstp
outsb
and
int
ljmp
cmpl
add
jno
inc
push
test
sub
lahf
cmp
lahf
jge
fiadds
divb
dec
sub
xchg
fcoml
push
repz
ja
dec
test
out
gs
sub
out
das
and
imul
rcr
pop
mov
push
lds
lods
dec
mov
dec
lret
add
inc
repz
imulb
jmp
out
xor
jae
mull
scas
lret
mov
pop
mov
or
inc
mov
ret
sbb
pop
jl
xor
adc
mov
insb
mov
pop
or
ljmp
xchg
xchg
rcll
dec
jno
mov
div
cmp
movsl
xchg
fdivl
imul
mov
dec
mov
shrb
adc
daa
mov
xchg
int
jge
jg
dec
popa
xchg
pop
dec
shl
push
sbb
pushf
repz
fincstp
das
call
mov
xchg
and
sahf
stos
loop
pop
in
mov
and
ficoms
fimuls
divl
mov
add
arpl
outsb
dec
push
into
fcoms
test
insb
mov
adc
push
pop
fwait
sti
add
hlt
pop
adc
mov
popa
sbb
inc
test
cmpl
clc
inc
ffree
pop
cmp
lret
imul
rol
fists
ficoml
mov
cld
and
dec
cmp
ret
fwait
ja
cmp
pop
dec
push
call
test
ja
xchg
mov
les
rol
fistps
add
sbb
ja
jae
scas
inc
push
sub
out
ss
xor
mov
mov
push
adc
mov
xchg
pop
jp
cmp
xchg
mov
pop
mov
xor
and
jmp
xor
jg
sbb
int3
clc
or
xchg
dec
xorb
inc
fildll
sarl
out
mov
enter
test
push
sbb
mov
divl
lcall
aad
mov
fisubrl
icebp
rcrb
adc
jb
mov
mov
mov
ja
hlt
push
mov
xor
add
pop
sbbl
pop
loope
cmc
nop
and
add
mov
sbb
xchg
shlb
test
rcll
and
dec
outsb
leave
mov
pop
fidivs
cmp
mov
xchg
jecxz
loop
hlt
xchg
mov
cmpsb
mov
dec
push
xchg
sarb
cs
dec
and
and
add
xor
xchg
lahf
cmpsb
xor
repnz
mov
mov
sub
test
pop
mov
lock
insb
fidivl
pop
cltd
fcoml
cld
cmpb
add
inc
popl
add
adc
inc
xor
mov
and
hlt
pop
insl
addr16
xor
mov
sbb
mov
sub
lock
inc
mov
pop
fcomp
xor
leave
xchg
or
sbb
add
mov
push
out
stos
jmp
adc
pcmpgtd
fdivrs
dec
cmc
inc
mov
or
dec
dec
mov
jl
call
and
imul
inc
out
inc
dec
lea
jnp
xchg
jno
dec
lret
repnz
and
dec
test
inc
mov
mov
in
mov
in
push
xchg
out
dec
inc
insb
and
bound
das
pop
xchg
pusha
icebp
lret
jecxz
xchg
insl
cmp
sbb
xchg
xchg
not
jmp
std
dec
jg
lret
call
xchg
sbb
xchg
fwait
in
addr16
cwtl
dec
lahf
pop
jge
sbb
mov
and
cmpsl
shll
es
in
pushf
ds
cmp
xchg
outsl
loopne
rclb
mov
call
add
and
test
enter
lods
ret
mov
jne
popa
cwtl
push
cld
mov
lea
dec
mov
cmpb
xorb
inc
repnz
jmp
jecxz
xor
jno
lcall
fisttpl
sub
jl
outsl
ss
or
xchg
incl
dec
clc
cs
dec
sarl
ds
xchg
inc
fs
scas
mov
adc
mov
xchg
scas
std
pop
dec
inc
mov
sub
xor
mov
add
dec
xchg
scas
lcall
cwtl
gs
xchg
cli
ds
pop
out
sub
movsl
loopne
ljmp
fldcw
dec
aad
test
sbb
aam
mov
cld
lret
das
pop
inc
xor
dec
mov
mov
fstpt
pop
out
jno
data16
jb
dec
int
jne
in
aas
jp
xchg
adc
pushf
push
loope
sbb
push
aaa
popa
sub
inc
pop
lods
adc
add
push
mov
pop
jno,pt
cmpsb
ja
testb
lret
push
push
lcall
test
sarb
inc
mov
out
lods
sbb
sti
xchg
iret
jnp
mov
pop
xchg
fldl
fcmovnbe
cltd
popf
push
gs
adc
nop
cld
in
arpl
pop
fdivrp
mov
in
xchg
mov
mov
cmp
les
mov
inc
push
repz
or
ja
imul
sub
xchg
dec
js
jmp
pop
stc
shrb
pop
mov
into
mov
xchg
and
je
sbb
mov
cmp
and
iret
test
push
mov
xor
jb
mov
xchg
jae
sbb
adc
pop
jl
dec
jle
mov
fwait
dec
repz
insb
mov
rcrb
imul
push
mov
xchg
jge
pop
in
mov
mov
and
dec
pop
jns
xchg
in
fprem1
leave
in
jl
addr16
mov
pop
jae
or
adc
ljmp
mov
int3
in
dec
xor
adc
push
mov
aas
stc
cmp
ret
xchg
jge
enter
int3
jno
sub
fisttpl
loope
push
fmull
mov
pop
ds
and
sti
push
mov
shrl
and
divl
test
pop
xor
addr16
jb
daa
cmc
loope
or
addb
out
movsb
into
fisubl
sub
xchg
das
xchg
pop
mov
inc
xchg
sti
cmp
arpl
and
sub
mov
pop
pop
xchg
push
xchg
aaa
lds
sub
push
mov
fidivs
or
push
int
jnp
cwtl
pop
mov
dec
jg
or
fldl
stos
push
push
pop
inc
push
inc
dec
das
loopne
push
mull
ret
xor
std
mov
push
test
mov
dec
outsl
and
in
dec
lea
fsubl
mov
mov
out
imul
lahf
out
push
xchg
ja
mov
inc
mov
push
pop
sahf
mov
cmpsl
mov
pop
pop
dec
shrl
imul
mov
mov
dec
xlat
sahf
insl
in
outsb
push
add
popf
fldl
dec
inc
inc
fbld
mov
add
add
outsb
imul
and
or
int
iret
test
popa
and
jo
lock
insb
ss
and
je
cmpl
mov
repnz
xchg
cld
sub
add
ret
sub
mov
test
mov
inc
adc
in
ret
pop
pop
icebp
dec
fnstsw
cltd
fs
aaa
push
inc
pop
aad
cmp
push
in
icebp
jmp
or
sbb
addr16
inc
pop
add
ret
push
pop
jnp
pop
imul
lds
xor
add
add
jo
pop
jns
ds
push
fwait
ret
pop
dec
push
cmp
inc
add
das
adc
mov
loop
out
rorl
inc
mov
xor
mov
or
push
jbe
test
sbb
hlt
addb
xchg
iret
icebp
cmp
pop
pop
push
mov
mov
sbb
push
iret
xor
ljmp
mov
pop
inc
fsubrs
pop
jl
icebp
insb
mov
pop
lret
pop
ljmp
and
es
xchg
sahf
mov
lret
test
test
mov
in
loope
mov
mov
outsl
xor
insb
xor
ficompl
pop
sub
cwtl
push
mov
pop
lahf
shr
imul
fnsave
mov
das
mov
dec
lods
scas
lret
cwtl
cmp
lcall
out
xchg
sub
pop
popf
jae
push
xchg
cli
lahf
sbb
xchg
scas
jl
cld
push
dec
sub
iret
lret
lods
cmp
inc
in
xchg
ret
mov
sub
hlt
pop
xor
mov
mov
into
cmp
pop
sbbb
jecxz
mov
jle
cmpsb
add
lods
mov
push
lret
xchg
hlt
out
jno
scas
inc
je
dec
mov
pop
mov
ljmp
mov
shlb
lea
mov
dec
aas
push
push
push
decl
dec
sbb
add
sbbb
fildll
jne
mov
mov
sub
enter
and
xchg
pop
mov
mov
jmp
push
aas
fcmovu
xlat
aam
add
mov
subb
jae
cmp
add
neg
loop
dec
dec
push
loope
jns
jb
aas
xchg
rcrb
outsl
adc
push
dec
scas
mov
fwait
in
pusha
loope
xchg
fcoms
bound
lds
jmp
dec
lods
jge
push
mov
add
push
xchg
or
or
inc
cmp
dec
dec
dec
lret
fs
ds
movsl
pop
sahf
sbb
stos
clc
sar
push
popl
test
jmp
fisubs
das
push
jg
ljmp
pop
sbb
mov
add
sub
mov
jmp
filds
cmp
mov
cmpsb
cmp
mov
sbbl
jg
testb
out
xchg
andb
out
and
xchg
and
mov
push
xor
iret
roll
jge
lds
push
xchg
loopne
jp
nop
fcoms
hlt
aam
adc
sti
add
sub
push
jecxz
pop
enter
mov
fdivl
xchg
lahf
jne
outsl
dec
mov
push
movl
les
xchg
xor
cwtl
jecxz
dec
xor
sbb
loop
cmpsb
in
pop
push
xchg
xor
jo
jg
into
xor
xchg
adc
or
mov
inc
call
cmp
jne
xchg
icebp
sti
sbbl
fwait
pop
pop
sub
insb
pop
or
jbe
xchg
lcall
aas
push
push
jle
mov
fidivl
mulb
inc
adc
xlat
and
loop
ret
ja
cmp
leave
inc
sbbb
lock
mov
idivb
pop
xchg
mov
inc
test
mov
pop
fisubs
sbb
orb
pusha
push
dec
dec
sti
cli
mov
xchg
ja
fadds
xchg
push
dec
inc
cmp
sti
xlat
mov
movsl
fidivrs
xchg
inc
push
jmp
stos
dec
sub
jo
add
push
rcrb
fldenv
xchg
dec
jle
shl
mov
xchg
nop
xor
sar
addr16
cli
out
push
cltd
xchg
mov
jle
lahf
lret
incl
add
mov
popf
add
imul
fmuls
pop
push
out
adc
push
test
repnz
mov
mov
inc
dec
gs
mov
inc
sub
add
fcomps
adc
add
xchg
or
icebp
mov
cmpsl
jle
jmp
ret
pop
mov
fistl
sbbl
mov
out
nop
sub
sub
pop
ffreep
and
cli
pop
inc
sbb
xchg
mov
ret
lock
mov
pop
add
ret
jg
repz
or
dec
nop
cs
sahf
xchg
pop
mov
push
adc
int3
sub
push
mov
push
sub
int3
movsb
inc
stos
or
imul
popf
and
sbb
mov
sbb
pop
daa
push
dec
clc
lods
sbb
test
xchg
or
jl
aaa
call
mov
jecxz
xchg
xchg
iret
dec
push
cmp
adc
adc
shrb
dec
rcr
stos
les
mov
xor
sbbb
mov
leave
xchg
cmp
xchg
in
daa
push
outsb
add
dec
aaa
cld
and
adc
movsl
in
imul
sub
pop
aaa
adc
sub
fstl
xor
jno
or
fdivrl
bound
push
ds
stos
xchg
popa
roll
imul
lock
je
fstps
sub
testb
mov
fcompl
aad
mov
dec
dec
ds
cmp
xchg
sbbb
js
pop
or
das
xchg
add
jl
cwtl
adcl
mov
pop
dec
push
cmp
pop
pop
xchg
add
arpl
fadds
xor
negb
pop
sub
xchg
sub
or
jp
dec
test
shl
sub
in
leave
and
dec
xchg
jae
dec
push
xchg
test
or
icebp
mov
xchg
mov
mov
mov
ret
adc
and
jb
mov
xor
xlat
dec
cmp
push
cltd
leave
pushf
dec
push
xchg
js
pop
sti
or
ret
adc
push
jle
popa
xchg
sub
js
cmp
ljmp
subl
and
cmpl
addr16
push
cmpb
cwtl
clc
popa
popl
fsubs
call
mov
jmp
adc
rol
pop
push
mov
rep
cld
xchg
jg
sub
rol
cmpsb
push
fbstp
xor
inc
mov
mov
adc
push
ljmp
sbb
fwait
icebp
sub
jae
jb
lcall
and
popf
xchg
mov
mov
imul
das
xlat
xlat
sbb
add
ret
testb
mov
xor
add
stc
inc
clc
xlat
pop
pop
xor
mov
test
jae
push
pop
iret
repz
xlat
out
rcl
xchg
es
orb
add
rorb
xor
lret
inc
rcll
icebp
in
pop
bound
xchg
nop
or
cwtl
call
sti
jns
mov
mov
inc
xor
popf
lret
pop
cmp
mov
out
out
es
dec
jne
and
dec
scas
flds
aas
xchg
cmp
cmp
popa
lea
add
sub
incl
ss
mov
pop
ds
in
mov
iret
and
xchg
or
shrl
pop
out
mov
decl
add
fistps
icebp
xchg
xchg
mov
pop
push
lods
lret
push
imul
mov
sbb
test
int
inc
lea
sub
push
in
sahf
fbld
jno
jp
xchg
push
out
icebp
mov
pop
mov
fcmovnb
dec
jmp
xchg
push
lret
cmp
sbb
and
mov
loope
ja
in
mov
jg
dec
pop
into
lock
cmp
orb
lea
shlb
mov
cmpsl
sti
push
xchg
aad
aaa
roll
inc
jo
mov
inc
std
icebp
out
mov
pop
fcmovne
push
dec
pop
nop
and
sub
sbb
shlb
and
sub
mov
scas
lods
jno
mov
aaa
xor
pop
dec
adc
les
jmp
mov
stc
jecxz
mov
mov
lea
out
enter
push
pop
test
jne
xchg
mov
add
add
inc
jo
pop
lods
dec
xchg
sub
push
mov
in
inc
andb
lods
fdivrl
popa
xor
xchg
loope
shr
jbe
fnstsw
cmp
sbb
pusha
sbb
sbb
mov
leave
xchg
stos
push
push
xchg
arpl
icebp
xor
xorps
dec
mov
pop
test
mov
mov
jmp
add
sub
dec
lods
dec
das
cmp
xchg
imul
out
and
pop
jns
jmp
loope
mov
lcall
mov
pop
out
dec
cltd
or
pushf
xchg
mov
sub
std
insb
popa
inc
mov
mov
push
pop
stos
and
xchg
mov
insb
jle
push
adc
sbb
bnd
int
jae
xchg
fcmovnb
pop
jbe
mov
idivl
aam
ljmp
sbb
clc
mov
hlt
in
mov
imul
cmp
faddp
inc
sbb
pop
push
push
and
lret
mov
xchg
icebp
incl
inc
push
out
mov
imul
ficompl
adcb
bound
call
pop
pop
clc
in
pop
test
fistl
lods
jl
iret
dec
sbb
lret
outsl
stc
dec
stos
sahf
cmp
xchg
movsl
adc
or
scas
xchg
cmc
std
xchg
rclb
inc
pusha
push
pop
ficompl
int
push
or
cwtl
fdiv
out
orb
sub
lock
daa
sbb
push
mov
pop
pop
push
lret
and
loope
inc
std
cmp
lea
mov
dec
pushf
push
xor
add
xchg
pop
cmpb
pop
push
les
xchg
cld
pop
pop
in
jmp
adc
pop
enter
jmp
xchg
mov
or
mov
mov
testl
xor
sahf
pop
aas
hlt
dec
enter
stc
and
xchg
dec
pop
aas
sbb
jb
xor
inc
scas
sub
add
gs
movsl
sbb
xchg
rorb
adc
imul
mov
adc
jnp
pop
out
mov
xchg
pop
cs
xchg
cltd
pop
sub
mov
jge
dec
inc
mov
inc
cmp
je
cmp
dec
add
cmp
dec
cltd
cmp
xchg
into
push
push
push
sbb
xchg
pusha
clc
loop
lods
stos
imul
lahf
cwtl
cmp
cltd
shlb
nopl
pop
xchg
xchg
xchg
test
cmp
jge
insb
lahf
fstpt
jecxz
cwtl
rolb
out
out
mov
repnz
andnps
dec
orb
std
sahf
dec
pop
mov
stos
xchg
mov
xchg
xchg
cmp
das
pop
loopne
jle
fs
popa
movsl
cld
xchg
push
nop
and
enter
xor
iret
mov
push
cmp
arpl
fsubl
inc
and
xchg
sbb
pop
out
cmp
stc
push
xchg
cmp
mov
mov
out
mov
xchg
scas
push
movsl
ret
scas
pop
sub
test
dec
xchg
mov
jmp
loopne
movsl
testl
stos
pop
and
lds
pop
loopne
pop
std
call
test
dec
jns
clc
leave
cmp
psubb
xchg
or
add
dec
and
inc
test
popf
outsl
cmp
inc
mov
fxch
pop
lea
push
fbstp
aad
mov
ficomps
mov
lcall
loopne
lcall
ljmp
imul
out
gs
mov
inc
and
pop
or
dec
inc
push
pusha
insb
in
xchg
les
pop
loop
mov
pop
nop
ret
or
add
dec
test
inc
repz
popf
push
lret
faddl
xorl
cmp
sub
pop
jb
clc
xchg
inc
jnp
xchg
jne
dec
mov
dec
or
andb
cwtl
std
cmp
fnstenv
xor
in
fcomps
daa
cmp
rorl
pop
imul
inc
test
jb
cmpsl
push
push
loopne
cld
xchg
in
movsb
rcr
pop
mov
movsb
sub
outsb
jno
dec
push
or
xchg
mov
adc
dec
outsb
jbe
jbe
jecxz
outsl
xchg
fadds
mov
jle
fstps
sbb
clc
push
xchg
sub
and
dec
cmp
iret
pop
divl
pop
xchg
mov
sub
add
xchg
cmp
jg
jmp
mov
pop
xor
push
inc
xchg
imul
clc
in
popf
mov
lret
xchg
out
pushf
ljmp
xchg
dec
mov
mov
outsl
mov
jns
jge
jb
mov
out
mov
insb
add
ja
xchg
int3
ds
lret
testb
pop
push
mov
fsubrp
dec
gs
adc
xchg
pop
cmp
pop
repnz
cmp
push
xor
mov
in
jbe
loop
xor
push
inc
sbb
dec
ja
out
xchg
aam
xchg
push
clc
into
lcall
inc
jns
xchg
inc
add
in
rol
xor
in
inc
in
pop
aas
shlb
jno
je
jge
or
jb
enter
rcl
dec
sub
sbb
xor
cwtl
jns
mov
out
add
daa
lods
out
gs
jno
shll
mov
inc
jmp
out
mov
and
int
imul
pop
inc
lock
pop
sub
fstl
lds
fisttps
stc
inc
imul
nop
mov
daa
xchg
pop
hlt
add
mov
mov
mov
and
daa
mov
mov
or
dec
dec
cld
add
mov
push
stc
ljmp
pop
dec
jb
or
mov
jnp
imul
add
and
inc
je
fsub
out
xchg
inc
imul
fisttpl
mull
mov
add
inc
jns
bound
pop
roll
jl
js
rcrb
jno
rorb
mov
fstpt
jp
dec
pushf
lea
mov
outsb
enter
popa
push
loopne
jb
pop
mov
xchg
adc
ja
cmp
mov
mov
dec
dec
ljmp
cmp
push
popa
push
int3
dec
jno
mov
loopne
aad
hlt
adc
jns
push
dec
jp
jmp
fistpl
out
mov
cwtl
pop
lds
test
shrl
lret
mov
adc
cmp
mov
mov
fimuls
inc
push
pop
enter
fimull
sbb
sub
xor
roll
pop
adc
jno
pop
scas
iret
sti
outsl
push
sbb
xorl
mov
mov
mov
ficomps
orb
add
ror
jle
jle
cltd
adc
mov
or
cmpsl
xor
mov
xor
add
fisubrs
xchg
movsl
cmpsb
add
xchg
and
and
jae
daa
mov
pop
lcallw
lods
mov
inc
pop
sub
enter
add
ss
jno
scas
xor
adc
test
cwtl
xchg
gs
flds
dec
test
adc
je
xchg
mov
xchg
clc
dec
jb
or
sbb
test
jne
into
pop
fidivl
add
xchg
cmpb
xor
lods
fbld
dec
xchg
cmc
push
fisubrl
fs
pop
mov
pop
mov
add
fwait
jle
imul
les
std
and
xchg
testb
dec
pandn
xchg
mov
int
test
xchg
int3
add
push
out
rolb
ret
mov
adc
mov
fwait
inc
and
icebp
scas
insl
add
xchg
js
cwtl
and
jbe
pop
in
addl
addr16
sub
aas
nop
sub
das
dec
and
jle
rcrl
pop
addb
push
iret
xchg
add
jle
or
loop
mov
pop
loop
int3
push
aaa
and
mov
cwtl
outsb
adc
jp
or
test
lcall
aaa
xchg
or
adc
rcr
inc
scas
addb
test
fbld
test
mov
int
mov
cmpsl
jb
mov
jmp
jbe
cmpsl
int3
jge
mov
add
jmp
or
mov
xor
adc
cmp
xor
jb
lock
outsl
loope
mov
add
pusha
lods
jae
je
jne
lret
xchg
rolb
xchg
bound
cli
aam
imul
push
fnstcw
mov
jo
sahf
jg
jno
push
dec
inc
pusha
mov
xchg
add
pop
mov
aam
test
sqrtps
outsb
cwtl
add
out
out
push
inc
push
gs
xchg
jp
cmp
les
fwait
enter
dec
jno
or
pop
addb
bound
mov
add
add
int
cmp
push
xchg
fiadds
cmp
stos
hlt
dec
fidivl
inc
push
dec
jnp
push
jae
pop
addr16
out
cwtl
sbb
addr16
or
and
dec
inc
arpl
jb
or
movsb
scas
pop
jmp
addr16
adc
enter
mov
icebp
mov
stos
or
cmp
push
and
adc
push
mov
sub
inc
xchg
cmpsl
mov
xchg
push
sbb
dec
adc
sbb
xor
xchg
test
aas
cmpsl
in
pop
inc
mov
xchg
lods
xchg
inc
jae
cwtl
cmc
test
lcall
or
shl
xchg
mov
int3
scas
jge
pop
lods
dec
xchg
pop
fwait
ljmp
xchg
add
out
in
outsb
mov
dec
insb
or
into
mov
into
test
mov
pop
push
imul
out
xchg
push
jle
fmull
movsl
pop
mov
push
leave
dec
jns
xchg
add
ret
push
mov
sub
jge
xchg
or
push
addl
pop
adc
movsl
fcomp
pushf
mov
cmp
ret
xlat
mov
and
call
xchg
dec
xchg
cli
pop
dec
cltd
xchg
adc
and
leave
stc
divl
fnsave
adcb
cmp
cmp
mov
aam
push
cwtl
test
lods
or
cmc
mov
and
sbb
push
ret
imulb
dec
insb
outsl
add
jecxz
cwtl
xorb
cmp
fmul
mov
test
mov
insb
cmpsl
shlb
adc
push
push
sarb
mov
bswap
cmp
xchg
or
ljmp
mov
lahf
sub
cmp
sbb
jl
and
push
xchg
pushf
lea
xchg
test
inc
ret
inc
pop
arpl
rep
pop
mov
call
fcmovne
sbb
hlt
in
jb
pop
xor
nop
lods
cmp
mov
mov
pop
dec
lcall
rcrl
push
mov
loop
adc
push
lds
cmp
push
mov
flds
add
std
stos
popw
fidivl
out
lret
int3
push
lods
jle
pushf
jae
inc
in
pusha
lcall
aas
xchg
hlt
xchg
insb
sbb
fmuls
xchg
cmp
cltd
xchg
stc
mov
icebp
fidivs
stos
scas
test
xor
inc
movq
pop
adc
sbbl
pop
lret
clc
pop
cmp
jle
fcomi
lds
ja
test
mov
pop
mov
es
mov
mov
jnp
rcl
rcr
cmp
pop
lret
xchg
test
popa
pop
mov
mov
cmp
push
inc
jg
bound
push
cmovs
mov
popa
inc
hlt
xor
mov
les
loop
fadd
jns
sbb
outsb
push
aas
jmp
push
xor
lods
test
jmp
data16
stc
and
jb
jno
lods
mov
mov
idivl
in
adc
push
push
pop
test
xor
dec
pop
out
pop
mov
xor
das
adc
push
test
psubusw
gs
mov
xchg
pop
add
mov
mov
jp
jns
cmc
in
inc
xchg
cmpsb
or
mov
push
fnstenv
in
loope
inc
dec
dec
pop
pop
adc
in
daa
pop
dec
or
lret
cmpsl
xchg
inc
orb
dec
add
sub
imul
xchg
sbb
and
cmovnp
popf
enter
data16
or
fistps
dec
sbb
scas
js
jecxz
push
nop
cmpb
int3
adc
cmpsb
scas
test
add
stc
pop
mov
add
fnstcw
sub
pop
in
xchg
jmp
or
sbb
insl
sbb
popa
xchg
lahf
adc
xchg
mov
imul
into
jmp
pop
in
lods
pop
sub
mov
xchg
mov
fimuls
add
inc
rcl
gs
cld
fstps
addr16
iret
out
movsb
into
jno
cmp
pop
je
or
xchg
stos
xchg
test
jg
add
pop
or
lcall
outsb
adc
xchg
ror
fidivrs
in
aaa
xchg
pop
cmp
dec
adc
into
pop
loope
lcall
fsubrl
sub
cmp
add
sahf
call
pusha
jmp
nop
inc
cmp
dec
das
xchg
cmp
fistpll
xchg
or
pop
adc
je
lcall
push
pop
ds
cli
test
seto
add
rorb
ret
jecxz
push
fsubr
push
sub
adc
or
cli
xor
dec
jbe
pop
fwait
inc
into
jae
dec
push
lahf
std
cmpsb
pushl
adcl
in
xchg
clc
and
cmpsl
adc
sbb
mov
call
mov
ret
cwtl
or
jnp
xor
add
inc
xchg
leave
add
scas
pop
dec
pop
sub
jl
xchg
xor
fldl
lret
xchg
cmp
xchg
push
ljmp
adc
scas
xchg
push
and
dec
pop
mov
daa
push
ja
xchg
and
gs
inc
push
cld
add
xchg
dec
mov
mov
and
dec
ljmp
cmp
subl
mov
push
rol
or
aad
insl
js
popa
pop
fcoml
jmp
xchg
xchg
das
lock
dec
mov
cmp
scas
adc
or
jecxz
inc
pop
push
loopne
mov
js
in
loopne
or
push
jge
push
hlt
lret
scas
andb
push
lods
mov
mov
dec
in
out
inc
ret
stos
movsb
mov
add
xchg
sub
pop
out
cmp
inc
fbld
sub
xchg
das
sbb
sub
dec
or
out
xor
out
mov
xchg
pop
cmp
shlb
adcl
xchg
dec
xchg
mov
jp
test
movsl
push
jmp
test
enter
pop
push
clc
jbe
test
jmp
ret
cmp
cmp
icebp
lds
sti
mov
inc
dec
dec
mov
fidivrl
cs
jbe
fcoms
test
add
fnstsw
ss
loope
and
test
pop
xchg
sbb
and
cld
or
nop
pushf
rcrb
in
jle
in
jno
mov
xchg
mov
dec
test
mov
movb
add
jns
push
add
aas
jp
xlat
xchg
frstor
push
bound
scas
xchg
add
push
mov
sahf
cmc
es
or
xchg
rol
and
arpl
dec
xor
das
insb
imul
loope
push
pop
stos
adc
notb
mov
popa
into
cmp
rcl
jb
sbb
xchg
jg
fisubs
dec
inc
mov
xor
shlb
notl
mov
not
mov
scas
push
push
imul
ss
das
mov
sbb
fcoms
pop
dec
outsl
inc
pop
adc
push
aam
push
es
ret
add
pop
push
rcll
add
imulb
out
aaa
push
int3
inc
in
movsl
fwait
pop
les
mov
cwtl
mov
adc
push
jo
leave
fistl
xchg
test
mov
cmp
mov
movsb
mov
xchg
mov
fnstsw
cmovs
and
lcall
pop
sbb
dec
cmpsb
das
inc
rclb
call
movsb
test
or
sbb
xor
dec
sub
cmp
mov
lds
jge
pop
fwait
cmpsl
add
pop
ds
xchg
sahf
xchg
enterw
jge
adc
sbb
lods
out
dec
xor
mulb
mov
jae
pop
cmpl
inc
lock
mov
pop
ss
mov
sahf
and
fadds
xor
dec
call
jmp
mov
mov
sub
stos
dec
loope
add
xchg
pop
dec
fistpl
dec
push
push
out
test
das
aad
int3
cltd
mov
ss
loope
dec
enter
ss
shll
mov
gs
test
xchg
popa
in
pop
fiaddl
roll
dec
insb
out
and
repz
rcrb
subb
push
testb
add
mov
cmp
popf
sub
lods
jb
fistl
popa
fimuls
cmp
mov
xchg
pop
lret
js
pop
jmp
inc
leave
xlat
push
jo
popa
les
fnsave
xchg
cmp
and
int
addr16
jg
dec
dec
incb
mov
sbb
std
push
adc
inc
push
es
in
xchg
xor
mov
dec
loope
test
mov
cltd
mov
adc
movsb
popa
hlt
mov
enter
ss
sub
lea
in
and
rcrl
dec
inc
mov
xchg
mov
or
xchg
pop
gs
xchg
sbb
xchg
testb
cmpsl
add
aaa
fimull
jle
in
push
cmc
xor
cmp
jecxz
out
push
test
mov
sbb
push
dec
jae
pop
enter
pop
xchg
lods
dec
lret
push
jg
jbe
sbb
push
gs
popf
jmp
xchg
mov
iret
je
dec
arpl
daa
loop
dec
pop
cmpsl
xor
mov
xor
and
mov
addr16
mov
out
cs
pop
pop
faddl
pop
loop
and
pusha
jbe
dec
xchg
ret
repz
stos
mov
imul
int
pop
mov
mov
repz
xchg
int
aaa
ret
or
cmp
push
jne
repnz
xchg
sbb
or
cmp
mov
loop
pop
inc
cs
inc
dec
sbb
mov
pop
adc
mov
sbb
repnz
dec
mov
push
fdivrs
dec
in
adc
xchg
in
inc
in
mov
xchg
jo
mov
js
jl
jne
ja
xchg
sti
leave
std
les
sbb
daa
scas
imul
inc
jno
pop
mov
pop
flds
xchg
ja
pop
cmpsl
pop
and
xor
adc
pusha
movsl
and
xor
add
cmp
adc
xchg
int
mov
dec
jp
mov
cmpb
sub
sbb
test
push
inc
cli
cmpsl
subl
xor
int
jle
pop
adc
addr16
xlat
cmp
fwait
dec
mov
jg
xchg
mov
dec
lea
push
mov
icebp
adc
cli
aam
bound
in
jnp
push
mov
jle
dec
mov
imul
cmp
xchg
lods
in
inc
aad
shlb
stc
xchg
push
pop
add
mov
add
in
jge
push
divl
sbb
pop
mov
in
jle
mov
decb
cvtps2pi
mov
cld
xor
mov
push
mov
inc
xchg
ficoml
add
sbb
stos
test
add
call
push
icebp
bound
lods
xchg
push
ret
sub
dec
lret
xchg
shr
nop
add
sbb
sti
xchg
mov
mov
mov
test
sbb
or
cld
ja
insl
dec
xlat
dec
push
mov
lcall
push
xchg
push
stos
sbb
mull
shll
jns
sbb
or
inc
cwtl
test
test
pop
dec
xor
ja
in
adc
jmp
mov
add
repz
pusha
mov
dec
or
fbld
xorb
xchg
loope
enter
out
orl
pop
int3
jg
fsub
mov
cwtl
mov
adc
xchg
cltd
lea
fs
jmp
call
cli
jle
cli
stos
test
ret
xor
pushf
sub
imul
out
dec
sahf
inc
dec
mov
dec
push
cmp
xchg
xlat
pop
cmp
cltd
add
jg
dec
lods
daa
pusha
adc
pop
mov
dec
loop
xor
mov
xor
rorb
shll
sti
outsl
add
stos
xchg
jo
sub
ficoml
repz
or
push
jp
stos
jae
dec
cmpsl
rcrl
insl
pop
movsl
ss
mov
jecxz
pusha
jl
movl
pop
mov
in
inc
add
xchg
push
stos
mov
jne
mov
js
xchg
leave
out
mov
push
xacquire
adc
and
pop
push
test
lea
bswap
fwait
cmp
cmp
loopne
pop
int3
jne
lods
xchg
and
fdivs
mov
and
rcrl
mov
ret
das
incb
and
bound
popa
ljmp
jb
mov
lods
push
pop
fwait
ret
test
pop
les
int3
mov
jb
cs
adc
and
aad
imul
lcall
xchg
adc
xor
out
into
or
pop
cmp
mov
orl
out
jns
sbb
xchg
inc
mov
outsl
xchg
enter
sub
fwait
pop
aam
xchg
ss
dec
imul
jnp
cmc
xchg
sbb
notl
popf
pop
inc
rol
xchg
lcall
push
test
nop
out
inc
pop
push
add
fs
cli
xchg
sub
clc
xor
movsl
jo
nop
insb
add
jmp
xorb
aas
cmp
inc
sbb
pop
pushf
pop
insb
pop
push
jmp
test
mov
jbe
push
dec
lret
mov
sbb
jo
adc
fidivl
andb
outsl
add
jg
mov
test
mov
es
dec
mov
adc
je
jg
cmpsb
orb
cmpsl
xchg
jns
and
or
cmc
push
mov
push
or
shrb
out
sub
outsb
nop
and
or
cs
insl
mov
popa
or
add
and
cld
add
adc
xchg
popf
sbb
call
mov
and
inc
insb
sub
adc
mov
push
jno
xchg
inc
pop
xchg
dec
inc
outsb
or
stos
and
jae
leave
loope
nop
and
pop
stc
fsubs
mov
adc
sbb
cmc
ret
pop
and
or
jo
pop
imul
mov
push
icebp
dec
jle
rolb
xor
pop
in
scas
dec
cmp
mov
movsb
shl
xchg
faddl
adc
sub
inc
jno
in
add
lcall
gs
aaa
outsb
dec
test
loopne
xor
icebp
xor
rcll
insl
insl
fildll
add
cmpsb
xchg
push
adc
pop
xlat
frstor
xorb
cwtl
fdivp
jo
cmpsb
popa
movsb
mov
pop
fmuls
cmp
xchg
out
sbb
xchg
mov
pop
mov
pusha
test
hlt
pushf
and
int
ret
pop
in
sub
fimuls
daa
je,pn
fwait
pop
sbb
inc
inc
fiadds
arpl
mov
pop
xor
cs
neg
dec
mov
stos
int
pop
mov
inc
dec
lret
dec
jno
testl
add
test
pop
mov
push
pop
insl
pop
mov
or
mov
ss
cmp
mov
sub
jae
fwait
aam
mov
mov
cmp
jmp
hlt
xchg
inc
addb
xchg
hlt
std
pop
call
insb
xor
movsl
adc
add
push
inc
arpl
mov
pop
iret
and
xchg
and
pop
enter
adcl
subb
lock
pop
xor
and
outsl
movsb
inc
cmpsl
outsl
test
or
dec
xchg
movsb
pop
add
pop
outsb
pop
fbld
cwtl
jp
xchg
lret
scas
movsl
add
aad
negb
iret
and
movsb
imull
or
xchg
mov
inc
orb
pop
jg
inc
shl
fdivl
sub
xchg
sbb
outsb
dec
mov
mov
stos
ss
addr16
rcrb
jb
outsb
sub
jae
jecxz
push
inc
imul
rorb
mov
cmp
shl
xchg
jmp
movsl
lock
pop
repz
jns
test
or
pop
dec
sbb
dec
pop
xchg
xchg
or
imul
orl
out
push
shll
jmp
mov
lods
inc
dec
out
rcrb
mov
das
push
in
dec
enter
push
imul
sub
pop
insb
scas
pop
pop
ficomps
jle
mov
popa
pop
xor
push
pop
dec
test
push
ret
xchg
cltd
sbb
mov
inc
mov
push
sub
push
pinsrw
push
dec
call
lea
test
ljmp
popf
or
sub
xchg
cmp
push
lea
inc
fs
outsl
jecxz
adc
jmp
lcall
jno
xchg
hlt
lea
pop
mov
imul
inc
sti
shll
jp
popa
das
push
cmp
popa
mov
inc
and
pop
mov
mov
lods
or
push
jl
xchg
lods
xor
cs
sahf
jecxz
push
sub
aaa
jbe
pop
cmc
leave
pop
push
mov
xchg
xchg
push
sbb
mov
iret
or
dec
fwait
mov
pop
pop
mov
andl
dec
sbb
in
xchg
call
hlt
hlt
imul
in
cmp
pop
repnz
outsl
insb
mov
xor
jmp
jbe
dec
push
cwtl
inc
xchg
xchg
scas
push
add
jge
push
xchg
orl
subb
out
insl
scas
stos
cwtl
mov
xchg
sbb
hlt
cmp
das
mov
mov
xchg
mov
xchg
imul
dec
pop
test
pop
lahf
loopne
mov
lods
mov
xchg
sub
inc
mov
xor
dec
in
fidivrs
or
test
pop
daa
jno
cli
rcrl
xchg
push
xor
ret
or
insb
cwtl
or
cmpsl
cmc
inc
xchg
cmpsb
jp
fldenv
dec
je
das
pop
adc
xchg
rclb
and
inc
stos
xchg
outsl
out
xorl
sbb
cmpsl
into
inc
pop
pusha
add
ret
out
mov
rcrb
aaa
fsubr
stos
xchg
iret
or
stos
fistl
inc
and
mov
sub
rorl
lds
inc
xchg
and
mov
dec
push
or
mov
subb
js
sbb
dec
mov
add
jo
hlt
decl
add
dec
xor
cld
xlat
push
and
test
loope
les
mov
sbb
sti
ss
ret
push
xchg
rcr
xchg
shll
fcoml
jge
xchg
xchg
cmpsb
jns
nop
fwait
dec
add
lds
add
cwtl
lahf
pop
mov
inc
lods
xchg
or
sbb
jge
pushf
rorl
xchg
mov
pop
cs
jo
ss
addr16
xchg
mov
jnp
add
cmc
loopne
sub
push
ret
dec
xchg
mov
pusha
outsb
push
xchg
das
xchg
arpl
mov
pop
mov
xor
dec
in
mov
dec
jge
int3
sbb
arpl
call
adcl
dec
adc
fwait
jnp
aaa
mov
cwtl
mov
ds
xchg
enter
scas
xchg
pop
ss
and
sub
or
ljmp
mov
xchg
arpl
test
insb
push
cwtl
push
loopne
sahf
push
dec
shl
push
mov
sub
out
inc
inc
adc
addr16
repz
aad
imul
cld
fisubl
sub
dec
dec
xor
add
test
fdivr
outsb
outsb
stos
outsb
jo
jbe
and
dec
enter
mov
incl
arpl
int
lock
or
sbb
xchg
fiaddl
add
pop
ficomps
outsb
xchg
push
jl
sbb
mov
or
inc
xor
pushf
mov
jbe
sub
push
pop
adc
pop
cmp
js
ret
jg
pop
pop
iret
sarb
stos
fbstp
jo
cwtl
and
fnsave
fisubl
lahf
int
movsl
pop
pop
stc
ds
sbb
idiv
sub
mov
popw
dec
cmp
cmc
and
jb
rcrl
call
push
out
mov
mov
sahf
adc
add
inc
ljmp
mov
in
arpl
test
cmp
repz
pop
mov
inc
pop
dec
ljmp
jge
xor
pop
scas
push
mov
xchg
and
push
hlt
jmp
iret
daa
jmp
xchg
clc
inc
std
cmp
dec
sub
xchg
gs
out
xchg
addl
adc
daa
push
addr16
mov
lret
pop
sahf
add
mov
push
fcompl
jmp
iret
aam
push
jle
out
vdivss
jns
lock
mov
push
xchg
sub
fwait
scas
xchg
mov
sbb
mov
push
xchg
add
cs
dec
xor
cmp
push
mov
aad
fisubrl
movsl
pop
mov
jle
adc
lock
sub
mov
out
push
xchg
mov
inc
mov
sbb
jno
test
fidivrs
das
dec
pop
add
jb
lret
xchg
movsl
sub
lcall
clc
xor
xchg
int
mull
jno
enter
jecxz
lods
mov
pop
pop
bound
fsubl
outsl
pop
into
xor
jnp
xchg
sub
jb
sbb
ljmp
inc
push
pop
test
mov
sub
jbe
mov
bound
lods
and
mov
add
imul
out
or
scas
sbb
xor
lcall
pop
mov
sub
push
out
lcall
loope
repz
sti
add
popf
pop
cmpsb
dec
or
dec
js
shlb
pop
xor
mov
push
pusha
mov
sti
mov
cmp
orl
lret
add
sahf
push
fcomip
xchg
rorb
xchg
jmp
adc
je
mov
dec
into
pop
jmp
xchg
xorl
push
jl
push
sbb
and
dec
mov
pop
jle
idivl
jae
mov
nop
dec
jge
outsl
pop
nopl
popa
fisttps
enter
add
dec
jp
push
shrb
xchg
lods
aas
aaa
test
and
stc
hlt
push
out
xchg
mov
mov
jae,pt
sbb
add
scas
jecxz
xchg
test
loop
mov
dec
add
adc
or
iret
fnstcw
inc
mov
mov
js
sti
adc
xchg
xchg
test
xchg
jle
dec
mov
pop
sub
push
mov
xor
popf
int3
mov
jecxz
fistl
out
or
fldenv
sbb
enter
mov
mov
mov
inc
dec
jno
aaa
ret
mov
lock
push
dec
stos
cltd
mov
dec
or
fsubr
aaa
imul
aam
movsb
loope
sbb
mov
pop
push
jae
jle
test
pop
cmc
popf
cmp
aaa
xchg
loop
mov
je
in
repz
xchg
xchg
mov
pop
test
insb
cmp
out
stos
push
fistps
or
push
mov
mov
addb
insl
and
xor
adc
and
test
cmp
repz
adcb
popl
mov
and
push
subl
jo
xchg
pop
pop
out
mov
sbb
dec
or
fs
stos
enter
fstp
adc
test
or
mov
jae
mov
adc
imul
leave
dec
mov
push
pop
popf
orb
sub
decb
or
mov
xchg
or
popa
lret
ret
push
xor
dec
cmp
sbb
jno
icebp
push
add
pop
mov
and
lods
nop
mov
cmp
test
push
movsb
pop
pop
xor
into
xchg
rcll
sbbl
adc
push
cmp
das
adc
push
sbb
mov
jg
or
insl
xor
je
xchg
test
inc
push
xchg
test
jge
xchg
cmp
sbb
xlat
dec
sub
xchg
icebp
rclb
dec
mov
lock
xchg
and
pop
sub
popf
outsb
mov
xchg
mov
or
dec
testl
lahf
xchg
andb
bound
out
and
dec
mov
or
movsb
cmpsl
mov
pushf
mov
lret
outsl
inc
pop
in
popa
pop
ret
mov
xchg
aaa
test
into
xlat
jno
jae
push
push
shlb
ficoms
add
mov
inc
int3
test
je
fbld
ret
jae
cld
lret
add
dec
cmpl
int
xchg
xchg
imull
xchg
shrb
ds
addl
pop
bnd
jge
dec
pminsw
mov
aam
dec
mov
pop
outsb
inc
test
test
out
pusha
mov
dec
mov
dec
push
cwtl
lret
cltd
scas
mov
ficompl
ficoml
popa
dec
xchg
std
push
sbb
mov
cld
sub
mov
mov
and
mov
shlb
pop
push
imulb
cmp
xlat
lods
stos
enter
xor
xor
dec
lret
dec
add
iret
mov
rcr
dec
movsb
mov
add
dec
sbb
test
dec
mov
shll
or
gs
xchg
xchg
dec
mov
push
pushf
fimuls
stc
sahf
scas
inc
je
inc
push
adc
pop
dec
decb
lods
mov
insb
ja
mov
jne
pop
out
add
in
or
mov
adc
pop
xorl
ret
out
and
xchg
adc
mov
push
std
sti
cmp
add
outsb
lret
insb
inc
mov
cmpsl
and
popa
cmp
dec
xchg
lret
cmp
mov
jnp
dec
into
xor
xchg
inc
mov
mov
sbb
shlb
dec
inc
imul
scas
aad
xor
sub
stos
pop
aaa
pop
xor
das
ljmp
pop
gs
mov
insb
xlat
aas
inc
mov
cwtl
out
pop
push
add
dec
bound
popa
mov
xchg
jbe
insb
clc
xor
pop
std
jne
add
cmp
adc
xchg
adc
push
xor
fmuls
out
xchg
out
shrl
outsb
pop
pop
mov
out
and
cld
mov
or
inc
pop
mov
pop
fadd
lds
push
add
lds
pop
scas
fisubrs
icebp
pop
jne
xchg
bnd
sub
jle
dec
mov
lods
ds
push
hlt
xor
dec
call
xchg
xchg
push
xor
jmp
orb
fs
inc
add
insl
xchg
sti
dec
xchg
in
pop
push
aad
aas
add
pop
jge
cmc
mov
sub
ret
jno
dec
in
adc
add
pop
out
push
mov
dec
add
stos
cwtl
sub
mov
in
xor
mov
pop
inc
mov
mov
in
stc
xchg
sbb
push
pop
mov
xor
inc
pop
jle
arpl
mov
add
lcall
jp
cltd
dec
mov
sub
inc
and
adc
dec
adc
inc
fs
ss
test
add
movsl
and
xor
imull
inc
sub
xchg
mov
xchg
pop
arpl
lahf
scas
test
xchg
xor
mov
imul
shll
shll
xor
mov
or
mov
sub
rorl
xchg
sbb
jecxz
ja
add
push
std
push
mov
jae
add
sbb
jno
cltd
imul
cwtl
fs
or
xchg
scas
mov
jne
das
fnsetpm(287
icebp
dec
inc
int3
idivb
and
inc
sub
movl
cmc
jl
pop
pushf
mov
jge
scas
jle
pop
push
xchg
jp
cmp
inc
add
push
addb
lds
push
into
movsl
jecxz
repnz
pop
mov
popf
inc
movsb
cltd
mov
mov
pop
push
pushf
inc
scas
pop
cmp
xchg
mov
les
xchg
jecxz
pop
iret
loope
lcall
push
or
mov
xchg
ljmp
xor
call
push
xor
aam
mov
push
xchg
addr16
aad
cvtps2pi
jge
sbb
jbe
out
jb
dec
aaa
hlt
movsl
xchg
add
cs
xchg
rorb
mov
jg
imul
cmp
adc
aas
sar
aas
adc
push
call
jmp
xor
shrl
call
cltd
movsl
dec
inc
stos
and
and
sbb
mov
add
psubd
pop
sbb
push
fwait
jno
cli
icebp
adc
adc
inc
sahf
sub
push
inc
mov
fcompl
jb
data16
xchg
jbe
rcrl
or
das
ljmp
in
push
test
ficoms
xchg
dec
or
loope
dec
xchg
scas
mov
std
xlat
js
pop
xchg
pop
shl
cmp
xchg
pop
in
cmp
push
lcall
xchg
and
xchg
xchg
jp
ja
in
arpl
pop
shll
out
mov
ja
jo
push
fs
cmp
xchg
shr
stc
xchg
repz
push
xor
dec
out
adc
sbb
fmuls
fsubrs
push
ja
repz
add
cs
aaa
iret
icebp
add
xchg
push
mov
xchg
dec
or
push
lcall
cld
lea
dec
dec
dec
push
icebp
dec
lret
xchg
mov
ljmp
rolb
mov
sub
jns
lock
fs
mov
lret
xchg
mov
push
mov
jmp
dec
arpl
sahf
ret
jg
test
push
mov
divb
cmp
aas
dec
outsb
or
add
rcrl
and
test
xor
repz
in
mov
dec
inc
dec
cmpsb
mov
jns
std
loopne
loope
add
lret
repz
popa
insl
ss
nopl
xchg
sbb
pop
jmp
sub
notb
push
dec
mov
call
mov
es
imul
adc
out
push
int3
sub
mov
mov
lods
fstl
sbb
xchg
mov
sbb
or
cmp
test
aaa
push
xorb
repnz
lock
out
pop
lahf
imul
dec
mov
fadd
xchg
or
push
sbb
or
sahf
jo
or
push
xchg
adc
mov
and
aas
push
mov
movsl
sub
lods
xchg
pop
sub
mov
xor
adc
xor
test
add
sub
jno
dec
pushf
xchg
fcoms
cltd
add
push
fbld
icebp
and
loope
xchg
xor
pop
les
lcall
cmpsl
and
rol
iret
mov
dec
aad
mov
xchg
cld
lahf
ss
movl
push
add
xor
in
xor
inc
andb
mov
push
pop
inc
cmc
ja
clc
and
arpl
add
pop
mov
sub
push
lret
in
repz
lods
jae
pop
xchg
jns
inc
cmp
out
out
inc
js
push
jo
movsl
lods
daa
sahf
adc
loopne
dec
xor
adc
sbb
push
test
add
pop
pop
fadds
dec
mov
je
jmp
pusha
in
fdivs
adc
xchg
or
dec
mov
pop
pop
daa
and
xchg
cmp
movsl
mov
dec
fwait
outsb
sahf
loop
loopne
push
jecxz
xchg
push
je
push
testl
adc
and
mov
inc
movsb
testb
push
xor
cmp
push
or
sbb
mov
sub
mov
pop
shlb
les
xchg
lods
incl
ja
into
jg
jl
jg
push
xchg
mov
fisubl
insl
and
adc
fldl
sbb
cmp
xchg
jnp
push
add
inc
int3
or
fdivrs
call
scas
pop
pop
inc
aad
pop
lahf
mov
adc
push
sbb
cmpsb
pop
add
mov
pop
cmp
push
lret
pop
dec
repnz
inc
adcb
xor
jo
daa
jns,pn
sahf
dec
cld
xchg
test
xchg
repz
ja
cltd
test
dec
pop
pop
or
orb
push
inc
mov
pop
mov
repnz
jne
jmp
jbe
sbbb
mov
mov
pusha
mov
call
lret
cltd
lcall
push
xor
dec
and
stc
pop
aam
rclb
repz
in
bound
out
cmp
xchg
xor
mov
or
push
fcom
pushf
push
xlat
movsb
addr16
jne
cmp
in
out
dec
dec
outsb
popf
insl
xchg
sub
rcrl
out
dec
mov
fbstp
push
adc
mov
xor
ss
adc
or
dec
inc
push
sub
inc
xchg
add
ror
mov
out
pop
stos
or
inc
jp
xchg
jmp
pop
adc
ret
dec
mov
jnp
adc
cltd
sbb
cmp
fs
mov
or
or
mov
pop
out
jecxz
nop
rorl
popl
ret
movsb
test
jb
jae
pop
xchg
mov
je
icebp
adc
bound
pop
aad
xor
roll
xchg
cmp
shlb
std
cmpsb
ds
xchg
mov
movsb
pop
inc
xchg
mov
fmulp
testb
inc
outsb
dec
inc
fcoms
sbb
popf
xchg
mov
or
mov
sahf
add
pusha
sub
in
adc
xchg
mov
negl
mov
adc
pop
mov
push
push
aas
pop
negl
mov
adc
add
sahf
test
sti
jae
xlat
out
stos
adc
inc
repz
notb
pop
sub
xchg
jmp
xchg
pop
xor
xchg
xchg
cmpsl
and
xchg
adcl
jge
dec
and
lods
ret
or
test
orl
or
shl
xchg
sub
popf
dec
adc
or
cltd
pop
sub
or
mov
jl
call
dec
cmp
adc
hlt
sbb
pop
mov
xchg
pushf
mov
mov
pop
ss
adc
xchg
rclb
lret
pop
adc
jnp
xchg
adc
ss
mov
repz
sbbb
pop
xchg
mov
adc
mov
lods
mov
and
es
cmp
test
and
push
jecxz
push
mov
lods
andl
imul
xor
adcl
call
nop
iret
xchg
nop
int
xlat
and
pop
aas
mov
popa
aaa
icebp
test
out
xchg
fadd
cmpsb
sub
int3
insb
xorl
icebp
jle
mov
jecxz
repz
nop
pop
rcll
in
jo
push
sub
lods
das
add
xor
in
push
out
mov
imul
ror
cmp
pop
xchg
sbb
pop
dec
push
cwtl
shlb
mov
in
nop
xor
js
jmp
rcll
sub
pop
jno
jae
push
outsb
out
ja
xchg
fs
jno
mov
and
or
sub
enter
push
cmp
ret
cs
push
mov
xchg
dec
sub
mov
xchg
bound
out
pop
test
xchg
lea
imul
cmp
lea
xchg
sub
inc
stc
lret
mov
rolb
add
stos
and
lcall
push
push
mov
push
bound
adcb
xchg
push
into
adc
stos
mov
jmp
xor
sbb
pop
mov
inc
fs
dec
dec
insb
sahf
aas
add
dec
fwait
cmpb
inc
stc
and
repnz
xchg
or
or
xchg
pop
adc
adc
dec
cmp
cmp
xchg
cld
mov
xchg
jge
jge
cs
out
decb
adc
arpl
out
xchg
repnz
fsts
xchg
jp
fs
xchg
sahf
scas
jne
jne
mov
in
aad
pop
sbb
push
xor
fistpll
or
stos
fstl
sbb
test
mov
dec
lahf
mov
mov
sbb
js
orl
dec
sti
adc
dec
pop
jle
xor
into
out
jmp
jo
xor
sti
xchg
test
xor
iret
dec
aad
jb
out
test
scas
cli
jmp
xchg
mov
cmpsl
pop
inc
jne
rol
sbb
dec
nop
pop
inc
jbe
xlat
outsb
lds
cmp
push
sub
jne
xchg
pop
clc
out
xor
dec
mov
mov
mov
int
clc
and
cmp
lret
lock
xor
xchg
sbb
mov
outsl
dec
sbb
push
orb
clc
xchg
mov
jmp
sub
mov
movl
shll
inc
inc
xchg
xchg
jns
stc
inc
pop
lcall
xchg
popf
cmp
xchg
jbe
clc
or
add
xor
mov
das
jbe
lea
loopne
lret
jle
aam
jmp
sbb
inc
es
push
repnz
adc
push
xchg
es
imul
inc
std
loopne
xchg
lods
push
push
jl
push
rolb
test
push
pop
icebp
aaa
lret
in
sarl
ja
dec
dec
fidivrs
sbb
flds
jnp
xor
adc
inc
fsubrl
xor
adcb
les
adc
idiv
icebp
testb
insl
inc
mov
xchg
jbe
pop
sbb
mov
xlat
dec
scas
or
add
add
xchg
mov
xor
xchg
xor
xor
jbe
xchg
sbb
inc
daa
int
pop
dec
pop
pop
lcall
push
jle
sub
pushf
cmp
aad
lods
daa
pop
fildll
sbb
cmc
push
lods
pop
cli
jno
stos
cmp
sbb
mov
flds
sbb
dec
xor
push
pop
sbb
push
jle
adc
negb
and
pop
pushf
mov
xchg
mov
rolb
pop
push
jp
loopne
bound
xor
inc
mov
roll
xor
daa
mov
xchg
add
int3
inc
dec
cmp
call
jmp
fmuls
pop
scas
mov
jae
xchg
inc
insl
fisubl
dec
shlb
jle
mov
mov
and
jge
rolb
pop
jecxz
mov
pop
or
push
repnz
mov
lds
pop
or
jae
dec
dec
arpl
mov
mov
jmp
pop
test
sbb
pusha
pop
int3
push
push
adc
jecxz
pop
mov
dec
jno
add
lods
fstps
out
sub
sbb
mov
out
add
cwtl
int
inc
xchg
mov
cmp
pop
jno
outsl
push
in
xchg
mov
mov
jae
pop
or
sbb
outsb
jmp
mov
jmp
lds
movsl
or
xchg
sub
lea
cmp
xchg
cmp
dec
out
mov
cli
cmp
hlt
ret
pop
in
xor
movsl
lods
push
ror
xchg
test
nop
and
sti
push
push
push
pop
inc
mov
cmp
push
aam
pop
subl
xlat
sbb
and
jne
jle
lods
ret
sbb
shr
fcomps
inc
stos
push
shlb
gs
out
data16
mov
dec
inc
push
xor
push
dec
xchg
imul
aaa
mov
loope
repz
or
xrelease
loopne
outsb
dec
mov
pop
imul
ret
push
sbb
popa
div
mov
add
lret
push
test
mov
pop
and
adc
pop
push
xchg
je
insl
mov
push
clc
icebp
mov
dec
addr16
mov
mov
add
pop
nop
push
lods
pop
inc
adc
loopne
inc
sbb
jle
repz
cs
idivb
out
push
lret
cmc
jle
cmp
dec
pop
ret
das
pop
inc
fistpll
jge
sahf
js
sub
push
mov
or
dec
pop
loopne
ss
cwtl
inc
je
push
scas
pushf
sub
jecxz
push
data16
push
dec
pop
inc
lret
mov
mov
pop
ja
gs
enter
movsl
xchg
stos
subl
mov
movsb
loopne
dec
push
fsts
lods
je
xchg
iret
rorb
mov
mov
lcall
in
fcomps
inc
data16
xchg
das
xchg
mov
insb
pop
mov
pop
testb
jae
xchg
adc
pop
cld
stos
in
dec
inc
xor
cmp
pop
jbe
adc
push
inc
sbb
jno
or
outsb
xchg
iret
data16
push
push
xor
divl
xor
pop
xchg
xchg
dec
xor
rclb
pop
pushf
clc
mov
call
inc
je
push
insl
mov
xchg
or
pop
ret
xchg
data16
jl
mov
nop
in
adc
mov
in
rorb
sbb
enter
sub
int3
or
xchg
cmp
mov
loope
mov
cmp
fistps
fcomp
xchg
cltd
sub
fidivrs
cmpsl
xlat
lds
mov
xchg
shlb
and
pop
popf
mov
in
xchg
xchg
pop
imul
xor
xchg
jb
pop
add
and
adc
out
cmp
dec
inc
stc
test
cltd
icebp
inc
lcall
int
orl
jge
imul
add
lds
sub
lds
lret
imul
xchg
pusha
mul
push
xor
pop
sbb
js
pop
aas
outsl
aad
xor
movl
pop
push
cli
aas
imul
xchg
xchg
rcll
push
inc
lcall
adc
xchg
test
cli
xchg
inc
pop
mov
xchg
les
push
mov
aas
popa
inc
or
negb
repz
sub
hlt
sub
mov
ljmp
fmull
jns
inc
lods
xor
scas
movsb
xor
ja
cmp
or
pop
arpl
clc
inc
sbbb
mov
xchg
cmp
push
das
fstl
pop
scas
xor
andb
stos
pop
jp
subb
push
sbb
pop
jl
dec
adcb
movsl
xchg
mov
js
into
repnz
and
outsb
movsb
jbe
cli
xchg
push
stos
ret
imul
mov
mov
nop
sti
push
insl
out
sbb
jns
loop
fdivp
add
or
call
cmp
in
subb
and
lods
outsb
xchg
xor
push
fdivr
outsl
pop
fstpt
std
mov
pop
sar
xchg
imul
inc
push
dec
cs
xchg
mov
fnstcw
dec
inc
pop
fisttpll
popa
pop
test
sbb
jp
pop
add
out
pop
pop
mov
inc
push
mov
cld
dec
iret
jg
outsb
insl
jae
or
inc
pop
aam
cmp
roll
lret
fwait
xchg
ss
and
jne
icebp
dec
dec
mov
mov
in
xchg
ror
xor
pop
or
cwtl
iret
dec
add
inc
jle
pop
cmpsl
hlt
mov
les
pop
outsb
push
adc
jnp
sbb
cltd
mov
add
dec
out
cli
mov
cmpsb
stos
pusha
popf
xchg
out
inc
es
jnp
push
jb
dec
mov
xchg
dec
sub
fs
imul
push
dec
in
cmpl
cmp
xchg
lret
add
xor
movsl
dec
xor
fwait
add
xchg
nop
inc
aas
sub
xor
imul
pop
sahf
sbb
popl
lods
aad
icebp
pop
mov
arpl
pop
jle
push
inc
ja
pop
inc
cwtl
mov
cli
test
mov
inc
shr
scas
push
out
xor
rorb
and
or
mov
inc
repz
dec
jecxz
xchg
pop
cmp
sti
out
cs
repz
or
repnz
push
mov
sbb
xchg
or
loopne
inc
sahf
scas
dec
rorb
in
xchg
rolb
and
pusha
mov
dec
pop
or
xlat
xchg
mov
mov
xchg
jmp
imul
mov
jle
xchg
in
mov
enter
cltd
pop
push
insb
inc
xchg
fs
dec
mov
or
push
push
std
pop
xchg
sbbl
dec
add
mov
cmp
cmpb
test
hlt
xchg
inc
loop
jmp
imul
xchg
cmpsb
jno
aaa
mov
pushf
fisttpll
sbb
mov
mov
xor
fidivs
mov
push
xor
or
fcomip
dec
sub
pushf
sub
jecxz
xchg
pop
int3
lods
pop
aad
fcmovbe
stc
lds
dec
xchg
stc
pop
cs
push
jo
dec
sarb
sbb
pop
mov
ja
ffree
sarb
in
test
lret
and
test
ljmp
lahf
dec
les
push
xchg
adc
clc
xlat
test
fwait
cli
add
lock
or
addr16
testb
jg
ficoms
mov
mov
decl
ds
fwait
add
popf
pop
xchg
push
lret
adc
dec
aad
leave
push
mov
fwait
bound
repnz
mov
stos
push
test
je
clc
leave
fimull
pop
push
push
pop
insb
pop
cltd
push
fildll
xchg
cmpsl
lret
push
sbb
cmp
addr16
stc
add
jb
jmp
jnp
sbb
repnz
dec
sub
mov
icebp
sub
stos
fstps
es
mov
scas
stc
sub
push
xor
faddl
inc
mov
mov
push
dec
mov
dec
jecxz
pop
pop
repz
push
aaa
mov
xchg
mov
inc
pop
cmpsl
push
mov
mov
jne
out
mov
sub
mov
xchg
cmp
dec
jp
and
or
movsl
test
xchg
xchg
pop
and
pop
ficoms
adc
fs
mov
xchg
rorb
cmpsl
call
adc
xchg
sahf
bound
jno
xchg
lods
subb
dec
out
mov
lods
je
leave
dec
xchg
frstor
push
jmp
xor
jo
cmp
dec
jge
adc
adc
mov
xchg
jne
dec
pusha
leave
pop
pop
inc
filds
loopne
xchg
adc
sbb
jecxz
cmp
mov
int
xchg
insb
mov
test
push
or
rclb
icebp
xchg
mov
mov
or
dec
add
mov
pop
xchg
gs
xchg
bnd
pop
shlb
rcl
shl
sub
fisttps
mov
lahf
fildl
js
xchg
fadds
repz
imul
push
mov
dec
xor
cs
call
adc
xchg
mov
jecxz
addr16
mov
sbb
push
xchg
sub
or
pop
test
dec
outsl
nop
jne,pt
mov
mov
scas
fists
filds
fnstsw
fcompl
pop
or
dec
jnp
or
cmp
arpl
daa
jb
dec
aaa
dec
push
mov
mov
sbb
sub
xchg
lahf
adc
pop
xor
sub
mov
pop
into
in
nop
rclb
mov
and
dec
sbb
and
call
sub
and
mov
fmuls
bound
mov
sbb
ficoms
xor
int3
dec
pop
add
into
nop
inc
xchg
cmp
mov
inc
les
sub
pop
nop
scas
out
imul
push
shld
cmp
test
dec
frstpm(287
mov
int3
fmuls
loop
xchg
imul
sbb
std
pop
xor
push
dec
gs
sub
mov
clc
mov
mov
xor
sbb
shrl
inc
jbe
dec
sahf
in
sbb
lcall
das
scas
jne
pop
mov
div
loop
jp
test
mov
xchg
stos
sbbb
test
jl
test
sub
mov
cwtl
daa
pop
shlb
test
cmp
out
out
xchg
lock
cltd
push
and
xor
mov
and
or
repz
mov
sub
xchg
cmp
push
lret
addr16
and
adc
ja
dec
nop
mov
imulb
dec
dec
mov
fstl
xchg
mov
dec
mov
mov
outsl
dec
cmp
xor
lret
ja
xor
je
adc
cwtl
push
inc
push
sub
cmova
leave
imul
mov
dec
pop
xchg
mov
fwait
lcall
repnz
pop
pop
minps
dec
test
addb
in
mov
popa
add
xchg
push
adc
xchg
cmc
pop
mov
dec
test
test
lods
inc
push
push
jle
xchg
push
repz
ja
je
dec
rcrb
mov
or
xchg
int
mov
shrl
lock
lahf
inc
mov
push
repnz
xchg
inc
or
cmpsl
outsb
xchg
push
push
dec
or
sub
pop
les
cli
dec
jmp
add
int
push
xchg
outsb
push
xchg
fimuls
rol
imul
pushf
pop
and
fidivrl
xchg
fdivrl
sbb
push
jmp
dec
mov
aam
pop
xchg
test
sub
pushf
aas
sbb
ret
ds
ror
lret
stc
loope
dec
test
nop
pop
mov
or
inc
or
out
pop
clc
cmpsl
test
mov
xchg
test
pusha
pop
pop
lret
adc
xor
xchg
insb
pop
mov
cmc
mov
fisubrs
inc
pop
test
aam
int3
dec
hlt
pop
push
add
rclb
ja
icebp
outsl
stos
pop
stc
scas
sbb
dec
sbb
mull
push
pop
xor
dec
data16
mov
cmp
js
pop
data16
push
subl
push
xchg
or
and
or
rcrl
add
dec
fildll
push
pop
insl
xchg
mov
sbb
call
icebp
sbb
cmpsl
loopne
test
imul
lock
rol
jb
aaa
stc
lret
mov
xchg
adc
test
push
xor
inc
jl
dec
repz
adc
push
sbb
out
pop
cmp
cmp
stos
xchg
jno
add
adc
xchg
lahf
jg
mov
lret
test
aas
adc
in
pop
and
sbb
cltd
data16
aaa
push
mov
lods
daa
imul
jmp
pop
in
cld
int3
mov
xchg
pop
cltd
sub
ljmp
rolb
add
dec
adc
mov
ret
pop
and
fs
xchg
cmpb
fwait
push
mov
jno
imul
pop
popf
dec
mov
push
cmp
sub
xchg
cmp
shll
insb
xor
dec
bound
sar
mov
mov
fsubp
fildl
data16
je
pop
jg
lods
test
fxch
gs
decb
std
push
in
jecxz
pop
pop
xchg
nop
lods
pop
pop
pop
iret
push
sbb
mov
imul
pop
dec
or
pop
inc
leave
outsl
pushf
xchg
jbe
xchg
fnstenv
dec
cmpsb
ret
cmp
jge
xchg
repz
iret
adc
sbb
inc
sbb
aam
lods
xchg
mov
sbb
lock
mov
and
jo
fildll
pop
test
outsl
xor
push
inc
mov
adc
xchg
sub
mov
int3
or
jg
test
mov
cmp
inc
hlt
fbstp
pop
sbb
fidivl
fidivs
pop
push
pop
and
mov
je
xlat
push
sub
mov
movsb
cmpsb
je
dec
cmp
insl
sbb
pushf
dec
xchg
mov
fistpll
sub
pop
les
mov
insb
dec
lcall
mov
adc
arpl
push
dec
cli
push
mov
pop
xchg
pop
hlt
mov
pop
mov
xorb
pop
or
mov
in
sub
call
lret
add
add
sbb
mov
add
adc
xchg
or
xchg
sti
cmp
out
xor
pop
stc
adc
ds
push
leave
test
jae
jp
ss
mov
std
mov
xor
push
dec
cmp
leave
lcall
enter
gs
jb
dec
dec
dec
mov
cld
fwait
daa
nop
loope
push
daa
addr16
xchg
sbb
push
loope
ret
int
adcb
mov
inc
cs
pop
sub
sub
fwait
out
xchg
jb
aas
xor
pop
mov
mov
decb
xchg
mov
aaa
mov
fsubrl
sahf
sbb
jle
sbb
xchg
loope
add
shrb
insl
imul
lds
pusha
xchg
sub
cltd
fsubr
call
push
pop
clc
dec
mov
outsl
mov
aam
lahf
push
loopne
stos
mov
or
push
xor
xchg
sbb
mov
sub
or
popf
xchg
sub
push
push
xchg
fstps
loopne
leave
in
cmpsb
mov
xchg
mov
push
or
xchg
ret
pop
mov
call
dec
bound
or
push
xchg
xlat
push
sbb
imul
daa
jne
jl
xchg
test
mov
xor
push
mov
das
xchg
lret
push
adcl
jg
sub
call
xchg
test
dec
dec
pop
xor
sbb
rcrb
sahf
icebp
scas
ja
hlt
mov
pushaw
pop
xchg
or
push
lods
mov
aaa
add
int
cmp
sub
js
arpl
add
inc
aas
stc
inc
filds
inc
dec
jecxz
lds
xchg
xchg
jle
inc
popa
mov
xor
mov
cwtl
sbb
and
or
in
dec
cmp
pop
pop
jo
leave
xchg
aas
xor
push
xchg
push
enter
shlb
mov
push
cltd
or
je
test
or
divl
push
stos
pop
xor
loope
jbe
inc
cli
pop
sbb
adc
loop
xorl
aaa
xchg
mov
fs
inc
aaa
insl
dec
outsb
add
adc
ja
adc
jecxz
add
mov
lods
dec
xlat
add
call
xchg
sbb
fidivs
sti
xorb
pop
insb
push
jg
jb
popf
ficoms
testb
cmp
popf
dec
add
add
mov
pop
cmp
das
sbb
cmpsb
rorl
lods
pop
int3
enter
sbb
repnz
xchg
dec
je
inc
pop
jp
xchg
push
imul
push
push
lods
jl
mov
jno
cmpl
or
jne
pop
add
pop
leave
cmp
sahf
xchg
lea
jle
fdivs
mov
test
popa
ret
adc
or
pusha
sbb
nop
and
jae
add
pop
test
addr16
xor
push
xorl
dec
movzbl
jo
sub
pop
fs
lea
fildl
cltd
insb
jae
mov
nop
aas
mov
sub
pop
cs
testl
fidivrs
push
cmp
jo
pop
dec
dec
or
into
sbb
pop
pop
inc
and
lods
add
push
xchg
mov
sahf
mov
movb
iret
pushf
add
mov
pop
pop
in
pusha
popf
dec
pop
data16
lock
mov
stc
mov
lea
mov
dec
into
adc
js
adc
sbb
xchg
inc
test
and
dec
xchg
ja
mov
xchg
mov
enter
mov
mov
test
xor
stos
das
cmp
movsb
gs
xchg
pop
add
add
pop
lds
push
cmp
add
les
imul
nop
test
xchg
andb
add
stc
or
jge
mov
xchg
cmp
loop
test
test
or
les
mov
mov
roll
pusha
ds
bound
add
xchg
jbe
cmp
lret
sbb
pop
fs
shlb
cmpsl
sub
pushf
jecxz
sub
xorb
scas
lds
pop
cwtl
pop
daa
inc
inc
xor
cmp
cmp
test
pop
fsubp
sub
xor
xchg
es
notb
fisubrs
cmc
dec
xchg
add
cmp
pop
dec
test
test
and
fs
push
pop
push
sbb
cwtl
mov
das
or
xchg
les
push
pop
mov
outsb
mov
nop
in
adcb
nop
jp
lahf
push
sbb
xchg
stos
pop
jnp
push
int
mov
out
xor
jne
test
in
cli
repnz
addb
repnz
rcrl
fwait
fwait
div
mov
push
xchg
adc
cmpl
lods
inc
dec
jmp
outsb
lret
xchg
xchg
cmp
pop
lds
mov
jno
xchg
test
frstor
imul
xor
sub
mov
ja
lret
sbb
mov
xor
or
jl
inc
and
or
stc
icebp
loop
inc
notl
lds
hlt
or
nop
jb
add
mov
pop
pop
mov
xor
sub
bound
fxch
mov
or
add
jb
or
and
sub
movl
inc
cmpsl
and
int3
mov
jl
mov
imul
mov
stos
mov
lret
xchg
ret
jmp
pusha
aaa
addb
push
jmp
out
into
push
cwtl
imul
lods
xchg
cmc
fwait
xchg
outsl
pop
ja
jne
cmp
pop
lret
cltd
jmp
xchg
inc
dec
mov
popa
inc
mov
ja
mov
push
xchg
movsl
sub
or
scas
fnstcw
add
pop
xchg
test
jmp
int
sbb
repz
lea
or
add
inc
push
jecxz
scas
xor
xchg
and
hlt
sbb
flds
sbb
les
lret
test
sbb
jno
and
pop
outsb
jns
pop
xor
lds
push
lcall
in
xchg
inc
std
jo
test
push
rclb
xchg
cs
or
push
xchg
sbb
pop
rcr
pop
imul
jecxz
mov
push
and
pop
fsubrl
mov
daa
adc
mov
cmpsb
jp
pop
insl
jbe
in
jae
xor
pushf
adc
test
repz
xchg
cld
fwait
es
cmp
sub
ror
cmpsb
xchg
sub
xor
jnp
inc
inc
into
cmpsl
xchg
cmp
xchg
addb
mov
outsl
scas
scas
iret
add
clc
push
loope
inc
int
icebp
or
mov
out
sub
rolb
xchg
aam
xchg
xor
lods
mov
xor
addr16
fcmovnbe
in
xchg
out
mov
fsubr
push
and
pop
enter
ret
adc
into
xor
sbb
sub
lock
imull
testl
jl
dec
sub
pop
mov
fmul
push
icebp
mov
fidivs
sbb
orl
jb
push
xchg
mov
flds
icebp
mov
ret
pop
and
out
pandn
imul
loopne
shrl
repnz
int
jo
jg
dec
jmp
into
decb
testb
roll
lea
jnp
ficoms
rorb
and
lods
xor
inc
movsl
xchg
pop
lcall
adc
push
pop
mov
mov
jno
or
pop
addl
dec
aam
mov
scas
fnsave
adc
xchg
or
aad
cmp
bound
jbe
popa
dec
out
repnz
or
xchg
prefetch
pusha
jae
jns
xchg
mov
and
popf
clc
loop
jle
dec
jbe
fdecstp
rcll
xchg
sbb
mov
hlt
dec
imul
adc
xor
add
jbe
jmp
stc
mov
pop
dec
lock
mov
lods
push
adc
and
xlat
out
sbb
inc
mov
mov
outsl
pop
dec
mov
jnp
jl
je
dec
pusha
pop
daa
sbb
hlt
test
xor
mov
push
jg
out
xchg
jo
xchg
scas
movsl
out
les
jg
jne
cs
sub
mov
and
shll
or
movsb
lret
jle
fcmovnbe
or
pop
out
sub
push
cmp
movsb
xchg
jo
aas
adc
sbb
mov
jge
xchg
adc
inc
icebp
popf
xchg
sahf
shl
push
and
xchg
mov
and
negl
mov
lret
xchg
imul
mov
outsl
push
lock
mov
xchg
inc
mov
pop
mov
je
scas
add
jge
push
mov
push
jnp
fstpl
loop
enter
cmc
sbb
dec
mov
or
andl
push
jmp
pop
popa
loop
ja
fs
mov
xchg
das
xchg
push
xchg
jmp
aad
add
sbb
adc
or
int3
aam
pop
in
lahf
stos
dec
xchg
xchg
push
hlt
lcall
pusha
movsl
pop
adc
insl
xchg
mov
pop
adc
lcall
imul
ljmp
hlt
mov
sahf
inc
fidivrs
pop
loop
fidivrs
xor
pop
mov
sub
xchg
pusha
add
mov
pop
sahf
cmc
jo
jo
xor
movsb
les
sbb
jo
sbb
arpl
push
scas
mov
inc
pop
pop
pop
mov
shll
xchg
sub
mov
ret
dec
push
dec
dec
out
inc
xchg
or
scas
xchg
out
or
pop
xor
sar
mov
aam
inc
stos
int
fdivp
cs
or
xor
pop
dec
xor
mov
xchg
pop
pop
cmpsl
repnz
stos
out
mov
mov
adc
test
sub
nop
xchg
xchg
sbb
xchg
into
aad
push
xor
inc
inc
fs
xchg
inc
inc
jge
pop
xchg
cli
mov
inc
out
pop
pop
sbb
in
sub
xchg
outsl
loope,pt
xchg
pop
mov
or
and
outsb
mov
roll
xor
or
outsb
cs
lea
xchg
and
inc
mov
daa
lock
mov
or
movsb
subl
std
cmc
dec
aam
push
insl
jno
cli
xchg
dec
push
mov
add
das
out
sbb
enter
xchg
pop
iret
stos
cwtl
out
loop
xchg
iret
inc
pop
mov
dec
xchg
sub
popa
lods
js
and
mov
stos
mov
fmul
add
and
nop
testb
rolb
fldt
xchg
add
fsubrl
test
das
add
add
bound
pop
sti
push
jmp
mov
scas
hlt
sub
push
or
nop
jbe
cwtl
dec
or
loope
negb
test
mov
pop
and
stc
xor
pop
mov
pusha
pop
push
test
icebp
sti
jns
push
lcall
mov
cwtl
mov
rcll
jb
outsb
pushf
cs
dec
jne
inc
into
rorl
ja
jno
adc
mov
mov
fsts
les
aaa
jmp
pop
enter
xor
js
inc
movsb
test
push
dec
gs
pop
aas
jg
inc
xchg
iret
mov
adc
pop
dec
dec
mov
fsubrl
cmpsb
shll
jp
aad
xchg
pop
mov
nop
xchg
or
mov
repnz
pop
adc
hlt
mov
das
loope
inc
clc
inc
add
add
add
fwait
callw
push
mov
dec
enter
mov
add
fldcw
and
dec
call
test
int3
pop
nop
loope
jmp
scas
xchg
adc
mov
cltd
jmp
stc
in
hlt
sub
or
sbb
bound
adc
dec
std
lods
aad
and
nop
push
dec
inc
hlt
dec
movl
aam
fidivrs
xchg
arpl
xchg
sahf
mov
fs
jnp
loopne
mov
cli
and
cmp
sar
aaa
cli
dec
mov
jge
fcmovnb
sbb
mov
push
mov
cmp
rcl
ret
mov
mov
out
adc
iret
mov
dec
popa
push
push
and
dec
in
xchg
mov
popa
push
pop
push
in
mov
push
xlat
xchg
stos
lahf
mov
pop
dec
pop
ss
push
push
xchg
push
push
popf
add
push
xor
or
aaa
lds
dec
mov
in
je
dec
and
fisubrl
scas
outsl
fcomps
frstor
rcrb
jns
out
mov
xchg
out
cmp
inc
xchg
frstor
orl
jg
add
xor
xchg
cltd
iret
out
pop
js
in
xchg
in
xchg
scas
fld1
orb
subb
xchg
adc
jnp
pop
loop
dec
mov
adc
cli
xchg
pusha
cwtl
inc
dec
xor
pop
mov
and
jae
scas
cwtl
fidivl
pop
inc
jnp
aad
jb
mov
test
xchg
test
mov
addr16
mov
mov
in
pop
jle
ret
dec
pop
repz
dec
repnz
sbb
insb
cmp
adc
shrl
xchg
movsb
xchg
fidivrl
sahf
sub
out
loope
orb
pushf
mov
dec
sbb
ja
mov
enter
push
inc
sbb
cmp
adc
aas
movsb
fcoms
cld
xchg
mov
insl
jns
test
xchg
cld
sbb
popa
push
mov
out
and
add
push
aam
sbbb
jo
stos
push
test
push
inc
xchg
jbe
xlat
add
xchg
pop
jp
negb
mov
inc
push
dec
popa
sbb
fldenv
dec
jmp
or
jp
pop
inc
rcrb
cs
loope
and
repz
ja
pop
dec
out
clc
in
int3
pop
cltd
scas
xchg
xor
sbb
add
cmove
movsb
std
in
cmpsb
jp
xor
addr16
pop
idivl
jns
push
xlat
mov
lods
cmpsl
stos
dec
add
popa
mov
sbb
mov
add
pop
dec
jns
xchg
int3
ljmp
insb
jecxz
orl
push
xchg
insb
push
xchg
les
ja
push
xor
jb
cmp
js
sub
data16
adc
dec
sub
fdivrs
lock
les
sahf
xchg
pop
inc
adc
push
or
int3
and
mov
aam
pop
dec
xchg
xchg
pushf
lea
and
lock
push
movsb
iret
pushf
xchg
cmp
adc
pop
mov
adc
rolb
cld
rcl
jmp
push
sahf
adc
xchg
pop
sub
inc
pop
xchg
or
cltd
test
lea
shl
or
jno
jbe
inc
cwtl
outsl
stos
mov
and
sbb
jae
cmp
xchg
adc
xor
testl
hlt
jo
pushf
xchg
test
ret
cmp
sbb
mov
pop
enter
imul
lock
xor
mov
adc
sub
mov
pop
bound
js
jb
ds
pop
xor
dec
push
dec
inc
lcall
nop
call
ja
shlb
loopne
mov
je
pop
xchg
adc
movsl
mov
xchg
idivl
mov
mov
adcb
lods
enter
push
mov
stos
pop
jecxz
push
setns
dec
in
clc
lret
inc
lods
sbb
int
ss
mov
cltd
repz
cld
js
and
out
xchg
out
adc
cltd
test
ljmp
mov
sub
jnp
clc
int3
mov
push
gs
mov
or
jle
bound
dec
sti
mov
pusha
repz
xchg
mov
clc
adc
out
test
jmp
wbinvd
out
sbb
ja
pop
dec
dec
fs
mov
mov
inc
push
loope
std
cwtl
inc
sahf
cmpsl
mull
orb
aas
add
icebp
xchg
insb
nop
xchg
hlt
add
pop
push
jp
sbb
xchg
rorb
cs
adc
adc
loop
inc
pop
mov
push
imul
out
cmp
sbbb
xchg
xchg
jb
pop
mov
cmc
fisttpl
out
xor
push
test
insb
out
mov
xor
cltd
dec
out
mov
fwait
xor
pop
dec
repz
rol
pop
mov
cmpl
cmp
xlat
int
ficoms
and
imul
enter
lret
adc
push
jp
dec
mov
lret
mov
jl
xchg
loop
xor
iret
js
and
jb
or
cmp
and
pop
push
dec
repz
adc
test
cmp
jmp
mov
pop
dec
lock
mov
xor
test
mov
dec
insl
out
mov
push
call
dec
jno
sub
ds
push
push
dec
jne
xchg
out
rorl
cmp
lea
in
test
jne
out
into
gs
addr16
insl
cmpsl
mov
mov
cltd
les
xchg
rcr
fcom
xchg
cli
lods
test
popl
sbb
add
cs
sbb
cmp
and
mov
pop
dec
mulps
and
jl
cwtl
popf
popa
mov
sub
outsl
xchg
sub
and
push
cmpsb
pop
imul
push
xchg
out
mov
dec
mulb
sbb
cmp
scas
sub
aas
sbb
nop
out
ret
call
and
pop
mov
and
lret
mov
shrb
xchg
mov
ret
inc
stc
ror
dec
mov
inc
and
xor
pop
jmp
roll
pop
test
bound
in
test
and
xchg
or
invd
pop
dec
je
jo
mov
jns
cs
loop
cmp
fisubs
in
mov
mov
call
fwait
int
cld
jle
jl
dec
lea
test
test
dec
enter
dec
dec
shlb
into
sbb
hlt
xchg
jg
stos
mov
dec
xchg
push
xchg
loop
adc
push
gs
pop
sbb
xchg
aaa
adc
xor
mov
xchg
sbb
ds
adc
loopne
outsl
dec
out
aad
ror
orb
and
xor
shrl
divb
dec
pushf
sbb
stos
pop
pop
movsb
out
test
sub
stc
aad
mov
pop
test
push
nop
jl,pn
mov
and
iret
inc
dec
xor
pop
clc
adc
insl
ret
add
into
enter
dec
cli
sbb
movzwl
lret
jns
push
frstor
fstpt
xchg
inc
jmp
mov
popf
movsb
stc
xchg
and
imul
adc
mov
adc
insl
xor
mov
mov
fsubl
jae
sti
inc
pop
dec
ret
test
push
fbld
int
and
stc
popf
mov
dec
mov
jmp
mov
push
mov
ja
add
xchg
sahf
insl
lret
lods
loope
jae,pt
inc
push
mov
enter
jge
leave
mov
roll
pop
and
mov
jl
sbb
dec
pop
cmp
mov
xchg
sahf
loope
pop
xchg
fsubr
pop
jle
mov
sub
xchg
inc
sbbl
movsb
and
scas
xchg
xchg
pop
in
out
icebp
mov
and
xor
loop
mov
stos
test
test
dec
dec
enter
jle
out
dec
push
fs
mov
loopne
test
aad
cmp
arpl
dec
push
popa
and
push
mov
sti
fidivs
cmp
bound
fdivs
test
ja
shl
rcll
ficoml
cmp
push
and
pop
add
rcll
in
std
fsubrl
xor
cltd
movsl
lahf
dec
outsl
stos
insb
mov
movsb
bound
pushf
pushf
stc
jecxz
fisubrs
push
repz
jle
cmovg
mov
pop
pop
pop
into
mov
cmp
out
xor
push
mov
mov
lock
dec
repnz
inc
or
movsl
lods
xchg
out
xchg
cmpb
cmpb
in
pop
xchg
fs
xchg
inc
mov
pop
dec
mov
and
push
xchg
push
inc
sarl
add
mov
out
mov
fs
inc
dec
jge
mov
pushl
xchg
into
call
dec
dec
das
pop
imulb
dec
mov
mov
filds
addr16
jmp
and
imul
lock
ss
pop
mov
push
sub
outsl
cmp
cmpsb
inc
push
xorb
dec
jne
lcall
std
sub
adc
je
pop
or
in
js
mov
insb
add
dec
add
mov
mov
fdivrp
sti
xchg
mov
outsb
jo
jmp
stos
repz
cltd
addb
xchg
pop
pop
push
imul
cmp
inc
mov
sbb
cmp
push
stos
xchg
stc
aad
xchg
adc
insb
shll
and
aam
dec
push
fucomp
mul
xchg
or
and
adc
test
dec
jle
or
lods
sbbb
pop
push
xlat
out
popf
push
ja
xchg
jg
in
iret
mov
outsb
jne
xor
dec
sahf
mov
mov
pusha
adc
adc
xorb
push
sub
clc
dec
inc
push
jecxz
mov
mov
dec
mov
mov
dec
out
xor
mov
pop
cwtl
xchg
cmp
xchg
add
mov
decb
inc
inc
cmp
rclb
les
xlat
cli
cwtl
cmp
xchg
sub
fsubl
xor
jbe
jge
push
fisttps
jbe
push
cmp
imul
adc
inc
jge
inc
push
jb
fwait
xchg
pop
inc
lahf
sahf
lahf
addl
pop
dec
sahf
xor
sbb
test
jl
aam
jb
inc
insb
push
inc
repz
fimuls
scas
or
xchg
lods
xor
sub
fcoml
pop
fisttps
fwait
mov
ljmp
or
leave
iret
lods
call
sbb
push
repnz
xlat
dec
es
xchg
fwait
jne
sub
mov
mov
sbb
dec
or
and
xchg
sbb
sti
sti
mov
xchg
xor
push
xchg
pop
sub
inc
dec
std
mov
mov
pop
xchg
leave
xchg
jmp
mov
stos
xchg
xchg
rcrl
sbb
int
mov
bound
dec
xchg
and
mov
je
pop
lods
mov
cmp
pop
dec
mov
outsb
add
mov
stos
lcall
sbb
jne
jp
adc
mov
or
dec
cmp
xchg
adc
xor
lods
scas
push
mov
push
ljmp
in
daa
add
pusha
push
mov
test
je
jnp
sbb
testl
mov
mov
jge
mov
xor
dec
stc
imul
xchg
xchg
pop
adc
in
dec
outsl
xchg
xchg
dec
test
popf
cmc
pop
inc
repz
pop
aam
rol
scas
push
cmpsb
xchg
inc
mov
addr16
mov
xlat
xchg
xchg
nop
mov
pop
jno
fisttpl
cmp
mov
sbb
in
pop
xchg
std
test
nop
ficomps
out
clc
mov
push
or
jne
pop
test
int
mov
arpl
inc
push
in
mov
iret
xchg
aaa
inc
push
jne
pop
jbe
xchg
xor
adc
dec
or
push
testb
dec
inc
gs
mov
insb
lods
xchg
je
mov
cmp
out
sub
push
out
xchg
lock
jl
jns
sbbl
lods
ss
rcrl
adc
sbb
fwait
xchg
into
and
cmp
sub
xor
test
push
push
shll
sub
ret
mov
push
or
cwtl
bound
lods
out
jl,pt
and
push
inc
adc
shlb
dec
cltd
incb
aam
mov
or
dec
jno
add
xlat
dec
pop
push
jns
pop
xor
xchg
insl
sbb
push
pop
fwait
scas
stos
sahf
add
repnz
push
lods
aas
es
pop
add
xor
mov
mov
aad
fs
ja
mov
cmp
ucomiss
and
int3
jg
push
push
rcll
mov
fwait
popf
addr16
sbb
or
dec
popa
push
push
dec
adc
push
call
ret
and
inc
cmpsb
mov
shlb
xchg
pop
xchg
incb
or
cmp
xor
out
push
xchg
je
cmp
movsb
dec
dec
fsub
inc
and
mov
cmp
mov
inc
cltd
movl
dec
ficomps
mov
sbb
out
addb
aam
test
rcll
inc
mov
jns
imul
jecxz
add
inc
and
pop
pop
mov
xor
jbe
test
mov
xchg
mov
jns
movsb
lods
lods
push
repnz
jg
std
xchg
jge
xchg
push
inc
int
rcl
mov
sub
rclb
shll
fcompl
fsubl
imul
imul
dec
es
ja
jle
out
or
mov
and
cmp
sub
or
arpl
and
xor
pop
or
pop
in
sbb
push
mov
ljmp
roll
stos
pop
out
in
out
mov
jns
nop
jae
daa
sbb
dec
pop
sbb
jle
mov
push
les
cmp
or
cmp
inc
jnp
repz
or
fsubrs
lds
fwait
xchg
pop
mov
daa
outsl
in
roll
daa
test
aam
xchg
mov
and
orb
mov
jl
test
sbb
arpl
pop
or
mov
stc
adc
sbb
pop
jg
cmp
xchg
adc
leave
bound
flds
or
adc
out
sbb
fwait
decb
push
xchg
or
xor
push
aas
out
sti
xchg
dec
fsts
cmpsl
mov
mov
pop
add
xchg
jmp
pusha
aas
fs
dec
repnz
iret
nop
pop
sub
mov
xchg
fstpl
leave
inc
sahf
sbb
testb
out
mov
pop
sub
xor
pop
cld
mov
sub
pop
push
xchg
fistl
call
cmc
stos
mov
push
jb
enter
f2xm1
push
xchg
mov
mov
int3
nop
loopne
jne
dec
or
arpl
cwtl
aas
aaa
daa
xchg
fs
xor
dec
dec
cmp
aas
mov
inc
fisubs
js
xchg
out
fisttpl
mov
mov
dec
dec
jge
shrb
in
jno
xchg
and
fwait
jbe
outsb
jnp
and
cmp
pop
dec
call
bound
pop
fidivl
xchg
jno
xchg
mov
testl
std
fsubs
test
dec
call
cmpsl
and
in
pop
ret
repnz
push
mov
push
outsb
in
jnp
adcb
xchg
cmp
push
test
inc
sub
push
mov
push
or
push
xchg
push
dec
mov
mov
xchg
cli
aam
dec
shl
xchg
pop
dec
icebp
lods
ljmp
adc
cmpsl
xchg
cmp
ret
pop
dec
xlat
mov
loope
out
movsb
lret
cmp
jns
aaa
rcrb
xchg
and
pop
sub
adc
sub
js
sbb
dec
pusha
lods
notb
xchg
or
pop
sbb
mov
faddl
rcll
dec
movups
mov
repz
xor
xor
gs
cmp
lret
push
mov
cltd
loop
out
rol
pop
ss
addb
sbb
addl
ret
addr16
mov
nop
ja
in
adc
out
sbbl
lcall
inc
pusha
shrl
mov
or
mov
sub
mov
pop
mov
mov
pop
lss
pop
xchg
out
xor
aas
xlat
push
icebp
cmp
pop
mov
int3
xchg
loope
push
pushf
test
ror
and
sub
jmp
das
pop
jno
and
fdivrp
jl
xor
xor
lock
inc
xchg
push
frstor
pop
mov
rcrl
or
push
scas
es
inc
andb
out
in
loope
cwtl
push
int
shrb
pop
xor
popf
mov
test
jle
xchg
ja
mov
push
lea
mov
pusha
push
or
popf
xchg
jbe
pop
adc
push
cmp
fcoml
sahf
test
fidivl
mov
ljmp
adc
fdivrs
test
negl
movsb
pop
imul
test
xchg
mov
in
cmpsl
xchg
xchg
testl
lcall
mov
jmp
dec
test
xchg
ljmp
lock
rcll
leave
xchg
mov
bswap
enter
pop
inc
dec
push
in
cmp
sub
adc
mov
cmc
ret
pop
xchg
sub
mov
push
aad
stos
sbb
cld
push
pop
ja
xchg
and
mov
jae
xchg
out
ljmp
call
incb
adc
ljmp
push
fwait
cmp
fsubr
and
mov
out
dec
jo
add
push
dec
fs
xchg
push
sbb
or
rcrl
sub
addr16
jns
xchg
loopne
outsb
lock
mov
sbb
shll
mov
inc
rcll
inc
jle
fistps
push
pop
test
in
lods
incl
pop
or
je
xchg
aas
mov
push
je
xor
mov
outsb
inc
jbe
jae
xor
push
dec
push
mov
add
sub
adc
mov
jns
push
shll
dec
adc
dec
frstor
mov
adc
pop
xchg
lcall
imul
hlt
jae
dec
xchg
dec
pop
jbe
sbbl
inc
xchg
out
cmp
mov
mov
icebp
cltd
test
je
aam
cmp
xchg
inc
sbb
pop
and
ret
fcom
pop
rcrl
sarb
xor
cmp
mov
int
dec
fsub
outsl
cli
sbb
sub
cmp
mov
mov
push
test
xor
test
mov
daa
cmpsl
jae
fildl
xor
xchg
jo
or
xor
call
insl
adc
add
dec
xchg
js
push
dec
sti
test
push
popf
pop
pop
cli
cmpsb
dec
ljmp
pop
or
sub
pop
rclb
dec
xor
adc
fidivs
ja
xchg
and
push
inc
repnz
or
sbb
xchg
mov
mov
push
inc
or
fxch
adcb
mov
test
mov
imul
xlat
aas
cmp
mov
loopne
mov
dec
ds
ret
cmp
push
call
shl
outsb
mov
sub
call
scas
fnstsw
out
jno
jae
mov
nop
xlat
cltd
and
push
dec
mov
mov
dec
fdivrs
lret
mov
xchg
ja
fchs
dec
pop
pop
or
xchg
sub
sub
or
dec
jo
xor
push
xor
add
nop
dec
jnp
mov
aad
or
pop
imul
adcb
pop
xchg
jecxz
inc
clc
insl
out
nop
dec
add
sti
pop
lods
pop
mov
shlb
lds
or
push
stos
sarl
incb
adc
push
lods
dec
push
dec
faddl
xchg
test
insl
or
cld
fldt
pop
pop
stos
sub
push
inc
je
xor
sbb
pop
jl
mov
push
aas
mov
push
fs
outsl
push
xchg
jae
outsl
sbbb
ss
lods
xchg
je
jno
dec
int
mov
sub
adcl
aaa
inc
bound
pop
inc
add
xchg
std
sub
inc
test
inc
pop
scas
mov
dec
xchg
je
out
sub
xchg
fisttpll
int3
fistl
cmp
outsb
test
pop
cmpsb
mov
lcall
dec
jnp
inc
dec
jg
in
sub
in
mov
in
xchg
mov
int3
mov
cmp
dec
iret
mov
pop
sti
aas
fisttpll
jl
fucom
push
pusha
adc
jns
jne
pop
nop
rcrb
scas
inc
scas
mov
mov
stc
scas
lcall
out
psubusw
pop
adc
pop
stos
add
in
iret
scas
int3
jnp
nop
xchg
xchg
or
divl
leave
inc
lret
or
test
lods
data16
jae
xor
lret
mov
xor
mov
inc
daa
out
pop
dec
mov
aaa
or
stos
dec
roll
in
push
arpl
leave
lea
cmpsl
out
push
jnp
sbb
test
pop
cmp
xchg
rcrb
cmp
xchg
jecxz
sub
inc
fmuls
sbb
xor
repz
pushf
hlt
jl
xor
test
stos
mov
push
mov
gs
xchg
cmp
enter
leave
push
pop
cmp
in
lock
test
jl
rcl
push
xchg
sbb
testl
push
ja
xchg
dec
fwait
add
xor
jb
lods
push
insb
fisubrs
cmp
pop
shlb
jecxz
add
jo
or
adc
rclb
and
cmp
insb
adc
jle
cs
loop
popf
xchg
dec
fwait
divps
sbb
xchg
mov
push
call
scas
outsb
out
push
bt
pop
cwtl
and
pop
addb
das
int3
movsb
cmpsl
push
dec
or
orb
test
pop
clc
xchg
int
jp
dec
cltd
leave
mov
mov
xchg
dec
lea
sub
adc
ja
dec
xor
cmp
jne
testl
or
cmpsb
xchg
sahf
xor
decl
push
cli
dec
stc
loop
or
cs
stos
lods
jb
lds
ja
jnp
xchg
notb
hlt
dec
leave
stos
pop
jg
mov
ds
test
xchg
arpl
jb
inc
pop
adc
push
testb
dec
cs
les
js
adc
lods
lahf
iret
sbb
insb
xchg
frstor
sahf
cmp
sti
stos
lret
shll
sbb
cmc
inc
sbb
mov
or
les
iret
jg
shl
divb
stc
xor
cmp
sub
or
dec
cbtw
out
cld
push
add
xchg
mov
xchg
pop
aaa
xor
pop
js
pop
push
shll
xchg
xchg
adc
jo
pushf
dec
or
cmp
sub
cltd
and
out
push
adc
pop
imul
push
sbb
jns
pop
mov
pop
data16
outsl
mov
xchg
push
and
ret
pop
push
ja
adc
pop
je
mov
fwait
sbb
pop
mov
loope
jnp
and
pop
movsb
sbb
dec
xlat
sbb
xchg
fistpll
mov
test
ror
inc
pusha
sbb
mov
sarb
addr16
cmp
xchg
fs
mov
dec
iret
int
clc
or
fstpl
add
in
mov
pop
jp
cmp
inc
ret
jge
xchg
pop
ds
cmp
fisttps
mov
ss
addl
int3
mov
dec
adcb
xor
xchg
xchg
adc
leave
fsubrs
pop
les
lods
enter
scas
out
fiadds
sbb
cwtl
je
cltd
ljmp
stos
outsl
out
dec
push
fsubs
mov
push
outsb
sbb
jl
jmp
pop
aam
fisubs
xchg
negl
dec
stos
mov
xor
scas
popa
les
subb
enter
pop
aas
ret
addr16
add
cmpsl
jge
iret
dec
pop
cmp
add
dec
out
stc
xchg
adcl
jno
adcb
xchg
mov
pop
movsb
decl
xchg
cmc
sub
pop
add
xchg
negl
inc
and
movsb
cld
sub
mov
mov
xor
ljmp
xchg
imul
sbb
mov
scas
jnp
xchg
xchg
fdivs
dec
inc
sbb
push
xchg
inc
pop
xchg
movsb
mov
insb
lods
mov
sub
dec
popl
je
mov
cli
add
pop
xchg
das
test
mov
push
fistpll
inc
xchg
adc
repnz
pop
jecxz
fmull
lahf
sub
sbb
mov
or
pop
pop
repz
push
or
push
add
sub
outsb
pop
cs
loope
pop
out
aam
aas
popf
dec
xchg
ret
xchg
cmp
or
jbe
jmp
adc
sti
push
cmp
loop
fiadds
repnz
lock
les
push
cltd
testl
xor
mov
sbb
fisttps
sbb
std
outsl
mov
out
iret
pop
cmp
add
mov
push
cmpsb
jg
adc
ja
dec
lock
lds
pop
sarl
and
inc
xor
and
popa
mov
imul
into
pop
sbb
xlat
mov
leave
loope
pop
mov
cmpsl
dec
cmp
push
jbe
push
pop
xor
push
cltd
outsl
adc
xchg
mov
outsl
out
xlat
adcl
arpl
call
dec
dec
push
pop
xchg
test
nop
out
insl
push
mov
push
xchg
push
xlat
in
aad
in
pop
push
or
shll
push
xchg
enter
les
cld
dec
icebp
scas
push
pushf
pop
inc
mov
mov
mov
push
pop
pop
add
mov
nop
xor
clc
pusha
hlt
mov
lret
cmpsb
cmpsb
enter
hlt
add
lock
xchg
in
repnz
mov
jae
xchg
pop
jb
pop
lds
pop
ret
pop
and
pop
dec
ja
sub
pop
mov
jecxz
mov
scas
mov
mov
push
imul
mov
cmp
ficompl
cmpsl
sti
ds
or
xchg
inc
cmp
lahf
or
fldenv
faddl
and
int
mov
fyl2x
in
pop
sarb
shl
push
gs
ja
cld
dec
jmp
in
inc
addb
sbb
sub
lods
js
mov
in
mov
fisubs
xor
and
hlt
loopne
addr16
test
push
xchg
jae
xor
aas
js
pop
data16
lock
xchg
push
outsb
lods
popa
jo
add
enter
in
mov
ja
pop
popf
sbb
out
andb
fildl
push
and
ja
loope
push
test
xchg
std
mov
movsb
adc
xchg
or
cmp
mov
ljmp
test
stc
out
push
xchg
lcall
add
mov
test
pop
add
dec
in
push
clc
jl
mov
add
mov
sbb
xor
test
dec
xchg
and
inc
test
cmc
mov
adc
les
int3
and
leave
inc
or
jo
pushf
cld
or
dec
mov
jnp
xor
mov
adc
loop
jb
aam
vmptrld
pushf
xchg
jnp
int3
lahf
mov
loopne
std
or
in
stos
dec
push
mov
in
mov
pop
cmc
jmp
scas
cmpsl
jmp
test
movsl
addr16
mov
pop
xor
and
mov
pop
xchg
sub
sub
mov
sub
pop
inc
inc
pop
add
sub
pop
adc
lret
out
or
push
inc
testb
outsl
ja
push
adc
call
dec
pop
dec
in
jbe
hlt
fnstenv
xchg
inc
sbb
xor
sub
lds
je
or
dec
add
mov
pop
out
add
xorl
dec
add
jle
pop
cmp
mov
mov
cld
rclb
addl
xchg
mov
les
icebp
dec
pop
test
cmp
cmc
add
jge
xchg
jns
dec
pop
cmpsb
add
incb
adcb
gs
sub
aas
xchg
pop
add
pop
int3
addr16
cltd
imul
stc
enter
sbb
pop
je
inc
push
arpl
rcl
addr16
mov
mov
push
xchg
jmp
iret
negb
lds
push
inc
insb
adc
mov
insl
cmp
cmc
pop
add
mov
push
das
sub
rolb
push
lea
int3
dec
ficoml
out
movsb
xchg
add
int3
clc
pop
inc
push
or
pop
in
pop
adc
xchg
push
outsl
js
push
outsl
ja
mov
fdivl
sub
in
roll
in
fstpt
xor
xchg
inc
push
popa
cmp
xchg
out
jnp
xchg
out
push
nop
imul
cmp
xchg
roll
pop
rcrl
dec
lcall
xchg
clc
rcrl
ja
das
rorl
cmp
xchg
or
fwait
push
movsl
push
push
dec
cmc
cwtl
jp
aam
pop
sahf
pushf
repz
fistpl
aas
lods
insb
mov
pop
sbb
mov
test
arpl
mov
dec
shlb
shl
pop
shl
jbe
sahf
push
cmpsl
mov
enter
pop
push
mov
dec
mov
ja
push
aam
hlt
xchg
ret
push
fisttpll
lea
inc
movsl
add
or
test
jl
mov
push
add
setle
sahf
arpl
jmp
adc
mov
scas
jge
sbb
in
dec
xor
out
and
xchg
lods
bound
push
sbb
jl
mov
sbb
xchg
mov
fsubrl
aaa
pop
jae
cmc
and
adc
into
mov
ja
push
aaa
xchg
incl
xchg
fwait
addr16
ret
repnz
sub
incb
out
sub
cmp
insl
loopne
mov
mov
fildl
notb
icebp
mov
pop
movsl
and
push
push
mov
call
rolb
std
dec
ds
adc
pusha
fimull
inc
jb
dec
pop
cmp
or
cmp
sub
add
test
pop
mov
call
dec
and
pop
jbe
pop
scas
cltd
pop
xchg
or
icebp
xchg
ljmp
mov
cmp
js
inc
test
push
ljmp
cld
dec
add
cmp
mov
lods
insb
cs
fwait
scas
in
cmpsl
cmp
mov
pop
push
dec
add
divb
mov
xorl
dec
lcall
mov
out
sub
pop
divl
mov
add
aad
mov
sbb
push
mov
xchg
inc
shlb
lahf
mov
dec
fbstp
pop
outsb
jg
inc
orb
fimull
dec
push
lret
push
mov
xchg
jp
cmp
out
mov
daa
adc
dec
addr16
mov
adc
in
xchg
dec
sti
int
les
cmp
imul
mov
addr16
push
in
mov
xchg
jp
inc
sbb
negb
add
in
nop
dec
push
sbb
cmp
xor
push
mov
aas
mov
shr
xchg
inc
cmc
dec
call
loop
cmp
int3
imul
jecxz
mov
xor
aas
adcb
xchg
sub
jecxz
popf
mov
ds
mov
pusha
pop
aam
scas
or
jbe
cmp
xchg
pop
dec
rorl
sub
pop
lea
xchg
arpl
xor
dec
cmp
jg
push
or
je
or
in
xchg
js
dec
mov
sub
movsl
pop
lock
repz
jmp
jns
dec
dec
das
dec
push
mov
xchg
jnp
movsb
pop
gs
jnp
mov
xchg
movsl
xchg
dec
or
push
jo
dec
push
loope
pusha
mov
mov
clc
dec
insb
ljmp
hlt
test
pop
adc
dec
or
pop
js
pop
xchg
push
imul
or
lea
xchg
push
xorb
lods
les
mov
sar
mov
arpl
dec
outsl
je
dec
pop
xchg
cmp
push
or
addr16
mov
frstor
dec
cmp
mov
or
sub
popf
xchg
adc
mov
mov
pop
fimull
je
in
vpsubsb
pusha
xor
xchg
pop
test
repnz
pop
pushf
mov
sahf
pop
xchg
clc
clc
out
lcall
cld
popf
cmpsl
sbb
imul
sbb
xchg
dec
jecxz
xorb
dec
inc
jne
lret
cmpsl
push
pop
gs
inc
lods
dec
bound
dec
push
jge
sti
aas
into
lret
xor
push
sbb
inc
jae
mov
loop
nop
xor
cltd
xchg
shl
subb
out
pop
pushl
aam
xchg
adc
pusha
cwtl
mov
popf
xchg
sub
cltd
and
out
test
daa
repnz
cwtl
jle
xchg
dec
and
les
pop
test
dec
rorb
dec
cmc
adc
adc
jae
xchg
shl
pop
push
test
pop
outsl
cltd
cmc
ds
sub
test
es
adc
gs
cltd
push
loope
mov
iret
ficompl
inc
inc
out
loopne
xchg
and
jle
in
insb
sbb
arpl
mov
jle
lret
pop
push
mov
add
aas
movsb
aam
andl
stos
pop
cltd
lea
mov
dec
push
rcrb
dec
aad
dec
in
addb
push
and
inc
lods
test
vlddqu
cmpsb
mov
outsl
dec
dec
ret
loope
add
xchg
xchg
dec
pop
add
dec
fstpt
cmovnp
rol
pop
xor
pop
mov
cwtl
fisubs
cmc
push
orl
cmpsb
mov
cwtl
dec
dec
fs
movsb
cmp
cltd
xor
dec
xchg
std
enter
lods
cmp
dec
lret
sahf
push
rcrl
pop
xchg
lods
inc
mov
cli
add
xchg
and
xchg
repnz
inc
movd
lahf
fstl
inc
popf
divb
xchg
adc
or
loop
push
outsb
jmp
xor
add
cli
xchg
push
jp
dec
lret
in
xchg
enter
cvtpi2ps
xor
shl
pusha
clc
dec
fisubs
scas
lahf
xchg
mov
adcb
popf
lods
test
pop
xor
xchg
imul
cmp
movsb
xchg
jno
xchg
mov
xchg
clc
addl
test
xchg
jge
xchg
or
shr
push
mov
lds
test
or
pop
addr16
ja
lods
push
pop
clc
mov
pop
xchg
scas
cld
mov
nop
lods
dec
ret
call
dec
push
mov
xchg
dec
dec
mov
pop
xchg
pushf
jmp
sub
push
dec
mov
in
mov
jecxz
test
cmpsl
jg
push
imul
xchg
mov
loop
ja
pop
pop
sub
aad
gs
test
add
cltd
leave
mov
pop
clc
subl
fbld
cmpsl
mov
adc
aad
sub
xorb
xchg
pop
fstl
pop
outsb
jge
icebp
es
shrl
insb
xchg
into
xchg
outsl
adc
push
lea
cmpsl
mov
rcrb
mov
or
jno
xchg
ljmp
pop
inc
lods
sub
xchg
push
ja
ljmp
inc
lods
inc
fists
ret
das
fisubrs
sub
aad
xor
adc
xchg
repz
inc
lock
push
lods
pop
xchg
xchg
pop
or
inc
out
ja
popa
cwtl
jl
xchg
ficomps
pop
sbb
test
les
paddsb
pop
push
mov
inc
sub
jae
gs
test
pushf
cmc
jmp
in
orb
test
push
cmp
push
test
pop
fimuls
pop
aam
icebp
xchg
mov
arpl
push
loop
orl
cltd
and
xor
and
jo
mov
or
inc
adc
inc
ljmp
subb
mov
cmpsl
and
ss
outsl
adc
adc
inc
fcomps
scas
sbb
mov
mov
test
repnz
mov
inc
pop
ret
lds
stc
push
xchg
push
adc
xor
outsl
xor
or
stos
mov
jne
lcall
adc
movsl
mov
jbe
inc
mov
pop
xchg
jl
and
sbb
jo
inc
in
loop
dec
jnp
das
nop
xchg
lods
setne
jns
in
and
dec
or
lods
xchg
ss
sahf
imul
rorb
repz
add
stc
pop
or
imul
jl
inc
jnp
cli
cmc
dec
cld
mov
cmp
test
ret
xchg
dec
outsl
cmpsb
mov
js
xchg
mov
negb
pop
adc
cmpsl
orb
mov
mov
ja
sub
jae
dec
pop
int
cli
ret
ja
mov
add
pop
outsb
loopne
clc
int3
pop
mov
scas
and
xchg
loopne
aas
push
in
shl
xchg
fsubrs
mov
into
test
mov
sub
je
scas
add
dec
jbe
sbb
mov
or
cwtl
pushl
xchg
push
adc
dec
jge
lret
mov
xchg
lcall
jecxz
xor
add
mov
add
mov
jns
xchg
cmp
pop
jns
fsubp
jecxz
mov
ret
mov
fs
aad
dec
sub
jb
fdivrl
xchg
mov
inc
or
dec
mov
lods
cmp
mov
mov
or
pop
inc
popa
cmp
movsb
in
jecxz
xchg
jecxz
add
dec
pop
jp
adc
xor
imul
insb
sahf
in
int
jmp
data16
ficomps
pop
xchg
sbb
mov
loopne
shlb
popf
mov
stc
mov
les
mov
pushf
pusha
jp
loopne
mov
sbb
ljmp
cmpb
xchg
sbb
out
add
mov
je
pop
mov
xchg
jge
and
pop
loopne
dec
inc
jne
pop
in
das
jl
xchg
push
pop
jmp
movsb
cmp
mov
lea
pop
xchg
mov
test
pusha
dec
pop
ljmp
mov
jo
fisttps
and
and
cs
inc
mov
pop
insb
mov
fsubr
xor
pop
xor
lea
mov
inc
fwait
outsl
aaa
mov
inc
mov
scas
fs
pop
sbb
push
negb
int3
xchg
nop
es
les
cwtl
pop
dec
pop
lahf
jl
xchg
jp
xor
cmc
fnstsw
push
jno
das
mov
es
repnz
cmp
test
inc
jmp
loope
bound
and
and
mov
jle
ja
addr16
mov
test
aaa
addb
hlt
ljmp
jle
jmp
jl
or
sbb
ljmp
mov
in
icebp
mov
shl
sub
pop
cs
data16
fs
jge
xchg
mov
sub
jne
push
ror
sub
cld
sti
adc
cmpl
pop
lret
mov
imul
jl
pusha
push
lds
das
xor
jmp
mov
lock
add
push
xchg
xchg
pop
dec
lret
xor
xorl
adc
lods
insl
jle
in
sub
mov
pop
mov
and
cmp
mov
movsb
pop
or
into
inc
frstor
mov
dec
fcom
adc
sub
repz
xor
jg
dec
scas
cmpsl
dec
mov
pop
mov
punpckhwd
daa
iret
xchg
loop
cmp
mov
pop
outsb
lret
lret
mov
aam
mov
out
cltd
sub
pop
and
testb
inc
push
mov
sbb
cmp
push
ds
ret
pop
mov
pop
fnstsw
adc
shll
and
sub
sbb
jmp
ds
pop
rorb
cld
jbe
xchg
jno
sti
fwait
sub
xchg
mov
les
inc
clc
inc
jb
xchg
loope
rcrb
mov
adc
mov
out
and
movsb
push
mov
cltd
push
pop
loope
ja
jg
subl
push
xchg
outsl
bound
cltd
imul
mov
mov
push
adc
fbld
push
outsl
gs
aas
lahf
mov
mov
jnp
pop
jo
xchg
mov
pop
cmp
dec
mov
push
xor
pushf
jae
adc
inc
adcl
jns
pop
adc
fists
xchg
rorl
pop
inc
pop
cmpsb
pop
mov
jae
das
adc
arpl
ja
or
clc
test
sbb
std
xchg
mov
cmp
rcl
out
add
adc
aam
cmp
mov
lahf
add
test
dec
ljmp
scas
std
push
fwait
aas
add
sbb
cmp
pop
adcb
jns
jl
dec
pop
mov
sarl
xchg
arpl
mov
and
das
test
push
mov
cmp
mov
or
cmp
xchg
mov
adc
push
cld
dec
out
xlat
push
inc
jl
fiadds
xor
bound
mov
xchg
sub
lods
inc
shlb
pushf
ljmp
lds
orl
and
pop
out
loope
jl
lea
stos
mov
orb
and
dec
sbb
iret
dec
popf
hlt
outsl
xchg
push
dec
orb
and
lcall
cmpsb
mov
mov
add
cli
or
mov
out
fmuls
frstor
push
or
aam
cld
mov
sub
jb
test
or
sub
pop
int
fs
ljmp
adcb
mov
shlb
pop
dec
aas
enter
mov
push
jbe
xchg
adc
in
ja
dec
imul
cltd
ret
xchg
mov
aaa
jne
cli
pop
mov
xchg
shrb
test
cmp
or
jns
jle,pn
jae
outsl
fnstcw
mov
out
or
aas
xchg
filds
mov
mov
cs
pop
add
cmp
push
and
sub
lods
pop
xchg
shlb
test
cmpsl
imul
das
xchg
sub
lcall
pop
hlt
xchg
xchg
imul
scas
mov
push
sbb
jb
xchg
cmpsl
dec
movsl
push
dec
cmpsb
dec
and
imul
stos
stos
in
xchg
pop
test
mov
dec
pop
gs
popf
cltd
jns
pusha
or
leave
xor
xchg
and
das
or
xchg
movsl
loope
shll
stc
pop
jle
jg
adc
and
sub
jnp
sahf
jno
ret
dec
fadd
popa
lret
into
mov
sbb
enter
mov
inc
add
stc
js
jmp
mov
data16
dec
and
mov
incl
xor
addb
mov
fstps
jne
xor
sub
aam
xor
pop
push
ret
stc
push
inc
aad
ja
xor
jb
or
mov
dec
xchg
es
pop
mov
outsb
stos
add
out
insb
clc
subl
dec
nop
sbb
stc
xchg
insl
jbe
fwait
aam
pop
imul
loopne
mov
xor
mov
dec
repz
mov
mov
daa
mov
aaa
cmp
sbb
and
add
filds
xor
mov
push
ret
xchg
jmp
ja
aaa
sub
adc
stos
cmp
inc
xchg
mov
add
add
ljmp
pop
into
jae
cmp
lock
jne
dec
scas
xor
mov
push
cs
or
ja
add
int3
pop
mov
mov
or
clc
adc
dec
and
shrb
jns
xchg
es
sub
cmp
enter
push
jne
sbb
aas
stos
das
xor
sahf
dec
pop
push
mov
out
test
aam
sub
and
and
icebp
xchg
push
pop
mov
dec
mov
or
and
xchg
jb
mov
xchg
adc
pop
fisubl
mov
xchg
mov
mov
inc
daa
lea
rorb
jne
pop
stos
dec
cmp
pop
xchg
and
mov
roll
rcrl
pushf
dec
gs
gs
inc
push
push
setbe
or
add
cmp
push
add
dec
and
sub
xchg
xlat
jnp
ljmp
cmp
enter
setnp
int3
pop
jae
rorl
jbe
js
push
mov
fcmovnu
scas
xchg
xchg
clc
and
test
lods
insl
push
push
xchg
test
leave
jmp
mov
jne
push
adc
das
push
ret
arpl
xchg
repnz
cld
lret
pop
mov
and
jp
jecxz
loop
sbb
inc
fnstenv
clc
insb
ficomps
xchg
add
iret
add
add
push
and
pop
roll
mov
mov
cwtl
xor
leave
push
mov
push
pop
mov
xchg
mov
sub
fildl
out
mov
mov
popl
aam
mov
sub
ljmp
jle
mov
add
mov
xlat
sahf
jo
testb
mov
inc
mov
arpl
pop
mov
es
jle
ja
xor
dec
xchg
inc
pop
mov
pop
test
test
xchg
push
mulb
maskmovq
negl
xor
movsb
cmc
and
pusha
out
add
ss
mov
iret
jae
cmp
sub
nop
test
pop
adc
daa
mov
shlb
mov
aad
xchg
push
lcall
dec
and
sbb
push
jne
pop
cwtl
popa
int3
imul
sbb
je
adc
dec
or
push
scas
ds
xchg
int
outsb
sbb
pop
xor
in
ds
add
out
cltd
in
pop
je
js
mov
pop
xchg
xor
xor
mov
mov
push
lock
sub
push
mov
pop
icebp
jp
dec
sub
test
call
xchg
stc
or
sbb
push
mov
push
mov
or
mov
push
inc
sbb
adc
dec
sub
mov
lea
clc
mov
jl
lret
fisubs
xchg
mov
add
mov
pop
mov
out
mov
andl
sub
xchg
inc
xchg
sbb
mov
movb
iret
inc
mov
lods
lods
dec
icebp
pop
pop
nop
iret
ss
ja
jns
mov
std
pusha
data16
dec
pcmpgtw
push
push
icebp
sbb
push
mov
sub
push
in
rclb
xchg
add
pop
out
lcall
xchg
mov
mov
dec
xlat
jne
lahf
jl
movsl
stc
mov
inc
xchg
xchg
xorb
inc
pop
pop
add
call
dec
mov
dec
mov
lcall
lcall
jbe
push
push
inc
jp,pt
int3
xchg
pop
xchg
in
xchg
stc
and
sub
push
cmp
imul
add
enter
ss
pop
fwait
xor
inc
xchg
add
cmpsb
mov
rcrl
dec
xchg
push
inc
jg
enter
sub
xor
mov
pushf
adc
js
jecxz
xchg
xchg
sti
sbb
cmpl
ret
cmpsl
sbb
fsubrp
das
cwtl
test
pop
subb
ds
call
and
sbbl
inc
testb
xchg
mov
leave
fsubrl
daa
les
sbb
push
and
mov
mov
sahf
pop
xchg
cmp
sub
cli
test
cwtl
faddl
xor
pop
jo
dec
lahf
mov
and
out
ss
push
daa
lods
out
lods
mov
cmp
mov
jmp
mov
sub
xor
in
shrl
xor
lret
sahf
in
sarb
and
dec
mov
adc
adc
xor
xlat
jecxz
js
xchg
mov
jno
cwtl
call
mov
push
mov
ja
rolb
cmp
xlat
dec
inc
xchg
adc
sarb
mov
pushf
push
pushf
nop
movsb
mov
pop
dec
test
cmovno
imul
in
xchg
repz
mov
push
arpl
aad
imul
pop
push
ret
cmp
pop
insl
sub
adc
sub
pop
pop
pop
mov
push
jne
hlt
or
mov
test
sbb
ret
push
dec
orb
mov
push
xchg
adc
jecxz
js
sbb
mov
inc
xlat
xchg
pop
fistps
dec
inc
and
call
xorb
negl
fildl
in
jno
xor
cmp
cmpsl
pop
xchg
xchg
test
outsb
push
outsb
fldpi
pop
xor
pushw
pop
inc
test
stos
lret
xchg
lods
enter
mov
pop
stc
aad
ret
bound
dec
xchg
jne
jmp
dec
push
inc
pop
sub
push
xchg
dec
pop
hlt
xchg
dec
imull
aas
cmpsl
scas
aaa
js
xchg
inc
mov
ja
incl
dec
lret
mov
mov
inc
int3
xchg
add
dec
push
ljmp
mov
insb
lret
movl
enter
or
cwtl
in
xchg
lahf
rolb
stos
add
pop
dec
dec
sub
sbb
addr16
and
sbb
xor
cld
push
xor
aas
mov
cmpl
pop
add
cwtl
cwtl
adc
and
sbb
rcrl
lret
test
xor
pop
jecxz
xor
es
inc
mov
loop
je
rcll
out
pop
push
push
pop
fisubl
jmp
outsb
icebp
xchg
mov
add
and
pop
das
pop
mov
mov
leave
sti
xchg
shrl
outsl
fistpl
movsb
rorl
mov
jbe
mov
or
mov
mov
xlat
inc
mov
mov
jno
xchg
int3
push
aas
xlat
mov
mov
fisttpll
cltd
bound
pop
out
xorl
xor
fs
sahf
or
dec
imul
test
xor
jge
fbld
sub
stos
addl
sbb
out
mov
pop
stos
mov
dec
fistl
imul
shlb
in
test
sbb
shrl
pop
ret
lea
push
pop
xchg
push
pop
pusha
pop
out
mov
std
cmp
xchg
adc
dec
add
rcrl
out
test
pop
push
cwtl
mov
dec
cmpsl
pop
outsb
xchg
lods
ficomps
lahf
in
aam
push
cli
scas
inc
sub
in
pop
cmp
inc
add
xchg
mov
test
cmp
fucompp
mov
mov
imul
decl
xor
pushf
cmpl
test
xchg
and
sbb
sbb
pop
sub
popf
int3
mov
shlb
xlat
dec
fucomip
pushf
popa
xor
xor
adcl
movsb
sbb
pop
mov
jno
sub
and
bnd
out
mulb
repz
insl
sbb
push
sbb
nop
push
mov
and
or
mov
push
push
cmpsl
loopne
dec
bound
sbb
mov
in
icebp
push
loopne
cmp
push
push
pop
inc
nop
inc
and
jo
xchg
inc
inc
iret
pop
movsb
rclb
mov
or
repz
add
and
add
movsb
popf
adc
fldt
dec
int3
jecxz
adc
xor
mov
or
mov
dec
cmp
es
dec
je
add
add
int3
dec
lret
cmp
or
xrelease
je
ljmp
cs
lcall
or
or
mov
add
xlat
sti
xchg
mov
dec
or
jl
xchg
movsb
testb
in
or
lods
xchg
icebp
adc
mov
pop
push
dec
movups
outsl
mov
add
xchg
xor
sub
daa
ret
xor
dec
pop
les
push
int3
adc
insl
in
xchg
and
imul
and
xchg
les
dec
or
mov
pop
fnstcw
jge
lock
and
rcr
sbb
pop
cmp
cmp
xchg
mov
and
jb
clc
mov
roll
gs
cli
sbb
sahf
nop
jno
rcll
mov
mov
push
cltd
test
dec
sbb
or
enter
out
pop
xlat
cmc
dec
jae
test
mov
cmp
and
dec
jnp
int
mov
and
mov
xchg
sti
hlt
sbb
cmp
or
sbb
jl
out
xchg
sahf
xor
rcrb
test
jl
add
xchg
push
scas
cmc
push
and
xchg
dec
sub
push
loop
hlt
xchg
lods
dec
pop
mov
push
sub
xor
enter
xor
ret
add
xchg
jbe
push
les
inc
dec
pop
rorb
iret
stos
jp
add
cmpsb
nop
test
outsl
adcb
sub
mov
insl
lret
push
adc
inc
sub
int
lret
mov
daa
or
pop
mov
xchg
push
mov
inc
dec
sahf
fisttps
sub
adc
jg
mov
sub
pop
cmp
mov
adc
fcmovu
pop
dec
add
lret
jecxz
sahf
mov
and
sahf
sbb
lahf
sti
dec
mov
pop
ficoms
adc
pop
inc
stos
mov
bound
sub
push
push
sub
and
cmp
loopne
mov
loop
or
sub
or
or
js
insb
pop
cmpsb
add
xchg
cmpsl
jno
stc
arpl
push
and
xchg
ret
lods
lock
or
or
or
stos
adc
das
outsl
cmpsl
inc
outsl
pop
xchg
sbb
shr
out
jns
clc
push
pop
jge
loop
cwtl
test
pop
xchg
enter
pop
mov
aaa
mov
jnp
getsec
pop
nop
xchg
and
push
in
jg
fisttps
popa
mov
dec
sub
xchg
or
std
pop
movsb
jecxz
or
pop
mov
xchg
rol
fwait
xchg
ljmp
pop
sub
repz
push
pop
pushf
clc
xchg
ja
out
sahf
xchg
cmp
xlat
das
mov
mov
test
stos
or
scas
dec
mov
pop
add
stc
loop
shlb
inc
gs
sbb
adc
push
pop
ljmp
test
dec
mov
pop
push
shlb
push
xchg
sub
pop
mov
push
mov
push
dec
rclb
rolb
les
fadd
adc
lcall
stc
push
dec
insl
mov
mov
outsb
enter
mov
inc
or
fildl
xor
shlb
and
in
jnp
cwtl
cli
mov
mov
sub
dec
shl
mov
cmc
dec
bound
xchg
fmuls
lret
mov
shlb
movsl
xor
add
test
mov
jae
cmc
fdivp
mov
stos
addr16
sub
mov
xlat
xchg
push
fidivrl
fimull
lea
pop
xchg
and
pop
push
addr16
pop
dec
fwait
arpl
pusha
xor
outsl
sub
xchg
cmpsb
cmp
mov
ret
stos
mov
ds
js
dec
push
sar
adc
mov
pop
mov
scas
bound
adc
and
xchg
call
movsb
push
test
mov
mov
mov
rcrb
xchg
and
pop
dec
and
or
jecxz
adc
xor
adc
sbb
adcb
dec
dec
stc
test
inc
cmp
dec
pop
and
fisubl
lret
imul
xlat
fiaddl
push
push
pop
into
mov
jno
lret
mov
ret
sub
ja
or
fwait
pop
or
pop
or
ss
mov
cld
cli
dec
in
adc
sub
sub
dec
push
xor
and
mov
pop
xor
cmp
pushf
push
or
push
pop
fadds
imul
test
cli
scas
cmp
sahf
cmp
jne
movsl
fcoms
ja
and
inc
test
outsl
push
pushf
push
imul
mov
lock
sub
and
test
xchg
dec
enter
jp
inc
pop
xchg
mov
mov
pop
loop
xor
data16
shlb
inc
dec
fcomi
dec
je
and
xchg
dec
minsd
push
xlat
cmpsb
jne
xor
xchg
scas
cli
jb
dec
add
pop
mov
pop
mov
jne
lret
ret
xchg
dec
outsb
mov
fisubrl
popa
fwait
lahf
mov
mov
incb
fistps
out
jmp
xchg
mov
ret
dec
lea
fwait
aad
ja
mov
xchg
sbb
lcall
fsts
repz
pop
pushf
dec
inc
xchg
shr
cmp
pop
ds
mov
xlat
and
sbb
test
cmp
daa
test
fisttpl
lds
inc
xchg
adc
jo
inc
mov
ret
popf
xchg
mov
sahf
fistl
push
sub
adc
pop
cwtl
push
mov
and
mov
neg
popa
inc
push
and
xor
dec
mov
in
add
xchg
call
sub
inc
dec
aaa
test
cwtl
xchg
xchg
jbe
loope
addb
sbb
dec
pushf
out
and
dec
jno
mov
lock
cwtl
dec
lret
pop
mov
mov
xchg
cs
test
and
lods
dec
loop
or
bound
jl
fwait
inc
subl
sbb
add
xchg
idivb
out
xor
orl
hlt
sub
jmp
mov
pop
ret
sbb
jne
xchg
in
jno
ficoml
gs
sbb
xchg
pop
insb
mov
test
jae
xchg
in
pop
into
jmp
xchg
lods
lods
nop
call
jnp
sbb
xchg
dec
fcmove
aad
inc
lock
int
push
jbe
mov
inc
cltd
mov
fnstcw
push
insb
jne
cltd
cmpsl
lods
or
dec
outsl
jne
sti
insl
shrb
jge
stc
xlat
pop
pop
push
mov
xchg
jne
push
jno
xchg
cltd
dec
aas
ja
dec
and
dec
mov
inc
mov
nop
jns
mov
es
sahf
jbe
xchg
push
popf
gs
jne
lcall
pusha
fdivrs
iret
mov
jl
cmp
rol
mov
cmp
adc
and
adc
scas
jge
cmc
popa
xchg
jg
add
aas
dec
or
outsl
daa
inc
adc
dec
cmp
xchg
addl
insl
int
in
inc
jp
cmp
cmp
in
mov
inc
aam
fldl
mov
mov
pop
out
pop
dec
sbb
mov
xchg
lahf
outsl
es
clc
or
xor
dec
jbe
pop
adc
add
jecxz
mov
mov
cmp
mul
movsb
cltd
adc
mov
cmp
and
ds
mov
sbb
dec
sbb
pop
push
jae
leave
xlat
ds
xchg
cwtl
imul
xor
push
pop
mov
pushf
or
xchg
adc
push
jg
push
dec
icebp
inc
xchg
rcll
mov
mov
mov
sbb
jg
rcll
arpl
data16
mov
sbb
cmpsb
mov
addr16
testb
xchg
jl
adc
pop
mov
inc
jecxz
sbb
or
xlat
xorl
pop
cmp
in
xchg
inc
cmpsb
hlt
mov
dec
cmpsl
loope
test
xlat
cmp
push
jo
insb
push
dec
enter
sub
xchg
mov
lret
mov
add
push
cmp
push
pop
jle
jecxz
in
jne
lods
repz
inc
test
inc
pop
cwtl
mov
or
adc
cmpsl
test
xor
add
out
jg
xchg
mov
mov
jle
inc
push
push
pop
adc
shrl
jae
mov
xchg
and
push
pusha
sbb
outsl
repnz
ja
lret
mov
push
inc
bound
push
ja
xor
mov
xchg
mov
leave
inc
mov
jecxz
add
aad
call
lods
sbb
mov
sbb
nop
pop
fs
out
push
push
mov
mov
mov
mov
adc
fistpl
dec
stos
mov
cltd
xchg
mov
or
mov
mov
push
cli
mov
mov
push
dec
xor
sbb
ficoms
push
insb
xchg
cld
lods
outsb
cmp
incl
lea
jecxz
xor
xchg
or
mov
test
xor
cld
ficompl
dec
mov
adc
pop
or
ds
cmc
test
cmp
and
push
add
sub
das
jne
dec
xchg
dec
dec
adc
mov
xchg
iret
sbb
xchg
into
and
pop
push
inc
pushf
adc
nop
and
mov
jno
mov
sbb
push
xchg
movsl
fbstp
lea
iret
scas
pop
push
in
push
data16
sahf
shr
adc
inc
aaa
fimuls
cs
mov
pop
pop
loop
xchg
xor
dec
mov
cmp
negb
cwtl
push
or
dec
ret
lock
mov
out
pop
fisttpl
or
in
in
jo
xchg
pushf
popa
inc
mov
push
and
icebp
sbb
stc
scas
xchg
xchg
xchg
mov
ficomps
push
mov
insb
jg
sub
xor
aaa
or
lock
xlat
inc
cwtl
jle
inc
fs
outsb
out
dec
dec
pop
loop
push
adc
ret
or
clc
pop
sahf
arpl
shrl
dec
lahf
cmp
pop
xchg
int
ja
sbb
jnp
rorl
xchg
mov
pop
xchg
mov
cmp
pop
shrb
nop
in
push
adc
addr16
sarl
xchg
dec
into
aad
pop
xor
xchg
mov
xchg
inc
xor
inc
sub
cmpsl
iret
js
mov
xchg
lock
cmp
popf
sub
stc
das
add
xchg
mov
movsl
jbe
pop
mov
test
cmp
push
jno
xor
cmpl
pop
or
pushf
xor
inc
loope
jg
sbb
sub
cld
or
movl
pop
aaa
fdiv
std
mov
leave
movsb
and
mov
test
push
pop
or
jnp
add
cli
pop
cltd
rorl
popf
pop
mov
xor
dec
mov
or
cmpsb
adcb
xchg
inc
data16
mov
pop
out
mov
daa
dec
pop
xchg
xor
repz
inc
inc
jl
xchg
pop
mul
sbb
inc
mov
std
add
jp
xor
loope
nop
and
cmpsl
xchg
xchg
jno
sbb
iret
jns
lret
in
mov
mov
mov
or
dec
mov
leave
enter
xchg
pop
pop
sub
inc
or
adc
fucom
inc
pop
push
lock
mov
data16
icebp
pop
sub
adc
inc
mov
pushl
add
es
mov
push
adc
inc
sti
adcl
mov
dec
sahf
push
xor
push
jbe
dec
cmp
inc
or
cli
pop
sub
fsubl
xchg
pop
ret
pop
dec
sbb
sbb
mov
inc
xchg
or
mov
test
cmp
push
sub
adc
xor
xchg
push
jle
cmc
xor
aad
aam
mov
ljmp
popf
push
ret
mov
dec
xchg
inc
out
mov
xor
shlb
dec
push
fistps
lds
aaa
inc
stos
movsb
das
bound
mov
fiaddl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lods
mov
ljmp
mov
mov
shr
mov
xor
add
add
xorl
sub
add
dec
jne
leave
ret
cmc
ss
sub
or
cmp
lods
xor
push
mov
sub
call
push
push
push
push
push
push
push
push
call
mov
call
mov
call
call
push
pushl
call
call
mov
pushl
call
call
mov
push
pushl
call
push
call
mov
call
mov
pushl
call
mov
xor
add
call
call
call
nop
call
pushl
push
call
lea
push
call
push
pushl
call
pushl
push
call
push
push
pushl
call
call
mov
call
push
push
push
push
push
push
push
call
mov
pushl
push
pushl
call
call
push
call
mov
pushl
call
mov
add
sub
call
pushl
call
call
mov
call
leave
ret
mov
mov
jecxz
.byte
.byte
