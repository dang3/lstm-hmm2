add
je
sbb
mov
jo
inc
add
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
or
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
add
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
inc
add
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
add
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
add
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
add
sbb
add
lock
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
add
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
add
enter
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
add
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
add
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
add
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
add
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
add
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
dec
mov
clc
call
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
add
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
add
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
add
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
call
push
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
movsb
inc
add
test
add
add
test
add
or
test
add
add
push
and
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
or
js
mov
test
jne
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
add
push
call
add
add
push
add
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
inc
add
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
add
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
inc
add
add
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
add
rorb
lret
jne
lea
cmp
jb
add
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
xchg
xchg
inc
add
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
add
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
add
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
add
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
fidivs
lea
scas
mov
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cmp
jne
mov
mov
lea
push
push
add
push
push
mov
mov
mov
call
mov
test
js
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
movl
mov
mov
je
mov
mov
push
call
mov
test
mov
push
mov
push
mov
mov
je
mov
mov
push
call
mov
test
mov
jne
mov
lea
call
lea
call
mov
test
pop
pop
je
mov
mov
push
call
xor
add
ret
mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
fcoml
and
movl
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
inc
add
dec
and
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
lahf
inc
add
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
sbb
mov
movl
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
add
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
add
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
clc
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
pusha
push
call
mov
mov
mov
in
aam
mov
mov
arpl
lret
push
faddp
fldl
addb
cltd
shr
leave
fisubrs
mov
add
out
rcrl
data16
out
mov
outsl
add
add
cmpsb
add
arpl
fs
add
cmpsl
add
ja
xchg
xchg
fbld
lea
fldl
pop
pop
xchg
call
pop
add
lret
jp
test
add
add
mov
add
jmp
loopne
pop
add
fiaddl
jge
jp
add
stc
jge
insb
mov
add
arpl
mov
add
mov
add
add
add
clc
push
jle
fildl
add
cmpsl
in
roll
add
cmpsl
int
popa
xlat
ljmp
int
mov
loop
add
in
mov
add
rcll
in
add
push
push
push
lea
push
push
push
push
push
push
push
call
add
addl
popa
cld
loopne
std
mov
add
mov
lock
add
add
faddl
loop
mov
add
jne
faddl
add
loopne
roll
pop
call
stos
call
shlb
push
mov
mov
loop
lea
fs
xchg
add
loope
clc
add
testb
mov
lea
pop
movl
push
push
call
fcomip
les
add
enter
int3
mov
xchg
add
popf
add
add
add
lret
push
jp
add
jno
outsl
add
add
je
add
add
out
in
enter
addl
jo
ljmp
lahf
in
add
add
aad
add
lds
add
hlt
add
lahf
pop
fimuls
pop
popl
push
lea
push
push
push
push
call
jno
mov
add
jbe
push
add
stos
add
fcomps
lret
xchg
mov
test
test
nop
xorb
add
add
add
jnp
jno
out
pop
mov
add
imul
add
add
add
jo
hlt
pop
add
jae
addb
imul
add
lret
test
fdivr
jne
mov
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
xchg
add
add
add
add
mov
stos
add
pusha
test
add
idiv
fsubr
fimuls
push
jp
lea
jge
sahf
sti
add
add
insb
add
push
popf
pop
xchg
nop
mov
mov
test
add
std
test
int
add
mov
mov
test
mov
int3
push
sahf
mov
addl
mov
lea
pop
push
push
push
push
push
call
add
add
ljmp
jmp
add
mov
add
into
aam
mov
add
mov
add
push
add
add
add
add
loopne
stos
add
add
out
lods
add
add
mov
jns
out
sahf
jno
xchg
lods
loope
mov
add
out
add
pop
mov
lea
pop
push
call
push
push
push
lea
push
call
add
ret
repnz
jne
nop
mov
sbbl
add
add
add
pop
add
add
jecxz
add
fmul
add
fadds
add
gs
add
ja
les
push
jbe
add
add
cmc
sti
add
out
add
add
add
add
add
add
out
xchg
out
add
insb
add
add
insb
lret
mov
lea
pop
call
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
out
loop
into
pop
push
in
mov
jae
lods
hlt
pusha
mov
mov
movsb
ja
loop
push
add
lret
pop
pop
popf
shrb
pushf
fs
out
ficoms
repnz
sahf
stc
int
leave
push
movsb
ret
fiaddl
jns
add
imul
out
jne
mov
add
stos
add
mov
lea
pop
call
push
push
call
cmc
mov
pop
in
sahf
add
jecxz
xchg
in
mov
lcall
cmpsb
roll
popa
mov
call
add
push
add
add
cmpsb
rcrb
add
add
jbe
add
mov
ljmp
mov
add
ja
fiadds
scas
movb
pop
pop
jae
add
add
jmp
add
add
add
mov
lea
pop
jmp
ret
push
push
push
call
xchg
and
cltd
popf
add
add
add
call
out
out
add
mov
repnz
fadds
push
pusha
out
in
incb
add
test
icebp
fstpt
add
lcall
fwait
call
jge
add
xchg
add
add
add
int
pusha
mov
mov
lea
pop
mov
mov
push
push
push
lea
push
call
lret
test
outsl
cwtl
call
lret
repnz
add
add
add
add
andb
test
std
push
jmp
add
iret
pop
add
rcll
add
mov
filds
add
mov
sahf
or
add
xchg
add
add
push
test
ficoms
push
jo
pop
add
add
pop
add
push
push
call
add
add
add
mov
imul
add
pop
fiaddl
add
mov
mov
xlat
shrb
xorb
fnstsw
add
add
xchg
mov
pop
cltd
add
hlt
add
pop
lret
jo
ljmp
movsb
xchg
test
add
hlt
mov
add
add
ljmp
jecxz
add
pop
add
add
push
push
lea
push
push
push
lea
push
push
call
jb
add
add
add
nop
add
add
loopne
nop
out
add
into
xchg
mov
lock
movsb
add
add
lods
add
push
fs
push
cltd
lahf
enter
fsubrp
jmp
add
data16
xlat
in
lcall
add
add
movsl
add
cwtl
insb
add
add
in
add
gs
add
mov
pop
add
int3
add
pop
mov
push
push
push
call
fdivrp
jae
cltd
xchg
add
std
add
add
leave
popf
add
add
add
test
add
add
mov
add
mov
mov
imul
add
lcall
add
insb
jmp
mov
leave
icebp
mov
add
add
mov
add
mov
mov
fsub
int3
add
aam
mov
add
cld
lea
pop
xor
push
push
push
call
jo
in
enter
jno
add
add
imul
push
fsubp
xchg
add
fiadds
mov
add
stos
js
xor
cmpsl
add
bound
mov
js
faddl
gs
leave
xchg
mov
jge
add
jl
mov
add
cltd
test
add
std
add
pusha
loope
add
add
push
pop
jge
add
cli
add
mov
add
add
add
pop
add
push
push
push
push
push
push
push
push
push
call
add
imul
mov
lods
in
lret
les
stc
stc
add
mov
add
pushf
mov
jl
in
add
pushf
mov
testl
jge
push
je
mov
lods
icebp
mov
ja
add
mov
push
add
lds
add
mov
mov
incb
mov
add
addr16
mov
and
add
push
push
push
push
push
push
lea
push
push
push
call
std
out
rcrl
fsts
in
add
jb
icebp
fcoms
ljmp
xchg
mov
add
add
insb
shrb
mov
add
in
add
push
pop
jno
in
push
add
add
add
out
add
add
add
repnz
mov
stc
jmp
add
xchg
fwait
int
add
in
int3
aad
add
and
call
mov
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
pop
add
add
popa
add
add
add
les
jo
add
jns
add
lods
call
add
jp
movsb
in
push
fmul
testb
add
xorb
mov
movb
add
lds
add
repnz
add
jns
add
rol
add
loopne
in
cmpsb
imul
lea
pop
xor
push
lea
push
call
test
gs
add
jb
add
add
fstp
add
push
xchg
add
pusha
mov
push
arpl
div
add
add
lahf
enter
out
cmpl
jae
test
testb
test
mov
push
xlat
mov
add
jbe
xlat
add
push
push
out
add
jl
cld
lea
pop
add
push
push
shl
add
push
sub
add
sub
shl
sub
sub
sub
shr
add
add
pop
lea
pop
push
push
push
push
push
push
push
push
lea
push
call
add
js
mov
lret
add
add
add
addr16
add
mov
add
add
mov
pop
imul
ljmp
add
fsts
jl
add
jmp
add
rolb
add
mov
std
add
testb
filds
mov
add
push
js
pop
pop
add
add
iret
clc
add
pop
pushl
call
mov
push
push
lea
push
push
push
push
call
add
fs
add
imul
out
ret
roll
add
js
mov
pusha
les
xchg
in
xchg
jp
add
stos
hlt
rolb
add
add
add
into
out
jns
add
into
fadds
add
pop
add
test
pop
mov
loope
aam
jno
add
bound
add
add
pop
scas
add
shrb
popa
jge
not
add
xchg
add
add
push
mov
lea
pop
movl
push
lea
push
push
push
push
lea
push
push
lea
push
call
stos
js
add
insb
roll
add
add
imul
scas
out
add
add
cltd
jl
pop
add
add
mov
jbe
add
push
push
add
add
mov
jne
add
add
add
movb
pop
idiv
pop
add
stc
mov
add
jno
add
add
pop
lea
push
push
push
push
push
call
je
mov
add
mov
add
add
add
lock
imul
xchg
add
mov
pop
bound
add
fistpll
leave
add
jns
fdivr
mov
push
js
add
mov
xchg
push
jp
mov
std
call
mov
add
add
add
jbe
add
add
pusha
adc
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
pushf
rolb
add
in
xchg
ljmp
data16
xchg
fs
outsl
mov
lods
add
cmpsb
add
leave
add
int3
pushf
add
jl
mov
add
push
iret
add
imul
add
sbbb
pusha
addr16
cld
mov
in
sahf
add
mov
mov
cwtl
mov
pop
mov
lea
pop
pushl
push
push
push
push
push
push
call
mov
out
fists
add
movb
leave
stc
scas
pop
sti
jns
pop
push
add
mov
add
out
in
jnp
movsb
add
add
add
add
imul
negl
add
add
add
test
imul
pop
add
enter
arpl
pop
pushl
call
push
push
push
push
push
push
call
add
mov
push
test
mov
xchg
add
add
jge
add
add
add
add
xlat
test
rolb
mov
shlb
sahf
in
pushf
push
mov
add
add
rcrb
test
in
add
std
add
push
add
add
bound
pop
pushl
push
push
push
push
push
push
push
lea
push
call
add
imul
add
les
add
imul
add
mov
ja
cld
jecxz
mov
add
push
fwait
mov
xchg
mov
add
add
add
push
pop
into
repnz
xchg
ljmp
add
mov
add
in
imul
add
add
movsl
add
add
xchg
pop
pushl
call
push
push
shl
not
push
and
add
rol
sub
ror
lea
dec
lea
pop
rol
inc
dec
add
pop
push
push
push
push
push
push
push
call
shlb
pusha
data16
add
jecxz
mov
mov
call
add
mov
repnz
in
lcall
add
outsl
addl
gs
push
xchg
mov
pop
push
jp
mov
addb
jb
add
int
enter
loop
add
insb
out
add
add
add
add
pop
pushl
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
aam
stos
add
outsl
add
add
mov
stc
notl
mov
add
scas
xlat
pop
add
sarb
fcmovbe
mov
testl
imul
jae
add
push
jno
into
jnp
lods
add
add
and
data16
mov
add
mov
mov
ret
add
add
lods
add
lea
pushf
imul
add
pop
call
push
push
push
push
push
lea
push
push
lea
push
push
call
add
xchg
addl
add
pop
std
les
cli
iret
into
add
pop
xchg
add
mov
add
add
xchg
add
add
shlb
mov
jno
iret
add
add
in
add
test
mov
icebp
add
add
mov
add
pop
mov
add
add
int3
lea
pop
push
push
push
sub
push
or
not
add
dec
lea
ror
sub
ror
shl
shr
pop
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
repnz
push
loope
leave
add
add
lock
add
loopne
lret
add
add
stos
arpl
pop
lods
nop
clc
fiaddl
sub
imul
mov
jno
xchg
lahf
call
push
cli
in
add
add
clc
insb
pusha
add
int
lds
add
lods
mov
popf
add
test
add
add
push
in
repnz
arpl
add
lea
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
fldl
xlat
aam
add
mov
lods
push
cmp
push
mov
jo
push
mov
push
push
add
add
add
shrl
add
add
add
add
lds
rolb
in
fcmovb
add
add
push
add
incb
out
add
subb
add
fmull
pop
push
push
push
push
push
push
push
call
mov
mov
jo
push
jae
push
cltd
xchg
add
imul
add
imul
stc
xbegin
rcl
jne
mov
popl
mov
push
lds
push
add
aam
cltd
fcomps
push
sti
jle
add
xchg
add
add
add
hlt
mov
lea
pop
call
mov
push
push
push
push
call
jmp
addr16
pop
pop
jnp
mov
out
add
stc
push
pop
xlat
lcall
negl
add
incb
loope
loopne
jnp
jne
arpl
add
mov
jle
rcl
add
jns
jecxz
arpl
jp
add
add
aad
push
pop
add
fs
add
add
add
mov
add
mov
mov
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
in
lds
pop
xchg
add
hlt
pop
add
xchg
jp
icebp
add
add
xchg
add
je
add
add
add
in
mov
repnz
mov
add
lock
mov
pop
leave
add
stc
ljmp
add
test
add
out
fs
push
fisubrl
int3
add
add
mov
lea
pop
mov
add
push
lea
push
push
lea
push
push
push
push
call
add
scas
in
orb
add
add
jecxz
add
loopne
je
mov
outsl
sahf
imul
fcoml
add
add
mov
test
jmp
mov
mov
addb
add
add
mov
add
push
add
mov
jo
push
outsl
cld
add
add
mov
lea
pop
add
add
push
push
push
push
push
call
mov
incb
mov
add
fadds
iret
add
lret
pusha
testb
add
add
mov
scas
in
pop
add
add
loopne
add
jmp
loop
add
push
shlb
add
jp
cld
add
jns
push
pop
add
std
pusha
jle
lret
add
mov
xchg
add
add
add
fnstsw
add
lret
add
mov
lea
pop
mov
xor
push
push
push
push
push
call
sbb
jno
add
data16
jb
add
mov
imul
incb
hlt
mov
movsb
push
mov
js
add
mov
enter
add
iret
test
add
add
add
leave
rol
pushf
pop
pop
push
jp
add
imul
add
je
add
add
add
cmc
mov
pop
aad
push
mov
lea
pop
add
push
push
push
push
push
lea
push
call
fldl
add
xchg
add
add
add
add
into
mov
mov
mov
rolb
hlt
add
add
addr16
push
xchg
add
add
cli
add
add
add
stos
add
add
lea
aad
add
ljmp
jae
add
mov
lea
pop
mov
push
push
lea
push
push
push
call
add
fcomip
add
pop
rol
jl
mov
imul
rolb
scas
mov
les
repnz
jmp
add
add
add
in
xchg
lock
lcall
add
jae
mov
add
outsl
add
pushf
add
add
jmp
mov
imul
ror
loop
pop
feni(8087
mov
mov
lea
pop
xor
push
push
lea
push
lea
push
push
call
add
sahf
mov
iret
mov
mov
scas
mov
mov
add
add
mov
in
lret
gs
mov
mov
out
add
mov
imul
rolb
lcall
mov
mov
add
add
shl
mov
lea
pop
add
push
push
lea
push
push
call
add
stos
test
mov
mov
je
add
add
scas
add
xacquire
add
bound
add
push
jns
add
outsl
movsb
scas
mov
add
cld
add
fstl
shrl
call
add
add
add
add
stos
pushf
loop
add
push
fdivr
mov
lea
pop
add
pop
mov
push
push
push
push
push
call
imul
pop
mov
add
xchg
pushf
add
xchg
popa
call
jo
popa
add
jns
add
mov
add
add
mov
add
arpl
jbe
mov
pop
xchg
data16
nop
add
cmpsb
rorl
add
add
add
pop
add
add
gs
add
test
int
fldl
mov
lea
pop
xor
push
push
push
push
push
push
push
call
mov
add
add
jb
add
rcll
jmp
jnp
add
cbtw
fisubrl
shlb
add
subb
lds
aam
add
call
pop
pop
add
add
sahf
loop
add
rolb
popa
xchg
lahf
mov
add
mov
add
push
add
push
push
push
mov
xchg
add
scas
cltd
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
push
movsl
add
xchg
jecxz
popf
add
mov
lods
add
movsb
add
xchg
je
add
popa
add
add
add
lods
out
out
mov
add
in
fldenv
add
add
fsubrs
out
xchg
rcll
pop
cli
fdivrl
add
jno
jmp
rcll
subl
add
add
loopne
add
les
mov
xor
push
lea
push
push
push
push
push
push
push
push
call
add
mov
int
jnp
add
test
add
rcrb
add
adcb
mov
cli
ror
lcall
add
ja
test
fs
mov
mov
jae
jge
add
data16
mov
add
add
shll
mov
in
add
add
push
mov
add
iret
testb
jne
add
ret
add
fiaddl
test
mov
lea
pop
sub
push
push
push
push
call
add
fbld
add
add
mov
add
jno
std
add
add
mov
in
aad
cwtl
add
push
jno
xchg
pop
add
test
add
add
add
imul
xchg
add
nop
add
lds
cltd
add
fstps
iret
mov
jge
add
xchg
add
sarl
mov
mov
lea
pop
pop
push
push
lea
push
lea
push
call
pop
jp
insb
mov
xchg
push
add
outsl
addr16
mov
add
hlt
mov
jecxz
add
rolb
add
push
cmc
xchg
add
add
add
mov
repnz
jle
xchg
mov
pop
add
add
add
push
xorb
mov
add
add
add
xchg
lods
add
sti
loope
add
add
mov
lea
pop
rep
push
push
push
call
lock
ret
add
lock
add
add
add
add
scas
mov
add
imul
mov
pop
add
add
add
divb
add
lret
add
loop
std
push
div
jmp
fadds
lcall
shlb
flds
add
add
nop
jl
js
add
js
cwtl
mov
lea
pop
pop
mov
push
push
lea
push
lea
push
lea
push
push
call
jno
xlat
jno
add
adc
xchg
add
xlat
loopne
pop
icebp
bound
cmpsl
add
jae
add
mov
in
rcl
lock
gs
jb
mov
add
pusha
loope
add
add
jno
testb
gs
jle
fld
add
add
mov
addb
testb
add
aad
jecxz
mov
jo
mov
add
jb
add
cltd
add
cld
lea
pop
add
push
push
push
push
call
sti
outsl
lods
add
xchg
out
mov
fldl
mov
aam
ret
in
out
xchg
jl
add
add
add
shl
lahf
lock
lock
loop
std
imul
add
cmpsl
xchg
jb
add
arpl
jle
imul
add
add
jecxz
sarl
lods
fidivrl
aam
xchg
std
push
lods
mov
lea
pop
add
add
mov
xor
push
lea
push
lea
push
push
call
add
mov
imul
push
add
push
pusha
out
add
push
sahf
mov
shlb
push
add
rcr
fiadds
add
loope
push
jbe
lret
rclb
add
lret
xchg
mov
insb
out
cmpsl
gs
jne
fiaddl
xchg
add
add
stos
add
insb
add
jne
add
pop
mov
push
push
push
push
push
push
call
pop
xchg
pop
mov
fiadds
in
clc
add
rolb
add
call
in
fimuls
add
add
sahf
jnp
add
mov
mov
loop
jo
out
lock
add
add
add
pop
lret
std
sarb
sti
fmulp
mov
jle
xchg
pop
jo
ljmp
jecxz
faddl
enter
test
in
add
mov
pusha
adc
xor
push
push
push
call
add
fdivrl
mov
addr16
fnsave
add
add
push
cli
add
faddl
add
add
add
fdivl
add
add
insb
filds
in
add
insb
testb
add
lcall
clc
fistl
js
add
add
mov
mov
mov
mov
lea
pop
add
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
lret
insb
add
add
icebp
ret
incb
addl
in
push
mov
add
gs
add
add
pop
mov
add
xchg
mov
add
pop
roll
fldenv
add
in
add
add
add
add
add
add
add
add
outsl
lea
push
mov
add
loopne
mov
lods
mov
adcl
lea
pop
mov
push
push
push
push
call
add
rolb
add
ja
add
add
rorl
pop
rolb
jo
pop
mov
add
add
add
and
add
out
add
add
add
test
jnp
add
add
int3
in
add
mov
out
insb
add
pop
repnz
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
add
mov
test
leave
xchg
add
popa
add
fldt
add
out
lcall
fldcw
js
mov
xchg
jae
add
test
loope
add
mov
sar
je
fists
add
add
add
add
add
mov
movsl
push
pop
add
add
jecxz
shr
fiadds
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
call
add
push
mov
lcall
jl
loope
xlat
fnstenv
mov
addl
movsl
call
shll
lods
pushf
xchg
mov
imul
int
add
roll
push
pusha
popa
insb
mov
add
addr16
scas
jnp
mov
push
jecxz
jno
cld
lea
pop
add
push
push
push
call
mov
fisttps
fcmovne
add
add
mov
imul
add
aad
add
pop
frstor
add
push
mov
mov
mov
lds
scas
add
push
add
add
mov
lahf
add
fiadds
add
fisubrs
add
outsl
mov
add
add
pop
lock
add
add
mov
lea
pop
add
mov
push
push
dec
inc
lea
push
sub
add
sub
sub
rol
inc
pop
add
sub
rol
pop
push
push
push
push
call
pop
add
test
mov
add
add
add
mov
add
pop
add
mov
lret
pushf
leave
loopne
cmpsb
data16
add
popl
call
add
popf
fptan
add
roll
add
add
lods
add
ljmp
std
mov
divl
xlat
add
add
add
jecxz
mov
pop
pushl
call
push
push
push
push
push
call
add
int
pop
add
add
add
push
add
jo
lock
add
addb
add
mov
cwtl
add
lods
add
mov
cltd
mov
clc
add
push
rolb
andl
fcompl
bound
mov
out
add
add
add
mov
lea
pop
push
push
push
sub
rol
rol
push
xor
add
add
sub
sub
shr
pop
add
add
shl
pop
push
lea
push
push
push
push
call
jno
add
roll
jo
jp
sahf
add
pop
add
enter
jb
add
insb
add
add
add
ljmp
add
add
mov
add
into
jecxz
jl
out
mov
add
call
add
mov
add
add
mov
bound
rolb
add
add
int
std
add
push
lahf
add
mov
lea
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
xchg
add
mov
bound
gs
lods
add
add
add
lret
add
repnz
mov
fs
movsl
popl
add
add
add
add
hlt
add
add
xchg
shll
add
nop
xchg
jnp
mov
loop
add
add
add
add
pop
call
mov
push
push
push
push
lea
push
push
push
call
dec
add
mov
ficoml
jecxz
ljmp
add
testl
imul
negl
add
mov
iret
in
add
push
add
mov
pusha
movsl
fcmovu
add
in
add
add
jo
add
mov
add
add
popf
add
mov
scas
cld
add
pop
cltd
mov
lea
pop
push
push
mov
push
ror
inc
pop
add
add
push
dec
not
add
add
pop
add
mov
push
push
push
push
call
add
scas
add
lcall
aad
out
testl
jno
push
jbe
jns
mov
add
add
mov
pop
jl
lods
jmp
roll
add
out
fimuls
add
add
enter
mov
arpl
jns
mov
stc
std
aad
pop
lods
add
add
lea
pop
xor
push
push
lea
push
lea
push
lea
push
push
call
sti
cwtl
enter
fdecstp
out
add
fstpl
add
stc
enter
jbe
movsl
in
add
add
add
mov
add
clc
movsl
xchg
push
ficoms
shrl
xlat
mov
scas
cld
in
in
lods
xchg
pop
enter
loop
jb
scas
lods
mov
add
enter
add
mov
push
add
pop
hlt
push
add
jo
jbe
mov
lea
pop
add
push
push
push
push
push
lea
push
push
call
add
xchg
add
add
add
add
add
add
add
ljmp
fldl
xchg
lods
test
pop
scas
loope
add
xchg
add
add
pop
test
add
xchg
add
add
add
cli
add
ljmp
lahf
add
sahf
stc
stc
movsb
add
mov
add
mov
outsl
pushf
add
int3
add
add
scas
stc
mov
lea
pop
add
push
lea
push
push
push
push
push
lea
push
push
push
call
out
mov
add
add
in
add
add
sarb
fildl
fsub
jbe
mov
ja
cli
add
test
mov
sti
mov
add
add
add
addb
add
add
add
icebp
add
jne
add
imul
iret
call
add
add
xchg
insb
add
mov
xlat
pusha
mov
pop
mov
insb
add
cwtl
add
mov
lea
pop
push
push
push
push
call
add
add
add
pop
test
add
push
in
movsl
mov
pop
xchg
xlat
aam
bound
add
jbe
push
imul
push
jl
in
rolb
mov
mov
xchg
add
fwait
cltd
add
pop
roll
in
add
lcall
std
cmc
add
xchg
pushf
movsl
in
mov
add
aam
bound
mov
xor
push
add
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
fdivrl
cmpsl
jb
int
cmpsl
stc
push
arpl
ja
add
pop
add
mov
pop
flds
fists
movb
mov
mov
add
push
mov
mov
add
mov
mov
jnp
movsl
addl
add
addb
xchg
jo
leave
add
ljmp
rcl
push
jnp
add
jecxz
filds
cli
mov
lea
pop
pop
push
push
lea
push
push
push
push
push
push
call
test
push
mov
lret
mov
jae
add
mov
add
lea
add
xchg
loopew
add
add
scas
lret
add
add
loope
sub
add
add
aad
movl
add
outsl
bound
shr
jo
addl
fmull
dec
cmp
sti
rep
push
lea
push
push
lea
push
push
push
push
push
push
call
pop
jbe
stos
loope
jge
jns
jp
ja
popa
add
in
pop
out
add
fisubl
add
add
jbe
testb
add
fucomip
add
add
xchg
add
add
add
xchg
mov
js
add
add
mov
jmp
add
popa
add
add
push
popa
mov
mov
out
popl
jns
mov
lea
pop
mov
xor
push
ror
shr
dec
rol
pop
or
je
push
dec
ror
add
pop
mov
xor
push
lea
push
push
lea
push
call
mov
add
les
out
cmpsl
aad
test
adcb
imul
mov
ret
je
add
call
add
xchg
imul
add
fbstp
jmp
imul
push
mov
movsl
clc
add
add
push
add
sti
mov
add
fisttpl
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
mov
mov
imul
add
loopne
callw
fwait
add
add
jne
add
push
aam
roll
add
bound
mov
add
pusha
add
cmc
add
pop
add
add
pop
stc
add
in
mov
add
add
add
les
rcrb
mov
jl
xlat
mov
pop
xor
push
push
push
call
add
jb
ljmp
lahf
pushf
shlb
add
add
add
in
xchg
push
hlt
data16
out
add
add
add
out
sarb
add
stos
into
testb
shlb
add
js
shlw
jns
popa
mov
xchg
add
lcall
add
imul
lea
pop
add
push
lea
push
push
lea
push
push
lea
push
push
call
lds
lds
push
add
test
add
cwtl
flds
xorb
movsl
pushf
lahf
test
add
mov
add
pop
add
icebp
mov
lea
fadd
xchg
lret
xorb
imul
add
add
add
nop
movsl
movsb
scas
out
mov
pop
in
mov
lret
in
movsl
add
push
in
in
add
pop
add
add
push
lea
push
call
out
add
jl
add
add
out
popa
repnz
add
add
lds
add
add
push
loopne
fnstenv
mov
xchg
pop
add
fldt
add
add
add
jno
lock
leave
add
add
add
popa
or
push
push
push
push
push
push
push
call
stos
gs
add
add
lret
xchg
fldl
popf
rorl
hlt
add
add
insb
mov
push
shll
lock
addl
cltd
int
outsl
add
add
lock
mov
jne
shlb
add
std
mov
add
add
test
mov
cld
add
push
out
hlt
mov
loop
lret
add
sbb
mov
xor
push
sub
pop
add
push
lea
pop
pop
rep
mov
push
push
lea
push
push
push
push
push
push
call
sahf
add
xchg
mov
in
nop
mov
add
ljmpw
int3
add
fs
addl
add
out
xchg
add
testb
add
test
in
add
mov
pop
ja
ljmp
add
mov
xchg
add
add
add
clc
pop
cmc
mov
xchg
ljmp
add
mov
lea
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
push
call
jmp
add
mov
in
popf
push
fistpll
add
stos
out
test
stc
addb
outsl
add
pop
add
lret
xchg
add
add
scas
in
adcb
lock
icebp
lcall
je
insb
pop
mov
enter
mov
icebp
mov
add
scas
xchg
add
add
add
lea
mov
push
mov
mov
lea
pop
add
push
push
push
push
push
push
call
mov
icebp
int
flds
add
je
movb
fisttps
add
out
cmpsb
push
push
add
add
xchg
aam
fidivs
add
xchg
lret
out
jl
add
leave
push
test
movsb
adc
filds
xchg
mov
add
add
in
insb
test
int3
add
mov
add
mov
mov
fucomp
bound
add
push
imul
bound
xchg
add
pop
or
je
push
push
lea
push
push
lea
push
push
call
movl
mov
xchg
mov
mov
mov
add
mov
add
jno
add
clc
loop
scas
movsl
jb
cmc
cltd
add
add
mov
test
add
jmp
xchg
cltd
cmpl
lret
add
rcrb
add
add
add
fdivl
add
push
jl
add
add
filds
add
add
add
xchg
add
aad
aad
add
pop
mov
add
push
lea
push
push
push
call
push
add
push
add
xchg
add
mov
add
mov
add
add
add
sahf
mov
add
call
loopne
mov
mov
mull
out
imul
xchg
cmpsb
cld
fisubrl
popf
xchg
mov
mov
sti
add
mov
add
mov
lds
add
lock
xchg
fldenv
xchg
imul
add
les
movb
add
rep
pop
push
push
push
push
pop
add
lea
sub
sub
sub
pop
xor
add
pop
push
push
push
call
mov
add
lret
push
loopne
add
movsl
cmpl
icebp
jno
add
add
add
leave
ja
jne
cmpsl
mov
flds
fs
add
push
adc
scas
addb
add
lret
add
imul
in
mov
fwait
add
test
lea
pop
pop
mov
push
xor
lea
pop
mov
mov
push
not
not
pop
jmp
push
mov
push
inc
pop
add
push
push
push
call
addb
fucomp
add
mov
rolb
sahf
add
out
addl
int
test
xchg
aam
add
add
add
xchg
add
add
add
test
jp
rolb
popf
add
xchg
lret
lds
fldenv
pop
pop
add
test
pop
add
lret
add
cwtl
add
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
push
push
call
jecxz
iret
add
xchg
mov
add
add
jecxz
add
add
sti
pop
lahf
cltd
mov
add
add
add
rcrl
fildl
add
mov
cld
test
cld
mov
iret
add
in
mov
scas
mov
hlt
add
add
push
pop
sahf
imul
add
mov
add
mov
jbe
add
push
add
jbe
add
push
mov
lea
pop
mov
push
push
lea
push
call
test
imul
loope
add
add
roll
add
add
add
add
gs
mov
add
mov
add
fcoml
hlt
add
ret
add
add
add
pop
add
add
jne
jne
ret
lahf
add
add
addl
jp
add
add
add
pusha
or
pop
pop
push
add
pop
pop
push
ror
lea
pop
pop
leave
push
inc
pop
ret
push
push
lea
push
push
push
push
push
call
add
bound
mov
pop
frstor
popa
jge
add
add
push
add
add
scas
add
add
pop
jmp
jmp
xchg
add
add
cmpsb
xchg
add
aad
out
push
imul
add
cmpb
mov
add
icebp
xchg
mov
mov
lret
test
add
add
enter
scas
pusha
cmpsb
bound
add
lea
pop
mov
push
not
add
pop
add
push
shl
sub
pop
push
push
sub
xor
shr
add
pop
push
push
push
add
pop
push
push
lea
push
push
push
push
call
mov
mov
clc
pushf
jnp
sahf
push
fldl
add
push
push
mov
add
lods
jp
pop
lds
add
add
xchg
mov
mov
fisubs
cwtl
mov
add
xchg
std
outsl
lret
scas
test
scas
add
jle
add
add
pop
movl
addl
test
je
push
push
call
add
flds
add
mulb
add
scas
clc
add
add
lea
add
add
lods
add
cwtl
add
add
add
add
call
mov
int3
add
popl
popa
xchg
add
jns
pushf
test
add
andb
add
cltd
add
mov
push
pop
arpl
add
add
add
aam
lods
push
add
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
imul
fldl
outsl
mov
mov
ja
pushf
cwtl
enter
add
add
add
loopne
add
fsin
neg
add
mov
cmpsl
andl
lret
add
xchg
subb
cli
cld
add
shrl
jae
mov
add
popa
scas
cltd
xchg
pop
jecxz
testb
icebp
insb
lods
add
insb
add
add
mov
lea
pop
pop
push
inc
rol
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
push
add
add
fwait
jbe
add
mov
add
add
popa
popf
add
pop
stos
fistl
flds
add
push
cmc
jmp
test
jbe
mov
add
add
cmpsl
pop
fnsave
add
out
add
aam
call
fmull
pop
push
rol
pop
leave
ret
push
push
shl
pop
mov
push
push
push
push
push
push
lea
push
push
call
incb
out
add
add
icebp
sti
mov
add
add
add
int3
std
test
shll
mov
add
mov
add
add
push
add
add
add
add
jp
mov
add
mov
lods
fiaddl
add
add
mov
mov
add
stc
add
jge
add
add
jo
xchg
cmc
iret
cld
push
add
mov
lea
pop
add
push
not
inc
pop
push
push
push
not
not
pop
push
push
testl
push
lea
push
push
push
lea
push
push
push
call
andb
jae
bound
add
jno
ficoms
in
add
mov
add
add
add
std
add
out
fcmovnbe
roll
jb
roll
mov
out
add
pop
add
add
sub
xchg
add
ljmp
repnz
int
add
in
xchg
std
jle
mov
lea
pop
addl
push
push
push
push
call
add
add
push
add
add
add
clc
int3
lods
add
add
subb
arpl
sbbb
xchg
enter
movb
add
jge
add
add
push
ja
ljmp
pop
add
add
mov
std
push
add
sahf
test
movsl
lods
add
add
push
add
jp
add
leave
fildl
testb
add
mov
lea
pop
push
call
mov
push
add
lea
xor
xor
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
push
call
add
jecxz
pop
pop
je
xchg
add
ficomps
shll
add
add
add
add
mov
popa
add
add
push
push
push
adcl
in
add
sti
mov
add
add
push
repnz
xchg
sti
fwait
icebp
add
jp
sti
and
add
mov
push
cmpl
mov
lea
pop
push
push
call
push
push
lea
push
call
mov
mov
test
movsl
add
add
mov
lods
loopne
mov
mov
enter
loope
jbe
int3
add
add
add
jnp
mov
out
push
xchg
mov
pushf
add
jno
mov
insb
push
cwtl
shrl
in
fadds
fmull
std
lea
loop
push
add
movb
arpl
pusha
or
cmpl
jne
push
lea
sub
pop
pop
pop
push
push
push
lea
push
push
push
push
call
test
add
push
mov
filds
stc
cli
jbe
add
pop
push
push
insb
filds
mov
mov
incb
testb
sbbb
add
push
mov
rorb
xchg
jmp
xchg
add
add
hlt
lcall
shll
mov
lea
pop
pop
push
shr
lea
add
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
jnp
ljmp
add
nop
addl
lods
push
add
add
xchg
add
add
leave
repnz
into
add
jmp
pop
fs
add
stos
add
add
add
pop
jo
push
ja
mov
repnz
xchg
in
mov
add
shlb
add
std
jne
out
mov
jmp
mov
lea
pop
leave
ret
push
push
lea
push
lea
push
lea
push
push
push
push
call
scas
add
add
subl
add
bound
mov
je
mov
jbe
jne
pop
lret
add
push
add
push
loope
fildl
add
pop
in
add
add
push
add
jmp
insb
addb
add
mov
xorl
add
into
add
push
rolb
add
mov
nop
add
add
bound
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
fmul
add
add
push
add
roll
hlt
lcall
push
add
in
aad
mov
sahf
add
cmc
in
fistl
jecxz
pusha
add
fiaddl
aam
xchg
add
ret
add
icebp
add
stc
mov
sahf
aam
fistl
add
add
js
jbe
add
add
rolb
mov
lea
pop
mov
push
push
push
call
add
shl
mov
je
jae
stc
ljmp
scas
push
add
icebp
lcall
insb
pop
push
std
add
lods
add
fs
add
movsb
lahf
arpl
add
movsb
add
mov
add
cmc
add
jae
add
loope
aad
imul
add
hlt
lea
pop
add
push
push
push
push
push
push
lea
push
push
call
lret
jbe
in
mov
cltd
push
std
add
scas
imul
add
lea
popf
add
cmp
add
add
add
mov
add
pop
popa
leave
add
add
push
les
mov
cltd
add
lea
ja
add
test
add
lock
mov
stc
imul
mov
jecxz
pop
add
mov
filds
xchg
sarl
arpl
push
push
sub
not
pop
push
push
movl
push
sub
pop
push
call
push
push
dec
add
rol
pop
call
subl
cmpl
jne
push
not
dec
not
pop
pop
push
inc
shl
shl
pop
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
sti
out
add
mov
movb
cwtl
fiaddl
mov
add
in
lret
test
push
mov
add
add
jmp
add
mov
add
add
add
mov
add
mov
xchg
movsl
add
add
pop
pop
push
shr
pop
leave
push
lea
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
add
sbb
add
mov
pop
add
xchg
add
jnp
add
mov
mov
add
int3
add
add
add
jecxz
mov
add
xchg
repnz
mov
mov
add
mull
mov
popa
sub
push
push
rol
pop
mov
add
push
dec
add
pop
push
push
push
push
sub
pop
push
mov
lea
push
lea
push
push
push
lea
push
push
call
mov
add
xlat
ret
jge
add
ja
out
add
add
repnz
mov
add
add
cmc
fistpl
push
out
loopne
mov
lahf
cld
lods
popf
xchg
mov
aad
in
mov
add
je
int3
test
fwait
mov
mov
jp
test
ljmp
stos
jl
add
les
fadd
add
mov
lea
pop
sub
push
add
sub
pop
mov
shr
push
lea
push
lea
push
call
call
scas
test
mov
aad
push
orl
mov
aam
xchg
add
in
pusha
add
add
xchg
add
add
add
mov
jno
fidivl
sti
out
call
mov
push
add
add
in
pop
call
cli
movb
ljmp
add
xchg
lcall
add
loope
mov
lea
pop
add
push
push
lea
push
push
push
call
lea
xchg
xchg
add
cmpsl
add
add
add
cli
mov
add
mov
insb
roll
push
add
aam
add
test
into
rolb
pop
data16
bound
add
add
mov
roll
add
bnd
mov
gs
in
xchg
push
popa
add
sahf
fiadds
loope
xchg
add
adc
mov
push
sub
shr
pop
mov
add
add
push
push
lea
push
lea
push
call
jno
mov
nop
pushf
add
movl
pop
add
add
mov
leave
imul
add
add
add
add
flds
sahf
test
add
jle
fdivrl
movsl
mov
iret
shlb
jno
add
mov
add
add
mov
jno
add
add
scas
test
add
add
ljmp
add
xchg
push
mov
push
adc
inc
add
add
push
sub
rol
ror
not
pop
cmp
jne
cmp
jne
mov
push
push
push
push
push
push
lea
push
push
push
call
mov
add
iret
mov
sahf
pushf
sti
add
rolb
gs
aad
add
clc
adcl
add
add
lret
add
cwtl
pusha
add
loope
xchg
jnp
add
mov
pusha
xchg
aam
mov
jp
add
mov
jo
mov
jo
roll
add
sarb
mov
add
and
movl
jmp
push
push
lea
push
push
push
push
push
lea
push
push
call
add
push
mov
add
push
filds
pop
sahf
loopne
add
xchg
lcall
jl
xchg
lret
out
add
cltd
add
lods
fadds
aad
add
mov
jecxz
rclb
add
pushf
mov
mov
push
xchg
add
mov
and
mov
push
pop
mov
push
push
push
push
push
push
lea
push
push
call
lds
add
faddl
add
outsl
nop
pusha
mov
add
add
loope
fsubrl
pop
add
push
nop
add
out
add
add
stos
xlat
xchg
rolb
into
out
add
cltd
pusha
push
push
in
add
push
lods
push
int
mov
mov
add
jb
xchg
add
testb
sub
jne
push
add
shl
sub
pop
mov
movl
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
out
pop
icebp
push
mov
add
out
lods
je
out
in
add
add
xchg
cmpsl
lods
add
cwtl
mov
add
pop
test
pop
add
add
test
add
fcom
jb
not
pop
xchg
mov
js
jmp
add
add
add
shlb
add
addb
lret
xchg
mov
nop
movl
add
addr16
jmp
mov
mov
push
lea
push
call
add
add
mov
add
rorb
mov
into
add
cmc
mov
ret
not
pop
movsl
scas
mov
jb
add
mov
mov
fs
jo
mov
add
int
add
scas
mov
lret
jnp
arpl
lods
cmc
add
add
add
out
enter
cld
lea
pop
cmp
jne
push
push
call
add
lods
add
push
xchg
shlb
add
pusha
xchg
pop
loope
add
scas
enter
add
ljmp
add
xchg
in
push
les
add
mov
pop
add
add
out
add
add
add
test
jp
jge
sbbl
hlt
lods
scas
mov
add
stc
mov
add
fbld
cmpl
add
int
hlt
lea
pop
mov
movl
push
add
not
not
pop
jmp
push
add
sub
shr
sub
pop
mov
cmpw
jne
push
lea
add
shl
pop
mov
movl
push
push
push
push
lea
push
push
push
push
push
call
mov
add
rcr
add
out
mov
cmc
or
movsl
pusha
add
add
pop
add
add
add
roll
add
pop
cltd
hlt
pop
add
jae
lahf
add
xchg
lret
popf
jo
add
add
add
stos
lods
add
adcl
mov
add
add
add
popf
addl
push
flds
add
add
add
arpl
jmp
pushl
pop
push
add
rol
rol
sub
pop
mov
mov
push
push
push
push
push
lea
push
push
call
out
std
sahf
ljmp
lret
in
mov
pop
lock
mov
test
add
call
lahf
add
add
pushf
test
add
jo
mov
rcll
stos
pop
cmpsb
repnz
out
xlat
mov
test
add
lret
add
arpl
out
ja
gs
jnp
add
add
fisttpll
pop
mov
push
push
shr
dec
shl
push
push
pop
add
xor
lea
sub
shr
shl
pop
sub
rol
pop
push
push
push
push
lea
push
lea
push
lea
push
call
scas
add
jmp
jecxz
jle
add
add
add
xchg
sahf
addl
pop
stc
cmc
testb
jge
add
repnz
sahf
jae
loope
call
mull
jae
jbe
jo
pop
add
lahf
add
push
cmc
popa
out
lahf
add
add
mov
add
add
arpl
mov
add
add
rolb
add
lea
pop
push
push
lea
dec
pop
call
push
add
shr
pop
cmpl
je
push
push
dec
ror
push
or
not
add
add
shr
sub
inc
not
xor
pop
rol
shr
lea
shr
pop
push
push
push
call
call
popf
pop
add
cmpsl
test
addb
add
ror
jecxz
into
xchg
out
into
test
xchg
push
mov
cltd
repnz
jmp
faddl
jmp
jge
stos
test
fmulp
pop
add
jns
add
add
lods
mov
lret
jbe
add
out
pop
add
sar
add
int3
lea
pop
push
call
cmpl
je
push
push
sub
sub
push
xor
add
xor
sub
sub
sub
shr
sub
add
pop
sub
shl
pop
push
push
lea
push
push
push
push
push
call
push
add
add
jecxz
add
add
mov
push
add
rcll
add
xchg
add
cltd
add
mov
jecxz
jbe
lahf
cmc
add
add
add
xchg
aad
xchg
add
xchg
jae
add
clc
mov
push
roll
add
mov
icebp
mov
add
pop
lea
movsb
mov
lea
pop
push
call
cmpl
je
push
push
dec
lea
push
and
add
dec
sub
shl
sub
xor
pop
add
xor
pop
push
inc
sub
pop
push
push
push
call
add
les
pop
add
data16
add
add
popa
push
jo
in
add
add
add
pop
in
add
imul
mov
xchg
add
add
push
ror
add
in
call
mov
push
pop
lret
jmp
pop
pop
push
add
add
add
les
test
test
or
mov
add
cmpl
je
push
push
sub
ror
push
and
add
sub
sub
inc
add
sub
add
pop
shl
not
pop
push
inc
pop
push
call
cmpl
je
push
push
sub
xor
push
or
not
add
xor
sub
shl
pop
lea
pop
push
sub
dec
not
pop
push
push
push
push
push
push
push
push
push
push
push
call
xchg
jae
push
popf
loop
add
push
sti
xchg
addl
push
cmc
fstl
sti
pop
pusha
add
in
les
mov
cmpsb
mov
icebp
xchg
mov
nop
into
add
movsb
mov
jl
push
pop
jb
test
pop
cmpsb
add
js
add
mov
jno
add
ror
add
add
movl
cld
int3
mov
add
jo
out
aam
add
rorb
call
cmpl
je
push
push
add
lea
xor
push
sub
add
shl
xor
xor
sub
ror
sub
ror
pop
shr
not
add
add
pop
push
dec
pop
push
push
push
push
push
push
push
push
push
push
push
call
pop
pop
push
mov
fsubl
pop
lret
cld
imul
add
mov
add
pop
add
xchg
mov
cltd
mov
mov
mov
rcrl
mov
lret
add
stos
add
cltd
xchg
cld
icebp
pop
xchg
hlt
xlat
loope
lds
ljmp
lea
movl
push
add
pusha
add
pop
add
clc
iret
xlat
add
fidivs
push
movsl
ret
mov
lea
pop
call
push
push
push
push
lea
push
push
call
push
xchg
add
push
jmp
lods
push
leave
mov
outsl
add
add
movsl
add
xchg
cwtl
call
popa
insb
fcmovnbe
lret
jne
add
pop
add
xor
mov
filds
in
imul
jb
lea
add
je
sahf
flds
shlb
mov
add
add
add
sbb
cmp
or
int3
je
push
push
sub
push
or
inc
add
add
sub
sub
pop
lea
lea
shr
pop
push
ror
pop
push
call
cmpl
je
push
push
lea
push
push
pop
add
shl
shl
sub
lea
rol
pop
sub
inc
shr
pop
push
not
sub
rol
shr
pop
push
push
push
push
push
push
call
add
mov
mov
add
fisubrl
imul
divb
mov
add
jecxz
add
add
orl
mov
test
add
int
loopne
jge
push
add
add
add
mov
mov
xchg
add
jb
lods
in
xlat
loopne
xlat
mov
loop
add
pop
jmp
popa
adc
call
push
lea
ror
dec
pop
cmpl
je
push
push
sub
add
lea
push
xor
add
not
lea
sub
ror
lea
pop
xor
add
shl
pop
push
push
push
push
push
push
push
call
mov
fists
incb
lahf
aam
sahf
jbe
loope
add
add
std
push
jmp
lret
les
mov
add
arpl
xchg
add
add
xchg
mov
add
mov
mov
add
jnp
stc
add
xchg
jl
stc
add
mov
add
call
mov
lea
pop
push
push
push
push
push
lea
push
push
call
mov
add
test
jmp
in
fadds
add
add
or
lds
add
pop
lods
add
out
add
mov
imul
add
in
sti
jle
mov
ret
jnp
aad
lret
in
cmc
jnp
mov
add
rolb
add
add
push
push
add
add
lea
pop
call
cmpl
je
push
push
shl
not
lea
inc
push
sub
add
dec
lea
sub
ror
shl
add
pop
add
not
lea
pop
push
shr
add
pop
push
push
push
lea
push
lea
push
push
call
testb
push
jmp
je
sar
scas
add
jle
arpl
out
add
lahf
lods
std
add
add
cli
ja
loope
addr16
scas
call
mov
add
fcoml
mov
push
add
pop
add
add
lret
add
fildl
fsubrl
add
mov
lea
pop
call
push
rol
not
pop
cmpl
je
push
push
rol
add
not
push
sub
add
inc
sub
ror
pop
shl
pop
push
push
push
call
aad
add
add
in
shl
lahf
jl
std
loop
fistpl
js
mov
lock
add
mov
call
cltd
in
les
cmc
mov
mov
add
add
test
pop
rcl
pop
xchg
jmp
cmpsl
mov
into
push
icebp
mov
cmc
lcall
stos
icebp
add
add
cmpsb
add
jo
mov
lea
pop
push
push
ror
dec
ror
pop
call
cmpl
je
push
push
push
sub
add
add
sub
pop
shr
add
pop
push
shr
lea
pop
push
push
push
push
push
push
push
push
push
call
add
add
add
cmpsl
js
add
filds
add
mov
lock
icebp
test
rcrl
add
jl
test
add
ret
add
cmpsl
mov
rolb
add
add
add
push
push
add
xchg
popf
leave
add
cmpsb
pop
add
jl
out
xchg
add
add
mov
lea
pop
call
push
lea
push
push
call
scas
int
scas
push
popa
add
hlt
add
add
ljmp
out
add
lahf
add
add
pop
ljmp
call
out
mov
jmp
add
aad
test
add
mov
add
in
xchg
jno
rcrb
add
movb
fcmovb
lret
add
add
nop
add
pop
cmpl
jne
mov
push
push
push
push
call
add
mov
add
in
lea
lds
cmpsl
add
mov
push
imul
js
negl
mov
stc
xchg
add
add
add
gs
add
ljmp
add
mov
add
add
mov
sahf
push
add
bound
mov
xlat
cmpl
mov
add
add
push
insb
xlat
pop
testl
mov
lea
pop
movl
jmp
xor
push
push
push
push
push
push
push
push
call
xchg
add
xchg
fld
loopne
sti
cmpsb
pusha
add
test
mov
shll
add
incb
add
add
add
mov
add
mov
add
pop
jmp
jmp
ljmp
mov
repnz
add
add
out
xorb
jno
mov
mov
lds
mov
lea
pop
pop
push
pop
pop
push
push
push
push
push
lea
push
push
call
cmpsb
push
fsub
ror
jnp
test
jge
jae
mov
add
into
sarl
mov
icebp
out
add
addb
lcall
cmp
add
xchg
stc
add
xchg
mov
add
mov
scas
add
xchg
push
add
pop
push
push
mov
jnp
push
gs
ret
mov
add
fnstenv
aam
add
testl
push
add
add
sub
pop
ret
push
mov
push
push
push
call
jmp
push
mov
add
add
add
xchg
mov
xchg
fstpt
call
add
xorb
add
test
jns
adcb
imul
add
add
xchg
add
mov
xchg
add
fcmovnbe
popa
mov
jnp
fldl
add
scas
add
pop
push
add
test
in
addb
hlt
lea
pop
add
cmpl
jne
push
push
sub
sub
sub
push
and
add
add
sub
xor
pop
sub
sub
shr
sub
pop
push
lea
lea
shl
pop
pushl
push
push
push
call
add
add
addb
stc
add
add
cld
add
add
scas
lret
icebp
aad
add
add
in
bound
add
lret
cli
incb
mov
xchg
mov
mov
icebp
add
xlat
add
movb
add
bound
mov
notb
arpl
call
push
push
push
push
push
call
into
add
aad
add
add
fmul
add
roll
jbe
outsl
add
scas
xchg
outsl
into
add
push
jns
add
fwait
add
add
cmpsb
jo
ret
add
add
in
push
fwait
add
add
pop
in
incb
xchg
iret
mov
add
add
add
lods
add
clc
test
les
call
jmp
push
shr
dec
pop
cmpl
je
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
scas
mov
push
add
cmpsb
add
add
ret
cltd
add
fwait
add
pop
add
jecxz
add
mov
add
add
push
lea
test
ret
add
add
jge
mov
add
jno
add
jmp
add
add
imul
addr16
add
loopne
ja
arpl
add
mov
mov
lea
pop
cmpl
jne
push
ror
lea
pop
leave
push
lea
push
call
add
std
shr
add
lods
add
clc
add
nop
ret
sahf
fnstenv
add
add
pop
add
add
jbe
add
out
mov
pusha
cwtl
jge
cli
add
add
into
jp
mov
add
scas
push
jb
add
rcrb
add
in
add
lahf
add
mov
lea
pop
add
pop
push
lea
shl
pop
pop
pop
push
push
call
mov
shlb
int3
lock
add
stos
sti
loop
add
fcomps
mull
push
std
add
add
add
iret
movsl
add
pop
scas
jbe
push
iret
stos
add
loope
out
loopne
add
pop
add
xlat
add
test
stos
xchg
insb
fwait
add
roll
stos
add
push
stc
mov
stos
pop
add
cmpsl
loope
movsb
xchg
test
mov
lea
pop
pop
push
push
push
call
sti
lcall
jbe
add
pop
lods
lcall
int3
fiaddl
lahf
add
mov
add
cld
out
fwait
jbe
rolb
add
nop
out
cwtl
bound
xchg
add
ficomps
add
add
lods
jle
bound
add
call
add
loop
roll
stos
out
mov
movb
mov
lea
pop
leave
push
push
push
lea
push
lea
push
push
call
add
aad
imul
add
lds
push
aam
in
add
sarl
add
add
imul
lds
pop
add
add
stc
stos
jmp
add
in
add
add
mov
add
sar
add
jno
jp
fs
pop
mov
jbe
add
add
add
add
add
cmc
mov
lea
pop
add
ret
push
dec
pop
jmp
push
push
lea
push
call
add
leave
add
bound
mov
les
xchg
hlt
popf
sti
add
std
out
add
add
hlt
push
mov
add
bnd
int3
add
mov
adc
mov
leave
add
jne
add
add
testl
iret
pop
lret
add
add
notb
je
add
pop
cmpl
jne
push
push
add
shl
push
push
pop
add
sub
sub
sub
xor
pop
pop
push
push
push
call
add
mov
mov
mov
sahf
clc
add
faddl
jge
xchg
jno
add
xlat
add
add
add
popf
fld1
add
xchg
lds
add
pop
test
add
jle
add
add
mov
mov
jp
add
add
add
add
xchg
xchg
jecxz
add
test
cmpsb
mov
add
jge
les
jne
push
push
call
aad
bound
fdivl
add
addb
xchg
add
add
add
add
add
add
pop
jge
out
add
fidivs
andl
add
clc
testb
pop
jb
pop
add
ja
clc
pop
popf
rcll
out
push
push
add
out
out
add
out
jecxz
stc
add
add
mov
add
add
lea
pop
call
push
push
push
push
push
call
push
stos
popa
xchg
add
cmc
push
add
aad
push
icebp
pusha
popa
cltd
jmp
add
cmpsb
add
add
add
pusha
pop
jno
gs
mov
add
mov
xchg
add
mov
xlat
add
stc
add
mov
mov
add
mov
int
popa
add
add
hlt
lea
test
add
jno
add
add
mov
lea
pop
push
push
xor
pop
call
jmp
cmpl
jne
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
mov
loope
add
push
add
mov
add
add
add
add
pop
pop
add
insb
loopne
add
insb
pop
push
loope
push
jmp
pusha
add
lock
add
jmp
jmp
mov
ljmp
jmp
jb
add
ret
pop
lcall
add
mov
lea
pop
mov
mov
push
add
shl
pop
call
push
inc
sub
pop
push
push
lea
push
push
push
push
push
lea
push
call
add
pop
add
add
not
mov
out
add
add
test
add
mov
aad
stos
add
fists
add
shrl
add
jns
arpl
add
add
out
jbe
ljmp
mov
enter
insb
roll
push
add
jns
bound
ficomps
lds
mov
add
xchg
into
mov
mov
lea
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
mov
fstpt
leave
add
add
add
mov
scas
add
add
add
roll
add
hlt
test
add
clc
in
mov
add
add
movb
js
push
fiadds
add
xchg
add
add
add
jae
add
add
popl
fnstenv
imul
add
ljmp
into
mov
lea
pop
dec
jne
push
push
push
push
push
push
push
call
add
mov
mov
push
lds
ja
add
nop
in
add
add
rolb
mov
mov
add
add
imul
xchg
add
pop
call
test
mov
arpl
add
xchg
mov
call
pop
add
add
add
iret
add
mov
pop
call
jmp
push
push
lea
push
push
lea
push
call
gs
mov
arpl
fildl
add
jo
sar
sti
add
mov
pop
call
jge
lahf
ja
add
lret
add
add
add
ret
mov
mov
add
add
cmc
add
movl
add
mov
add
add
int
lods
push
add
add
addr16
lea
pop
call
push
push
sub
push
or
inc
add
sub
dec
add
inc
pop
ror
ror
inc
pop
push
lea
push
push
call
xchg
fs
iret
add
clc
filds
cmpsl
cmc
add
mov
jae
add
add
xchg
out
add
add
add
add
in
xchg
mov
stos
push
add
xchg
add
add
stc
mov
add
mov
jbe
subl
add
add
bound
subb
add
call
addr16
pushl
push
dec
pop
call
push
inc
sub
xor
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jp
add
add
add
add
jae
add
add
add
mov
add
push
pop
xchg
repnz
iret
sahf
mov
insb
pop
add
fs
mov
pop
add
xchg
call
iret
mov
popa
add
test
fiaddl
add
xchg
add
imul
mov
xchg
add
pushf
jmp
add
mov
stc
add
outsl
add
mov
lea
pop
call
push
add
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
std
add
jb
loop
data16
add
scas
add
mov
popf
add
imul
filds
add
add
in
in
add
in
addb
jno
push
sahf
add
add
add
jmp
push
testl
mov
add
lods
notb
mov
add
add
icebp
jecxz
jle
aam
bound
lea
push
push
ror
shr
push
and
add
ror
add
sub
not
pop
shr
add
pop
push
push
lea
push
push
push
call
jnp
aad
fisubrl
cmpsb
aam
add
pop
add
pop
add
lods
push
add
mov
insb
shlb
add
lret
int3
add
add
jb
sti
xlat
clc
mov
xchg
lret
push
aad
pushf
imul
into
pop
cmc
sahf
popl
add
cltd
add
add
testl
adc
pushl
call
push
push
ror
pop
call
push
push
not
rol
push
and
add
inc
sub
sub
sub
pop
add
lea
pop
pushl
push
lea
push
lea
push
push
lea
push
call
add
jge
pop
mov
xchg
mov
add
loope
jmp
push
push
bnd
add
scas
add
loop
xchg
add
xlat
push
add
scas
pop
frstor
add
pop
add
cmpsl
add
mov
fs
lahf
fldt
push
xchg
mov
cli
int3
add
mov
mov
clc
pop
push
bound
andl
sbb
add
inc
sti
imul
sbb
addr16
lea
push
push
lea
push
lea
push
call
mov
enter
jbe
mov
mov
add
lock
add
mov
mov
gs
push
cmpsb
idivl
add
in
mov
mov
xchg
add
add
jp
call
cmpsl
jns
cmc
add
iret
mov
add
add
add
pop
stos
pop
mov
lea
pop
call
push
shr
lea
pop
mov
lea
push
push
sub
sub
not
shr
push
and
add
add
not
ror
sub
sub
lea
pop
add
add
pop
push
xor
lea
rol
pop
pushl
push
push
push
push
push
lea
push
call
cld
lret
jb
and
fld1
push
popa
pusha
add
jno
call
lahf
add
add
roll
add
add
mov
add
push
push
les
jo
cmpsl
fwait
mov
orb
cld
add
pop
cltd
add
add
fwait
cltd
add
jl
push
loopne
cld
lea
pop
call
push
push
lea
push
push
call
add
add
stos
mov
add
fs
add
fstl
mov
add
popf
mov
pusha
mov
xchg
jae
mov
lea
out
jle
mov
sbbb
movsb
mov
add
add
cltd
out
add
bnd
add
lcall
les
add
push
pop
push
push
push
push
push
call
jmp
arpl
push
popf
add
xchg
pop
add
sti
xchg
fldl
add
fcomps
pop
jo
jl
aam
popa
test
clc
push
ret
stos
mov
add
add
jae
fwait
lcall
add
add
mov
add
std
jnp
add
mov
out
iret
pop
pop
out
mov
faddl
xchg
push
xchg
jmp
hlt
lea
pop
pushl
push
push
ror
push
push
pop
add
sub
sub
dec
pop
dec
lea
pop
push
push
push
push
push
push
push
push
call
jmp
jb
fldl
add
cmp
ja
mov
add
popa
popa
loope
add
add
add
nop
add
je
jb
pop
stc
add
jecxz
add
imul
add
cmpsl
cmc
mov
out
pusha
popf
add
cmpl
mov
add
in
std
add
add
pop
fimuls
xchg
pop
mov
lea
pop
call
push
push
xor
lea
push
or
not
add
inc
sub
add
ror
sub
sub
sub
pop
shr
pop
push
push
push
lea
push
lea
push
push
call
mov
add
add
add
add
add
aad
imul
shlb
jecxz
add
add
add
pop
add
pushf
add
hlt
stc
ljmp
je
add
lods
lret
clc
add
icebp
add
add
add
add
add
movsb
leave
add
into
ljmp
push
add
roll
mov
add
aam
add
mov
lea
pop
pushl
call
push
push
add
pop
call
push
push
xor
xor
ror
push
push
pop
add
sub
dec
dec
lea
pop
not
shl
sub
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
push
mov
nop
rclb
xchg
fiaddl
iret
nop
add
jp
add
fdivr
add
imul
add
and
testb
faddl
loopne
adc
add
add
add
ficoms
mov
add
movsb
aam
les
and
add
lock
cwtl
cmpsb
pop
leave
mov
pop
gs
add
mov
and
pushl
push
inc
add
pop
call
call
jmp
push
push
push
call
fwait
jp
add
mov
jns
add
add
in
add
add
mov
test
cmpsl
shrl
cltd
xchg
add
add
add
xlat
add
mov
add
add
bound
mov
xchg
stc
add
mov
add
push
or
add
insb
add
aad
stos
jne
add
add
hlt
lea
pop
pushl
push
lea
rol
sub
shr
pop
mov
jmp
push
push
add
inc
shr
push
or
inc
add
inc
add
dec
lea
sub
shr
pop
not
pop
push
push
push
push
lea
push
push
push
push
push
call
push
sahf
push
shll
mov
add
add
pop
mov
add
pop
xlat
ja
jo
add
test
mov
add
add
jbe
jge
ret
pusha
test
pop
test
add
push
add
mov
stos
lock
xchg
in
fsubs
loop
fwait
pushf
test
mov
pop
add
mov
call
stos
fcoms
hlt
add
add
add
add
test
test
les
jne
push
add
shr
not
add
pop
call
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
xchg
add
pop
jl
add
in
add
add
add
add
push
add
pop
add
add
scas
add
arpl
lcall
lret
jae
aad
mov
add
stos
add
add
jns
rolb
xchg
xchg
add
add
scas
movb
xchg
stc
in
cmpsl
notb
add
jl
add
add
push
orl
add
add
add
and
add
shrb
fimuls
in
aas
js
movb
push
push
pop
add
add
add
sub
rol
pop
rol
add
rol
pop
push
push
push
lea
push
push
call
add
add
shrl
add
mov
test
add
sti
push
add
movsb
add
add
pop
cld
xchg
in
testb
icebp
xchg
add
add
stos
add
add
addr16
add
add
xchg
lret
pushf
addb
add
scas
mov
rcrb
stc
add
icebp
add
add
mov
push
insb
in
pop
pushl
push
lea
push
push
call
clc
add
je
in
sarb
fadds
mov
add
rcrb
add
push
rolb
add
add
add
add
popl
pop
jnp
mov
nop
imul
add
je
mov
add
xlat
add
cwtl
mov
xchg
outsl
jle
add
add
add
add
mov
lea
pop
call
push
push
shr
rol
inc
dec
pop
call
push
push
push
push
lea
push
call
aad
mov
add
add
nop
jbe
outsl
add
lret
jecxz
add
icebp
add
flds
repnz
rcl
les
in
roll
add
jo
jmp
jge
pusha
mov
add
jge
out
fistpll
add
mov
push
add
push
mov
mov
add
add
stos
icebp
mov
shll
mov
movsb
imul
fmull
add
push
add
pop
pop
pop
pop
push
push
push
push
lea
push
push
call
js
mov
push
xchg
push
add
sahf
cmc
add
mov
mov
add
add
add
add
add
add
add
rcr
addl
movsb
incb
add
pop
rcll
cmc
xchg
add
add
add
in
pop
scas
add
add
add
mov
mov
sbb
push
push
push
call
jle
add
add
mov
add
push
add
lock
mov
add
arpl
add
jnp
clc
sarl
out
add
add
pop
add
add
out
jbe
add
add
arpl
iret
add
fiaddl
add
add
mov
lea
pop
leave
add
push
sub
sub
not
pop
ret
leave
ret
push
sub
ror
pop
push
push
push
push
push
push
call
add
cli
lret
add
add
in
repnz
data16
lods
mov
insb
add
xchg
add
add
add
popa
icebp
xchg
jo
add
add
insb
iret
icebp
stc
std
mov
add
popa
add
add
into
mov
pop
mov
mov
push
add
and
mov
lea
pop
mov
cmpl
jne
push
push
push
push
lea
push
lea
push
push
call
mov
cmc
add
push
mov
add
push
loop
int3
jns
gs
add
mov
add
hlt
xchg
xorl
add
out
add
add
imul
mov
mov
jno
add
pop
mov
stc
cli
pop
xchg
lcall
enter
add
cmpsb
jp
add
imul
outsl
repnz
sarb
out
push
out
mul
mov
stos
nop
mov
lea
pop
mov
push
xor
shr
sub
add
pop
jmp
mov
and
push
push
push
push
call
add
add
add
jp
add
add
add
add
loop
shll
insb
sti
add
addb
push
add
into
scas
add
leave
in
add
mov
insb
pop
data16
movsl
rolb
add
add
xchg
xchg
add
imul
jle
xorb
add
add
hlt
cmpsb
add
out
movsl
out
stos
in
ficoms
xor
aam
bound
pop
xor
xor
push
lea
pop
add
push
inc
inc
rol
inc
pop
xor
push
inc
sub
add
xor
pop
dec
sub
push
push
push
push
push
lea
push
lea
push
push
push
call
into
add
lock
mov
xchg
add
add
bound
add
loopne
nop
add
cmp
push
in
add
xchg
push
jo
add
add
into
add
add
lock
mov
add
incb
add
roll
add
test
add
add
sti
imul
aad
test
mov
add
add
aam
add
pop
jmp
sub
pushl
push
lea
push
push
call
shl
pop
add
jno
out
xorb
into
insb
jb
jl
icebp
push
out
push
mov
add
fiadds
add
shl
add
add
pop
mov
gs
add
pop
add
js
add
shlb
add
fdivl
add
add
jbe
add
add
pop
pop
push
push
lea
push
push
push
call
mov
pop
cwtl
add
mov
add
add
add
jno
mov
jbe
js
cli
add
in
add
jns
idivb
push
add
add
add
add
icebp
lods
add
add
imul
mov
lds
add
add
add
push
mov
lea
pop
sub
cmp
jne
push
lea
push
call
cmc
add
mov
notb
mov
mov
jne
in
nop
repnz
jmp
add
add
add
push
add
pushf
fwait
cli
lcall
stc
add
add
les
loope
add
mov
add
add
in
add
add
xchg
add
add
test
add
int3
lea
pop
mov
lea
push
shl
shl
pop
sub
mov
shr
push
lea
push
push
push
call
xchg
bound
add
add
icebp
add
hlt
scas
pushf
into
cwtl
add
add
faddl
add
add
add
out
cmpsb
add
add
add
add
lea
ja
pusha
adc
jbe
sarl
xchg
testl
out
call
xchg
push
gs
add
stos
add
ret
add
add
pushf
leavew
cmpsb
mov
fistl
popa
adc
enter
pushl
push
lea
push
push
push
push
lea
push
push
push
call
add
aam
mov
push
mov
add
mov
add
rolb
mov
jl
rolb
add
stos
roll
add
pop
int
icebp
pop
add
jae
jbe
add
ror
test
add
loopne
mov
add
js
jno
add
mov
jmp
xchg
xchg
add
mov
cld
add
add
add
aam
bound
pop
pop
shr
and
push
shr
pop
sub
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
xlat
imul
int3
scas
add
add
add
mov
outsl
add
fldl
mov
add
jbe
pop
popf
jbe
add
add
add
lret
outsl
cmc
add
add
add
xchg
movsl
movb
repnz
add
push
add
lods
push
test
xchg
pop
fndisi(8087
jno
add
xlat
add
fs
cld
lea
pop
cmp
jne
push
push
push
push
lea
push
push
push
push
call
xchg
jmp
jl
repnz
add
add
addb
popl
lea
add
xchg
enter
add
icebp
add
mov
pusha
add
clc
leave
cmpsl
repnz
lods
aam
add
mov
sbbb
adc
cwtl
add
jmp
add
js
rorl
lea
pop
leave
push
lea
push
lea
push
lea
push
push
call
jne
ja
add
pop
add
add
sbbb
add
add
ja
loopne
mov
mov
fadds
lea
fiadds
enter
clc
add
lcall
add
addl
mov
idiv
enter
add
int
jnp
add
add
out
add
jge
cmpsl
add
pop
fistpll
add
mov
addl
mov
lea
pop
ret
push
push
call
add
stos
testb
add
cmpl
lcall
loop
add
popf
lea
fwait
jb
shll
outsl
test
add
add
push
add
out
pop
fiadds
lods
add
mov
mov
pop
pop
mov
add
data16
mov
push
pop
bound
add
fs
addr16
jp
out
jecxz
gs
fiaddl
add
loop
ja
shl
mov
lea
pop
push
mov
push
dec
ror
dec
pop
add
push
dec
xor
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
rolb
add
addr16
add
arpl
arpl
push
movl
notb
stos
add
push
add
jo
addr16
add
test
add
xchg
hlt
in
add
fildl
jge
jecxz
push
pop
fwait
add
fiadds
add
mov
add
cld
nop
std
movsl
pop
add
add
pusha
and
push
mov
push
add
lea
rol
pop
lea
sub
push
push
lea
push
lea
push
lea
push
call
mov
jns
mov
mov
add
add
add
add
add
pop
les
ret
push
add
pushf
enter
out
jno
lahf
add
mov
add
cmpsb
add
add
add
xchg
jo
lock
pop
test
add
lea
pop
mov
shr
push
xor
inc
pop
add
push
sub
lea
pop
mov
add
push
add
pop
mov
add
xor
push
lea
push
push
push
push
call
imul
xchg
jle
mov
lret
mov
add
xchg
mov
out
add
push
insb
arpl
rolb
in
arpl
pop
lock
add
add
xchg
scas
sar
lcall
add
pusha
jns
add
add
insb
add
add
push
push
mov
mov
lea
pop
mov
push
push
push
call
add
add
add
add
out
add
add
add
lahf
add
fcomp
add
scas
add
xchg
cwtl
add
add
bound
xchg
addr16
sahf
xchg
add
mov
add
add
mov
cltd
add
add
mov
int3
jge
pusha
add
add
lcall
fdivr
in
in
add
add
add
add
lcall
or
and
push
sub
add
sub
pop
call
add
cmp
je
push
add
pop
add
push
shr
xor
pop
cmpl
jne
push
push
push
call
add
add
add
add
data16
add
add
nop
jge
sti
ret
xchg
add
aam
hlt
add
add
mov
ljmp
out
mov
add
add
jecxz
add
popf
add
add
jl
clc
add
mov
fiaddl
mov
jno
incb
sti
orb
loop
add
jns
ja
in
aam
bound
xor
push
inc
pop
pop
pop
push
not
pop
pop
pop
pop
push
lea
add
shl
pop
leave
ret
mov
push
lea
lea
shl
pop
add
push
push
push
call
loope
fincstp
jp
add
add
add
into
push
add
fcoms
add
sti
cmc
add
add
push
stos
add
fisubrs
enter
mov
push
add
add
rclb
out
icebp
add
mov
push
fcoml
add
mov
cmc
add
gs
jle
add
mov
lea
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
cmpsb
add
add
roll
lods
xchg
add
mov
loop
je
jmp
lret
add
repnz
add
stos
cli
add
mov
jl
pop
add
out
add
add
push
lahf
stos
add
add
imul
add
add
and
pop
mov
push
add
dec
pop
push
call
xor
push
lea
push
push
push
push
push
push
push
push
push
call
bound
add
lods
leave
add
cli
ljmp
add
add
shll
add
mov
xchg
mov
fiaddl
leave
add
xchg
lds
arpl
add
hlt
pushf
fldl
add
xchg
mov
add
add
div
mov
add
js
add
mov
add
mov
lea
pop
pop
pop
pop
push
shl
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
movsb
mov
add
add
push
add
add
jbe
flds
add
add
xchg
add
mov
push
add
mov
roll
stos
mov
pusha
add
ja
imul
ret
mov
shll
push
mov
add
add
mov
add
leave
clc
add
mov
shll
add
add
fmull
leave
ret
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
push
jno
sti
add
mov
add
add
add
add
leave
add
add
stos
mov
lret
in
jb
iret
mov
aad
push
in
push
movsb
mov
add
mov
lahf
ljmp
scas
add
add
add
lock
lods
fildl
mov
int3
add
faddl
add
mov
lahf
lret
add
jge
lret
in
xchg
add
pop
push
mov
push
add
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
mov
push
add
aam
push
pushf
add
test
add
lods
add
add
add
add
testl
enter
add
bound
add
push
jp
mov
add
loope
add
push
add
lea
add
push
add
add
scas
push
add
pop
mov
imul
cmpsb
testl
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
add
add
ja
out
add
add
mov
add
add
mov
int3
stc
fiadds
outsl
add
shlb
add
add
jns
mov
add
add
shrl
test
mov
jl
add
jb
mov
xchg
fiaddl
add
lds
hlt
push
add
add
repnz
lret
aam
bound
pop
push
push
push
push
push
push
push
push
push
call
jo
pop
loopne
add
add
push
xchg
push
fsubrl
cwtl
xchg
mov
pop
call
add
mov
pop
pop
outsl
iret
jns
cmpsl
insb
mov
push
add
add
jecxz
jmp
pop
xlat
mov
add
int
in
push
js
xchg
mov
add
add
xchg
addl
pop
add
add
orb
jbe
orb
jns
add
mov
lea
pop
push
push
shr
rol
lea
rol
pop
mov
push
not
shr
pop
push
pop
lea
push
shr
inc
inc
pop
sub
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
mov
add
fcmovnu
out
ljmp
movb
push
add
popaw
xchg
add
add
add
add
popa
add
iret
sbbb
add
loop
out
lret
mov
add
fwait
add
lods
adcl
add
add
mov
lea
pop
mov
push
shr
pop
shr
add
push
push
push
lea
push
push
push
push
lea
push
call
test
addb
data16
mov
popf
mov
mov
cmpsb
incb
ror
adcl
add
push
clc
xchg
add
add
ljmp
push
xchg
lods
add
scas
add
mov
add
mov
jb
cwtl
fsubrl
add
add
add
add
imul
movsl
add
pop
mov
add
push
lea
inc
pop
pushl
popl
push
push
push
call
push
sti
xchg
lcall
add
mov
imul
ljmp
add
add
std
in
add
aam
add
add
data16
lret
add
add
hlt
add
add
add
int3
ja
outsl
add
push
movl
jl
jnp
mov
add
les
insb
shrb
xlat
roll
add
xchg
add
ljmp
add
stos
mov
lea
pop
mov
add
xor
push
push
push
push
lea
push
push
push
push
push
push
call
scas
add
add
mov
add
mov
rorb
add
test
lods
lods
jecxz
vmaskmovdqu
shl
add
push
add
addb
add
mov
add
mov
cltd
add
add
add
add
add
add
icebp
int
adc
pop
add
rcrl
mov
lock
pop
scas
int3
test
popa
add
int3
add
add
add
test
scas
cli
mov
in
int3
lea
pop
lea
mov
add
push
xor
shr
pop
xor
call
push
add
pop
add
nop
nop
push
push
push
call
add
add
mov
xchg
jns
xchg
add
push
loope
stos
lcall
loop
hlt
js
mov
movsb
add
cmpsl
add
call
add
data16
mov
addl
xchg
add
push
lret
add
push
fwait
mov
add
test
add
add
adcl
mov
lea
pop
cmp
je
nop
push
inc
pop
nop
inc
nop
push
push
lea
push
lea
push
call
imul
add
add
cwtl
pusha
add
add
shll
lahf
add
push
mov
data16
add
cli
pop
mov
add
sti
add
mov
fs
mov
add
incb
jecxz
sti
popf
add
xchg
sub
add
add
imul
mov
rolb
mov
add
in
pop
mov
stc
add
xchg
mov
lea
pop
nop
cmp
jb
xor
push
not
ror
add
pop
jmp
mov
push
ror
sub
pop
add
movzwl
mov
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
pop
mov
sti
clc
test
jecxz
add
add
adcb
add
lret
add
movsb
fwait
add
iret
add
faddl
int
add
add
add
add
fwait
mov
xchg
pop
add
add
call
add
add
push
subb
cmpsl
jmp
mov
rcll
xlat
popf
ret
movl
mov
pop
add
mov
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
add
sti
fcmovne
pop
add
add
xchg
xchg
xchg
add
add
rcll
jns
mov
call
fiadds
mov
mov
add
popa
sahf
xchg
mov
add
movsl
add
mov
movl
jnp
add
lcall
roll
mov
lea
pop
xor
push
shr
not
pop
xor
shl
push
push
push
push
lea
push
push
push
call
add
in
xchg
mov
lds
test
pop
jmp
add
add
lds
jo
push
add
sahf
add
jbe
push
add
add
add
mov
cmpsb
add
mov
out
lret
add
cwtl
add
lcall
std
in
fldl
popf
push
rolb
push
add
pop
add
add
add
sbb
xor
push
lea
push
call
push
testb
add
repnz
mov
jmp
add
out
xchg
lock
add
cwtl
mov
jl
cmpsl
in
cwtl
mov
in
mov
add
scas
out
mov
stc
mov
add
lods
addr16
xchg
pusha
push
shll
js
pop
add
out
pushf
mov
add
push
nop
add
add
add
mov
add
pop
pop
add
add
mov
lea
pop
shl
push
add
add
sub
pop
xor
push
shl
pop
shl
xor
mov
push
inc
shl
pop
add
push
ror
shr
shl
pop
pop
push
add
shl
pop
pop
pop
push
push
call
cmpsl
xchg
test
xchg
add
rcrb
lahf
leave
push
cld
add
mov
jmp
pushf
addb
cli
popa
fadd
icebp
add
add
clc
mov
jge
add
imul
add
add
add
add
xchg
push
mov
jle
iret
fwait
test
pop
outsl
popa
test
arpl
mov
fucomi
xchg
jecxz
stc
add
add
add
pop
pop
push
sub
shl
add
add
pop
leave
ret
push
pop
push
mov
push
push
lea
push
push
lea
push
push
lea
push
call
pop
mov
test
addr16
fildl
jle
xlat
rclb
icebp
popl
scas
add
pop
add
add
icebp
scas
cld
sti
scas
jge
scas
gs
add
jecxz
add
insb
add
clc
lods
mov
aad
mov
mov
lock
outsl
push
add
add
cmpsl
add
jecxz
rcrl
mov
hlt
lea
pop
push
push
push
add
shr
dec
pop
push
mov
mov
push
shl
xor
pop
mov
test
je
push
push
lea
push
call
xchg
add
sti
lret
mov
jle
add
pop
add
add
add
add
pushf
out
cld
mov
mov
add
add
add
mov
andb
into
addr16
test
add
add
fwait
sahf
je
mov
out
mov
add
jmp
add
pop
add
add
add
mov
or
mov
test
je
mov
push
lea
push
lea
push
call
add
push
add
enter
imul
add
pop
jae
xchg
into
rcr
mov
lea
addr16
cli
add
add
add
add
movsl
into
add
fsubp
add
add
clc
add
mov
add
call
add
push
mov
lea
pop
mov
push
rol
inc
pop
mov
push
push
lea
push
push
push
push
push
call
leave
roll
movsb
add
mov
ja
lahf
mov
xchg
xchg
addl
lahf
add
add
fdivrp
fwait
add
scas
mov
cmc
testb
push
lahf
add
gs
shll
mov
push
add
icebp
add
add
aam
add
mov
lea
push
repnz
addb
mov
gs
pop
ret
in
iret
add
pop
inc
cmp
je
test
je
push
pop
mov
push
push
lea
push
call
add
pop
mov
mov
popa
flds
mov
add
popa
mov
jmp
cmpsb
mov
test
add
add
add
add
add
mov
mov
fdivrs
push
stos
fidivl
movsb
test
cli
add
add
add
add
fiaddl
mov
add
out
add
pop
inc
cmp
je
test
jne
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
leave
add
add
js
add
pushf
ja
in
jmp
cmc
add
add
stos
add
jle
movsb
roll
push
mov
add
xchg
fwait
pop
add
add
jb
add
add
add
add
add
jne
sti
out
mov
lret
add
in
jo
insb
aad
add
shl
insb
mov
lea
pop
xor
push
push
call
stc
lahf
add
add
ljmp
clc
add
add
mov
add
in
add
in
jecxz
ja
in
pusha
jae
test
jmp
mov
pop
fcmovne
push
add
add
jb
push
push
mov
add
cmpsb
push
pop
lret
add
sti
pop
add
jecxz
jmp
icebp
xchg
gs
jl
mov
pop
mov
lea
pop
pop
push
pop
pop
push
shr
lea
pop
pop
pop
push
push
push
push
push
call
add
fcompl
rcrl
lret
add
jnp
stos
ljmp
mov
popa
arpl
jge
loopne
add
mov
add
imul
jnp
add
add
pusha
pop
fsts
add
add
je
jbe
add
add
lret
add
lret
push
add
int3
sti
add
fs
std
icebp
mov
lea
pop
leave
ret
push
push
push
push
lea
push
call
testl
loopne
sahf
clc
jno
jle
mov
add
jno
imul
insb
test
mov
jmp
add
into
fcmovu
add
leave
cwtl
pop
fsubs
add
push
vphaddubd
add
shrl
add
cmc
fldt
in
add
add
add
bound
add
add
in
mov
imul
icebp
jl
mov
lea
pop
mov
push
rol
xor
pop
inc
cmp
jne
lea
push
inc
pop
mov
push
push
lea
push
push
push
lea
push
call
lcall
leave
jne
add
cld
add
add
mov
add
clc
add
add
movsb
xchg
lcall
jbe
pop
add
add
pop
xchg
stc
mov
out
sahf
test
jl
pop
hlt
fcoms
pop
add
test
add
fucomp
jns
lock
cmc
js
mov
lea
pop
test
je
mov
add
push
push
call
mov
out
gs
add
add
add
add
loop
add
push
pusha
mov
push
pop
jl
int
add
int3
jge
add
add
add
pop
stos
pop
lods
in
add
pop
xchg
je
call
fsubs
add
add
mov
add
pop
lret
pushf
push
sub
repnz
push
pop
add
cld
lea
pop
cmp
jne
push
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
add
jbe
loope
mov
add
rcll
lds
enter
add
add
add
ror
add
mov
add
lret
mov
lcall
mov
add
add
mov
icebp
xlat
fwait
jmp
scas
enter
call
int
push
add
add
std
cltd
mov
jns
add
pop
test
je
push
sub
pop
mov
push
lea
rol
pop
add
push
xor
pop
cmp
je
push
push
push
lea
push
push
push
lea
push
push
call
test
mov
add
jnp
push
jno
mov
shlb
cli
mov
fcmovnbe
mov
jne
js
movsb
fildl
call
pusha
arpl
add
divb
loopne
add
lcall
fisubl
jb
pop
jo
add
add
add
pop
mov
out
jmp
arpl
add
movsl
test
push
xchg
add
xchg
rorl
jmp
xor
pop
push
shr
rol
dec
pop
pop
pop
push
lea
push
push
push
push
push
call
mov
xchg
in
add
push
add
ljmp
add
add
push
add
pop
clc
ja
in
lock
add
test
push
jnp
data16
add
add
add
into
add
scas
je
enter
out
add
add
sarb
push
add
cmpsb
mov
testl
sbb
leave
push
push
push
push
call
movsb
idivl
pop
rolb
cmpsl
jmp
mov
loope
mov
xlat
add
sahf
pop
add
add
pop
add
incb
int
rolb
scas
popl
jb
jb
lods
fwait
push
pop
mov
fiaddl
xchg
repnz
xchg
jge
add
add
xchg
add
sahf
add
mov
fwait
ljmp
pop
hlt
loopne
add
add
adc
or
lea
push
push
push
push
lea
push
call
repnz
push
add
push
jl
add
mov
je
add
fadd
add
jecxz
imul
lret
pop
xchg
mov
add
add
cmpsb
jmp
js
int3
lds
fcompl
stc
mov
popa
add
loop
xchg
mov
xchg
add
fadds
add
add
loope
scas
add
call
push
jge
fmull
push
push
push
push
push
lea
push
lea
push
push
call
lret
mov
pushf
mov
add
add
add
mov
add
mov
add
out
add
mov
add
into
cltd
push
jl
jmp
add
fistpll
xchg
movsb
push
add
add
fbstp
jns
jno
add
jbe
add
test
add
add
add
loopne
fiadds
add
stos
bound
pop
pop
mov
arpl
pop
pop
pop
push
push
call
fwait
add
add
mov
add
pusha
push
shl
shr
lock
add
add
add
add
data16
add
pushf
insb
jns
add
mov
ljmp
add
lret
filds
aam
shr
push
add
jne
in
add
mov
add
jmp
xchg
add
mov
add
repnz
lea
pop
pop
leave
ret
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
push
mov
outsl
ljmp
fs
lahf
bound
add
cli
jge
xchg
jo
lret
test
cmpsl
scas
movsb
std
pop
add
push
mov
je
ja
add
push
call
cld
add
add
jl
jb
popf
add
add
jp
add
add
hlt
lea
pop
mov
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
add
mov
pop
add
jb
hlt
xlat
add
xorl
divl
stc
add
pop
pop
pop
popf
add
faddp
popf
mov
imul
jae
jo
stos
jb
push
add
hlt
pop
nop
cmpsl
add
cwtl
adcl
outsl
mov
mov
cld
lea
pop
pop
push
push
push
call
add
add
lds
add
rcll
test
loopne
hlt
mov
xchg
incb
add
mov
cmpsb
popa
outsl
push
shrb
gs
adc
add
add
pop
jo
mov
leave
or
add
xchg
lea
add
add
movsb
xchg
jge
jae
mov
lea
pop
pop
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
pusha
leave
add
test
add
jle
addr16
out
add
roll
ret
add
add
push
shlb
gs
mov
les
js
add
jle
add
out
mov
mov
add
mov
mov
xchg
add
jmp
mov
lea
pop
pop
leave
push
push
lea
push
push
lea
push
push
lea
push
call
testl
rorb
mov
fstp
fdivs
fldl
stos
addr16
icebp
out
fadds
imul
lods
std
js
rolb
add
add
out
addr16
add
add
cli
add
pusha
add
addb
jae
cwtl
fs
mov
add
loope
add
mov
add
pop
ret
rol
rol
push
push
push
push
call
push
add
add
add
mov
sbb
jb
add
insb
xchg
jnp
test
lods
imul
test
xchg
into
add
add
fnsave
insb
testb
add
fstps
imul
popa
jae
loopne
add
jecxz
jnp
pop
add
popa
add
test
add
hlt
imul
clc
add
pop
mov
lea
pop
xor
push
sub
sub
dec
add
pop
inc
cmpb
jne
ret
sbb
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
jge
mov
sti
movsb
sub
sti
in
mov
add
sbb
xchg
push
rorb
lcall
inc
jecxz
xchg
mov
fcompl
lcall
sti
shll
pop
ss
fcoms
aad
test
mov
jge
mull
insl
adc
mov
jp
jge
xchg
js
xor
jl
xlat
shlb
cs
je
dec
xorl
data16
lock
in
pop
out
push
jp
sub
icebp
insl
into
adc
jmp
lahf
out
mov
call
pop
sti
add
push
mov
adc
mov
push
jmp
test
pop
ficomps
xor
pusha
fmulp
sbb
mov
cmp
push
jno
clc
push
dec
jp
nop
mov
xchg
push
pusha
pop
mov
movsb
les
push
add
mov
daa
ds
add
jle
dec
push
loopne
lret
ds
hlt
out
sti
inc
pop
sub
das
mov
and
add
orb
jnp
cmp
sub
dec
dec
sub
lret
sbbb
jp
inc
aas
mov
lods
sub
ljmp
in
cli
rclb
mov
mov
xor
fdivs
lods
mov
cmp
ret
loopne
outsl
jecxz,pn
aad
mov
and
sarl
dec
mov
adc
lahf
jno
cmp
pop
cmc
mov
hlt
jmp
das
sarl
test
es
loop
mov
in
sbb
inc
int3
clc
shll
pop
sub
int
dec
cmc
or
orl
xchg
clc
aas
fisubs
xor
push
adc
push
scas
test
pusha
jno
mov
dec
xor
and
dec
mov
das
cli
pop
sbb
xchg
das
mov
jl
mov
int
aam
mov
fwait
mov
or
cmpsb
adc
xchg
push
lea
fs
xor
fsubs
add
shl
add
mov
sbb
test
fnsave
and
je
sub
insb
fldcw
fwait
and
xor
or
sub
sbb
push
mov
pop
insl
in
add
mov
in
daa
mov
add
cmp
or
mov
mov
mov
cld
cli
lret
outsb
in
scas
cwtl
insl
fistl
cltd
bound
fstp
scas
jg
sbb
jl
pop
mov
rcll
lahf
outsb
retw
push
pusha
arpl
xor
daa
fcomp
popa
cmp
out
inc
insl
test
arpl
xor
ret
or
jl
or
pop
shlb
push
push
out
add
jae
xchg
push
test
cs
cmc
mov
and
dec
enter
es
dec
popl
cld
pop
bndldx
test
xchg
dec
pop
adc
mov
jmp
cmp
cmp
scas
jl
fnsetpm(287
loopne
push
dec
loopne
jne
loope
push
lock
shrb
dec
movsb
sub
sub
imul
cmp
cmpsb
cltd
les
jmp
sbb
pushl
mov
cmp
idivl
mov
dec
adc
scas
outsb
add
lea
push
dec
cmp
rcr
jo
sbb
xchg
arpl
inc
sub
push
mov
lahf
xchg
nop
xor
or
add
xchg
or
mov
daa
inc
cltd
pushf
push
stc
outsb
rorl
arpl
pop
sbbl
dec
inc
dec
pushf
gs
or
push
pop
loop
enter
dec
and
adcb
sahf
add
cmp
lods
lcall
cli
loopne
mull
cmp
iret
sbb
push
add
or
js
mov
jl,pt
shr
aad
mov
out
push
divb
mov
and
inc
adc
dec
push
mov
sbb
ror
daa
cmp
sub
cmp
cmp
cli
scas
cmp
and
test
mov
pop
outsl
in
scas
shll
lods
xchg
out
inc
and
shrl
insb
sub
cs
fadd
leave
cmp
ret
aas
push
sbb
icebp
cwtl
movb
cmp
jnp
stos
cmpsl
jp
jp
pushf
in
es
pop
loopne
inc
repz
popf
setns
movsl
fs
xchg
insb
nop
fstpt
arpl
mov
popa
dec
bound
shrb
stos
dec
xor
inc
xor
mov
and
dec
cltd
push
inc
sbb
js
popa
imul
mov
out
aam
daa
sbb
aam
adc
mov
inc
lret
loope
adc
push
cmc
adc
xadd
mov
ljmp
adc
in
sbb
or
adc
sbb
aad
stos
imul
repnz
sbb
xchg
repz
push
and
push
es
push
xchg
push
mov
pop
dec
test
inc
push
sbb
scas
mov
loope
mov
stc
test
scas
mov
adc
mov
test
mov
outsb
dec
outsl
xor
popa
js
dec
pusha
push
call
fisubl
jns
out
scas
ret
scas
xchg
xchg
daa
insb
push
adc
out
jno
mov
aaa
lcall
xor
xchg
ret
add
nop
push
xchg
jo
dec
mov
bound
ds
leave
test
rcr
dec
jl
or
fsubrp
cld
js
bound
mov
mov
cltd
into
aad
add
or
mov
mov
aad
out
sahf
aaa
sahf
push
push
cld
xchg
xchg
insb
lods
xlat
mov
loop
outsb
icebp
or
dec
lret
out
dec
dec
mov
mov
xor
fcomi
addb
jns
cltd
dec
je
in
push
iret
outsb
int
sbb
dec
mov
sub
xchg
fsts
cmc
pop
push
mov
cmp
adc
mov
add
cmp
xor
mov
incb
sub
jo
hlt
inc
jmp
call
scas
mov
sub
sbb
inc
sub
push
es
or
mov
jle
xor
mov
dec
adc
sahf
xor
int3
cli
sub
xchg
jne
xchg
mov
dec
clc
test
or
jb
fcmovb
clc
push
push
or
arpl
out
rorl
in
in
mov
mov
movsb
loop
push
add
push
lds
lods
lea
xchg
add
pop
inc
adc
adc
adc
fldl
icebp
adc
fwait
dec
mov
and
sbb
sbb
imul
outsl
and
jmp
push
dec
adc
mov
iret
cli
xor
mov
mov
jne
lcall
lods
pop
clc
jge
mov
mov
in
push
mov
ss
les
mov
icebp
insl
xchg
inc
mov
dec
mov
jae
mov
cmp
dec
std
sbb
jns
call
shlb
add
test
push
xlat
fxch
cli
mov
jecxz
mov
mov
adc
jno
add
test
out
mov
fwait
cmp
cmpsb
add
cmpl
xor
jp
mov
mov
add
cmp
mov
dec
gs
mov
cmp
mov
inc
jae
imul
cmp
daa
pusha
or
xlat
sub
inc
clc
es
xor
fldcw
inc
aas
lahf
dec
pop
dec
shlb
punpcklwd
sbb
jg
mov
inc
xor
nop
outsl
dec
sbb
sbb
out
xchg
mov
sub
ss
out
iret
mov
cmp
fisttpl
push
lods
test
out
add
pop
mov
adcb
pop
mov
fwait
mov
nop
and
cmpsb
leave
jmp
into
popa
sub
shlb
xor
ret
dec
inc
push
and
xor
push
cmp
ret
sbb
lret
and
xor
mov
dec
repz
inc
outsl
out
cmpsl
das
jnp
mov
in
inc
xor
add
mov
xor
fwait
inc
xchg
mov
adc
xchg
andl
jne
mov
xchg
xchg
call
daa
std
arpl
pop
and
jecxz
pop
and
mov
addr16
aaa
jns
add
lods
sar
or
lock
jmp
rcr
pop
std
xor
dec
sub
mov
sub
cmpsb
sbb
out
fldt
dec
dec
ret
jne
mov
or
sbb
push
pop
push
xor
adc
mov
out
js
inc
scas
scas
js
xlat
jp
ljmp
sbb
mov
movb
fistpll
mov
adc
movsb
or
leave
int
sbb
mov
jp
dec
pop
mov
mov
scas
imul
inc
xchg
cmp
gs
or
sahf
cmp
xchg
cwtl
mov
lods
popf
and
ror
jno
add
sub
jg
mov
sti
jo
bound
pop
mov
cmp
fcomps
popa
add
dec
in
and
push
testb
cmp
andl
scas
fldcw
fistps
jae
clc
imul
mov
lds
inc
inc
mov
sbb
cmpb
imul
movsb
inc
push
lahf
mov
stos
lods
ss
pop
je
int3
in
testb
xchg
sbb
bound
fs
popf
xchg
adc
push
mov
cmp
jb
mov
mov
inc
int3
imul
sbb
inc
lea
test
testl
loop
adc
fcmovnb
pop
jns
icebp
pop
into
add
mov
minps
aaa
int
cmp
out
ss
sub
addr16
imul
or
jecxz
testb
aam
adc
insb
sahf
sub
cmpsb
jb
test
test
repnz
mov
cmp
ja
jge
xor
mov
inc
dec
std
out
cmp
test
cli
popa
cmp
xchg
add
sub
cli
and
shrl
lea
or
mov
scas
adc
push
mov
xchg
dec
scas
mov
inc
pusha
bound
dec
repnz
add
jl
popa
push
and
addr16
stc
loop
add
imul
push
popa
jne
je
cmpsl
xchg
xchg
insl
and
test
andb
mov
cmp
inc
movsl
sub
scas
out
cmpb
mov
and
arpl
pop
in
jl
stos
inc
pop
inc
inc
push
push
or
popf
aaa
xchg
adc
jo
mov
push
mov
lods
leave
inc
mov
fmull
aam
push
adc
lock
pop
and
mov
sub
xchg
sahf
mov
data16
idivb
arpl
and
and
mov
xchg
nop
or
sub
mov
enter
orb
fistps
sub
aam
sub
lcall
sahf
jmp
icebp
inc
cld
xchg
cmp
test
lods
jmp
lcall
lret
jge
cs
cli
push
or
mov
xor
or
and
push
mov
mov
dec
shl
adc
xchg
xor
leave
pop
adcb
test
adcb
push
out
out
pop
mov
fcmovu
int3
pusha
jo
enter
into
mov
pand
xor
loopne
out
xor
mov
ljmp
xor
and
aad
je
adc
adc
nop
cmc
jmp
lock
in
aad
push
dec
and
mov
jbe
pop
mov
mov
insb
add
subb
movsb
aam
sarl
add
decb
dec
jmp
out
jmp
pop
add
mov
mov
inc
xlat
sbbl
aam
or
loop
imul
add
movsb
idivl
push
enter
jl
add
inc
test
mov
je
push
sub
je
iret
adc
testl
call
inc
setge
xchg
data16
ret
mov
inc
dec
xor
mov
mov
jnp
outsl
mov
dec
lods
cmp
int
xchg
addb
data16
out
mov
jmp
ljmp
mov
in
push
or
pop
call
sub
ret
add
out
xor
mov
jge
jns
movsl
test
adc
aas
xlat
mov
sub
pop
es
shl
mov
or
dec
push
filds
push
mov
sbb
shll
push
mov
sbb
xor
and
cmp
in
nop
jno
cmp
push
adcb
jl
cmp
lods
out
mov
addr16
iret
cwtl
aad
mov
pop
cmp
mov
cmp
inc
or
xchg
stos
pop
mov
sub
adc
adc
mov
mov
cmp
jbe
imul
outsb
xchg
je
add
sub
xor
mov
sarb
xlat
je
mov
call
call
mov
js
nop
dec
popf
ja
jb
les
push
xor
adc
inc
jmp
enter
loopne
arpl
inc
insl
adc
adc
out
pop
sbb
in
lret
dec
sbb
insb
jle
cmp
out
xor
out
loopne
jne
test
sbb
mov
sarl
cmc
xlat
ja
das
sub
or
mov
jne
sub
std
mov
lcall
notb
push
test
xor
loope
cs
dec
inc
cmpsl
stc
jo
mov
lock
test
sarl
inc
cmpsb
or
in
and
pop
pop
mov
ret
inc
pop
fucomip
sub
sti
mov
std
faddp
rcrb
push
imull
adc
mov
cwtl
mov
cwtl
add
ja
xlat
adc
jle
out
mov
and
inc
lods
mov
pop
push
push
mov
test
lods
iret
int3
mov
mov
sub
std
bound
or
add
push
mov
arpl
mov
cmp
dec
jne
repz
fisubl
sbb
lcall
ficoml
inc
xchg
fidivrs
jno
xchg
test
push
pop
sub
adc
xchg
push
or
dec
out
xchg
sbbl
pusha
js
cs
lods
cli
pop
push
mov
sti
dec
fwait
ss
test
fdivl
test
repnz
out
insl
add
add
or
sbb
mov
dec
mov
xchg
loopne
je
mov
or
movl
ljmp
push
faddp
cmc
pop
inc
cmp
jmp
and
pop
xor
inc
movsl
in
jo
in
std
arpl
fimuls
out
mov
repnz
push
or
jns
test
fisubl
ss
or
inc
sub
and
and
les
ss
daa
sbb
jecxz
push
jecxz
pop
jecxz
adc
fwait
out
cmp
sbb
mov
and
mov
js
pop
enter
or
outsb
pop
loopne
mov
or
mov
xor
and
lea
imul
or
sti
push
in
mov
ss
jge
push
rclb
and
popa
dec
mov
lret
xchg
int3
jno
adc
je
pushf
add
int3
ret
jns
mov
push
fnstenv
xchg
stos
repnz
rcrb
outsl
bound
out
mov
ja
inc
rcrl
mov
add
dec
daa
jl
jp
daa
outsb
sbb
fwait
dec
and
cmp
push
dec
ret
xor
pop
loope
and
aad
lret
js
pop
jbe
push
adc
fwait
mov
mov
mov
jmp
push
mov
mov
pushf
jge
nop
icebp
add
in
jae
or
mov
push
pop
and
lock
cmpl
cmp
jo
pusha
fsubrl
jb
sar
cli
pushf
push
lods
mov
out
fwait
inc
insb
inc
and
cld
cmp
das
lods
incl
cmp
sarb
int3
dec
dec
or
xor
pop
addr16
mov
sbb
ljmp
mov
sbb
xlat
sub
dec
adc
jp
out
xchg
daa
jno
aam
and
adc
jb
inc
pushl
mov
test
scas
and
mov
test
insb
mov
out
jb
jmp
in
sub
mov
inc
sbb
cmpsl
mov
jmp
or
call
das
jg
mov
jl
xchg
les
rclb
xchg
inc
imul
out
stos
in
xchg
jns
subl
xchg
add
push
push
daa
icebp
ret
cmpb
imul
movb
out
or
out
fistl
pop
cli
cs
mov
mov
push
cmc
lahf
int3
sbb
out
jmp
aaa
jno
jae
fstpl
scas
push
pop
and
mov
cmp
dec
xchg
test
xor
loope
fnstenv
ss
cmp
jno
mov
jnp
test
mov
ficompl
xor
mov
xchg
lods
mov
enter
xchg
mov
pop
jo
aam
cmpsl
sbb
push
jb
aam
out
je
xlat
decb
push
jp
lods
xor
sbb
out
scas
iret
xor
dec
mov
decl
mov
or
mov
mov
das
lods
xchg
mov
sbb
dec
lock
jmp
cmc
sub
jne
and
inc
fwait
call
mulb
dec
clc
mov
mov
test
arpl
jns
or
dec
leave
or
pop
mov
enter
add
iret
inc
adc
and
adc
outsl
scas
cmc
out
rolb
in
stc
pop
jns
xchg
mov
scas
sub
mov
hlt
inc
push
sarl
test
pop
jle
shrb
int
cmp
sub
inc
pusha
in
sbb
pop
sub
pusha
sbb
lret
std
push
adc
jne
push
movsl
sbb
cmp
repnz
add
add
fs
pop
rcll
lret
and
xchg
insl
mov
fsub
imul
daa
mov
loop
pop
rolb
xor
and
xlat
xlat
fidivl
and
lret
fists
mov
daa
dec
mov
inc
stos
xor
insb
pop
lcall
test
int3
pusha
stos
imul
add
push
sbb
xchg
shll
gs
movsb
sub
cmp
inc
sahf
add
aas
mov
lea
inc
push
xchg
ficoms
lea
cmp
xchg
jns
mov
sub
outsb
stc
lcall
xor
test
out
int3
outsl
inc
xlat
loope
pusha
sti
xor
jg
mov
ds
andl
jl
loop
stos
iret
mov
out
jnp
lock
jne
incl
mov
xor
sub
xchg
and
mov
dec
test
stc
mov
adc
leave
mov
mov
enter
xor
or
pop
flds
mov
sbb
call
mov
jns
stc
sahf
scas
int
out
int3
repnz
jmp
mov
loope
mov
xor
insl
xchg
call
call
jae
sbb
stos
cmp
inc
lret
and
dec
and
pop
add
fdivs
roll
pop
subb
cmp
add
sti
loopne
push
and
stos
jno
popa
dec
sub
push
jo
lcall
mov
rdpmc
dec
ret
imul
enter
pop
xor
es
or
add
ret
xor
test
cltd
mov
push
and
in
out
std
dec
insl
mov
ret
in
xchg
and
inc
popf
in
mov
pop
lods
jae
cmp
imul
mov
mov
and
test
sub
inc
mov
je
sbb
sbb
cmp
out
aam
sbb
rol
ficomps
mov
push
cmp
lcall
mov
test
mov
enter
dec
and
mov
lock
adc
lret
sub
mov
pop
leave
push
in
and
or
int
and
cmc
cwtl
sub
sub
ja
les
idivb
int
push
scas
cmp
jge
xor
cmp
ja
dec
ret
adc
mov
cmp
leave
insb
xor
cwtl
lods
sbb
push
mov
and
add
popf
and
subb
and
mov
mov
cs
pop
cmpl
arpl
jo
jmp
repz
mov
mov
mov
mov
jnp
int3
test
xchg
mov
fimuls
dec
pop
das
dec
out
into
ds
inc
subl
jns
out
adc
push
add
fsubs
cmpsb
cmc
pop
out
dec
xor
pushf
lea
aas
int3
jp
pop
outsl
pop
popf
xorb
adc
ret
lods
rolb
insl
sar
xchg
dec
and
cld
or
dec
int
lea
sub
outsl
jns
test
adc
call
divl
movsl
repz
orl
adc
adc
call
repnz
repz
repz
lahf
pushf
stos
dec
clc
in
jb
sbb
push
inc
adc
in
insl
xor
add
push
cmp
mov
ds
fwait
inc
adc
fisttps
aam
xchg
cmpl
cmc
scas
or
add
jbe,pt
rcrb
ljmp
ss
dec
jecxz
pop
push
pop
lock
add
inc
ror
std
pop
pop
rorb
and
xchg
xchg
sbb
push
fs
pop
int3
pop
adc
pop
into
lock
scas
sbb
sub
push
rcrb
add
pop
push
cmc
insl
js
shlb
xor
sub
mov
sub
mov
sti
dec
cmpsb
fcomi
scas
xor
add
dec
xor
pop
outsl
mov
je
lods
lods
cltd
insl
jae
adc
sub
xchg
icebp
or
div
movsb
sub
popl
fistl
cwtl
jl,pn
int
and
lods
daa
nop
movsl
cmp
clc
inc
mov
jae
mov
pop
je
aas
cld
or
mov
out
orb
je
sub
sahf
das
push
test
adc
sub
out
fcoms
insb
dec
xor
imul
push
mov
cmp
adc
loop,pt
sbb
jle
das
int3
sbb
nopl
push
int3
sbb
pop
icebp
hlt
and
push
pop
mov
test
mov
push
push
xchg
or
push
or
shlb
test
ds
cs
jne
imul
lock
or
leave
and
ficomps
aas
pusha
nop
xchg
gs
cmc
sbb
sub
adc
ret
jbe
les
leave
test
mov
inc
jmp
rorl
in
and
icebp
je
stos
push
mov
add
je
or
popf
cld
pop
xchg
add
or
inc
jg
sysenter
jmp
fdivr
leave
test
mov
push
push
mov
ljmp
jmp
push
scas
bound
jb
aaa
and
das
mov
xchg
stos
jg
xor
std
mov
das
mov
movsb
sub
xorl
push
xor
xor
fucomip
cmp
cmp
lods
or
shll
rcl
shll
shl
mov
adc
je
push
fcmovnu
fs
mov
pop
jmp
adc
je
cmp
mov
jnp
cli
cmp
shrb
jno
push
ja
lret
push
das
jo
jl
sbb
sub
push
inc
push
leave
js
fbstp
lock
std
in
xchg
stc
stc
push
aas
sahf
scas
movsb
movsb
mov
adc
popf
add
adc
mov
addl
inc
push
cmpsb
cwtl
movsl
sbb
mov
lret
lods
into
jecxz
pop
adc
ror
adc
xchg
jnp
xor
js
sarb
mov
pushf
and
cwtl
movsb
gs
pop
ds
inc
fwait
sbbl
hlt
out
clc
out
add
aas
adc
repnz
jg
xor
ss
dec
jno
imul
pop
sub
pop
arpl
sub
push
fdiv
fisubl
aam
inc
cmp
popf
cmp
cltd
push
idivb
outsl
loopne
sbb
pop
fdivrs
sbb
in
xchg
mov
xchg
pop
cwtl
mov
mov
pusha
imul
rcrb
pop
sbb
shlb
lret
outsl
adc
es
das
inc
gs
push
xchg
sarl
jne
sbb
imul
out
lret
mov
inc
pop
hlt
cmp
addb
scas
aam
insl
xor
xchg
cmp
sbb
clc
add
dec
mov
loopne
xchg
jno
fildll
stos
mov
dec
pop
sub
xor
push
outsb
jnp
sbb
mov
sbb
inc
cld
mov
fisttpll
cmp
adc
enter
sbb
cmp
outsb
popa
or
lock
jns
adc
jbe
and
scas
nop
mov
call
push
sub
or
xchg
pusha
mov
add
jne
lds
mov
jle
fildll
movsl
nop
mov
xchg
xor
sahf
inc
ss
ficomps
mov
xabort
movsl
lods
mov
fisubrl
mov
xchg
aad
push
ds
cmp
div
sub
xchg
leave
mov
mov
push
call
ds
imul
inc
xor
jp
pop
jo
mov
add
stos
sub
jmp
xor
test
and
mov
nop
scas
jg
test
dec
pop
data16
mov
sub
mov
add
xor
and
pop
lret
aas
jmp
adc
lea
movl
lret
jno
shr
sti
sahf
lock
jl
lret
mov
aaa
pop
fdivl
popa
lods
jle
push
cmp
outsb
in
mov
int3
or
or
pusha
test
mov
sub
jne
dec
jae
sub
push
pop
mov
lea
dec
push
movsl
or
loope
mov
push
scas
and
rorb
and
and
inc
data16
pop
lcall
out
and
jbe
xchg
push
push
shlb
dec
push
mov
jb
jae
and
mov
mov
rolb
xor
mov
subl
adc
cwtl
xchg
rorl
jo
sbb
aam
push
mov
mov
mov
rdtsc
inc
std
jl
adc
add
fs
xchg
push
dec
cmp
dec
rclb
push
mov
out
push
sbb
ss
loope
mov
ja
pop
dec
mov
push
mov
xchg
inc
scas
into
shlb
adc
jecxz
cltd
jle
or
mov
jb
and
and
mov
clc
xchg
pop
pop
push
icebp
xchg
mov
cmp
cmp
shlb
add
std
pop
sti
fildll
cmp
arpl
loopne
arpl
sti
mov
cmp
outsl
dec
pop
out
ret
data16
adc
jno
nop
mov
in
push
jb
std
lea
jl
inc
sub
dec
sbb
add
pop
daa
ss
orb
out
pop
cmc
lcall
das
mov
sbb
jg
lret
and
jnp
loopne
mov
and
ficomps
xlat
xchg
test
int3
mov
sbb
cmpsb
scas
popf
in
add
mov
fiadds
nop
push
les
fdiv
xchg
xor
and
les
inc
insb
pop
les
pop
cwtl
xchg
jo
xor
pop
stos
push
xor
pop
jnp
inc
xor
sub
cmc
adc
addl
ret
lds
and
ja
dec
and
xchg
jle,pt
inc
xchg
xor
jmp
scas
dec
sbb
in
inc
push
mov
xor
push
in
pop
sbb
push
mov
arpl
rcl
fwait
xchg
push
fs
mov
mov
xor
out
adc
ficoml
jnp
cs
jecxz
jne
xchg
pop
xchg
jae
shll
push
mov
jne
cs
mov
mov
and
sahf
lds
adc
out
mov
cmp
mov
dec
sub
std
rcl
fs
iret
cmp
imul
dec
xchg
fwait
jmp
jl
mov
jbe
ret
stos
mov
adc
int
lds
andl
mov
jl
cld
xchg
out
mov
data16
jmp
mov
sbb
dec
or
mov
andl
xor
es
testb
sub
jmp
sub
out
lcall
inc
jmp
jg
xchg
shlb
icebp
xor
jo
fstp
mov
cs
div
mov
inc
adcl
cmpsb
mov
mov
add
rorl
loopne
stos
add
leave
leave
notb
das
inc
insb
jnp
test
jp
mov
lcall
jb
adc
fnstenv
lods
sbb
xchg
push
idiv
imul
int
dec
test
sub
and
out
inc
cmp
insl
cmp
sysret
pop
push
dec
xor
inc
out
sbb
out
jg
mov
sarl
xor
mov
mov
call
inc
insl
sub
repz
xchg
cmp
pop
dec
mov
xchg
ja
cltd
aam
inc
adc
pop
inc
out
push
dec
aas
cmp
sbb
push
outsl
test
testb
divl
and
sbb
cli
pop
leave
andl
sub
enter
mov
lea
pushf
pop
inc
pop
xchg
insl
mov
decb
or
push
adc
ret
pop
push
sarl
stc
push
ja
jge
cmpsl
dec
scas
mov
mov
jge
xor
arpl
or
push
mov
cmp
pop
dec
xchg
xor
aam
cmc
into
mov
call
aad
ds
adc
fwait
push
add
inc
stos
adc
sbb
sub
aam
and
cli
not
mov
xchg
nop
cmp
iret
incl
out
mov
lock
and
xor
adc
inc
sbb
dec
cs
adc
or
xor
sarl
cmp
loopne
mov
xchg
in
jl
or
mov
push
int3
and
fnsetpm(287
or
dec
sub
xor
sbb
push
stos
adc
push
add
pop
std
push
pop
lods
pop
mov
cmp
mov
lds
fs
pop
add
nop
sahf
imul
cmp
xor
into
fstpl
sub
sub
sbb
add
out
leave
fistps
mov
mov
mov
ret
pop
outsb
xchg
xor
iret
mov
xchg
loope
imul
sbb
hlt
imul
jmp
aad
shl
cmpsb
jl
lret
lcall
mov
xor
shr
lret
lret
pop
lock
jecxz
sti
push
sub
xor
sub
mov
test
ds
in
repz
cld
insl
adc
aad
enter
push
loop
pop
inc
jno
jbe
aad
add
push
pushl
daa
xchg
xor
add
ret
pop
adc
inc
daa
sub
out
dec
push
insl
mov
mov
test
dec
add
sub
pop
pushf
lcall
test
jge
push
dec
and
lods
pop
out
sub
cmp
sbb
mov
jne
outsb
ss
dec
cmp
xor
nop
sbb
fs
mov
in
adc
xchg
test
push
sub
jmp
jns
pop
inc
insb
loopne
dec
rol
xchg
sub
xchg
lret
pop
mov
loope
pop
push
mov
rorb
push
jmp
in
xlat
mov
adc
into
outsl
xchg
push
push
cmpsb
mov
lret
cmpsb
push
cmp
pop
xlat
or
dec
sbb
push
sub
sahf
push
mov
jns
sahf
dec
and
mov
mov
in
sarl
jmp
hlt
negl
leave
mov
dec
repz
fcoml
sub
out
add
cltd
shrb
in
push
sbb
cltd
sbbl
clc
test
or
mov
jmp
push
daa
push
cmp
pop
cmpsl
or
push
dec
addb
inc
jle
rcrl
push
jge
cmp
cmp
popa
push
jae
adc
es
mov
dec
in
in
add
aam
and
mov
xchg
mov
int
arpl
pop
xchg
cmp
adc
imul
cli
xor
xchg
adc
out
jne
pop
inc
in
and
mov
daa
bound
sub
dec
and
inc
aam
sub
sbb
push
rclb
push
or
xchg
mov
scas
lahf
scas
hlt
pop
jne
jbe
sub
inc
mov
xchg
cs
and
cltd
push
fwait
cmpsb
and
adc
stos
insb
cmp
inc
jno
aaa
xor
in
sbb
daa
out
bound
adc
jge
or
dec
movsl
xchg
xchg
insl
repz
fsubrl
imull
cs
enter
push
inc
mov
das
add
shll
jno
xchg
jle
jo
push
cmpsl
inc
dec
adcl
lret
in
mov
enter
rcrb
orb
cwtl
sub
xchg
mov
pop
lock
je
in
test
pop
fists
xchg
and
cmc
mov
sahf
sub
jp
or
push
divl
in
out
jecxz
data16
mov
mov
adc
ret
hlt
push
sub
int3
sub
out
push
xor
dec
rcl
pop
es
inc
mov
cmp
insb
jbe
stc
push
and
push
sbbb
pop
mov
push
shrb
adc
sub
mov
mov
fcomps
repnz
mov
sub
repnz
jge
aas
aas
adc
pop
loopne
push
fistps
xor
adc
xchg
adc
test
pop
mov
mov
into
dec
loope
add
test
jg
add
test
mov
stc
pop
lret
ret
xchg
sub
je
aam
fldt
in
addr16
and
jb
pop
aad
clc
xchg
and
test
dec
test
mov
and
movsb
fidivs
pusha
inc
test
or
or
fisttpl
mov
and
jb
and
add
movsb
call
jle
xchg
aam
scas
lcall
add
lahf
mov
lcall
mov
popa
push
enter
xlat
enter
mov
mov
mov
pop
sub
jp
daa
imull
xchg
add
imul
xchg
loopne
test
adc
xlat
dec
jb
and
or
dec
andl
into
fdivl
push
adc
mov
push
mov
pusha
add
cli
fs
fsubl
lret
aas
cmp
inc
jb
jno
stc
pop
add
pop
sub
stos
stos
insl
lret
mov
loop
shll
push
mov
mov
xchg
test
cld
data16
push
mov
lea
or
mov
mov
sbb
fwait
sbb
inc
test
into
inc
jae
or
addr16
adc
sbb
push
jp
cmpsb
stos
lret
jecxz
push
adc
dec
int
fisttpl
inc
andb
xlat
in
sub
je
adc
shrl
js
sti
out
adcb
xor
inc
repnz
in
lds
daa
push
icebp
fmuls
inc
add
into
nop
xchg
addr16
add
lea
in
mov
rcrb
lods
jno
enter
mov
jmp
mov
sarl
xor
mov
mov
add
mov
push
and
lret
into
and
es
dec
fsubl
fucomip
push
cld
arpl
push
cmpb
sbb
jo
xlat
into
cmpl
iret
mov
loop
testb
mov
inc
mov
mov
and
rcrl
sti
xchg
sbb
fdivrp
dec
push
push
jnp
jo
sbb
inc
cmc
test
jmp
xchg
pusha
mov
in
mov
jl
push
dec
lret
fstps
insb
push
adc
jne
jecxz
adc
test
into
int3
jge
mov
add
sub
outsb
or
cmpb
sar
xchg
test
pop
push
enter
mov
addr16
bound
in
pop
xchg
outsb
xor
out
or
mov
in
pop
out
adc
outsl
lahf
sub
lods
add
jne
insl
push
jb
es
jle
add
ret
jg
divb
sahf
mov
and
or
sti
js
repz
add
mov
leave
aad
ds
inc
int3
mov
sarl
insl
sarb
movl
test
xor
mov
mov
mov
mov
clc
cld
pop
rcrb
std
iret
sub
ss
test
jno
stos
sub
fstl
dec
lcall
subl
mov
les
outsl
inc
mov
push
daa
push
call
cltd
or
add
loop
mov
test
and
fistpl
ret
jnp
jmp
out
add
push
sbb
mov
int
fs
dec
and
inc
icebp
cmp
push
aam
hlt
insl
xor
fdivrl
dec
pop
dec
sub
cmpxchg
movsb
sti
xchg
xor
lahf
cmp
int3
imul
adc
jo
push
jge
push
lret
xorl
shll
divb
push
jp
shrl
cmp
add
xchg
imul
cli
cmpb
lods
test
cld
and
sub
test
inc
stos
rol
pop
loope
ss
or
insb
lcall
adc
sub
jns
sub
xchg
mov
ret
push
stc
add
mov
icebp
cs
inc
or
popf
scas
sbb
jo
cmpb
add
jecxz
mov
fmul
mov
jo
lret
rolb
cmp
adcb
dec
js
cmpsl
ret
jnp
in
mov
imul
jb
mov
jnp
shrl
or
dec
and
mov
xor
push
adc
inc
xchg
and
in
jmp
push
call
rcrl
sbbl
mov
dec
out
sub
call
stos
jae
stos
pop
add
jmp
popl
and
jmp
popf
cwtl
jg
call
push
inc
xor
stos
jns
popa
lahf
scas
add
cwtl
mov
add
cltd
mov
mov
outsb
lret
int
shrb
jmp
cmp
mov
lea
fadds
jne
stos
pop
add
arpl
and
imul
xchg
xchg
or
and
xor
jo
pop
test
xor
test
mov
add
cmp
sbb
or
inc
outsl
cmp
test
xor
int3
aad
sub
push
adc
imulb
insl
inc
xor
les
dec
dec
adc
inc
push
jle
add
dec
int
sub
adcb
mov
clc
fisubrl
subb
cmc
icebp
cmp
cmp
popa
sub
cmp
int3
dec
jne
push
sub
jg
decl
xchg
cltd
push
push
pusha
popa
aaa
push
in
lods
sub
add
pop
push
mov
adc
or
repnz
loopne
aam
pop
nop
cmpsl
xor
xchg
lock
lcall
push
faddl
arpl
sbb
push
scas
lea
and
sbb
shll
inc
fwait
sbb
and
shll
fcompl
pop
sbb
push
loope
in
shrl
data16
out
xchg
pop
jno
cld
into
es
shll
pop
mov
lret
jmp
push
add
addb
mov
pop
aad
xchg
add
inc
lcall
mull
rorb
daa
and
mov
xor
cmpsb
push
gs
loopne
mov
or
dec
inc
std
and
aad
lods
adc
lcall
mov
and
cwtl
pop
test
repz
cwtl
inc
cmp
loop
dec
adc
js
push
mov
rcrl
iret
cmc
xlat
test
out
adc
leave
inc
cltd
mov
lcall
jae
jae
jo
push
or
mov
xlat
mov
xchg
mov
int3
and
or
pop
xor
xchg
lds
jecxz
jb
mov
shl
sbb
ret
iret
dec
xchg
mov
adc
push
lds
outsb
xchg
pop
and
sbb
jns
dec
cmp
sbb
xchg
jae
push
aad
pop
xchg
dec
push
cli
clc
mov
cmc
loopne
out
mov
and
shll
jle
enter
mov
xor
loop
pop
push
test
mov
gs
cltd
std
mov
setbe
push
dec
ja
pop
mov
mov
sti
fldl
add
add
outsl
pushf
cmp
jne
add
cli
add
adc
notl
xchg
shll
mov
arpl
shl
popa
jecxz
decl
mov
mov
mov
in
aaa
and
enter
add
fisubl
mov
inc
adc
ret
pop
das
xchg
xor
or
or
les
je
imul
jnp
outsb
iret
xchg
test
iret
sbb
xlat
pop
fistpl
push
in
dec
out
int
das
push
dec
lock
mov
out
inc
cmpsl
pop
repz
sub
cltd
mov
aam
jbe
dec
xor
pop
adc
push
mov
std
sbb
inc
imul
and
adc
in
jo
into
negb
mov
mov
out
iret
mov
test
mov
popa
or
push
jle
mov
cmp
outsl
jle
jg
pushf
mov
fldt
sub
pushf
inc
mov
pop
repnz
stos
xchg
mov
or
add
in
testb
cs
ja
adc
xor
xchg
xchg
int3
mov
xchg
mov
xor
add
xor
fs
shl
add
int
cld
ds
loope
cmpsb
lcall
or
sub
lods
mov
pop
push
cmp
mov
rorb
out
roll
adc
cmp
mov
jbe
repnz
call
push
int
xchg
js
out
pop
inc
push
nop
add
int
mov
adc
dec
cld
and
xor
leave
ljmp
inc
lret
jecxz
lds
pop
movsl
xor
cli
lods
dec
test
add
les
push
mov
adc
xchg
dec
pop
icebp
xchg
push
or
cmp
add
cmpsb
xchg
ja
iret
idivl
sbb
pop
cmp
hlt
lods
das
jae
adc
jle
push
lock
add
sub
loopne
fisubrl
clc
popa
cld
cld
jae
out
xchg
popa
push
xor
nop
or
inc
xor
lahf
cli
fidivl
xor
xor
cld
or
xchg
xchg
bnd
xchg
imul
idivb
in
push
mov
mov
inc
pusha
sahf
icebp
bound
fcmovnbe
gs
call
adc
add
int3
cmp
shl
hlt
test
js
testb
cli
jno
cmc
lods
cmp
int3
cmpsl
mov
sbb
push
out
test
xor
sti
jp
ja
adc
mov
int
inc
or
adc
xor
jmp
movsl
mov
loop
repnz
mov
aas
jne
pop
sub
inc
and
js
mov
fldt
daa
movd
rcrl
lods
cmp
aaa
hlt
mov
xchg
pusha
arpl
sbbb
ds
mov
pushf
inc
push
outsl
or
in
pop
bswap
cs
pop
out
aad
movsl
fnstcw
popf
jno
fstpt
lds
sbb
fs
cmpsl
push
std
mov
data16
add
sub
inc
jne
dec
jb
xchg
insl
cs
sahf
loope
pop
aas
loopne
push
sbb
mov
adc
xor
scas
add
xor
je
mov
loop,pn
jge,pt
roll
arpl
sbbl
stos
inc
mov
pop
lods
xor
daa
pop
dec
test
mov
into
ljmp
xchg
testl
sbb
xchg
push
cwtl
fdivrl
pushf
jnp
pop
mov
push
sti
inc
jns
int
and
push
dec
lahf
inc
inc
rclb
mov
jle
fisubrl
cmpl
sbb
scas
flds
xchg
push
sar
mov
fwait
test
cmc
and
bound
add
aas
inc
cmp
add
jp
popa
jmp
cmp
jne
pop
xlat
add
roll
and
sub
popa
scas
jecxz
fildll
push
inc
jecxz
jae
xchg
rclb
into
xor
adc
push
mov
push
cmp
mov
ss
xor
call
sbb
add
xchg
nop
xchg
pop
sahf
int3
clc
cmp
xor
dec
xor
lock
aad
mov
cld
pop
or
popa
popf
xor
add
bound
icebp
xchg
enter
stos
jae
mov
xchg
push
mov
fs
outsb
push
jns
lahf
sbb
icebp
dec
idivl
sub
xchg
pop
out
and
or
mov
push
mov
jge
and
daa
mov
lods
cmc
aad
out
iret
gs
int3
jne
xchg
shll
ds
inc
subb
lds
cwtl
jp
adc
lret
insl
xchg
aaa
push
dec
cli
ret
out
sbb
sbb
lea
cmpsb
xchg
dec
or
ds
mov
repz
adc
fs
and
mov
scas
mov
or
pop
lods
popf
push
sbb
pop
xchg
es
add
mov
ret
outsb
jne
adc
test
sub
or
pop
popa
stos
outsb
mov
movsb
lret
into
roll
sarl
lahf
pop
and
pop
sub
fldt
cltd
lds
rorb
cmp
push
and
shl
in
outsl
dec
fucomip
adc
leave
movsb
fcmovnb
pop
xchg
jg
and
lds
or
out
test
test
and
push
add
jae
jo
or
cmpsb
jnp,pn
fnstenv
cmpl
add
push
push
fldenv
jmp
adc
inc
loope
inc
pop
pop
adc
jl
jae
inc
pop
pusha
mov
enter
and
ret
es
cmp
ffreep
lcall
adc
dec
and
cs
jne
mov
daa
test
inc
xor
rorl
mov
sbb
fwait
lcall
in
inc
mov
cmp
sbb
sbb
cmpb
dec
jecxz
mov
imul
sub
push
cli
stos
jp
mov
inc
jb
cltd
and
les
bound
adc
sub
adc
pusha
and
into
or
out
mov
outsl
mov
popa
ds
xor
sbb
lahf
das
popf
inc
js
fists
filds
xor
sahf
inc
pop
frstor
mov
js
sbbl
cmp
mov
mov
lods
into
ret
js
add
dec
fucom
jp
pop
test
gs
dec
sbb
loop
pusha
push
xchg
dec
enter
std
adc
sub
push
sbb
jno
sbb
dec
loope
jne
daa
movsb
mov
in
mov
fwait
movsb
push
jmp
clc
cmp
je
popf
adc
xlat
inc
jnp
out
mov
gs
pop
pop
fdiv
popa
repnz
mov
cmp
and
inc
mov
pop
push
out
xor
xchg
jl
jno
int3
pop
lock
pop
iret
pop
shrl
outsb
pop
movsb
fisttpl
inc
cmp
or
inc
out
incb
add
sbb
aad
xor
dec
repnz
ljmp
jmp
cltd
fcomps
inc
jmp
daa
add
outsb
scas
das
jge
fldt
jnp
shl
cmp
les
pop
icebp
xor
push
es
add
cmpsl
in
jo
mov
aam
int3
mov
ret
shll
mov
scas
inc
addr16
mov
stos
in
inc
xchg
int3
scas
loope
jmp
xchg
out
data16
ljmp
outsl
fsubrl
pop
push
push
adc
xchg
adc
cmp
mov
std
push
mov
ds
clc
pop
sub
push
cli
pop
stos
icebp
mov
and
mov
out
loope
cmp
inc
cs
rcr
in
adc
lret
or
pop
jns
jo
and
lret
out
jo
push
mov
adc
mov
sbb
shll
add
cmp
pop
hlt
xor
mov
and
jb
dec
jae
inc
sub
sarl
adc
stos
xchg
sub
ret
repz
jecxz
icebp
int
add
mov
jbe
popl
jae
loope
das
mov
or
iret
jo
jmp
scas
lret
sti
dec
out
add
mov
xchg
cmp
mov
test
mov
xor
popa
test
push
scas
adc
sbb
push
scas
insl
push
popf
test
insl
movsl
sub
add
and
jmp
leave
sbb
clc
sahf
dec
mov
and
mov
mov
jl
dec
stos
aam
xchg
sbb
mov
rcrb
fs
mov
adc
outsl
fstpt
hlt
xlat
push
out
mov
test
hlt
rolb
adc
pop
inc
mov
pop
lods
sahf
xor
xchg
xor
scas
inc
clc
jno
jmp
out
sbb
cmpb
stc
mov
mov
push
pushf
jg
and
out
stos
enter
ja
xchg
rcrb
add
jecxz
test
xor
ja
xchg
fimull
lret
sub
dec
pop
cld
mov
jmp
test
mov
mov
cmp
inc
sub
push
sbb
sbb
mov
cli
cmp
addr16
es
jg
rcr
cmpsb
push
mov
mov
into
dec
and
pop
mov
andl
pop
push
xlat
cmc
out
sbb
ror
push
cmp
cmp
test
push
repz
test
add
cli
mov
fistps
scas
add
mov
call
fdivrl
pop
pop
add
jmp
lea
sbb
orps
movsb
pop
mov
or
leave
xor
das
xor
xchg
push
push
dec
test
loop
data16
mov
mov
jl
xchg
sbb
xor
xchg
mov
cmp
xchg
cli
out
fmuls
mov
out
mov
mov
adc
data16
movsl
fldl
scas
sbb
movsb
stos
cmp
test
mov
fst
adc
sti
pop
imul
sub
test
mov
loop
pop
and
je
stos
jae
and
jmp
fsubrl
lea
lahf
sbb
scas
ret
sahf
in
mov
rolb
dec
push
push
sahf
jae
adc
xchg
fstpl
loop
stos
and
js
fwait
ret
or
push
sahf
enter
or
int
sub
ret
outsb
jle
lds
pop
sbb
scas
jecxz
ds
jne
ret
movsl
and
xchg
cld
fists
cmp
mov
or
frstor
xchg
cmpsl
dec
add
enter
sub
add
pop
pop
xor
xchg
sub
cmc
push
sbb
inc
add
xor
mov
imul
mov
hlt
jns
sbb
mov
andb
mov
mov
out
sub
mov
sti
lcall
enter
adc
popa
mov
les
repz
test
or
pop
scas
pop
add
scas
xor
mov
test
push
pop
or
pop
push
daa
scas
jne
jmp
and
push
fs
in
pop
lahf
leave
addr16
pop
imul
mov
sbb
push
lahf
sub
pop
mov
xor
mov
sbb
cmpsb
arpl
sub
data16
fidivrl
es
jp
movq
lahf
add
repnz
push
repnz
mov
cmovo
hlt
in
and
outsl
in
pop
idivb
mov
in
cmc
imul
jne
rcrb
pop
pop
inc
out
adc
add
mov
stc
jl
in
test
push
pop
adc
ret
cmp
jbe
in
sub
test
out
cltd
push
inc
fidivl
rolb
or
lea
int3
es
loope
aad
movsl
xor
adc
fstp
lahf
or
in
xchg
cli
inc
push
pop
leave
mov
push
mov
jp
shrb
jmp
xchg
pop
jp
pop
and
inc
hlt
aad
out
pop
lcall
add
inc
dec
cmp
movsb
add
lret
adc
pop
lret
test
shlb
push
lcall
push
mov
push
dec
nop
jne
mov
mov
cmp
inc
nop
mov
push
insb
pop
add
mov
lret
adc
outsl
mov
sti
dec
inc
jns
push
fsts
add
pop
xor
fcoms
mov
lret
out
xchg
rclb
jecxz
dec
dec
mov
adcb
pushf
clc
add
jns
cmc
pop
xchg
dec
in
cmpsl
and
jmp
outsb
lcall
or
ljmp
pop
push
orl
push
mov
or
jmp
lods
lods
mov
cmpsl
push
ja
mov
add
mov
push
dec
loope
pmulhuw
out
add
dec
pusha
sbb
cmpsb
orl
and
mov
dec
inc
sbb
pusha
sahf
mov
jmp
aas
stc
xchg
movsl
and
mov
lcall
mov
pop
or
push
xor
out
add
jle
mov
mov
aad
leave
fmul
enter
add
psrlq
stos
mov
fisttps
sub
jbe
mov
xorb
iret
adc
add
in
add
shrb
inc
cmp
add
movsb
sub
or
mov
or
outsl
jle
in
sub
stos
or
arpl
jle
divl
jno
cmp
sub
and
int
ljmp
mov
cmpsl
arpl
popf
test
popf
in
push
lret
test
xor
add
adc
sbb
jo
inc
scas
movsl
cmp
mulb
pop
xor
loop
mov
daa
fcmovnu
adc
pop
inc
xor
adc
push
ljmp
mov
movsb
lret
mov
lea
cwtl
nop
ret
mov
ds
jb
cmp
xchg
jnp
sub
jecxz
sbb
sub
add
rolb
cld
and
stos
jns
imul
lds
sbb
mov
shll
pop
or
add
ds
sbb
sti
push
push
inc
faddp
mov
pop
or
gs
in
and
cmpsl
daa
mov
out
and
and
mov
xchg
ds
cmp
and
insl
call
int
add
xchg
in
call
inc
jg
pop
or
decl
shrb
popa
adc
pop
jmp
leave
ror
into
pop
xlat
or
and
sub
out
gs
inc
popf
movsl
inc
ljmp
arpl
int3
push
cltd
sbb
pusha
jl
and
int3
dec
push
adc
shlb
into
dec
aaa
ffreep
inc
stc
pusha
cld
lods
loop
adc
add
outsb
lret
push
iret
adc
test
and
or
aaa
pop
xchg
add
xor
push
jge
loop
sub
xchg
cmp
jbe
mov
aaa
or
or
fwait
pop
sub
mov
shrb
loop
testb
jae
loopne
cs
xchg
gs
andb
cmpsb
js
scas
dec
cli
inc
xor
jmp
add
pop
stos
sbb
into
add
lods
jle
mov
into
push
pop
ljmp
add
js
setno
icebp
cmp
mov
es
mov
push
fcoml
out
sbb
clc
fcomps
xchg
lods
pop
jb
lcall
xor
pop
jl
inc
dec
dec
mov
test
clc
dec
jae
fisubl
pop
push
pop
clc
outsl
xor
arpl
cli
and
and
test
ja
loope
sub
aas
dec
nop
fmulp
out
std
mov
adc
test
cli
scas
jb
std
in
mov
insl
movsb
int
xchg
xor
shr
aam
jmp
aaa
add
rolb
add
das
test
dec
dec
rclb
imul
pop
pop
push
mov
add
push
sahf
jo
repnz
scas
fs
hlt
outsb
and
mov
or
sub
or
push
std
push
mov
sti
adc
xchg
jo
fdivp
popf
xchg
jns
pushf
icebp
jns
sub
jbe
dec
lret
and
mov
xor
sbb
enter
xor
fnstenv
mov
adc
jbe
inc
mov
adc
mov
xchg
int
and
and
lret
fmull
lret
mov
jp
scas
mov
mov
mov
shlb
jb
add
inc
mov
ds
sbb
mov
dec
iret
inc
outsb
scas
or
inc
mov
in
aam
sub
repnz
push
add
ljmp
inc
pop
clc
push
les
out
xchg
push
jae
mov
aas
fucomip
adc
xchg
popl
pop
ds
sahf
jg
int3
mov
add
lods
and
shrb
clc
adc
sub
leave
sub
nop
cli
sbb
rclb
or
into
out
test
sub
clc
sbb
pop
fucomip
in
push
mov
add
mov
mov
sarl
sbb
stos
sbb
pop
icebp
mov
fisttpll
call
int3
mov
test
mov
cmpsb
xchg
mov
pop
mov
jno
sbb
adc
and
mov
pushf
push
push
call
cmp
addb
ljmp
mov
and
cs
mov
ljmp
stos
or
push
shll
xor
rorb
mov
imul
xchg
adc
test
incl
sbb
pushf
mov
xchg
mov
ss
add
xor
cmp
pop
adc
add
lret
xor
cmp
pop
outsb
adcb
dec
popa
jp
sub
xchg
scas
inc
mov
sub
dec
lock
hlt
imul
add
pop
xor
mov
mov
pushf
enter
movsl
loope
inc
sbb
sarl
mov
add
mov
jge
dec
dec
enter
and
dec
icebp
sub
out
and
sub
inc
pop
fisubl
in
cmp
lods
shrl
nop
cmpl
cmp
das
inc
push
and
mov
jno
lret
push
sbb
stos
out
dec
cltd
add
or
subl
roll
sbb
scas
pop
push
sbb
mov
scas
push
out
fnsave
push
stos
imul
lret
dec
ds
hlt
push
push
dec
cwtl
testb
addr16
out
push
int
stc
mov
rorl
fs
push
cmp
test
cmp
xor
sub
stos
cmp
cmp
arpl
cmpsb
inc
adc
ljmp
pop
add
add
xorb
sub
or
sbbb
adc
movb
sbb
mov
push
stos
pop
test
mov
xor
lds
sti
push
sub
adc
mov
xor
shl
je
out
clc
fsubrs
jmp
mov
or
dec
mov
dec
push
push
pop
mov
incl
in
jno
mov
mov
ffreep
lret
ret
lock
xchg
lret
int3
or
and
movq
pushf
cld
push
sub
subl
cli
orl
cmp
fisubs
out
nop
xor
mov
add
test
adc
lret
sahf
insb
or
xchg
outsl
mov
xor
and
adc
xchg
inc
and
and
repz
pop
stos
cmp
pop
xor
pop
dec
adc
in
int
scas
aad
xorl
test
out
sti
stc
insl
push
fwait
jns
and
or
mov
mov
sub
leave
jge
outsl
mov
xchg
jns
hlt
stos
movsb
sub
push
xchg
out
int
jl
jp
lock
sahf
into
jle
fcmovbe
je
push
insb
lods
aad
movsb
cmpsb
inc
fistpl
xchg
leave
push
mov
jp
rcrl
or
negb
dec
out
sub
mov
das
dec
stos
add
shll
loopne
mov
mov
stos
cmp
push
leave
hlt
jge
inc
adc
xchg
mov
xchg
jp
jmp
dec
nop
loope
cs
fdivrl
ljmp
sti
push
or
call
popa
pop
inc
nop
subb
out
sbb
fcoml
dec
mov
push
call
inc
data16
addr16
xorps
icebp
jb
addb
js
aam
or
out
std
inc
pop
stos
adc
push
jge
test
add
out
ljmp
or
xchg
sub
fstps
outsl
inc
or
inc
push
mov
loop
push
jns
hlt
jb
into
ljmp
jae
pop
inc
jecxz
pop
lahf
pop
push
add
push
dec
pop
jns
arpl
cmp
pop
or
jl
adc
sbb
rclb
mov
sbb
hlt
ss
movsl
fimull
out
dec
mov
repnz
cmp
shll
adc
aam
push
and
or
xor
mov
test
roll
cmp
int
pop
pop
repnz
pushl
in
repnz
movb
mov
stos
cmp
ret
scas
mov
cmpsl
dec
jecxz
jge
mov
dec
sbb
js
inc
fucomip
arpl
and
mov
std
xor
pop
movsb
mov
push
cmpsl
add
aad
mov
cmpl
je
jp
mov
mov
add
or
mov
add
mov
cmpb
fiaddl
or
jo
inc
jo
call
mov
sahf
cmp
pop
repz
sahf
fcoml
int3
clc
push
adcb
adc
mull
lods
sti
jge
imul
xor
or
test
add
stos
aad
adc
xchg
int
and
data16
dec
lcall
repz
jbe
out
lret
test
data16
lods
push
lret
push
xchg
pop
mov
cwtl
gs
stos
mov
cmp
or
jg
adc
add
aam
lea
lds
outsb
out
pop
mov
pop
std
sub
and
mov
mov
push
xchg
fwait
xchg
or
lea
les
int3
bound
pushf
jle
push
cmp
add
popa
push
fstl
movups
mov
daa
mov
lahf
cmp
dec
sub
pop
insb
mov
add
rcrb
ret
rorl
ficomps
adc
cmp
sar
test
ja
fcom
and
mov
shl
loopne
cmc
into
mov
xchg
das
pop
sub
push
leave
or
shlb
dec
sub
push
orl
shrl
in
cmp
push
mov
cs
mov
test
adc
scas
out
outsl
cmp
mov
adcl
adc
adc
jns
and
lcall
jge
arpl
daa
cmp
fstpt
int3
rol
jnp
lods
mov
push
mov
shll
hlt
arpl
mov
or
sbb
insb
arpl
lock
ret
pop
add
dec
pop
xor
and
stos
xor
pop
jmp
ret
daa
sbbl
addl
popa
xor
mov
mov
push
ja
das
stos
ficomps
lahf
mov
mov
loope
aaa
mov
jmp
dec
mov
int
jmp
push
pop
mov
ret
push
imul
inc
test
sub
mov
mov
mov
or
bound
adc
xor
fiaddl
inc
int
add
xchg
loop
cld
pusha
mov
jns
push
cmp
ja
jmp
inc
mov
fcomps
pop
add
sub
movsl
cmova
fchs
call
mov
xchg
rcrb
lret
jbe
sub
test
push
mov
movsl
dec
out
mov
inc
lods
sar
pop
adc
popa
and
push
mov
push
jae
je
xchg
mov
test
movq
push
and
clc
sub
push
int
xchg
push
cmpsb
mov
cmp
mov
xlat
ljmp
imul
push
stos
mov
pop
jns
xlat
jno,pn
vmread
jb
xchg
mov
xchg
fwait
int
jns
enter
mov
lahf
cmp
lahf
sub
or
mov
in
es
fs
and
std
popa
mov
and
adc
filds
or
push
jno
imul
sbb
hlt
dec
flds
sub
repnz
out
sub
sub
sub
stos
in
addb
hlt
inc
mov
popf
aas
lods
lcall
and
js
mov
mov
lahf
inc
add
jo
arpl
mov
mov
mov
mov
and
arpl
cmp
fstl
push
imul
shlb
fwait
loop
cmp
andb
adc
xor
loopne
cs
movsl
push
mov
push
mov
loopne
test
lret
jns
push
pop
and
out
lea
mov
mov
scas
imul
push
mov
std
pop
sbb
mov
in
push
cmpsl
sub
sbb
jns
mov
imul
cli
pop
sbb
and
test
add
mov
add
xchg
std
jge
pop
inc
popa
fldl
imul
xchg
movsl
mov
cmp
mov
push
das
adc
xlat
lods
pop
fwait
mov
into
pop
add
imul
mov
or
test
pop
jae
popa
sbb
sbb
dec
rorl
rorl
push
dec
pop
pushl
js
cmp
lret
pop
data16
sub
xchg
mov
ss
jmp
cmp
mov
test
add
fstpt
ret
mov
decb
or
or
lods
repz
xlat
mov
xchg
stos
fistps
into
xchg
jne
mov
and
mov
lods
push
sbb
sbb
dec
inc
dec
stos
lods
xor
add
call
add
data16
xor
es
cltd
pop
sub
sbb
mov
repz
push
push
inc
xor
jle
jg
js
cmp
std
ss
xchg
sub
sbb
sahf
insb
mov
bnd
or
outsb
adcl
mov
or
dec
jne
push
add
adcl
out
cmc
xor
repz
call
fistpll
mov
push
dec
cmp
stc
jg
mov
mov
or
fisttpll
jge
jo
pushf
cli
in
or
adc
or
fwait
pop
js
shl
and
fs
fs
fstps
mov
push
loope
mov
flds
inc
mov
xchg
ret
lret
jbe
comiss
push
push
jmp
cmp
ljmp
mov
push
xchg
in
lret
pop
adc
cmp
pop
jns
or
sti
add
cld
mov
mov
daa
jp
rcrl
cmp
fsubl
jmp
inc
imul
out
sbb
out
fs
cltd
sub
ficomps
stos
repnz
mov
out
fcoml
fwait
sbb
dec
pop
mov
insb
ljmp
adcb
mov
lock
sbb
ja
jg
rcrl
add
cmp
cwtl
push
xor
stos
call
mov
mov
lock
jae
test
or
test
cli
push
lods
in
cs
lea
inc
mov
call
aam
or
in
aas
cmp
mov
jmp
or
in
mov
das
sbb
pop
add
adc
dec
cmp
dec
mov
push
dec
mov
push
shrl
push
jle
cmc
adc
stos
and
xlat
imul
inc
xchg
jmp
push
cmc
mov
test
repnz
push
mov
mov
enter
jle
sbb
jns
push
scas
ret
imul
divl
icebp
lret
pop
adc
xor
xchg
mov
scas
das
xor
and
stos
aam
inc
scas
ja
jnp
push
imul
repnz
out
ret
mov
adc
mov
add
frstor
mov
outsl
mov
ljmp
lods
sbb
stos
pop
add
lret
clc
sbb
cmc
sti
int3
pop
fdivrs
subb
aas
mov
inc
lret
xchg
xorl
loope
inc
ret
mov
mov
jnp
orl
ret
mov
mov
out
mov
pop
dec
push
repz
xchg
jmp
mov
sbb
xchg
sbbb
ds
ljmp
dec
pop
mov
in
fisubs
xor
or
or
inc
js
leave
cmp
add
fwait
cmp
push
sub
cmp
repz
lahf
pusha
aaa
pop
mov
in
pop
decl
lret
je
out
out
jae
pop
icebp
or
jg
add
pushf
push
cld
cmc
std
cmpl
int
rcl
aad
inc
dec
or
imul
push
andb
loopne
jmp
adc
int
mov
psadbw
or
mov
aam
sbb
insb
in
mov
and
sti
xor
mov
je
mov
leave
mov
adc
inc
add
leave
ss
call
push
jge
les
outsb
scas
and
cmp
test
dec
dec
jbe
dec
bound
mov
xchg
dec
sub
int
push
movb
push
pop
push
stos
adc
iret
pop
xchg
fsubrl
jae
pushf
fnsave
pop
dec
fldcw
pop
outsl
xchg
or
ja
sbb
or
or
push
xor
into
aas
mov
cmp
dec
adcl
shrb
and
rcrb
mov
xor
sub
sub
scas
jne
sbb
mov
enter
push
test
ss
flds
sbbw
xchg
mov
sbb
add
jo
test
ret
mov
fcomps
xor
divl
inc
lret
les
cli
in
insb
mov
mov
and
mov
jmp
pop
mov
add
ds
mov
sub
or
mov
ss
adc
scas
cld
xchg
xor
je
cltd
adc
jne,pt
xorb
shlb
and
add
adc
les
or
jns
shl
xchg
lods
sarb
sarb
adc
push
pop
lcall
pop
pop
nop
sub
movsl
mov
dec
xor
lds
int3
inc
fcomi
cmp
jle
add
and
out
jmp
insb
loopne
add
rcr
loop
mov
mov
xor
add
movswl
sarl
dec
std
fsubrs
push
dec
adc
lcall
sub
xor
loope
ljmp
jno
dec
mov
rolb
rolb
pop
adc
mov
fistpll
jns
mov
dec
sub
push
add
pop
pop
call
push
dec
jne
scas
fistpl
jb
mov
add
pop
xor
adc
push
mov
adc
xchg
xchg
ja
lods
adc
push
mov
xchg
pmaxub
cmp
in
aad
and
enter
incl
jae
in
dec
push
xor
negl
cmpsb
icebp
js
stos
add
shll
mov
cltd
leave
adc
call
or
insl
pop
and
sbb
xchg
push
lcall
sbb
fadd
and
push
inc
testl
xor
or
pop
sbb
insl
xor
std
cmp
dec
mov
jae
xor
in
inc
std
pop
ret
inc
and
notl
aaa
or
jno
pop
cmp
mov
nop
cwtl
insb
dec
js
ret
mov
xchg
jl
lock
dec
cmp
jne
dec
and
stos
in
outsl
xchg
inc
mov
in
jbe
lahf
cmp
lods
xchg
js
cs
cmpsb
es
ret
cmp
jne
in
pop
jb
add
xchg
add
jge
xor
mov
rcrb
cmp
mov
mov
cmp
aas
cli
cmc
loopne
pop
test
nop
xchg
aam
or
or
in
xchg
cmpsl
jge
jmp
out
sbb
insl
cmp
or
mov
into
jg
pop
fnstcw
rorl
sti
mov
je
arpl
aam
iret
lock
loope
xor
sbb
mov
cmp
mov
sbb
cs
subb
or
sub
int
and
or
imul
mov
sbb
cs
jl
fisttpll
int3
adc
adc
loop
sti
mov
cmpsb
les
in
add
les
ds
add
into
sbb
fisubrs
sbb
faddl
push
repnz
jp
inc
in
sbb
sarb
imul
out
out
sub
insb
das
push
mov
data16
stc
mov
imul
push
stc
xchg
insl
push
mov
cwtl
call
push
xchg
fcmovnbe
mov
jmp
dec
movsb
xchg
loopne
and
ds
or
cmp
mov
in
pop
xchg
mov
or
movsb
mov
xchg
mov
in
or
mov
jp
js
jnp
in
jbe
pop
aad
inc
shll
in
clc
mov
aad
jmp
lock
jmp
mov
pop
or
push
add
pop
rcrb
jae
les
cld
jnp
xchg
out
pop
mov
cmp
ja
xchg
in
push
mov
hlt
ret
rorl
fdivs
enter
push
xor
stc
pop
add
jbe
test
mov
cltd
jno
add
xor
mov
es
loopne
popa
pushf
dec
pop
cli
xorl
movl
mov
mov
test
aas
clc
js
int
mov
xor
xchg
adc
stc
push
mov
add
inc
addl
int
cmp
shl
cmp
jno
arpl
lret
je
daa
repz
clc
mov
insl
push
add
out
and
fs
repnz
stos
and
enter
mov
bound
lock
mov
pop
sub
mov
mov
fimuls
adc
dec
xor
pop
mov
imul
pop
fxch
loopne
test
mov
cmp
inc
sahf
dec
andb
pop
mov
pushf
call
hlt
jne
sbb
stos
adc
aam
pop
xchg
mov
or
mov
or
xor
cld
lock
enter
fstps
pop
movsb
sti
mov
and
cli
cld
into
notl
fmulp
subl
fistps
rcl
push
hlt
inc
dec
repz
cmc
ss
addr16
in
sub
test
jo
fsubl
dec
inc
fsts
out
es
enter
enter
popf
push
popf
hlt
xchg
xchg
mov
popa
cmp
mov
cld
ret
sub
mov
je
cld
pop
push
std
fsubrl
mov
cmc
mov
or
int
xchg
orb
jmp
sub
jmp
pop
xchg
mov
outsb
std
repz
std
nop
shrb
jge
int3
xor
cmp
lock
xchg
add
mov
repz
out
adc
lods
sub
imul
ret
ret
insl
adc
stc
adc
sub
mov
xlat
fwait
dec
mov
cld
cwtl
imul
lods
sbb
adc
fs
xchg
cmpsb
mov
pop
or
subl
and
std
pop
jne
add
push
stc
out
dec
mov
sub
sbb
outsb
nop
lods
mov
cmc
fwait
popa
jnp
inc
cmc
test
dec
sub
dec
fistpl
out
popa
cwtl
lods
in
mov
push
repz
jmp
adc
cmp
pop
lret
xchg
mov
sub
add
lret
int3
jb,pn
testb
jne
adc
or
jns
xchg
xor
xchg
inc
and
dec
lods
jae
sbb
arpl
addr16
inc
add
outsl
in
or
add
mov
add
adc
or
sub
lret
ret
popa
pop
inc
lds
xchg
lahf
aas
xor
lock
mov
mov
in
js
mov
add
add
adc
in
add
loope
push
aaa
lret
add
mov
js
jle
int3
cmp
fldenv
pop
sbb
imul
data16
test
mov
je
add
jecxz
fisubs
pop
mov
push
xorw
jecxz
enter
mov
pop
aam
mov
cmp
dec
dec
inc
xchg
out
movsb
and
mov
or
int
loop
lcall
jl
jne
shll
in
mov
or
ror
dec
xor
push
sbb
dec
mov
xor
dec
cmc
insb
test
dec
push
mov
hlt
cmp
sti
leave
sbb
stc
cltd
cmp
cli
xorl
pop
cmc
fwait
hlt
lret
insl
mov
pop
xor
iret
popf
call
pop
cmp
dec
jge
addl
dec
out
out
dec
or
stos
cmp
fwait
movsl
jmp
ficoms
repnz
xorl
loop
adc
push
and
fcomps
mulb
add
lahf
inc
mov
mov
ret
out
xor
hlt
jge
lock
xor
lret
cmpsb
out
xor
imul
cmpsl
and
aam
inc
cs
jns
leave
js
aas
or
adc
xchg
mov
xor
mov
out
ss
aaa
lret
mov
mov
pushf
and
xchg
and
roll
ret
ljmp
mov
lahf
jmp
jbe
cmp
pop
movsl
mov
pop
inc
fisttps
fbstp
sub
pop
cmp
or
pop
pop
inc
icebp
mov
mov
mov
cwtl
filds
outsl
fnsave
sub
fldcw
pop
mov
xorl
lea
int
or
dec
or
pop
adc
adc
out
mov
cmp
mov
xchg
dec
hlt
fldenv
cmp
mov
add
cmp
push
shll
mov
dec
insl
mov
inc
test
data16
sbb
or
mov
or
in
xchg
jbe
sahf
popa
cmpsb
fwait
out
jnp
or
and
jecxz
cmpsb
sbb
mov
xor
mov
int3
and
outsl
in
lods
lcall
push
jbe
lcall
icebp
nop
xor
loopew
adc
inc
add
call
or
lea
fwait
inc
jb
sbb
mov
cmpsb
jp
in
shrl
cmp
fstl
dec
iret
hlt
je
cs
cli
cmc
rcll
xlat
push
fnstcw
shlb
sub
jns
or
ret
jbe
cli
pop
inc
lods
dec
xchg
xor
lock
push
sbbl
inc
adc
stc
rcrb
jp
jg
sarl
ds
add
call
testl
or
sbb
in
outsb
aaa
lret
xor
mov
xchg
nop
push
ja
xor
cltd
fistpl
sbb
or
lods
loop
mov
scas
aam
arpl
insl
xlat
test
cmp
bound
pop
out
sbb
add
adc
insb
cmp
adc
xchg
inc
and
movsl
xchg
sti
stos
sub
xor
fbstp
cmp
iret
pop
dec
inc
aam
cltd
ljmp
push
push
push
mov
daa
xor
sub
popa
inc
mul
xchg
pop
jecxz
xchg
xchg
fcoml
rcrl
in
sub
fimull
cmp
jmp
push
or
mov
gs
pop
xorb
and
pusha
and
in
adc
xor
adcl
xor
lods
pop
xchg
dec
movsb
mov
push
jbe
ja
movsb
and
sahf
and
lahf
dec
movsl
push
mov
jnp
mov
xchg
clc
cmp
dec
idivb
loop
dec
insb
mov
cmc
cltd
inc
out
testb
cmp
fdiv
rcrl
mov
sbb
into
jecxz
push
mov
imul
jae
cmp
inc
and
push
inc
fbld
daa
adcb
sub
inc
jmp
cmp
pop
jns
cmp
outsb
jge
cmp
popa
xlat
sub
addb
and
push
inc
fcom
xchg
mov
sub
mov
ret
scas
pop
cmc
pop
xor
sbb
cmc
insl
rorl
mov
sti
imul
xor
sahf
lods
cli
cli
push
pop
xor
mov
push
std
imul
mov
xor
cltd
dec
iret
xchg
ds
fidivs
jo
adc
add
into
popa
push
shlb
cmp
push
cli
out
xchg
xchg
sub
repz
adc
stos
push
pushf
daa
or
xchg
mov
mov
pop
push
lods
leave
mov
loopne
push
jno
adc
push
into
cmp
jno
in
jo
mov
inc
sub
lcall
xor
iret
mov
xor
inc
xor
xchg
and
xadd
sbb
push
and
es
sub
xchg
ljmp
pop
lods
xor
out
mov
lods
bound
mov
adc
inc
lret
and
push
adc
loop
sbb
jbe
inc
sahf
mov
sbb
jle
dec
and
add
and
fldt
jo
dec
mov
cmp
inc
aam
ficoms
pop
push
lss
in
bound
xchg
ficoms
xchg
shl
sub
and
push
js
scas
mov
mov
cs
dec
stos
add
adc
jmp
mov
sbb
addr16
mov
fwait
repnz
cmp
std
out
jle
pop
in
outsl
mov
lahf
fxch
repnz
add
pop
pop
sbb
push
cmp
sub
mov
scas
inc
jg
xchg
inc
jp
imul
add
sbb
mov
testl
push
gs
popf
pop
stos
add
in
xchg
into
or
mov
xchg
inc
jae
push
fcomps
cli
shrb
int3
xchg
mov
adc
cs
push
cmp
imul
popa
fisttpll
fs
lahf
fistpll
fisttpll
enter
fdivs
popa
and
sub
pop
es
pop
jmp
add
test
in
dec
std
sbb
pop
xchg
les
in
xor
xchg
dec
or
scas
mov
mov
fwait
jmp
sub
popa
dec
or
outsb
mov
inc
daa
out
arpl
imul
xor
cwtl
jmp
sbb
popa
adc
dec
jo
call
lret
xchg
jp
ja
hlt
in
arpl
add
popf
sarl
mov
mov
push
xor
push
das
jne
mov
jo
mov
aas
xchg
push
imul
cld
inc
insb
jmp
pop
mov
mov
test
inc
dec
fmuls
jmp
lret
jmp
or
test
inc
push
adc
push
in
lods
and
pop
mov
mov
inc
mov
mov
mov
push
adc
test
pop
mov
sbb
js
xchg
mov
js
ds
test
sbb
lcall
jne
loop
inc
fwait
ja
sub
push
xchg
push
adc
pusha
ret
inc
cmp
sbb
pmaxub
and
xor
sahf
dec
mov
push
add
inc
sub
cmc
mov
jno
xchg
push
xchg
fidivrl
mov
sbb
mov
cmp
clc
xchg
fldenv
adc
in
and
jb
fcomps
arpl
addb
add
mov
ja
sahf
jo
inc
int3
mov
loopne
jbe
mov
pusha
jno
sbb
mov
inc
jo
xor
pop
fsubr
stc
std
dec
mov
inc
or
adc
pop
ds
lret
leave
aam
movsb
push
lahf
xlat
into
mov
and
sbb
movsl
cmpsl
add
cli
or
movsb
push
scas
mov
insl
stos
inc
pushf
pop
scas
xchg
pushf
ffree
jl
mov
ds
imul
out
mov
mov
daa
push
lds
xchg
xor
fwait
stos
loopne
cmpsl
and
call
out
fisubrl
xor
jmp
nop
scas
rorl
je
mov
dec
mov
mov
mov
jge
fsub
call
sti
mov
daa
push
rclb
and
jmp
xchg
mov
scas
mov
xor
dec
jl
ret
mov
mov
cmpsb
daa
test
pop
aam
sbb
popa
push
repnz
xor
push
int3
xlat
cmp
stos
aas
xorb
jle
enter
js
adc
mov
aad
fcoms
aam
cmp
ret
jbe
and
fdivrs
add
aas
lods
testb
mov
pop
sbb
stc
jnp
jl
mov
mov
or
mov
adc
pop
pop
rorb
scas
clc
inc
jb
inc
inc
mov
dec
aam
orb
rcr
mov
jmp
in
pop
mul
sub
lock
jb
jecxz
dec
outsl
xchg
dec
mov
test
jae
inc
jecxz
adc
xchg
rcrl
fisubl
mov
int3
lea
dec
insl
cmp
fmuls
aad
inc
sub
and
push
repnz
xor
pop
xchg
sub
jo
movb
xor
cmpsl
out
mov
cmpl
ficoms
sub
faddl
cwtl
xor
sub
adc
movsl
jle
mov
dec
inc
in
lcall
and
repnz
inc
pop
jecxz
pop
in
pop
aam
fimuls
jle
pop
mov
or
insb
das
and
mov
movsb
aam
test
popa
dec
xor
in
test
fisubrs
fstpl
out
and
clc
xchg
mov
pop
sub
ja
dec
pop
loope
jl
test
mov
neg
shlb
inc
inc
jb
bound
std
push
std
or
fildll
cmp
push
stos
add
add
int
push
out
and
jae
ret
mov
repnz
pop
pop
mov
and
subl
push
cmc
fstps
ficoml
out
aad
jecxz
jne
dec
das
scas
iret
mov
jns
push
adc
ds
inc
or
push
dec
inc
inc
sbbl
std
push
xor
hlt
scas
push
or
cmp
out
push
or
mov
rolb
testl
popa
psrlq
scas
xlat
add
push
fadds
shlb
aam
rorl
dec
xor
jae
sub
xchg
lret
add
lods
std
cmp
cmp
rcll
mov
mov
mov
and
push
cli
xor
nop
jae
pop
cltd
popa
xor
xchg
dec
lods
in
out
movsl
xlat
xor
cli
pop
cmpsb
sahf
aas
pop
lods
nop
xchg
rclb
mov
xchg
shlb
insb
adc
jge
outsl
movsl
fwait
mov
add
cmp
xor
in
sub
test
mov
into
les
std
jl
sub
inc
sahf
insl
add
inc
mov
jecxz
repnz
enter
fwait
test
sbb
jae
cs
jge
fisubs
xor
in
mov
outsb
pop
cwtl
testb
jb
rorl
push
push
cltd
jl
jecxz
dec
sub
mov
sbb
fistps
outsb
loope
and
and
std
fs
cs
clc
shll
and
jo
scas
or
in
push
jp
mov
mov
adc
xlat
test
shl
or
js
addr16
stos
sti
and
out
sub
push
mov
aaa
psubsw
out
xchg
jo
adc
fiaddl
xor
push
push
int3
sub
test
xchg
into
sahf
pop
fstp
mov
xchg
out
and
inc
sahf
sti
and
test
es
jmp
addb
lea
sub
jne
mov
xor
fwait
movsl
mov
xorl
or
pusha
and
cmpsl
mov
mov
push
fcompl
fisubrl
inc
mov
jnp
mov
sti
ja
dec
int3
popa
cwtl
out
mov
pop
dec
cwtl
fstpl
xor
jge
inc
pop
les
jmp
rcl
mov
mov
icebp
fwait
jo
sub
push
cld
mulb
lcall
or
or
xor
mov
push
lods
mov
ret
lea
int
les
push
and
out
pop
jge
addb
clc
pop
dec
ret
fisttpll
outsb
add
jbe
adcb
mov
aam
mov
cmp
xchg
dec
pop
nop
jge
mov
jg
mov
and
or
push
rolb
mov
and
sbb
sahf
aaa
xor
mov
int3
jae
push
jo
cmpsl
mov
pop
ds
push
mov
mov
aas
icebp
icebp
sbb
insl
pop
hlt
test
and
shll
cs
or
pop
dec
adc
inc
repz
dec
push
cmp
xor
js
mov
and
and
stos
addr16
cmp
test
or
push
lock
adc
loop
and
push
xor
pop
lods
cmpsb
sbb
cwtl
jno
push
and
shll
outsb
or
jne
sub
call
addl
dec
into
push
cmp
jnp
push
add
sub
stos
sbb
jp
and
outsb
xchg
mov
or
sub
pop
jo
sub
rorl
adcb
arpl
stos
cs
dec
mov
xchg
movsb
dec
cmp
xchg
outsb
andb
shll
enter
mov
or
cmp
cmc
mov
imul
mov
je
push
inc
push
cmp
es
movsb
mov
jmp
mov
jp
and
adc
lds
rolb
in
stos
mov
mov
ja
out
mov
shrl
shl
cmp
push
mov
lds
push
ja
add
stos
aam
or
pop
push
fsubl
repz
loope
sarl
or
in
push
jnp
sbb
fldenv
arpl
sbb
xchg
lds
or
jo
outsb
xchg
lea
aas
call
das
cmpb
adcb
lret
sbb
jge
in
push
movsb
test
and
pop
addr16
lret
mov
fwait
mov
adc
pushf
movsl
cmp
xchg
testl
fidivrl
push
sbb
cmp
dec
jmp
dec
cmp
or
inc
les
mov
lods
das
adc
cmp
loop
lret
jecxz
fidivrl
inc
std
pop
enter
or
mov
fistpl
dec
push
mov
adc
add
adc
xchg
or
pop
push
push
and
out
popa
jne
push
shll
neg
sbb
ss
push
or
push
hlt
cmc
fs
add
pop
mov
mov
pop
sub
mov
mov
xor
jmp
cmp
cmpsb
push
dec
xchg
pop
push
sbb
call
xchg
xor
dec
and
mov
ljmp
cmp
ds
popf
sbb
fdivrl
imul
sub
outsl
inc
ret
pushl
call
and
leave
sub
mov
add
sbbb
js
inc
jmp
and
dec
imul
ror
mov
push
pop
mov
mov
dec
and
mov
rorb
xchg
pushf
ljmp
inc
test
sahf
stos
nop
xchg
lahf
stos
imul
arpl
enter
aas
mov
and
cwtl
and
aam
jno
pushf
and
dec
mov
ret
add
and
sub
sub
ret
pushf
mov
lods
mov
movsl
add
add
js
cmc
sbb
rorl
orl
add
adc
push
add
add
jb
pushl
cli
imul
and
popf
out
adc
cmp
mov
xchg
dec
fistps
daa
hlt
aaa
sahf
inc
pusha
adcb
mov
cmp
mov
sbb
loop
mov
das
jno
mov
insl
test
in
mov
fildl
loope
loopne
inc
int3
inc
imul
jle
aaa
jne
jg
cmpsl
pusha
into
scas
add
cmp
mov
xor
adc
cmp
jmp
jo
push
and
rclb
push
mov
rol
push
push
xchg
and
bound
cs
rcrb
xchg
ret
mov
adc
andb
or
icebp
lods
mov
push
imul
pop
and
sbb
inc
out
pop
in
add
push
sub
xchg
jb
sub
jno
sub
stos
pop
mov
xor
fs
pop
sub
std
int3
cmc
jl
pusha
pop
lret
jmp
xchg
negl
mov
adc
addr16
nop
scas
bound
mov
xor
xchg
test
loope
cmp
and
lret
push
or
out
lock
or
and
repz
xchg
push
sub
lret
test
xchg
mov
sbb
lret
insl
incb
and
cmpsb
lahf
cmpsb
rcrb
rolb
push
loopne
jb
fcoms
inc
in
cmp
addr16
xor
sub
loop
cmpsl
or
xchg
jo
xchg
add
xor
cmp
or
jle,pn
xchg
add
testb
jecxz
addr16
jmp
dec
push
push
lret
jecxz
gs
fwait
idiv
iret
std
jo
mov
add
test
adc
movsl
sbb
sub
rcrl
inc
loop
lfs
gs
and
or
in
jne
mov
mov
mov
fisttpll
pop
add
jb
jl
xchg
adc
sbb
sub
cmovl
fwait
xchg
mov
or
cltd
lock
movsl
adc
out
pop
test
adc
cmp
cmp
addr16
lock
aad
jmp
stc
inc
mov
xchg
es
jecxz
lock
pop
cmpl
inc
cmp
rcrl
insb
add
pop
add
cs
inc
dec
scas
inc
mov
popa
lea
addb
mov
inc
pusha
push
repz
and
mov
rclb
push
mov
repnz
mov
enter
push
test
jb
push
sub
int3
xor
pop
pop
into
mul
cmp
mov
lds
xor
mov
mov
fadds
aaa
inc
pop
leave
pop
mov
scas
mov
or
iret
movsl
lods
inc
and
add
xchg
mov
jnp
fcoml
fxch
jle
pop
imul
xchg
pop
adc
lcall
cmpsb
mov
lods
andb
xchg
add
dec
loope
inc
mov
pop
sub
aam
adc
push
mov
fwait
sbb
sub
mov
or
fistps
mov
pop
mov
inc
or
or
pop
dec
imul
add
add
cmp
in
std
add
movsb
dec
push
mov
pusha
dec
adc
je
jbe
ficompl
jne
push
ret
shlb
pop
jne
and
push
xchg
icebp
push
pop
xor
lds
hlt
fcom
add
xchg
std
fs
push
cld
sti
das
mov
push
pop
les
hlt
ret
mov
jo
cltd
fsubrs
incl
popf
mov
jo
push
xchg
xchg
cmc
push
arpl
or
inc
lcall
lahf
div
outsb
in
add
xor
pop
pop
insl
and
sub
xchg
pop
or
out
nop
fcmovnu
xor
dec
jb
mov
shrb
hlt
ja
idivb
stos
cmp
imul
ljmp
nop
ds
leave
jecxz
sbb
lea
sub
cmp
jb
and
nop
jbe
lods
pop
xlat
loope
sub
and
or
push
ja
popa
lcall
adc
sti
xor
pop
jno
movsb
andl
mov
sub
xor
loop
rorl
es
jno
jno
test
fimull
aad
or
sub
pushf
lods
jno
in
stos
shlb
jb
push
add
jge
xchg
loopne
mov
loop
dec
ds
js
test
dec
mov
inc
mov
lods
add
push
loopne
ja
mov
testl
mov
push
stos
and
pop
add
cmp
push
jmp
push
inc
out
jns
popa
xor
jg
dec
outsb
inc
test
and
lcall
pop
sti
jl,pt
nop
push
push
add
leave
adc
addr16
jnp
xchg
test
repnz
cmpsb
jp
mov
dec
std
inc
cmp
lds
mov
adc
dec
fwait
cltd
cmc
insb
lds
adc
cmpsl
sbb
cld
push
pop
ja
mov
pop
inc
lock
jb
movb
dec
ljmp
or
ds
push
xlat
dec
mov
imul
xor
dec
lcall
xchg
outsb
lahf
jae
dec
pop
sbb
push
or
or
sbb
xchg
fidivl
pop
xchg
sub
jno,pt
out
fstps
sub
mov
cmp
fwait
ds
rol
enter
cmp
mov
xlat
aaa
adc
sub
inc
jae
out
sbb
sub
sub
pop
outsb
jb
xor
in
and
andb
das
aas
jns
add
loope
push
jle
mov
test
jo
arpl
mov
xor
sub
push
mov
mov
sbbb
mov
cmpsl
gs
dec
cmp
mov
push
adc
dec
mov
mov
ja
xor
push
lret
stos
cwtl
cli
sahf
xadd
ds
hlt
and
mov
push
rcll
adc
aad
stos
pop
push
sub
leave
jge
das
sub
jo
pop
adc
cmc
mov
jne
iret
sbb
pop
inc
das
aam
cli
inc
push
pushf
test
ljmp
adc
xchg
adcb
ljmp
out
mov
xchg
pop
mov
lds
adc
dec
xor
xchg
add
jge
mov
push
inc
movsb
or
or
dec
dec
and
out
mov
in
rcr
cmp
dec
add
lods
push
pop
ret
or
sbb
push
xchg
call
daa
popa
xor
loop
mov
lds
cwtl
pop
push
jg
daa
scas
mov
aam
mov
pop
mov
test
outsb
jnp
fldcw
aaa
jge
lods
xchg
xlat
rcr
rdmsr
rcrb
pusha
or
add
cs
inc
sub
sbb
sbb
sbb
push
adc
sub
cmp
fndisi(8087
jp
fcoml
outsb
mov
xor
xor
sbb
fyl2xp1
and
push
arpl
js
and
cmpsb
dec
ret
imul
xchg
inc
xchg
xor
mov
aam
pop
scas
adc
sti
mov
js
cmpsb
xchg
mov
cli
sub
cltd
fcmovbe
xchg
cmp
clc
jnp
cmp
test
jb
jne
push
stos
mov
inc
cmp
int3
clc
insb
int
sahf
pop
xchg
cmp
adc
cmp
je
adc
fcompl
cwtl
and
inc
jg
push
aad
jns
jns
fidivrl
popl
dec
mov
lahf
mov
in
fsts
scas
shlb
pusha
cltd
pop
dec
pop
scas
iret
les
push
add
mov
push
arpl
xchg
jg
int
mov
in
xchg
int
mov
adc
test
inc
lods
or
sbb
lds
pop
stos
iret
fst
sarb
inc
fsubl
xchg
cmp
xchg
mov
ret
cld
jmp
sbb
add
jae
add
add
bound
push
mov
mov
arpl
and
cmc
aaa
adc
adc
sub
add
xchg
xor
pop
mov
dec
inc
lock
add
in
cmp
add
and
adc
jbe
pop
sub
rolb
sbb
lods
dec
and
in
push
insb
movsb
add
xor
xchg
dec
lret
jmp
jge
dec
fs
jmp
je
fisubl
mov
ds
adc
xchg
mov
jno
aas
dec
dec
xchg
ljmp
push
mov
cld
icebp
ret
pop
fwait
adc
es
and
jo
faddl
mov
repnz
lods
into
ds
or
cltd
es
adc
pop
cmpsl
lods
dec
add
mov
dec
std
jo
inc
and
in
pop
mov
xor
hlt
les
xlat
rcr
sbb
adc
shrl
sbb
dec
sbb
jo
outsl
rclb
cmp
rol
xchg
popf
jno
mov
imul
scas
pusha
cmp
jo
adc
sbb
cmc
xchg
jmp
pop
popf
pop
test
xchg
ss
loope
cmp
jmp
insb
sbb
ret
and
add
mov
cmp
lret
xor
push
dec
mov
mov
in
dec
mov
call
mov
jb
aaa
dec
jns
int3
cmpl
adc
mov
dec
ljmp
push
pop
pop
push
push
and
xlat
cmp
aad
das
cmp
lods
loopne
test
push
in
cmp
add
pop
cmp
in
shlb
mov
add
test
insb
inc
fisubs
imul
mov
mov
cltd
cmp
mov
inc
add
cmc
xor
int
add
cltd
scas
outsb
hlt
cmp
mov
jle
mov
out
xor
lock
and
pusha
xchg
push
data16
ret
mov
mov
fimuls
sub
in
movsl
jle
push
shr
int3
rcr
add
cmp
mov
xor
inc
pop
jle
loopne
cmp
fbld
outsb
into
aam
cmp
dec
ret
test
pop
push
sbb
pop
lret
pop
sbb
loopne
iret
lcall
inc
push
mov
aaa
outsb
loopne
inc
inc
mov
dec
pop
scas
cmp
stos
shlb
xchg
sub
sbb
pop
stos
lcall
cmp
call
pusha
pop
xor
xor
mov
mov
rclb
add
push
cmp
arpl
push
and
test
push
mov
cltd
inc
ret
leave
rcrl
out
dec
xor
push
es
mov
jbe
movl
push
sbb
adc
add
std
mov
or
jge
cmp
and
cmp
inc
pop
sub
pushf
mul
jbe
mov
popf
sbb
dec
ja
inc
insb
pop
lcall
mov
dec
pop
mov
outsb
mov
cmpsb
cmpb
cmp
lods
stos
test
clc
icebp
add
and
test
dec
xchg
std
add
pop
add
pusha
imulb
cs
jne
cmpsl
imul
mov
xor
pop
int
bound
xchg
popa
mov
or
mov
dec
negb
scas
push
sub
mov
lods
and
jb
repz
pop
nop
pop
icebp
call
push
test
cld
int
loope
mov
pop
push
mov
gs
data16
hlt
int
repz
rcrl
pushf
mov
rcrb
xchg
jl
xchg
in
xchg
push
movsb
xchg
push
das
push
mov
mov
mov
lret
dec
imul
mov
add
jl
ss
pop
inc
or
pop
xchg
ret
test
inc
add
test
add
xor
pop
out
sbb
fistpl
shr
mov
aas
dec
ja
adc
mov
leave
mov
jecxz
popa
notb
push
sahf
sub
sub
test
push
inc
push
push
mov
dec
xchg
jo
leave
lods
rorl
sbb
mov
push
xlat
movsl
add
ss
loope
adcl
xchg
jecxz
cmp
add
mull
add
mov
fmuls
popa
inc
push
push
push
bound
test
add
cld
sbb
int3
dec
sbb
inc
mov
sbb
data16
shl
xchg
mov
or
dec
mov
je
in
hlt
xchg
mov
int
mov
adc
mov
adc
xchg
lds
mov
jge
push
bound
pop
add
mov
dec
xor
mov
lret
sbb
push
daa
and
push
mov
mov
ss
cwtl
mov
insb
inc
lcall
mov
sub
call
jmp
arpl
and
push
mov
call
cltd
je
ljmp
bound
test
fs
or
and
inc
adc
rolb
iret
mov
xchg
in
fisttpl
mov
stos
or
pop
das
sbb
mov
test
icebp
notb
jecxz
and
scas
xchg
xor
aad
aas
or
push
jl
fidivrl
fs
jno
push
inc
test
loope
xor
adc
pop
push
imull
int
hlt
jmp
ja
xor
and
loop
imul
cwtl
aas
sbb
cmpsb
daa
adc
sbb
pop
cmp
push
in
push
mov
mov
adc
mov
cmp
and
loop
cmp
xor
pop
pop
fimuls
fisubl
stc
rclb
sbb
xchg
xchg
loop
dec
cmc
push
adc
jbe
xor
fbld
inc
inc
loop
jb
cltd
and
mov
sti
jb
in
je
jbe
xor
xor
pop
mov
shll
jl
jp
jae
fisttps
sbb
mov
fisttpll
jle
inc
or
call
mov
outsb
sbb
in
add
inc
adc
pop
jb
xchg
adc
mov
dec
and
imul
dec
push
mov
pop
mov
cmpsb
xchg
into
pushf
lds
das
xlat
scas
jbe
sub
jns
mov
clc
cmpsb
out
stc
out
mov
jp
fcoms
dec
loope
out
sub
je
frstor
mov
adc
lds
or
mov
cs
movsb
mov
mov
mov
fsubrs
inc
cld
aaa
and
xchg
add
adc
inc
or
push
loope
xchg
mov
pop
inc
pusha
insl
in
int3
rcr
dec
sub
push
or
jbe
test
movb
add
and
arpl
adc
xchg
test
or
aas
repz
lds
insb
or
cltd
push
in
in
mov
mov
lcall
and
cmp
xchg
into
lahf
fmull
xchg
dec
dec
dec
call
jecxz
call
sahf
pop
push
mov
out
or
in
dec
movsb
mov
xor
xchg
jns
pandn
insb
mov
xchg
addr16
aam
xor
mov
push
in
inc
ret
jecxz
lret
inc
lahf
aaa
pop
or
je
sub
sbb
mov
jge
in
rcrl
test
sub
add
xor
cmp
dec
fwait
push
or
subl
cld
push
xchg
imul
int
sub
jb
jl
push
mov
negb
cmp
jle
sbb
push
and
ficompl
and
jns
cli
mov
jae
dec
sbb
mov
dec
insb
pop
mov
test
les
jg
ja
dec
das
adc
enter
mov
fs
jle
sbb
cwtl
lcall
das
and
lock
dec
mov
mov
or
lcall
fistpl
hlt
pusha
fcomi
cmp
add
icebp
out
call
loop
and
xor
ret
add
and
push
and
ja
fcoms
cmpsl
imulb
ljmp
and
fstpl
mov
loope
and
mov
jmp
std
push
rcr
sarl
mov
mov
out
adc
mov
dec
icebp
aas
dec
in
add
scas
and
gs
test
sar
push
push
rol
test
sbb
data16
sbb
mov
outsb
cli
push
cmp
notl
adc
jecxz
ja
movsl
xor
jne
scas
adc
orb
mov
iret
xchg
dec
inc
cmp
sub
mov
lea
and
leave
mov
lock
mov
xchg
mov
stc
or
xchg
out
jnp
rcll
test
mov
xor
mov
push
pop
or
sbb
mov
lock
lds
xchg
mov
das
mov
pusha
push
mov
and
xchg
inc
aas
ds
movsb
imul
cmp
dec
mov
xor
xlat
mov
das
sub
ljmp
stc
int3
sbb
rorl
adc
jbe
xor
pop
jno
mov
inc
lea
shrl
das
fnstsw
sub
or
jge
rol
lods
push
mov
es
sbb
xor
pushf
mov
mov
mov
jns
push
fldcw
aaa
mov
adc
mov
mov
add
xor
daa
add
movl
pop
sbb
cmp
jno
dec
sub
out
fidivrs
repz
movsb
mov
test
fwait
mov
call
popf
js
imul
loopne
xchg
jmp
lock
lcall
sarb
pop
mov
fwait
std
or
hlt
mov
fsubs
mov
xchg
out
mov
insl
pop
add
pop
movb
dec
mov
fdivrs
dec
or
ret
jae
mov
mov
inc
adc
addr16
pusha
mov
push
lea
popa
jmp
push
add
and
out
mov
mov
shr
shrl
mov
xchg
mov
sub
pop
icebp
imul
sbb
inc
mov
push
or
sbb
sub
pop
jecxz
filds
xor
mov
xor
push
lret
push
cwtl
arpl
mov
lods
inc
fwait
inc
xchg
mov
aam
orb
movsb
xor
cmc
mov
loopne
inc
sbb
add
add
test
repnz
jl
mov
or
subb
inc
lods
cmc
aam
jb
out
adc
sbb
fnsave
mov
movhps
xor
lds
cmp
movsl
test
lock
sti
jecxz
nop
mov
fdivrl
jo
leave
pop
xchg
lods
sub
mov
mul
mov
stos
xchg
push
mov
popa
imul
mulb
dec
xchg
out
sub
pop
or
cltd
xchg
fldcw
dec
xor
loope
dec
mov
lret
adc
jge
fwait
shll
mov
loopne
xchg
xor
mov
xchg
and
cwtl
jnp
dec
test
mov
or
ljmp
cwtl
in
and
pop
lret
cmpsb
stc
sub
or
pop
lret
cwtl
mov
push
jnp
adc
pop
push
bnd
cmp
repnz
mov
fistpll
dec
adc
mov
jno
sbb
fnstcw
sub
mov
je
int
and
cmp
sbb
xchg
int
icebp
add
cmpb
xor
out
sbb
loope
sbb
shr
and
mov
push
ja
std
push
mov
cltd
jmp
cwtl
jbe
inc
pop
xchg
adc
mov
imul
jle
xchg
fwait
out
test
jp
out
cmp
notb
jne
sbb
xchg
data16
cmpsb
lahf
jp
inc
xchg
mov
jne
cltd
mov
test
and
repnz
scas
mov
jbe
adc
cmc
std
pop
outsl
sub
lock
jmp
push
pusha
loop
addr16
jle
insl
scas
test
mov
mov
int3
aas
xlat
ljmp
fwait
inc
push
sahf
and
js
mov
js
and
or
cmc
scas
sbb
mov
loopne
sti
push
lahf
xchg
xor
fwait
rcll
imul
sbb
sbb
subb
dec
dec
int
mov
movsl
mov
mov
mov
push
les
frstpm(287
in
adc
mov
lcall
in
jno
pop
cmp
das
insb
lods
xchg
inc
enter
ret
add
sbb
adc
stos
jmp
mov
sub
mov
into
sbb
jne
xlat
lahf
mov
fimuls
lods
sbb
cwtl
push
lods
aas
jecxz
lds
cli
xchg
cmp
mov
js
jmp
and
out
add
mov
pop
sbb
cmp
and
mov
add
imul
mov
cmp
repz
mov
sbb
loop
fsubl
test
and
push
fnsave
sbb
add
outsb
mov
jnp
lds
mov
xlat
lcall
add
and
mov
sti
xchg
insb
mov
sbb
push
lcall
in
xor
xchg
std
xchg
and
adc
pop
std
cs
and
subb
aas
xchg
pop
add
inc
nop
js
loopne
mov
xor
push
inc
loope
mov
int
and
xor
xor
sti
scas
jl
ret
ds
hlt
jne
popl
je
repz
jl
in
cmp
sub
dec
dec
dec
imull
xor
andl
outsb
stc
arpl
and
int3
sub
orb
or
pop
mov
popl
sbb
push
xor
mov
inc
leave
test
cld
mov
cld
bswap
xchg
mov
cmp
fidivl
push
shlb
xor
outsb
cmp
inc
mov
sbb
inc
les
shrl
mov
shl
mov
sbb
adc
sahf
cmp
loope
push
cmp
inc
mov
sub
and
adc
push
fs
mov
lods
mov
sub
inc
popf
adc
in
mov
outsl
pop
lods
lock
add
mov
add
aaa
fsub
sbb
jmp
fmul
pop
mov
das
xor
cmp
xchg
mov
arpl
mov
mov
or
mov
mov
je
cmp
jb
pop
adc
cmc
hlt
nop
jb
adc
rcrl
out
mov
iret
stc
sbb
lock
popa
dec
mov
xchg
cmpsl
cmc
bound
push
cmp
data16
testb
xor
cmp
sarl
outsb
rcrb
mov
or
xchg
pushf
jecxz
mov
das
test
dec
cli
outsb
mov
mov
mov
repz
test
sbb
mov
inc
scas
fnstcw
cmp
mov
out
out
xchg
dec
xor
xchg
or
enter
cltd
jl
push
lahf
mov
mov
sbb
out
jg
sub
lea
cmc
and
jecxz
cmp
aam
imul
jp
mov
in
add
adc
mov
xchg
sub
es
adc
xchg
loop
xor
xlat
clc
push
sahf
out
imul
and
cmp
and
imul
adc
cmp
mov
lret
xor
out
imul
mov
addps
or
in
jecxz
stos
jno
fs
int
jbe
sub
fldt
jecxz
sbb
jae
push
aas
cmp
mov
std
pop
sbb
rcrb
fwait
jg
mov
inc
mov
mov
add
add
cli
dec
xlat
mov
fiadds
push
inc
pop
push
mov
inc
fnstenv
adc
out
dec
gs
int3
sbb
rorb
sbb
lods
mov
mov
js
jno
out
jae
lods
sbb
test
mov
insl
cltd
sti
push
inc
dec
xchg
add
dec
shr
xlat
jle
in
xchg
mov
loopne
jo
out
xchg
arpl
pop
in
mov
mov
sahf
pop
fcmovnbe
jmp
or
dec
sbb
arpl
out
sahf
lea
mov
cmpsb
dec
jbe
mov
dec
pop
sbb
inc
imul
cmp
add
or
out
sub
mov
aam
xchg
jmp
jl
mov
add
push
fmuls
cmp
int3
xlat
jp
outsl
fwait
iret
inc
sub
push
jg
push
dec
insb
pop
sahf
inc
jecxz
xor
fnstcw
jl
in
aas
jnp
sbb
dec
inc
cmp
lret
or
ss
mov
mov
int3
jle
push
push
cmpb
jne
test
jmp
sbb
mov
scas
mov
add
dec
cmp
xchg
int
inc
std
pop
push
out
leave
fnstcw
push
ret
xchg
jmp
inc
fsubs
mov
call
shrb
mov
call
imul
clc
push
pushf
and
jl
stos
mov
and
xor
dec
pushl
fwait
or
adc
xchg
xchg
jno
and
pop
adc
scas
in
push
mov
and
hlt
fs
xor
leave
insb
mov
inc
fchs
cmpsb
inc
mov
pop
inc
sub
push
js
adc
xor
sub
sbb
in
inc
out
xor
and
ja
mov
mov
insb
arpl
mov
sbb
push
jbe
mov
fdivs
ds
es
cmp
fnstsw
push
shr
and
mov
cltd
sbb
pop
ret
mov
pop
cmc
stos
or
mov
cmp
cmp
lret
addr16
push
movsl
sbb
fwait
mov
xchg
xor
outsb
enter
fwait
jbe
add
sub
mov
fs
mov
xchg
sbb
xlat
stc
sbb
shrb
mov
dec
xor
jns
stos
xchg
fdivrp
and
sahf
push
jb
mov
dec
add
jb
xor
enter
ja
lds
out
sbb
jl
mov
stos
aas
sub
jne
aam
imul
cmp
cmp
int3
mov
pop
movsl
cltd
dec
mov
cld
outsb
xchg
push
add
loop
jo
stos
repnz
dec
mov
shr
sub
aad
out
pop
in
add
adc
test
push
push
inc
mov
sbb
xchg
ss
adc
fs
and
daa
jns
pop
test
push
sbb
out
mov
out
xor
repnz
pop
and
lods
inc
cmp
fidivrl
nop
or
lret
mov
add
sbb
sbb
ftst
mov
lret
int
pop
pop
or
fildll
dec
push
pop
sub
push
jge
push
sbb
mov
cmp
mov
mov
or
cs
xchg
push
adc
mov
mov
out
or
jmp
dec
adc
aam
sahf
sbb
in
jmp
dec
test
mov
inc
out
or
xchg
dec
dec
sub
or
push
add
js
stc
cmp
mov
test
cli
movsl
jp
ret
ucomiss
fiadds
stc
imul
add
xchg
loopnew
xchg
fisubrs
jg
pop
sub
mov
mov
cmp
scas
dec
or
jmp
scas
insl
xchg
add
movsb
mov
outsb
sub
mov
inc
cmp
xchg
mov
mov
adcb
sub
fmuls
xor
adc
xchg
lret
fimull
pop
or
bound
jno,pt
lea
mov
xor
xor
test
xor
and
rol
subl
test
dec
pop
xchg
in
mov
lcall
jb
mov
cld
push
arpl
jge
les
es
insb
imul
xor
in
out
rolb
in
push
imul
out
push
sbb
repz
ficoml
std
iret
mov
repnz
arpl
mov
inc
arpl
push
dec
push
stc
push
inc
push
mov
fisttpll
jp
mov
push
fs
rol
divb
test
add
adc
aas
nop
dec
push
mov
sbb
pop
push
mov
aad
adcb
jno
mov
aas
fcmove
insb
jne
jl
mov
jmp
pushf
daa
jge
fidivrl
daa
stos
sar
or
adc
in
ds
addl
adc
dec
sti
rorl
aaa
jecxz
hlt
jl
ret
sub
cmpsl
das
sub
pop
stc
mov
push
jp
mov
sbbl
dec
decb
adc
inc
cmpl
popf
dec
push
xchg
mov
outsl
sti
stos
and
or
les
push
decb
xor
or
push
aas
sbb
in
shlb
inc
movsl
push
dec
cwtl
jg
movsb
sub
stc
adc
bound
stos
scas
aaa
das
lods
sbb
inc
xchg
ljmp
lods
in
gs
push
mov
xchg
mov
and
adc
cli
adc
mov
addl
jg
shl
jb
test
std
push
dec
xchg
lods
and
or
daa
pusha
pop
cmp
pop
dec
aas
rcr
sysexit
cwtl
lds
adc
mov
push
cmpsl
and
xor
lret
mov
into
mov
add
scas
mov
ljmp
dec
cmp
jae
test
jb
mov
aas
aam
push
ret
fcomps
shlb
lret
mov
cmc
jge
dec
aad
xchg
xchg
rcrb
inc
pop
fbstp
cmpsb
pusha
iret
push
jne
out
jl
xchg
push
int
scas
lret
fbstp
pop
insb
push
and
ds
xor
or
dec
sub
xor
and
test
pop
and
fwait
mov
gs
fucomip
lcall
fwait
jl
pusha
fdivl
mov
repz
jge
mov
push
push
movb
cs
push
jnp
dec
mov
sub
add
nop
aas
and
mov
rorb
scas
ret
test
imul
sub
aam
imul
icebp
es
clc
enter
pop
push
lret
inc
dec
test
dec
or
movsl
sahf
xor
mov
int
mov
mov
mov
test
fsin
in
shlb
in
andl
push
or
insb
adc
out
pushf
int3
push
stc
push
fsubr
std
loopne
mov
out
mov
ss
lods
out
push
js
jl
mov
add
divb
push
sarb
xor
adc
dec
lods
mov
pushf
or
popa
pop
pop
dec
ret
sbb
mov
cmp
sub
pop
test
sbb
cwtl
mov
and
nop
sti
pop
mov
out
mov
sub
push
sti
push
sub
fs
jmp
out
mov
dec
inc
test
in
sbb
clc
mov
inc
xchg
out
daa
je,pt
inc
mov
mov
je
lea
or
and
xchg
dec
cmpsb
insl
repz
lods
and
movsl
loope
xor
mov
leave
push
cmp
shlb
mov
cmp
ljmp
add
sub
sti
das
push
test
test
xchg
outsl
mov
fnstsw
pushf
sbb
iret
add
and
inc
dec
addr16
mov
sub
or
push
inc
es
clc
leave
lods
cmp
outsb
fwait
mov
inc
pop
push
xchg
pop
bound
out
lds
jbe
mov
push
add
pop
xlat
push
xchg
lret
or
mov
sub
test
scas
xchg
dec
repnz
xorb
rcrl
or
mov
push
sbb
nop
loopne
sub
cmpsb
push
repnz
pop
jbe
mov
cmc
sar
pop
adc
add
testl
movsb
das
jnp
movsb
or
gs
test
test
jmp
movsl
out
cmp
xor
in
sub
lcall
sbb
in
xchg
adc
add
rcll
test
loopne
xor
pusha
cmp
daa
mov
data16
xchg
mov
lret
inc
xorb
addr16
mov
daa
cltd
cmp
addr16
int3
fnsave
and
sub
out
mov
nop
shl
cmp
mov
popf
lods
repnz
mov
lds
dec
into
in
in
mov
int3
idivl
imul
push
imulb
xor
fisttpll
adc
add
fwait
aaa
xchg
xchg
cmp
scas
sub
nop
lea
jmp
pop
enter
cs
out
mov
movsb
or
adc
cmp
sbb
cmpsl
push
js
mov
sbb
sub
pop
in
add
bound
div
mov
les
add
ss
clc
das
imulb
leave
mov
inc
sub
inc
arpl
xchg
jl
ret
ja
fisttpll
out
stc
popfw
jb
mov
iret
inc
enter
mov
outsb
inc
data16
into
add
xchg
sub
push
sbb
xor
mov
or
add
mov
and
xchg
ret
push
cld
imul
cmp
dec
orb
push
cmp
pop
adc
cmp
fcmovnb
cmp
das
or
fcoms
mov
mov
or
data16
xchg
mov
lds
mov
lods
aas
out
xchg
iret
mov
repnz
cmpsl
lret
pop
sub
jmp
ljmp
lcall
pop
out
loopne
sti
shl
cmp
sbb
xor
sbbl
adc
test
cld
inc
sbb
cmpsl
add
dec
fxtract
mov
jl
mov
and
xlat
or
adc
sub
mov
sbb
jbe
shrl
xlat
pop
pop
push
push
outsb
inc
stos
sbb
nop
aas
and
das
xchg
jp
fadd
xchg
lods
jns
mov
pop
sbb
std
fnsave
cltd
xor
cmp
sub
mov
test
mov
lea
xchg
ret
push
dec
mov
inc
add
and
mov
adc
jecxz
leave
ljmp
out
dec
lahf
pop
adc
outsl
pop
xchg
loopne
push
mov
rclb
jnp
or
lahf
push
xchg
jnp
ret
data16
cwtl
sti
adc
mov
sbb
dec
in
sbb
mov
and
sub
ds
and
add
cltd
or
clc
dec
jnp
push
repz
in
lods
jnp
divb
lods
jl
in
mov
pop
mov
out
xlat
sbb
rcrl
shll
stos
mov
cmc
jns
aad
inc
jb
lcall
inc
add
mov
inc
cmp
aam
inc
outsl
mov
inc
pop
xchg
xchg
and
sahf
sbb
push
jmp
dec
aaa
mov
loopne
cld
ret
sub
cltd
lea
test
fdivrs
or
adc
dec
inc
aas
sbb
push
popf
icebp
xor
fmull
xchg
std
mov
cmc
std
xchg
push
mov
cltd
ds
push
insl
fs
lods
xchg
or
add
xchg
fisubs
push
ficompl
insb
lcall
ljmp
rorl
sub
icebp
or
cmpsl
adc
cwtl
ss
pusha
dec
add
add
cmp
dec
adc
sbb
add
sbb
xchg
imul
pop
xchg
inc
clc
jge
and
shr
lods
stos
cmp
xchg
xchg
int
insb
or
das
test
adc
lds
inc
lock
and
sbb
movsl
cmovl
cmc
xor
and
lods
pop
xchg
dec
sub
lods
mov
cmpsl
xlat
imul
andb
insb
push
idiv
mov
cwtl
pusha
aaa
nop
add
add
or
adc
push
dec
stos
adc
aam
dec
dec
arpl
aam
dec
scas
sbb
dec
int
mov
into
sahf
ljmp
mov
hlt
or
cmp
lret
pop
out
lret
gs
xchg
fstp
rcrb
out
movsb
mov
es
dec
sub
aaa
cmp
push
jne
push
aaa
ret
divb
add
mov
jle
inc
lock
adc
jae
movsl
mov
mov
dec
adc
xchg
call
sarl
push
mov
jmp
or
lods
adcl
push
xor
lods
daa
dec
mov
mov
movsb
cmp
cmc
cmc
cmp
xchg
xchg
enter
pop
add
push
test
andl
lds
or
pop
cmp
mov
mov
cmp
mov
push
pop
lods
inc
js
repz
dec
push
push
adc
adc
jae
pop
ljmp
rorl
fdivrs
shlb
mov
pop
pusha
test
sub
and
fs
xchg
mov
icebp
push
jne
lock
mov
jo
and
mov
mov
mov
add
sbb
inc
lock
shll
sub
nop
test
sub
leave
sub
push
sahf
inc
mov
or
cmp
ret
aaa
icebp
sub
scas
or
jne
add
jge
movsl
iret
or
aas
mov
xlat
je,pt
cmpb
into
sbb
push
dec
jecxz
fldt
pop
shl
repnz
int3
mov
mov
call
push
push
or
jae
push
cld
ljmp
dec
fucomip
pop
sarb
repnz
push
addb
jmp
mov
sarl
test
jno
es
xor
xor
xchg
or
or
out
mov
out
mov
je
ret
pop
mov
sub
mov
cmpsl
mov
bndldx
je
mov
out
cmp
or
scas
or
pop
cmc
sub
sub
pop
int
cli
cld
dec
pcmpeqd
xor
test
in
push
shr
shl
out
lds
sbb
mov
fcoms
adc
pop
dec
adc
repz
xor
mov
push
popa
daa
pop
pop
or
dec
lcall
adc
int3
rorl
int3
testb
dec
jg
popa
sub
fwait
cmpsb
or
xor
loope
mov
xor
flds
repz
cmp
add
aam
dec
adc
es
inc
sub
jle
xor
inc
rclb
pop
inc
sbb
mov
xlat
inc
lahf
ja
out
dec
lods
sbb
pop
repnz
out
lret
or
xor
jno
push
sbb
mov
leave
faddl
sub
cmc
into
aad
dec
incl
lret
push
jns
mov
bnd
cmc
ljmp
xor
xchg
xchg
fstps
stos
fucomp
mov
and
bound
dec
pop
xchg
sub
mov
scas
outsl
push
cmp
sbb
jbe
pop
jae
add
gs
dec
mov
and
popa
adc
test
loopne
mov
ret
sbb
mov
movsb
sbbl
mov
fists
enter
cmp
cmpsl
mov
popa
inc
fnstsw
mov
in
adc
jecxz
pop
movq
in
sub
push
cmpsb
sbb
add
jmp
mov
xor
lcall
and
js
push
repnz
movsl
add
mov
inc
xor
mov
fisttps
pop
mov
jnp
push
lods
loopne,pt
mov
mov
add
xchg
mov
mov
push
cmp
pop
out
cwtl
xor
mulb
xchg
cmp
and
in
jns
mov
mov
lea
outsl
cmp
lods
scas
mov
cmpsb
nop
dec
mov
mov
push
test
push
cmp
push
fdivrl
stc
mov
outsb
clc
mov
pop
or
pop
lret
push
mov
lahf
pushf
jge
aas
cmp
cmpsl
inc
adc
ljmp
sub
dec
jg
jae
lahf
xchg
push
clc
jnp
push
sub
sub
mov
fdivl
mov
mov
ret
ret
xchg
popf
nop
lock
xchg
jnp
and
shlb
lock
ds
adc
sbb
add
adc
addl
repz
clc
loop
sbb
jp
lods
xchg
mov
imul
dec
in
inc
lds
xchg
xchg
vaddps
xchg
pop
test
inc
cmp
push
or
fisubrs
lret
fs
or
stc
jb
adc
mov
push
jno
sahf
je
dec
xor
cmp
std
aas
or
ret
dec
arpl
testl
repnz
jmp
in
repz
jecxz
xor
daa
pop
fstps
and
pushf
mov
jecxz
cmpsl
fsubrs
xchg
sti
adc
mov
mov
pop
lret
ja
in
sub
jle
sbb
add
mov
pusha
mov
jae
std
movsl
lret
int
sub
cmp
icebp
ret
sbb
test
xchg
call
inc
xor
insb
lret
mov
inc
pop
mov
scas
jmp
hlt
lret
insb
int3
and
or
stc
aas
inc
cwtl
test
pop
addr16
ja
test
aam
xchg
add
cmp
loope
outsb
loop
and
cmp
inc
add
and
pop
aam
std
lock
jle
and
cld
repz
xchg
inc
and
fcoms
lock
data16
xchg
inc
inc
sar
mov
rol
int3
mov
out
loopne
dec
call
dec
xor
push
jmp
les
mov
out
mov
fst
or
xor
dec
mov
pop
inc
mov
cltd
add
pop
sub
pop
mov
lcall
aad
and
hlt
ret
stos
and
push
jle
orb
and
inc
mov
jnp
jns
jns
subb
stos
sbbb
lahf
rcrb
push
mov
aad
sar
mov
mov
bound
sbb
mul
int3
xchg
xchg
cmpsb
test
jp
adc
pusha
pop
popf
outsb
jge
mov
into
adc
mov
mov
test
aad
fsubrs
icebp
pushf
dec
cs
loope
mov
loopne
js
nop
and
aam
ss
cmpsb
sbbl
ja
cmpsl
nop
cmp
mov
lret
push
push
mov
ljmp
arpl
ja
cmp
mov
lds
lods
cs
in
mov
dec
push
out
push
adc
push
je
lahf
or
das
into
js
in
pop
hlt
cltd
mov
int3
ja
cmp
mov
cmp
lcall
fistl
or
sahf
cmp
dec
sbb
hlt
shrl
shlb
shll
enter
icebp
in
inc
bound
js
cmc
and
sti
xor
inc
dec
insl
ret
and
inc
out
push
fwait
ja
inc
mov
call
push
daa
mov
stos
adc
mov
adc
push
push
xor
jecxz
lods
mov
adc
mov
sub
xchg
pop
into
addr16
cmc
mov
sub
shrb
mov
push
cs
and
sub
cmp
mov
mov
icebp
insl
xor
sbb
sarl
in
jge
xchg
les
pop
std
cmp
imul
xor
adc
mov
sti
aas
rcrb
rolb
test
daa
mov
sti
movsl
dec
xlat
inc
int3
add
jns
jo
in
push
push
out
insb
sbb
shll
es
aaa
dec
in
faddl
mov
rclb
cmpsl
fists
dec
pop
test
inc
and
xlat
into
lds
mov
and
lcall
inc
sub
xlat
inc
test
test
cmp
in
ss
fs
sbb
jbe
fstpl
imul
mov
or
xor
nop
xchg
movsl
sub
cmp
imul
test
cld
mov
cmc
cmp
xchg
pushf
ret
fs
jno
add
add
adc
adcb
push
cltd
mov
and
inc
mov
subl
xor
mov
repnz
loopne
dec
push
cmpl
push
sbb
stc
std
xlat
mov
push
push
cs
test
in
pop
in
int
sahf
lock
fmulp
incl
xor
lods
jnp
loope
icebp
push
mov
xchg
pop
std
mov
icebp
addr16
and
aas
inc
dec
push
or
lods
rolb
cld
outsb
dec
jae
cltd
es
cwtl
jnp
fidivrs
jg
jae
xchg
mov
push
imul
dec
xchg
sbb
sbb
adc
sub
push
std
iret
dec
shrl
mov
jne
je
aam
mov
rcl
dec
mov
mov
or
fstpl
jg
outsb
jnp
test
or
les
add
push
xchg
add
push
cmc
jbe
lods
dec
mov
sarb
arpl
pushf
sarb
inc
jle
pop
adc
aam
std
andl
and
pusha
or
inc
push
sub
lret
and
cmp
dec
sub
movsl
mov
ret
lds
dec
imul
jns
arpl
jno
daa
fisttpl
enter
enter
inc
roll
sbb
jg
xchg
and
jl
cmp
or
fistpll
jb
push
mov
adc
jo
scas
fcomi
mov
sbb
jmp
sbb
out
xor
push
pop
jmp
push
jno
ljmp
call
adc
xor
mov
leave
lret
dec
jmp
fimuls
pop
mov
xchg
pop
fs
enter
pop
lret
in
pop
dec
xlat
std
xor
add
sti
push
mov
loope
bound
popf
add
imul
cmp
ljmp
xor
mull
xchg
das
clc
mov
push
add
xor
pop
adc
push
xor
push
xor
dec
je
mov
push
jnp
xor
scas
leave
int3
lahf
jns
sub
popf
cltd
outsl
pop
xchg
mov
imul
int3
adc
pop
push
pop
mov
mov
xor
or
jge
mov
mov
fwait
cmp
add
push
push
cli
jne
or
dec
sbb
sbb
dec
rclb
cmc
mov
subb
ja
mov
out
cmpsl
cwtl
pop
sbb
inc
incl
repnz
cmp
pop
fsubr
xor
mov
xchg
mov
outsl
out
inc
test
dec
fbld
sbb
adc
dec
enter
stos
mov
cmp
in
xchg
loop
mov
sbb
scas
xchg
pop
mov
loope
inc
adc
sub
mov
int3
add
lret
outsl
jmp
or
in
cs
gs
mov
rorl
jge
repz
cmp
mov
dec
scas
aam
sbb
leave
inc
call
add
aad
xchg
push
or
pop
jg
stos
pop
cltd
mov
iret
adc
imul
push
ss
lea
jg
loop
in
dec
cmpsb
je
das
icebp
ret
sub
xor
add
out
testb
inc
out
cmpsb
jno
dec
sbb
iret
mov
pushf
test
or
aaa
pop
dec
iret
repz
cmp
add
or
xchg
inc
xor
pslld
push
mov
out
mov
sub
mov
je
cmp
mov
mov
push
scas
jno
xchg
nop
mov
jg
cmc
xchg
fdivr
xchg
pop
mov
out
inc
xchg
ljmp
cmpsb
xchg
jo
mov
xchg
icebp
inc
xchg
cs
idiv
loop
lds
mov
jmp
sbb
or
mov
mov
js
pushf
negl
jecxz
pop
scas
fcmove
mov
daa
sub
outsb
icebp
subb
or
sub
dec
fistpl
rcrl
stos
outsl
add
and
mov
roll
arpl
neg
push
pop
jmp
sbb
cld
mov
adc
jbe
xchg
mov
jle
test
iret
rcrb
repz
mov
movb
mov
out
testl
push
or
inc
fistpl
shrb
lock
das
and
sub
cwtl
cld
push
inc
subl
mov
mov
lds
aad
cmp
cmp
and
sbb
movsl
insb
push
xor
xorl
loopne
orl
mov
adcb
cld
nop
mov
mov
push
scas
out
mov
xchg
cmpb
add
dec
xchg
pop
scas
lcall
int
jb
push
push
xchg
jo
cmp
and
test
or
pusha
push
sub
xchg
cmp
inc
nop
xor
or
xor
inc
xchg
lds
aaa
icebp
cltd
jg
cs
mull
repz
sbb
xchg
imul
std
insb
sbb
scas
jle
adc
dec
dec
mov
mov
push
add
arpl
xor
cmc
aad
and
mov
dec
xchg
xchg
mov
mov
or
jge
and
push
mov
add
add
mov
ret
dec
mov
adc
mov
loop
inc
dec
jnp
shlb
call
fs
out
jns
jp
push
fs
inc
pushl
mov
ret
or
insb
xchg
mov
jne
mov
xchg
sub
repnz
push
paddsw
sub
cmpsl
call
notl
lret
ljmp
xor
sbb
add
and
xor
iret
arpl
popf
or
arpl
add
cmpsl
rclb
ficomps
inc
mov
pushf
fiadds
pop
sbb
add
push
fidivrs
ss
push
xor
cmpsl
lcall
pmaxub
cmp
push
sbb
mov
enter
daa
imul
rcrl
xor
pop
scas
leave
out
push
mov
dec
sbb
sahf
or
push
sub
aas
mov
xor
and
jle
enter
or
pop
pop
stos
rcrl
popa
rorb
lea
test
shrl
jg
in
sbb
mov
and
sub
inc
mov
mov
inc
jnp
call
ss
dec
push
std
adc
sbb
les
into
mov
aad
push
sti
add
pop
loope
dec
xor
arpl
roll
call
cmpb
cmp
mov
in
jbe
cmp
mov
stos
xchg
xchg
ljmp
lods
iret
dec
sbb
inc
jns
inc
push
cltd
popa
xchg
cs
popa
outsb
xchg
shl
ds
sahf
sub
test
dec
ret
int
pop
and
lcall
adc
daa
outsb
fadds
mov
incb
jo
add
add
sbb
sub
std
or
lods
dec
movsl
lret
leave
sub
jp
mov
sahf
std
movsl
fnstcw
lahf
jae
aad
jne
mov
rcll
mov
lods
add
or
xor
minps
adc
add
xchg
addr16
pop
jecxz
out
aam
inc
cs
into
or
and
jmp
cs
inc
mov
fldcw
negb
adc
xchg
mov
cmp
das
pop
in
jnp
sbb
daa
in
mov
into
and
xor
xor
pop
dec
lods
movsb
add
hlt
mov
adc
add
pop
test
lret
fs
stc
or
pop
mov
mov
shlb
sbb
rcl
lahf
stos
push
push
jae
inc
imul
add
mov
dec
mov
lret
pop
add
fidivs
push
inc
inc
xchg
pop
push
es
add
popf
ret
test
enter
or
lods
or
push
enter
data16
clc
insb
jecxz
rol
test
xorb
push
xlat
sub
test
nop
mov
rcrl
test
push
out
loopne
sbb
sub
es
lods
pop
mul
mov
in
inc
jmp
repz
and
std
or
and
pop
clc
push
jl
adc
mov
hlt
xorl
inc
outsb
xlat
jno
mov
iret
call
test
mov
push
test
xchg
add
lret
aam
in
das
cmp
push
cwtl
lret
xchg
mov
sbb
xor
nop
andb
and
ds
aaa
mov
cwtl
xchg
add
je
push
pop
mov
andl
mov
movsb
jo
xchg
test
mov
and
inc
cmp
sub
negl
add
mov
inc
outsb
dec
pop
fnsave
ljmp
dec
lahf
aam
test
cs
xchg
mov
and
mov
int3
mov
cmp
lret
or
dec
ljmp
testb
push
fdivrs
push
rcrb
add
lret
lock
popa
cmp
mov
lret
mov
divb
xor
and
inc
movsl
lds
adc
or
sahf
das
arpl
mov
cmp
pop
pop
lds
lea
jp
xor
shlb
repnz
inc
int
leave
icebp
scas
imul
mov
repnz
sub
inc
lahf
mov
sti
adc
outsl
dec
ja
mov
cmp
jns
xor
dec
add
orb
aad
mov
sbb
mov
sub
stc
xchg
and
pop
add
aas
das
inc
lret
sti
test
clc
jns
mov
mov
xor
arpl
pop
jns
aam
sbb
xchg
lea
repz
divps
inc
dec
push
mov
imul
popa
iret
es
pop
test
aam
cmp
leave
inc
in
push
dec
add
mov
jae
push
adc
in
xor
scas
sub
jecxz,pn
mov
std
sbb
push
add
pop
jne
mov
adc
jle
mov
xor
mov
call
sub
jmp
or
mov
or
inc
jns
sbb
push
mov
adc
inc
shrl
mov
dec
aad
addr16
mov
cmpsl
push
std
jbe
hlt
lods
and
call
push
pushf
cmp
cmp
scas
xor
mov
add
jg
in
mov
push
sbb
scas
outsl
cld
idivl
lahf
mov
imul
jp
and
andb
das
negb
xor
mov
add
cmp
mov
pop
test
add
inc
inc
mov
jle
insb
pop
mov
jne
outsb
sbb
xchg
xor
aad
xor
shl
rolb
jbe
mov
dec
or
add
stos
jno
dec
loope
sbb
cli
ud0
xchg
lods
jns
sbb
mov
int3
xor
ret
push
and
mov
and
out
inc
lret
iret
psrlq
dec
push
rorl
jo,pt
mov
push
jg
mov
jecxz
data16
jb
neg
pop
mov
std
inc
dec
mov
pushf
insl
out
pop
sbb
popa
clc
nop
pop
mov
jno
cmp
mov
or
aad
or
fmuls
mov
push
jo
pop
xchg
ja
push
bound
outsl
imul
adc
adc
mov
loop
arpl
dec
cmp
insb
bound
cmp
sbb
inc
jo
popf
nop
xchg
mov
in
xchg
les
sbb
add
rorl
sti
mov
adc
xchg
push
in
mov
mov
int
push
mov
movsl
push
inc
iret
inc
stc
xor
test
js
push
outsb
add
imul
adc
xor
push
cmpsl
iret
or
pop
rorb
in
jo
mov
aas
mov
adc
pusha
xchg
ds
les
test
dec
hlt
xchg
or
jecxz
cs
mov
sbb
xlat
and
ljmp
pmullw
loop
ds
inc
ret
fstl
mov
xchg
cmovns
clc
leave
arpl
dec
mov
roll
cld
pop
testb
test
lret
xchg
xor
pop
xor
pushf
cltd
inc
fwait
mov
les
mov
mov
out
lea
sbbb
repnz
or
in
out
dec
scas
dec
cwtl
sub
mov
pop
mov
aaa
mov
sub
test
lcall
adc
mov
inc
jg
xor
out
aam
out
scas
and
sahf
imul
loop
sti
pop
jae
xchg
cmp
cld
lds
insl
clc
jge
add
or
pop
pop
aaa
aaa
cmp
mov
jnp
jp
adc
xchg
mov
shlb
test
sub
pushf
adc
xlat
sub
or
js
add
jbe
pop
push
mov
mov
cmpsb
stos
lods
push
scas
sub
mov
shl
add
scas
stos
fsub
or
repz
mov
and
bound
add
xchg
mov
xchg
dec
dec
push
push
testb
xchg
ds
dec
mov
fstpt
xor
in
xor
jmp
cwtl
inc
sbb
jmp
outsl
ja
loop
xlat
mov
test
add
invd
inc
pop
push
mov
jns
pop
es
aam
into
xlat
mov
mov
shrl
dec
cltd
sbb
cli
int3
fcomps
push
fdivp
xchg
test
mov
or
lahf
and
xchg
mov
add
xor
fsubl
and
xchg
mov
add
jecxz
sub
rcll
pop
inc
pop
lea
fwait
xchg
jmp
xchg
pusha
add
cmc
mov
mov
loope
movsl
xchg
mov
gs
mull
data16
jle
pop
mov
shlb
rol
pop
ficoml
faddl
lods
pop
sub
outsl
jge
mov
addr16
push
jmp
scas
fisttpll
cld
sub
adc
adc
inc
fsubs
jbe
sub
mov
push
add
inc
or
pop
sarl
das
aaa
mov
pop
xorl
or
lods
add
and
sub
mov
aam
sbb
cmovno
sub
adc
mov
fsubp
lods
leave
dec
mov
jnp
jns
mov
jmp
pushf
xchg
adc
or
push
add
sbb
sub
mov
pop
and
mov
mov
sub
jno
test
in
fcmovbe
pop
insb
or
add
mov
adc
adcl
aaa
rorb
cwtl
xor
fnstenv
push
pusha
adc
adc
cmc
and
daa
outsb
sarl
jae
dec
mov
movsl
pop
arpl
insl
mov
leave
jne
or
fists
xchg
sbb
xor
dec
cmpsl
iret
aam
in
icebp
add
notb
stc
addr16
push
movsl
out
loopne
jns
daa
orb
scas
xchg
out
ljmp
ret
mov
test
pop
iret
and
sub
pop
sbb
mov
adc
dec
ret
and
testb
xchg
push
add
sbb
mov
cltd
adc
sub
in
pop
mov
xchg
mov
das
add
fs
ja
fsubl
pop
cmpb
sbb
pop
dec
pop
mov
jae
add
and
out
pop
insb
push
stc
ret
lock
pop
sbb
insb
movsl
pop
add
dec
jl
dec
clc
sbb
push
sbb
and
or
cmpsl
inc
scas
cmpsl
lret
nop
xchg
push
cmpl
out
stos
xor
xchg
cli
mov
inc
push
cmp
lcall
xor
dec
xchg
test
ret
push
arpl
sub
push
jecxz
pop
aas
cmp
sarb
lahf
mov
dec
cmp
das
adc
jb
fsincos
xlat
data16
shlb
push
cmp
jmp
sbb
add
xor
loope
cmp
push
mov
jo
inc
jb
push
loopne
fcomps
dec
test
mov
lods
loopne
cwtl
sbb
cmp
popa
dec
test
mov
push
dec
rorb
lea
pop
fnstenv
pop
enter
imul
add
sub
imul
daa
add
mov
sarl
ja
mov
or
ret
mov
stc
imul
icebp
mov
jbe
dec
ja
xlat
lahf
jnp
cmp
adc
add
sub
jecxz
adc
xchg
mov
push
pop
hlt
shlb
mov
icebp
dec
pusha
jno
cwtl
out
pop
mov
push
xchg
and
and
xor
pop
sbb
dec
ret
stos
add
sbb
test
dec
shlb
xchg
jae
and
cmp
cld
adc
jg
cmc
and
call
sbb
ss
mov
mov
es
bound
inc
xor
lods
jg
xor
mov
cmp
xor
es
push
push
xchg
push
mov
xchg
int3
test
jnp
push
cmc
xor
sub
out
push
inc
test
sti
outsb
xor
push
xchg
notl
fiaddl
aas
pusha
lock
add
pop
mov
ss
mov
mov
and
insb
or
ret
movsl
repz
lds
push
cmp
es
out
imul
jmp
mov
leave
jo
ss
jae
or
inc
jmp
pop
sbb
dec
in
xor
clc
sbb
adc
jg
lahf
xor
pop
pop
clc
add
subl
les
inc
js
pop
enter
std
mov
mov
pmulhuw
in
dec
les
push
cmp
xor
les
sub
insb
aam
mov
dec
push
fwait
or
push
sub
imul
ret
les
rclb
sbb
sarb
or
fs
lods
dec
pop
insb
in
pop
repnz
int3
stc
fcomps
pop
and
clc
out
mov
sub
or
aad
shl
pop
pushf
adc
and
and
ja
cmp
lods
out
test
arpl
mov
rorb
es
xchg
push
cmpsl
sbb
jecxz
pop
in
add
xchg
js
pop
imul
xchg
out
lods
mov
loopne
and
movsl
mov
mov
push
mov
fcmovne
std
iret
adc
jnp
or
xchg
xlat
xor
insb
push
out
lcall
dec
imul
push
dec
jge
pop
mov
cmp
adc
dec
insl
mov
lds
mov
pop
dec
sub
roll
loop
jb
pop
cmp
gs
imul
insl
daa
cld
push
mov
cld
imul
push
int3
inc
add
lret
mov
dec
xor
lock
lret
lret
inc
dec
mov
xchg
dec
adc
pop
rorl
movsb
lret
pop
ret
mov
mov
cld
pop
push
jg
push
fisttps
cmp
out
jecxz
pop
xchg
in
push
lods
adc
push
insl
sub
lcall
xchg
inc
lock
xor
in
cmp
insl
sahf
push
aas
push
dec
gs
lea
adc
adc
loope
std
enter
sahf
icebp
inc
mov
push
cmp
sahf
jae
fimuls
rcrl
fimuls
dec
out
pop
adc
cmp
std
jge
sbb
push
xor
jbe
out
dec
rcll
xchg
lcall
sub
or
and
cmp
push
mov
and
push
and
add
pop
icebp
out
fmull
rcrl
dec
inc
jnp
fidivrl
xchg
and
xchg
call
rorb
adc
push
out
gs
lcall
fstps
cmc
xor
lods
and
fwait
mov
gs
js
movb
adc
sbb
popa
mov
xor
dec
sti
and
jp
inc
shr
add
lods
add
sahf
lret
out
pop
je
outsb
lret
add
sbb
mov
out
inc
sub
idivb
xor
aas
imul
imul
rcll
pop
adc
jle
cmp
in
sahf
adc
icebp
jae
loopne
loope
out
mov
loop
sahf
mov
add
arpl
mov
mov
xchg
adc
inc
mov
insb
push
outsl
xchg
call
ret
addb
js
sub
mov
scas
lods
ficoms
imul
leave
dec
cltd
xorb
popf
mov
divb
lods
push
inc
rcrl
and
pop
scas
cwtl
pop
int
push
loope
mov
or
adc
rorb
push
jmp
mov
push
mov
out
leave
iret
lret
push
add
mov
sbb
loope
stos
js
leave
jne
ret
subb
test
add
in
loop
and
iret
fxch
aad
or
push
cltd
jle
cld
adc
jg
popa
inc
and
jecxz
in
and
mov
cmp
popa
push
mov
mov
xor
jb
les
rol
sbb
bnd
pushf
inc
mov
es
scas
bound
sub
or
sbb
cmp
insb
cmp
nop
mov
push
jle
out
test
aam
outsl
sub
cmp
data16
faddl
addr16
mov
fsub
and
or
mov
lret
popf
movsb
push
sbb
jnp
ss
mov
adc
pop
in
push
pop
sbb
in
fdivrl
xor
pop
xchg
rorb
push
mov
sub
addb
aas
xchg
pop
mov
inc
pop
call
push
pusha
ja
lcall
and
push
daa
sbb
cli
out
pop
xor
iret
xchg
outsb
pop
outsl
mov
dec
call
sub
cmp
arpl
lret
scas
jns
and
and
popa
xor
sub
stc
jae
pop
push
push
lds
add
add
or
mov
loopne
sub
cmp
cmpsb
pop
fsubr
inc
mov
sti
mov
es
rcrb
pushf
imul
ds
or
das
or
imul
lods
jne
bound
arpl
xchg
xchg
xchg
out
sub
or
sbb
sbb
add
cli
add
cmp
iret
repz
adc
es
mov
adc
shlb
jge
xchg
fmuls
mov
jmp
repz
das
pop
popf
ljmp
in
pop
lods
test
aad
adc
je
adc
pop
mov
test
loop
sub
sti
fdivrs
mov
fbld
push
ret
cltd
adc
inc
push
sbb
int3
or
xchg
test
sub
add
pop
xchg
inc
dec
ss
into
pop
cmp
dec
stos
cld
cmpsl
xchg
add
shlb
mov
lidtl
loope
icebp
mov
inc
mov
dec
mov
in
jae
mov
jmp
cmc
imul
fs
cltd
cli
jmp
lods
adc
movl
mov
or
push
or
lret
mov
and
aad
jae
test
mov
or
fs
add
jge
in
sub
mov
push
fs
pop
cmp
mov
jno
mov
jb
fcmove
insl
mov
push
out
inc
clc
sbb
mov
cmp
mov
mov
inc
cmp
ds
add
lds
sar
pop
jo
fstps
popa
jno
and
adc
mov
bound
mov
shlb
pop
invd
cmp
test
in
mov
jp
scas
cli
cmc
mov
inc
adc
xor
fst
sub
adc
push
adc
mov
iret
cmp
pop
les
ljmp
cmp
movsl
jae
jge
ljmp
fstp
and
mov
lods
mov
jnp
push
shr
xchg
inc
sete
inc
je
push
xlat
insl
jg
test
rep
pop
pop
pushf
push
mov
pop
mov
mov
push
cmp
mov
mov
cmpsb
pop
mov
inc
dec
cwtl
jp
jg
and
aaa
popa
stos
pop
ss
les
or
sbb
lret
shll
movsl
jnp
xor
sbb
aam
mov
repnz
mov
mov
inc
mov
add
dec
and
imul
pushf
add
or
call
das
jne
outsb
pop
sub
sbb
xchg
ljmp
test
daa
scas
push
es
add
jle
shrl
push
push
fs
lods
jnp
fsubr
aas
jle
sbb
and
test
ds
lret
mov
out
cmp
movsl
push
add
ret
insl
movsb
lds
push
mov
lds
push
cmc
js
in
leave
lods
out
push
dec
dec
xchg
adc
scas
pop
jae
stc
add
sbb
mov
mov
sahf
mov
mov
mov
and
inc
les
or
leave
data16
sti
fsubrl
lcall
and
pop
mov
cmpsb
out
xlat
jle
sub
fs
mov
jp
and
dec
or
inc
test
rol
inc
fisttpl
cmpsl
lods
jne
inc
adc
in
sbb
mov
inc
mov
xchg
xor
dec
xchg
movsb
gs
ds
test
mov
add
in
out
scas
cmp
xchg
ja
add
daa
in
aam
aam
xchg
pop
ja
enter
int
pop
imul
mov
clc
inc
fimull
adc
sbb
mov
mov
pop
fsub
and
fwait
insl
outsb
fcoms
or
fnstenv
mov
inc
imul
movsl
cwtl
or
scas
cli
cwtl
fs
addb
dec
loope
mov
dec
lea
push
popa
insb
inc
popa
inc
addr16
notl
mov
mov
dec
and
insb
out
test
adc
movsl
lret
dec
cmpsb
shll
mov
ret
mov
xlat
and
pop
jne
insl
inc
inc
mov
pop
fisttpll
cwtl
jne
cmp
or
repnz
push
imul
aad
rorl
cmpsb
loopne
stos
jo
je
mov
and
or
aaa
push
shll
mov
mov
xchg
mov
lods
mov
testb
hlt
and
cmpsb
xlat
push
pushf
mov
push
mov
mov
sub
fnsave
pop
ficoms
fnstsw
fbstp
rol
in
push
mov
daa
loope
pop
stc
mov
xor
xchg
mov
add
cmp
neg
pop
repz
jno
pop
hlt
shll
cmpb
out
out
or
adc
repz
or
subb
inc
cmpsl
rcll
into
mov
into
cli
test
mov
sub
mov
dec
add
mov
cs
ficoms
or
in
sarb
pop
pushf
mov
in
test
sbb
lods
xor
jns,pt
jp
sbb
sub
scas
subb
cwtl
test
rol
fisubrl
repnz
adc
mov
lcall
jne
rcrl
test
lsl
shrb
cmc
iret
pop
cmp
stos
pop
mov
lret
loope
movsb
ficoml
xchg
inc
mov
aaa
rcrb
inc
rcl
daa
stos
cmp
and
xchg
mov
repnz
push
cmp
into
inc
push
cwtl
xor
xor
mov
stos
stos
inc
and
inc
pop
imul
and
mov
and
test
in
mov
test
das
mov
imul
add
xor
xor
ja
mov
xor
push
ds
xchg
int3
jns
inc
mov
rorb
jg
mov
scas
hlt
rclb
mov
pop
fisubrs
enter
mov
xchg
daa
push
pop
fnsave
sbb
cmpsl
cmp
popa
push
and
xor
jmp
pop
call
sub
or
add
sub
shl
in
ret
lods
lea
push
lret
jmp
scas
xchg
cmp
aas
clc
mov
mov
jne
imul
xor
outsl
jmp
scas
adc
sbb
xchg
stos
mov
repz
ljmp
sub
cmp
popf
fdivrl
xchg
mov
test
xchg
inc
pop
lret
in
cmp
loopne
repnz
pop
mov
mov
icebp
rcrb
xchg
fs
and
xor
pop
out
jb
push
xchg
xchg
bound
lds
loopne
test
inc
xchg
lods
daa
pushf
push
mov
popf
fwait
dec
mov
repnz
out
lods
mov
into
ds
xchg
dec
push
dec
lods
lods
push
iret
mov
xlat
mov
pop
into
shlb
aaa
out
mov
mov
js
fld1
enter
fimull
fcmovnb
mov
call
fwait
push
adc
sbb
outsl
cmp
xchg
inc
xor
shrb
xchg
xor
sub
sub
sahf
mov
mov
inc
or
jg
mov
out
push
xchg
outsb
and
in
pop
mov
dec
mov
jg
test
cmp
gs
cli
or
ss
sub
fs
inc
fcomps
add
leave
mov
aad
pop
ljmp
cwtl
or
pop
mov
mov
cmpsb
addr16
add
out
sbb
mov
mov
adc
xchg
inc
lret
mov
in
sahf
xchg
adc
push
and
inc
push
jp
in
loopne
sahf
push
arpl
dec
adc
mov
and
ror
test
dec
jmp
xor
xchg
stos
sub
and
mov
out
xor
cli
push
and
cmc
inc
push
mov
xchg
mov
inc
push
sub
pop
cmpsl
xchg
cltd
ds
add
out
push
push
fsubrs
rcrl
imul
das
adc
jb
and
jp
push
mov
sub
mov
ret
cmp
pop
in
sub
imul
mov
add
jno
jne
inc
ljmp
aaa
in
xchg
inc
dec
lcall
xor
ret
and
xchg
int3
pushf
scas
mov
jmp
loopne
lret
mov
mov
ds
mov
out
mov
cld
sbb
mov
cmc
popf
imul
push
outsl
adc
jecxz
or
inc
sahf
loop
daa
push
cwtl
leave
mov
add
and
inc
pushf
xchg
pminub
cs
jp
dec
mov
sub
dec
rcr
movsb
pop
hlt
insb
and
xor
das
pop
cmp
sub
dec
push
shrb
repnz
push
movsb
fsubrs
xchg
insl
mov
aaa
sahf
es
outsl
divl
ret
jne
shlb
insb
pop
push
adc
xchg
inc
leave
mov
shlb
mov
mov
mov
pop
add
mov
sub
inc
add
mov
push
dec
js
mov
out
fiaddl
mov
cld
addr16
push
repnz
add
or
rcr
inc
mov
mov
sbb
dec
and
in
mov
cmp
dec
pop
stos
loop
xor
negb
and
rcrl
sti
mov
fcomi
sub
ja
adc
jnp
mov
std
stos
push
push
pop
aas
imul
adc
sub
hlt
mov
sbb
test
lods
mov
or
mov
and
mov
inc
inc
cmpsl
sub
clc
inc
mov
clc
in
sub
lods
ds
out
data16
lods
push
lock
call
addr16
push
mov
roll
cmp
mov
and
gs
mov
inc
push
push
jne
push
pop
cmpl
or
test
cmc
xor
pushf
xor
and
lock
call
inc
jnp
pop
loopne
or
inc
call
lret
mov
xor
pop
testl
setae
sarl
movnti
inc
mov
lods
sbbl
or
movsb
adc
loope
dec
sbb
xor
fidivrl
pop
ret
mov
scas
jns
rorl
mov
fstpt
scas
xchg
ret
xchg
out
dec
clc
sbb
cwtl
xor
scas
popl
mov
pop
sbb
mov
pop
aam
dec
add
test
jle,pn
pop
mov
js
dec
jbe
cltd
lock
jae
inc
push
mov
in
sub
push
movsl
sbb
jne
or
fwait
or
mov
cmc
stc
lock
stc
out
mov
mov
aas
popa
int3
xchg
jns
mov
in
je
mov
outsl
in
scas
out
sbb
push
xchg
push
mov
dec
dec
shrb
sub
or
fimuls
ret
and
xor
mov
lock
sbb
add
pmullw
cltd
push
daa
push
lret
jge
adc
std
mov
fiadds
jns
push
cmpsb
int
clc
xchg
mov
popf
negl
jl,pt
pop
cs
fwait
inc
sbb
and
pop
int
push
mov
test
std
stos
dec
insl
stc
inc
push
mov
sub
inc
mov
test
xchg
mov
jle
add
fisttpl
mov
sub
lahf
adcl
xor
arpl
mov
gs
adc
cmp
repnz
fildll
inc
sbb
cltd
mov
mov
mov
and
je
add
int
mov
scas
mov
data16
sub
mov
clc
dec
xchg
imul
cmp
out
incl
shlb
pop
ss
mov
sbb
push
push
pop
rorb
cmpsl
dec
cmp
mov
xchg
mov
sbb
cmp
clc
jle,pt
fiaddl
or
sti
mov
add
jne
jae
jo
aaa
mov
fs
outsb
sub
add
adc
cld
jb
rorl
xchg
xchg
fbstp
push
inc
sbb
cwtl
std
inc
or
mov
xorb
pop
jmp
push
popa
sbb
mov
imul
cmp
push
jecxz
pop
das
xchg
adc
pop
icebp
insb
cs
shlb
ja
stc
cs
call
ds
insb
jl,pt
ljmp
addr16
xor
mov
vrcpps
aas
mov
imul
add
lea
cmp
mov
xchg
aad
stos
popa
dec
movsl
jno
and
scas
add
xor
sub
dec
scas
mov
cmpl
sub
mov
adc
pusha
sub
int
push
dec
loope
ror
dec
sbb
gs
and
shll
xor
in
in
into
arpl
push
dec
pop
adc
ljmp
fmuls
mov
mov
dec
add
dec
cmp
outsb
sbb
jmp
xor
fidivs
cmpsb
xor
sub
xchg
inc
lods
cmc
fdivrs
xor
mov
push
loope
xchg
shlb
cmp
clc
les
adc
mov
xchg
sub
fnstenv
stos
adcb
sbb
imull
fadds
in
cli
addr16
adc
lods
das
jmp
and
sub
das
test
icebp
lahf
out
imul
jl
mov
sbb
pushf
adc
enter
scas
into
push
jmp
mov
push
mov
mov
inc
stos
sub
pop
mov
and
mov
fcmovnu
sub
sbb
jle
xchg
jae
sub
sub
and
or
cwtl
adc
and
add
or
mov
stc
sbb
xchg
and
lds
sti
inc
inc
jns
aam
push
cli
sbb
fwait
or
das
mov
js
xchg
lea
cmp
and
in
call
repnz
sub
push
xor
and
xor
dec
xor
fwait
inc
or
push
cmpsl
cmp
pop
fsubs
sub
aaa
mov
cli
sti
ret
pop
icebp
sub
lods
jb
bound
pop
xchg
pop
cmc
xchg
aaa
sub
orl
cltd
mov
pop
adc
push
lret
adc
mov
bound
outsl
adc
stc
mov
fidivl
or
ljmp
repnz
lahf
mov
jle
xor
lcall
pop
test
cs
mov
jmp
lods
fiadds
dec
jnp
lock
ja
cmp
cltd
decb
mov
and
daa
jle
or
cmp
pushf
adc
fdivrp
cmp
sbb
inc
orl
jo
dec
mov
cmp
push
test
inc
gs
pushf
pushf
mov
add
movsl
mov
xchg
outsb
cmpsb
lret
loopne
or
fwait
adc
mov
pop
loope
push
ret
scas
and
subl
jo
je
jp
insb
aam
pop
rcll
xor
inc
xchg
stos
add
push
js
aad
stc
sub
aaa
and
ja
mov
xchg
pop
xchg
fwait
cs
pop
xchg
pusha
int3
mov
inc
xor
lock
xor
pop
mov
not
cmp
js
add
sahf
test
cwtl
test
test
mov
adc
iret
xor
pop
outsb
je
mov
or
sarl
xchg
fwait
pop
test
sar
movsl
pop
inc
dec
cld
or
cli
xor
in
and
cmpsb
sbb
push
shl
jnp
push
sub
imul
adc
jae
jmp
xchg
mov
sub
cmp
adc
lea
ja
lods
dec
sub
pusha
xor
add
rcrl
sahf
loopne
sub
cmp
mov
cmc
push
adc
dec
push
repnz
stos
dec
movsb
call
adc
movsl
fdivrl
sub
jnp
insl
dec
out
ds
aaa
out
and
sti
nop
lods
out
pop
sub
xor
loopne
ret
push
scas
xchg
pop
clc
and
gs
inc
hlt
mov
insl
adc
call
ss
mov
jo
data16
mov
popf
aad
imul
and
jno
outsb
imul
jae
daa
cmp
daa
or
popa
dec
lcall
xchg
mull
xor
fucomip
popa
stos
jl
mov
std
sbb
fisttpll
pop
int
and
pop
decb
mov
cs
mov
and
xorb
inc
and
adc
cwtl
aad
jb
xchg
mov
mov
popa
push
scas
shrl
jg
and
sub
push
lea
pop
dec
cmp
test
loop
iret
data16
dec
cmc
push
dec
or
or
cmp
sbb
iret
jno
inc
push
add
in
mov
aam
rol
mov
dec
inc
mov
inc
dec
ljmp
stos
mov
push
pusha
mov
sbb
call
jp
shrb
fcompl
xchg
inc
mov
movsb
adcl
mov
xchg
sbb
push
mov
fsub
cmc
mov
xchg
dec
push
repnz
sbb
and
inc
in
dec
sbb
sarb
sbb
andb
push
dec
jb
cld
dec
loop
mov
pop
lds
cmpsb
and
sarl
xor
data16
loopne
test
mov
lea
add
dec
pop
cld
or
testb
in
mov
push
aad
scas
sbb
xlat
mov
adc
mov
sahf
mov
inc
and
mov
dec
add
lgdtl
hlt
loopne
outsl
int3
aad
nop
cmp
mov
inc
adcb
divb
mov
xor
clc
cld
ds
cli
mov
or
or
ret
or
data16
fistpll
sarl
mov
je
add
call
mov
cmpsl
sbbb
imul
add
mov
dec
int
filds
ds
cmp
push
dec
pop
fstpt
jnp
jnp
inc
test
or
sbb
dec
jb
dec
in
jo
push
fdivr
mov
lret
push
push
mov
movl
mov
adc
cmc
int
adc
pushf
and
push
mov
fidivrs
pop
int3
fistl
xchg
rcll
mov
cli
lret
in
loop
rcrl
push
xchg
ja
loopne
mov
jae
push
cwtl
mov
sbb
ljmp
jmp
jmp
scas
dec
jb
pop
xchg
insb
cld
shlb
xor
mov
pop
sub
das
push
push
outsl
sbbb
add
lock
fisubl
loopne
int3
xlat
popfw
cmp
ficompl
stos
decb
loope
push
stc
icebp
and
hlt
xchg
xchg
lock
lea
pop
dec
mov
fildll
or
out
dec
cmp
scas
cmp
mov
dec
jge
xchg
shrb
sbb
mov
sub
rorl
in
mov
or
mov
pop
andb
orb
ret
push
jbe
out
sub
out
fisttpll
cwtl
cld
cmp
lods
shr
addl
lcall
mov
mov
and
cs
cmp
lret
arpl
mov
xchg
lret
sbb
pop
imul
add
inc
pop
push
inc
cmpl
cmp
xor
adc
shll
add
lret
mov
popa
mov
js
les
mov
ja
dec
inc
jl
adc
push
sbb
ror
sub
repnz
jp
push
stos
les
pop
ret
mov
jnp
repnz
sbb
cmp
mov
sti
shld
jne
mov
xlat
dec
mov
jno
xchg
addl
sub
mov
xchg
inc
xchg
fwait
inc
jo
xor
cmp
cwtl
jo
outsb
adc
push
mov
jnp
lock
pop
sbb
mov
movb
sbb
loope
pop
test
popa
iret
and
call
jle
sub
xchg
movsl
hlt
ds
iret
push
mov
jbe
pushf
sbb
lret
mov
sbb
aaa
mov
cmp
mov
and
aas
sub
cmp
add
inc
mov
push
dec
iret
outsb
stos
xor
cmp
fidivrs
fimull
mov
push
or
movsl
aad
or
xor
or
repz
gs
mov
bound
shr
mov
mov
ljmp
out
bndldx
or
push
pop
xor
pop
jns
movsb
push
sub
jns
enter
cld
shrb
mov
pop
xchg
loop
jb
popf
mov
lahf
adc
mov
scas
cltd
xor
inc
or
out
xchg
mov
cmp
loope
fwait
and
arpl
addr16
popf
adc
pop
xlat
add
aas
cmp
idivl
mov
adc
in
stc
mov
sub
and
scas
mov
inc
bts
cmp
or
lock
xor
flds
sub
dec
scas
sub
pop
sbb
and
inc
std
pop
sub
mov
shll
aam
data16
ret
push
ds
xchg
mov
lret
lret
dec
mov
xchg
adc
bound
sarl
jno
cs
out
js
sti
in
dec
test
and
mov
inc
int
xchg
fisttpl
jmp
aaa
stos
pop
lea
xor
jnp
sub
andl
pop
mov
outsl
sahf
test
xor
xchg
cltd
shll
and
add
arpl
sarb
lahf
inc
lahf
xchg
inc
jge
in
cmp
out
int3
sarb
repz
and
adc
outsb
lods
xchg
jmp
pop
xchg
std
adc
xor
std
mov
inc
into
inc
clc
imulb
mov
add
xlat
jp
cs
test
call
mulb
mov
sarb
sub
mov
sbb
jno
bound
fnsave
cld
jb
sub
xor
fidivrs
lahf
cmc
lods
call
aam
dec
jb
or
in
mov
addl
sbb
jbe
enter
pop
clc
mov
pop
cmpsl
mov
movsb
ficoms
shrb
stos
loopne
dec
jecxz
adc
dec
aam
add
xlat
stos
or
push
test
jnp
jge
cs
mov
pop
enter
out
adcb
add
mov
xchg
or
mov
shlb
add
or
lock
xchg
je
mov
add
adc
or
adc
sbb
ljmp
sbb
pop
or
insl
and
sub
test
stos
pop
sub
clc
cmpsl
xor
sub
ljmp
cs
jg
xorb
sbb
sub
ror
cltd
mov
fistl
mov
jbe
adc
xchg
adc
cld
xchg
out
jbe
jb
lods
cmp
decl
idiv
aam
push
sbb
test
push
ficoms
xor
test
ret
push
push
pop
bound
push
mov
inc
mov
test
mov
push
mov
mov
imul
fwait
int3
push
lods
movsl
add
sub
ror
push
dec
mov
mov
dec
jns
or
mov
test
mov
out
sbb
test
dec
jp
into
movups
cmp
lret
add
xor
scas
adc
ret
test
add
dec
arpl
jl
inc
es
lock
pop
add
and
pop
fimuls
mov
clc
aas
xlat
cs
subb
stc
pop
or
rcl
dec
les
in
inc
and
mov
mov
ds
push
repnz
lods
push
adc
aas
inc
rdmsr
or
sbb
mov
ret
mov
dec
loope
imul
fistps
rcrb
jns
nop
cs
jmp
cli
or
jb
js
cmp
push
ret
out
sarb
pop
or
shll
inc
mov
sbb
and
int
aaa
push
cmc
mov
cmc
adc
push
cltd
or
jb
es
lods
das
push
test
aaa
loopne
mov
jns
or
ljmp
or
xchg
pop
popa
fisubl
mov
jle
pop
cmc
or
cmp
xchg
jnp
add
or
xor
mov
mov
cmp
xor
mov
fst
iret
xchg
mov
pop
in
mov
mov
out
outsb
or
jns
inc
sbb
xor
adc
or
mov
cmp
leave
xchg
push
leave
mov
jno
movsb
dec
push
out
cli
out
jecxz
repnz
xchg
loope
xlat
sub
movsb
cs
mov
mov
push
jmp
cmp
xlat
push
xlat
cmpsb
std
push
mov
dec
pop
lods
mov
and
mov
xor
stc
ljmp
dec
je
inc
nop
xor
pop
fdivrp
test
sbb
ja
in
mov
lahf
xor
orb
addr16
inc
and
sub
sbb
out
jge
xlat
lret
insb
dec
xor
insb
roll
test
outsl
inc
aad
xchg
xor
stc
xor
cmpsb
pop
fcomps
int3
repnz
cmp
sti
push
pushf
pop
and
mov
mov
icebp
jae
mov
xchg
push
cs
xor
lahf
xchg
mov
loop
cmc
inc
movsb
fnsetpm(287
sti
cmp
cmpb
repz
andl
lea
test
adc
call
add
icebp
mov
xchg
add
inc
and
cmp
loopne
gs
aaa
and
aad
pop
sub
mov
xchg
pop
xchg
fisubrs
mov
fs
addr16
iret
subb
insb
mov
adc
insl
rorb
jno
pushw
sbb
cmp
stc
pop
inc
mov
dec
sti
hlt
lds
sbb
mov
cmc
ja
sub
mov
and
popf
test
mov
jns
mov
mov
add
xor
aaa
clc
dec
mov
cwtl
sub
rcl
andl
data16
jmp
loop
mov
rcr
testb
xchg
idivl
outsb
jnp
pushf
test
xor
push
pop
or
cmc
sub
dec
dec
xchg
inc
sbb
dec
jns
xchg
sti
into
leave
mov
aad
lea
arpl
fwait
cld
cmp
dec
daa
mov
mov
xchg
jb
outsl
pop
or
xlat
xor
in
addr16
sub
roll
in
lds
or
aas
pop
nop
cmp
nop
sub
jnp
mov
stc
xchg
dec
int3
pop
adcl
cmp
dec
mov
mov
cmp
popa
out
and
pop
stc
outsl
cmp
mov
add
pop
lds
pop
jb
cmc
scas
xchg
scas
sarl
mov
dec
int3
int3
sbb
add
shll
or
push
xlat
pop
sbbl
stc
aam
test
push
cmp
fcompl
es
je
push
xchg
inc
mov
sub
and
xor
or
mov
push
adcb
mov
push
mov
dec
mov
dec
jmp
out
cmp
push
inc
xor
or
andl
cmp
cs
sub
out
shlb
inc
ret
insb
and
or
popf
jnp
pop
notl
pop
push
jbe
mov
int
adc
repz
sbb
mov
lea
push
push
data16
xor
insb
aad
repnz
pop
movl
push
ljmp
xchg
inc
jl
faddl
popa
add
repnz
jl
push
mov
sub
add
test
hlt
push
xor
enter
fistl
cmc
mov
cli
mov
frstor
mov
pushf
ds
sar
sbb
inc
pop
push
sbb
stos
sub
andb
je
mov
jno
adc
insl
jnp
sbb
dec
out
in
pop
sub
in
mov
dec
dec
sub
fcmovb
push
push
xor
jns
jle
dec
mov
inc
sbb
lds
mov
sbb
mov
sbb
loopne
dec
jne
inc
pop
out
je
add
pop
dec
clc
jge
push
shr
jl
adc
test
roll
jo
scas
cmpsl
out
cltd
pop
inc
xchg
in
gs
gs
cwtl
stc
pop
shlb
mov
fyl2xp1
jg
dec
sbb
push
arpl
insl
es
mov
notb
inc
mov
loope
lcall
cmp
xchg
cmp
xchg
and
flds
sti
inc
imul
popf
test
imul
int
jge
stos
sbb
jno
pop
mov
dec
push
jge
testb
inc
pop
sarl
xor
push
pushf
test
jne
xchg
shll
xor
sub
inc
jge
call
cmp
mov
movsl
sahf
pop
cmp
fwait
shrb
lret
mov
mov
sub
add
push
int
lock
dec
into
xchg
les
test
test
imul
cltd
adc
or
jecxz
addl
shlb
mov
cmp
mov
dec
in
jnp
cld
orb
jecxz
loop
out
sub
or
out
shll
xor
mov
dec
loope
stc
out
mov
out
negb
lret
rorl
mov
adc
test
xchg
imulb
ret
pop
test
gs
pop
push
in
inc
out
jae
cmp
add
fcomps
or
jae
jp
pop
je
add
shrb
dec
sub
fstps
loop
and
xor
cmpsl
cmp
pop
mov
out
sbb
sti
arpl
jg
xchg
lahf
mov
adc
or
sub
inc
das
ja
and
int3
xor
icebp
adc
xor
dec
dec
sub
ljmp
add
cmp
adc
aas
sti
jle
sbb
push
shrl
ss
fwait
pushf
xchg
mov
shrb
in
fildl
jl
xchg
dec
fidivs
lds
or
jp
std
ret
fnstsw
leave
xor
jo
jmp
jnp
in
ja
mov
into
fldt
jne
xor
shll
push
insl
or
mov
lods
add
ret
or
cmp
cmp
dec
pop
es
sub
ljmp
pop
push
push
fadd
lea
in
loopne
mov
outsl
test
fmuls
push
aam
and
mov
or
cmp
cmpsb
mov
cmp
fcmovne
dec
xor
sbb
add
repnz
cld
xchg
cmp
and
imul
rcl
imul
push
test
mov
fstpt
rorl
clc
push
out
lret
sbb
adc
add
add
insb
int
mov
dec
jns
mov
xchg
ret
daa
jle
hlt
ret
std
scas
push
aam
mov
jae
mov
hlt
icebp
adc
mov
imul
shll
inc
in
aam
jl
inc
and
mov
lcall
cmovle
lcall
icebp
icebp
and
js
xlat
mov
mov
fld
inc
les
outsl
dec
xchg
aam
bound
cmp
je
lock
out
push
xor
xchg
cmp
in
pop
aas
cs
scas
xchg
fs
cmpsl
stos
gs
shrl
jbe
fisubs
inc
pop
pushl
push
dec
int3
and
jecxz
adc
pushf
jle
stos
add
xchg
dec
fidivl
imul
scas
push
hlt
adc
jle
adc
jp
inc
test
jno
xchg
stc
popf
shlb
and
push
mov
cmp
cmp
mov
xchg
pop
repnz
sub
repz
push
repz
in
push
popf
inc
dec
rcrl
sub
nop
dec
xchg
negl
jb
scas
ret
xor
jno
repz
mov
jo
jne
or
jmp
jbe
fimull
cmp
test
movsb
pop
mov
iret
imul
cmp
mov
cmp
lods
shlb
pop
add
inc
pop
aaa
lods
mov
pop
lds
mov
jecxz
jp
xchg
mov
cs
ljmp
pop
sub
add
jp
cmpsl
cmp
and
dec
fsubl
jecxz
pop
stc
xor
dec
jnp
and
push
dec
popa
xchg
inc
sarb
adc
in
sbb
adc
stos
leave
xchg
int3
inc
and
xchg
test
xchg
xchg
nop
adc
pop
subb
pusha
rcrb
pop
ja
lret
xchg
loop
jp
xor
pop
pusha
jecxz
int
add
jbe
mov
dec
mov
mov
test
clc
mov
mov
cmpsb
xchg
inc
jns
daa
mov
mov
arpl
adc
or
fwait
rol
ds
cmp
loop
jle
sbb
fisubl
rcrl
sahf
sbb
or
push
insl
add
cmp
inc
rcll
dec
pop
mov
adc
xlat
test
fistps
arpl
jns
add
sti
fs
add
cld
stos
pop
mov
repz
sub
sahf
test
bound
sti
ja
inc
dec
add
jecxz
icebp
dec
xchg
js
test
mov
xor
sarb
pop
jnp
sub
shll
add
xchg
mov
inc
repz
inc
or
fwait
xchg
mov
orb
push
dec
out
xchg
mov
push
mov
dec
lcall
jns
daa
aaa
mov
aad
xchg
daa
jge
xor
insb
arpl
add
loop
xchg
lret
lea
rcll
adc
cmp
inc
pop
movsl
push
mov
jg
loop
nop
ret
ja
scas
or
stos
inc
adc
pop
and
ljmp
sbb
clc
sti
iret
adc
in
jmp
dec
dec
push
je
cld
nop
jnp
push
xchg
addl
addr16
mov
fildl
mov
mov
or
je
or
aad
stc
xchg
dec
movsb
push
in
pop
mov
bound
out
cmpsb
out
pop
cmp
mov
and
xchg
push
dec
pop
cmp
mov
xor
repz
shlb
sub
mov
movsl
cwtl
sahf
clc
cmp
clc
movsb
pop
push
pusha
jmp
imul
adc
aas
and
scas
mov
add
jno
xor
and
xchg
cmpsl
mov
rclb
sub
les
cmp
aam
jl
push
push
ret
clc
ss
cmpsl
dec
xchg
jno
dec
xchg
mov
testb
lock
lret
push
xchg
lods
sub
arpl
push
adc
movsl
xchg
dec
xor
jp
xor
ljmp
add
pusha
or
xor
lahf
or
fisubrl
ljmp
xor
nop
movsl
fldenv
movsl
aaa
nop
adc
clc
xlat
shrl
xchg
pushf
sbb
xchg
sbb
int
cmpsb
aas
inc
ret
mov
mov
adc
pop
jecxz
pop
and
ljmp
inc
aas
ret
mov
cs
sub
xchg
mov
push
mov
nop
lods
out
mov
push
scas
inc
sahf
shrl
pop
mov
fnstcw
js
dec
push
lods
jbe
push
pop
je
in
mov
mov
cltd
dec
ljmp
js
out
daa
or
sahf
push
test
loop
in
xchg
cltd
inc
pop
jnp
push
xchg
shrb
std
jle
addr16
insb
mov
test
rolb
xor
call
dec
rcrb
xchg
gs
test
mov
jns
pop
sbb
push
icebp
loop
xor
inc
outsl
je
test
cmpsb
sub
aaa
jnp
pop
sbb
shrb
in
sub
xlat
stos
lret
leave
std
jecxz
xor
mov
xor
mov
xlat
dec
xchg
in
rol
inc
icebp
push
inc
add
popf
sbb
adc
jge
ficoml
les
sub
int3
mov
jae
pop
aaa
fists
mov
cmp
inc
push
aad
sbb
sbbb
mov
ret
cltd
lret
dec
push
movsl
adc
jmp
push
mov
sbb
and
data16
hlt
xchg
or
gs
mov
fldt
cmc
mov
cmp
ss
sub
movsb
js
xchg
cmp
fcomi
mov
and
incb
sbb
mov
rcll
mov
popf
lods
sbb
jecxz
dec
ds
mov
roll
or
mov
push
sbb
xchg
dec
lcall
xchg
cmp
push
ror
and
rol
inc
xor
in
add
add
ficompl
int
inc
mov
add
ror
pop
sbb
jno
xor
btr
add
gs
and
lods
sub
adc
sub
sub
les
fld
adc
test
enter
mov
sub
add
jmp
add
mov
ljmp
sbb
add
fistpl
out
push
inc
sbb
sub
dec
je
lds
xchg
fisubrl
or
inc
ficompl
sbb
mov
mov
push
orb
sub
aas
movsl
andl
push
stc
movsb
and
mov
adc
cltd
pop
ja
pop
adc
movb
sbb
push
aaa
xor
cmp
dec
push
cmp
test
or
sbb
fsts
loope
mov
pop
cld
lcall
out
mov
hlt
sarb
rorb
xchg
leave
dec
ljmp
jae
or
icebp
sbb
les
inc
adc
mov
inc
mov
pop
xchg
rcrl
sbb
call
data16
pop
jge
test
cmc
test
pop
push
jbe
jnp
mov
js
sbb
adc
mov
lahf
lret
cmp
mov
ss
aas
cmp
jae
xchg
mov
dec
cmpsb
push
aaa
repz
dec
outsb
mov
inc
in
xchg
int3
loope
sub
mov
sub
pop
cmp
cli
cmpsb
xor
add
mov
out
jle
les
dec
in
cli
or
js
xchg
mov
in
fisubl
popa
sub
cmp
mov
mov
sti
cmp
pushf
ja
jo
test
out
push
scas
stos
aas
add
ss
and
pop
dec
ret
out
dec
es
mov
popf
sbb
addl
mov
fstp
mov
jnp
dec
and
data16
inc
rclb
push
adc
das
loop
pusha
pop
inc
jo
adcl
scas
dec
shll
stc
nop
sbbb
rcll
push
nop
dec
xchg
or
mov
ss
loop
or
add
in
pop
and
xor
xor
cltd
hlt
add
adcl
mov
add
out
out
xchg
xchg
jno
adc
call
cmp
pop
in
fs
aas
or
or
movl
jne
mov
xor
fisttpll
cmpsb
sbb
dec
fdivrl
fisubs
xchg
adc
mov
stos
loope
dec
jns
iret
sub
repz
movsl
fistps
popf
xchg
mov
inc
sbbl
jmp
and
xchg
sub
lods
xchg
inc
arpl
fildl
lahf
sbb
adc
jmp
hlt
dec
add
jle
inc
xor
call
adc
mov
sbb
dec
cmp
gs
int
dec
shl
lds
cmp
aas
loopne
lahf
into
lods
movsl
mov
or
push
adc
dec
or
imul
mov
in
hlt
imul
imul
pop
bound
jne
pop
loop
sub
jae
clc
pop
push
mov
pusha
pop
in
or
mov
test
cmp
mov
lcall
mov
ret
into
fbld
cltd
dec
adc
pop
add
pushf
xor
mov
dec
mov
cltd
clc
sub
iret
mov
mov
jmp
call
adc
in
dec
lds
push
push
mov
popa
dec
scas
xor
lock
xor
push
pop
fidivl
mov
pop
imul
daa
in
jecxz
sbb
and
mov
popf
jle
dec
adc
in
sbb
movsl
dec
fwait
xor
add
and
loope
repz
pop
pop
sbb
jo
adc
pop
outsl
iret
dec
or
test
mov
add
into
inc
shrb
mov
push
xchg
lods
out
xchg
ficomps
cltd
xor
loope
pop
out
fnstsw
adc
cmp
or
fcompl
jecxz
xor
push
sti
push
push
inc
and
cmp
into
mov
xchg
repz
xchg
push
add
js
insb
jb
inc
cmp
imul
xchg
les
loopne
xor
test
push
push
mov
push
rcl
add
push
pop
cmp
test
lea
mov
mov
mov
mov
push
int
mov
aam
stos
stos
push
loope
lea
cmp
push
mov
addb
cld
push
in
jp
int
in
inc
mov
in
mov
and
gs
pop
jbe
adc
xlat
mov
mov
mov
dec
sbb
fcoms
hlt
int
dec
test
shrl
fsubr
inc
jmp
push
mov
aaa
cmp
and
cmp
xor
xchg
loope
pop
cmpsb
push
pop
cmove
dec
lea
cwtl
movsb
int
es
mull
xor
push
fldenv
jbe
pop
jmpw
and
fs
sbb
or
mov
addl
inc
es
jb
push
ds
shll
pop
inc
outsb
cmp
bound
xor
dec
adc
pop
movsb
push
insb
popf
lds
or
stos
pop
pop
pop
loopne
movsb
rolb
add
in
cmpsb
jg
inc
pop
insb
xlat
or
dec
mov
mov
lock
inc
add
xor
lods
add
cli
mov
in
mov
or
cli
mov
xchg
dec
fiaddl
push
cmc
icebp
pusha
or
sub
jbe
xchg
rorl
cld
dec
mov
jl
cmp
push
aaa
insl
lret
jmp
dec
xor
xor
inc
arpl
pop
vmread
mov
adc
lock
je
mov
fs
add
sub
lock
and
into
pop
inc
sti
xlat
add
lret
cs
int
sbb
cld
rorl
fcoml
xchg
mov
mov
sti
cmp
sbb
dec
mov
jmp
ret
subb
push
xor
mov
jnp
pop
sar
push
adcb
pushf
mov
jmp
mov
and
jae
sbb
adc
cld
int3
int
rclb
inc
push
outsb
call
ds
stos
adc
adc
xor
sub
cmp
mov
dec
scas
mov
repnz
sarb
popa
push
pavgw
xor
push
mov
sub
fimuls
ret
scas
pop
add
rcrl
shlb
incb
bound
and
mov
dec
and
lods
adc
mov
ret
scas
int3
push
push
ja
hlt
jle
out
add
pop
xchg
ds
test
xchg
pop
jle
xchg
pop
in
xlat
add
sbb
push
js
pop
xchg
lcall
mov
inc
mov
and
or
idivb
push
sbb
or
pop
int
addb
into
loope
cmp
cmpsl
lahf
stc
shrb
push
mov
xchg
mov
xor
mov
loopne
mov
push
pop
inc
mov
loope
mov
lahf
addr16
cmpsb
or
mov
pushf
xchg
shrb
push
sub
fldenv
or
jo
pop
cs
push
cmpsl
or
sahf
fwait
repz
mov
shrb
je
add
aaa
fstl
mov
xchg
jmp
je
or
push
xchg
mov
ret
cmc
lahf
xor
cmc
jg
xor
pop
push
push
xchg
rorl
shlb
xor
mov
xorl
mov
and
xchg
and
or
scas
clc
or
push
xchg
std
rcrl
add
cmp
subl
cli
xchg
daa
push
lods
repz
mov
dec
or
and
cwtl
fistpl
jle
and
pop
sub
push
cs
out
pushf
sbb
lock
hlt
call
and
xlat
or
leave
mov
lcall
js
or
push
insb
popf
xchg
aaa
mov
cli
or
sbb
addr16
mov
mov
lds
call
and
movsl
xchg
mov
insl
jbe
or
jecxz
out
lea
mov
xor
cmp
aaa
push
jmp
pushf
insb
push
and
lods
mov
fistl
call
jb
sahf
cltd
loop
lods
dec
int
and
and
stos
outsl
jne
loopne
cwtl
mov
out
xor
adc
es
and
mov
add
adc
or
out
xchg
ds
cmp
icebp
xor
and
mov
or
imul
xchg
bound
inc
jecxz
push
pop
mov
call
cmc
pop
add
lret
insl
pusha
lock
out
or
lcall
xchg
rolb
lcall
lret
mov
push
mov
dec
add
jmp
add
std
pop
xor
rorl
cmp
adc
js
roll
leave
push
aad
gs
push
add
push
push
jae
push
lret
jns
lea
inc
mov
aas
movsl
std
mov
sbb
insb
adc
xchg
test
inc
insb
xlat
jb
mov
xor
in
mov
insb
mov
push
xchg
add
fsubs
daa
aad
jl
aas
mov
rcrb
nop
push
insb
pushf
xchg
xor
xor
pop
es
inc
cmpsb
xchg
arpl
adc
enter
and
sbb
or
notb
negb
insb
push
xchg
xchg
repz
push
cwtl
repnz
gs
or
dec
das
push
outsb
or
mov
aas
loopne
sbb
or
int
jb
push
loop
stc
and
xor
lret
cmpsb
test
in
xor
rolb
fistpl
push
add
pop
jne
sub
js
outsl
mov
shl
push
dec
fdivrs
popw
dec
or
ds
add
xor
stos
xchg
add
mov
jmp
mov
ljmp
aas
js
pop
pop
xor
pop
mov
nop
cmc
xor
movsb
enter
cltd
xchg
aas
jo
rol
push
adc
dec
xchg
arpl
add
lds
mov
cld
fdivr
sti
sbb
inc
stos
outsb
addb
addr16
or
push
repnz
push
rcll
dec
imul
in
popa
daa
cltd
or
adc
pop
xchg
lret
jecxz
addr16
cs
inc
js
sarb
fisubrl
clc
jg
cmp
fisttps
xor
jo
mov
mov
sub
mov
dec
sbb
ds
inc
in
roll
hlt
or
pop
lock
fcompl
lds
adcl
mov
lcall
scas
fnsave
or
fmuls
mov
fdivrl
dec
repz
outsb
add
sub
push
push
sub
mov
xor
test
push
cld
mov
or
loop
out
sub
mov
cltd
add
hlt
ds
dec
int3
dec
leave
adc
out
orl
cmc
mov
jl
outsl
ret
in
adc
pop
aas
and
sahf
aas
fsubrl
sbb
movsb
cwtl
xchg
fsubl
negl
mov
pop
mov
xchg
ljmp
jns
sub
loope
insl
mov
cwtl
adc
sahf
dec
loop
xchg
imul
je
xor
pop
inc
cmp
aas
mov
ret
mov
bound
cli
xchg
push
outsl
call
sarb
pslld
inc
outsl
iret
je
pop
cmp
xchg
scas
lret
mov
ja
aaa
xor
subb
inc
ret
mov
mov
push
hlt
popa
dec
ljmp
cs
cwtl
mov
sti
mov
inc
and
xchg
inc
jle
not
inc
xchg
lea
imul
lock
sbbb
lods
pop
pusha
jnp
pop
pop
imul
les
pusha
mov
dec
adc
inc
mov
fbstp
dec
jbe
sbb
out
int3
mov
sbb
add
sub
int
test
xor
push
leave
les
jo
mov
mov
and
dec
lods
and
push
adc
cmp
cmp
adc
loope
xchg
ja
inc
imul
push
in
pushf
addl
pop
test
pusha
fildl
ret
dec
cmp
in
inc
call
dec
popa
out
mov
fsub
jae
mov
adc
jl
lock
jl
rcrb
push
jmp
cs
sbb
cmpsl
dec
pop
andl
mov
scas
adc
call
jo
icebp
dec
sub
and
cltd
or
in
xor
cld
xchg
inc
inc
ja
push
loope
loop
pop
mov
jne
jno
push
ja
arpl
imull
lock
rcl
fcmovbe
stos
std
fildll
inc
fisubrs
xchg
shl
das
push
mov
push
scas
jae
dec
js
mov
ja
adc
mov
sbb
daa
adcb
subps
or
bound
push
or
cs
push
stos
jl
stos
pop
mov
push
fs
nop
repz
dec
and
les
cmpl
xor
inc
dec
jo
jl
add
pop
add
mov
dec
fisubs
scas
jmp
dec
mov
cli
insl
insb
notl
add
pushf
in
lcall
xor
mov
subl
inc
push
fadds
add
and
dec
fwait
ja
cwtl
xlat
fdivs
mov
mov
js
out
scas
add
or
cltd
jg
push
fbstp
mov
adc
inc
icebp
es
inc
xchg
or
pop
xchg
pop
adc
sbb
adc
dec
xchg
ljmp
jmp
xor
xchg
ja
repnz
fs
popf
push
cwtl
lds
outsl
shll
rcl
stos
push
adc
decl
mov
rcr
das
fs
push
mov
das
je
popa
jp
pop
or
lret
loope
pop
stc
out
rcl
sti
xchg
ja
negb
aas
push
or
outsb
or
mov
pop
mov
cmp
xchg
lds
xchg
cli
sub
mov
lock
sbb
not
stos
test
pop
scas
ret
dec
xchg
and
or
andb
stos
mov
test
ds
loope
call
pop
icebp
adc
xor
enter
insl
iret
xor
frstor
dec
mov
ret
jge
les
data16
test
xchg
mov
fcom
pop
into
push
xchg
pop
push
or
int
pushf
into
jo
mov
push
mov
cmp
jmp
pop
xor
adc
stc
imul
clc
lret
push
mov
and
outsl
jge
xchg
out
ja
test
ffreep
xor
xor
mov
sbb
rorb
rclb
inc
dec
data16
in
inc
andl
mov
and
add
rorb
xchg
movsb
gs
sbb
pop
fldl
add
xchg
push
push
dec
adc
enter
add
test
add
dec
test
xor
lods
push
cld
jmp
adc
and
and
sbb
aam
inc
inc
nop
jg
aam
stc
dec
jnp
insl
xor
cmp
insl
popf
push
arpl
incl
inc
inc
or
mov
mov
ror
xchg
xlat
std
or
and
fyl2x
in
push
push
sbb
xchg
sbb
mov
jge
ret
adc
lahf
jae
xor
add
rclb
sbb
mov
mov
shll
jnp
xchg
cwtl
outsb
das
jns
lods
mov
pop
int3
ss
cltd
cmp
sub
jl
sti
push
lahf
das
daa
xor
xor
adc
test
aad
test
adc
cmp
mov
imul
test
cmp
in
stos
fcomp
mov
stos
mov
jecxz
daa
mov
adc
inc
arpl
cmp
fcomip
push
leave
cmp
fidivrl
shlb
rcll
repnz
inc
add
mov
pop
jnp
std
leave
mov
fsubrl
inc
jno
add
xchg
xchg
aas
xlat
test
dec
and
push
push
cmp
subb
lret
sub
add
jecxz
and
pop
cmp
roll
dec
inc
xchg
lock
or
sbb
sbb
xchg
frstor
jle
xor
sub
push
hlt
lcall
and
xor
pushf
cli
leave
sbb
xchg
scas
sbbb
dec
imul
mov
ljmp
imul
push
adc
sarl
shll
fnstenv
lds
xchg
je
mov
sbb
mov
dec
popa
test
out
xchg
jecxz
mov
rcl
mov
shll
addb
xchg
insb
insl
xchg
dec
cmp
push
std
cmpsl
jns
push
movsl
leave
jle
and
jp
pop
xor
inc
xchg
adc
fadds
sbb
pop
push
add
push
movsl
in
or
imul
xchg
adc
pop
jg
int3
cld
imul
imul
test
ja
or
cld
cld
xor
fwait
or
or
inc
data16
test
mov
add
mov
int
fwait
xchg
orb
sub
sub
cmp
je
out
dec
sbb
cltd
sahf
fnstenv
repz
lock
imul
scas
add
sbb
xor
xchg
test
call
cltd
or
add
xor
scas
div
mov
cmp
ret
sbb
icebp
jl
push
int3
nop
and
test
rol
sbb
rcrl
xor
lods
cmpsl
jecxz
stc
xor
or
push
mov
fistps
mov
sbb
es
das
xchg
push
fists
inc
imull
fildl
test
and
pop
test
add
idivl
cli
int
addb
inc
mov
aas
jecxz
movsb
push
pushf
xchg
fwait
inc
inc
mov
adc
xor
sub
movsl
jns
push
push
cmpsb
xorb
fidivs
push
inc
xor
dec
and
fidivs
sbb
push
jne
inc
cmp
jp
aaa
sub
dec
add
jns
jl
push
cmp
jle
das
cltd
sbb
xor
cmpsl
pop
scas
addl
dec
lahf
add
jge
sbb
rcrl
sti
sbb
ret
sbb
divb
and
or
sub
xchg
add
mov
xor
in
mov
or
lahf
js
mov
mov
add
adc
or
mov
ds
sbb
xor
out
mov
loop
insl
lods
in
leave
xchg
xor
push
not
mov
inc
daa
push
dec
mov
adc
stos
loop
sti
push
sub
out
cmp
cmp
jae
mov
sub
xchg
lahf
outsb
subl
and
xor
and
fidivs
inc
and
pop
adc
xchg
add
xchg
and
mov
jle
xchg
dec
in
out
in
das
push
sbb
mov
daa
mov
push
adc
or
and
js
sbb
and
jle
into
loope
enter
scas
iret
jl
cmp
pop
jecxz
push
fldenv
repz
fs
dec
push
rorl
fucomp
xchg
mov
dec
xor
lahf
scas
dec
mov
inc
negl
sbb
in
xlat
arpl
fwait
push
js
shlb
roll
in
dec
adc
fnstsw
xchg
dec
mov
cmp
mov
mov
in
mov
xor
jg
lods
cmp
test
push
xorl
fucom
bound
aad
sbb
out
fs
aad
xchg
mov
vmovsd
push
and
stos
pop
xor
adc
daa
fwait
ljmp
call
jbe
ss
test
lods
mov
addr16
enter
clc
xchg
mov
push
inc
cmc
jge
insl
stc
add
xchg
ja
cs
cmp
pushf
pusha
cmpsl
imul
jp
cmpsl
jns
enter
sub
cltd
dec
lea
push
mov
test
les
dec
pop
and
push
pop
iret
xchg
loopne
popl
add
fcoms
fildll
mov
stos
in
mov
cmpsl
std
ss
add
jp
mov
lret
lock
xchg
fmuls
jae
into
add
daa
pop
mov
ds
mov
sti
sub
mov
jl
xchg
xlat
faddl
xor
jg
mov
enter
lret
cmpsl
xor
jmp
fidivrs
mov
nopl
add
dec
xor
ljmp
push
cmp
dec
cmpsl
clc
xor
or
test
js
sbb
scas
sub
fldl
insl
scas
daa
loop
adc
clc
jae
sti
or
mov
adc
or
sub
sbb
pop
inc
lret
inc
push
or
dec
pop
or
adc
repnz
pushf
test
add
inc
pop
inc
divl
aaa
aam
add
test
les
outsb
mov
cmp
sbb
push
adc
pop
iret
cmp
mov
sbb
pop
cmpsb
inc
jl
outsl
outsb
dec
pop
xor
add
iret
jg
ss
mov
cmp
imul
sub
in
add
jecxz
add
out
pcmpgtd
push
sub
push
insb
inc
xchg
cli
jno
pop
dec
aas
cmp
push
add
jmp
jl
out
xor
rclb
jno
mov
xor
inc
push
push
and
xorl
mov
mov
sahf
add
ret
sub
pop
popa
pop
insl
bound
push
das
cmpsb
pop
jno
in
mov
scas
insl
or
pop
lcall
sbb
xchg
sbb
stos
cwtl
outsl
ficoml
push
cmp
adc
int
inc
fsubs
xchg
repz
mov
pop
push
cmc
adc
mov
icebp
adc
int3
sbb
push
notb
sbb
add
cmc
mov
sub
je
add
test
orl
xor
sbb
popf
das
jmp
pop
fsubl
xchg
jg
lea
cmp
roll
orb
sub
or
push
je
ja
lahf
daa
sbb
add
inc
mov
inc
mov
mov
mov
nop
mov
shlb
push
test
test
out
pop
lahf
or
mov
fadds
data16
incl
push
push
and
fwait
pop
nop
jle
cli
jno
mov
scas
mov
mov
push
push
jnp
add
cmpsb
add
jmp
dec
adc
mov
mov
dec
mov
fisubrl
fs
scas
repnz
or
jbe
push
std
ret
in
ret
inc
mov
hlt
inc
es
adc
mov
lret
xor
xlat
inc
fcomi
popa
imul
inc
dec
push
ja
or
or
shlb
push
add
cmp
call
lahf
movsl
std
outsb
push
push
jle
mov
cmp
cmp
pop
mov
cmp
outsl
shrb
lahf
mov
into
push
bound
adc
sub
data16
repz
lcall
mov
inc
push
add
out
push
scas
xor
pop
pop
mov
loope
sbb
cs
dec
outsl
repnz
shrl
pop
jnp
data16
arpl
ret
leave
and
xor
push
xchg
lock
mov
lock
push
pushl
jo
xor
imul
lcall
jbe
push
imul
cld
test
mov
sbb
mov
sbb
lea
mov
aas
pop
or
adc
in
push
push
mov
sarb
pop
repz
loope
scas
ret
inc
idivl
inc
lods
lods
icebp
rorb
lock
dec
in
cwtl
movsl
mov
out
dec
outsb
cmp
insl
mov
push
incl
lret
andb
pop
iret
pushf
scas
jae
or
addb
sub
sub
push
cmp
test
or
inc
lret
jb
shlb
ret
add
jge
lods
inc
mov
test
pusha
fnstcw
pop
mov
aaa
test
mov
dec
lcall
int
mov
adc
xchg
es
xor
jle
std
or
xor
add
cli
iret
jmp
adc
xor
and
mov
xchg
or
push
pop
sbb
add
je
lods
sti
int
jp
fists
cld
incb
mov
add
stc
xchg
call
pop
cmp
lods
repnz
mov
dec
xor
push
xchg
push
xchg
lea
in
adc
enter
int3
nop
xchg
std
mov
clc
movsl
or
ljmp
cltd
out
aas
sarl
xor
push
cmp
incb
jmp
rolb
ficoms
shr
pop
pop
testl
inc
inc
sbb
loopne
mov
movsb
cmp
icebp
aam
sti
lock
out
lock
decl
inc
add
push
xlat
add
shrb
ds
sbb
lret
ret
daa
add
adc
sbbb
push
dec
sbb
les
cld
sbb
lods
imul
xor
adc
xor
je
outsl
pusha
popa
adc
add
mov
cmp
fsts
dec
cmc
cmpsl
insl
jge
std
xchg
mov
sbb
xchg
xlat
sbb
lea
add
jp
lea
or
pushf
out
jae
imul
inc
addr16
sub
fdivp
gs
pop
inc
or
popa
shlb
inc
xchg
movsl
mov
in
imul
mulb
insb
sub
cmpsb
ja
test
cmp
arpl
popf
negb
push
fldcw
pusha
arpl
lret
insl
rcll
std
mov
mov
jecxz
scas
adc
test
je
mov
int
mov
jno
lahf
xchg
sahf
mov
and
xor
xchg
mov
movsl
movsb
xchg
jae
xor
pop
movsl
push
daa
or
cld
lods
jge
rep
cwtl
fistpl
cwtl
xor
sub
in
dec
rcll
andps
fs
fimuls
ss
test
mov
test
movsb
nop
adc
test
test
add
pop
mov
fwait
pop
es
inc
mov
fdivl
and
sub
ret
dec
sub
xchg
gs
or
nop
jns
daa
arpl
adc
mov
inc
push
popa
mov
lods
add
xchg
ja
fisubl
subl
xor
mov
outsl
popf
mov
sub
movsb
hlt
out
pop
adc
loope
lods
mov
push
and
sub
addb
mov
hlt
daa
sbb
add
loope
je
sbb
sub
sub
sub
push
and
push
dec
aam
mov
jge
fisubl
dec
sub
iret
fucom
jl
mov
xchg
icebp
cmp
daa
mov
lds
ljmp
adc
sub
jl
mov
cltd
stos
pop
jmp
cmp
repnz
aas
sbb
inc
cmpl
mov
sbb
bound
or
stc
rcr
loope
push
push
mov
das
fwait
cmc
popa
ret
in
cmp
ja
cmp
lods
xor
shrl
jg
mov
sarl
in
mov
ret
sub
xor
mov
xor
xchg
sub
or
push
sub
clc
lods
push
or
adc
neg
stc
out
insl
outsb
mov
into
mov
ss
mov
inc
roll
out
or
cmpsb
lret
dec
mov
outsl
xchg
mov
fstps
adc
int
ja
insb
or
incb
cmp
repz
sarb
lcall
imul
stos
cwtl
pusha
push
repz
stos
push
push
mov
pop
xchg
mov
sbb
sbb
and
jge
fdivs
lods
add
cld
mov
imul
lods
sub
in
enter
sub
hlt
jmp
hlt
fcompl
push
ds
cmpsb
call
aas
jl
cmpl
mov
mov
sti
push
push
mov
push
test
bound
mov
push
adc
fisttps
out
xchg
pushl
sub
in
fisttpll
sahf
pop
pop
cmc
mov
xchg
pop
mov
sbb
frstor
aad
mov
dec
xor
sbb
or
xchg
cltd
mov
pushf
mov
out
fs
gs
mov
mov
in
jle
fistl
jnp
sub
jmp
stc
movsl
and
fildl
sbb
xor
imul
and
sub
lcall
cmp
xchg
repz
mov
xor
cld
fnsave
add
ljmp
xor
fiaddl
cmp
std
test
cmp
mov
sub
sbb
dec
out
ss
dec
mov
push
iret
mov
pop
or
icebp
jbe
ja
lods
xchg
js
add
mov
sbb
cmp
xlat
fisubrs
inc
test
fs
outsb
push
push
cmp
jecxz
divl
jns
clc
dec
mov
sbb
or
hlt
aam
ret
ret
adc
mov
sub
test
scas
frstor
into
adc
roll
cmp
and
iret
fnstcw
push
data16
sbb
mov
dec
add
dec
push
jb
lret
xor
ret
mov
mov
lahf
push
hlt
unpckhps
sti
and
jb
mov
xchg
icebp
adc
push
popa
adc
cmp
xor
ss
xchg
int3
mov
test
scas
xchg
pop
imul
or
sub
add
insb
mov
mov
add
mov
jmp
insl
mov
mov
jbe
sub
fisubrl
pop
add
mov
outsl
mov
lret
or
jno
aaa
dec
les
pop
mov
out
push
and
mov
pop
fwait
sub
jns
jg
adc
in
sti
add
adc
scas
fucomp
and
lcall
mov
and
xchg
out
int
in
or
dec
jnp
fcmovb
mov
outsb
xchg
imul
pop
dec
sub
or
pop
push
mov
dec
jle
fwait
push
lds
inc
mov
sbb
test
pop
filds
sub
mov
jmp
imul
xor
pop
cmc
rolb
xchg
inc
xchg
sbb
ficoms
adcl
aad
les
out
scas
mov
mov
pop
addr16
fwait
sbb
jge
mov
or
xor
jo
dec
mov
jp
in
movsb
mov
insl
mov
jmp
pop
jl
pop
call
es
int
scas
out
fs
push
or
repz
repnz
or
inc
xchg
es
mov
arpl
mov
loopne
xchg
bound
imul
and
xchg
push
movb
enter
test
lock
sub
test
test
andl
cs
inc
mov
dec
lret
inc
adc
mov
push
or
and
cmp
negb
test
sub
pop
in
ret
push
aam
mov
insb
cmpsb
mov
lret
mov
in
xlat
sbb
fsubl
lods
jl
sahf
mov
mov
addr16
mov
xchg
out
popa
std
loope
jmp
jmp
pop
xchg
test
mulb
je
jge
mov
imul
pop
mov
xchg
or
dec
enter
pushl
sbb
out
jne
test
insl
hlt
les
cmc
mov
sub
cmp
jne
sbb
sub
mov
add
movsl
jb
or
mov
xor
pmullw
repz
int3
xorl
imul
dec
int
test
cmp
outsb
cmp
jp
pop
lock
push
enter
sbb
sbb
cmpsb
outsl
cmc
icebp
jno
rol
cmp
call
fisubrl
mov
shr
cld
sti
push
dec
xor
outsl
lods
mov
stos
shlb
scas
mov
inc
and
mov
stos
aaa
lods
adc
mov
push
push
push
cmpsl
jecxz
mov
out
loop
in
stos
sub
dec
jb
das
movsl
push
sbb
gs
sub
call
movsb
jnp
push
testl
dec
or
cmp
xchg
fildl
and
cli
pop
mov
lock
mov
mov
jl
xchg
mov
fcmovbe
mov
addl
lret
aad
jbe
icebp
add
out
in
sahf
imul
jle
cmp
jecxz
mov
out
cmp
test
and
pop
mov
pusha
in
or
sub
and
and
dec
xorb
outsl
pop
ret
int
xchg
rclb
iret
adc
or
lock
les
mov
inc
jbe
xorb
dec
movsl
inc
std
cld
rcrl
jo
lret
jle
push
mov
test
sub
nop
fcom
enter
or
pop
xor
inc
xchg
jp
cmpsb
inc
adc
sarb
mov
mov
push
adc
cmp
pop
inc
push
jle
leave
cmp
in
and
out
dec
daa
xor
and
aaa
sbb
pop
sub
in
mov
jp
or
aam
pop
add
jle
test
rorl
into
clc
adc
je
fdivrs
push
dec
sti
lods
pop
push
mov
add
push
daa
sub
lds
int3
sub
insb
xchg
jmp
jns
out
sti
xlat
inc
fldl
scas
push
imul
std
cld
mov
arpl
imul
pop
test
ret
jg
ds
adc
imul
mov
sbb
pop
mov
insb
jmp
or
movl
mov
insl
sbb
fs
gs
xchg
mov
dec
sti
jle
and
rcl
sbb
and
insl
insb
ss
fs
fiaddl
pop
movsb
pop
insl
mov
scas
jge
je
xchg
stc
dec
outsl
bound
xor
addr16
lea
mov
std
dec
dec
fstpl
int
fs
push
sahf
sahf
daa
mov
popa
rcr
pop
push
inc
push
pusha
mov
clc
fiaddl
mov
mov
shl
jo
jne
pop
outsl
filds
int
js
inc
sbb
ret
incb
sbb
cmp
inc
inc
sahf
jp
mov
mov
dec
into
outsb
jae
xor
lea
cltd
aas
aaa
fcomps
rorl
adc
in
fdivl
cli
jns
gs
das
test
iret
push
push
call
xchg
and
and
fstpt
sub
inc
xor
xor
sub
push
jne
rorb
or
xchg
mov
adc
push
dec
cli
cmp
dec
push
jb
mov
pop
pop
inc
sbb
mov
xchg
or
push
adc
scas
push
out
cmp
repz
inc
inc
inc
xchg
aam
scas
xchg
jmp
mov
xbegin
fistpl
in
mov
scas
out
jg
leave
and
or
repnz
fsubrs
or
mov
shrb
dec
daa
fnstsw
lds
int3
sub
daa
jmp
xor
adc
push
daa
fimuls
inc
dec
dec
imul
outsl
dec
aad
adcb
shrb
outsl
leave
mov
push
repnz
and
ljmp
scas
inc
jo
mov
push
out
and
lock
fcos
dec
push
addr16
cmp
push
cmc
imul
addl
inc
cmp
mov
pop
xor
dec
sub
ljmp
sbb
dec
loope
add
cmpsl
movsb
rcrl
scas
je
mov
add
push
stc
icebp
xchg
in
xlat
mov
jmp
sahf
adc
mov
push
sub
test
jmp
dec
ds
cmp
xchg
pusha
aas
imul
scas
push
cmp
call
sub
or
xor
ss
mov
bound
das
shrl
jle
push
lcall
pushf
xor
jb
sbb
push
or
stos
sub
out
stos
jg
dec
es
lret
das
pop
xlat
arpl
inc
cmp
cld
or
mov
call
ficoml
xor
outsl
sti
fmull
xor
out
gs
stos
movsb
ret
mov
mov
mov
mov
cmp
aam
cmpsb
out
inc
shll
and
jne
sbb
mov
or
outsb
test
pusha
and
sub
or
rclb
decl
mov
jg
ficoms
daa
xchg
xchg
xchg
sbb
mov
xorb
arpl
and
ja
rolb
xchg
test
cmpsl
inc
sti
jbe
out
lds
inc
xchg
out
jns
call
ljmp
out
loop
hlt
in
rcrb
inc
push
pop
std
pop
mov
or
push
mov
adc
cltd
sub
and
mov
out
mov
and
dec
bound
mov
rol
or
dec
out
cld
arpl
les
loope
scas
sub
sti
mov
push
mov
icebp
in
scas
or
cld
sbb
in
add
push
negb
int
ds
push
sarb
cmp
into
or
pop
daa
test
ja
in
pop
scas
or
ficoms
or
fnsave
push
cld
mov
fstpt
mov
inc
inc
xchg
cli
aam
jno
inc
inc
pop
or
mov
in
cmp
xor
ja
sbb
sub
sbb
push
mov
jae
loopne
lret
mov
sbbl
jmp
add
mov
outsb
insl
sets
sub
push
test
dec
and
clc
icebp
inc
lock
pusha
xchg
xchg
sbb
es
out
stc
addr16
mov
test
sbb
dec
fnstsw
stc
gs
pop
addr16
mov
xor
dec
loopne
movsb
and
adc
adc
dec
jnp
leave
daa
mov
testl
test
clc
clc
cld
out
or
push
and
lcall
fcomps
fiaddl
inc
mov
mov
dec
xor
fcoms
inc
xchg
mov
or
outsl
addr16
je
mov
and
mov
dec
les
xor
rclb
test
xchg
sub
jnp
and
dec
popf
popa
sub
fsubs
out
in
lahf
push
or
inc
cmp
leave
outsb
jecxz
xchg
roll
xrelease
ficoml
sub
mov
push
faddl
cs
push
lahf
sarl
push
outsb
xor
mov
mov
add
js
push
insb
mov
xchg
inc
pop
inc
shll
roll
test
sub
lock
dec
cmpsl
inc
mov
mov
inc
inc
add
std
push
cmp
pop
adc
pop
lret
pop
xchg
push
arpl
insb
jb
and
mov
add
popa
call
and
fdivl
aas
pop
sub
sahf
push
sbb
cmp
xor
imul
nop
subb
jl
inc
andb
mov
cmc
cwtl
mov
push
push
stc
push
cli
movsl
sahf
lret
xchg
arpl
push
jno
fbstp
add
je
popf
jnp
mov
add
fmulp
pop
mov
mov
pop
fcomps
mov
ljmp
dec
sbb
cli
movsb
jo
mov
gs
xchg
pusha
pop
sub
inc
xor
movsb
xor
inc
mov
sbbl
cmp
fstps
leave
in
dec
cltd
dec
dec
orl
inc
sbb
add
sbb
jno
test
je
jne
repz
hlt
push
push
dec
jno
dec
cmp
outsb
dec
jmp
int
dec
xor
fwait
jmp
fldl
inc
loope
loopne
in
jo
sub
andl
or
ucomiss
sahf
movb
push
fwait
sub
xor
adc
scas
jge
sub
xor
pop
aad
xor
push
loopne
mov
sub
jl
fsts
orl
clc
jg
aad
sahf
sub
adc
fmul
xchg
jge
pop
inc
test
lcall
dec
enter
loopne
cmc
cwtl
xchg
sbb
push
inc
mov
jp
adc
stos
fsubrs
cvtpi2ps
js
movsl
pop
adc
jo
xchg
cwtl
cmp
or
bswap
push
inc
inc
and
mov
mov
fcoms
fidivrl
jmp
add
ljmp
mov
ret
and
xchg
imul
pop
sbb
and
or
js
pop
sbb
push
xor
xchg
hlt
out
push
xchg
leave
arpl
or
popa
xor
and
nop
dec
sub
daa
addr16
pop
lds
lea
inc
dec
insl
out
push
mov
xor
lods
pushf
dec
fmull
push
sbb
lods
loop
faddl
push
jns
mov
lods
sbb
jns
fstl
xchg
leave
scas
shl
or
aas
sti
inc
cmp
arpl
push
ja
int3
addb
in
stos
cmpsb
mov
jmp
pop
nop
cmp
dec
xor
xor
xchg
jecxz
and
and
inc
jb
jge
jg
insl
or
ret
pop
xor
pop
xchg
or
jg
pop
and
push
leave
dec
xlat
jb
cmp
pushf
adc
jmp
xchg
sbb
xchg
xchg
loope
fmull
mov
test
inc
mov
mov
hlt
imul
lret
xchg
enter
addr16
pxor
ja
pop
das
push
out
pop
faddp
xchg
add
push
pusha
cmpl
in
mov
sub
xchg
sbb
ficomps
add
lods
ja
inc
mov
xchg
sbb
mov
incb
arpl
sbb
dec
dec
dec
ret
pop
inc
call
xchg
cwtl
enter
in
cmp
mov
test
pop
stos
ja
test
and
je
repz
or
mov
xorl
push
dec
xor
lcall
aas
xor
pop
fcmovb
pop
mov
sub
in
cmp
fnstsw
lock
gs
adc
inc
pop
std
loop
cwtl
mov
sbb
jle
push
xor
ret
mov
xchg
aam
push
sbb
mov
lret
cli
xor
dec
test
pop
sub
xchg
scas
jg
jp
sub
cmp
repz
add
loopne
hlt
mov
xlat
scas
jno
mov
ret
insb
movsl
and
pop
pop
add
daa
jecxz
push
mov
push
sub
fistpll
mov
mov
lods
insl
push
fs
ja
mov
push
mov
out
jmp
xchg
adc
shlb
xor
inc
lahf
sbb
insb
in
fs
rorl
or
aad
inc
adc
dec
andb
repz
iret
inc
pop
outsl
adc
out
jecxz
mov
pop
gs
testb
cmp
lds
adc
inc
lock
ds
fpatan
push
pop
mov
or
mov
mov
dec
dec
lods
adc
aam
jb
icebp
sbb
jmp
push
inc
iret
fadd
mov
push
stc
lret
inc
scas
fs
in
shlb
rcrl
outsb
popa
fmul
loope
and
mov
iret
js
int
test
and
les
sub
pop
sub
xchg
dec
push
jnp
imul
test
sbb
adcl
test
lods
mov
mov
scas
sbb
mov
xchg
xchg
repnz
mov
out
inc
sbb
xchg
imul
push
inc
mov
inc
jmp
in
pop
loop
dec
push
das
gs
insb
push
std
xchg
cmp
loop
mov
push
and
jbe
in
add
ljmp
cmpsl
daa
adc
or
arpl
push
lret
inc
mov
push
rcr
repnz
fs
sbb
imul
and
imul
dec
mov
mov
jb
fsub
push
inc
leave
fistpll
dec
mov
popf
push
jmp
mov
mov
mov
xchg
scas
add
test
fwait
mov
and
xor
add
add
mov
push
push
fisttpl
xchg
xchg
xchg
push
flds
xor
push
pop
push
mov
jo
test
lods
rcr
cwtl
dec
test
mov
sbb
ficoms
sub
xchg
loopne
xchg
mov
jns
dec
pop
mov
dec
jne
fdivs
fistpll
rcll
imul
mov
lcall
xor
jge
mov
jns
lds
cmp
lfs
xor
mov
xchg
and
mov
mov
dec
or
ja
mov
test
adc
notb
bound
fsubrl
loope
popa
cmp
and
scas
jg
loope
fsts
sbb
mov
les
mov
inc
mov
ret
fstl
fwait
divb
add
jbe
clc
int3
nop
pop
sub
dec
and
out
jp
testb
jnp
insb
andl
push
call
jle
ja
jno
mov
sub
dec
int3
adc
push
test
pop
into
addr16
sarl
pop
dec
dec
sub
pmaxsw
fcmovnb
bnd
and
mov
and
xor
mov
in
pop
pop
pop
int3
jmp
icebp
mov
adc
iret
add
lret
sbb
cltd
mov
push
mov
inc
xchg
and
call
popf
scas
loope
and
divl
stc
ds
icebp
movsl
add
je
imul
mov
aam
imul
mov
or
leave
add
sbb
or
fidivrs
and
pop
in
jnp
xchg
jb
xchg
jmp
jecxz
push
push
fwait
inc
in
cltd
pop
or
clc
nop
mov
jne
mov
shll
or
aas
xchg
outsl
pop
arpl
mov
stos
int
and
ljmp
sbb
and
ret
mov
jbe
mov
xor
jnp
sbb
xor
out
push
loopne
je
or
sbb
ss
pop
dec
ja
out
lret
mov
add
lock
aam
mov
sub
sub
pushw
mov
pop
mov
pop
das
cmp
or
leave
dec
sbb
das
ret
ret
cmpsb
mov
add
sub
cltd
jecxz
fcoms
ficomps
in
jno
push
jp
cmp
cld
icebp
addr16
cmp
call
inc
es
in
out
arpl
sbb
sbb
das
mov
ljmp
xchg
and
bound
push
in
repnz
int
push
cmp
shrb
sarl
sahf
mov
arpl
gs
inc
call
jae
out
seto
cltd
push
lcall
and
out
pop
lods
pop
mov
pushf
and
mov
mov
aad
adc
dec
fcoms
push
aad
jg
stc
mov
xchg
push
addl
cwtl
testb
addr16
out
push
inc
sti
fistpl
mov
cmp
push
sarl
and
adc
addb
shr
into
jge
dec
xchg
es
test
mov
push
ja
cmp
or
mov
add
cmp
cmp
push
or
ljmp
pop
cld
add
xchg
fidivl
xchg
sbb
or
cmp
iret
lahf
pop
hlt
push
leave
mov
pop
cmp
mov
cwtl
sbb
movsl
std
nop
clc
rcrb
imul
lret
mov
mov
and
mov
pushl
inc
mov
and
sahf
pop
ret
xchg
inc
ret
xchg
cld
mov
adc
mov
enter
xchg
sub
mov
ret
addr16
ficoms
hlt
dec
adc
ret
pop
mov
fiadds
cmp
jg
cs
arpl
cli
div
call
mov
push
xchg
push
dec
pop
fldt
sar
faddl
push
arpl
iret
cltd
push
jg
sub
popf
aam
jne
mov
loopne
cmp
cld
cmp
xchg
lds
testb
push
xchg
out
imul
enter
mov
and
xor
cmp
cs
cmp
mov
add
or
pusha
jle
mov
dec
lcall
fildl
orl
in
addr16
into
dec
jmp
hlt
cmp
aad
sub
arpl
xchg
and
scas
js
adc
pop
mov
sbbl
fldenv
cmpsl
push
mov
lcall
xchg
or
xchg
sub
aaa
mov
adc
pop
popf
or
out
inc
xor
test
pop
dec
jbe
inc
bnd
mov
cmp
sahf
rcll
sub
mov
jae
mov
rcrb
or
scas
out
or
mov
xchg
jl
and
inc
pop
in
jns
jae
or
stc
mov
mov
data16
movsl
and
test
lds
int3
dec
fwait
sub
imul
int3
adc
xor
push
xchg
cmp
addr16
test
in
push
xor
cld
add
aas
shr
xor
xlat
mov
movsb
pop
push
shlb
push
mov
sbb
adc
in
mov
push
pop
pop
xor
push
lahf
mov
add
test
dec
pop
push
pop
dec
imulb
add
loope,pn
push
sub
loope
pop
or
sub
xchg
xchg
pop
rcr
mov
mov
mov
xor
sbb
sub
in
outsl
xchg
mov
aad
fiaddl
jmp
stc
js
xchg
fildl
mov
mull
sti
and
xor
pop
out
mov
imul
adc
add
test
js
cltd
xor
inc
shll
out
imul
ds
pop
pop
mov
or
adc
pop
les
mov
int
or
pop
cs
enter
fsubl
movsb
xor
dec
aas
xchg
ss
cmc
add
test
mov
lods
shll
or
add
mov
pop
add
sub
sub
jle
int3
mov
pop
mov
cs
rcrl
mov
adc
mov
jns
mov
sbb
xor
mov
fsubl
and
sub
jae
orb
push
or
sbb
pop
into
cmp
add
cltd
dec
and
pop
lcall
xchg
repnz
mov
push
out
and
stos
insl
int3
adc
rcl
or
mov
ret
pop
fwait
push
pusha
jl
subl
fs
lret
jle
je
mov
pop
fptan
inc
sbb
popf
mov
xor
mov
add
inc
pop
push
stos
push
cwtl
in
mov
mov
test
sbb
and
cmp
shll
cmp
mov
test
out
and
or
repz
sub
or
nop
rolb
pop
xor
inc
pop
rcr
push
sub
lods
xor
pop
pusha
test
fmulp
push
mov
sbb
xchg
cmp
pop
jg
aam
in
clc
and
pusha
das
and
es
xorb
loope
jge
cmpsb
xlat
mov
adc
inc
les
xor
orb
outsl
mov
insl
scas
mov
gs
or
xchg
cmc
and
mov
addr16
cltd
adc
cld
cmp
mov
repz
repnz
cmp
lahf
mov
aam
xchg
pop
push
mov
xchg
into
or
jl
mov
pop
movsb
mov
in
daa
mov
mov
in
not
inc
cmp
mov
imul
jg
sub
test
lods
jae
out
xchg
cli
cld
sub
pusha
arpl
mov
stos
sbb
stc
fwait
aas
jno
je
mov
out
jne
sub
add
mov
add
inc
movsb
inc
jb
mov
push
push
outsb
shll
aam
mov
adc
jg
aad
pushf
adc
ret
cmp
lcall
jmp
pop
scas
int
add
xlat
jmp
pop
lods
push
jb
mov
or
sti
cmp
fcomi
cmpsb
arpl
xchg
out
lret
jp
in
cmc
rcll
dec
cmp
sub
mov
packssdw
and
fcmovne
inc
adcl
lret
addr16
fdivl
fisttps
lods
and
mov
mov
pop
jne
push
xchg
je
pusha
add
jg
cmpsb
xchg
jp
into
bnd
mov
mov
push
mov
out
cmp
fstl
addr16
cmp
sbb
cmc
es
icebp
ja
lret
aaa
loope
sbb
daa
movsb
mov
loop
inc
and
dec
mov
es
jmp
mov
andb
dec
je
lahf
dec
push
jbe
lods
xor
or
push
fs
pop
inc
fs
mov
mov
mov
mov
addl
and
jb
mov
pop
or
or
add
cld
das
inc
popa
dec
xor
int
push
mov
cmc
fisubs
jmp
jae
inc
stos
stos
sub
test
dec
push
push
mov
push
and
mov
adc
fadds
dec
aam
pop
stos
imul
out
mov
cmp
xor
cltd
das
dec
push
aas
negl
shlb
xlat
xor
xchg
or
pop
mov
sbb
bound
cmp
mov
sti
mov
add
sub
call
out
sbb
gs
xchg
xchg
fdivrl
push
mov
pop
push
sbb
popf
js
sbb
ss
aam
adc
or
ret
jl
push
lods
or
mov
push
pushf
cwtl
or
pop
das
sub
les
jge
jns
xor
jns
movsb
push
sbb
mov
adc
add
sbb
inc
mov
add
cld
push
stc
lcall
testb
xor
lods
push
xchg
dec
icebp
adc
shll
mov
cwtl
jg
loop
xor
mov
mov
fistl
xlat
jle
and
mov
inc
sub
xchg
pop
dec
jl
fcom
jle
xor
lcall
xlat
imul
mov
fsubrl
insl
scas
inc
fistpl
jb
xchg
sub
incb
xchg
sub
cmpb
arpl
cmp
fidivrl
xor
inc
fistl
sbb
stos
push
js
cmp
js
fmuls
jae
pop
add
or
iret
mov
stos
cli
lods
daa
out
mov
adc
pop
fwait
mov
outsl
clc
and
jl
or
aas
mov
or
inc
enter
jg
int
fldcw
rorb
inc
cmpsl
jl
stc
lcall
xchg
xchg
sarl
in
add
stc
mov
mov
ss
xchg
int3
mov
ja
pop
mov
xor
rorl
repz
xchg
cmp
or
movsl
mov
and
mov
pop
and
cmp
add
add
lock
hlt
cmp
mov
imul
or
sahf
js
add
jmp
ret
jg
sbb
movsb
adc
rcrb
push
nop
int
xchg
mov
mov
and
movsb
inc
add
stos
and
lahf
aaa
push
es
imul
lea
inc
fistpl
mov
movsl
adcl
arpl
loopne
insl
mov
sbb
popa
or
subb
inc
jbe
xchg
add
mov
jp
and
xor
mov
setge
loope
jmp
not
lea
das
sbb
cmp
out
scas
test
ljmp
pop
fsubrs
mov
lock
aad
dec
adc
jno
inc
aad
out
mov
cli
popa
mov
push
and
pop
pop
pop
sbb
pushf
jecxz
push
push
mov
fcoms
add
sbb
lods
imul
int
pop
adc
cmp
and
cmp
lods
imul
rcr
in
cmpsl
das
cmc
dec
xor
jns
pop
jg
int
inc
es
into
inc
ss
jb
lea
das
stc
cmpsl
mov
pop
or
sub
mov
sbb
mov
ss
mov
push
inc
loopne
mov
rcll
stos
std
out
insl
sub
sub
sbb
pop
sti
push
mov
push
pusha
test
inc
ds
call
inc
push
stos
jns
sub
xchg
hlt
xchg
lds
cmp
imul
out
add
in
int3
stos
mov
out
outsl
inc
ret
or
dec
mov
ret
push
sahf
or
stc
les
inc
pushf
push
cmpsl
pop
js
imul
mov
or
lock
shll
and
lea
inc
das
and
adc
push
xor
in
sub
xor
or
mov
leave
frstor
sbb
lock
stc
divl
outsl
and
mov
dec
jne
inc
mov
je
test
ja
dec
movsl
pop
adc
xchg
popf
push
xchg
mov
xor
leave
xor
in
adcb
cmpb
dec
cmp
xchg
mov
addb
mov
mov
ss
cwtl
dec
in
pop
mov
add
in
xchg
inc
mov
pushf
mov
ficompl
fs
cmpsb
and
ret
jo
mov
push
sbb
push
dec
add
rcrl
es
les
xchg
insl
fwait
loopne
cltd
adc
xchg
test
or
sbb
push
not
daa
mov
mov
aas
scas
rcrb
sub
fdivp
cmpsl
nop
pop
in
lahf
mov
jnp
pop
mov
lods
push
rep
pop
pop
sbb
insl
lret
dec
push
es
lret
addb
insb
out
lret
lock
int3
jno
imul
aad
std
cmpsb
shlb
xchg
sub
ss
mov
in
push
divps
fnstcw
mov
xchg
cmp
mov
rcll
icebp
inc
lcall
rcl
push
das
nop
xchg
mov
sub
ss
pop
insb
aad
pop
pushf
push
ret
movsb
int3
sub
xor
enter
mov
mov
mov
xchg
cltd
ret
add
stos
sbb
in
mov
fmull
mov
dec
adc
jge
jg
push
and
fwait
xlat
int3
dec
pop
xchg
mov
lds
add
aam
rcrb
outsl
inc
sbb
das
int3
loopne
xchg
hlt
and
pause
clc
adc
hlt
and
push
sahf
nop
dec
pusha
out
ljmp
and
dec
inc
jae
clc
cmp
pop
or
out
bound
add
shlb
or
out
push
mov
scas
in
push
adc
xchg
adc
add
xchg
cltd
and
mov
inc
dec
fidivrl
mov
in
sbb
sub
push
ljmp
cmp
jg
sbb
push
decl
sbbb
pop
push
dec
cli
mov
mov
lods
or
mov
inc
mov
idivb
outsl
dec
mov
push
adc
and
add
pusha
mov
push
lahf
sahf
pushf
in
or
ret
aaa
mov
scas
outsl
neg
aaa
es
mov
cmp
in
and
fsts
fmuls
imul
mov
loop
shlb
mov
add
add
pusha
push
cmp
aam
test
lock
std
mov
xchg
fidivs
mov
pop
inc
fidivs
je
add
jge
pop
push
xchg
dec
rolb
jp
xchg
push
mov
xchg
test
inc
or
pop
test
jmp
mov
xor
sbb
les
popf
repnz
pop
add
cmp
inc
push
out
sbb
sbb
rcrl
push
iret
scas
dec
push
pop
push
shlb
sbb
jae
sub
leave
rclb
sbb
xchg
push
add
sarl
adc
jno
push
mov
mov
sub
push
mov
or
cmpsl
int
cmp
inc
mov
aaa
adc
mov
dec
xor
jle
jo
xchg
mov
out
adc
mov
fsubrl
push
sub
xchg
cltd
nop
mov
cmp
movsb
pop
cmp
scas
imul
adc
mov
mov
jmp
cwtl
xor
cmp
aad
daa
aaa
out
fsin
pop
lea
jae
out
adc
cmp
jle
pop
cli
mov
daa
repz
movb
data16
mov
adc
pop
sbb
ffreep
dec
inc
sti
movsl
mov
cmpsl
loope
and
hlt
xor
adc
mov
nop
dec
call
adc
cmp
or
jae
fildl
scas
jmp
cmp
stos
cmp
aad
mov
add
fbld
insl
lahf
repnz
xor
loope
shll
aad
jp
mov
testl
pop
sub
loop
and
enter
addr16
test
sbb
repnz
xchg
aam
cmc
jmp
jo
insl
mov
lcall
mov
sbb
xor
xchg
mov
push
xchg
divl
clc
adc
mov
pop
lea
mov
inc
aas
xor
in
popl
aad
outsb
in
test
std
ficoml
aaa
mov
les
xchg
shlb
cmpsl
movsb
jo
sbb
mov
inc
shrl
sbb
xchg
faddp
lret
in
and
or
sti
mov
sarl
mov
jmp
adcb
jno
stos
lcall
sub
imul
lods
push
mov
mov
cmovo
push
es
dec
ror
negb
inc
gs
and
iret
dec
mov
sub
mov
repnz
or
dec
or
adc
inc
into
jge
or
fmuls
popf
pop
repnz
into
lret
and
bound
aad
cmp
aaa
mov
xor
dec
inc
sub
data16
and
xchg
cmpsb
rorl
and
ds
lcall
pop
pop
fsubr
pusha
jbe
orb
fxsave
sbb
sub
shlb
call
cmp
lahf
repnz
clc
incw
cs
or
xor
movsl
jmp
out
je
xchg
mov
push
out
xchg
sbb
imul
rcl
mov
fisubrs
lock
loope
lea
std
lret
aas
sub
xor
gs
xor
fimull
push
in
xor
xor
dec
inc
jle
mov
xchg
and
imul
outsl
jge
lods
out
fstps
or
rorl
cmpsl
iret
addb
aad
cmp
aam
jno
add
add
loop
jb
sub
loope
mov
and
or
mov
cmc
out
into
std
mov
insl
add
jns
mov
outsb
xchg
ljmp
inc
rcl
xchg
sbb
fists
xor
push
pop
test
js
push
movsl
pop
cmpsb
test
scas
pop
lock
imul
rcll
jns
mov
fistpll
icebp
pusha
adcb
arpl
shlb
out
adc
aad
rolb
push
mov
frstor
jo
es
int3
mov
mov
sub
data16
or
inc
push
in
adc
xchg
adc
jl
lea
mov
mov
insb
jo
imul
sbb
mov
dec
add
test
add
mov
dec
pop
aaa
stos
jae
adc
cmp
dec
jl
cwtl
mov
adc
mov
cmp
loop
jmp
pop
aaa
lcall
pop
adc
repz
adc
or
aas
dec
stos
cli
add
fistps
out
mov
mov
mov
cld
mov
mov
jae
jb
xchg
gs
jmp
fdivs
push
or
jl
inc
loopne
outsl
lahf
in
xor
dec
test
adc
mov
adc
xor
cmp
mov
in
call
mov
loope
and
inc
fisubs
mov
out
hlt
lret
ja
mov
out
insl
mov
sbb
adc
jge
mov
fcomps
mov
fdivl
fidivrl
sub
cmpl
cmpl
pop
mov
add
inc
xchg
in
cmpsl
inc
add
imul
stos
xor
mov
sbb
in
mul
fwait
mov
mov
js
out
jp
rolb
es
data16
fcompl
or
adc
and
fcmovnb
shll
push
jle
andb
inc
sahf
inc
mov
mov
sub
testl
mov
hlt
cld
mov
rol
fwait
push
in
insb
stc
inc
sbb
outsb
insl
push
out
sub
xchg
xchg
jnp
into
mov
adc
dec
and
lret
pop
and
cwtl
dec
dec
cmp
push
loop
xor
andl
mov
dec
repnz
pop
dec
cmp
xchg
adc
jp
loope
sbb
int
add
xor
adcl
fistpll
xchg
sub
or
jb
mov
jge
mov
cmc
push
push
mov
test
adc
or
aam
push
jo
xchg
cwtl
sub
scas
pop
dec
lock
fildl
lds
mov
pop
add
jo
add
test
stos
adc
lahf
popa
std
popf
ja
dec
rcrb
sbb
aam
cmc
clc
push
lret
lahf
addr16
xchg
xchg
or
and
dec
stos
popf
aaa
cld
xor
jmp
pop
test
clc
add
ds
xchg
into
mov
scas
mov
add
push
lcall
cld
mov
mov
mov
out
adc
jae
jnp
sti
push
sbb
push
insl
add
xor
mov
xor
icebp
adc
fisubrs
push
xor
pop
xchg
push
rorl
mov
push
sahf
mov
andl
mov
sub
imul
inc
out
test
scas
or
rcll
jbe
cld
dec
ds
mov
or
inc
push
mov
or
arpl
repnz
xchg
sbb
push
divb
jno,pn
adc
inc
push
mov
divl
cmp
mov
loop
pcmpgtb
lret
dec
push
xlat
xchg
inc
xor
mov
sbb
clc
pop
ja
pop
or
leave
popa
sub
sbb
jecxz
sbb
ret
subb
insb
push
fmul
lds
or
adc
push
cmp
mov
and
gs
pop
aad
push
sbb
dec
jno
jmp
push
lds
or
adcb
shl
pop
ljmp
lock
gs
out
pop
stc
inc
fildl
or
mov
xor
dec
jmp
lahf
test
fdivr
aam
and
jl
push
clc
mov
mov
dec
push
mov
dec
cmpsb
arpl
aam
ret
je
ror
outsb
dec
push
mov
push
js
ja
and
jno
shll
cmp
mov
fiadds
leave
dec
dec
mov
push
sub
lret
icebp
pop
and
in
lahf
test
mov
ds
in
notl
inc
sub
mov
adc
sbb
stos
push
inc
or
xchg
lods
push
adc
test
ret
ds
fnstsw
ror
subb
mov
mov
shrb
lea
mov
or
jbe
sbb
pop
xchg
nop
sbb
scas
lock
jecxz
rcl
mov
mov
or
xor
testb
pop
int3
mov
mov
xchg
and
sahf
push
stos
lods
mov
scas
xor
ret
std
je
push
daa
icebp
cmp
daa
mov
pusha
sbb
mov
jg
out
insb
jnp
ret
push
cwtl
enter
cmp
push
in
pop
push
adc
ja
test
sub
mov
lret
dec
cmc
arpl
jb
lods
ljmp
xchg
int
cmp
pushf
xlat
push
clc
adc
add
jecxz
daa
arpl
sub
xchg
adc
sbb
daa
xor
pop
sbb
repz
mov
push
mov
mov
aad
adc
popa
dec
out
adc
add
or
push
mov
push
push
pop
xchg
scas
pop
imul
lea
stc
sub
dec
xor
sub
js
cmp
divb
jb
cmp
les
push
lock
mov
xchg
ds
movsl
xor
mov
insb
out
es
lock
stos
cmp
pushf
fisttpll
int3
xchg
mov
xor
xor
push
lahf
jbe
and
xchg
pop
mov
pusha
jb
jle
popf
and
lds
mov
pop
jge
aad
pop
jo
jnp
into
das
xchg
push
test
sub
stc
cs
aas
es
push
and
push
inc
cmp
in
jo
addr16
jo
cmp
dec
test
inc
pop
xchg
push
cmp
fstl
push
cmpsb
adc
hlt
insb
fbld
movsl
jnp
inc
aas
pop
push
loop
sub
sbb
lret
xchg
sahf
pop
ss
mov
pusha
jbe
lret
test
daa
dec
inc
testb
pop
inc
sub
lock
adc
sti
or
jbe
test
or
rorl
pushf
xchg
les
or
jmp
jnp
popa
lret
imul
loopne
in
hlt
mov
push
in
inc
mov
cmpsb
in
or
ss
jo
xor
xchg
push
sub
mov
ds
icebp
push
adc
cld
popf
das
or
popf
push
xor
rol
xchg
mov
mov
push
dec
inc
test
out
sti
rorb
inc
mov
adc
fisubrs
sbb
out
mov
negl
push
inc
cmp
inc
nop
jg
xchg
jb
loopne
dec
hlt
dec
fwait
lock
test
or
sub
jmp
adc
xor
ljmp
push
fsubrs
mov
xchg
pop
je
and
mov
clc
insb
or
nop
or
pop
jge
cmc
xchg
nop
sbb
mov
stos
mov
dec
test
insb
sbb
pop
add
nop
adc
and
daa
mov
out
jmp
aaa
xor
xchg
sbb
rol
ret
mov
cmpsb
mov
lret
add
scas
xor
rclb
add
xlat
inc
std
sub
mov
divl
xchg
push
xchg
pop
add
inc
fwait
movsl
imul
xor
sbb
push
sti
aaa
fstps
xor
and
les
dec
adc
mov
jl,pn
inc
nop
ficomps
pop
mov
insl
fiaddl
inc
push
inc
fisubl
loop
rcrb
leave
aad
shl
xchg
orb
test
sbb
pop
add
adc
pop
cmp
mov
xchg
fs
shl
xor
inc
movsb
scas
dec
icebp
ret
sub
in
stos
rorl
sub
fwait
jns
xchg
sbb
jmp
insl
pslld
out
mov
inc
mov
pop
jmp
sub
aas
push
mov
ficoml
or
fbld
cli
adc
push
inc
dec
xchg
icebp
sbb
mov
jg
sub
sub
insl
cwtl
jo
jg
mov
xor
pop
imul
or
popa
mov
in
call
pop
dec
lods
adc
cmp
adc
imul
ljmp
mov
xchg
icebp
jnp
jb
sarb
cmp
cmp
out
inc
stc
dec
dec
addr16
shrb
scas
mov
inc
gs
jne
jge
jae
mov
icebp
jp
or
lods
popa
sub
repnz
ja
push
cmpsb
arpl
or
mov
adc
adc
jl
cltd
or
jle
shrl
pop
mov
jmp
adc
outsl
in
xor
add
ficomps
addr16
push
or
mov
jge
push
icebp
mov
push
mov
mov
fs
loope
xor
jle
push
test
pop
test
lahf
pop
popa
out
mov
mov
xlat
jle
mov
std
pop
out
push
adc
pop
jle
inc
jb
insb
xchg
mov
cmp
jl
xorb
lods
cwtl
and
pop
inc
inc
dec
lds
mov
mov
pop
in
mov
lock
fldenv
fstl
clc
ret
jmp
repnz
mov
jnp
jg
xor
call
cli
int
jmp
jmp
adc
and
daa
push
mov
pop
mov
lea
pop
nop
dec
scas
pop
icebp
lods
mov
xor
adc
pop
adc
daa
cltd
add
mov
lea
dec
stos
mov
out
jcxz
cmp
sub
repz
test
loopne
push
movsl
inc
ret
lock
mov
out
in
mov
jmp
mov
repnz
rcrl
push
push
pop
test
mov
cmpsb
inc
aad
aas
xchg
cli
enter
ss
bound
lock
maskmovq
mull
mov
sbb
mov
adc
sahf
outsb
adc
xchg
aad
in
inc
jg
lcall
das
shl
ret
aad
pop
std
insb
insb
mov
sbb
jb
inc
pop
stc
mov
data16
add
stc
in
movsl
sbb
in
dec
sbb
adc
xchg
adc
mov
pop
inc
aam
xlat
es
push
fxch
pop
inc
leave
sub
adc
popf
xor
fnstenv
sub
lcall
outsl
fs
into
rcl
fdivp
mov
and
push
test
xorw
popa
cmpsl
sub
imul
in
dec
add
repnz
sahf
sub
add
ret
test
mov
sbbb
lcall
pop
mov
dec
cwtl
out
imull
mov
xchg
jb
stos
cmp
jae
scas
lock
repz
lods
test
outsl
or
in
stos
aam
sbb
ds
jle
cmp
xor
xchg
mov
test
test
scas
je
jecxz
mov
xchg
push
into
jg
add
es
out
out
mov
jno
loope
repnz
movsl
and
popf
adc
and
and
into
inc
pop
mov
xchg
loope
push
call
and
lds
fildl
ss
push
mov
notb
or
into
mov
imul
jns
arpl
sahf
in
ljmp
cmp
pop
pop
add
sub
test
lcall
in
and
push
mov
and
inc
cli
inc
push
lea
cmp
gs
into
in
sbb
fs
adc
or
xor
stos
sahf
out
rolb
adc
or
xor
out
pop
mov
call
outsl
fstps
jle
shlb
mov
push
jne
pop
je
imull
lods
push
sarb
out
dec
pushf
mov
sub
ja
sub
dec
pop
cmp
lods
and
aam
sbb
mov
into
or
sub
lea
jle
mov
mov
inc
test
inc
or
fs
repnz
or
bound
jle
pop
in
fwait
inc
lret
dec
cld
hlt
add
fsts
pop
popf
mov
push
testl
adc
and
push
aam
sbb
jg
enter
dec
mov
add
adc
jmp
cmpsb
mul
stc
dec
sub
mov
hlt
popa
ljmp
cs
xor
loopne
sbb
fildll
push
add
pop
and
add
sti
xchg
movsl
push
xchg
aam
arpl
add
xchg
and
pop
in
or
or
mov
std
lods
dec
pop
xor
add
mov
and
jge
mov
pop
sub
cmp
sbb
lods
in
xor
xchg
jo
pop
imull
xor
test
xor
cmp
rolb
fisubrl
or
repz
lea
mov
leave
rorl
pcmpeqb
mov
cld
ljmp
rcl
ss
ss
in
fldl
jle
bound
inc
in
pop
mov
jo
jl
imul
into
mov
shrl
dec
inc
push
ss
test
pushfw
int3
push
notb
sub
add
icebp
loopne
bound
insb
jle
jo
dec
gs
cmp
mov
daa
dec
pop
ficoml
dec
pop
mov
or
push
bound
inc
dec
sahf
inc
fs
lea
aam
frstor
repz
stos
stos
xor
mov
inc
sbb
push
xorb
jbe
or
sub
enter
imul
lods
pop
cmpsb
hlt
enter
mov
sti
jae,pt
dec
aad
shrl
push
mov
xor
sub
scas
in
jecxz
lahf
sub
cs
in
jnp
inc
minps
sbb
push
fwait
cli
mov
jb
lret
jge
or
rolb
add
jne
sbb
outsb
mov
rorb
ds
test
ds
xchg
icebp
in
ljmp
stos
mov
jg
xor
js
adc
xchg
jecxz
push
daa
pop
cmp
test
xchg
jecxz
sub
jo
int3
add
scas
mov
nop
mov
xor
adc
and
jnp
ds
mov
xchg
out
dec
iret
fnstsw
adc
inc
sub
add
adc
inc
fstpl
lret
jmp
jns
stos
adc
xlat
test
mov
jb
test
mov
push
mov
add
mov
out
lock
push
fdivs
push
sti
iret
lea
jae
sub
push
push
rcrb
pop
pop
into
sbb
inc
loopne
jl
xor
pop
mov
and
and
lret
and
xchg
inc
movsb
and
mov
mov
push
jmp
sbb
jbe
jp
inc
pop
rcrl
sbb
es
pop
repnz
cmp
or
and
movsl
mov
add
sub
dec
xchg
je
jmp
loopne
fcoms
inc
push
jp
sbb
fistpll
mov
stos
add
dec
dec
fs
jne
jb
aas
mov
fsubr
sbb
lahf
jle
cs
mov
repnz
push
int
xchg
int
aas
ja
jne
sub
pop
xor
mov
pop
cs
or
dec
xchg
test
mov
xor
mov
fstpl
test
push
clc
xchg
rcll
cmpsb
xchg
shr
mov
xchg
add
les
bound
pop
movsb
mov
mov
sbb
loopne
inc
adc
imul
mov
loope
inc
dec
dec
push
dec
test
xchg
cmpsl
jle
rorb
test
sbb
daa
shlb
mov
inc
outsb
inc
enter
and
ret
jg
cmp
xchg
out
pop
add
xchg
scas
test
les
xor
les
out
mov
jno
and
aas
movsb
add
or
in
outsb
adc
jmp
scas
das
jnp
dec
cli
dec
mov
sub
popl
mov
fsubl
sbb
adc
in
fsubp
ds
sbb
out
jb
and
sub
or
cmp
fisubl
add
mov
pop
into
jae
decl
bound
aad
cmp
adc
das
mov
cmp
divb
adc
rorb
or
pop
repnz
fstpt
add
mov
mov
insl
mov
roll
in
xchg
test
shll
insl
insl
ds
push
jmp
pop
outsb
js
and
pop
fwait
das
mov
ret
push
dec
xchg
inc
push
or
out
mov
test
lods
xchg
fsubp
imul
shr
pop
mov
repnz
add
push
and
sahf
fisttpl
sti
idivl
lock
sub
rcrb
mov
repz
mov
shll
sbb
dec
pusha
loopne
mov
stos
aaa
ljmp
popf
sbb
xlat
movsb
mov
cwtl
sbb
aaa
add
enter
and
js
aad
out
test
add
fldenv
mov
sub
addr16
sbbl
xchg
jmp
mov
xchg
cltd
cmp
pop
call
sti
mov
pop
rolb
lods
movsl
or
ret
rcrl
jo
push
in
ja
inc
icebp
jo
and
xor
adcb
adcb
pop
sub
int
out
push
inc
dec
fadds
loopne
or
in
inc
and
dec
xchg
repz
loope
loope
outsl
jbe
adc
or
mov
sbb
sub
aad
mov
cs
sti
mull
mov
bound
rorb
jbe
inc
inc
push
movsb
lret
fiadds
jb
aad
imul
mov
lret
sbb
je
sub
rol
jg
stc
jge
inc
movsl
mov
lahf
push
sbb
shrl
push
mov
xor
adcl
pop
je
or
mov
pusha
movsb
mov
pop
jge
int
daa
jae
pop
lcall
mov
sub
pop
push
dec
mov
and
add
jae
jecxz
pusha
push
mov
xlat
dec
clc
push
inc
fcompl
idivl
arpl
cmpl
sub
push
lds
sub
sarb
xor
push
fs
jl
sub
into
jo,pn
stos
bound
icebp
mov
movsl
jmp
int3
lods
or
mov
adc
ss
push
cmp
ds
sbb
outsb
adc
mov
jmp
arpl
loopne
in
pop
hlt
jae
jbe
mov
icebp
push
mov
cmp
add
fs
cld
mov
lret
mov
dec
xor
scas
icebp
jmp
lock
repz
mov
sub
in
out
cwtl
jg
rcll
in
sub
gs
dec
cmpsl
pushf
cmp
dec
mov
inc
xchg
sar
iret
inc
enter
js
add
bound
lods
push
sar
mov
movsl
frstor
sub
jne
sub
sub
or
cmpsl
cmpsb
cmp
mov
int
ds
scas
cltd
loopne
mov
jno
pushf
mov
cmc
mov
and
mov
sub
int
rcrb
incl
loop
popl
scas
mov
lds
push
idivl
aas
jg
sbb
inc
mov
push
xchg
ja
mov
sbb
in
cs
fcom
mov
push
orl
loop
je
stc
jl
and
cltd
stos
ficomps
xorl
mov
sub
lret
add
pop
sub
scas
jle
inc
icebp
push
nop
jg
lcall
dec
dec
xorb
lcall
and
lahf
outsl
mov
jge
mov
mov
xchg
leave
inc
cmp
aam
jo
aad
lock
subb
fdivr
inc
cwtl
sahf
mov
push
js
fstl
pop
mov
jl,pn
cmp
movsb
mov
xchg
xchg
or
mov
push
repnz
xor
clc
jl
jle
shlb
lods
cmp
sub
pop
mov
rcrb
in
dec
rcrb
popa
mov
fs
dec
xor
dec
jno
mov
fwait
or
lret
mov
stos
movsb
sub
cmc
mov
mov
pusha
lahf
loope
dec
cmpsl
inc
popf
push
test
xchg
nop
mov
sbb
neg
in
add
aam
fwait
sub
inc
fldt
cwtl
cmpl
mov
int3
push
cld
jo
push
sarb
add
xor
ret
mov
dec
sbb
mov
inc
popa
jg
mov
and
add
cmp
mov
and
arpl
xchg
jge
dec
mov
aam
cmp
jb
cmc
xchg
fwait
mov
fwait
jecxz
mov
rclb
push
push
adc
mov
jne
pop
add
jae
or
sti
or
push
addr16
xchg
jp
dec
pop
mov
in
jb
test
cmp
test
out
fsubp
in
jns
arpl
lret
jmp
enter
arpl
outsl
nop
dec
test
addr16
fldcw
addr16
xchg
pop
xor
pop
pop
cltd
sub
clc
sub
push
shll
cmp
ljmp
fsubl
xchg
idivb
test
sub
fwait
nop
in
add
rorl
push
ret
jmp
mov
xchg
ja
inc
xor
mov
roll
inc
js
push
int3
fdivs
imul
xchg
in
testl
push
movsb
loopne
cmp
xchg
out
push
sbb
mov
mov
clc
xchg
outsb
and
sbb
push
xchg
mov
int
je
es
aam
push
ljmp
or
pusha
mov
aam
cmpsl
cmpsl
movsl
jp
jmp
enter
popa
pusha
aam
icebp
dec
lods
adc
cltd
in
stos
adc
test
mov
cs
stos
jb
out
test
fwait
pop
fcmovb
popa
mov
and
in
add
ret
mov
jecxz
cmp
je
pop
sbb
jnp
push
test
gs
or
add
ljmp
sub
push
shrl
shrl
call
push
or
fisubrl
push
pop
push
mov
or
mov
cmp
sub
xor
stos
decl
push
mov
aaa
daa
fstl
outsl
pop
je
pop
out
mov
sti
mov
into
in
mov
push
insl
dec
int3
mov
inc
lock
inc
inc
pushl
pop
pop
xlat
sub
nop
mov
cli
xor
and
lahf
xor
add
dec
adc
int3
scas
mov
push
je
shll
stc
das
mov
sub
inc
pop
icebp
imul
stc
test
mov
inc
std
ja
xchg
jne
iret
divb
orb
cmp
sahf
ja
cld
mov
out
mov
cmp
jge
dec
sub
mov
in
sbb
jge
pop
in
flds
cld
mov
cmp
popf
in
daa
call
in
push
jecxz
and
jg
mov
push
inc
dec
push
rclb
lret
push
push
aaa
aad
shrb
hlt
test
inc
mov
jne
shll
dec
jb
rolb
xlat
mov
adc
ds
int3
sub
xchg
push
xchg
or
out
movsl
std
rorb
imul
push
cmp
cwtl
lret
idiv
out
aas
add
jnp
outsl
movsb
fiadds
into
andb
xor
fsub
imul
in
cmp
fmul
jg
sub
mov
rcr
das
jnp
push
dec
inc
jecxz
in
dec
pop
cmp
clc
sub
pop
in
fisubrs
dec
pop
adc
lahf
enter
or
scas
or
adc
fistps
out
xchg
jae
mov
jmp
xchg
out
pusha
mov
fcmovu
loop
sti
mov
fisubl
repnz
imul
cmp
das
mov
xor
xrelease
scas
xor
cmpsl
sbb
mov
sub
cmpsb
cmp
dec
mov
cld
into
out
cmc
push
sub
std
mov
scas
jb
test
out
cmp
and
insb
cmp
inc
cmc
mov
dec
push
gs
fs
push
pop
push
shl
xor
push
test
sbb
lcall
push
mov
ja
in
sub
cmp
neg
mov
sub
jl
test
pushf
in
lods
jns
mov
mov
iret
adc
or
pop
mov
xchg
pop
pop
shrl
cmpsl
loope
mov
hlt
and
and
stos
adc
sub
add
sti
ret
fstpl
mov
in
xchg
lods
push
ret
sbb
mov
cmp
addr16
mov
cmp
insl
shr
test
adc
aas
vmovntdq
push
pushf
sbb
cmp
mov
scas
mov
sub
mov
adc
mov
mov
sbb
adc
outsb
xchg
enter
shll
lds
cs
mov
xchg
ljmp
adc
jnp
mov
addb
addr16
mov
cmp
inc
jecxz
gs
dec
shlb
push
int
push
insb
add
mov
mov
in
into
out
repnz
jo
dec
lcall
sbb
test
sbb
push
push
mov
inc
scas
xor
add
sti
jnp
jno
lcall
fnstcw
fdivp
pop
fcmovnbe
clc
mov
fs
lea
or
icebp
pop
call
imul
mov
pop
jp
cld
xor
in
das
push
or
test
dec
inc
inc
roll
je
mov
xor
pop
mov
mov
loope
sbb
ret
push
sbb
imul
test
push
push
into
std
cli
repz
cs
lods
jns
mov
and
cmp
and
pop
fistpll
cltd
add
mov
mov
push
test
enter
insb
adc
int
jl
leave
push
addb
xor
das
pop
xor
nop
and
int
sahf
popl
jecxz
push
aaa
lods
rclb
insb
add
mov
pusha
xor
mov
push
fbstp
push
mov
int
inc
jmp
mov
clc
xor
scas
rclb
pop
mov
int
add
mull
sbb
dec
push
mov
jl
xchg
loopne
and
stos
hlt
xor
xor
roll
xor
adc
lret
mov
loope
jmp
jg
pop
inc
and
fldl
jbe
xlat
sub
test
adc
les
mov
xchg
int
and
loop
sbb
xlat
fnstenv
imul
jb
fisubl
ds
cli
pop
push
jnp
cmp
inc
xchg
sbb
je
das
out
test
call
pop
jg
stc
add
lods
adc
shr
fsubs
scas
data16
xor
inc
cmp
insb
jecxz
stc
dec
clc
roll
lods
push
repnz
fdiv
add
out
push
andl
shl
or
inc
cmp
lods
add
in
int
cmp
les
xchg
jo
sub
mov
and
adc
push
outsb
push
sahf
mov
jo
loope
in
mov
out
call
fisubrl
inc
arpl
cmp
gs
sbb
push
jp
pusha
imul
fwait
ds
mov
inc
sbb
fstps
nop
popa
jbe
push
ljmp
bound
push
lret
test
fstp
out
push
fcoml
fstl
popf
fmul
jmp
mov
jg
or
or
inc
inc
jg
sbb
out
inc
ljmp
pushf
stc
push
jmp
mov
fidivl
xchg
data16
mov
jle
push
jl
pop
int
lahf
dec
ss
cmp
sbb
dec
mov
leave
jg
mov
stos
int
push
incb
xorl
scas
hlt
shll
lcall
pop
lret
sbb
movsl
data16
ficoml
cmp
mov
cmp
pop
rclb
push
shll
pop
mov
sbb
insl
push
data16
imul
sub
cmp
sub
loope
jle
lret
jo
fdivrs
cmp
cli
test
push
ljmp
pop
push
hlt
jae
pop
jle
xchg
inc
add
sub
mov
push
loope
push
ffreep
pop
stc
push
dec
mov
fdivs
lret
pushf
ficoml
out
and
push
ds
push
dec
lds
stos
mov
out
sub
jbe
sub
adc
jl
lret
lahf
add
xor
jmp
dec
xchg
lock
inc
notl
sbb
mov
add
scas
sub
repz
xchg
jmp
mov
jo
inc
jbe
and
outsb
das
cs
ljmp
in
dec
movq
push
adc
pop
loop
fiaddl
lods
jno
into
sub
adc
sub
sub
test
inc
aad
jg
or
fsubl
fisttps
or
fdivr
jo
or
and
adc
or
rcr
popl
xor
imul
jg
sub
ss
fwait
mov
jo
or
ds
xchg
add
xchg
das
mov
pusha
sub
pushf
pop
scas
fucomip
mov
shr
sti
in
clc
fildll
mov
mov
addr16
inc
push
adc
lcall
adc
xchg
pop
fwait
outsb
jmp
aaa
dec
loop
or
pop
mov
add
adc
cmp
fldt
cmp
iret
adc
outsl
and
pop
dec
jns,pn
mov
js
xor
imul
sub
pop
mov
mov
jns
clc
aas
data16
cmpsl
or
sub
or
mov
movsb
push
mov
mov
adc
push
icebp
dec
lea
mov
mov
xchg
dec
mov
adc
mov
inc
jle
xlat
fnsave
push
mov
jmp
fldcw
in
fucomi
xor
mov
jno
dec
popf
and
cs
not
sti
into
in
and
xorl
cmp
dec
testb
xor
add
dec
mov
loopne
test
pushf
lret
aaa
arpl
jne
mov
jecxz
outsb
dec
pop
stc
in
out
fwait
jae
rcrb
loop
je
add
insb
pop
cltd
xchg
mov
notl
sub
in
test
jmp
xchg
cld
push
fstpt
dec
ret
pop
aam
out
mov
cmp
insb
iret
lret
addb
stc
imul
lds
push
and
add
sub
mov
jecxz
cmc
and
pushf
cmp
cmp
xchg
in
enter
inc
fwait
add
mov
push
jae
ret
and
lret
add
jle
lods
enter
jg
mul
adc
in
and
jle
mov
sbb
xor
jl
lcall
dec
push
mov
mov
rcrl
jb
sub
xchg
dec
dec
clc
outsb
ljmp
adc
int
xchg
inc
clc
test
orl
pop
sbb
cmp
in
sahf
out
imulb
ret
iret
in
gs
push
cmp
orl
sub
jp
inc
add
rcrb
cmc
pop
pop
addr16
lods
lods
les
add
mov
pop
add
xchg
jge
xchg
mov
xchg
pop
icebp
push
push
add
rcrl
ja
ss
fstl
xchg
fiadds
inc
or
fidivrl
mov
popa
cli
mov
inc
pop
data16
outsl
inc
dec
push
movsl
cmp
test
jns
mov
fistl
std
mov
rcll
xor
jo
jb
mov
mov
rol
mov
pop
mov
xchg
test
int
out
xchg
jbe
stc
jbe
adc
jnp
gs
dec
xor
dec
inc
mov
sbb
rcrb
cmc
sbb
mov
jecxz
hlt
or
inc
in
mov
push
mov
push
dec
mov
aaa
mov
les
xchg
dec
jb
les
cmp
xor
mov
dec
mov
aad
nop
dec
imul
fisubrs
cmp
out
mov
sub
shrl
dec
in
ror
out
push
sub
jne
cmc
es
mov
scas
idivl
test
and
fdivl
loop
pop
into
test
rcl
xor
lds
je
cltd
lea
sbb
adc
push
xchg
xor
mov
in
cmp
lods
cmpsl
inc
pop
mov
and
xchg
inc
or
pop
cltd
ret
jmp
jns
mov
mov
pop
ds
jecxz
dec
or
push
add
mov
inc
xchg
and
dec
stos
mov
pop
sarl
mov
mov
jle
jle
xchg
add
gs
movsl
shlb
xor
cltd
mov
jp
fidivrl
mov
jno
pop
shrl
jb
stos
out
push
xor
in
fxam
jb
loop
shrb
push
pusha
cmp
fldcw
fdivs
hlt
ljmp
adc
rcll
push
dec
sub
fs
scas
lock
xchg
cmp
nop
xor
loopne
testl
xchg
fildl
cli
sub
shlb
mov
add
in
repnz
pop
cmpsl
inc
ffreep
sbb
pushf
popf
dec
clc
test
ljmp
outsl
je
call
out
and
mov
push
mov
and
jae
adc
std
xchg
cmp
ja
mov
mov
ja
push
aam
mov
xchg
sub
xchg
jno
jbe
clc
push
sub
and
fdivl
mov
out
rorb
adc
mov
outsb
jmp
in
pop
insl
jmp
or
and
mov
or
into
adc
lea
xor
scas
call
pop
add
sub
cmp
mov
xchg
insb
into
pusha
je
hlt
jae
int
pop
and
add
ljmp
lea
ljmp
and
mov
mov
in
in
adc
ds
notb
mov
out
push
and
inc
ret
jp
in
ss
imul
mov
push
xlat
stc
fmuls
stos
jge
push
lds
push
push
add
mov
adc
pop
and
adc
pop
push
ret
popf
arpl
fnstcw
inc
call
push
ds
or
or
cmp
pop
leave
out
jo
je
popf
test
and
int
add
dec
xchg
inc
or
dec
mov
mov
nop
shrb
inc
js
out
fwait
sbb
addb
xor
imul
mov
mov
addr16
add
cmp
jecxz
out
pop
push
mov
mulb
cmpsl
bound
cmp
pop
mov
stos
sub
sti
movsb
out
stc
or
pusha
scas
aas
shll
pop
jo
inc
outsb
adc
cmpsb
add
clc
inc
mov
in
jge
cltd
sbb
stos
repz
stos
push
out
int
sbb
jge
jne
cwtl
sbb
inc
xlat
inc
inc
out
mov
bnd
push
fnsave
dec
mov
mov
adc
lret
shlb
or
or
add
jmp
orb
sub
adc
add
sub
cld
arpl
mov
xchg
or
incl
mov
xor
xor
outsb
scas
adc
out
icebp
aaa
lock
push
add
hlt
lods
and
jp
cltd
xor
dec
loop
jge
sbb
adc
stos
clc
fisubrs
pushl
jle
sbb
add
in
xchg
mov
insb
mov
test
in
testl
inc
cmpsl
negl
fbstp
das
addr16
mov
mov
sti
cmc
or
leave
repnz
in
call
lds
jae
or
or
mov
adc
cli
or
aad
pushf
ljmp
gs
int3
sbb
popa
jle
jmp
and
loope
add
loope
push
and
sahf
xchg
dec
jne
mov
mov
das
lea
ljmp
add
aad
mov
scas
xchg
test
subl
cs
faddl
cwtl
cmpsb
mov
mov
cltd
aas
fistpl
mov
movsb
mov
test
lret
test
cmc
es
test
fs
scas
fs
cmpsb
std
jno
push
adc
shrl
pushf
aam
add
push
pop
ja
add
adc
out
inc
test
sub
jge
mov
aam
add
mov
jl
repz
adc
mov
ljmp
pop
xor
inc
pop
push
imul
and
jecxz
adc
jg
loope
mov
scas
into
mov
int
cmpsb
cmc
pushf
lahf
fldcw
scas
lret
inc
mov
dec
in
andb
push
xchg
adc
or
xchg
dec
shrb
xor
inc
dec
mov
mov
cmp
push
mov
out
aaa
mov
enter
loop
sub
cmp
adc
sbb
push
pop
xlat
inc
adc
sti
xchg
xchg
in
push
notl
push
xor
data16
dec
inc
rol
fucomp
jg
mov
aas
subb
cld
jno
add
push
testl
sarl
adc
jno
inc
pop
add
les
mov
leave
imull
imulb
sbb
push
dec
xor
xor
xchg
add
aam
push
shlb
into
adc
jmp
jns
inc
ret
jecxz
mov
fs
mov
xchg
mov
les
leave
or
and
xor
or
or
dec
sbb
jmp
mov
dec
int3
out
test
mov
pop
lock
push
cmc
pushf
mov
fiadds
sbb
add
bound
gs
into
xlat
rorb
push
fwait
ljmp
in
icebp
test
add
cmpsl
popf
dec
jl
pop
cli
dec
stos
jae
pop
ja
mov
add
les
xchg
mov
mov
loop
ret
sar
jmp
fwait
add
jne
outsl
mov
sbb
sub
adc
pop
pop
andl
cltd
sub
xor
mov
adc
xor
sub
add
cmpsl
loop
mov
and
xchg
js
lock
cwtl
add
add
inc
inc
fwait
mov
jge
insl
filds
sub
xchg
out
dec
jmp
jle
mov
push
shll
daa
jle
dec
sbb
mov
xchg
pop
pusha
outsl
sub
ret
xor
in
mov
sti
addr16
and
cmp
add
cltd
dec
pop
xchg
or
adcl
dec
repz
movsl
jo
adc
sub
push
popa
in
push
jecxz
imul
push
xchg
dec
lea
mov
mov
stc
out
lods
adc
es
in
push
iret
inc
sahf
insb
es
sbb
aad
outsb
sbb
sahf
mov
daa
rcr
push
mov
clc
xor
inc
inc
out
mov
jae,pn
sbb
adc
insl
loopne
call
jle
push
inc
cltd
popa
das
lret
xor
jo
pop
adc
jno
mov
xorl
xlat
rcr
loop
sbb
incl
hlt
sub
int
testl
xor
mov
dec
setno
aaa
push
dec
fadds
in
mov
lcall
cmp
in
adc
mov
arpl
xor
mov
push
and
mov
ss
mov
jmp
cltd
enter
push
jecxz
inc
push
add
push
xchg
jae
fcmovnb
in
movsb
or
push
push
out
mov
bound
add
jge
and
leave
pop
scas
test
pop
icebp
xchg
inc
push
roll
fsubl
pop
sub
pusha
or
mov
mov
push
mov
pop
and
push
sub
mov
jecxz
cmpsl
push
icebp
sub
and
adc
mov
loopne
ja
adc
dec
rol
mov
pop
bound
push
lods
push
xchg
inc
cmp
out
stos
mov
les
sbb
xor
outsl
das
push
adc
shll
js
and
adcl
mov
insb
shrb
insb
pusha
div
cmp
scas
test
imul
lds
pop
lahf
scas
es
les
cltd
jecxz
mov
xchg
cmc
xor
in
add
sub
or
mov
push
add
jl
mulb
mov
pop
and
mov
jns
icebp
cwtl
adc
jne
cltd
xchg
or
fwait
imulb
mov
push
xchg
xor
aam
scas
xchg
push
std
insb
sbbl
jo
sub
sbb
ss
lods
sub
loope
jecxz
jns
mov
add
or
xor
int3
cmp
xchg
add
cli
cmpsl
in
pushf
shrl
sahf
pop
ret
cmc
std
sub
lods
rolb
lds
inc
cmp
inc
xor
inc
inc
andb
pop
and
jbe
outsb
mov
jne
pop
cmp
dec
xchg
test
out
adcl
cmp
adc
loopne
outsb
mov
stos
cmp
fldenv
dec
inc
and
or
rcrl
loopne
je
dec
divl
mov
mov
jge
loop
in
stos
fbstp
pop
leave
xchg
or
sbb
xor
cmp
mov
shrb
outsb
leave
xchg
cltd
stos
popf
xlat
or
out
push
inc
dec
movsl
adc
ds
divl
inc
rcl
pop
jecxz
ljmp
and
pushf
int3
mov
and
fwait
in
movsb
lret
out
lcall
jmp
mov
test
mov
add
and
lea
lds
fistps
test
adc
dec
mov
cmp
rorb
mov
iret
orl
pop
push
mov
mulb
jne
and
inc
and
cli
cmp
ret
xchg
inc
push
mov
xchg
and
push
pusha
loope
inc
push
dec
or
mov
mov
cmp
mov
push
nop
in
cwtl
rclb
add
adc
jmp
and
out
adcb
scas
mov
mov
cltd
loope
aam
dec
sbb
add
movsb
loope
xchg
leave
mov
addr16
pusha
repnz
lea
push
mov
pusha
ds
bound
xor
xchg
icebp
scas
jns
mov
pop
or
daa
pushf
or
xor
inc
jle
pushf
aam
dec
cwtl
xchg
and
jmp
ret
je
inc
fwait
mov
aaa
push
ds
xor
mov
push
inc
and
mov
add
icebp
mov
adc
imul
jle
mov
mov
pop
rcll
and
fsts
data16
mov
inc
and
mov
mov
inc
pop
jo
jecxz
pop
data16
je
stos
and
outsl
fcmove
and
pop
sbb
lods
mov
ja
daa
and
test
dec
mov
inc
pushf
mov
dec
mov
addb
lcall
aaa
mov
test
or
sub
push
cs
in
add
sbb
dec
adc
mov
nop
into
inc
hlt
cmp
push
mov
dec
push
vrsqrtss
adc
sbb
mov
jg
jmp
jl
into
jbe
or
outsb
iret
scas
pop
lods
sub
test
fs
int
dec
xor
cmpsl
nop
fwait
inc
xor
stc
pop
xchg
cmc
mov
mov
scas
nop
repz
scas
inc
bound
shll
adc
jne
popa
xlat
cmp
rclb
sub
jo
jmp
clc
sti
sbbl
jl
dec
and
sbb
push
pop
stos
inc
and
mov
xchg
xorb
clc
lret
leave
loop
adc
or
scas
rcll
aaa
out
mov
aas
adc
inc
dec
arpl
dec
in
jg
dec
xchg
xlat
jno
jns
test
xor
mov
scas
xchg
into
fcmovu
jae
scas
lret
cmp
lret
mov
loop
mov
adc
outsl
leave
lods
mov
push
pop
sbb
mov
int
xchg
lea
scas
mov
outsb
jmp
mov
mov
fs
lods
dec
fcompl
loopne
mov
pushf
dec
lds
push
mov
dec
cmpsb
movb
sbb
adcl
dec
cmpb
negb
mov
aaa
stos
pop
pop
mov
sub
add
and
jle
adc
notb
or
mov
sub
jl
jp
inc
imul
inc
lret
lcall
inc
mov
jne
push
lods
sarb
std
dec
mov
popa
lock
ljmp
out
lock
and
lds
imul
inc
data16
imul
xor
inc
mov
mov
stc
cmp
es
sub
pop
or
sbb
dec
jge
xor
movsl
add
xchg
test
sarb
cs
xor
cmp
push
sti
ja
lea
and
inc
sbb
test
dec
sbb
mov
and
add
mov
xchg
cmp
cwtl
push
cmp
ret
push
mov
aas
icebp
mov
xchg
and
stos
aaa
jno
inc
fisttpl
dec
js
repz
jp
mov
cwtl
cmp
or
movsl
pop
and
inc
loopne
les
xor
repz
dec
lods
adc
jo
push
jecxz
mov
insb
push
in
sahf
paddd
icebp
fcomp
scas
aam
pop
ds
or
out
stos
push
cmp
adc
loop
movsb
inc
mov
gs
fldl
rorl
pop
inc
pop
in
jg
movsb
in
hlt
lock
stos
inc
mov
leave
nop
out
rolb
xchg
mov
cmp
add
jmp
push
xchg
sub
ret
insb
mov
dec
push
hlt
sbb
push
insb
mov
push
push
out
pop
sbb
mulb
sub
mov
xlat
addr16
xor
stc
jns
mov
adc
sbb
fldcw
or
test
mull
pop
inc
aad
pop
sub
js
jl
cltd
das
xchg
mov
jne
sub
mov
add
sbb
mov
push
lods
dec
xchg
imul
add
pop
lods
dec
dec
add
insb
stos
int3
fimull
push
or
fildl
mov
rorl
out
ret
fwait
dec
cmpsb
cs
push
cmc
pop
push
inc
data16
and
pop
mov
pop
fsubr
sub
adcl
bound
mov
xor
jno
inc
xchg
cmp
cmpsb
xor
insb
out
std
sbb
lods
cltd
out
aad
or
or
mov
ljmp
push
jl
xlat
mov
les
cmp
jbe
push
das
test
lods
sarb
cmpsl
mov
adc
mov
test
inc
sbb
or
dec
push
sbb
sbb
or
xchg
lcall
push
lret
inc
cld
fwait
add
dec
dec
mul
ficompl
inc
cmp
pusha
fisttpll
stos
and
call
or
jb
xchg
jb
ljmp
in
sub
fidivs
icebp
jne
sbb
jae
cwtl
xchg
xor
in
out
dec
int
insb
mov
mov
sbb
loope
test
nop
lahf
pop
push
gs
enter
pop
ret
stos
pushf
repz
lea
lret
pop
xchg
shr
and
add
aaa
cmp
stos
sub
push
pop
xor
imul
jp,pt
pop
push
loopne
pop
mov
ficompl
loop
jne
mov
add
xor
jp
sbb
sti
outsl
enter
cmpsl
aas
outsb
rclb
mov
pop
ret
lock
aam
push
adc
add
shll
mov
pusha
test
mov
idivb
gs
cmp
sbb
jo
test
mov
dec
inc
adc
loope
xor
les
inc
push
fdivp
xchg
lods
push
adc
icebp
mov
add
enter
stos
inc
lcall
lods
xchg
cmpsb
shrl
insl
inc
out
mov
scas
mov
mov
sub
addr16
mov
fwait
pop
lret
add
jae
inc
adc
ljmp
gs
lahf
sbb
lds
in
add
push
push
push
jge
dec
rcll
and
jle
mov
test
aam
add
adc
lahf
xor
stos
sub
lods
data16
roll
in
cmp
aam
fs
dec
mov
ss
lods
imulb
sub
rorb
lods
mov
adc
mov
and
push
pushf
lods
mov
arpl
jl
pop
jg
pop
cmp
rclb
lret
pop
inc
sbb
mov
test
lret
movsl
xchg
mov
adc
out
shl
test
adc
jno
repnz
insl
js
xchg
lcall
int
cmp
push
out
daa
or
orl
pop
cwtl
out
jne
test
test
sbb
idivl
add
xor
cmp
xlat
push
xor
pop
andb
xor
aad
ret
lock
neg
outsb
sbb
sub
mov
mov
mov
push
out
mov
sub
shlb
mov
es
mov
mov
xor
push
lods
jmp
push
dec
fmul
pop
mov
and
mov
xor
push
negb
lods
push
roll
bound
lods
stc
xchg
sbb
gs
pop
dec
mov
cmp
sbb
je
jge
jo
ljmp
sti
jle
negb
jne
ljmp
cli
test
std
xchg
add
mov
pop
cmp
leave
push
pushf
lock
sbb
loope
or
mov
mov
mov
lea
seto
cmp
sbb
outsb
push
sbb
mov
xchg
adc
fdiv
jmp
insl
cld
sub
pop
and
mov
jne
pop
icebp
dec
outsb
sbb
sub
sub
faddl
sub
adc
xchg
fildll
dec
add
xchg
sbb
or
sbb
shl
inc
cmp
in
popa
pop
outsl
mov
mov
dec
stc
mov
add
dec
int3
decb
mov
jno
push
les
ret
negl
jl
loope
les
sbb
cmp
adc
out
cs
aam
popa
add
rcr
jge
mov
inc
push
cltd
pop
jne
xor
add
xlat
sub
scas
mov
cwtl
loope
and
out
mov
mov
ja,pn
fidivl
std
xchg
adc
cmp
pop
jmp
arpl
insb
inc
outsl
test
insl
adc
pop
and
sub
les
outsl
int
add
xor
add
cltd
cmp
scas
push
sahf
mov
ds
cmp
mull
add
in
cmp
mov
mov
daa
or
sbb
mov
imul
or
xchg
je
das
in
dec
jecxz
xchg
shl
mov
daa
sub
inc
sub
push
cmp
jbe
subl
addr16
cli
dec
pop
insl
or
xchg
rcrl
fcomi
jae
ss
mov
inc
cld
xchg
lds
mov
pop
push
arpl
pop
cmpsl
daa
push
and
xchg
mov
mov
push
sub
or
mov
mov
add
mov
mov
add
clc
jno
jle
sar
cmp
addr16
enter
xchg
cli
pop
pushf
negl
inc
sti
aam
call
fnsave
rcrl
pop
lcall
addb
imulb
push
sub
out
in
jge
mov
ja
add
cmc
clc
mov
mov
pop
lahf
lods
cmp
adc
loop
cmp
lcall
pop
or
int
dec
sbb
mov
adc
mov
imul
mov
ljmp
pop
mov
jns
push
nop
pop
nop
adc
aaa
icebp
addr16
inc
xor
std
dec
lcall
in
push
mov
leave
lods
or
js
sahf
or
out
sbb
push
inc
test
sub
movsb
ss
in
rorl
pop
sub
and
test
leave
or
mov
repnz
in
inc
push
mov
cmp
fmul
fwait
push
jno
dec
jno
add
inc
sub
xor
dec
or
ja
mov
adc
subb
pop
fisttps
add
or
out
and
xchg
sbb
sahf
bnd
add
mov
add
push
mov
lods
shlb
xor
loopne
pop
dec
pop
xor
ret
stos
mov
lea
cmp
js
sub
lea
pop
sbb
or
pop
repz
je
dec
xor
adc
repnz
movb
sbb
xorb
bound
add
ja
push
dec
inc
js
sub
mov
call
xor
loope
add
pop
push
cmp
aas
sti
faddl
into
jp
mov
test
jl
addr16
add
and
hlt
aaa
jbe
sub
clc
xchg
inc
data16
imul
movsw
dec
pusha
and
out
fcmovnu
shll
in
add
push
sbb
aad
lods
push
mov
xchg
pop
lods
sub
sbb
popa
lds
leave
push
popf
movsb
and
xchg
les
into
mov
pop
pop
dec
cld
xor
hlt
jne
xor
mov
aas
mov
xchg
std
loope
das
or
mov
push
cmpsb
scas
lret
fsubs
push
jbe
inc
ret
popa
dec
push
imul
jmp
pushl
mov
mov
jmp
cmc
ljmp
lods
add
jg
add
ret
xlat
xor
sbb
push
add
xchg
push
imulb
dec
in
pop
jl
xor
sub
ljmp
js
lahf
scas
movsb
iret
std
out
xchg
push
insb
test
push
ffreep
aad
ret
cs
dec
sbb
data16
jle
int3
dec
and
and
cmp
cmp
nop
push
test
push
or
mov
push
mov
mov
test
mov
cmpl
xlat
mov
and
addl
out
pop
pop
popf
scas
jmp
and
int
shr
jo
jno
hlt
mov
lret
cs
mov
and
ss
cmp
sub
xor
scas
aam
cmp
xchg
jnp
adc
sub
aam
jl
ret
mov
jnp
cs
inc
call
inc
push
xorl
mov
in
cltd
push
notb
fidivl
data16
fmuls
movsl
or
xor
xor
dec
cltd
les
out
jno
rolb
ds
push
adc
mov
lea
lcall
inc
je
addr16
movsb
jge
add
aam
push
neg
dec
mov
cmp
test
push
add
dec
pop
es
add
arpl
adc
je
push
pop
sti
sbb
mov
adc
cwtl
xchg
lods
daa
xchg
pcmpgtw
inc
and
sub
add
sbb
xchg
subb
adc
stos
jno
dec
cmpsb
mov
movsb
aaa
xlat
inc
xchg
leave
mov
aaa
pop
imull
mov
adc
push
and
jecxz
aaa
inc
ffreep
and
jg
push
dec
pop
imul
lods
push
lock
and
push
mov
push
pusha
jne
ds
sub
push
xchg
out
fwait
or
sbb
arpl
sub
inc
and
test
ljmp
push
push
or
lret
and
inc
jl
or
cltd
rolb
repz
fwait
in
adc
jmp
jle
mov
jp
jmp
push
repz
mov
jmp
xchg
lea
jno
cmc
inc
adc
bound
adc
loop
rorl
stc
test
xchg
jae
adc
fistpll
jb
jns
enter
jbe
fs
jns
xor
jb
push
mov
cld
ret
loope
lret
mov
cmpsl
dec
or
leave
les
mov
scas
mov
ds
sub
orl
mov
add
fwait
fnsave
enter
loope
jno
rorl
cmp
jle,pt
in
dec
stos
mov
adc
adc
imul
sub
pop
frstor
jge
jae
movsl
xor
push
add
aad
push
push
pop
mov
jecxz
sti
jae
call
sub
shlb
push
sbb
sbb
ja
hlt
loop
inc
lcall
outsb
push
dec
dec
dec
fistl
popa
adc
add
mov
sub
out
nop
adc
mov
dec
rorb
and
mov
adc
and
inc
jne
fs
push
cltd
call
fwait
sub
shll
pop
push
xor
jb
xor
inc
push
sub
mov
mov
clc
fs
sub
inc
lcall
mov
lret
out
int3
or
dec
into
push
ds
loope
adc
clc
gs
push
cmpsb
jae
xor
sub
sub
lret
pop
mov
mov
inc
test
push
gs
xchg
inc
or
testb
mov
loope
push
inc
jne
mov
and
insl
insl
pop
in
aad
adc
stos
addb
xor
repz
jmp
daa
jmp
adcb
mov
out
enter
cmp
lret
xor
cmp
xor
xor
fmull
shlb
stos
jns
lcall
movsb
sub
inc
sbb
adc
xlat
jns
out
aad
jae
mov
xchg
imul
push
int3
insl
and
and
fdivl
ret
sbbl
movsl
add
cmp
add
and
push
or
add
aam
lret
das
iret
icebp
imul
pop
ficoml
sti
push
repnz
test
incl
cmpsb
enter
mov
jae
or
mov
sub
mov
pop
dec
mov
scas
add
lods
movsb
inc
std
pop
fstps
dec
call
or
sbb
movsb
rcrb
insb
jne
jnp
cwtl
ret
jae
xor
daa
adc
and
data16
cwtl
cmp
xchg
loope
mov
or
push
ret
xor
jmp
enter
out
pop
repz
ja
inc
lods
sbb
cmp
movsl
adc
out
out
jo
and
xor
hlt
jbe
imul
inc
adc
mov
movsl
lcall
lds
mov
call
repnz
inc
or
bound
cmpb
mov
int
mov
sbb
cmpsl
fmull
and
and
adc
ret
lods
out
cmpsb
or
in
out
lahf
mov
test
mov
lret
jle
cmc
cld
cwtl
push
aaa
ss
inc
pop
push
mov
dec
out
icebp
xlat
ret
sahf
movsb
popf
pop
stos
pop
dec
mov
std
inc
sbb
icebp
push
iret
ficomps
stos
mov
lret
lds
push
fs
push
pop
sbb
fwait
stos
mov
push
insb
addr16
lret
inc
addr16
out
sub
ljmp
fisttpl
cmp
and
pop
lcall
and
ds
bound
jle
sub
in
adc
into
fnstsw
cmp
mov
idivb
in
pop
xchg
and
jne
movsb
push
sub
in
xchg
sbbl
cmc
push
mov
out
add
push
and
inc
lds
mov
icebp
daa
hlt
les
pop
cltd
mov
rorl
and
mov
mov
jb
repz
fisttpl
outsb
sbb
lods
dec
pop
sub
lea
sub
add
dec
ljmp
fs
adc
shr
iret
jb
pop
mov
lahf
sbb
or
outsb
int3
fcomps
call
ret
cwtl
hlt
out
sub
and
xorl
test
mov
mov
inc
stos
out
dec
outsl
lret
rorl
mov
mov
aaa
or
cld
fcoms
mov
ss
inc
jae
sbb
sub
sbb
fucomp
nop
rol
int
pushf
xchg
and
test
nop
bound
in
nop
dec
dec
outsl
loopne
fs
repz
push
call
test
push
add
adc
and
mov
or
jg
or
pop
jg
idivl
push
lcall
fbld
in
lretw
rol
push
ret
lods
mov
push
mov
cmc
lea
lods
sub
inc
add
loopne
adc
add
data16
inc
test
add
mov
pusha
mov
cmp
clc
mov
popf
pop
dec
mov
popf
pushf
cmp
in
jo
repz
mov
dec
call
in
rcl
and
pop
nop
or
push
and
lret
mov
pop
fs
jg
push
fisttpll
sub
add
xchg
or
sbb
jno
jecxz
clc
orl
popa
out
mov
or
ds
push
xor
insl
std
xor
xchg
popl
movsl
inc
pusha
movsb
jno
aaa
dec
inc
lahf
and
loope
inc
cmpsl
jbe
sar
lahf
push
sub
and
lock
js
fmuls
mov
jne
mov
mov
js
push
aaa
addb
mov
lods
lea
mov
sbb
sub
rcrl
mov
mov
aaa
subl
lds
mov
dec
xchg
pushf
and
adc
push
scas
cmpsl
sub
in
mov
fdivrp
inc
mov
mov
jecxz
es
in
push
fcoml
and
mov
loope
ja
or
or
xchg
jae
retw
or
pop
fdivrl
fninit
jecxz
fwait
mov
out
lods
sbb
adc
adc
sti
aad
jne
mov
scas
mov
mov
dec
fucomi
jle
stc
xor
arpl
enter
xlat
das
call
jge
mov
mov
fldl
xor
mov
push
int3
mov
rcrl
or
dec
sbb
mov
jge
and
out
pushf
pop
loop
lret
addr16
mov
clc
and
es
sub
xchg
negb
jmp
vcvttps2dq
fld1
pop
lcall
cwtl
fnsave
sahf
sbb
pop
mov
mov
rcll
jbe
imul
dec
push
ficompl
js
mov
cltd
jp
popa
or
xchg
cwtl
paddb
jge
mov
jb
hlt
xor
dec
and
xor
inc
push
add
inc
sub
cld
inc
mov
inc
in
inc
fsub
pop
xor
cwtl
ss
mov
lods
xor
lret
clc
jg
jo
xchg
or
lcall
xchg
lcall
testl
push
add
out
inc
pop
ljmp
push
adc
pop
test
out
pop
sub
pop
sti
rolb
imull
daa
fimull
xchg
and
in
push
test
xchg
icebp
clc
cmpsb
loopne
or
pop
push
ret
movsb
rcrl
int
cli
push
ret
and
lods
push
rorb
pop
into
adcl
outsb
cli
mov
add
popf
sti
cmpsl
xchg
int
xor
add
dec
pop
flds
push
lcall
cli
jp
pop
xor
and
push
mov
decl
dec
or
insl
xor
mov
popf
add
pop
out
and
enter
data16
adc
dec
push
jecxz
push
popa
into
sarb
leave
xor
iret
test
or
sahf
mov
xchg
daa
lret
lds
push
pushf
xchg
and
push
jnp
shl
push
sbb
int
xor
dec
and
push
xchg
test
push
test
subl
sbb
or
sub
mov
jnp
mov
jbe
das
mov
xor
cmp
xchg
iret
mov
daa
outsl
das
lcall
xchg
cmpb
mov
pop
loop
mov
js
push
fistpll
movsl
sbb
subl
pop
mov
test
xchg
add
jb
stos
arpl
stos
movsb
out
mov
inc
xchg
sub
lcall
dec
mov
xor
mov
mov
js
mov
fidivl
pop
sub
xor
pop
aam
pop
dec
adc
fstl
push
shrb
in
cli
stos
lds
sbb
push
mov
inc
fstpt
add
aad
xchg
call
outsb
fsubrp
test
aad
mov
push
loope
sbb
scas
mov
lret
push
sbb
loopne
addb
xchg
xlat
mov
mov
sti
lods
cs
daa
aaa
adc
inc
jge
lret
out
jmp
mov
sarb
adc
adc
jg
into
mov
xor
xchg
mov
adc
mov
mov
jb
inc
sbb
imul
outsb
stc
or
shrb
cwtl
std
sti
aad
sti
in
repnz
jne
xchg
sub
out
add
mov
mov
mov
out
dec
or
jmp
stc
repnz
out
jbe
adc
push
scas
sub
jl
sub
inc
adc
pop
add
nop
jecxz
mov
leave
dec
jbe
jb
cmp
push
cmpsb
fcomi
adc
dec
jmp
cmp
add
pop
push
adc
mov
xor
sub
xor
fwait
mov
or
adc
out
dec
add
mov
int3
pop
test
xor
aam
xor
jg
ss
pushf
or
jge
outsb
imul
push
mov
mov
dec
imul
ds
stc
lds
lret
mov
enter
mov
mov
mov
inc
fs
popa
pop
xchg
or
ficoml
dec
test
and
dec
outsl
ret
fcoml
mov
xchg
iret
push
or
das
pop
inc
dec
jl
inc
in
cltd
pop
int3
jb
add
pop
xchg
cli
movsb
sbb
fimull
adc
cli
ret
jno
out
ret
ret
sub
mov
lods
pop
js
scas
xor
add
push
insl
mov
repz
std
or
popl
jg
cmp
aam
and
enter
test
adcb
fstpl
xor
sbb
push
and
movsb
cmp
push
dec
sar
or
add
lods
and
out
cmpsb
cld
leave
jnp
leave
sub
insl
addb
add
inc
mov
test
dec
leave
jg
roll
cmpsb
dec
mov
gs
cs
divl
xchg
js
stc
cmp
dec
sbb
mov
repz
mov
adc
loopne
hlt
cmp
aam
addb
cmpsb
adc
add
stc
shl
pop
out
sub
lret
cmp
imul
sbbl
dec
cmp
jbe
jp
mov
jns
in
xor
jp
outsb
dec
or
pushl
sbb
mov
add
mov
stos
mov
fwait
and
call
imul
imul
push
add
xor
push
pop
and
cmp
outsb
dec
in
fwait
pushl
dec
enter
icebp
fsubl
int
lods
rorl
or
rcr
sub
fs
sahf
movsb
jno
aam
insb
mov
jecxz
dec
loop
or
aad
xchg
cmp
pop
mov
xchg
and
jl
inc
pop
lahf
adc
mov
pop
add
mov
imul
cmp
ret
je
xor
cmp
js
dec
push
xor
imul
loop
pop
movsb
decl
out
incb
into
fnstsw
enter
jecxz
adc
add
aaa
adc
rcrl
cmp
adc
cld
bound
or
ljmp
outsb
xchg
dec
xor
pop
daa
mov
orl
outsl
jg
arpl
cmpsl
sub
lret
cmp
out
inc
test
mov
dec
push
fs
jo
add
push
and
sbb
out
sub
scas
stc
adc
dec
pusha
mov
jle
mov
jle
adc
addr16
add
dec
lret
and
xchg
mov
stos
aam
testl
incb
std
cli
xlat
xchg
mov
inc
mov
xor
xchg
xlat
bound
mov
add
adc
xchg
in
mov
fstl
outsb
mov
dec
sahf
mov
in
das
in
and
pop
or
inc
cmpsb
and
mov
daa
outsl
pop
and
fsubr
mov
xchg
cli
xor
sbb
loopne
pushf
cmp
sbb
popl
mov
je
js
pop
stos
add
sub
mov
dec
xor
movsl
jge
sahf
pop
je
xchg
test
add
shlb
icebp
pop
mov
outsb
sub
out
mov
cmp
inc
mov
push
popa
out
and
hlt
sub
adc
mov
out
push
bound
push
aam
fsts
mov
push
fadd
push
test
jecxz
lcall
dec
cmp
mov
aas
daa
inc
xor
cmp
jb
inc
icebp
mov
mov
loop
pop
icebp
int
cmc
shlb
cmc
shlb
lods
aam
fiaddl
dec
loope
sub
cmpsl
dec
pop
test
sbb
incl
dec
pusha
xor
frstor
push
iret
mull
xor
lea
js
inc
adc
ss
std
push
pop
shrl
inc
adc
aaa
add
loope
mov
and
add
cmp
inc
sbb
jecxz
inc
push
pop
sub
jnp
adc
push
pop
fwait
mov
push
lret
fsubl
les
mov
ss
repz
adc
mov
adc
jg
ror
cmc
mov
adc
adc
faddl
stos
cli
cs
rcrb
out
mov
jae
repnz
call
mov
mov
shlb
aas
ljmp
aad
sti
mov
ja
xor
cmp
mov
mov
test
mov
cwtl
jl
outsb
inc
adc
roll
sub
in
in
adc
cvtpi2ps
pop
in
mov
xchg
pop
out
push
mov
loop
pop
jo
cmpsb
cli
xor
xorl
cmp
jb
scas
xchg
pusha
in
aad
xor
xlat
leave
push
lcall
sbbb
jp
in
test
sbb
shl
arpl
push
mov
fnstsw
add
pop
popa
pop
sti
fidivrl
push
push
sbb
and
mov
cli
cmp
xchg
mov
loope
sbb
adc
repz
jb,pn
stos
mov
push
or
xchg
jbe
jbe
shrl
add
mov
es
sub
or
into
je
mov
rep
xor
sub
adc
sub
lret
cmp
mov
xor
pop
idivl
stc
or
mov
xchg
add
ret
and
in
call
mov
dec
xchg
push
test
cmpsb
pop
popf
sar
and
stos
jbe
int3
cwtl
add
dec
add
imul
add
arpl
cwtl
and
insb
mov
sti
mov
ror
aad
clc
or
lea
stc
popa
nop
mov
loope
mov
mov
xchg
add
orb
bound
or
sub
loopne
sbb
push
clc
mov
mov
cmpsb
arpl
loopne
adc
mov
andl
cli
lret
inc
inc
dec
add
arpl
outsb
test
push
mov
inc
inc
jno
and
lea
xor
fsubrl
inc
popf
es
mov
sbb
imul
lea
aaa
mov
add
xchg
imul
pop
xor
sbbb
xor
in
cltd
rcrl
push
jmp
ss
xchg
mov
cld
mov
mov
push
inc
cmp
ret
in
push
out
mov
neg
scas
inc
mov
mov
test
stos
loopne
pop
lcall
mov
outsb
jno
jns
bound
lds
fs
xchg
imul
movsl
clc
hlt
xchg
sub
xor
repz
fldcw
sub
pusha
repnz
test
xlat
aad
loop
ret
popf
fldcw
in
xor
popfw
sbb
les
xor
test
jns
dec
mov
int
scas
lahf
test
pop
adc
jo
ja
js
inc
push
sub
dec
hlt
xor
xchg
mov
jae
push
dec
aaa
in
adc
push
dec
xchg
sahf
mov
scas
or
sahf
lock
mov
fs
nop
sbb
clc
pop
jnp
in
mov
cltd
cmp
daa
dec
adc
fsubl
or
fisubrl
sahf
lock
sahf
adc
rep
lods
pop
dec
movsb
push
mov
sti
inc
daa
andb
cmc
pop
shll
stos
call
imul
xor
inc
jecxz
loop
cmp
jle
mov
mov
add
cmpsb
cwtl
dec
cltd
and
lock
scas
popf
cwtl
leave
fidivrs
out
jbe
test
sbb
addr16
mov
ds
push
jmp
or
test
push
pushf
pusha
in
in
jecxz
cmpb
fisubl
mov
loope
mov
pop
and
rcrb
dec
add
add
fiaddl
outsb
ficoms
int
sub
jae
ja
in
jmp
jp
imul
lea
and
lea
xchg
aad
les
push
mov
out
lods
fldcw
shll
fstpl
xor
inc
add
inc
sbb
fisttpll
lret
out
cli
mov
dec
adcl
pop
iret
hlt
and
lock
test
cmp
mov
imul
data16
vpackssdw
adc
pop
stos
mov
and
sub
hlt
aas
jbe
and
sbb
shlb
imul
add
movsb
pop
adc
xor
js
xchg
xor
int3
sbb
ret
mov
xchg
push
push
setns
pop
ret
jl
lods
icebp
mov
test
xor
add
xor
loop
jns,pn
push
je
cltd
imul
je
push
sbb
scas
jne
int3
lods
addr16
icebp
pop
jp
mov
pop
push
jmp
mov
fists
sbb
in
aaa
sbb
imul
inc
xor
scas
ja
or
lds
ja
push
loope
testl
rsm
add
scas
loope
loope
push
orl
mov
lds
xlat
xchg
outsl
or
xor
repnz
imul
pop
inc
mov
jecxz
test
cmp
jge
in
cli
arpl
jne
test
sahf
addb
sub
jmp
xchg
mov
imul
movsl
adc
fsubl
fdivl
loope
inc
rorl
mov
addr16
cwtl
cmpsl
inc
sbb
fstpt
lahf
push
xchg
aas
leave
xchg
int3
and
push
adc
pminub
jg
add
leave
in
test
sub
test
adc
hlt
dec
pop
xor
data16
das
pop
cmp
xchg
std
and
mov
pop
sub
decl
stc
xor
rcrl
xchg
mov
xor
in
adcb
push
insl
in
popa
scas
sub
xchg
out
xor
aam
pushf
lcall
or
sub
jnp
bnd
adc
arpl
lret
movsb
jp
push
faddp
push
cwtl
cwtl
popf
ret
mov
mov
testl
mov
cltd
shrb
sahf
inc
mov
outsl
dec
mov
in
in
repz
xchg
roll
xchg
mov
jb
mov
add
callw
outsl
cmp
call
icebp
inc
push
ljmp
jb
dec
lock
dec
das
xlat
in
adc
data16
arpl
outsb
pop
xor
push
repnz
mov
movsl
lea
xchg
sub
pop
lahf
push
jp
stc
pop
inc
or
or
add
stos
adc
pop
cwtl
xor
test
repz
push
push
adc
jbe
mov
mov
cwtl
push
xchg
ret
dec
aam
nop
cmp
dec
lea
pop
movsl
aad
data16
xor
js
adc
pop
adc
and
out
push
xchg
fwait
pushf
std
sub
int3
dec
jo
jge
fidivs
mov
and
ljmp
sbb
push
jecxz
xchg
jle
add
sbb
xor
bound
push
repz
or
dec
cmpsb
dec
lods
sbb
dec
es
mov
mov
or
sti
sbb
pushf
outsb
push
inc
xchg
icebp
jb
popf
fcoml
out
inc
imul
dec
inc
hlt
xchg
pop
dec
pop
in
shl
aad
imul
fnsave
je
cmp
rcl
dec
add
cmpsl
xchg
jmp
cmp
mov
data16
pop
aaa
cmp
je
or
or
dec
jl
bound
sub
xchg
jbe
sub
pop
imul
lea
divb
push
push
cwtl
repnz
cmp
rorl
movsb
dec
imul
test
out
mov
mov
out
xchg
jns
outsl
inc
mov
dec
adc
js
jb
nop
mov
push
in
fmull
les
and
out
popf
adc
adc
fdiv
data16
lcall
in
lods
repz
inc
mov
adc
xchg
sbb
mov
in
sub
div
pop
jb
or
leave
mov
movsb
mov
rorb
sbb
cwtl
cmp
sub
sbb
out
lret
push
mov
fdivl
pop
xchg
and
fs
and
jo
sbb
sub
das
rcl
xchg
scas
xor
aas
cltd
nop
pop
and
jne
sub
xor
sbb
daa
lea
and
mov
jp
jle
cwtl
pop
dec
inc
decb
lret
dec
push
loop
shrb
jge
sub
sbb
jns
in
adc
jae
jbe
push
bound
mov
out
aas
ss
lea
hlt
fs
xchg
es
push
xor
sbb
ret
and
xor
and
pop
or
jg
xor
jno
adc
bound
jns
sbb
jl
xchg
orb
sarb
shlb
cmc
and
pushf
cmp
or
or
testl
cmpsl
pushf
in
add
add
icebp
lock
subb
dec
sbb
data16
mov
faddl
fstpt
cmp
les
hlt
jg
movsl
sbb
sahf
call
pop
lcall
nop
std
jg
cmp
cli
cmc
push
add
mov
shll
rcr
push
sub
or
js
mov
and
mov
fisttps
in
jae
adc
jle
add
js
inc
jbe
ret
add
and
inc
mov
fcmove
mov
mov
xor
sbb
push
loop
mov
add
mov
mov
push
sub
xor
cmpl
lds
sarl
div
xor
fcomp
xchg
and
cld
adc
movsl
lcall
addr16
xor
push
test
dec
fldenv
mov
mov
or
mov
loope
std
and
loopne
add
gs
loopne
idivb
mov
ss
out
dec
xchg
mov
imul
int3
mov
lods
dec
dec
