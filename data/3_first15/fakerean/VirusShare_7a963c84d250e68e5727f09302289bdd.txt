decl
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
or
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
das
mov
add
and
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
inc
add
and
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
call
push
and
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
push
mov
lea
push
mov
mov
dec
mov
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
or
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
flds
popf
xor
push
and
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
aad
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
flds
std
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
aad
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
fiaddl
pop
xchg
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
jno
inc
add
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
sbb
inc
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
and
out
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
sub
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
pop
imul
lock
xchg
add
mov
add
add
add
hlt
aam
add
add
mov
add
inc
in
push
push
push
push
push
push
push
push
lea
push
call
xchg
test
add
xchg
add
add
add
mov
les
int
mov
orl
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
lahf
add
rcr
lahf
add
add
in
sti
cld
add
in
ljmp
adcb
add
add
add
shrb
lcall
push
push
lea
push
push
push
push
push
push
call
add
out
pop
pop
push
add
mov
add
lods
push
add
fisttpl
jle
add
out
jecxz
sarl
lret
out
add
add
mov
lds
jno
js
iret
add
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
addr16
std
jbe
add
in
jle
pop
add
and
mov
ljmp
add
add
jae
loop
jl
cwtl
movsl
mov
fnsave
into
arpl
add
add
enter
stc
cmc
add
add
pop
call
push
push
push
lea
push
push
push
lea
push
call
add
mov
add
add
add
testb
rolb
mov
bnd
pop
add
popl
mov
roll
add
add
add
je
add
add
add
add
test
rolb
add
add
loope
push
xchg
add
add
add
lcall
or
add
out
jecxz
lea
push
push
push
call
mov
add
loop
mov
out
add
iret
add
xchg
mov
push
lock
add
add
out
add
xchg
pop
add
ja
test
flds
lcall
imul
add
pop
add
push
call
add
add
mov
jecxz
lahf
add
push
xchg
push
add
push
cmpsl
mov
jae
add
add
add
lods
add
add
mov
add
add
rcrb
flds
lods
mov
js
xorb
in
clc
lcall
mov
push
push
push
push
push
push
lea
push
push
call
mov
add
aam
test
mov
push
add
add
js
enter
sahf
enter
add
jmp
add
enter
mov
add
idivb
bnd
mov
bound
xchg
push
fwait
shl
sub
pop
mov
add
push
lea
push
push
push
lea
push
push
push
call
fiadds
gs
add
add
pusha
nop
jle
add
lock
loop
add
cmpl
add
lcall
ret
add
add
push
push
push
push
call
addl
fiaddl
xchg
roll
js
test
add
add
test
mov
mov
mov
fucom
lahf
pop
pop
add
push
add
add
repnz
add
xor
cld
add
les
sub
pop
add
push
lea
push
push
push
push
call
add
add
pop
xchg
mov
add
rclb
imul
loope
pushf
out
add
testb
gs
add
stos
jb
jmp
add
xchg
add
add
push
scas
call
sahf
push
mov
movsl
add
mov
push
add
mov
lret
sub
pop
mov
xor
push
push
sub
push
xor
add
sub
sub
add
add
lea
xor
pop
dec
pop
push
push
push
push
call
add
hlt
add
add
fstp
add
mov
test
add
into
lret
aad
add
add
mov
add
add
xchg
sub
pop
pushl
call
push
lea
push
push
call
stos
lock
sti
in
test
nop
pop
lods
je
add
lds
xchg
pop
popa
xchg
jne
testb
lock
out
je
mov
add
push
mov
add
add
jo
add
gs
add
add
mov
sub
pop
mov
push
push
push
lea
push
push
push
call
hlt
jno
add
add
js
add
data16
add
xchg
addr16
pop
movsl
add
pop
push
add
gs
push
arpl
mov
js
jl
std
js
pushf
add
mov
add
mov
int
add
pushf
add
pop
stc
mov
nop
movsl
sub
pop
movl
push
push
push
push
lea
push
call
add
icebp
add
pop
movsb
mov
jnp
add
mov
add
stos
test
call
std
add
add
popa
mov
xchg
pop
pop
xchg
mov
add
ja
shll
push
test
in
lcall
inc
call
mov
pop
add
add
arpl
add
lahf
loope
shlb
jo
test
movsb
add
lods
fiaddl
sti
add
lea
in
add
pushf
add
jmp
ja
add
add
loope
std
leave
fnstsw
mov
mov
cld
stc
add
sub
pop
push
pushl
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
fs
sahf
mov
rolb
mov
lea
jge
add
ljmp
out
pusha
add
movl
push
add
mov
ljmp
add
mov
mov
aam
lods
add
stc
mov
add
pushl
push
push
push
push
push
lea
push
call
mov
cmc
add
pop
add
add
add
stc
cld
xchg
int3
push
mov
popa
imul
push
arpl
jmp
loope
add
add
xchg
in
mov
add
sub
pop
call
push
push
lea
push
lea
push
push
call
out
js
push
lcall
fincstp
pop
add
clc
add
add
add
add
sahf
in
add
lret
call
ja
jnp
cmpsb
add
add
jae
add
lods
add
add
pushl
push
push
push
push
push
push
lea
push
call
push
xchg
ja
xlat
push
pop
add
add
mov
push
leave
mov
add
jno
icebp
add
outsl
add
add
js
add
add
add
add
pop
pushl
call
push
push
shr
inc
shl
push
sub
add
dec
ror
not
sub
lea
pop
inc
ror
add
ror
pop
push
lea
push
lea
push
push
lea
push
push
call
mov
jge
test
rolb
loop
mov
je
jmp
add
add
shll
add
loopne
mov
testl
add
lcall
jne
call
push
push
push
push
lea
push
push
push
call
add
jb
xchg
mov
add
xchg
call
loopne
add
push
movb
mov
out
pop
cmpsb
add
fucomip
mov
lcall
inc
push
push
ror
rol
lea
inc
push
xor
add
ror
dec
sub
rol
add
pop
xor
shr
pop
push
push
push
push
call
add
ljmp
movb
mov
lcall
aam
lds
icebp
clc
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
jo
imull
ffreep
lret
jle
mov
add
add
add
add
add
add
push
add
add
mov
add
xchg
add
add
pop
call
push
push
lea
push
push
push
call
out
out
imul
add
add
mov
add
fdivrl
add
mov
push
add
add
movsl
add
roll
xchg
je
sarb
add
mov
lret
push
fists
pop
scas
outsl
mov
std
xchg
imul
fcomip
add
clc
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
rolb
add
add
add
pop
les
into
leave
cmpsb
sti
mov
ret
add
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
add
jmp
mov
add
add
add
lea
add
add
mov
add
add
aad
mov
jne
lret
addb
repnz
add
add
int3
mov
pop
stos
sbbb
add
lcall
push
push
push
push
push
push
push
push
push
push
call
movb
push
cld
add
pop
add
les
add
mov
ljmp
add
mov
add
add
fnstsw
mov
fcomip
xlat
mov
mov
push
lret
add
push
sub
pop
mov
push
push
push
lea
push
push
push
push
call
mov
rcl
in
in
testb
jge
fiadds
pop
fldl
add
mov
add
jne
aad
mov
movsl
add
sahf
push
push
fmuls
sub
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
call
enter
cmc
add
add
movsb
cmc
enter
pusha
loop
in
mov
int3
add
mov
add
push
in
add
movsl
add
add
repnz
clc
sbbb
mov
add
add
push
push
mov
add
add
pop
lahf
mov
add
fdivr
lcall
ret
add
add
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
cwtl
pop
xchg
mov
out
cld
fdivrl
add
push
pusha
mov
xchg
add
popa
pop
pop
add
arpl
lock
pop
add
mov
xor
push
lea
push
push
push
push
push
push
push
call
push
not
add
mov
pop
add
pusha
cli
subl
add
push
add
add
fbstp
cmc
notl
jmp
push
add
ficoms
add
in
loopne
add
push
lea
push
push
push
lea
push
push
call
add
pop
test
add
add
add
add
mov
add
adc
test
add
xchg
test
jecxz
mov
add
add
fildl
fadds
pop
mov
xchg
add
rcrl
call
or
scas
push
push
call
jle
sti
hlt
mov
js
add
outsl
pop
add
add
add
jbe
out
pop
ret
xchg
add
jae
add
test
subl
mov
js
xchg
add
cltd
bound
fldl
xor
jnp
int
add
in
clc
pop
add
push
push
call
in
add
add
loopne
mov
shlb
jp
jl
fwait
stc
stos
jno
xchg
pusha
add
arpl
add
out
mov
add
add
add
xchg
stos
in
add
jne
mov
add
shrl
lea
in
sub
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
push
call
cltd
push
lock
out
add
add
loop
pushf
add
add
add
mov
push
rcrl
test
add
loopne
add
add
add
lret
fwait
add
add
in
mov
add
add
add
add
mov
add
enter
mov
add
pop
mov
push
push
push
push
call
cli
add
arpl
add
stc
fstpt
js
loop
test
mov
push
lods
cld
push
idivb
std
add
push
stos
add
add
push
mov
add
mov
add
mov
sti
jnp
nop
add
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
push
push
push
call
pop
add
xlat
rolb
add
fwait
add
in
test
jae
add
cmpsb
test
add
lods
mov
pop
add
fiaddl
add
cli
xchg
ljmp
add
les
sub
pop
add
push
lea
push
push
push
push
push
call
testb
int3
imul
jae
add
mov
add
data16
add
add
add
cli
aam
sub
pop
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
loope
jmp
add
sti
mov
mov
add
sti
imul
add
js
add
gs
add
lret
addl
nop
pop
add
add
push
add
mov
pusha
add
add
rclb
xchg
add
jbe
add
add
je
int
cmpsl
add
add
add
lcall
inc
or
lods
mov
xor
pusha
push
push
lea
push
push
lea
push
lea
push
lea
push
call
repnz
add
pop
add
fnstcw
mov
push
imul
roll
data16
jae
out
jno
scas
add
cltd
add
pop
aad
mov
mov
add
pop
mov
add
add
addl
add
sub
pop
xor
push
push
lea
push
push
push
push
push
call
mov
test
lea
add
add
add
mov
add
jb
mov
test
aad
pop
data16
js
call
roll
add
mov
loopne
add
add
pop
add
push
lea
push
push
push
push
call
mov
add
sahf
fisubrl
add
add
flds
loopne
push
add
add
add
ja
add
out
mov
lcall
add
add
pop
addr16
subl
in
lcall
enter
je
pusha
push
push
push
push
push
push
push
call
add
jmp
jnp
pop
add
roll
add
add
fldt
jo
cmc
ljmp
push
jno
add
sub
add
mov
lcall
movsb
push
lea
push
lea
push
push
push
push
call
data16
cmpsb
add
add
add
add
push
pop
cli
loopne
add
add
in
mov
xchg
add
add
out
push
stc
std
fildl
add
add
jae
sarl
add
mov
movsb
add
add
rorb
repnz
add
lcall
push
push
lea
push
call
jle
add
add
mov
mov
stc
test
xorl
pop
add
mov
mov
mov
add
filds
out
xchg
jnp
repnz
pop
push
into
add
add
add
jo
xchg
sub
pop
mov
push
push
push
push
lea
push
push
push
call
mov
mov
mov
ror
nop
icebp
add
add
add
push
mov
ja
add
testl
nop
add
mov
in
in
add
add
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
std
ljmp
mov
scas
test
mov
std
jle
add
test
add
scas
out
testb
sub
pop
add
push
push
call
in
imul
ljmp
bnd
add
xchg
add
add
mov
add
add
add
mov
add
sahf
test
add
add
push
add
shlb
add
in
clc
pop
mov
xor
push
push
push
push
push
push
push
call
add
jne
add
add
pop
add
add
fadds
add
add
jl
add
mov
mov
pop
movsb
add
bound
add
filds
add
add
fidivrl
int
add
add
fiadds
scas
xchg
imul
test
testb
add
fs
sub
pop
mov
push
push
lea
push
push
call
add
add
lahf
add
mov
add
popa
xchg
add
lock
lods
pop
add
add
xchg
add
addb
add
flds
pop
out
add
popf
leave
add
pop
add
fcmovu
aam
mov
add
add
popa
pusha
add
xchg
addr16
test
ret
sub
pop
xor
push
push
push
push
push
push
push
push
call
add
ljmp
mov
dec
xchg
pop
pop
mov
in
add
and
xchg
pop
lret
add
lahf
scas
cmpsl
test
add
push
pusha
add
push
add
lahf
arpl
add
aad
mov
test
jno
je
sub
pop
add
push
lea
push
lea
push
lea
push
push
push
call
push
shll
test
add
xchg
pop
jno
add
add
add
add
add
subb
loop
add
mov
add
call
mov
int3
ja
xchg
stc
data16
test
data16
stos
mov
cmpsl
loop
in
call
xor
push
lea
push
push
push
lea
push
call
add
add
jle
add
push
add
flds
lods
jmp
ret
out
cwtl
xchg
pop
mov
mov
add
add
xchg
pop
int3
jno
incb
jecxz
shrb
icebp
sub
pop
add
push
push
push
push
lea
push
push
push
push
call
test
incb
add
imul
add
add
jbe
mov
xchg
jo
pop
je
add
add
call
add
loopne
lcall
rcll
popa
add
add
mov
scas
call
div
pop
push
push
xchg
mov
mov
add
add
iret
add
popa
add
add
jecxz
add
mov
add
into
mov
push
add
addl
add
add
add
mov
add
fwait
add
fildl
lcall
fsubrs
pushf
mov
push
dec
push
sub
add
shl
add
sub
add
shr
pop
xor
rol
sub
pop
push
shr
add
pop
pushl
push
shr
pop
call
push
push
push
add
xor
push
push
pop
add
ror
sub
dec
add
pop
lea
pop
push
lea
lea
add
pop
push
push
push
push
call
jbe
out
add
add
mov
out
movsb
add
add
arpl
mov
xchg
mov
add
rcrb
add
push
mov
add
shrb
add
add
add
add
test
jl
add
lcall
rclb
push
lea
push
push
lea
push
push
push
call
add
scas
push
roll
add
aam
jne
mov
int
add
sahf
pushf
add
rolb
xchg
xchg
add
mov
int
nop
in
add
mov
add
add
mov
popf
mov
imul
mov
jl
nop
sub
pop
mov
push
push
add
add
shl
pop
push
push
push
push
push
push
call
add
add
arpl
iret
arpl
add
add
andb
out
stos
fiadds
add
add
add
lods
movsb
add
add
add
in
mov
les
add
mov
add
lcall
pop
hlt
push
push
push
call
add
add
fcompl
add
pop
andl
add
imul
nop
push
add
jno
add
add
add
add
add
mov
mov
pushf
add
xlat
mov
int3
scas
add
push
mov
sub
pop
add
push
sub
pop
add
push
shr
add
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
mov
jno
fadd
add
lcall
jne
popf
mov
andb
xchg
add
add
mov
add
fwait
xlat
add
add
lock
add
push
fcomp
fs
int3
int
add
leave
mov
xchg
jl
cli
int
pop
add
mov
fdivr
lcall
jae
xor
push
lea
push
lea
push
call
mov
add
add
add
xchg
pusha
add
ja
push
xlat
xchg
out
sbbl
add
mov
jo
mov
call
add
test
lock
add
ljmp
jb
in
hlt
pop
add
push
push
sub
lea
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
add
subb
add
add
out
add
lods
add
add
add
jecxz
add
mov
ja
add
add
sarl
add
mov
out
addl
add
sub
mov
fisubrl
into
je
fildll
lcall
lock
push
dec
sub
pop
mov
xor
push
push
push
push
lea
push
lea
push
call
push
loopne
les
push
jbe
pushf
mov
ljmp
mov
add
scas
int
out
popf
add
mov
add
jmp
fists
lcall
movsb
mov
xor
push
add
rol
sub
pop
or
je
mov
xor
push
not
pop
mov
xor
push
shr
pop
add
push
push
push
push
push
push
lea
push
call
pop
lods
cmc
add
add
add
addl
add
add
cltd
add
add
mov
add
push
jl
lea
shrb
add
jbe
js
cwtl
sub
pop
add
push
push
add
rol
shr
pop
mov
xor
push
rol
shl
pop
add
push
lea
push
call
pop
add
mov
add
add
pop
arpl
add
cltd
iret
xchg
cli
data16
ljmp
test
add
test
loop
test
int3
int
add
xlat
add
push
add
movl
bound
testb
in
clc
lcall
rep
push
rol
pop
mov
xor
push
sub
ror
lea
pop
or
je
mov
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
add
loopne
add
cld
add
mov
add
jp
xlat
adcb
cmpl
add
mov
shl
sub
pop
add
add
push
push
push
lea
push
push
lea
push
lea
push
call
add
rcr
jae
add
add
fcmovnb
testl
add
movsb
xlat
add
xchg
sahf
jb
add
faddl
add
in
lcall
movsb
push
push
push
lea
push
lea
push
call
add
xchg
stos
ljmp
add
add
clc
int3
jae
add
add
movsl
std
mov
shl
divb
fidivrs
push
divl
pop
add
jle
je
arpl
lock
pop
pop
push
push
push
and
add
lea
not
ror
sub
sub
ror
ror
sub
pop
shl
ror
pop
push
push
lea
push
push
call
add
add
add
push
add
mov
data16
add
ret
push
mov
roll
shrb
add
leave
testl
add
jecxz
push
mov
add
lcall
push
push
push
lea
push
lea
push
push
push
push
push
call
jl
stc
add
add
add
push
jbe
add
add
out
je
stc
add
enter
sub
pop
mov
mov
push
inc
add
pop
mov
push
rol
inc
pop
jmp
push
sub
pop
push
push
lea
push
push
call
add
jb
jb
add
jle
add
mov
testl
pop
jp
add
add
add
add
add
add
lret
xchg
fwait
add
xchg
add
add
pop
mov
sub
pop
mov
add
push
lea
push
push
lea
push
push
push
lea
push
push
call
push
mov
add
clc
add
bound
outsl
add
fisubs
add
rcll
add
pusha
add
xchg
mov
xchg
iret
sti
jbe
add
ret
fcompp
add
fcmovb
add
imul
clc
mov
push
push
push
push
push
push
call
fbld
add
popf
flds
add
mov
lret
add
add
stos
in
add
iret
arpl
loopne
add
add
add
jmp
scas
pop
add
lret
pop
xchg
add
int3
pop
bound
lcall
push
xor
shr
add
pop
push
push
lea
dec
ror
pop
push
push
push
push
push
lea
push
push
call
add
mov
mov
add
add
into
out
mov
ljmp
in
mov
mov
cltd
add
cmc
pop
add
int3
push
add
cli
add
xchg
stos
add
addl
cld
push
lea
push
push
push
call
lds
pop
xchg
xlat
add
jnp
mov
jo
data16
call
add
pusha
iret
mov
outsl
outsl
je
ljmp
add
pushf
add
push
ljmp
outsl
stc
add
stc
jne
jae
add
xchg
lcall
lcall
pop
push
push
push
call
movb
add
add
xchg
mov
pop
xorl
mov
add
cmc
mov
add
lods
shll
pop
push
inc
ror
pop
pop
leave
push
sub
shl
pop
ret
push
lea
push
push
call
mov
mov
add
in
rolb
lret
add
in
mov
push
mov
add
fsub
jmp
mov
sti
xlat
popa
arpl
add
add
jge
cmpsb
pushf
rcll
add
push
mov
lret
add
movsw
mov
mov
outsl
push
int
sub
pop
push
push
xor
pop
mov
add
push
shl
pop
push
push
push
push
push
lea
push
push
push
call
out
out
in
ljmp
test
mov
fisubl
jb
lods
xchg
xchg
jbe
movsl
add
imul
cmpsb
lock
mov
fsubr
add
add
iret
mov
call
fistpl
push
dec
sub
lea
pop
movl
push
push
push
call
shl
nop
lea
test
test
rolb
add
mov
xchg
add
add
add
add
out
add
icebp
ret
hlt
lcall
inc
clc
call
mov
push
call
iret
add
int
out
push
rcrl
je
outsl
popf
push
add
mov
add
in
clc
lcall
rorb
insl
add
add
cltd
push
push
lea
push
push
lea
push
push
push
push
call
xorl
enter
fidivs
add
mov
mov
mov
add
aad
jno
test
pop
add
jb
add
add
mov
in
fcomps
pop
push
ror
ror
shl
pop
pop
push
push
call
jae
ret
add
add
mov
pusha
test
xchg
arpl
cli
add
cmpsl
add
add
add
add
add
movsl
testl
jns
add
add
add
out
lods
add
add
popa
ficomps
data16
add
push
movsl
popf
js
cmc
mov
add
movsb
sub
pop
pop
leave
push
xor
rol
shr
shl
pop
ret
push
push
add
inc
pop
mov
push
sub
inc
sub
pop
add
push
lea
push
push
lea
push
call
mov
cmpsb
add
lret
js
lahf
mov
out
xchg
add
add
add
mov
rcll
mov
xor
insb
add
lret
shrl
add
push
aam
pop
add
lds
mov
add
xchg
add
stc
add
mov
add
test
call
lock
push
push
push
push
push
push
call
add
pushf
mov
xchg
add
add
into
add
fildl
lea
stos
cwtl
add
push
add
add
mov
add
xchg
sub
pop
push
push
push
push
push
call
add
pusha
add
int
jnp
out
popa
add
push
sti
mov
add
lock
jl
jge
add
mov
in
hlt
pop
push
push
not
inc
sub
pop
testl
addl
push
not
pop
push
call
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
je
add
add
push
mov
add
lods
add
add
mov
add
add
jb
mov
add
add
add
add
loop
xchg
add
mov
jecxz
pop
add
add
push
xchg
pop
pop
cwtl
sahf
add
add
loopne
lcall
inc
cld
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
stos
test
fsts
add
add
add
add
imul
je
mov
rolb
repnz
enter
rcrl
add
jnp
std
shrl
add
add
jne
push
push
push
lea
push
push
call
pop
add
add
jb
addl
add
add
add
addr16
loopne
push
add
bound
aad
out
xorb
jb
shlb
xchg
std
ja
add
jno
add
mov
pop
insb
cmc
add
xchg
add
ret
lock
lcall
add
lahf
clc
call
inc
xchg
je
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
mov
out
fs
les
clc
into
push
mov
in
pop
add
add
add
add
add
add
popa
add
xchg
sub
pop
cmpl
jne
push
sub
add
add
pop
pop
push
ror
shr
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
fwait
push
xlat
push
add
or
push
add
notl
add
int3
add
sti
mov
add
add
xchg
add
lcall
push
push
push
push
call
scas
pushf
add
add
pop
add
mov
jmp
fimuls
add
leave
push
add
mov
add
add
pop
add
ficompl
into
test
mov
arpl
push
addl
xorl
add
add
lcall
leave
push
sub
lea
pop
ret
push
push
lea
push
push
push
lea
push
push
call
add
ret
imul
loop
faddl
hlt
lret
cmc
add
fbstp
add
add
add
mov
add
add
mov
scas
test
lds
add
fs
incb
mov
add
jp
mov
mov
fistps
filds
pop
mov
push
lea
push
push
push
push
call
jo
stos
cwtl
js
add
lods
lods
add
mov
fcmovnbe
mov
add
add
in
add
add
pop
xchg
outsl
in
lds
jae
in
in
lcall
cld
push
sub
sub
pop
push
push
push
push
push
lea
push
push
push
call
cmc
lods
add
jnp
roll
jmp
addl
add
mov
mov
loopne
add
shlb
rolb
add
lcall
push
push
push
push
lea
push
push
push
call
add
add
lea
add
add
mov
add
rolb
add
in
add
xchg
mov
test
sub
pop
push
movl
push
push
lea
push
push
call
in
add
outsl
testl
add
cmc
cld
add
add
scas
jb
mov
xchg
add
add
mov
add
add
testl
in
lock
lcall
add
jmp
pop
call
push
dec
ror
lea
pop
push
call
push
inc
dec
inc
lea
pop
subl
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
roll
in
mov
push
test
int
push
add
add
clc
mov
mov
add
pop
jb
adc
mov
xchg
jno
in
sub
pop
cmpl
jne
push
push
push
push
call
add
add
fsubrs
add
add
ja
lea
add
enter
push
rol
pusha
test
mov
pop
pop
push
push
push
call
out
add
les
xlat
xchg
mov
les
add
lods
cmc
out
push
out
rolb
add
mov
movsb
cli
add
sub
pop
pop
push
inc
shl
pop
pop
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
cmpsl
add
add
push
frstor
popa
add
cltd
xchg
add
mov
bound
cmpsb
je
mov
outsl
add
push
in
xchg
add
add
push
test
hlt
repnz
mov
add
add
in
fdivr
lcall
push
dec
add
pop
ret
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
out
mov
add
mov
add
rolb
shr
add
stc
add
push
test
add
jae
push
pop
jl
bound
fstp
mov
roll
add
add
out
mov
in
fdivr
lcall
in
push
push
push
call
sahf
add
jo
add
movl
xorb
lock
cli
mov
add
add
add
je
add
add
add
push
rcrl
in
mov
pushf
mov
mov
mov
jbe
sub
pop
add
push
push
xor
pop
push
push
push
push
call
add
push
mov
enter
lret
mov
mov
mov
xlat
add
rolb
add
test
add
push
push
add
cmc
add
test
jecxz
add
mov
add
add
sub
pop
push
push
inc
lea
sub
lea
pop
push
push
push
rol
inc
push
xor
add
rol
sub
sub
sub
xor
dec
shr
pop
add
pop
push
push
lea
push
lea
push
push
lea
push
call
lds
out
mov
add
je
outsl
push
add
pop
scas
pushf
mov
push
popl
add
mov
add
add
add
mov
mov
lds
add
enter
lock
xlat
mov
popa
cmpsb
add
sub
pop
pushl
push
push
lea
push
lea
push
call
lcall
outsl
in
lcall
fdivrp
jno
loopne
pop
outsl
add
add
movsl
jne
nop
enter
hlt
jne
jp
add
add
int3
mov
sti
scas
je
notb
shlb
add
popa
roll
lcall
in
add
call
push
rol
not
xor
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
call
add
push
add
mov
popa
ljmp
add
add
lods
stc
add
add
add
jp
jno
add
into
bound
push
push
lret
add
mov
add
lret
add
test
hlt
test
test
add
in
in
lcall
inc
cmp
rol
add
pop
sub
mov
push
ror
dec
pop
shr
push
push
push
push
push
push
push
call
add
xchg
stc
add
sarl
pop
add
rcll
xlat
add
add
add
fiaddl
add
add
aad
mov
xchg
add
add
add
pop
fildl
addr16
call
add
mov
push
push
call
in
add
add
fildll
add
add
mov
flds
cmpsl
add
add
push
stos
xorb
push
scas
mov
add
add
faddl
push
insb
xchg
mov
add
add
add
push
pushf
xlat
into
add
add
add
ficomps
cli
add
clc
add
sub
pop
mov
push
add
pop
add
push
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
cmc
add
test
add
pop
add
pop
in
enter
les
add
loopne
add
add
add
lds
call
add
pop
in
loope
add
sub
pop
add
push
sub
lea
ror
xor
pop
mov
push
sub
rol
pop
mov
cmp
jne
push
shr
sub
pop
cmp
jne
push
push
call
cltd
mov
add
mov
push
test
add
mov
popa
call
add
cmc
mov
add
add
jbe
add
loop
in
clc
lcall
inc
adc
lea
push
push
push
lea
push
call
add
add
jae
push
fyl2x
add
mov
stos
shrb
add
sahf
add
and
popa
shrb
mov
inc
jge
jnp
aad
mov
shr
insb
lcall
add
loopne
jbe
mov
aam
add
lcall
add
add
add
cld
rol
not
pop
jmp
push
inc
not
pop
mov
push
sub
pop
mov
push
shl
xor
pop
sub
jne
mov
push
lea
push
push
call
add
je
sarl
fnstcw
add
add
iret
add
cmc
icebp
scas
add
push
fidivrs
sub
pop
movl
push
push
call
enter
fidivrs
add
scas
add
test
rol
xchg
imul
push
stos
push
add
mov
mov
xchg
iret
xlat
add
mov
add
rolb
in
shl
faddl
mov
lea
sub
pop
jmp
mov
push
xor
pop
mov
cmp
jne
push
dec
add
xor
rol
pop
mov
push
not
shr
rol
pop
movl
push
lea
push
push
push
lea
push
push
push
push
push
call
add
repnz
mov
pop
add
add
push
mov
add
mov
add
cmc
arpl
mov
add
add
add
add
push
shll
fildl
cli
mov
sub
pop
jmp
push
shr
pop
mov
cmpw
jne
push
add
pop
mov
push
dec
sub
pop
movl
jmp
push
dec
pop
pushl
push
shr
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
test
add
mov
cwtl
js
add
or
mov
lock
sbbb
jmp
mov
add
jle
jl
in
fcomps
inc
or
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
lahf
fcomps
add
fstpt
lret
jbe
add
and
fimuls
add
rolb
int
fmulp
add
add
add
add
movsl
shl
jp
add
stc
mov
out
push
mov
roll
pop
push
les
add
add
mov
in
fdivr
lcall
inc
sbb
push
call
add
lcall
xchg
add
lret
add
push
mov
out
ja
mov
xchg
mov
clc
add
add
push
add
add
addb
mov
js
mov
add
out
int
mov
mov
xorb
clc
pop
mov
push
push
shr
push
sub
add
add
sub
shl
sub
pop
sub
pop
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
fsin
int3
add
incb
add
cmpsl
add
mov
xchg
xchg
add
add
add
add
push
add
outsl
sub
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
add
add
add
pop
add
jne
push
mov
add
lods
pop
scas
in
mov
add
cld
add
add
pop
push
jle
add
lea
add
add
iret
xchg
mov
jmp
sub
pop
call
cmpl
je
push
push
shr
add
shl
ror
push
or
not
add
ror
sub
not
ror
sub
pop
ror
ror
pop
push
ror
shl
shr
pop
push
call
push
ror
pop
cmpl
je
push
push
push
or
inc
add
dec
shr
dec
sub
ror
lea
pop
xor
inc
pop
push
lea
push
push
push
push
push
push
push
push
push
call
mov
add
pop
mov
ja
scas
imul
lds
add
pop
add
add
jae
add
xchg
add
pusha
add
push
add
fldl
mov
in
mov
sub
pop
push
push
push
push
lea
push
lea
push
push
call
roll
xlat
add
add
int
add
call
subb
mov
push
pushf
pushw
fisubrs
popa
add
add
fwait
add
add
push
jle
lods
nop
add
lea
call
add
mov
mov
call
call
cmpl
je
push
push
xor
push
push
pop
add
add
sub
add
pop
rol
sub
sub
pop
push
shl
add
pop
push
push
push
lea
push
call
add
loopne
add
nop
xchg
add
add
in
fistps
fsubrl
out
add
lea
mov
xchg
push
mov
sub
pop
call
cmpl
je
push
push
shr
lea
not
shr
push
push
pop
add
ror
shl
sub
sub
ror
add
add
pop
add
xor
inc
pop
push
push
call
flds
orl
mov
cwtl
idiv
loop
flds
pusha
xchg
ljmp
call
jle
sbb
push
add
add
add
lcall
mov
in
in
clc
lcall
call
push
lea
push
call
sahf
mov
push
add
mov
add
pop
add
pop
add
outsl
js
divb
aam
popf
repnz
pop
cmpl
je
push
push
xor
sub
sub
push
sub
add
shr
sub
shl
pop
xor
add
shl
pop
push
push
push
push
push
push
push
push
push
call
add
add
add
add
popa
add
icebp
popa
mov
push
lret
add
add
int3
addb
mov
nop
fs
fcomps
add
sti
pop
int
add
sub
pop
push
call
push
sub
shl
sub
shr
pop
cmpl
je
push
push
ror
push
xor
add
ror
inc
sub
shl
inc
add
add
pop
lea
shr
rol
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
mov
out
add
pop
in
popa
push
push
mov
add
add
mov
mov
mov
lea
test
mov
add
add
pop
add
mov
int
add
addr16
add
test
add
add
insb
add
call
push
lea
shl
ror
pop
cmpl
je
push
push
add
shl
push
and
add
lea
ror
sub
sub
shr
add
pop
shr
pop
push
lea
push
push
push
call
xchg
mov
add
incb
hlt
lock
les
add
leave
add
cwtl
nop
add
pop
jge
sahf
mov
add
add
add
test
mov
loopne
add
push
inc
pop
call
push
xor
pop
cmpl
je
push
push
push
or
inc
add
shr
sub
dec
rol
ror
pop
dec
lea
pop
push
sub
pop
push
push
lea
push
push
push
push
lea
push
call
cld
pop
shll
push
add
add
fwait
xchg
add
icebp
add
lock
test
lock
add
add
jo
push
xchg
mov
add
add
sbb
movsl
add
int
mov
data16
mov
mov
in
call
add
push
dec
rol
ror
shl
pop
cmpl
je
push
push
xor
push
sub
add
xor
xor
add
sub
sub
lea
inc
pop
inc
add
dec
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
movl
add
clc
rolb
add
test
add
flds
fiadds
add
add
stos
ja
add
pop
add
pop
scas
add
sub
pop
push
push
sub
add
pop
call
push
inc
pop
cmpl
jne
mov
push
rol
pop
movl
jmp
push
rol
rol
pop
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
iret
add
test
jp
add
iret
std
add
mov
mov
add
flds
popa
add
fldl
test
add
lods
push
add
lahf
push
add
jge
in
fdivr
lcall
push
sub
sub
pop
pop
push
lea
push
push
lea
push
call
in
add
mov
gs
pop
xchg
subb
scas
in
push
pop
mov
xorb
add
rorl
add
imul
int3
jbe
je
add
test
fwait
rcrb
push
add
push
fiadds
push
pop
pop
push
inc
inc
ror
add
pop
leave
ret
push
sub
add
pop
push
push
add
shr
pop
mov
add
push
shr
inc
pop
cmpl
jne
push
push
xor
not
xor
push
xor
add
dec
add
sub
shl
add
pop
inc
add
pop
push
add
pop
pushl
push
shr
dec
lea
shr
pop
call
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
lret
add
jmp
add
jp
imul
jle
add
add
push
add
testb
jmp
pop
jnp
addb
add
add
pop
flds
loope
add
outsl
add
shrl
xchg
add
loop
xchg
sub
pop
push
push
lea
push
lea
push
lea
push
call
add
les
rolb
mov
in
mov
sbbb
mov
add
add
fsubl
js
in
lock
call
push
push
call
hlt
push
shl
call
push
andl
pop
mov
add
cmpsl
mov
mov
push
add
add
lock
mov
add
lds
out
in
clc
pop
jmp
push
push
push
push
push
push
push
call
fldenv
lods
incb
add
add
add
add
add
add
pop
incb
popf
add
sub
pop
cmpl
jne
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
add
mov
and
add
jbe
add
arpl
add
add
add
in
sahf
jecxz
add
add
pop
imul
in
add
pop
add
int3
sub
pop
mov
push
sub
not
dec
rol
pop
call
ret
push
lea
push
push
push
lea
push
push
push
call
pop
xlat
push
push
jge
add
add
hlt
lret
add
mov
xchg
add
rolb
int3
ja
add
add
test
add
mov
sti
add
add
flds
shlb
add
add
push
rolb
mov
add
pop
cmpl
jne
push
push
dec
add
push
or
inc
add
add
sub
sub
sub
sub
shr
pop
lea
sub
pop
push
ror
lea
dec
pop
pushl
push
dec
pop
call
push
push
push
push
push
push
push
push
push
call
jno
movb
mov
add
add
add
mov
add
add
jge
lret
add
add
xchg
add
fiaddl
lea
stos
rolb
leave
test
jnp
fildl
mov
jnp
add
mov
add
int
sub
pop
push
call
push
push
lea
push
push
push
lea
push
push
lea
push
call
pop
add
sahf
add
rolb
iret
xchg
addb
add
mov
cld
add
in
fs
popa
enter
fisubrl
add
popf
pop
add
push
lea
push
lea
push
call
addl
add
scas
cli
rolb
aam
enter
mov
bound
sti
add
push
repnz
loopne
push
add
sub
pop
cmpl
je
push
dec
pop
cmpl
jne
push
sub
rol
pop
mov
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
repnz
add
lret
out
add
sahf
in
add
add
mov
push
movsb
insb
push
mov
movsb
jnp
add
pop
call
mov
sti
cltd
std
add
add
add
add
lcall
fsts
add
ja
enter
add
push
push
lea
push
call
jp
xchg
jne
mov
shll
test
add
popf
add
nop
push
out
jno
xchg
movsb
xchg
in
lret
push
add
clc
lcall
das
push
add
push
push
sub
inc
add
push
push
pop
add
dec
dec
sub
sub
add
pop
xor
pop
push
ror
sub
rol
pop
pushl
push
lea
push
lea
push
push
push
push
push
push
push
push
call
loope
pop
aad
js
filds
xchg
push
mov
xchg
lahf
add
lcall
add
add
int
add
ja
mov
add
fists
add
push
in
mov
in
bnd
mov
pop
call
push
push
call
mov
pop
add
in
add
int3
add
mov
std
jnp
nop
jno
add
movsl
repnz
mov
jne
add
ret
add
add
add
addl
push
scas
add
pushw
add
mov
add
scas
mov
lcall
shrb
jo
cmp
cmc
shl
push
sub
add
sub
sub
sub
ror
add
shr
add
pop
lea
pop
push
push
lea
push
lea
push
push
call
xlat
push
out
add
add
jl
fiadds
enter
mov
frstor
lods
add
add
clc
add
cli
jmp
jns
push
mul
test
pop
cld
add
aad
addb
jl
add
add
add
sub
pop
pushl
push
pop
call
push
sub
rol
rol
pop
call
push
push
sub
push
push
pop
add
add
sub
lea
sub
pop
add
lea
pop
push
pop
pushl
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
jle
add
add
mov
add
mov
add
add
loop
add
add
fistl
add
fcompl
fcmovnbe
jo
mov
add
add
add
add
fdiv
mov
mov
add
lret
sahf
jle
xchg
add
in
fdivr
lcall
and
add
call
push
push
sub
push
and
add
inc
inc
sub
not
not
pop
lea
rol
shl
pop
push
sub
pop
pushl
call
push
lea
push
push
lea
push
call
jge
mov
pop
testb
scas
add
mov
out
insb
jnp
jns
pop
movsb
push
std
add
push
add
add
in
shll
rolb
loopne
loope
ror
add
add
loop
xchg
lcall
shrb
scas
ficomps
push
and
add
shll
add
aad
lret
dec
and
ror
sub
sub
ror
pop
add
ror
pop
push
lea
pop
pushl
push
lea
push
lea
push
push
push
push
push
push
call
pop
add
int3
mov
add
xchg
mov
add
ret
add
mov
add
add
lds
add
not
faddp
add
add
push
add
mov
add
add
loopne
lcall
loop
add
push
not
pop
call
push
push
xor
not
xor
inc
push
and
add
shl
shl
sub
sub
sub
lea
sub
pop
rol
inc
xor
pop
push
add
sub
pop
pushl
push
pop
call
push
sub
shl
shl
sub
pop
call
push
push
rol
ror
push
push
pop
add
sub
ror
sub
pop
not
pop
push
lea
xor
pop
pushl
push
not
add
inc
inc
pop
call
push
add
inc
pop
call
push
push
lea
inc
push
or
not
add
dec
xor
sub
sub
sub
pop
add
xor
shr
pop
push
push
push
push
lea
push
push
call
add
add
mov
arpl
add
mov
mov
push
fs
sarb
jecxz
add
arpl
push
mov
add
add
je
add
add
add
mov
add
mov
mov
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
call
add
subl
xchg
insb
jl
add
add
xchg
jbe
pop
add
lods
add
mov
fmull
into
add
add
mov
add
mov
add
xchg
mov
xchg
add
pop
add
mov
icebp
sub
pop
call
push
rol
pop
call
push
push
rol
shr
sub
add
push
push
pop
add
add
dec
sub
sub
pop
xor
shl
pop
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
incb
imul
push
add
add
add
mov
faddl
pop
add
lods
cmp
jp
add
bound
add
shl
add
add
mov
test
add
arpl
add
pop
sub
pop
pushl
call
push
push
push
push
push
push
call
mov
add
add
aam
add
jns
fwait
insb
test
mov
add
mov
add
mov
sarb
xchg
mov
xchg
add
add
mov
add
push
mov
push
test
pop
add
add
std
jl
jecxz
popf
test
mov
add
shrb
in
sub
pop
add
sub
rol
add
sub
lea
xor
shl
pop
shl
pop
push
push
call
add
add
add
nop
int3
movsl
scas
pop
lds
popa
ret
push
add
add
add
out
mov
mov
mov
add
cli
add
add
add
add
add
mov
enter
xchg
xchg
roll
lcall
jne
push
push
lea
push
push
push
push
call
add
add
add
add
lods
fnstsw
gs
push
popa
out
add
fildl
add
mov
in
call
add
push
sub
ror
not
pop
lea
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
popf
mov
mov
faddl
cwtl
mov
add
jno
add
mov
add
filds
mov
mov
imul
mov
add
add
mov
loopne
add
pop
in
aam
sub
pop
call
push
push
shr
push
or
inc
add
inc
lea
sub
rol
pop
lea
add
pop
push
push
call
std
mov
test
xchg
movsb
test
popf
lods
mov
push
add
add
mov
out
xchg
cmpl
add
push
out
add
add
pop
add
in
add
cmpb
add
add
xlat
std
add
lcall
cmpsl
in
iret
xchg
add
sti
nop
lods
add
add
lcall
jne
call
push
push
push
push
push
push
push
call
jne
add
push
add
mov
fsubr
cwtl
pusha
movsb
xchg
add
add
add
arpl
add
add
add
add
addl
rol
add
lcall
shrb
xor
out
add
push
and
add
add
add
sub
sub
ror
dec
pop
inc
pop
push
push
push
push
push
push
push
push
push
push
call
mov
jno
pop
fdivl
jb
lcall
add
cwtl
add
push
add
pusha
mov
test
mov
add
data16
mov
add
add
add
add
sub
pop
pushl
push
lea
push
push
push
push
call
icebp
stos
jne
lea
jge
sarl
add
fdivrl
mov
add
add
mov
into
add
sarb
add
add
fistps
add
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
mov
movsl
mov
jp
lea
push
fiadds
add
pushf
mov
cmpsl
shl
mov
test
mov
int3
add
mov
out
stos
add
test
out
xchg
add
cmpsb
imul
mov
stc
add
iret
movb
add
xchg
mov
sub
pop
call
push
push
lea
shr
lea
push
push
pop
add
sub
inc
xor
sub
sub
add
add
pop
not
lea
add
pop
push
push
push
push
push
call
jle
add
xchg
roll
add
mov
add
add
push
loop
add
add
cltd
jb
mov
add
add
lcall
jne
push
rol
shr
pop
call
push
shl
pop
call
push
push
inc
push
or
inc
add
dec
sub
shl
sub
ror
add
shl
add
pop
ror
pop
push
lea
push
push
push
push
call
add
sbb
mov
add
jl
mov
je
loopne
add
mov
add
jns
mov
add
sti
xchg
outsl
add
mov
push
jmp
sub
pop
pushl
call
push
push
lea
push
sub
add
add
xor
sub
sub
sub
lea
add
pop
shr
sub
ror
pop
push
push
ror
push
push
pop
add
lea
add
add
sub
sub
add
xor
pop
sub
pop
push
dec
sub
not
pop
call
push
lea
push
push
push
lea
push
push
push
push
call
test
add
mov
imul
mov
data16
mov
xlat
idivl
repnz
add
in
add
mov
addb
push
cli
out
add
out
add
into
add
add
add
add
scas
mov
add
int3
fidivl
jb
push
add
jo
bound
lcall
push
push
lea
push
push
call
add
add
std
add
jmp
jne
mov
data16
add
add
cltd
add
jmp
mov
add
call
mov
mov
pop
jmp
mov
in
lock
lcall
jne
call
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
add
jo
add
stc
xchg
add
lcall
add
add
add
add
add
lea
cli
xchg
mov
add
jno
int
je
jns
add
sti
mov
in
fcomps
add
add
push
push
push
push
push
lea
push
call
cltd
mov
aad
pop
out
subb
push
add
xchg
push
add
xchg
in
pop
in
fsubl
jge
push
sub
pop
int
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
filds
movl
push
addr16
mov
add
loopne
fiaddl
add
je
push
movl
into
add
jno
add
test
add
add
add
jle
xlat
add
outsl
stos
add
add
jo
leave
add
pushf
popa
fwait
roll
push
sub
pop
lea
push
push
inc
xor
add
lea
push
push
pop
add
sub
sub
sub
inc
not
pop
pop
push
rol
not
inc
pop
pushl
call
push
sub
inc
pop
push
call
push
push
add
add
push
sub
add
sub
lea
sub
lea
add
lea
ror
pop
sub
pop
push
add
pop
pushl
push
add
shr
sub
pop
call
push
shr
pop
call
push
push
push
push
push
call
mov
cmpsb
ret
and
pushf
add
jp
add
loopne
mov
mov
hlt
je
add
add
movsl
add
stos
xlat
add
mov
add
add
mov
add
pop
pop
sahf
addr16
add
add
add
sub
pop
mov
lea
push
push
ror
sub
push
or
not
add
add
sub
not
rol
xor
pop
add
pop
push
lea
push
push
lea
push
call
mov
icebp
mov
rol
add
add
add
lods
add
add
mov
lret
loope
add
add
aad
add
add
lcall
lret
lods
mov
jp
aam
rcr
rolb
xchg
mov
popa
pop
mov
mov
lcall
jne
push
dec
rol
pop
call
push
push
lea
push
push
push
push
call
sbbb
ret
js
mov
imul
movsb
add
mov
mov
add
add
popf
nop
fs
add
pushf
mov
gs
data16
mov
add
stos
mov
add
pop
fs
pop
je
add
loope
mov
in
call
cmp
push
dec
xor
pop
push
push
push
push
push
push
call
jp
sar
push
lcall
jmp
rol
jnp
ja
add
add
xchg
add
jle
filds
mov
in
pop
push
push
add
sub
sub
sub
pop
push
push
pop
pushl
push
push
shr
dec
shl
push
sub
add
shl
not
shl
sub
add
shr
pop
shl
pop
push
not
pop
push
push
sub
rol
pop
call
push
push
ror
ror
push
sub
add
dec
sub
add
pop
add
add
inc
pop
push
ror
add
add
pop
pushl
call
push
push
push
push
lea
push
call
mov
mov
fwait
in
add
test
add
fucomp
push
push
add
add
cmc
stos
add
cmpsb
add
je
fstpl
mov
add
add
in
lcall
call
movsb
push
push
push
push
push
call
jb
mov
add
mov
add
xchg
outsl
ret
jge
jmp
jne
lock
lods
ljmp
add
push
xchg
hlt
je
sahf
xchg
add
mov
push
add
add
push
lahf
add
in
in
call
push
push
add
push
or
not
add
sub
add
inc
sub
shr
pop
ror
shl
pop
push
push
push
call
out
mov
mov
outsl
addl
add
test
add
loope
add
xchg
add
cmpsb
imul
add
in
pusha
pop
flds
mov
add
inc
mov
mov
lock
add
xchg
mov
add
pushf
mov
lcall
jne
push
dec
pop
call
push
push
push
push
push
push
push
push
call
pop
add
add
jecxz
add
add
cwtl
fbld
add
pusha
add
add
iret
add
add
mov
in
cbtw
push
loop
xchg
jmp
add
fldcw
lcall
rclb
rol
pop
pushl
push
push
call
pusha
add
pop
add
add
xchg
jl
add
jbe
add
add
mov
jns
lods
add
cmpsl
std
imul
outsl
add
add
add
in
lret
stos
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
jle
add
roll
mov
add
add
pop
add
clc
jmp
nop
add
mov
xchg
add
push
push
jmp
jnp
sub
pop
jmp
push
push
not
shl
dec
push
push
pop
add
rol
lea
shl
sub
xor
ror
pop
shl
add
add
pop
push
dec
ror
rol
pop
pushl
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
imul
mov
add
filds
add
pop
xchg
pushf
test
push
add
rcr
rorb
pop
add
add
add
iret
add
xchg
add
add
push
mov
add
out
jne
add
add
rorl
mov
add
add
mov
call
push
push
lea
push
lea
push
push
lea
push
call
stos
add
jecxz
push
add
add
insb
cwtl
fcmovu
add
add
js
jle
add
add
add
push
popa
xchg
sub
lcall
shrb
rcl
push
xor
sub
shr
push
xor
add
shl
dec
sub
inc
shr
pop
xor
sub
pop
push
lea
push
lea
push
call
mov
mov
pop
pusha
pop
imul
jb
mov
hlt
add
movl
stos
add
add
add
movsb
popl
add
rolb
pop
mov
cmpsb
sub
pop
pushl
push
push
push
push
push
push
push
push
lea
push
push
call
rol
adc
pop
add
add
jae
add
add
mov
cmpsb
call
cld
add
cwtl
mov
loope
push
add
ret
fcomps
dec
adc
add
jp
push
lea
push
lea
push
push
push
push
call
pusha
add
addb
add
add
mov
cmc
add
nop
add
int
in
add
add
hlt
pop
add
ret
add
imul
add
scas
add
xchg
add
out
add
add
mov
mov
xchg
push
cld
popf
lock
xchg
push
push
push
call
stos
jae
add
add
add
add
add
add
add
mov
xchg
int3
mov
add
in
add
xchg
add
movsl
mov
aam
add
int3
add
add
sti
movb
add
imul
add
in
clc
lcall
ror
push
add
add
pop
add
pop
push
ror
shr
dec
pop
pop
push
xor
pop
pop
xor
push
pop
inc
ret
push
add
add
sub
pop
leave
push
push
call
mov
add
add
add
ret
add
add
ljmp
aad
mov
add
test
lret
sub
pop
ret
push
push
push
push
push
lea
push
push
push
call
add
xchg
sbbb
add
shll
xchg
bound
jp
jb
xchg
cmc
push
jl
add
add
in
in
lcall
in
push
push
push
push
push
push
push
push
call
add
call
add
fs
add
bound
mov
cwtl
lahf
mov
add
add
shll
lods
mov
add
push
add
aad
mov
pop
add
sahf
add
imull
lea
sub
pop
cmpl
jne
push
push
lea
push
lea
push
call
mov
jno
add
fiaddl
mov
movl
fists
andl
lock
mov
jmp
push
shl
pop
mov
push
lea
push
push
lea
push
push
lea
push
call
mov
add
rolb
add
cwtl
mov
add
pop
lods
addl
popf
cltd
add
add
add
call
add
leave
push
add
not
ror
pop
xor
add
push
shl
xor
pop
xor
push
push
call
mov
leave
loopne
add
lret
data16
mov
out
movsl
add
mov
mov
popl
bound
rclb
add
xchg
into
jo
add
les
mov
mov
cmc
push
cmpsb
add
add
mov
add
add
add
in
clc
lcall
push
push
call
pop
mov
add
pop
pusha
faddl
cli
add
roll
add
add
imul
add
into
mov
add
lcall
jmp
push
lea
push
lea
push
push
call
xchg
adc
add
push
add
mov
add
xlat
mov
add
out
add
imul
add
mov
mov
test
mov
jnp
add
insb
out
in
lock
lcall
mov
ror
pop
sub
push
push
lea
push
push
push
push
push
push
lea
push
call
loopne
add
xchg
add
add
add
pop
shll
add
icebp
jle
ja
add
loopne
add
push
jb
outsl
add
loopne
addr16
push
push
mov
xchg
aad
jnp
int
add
lcall
xor
mov
js
icebp
stos
push
call
movsb
mov
std
in
mov
add
add
add
add
out
add
jno
lods
mov
cmp
mov
nop
je
add
fsub
add
add
add
mov
scas
add
mov
mov
stos
add
jbe
aad
push
sub
pop
pop
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
xlat
add
movsb
xchg
add
add
add
in
stos
mov
add
out
stos
mov
fcomip
sahf
mov
add
mov
rcrl
movl
stos
jp
add
mov
imul
pop
sub
push
lea
push
push
call
add
imul
add
xchg
add
add
std
sahf
lods
fldl
add
add
rolb
add
add
add
add
loopne
add
faddl
add
add
add
mov
cmp
cmp
call
lea
push
push
push
push
call
mov
mov
jmp
add
add
push
pop
test
test
push
mov
lret
add
in
sbbl
pop
mov
push
push
push
push
push
lea
push
call
outsl
add
ja
mov
add
fadds
mov
xchg
xchg
pop
add
mov
add
mov
rorl
imul
jge
push
add
xchg
add
add
sti
mov
sub
pop
lea
sub
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
shll
mov
pop
add
enter
insb
add
add
mov
add
jbe
push
filds
jl
add
mov
lcall
cld
hlt
add
lcall
add
add
or
shl
add
pop
shr
push
lea
add
xor
pop
add
push
add
sub
xor
sub
pop
sub
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
add
xchg
test
jnp
mov
in
add
hlt
out
add
ret
imul
push
jl
add
push
mov
push
jl
add
cld
push
jmp
add
ret
add
add
add
xchg
rorb
lcall
xor
inc
rol
pop
shr
push
add
add
pop
and
push
push
push
push
lea
push
push
call
add
xchg
enter
add
addr16
add
rolb
add
pusha
xchg
push
add
add
cli
shl
add
add
cmpsb
mov
sub
pop
sub
push
push
lea
push
lea
push
call
jae
rcrl
mov
add
push
jmp
sahf
add
push
xlat
add
add
mov
add
sub
pop
cmp
jne
push
push
push
push
push
push
push
push
call
in
aad
mov
mov
add
add
fstpt
pop
add
add
add
frstor
add
sub
pop
leave
push
push
call
add
in
lock
add
add
add
lret
movsl
lcall
add
loopne
add
js
add
add
enter
xchg
xchg
jle
mov
gs
in
clc
pop
ret
push
push
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
nop
add
mov
incb
add
sarb
loop
add
shll
add
add
outsl
mov
lcall
cld
push
lea
push
lea
push
call
add
pushf
cmpl
stc
cwtl
add
add
add
mov
popa
std
sti
mov
jo
mull
into
std
xchg
push
mov
iret
add
add
mov
add
jle
add
add
add
add
add
lcall
pop
push
push
not
sub
sub
pop
push
push
push
push
push
push
lea
push
call
fdivp
lahf
jge
jle
xchg
add
add
out
add
mov
mov
fcoml
add
frstor
add
add
js
add
add
fldl
scas
popa
jp
add
jae
add
sub
pop
push
push
push
pop
push
push
sub
lea
shl
pop
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
nop
xchg
in
mov
add
stos
push
lds
add
jno
add
testl
push
add
stos
fwait
mov
hlt
lods
xchg
sub
pop
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
add
popa
push
cmpsb
jge
test
leave
mov
popf
add
je
nop
add
add
roll
jle
fnstenv
jns
pop
xchg
add
add
insb
imul
arpl
fdivl
add
add
in
jb
add
jmp
pop
sub
mov
push
push
call
subl
aad
sbbb
mov
imul
add
imul
xchg
fldcw
scas
pop
xchg
add
add
add
sub
pop
shr
push
push
lea
push
push
push
lea
push
push
push
push
push
call
int
scas
add
add
add
rol
popf
add
lds
add
add
data16
enter
xchg
jnp
mov
add
sub
pop
add
push
add
sub
add
pop
mov
add
push
push
push
push
push
push
push
push
push
push
call
xchg
pop
jne
jb
mov
add
scas
xchg
pop
add
add
aad
xlat
add
leave
data16
addl
add
add
pop
les
in
fdivr
lcall
jnp
push
push
push
push
lea
push
push
push
call
scas
pop
arpl
add
xchg
add
mov
add
rcl
mov
add
jb
fistpll
fldt
jmp
add
push
push
push
call
xchg
cwtl
add
out
cli
movsb
xchg
insb
add
add
add
jns
test
out
jmp
add
stos
add
add
fwait
cld
add
ficompl
jns
mov
add
pop
xor
mov
push
push
push
lea
push
push
call
test
lea
flds
mov
lods
call
add
add
add
testb
xchg
mov
in
pop
and
push
shr
shr
xor
ror
pop
rol
rol
push
lea
push
push
push
lea
push
push
push
push
push
push
call
jp
shlb
add
add
add
leave
leave
andb
add
jle
add
jns
add
hlt
imul
jbe
add
call
xchg
add
rcr
mov
jno
mov
add
push
add
rol
ljmp
js
in
fcomps
add
lea
push
push
push
push
push
call
add
mov
test
mov
mov
mov
push
int3
testl
outsl
add
mov
jl
loopne
js
cld
push
in
add
add
add
lds
mov
add
push
lcall
cmp
jne
push
sub
not
pop
add
cmp
je
push
not
add
pop
add
cmpl
jne
push
sub
add
pop
xor
pop
push
shl
shr
lea
inc
pop
pop
pop
push
shr
pop
pop
pop
push
rol
pop
leave
push
lea
push
push
push
push
call
test
sarl
mov
aad
add
movsb
add
mov
pop
mov
xchg
push
add
push
mov
int
addr16
add
js
fiadds
mov
ja
add
push
jns
mov
add
mov
lcall
or
push
rol
sub
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
mov
imul
pop
icebp
add
aad
pop
int
fisubrl
push
mov
scas
add
add
stos
add
sub
pop
add
push
lea
xor
pop
mov
push
xor
pop
cmpb
call
push
ror
rol
pop
push
call
push
push
lea
push
call
faddl
push
cwtl
cmpsl
rolb
add
add
add
enter
test
jmp
jl
outsl
mov
add
add
add
fdivs
cld
rcl
add
testl
add
in
popf
add
mov
in
hlt
lcall
xor
push
rol
not
pop
pop
pop
push
shr
xor
pop
pop
pop
push
rol
sub
rol
pop
pop
leave
push
push
push
push
push
push
push
push
lea
push
call
add
lret
add
add
int
std
mov
jmp
jb
add
add
cltd
sarb
jnp
lahf
hlt
add
add
mov
add
add
add
mov
in
fcompl
or
push
inc
pop
push
push
sub
inc
pop
mov
push
lea
push
lea
push
call
mov
scas
add
xchg
add
je
aam
add
aam
add
js
cmc
pop
ror
cmc
add
stos
in
scas
hlt
add
scas
add
add
imul
sub
pop
add
push
push
shl
inc
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
jbe
rol
add
sahf
add
sarl
pop
out
jb
add
sti
add
push
ret
xchg
add
jns
add
imul
add
mov
in
in
push
mov
push
xor
pop
push
pop
push
inc
dec
ror
add
pop
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
xlat
jb
add
ja
add
add
mov
add
ret
mov
scas
mov
add
movsl
xchg
gs
lds
insb
pop
add
xchg
add
ljmp
hlt
add
inc
pop
mov
shr
push
push
push
push
push
push
push
push
call
add
add
fstps
stos
rcrb
icebp
cltd
fiadds
lods
test
add
add
lds
fildl
add
ja
add
test
mov
add
movsl
add
add
add
push
add
in
mov
pop
add
mov
push
ror
add
ror
pop
add
pushl
push
not
rol
add
pop
popl
push
lea
push
push
lea
push
push
push
call
fs
add
add
add
in
mov
call
add
add
icebp
add
pop
test
push
pop
push
push
fcom
int
add
add
lcall
fwait
ljmp
add
cmpsb
test
in
call
add
push
xor
pop
xor
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
pop
add
fs
jbe
sahf
jmp
pop
jge
std
std
loop
add
mov
jb
lods
add
shll
sahf
add
mov
pop
ror
lret
fadds
movsb
add
add
pop
add
in
fcomps
adc
mov
push
push
call
add
movsb
push
cltd
add
jns
sub
add
add
add
add
add
cmc
xchg
popf
mov
mov
add
imul
add
push
dec
pop
xor
rol
push
lea
shl
shl
lea
pop
nop
nop
push
dec
sub
pop
xor
nop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
scas
mov
add
add
popa
mov
add
add
jnp
add
xchg
test
lds
add
js
jecxz
add
pushf
add
jns
lret
add
jns
mov
sub
pop
nop
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
sbbb
sahf
incb
mov
insb
add
popf
pop
jo
add
lods
cld
add
std
mov
mov
add
add
cwtl
lcall
add
in
outsl
xchg
add
pop
add
mov
add
lahf
ja
jb
sarb
add
mov
add
mov
lcall
push
push
call
mov
lods
lock
repnz
enter
testb
enter
add
add
lret
int
add
scas
add
scas
fistpll
fsubrs
mov
add
add
add
popf
add
mov
push
add
pop
nop
push
push
call
add
add
mov
add
add
cmc
add
add
add
roll
fistpll
sar
arpl
add
add
cmpsb
mov
add
add
lea
push
add
sub
pop
cmpb
jne
add
push
push
call
add
jge
mov
cmc
bound
add
add
mov
pop
push
add
mov
mov
mov
lret
fstpt
ljmp
lcall
push
not
pop
nop
push
add
dec
pop
cmp
je
push
add
not
lea
pop
nop
push
sub
shl
dec
pop
nop
inc
push
push
call
mov
out
add
add
mov
stc
jl
mov
add
push
add
sbbl
insb
add
jge
add
icebp
xchg
lea
mov
jne
roll
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
add
add
jb
in
jp
popf
add
pop
add
xchg
add
aad
add
mov
mov
add
add
out
xchg
lcall
push
push
lea
push
push
push
lea
push
push
call
lea
jne
add
jb
add
add
scas
sahf
div
test
add
push
lret
jl
add
in
in
lcall
jne
jb
xor
push
shl
pop
jmp
mov
push
push
push
push
push
call
add
add
push
loopne
xor
cwtl
add
js
add
add
add
add
add
add
shrb
mov
jle
add
add
add
popl
lret
add
add
fs
jmp
cli
lea
xchg
addb
mov
add
add
xchg
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
push
call
xorl
add
add
cmpsb
jge
mov
add
imul
xchg
js
scas
gs
mov
add
add
addb
movsb
outsl
push
insb
add
add
arpl
add
movzwl
push
add
ror
pop
mov
add
push
shl
dec
pop
mov
push
shr
shr
sub
pop
xor
push
push
push
push
push
push
call
in
pop
mov
pop
lahf
jmp
add
rcrl
int
int3
add
push
add
stos
cmpsl
imul
sti
into
add
sub
pop
xor
push
push
lea
push
call
shl
test
add
add
add
stos
insb
xchg
fnsave
rcrb
add
adcb
add
add
int
jmp
add
loopne
in
shll
in
hlt
pop
shl
push
push
lea
push
call
loope
mov
mov
mov
add
add
add
movl
add
rorb
jae
jo
add
add
add
add
add
lcall
dec
nop
add
xor
mov
push
push
lea
push
push
push
lea
push
call
cwtl
imul
add
add
pop
lods
insb
fsubr
bound
adcb
add
je
xlat
mov
pop
sub
pop
shl
push
lea
push
push
push
push
push
lea
push
push
push
push
call
popl
add
lcall
add
roll
lret
jl
add
movsl
jae
les
fwait
in
add
lcall
jl
add
add
mov
mov
push
add
fldl
add
add
insb
cld
add
fldl
mov
mov
add
add
add
sub
pop
xor
shl
push
xor
ror
sub
pop
xor
mov
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
sarb
test
push
sarb
lods
xchg
add
add
jno
mov
ljmp
pop
add
add
roll
lcall
inc
hlt
push
push
push
push
push
push
push
push
call
jno
mov
add
add
add
add
lods
rolb
add
push
add
hlt
jo
mov
push
bound
mov
jl
in
pop
jle
add
jmp
add
add
rorl
add
xchg
mov
jno
add
pop
mov
pop
push
xor
inc
xor
pop
pop
push
lea
rol
pop
pop
push
ror
inc
pop
pop
leave
push
push
push
lea
push
push
push
lea
push
push
push
call
jl
add
add
testb
pop
ret
pop
push
add
ret
add
cmc
clc
add
add
xchg
add
sub
pop
ret
push
ror
sub
pop
push
mov
push
dec
pop
push
push
push
inc
pop
push
push
lea
add
pop
push
mov
push
push
push
push
call
out
mov
outsl
add
jnp
test
add
mov
push
mov
addl
mov
add
lcall
int
test
test
add
out
loope
jnp
addb
outsl
add
cmpb
jae
add
sub
pop
mov
push
push
push
push
push
lea
push
call
add
leave
mov
jmp
pop
add
ret
add
cmpsl
clc
add
jmp
push
ror
add
add
addl
mov
add
test
add
hlt
add
lret
shrb
add
in
call
mov
push
shl
pop
test
je
push
push
push
push
push
call
add
data16
jle
loopne
mov
push
xchg
add
out
incb
add
add
add
loop
xchg
xchg
jns
add
mov
add
add
sahf
in
in
in
pop
mov
push
not
sub
pop
test
je
push
push
push
push
call
add
leave
pop
jecxz
push
xchg
aad
mov
divb
push
add
mov
leave
arpl
add
gs
mov
pop
add
mov
into
xchg
add
add
lea
testl
mov
mov
add
add
add
add
pop
mov
push
push
call
mov
add
jnp
add
lcall
add
jp
hlt
add
fiadds
add
leave
cmc
stos
mov
add
add
mov
iret
lods
andl
les
jae
fcmove
filds
push
add
mov
mov
fildl
jl
hlt
sub
pop
mov
mov
push
add
xor
not
lea
pop
inc
push
sub
ror
pop
cmp
je
push
ror
lea
inc
pop
test
je
mov
push
push
lea
push
push
push
push
push
push
push
push
call
mov
les
add
add
add
add
testl
add
mov
insb
in
push
pop
sti
add
loopne
lds
add
popf
out
add
add
push
add
add
pop
xchg
pop
add
pop
add
add
jle
mov
mov
add
add
sub
pop
inc
push
push
call
jb
add
add
mov
lods
roll
add
add
in
mov
add
add
mov
xchg
add
add
add
pushf
add
add
add
jb
xchg
incb
aad
int3
mov
in
clc
lcall
rorb
test
add
add
movb
rorb
add
call
jecxz
pop
xor
push
inc
pop
pop
push
lea
push
push
push
call
xchg
hlt
scas
add
addl
mov
add
pop
add
add
addl
sub
pop
pop
push
push
push
push
call
mov
hlt
je
mov
add
add
add
shrl
rolb
fadds
mov
jecxz
ficompl
add
add
aad
add
add
cmpsl
add
jb
test
add
fiadds
js
cmc
int3
stc
lret
add
andb
add
add
add
fistl
add
in
lock
pop
pop
push
add
sub
rol
pop
leave
push
inc
ror
shl
pop
ret
mov
push
ror
shl
pop
inc
cmp
jne
push
lea
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
lds
add
stc
xchg
outsl
cmpl
leave
add
stos
add
mov
sub
add
arpl
shl
testl
in
fdivr
lcall
jle
push
not
xor
xor
pop
mov
push
lea
push
call
imul
push
js
out
mov
in
mov
imul
jge
add
mov
lret
imul
pop
test
je
push
lea
push
lea
push
call
push
mov
mov
out
lahf
in
shll
add
nop
jbe
jbe
add
add
fwait
mov
in
xchg
out
adcb
rolb
pop
add
add
jge
mov
pusha
movsb
add
sub
pop
mov
push
shl
dec
add
pop
add
push
push
push
push
push
push
push
lea
push
call
clc
add
mov
fsub
mov
rolb
imul
add
add
add
push
add
push
movl
je
out
std
mov
hlt
add
mov
add
out
push
mov
add
add
push
add
sub
pop
cmp
jne
push
push
push
push
push
push
lea
push
push
call
push
jae
test
add
jbe
fsubl
roll
fwait
add
scas
add
fdivl
add
add
add
pop
add
add
add
fdivrl
out
add
mov
mov
mov
in
cmpsb
test
imul
sahf
sub
pop
mov
test
je
push
shl
not
add
pop
mov
push
inc
pop
add
cmp
je
push
sub
rol
pop
jmp
push
push
push
lea
push
push
push
call
js
fdiv
lods
mov
xchg
add
leave
mov
pop
mov
out
jmp
mov
test
ljmp
add
mov
lea
mov
add
out
add
add
add
mov
add
add
add
add
movsl
test
in
call
xor
push
lea
push
push
lea
push
push
call
xchg
add
jl
add
add
xchg
into
add
xchg
je
rcll
jbe
in
add
add
in
int3
add
testl
add
add
bound
push
mov
popl
imul
add
cmpsl
movb
sub
pop
pop
pop
push
push
lea
push
push
push
lea
push
call
add
fs
jle
add
stos
add
add
test
cmc
add
add
jecxz
push
add
add
add
cmc
add
mov
add
pop
push
add
pop
leave
push
push
lea
push
push
push
push
push
push
push
call
int3
add
iret
lock
lds
imul
cmpsl
loop
add
ljmp
add
cmpsb
xchg
add
pop
cmpsb
add
outsl
jne
sub
pop
ret
lea
push
pop
pop
push
add
sub
add
pop
pop
pop
push
lea
xor
pop
pop
leave
push
pop
ret
push
push
push
push
push
call
add
add
mov
add
pusha
add
mov
push
scas
ror
roll
add
add
add
adc
xchg
add
rolb
clc
add
add
add
mov
loop
sub
pop
mov
push
sub
sub
xor
pop
pop
push
not
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
repnz
mov
push
pop
popa
test
add
testb
add
add
xchg
jne
aad
mov
add
add
les
add
loope
callw
mov
jnp
ret
scas
xchg
add
arpl
sub
pop
pop
pop
push
push
call
xchg
lret
add
mov
fwait
loopne
shl
push
add
add
fadds
pop
mov
rolb
add
movsb
add
add
push
rolb
adc
stc
push
add
testb
popa
xchg
add
lods
data16
xchg
mov
in
clc
lcall
push
shl
pop
ret
lret
sbb
mov
scas
lret
fnstsw
scas
xchg
xchg
mov
scas
pop
xlat
mov
scas
lret
scas
mov
scas
pop
jl
int
cwtl
push
cmp
arpl
insb
rcrl
dec
movsb
mov
dec
pop
sbb
or
pop
cmp
ret
inc
jl
lret
mov
loope
xor
data16
icebp
adc
aas
fs
ljmp
pop
or
shll
test
call
out
mov
fwait
mov
notl
rcrb
ja
mov
adc
mov
lret
stos
adc
sbb
push
nop
icebp
lods
out
cmp
cmpsl
mov
cmp
push
sarl
sbb
out
cwtl
pop
icebp
push
inc
inc
push
dec
add
sahf
out
add
clc
ret
outsb
into
ret
jg
adc
fmuls
mov
jo
sub
aaa
add
push
shll
stos
xor
mov
orl
cwtl
mov
and
mov
test
pop
jno
hlt
movsb
icebp
push
or
pop
mov
in
adc
notl
and
mov
push
andl
and
fisttps
call
add
adc
inc
in
shrb
sub
ds
jo
in
cmp
lods
cmpl
cmp
dec
mov
out
push
xcrypt-ecb
cmpsl
int
outsb
mov
or
push
sbb
mov
mov
lcall
jb
sub
cmp
dec
push
or
jg
shll
insb
inc
or
push
fdivrl
fists
inc
roll
xchg
data16
adcb
jo
dec
lret
cmp
mov
loopne
ljmp
test
fadds
scas
outsb
mov
pushf
sbb
sti
ror
add
aaa
pop
out
mov
sbb
imul
popa
pavgw
pushf
mov
or
pusha
test
inc
js
sub
and
sti
cmpsb
add
fs
arpl
sub
sbb
push
mov
cld
fdecstp
jmp
xchg
cmpl
ljmp
sbb
adc
pop
stc
mov
imul
popa
mov
sets
push
mov
mov
cmp
insl
pop
stos
adc
pop
pop
add
dec
mov
cltd
sbb
and
mov
sub
jg
negl
ds
cmp
mov
rclb
jge
dec
xchg
cs
and
or
or
jno
test
lea
jnp
aam
cmp
jnp
inc
sub
fisttpll
test
jns,pn
add
mov
mov
cmp
jle
mov
lods
sti
or
adc
mov
adc
mov
ds
lods
scas
sti
ret
sub
mov
int3
cs
add
andl
cmp
dec
jno
xchg
movsb
in
adc
rolb
jl
incb
lods
sub
fwait
mov
adc
sub
ficomps
sbbl
sub
jbe
dec
inc
fwait
gs
js
push
sbb
sbb
sbb
outsl
jnp
xchg
mov
es
std
xchg
cltd
inc
aam
sarb
mov
sbb
sbb
mov
sub
jmp
sub
iret
mov
jl
sub
repnz
cltd
sub
push
dec
pusha
aas
xchg
cmp
sahf
or
and
fldl
push
daa
sub
pop
cmc
jmp
push
hlt
xlat
sbb
testl
hlt
movsl
imul
add
dec
or
mov
inc
dec
aaa
loopnew
adc
xor
cmp
pop
ja
xchg
rsm
sbb
imul
adc
adc
inc
out
mov
sahf
cs
fidivrs
pop
mov
pop
aam
xchg
gs
lock
pop
and
out
in
mov
mov
bound
push
mov
dec
fidivl
aad
les
in
jle
dec
adc
cwtl
or
pushl
in
adc
call
packuswb
push
mov
loop
and
xchg
xchg
ret
lds
push
push
sub
icebp
out
push
lahf
popf
std
movsb
xchg
sbb
insl
push
fmull
lcall
cmp
out
xor
mov
je
fsubl
sbb
jbe
inc
ss
dec
and
mov
mov
pusha
sbb
out
ds
leave
fucomi
sbb
pop
dec
ret
adc
xchg
cmpsl
clc
cmp
adc
xor
les
adc
xchg
test
pop
jnp
out
fnsave
dec
in
dec
adc
mov
mov
cmp
and
mov
sub
mov
popa
pop
jae
nop
push
mov
clc
roll
ret
xlat
push
cmp
pop
movsl
int
dec
loop
cmc
daa
dec
pop
pop
adc
adc
out
or
jnp
or
mov
push
jo
leave
lret
repz
pop
push
adc
out
test
and
icebp
mov
jns
xchg
jg
arpl
push
xchg
pop
xor
mov
sub
loopne
ret
add
loop
mov
ds
and
repnz
jo
mov
dec
shrb
xor
pusha
pop
out
pusha
cmp
lods
jbe
or
pop
or
call
or
divl
scas
push
mov
ficompl
daa
xchg
dec
repz
pop
shll
iret
mov
call
jp
pop
fiaddl
outsl
sbb
scas
cmpl
lahf
addr16
or
lods
out
push
cmp
jge
sahf
push
fisubrs
mov
ret
xor
jo
sahf
lods
and
fiaddl
fcomp
adc
ss
and
pop
out
shr
push
fisubrs
cmpsl
xchg
shl
mov
mov
in
out
sub
pop
inc
aas
outsl
mov
mov
rcrl
pop
cld
add
jmp
sub
ret
inc
dec
mov
lret
loopne
test
sub
add
insl
imul
xchg
dec
adc
or
jae
push
nop
dec
adc
out
xlat
dec
inc
scas
or
xor
ret
or
dec
out
xchg
int3
outsb
movsb
testl
push
mov
or
pop
cltd
std
ret
jmp
inc
mov
ret
jno
lods
mov
xlat
lcall
pop
or
mov
sar
mov
lahf
push
jge
scas
cwtl
inc
inc
leave
test
inc
test
xor
jecxz
loope
mov
sub
cmp
or
push
sbb
notl
add
mov
jg
fs
mov
add
lods
push
xchg
loopne
cmp
daa
ja
or
inc
aas
xor
pushf
scas
lcall
ss
pop
js
xor
sti
dec
fdivl
idivb
ljmp
or
sub
jmp
cmc
out
inc
push
jne
dec
pop
jnp
mov
push
jecxz
int
jae
lcall
sbb
mov
lock
ss
andb
cmp
andb
cwtl
cmpb
or
clc
jae
mov
jle
in
xchg
test
loopne
jl
imul
xlat
cwtl
inc
popa
sbb
xor
ja
push
sub
push
mov
daa
xor
sbb
nop
mov
jo
nop
das
fwait
gs
sbb
pop
rolb
fnsave
fsubrs
int
adc
hlt
push
pop
bound
cwtl
fnstsw
xchg
xchg
ror
add
mov
xor
sub
lahf
psllw
inc
insb
pusha
dec
fisubs
adcl
test
in
aad
outsb
hlt
pusha
iret
pop
sbbl
lcall
aam
jle
push
out
adc
fucomp
dec
int3
inc
mov
inc
pop
mov
mov
into
push
addr16
xorb
inc
xchg
lcall
sub
add
mov
subb
rep
push
icebp
rolb
cmpsb
dec
aam
or
add
out
pop
cmpl
shl
xchg
loop
fs
mov
iret
andb
lea
nop
and
fcoml
loope
push
rclb
cmpl
insl
xchg
mov
std
jle
test
fwait
mov
prefetch
aam
jo
jg
cld
mov
adc
cmc
add
sub
scas
cmpsb
mov
add
xchg
jb
addr16
add
jno
push
push
out
sbb
scas
jge
mov
dec
les
rcll
mov
mov
pop
xchg
sti
addr16
fwait
jl
push
push
loop
lds
sub
stos
xchg
push
mov
xchg
les
sub
aas
mov
cwtl
jecxz
call
pusha
nop
push
push
js
outsb
lods
inc
mov
cltd
adc
and
mov
mov
jl
stos
cmp
mov
mov
mov
ror
rep
pop
cltd
adc
xchg
movsb
roll
addl
lock
push
push
gs
pop
jno
inc
je
stc
mov
adc
and
subl
into
or
xchg
mov
fstpl
fldcw
test
mov
fidivl
ds
inc
mov
in
adc
dec
xchg
mov
outsb
inc
je
and
mov
push
movsl
mov
mov
fbld
jge
mov
push
xchg
sahf
xchg
xor
and
daa
ret
js
in
pop
imul
cmc
ret
outsb
cmp
xchg
push
inc
sti
aam
xor
xchg
cvtps2pd
fwait
dec
clc
sub
or
mov
inc
stc
push
in
jmp
fsubs
xchg
push
cmp
mov
fimull
inc
mov
out
push
add
inc
test
sbb
lock
popa
lcall
fldenv
xorb
fstpt
sub
in
mov
and
in
and
pop
push
pop
push
push
stos
dec
add
adc
mov
hlt
sbb
push
xchg
mov
icebp
jne
cmp
dec
lcall
push
test
sbb
sub
cld
loopne
clc
jle
sbb
mov
or
inc
pop
addr16
add
xchg
mov
je
push
cli
or
push
lea
daa
outsb
push
jb
cld
or
xchg
and
jbe
test
lods
outsb
push
add
inc
push
mov
or
add
xor
cmp
ds
pop
push
sub
inc
stos
ficoms
or
pop
lahf
adc
lcall
ljmp
xor
je
lock
cli
shlb
sub
mov
or
pop
sub
sub
cltd
cmpsb
jns
xor
fisubs
adc
sub
inc
jb
ljmp
in
or
cmpxchg8b
lret
shl
lcall
lods
loopne
loop
js
cmpsb
add
out
jg
pop
xchg
pop
outsl
out
enter
je
sbb
mov
sahf
aas
in
and
pop
adc
adc
imul
shl
xor
cs
adc
scas
sarl
insb
push
pop
jae
mov
cwtl
mov
xchg
jns
loop
dec
fdivrl
out
jns
stos
inc
shr
in
rclb
fs
xchg
or
aam
push
ljmp
jae
xlat
inc
xchg
sbb
faddl
jb
xlat
out
orl
fidivrl
loope
push
arpl
push
mov
ficoms
fsubs
repz
xorb
dec
iret
jns
pushf
jae
into
or
out
int
popf
fcomps
mov
push
scas
jo
push
mov
cmp
ret
jbe
loope
pushf
fdivs
out
loopne
roll
jl
les
loopne
mov
bound
sahf
lods
cltd
in
jg
iret
sub
jg
pushf
mov
adc
fcomi
add
xor
and
mov
xlat
jg
xor
jnp
repz
daa
rcl
movsb
push
out
xlat
loop
push
test
out
cwtl
xchg
mov
popa
movsl
lahf
jl,pn
test
push
loopne
jns
cltd
add
roll
add
pushf
add
sub
cwtl
jae
fadds
js
mov
mov
inc
outsl
xchg
pop
or
pop
fnstenv
sbb
imul
fdivrs
imul
ret
movsl
lock
fs
add
mulb
dec
push
fadds
mov
cli
cmp
and
in
iret
xor
outsl
mov
push
and
enter
cmpsl
push
fmuls
xor
jge
pop
lahf
ret
bound
stc
sbb
mov
loopne
xor
sbb
movsb
lret
mov
push
mov
jne
int
jo
repnz
adc
dec
push
xchg
mov
in
jmp
inc
inc
insl
pop
jo
sub
xor
scas
ja
movsl
inc
push
xchg
jmp
daa
and
add
ret
leave
aad
gs
adc
mov
repz
fdivrl
jmp
int
jle
loope
sub
mov
inc
rcrl
je
jmp
mov
dec
jle
mov
inc
xlat
test
sbbl
repnz
cmp
mov
xchg
movl
mov
cmp
cmp
cmp
negl
jnp
dec
sub
mov
adc
push
and
pop
fidivrl
frstor
hlt
push
movsl
mov
mov
pop
pop
addb
cltd
dec
out
cmpsl
sbb
add
inc
pop
xchg
pop
int
lcall
loope
call
loope
lahf
xchg
xchg
in
cmp
sub
test
xor
jecxz
ss
and
cmp
in
jmp
shrb
push
add
inc
das
push
xchg
mov
fisubl
dec
pop
imul
orl
adc
ret
sub
inc
arpl
sahf
inc
loope
loopne
sbb
orb
or
mov
cmc
cmc
jo
fisttpll
xor
out
gs
pop
orl
shrb
roll
in
jle
popl
arpl
mov
imul
mov
xbegin
scas
mov
xor
in
or
xchg
ja
dec
and
lret
inc
je
push
rorb
lods
lahf
add
push
mov
stc
and
mov
jg
int3
and
subb
xchg
mov
js
popf
cmp
inc
addb
fisubs
imul
clc
stos
xchg
pop
iret
movsl
stc
xor
jecxz
jg
inc
jae
cltd
divb
enter
fs
sub
ret
inc
ret
mov
cmp
out
not
hlt
adc
pop
fmull
mov
or
clc
pop
shll
mov
cmpsb
cmp
adc
out
jecxz
sbb
mov
add
out
fisubs
adc
enter
adc
and
pop
mov
pop
adc
das
xchg
les
xor
hlt
mov
int
add
je
fldl
mov
dec
cmp
lds
xlat
daa
lret
inc
sbb
mov
cmp
jae
sahf
xor
cmp
adc
xor
jle
pop
ficoms
and
sub
jo
in
and
sbb
sbb
push
mov
loope,pt
clc
cwtl
push
ret
push
or
cmc
xchg
xchg
jno
inc
cltd
cmp
fwait
scas
lret
xor
scas
cltd
jle,pt
mov
and
sub
mov
movsl
push
int
mov
xor
mov
jge
push
mov
lods
inc
andl
adc
repz
push
add
lods
je
jmp
lods
sub
inc
mov
sarl
iret
push
add
lret
and
lock
mov
loopne
sub
mov
fwait
mov
movsl
aaa
add
inc
arpl
or
inc
push
hlt
cwtl
mov
pop
shrb
sub
pop
cltd
sbb
or
dec
std
mov
lods
mov
rorb
push
sbbl
xchg
ds
inc
mulb
push
gs
cmp
lods
orl
lcall
popf
push
aad
sub
or
cld
js
and
std
add
sti
mov
pushf
jle
mov
loope
loop
rol
outsl
enter
xchg
iret
mov
push
fildll
lea
fimuls
sub
enter
fiaddl
xor
xchg
std
jecxz
cltd
mov
xor
mov
cmp
stc
scas
repz
mov
inc
jg
push
gs
clc
addb
aaa
push
fisttpl
in
mov
scas
rcr
neg
cmp
xchg
push
in
jo
xor
sub
or
push
into
xor
mov
ss
and
dec
pushf
cld
xchg
insb
bound
jae
and
lahf
paddsw
jne
jno
xor
push
cmovo
scas
hlt
jecxz
jae
cmp
cmpsl
mov
mov
sbb
pop
xchg
jmp
xor
je
adc
ljmp
lcall
mov
mov
add
mov
mov
mov
sub
add
out
addr16
idivb
mov
and
mov
mov
inc
and
out
outsl
test
sbb
das
cmpsb
in
adc
cmp
adc
xlat
lcall
addb
test
adc
mov
shl
mov
xchg
movsl
jb
test
insl
test
push
jne
mov
lret
imul
inc
arpl
notl
aam
dec
fisubl
out
sar
clc
in
push
push
pop
call
mov
mov
out
sub
dec
mov
insl
sub
mov
andb
xlat
das
stc
iret
xchg
cmpl
in
push
jno
test
mov
loope
xor
push
mov
or
mov
je
fildl
inc
icebp
in
cmp
movl
popf
jle
scas
xlat
jle
pop
push
push
cs
cmp
mov
out
fadds
ret
in
sbb
jbe
inc
jp
ficoml
stos
push
cmpsl
in
pop
incb
aad
push
sti
rcl
ja
ja
add
mov
push
or
loop
push
nop
shll
mov
and
mov
sbb
jge
lea
push
jae
in
xor
test
adc
mov
and
cmp
cli
dec
imul
push
cmp
pop
addr16
push
mov
cmp
imul
sub
mov
sub
jno
xor
push
jecxz
add
mov
push
xor
mov
stos
stc
out
push
sbb
in
fwait
je
daa
gs
sbb
ret
push
sahf
mov
ds
ss
and
pop
shlb
and
rcll
repnz
iret
jno
outsl
push
mov
test
sbb
leave
test
and
jne
and
int
inc
int3
jmp
test
stos
add
mov
pop
jge
adc
dec
and
pop
jge
dec
insl
mov
repz
cli
mov
call
inc
xchg
or
ja
sub
xlat
push
loopne
add
pop
cs
idivl
add
test
xor
sub
ret
imul
aaa
loop
test
jle
daa
std
push
add
in
stos
xchg
inc
imul
into
jle
mov
aam
sub
and
mov
out
xchg
mov
dec
adc
inc
or
mulb
sbb
pusha
andb
cmp
aaa
popf
out
cmpsb
sub
xchg
call
jmp
fwait
gs
inc
les
cmp
fld
popa
or
scas
ficompl
es
push
fnstcw
pop
movsl
js
bound
mov
pop
gs
dec
scas
pushf
xor
aam
add
adc
imul
subb
mov
sub
lds
mov
int
add
jns
sbb
sub
push
daa
push
rcll
jp
push
fcompl
es
xlat
sub
testl
mov
inc
rorb
test
add
outsl
inc
mov
icebp
mov
lods
jbe
xchg
inc
movaps
test
add
mov
mov
pop
fcmovb
mov
jae
push
mov
push
outsb
ja
nop
or
xchg
mov
cmp
xchg
inc
lods
test
rcl
cmp
leave
fwait
cmpsb
jno
jnp
out
jbe
mov
imul
pop
ss
push
cmp
imul
ret
ja
add
rorl
cmp
and
clc
mov
arpl
jnp
mov
pop
in
sbb
push
mov
or
and
mov
pop
scas
cmpsb
cli
adc
fldenv
pop
sub
pop
jbe
and
hlt
add
add
pop
push
and
mov
ret
fidivrl
in
push
jno
jbe
or
sti
lret
sti
pop
fidivrl
dec
inc
push
loope
dec
stc
xor
pop
jmp
lods
push
push
stos
inc
vpsadbw
sarb
mov
xor
test
adc
aaa
push
mov
pusha
push
in
mov
or
leave
pop
ja
push
cltd
data16
movsl
jo
or
and
ja
lahf
sarl
xlat
sub
adc
data16
and
nop
mov
cmp
sbb
push
mov
sarb
test
adc
sub
or
or
mov
pop
xor
ja
inc
push
aas
adc
sbb
jae
addr16
xchg
cmp
ja
adc
sbb
lock
xchg
out
push
sbb
pop
lds
push
lods
mov
out
mov
int3
inc
cmpsl
inc
std
sbb
mov
pop
popf
mov
ljmp
ljmp
rclb
mov
pop
jp
fmull
push
jb
mov
mov
xchg
dec
mov
arpl
movsb
push
inc
test
sahf
mov
daa
call
shrb
jge
add
ljmp
cld
ja
push
or
sbb
dec
repnz
loope
pop
jl
imul
das
and
rcrl
fst
xor
repnz
ret
call
sub
roll
inc
sub
adc
das
js
inc
push
lret
shll
push
jge
dec
pop
push
int3
cld
cmp
pop
lea
and
mov
xor
lret
outsb
js
into
ret
xor
popa
pop
jge
jns
rcl
in
in
pop
cmp
enter
push
bound
repz
jp
daa
in
sbbb
dec
mov
jne
repz
rorl
js
adc
psubsb
mov
sub
fadds
out
data16
jg
call
xor
xchg
push
sarb
imul
cli
ss
sub
int
mov
data16
add
sub
das
xchg
ja
sarb
notb
pop
dec
mov
dec
push
movsb
outsb
test
lock
mov
mov
cvtdq2ps
adc
add
sub
enter
repnz
xor
jg
jg
mov
inc
sbb
lods
int3
push
loopnew
cmp
cmpsb
ss
mov
mov
lods
and
mov
xor
fwait
dec
roll
negb
mov
sub
dec
stos
sbb
out
mov
repnz
dec
jns
ja
hlt
out
insl
jg
js
shr
mov
mov
in
xor
scas
cld
jecxz
popf
std
hsubps
sub
or
fmul
scas
jmp
fisttpll
and
jg
std
lea
ja
mov
mov
inc
bound
xorl
cmp
insl
clc
jge
ficomps
push
hlt
sub
cmpxchg
sbb
inc
push
cmp
fwait
arpl
push
in
and
sub
pushf
negl
dec
xor
out
adc
lcall
std
xchg
movsl
and
bnd
sarb
lods
cli
cmp
jno
mov
sti
adc
outsl
cmp
lret
dec
in
les
xlat
jmp
mov
cmp
ljmp
rorl
jns
les
dec
loope
sbb
pop
ss
aam
push
xor
rcrl
ja
xor
and
hlt
stc
loope
cmpsb
scas
dec
cmp
push
push
imul
xchg
fwait
dec
loopne
sub
enter
test
lret
push
aaa
jge
mov
jmp
push
adc
xchg
test
xlat
ljmp
inc
push
mov
mov
mov
inc
outsb
jg
sbb
fldcw
ja
push
inc
test
add
out
pop
mov
hlt
mov
sub
cmpsl
lock
sbb
outsb
push
jb
push
add
add
xchg
push
mov
mov
aaa
fxch
jno
adc
or
jnp
iret
sbb
lock
add
test
xchg
adc
push
sub
cmp
icebp
icebp
push
adc
popa
ss
or
data16
push
xchg
push
and
pop
loop
shl
adc
mov
adc
fistps
int3
lcall
roll
scas
mov
xor
xor
fildll
jl,pt
cmc
xchg
scas
cmpsl
mov
pop
add
subb
pop
cmpsb
pop
aam
xor
popf
xor
dec
and
sbb
insb
dec
and
jns
xchg
xlat
clc
or
gs
fwait
dec
inc
or
push
repz
jmp
inc
jp
les
sbb
adc
sub
mov
aaa
mov
mov
jecxz
mov
mov
push
cmc
push
cmp
in
pop
jecxz
das
and
dec
mov
pop
stos
gs
aam
pop
int
mov
add
xor
pop
cltd
inc
and
and
xchg
cld
mov
orb
sbb
inc
jp
loope
aaa
mov
out
lahf
jo
add
sub
xor
imul
cmp
sti
inc
add
incl
fdivrl
adc
pop
push
jnp
mov
fisubrs
sub
cmc
out
repz
and
into
cs
mov
mov
cmp
bound
cld
icebp
xlat
loope
fisttps
out
inc
xchg
fmul
inc
ss
dec
mov
pop
push
scas
stos
xor
push
mov
loope
and
add
pop
and
scas
aaa
xchg
adc
push
lods
cmpsb
xor
push
idiv
fdivl
test
cmp
mov
xor
push
jnp
sarl
imulb
xor
jne
push
mov
mov
inc
dec
pop
xor
cmpsb
cmp
push
andl
in
ss
ret
and
fs
jge
ds
jnp
daa
mov
push
fcoms
add
mov
testl
jno
dec
cmp
add
dec
xor
in
add
pushf
lcall
mov
je
rclb
inc
cmp
push
pop
push
rcrl
idivb
inc
add
aaa
or
cmpsl
add
mov
cmp
test
testb
rorb
jnp
in
add
imul
pop
sbb
outsb
push
and
ret
pop
jmp
jp
hlt
mov
push
scas
ja
lock
stos
xchg
fcom
push
sub
sarl
movsl
inc
pop
dec
and
mov
inc
test
movsl
sub
mov
movsl
inc
inc
sti
pushf
subb
mov
repnz
aam
dec
push
adc
add
xchg
test
outsb
cmp
jmp
andl
mov
into
mov
pop
adc
push
adc
movsb
loop
xchg
out
data16
mov
movsl
jmp
add
sbb
sub
dec
xor
pop
push
in
push
adc
jne
call
and
lret
and
xchg
test
sarl
cmp
das
mov
in
xchg
and
add
das
mov
xlat
sub
roll
add
xchg
sub
test
imul
test
add
lahf
data16
fdivrs
cmp
fs
adc
movsb
xchg
push
lcall
fistpl
pop
cmc
adcl
push
cmp
stos
jne
xlat
push
add
mov
outsb
and
sbb
adc
xchg
inc
roll
sbb
into
push
mov
inc
jecxz
stos
outsl
sbb
ret
in
sub
subb
jge
mov
divb
mov
je
hlt
or
roll
test
mov
jbe
popf
pop
mov
iret
daa
hlt
push
cmp
cs
js
data16
pop
imul
jmp
push
cli
mov
xlat
mov
test
or
or
mov
dec
cmc
in
or
inc
in
fisubs
push
lahf
jg
push
pop
cmp
faddp
repnz
xor
lcall
add
addl
and
cmpb
push
andl
testl
daa
mov
jbe
in
and
sub
xchg
mov
data16
fstps
xor
not
fcmovnbe
popf
push
inc
scas
xor
xchg
jmp
dec
and
or
ds
lahf
xor
mov
jb
xor
loopne
mov
inc
outsl
insl
xchg
lods
jnp
sbb
fstl
xchg
lock
xor
push
jo
ljmp
and
fcoms
js
jno
dec
mov
das
sub
loop
insb
sub
aad
dec
jae
in
jno
dec
test
mov
ret
cmp
dec
xchg
icebp
adc
jecxz
out
in
jbe
mov
mov
fcomps
in
fldl
test
pop
mov
pop
jbe
ds
js
popa
sub
adc
mov
andb
out
cmp
test
cmpsb
imul
out
xchg
and
repnz
cs
int3
test
mov
xchg
dec
cmc
call
paddd
into
pop
jmp
decb
inc
fcos
cmp
ss
cmpsb
jnp
loop
mov
sub
aad
cs
popa
push
pop
fldcw
adc
mov
sub
inc
fs
mov
lret
lods
leave
popf
imulb
cwtl
faddp
es
popf
and
mov
mov
mov
loope
mov
pop
cld
punpcklbw
or
xor
sub
mov
mov
inc
jp
adc
leave
rclb
cmpsl
fbstp
addb
mov
aam
push
insl
xor
les
popa
loope
or
cld
or
push
inc
pop
add
aas
addr16
popa
in
idivb
int
cmpb
hlt
push
out
sbb
add
cmp
into
icebp
popf
shll
fistps
xchg
push
xchg
movsb
push
mov
push
cld
shrl
mov
xor
leave
daa
add
add
test
inc
mov
cmp
orb
es
push
into
out
repnz
sbb
pop
ret
fwait
cli
adc
or
divb
imul
dec
int
add
movsb
mov
xor
pop
mov
xor
loopne
out
test
or
sub
popf
mov
std
fidivs
in
lods
cmp
inc
jl
mov
lahf
xor
jns
lcall
inc
les
xchg
xchg
test
leave
lret
popf
fs
push
jmp
imul
and
dec
and
lock
sbb
cmp
adc
or
insl
out
mov
pop
pop
sub
test
mov
xchg
sub
inc
mov
int
pop
sbb
inc
xchg
gs
sub
xor
xchg
dec
pop
cwtl
lea
jmp
push
ss
adc
pop
inc
sub
mov
cli
fadds
and
std
jg
out
add
loopne
sahf
outsb
fdiv
xchg
mov
test
jno
lret
dec
mov
xor
adc
cmp
sahf
insb
adc
lea
and
xor
jo
sbbb
or
int3
inc
in
jg
mov
fxch
mov
stc
imul
add
push
not
sub
fnstcw
movsb
mov
lahf
inc
ret
mov
and
out
loop
add
sahf
mov
insb
fwait
mov
jo
aad
jmp
adc
or
and
lret
cmpsl
icebp
push
sub
cmp
inc
inc
push
sub
and
movsb
jo
mov
int3
test
push
xchg
dec
dec
data16
cltd
push
sub
jo
cmpsl
mov
pushf
xor
dec
or
pop
shrb
pusha
xchg
in
iret
push
jle
pop
cmp
jno
rorb
out
pop
mov
pop
stos
add
push
fmull
in
pop
in
cli
lea
pop
in
mov
mov
outsl
pop
addr16
cmp
add
subb
lahf
fs
cmpsl
les
dec
pop
cmp
mov
mov
push
adc
sbb
leave
rolb
jb
ja
cld
fmull
push
mov
pop
jmp
ds
orb
cmp
cmpsb
xchg
push
lret
lods
stos
test
popa
arpl
rcl
xchg
mov
bound
pusha
pop
dec
adc
stos
outsl
jo
mov
int
dec
and
stos
mov
les
adc
and
adc
jle
addl
xchg
dec
inc
and
fldcw
pop
mov
add
mov
xor
lds
test
fisubs
dec
test
imul
out
sub
aad
rcrb
add
sub
lahf
loopne
push
xchg
sub
sbbb
je
test
jge
jb
std
mov
adc
xchg
inc
std
mov
inc
sub
lahf
fstpl
pop
jnp
inc
nop
andb
pop
idivb
push
push
mov
mov
and
and
ljmp
adc
xchg
fsubrl
loope
stc
ljmp
mov
sbb
jo
mov
xchg
xchg
inc
sbbl
fcomp
xchg
pushf
mov
cs
daa
pop
je
std
mov
or
out
jg
sub
or
sub
ja
ja
sbb
jbe
dec
dec
sub
adc
out
test
sbb
pop
dec
xchg
xlat
xor
jb
arpl
push
push
or
ret
cwtl
xchg
fwait
cmp
mov
call
push
xor
fisttpl
das
mov
cmc
std
stos
xor
in
dec
add
xor
pushl
sub
leave
aam
data16
in
scas
ret
cmpsl
cmp
stos
push
in
push
stc
test
xchg
or
xor
call
f2xm1
lea
sub
mov
pop
pop
in
fs
or
fwait
add
sub
data16
xlat
jecxz
pop
scas
xor
lock
insl
in
or
mov
jnp
dec
jo
fcomps
fdivl
push
cltd
incl
jge
in
fnsave
inc
sbb
cmp
js
pop
cmp
rolb
sti
cwtl
shll
arpl
mov
and
push
mov
lea
xor
push
mov
jbe
xor
inc
test
xor
or
push
inc
jge
shll
ljmp
idiv
sbb
jge
loope
outsb
jb
xchg
dec
push
cmp
jle
push
ret
xchg
cmp
out
sbb
push
in
sub
and
movsl
sub
popa
mov
gs
es
xchg
mov
push
fimull
push
aaa
sub
inc
std
stos
mov
fs
aad
jae
imul
sub
cwtl
sbb
mov
faddp
enter
rolb
and
sbb
cmp
lahf
mov
test
in
sbb
scas
inc
hlt
ret
xchg
dec
push
outsb
mov
fimull
fimull
sub
imul
inc
push
mov
adc
mov
int
arpl
cli
xchg
out
fadds
inc
and
mov
stos
jg
cs
fnstcw
jmp
jl
orb
sbb
out
inc
in
pop
pop
outsl
pop
adc
test
inc
cmp
xor
repnz
mov
mov
mov
outsl
mov
mov
mulps
xchg
xor
and
cmp
xor
mov
mov
fmul
add
dec
sbbl
xor
test
sbb
gs
lea
lret
loopne
outsl
fcmovbe
sub
adc
lea
jecxz
shr
cli
push
adc
repnz
pusha
sbb
pusha
mov
xchg
jg
mov
and
cmpb
stos
push
in
pop
jno
dec
pop
cmp
add
or
lret
push
imul
sbb
mov
xchg
sbb
mov
xchg
mov
ljmpw
dec
and
and
jb
outsb
stos
inc
rcr
add
subl
and
aad
jl
xchg
inc
mov
mov
insl
pop
or
out
loopne
call
rolb
adc
push
enter
je
fsubp
icebp
adc
mov
cmovne
ss
out
stc
mov
pusha
fwait
inc
pop
inc
dec
lods
loop
in
jnp
sti
fdivrs
sbbl
push
cmp
push
in
inc
adc
inc
jns
iret
mov
mov
in
jbe
sti
push
stos
pop
in
sub
mov
js
ret
push
push
gs
sahf
mov
sti
rorb
or
into
mov
es
inc
add
or
dec
jmp
cmpl
jae
stos
enter
xchg
add
arpl
push
and
fldl
mov
mov
jp
or
xor
stos
or
and
cmp
cmp
push
aaa
and
pop
cwtl
mov
pop
mov
push
lock
outsl
fldcw
xchg
and
mov
cmc
fwait
mov
jge
fidivs
jp
pop
mov
out
sub
add
sbb
fisttps
sub
inc
in
mull
nop
push
inc
xor
xchg
pushf
cmc
inc
sbb
testb
or
mov
rcll
push
jg
adc
mov
dec
adc
and
cs
xor
pop
mov
dec
mov
aad
cwtl
pusha
xchg
mov
stos
mov
or
call
subl
inc
test
mov
pop
std
inc
mov
in
xchg
ja
iret
bound
sbb
add
add
xor
mov
push
leave
pop
or
jl
sub
pop
std
cmp
adc
pop
or
aaa
test
inc
mov
push
shl
mov
popa
inc
xor
pop
or
bound
xor
out
out
jno
mov
outsl
inc
mov
in
and
gs
adc
stos
dec
inc
cwtl
jo
xchg
sbb
push
lret
pop
ficoms
outsb
inc
mov
lods
xor
add
adc
aas
jne
popa
sete
jns
mov
pop
push
les
imul
into
inc
addl
sbb
mov
add
cmp
or
xor
gs
jp
adc
mov
mov
and
jl
lods
ds
les
clc
ret
popf
scas
imul
leave
sarb
ja
mov
pop
sbb
aam
pop
pop
inc
pop
mov
es
std
push
jl
sbb
mov
fwait
aaa
sahf
ret
mov
adc
cld
ds
mov
lock
inc
mov
xchg
push
or
jle
push
sbb
xchg
out
es
pop
xchg
ss
mov
lds
fstps
out
and
mov
xchg
outsb
xchg
iret
fidivl
aas
xchg
mov
xchg
inc
or
pop
js
add
popa
aad
pop
lcall
or
test
sub
pop
testb
std
xchg
sbb
rcll
or
popa
cmp
ds
push
mov
je
mov
test
push
add
mov
sub
and
pop
outsl
xchg
and
pop
mov
adc
or
inc
jb
or
ds
mov
insb
cmpsb
lock
inc
sti
cmc
pushf
ds
hlt
jae
repnz
daa
addr16
xlat
pop
fidivl
mov
fwait
loop
jle
faddp
ja
mov
pop
dec
xor
fcos
mov
lock
repz
push
fldln2
pop
pop
xor
fwait
in
or
cld
sbb
aaa
imul
add
jecxz
or
js
mov
push
sbbl
pop
mov
mov
fsubs
bnd
sti
adc
inc
xchg
adc
mov
jbe
lds
mov
cmc
bound
or
call
and
jg
das
insl
sbb
lods
punpcklbw
fs
xchg
lret
and
dec
es
call
cmc
cld
cmp
push
frstor
pop
cmpsb
add
int
adc
clc
sbb
in
movsl
iret
popf
pop
inc
mov
imul
stos
cmp
es
pop
mov
mov
and
int
das
das
fistpl
sbb
or
mov
cmp
fstpt
mov
or
out
ss
sbb
add
pushf
push
mov
or
dec
cmpl
mov
sub
in
jmp
or
mov
mulb
cmp
jecxz
insl
and
into
insl
jne
pop
pop
jge
lahf
test
and
add
dec
dec
and
push
popf
cmp
lret
cli
repz
mov
mov
adc
dec
push
pop
int
lcall
or
add
out
ja
popf
inc
cmc
in
push
addr16
jmp
push
jns
sub
jge
in
sbb
sahf
dec
inc
scas
pop
subb
out
addb
inc
insl
cwtl
sbb
mov
mov
push
out
jg,pt
scas
inc
pop
imul
lret
int
test
and
or
dec
xor
inc
xor
adc
jbe
xchg
data16
xor
jge
in
imul
jl
fbstp
data16
xor
iret
rcrb
je
lods
pop
andb
loopne
test
and
mov
pop
loopne
scas
sbb
daa
push
and
popl
and
cmp
loopne
xchg
mov
andl
stos
fmull
pop
pop
jecxz
mov
push
push
mov
sub
lahf
insb
jbe
add
std
out
adc
loope
in
push
adc
sbb
sub
in
jbe
movsb
popa
or
lods
inc
cmp
mov
lods
clc
add
dec
pushf
sarb
dec
outsl
dec
or
jo
cmpsb
test
das
shrl
and
ret
lods
arpl
stc
pop
push
mov
lcall
dec
mov
add
iret
and
push
int
mov
mov
subb
fisubl
and
mov
xchg
sar
lods
mov
xor
js
in
dec
sahf
out
adc
mov
loopne
cmp
add
dec
and
pop
lds
imull
int
cmc
in
outsb
sti
mov
mov
pop
fnstcw
out
pop
std
push
sub
xchg
in
cld
pop
out
jns
insl
cmp
repnz
andl
jge
pop
inc
mov
and
xor
int
add
cmpsb
ja
subl
adc
sbb
pop
stc
jmp
sbb
outsl
stos
cmp
cmc
xor
pushf
movsb
aam
pop
sub
xor
mov
not
nop
inc
enter
xor
dec
add
mov
addr16
gs
jg
test
mov
mov
lods
push
inc
and
add
iret
cmpsl
shrl
test
cmpsb
repz
inc
mov
push
mov
and
aad
lods
sbb
icebp
cmp
popa
mov
jb
mov
sub
mov
shrb
out
out
pop
cwtl
jbe
cmp
inc
rorb
and
mul
std
test
fnstenv
enter
mov
scas
and
insl
sbb
dec
pushf
rcll
cmp
pop
sti
ja
ret
nop
call
jl
test
sub
fdivrl
aam
ss
popf
int
push
sub
mov
cli
sub
and
jp
jb
jne
xor
adc
bound
sti
popf
sbb
sbb
pause
dec
data16
out
cs
and
or
lods
arpl
shr
dec
cmp
jle
xor
sti
mov
call
and
xbegin
or
inc
mov
stos
xchg
jo
shll
mov
jo
test
mov
push
xchg
into
cmc
push
sbb
or
mov
dec
sarb
mov
cli
add
movsb
mov
icebp
mov
cmc
xchg
add
incb
mov
xor
insl
cmp
les
pop
xchg
pop
push
and
mov
xorb
enter
add
dec
mov
pop
test
outsb
push
pushf
in
sub
lret
add
jle
mov
ljmp
iret
add
sbb
sub
mov
mov
pop
fisttpll
mov
fwait
stc
stos
push
arpl
pusha
adc
xor
ja
mov
insb
daa
or
out
push
fldl
adc
mov
jne
sti
leave
rclb
cmp
jmp
ja
in
js
adc
insl
stos
inc
push
mov
jb
mov
sbb
bound
rorl
cmp
mov
into
sub
fisttpll
outsl
outsl
mov
dec
sub
pop
cs
jge
ret
loopne
jmp
les
jae
outsl
or
pop
sbb
or
hlt
or
xor
mov
or
clc
popa
cmpsl
jae
repnz
data16
pusha
mov
lods
add
cmp
pop
mov
out
gs
loopne
mov
push
mov
cmp
loop
sar
shl
dec
push
and
cwtl
mov
out
sbb
inc
shrl
mov
pop
aam
add
out
ljmp
pop
subl
and
out
sub
mov
jle
loopne
mov
jns
jno
jnp
inc
loope
scas
mov
jge
addr16
lret
fisubl
or
pushf
sahf
lods
aad
add
repnz
or
push
out
add
in
jg
xor
jl
adc
jmp
idivb
jle
jg
cmp
rcll
ja
andb
add
inc
pop
lds
cltd
mov
cmp
mov
popa
mov
mov
lahf
mov
and
or
mov
xorl
inc
lock
in
call
lds
mov
jmp
mov
das
jbe
dec
fbstp
dec
movsl
pop
xchg
push
push
test
push
adc
lods
jmp
mov
hlt
ss
pop
movsl
paddd
cli
xchg
mov
fyl2xp1
or
sbb
jns
dec
jmp
dec
adc
loope
ret
call
mov
mov
push
hlt
repz
mov
test
jle
lods
mov
adc
jle
fsubrl
jp
adc
daa
lods
or
xor
ss
xchg
in
int
jnp
cwtl
es
push
clc
int
add
std
out
jecxz
mov
pop
cmp
loop
and
test
dec
sbb
or
lcall
int3
mov
mov
rol
cwtl
imul
fs
ror
sbb
xchg
jbe
ret
addr16
lods
add
sbb
lret
or
xchg
insb
hlt
mov
sub
xchg
push
dec
and
bound
lret
dec
jp
sbb
or
nop
repz
xchg
push
dec
xchg
sbb
in
pop
xchg
push
pusha
jno
xchg
lret
jp
inc
adc
in
les
sbb
aas
popa
or
mov
jns
sub
sbb
xchg
or
mov
out
mov
add
xlat
pop
ja
pop
loop
out
sbb
xlat
jno
mov
xchg
pop
xchg
dec
adc
mov
fimuls
mov
cld
adc
cmp
xor
sbb
add
inc
cltd
mov
lret
int
loopne
sti
daa
push
aad
mov
dec
data16
mov
sub
cld
mov
movsb
in
pop
cwtl
push
push
add
jno
mov
hlt
into
call
pop
jae
pop
cmp
decb
sbb
jo
add
pop
mov
mov
lcall
gs
inc
ficomps
jnp
ret
lock
or
test
dec
daa
mov
mov
mov
push
push
pop
stos
ss
sbb
pop
mov
sub
xor
adc
and
jg
adc
js
aad
in
pop
popa
or
outsl
test
test
xchg
mov
out
add
cwtl
jbe
ja
xor
jno
adc
xor
out
scas
fsubs
icebp
or
add
scas
mov
rcrb
sub
insl
movsb
push
mov
pop
divl
imulb
popl
outsl
inc
mov
add
lcall
lods
mov
aad
xchg
mov
cmp
adc
bound
sarl
sbb
xchg
and
sti
mov
add
inc
jecxz
push
mov
inc
setno
gs
or
loope
mov
adc
sub
or
or
or
stc
dec
ljmp
jo
cmc
or
repz
imul
mov
idivl
movsb
js
mov
stos
xchg
pop
stc
xchg
xchg
cmp
movsl
out
xchg
xchg
jae
rcrb
xchg
ja
mov
adc
dec
repz
and
lahf
fptan
jg
ss
pop
nop
mov
add
insb
xchg
pop
and
fs
mov
and
adc
xchg
lret
add
sbb
push
lds
dec
cmp
mov
leave
scas
outsb
add
add
out
pusha
xchg
fs
cmp
icebp
ror
sub
pop
mov
ja
aad
and
movsl
xchg
adc
fidivrs
and
or
add
sub
mov
dec
lcall
jbe
fmull
out
xchg
call
pushl
mov
cmp
outsb
dec
in
add
and
pop
cltd
adc
xchg
cmc
inc
cmp
cmp
andl
out
out
push
push
and
mov
enter
mov
sub
xchg
cli
add
add
mov
push
fistl
popf
lods
jb
lea
cs
add
sti
sbb
fucomip
or
dec
mov
jmp
xorl
imul
xorb
push
lret
movsb
mov
mov
jmp
push
mov
push
mov
clc
fistpll
xchg
lds
mov
jp
ss
jnp
test
sbb
repz
fbstp
or
and
sbb
dec
test
imul
jnp
add
js
mov
add
std
or
add
lods
addl
mov
xor
or
or
fwait
mov
mov
xchg
lret
pop
xchg
mov
call
lds
jns
jbe
mov
xor
lahf
inc
ja
xchg
inc
sbb
jns
pop
lahf
and
jno
xchg
arpl
push
mov
sti
adc
mov
ss
cmc
ss
jge
mov
inc
and
movsl
mov
mov
push
mov
push
jp
out
ror
xor
inc
mov
rol
scas
mov
sbb
call
pop
dec
and
in
mov
fwait
inc
adc
cltd
pusha
pop
mov
shr
sub
pop
cltd
push
sti
pop
ret
call
mov
imul
inc
inc
frstor
js
idivl
sub
xor
shll
hlt
lods
sub
mov
das
pop
enter
sbb
addr16
or
mov
arpl
mov
sub
pop
dec
pop
daa
mov
bound
ud0
jl
incb
bound
pop
lret
fimull
repnz
in
jmp
pusha
sahf
jmp
jnp
adc
xchg
gs
stos
add
push
in
xor
push
dec
aas
int
leave
jnp
aaa
push
dec
push
repnz
xlat
push
in
push
je
jae
out
repnz
fs
lods
mov
mov
fsubrs
add
sarb
sbb
gs
loope
mov
jne
stc
dec
mov
adc
dec
or
lahf
cmp
inc
test
dec
pop
shrb
xchg
fnstenv
jl
ljmp
pop
mov
mov
pop
out
fisubrs
std
inc
jne
sbb
add
and
adc
jbe
sti
mov
or
xor
ficompl
push
sbb
mov
enter
and
stc
mov
inc
dec
sub
fstl
out
insl
push
shrb
repz
loop
adc
jb
add
cli
das
inc
ret
ficoml
xor
lea
adc
jp
dec
inc
cs
pusha
mov
rorl
jmp
sub
mov
push
or
xor
cld
pushf
daa
xchg
je
repz
outsl
or
mov
and
mov
xor
jmp
jmp
insl
int
mov
cs
jecxz
push
imul
xchg
push
int
ds
push
insb
pop
pop
dec
xor
push
pop
push
cmp
popf
fsubr
mov
fwait
jl
add
cmp
dec
fnsave
adc
cltd
out
sbb
xlat
in
jo
arpl
lods
push
adc
push
leave
mov
push
les
push
js
xchg
insl
add
sub
pusha
divb
movsl
xchg
sarl
mov
mov
dec
in
sbbb
ljmp
pop
lret
repnz
movsb
sahf
cmc
sub
jecxz
add
imul
ret
mov
mov
or
cwtl
dec
pop
ret
popf
add
cli
cmpsb
push
repnz
jnp
es
jg
add
sub
inc
test
push
test
addl
pop
mov
in
jp
mov
mov
mov
in
mov
iret
add
sub
pop
push
adc
int
push
pop
in
jb
dec
scas
fldcw
inc
cmpsb
fcmovu
push
inc
pop
sub
mov
sub
bound
and
xor
pcmpgtd
inc
popa
cld
adc
pusha
imull
jnp
xor
mov
arpl
jb
inc
lret
ljmp
and
or
inc
pop
cmp
and
xor
rcrl
mov
data16
push
aad
cs
mov
int
mov
pop
adc
imul
or
dec
push
xchg
sbb
or
inc
xchg
xchg
sbb
and
push
jns
into
pop
cmp
xor
inc
lret
or
xchg
loope
shll
cs
addl
mov
inc
mov
dec
mov
mov
mov
jae
lods
add
es
notl
call
jb
cmp
inc
int
xlat
pop
pushf
push
dec
mov
nop
push
adc
xchg
jg
add
cli
cmp
xor
xchg
cmpb
inc
inc
pop
enter
xchg
push
cli
fnstcw
les
mov
jg
cmpsb
enter
pushf
in
addl
dec
movsb
mov
fbstp
pop
fnstenv
loop
jb
jge
das
icebp
outsb
stc
and
sub
pop
mov
or
and
dec
cs
sbb
mov
das
shll
push
sbb
insl
movsl
testb
int
xor
or
jnp
and
js
iret
sub
push
daa
jl
pop
add
xor
sahf
mov
test
inc
mov
sub
mov
sbb
mov
pop
dec
add
leave
sbb
cmp
jnp
lods
ret
or
cmc
and
fdivl
pop
mull
lcall
sti
jb
sbb
xchg
adc
xorl
inc
add
push
dec
or
es
divb
cmpsl
mov
lods
ljmp
inc
stos
repnz
xor
push
aaa
sbb
mov
dec
dec
in
sub
sbb
testl
orb
jae
data16
and
aaa
mov
cmc
dec
pop
hlt
fwait
xchg
mov
adc
xor
fisubrs
pop
fiadds
adc
ret
push
mov
xchg
es
jbe
jb
add
in
pop
mov
and
jmp
inc
out
jmp
es
mov
cmc
push
sbb
popl
sub
idivl
xchg
or
into
or
shll
das
and
fmuls
int
adcb
cmpl
dec
mov
mov
mov
pushf
shl
push
std
loop
jecxz
mov
jmp
cmp
jg
pop
cmp
sbb
out
mov
data16
xchg
inc
call
scas
lcall
fsubl
outsb
jae
sahf
jge
cmpsb
lds
cmp
add
loopne
inc
cmpsl
cli
jns
pop
cmp
cmpl
cmp
cs
outsb
in
std
ja
pop
adc
nop
sbb
psadbw
push
push
or
pop
test
jmp
mov
sub
dec
mov
push
out
sub
and
fldl
sub
movsl
sbb
aas
aad
xadd
adc
or
or
inc
adc
mov
lock
push
notl
cwtl
jbe
pop
out
push
pop
in
call
jno
inc
push
and
jnp
pushf
pop
mov
aam
loope
test
xchg
bnd
lea
push
cmpsl
or
lock
into
pushf
cmpsl
adc
xchg
icebp
pop
adc
xchg
inc
xor
push
test
mov
pop
cli
inc
lods
addr16
jne
in
sub
jbe
mov
int
call
xor
iret
test
inc
mov
loop
jo
xchg
pop
inc
mov
xchg
jns
imull
xor
rcr
inc
xchg
mov
lock
add
lods
and
maxps
jmp
sbb
fwait
pop
hlt
xchg
aas
divl
mov
mov
push
xchg
sub
fucomp
hlt
outsl
sbb
rcr
in
jecxz
inc
stc
call
lcall
in
and
xor
jne
push
inc
lds
inc
inc
jno
in
cmpsl
cld
popf
add
or
lcall
sbb
mov
xor
push
lds
jnp
enter
mov
test
xchg
inc
mov
adc
js
xor
lods
sarl
dec
sbb
pusha
insl
movl
out
pop
test
pop
inc
js
fwait
repnz
inc
sbb
scas
in
movsl
enter
mov
inc
push
dec
jl
mov
adc
data16
cmp
sbb
lods
fistps
jns
fisttpl
daa
jb,pn
mov
mov
inc
rcr
cmpsl
mov
sub
jae
adc
aaa
lods
push
jle
movsb
jns
and
lods
cmc
ds
notb
cmp
jnp
loopne
sub
shl
aam
sahf
cmpb
aad
jns
adc
jecxz
negl
lods
jg
and
faddl
notl
daa
mov
xchg
bound
mov
inc
popf
sbb
sbb
adc
testl
outsl
xchg
cmovo
cmpsb
gs
sub
adc
xchg
addr16
sbb
ds
ret
pop
outsb
mov
or
clc
and
add
push
adc
ds
pushf
mov
fs
jno,pn
inc
cmpsl
pushf
pop
fcom
push
int3
lea
mov
ror
shlb
mov
int
movsb
and
add
mov
sti
out
mov
add
js
adc
xchg
push
or
sub
sarl
and
xchg
int
inc
pop
bound
fs
mov
aam
mov
scas
sbb
pushf
stc
ret
jo
sti
mov
enter
test
subb
ljmp
push
lods
sbb
jnp
push
jg
or
add
jo
mov
pop
pusha
mov
sub
int3
mov
mov
inc
mov
or
xchg
sti
iret
jns
hlt
outsl
repz
pop
out
pusha
jns
cmp
rcr
and
sbb
loopne
mov
lods
adc
mov
mov
push
dec
das
rcr
sub
ret
pop
lock
fmull
and
es
cmpsl
dec
inc
scas
pause
cmp
xchg
pop
adc
loope
test
mov
fcompl
xor
cmpsb
orl
call
bound
sub
orb
mov
pop
xchg
jmp
dec
cmpsb
jecxz
jns
aad
and
or
xor
mov
roll
fisubrs
aad
pop
pop
scas
push
push
mov
shll
idivb
cmpsl
syscall
mov
cli
push
pop
cmpb
cwtl
sub
adc
lods
lods
dec
push
sub
and
imul
mov
repz
jle
sti
rorb
dec
jae
call
and
jmp
ret
and
jb
test
or
lea
sbb
stc
sub
mov
adc
inc
inc
jns
cmc
pop
jle
xchg
leave
enter
mov
sbb
and
and
pop
imul
das
test
out
pop
and
das
jnp
pop
into
mov
xor
hlt
lea
adc
sarl
pop
mov
outsl
mov
jg
icebp
stos
ja
xor
outsl
sbb
sar
mov
xor
adc
cmp
adc
hlt
out
sbb
xorl
pop
sbb
mov
adc
mov
inc
cmp
jle
ja
outsl
or
mov
jno
sub
lea
cmc
dec
jle
sbb
xchg
and
les
fadd
push
jne
loopne
adc
xor
mov
jae
push
mov
gs
movsb
popf
test
inc
mov
mov
jae
test
in
mov
insl
pop
or
sahf
adc
mov
daa
pop
fstpl
lret
cwtl
cmp
cmp
mul
jecxz
mov
xchg
insl
lods
dec
or
icebp
xchg
jl
xchg
aaa
sbb
out
mov
xchg
scas
mov
add
sbb
and
insb
movsb
clc
dec
xchg
insb
lret
fdivp
cmp
cmp
outsl
push
sub
jg
stos
mov
ljmp
nop
adc
xor
sub
iret
and
mov
cmc
cmp
outsb
pop
mov
dec
adc
cmpsl
dec
cmpsb
repz
mov
or
push
pusha
push
xchg
je
push
loopne
into
pop
add
sub
cld
mov
loopne
scas
dec
cmp
loop
inc
push
ja
jle
mov
jmp
icebp
push
insl
cmc
lods
cs
adc
add
insl
or
pop
inc
xor
rcrb
inc
or
adc
sbb
cli
jge
cwtl
mov
mov
clc
xchg
cltd
cltd
lcall
cmp
mov
push
loopne
inc
mov
add
push
or
stos
popf
xchg
arpl
loop
and
sti
jp
aaa
ljmp
inc
popa
xor
mov
lods
jne
lock
xchg
and
fdivrs
popf
push
dec
pushf
pop
movsl
xchg
loop
cmp
les
jno
adc
lods
cmp
or
enter
or
dec
jo
mov
cmp
lods
ja
mov
je
xor
addl
push
cs
pusha
push
mov
fwait
shlb
xor
push
sbb
sahf
lds
enter
out
les
inc
cmpsb
mov
mov
xchg
aam
pop
lea
xchg
mov
rcrb
dec
xor
lret
movswl
pop
xchg
lret
push
sti
cmp
xchg
jge
cld
test
loope
fidivrs
pusha
push
cwtl
jp
test
sub
jne
sbb
sbb
ljmp
adc
lahf
lcall
or
arpl
push
jb
fnstenv
xchg
insb
test
ret
andl
sbb
lds
inc
fstpl
hlt
shlb
lret
push
dec
rcll
xchg
pop
jecxz
jb
loope
inc
stc
xor
test
lret
test
mov
lcall
inc
mov
ja
jg
jno
fincstp
rolb
pop
fbld
mov
jmp
pop
pop
jb
subl
or
or
popf
or
das
lret
shl
test
aas
jb
jne
xchg
push
in
shlb
jmp
movsl
ljmp
mov
enter
sbb
lods
repz
add
jl
jmp
inc
dec
fsubrs
aam
mov
stc
inc
fadd
xchg
outsl
sbb
jb
jp
das
loopne
ds
xchg
dec
cld
sahf
push
lret
push
aaa
push
into
je
repz
dec
pushf
jl
cmp
cwtl
cmp
rcr
imul
jnp
mov
icebp
xorb
xchg
mov
lret
mov
out
hlt
addr16
xchg
test
lods
pop
cmp
adc
xchg
inc
fwait
popa
mov
test
sbb
jecxz
adc
movsb
dec
adc
mov
cmp
addb
in
adc
scas
iret
xor
cmpsl
sub
mov
cmp
es
mov
nop
ljmp
mov
das
fsub
inc
xchg
int3
xchg
out
sbb
lea
push
dec
int
jbe
cmp
fidivrl
xchg
out
ud1
add
aaa
js
push
fcomip
pop
outsb
dec
sub
pop
enter
sarb
push
pop
cmp
and
and
mov
sbb
daa
popa
cmp
subl
push
in
sbb
arpl
fisttps
dec
inc
aaa
xor
shrl
test
dec
dec
aam
mov
je
mov
and
jp
arpl
inc
pop
in
xor
arpl
out
pop
fwait
and
pop
jge
sbb
in
and
scas
aaa
sbb
ds
clc
shlb
mov
popa
mov
mov
inc
or
gs
xchg
jns
pop
aas
test
pop
pop
stc
dec
cmp
mov
cmpsb
test
and
ja
mov
mov
mov
xor
loop
jmp
dec
dec
pop
dec
sti
mov
xor
xor
pop
mov
imul
mov
and
loop
sbb
mov
or
ret
dec
lcall
fldl
cltd
jbe
mov
popf
inc
mov
cmpsl
mov
test
pop
ss
aam
jmp
loop
xchg
js
sbb
jecxz
fmulp
jno
leave
rorl
je
adc
mov
pop
jg
pop
xor
js
push
mov
test
sti
or
and
adcl
and
pop
mov
pop
jmp
pop
mov
shrl
insb
push
fdivrl
sub
push
dec
popf
mov
pop
mov
jmp
pop
stos
mov
cs
fidivrs
jmp
std
jg
dec
insl
test
jl
into
mov
insb
cmc
shrl
inc
add
fmull
sub
rorb
push
rclb
pop
add
sbb
popf
xchg
dec
inc
pop
imul
inc
adc
push
lods
push
pop
and
mov
and
or
in
jbe
mov
mov
pop
push
fsubr
test
sub
mov
test
push
loopne
lcall
in
inc
cmp
add
sub
ret
aam
jg
mov
xchg
ljmp
popf
jb
or
ljmp
bound
pop
mov
pop
mov
cmc
inc
push
shll
cmp
sbb
xchg
ljmp
add
enter
jne
fsubrs
leave
sarl
movsl
iret
incb
frstor
lahf
sbb
adc
movsb
jl
xchg
jno
sbb
and
cmp
loop
clc
mov
aad
xchg
mov
and
popf
dec
imul
test
std
push
pushf
dec
inc
mov
xchg
sub
sti
gs
stos
outsb
popf
test
loope
cmp
mov
push
loopne
lods
fldenv
inc
gs
mov
mov
add
fnstcw
or
sahf
sub
mov
or
ret
fldl
mov
xchg
stos
lods
cmp
psllq
pusha
insb
out
imul
push
mov
lds
insb
push
dec
mov
pop
mov
iret
mov
hlt
popf
fsubr
fisttps
push
js
test
mov
pop
les
cwtl
lret
xchg
aaa
xor
lcall
mov
insl
and
xchg
data16
or
iret
mov
xchg
adc
cmp
push
out
stc
daa
out
jb
lock
ja
sarl
lret
jg
jno
mov
jecxz
lea
outsb
out
or
mov
push
call
pop
iret
mov
nop
inc
sahf
or
mov
dec
mull
call
add
aas
mov
xor
and
outsl
in
loope
test
pop
inc
add
lahf
into
mov
pushf
and
dec
test
push
add
iret
cwtl
adc
loop
inc
rcrl
aaa
sti
iret
xchg
test
cli
jecxz
roll
mov
xchg
and
cmp
xlat
or
or
pop
arpl
cmc
jmp
decl
sbb
and
cld
lea
insl
pop
test
cmpsl
ljmp
mov
fs
bound
jae
pop
fs
rolb
pop
cmpb
push
xchg
std
int3
iret
aas
xor
inc
sub
pop
rol
mov
push
pop
out
inc
loope
repz
repz
sbb
xchg
mov
mov
push
gs
in
into
dec
stos
testb
arpl
aam
mov
push
xchg
push
lods
mov
xor
or
mov
add
mov
mov
push
sbb
push
xor
nop
mov
inc
lods
in
or
mov
jbe
int
mov
lcall
dec
leave
pop
adc
popa
pop
push
inc
call
andl
rsm
pop
inc
sbb
insb
jnp
nop
pop
lods
push
mov
into
push
jp
movsb
xchg
mov
jge
and
lar
mov
test
add
xchg
sbb
mov
shll
mov
sub
ljmp
or
or
test
sbb
mov
cli
int
scas
xchg
popl
cmc
xchg
and
mov
add
out
sarl
and
nop
aas
test
dec
cli
lea
cwtl
mov
test
push
sbb
leave
adc
sbb
repz
sbb
cld
pushf
lret
lock
divb
lcall
sub
cmp
xchg
xor
hlt
cmp
int3
push
mov
and
mov
and
js
mov
mov
pop
and
ja
mov
mov
insb
and
fcmovne
dec
dec
and
xchg
cmp
rcrl
push
pop
push
das
and
mov
add
cwtl
xchg
cmc
in
mov
sbb
jge
xlat
mov
mov
sub
mov
ret
in
mov
cmpb
inc
jns
xchg
jbe
xor
sbb
cmpsl
push
in
sub
shl
mov
icebp
sub
inc
jle
adc
inc
cwtl
mov
add
sub
pusha
popl
inc
add
lea
mov
add
xchg
pop
icebp
movsb
iret
add
push
xchg
aas
sub
pop
std
out
jae
cmpsb
mov
imul
mov
and
dec
in
mov
jecxz
jmp
mov
test
pop
movsl
lds
test
push
cld
pop
cmp
imul
add
sbb
in
les
dec
sub
xor
sti
lret
xchg
out
fistl
iret
cmpsb
test
mov
pop
push
cltd
sti
mov
cltd
or
rclb
scas
xchg
cmp
inc
mov
daa
lods
lods
xor
sbb
popa
mov
jnp
insl
add
insb
sub
shll
ficompl
shlb
adc
leave
push
fdivl
dec
mov
sahf
add
jp
mov
bnd
or
inc
lods
mov
pop
mov
scas
adc
iret
mov
fsts
push
xor
jb
rcrl
ja
shll
or
dec
aas
sahf
push
sbb
aaa
sub
mov
pop
lret
pop
sub
jb
repz
into
jo
ljmp
inc
sub
outsb
mov
arpl
mov
enter
out
xchg
xor
mov
loope
xchg
jo
mov
sub
out
popa
into
lcall
adc
sub
sub
out
in
add
jge
loop
mov
jge
sbb
in
roll
pop
mov
and
xchg
or
cli
mov
jg
cmc
lret
jmp
mov
sbb
cmp
lods
sbb
inc
pop
loopne
in
push
jle
fs
sbb
pop
xlat
add
lcall
mov
decb
out
mov
int3
stos
jo
mov
or
jmp
call
pop
or
xor
dec
pop
scas
cmpsb
addb
fdivrl
aas
int3
sub
sub
imul
sbb
mov
inc
ficoms
sbb
pop
andb
pop
loope
les
fld
push
fstps
lret
int
xchg
jl
xor
daa
cmpsl
xchg
cmpsb
cmc
gs
fwait
popl
and
andb
fsubrs
xchg
cmp
mov
imul
lock
mov
fistpll
adc
leave
lods
int3
push
dec
jl
add
lret
sub
sbbl
shlb
lock
mov
rcrl
and
imul
lret
clc
jle
lretw
sbb
rolb
lods
cmp
cmp
stc
lea
dec
lahf
imul
aaa
fcmovnb
or
inc
outsl
mov
xlat
mov
aas
dec
das
pop
inc
add
inc
sub
notb
mov
push
mov
repnz
rclb
out
fs
xchg
xchg
lds
test
std
push
inc
pop
inc
sbb
enter
dec
lret
add
mov
scas
mov
adc
jmp
push
inc
add
cmc
out
mov
mov
pop
int
xor
pop
fldl
add
leave
sbb
push
push
fidivl
mov
mov
lret
mov
xchg
in
movsl
fbstp
cwtl
lret
insb
push
adc
xchg
xor
push
sub
jle
and
lds
daa
movsb
aas
hlt
cmp
pop
sbb
pop
bnd
movb
xchg
sbb
pusha
jl
dec
les
in
ss
push
mov
lock
push
jb
push
notb
add
xor
cli
mov
leave
xchg
stc
divl
mov
test
lods
push
add
bound
popa
jecxz
sahf
stos
xchg
mov
aam
inc
repz
xlat
test
out
mov
cmp
imull
cmp
dec
fistpl
sti
in
pop
aad
mov
xor
xchg
mov
dec
loopne
and
int3
mov
push
pusha
pop
sub
add
mov
push
sub
push
xchg
out
mulb
mov
cmp
aam
mov
xlat
stc
add
bsf
jnp
ja
int3
sub
mov
ljmp
test
inc
mov
xlat
or
sbb
push
xor
add
fists
adc
sti
adc
mov
or
or
inc
test
sti
loope
xchg
push
in
sbb
imul
arpl
jne
adc
inc
jo
sbb
aad
faddp
sbb
jno
push
push
aad
add
adc
daa
xorb
ds
je
mov
push
pop
pop
push
or
inc
cmp
inc
mov
scas
ficompl
loope
push
mov
test
enter
sbb
stc
mov
pop
adc
inc
dec
mov
stc
add
sbb
movsb
test
sub
popf
mov
mov
jnp
pop
or
cmp
cmc
or
dec
pop
pusha
pop
leavew
clc
xchg
cmc
mov
mov
mov
or
inc
mov
sbb
and
loop
lahf
xchg
and
mov
xchg
dec
inc
leave
push
jge
aas
add
jmp
push
mov
mov
mov
xor
adc
andb
cmp
insl
mov
mov
fidivl
mov
jle
pop
orb
ret
arpl
mov
dec
test
xchg
in
pop
jno
in
nop
lods
push
pop
imul
outsb
mov
adcl
lcall
xchg
fisubs
enter
mov
lcall
mov
insl
xor
scas
sti
test
cmp
in
ud1
push
aad
in
rolb
and
pop
sub
pop
shrb
cmp
add
pop
sub
cs
sbb
sbb
jecxz
mov
into
mov
xchg
mov
mov
stos
popf
xchg
data16
adc
aas
mov
mov
lea
or
pop
aas
int
jecxz
pop
add
jno
or
leave
ds
and
aas
iret
and
push
dec
imul
scas
pop
aas
mov
faddp
cmpsl
sysenter
jle
add
movsb
cs
je
jmp
lcall
ficompl
dec
stos
mov
mov
test
push
scas
sbb
push
movsl
mov
fsubl
dec
cmp
shrl
int
cli
cmp
sbb
arpl
lret
pusha
mov
mov
insb
in
dec
pop
icebp
addr16
shrl
push
inc
xor
mov
idivb
sbb
insb
jg
popa
inc
pop
inc
cwtl
dec
and
mov
addb
jecxz
add
pop
pop
inc
adc
in
loopne
lahf
mov
and
ljmp
roll
mov
sub
adc
insl
icebp
rorl
cmpsl
jge
sub
into
xchg
mov
out
adc
iret
es
mov
cwtl
or
adc
js
std
shrl
or
daa
xor
movsb
add
and
mov
jae
aaa
outsb
push
leave
and
clc
mov
mov
pushf
fucomi
sub
pushf
mov
dec
mov
dec
inc
adcb
aaa
aam
and
scas
mov
inc
andb
push
xor
sbb
cmp
xchg
add
jno
jmp
push
fbstp
xchg
subl
pop
push
mov
idiv
jne
insl
outsb
xchg
insl
scas
movsb
fiaddl
icebp
adc
lahf
pusha
cmc
mov
or
jle
iret
jle
sarb
pop
jmp
xor
add
mov
test
sbb
inc
push
mov
adc
ss
ss
out
inc
inc
mov
xchg
pop
cmc
call
xor
xorb
sub
inc
ljmp
cmp
in
xchg
add
mov
mov
call
ret
xchg
pop
cmp
or
fwait
sub
xchg
jno
and
jge
outsb
inc
dec
dec
cmp
or
repz
aad
sbb
idiv
mov
dec
add
jb
and
sbb
stc
sti
into
sub
adc
das
loopne
inc
mov
les
gs
fadd
or
cmpsl
pop
jb,pt
pop
orl
out
mov
inc
insb
leave
lods
mov
push
cs
into
lcall
mov
hlt
pop
insl
dec
int3
adc
xchg
mov
enter
sub
aam
test
and
cmc
pop
pcmpeqw
lods
mov
jo
sbb
jno
inc
movsl
outsl
stos
fimull
mov
push
sahf
subl
je
sub
stos
fptan
vaddsubps
fwait
mov
and
pop
out
xor
test
dec
outsl
hlt
jbe
pop
cmp
jg
rolb
mov
test
dec
cld
dec
scas
pop
ja
cltd
and
aas
xor
inc
xor
ret
xchg
pop
lcall
fldcw
icebp
arpl
ss
loope
and
ljmp
xchg
movsb
mov
cwtl
scas
testb
nop
lods
mov
ljmp
jle
sbb
add
aaa
daa
cmpsl
cmc
nop
xchg
xchg
cmp
in
imul
xchg
cmp
stos
outsb
mov
mov
popa
jle
andl
or
mov
sub
pop
mov
test
into
inc
cld
push
je
xlat
add
sbb
mov
out
adc
enter
fldz
cmc
ret
jnp
mov
lods
pop
push
jae
jno
xchg
mov
cmp
mov
divb
ret
mulb
jns
and
and
lret
mov
out
sub
inc
cmp
dec
dec
push
jmp
nop
mov
daa
xlat
andl
roll
pop
dec
pop
xor
mov
inc
inc
outsl
out
filds
pop
les
in
mov
mov
in
adc
mov
xchg
pop
mov
pop
fstpl
test
aaa
xlat
dec
cmp
dec
xchg
fstp
push
inc
lret
ret
sti
data16
mov
xor
mov
add
inc
pop
imul
in
mov
mov
xor
cmpsb
xchg
movsl
cs
mov
inc
pop
dec
stos
rcrb
into
sub
push
xchg
fimuls
lret
xchg
int
adc
adc
mov
cld
cmpb
cmpsl
mov
arpl
mov
imul
mov
xrelease
les
pop
or
scas
int3
movsb
jae
jg
mov
jb
xor
in
dec
push
pop
lahf
negb
or
jecxz
jnp
ror
mov
shlb
pop
xor
mov
repz
pop
push
scas
jb
jge
dec
cmp
loopne
or
pop
pop
btc
cmpl
adc
int
jge
xor
push
lret
out
in
lods
insb
adc
arpl
sub
cmp
test
sahf
shll
or
mov
pusha
icebp
cmp
test
sbb
xor
jecxz
scas
sbb
push
cmpsb
iret
imul
popf
je
out
xor
xchg
sub
jbe
adc
idivl
xchg
out
lret
notb
mov
int3
pop
sar
push
ss
mov
jp
stos
cmp
mov
pop
clc
pop
sub
aaa
jle
mov
cmc
push
mov
outsl
call
aas
inc
dec
dec
lret
jns
sbb
sahf
add
jno
adc
popf
sahf
push
loop
lea
jmp
je
add
pop
xchg
xchg
add
pop
cmp
mov
int3
scas
int
das
imull
enter
add
aaa
jle
mov
xor
xor
pop
sub
mov
int
sub
pop
inc
sbb
insb
lcall
jne
movl
add
scas
test
je
test
fcompl
and
xchg
xchg
xchg
lods
mov
sbb
xchg
sub
inc
outsb
push
cmp
rclb
repz
shr
pop
dec
adc
inc
push
sub
ljmp
xor
sbb
loop
mov
stos
fwait
dec
jl
test
jns
jo
push
daa
pop
or
scas
xchg
fisttpll
mov
out
adc
testb
mov
mov
lock
pop
push
rclb
ljmp
adc
mov
lret
jle
ss
xchg
cmp
ss
mov
je
cltd
repnz
daa
push
cmp
mov
jbe
scas
adc
push
dec
cli
jl
loop
jne
sbb
push
dec
pop
inc
push
push
movb
das
fcompl
call
xchg
xchg
mov
add
dec
pop
fiadds
imul
xor
mov
push
roll
mov
push
jp
push
inc
mov
fnstenv
inc
adc
popf
push
push
fwait
pusha
shl
lcall
notb
mov
mov
shl
mov
or
fwait
inc
imul
cmp
and
test
pushf
inc
sbb
xchg
rclb
xchg
das
lahf
xlat
aaa
cmpsb
push
loope
xor
add
icebp
and
loopne
dec
in
xor
popa
or
lcall
mov
add
add
push
shll
nop
xchg
mov
push
jb
push
sbb
daa
inc
clc
cld
sub
stos
cmp
jl
je
je
popa
adc
mov
sbb
jb
sarl
scas
inc
mov
mov
les
fldl
dec
int
mov
popf
js
mov
inc
dec
push
mov
mov
mov
inc
aad
adc
jns
sub
popa
cmp
cmc
sbb
popa
mov
and
shll
jb
andl
pop
mov
insl
in
fwait
jge
xchg
push
xchg
cmc
jne
pushf
rclb
scas
fistpl
imul
mov
shll
mov
fnsave
add
or
and
outsb
mov
xor
pop
add
jb
xor
jg
imul
cmp
inc
cs
lea
mov
je
clc
popf
sbb
lods
and
loope
push
adc
mov
mov
xchg
fimull
pop
jmp
jae
pop
out
cmpsl
push
lods
stos
push
mov
push
xor
icebp
rclb
inc
pop
fiadds
dec
test
ljmp
mov
in
aad
addr16
and
or
sbb
sbb
out
xor
notb
js
sbb
push
mov
ret
in
stc
xor
inc
xlat
hlt
pop
mov
mov
inc
daa
gs
sti
add
xor
inc
cltd
repz
test
xchg
mov
addr16
arpl
pop
les
pop
cmp
or
in
lar
pop
and
mov
add
insl
cmp
fnsetpm(287
loop
and
mov
push
pop
mov
mov
mov
push
push
push
inc
mov
mulb
jge
pusha
dec
popa
lahf
mov
cmp
test
mov
loop
adc
adc
pop
test
mov
pop
int
push
sub
sbb
adc
dec
cli
and
popf
decb
sbb
pop
nop
dec
movsl
xchg
std
xlat
ret
jbe
rorb
cmpsb
into
mov
pop
fcompl
incb
pop
fildl
icebp
shl
sub
std
pushf
imul
int3
fsubl
nop
xchg
pusha
stos
enter
jmp
fisubrl
xchg
repz
arpl
xlat
mov
and
pop
xchg
add
mov
std
outsb
je
loopne
sub
fstpt
or
mov
lea
fidivrl
stos
ja
scas
mov
mov
push
out
inc
mov
inc
loopne
shl
and
add
sahf
sbb
fwait
lret
outsb
dec
sub
cltd
test
std
decl
xchg
cmp
rcrl
scas
pusha
xlat
pop
test
xor
push
emms
and
mov
xor
push
loop
mov
dec
pmullw
bound
lock
cmc
mov
jle
into
call
repz
mov
enter
outsb
adc
add
test
mov
imul
jmp
sbb
rcr
loopne
out
xchg
addr16
mov
pop
gs
pop
cmp
xchg
dec
repnz
jns
pop
aas
in
push
xchg
and
into
mov
pop
mov
cli
in
fwait
jmp
test
inc
aam
lret
inc
add
mov
add
adc
adc
add
inc
push
push
and
push
repnz
xchg
push
adc
ja
rol
push
addr16
in
stos
mov
push
pusha
pop
cwtl
shrb
sub
adc
mov
mov
imul
jb
mov
sub
ja
jle
insl
movl
mov
int3
shll
push
xor
xchg
sbb
jae
push
dec
repz
push
outsb
lds
int3
jecxz
fldl2t
scas
adc
mov
lcall
cmp
cwtl
add
cwtl
push
repnz
lahf
out
fsubl
lea
js
stos
xchg
pushf
jbe
mov
ret
cmp
adcl
je
push
or
test
stc
arpl
les
pop
out
movsl
fs
sbb
cmc
stos
pop
scas
fwait
cli
shrb
mov
cwtl
sar
icebp
aam
ljmp
scas
fsubs
and
jb
fmuls
cld
lock
mov
push
jb
shl
mov
jmp
xchg
lds
ficoml
sbb
movsl
mov
outsl
movb
lods
pushf
int3
mov
std
xor
out
pop
push
out
jle
je
imul
lcall
je
imul
lds
fstps
jg
leave
out
fistps
sbb
lret
inc
test
lahf
push
sub
pop
movl
jno
and
imul
mov
loope
imulb
loopne
mov
dec
pop
push
scas
mov
xchg
mov
mov
cmp
fs
mov
fmull
es
xlat
loop
mov
imul
stos
adc
jmp
ja
pop
out
sbb
push
andb
ljmp
test
inc
sub
xchg
lods
call
pop
cmp
sub
pop
faddl
adc
out
pop
and
sbb
test
cmp
push
das
dec
fcmovnu
mov
xchg
mov
test
xlat
push
push
pop
mov
sub
aas
push
xchg
outsl
loope
xchg
adc
repnz
incb
mov
cmc
mov
xchg
rcr
fwait
stc
cmp
or
iret
adc
mov
pop
xor
mov
push
dec
imul
call
push
pushf
jecxz
dec
mov
imul
pushf
gs
push
adc
repnz
cmp
out
dec
cmp
test
jno
xchg
scas
and
cmp
mov
pop
inc
mov
outsl
sub
out
dec
pop
inc
mov
orb
xorb
arpl
jno
jl
push
clc
es
or
dec
dec
nop
adc
jne
jno
mov
aas
or
hlt
push
xlat
imul
mov
in
mov
mov
dec
add
mov
ret
sarl
scas
aas
das
cmp
movsb
ret
in
mov
pop
and
and
mov
jae
iret
test
pop
or
mov
inc
sbb
bnd
xchg
jnp
test
loop,pn
aas
cmpxchg
clc
sbb
push
fsubrs
xchg
adc
and
mov
sbb
add
adc
ss
dec
sahf
lock
repnz
loop
sbb
mov
add
cmp
cmp
shll
pop
pop
pop
jle
push
dec
xchg
mov
cmp
push
jne
scas
mov
daa
and
mov
iret
inc
mov
shll
scas
mov
sub
inc
inc
imul
stos
shll
testl
and
sti
sbb
in
leave
cmp
xchg
stos
mov
pop
or
cs
pop
mov
push
arpl
cmp
adc
xor
sbb
push
pop
adc
not
pop
pusha
inc
jno
push
add
jge
stos
movsl
pop
jae
push
lods
jnp
js
mov
les
repz
das
ss
shl
mov
xor
idivl
sbb
push
shlb
loopne
pop
cld
push
insl
fcompl
inc
or
mov
ljmp
data16
loop
fnstcw
and
addr16
cmc
dec
and
dec
lds
in
cmp
ljmp
mov
loope
rorl
cwtl
xbegin
mov
push
stc
sbb
mov
pop
pop
movq
subl
repz
xor
inc
mov
lahf
jmp
add
cmp
xor
mov
addb
pop
jl
rcr
aaa
jecxz
in
addl
fistl
inc
dec
rorb
jle
jb
sti
aas
ret
dec
jmp
add
mov
repz
ss
mov
fistpll
cmpsb
ret
test
repnz
ret
enter
ja
lods
mov
mov
push
shll
xchg
or
lcall
rclb
pop
bound
and
adc
cmp
cmc
jae
add
mov
dec
cmp
push
in
loopne
xor
fsubrl
mov
sbbl
xorb
es
sbb
inc
push
cmp
pop
push
or
jne
mov
xchg
push
xor
add
jnp
loop
xchg
sahf
neg
sub
aaa
aad
cmpsb
pop
dec
dec
loope
mov
stos
push
dec
mov
dec
fdivr
mov
scas
mov
shrl
adc
add
dec
arpl
pop
test
adc
jno
fs
rclb
pop
arpl
mov
ja
sbb
xor
jno
test
pop
nop
inc
cmp
ss
sub
inc
out
lods
jle
stc
loop
mov
sbb
sbb
out
xchg
mov
or
cmpsb
mov
sarl
dec
mov
das
xlat
xchg
fisubrs
pop
sub
and
jbe
popa
cmc
loopne
test
psubsw
and
add
dec
sub
cmc
inc
sti
cmp
inc
mov
jno
loopne
mov
cmpsl
dec
pushf
test
adc
pop
inc
test
cmp
sub
imulb
nop
sub
iret
fucomip
mov
jnp
les
push
add
je
pop
xor
dec
cmpsl
mov
lcall
push
loope
push
jns
pushf
and
je
pushf
adc
mov
js
sarb
ja
fidivl
mov
insb
pop
xlat
lahf
sti
repnz
scas
and
mov
pop
fucomip
inc
je
xor
cmc
jmp
and
loop
add
test
sbb
adc
mov
insb
cmp
out
pop
sbb
les
outsb
mov
fidivs
arpl
in
loopne
pusha
cmp
or
push
pop
ljmp
push
jecxz
pop
add
fidivrl
je
call
push
loope
int
rorb
cmc
cmp
xchg
mov
jbe
nop
and
or
test
inc
add
push
inc
loop
mov
mov
test
jbe
xor
stos
outsb
aaa
dec
inc
sbb
shrb
and
cwtl
inc
mov
in
sub
fldt
inc
mov
xchg
filds
imul
adc
and
cs
mov
shrb
outsb
ret
jl
dec
pushf
dec
addr16
nop
les
and
xor
jp
ljmp
adc
gs
mov
ret
dec
stos
push
in
pop
fisubl
jl
out
xchg
mov
outsl
mov
shlb
cmp
mov
sbb
mov
cmp
stos
xlat
or
adc
sub
xchg
push
or
into
jns
arpl
mov
xchg
or
movsl
adcl
inc
pop
fisubl
hlt
out
out
fisttpll
adc
ret
pusha
pusha
cld
mov
sbb
xchg
inc
mov
rcr
mov
and
mov
cltd
jae
pop
mov
cmp
push
xchg
inc
inc
filds
pop
and
scas
frstor
cwtl
or
rcll
mov
xchg
push
in
pop
adc
dec
push
mov
pusha
add
fsubrs
lret
push
sub
out
shlb
dec
addb
adc
lea
and
inc
popa
cmp
in
sub
stos
adc
shlb
cmpsb
sub
dec
xchg
push
hlt
pop
xor
dec
jg
das
pop
and
rcrl
jl
pop
xor
xor
push
adc
jne
push
loopne
scas
rclb
pusha
test
mov
in
push
imul
out
scas
xor
loop
clc
fiadds
arpl
mov
int
jb
mov
sarb
pop
sub
movlps
in
icebp
mov
push
rorb
out
test
or
jbe
fidivrl
in
aad
imul
pop
jp
shlb
sub
aam
push
ljmp
inc
or
lret
mov
cs
mov
lcall
add
pop
pop
ja
lidtl
idiv
cmp
bnd
stos
ret
and
cltd
dec
movsl
scas
jnp
in
dec
cmpsl
and
and
stos
lods
shl
or
adc
push
xchg
mov
inc
into
mov
xchg
cli
cltd
test
add
int3
inc
dec
out
lret
add
loopne
jae
mov
sbbl
stc
or
call
popa
inc
imull
mov
xor
test
add
mov
pop
xchg
negb
jb
push
add
cmpsl
xchg
shrl
mov
or
dec
push
adc
xchg
jmp
sahf
adc
inc
xchg
mov
cld
dec
cmp
ret
loope
jbe
push
push
dec
xchg
out
ret
or
pcmpeqd
cmc
shll
xlat
clc
out
into
cmp
fistl
jp
idivb
xchg
lock
sub
sbb
faddl
mov
sbb
cmpsl
lods
add
cmpsl
add
push
inc
inc
push
mov
aam
or
and
push
movsl
jae
mov
inc
rcl
test
or
sbb
test
mov
sbb
loop
cmp
mov
jmp
sahf
shrl
sub
fwait
das
inc
enter
mov
movsl
push
push
iret
xchg
bound
stos
outsl
jb
rcrl
and
adc
daa
or
data16
pop
in
mov
push
jns
or
pop
cmp
mov
jp
mov
mov
pop
jle
jb
push
sar
jbe
ret
lahf
fsubl
pop
fidivl
cltd
xlat
mov
inc
in
out
inc
adc
enter
jge
pop
jmp
cwtl
out
repz
dec
mov
cmp
stos
lods
push
aas
cmp
cmp
mov
cmpsb
pop
cmp
rorl
arpl
jp
cmp
js
or
push
xchg
sbb
in
add
pop
movsb
pop
xchg
loop
arpl
adc
sub
cld
shrl
shrl
les
loop
ja
dec
jnp
mov
inc
pop
mov
mov
sub
push
cmp
fcoms
scas
aas
cmp
int
negb
sub
xchg
ret
sub
and
fdivp
addr16
addb
sti
in
jecxz
lods
rol
inc
rorl
pushf
imul
loop
sub
es
mov
pop
mulb
ficomps
and
repz
ja
stos
aam
cltd
jb
fstps
lea
jmp
lods
aaa
std
imul
in
and
ret
aad
idivl
dec
loop
jecxz
xor
mov
icebp
call
push
sti
lret
out
pushf
or
subb
sbb
jle
dec
mov
xor
and
jge
add
push
jno
sti
cmpsl
adc
mov
inc
hlt
mov
sub
ljmp
fbld
ss
faddp
dec
ffree
inc
mov
jne
adc
repnz
shlb
stos
push
in
or
sub
mov
xchg
jle
bnd
outsb
fdivrp
mov
faddl
push
stos
insl
aaa
inc
mov
test
and
test
mov
enter
lret
js
pop
push
xor
push
in
cmp
fcoml
add
inc
sbb
out
sysenter
lds
mov
std
jl
aaa
add
fs
loop
cmp
or
in
add
sub
in
cld
pop
sub
call
js
das
sbb
scas
mov
fwait
push
mov
dec
and
ret
add
shrb
push
loopne
imul
mov
gs
addr16
inc
or
push
dec
xchg
add
fwait
arpl
xchg
mov
sub
leave
cmpsl
pop
mov
rcl
xor
test
sub
xchg
add
pop
sub
xchg
out
mov
pop
loope
add
fistpll
loop
mul
call
ret
push
jmp
pop
rolb
shl
pop
xchg
lock
and
mov
dec
ds
into
lret
push
pop
jns
push
dec
arpl
push
mov
aam
xchg
and
dec
daa
xchg
add
cltd
sar
das
xor
out
jmp
adc
jbe
fwait
xchg
lcall
arpl
xchg
mov
scas
rcl
inc
xchg
or
xchg
mov
xchg
xor
inc
add
ds
iret
cld
inc
gs
aas
inc
sti
mov
xchg
cmpsl
hlt
add
xor
push
mov
int
jle
pop
fdiv
xor
mov
mov
gs
lods
mov
or
imul
in
push
rcll
pushf
inc
cld
cmp
jp
adc
sbb
xchg
sbb
aad
arpl
mov
out
mov
cld
or
scas
push
cltd
dec
fcmovnb
scas
push
stos
dec
ret
sub
mov
push
pop
mov
ljmp
pop
and
insb
or
pop
ja
iret
push
mov
push
ret
out
mov
rclb
inc
out
dec
lods
test
adc
xor
pop
test
mov
test
cmp
xchg
jecxz
push
outsl
inc
addr16
lea
std
jne
sti
les
add
sbb
add
out
cmpsb
cmp
test
stc
cmpsb
fildll
jb
xchg
hlt
xchg
and
jl
and
daa
add
andl
push
repnz
jnp
hlt
push
fs
out
pop
push
push
xlat
mov
adc
adc
cmp
outsb
add
or
sti
ss
imul
aaa
xchg
and
mov
testl
out
test
jae
or
and
lcall
mov
test
aad
pop
jne
add
mov
or
add
pop
adcb
add
jmp
stos
push
mov
jbe
mov
bnd
shrl
lods
nop
pop
sahf
cmpsl
lods
inc
je
cs
popa
mov
je
mov
sbb
adc
jp
add
adc
outsb
icebp
push
popa
incl
mov
dec
daa
aas
mov
xor
lret
in
xchg
push
push
xchg
iret
lcall
nop
imul
pop
hlt
lret
xorl
movsl
and
dec
mov
out
lods
shld
out
push
sbb
fmull
adc
cmp
dec
in
cwtl
mov
cs
mov
and
bnd
pop
lods
push
fs
xor
iret
jb
fwait
iret
stos
iret
iret
mov
in
sahf
sbb
nop
or
stos
lock
insl
mov
sti
jo
bound
lcall
call
jmp
cli
xchg
push
imul
into
subl
jge
cmc
xchg
test
sti
mov
cs
cmovnp
jg
xorb
sub
xor
and
cmp
jae
push
adc
in
loop
mov
sub
cld
sub
fs
mov
call
jae
cmpsb
xor
xchg
jo
or
sbb
mov
iret
jb
inc
inc
push
and
push
pop
dec
sbb
enter
clc
dec
xchg
repz
and
shr
out
xchg
xor
out
repz
es
mov
fcoms
enter
loop
cli
mov
das
mov
in
jo
or
mov
dec
gs
adc
mov
xchg
jo
and
rol
ja
cmp
cltd
xor
cmpsb
or
in
xchg
scas
fs
add
dec
in
divl
cmpsl
pop
mov
sbb
mov
jmp
dec
mov
aam
mov
test
mov
jno
add
and
icebp
jg
add
fs
push
sbb
rorb
rolb
imul
dec
jbe
icebp
push
sti
pusha
sti
scas
rcrb
jno
cwtl
cmpsb
movsb
cld
jbe
jmp
mov
rcrb
cmp
ds
mov
and
xor
cmc
gs
xchg
mov
loopne
in
aam
sbb
mov
jp
sbb
sti
inc
fsubrs
and
faddl
inc
cmp
xchg
fstp
push
aad
cltd
mulb
and
repnz
jno
les
popf
mov
cmp
and
jmp
hlt
in
adc
dec
add
sub
in
xchg
outsl
push
dec
sub
sarl
or
xchg
adc
ret
cmp
test
and
fidivrs
adc
dec
fiadds
add
mov
push
fisttpll
icebp
jb
and
test
hlt
insl
dec
xchg
pop
add
into
add
rcrb
inc
push
mov
inc
jg
sbb
sahf
sahf
jne
push
mov
inc
xchg
mov
mov
cmp
or
in
fimull
pop
sbb
ror
sbb
je
add
pop
pcmpeqd
loopne
mov
pop
jns
jmp
sub
sahf
pop
cmp
jle
mov
cwtl
fcoms
cmp
and
sbb
inc
loope
bound
adc
xchg
into
aad
iret
adc
push
test
mov
rclb
or
in
add
sub
pop
lret
stc
lock
sub
scas
jbe
mov
jbe
test
inc
jl
mov
xchg
fdivr
test
jbe
cmc
outsb
lods
mov
enter
insl
loop,pn
ja
mov
mov
shlb
cmpsb
pop
xor
pop
test
cmp
in
push
xor
mov
xor
rclb
mov
or
xchg
mov
pop
std
imul
ds
sbb
pop
test
fildll
xchg
xchg
cmp
and
call
imul
sub
mov
dec
rorl
stos
adc
adc
mov
je
jbe
fstl
lods
jge
xor
stos
adc
jae
push
popf
lret
pop
inc
iret
pop
leave
mov
cmp
popf
ja
iret
pop
in
push
cld
mov
les
and
fists
ja
sahf
dec
rep
xor
mov
mov
insl
jg
arpl
mov
dec
sbb
dec
jmp
flds
push
sbb
and
dec
mov
sub
ret
aas
pop
nop
test
xor
movsl
icebp
sbb
add
push
clc
add
dec
sbb
or
aas
sub
psadbw
adc
or
jge
enter
dec
std
mov
cmp
ss
mov
arpl
daa
and
push
dec
or
fimull
ret
xor
rorb
out
fidivs
adc
lock
push
pop
mov
lahf
fstl
scas
xchg
repz
xchg
rolb
xchg
and
add
pusha
insl
fcoml
xchg
xchg
xchg
mov
jns
xchg
ljmp
add
std
scas
insb
loopne
gs
test
push
add
cmp
mov
pop
into
mov
mov
test
adc
cmp
mov
imul
cmp
data16
adc
outsl
jo
je
and
rcrl
idivl
xchg
jmp
ret
mov
sbb
adc
psubd
mov
lret
mov
xchg
mov
cmp
push
and
jno
pop
jb
jo
lcall
dec
mov
movsb
lods
in
xor
in
test
mov
push
jno
dec
adc
scas
decb
mov
mov
xor
sub
cwtl
push
aaa
rcl
push
add
dec
int3
mov
leave
xchg
xor
rclb
iret
test
mov
rcl
gs
aas
icebp
xor
push
insl
dec
xchg
mov
lock
adc
es
stos
add
cli
push
int
lret
mov
dec
push
xchg
loope
jns
imul
roll
pop
repz
fidivrl
rorl
test
jp
out
push
in
pop
je
notl
gs
cli
cld
stc
lods
inc
mov
cmp
inc
jge
cmpsl
xor
outsl
out
arpl
xlat
add
jb
cld
mov
popa
movsb
xchg
aam
pop
push
insb
sbb
or
cmp
mov
xchg
pop
dec
sbb
and
fsubp
push
dec
sub
outsb
add
aaa
adc
sub
in
inc
mov
pop
pop
and
jb
inc
and
sbb
cmpsb
in
adcb
arpl
je
imul
ja
scas
add
sahf
adc
cwtl
test
hlt
add
dec
pop
and
sbb
pop
pop
in
mov
adc
pop
adc
lret
movd
fcmovu
and
and
ljmp
aas
fsubrs
jl
ja
cld
mov
fdiv
out
test
stos
mov
pop
aam
jmp
dec
cmp
add
push
and
add
or
test
fwait
sbb
and
insl
or
hlt
and
mov
inc
js
sbbl
lods
dec
fstps
sbb
push
lea
inc
inc
jns
lret
sub
dec
sti
js
fstps
test
push
or
pop
xchg
mov
xchg
es
push
cld
clc
lcall
sub
scas
dec
lret
hlt
push
gs
outsl
xchg
xchg
call
in
repz
pop
inc
sbb
cmp
std
loopne
jmp
jge
adc
jmp
push
cld
pop
sub
and
out
movsl
jp
ds
jo
cmp
sar
push
or
sub
push
insb
push
xor
mov
loopne
lds
shlb
inc
jb
mov
mull
lds
gs
xchg
cmp
fstp
pop
test
dec
shlb
ss
inc
pop
insb
push
sub
fdivl
jle
add
xchg
inc
adc
icebp
mov
sti
cmp
fcmovbe
xor
lcall
adc
repnz
dec
test
into
pop
arpl
sahf
and
jmp
mov
in
and
stc
mov
out
jge
or
cwtl
fbld
sub
andl
leave
or
adcl
insl
addb
out
xchg
adc
loope
stos
aad
insl
jg
iret
icebp
pop
push
mov
sarl
fdivrl
or
mov
scas
inc
fidivs
mov
cmp
arpl
ret
nopl
idivl
xchg
ss
xchg
frstor
inc
js
and
and
pop
xor
sub
add
jecxz
jne
and
inc
orb
inc
adcb
pop
jnp
int3
fldl
cs
pop
pusha
std
adc
mov
pop
pop
push
js
lock
sbb
aam
cmp
scas
pop
push
lret
and
scas
loope
cmpsl
mov
jb
stos
fisubrl
add
jno
cmp
xor
sbb
jp
shlb
adc
push
clc
mov
pop
jb
out
leave
dec
inc
test
cld
fwait
std
dec
adc
call
sub
gs
lret
and
push
adc
and
mov
mov
or
mov
stos
sub
cmp
mov
mov
xor
daa
ja
icebp
insb
mov
div
add
imul
jmp
cmp
daa
cmpsl
push
addr16
lret
daa
xor
inc
mov
pop
push
inc
movsb
mov
mov
nop
outsl
int3
mov
xchg
aaa
ss
push
negb
stos
push
outsb
jmp
xchg
rcll
mov
mov
push
cli
sbb
xchg
push
mov
pusha
adc
xchg
cli
test
lock
inc
pushf
iret
dec
push
mov
or
mov
and
dec
dec
shlb
roll
mov
dec
in
pusha
lods
pop
int
push
or
inc
xchg
ficomps
lcall
jae
or
enter
and
enter
pop
push
sub
xchg
stos
jl
notl
filds
jmp
rep
inc
mov
scas
mov
inc
fwait
dec
xchg
in
push
inc
imul
xor
adc
adc
insl
std
aas
push
test
xchg
jmp
pop
loop
jecxz
inc
outsb
inc
stc
push
add
fs
xlat
stos
sbb
daa
pop
inc
xor
leave
sti
js
stos
gs
ljmp
pop
sbb
test
addr16
int3
out
icebp
push
int3
push
sbb
cld
fldenv
outsl
mov
xor
pop
or
or
rcrb
mov
lods
ffree
lds
push
mov
es
mov
mov
sub
aaa
push
es
xlat
mov
fbstp
mov
js
xchg
popf
addl
imul
sbb
shlb
xchg
inc
mov
clc
jg
pop
adc
or
cmpsl
xchg
adc
inc
adcl
ret
out
or
adc
out
sti
mov
or
scas
dec
shl
dec
repnz
je
push
jp
loopne
pop
pop
mov
xchg
dec
xchg
inc
insb
faddl
xor
mov
dec
in
inc
xor
ficoms
out
loop
cmp
lret
jle
int3
shr
sub
cmp
xor
fistl
sub
mov
mov
add
test
adc
dec
inc
pop
fmulp
or
insl
fnstsw
xchg
pop
cld
jno
jns
jnp
ds
and
in
aam
cmp
mov
mov
cmpsb
and
push
clc
scas
mov
aaa
fstp
inc
jg
arpl
ret
lea
add
xchg
adc
aas
test
out
mov
add
mov
adc
cmp
mov
add
fldenv
mov
mov
pop
and
sbbl
push
sub
int
mov
test
cmpl
icebp
jecxz
mov
mov
sub
inc
mov
mov
push
mov
dec
sub
pop
inc
mov
popf
jg
adc
call
dec
mov
jnp
ret
not
xchg
ror
popf
mov
push
xor
jle
jnp
aam
inc
jecxz
cmp
jo
xor
cli
sbb
rcrl
jo
sbb
sbb
imul
mov
mov
jno
cwtl
sub
inc
leave
imul
fnstsw
sbb
pop
daa
xchg
mov
add
movsb
pop
jmp
adc
in
aas
xchg
ljmp
sbb
jge
inc
jae
adcl
dec
pop
or
mov
daa
mov
sub
pop
xor
pop
mov
inc
or
shlb
jbe
sub
push
shlb
test
push
mov
mov
insl
test
lcall
test
dec
jmp
cli
mov
aas
lock
in
mov
and
pusha
cmpl
test
adc
rorl
sbb
imul
adc
movsl
scas
or
add
push
stos
jo
xchg
sbbl
push
sti
push
mov
xlat
frstor
scas
pop
mov
mov
aas
orl
test
or
sbb
shll
inc
jge
and
into
ret
jge
xchg
adc
xchg
pop
lods
jbe
mov
jae
push
push
and
aaa
psrld
lock
mov
mov
jle
adc
cmp
testl
es
cltd
push
xor
dec
int
popf
sub
rclb
xor
int3
sub
fistpll
jp
mov
inc
stos
jle
int
mov
aas
mov
pop
push
xchg
adc
mov
int
push
in
clc
les
xchg
sub
lock
outsl
clc
in
js
idivb
and
inc
pop
adc
push
popf
push
cmpsb
lret
sbb
push
lret
pop
stc
cmpsl
les
pop
jl
xchg
mov
jno
add
icebp
sahf
push
jle
adc
ja
stc
dec
sub
inc
cmpsb
jae
cmp
sub
adc
mov
lods
shll
sub
fiadds
fmull
cmp
cmp
dec
and
mov
and
cmp
scas
jge
inc
sar
add
popa
add
xchg
inc
sub
outsb
ret
pop
cmp
popf
pop
jb
mov
sbb
ja
flds
sahf
pop
popf
mov
jmp
mov
pushf
jmp
movsl
jg
cmpsl
pop
int3
mov
add
jmp
inc
xchg
insl
adc
mov
pop
and
jg
outsl
mov
lods
add
xor
xchg
outsl
lock
test
aas
stc
mov
xchg
daa
push
ret
cld
dec
xchg
inc
mov
jle
daa
int3
push
add
lcall
aas
jb,pt
ds
mov
dec
shll
push
je
mov
jge
xor
dec
icebp
ja
push
inc
mov
xorb
xor
xchg
jo
in
adc
or
cwtl
scas
aaa
push
or
cmp
dec
in
shr
push
push
call
push
insb
loope
pop
push
inc
es
clc
mov
std
imul
mov
jl
popf
fimull
and
ds
pushf
or
push
dec
fisubl
dec
in
cmp
sub
dec
adc
xchg
loop
and
lock
dec
daa
shll
shrb
iret
lahf
push
adc
je
push
test
sti
mov
mov
mov
push
cmp
das
sbb
test
fstps
xor
jl
or
fisubl
mov
xchg
xor
in
hlt
inc
jno
in
cmp
aaa
mov
rcll
mov
inc
inc
and
negl
ljmp
pop
ja
adc
lock
insl
into
imul
movsl
mov
push
push
xor
aad
push
iret
test
adc
ret
cs
push
mov
xor
in
pop
add
xchg
mov
or
jle
cmp
push
movsb
popl
scas
scas
icebp
jp
jge
ret
jb
test
stc
adc
add
pop
jb
icebp
xchg
rorb
push
dec
pusha
inc
nop
jns
sub
sbb
leave
std
rclb
mov
gs
mov
andl
cmp
out
add
sahf
stos
push
sahf
lcall
stc
inc
mov
inc
js
mov
mov
pop
test
jg
pop
out
repnz
lock
stos
test
je
mov
cwtl
inc
data16
shlb
in
push
jle
or
call
cmp
out
or
fsts
cmp
or
imul
jb
sahf
push
sbb
push
xchg
ljmp
daa
data16
lods
call
dec
or
pop
jg
add
sbb
test
mov
insl
add
add
sbb
test
inc
stos
iret
push
in
mov
mov
jmp
out
mov
add
inc
jecxz
daa
jecxz
pop
lret
push
lret
stos
insl
out
jmp
lahf
mov
push
ljmp
mov
rcr
gs
pop
leave
fsubr
push
es
in
mov
add
mov
lret
out
nop
inc
mov
xor
add
pop
out
mov
xchg
popf
xchg
mov
push
cmp
or
sbb
adcl
call
rcrl
fwait
out
cwtl
lock
add
inc
sbb
hlt
mov
sar
rol
xchg
cmpb
xor
into
fcmove
adc
cmpsl
adc
int3
mov
pop
enter
cs
adc
hlt
dec
jle
and
add
mov
or
xchg
mov
mov
cmp
or
fwait
sbb
or
mov
or
cmpsl
and
jb
lcall
sub
iret
sbb
pushf
jmp
add
xor
dec
xchg
add
inc
mov
pop
ja
sbb
outsb
jmp
and
aas
jns
inc
xchg
mov
loopne
fstpl
ja
cmp
loop
mov
shrb
popf
cmpsb
xchg
dec
pushf
arpl
cmp
cmpsb
sub
and
and
mov
or
pop
in
xor
xchg
pop
adc
loope
adc
or
mov
mov
mov
cmpsl
mov
push
mov
aaa
xchg
stos
sub
push
sbb
test
sbb
push
push
pop
add
inc
jne
out
and
fs
pop
test
inc
xchg
pop
xchg
adc
cmpsb
dec
add
dec
inc
sbb
rcr
jl
mov
or
es
dec
xchg
pop
xchg
jbe
cmp
xchg
and
adc
std
jnp
bnd
mov
and
jl
inc
xor
sahf
repz
sub
aas
scas
pop
xor
dec
dec
enter
dec
and
inc
mulb
mov
mov
sbb
out
fs
xor
xchg
repz
pop
cmc
xchg
inc
inc
jo
fistps
lcall
pop
inc
inc
mov
outsl
subb
in
sti
roll
sbb
rclb
sarl
stc
mov
out
lods
mov
push
inc
jg
lods
push
test
and
mov
idiv
ret
cld
jl
call
sub
outsl
jae
scas
clc
stc
push
mov
mov
cmc
xchg
xchg
xchg
shl
dec
jae
push
scas
jle
push
call
jb
jbe
push
out
xor
sbb
fisttps
and
out
bound
ret
dec
add
scas
outsl
cmp
roll
fiadds
mov
out
cmc
push
dec
lahf
adc
xor
mov
or
scas
je
xchg
icebp
jb
repz
out
mov
jl
push
roll
fimull
push
fstl
popa
mov
jns
pusha
cmp
rolb
dec
inc
adc
dec
out
sbb
fimuls
out
push
adcb
push
mov
push
loopne
and
dec
in
dec
and
xlat
dec
xorb
push
push
negb
js
ret
out
jecxz
and
adc
sbb
mov
mov
push
cmpsb
mov
lcall
add
or
out
sbb
adc
lret
cmpsl
in
pop
imul
add
aaa
push
add
mov
xor
bound
mov
sub
inc
ljmp
cmp
jl
mov
jl
mov
or
data16
jle
imulb
shlb
xchg
push
or
xchg
push
inc
add
outsl
inc
xchg
xchg
rorb
sahf
ret
dec
out
in
fiaddl
lea
and
mov
aas
mov
rolb
jl
fs
fcomps
xor
fnstsw
lea
sahf
test
push
aas
or
push
push
loop
fs
fcmovb
sub
and
pop
xchg
mov
lcall
xor
js
cmpb
insl
mov
aas
int3
jmp
inc
sbb
adc
je
imul
pop
scas
xchg
outsb
adc
jle
mov
sub
adc
and
das
adc
inc
ror
test
test
jae
int3
lods
in
in
push
popf
cmp
xchg
ret
loop
mov
mov
sub
in
mov
shrb
out
xchg
dec
shrl
mov
xchg
ret
mov
lahf
aam
xchg
sbb
fdivr
loope
stc
or
mov
xchg
ja
mov
push
pop
or
mov
loope
ret
mov
dec
lret
out
jo
cltd
pusha
ror
aaa
mov
xchg
loope
mov
or
jp
dec
clc
mov
mov
mov
popa
dec
xchg
and
insb
hlt
inc
mov
fsubl
std
jmp
mov
in
stos
and
hlt
xor
aaa
and
fistps
push
jecxz
inc
pop
pop
mov
jnp
jecxz
das
adc
sahf
lock
sub
mov
and
sti
aas
sarb
nop
aas
shl
mov
xor
pop
mov
push
vsqrtss
icebp
outsb
mov
dec
sub
sub
push
jbe
add
imul
les
fsubrl
mov
test
insl
imul
stos
add
shr
inc
stc
jno
pushf
js
mov
adc
loop
adc
mov
imul
or
push
loope
dec
call
scas
out
adc
js
xor
insl
sub
popa
cmpsb
adc
test
xor
jnp
enter
mov
bound
and
loope
dec
mulb
out
scas
clc
cltd
push
xor
jmp
adc
push
jb
rorl
push
mov
out
or
test
insb
fildll
mov
fadds
push
jmp
fisubl
cmp
cwtl
int
and
cmp
repnz
rcrl
mov
push
inc
roll
loope
sbb
sbb
xchg
push
sbb
inc
inc
xor
dec
sub
divb
int3
sub
ss
test
pop
test
inc
xchg
out
ret
mov
xorl
xchg
sbb
sub
in
and
adcb
pushf
aas
jge
int3
push
pop
jne
xchg
add
mov
daa
je
sti
lret
jns
movsb
in
cltd
adc
scas
shrl
mov
push
arpl
pop
sbb
sub
push
in
mov
or
test
push
adc
pop
push
xchg
out
add
mov
sbb
jne
push
or
mov
pop
sbb
mov
mov
xor
adc
lahf
xor
iret
xor
fcomi
mov
or
cmp
mov
test
jbe
cmpsb
add
in
cwtl
enter
cmp
sbb
mov
xor
mov
dec
xchg
dec
rclb
les
and
push
sar
out
dec
mov
pop
push
jno
cltd
xor
fprem
fs
sbb
rcrb
jns
rorl
fnstenv
aam
scas
mov
loope
mov
test
jne
stc
sub
ds
lods
cmpsb
ljmp
cmp
nop
not
leave
and
icebp
or
daa
sbb
pxor
loopne
sub
pop
and
jge
out
mov
lahf
jmp
push
xlat
xchg
jae
cmp
xor
or
cs
rcrb
push
jno
mov
enter
repnz
repz
push
push
mov
sbb
aaa
cmp
scas
out
lret
fwait
insl
nop
out
ja
in
ljmp
push
xor
adc
pop
das
and
sahf
pop
scas
jle
fisttpll
enter
loop
mov
aaa
sahf
jl
mov
mov
fcmovbe
cmpsb
or
jecxz
jp
mov
jge
ret
jne
lods
bound
sahf
sub
inc
nop
inc
mov
and
mov
pop
scas
test
ret
stos
mov
sub
scas
pop
test
fsts
sub
mov
xor
enter
mov
scas
cmc
pop
mov
pop
cmp
dec
sub
sub
add
sub
out
mov
and
xor
dec
hlt
pushf
out
cs
loope
fstps
paddq
sbb
iret
test
cmp
cltd
push
mov
sub
clc
inc
mov
aam
lods
leave
mov
movsl
push
mov
pop
inc
adc
sub
dec
jns
leave
repnz
add
sbb
or
or
dec
jns
cmovle
jge
ficoms
aam
outsl
lcall
adc
sbb
aas
push
mov
arpl
arpl
xor
adc
inc
xchg
mov
daa
daa
es
cmp
pop
stc
inc
dec
pushf
push
mov
cwtl
push
mov
pop
or
cmp
add
mov
push
outsb
jnp
sub
dec
sub
dec
sahf
jns
mov
or
popl
sbb
cmpsb
pop
popf
mov
cmc
sub
clc
cmpb
shr
xchg
add
mov
sub
xor
negb
jne
aam
mov
adc
into
sarl
lock
lret
add
pop
dec
cmc
rol
sub
in
cmp
mov
cld
jmp
imul
inc
cmp
pop
inc
xchg
fbstp
xor
hlt
dec
ret
popf
pop
popf
jmp
mov
and
and
xor
outsl
cmp
or
xchg
pop
cmp
sbb
rcrl
movsl
testb
lds
pop
fiadds
or
pop
xor
inc
popf
inc
push
in
call
mov
pushf
add
or
push
mov
add
stos
mov
jecxz
out
leave
sbb
mov
fs
push
mov
xchg
jg
mov
pop
push
dec
mov
sbb
stc
jno
mov
dec
pop
popa
insl
repz
sar
icebp
call
pop
xor
ret
out
dec
hlt
jg
enter
jl
je
or
lahf
xor
push
repz
popf
pop
lret
mov
push
jne
dec
hlt
gs
push
and
loop
jbe
jb
aas
and
icebp
jo
mov
cmp
mov
lea
inc
loop
and
xchg
out
mov
add
xchg
andw
int3
bt
lods
dec
fcoml
imul
insl
aaa
adc
sbb
jno,pt
push
adc
and
mov
rep
stos
dec
xchg
jle
into
fildl
mov
loop
popa
sub
push
mov
data16
cmpsl
jp
xor
or
adc
out
notl
inc
jge
sbb
cs
xor
pop
sbb
push
in
cmp
das
inc
and
xor
loope
xchg
stc
xor
sub
cli
pop
loope
cmp
pop
ret
push
rclb
std
les
dec
jle
dec
jne
test
or
popa
shlb
or
and
inc
insb
fistpll
xor
cmp
cld
gs
dec
inc
loopne
pop
call
adc
mov
enter
dec
clc
mov
outsl
int3
in
lods
cmpb
push
adc
mov
mov
cmpl
inc
sbb
rolb
sbb
push
fidivrs
aad
ljmp
add
jle
lods
es
jl
mov
xchg
mov
pop
sub
cmp
mov
mov
out
xchg
inc
cmc
push
popa
and
rcl
or
xorb
stos
and
or
outsl
sbb
or
fisubrl
les
sub
arpl
fwait
mov
fadds
jbe
xlat
aas
xor
mov
lods
enter
pushl
adc
mov
popf
mov
nop
lahf
lock
pushf
jl
aas
inc
jmp
outsb
fs
mov
repnz
xor
mov
mov
call
jb
aam
int
clc
lock
stos
pusha
mov
jmp
les
rcrb
and
xor
inc
nop
fidivrs
mov
mov
pop
jno
mov
nop
push
movsb
rorb
ficomps
mov
cmp
or
sti
or
and
mov
xor
test
loopne
adc
and
movswl
jle
inc
pop
pusha
test
sbb
fnsave
xchg
aad
cwtl
shlb
inc
mov
out
add
sub
mov
mov
cmc
mov
cmp
pushf
outsl
inc
or
aam
and
cld
push
fnstenv
ss
insl
scas
out
push
adc
loop
insb
xchg
jo
dec
decl
js
das
iret
stos
pop
and
mov
xchg
lret
hlt
mov
jo
cli
and
popf
sbb
leave
sub
popa
mov
je
sbb
adc
adc
or
mov
repz
jg
push
out
scas
jle
mov
dec
jmp
das
mov
and
rol
daa
and
sti
or
rclb
lods
pop
sub
lahf
push
addr16
dec
adc
imul
ret
rol
push
das
cmpsb
dec
addr16
jnp
push
rclb
xor
cmp
xchg
dec
ds
jg
mov
jno
push
push
out
cmp
adc
push
mov
sahf
popa
shlb
push
pop
sub
xlat
mov
inc
aad
dec
adc
sub
rol
pop
js
adc
and
not
test
js
and
mov
inc
cmp
rol
into
loope
xchg
and
int3
push
es
pusha
iret
daa
mov
mov
sub
xchg
push
mov
and
test
xlat
or
sbb
inc
dec
sbb
cwtl
outsb
and
lret
cwtl
adc
pop
sub
lods
and
icebp
adc
lahf
xchg
mov
pop
enter
mov
cmp
lods
lcall
aam
mov
sub
or
adc
loope
dec
mov
popf
mov
push
mov
repz
test
push
sub
ss
pushf
movsl
adc
hlt
xor
js
cmpsb
loop
out
cmc
ss
cli
rcl
dec
jle
popf
in
ljmp
push
std
arpl
xchg
fcompl
mov
or
jg
nop
add
sub
clc
pop
and
push
xchg
xchg
pushf
sbb
add
div
cltd
and
dec
repnz
cmovnp
in
rcl
inc
cld
xchg
and
push
es
test
aas
test
push
dec
xchg
cli
jmp
mov
mov
mov
dec
mov
enter
sbb
cmpsb
push
cli
mov
addr16
stos
in
aas
pushf
out
mov
insl
jl
xchg
data16
roll
sub
pop
cli
test
sub
sbb
mov
ss
pushf
push
mov
int
inc
xchg
xchg
lock
xchg
aam
test
cld
xor
cmpsl
push
fidivs
fists
daa
jecxz
and
lods
sub
pop
and
mov
imul
push
stc
cwtl
ss
xor
sub
ret
mov
jl
push
add
stc
dec
shll
add
test
sbb
jb
les
std
dec
push
test
xchg
into
das
clc
mov
push
jne
sbb
jge
inc
xor
scas
ljmp
push
inc
push
call
jmp
daa
cmp
pusha
xchg
dec
cmp
adc
mov
loope
jmp
cmp
sub
loop
xchg
fidivl
imul
rolb
mov
pop
imul
jno
aas
stos
cltd
scas
nop
shll
rolb
nop
lar
pop
and
scas
je
push
lods
push
bound
xchg
jae
xor
mov
mov
pop
xchg
and
jmp
cmp
jno
cmc
movsb
mov
adc
cmc
xchg
push
dec
daa
gs
xor
arpl
inc
ret
aad
jns
or
aam
mov
push
jno
dec
scas
or
aas
sub
sahf
mov
dec
repz
testl
cwtl
push
pusha
scas
jmp
lods
cmpsb
fwait
pop
or
call
fwait
leave
aam
push
imul
xchg
mov
movsl
jne
mov
push
jno
jmp
xchg
fsts
gs
jg
dec
test
xor
jmp
push
add
mov
sahf
jle
add
lret
cld
inc
iret
xchg
jnp
das
and
xor
aam
xor
lret
ret
cli
sahf
push
jne
add
jae
gs
xor
mov
jl
cmc
iret
lock
mov
add
inc
or
lahf
cltd
adc
in
inc
jae
es
sub
rcrl
dec
jle
fadd
mov
js
sbb
mov
ret
out
cltd
jo
mov
cmp
cmpsb
inc
pop
lods
jecxz
out
sub
stos
push
jnp
pop
adc
add
jge
and
push
test
inc
cld
and
add
xchg
leave
sub
hlt
or
push
in
mov
popa
mov
pop
jl
pusha
inc
ret
popf
xchg
sti
addr16
orb
fldt
cmp
xor
add
xor
sahf
and
shrb
mov
test
std
test
in
data16
movb
pop
or
les
ds
incb
fwait
rcrb
pop
dec
push
sbb
jo
mov
popa
fistps
dec
aas
pop
or
push
test
pop
or
sbb
loopne
test
cli
rorl
ss
iret
push
loop
out
sbb
and
sbbl
add
sub
jno
sbb
fwait
cmpsb
insl
mov
lods
jbe
inc
rcrb
sbb
jo
cs
and
sbb
repnz
jb
fdivp
jae
out
push
shl
dec
test
repz
rorl
fbld
sbb
loop
out
sub
mov
cmp
pushf
rcl
mov
aad
enter
cmp
scas
fcmovnb
pop
or
pop
fnstsw
ss
shll
scas
jecxz
gs
aas
ss
inc
repz
push
or
xchg
inc
clc
push
sarl
push
cmpsb
insl
popl
jnp
fcomps
pop
fdivr
and
inc
and
fnstenv
popl
pop
jno
shrb
roll
dec
scas
scas
xchg
sbb
mov
mov
jbe
cltd
incl
shl
inc
push
cltd
pop
mov
imul
into
xchg
mov
decb
push
out
mov
inc
mov
jge
ss
pop
enter
repnz
or
inc
in
cmp
fdivl
in
sbb
lret
in
push
cmp
stos
jae
ss
and
xchg
repnz
jno
xor
xchg
push
leave
bound
ds
adc
aad
jp
aam
xchg
test
jae
or
jno
out
mov
js
fnstenv
out
int3
insl
outsl
adc
fcomps
inc
pop
add
pop
out
add
jecxz
xor
or
sbb
dec
and
in
int3
lods
pop
insl
xchg
testl
inc
fwait
loopne
aaa
enter
dec
idivl
std
ljmp
xchg
inc
jecxz
movlhps
cmc
dec
pop
movsb
cmp
out
mov
xchg
sub
outsb
mov
mov
add
adc
jmp
or
movsl
adcb
mov
mov
xor
lahf
push
frstor
mov
mov
cmpsl
inc
push
mov
and
pushf
adc
xchg
jp
inc
neg
data16
xchg
insb
rol
push
pop
movsb
mov
pop
jno
add
sbb
add
lcall
and
dec
roll
test
pop
movsb
dec
xchg
cmpsl
sarb
fs
sbb
jo
adc
xor
or
lds
sub
cmp
es
addr16
cmp
cltd
hlt
push
push
shr
jmp
dec
test
jg
jns
mov
add
dec
rcrb
xor
push
mov
movsb
jns
jl
push
mov
push
and
add
inc
insl
aas
js
fsub
cltd
lret
mov
jnp
mov
insl
add
scas
stos
in
mov
ljmp
xchg
xor
addr16
sti
pop
hlt
inc
sub
xchg
int3
pop
mov
add
je
dec
repz
lret
insb
and
ficomps
dec
aas
je
mov
xchg
jecxz
xlat
mov
sahf
out
int
xchg
out
outsl
pushf
test
xchg
inc
add
xor
inc
pop
fucomp
or
and
xlat
stos
inc
sbb
rcr
mov
mov
sbb
add
add
movsb
push
movsl
subb
push
pop
jmp
bound
pop
and
divb
loop
jbe
adc
or
fistpl
mov
inc
mov
push
cmp
sbb
imul
out
dec
cwtl
jmp
popf
mov
or
insl
movsl
bound
cmp
sbb
push
mov
add
test
push
leave
repnz
jmp
jb
pop
sahf
jg
or
repnz
adc
xor
lods
clc
xor
jbe
xchg
push
pop
and
xchg
out
cmpsb
popa
notl
cmc
add
repnz
sbb
movsl
jp
xor
add
sub
sbb
mov
sbb
addl
and
loop
or
lcall
add
icebp
out
addb
call
jmp
mov
and
jg
sub
cmc
dec
adc
sbb
ja
sbb
jb
notb
pusha
shlb
pop
xchg
pop
std
sub
ljmp
xchg
mov
call
mov
div
movsl
cmc
lret
clc
xor
add
add
lods
pop
dec
jns
frstor
lret
xchg
repz
add
scas
pop
inc
out
mov
sahf
jne
stos
out
mov
sub
fbstp
mov
aas
xchg
xor
in
cli
push
inc
lahf
and
inc
aam
mov
xchg
ret
outsb
dec
push
cwtl
lcall
xchg
test
popa
insb
xor
cmpsb
mov
adc
dec
in
fyl2xp1
push
lds
mov
pop
sahf
or
and
in
mov
sub
mov
outsl
adc
fs
insb
lahf
mov
sbb
icebp
imul
mov
lods
fwait
inc
imul
add
popw
in
mov
dec
cmpsb
rolb
and
inc
mov
sbb
sbb
xor
push
push
out
out
mov
call
xor
adcb
cs
les
push
jl
fs
into
cli
mov
mov
out
jns
movsl
popf
frstor
in
dec
push
popa
jae
xchg
aas
jmp
lds
lds
mov
fldcw
add
add
rorb
dec
sub
or
fcomp
and
out
hlt
iret
mov
insl
lock
adc
xchg
gs
cltd
adc
inc
jl
mov
mov
add
daa
lock
gs
xchg
adc
rclb
jns
mov
rolb
int3
fnstcw
ljmp
xchg
fidivrl
and
icebp
mov
shl
pop
push
sbb
sub
inc
pop
sbb
push
xlat
das
scas
andl
jp
push
cmp
xor
dec
repnz
xchg
mov
cmp
clc
cmpsb
adc
shlb
loope
lock
mov
shrb
arpl
test
mov
dec
or
lds
mov
loope
jmp
xor
pop
add
cmpb
dec
jno
add
leave
ffreep
push
xchg
aaa
idivl
gs
fstl
shr
icebp
in
ja
cmp
pop
shl
cmp
adc
jns
loope
mov
loope
xor
ret
jae
mov
scas
add
or
fcom
shl
loop
dec
dec
cs
lahf
mov
lods
sti
adc
dec
add
cmpsl
mov
imul
sbb
push
xor
xor
cmp
adc
push
dec
mov
or
les
xchg
loop
test
aas
subl
movsb
cld
cmp
stos
mov
stc
outsb
adcl
mov
lods
icebp
mov
mov
push
inc
xlat
push
xor
lods
flds
mov
clc
shrb
data16
repnz
cmp
loop
mov
xor
outsl
pop
js
lret
jmp
push
repnz
push
out
outsb
pop
gs
cmp
bound
aad
adc
pop
fdiv
cmp
add
or
push
mov
dec
sbb
mov
xchg
loopne
frstor
jp
inc
mov
and
adc
stc
push
sbb
imul
push
pop
enter
mov
in
fwait
dec
and
cmp
mov
xor
xlat
sub
insl
cld
sbb
rorb
insl
xchg
das
xlat
inc
add
xchg
pop
mov
sub
data16
iret
mov
das
xchg
sub
sub
push
lcall
pop
aas
pop
inc
ja
mov
test
jnp
inc
mov
outsb
push
pusha
cmpsl
lcall
lds
dec
int
fmul
incb
xor
lahf
sub
sub
push
fstpt
push
out
add
mov
push
mov
jle
lahf
bound
adc
dec
push
loopne
enter
jle
test
mov
es
fiadds
lahf
pop
jno
fisttps
stos
sbb
inc
rcrb
cmp
mov
scas
xor
sub
inc
imul
es
jnp
mov
pop
xchg
fildl
test
lock
std
adc
pop
mov
std
mov
push
in
or
sbb
fdivrs
mov
mov
rcrl
leave
insl
arpl
imul
sub
cld
push
jge
push
clc
cmc
cmp
je
iret
lds
mov
dec
jg
add
push
into
dec
jnp
xor
inc
pop
movsb
subb
cmpsl
jle
andl
jbe
sub
mov
outsl
lock
mov
adc
call
and
sbb
movsb
popf
mov
lds
popa
fsub
stc
insl
jo
pop
dec
add
pop
cmp
lods
lds
pop
cmp
inc
fs
lods
cmpsb
mov
cmpl
dec
cmp
jb
movsb
fimull
jns
call
aad
fs
inc
pop
or
stos
repnz
int
gs
sbb
cmp
cmp
add
pop
jbe
mov
jge
data16
cmp
jbe
xor
js
add
mov
xchg
sbb
loope
outsl
inc
push
fcompl
sbb
adc
test
and
inc
mov
pop
sbb
nop
xchg
inc
adc
and
sarl
sbb
shr
insl
push
imul
add
xor
out
cld
dec
mov
dec
dec
xchg
pop
ljmp
int
mov
cmp
jg
sbb
shlb
adc
jne
arpl
lcall
jmp
sub
out
pop
rolb
das
in
or
mov
loopne
cs
sbb
dec
cld
adc
push
pop
dec
pop
jb
mov
inc
loopne
mov
movaps
cld
dec
adc
stos
adc
sbb
pop
cmpsl
repnz
loopne
lret
lods
xchg
test
pop
mulb
sbb
xchg
imul
mov
mov
jmp
mov
push
sbbl
lods
cvttps2pi
clc
iret
lcall
adc
insb
inc
mov
mov
js
adc
xchg
sahf
loop
xchg
in
rolb
pusha
add
inc
in
inc
ret
or
xor
inc
cli
fidivs
push
pop
shll
nop
inc
lret
push
push
lea
cmp
or
sar
shrl
dec
ja
lea
cmp
push
aas
jo
aas
aad
scas
es
in
and
loopne
dec
loop
in
or
dec
add
mov
cltd
scas
int
into
jns
sbb
xor
in
into
ss
inc
movsb
xchg
sbb
sbb
xchg
jp
enter
lods
dec
ss
lahf
pop
or
cmp
adc
mov
jns
insb
adcl
aas
inc
scas
mov
pop
loope
mov
sbb
and
push
xchg
or
das
sub
push
or
pop
xchg
lea
and
popa
fwait
mov
inc
loop
dec
lret
inc
lock
push
push
movsb
xchg
or
das
inc
jne
jbe
pop
lods
rolb
or
data16
mov
xor
sbb
cmpl
ljmp
jp
subb
add
jmp
scas
push
or
sbbl
fnstenv
add
jbe
or
cmpsl
in
fsub
popf
or
stos
pop
sub
repz
xchg
es
jmp
mov
or
idivl
pop
add
loope
jmp
jae
mov
xchg
jnp
push
mov
inc
mov
jne
mov
cmp
xorl
ror
call
jmp
outsl
lock
out
int
and
mov
negb
clc
cmp
push
shrb
pop
in
jmp
fstl
jns
testl
inc
jg
in
lret
cmp
jb
or
cmp
jne
or
je
dec
popa
xchg
in
in
mov
insl
cmp
jo
pop
pusha
mov
repz
test
lcall
scas
vmwrite
mov
xchg
cmp
test
shlb
or
mov
sub
mov
xlat
in
sahf
cli
pop
mov
imul
jg
popa
sbb
leave
mov
outsl
adc
sbb
push
push
cmp
xchg
cmp
jno
cmp
mov
mov
sbb
rolb
ja
push
jo
mov
lret
adc
jne
jnp
sub
sub
dec
out
fisttpl
adc
loope
clc
cmp
dec
insb
test
xor
pushf
stos
ret
lods
lods
rcpps
add
cld
imul
mov
cmp
fsubs
insl
xorl
push
sub
out
jmp
jg
jnp
loop
sahf
in
jecxz
or
sub
inc
jae
push
cmp
sbb
push
mov
in
je
xor
and
sub
movsl
int3
into
pop
pop
push
sbb
fs
sub
out
push
aad
jnp
push
and
xchg
imul
push
or
xlat
dec
inc
and
repz
in
mov
jp
xchg
xchg
lods
jg
aad
fs
or
and
dec
out
push
out
cmpsl
pop
hlt
lock
bound
mov
inc
adc
div
push
insb
mov
aam
repz
add
addb
stos
mov
test
ret
mov
push
push
jnp
inc
adc
scas
fs
sub
lret
mov
or
push
push
test
mov
adc
mov
xchg
rorb
arpl
jg
icebp
int3
jns
sbb
push
pop
adc
pushf
loopne
cmp
or
pop
sbb
mov
xchg
cmc
mov
repz
aad
push
insb
sbb
push
sub
ss
int3
sbb
dec
popa
jnp
pop
imul
lds
mov
pushf
jns
jae
repz
pandn
mov
fstl
out
fld
popf
cwtl
ss
imul
cmpsl
les
fisubrl
xchg
shll
mov
and
xor
xor
push
lock
shll
cli
jns
les
jecxz
inc
inc
mov
cs
lock
sbb
gs
lods
or
in
sar
sub
pop
and
mov
leave
daa
orl
stos
lods
movsl
xorb
mov
mov
xchg
insb
mov
cli
mul
cmp
mov
jg
icebp
inc
mov
push
mov
jns
add
mov
jns
sbb
xchg
mov
pop
mov
aas
adc
into
or
mov
and
test
xchg
stos
stc
adc
jae
xchg
stos
push
mov
loopne
insb
and
dec
inc
aaa
pop
lea
arpl
les
loope
inc
cli
push
or
adc
loopne
inc
and
jecxz
jge
lret
push
push
lods
push
iret
std
sbb
and
call
push
repz
push
pop
xor
fwait
dec
or
or
cmp
jne
jmp
xor
out
push
push
adc
mov
out
lods
into
in
mov
loop
push
xchg
insl
sarl
push
sub
jmp
jbe
lahf
orl
pop
add
divb
push
out
mul
xor
cmp
sbbl
push
test
inc
lock
ret
xor
adc
int
addr16
or
cs
dec
mov
scas
jno
cmp
test
and
pop
or
nop
rolb
insl
push
inc
mov
int3
push
adc
sub
add
mov
xchg
addr16
je
cmpb
fdivs
icebp
or
dec
xchg
test
cld
sbb
and
mov
xor
shl
popf
add
call
push
and
mov
inc
out
cwtl
fmuls
jb
adc
cmp
pop
xor
enter
mov
add
clc
lods
sbb
je
mov
es
cli
jmp
inc
and
fiaddl
push
xor
out
enter
and
fisubrs
mov
lods
jg
push
adc
sahf
jae
sar
ss
in
and
pop
mov
pop
ficoms
cmpsb
das
dec
dec
cmp
push
gs
imul
xor
fdiv
stos
mov
xchg
movsb
notb
ljmp
mov
addr16
cld
ret
jmp
mov
movsl
and
sbb
stos
test
inc
ja
xchg
cmp
gs
loope
imul
xchg
inc
ds
pop
mov
pop
jl
test
hlt
push
jge
mov
int3
out
stos
xchg
pop
cmp
mov
aaa
jo
mov
or
add
pushf
pop
repz
dec
ret
sbbb
cmpsl
push
push
mov
in
outsb
push
pop
xor
jecxz
xchg
xlat
sbb
loope
subl
add
lret
or
imul
sbb
out
jo
divb
adcb
dec
stos
mov
test
and
punpckldq
mov
in
sbb
and
jo
xchg
jg
insl
mov
divb
sti
mov
popf
xor
fcomi
ret
adc
mov
ljmp
ds
data16
mov
shll
push
adc
sub
iret
scas
push
stos
push
add
stc
mov
loop
jmp
popf
in
and
cli
out
mov
push
imul
lret
sbb
or
shl
lds
shl
or
lret
cmpsl
mov
and
jne
mov
or
push
enterw
mov
jb
jp
jmp
stc
mov
cwtl
lds
mov
xchg
insl
mov
pop
pop
jle
loope
shlb
push
loopne
ret
lret
dec
into
call
jbe
or
mov
sub
roll
ljmp
insl
test
lret
lret
outsl
mov
adc
add
in
clc
pushf
es
shl
andl
push
cmpb
cmpsb
push
xor
aaa
data16
cmp
les
or
jl
pop
mov
xor
xor
jmp
dec
mov
mov
out
mov
stos
les
cmp
stc
in
roll
sbb
add
jg
lahf
into
cmp
mov
and
aam
mov
mov
stos
mov
test
not
das
pusha
outsl
aas
mov
sbb
xchg
mov
mov
nop
mov
dec
mov
push
lock
adcb
jae
out
shll
xor
aad
loop
fcmove
or
outsl
jns
in
incb
push
xchg
add
lcall
and
dec
and
jns
cltd
inc
dec
cwtl
lds
jl
insl
adc
mov
jbe
popf
pop
mov
mov
movsl
sub
sbb
pop
mov
or
sub
pop
es
jecxz
xorb
sbb
push
icebp
xchg
sbb
inc
mov
out
jmp
xor
inc
push
sbbl
pop
test
lret
push
shll
jg
lea
shll
mov
inc
pop
cwtl
ljmp
jecxz
lea
daa
or
int
mov
subb
mov
outsl
jo
fwait
test
mov
pop
dec
js
adc
outsl
add
xor
xor
fimull
jb
sub
sbb
fwait
inc
push
push
pop
fdivrs
movsl
mov
leave
jmp
insb
mov
repnz
rorb
nop
clc
mov
int
fxch
iret
xchg
or
dec
pusha
push
xchg
dec
ja
push
pop
call
sub
shl
mov
jl
push
push
faddl
xchg
stos
dec
in
sub
xchg
push
movsl
dec
xchg
inc
flds
stos
inc
sub
push
pop
dec
fucom
jg
xlat
iret
add
fimull
mov
vphaddubq
int3
pop
test
add
push
mov
sub
and
adc
sarl
dec
pop
pop
loop
sbb
lret
sub
cmp
mov
mov
aam
popf
mov
mov
sti
jne
adc
pop
rcrl
xchg
jnp
mov
jb
pop
mov
cltd
xchg
test
jnp
jne
xchg
rol
push
push
sti
push
test
das
mov
hlt
int3
mov
mov
and
xchg
scas
flds
sub
mov
les
pop
cmp
aad
lret
fbstp
pop
inc
xchg
jmp
cmp
movsb
mov
mov
push
and
lret
mov
lcall
push
aam
pop
fildl
idivl
repz
or
lea
jmp
jge
cmpsb
out
xor
or
lock
dec
mov
jl
push
andl
shl
test
cmp
and
clc
divb
jl
lahf
sub
mov
fadds
mov
test
jmp
push
nop
cmpsb
push
and
in
jp
sbb
test
cmpsl
daa
push
jo
mov
outsl
jge
loop
in
mov
into
pop
ss
cwtl
pop
ret
push
ss
push
mov
cld
push
pushf
int
jmp
outsb
jmp
xchg
or
popf
xor
addr16
jmp
call
movswl
push
scas
pop
jb
icebp
outsl
test
pop
push
sbb
fnstcw
add
cmc
rorb
data16
jno
pop
stc
add
aaa
dec
sub
sub
fistps
pop
sti
stc
lret
rclb
test
loop
dec
sub
pop
in
cmp
pmaxsw
ljmp
das
mov
mov
icebp
sbb
out
add
ss
out
or
dec
mov
aam
sbb
xchg
loopne
fstpl
stos
sub
or
xchg
cmp
adc
rcrb
loopne
mov
add
pop
popf
sbb
pop
mov
clc
xchg
or
outsb
leave
adc
mov
mov
int
leave
loop
je
test
test
cs
push
sbb
sub
insl
adc
cmpsl
fnsave
ja
aad
dec
jle
cltd
ds
push
mov
cltd
mov
xor
dec
mov
scas
jge
test
loopne
inc
bound
rclb
rcrb
cmp
pop
mov
mov
adc
xor
fisttps
scas
mov
or
jns
sbb
xchg
pushf
popa
into
or
push
popl
mov
mov
movl
xchg
int
stos
mov
xchg
sub
loope
sbb
jle
sub
mov
lahf
mov
inc
std
push
jp
loope
out
push
mov
fnstcw
xor
mov
inc
je
jae
fildll
add
je
in
xchg
into
shr
mov
inc
xor
jns
lods
dec
or
mov
rcr
mov
into
clc
jmp
loope
ds
shlb
imul
mov
dec
push
fists
jp
arpl
add
and
test
loopne
sbb
sahf
mov
mov
add
push
sub
pop
push
lahf
mov
sub
add
fnstcw
jl
pop
pop
cmc
add
pop
enter
xor
les
and
sti
ds
lds
pop
pop
mov
push
mov
push
lret
fisttpll
dec
inc
out
push
loopne
jle
imul
mov
pshufw
sbb
inc
xor
divl
xor
rclb
cld
push
in
pusha
xorb
sub
push
inc
imul
jp
dec
xchg
push
xorb
mov
cmp
in
icebp
sbb
fdivp
xor
ret
push
loopne
popf
stos
inc
cmp
pop
aam
mov
aaa
in
pop
xchg
xchg
ficoms
cmpsb
addr16
mov
jbe
add
stos
addr16
mov
jmp
xchg
adc
aas
cmc
mov
sub
fistl
jg
push
mov
lock
mov
cmp
and
mov
not
test
in
cmp
iret
cld
fstpl
ja
lret
aad
xchg
in
repz
ljmp
jo
xchg
ljmp
xchg
push
and
aas
sbb
add
nop
std
jns
test
adc
and
pop
outsb
xorb
lret
ret
or
xchg
push
jecxz
fcom
arpl
jecxz
cmp
mov
rcrl
inc
or
and
or
arpl
subl
aaa
dec
out
mov
pop
js
daa
inc
mov
mov
push
push
and
cmp
jle
sbb
xchg
xor
add
and
test
sbbb
dec
inc
push
sbb
and
dec
adc
jg,pt
lods
push
imul
add
mov
push
sarl
push
sub
jl
test
mov
enter
cmpsb
adc
insl
stos
jmp
testb
jmp
xchg
sbb
push
insl
lea
lret
imul
repnz
and
jnp
mov
fistpl
inc
inc
adc
dec
data16
xchg
cli
outsb
and
cmp
pop
pop
js
aam
mov
cmp
xchg
push
arpl
sub
jbe
cwtl
decb
jl
repz
pop
jl
jecxz
mov
popa
dec
sbb
jb
cltd
add
cltd
mov
cmp
jns
or
xor
xchg
dec
push
dec
add
rcll
xchg
inc
aas
pop
in
and
ficomps
out
lea
inc
js
clc
fs
sub
fwait
pop
jne
ds
pop
lods
dec
movsl
and
mov
aad
cwtl
add
lea
sub
jle
pop
dec
sti
jl
fs
ljmp
xchg
xchg
std
adc
push
or
add
outsb
xor
sbb
movl
clc
xchg
scas
xlat
inc
adc
out
and
xor
push
sub
or
mov
in
push
cmc
sub
jae
fiadds
stos
pop
sbb
movsb
jp
pusha
addr16
cwtl
or
push
test
ret
cmp
cld
xchg
mov
add
push
repnz
jno
jne
push
push
xchg
in
std
je
stos
push
jno
sub
leave
lret
clc
enter
and
pop
fistl
movsl
aas
cmp
std
dec
inc
shrl
lea
cmp
mov
or
jb
stos
cli
das
insl
pop
adc
movsb
fsubs
aam
jecxz
jbe
push
fldenv
dec
xor
push
jg
mov
clc
adc
xchg
jb
loope
dec
add
das
stos
out
cmp
mov
pop
js
jmp
jns
insl
mov
lea
aas
pop
stos
sub
inc
adc
mov
sbb
cltd
xchg
inc
jns
fldenv
or
fstp
jl
mov
test
sbb
das
loopne
in
ds
lahf
test
cli
push
fwait
mov
std
pop
mov
pop
mov
pushf
xor
mov
jge
push
in
fwait
aad
xor
iret
fisubrl
gs
imul
dec
pop
call
dec
movsb
jb
ds
dec
call
ficoms
inc
ja
mov
jo
addl
push
push
leave
scas
lods
test
adc
xchg
mov
loop
mov
fiadds
sbb
cwtl
add
inc
loope
fsubp
jne
sub
sub
pop
push
pop
lea
in
pop
mov
lret
clc
inc
xchg
and
sbb
negb
xlat
xchg
lahf
fsub
aas
mov
dec
popa
sbb
idivl
jb
idiv
push
clc
cmp
xor
aas
aas
jge
dec
push
and
incb
cmc
inc
pop
inc
pop
call
mov
in
stc
push
mov
dec
xchg
or
ds
and
dec
push
loop
stc
adc
nop
mov
call
push
mov
iret
mov
and
push
mov
sub
mov
rclb
lret
sbb
xchg
nop
add
repnz
jns
stos
into
enter
adc
sub
insl
hlt
xlat
sub
and
mov
scas
or
sbb
pop
push
mov
mov
pop
int3
fmul
xor
mov
cmp
popa
sti
push
xchg
aam
inc
xchg
loopne
lret
or
sbb
push
dec
mov
scas
xor
dec
jp
dec
sub
sub
aam
dec
and
cld
mov
dec
fdivr
xor
add
or
push
orps
pop
cld
stc
and
or
fs
push
repz
pusha
rcl
add
mov
scas
es
int3
sbb
push
mov
cmpsl
mov
inc
in
xor
inc
xchg
int3
int
idivb
inc
mov
nop
mov
cli
out
pop
je
int3
out
sub
xor
xor
adc
lahf
push
sbb
pop
sbb
and
out
push
mov
addr16
idivl
mov
mov
inc
fcmovne
jo
mov
xlat
push
icebp
push
fists
pop
outsl
jae
test
pop
cmpsb
or
sbb
test
lahf
jecxz
adc
mov
loopne
pop
mov
pop
aam
mov
mov
cmc
pop
rorb
xor
push
mov
jae
sub
rcr
xor
roll
mov
inc
pop
repz
or
sub
lcall
inc
add
mov
adc
sub
inc
gs
adcb
fsub
mov
test
clc
inc
ficoms
cmp
in
inc
cwtl
jnp
push
ljmp
xchg
loopne
stc
js
pushf
test
lds
xlat
popa
xchg
push
push
daa
fsubrl
iret
outsl
jae
arpl
mov
mov
and
loop
xchg
test
shll
lock
repz
lahf
mov
xchg
shrb
aam
popf
dec
push
inc
adc
push
lcall
out
pop
call
jg
cmp
jg
cmp
data16
stos
cmp
in
cmpsb
lods
xor
sbb
cmp
pusha
fmull
and
insb
insl
data16
arpl
sub
jl
popa
in
fadd
js
push
inc
fidivs
mov
inc
or
push
cld
flds
jecxz
xchg
jo
stos
insb
scas
push
orl
adc
sub
mov
and
sub
inc
mov
adc
outsb
bound
push
lret
sbb
xchg
push
aad
dec
jecxz
adc
or
ret
add
pushf
aam
lahf
jbe
mov
xchg
rcrb
sbb
test
lea
cmp
popf
mov
call
mov
data16
adc
jmp
test
call
cmp
push
dec
mov
xchg
leave
xor
mov
sub
das
ret
iret
dec
jb
xchg
sub
aaa
mov
out
or
mov
imul
inc
push
xchg
mov
hlt
adc
lods
loope
jmp
jl
adc
inc
je
out
insb
mov
and
and
pop
cmpsb
fmull
jecxz
mull
jmp
xor
cmpsl
xchg
jmp
mov
xor
ja
das
jle
insb
add
xor
mov
adc
das
lods
addb
xchg
stos
clc
push
xor
inc
and
xchg
xchg
sbb
add
sub
lcall
iret
and
sub
fisubrs
adc
outsb
in
jp
int3
cmp
lret
sbb
pop
jge
shrb
cmc
jge
into
adc
cmp
mov
movl
insb
gs
xchg
add
test
aas
push
fcoml
sbb
dec
sahf
or
or
iret
xor
ret
push
sub
sub
xor
aam
inc
insb
cmp
mov
fs
test
ret
leave
sti
in
fld
out
xchg
and
cmp
and
sahf
outsl
in
out
cmpsb
jmp
adc
mov
mov
inc
xor
out
push
push
scas
cmp
push
out
jae
and
mov
call
inc
jecxz
mov
sbb
jae
adc
and
out
pop
sbb
xchg
inc
cmp
test
out
lds
jp
subb
mov
popa
daa
push
inc
add
pop
xchg
arpl
iret
fstps
mov
aas
inc
in
inc
sub
sub
popa
sub
popa
push
rcr
pop
shll
xor
cmp
push
fsubl
sbbb
pop
repz
mov
mov
lret
pop
aad
shl
in
lret
ret
and
cmp
and
sub
inc
aam
pushf
jmp
ljmp
mov
jno
mov
add
orb
mov
and
jnp
fucomp
mov
push
mov
sub
pop
test
mov
out
dec
add
stos
sti
pop
inc
sbbb
dec
mov
push
cmpsl
sub
gs
inc
test
xchg
dec
jg
filds
pop
lods
ret
push
aad
push
mov
xchg
mov
fs
rolb
mov
hlt
pavgw
repz
pop
frstor
inc
xor
cmp
inc
pop
or
nop
loope
in
cmp
mov
mov
push
sub
loope
mov
fisubs
shl
ja
push
inc
jg
xchg
popa
daa
mov
sti
xor
add
add
sbb
xor
sbb
jae
out
inc
cltd
scas
in
sbb
push
shrb
push
push
cmp
sub
adc
inc
dec
loope
mov
mov
pop
imul
pop
popa
xchg
mov
mov
cmp
imul
outsb
aad
xor
in
push
cmpsl
xlat
or
add
call
aas
notb
cli
dec
cs
lds
push
rorl
or
cmp
cmp
inc
inc
fbld
mov
dec
add
push
xchg
jmp
leave
scas
mov
sti
lods
and
and
mov
push
or
or
adcl
pop
push
rcll
push
xor
iret
sub
push
test
sbb
pop
arpl
cmc
cwtl
cwtl
nop
cltd
pusha
aad
jno
lahf
push
inc
insl
xchg
outsl
mov
xor
jmp
jl
xchg
int
cmp
and
dec
mov
outsb
xchg
push
stc
and
push
lret
and
adc
rorb
repz
dec
fistl
loope
shlb
js
push
out
push
push
xchg
scas
ljmp
test
test
mov
movsb
push
repz
stos
inc
push
ljmp
sahf
mov
push
cmp
ljmp
jae
xor
pop
arpl
push
add
xor
int
inc
inc
imul
mov
popa
shrb
push
xchg
pushf
test
test
adc
push
in
subl
xchg
fldt
sub
ds
pop
mov
rcrl
or
cmp
or
mov
cltd
cmp
data16
ror
sbb
pop
lods
xchg
and
imul
mov
push
adcb
vpunpcklwd
push
dec
loope
stos
out
mov
push
xlat
fidivrs
and
xchg
xor
outsb
stos
mov
lock
and
xlat
adcb
fs
inc
pop
sub
aaa
or
jno
imul
add
pusha
outsl
lcall
enter
pop
aam
dec
cmp
mov
push
hlt
sbb
push
loopne
fs
add
cmp
xchg
inc
lret
jbe
cmp
adc
xor
hlt
orb
test
sub
imul
lods
jle
inc
fcoml
dec
xchg
xchg
mov
mov
jnp
out
jne
and
jae
stos
push
es
fistl
cs
xor
shr
and
cwtl
cltd
push
push
cmpsl
es
xchg
mov
or
out
mov
in
jo
mov
mov
lods
ds
and
ds
xor
idivb
mov
pop
push
sbb
sub
pushl
add
push
lcall
pop
popa
mov
into
sbb
arpl
jle
test
sbb
inc
popf
mov
movsb
ds
daa
xor
mov
jae
inc
addr16
sbb
mov
pushf
pushf
out
imul
stos
outsl
das
pop
cltd
ja
pop
daa
ret
test
lcall
es
and
rcr
cmpb
test
push
leave
sbb
cmpsl
inc
cltd
xchg
add
jb
sub
push
xor
pop
mov
js
cwtl
mov
inc
mov
cmp
stc
cwtl
orb
mov
push
popa
mov
pop
sub
fucomp
xlat
out
aaa
dec
push
enter
enter
mov
xchg
daa
outsl
xchg
je
int
lods
dec
jg
inc
mov
mov
push
sbb
loop
mov
ror
iret
call
jnp
pop
mov
out
jmp
adc
inc
push
out
sub
sbb
mov
popa
mov
push
inc
pop
int3
xchg
stos
rclb
and
in
lcall
xchg
shl
xchg
inc
test
int
fsubs
stc
pop
mov
sahf
xchg
in
lods
push
sbb
in
lock
popa
loope
fisubl
push
push
sub
fwait
imul
cmp
popf
inc
out
jecxz
and
dec
sbb
fiaddl
pop
fbld
mov
clc
dec
push
xchg
fs
add
xorl
and
incb
jecxz
push
cwtl
aad
lock
jle
xor
inc
push
xor
or
cmp
mov
movsb
or
push
jne
jno
adc
mov
fisubrs
inc
loop
push
pop
or
jmp
sub
js
jg
sbb
cmp
mov
dec
aaa
std
dec
cmp
shl
or
sub
or
fmulp
jbe
jae
xor
aaa
rcrl
scas
dec
jns
sub
push
and
popa
call
xchg
das
push
cwtl
xor
mov
mov
movsb
fldt
sahf
dec
hlt
daa
push
jmp
push
adc
cld
xchg
repnz
out
stos
mov
pop
inc
mov
fstpl
xor
pop
lea
vpcmpeqd
sub
in
nop
push
jo
sub
mov
imul
aas
xchg
push
jno
mov
fidivrl
mov
pop
das
pushf
mov
adc
mov
jmp
cmpsl
ret
fidivrl
lock
cwtl
cmpsb
repnz
loop
sahf
popa
xchg
xor
test
sbb
dec
cmp
je
pop
cmp
inc
in
lock
js
mov
jl
andb
cld
xchg
adc
push
and
push
es
add
call
push
aaa
gs
mov
jg
hlt
push
pop
in
icebp
sub
dec
adc
sub
add
stos
and
mov
xor
data16
xor
shrb
lahf
repz
out
mov
imul
in
loopne
fldz
adc
mov
inc
mov
pop
xor
inc
out
add
push
dec
push
xchg
xor
test
fiadds
js
xchg
jo
or
inc
add
cmp
addr16
mov
jbe
cmc
add
mov
adc
xor
ds
mov
push
aam
xor
sub
ret
stos
or
popa
sbb
pop
lret
pop
inc
inc
fsubrs
sub
xorl
jl
repz
enter
sbb
push
sub
ret
push
dec
and
pmaddwd
ja
fidivs
in
xchg
dec
mov
dec
test
lahf
xor
sahf
cmpsb
inc
ret
and
xor
adc
shr
loopne
iret
call
dec
stos
pop
fs
pop
or
xor
shrb
inc
xorb
out
leave
adc
aam
test
jnp
loopne
js
sub
jecxz
sub
dec
dec
int3
rcl
test
inc
sbb
aas
imul
imul
insl
xor
enter
movsb
ret
mov
test
xchg
xchg
popa
xchg
adc
sbb
dec
dec
jg
pop
mov
or
push
and
fstpt
sub
addb
sbb
jbe
fidivrs
addl
sub
cmp
fisubs
sub
adc
in
xchg
jns
adc
adc
xchg
mov
dec
call
enter
dec
mov
inc
cmp
popa
pop
inc
cmp
pop
adc
mov
add
dec
outsb
jo
lds
add
ret
out
loope
mov
mov
cltd
loopne
in
scas
cmp
cmp
stos
imul
bound
dec
mov
imul
imul
scas
cwtl
ret
sbb
divl
aad
leave
fistpll
insb
sbb
add
sahf
sti
lret
into
inc
mov
out
and
mov
sub
ds
fs
xchg
xor
or
xchg
jge
pop
cmp
into
xchg
jno
mov
push
iret
movsl
xchg
iret
shll
and
push
scas
fdivs
mov
ja
mov
push
mov
mov
lds
test
push
aaa
sub
mov
lea
push
dec
sarl
pmovmskb
cwtl
cmp
addr16
out
mov
xchg
inc
fs
outsl
jl
mov
js
mov
popf
mov
sbb
repnz
xlat
pop
out
mov
jae
cmpsb
sub
jmp
insl
xor
ror
lea
add
int3
adc
and
int
addb
push
loop
sarb
jnp
daa
out
mov
pop
xor
xchg
loope
ret
cmpsb
test
subl
push
rcl
add
mov
scas
test
fisubrl
sti
xchg
mov
fldl
rorb
push
or
popf
adc
add
mov
jnp
sbb
and
xor
xor
dec
hlt
mov
and
pop
adc
mov
sbb
xchg
pop
sbbb
rolb
pop
mov
xchg
push
pop
vpmaxub
jecxz
sarb
inc
dec
outsb
adc
ja
adc
adc
cltd
and
sbb
xor
out
call
fs
insl
out
jmp
sbb
nop
mov
popa
clc
jge
xor
xor
pop
inc
in
loop
into
and
adc
mov
fwait
push
outsl
dec
stc
ja
cwtl
ja
mov
pop
fisubs
xor
or
stos
fs
jnp
ficompl
pop
mov
rol
stos
pop
push
xor
xchg
sbb
jl
mov
cld
pop
jns
pop
lret
push
out
call
cwtl
mov
into
add
or
mov
mov
or
adc
insl
iret
sbb
inc
out
shrl
sub
sub
call
clc
sbb
add
std
adc
push
adc
inc
xchg
dec
pop
mov
fdivs
call
jno
icebp
and
adc
or
stos
cmp
jns
mov
sarl
mov
lods
shll
ret
jae
pop
leave
cmp
mov
into
mov
fstpt
aad
lcall
outsb
sbb
nop
pop
call
sbb
sub
adc
notl
ret
jb
sbb
aad
mov
negb
lahf
xor
mov
lret
fldcw
add
pop
inc
xchg
ret
test
push
fs
lret
movsl
popa
sub
pop
les
push
pop
xchg
std
je
pop
lret
out
mov
jmp
les
jo
dec
or
jp
jae
jo
sub
jae
cmp
adcb
movsb
jl
jns
mov
mov
mov
jg
mov
pop
clc
in
pop
xchg
int
insl
mov
hlt
pop
loop
jle
adc
mov
fistpll
jp
adc
scas
imul
xchg
dec
das
sbb
sub
and
inc
in
into
aas
hlt
stc
in
sbb
add
movmskps
fbstp
in
imul
add
test
push
mov
mov
mov
add
daa
lock
faddl
sbb
insb
dec
jbe
out
mov
cs
cmp
cmpsl
cmp
call
sub
jp
push
mov
jb
mov
fs
inc
fdivrp
sbbl
inc
ss
push
pop
sub
push
gs
push
mov
xchg
adc
cli
or
and
sbb
mov
add
je
and
test
and
jecxz
sets
mov
sti
or
push
out
mov
jns
jne
dec
xlat
pop
and
sbb
aad
mov
push
shl
aad
shl
mov
int
jmp
dec
mov
dec
fcomps
add
in
sub
mov
xchg
adc
xor
push
adc
loope
cmp
loopne
pop
cmp
dec
mov
pushf
xchg
sub
push
pop
outsb
xchg
dec
repnz
pusha
mov
out
push
mov
sub
fwait
add
and
push
pop
dec
enter
push
mov
cld
out
cld
xchg
shrb
jle
test
adc
int
aad
sarl
insb
sbb
push
adc
jne
mov
jecxz
jno
adc
jnp
mov
cmpsb
push
nop
xor
mov
sub
push
xor
sub
inc
insb
int3
lods
xor
test
push
sahf
xchg
lcall
test
out
clc
pop
or
xor
fists
mov
into
mov
pop
sbb
sub
pop
test
xchg
jle
mov
sub
xor
sbb
hlt
sbb
out
les
insl
dec
in
gs
fwait
xchg
jne
push
pop
xchg
push
inc
add
push
test
mov
push
mov
pop
ds
xchg
ja
gs
push
jg
and
ss
cwtl
dec
dec
dec
outsb
jns
dec
jo
test
imul
pop
out
and
xchg
das
and
imul
lods
mov
inc
fistpll
testl
push
out
push
insl
jo
rcrl
cli
scas
es
sbb
and
cmpsl
jnp
mov
dec
loopne
imul
orb
in
mov
or
xchg
lahf
mov
add
xchg
add
aad
push
push
jle
xor
push
push
cmp
sub
std
int
push
dec
stc
push
adc
push
mov
or
xchg
popf
pushf
dec
dec
incb
nop
or
push
in
cmpsl
rcll
add
sti
xor
mov
push
aas
mov
into
repz
aam
popf
pop
and
cs
add
adc
pop
inc
nop
mov
lods
jmp
xlat
adc
or
fnstsw
fs
xchg
popf
cmp
cmp
dec
mov
jmp
push
dec
mov
movsl
ficompl
xor
inc
sbb
movsb
jb
pusha
dec
inc
sub
and
jecxz
push
ret
mov
push
lock
adc
cs
xorl
cs
jge
subb
aas
sub
jmp
or
call
jae
rorl
cld
icebp
pop
add
fstpt
sbb
jo
add
das
outsb
fadds
jae
xor
mov
mov
scas
push
shrb
xchg
push
fsubrl
lcall
mov
sahf
cltd
fldl
fists
sahf
movsb
mov
add
jo
outsb
dec
iret
test
mov
inc
aad
popf
mov
pop
pop
or
cmp
push
dec
and
pop
clc
out
jae
sahf
test
loop
call
sub
mov
cmc
xchg
push
or
xor
sbb
mov
pop
outsl
mov
rolb
divb
mov
cmp
addr16
test
hlt
inc
loopne
mov
pusha
in
stos
cwtl
lea
pusha
les
and
ds
jle
mov
pop
xchg
xorb
pushf
ret
push
jge
xor
inc
dec
dec
xchg
outsb
xchg
push
js
xchg
add
imul
rorb
jl
dec
shl
cmp
adc
mov
and
mov
and
outsl
pop
pop
jb
sub
mov
sbb
das
cmp
loop
test
xchg
shlb
daa
lods
lea
cs
mov
call
push
fadds
mov
outsl
xchg
iret
popa
sbbb
push
jne
dec
out
dec
sti
mov
enter
or
dec
cmp
xor
inc
cld
push
insb
add
xchg
dec
mov
push
xor
outsb
adc
inc
push
sbb
jg
cmp
in
inc
or
pushl
fwait
inc
inc
mov
jl
repz
sti
int
dec
jnp
sbb
add
das
rolb
jbe
xlat
inc
scas
std
repz
push
popf
and
push
std
jmp
cmpsb
or
sahf
mov
test
lahf
xor
lret
sbb
arpl
hlt
lds
loope
in
xor
adc
push
and
enter
je
jno
test
nop
in
jb
push
fidivs
popf
jecxz
out
out
mov
cmp
aaa
pusha
outsl
shrb
in
sti
mov
cmp
sbb
mov
or
mov
shll
xor
in
mov
xchg
insl
jl
mov
or
dec
adc
lret
push
mov
imulb
jno
in
std
out
cmpsb
bsr
push
xchg
loop
lret
mov
jne
mov
bound
lods
push
test
in
ret
fcmovnbe
loopne
in
and
xor
push
push
rcr
loope
sub
mov
bound
enter
shrl
cli
in
sub
jnp
lods
pop
je
pop
out
jge
or
adc
push
in
fcompl
xchg
fst
inc
lahf
xchg
pop
enter
jo
iret
bound
mov
cmpsb
movsl
fdivp
xchg
scas
aas
rcrl
push
lahf
jnp
shr
insl
outsl
add
repz
inc
lds
sub
lret
push
popf
cmp
lock
and
test
jo
inc
mov
push
sub
or
es
ret
idivb
rep
sbb
adc
cmp
inc
les
mov
int3
sahf
push
add
dec
xor
mov
pop
orb
xchg
inc
inc
sbb
or
inc
loopne
lret
shll
push
sbb
dec
jmp
out
sub
pop
dec
stos
das
ljmp
mov
aad
pop
jae
ret
mov
fstl
test
pop
mov
imul
in
mov
xor
sbb
cmpb
sar
test
sbb
decb
addr16
int3
into
cmp
sbb
in
test
cmp
push
mov
add
nopl
bound
test
out
pop
lcall
mov
mov
lret
add
ret
call
imul
mov
and
movsb
mov
mov
arpl
loop
lods
mov
sub
dec
dec
nop
pusha
jnp
adc
dec
mov
mov
cmp
js
cli
dec
cmp
es
popf
dec
outsb
popa
hlt
inc
pop
stc
bound
shll
push
jle
pmuludq
mov
xor
lahf
orb
in
std
ds
movsl
adc
lahf
outsl
mov
push
mov
and
mov
and
cwtl
push
or
lods
mov
sbb
push
rcrb
push
or
and
jmp
jo
adc
stc
and
out
aad
push
jp
xlat
daa
cmc
lods
jecxz
daa
cmp
pusha
stc
adc
repz
or
repnz
leave
imul
or
push
cltd
jae
in
fs
cwtl
dec
xchg
imul
loope
movsl
fwait
daa
jg,pt
inc
shlb
xlat
stos
aad
cmp
jp
and
mov
mov
sbb
jne
scas
outsb
test
test
loop
inc
std
mov
mov
or
add
aaa
scas
in
dec
addr16
cmp
int3
fmul
adc
aad
daa
mov
cltd
add
add
insb
dec
outsb
enter
push
sti
add
mov
ja
cmc
push
and
pop
in
sar
mov
sbb
push
dec
jp
sub
sti
aaa
repz
pusha
pop
popf
sub
and
push
sbb
fisubrs
push
xor
cmp
mov
shlb
dec
dec
jmp
mov
pop
pushf
shl
jp
imul
stos
mov
dec
jmp
lock
push
seto
jp
jo
test
inc
xchg
stos
ret
push
fsts
out
push
mov
lahf
xor
icebp
ficomps
vshufps
mov
push
pushf
sub
dec
mov
pusha
cltd
lds
lods
test
sbb
jl
cmp
pop
inc
sub
mov
add
or
lds
jnp
adc
cmp
idiv
mov
jb
int3
cld
mov
or
jo
jbe
dec
scas
sbb
outsl
stc
adc
pusha
rorb
xchg
inc
cmpsl
pop
fwait
mov
inc
inc
call
adc
dec
sub
dec
call
sbb
and
aas
lods
push
dec
push
push
cmp
int3
scas
mov
pop
ja
add
daa
cmp
test
or
out
movsb
mov
aas
inc
xor
add
ret
pop
push
sub
push
mov
jp
fsub
popf
fs
sub
scas
jnp
leave
call
std
mov
mov
lahf
xchg
jns
adc
ficomps
aaa
setp
and
imul
or
and
dec
add
mov
cli
sub
sarl
xor
adc
sub
xchg
lret
loopne
xchg
movsl
icebp
imul
push
bound
enter
cmp
pop
aad
push
jl
jae
xor
add
pop
outsb
inc
jb
nop
out
mov
pop
sti
mov
sub
adc
in
scas
fnstenv
dec
push
xchg
sub
mov
or
hlt
mov
add
pop
sub
jg
mov
ljmp
fimuls
cmp
out
stos
je
cwtl
test
xchg
cli
inc
fidivl
mov
cmp
pop
in
jmp
xor
xor
xor
mov
fstl
pushl
lods
push
fcmovnbe
out
mov
es
cmp
xchg
mov
xor
sbb
pop
jb
xor
sub
stc
cmp
in
mov
insl
add
test
dec
gs
fisttpll
jnp
shl
cwtl
pop
fs
idiv
pop
stos
push
mov
dec
mov
push
fildl
popf
mov
jl,pn
ds
mov
rcl
aad
loopne
pop
nop
push
int3
stos
pop
adc
cmp
ja
pop
js
mov
or
popf
mov
pusha
out
fistpll
adc
shlb
sti
sbbl
dec
push
mov
lahf
xor
cld
ss
pushf
or
cmp
xor
jo
outsb
mov
sub
call
lock
mov
lahf
inc
aam
fstps
push
pop
into
ljmp
or
loope
dec
maskmovq
mull
rclb
inc
test
mov
rcr
sub
mov
les
or
xchg
out
jae
mov
pop
xchg
xchg
adc
gs
frstor
and
mov
jae
xchg
aam
mov
and
clc
inc
push
loopne
and
dec
mov
movsb
xchg
cmp
out
lods
das
jp
mov
jmp
pop
mov
int3
pop
mov
fidivs
ljmp
clc
sbb
adc
pop
cmp
adc
adc
sbb
push
pop
std
cwtl
lcall
add
subl
cld
xchg
cmp
in
adc
pop
cs
add
jae
out
jecxz
out
int
jge
aad
cmc
adc
inc
xrelease
iret
mov
repz
xchg
mov
pop
int3
mov
xlat
and
mov
stos
popa
push
jle
les
and
adc
cmpl
mov
pop
ror
jp
and
xor
rolb
popf
jge
mov
repz
clc
and
cltd
icebp
movsb
and
addr16
jg
inc
fmul
out
addl
mov
shr
add
int
enter
add
sub
ja
cmc
aam
cmc
pop
sbb
jmp
jle
out
vmovdqu
popf
sbb
test
fmuls
pop
insb
dec
cmp
fisubrl
shll
dec
xchg
xchg
sub
pop
movsb
push
fnstcw
fwait
stc
dec
sub
and
jae
sahf
testl
add
add
xor
mov
push
test
or
inc
inc
pop
mov
mov
add
and
sub
and
xchg
cwtl
aad
clc
sub
aad
aad
adc
mov
cs
fldenv
cmp
xchg
insl
push
dec
gs
sarb
into
stos
push
fs
aad
punpckhwd
inc
jne
and
sbb
sub
jl
decl
add
lock
push
fwait
cmp
push
data16
iret
fs
push
addb
mov
dec
dec
sub
mov
sub
mov
les
pop
jmp
and
jo
sub
fld
push
mov
jl
pop
es
insb
lret
nop
cs
add
inc
jb
insb
mov
mov
xchg
dec
dec
xchg
cmpsb
pop
insl
pop
inc
js
jecxz
mov
es
cmp
dec
dec
leave
cwtl
sarb
mov
lock
push
fnstcw
adcb
pop
push
mov
pop
and
push
js
or
fdivs
loope
xor
inc
out
int3
fldenv
sbb
subl
hlt
in
in
mov
jns
std
lea
xor
pop
mov
xor
andl
adc
mov
addr16
mov
xchg
inc
clc
lock
push
pop
stc
pop
mov
negl
pushf
movsb
push
or
das
dec
mov
bound
cmpsl
sarb
cmp
adc
iret
out
sti
jo
mov
jge
fisttpl
into
adc
bound
nop
sub
fcompl
mov
xor
push
ss
pop
in
xchg
push
push
and
pop
adc
jbe
cmp
lea
and
inc
mov
out
xor
mov
cmp
mov
mov
aas
or
incl
xchg
insl
lock
dec
dec
je
fsubl
mov
cmp
jge
and
popf
je
flds
inc
push
icebp
repnz
jo
fadd
enter
decl
adc
xchg
cli
xchg
xor
icebp
xchg
xor
rol
add
mov
into
stc
lods
jbe
mov
in
adc
pop
jmp
iret
addr16
cmpsl
mov
cltd
cltd
mov
pop
repnz
mov
or
pushf
jg
mov
shrl
ljmp
jp
frstor
arpl
mov
repz
adc
mov
fbstp
in
fsts
and
fcoml
pxor
add
xchg
movsb
mov
out
ja
jp
ud0
scas
mov
jmp
fmuls
fisubs
adc
push
out
movsl
arpl
mov
mov
dec
imul
xchg
sub
aam
xchg
aas
std
mov
stos
add
mov
test
lret
cmc
mov
cld
jae
cs
sarb
and
mov
and
push
fs
insl
mov
dec
pop
outsl
push
mov
push
les
mov
push
dec
add
fisttpl
call
mov
sub
mov
dec
sub
aas
inc
inc
mov
mov
jmp
dec
xchg
mov
jg
je
hlt
lahf
add
mov
xchg
in
and
lock
push
out
insl
sarl
incl
dec
add
lea
xchg
lock
cli
adc
sub
es
add
jl
lods
lock
loopne
in
insl
adc
pop
mov
or
sbb
jae
ss
sarb
leave
sbb
dec
std
sbb
inc
push
std
aaa
test
push
push
cmpsb
or
xchg
cmp
jle
or
out
dec
mov
xor
cmpsb
adc
add
subb
xor
dec
decl
dec
test
jecxz
das
cli
lcall
lcall
ja
add
dec
push
or
and
or
sub
movsl
sti
mov
push
jns
fucomip
mov
cmpsl
out
movsl
outsl
xchg
mov
mov
xchg
fidivrl
xchg
or
adc
adc
pop
divb
dec
insb
addr16
movsl
aaa
cld
pop
mov
push
dec
cltd
aad
sbb
outsl
xchg
jle
sub
popf
adc
adc
imul
mov
pop
push
ficompl
jbe
call
mov
pop
ja
mov
out
pop
sub
xor
insl
lret
mov
dec
iret
lahf
dec
movsl
or
adc
mov
mov
sahf
push
fs
arpl
int
xchg
fisubl
and
ja
popf
xor
aad
push
call
mov
jmp
mov
mov
push
or
jne
adc
sub
xchg
xchg
stc
sub
xchg
sbb
ljmp
mov
cwtl
inc
out
mov
stc
cmp
test
jg
jecxz
sub
add
dec
mov
cltd
jns
dec
imulb
cli
or
and
movsb
or
mov
mov
test
roll
mull
ds
lds
cld
movsl
and
addr16
pop
mov
popf
cwtl
sbb
pop
dec
mov
hlt
sub
adc
pop
mov
lds
insb
hlt
pop
dec
lods
int
mov
pop
mov
or
xor
shr
jno
cmc
stos
or
dec
js
cmp
cli
xchg
inc
inc
mov
jo
jmp
lods
dec
es
clc
mov
pop
and
test
decl
xor
aaa
push
test
movsl
cmpl
repnz
notb
and
pop
sbb
adc
inc
xchg
push
mov
cmc
hlt
daa
fxch
mov
pop
adc
iret
bound
lods
shll
adc
lods
mov
jno
arpl
pop
std
add
and
jge
jne
push
rolb
movsl
adc
movzwl
mov
or
mov
enter
rol
inc
pop
mov
gs
jb
pop
adcl
pusha
shlb
xchg
repz
sbb
fbld
fdivs
jmp
ret
outsl
mov
roll
xor
stos
test
adc
inc
xor
inc
add
mov
or
jecxz
ss
pop
xchg
aad
pop
add
movsb
out
arpl
dec
daa
notl
fcmovnu
inc
fst
jle
test
mov
jecxz
sub
popf
sub
xchg
lahf
adc
bound
scas
cmp
cmp
xor
in
add
call
sub
mov
lds
or
out
fisubl
ss
jnp
dec
sub
aaa
ss
mov
call
in
fcompl
ss
mov
dec
and
jle
add
movsb
jbe
dec
jle
and
add
push
test
jl
lods
add
lock
add
adc
xchg
sub
inc
push
xor
testl
sti
pop
pop
sarb
or
mov
xor
pop
sbb
popf
inc
ljmp
pop
insb
lcall
push
aas
into
outsb
adc
add
mov
and
cli
pop
jmp
jmp
popa
sbb
jns
dec
xor
xor
jnp
sar
mov
mov
mov
stos
pop
lods
xor
inc
add
shlb
adc
sbb
xchg
fs
negl
jae
stc
fsubr
out
lock
outsl
clc
mov
xchg
jg
push
xchg
imul
mov
mov
push
imul
add
mov
adc
in
jb
or
mov
popf
and
sbb
out
jne
cwtl
xor
mov
stc
pusha
mov
and
scas
cmp
xchg
ret
cld
and
popf
push
test
mov
out
inc
cmp
mov
pusha
xchg
mulb
andb
cwtl
les
arpl
adc
jmp
je
mov
cmpsl
popf
mov
mov
imul
leave
push
add
fcmovbe
out
stos
and
add
outsb
pop
aad
std
add
loope
mov
mov
pop
push
pop
loope
jmp
or
shll
rcr
jnp
xchg
idivb
loope
cli
decl
and
jg
fistpl
pushf
or
pop
mov
pop
jno
cld
and
jl
jmp
scas
or
std
dec
cld
push
and
sub
push
or
cwtl
fmul
adc
ss
aas
lret
orl
and
jne
fstpt
shr
and
lods
ds
sbb
xor
lods
jns
jg
pop
mov
xchg
cmp
stos
sbb
negl
xchg
mov
cmp
xchg
mov
push
aas
mov
push
mov
pop
sub
push
aas
repnz
jg
jo
mov
stos
jne
inc
fmul
stc
inc
xchg
mov
sahf
dec
dec
and
stos
inc
fsubp
add
popa
sbb
sbb
add
mov
xor
mov
xlat
sbb
sub
sub
repz
out
lods
mov
mov
sarb
pop
fbld
push
mov
sbb
xor
lahf
dec
cmp
js
hlt
call
push
sub
mov
das
mov
testl
movsb
pop
cmp
fcmovne
repnz
mov
push
sti
lock
fucomp
mov
dec
sub
pop
sub
xor
push
dec
std
xor
or
or
pop
out
loop
icebp
xchg
out
scas
scas
cmp
cmp
inc
lods
popf
sbb
mov
push
xchg
push
mov
cmp
outsl
ljmp
sub
and
in
rorl
cmp
test
les
adc
add
outsb
inc
mov
dec
into
cmc
or
jmp
mov
cld
push
icebp
movsl
in
stos
clc
std
stos
inc
sbb
ds
sub
scas
cmpsl
dec
repz
pop
out
push
push
lods
xor
xor
scas
sub
movsl
fsubs
cmc
push
mov
xor
fildll
repz
dec
xor
dec
jle
dec
adcb
add
jo
or
sbb
dec
ds
div
ss
lods
mov
mov
cltd
imul
js
dec
cmp
addr16
testb
fisttpl
xchg
pushf
sti
leave
xor
test
mov
sub
out
adcb
jge
cmc
test
int
add
jl
in
arpl
aas
iret
push
jne
xchg
sbb
sub
fmul
or
mov
dec
and
sbb
jl
adc
mov
dec
add
sub
out
test
pop
xor
dec
sub
add
push
int
add
mov
pop
pop
faddl
mov
cmp
sbb
xor
xor
lahf
imul
mov
xchg
call
into
pop
mov
and
cmp
add
fidivrs
sbb
in
mov
shrl
jge
xchg
rorb
adc
lcall
fstps
add
lock
mov
stc
fdiv
cmc
decb
pop
std
xor
mov
xor
cmc
std
push
dec
push
fndisi(8087
mov
inc
lret
testb
int
loop
outsl
mov
pop
fisubrl
je
test
inc
lahf
jb
sub
fmuls
movb
and
loope
sub
sbb
sti
or
push
stos
or
movsb
mov
cltd
nop
inc
es
jo
popf
push
ret
fwait
bound
mov
mov
xlat
push
fistpll
adc
loop
or
test
mov
cmp
jae
cmpsl
sahf
jb
and
jae
pop
mov
mov
xchg
test
ds
out
cmpsl
jb
stos
scas
adc
cmpsb
or
sbb
push
stc
aaa
cmpsb
in
jno
mov
hlt
mov
inc
mov
scas
jmp
punpcklwd
ret
repz
xor
jnp
aas
loopne
ljmp
xor
repz
mov
mov
cli
scas
xchg
dec
xchg
xor
add
aam
sub
popf
in
inc
push
in
fwait
shlb
int
flds
rcl
push
aaa
iret
out
loope
cmp
xchg
ljmp
mov
xchg
call
xchg
sbb
test
jge
in
pop
pushf
outsl
faddl
adc
aas
push
cmp
dec
xchg
sbb
jecxz
rolb
in
ja
sub
ret
cmp
das
push
jecxz
mov
xor
mov
pop
dec
stos
lret
adc
sahf
xchg
out
jnp
std
and
cmp
jo
xlat
subl
push
push
sbb
inc
test
in
pop
aaa
adc
or
push
jbe
inc
add
xor
pushf
xchg
inc
hlt
ljmp
imul
outsl
rclb
and
push
cmp
test
sbb
les
out
es
push
add
mov
pop
xchg
mov
cs
mov
addl
in
and
mov
cmp
test
jbe
sub
and
enter
sub
jp
jmp
adc
push
adc
xor
xchg
test
push
repnz
popf
mov
aad
mov
xchg
dec
mov
loopne
mov
shlb
enter
mov
mov
cmc
out
xchg
inc
mov
pop
in
push
jp
cmp
int
inc
pusha
push
test
mov
add
rcrl
pop
xchg
scas
hlt
movsb
cmpsb
loopne
pop
adc
and
cmpsb
add
out
daa
enter
lret
cmp
jbe
mov
push
jle
aas
push
in
jns
popa
js
sbb
int3
int3
push
test
sti
and
add
daa
bound
mov
mov
adc
push
jp
dec
into
rolb
sbb
inc
inc
aas
lret
pop
pop
or
pusha
cmp
mov
mov
push
sub
sbb
in
test
hlt
jns
daa
sub
push
mov
ja
mov
imul
mov
lods
sub
scas
dec
pop
fcomi
sub
ret
mov
push
push
lahf
adc
jg
push
push
add
popa
popa
ficoms
nop
jp
mov
mov
lahf
add
test
and
jge
and
push
lds
mov
inc
mov
or
arpl
cmp
and
pop
push
jg
gs
sti
outsl
mov
outsl
xchg
hlt
mov
cmpsl
in
movsl
jb
dec
in
dec
insb
cmpsb
fsubrl
sub
loopne
jp
lock
push
jns
and
and
dec
or
cwtl
rorl
aam
sahf
notl
jl
sub
imul
push
push
mov
orb
ja
cmc
lods
cmp
inc
lock
push
mov
dec
jle
les
jecxz
jnp
cmp
dec
ja
add
jne
pop
mov
int3
push
orl
mov
jne
dec
adc
out
inc
jne
mov
jns
cwtl
and
mov
adc
fldenv
adc
fs
sarl
adc
decl
loopne
jle
mov
aas
clc
testl
lea
mov
push
pop
inc
mov
mov
das
lret
in
insl
popf
add
mov
sahf
pop
adc
leave
adc
dec
stos
add
mov
test
fldenv
mov
xchg
jle
mov
push
lret
aas
scas
xor
mov
mov
movsl
sbb
mov
aad
xlat
jns
ja
inc
xor
mov
std
jg,pt
add
adc
pop
pusha
in
sbb
popf
add
mov
ljmp
ss
mov
xchg
movsb
lods
fidivrs
lds
nop
jae
out
jne
xchg
dec
notl
fcomps
jg
rcr
jno
mov
sti
popf
int3
cmc
out
call
dec
out
jo
xchg
cltd
cltd
inc
ret
sbb
mov
sbb
jno
push
js
aad
in
or
mov
xlat
addb
push
lcall
mov
cmp
xor
add
or
push
jae
or
jae
inc
xchg
or
pop
jle
pop
mov
add
popa
scas
call
sub
in
rcrb
andb
divl
sub
push
mov
pop
fcoml
mov
xor
dec
fcomip
jns
pop
pushf
add
inc
rcl
sub
insl
ret
jae
mov
sub
xchg
push
loopne
and
sar
xor
in
jge
popa
xor
add
pop
imul
xchg
xchg
jae
adc
push
icebp
sbb
adc
and
ljmp
loop
jno
jl
pop
xlat
ficomps
and
in
pusha
pop
js
mov
xor
dec
sti
divl
mov
fiaddl
cmc
mov
push
test
pop
out
xor
lret
xor
mov
adc
adc
xchg
ret
daa
inc
pushf
cmpsl
sub
addr16
je
call
int
inc
call
sub
jae
push
jecxz
rorb
dec
adc
xchg
data16
arpl
pushf
ficoml
xor
les
mov
idivb
push
lock
aas
ja,pn
cmpsl
les
out
lock
iret
into
xchg
dec
cmp
mov
push
imul
cmpsb
and
addl
sahf
adc
ret
pop
mov
ss
mov
lods
sub
fbstp
xchg
scas
adc
movb
mov
dec
jge
iret
imul
mov
mov
pop
or
push
mov
fldenv
adc
xlat
scas
or
sub
stc
ret
pop
ja
adc
add
insl
sbb
fwait
aaa
pop
mov
popa
ss
cmp
mov
pop
cld
and
insl
lods
and
add
imul
cmp
shlb
mov
inc
sti
add
or
in
xchg
sbb
mov
cmp
out
add
popa
jne
fs
leavew
or
aam
xchg
popa
test
js
xchg
push
insb
lock
inc
xor
mov
mov
mov
xchg
mov
into
and
pop
inc
jnp
bswap
mov
fimull
xchg
outsb
mov
mov
sbb
or
jns
hlt
cmp
lcall
pop
mov
mov
mov
imul
ljmp
aam
sub
imul
dec
inc
test
dec
dec
push
ret
push
lods
or
xor
push
xor
pop
push
fbld
fldt
mov
mov
push
nop
jns
test
mov
js
fmull
pop
dec
adc
add
mov
and
inc
movsb
xchg
mov
sahf
nop
pop
jge
push
lret
push
xchg
fcmovne
aad
pop
or
es
dec
cs
mov
and
cmp
movsb
adc
nop
lcall
jns
jmp
fcomps
cmp
xor
pop
pop
inc
sub
jbe
xchg
pop
xchg
imul
insb
int3
punpckhdq
call
ficomps
jnp
pusha
sbb
and
aas
push
pop
adc
fldz
pop
mov
xor
call
into
es
ficompl
mov
mov
lcall
pop
adc
sub
sbb
data16
inc
dec
in
icebp
adc
dec
cwtl
fmull
sarl
fwait
test
sbb
scas
pushf
add
and
insl
out
xchg
jmp
inc
pusha
rep
pop
cmp
or
cwtl
cmp
adc
dec
rol
mov
clc
inc
mov
adc
out
adc
mov
mov
loop
ret
int3
js
inc
pusha
xchg
outsl
sbb
repz
jecxz
push
or
iret
inc
in
addr16
dec
xchg
jl
sub
mov
or
mov
dec
mov
idivb
cmp
or
cmp
pop
jno
mov
fisubs
lcall
bnd
dec
incl
adcl
bound
sub
mov
aaa
ja
add
aaa
test
xor
sub
in
xor
adc
xor
sbb
dec
dec
stos
mov
test
test
sub
test
negb
clc
jg
mov
mov
xchg
cmp
imul
test
hlt
out
test
pop
sub
iret
xor
dec
mov
or
dec
mov
daa
xor
add
inc
dec
sub
pop
xor
repnz
in
packssdw
pop
lret
je
push
stos
push
xchg
pop
pop
mov
mov
or
jo
sub
movsl
daa
ljmp
dec
pop
cmp
add
xchg
jbe
xchg
sahf
or
xchg
push
xchg
or
add
sub
rcll
call
and
mov
or
js
add
xor
cltd
push
pop
in
pop
adcb
cli
iret
adc
xor
jno
jg
inc
out
shr
out
xor
fwait
xchg
jae
xor
adc
push
mov
inc
fdivl
jbe
push
sub
out
inc
das
add
sbb
sub
lods
rolb
jbe
ret
jae
dec
aaa
cmp
xor
cmpsb
fistpl
mov
cld
lock
jge
mov
adc
mov
xchg
cli
insl
stos
mov
jle
out
pusha
cmp
ret
jae
ds
xor
les
ret
les
ficoms
ljmp
add
mov
xchg
pop
mov
lahf
push
cld
inc
lea
pop
ljmp
jnp
inc
loop
xchg
adc
shlb
out
xorl
enter
dec
and
mov
or
and
sbb
out
jnp
push
lret
insl
js
ds
aas
dec
and
inc
mov
jp
aad
pop
arpl
or
or
push
push
pop
das
adc
outsl
pushf
ljmp
pop
xlat
sbb
leave
loopne
pop
fs
insl
inc
and
push
popa
add
enter
sarl
fcomi
andb
hlt
sub
into
pop
inc
in
or
int3
sahf
pop
dec
lret
pop
sbb
xchg
adc
ret
ds
mov
ljmp
cmpsb
mov
and
or
lea
sbb
fstpl
aas
pop
or
int3
mov
xchg
mov
data16
dec
aam
sahf
insl
bound
bound
jns
or
jp
leave
cmc
pop
adc
test
mov
mov
push
adc
sub
sti
or
xchg
cmp
fdivs
lea
movsb
outsl
cli
sarb
aas
cmp
in
imul
test
cwtl
or
mov
faddl
pusha
mov
or
push
push
lea
lods
scas
and
arpl
sbb
mov
out
lods
mov
push
mov
leave
idivl
jl
cmpb
cltd
in
pop
mov
fwait
sbb
ret
cmpsl
pop
sbb
push
and
add
pop
pop
jl
sub
jge
sub
adc
scas
cmpl
lret
daa
add
ss
jmp
cltd
mov
dec
or
icebp
mov
dec
sbb
ja
xchg
es
cmc
and
fcomps
or
cmp
out
ficompl
add
enter
paddw
shll
sahf
pop
outsb
add
daa
xchg
jle
in
pushf
hlt
insb
aaa
mov
gs
call
mov
mov
jle
lds
test
pusha
test
mov
pop
movsb
xchg
and
repnz
add
add
out
in
or
clc
xor
mov
into
dec
insb
mov
ret
orb
lods
sbbb
inc
adc
adc
enter
and
sub
hlt
mov
test
out
rcrl
scas
mov
pop
jp
clc
sub
mov
shrb
push
test
jae
pop
popa
lock
test
mov
mov
int
adc
mov
cmp
icebp
mov
cmpsl
or
js
push
mov
or
mov
mov
outsb
jp
pop
push
sub
jp
adc
xchg
lds
test
push
lods
rep
fldt
insb
fcmovu
cwtl
callw
fwait
icebp
pop
clc
dec
push
push
fdivl
mov
lcall
add
fisttps
test
bound
lcall
xlat
add
pop
fildll
xchg
xchg
inc
call
cmp
fisubl
xor
add
lret
in
leave
cli
cmp
daa
dec
push
push
sub
sarb
sub
into
test
and
xlat
mull
enter
scas
sub
lahf
dec
mov
sbb
shrb
arpl
call
cmc
jmp
pop
sbb
mov
sbb
iret
add
mov
jnp
pop
or
or
repz
sbb
mov
ret
mov
jl
adc
mov
das
scas
cmpl
in
cltd
sub
push
xchg
fidivrs
mov
xor
mov
pusha
or
addr16
adc
add
icebp
adc
outsl
push
repz
sub
aaa
pop
mov
push
and
les
mov
test
out
subb
jecxz
mov
cwtl
pop
outsb
jb
cmp
pop
mov
pop
jmp
fwait
cwtl
inc
dec
sarl
jno
ficoms
inc
xchg
adc
sbb
std
jle
add
mov
jae
fistps
xchg
jecxz
and
push
dec
push
imul
ljmp
movsb
pushl
in
mov
xchg
mov
rolb
xlat
shll
in
mov
ret
arpl
into
push
mov
adc
stos
lret
push
sbb
aas
test
lds
imul
rcll
fldenv
pop
in
pop
ret
filds
xchg
loopne
lods
stos
mov
jge
jl
movsb
sub
rorl
xchg
sbb
test
call
lods
scas
mov
or
push
mov
sbb
std
lock
jmp
aaa
mov
mov
into
pop
mov
into
leave
ficoml
insl
pop
lods
insl
sarl
repnz
loopne
dec
lods
mov
fucomip
pop
bound
test
sbb
pop
cltd
clc
popf
ljmp
add
inc
sbb
subb
sbb
pushf
xor
mov
icebp
cmp
mov
xor
rol
dec
mov
xor
pop
ja
and
mov
mov
out
test
ret
pushf
fchs
outsb
insl
sbb
xchg
inc
cmp
negb
push
lods
and
xchg
ljmp
cmp
pop
dec
push
push
jge
or
insl
mov
in
aam
xor
adc
hlt
push
rol
leave
mov
inc
adc
mov
loope
sarb
pop
filds
add
loopne
divl
ss
and
pop
leave
xorb
and
dec
pop
add
flds
movsb
sbb
mov
std
lahf
insb
sub
sub
test
andb
mov
mov
cmp
xchg
sub
and
ljmp
and
dec
inc
sub
pop
jne
cmc
ret
inc
stos
sbb
mov
pop
xor
adc
aam
or
mov
dec
std
fwait
mov
pop
mov
int
pop
add
stos
stos
icebp
test
rcrl
pop
pop
xchg
dec
ss
sti
xchg
mov
aam
int3
lea
aaa
and
out
xlat
jle
xlat
loope
dec
cltd
out
mov
imul
jle
stos
sti
mov
aaa
dec
inc
push
mov
and
xchg
fnstcw
xchg
inc
inc
fninit
jo
push
add
mov
ret
loopne
pushf
dec
aam
cs
nop
mov
call
pop
sbb
ds
iret
jnp
sahf
adc
fcomp
outsb
push
dec
mov
xor
leave
mov
rorl
xor
cmpsl
jecxz
sub
push
mov
enter
cli
cmpsl
rcll
add
mov
mov
pushf
aam
mov
ljmp
lahf
in
in
test
jo
pop
icebp
adc
cmpsl
repnz
push
enter
dec
nop
popf
add
xchg
mov
scas
adc
cmp
push
outsl
test
jbe
mov
orl
into
mov
das
inc
faddl
cmp
mov
pop
jne
test
test
sbb
inc
dec
lock
pop
xlat
rcl
js
es
cltd
call
push
push
cmpsb
mov
mov
pop
mov
xabort
je
fdivp
lods
fcompl
out
add
fs
sub
jp
cmpsl
int
popa
sub
gs
lds
das
and
int3
loopne
xor
fidivrl
mov
xchg
mov
sub
or
aaa
xor
push
mov
adc
jle
mov
dec
popf
xchg
divb
inc
mov
push
shrb
movsb
push
mov
les
add
sub
js
cli
addr16
mov
ss
cli
fsubrs
pop
mov
cmp
mov
rcrb
push
jne
popf
scas
inc
int3
adc
arpl
adc
mov
ret
jp
hlt
adc
shl
dec
add
mov
movsb
fsubrs
cwtl
xor
js
mov
xor
or
dec
xchg
sub
into
mov
adc
int
leave
pop
popa
pop
fidivl
pop
sbb
or
mov
lds
dec
pop
das
rcll
outsl
push
lret
in
pop
decl
jp
bound
pop
adc
test
das
into
jnp
ss
xchg
cmp
mov
ret
mov
sub
mov
mov
jno
cmpsl
xor
bound
add
mov
xchg
call
mov
out
jae
adc
ret
push
sub
add
leave
push
cmp
jno
out
or
and
mov
dec
xchg
es
mov
sbb
jge
pushf
fwait
or
dec
sub
cs
pop
dec
xlat
out
aad
mov
xor
mov
stos
jb
loopne
jnp
negl
mov
jmp
ficoms
push
das
cmpsl
xlat
fwait
sbb
jecxz
and
imul
popl
add
cli
imul
inc
sub
jb
mov
int3
roll
aaa
dec
jmp
cmp
cli
or
daa
les
pusha
dec
jle
sti
xchg
push
pop
icebp
cmpsl
data16
fwait
xor
test
outsb
cmp
push
cmp
dec
push
sub
fcmovu
sbb
push
notb
aas
loope
mov
cmc
and
aam
xor
test
faddp
xchg
xchg
sub
pmulhw
test
push
mov
arpl
ds
inc
mov
push
out
jge
int3
inc
cmp
rorb
f2xm1
ficoms
adc
fisubrl
xchg
es
cld
lcall
and
add
sub
jecxz
sbb
mov
push
jno
cmp
push
icebp
sub
dec
xor
pop
mov
pop
jmp
or
in
inc
cs
xchg
push
jl
das
inc
jns
push
xchg
pop
in
jnp
and
stos
push
adc
adc
pushf
mov
sub
or
loop
mov
aaa
add
xor
stos
pop
jg
movb
jle
lock
pop
dec
pushf
xchg
mov
dec
pop
pop
jl
and
xchg
lea
and
mov
test
es
imul
fwait
dec
pop
inc
cmp
cli
sub
inc
in
dec
lahf
outsb
jl
loopne
or
ret
lea
pop
cwtl
fcomps
repz
popa
xchg
out
cltd
sub
push
adc
out
mov
xchg
dec
cmp
push
adc
add
out
xor
xchg
lods
mov
in
mov
or
pop
les
int3
and
adc
sti
dec
inc
dec
pop
sub
out
rcr
mov
repnz
xor
jp
mov
jg
es
shl
adc
dec
sbb
jb
test
cwtl
mov
jne
and
mov
dec
inc
add
add
cltd
pop
cld
fdiv
push
test
pop
pop
lock
fnstcw
fisubs
adc
lea
sub
aam
dec
lds
rol
pop
adc
loopne
in
push
push
leave
mov
cmp
dec
adc
xchg
adc
in
outsl
push
or
pop
xchg
add
imul
jbe
aas
or
movsb
lea
jl
sbb
cmovae
aas
aaa
sub
inc
push
pop
loope
aas
inc
int3
addr16
out
lds
loop
jno
loope
inc
cld
loopne
std
dec
sub
push
xlat
out
cld
mov
jg
and
jb
arpl
insl
cmc
shll
xor
mov
inc
push
icebp
es
jg
xchg
mulb
in
sub
adc
jno
and
xchg
std
sub
mov
xchg
add
push
adc
repnz
ret
mov
xor
push
fadd
das
xor
mov
outsl
fisubrl
lock
jnp
pop
jae
jle
outsb
movsl
push
mov
push
fadd
hlt
and
mov
ret
filds
imul
xchg
in
clc
sub
mov
ja
xchg
test
jg
mov
aaa
pop
push
and
pop
in
outsb
sub
or
push
xchg
fldenv
addr16
iret
and
sub
mov
insl
cmp
sbb
repz
cmpsl
mov
bound
ret
xor
cmc
cmp
xchg
jp
cmpsl
sub
mov
xchg
loope
jmp
out
daa
jbe
push
push
fs
or
call
jmp
pop
das
aas
sarb
movsb
or
xor
pop
xlat
int
ljmp
sbb
rclb
mov
gs
mov
imul
pop
or
mov
pop
pop
loope
dec
add
mov
or
jbe
dec
xchg
jg
xlat
jnp
cmpsb
mov
icebp
cmp
jb
leave
aaa
int3
js
incl
inc
sbb
mov
lock
shlb
sub
jne
aad
adc
or
mov
insl
and
xchg
lcall
ja
jmp
mov
xchg
mov
fiadds
xlat
sbb
xchg
dec
repnz
cs
cmp
mov
call
cmp
test
stos
pushf
or
mov
jmp
mov
jns
mov
hlt
cs
adc
rorl
mov
iret
repz
sbb
mov
aas
dec
mov
mov
iret
hlt
shr
add
inc
and
xor
jmp
jp
xchg
jb
pop
je
lret
push
xchg
xchg
lods
stos
jbe
xor
cmc
mov
pop
in
xchg
iret
out
or
sub
xchg
jb
mov
jae
mov
out
adc
push
or
pop
xlat
sbb
arpl
loop
mov
std
loope
push
jo
leave
pop
cmc
mov
nop
mov
jmp
inc
or
mov
shll
mov
mov
mov
dec
cmp
mov
and
mov
fidivs
popa
xlat
and
xor
inc
mov
loop
inc
shll
rolb
push
mov
add
xchg
mov
and
repnz
cmp
loope
sub
popaw
or
push
mov
dec
sbb
adcl
in
push
scas
push
add
sbb
jne
adc
scas
pushf
daa
int3
xchg
cbtw
inc
lret
mov
lods
jb
dec
call
test
in
mov
mov
addr16
es
test
stc
lret
sbb
inc
out
lea
test
test
jmp
jp
test
cmc
xchg
test
ljmp
hlt
ret
iret
arpl
cmp
sarl
les
cmp
xchg
push
push
xchg
lcall
jp
adcb
in
or
dec
jnp
cmp
add
dec
xchg
mov
outsl
xchg
xchg
cmp
cwtl
xchg
ljmp
sub
xchg
call
or
idivl
adc
or
mov
sub
jb
mov
jp
mulb
std
pop
es
sbb
jmp
daa
xchg
call
fldenv
pop
pop
xchg
pop
outsb
xlat
stc
xchg
mov
sarb
mov
repz
xor
psrad
jg
lret
aam
cwtl
sub
rcrb
int
fildl
mov
push
shrl
mov
adc
mov
mov
and
or
push
ret
sbb
cmp
shll
fisubl
ds
dec
mov
pop
fldt
pushf
sbb
aad
stos
cmp
and
mov
das
popa
sbb
mov
iret
mov
xchg
lds
mov
out
add
aam
sub
daa
xchg
push
mov
lea
pop
stc
and
adc
sub
sbb
add
cmp
test
outsb
addr16
push
cld
mov
in
mov
idivb
js
fadds
sub
and
xchg
xchg
jg
mov
jecxz
xchg
cmc
jb
push
stos
adc
pop
les
cmp
loop
mov
test
xchg
jle
mov
lods
cld
mov
imul
sbb
scas
pushf
inc
mov
push
adc
les
xchg
fcoms
jae
adc
test
cmp
cmp
xor
imul
mov
mov
lahf
icebp
leave
cmp
pop
mov
fbstp
push
mov
loop
sti
jmp
add
xchg
xchg
addr16
xchg
push
daa
movhps
subb
and
sub
cld
into
xor
ret
or
xchg
lret
push
pop
mov
add
cmc
movsb
pop
arpl
jg
xchg
xor
pop
add
test
adc
addr16
jg
aad
push
jge
jp
repnz
insl
xchg
aas
fcoml
mov
pop
mov
pop
daa
mov
xor
rcrb
lods
sub
ficoms
call
pop
mov
sub
mov
in
daa
nop
jbe
adc
loop
jno
in
popa
xor
clc
pop
and
lods
mov
add
jns
call
xor
ljmp
fisubrs
xor
scas
sub
push
or
scas
orl
mov
dec
fstp
sbb
rolb
sub
and
push
xchg
roll
pushf
mov
scas
das
sbb
mov
adcl
jnp
dec
inc
clc
dec
in
cltd
xor
push
outsl
add
or
mov
out
loop
scas
cld
stos
inc
mov
cmp
les
mov
or
sub
repz
lret
sbb
test
in
mov
dec
bound
lods
xchg
mov
cs
cmp
out
push
push
hlt
movsl
jg
pop
cmp
cmp
inc
rclb
dec
push
mov
dec
sbb
mov
cld
rcr
jbe
adc
jo
frstor
push
adcb
add
loopne
or
mov
xchg
pushf
pop
mov
repnz
inc
shlb
nop
or
addr16
sbbl
sub
jg
mov
adc
xor
lea
test
test
push
aaa
jmp
sti
jae
lock
mov
mov
in
daa
inc
push
pop
stos
jecxz
data16
adc
sub
jno
sbb
in
shll
inc
sbb
movsl
pop
xchg
inc
adcl
out
push
out
mov
jecxz
ds
xchg
fsubp
cmc
push
xchg
pusha
iret
sbb
inc
push
or
fildll
mov
out
cwtl
cmpsl
movsb
jle,pn
xchg
xor
xchg
call
adc
push
add
es
inc
aaa
shll
mov
andl
push
push
mov
mov
lods
pop
lock
xchg
sbb
leave
adc
sbb
das
in
xchg
xchg
rcrl
xor
xor
scas
sub
call
fistl
pop
out
clc
addl
scas
mov
push
shlb
rcll
stc
jnp
adc
cmp
and
imul
cmc
dec
mov
cmpsl
sub
loopne
inc
fwait
ret
ss
push
sbb
sub
pop
jo
in
pop
imul
lcall
mov
je
es
pop
pop
popa
movsl
cmp
dec
sbb
in
pop
negl
ret
sub
mov
iret
repnz
mov
xchg
in
add
rol
pusha
or
pop
and
loop
sub
test
pop
pop
cwtl
out
dec
das
mov
mov
int
pop
dec
outsl
std
mov
or
cs
and
mov
lcall
mov
mov
or
divl
lock
mov
stc
das
mov
test
xchg
push
mov
mov
arpl
push
cltd
popa
mov
mov
xchg
xchg
adc
out
sbb
xor
pop
sarl
dec
sahf
add
push
stc
jne
mov
imul
out
nop
cmp
test
notb
xor
jl
js
xchg
mov
mov
xchg
test
gs
in
push
cmpsb
cmp
inc
sarl
das
push
push
mov
fs
dec
mov
aam
mov
inc
and
je
aas
inc
add
adc
pop
lods
push
add
and
and
es
movsl
sti
movb
cli
jo
cmp
jmp
mov
aam
out
rcl
jmp
ds
push
js
ds
push
faddl
sub
and
int3
cmp
mov
sub
and
lds
adc
lds
sbb
push
xchg
cmp
call
test
xor
push
sub
rcrl
fsubl
aaa
mov
daa
dec
jno
adc
in
shr
pop
rolb
adc
pop
es
xlat
in
cmp
lcall
push
hlt
inc
mov
pop
cmpsb
lcall
jmp
fistpll
cmp
es
movsb
xchg
jp
mov
enter
loope
push
mov
pop
in
test
stc
cmp
sbb
push
dec
out
ljmp
js
or
fs
inc
int3
mov
inc
in
sub
push
xchg
lock
sub
sahf
mov
lods
outsl
ror
arpl
fdivrs
adc
pop
pushl
pop
and
lcall
xorb
pop
out
je
mov
pop
lock
inc
or
aas
and
mov
push
sbb
das
frstor
clc
jp
jle
mov
dec
fwait
mov
data16
aad
adc
xchg
lods
sub
push
jl
lahf
mov
pop
movsl
test
ja
mov
mov
mov
add
nop
mov
mov
jae
pop
mov
dec
popf
xchg
xchg
cmp
add
push
scas
mov
add
adc
mov
xchg
call
or
add
fcoml
mov
inc
add
rcrl
sti
xchg
xchg
pop
cmp
hlt
sbb
cmc
or
xchg
jge
arpl
cltd
mov
and
outsl
add
js
push
imul
pop
mov
sbb
psadbw
out
clc
movsb
fstpl
scas
inc
jb
jmp
and
pushf
insb
pop
iret
push
out
or
sbb
jg
shlb
in
mov
xchg
std
inc
repz
push
jp
push
sub
js
pop
scas
jp
sahf
adc
int3
adc
mov
aas
incb
jbe
test
jecxz
dec
inc
sti
cld
cmpsb
pop
insl
fmull
cmpsl
and
jmp
aam
jbe
popf
xchg
xor
mov
loopne
lahf
pop
inc
xchg
fisubrl
inc
jle
ret
fwait
ret
jbe
outsl
sbb
popa
mov
in
push
mov
sbb
rol
imul
cmc
pop
pop
xchg
sub
mov
push
push
pop
add
sub
loop
orl
add
or
repz
sub
stc
repz
mov
out
cmp
out
inc
jnp
out
scas
scas
cs
movsb
cmc
mov
sub
orl
out
rcl
inc
lcall
and
push
in
xchg
cmp
imul
arpl
xor
mov
or
cwtl
sub
fneni(8087
xchg
pop
lods
pop
mov
leave
adc
shlb
hlt
scas
mov
in
push
inc
mov
pop
mov
cmc
push
inc
xchg
data16
jge
or
push
push
xlat
pop
mov
out
cltd
inc
or
adc
and
out
mov
stc
out
out
jns
mov
push
mov
mov
cs
sub
adc
adc
push
xchg
divl
fstpl
out
sbb
andb
pop
dec
pop
jmp
hlt
jg
and
adc
mov
xor
outsb
in
push
xchg
shll
adc
loop
mov
cs
in
mov
mov
cmpsb
adc
mov
pop
xor
sbb
cltd
cltd
aas
cld
popf
out
push
leave
and
cmp
icebp
push
lret
xchg
dec
test
pop
test
sti
cs
cmp
fnstcw
ret
jmp
push
jge
xor
sahf
aas
ds
pusha
fstl
mov
mov
push
enter
aas
movl
or
xor
sub
dec
ror
xchg
adc
jp
sub
xchg
aas
mov
scas
loopne
cmc
adc
push
or
add
mov
jle
in
jg
adc
int
nop
out
test
daa
testl
mov
fistl
fldl
and
stc
adc
xchg
lcall
int3
repnz
ljmp
dec
scas
cs
xor
shlb
pusha
rcr
aad
add
mov
pop
push
sti
xchg
clc
std
aas
add
ret
jno
roll
sub
es
mov
xchg
outsb
cli
push
clc
push
lods
in
fwait
jb
addr16
mov
pop
pop
or
int3
fimuls
mov
mov
push
jmp
and
cltd
fsubrl
cmp
scas
pop
push
mov
pop
mov
xchg
sti
dec
xor
adc
dec
lods
shrb
add
lcall
xor
sub
out
jb
xchg
or
pop
sbbb
outsl
js
push
push
mov
or
adc
out
mov
lods
movsl
out
ds
cmp
or
mov
fisubrs
bnd
mov
in
leave
pop
push
xor
lods
mov
inc
sbb
cmp
xchg
test
ret
sbb
or
jmp
push
subb
push
inc
in
int3
xlat
movsb
jecxz
jno
push
adc
out
add
clc
fwait
lods
lcall
stos
test
xor
xchg
neg
jbe
mov
loop
cmp
jecxz
pop
cmp
out
cmp
fldl
or
pop
daa
jne
or
jo
add
xchg
popa
fcmovb
pop
adc
push
ficoms
mov
add
xchg
mov
std
inc
push
dec
shrd
mov
and
inc
aam
daa
and
pop
mov
cmpsl
insb
push
lret
jnp
and
mov
sbb
leave
push
mov
push
in
add
lret
test
adc
and
pop
mov
loop
mov
xchg
and
adc
js
pop
lods
push
mov
jnp
subb
jmp
add
mov
test
pop
sbb
sbb
pop
or
jne
popf
insl
dec
repnz
data16
pminub
and
lds
je
shlb
lret
xchg
les
gs
xchg
in
outsb
rorl
les
pop
rorl
in
mull
push
les
repz
push
imul
jecxz
jecxz
fdivs
into
mulb
jnp
daa
dec
jg
call
mov
hlt
jle
nop
iret
jp
and
cmp
xor
lret
adc
icebp
jp
adc
addr16
inc
inc
mov
dec
inc
xchg
push
leave
popf
xchg
and
lahf
aas
fisubs
mov
mov
and
imul
sub
pop
dec
pop
lret
inc
sarl
mov
pushf
lods
rcr
movsl
sub
mov
loope
xchg
mov
xchg
cmp
pop
scas
cmpsl
js
fwait
mov
mov
stos
movsb
push
xchg
mov
adc
cmpsl
daa
jno
jbe
adc
in
push
sub
add
and
sbb
jae
mov
fstps
jae
push
ljmp
out
xchg
jno
mov
sub
test
dec
gs
rclb
jle
cmc
js
and
mov
xchg
xor
lods
mov
inc
mov
or
cmp
or
ss
fbld
push
lcall
loop
ret
add
aad
fwait
test
mov
pop
ja
lds
cmp
mov
jae
or
sbb
sbb
arpl
inc
xchg
gs
or
cwtl
ljmp
and
icebp
jns
stos
dec
jns
mov
xor
sbb
or
lcall
push
dec
lock
mov
mov
inc
int3
hlt
mov
popf
test
adc
push
das
imul
or
cmpsl
sar
sub
mov
pop
frstor
nop
ljmp
mov
insl
dec
out
inc
out
add
or
push
cltd
je
adc
movsb
mov
test
sti
dec
and
xchg
movsl
xor
sub
xor
insl
add
mov
jmp
hlt
std
add
xchg
mov
mov
lahf
push
inc
inc
cmp
jnp
mov
push
xchg
cmp
sahf
lret
xor
std
push
lds
and
cmc
push
je
sbb
inc
mov
mov
cwtl
lods
and
adc
mov
push
xor
mov
dec
sbbl
and
xchg
iret
popa
and
jb
pop
leave
negb
js
inc
jge
pop
repnz
adc
arpl
mov
fs
insb
or
push
je
fsubrs
mov
hlt
adc
inc
mov
fldcw
push
push
imull
out
repz
jb
mov
fistps
movsl
out
mov
call
int
test
push
dec
push
loopne
sub
arpl
mov
loopne
gs
push
scas
add
inc
movsb
cltd
lods
cs
cs
and
pop
add
or
jbe
push
jo
ficoml
aaa
sub
dec
or
sarl
rolb
mul
pop
shrb
aad
lret
lds
dec
rorl
xor
clc
and
push
in
les
push
test
imul
push
idivl
push
xchg
jo
sub
xchg
fcompl
adc
and
push
push
notb
loope
add
icebp
in
inc
jg
nop
or
pop
fsub
push
nop
mov
cld
sub
or
xlat
nop
sbb
js
in
insl
mov
jl
jae
or
cmp
pop
dec
adc
lret
cli
push
lret
inc
cli
adc
test
outsb
in
cmpsl
cmp
jns
jae
mov
cmpsl
setbe
mov
in
xor
adc
popa
test
mov
aad
jle
mov
loopne
iret
and
addr16
jbe
push
xor
sbb
push
divb
or
sbb
dec
aam
or
push
mov
int3
sti
cmc
out
out
cmp
pop
mov
aam
push
mov
dec
jne
outsl
dec
xor
mov
sahf
lock
pop
inc
andl
sub
testl
and
ss
rclb
cmc
leave
insl
inc
shlb
mov
push
sti
add
sub
arpl
fcomp
fs
inc
test
mov
imul
into
pop
sbb
xor
add
sbb
lea
gs
jae
outsb
andl
mov
cmpsl
lret
leave
dec
movsb
into
and
jbe
and
lcall
popl
push
xor
mov
and
adc
dec
icebp
adc
pop
cmp
out
lret
xor
inc
sti
inc
stc
nop
jb
inc
loope
sub
mov
testb
mov
sahf
pop
push
cmp
cld
std
xchg
fs
in
fsubl
cmp
cmp
lds
mov
stc
fs
add
orl
mov
cmp
or
fldcw
xor
lahf
aad
inc
add
push
std
xchg
mov
stc
jecxz
inc
hlt
cltd
hlt
ljmp
lret
cmp
sahf
push
jmp
cmp
negb
xor
push
loopne
outsb
sbb
pop
test
call
push
xor
xchg
ljmp
outsl
cmc
fldcw
pop
rcrl
loope
rorb
dec
sub
and
mov
cmp
xchg
push
pusha
cs
insb
sar
jb
inc
jmp
push
stc
xor
mov
and
aaa
inc
fistps
and
lret
push
mov
daa
pop
cld
sub
push
pop
fstpl
shrl
dec
adc
add
insb
adc
adc
js
adc
leave
and
mov
pop
loopne
rcrl
xlat
push
scas
popa
sbb
mov
mov
mov
lret
pop
fadd
jmp
cmpsb
jb
jne
stos
lock
mov
loopne
pop
ror
xchg
popf
hlt
mov
hlt
mov
mov
pop
movsb
xor
mov
xchg
int3
fsubrl
ja
in
pusha
cld
push
jle
dec
adcb
cmpb
jge
insl
xor
mov
test
les
mov
ljmp
add
ljmp
notb
cld
cli
mov
addr16
ds
xchg
add
ds
push
setbe
mov
inc
xor
and
cld
stos
jo
mov
adc
jae
idivl
jno
gs
popf
push
xor
and
xor
jecxz
push
inc
xor
cmp
jb
lds
cld
cmc
xchg
xor
iret
les
cld
push
push
pushl
xchg
mov
cmp
push
int
jno
aaa
and
fisttpl
iret
or
enter
add
xchg
repnz
sbb
jge
mov
jnp
add
jo
popf
adcl
dec
pop
push
movsl
jae
add
jl
aas
xor
cmp
inc
lods
lock
jbe
movsl
int
inc
imul
add
loopne
adcb
movsb
pop
ror
iret
jne
mov
inc
in
sub
xor
sub
fwait
sbb
loop
addr16
mov
xor
stos
mov
popf
pop
ds
lods
xchg
movsb
arpl
pop
out
jp
or
jl
and
flds
scas
mov
ret
movsb
inc
or
and
shlb
mov
int3
lret
push
mov
addr16
jb
or
stos
inc
jb
cwtl
sti
in
and
or
dec
test
mov
mov
out
outsb
fsubs
mov
addl
dec
imul
mov
cmp
shlb
outsb
xor
jo
inc
popa
out
int3
leave
jns
cmp
movsb
sbb
mov
arpl
inc
lcall
fbld
xlat
sbb
cmp
xchg
out
pop
jge
inc
daa
xchg
testl
sbb
mov
mov
inc
or
lds
add
bound
inc
or
jbe
rcr
jle
pop
push
mov
gs
fwait
fs
ficoml
daa
sub
jns
mov
or
mov
jne
aaa
adcl
xchg
xchg
andl
mov
xor
repnz
aad
lret
mov
cmpsb
inc
lret
add
add
ljmp
jp
dec
jg
pop
fninit
out
pop
xlat
xchg
sub
test
cmp
xchg
cltd
mov
out
lahf
outsl
cmp
andl
dec
in
push
cmpsl
inc
ja
jne
incl
imul
loop
repz
cmp
hlt
gs
cmpsb
dec
mov
add
cli
pushl
xchg
aam
adc
repz
imul
dec
rol
cmpsb
lret
dec
icebp
push
sar
xchg
imul
inc
out
jnp
ja
sbb
sbb
aam
adc
pop
aad
stc
stc
aaa
jmp
shl
mov
addl
mov
inc
fmuls
stos
lds
icebp
mov
pop
inc
testb
lea
pop
push
sbb
fnsave
cmp
imul
or
sub
or
push
fwait
lods
out
mov
mov
add
cld
test
outsl
jnp
pop
aaa
lods
mov
in
and
add
cmp
popa
fcmovnu
ret
ds
pusha
mov
lret
hlt
sbb
andb
rol
dec
inc
out
rcll
movsl
outsb
adc
xchg
insb
movsl
sahf
cmp
movsb
flds
inc
ja
mov
sub
into
mov
les
jne
xor
mov
pop
adc
hlt
lcall
imul
jp
clc
lret
lock
nop
cli
inc
pop
imul
fnsave
xlat
jno
mov
add
mov
xchg
jae
fsubrl
sub
cmc
pop
mov
clc
xor
or
sub
cmpsb
lcall
int
aam
jle
mov
test
addl
stos
push
shl
fisubl
icebp
mov
ret
mov
sbb
push
sahf
inc
adc
lock
ja
pushf
lea
scas
imul
dec
fdivrs
lea
sarb
push
jg
dec
mov
int3
or
adc
std
fs
xchg
push
mov
loope
inc
mov
stc
xchg
hlt
clc
rclb
pop
or
lcall
xchg
and
fldt
xchg
int3
sbb
fsubrs
cmp
xor
ja
cmp
cmpsl
in
pop
fbstp
push
rcrb
sub
fsub
inc
inc
and
cs
icebp
jae
push
movsb
insl
ffreep
popa
fadds
fwait
pop
outsl
movb
test
sbbl
mov
sar
jne
test
cli
enter
or
adc
dec
adc
inc
mov
xorl
sub
cmp
lret
ja
int
js
call
mov
sub
and
inc
pop
daa
test
jle
sar
dec
jo
das
in
fldt
mov
iret
negb
mov
jo
outsl
push
ret
pop
xchg
testb
jbe
shr
cli
cmp
sbb
insb
and
cmpsl
fistps
sub
mov
stc
xchg
sub
into
lcall
add
enter
xor
in
out
repz
or
add
jae
mov
icebp
mov
mov
int
push
sbb
mov
fldenv
dec
push
xlat
sbbl
push
or
xchg
insl
iret
out
outsl
mov
lahf
push
mov
adc
cmp
sub
ficoms
insl
out
dec
push
add
int3
pop
fldcw
das
sbb
stc
xor
faddl
push
popf
loope
pushf
mov
daa
mov
fwait
sub
int
ss
and
mov
mulb
xor
xor
adc
std
test
add
cmc
ja
xchg
shrl
mov
imul
xchg
ss
sti
cli
xchg
inc
dec
out
mov
mov
pop
das
and
mov
and
arpl
sub
jns
fidivl
mov
mov
shlb
jp
dec
pop
mov
mov
in
pop
cli
loopne
mov
pop
js
mov
cwtl
mov
push
dec
pop
pop
out
les
ret
outsb
adc
and
mov
xor
cmpl
dec
dec
out
add
sbbb
ret
roll
cs
adc
imul
or
rclb
fucomi
leave
push
dec
fisubs
cmpsl
and
cwtl
cltd
loop
xchg
push
imul
shlb
je
sbb
xchg
adc
mov
xor
mov
xchg
sub
push
dec
ljmp
ds
dec
add
mov
call
fwait
neg
aam
adc
lods
addl
not
in
mov
pop
dec
in
in
sbb
or
and
gs
ljmp
into
js
enter
lcall
out
cmp
enter
xchg
or
repz
push
jae
mov
push
lds
xchg
repnz
adc
push
mov
cmpl
adc
es
inc
sub
pop
out
insb
or
test
push
rorl
out
sbb
sub
sahf
mov
popf
mov
pop
and
loop
or
icebp
push
fmull
test
mov
lret
xor
mov
adc
std
and
pop
mov
andl
fidivl
inc
cmp
stc
push
mov
pop
cmpsl
fs
jle
mov
push
jge
push
dec
sub
jp
movsl
cmpsb
stos
mov
fnstcw
push
pop
sub
dec
ss
xor
adc
in
adc
xchg
sbb
mov
jnp
repnz
mov
pop
adc
adc
and
imul
fmul
sub
ret
push
push
sbb
nop
into
cmp
cli
pop
stos
mov
lock
int
xor
clc
cld
mov
out
adc
dec
jge
adc
mov
jne
or
dec
lds
aad
sbb
mov
dec
mov
je
nop
out
jp
mov
pusha
out
push
out
mov
stos
arpl
mov
mov
cmp
lods
xor
sbb
xchg
jae
cmp
out
test
add
sub
xchg
out
jecxz
scas
leave
and
push
adc
mov
aad
mov
push
ljmp
and
or
cmp
jmp
aam
xor
xchg
xlat
xchg
or
mov
int
sbb
subb
add
mov
enter
jb
mov
stos
and
lret
cmp
repnz
pop
stos
mov
mov
sub
add
jle
jns
in
cmc
lea
scas
addl
mov
rcll
es
mov
repnz
xchg
mov
arpl
stc
add
mov
xlat
pushf
lret
xchg
xchg
lahf
jne
std
outsb
inc
rclb
cli
jmp
jge
push
sti
mov
sub
xchg
gs
lahf
xorb
xchg
mov
mov
out
lods
mov
jns
push
and
aas
data16
in
mov
loop
icebp
push
scas
std
and
push
mov
cmp
test
sbb
sbb
pop
loop
mov
adc
lss
jbe
int
mov
push
xor
mov
cmc
clc
dec
adc
popa
fwait
test
imul
mov
mov
fs
xor
pop
lods
test
mov
popa
xchg
push
lock
mov
mov
mov
jns
mov
dec
int3
adc
sub
mov
divl
add
dec
je
bound
inc
popf
xchg
xor
adc
and
dec
jle
inc
popf
test
andb
lar
mov
pop
shl
pop
out
divb
outsb
arpl
aad
and
enter
xor
iret
rcrl
xlat
inc
mov
sbb
mov
pop
push
loope
xor
aad
adc
out
rcl
leave
dec
dec
fstl
out
add
sbb
dec
inc
push
sbb
add
stos
dec
mov
pop
xor
popa
ds
mov
add
xor
xchg
push
outsb
stos
mov
dec
testl
aam
cmp
loopne
dec
out
pushl
sbb
and
or
mov
xor
int3
mov
cmpsb
mov
ficompl
xor
or
sub
out
mov
inc
dec
inc
mov
mov
lods
fwait
cltd
enter
in
sbb
fsubr
out
sbb
mov
add
xchg
mov
popf
mov
push
iret
clc
push
insb
imulb
mov
stc
cmp
pop
and
adc
loop
xchg
dec
dec
mov
rclb
push
pop
inc
push
fs
sbb
mov
jmp
sbb
dec
clc
push
int3
stos
and
ja
aas
clc
je
jb
dec
inc
faddl
lea
xor
xchg
out
ljmp
test
adc
shrl
stc
iret
cltd
cmp
sub
mov
loopne
repz
jnp
and
xor
sub
scas
icebp
jg
sub
out
test
dec
leave
imul
pusha
lcall
xchg
in
adc
test
push
fnstcw
cmp
xor
je
fsubr
or
rorb
subb
jmp
jne
dec
push
nop
push
inc
mov
xor
mov
xchg
jns
loop
nop
sbb
stc
adc
pop
or
aad
ret
sub
ret
out
mov
outsl
dec
cmpl
scas
sub
data16
popa
dec
sti
sub
cmpsb
std
jno
lea
mov
fwait
addl
sahf
mov
or
sub
and
pop
lods
xor
insl
xchg
ret
jo
mov
stos
scas
pop
dec
ljmp
movsl
push
test
dec
in
pop
mov
dec
in
outsb
jmp
pusha
movsl
ja
ficompl
andb
mov
mov
fsts
ficomps
jp
ror
xchg
mov
push
push
movsb
insb
cmpsb
dec
push
mov
adc
fs
sbb
int
mov
fildl
sub
add
xor
jmp
mov
scas
std
aaa
mov
divps
pop
cmpsl
xchg
nop
inc
push
push
into
mov
adc
lcall
xor
sbb
mov
adc
inc
sub
jae
pop
xchg
vpxor
and
push
xor
sub
iret
xlat
mov
cmc
nop
je
lea
jae
mov
pop
adc
fimuls
pop
adc
fdivl
lds
out
and
pop
dec
lods
pop
or
xchg
test
inc
jecxz
dec
jb
jbe
mov
repz
adc
cmc
cli
lock
dec
and
mov
daa
bound
pop
mov
cmp
pop
aaa
pop
rcr
imul
sbb
icebp
sbb
jmp
pop
leave
cwtl
movsl
scas
insb
jbe
inc
movsl
mov
push
jmp
mov
mov
out
mov
dec
push
pop
adc
inc
gs
rclb
jbe
inc
xor
cmpsl
push
mov
mov
fcompl
inc
ret
xor
sub
dec
add
mov
movl
jns
sub
lahf
lock
repz
repnz
mov
iret
filds
sti
movsl
pop
pop
dec
aam
ret
iret
std
or
pop
mov
fisubl
dec
leave
sbb
or
mov
cmp
cmpsb
pop
outsb
xor
movb
cmc
inc
fiadds
shll
repz
mov
sub
add
sbb
push
sbb
push
jmp
inc
or
in
das
ds
xchg
ja
sbb
popw
push
jecxz
loop
adc
aam
pop
aas
bound
int3
push
xor
ficoms
cmp
add
fidivl
leave
sti
mov
into
aaa
xchg
inc
and
cmpsl
nop
jbe
mov
in
adc
es
fcmovb
movsb
sahf
das
shl
inc
cmpsl
lret
fstl
mov
add
test
jge
nop
dec
xchg
cmp
mov
test
xchg
xor
loope
add
in
sbb
repz
jl
cmp
cmpsl
xor
ret
lock
inc
dec
stc
mov
jp
pushf
mov
xchg
outsb
fstpl
loope
pusha
push
inc
repz
ffreep
push
lea
cld
xor
sub
xchg
fdivp
mov
adc
fwait
mov
sbb
in
dec
mov
out
inc
or
sub
movsl
jae
in
aad
xchg
jno
pop
xchg
add
jns
rcrb
adcb
cwtl
mov
movsl
dec
aad
pop
out
xchg
out
je
cmp
out
int
fisubl
sub
mov
or
push
jo
jnp
rclb
mov
add
add
sbb
shrl
xchg
lods
fs
push
and
int
hlt
out
fdivrl
sbb
mov
data16
repnz
es
inc
adc
push
sub
add
outsb
xor
mov
std
or
mull
dec
aad
movd
and
or
fistps
jno
insb
out
jmp
fidivrl
push
jp
jb
ficompl
ret
sbb
adc
sub
inc
cs
js
out
jle
xchg
jl
xchg
lea
out
lock
loop
outsl
jne
sub
push
mov
rcll
jno,pt
push
mov
mov
sub
cmpsb
fyl2x
sub
enter
inc
cwtl
mov
mov
adc
add
fs
stos
int
xlat
mov
leave
xchg
add
inc
dec
fwait
negb
add
mov
fsubl
pop
adc
xchg
sub
lds
adc
mov
mov
add
bound
hlt
ret
dec
aaa
cmp
push
leave
push
gs
pop
jmp
jo
jle
lock
cmp
jmp
sahf
or
testb
aas
aam
jae
cs
pop
popa
pop
inc
jbe
movsb
xorb
mov
pop
out
in
mov
inc
sbb
and
imul
dec
pop
in
iret
into
and
push
sbb
imul
test
mov
out
jmp
loopne
xlat
pop
fcmovu
sub
pushf
int
xchg
add
xchg
sbb
mov
xchg
data16
pushf
xorl
imul
cmp
filds
insl
xchg
adc
jbe
ja
adc
push
pop
sub
lods
gs
pushf
inc
jp
fisttpll
inc
mov
ss
add
test
fstpt
ret
mov
icebp
es
mov
ja
iret
dec
loop
gs
popa
jo
jl
sahf
xchg
mov
cwtl
cltd
jge
lahf
cmp
stc
imul
popa
arpl
xchg
mov
pop
sbb
hlt
jp
fnstenv
or
push
lods
xor
sti
mov
lds
jge
jae
pushf
pop
lret
cmp
inc
mov
push
pop
rcrl
cmp
adc
jg
mov
cmp
out
sbb
mov
and
xor
lea
popa
mov
xor
xor
clc
and
dec
push
fistpl
loop
gs
add
sub
inc
mov
stos
push
je
pop
mov
dec
jl
mov
addb
mov
xchg
decb
jmp
xchg
mov
aad
jb
in
dec
dec
mov
cmc
lea
ljmp
dec
lcall
subb
jno
cmp
push
das
loope
pop
aas
jmp
fstl
into
mov
cwtl
lahf
andl
mov
adc
xor
mov
sub
sub
sbb
movsb
lea
and
cmpsl
int
or
and
and
gs
repz
jle
adc
in
cmp
add
test
cmp
psraw
lcall
adcb
dec
sbb
sub
inc
mov
jns
sti
jns
fidivs
xchg
test
loope
out
das
imul
cmp
repnz
adc
addr16
loopne
dec
lret
test
jbe
cmp
les
outsl
mov
sub
push
jg
and
mov
pop
mov
orl
cmpl
xchg
mov
in
adc
stc
pop
cltd
popf
sbbl
jne
pop
push
adc
mov
dec
adc
inc
dec
xor
add
inc
add
jo
fwait
stc
fidivl
pop
push
pop
iret
add
pop
lcall
rcr
mov
inc
mov
fcoml
sahf
das
push
mov
mov
aas
stos
lods
cli
les
imul
add
xor
jg
pop
inc
in
fstps
outsl
inc
or
das
adc
jl
lret
xor
or
popa
jle
jno
shlb
scas
jbe
mov
in
jne
dec
lods
mov
mov
in
fisttps
out
pop
jge
or
pop
xor
out
stos
xor
aam
jg
jo
jo
push
sbb
lea
xor
orb
or
mov
test
ret
nop
sbb
pushw
cmc
mov
jo
mov
int3
scas
sbb
incb
adc
mov
and
in
dec
xor
jb
xchg
mov
push
jmp
test
cmp
ljmp
xchg
repnz
cmp
adc
inc
ss
hlt
pop
adc
out
mulb
sub
xor
outsl
int
nop
sti
or
fwait
lea
and
sbb
jnp
andl
ds
mov
xchg
pop
mov
jmp
in
fwait
sahf
jp
jae
lods
add
jno
imul
push
cmp
cmc
fsts
aaa
pop
fld
pop
lods
les
or
leave
mov
xchg
mov
into
sbb
scas
cmpxchg
xchg
stos
loopne
leave
mov
dec
dec
pop
push
and
xchg
enter
mov
lret
adc
push
imul
cmp
rcr
mov
jae
daa
rcrl
dec
cwtl
insl
or
clc
dec
adc
push
add
add
outsl
push
out
jbe
clc
in
pop
sbb
cltd
mov
jg
out
pop
fidivl
xchg
jg
push
ja
repnz
jmp
pop
mov
into
cmp
iret
dec
jle
scas
mov
dec
sbb
adc
into
test
and
sti
push
sub
cltd
xchg
cmpb
cmpsl
repnz
cmpsb
imul
test
jge
mov
jb
std
mov
rolb
and
push
or
add
stos
incl
shll
inc
das
xchg
das
movsb
xor
adc
push
jecxz
inc
mov
or
add
sbb
xor
mov
xchg
lret
arpl
lds
sub
lahf
jmp
cmp
ds
fwait
out
fstps
sub
push
sarb
pop
cmpsb
sbb
insl
or
push
adc
jo
jge,pt
shlb
lahf
lcall
push
mov
arpl
push
lock
cld
flds
repnz
sub
out
mov
xor
or
sahf
popa
dec
xchg
fcoms
jo
mov
mov
mov
jl
push
cld
cmp
xor
insb
mov
xor
mov
adc
loopne
add
inc
sti
out
mov
jl
pop
aad
pop
popa
mov
sti
lods
adc
mov
inc
jne
add
ljmp
mov
inc
sbb
imul
pop
inc
orl
inc
test
repz
cmpb
mov
jecxz
xor
dec
add
jo
mov
push
fstps
jno
andb
adc
push
dec
push
clc
mov
sahf
arpl
push
icebp
or
ret
mov
adc
add
scas
or
cmp
ljmp
jge
dec
xchg
out
negl
in
fsubrs
les
jmp
ret
push
adc
notl
xchg
xor
xchg
arpl
sub
ljmp
mov
pushf
lods
incb
add
adc
cmpsl
test
cmpsb
jp
jo
scas
jmp
lea
imul
and
sub
nop
testl
sbb
adc
push
push
aas
fadd
push
mov
dec
lea
daa
and
push
sbb
test
jns
and
shll
ret
jo
jae
push
xchg
int
enter
xor
and
and
dec
jmp
sub
mov
fs
stc
repnz
test
out
jno
daa
test
nop
cli
dec
setp
xorb
stc
insb
sahf
hlt
lds
adc
add
int
adc
in
imul
stos
pop
adc
push
aas
repz
mull
sbb
ja
popa
ret
cmp
push
cmp
and
imul
das
or
xor
aad
scas
cmpsl
adc
mov
iret
xchg
sub
or
shll
inc
xchg
push
add
xlat
xlat
jmp
ret
pop
mov
lods
iret
cld
push
bound
xchg
jp
es
popa
mov
adc
rclb
mov
mov
fnstsw
mov
xchg
imul
inc
mov
arpl
mov
mov
enter
hlt
les
push
lods
je
jle
mov
pop
loopne
dec
into
push
push
xchg
iret
aam
push
vmovd
add
add
xchg
ja
pop
xchg
insb
sbb
stos
add
dec
mov
insl
sub
dec
jecxz
mov
inc
and
push
xor
cmpsb
and
rclb
jnp
xor
lcall
std
in
push
xchg
iret
in
push
mov
fldenv
nop
iret
lahf
and
pop
subl
js
xchg
rcr
jno
add
nop
aaa
mov
push
push
adc
ljmp
jp
shll
xor
xor
adc
dec
fstpl
sti
mov
xor
and
inc
sbb
mov
mov
jl
xchg
push
and
sbb
or
orl
and
lds
movsl
xchg
testl
es
popf
sbb
pop
repnz
sbb
cmp
inc
adc
jns
lahf
sub
push
mov
xor
add
jmp
cs
decl
cs
jmp
scas
xor
cwtl
cmpsl
cli
setbe
and
arpl
insb
daa
je
daa
add
cmp
push
bswap
xchg
mov
cmp
sub
jmp
aaa
out
orl
loop
clc
lret
push
sub
xchg
inc
lahf
out
push
dec
movsb
arpl
jnp
cmp
xor
cltd
insl
add
xor
test
add
xchg
popa
cmp
call
stc
adc
sub
nop
mov
inc
aas
fisttps
mov
push
cltd
dec
xor
lds
lret
cmp
pop
setp
mov
jo
cmp
inc
mov
jl
int
movsl
sub
push
mov
iret
insb
mov
data16
push
daa
mov
enter
or
add
data16
pop
pop
ds
xlat
and
dec
dec
push
adcb
add
imul
gs
mov
mov
pop
loopne
div
aaa
or
lcall
test
frndint
loope
enter
lds
fisubrl
pushf
les
xor
testl
dec
out
mov
and
jp
xor
or
loope
jle
into
shlb
dec
roll
xchg
jns
test
jl
mov
add
inc
or
sub
out
mov
cli
subb
icebp
in
and
pop
std
pop
je
out
mov
mov
mov
sbb
leave
aas
in
mov
je
lea
js
call
xchg
lods
fnstcw
inc
arpl
das
push
xor
pop
mov
mov
popa
push
inc
jae
cld
enter
mov
ret
daa
xchg
mov
xchg
add
add
shlb
in
pusha
pop
mov
ret
stos
aad
loopne
nop
adcb
dec
sbb
adc
inc
stos
and
mov
and
add
push
xor
xlat
cmp
gs
mov
mov
lcall
pop
pusha
insb
nop
mov
les
les
std
aaa
shlb
call
pop
sbb
add
or
in
pop
int3
flds
or
xchg
pushf
daa
imul
push
adc
push
mov
repnz
mov
test
sbb
mov
push
ds
popf
nop
xchg
clc
imul
mov
fcmovbe
dec
fsubrs
ret
movsl
mov
test
imul
imul
loopne
mov
and
ljmp
rorb
decb
pcmpgtd
inc
cmp
mov
rcrb
mov
fimull
divb
iret
adc
imul
pop
pop
sub
imull
es
es
adc
mov
pop
adc
sbb
leave
test
mov
inc
mov
loop
mov
mov
push
sbb
ret
sbb
xchg
insb
jns
xor
push
aad
mov
and
inc
xor
ficoms
insb
ljmp
push
xchg
rolb
pop
insb
in
test
add
lea
lods
mov
or
adc
dec
sub
and
mov
xor
dec
push
pop
aas
inc
mov
mov
sub
rcrb
or
and
ljmp
call
out
mov
loop
fcmovnu
enter
push
nop
inc
out
leave
aad
xor
add
rorl
loope
xlat
adc
jp
js
push
mov
fwait
lods
enter
add
mov
jp
dec
push
clc
pop
adc
roll
push
stos
or
jbe
pop
int3
dec
inc
mov
cmpsb
cld
mov
into
test
or
je
pop
mov
dec
lcall
test
cwtl
loop
push
inc
cld
xor
and
jle
in
insl
pop
mov
cmp
aam
sbb
sti
dec
icebp
fcomp
sbb
inc
add
mov
jnp
jno
std
loop
mov
inc
xor
std
mov
loopne
cmp
cmp
loope
notl
inc
push
dec
cmp
pushf
js
add
sbb
jle
cmpsl
cwtl
mov
in
les
dec
insl
inc
shr
or
hlt
or
imul
xor
mov
xor
jno
fs
and
adc
adc
dec
add
scas
scas
enter
daa
nop
xchg
xor
es
lea
jmp
movsb
push
addr16
lds
in
stc
pop
fdivs
push
fdivr
add
xchg
notl
fists
stc
jecxz
mov
mov
jno
sbb
xchg
repnz
mov
imul
lahf
xor
test
adc
pushf
cltd
mov
inc
ds
mov
mov
sbb
pop
sbb
mov
mov
xchg
cmpsl
hlt
xlat
in
push
shl
jae
adcl
dec
push
ret
dec
out
mov
adc
jmp
inc
sbb
xorb
and
jp
mov
inc
shll
ljmp
les
inc
loopne
jnp
xor
mov
pop
and
insl
lret
or
pop
jne
or
mov
jne
cmp
sarb
mov
enter
add
cli
jl
push
mov
inc
cmp
movsl
outsl
pushf
sbb
cld
cmpl
dec
fcoms
mov
arpl
jne
ja
jge
xor
adc
add
fwait
out
jmp
pop
jl
sahf
pop
dec
insl
push
and
mov
lcall
dec
in
lahf
int3
repnz
aaa
add
lods
add
sub
push
test
xchg
lds
faddl
data16
pop
inc
mov
sub
inc
push
xor
aam
jnp
hlt
or
xor
add
iret
int3
cmpsb
sub
mov
xor
stos
int3
sbb
loopne
sub
loope
es
in
in
pop
addr16
repz
insb
pop
pusha
lods
lods
jle
add
inc
inc
cmp
inc
fimuls
inc
rcll
jno
out
sti
sbb
pop
cmp
mov
mov
pushf
sahf
mov
sbb
int
add
xor
mov
clc
mov
jno
adc
xor
icebp
ljmp
js
sbb
xchg
push
test
pop
stos
sbb
mov
push
xor
dec
or
fucomi
cld
and
dec
sub
aad
pushf
movb
imul
pop
add
das
inc
into
das
cs
fstps
pop
cs
inc
adc
arpl
stc
add
jnp
repnz
and
sti
cmp
adc
jp
add
leave
iret
jecxz
pop
notb
jnp
leave
loope
jne,pn
dec
cmp
xchg
mov
push
jl
scas
gs
dec
xchg
aam
and
mov
jo
mov
pop
std
pop
addb
lcall
fbld
adc
mov
dec
lcall
push
adcb
in
aad
cmpsb
pop
jb
xchg
push
ds
out
pop
nop
cmp
dec
std
ret
jae
push
jno
test
lods
pop
lea
inc
aam
cltd
adc
in
mov
dec
sti
adc
fisubrs
push
pop
cmpsl
cs
js
mov
adc
dec
ja
inc
or
lds
clc
lds
add
aam
cmp
mov
shr
push
sub
push
mov
mov
mov
push
dec
pop
aas
lea
sub
sbb
repnz
mov
jae
pop
repnz
idivb
shrb
sub
xchg
jno
jecxz
xchg
insb
iret
add
aas
add
cltd
into
pop
pop
shlb
sub
pop
test
jbe
out
push
cld
les
and
mov
ficomps
sbb
cmp
loopne
data16
dec
jbe
xor
pop
in
jns
ja
mov
jne
call
dec
stc
mov
jae
dec
cs
xor
in
cmpsl
xchg
cld
rorb
loop
je
mov
mov
pop
mov
dec
leave
xor
mov
adc
cmp
add
sbb
inc
cwtl
add
daa
adc
pushf
or
sub
icebp
test
jp
pop
out
push
xlat
pop
test
push
rcll
cmp
cmp
add
inc
out
ficoml
test
jae
gs
stc
cmp
pop
push
inc
cmp
jae
addr16
pop
or
out
and
jb
push
mov
xor
mov
xor
divb
mov
jge
pop
or
pop
mov
sbb
xchg
out
cmc
xchg
es
push
xlat
shll
dec
adc
jmp
cmp
aas
leave
sub
pop
mov
es
mov
xor
fwait
or
mov
add
cwtl
mov
pop
enter
repz
push
inc
out
cmp
fisttpll
daa
mov
jo
das
ficompl
sub
dec
adc
scas
ffreep
or
repnz
aas
test
or
mov
push
and
sub
ljmp
arpl
ret
pop
jmp
rorl
int3
gs
imul
dec
sub
outsb
jnp
repnz
es
in
cmp
sbb
cmp
xor
mov
add
mov
cmp
div
inc
and
push
insb
imul
inc
out
je
fxch
icebp
aam
in
loop
or
inc
and
dec
jge
les
addr16
mov
push
or
loopne
pop
mov
mov
pop
aaa
xlat
orb
jp
sbb
fidivl
cmpsb
mov
and
notb
stos
push
jae
pop
imul
repnz
fldenv
clc
cli
aaa
outsl
call
loop
sbb
call
fdivrs
sub
movsb
lods
insb
div
call
add
mov
jno
stos
fistl
das
or
mov
idiv
fists
out
movsb
test
stos
mov
insl
jge
xchg
adc
cwtl
mov
popf
mov
or
dec
loop
das
int3
pop
inc
push
jecxz
mov
loop
and
leave
iret
fs
es
es
pop
jno
and
fdivl
idivb
and
imull
shrb
mov
lods
rcr
scas
sub
sbb
js
test
fs
or
mov
sub
dec
add
lea
sbb
adc
push
jg
mov
cld
iret
xor
jecxz
sti
fs
jge
pop
clc
fisttpl
sahf
test
call
call
pop
and
jbe
pop
mov
pop
jns
xchg
das
add
out
pop
mov
xchg
mov
fimuls
push
and
jle
repnz
mov
outsb
dec
enter
test
adc
std
xchg
adc
sub
ds
inc
test
push
arpl
cld
pop
and
mov
xor
mov
dec
jmp
insb
inc
jle
xchg
mov
mov
mov
es
or
xchg
das
inc
inc
sar
andb
or
stc
aam
cmp
mov
or
and
fdivrp
cmp
adc
test
sti
fs
xor
leave
jge
mov
insl
xor
cmpsb
repz
pop
mov
movsl
sub
xlat
dec
icebp
or
cmp
xchg
sti
aad
and
iret
lods
adc
leave
mov
pop
call
insb
mov
xor
test
xchg
xchg
push
daa
loop
xlat
lcall
aas
jo
out
cmp
pop
and
add
fimuls
cmp
push
pop
cmp
pop
jmp
and
and
add
shlb
fdivp
dec
jae
jb
inc
jno
test
lret
mov
sbb
subb
imul
mov
movsb
sarl
cmp
mov
adc
daa
jle
mov
inc
lods
push
push
movsl
aam
lock
mov
aaa
sti
mov
sbb
jp
add
test
dec
fs
out
mov
adc
or
xchg
xlat
sub
out
xchg
sub
lock
inc
mov
cld
es
sub
inc
gs
mov
sbb
pop
movsb
in
inc
add
mov
or
cmc
repz
push
push
jmp
popa
jl
add
aam
aas
neg
bnd
add
adc
xchg
lahf
repz
enter
push
mov
pop
cld
xorb
jecxz
sarb
movb
hlt
je
test
mov
jns
pop
lods
dec
pop
mov
adc
notl
cmpsl
sbb
mov
popf
pop
fsubp
fistpl
and
in
stc
dec
push
and
fs
and
sahf
xchg
cmp
mov
mov
lods
out
test
lea
popf
popf
push
je
rcrb
lcall
lods
cmp
sub
xchg
lcall
icebp
jae
repnz
mov
cwtl
dec
ss
rclb
push
jne
adc
in
jae
push
and
int3
add
and
gs
lods
cld
aam
inc
into
adc
push
pop
jbe
mov
jns
cld
pop
es
std
in
shlb
in
daa
xor
mov
push
cmp
jp
mov
jp
lock
cld
das
mov
and
add
pusha
sub
icebp
sub
mov
bound
out
negl
xor
repz
mov
sbb
add
leave
subl
lahf
add
daa
sbb
ja
xchg
push
imul
in
lds
lods
xlat
ja
push
push
sti
jl
adc
pop
push
movsl
jno
mov
or
in
fstps
insl
mov
adc
int
dec
ljmp
scas
mov
lods
ret
in
pop
sbb
adc
stc
gs
ficoms
rcrl
icebp
jg
push
add
fadds
fiadds
imul
outsb
mov
test
or
add
or
push
test
cwtl
dec
add
aas
aas
xor
cmc
popf
xchg
loopne
lods
mov
sbb
aam
sub
ror
mov
cmp
loop
sub
mov
cmp
or
popf
inc
xor
lods
xor
lea
fsubs
sub
or
cmp
mov
out
loop
loop
sub
sub
out
fcmovnbe
sub
outsl
adc
testl
ja
push
push
orl
adcb
cmp
mov
rorb
jne
sub
ficoms
cmp
outsb
popf
xor
out
xlat
sub
dec
lea
subl
shll
xchg
testl
into
sbb
ror
shl
rorb
inc
mov
ljmp
pop
cmp
and
sahf
mov
adc
shll
lock
out
jns
repnz
xchg
pop
dec
lret
lahf
jmp
popa
and
sub
pop
cmp
insl
stos
rcl
xor
mov
dec
in
mov
lahf
sub
mov
mov
imul
ja
test
icebp
or
ficoml
pop
movsl
in
negb
cmp
fbld
inc
movsb
cs
in
adc
mov
push
pop
insb
cmp
mov
aas
mov
fwait
insb
lods
pop
mov
xchg
sbb
pop
incl
lcall
adc
in
mov
cmp
inc
adc
mov
xchg
adc
test
testb
dec
add
sub
cmc
ret
pop
negb
fbstp
test
sub
sti
lods
push
add
add
mov
gs
daa
daa
dec
inc
mov
push
mov
pop
and
out
and
adc
push
adc
addr16
add
xor
and
pop
adc
mov
cmp
sar
in
mov
xchg
sbb
scas
cmp
popf
paddusb
xlat
hlt
xchg
xlat
pusha
ja
jnp
mov
jbe
mov
pop
cmp
sbb
sbb
aam
imul
xor
subb
call
data16
lods
mov
sbb
inc
pusha
pop
adc
insl
jl
dec
mov
sub
cmp
aas
in
mov
xchg
mov
fwait
push
mov
mov
pop
in
js
mov
mov
or
sbb
mov
hlt
rclb
imulb
mov
nop
cmp
scas
mov
mov
mov
out
push
popf
ljmp
push
gs
scas
xor
fdivrs
mov
sub
shrl
adc
sub
pop
sbb
push
cltd
xchg
jmp
imul
pop
xlat
sbb
xor
xor
push
stc
mov
or
push
imul
ret
mov
insl
aas
leave
cmc
add
xor
rcrl
movsl
push
push
mov
jge
ret
mov
cmc
jb
scas
dec
clc
adc
jmp
lock
xchg
push
inc
lret
or
or
testl
aas
push
out
scas
repnz
jmp
scas
jg
imul
xor
int3
hlt
xor
mov
jmp
and
aaa
mov
or
cli
pop
inc
xor
fdivl
leave
hlt
je
std
stos
test
dec
sub
adc
es
cmpsb
dec
xor
out
xor
es
ss
fstl
add
cli
outsl
cmpsl
ficompl
push
jge
pushf
inc
and
and
add
mov
adc
stos
outsl
ret
pushf
pop
pushf
bnd
jbe
imul
fistpl
push
scas
mov
cmpsb
ljmp
mov
loope
lock
xchg
hlt
mov
mov
or
test
adc
movsb
mov
mov
xlat
push
imul
mov
fcmove
jb
mov
jne
and
add
jne
push
aas
int
mov
fs
imul
stc
mov
lret
scas
inc
test
mov
addl
cmc
fadds
and
sbb
and
adc
test
xchg
iret
lcall
sbb
mov
in
cs
iret
dec
sahf
loopne
or
iret
mov
and
test
daa
data16
int3
xchg
lock
inc
push
mov
dec
ffreep
movsl
jno
xchg
dec
adc
or
mov
lret
adc
mov
test
cmp
push
gs
inc
inc
mov
pop
dec
iret
loopne
adc
xchg
nop
sub
loop
das
push
sbb
dec
and
loopne
dec
jmp
xor
andl
aaa
aad
cltd
movsl
cmp
fisttps
mov
adcl
inc
stos
sahf
pop
jge
mov
jne
rclb
cltd
cmc
jmp
sarl
xchg
mov
lods
push
in
mov
xlat
ret
imul
mov
inc
aaa
es
stc
imul
or
out
enter
shr
sub
mov
dec
pusha
push
insb
out
jge
mov
loopne
loope
mov
stc
fnsave
add
rcll
push
stos
out
and
clc
dec
add
shlb
int
sahf
jp
jl
icebp
sbb
mov
fstl
xchg
mov
mov
inc
inc
dec
stos
mov
dec
inc
insb
mov
loopne
pop
sub
jb
cwtl
push
cli
mov
jb
mov
std
dec
mov
push
push
mov
inc
leave
shlb
movsl
rcr
mov
cltd
popf
fmul
cmp
in
sbb
mov
pop
insl
imul
inc
lds
push
push
and
mov
outsb
xchg
es
fs
test
lret
sti
ja
pushf
dec
fsubl
push
add
adc
ljmp
inc
lods
repz
jbe
std
dec
iret
pop
dec
sti
stos
loope
jp
int3
icebp
mov
cmpsl
inc
mov
ss
jp
inc
clc
jae
insl
xchg
mov
sti
out
add
add
lahf
lock
ljmp
aas
sahf
jno
mov
dec
adc
pusha
mov
adc
jmp
out
sub
and
sbb
inc
jl
inc
add
stos
negb
bound
stc
mov
dec
aad
movsl
xor
jg
out
xor
insb
xlat
mov
in
cmpsl
pop
fldt
fwait
add
lcall
aaa
shll
and
and
xor
cmpsb
or
aaa
data16
rcrl
shrl
xor
ret
mov
cmc
xchg
out
loope
jl
imul
push
or
jno
lock
mov
cmpsl
pop
pop
test
clc
call
mov
xchg
sbb
stc
add
cltd
sbb
lea
jo
lret
cltd
sub
xlat
pop
lret
and
push
push
dec
movsb
mov
push
aam
jp
mov
rorl
mov
scas
pop
repz
mov
dec
sbb
sub
popf
pop
push
xchg
push
testl
inc
jg
sub
sbb
pop
lcall
pop
lods
cmp
mov
je
fisubrs
cmp
jbe
dec
imul
mov
mov
jg
cld
inc
les
mov
scas
cli
data16
cmpsl
jb
pop
aaa
mov
push
pop
fsubrs
hlt
xchg
add
cmp
into
xlat
mov
mov
xor
push
mov
inc
and
clc
mov
and
push
jp
shr
rcr
push
pop
cmp
fdivs
push
ss
lds
pop
mov
lds
pusha
mov
cmp
dec
and
sarb
into
jmp
sub
and
dec
xor
jne
xchg
jb
add
xor
push
inc
xchg
nop
sahf
mov
dec
xlat
adc
push
js
xchg
movsl
inc
repz
inc
xchg
stc
xchg
ss
xchg
popa
sbb
adcl
cmp
pop
jge
xor
lods
cmpl
adc
les
or
push
mov
push
setp
jmp
subl
cmp
dec
mov
jle
aad
imulb
sbb
dec
sub
cwtl
or
adc
je
dec
xchg
outsb
movsb
call
jae
mov
push
ljmp
fstpl
mov
stos
addps
xchg
daa
leave
add
adc
out
pop
dec
cmpsb
jnp
fstps
add
icebp
fnstsw
testl
push
ss
iret
mov
rcll
sahf
repz
dec
lods
cli
testb
ja
fwait
cltd
sub
fmuls
clc
jnp
data16
je
mov
adcl
cs
xchg
pusha
lret
inc
jmp
pop
cs
pop
mov
jnp
dec
mov
in
push
xor
psrlq
movsb
adc
mov
or
imul
and
jns
sahf
gs
sub
movsb
pushf
mov
jnp
adc
xor
lahf
mov
mov
pop
shll
test
and
inc
lods
sbb
scas
mov
int
xor
adc
aad
sti
lcall
cmp
cmp
popf
push
loope
jl
cs
adc
js
xacquire
inc
cmp
mov
add
dec
push
out
addb
sub
sbb
jo
jmp
repnz
mov
pminsw
add
xor
mov
jge
mov
pop
lcall
jge
call
add
sub
dec
sub
cmp
lahf
insb
nop
cmp
das
sbb
addr16
test
subl
adc
add
dec
jecxz
ret
and
daa
adc
mov
insl
pop
nop
cmc
je
loopne
inc
mov
adc
test
dec
add
lods
jo
inc
or
ljmp
and
bound
pop
cli
pop
adc
push
jb
repnz
mov
and
cmpsl
fcompl
jg
mov
xor
insb
xlat
add
adc
es
inc
nop
push
loope
js
mov
ljmp
sub
aad
xchg
jmp
insb
xor
pop
pop
xlat
mov
adc
jo
popf
dec
movsl
aam
dec
cwtl
les
outsl
add
mov
or
lock
rclb
loop
xchg
lret
movb
lods
lea
push
fnstcw
inc
inc
sbb
jae
push
and
pop
dec
aas
sti
inc
cwtl
js
jmp
xchg
and
sbb
and
sub
adc
mov
xchg
jnp
mov
insl
pop
popf
adc
shl
pop
dec
xor
add
xchg
inc
bound
push
lds
jl
sti
mov
add
xchg
xchg
repz
and
mov
movsl
mov
jl
xchg
test
mov
mov
pushf
rcl
jle
ja
bound
mov
fst
loope
aas
rorb
push
xchg
sbb
bound
stc
cmc
mov
sbb
lds
lcall
jb
dec
ja
pop
sbb
dec
movsb
or
lcall
dec
add
call
stos
js
ds
cmp
arpl
cli
push
xor
fiadds
movsl
cmc
subps
pop
jge
or
cltd
js
incl
cmp
mov
cmpb
mov
xchg
inc
push
add
pop
cmpsl
shll
in
paddsb
test
ljmp
pop
mov
mov
cmpsl
sbb
mov
push
mov
adc
jo
sbb
mov
dec
cwtl
data16
loopne
iret
outsb
xchg
movsb
add
or
cmpsb
lret
rolb
jl
into
xchg
mov
ljmp
jne
pop
out
adc
pop
add
cwtl
adc
ret
ss
out
or
xchg
lret
lock
sub
xchg
fsubrs
inc
jg
pop
push
decb
fmull
adc
jg
sbb
pushf
jp
push
popa
sbb
pop
std
popf
popf
movsl
push
sti
and
mov
je
pop
fcmovu
pop
mov
xor
fistpll
imul
std
inc
movsl
cmpsl
add
rolb
or
dec
sbb
faddl
xor
or
xlat
jecxz
int3
xor
mov
in
mov
ret
fstpl
and
jne
imul
aam
inc
mov
jns
jnp
out
mov
lock
and
and
imul
lcall
or
in
sti
sbbb
testb
lahf
mov
or
fiadds
jecxz
lods
cmpsl
inc
decb
cltd
add
rclb
inc
cmp
xchg
outsl
dec
xor
jno
imul
inc
arpl
sahf
or
push
inc
mov
cmpsb
inc
inc
cwtl
aam
xchg
mov
outsl
fnstcw
adc
inc
xchg
add
fists
sarb
roll
mov
push
or
dec
movsl
mov
push
xlat
into
loop
ljmp
mov
sahf
push
xor
dec
aad
cmp
xor
stos
adc
cmp
aad
dec
sub
sbb
jns
adc
idivl
sbb
cmp
std
gs
lock
loopne
pop
je
jle
movsl
inc
mov
ljmp
pop
call
push
rcll
cli
es
xchg
cli
js
jnp
mov
sahf
aaa
adc
mov
or
mov
hlt
int
dec
shlb
movsb
cltd
sti
fidivl
fs
cmc
in
push
inc
js
fldt
sbb
xchg
mov
pop
popa
adc
cs
jnp
call
movsl
dec
push
sti
jbe
add
mov
dec
ds
and
inc
sahf
cli
jle
mov
mov
cmp
out
push
ljmp
pop
xchg
push
lea
jns
or
insb
addr16
loop
inc
push
add
dec
add
sahf
stos
outsb
nop
iret
dec
popf
xor
adc
shll
test
inc
mov
xchg
stc
xlat
sub
pop
mov
stos
inc
sbb
das
int3
mov
dec
cwtl
add
cmp
outsl
data16
nop
arpl
sbb
jecxz
jae
xchg
xchg
sub
in
outsb
bound
sbb
test
cmp
inc
sub
or
mulb
outsb
jl
ss
sub
or
mov
push
out
ficoml
mov
mov
push
std
insl
dec
jns
dec
scas
xor
imul
and
stos
mov
xor
pop
cmp
daa
test
xchg
pop
or
sbb
mov
or
add
push
sbb
in
into
cld
pop
pop
xchg
cs
mov
mov
stc
movsb
mov
sbb
dec
movsl
loope
aaa
and
out
mov
mov
and
repz
ficomps
sbb
mov
loope
sbb
outsb
mov
fidivs
jle
aam
fldl
test
xor
xchg
and
lock
pop
mov
adc
shr
mov
xchg
rorl
ss
test
ja
mov
mov
cmpsb
jae
pusha
loopne
sub
jbe
or
and
hlt
cmp
dec
rcrl
add
adc
push
jge
jns
pop
dec
sbb
cmp
mov
fwait
and
rorl
repnz
outsl
nop
lods
pop
iret
sbb
xor
pop
or
push
inc
call
cwtl
push
aam
sar
pop
mov
pop
pop
ds
out
mov
mov
jns
jns,pt
jmp
mov
out
cmp
inc
jl
call
adc
adc
pop
ficomps
jp
shlb
inc
lcall
in
inc
adc
sbb
out
ror
rclb
inc
pop
inc
test
inc
in
enter
mov
insb
je
bound
or
pop
or
sub
icebp
jp
ljmp
movups
sub
in
ss
pop
inc
test
rorb
cmp
out
sbb
in
mov
xor
out
push
mov
or
mov
xchg
adc
sub
jge
xor
jne
fstps
and
inc
mov
mov
ljmp
xchg
or
mov
cmp
jg
xor
decb
bound
lea
ss
sbb
mov
jmp
inc
shll
cmp
dec
push
test
push
xchg
cmpsb
in
push
pop
pop
out
sub
daa
int3
cmp
enter
xchg
jae
out
mov
add
xchg
jo
and
mov
lret
mov
push
xor
push
dec
xor
or
mov
xchg
jbe
mov
iret
and
add
stos
add
in
pushf
adcl
fbstp
je
push
inc
or
or
mov
mov
enter
ret
rcl
imul
xchg
movsl
cs
mov
push
aas
or
pop
pop
test
rcrb
jg
xchg
push
popf
push
sub
inc
pop
inc
xor
test
andl
aaa
mov
add
xchg
dec
rclb
ret
lea
ficoml
pop
pop
jns
jne
mov
addl
push
mov
inc
addr16
fxch
repz
add
ret
mov
and
add
sbb
iret
push
mov
or
add
mov
setne
jecxz
popf
enter
stos
add
jecxz
pop
or
rep
or
ds
mov
push
pop
pop
cltd
call
mov
addr16
jmp
pop
ja
bound
inc
mov
rcrl
jo
pop
repz
mov
es
das
shl
cmc
push
mov
dec
scas
fidivrs
pop
sub
add
jbe
mov
add
dec
fnsave
jp
push
cmp
scas
icebp
xchg
and
out
lahf
in
arpl
inc
xchg
iret
repnz
lcall
test
and
inc
sub
pushf
adcl
xchg
sub
mov
jecxz
mov
sub
pushf
add
loope
push
sub
xor
dec
pop
jg
sahf
shll
lea
sub
es
out
mov
jg
mov
and
and
sbb
in
inc
dec
push
cmpsl
xchg
icebp
loopne
sub
lret
jns
outsb
sub
pusha
test
pusha
mov
test
mov
and
ja
rcrl
lcall
dec
dec
gs
sbb
xor
jecxz
mov
jbe
outsl
push
xor
pop
xor
loop
shl
jb
imul
mov
popa
aas
clc
pop
repnz
sub
xchg
pop
test
xchg
add
inc
dec
dec
jmp
ret
in
xchg
rcrb
sar
cmp
mov
pushf
sbb
mull
popf
jo
insl
or
xsha256
xchg
adc
fidivrl
and
pop
gs
xorl
movsl
and
out
cmp
sarl
mov
jmp
cmp
cli
inc
in
mov
add
addb
jecxz
jns
aas
mov
cmc
in
into
sub
push
sub
inc
inc
insb
mov
sub
xchg
jp
mov
cltd
pop
push
dec
in
and
jl
mov
fs
into
out
imul
cwtl
icebp
pop
sub
lcall
mov
stos
stos
xchg
fsub
xchg
fstp
test
loopne
lcall
out
filds
movsl
lcall
out
mov
mov
jb
xchg
clc
mov
into
sbb
scas
xchg
xor
ja
cmp
out
imul
sbb
rcll
pop
push
je
cwtl
mul
sub
or
push
mov
push
jl
outsl
fistps
pushf
adc
pop
jl
cmp
pop
mov
ds
ds
dec
aad
outsl
jmp
jl
icebp
andb
pusha
mov
pushf
mov
mov
imul
pushf
dec
lods
push
mov
inc
mov
adc
js
mov
mov
nop
add
cld
imul
mov
sbb
dec
jge
adc
mul
push
aam
imul
cltd
in
xchg
lahf
xchg
push
push
out
dec
and
and
fs
jbe
or
xor
int3
in
shll
aam
loop
pushf
cmp
iret
inc
ficompl
stc
mov
mov
mov
aam
push
ljmp
cmp
popf
repnz
cmp
or
lret
clc
add
inc
jecxz
scas
enter
jg
sbb
ret
lds
call
mov
je
or
rolb
movsb
sbb
mov
inc
sahf
shl
push
cmp
sbb
jne
push
icebp
pop
movsb
add
mov
cmpb
add
adc
jne
les
aad
cld
shlb
mull
xchg
std
in
outsl
ret
lea
pop
jbe
cmpsl
mov
stos
xchg
cmp
cmp
push
loop
pop
shl
push
sub
push
in
push
push
cmp
outsl
mov
adc
inc
sbb
ljmp
fs
mov
sbb
movsb
sub
dec
imul
ja
push
test
push
xchg
in
mov
mov
and
add
aaa
push
fisttps
xorl
shlb
dec
jnp
js
fisttpll
inc
add
lcall
fidivrl
jnp
xlat
pop
dec
mov
iret
mov
jge
push
push
fdivr
hlt
jo
xchg
jb
xor
xchg
mov
dec
mov
xor
js
jecxz
push
nop
ret
xor
jecxz
cs
roll
pop
cmp
adc
or
rcrl
pop
xchg
cld
insl
out
inc
mov
xor
jp
mov
int
inc
pusha
jnp
test
in
xchg
movsl
frstor
cmp
das
sub
inc
aam
sti
pop
lret
mov
xchg
idiv
cmp
inc
push
cltd
ret
inc
push
jnp
inc
push
mov
lcall
outsb
insl
xchg
jb
cmp
xchg
inc
push
mov
lea
aad
mov
pop
arpl
outsl
loopne
sub
push
jge
inc
ficoml
and
mov
in
inc
adc
dec
mov
fnstenv
jl
jns
cmpsb
das
bound
rcrb
fwait
cs
outsb
aam
fisttpll
inc
xchg
je
cld
gs
mov
cmp
jae
mov
pop
std
adc
lds
xchg
cmc
sbb
xor
rcll
inc
xor
mov
xchg
or
cld
mov
scas
loope
mov
test
and
das
adc
add
ret
adc
cwtl
mov
hlt
rcrl
aam
sbb
dec
and
push
pop
int
and
lahf
xor
clc
jmp
push
into
fisttpl
inc
aam
shlb
push
in
int3
aas
fstpt
enter
loop
mov
mov
mov
imul
sbb
or
mov
into
add
nop
sub
in
daa
cmpsl
cltd
sub
xchg
xchg
xchg
pop
dec
ja
pushf
in
outsl
and
adc
sarb
mov
lods
imul
cwtl
mov
mov
icebp
adc
or
push
imul
jbe
ja
add
sub
stc
popa
js
inc
pop
mov
inc
inc
add
adc
ljmp
push
mov
daa
movsl
cmp
or
in
sahf
aaa
sbb
sbb
arpl
push
xlat
outsb
or
dec
notl
outsb
clc
sub
pusha
pop
sbb
push
pop
cmp
jno
ja
insl
xchg
cmp
push
xchg
cmp
inc
cli
adc
lret
dec
xor
xor
fiaddl
mov
cmp
dec
fbld
frstor
push
out
into
inc
cmp
scas
or
xor
inc
scas
test
jmp
add
mov
mov
int
xchg
cmp
and
fidivs
addr16
cmpsb
mov
cld
lea
and
mov
out
jo
mov
js
or
testb
out
and
arpl
cs
mov
leave
push
sahf
jnp
jle
and
mov
aas
pop
add
push
lret
test
imul
ja
add
arpl
shl
lcall
xor
inc
jae
xchg
jbe
insl
mov
popa
cmp
pop
data16
adc
and
sub
xchg
and
sub
out
pusha
xchg
lock
jae
and
daa
and
bound
test
push
sbb
stos
jbe
mov
lds
xchg
or
ret
push
repz
pop
lcall
xchg
cltd
mov
push
pop
lea
std
push
aas
cmp
inc
nop
std
jecxz
jb
add
xor
nop
mov
cmpsb
into
push
out
movb
repz
adc
jne
cmp
das
mov
mov
and
dec
into
mov
shlb
adcl
push
pushf
sbb
enter
loopne
pop
and
cs
addr16
pop
sub
adcl
sti
or
xchg
fsts
outsb
popf
push
push
int
sti
sub
and
adc
xchg
push
inc
inc
pushf
ret
lods
test
testl
dec
and
jnp
jl
jo,pt
inc
mov
xchg
inc
jne
test
jle
mov
or
loop
out
enter
cs
insb
or
divl
addr16
xchg
push
cmp
sub
repnz
dec
loopne
mov
test
push
jnp
fmuls
aaa
stos
cmpsl
insb
xor
test
js
inc
ja
in
pop
inc
sbb
cmpsb
inc
lret
fcomps
inc
xchg
loopne
add
inc
jae
mov
insb
cli
insl
das
aaa
mov
dec
inc
loopne
push
jmp
jne
incb
shrl
test
push
out
push
test
out
pop
push
jns
sahf
cmc
ds
pop
repz
cli
mov
lret
xchg
cli
jnp
jno
mov
cmp
push
aad
stos
mov
cwtl
repz
mov
add
ljmp
mov
xlat
xchg
sub
mov
lret
xchg
std
jecxz
fcomip
and
out
sub
das
dec
sub
lret
dec
ljmp
add
xchg
pop
fldt
cmpsl
iret
ljmp
pop
jmp
std
das
decl
jno
ret
shlb
dec
mov
das
mov
mov
add
add
fdivrl
inc
mov
jg
mov
cmp
ja
jl
jmp
in
sub
and
pop
call
ret
inc
gs
shlb
fnstsw
jp
cli
inc
stos
jnp
lcall
push
in
mov
repz
dec
pop
ret
jl
rorl
fs
out
test
mov
cwtl
in
jle
ret
sbb
mov
test
sbb
xor
popf
sahf
mov
and
xchg
sti
and
push
imul
stos
rolb
inc
pushf
dec
fnstsw
iret
jo
cmp
mov
imul
pop
popf
lods
dec
xchg
sub
xor
loopne
call
aaa
flds
mov
dec
dec
sbb
sti
jns
adc
pop
fs
and
and
into
sub
jecxz
lock
sub
movzbl
aas
mov
ds
mov
jne
mov
mov
add
inc
xchg
mov
clc
xor
lock
or
xchg
in
lods
add
cmp
ss
stos
repz
cld
push
iret
sbb
fdivrs
lcall
shll
sbb
mov
addr16
in
js
ficomps
adc
je
fidivrs
sbb
fstl
xchg
dec
dec
jge
pushl
clc
je
xchg
mov
jecxz
repz
dec
jbe
jae
xchg
mov
andl
outsl
cmp
ficoms
jne
lret
xor
cmc
adc
adc
adc
in
mov
mov
cmp
into
mov
mov
push
popf
aad
loopne
clc
pop
jmp
push
cmpsl
call
pop
dec
push
pop
xor
inc
andl
mov
insl
fcomi
ret
mov
xchg
or
cwtl
fnsetpm(287
xor
jl
rolb
test
sub
ror
add
daa
pushf
push
arpl
inc
cmp
rcr
add
and
push
out
mov
push
inc
lock
xchg
lret
sbb
push
jg
jl
int
addb
inc
cmp
cltd
test
int
pop
pop
pop
mov
jbe
cmp
ss
pop
sub
jb
push
push
adc
cmp
jecxz
xlat
cmc
pushf
mov
pop
mov
mov
scas
jle
sbb
cli
jb
pop
out
mov
jmp
in
xchg
xchg
mov
movsl
mov
push
insl
push
cmp
pop
movsl
popf
js
inc
mov
push
sub
dec
push
adc
sbb
ficompl
pop
push
sbb
inc
cmp
mov
imul
ret
xor
es
jo
clc
lds
lret
xchg
repnz
lret
pop
ja
aas
call
sti
mov
and
ret
ret
cmp
cmp
dec
out
sbb
nop
sbb
jo
fdivrl
jp
out
outsb
lock
mov
push
out
mov
sbb
mov
jne
and
add
jl
lods
cmp
cwtl
push
sahf
movsl
ret
dec
jp
xor
xchg
lods
or
out
cmp
xlat
push
add
hlt
sbb
fstpl
lods
push
mov
jmp
movsl
cmp
repz
ficompl
inc
mov
adc
lods
jg
repnz
test
fxch
out
fbstp
loop
movsl
adc
jle
cwtl
mov
cwtl
ret
ljmp
xchg
arpl
addl
sti
xchg
cmp
in
cld
scas
ja
stos
add
ss
scas
push
mov
mov
mov
repnz
cmpsb
inc
lds
aad
aam
jnp
adc
pop
in
mov
or
testl
push
cmp
xor
outsl
mov
and
jg
inc
mov
out
fpatan
clc
xor
ja
xchg
ret
rcrl
sub
dec
jg
lret
mov
push
testl
sbb
es
xchg
cmp
shlb
je
lcall
repnz
fldenv
pop
lea
fmul
xchg
cmp
pop
jmp
call
hlt
ss
repnz
pop
inc
pop
out
out
push
dec
fidivrs
mov
adc
stos
pop
and
or
fcompl
sub
lahf
jae
dec
pop
movsb
dec
cmp
adc
and
sbb
cmp
jge
xchg
cltd
mov
enter
add
mov
ja
mov
xor
inc
out
inc
mov
lock
inc
dec
shlb
jne
pop
jno
insl
mov
jg,pn
idivb
adc
out
repz
pop
cmpsb
mov
enter
pop
push
mov
jnp
add
arpl
lock
jno
push
enter
aam
mov
je
mul
lea
and
xor
pop
dec
add
into
movsb
das
add
jl
enter
mov
fildl
mov
lret
adc
sub
cs
sub
aam
add
jecxz
and
fidivrs
mov
out
jbe
pop
push
jns
lods
inc
stc
ja
mov
repz
insl
popf
push
jb
or
sub
jle
add
inc
arpl
xor
add
sub
xchg
xchg
xchg
dec
xchg
dec
outsb
sub
mov
cmp
mov
mov
addb
xchg
and
lret
sarl
or
and
cmpsl
pop
xchg
cmp
stc
lods
stos
ss
pop
adc
test
push
or
pusha
std
sbb
jle
mov
inc
arpl
int3
loopne
addr16
ficoml
xor
fs
or
pmulhw
ror
pop
and
jecxz
mov
fwait
cwtl
inc
xchg
rol
or
in
push
dec
jb
les
in
pop
aas
jo
aaa
sbb
pop
mov
dec
sbb
movsl
lahf
inc
cmp
adc
cmp
hlt
add
stos
pop
lahf
or
sbb
das
xchg
mov
mov
outsl
movsl
lods
aad
fmull
pop
addb
sub
mov
and
mov
into
push
lea
adc
pop
cmp
js
push
in
and
cmp
inc
pop
mov
and
inc
pusha
dec
xchg
fisubrl
inc
lods
loop
add
hlt
cld
test
mov
shl
retw
cld
cmpl
outsl
dec
xchg
les
add
rclb
jbe
in
push
cld
dec
ror
scas
push
nop
ficomps
xchg
out
jb
jbe
adc
or
mov
sbb
fsubs
push
ret
lock
sbb
dec
addb
call
fadd
or
lret
lods
insb
pop
sbb
cwtl
dec
leave
shlb
test
daa
clc
je
and
xchg
shrb
fiadds
pop
lahf
mov
sub
dec
sbb
pop
lea
mov
mov
mov
add
sub
popa
call
pop
xor
repz
xrelease
loop
xchg
loope
test
pop
mov
adc
mov
inc
scas
push
enter
in
loope
popa
or
sbb
out
cmpsl
cltd
mov
or
xrelease
pop
loop
xchg
mov
dec
mov
and
jo
cmp
les
adc
xchg
fdivrs
add
xchg
mov
pop
pop
sahf
dec
scas
cmp
in
loope
sub
sub
and
pop
fs
jmp
fistl
mov
sbb
rol
mov
xchg
cmp
inc
stos
ss
mov
pop
mov
sarl
addr16
cwtl
aas
pop
rorb
mov
ljmpw
in
imul
push
adc
jnp
ret
inc
dec
lahf
mov
mov
jbe
fs
adc
stc
push
cmpsl
in
fnsave
dec
dec
jae
xchg
add
cmpsb
add
xor
sub
aad
nop
std
mov
popa
mov
sti
sub
shl
and
test
fisttpl
push
outsl
or
clc
aam
popa
jg
or
fstpt
insb
inc
jne
adc
pusha
aam
xor
pusha
xchg
lea
or
in
xor
fcmovnbe
mov
add
cmc
mov
xchg
push
data16
adc
lret
loope
fnstenv
dec
push
aaa
mov
push
ret
push
pop
mov
mov
pop
pushf
ret
orl
dec
mov
nop
cmpl
pop
and
mov
int3
push
rcr
cs
imul
cmp
jg
lcall
mov
mov
xchg
idivl
loop
mov
fnsetpm(287
pop
aad
sub
push
lret
and
ret
xlat
int
and
or
push
nop
data16
adc
sub
xorl
lods
stc
jp
stos
mov
fstpt
mov
jbe
les
adc
jb
mov
or
mov
cmp
push
ret
fsubrl
ja
push
lods
push
loopne
fistpll
stos
cmp
sub
sarb
xlat
and
js
inc
add
xor
cmp
nop
cmc
inc
mov
push
jb
sub
lea
or
xor
mov
decl
adc
in
sbb
fcomip
push
jne
and
xor
lahf
rcrl
lea
push
pop
mov
call
test
and
stos
rcll
jmp
and
inc
xchg
xor
dec
aam
es
mov
arpl
das
push
jg
in
jnp
and
xchg
cltd
inc
xor
push
std
inc
mov
jg
insb
lret
pop
mov
dec
mov
hlt
dec
clc
not
enter
aaa
adc
mov
std
lods
mov
leavew
jge
iret
pop
lds
test
mov
xchg
mov
insl
sbb
sbb
aas
jmp
roll
mov
or
sahf
or
sub
ljmp
add
call
test
lcall
out
mov
clc
pop
xor
lahf
or
push
inc
out
leave
bound
inc
orb
stos
lods
dec
add
adc
sbb
jo
pop
into
mov
mov
sub
pop
sbb
pop
outsb
out
dec
cli
cmp
shlb
sub
jmp
cwtl
test
or
pop
inc
leave
stos
mov
xor
push
or
mov
loop
jl
hlt
xor
cmp
iret
push
xor
jl
adc
js
and
imul
and
sbb
mov
leave
push
mov
shl
gs
push
js
cs
in
mov
lahf
cs
jp
jo
xchg
rcrl
jb
fcomip
stc
lea
aaa
shll
or
iret
sub
testl
ret
push
fdivrs
sbb
push
out
xor
cltd
test
adc
lea
mov
pop
sub
mov
sbb
push
fwait
icebp
aaa
jg
inc
xchg
add
push
js
push
repnz
jae
mov
mov
dec
fidivs
push
mov
mov
iret
cmp
sub
adc
ljmp
add
dec
or
outsb
mov
iret
out
movb
pop
es
cltd
fsubs
pusha
pop
out
pop
cwtl
fistps
add
ficompl
popf
fcmovnbe
jns
mov
xchg
rcrb
andb
aas
cmp
fwait
aas
mov
pop
xor
sbb
mov
xchg
clc
jns
jge
push
aam
pushf
test
or
mov
adc
sti
adc
dec
cmp
sub
pop
test
push
fidivrs
xchg
test
pop
das
rorl
out
jmp
in
sbb
sbb
pop
pop
rcl
pop
or
jne
repz
pusha
or
cmpsb
push
aad
adc
stos
mov
push
lods
lcall
add
mov
imul
mov
loopne
fldt
pop
lock
adc
or
fcoml
dec
push
aaa
mov
fmull
je
cmp
inc
gs
jno
adc
mov
jecxz
or
cmp
cmpsl
les
or
push
dec
dec
cmp
dec
scas
sub
add
aaa
scas
hlt
inc
sbb
sbb
jecxz
scas
repnz
pop
mov
mov
and
add
sub
pop
mov
arpl
jge
notrack
sub
pop
ds
or
jp
mov
push
les
xchg
jl
cwtl
rcr
outsb
loope
rcrl
test
cmpsl
pusha
xchg
pop
pop
insl
xchg
aaa
and
mull
pop
lods
loopne
xchg
pop
mov
pushf
pop
imul
adc
sbbl
xor
add
out
ret
test
scas
xchg
stc
mov
orl
rcrl
xor
sti
data16
dec
add
cmpsl
pop
imul
inc
aaa
adc
inc
mov
cmp
test
mov
and
sbb
loop
cmpsl
in
cli
xlat
add
in
movsl
into
sbb
addb
sbb
inc
cmp
cmc
mov
fmuls
rcrl
and
jp
push
jmp
xchg
cwtl
ja
int3
popa
or
rorl
push
test
mov
outsl
sub
jbe
loope
loopne
inc
inc
inc
pusha
inc
jbe
adc
out
or
pop
or
testl
lahf
jno
daa
lea
jno
sbb
add
out
or
imul
insl
jle
inc
stc
mov
mov
sub
sbb
mov
and
cmp
jg
mov
lods
pop
jmp
push
adcb
mov
stos
sbb
mov
jg
testb
cmp
and
iret
pop
lds
cmp
aas
int3
les
in
stos
push
mov
fsts
jecxz
add
mov
sub
xor
or
out
mov
dec
jecxz
push
lods
scas
stc
sbb
push
scas
pop
and
pop
loop
jecxz
xor
nop
fnstsw
cltd
mov
xchg
in
das
or
lds
lods
mov
and
outsl
inc
push
ret
mov
and
aas
insl
jnp
cwtl
popf
cmp
add
lods
and
dec
mov
ret
lods
adc
add
pop
into
out
xlat
mov
mov
xchg
mov
xchg
out
cwtl
stc
lret
mov
or
mov
mov
jg
loop
mov
dec
xchg
xchg
ss
enter
push
mov
lea
in
jae
test
lods
pusha
cli
dec
jge
and
jmp
stos
cmp
iret
inc
or
into
movsl
out
mov
stc
aas
adc
xor
stc
adc
mov
jo
loopne
pop
imul
cmp
push
pop
dec
add
mov
andb
rolb
cmpsl
or
pop
add
xlat
addr16
lods
pusha
ja
cmpsb
pop
jbe
sbb
add
and
stos
add
ret
add
or
jo
aam
leave
adc
popfw
lahf
rorl
jmp
inc
cmp
adc
stos
aas
and
arpl
push
adc
xlat
cwtl
outsb
iret
pusha
in
pop
dec
lret
jecxz
or
fidivrl
jnp
std
and
xor
mov
insl
in
jbe
mov
iret
cmp
out
je
cmc
call
add
push
dec
adc
sub
or
mov
clc
cld
in
je
or
pop
adc
pop
push
sti
les
jo
inc
add
cwtl
cmpsl
subb
outsb
sbb
push
ret
cltd
cmpb
add
inc
jno
out
call
imul
sub
out
stc
inc
xor
xchg
lods
fdivr
fninit
adc
cld
pushf
arpl
add
jg
dec
lds
pop
mov
loop
out
movsl
aaa
push
cwtl
aas
mov
or
rolb
out
mov
test
mov
push
roll
jnp
lcallw
shlb
mov
add
push
sbb
cli
pop
mov
stos
xchg
cmp
shll
shlb
dec
ret
mov
out
dec
sbb
imul
jge
test
mov
and
lea
pop
test
lea
push
sbb
movsl
call
push
sbb
push
pushf
leave
mov
sub
sub
ds
cmp
jb
dec
insb
dec
mov
mov
lods
pop
cwtl
mov
adc
or
or
fdivs
jmp
and
inc
ds
inc
cld
push
push
sbb
sahf
or
incb
mov
xchg
jmp
mov
pop
in
xchg
fwait
movsb
mov
inc
sub
fs
outsb
mov
sbb
pop
mov
outsl
sub
mov
dec
fnsave
test
pop
cmp
and
and
pop
sub
push
and
push
cmpsl
lock
popf
dec
xor
sbb
cmp
stos
daa
popf
push
int
mov
push
fdivrs
cmpsl
mov
insl
inc
call
jmp
popa
or
lret
fsubl
cmpsb
xor
jb
mov
dec
xor
sbb
fdivl
pop
lea
in
xlat
movsb
xchg
addr16
cmp
inc
fcoms
leave
xchg
cmp
mov
repz
push
repnz
or
add
push
mov
jae
cmp
dec
sub
xor
jle
fwait
adc
loope
and
mov
push
inc
aad
pop
repz
sub
pop
sbbb
cli
loopne
pop
cmc
pusha
xor
fimull
fwait
js
jbe
sub
and
aas
xor
loop
push
mov
xor
mov
sbb
lods
jmp
int3
mov
cmpsb
push
xchg
out
sbbb
pop
xchg
and
dec
and
daa
lret
aam
jge
xor
dec
arpl
mov
mov
cltd
push
pop
add
pop
sahf
movsb
jle
mov
xor
xchg
ljmp
add
and
add
rol
lds
imul
test
aam
repnz
dec
sub
in
dec
push
int
or
push
jbe
arpl
das
mov
adc
jg
sahf
jb
jb
and
push
shll
pop
mov
cli
pop
inc
imul
jl
cmc
test
xchg
sti
push
pop
lods
or
mov
and
mov
loop
mov
or
xchg
in
push
or
lock
sti
aam
std
dec
dec
gs
test
jmp
je
cmp
push
xchg
cmp
sub
mov
test
test
pop
dec
and
orb
adc
outsl
loopne
add
lcall
add
push
dec
lahf
cmp
js
cmc
pop
sub
and
sahf
popa
ret
popa
sti
add
popa
xchg
leave
int3
cmpsl
test
cmpsl
and
mov
pop
xchg
push
negb
mov
jnp
mov
pusha
adc
out
cmp
sub
scas
icebp
shll
out
bound
andb
push
mov
xchg
sahf
jmp
xor
repz
out
sub
jp
out
mov
xchg
mov
xlat
in
pop
jno
cld
or
sub
mov
jle
imul
inc
addr16
setp
jmp
aas
fisttps
lds
inc
pop
fdivs
mov
adc
imul
andl
imul
xor
lea
cmp
mov
mov
and
lds
dec
xchg
ficomps
push
mov
fcoms
insl
xlat
jae
in
repnz
or
je
testb
icebp
jnp
repnz
jb
xor
ss
mov
test
outsl
jnp
divl
xor
jae
cmpsl
pop
imul
dec
xor
cmc
pop
sbb
mov
xchg
mov
data16
adc
das
push
adc
lds
mov
outsl
lret
or
cltd
jp
out
add
arpl
repz
pop
shll
scas
push
or
mov
fisubrl
dec
sub
xchg
adc
orl
jp
ret
fmuls
or
mov
repz
push
xchg
xchg
mov
cwtl
pop
aad
jmp
test
das
jb
shrb
jl
xchg
mov
dec
xchg
mov
les
fstl
mov
test
pop
add
dec
pop
aas
fs
dec
xchg
push
imul
push
xchg
insb
lea
call
incb
ds
mov
mov
add
in
imul
push
xchg
js
pop
aam
movnti
hlt
jae
and
push
insl
or
and
add
cmp
rorl
loope
mov
xchg
dec
inc
dec
fistl
ficompl
mov
sub
imul
inc
lds
dec
mov
inc
cmc
dec
inc
mov
dec
dec
cli
mov
imul
push
pop
scas
xlat
int
in
and
insl
xor
fists
push
dec
gs
xor
divps
aad
out
test
dec
cmpsl
sbb
in
inc
rorl
and
lcall
sub
xchg
mov
xchg
push
jp
bnd
rol
aas
xor
cmpsb
dec
xchg
scas
out
dec
jb
adc
lock
xlat
inc
daa
ret
mov
fs
lods
scas
sbb
and
cmp
dec
xchg
test
or
mov
pop
add
cli
mov
cmp
ljmp
out
push
fistpl
repz
popa
aas
sbb
in
jnp
or
outsl
add
lcall
pop
loope
ret
or
adc
jecxz
xor
adc
lods
push
adcb
fldz
test
pusha
and
mov
push
mov
ljmp
test
dec
mov
insl
cs
movsb
pop
xor
add
xor
push
stos
and
xchg
inc
test
sub
test
cld
pop
sbb
add
adc
lock
add
mov
sbb
and
add
jo
jbe
ret
mov
adc
lret
sub
rcll
xchg
mov
dec
addr16
fcmove
leave
mov
test
dec
in
cmp
jnp
aaa
pop
push
int3
ss
test
or
adcb
sub
fcomp
fs
adc
sub
xor
sbb
imul
xlat
mov
jbe,pn
out
or
divl
jns
jne
subl
repnz
cld
inc
mov
or
stc
pushf
es
sub
mov
test
data16
xor
ret
lcall
push
loop
mov
sub
or
mov
xchg
test
rorb
sub
sbb
sbb
ret
out
fwait
dec
aas
or
loope
adc
fldcw
pop
ja
stos
or
nop
and
ret
cmp
rcrb
or
icebp
xchg
cmpl
es
sub
mov
mov
lea
push
mov
mov
into
sbb
ds
ror
dec
adc
loope
repnz
lds
and
jns
mov
xchg
lods
rcr
xor
rolb
push
sub
mov
pushf
fcomi
jecxz
imul
sbb
scas
inc
mov
sub
sub
rclb
and
loopne
cmp
gs
inc
inc
dec
in
push
call
jl
ss
repz
mov
push
add
or
das
mov
or
lock
sub
add
rcr
xchg
arpl
push
fbld
or
outsl
push
stos
pop
insb
adc
xor
out
dec
repnz
xor
jmp
call
dec
pop
mov
sbb
out
test
jnp
push
inc
push
ret
push
ret
lods
fldcw
xchg
lock
add
sbb
jle
fcoml
jp
outsl
sbb
mov
stos
iret
dec
fistpl
or
hlt
out
mov
test
test
xchg
jmp
popa
cwtl
xchg
nop
loopne
int
sub
sbbl
pop
shlb
push
je
loope
fs
lahf
pushf
arpl
lea
add
iret
scas
and
ds
pop
pop
dec
push
sbb
test
in
aaa
popf
aaa
jae
dec
movsb
cli
call
jp
xor
jecxz
mov
jae
and
sahf
or
imul
lret
sub
iret
sti
sub
cmpsl
xchg
imul
decl
dec
sbb
bound
xchg
xchg
jmp
shlb
shr
cld
js
cld
dec
leave
aas
fcoml
icebp
xor
mov
jle
lods
pop
imul
ss
int3
cmp
shll
fs
call
add
je
sub
arpl
cli
mov
push
imul
mov
add
mov
push
imul
adc
push
pop
cmp
pop
cmpsb
inc
dec
popa
loop
ja
push
mov
cmp
fwait
mov
and
iret
xchg
std
shlb
cmpb
sbb
mov
andnps
mov
pop
cmp
push
push
in
test
lret
pop
or
imul
pop
or
repz
out
pop
stc
out
shll
je
push
push
push
and
xor
xchg
cld
cmp
sahf
lds
cli
gs
ljmp
xchg
test
jne
mov
adc
xchg
out
mov
daa
sbb
movsl
add
dec
imul
test
lret
cs
popf
movsl
push
les
cwtl
xchg
mov
pop
push
fs
cli
sbb
fsubrl
iret
subl
pop
sahf
push
and
push
pop
push
sbb
cld
les
aam
data16
and
mov
cmp
push
out
mov
dec
push
or
bound
mov
je
mov
jns
shlb
and
jle
icebp
addr16
mov
mov
mov
mov
or
nop
or
mov
mov
mov
std
jns
cmp
sub
out
sbb
pop
lock
push
popf
pop
out
xor
cwtl
cmp
outsb
scas
ja
jle
pop
data16
shlb
notl
sub
sub
add
packuswb
mov
mov
lds
lods
sub
fnstsw
adc
xchg
andb
inc
xchg
repz
in
mov
mov
mov
sbb
xchg
and
and
js
mov
dec
pop
mov
or
sti
sbb
mov
push
mov
add
fneni(8087
ja
xchg
add
mov
pushf
push
or
gs
or
ss
mov
push
mov
pop
shlb
out
cmp
sub
js
or
imul
jns
iret
mov
in
jp
in
fimull
loope
sub
push
out
dec
pop
outsl
push
push
and
movsb
push
leave
adc
jle
and
scas
idivl
xchg
xchg
cmp
aam
or
xor
inc
shll
int3
je
icebp
cs
scas
push
leave
mov
sbb
add
adc
jne
ss
sub
js
push
mov
rcl
je
cmp
lds
push
dec
sbb
jo
add
icebp
arpl
push
add
pop
nop
mul
push
gs
inc
rcrl
mov
and
loope
aas
push
lods
jecxz
mov
cmpsl
jae
mov
and
lds
pop
jbe
jle
sbb
push
aas
jmp
cwtl
mov
adc
sti
mov
test
cli
sti
pushf
hlt
addr16
cmp
int3
and
add
and
jl
cmp
out
fbstp
sbb
ds
jle
jae
mov
xor
movl
hlt
sarl
mov
adc
xchg
je
inc
fcoms
jg
cmc
dec
es
push
leave
icebp
cmp
adc
hlt
fcoml
insl
scas
icebp
cli
xchg
mov
loop
mov
ljmp
pop
jp
sti
xor
aaa
inc
sti
int
inc
mov
dec
mov
inc
sbb
push
por
push
push
pop
pop
adc
inc
inc
bound
cmpsb
and
sbb
push
or
push
push
mov
mov
out
addr16
ret
test
and
das
and
test
mov
pop
cmp
xchg
xor
mov
pushf
pop
inc
push
hlt
adcb
ret
popa
or
push
mov
rcl
mov
mov
adc
mov
jb
cli
sahf
add
movl
stc
loopne
in
insl
test
xchg
fstps
test
pop
inc
sti
cmp
dec
or
mov
sahf
inc
push
in
shrb
push
test
pop
dec
push
and
xlat
cmp
add
mov
push
jae
jecxz
loop
and
add
ss
icebp
cmpsl
mov
in
jo
mov
jb
mov
insl
inc
xchg
movsl
std
sahf
prefetcht0
into
and
cwtl
adc
rcrb
aam
mov
sbb
push
ja
sub
andl
insb
pop
mov
lahf
mov
shr
adc
mov
fisubrl
pop
xchg
das
lea
sahf
loopne
lcall
xchg
sub
test
xor
add
sub
cmp
mov
add
push
cmp
loope
les
pushf
xor
mov
cmp
les
jmp
pop
faddl
cli
mov
xchg
popf
leave
in
and
loope
cwtl
stc
es
push
inc
call
shrl
mov
mov
mov
xchg
mov
cmp
int
cltd
xor
mov
ret
lcall
aad
push
jb
je
mov
sub
push
jle
and
leave
inc
xchg
push
pop
mov
xchg
daa
pop
adc
xchg
mov
push
xchg
push
mov
arpl
imul
outsb
sub
ret
out
test
test
xchg
inc
mov
xchg
lahf
inc
mov
and
push
popf
pop
mov
mov
cmp
inc
gs
aas
outsb
aas
lahf
in
addr16
stc
movsb
in
jl
add
popf
mov
xchg
inc
sub
addr16
lahf
mov
jb
dec
xor
dec
dec
adc
jl
fisttps
repnz
push
inc
mov
jae
ficompl
add
and
push
xchg
xchg
movsb
lret
xchg
or
pushf
stos
adc
mov
jecxz
fsubr
loopne
add
minps
inc
cmp
insb
addl
mov
jbe
xchg
dec
pop
pop
mov
fs
push
sub
test
loope
cmp
jns
aad
adc
adc
xchg
arpl
shl
sbb
adc
dec
outsl
movsb
xchg
icebp
lea
xor
dec
xchg
xor
mov
shll
roll
jl
sbb
ss
mov
sbb
sub
and
cmp
adc
add
mov
pop
sbb
popa
cmp
mov
xor
sub
push
fdivrl
pop
and
push
movsl
testb
es
addr16
cmpsl
dec
xor
jge
in
adc
pop
jp
out
cmp
dec
js
push
rorb
and
fadd
or
push
shl
fldt
rcll
dec
mov
mov
mov
inc
cmp
packssdw
jo
xor
rclb
fucomi
sbb
outsb
push
sbb
cli
inc
xchg
addr16
mov
stos
imul
sub
or
out
idiv
pop
dec
mov
adc
test
mov
sub
sub
mov
add
pop
stos
jb
add
push
popf
call
cmpsl
je
inc
adc
les
mov
out
jae
clc
mov
scas
ror
daa
in
mov
fmul
test
divl
int
test
sti
leave
negl
jnp
mov
push
imul
dec
ja
jmp
stos
cld
int3
push
arpl
test
loope
xor
xchg
xor
mov
sub
fwait
pop
or
jns
mov
sbb
pop
and
push
sbb
aaa
cmp
lcall
mov
sbb
stos
sbb
das
lret
xchg
pop
fimull
xchg
add
mov
lock
inc
jmp
mov
movsb
cmp
sub
and
bound
cmp
jae
inc
nop
xchg
xchg
jno
push
xorl
int3
dec
xor
or
arpl
jno
inc
cltd
mov
jp
ds
icebp
lods
pop
popf
cwtl
ja
push
and
insl
fwait
jo
in
and
mov
adcl
rcll
sub
add
push
xchg
daa
xchg
in
aad
xor
shlb
jae
std
xor
std
js
lock
adc
nop
clc
bound
push
cmp
add
sbb
aaa
and
add
leave
pusha
add
jecxz
xchg
fwait
popa
or
js
ret
xor
test
sub
cmp
les
test
xchg
int3
mov
dec
insb
orl
mov
and
movb
xchg
loopne
dec
and
adc
stc
mov
mov
mov
xchg
pop
test
lret
jle
xor
ja
mov
xor
cli
aam
or
mov
cmp
pop
sub
xor
fsincos
lods
adc
cltd
lcall
ljmp
data16
pop
xor
fistpl
mov
and
adc
and
orl
stos
ret
cwtl
subl
mov
mov
xor
xchg
mov
cmpl
pop
in
xchg
add
shl
shlb
lods
dec
cmp
and
push
int3
push
ficoml
cmp
adc
jns
cmpsl
test
jo
jb
aaa
push
mov
in
pop
cmpsl
xchg
imul
jge
or
pop
test
adc
cmp
es
push
movb
sbb
pusha
pop
frstor
or
imul
cwtl
in
jno
out
cwtl
sbb
inc
cmp
dec
shl
cltd
push
dec
push
sbb
mov
roll
lret
aam
clc
loopne
fdiv
cmc
mov
je
pop
push
cmp
orb
push
mov
pop
jg
xchg
lock
lret
or
add
jge
and
xchg
divb
clc
mov
mov
shrb
jns
int
mov
xchg
test
clc
in
shll
pushf
or
mov
incb
push
lahf
jns
loop
pop
mov
mov
jg
rdpmc
pop
push
dec
push
or
inc
fs
dec
arpl
imul
adc
mov
lcall
adc
daa
mov
sub
cmpsb
sti
mov
xchg
push
stc
push
mov
mov
xchg
mov
cltd
cmp
pop
in
jb
adc
xlat
inc
stc
pop
pop
mov
cmp
push
into
in
sub
jecxz
dec
ja
in
jmp
repnz
ret
cltd
addr16
push
lcall
insb
iret
ret
pop
dec
fwait
sbb
fwait
rorl
inc
ds
cld
incb
mov
xchg
xchg
jmp
push
scas
xor
xchg
out
addr16
and
ljmp
adc
pop
jns
and
cmp
sbb
popf
data16
outsb
and
imulb
cmc
out
lret
ja
sti
jecxz
fsub
aad
jne
ret
xor
fistpll
cmp
ljmp
and
dec
mov
icebp
add
gs
in
es
xchg
xchg
cmp
sub
sub
arpl
data16
lcall
jno
mov
xchg
mov
cmc
sub
xchg
stc
nop
mov
into
loope
sahf
rcll
mov
subl
stos
pop
addb
inc
xchg
sbb
adc
lret
pop
dec
or
and
jb
xchg
lahf
sub
into
lret
add
bound
sbb
dec
inc
sti
out
test
fistps
and
divb
mov
scas
imul
sbb
adc
push
add
stos
sti
mov
inc
mov
pop
lcall
imul
lods
xor
inc
dec
in
cli
in
mov
outsb
pop
mov
dec
mov
aad
int
fwait
aam
arpl
xchg
mov
xchg
jp
jge
mov
aam
sti
mov
sti
stos
xor
nop
sbb
nop
ja
push
fsubp
out
mov
in
jnp
mov
jo
test
xchg
mov
gs
aas
push
jmp
adc
shrb
in
addl
into
jne
and
push
and
sti
inc
sbb
sarb
leave
mov
ss
cmp
or
pop
mov
movsb
lcall
cld
or
sub
or
loop
sbb
xchg
adc
inc
jg
outsb
ss
pop
shll
xor
push
popa
fmul
test
daa
out
testb
mov
jae
push
cmp
mov
jg
push
dec
xchg
cmp
fidivrs
lcall
call
adc
inc
js
push
xchg
or
ret
push
push
cwtl
mov
addr16
mov
in
xor
and
mov
cld
cmp
js
leave
xor
add
rcll
clc
fdiv
movsb
fcmovnb
rcl
in
add
inc
inc
pushf
inc
out
or
cmp
xchg
lret
and
pop
leave
cmc
clc
push
sti
add
rclb
cmpsl
and
arpl
add
imul
mov
inc
adc
pop
hlt
and
jmp
stc
jne
je
push
loope
test
dec
cmpsb
pop
jb
cmpsb
movsb
dec
ss
sbb
pop
fbstp
out
cmp
xor
popa
jno
inc
addr16
cmpsb
jns
jo
sarb
pop
test
shlb
mov
or
mov
clc
repnz
jno
add
add
inc
sarl
or
iret
pop
dec
ljmp
push
inc
sbb
ljmp
inc
xchg
jbe
adc
sbb
sbb
adc
mov
dec
mov
fcoms
daa
pop
mov
int
ret
orb
in
or
and
sbbb
push
movsb
dec
int3
or
int
scas
sahf
inc
and
mov
insl
xlat
stc
and
sbb
jb
mov
subl
cwtl
int
loopne
sub
xor
xchg
mov
jp
pop
inc
hlt
inc
clc
xchg
inc
dec
sub
hlt
insb
hlt
inc
mov
mov
mov
sar
add
test
scas
stc
mov
xlat
xchg
arpl
inc
fldl
negb
les
cmpsb
stos
aas
dec
enter
fmuls
mov
mov
stos
jno
jne
lret
and
pop
jle
sahf
popa
cmp
mov
add
adc
repz
jl
sbb
fildl
inc
lods
imul
mov
lret
mov
or
arpl
fcmove
xor
xor
lahf
xchg
mov
mov
xor
fdivrs
js
cmc
scas
lods
addr16
cwtl
or
mov
mov
inc
pop
push
and
sub
xor
sahf
lock
pop
cmp
sarb
xchg
mov
stos
xchg
rclb
xor
push
cltd
mov
sahf
movsl
pushf
push
in
mov
pop
ljmp
jp
daa
sbb
lret
xor
xor
in
cmc
inc
outsb
xor
shlb
jbe
lret
xchg
pop
cld
and
pop
mov
imul
leave
xor
les
mov
in
sbb
jb
pop
in
xlat
pop
xor
sti
rcll
rcrb
xor
push
stc
in
loopne
sbb
mov
mov
cli
mov
or
push
shr
stos
pop
mov
fnstcw
or
sub
sarb
or
jo
push
pop
mov
sub
mov
or
jl
stc
mov
in
in
dec
mov
cmp
sbbl
mov
or
add
int3
add
mov
mov
lea
adc
xchg
inc
jle
nop
cmpsl
xor
adc
inc
fwait
repz
mov
add
outsl
cmpb
jle
pop
jns
pop
sbb
mov
jnp
mov
push
daa
or
shll
testl
repz
jp
mov
inc
scas
mov
jne
or
and
fistpl
inc
imul
sub
mov
aas
xor
dec
nop
hlt
arpl
sahf
dec
mov
mov
mov
jecxz
cmp
push
lods
cmpb
imul
pop
push
loop
lds
stos
stc
pop
xchg
shrb
sbb
jp
sub
jle
mov
dec
inc
cmp
ror
scas
orl
or
cli
push
loopne
es
pop
adc
adc
adc
test
cmp
gs
mov
lea
adc
push
dec
sub
pop
mov
push
or
leave
mov
repz
insl
xchg
aam
pop
inc
adcl
add
mov
das
and
jle
std
mov
popa
fsubrs
lea
or
sub
mov
pop
je
pushf
sub
cmp
push
je
push
cli
gs
hlt
mov
pop
dec
clc
int
or
cwtl
rcrl
shl
das
lds
cltd
xchg
inc
mov
mov
test
xchg
cmpsl
adc
sub
xchg
mov
pmulhw
rcll
lahf
push
inc
cmpb
ss
cwtl
shl
pop
insl
xchg
ljmp
and
test
fnstcw
mov
mov
roll
test
std
xchg
iret
stos
cmp
inc
in
add
lds
and
fiaddl
pop
mov
jp
xlat
xor
pmaddwd
add
xchg
sar
lcall
sub
inc
push
dec
aad
sarl
popa
add
call
add
push
shlb
mov
arpl
push
mov
enter
or
sbb
insl
jge
and
push
dec
cmpsb
repnz
cmp
and
mov
jp
test
cmp
jo
push
subl
aad
sub
xor
imul
xchg
mov
shlb
loopne
xchg
mov
fisttpl
sbb
std
gs
fsubrl
outsl
mov
into
mov
shrl
cmc
cltd
or
shrl
cmp
inc
inc
or
pop
sbb
enter
xor
rorl
adc
inc
xchg
mov
mov
shlb
pop
rorl
test
or
jo
int3
int3
scas
sahf
add
ss
stc
cmp
adc
arpl
jbe
shll
sub
rcrb
cmp
dec
push
sub
add
add
dec
fisttps
and
jbe
push
add
leave
push
mov
imul
icebp
jnp
inc
shl
dec
inc
mov
add
mov
loop
je
icebp
test
sbb
cltd
repz
hlt
dec
out
dec
mov
gs
push
xorb
in
les
push
mov
mov
aam
cwtl
or
push
push
fucomip
push
add
out
sub
testl
push
pop
in
sub
cmp
push
pop
imul
nop
aam
sub
cmp
xor
sub
das
repnz
cmpsb
dec
inc
cmpsb
loopne
lret
sbb
xorl
imul
cmc
push
push
std
adc
add
mov
lock
call
lcall
fildl
lea
hlt
and
insb
scas
outsl
fsubrl
incb
and
mov
pop
mov
jno
adc
xchg
rcr
jmp
dec
cs
in
push
in
mov
fisttpll
fstl
jge
push
sbb
jnp
insl
cmp
dec
enter
fcoml
cmp
enter
jns
fsub
jo
pop
mov
and
xor
adc
inc
sbb
aas
adc
pop
outsl
inc
scas
mov
mov
inc
or
nop
insb
push
jl
mov
adc
movsl
test
pop
shrl
addr16
mov
sub
outsb
sub
scas
ss
das
mov
push
mov
jbe
add
fstp
movsb
add
pop
cmp
jmp
inc
mov
test
imul
inc
jmp
mov
rcl
mov
push
cmp
lret
subl
je
mov
repz
lock
in
add
sub
movsl
adc
adc
push
pop
pop
outsb
sbb
add
adc
das
add
into
inc
test
mov
xlat
push
mov
gs
and
fstps
push
loope
addr16
das
popa
lret
sahf
dec
mov
xor
icebp
jp
and
sahf
or
xor
sub
jg
mov
sti
cmp
movsb
fs
shll
or
fmull
es
xlat
lret
data16
call
and
mov
adc
jnp
pop
push
iret
pop
push
mov
sub
mov
push
mov
stos
lcall
sbb
je
mov
add
imul
into
ja
mov
cmp
sti
loope
cmp
out
and
xlat
and
mov
and
or
not
insl
mov
pusha
sub
push
aas
loope
pop
mov
cmp
ficomps
leave
push
cld
adc
das
sbb
push
andl
std
inc
push
int
push
fidivrl
test
imull
push
mov
es
jp
aad
addb
lret
sub
jb
test
xchg
test
jne
les
push
movsb
lds
str
into
and
fildll
and
ljmp
lea
and
cmpl
xor
sbb
int
and
hlt
jbe
movsb
inc
loope
jns
fucomp
sbbl
and
jne
repz
imul
aas
int3
aas
jmp
xor
push
rorb
adc
cmp
mov
xchg
sub
or
pop
xchg
dec
stc
mov
mov
add
xorl
sbb
ss
mov
xchg
std
les
jo
lahf
pop
addr16
jp
mov
sbb
into
rclb
xchg
std
jns
cmp
fdivrs
xor
push
xor
sbb
and
shrb
lret
outsb
and
push
or
sbb
lret
pop
sbb
das
in
xlat
out
dec
dec
jo
add
xchg
daa
mov
push
dec
pusha
or
xchg
ljmp
ljmp
lods
jo
std
lcall
mov
int
daa
loopne
add
dec
adc
repnz
jns
scas
xor
dec
loop
push
popf
or
pop
outsl
xor
xlat
add
pop
pop
enter
or
mov
cltd
jge
push
sahf
leave
fistl
aas
push
dec
xchg
pextrw
dec
add
sub
setnp
sbb
add
ret
std
gs
rcrb
lods
movsl
jnp
jecxz
cwtl
xor
stos
leave
fbld
test
xchg
jne
sahf
and
mov
jl
fnsave
or
lock
cmp
lods
in
daa
or
cmp
mov
xor
push
dec
lds
adc
movsl
in
fcompl
xlat
jecxz
ds
test
mov
xchg
jecxz
out
fcomps
mov
cmp
loope
sbb
xor
inc
int3
or
xchg
sbb
sub
lea
ret
stc
sub
push
ficoml
arpl
dec
out
mov
sahf
dec
jb
mov
jns
push
push
das
outsb
jmp
lock
jno
xchg
pop
dec
add
lahf
in
inc
push
stc
call
xor
and
sbbl
into
xchg
xchg
or
push
in
inc
push
movsl
fcomip
xchg
lcall
test
into
fucomp
add
sbb
cli
lret
mov
xor
dec
inc
fs
shrb
gs
add
sbb
dec
push
or
call
push
push
inc
dec
popl
int
lret
and
mov
pop
cmpsb
aad
mov
sub
jbe
dec
dec
fstpt
dec
adc
loop
mov
inc
pop
and
sub
push
cwtl
adc
dec
pop
out
cmpsl
push
mov
es
adc
hlt
inc
lea
sub
sti
fsubp
clc
out
data16
test
push
sti
sub
xlat
int3
mov
pushf
repnz
sbb
xor
icebp
push
cmpsb
gs
lods
lea
fiadds
je
cmp
ret
xchg
sbb
cmpsb
popa
je
mov
mov
push
out
jns
les
lret
lods
sarl
test
popa
loopne
mov
lret
dec
push
and
sarb
cmp
cmp
popa
mov
cmpsb
imul
mov
sub
aas
cmpsl
sub
and
push
pusha
mov
rorb
add
or
mov
push
ds
clc
lods
dec
push
adc
mov
cltd
call
sbb
ljmp
sbb
push
call
mov
es
add
push
out
cmpb
shrl
and
ss
mov
cwtl
fcmovb
and
jno
fidivl
jno
test
sbb
push
clc
sub
sti
push
or
jbe
aas
jl
ret
and
xchg
mov
mov
addb
mov
lahf
or
jle
mov
insb
inc
push
sbb
pusha
sbb
xor
mov
push
sbb
cmc
cwtl
stc
mov
xor
inc
sub
or
sub
fmuls
fdiv
cmc
in
mov
stc
mov
inc
test
xchg
sub
mov
inc
pandn
sbb
aas
cs
push
push
sbb
test
or
cwtl
pop
pop
ss
rcll
and
hlt
xor
lods
aam
cmp
dec
lds
push
mov
stos
gs
pusha
push
inc
inc
ret
movzbl
sbb
cs
xlat
mov
add
mov
divb
shl
mov
int3
mov
mov
jb
shll
xchg
inc
es
pushf
or
fbstp
pop
test
lds
pop
iret
repz
movsl
pop
fxch
cmc
sbb
ja
mov
sbb
mov
add
jbe
mov
sub
mov
add
fs
out
inc
sarb
xor
mov
sub
mov
lods
and
and
add
out
cmp
mov
cmp
mov
mov
and
ret
xor
mov
inc
sub
inc
xchg
push
inc
xchg
inc
dec
mov
and
push
sti
xor
dec
push
xlat
and
sub
rcrb
imul
lret
mov
jmp
or
ja
cmp
fcoms
insb
in
ret
ja
pop
leave
push
jae
jge
xchg
push
js
inc
push
xchg
sahf
leave
outsb
mov
lea
mov
pop
and
or
jno
push
mov
mov
sbb
inc
dec
push
fmuls
mov
arpl
cmpsb
sub
int3
rolb
cmp
jecxz
pop
mov
push
into
lcall
test
cmp
bound
pop
pushf
aad
into
lret
jp
jmp
mov
sub
scas
inc
cs
xchg
je
inc
jb
jmp
fdivrl
clc
pop
xor
sbb
xorb
mov
xchg
mov
sti
xor
decb
jo
dec
adc
inc
cltd
mov
je
pop
sahf
cmc
movl
xor
fs
loopne
je
icebp
or
sbb
xchg
dec
fcmovnb
iret
sahf
mov
add
aas
iret
and
std
adc
addl
sbb
insb
adc
addb
or
push
push
and
and
or
and
fadd
adc
aas
pop
shl
outsb
sahf
popa
push
add
fcomps
sbb
push
mov
lods
or
push
popf
xchg
or
push
pop
mov
jg
mov
mov
adc
gs
push
mov
fnstenv
fiaddl
mov
or
sub
push
add
stos
adc
xlat
pop
repnz
stc
stos
mov
jecxz
clc
jne
in
rcl
mov
push
adc
inc
or
pop
imul
lahf
adc
in
idivb
data16
bound
daa
mov
shll
les
mov
stos
push
in
xor
aad
xor
sub
push
fwait
subb
cmpl
lret
adc
into
adc
lock
daa
shl
cmpsb
dec
into
pop
imul
inc
jo
add
or
xchg
cwtl
test
mov
or
test
push
and
adc
mov
mov
mov
sub
and
mov
inc
push
popf
push
repnz
out
xor
cli
mov
xor
lea
sbb
inc
lret
mov
jmp
or
fnsave
aam
inc
sbb
adcl
push
mov
mov
out
xchg
mov
and
push
lret
test
mov
dec
in
subl
add
in
imul
push
cwtl
clc
sbb
pop
ja
mov
mov
out
or
pop
mov
and
mov
dec
les
mov
imul
aam
dec
pop
gs
loop
sbb
lret
imul
mov
jnp
sbb
sbb
dec
fsubrp
push
lock
iret
sarl
add
popf
inc
mov
xchg
sub
insl
mov
xchg
jno
xor
mov
fs
ja
mov
adc
xchg
std
aas
popa
pushf
pop
mov
and
mov
into
sahf
adc
insb
push
push
int3
mov
std
in
cli
jecxz
dec
test
lcall
jp
pop
aam
test
movsb
pop
cmp
test
ret
xchg
lock
push
orl
mov
cmpsl
pop
test
mov
les
call
idivl
imul
out
cmpsb
dec
pop
and
mov
adc
cli
in
mov
int
jb
stos
mov
push
xor
push
pop
repnz
push
ss
test
out
sbb
out
loopne
fbld
mov
imul
push
sbb
or
rcll
pop
mov
adc
inc
push
das
pop
outsl
les
outsb
jne
jecxz
hlt
sub
xchg
daa
mov
adc
test
fisubs
out
mov
vcvtdq2ps
jmp
xor
dec
cmc
gs
xor
and
xlat
add
xor
fdivr
push
inc
jnp
fcoms
fs
ret
iret
adc
lock
and
es
push
or
in
xor
sbb
jl
ds
sbb
push
cs
repnz
xchg
jns
leave
dec
das
fstpl
jecxz
pop
xchg
jae
movsl
sbb
repz
int
xorb
lea
and
push
std
xchg
sub
js
aas
xor
jne
mov
add
mov
mov
pushf
je
call
js
or
inc
xlat
jecxz
jns
dec
sub
xor
mov
push
xchg
fisttps
pop
dec
mov
loope
push
mov
out
notb
insb
movsb
jae
mov
cltd
pop
shrb
test
mov
filds
pusha
lahf
or
mov
js
jg,pn
sbb
pop
or
ficoml
adc
ret
adcl
and
cmc
out
in
dec
cmp
jmp
ret
mov
scas
mov
push
sbb
mov
cmp
sahf
loope
mov
sub
ret
jmp
mov
loopne
add
subb
xor
push
push
hlt
pushf
cmpsb
popf
dec
and
pop
sbb
daa
sub
in
mov
xchg
mov
hlt
dec
push
sti
push
jbe
mov
mov
js
mov
shrb
sbb
mov
mov
sub
pusha
mov
movsb
sub
mov
adc
sub
mov
mov
std
aam
dec
jg
call
sbb
mov
lds
ss
inc
cmpsl
pop
sbb
xchg
sub
test
mov
and
pop
push
or
push
cli
int3
int3
es
cltd
ds
sbb
les
mov
cmpl
push
fwait
cltd
mov
aaa
shrl
scas
cwtl
arpl
cmp
mov
cmp
dec
cmpl
mov
push
xor
pushf
xchg
xchg
adc
mov
push
js
mov
and
mov
add
cmp
xchg
inc
sub
pop
sbb
loop
inc
xor
jnp
out
dec
loope
add
ljmp
or
movsb
scas
pop
inc
add
xchg
in
ja
out
pop
mov
mov
stc
mov
mov
mov
xchg
imul
xor
mov
shlb
lcall
xchg
test
jecxz
popa
pop
sub
flds
fsubrl
adc
test
cmp
mov
fxch
jns
inc
and
xchg
paddq
mov
jne
loope
xchg
jno
mov
repz
lea
mov
jnp
jle
mov
dec
arpl
inc
xchg
iret
imul
and
xor
cmp
bound
fnsave
jmp
imull
call
and
aas
aaa
xchg
js
push
jae
dec
jo
in
jnp
popw
dec
cmpsb
rcrb
mov
jb
mov
test
sub
outsb
lret
pop
std
decb
mov
ret
out
adc
mov
aam
lahf
lea
cmp
gs
inc
inc
test
pop
test
jg
out
sub
ljmp
xor
push
jle
adc
pushf
add
aaa
in
dec
adc
mov
movsl
mov
clc
mov
ds
or
in
daa
mov
orps
xlat
clc
mov
push
popf
fwait
subl
outsl
pop
fisubs
add
lcall
decl
test
shrl
sub
push
rcrb
jne
xor
dec
mul
pop
pop
aad
aas
xchg
and
fcomps
cld
adc
outsb
fisubrl
xlat
out
sub
dec
insb
sub
mov
out
pop
pop
mov
and
stos
enter
js
daa
push
test
sub
dec
jae
adc
fcomi
sub
sub
cld
mov
inc
mov
aas
add
push
movb
sbb
push
in
add
and
and
jns
xchg
int
mov
andl
loope
jg
cmp
bound
mov
pop
outsl
lock
cli
sbb
adc
and
fisubs
jo
adc
bound
fsubrl
adc
aas
std
mov
ret
pop
jo
sti
in
aas
mov
stc
out
lcall
fsubr
rorb
shr
mov
sub
add
jnp
dec
mov
pop
dec
sbb
jg
imul
fisttpll
lods
in
sahf
fcompl
xor
ds
mov
pop
daa
icebp
movsl
xor
xor
iret
pop
cmc
mov
mov
test
xlat
add
stos
adc
cmp
cwtl
test
in
rorl
pop
insb
cwtl
test
test
scas
adc
mov
cmp
mov
push
push
popa
mov
notb
mov
cld
out
jmp
popa
enter
push
inc
outsl
enter
fsubs
cli
inc
insb
in
dec
mov
lods
out
cmpsb
je
inc
dec
xchg
cltd
inc
ja
adc
pop
mov
enter
jecxz
movsb
mov
mov
inc
adc
jb
sub
test
and
push
test
addr16
outsb
xchg
xor
xlat
push
fisttpll
out
jbe
fstpt
dec
jg
cmp
pop
cmpsl
mov
push
lret
shl
inc
orl
iret
les
lahf
andl
pop
or
sbb
and
mov
lods
out
orb
cmp
sub
pop
add
push
fidivrs
inc
xor
rorb
cmc
pop
push
iret
dec
fmuls
stc
in
mov
dec
arpl
cwtl
dec
mov
je
scas
stos
ljmp
xor
and
cld
cmp
rclb
sub
in
loope
push
sub
push
and
lods
sahf
lock
push
bound
add
icebp
dec
push
aas
pmuludq
out
cwtl
mov
push
mov
xchg
add
jns
pop
insl
jle
movsl
jnp
ffreep
cmp
mov
fstpt
dec
xchg
pushf
pop
aam
sub
cmp
adc
in
daa
cltd
jp
shlb
jb
dec
cmp
scas
pop
mov
in
dec
hlt
into
jl
sbbl
inc
repnz
sub
lds
stos
iret
popf
mov
and
loopne
stos
push
xchg
stos
dec
adc
out
mov
inc
sbb
push
jle
or
adc
jl
fcoms
mov
cmpsb
add
sub
scas
divb
push
dec
pop
neg
fiadds
push
fbld
std
inc
loope
xchg
fidivl
enter
add
les
mov
lea
fsubs
xor
dec
sbb
orl
dec
out
pop
sub
sub
add
inc
and
cmpb
xor
push
iret
or
sbb
js
enter
or
scas
jb
sub
sub
mov
les
jno
aas
lods
mov
ret
xchg
and
push
and
inc
push
jns
mov
xor
addr16
aas
mov
ret
cmp
fwait
mov
pop
jo
jmp
cmp
xchg
clc
sub
shll
adc
add
mov
mov
sbb
dec
aaa
orb
push
xchg
aas
in
pop
cmpsl
lcall
adc
hlt
test
arpl
sub
and
cmp
into
pop
test
push
jl
xchg
repnz
cmpsb
fwait
and
push
mov
call
xchg
gs
subl
stos
pop
movsl
cmc
popf
lods
mov
icebp
push
mov
call
push
psrlw
gs
mov
pop
mov
shl
sahf
pop
cli
in
or
or
les
clc
aaa
rorb
fdivl
mov
dec
ss
fiaddl
movsl
or
es
fildl
push
js
push
ret
insb
cmp
imul
jge
cwtl
sbb
insb
shrb
or
xor
cwtl
lret
movsb
xchg
je
dec
jno
add
or
add
or
lods
in
xchg
dec
addl
sub
fstp
cwtl
mov
add
enter
cmpsl
adc
pop
inc
stos
sub
xor
xchg
push
movsb
je
js
mov
arpl
push
mov
adc
xchg
mov
out
cwtl
lods
cmp
mov
movsl
test
and
sti
sbb
pop
cwtl
out
fcomp
cmpsl
cltd
lret
jl
jo
push
mov
sub
xchg
icebp
inc
xchg
push
std
mov
sbb
adc
in
mov
jp
lcall
sbb
jns
inc
das
dec
dec
data16
xchg
push
fsts
pop
mov
mov
sbb
test
in
dec
lcall
icebp
adc
outsl
outsb
int3
push
popa
xor
inc
cld
mov
ja
jb
and
mov
mov
rorl
mov
xchg
inc
mov
and
andb
cmp
inc
addr16
imul
pop
pop
xchg
repnz
popf
add
aas
bound
or
fdivl
std
mov
not
mov
sarb
push
push
loope
push
leave
jbe
jns
and
icebp
mov
or
mov
pop
out
or
dec
xor
aam
jl
stos
icebp
cmp
insl
fs
scas
nop
lret
ds
in
cmc
push
and
cwtl
lods
mov
lds
mov
flds
sub
xor
xor
pushf
test
in
enter
mov
in
inc
addr16
push
int3
adc
cmp
mov
mov
push
bound
push
stos
mov
sbb
loope
fwait
dec
jecxz
push
fs
cmpsl
xor
ss
mov
shlb
icebp
aad
jge
jo
decb
xlat
push
cltd
add
inc
repnz
pop
push
je
push
addb
or
xor
xor
loop
fsubrl
sbbl
jge
adc
data16
clc
ficomps
pop
leave
ror
rcll
and
pop
xchg
push
ret
andl
in
test
cs
lea
xlat
mov
shlb
xor
pop
xor
xor
in
dec
sbb
inc
xorb
push
inc
nop
out
repnz
adc
in
jmp
aad
arpl
das
adc
push
orl
pop
jecxz
xor
dec
push
xor
dec
insb
and
push
lea
sub
or
add
sub
stc
dec
popa
and
cmpsl
fstpl
jmp
loopne
ds
jmp
lea
dec
cwtl
dec
mov
add
mov
sub
fsubrs
imul
movsl
js
es
fwait
push
lock
jne
enter
push
mov
pushf
incb
push
shrb
push
fidivrl
stc
cmp
movsb
xor
mov
mov
cmp
lret
add
lods
and
mov
gs
add
adc
ret
aad
xor
pop
jne
sub
pushf
call
jne
leave
fmuls
loop
inc
insb
loop
sbb
adc
mov
xorl
fcom
aaa
repz
movsl
jmp
pop
sbb
lcall
frstor
jo
sbb
sbb
xor
in
xchg
inc
push
mov
test
mov
sub
vpxor
stos
callw
pop
pop
or
push
push
cwtl
repz
push
cmp
cmpsb
mov
and
shlb
insb
adc
imul
xor
out
add
cmp
xor
scas
fwait
cld
std
scas
fwait
xor
and
lret
push
add
das
inc
stos
push
push
fbstp
loope
bound
mov
lcall
xorl
insl
dec
lahf
fucomi
xchg
cmp
mov
and
sub
sbb
jnp
mulb
aad
loopne
pop
push
lcall
jne
pop
fisttpll
dec
cmp
cs
in
cltd
std
jnp
and
or
pop
jl
pop
inc
jmp
gs
sub
pop
push
push
cmpsl
leave
mov
prefetchwt1
xor
loope
es
push
lods
je
mov
addr16
xor
dec
mov
imul
sbb
jns
leave
aam
dec
dec
scas
xlat
pmaddwd
out
inc
repz
inc
push
mov
jnp
in
orl
jns
xchg
sub
mov
in
das
popf
mov
or
nop
add
sti
jb
leave
jne
fadds
shrb
or
cwtl
enter
push
inc
push
sub
xor
sbb
add
lock
lret
outsl
pop
cwtl
and
and
call
fisubl
and
sahf
cmc
mov
xlat
enter
push
cmp
aad
adc
fldcw
or
frstor
lods
inc
out
pop
scas
fisubrs
into
jmp
iret
data16
mov
push
jo
out
and
lahf
and
and
mov
and
mov
cs
scas
jmp
mov
push
jb
in
out
sbb
mov
push
dec
in
daa
insl
fs
add
pushl
test
cld
push
dec
xchg
or
adc
and
and
cmp
xchg
int3
jl
jb
imul
xor
xchg
cmp
inc
pop
jmp
or
xor
imul
mov
push
or
scas
dec
jmp
pop
sbbl
into
shrb
cmpsb
lret
es
push
sub
or
lcall
xor
jmp
roll
mov
pop
insl
fs
int
mov
sbb
pushf
cmp
mov
mov
or
insb
adc
loopne
push
insl
adc
push
or
xor
push
inc
ja
popa
sub
dec
ficompl
aas
add
mov
outsb
data16
fists
dec
in
scas
cmp
jge
in
pop
xor
pop
cmp
jbe
mov
icebp
jae
cltd
dec
sbb
popf
mov
or
fbstp
pop
daa
lahf
and
xchg
pop
stos
mov
xchg
jbe
sub
or
xlat
mov
or
adc
mov
sbb
and
xor
je
loop
mov
adc
in
leave
js
sub
dec
sub
mov
repz
push
and
popa
rolb
and
push
push
test
in
test
push
insb
call
mov
movsb
dec
punpckldq
mov
jmp
adcb
xor
pusha
subb
push
lret
jle
mov
enter
jge
ljmp
sti
imul
inc
mov
adc
push
jecxz
mov
xorl
push
adc
jmp
or
dec
mov
pushf
fisubrs
inc
mov
pop
xchg
jg
inc
aad
push
lahf
and
repnz
inc
sbb
xchg
jno
scas
sbb
pushf
push
inc
and
xor
inc
jae
jb
cmp
jae
xchg
loope
pusha
mov
and
pop
leave
mov
adc
lret
repz
je
xchg
mov
ss
daa
pop
test
mov
sub
add
lcall
mov
xchg
push
lcall
inc
dec
popf
stos
iret
jnp
out
addps
add
xchg
dec
inc
inc
xor
shlb
push
repz
les
into
sub
fimuls
cwtl
jg
je
lods
aam
xor
sub
cli
or
push
rorb
aaa
mov
adcl
and
cmp
shl
lods
mov
imul
sbb
mov
rcrb
dec
pop
sbb
mov
jns
mov
lret
sti
pushf
andb
ss
notl
icebp
lods
dec
aaa
jg
insb
mov
pop
test
mulb
inc
xchg
cmp
pop
push
iret
xchg
xchg
ret
cmp
xor
pop
mov
repnz
pop
lods
and
add
xorl
jns
sbb
xchg
cmp
sbb
adc
jmp
das
pop
cmp
push
jb
push
sti
jnp
xor
jecxz
pop
lods
cwtl
pop
jg
lods
into
mov
call
xchg
dec
sldt
add
mov
push
or
out
push
pop
sbb
pop
js
shll
xor
inc
fnstsw
cmpsb
das
mull
dec
ds
dec
xor
xchg
xchg
xchg
cli
pop
popf
shll
sbb
test
mov
stos
jne
iret
mov
xchg
rcll
cs
lods
lcall
cmp
jbe
jmp
xor
cmp
pop
mov
mov
jns
inc
fsubrs
mov
dec
iret
sbb
imull
sub
int
mov
stos
jmp
add
add
out
cmpsl
ss
mov
in
popa
lret
in
and
adc
pop
mov
sbb
xchg
jge
daa
xchg
cmc
fildll
mov
push
jmp
inc
push
lds
ffree
mov
icebp
jmp
loop
fcoml
shll
cmp
das
cmpsl
out
xchg
jge
mov
out
stos
push
cli
subb
out
push
loop
jg
dec
jnp
add
mov
mov
adc
pushl
add
xchg
addr16
or
std
into
pop
out
cltd
push
movsb
mov
ds
xor
sbb
scas
xorl
cmpsb
pusha
movsl
sub
sbb
jge
call
push
stos
xchg
sahf
ss
add
xor
mov
push
notb
enter
jle
jmp
and
ja
mov
cli
dec
or
cmpsl
dec
inc
mov
push
ljmp
xchg
mov
jns
fists
pop
jo
mov
iret
fdecstp
inc
ffree
stos
lahf
or
or
xchg
push
add
xchg
jmp
adc
adc
sub
dec
jo
lock
call
add
pop
in
cmp
out
sub
push
adc
hlt
sti
adc
and
sahf
leave
imul
xor
cld
mov
sarb
adc
mov
mov
xchg
sub
lret
sub
xorb
loop
mov
sahf
xor
sub
filds
out
jle
fs
cmp
dec
lret
cwtl
xor
jmp
sub
xchg
or
rorb
sbb
mov
cltd
fs
sbb
dec
je
sbb
fistl
mov
roll
repz
sbb
sbb
jp
clc
ret
pop
shrb
outsb
in
bnd
into
outsl
push
jo
jns
push
repz
scas
test
ficompl
testb
js
pusha
mov
cs
cmp
stos
and
sbb
cwtl
inc
bound
leave
jne
sbb
inc
orb
cwtl
xchg
sarl
cltd
cmpl
movsb
cmpsl
adc
cmpsb
std
jecxz
stos
negl
inc
xchg
xchg
jno
adc
inc
push
popf
or
mov
and
ljmp
std
insl
push
lahf
push
pop
pop
fisubrs
out
push
rolb
aaa
movsl
cmp
sub
out
pop
stos
or
pop
mov
shl
repz
xchg
mov
sahf
rcll
inc
lcall
aad
cmp
adc
push
mov
inc
dec
add
in
sub
clc
in
arpl
mulb
fsts
cld
shr
add
lea
int
sub
xorl
inc
push
inc
cmpsl
xor
pop
fstps
in
into
scas
adc
cmp
mov
and
xor
mov
mov
mull
lds
xchg
and
movsb
sti
fisubs
xchg
pop
mov
jl
and
sbb
or
notb
mov
mov
inc
lds
cmp
sbb
jne
cmpsb
fmull
roll
xchg
fwait
xchg
hlt
ljmp
lock
push
cmp
adc
test
dec
or
dec
data16
pop
cmp
inc
push
lods
pusha
adc
popa
pop
jne
mov
js
fldl
mov
fisubl
and
xchg
insl
ds
dec
dec
jne
and
sub
add
clc
xor
xor
add
push
xor
mov
bswap
je
sbb
cmp
fsubrs
jne
mov
subl
add
xor
imul
and
cmpb
push
mov
mov
or
cmpsb
and
mov
inc
inc
lods
pop
mov
push
mov
xor
add
mov
into
mov
pop
sbb
es
push
push
mov
mov
xor
cmp
sbb
xorb
std
mov
mov
push
inc
mov
or
xchg
cmp
inc
pop
test
xchg
cmp
add
dec
ljmp
iret
adc
cmp
and
xlat
xor
and
pop
dec
aaa
out
mov
mov
pop
lret
pop
dec
inc
and
xchg
pop
push
cwtl
sarb
insl
out
in
jmp
and
push
push
out
scas
les
cmp
fisubrl
lods
test
insl
xor
or
shll
sbb
call
ret
addr16
mov
push
repnz
pusha
test
loopne
mov
pop
and
pop
inc
jo
sbb
mov
jbe
dec
push
lock
movsl
pusha
in
neg
daa
mov
hlt
fidivl
jg
dec
or
rol
btc
icebp
pop
mov
gs
add
or
mov
int3
and
cwtl
jbe
push
pop
loope
mov
jge
and
dec
xchg
pop
pop
add
sbbb
fdivr
sub
sbb
mov
add
adc
xor
jnp,pn
jp
jne
mov
adc
int
imul
inc
stos
pop
in
xor
adc
repz
sub
xor
stos
hlt
and
cmpsb
and
jae
and
in
pop
mov
fldt
dec
pusha
xor
cmp
cli
lods
addr16
shrl
repz
dec
mov
call
in
mov
ret
push
sbb
xchg
sub
pop
jp
insb
dec
lods
or
xor
lock
xlat
repnz
mov
daa
dec
jbe
iret
push
daa
cmp
verw
adc
mov
loopne
rcpps
xchg
lea
jmp
mov
dec
pusha
out
aam
ss
jp
jne
adc
push
jno
inc
and
jmp
xor
jae
dec
sbb
push
mov
sbb
pop
sub
or
dec
jae
shll
ret
xchg
mov
out
jle
aaa
outsb
inc
mov
sub
shlb
in
mov
gs
pop
push
inc
loopne
sub
xchg
xlat
loope
dec
fwait
push
es
pop
push
or
retw
sbb
gs
mov
cmc
dec
push
sbb
mov
xor
dec
lods
loope
push
fcomi
in
stc
loope
loope
outsl
test
daa
jb
and
test
mov
cmp
dec
lcall
xor
xor
fadd
sahf
imul
pop
pop
fdivr
nop
mov
mov
mov
and
lods
push
xchg
mov
xchg
shrb
stos
mov
pop
dec
mov
adc
repz
mov
lea
jecxz
mov
cmp
sub
arpl
and
movb
cmc
in
outsl
jnp
sbb
and
xor
xor
mov
fwait
dec
mov
insb
subb
es
call
in
xchg
sbb
xor
and
pusha
lret
dec
pop
mov
add
ret
mov
xchg
sar
sarl
test
add
subl
jne
fistpl
mulb
jbe
push
cwtl
cli
jnp
add
jle
sbb
pop
mov
popf
negl
inc
fnstenv
pusha
fidivl
cmp
xor
fidivs
mov
inc
stos
add
cmpsl
jecxz
in
mov
sub
pop
mov
xor
pop
pop
roll
xchg
jno
lods
pop
cmp
mov
push
pusha
mov
orl
adc
dec
sub
jmp
push
rorl
aad
mov
out
fstpt
insl
fcmovb
mov
int3
jno
inc
jne
cmp
test
add
push
into
sbb
repnz
lcall
mov
imul
inc
and
data16
dec
aam
mov
mov
or
mov
std
insb
cwtl
fwait
mov
loop
sbb
cmp
or
les
cmpsl
fcomps
test
xchg
imul
lods
inc
jge
xchg
daa
add
sub
and
sub
pop
and
arpl
aam
push
mov
cwtl
stos
pop
lcall
dec
lret
sub
push
call
adc
inc
cmp
and
repz
lea
push
lea
pop
in
dec
xor
or
pop
incl
bound
je
push
data16
xlat
ds
imul
pop
push
daa
sub
pop
mov
out
addb
or
addb
add
inc
std
ljmp
and
xchg
fsubs
adc
jmp
sbb
xchg
std
cmpsb
push
addr16
sarl
scas
push
int3
inc
push
cmp
xor
mov
push
add
aaa
xchg
pop
rcrl
jnp
stos
std
in
mov
push
inc
xor
outsl
fmulp
or
inc
outsl
arpl
shrl
out
push
mov
jge
pop
sahf
cmpsb
scas
les
sbb
push
aam
in
push
mov
push
sahf
lea
add
pop
out
test
pop
int
xchg
loope
lcall
fldcw
shlb
mov
and
cwtl
out
xlat
repz
inc
or
sub
add
cmp
dec
and
insl
jmp
aam
jp
inc
mov
mov
push
xor
sub
mov
jo
pop
mov
and
xchg
cmp
out
or
adc
aad
shll
xchg
enter
out
int3
scas
cltd
fs
dec
mov
es
and
xor
hlt
lods
mov
or
cli
test
cmpsb
mov
movsb
mov
mov
in
sbb
sbb
push
fwait
jl
jg
mov
inc
dec
pop
xchg
mov
mov
cmp
hlt
sbb
add
aam
push
test
aas
ljmp
mov
sarl
divb
test
or
popl
test
mov
cmp
lret
mov
cld
add
adc
mov
mov
adc
adc
popf
in
adc
push
push
sub
clc
es
aad
ret
push
xchg
das
sti
scas
shll
loopne
int
push
jbe
jno
jo
sbbb
in
shrb
shl
sbb
pusha
mov
mov
popa
movsb
shlb
out
jbe
repz
aaa
pop
mov
sarl
test
cmp
loop
clc
scas
outsl
lcall
lahf
or
out
inc
cmpsb
jo
push
push
and
test
aam
insl
xchg
sub
pop
xchg
fsubp
out
or
adc
cld
mov
inc
rolb
inc
movsb
mov
cmp
pusha
xor
cmp
aam
mov
into
dec
fnsave
mov
dec
mov
adc
inc
mov
icebp
andl
mov
stc
mov
push
pusha
addr16
sub
xchg
add
push
sahf
dec
test
xchg
pop
mov
sbb
push
cmp
jns
rclb
rcrl
je
add
les
push
in
adc
push
or
bound
cs
rcr
leave
sti
cmc
sub
in
int3
hlt
xor
clc
adc
pushf
mov
iret
out
pop
push
xchg
adc
stc
jmp
cmp
ret
stc
test
cmp
jmp
jge
fs
xor
push
fsubl
fs
mul
sarl
inc
sbb
xor
cli
dec
pop
cltd
insb
popf
lret
stos
iret
outsb
adc
imulb
in
std
xchg
lods
push
fldt
mov
xchg
sub
aam
jnp
xchg
and
mov
repnz
push
mov
jae
ja
ret
inc
inc
daa
sar
pop
sahf
xor
sahf
dec
add
mov
into
outsl
inc
popa
mov
push
addb
add
and
push
les
jmp
add
add
ret
or
fwait
push
pop
sbb
and
lods
jp
int3
aad
and
cmp
push
push
mov
mov
loop
fcomps
pop
insl
mov
adc
pusha
pop
in
jp
mov
xchg
mov
insb
pop
adc
mov
lcall
loopne
dec
add
push
pop
and
add
in
add
sub
inc
in
lahf
dec
lcall
mov
or
mov
and
sbb
test
cmpsl
sbb
cs
push
scas
pop
imul
incl
mov
jmp
jb
frstor
dec
int
imul
sbb
dec
stos
cmpsb
outsb
ja
aas
xor
xchg
mov
cmp
add
loopne
pop
push
push
lds
fsub
xchg
dec
mov
loopne
dec
cwtl
mov
lds
push
xchg
add
mov
cwtl
cmp
inc
inc
aad
fcomp
sub
outsb
sarb
es
mov
out
mov
int
lret
push
mov
and
ret
pop
pop
fcmovnb
inc
sub
fwait
or
mov
dec
movsb
pop
add
stc
inc
xor
cli
push
pop
stos
mov
and
ror
dec
fistps
mov
sbb
dec
xchg
mov
xor
mov
inc
lahf
mov
inc
hlt
mov
lahf
lahf
jg
outsb
or
imul
mov
iret
mov
ret
dec
test
and
pop
sbb
mov
fwait
xlat
inc
lods
mov
lret
jge
jle
lods
div
movlps
pop
shrl
rcr
dec
mov
loope
jbe
mov
pop
xchg
push
mov
cmpsb
fwait
push
fbld
cs
insl
xor
mov
and
js
cmpsb
icebp
mov
sbb
addr16
addr16
jmp
jno
xchg
adc
xor
xchg
jbe
cwtl
push
and
cmp
mov
pause
jp
daa
or
push
inc
or
mov
mov
or
repnz
daa
xor
repz
xor
xchg
and
pop
pop
icebp
faddp
in
add
adc
lahf
mov
cwtl
dec
push
aad
shrb
rcll
adc
pop
jl
adc
pop
daa
fstl
jnp
or
fistps
add
sub
es
pop
jo
mov
dec
dec
xor
mov
sbb
pushf
sbb
popa
jo
jbe
bound
add
or
stc
sti
lahf
mov
repz
sti
ss
popf
int
cmp
dec
je
add
inc
xchg
mov
mov
addr16
push
mov
mov
xor
das
pop
pop
mull
push
xchg
mov
out
iret
repz
cmpsb
cmc
cs
pushf
pop
fists
xchg
or
adc
jbe
iret
xchg
filds
pop
pop
jns
data16
call
sbb
leave
push
in
inc
adc
call
outsl
js
fwait
pop
pop
mov
inc
lret
sbb
fpatan
outsb
inc
lock
imul
jecxz
push
push
out
sub
lods
call
jnp
inc
push
lods
outsl
add
fwait
sub
movsb
sub
dec
lods
testb
sub
pop
dec
xchg
dec
rorl
xor
dec
pop
nop
sti
lret
sub
pop
mov
loop
arpl
pushf
lret
pop
sbb
movsb
test
cmp
dec
loope
punpckhwd
push
out
out
popa
or
fistl
outsl
inc
jecxz
cmp
imul
imul
into
mov
ds
mov
mov
icebp
gs
dec
outsb
shl
ja
sbbb
xchg
push
pushf
enter
pop
cli
stc
push
fwait
push
repz
xor
stos
nop
add
roll
popf
cmp
mov
xchg
xor
and
pop
cmpsb
scas
fimull
test
mov
add
mov
push
fiadds
sub
sbb
loopne
popa
sbb
aam
cltd
jo
imul
mov
enter
jno
cmpsl
dec
fisubrl
mov
add
push
sarl
sbb
mov
ljmp
scas
adc
xchg
mov
mov
lods
and
or
push
cmc
xchg
fadds
movl
int
xor
dec
inc
mov
int3
roll
pop
sbb
addr16
mov
in
push
or
cmp
mov
imul
fwait
sbb
xchg
adc
aad
adc
jo
push
int3
push
sbb
rcll
jns
cmp
jp
sub
lock
cmp
sub
hlt
pusha
repz
cmpsb
cmp
test
xlat
lods
in
push
insb
pop
mov
mov
js
push
scas
in
and
xchg
mull
fists
nop
xchg
mov
daa
mov
test
pop
ret
pushf
shll
jnp
mov
xchg
pop
fcoml
cli
lret
add
leave
dec
add
xchg
or
lds
clc
jno
je
push
mov
add
int3
or
pop
jne
rclb
cmp
lahf
mov
adc
adcl
dec
jnp
mov
or
or
jle
xchg
dec
mov
fisubrs
mov
ret
enter
jge
xchg
and
roll
inc
nop
and
mov
idivl
aam
ds
xchg
and
lea
fbld
cmp
sub
xchg
dec
sub
lcall
mov
pusha
mov
pop
loop
jecxz
mov
test
cmp
inc
sub
sub
cwtl
lret
jo
pop
test
lock
out
jb
jle
aaa
pop
add
mov
fisubl
push
je
push
jmp
in
mov
xor
add
lods
sub
sub
push
sub
mov
dec
fsubrl
dec
pop
ss
cmp
or
mov
dec
cmp
in
jbe
out
jno
movsl
cmp
imul
pop
pop
fs
std
fildll
aam
scas
mov
test
xchg
ss
bound
in
push
rclb
or
lcall
out
cmp
mov
fiadds
inc
jne
and
test
lret
icebp
mov
push
movb
pop
das
jae
mov
insl
andb
xchg
push
fs
push
lods
sub
or
mov
jnp
push
cmpsl
pusha
sarb
shlb
test
push
ficompl
adc
sbb
stos
dec
repz
mov
lea
stos
ss
adc
xchg
cs
or
xchg
push
out
adc
in
jle
push
or
mov
mov
aam
insl
enter
xor
inc
ja
gs
jo
jp
cwtl
jge
iret
xor
inc
inc
cmp
cmp
ret
mov
scas
ljmp
fs
or
leave
sub
push
paddb
lret
pop
inc
lret
jno
and
enter
in
inc
das
jb
jge
cwtl
loopne
jmp
arpl
jge
push
cmp
lods
sub
lea
or
fisubrs
dec
or
mov
icebp
mov
shr
xor
adc
dec
fcmovnu
push
shll
jl
mov
jo
cmp
outsl
inc
push
rorl
add
push
fsubl
les
adc
data16
clc
push
add
movsl
xchg
repnz
test
sbb
sub
mov
add
cmpsb
inc
popa
pop
ja
jbe
add
ficoms
jg
jnp
test
sub
or
jae
bound
fimull
jecxz
test
and
out
sbb
mov
fwait
pop
cmp
add
aad
xchg
movsb
add
inc
dec
daa
shll
and
out
jnp
add
xchg
add
dec
adc
adc
shll
xor
pushf
pop
sub
jo
das
push
sbb
mov
sti
lahf
or
dec
movsl
or
push
int
add
and
enter
xchg
sahf
jle
inc
cwtl
add
dec
repz
cmp
scas
and
pop
insb
ret
mov
push
sub
xchg
sub
push
cli
test
cmp
bound
mov
cmp
rcrb
dec
adc
lret
mov
mov
aaa
xor
mov
jmp
int3
mov
push
inc
xor
fcmove
lret
cmp
pop
push
push
rclb
mov
into
and
sub
push
add
sbb
add
insl
pop
xor
loopne
jmp
or
cmc
sub
test
sti
and
xor
push
int
cmpsb
in
js
test
pop
fwait
mov
inc
imul
mov
mov
push
nop
lcall
adc
lret
pusha
rorl
add
inc
inc
mov
popa
pop
pop
call
das
das
std
ds
pop
lods
adc
inc
icebp
shlb
mov
nop
sub
mov
std
es
incl
cmp
xor
shll
xor
add
dec
sub
dec
or
icebp
xor
jns
jns
fisttpl
inc
push
lods
cld
xchg
inc
inc
xor
fildl
push
or
xchg
in
inc
into
adc
push
std
loop
xchg
dec
mov
shll
aaa
gs
cmp
sub
faddl
adc
imul
in
add
push
inc
lret
sub
xchg
loope
push
inc
pusha
push
in
repnz
pusha
jae
push
loop
scas
or
stos
call
inc
cmp
lock
inc
das
iret
xor
sti
inc
xor
or
out
cmp
add
push
into
jno
pop
add
cmp
mov
push
jp
icebp
push
pusha
dec
stos
sub
mul
cmp
sti
ficompl
inc
add
xor
add
mov
cwtl
in
add
inc
ret
inc
pushf
in
in
lcall
sbb
clc
fistpl
scas
sti
mov
test
xlat
mov
inc
aas
sbb
sbb
stc
sbb
jp
mov
cltd
mov
js
stos
addr16
pop
inc
mov
pop
adc
dec
mov
cli
mov
xchg
xor
shl
insl
mov
out
xor
shlb
sbb
fisttps
inc
mov
js
dec
aas
xchg
push
jo
insl
jae
xor
mov
fildll
push
out
mov
clc
test
in
cmp
rcrl
and
dec
or
imul
lcall
bound
add
shrl
sub
jmp
jmp
mov
xchg
scas
sbb
imul
bound
lods
mov
sub
jl
lock
test
push
fildl
scas
bound
addr16
and
pop
jae
push
mov
ja
repz
dec
sub
pop
inc
pop
mov
dec
out
adc
testl
xlat
loop
dec
cmp
je
lret
filds
xchg
sub
aam
clc
adc
lret
dec
test
and
cs
pop
inc
push
mov
lea
or
icebp
pop
fildl
push
outsl
outsl
ja
mov
dec
xchg
test
push
pop
jne
mov
cmpl
test
mov
lcall
ljmp
mov
rcll
les
lods
pop
adc
fisttpl
sub
inc
cmove
pop
jne
ja
push
fwait
inc
jno
fstps
lahf
sub
push
imul
sbb
fwait
dec
in
dec
push
cmp
fimuls
call
in
aam
shrl
mov
lds
call
ljmp
pop
push
xor
test
sbbb
stos
or
sub
xchg
pop
mov
ja
je
sub
dec
or
leave
and
adc
push
into
and
cltd
cmpsl
jnp
insb
mov
mov
adc
dec
mov
jle
cmp
fcompl
or
pop
fstpl
nopl
in
xchg
sub
push
loope
test
popa
scas
inc
shll
addr16
rcr
popa
cmpsl
jns
jb
scas
mov
jno
inc
fmul
mov
ds
jnp
dec
sub
xor
jg
ret
subb
mov
imul
pop
add
pop
pop
add
aas
push
in
je
and
ja
pop
pop
ffreep
mov
int
mov
fiadds
dec
outsl
xor
add
inc
jp
add
aaa
push
mov
jge
mov
in
lret
dec
push
ljmp
mov
cmp
cmp
data16
push
cmp
xchg
mov
jge
pop
add
leave
push
sub
rcrl
ss
sbb
cs
xchg
cltd
adc
movb
inc
jns
std
mov
inc
std
imul
jle
add
std
and
lds
stc
popa
aaa
add
mov
lds
hlt
js
mov
inc
sub
pop
cmp
or
sbb
sbb
add
loopne
lods
mov
outsb
sub
push
and
scas
dec
jns
ret
iret
xor
test
inc
orl
fidivl
dec
dec
out
xchg
int
and
jmp
xchg
pop
je
lret
push
pop
dec
pop
inc
mov
sbb
fisubs
xchg
test
ljmp
mov
pop
fisubrl
inc
loope
ret
and
fsubrl
hlt
push
adc
cmpsl
sub
mov
adc
pop
fwait
lods
dec
pop
cmp
mov
rcrl
cmp
cmp
lret
cltd
push
push
pop
popa
movsb
cmp
in
movsb
iret
push
push
sub
push
add
nop
mov
lock
aam
out
je
js
into
push
jecxz,pn
cmp
fsubl
iret
pop
jne
adcb
add
fisubrl
adc
outsb
loop
mov
test
adc
pop
gs
popf
adc
pop
xchg
pop
int3
lock
and
push
lret
mov
jge
xor
scas
mov
aad
test
stos
mov
sbb
insb
cld
ret
lret
sub
mov
sub
fildl
sub
aad
inc
mov
test
inc
les
lcall
push
mov
data16
test
je
mov
mov
bound
jle
iret
dec
out
hlt
pusha
movsl
jecxz
xchg
jl
sahf
pushf
mov
sbb
mov
mov
mov
lods
rcr
test
pop
push
cld
pop
jmp
ss
and
and
or
sub
mov
popf
sbb
cwtl
fpatan
push
negl
mov
test
lods
lret
test
add
jo
mov
out
movsl
and
rcrb
jmp
push
mov
xchg
test
xor
call
icebp
jbe
jo
fstps
or
pop
and
sarb
lret
sbb
jo
sbb
dec
out
call
stos
test
in
push
pop
adc
xor
cmpsl
fwait
loopne
loopnew
mov
xor
xorl
pop
mov
daa
xlat
addr16
xor
mov
loop
test
jnp
divl
sbb
push
loopne
pop
jne
mov
fidivl
ss
push
pop
push
cmp
jae
dec
push
test
add
or
add
lret
xor
fldenv
pusha
add
jp
add
int
jg
push
iret
out
xchg
ds
scas
lcall
lret
or
inc
std
add
dec
test
mov
rcr
mov
lods
jmp
lret
je
sbb
sbb
sub
test
adc
sbb
push
lods
out
pusha
and
loopne
pushf
mov
sbb
lods
mov
add
hlt
in
cs
iret
leave
sbb
push
das
lahf
push
shrl
xchg
aam
mov
decb
mov
sbbb
pop
stos
fmuls
adcb
jo
xchg
stos
push
scas
dec
push
inc
cli
sub
jae
push
scas
cmpsl
mov
add
add
cli
sub
lret
pop
stos
cmp
ja
push
ds
pop
pop
mov
jbe
std
out
es
out
jae
mov
sub
cmpsl
mov
cmp
adc
mov
add
and
hlt
mov
push
push
loop
orl
orb
insl
out
pop
scas
inc
nop
adc
lods
inc
ljmp
dec
add
repnz
movsl
test
gs
fidivrs
popa
xor
push
jb,pt
sub
cmpl
inc
push
cmpsb
es
out
data16
scas
pop
xabort
hlt
jb
cmp
cmp
xor
add
or
push
popa
xchg
lahf
mov
in
push
fnstcw
popa
or
test
in
mov
cmp
outsl
jge
negw
push
fidivl
addr16
in
cmp
add
fcoms
les
pop
aas
jns
fwait
sbb
adc
roll
cs
lret
push
mov
stos
xchg
test
repz
push
dec
les
xor
aam
push
cltd
jl
jl
cmpsl
jne
ss
xor
add
and
std
dec
inc
jle
mov
sub
aad
sti
mov
repnz
gs
xor
mov
rorl
and
repnz
jbe
loop
adc
addr16
add
push
push
xchg
adc
adc
popf
xchg
repz
mov
mov
popf
je
ret
mov
lods
adc
or
xchg
jge
xor
pop
ss
cltd
jnp
nop
jg
cli
xor
in
aad
or
adc
pop
lock
arpl
rcrb
inc
inc
add
pop
sub
jecxz
test
jp
add
js
mov
fisubrs
stc
aaa
mov
inc
loopne
rcl
push
shlb
shll
adc
mov
mov
cmp
int3
push
ror
xorl
fists
sbb
sub
xchg
cld
and
and
inc
ret
js,pn
mov
stc
leave
mov
add
xchg
ret
pop
add
fistl
out
jbe
inc
dec
jnp
dec
in
hlt
jle
sbb
leave
arpl
inc
inc
out
pop
cmpsb
xchg
add
sub
jne
and
mov
ret
or
cmp
jge
mov
mov
shrl
xchg
push
and
xor
out
icebp
inc
repz
push
popf
into
push
mov
cmp
sub
jo
pushf
mov
std
shl
cmp
mov
jecxz
mov
mov
clc
cmp
enter
rorb
in
or
pop
and
repz
popf
push
out
lret
adc
ja
subl
or
lea
clc
adc
mov
in
sub
das
loope
cmp
nop
test
ss
or
inc
mov
les
jle
lods
fists
sub
jns
iret
jmp
sbb
loop
jg
sarl
jmp
xlat
aam
rclb
inc
jns
lahf
lretw
pop
jp
jmp
rcl
xor
and
icebp
xor
add
pop
popf
mov
jnp
xchg
mov
sbb
inc
ret
xor
add
les
loopne
arpl
sub
je
xor
dec
test
or
xor
aaa
mov
adc
adcb
mov
jae
cmp
daa
xchg
test
aam
push
pop
lcall
ds
cli
pusha
aam
add
push
test
xchg
mov
movsb
sbb
dec
xlat
add
rcrl
mov
xor
fnsave
popa
and
icebp
or
out
jge
add
arpl
mov
push
mov
dec
mov
mov
in
pop
push
pop
jge
pop
popa
cmpsl
jl
ret
loopne
xchg
jg
jb
cmp
dec
in
sub
jo
mov
adc
mov
dec
incb
pop
mov
jnp
imul
dec
cmp
jae
insl
outsb
jecxz
jg
sub
push
fiaddl
fwait
xchg
and
ljmp
fs
sub
test
cmp
mov
xor
mov
mov
les
std
lods
fadd
jecxz
inc
dec
notl
in
xor
mov
mov
fcompl
mov
add
pop
mov
sbb
and
dec
xor
out
adc
cmp
sti
dec
add
stos
out
shll
testl
mov
fstpt
jl
cmp
and
pop
ss
sbb
out
mov
jns
pushl
mov
pop
loopew
test
lds
inc
pop
cmp
lods
push
out
mov
scas
ja,pn
mov
gs
xor
pushf
std
iret
out
gs
repz
outsl
xchg
call
enter
cmp
pop
inc
dec
jp
jmp
ret
push
imul
pushf
lds
repz
push
cli
sbb
sub
rolb
fmuls
pop
ret
sub
fcmovbe
fistl
inc
ja
jl
sahf
add
mov
pop
js
insl
mov
push
pop
mov
jbe
andb
cmpsl
adc
push
out
insl
cmc
or
cmp
and
lret
scas
lods
ss
jmp
push
hlt
addr16
mov
mov
sub
imul
mov
mov
mov
xor
mov
mov
xchg
sub
aam
insl
cmp
and
int
mov
fildl
push
add
mov
scas
lcall
int
sub
xchg
testl
mov
inc
cltd
push
aad
fadd
and
out
fstpt
bound
jbe
roll
or
sahf
mov
cld
push
jl,pt
sbb
shlb
xor
nop
sbb
xor
je
mov
cltd
mov
add
jmp
lea
dec
push
jp
test
adc
xchg
cld
xchg
dec
neg
add
movsb
jecxz
jmp
xchg
pop
or
push
cmp
out
stc
lcall
dec
das
std
ficomps
pop
ret
xor
mov
or
sub
xchg
addr16
aaa
xlat
imul
cli
decb
inc
js
iret
test
lea
jge
fistps
cmp
cmp
cmp
inc
xor
hlt
ret
out
mov
pop
xchg
lret
call
insb
pusha
cmpb
mov
push
lea
pusha
hlt
cmp
loope
das
mov
imull
add
je
rorl
inc
dec
das
pop
jmp
dec
inc
mov
out
imull
jp
loope
jecxz
das
fidivs
add
jae
fldl
cmp
pop
lods
jge
mov
xchg
cli
test
dec
roll
xchg
lods
aam
sub
int
in
mov
xchg
das
insb
cwtl
int3
adc
xchg
lret
sub
ss
fsubl
por
test
inc
test
vandps
lea
stos
push
dec
cmp
shll
and
jl
arpl
ljmp
pop
sarb
rolb
pop
pusha
dec
push
push
out
stos
sbb
andb
cld
fldln2
mov
or
push
mov
and
jge
movsl
lods
enter
xor
sbb
inc
jp
imul
movsb
xor
mov
ret
mov
adcl
popa
push
sub
adc
jmp
adc
push
dec
out
movsl
dec
add
lods
leave
xchg
popf
inc
adc
xchg
test
dec
enter
cmp
push
add
lret
in
pop
xor
mov
pop
add
add
xchg
insb
push
repnz
cmp
in
sbb
add
sti
insb
dec
dec
mov
iret
and
add
push
mov
rclb
shrl
jle
scas
mov
stos
cmpsb
push
and
mov
xchg
sbb
sti
mov
mov
mov
jle
add
push
adc
jl
push
stos
dec
sbb
xor
cmp
xchg
inc
inc
scas
add
or
sbb
xor
pop
repnz
cld
repz
pop
push
or
cmp
pusha
dec
orb
add
out
push
ret
pop
dec
dec
insl
pop
mov
dec
pop
out
ja
bound
dec
pop
pop
jns
sarl
jl
andl
add
fs
mov
adc
or
insb
stc
repnz
repnz
xor
xor
notb
mov
sbb
popa
movsl
scas
insl
orl
mov
les
mov
call
xchg
in
push
xchg
mov
xlat
inc
test
test
dec
mov
or
int
mov
sbb
sbb
xchg
dec
jne
mov
sub
loop
jmp
push
jmp
ss
pop
sub
lahf
or
stos
or
ss
pop
enter
pop
sub
sub
cmpsb
fs
mov
push
lahf
inc
out
iret
shr
minps
dec
mov
mov
mov
xor
cld
in
mov
push
xchg
sarl
dec
pop
adc
mov
mov
push
jno
sbb
cmp
or
out
pop
scas
mov
mov
outsb
xor
dec
loope
outsl
mov
xor
xor
fisttpll
or
iret
aas
scas
adc
cwtl
fwait
out
fcoml
imull
or
ret
out
mov
ror
enter
cltd
xchg
test
lds
mov
inc
cmp
and
jmp
xchg
imul
es
push
pop
or
test
jnp
movl
jmp
fdivrp
jae
add
pop
clc
xchg
pop
insb
xor
jnp
or
mov
fbstp
daa
loopne
ljmp
mov
adc
arpl
pop
or
mov
mov
cmp
sarb
inc
fldl
sbb
mov
mov
cmp
push
add
inc
sbb
sbb
sub
sti
sub
rolb
les
mov
out
sub
dec
icebp
inc
jmp
pusha
mov
mov
inc
movsb
mov
xchg
in
inc
arpl
loopne
inc
adc
ds
sbb
push
cmp
adc
bound
add
fiadds
ja
insl
inc
xorl
scas
cmpsb
insb
iret
repnz
movsb
fsubs
in
movsl
mov
pop
pop
cmpsb
fidivrl
pushf
mov
and
pop
sub
cli
add
shr
cmp
adc
daa
xor
movsl
pop
push
fdivl
ja
das
rol
sbb
and
lock
andb
mov
fdiv
sahf
cmp
lcall
push
mov
pop
stc
aaa
pop
pop
dec
ffreep
push
das
xor
mov
outsl
out
pop
sub
adc
imul
repz
and
rclb
dec
xchg
cmpb
sbb
or
cwtl
mov
and
imul
sbb
jns
in
js
xor
mov
arpl
test
movsl
sbb
jecxz
xor
xor
scas
hlt
sbb
xlat
push
lret
gs
jl
and
outsb
push
xchg
ret
jbe
pop
xchg
outsb
inc
dec
pop
and
xchg
pop
cmp
mov
ds
cld
push
inc
mov
fwait
movhps
hlt
cmc
xchg
mov
shlb
jmp
xor
std
lea
push
imul
repnz
push
ret
jp
pop
mov
lret
sbb
leave
ljmp
inc
into
pop
pop
loopne
push
sbb
pop
arpl
mov
rorb
pop
jo
push
push
xchg
xor
mov
jl
and
or
pop
inc
ret
mov
shlb
cltd
xchg
xlat
out
aam
std
or
mov
aam
les
add
stc
sti
push
decl
push
cwtl
popa
adc
and
cmc
insb
jle
push
xchg
rcll
daa
dec
pop
inc
insl
pop
and
add
es
mov
out
bnd
subl
and
adc
or
jge
adcl
adc
add
lahf
in
test
fs
add
fs
jno
mov
or
lahf
insl
or
mov
mov
cmc
mov
cwtl
dec
lret
inc
jmp
mov
ja
sub
daa
dec
add
mov
stos
or
sbb
fsubr
add
lret
xor
jmp
inc
stc
fwait
adc
shr
adc
lds
ret
pop
rorl
cmp
cmp
call
jmp
mov
and
fiaddl
jp
testl
adc
inc
mov
fwait
mov
pop
loope
push
loopne
leave
xchg
mov
enter
dec
mov
stos
xchg
pushf
mov
je
xor
dec
lods
jns
fcomps
adc
xor
push
or
or
cmp
into
sub
xchg
dec
cld
fwait
pop
aam
xlat
out
aam
adc
inc
sbb
insb
nop
push
sbb
daa
mov
sbb
data16
arpl
xor
xchg
sub
ret
mov
sti
and
test
jecxz
mov
inc
mov
pop
add
lods
insb
xchg
das
sar
movsl
adc
test
outsl
sub
aad
or
out
stos
or
push
sub
push
imul
inc
cld
add
xor
pop
push
pop
js
loopne
fsubs
std
mov
mov
push
icebp
inc
xor
jl
jmp
jmp
mov
fildll
cmp
aas
sbb
and
paddusw
daa
add
ds
cld
mov
pop
ficoms
ja
pop
push
jmp
mov
aaa
imul
rcrl
aam
pop
lods
pop
pop
fildl
pop
mov
or
loop
add
push
fwait
in
cmpsb
gs
into
test
popf
addb
filds
out
stos
pop
xor
jnp
or
ja
add
sub
xor
add
push
xlat
sahf
and
xchg
iret
sub
add
icebp
cmpsl
jecxz
adc
xor
sub
mov
out
pusha
rorb
dec
mov
leave
jge
jo,pn
sbb
imul
repz
mov
xchg
sbb
mov
into
imul
stos
xor
push
ljmp
out
jbe
data16
mov
in
adc
ja
xchg
out
pop
out
cwtl
mov
sub
aam
clc
das
xchg
jnp
lea
mov
push
pushf
fcmovne
inc
jecxz
mov
lock
insb
adc
jecxz
sahf
dec
cmpsl
add
xchg
rep
jmp
fnstsw
and
and
cmpsl
das
pushf
ret
add
sub
adc
mov
mov
idivb
mov
push
mov
setg
inc
aaa
sub
sbb
mov
inc
inc
xchg
or
inc
pop
arpl
push
sbb
pop
sub
mov
mov
lea
cli
sbb
mov
sbb
and
and
sar
test
cltd
mov
fbstp
add
ss
repnz
stos
cmc
adc
outsl
lret
inc
pop
not
call
push
iret
mov
in
js
das
add
push
and
adc
repnz
sbb
mov
test
ljmp
jecxz
lcall
repz
sbb
cmp
xchg
sarb
jae
aaa
xchg
mov
sbb
cs
ja
pushf
pop
cwtl
and
subb
lret
sbbb
shll
inc
shrb
push
lea
jge
and
jno
or
xchg
lret
fnstsw
dec
push
add
je
inc
sub
ret
leave
mov
inc
dec
into
loope
ss
push
mov
or
add
enter
imulb
jb
stos
push
jl
sahf
sbb
testl
xor
insl
push
ret
lods
outsl
push
adc
add
aam
mov
sbb
test
iret
clc
mov
xor
adc
inc
cmpsl
stos
std
jae
lods
cld
jne
jb
enter
mov
xchg
pop
insb
test
mov
ret
mov
fmul
lods
jb
je
mov
sbbl
lods
out
push
mov
adc
xchg
inc
xchg
int
in
jl
pop
jno
outsl
jge
xor
and
or
leave
push
in
fiaddl
mov
lea
testb
dec
adc
mov
pop
push
xchg
dec
je
mov
add
mov
push
and
mov
sub
sub
cmp
lods
sar
cmp
push
popa
mov
cmpsl
ljmp
packuswb
cmp
push
out
or
jnp
inc
lods
inc
aam
lods
mov
aas
incb
scas
sub
in
sub
sbb
out
xchg
mov
frstor
add
dec
repnz
lea
lret
cmp
outsl
out
adc
push
inc
sub
mov
aam
mov
push
mov
mov
das
js
xchg
lds
ffree
ljmp
mov
xchg
rcll
adc
pop
jb
lds
mov
pop
call
call
lds
mov
jno
adc
cltd
cmpsb
ja
test
pop
fidivl
jnp
or
lcall
xlat
sub
loop
mov
inc
pushf
cmp
das
movsl
mov
cltd
shll
enter
jnp
push
test
add
inc
fmul
lds
outsl
stos
inc
add
xor
mov
movsl
aas
sahf
es
jnp
aaa
push
sarb
sub
xchg
sbb
es
push
popf
mov
dec
popf
clc
xchg
or
enter
leave
xor
shlb
std
pop
call
xor
cmp
inc
pop
insl
fisubrs
mov
aam
imul
repz
lds
sub
adc
pop
or
jp
jg
sbb
in
out
mov
push
dec
fimuls
sbb
test
mov
ficoml
or
xchg
sbb
dec
cmpsb
out
push
test
mov
jl
xor
mov
xor
ud2
xor
jne
bound
repz
mov
aam
in
xchg
jle
jecxz
inc
mov
stos
or
jmp
sub
push
imul
out
add
scas
pop
jnp
push
scas
sub
lods
lods
jnp
jns
into
cmp
xchg
xchg
add
repz
pop
std
in
mov
inc
jo
cmp
insl
xchg
push
les
call
das
sbb
orb
cmp
shr
leave
test
push
rolb
stc
pop
xlat
xchg
jl
in
mov
inc
je
cmc
mov
pop
cmpsl
dec
pop
testb
lock
mov
aaa
hlt
pop
lods
push
xor
shrb
in
cmpsl
fildl
add
xor
mov
into
xor
mov
psubsb
push
int
in
and
les
push
ds
repz
dec
mov
decl
in
xchg
cmp
in
xchg
mov
xor
rcll
nop
pop
pop
lea
out
pop
jns
in
enter
jg
das
pusha
and
sbb
add
xor
cmp
dec
push
dec
push
push
stc
dec
stos
mov
pop
jg
rol
roll
sub
mov
sahf
sub
fimull
add
push
cwtl
dec
inc
mov
cmp
bound
in
fsubr
jbe
cmp
and
push
jmp
out
add
outsl
sbb
repnz
test
push
jl
movsl
shll
mov
push
adc
pop
mov
jae
adc
adc
outsb
and
fcompl
push
rcrl
add
int3
mov
pop
neg
add
test
pop
and
adc
mov
jl
mov
subl
aaa
fbstp
movsb
loopne
xor
fsubs
cmovbe
aam
andl
fnstcw
xchg
adc
out
nop
jle
dec
sti
es
jae
push
test
sbb
pop
ret
je
cmp
xor
cmp
jecxz
jecxz
inc
fwait
sbb
jg
fwait
pop
mov
or
fldl
xchg
adc
cltd
mov
insl
daa
mov
test
lea
mov
push
inc
rcll
adc
xlat
cmovne
pop
push
sti
cmp
fcmovnu
inc
imul
mov
or
mov
movsb
rorb
in
sti
jg
mov
add
inc
daa
jmp
aaa
call
outsl
xchg
fdivr
ljmp
dec
ljmp
add
push
xor
iret
cmp
loopne
mov
and
lret
cmp
mov
fstps
adc
loop
push
or
mov
mov
mov
mov
aas
jge
mov
cmpsb
stos
popa
imul
test
pop
and
sbb
push
stc
in
hlt
fnclex
lret
sub
pusha
fwait
jb
inc
scas
imul
jg
add
pop
stc
adc
lock
push
dec
data16
dec
xor
fbld
daa
xchg
scas
xor
push
hlt
inc
orb
mov
inc
cwtl
mov
xchg
jl
sti
outsb
out
ret
test
push
jle
mov
js
add
xrelease
lds
into
clc
fcom
push
lret
ret
les
jp
bound
out
imul
dec
xchg
shll
das
xor
pop
ret
addb
mov
mov
xchg
mov
inc
cltd
sub
in
lock
xchg
mov
push
in
xlat
decb
aaa
cmpsb
loop
repz
mov
xchg
cmp
and
push
sbb
inc
push
push
data16
mov
jl
fcoml
jl
daa
or
scas
nop
mov
stos
xchg
fwait
divl
into
jb
popa
xor
lcall
andb
jno
into
xchg
mov
push
jp
xchg
pop
out
popa
xor
aaa
mov
int
xor
sbb
xchg
and
or
jmp
or
outsl
std
test
andl
stc
push
mov
dec
sti
shll
xor
daa
das
leave
pop
cmpsl
out
out
lcall
mov
and
mov
lahf
leave
jne
mov
pop
pop
bound
rorl
mov
pop
jo
or
ljmp
sbb
cmp
das
jg
lock
sub
and
xor
xor
fwait
push
dec
push
jp
xchg
out
xor
stos
pop
lret
test
push
jge
aad
cmp
stos
xchg
dec
xchg
mov
mov
fadds
mov
in
test
xor
fs
xchg
or
inc
ss
negb
sti
push
mov
cmpsl
sahf
jge
jbe
jg
mov
push
out
lock
sbb
enter
inc
push
outsb
int
imul
fidivrs
cmp
call
push
dec
popf
pop
ret
data16
mov
jns
mov
lret
jae
dec
repz
mov
loop
add
jcxz
xchg
cmp
mov
das
pusha
jb
push
xchg
bnd
xchg
enter
mov
mov
flds
pop
lods
fnsave
out
call
mov
mov
lea
sti
add
mov
sbb
loop
xor
sbb
push
jnp
add
call
cld
sub
cmp
ja
lahf
push
jle
mov
imul
rcll
outsl
adc
push
sub
add
and
cs
aaa
rorl
inc
push
push
inc
std
lds
imul
jns
mov
mov
lret
jno
sbb
dec
out
fildl
pop
idivb
add
hlt
and
test
jne
inc
jmp
mov
fnstenv
mov
cwtl
mov
adc
jmp
dec
test
adc
stos
fistpl
adc
sbb
stos
mov
aad
sbb
paddq
mov
in
mov
xchg
lock
push
mov
dec
popa
cmpsl
sbb
jno
mov
ljmp
inc
pop
icebp
fildl
sarl
shll
mov
cmc
cmpsl
xchg
push
xchg
stos
stos
pop
test
inc
jne
jo
jg
pop
mov
xchg
stc
cmpsl
data16
and
sarl
cmpsb
sub
test
mov
mov
loopne
cmp
shll
pusha
dec
xchg
enter
cmp
fdivl
cmp
roll
ret
ljmp
and
pop
pop
push
ret
jp
xchg
lcall
push
std
mov
stc
cli
fwait
enter
pop
or
push
ret
dec
arpl
ja
mov
das
pushf
gs
cmp
sub
out
cmp
lret
mov
lret
ds
sbb
andb
gs
push
add
outsl
int3
jp
or
mov
jle
repz
sahf
inc
testb
rcl
inc
scas
cmp
call
dec
mov
inc
out
push
mov
in
jmp
int
sub
test
mov
xchg
push
lock
dec
mov
lock
ficompl
test
jl
lea
nop
jmp
rorl
mov
adc
jg
xorb
and
iret
ds
imul
and
ret
mov
push
add
add
aas
test
out
pop
pop
jbe
clc
roll
popf
add
andl
xchg
fiaddl
sub
dec
mov
xchg
push
nop
add
sub
jp
add
cmp
fmuls
sahf
push
shll
cmpsb
mov
pop
fs
movsb
xlat
cmp
mov
pop
rorl
xchg
lret
mov
push
std
xor
dec
mov
mov
lock
setle
xor
lods
fs
push
mov
insl
adc
mov
icebp
cld
cltd
in
dec
jns
ret
inc
inc
shll
push
sub
cmc
sub
lahf
orb
mov
ret
sbb
les
fwait
and
mov
lds
fldl
sbb
adc
leave
or
repnz
mov
and
daa
mov
fildl
cli
cmpsb
and
out
les
ss
cli
push
cmp
sbb
mov
sti
sub
add
inc
hlt
cltd
pop
insl
in
out
fistpll
test
pop
hlt
pop
mov
dec
out
stc
fldenv
stos
fmul
out
adc
and
outsb
push
sub
test
push
aam
shlb
push
adc
das
push
push
mov
adc
cltd
inc
mov
out
push
in
xchg
repz
inc
loope
sbb
add
sbb
mov
jp
ret
arpl
call
stos
mov
sub
in
or
test
scas
jb
push
pop
pop
mov
adc
dec
out
popa
cmp
pop
rol
out
cld
or
jns
das
pop
jge
gs
pop
mov
scas
repz
mov
sbb
imul
test
test
mov
fdivl
mov
jo
sbb
pop
insb
shl
aas
lds
in
pop
jmp
sbb
pop
iret
out
sub
xor
mov
adc
imul
shrl
cltd
pushf
sldt
cmovno
xlat
jae
xor
orb
sub
mov
dec
mov
cmp
cltd
insb
inc
es
dec
rcrl
mov
add
pushl
mov
daa
xchg
test
mov
insb
push
pop
cli
xor
inc
shl
and
xchg
test
adc
inc
scas
stc
sbb
test
mov
pop
dec
xchg
fiadds
pop
jecxz
sub
or
repz
mov
test
cltd
push
add
push
ret
sub
aas
bound
pop
inc
push
sub
lea
sub
clc
mov
rcrb
cmp
cs
enter
lea
pop
dec
add
insl
js
fistps
mov
jnp
nop
jns
call
in
call
sti
add
repnz
sub
mov
std
pop
sbb
mov
push
dec
mov
add
movsl
aam
push
sub
mov
jg
arpl
jno
icebp
xchg
jnp
add
xor
jle
sbb
push
add
roll
mov
cmp
mov
mov
adc
stc
dec
out
inc
adc
xlat
dec
xor
dec
shl
enter
and
add
mov
dec
arpl
inc
bnd
mov
adc
addr16
ret
sbb
dec
sub
pop
jne
dec
mov
pop
dec
cmpsb
mov
sbb
lods
cld
andb
jle
sub
test
and
movl
xchg
lock
xor
adc
jmp
fs
gs
mov
jne
sub
mov
insb
sbb
cmp
faddl
enter
sub
push
sbb
lds
fisttps
sub
adc
or
aas
arpl
es
inc
loope
out
xchg
stos
push
push
popf
movsb
pop
cmp
in
jg
subl
jbe
jns,pn
fisubl
sbb
or
inc
nop
ret
out
and
leave
dec
cmp
and
lds
cmp
cmpsb
adc
add
xchg
cmp
fsubrs
cmp
xchg
push
mov
mov
loopne
clc
sbb
cmp
jle
cmp
cmp
xchg
push
rorb
push
ja
rorb
dec
pop
cmpsb
pop
mov
or
rcll
push
mov
test
int3
outsl
call
aaa
daa
lods
add
addr16
jp
test
sbb
sahf
cmp
mov
lret
fists
imul
and
jl
xchg
add
insl
cmp
pop
pop
je
std
cmc
xchg
sbb
mov
dec
imul
mov
xor
push
int
xchg
adc
fildll
xor
jns
xor
inc
enter
aad
pop
movsb
in
sub
adc
cli
and
xchg
mov
lods
jb
lods
xchg
sbb
cmp
ljmp
cmp
nop
mov
movsl
fld
mov
pop
cltd
int3
aas
notb
dec
mov
dec
daa
cmp
xchg
pop
bound
sbb
shl
addr16
and
xor
lret
stos
test
dec
lods
test
xor
jmp
dec
hlt
bound
lods
int3
in
lds
rolb
push
scas
filds
sub
sbb
mov
mov
mov
rolb
mov
stc
int3
cli
into
pusha
xor
sub
leave
hlt
es
push
or
sbb
fs
pop
cmp
cwtl
mov
push
les
ret
pop
into
test
stos
cmp
xchg
addr16
ljmp
inc
inc
bound
lock
and
jl
xor
loope
insl
enter
fwait
mov
cmp
es
jae
sub
push
push
pusha
test
cvtps2pd
push
cld
daa
push
mov
jne
mov
adc
adc
or
push
push
pop
popf
mov
jmp
add
sbbb
jmp
btrl
mov
cmp
bswap
loope
and
cmpsl
cmp
fsubs
jg
cmp
sub
dec
aas
ficompl
inc
fwait
push
lret
cmp
inc
and
bound
jnp
or
sub
test
and
es
add
incl
jecxz
int
lret
cmp
add
xchg
scas
loopne
push
mov
outsb
mov
idivb
sub
xlat
inc
dec
lcall
sahf
rcll
inc
lods
push
lret
sub
int
xchg
rcrl
mov
mov
push
sub
jo
kmovb
mov
idiv
mov
jb
invd
lahf
fcomps
and
addl
cmc
cmpsl
ds
jp
aam
fsubrs
mov
jmp
out
ja
sti
cwtl
pop
jmp
out
mov
push
loopne
iret
loope
mov
mov
subb
sbbb
mov
popf
popf
ret
add
std
cmp
fwait
pop
mov
push
lss
out
lods
inc
lahf
xor
loop
int3
idivl
pop
xchg
pop
popa
into
lret
jl
jb
push
jno
test
inc
push
lods
lds
gs
rcll
jns
or
popa
cmpsb
sbb
or
dec
adc
sahf
call
out
out
cld
data16
sbbl
jo
insl
ficompl
xor
dec
pcmpgtw
add
jb
and
cmp
dec
jp
nop
mov
push
mov
loop
loopne
inc
aas
lock
sbb
push
dec
pop
cmp
mov
pop
mov
mov
jmp
inc
mul
pusha
lret
or
leave
orl
lods
int3
inc
imul
inc
pushf
js
addr16
mov
shll
jl
inc
loopne
cmp
insl
in
aad
fistps
je
lods
cmp
adc
add
test
jge
mov
sub
stos
data16
faddl
repz
and
and
cmpsl
lods
sub
inc
and
push
mov
in
sub
outsb
sbb
inc
cmp
aaa
push
cmpsb
or
mov
popf
mov
sbb
mov
insb
xchg
push
out
jae
fwait
sbb
mov
sbb
mov
pop
sarb
or
push
cmp
clc
push
cmp
mov
or
push
outsl
adc
ss
cltd
mov
push
jge
cwtl
bound
mov
mov
pusha
push
and
and
je
call
ret
call
lahf
call
hlt
push
mov
movsb
xlat
jecxz
jp
cmp
jle
andl
pop
es
push
jmp
mov
xchg
lahf
jge
int
loop
out
cwtl
pop
das
jge
vpaddsw
or
fwait
in
lcall
cltd
stos
call
in
pushf
or
xor
cmp
dec
cmpsb
mov
xor
inc
mov
sti
out
add
mov
cmp
mov
outsb
enter
mov
ret
out
addr16
lods
sub
icebp
or
push
es
in
mov
cmp
es
xor
inc
mov
push
sbb
add
fildl
sub
xchg
jns
ret
dec
or
mov
fists
mov
stos
xchg
adc
or
movsb
fmull
fs
cmp
and
jns
mov
and
mov
call
imul
enter
aaa
pop
mov
pop
cmc
adc
inc
mov
inc
inc
insb
aad
mov
ds
fdivr
xlat
sbb
push
mov
sbb
pop
jge
mov
shll
xor
dec
sbb
rclb
hlt
sbb
cld
adc
imul
dec
mov
xchg
cmp
leave
add
and
mov
xchg
es
lret
fsubs
loop
add
sbb
dec
dec
test
sbb
dec
pop
cmp
int3
cmp
cli
or
pop
jb
lds
pop
in
lods
mov
popf
xor
outsl
pop
mov
xorb
mov
fistpl
cmpsl
inc
loope
mov
push
pusha
sub
pop
lods
jb
push
jnp
fistpl
mov
lds
and
sti
movsl
aad
in
inc
imull
fstps
ljmp
in
lret
call
pop
mov
test
push
mov
push
scas
inc
fisubrl
dec
pop
pop
sbb
ss
cmp
in
pop
jge
xchg
sti
sbb
dec
cmp
hlt
mov
insb
mov
enter
cmp
adc
ljmp
ljmp
xchg
mov
int
pop
scas
loope
fidivs
or
mov
aam
dec
mov
fstl
xacquire
pop
lret
inc
pop
mov
loopne
ret
pop
out
movsl
fiadds
in
and
dec
mov
orb
aam
sbb
sbb
in
or
or
jge
mov
test
nop
add
out
fdivrs
neg
push
pusha
and
dec
pop
movsl
loop
in
mov
bswap
dec
cmp
add
cmp
mov
les
push
insb
mov
pop
mov
mov
mov
mov
cmp
pushf
or
push
xorb
jecxz
ljmp
xor
jmp
rsm
mov
data16
mov
lods
and
ret
cmp
je
daa
mov
movsl
aaa
adc
lock
and
and
push
lods
rcrl
mov
xlat
out
les
insb
ljmp
and
out
vorps
xor
mov
cmc
push
mov
cmp
pop
sub
push
mov
mov
push
int3
mov
call
mov
cld
pop
mov
arpl
js
ret
cmp
push
repnz
xor
mov
jecxz
jne
or
xchg
push
xor
getsec
cmp
fs
loope
insb
add
adc
jle
dec
out
add
stc
hlt
popa
out
sub
jb
leave
sarb
or
ret
imul
in
push
fs
testl
shrb
mov
push
xlat
pop
or
jmp
xchg
or
pop
mov
pop
iret
ret
mov
jecxz
jbe
repz
fwait
pop
and
add
outsl
lret
lea
dec
push
dec
jl
rol
in
mov
or
mov
mov
jo
push
mov
sub
sub
rorb
dec
and
lcall
cmp
sub
xor
mov
cmp
sub
inc
jbe
shll
sbb
sub
push
repz
cmp
shll
push
cmp
push
pop
hlt
scas
in
cmp
stc
jge
mov
mov
xor
clc
lock
and
gs
jg
sub
or
or
push
jg
xor
cwtl
sbb
mov
lret
cmp
sahf
pop
inc
repz
mov
jmp
loope
lcall
adc
mov
mov
sbb
test
mov
stos
pop
pop
arpl
jle
jp
mov
shl
add
into
pmovmskb
xchg
push
aas
xchg
dec
fisubs
cltd
mov
inc
into
xor
and
test
jmp
sub
mov
enter
mov
ja
pushf
jo
popa
movsb
pop
sbb
cld
fcompl
pop
mov
je
cmpsl
int
or
das
popa
add
dec
lcall
add
dec
mov
outsb
and
stc
xchg
shr
jae
test
jae
sbbl
out
mov
into
push
xchg
fcomip
mov
cli
fisttps
sbb
xlat
in
or
add
es
loopnew
pop
pusha
sbb
pusha
jecxz
insb
add
mov
cmp
ficompl
faddp
inc
ret
xorl
mov
push
sbb
popa
dec
sub
xchg
ja
cmc
hlt
pop
mov
jb
es
test
mov
fs
nop
jle
pop
bound
xor
push
dec
push
sub
inc
ret
aad
lret
addl
push
int
pop
inc
cmp
xor
sbb
movzwl
pushf
dec
mov
cld
add
sub
cli
loop
test
and
test
adc
mov
mov
fnsave
jb
test
mov
rorl
icebp
cmp
sbb
dec
cmpsl
inc
sbbb
mov
gs
jmp
push
jle
add
xchg
loop
out
jno
mov
negb
inc
lret
mulb
push
pop
shl
int3
mov
add
or
pop
outsl
cmp
sbb
mov
repz
mov
mov
inc
pop
divl
inc
data16
call
insb
mov
arpl
shl
jns
sbb
int3
or
jecxz
outsb
add
in
push
sbb
dec
mov
mov
js
mov
xor
movsl
xor
cli
sti
jns
lods
leave
adc
jns
xchg
scas
push
test
movsb
inc
lods
inc
sbb
sub
test
push
scas
xchg
mov
push
aam
xchg
xor
xor
es
push
add
gs
jb
sub
in
pop
pop
inc
cmp
push
dec
imul
lods
cwtl
pop
in
fsts
sub
xor
pusha
dec
lret
or
ficoml
pushf
lahf
xor
addr16
rcr
jg
cmpsl
aas
sbb
pop
cwtl
push
lods
jge
sbb
jge
pushf
xchg
in
rcrl
cwtl
pop
mov
jae
add
cmp
sahf
lock
cs
fnstcw
sub
mov
stos
cli
testb
aaa
out
aad
dec
sarb
or
or
pop
ret
fdivl
enter
dec
sbb
andb
or
xchg
mov
popa
or
or
push
jg
sarl
pushf
leave
push
mov
mov
out
dec
rorl
roll
sti
dec
push
adc
mov
call
loopne
ljmp
xlat
call
sar
bnd
mov
lock
cli
mov
in
fdivs
int3
jg
repnz
fisttpll
inc
js
inc
sub
scas
test
cmp
shrl
mov
stc
insl
push
push
xchg
cmpsl
dec
sub
push
popl
push
sbb
gs
mov
dec
adc
push
and
sub
fisubrs
fimull
dec
test
ds
or
pop
stc
in
pop
jmp
cld
jmp
push
adc
test
in
pop
jge
flds
push
dec
jl
push
icebp
and
push
jo
inc
push
or
mov
mov
into
push
ljmp
insl
imul
shll
dec
sahf
adc
xchg
test
inc
outsb
adc
jg
cmp
mov
dec
arpl
push
jo
sbb
jecxz
xchg
dec
sub
pop
pop
rcr
not
add
fistpll
mov
mov
mov
or
sub
in
aaa
jae
or
icebp
push
shrl
xchg
dec
xchg
jle
sbb
and
gs
pop
fdivrs
push
cmp
stc
push
push
pop
lock
push
push
fistpl
add
stc
clc
lods
mov
clc
push
mov
repz
stc
cmp
xchg
ja
and
lock
dec
lret
jno
mov
inc
cmp
xor
dec
xchg
cmp
jecxz
cmc
ds
iret
fistl
repz
stc
jo
dec
or
pusha
das
sub
dec
xchg
incb
mov
and
inc
lret
add
push
test
leave
lahf
popa
fisubrs
push
add
cmp
repz
add
insb
sbb
in
js
and
mov
mov
in
adc
add
scas
mov
or
imul
jns
push
mov
push
aad
outsl
xchg
clc
pop
sub
dec
divb
rcll
mov
dec
inc
add
mov
movsb
cmp
repz
xchg
adc
enter
dec
sbb
loopne
adc
scas
lcall
call
das
xchg
cltd
pop
xchg
mov
add
sbb
cli
flds
jmp
dec
hlt
clc
cmp
test
cld
add
mov
fsts
cmpsl
ljmp
pop
fiadds
xchg
mov
cmc
lcall
cmp
cmpsb
pop
push
sub
inc
sbb
mov
jmp
cli
cmp
test
inc
cmp
dec
xchg
mov
es
lret
ss
pop
dec
mov
and
mov
sub
sbb
adc
lds
push
jno
pop
outsb
movsl
das
mov
lock
cmp
push
mov
notl
mov
dec
and
xor
pop
cwtl
fs
aam
mov
cltd
aad
xor
xchg
jae
test
pushl
lret
movd
jns
pop
jae
dec
push
shlb
sbb
sub
adc
sub
push
imul
or
sub
adc
cmp
add
outsb
push
dec
stos
jbe
cld
mov
in
inc
jecxz
adc
adc
insl
dec
pop
cmpsl
adc
fsts
pop
cmp
int3
outsl
dec
add
mov
int
out
fstpt
sub
xchg
and
jl
sbb
ss
scas
repz
sbb
scas
xor
imul
jne
jg
sarl
push
fists
int3
dec
shll
fdivrs
sub
mov
add
sub
rcll
sub
add
jge
pop
call
popl
xlat
mov
ds
int
dec
test
enter
and
adc
mov
cltd
sahf
je
gs
ljmp
mov
cs
xchg
add
out
popa
fsubrl
xchg
pusha
inc
mov
sub
xchg
push
mov
inc
push
sub
in
mov
fsubrl
pop
mov
adc
rorl
mov
cwtl
clc
pop
mov
mov
cli
dec
movsl
fs
sbb
xchg
daa
xchg
int3
sbb
lcall
fsubrp
dec
pop
daa
jl
std
js
movsl
pop
es
popf
mov
or
push
icebp
aaa
sub
mov
pop
je
ret
sahf
dec
and
and
lods
mov
mov
inc
fwait
in
dec
push
popf
mov
stc
sbb
pop
jnp
in
hlt
negl
and
push
je
enter
sbb
lcall
imul
shrl
mov
xchg
and
bound
daa
mov
mov
dec
xchg
push
sbb
sbb
sar
fsubp
ret
and
icebp
lahf
popa
call
push
adc
ret
int
mov
inc
jno
add
cmp
outsb
cmp
add
dec
and
pop
mov
cmp
fsts
hlt
jmp
ds
xchg
pop
adc
pop
mov
dec
cwtl
enter
mov
lods
xor
in
repnz
mov
sbb
sar
xchg
and
xchg
dec
mov
ror
jns
xlat
mov
pushf
pushf
insl
scas
fbstp
xor
scas
into
sbb
int3
xchg
push
xor
data16
add
inc
or
js
pop
repz
push
xchg
out
dec
mov
inc
loop
rcrb
sbb
xor
mov
sbb
enter
mulb
pop
xor
int3
mov
xchg
and
pop
push
aas
sub
insb
popa
add
cs
popa
sbb
jne
lcall
xor
addb
ss
push
test
push
xor
fst
mov
test
mov
xor
fmul
jno
test
lahf
ret
and
add
in
mov
adc
and
rcrl
loope
push
lahf
and
int
adc
mov
sti
shr
add
dec
fidivrs
mov
xchg
jl
cltd
mov
sti
int3
dec
add
jge
xor
lds
in
sub
adc
cmp
loopne
inc
aaa
in
mov
mov
loop
mov
fistpll
cmc
fadds
outsb
jle
pop
mov
push
aam
push
mov
lea
inc
adc
xchg
lret
jns
insl
lods
mov
lahf
test
mov
cmpsl
xor
sbb
mov
and
inc
rcrb
std
adcl
xor
cmp
adc
adc
push
pop
pop
add
out
inc
je
jmp
lcall
inc
into
inc
dec
dec
push
enter
pop
daa
cmp
inc
scas
dec
and
aas
jb
cltd
jae
mov
orl
cmp
xor
lcall
mov
jae
and
js
cmp
adc
repz
or
pushw
mov
dec
rorb
push
ret
cmp
shlb
outsl
clc
movl
and
sbb
mov
push
into
mov
js
fcomps
adc
inc
out
in
push
cmp
repnz
add
insb
add
jle
fcomip
mov
shll
repnz
frstor
pop
and
iret
fists
negl
int
xor
sbb
js
xchg
adc
iret
inc
popa
mov
fstp
sub
sub
fs
mov
movsl
mov
rcrb
aaa
dec
aaa
mov
stos
xchg
test
mov
mov
mov
sahf
lret
test
iret
mov
sbb
adc
pop
fistpll
push
cmp
xchg
sahf
mov
cmpsb
cmp
xor
and
pusha
adc
push
xchg
xchg
orl
mov
dec
jp
lcall
stos
mov
arpl
jl
cld
and
cld
mov
inc
add
shr
mov
loope
cmp
sbb
sti
shll
pushf
or
popa
sub
scas
mov
jecxz
jge
fadd
cs
int
jp
pop
roll
sti
xchg
std
xchg
sahf
pop
mov
inc
aad
xchg
mov
jmp
scas
mov
and
push
idivb
stos
xlat
scas
xchg
loop
pushf
or
fld
and
xor
add
cld
push
xchg
xor
xchg
lahf
int3
sbb
push
in
cld
mov
mov
push
push
adc
out
dec
jno
add
cli
orb
add
jge
jno
insb
or
push
jb
xchg
sbb
and
fwait
bound
call
dec
jae
subb
or
lock
leave
movsb
addr16
shll
jb
pop
imul
adc
lea
and
jmp
mov
jle
std
push
xor
cmpsb
cmp
sbbl
lods
inc
int
mov
xor
push
and
cmpsl
adc
or
pushf
mov
mov
and
loope
orl
pop
pop
mov
popf
lret
and
pop
push
addb
xchg
inc
fsubs
ret
test
dec
add
aam
sbb
or
sti
in
lret
call
xchg
mov
lods
cmp
xor
fimull
add
in
and
mov
pop
addb
scas
dec
xor
and
mov
pop
jp
mov
stos
pop
gs
mov
or
outsb
cmp
scas
mov
in
pop
push
and
cmpsl
and
xor
out
mulb
jns
in
xchg
outsb
shlb
lds
sub
cmc
dec
xorl
aad
pop
sbb
insl
or
push
add
icebp
cmpsb
inc
lret
sahf
dec
push
mov
mov
mov
in
xor
jbe,pn
test
callw
das
ljmp
inc
inc
lcall
lds
shl
stc
sub
xchg
jns
lret
movsb
int
stc
outsb
cmp
adc
add
popa
std
cmpsb
push
push
mov
lret
mov
ds
cmp
std
push
cmp
mov
pop
inc
in
clc
or
sub
dec
push
dec
shll
fistl
xor
or
pop
andb
psadbw
cmp
push
sub
ljmp
sub
cs
xchg
int3
inc
icebp
xor
imull
push
and
lds
mov
inc
sub
xchg
insb
aad
and
inc
push
adc
mov
push
push
loop
out
pop
lret
xlat
int3
or
cwtl
sub
dec
daa
arpl
mov
push
xor
loopne
lahf
das
sub
shl
fwait
cmpsl
sub
jne
mov
dec
mov
cld
xlat
adc
repnz
jae
stos
push
and
jp
insl
xchg
repnz
jne
cmp
dec
mov
jmp
in
sbb
clc
sbb
pop
mov
inc
push
xchg
dec
dec
adc
inc
cltd
xchg
push
fmull
rcr
sahf
dec
adc
lods
outsl
push
imul
add
loopne
jg
fcoml
fs
xor
dec
les
mov
sub
cld
aad
add
cmp
adc
mov
pop
std
scas
out
or
jle
pop
pop
add
dec
mov
sbb
xchg
movsl
fwait
lahf
mov
enter
push
pop
sti
andb
xchg
mov
mov
adc
fiaddl
sbb
or
in
iret
add
lock
mov
fiaddl
add
enter
and
xor
and
mov
and
adcb
outsl
push
test
mov
xor
lret
in
inc
fidivrs
repnz
sti
lock
outsb
inc
les
lcall
aam
xchg
mov
mov
dec
jns
inc
push
sub
adc
push
mov
in
pop
mov
mov
jecxz
negb
push
lahf
lods
out
aaa
shl
std
rclb
or
mov
scas
jp
ja
pop
aas
jno
jb
fnstsw
push
sub
add
add
clc
mov
xor
jl
jmp
cmpsl
rcrl
hlt
ja
adc
jecxz
rcl
sahf
insl
xchg
in
fdivrs
xor
dec
fwait
aaa
out
jb
sub
mov
cmp
stc
arpl
push
mov
xchg
mov
inc
iret
xchg
mov
xchg
pop
push
mov
je
jno
cmc
mov
cmp
loopne
ror
lret
add
sti
fidivl
inc
pop
mov
inc
clc
xchg
fwait
pop
or
xor
mov
call
mov
and
into
sbb
add
pusha
jnp
popa
aaa
enter
gs
shll
and
movsl
fwait
pusha
push
cmc
mov
sti
fistpl
push
les
adc
mov
push
add
xor
add
stos
mov
aad
fisttps
mov
dec
jns
fimull
enter
insl
fidivrs
test
jb
mov
cmp
sbb
cmp
or
insb
cmpsl
inc
flds
pop
imul
arpl
out
cmp
clc
jnp
in
jnp
mov
mov
fdiv
inc
in
mov
add
mov
test
or
sbb
jno
xorb
in
sub
rcrl
shrb
into
jbe
jle
sbb
cmp
test
sub
int
xor
test
push
rorl
je
mov
add
mov
cmp
adc
pop
outsb
movsb
push
cmp
jp
jae
lods
fnsave
jmp
hlt
and
cmp
pop
inc
aam
std
xchg
pop
inc
lret
jnp
fistpll
push
dec
shl
jp
nop
imul
ret
lcall
mov
fdivrl
imul
jp
sti
ds
xor
testl
in
cli
add
dec
adc
add
sub
cld
movb
out
mov
or
call
jno
push
cld
dec
add
in
std
mov
ss
dec
addr16
mov
lea
cmp
filds
xor
xor
stos
jl
icebp
pop
mov
addl
dec
or
fildl
int
xchg
sbb
push
xor
adc
jbe
cmp
xchg
mov
push
lahf
push
test
mov
adc
call
and
mov
lcall
xchg
inc
lods
mov
in
push
push
jl
cmp
test
dec
jnp
and
ficoms
in
and
stos
int
div
pop
shl
jp
dec
mov
and
jno
mov
mov
repnz
and
push
ss
inc
imul
xchg
push
pop
adc
shl
lods
les
adc
in
adc
test
fisttps
push
loopne
cwtl
loope
ret
push
dec
jo
jmp
dec
mov
popa
shlb
dec
stos
fsubrs
mov
jecxz
jp
rorl
into
jg
int3
mov
es
jne
sub
inc
add
xor
adc
jne
push
jmp
mov
in
adc
pusha
or
xor
push
inc
gs
jle
in
enter
hlt
inc
shrb
in
sbb
xchg
popa
ret
js
jg
mov
ljmp
cmp
outsb
sar
popf
lcall
pop
pop
mov
cli
jle
sbb
pop
cmp
in
mov
mov
mov
js
ljmp
xchg
pop
and
mov
xor
push
incb
out
scas
test
punpckhwd
in
adc
stc
or
and
push
cmp
push
sbb
xchg
das
push
pushf
sub
movsl
xchg
push
and
cmp
dec
sub
aaa
lds
cs
aaa
rcll
fistps
out
enter
jne
test
sub
add
cmpsl
ljmp
and
mov
push
and
adc
mov
test
jecxz
test
add
mov
inc
cltd
or
sbb
retw
pop
dec
push
das
mov
add
jae
mull
xor
movsl
mov
push
dec
sbb
cmp
mov
jle
dec
jb
loop
iret
lcall
lret
push
lcall
aam
adc
jg
cwtl
int3
add
popf
sub
and
push
cmp
or
fiaddl
pop
mov
xor
mov
mov
mov
clc
push
jecxz
mov
add
push
pushf
stc
pop
inc
ljmp
les
roll
shll
pop
inc
ljmp
dec
jge
ja
dec
mov
int3
add
imul
sbb
hlt
pop
jns
sbb
xchg
inc
shll
jl
or
push
cmpb
mov
adc
and
cmpsb
xor
insb
add
stos
inc
jbe
outsb
jo
aaa
jno
ljmp
add
mov
out
push
sahf
loop
fnsave
jo
jb
ljmp
movsb
cmp
push
jbe
ss
out
mov
das
lret
arpl
dec
cmp
icebp
and
arpl
inc
push
jbe
pop
sbb
sub
lock
cmp
pop
icebp
and
mov
movsb
mov
mov
mov
dec
repz
inc
in
sub
sbb
sbbl
adc
jp
cltd
lods
into
into
aad
push
loopne
pop
loopne
int
push
cmpsb
adc
cmp
pop
into
or
mov
shll
test
pop
leave
or
and
test
mov
mov
daa
xor
into
dec
ss
xor
ret
push
inc
call
icebp
sahf
rorl
jne
xor
fiaddl
add
lcall
add
aam
inc
add
adc
dec
jnp
xchg
xchg
out
and
ja
xchg
or
xchg
mov
dec
aaa
push
xor
frstor
rcrl
lods
subl
jp
ret
sub
out
shrb
mov
add
sub
mov
inc
pop
stc
jecxz
sub
cmp
inc
and
mov
xchg
pop
fiadds
mov
loope
nop
ljmp
stc
nop
pop
jnp
jb
negl
jnp
or
repnz
rcl
jp
cmp
inc
sbb
sbb
mov
jae
test
cmp
dec
lods
lods
jnp
push
imulb
dec
xor
lcall
xchg
sub
add
test
jae
and
popf
mov
jle
gs
loopne
mov
test
mov
pop
ljmp
xor
nop
fsubl
mov
js
in
in
std
pop
imul
std
cmc
cmp
fidivrs
iret
loop
cmp
das
xchg
fsubrl
popl
pop
mov
and
aad
rolb
arpl
mov
dec
pop
lods
lods
cmp
insl
push
jb
dec
dec
lods
mov
movsl
out
push
cmp
dec
cmpl
mov
cmpsl
aas
sbb
cmp
push
inc
ss
xchg
pop
test
stos
clc
test
out
jmp
mov
in
mov
test
or
mov
adc
ja
push
imul
push
pop
in
repnz
mov
add
mov
xchg
dec
cmp
cwtl
stc
imull
gs
adc
xchg
dec
mov
sub
cld
ja
mov
sub
rcl
sbb
jmp
xor
cmp
pop
shrb
or
jne
ret
mov
mov
mov
test
mov
std
mov
out
arpl
ljmp
add
pop
fsubl
aam
stc
sbb
je
sahf
mov
out
gs
lcall
or
cmpsb
jb
cmp
insb
popa
mov
dec
clc
stos
jle
sub
mov
xchg
pop
mov
or
jb
cs
xor
ljmp
dec
iret
mov
ja
out
cmc
test
xor
mov
lret
aad
inc
mov
mov
js
daa
mov
pop
fstpt
sbb
sub
pop
sbb
popa
push
and
inc
out
pop
cmc
mov
sub
fmull
jbe
in
add
sbb
sbb
test
or
xor
adc
sbb
dec
push
rclb
xchg
jmp
cmp
js
std
mov
shlb
adc
or
stos
in
inc
jbe
pop
and
fimull
scas
jge
mov
lock
and
xchg
repz
push
xlat
jl
dec
mov
inc
rcrl
pushf
insb
cs
pop
add
or
stc
stos
aas
xor
mov
insb
push
mov
cmp
and
outsb
shrl
icebp
and
mov
and
mov
hlt
rolb
lcall
movsb
mov
jge
or
lods
jae
stos
cltd
les
pop
or
cmp
mov
mov
repz
cltd
ret
loope
out
and
cs
aaa
sbb
jns
insb
icebp
mov
adc
push
push
pop
mov
aam
in
imul
test
test
xchg
xor
cwtl
cmp
out
push
mov
ret
cmp
scas
or
in
adc
push
and
fwait
sahf
divl
sub
movsl
icebp
fcoml
push
adc
rcrb
pop
pop
arpl
fidivl
xchg
mov
repz
std
movl
adc
lea
leave
movsb
and
popl
pop
leave
jns
add
lods
dec
mov
push
mov
lds
pop
imull
jecxz
mov
arpl
and
xor
movsl
jno
push
cmp
sub
mov
sbb
add
jne
pop
adc
sti
pop
outsl
mov
mov
mov
jle
iret
loopne
pusha
fcmove
mov
repnz
mov
xchg
test
pop
cwtl
std
pop
ss
aad
stos
xor
pop
and
insl
lea
rcl
scas
ret
or
add
and
or
dec
mov
inc
mov
mov
fistpl
xchg
sub
cli
lock
mov
call
adc
xor
xchg
jge
mov
adc
inc
idivb
sub
icebp
cwtl
repnz
sti
test
jge
into
mov
and
nop
adc
xchg
aas
insb
mov
jg
mov
jnp
mov
test
out
mov
xchg
add
cmp
mov
repz
or
clc
cmp
jo
jno
std
in
pop
movsb
fstps
dec
push
lahf
std
or
push
xor
popf
test
loopne
sbb
loop
dec
sahf
mov
or
shl
jo
xor
mov
add
mov
andl
mov
enter
ja
jb
aam
push
sbb
arpl
jecxz
movsl
aam
iret
adc
xchg
pop
mov
sahf
shrl
or
pop
dec
mov
clc
xorb
mov
nop
jo
mov
push
jbe
imul
mov
pop
test
adc
fidivrl
fisttpl
mov
jns
jb
das
stos
jnp
pop
sub
out
in
out
pop
xor
jbe
xchg
jmp
mov
popf
add
push
mov
xchg
dec
clc
cwtl
add
dec
test
xor
ss
mov
dec
out
in
dec
cs
loopne
push
into
dec
jecxz
push
pop
mov
inc
pop
in
fcomps
or
fcoml
or
xchg
cmp
rcrb
jno
mov
inc
filds
sub
ffree
shll
cmpsl
push
pop
incb
and
in
sub
pop
gs
enter
popa
add
add
sub
add
xor
stos
pushf
inc
cs
xor
arpl
aas
sahf
mov
pop
lods
pop
inc
aas
cmp
iret
or
ret
jns
in
cmp
aaa
les
jge
shll
cmp
ja
sbb
xor
pop
or
sbb
test
sub
mov
jno
lcall
out
fstl
js
in
int3
cmp
push
rorb
mov
add
sub
mov
mov
mov
popa
and
test
xor
cwtl
push
adc
lds
imul
pop
pop
cmp
and
adc
push
dec
adc
leave
push
inc
call
fimull
and
cs
scas
into
nop
xor
mov
jo
xor
fldt
cmpsb
jge
pop
mov
pop
sub
xlat
push
mov
stc
movsl
and
jge
mov
arpl
sbb
mov
and
adc
mov
xchg
mov
scas
inc
jbe
adc
popf
fnstsw
xor
sbb
adc
dec
and
popa
cmc
sub
or
push
aaa
mov
dec
addr16
and
inc
sarl
ljmp
add
addr16
mov
shll
pop
lods
cmp
idivb
jnp
xor
xlat
push
pop
std
dec
dec
adc
imul
enter
mov
lahf
stos
loop
lods
nop
fstps
pop
inc
rorb
sub
lds
inc
lret
dec
xchg
and
repnz
aaa
cmp
sub
push
orb
iret
mov
lods
xchg
popf
sarl
shll
cmc
add
movsb
into
mov
jge
sbb
xchg
mov
sbb
pop
push
dec
xor
xchg
lret
inc
mov
pusha
cmp
in
jle
ja
cmp
push
jg
sub
iret
inc
or
inc
das
dec
imul
cwtl
xchg
dec
xor
pop
push
aad
gs
js
mul
inc
sbb
mov
jmp
iret
rclb
popf
ret
mov
sbb
rcll
inc
push
arpl
push
rorl
ja
loop
xchg
popa
cmp
lret
loop
mov
hlt
cmpsb
hlt
iret
dec
fsubrl
adc
dec
scas
cmp
pop
sbb
mov
xchg
jge
add
mov
pop
jns
jbe
andb
mov
mulb
xor
add
sbb
test
ja
mov
lahf
sbb
xlat
mov
mov
push
enter
out
and
aad
mov
js
imulb
lcall
fwait
add
or
add
dec
jmp
imul
outsb
out
dec
in
mov
pop
loope
cltd
cwtl
jmp
pop
loop
les
jmp
sub
adc
call
mov
sub
push
fs
push
jae
add
mov
aad
add
or
pushf
out
ljmp
popa
fwait
aaa
stc
lret
sti
aaa
jl
dec
pop
call
xchg
mov
lods
lods
xchg
pushw
data16
ret
out
sti
shrd
cmc
push
or
imul
test
push
lds
sbb
sbb
movsb
jno
sbb
ret
shrb
mov
hlt
lea
mov
xchg
push
loopne
cmp
add
hlt
lds
lods
mov
out
lods
sti
mov
std
mov
leave
push
fisubrs
xor
pop
out
lods
imul
xor
fwait
mov
stos
mov
lea
inc
sbb
push
sbb
jne
aaa
push
test
pop
cmpsb
xchg
fimuls
xorl
xchg
sub
push
nop
mov
int
inc
arpl
outsb
mov
test
adc
dec
sub
rorb
into
imul
mov
mov
push
mov
gs
inc
lds
fucomp
repnz
loopne
dec
dec
dec
pop
dec
and
push
pusha
lret
or
pop
xchg
and
inc
xchg
sbbb
pop
pop
nop
xchg
inc
jl
cwtl
mov
push
mov
punpckhwd
scas
mov
gs
mov
and
xor
pushf
mov
jecxz
mov
jb
sub
inc
dec
cmc
int
adc
dec
int3
fbstp
add
mov
and
pop
and
ja
push
in
enter
fsts
rcrl
mov
inc
xchg
imul
or
pusha
jmp
mov
fs
arpl
mov
and
mov
pop
out
clc
cmp
loopne
fwait
addr16
jg
es
aad
add
ja
and
test
lods
add
mov
out
push
pop
cld
mov
cmc
aas
faddl
call
in
dec
lods
mov
addr16
and
inc
dec
mov
repz
shl
fstpl
mov
or
sub
test
aas
call
pop
cmpsl
iret
cwtl
outsl
and
jae
jnp
jle
mov
and
sbb
dec
cmp
movsl
arpl
push
hlt
jmp
xor
mov
push
loope
decl
decb
and
sbb
add
sarb
mov
call
test
int
test
jns
push
xchg
daa
mov
dec
cli
rcrl
imul
dec
xchg
mov
loopne
inc
inc
cmpsb
fidivrs
ret
loope
cmc
leave
inc
adc
xchg
in
mov
addl
imul
sub
repnz
fstps
ds
cmp
enter
pop
cltd
dec
and
ljmp
push
cld
mov
sbb
int3
iret
lret
cmp
lret
mov
in
fsts
or
push
mov
mov
mov
jbe
cltd
neg
bound
jnp
js
jo
lods
pop
sbb
loope
mov
ja
je
subb
mov
cmp
inc
cmp
sahf
sub
mov
mul
inc
push
jge
nop
stos
cmp
aam
or
ficompl
insb
jns
xor
mov
dec
cmp
aam
push
test
test
cli
lods
pop
or
xchg
mov
fimuls
fwait
pop
out
xor
cmp
dec
sarb
iret
ja
inc
iret
repz
lcall
in
mov
inc
mov
sbb
sbb
dec
or
pusha
pop
add
insl
ss
arpl
mov
pop
loop
nop
jle
sbb
jbe
and
pop
lods
inc
fwait
sub
pop
mov
dec
mov
mov
jmp
or
cmp
sbb
adc
mov
adc
pop
push
pop
int3
push
lods
xor
out
add
data16
cmp
jp
jns
adc
inc
fcompl
je
subb
fldl
shl
jae
cmc
addr16
and
popf
ja
leave
xlat
inc
pop
sbb
adc
sub
mov
bswap
inc
in
aas
fstpt
dec
sbb
jle
popa
inc
push
ret
adcb
xor
cmp
lcall
sbb
sbb
stos
jne
mov
sub
dec
lahf
and
iret
call
mov
sub
loope
xor
test
cli
cmp
sarb
daa
pushf
sahf
inc
cmp
out
dec
push
cld
sbb
pop
pop
fdivr
xor
xor
fistpl
mov
mov
sub
repnz
jb
lods
outsb
mov
adc
shl
add
pop
xchg
repnz
mov
stos
adc
lret
jnp
enter
jp
fisubl
ljmp
dec
inc
fisttpll
mov
hlt
cmp
jge
in
call
mov
cmpsb
xchg
pop
leave
dec
pop
push
jecxz
sbb
cmc
fisubrs
push
push
cs
adc
add
cmpl
dec
shlb
jle
daa
ljmp
mov
lods
push
fisttps
mov
rcl
xlat
add
dec
fdivr
mov
sub
mov
out
fwait
xchg
xchg
aam
hlt
xchg
out
mov
or
sbb
test
push
iret
push
pop
pop
ret
ret
add
adc
add
or
sbb
add
and
lret
ret
pop
ds
jne
xchg
jae
jp
xchg
sub
cmp
add
arpl
mov
rol
lret
mov
out
sub
inc
mov
jne
ret
cmp
stos
mov
xchg
lea
inc
leave
and
jmp
jns
mov
test
jmp
js
xlat
mov
add
sub
mov
inc
or
dec
sahf
and
hlt
test
and
xor
testl
mov
adc
cmp
ljmp
cltd
fwait
loopne
cmp
ret
jp
pop
fcomip
popf
hlt
pop
add
and
pop
out
mov
dec
push
adc
lcall
fidivl
shlb
or
cmp
gs
adc
jge
int
and
fmuls
cwtl
les
adc
mov
xor
jg
inc
scas
ret
ja
hlt
mov
sbb
fmull
stc
pop
adc
xchg
into
jno
lcall
iret
stc
mov
outsb
add
lods
outsb
mov
xor
outsl
add
jne
sbb
mov
add
jnp
pop
sbb
jg
movsl
push
packsswb
xorl
pop
xchg
pusha
push
push
lock
in
or
lretw
les
pop
push
fbstp
cmpsb
push
das
rcrl
ja
mov
ljmp
mov
adc
dec
push
idivb
sahf
dec
das
int3
repnz
and
enter
hlt
sub
adc
jb
mov
adc
js
into
push
jmp
scas
fld
pop
mov
cmp
lea
sbb
cmp
or
js
push
repz
popa
and
leave
mov
xor
jl
out
push
and
mov
pop
jae
inc
mov
popf
sub
outsb
or
mov
or
out
les
dec
outsl
mov
addl
add
mov
add
cmp
pop
pusha
test
ret
dec
dec
or
inc
pushf
cmc
jle
mov
add
scas
out
adc
xchg
cmc
pushf
cmpsb
or
jmp
mov
sbb
add
dec
adcl
pop
cmpsl
mov
jl
das
dec
mov
iret
xor
add
jo
pop
enter
sbb
adc
adc
inc
and
dec
and
cwtl
les
sbb
outsb
mov
pop
lock
cmp
sbb
inc
mov
aam
out
mov
cmpl
mov
dec
mov
addr16
sub
out
mov
push
push
movsl
mov
ficoml
sahf
cmp
jae
clc
sbb
jb
stos
hlt
adc
lahf
stos
out
arpl
aaa
dec
jnp
mull
adc
sahf
mov
cltd
add
ret
in
xchg
jo
lret
in
jae
or
les
aam
js
adc
xchg
pop
mov
adc
jp
sub
dec
add
dec
xchg
cmpsb
mov
jb
jg
mov
push
into
popf
inc
jns
pop
mov
ja
sbb
out
mov
jp
sub
scas
sub
stc
xchg
mov
mov
insl
push
mov
pop
and
imul
mov
and
test
cmp
adc
xor
inc
aas
mov
mov
add
dec
add
stc
pop
jp
shlb
fstps
jns
push
imul
mov
fisttpl
dec
inc
lret
ss
jge
fs
mov
pushf
iret
and
in
jne
sbb
push
xchg
sub
lods
shl
pop
xor
daa
popf
sbb
lds
in
jne
xchg
cmc
cmc
or
sub
stc
sub
call
xor
int3
or
out
enter
sub
es
inc
fwait
jns
fwait
insb
decl
inc
cld
negb
sbb
sub
cmp
pop
jb,pt
mov
or
repnz
mov
pop
je
push
push
mov
push
pop
ret
test
and
sbb
test
out
movsl
or
push
xchg
xchg
pop
sub
in
push
inc
mov
xor
xor
pusha
jns
lods
pushf
rcrb
add
cmp
stos
pop
push
lea
mov
hlt
stos
cmp
test
push
and
add
loop
xor
incb
mov
sbb
mov
std
mov
push
cltd
mov
addr16
pusha
lea
es
cmpsb
fdivrs
push
add
xchg
adc
push
sub
inc
sbb
or
sbb
insl
outsl
fstpt
sahf
in
mov
push
xor
movsb
std
adc
mov
mov
scas
rorb
nop
and
cltd
jne
std
stos
les
out
adc
jbe
pop
js
push
inc
mov
loopne
mov
push
fdivrp
clc
pushf
push
addl
icebp
mov
pop
adc
sub
xchg
fsubl
sti
fwait
and
push
xchg
mov
mov
jecxz
or
cmp
push
cwtl
cmpsl
negb
bound
dec
clc
xor
daa
imul
jle
inc
jecxz
dec
dec
or
imul
pop
mov
ja
scas
aam
xor
cmpsl
sbb
push
cmp
mov
fdivrs
fisubl
cmpsl
and
js
sub
pop
ljmp
in
sbb
orl
fsubrs
add
jecxz
cli
int
cmpsb
sub
hlt
mov
cmpsb
in
stos
mov
mov
push
aam
test
cmp
mov
xchg
mov
and
int3
mov
fcmovnb
pop
xchg
and
ror
mov
orb
xchg
aaa
das
push
xor
adc
ficoms
popa
sarl
inc
mov
mov
push
aam
add
xchg
cli
cli
loope
cmp
popa
or
js
cmpsb
dec
mov
daa
cmp
xor
jl
inc
xchg
daa
lea
add
popa
adc
add
daa
sbb
and
cmp
sub
or
xlat
outsb
imul
sub
or
nop
int3
dec
xchg
mov
lret
push
dec
jae
inc
mov
sub
pop
or
aas
imul
add
rorl
lcall
jle
imul
movsb
outsb
test
imul
mov
mov
sub
xor
mov
sbb
fisttpll
push
mov
stos
lods
js
fwait
pop
aad
data16
stc
clc
mov
lret
fmull
mov
test
sbb
scas
and
add
repz
addb
in
movsb
lock
add
lcall
cltd
inc
inc
pop
icebp
jae
sbb
add
inc
out
pop
pop
clc
ret
adc
xchg
xor
bound
sar
roll
push
cmpb
cmp
ljmp
mov
sbb
sbb
ds
mov
cs
mov
push
out
negb
sub
or
push
sub
repz
mov
ss
dec
inc
cmpsl
scas
cli
jns
sub
sahf
cmp
or
arpl
dec
lock
push
pop
cmovl
aad
pop
out
movsb
mov
arpl
inc
lret
pop
jle
arpl
sti
sbb
hlt
inc
bound
pop
xor
sub
mov
outsl
test
into
inc
je
mov
pop
mov
insb
cmp
mov
popa
loope
test
or
cmp
jo
cwtl
and
lods
xor
xor
outsb
loope
shll
ret
xlat
rcrb
sbb
bound
cmp
xchg
jo
in
push
pop
or
pop
movsl
xchg
pushf
repz
xchg
in
outsl
and
fsubs
dec
jmp
inc
add
repz
mov
out
out
in
mov
jp
cmp
lock
push
subb
addb
cmpl
inc
xchg
cmp
or
sbb
daa
scas
or
mov
or
cmp
add
xchg
int3
test
add
test
outsb
arpl
cmc
subb
inc
fldcw
jbe
xchg
loope
jo
jle
jg
aad
imul
and
sub
sti
mov
pop
mov
stc
cld
addr16
imull
pop
xor
arpl
lea
cmp
aam
or
push
push
adc
faddp
pop
and
loop
push
xor
jmp
mov
scas
add
addr16
int
push
or
add
xchg
mov
out
or
adc
in
popf
notl
xor
lods
mov
fwait
push
or
cwtl
stos
jne
js
clc
jl
pop
movl
mov
popf
mov
lock
jb
mov
jecxz
lods
inc
loopne
cmp
inc
inc
add
mul
in
inc
push
nop
lods
in
cmp
lock
lcall
lods
pop
stos
and
xor
nop
in
pushf
and
dec
jb
rorl
cmp
cmp
cmc
sub
cwtl
ja
scas
rolb
xor
xchg
add
bound
stos
subl
mov
push
loope
frstor
je
roll
aas
cmp
imul
andb
js
push
fcomps
jp
cmp
imul
sahf
pusha
adc
inc
es
cmp
dec
xchg
pop
mov
mov
ljmp
dec
lock
cmp
inc
sub
mov
jbe
mov
push
mov
mov
test
in
cmp
pop
xor
pop
push
mov
fcmovnu
sbb
lcall
aaa
shl
pushf
lcall
lea
clc
sub
mov
xor
or
nop
fs
fisubrl
adc
cmp
mov
push
pushf
rorb
cmpsb
pop
push
pop
add
or
sub
and
dec
jo
cmp
xchg
loope,pn
xor
outsb
sub
sub
test
mov
inc
lret
fsts
enter
inc
sub
cmpl
dec
sub
dec
push
leave
mov
push
lock
nop
std
lds
sub
stc
xchg
popf
xchg
xchg
lcall
sahf
mov
fwait
enter
std
lret
aam
mov
jmp
jns
dec
fnstenv
push
add
cld
xor
mov
cmpsb
mov
and
or
mov
pop
add
sbbl
js
je
cmpsb
cmpsl
movsl
mov
cmp
clc
mov
xor
int3
sub
sbb
lods
sub
push
add
adc
xorb
int3
pop
out
xor
cmc
pop
stc
div
add
pop
lods
repz
mov
mov
mov
jmp
push
ffreep
mov
int3
mov
cmp
push
xor
jno
icebp
push
or
loopne
imulb
repz
test
adc
sub
ret
nop
xor
xor
imul
mov
aaa
jne
rolb
jbe
test
mov
adc
jae
addl
loopne
enter
lea
push
ret
gs
mov
sbbb
mov
mov
jl
repnz
and
rolb
insb
rcr
dec
fwait
cmp
stos
jb
nop
sbb
popa
mov
add
mov
nop
xchg
lret
imul
or
fwait
jb
xchg
mov
jbe
push
cltd
xchg
data16
sub
js
dec
fiaddl
sbb
stos
repnz
fidivs
xor
push
dec
push
jns
inc
sub
mov
adc
xor
mov
paddb
idivb
shl
mov
mov
cmc
and
mov
xchg
mov
pop
add
daa
cld
or
or
push
fnsave
sub
outsl
mov
push
ljmp
iret
xor
sahf
arpl
sub
or
jge
adc
inc
push
ja
adc
adc
sub
into
ret
adc
stos
in
lods
pushf
loopne
or
adc
jnp
stc
subl
add
jg
fsubl
pop
and
out
out
and
jl
rcll
test
test
jb
and
hlt
fucom
aas
je
enter
xchg
xchg
or
stc
jg
pop
pushf
in
cmpsl
inc
push
jne
hlt
mov
test
mov
xchg
sbb
fsubs
xchg
sub
push
outsl
repz
repz
fisubl
adc
lea
ja
or
push
xchg
jno
aam
iret
js
mov
cli
push
pop
aam
ljmp
mov
pop
daa
sub
pop
push
ret
pop
pusha
je
sbb
push
and
test
aas
sbb
jns
pop
sub
sub
loope
push
sub
ss
push
int3
jbe
adcl
dec
mov
sub
cld
flds
arpl
fsubrp
enter
js
jl
loope
inc
das
cwtl
mov
testb
pop
push
pop
and
mov
or
dec
or
aaa
cmp
push
jns
gs
ret
idivl
inc
sbb
aaa
cmp
mov
fsubrp
cmpsb
xchg
cli
or
push
cs
es
out
mov
mov
xlat
push
sahf
fisttpl
jmp
add
in
call
pusha
sub
clc
loopne
push
xchg
jae
inc
test
insl
sub
and
out
jle
mov
movsb
sbb
pop
loope
jle
dec
mov
aam
ds
xchg
fwait
mov
icebp
push
dec
repz
xchg
dec
jb
dec
xchg
xlat
mov
fdivs
xchg
sub
in
mov
xchg
call
xor
scas
ret
xor
cmc
gs
sbb
aaa
hlt
jbe
mov
xorb
pop
jmp
adc
adc
repz
push
sub
cmp
ret
push
sbb
sbb
inc
sbb
int3
out
rorl
dec
mov
pop
arpl
add
mov
fcmovnbe
cmp
outsb
cld
xchg
subl
sahf
push
shll
mov
loop
xlat
ljmp
lock
xlat
incl
sahf
mov
sub
adc
mov
in
cs
mov
xor
xor
sub
and
frstor
clc
xor
push
fwait
lret
mov
addl
jl
inc
push
jg
cmpsl
add
aad
out
jnp
jmp
mov
push
pushf
or
adc
subl
add
and
sbb
adc
mov
outsl
pop
add
jle
fists
mov
nop
arpl
fs
push
es
popf
icebp
scas
xchg
push
ljmp
cmc
or
xchg
or
aas
dec
inc
std
clc
test
ficoms
cmc
mov
mov
jl
lock
imul
outsl
push
loope
cmp
add
fsubr
idivl
cmp
push
sbb
pop
add
in
mov
loope
cmpb
push
mov
add
push
xor
pop
aad
decb
call
jns
int3
mov
dec
dec
outsl
cmpsl
pop
andl
or
mov
cld
jnp
shl
cltd
pop
mov
das
flds
fmull
mov
mov
sub
dec
ds
push
lcall
sti
loop
popa
mov
xor
sbbb
xchg
sub
push
lahf
xorb
jg
leave
call
data16
stc
or
mov
push
push
out
xlat
or
bound
mov
push
sub
adc
aad
stc
clc
inc
jns
fdivs
stc
les
sub
sub
dec
scas
mov
aad
xchg
push
cmc
les
pop
sub
scas
dec
ret
shrl
jno
test
shrl
iret
xchg
xor
inc
mov
mov
movd
rol
mov
cmpsb
pop
repnz
js
inc
pop
icebp
mov
jb
mov
jnp
les
mov
pop
lock
push
arpl
add
mov
add
or
pop
push
mov
mov
insl
sub
xchg
dec
insl
out
push
js
lret
por
aaa
or
add
fists
das
xchg
mov
and
hlt
jmp
mov
aaa
sbb
out
ss
enter
ret
mov
sub
scas
sahf
mov
mov
add
add
jns
les
das
inc
push
dec
mov
jno
pop
xchg
jmp
dec
jl
xor
push
xchg
scas
testb
repz
sbb
xor
ds
jl
jg
push
jmp
add
or
cli
inc
jo
mov
cld
mov
or
movsl
xchg
ret
sbb
popa
xor
sarb
jbe
inc
mov
adc
jl
loop
xchg
push
add
icebp
scas
adc
jbe
arpl
push
dec
push
pop
aad
gs
jmp
out
push
push
push
sbb
cmp
sub
fs
out
or
cmp
pop
pop
test
imul
sub
adc
and
popa
stos
sbb
adc
mov
out
pop
or
stos
outsb
xchg
in
jp
jmp
fldcw
mull
dec
mov
fisttpl
pop
pop
daa
xlat
nop
sbb
adc
mov
cld
jae
push
sbb
test
lcall
mov
lods
jg
cmp
inc
mov
adc
mov
hlt
test
out
lock
fnsave
ljmpw
push
fstl
mov
sub
mov
dec
lods
stos
mov
stos
fsubrl
imul
in
fisttpll
xlat
and
aas
ret
cmpsb
adc
cmp
pop
mov
cmc
push
insb
xchg
pop
repz
popa
scas
frstor
les
or
pop
ljmp
xchg
and
outsb
in
xorl
test
mov
nop
shr
sub
or
leave
shll
in
xor
mov
sbb
call
int
out
stos
test
test
cmc
inc
or
dec
cmp
push
ljmp
add
dec
fs
das
mov
dec
xchg
add
add
idiv
add
jb
aaa
add
jl
cmp
shlb
cmovnp
lock
insl
movsb
popf
lods
mov
aaa
mov
adc
fs
pop
mov
push
inc
xchg
inc
sti
pop
sub
xchg
addr16
mov
cmp
daa
insl
or
cs
xor
mov
sub
mov
cmp
ljmp
push
xor
push
fwait
dec
jae
cmp
ret
adc
xlat
inc
push
test
sbb
inc
cltd
xchg
cmpsl
in
adc
mov
pop
cmp
shll
sub
punpckhbw
jle
mov
mul
and
jge
lods
test
xor
mov
inc
jb
leave
rorb
ljmp
sbb
pushf
dec
sub
inc
fbld
gs
or
dec
fs
xor
and
test
pop
jmp
pushf
int3
cmc
cmp
dec
push
fnstsw
ret
or
mov
xchg
cmp
pop
aaa
inc
cmp
jle
cmpsl
add
dec
aam
outsl
dec
jo
sbbb
out
je
ljmp
jl
mov
shll
pop
pop
mov
and
mov
inc
test
repnz
sbb
cmp
sahf
lods
push
pop
mov
xchg
cmp
jbe
btc
jmp
popf
mov
dec
in
pop
mov
adc
popf
sar
push
adc
in
adc
shll
jmp
roll
jecxz
push
movsl
and
std
testb
inc
out
pop
inc
mov
pusha
scas
ds
hlt
inc
sbb
gs
add
ljmp
xor
xor
pusha
push
in
adc
mov
jp
mov
mov
mov
mov
sbb
jmp
sbb
pop
inc
sub
mov
fsubl
fsub
fmulp
jl
inc
stc
cmpb
lea
adc
push
cs
notl
push
icebp
neg
xchg
insl
pop
mov
xchg
jae
add
popf
arpl
jo
fwait
pop
stos
mov
xchg
mov
push
bound
out
imulb
adc
movsb
xchg
adc
and
jge
imul
sbb
adc
cmc
inc
loop
mov
inc
jl
cmpsb
sbb
and
and
loop
mov
daa
in
lret
outsb
and
sbb
stc
repnz
jmp
js
call
push
pop
scas
in
popf
stos
jge
fidivl
push
fidivrl
in
mov
scas
sub
es
and
sbbl
jnp
out
or
sbb
push
xchg
lods
nop
outsl
mov
iret
push
in
xchg
xor
add
inc
cmpl
mov
loop
xchg
stc
arpl
xor
inc
enter
cmp
and
sub
imul
or
add
sti
inc
ds
pop
jno
outsl
jae
mov
mov
jno
fstpl
xchg
xchg
xchg
cmp
jecxz
cld
mov
out
fcomi
int3
fwait
sbb
outsl
cmp
ret
xrelease
xchg
pop
sbb
mov
mov
adc
sahf
xchg
cmp
mov
inc
nop
sub
cmp
popa
adcb
in
test
push
loopne
imul
popa
repz
movsl
insb
aaa
gs
test
pusha
xor
add
mov
inc
into
nop
nop
out
rolb
mov
push
or
cmpsl
or
mov
sbbb
xchg
xor
fcomp
inc
movsl
push
push
dec
es
push
sti
mov
fwait
dec
call
cmp
ffree
xchg
or
jge
mov
xchg
jecxz
movsl
sti
add
push
jge
test
iret
lahf
repnz
mov
in
imull
sub
pop
xchg
cmp
call
fwait
in
imul
adc
sbb
gs
popa
inc
push
jg
jp
sbb
shr
adc
addb
sbb
out
push
add
cli
pusha
stos
aaa
add
leave
scas
aaa
sbb
aaa
loope
cli
jno
adc
xor
sbb
stc
mov
in
and
mov
aad
test
push
icebp
inc
xchg
out
hlt
jae
add
call
pop
jge
fstpt
mov
mov
cli
and
and
add
sbb
mov
gs
rol
jnp
imul
fs
aad
push
test
ja
inc
dec
loop
jae
hlt
into
mov
fildll
mov
pop
mov
mov
xchg
std
push
push
call
mov
enter
jge
dec
sub
pop
pop
and
push
sub
dec
add
repnz
fldenv
mov
mov
shlb
push
shlb
insl
jecxz
inc
cmp
aad
shlb
and
cmp
into
sub
std
sbb
es
out
test
mov
adc
jb
inc
stc
sub
movsb
mov
xchg
and
test
push
jp
subb
mov
xchg
mov
adc
repz
dec
call
jns
in
add
mov
mov
repnz
in
movsb
aad
dec
dec
imulb
jg
and
shrl
addl
adcb
cmpsl
jne
clc
mov
je
push
dec
adc
add
outsb
fidivrl
and
adc
and
test
iret
pop
pushf
movsl
or
stos
add
or
popa
sub
pop
jle
adcb
mov
sub
leave
pushf
cmp
aam
cmp
loope
incl
sbb
or
iret
movsl
adc
sbb
xchg
xchg
mov
dec
scas
pop
int
stos
leave
xor
add
imul
xor
mov
dec
adc
mov
xchg
cwtl
pop
inc
xor
icebp
pop
push
jecxz
cld
test
lret
std
add
ffreep
mov
cwtl
mov
test
inc
mov
pop
mov
xor
popf
xchg
pop
xchg
jo
sub
clc
outsb
roll
adc
jl
xchg
or
scas
in
dec
pop
cld
and
sub
loope
and
or
fldt
sbb
adc
and
das
jne
and
mov
imul
mov
push
ljmp
mov
push
cmp
pop
pop
dec
cmpl
lcallw
ret
push
out
cmp
xor
jae
test
ja
loop
cmp
push
jbe
scas
leave
lahf
mov
fisubl
mov
pop
mov
add
sbbl
push
mov
mov
xor
rcl
xor
push
test
or
pop
mov
daa
mov
dec
lods
test
or
shrb
test
pop
imul
jp
inc
dec
in
xor
jns
and
jne
pop
or
test
iret
inc
scas
xor
shr
push
in
data16
xor
and
xchg
es
push
cmp
mov
add
fldt
push
jae
sti
xor
jae
add
data16
lds
mov
std
dec
ror
mov
inc
lods
int3
repnz
test
jb
xor
jb
mov
mov
xor
inc
xchg
push
and
inc
mov
hlt
repz
mov
xchg
in
mov
cld
loop
jb
loope
out
enter
dec
loop
adc
push
mov
xchg
pop
push
out
in
mov
sti
add
test
cli
or
fldcw
loop
push
cld
fildll
pop
jns
xlat
cli
roll
pop
int3
push
aam
fldcw
sti
inc
aam
xchg
pusha
xor
mov
out
in
jg
push
sub
mov
mov
add
in
ja
lea
xor
scas
lret
pushf
je
cld
push
mov
mov
movsb
dec
outsb
jl
pop
movsl
inc
sub
out
xor
xor
icebp
cmp
ror
outsb
mov
movsb
xchg
clc
add
cltd
je
adc
cmpsl
or
insl
jnp
push
inc
cmp
lret
inc
inc
hlt
mov
data16
xor
dec
fisubs
xchg
cmp
xchg
mov
and
ljmp
gs
push
sbb
or
and
add
fsubl
push
push
cmp
jecxz
data16
dec
add
ljmp
test
mov
data16
dec
mov
push
out
add
push
xchg
xchg
push
cs
push
test
xchg
pop
mov
nop
ds
cmp
loop
notb
push
movb
mov
lret
xchg
std
lcall
je
adc
in
out
xchg
pop
inc
jmp
pushf
mov
scas
fdivrs
mov
cmpsb
xor
fistpll
mov
mov
nop
xchg
push
lret
cmpsb
loop
lret
or
mov
mov
divl
jp
mov
aad
xor
gs
or
aas
jne
sub
inc
imul
cmp
cmp
push
sub
mov
xchg
insl
jl
mov
jnp
and
push
mov
mov
lret
fisttpll
out
jae
push
mov
mov
mov
or
xchg
dec
imul
lock
pusha
out
cmp
stc
jne
mov
add
hlt
out
xlat
mov
rcl
xchg
xor
loopne
sub
ret
xchg
mov
fmulp
inc
repz
cs
sbb
nop
bound
mov
icebp
inc
and
das
fidivrl
divb
cmpl
push
cld
sbb
dec
mov
cmpsl
and
pop
dec
push
in
xchg
pop
movsb
outsl
lcall
xchg
or
pop
cmpsb
jp
jb
arpl
xchg
mov
orl
lret
shlb
xor
das
and
adc
rcl
ss
not
push
mov
jg
cltd
ret
movsl
mov
dec
stc
xorl
cmp
push
sti
sub
inc
mov
inc
mov
lcall
sub
insl
mov
mov
je
insb
push
jge
xor
icebp
and
popa
mov
mov
xchg
push
sbb
ret
mov
xchg
cmp
inc
aas
ret
pusha
jb
ret
jp
adc
and
add
jge
add
cmp
cmp
movsb
pop
adc
push
cli
addl
ret
xor
in
jg
movq
add
aas
and
fdiv
pop
dec
adc
stos
cmp
aaa
ja
inc
jo
push
jmp
daa
gs
aam
inc
cwtl
xor
lret
gs
je
and
jmp
push
mov
out
out
sbb
inc
xchg
mov
add
cmc
stc
int
in
dec
orl
fildll
sahf
mov
pop
pop
bnd
int
mov
jp
sub
or
pop
or
insb
push
daa
jnp
and
xchg
or
or
inc
mov
jae
subb
outsl
and
or
adc
stc
sub
mov
jno
repz
or
adc
out
cmp
ds
icebp
in
jae
cmpsl
inc
or
dec
rcrl
stos
enter
test
pop
shrl
iret
pop
sub
ss
mov
pop
loope
sub
shll
aas
daa
call
and
jb
sbb
mov
push
sub
imul
ljmp
es
or
adc
fistpll
push
or
mov
adc
loop
ret
dec
jle
jae
ficoml
push
ds
push
sub
cmpsl
jno
popa
mov
movsl
xchg
xchg
cli
subl
and
dec
incl
fwait
in
cli
jns
fstpl
in
jle
add
pop
cld
mov
sbb
cmp
cltd
inc
jecxz
aas
sub
mov
or
jmp
pop
lock
popf
leave
adc
or
testl
imul
mov
sbb
inc
or
xchg
lahf
and
pop
push
mov
ret
stos
add
loop
sbb
sbb
push
and
dec
pop
sbb
cmc
push
sub
aaa
and
cwtl
dec
xor
outsb
jp
scas
negl
loopne
mov
xor
cmp
sub
aas
stos
pop
mov
movsl
test
push
leave
xor
jg
cmpb
jle
push
sti
orl
test
lcall
out
les
pop
xlat
adc
sbb
or
sub
jnp
mov
cmpl
pop
aad
or
testl
sbb
jb
out
fs
or
out
shl
mov
pop
sbb
dec
std
xor
mov
lods
outsl
aam
aad
popf
pop
pushl
mov
in
mov
mov
and
or
inc
insl
or
mov
fildl
insb
jns
mov
sbbb
dec
and
mov
push
xor
std
xor
leave
cli
call
mov
nop
cmp
inc
mov
adc
adc
jge
mov
or
iret
pop
sbb
aas
out
nop
or
jne
popl
cwtl
push
add
stc
adc
test
incl
jns
int3
xchg
xchg
adc
inc
inc
in
stos
mov
push
out
jb
xchg
or
rolb
inc
lea
call
mov
or
push
dec
inc
inc
popf
adc
mov
adc
inc
jl
sub
mov
stos
push
sub
rcrl
movsb
leave
mov
je
mov
xor
cltd
repz
mov
inc
inc
mov
in
leave
cmpsl
or
add
mov
dec
xor
ss
mov
mov
and
sbb
jmp
je
push
sub
lods
push
daa
je
mov
cmp
iret
jecxz
lock
test
lea
jno
mov
xor
fxch
mov
adc
mov
in
stos
js
lcall
iret
cmp
xor
add
pop
adc
mov
iret
sub
test
cmpsl
push
mov
cmp
outsb
mov
inc
inc
sub
mov
dec
pop
divl
mov
int
test
sub
movl
data16
sub
pop
pop
jno
push
xchg
lcall
mov
mov
jnp,pt
lahf
dec
mov
call
out
sub
sbb
dec
outsb
mov
ds
aam
std
push
out
ljmp
xor
sbb
push
shl
bound
iret
out
test
ja
inc
jp
push
cltd
and
out
xor
das
movsb
test
mov
add
push
or
sub
ja
pop
cmpsb
dec
testb
adc
and
xchg
mov
cmp
jge
lret
adc
and
imul
mov
xchg
out
rcrl
add
sahf
jnp
adc
shll
jne
add
xchg
push
sub
push
aam
xor
pop
mov
push
bound
daa
jmp
xchg
jnp
sub
mov
add
pop
push
xchg
jne
add
push
xchg
shrl
ja
dec
pop
pop
mov
nop
xchg
mov
xor
or
movsb
icebp
loope
pusha
jo
out
push
push
loop
leave
inc
fldenv
into
add
aas
in
cs
mov
testl
mov
pop
out
mov
lcall
push
cwtl
test
sub
adc
push
das
int3
xchg
cld
ljmp
jg
mov
out
ror
jb
mov
test
pop
push
mov
cmc
test
shll
pop
mov
mov
adc
xchg
in
les
mov
lods
lcall
gs
inc
imul
xor
mov
and
fldenv
add
incl
call
je
inc
dec
mov
mov
pusha
sub
mov
mov
jp
insl
sbb
fwait
je
in
xchg
xor
mov
lods
dec
push
mov
imul
xchg
js
or
fstpt
out
mov
jno
push
lcall
rorl
cmp
add
inc
clc
push
daa
sub
dec
in
orl
mov
jb
aam
cmp
xorb
mov
rolb
std
xor
aas
xchg
mov
stos
fsub
cmc
dec
add
idiv
jae
mov
stc
pop
pop
inc
aam
pop
fwait
mov
and
sbb
jle
lret
add
jecxz
mov
mov
mov
shl
xor
inc
cld
sarl
and
popa
jecxz
ret
push
jle
and
les
out
mov
int3
mov
adcl
movsb
bound
std
rclb
sbb
loopne
xor
out
rcrl
idivb
ss
daa
jecxz
fld
addb
jo
out
test
xchg
jnp
jbe
sub
cmp
fldcw
rorl
cli
sbb
jns
dec
xchg
sub
pop
adc
hlt
repz
out
scas
les
iret
test
xchg
sbb
jge
frstor
das
pushf
mov
int
cmp
aam
fdivrl
sti
mov
vmulsd
fdivrs
adc
movsl
jp
push
mov
repnz
rcrl
push
jle
leave
mull
jp
mov
lock
pushl
sarl
shll
or
mov
sbb
inc
add
insb
pop
fists
arpl
in
nop
loopne
lods
popa
jno
stos
movsb
mov
movsl
cwtl
mov
shl
mov
inc
mov
out
push
scas
daa
lods
lds
mov
dec
sbb
mov
dec
and
lret
call
cs
or
mov
xchg
mov
fwait
push
or
ja
stos
out
and
push
sbb
rolb
mov
imul
cmp
inc
jo
pop
inc
xor
jle
nop
add
sarl
je
mov
mov
jne
ret
popa
insl
mov
sbb
inc
sub
test
xor
dec
das
cmp
xlat
out
outsb
test
cmp
jo
xchg
cs
inc
outsl
and
sbb
imul
push
jg
ss
dec
adc
push
mov
sub
stc
lods
ret
xchg
into
dec
setp
ss
lret
lcall
stos
xor
mov
jae
in
pop
xchg
or
out
fistpl
leave
arpl
out
imul
jns
inc
orb
jns
cmp
mov
dec
lds
jo
inc
mov
dec
pusha
enter
or
xchg
shll
pop
sub
je
mov
xchg
push
mov
mov
xor
cltd
lods
int3
dec
adc
out
jne
and
inc
sbb
sbb
imull
in
ja
popf
mov
test
pop
shll
adc
add
xlat
jo
sub
aad
jb
pop
call
jecxz
lret
sti
lahf
push
fcmovne
nop
repnz
push
xchg
sbb
push
inc
jbe
cmp
fwait
sti
js
dec
push
jbe
mov
mov
es
xchg
rol
xor
jecxz
mov
cmpsl
push
xor
mov
inc
sbb
ret
hlt
push
sbb
imul
jno
int
mov
xlat
insl
sub
ljmp
fadds
outsl
push
add
sarb
pop
test
inc
adc
mov
sbb
sub
mov
movsb
pop
push
rclb
adc
pusha
mov
pushf
repnz
jbe
js
push
ljmp
adc
push
lods
rorl
jns
rcll
add
pop
cmp
fisubrs
sbb
jmp
xchg
movsb
aas
dec
add
mov
pop
lahf
les
cmc
inc
shlb
negb
xchg
ljmp
mov
lods
cwtl
dec
push
add
int3
pushf
mov
test
mov
nop
lcall
and
jns
push
lret
dec
clc
insl
imul
sti
aas
aas
or
inc
mov
lds
add
into
jge
pop
fnstsw
rcrb
push
rclb
xchg
dec
pop
addr16
scas
xchg
jmp
push
fcomip
loope
add
addr16
pop
cmp
cs
mov
out
xor
test
cltd
mov
push
shlb
cmp
adcl
pop
add
xchg
add
insb
jae
xor
mov
je
scas
sub
mov
or
scas
mov
aad
jae
adc
fidivrl
sbb
data16
fwait
push
or
add
divl
aaa
outsl
imul
push
adc
inc
lock
or
shl
iret
xchg
std
sub
xchg
test
outsb
push
cs
daa
outsb
lds
xor
icebp
into
mov
dec
clc
push
fnsave
mov
fnstsw
xor
std
xor
lds
daa
in
xchg
hlt
bnd
mov
ljmp
dec
cmp
scas
fs
addr16
mov
bound
jmp
aaa
popa
push
jae
ss
adc
or
jb
iret
sub
sub
mov
roll
adc
orl
push
cmp
mov
into
sbb
push
push
and
jge
pop
cmp
jb
loop
and
push
push
loopne
cmp
pop
cli
add
mov
insb
dec
or
into
xchg
inc
gs
fildll
bound
adc
sahf
push
stos
in
mov
push
pop
xor
xchg
jnp
inc
jo
cmp
fs
sub
xor
mov
dec
add
nop
out
push
pop
loop
mov
lret
sbb
jmp
add
push
sti
in
rclb
jecxz
lods
and
inc
call
pushf
in
inc
sub
xchg
adc
mov
adc
pop
ret
rcrb
xchg
dec
std
mov
mov
adc
or
test
cmpb
ficompl
fistpll
pop
mov
mov
adc
dec
dec
jecxz
in
jg
lret
mov
out
sbb
xorl
xchg
ja
daa
sahf
dec
add
lea
push
xchg
xor
movsl
inc
data16
daa
cmp
lock
movsl
xchg
inc
movsb
xchg
push
push
fstpt
inc
and
dec
cwtl
pop
jbe
pusha
mov
add
push
pop
aam
mov
inc
jbe
sahf
rcrb
jb
daa
push
and
adc
cmpsb
jge
incl
mov
testl
xor
cltd
cmp
pop
mov
inc
xorl
fwait
mov
sti
mov
popa
imul
in
fisubrl
mov
pop
xchg
jge
stos
jmp
rcrb
fs
stos
pop
cwtl
clc
js
push
xchg
decb
das
xor
or
arpl
cmp
aaa
call
std
lahf
loopne
movb
mov
adc
mov
mov
fldl
xchg
cmp
jae
loop
pushf
iret
jbe
xor
fwait
pushf
loopne
in
jmp
xchg
or
mov
sub
add
jl
shl
or
lods
stos
fcompl
movsb
sbb
jae
cmpsb
out
neg
sahf
fcmovne
sub
sub
mov
enter
mov
int
outsl
jmp
xor
aam
mov
cmp
add
popf
mov
jnp
adc
adc
pusha
mov
lcall
fisubrl
jb
call
inc
push
fwait
cmp
mov
dec
movsl
xor
cmpsb
push
dec
lcall
pop
ds
cmp
clc
cmpsl
repz
jo
loop
push
adc
sbb
xor
sbb
movsl
cmp
dec
jne
add
nop
inc
nop
jmp
mov
cwtl
in
adcl
iret
push
fsts
dec
fcomps
test
adc
arpl
fnstenv
mov
imul
fmuls
xor
ror
ffree
cmp
aad
mov
lahf
mov
dec
dec
out
mov
lds
sbb
jb
push
xchg
adc
jle
and
xchg
hlt
enter
sbb
dec
inc
and
inc
inc
xchg
dec
jns
jge
adcb
popa
pop
stc
ret
fs
add
enter
sahf
cs
in
and
add
dec
popf
dec
cld
imul
stos
iret
mov
inc
fs
pop
sub
ljmp
push
sbb
ljmp
out
push
dec
pusha
add
xchg
xchg
dec
in
inc
rolb
jp
js
in
roll
jb
pop
cmpb
push
adc
push
sbbl
xchg
add
les
jbe
daa
pop
and
outsl
punpckhdq
jp
mov
shl
pop
push
cmp
inc
xor
pop
fstpt
pop
push
jne
lret
imul
jp
rcll
adc
fists
rcrl
push
mov
mov
stos
xchg
dec
fidivs
fisttps
test
scas
das
aas
les
divl
add
das
jne
push
call
inc
test
dec
pop
mov
xlat
mov
test
dec
scas
push
cmp
nop
ljmp
fsubrl
fisubs
push
cltd
pop
sub
jge
fmul
pop
sbb
aas
inc
inc
xchg
push
mov
mov
lods
dec
adc
stos
negb
add
push
and
hlt
iret
dec
scas
nop
xchg
fstpl
imul
sbb
out
lods
mov
cld
push
scas
dec
push
fdivr
loop
mov
stos
push
xchg
pop
mov
in
lods
jbe
gs
and
popa
mov
andl
adc
mov
gs
adc
dec
and
bound
xor
fldl
mov
sbb
cmp
sti
xor
ror
enter
stc
lahf
mov
push
sub
fdivrs
mov
sbb
enter
les
push
lock
arpl
jne
dec
stos
inc
mov
pop
int
test
push
jge
push
fldl
jle
mov
sub
inc
xchg
bound
dec
int3
icebp
sbb
jb
lods
xorb
mov
mov
xlat
pop
dec
sbb
sbb
mov
cmp
xchg
mov
outsb
push
insl
xor
sub
insl
jno
ljmp
push
inc
xchg
push
idivl
pop
pushf
loop
mov
cmp
out
repnz
fwait
clc
cmp
icebp
stos
inc
jl
mov
and
mov
test
cmp
mov
or
mov
mov
sahf
stos
mov
jle
mov
pushf
testl
pop
mov
xchg
xchg
inc
dec
lock
mov
leave
inc
outsl
mov
lret
add
out
mov
fisubl
sub
or
in
rorb
inc
jne
dec
mov
fmul
mov
mov
adc
ss
push
sar
or
xchg
sbb
icebp
pushf
fwait
shlb
xlat
adc
sbb
dec
jbe
dec
sub
add
stc
dec
arpl
xor
ja
mov
je
es
loope
aam
out
outsb
insl
add
shrb
out
call
add
clc
push
xor
mov
and
cmp
sbb
repnz
sahf
ret
lahf
mov
mov
and
insl
rcl
dec
adc
xor
mov
loop
lods
mov
loopne
pop
and
aaa
rcll
xorl
cmpsb
mov
cmp
adc
xchg
inc
push
mov
fs
dec
inc
dec
push
loope
and
sti
pop
push
or
mov
mov
add
ret
xor
cmp
loop
nop
fnstenv
and
fsub
fcompl
bound
xor
negl
mov
aas
test
cwtl
push
mov
jmp
and
xor
aas
mov
imul
push
mov
and
cltd
mov
adc
mov
test
test
data16
or
add
sbb
es
dec
mov
push
aad
addr16
dec
pop
or
sahf
fisubrl
andb
xchg
pop
sub
sbb
ds
popa
rclb
clc
mov
mov
stc
in
pop
or
xchg
pop
sti
xor
jl
inc
loop
lea
movsl
mov
push
loope
mov
pop
or
or
and
push
jns
xchg
mov
rcr
mov
fdivrl
lret
movsb
sbb
pop
dec
rcrb
repnz
jns
push
or
out
add
gs
mov
nop
aad
roll
mov
mov
xchg
outsb
mov
push
xor
popf
cmp
and
insl
mov
jecxz
dec
xchg
or
clc
cmpsl
outsb
inc
in
add
jbe
cwtl
xchg
adc
cmp
movsl
lret
xor
fisubrs
aaa
jmp
outsl
lock
push
dec
movb
enter
rorl
leave
scas
out
enter
xchg
cmp
sbb
mov
in
int
mov
pop
icebp
mov
jnp
shlb
popa
aad
or
xor
cmovns
sub
div
jl
or
mov
push
sub
mov
in
dec
sti
pusha
std
lods
lock
fsubrl
sub
mov
jmp
lock
mov
lcall
pop
notl
hlt
and
xor
or
cltd
dec
std
xchg
dec
cmp
cmp
loopne
push
xchg
outsb
test
sub
cs
addr16
inc
or
xor
push
pop
and
arpl
xor
xor
sub
push
mov
repz
cld
iret
xchg
dec
or
pop
dec
mov
mov
push
imul
mov
popf
sbb
ljmp
mov
inc
and
inc
xor
xchg
aad
test
mov
xor
fdivs
inc
test
push
mov
or
loopne
test
icebp
aaa
les
ficoml
aad
out
cmp
mov
jg
cmp
test
ja
mov
rcrb
lcall
jns
test
ljmp
outsb
insb
pusha
popf
dec
out
push
pop
movsb
repnz
rep
adc
int3
mov
push
cli
and
cmp
stos
cmp
rdtsc
adc
pop
mov
xchg
push
lds
in
fnstenv
cmp
xchg
ret
pop
push
cmp
dec
lcall
push
arpl
cmp
pop
add
pop
push
das
pop
pop
xchg
nop
les
lret
jns
mov
mov
add
addb
xor
cmp
stc
add
test
add
push
dec
sahf
mov
dec
mov
jbe
insl
mov
loopne
sub
inc
fisttps
std
ja
mov
ret
push
and
mov
cmpsl
sbb
adc
pop
inc
sbb
ja
mov
addr16
sub
mov
ja
lock
fadd
cli
faddl
hlt
and
shll
xchg
push
jmp
popf
inc
sarb
aam
mov
push
dec
pop
test
mov
cmp
add
adc
in
ret
pop
cmp
mov
bound
cmp
mov
ds
or
and
mov
mov
inc
mov
shr
mov
push
xor
fadd
jno
in
cmp
xor
fs
out
mov
ja
test
adc
cltd
enter
scas
or
mov
fcomps
popf
and
das
or
jns
push
sub
jnp
cmp
int
test
sub
cltd
outsl
mov
insl
out
sub
jno
movsl
pop
test
flds
xor
mov
mov
xchg
mov
jb
push
sahf
mov
xchg
jl
fistpl
inc
shlb
fidivrs
mov
sbb
cmc
or
sbb
mov
adc
pop
repz
mov
push
mov
ljmp
pop
rolb
pop
sti
xor
mov
cmp
adc
mov
pop
pop
cmp
std
insb
fistps
dec
in
daa
adc
or
cltd
sahf
mov
pop
sbb
add
xchg
dec
cli
and
jecxz
xchg
lods
push
cltd
or
je
or
dec
ret
pusha
push
fdivrs
or
cmp
cmpb
shlb
mov
mov
sub
sub
loopne
mov
mov
fiadds
outsl
and
xorb
dec
jo
sub
cmp
push
daa
xchg
popl
fidivl
or
hlt
fs
sub
outsl
aas
mov
and
fwait
out
outsl
adc
mov
adc
std
cmp
sub
push
neg
adc
pop
mov
sbb
icebp
inc
ficompl
iret
xlat
push
push
adc
gs
or
shlb
jns
cmp
mov
imul
lods
add
enter
notb
push
enter
pop
add
cmp
inc
arpl
mov
add
ljmp
lret
stc
inc
imul
xchg
adc
addr16
inc
pop
or
jbe
outsb
or
out
sbb
je
mov
out
rcl
popa
fwait
dec
cmp
lret
loopne
adc
mov
les
dec
xor
jp
jns
orl
imul
lret
ds
mov
stos
xor
cmp
test
sbbb
push
out
int
add
xchg
push
cmp
and
adc
out
testl
and
outsl
popa
pop
insl
mov
popf
jecxz
and
add
dec
dec
hlt
jge,pn
out
pop
rorl
leave
inc
leave
lds
and
arpl
dec
adc
sub
sahf
lds
shlb
adc
in
cltd
cs
fisubrs
add
imul
aad
xchg
jle
gs
fmull
add
cmp
and
stos
adc
stc
xchg
cmp
int
push
outsl
fs
and
push
and
sub
pusha
xchg
mov
and
adc
ja
xchg
outsl
pushf
cmp
push
fists
adc
cmp
jne
arpl
gs
xchg
mov
jmp
clc
iret
adc
pmulhuw
inc
xchg
out
adc
dec
aam
out
inc
loop
imul
dec
hlt
inc
mov
inc
pop
and
sbb
push
ret
inc
xor
test
mov
cmc
sbb
adc
ds
push
push
xor
lods
cmp
xor
pop
ret
sub
and
in
inc
mov
mov
and
loop
lcall
insb
fsubrs
lds
xor
mov
mov
cmpb
mov
sahf
les
out
fwait
jp
cmp
rolb
cmp
push
dec
mov
ret
std
jae
pop
imul
fisttpl
sub
dec
cli
hlt
inc
xchg
cmp
mov
test
dec
cmpb
in
jle
lret
cltd
mov
adc
sub
cli
das
adc
inc
ja
mov
movsl
popf
cld
jecxz
xchg
and
lret
lret
leave
push
rcl
sbb
addr16
mov
rcll
add
test
xor
lods
jge
aam
cli
mov
or
je
pop
xorb
lock
test
loope
sub
push
inc
mov
jns
jno
ds
push
and
adc
pop
mov
xor
sub
leave
push
mov
or
push
aam
lds
hlt
adc
sub
and
and
xchg
es
test
mov
push
shl
xchg
in
push
ja
fst
or
add
popf
leave
mov
dec
aad
or
outsb
push
dec
in
sub
test
jne
jnp
mov
loope
cmp
jno
cli
fwait
inc
xor
mov
or
imul
fimuls
aas
xchg
xchg
in
dec
xor
xchg
scas
add
aam
jns
test
xchg
push
push
clc
stc
sbb
lock
std
jl
push
fisttps
test
dec
sbb
push
test
icebp
ss
sub
mov
insl
pop
adc
mov
pop
mov
mov
mov
stos
jg
cwtl
cmpsl
shrb
mov
add
rdtsc
xchg
push
in
adc
repnz
mov
imul
ja
mov
ret
dec
add
popf
lret
add
in
test
lods
lods
pop
jae
mov
push
outsb
push
or
js
inc
add
cmp
jp
adc
add
into
enter
lret
pushf
ficompl
lea
xor
sub
fidivs
jae
pop
jl
ja
stos
sbb
outsl
jno
mov
lret
lds
test
jo
lods
shlb
fs
dec
or
cmp
leave
pop
cmc
mov
ficomps
adc
jge
aad
mov
sub
push
lcall
xchg
mov
mov
scas
xchg
pop
xchg
cmovo
pusha
faddl
std
pop
rcl
mov
xorb
stos
rcrl
fldl
mov
adc
or
in
or
push
cmovs
jle
data16
xchg
push
dec
lea
stc
mov
or
xchg
jns
push
clc
in
inc
mov
loope
pop
in
dec
jp
repz
popf
pop
daa
xlat
ljmp
or
ret
jge
lea
mov
inc
cmp
sub
fiadds
xchg
cltd
les
xor
lahf
punpckldq
mov
xchg
and
stos
pop
jae
lret
fdivrs
insl
mov
add
aaa
push
mov
popf
jb
push
cmpsl
pop
dec
testb
into
adc
sub
pop
jns
xchg
sub
mov
push
cld
mov
mov
insb
push
rcrl
pop
push
xorl
mov
inc
les
aam
dec
loop
xor
mov
clc
bound
inc
pop
add
adc
hlt
arpl
mov
push
dec
add
mov
in
adc
push
dec
mov
repz
dec
xor
in
jecxz
cld
sti
push
inc
test
dec
test
pop
out
push
sbb
adc
mov
insl
outsb
xchg
leave
jne
jb
add
loopne
repnz
les
push
pop
mov
xor
mov
sub
mov
pop
or
adc
test
aas
out
pop
clc
cs
sub
daa
push
icebp
dec
aam
sub
mov
lret
imul
call
dec
lahf
cwtl
outsl
enter
add
push
cmpsl
insl
inc
ljmp
dec
in
test
push
adc
aam
mov
dec
mov
stos
dec
xchg
sahf
mov
pop
xchg
in
dec
mov
mov
ret
add
test
ja
mov
inc
and
dec
int3
push
push
ret
pop
out
cmp
lods
cmpsb
in
cmp
mov
inc
mov
jecxz
adcb
cwtl
iret
loopne
mov
lea
push
lret
sub
ss
insl
outsl
dec
adc
sub
sub
popa
cli
jg
popf
push
sub
mov
sub
xlat
xchg
jno
std
cmp
sub
cwtl
cmp
cltd
lods
sub
in
dec
popa
xchg
mov
out
outsb
repz
inc
pop
add
mov
adc
mov
and
adc
push
dec
inc
jge
dec
jb
fldcw
pop
mov
push
xlat
lret
cmc
shl
inc
xchg
push
out
in
test
pop
jecxz
or
shrl
pop
and
test
lods
addr16
mov
outsb
xor
test
fwait
and
pop
fisttpll
xchg
adc
adc
popa
test
out
into
aaa
xchg
jl
nop
sub
lock
push
pop
cmpsl
in
out
add
adc
into
stos
xchg
pop
nop
ja
stc
sub
xchg
jbe
xor
add
inc
in
in
lock
stos
enter
clc
in
fidivs
mov
mov
or
in
or
xor
bound
icebp
xor
xor
xchg
and
mov
int3
pop
dec
or
out
sarl
shr
cltd
sbb
xor
test
sbb
adc
stc
xorl
aaa
aad
adc
sub
mov
mov
insl
dec
enter
inc
jmp
lahf
sub
insl
inc
test
dec
xchg
fwait
xchg
sbb
mov
jb
mov
shll
mov
out
insb
mov
push
mov
les
lods
js
mov
pop
xchg
mov
bound
pop
inc
jnp
sbb
xchg
push
or
mov
fisubrs
adc
aad
outsl
mov
data16
test
sub
dec
in
aam
out
dec
jno
mov
jg
cmp
iret
mov
xor
mov
add
pushf
dec
popa
xor
pop
cmp
incb
cmp
jecxz
shrb
xchg
cmpsl
mov
sbb
aaa
incb
dec
cmc
aam
xor
lahf
int3
push
call
shll
xchg
mov
in
les
dec
outsl
xchg
outsl
fistpll
into
and
hlt
fdivr
mov
xchg
mov
pop
in
adc
inc
sbb
mov
push
out
mov
rolb
fisubrl
mov
inc
test
aam
stos
ja
lea
icebp
push
call
jmp
mov
jae
dec
push
mov
fnstenv
xchg
mov
mov
adc
adc
out
inc
sarl
ret
mov
dec
cld
mov
jecxz
ret
adc
dec
cli
adc
cmp
push
fsubs
cmp
mov
xchg
xchg
pop
mov
sub
call
iret
adc
sub
adc
fwait
sbb
add
pop
pop
mov
dec
xchg
mov
fsubrs
fstl
inc
jle
or
xor
adc
xlat
shl
adc
or
ficompl
fldcw
mov
jno
mov
pop
jae
mov
adc
xchg
insl
es
dec
pop
rsm
push
scas
jp,pt
repz
pop
imul
in
fidivl
cld
xor
pop
fwait
fcompl
add
testb
adc
pop
pop
iret
aas
or
inc
cmc
lods
jg
out
outsl
js
mov
test
hlt
aam
and
xchg
arpl
test
leave
push
xchg
mov
ffreep
push
imul
inc
inc
mov
scas
xor
sub
mov
ret
stos
sub
add
dec
insl
xor
mov
or
mov
xor
enter
pop
jmp
add
cmp
push
dec
lock
in
movsb
cmp
and
js
stos
loope
sbb
cmp
pop
in
xor
js
daa
dec
add
or
sub
or
jl
jae
lahf
std
mov
js
xor
popa
loop
leave
xor
cmpsl
adc
insb
mov
jge
pop
pop
dec
mov
outsb
sub
dec
pop
hlt
mov
aas
push
xor
lret
push
mov
int3
jb
lcall
ret
bound
enter
sub
repz
lds
scas
mov
in
jmp
cmp
out
gs
loopne
loopne
enter
mov
push
ss
jb
adc
icebp
les
push
dec
or
in
shll
in
insl
negl
ret
lcall
inc
sbb
out
sbb
cs
sbb
test
adc
lods
jl
dec
push
jecxz
jb
or
xor
loop
cltd
xchg
call
ret
movsl
shrl
aas
xlat
or
jnp
aam
sbb
push
insl
jge
ss
cwtl
mov
fcoms
mov
sbb
outsb
ret
mov
mov
jg
iret
das
repnz
and
movsl
es
sbb
push
add
mov
and
gs
and
inc
push
repnz
sbb
mov
fldl
int3
and
push
loope
jb
dec
adc
push
out
nop
stos
outsb
and
xchg
rorl
xchg
in
jae
push
adc
sahf
scas
adc
sub
in
sub
or
dec
and
jp
repz
adc
jne,pt
xor
push
enter
adc
daa
mov
adc
push
and
aam
inc
adc
test
ljmp
and
mov
cmpsl
dec
fsts
jbe
incl
pop
test
in
sbb
int
pusha
in
mov
cmp
dec
and
ret
pop
mov
and
or
loopne
test
add
dec
jnp
cmp
adc
repz
dec
xchg
xor
mov
pop
mov
pop
xchg
xor
pop
pop
add
push
sbb
cmp
and
ja
daa
adc
cmpsb
incb
pop
mov
jge
cmp
adc
shrl
mov
shlb
jl
into
or
cmpsb
adc
xor
lcall
and
cmp
lods
adc
stc
xor
jnp
dec
lods
push
inc
sbb
repz
std
pusha
out
insb
mov
add
sbb
fsubs
sbb
scas
stos
je
out
jmp
xchg
mov
popf
shl
jmp
push
add
mov
mov
push
rcrb
and
cld
ret
inc
setns
xchg
leave
inc
or
in
adc
cmp
movlps
push
shl
and
xchg
sub
inc
xor
test
xchg
or
push
into
enter
or
mov
jecxz
and
movsl
test
shlb
jnp
add
xlat
inc
jbe
repnz
mov
aas
adc
inc
mov
stos
mov
icebp
mov
mul
sahf
xlat
ljmp
xchg
pop
dec
mov
push
ret
sbb
stos
rorl
fsubrl
imul
mov
hlt
push
test
ja
lahf
insl
ss
je
sub
out
add
adc
insb
pop
and
and
out
pxor
fsubs
jecxz
mov
dec
rolb
dec
inc
jg
add
xchg
xchg
std
sub
push
push
and
adcl
fdivr
std
mov
mov
lods
inc
lea
mov
cs
xchg
sbb
mov
aaa
mov
push
sub
cs
loope
mov
cmp
push
fldenv
daa
xchg
push
daa
in
sti
rcll
das
adc
sti
and
sub
push
outsl
scas
xchg
test
into
mov
and
lret
test
and
shll
addr16
sahf
mov
lock
mov
pop
fdivl
arpl
fdivrp
sbb
inc
arpl
in
lods
ret
fwait
sub
jbe
fcom
mov
xchg
test
mov
lds
xor
sub
daa
ja
pop
xor
sbb
pop
mov
sarl
mov
push
das
or
into
daa
shr
dec
das
enter
jo
xor
mov
inc
aad
sahf
lock
clc
or
jle
mov
dec
push
cmp
pushf
jo
in
mov
mov
ficompl
push
fmuls
xor
sahf
xorb
int
fwait
mov
into
add
jnp
repnz
scas
fwait
push
hlt
fstpt
andl
in
call
push
adc
and
fwait
mov
xlat
popa
mov
sbb
repz
roll
aaa
inc
scas
xor
xor
lds
push
sub
aaa
push
das
push
pop
cmpb
iret
mov
jnp
inc
jns
popa
mov
jg
and
test
dec
imul
pop
inc
push
ret
ret
rorl
adc
lock
dec
xchg
sbb
fldt
xor
ja
aaa
es
push
cmp
jbe
inc
out
mov
out
fstps
mov
mov
cmp
push
mov
sbb
jmp
xor
out
push
jnp
gs
mov
mov
test
lock
popf
imul
stc
mov
adc
jge
mov
aam
pop
aaa
cmpsb
subl
pop
repz
sbb
aam
cmpsl
pusha
push
pushf
rolb
sahf
sub
xor
or
add
fistpll
and
out
fisubrl
mov
gs
sbb
idivl
pop
loop
lcall
insl
in
push
pusha
out
or
inc
cltd
gs
jecxz
xchg
add
fldt
aas
pop
cmp
insl
mov
test
loope
push
test
popa
dec
sub
loop
sbb
push
dec
rcll
dec
pop
lock
push
dec
fs
divb
pop
push
add
sub
and
xor
es
lods
nop
addl
ficompl
sbb
repnz
adc
stc
and
mov
aad
push
test
lods
pop
and
test
dec
sub
add
sbb
cmpsb
dec
sar
xchg
dec
or
hlt
add
mov
inc
aas
nop
xchg
or
mov
rclb
add
pop
lds
xchg
movsl
push
ljmp
cltd
ficomps
push
inc
stos
mov
xchg
jae
add
or
neg
movsb
loop
jge
icebp
out
cmp
insb
sub
cwtl
sub
inc
lahf
in
pop
sbb
pop
scas
lret
jmp
mov
lret
clc
aam
cmpsb
arpl
cld
adc
shrl
cmp
stc
sub
xchg
mov
sub
fnstsw
outsb
cmp
lahf
mov
xchg
in
hlt
int
js
mov
les
les
mov
ss
mov
loopne
and
test
cs
pushf
adc
mov
jae
stos
ret
jae
in
add
add
fwait
and
dec
int
test
out
fwait
mov
inc
mov
pop
xor
fs
ret
push
bound
push
mov
cmp
test
outsb
inc
mov
sub
jno
int3
es
cltd
mov
out
mov
addr16
sbb
pop
jo
sti
and
mov
push
es
push
cvtps2pd
push
hlt
xor
push
inc
js
sub
dec
adc
jp
push
add
imul
imul
inc
cltd
neg
mov
mov
fs
push
fbstp
fwait
ljmp
in
ret
xor
dec
loopne
aad
or
aad
repnz
jnp
mov
adcb
mov
insl
mov
add
and
inc
mov
es
mov
sbbb
je
or
pop
xchg
mov
inc
sub
push
lods
ficoml
repz
js
jo
jecxz
scas
inc
out
mov
daa
adc
and
fcmovb
xchg
int3
testb
xchg
jge
mov
inc
xchg
inc
xor
insl
push
cwtl
mov
pop
lcall
mov
sub
push
sub
jmp
push
mov
mov
pop
jbe
inc
lock
push
dec
jno
lahf
push
sub
push
cli
in
pop
nop
idiv
xor
es
jle
xchg
adc
mov
outsl
lds
jb
leave
aas
xchg
divl
push
jbe
push
pop
scas
push
sbb
add
jo
inc
out
gs
negb
clc
cmc
and
test
sub
loopne
push
lret
adc
mov
jle
iret
push
cmpl
mov
mov
mov
jo
cmp
mov
rorl
jmp
mov
push
mov
xorb
mov
js
dec
sub
bound
push
ss
notb
mov
lcall
cmpsb
push
mov
cmp
sahf
dec
in
shll
inc
inc
mov
cmp
pop
mov
sub
add
mov
add
mov
xor
xchg
aad
cwtl
stos
push
decl
shr
jne
popf
outsl
mov
cmp
or
fistps
out
cmpsb
imul
arpl
cltd
stos
icebp
cmp
int
mov
sbb
cmp
aad
out
pop
adc
fdivr
sbb
pop
inc
mov
pop
shl
or
sbb
imul
lds
out
cmp
mov
jo
jnp
sbb
ficoml
stc
fstpl
ljmp
dec
pop
iret
mov
fisttpll
js
enter
cmpl
mov
xor
xchg
add
sbb
aad
gs
adc
rol
mov
adc
jns
jecxz
mov
arpl
dec
adc
jo
addr16
jmp
jg
or
outsl
lea
push
cmc
xlat
xor
and
lods
xor
adc
icebp
xchg
test
push
out
dec
dec
sub
pushf
xchg
out
ds
ja
lret
cmpsl
xor
jecxz
repz
popf
adc
jns
repnz
cmc
or
push
pop
arpl
xchg
adc
add
fsts
adc
mov
decb
mov
fstl
or
aad
in
jl
fcmovne
mov
cmp
lcall
stc
sub
push
out
mov
shr
mov
mov
mov
std
mov
cld
lods
mov
and
mov
add
gs
mov
dec
adc
lods
mov
lea
add
push
jnp
add
jge
sub
out
xchg
inc
aaa
cld
shrb
mov
iret
xor
lods
xchg
cld
xor
mov
inc
pop
fildll
aam
gs
bound
jl
mov
dec
jnp
add
pop
adc
fisubl
dec
fsubl
xchg
and
cmpl
fcmove
or
fwait
mov
stos
jg
push
adc
sahf
shlb
in
or
cmp
inc
mov
dec
jg
adc
mov
cwtl
adc
jl
stos
cmovl
imul
jnp
xchg
cmp
mov
pop
add
or
xor
mov
adc
int3
into
inc
sbb
pop
int
sbb
test
pusha
bound
mov
mov
sub
dec
or
fs
pop
xchg
mov
sbb
dec
dec
mov
or
repz
mov
inc
and
push
fwait
loope
scas
dec
cld
mov
xchg
jns
adc
mov
sub
dec
mov
rcr
stc
xor
adc
xchg
fldcw
js
jno
jno
push
stc
aam
add
test
ficomps
mov
jne
aad
fmuls
mov
jg
nop
pop
or
cwtl
int3
cmp
mov
xchg
push
lods
mov
sbb
adc
sbb
pushf
push
mov
xchg
jae
add
jl
mov
jg
shll
mov
and
or
mov
out
inc
jmp
pop
sbb
mov
faddl
mov
inc
push
xor
mov
pop
imul
mov
xor
clc
push
cmc
and
mov
je
outsl
orl
leave
adcb
rolb
lea
sbb
imul
shrl
xor
push
dec
mov
jo
lahf
xchg
sbb
fwait
into
xorb
cld
dec
mov
mov
sbb
push
and
repz
rol
pop
mov
sub
negw
nop
mov
stc
cltd
dec
rolb
mov
ljmp
jno
out
subb
movsb
push
jae
sbb
andb
jl
adc
xchg
mov
mov
jns
and
je
cmp
inc
jbe
sbb
sbb
ror
stc
rclb
inc
cmp
shlb
mov
ss
addr16
jb
mulb
aad
inc
ret
mov
xor
mov
xor
xor
arpl
iret
mov
outsl
xchg
into
leave
or
mov
loop
das
mov
loope
mov
sti
shrb
ret
push
mov
dec
sbb
mov
mov
outsl
fs
xchg
das
mov
mov
mov
or
and
les
xor
les
ret
sub
aas
or
ret
sbb
adc
scas
mov
test
mov
pop
jns
and
push
ficoms
xchg
mov
jns
pop
mov
ret
or
inc
dec
lea
sub
ds
push
or
fdivrs
sahf
or
aam
xchg
dec
dec
movlps
fdivl
push
daa
xor
ror
add
aad
jae
and
outsb
out
lret
dec
outsl
or
inc
int3
dec
out
popf
jge
sbb
ljmp
or
ja
pop
lea
sar
mov
mul
orl
mull
nop
addr16
movsb
hlt
dec
jle
cmp
scas
gs
mov
shlb
jl
mov
inc
push
pop
sarb
pop
jnp
into
mov
lods
add
loopne
jmp
mov
sub
sbb
mov
cs
in
lcall
mov
ret
arpl
scas
mov
int
js
pop
shl
pop
cmp
add
push
repz
icebp
gs
das
mov
jbe
sahf
mov
sub
cmp
scas
test
push
push
push
or
mov
loope
dec
cmp
or
popf
scas
dec
dec
xchg
sar
sbb
jo
stc
aaa
test
jae
test
mov
sbb
lock
stos
and
mov
ret
jne
loop
mov
push
jne
aam
mov
stos
xor
or
mov
cwtl
push
push
pop
out
test
mov
pop
pushf
sub
add
dec
mov
orb
mov
jmp
xchg
adc
sub
push
sbb
notl
mov
and
push
divl
imul
jg
jecxz
lods
shrl
fidivrl
xor
mov
xchg
pop
mov
and
enter
jns
sar
inc
xchg
movsb
enter
repz
cwtl
das
jns
lcall
mov
pop
nop
xor
jmp
std
daa
and
out
jne
lret
or
popa
push
push
lcall
ret
xchg
jg
sbb
sbb
jnp
mov
mov
cmp
jnp
jecxz
cli
add
nop
pop
ljmp
lods
mov
or
pushf
lcall
xor
push
and
fistpl
pusha
test
flds
fcmovu
imul
clc
int
xchg
mov
jne
or
jbe
insb
neg
pusha
jbe
loop
sbb
fstps
je
mov
sbb
jnp
adc
dec
push
jmp
ds
dec
mov
and
dec
mov
cmp
xor
bnd
in
lahf
or
les
fildll
ljmp
dec
inc
mov
loopne
mov
jnp
sub
adc
xchg
or
mov
mov
mov
push
fistpll
dec
arpl
arpl
inc
lret
inc
ja
adc
push
aaa
icebp
mov
xchg
shl
ret
in
jmp
jns
xor
nop
xor
xor
sti
scas
sbb
xchg
cltd
lcall
mov
push
repz
rorb
adc
dec
mov
push
or
push
cltd
movsb
loopne
or
lret
add
ret
pop
mov
int3
test
dec
xor
mov
in
cmp
mov
xor
cmp
je
notb
pop
jle
xchg
mov
dec
popf
ret
jg
mov
filds
pop
loope
push
jb
adc
and
mov
popa
repnz
push
jbe
add
jne
mov
jmp
in
jp
jno
jae
inc
sub
mov
xchg
sub
add
xor
int3
fcomip
push
adc
daa
insb
sub
push
lcall
shrb
inc
sbb
loopne
leave
push
pop
rcl
dec
lods
stos
xchg
pop
ja
shrb
fwait
mov
sbb
shrb
xchg
in
adc
or
xor
push
cli
loopne
mov
ja
push
gs
jle
pop
pop
cwtl
clc
sbb
push
das
xor
imul
std
inc
adc
push
and
packssdw
inc
cmpsl
pop
repnz
je
pop
mov
jmp
push
mov
xor
mov
jns
cmp
cmp
push
jno
in
or
out
xlat
ljmp
xor
sti
sub
adc
cmp
xor
outsb
enter
jno
divb
stc
arpl
jb
inc
sbb
cmpb
add
inc
push
cmpsl
inc
cmpsb
imul
xlat
xor
rcr
mov
lods
cmp
scas
mov
rcrb
in
push
and
rol
adc
jo
std
cli
pop
repz
sub
cld
inc
cmc
pop
popa
arpl
cmpsb
fwait
inc
cwtl
inc
and
hlt
repz
pop
jo
mov
ret
sbbl
daa
add
test
and
inc
mov
xchg
test
clc
insl
mov
mov
and
iret
xchg
cld
sbb
jg
ret
adc
movsl
aad
dec
cmp
and
sub
es
shll
push
ljmp
mov
pushf
cltd
clc
adcb
lcall
xlat
adc
aam
and
rcrl
add
adc
movl
out
cld
inc
scas
aad
jle
adc
xor
imul
imul
push
icebp
adc
xor
add
push
popf
aam
test
lods
sti
mov
ljmp
mov
xor
cmp
lods
insb
mov
out
icebp
mov
fdivrl
jae
fadds
nop
dec
cmp
mov
add
repz
jle
mov
shl
subl
ds
push
jle
pop
aam
sarl
cmp
cmpsb
adc
pusha
push
jo
xor
addr16
imull
pushf
loopne
popf
aaa
pop
js
pop
push
xchg
xchg
inc
lea
out
pop
sub
jnp
mov
test
cs
jns
insb
scas
sbb
lock
cmp
cld
outsl
dec
in
pop
mov
scas
push
cmpsl
stc
pop
dec
mov
or
cmp
fcmovnu
mov
popa
pop
dec
mov
and
inc
andb
out
pop
rorl
and
fmul
mov
jns
ja
xchg
and
cmp
lds
imul
jns
cmpsl
ret
clc
push
jns
push
cmp
sbb
les
int
in
rcr
in
or
pop
cs
imull
cmpsl
mov
cltd
ja
not
lods
cmp
into
xchg
push
int
mov
dec
imul
sbb
adc
cld
lods
mov
cmpsl
xchg
cmpsl
lret
in
mov
fdivs
and
fsubl
jg
in
out
outsb
sbb
inc
pop
out
lcall
jno
imul
in
lds
pop
aas
jg
xchg
and
in
lods
mov
call
into
xor
nop
xor
rorb
adc
movsl
xor
ret
scas
push
fwait
sub
cwtl
jmp
mov
mov
jae
movb
or
leave
inc
out
ljmp
jne
sub
call
lock
mov
data16
loope
mov
ds
jmp
xchg
negl
fmulp
dec
lret
int
into
int3
fisubs
sub
cmpsb
out
gs
and
mulb
testb
jecxz
fwait
push
adc
les
mov
loope
lods
xor
pop
lods
movsb
xor
mov
mov
cmp
adc
inc
inc
mov
pop
mov
cmpb
shlb
xor
pusha
in
adc
inc
xor
add
lods
or
push
adc
test
divl
add
in
pop
scas
cld
xchg
mov
loop
lahf
or
adc
sahf
testl
xchg
dec
and
fidivrs
in
cmp
sahf
mov
adc
mov
pop
and
popa
lahf
and
sub
dec
push
or
mov
mov
aaa
dec
std
push
ret
dec
push
xor
stos
and
mov
rorb
xchg
clc
cmp
outsb
test
xchg
or
push
ret
cmp
arpl
stos
pop
or
sub
push
bound
je
sbb
add
lcall
je
sub
xor
insl
mov
jae
inc
sbb
add
mov
and
ret
jmp
cmp
out
pop
xor
mov
sahf
push
jo
sbb
xchg
mov
xor
sub
xor
push
loope
inc
ret
in
fdivrs
fisttps
insb
repnz
adc
add
loop
jne
jae
mov
dec
xor
jae
cmpsb
insb
into
lcall
popa
push
mov
xor
push
test
sbb
fisttpl
out
pop
jb
sar
cmpsb
iret
add
subl
sar
movntq
ss
cs
jae
stos
jne
sbb
in
imul
push
fildl
out
lahf
stos
insl
inc
dec
mov
mov
call
mov
or
dec
jg
test
pushf
inc
dec
aaa
loop
jmp
mov
dec
sbb
insb
fnstenv
in
dec
imul
pop
stos
add
aad
aam
divb
stos
stc
sub
mov
fiaddl
fsubl
mov
sub
repnz
lods
bound
push
mov
call
xlat
imul
mov
push
cmp
jle
mov
or
inc
pop
xchg
pop
inc
sti
pusha
xor
push
pop
lret
jl
in
and
jb
lods
inc
mov
std
adc
jle
pop
roll
pop
sub
add
jge
pusha
cmc
ficomps
imul
xor
sahf
xchg
mov
cmp
stos
in
out
into
inc
or
mov
bound
clc
pop
loope
fstl
bound
mov
sti
loop
sarb
inc
pusha
cmp
xchg
orl
out
mov
stos
outsb
add
dec
aam
fwait
push
lcall
mov
scas
mov
sub
add
or
bnd
inc
cld
leave
fs
push
pusha
jg
fnsave
bound
push
add
out
scas
in
scas
mov
mov
pop
repnz
cwtl
cli
sub
popf
dec
xor
fcoml
std
or
stos
or
cwtl
ret
shrl
push
mov
inc
sub
add
inc
push
pop
arpl
sub
cltd
jae
and
xor
jb
add
out
ds
ds
out
icebp
btcl
fmull
xor
cmp
xchg
mov
sub
pushf
stos
push
pop
lcall
nop
aas
mov
fstpt
in
icebp
push
or
icebp
push
inc
mov
or
dec
inc
push
pop
popa
iret
aaa
pop
dec
imul
or
test
pop
cmpsl
adc
adc
mov
out
stos
lcall
mov
jle
jecxz
jns
subb
lahf
lcall
subb
add
cmpsb
jmp
popf
sar
mov
mov
std
xor
fidivrl
mov
add
push
loop
push
lret
testl
cmp
push
mov
add
add
in
push
xchg
cmp
aaa
cmc
fstps
dec
xchg
jp
shll
mov
sub
aaa
add
pop
push
or
cmp
cmp
in
jge
jle
lock
cmp
pop
test
aad
pop
jmp
push
push
jl
xor
mov
inc
pop
and
fbld
je
xchg
mov
into
mov
fldl2e
mov
sub
sbb
pop
sub
xchg
mov
adc
xor
ja
add
cmpl
daa
sbb
sbb
sbb
shr
sbb
in
aad
xchg
test
push
ds
jmp
ljmp
xchg
outsl
lods
xor
loope
fistps
add
mov
or
push
inc
fwait
out
outsb
pusha
mov
inc
int
loope
mov
mov
mov
fmull
jo
dec
fcoml
jno
dec
adcb
idivl
dec
mov
aas
int3
sbb
loope
xchg
out
jb
bswap
mov
gs
adc
cmp
hlt
cmpsb
or
or
out
cmp
push
push
sahf
push
lds
pop
jns
pop
ds
cmp
lods
ss
das
lods
lret
sbb
push
mov
jmp
jbe
pusha
fdivl
inc
in
call
jns
icebp
xchg
gs
leave
pop
add
pop
sbb
mov
fiaddl
mov
mov
mov
push
push
inc
push
jae
imul
mov
fisubs
push
divl
inc
sbb
cmp
pusha
jne
movsl
mov
mov
cmp
imul
stos
mov
cld
mov
jae
cmc
jle
xchg
in
jns
cmp
insl
and
insb
xchg
mov
mov
repnz
add
cli
inc
mov
sbb
pop
pop
push
push
outsb
ja
push
adc
sahf
cmc
mov
mov
int
xorl
addr16
adc
lds
and
mov
xchg
dec
adc
adc
aam
fisubl
in
sbb
cmp
sbb
push
push
fldl
test
mov
pusha
jns
jb
dec
mov
and
test
negl
or
js
roll
and
mov
lea
cltd
add
lods
mov
mov
divl
fdiv
out
jl
ret
leave
repnz
in
sbb
sbb
je
and
push
iret
dec
pop
loop
dec
sub
andl
and
stos
fs
xlat
pop
popa
pop
int3
mov
sbb
out
sub
push
push
mov
push
dec
cmp
mov
ffreep
shlb
hlt
test
shr
pop
mov
mov
shl
add
xchg
test
dec
adc
and
xor
lcall
rorl
mov
pop
cmp
xlat
or
insb
sti
jbe
fcomps
fwait
and
pop
std
add
iret
xchg
loop
push
dec
xor
mov
push
fmul
dec
pop
insl
sub
hlt
xor
ljmp
add
outsb
call
dec
or
aam
rol
clc
rcrl
xor
and
push
add
jno
in
jno
xor
xchg
jmp
stc
xorl
push
add
fstl
adc
movsl
jecxz
test
push
jne
cmpsb
cmpsl
lods
xrelease
add
fwait
xchg
xor
dec
out
xchg
push
out
das
in
shlb
sub
lods
int3
dec
sbb
dec
push
push
cmpsl
ja
pop
inc
jae
aas
push
shrb
xchg
jb
test
and
mov
out
je
cmp
jae
in
mov
out
jecxz
rcl
fcomps
int
jae
and
fs
testb
xchg
jmp
push
fcoms
inc
push
jg
jb
inc
push
daa
dec
mov
out
pop
push
mov
mov
adc
daa
sub
imul
pusha
lods
cld
pushl
xchg
mov
adc
xor
stos
ret
xchg
add
inc
pop
mov
xor
inc
outsl
addb
jbe
nop
int3
ret
inc
daa
fwait
sbb
fsub
stc
inc
cmp
cli
aaa
and
add
jbe
push
lock
dec
cli
dec
jmp
and
std
dec
in
jecxz
sahf
enter
les
jnp
and
test
mov
cmp
movsl
repz
and
adc
loopne
add
mov
test
ja
adc
cmc
mov
fldcw
push
pop
outsb
fwait
aas
icebp
fisttpl
int
pop
fxch
jecxz
pop
jge
mov
popa
mov
xchg
shll
popf
xor
xlat
cmpb
lock
pop
xchg
adcl
cli
mov
push
xchg
sbb
addb
xchg
or
jae
push
pop
xchg
fiadds
inc
es
fistpll
fisubrl
push
mov
in
icebp
jp
cmp
imul
stc
and
lea
push
mov
inc
aam
sbb
or
popa
cltd
inc
aas
xchg
enter
roll
xor
lret
icebp
les
cmpsl
and
pop
mov
add
subb
cmp
cld
adc
aas
mov
cwtl
adc
aam
clc
adc
mov
das
leave
out
enter
pop
pop
push
push
xlat
push
les
push
fisubs
mov
xchg
mov
test
dec
ds
mov
and
or
test
loope
arpl
outsb
fcoms
xchg
adc
ja
repz
cmp
sub
das
push
loopne
cli
jmp
dec
dec
insb
mov
neg
adc
das
mov
mov
in
fldenv
jecxz
mov
pop
mov
mov
ja
mov
and
xlat
mov
inc
sub
lahf
and
ror
mov
inc
fwait
aam
cmpsb
movsb
data16
jp
push
xchg
fisubrl
xchg
xchg
sub
fcom
dec
ss
fstps
xor
lret
test
mov
shlb
stc
enter
stos
mov
add
in
mov
cld
push
sbb
xchg
out
stos
fcomp
jno
movsl
hlt
nop
movsl
out
inc
inc
push
mov
push
ret
pop
jbe
jmp
jp
pop
adc
lret
add
xchg
inc
popf
fstpt
or
jg
dec
les
in
cltd
fistpl
fistpl
jns
mov
jns
and
sub
xchg
mov
popa
es
aad
fprem1
test
xchg
or
sub
dec
or
inc
add
push
push
cli
dec
int3
in
mov
and
stos
sub
pusha
pop
into
pop
pop
sbb
adc
in
mov
out
dec
fdivs
js
mov
jae
out
scas
les
jo
mov
loope
lret
or
adc
jmp
sbb
pop
addr16
popf
cwtl
fsubrl
dec
cmpsb
xchg
fisttpl
subb
jns
cs
push
bound
adc
out
and
imul
fistps
int3
cli
popa
hlt
mov
inc
lret
mov
aam
aaa
xchg
clc
adc
repnz
mov
mov
sbb
mov
xchg
or
jne
jl
jbe
loopne
outsl
mov
sub
or
dec
and
push
test
xor
mov
pop
repz
xchg
add
inc
lock
or
xor
xchg
jg
cwtl
push
xchg
and
pop
jbe
mov
xor
jnp
loop
aam
cld
in
leave
lahf
xchg
sahf
test
sub
cmpsl
shl
inc
aad
bound
js
pop
scas
gs
mov
dec
in
sbb
leave
inc
push
das
out
cmpsb
flds
mov
out
negl
dec
nop
mov
jl
xchg
cwtl
mov
das
cmp
pop
jno
or
xchg
pusha
cltd
or
push
rcll
cmp
or
dec
and
iret
jg
push
in
sbb
std
test
gs
sub
fistps
sbb
pop
inc
or
jo
std
sub
inc
dec
call
ret
xchg
cmp
fwait
dec
cli
out
jmp
pusha
js
fildll
imulb
adc
mov
nop
xor
mov
jno
cltd
out
cmp
daa
add
dec
mov
mov
cmp
test
sahf
cmp
pop
pop
fstps
lea
dec
imul
mov
pmaxub
in
pop
cwtl
jae
gs
inc
loope
pop
popa
jg
cmp
and
xchg
jl
adc
fiadds
bound
xchg
lret
lret
push
outsb
popf
pop
rorl
das
xchg
scas
jp
dec
in
add
cltd
mov
sub
xchg
add
add
stos
xchg
sbb
sbb
mov
mov
ds
arpl
fcomps
call
scas
aad
jnp
or
jg
inc
insb
push
lods
and
and
shll
and
outsb
pop
or
rcr
int
cmp
add
and
ljmp
stc
mov
xor
inc
dec
jno
jl
cmp
fbstp
jl
cmp
aam
mov
add
icebp
adc
int
jmp
xor
adc
xchg
ficoml
dec
sti
inc
and
push
inc
or
inc
lcall
scas
jg
add
xor
adc
movsb
lret
incb
in
pop
popa
imul
jmp
xor
pusha
jno
push
sbb
and
lahf
rclb
daa
in
mov
or
push
cmpsl
jae
sbb
adc
xlat
push
xchg
pop
mov
in
add
xchg
or
mov
inc
xorb
push
cmp
mov
push
and
mov
cld
nop
repnz
cmp
sub
comiss
pop
add
movb
xor
jb
or
in
cmp
cwtl
jne
push
enter
xchg
in
addps
mov
cli
jbe
std
fneni(8087
push
das
sub
scas
mov
pop
pushf
push
pop
xor
pop
add
in
in
lock
dec
mov
inc
bound
lods
mov
rol
push
aas
adc
mov
fs
insb
pop
shlb
rcl
mov
push
data16
sub
jmp
enter
les
adc
and
dec
mov
movsl
push
fdivrl
inc
inc
xchg
push
pop
sysexit
stos
jmp
movsb
jmp
adc
inc
mov
pop
pop
dec
sahf
inc
sbb
push
repnz
in
mov
repnz
jmp
fadds
test
ret
pop
xchg
xorb
fidivl
xchg
shr
sbb
fmull
dec
enter
sarb
fidivrl
fld
or
xor
ljmp
lahf
jno
sahf
andb
inc
mov
loopne
les
movsl
jb
jnp
mov
test
out
sub
inc
cld
xlat
adc
ljmp
leave
sbb
mov
inc
cmpsl
push
sbb
push
jecxz
lea
or
dec
push
data16
jmp
int3
sarb
into
cmp
mov
popf
inc
add
movsl
dec
cmp
xor
inc
inc
ret
call
dec
shll
mov
jbe
xchg
or
sbb
popa
jge
out
push
push
test
cmpsl
test
mov
add
stc
sbb
pop
pushf
sbb
mov
lcall
mov
add
das
cmp
insl
and
xchg
and
xchg
mov
mov
fldt
lods
es
cmp
fistps
xor
stos
push
push
fimuls
cmp
addb
and
pusha
mov
test
sub
pop
sbb
push
fnstcw
lds
movsl
add
add
jo
dec
pop
sbb
mov
sbb
loopne
fwait
in
inc
divb
jge
jns
paddd
lcall
loop
mov
pop
inc
call
data16
fs
lock
popa
xor
pop
mov
jnp
xor
sahf
mov
stos
and
pop
test
nop
imul
inc
mov
test
mov
or
iret
adc
lret
je
or
inc
pop
jp
loop
add
adc
cmp
leave
movsb
push
dec
pop
aad
dec
pusha
frstor
pusha
adc
sub
adc
lret
ret
into
sbb
sub
outsb
std
adc
cmc
push
cmpsb
popa
mov
es
popf
cmpsb
in
adc
ret
mov
push
mov
cld
push
jl
cld
mov
push
and
cmp
adc
test
pop
dec
ror
pop
bound
sbb
lcall
ja
pop
mov
mull
call
jbe
das
mov
outsl
mov
dec
ret
popa
movsl
ljmp
mov
out
bound
notl
ss
icebp
cmp
data16
push
out
cmovl
and
jge
fldt
mov
fsubl
push
test
pop
mov
movsb
out
testl
adc
test
push
mov
stc
fld1
lcall
test
nop
jmp
and
push
in
add
stos
push
movsl
popa
or
push
repz
movsb
pop
ds
fiadds
loop
mov
push
mov
fidivl
bound
add
idiv
or
xor
jbe
fwait
mov
cmp
lea
and
jmp
cld
lds
add
sbb
cmp
dec
in
divb
jns
lds
sub
cmpsb
dec
icebp
outsl
xor
pop
ja
das
adc
iret
mov
inc
fildl
dec
cmp
cmp
addr16
and
add
and
imull
xchg
dec
xor
iret
ret
mov
ss
daa
subb
sub
cmp
jno
inc
cmp
dec
fstpl
cwtl
loopne
gs
mov
std
dec
pop
pop
shlb
clc
jne
adc
or
and
jne
dec
add
test
and
cmp
jns
mov
fwait
ret
sub
or
pusha
pop
rolb
mov
jmp
dec
imul
pop
xor
mov
in
xchg
lds
inc
or
adc
mov
movsl
dec
jo
fs
out
mov
aaa
or
out
cmp
cmp
or
adc
lds
jp
dec
aam
jecxz
jnp
les
cmovno
pop
inc
test
sbb
imul
fiaddl
cs
out
xchg
jmp
fs
jne
add
jl
scas
outsb
rolb
mov
es
xor
fidivrs
pop
cmpsl
arpl
fwait
cmc
cwtl
subl
adc
rcll
into
push
in
sbb
xor
test
movsl
ror
pushl
jl
sbb
stos
mov
or
lock
in
mov
dec
in
stos
scas
dec
adc
mov
ret
cld
mov
sub
aaa
jb
movsb
sbb
std
jge
lock
fistpl
inc
pop
xchg
hlt
sahf
jo
aam
push
stc
ficoms
test
xor
jg
movsl
inc
xchg
js
mov
or
xchg
or
scas
xchg
sub
pop
and
and
add
cmpl
jmp
jg
cld
jge
repnz
xchg
popa
sbbb
adc
aaa
test
sbb
inc
xchg
loopne
xorl
in
mov
js
std
scas
cmc
xchg
sbb
into
push
stos
out
scas
jl
pop
push
in
fcomi
adc
aaa
pop
pop
push
clc
xchg
iret
mov
shlb
xchg
stc
pop
popl
movsb
lret
mov
filds
add
mov
cmp
xchg
sub
dec
repz
push
aaa
xchg
je
aam
movsb
outsl
roll
mov
push
cmc
sti
jmp
cmc
add
xchg
inc
fdivrl
int
dec
daa
xchg
cli
jo
adc
in
fxch
adc
and
xchg
xchg
or
mull
loope
outsb
out
pop
inc
jle
out
push
in
mov
cmp
adc
stos
xor
pop
push
test
cmpsl
lret
mov
push
imul
call
mov
clc
mov
xor
or
stos
xor
dec
xlat
sub
out
xchg
mov
and
fisubrl
inc
and
adc
outsl
inc
cmp
orb
jno
jae
fsubl
or
pop
mov
sub
rcrb
xor
adc
and
dec
inc
jecxz
test
mov
push
mov
sbbl
add
cli
out
push
sbb
pop
adc
lea
mov
in
lret
cld
adc
mov
iret
outsb
inc
test
fwait
xor
sub
mov
das
xchg
stos
shrl
jbe
movsb
ja
pushf
cmp
push
xchg
lods
movsb
out
addr16
dec
aaa
pop
inc
ljmp
rorb
adc
fiaddl
xor
les
in
adc
fisttpll
hlt
mov
pop
push
insb
and
jno
fists
push
xorl
push
out
jge
shl
cmp
push
pop
push
ds
into
dec
lahf
xchg
ret
sub
xorl
cmp
les
out
push
xchg
jl
ss
test
test
int
mov
fmuls
pop
xchg
das
dec
pop
xchg
ret
mov
mov
mov
mov
cmc
les
push
or
jne
and
inc
rcrl
sub
pop
xchg
sahf
dec
sbb
adc
clc
dec
arpl
or
adc
fdivrs
cmc
inc
xchg
or
mov
adc
inc
cvtdq2ps
clc
or
mov
shrl
push
cmpsb
das
es
xor
sarb
jg
call
xchg
mov
call
ss
mov
dec
cli
add
adc
ss
and
shr
addb
dec
or
cmp
add
fdivrs
or
lcall
inc
repz
jl
aas
and
mov
mov
inc
movsb
test
jno
rclb
push
push
rclb
sub
loope
push
mov
lods
insb
and
cmp
push
fs
inc
cmp
hlt
pop
sub
xor
push
inc
add
stc
fs
cs
push
jnp
in
push
aam
pusha
mov
and
mov
push
mov
mov
push
mov
inc
mov
push
addb
push
ljmp
daa
xchg
jecxz
push
cmp
pop
add
clc
ss
lret
xor
cmp
inc
xor
push
lret
inc
insb
add
mov
mov
or
xor
mov
xchg
cmp
aaa
sarl
xchg
dec
jne
push
adc
and
mov
dec
dec
scas
push
adc
sub
scas
mov
sahf
das
add
lret
ja
sub
bound
and
outsl
lret
movb
mov
add
shlb
mov
jmp
addr16
lahf
or
daa
test
fs
ret
mov
sbb
adc
jge
pop
cmc
add
mov
leave
fsubrl
adc
fmuls
cmp
inc
out
iret
sbbb
cltd
dec
testl
xor
xor
repz
jg
mov
inc
push
dec
out
pop
add
nop
enter
out
jle
les
scas
daa
shr
inc
mov
jp
clc
cmpb
cltd
xorb
dec
cwtl
pop
push
enter
and
or
int
cmp
jl
fimuls
sbbl
inc
roll
jns
sub
xorb
mov
sbb
sub
jg
mov
inc
mov
stos
cmp
mov
jo
sbbb
loope
leave
je
push
loop
inc
sub
out
mov
xor
pushf
xchg
out
mov
dec
ljmp
mov
jge
adc
xchg
popa
xchg
push
adc
sti
fidivrs
mov
mov
xor
movsb
iret
mov
sti
mov
dec
inc
lea
pop
and
cltd
ljmp
stc
sub
in
or
inc
fmuls
cmpl
rcr
jnp
xchg
call
leave
fcoml
mov
dec
mov
or
adc
cmp
xor
ljmp
jmp
jg
loop
push
push
jno
push
sbb
xchg
xor
push
subb
cli
js
jbe,pn
les
orb
rorb
push
mov
and
ja
lahf
push
mov
xor
push
jae
cmp
mov
jb
adc
cmpsb
cld
mov
rclb
cmp
add
mov
scas
andb
dec
push
xchg
or
and
cmp
mov
or
arpl
sbb
xor
mov
sub
lods
mov
dec
das
lock
fwait
cs
inc
pop
dec
jnp
xlat
push
and
clc
lcall
movsl
mov
mov
pop
sub
add
inc
or
jge
push
inc
fs
fsubr
rcll
rol
pusha
mov
mov
sbb
std
push
xor
lea
jno
in
test
pop
pop
les
stos
jo
jns
pop
fidivrl
je
jmp
push
scas
inc
push
ret
lock
incl
cmp
popf
xchg
sub
xlat
stos
fstpt
mov
and
inc
pop
adc
pushf
lret
cli
sbb
ds
cmpsb
inc
cmp
inc
cli
mov
add
add
jge
imul
dec
mov
lret
mov
rcr
jl
in
cmp
xor
jns
add
jmp
push
mov
push
mov
stc
cltd
cmp
push
or
and
dec
sub
nop
push
imul
pop
test
mov
fstps
test
xchg
inc
shl
jge
cli
cmp
pop
in
outsb
jns
xchg
push
add
in
popa
stos
leave
popa
sbbb
aad
std
mov
xor
sbb
inc
xchg
mov
stos
jecxz
xor
rol
leave
and
iret
mov
add
loopne
movsb
xor
rorl
cmp
sub
pop
and
roll
test
sub
add
pushf
sub
jge
loope
roll
frstor
out
and
adc
scas
mov
out
in
loope
mov
icebp
dec
dec
flds
cld
xchg
sbb
ret
enter
xor
pusha
and
ffree
and
cmp
jg
jns
push
xchg
int
mov
inc
flds
push
cmpsl
seta
sti
and
and
inc
repz
shrb
xor
enter
int
outsb
sti
imul
fldl2e
xor
ds
leave
scas
aad
push
aaa
sbb
and
shlb
or
xchg
movsl
fidivl
jmp
push
shl
int3
mov
mov
sbb
push
cmp
jo
mov
jp
dec
mov
sub
push
mov
clc
dec
sub
mov
ret
ret
jp
xor
clc
fisubs
arpl
sub
jns
rsm
mov
push
fwait
sarb
inc
sbb
sbb
sub
stc
and
shll
scas
mov
push
icebp
daa
rorb
pmovmskb
stos
pop
fs
push
fs
imul
inc
mov
aam
je
dec
aam
mov
pusha
imul
in
sti
xchg
jle
pop
insl
test
jns
mov
mov
ljmp
jl
leave
sub
inc
ljmp
movsl
jo
push
and
add
push
sub
fisttpl
push
inc
pop
jge
lds
jb
xchg
aas
into
cli
arpl
xor
arpl
sti
pusha
mov
add
dec
dec
push
pop
mov
mov
mov
mov
test
iret
sahf
popfw
pop
shll
dec
lcall
cmp
jle
xchg
mov
ja
shrl
mov
mov
fidivrs
es
daa
lock
mov
add
daa
fstpt
and
and
inc
cmpsb
mov
dec
cmp
out
xchg
dec
lock
jnp
pusha
test
jb
jne
inc
mov
test
xchg
clc
nop
cmp
inc
fbld
fimuls
fisttpll
xor
pop
cld
aaa
push
mov
sub
cmp
and
jg
das
add
jo
pop
xor
pop
pop
imul
cld
and
insl
mov
inc
outsl
into
repnz
popf
pop
inc
pop
sbb
lods
mov
aas
addr16
xor
mov
ja
mov
pop
roll
pop
mov
mov
pop
fstpl
js
mov
clc
cmp
imull
scas
sbb
pop
mov
test
shlb
mov
ret
repnz
test
negl
inc
loope
cmp
jb
xor
ret
add
xlat
adc
mov
fs
cmp
add
mov
insl
sbb
stos
add
mov
inc
or
outsl
mov
push
lock
pop
jnp
mov
mov
jne
jle
sbb
rolb
mov
rclb
jo
mov
xchg
push
cli
jmp
fmul
adcb
test
jl
loop
inc
sub
jecxz
mov
xor
xor
mov
inc
push
xchg
xor
jecxz
lret
jno
push
xchg
jnp
lods
addl
add
dec
or
imul
jmp
mov
into
jno
jge
inc
ret
add
dec
cmpsb
loope
rcpps
push
fbld
popa
cwtl
pop
iret
les
dec
adc
inc
movsb
cld
scas
and
out
iret
sahf
loop
jbe
and
inc
outsb
js
sub
jge
adc
int
insb
cmp
jae
mov
out
cmpsl
or
enter
jbe
cmpb
iret
popa
mov
xchg
jle
push
fwait
js
into
mov
dec
sbb
fwait
bound
dec
pop
cmp
xlat
mov
cmp
dec
cmp
xchg
add
cmpsl
dec
pop
lods
dec
das
sbb
call
dec
lea
notl
xor
add
inc
shrb
in
lret
jne
lcall
mov
out
ret
aas
scas
push
fidivrs
jae
shrl
loope
and
daa
pop
mov
or
cwtl
das
je
test
enter
fisubrs
cltd
push
sahf
ss
test
in
add
fistps
fsts
mov
cmpsl
mov
lods
sub
test
dec
je
popl
and
addr16
mov
cmpsb
out
ja,pt
cs
andb
xor
lret
jecxz
mov
and
lcall
nop
ret
imul
stos
xor
jmp
cmpsb
inc
lahf
sti
scas
sbb
int3
pop
inc
repz
or
mov
outsb
sahf
pop
outsb
pop
xchg
pop
lret
jecxz
pop
mov
push
or
inc
adc
rcrb
mov
add
cmpsb
into
cmpl
loope
jne
jmp
je
push
xchg
and
popl
insb
mov
add
or
push
pop
push
pop
pop
adc
out
push
jecxz
add
add
add
in
push
ds
xor
aad
lds
test
push
loop
mov
cmc
dec
pop
xor
inc
repnz
movl
mov
ss
outsl
add
dec
cwtl
jecxz
repz
clc
lock
pop
xchg
mov
mov
and
xchg
add
aam
cmp
and
inc
xchg
in
cltd
dec
inc
nop
xor
lds
and
xchg
aad
add
or
packuswb
jl
cmp
sbb
out
jne
lret
push
loope
mov
push
mov
loopne
arpl
fwait
jae
mov
jmp
sbb
mov
mov
mov
jnp
jge
push
pop
sub
nop
mov
ds
and
addr16
testl
cmc
ret
xor
scas
insb
dec
rorl
rcl
pop
fmull
flds
in
and
sub
dec
pop
mov
and
xor
stc
stos
cmp
out
dec
jmp
cmp
mov
loop
fisttps
stos
mov
movsl
pop
test
mov
ret
xor
dec
pop
cmp
jnp
mov
iret
lret
repz
cltd
add
xchg
bound
jp
sub
jbe
mov
dec
mov
pop
iret
push
sbb
fiaddl
push
imul
cmp
xchg
mov
fistl
push
adc
sbb
ffreep
out
cwtl
ja
aad
test
pop
hlt
mov
push
mov
xchg
fnstcw
stc
adc
pop
jl
ds
jp
mov
loopne
loop
cmc
inc
lea
fcmovnbe
pop
popf
xchg
mov
insb
lret
or
pop
popa
pop
mov
mov
cmpsl
inc
sbb
inc
jle
dec
dec
lahf
cs
int3
xchg
arpl
jmp
imul
movsl
xchg
stc
xor
and
loopne
or
sbb
inc
int3
xor
push
and
cwtl
dec
popf
mov
and
adc
imul
pop
fdivrl
xor
std
mov
in
adc
clc
fnstenv
xor
or
icebp
stos
fwait
sbb
xor
mov
into
dec
sahf
or
cmp
dec
lcall
stos
mov
mov
inc
sub
or
mov
popa
imulb
repnz
mov
mov
int
adc
mov
inc
gs
rcl
and
pop
push
cmp
jo
or
sbb
pop
mov
mov
lea
test
ret
lcall
cmp
ljmp
dec
pusha
add
pop
fisttps
mov
imul
popl
mov
cmp
movsb
lods
pop
sbb
lock
in
jne
cmp
clc
mov
jecxz
sub
hlt
dec
jns
mov
ja
hlt
repnz
add
daa
cmp
cmc
cmp
mov
pop
jp
cmp
int3
and
ret
in
ljmp
xor
mov
rolb
push
ljmp
adc
pop
and
notb
mov
or
insb
call
out
mov
pop
or
jno
pop
mov
xchg
push
dec
xor
mov
mov
addr16
inc
jae
out
test
sbb
xchg
es
push
jno
outsb
mov
and
call
push
mov
pop
les
sbb
neg
cmp
or
jae
xorl
push
lcall
enter
pop
mov
stos
sub
shrb
decb
int3
jg
sub
jle
std
pop
cmp
in
push
or
push
xor
js
or
mov
scas
ret
test
dec
xor
fbld
push
fwait
adc
les
jnp
pop
jecxz
test
imul
ss
and
and
cmc
gs
aam
sbb
fwait
push
inc
nop
and
xor
adc
push
sbb
mul
push
inc
mov
mov
inc
jne
call
faddl
test
inc
flds
dec
fisubrs
adc
add
fwait
or
adc
add
and
dec
in
mov
jg
js
xor
fstps
pop
inc
xchg
dec
aad
adc
fwait
lods
sbb
sbbl
xchg
pushf
and
push
mov
mov
jns
cmp
xchg
pop
andl
dec
std
pavgw
mov
lds
add
push
add
popa
and
sub
stc
adc
cltd
dec
lds
jo
cmp
loopne
cli
push
or
mov
mov
push
mov
movsl
cltd
not
stos
aad
subl
or
sbbl
mov
push
sbb
mov
fsub
pusha
test
dec
hlt
pop
iret
dec
xor
scas
not
mov
adc
ficoms
jno
jnp
scas
xor
fists
nop
movsb
test
mov
lods
aas
pop
int
data16
dec
adc
mov
das
pop
pop
and
popa
push
xchg
cltd
xor
adc
fisttps
dec
pop
jmp
pop
xchg
jae
sub
fucomp
dec
pop
or
stos
fdivrs
push
and
aaa
sub
dec
dec
mov
mov
fdiv
push
mov
mov
jno
cmp
icebp
adc
dec
sbb
test
jns
sbb
sbb
or
sub
xchg
xchg
sub
adc
mov
jecxz
cltd
jge
fsub
jg
test
mov
xor
insb
insb
mov
sub
in
inc
add
in
mov
pop
clc
lods
xchg
xorl
push
in
dec
xchg
mov
clc
push
jae
gs
sbb
ret
mov
lea
sub
cld
loop
and
jae
cltd
pop
push
pushf
test
inc
test
cli
jae
fisttpll
mov
sub
adc
mov
push
in
xor
push
div
ja
jo
shrl
mov
pushf
cmp
cld
adc
dec
sar
ja
adc
xlat
inc
adc
xchg
dec
or
mov
or
les
out
sbb
shr
jno
cli
or
push
pop
push
push
sub
xorl
out
xor
cmp
mov
sti
push
loop
pminub
and
and
test
lods
pop
xchg
sbb
rclb
xchg
jge
mov
mov
and
loopne
cmp
mov
imul
inc
inc
insl
adc
and
cmpl
loope
test
js
ds
jg
push
pusha
pusha
mov
sti
icebp
adc
xor
and
cmp
js
or
call
inc
adc
aam
dec
mov
lock
dec
pushf
adc
sbb
jnp
cwtl
or
xchg
jae
notl
cmp
jno
mov
dec
jge
js
pop
scas
jmp
jb
test
icebp
fisttpl
add
adc
cmp
push
mov
cmpb
fwait
loop
push
pop
pop
sbb
pop
mov
mov
clc
bound
jg
subl
ret
cmpsb
jmp
test
test
adc
jle
je
stos
dec
lcall
repnz
mov
xchg
sbb
cli
cmpsl
fdivrs
lods
aam
int
rol
lcall
lret
mov
aam
xchg
push
pop
sbb
ds
inc
mov
adc
jg
ja
xchg
and
lods
jp
xor
dec
xor
lods
mov
push
xor
mov
and
sub
pop
dec
push
xor
in
and
ficompl
mov
jmp
mov
dec
and
sub
popa
inc
imull
cld
mov
daa
pop
lahf
and
mov
mov
mov
int3
xor
mov
hlt
xchg
cmp
jl
mov
dec
mov
dec
into
mov
cli
mov
lretw
nop
test
inc
loop
adc
jle
cmpsl
mov
in
sbb
inc
mov
out
pop
dec
ja
mov
imul
jns
aas
push
daa
sub
fistpll
lods
fmul
shlb
push
icebp
mov
hlt
sarl
xchg
adc
addl
jb
pushf
repnz
pop
add
loope
mov
int3
fwait
jns
add
xchg
popa
dec
cmc
test
std
and
in
xor
in
mov
popa
push
adc
pop
mov
je
inc
mov
retw
push
mov
in
mov
inc
fcoml
cmp
xchg
outsb
inc
mov
and
cld
es
push
mov
xchg
mov
cmp
mov
stos
pop
adc
mov
mov
mov
imul
or
mov
cmp
popa
or
cmp
push
dec
movsl
pop
sub
push
pusha
push
inc
jp
lahf
je
add
jae
sbb
in
nop
insb
inc
mov
sti
inc
lds
in
jo
push
out
xor
sub
adc
pop
mov
mov
shll
std
or
push
mov
leave
dec
mov
jg
jno
mov
shll
jge
jne
outsb
lret
push
pop
pop
inc
or
xchg
cmp
xchg
adcl
jb
push
scas
sahf
cs
rcr
aas
cmp
jmp
xchg
jp
stos
out
loopne
pop
outsl
inc
mov
pusha
sub
rcr
pop
test
pop
js,pn
sbbl
xor
inc
and
adc
and
mov
xor
mov
vcvtdq2ps
insb
cmpsb
add
push
rcrb
lods
pop
addr16
call
in
xchg
mov
dec
test
or
aam
dec
lea
push
and
popa
mov
enter
movsl
shl
mov
xchg
dec
pop
dec
inc
xchg
mov
xchg
hlt
jno
or
decb
pop
cmc
mov
cli
sbb
dec
loop
sub
mov
add
xchg
imul
orl
pop
into
mov
cmp
inc
cmp
xor
and
jle
rcll
inc
jl
scas
call
repnz
jecxz
or
mov
and
test
dec
dec
sub
mov
and
dec
or
jnp
sub
xor
jns
dec
idiv
mov
out
mov
in
shll
sbb
test
or
hlt
gs
outsb
adc
addr16
data16
test
cmp
inc
dec
jmp
outsb
inc
sbb
push
xchg
lds
scas
lret
repnz
bound
mov
and
inc
xor
les
negb
sub
or
in
aam
mov
das
cmp
mov
imul
fisubs
int
cmpsb
gs
sar
inc
pop
sub
push
pop
or
inc
sahf
lock
ja
cmp
add
scas
mov
jle
and
add
sbb
xlat
adc
loop
test
adc
stos
jg
lcall
push
adc
into
dec
out
les
in
sbbl
xchg
out
pcmpeqb
cmc
flds
stc
push
mov
mov
xchg
jo
lods
insb
jl
call
cmp
jecxz
cmpsb
mov
sbb
sub
xchg
push
and
push
cmp
sub
lcall
imul
add
push
loope
out
adc
push
loope
or
daa
nop
out
pop
jne
xor
mov
push
test
fmul
cld
xor
cld
and
mov
ljmp
push
mov
sbb
fstpl
test
icebp
xchg
shrb
cmp
pop
outsb
in
call
movsl
and
nop
cmpsl
ficoml
xchg
shll
faddp
lock
add
dec
je
shl
pop
mov
mov
inc
mov
shr
aaa
xchg
and
and
inc
dec
xor
sbb
mulb
inc
clc
aaa
ret
inc
in
aaa
fldt
or
jle
or
loope
dec
add
sub
icebp
mov
lock
mov
mov
fidivs
mov
fcmovb
jae
jne
lods
adc
or
mov
inc
aas
cmp
sub
movsl
jo
push
push
sbb
or
sbb
enter
jae
popf
pop
jne
fistpll
xor
mov
shr
das
icebp
adc
sbb
sub
xchg
xchg
pushf
jl
call
hlt
pop
pop
sub
xor
xchg
out
imul
or
push
xlat
loopne
xchg
jl
xchg
lret
fdivrs
lcall
adcb
mov
dec
mov
xchg
xchg
orl
pop
jne
int
push
into
fwait
sbbl
xor
test
pop
mov
jbe
adc
pop
cmp
ret
push
sbb
cli
push
add
pop
dec
mov
movntq
adc
lahf
repnz
ret
mov
cmpsl
mov
add
in
js
pop
shl
punpckhdq
mov
mov
bnd
insl
or
dec
std
test
jne
dec
cmp
imul
cmpsb
push
fisttpl
mov
out
mov
dec
xchg
cwtl
mov
leave
pop
fcoms
mov
inc
test
adc
sbb
leave
sub
scas
jle
lea
sbb
movsb
sub
add
inc
push
pop
aas
fcoms
fs
testl
cmp
xchg
adc
jecxz
add
adc
cwtl
xor
adc
pop
jmp
xor
mov
xchg
les
out
std
jo
or
cmp
xor
mov
and
outsb
push
leave
mov
push
or
pop
adc
push
mov
sti
xchg
in
push
dec
int
lds
or
lods
mov
cmpsb
mov
mov
jp
setb
cld
test
cmpl
ret
xchg
ficoml
adc
xchg
sub
push
call
popa
daa
xchg
stos
leave
cmp
stos
push
mov
dec
lahf
daa
cmpsb
push
in
push
sbb
inc
push
mov
jae
jg
cmc
sbb
mov
iret
sub
dec
in
push
addr16
dec
test
out
cmp
inc
in
mov
nop
clc
mov
and
adc
push
imul
mov
mov
pop
xchg
out
cs
mov
outsb
and
xor
sub
sub
scas
int
xlat
pushf
dec
sarl
xchg
mov
xor
add
fbstp
fmul
testl
xor
push
addl
pop
add
int3
loope
xchg
sub
ja
test
test
pushf
mov
mov
popa
and
mov
dec
aaa
add
inc
repnz
popa
adc
stc
push
loop
out
jne
mov
mov
mov
jp
fidivrs
cltd
iret
inc
adc
into
shrb
mov
sub
and
add
repz
psrad
mov
xchg
test
pop
imul
mov
jg
cmpl
pop
cld
mov
jl
sbb
push
add
add
mov
call
out
sahf
ljmp
xor
aas
popf
popf
shll
lock
xchg
adc
mov
enter
jnp
fstl
xchg
jne
inc
loopne
shlb
sub
dec
fdivrl
push
pop
push
int3
inc
sbb
cmp
imul
ljmp
mov
mov
cmp
clc
fscale
inc
xchg
mov
adc
rcl
push
scas
loopne
in
jae
and
fmul
and
sbb
mov
push
int
test
scas
jno
or
pop
mov
mov
movsb
repnz
movsb
je
jae
xor
xor
idivb
test
and
orb
mov
mov
jb
jns
psubusb
mov
jo
daa
in
mov
xor
mov
into
mov
js
rclb
mov
jecxz
dec
adc
xchg
mov
dec
inc
xor
nop
mov
loop
lea
adc
out
pop
lcall
mov
inc
or
jmp
lsl
mov
pushf
xchg
mov
in
std
cmp
pop
fiaddl
iret
xchg
pop
enter
xor
lret
cmp
ljmp
push
pop
icebp
inc
test
sbb
mov
dec
pop
xchg
push
jmp
sbb
xchg
jns
lock
or
jae
jns
rorb
into
add
cwtl
xor
jbe
sbb
sar
test
stos
mov
or
lcall
lahf
cmp
outsb
mov
lds
aaa
mov
mov
mov
or
loop
sub
mov
and
call
fnsave
cmpsb
mov
push
in
mov
out
xchg
in
pop
add
imul
and
pop
inc
je
cmpsb
pmaxsw
aas
fmuls
pavgw
mulb
mov
mov
icebp
outsl
es
add
jbe
pop
dec
mov
fbstp
jbe
ljmp
icebp
dec
pop
pop
rorb
inc
pop
xchg
lock
mov
and
or
aaa
lock
push
adc
mov
mov
mov
pop
aad
shrl
inc
adc
mov
test
daa
jecxz
jnp
sti
pushf
pop
xor
sbb
jb
int
popa
mov
jne
in
ja
enter
mov
test
ds
aam
flds
sub
bnd
xchg
xchg
mov
mov
bound
pop
mov
jbe
loop
adc
or
shlb
aad
pop
aaa
mov
ja
test
outsb
cmpsl
sbb
jb
and
push
stos
and
pushf
outsl
sbb
shlb
sub
pop
out
or
or
addb
push
xor
xchg
test
add
movsb
stos
cmc
xchg
push
icebp
jl
addr16
fildl
mov
pop
lds
std
pop
mov
sub
mov
imul
lods
adc
nop
repz
scas
shll
repnz
clc
dec
xlat
std
sbb
loopne
lret
fldenv
lock
arpl
inc
and
popf
pop
push
ficoms
dec
pop
aas
out
mov
xchg
repz
lret
inc
pop
adc
mov
out
add
push
ret
xchg
inc
xor
cmp
push
jns
mov
fistpl
jb
insl
mov
mov
xor
leave
inc
dec
shrl
and
jmp
stc
push
test
es
pop
xor
shll
mov
or
aad
pop
scas
mov
cmp
ds
test
daa
push
sarl
mov
mov
mov
pop
mov
es
mov
add
sbb
push
hlt
lcall
jg
or
addr16
adc
mov
loop
test
push
pop
jae
repnz
add
dec
dec
cs
loopne
mov
repz
inc
dec
jo
into
fimull
push
adc
pop
inc
xchg
test
jbe
cmpsl
jo
lcall
imul
xchg
sar
inc
stc
push
mov
sbb
es
cmp
xchg
daa
fidivl
repnz
xor
dec
lea
into
dec
aad
neg
jo
sub
bound
clc
sbb
scas
int3
lock
inc
mov
arpl
xor
pop
xlat
xor
ss
jno
or
mov
and
jg
ljmp
mov
out
imul
xchg
stos
push
push
sub
ds
lds
dec
notl
movsb
movl
push
mov
mov
or
fisubrs
cmp
or
fdivs
mov
outsb
sub
mov
xor
std
testb
lahf
data16
push
inc
dec
mov
int3
ds
sub
dec
inc
loope
daa
enter
ss
mov
in
cld
cwtl
inc
pop
jae
lahf
fstps
into
pop
pop
sahf
sub
aad
xchg
jno
cmp
jmp
hlt
dec
xchg
pop
mov
int3
into
aaa
inc
inc
int
add
adc
test
adc
jle
mov
mov
mov
mov
cmp
cli
in
cmp
out
and
cwtl
call
insl
loope
mov
jns
push
fwait
scas
adc
inc
call
xchg
add
xchg
negb
push
adc
cli
out
hlt
imul
div
add
popa
mov
gs
pop
push
clc
mov
sbb
adc
push
adc
lods
xchg
sbb
out
in
or
mov
leave
cmpl
lahf
data16
xor
add
push
ret
add
mov
loop
dec
jnp
fdivl
xchg
cmp
push
jle
repnz
xor
std
lea
xlat
or
rol
dec
adc
cmp
call
inc
pop
es
stos
dec
mov
jecxz
out
pop
fwait
jnp
push
push
mov
fmull
and
jge
lahf
sbb
sbb
mov
mov
ja
imul
push
std
clc
sbb
mov
imul
sbb
rorl
sbb
fidivs
cld
sbb
out
aaa
das
jmp
nop
ret
out
aam
sbb
fcomps
fmull
dec
rcrb
sbb
xchg
push
arpl
pop
pusha
adc
cmp
pop
lods
mov
mov
jmp
or
adc
xchg
ljmp
pop
sahf
mov
les
fnstenv
push
push
pop
pop
cmp
jmp
mov
shr
jmp
flds
pop
xchg
jl
testl
push
leave
dec
adc
jcxz
cwtl
mov
push
mov
pop
notb
push
jne
cmp
jle
push
dec
jmp
cmp
add
xchg
cmpsb
shr
xchg
or
ljmp
xchg
outsl
cmp
cmpsb
mov
fimull
xchg
imul
outsb
push
addr16
adc
cmp
insb
popa
mov
inc
fs
subb
push
enter
test
adc
mov
and
cmpsl
lcall
pusha
lret
call
push
sub
stos
movsl
pop
loop
cmpl
mov
scas
lods
adc
mov
jl
xchg
inc
or
adc
daa
xchg
or
xchg
sbb
dec
shll
or
cmpsb
jmp
mov
idivb
mov
sub
mov
rcr
jo
sahf
test
xchg
enter
jo
cltd
ja
push
mov
add
pop
sub
sbb
push
xchg
fldpi
test
adc
jno
jle
out
inc
aad
call
cmp
fsubl
lds
pop
dec
inc
enter
icebp
fcoml
push
lds
ljmp
mov
and
pop
xchg
inc
mov
and
ret
mov
ljmp
mov
cmp
add
stc
int3
push
cmpsb
sbb
mov
cs
or
jae
pop
out
subl
rep
iret
add
add
add
and
pop
lret
aad
dec
push
out
lds
inc
cmc
dec
sbb
pop
pop
lea
inc
sbb
aam
xlat
sub
enter
sti
mov
push
jns
pushf
push
mov
incl
xor
jne
testl
mov
loopne
andb
mov
daa
dec
sbb
test
mov
shll
stos
jnp
push
push
sub
frstor
pop
imulb
or
dec
mov
pop
lcall
xchg
aad
test
adc
jp
repz
jno
in
ss
iret
adc
test
jmp
loop
mov
aaa
pop
or
or
hlt
mov
orl
dec
mov
sahf
aas
lahf
mull
int3
mov
std
imul
xchg
jg
aaa
jns
ficoml
imul
xchg
xchg
loop
add
xor
icebp
notl
inc
sbb
or
std
pop
or
ljmp
pop
lret
jp
sarl
push
pop
lret
mov
ljmp
addl
std
mov
lcall
sub
fcmovne
jge
gs
and
clc
testl
enter
jo
and
pop
adc
mov
test
xchg
stos
pop
sub
sub
rcr
xchg
add
fistpl
stos
mov
sub
sbbl
ss
fisubl
xchg
cmp
lret
jecxz
cmpsb
or
pop
aaa
mov
xchg
andl
push
mov
dec
mov
adc
lods
add
or
scas
lods
adc
xor
sub
push
cwtl
fiaddl
mov
push
daa
mov
addr16
pusha
push
add
movsb
fwait
adc
ret
cmp
insb
jge
je
cmp
outsb
imul
xchg
int3
and
sbbb
addl
popa
inc
js
aam
push
push
jbe
push
dec
push
inc
sbb
push
xchg
lea
sbb
in
adc
subl
stos
stos
xorl
jb
stos
jb
cmp
das
aam
jmp
jo
ret
sub
loopne
mov
push
sahf
push
sub
cmp
and
add
xchg
cmpsl
and
mov
adc
iret
cli
push
push
pop
jp
mov
jmp
pop
shlb
cmp
sar
rcr
mov
les
mov
and
pop
arpl
adc
add
pushf
mov
adc
mov
jbe
outsb
fisubrs
xchg
movsl
sar
call
nop
mov
jae
out
icebp
xchg
dec
add
add
add
hlt
inc
gs
sub
pop
sbb
outsl
push
pop
in
sarb
std
js
add
jecxz
add
insl
in
push
jno
xor
adc
pusha
outsb
cld
jae
dec
stc
stos
prefetch
or
cmp
sahf
and
sbb
or
test
lods
adc
or
add
imul
lea
insl
mov
sub
mov
cmpsl
call
pop
pop
adc
jge
aaa
xchg
ja
es
inc
flds
jge
dec
inc
sbbb
ss
out
mov
xchg
xchg
mov
mov
pop
mov
jns
jge
es
mov
add
adc
jne
dec
xor
ljmp
or
out
xchg
call
loop
mov
imul
dec
lods
jmp
int
test
daa
sub
pusha
scas
inc
scas
jmp
push
aaa
xchg
xchg
sub
imul
icebp
sub
ficoml
cmc
and
iret
and
jle
cmp
push
mov
sbb
fistpl
and
bound
cld
pop
rorb
lea
test
dec
xor
in
pop
xchg
leave
cmp
clc
mov
aas
loopne
mov
int
adc
std
pop
fistl
aam
push
div
pop
dec
cmpsl
test
xchg
push
fwait
pop
push
pop
js
js
iret
popa
dec
mov
cmp
scas
popa
cs
xlat
pusha
scas
mov
popa
push
cmpsb
mov
ljmp
mov
iret
push
aad
mov
inc
xor
cmp
push
or
iret
pop
dec
push
das
loop
lret
mov
addl
rcll
and
adc
mov
and
out
fisubl
ljmp
ret
aaa
xchg
adc
stc
jmp
xor
jecxz
scas
sar
jbe
outsl
jmp
lcall
sub
sbb
insb
loope
dec
sub
mov
sbb
sarl
mov
repz
iret
outsb
ss
shl
pop
add
xor
mulb
arpl
xor
in
mov
lret
and
xchg
xor
lods
inc
pop
adc
repz
repz
sbb
sbb
movsb
out
fiadds
mov
lret
jecxz
lock
or
mov
xor
mov
xchg
sbb
xchg
hlt
stos
icebp
cmp
inc
sbb
xlat
scas
jge
shl
insb
ss
in
jns
ljmp
mov
cmp
lret
cmpsl
rorb
and
cmp
std
adc
jae
rol
pop
push
push
in
arpl
ret
pop
pop
cmp
xchg
icebp
gs
or
lock
gs
stos
adc
and
push
dec
fcom
rcll
ja
mov
addr16
outsb
idiv
jno
sbb
xor
push
and
push
push
inc
mov
push
insl
mov
adc
mov
jbe
xor
loopne
adc
push
cld
repnz
jle
xor
repnz
rorl
outsl
sub
and
lods
jl
stos
mov
or
jmp
pop
sub
fdivrp
sub
inc
fisubs
das
push
add
je
cld
shll
inc
cmp
jecxz
inc
rclb
ljmp
jb
xor
shll
pushf
lds
fcompl
push
lret
shlb
dec
xchg
test
inc
add
ror
mov
nop
xor
sub
cmpsb
cmp
mov
testl
mov
jmp
int3
inc
loope
push
cltd
hlt
out
cwtl
xchg
xchg
mov
sub
gs
filds
adc
ljmp
cmpsl
adc
add
lahf
stos
cmp
test
sub
out
add
or
lret
and
int3
mov
into
jp
sbb
fwait
adc
lds
std
xchg
cld
jg
xchg
sbb
lahf
xlat
outsb
jb
cmc
or
fbld
scas
cs
clc
xchg
jae
adc
inc
push
dec
aad
and
loope
fsub
xchg
ds
mov
pop
xor
popf
mov
insl
cmpsb
mov
or
loopne
cmp
adc
jo
and
mul
mov
scas
mov
xor
dec
call
repnz
loop
dec
data16
js
xchg
jno
or
jg
pushf
dec
xchg
mov
or
scas
pop
das
daa
pop
aam
lcall
shrl
insl
or
add
insb
jb
xchg
mov
sbb
sub
fidivrl
jnp
mov
ljmp
inc
outsb
adc
xchg
lcall
inc
in
mov
pop
aad
scas
mov
mov
or
sub
adc
in
aaa
stos
pop
int
hlt
notl
pop
push
ftst
notl
inc
pop
cmpl
mov
adc
rol
adc
sbb
ror
adc
jge
xor
imul
mov
jne
xor
push
into
jnp
adc
pop
add
cmp
loop
add
pop
dec
fwait
pop
ja
testl
jne
call
push
xor
mov
cmpsl
rcrb
push
cmp
push
push
inc
mov
mov
xchg
fwait
aas
int
loop
cmc
xchg
imul
hlt
ljmp
rolb
jae
xchg
insb
mov
dec
pop
mov
popa
rcr
scas
aaa
out
pushf
lret
xor
jle
push
aam
sbb
inc
mov
mov
inc
xchg
push
xor
decb
cmp
ss
cmp
cmpsl
adc
pop
das
cld
dec
adc
mov
aad
into
dec
pop
in
sbb
sub
int3
mov
pusha
rclb
rcll
sub
adc
test
xchg
mov
sbb
mov
cmp
fnstsw
adcl
mov
cmpb
out
aad
sti
adc
ficoms
fcmovb
push
pusha
pop
pop
inc
add
push
jne
fcompl
jmp
lods
jns
push
icebp
push
jbe
hlt
leave
popf
jl
jle
iret
subl
cmp
push
out
xchg
mov
popf
repz
inc
insb
mov
mov
mov
lock
push
and
dec
push
jp
icebp
mov
pusha
jb
pop
popf
cmpsl
inc
mov
adc
xchg
xchg
and
cmpb
push
fimuls
jge
sbb
sub
repz
std
pop
dec
add
or
inc
stc
rolb
dec
and
ret
mov
test
loop
call
mov
inc
xor
sub
aam
dec
lcall
and
fdivl
aas
jno
scas
loop
lret
sbb
in
and
std
js
test
add
mov
fcoms
or
in
rcll
stc
fwait
orl
sub
push
dec
xor
mov
xchg
lcall
pushf
mov
icebp
lea
test
sar
jecxz
and
clc
add
lret
cmp
and
pop
inc
mov
in
popf
cmpsb
inc
adc
jae
das
xchg
aas
jecxz
mov
push
leave
cmp
xchg
js
xor
pop
les
fnstcw
sbb
and
pop
xor
inc
mov
cmpb
sbb
pop
loopne
dec
cmc
push
sbb
cmp
leave
sub
jns
adc
nop
and
pop
loop
stc
dec
outsl
inc
cmp
test
insl
in
or
fnsave
shl
mov
mov
cwtl
repnz
fisttpl
scas
in
rolb
or
jns
mov
clc
cmpsl
test
mov
mov
jb
dec
mov
mov
push
andl
mov
mov
fwait
mov
push
adc
jg
and
data16
mov
mov
sub
mov
mov
add
xor
jne
xor
lods
sbb
bound
mov
aam
jl
je
inc
pushf
add
test
pop
lahf
leave
loop
xor
outsb
xor
inc
das
scas
repnz
or
pop
imul
mov
xor
popf
fnstsw
mov
and
scas
popf
mov
add
sub
push
nop
dec
add
mov
scas
or
or
adc
movb
mov
jge
aam
mov
fisubl
enter
ret
push
fmuls
icebp
repnz
ret
mov
out
push
push
xor
arpl
jecxz
xchg
dec
test
icebp
popf
jns
cs
lret
daa
xor
stos
or
inc
lods
jmp
cmpsl
cmpsb
fs
pop
mov
addr16
and
mov
sbb
pop
push
push
mov
lods
ficompl
mov
stc
push
push
fbld
popf
mov
fcompl
ror
fiadds
or
imul
lds
pop
addr16
push
push
ret
ret
in
jle
test
add
xor
lret
pop
xchg
adc
mov
add
inc
cmp
ds
fsubr
xorb
mov
test
inc
xlat
cli
sub
shlb
jbe
shlb
ret
sahf
mov
jg
mov
int3
dec
mov
sbb
sbb
mov
ss
cltd
lock
subl
dec
testl
rcrb
sti
shll
pop
daa
mov
pop
shll
aas
mov
xor
mov
incb
cmp
cmp
dec
rcrb
rcrl
xchg
inc
imul
pop
cmp
movsb
inc
rclb
aad
dec
adc
in
pop
and
cmp
xchg
stc
sbb
dec
cld
into
imul
push
dec
fsubr
aaa
xor
js
pop
ret
xor
jo
cmpsl
loope
jo
cmpsl
loopne
jne
imul
das
adc
mov
xchg
cmp
add
scas
out
js
enter
push
jns
xchg
roll
xchg
sub
aas
xor
mov
adc
inc
fisubrl
cmp
movsb
sbb
mov
jmp
push
sbb
dec
insl
popa
pop
movsb
mov
bound
stos
adcl
mov
mov
jno
jle
loope
addl
movsb
loopne
or
push
mov
and
test
push
mov
sahf
pop
inc
insl
into
dec
pop
xor
mov
cwtl
lcall
insb
fdiv
add
sahf
dec
ret
clc
scas
adc
and
push
xlat
mov
jae
sub
pop
out
mov
jl
data16
pop
push
lods
negb
inc
sahf
testl
aas
pop
dec
push
sub
inc
pushl
aad
icebp
shll
out
push
pop
out
pusha
xor
push
stos
scas
or
dec
mov
xor
fsts
mov
mov
adc
popa
fwait
xchg
negb
cs
pop
mov
or
add
jcxz
scas
pop
sarb
pop
and
sbb
lcall
jbe
mov
lret
and
jnp
pop
cmpsl
xchg
pop
inc
jecxz
cmp
aam
scas
insb
dec
inc
mov
jl
jmp
popf
sbb
cmp
xlat
ficomps
lcall
push
test
loope
shr
mov
mov
js
jb
lods
push
or
int
popa
lea
jbe
xor
add
sub
or
pop
fwait
ja
and
mov
pop
xor
les
and
mov
cwtl
pop
cmp
outsl
jae
aaa
ds
xchg
mov
xchg
jge
repz
add
out
icebp
mov
cmpsb
and
dec
int
imul
std
adc
adc
in
scas
push
add
mov
mov
mov
xor
and
add
lock
mov
mov
clc
adc
sbb
pop
xor
jb
mov
insb
push
test
adc
cld
xor
mov
jmp
out
mov
xor
fs
mov
xor
jne
ljmp
dec
xlat
adc
pop
popf
mov
sub
pop
dec
testb
mov
inc
js
imul
pop
lock
insl
fnstsw
cmp
rcll
cmp
jno
test
scas
fdivp
mov
hlt
aas
shlb
repz
or
jge
mov
jmp
leave
daa
dec
scas
je
cli
movsl
mov
rorb
mov
mov
sub
pop
xchg
pushf
jecxz
jmp
dec
sbb
aaa
dec
rolb
popf
sub
into
pop
mov
pop
xchg
and
pop
pop
mov
out
jb
sbb
mov
and
mov
sarb
mov
jne
in
adc
mov
jb
or
lods
adc
test
mov
jg
lret
dec
sbb
outsb
xchg
dec
divb
insl
and
mov
insl
je
push
mov
ss
out
clc
and
mov
fwait
xchg
fsts
sub
and
vorps
pop
cmc
cli
jnp
test
add
sub
pusha
mov
neg
insl
das
inc
cmp
lock
aaa
fistpl
sbb
enter
js
xchg
mov
or
roll
icebp
repnz
