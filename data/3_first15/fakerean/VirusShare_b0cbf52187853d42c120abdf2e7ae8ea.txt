sbb
add
mov
xchg
incl
sbb
js
adc
fistpl
repz
jge
xchg
daa
xor
and
inc
push
xor
mov
adc
and
nop
xor
mov
lahf
ret
adc
scas
pushf
push
jo
loopne
cmp
add
and
loope
adc
or
pushf
xor
or
jle
mov
andb
push
pop
inc
cmp
sub
std
jne
jecxz
inc
mov
lds
popf
inc
aas
adc
movsl
ds
xchg
inc
adc
push
lret
cmpsb
mov
dec
testl
push
fsubr
iret
jmp
fcomi
les
push
mov
jp
or
cmpsb
hlt
mov
push
leave
xor
movsl
cwtl
sub
aaa
jle
and
sahf
jmp
sub
outsl
arpl
andps
xchg
int3
cmp
xor
xor
adc
dec
sbb
mov
outsl
push
in
inc
adc
pusha
pop
mov
cltd
adc
popf
orb
cltd
test
adc
adc
clc
push
mov
mov
jp
sbb
mov
push
mov
loop
xlat
test
pop
loop
pop
adc
mov
jmp
mov
xchg
rolb
out
popf
and
mov
pushf
jmp
push
sbb
push
push
movsb
jmp
mov
rclb
mov
outsl
xor
mov
push
xchg
pop
ljmp
pushf
loop
xor
mov
cmp
movsb
rorl
cmp
xor
lea
shl
adc
xchg
push
adc
sub
xchg
jns
lcall
dec
push
fdivp
incl
jo
xor
inc
fwait
xor
push
cmp
cmpsl
out
testl
ljmp
and
data16
shrl
cmp
addr16
push
mov
lahf
cmp
mov
pop
popa
cmpsb
cmpsb
jmp
sub
mov
or
lods
jmp
xchg
inc
insl
fists
stos
in
fidivrs
push
mov
ss
inc
sbb
mov
xchg
xor
add
add
xchg
push
mov
xchg
and
outsl
mov
jg
aad
in
push
pop
or
movsb
mov
add
pop
xor
iret
cmp
and
push
popa
int3
jle
mov
mov
sub
hlt
sbb
movsl
lcall
sub
push
loope
test
jl
cmp
fyl2x
cmp
out
mov
stc
push
mov
sub
out
in
adc
orl
mov
nop
cmovbe
popa
pop
pop
leave
movsl
icebp
in
cli
pop
sahf
xchg
dec
stc
out
nop
push
sbb
inc
sub
roll
xor
jbe
insl
mov
add
shl
sahf
adc
test
les
bound
out
orl
adcl
inc
pop
lock
int3
xor
or
adc
std
int3
cmp
add
in
sub
push
mov
mov
je
push
inc
lods
nop
out
shlb
ss
test
stos
in
movsl
push
cmp
das
mov
and
gs
push
int
fsubl
pushf
jno
or
jl
iret
xchg
lods
add
sub
movsl
repz
fimuls
arpl
cmpsl
fwait
insb
inc
or
mov
int3
cmp
fldenv
xlat
call
jl
arpl
pop
mov
fcoms
fmull
push
xchg
xlat
out
jmp
or
jmp
dec
add
lock
popf
or
loop
mov
sbb
dec
or
icebp
mov
mov
ljmp
push
enter
mov
pop
jg
pushf
add
mov
pop
out
stos
jmp
dec
cmp
inc
inc
imul
lods
lods
fists
dec
jp
ficompl
push
dec
pop
pop
mov
jmp
fld
cld
pop
shll
xorb
fists
sub
and
loop
cmp
pop
movsb
pushf
or
mov
shl
dec
add
push
mov
sub
cmc
and
jnp
jg
test
call
aad
add
pop
mov
mov
enter
test
push
testb
insb
pop
fcmovu
lods
shl
sbb
lds
pop
sub
cmp
loop
cltd
jle
xchg
inc
mov
dec
xchg
or
sub
jns,pt
imul
add
mov
jmp
cmc
fs
or
xor
add
push
loopne
stos
xchg
imul
mov
xchg
fstpt
out
and
sub
lret
repnz
roll
add
pop
mov
lock
stos
pushf
cmpsb
in
sub
adc
push
aas
jecxz
cmp
mov
xchg
pop
jp
stos
jl
xchg
js
rorl
mov
enter
jl
mov
les
test
cmp
iret
add
pop
cmp
pusha
xchg
adc
inc
cmp
jae
mov
lds
add
stos
adc
outsb
insb
in
fadd
mov
xchg
les
in
sub
and
je
in
sarb
movsl
or
imul
mov
cmp
cmp
stos
jle
ss
or
dec
push
ljmp
xor
icebp
imulb
add
push
inc
inc
daa
cwtl
ja
jo
hlt
jmp
cmp
pop
rcrb
stc
xchg
stc
pop
jmp
rep
jno
fs
lcall
xchg
stos
loopne
lds
movsb
push
add
sbb
cmp
fcoms
shll
sub
cmc
mov
mov
roll
fs
js
leave
push
pop
repnz
scas
sbb
test
out
stc
repnz
jnp
jne
sbb
in
shlb
xchg
aas
lea
call
mov
add
xlat
fnstcw
xchg
aas
and
test
sbb
cmp
out
sub
sub
call
fwait
rcl
imul
loope
or
pop
enter
aas
mov
pusha
es
inc
dec
dec
or
movsl
push
inc
xor
fiadds
add
orl
rcrl
adc
ror
jl
out
inc
mov
repnz
clc
adc
out
pop
adc
xor
push
mov
mov
cltd
and
ret
push
addr16
daa
jo
leave
loop
mov
push
push
jg
jae
sbb
and
dec
adc
sbb
xchg
dec
test
icebp
mov
arpl
mov
addr16
out
mov
sahf
or
ja
sarl
or
xor
enter
dec
xlat
adc
imul
push
inc
fucomi
or
pop
test
frstor
push
push
cld
mov
pop
addl
mov
pushf
lret
mov
xchg
fcomi
int
cli
jbe
jb
mov
jmp
push
mov
inc
stc
outsb
and
or
xor
loopne
mov
xchg
xor
xchg
negb
pop
insb
cs
cmc
xchg
cmpsb
daa
in
mov
lods
jp
dec
repnz
insl
jb
xor
cmp
sbb
rolb
mov
cmp
pushf
xchg
out
sti
test
iret
addr16
lret
add
jne
nop
sbb
in
in
jecxz
cwtl
outsb
xor
mov
daa
inc
call
addl
dec
fnstcw
xchg
inc
add
sbb
push
sbb
dec
imul
scas
test
loop
loope
xchg
std
or
cmp
call
scas
adc
or
mov
sahf
sub
cmc
and
inc
loop
jmp
into
mov
sbb
jne
gs
inc
mov
xchg
jb
rol
jnp
jne
sub
and
lahf
je
inc
add
sub
mov
add
add
sub
push
add
sbb
push
xor
cmc
fcoms
sub
aaa
int3
into
jl
sub
repnz
out
out
jns
xor
popa
ljmp
rorl
es
je
sub
xlat
lock
cmp
dec
popa
pop
mov
inc
scas
loop
mov
jge
insl
or
aaa
popa
jnp
or
imul
sub
inc
pushfw
mov
insl
mov
xor
movsb
push
mov
int3
push
loopne
mov
into
mov
je
dec
adc
sbb
rorb
lcall
mov
cmpsl
das
inc
es
push
subl
fbstp
bound
sti
jge
mov
call
fstps
push
loope
cmp
sub
xcrypt-ctr
cmpsl
fimuls
gs
in
notl
pushf
and
es
rorb
xor
sub
xor
mov
cmp
shrl
push
sbb
and
cwtl
pusha
push
cmp
push
mov
call
es
mov
inc
ja
xor
adc
leave
je
mov
fildl
sub
out
adc
sbb
mov
test
mov
scas
sub
push
xor
fdivp
inc
negb
clc
into
clc
cld
xchg
and
adc
cmp
sarl
xor
repnz
js
xchg
adc
pop
or
insl
aad
dec
xchg
jno
dec
dec
sahf
xchg
pop
cli
dec
and
jecxz
jle
bound
cwtl
add
dec
aas
inc
sahf
inc
xchg
xlat
repz
and
fldl
mov
mov
cmp
call
fst
push
into
jecxz
ds
add
adc
lods
popf
dec
popl
sahf
out
xchg
fs
shll
push
out
aaa
fsubrs
mov
jecxz
repz
mov
mov
outsl
sub
dec
xchg
pushf
pop
and
das
mov
pop
je
repnz
mov
add
lods
mov
adc
mov
xchg
jle
mov
cmc
mov
clc
or
outsl
sub
jo
stc
popa
and
pop
dec
ljmp
push
lret
adc
mov
pop
push
ret
stos
jge
je
jl
sub
sbbl
movsb
insl
cmp
dec
push
das
adc
cmp
adc
push
mov
push
or
push
push
xchg
out
flds
scas
cmp
in
push
fisubl
or
jmp
mov
mov
xchg
jg
std
xchg
mov
adc
push
out
sbb
or
add
sbb
dec
push
jg
vhsubps
pusha
fisttpll
xchg
xchg
xorb
push
xchg
mov
std
pop
push
inc
and
mov
jb
jmp
sbb
sbb
mov
int3
lea
flds
xlat
nop
pop
pop
mov
enter
mov
inc
sbb
xchg
push
or
xorb
movsl
sbb
andb
xor
int3
int3
xchg
loop
les
icebp
cli
mov
mov
inc
aad
jge
out
jp
jge
pop
jbe
xchg
inc
inc
cs
aaa
pusha
movsb
jl
pop
lfs
inc
roll
cli
mov
mov
sub
jbe
rcll
in
js
xor
das
aad
xor
icebp
cmp
icebp
addr16
insb
pusha
loop
decb
out
fsubl
jo
ss
sub
sub
sub
mov
pop
pop
push
in
mov
xchg
lods
or
imul
xor
push
cli
imul
adc
in
push
aam
imul
popa
add
or
pop
push
in
pop
aas
out
outsb
stos
sbb
mov
fmul
repnz
cmpsb
sahf
pushf
sti
xchg
pop
jae
cmp
adc
add
shr
cmp
icebp
jae
popa
sub
inc
sub
mov
mov
cmp
add
xchg
addr16
outsb
pop
jo
dec
mov
test
imul
out
clc
pop
dec
cwtl
and
push
sbb
or
fwait
cmp
fistl
xor
lods
ret
in
cmp
adc
mov
aam
xchg
fxam
push
mov
cld
not
mov
ss
adc
cmp
pop
pop
adc
inc
cmp
mov
lahf
popl
mov
jp
mov
xlat
push
or
clc
mulb
mov
out
inc
mov
dec
push
les
icebp
jge
mov
aam
inc
add
mov
or
pop
push
push
pop
test
scas
shll
add
adc
cs
mov
bound
jg
mov
xor
sbb
pop
inc
sbb
icebp
mov
adc
dec
cltd
fadds
adc
sbb
and
movsb
fs
adc
sbb
dec
inc
push
stc
pusha
push
mov
push
hlt
sarb
xor
sub
sub
pop
dec
pop
sbb
js
or
xor
mov
data16
in
xor
pop
push
ret
outsl
movsl
adc
mov
dec
add
pop
cmp
and
dec
aam
inc
sub
jne
dec
sti
loopne
fisubrl
out
push
dec
push
mov
lods
push
inc
and
pushf
cmpsb
jmp
xchg
fsubl
cld
aaa
loop
push
sub
shrl
cmpb
inc
out
or
mov
in
push
movsl
fcmovu
lret
fsubrp
jle
cmp
cltd
fsubr
pop
out
mov
fwait
sub
ljmp
outsl
lcall
int
and
sub
xor
fmulp
imul
mov
xor
aaa
sub
and
arpl
aaa
xor
or
jl
sbb
pop
bnd
lahf
mov
mov
lds
sarl
subl
or
pop
cltd
jg
jecxz
aam
cli
es
cs
xchg
and
stc
bound
out
push
int
mov
ret
push
mov
sbb
lret
lcall
enter
pop
mov
clc
dec
aaa
cmc
in
pop
push
in
test
jb
andb
add
mov
sub
ret
or
inc
icebp
jge
dec
dec
ss
verr
sbb
sbb
leave
inc
js
lds
jns
jb
mov
sti
push
pop
jle
stos
xor
fnsave
lret
les
enter
ljmp
or
or
mov
loope
int3
add
fmuls
cmp
pop
xor
adc
and
outsl
dec
xchg
int
movsl
je
sbb
jnp
dec
ss
movsb
aad
jmp
jge
scas
sbb
pop
push
out
jle
dec
add
cmc
shll
mov
mov
pushf
push
lret
mov
div
loop
mov
jmp
or
mov
add
mov
push
xlat
aas
push
and
fmull
mov
add
inc
imul
push
add
insb
add
out
fcoml
dec
adc
mov
mov
mov
insb
outsl
mov
mov
xchg
cmp
outsl
jg
xchg
nop
xchg
fucompp
inc
pop
cmpsl
cli
int
cwtl
arpl
adc
out
and
push
lods
mov
mov
or
pop
pop
fbstp
ror
shlb
xchg
insl
dec
cmpsl
push
mov
sbb
lahf
xor
in
and
addr16
fisubs
mov
hlt
icebp
movsb
inc
fwait
sub
popf
and
sbb
ret
or
mov
cmp
out
insl
mov
cwtl
sub
adc
jp
inc
adc
adc
mov
sub
inc
mov
xchg
enter
sbb
jns
mov
leave
and
out
pop
out
mov
push
in
jle
or
jg
mov
cltd
jl
mov
mov
push
cmp
pop
mov
or
pushf
dec
mov
orb
dec
mov
mov
aad
inc
fcomi
ficoms
sarl
adc
sub
sahf
imul
add
jo
sub
push
outsb
mov
mov
xlat
xchg
mov
data16
and
jns
pusha
pop
lahf
mov
rclb
jp
mov
ffree
addr16
or
cli
push
movb
adc
int
and
pop
out
sbbl
lds
mov
test
jne
xor
dec
outsl
add
repnz
push
clc
out
notb
loope
rcl
mov
roll
push
sbb
mov
xor
out
mov
mov
mov
dec
test
das
adc
mov
sub
mov
sub
mov
adcl
cs
mov
fucomp
or
pop
xchg
mov
pop
stos
test
xor
ljmp
in
push
mov
mov
pop
cld
sbb
loopne
addr16
xor
idiv
mov
outsl
mov
fcmovnb
test
jnp
cmp
fs
mov
inc
add
and
cmp
mov
inc
aaa
ja
mov
sub
pop
inc
shr
adc
push
pushf
cmp
fcoml
sub
nop
lds
pop
pop
push
sarl
stc
mov
mov
jecxz
je
jmp
xlat
sbb
add
inc
mov
call
xor
dec
or
mov
mov
xchg
jo
mov
mov
xor
fidivrl
rclb
out
int
pop
movsl
clc
add
mov
andl
mov
andb
push
xor
add
pushf
inc
push
mov
sub
dec
popa
test
outsl
ljmp
scas
aaa
cmp
shl
stc
cmpb
xchg
stc
insl
rclb
outsb
mov
lods
es
shll
lods
testb
leave
jl
repnz
add
dec
std
scas
lods
mov
lahf
divl
aas
aas
cmp
stos
fs
sti
inc
and
daa
add
inc
scas
inc
xor
ja
mov
adc
cmpsb
and
dec
sbb
and
pop
pop
popa
jns
ds
dec
mov
fsubrl
and
jbe
mov
dec
stos
xchg
xchg
outsl
scas
push
sbb
cmp
je
cmovne
sub
orb
imul
pop
xchg
xor
loopne
jne
icebp
xchg
inc
lods
inc
je
mov
jmp
ja
addr16
daa
xlat
and
pop
push
lods
pop
dec
stc
mov
mov
jae
xchg
call
repz
mov
rcrl
dec
mulb
lds
outsl
test
adc
push
iret
or
or
pop
test
cmc
push
mov
out
sub
push
mov
add
stos
rorl
dec
mov
mov
dec
cmp
jg
popa
add
push
pop
add
sbb
outsl
int3
pop
test
mov
inc
inc
outsl
sbb
push
out
adc
sbb
xadd
jmp
lahf
cltd
or
cli
jge
out
fldcw
push
shlb
loopne
dec
insb
push
subl
xor
scas
jb
jle
fdivs
hlt
lods
cmc
inc
cmc
jmp
dec
test
aaa
jns
ret
fdivl
mov
push
push
dec
cs
fcompl
test
pop
into
cmp
orb
jae
imul
add
dec
mov
and
mov
sub
dec
int
sub
rorl
sbb
mov
sbb
in
mov
xor
mov
push
xor
fsubr
lret
movsl
in
lea
mov
outsl
adc
cmpsl
lods
or
outsl
repnz
out
fbld
mov
ljmp
lahf
cli
dec
aaa
stos
mov
pop
mov
fwait
add
divb
push
adcb
data16
shll
mov
into
int3
xchg
add
sahf
dec
leave
xchg
lret
sbb
ljmp
push
adc
push
pop
inc
ljmp
movsb
cld
pop
orb
mov
in
or
icebp
xor
mov
mov
xchg
jae
mov
cmp
in
xchg
push
int
outsl
mov
bound
jo
cltd
cld
sbb
aad
icebp
std
jg
out
rclb
adc
or
stc
inc
xlat
popf
xor
adc
fsubl
es
inc
cltd
mov
xchg
cltd
mulb
pop
cmp
cmp
sub
aad
sub
idivb
sti
mov
xchg
xor
dec
pop
pop
je
lds
mov
in
rorb
cmpsb
imul
push
rorb
mov
mov
cmpsb
push
xchg
pop
pop
cmp
fsts
sbb
repz
sbb
jb
mov
in
add
outsb
lock
out
rcl
jge
ficoms
jns
inc
mov
or
addr16
mov
jb
and
jge
call
out
fwait
in
hlt
aaa
push
cmp
out
ret
in
mov
pop
mov
jl
sahf
outsl
mov
and
int3
cmpsb
jl
mull
outsb
lds
in
mov
test
jle
sub
mov
fistpll
fbld
mov
fdivr
add
and
or
inc
out
outsb
je
scas
push
jno
out
cmove
fs
jge
sbb
adc
sbb
ljmp
push
pop
jmp
and
pop
shlb
loopne
fiadds
lret
pop
lcall
test
sbb
aas
push
into
arpl
push
arpl
push
int
inc
xlat
aas
sbb
lods
outsl
ljmp
or
ja
dec
das
inc
push
xor
sahf
inc
adc
jl
push
push
mulb
xchg
out
mov
xchg
lcall
mov
mov
lods
sub
xchg
adc
push
jmp
movsbl
shrb
fisttps
daa
add
ljmp
sub
leave
loop,pn
jnp
add
mov
sbb
dec
jo
mov
wrmsr
lret
jge
out
ds
inc
or
or
test
sub
fisubl
int3
cwtl
lret
daa
xchg
int3
sbb
sahf
call
push
je
cmp
and
hlt
pop
repz
popa
pusha
xor
xchg
xor
inc
and
ss
enter
cmp
mov
dec
adc
add
pop
test
mov
lcall
xor
add
loopne
ss
add
pop
in
push
outsb
maskmovq
testl
mov
or
jnp
testb
mov
mov
or
xchg
aad
in
lods
ljmp
xor
mov
dec
mov
scas
and
loopne
mov
and
aad
mov
into
loope
fiaddl
and
sub
outsl
ja
ljmp
movsl
mov
insl
pop
ss
leave
dec
add
aaa
pop
in
outsb
and
fdiv
mov
adc
in
push
pop
adc
mov
pushf
shl
xor
lea
dec
cmp
mov
movsb
iret
mov
sbb
mov
inc
cli
insl
test
das
xchg
fwait
push
lock
mov
test
sbb
in
lock
xor
fadd
mov
ds
insl
dec
push
lods
test
testl
sbb
push
xchg
jg
jmp
insl
add
dec
add
lahf
cwtl
subb
push
jmp
and
or
push
movsb
adc
jl
mov
sbb
ja
scas
add
popf
inc
rol
fbld
cmpsb
idivb
cld
enter
popa
sbb
jmp
xchg
dec
inc
mov
push
mov
xor
jmp
jmp
stos
and
movsb
sbb
dec
out
in
shrb
push
dec
jp
icebp
cmp
fldcw
outsb
iret
arpl
mov
adc
or
das
fcoms
addr16
pop
pop
nop
jmp
sub
dec
loop
add
outsl
lret
clc
clc
dec
xchg
call
sbb
pop
or
outsl
xor
iret
fiaddl
mov
outsl
imul
popa
subb
pop
cmp
pop
popa
ret
mov
lods
jns
repnz
pop
pop
paddsw
jmp
lcall
dec
aas
mov
hlt
cmpsb
push
mov
xorl
out
cmp
push
frstor
scas
cwtl
loope
fsubl
in
iret
les
out
push
cmpsl
test
cmp
lea
mov
mov
pop
enter
mov
pop
cmp
mov
imul
cmc
cmp
inc
and
mov
repz
les
fxrstor
fdivrl
ss
cmp
jge
repnz
sub
sub
mov
adc
add
loope
mulb
dec
ds
in
mov
add
dec
movl
idiv
inc
jmp
sbb
jnp
addr16
jle
scas
jecxz
push
mov
aas
mov
sub
cmp
cmp
or
mov
shr
dec
add
cli
sbb
test
xchg
cli
xchg
push
mov
bound
sub
mov
adc
fmul
xlat
dec
and
push
pop
adc
mov
loope
cmpsl
lock
sti
mov
and
pop
pop
inc
jbe
mov
inc
push
mov
cli
and
lds
pop
sti
dec
dec
dec
adc
dec
cmp
or
cltd
inc
and
sub
shr
mov
arpl
jp
bound
notl
push
pop
xor
adc
fwait
pop
pop
pop
pop
or
ret
mov
cwtl
mov
and
mov
repnz
cwtl
hlt
pop
jb
ja
lret
and
and
in
jne
int
add
sub
xchg
scas
inc
mov
ljmp
push
in
rolb
ret
cmp
or
pop
mov
aad
pop
mov
repz
cli
jge
mov
lcall
imul
aaa
cmp
out
sbb
pop
insb
movl
popa
nop
ret
scas
aaa
cmpsb
insl
jmp
imul
pop
push
xchg
arpl
sbb
fimuls
mulb
shl
imul
addl
mov
sub
or
jg
lret
iret
push
inc
push
mov
xor
xlat
mov
aaa
scas
mov
add
mov
dec
imul
pusha
jp
test
push
mov
out
mov
add
add
and
hlt
imul
fcoms
stos
aas
out
push
jns
mov
rorb
dec
shll
jo
mov
pop
xor
mov
add
push
fimuls
adc
repnz
dec
xor
cmpsl
pop
xor
aaa
push
out
fs
fwait
jns
pop
stos
vmovups
cmp
ja
das
lret
rclb
or
or
fiaddl
out
xor
cwtl
sbb
adc
push
pop
push
sub
mov
and
sub
ds
ficomps
sbb
or
or
loope
or
push
cltd
ja
ja
adc
mov
lods
push
xchg
push
cmpsl
lret
mov
xorb
dec
or
xchg
dec
lahf
pop
loop
je
cs
flds
mov
cmp
mull
stos
inc
addr16
mov
subl
inc
fsubrs
fstpl
xchg
xlat
sbb
arpl
jbe
lahf
mov
mov
push
loop
add
daa
xchg
push
shl
lcall
in
or
dec
sti
cltd
mov
inc
pop
adc
lahf
aam
xor
cli
sbb
imul
mov
sbb
in
je
jne
xor
cs
sahf
xchg
fcomps
mov
in
movsb
cli
mov
hlt
inc
addl
mov
cmpsl
and
pusha
shll
js
adc
pop
clc
hlt
rol
jno
unpcklps
imull
addl
mov
enter
inc
jae
xchg
inc
and
cmp
mov
icebp
imul
movsl
test
push
fucomip
rolb
sbb
addb
dec
mov
inc
sub
cltd
arpl
in
lahf
xchg
sub
scas
xor
mov
inc
es
pop
pop
inc
iret
sbb
ret
xchg
gs
je
jmp
es
loopne
fstp
mov
aad
push
cmpsb
jno
jg
imul
ja
jne
flds
jle
push
cmpps
stc
fidivs
sbb
and
lret
and
fdivl
mov
mov
push
fldcw
int
sbb
push
fs
in
ror
inc
imul
pop
jnp
push
sub
or
data16
or
pop
mov
and
mov
pop
cmp
les
aad
inc
mov
ret
test
pop
jae
and
dec
inc
jb
sahf
and
loop
clc
xchg
xchg
xor
fdivr
pop
sbb
adc
je
jne
imul
flds
fs
std
adc
leave
addb
lock
lds
aas
push
je,pn
cmpsb
jp
mov
xchg
sub
rclb
into
jle
jg
or
loop
push
sahf
shrb
scas
pop
add
add
push
and
in
add
push
popf
lea
or
orl
cmp
and
pop
sbb
fildll
gs
jle
popf
push
dec
mov
or
dec
sbbl
jl
imul
xor
out
adc
ret
push
pop
mov
out
ret
sub
mov
cmp
je
pusha
movntq
adc
sbb
ss
or
sbb
add
mov
mov
mov
mov
jb
jg
outsb
or
cmp
cmpsl
and
mov
and
out
divb
movsb
cmp
jecxz
mov
mov
and
sbb
mov
sbb
cltd
bound
push
mov
emms
shll
xlat
fdivl
add
jne
cmp
xchg
ljmp
int3
jne
sbb
test
insl
mov
ror
or
lock
aad
sarl
cld
and
pop
cmpsl
or
jmp
sahf
ds
mov
in
cmpsb
cmp
lret
popf
inc
popa
pop
fdivs
setne
stos
xchg
icebp
das
sahf
es
scas
popa
pop
mov
lcall
popa
mov
sbb
cmp
xchg
xor
or
stc
fsubl
sbb
loope
imul
daa
lret
and
cwtl
sbb
out
out
repz
aaa
ret
ss
mov
aas
lret
mov
ds
sub
leave
rsm
inc
iret
add
or
test
sahf
inc
adc
push
cli
xchg
ds
mov
pop
push
mov
js
pop
push
outsb
mov
fstl
mov
lods
frstor
mov
mov
lods
lods
or
jnp
jmp
pushf
mov
ljmp
pop
rorb
xchg
int3
mov
fsubs
int3
dec
test
movl
cmp
or
stc
stos
insb
mov
shl
sarl
pop
out
xchg
or
sub
aam
dec
sti
add
rcl
dec
jecxz
test
inc
out
popf
aad
mov
push
add
stos
loopne
sarl
adc
int3
pop
cmc
xor
dec
sti
jae
pop
jmp
outsb
int
fidivs
adc
fdivs
xor
sub
or
imul
js
inc
into
add
push
fsubp
inc
sbb
mov
rcrl
divl
lret
jbe
lret
int
sub
xchg
pop
je
in
mov
mov
cmp
std
sbb
push
lret
in
cmp
cld
pop
jmp
xor
hlt
pop
push
push
scas
jns
xor
pop
jge
bound
sbb
inc
adc
scas
mov
pop
iret
mov
cmp
lods
adc
mov
out
and
inc
shlb
lret
or
fcmovb
divl
pop
jp
cld
push
cmp
mov
in
aas
cmpsl
imul
pop
sahf
mov
and
push
adc
in
sbb
inc
push
test
dec
insb
fwait
out
int
fsub
stos
pop
cmpsb
mov
pop
lret
sub
icebp
jmp
xor
aam
dec
mov
into
les
and
sub
push
js
push
adc
mov
int
jo
dec
xor
sbb
fstpl
das
call
lcall
add
pop
xchg
stos
pop
test
dec
lahf
cmp
inc
insb
pop
lahf
mov
mov
cmpsl
sbb
out
out
pop
in
xor
xchg
outsl
mov
cmp
imul
insl
push
xchg
push
sbb
rcl
rorl
je
sbb
sbb
mov
add
and
inc
mov
mov
sub
popf
and
sarb
jg
aaa
ret
and
lcall
in
cmc
sbb
data16
dec
lock
dec
jae
xchg
cmp
cmpsb
inc
es
notb
adc
jle
mov
mov
mul
and
xchg
pop
and
pop
push
addr16
dec
pop
push
je
mov
inc
mov
adc
add
inc
lahf
and
push
xor
pop
int
adcb
xor
push
fimuls
xchg
popf
arpl
std
mov
in
add
test
dec
int3
fisttps
lods
das
jns
ret
or
xor
adc
inc
sub
xchg
imul
mov
jne
add
cwtl
aaa
repz
fmuls
push
dec
adc
mov
imul
and
bound
xor
cwtl
xchg
xor
cmc
sti
test
frstor
ss
clc
dec
or
inc
aaa
fidivl
insl
out
xor
pop
mov
fwait
int
xor
xor
in
adc
add
test
lret
scas
loopne
adc
fisubs
jp
popa
and
sub
lods
xor
out
mov
jo
jmp
pop
sub
pop
dec
pushf
stos
popf
sub
or
push
lcall
fldt
add
out
jns
pop
fwait
lds
xchg
push
jle
mov
sbb
out
rol
je
in
bound
in
xchg
push
mov
stos
lea
aad
mov
loop
pop
jne
dec
sar
sub
sub
test
mov
cmc
xor
push
leave
sub
or
int
ficompl
cmp
test
adc
and
hlt
fsubrl
ja
sub
push
stos
jo
dec
enter
int
adc
mov
popa
adc
cli
mov
and
mov
ret
fs
cld
insb
loop
sub
adc
subb
lds
es
add
cltd
cs
dec
xchg
fwait
int
int
lret
adc
sbb
iret
sbb
ss
pop
lcall
testl
addb
or
mov
mov
adc
cmp
adc
jae
push
into
insb
dec
sarl
mov
fdivrl
cmpsb
lods
scas
xorb
test
icebp
nop
bound
test
das
mov
lea
ljmp
xchg
dec
stos
sbb
xchg
sub
and
sarb
das
mov
inc
test
sahf
cwtl
mov
sub
xor
scas
or
pushw
ljmp
sbb
mov
xor
xchg
mov
or
jns
ror
fcoms
lea
push
xchg
xlat
ds
roll
fdivrp
push
add
dec
dec
int3
subl
jg
inc
adc
sti
in
mov
and
or
jo
addr16
sahf
daa
pop
or
clc
pop
cmpsl
mov
mov
shlb
bound
pop
std
mov
sbb
push
int3
ret
addl
jg
push
sbb
push
out
pop
cli
adc
mov
xchg
sbb
aam
test
repnz
and
pop
cld
pop
insb
fsubs
sbb
mov
cs
stos
mov
aam
jb
and
add
pop
or
and
js
pushf
cmpsb
push
fsts
mov
outsl
xor
leave
stc
andl
ret
fwait
jge
mov
test
insl
fnstcw
fcmovnbe
xlat
mov
mov
sub
sbb
fcompl
repnz
dec
xor
mov
sbbl
inc
out
cmpl
sbb
fs
xchg
add
je
scas
fdivr
xchg
and
pop
or
fisttpl
sbb
mov
mov
xor
dec
sbb
mov
xor
jge
repnz
push
cltd
loop
rcl
scas
pushf
dec
cltd
clc
cmp
xor
out
cmc
adc
or
push
pop
jae
sarb
cld
add
dec
cmp
mov
push
leave
fdivrl
outsl
stc
repnz
mov
sub
lret
xchg
push
icebp
lods
dec
cmp
jecxz
popf
sub
sbb
popf
das
mov
div
adc
add
xor
negb
pushf
mov
pop
inc
xor
and
xlat
or
jmp
orl
cmpl
xor
cmpsl
adc
xchg
out
xchg
lcall
fildl
fnstsw
jae
pop
and
xor
sti
data16
in
xchg
push
inc
mov
push
mov
andl
sbb
movsb
hlt
push
xchg
xchg
jbe
add
sub
out
cmc
std
lods
adc
add
and
stos
sub
cmp
inc
stos
push
idivb
jnp
jmp
jno
lret
jno
test
cmp
nop
arpl
and
sbb
loopne
mov
xchg
ja
add
stos
int
les
movb
xchg
cmp
arpl
shlb
adc
ljmp
cld
testb
add
mov
insl
dec
pop
test
dec
inc
sti
inc
fldz
pop
xchg
add
movsb
int3
add
lock
add
mov
pusha
inc
lahf
out
inc
pop
iret
test
inc
inc
xchg
mov
jmp
pop
lret
pop
jl
dec
xor
sub
test
movsb
out
or
lret
les
pop
mov
pop
jb
push
cmpxchg
loopne
lods
in
incl
adc
movsb
mov
add
stos
adc
mov
scas
mov
adc
or
in
dec
add
lea
or
addr16
inc
fsubl
sub
mov
cli
and
je
in
movsl
cmp
inc
lods
jb
mov
mulb
jo
nop
jmp
mov
mov
xor
push
mov
cmp
int
and
fadd
inc
mov
lcall
mov
jge
lock
pop
jle
loope
and
sub
sar
and
scas
lock
negl
push
and
xchg
sub
aas
lock
clc
iret
mov
pop
pop
mov
jne
mov
rcll
hlt
scas
insl
jmp
add
mov
lcall
mov
sbb
ljmp
insb
fs
sbb
sbb
aaa
mov
push
xchg
sbb
inc
fimuls
or
push
repnz
mov
dec
mov
push
mov
clc
daa
insb
rcrb
adc
imul
push
lods
jl,pt
ja
pop
push
and
or
rcl
mov
in
lea
or
leave
loopne
mov
or
fimuls
shl
adc
fimull
fisttps
subl
jl
sahf
inc
and
leave
sub
imul
lcall
mov
push
stos
fsubp
in
lds
push
jmp
dec
push
ja
cmp
and
add
xor
sahf
push
notl
ss
lcall
test
add
daa
in
jns
loop
mov
stos
pop
es
jge
out
lock
xchg
adc
cld
inc
int3
cmp
push
fidivrs
test
lret
fs
das
sub
dec
xchg
aaa
inc
ret
add
fs
out
sbb
pop
pxor
in
pop
ror
sub
iret
or
shlb
pushf
out
fnstsw
jg
xchg
scas
hlt
sahf
jp
sti
call
adc
inc
mov
ret
xchg
and
adc
rcrb
cmp
adc
mov
xchg
out
pop
cmp
ret
pop
scas
fwait
out
jae
sub
xor
test
addl
lcall
or
outsl
loop
js
push
sahf
mov
cmpsl
mov
pop
call
fisubl
imul
arpl
lds
scas
pop
push
ss
or
cmp
and
loopne
xor
mov
push
mov
data16
dec
xor
loopne,pt
clc
mov
in
popf
inc
insl
mov
shl
repz
and
aas
pusha
pusha
xchg
add
xlat
sub
add
scas
test
or
sub
test
adc
inc
jno,pt
lcall
add
cmc
jmp
lret
push
je
psubw
xlat
lods
sbb
xchg
insl
adc
mov
pop
std
cmp
out
mov
stos
sbb
lret
cltd
repnz
sbb
fwait
test
daa
fnstsw
xchg
inc
fsubs
adc
xchg
xchg
mov
je
sub
mov
cmp
xchg
stos
shll
sbb
or
loopne
ret
add
sbb
push
xchg
test
cmc
inc
and
mov
mov
adc
fs
mov
icebp
dec
mov
mov
add
int
xor
or
cs
pop
xchg
sbb
or
pop
ret
mov
xor
into
outsl
dec
movsb
inc
adc
xchg
aaa
movsb
fsqrt
filds
xor
pop
or
aam
xchg
stc
out
pop
xorl
jle
inc
dec
jg
adc
push
test
xchg
int3
xor
dec
cld
push
cmc
or
xchg
pop
xor
add
sub
negl
outsl
pusha
adc
dec
cld
jmp
test
xor
test
gs
xor
idiv
add
xorb
lods
aaa
adc
mov
int3
jecxz
cmp
sbb
sbb
sbb
adc
cmp
or
or
dec
sti
fcmovnb
mov
adc
andb
push
ss
inc
ljmp
jg
in
rcl
pop
inc
out
fsubrs
push
xchg
inc
popf
fs
hlt
xchg
jnp
loope
sub
xor
jns
inc
mov
xchg
fists
add
ss
push
test
jp
hlt
movsl
xor
add
shlb
mov
scas
mov
sbb
aad
pop
jp
test
dec
test
dec
jecxz
aam
xor
mov
mov
jbe
sub
inc
sub
xorb
insl
mov
lret
out
pop
mov
sbb
decl
inc
jno
xor
mov
in
or
andl
in
mov
arpl
inc
push
dec
test
test
xchg
imul
outsl
adc
ljmp
adc
repnz
aas
fisubl
cmpb
loope
mov
inc
imul
pop
int
adc
jae
mov
mov
jnp
stos
nop
pop
jmp
add
dec
fwait
jl
into
cwtl
andl
movsb
outsl
adc
out
dec
in
std
jo
push
pop
inc
fwait
inc
add
hlt
loop
xchg
cmp
jmp
push
sbb
inc
add
imul
adcb
sbb
mov
push
dec
rcrl
shll
or
sbb
push
push
js
es
imul
dec
cmp
arpl
stos
adc
ljmp
loope
and
scas
xlat
out
decl
hlt
jp
add
xchg
clc
xor
xor
das
shll
and
sub
stos
shrl
push
mov
push
andb
add
es
pop
pop
inc
mov
push
div
call
lahf
fmuls
clc
inc
ret
pushf
inc
icebp
aam
lds
lret
cs
cmp
rolb
cmc
mov
dec
cwtl
js
sbb
movsl
dec
xchg
dec
icebp
lds
inc
cltd
mov
mov
lods
out
xchg
sbb
adc
mov
repnz
push
loopne
jmp
pop
insl
cld
mov
out
flds
inc
mov
jns
jbe
mov
mov
adc
sub
adc
push
mov
test
roll
sub
and
lcall
test
loope
lretw
xchg
add
incb
mov
inc
push
push
stc
pushf
rolb
iret
mov
and
out
nop
jg
jb
dec
push
out
xchg
jns
in
gs
sbb
mov
jmp
sub
inc
outsl
pop
add
mov
or
ljmp
jle
imul
ljmp
adc
dec
or
or
sahf
insl
inc
inc
mov
inc
js
pusha
out
jecxz
inc
les
mov
xchg
mov
mov
call
jge
xor
enter
push
mov
stos
pop
orl
ss
ljmp
jg
ss
xchg
aaa
adc
pop
fsts
pop
addb
add
or
or
loop
add
lret
popf
popa
js
aaa
mov
pop
mov
les
out
fucomip
jns
mov
cmpsb
dec
sbb
mov
shrl
inc
push
mov
push
scas
mov
jno
stos
std
push
fmul
jo
fdivs
repz
aas
es
mov
cmp
dec
fsubrs
xchg
jp
inc
jno
std
sti
sbb
hlt
fwait
jmp
lods
iret
ja
xchg
sub
push
dec
lahf
ja
add
pop
sbb
fildl
push
adc
ljmp
repnz
int3
hlt
xchg
pop
cltd
scas
out
int
inc
sbb
push
cmp
push
push
sbb
call
xchg
push
and
ret
mov
mov
pop
xchg
pop
enter
jno
loope
test
add
movsl
popa
fcoml
or
mov
stos
cld
add
pop
lods
ja
fisttpll
scas
and
lahf
sbb
mov
sbb
ja
stos
int3
sub
ret
add
test
fdivr
fstpt
push
inc
ret
pop
jbe
outsb
nop
mov
movsb
dec
add
adc
sub
bound
xor
dec
sbb
iret
xchg
fdivrl
cmpsl
mov
shlb
sub
jge
pushf
sbb
cmp
cmp
cmp
mov
je
dec
lods
xor
inc
push
mov
stos
or
mov
dec
cmp
aad
ljmp
jbe
loope
arpl
sub
orl
pop
sbb
dec
mov
cli
mov
js
push
adc
xchg
or
mov
cmpsb
test
scas
jb
sub
jl
xor
into
sbb
divb
or
pop
xchg
ja
iret
out
shrl
stos
pop
subb
scas
cmp
insb
inc
les
scas
xchg
rcl
push
dec
cmp
ds
jnp
cwtl
adc
out
fistl
push
retw
xor
adc
pop
fnsave
push
mov
movsb
lcall
mov
inc
cmpsb
test
jns
cmc
out
test
mov
cmp
dec
push
je
outsb
mov
jmp
push
lods
pushf
subb
xor
daa
and
mov
cli
lods
xchg
pushf
dec
inc
jnp
aas
or
mov
xor
les
pop
icebp
subl
or
or
cwtl
loopne
cs
sbb
push
stos
cmp
js
mov
in
pusha
out
pop
xor
stos
fisttpl
das
push
xchg
loope
std
dec
sub
test
int3
in
fldt
or
scas
cmp
and
cmp
in
inc
mov
add
scas
dec
icebp
pop
scas
in
arpl
mov
and
jg
dec
ror
fs
jne
mov
out
cmpsl
cmpsl
stc
jmp
lret
add
pop
mov
mov
mov
loop
cs
gs
subb
in
push
jecxz
fisubl
sub
stos
dec
sbb
call
sbb
sub
out
dec
es
cmpsb
stos
lds
ja
jbe
xchg
mov
fisubrl
inc
xor
sub
mov
jo
clc
fs
or
insl
outsb
inc
pop
enter
xchg
test
imul
dec
push
popa
test
sbb
push
adc
jmp
pop
sub
inc
push
ret
fiadds
fmull
sub
cmpsl
fidivl
nop
les
mov
jg
sbb
repz
mov
or
outsl
add
int
mov
mov
jno
mov
xchg
aas
mov
xchg
cmp
pop
xlat
loopne
pop
sbb
sbb
pushf
and
cmpsb
inc
push
lea
mov
or
cld
cmp
mov
and
aam
sub
or
and
push
lcall
mov
cmp
mov
imul
add
in
inc
adc
cld
test
dec
adc
fwait
sbb
lret
insl
stos
cmp
hlt
mov
jge
sub
dec
jp
sbb
pop
aas
xor
pop
pop
jl
and
addl
inc
jnp
xorl
cmpsb
imul
xchg
cltd
test
xor
xchg
jmp
push
inc
push
ret
cs
stc
lret
jp
les
cltd
aas
in
addb
cmpsb
mov
mov
cld
push
mov
xlat
sahf
loope
pop
test
add
int3
pop
pop
fucomi
jnp
jo
scas
rolb
jns
push
mov
mov
lahf
lods
or
mov
call
add
push
insb
int
push
cmp
out
test
sub
mov
cmp
or
outsl
lahf
cmp
jbe
mov
and
sarb
push
std
push
xchg
mov
mulsd
mov
lds
shlb
adc
stos
ret
dec
xchg
or
sub
nop
cmp
lahf
repnz
outsl
int3
rcrl
cltd
popa
ljmp
rolb
dec
push
loopne
push
fwait
inc
jbe
pushf
push
scas
test
stos
iret
sahf
push
lock
add
or
jo
adc
fcoml
jp
mov
jl
shll
inc
xchg
iret
dec
pusha
loopne
mov
sahf
cmp
into
mov
sbb
mov
lds
mov
incb
insb
xchg
pop
mov
sbb
or
mov
xor
xchg
insb
bound
mov
xchg
andb
lcall
movsl
pmulhw
mov
add
mov
dec
jecxz
mov
sbb
mov
mov
shll
pop
js
xchg
mov
sub
jl
fsubrs
sub
into
cmpsb
mov
add
fbld
dec
bound
rclb
cli
xchg
repz
inc
cmp
pusha
pusha
lcall
inc
shlb
imul
mov
mov
add
jae
in
testl
xor
sub
dec
mov
loopne
vucomiss
cmp
or
ret
cmp
xor
ret
mov
sahf
or
mov
cmpl
jns
test
cmp
xchg
leave
sbb
ret
dec
and
bound
dec
cwtl
inc
add
test
cmp
sub
lods
inc
aaa
stos
out
push
add
das
inc
imul
dec
ret
jne
or
jl
cmp
inc
or
aam
fisttps
aaa
or
xor
ss
mov
pop
mov
jae
xchg
mov
ljmp
cmp
lods
arpl
lea
mov
testb
shll
mov
mov
ljmp
iret
xchg
ja
scas
add
lds
enter
push
lods
cmp
mov
and
dec
pop
movsl
adc
fcmovnb
mov
fsts
xchg
inc
mov
adc
mov
mov
push
cwtl
dec
sbb
push
cmp
in
int3
jne
pop
pop
das
popa
pop
mov
out
out
lds
rcll
add
pop
xor
aaa
xor
fsubl
sub
dec
dec
xchg
mov
xchg
xlat
stc
push
aad
jne
sti
ds
mov
stc
or
insb
add
fistpl
psubd
negb
bound
xchg
mov
add
idivl
icebp
inc
mov
test
js
ds
adc
jl
cli
mov
clc
std
inc
pop
pop
repnz
mov
rclb
jns
icebp
bound
movsl
mov
out
adc
xor
outsl
lahf
and
daa
adc
ficomps
outsl
imul
ja
leave
shrl
push
adc
mov
or
xchg
and
mov
push
stos
sub
js
inc
push
mov
sub
jae
cmpsb
lcall
mov
pop
inc
sub
fcmovne
int
mov
fidivrs
dec
data16
cld
in
xor
mov
mov
sti
and
jb
outsb
xor
mov
adc
cld
call
push
mov
iret
andl
cmp
inc
cmp
int
in
xchg
test
and
outsb
lret
push
test
sub
or
mov
xchg
ja
dec
xchg
jnp
nop
inc
scas
ss
sbb
fcoml
lods
das
adc
inc
mov
mov
inc
repnz
out
cmp
dec
jg
xchg
dec
cmc
mov
psubsw
inc
outsb
xchg
fcoml
outsl
and
rcrb
dec
pop
movsl
out
mov
in
lcall
leave
sbb
push
xlat
or
add
lret
loop
sbb
jnp
aam
adc
in
adc
gs
jl
into
mov
sub
add
cmp
pop
ds
icebp
sbb
outsl
inc
dec
xor
add
push
or
jge
imul
cltd
insl
cmpsb
add
ret
repnz
xor
stc
mov
cs
clc
sub
cmp
mov
and
out
jle
mov
call
add
scas
sbb
addr16
cmp
xorb
cmp
ret
stc
test
sub
out
lahf
xchg
dec
shrl
jo
shll
pop
int
or
fistpll
inc
out
mov
shll
ds
aam
push
outsl
pop
inc
test
mov
xchg
sahf
aam
inc
and
jo
das
mov
das
ret
into
fstpt
add
adc
cltd
hlt
and
add
xor
in
scas
mov
adc
gs
adc
daa
insb
in
cld
jmp
mov
jbe
push
sbb
inc
or
fiadds
and
or
or
and
mov
fidivrs
cwtl
or
sar
and
mov
mov
add
imul
mov
dec
mov
aam
sbb
mov
cltd
imul
dec
mov
pop
repnz
or
call
xorl
xor
xchg
dec
jne
negl
mov
test
and
adc
push
fwait
loopne
nop
notb
sti
out
int
and
iret
sbb
pop
xchg
bound
cmp
jmp
xor
push
popf
cmp
sbb
imull
jge,pt
sbb
mov
addl
jp
adc
lods
ret
mov
out
cmp
dec
jno
out
jo
sub
cltd
pop
xor
popf
push
sub
mov
scas
mov
adc
sub
out
or
test
mov
and
push
sbbl
cld
loopne
test
pushf
imul
fimuls
lret
jp
call
jb
loop
adc
push
jg
dec
xchg
push
insl
mov
jge
mov
add
sbb
aad
iret
arpl
out
cmp
popa
inc
popa
adc
jbe
push
jecxz
aam
jb
es
sbb
dec
mov
xchg
cmp
shrl
call
jo
out
idiv
pop
adc
lods
fiadds
test
out
mov
ret
in
pop
cmp
in
adc
mov
movsl
fcompl
cmpsb
or
inc
call
jmp
jno
pop
xchg
cmpb
stos
into
in
mov
sti
nop
loop
lret
ds
lahf
stos
popa
add
mov
fbld
jge
insl
loop
repz
pop
and
jp
bound
test
adc
xchg
inc
iret
sbb
cwtl
xchg
and
push
pop
testb
dec
test
shl
ret
push
scas
xor
cmp
aaa
xchg
daa
and
scas
mov
and
or
test
inc
push
dec
stos
cmp
js
aaa
fists
pop
fisubl
dec
sbb
mov
dec
repz
inc
ja
inc
push
lret
pop
jmp
loop
pusha
push
ja
sub
mov
adc
sbb
icebp
out
enter
and
xchg
mov
jl
sbb
xchg
icebp
stc
loopne
fld
hlt
movsb
loopne
and
cli
pop
mov
dec
call
out
mov
or
cmp
mov
cmp
pop
add
sahf
pop
push
inc
int
inc
mov
subb
and
xchg
iret
add
xor
xor
insl
add
xchg
dec
ret
cwtl
add
popf
dec
mov
pop
mov
or
jo
push
imul
push
mov
mov
add
insl
push
lds
shl
imul
lahf
and
push
movsl
xchg
sbb
or
imul
mov
xor
or
mov
mov
loop
in
std
outsl
fists
stos
jb
xor
out
adc
cmp
into
in
inc
rcl
or
adcl
pop
cmp
or
jb
int
jnp
fdivrs
pop
flds
or
aam
lock
dec
dec
jbe
imul
lea
rclb
outsb
sub
scas
xor
or
pop
adc
mov
jle
imul
mov
pop
imulb
jge
dec
imul
mov
mov
pop
je
fs
dec
test
and
cmpsl
cmp
shll
dec
push
pop
imul
jae
sbb
in
inc
cwtl
scas
psrlq
inc
mov
mov
push
or
pop
mov
or
aam
jge
add
mov
and
sub
test
pusha
fnstsw
jl
in
mov
adc
or
in
mov
mov
xor
dec
into
pop
and
in
pop
mov
mov
mov
cmp
ret
std
neg
mov
mov
aam
jns
sub
hlt
mov
sub
lods
push
fldcw
and
sub
pusha
mov
sub
sub
nop
jecxz
and
dec
jns
popf
or
fiaddl
imul
cltd
data16
clc
leave
int
mov
clc
ret
push
add
sahf
addr16
add
clc
imul
pop
adc
dec
jge
out
sti
mov
js
stc
fs
fsts
cmp
push
pushf
xor
call
hlt
push
mov
loopne
mov
inc
or
out
jl
jg
sarb
mov
orps
cltd
mov
mov
test
sti
scas
xchg
adc
sub
push
fcoms
iret
stos
iret
lods
fsubr
push
cmp
sbb
fisubrs
mov
push
xchg
adc
call
cmp
ds
pop
imul
je
or
ret
aam
sub
ds
jge
in
stos
and
sbb
add
sbb
and
popa
mov
jae
jmp
adc
cwtl
fcmovnu
hlt
jne
mov
test
adc
in
pusha
into
inc
mov
sub
test
inc
cmpsb
shrl
rorb
mov
mov
push
outsl
popf
in
mov
repz
fstpl
mov
xor
jno
fdivs
fs
lcall
addr16
push
out
jno
dec
gs
sbb
nop
flds
mov
push
ficoms
push
adc
daa
mov
pop
mov
jge
pop
jnp
cwtl
sbb
push
mov
ret
xlat
lcall
lret
push
jp
xor
in
les
ss
ja
sbb
fldt
andb
daa
xlat
push
insb
jg
ficoml
mov
aas
cmpsb
loop
ss
popa
sub
sarl
push
mov
sahf
pushf
mov
mov
scas
inc
adc
gs
sbb
xchg
stos
pop
outsl
mov
pushf
adc
jle
cltd
std
in
inc
out
sbb
xchg
mov
aad
pop
mov
leave
fstps
jnp
shl
ljmp
clc
jecxz
repnz
mov
inc
cmp
loope
cmp
sbb
imul
call
lods
lods
or
pop
scas
aam
aad
movsl
push
pop
mov
push
mov
sbb
xchg
xor
in
lret
dec
push
hlt
jnp
mov
mov
les
xor
cmpsb
cmp
pop
sub
testl
adc
fcmovnu
mov
or
iret
mov
xchg
insb
sub
aaa
aas
xor
test
jle
adc
and
lea
stos
loop
dec
mov
inc
adc
testl
cmp
xchg
inc
and
mov
bound
mov
fxch
rcl
mov
inc
mov
mov
mov
jp
xchg
sub
push
mov
sub
and
repz
in
xchg
cmpb
push
fxam
adc
test
mov
mov
sub
push
mov
dec
jno
inc
adc
ret
sbb
mov
mov
mov
gs
in
xchg
push
pop
xchg
pop
je
jle
test
out
sbb
jae
mov
mov
and
cwtl
inc
cmpsl
loop
mov
fwait
outsl
adc
xchg
lahf
out
jmp
out
dec
into
mov
daa
je
aam
sarb
push
cmp
pusha
pop
cmc
and
lret
icebp
dec
jge
sbb
push
xor
and
inc
mov
cmp
push
pop
mov
pop
mov
loope
and
jbe
mov
inc
mov
aaa
mov
lds
push
lock
cmp
mov
int
and
movsl
mov
out
adcb
ljmp
mov
ja
push
fnstenv
mov
lods
xor
rol
xchg
dec
das
je
movsl
cmp
sarb
push
repnz
push
sub
pop
and
jg
cli
movsb
fwait
dec
es
out
mov
cmp
test
call
daa
cli
xlat
push
adc
mov
adc
repnz
call
idiv
fldenv
into
popa
or
lret
negb
mov
dec
push
sbb
mov
std
mov
mov
add
sbb
fisubrl
pushw
test
pop
movsb
lock
cmc
in
sub
movl
mov
sub
mov
in
mov
cld
dec
cmp
sbb
aam
pop
push
cld
push
xchg
mov
cmp
out
inc
fiaddl
call
pop
rorl
inc
dec
cmp
pop
xchg
jle
dec
mov
sub
adc
iret
inc
cmp
rcrl
adc
test
div
push
mov
addb
mov
lock
stos
scas
xor
mov
add
test
or
out
insl
sbbb
fcomps
inc
xchg
xchg
push
out
cmp
adc
pop
add
ja
jo
sub
insl
int3
mov
xchg
mov
jbe
cmpb
in
fidivs
add
mov
cld
pop
xor
imul
mov
push
and
daa
add
jbe
or
xor
lret
fwait
scas
jo
and
hlt
fcomps
xchg
ret
insl
insl
int3
lods
add
js
inc
mov
outsl
adc
xor
fdivrp
adc
testb
das
sub
adc
out
dec
ficoml
add
or
movsb
shrb
xchg
sbb
xor
movsb
sub
lret
xor
inc
cmp
lods
cmp
or
daa
xchg
test
adc
mov
fadds
jp
in
stos
xchg
pcmpeqd
js
icebp
inc
sbb
push
lds
fs
sub
iret
sub
or
xor
lods
or
cwtl
jmp
imul
fdiv
addr16
and
adc
or
jbe
mov
xchg
push
and
in
cmpsw
and
loopne
lock
add
xchg
cmp
dec
imul
je
outsl
int
cwtl
and
mov
jae
adc
out
jecxz
stos
test
in
fisttps
xchg
jne,pn
xchg
call
orl
fs
addr16
es
aad
sub
pushf
push
cmp
in
icebp
testl
loope
mov
xlat
rol
xor
out
xchg
sbb
mov
cmp
pop
sbb
cltd
jmp
add
adcb
xchg
xchg
cmc
sbb
gs
je
in
push
adc
or
cmp
dec
lcall
or
mov
movsb
push
scas
fwait
pop
push
sar
and
je
bnd
in
jbe
jno
test
xchg
dec
mov
shrl
pop
sub
es
pop
sti
out
popa
movb
mov
aaa
mov
adc
bound
loopne
dec
aas
mov
adc
pop
add
jmp
mov
mov
sbb
mov
pusha
je
pop
adc
fbstp
jmp
insl
pop
cmp
call
divb
pop
xchg
jmp
call
negl
cmp
jnp
fmull
or
es
in
cwtl
xchg
outsb
ret
mov
xchg
fdivrl
imul
add
mov
add
and
pushf
pop
lret
hlt
xor
test
adc
pusha
frstor
xchg
pushf
lods
jp
push
loopne
out
mov
dec
les
xchg
pop
ss
mov
pop
pop
pop
push
and
dec
shl
mov
push
rclb
and
sbb
mov
lahf
out
add
or
pop
repz
xchg
push
jecxz
aam
inc
out
push
xchg
getsec
cld
mov
pop
std
ljmp
frstor
aad
inc
cmp
xchg
addb
movsl
sub
cmp
insb
xchg
rorb
sbb
push
push
into
iret
or
and
stos
test
cli
sub
inc
xor
loop
push
pop
cltd
pusha
pusha
scas
mov
hlt
push
pop
and
pop
fdivl
sub
push
imul
test
js
cltd
ds
xchg
pop
ljmp
leave
scas
pusha
adc
nop
jne
imul
xchg
loopne
add
adc
mov
enter
rcrl
mov
mov
jle
pop
ret
sbb
rcl
jne
sub
loope
pop
pop
fdivl
imul
gs
int3
cmc
pop
sub
in
clc
cmp
xchg
add
sub
dec
xor
push
sahf
sub
adcb
or
and
rclb
add
jo
add
orl
or
test
lock
out
testw
sahf
mov
inc
rcr
pop
sbb
stos
dec
imul
das
mov
sbb
fdivl
push
dec
cmp
mov
nop
and
aad
or
xor
pop
pop
sbbl
shl
add
jmp
in
and
mov
push
sti
in
ret
stos
cwtl
addr16
outsl
js
fsubl
xchg
mov
hlt
js
dec
andl
sbb
fcomp
xchg
xor
and
inc
mov
mov
xchg
push
rolb
clc
push
rorb
outsl
inc
xor
pop
mov
push
push
stos
rep
inc
pusha
pop
sbb
pop
scas
repnz
out
aam
iret
mov
js
fdivr
loop
sbb
arpl
push
add
cmpsb
mov
cmp
or
mov
and
sbb
lods
mov
sbb
dec
and
sbb
cwtl
loope
ja
sbb
sub
xor
mov
jle
inc
mov
std
push
mov
and
loop
cltd
nop
push
ljmp
gs
mov
push
pushf
sbb
sub
add
cld
inc
xchg
push
mov
sahf
out
sub
or
loop
loop
jp
in
fcomp
rclb
mov
jle
mov
push
pop
int
xor
scas
mov
stc
lahf
lcall
xlat
dec
sub
jecxz
cltd
int3
jo
orl
pop
jne
mov
jle
stos
jl
push
push
or
xchg
cmc
js,pt
jle
call
push
sbb
push
stos
stos
or
adc
lea
mov
xor
std
pop
subb
cmp
xchg
push
jge
push
sub
sbb
popl
ret
movsb
and
mov
mov
mov
jp
mov
shl
pop
movsb
xchg
loope
cmp
fs
mov
pop
movsb
cltd
adc
lret
xchg
ret
fldl
push
sbb
xchg
xor
inc
jmp
addl
jge
outsb
cwtl
mov
scas
dec
je,pt
orb
clc
xchg
icebp
add
sub
jns
jg
enter
in
rolb
cmp
cmp
jecxz
and
cmp
sahf
and
aad
jbe
mov
push
xlat
inc
lahf
mov
cmp
shrb
dec
bound
fimull
fistpll
mov
jbe
xchg
or
lret
stc
mov
ds
jle
call
cmp
mov
jns
cwtl
adc
mov
inc
add
sbb
jle
mov
sub
shll
mov
cmpsb
or
fs
adc
lcall
xor
fwait
callw
fistpl
or
cmpb
gs
int
adc
dec
sub
lods
sbb
mov
sbb
push
mov
xchg
push
fisttpll
cmpsb
xchg
call
sub
mov
iret
or
mov
cmc
inc
xchg
sbb
outsb
in
repnz
out
mov
lret
jno
jecxz
or
mov
ljmp
pop
pop
out
dec
les
jno
or
sub
mov
inc
pop
jno
addr16
pushf
adc
xor
in
sbb
xchg
lret
jmp
int
jnp
fnstcw
jge
mov
push
outsl
into
hlt
jo
movsl
test
adc
cmp
mov
fscale
dec
cmp
lds
ljmp
xchg
shrb
pop
and
out
xchg
jno
daa
and
push
addr16
sub
mov
xchg
push
jg
aad
repnz
lods
es
lcall
popf
jnp
or
jae
mov
push
dec
lcall
push
addl
mov
xchg
negl
or
inc
cli
das
scas
xor
dec
ja
lds
xor
jbe
ret
leave
out
sbb
pop
dec
sub
cmp
xor
jne
sbb
mov
in
out
sti
rorl
xlat
mov
pop
hlt
int
mov
push
jne
ret
adc
mov
mov
cmp
in
mov
push
adc
sbb
and
inc
das
push
cmp
xchg
jmp
rclb
and
loop
jb
out
mov
sbb
push
mov
pop
inc
inc
leave
aam
jbe
pop
add
stos
add
in
test
inc
pminub
xchg
fcoms
dec
sub
cli
mov
out
stos
les
xor
push
xchg
lods
pop
faddp
sbb
dec
push
sbb
or
dec
cmpsb
mov
into
xor
xchg
xchg
mull
jge
and
xor
fdivrp
dec
mov
push
lcall
adc
mov
ds
pop
in
inc
leave
add
jbe
fwait
xor
ret
add
push
pop
data16
jns
into
lret
sahf
in
mov
push
daa
push
divb
sub
xchg
arpl
push
test
pop
mov
clc
hlt
adc
sbb
add
sti
lods
je
movsl
jno
cmc
jecxz
add
fcmovnbe
outsb
push
cmp
xor
cmpsb
daa
fcoms
pop
xchg
rcrl
imul
push
sbb
xor
out
in
loop
aad
xchg
cmc
and
out
and
sub
out
xor
cmpsb
aas
test
adc
jnp
out
xlat
rorb
insl
add
mov
scas
pop
fadds
mov
jno
cmp
ja
mov
ret
aaa
call
fwait
sbb
ss
mov
cmpl
incl
mov
call
push
out
sbb
mov
daa
mov
push
push
scas
mov
xor
mov
jne
pushf
jbe
adc
lods
dec
push
pop
dec
xor
pusha
int
fsubrl
test
xchg
sub
pop
adc
jl
add
mov
add
icebp
dec
mov
repz
push
inc
mov
mov
jb
and
mov
popa
shrb
lcall
push
pop
add
shll
sar
mov
cmp
jns
push
jecxz
rcr
aaa
xor
cmpsb
pop
inc
mov
xchg
pop
xchg
lds
popf
xchg
cltd
pop
popa
fsubrs
shll
inc
xor
in
cli
jmp
sbb
out
jl
pop
sbb
lret
pop
cld
lahf
in
jge
adc
and
cs
cmpsl
popf
into
inc
mov
jo
daa
mov
lock
dec
dec
cmc
cld
xor
lahf
inc
push
mov
sbb
clc
mov
ret
hlt
test
lods
jb
cmp
push
call
mov
sbb
stos
jno
imul
mov
setge
test
dec
mov
rep
sbb
insl
sarl
cs
mov
xlat
cmp
fmuls
pop
push
cmp
insb
cmp
shlb
add
int3
sub
das
addr16
call
lret
inc
sub
addb
fiaddl
sub
adc
push
out
cmp
mov
mov
lret
outsb
cmp
jmp
mov
mov
cmp
stc
dec
repnz
sbb
cmp
stos
out
mov
or
mov
xor
lock
mov
pop
push
leave
or
cmc
sub
lods
mov
sbb
and
or
in
leave
and
jmp
test
fucomp
xchg
xchg
call
subb
push
outsb
and
pop
cwtl
xlat
aam
xchg
xchg
cwtl
test
aam
sahf
das
popa
subl
ds
inc
jl
pushf
cmp
push
sbb
mov
cmpsl
and
push
jge
sbb
lds
jp
pop
call
icebp
ljmp
ds
ss
pop
fdivrs
mov
in
dec
jmp
rcrl
cld
repz
js
xlat
lods
xchg
adc
sbb
cmpsl
pop
icebp
lods
cmp
mov
ja
cli
pushf
xchg
orl
rol
sub
push
push
test
push
mov
mov
jo
mov
mov
out
mov
popa
cmc
ret
sti
sub
mov
addb
pop
xlat
xchg
fcoms
addl
or
and
inc
cmp
cmp
and
sub
arpl
jno
cmpb
xchg
stos
add
xchg
out
push
xorb
call
fs
xor
cwtl
adc
stos
movsb
xlat
test
and
mov
lods
or
test
xor
gs
xchg
outsb
inc
inc
adc
xchg
insb
shrb
mov
sbb
movsb
mov
mov
popl
ror
cli
dec
add
sub
mov
ss
lods
mov
orl
mov
cmp
lds
pushf
sub
shll
mov
lock
movsb
mov
inc
jmp
stos
pop
test
adc
notl
push
iret
mov
or
aaa
orl
imul
inc
pop
pop
mov
xor
sbb
and
xor
nop
inc
into
movb
popl
stc
adc
sahf
mov
pop
jge
dec
mov
mov
pop
rorl
add
int
mov
and
test
movsb
mov
xchg
sub
pop
sub
subl
pop
cmc
cpuid
mov
mov
add
outsl
adc
ja
cmpsl
gs
scas
pushf
or
xchg
pop
xchg
stos
cmpsl
test
cmp
popa
leave
ss
sub
xor
fisttps
mov
outsb
int
jo
sub
sub
and
ljmp
lock
jmp
lods
and
pop
pop
jecxz
dec
je
popf
jmp
mov
imul
pop
pop
pop
shr
stc
mov
add
add
pop
and
jbe
loopne
and
lret
push
insl
push
mov
mov
mov
std
jns
scas
pop
ljmp
fs
and
push
sti
cmp
outsb
and
clc
xor
insl
fildll
popf
cltd
lahf
pop
lea
pop
stc
mov
repnz
call
call
lahf
call
rcrb
jae
push
sub
dec
sub
push
pop
pop
enter
pop
out
inc
pop
mov
nop
jecxz
scas
rorl
xchg
rol
outsl
lcall
add
cmp
push
cld
dec
in
js
mov
jb
ret
scas
mov
insl
testl
lds
xchg
iret
inc
addr16
es
nop
jle
inc
xor
loope
mov
push
mov
sub
mov
push
and
mov
push
mov
mov
push
jle
cmp
dec
or
aad
sti
and
mov
pusha
mov
sbb
adc
pop
or
jp
dec
mov
push
insl
xchg
cmpl
sbb
das
out
mov
mov
push
and
sahf
loope
icebp
push
inc
add
ja
leave
les
pusha
xchg
and
rcrl
mov
jbe
xchg
cmpsb
xor
cmp
sub
cmp
in
fidivrs
in
popa
xchg
bound
push
xor
pusha
push
decb
mov
pop
nop
xor
ficoml
add
and
add
adc
negb
push
or
xchg
xlat
ja
jns
or
pop
in
repnz
insb
pusha
pop
or
lea
pusha
push
xor
lahf
outsb
xor
scas
adc
imulb
iret
mov
pop
stc
fildll
into
test
ret
movl
mov
test
lcall
mov
fisubs
lret
sbb
roll
xchg
jne
insb
ss
cmpsl
mov
nop
push
stc
cmp
push
sub
jecxz
sbb
and
mov
mov
pop
cmp
lahf
cwtl
xchg
mov
pop
mov
jge
and
test
mov
or
push
xor
or
gs
scas
js
movsl
out
pusha
insl
daa
jae
inc
cmp
mov
movsl
imul
sbb
inc
loopne
es
scas
cmpsl
pop
ljmp
addl
negb
fcmovnb
sbb
cli
bound
insl
sub
sub
cmp
cmp
and
mov
jle
movsl
mov
xlat
cmp
and
xchg
jg
push
push
inc
lcall
cwtl
hlt
cli
xor
mov
xchg
jnp
les
lcall
stos
movsl
xorb
jl
in
shl
ss
xor
out
push
loop
dec
mov
stos
mov
pop
jne
pop
cld
movl
adc
or
shlb
mov
mov
xchg
cmpsl
pop
or
aad
add
nop
fistpl
xchg
jbe
sbb
mov
push
mov
mov
lcall
popf
insl
loope
daa
lret
shlb
test
jnp
pop
les
cmc
or
jae
cwtl
xchg
push
jp
push
push
adc
std
inc
cwtl
aaa
js
sub
push
cli
insb
bound
mov
xchg
rcrb
inc
sahf
pop
es
cwtl
jge
enter
rcrl
ret
and
or
push
lret
inc
mov
and
add
stos
add
cltd
outsl
xchg
lcall
mov
add
popl
daa
inc
dec
lock
or
jp
cmp
sbb
inc
push
lea
aaa
dec
push
fistps
testl
inc
movsl
cmc
add
fisubrs
push
mov
mov
push
ss
mov
mov
dec
mov
adc
xchg
loope
lcall
test
mov
int3
xchg
xchg
imul
sbb
push
mov
mov
push
in
cmp
cmp
pop
sbb
adc
pop
mov
mov
movsb
or
stc
in
aam
xor
or
mov
inc
xor
outsb
outsl
inc
dec
adc
sbb
pmaxsw
sub
fwait
stc
mov
arpl
aad
hlt
popf
dec
jmp
sbb
in
lock
dec
sub
pop
push
push
xchg
pop
leave
adc
outsb
xchg
dec
dec
imul
enter
mov
sub
sbbb
jg
es
fnsave
js
lods
mov
add
les
dec
mov
xlat
inc
jo
je
fidivrs
xor
mov
shl
int3
imul
aad
xchg
sub
sub
nop
or
mov
call
fwait
bound
out
xchg
push
sti
adc
jb
adc
jge
mov
add
adc
xchg
adc
inc
xor
push
sub
pop
sti
push
jb
sahf
je
jl
movsl
rolb
lret
xchg
stc
clc
stos
hlt
scas
jne
call
mov
jne
jns
aas
scas
dec
nop
or
jae
les
mov
mov
les
mov
mov
cmpb
scas
sahf
mov
fdivrl
outsl
pop
dec
jl
js
pop
popa
pushf
xlat
and
paddq
cltd
pusha
mov
pop
pusha
jae
push
xor
div
insl
addl
pop
scas
xor
int3
ret
enter
mov
push
fwait
xchg
sub
repnz
fmul
jg
xchg
and
aad
jg
arpl
mov
push
ret
pop
mov
sarb
ss
xchg
inc
jmp
mov
and
jle,pt
push
mov
cmp
ficompl
repz
jecxz
xchg
cmp
loope
addl
inc
aaa
mov
jbe
add
lock
je
not
stc
cmc
test
inc
sbb
andl
int3
jo
rorl
cmp
jg
dec
mov
and
inc
mov
sbb
stc
call
xor
out
sub
or
ss
mov
cmp
pop
ret
cmpsl
pop
popa
jp
movsl
sbb
jne
jmp
mov
popf
icebp
rcrl
add
inc
arpl
test
sahf
bound
cmp
pushf
call
ljmp
mov
and
or
mov
fdivrl
add
cli
pop
xor
mov
inc
mov
sub
in
imul
add
dec
sub
sub
fnstcw
adc
jp
jl,pn
dec
inc
aas
cmp
cwtl
mov
pop
sbb
sub
mov
shrb
repz
sub
jno
out
xchg
dec
xor
push
jnp
push
fldl
jle
add
cld
and
aas
cmpsb
sbb
push
jg
ljmp
push
add
xor
push
sar
cltd
shll
cmp
call
movsl
lahf
xchg
incl
xchg
pop
jle
dec
push
push
sub
cmpsb
dec
xor
cmpsb
icebp
lcall
nop
out
sub
insb
out
out
std
movl
sub
scas
jmp
jle
mov
pusha
add
push
imul
das
pop
loop
add
gs
pop
cld
test
sub
decb
scas
push
and
aas
fwait
scas
mov
add
movb
dec
lret
testl
or
jbe
repz
pop
mov
xor
push
mov
stos
outsl
xchg
jge
push
sbb
adc
inc
iret
movsl
ss
insl
clc
lahf
push
sbb
or
push
sub
mul
push
xor
stos
push
nop
data16
decl
sarb
fisubrl
add
pop
loope
xlat
outsb
scas
cmp
iret
scas
andb
adc
and
add
inc
xor
or
inc
aas
movsb
jb
pop
data16
inc
or
lea
pop
popf
insl
sbb
lods
jb
pop
push
xchg
in
xchg
out
sbb
addb
add
fdivs
cli
pop
or
sub
adc
stos
mov
pusha
push
popa
xchg
cmp
adc
in
xor
inc
mov
cmp
lock
pop
jl
pop
fwait
mov
movsb
stos
cmp
arpl
sbb
into
loopne
dec
jge
pop
push
dec
into
and
es
push
xchg
jle
lcall
and
dec
pop
xchg
xlat
push
stc
roll
or
out
push
aam
adc
mov
test
cmp
ret
pop
mov
out
out
fdivs
jmp
fdivl
sbb
jecxz,pt
stos
cmp
jnp
or
dec
jecxz
pop
arpl
es
in
xchg
jecxz
lods
fs
mov
cmpsl
adc
je
call
scas
pop
push
jge
cmpsb
je
mov
lahf
insl
pushf
sti
mov
sarb
lods
into
add
repnz
cmc
mov
jne
into
out
cmp
divl
data16
in
cmp
or
mov
lds
sbb
cmp
inc
sbb
jns
jge
xchg
in
jmp
sbb
mov
sahf
in
jmp
stc
cmp
decl
idivl
xor
sub
dec
icebp
ror
repnz
sbb
lods
outsl
ret
dec
dec
sub
fwait
imul
sbb
sete
mov
sti
int
mov
fs
mov
into
add
pop
packssdw
jg
cmp
mov
rcrl
outsl
xor
or
lahf
inc
xor
and
pop
push
xchg
inc
in
sbb
mov
stos
inc
int
ljmp
sbb
stc
cmp
cli
xchg
inc
push
push
mov
lock
insl
and
mov
push
ret
lret
sahf
or
jnp
ljmp
pop
push
cmp
mov
and
out
cmpsb
rorl
jp
bound
xchg
ja
jmp
popf
das
ficompl
pop
data16
pop
into
jb
je
inc
and
loop
in
dec
test
mov
in
push
lea
mov
add
adc
test
jno
loop
cmp
dec
and
push
inc
imul
push
icebp
or
sbb
mov
xchg
pop
ror
ret
out
cmpsb
pop
repz
aam
mov
inc
lods
sbb
add
pusha
xchg
xchg
pushf
jo
mov
push
cmp
movsl
jo
mov
cld
cmc
iret
test
stc
cmp
in
lods
aas
je
dec
orl
rorb
cs
pop
out
xchg
inc
fs
stc
ret
mov
mov
es
daa
add
xlat
jne
jmp
div
push
jle
sbb
test
insb
xchg
jae
mov
popf
xchg
lahf
fidivl
or
lods
dec
mov
mov
in
aas
movsb
cmp
out
test
add
push
cmp
cmp
ds
mov
jle
insb
popa
or
test
insb
int3
mov
xchg
imul
xor
cmp
add
sub
jmp
or
cmp
push
outsb
repz
in
or
daa
add
das
ficoml
jo
add
xor
das
mov
aas
lods
pop
scas
cli
sbb
in
pop
mov
insb
mov
je
fwait
lea
mov
popa
rorl
dec
mov
imul
xchg
aas
mov
pop
iret
fs
and
ja
push
movsb
pushf
push
loop
mov
mov
scas
pop
andl
inc
pop
sub
in
into
fsub
iret
cs
xchg
jbe
int3
loop
popa
enter
nop
repz
jno
icebp
push
je
mov
cmp
out
fildl
dec
pop
push
add
push
push
xor
add
sub
cwtl
inc
insl
mov
dec
cmp
loop
movl
mov
loope
dec
sub
mov
adcl
lret
push
pop
jg
dec
loopne
or
jmp
xorl
pop
mov
pop
addl
mov
imul
mov
cmc
mov
mov
inc
pop
outsb
aaa
mov
pop
or
inc
nop
out
outsb
dec
ljmp
or
adc
or
mov
and
xor
daa
imull
pop
mov
add
mov
sbb
loopne
sbb
aaa
xchg
push
inc
outsl
daa
xor
add
mov
rclb
push
aam
cmpsb
sbb
ja
jns
lods
movsl
enter
testb
mov
cmp
mov
xor
pop
out
mov
jo
mov
lea
jmp
sbb
pop
and
push
mov
ljmp
stos
jge
in
nop
cwtl
mov
mov
push
mov
mov
or
ret
bound
scas
push
cld
ss
mov
mov
ror
sbb
inc
pushf
icebp
outsb
das
test
cld
lock
es
outsl
cmpsl
jae
negb
jae
mov
adc
ljmp
test
popf
dec
insl
cmp
subl
bnd
pop
add
sub
inc
mov
loopne
out
popa
jl
test
les
es
pop
jecxz
dec
dec
into
inc
push
jb
test
ds
jno
cmc
inc
jnp
popf
xor
mov
adc
bound
push
mov
mov
pushf
push
sub
lds
push
pop
push
popa
dec
gs
movsb
sti
push
imul
repnz
or
pop
scas
or
jle
mov
lcall
idivb
push
or
insl
rclb
popf
add
outsl
stos
jmp
movsb
sbb
adc
jg
adc
sub
stc
stc
aad
xor
shl
lret
mov
cmp
je
shl
sahf
or
clc
cmp
ret
das
pop
xor
mov
inc
inc
jg
sbb
mov
inc
hlt
mov
mov
lret
loopne
fisttps
inc
xor
rcll
sub
push
aas
push
inc
sbb
mov
jle
dec
loop
mov
dec
or
sub
mov
call
in
mov
clc
cwtl
imul
shr
pop
and
push
mov
jl
sahf
sarl
scas
js
neg
popa
xor
cmp
jmp
aas
or
cmp
or
xchg
jo
mov
mov
add
sbb
sbb
ds
subb
jno
push
cmc
out
addb
cmpsl
nop
add
test
inc
xorl
adc
ss
mov
das
out
mov
jle
mov
ljmp
lret
mov
mov
xchg
das
cli
xchg
pusha
nop
add
mov
mov
sbb
bound
out
mov
loop
std
mov
addr16
dec
xor
lcall
mov
mov
add
in
aaa
push
jmp
lds
push
loope
jae
in
idivb
cmp
test
iret
rorl
dec
test
sti
xchg
jl
cltd
in
insl
xchg
cmp
lods
gs
cmp
movb
sub
cmp
mov
fiaddl
xchg
in
and
adc
test
fdivr
pop
push
lret
inc
sbb
movsl
push
popa
aas
clc
push
out
push
cltd
jnp
stc
cs
xchg
xor
mov
pusha
pop
fistpl
jne
sub
stc
push
fdivs
dec
dec
push
test
push
pusha
sub
sub
jae
adc
imul
sbb
fcompl
push
cmp
mov
test
jne
call
push
loope
push
out
mov
mov
cmp
popa
pop
ja
ja
xchg
outsb
leave
or
jo
cmp
pop
xchg
loope
mov
addr16
mov
dec
es
dec
mov
cmp
rorl
and
pop
dec
pop
push
cmc
xor
jecxz
inc
popf
sahf
and
xor
push
add
jp
data16
dec
mov
add
pop
dec
adc
dec
call
and
add
sub
out
mov
xor
fnstsw
daa
push
mov
fcompl
movl
adc
ja
sub
test
adc
leave
jno
push
arpl
fnstsw
pop
jae
movb
subl
stos
xchg
mov
jecxz
add
fstl
sbb
iret
cmp
jb
clc
in
jle
pop
jns
inc
dec
fistpl
fbstp
lret
xchg
xchg
insl
adc
jecxz
mov
add
xlat
rolb
xor
push
cmpsb
dec
mov
mov
inc
mov
jnp
sub
mov
cmp
fucomp
mov
mov
in
mov
iret
icebp
inc
push
test
scas
mov
out
clc
in
mov
jo
enter
xchg
fiadds
mov
pusha
dec
inc
int
cmpl
xor
jl
sbb
hlt
xor
test
mov
or
ret
lock
jle
xor
push
movsl
lods
mov
mov
pop
mov
lret
and
dec
out
inc
sti
cmc
insl
cmpsl
loopne
leave
cmc
out
scas
movsl
icebp
es
sub
dec
mov
xchg
sub
lock
mov
push
pushf
inc
fdivrs
loopne
das
adc
out
adc
inc
mov
ret
mov
sbb
je
cmp
das
cmp
movsl
pop
ja
add
loopne
jns
adc
xchg
rcrl
jbe
xlat
sbb
and
sahf
xchg
xor
popl
add
addr16
lahf
ss
mov
repnz
dec
or
ror
fistpll
movsb
out
std
jnp
push
mov
push
jl
out
mov
push
xchg
and
das
adc
loope
cltd
nop
fs
outsb
lcall
fidivrs
push
dec
adc
rcrb
fcomp
out
stos
mov
hlt
test
sahf
outsl
or
ljmp
sbb
mov
ja,pn
add
in
dec
test
xchg
mulb
cmpsl
movsb
push
stos
sub
push
push
out
into
cmpsl
fsubrp
mov
lds
jmp
in
imul
mov
cmp
mov
in
inc
and
mov
aad
cmp
sub
addb
mov
insb
pop
jl
gs
cmp
xor
notl
add
dec
sti
out
jns
rorl
aas
adc
insl
ds
inc
mov
cmpsl
ret
push
jo
add
mov
sub
inc
cli
icebp
divb
cli
js
mov
pop
cli
scas
mov
in
cmpsl
ss
xchg
push
cmp
jnp
cmpsb
push
push
jl
scas
dec
mov
and
jb
push
mov
dec
mov
outsl
shrl
mov
popa
adc
punpckhwd
icebp
and
rolb
insl
insl
ss
out
enter
jecxz
fsts
xor
test
cltd
inc
cltd
push
adc
repnz
fidivl
cmp
test
cmp
mov
ja
jbe
xchg
clc
pushl
fldt
mov
jge
popa
and
leave
pop
pop
fidivrl
scas
jne
and
xor
les
stc
pop
cmpsl
test
xor
lcall
fsts
pop
mov
repz
lds
push
jno
sbb
push
dec
mov
inc
inc
pop
hlt
adc
sub
cmc
lods
cmp
xor
add
pop
loopne
movsl
inc
subl
stos
xchg
pop
xor
popf
shlb
pop
or
out
sbb
push
xchg
add
aas
sbb
js
mov
clc
pop
test
push
mov
pop
outsl
sbb
cmc
jne
ret
and
cmp
dec
loope
sahf
cmpsl
es
lds
cltd
mov
mov
shlb
or
outsb
stos
lods
pushf
fcomps
sahf
inc
cmpb
cmp
inc
shrl
shll
dec
std
pop
data16
popf
loop
mov
push
in
cmp
inc
rcrb
test
das
dec
in
rol
mov
les
outsb
sub
mov
dec
adc
aad
adc
jb
push
dec
mov
ss
repnz
scas
mov
xor
inc
in
imul
jecxz
bnd
or
fsubr
adc
fcmovnbe
mov
adc
adc
mov
mov
outsb
sub
add
popf
xchg
data16
jg
inc
dec
clc
jp
out
std
push
iret
or
les
movsb
ficomps
mov
scas
dec
mov
cltd
jecxz
rcrl
or
repnz
xlat
std
mov
std
lods
lods
xlat
mov
fcmovu
test
jo
loope
scas
or
xor
jo
loop
shrb
xchg
and
sbb
sub
inc
arpl
push
movsl
lahf
pushf
test
bound
add
or
jmp
cltd
jp
faddl
push
xchg
cmc
div
xor
lods
jo
cmp
mov
test
inc
sbb
xchg
inc
mov
sub
mov
ret
sahf
pop
repz
xchg
pop
sbb
xor
imul
jmp
inc
popf
loope
sahf
mov
mov
push
mov
xchg
adc
mov
jg
and
insl
inc
ss
sahf
pusha
cltd
xchg
cmc
add
lcall
adc
mov
sbb
insl
mov
mov
pop
add
push
sahf
fildl
clc
inc
out
jb
push
lahf
fsubs
mov
test
xor
inc
imul
mov
fwait
cwtl
imul
xor
int3
mov
cmc
jp
jp
icebp
dec
repz
enter
leave
add
ss
pop
xchg
jl
and
xor
mov
sbb
lods
imul
xlat
lret
pop
and
fwait
or
jb
inc
outsb
out
dec
push
push
sbb
shr
pop
adc
pop
adc
fldenv
jae
pop
repz
cmp
fadds
pop
push
adc
leave
addr16
aam
iret
pop
lds
scas
add
stc
pop
and
iret
dec
les
lds
jno
mov
add
jne
inc
cltd
or
int
orl
mov
fidivrl
push
mov
adc
inc
ljmp
mov
rorl
out
jmp
lock
mov
data16
ss
cmp
popa
push
pop
or
lock
push
adc
lods
pop
push
xor
jge
xor
xlat
adc
or
dec
add
stc
leave
pop
mov
loopne
insl
movsl
push
lods
subl
add
sub
scas
xchg
pop
iret
rorb
lret
rclb
xor
or
in
cmpl
jl
pop
xor
mov
mov
xor
popf
add
adc
vandnps
mov
fstpl
sub
mov
jns
std
add
dec
idivl
jecxz
pop
clc
popa
lret
scas
dec
fidivrs
push
xor
icebp
jns
mov
std
ljmp
jl
mov
ljmp
push
and
pop
in
movsb
sahf
xchg
je
inc
int
jp
jns
inc
cmp
repz
test
mov
mov
inc
cmpsl
lahf
in
cld
lret
out
adc
fimull
add
ss
sbb
jge
cli
pop
sbb
sub
icebp
and
push
pop
loopne
std
or
xor
popf
dec
call
pop
mov
sbbb
leave
mov
jno
push
shr
scas
in
jno
inc
ljmp
mov
into
pop
jb
in
push
aaa
out
push
imul
sbb
add
jbe
enter
mov
jnp
inc
call
mov
xchg
push
add
ret
dec
repz
into
cmp
rcrl
sbb
out
fbstp
mov
xchg
cmp
inc
and
add
or
push
cmpsl
addr16
outsb
mov
sbb
mov
inc
xchg
push
sar
pop
jmp
ret
dec
lds
jle
stos
loope
mov
add
negb
lods
inc
push
rclb
push
test
xor
pop
cltd
lods
xor
addl
add
jecxz
dec
mov
cmp
into
icebp
imul
push
lcall
loop
cld
ret
inc
mov
push
repz
jmp
leave
dec
jae
seta
mov
cltd
jl
mov
pop
jecxz
cmp
in
mov
jg
pop
sarl
xchg
jg
enter
mov
mov
push
lahf
outsl
inc
testl
lcall
roll
flds
add
and
das
lods
jmp
jae
push
xor
lahf
jg
test
orb
ficoml
inc
push
push
xchg
inc
fsubl
popf
pop
insl
bound
xchg
bnd
jge
pop
add
enter
cmp
shlb
or
arpl
mov
jb
xor
dec
pop
imul
stos
sbb
bound
jnp
dec
add
mov
faddl
ja
js
hlt
mov
mov
cmc
inc
fucom
or
push
fnstenv
jb
adc
xchg
cwtl
aad
movsl
cmp
push
seta
xchg
clc
int
icebp
cmp
jle
mov
imul
mov
rcl
jbe
daa
sub
cmpsl
or
fmull
or
push
movsl
imul
lods
cmpb
cwtl
int
dec
cmp
adc
fisubs
notl
lods
in
bound
lods
sub
sub
jl
icebp
jae
mov
mov
mov
movsb
xchg
mov
mov
sub
xor
and
and
stos
clc
dec
push
shll
outsb
bound
pop
push
cmpsb
jge
add
cmp
jne
jge
outsl
xchg
or
jo
pop
arpl
addr16
ret
mov
imul
daa
jae
jle
push
mov
xchg
lods
add
hlt
pop
push
aam
pop
jmp
dec
jno
cmp
in
inc
shlb
fwait
or
push
mov
sub
cmp
cmpsl
pusha
pop
test
call
out
cmpsb
cli
cli
mov
xchg
pop
std
jge
jne
sbb
cmc
ret
push
inc
fisttpl
jb
adc
popa
fists
in
cwtl
dec
pop
jmp
push
xor
aam
xchg
sahf
mov
movsb
inc
popa
inc
push
aas
add
ret
dec
xchg
xchg
scas
test
adc
dec
add
sub
adc
pusha
and
and
add
pop
push
jb
jb
outsb
lret
pop
jne
lea
lcall
loope
and
inc
cmp
sbb
jge
aad
enter
dec
mov
jge
cmp
mov
iret
cld
pop
xchg
or
mov
pop
xor
xor
jp
test
cmp
ficoml
int3
mov
inc
inc
and
sbb
push
mov
shl
data16
or
in
and
pop
ja
lds
xlat
and
xchg
mov
in
xchg
ss
cmpsb
add
jno
mov
shl
hlt
rcrb
xor
or
testl
ljmp
mov
arpl
push
mov
int
imul
inc
mov
lcall
imul
insl
rcrl
fidivrs
mov
outsb
adcb
and
inc
iret
out
mov
mov
jnp
push
out
or
imul
push
pop
dec
lock
popa
mov
call
cltd
hlt
rclb
scas
fisttpll
add
shll
std
pop
jge
cmpsl
cmp
sahf
or
int3
pop
add
loop
jge
fimull
call
mov
int3
jecxz
push
mov
xchg
add
in
push
or
lods
cmp
jmp
test
loop
js
jo
test
or
inc
xchg
mov
push
je
cmp
xor
sub
mov
lahf
scas
fbstp
add
sbb
inc
adc
insb
inc
xchg
sbb
loopne
popf
loopne
sbb
and
rclb
xchg
stos
dec
sub
xchg
mov
scas
arpl
loop
in
xor
add
cmp
insl
jb
dec
mov
mov
mov
jge
addr16
add
stos
fistps
std
addb
push
stos
icebp
jmp
pop
xchg
je
pop
pushf
inc
sbb
shll
adc
inc
test
xor
sbb
push
ja
test
dec
mov
inc
sub
sub
xchg
shll
lods
stos
xchg
cmp
adc
adc
add
insl
xlat
mov
cmp
push
or
stos
cmp
xlat
mov
dec
outsl
add
mov
rcll
push
testl
cmc
gs
lea
mov
cmp
icebp
xor
inc
push
mov
scas
lock
add
jno
jae
mov
push
mov
xor
mov
cmp
xchg
or
filds
lock
iret
shlb
inc
xor
hlt
js
test
test
jmp
mov
cmp
fmulp
mov
push
aaa
mov
dec
and
jnp
or
insl
xchg
pop
fstpt
or
notb
in
sarb
adc
inc
jecxz
sahf
pop
mov
repz
roll
mov
cmp
dec
sbb
adc
sub
je
cltd
dec
stos
xchg
xor
incl
mov
inc
orl
sub
insl
cmp
or
jge
fnstenv
pop
addr16
pusha
jae
ficoml
movups
movsb
shl
movsb
clc
mov
mov
roll
lcall
pop
std
mov
ds
jle
std
lea
clc
test
repz
inc
mov
dec
add
xor
scas
mov
test
js
dec
inc
pop
inc
mov
cs
fwait
leave
sub
cmpsb
lahf
sub
movsl
add
and
inc
call
sahf
mov
push
jo
arpl
std
jecxz
loop
jae
jo
inc
dec
lods
jno
mov
hlt
sahf
fwait
xchg
scas
and
and
xchg
sbb
pop
adc
cld
inc
les
arpl
xchg
add
or
mov
adc
ret
aam
push
mov
mov
addr16
insb
orb
pop
add
cli
cltd
inc
push
pop
mov
into
inc
dec
xlat
aaa
jnp
pop
sbbb
lds
dec
frstor
out
pop
pop
enter
ret
jle
enter
bound
loope
pop
cltd
push
mov
aas
lahf
mov
xchg
pop
arpl
cmp
call
cld
lret
shlb
cmp
lahf
dec
scas
lock
ljmp
mov
jne
and
out
aaa
mov
aam
cmp
cli
jmp
mov
sub
mov
es
jl
lahf
rorl
or
push
test
dec
into
pop
xchg
and
lea
sahf
enter
call
lret
pop
xchg
das
imul
sub
dec
push
cmp
neg
bound
and
dec
push
test
int
std
push
nop
jno
orl
std
aaa
or
inc
sbb
movsl
mov
cld
dec
inc
cli
and
sub
inc
xor
lret
mov
sub
testl
jle
xor
loop
xor
loop
push
call
jno
mov
fildl
popw
or
outsl
xchg
add
jno
scas
sbb
mov
add
pop
mov
lahf
lea
into
jno
adc
push
movsl
in
adc
stos
push
mov
arpl
xchg
mov
pop
inc
outsl
rol
lcall
das
test
cmp
and
mov
lock
in
mov
pop
push
pop
push
dec
and
dec
xchg
gs
in
lcall
xorl
out
mov
or
je
push
sub
sbb
dec
decb
sbb
fidivs
mov
pop
iret
dec
lcall
jmp
adc
call
and
clc
lods
sbb
test
and
imul
jne
mov
dec
add
fstpl
sbb
pushf
lock
mov
push
popf
arpl
jmp
dec
jge
pop
mov
test
mov
dec
xor
flds
cmp
adc
sub
jle
rcrl
popw
sub
mov
fwait
lret
add
add
or
push
test
cmp
mov
mov
imul
push
inc
fldenv
imul
ficoms
addr16
xchg
mov
xlat
test
cmp
fcmove
inc
mov
iret
loope
mov
adc
ds
jle
rcl
dec
jns
popf
cmp
xchg
es
pop
bound
rorl
adc
xlat
sbb
xchg
imul
dec
enter
dec
in
mov
jg
xchg
mov
add
mov
mov
inc
lcall
inc
idivl
pop
sub
mov
test
pop
scas
push
fcoml
push
dec
cmpsl
sbb
cltd
sti
mov
cld
aas
into
mov
adcl
xor
fwait
inc
adc
repnz
adc
xchg
jge
das
mov
jnp
inc
pusha
ss
pop
movsb
xor
mov
data16
clc
dec
into
rcrb
mov
es
inc
lcall
into
adc
sub
or
in
and
add
push
das
xchg
push
loop
add
scas
stos
cld
sbb
jp
mov
mov
pop
cmp
jl
out
mov
and
mov
mov
pop
pop
xor
inc
sbb
notb
stc
adc
and
sbb
pop
sub
pop
out
mov
or
inc
push
pop
xchg
cmpsb
push
sub
cmp
mov
sti
pop
mov
std
test
sub
faddl
adc
inc
jmp
dec
aaa
outsl
or
add
into
xchg
jno
daa
xchg
xchg
popa
popf
mov
mov
xchg
push
hlt
jmp
cmp
dec
cmp
fcompl
and
add
sub
add
pop
pop
ds
fwait
pop
sub
mov
sub
adc
dec
dec
adc
jmp
mov
pop
fcompl
inc
jo
xor
sub
push
lea
xor
mov
insl
add
or
jg
dec
daa
cs
lock
lcall
jmp
icebp
pop
rcll
mov
mov
inc
pop
inc
movsl
and
mov
jb
cld
inc
adc
or
dec
or
test
lret
push
scas
inc
incb
lret
loop
rep
pop
mov
lock
cmc
xchg
stc
jnp
jl
scas
mov
sub
sub
or
jge
mov
mov
adc
pop
popa
pop
pop
pop
dec
jg
dec
rcrb
push
lcall
lcall
adc
outsl
les
mov
rcrl
push
out
xchg
sbb
xchg
pusha
or
les
mov
mov
lea
daa
jo
div
or
push
mov
or
mov
inc
mov
jnp
adc
jae
adc
sub
push
and
and
testb
fwait
pusha
push
jo
data16
ror
imul
jne
es
xor
int3
jle
movsl
push
inc
push
push
xor
xchg
lret
ret
lods
mov
cs
lea
jb
lods
iret
in
push
ficoms
xacquire
push
mov
ds
aad
xchg
xchg
mulb
pop
mov
iret
add
movsb
or
cmp
xchg
fisubl
xchg
fs
sarb
pop
ja
lods
lock
loope
pop
lods
outsl
xchg
sbb
out
movl
push
gs
mov
cmpsb
sti
or
icebp
mov
es
and
ficompl
xchg
dec
or
test
or
lahf
inc
insb
jne
rcrb
add
adc
lea
dec
sbb
xchg
push
fsubs
mov
sub
or
pop
int3
loope
dec
jmp
mov
pause
push
push
jp
lret
movsl
mov
repnz
insb
ljmp
mov
dec
jg
in
xlat
jbe
shlb
xchg
sbb
cmpsl
or
bound
push
ret
pusha
mov
cmp
fs
iret
int3
adc
hlt
lods
mov
jle
lds
sub
mov
in
sub
popf
les
xor
xor
daa
out
int3
cmpsl
dec
ds
xchg
or
push
cmpsb
cwtl
mov
xchg
imul
fsubl
std
loopne
jo
add
add
adc
daa
cmpsb
adc
add
push
jl
pop
rcrb
in
aad
in
sub
fnstcw
decl
lahf
sub
inc
push
jnp
cmpb
std
pop
mov
mov
pop
jge
and
jae
sbb
pop
in
dec
or
mov
pop
imulb
pushl
mov
in
or
and
in
cs
xchg
scas
dec
and
xchg
push
xchg
xor
in
cmpsl
cld
jne
fisubs
outsl
or
in
fmul
aaa
clc
mov
lods
mov
test
rcrl
jg
mov
jne
xor
stos
das
vmaskmovdqu
leave
mov
sbb
dec
ret
pusha
push
inc
mov
out
mov
addr16
sti
outsl
add
std
and
mov
loope
push
scas
test
mov
mov
insb
add
rorb
push
fimull
shl
xchg
dec
fcoms
push
testl
push
mov
mov
push
cmp
add
jp
sbb
cmp
and
shrl
dec
pusha
ds
lock
faddl
pushf
in
daa
cmp
mov
out
xchg
loopne
test
imul
in
sub
cmp
sbb
fsubs
mov
pusha
lods
data16
test
mov
flds
jnp
xchg
into
mov
sbb
dec
cmp
and
mov
jnp
mov
gs
sbb
rcr
ds
test
std
push
push
cmpsl
jmp
cwtl
dec
fnstsw
aam
mov
stc
leave
jle
frstor
xor
add
mov
adc
sbb
pushf
aad
sub
out
push
loopne
jmp
clc
es
int3
aad
mov
xor
lahf
mov
sbb
xor
dec
mov
int
xchg
pop
mov
add
cmp
and
sub
test
popf
xor
adc
push
add
mov
push
mov
loopne
mov
data16
adc
cld
rcrb
sub
in
fdivrl
lahf
push
pop
mov
addb
scas
enter
pop
dec
jns,pt
or
sahf
cld
pusha
or
jae
in
xor
imul
imul
jmp
or
mov
sbb
std
xor
cmp
in
nop
inc
sub
iret
xchg
rolb
push
mov
lock
mov
lods
enter
cli
jns
test
push
loopne
mov
and
xchg
enter
mov
sub
mov
push
cmp
scas
lret
das
and
outsb
sbb
sub
mov
loope
out
mov
sahf
fcomip
cmp
and
clc
lret
bound
jmp
adc
and
loopne
jbe
lock
dec
mov
ljmp
fisubrs
pop
cmp
rcrl
hlt
mov
repz
inc
divl
xchg
pop
out
add
out
add
and
mov
out
add
inc
and
scas
sbb
aaa
lods
sbb
fldcw
pushf
mov
xor
pop
mov
and
movsb
jle
adc
cmpsb
scas
xor
lea
lods
out
in
add
in
jle
outsb
xchg
je
push
cmp
setae
push
inc
sahf
ljmp
push
ja
sub
stc
push
or
xchg
adc
mov
jnp
xor
mov
inc
push
ret
inc
out
cmp
mov
jecxz
popf
add
aad
out
push
js
pop
inc
and
outsl
cld
add
xor
pop
ret
and
popf
mov
ljmp
test
shlb
mov
push
inc
mov
xor
sub
mov
jg
mov
mov
clc
inc
mov
mov
repnz
cmc
push
ret
push
adc
jae
xor
cmp
push
cmp
mov
and
dec
push
sub
sub
pop
leave
cmp
xor
repnz
lahf
std
iret
call
rclb
mov
xlat
cltd
iret
movsl
das
in
test
dec
arpl
xor
adc
mov
mov
loope
and
decb
lods
ficoml
ljmp
mov
jl
sahf
popa
inc
test
out
dec
inc
outsl
ret
leave
push
sub
push
dec
add
jmp
test
bound
test
pushf
scas
sbb
dec
es
clc
mov
leave
jge
dec
push
xchg
sub
sti
push
fdecstp
bound
fdiv
out
mov
rcl
je
dec
push
dec
adc
sahf
icebp
or
call
jg
jnp
rcrb
jecxz
sbb
mov
insl
fiadds
mov
ss
inc
adc
inc
mov
jae
insb
movsl
mov
jle
xor
out
sbb
sbb
mov
cli
mov
jmp
ret
push
std
jae
or
add
push
xchg
fwait
mov
adc
inc
dec
mov
test
outsb
mov
bound
pusha
lods
pop
and
mov
inc
cwtl
add
int3
or
mov
call
fs
pop
adcl
arpl
scas
add
xchg
fs
sbb
mov
push
mov
out
push
mov
jns
push
and
push
sbb
jecxz
pop
pop
fmul
imul
int
inc
pop
dec
xlat
mov
stos
and
rol
jmp
out
imul
adc
ss
sub
cmpb
loopne
cmc
or
and
xchg
xor
movsb
insl
shl
out
aaa
cmp
cmc
ret
in
sub
mov
lret
enter
test
std
mov
outsb
pop
insl
shrb
cmp
jbe
stc
sub
mov
xor
test
cld
mov
mov
push
mov
mov
orl
sub
xor
pop
shll
outsl
lahf
mov
loope
mov
jge
jcxz
mov
sbb
call
gs
imul
insb
mov
bound
cs
aam
nop
dec
sbb
scas
jae
cmp
scas
loop
test
addl
xchg
and
sbb
call
jmp
xor
lock
pop
insb
pushf
pop
into
iret
cld
and
mov
int
or
nop
or
enter
popa
dec
je
out
scas
ds
xchg
hlt
stos
lea
addr16
rcrl
dec
inc
mov
push
lock
dec
aad
cwtl
fisttps
mov
mov
xchg
popf
dec
dec
popf
jecxz
inc
inc
es
jecxz
mov
xchg
pusha
loope
fnsave
xor
arpl
mov
hlt
je
sti
push
ja
sbb
xchg
call
jne
xchg
xchg
xor
pop
iret
pop
mov
idivl
sahf
rep
sbb
mov
sub
cld
mov
jns
xchg
out
jl
int3
inc
and
cmpsl
push
int
sbb
add
psubsb
lret
pop
ja
int
stos
mov
and
dec
je
jbe
adc
mov
insb
adcl
cld
lfs
xor
jp
aas
mov
xchg
and
mov
mov
xor
popa
iret
pop
aas
inc
in
cmpsb
rolb
mov
adc
mov
in
pop
mov
inc
jns
sub
jne
mov
push
sbb
xchg
rcrl
ljmp
jmp
jp
sarl
mov
arpl
sbb
mov
wbinvd
push
sbb
sub
pop
xchg
add
aas
outsl
dec
lea
push
jnp
out
mov
or
inc
call
cwtl
daa
mov
insb
push
pop
sub
lods
shrl
shll
jno
stc
stos
bound
sbb
sarb
mov
xchg
push
dec
outsb
leave
push
es
sbb
shll
enter
pop
and
cmpsb
sahf
sub
mov
mov
push
push
inc
add
push
inc
push
xchg
xlat
add
push
add
push
lock
cmp
cmp
inc
lahf
adc
inc
dec
sbb
notb
inc
rol
jne
stos
adc
xor
or
gs
and
into
or
hlt
jnp
or
push
mov
ds
push
xchg
jbe
js
mov
scas
mov
fnstsw
call
mov
lcall
lock
push
andb
jecxz
cmc
lcall
icebp
cmc
jae
rol
cmp
dec
lahf
mov
aas
push
out
cmc
nop
sub
jnp
sub
fs
or
fstpl
in
pop
data16
aad
dec
xchg
imul
int3
pop
sahf
jle
lret
data16
lds
adc
int3
mov
stc
mov
or
jge
ret
inc
and
in
sahf
jns
test
cmp
add
sub
jnp
mov
mov
int
mov
pushf
test
aas
inc
inc
cld
ds
mov
jmp
repz
cmp
jnp
mov
adc
sbb
out
ret
and
add
or
cmp
dec
sbb
push
sbb
cwtl
jp
cwtl
scas
arpl
lea
or
cmc
or
cwtl
sbb
sbb
jbe
movsb
cmp
mov
push
adc
lahf
sbb
lods
ficompl
or
adc
mov
mov
mov
pop
inc
jp
xchg
push
out
iret
test
or
pop
cmc
push
adc
les
aaa
icebp
mov
dec
into
xor
ret
cmpsl
jmp
fmul
xchg
dec
int3
insl
aam
pop
jae
insl
std
mull
jecxz
dec
mov
xchg
fwait
jle
fnstsw
dec
insb
add
andb
jmp
jno
jg
inc
mov
aam
xor
xor
mov
push
cwtl
int3
cmc
test
call
xor
mov
iret
and
daa
and
fs
sbb
lcall
xor
aaa
fld
cmpsb
dec
scas
inc
mov
lods
shll
mov
mov
add
pushf
inc
inc
cld
mov
xchg
xlat
fdivr
jnp
mov
sahf
lods
ja
push
pop
and
lods
inc
xchg
pop
pop
or
pushf
fists
les
int3
and
hlt
in
out
xchg
cmpsl
std
pop
mov
push
jg
adc
addr16
xor
inc
clc
push
popl
sbb
sbb
inc
inc
mov
push
loop
or
mov
mov
sub
dec
mov
and
stos
pop
add
addb
test
cmp
fstl
fidivrl
enter
push
jo
stos
add
mov
push
daa
jo
or
cmp
out
xchg
pusha
int
fnsave
fidivrs
pop
sbb
cld
or
mov
xchg
and
mov
in
popa
jb
xor
fiaddl
lods
sub
adc
or
dec
mov
addr16
inc
mov
mov
dec
cmp
popf
xor
or
push
out
test
jge
inc
in
imul
stos
in
add
je
ja
mov
js
imul
jbe
cmc
and
mov
cmpsb
outsl
push
push
mov
jb
and
test
ds
ljmp
jge
test
mov
push
std
test
divb
in
lds
scas
push
lds
xor
cmp
xor
xor
ret
mov
sbb
pop
mov
and
ds
or
cmpl
pop
dec
outsl
inc
sub
jno
sbb
xor
pop
andl
subl
mov
xchg
adc
inc
data16
jecxz
insl
mov
loopne
xchg
add
xor
xor
xchg
pop
jmp
sti
sbb
jge
xchg
inc
mov
mov
cwtl
push
rorl
and
iret
out
dec
ror
cmp
inc
dec
xor
sbb
imul
mov
push
cli
add
insl
dec
push
loopne
dec
aam
push
or
push
sub
xor
stos
push
test
shll
shr
pop
sbb
push
add
inc
and
and
jb
popa
xchg
inc
out
out
xchg
cmp
xor
and
push
nop
cmp
int
push
mov
push
jno
sub
jbe
sub
xor
out
pop
stc
cltd
mov
mov
cmp
xchg
mov
and
mov
rcll
mov
and
push
cmpsl
mov
into
cltd
hlt
or
lret
ja
pusha
add
lret
lock
sub
jb
and
jbe
movsb
es
js
pop
push
push
add
shlb
jle
pop
push
add
mull
or
mov
imul
gs
es
rclb
sub
insb
nop
push
push
dec
into
outsb
or
loope
aam
push
push
fbstp
xor
sbb
pop
pop
shll
pop
add
adc
in
jecxz
adc
iret
fsubrs
pop
mov
mov
xchg
mov
or
sbb
aad
push
xor
fnsave
adc
mov
pop
xchg
sarl
dec
jo
lahf
add
popa
ss
cmp
cmpsb
or
adc
xchg
mov
pop
pop
mov
jno
out
lret
fwait
mov
insl
pop
xchg
push
push
push
mov
cmp
xor
addb
or
andb
or
or
jmp
inc
cmpsb
imul
add
jle
jae
jmp
aas
stos
dec
push
icebp
stos
pop
mov
jae
jbe
sub
ja
pushf
jge
and
mov
les
xor
loop
rcrb
mov
mov
insl
aaa
adc
out
xor
pop
add
rol
xchg
xlat
fwait
rol
dec
fisubl
das
loop
fsts
sub
and
fisubl
xor
test
jb
jae
cmovo
dec
add
stos
jbe
popa
inc
or
pop
xor
ret
xchg
mov
push
lds
cwtl
addr16
cmp
push
imul
sbb
pop
mov
rolb
cltd
pop
xchg
out
aaa
cmp
ja
mov
notl
fnstenv
mov
pop
out
mov
push
jle
or
out
sbb
cltd
stos
addr16
xor
push
loope
xor
sub
mov
pop
jecxz
out
inc
mov
jbe
and
insl
adc
ret
jo
das
pop
mov
xchg
pusha
test
das
loop
cmp
xorb
cmpl
inc
fwait
push
add
iret
inc
xchg
mov
and
push
push
inc
rolb
sbb
adc
call
push
or
inc
mov
aad
lds
jbe
daa
push
mov
pushf
xorb
bound
stos
sbb
xor
or
out
icebp
icebp
xchg
inc
out
les
sub
mov
mov
dec
andw
mov
push
pop
add
push
hlt
int
cmp
cs
mov
out
sti
outsl
out
xchg
lods
int
inc
push
push
xor
and
inc
mov
push
repnz
or
ss
loop
jnp
stos
std
filds
fwait
out
mov
inc
decl
in
mov
mov
bound
pushf
in
fchs
aam
xor
mov
cmpsb
lock
jg
fistps
jmp
push
add
iret
aaa
lret
sbb
cmpsl
dec
xchg
mov
dec
sbb
sub
fmuls
lret
cld
mov
sarb
jge
mov
int3
pop
push
mov
dec
adc
call
movsl
xor
pop
daa
lret
das
xchg
xchg
xchg
xchg
or
sbb
push
or
pusha
lea
sbb
cmp
xchg
mov
and
into
or
pop
dec
cmp
push
xor
sahf
mov
adcb
ret
stos
xchg
mov
lods
shrb
cmc
insl
lret
pop
call
repnz
enter
test
mov
sub
jp
lods
icebp
insb
das
adc
popa
in
xchg
mov
lret
ljmp
mov
sahf
mov
adc
lods
in
add
pop
imul
out
xchg
xor
mov
sbb
pop
push
pop
cltd
sub
mov
mov
das
movsb
dec
and
inc
or
std
push
sub
xor
out
push
iret
mov
mov
cld
jnp
xchg
sub
cmp
test
cmp
jo
imul
and
int
sti
xor
push
sti
insb
xchg
leave
add
imul
arpl
sbb
fldenv
call
movsl
xchg
mov
aad
je
mov
push
inc
mov
push
sbb
pop
pushl
int
lods
jae
test
cwtl
loopne
mov
mov
push
aas
test
xchg
pusha
xor
rcl
cmpsb
mov
xor
sarb
push
out
mov
xchg
cld
stos
lahf
sbb
jle
ror
xor
cmpsl
mov
inc
mov
push
stos
jg
mov
mov
mov
add
xchg
xchg
scas
jae
mov
repz
hlt
ljmp
mov
or
jb
icebp
inc
subl
daa
ljmp
pop
mov
bound
scas
in
pushf
in
leave
mov
mov
test
pop
fisubl
cwtl
fidivrs
inc
mov
fs
pop
mov
pop
stos
dec
mov
in
test
aad
xchg
xor
mov
mov
lret
xchg
fldl
test
pusha
outsl
xchg
mov
insb
sbb
add
lds
push
sbb
call
pop
push
repnz
push
jne
lods
out
mov
xor
ljmp
add
push
andb
xchg
xchg
lea
and
pop
cmpsb
sub
popl
lds
in
mov
test
xor
adc
pop
loopne
pop
out
cwtl
or
dec
mov
inc
pop
test
fwait
imul
aaa
div
mov
js
lret
sbb
lea
stos
sahf
sti
cmpsl
insb
jo
mov
push
lret
pop
cmpb
fbld
jns
notb
pop
out
and
int3
out
and
adc
sub
dec
pop
cmpsb
aad
jg
mov
sub
adc
shlb
xchg
xchg
xor
dec
repz
cmp
cmp
sbbl
and
lea
cmp
add
aad
inc
roll
imul
mov
dec
push
mov
adc
sbb
jge
mov
sub
imul
test
sbb
mov
xchg
ss
xorl
popa
mov
mov
scas
or
lcall
out
insl
fcomp
stc
jnp
fisubrl
enter
imul
clc
jne
test
push
push
dec
rcr
cmp
sbb
es
pusha
pop
dec
push
cmp
and
in
imul
jg
xchg
pop
cwtl
ljmp
outsl
int3
mov
inc
xchg
xor
mov
pop
or
pop
inc
int3
test
pusha
pop
mov
clc
lahf
faddl
adc
fidivrs
xor
repz
push
dec
test
cmc
ret
bound
add
les
pop
xor
jle
xchg
adc
stos
sub
int3
xchg
xor
push
inc
mov
nop
int
or
adc
lods
mov
sub
xchg
jge
jb
test
mov
dec
push
pop
data16
ret
jmp
std
repz
in
push
push
and
jl
aad
jge
test
xchg
push
jmp
pop
mov
mov
push
into
loope
rcll
mov
add
dec
pop
and
lods
pop
test
jl
movsl
outsb
and
in
ds
movb
je
rol
cmp
cmp
ror
into
ljmp
xchg
cli
into
movsb
push
xchg
dec
es
addr16
or
xchg
das
lds
xchg
add
or
inc
fsubr
push
bound
dec
or
cwtl
sub
andb
push
scas
xchg
fucomp
inc
push
adc
cwtl
pusha
cmpsl
inc
mov
insl
lret
rcll
sti
fcmovbe
aad
mov
jo
fs
xchg
and
jno
add
inc
adc
outsl
and
jmp
lds
sub
inc
rclb
dec
mov
mov
xchg
mov
scas
pop
scas
mov
fistps
shr
pushf
aam
cmpb
into
hlt
xchg
and
mov
loope
mov
adc
or
mov
xchg
jmp
cmc
movsl
push
bound
test
and
mov
cmc
rolb
andl
mov
push
les
adc
mov
ret
xchg
fcoms
mov
and
shrb
lea
lods
clc
add
mov
cmpsl
shl
icebp
push
mov
shll
or
pop
pop
or
dec
clc
sub
gs
push
or
pop
jecxz
popa
cwtl
aam
ds
xchg
mov
outsl
cli
mov
inc
push
pop
test
dec
cwtl
jno
es
stc
stos
icebp
add
in
and
pop
or
movl
std
stos
movsl
lea
mov
jmp
xchg
xor
push
mov
mov
add
popa
adcl
add
mov
or
mov
sbb
lret
outsb
mov
jmp
jecxz
fs
outsl
sbb
movsl
flds
in
or
jl
xchg
adc
cmp
push
sub
out
pop
dec
rorb
mov
stc
push
and
push
xor
adc
add
mov
jmp
jnp
or
std
push
and
aad
fisttpll
fildl
lea
mov
and
mov
movsl
push
ror
mov
fs
sub
je
ret
push
and
xchg
dec
mov
ljmp
add
loop
xor
mov
cmp
xchg
int3
cmp
push
pop
or
xchg
js
dec
call
push
inc
add
jnp
or
sti
rcrl
call
ljmp
or
pop
fimuls
into
pop
pop
outsb
out
xchg
sti
mov
sub
popl
ret
jo
adc
adc
mov
fs
mov
stos
jp
and
fnstcw
shl
cli
fbld
push
cmpsl
mov
out
pop
pusha
push
icebp
inc
data16
out
je
pop
and
je
icebp
mov
push
dec
sub
sar
ds
push
aad
ljmp
dec
mov
fs
ret
enter
lahf
cmp
sub
bound
lods
mov
pushf
cmp
push
dec
pusha
adc
dec
cli
enter
les
jg
xchg
or
rcll
push
pushf
int3
test
lods
in
jecxz
out
jnp
inc
sbb
xlat
pop
jbe
test
hlt
int3
leave
rcll
cmpsl
pop
mov
jge
and
sbb
mov
mov
cmp
mov
mov
int
lcall
pop
cmp
popf
daa
cmpsl
ljmp
movsl
pop
mov
ljmp
mov
add
cmpsb
sbb
cwtl
sbb
xchg
fdivrl
adc
dec
inc
fstl
push
imul
clc
stos
je
cmpsl
jecxz
stos
scas
imul
iret
popa
cld
pop
xor
pop
jno
fsubrl
cmp
call
ja
rorl
call
outsl
lea
cmp
dec
aam
xor
incl
and
dec
xchg
push
mov
sbb
scas
sub
xor
mov
jge
add
jecxz
jnp
jns
mov
arpl
cmovg
dec
cmp
dec
push
jle
xchg
and
testb
inc
outsl
cmpsl
mov
ret
xchg
into
push
push
add
jo
icebp
xor
in
jbe
jecxz
in
xchg
rcr
add
scas
jmp
lock
gs
jmp
sub
nop
stos
or
inc
insb
cmpsb
adc
outsl
imul
outsb
dec
pusha
hlt
les
sub
sbb
daa
sbb
xor
xlat
fidivs
and
jmp
insl
sbb
adc
mov
jnp
adc
daa
shll
xlat
fstpl
pusha
cmpsb
lods
aaa
inc
push
mov
test
scas
adc
mov
lock
push
cmpsl
fsubrs
sub
cmp
mov
xor
das
mov
rcr
mov
adc
dec
mov
das
dec
repz
insb
mov
mov
gs
inc
into
fdivrs
mov
stos
rolb
loope
push
jo
push
lds
into
pop
cs
clc
dec
inc
mov
pusha
inc
lods
sbb
fwait
sub
insb
pop
sti
xor
repnz
sbb
outsb
loop
mov
cld
sbb
and
or
ljmp
add
mov
leave
xor
cmp
rcrl
lret
ds
fsubrp
xchg
cmp
mov
xchg
add
push
xor
mov
pushf
jp
mov
lahf
cwtl
and
dec
fwait
jo
filds
aad
jmp
sbbl
and
stos
into
sub
imul
or
ret
imul
pusha
mov
xchg
hlt
push
push
push
aas
adc
test
pop
rcrl
daa
jge
pop
std
add
sbbb
cmp
jo
mov
data16
outsb
add
std
or
insl
cltd
sbb
push
lea
fwait
sbb
iret
and
pusha
jecxz
mov
or
sbb
in
push
rolb
imul
lods
mov
pop
xor
out
shl
inc
mov
sbb
jo
aas
push
push
and
xor
and
and
arpl
je
out
sarl
shlb
pop
not
adc
push
push
clc
add
insl
sbb
inc
cltd
in
jo
jns
mov
xchg
push
push
push
aas
xchg
cmc
mov
mov
jae
jno
inc
fstpt
xchg
rol
push
jp
push
mov
call
scas
jmp
pop
jp
adc
test
xor
scas
cwtl
imul
mov
xor
or
jmp
dec
mov
push
push
daa
pop
dec
mov
rol
pop
ljmp
aas
fnstenv
pop
inc
xor
es
and
decl
les
lret
aas
in
shll
inc
mov
mov
loopne
xchg
jp
aas
mov
sbb
movsb
mov
outsb
push
dec
pushf
xchg
icebp
pop
fildl
jbe
cmp
pop
cmp
or
daa
mov
insl
inc
and
and
in
cs
pop
testl
aas
adc
push
xchg
stos
jle
push
mov
cmpsl
mov
sub
sbb
cmp
cmp
mov
jl
fs
je
sbb
lea
dec
out
and
sub
and
pop
shll
jae
stos
testb
in
pop
xor
int3
addr16
into
jl
sub
and
cmc
ret
mov
dec
or
movsb
loope
dec
clc
dec
push
cmpsl
cmp
rclb
push
stos
and
insl
xor
dec
sbb
pop
pmullw
inc
outsb
mov
xchg
cmpl
into
pop
lcall
out
dec
mov
jns
mov
pop
push
cs
std
shll
add
sbbb
or
mov
divl
inc
hlt
mov
lea
testl
pop
lods
into
mov
scas
push
loope
jne
adc
xchg
xchg
mov
aam
pop
jg
call
lods
jl
xor
shrl
in
xor
inc
test
cmp
sub
out
mov
inc
out
in
scas
sub
or
adc
and
jecxz
mov
xchg
pop
hlt
or
inc
mov
stos
mov
jle
test
lcall
and
xchg
in
pop
xor
and
jg
jmp
cmp
outsl
pop
inc
nop
push
into
adc
cwtl
mov
in
ja
in
fsubs
or
mov
sub
das
mov
push
addb
push
push
ds
mov
iret
or
xchg
ljmp
dec
enter
andb
mov
sub
ds
movb
jmp
js
data16
popa
mov
repnz
in
mov
fimuls
jb
icebp
jecxz
sbb
sti
sahf
push
mov
leave
fs
lods
lds
ss
test
js
or
xchg
ja
add
jns
add
cmovge
mov
movsb
aas
in
call
fmull
add
aas
aad
sbb
cmp
scas
std
push
fstpt
pop
rorl
or
aad
xor
aad
mov
mov
pop
loope
jge
and
sti
orb
loopne
xchg
jne
into
sub
mov
arpl
into
test
jg
add
ja
inc
mov
in
mov
dec
cmpsl
xor
scas
loop
sub
and
pop
sub
mov
gs
push
andb
pushf
xor
ljmp
test
inc
cmp
scas
and
jno
stos
inc
mov
mov
leave
subb
stc
mov
push
shll
aad
pop
testb
dec
inc
mov
mov
add
test
adc
push
mov
push
cmp
jae
addr16
mov
mov
jl
adcl
js
fcmovb
sar
or
sti
mov
lock
jo
ljmp
pop
cli
fistl
outsl
dec
lret
pop
add
dec
jp
sbb
lret
lret
mov
repz
or
mov
mov
pushf
add
pop
mov
and
js
pop
pop
addl
add
pop
mov
mov
sub
or
mov
pop
and
aaa
outsb
loopne
and
jl
popa
jno
push
lret
inc
jbe
and
lret
iret
dec
aam
loope
lods
jl
cmp
fildl
loope
out
jns
rorl
fnstcw
popa
jg
cld
mov
les
dec
rolb
lock
pop
and
jns
lcall
push
xchg
insb
mov
enter
xor
mul
add
sub
jmp
sbb
arpl
dec
call
xchg
test
cmp
inc
inc
shlb
cmpsl
dec
in
add
nop
sub
xchg
fld1
divl
mov
jg
mov
cltd
xorb
cmpsl
and
sbb
pop
xor
das
into
sti
xchg
cmpsb
mov
nop
dec
sub
add
jl
not
mov
sub
test
inc
stc
imul
test
imul
jo
sub
cwtl
adc
sbb
sub
testb
jno
inc
cmp
in
or
push
mov
fs
dec
popf
fwait
rclb
pusha
mov
jo
decb
outsb
arpl
pop
das
stos
jmp
xchg
pop
stc
js
sahf
sub
add
movsl
rcrl
loopne
shl
ss
aad
ss
fnstenv
gs
and
inc
lea
cli
xchg
arpl
add
add
sub
jmp
pop
in
jnp
add
fistpll
dec
sti
outsl
mov
int
inc
cltd
imul
sub
sub
jno
mov
subb
adc
rorb
and
or
inc
bound
xchg
stos
jg
cmp
repnz
in
xlat
mov
pop
xchg
int3
xlat
jl
clc
pop
jecxz
or
repz
dec
lret
jp
ficoms
addr16
sar
xchg
sbb
call
out
cmp
int
sub
sub
dec
dec
popf
das
lea
sub
push
adc
mov
hlt
lock
inc
aas
add
lods
pop
and
sub
jnp
aam
aas
aam
imul
aaa
data16
dec
jl
cld
in
repnz
xor
fcoml
cmp
int3
push
pop
fmuls
pop
dec
pop
add
sub
push
insb
dec
pop
in
cs
fldenv
js
cmp
and
sub
loopne
mov
test
xchg
mov
xchg
outsl
mov
lds
inc
cli
and
sarb
xchg
push
mov
xor
jns
xor
mov
inc
enter
ret
in
mov
push
scas
mov
cld
adc
jle
std
jno
mov
lock
push
pushf
imul
xchg
icebp
in
push
stos
push
scas
cmpsl
and
push
pop
arpl
mov
into
or
insb
std
dec
out
push
popa
les
sub
ds
or
lock
cs
adc
std
arpl
jnp
adc
mov
jnp
and
lods
and
dec
sbb
sub
jge
out
ficoml
xchg
xchg
jnp
jne
xchg
adc
jb
or
pop
jle
push
mov
jbe
mov
inc
mov
subb
sbb
push
cmp
or
and
push
dec
rcrl
sbb
jle
dec
in
sbb
pushf
pop
stc
repz
mov
push
out
add
loopne
pop
pop
and
movsl
cld
pop
popa
mov
jg
jle
jl
inc
push
xor
pop
dec
cli
or
dec
inc
aad
mov
negl
es
inc
inc
inc
mov
push
mov
insb
test
repnz
movsl
in
adc
mov
loop
hlt
lock
mov
jmp
xor
and
mov
jnp
in
adc
xlat
repz
jge
jnp
push
movl
js
mov
xor
mov
call
xlat
aam
std
std
cs
cmpsl
jne
ret
add
xchg
shlb
jmp
mov
pop
add
adc
es
outsl
mov
pop
inc
and
cmpsl
mov
sarb
add
pop
add
ds
aad
xor
add
push
push
mov
insb
mov
jg
adc
addr16
dec
push
push
and
or
sbbl
popa
cltd
mov
stc
inc
push
jne
inc
test
add
imul
das
lea
pop
ss
les
sub
imul
lds
popa
je
xchg
mov
nop
in
push
sub
xchg
aaa
idivb
and
fidivs
and
xchg
cmc
mov
sbb
js
int3
mov
loopne
xor
loop
mov
jne
mov
cltd
test
popf
movsl
mov
xor
mov
mov
push
fisubl
fildll
addr16
mov
pop
movsl
fs
out
mov
or
or
ret
lds
cmc
aaa
loope
addl
mov
push
inc
fs
in
daa
repnz
test
pushf
orl
mov
jl
pusha
movsl
fimuls
pop
pop
jo
ret
mov
mov
imul
jl
lock
xchg
pop
ds
cmc
sbb
sub
scas
push
sbb
jmp
xchg
mov
push
pmaxub
test
mov
push
dec
lock
or
aam
mov
inc
push
test
push
je
sub
in
jb
mov
lods
lret
mulb
fadds
lods
inc
jae
insb
add
cmp
mov
popf
pop
or
loope
ja
xchg
fistpll
sbb
in
xchg
stc
adc
fsubrs
aas
cmp
in
mov
loopne
repz
inc
jnp
jle
cmp
pop
daa
cmp
adc
lcall
lahf
jno
icebp
shrb
mov
repnz
mov
mov
cmp
adc
imul
mov
shrb
dec
inc
shlb
jo
push
out
pop
xor
pop
sti
xchg
xchg
xchg
int
xor
out
dec
pop
call
rol
xchg
bsf
adc
add
mov
loopne
mov
xor
sbb
xchg
cs
fistpl
inc
jl
imul
jecxz
stos
hlt
fwait
pop
out
adc
mov
adc
push
cmp
test
jbe
hlt
fucomp
enter
jmp
xor
add
sbb
cs
icebp
cmp
and
mov
imul
lea
mov
or
ror
mov
pop
sar
imul
scas
or
insb
push
cli
ja
pop
jae
push
xchg
mov
mov
mov
int
movsl
enter
push
xor
mov
dec
out
jg
out
pop
stc
mull
mov
mov
dec
inc
sub
or
jo
mov
subl
rorl
lds
nop
jbe
add
testb
subl
movsl
or
adc
mov
out
mov
pop
push
fwait
sbb
pop
rorl
outsb
faddl
lock
test
sbb
jo
jbe
mov
cmp
push
jb
stc
pop
mov
std
xchg
mov
fsub
add
mov
dec
xor
xchg
cmp
add
fstpl
adc
mov
out
cmpsl
cmp
mov
enter
pop
cmp
pop
dec
cmp
pop
in
into
lea
lcall
inc
es
out
int
push
and
pushf
mov
mov
inc
and
add
int3
xchg
jge
sti
xchg
fs
insb
lock
xchg
mov
push
fwait
ret
mov
lods
pop
sub
enter
cwtl
inc
adc
popa
scas
ss
sub
in
xor
ret
dec
lcall
es
outsl
pop
pop
cmp
mov
clc
out
and
xor
inc
movsb
xor
mov
rclb
sub
sub
rorl
test
pop
mov
lret
sarl
jge
stc
mov
loop
adc
pop
add
ja
mov
bts
adc
inc
jg
ljmp
idivb
shlb
cmp
lds
iret
scas
stos
fidivs
pop
in
adcl
in
or
aam
add
mov
ret
cmp
dec
and
inc
icebp
cmc
stc
adc
out
stos
sbb
imul
lcall
ret
mov
sbb
xlat
aaa
insl
sub
test
daa
inc
sub
and
orb
pop
add
xchg
xchg
xlat
test
das
or
xor
fiaddl
cltd
mov
cs
fldcw
push
sbb
fcompl
sti
push
jg
jge
xor
hlt
or
mov
mov
ret
lret
mov
cmpsl
icebp
inc
mov
push
lcall
add
cwtl
js
out
sbb
pushf
lods
fidivrl
adc
mov
icebp
dec
test
push
mov
enter
lea
aaa
pusha
add
dec
pop
or
stc
cs
notb
mov
cltd
jge
and
repz
jbe
jne
int3
fwait
lock
push
fstpt
loope
and
mov
or
add
dec
cltd
cwtl
lods
add
inc
mov
imul
jp
add
inc
inc
lret
dec
inc
stc
aaa
mov
and
movsl
ss
mov
sti
icebp
sbb
mov
mov
adc
arpl
es
push
mov
andb
in
outsl
push
or
sub
in
lcall
or
outsl
stos
xor
inc
cmp
push
xor
mov
xor
mov
cltd
inc
push
jae
outsl
push
add
call
jbe
cs
loopne
inc
aaa
sub
mov
fisubl
jnp
daa
xchg
test
pushf
lods
sbb
and
adc
test
or
test
inc
imul
cmp
pop
or
mov
sbb
add
in
repz
cmp
push
pop
add
add
dec
mov
xor
dec
cmpsb
test
adc
addr16
sahf
push
leave
and
cmp
ret
int3
gs
dec
je
repz
xchg
pop
cmpsl
insb
icebp
jnp
sub
lret
dec
and
inc
jge
mov
sub
and
push
add
and
jecxz
cmp
pusha
inc
jg
sbb
ss
xor
cwtl
leave
push
sti
sbb
in
cwtl
scas
and
out
movsl
fldcw
in
lret
repz
inc
cmp
add
add
test
jno
and
jl
sbb
clc
out
dec
fistpll
mov
mov
dec
test
lods
scas
popa
into
pop
xor
stos
and
int
movsl
cltd
lds
inc
jl
movsl
xor
push
shl
test
xchg
bound
or
rclb
sti
in
mov
adc
andl
arpl
mov
sub
xchg
mov
inc
xchg
sbb
pop
dec
test
maskmovq
mull
loope
inc
pop
lret
cs
repnz
sub
xor
adcl
js
pop
imul
lds
push
stc
inc
movsl
mov
add
imul
cmp
clc
pop
inc
dec
subb
ffreep
add
es
adc
into
stos
lea
stos
pop
lret
push
repnz
fisttpl
inc
int3
or
outsl
jns
test
jecxz
inc
sub
mov
out
mov
in
es
mov
pop
or
popa
inc
pop
outsb
incb
mov
push
in
adc
out
push
mov
and
rcr
sub
jb
int
jecxz
and
fwait
xchg
cmpl
lods
sti
popl
aam
cmp
push
aas
popa
mov
cmc
repnz
inc
sub
push
lods
dec
inc
flds
sbb
hlt
in
ss
jle
mov
pop
push
or
push
xor
inc
push
test
addr16
in
and
cltd
insl
or
inc
xchg
cmpsl
fiadds
push
cmp
enter
daa
es
icebp
push
imul
push
xlat
leave
xchg
mov
and
xchg
xchg
xor
outsl
mov
add
jno
mov
push
insl
xor
mov
enter
mov
andl
adc
test
mov
cltd
xlat
lahf
lods
push
or
mov
rorl
pop
sarb
idiv
pop
mov
push
push
movsb
test
add
and
pop
fwait
imul
loope
mov
add
xchg
repz
jge
pusha
in
je
fdivl
mov
push
mov
pop
shl
mov
sub
xchg
or
dec
or
cmp
mov
and
arpl
inc
out
ss
mov
stos
mov
test
fld
cmp
pop
out
mov
cmpsb
jb
xor
ret
push
addr16
lahf
dec
pop
jecxz
rorl
xor
lcall
int3
arpl
dec
jle
ja
cmp
push
ficoml
cwtl
pop
jne
or
jge
jecxz
aas
test
push
cmpsb
mov
arpl
mov
idivb
adc
adc
mov
clc
pop
roll
enter
lods
mov
jnp
sbb
inc
in
xor
xor
jg
decb
pop
sti
cmovle
loopne
dec
add
inc
lcall
cltd
push
sahf
cltd
inc
sbb
xchg
jg
and
xor
adc
fdivrl
jle
jp
xor
mov
mov
mov
mov
sbbl
adc
call
rol
das
les
adc
fwait
neg
sarb
mov
lahf
scas
int
jae
mov
push
rep
or
packssdw
and
imul
add
loope
lock
leave
mov
jle
push
push
imul
push
push
pop
adc
outsb
sbb
repnz
mov
in
xchg
scas
dec
lock
scas
push
push
daa
cmp
inc
out
sahf
int3
inc
push
in
sub
hlt
xchg
shl
and
jne
xorb
lret
aam
pop
sti
pop
cmp
and
fisubrs
lret
mov
popa
push
xor
pushf
mov
mov
ret
push
sub
loope
arpl
push
cmc
cs
cwtl
mov
cmpsl
and
in
addl
shrl
cmp
lfs
es
xchg
sub
dec
leave
lret
mov
outsl
outsl
sub
fbstp
lods
sub
mov
push
ljmp
out
sub
mov
cli
popa
xchg
into
and
iret
push
mov
inc
inc
pop
pushf
lret
sbb
mov
sbb
cmpl
sub
mov
leave
inc
and
inc
sub
popf
les
test
pop
lea
test
stos
out
push
mov
xchg
xchg
inc
dec
repz
scas
pushf
fists
loop
out
or
cmp
sahf
lret
adc
or
mov
and
jae
pusha
aas
push
inc
inc
jns
mov
ds
adc
sbb
xchg
stos
lock
sub
stos
fdivp
xor
jno
cmp
inc
add
movsl
mov
mov
cmp
hlt
lret
loope
dec
add
in
sbb
lahf
das
sub
dec
and
lock
push
xchg
popa
shlb
and
ficompl
loope
mov
into
adc
dec
and
adc
sub
mov
dec
cs
mov
dec
adc
mov
lcall
xchg
or
cmp
and
sahf
call
jbe
jp
jmp
pop
lock
test
mov
rolb
cmp
fistl
push
sub
push
stos
mov
jle
or
and
or
out
lret
pusha
adc
rclb
icebp
mov
cmp
shl
mov
shll
mov
rcll
mov
mov
mov
mov
cltd
mov
movsb
mov
cmpsl
fwait
dec
out
call
cmc
scas
mov
nop
cltd
push
dec
dec
inc
lock
je
add
mov
je
pusha
jle
and
fstps
jle
jg
xor
xor
iret
aaa
pop
mov
add
ret
xor
xor
stos
out
xor
mov
paddd
pop
sub
pmulhw
sbb
fs
repnz
lods
mov
push
mov
xlat
inc
mov
dec
dec
enter
inc
or
pop
xchg
push
xchg
test
mov
popf
and
fwait
inc
inc
lahf
add
movsb
mov
aad
lods
andb
or
nop
pop
mov
pop
fs
out
ljmp
sub
jmp
aad
aaa
xor
shufps
mov
clc
inc
mov
insb
je
repz
fistpl
jb
cmp
mov
and
adcb
sub
pop
testb
xor
insb
movsb
ds
das
adc
ret
out
sbb
sbbl
and
pushf
pushf
jb
lret
fcomps
cmc
sbb
dec
mov
mov
in
jns
in
ljmp
dec
lea
pusha
mov
push
mov
outsb
dec
rcl
push
jmp
mov
push
or
sbb
and
cmc
sti
fcomps
mov
pushf
push
aad
stos
lahf
inc
inc
decl
push
push
or
cmp
add
mov
xchg
mov
pop
scas
les
pop
inc
sbb
fisubl
mov
int
fcoml
stc
push
das
add
lahf
add
mov
jl
in
in
lret
mov
pop
arpl
pusha
mov
mov
mov
jmp
scas
add
pop
mov
pusha
pushf
loop
cwtl
adc
ss
outsl
jge
sahf
sbbl
push
cli
out
jno
and
into
xchg
jge
inc
imul
jp
push
cli
das
push
inc
lock
inc
add
dec
sbb
xor
mov
enter
sbb
sbb
cmp
cmp
clc
pop
sbb
stos
rclb
jmp
mov
stc
push
xchg
nop
lcall
pop
cmp
pop
sub
dec
outsl
sub
bound
cli
repz
jle
dec
lds
pop
adc
pop
or
inc
fidivrs
inc
inc
xlat
sti
mov
nop
mov
mov
paddw
mov
rclb
xchg
lds
mov
mov
lods
cli
sbb
xor
pushf
test
sub
and
sub
mov
testl
mov
jbe
pop
scas
mov
cmp
push
ja
and
in
jno
sahf
rcll
push
inc
add
shl
or
push
icebp
sbb
mov
mov
outsl
xchg
ficomps
das
fisubs
into
stos
int
and
rcr
add
lahf
arpl
push
jne
inc
outsl
in
loopne
les
push
lcall
insb
inc
push
lcall
cmpsb
lret
sarb
test
imul
out
jnp
lfs
or
fsubrs
jne
jl
in
lods
test
push
inc
xor
imul
mov
into
lods
in
ja
clc
cmp
orb
or
insl
add
rcrb
std
or
mov
or
mov
push
adc
mov
xchg
sbb
lds
and
and
mov
mulb
fdivrs
cwtl
pop
in
add
xor
push
sbb
out
testb
lcall
add
push
lock
mov
addl
sbb
cli
cmovl
and
nop
cmp
ss
mov
mov
or
lods
push
scas
outsl
scas
xor
in
mov
int3
in
ljmp
imulb
adc
in
scas
ficoms
cmc
xorl
pop
adc
ljmp
imul
aaa
xchg
mov
cmp
int
push
mov
outsb
imul
out
xchg
mov
pop
pop
mov
jo
fdivl
add
jne
mov
test
xchg
repz
jge
sbb
dec
fadd
inc
pop
jl
pop
add
xor
mov
jno
cwtl
jecxz
and
arpl
jno
mov
dec
cmpsb
xor
pop
jg
xlat
jmp
repz
outsl
sti
notb
sahf
rorl
and
faddl
negb
push
ljmp
pop
and
std
lea
imul
and
mov
out
add
aaa
mov
and
and
movsb
sbbb
lahf
adc
stos
lcall
cmp
nop
sub
js
leave
and
sub
in
les
int3
loopne
cmpsl
add
mov
jg
or
test
mov
stc
sbb
xor
mov
imul
or
mov
xchg
test
loopne
aam
inc
outsb
int
or
into
jmp
inc
and
cli
pop
out
mov
and
cltd
mov
mov
in
lcall
insb
or
jo
fsubrp
movsl
push
sub
inc
mov
in
adc
xchg
call
into
cs
outsl
add
sbb
push
adc
and
test
adc
push
daa
fldcw
shlb
mov
mov
add
cmp
push
enter
and
insb
xchg
sub
ja
xchg
jbe
out
mov
mov
insb
loop
arpl
call
cltd
push
jne
mov
subb
sbb
fnsave
pushl
dec
test
mov
mov
pop
mov
iret
mov
or
sahf
push
mov
push
clc
or
dec
movl
out
pop
aas
cmp
fdivr
push
cmp
ds
or
or
cmp
pop
les
arpl
test
mov
jle
pop
xchg
push
lds
movsb
sarb
and
in
fcoms
test
push
ljmp
mov
jno
pop
jb
fimull
push
ret
pop
std
add
loopne
mov
mov
push
or
push
std
clc
int
cmpl
pop
cmp
lods
add
insb
pop
dec
inc
sbb
ljmp
pop
call
call
in
dec
cld
aam
mulb
aaa
mov
mov
sbb
enter
call
je
movsl
movl
adc
push
or
mov
and
leave
stos
or
dec
fistpl
push
inc
inc
in
aaa
cmp
mov
rcrl
std
and
lods
vmaxpd
sub
sbb
loope
inc
push
mov
dec
mov
xor
faddl
imul
es
push
test
and
inc
ljmp
dec
out
mov
or
mov
in
sub
fsubl
and
push
and
or
pop
and
xor
push
enter
push
push
push
movsb
jge
dec
scas
push
pop
sbb
push
push
inc
add
jge
jp
addr16
xchg
lret
dec
icebp
and
jge
pop
pop
pop
test
and
add
pop
mov
fdivrs
mov
fnstenv
mov
mov
imul
cld
int
xchg
leave
cmp
insl
adc
in
repz
in
sbb
dec
jae
or
xchg
clc
xor
ficoml
xchg
cmpsb
pop
movsb
mov
lods
jp
mov
inc
ljmp
mov
xor
sub
push
dec
stc
or
mov
cmc
cmp
xor
add
xchg
add
jno
cmc
push
jg
jne
roll
js
dec
and
adc
test
jno
adc
pop
dec
inc
mov
enter
sub
arpl
or
mov
test
or
lds
xchg
pop
xchg
pop
mov
jns
popa
orl
push
repnz
les
dec
push
enter
xor
sub
pop
cmp
shll
outsl
sub
cmp
inc
mov
push
dec
lods
cmpsb
leave
xchg
jg
mov
jns
imul
push
dec
test
in
xor
out
call
rolb
cmpsb
adc
fiaddl
pushf
cwtl
sub
jmp
jbe
int3
stc
and
inc
insb
std
push
mov
shlb
aaa
ret
xlat
xor
dec
or
adc
mov
jge
enter
insb
push
inc
repnz
push
dec
cwtl
fiaddl
mov
daa
insl
sub
mov
outsb
in
mov
push
aaa
rorl
movsb
xchg
add
jg
jns
xchg
cmp
xchg
xor
xor
mov
mov
jne
mov
aad
test
pop
push
mov
jecxz
test
mov
loope
sbbl
mov
mov
mov
push
faddl
loop,pt
jbe
das
sub
jmp
or
push
movsb
push
xor
lods
lods
ds
loop
lret
pushf
hlt
jmp
mov
fcomps
jle
adc
stos
push
xchg
mov
add
xchg
xchg
insl
fwait
dec
jns
arpl
andb
xchg
fildll
mov
scas
bound
cmp
movsb
xor
or
and
xor
mov
add
popa
in
mov
pop
mov
sarb
mov
add
repz
xchg
ljmp
insb
mov
and
fistps
xchg
add
fisttps
mov
scas
loopne
mov
ret
jg
sub
dec
inc
jecxz
in
int
in
aad
cmp
dec
js
fs
lret
mov
jp
imul
and
popf
or
jle
shlb
je
mov
add
sub
adc
ss
add
mov
mov
inc
sti
cmc
inc
lea
inc
jno
mov
lds
sbb
out
adc
stos
mov
fdivs
cmp
int3
lret
and
inc
mov
imull
ljmp
aas
push
mov
pop
mov
mov
insl
sarb
mov
or
push
jne
push
xchg
bound
scas
mov
or
lods
mov
jecxz
jmp
jecxz
jl
push
or
int3
sbb
subb
mov
pmullw
gs
and
push
cmp
add
test
loopne
into
xor
add
xor
ja
cmp
es
jne
jp
leave
aaa
sbbl
sub
adc
lahf
fbstp
mov
xchg
push
push
mov
jae
bnd
jmp
je
xchg
test
jne
xor
cld
and
in
cmpb
fisubrl
mov
push
mov
jmp
std
popl
mov
cmp
out
mov
mov
mov
movsb
rolb
shlb
scas
mov
and
cmp
pcmpgtd
ja
add
mov
pop
push
and
aaa
inc
push
cmp
fcoml
push
or
cmpl
loope
pop
cmc
xchg
jne
stos
inc
idiv
push
mov
or
rclb
popf
in
pop
dec
or
and
lods
es
lods
push
fs
adc
lods
mov
or
push
or
inc
std
sub
mov
ret
push
test
cmp
test
sbb
mov
cli
cmpsb
xchg
jbe
ds
inc
pushl
xor
inc
arpl
or
sbb
dec
into
call
mov
sbb
or
add
ja
std
jmp
repnz
xchg
jp
jae
popa
xchg
mov
std
push
cmp
jo
inc
adcl
xor
test
adc
sub
sub
test
inc
pop
add
xchg
loope
mov
mov
subb
push
cmpsl
xchg
push
stc
inc
or
lods
fists
sbb
push
jns
cld
sbb
imul
call
add
and
jns
mov
lock
inc
add
insb
or
enter
addl
ds
inc
test
push
mov
xchg
mov
add
test
aad
jecxz
adc
arpl
pop
mov
fucompp
outsl
cld
mov
pop
xchg
jo
mov
pop
pop
cwtl
sub
ja
cmp
je
je
inc
add
scas
shll
push
sbb
clc
adc
rcll
fsubrl
adc
ljmp
push
rcll
inc
negb
dec
push
sbb
pop
mov
notl
mov
pandn
and
add
lock
and
sbb
and
mov
mov
jnp,pn
rcl
rol
push
iret
arpl
adc
mov
data16
or
stos
mov
repnz
aad
jnp
pop
adc
je
fs
fcomps
in
faddl
or
in
cwtl
test
stos
outsb
jae
dec
loopne
imul
mov
inc
iret
pop
pop
cs
cmp
dec
mov
jp
cmc
mov
scas
je
lea
inc
cmpsb
ljmp
sbb
pop
aad
mov
fcompl
dec
sbb
sub
cmc
orl
ret
and
xor
mov
mov
pop
cmp
nop
imulb
data16
sbbb
loop
cli
xchg
into
clc
xchg
jne
in
mov
xor
into
lcall
stc
repz
inc
push
push
fs
dec
push
lret
iret
cmpsl
add
scas
cmp
fcoml
jae
dec
mov
pop
add
pop
adc
mov
xor
push
mov
mov
arpl
pop
pop
pusha
cmpsb
jle
call
loope
in
out
popa
xor
or
sub
and
push
divl
mov
cmp
or
xor
and
xchg
mov
jns
fs
int3
dec
sahf
pushf
cmp
inc
push
ret
aaa
mov
loopne
into
pusha
and
cmp
cmpsl
and
adc
xchg
das
insb
icebp
jle
clc
fcompl
test
pop
gs
or
jb
or
xor
jle
jecxz
xchg
dec
xchg
inc
jnp
repz
out
sahf
loop
ss
gs
flds
dec
mov
lcall
in
in
out
inc
cld
mov
xchg
mov
xor
jns
jb
mov
mov
leave
sbb
pop
rcrl
aad
pusha
enter
push
adc
data16
pushf
or
ja
aas
mov
pop
lcall
ljmp
push
xchg
mov
mov
rolb
es
add
pushf
shl
mov
mov
push
roll
and
mov
rolb
mov
cmc
sbb
push
add
mov
pop
mov
mov
idiv
sub
sbb
outsl
push
dec
or
xor
outsb
push
sbb
xchg
out
filds
nop
pop
test
inc
mov
sbb
repnz
xor
mov
pop
mov
add
roll
mov
jo
cltd
push
pop
and
andb
dec
pop
mov
jno
fsubl
imul
out
xchg
es
adc
pop
dec
psllw
hlt
mov
and
aas
sub
fstps
push
mov
jno
pop
sbb
loop
outsl
mov
roll
adc
mulb
ds
inc
cmp
insl
mov
sub
les
mov
out
aas
es
mov
push
push
or
in
push
fisubrl
pop
adc
adcb
cwtl
arpl
xchg
adc
out
push
pop
cld
mov
mov
and
mov
push
push
push
cmp
faddl
cmp
pop
cwtl
stos
inc
scas
sbb
fidivrl
sar
call
mov
adc
xchg
mov
push
fcompl
pop
and
in
rorb
fadd
je
jbe
fists
cmp
pusha
sti
inc
pop
inc
adc
push
into
jae
int3
mov
gs
jp
or
push
inc
dec
ja
sti
push
bound
adc
cmp
sub
movsl
fisttpll
dec
test
sub
mov
dec
jmp
sub
dec
jno
sbb
lock
xor
fidivl
sahf
jns
jae
aad
jp
lret
insb
or
dec
mov
sub
popa
and
arpl
out
sbb
sbb
lcall
int
mov
in
lret
push
cltd
pop
adc
fcmovnbe
dec
mov
stos
inc
jecxz
sub
dec
mov
fadd
and
jae
push
mov
add
inc
movsl
dec
dec
or
push
fs
add
scas
cld
cmp
out
mov
cmp
pusha
pushl
mov
xchg
mov
sub
in
or
aaa
sub
ja
vpaddsw
js
xchg
xchg
dec
xchg
fmuls
add
inc
testb
mov
imul
pop
lock
dec
push
int
mov
leave
sub
addr16
mov
loopw
stos
ret
mov
mov
aad
mov
clc
inc
fdivrl
xchg
fwait
imul
adc
sti
enter
or
dec
dec
andl
sar
icebp
dec
inc
movsb
out
mov
fidivrs
mov
xor
pusha
or
sub
pop
inc
jp
add
fs
sti
mov
icebp
div
jnp
loopne
lods
push
mov
rcr
xor
xchg
test
mov
and
push
rcrb
jl
xor
cli
jp
push
test
jae
xchg
mov
xchg
lods
jae
shlb
out
in
js
test
ja
pushf
daa
das
push
sbb
dec
stc
inc
testl
repz
add
cmp
imul
pushf
jg
dec
stos
repz
inc
adcb
imul
nop
xlat
out
movsl
cmp
into
mov
hlt
adc
push
cmpsl
arpl
hlt
add
fucomi
push
loopne
pop
jno
xchg
jg
out
xorb
sub
call
lods
adc
mov
insb
lahf
sbb
daa
into
adc
mov
xchg
outsl
push
es
loop
inc
xchg
mov
inc
popf
inc
aam
stos
test
aas
test
push
and
lret
cmp
test
cmp
daa
pop
add
mov
cwtl
or
mov
clc
cld
add
or
fcmovnu
imull
lcall
mov
xor
je
jle
daa
outsl
jns
fisubrl
push
ret
cmpl
jne
jl
xchg
mov
pop
dec
sbb
popf
filds
or
xchg
inc
adc
adcl
mov
enter
sub
cmp
fwait
je
inc
sbb
movsb
test
xor
inc
push
repnz
ds
mov
inc
hlt
jns
test
mov
cmp
jle
lret
sbb
mov
mov
jecxz
mov
pop
pop
rolb
jge
stc
cmp
dec
insl
jo
cmp
cmp
adc
adc
aas
loope
mov
mov
imul
pop
xchg
cmc
add
ss
lds
xchg
insl
pop
movsl
adc
lea
test
pop
lock
jp
mov
test
pmaddwd
push
lods
cs
ss
ficomps
out
adc
fcomi
and
in
xchg
stos
outsl
cmpsl
xchg
inc
adc
out
xchg
add
scas
lods
mov
lret
sub
add
lret
fs
sbb
in
jne
mov
rcll
sbb
push
dec
test
clc
mov
add
aaa
pop
idivl
das
je
loope
test
jnp
adc
sahf
addr16
imul
xchg
add
cmpsb
popf
dec
inc
xchg
je
test
or
jae
fidivrl
mov
push
lods
pop
cmpsb
scas
pop
lcall
xor
fidivrs
movsb
jbe
in
add
lcall
add
mov
lahf
xchg
mov
pop
stos
mov
or
icebp
push
shlb
or
xchg
sub
mov
movsl
adc
dec
jb
jb
fcmovnbe
push
dec
in
mov
jge
mov
jne
aad
negb
xor
and
cwtl
sbb
jnp
adc
scas
add
test
imul
fimull
inc
dec
mov
fsubr
icebp
sub
fnstenv
in
or
mov
pop
enter
rcl
xor
and
lcall
arpl
pusha
push
idivb
in
jmp
movsl
mov
dec
int3
push
sbb
fnstenv
xor
jle
rorl
adc
daa
aam
iret
mov
clc
jmp
add
inc
and
dec
mov
pop
cmp
add
cmpsb
mov
add
and
mov
cmpsl
std
lock
lds
sbb
inc
add
fcompl
jecxz
out
pop
push
mov
adc
mov
adc
sub
in
outsl
cmpsb
cs
push
lock
jnp
subb
sbb
pop
cmp
jl
jecxz
ss
add
adc
mov
lret
push
jp
hlt
out
mov
jmp
into
sahf
push
cmp
push
lock
sahf
jge
jg
push
cmc
and
lods
imul
cld
jno
popa
cmp
mov
out
popf
sbb
popf
arpl
jb
pusha
mov
test
mov
inc
push
push
sahf
cmp
adc
ldmxcsr
test
loopne
outsl
dec
jno
mov
or
fucomp
push
ret
arpl
mov
sub
inc
stos
cld
sbb
popf
xchg
sub
clc
mov
push
push
fmul
and
insl
xchg
inc
pop
mov
aas
push
mov
inc
push
loop
sbb
jmp
sbb
imul
and
jnp
cmp
in
jne
mov
aaa
mov
movsb
inc
fnstsw
div
loopne
aas
fistpl
das
out
clc
stos
jbe
push
das
repz
sbb
cmp
lods
ja
sti
imul
lcall
lretw
adc
mov
std
and
push
xchg
mov
shrl
dec
push
in
push
insb
xchg
clc
push
xchg
adc
push
or
es
xor
ds
vunpcklps
stos
enter
jbe
dec
lret
or
leave
mov
std
dec
sahf
mov
jl
and
fld
aam
mov
iret
xor
sub
rclb
pop
and
movd
mov
cltd
pop
cmp
aam
cwtl
fldcw
inc
mov
add
imul
loopne
je
or
mov
aas
dec
js
ss
dec
pop
es
cmp
in
pop
pop
cwtl
popf
add
and
aam
dec
jge
cltd
out
mov
test
stos
scas
clc
in
ss
lret
mov
dec
sbb
xor
test
lds
xor
sbb
jecxz
in
push
scas
mov
jecxz
adc
lods
lock
pushf
test
shlb
cli
rorb
roll
out
popf
jecxz
xchg
dec
imul
mov
xor
js
mov
adc
fwait
sbb
inc
push
mov
jecxz
push
jnp
mov
insb
mov
cld
xchg
in
jmp
int3
ss
jno
cmp
cmp
jbe
cmp
push
js
sti
fidivs
pop
rolb
stos
pop
push
inc
outsl
cmpb
or
fs
nop
inc
lods
mov
leave
pop
inc
push
fdivl
mov
dec
leave
mov
hlt
pop
add
lret
pushf
int
pop
or
jl
adc
fwait
jmp
fcompl
xor
pop
out
icebp
and
lcall
push
pushf
mov
mov
or
mov
les
shrb
in
mov
pop
out
movsl
cli
mov
xchg
sti
pop
dec
pop
jbe
inc
out
ret
or
xchg
inc
aad
stos
popa
es
call
sbb
sti
add
cmp
scas
push
cs
push
jae
and
mov
cmp
push
stc
jecxz
pop
inc
fmull
fdivs
dec
mov
rcrb
cltd
inc
pop
aam
jno
sub
imul
inc
pop
insb
pop
pop
shll
dec
pusha
mov
mov
pop
mov
add
out
nop
push
sbb
mov
test
ja
shl
insb
bound
aas
jg
adc
push
hlt
stos
imul
or
adc
xchg
in
in
jbe
jns
lcall
mov
ss
mov
xor
xchg
dec
mov
inc
xchg
cmp
ficomps
ljmp
arpl
jge
push
mov
or
adc
cmc
cmp
jl
out
movsl
inc
xchg
fwait
inc
mov
pop
push
cmpsl
jo
out
inc
js
pop
xor
jmp
push
mov
mov
lcall
mov
jbe
orb
jnp
movsb
cmpb
lret
in
and
adc
mov
xchg
pop
xchg
in
andb
sub
jge
mov
fistps
jp
pusha
shlb
push
jmp
test
mov
inc
out
xchg
add
xchg
pop
and
push
loop
sbb
outsb
add
xchg
lea
dec
lock
add
cmpsl
test
clc
movsb
cmp
lock
push
mov
sub
test
add
and
sub
pop
pop
xor
lock
sarl
ficoml
pusha
int3
mov
shrb
sub
cmpsb
mov
shlb
sti
cld
pop
cmc
mov
pushf
dec
add
outsl
scas
mov
jae
sbb
xchg
jns
test
push
cmpsb
test
fs
cbtw
mov
inc
jg
push
sub
aam
mov
push
ret
lea
or
xchg
inc
rolb
xorb
std
test
nop
out
push
inc
and
sub
scas
pusha
dec
into
or
mov
std
mov
dec
mov
movsl
jno
lea
inc
pop
xchg
leave
fsubl
cmp
pop
jle
adc
xchg
test
int3
lret
and
or
outsl
insb
sarb
cmp
fisubs
or
out
lea
pop
stos
movsl
push
inc
call
in
cmpsl
xor
xchg
sbb
inc
cli
sbb
sbb
in
jp
mov
das
icebp
pop
cmp
inc
popf
xchg
int
js
cmp
ds
add
aam
pushf
cmp
inc
mov
lds
xor
sbb
sub
xor
mov
mov
add
adc
lods
sbb
xchg
int
cld
dec
mov
mov
mov
test
adc
jp
lret
gs
mov
dec
aas
aas
insl
xor
sub
mov
bound
pusha
push
mov
repz
xor
lcall
pop
cmpsb
pop
js
and
clc
lea
sbb
sbb
cltd
xor
cltd
out
pop
xor
xchg
lret
pop
pusha
and
dec
sti
out
lds
mov
pop
push
call
fidivs
sbb
pop
cmp
int3
push
mov
mov
pop
jo
stos
loope
mov
xchg
ljmp
es
bound
aad
sub
inc
sub
xor
lods
js
sbbl
std
leave
out
inc
or
xor
fbstp
aad
push
mov
mov
add
jecxz
jne
xlat
jge,pn
test
jecxz
fcomp
daa
mov
in
rclb
sbb
repz
lods
ds
sub
xlat
iret
mov
cmp
mov
adc
fs
sbb
lds
fistpll
push
mov
xchg
repnz
imul
push
popa
aaa
orl
cld
fisubl
xchg
xor
inc
dec
xchg
inc
hlt
das
orl
mov
push
push
roll
mov
jecxz
xor
mov
sbb
pop
add
push
inc
adc
arpl
fs
and
in
sar
mov
cmp
add
call
or
test
shll
test
jbe
push
adc
pusha
mov
rorb
mov
inc
mov
cmp
je
cmp
sti
fdivs
cmp
insl
lahf
jnp
xor
loope
mov
xlat
mov
pop
pop
fadds
mov
add
mov
out
mov
mov
repnz
sub
rcrb
test
push
repnz
mov
push
mov
mov
divl
lahf
and
jle
pop
scas
gs
imul
rol
inc
sub
shlb
sbb
xor
and
in
cmp
je
int3
add
out
insl
loop
adc
insb
imul
popa
repnz
cmpsb
fwait
xchg
mov
push
push
fwait
cmpsl
sbb
imul
cmp
popf
cmc
test
les
xor
sub
scas
mov
cwtl
jns
outsb
lcall
out
test
nop
sbb
mov
fcoml
daa
les
pop
repz
pop
in
cmp
cwtl
or
push
cld
in
mov
xchg
sti
dec
mov
dec
shlb
cmp
daa
daa
sub
popf
jbe
leave
ljmp
int
lahf
icebp
push
sub
testl
test
or
mov
mov
push
push
push
out
pop
mov
sbb
sahf
inc
punpckhbw
or
pushf
adc
sub
add
insl
and
cmp
push
roll
jbe
clc
mov
fiaddl
lret
pop
cmp
and
jp
inc
cs
mov
xchg
lret
mov
popf
insb
cmp
lret
sbb
std
pop
inc
jmp
cwtl
fstl
nop
jge
mov
push
adc
mov
mov
sub
js
das
pop
mov
or
int
movsl
jne
outsl
cmp
pop
pushf
pop
xor
sbb
stc
xchg
fdivrs
ficoms
fwait
jno
shrb
mov
jg
lock
push
ret
cmc
scas
loop
lods
out
orb
add
push
inc
inc
loopne
xor
mov
fdiv
popf
push
in
xor
xor
in
cmc
rorl
enter
ss
shr
jae
pusha
and
inc
in
and
dec
jp
sbb
outsl
ljmp
lret
add
cmp
idiv
adc
xchg
scas
xchg
pop
jmp
icebp
lcall
hlt
pop
jne
and
adc
and
inc
xor
add
jmp
insl
sub
or
adc
cwtl
arpl
aas
add
gs
and
dec
hlt
daa
pop
idiv
shrl
sub
or
push
cmp
mov
enter
fsts
cmp
pop
mov
push
mov
iret
mov
mov
push
insb
dec
int
scas
push
xor
pop
add
inc
and
call
fbstp
pop
test
stos
and
pusha
add
adc
jmp
dec
scas
js
inc
pop
jecxz
loop
mov
je
pop
pop
push
xrelease
arpl
shrl
stos
xor
mov
xor
dec
out
xchg
je
jae
inc
adc
fcom
ret
out
pop
stos
and
pushf
jle
ret
cmpsl
add
js
inc
stos
sbb
xchg
dec
inc
cwtl
pop
in
cmpsb
push
jne
mov
out
mov
cmpsb
adc
dec
fdivs
and
loop
jp
adc
and
cmp
push
adc
dec
jns
leave
cmp
add
test
or
jae
mov
mov
or
stc
xchg
pop
xchg
add
fildll
mov
push
out
push
lock
adc
sub
shl
add
leave
xchg
popa
fiadds
fsubrl
cli
push
stos
gs
test
push
push
dec
xor
out
or
fs
aad
in
loop
xor
jg
dec
int3
decl
sub
setno
sub
out
inc
adc
leave
ret
test
mov
rcrb
sbb
dec
cmp
mov
pop
addb
push
xor
jno
div
cwtl
je
mov
and
jmp
push
dec
out
xchg
sbb
xor
cmpsl
mov
fwait
divb
and
and
xlat
loopne
mov
cmp
inc
xor
dec
push
fwait
add
sub
ss
add
inc
int
dec
mov
dec
mov
inc
imul
loopne
jp
xor
or
mov
mov
cwtl
add
inc
mov
jmp
cld
popf
xchg
jp
ljmp
jg
adc
xor
jmp
scas
test
imul
and
and
int
add
and
outsb
pop
jmp
int
shrb
out
aaa
push
or
iret
sub
cwtl
jbe
cmp
jns
xor
jmp
pop
sbb
pop
into
sbb
inc
mov
adc
out
cmp
pop
add
repnz
es
mov
jnp
scas
adc
mov
dec
adc
cmp
push
arpl
xchg
cmpsb
xchg
push
lret
popf
sbb
fnclex
out
xchg
loop
add
popf
test
push
sub
xchg
lret
lock
cwtl
add
xchg
int3
fdivrl
cmpsl
xor
adc
xor
add
mov
shll
dec
jb
fucomi
repz
xchg
rcll
xchg
push
sub
popa
sub
sub
xor
pop
cltd
mov
pop
lds
test
xchg
inc
arpl
dec
cmpsb
xchg
insl
mov
mov
xor
test
adc
xor
pushf
xchg
insl
dec
repnz
insb
push
iret
shll
in
cmpsl
nop
imul
inc
mov
jge
xchg
inc
subb
in
mov
into
mov
fsubl
dec
pop
repz
sub
lea
jecxz
enter
inc
mov
outsb
push
sti
enter
add
jns
adc
nop
cmpsb
xor
jno
cmpsb
fbld
sarb
fs
dec
std
xchg
fdivrl
test
shrb
jg
and
enter
xchg
js
fildll
and
xor
test
std
imul
xchg
cmpb
push
in
verr
arpl
mov
arpl
ret
stos
insb
daa
scas
in
aam
push
pop
dec
pop
xchg
mov
scas
mov
ficoml
rcrl
cltd
fnstcw
fsubl
sub
test
jge
mov
sti
or
mov
dec
pop
call
cmp
xchg
push
lcall
sbb
sti
and
fdivrp
mov
test
push
insl
xlat
jno
shl
aas
bound
sahf
movsl
loope
adc
jb
mov
pop
lahf
std
mov
jl
or
add
cmpsb
mov
inc
mov
or
rorl
outsl
mov
inc
jl
rcrb
mov
fisubs
inc
in
mov
loop
push
in
mov
out
ds
mov
adc
pop
jno
ljmp
xchg
jbe
aam
jne
gs
pop
mov
lahf
xchg
hlt
jl
popa
outsl
icebp
mov
mov
dec
scas
push
cmp
add
aad
dec
xchg
addr16
ljmp
jecxz
cmp
cmp
test
jns
lods
lods
hlt
xchg
int
xchg
repz
out
into
loopne
inc
ss
dec
arpl
fldenv
stos
xor
add
shlb
and
add
sbb
inc
xchg
les
nop
mov
xor
lcall
std
in
sbb
dec
push
stos
mov
jbe
std
jmp
sahf
inc
cmc
push
testl
inc
xchg
fstp
cmpsl
out
cld
push
add
add
cwtl
xchg
jge
stos
pop
mov
mov
pushf
push
inc
out
hlt
loope
in
push
lcall
ret
add
jl
xchg
loope
xor
sub
mov
cli
jmp
adc
and
sbbl
loopne
push
dec
imul
out
xchg
arpl
or
add
stos
sbb
xchg
popf
hlt
xor
stc
jecxz
stc
pop
rcl
ret
loope
scas
or
sti
jns
xchg
sub
jge
stos
into
lods
push
jle
outsl
mov
pop
pop
test
xchg
popf
inc
jmp
int
xchg
insl
push
mov
xor
or
pushf
dec
xchg
arpl
push
add
and
shl
lcall
xor
cmp
lea
add
fisubrs
cmc
and
xchg
sub
insb
mov
dec
hlt
pop
repnz
mov
jae
repnz
mov
jne
ret
hlt
add
add
push
xchg
pushf
pusha
int3
out
mov
pop
jecxz
andl
mov
xor
pop
popf
shl
push
cwtl
aad
lret
repz
cmp
loope
das
xchg
cli
lods
rcrb
in
in
repz
add
mov
cmpsl
mov
ja
sub
rcll
mov
xchg
arpl
dec
adc
xor
fdivrs
mov
jecxz
out
fwait
mov
or
in
cltd
dec
fisubrl
dec
js
mov
arpl
popf
lods
es
push
xor
jbe,pt
mov
mov
cmp
outsl
call
outsl
xor
push
scas
mov
push
sub
lock
xchg
adc
clc
dec
mov
cltd
add
loopne
mov
fstcw
adc
xor
xacquire
sbb
mov
jo
mov
sbb
mov
test
incl
stos
js
and
jae
push
and
fsts
cmp
movsl
push
mov
sub
cmp
mov
mov
in
aam
xor
inc
movsl
add
and
ret
lea
cld
shlb
sti
push
mov
test
cwtl
mov
or
sbb
xor
pop
stc
pop
arpl
loopne
mov
dec
push
nop
aaa
add
inc
lds
mov
out
cmpsb
jbe
jne
test
aad
cmp
pop
rorl
repnz
mov
dec
popa
stos
mov
pop
mov
mov
push
testb
or
xor
xchg
aam
enter
jmp
in
test
ror
or
daa
addr16
dec
dec
and
jecxz
ficompl
scas
aam
mov
out
mov
jb
sbb
mov
jno
aas
in
cmc
push
ja
dec
addl
mov
in
push
inc
adc
sub
pop
movb
stc
inc
cmp
jg
repnz
mov
jecxz
mov
xor
push
mov
lea
add
pop
data16
xor
mov
xor
dec
cli
xchg
and
add
inc
push
popa
dec
cmp
lahf
xchg
andb
pop
mul
jnp
lret
lcall
sbb
subb
xor
cmp
pop
mov
les
push
mov
mov
cwtl
and
xchg
mov
mov
clc
pushf
inc
addr16
sti
add
incb
cmpsb
test
sbb
push
sub
outsl
mov
pop
out
mov
mov
adc
outsl
outsb
or
push
das
cmpsb
xchg
pop
jo
fidivs
mov
in
jecxz
mov
or
adc
push
aad
stos
bound
xor
lret
pushf
mov
mov
in
fs
sub
mov
and
call
cmp
push
cmp
lcall
popa
or
pop
xchg
lock
nop
mov
add
ljmp
in
movsb
mov
inc
and
js
or
aaa
xchg
sub
popf
pop
inc
inc
decb
push
das
mov
insl
aaa
jb
adc
adc
aam
fisubs
pusha
jnp
add
fdivs
adc
lods
insl
pop
mov
inc
add
lret
and
jnp
push
xchg
ja
xchg
cs
repnz
aaa
das
shl
mov
or
adc
and
xchg
ds
mov
iret
dec
outsl
push
xor
push
sti
or
lds
dec
jno
adc
test
pop
sub
aam
cmp
rol
adc
mov
mov
mov
test
outsl
add
pop
std
lea
dec
mov
outsl
jp
stc
inc
cli
icebp
push
push
mov
add
arpl
mov
mov
loopne
loope
push
and
stc
ss
dec
add
mov
cs
xchg
hlt
cmp
add
enter
add
sub
mov
or
stos
std
mov
lock
jle
dec
xor
in
lahf
mov
repz
pop
mov
outsl
or
pop
insl
jl
mov
fsubs
sbb
cmpb
mov
xchg
dec
aad
in
push
out
insb
stos
mov
sub
sbb
push
pop
xchg
sbb
inc
xor
iret
dec
xchg
fchs
pop
lods
jmp
out
jae
ss
sbb
int
inc
mov
mov
clc
jne
and
mov
dec
test
xchg
mov
dec
negl
bound
jne
addr16
cld
xchg
sub
push
jge
xor
mov
mov
repz
push
adc
in
sbb
fisubl
scas
and
outsb
adc
xor
push
pop
inc
filds
mov
jo
repnz
adc
lret
fmull
mov
xor
push
xchg
and
add
dec
movsl
jno
mov
pop
lock
add
or
jae
adc
ret
addr16
pop
jl
cmp
loope
mov
mov
cmpb
into
cltd
jns
xchg
push
xchg
jecxz
sub
xchg
jmp
sbb
jne
and
adcb
push
roll
mov
mov
push
pop
jnp
arpl
notb
adc
jl
push
xor
test
jbe
add
mov
pusha
inc
adc
imul
or
mov
cmp
test
sbb
jge
xchg
test
xor
cmp
daa
xor
adc
xchg
pop
repnz
cmc
scas
aam
adc
pop
out
test
loopne
mov
mov
cmp
outsb
and
out
rcll
dec
mov
mov
xor
cmp
rolb
inc
jp
popf
test
jg
adc
fisubl
xor
inc
stos
sub
pop
and
int
dec
ja
mov
mov
and
aam
movl
mov
push
or
pop
in
repnz
into
push
shrb
jmp
jge
aad
push
mov
adc
mov
pushl
test
cltd
or
xor
inc
dec
or
mov
pop
sti
cli
mov
mov
and
lods
cmp
jb
cmp
sbb
push
ret
jo
mov
sahf
xor
sti
lds
mov
mov
pop
add
add
sub
sub
jo
fdivrs
sahf
imul
xchg
jecxz
pop
fiaddl
mov
mov
xor
mov
push
lds
adc
mov
in
enter
sub
ret
loop
jbe
mov
or
aas
int3
lret
std
lods
inc
inc
mov
cmc
xor
js
or
ds
xchg
mov
add
jae
or
cmpsl
add
sbb
ljmpw
or
insl
mov
or
sbb
push
in
jbe
xchg
sahf
cwtl
push
test
cltd
aaa
movsl
jecxz
push
call
add
dec
shrl
imul
dec
popf
stc
and
mov
out
sbb
pop
jg
push
inc
xor
jmp
lcall
jae
sahf
in
jns
pop
out
pop
psubusw
fnstsw
popf
push
mov
adc
mov
jl
cltd
mov
data16
call
int3
mov
lret
xor
in
outsl
adc
cli
mov
push
pop
in
gs
jo
jl
jge
xchg
xlat
cmpsl
pushf
push
shrb
pop
in
pop
sbb
in
sbb
xor
xchg
loop
push
dec
xchg
cld
imul
outsb
pop
mov
aam
mov
inc
xchg
dec
mov
insb
push
cmpsl
sbb
int
imul
out
xchg
cmpsl
mov
data16
sti
in
dec
jmp
insl
and
rclb
lret
imul
lret
lcall
inc
mov
jb
ss
push
mov
test
aam
movsb
cvtps2pd
mov
rorb
or
pop
mov
loop
rcrb
mov
stos
test
loopne
dec
jecxz
cmc
pop
push
push
sub
sbb
push
xchg
adc
sahf
outsb
out
dec
repz
pusha
pop
and
or
push
mov
or
mov
and
les
fisubrs
dec
repnz
add
jp
jne
fisubs
jmp
inc
pop
filds
ljmp
in
sub
mov
xor
xchg
insb
pop
or
add
in
dec
enter
loopne
sbb
imul
jmp
hlt
in
dec
test
xchg
adc
or
push
mov
xchg
mov
les
outsb
hlt
stos
imul
mov
add
mov
push
push
inc
loop
fcoml
cmpl
jno
insl
sbb
lds
js
and
dec
stos
xchg
add
xor
rcl
push
mov
mov
push
lock
sub
adc
push
xor
bound
mov
add
adc
out
and
or
js
xor
inc
sahf
or
js
mov
ficoml
pushf
inc
mov
sub
es
loope
push
lahf
jge
addr16
sub
pop
jp
insl
lret
mov
adc
sub
fidivrs
movsb
out
enter
daa
jmp
incl
pop
loope
pop
in
and
lret
dec
push
push
xchg
leave
dec
enter
enter
lock
mov
sub
cwtl
daa
or
push
sahf
fistpll
pop
xchg
push
sub
jle
inc
test
cmp
cmp
jbe
test
inc
outsl
js
aaa
sub
movsl
sbb
sti
mov
sub
lock
sarb
mov
lcall
in
add
xchg
cmpsb
push
xchg
cmp
mov
div
or
xchg
addr16
repnz
out
iret
pop
push
lock
push
jg
in
test
inc
lret
xor
sbb
pop
rol
lcall
loope
jecxz
mov
in
pop
cwtl
iret
pop
mov
sub
adc
push
sbb
int3
pop
fstpl
jno
push
and
leave
add
mov
pop
adcb
out
pop
popf
imul
test
lret
mov
xor
add
xchg
into
mov
jecxz
mov
leavew
in
daa
aaa
xchg
loopne
push
rol
dec
jae
cmpsl
shlb
sub
cmpsb
bound
arpl
inc
pop
addl
scas
rorl
lret
fidivrl
scas
repnz
xchg
sbb
nop
mov
out
int3
out
clc
daa
subl
in
and
into
inc
test
pop
hlt
push
add
lea
push
mov
pop
scas
pop
or
push
in
jle
in
scas
aam
xchg
xlat
jo
inc
fcomi
ret
fwait
push
into
data16
xchg
push
dec
movsl
movsb
data16
pop
int3
repnz
popf
cwtl
push
dec
loop
rcrb
jecxz
or
lods
sbb
add
and
sub
mov
sbb
das
dec
fcmovb
or
stc
xor
ss
jno
cmp
mov
fistps
mov
push
mov
or
cmp
mov
es
jbe
cmp
call
pop
dec
lods
or
mov
lods
scas
mov
sbb
lock
outsb
mov
out
xchg
push
aas
addl
in
lods
out
sub
out
dec
aad
movsl
fldt
mov
mov
pop
push
scas
and
push
dec
daa
out
xchg
xlat
push
int3
xchg
push
aam
xchg
adc
in
adc
mov
jge
aam
mov
jb
roll
imul
es
mov
jae
mov
ljmp
outsb
test
sbb
fldt
mov
out
fisubl
bound
sti
push
jl
push
sahf
daa
fsubrp
cmp
mov
or
dec
or
inc
test
mov
addr16
ror
pop
ret
test
jb
sarb
ss
dec
mov
popa
stc
dec
into
inc
nop
mov
popa
inc
cwtl
in
fisubrs
jbe
cmp
dec
dec
mov
jb
mov
clc
xchg
test
mov
mov
mov
inc
lods
pop
aad
jae
xchg
out
mov
mov
sbb
fmull
ja
cmp
add
xor
jno
xchg
ret
icebp
mov
pop
enter
mov
int3
adc
xchg
cmpsb
cmp
stos
fidivl
push
pop
xchg
test
xchg
pop
cmp
mov
jns
or
or
shrl
incl
enter
pop
loope
loopne
jp
inc
out
divb
mov
sub
leave
imul
data16
mov
dec
std
fisttpll
cmpsb
js
or
push
add
je
jne
stos
adc
outsb
in
pop
adc
es
xchg
adc
es
les
fcomp
adc
scas
add
scas
pop
fistpll
sub
subb
add
pop
mulb
sub
aam
and
jmp
pop
je
out
ret
jp
sbb
pop
fldcw
int
jmp
mov
enter
daa
inc
mov
incl
sub
es
arpl
inc
fisttpll
and
sub
test
daa
dec
cmp
xor
cli
mov
xor
cld
int3
loope
js
call
mov
mov
push
jge
jb
jne
add
pop
in
xor
shll
enter
insl
cmpsb
icebp
push
ficomps
movsl
or
jmp
sbbl
int
xchg
je
lods
rcrl
out
int
scas
stos
xchg
fisttps
lcall
xchg
mov
xor
aas
or
jecxz
fdivs
jo
daa
push
lds
jle
jecxz
aam
stos
mov
outsb
cmpsl
push
sbbb
je
mov
les
imul
mov
mov
and
in
and
cmp
std
ficomps
fisubrs
sub
in
ret
push
cltd
xor
outsb
jmp
cmp
es
out
test
or
sarb
mov
inc
shlb
loopne
sti
push
shl
inc
ds
call
pop
call
mov
jb
or
gs
jno
mov
ljmp
ret
jmp
pop
xchg
clc
ds
or
je
sahf
push
adc
mov
cmp
add
mov
and
mov
xor
cld
adc
and
lds
push
aad
cmp
mov
imul
movsb
cmp
jae
or
movsl
shll
xor
pop
int3
adc
sub
ret
fadds
cmp
sbb
and
inc
js
pop
cmp
add
sub
pop
sbb
push
cmc
cmp
aam
sub
jmp
leave
push
jmp
sbb
push
add
stos
shlb
jg
cmp
mov
push
sbb
jo
and
mov
mov
addl
shll
mov
adc
call
mull
out
cltd
daa
jmp
outsl
pop
lret
add
scas
out
pop
cltd
xchg
mov
inc
popf
xor
shl
ja
fstl
popa
hlt
aas
sahf
test
mov
mov
pop
pop
pushf
cmp
notl
rclb
fdivl
fs
hlt
add
dec
int3
dec
pop
lret
in
in
and
js
iret
fsubl
jbe
fmulp
pop
mov
aam
push
xchg
adc
cmp
icebp
and
stos
out
enter
rep
cmp
mov
pushl
pop
addb
fadds
push
xchg
push
cs
cmovle
popa
outsl
pop
sbb
xor
mov
aas
stc
int
cmp
pop
mov
scas
xlat
inc
xor
adc
sub
pop
test
mov
add
jge
out
cmpsb
das
fistps
out
jo
dec
mov
out
imul
scas
sub
inc
mov
out
test
cltd
lods
testl
dec
aaa
sub
push
and
ret
adc
add
sub
sbb
and
push
lea
inc
mov
xorb
add
dec
je
inc
cmp
roll
jmp
lods
sbbl
ss
outsl
enter
mov
hlt
idivl
mov
add
cli
outsb
pop
jmp
es
and
int
lods
daa
inc
mov
repz
es
xor
into
xchg
imul
mov
dec
nop
orb
divb
push
pop
fsub
cmp
adc
sbb
push
clc
adc
push
mov
mov
push
jno
test
push
and
cld
xchg
jecxz
mov
mov
bound
cmp
aas
int3
lds
pop
cmpsl
pusha
test
sub
sahf
in
cs
push
jmp
scas
lds
test
dec
xor
mov
dec
and
repz
lret
scas
imul
mov
repz
adc
dec
or
mov
jnp
neg
and
out
icebp
packsswb
test
or
or
add
or
pop
or
test
ds
dec
adc
mov
in
mov
jns
xor
addr16
pop
movsb
test
popf
adc
jp
sbb
hlt
dec
push
mov
or
sub
in
scas
jb
mov
or
mov
and
mov
xchg
jecxz
jge
and
add
jge
inc
sbb
pop
mov
push
pop
mov
add
adc
bound
pop
and
inc
lds
addr16
cmc
out
sbb
repnz
out
and
pop
iret
xchg
or
repnz
cli
adc
dec
pop
xchg
mov
add
dec
sub
add
mov
push
das
push
pop
mov
aad
jle
sub
lock
and
cmp
xchg
jle
or
jl
insb
xchg
sbb
sub
aaa
pop
adc
js
cli
sbb
popf
and
or
into
xchg
lock
subl
sahf
nop
dec
sahf
cltd
cmc
dec
mov
enter
mov
adcb
jle
inc
imul
ljmp
imul
cmpsl
cmpsb
in
dec
cmpsl
push
lahf
sbb
repnz
orl
pop
popf
iret
test
adc
in
xor
cmp
xchg
dec
adc
and
outsb
mov
test
xchg
mov
cmp
lcall
sub
in
dec
repz
rcrb
or
repz
adc
adc
xor
mov
in
or
das
repz
fildll
inc
lock
or
dec
sbbb
sahf
xlat
cwtl
test
cs
push
or
insl
push
inc
mov
sbb
ss
xchg
mov
inc
outsb
or
dec
mov
jg
dec
cmp
inc
ret
mov
arpl
fwait
jns
iret
lret
lcall
and
ficomps
adc
sbb
sbb
mov
ficoml
in
notl
inc
xlat
cmp
lcall
imul
sbb
std
push
xor
lock
push
jg
push
popa
xchg
and
fstps
add
aam
sub
xchg
es
shrl
mov
ret
push
push
ret
dec
cmp
jle
and
dec
pop
imul
jb
add
fs
cmp
mov
ljmp
xchg
xchg
sub
cmp
lods
mov
xor
mov
outsl
lods
hlt
stos
aaa
push
adc
adc
mov
add
rcrb
dec
xor
movsb
test
push
test
dec
scas
lcall
sub
mov
in
rorl
pop
push
pop
cli
pop
aaa
das
std
cmp
pop
imul
mov
ret
jmp
out
adc
aad
pop
mov
je
inc
repnz
sbb
stos
call
das
add
push
shll
test
sub
imul
jns
dec
insb
xchg
add
mov
in
aaa
fwait
aaa
hlt
push
xor
je
or
cmp
fucom
add
cli
out
xchg
test
jo
sarb
dec
scas
sub
test
mov
add
push
adc
pop
gs
push
sbb
xchg
outsb
lods
pop
xor
out
pop
push
flds
mov
fldt
fnstsw
jne
sub
repz
mov
inc
or
stos
sub
pop
es
add
push
and
daa
std
mov
add
mov
mov
cmp
xchg
inc
loop
cmp
adc
fldcw
fsubrs
cmp
sub
std
fists
add
das
cmp
push
enter
pop
xchg
enter
loopne
lcall
out
mov
pop
and
inc
sbb
xor
data16
add
mov
sarb
out
lds
add
cmp
nop
mov
pop
and
and
test
ss
jge
xchg
sbb
dec
and
jbe
dec
lods
adc
mov
jno
cmp
cmp
xchg
fnsave
mov
push
mov
aaa
mov
jns
adcl
out
lcall
rcll
loope
shrl
sbb
std
or
or
push
lret
fldenv
cmpsb
push
insb
xchg
mov
je
int
jbe
test
nop
xchg
call
sub
les
adcl
push
mov
mov
repnz
lret
pop
push
xor
test
out
jmp
mov
or
mov
imul
jb
pop
ret
mov
xchg
scas
add
in
lret
ds
in
and
mov
lods
mov
scas
adc
xlat
movsb
jo
jle
adc
rclb
imul
and
lcall
icebp
bound
outsl
xor
inc
aaa
push
fwait
sub
dec
je
addr16
push
imul
mov
outsb
ja
mov
loopne
sub
lock
rcrl
orl
std
lods
sbb
scas
jnp
cmpsl
and
cld
inc
mov
cli
jle
in
test
sub
jne
bound
rorl
jne
mov
shll
int3
call
xchg
int
outsl
sbb
std
lahf
lock
shll
or
fsts
aas
fcmovne
insb
push
push
fdivr
pushf
or
sbb
xchg
inc
nop
xor
pop
in
loope
add
aas
fldl
aad
pusha
fs
call
mov
pinsrw
js
ficompl
popa
push
add
dec
mov
sub
fdivp
xchg
or
jne
iretw
inc
fbstp
mov
imul
sarl
aas
es
xchg
fsubs
xor
fwait
mov
loop
ja
jnp
fsubrl
pop
push
jle
lock
add
iret
cmpsb
insl
and
or
insl
fadds
dec
pop
insl
pop
adc
orl
addr16
mov
dec
dec
loope
out
shr
cmp
ss
mov
lcall
sbb
fsubrp
sub
pop
pop
outsl
rcrb
das
test
cltd
mov
mov
adc
stos
xchg
aas
add
cmpsb
push
mov
cmp
cs
sbb
loope
dec
mov
xor
lds
push
add
mov
xchg
std
add
mov
mov
inc
hlt
push
mov
push
in
dec
popf
fs
out
das
mov
push
loope
jmp
xor
mov
and
and
cmp
or
mov
xchg
xchg
loop
sti
pop
xchg
push
rcll
hlt
adc
and
inc
jmp
lea
cmp
jg
cmp
rclb
mov
bound
xor
push
cmpl
shlb
push
ret
sub
imul
out
lods
clc
mov
test
inc
dec
cmp
adc
sub
sub
or
out
inc
cmovp
int
enter
pusha
clc
fimull
xor
push
jne
test
jp
iret
sub
addr16
mov
bound
clc
cmp
imul
sbb
mov
in
push
pop
sbb
xor
imul
or
mov
fmull
dec
mov
jle
idivb
dec
jmp
pop
sub
stos
dec
cmpsb
and
int
xor
sbb
mov
inc
rclb
out
pop
es
sub
jns
ljmp
ljmp
dec
mov
push
mov
insb
dec
movsb
inc
adc
xchg
mov
insb
stc
add
movsb
pop
xchg
mov
cmp
stc
orb
out
mov
je
das
pop
mov
mov
sbb
jbe
mov
pop
ljmp
add
aad
ss
mov
inc
lock
lret
cmp
es
es
outsl
pop
stos
pop
std
popa
bound
imul
jbe
xor
pop
dec
xor
dec
sub
dec
movsl
sbb
inc
push
test
lea
dec
cmp
out
mov
adc
sub
and
movsl
ja
aam
ret
adc
mov
inc
mov
jae
mov
and
imul
cmpsl
enter
fidivrs
cmp
aaa
cs
iret
sbb
out
jge
not
inc
add
call
dec
jnp
mov
ret
xchg
push
push
adc
or
cmp
xchg
test
xor
xor
push
jne
faddl
shl
mov
xchg
or
or
aas
push
or
jl
dec
xor
stos
pop
enter
xor
lds
mov
jg
xchg
popa
xchg
cmpsb
xchg
je
xchg
das
push
add
std
fidivl
xor
jo
popa
mov
inc
fwait
pop
call
aaa
and
aaa
lret
jb
pop
enter
mov
out
scas
repnz
mov
or
and
roll
adc
adcl
pop
jne
hlt
pop
cmp
popf
push
push
aam
or
imul
add
fisubl
dec
mov
loopne
mov
ja
inc
movsb
popf
les
fwait
dec
hlt
cli
jno
xor
jo
xor
xchg
repz
arpl
in
sti
xchg
or
inc
out
jb
aaa
loope
in
stos
das
jl
scas
mov
mov
lcall
aam
insb
es
push
inc
mov
loope
stos
sub
arpl
divl
push
or
sbb
mov
adc
imul
pop
cmpsl
mov
mov
fldenv
xor
je
mov
enter
push
sbb
lahf
jb
stc
push
jle
pop
pop
mov
stc
sbb
and
test
out
pushf
push
imul
mov
mov
pop
mov
dec
daa
hlt
push
hlt
mov
test
pusha
aas
mov
mov
xchg
jne
cmp
pushf
pop
rolb
dec
add
loop
imul
mov
adc
and
movsb
and
jmp
mov
push
mov
lcall
inc
lcall
es
insb
mov
mov
and
pushf
adc
cmp
cltd
and
btr
fucomi
test
pop
cltd
out
push
pop
std
xorb
mov
cltd
shlb
hlt
jle
pop
iret
jmp
rcrb
push
fs
sub
pop
jp
push
ret
jae
cmp
mov
mov
sub
lss
jg
sahf
cmp
sbb
dec
xchg
aad
push
arpl
jae
out
daa
filds
fldl
mov
push
pop
mov
inc
outsb
ret
ss
jge
mov
sub
mov
hlt
scas
iret
ds
sbb
aad
shll
cmpsl
adcb
or
sti
sub
jecxz
cmp
inc
xorl
or
f2xm1
fmuls
adcl
pop
mov
jnp
dec
dec
cltd
add
loop
insl
in
cs
repz
test
sbb
in
loope
ljmp
or
mov
les
mov
lods
nop
push
mov
mov
adc
jg
cmpsb
xchg
in
push
mov
sub
jl
bnd
addr16
mov
sbb
pop
mov
in
mov
sub
inc
dec
mov
sahf
mov
ret
inc
pop
dec
std
push
adc
xchg
jae
pop
xchg
jne
cmp
cmp
inc
call
test
and
outsb
cmc
jo
jle
dec
es
xor
lret
inc
xchg
test
iret
sub
stos
jl
and
inc
test
mov
mov
add
in
stos
out
mov
fcompl
fbstp
cmp
add
bound
dec
dec
pop
xchg
scas
icebp
andl
popa
je
inc
les
dec
notrack
sbb
add
xchg
cmp
mov
scas
loopne
repnz
addb
mov
movsl
fdivl
into
mov
orl
and
or
inc
mov
dec
outsb
dec
shll
aaa
es
fdivs
pop
or
adc
ja
gs
clc
imul
daa
test
mov
dec
jl
aam
or
rcl
inc
insb
inc
fdivs
push
cmpb
arpl
pop
fsubl
ja
rorl
in
fcoms
or
sbb
jp
roll
je
cmp
jae
sub
cwtl
push
sbb
push
jl
mov
or
cmpsl
repz
stc
das
or
push
jg
popf
lret
mov
fimuls
daa
mov
scas
aad
cs
add
or
insl
fidivl
pop
and
repnz
imul
mov
jne
xchg
push
test
or
lret
mov
fbstp
inc
hlt
pop
sub
ret
cmp
sbb
jmp
popa
xlat
clc
mov
cmp
pop
pop
and
mov
pusha
aas
cmp
repz
mov
mov
and
je
and
int
btc
int3
inc
sti
inc
jmp
cmp
xor
xchg
test
in
inc
clc
xchg
ja
mov
imul
je
in
and
dec
loop
cwtl
cmp
insb
add
mov
pop
jmp
mov
into
dec
mov
xchg
gs
cld
xchg
das
rorb
mov
cwtl
mov
lret
jo
cmp
dec
jp
xor
mov
ds
jnp
or
in
push
les
push
dec
cwtl
jge
push
ds
cmp
push
aad
inc
ret
hlt
mov
fstp
popf
jb
rolb
popa
push
adc
and
ja
inc
adc
mov
inc
push
insb
push
mov
xchg
sub
jbe
stos
test
pop
shrb
sbb
int3
cmpsl
hlt
test
loopne
dec
sub
aam
sub
sahf
jmp
cwtl
cmp
jnp
out
mov
sbb
push
adc
jne
jb
pushf
pushf
scas
inc
adc
or
out
jno
push
fisttpll
jl
ja
jne
dec
adc
and
mov
je
out
mov
lahf
rcrl
fs
outsb
sub
mov
fwait
jmp
mov
loope
and
insl
pop
mov
fdivrl
xor
mov
pop
sub
shl
movsl
jns
adcb
fs
test
mov
imul
cs
jns
cs
dec
mov
test
dec
imul
lods
jg
rclb
je
repz
fsubl
imul
pop
adc
test
cmc
pop
daa
cmp
repnz
mov
imul
cmp
xchg
jg
cmp
xchg
mov
mov
cmp
jns
xchg
mov
jg
dec
and
xchg
arpl
mov
push
xchg
xchg
dec
pop
fstl
dec
clc
pop
hlt
jnp
je
inc
inc
mov
jmp
mov
xchg
movsl
icebp
sbb
sbb
xor
insl
sbbb
test
sub
lea
mov
xchg
imul
cmc
scas
push
xor
in
lock
inc
push
aad
clc
scas
out
cmp
stos
scas
sbb
test
add
pop
push
dec
cld
out
aaa
subl
hlt
jo
idivl
ss
cmc
mov
cli
mov
add
insl
xor
cld
sub
mov
jbe
pop
inc
repnz
adc
inc
addr16
and
xor
sbb
fdivrl
mov
mov
pushf
outsb
leave
pop
dec
mov
xchg
pop
leave
push
cwtl
mov
icebp
mov
stos
fdivrl
mov
xor
pusha
inc
pop
dec
mov
into
int3
and
xchg
sahf
pop
pop
push
add
or
outsb
jb
ds
mul
jns
loope
xchg
or
add
lods
scas
es
jmp
jp
push
or
jbe
pop
mov
mov
inc
daa
test
dec
inc
pxor
or
lcall
jno
std
or
pop
fsts
xchg
sbb
xchg
fidivs
rcll
scas
loopne
sub
jne
in
mov
stos
jge
push
sbb
add
jmp
xor
addr16
sahf
aas
mov
mov
lret
pop
and
lock
and
adc
cmp
dec
bnd
sbb
push
sub
pushf
mov
leave
sbb
out
arpl
movsb
xor
inc
ljmp
pop
or
fldenv
cmpsb
shrl
popa
or
fdivrp
xorl
shlb
xchg
stc
std
movsb
add
arpl
ret
sahf
ljmp
pop
mov
mov
and
and
cs
addr16
dec
jns
pusha
lea
mov
jbe
mov
cmp
add
push
out
mov
stos
clc
ficompl
int
pop
nop
push
sub
lock
fistps
xchg
gs
inc
je
fdivs
jnp
mov
inc
add
adc
popa
or
lahf
test
mull
push
pushf
cmpb
dec
mov
add
fnsave
clc
sub
fs
jl
add
adc
mov
insb
xchg
xor
push
and
pop
sbb
cmpsb
xchg
jnp,pt
xlat
cmp
cmp
and
leave
push
das
and
stc
sub
dec
add
fsubrl
xlat
pop
pop
addl
lods
mov
lahf
and
cltd
mov
call
jl
add
popf
out
or
cmp
dec
ljmp
hlt
adc
popf
stos
mov
insl
adc
cmp
jecxz
movsb
test
sbb
push
pushf
in
dec
ficoms
or
add
jmp
popa
inc
insb
adc
rcrb
cmp
adc
inc
adc
jge
lret
dec
sbb
pop
add
jg
cmp
push
sub
dec
loop
jp
fmuls
cmp
sti
and
movsl
retw
mov
sbb
dec
or
int
dec
add
imul
push
dec
mov
les
inc
sbb
nop
mov
push
std
hlt
icebp
and
jecxz
icebp
imul
jmp
fbld
jle
jg
and
lcall
adcl
or
pop
sbb
push
inc
cmp
imul
sub
popa
mov
pop
dec
mov
jecxz
push
lea
inc
sub
dec
jns,pt
sub
dec
iret
decb
add
or
or
mov
pop
cmp
and
dec
movsl
mov
push
jb
ljmp
jecxz
xor
inc
fcomi
pop
dec
cmp
outsb
or
fldcw
imull
pusha
in
mov
xchg
imul
xchg
jno
adc
adc
ss
inc
fidivs
xchg
pusha
cmpsb
daa
jmp
or
ret
xchg
jns
mov
test
sub
pop
mov
pop
and
out
push
mov
scas
xchg
pop
jg
fstpt
js
pop
cmp
inc
scas
sahf
mov
mov
and
dec
sub
add
daa
sub
ds
sbb
cmc
xor
jbe
insb
jb
push
cwtl
fsubr
mov
aas
sbb
and
je
andb
imul
fists
lcall
rcl
or
push
leave
shr
stos
jp
scas
sub
movsb
xchg
or
push
xchg
fisttpl
out
das
jns
leave
imul
or
popf
cmp
push
loop
mov
pop
loop
shrb
sbb
repnz
iret
rolb
iret
xchg
fcoml
adc
lret
shll
xor
jg
add
cmpl
fwait
ret
xchg
push
inc
ja
dec
sbb
outsb
outsl
push
mov
lcall
int3
lods
mov
push
aam
push
push
lcall
add
inc
rol
mov
sub
push
sub
pop
mov
and
idivl
cmp
xor
mov
outsb
sbb
jne
or
push
sub
mov
cmpsb
sbbl
push
popa
popf
dec
scas
mov
mov
mov
sub
aaa
in
mov
pop
fmul
or
ret
xlat
mov
push
shr
cmpsb
xor
push
stc
imul
mov
repnz
jne
mov
push
add
cwtl
movsb
movsl
adc
cltd
add
sbb
movsl
xlat
mov
jns
adc
inc
sbb
xor
xor
adcl
hlt
lds
mov
insl
divl
cmpsl
fiadds
push
and
add
cmpsl
xor
dec
sarl
inc
iret
or
lret
fimuls
fcmovne
xchg
test
mov
sbb
arpl
test
fnsetpm(287
sti
inc
inc
sub
xor
sbbb
pop
xor
lock
inc
outsb
sbb
xlat
out
test
and
dec
loope
dec
lcall
xchg
xchg
sbb
sarl
jp
cmp
jns
sub
push
or
push
jl
add
ret
mov
repnz
pop
push
orl
rcr
scas
or
cld
dec
dec
jne,pt
dec
cltd
jmp
add
or
mov
insl
jo,pn
sbb
scas
jnp
dec
lea
andl
or
push
pop
popf
insl
iret
sub
insl
loope
jno
inc
mov
xchg
mov
aaa
push
mov
idivb
cvttps2pi
push
sub
pop
pop
fisttps
jo
les
popa
push
cmpsb
adc
or
mov
add
call
test
mov
jnp
test
xchg
or
cmpw
jge
pop
aad
push
or
std
mov
pushf
jmp
cmpsl
cmp
cmp
xor
mov
ljmp
jmp
pushf
sbb
fmulp
repnz
jp
jecxz
in
mov
fbld
adc
stos
movsb
call
jns
xchg
dec
pop
fldenv
sti
mul
mov
ret
add
lret
aam
pop
or
or
push
out
xchg
push
cli
into
jbe
mov
aad
lret
adc
or
push
lret
test
jmp
mov
arpl
ja
popa
filds
jg
or
loope
ror
sbb
cwtl
mov
pop
sub
cmp
ja
dec
xchg
xor
bound
cmpsb
ljmp
push
pop
ret
jbe
loopne
pop
jne
in
dec
dec
lods
adc
lea
andb
inc
mov
movsb
scas
jp
lock
imul
xor
cmp
inc
pusha
fisubrs
mov
imul
jle
mov
mov
mov
push
repnz
push
dec
dec
insl
jmp
adc
xor
cmp
mov
ds
hlt
mov
lods
pop
mov
add
pop
or
test
mov
xorl
adc
test
xchg
popf
sbb
insb
iret
int
pop
mov
jecxz
mov
xchg
xchg
aad
mov
cltd
sarl
loop
lahf
jge
xchg
adc
aas
mov
mov
int3
icebp
dec
mov
xchg
test
rolb
xchg
pop
pushf
xchg
sti
dec
andl
sub
cmc
movsl
mov
push
fimull
cmp
punpcklbw
mov
jns
pop
jno
jo
xchg
pop
lock
adc
push
mov
shrb
add
ret
xchg
adc
adc
inc
lret
out
ss
pop
std
push
and
push
loope
and
xchg
mov
jge
dec
test
sbb
xlat
aad
push
ss
mov
pop
pop
es
cmp
aaa
inc
pop
lcall
and
cmp
pop
rclb
movsl
or
inc
insb
mov
push
and
aaa
in
xor
aam
adc
push
jnp
sbb
in
pusha
add
ss
and
jle
shrl
fimull
sub
xor
cmp
or
sub
xchg
dec
stos
push
or
inc
ds
lret
cmpsb
mov
repz
test
jg
add
mov
jg
out
leave
sub
push
leave
mov
sub
add
fildl
nop
push
cmp
adc
lea
mov
je
xchg
mov
clc
mov
mov
push
repz
int3
clc
jns
mov
jl
test
mov
dec
or
or
adc
fisttpl
mov
jo
sbb
push
sahf
sti
xchg
pop
inc
movsl
mov
fsubrp
outsl
lods
mov
xor
push
mov
sbb
push
mov
flds
xor
mov
cmpsl
push
sti
jg
cmp
push
add
xchg
movsb
fisttpl
jmp
xor
jge
mov
sarb
adc
mov
pop
lcall
les
cs
push
push
decl
mov
in
imul
out
roll
fdivrl
fsubrl
je
insl
lock
dec
xchg
push
icebp
psubq
repnz
cmp
subl
loopne
dec
ja
leave
mov
push
push
movsb
cltd
and
pop
jo
loope
cmp
mov
mov
inc
mull
into
xchg
imul
jno
xor
iret
xchg
or
sub
dec
insl
dec
test
cwtl
push
mov
adc
mov
insb
sbb
ss
iret
fldenv
outsl
pop
insl
test
int3
mov
sub
std
adc
out
mov
or
repnz
in
jno
mov
sbb
and
adc
movsb
repnz
scas
mov
rcrl
cltd
jno
jmp
sub
dec
dec
iret
imul
sbb
aad
lcall
push
adc
jnp
jge
ret
rclb
jmp
popf
ficoms
lret
xchg
mov
or
pop
mov
push
mov
leave
push
aad
inc
f2xm1
out
scas
movsl
mov
mov
and
pop
or
jnp
xor
jne
jge,pn
or
jmp
lock
mov
ja
jnp
pushf
rcl
iret
mov
and
out
fs
jg
xlat
jl
add
and
cmp
mov
mov
pop
or
sti
mov
pop
mov
call
xchg
test
call
and
std
mov
add
sti
xchg
enterw
jg
lods
mov
movsl
and
call
lahf
repz
mov
hlt
pushf
leave
lret
repz
iret
sbb
repnz
addl
jp
movsl
sbb
push
cmpsl
inc
cltd
sbb
stc
dec
push
mov
mov
das
fldenv
insl
push
nop
in
ss
icebp
mov
ficoms
cmpsl
mov
inc
test
push
mov
xlat
pushf
fildl
lods
xchg
dec
and
fdiv
jmp
adc
lods
pop
cmp
jl
mov
pop
or
push
xchg
pop
push
adc
adc
lret
push
fildll
out
sub
mov
cmc
ss
gs
daa
cvttps2pi
or
or
fdivs
js
insb
popf
push
and
movsb
shll
insb
pusha
mov
test
repnz
aas
or
xchg
mov
pop
test
cwtl
sbb
push
aas
imul
xchg
ret
pop
sub
scas
mov
movb
rcrl
gs
sbb
adc
add
rcl
fwait
imul
fmulp
push
addl
fdivrs
pusha
mov
repz
mov
and
mov
push
out
jbe
sub
jmp
adc
sbb
add
jae
andl
imulb
push
cld
std
cmp
jge
aaa
pop
in
cmpsl
sti
enter
cltd
clc
cwtl
mov
jnp
cmp
sar
cmp
xchg
dec
mov
lcall
lcall
inc
ret
cmc
push
nop
getsec
fistpll
ljmp
add
imul
out
ljmp
hlt
sahf
sub
mov
out
lcall
cmpsb
push
and
lret
js
xor
lds
xchg
or
xchg
mov
daa
mov
cmp
in
popa
inc
mov
inc
cltd
sub
dec
jge
pusha
scas
xor
push
add
inc
imul
dec
xchg
sbb
clc
hlt
mov
adc
or
and
mov
hlt
pop
or
dec
adc
jo
cld
lcall
insb
adc
out
dec
lds
cmp
mov
mov
fsubr
pop
xor
mov
xchg
fisttpll
and
call
int3
cli
das
ret
scas
rorb
lea
mov
bound
xor
mov
cld
mov
dec
mov
sub
or
push
jnp
arpl
adc
ja
jecxz
popf
cmpsl
pop
mul
xor
iret
xchg
mov
dec
je
xchg
mov
repz
dec
mov
jns
adc
inc
push
repnz
dec
ja
fnstsw
jb
stos
mov
dec
sbb
inc
sub
roll
pop
mov
mov
push
lea
lret
aad
std
cmp
add
or
jp
inc
imul
xchg
inc
inc
jl
call
gs
dec
bound
xchg
fdivp
xchg
jbe
int
fdivl
lods
and
inc
fistl
aam
pop
sbb
in
cmpsb
adc
iret
xor
sbb
test
xor
jp
and
test
cwtl
jo
ljmp
pop
push
add
ss
cwtl
jmp
repz
pop
fcom
mov
mov
fcompl
push
hlt
insb
rcr
pushf
cmpsl
pusha
xchg
cmp
and
mov
sahf
cmp
push
mov
push
mov
mov
loope
push
mov
xor
or
jnp
stos
fmull
xlat
ds
lods
nop
arpl
sub
and
dec
mov
cli
in
xchg
inc
imul
sahf
jns
faddl
dec
xor
out
adc
rcrl
mov
xchg
xchg
or
sarb
lret
ret
pop
mov
stos
mov
push
mov
fimull
ljmp
in
call
and
dec
lea
stos
in
insl
sub
inc
adc
dec
stc
xor
mov
push
xchg
cmp
lret
test
stos
jnp
fdivl
and
and
in
push
and
xorl
std
aas
test
insl
lahf
js
and
je
dec
sahf
mov
ss
xlat
sbb
xor
roll
arpl
pop
mov
sbb
or
or
hlt
cmp
cmp
push
popa
mov
cmpb
dec
lret
push
xchg
inc
push
imul
ffreep
sub
xchg
int3
pop
scas
test
xor
push
clc
mov
rclb
sub
or
cmp
adc
jp
cmp
stos
cmp
or
or
cmp
sbb
lock
jg
dec
push
daa
inc
test
and
notb
push
add
ss
lods
addr16
mov
iret
enter
lds
mov
orl
pushl
in
fisubrs
out
outsl
or
test
sub
pop
xchg
pop
add
cmp
xchg
inc
cld
push
jbe
adc
sbb
pop
decl
adc
cmpl
sbb
in
ja
sbb
iretw
icebp
push
icebp
jae
ss
cmpsl
in
repnz
scas
cmp
adc
js
fistpl
pop
outsl
loopne
mov
loop
inc
sbb
dec
cmp
rcrl
aam
lock
push
cld
inc
xchg
cmpsb
pop
and
hlt
xor
clc
pop
inc
lcall
sub
and
adc
push
adc
cmp
andb
inc
fsubl
ret
cmp
js
pop
jo
pushf
sub
jns
movsl
pop
fstps
jl
mov
sti
lds
dec
test
sahf
xchg
or
and
mov
mov
adc
xor
sbb
es
and
orl
add
testl
addr16
ret
lods
out
bound
ds
push
mov
and
js
sub
xchg
sub
fwait
sbb
mov
add
add
adc
mov
pop
gs
xchg
nop
inc
sub
and
fadds
dec
cmp
inc
das
daa
das
or
xor
pop
and
inc
lret
dec
dec
adc
fs
orl
ljmp
cmp
adc
int3
add
stc
imul
fucomi
inc
in
pop
stos
add
cltd
ret
inc
aad
mov
popf
mov
lods
dec
jne
jge
les
subl
std
jmp
cmpsb
jecxz
dec
dec
sub
test
push
in
add
stos
ja
scas
shl
mov
movd
jmp
jbe
inc
xchg
mov
int3
xor
cmpsb
popa
dec
aaa
xchg
cmpb
add
and
dec
xchg
loopne
and
push
shlb
xor
mov
dec
jo
xor
cli
and
jge
push
pushf
aam
xchg
rol
jo
push
lds
xlat
dec
pop
mov
ficompl
push
sbb
xchg
jnp
fists
inc
jae
icebp
dec
decb
cmp
xor
std
cld
xchg
adc
out
sub
stos
add
jno
inc
add
es
pusha
sub
mov
cmp
into
xlat
cmp
dec
or
xor
mov
mov
popf
sbb
mov
jnp
std
les
sti
int3
mov
loop
nop
fcmovnbe
adc
pop
pop
loope
jle
and
in
pop
mov
iret
cld
mov
aas
aad
dec
adc
les
or
mov
data16
push
fsts
ret
ret
mov
test
fs
jns
or
dec
cmpsl
mov
ficomps
inc
mov
movsb
mov
rcrb
lahf
add
fadds
sbb
shl
mov
daa
sub
stos
lcall
or
lret
or
rolb
mov
shll
orps
fsubr
cmp
sarl
inc
xchg
push
cmp
cmc
call
sbb
addr16
mov
cmp
fdivl
pop
add
aaa
in
pushf
dec
popa
jge
adc
aad
and
mov
js
or
sbb
add
repnz
add
xor
pop
scas
mov
xor
repnz
out
push
test
jo
and
cmp
sub
arpl
mov
sahf
and
fyl2x
xor
push
sti
push
mov
xor
aad
mov
movsb
mov
xor
pop
mov
nop
aam
pushw
int3
inc
lahf
mov
data16
out
addl
ds
mov
lcall
arpl
jo
bound
xchg
orl
dec
fwait
or
fldl
dec
out
stos
inc
sub
ja
cmpsl
popa
sbb
es
mov
aad
imul
movsl
icebp
call
repnz
fcoms
xlat
lods
jecxz
sub
mov
rcrl
adc
mov
cs
push
cli
or
movsl
or
pop
call
jmp
stc
and
push
pop
dec
push
es
cmp
adc
fnsave
xorl
xchg
cmp
notb
or
sbb
outsl
pop
dec
pop
mov
xchg
inc
sub
cmc
pushf
lds
repnz
cmp
jns
sub
js
xor
mov
or
rcll
ret
movsb
mov
jae
into
push
lcall
testl
stc
add
bnd
loopne
aam
stos
lds
push
add
lret
pop
mov
fdivs
xchg
fsubs
ja
jb
or
cwtl
mov
pusha
mov
mov
lds
xor
add
mov
repz
lea
hlt
xor
inc
inc
scas
movsl
loopne
dec
xchg
inc
dec
push
jmp
cltd
mov
add
movsl
sbb
mov
sub
push
lock
dec
lret
mov
sbb
mov
cmp
out
imul
lahf
das
lods
sbb
jge
inc
add
jl
inc
loopne
subl
orb
outsl
or
pushf
data16
xchg
sub
movsl
adc
mov
jp
push
push
cmp
hlt
into
cmp
sub
adc
push
cwtl
mov
je
sbb
pop
in
jo
mov
fsubp
jg
jge
loope
cli
call
mov
dec
sbb
imul
xchg
xlat
mov
stc
mov
ficomps
sub
ljmp
adc
insl
clc
outsb
lock
push
and
mov
cmpsl
les
jmp
and
lods
or
cmp
iret
lods
testl
clc
dec
out
add
cmp
jle
movsl
mov
add
and
sbb
ds
fildll
into
movsb
lods
inc
rolb
test
mov
sar
mov
push
lret
pop
sti
aaa
add
mov
mov
add
pop
xchg
ret
lods
dec
cmp
mov
push
push
jp
pop
push
shll
mulb
iret
test
in
pop
out
lret
test
sbb
jecxz
inc
pop
fs
add
adc
fistps
pushf
xchg
push
rol
xchg
cli
sub
adc
and
cmp
in
mov
xor
repnz
stc
add
pop
cmp
sarb
lods
mov
fcompl
movsb
jnp
inc
aaa
xchg
mov
sbb
xchg
push
out
mov
mov
cmp
dec
out
xor
pop
insb
cld
cmp
hlt
mov
popa
mov
sub
cld
cltd
stc
sarb
xor
jmp
hlt
add
sbb
xchg
mov
jle
roll
cmp
dec
outsb
mov
leave
xor
pop
negb
xor
bnd
sbb
inc
jge
xchg
pusha
add
mov
rol
cmp
shl
mov
pop
and
jp
cmpl
mov
add
dec
arpl
push
sub
cmp
les
xchg
in
insb
adc
xchg
mov
and
jg
adc
enter
cmp
mov
xchg
cwtl
das
stos
scas
clc
int
test
inc
int
std
pusha
jo
icebp
push
push
dec
gs
loope
inc
push
mov
not
push
outsb
fsubrs
or
sti
and
mov
add
aad
js
loopne
cmp
lock
mov
ja
mov
imul
out
aaa
cmc
pop
sbb
xchg
xchg
imul
sahf
test
in
sub
push
in
and
fwait
push
mov
in
mov
inc
add
push
fldenv
cmpsb
sbb
out
add
xchg
sub
or
mov
gs
inc
ret
jg
iret
pop
jmp
add
pusha
hlt
jns
or
lahf
push
xchg
lock
jb
inc
jle
pusha
mov
cltd
rcl
inc
sbb
pop
aam
test
popf
out
push
pusha
iret
call
movsb
pop
lods
in
ret
test
adc
in
lret
mov
das
adc
push
outsl
test
aaa
js
xchg
incb
nop
push
xor
add
jae
ret
push
cwtl
movsb
or
add
cli
jge
dec
add
setbe
adc
scas
stos
and
jl
jnp
pop
in
in
and
mov
jge
in
or
icebp
cmp
lea
aam
insl
push
shlb
lret
mov
add
aam
mov
leave
andl
xor
addr16
add
movsl
in
pop
popf
daa
xor
addr16
repz
popa
addb
test
mov
loop
mov
fidivl
arpl
lcall
mov
mov
cmp
inc
ss
jnp
in
clc
jno
cld
insl
xchg
xor
popf
mov
cmc
dec
sbb
mov
in
xor
xlat
push
pushf
into
gs
in
clc
mov
xchg
repz
pop
arpl
popf
or
mov
in
add
mov
and
and
sub
repz
inc
add
and
jl
or
sbb
sbb
pmuludq
jp
or
cmp
das
in
dec
int3
mov
bound
fwait
mov
mov
es
jbe
fidivs
push
mov
pop
add
jb
jno
and
mov
xchg
xor
fsubp
pop
sub
pop
into
mov
mov
loope
mov
dec
ror
mov
movsb
or
mov
cmp
push
das
les
mov
xor
pop
rcr
push
mul
pop
aad
push
icebp
sbb
cli
mov
int
cli
push
pop
jmp
ljmp
scas
cld
mov
adc
les
stos
negb
mov
rclb
jg
mov
sub
and
cmp
lcall
aas
mov
aas
sbb
ljmp
mov
lods
dec
ret
cmp
push
lret
test
lods
popa
in
jecxz
push
in
cmp
push
inc
fcompl
pushf
adc
test
int3
cmpsb
out
sub
push
js
roll
repz
outsl
outsl
lret
and
out
or
je
subl
sub
fdiv
popa
aam
mov
xchg
mov
cli
dec
mov
mov
pop
adc
enter
cwtl
outsl
es
stc
bound
movsl
rorb
mov
sub
jl
push
pop
pushf
orb
push
sbb
dec
mov
pushf
jnp
adc
mov
lods
push
arpl
test
add
sbb
push
dec
cmpsb
stos
sbb
ret
adc
xchg
popa
mov
sub
pop
call
aad
push
lds
pop
cltd
mov
push
lret
cmpl
les
je
jecxz
aam
out
mov
inc
inc
ljmp
pop
adc
iret
daa
nop
movsl
pmaddwd
xchg
jne
bts
cmp
in
stc
hlt
sbb
add
mov
xor
mov
loope
insl
cmp
sti
push
loope
insb
dec
jb
fisubs
and
push
daa
adc
cmpsb
adc
out
add
xchg
sti
cli
lods
es
aaa
adc
mov
jb
lods
pop
mov
xchg
cmp
lods
cmp
repnz
or
dec
xchg
or
push
add
inc
aaa
xor
in
mov
adc
xor
adc
push
add
test
inc
jno
daa
fmulp
mov
xlat
jg
jge
test
or
cmp
fildl
xlat
push
cltd
mov
add
cmpl
mov
imul
mov
pusha
popf
or
arpl
mov
stos
dec
dec
test
test
mull
shl
cli
fmuls
xlat
jnp
dec
int
fidivrl
scas
cltd
and
pop
dec
dec
adc
xchg
dec
cmp
fistl
xchg
push
or
bound
adc
xor
inc
and
mov
jp
jns
push
push
adc
inc
outsl
roll
dec
aam
popf
mov
scas
inc
jne
dec
outsb
jg
pop
repz
popl
ret
cmp
xor
aaa
cmp
jae
add
sbb
enter
add
add
je
add
jp
rcrl
out
imul
bound
and
shlb
xchg
imul
pop
and
cmpxchg
jecxz
lods
dec
loope
jmp
ss
push
int3
sahf
das
jns
repnz
aam
xor
std
xchg
and
xor
jge
pop
lret
mov
ds
jnp
lret
sbb
cmp
cmp
into
sbb
pop
loopne
jle
loop
lret
xchg
cmp
jne
mov
clc
fldcw
dec
aam
sbb
in
inc
pop
cs
jns
jecxz
pushf
pusha
cmpsb
stos
add
inc
and
fstl
pusha
jle
jne
fwait
iret
fsubp
cmp
inc
ja
mov
stos
shlb
mov
cmp
ficoml
and
repnz
add
xlat
out
outsl
jnp
cmc
lret
cmp
dec
cltd
arpl
ljmp
int
sub
imul
dec
mov
aad
ss
rcll
sbb
and
or
daa
shrb
xlat
outsl
and
insl
je
pusha
addb
mulb
lret
add
dec
jg
ja
xchg
movsl
mov
pop
inc
mov
push
add
test
mov
dec
xchg
add
int
movsb
xchg
stc
xor
add
inc
into
pop
or
das
push
add
adc
mov
mov
fwait
dec
jns
adc
sbb
or
adcl
pop
outsb
sahf
or
pop
and
lds
aam
jnp
push
push
ja
lret
xchg
sbb
pop
add
aad
xchg
add
cmp
xor
insl
fimull
dec
popa
lea
cltd
es
push
cmp
in
ret
ret
fucom
cld
push
dec
inc
inc
int3
or
sahf
int3
mov
push
push
bnd
mov
in
pop
cmp
jb
repnz
push
mov
xlat
pusha
sbbb
add
push
sarl
xchg
sub
dec
push
sbb
ret
cmpsb
jp
int
cli
pushf
imul
mov
xor
addr16
shll
mov
mov
rcrb
addr16
out
in
fidivrl
movsb
dec
adc
popf
mov
mov
subl
ljmp
push
les
xchg
cwtl
dec
jp
mov
sub
pushf
adc
adc
mov
pushf
stos
sub
mov
pusha
cld
clc
inc
hlt
and
pop
bound
add
fcmovnu
sarb
cmpsl
xor
fs
aas
sub
pop
repnz
xchg
aad
add
sub
mov
shr
xor
and
ja
test
mov
pop
js
ret
or
js
add
xchg
or
jb
sbb
adc
in
and
repz
mov
jno
adc
stos
loop
push
mov
jo
inc
inc
mov
das
inc
pop
lods
fistpl
jge
jmp
or
push
mov
sub
sub
scas
jl
pop
dec
jmp
fdivrl
je
das
fmulp
stos
and
imul
mov
test
mov
push
xchg
xchg
mov
pop
pop
gs
inc
pop
aad
outsb
dec
data16
adc
incl
lods
or
xor
pop
push
rorl
aaa
xor
stos
mov
or
mov
inc
cld
jge
cmp
shll
lds
mov
dec
jne
add
push
mov
imulw
mov
int
push
fucomip
xor
js
push
push
loop
push
lea
jmp
movsl
shrb
mov
pop
lea
push
cmp
sub
loop
mov
sbb
sub
imulb
es
pop
adc
dec
xchg
rcl
test
dec
add
sub
add
shlb
cli
xchg
test
mov
jle
mov
inc
leave
aas
inc
sbb
mov
popa
pop
mov
mov
std
adc
mov
ljmp
in
fs
pop
dec
into
jge
lcall
aam
push
std
mov
or
cwtl
fisttpl
scas
sub
jle
dec
fisubs
loop
test
mov
sub
movsb
test
mov
mov
imul
or
ret
call
lods
scas
popf
addr16
xor
fisubrl
movsb
mov
jg
mov
hlt
sbb
lods
mov
jmp
pop
push
xchg
imul
pop
pop
mov
inc
lcall
xor
lahf
ja
mov
cmc
xlat
push
es
pushf
adc
jbe
lock
fwait
arpl
dec
out
aas
mov
std
mov
or
fimuls
cld
cs
sub
ret
push
mov
shrb
daa
xor
scas
sahf
inc
in
sub
lea
mov
xchg
fimull
inc
and
pop
dec
add
sub
nop
imul
popf
add
loopne
cmp
les
add
rcrl
pop
xchg
cmp
and
mov
je
je
jbe
push
data16
out
rcll
movsb
ds
add
fmuls
jno
fmulp
mov
insb
shlb
pop
pop
mov
push
xor
mov
adc
daa
sub
or
add
and
pop
scas
fdiv
fdivs
cmp
imul
mov
inc
xor
jle
mov
dec
mov
mov
js
jp
inc
fsubp
sub
repnz
neg
jg
insl
out
jbe
pop
aaa
stc
fisubrl
adc
scas
cmp
cmpsl
insb
mov
dec
jb
jmp
inc
inc
adc
pop
xor
dec
jg
pop
idiv
adc
cs
jecxz
andb
stc
push
andb
lret
es
jo
inc
int
sbb
xor
xchg
mov
mov
sahf
jmp
fnstsw
movsb
rcrb
test
or
xor
inc
imul
icebp
pop
cli
loop
outsl
lea
mov
push
adc
lods
dec
data16
cmp
xor
and
xchg
nop
adc
lcall
sahf
sbb
out
adc
fstl
mov
je
push
loope
pop
leave
pop
mov
sbb
inc
pop
and
lret
sub
shrb
das
xor
xor
sub
push
pusha
mov
cmp
fbld
xchg
adc
inc
les
fidivrl
xor
jb
or
or
push
insl
nop
mov
mov
and
daa
cmpsb
pop
sub
sub
sahf
jne
dec
cltd
pop
sub
int3
xchg
push
shll
mov
test
fdivrl
in
int
mov
push
and
imul
cli
shl
stos
adc
mov
xor
push
add
je
cmpsl
lea
dec
mov
jg
fidivs
dec
dec
inc
pop
fs
or
mov
cmp
mov
cmp
push
popa
add
pop
in
into
push
mov
jno
sti
inc
in
mov
inc
movsl
mov
mov
pandn
lret
int
dec
cmc
inc
or
icebp
int
jmp
in
xchg
add
test
inc
jg
cmpsl
xor
loop
mov
lcall
push
fdivs
mov
xlat
adc
sbb
jae
clc
xor
mov
sbb
xchg
ss
mov
cs
sbb
mov
or
xor
xchg
inc
push
scas
ss
jbe
add
cmp
dec
xor
in
dec
inc
sbb
loopne
sbb
lds
inc
fs
aaa
mov
daa
and
mov
cmc
xorb
mov
mov
outsl
xor
cs
sub
jmp
push
jmp
movsb
cltd
fldenv
sub
outsl
jp
mov
xchg
lods
xlat
xor
and
pop
fbstp
js
pusha
jbe
add
mov
roll
push
pop
lock
jnp
test
cmp
or
out
pop
mov
fdivrl
mov
sbb
insb
std
sbbb
test
cld
cli
jns
out
inc
fistps
and
inc
cmpsl
mov
lock
push
adc
bound
push
cmp
imul
lock
out
popf
jl
add
ret
pop
pop
test
sub
arpl
mov
sub
call
jge
xor
adc
sbb
insl
add
lds
into
dec
fs
pop
lcall
pop
mov
pop
ret
inc
fs
or
cwtl
mov
mov
sub
sbb
cwtl
add
rcll
in
cmpb
test
clc
mov
inc
or
sub
andb
push
push
jno
pop
shrl
xchg
add
mov
daa
mov
or
dec
add
inc
lds
adc
test
push
pop
dec
lods
jmp
jp
jge
mov
push
adc
stos
or
mov
cmp
ljmp
dec
inc
xchg
jp
jp
movsb
enter
cmp
or
push
push
f2xm1
ja
xchg
inc
lcall
cltd
mov
stos
pop
dec
add
dec
adc
sub
cmc
mov
jno
mov
hlt
sbb
jae
jnp
mov
and
inc
mov
nop
mov
and
push
sbb
popf
inc
je
popa
scas
rclb
sub
mov
or
leave
cmpsb
stos
pop
inc
push
jge
dec
shlb
sbb
aas
test
shr
mov
jnp
mov
movsb
cltd
lcall
mov
cmp
mov
push
movsl
pop
dec
xchg
fdiv
arpl
frstpm(287
sbb
inc
popa
xchg
inc
out
sub
loope
testb
fiaddl
pop
add
pusha
adc
mov
xchg
mov
add
cmpsb
repnz
nop
icebp
pop
or
jge
jl
xchg
sbb
inc
xchg
lods
das
in
xchg
std
jp
dec
loopne
lcall
out
in
dec
xchg
mov
mov
or
loope
icebp
ficompl
or
idivl
jecxz
rcl
push
inc
pop
adc
add
aam
stos
testb
outsl
sahf
sbb
push
popa
clc
xor
sbb
shl
lds
pop
std
mov
testb
sub
or
mov
fbstp
cs
pop
pop
imul
xor
mov
mov
dec
stos
pop
fxch
std
xor
lcall
inc
adc
popa
loopne
jo
jge
cmp
push
ret
jno
call
mov
cld
les
ja
xor
stos
push
notb
cmp
sub
loop
mov
adc
mov
jnp
jae
scas
adc
arpl
movsl
aam
pop
mov
push
lock
out
aam
add
mov
mov
jmp
popa
std
addr16
inc
jp
adc
inc
clc
jge
cmp
push
sbb
insl
pop
or
std
repnz
inc
push
rclb
lret
dec
sub
pop
or
mov
fwait
sbb
ret
mov
push
dec
mov
scas
sub
mov
adc
cld
mov
push
aas
std
fidivs
dec
xchg
int3
xchg
jecxz
xchg
mov
jp
lods
mov
das
adc
and
sbb
sub
incb
mov
push
unpckhps
icebp
jnp
mov
push
jmp
out
xor
ficompl
push
repz
pop
leave
mov
sahf
jo
push
fisttps
push
aam
push
push
cli
arpl
in
mov
outsb
aad
bound
jnp
mov
ss
frndint
arpl
aam
mov
sti
inc
aaa
xor
jle
ds
les
mov
sti
mov
cmp
jmp
jl
jmp
ja
jp
and
negl
jo
pop
adc
mov
mov
cmpsl
xor
leave
inc
in
insb
in
lock
shrl
xchg
pop
aam
xchg
push
adc
insb
push
cmp
cmpsb
xor
imul
in
js
pop
shr
fwait
insb
nop
outsb
rcl
mov
pop
jmp
mov
data16
fcompl
sbbl
lods
xor
fwait
xlat
out
push
xchg
sbb
dec
sub
inc
pop
int
pop
inc
jmp
loop
xchg
mov
cli
xor
addr16
jp
bound
call
pusha
xor
cmp
mov
mov
in
xor
pusha
scas
mov
les
lcall
push
and
sbb
je
mov
cmp
sbb
jp
xchg
mov
aam
movsl
stc
andl
push
imul
mov
push
popa
pop
or
enter
mov
jl
pop
loopne
lock
xchg
subb
or
into
xchg
jg
jno
hlt
lret
cmp
dec
aad
addl
mov
cltd
mov
fimull
sub
mov
lea
xchg
mov
das
inc
enter
xchg
sub
jge
xor
arpl
aaa
mov
adc
dec
xorb
push
mov
push
sub
xlat
jne
xorb
test
pop
xchg
les
or
clc
mov
scas
dec
cvttps2pi
xor
mov
xchg
test
ljmp
cltd
add
jle
xor
cli
scas
pop
jne
arpl
adc
push
xchg
cmp
jne
mov
add
fidivl
inc
mov
dec
cmc
and
add
fcmovbe
jp
pop
mov
ds
lods
sbb
movsl
xor
xchg
jg
aam
das
xchg
jp
test
mov
and
inc
movsb
inc
jp
leave
push
mov
xor
fstpt
adc
roll
mov
int3
stos
ficoms
je
sub
cs
cmp
push
cwtl
xor
outsb
ret
jg
xchg
or
pop
divb
inc
xor
fadds
lea
inc
or
inc
adc
adc
lret
xor
pop
jecxz
dec
cmp
test
loope
adc
mov
outsl
test
or
sub
outsl
test
repnz
mov
mov
dec
xlat
cmp
xchg
ljmp
or
iret
cmpsl
sub
push
xchg
out
mov
sti
xor
or
stos
pusha
pop
clc
mov
inc
xchg
xchg
insl
push
jecxz
mov
mov
pop
idivl
les
ljmp
jnp
daa
xor
jns
call
stc
jmp
orb
movsl
add
lock
and
mull
sbb
int3
scas
cli
jecxz
mov
jno
sub
pop
imul
pop
add
pushf
popf
nop
sub
adc
cmpsl
int
fsubrl
or
orb
repz
xor
sub
pusha
xor
cmc
xchg
ss
addr16
in
mov
mov
lahf
sbb
mov
scas
jp
int
in
cs
mov
pop
mov
pop
xchg
mov
call
adc
jbe
mov
push
sbb
ss
dec
insl
out
add
cmpl
nop
sbb
cmp
sub
pop
mov
movsl
pop
or
repnz
inc
clc
daa
pop
sub
adc
cmpsb
xor
inc
arpl
push
or
pop
pop
adc
ds
ffree
mov
or
adc
lods
jecxz
das
insl
lock
lock
mov
dec
lret
in
mov
nop
gs
push
leave
sbb
mov
lock
loope
cli
loope
xchg
imul
mov
sahf
imul
dec
jbe
daa
jp
push
incl
outsl
fs
repnz
lret
test
add
or
pushf
jmp
inc
mov
dec
mov
fcmove
leave
cmp
fnstsw
adc
sbb
in
push
fbstp
adc
sbbl
cmp
inc
insl
imul
inc
push
add
mov
sbbb
stos
lods
mov
aaa
push
outsb
arpl
mov
fdivrl
push
xor
lret
or
sti
jmp
cmp
shl
push
aad
outsb
jno
out
add
and
adc
stos
xchg
mov
cwtl
sbbl
mov
icebp
mov
push
adc
int
mov
cmp
xor
or
sbb
js
addb
scas
push
or
ja
out
and
andl
outsl
nop
sub
mov
in
mov
rep
push
cltd
mov
jp
rcrl
pop
daa
xor
and
hlt
dec
add
xor
lds
out
scas
out
xchg
pop
call
das
jp
popa
push
mov
xlat
orb
out
das
fmulp
sbbb
addr16
inc
push
push
sub
mov
mov
jle
xor
shl
xchg
outsb
and
push
jb
out
je
sti
xchg
outsl
imul
scas
or
push
mov
inc
or
out
sub
mov
dec
mov
cmp
int3
daa
inc
insb
jbe
cmp
xor
dec
jle
das
not
in
add
loop
sub
fidivl
adc
add
and
dec
push
push
sbb
add
push
inc
pop
fmul
clc
cmp
xchg
xorl
mov
sub
xchg
pop
fsubr
or
insb
sub
shlb
jp
cmp
insl
ds
cmp
or
xchg
clc
notl
mov
push
insb
pop
out
orl
dec
daa
and
sbb
ss
jb
repnz
mov
pop
std
or
or
and
add
sub
shll
jge
xchg
das
fxch
and
call
pop
xchg
jbe
dec
push
cmp
ret
sbb
jecxz
pop
lcall
mov
stc
ja
lahf
push
dec
sbb
mov
pop
lods
fstpl
scas
test
pop
cmp
insb
fcoms
outsb
leave
pop
cs
jbe
mov
cmp
inc
mov
notl
fs
sti
lret
cmp
push
stos
dec
lret
cwtl
out
daa
mov
mov
movl
scas
lea
pop
shrb
mov
in
add
test
or
sarl
fadds
cmpb
cmp
sbb
out
loop
cmpsb
cmp
xor
xchg
pop
shl
js
mov
inc
call
jbe
pop
call
das
roll
mov
xlat
movsb
jns
cli
pop
inc
cmpsb
mov
movsb
lahf
xchg
dec
and
push
fxch
ds
or
adcl
inc
mov
xchg
sbbl
xchg
sbb
loopne
rcll
icebp
dec
and
cmp
pop
xchg
inc
repnz
dec
and
add
lcall
shll
mov
jne
and
dec
mov
out
cmp
and
stos
lcall
push
cmpsl
jle
sbbl
daa
addr16
loope
icebp
adc
rclb
imul
mov
shrb
faddl
scas
out
dec
push
fimuls
call
inc
push
xor
lea
stc
sbb
out
xlat
xor
push
popa
lods
icebp
popl
and
push
std
movsb
testl
lea
pusha
insl
xchg
sbb
and
rorl
pop
cmp
test
dec
decb
subb
mov
call
jnp
fs
sub
adc
popf
mov
inc
pop
xor
mov
lods
push
inc
in
lea
in
shlb
jge
sahf
adc
push
pop
xor
test
xchg
inc
xchg
outsb
rcl
js
scas
sahf
test
repnz
loopne
outsl
mov
mov
lods
mov
inc
inc
loopne
push
and
outsb
pop
sahf
add
iret
jae
xor
mov
inc
sbb
out
mov
push
mov
addr16
cmp
adc
je
mov
pushf
xlat
add
pusha
les
sbb
adc
xchg
jg
mov
pop
push
xchg
call
popf
cmp
xor
push
lods
nop
pop
ds
test
mov
ret
or
nop
dec
je
mov
sbb
sbb
and
adc
jp
insb
sbb
pop
mov
es
dec
mov
jp
mov
test
aam
adc
pop
push
ror
inc
xor
push
cld
js
lds
cmpsb
sbb
mov
stos
ds
out
dec
incl
pop
outsb
jbe
imul
sbbl
icebp
fisttps
lret
loopne
push
faddl
sbb
xchg
mov
and
orl
and
ljmp
dec
xchg
jmp
add
dec
pop
cmp
cmp
xchg
mov
mov
ja
inc
in
shrl
arpl
js
mov
mov
add
mov
sbb
adc
loope
fs
sbb
iret
mov
lods
pop
lahf
xor
adc
call
xchg
rclb
inc
lock
icebp
xchg
sub
rep
push
and
es
ficoms
pop
push
scas
pop
les
bound
aaa
inc
add
xchg
fisubrl
daa
fisttps
shlb
mov
shll
frstor
and
pop
cltd
rcl
ret
jl
icebp
pop
xchg
lock
je
xlat
cmp
jle
mov
xchg
repnz
sbb
aam
fadd
sbb
jns
aas
push
in
xchg
mov
das
push
xlat
jnp
in
aaa
cmp
into
clc
xchg
mov
mov
loop
mov
repnz
pop
cli
mov
jno
cltd
cld
sar
je
sarb
sub
mov
add
push
mov
iret
sub
mov
inc
mov
ret
ljmp
mov
int
fucomip
gs
mov
add
into
cmc
jns
lret
mov
sbb
repnz
cmp
sub
lods
in
sbb
nop
aam
or
mov
stc
lcall
aad
jmp
or
imul
xchg
sub
das
inc
sti
cmp
in
sbb
mov
pop
fcmovnbe
dec
mov
jnp
pushl
add
out
es
outsl
jno
in
dec
xchg
bound
fldt
cmp
jbe
std
or
mov
push
in
pop
ret
in
mov
push
repz
pop
adc
jp
movb
arpl
jmp
mov
call
pop
lcall
arpl
jmp
cmp
cwtl
add
mov
loopne
lock
dec
fiaddl
or
adc
cmpsb
jo
pop
sarb
aas
mov
cmpb
iret
lea
pushf
repz
test
mov
mov
shll
jp
jg
fnstenv
sarl
cli
fs
lock
or
push
mov
pop
outsl
mov
sub
xchg
loope
faddl
fistpll
push
sub
insl
cmc
or
or
arpl
in
sbb
add
xor
or
sub
mov
ja
fisttpl
mov
fsts
and
aam
sub
std
loope
lret
pop
xchg
shl
scas
and
push
mov
cli
jb
sub
cmpsl
fisubrl
pop
jg
gs
dec
loope
cmpb
cltd
rorb
movsl
push
dec
cmp
xchg
daa
fsubrs
sub
mov
push
adc
aas
repz
pop
inc
adcb
and
popa
xor
push
inc
les
add
inc
shl
sbb
out
inc
push
enter
mov
pop
sbb
push
push
fs
inc
dec
push
fcompl
into
mov
adc
cmp
popa
or
jl
pop
aam
or
call
scas
jnp
js
mov
mov
add
loopne
sbb
pop
mov
push
jne
or
cltd
repnz
or
cs
push
jbe
das
mov
gs
outsl
imul
and
push
movsl
or
orl
mov
hlt
fs
nop
mov
cmp
mov
sti
cli
xlat
xchg
xchg
or
cmpsl
and
std
dec
mov
sub
dec
mov
sub
inc
sbb
jcxz
in
hlt
and
push
fcmove
bound
push
test
test
jo
cmc
scas
pmuludq
push
jno
out
fidivrl
inc
int
jge
sbb
mov
shll
lcall
mov
adc
icebp
mov
adc
fdiv
adc
dec
pop
or
add
mov
aad
dec
pop
in
xchg
pop
sbb
jne
lods
mov
adc
std
xor
pop
push
mov
cmpb
mov
lea
insl
mov
adc
repnz
adc
pop
test
mov
jle
hlt
pop
xchg
fdivrl
adc
jae
dec
mov
mov
jecxz
mov
test
sti
mov
or
das
aaa
sbb
notb
enter
add
test
adcb
push
cmp
lds
inc
pop
push
gs
pop
add
adc
outsl
mov
int
and
jmp
repnz
push
xchg
or
jnp
xchg
sub
roll
out
mov
dec
int
sbb
jae
clc
pop
jmp
bound
or
sub
push
sub
rcr
clc
jo
popa
lahf
pop
je
scas
inc
push
mov
aas
fs
clc
cmovnp
rorb
loop
mov
lods
jmp
fs
lea
cmp
inc
mov
fdivrl
cmpsb
ret
out
mov
ss
inc
scas
jb
push
xor
addb
das
push
std
test
dec
mov
mov
ret
inc
push
mov
pusha
std
inc
shl
outsb
lea
dec
push
mov
loop
loopne
sbb
mov
push
adc
lds
andb
xchg
xchg
mov
in
inc
pop
mov
push
movsb
dec
xchg
ljmp
xchg
leave
pop
lret
call
inc
imul
inc
pop
rorb
not
in
mov
add
xchg
mov
lret
jecxz
insl
add
ljmp
mov
cmpsl
dec
sbb
lods
inc
out
jne
jp
adc
repz
sar
and
jno
xor
imul
out
in
inc
sub
push
popf
scas
popa
sbb
pxor
divb
in
dec
inc
pop
ljmp
push
or
push
cmpb
dec
je
call
leave
or
sahf
push
in
or
sub
jp
cmpsb
cmpsl
mov
cld
push
test
sub
sub
xchg
add
cmp
mov
lods
lock
stos
push
adc
fsubl
adc
int
mov
addps
adc
sbb
pop
push
pop
test
out
push
mov
mov
inc
es
push
clc
sbb
mov
cmp
shrb
inc
enter
dec
push
cmpb
pop
in
jl
shrl
ss
and
dec
aaa
and
jbe
mov
lock
addl
jno
jmp
idivl
xchg
jge
icebp
and
xchg
xchg
sbb
pop
iret
push
xor
enter
vpminud
cmp
testl
xchg
mov
fdivrl
jne
sub
add
mov
pop
lds
inc
xlat
mov
jp
fisttpl
mov
ret
imul
mov
or
lret
std
pop
rcl
popa
push
mov
cmp
push
in
addr16
cli
aas
inc
jb
ret
ficomps
jnp
add
ljmp
loop
push
add
pop
cli
insb
bound
and
je
pop
int
mov
cmp
add
repz
std
mov
movsl
mov
sahf
std
sub
adc
scas
lea
or
pop
xlat
es
mov
and
repnz
clc
mov
inc
data16
push
cmp
js
cmpsl
daa
cmp
push
mov
mov
jae
pop
clc
mov
mov
les
jne
pushf
jno
int3
push
hlt
pusha
pushl
lods
pop
cmp
xchg
push
cs
cmp
fcmovu
and
push
roll
rclb
and
pop
push
je
xor
pop
cltd
flds
jg
insl
or
and
test
inc
push
out
fidivrs
cmp
sbb
fimuls
jb
xchg
sbb
pushf
mov
adc
mov
lods
repz
adcb
pop
jno
insl
pushf
arpl
xlat
in
and
jno
ret
dec
push
and
aam
pop
mov
sbb
cld
addb
out
sub
pop
dec
pop
lea
jp
decl
sub
rcr
inc
mov
sub
fdivrs
add
adc
adc
and
ljmp
xchg
jecxz
sbb
ud1
push
cltd
jge
add
and
popa
out
mov
adc
fisubl
imul
cli
cmp
shll
sbb
jne
add
fnstenv
jnp
inc
jg
xor
lcall
lcall
mov
push
pop
roll
rolb
repnz
pusha
pop
scas
mov
pop
fiaddl
cmpsl
leave
mov
xchg
in
hlt
or
and
outsl
jnp
sbb
outsb
mov
pop
and
xlat
repz
pop
pop
mov
xchg
test
jb
mov
enter
nop
shlw
inc
cmp
mov
ficompl
addr16
lods
cmpsb
aam
out
push
int
lahf
ret
jbe
pop
jmp
in
outsl
inc
std
orb
dec
xchg
xor
addr16
xchg
or
lret
scas
mov
or
sbbl
aad
pop
pop
stos
movsl
das
pop
adc
and
or
ljmp
mov
jb
mov
fidivrs
mov
lea
stos
xor
lahf
stos
arpl
cmp
or
adc
test
lock
xchg
xchg
xlat
jl
lahf
mov
jl
fcoml
pusha
das
fcmovnbe
subl
jmp
cltd
and
inc
push
adc
insb
cli
sub
cmp
sbb
aaa
iret
sbb
test
add
outsl
sub
push
mov
xchg
fisubl
push
fstpt
and
ljmp
dec
into
push
call
adc
dec
xchg
sub
stos
and
lods
notb
adc
decb
imulb
bound
push
inc
out
sbb
sub
push
sahf
mov
ret
in
ss
inc
ja
pop
into
mov
in
stc
addr16
xor
push
lock
sbb
jge
and
sahf
gs
fwait
sub
icebp
mov
cmpsl
jnp
sarl
push
movsl
xchg
pop
pop
mov
inc
cmp
xchg
ljmp
stos
pop
pushf
mov
add
bound
fwait
mov
xchg
adc
iret
pop
in
jp
gs
hlt
insl
jmp
rcll
lret
mov
shlb
pop
mov
fimuls
pop
push
shrb
dec
in
pop
and
lods
jne
shr
mov
fldt
les
lea
mull
mov
adc
xchg
jmp
push
xor
pop
sti
push
push
sub
lret
adc
push
pop
sbb
sahf
ds
aaa
into
lahf
out
mov
add
mov
or
adc
push
dec
or
fldz
push
mov
aad
push
push
sti
movsb
adcl
cmp
push
stc
out
jmp
or
dec
add
cld
push
push
xchg
dec
aam
imul
lock
or
adc
leave
inc
mov
inc
xchg
inc
arpl
sbb
lods
mov
pop
pushf
mov
divw
popa
push
lret
adc
sbb
jae
arpl
xor
xor
aaa
xchg
jle
dec
pop
fiadds
mov
xchg
and
push
sub
pop
mov
inc
lods
out
push
lods
out
xor
jnp
push
test
data16
and
lcall
sub
dec
lahf
xchg
loope
aad
sub
add
or
popf
leave
fstpl
addr16
das
in
xor
jne
cmpsb
or
popf
sbb
inc
mov
sub
push
movl
inc
ret
inc
adc
sbb
imul
jnp
dec
sub
mov
adc
sbb
lcall
sahf
enter
inc
insl
ds
dec
repnz
adc
and
test
icebp
gs
push
jg
fisttps
insb
push
add
jp
jmp
sbb
sub
repz
test
ljmp
mov
mov
ret
out
mov
cwtl
lds
lahf
ljmp
inc
and
xor
cmp
adc
cltd
rorb
adc
fisubl
gs
dec
shrl
loope
orl
mov
scas
or
inc
cmovp
clc
bound
push
xchg
mov
xor
jo
mov
nop
fistpl
enter
pop
add
push
mov
in
test
jne
rorb
jns
push
or
mov
cmp
sar
call
mov
jne
jo
jg
test
mov
sahf
ficoms
loope
jmp
jb
repz
cmp
pop
repnz
pop
fcompl
inc
xchg
sbb
jecxz
repz
pop
scas
lods
push
push
mov
pop
ficomps
pop
imul
lds
cmpsb
mov
add
xchg
sti
inc
hlt
das
in
xchg
mov
imul
sub
das
pushf
and
leave
and
adc
addr16
icebp
imul
dec
adc
xchg
ret
jecxz
dec
loop
mov
inc
inc
fsubp
cltd
sub
in
iret
cmc
add
clc
jnp
xchg
ficoms
xchg
movsl
mov
scas
divl
pop
inc
mov
dec
xchg
mov
testl
xchg
mov
stos
sub
shll
lret
sub
cmp
add
pop
mov
fiaddl
lea
pop
cmp
or
pusha
dec
iret
js
clc
stos
out
pop
mov
mov
test
mov
dec
insb
mov
cmp
dec
lret
daa
ret
add
pop
pusha
mov
fsts
lods
daa
iret
fucom
sub
cwtl
incl
cmp
sbb
adc
push
jnp
push
push
iret
jg
scas
mov
stc
js
xor
decb
jnp
loope
mov
inc
repnz
or
orl
mov
sbb
pop
mov
add
mov
hlt
add
rolb
stc
mov
mov
lock
mov
int3
sbb
loopne
and
dec
add
jns
std
cmp
dec
test
inc
scas
arpl
mov
popf
or
aam
fstl
iretw
scas
push
dec
fwait
xor
fldcw
jmp
aam
mov
lea
mov
lds
lods
or
sbb
out
cmc
imul
xor
xchg
sbb
push
daa
adc
lock
icebp
ret
mov
xchg
pop
lahf
push
add
dec
int
fidivrl
cmp
out
outsb
shl
push
xchg
icebp
scas
inc
ja
sahf
dec
sti
cwtl
in
pop
mulb
pop
call
sub
cmp
sub
test
icebp
icebp
push
loop
jae
aad
psubusb
call
add
inc
and
clc
cs
push
add
mov
in
pop
and
insl
daa
dec
lods
xchg
jo
leave
inc
out
addr16
inc
sbb
dec
xchg
movsb
repz
out
sbb
loopne
mov
je
or
xor
ret
sub
or
dec
cli
xor
mov
sub
jle
mulb
test
lahf
mov
repnz
mov
ss
sbb
lods
or
mov
xchg
testl
sub
sub
add
push
aam
sbb
xor
jo
cltd
cltd
ljmp
jle
push
cs
xor
push
stos
pop
mov
addr16
sub
out
icebp
sti
adc
cmpsl
mov
pop
iret
mov
cwtl
repnz
cltd
xchg
xchg
fs
mov
sahf
movb
pop
pushf
repz
in
lods
iret
sbb
je
loope
and
add
mov
xor
and
scas
dec
test
shl
in
xchg
lds
push
dec
xchg
mov
insl
lea
insl
and
dec
lcall
addr16
scas
int
adc
and
jl
and
loope
lds
adcl
or
int3
inc
ss
pop
fdivrl
icebp
pop
mov
xchg
adc
int3
hlt
cmpsl
pop
loop
pop
dec
popa
push
jge
jne
fdiv
mov
xchg
imul
je
mov
jae
mov
in
mov
dec
xor
add
sahf
test
pop
push
leave
sarb
lea
dec
fwait
imul
jnp
std
clc
xor
pop
push
test
sbb
roll
pushf
stc
div
iret
cmp
push
jo
xchg
xor
repnz
sub
xchg
cmpsb
add
mov
loop
jg
mov
jg
movsb
adc
nop
scas
fwait
jno
mov
pop
mov
mov
nop
lcall
lahf
push
xor
je
shrb
or
cmp
popa
std
push
jp
dec
or
pusha
pop
rorl
sbb
jbe
shl
push
push
into
dec
push
fisubrs
movsb
dec
filds
jbe
lods
shrl
push
lock
cld
add
stc
and
adc
mov
negb
mov
or
lock
sub
push
mov
dec
cmpsl
push
pop
les
insb
cmp
in
inc
scas
lods
popf
mov
fs
test
mov
cmpsl
and
jno
out
add
sahf
fwait
sbb
outsl
mov
das
jle
xor
in
cmpsb
rol
xor
adc
inc
cmp
jo
adc
fldt
bound
sub
dec
data16
mov
inc
loope
push
add
xor
xor
add
add
mov
int
or
sbb
push
icebp
scas
aad
inc
or
mov
sti
mov
mov
ret
xchg
mov
and
adc
xor
jae
mov
pushf
loopne
ret
or
dec
mov
mov
dec
add
sbb
inc
mov
inc
xchg
xchg
loopne
push
cmpl
dec
sbb
lods
xchg
out
pushl
inc
mov
iret
test
adc
enter
repz
stc
and
adc
cld
ljmp
cmp
sbb
sub
popa
xchg
fisubl
xlat
out
call
es
cmpsl
pop
pop
push
push
mov
sub
stos
xor
dec
popf
cmpsl
das
and
jmp
cmpb
popf
stos
out
xchg
pop
adc
fcom
xor
lret
lods
adc
lea
sub
stos
enter
insl
fwait
jg
loop
out
popa
push
and
fs
inc
sbb
pop
dec
stos
loopne
mov
xchg
pushf
aam
mull
outsb
mov
js
sub
rcrl
pop
out
cmp
or
mov
push
mov
jno
mov
xchg
ljmp
adc
push
fnclex
cwtl
pop
pusha
mov
push
fmul
ds
mov
mov
adc
shll
shlb
arpl
clc
pop
mov
mov
cmc
cmp
hlt
inc
inc
jecxz
cli
and
inc
stos
scas
out
loopne
pop
pop
pop
adc
aas
pop
xor
mov
icebp
cmp
lcall
jge
mov
pop
jg
clc
xchg
sti
sbb
jns
jnp
out
lds
xchg
jmp
clc
xchg
lea
pop
loopne
andnps
or
adc
loope
mov
cld
das
lods
aam
mov
divb
fadd
dec
push
cmpsb
ret
sahf
data16
cli
pop
add
fimuls
mov
cmp
lcall
imul
dec
lock
arpl
mov
shrb
xchg
rol
aaa
xchg
xchg
mov
cli
inc
push
jle
mov
aad
rorl
mov
jne
and
or
std
mov
or
fstl
movsb
mov
out
mov
in
cmp
fmuls
movsb
orb
cld
clc
mov
push
xor
sub
mov
pop
imul
dec
add
imul
ljmp
lret
push
mull
push
mov
test
cmp
movsl
mov
xor
pop
pushf
xchg
lret
push
inc
sub
cmp
faddl
popa
insb
stos
jl
pop
in
popf
sub
ret
or
cmpsl
cmp
inc
cwtl
int3
cmp
lea
jecxz
jo
lret
xchg
and
pop
mov
jl
sbb
mov
into
sarb
scas
jo
outsl
and
mov
mov
ret
test
std
insb
inc
filds
out
fcomi
xlat
stc
jecxz
in
add
pop
and
mov
sub
mov
cltd
stc
xor
dec
movsb
sbb
pop
stos
cmp
adc
imul
cli
mov
aam
or
xlat
sbb
and
sub
inc
jae
and
push
inc
cli
lcall
repz
pop
sti
mov
daa
sub
push
out
dec
cs
rorb
xor
jnp
inc
mov
sbb
mov
jo
addr16
push
and
lret
add
mov
push
nop
test
ffreep
fnsave
push
pushf
jmp
fldl
mov
adc
into
mov
mov
adc
push
out
cwtl
mov
mov
aam
cmp
cmc
lock
ror
mov
leave
sub
cmp
lods
imul
hlt
in
or
movhps
sahf
push
push
aas
push
nop
mov
jmp
xor
call
seto
out
jge
adc
jmp
push
popa
fiaddl
mov
lds
sub
mov
inc
ret
mov
test
adc
lock
push
cli
imul
mov
add
mov
mov
packsswb
frstor
sub
pop
xor
push
sahf
mov
sahf
mov
repnz
rorb
inc
psubsb
inc
push
mov
cmp
xor
int
adc
jge
xor
and
xor
mov
popf
sub
xchg
enter
fdiv
pop
or
insb
mov
daa
into
cmpsl
push
mov
jnp
inc
pop
insb
in
jns
fistpl
mov
inc
push
push
or
shlb
push
mov
jno
clc
movl
adc
cmp
fwait
inc
stc
enter
dec
jnp
adc
pushf
das
movsb
loop
out
jbe
cmpsb
add
loope
fcomp
dec
out
divl
jp
xchg
gs
pop
sahf
mov
shrl
or
jmp
add
sahf
into
inc
lahf
cmp
fsubs
loop
jne
into
std
adcl
sbb
out
into
mov
out
xchg
add
adc
movsl
daa
dec
pop
dec
xor
mov
dec
adcl
and
xchg
clc
sub
sub
push
xor
xchg
or
inc
fists
mov
enter
out
push
mov
adc
dec
rcrb
repz
movsl
lods
fmuls
pusha
popa
adc
dec
decb
sti
fmul
rorl
hlt
addb
push
jmp
scas
add
mov
pop
test
insb
mov
clc
xchg
mov
xchg
lods
mov
sbb
pop
push
sbb
rorb
add
jmp
push
sbb
aad
test
shl
rcr
dec
lret
test
lods
cmp
fnstsw
mov
jns
in
iret
xor
imul
cltd
jns
and
bound
pop
popa
jp
sbb
pop
out
dec
stc
inc
adc
cmc
and
or
lods
int3
jp
xlat
inc
jns
dec
mov
sahf
adc
inc
loopne
lret
gs
inc
sbb
adc
scas
push
or
into
ja
in
mull
ret
jmp
lret
bound
loope
push
mov
adc
je
scas
mov
test
cmpsb
xor
fstpt
inc
mov
stc
shll
stos
push
jo
and
inc
push
inc
push
cmpsb
clc
aam
adc
jle
lds
sub
jle
push
jo
push
mov
int
xchg
jecxz
loope
pop
or
inc
xchg
into
xlat
sbb
lahf
fs
dec
inc
adc
add
test
out
add
into
add
pop
xor
xchg
arpl
ret
or
cwtl
iret
and
sbb
jo
mov
mov
gs
push
mov
xchg
shll
sahf
push
dec
sub
mov
add
push
ds
les
add
test
rcll
sub
out
mov
push
sbb
sbb
cmp
add
adcl
or
add
test
pop
adc
mov
sti
pop
scas
inc
out
dec
or
sbb
push
jp
pop
scas
fnstsw
mov
stos
pop
add
xchg
adc
cmp
outsb
push
mov
ficoml
adc
jnp
or
xchg
add
out
bound
xorb
arpl
lret
repnz
or
mov
clc
shll
insl
push
xor
push
cmp
and
lret
cmp
cmp
das
ljmp
sbb
jp
inc
nop
push
jo
std
outsb
cwtl
and
sbb
jo
in
push
add
lock
mov
sub
insl
and
movsl
imul
ficomps
mov
push
cs
pop
dec
adc
loope
dec
in
out
lods
lock
jne
out
xor
cmc
add
mov
shlb
std
test
je
or
repnz
cmc
aas
sub
test
addl
dec
leave
std
daa
add
jl
bound
xchg
fdiv
sub
mov
pop
push
out
loope
mov
mov
jg
mov
popa
pop
ret
xchg
cmp
loopne
out
xchg
jae
dec
dec
add
lret
popa
xor
push
push
jp
or
inc
add
pop
bound
into
jbe
sub
push
xchg
add
mov
xchg
sub
dec
mov
in
push
enter
mov
rcrl
shr
test
cmpsl
jl
orl
xchg
add
mov
sub
icebp
popa
aam
push
ja
fadds
cld
mov
jl
xor
or
mov
xchg
add
mulb
jmp
add
mov
cmp
pop
mov
push
or
adc
cmc
or
jo
xor
mov
test
int3
dec
and
pop
jge
push
test
test
inc
addl
jae
fisubrl
das
xchg
lret
jg
jp
push
adc
jge
cmp
cmp
daa
movsl
xlat
xchg
mov
enter
pop
or
push
stos
mov
add
outsb
jecxz
sbb
xchg
je
movsb
add
jbe
jo
mov
xchg
xor
or
sahf
loop
aaa
mov
sub
outsb
aas
loope
mov
cmp
sbb
cmp
in
dec
adc
push
cwtl
lea
push
rcrl
add
in
enter
fwait
xchg
js
xchg
orl
test
comiss
xor
sar
aad
sbb
push
lds
push
ss
pop
aad
jno
push
pop
adc
shll
addr16
fistps
bound
out
mov
add
js
movsl
adc
dec
or
mov
mov
inc
fidivs
stos
pop
popa
pop
and
mov
sub
mov
out
dec
out
pop
pop
and
cld
adc
arpl
inc
enter
cmp
cltd
mov
lock
push
or
lret
int
mov
gs
fsts
shll
pop
sbb
adc
fsin
jge
sbb
jecxz
scas
jbe
push
add
push
into
mov
jno
xchg
dec
ds
cmpsb
fadd
lcall
cmc
mov
cmpsb
adc
push
sbb
dec
testl
xchg
adc
jnp
sti
movsl
fdivrs
jl
jne
idivb
or
jecxz
je
btl
and
jmp
fwait
repz
mov
nop
sti
pop
ret
mov
aas
or
pop
ljmp
ret
pop
or
inc
jno
sub
nop
adc
mov
push
and
add
notb
lds
into
sub
and
test
scas
scas
jmp
aas
lock
cld
loope
lcall
pop
jle
clc
pusha
xor
call
dec
cmpl
into
popa
pop
mov
lea
fcomps
mov
dec
xchg
in
or
ds
mov
sbb
xor
outsl
mov
inc
call
mov
mov
cwtl
mov
jno
divb
mov
lods
inc
in
imul
dec
stc
jle
rcr
ret
adc
test
mov
cmp
push
ja
out
in
xchg
repz
lods
mov
fistps
sub
ss
clc
jb
adc
lock
sub
imul
mov
sub
sbb
loope
push
xchg
pusha
or
paddw
lods
mov
and
fimuls
aas
insb
mov
ds
ffreep
xchg
aas
cltd
inc
cmp
adc
test
ss
sub
xchg
je
hlt
add
sub
adcl
add
push
cmp
sbb
push
add
popf
lds
enter
push
sub
xchg
fidivs
cs
xchg
clc
iret
sub
push
stc
fdivl
push
movsl
repnz
aam
mov
xchg
xchg
imul
hlt
imul
jecxz
xchg
mov
push
sbb
dec
xchg
xchg
out
push
aaa
outsb
in
repz
ljmp
popa
sahf
movsb
inc
je
cmpsb
sbbb
or
fdivr
add
push
js
sti
mov
xchg
xchg
sti
das
or
scas
mov
aas
xchg
mov
or
and
test
testb
mov
cwtl
testl
xchg
mov
xor
scas
aam
and
adc
je
mov
adc
mov
ds
xchg
scas
mov
or
ja
push
or
fcomps
add
pop
in
fs
cmc
lcall
cmc
jno
sub
dec
mov
jecxz
mulb
xor
movsb
xor
sub
pop
shlb
push
int3
or
mov
shr
xor
pop
fsubl
or
push
cwtl
jno
pop
cmp
dec
sbb
insb
jns
test
jge
arpl
test
nop
inc
addr16
aam
pop
outsb
push
push
push
jo
cmp
jns
adc
pushf
sbb
jne
add
push
daa
mov
jbe
std
cltd
sbb
stc
inc
or
dec
pop
fstpl
xchg
pop
pop
push
out
repnz
inc
and
mov
jg
push
cmpsl
fisttps
cmp
bound
imul
push
push
xchg
orb
repnz
jle
cmc
lods
mov
inc
xchg
or
out
imul
mov
xlat
push
mov
lcall
push
sbb
jb
aad
mov
lahf
jnp
andl
mov
push
push
insl
jo
add
dec
aad
aas
testl
xchg
out
push
mov
les
sbb
adc
adc
mov
pop
mov
iret
sbb
inc
les
xor
xchg
inc
pop
fisubs
add
enter
jnp
sub
scas
cs
and
mov
add
shll
or
dec
cmpsb
sub
adc
mov
sub
orb
and
ret
inc
xchg
add
cmp
gs
icebp
push
adcl
and
sub
stos
std
in
xchg
push
push
sbb
push
mov
dec
loope
sti
jge
or
pop
jb
insb
test
add
ret
int3
jnp
gs
or
add
mov
and
scas
pop
pop
or
frstor
mov
cs
xor
dec
shll
sti
js
push
std
hlt
test
decl
add
or
adc
jns
xor
aas
xor
stos
pop
mov
pop
mulb
xorl
test
adc
sbb
dec
and
xor
mov
int3
pop
xor
iret
mov
xor
shlb
or
mov
adc
mov
xchg
call
popa
data16
cmpl
xchg
mov
xor
xchg
inc
jmp
xor
sti
mov
jmp
aad
jns
pop
push
sub
jo
pop
outsl
ljmp
jmp
imul
fwait
mov
cmp
push
xchg
push
push
jg
mov
push
xlat
test
fdivrl
lods
je
and
push
adc
outsb
dec
cmp
ljmp
gs
mov
pusha
cmp
inc
adc
or
dec
ret
iret
pop
jmp
mov
cs
jge
test
fiadds
clc
jns
add
pop
lret
mov
shll
pop
fxch
shrl
mull
inc
pop
mov
add
mov
das
stos
mov
inc
in
cmp
stos
pop
and
sbb
rcrl
push
xor
add
dec
iret
ss
test
cs
adc
sbb
cmpsl
or
jbe
bound
cli
loope
clc
mov
sub
mov
sub
scas
jg
ljmp
mov
add
fmul
ficoml
cli
cmp
scas
ljmp
push
setbe
insb
push
les
pop
jnp
mov
dec
out
fadds
push
test
mov
cmp
data16
pop
mov
xor
popa
mov
dec
iret
mov
or
adc
mov
pop
mov
xchg
mov
mov
int
shrl
mov
mov
stos
push
sbb
loopne
pop
xor
sbb
ja
call
push
insb
jo
mov
jns
in
ret
adc
ss
ficomps
cld
xor
nop
fcompl
lock
cmpsl
or
or
es
jo
mov
jge
push
mov
fisttpl
fisubs
and
mov
dec
add
jge
mov
push
ds
iret
and
mov
push
inc
lock
loope
shrb
mov
adc
mov
sahf
mov
mov
aaa
push
cs
adc
adc
jbe
jae
mov
jae
sbb
mov
sub
cmpsb
push
mov
daa
pop
jp
and
out
rcrl
mov
icebp
insl
cmpsb
cmp
imul
xor
mov
pusha
cmp
pop
fcompl
arpl
mov
add
or
push
jns
sub
fistpl
pop
push
xchg
into
jge
xchg
sub
clc
insl
cmpl
xchg
arpl
dec
push
xchg
adc
sbb
leave
sub
inc
cli
sbb
std
imul
mov
scas
stos
negb
not
ret
dec
xchg
in
push
std
mov
test
out
std
shrl
sbb
push
adc
loope
cmpsb
mov
sub
je
xor
subl
sahf
sbb
xlat
lods
add
lock
mov
incb
push
jns
in
xchg
xchg
test
movsl
pop
loop
xor
adc
jmp
or
popw
inc
in
mov
shrb
shlb
jne
mov
inc
pop
fisubl
or
cltd
inc
in
aas
push
lds
repz
icebp
mov
fbld
aam
xchg
idiv
or
jnp
mov
leave
pop
lret
sub
xchg
in
repnz
test
or
pushf
nop
loop
aam
inc
xor
mov
das
jo
xor
jmp
xchg
or
xor
xor
mov
or
shl
dec
insl
pushf
push
in
inc
adc
orl
cmc
jnp
lret
icebp
sub
mov
ss
shrl
fwait
sbb
or
or
jp
mov
mov
adc
lods
stos
int3
jp
and
outsb
xchg
repnz
das
jo
stos
out
jae
dec
jno
push
cmp
mov
sbb
jp,pn
sti
pop
gs
sbb
pop
call
fiadds
lcall
sbb
ret
cmp
and
add
jno
clc
enter
adc
sub
and
mov
in
loop
mov
shll
xchg
lcall
pop
xor
ficompl
xor
mov
jge
pop
jg
xchg
xchg
cwtl
dec
rcrl
xchg
popf
mov
adc
pop
adc
orl
aam
cld
shlb
sub
fcom
idivb
mov
pop
jo
fwait
je
adc
jle
lods
leave
aad
lds
add
cmp
xchg
nop
inc
pop
or
ret
push
jns
lret
call
imul
test
sbb
repz
stos
xlat
or
push
add
inc
jecxz
dec
pusha
fdivrl
sbb
xchg
jb
shlb
or
std
and
in
jb
cmpsl
push
pop
dec
cld
dec
sahf
clc
cmp
cwtl
xchg
jb
and
fistpl
dec
jmp
fwait
xlat
mov
push
outsl
stos
rcr
sub
push
push
sub
xchg
gs
mov
inc
adc
out
sti
xor
in
pop
daa
and
fisubrs
and
aas
mov
inc
push
fisubl
adc
bound
in
jmp
xor
dec
fnstsw
aam
push
popf
cmp
jae
stc
js
scas
jno
push
inc
je
inc
cmp
js
mov
xchg
xor
bound
mov
testl
pop
sub
mov
pop
test
in
mov
cmp
test
fcomi
mov
std
jae
lret
pop
nop
pop
sbb
inc
mov
stc
and
xor
cmpsb
das
lock
pop
add
jl,pn
jbe
gs
jo
sub
pop
clc
in
add
inc
jg
pop
cmp
push
int
or
jmp
add
jp
outsb
out
xchg
inc
cmpsl
and
pushf
mov
imul
aad
leave
mov
push
cld
int
pop
push
repnz
xchg
inc
xchg
cmpsb
push
push
fidivrl
lret
ljmp
mov
or
mov
inc
pop
sbb
scas
in
jg
pop
sub
xor
mov
test
sbb
dec
test
sub
sub
lret
mov
xchg
hlt
or
add
cmc
clc
std
jne
xchg
jnp
ret
inc
add
into
pop
lds
and
or
aad
outsb
pop
cmp
out
jp
lret
cmp
subb
jne
sbb
mov
push
nop
arpl
ja
aad
enter
push
jge
mov
loope
test
xor
in
mov
ds
mov
and
dec
mov
popa
jae
xor
push
xor
sbbb
rclb
xchg
lret
jmp
inc
pop
call
add
mov
test
jp
jge
je
pop
dec
push
and
adc
rcrb
xor
in
ja
mov
xchg
js
jnp
sar
les
clc
es
nop
scas
repnz
in
dec
add
pop
sub
cmp
divl
or
mov
lret
mov
dec
push
insb
mov
cmpsb
outsl
repnz
repz
fsts
pop
out
mov
shll
sti
cmp
stc
repz
in
dec
cmpsl
scas
mov
in
mov
dec
mov
mov
fmul
or
test
std
mov
cmpsb
mov
rcrb
mov
or
cmp
ret
or
ljmp
sbb
clc
lods
arpl
sbb
jl
sbb
inc
fxtract
or
add
ds
dec
mov
pop
push
adc
mov
pop
mov
jmp
inc
xchg
push
add
and
mov
cs
scas
cmp
dec
fldenv
cli
test
push
fwait
icebp
in
int3
push
ret
or
xor
cld
pop
enter
and
dec
jge
mov
sub
mov
lods
xor
sbb
inc
mov
mov
add
popa
sbb
push
push
push
mov
and
fdivp
clc
and
pop
sub
cmp
mov
test
mov
mov
jge
imul
mov
int
jecxz
cltd
subl
add
outsl
leave
subb
fs
xor
rorl
mov
push
cld
lahf
insb
mov
add
xor
mov
xchg
and
lods
jbe
jae
leave
xchg
cwtl
sbb
lock
icebp
insb
xchg
push
jl
ss
ljmp
or
imul
cmp
fcmove
test
iret
rclb
bound
or
shll
dec
mov
shll
in
jmp
sub
add
xchg
fsubp
and
aaa
lock
ja
inc
mov
jae
bound
jecxz
xor
add
jo
gs
jp
xor
scas
js
mov
icebp
jecxz
push
sbb
sbb
gs
ds
lods
jecxz
pop
and
xchg
loop
mov
mov
ljmp
std
jge
add
push
inc
clc
push
push
cs
or
adcb
into
sub
loopne
lds
jp
testl
sub
dec
add
mov
dec
push
inc
int3
or
cmp
mov
stos
jecxz
dec
or
add
add
in
jg
jg
ja
negl
jl
pop
out
push
lahf
mov
cmp
enter
adc
dec
nop
dec
jp
pop
mov
push
cmpsb
popf
lock
fimull
pop
ss
lock
and
cmpsl
nop
pop
bndstx
out
fnsave
and
test
bound
mov
repz
or
iret
icebp
imul
push
das
ficoms
pop
cmp
std
ficompl
mov
scas
mov
aas
rcl
jg
xchg
in
ja
cmp
mov
or
aam
in
movsb
pop
xchg
in
jecxz
jge
sub
ja
les
call
jecxz
mov
sar
shrb
or
mov
pop
dec
mov
fsubs
pusha
lret
push
xchg
aad
mov
push
add
scas
jl
mov
push
add
test
jmp
pusha
xor
cld
mov
xchg
pop
addr16
and
push
jns
ret
lret
std
out
ss
mov
fbld
push
inc
pop
fcoml
sub
adc
dec
pusha
inc
xor
test
fdivrl
and
sub
and
add
add
dec
cmp
bound
xlat
aas
dec
pusha
mov
cmp
stos
push
xchg
scas
fwait
bound
inc
push
lahf
mov
fxam
jge
popf
sub
cmpsb
lods
stos
sbb
jo
push
scas
or
dec
jns
fwait
es
jecxz
jae
sub
fildll
cli
fucom
pop
std
pop
jne
or
sbb
push
adc
jle
negl
cmp
ja
enter
push
divb
fcomps
fistpll
jecxz
xor
out
es
fabs
pop
dec
fstpt
and
mov
mov
lea
sub
pop
jge
xor
jb
test
jbe
testl
test
add
jmp
adc
mov
ja
or
stc
imul
fwait
ret
popa
adc
mov
xchg
cld
push
in
adc
mulb
pop
pop
jp
aas
rcrb
cltd
popf
pop
pushl
xor
repnz
popf
in
mov
push
in
out
fdivp
mov
xorb
enter
push
scas
rclb
xchg
pop
add
adc
mov
repz
xchg
and
fstps
in
shr
scas
add
call
dec
xlat
bound
jno
adcl
xor
imulb
inc
cmp
pusha
xchg
jae
add
sub
mul
xchg
sbb
in
leave
pop
push
mov
push
pushf
stc
mov
mov
popf
mov
mov
test
add
or
inc
and
daa
ret
jg
subb
movsl
repz
push
fildl
out
mov
add
fcmovnu
push
inc
jno
fldl
ljmp
adc
iret
cmc
lock
dec
and
xor
movsl
mov
pop
dec
test
xchg
ret
mov
lea
adc
sbb
mov
pop
mov
xchg
mov
and
in
nop
adc
call
inc
inc
cmpsb
mov
lahf
xchg
jo
adc
jmp
xchg
inc
jp
mov
dec
iret
dec
test
jb
mov
jb
mov
sbb
push
mov
xchg
jbe
not
je
sub
scas
data16
imul
cmp
in
mov
cmp
inc
add
data16
pop
testl
outsl
mov
pushf
cmc
push
xorb
push
fnsave
mov
repz
movsl
add
pop
in
jns
jnp
repz
xor
and
leave
xor
lret
or
repnz
mov
inc
ret
cwtl
sbb
cmp
jmp
sti
lods
ret
xor
mov
dec
inc
add
add
fs
std
pop
cmp
inc
cld
add
cmc
sub
pop
xor
out
hlt
sar
push
ficoms
push
mov
cmp
xchg
sti
inc
cmp
or
pop
mov
fwait
xor
xchg
mov
jge
add
les
sbb
or
gs
ret
mov
cmc
or
and
jnp
pop
out
inc
cmpb
mov
or
mov
inc
sar
sub
repz
ja
adc
mov
mov
push
loope
ret
push
mov
push
mov
xor
vmovaps
adc
outsl
xor
xor
mov
arpl
push
push
ficoml
popa
add
xchg
rcrl
das
cs
jp
addl
sub
les
outsl
fdivl
pushf
mov
test
cmpsb
aas
popf
xchg
adc
dec
dec
fstp
pusha
or
std
aad
dec
fwait
mov
test
mov
mov
leave
push
lock
sbb
scas
push
push
or
ljmp
das
aam
mov
sbb
in
jb
movsb
cmp
sti
and
imul
xor
inc
mov
divl
repnz
lds
rorb
leave
pop
jmp
sbb
jg
add
or
outsb
sbb
xor
sbb
and
sbb
mov
bound
pop
adc
push
pop
hlt
sbb
movsl
sbb
stos
sub
jl
nop
push
nop
movsb
in
adc
loope
setae
mov
add
xor
cmp
ljmp
sar
sub
push
out
lea
mov
in
push
out
xor
lahf
fidivrl
rol
sub
inc
lcall
mov
mov
xor
jo
je
add
cmp
push
insb
xchg
push
cmp
and
xor
mov
pop
dec
cmp
pop
imul
or
push
cmpsb
mov
in
outsb
mov
pop
outsl
jmp
icebp
xlat
jmp
xor
or
in
repnz
push
xor
les
cmpsl
lret
nop
into
sar
xorb
add
push
movb
adc
fsubl
mov
mov
inc
repz
int
das
pop
and
fbld
push
fwait
enter
push
in
adc
icebp
adc
adcb
bound
ljmp
les
jae
adc
cmpsb
mov
inc
arpl
iret
push
cli
push
jbe
mov
mov
int
pop
xlat
fs
in
jnp
or
cmpsl
push
lock
jle
mov
push
jae
jecxz
fcmovne
loopne
cmp
jnp
mov
repz
icebp
xchg
rol
sahf
mov
in
je
pushf
jbe
dec
and
jne
popa
mov
push
mov
into
adc
inc
xor
or
test
push
sbb
cmp
sub
and
xchg
or
je
or
lods
and
fmull
cld
xchg
jge
mov
imull
inc
push
xchg
cmp
bound
aam
dec
pop
mov
cltd
jnp
mov
mov
sbb
pop
mov
addr16
rorb
bound
push
in
popf
xor
sbb
and
sbb
mov
mov
sar
xor
ljmp
mov
subb
xchg
pop
std
into
scas
cmp
jbe
rorl
mov
add
adc
arpl
cmp
call
cmp
xchg
leave
xchg
cmc
dec
push
std
pop
insb
add
aaa
ss
popf
jbe
push
ja
pop
pushl
arpl
xchg
jmp
pop
test
pop
cmp
xor
jl
loop
movsb
insb
push
stos
dec
mov
jns
mov
rcll
sbb
fstpt
test
std
pop
and
leave
into
test
int3
mov
adc
pop
jb
daa
sti
lock
pop
or
orl
sarb
sarb
jbe
jbe
and
push
cli
mov
arpl
lret
pop
test
xchg
add
movlhps
jmp
mov
adc
cmp
xchg
daa
lds
jbe
jae
pop
inc
dec
les
shrb
test
sahf
repz
mov
xor
fimull
xlat
es
aam
xor
pushf
cwtl
pop
lods
sub
lcall
std
add
adc
stc
dec
lret
fdivrp
dec
push
nop
ss
mov
or
pop
push
int3
sbb
dec
pop
sbb
jle
mov
int3
add
shll
ds
jge
je
lret
in
movsb
fldcw
sub
es
out
popf
mov
push
cmp
pop
lcall
adc
imul
jl
push
lret
and
gs
dec
pop
xlat
mov
ja
bound
arpl
movsl
add
xchg
push
or
arpl
xchg
push
mov
xchg
int3
push
insb
lcall
icebp
jo
aam
call
mov
push
js
cmp
ret
mov
and
sar
cltd
js
pop
fiadds
inc
jnp
popf
stos
iret
jle
xor
sbb
nop
mov
nop
mov
out
jb
not
jne
mov
out
es
stc
icebp
call
and
cmp
xchg
jp
lret
sub
push
xor
and
and
rcll
ja
gs
jmp
or
in
cmc
push
dec
in
dec
loopne
in
mov
xchg
roll
aad
mov
push
or
jmp
aaa
stc
std
imul
sub
push
ret
jl
cli
andl
mov
cmc
mov
fdivr
xor
les
xchg
into
ret
scas
pop
xchg
fsubs
lret
sbb
imul
jmp
mov
sbb
es
aas
inc
or
or
ds
rcr
out
cmp
xchg
les
pop
test
push
xor
icebp
mov
es
test
inc
scas
adc
mov
in
fidivrs
inc
into
cli
xchg
jb
push
xchg
push
dec
pop
scas
or
xchg
ret
movl
ljmp
clc
fdivs
fbld
in
aaa
push
push
in
cs
mov
repnz
sbb
lea
ret
pop
and
mov
aam
lods
cmpsl
pop
cltd
in
iret
mov
and
fsubrl
fistpl
mov
xor
insl
xchg
pop
je
mov
sbb
cmp
call
adc
adc
xchg
cmpl
pminub
push
pushf
int3
and
popf
hlt
inc
adc
cmp
repz
mov
sbbb
xchg
cs
xchg
loopne
popf
outsl
pop
mov
test
cmp
arpl
or
pop
cli
add
inc
cmc
mov
fldt
xchg
pop
lcall
mov
jbe
imul
outsl
lock
pop
pop
aad
and
lods
in
inc
adc
sub
bound
dec
sti
mov
mov
sbb
cmp
icebp
add
jns
jnp
repz
loop
jnp
mov
dec
mov
in
aaa
cwtl
dec
outsl
movsb
add
dec
mov
repnz
out
mov
push
es
repz
jle
inc
in
leave
xor
jns
repnz
adcb
jae
repnz
mov
pop
fcoms
or
test
fldcw
push
mov
xor
add
cmp
das
pop
fisttps
das
lods
add
sbb
shll
push
xchg
push
arpl
or
jae
mov
or
sbbb
adc
dec
inc
adc
push
sbb
repz
call
cmp
call
in
ja
mov
mov
and
mov
cld
xchg
loope
aas
or
sar
and
push
arpl
popf
arpl
mov
sbb
sub
pop
mov
shlb
push
pop
or
ret
xor
bsf
or
push
xchg
dec
inc
and
dec
pop
push
nop
fldpi
int
jecxz
jl
jge
dec
test
es
das
jbe
dec
pop
test
add
ficomps
movsb
push
daa
loope
fisubrs
mov
cmp
aaa
out
aas
cmp
subl
stc
inc
out
mov
stos
cmp
push
xchg
in
and
out
ja
cmpsb
xchg
ja
outsl
add
dec
pop
out
sub
in
inc
dec
mov
pop
dec
sub
adc
add
lret
ljmp
add
fcmovnbe
ljmp
inc
add
fwait
mov
mov
inc
add
and
outsb
jp
cwtl
icebp
inc
es
push
into
pop
jmp
sbbl
cmp
movsb
jne
add
push
sti
movsl
std
sti
xor
lcall
imul
pop
not
mov
push
popa
add
add
orl
aad
cmpsb
shrl
sbb
fstpt
add
jo
outsb
jno
add
cwtl
es
and
clc
and
pop
fstpl
leave
cmc
xchg
stos
outsl
in
cmp
push
ja
out
pop
adc
push
insl
ss
cltd
pop
aas
and
mov
sti
arpl
repnz
fldt
sub
add
stos
add
inc
dec
cmpsb
xor
or
loop
or
and
enter
xchg
or
pop
inc
adc
jne
pop
cwtl
es
adc
inc
xor
lret
and
mov
rcll
repz
xchg
or
in
test
jne
fcoml
sub
sahf
je
jnp
sbb
push
cmp
es
add
mov
in
jl
addr16
seta
fs
jae
inc
pop
icebp
jg
mov
push
movsl
sti
adc
fsubrl
stos
xlat
or
xchg
inc
jno
mov
sbb
xchg
lods
mov
and
mov
sar
out
das
ss
lret
cli
pop
rcrb
adc
mov
mov
jle
adcb
dec
dec
lea
mov
fsubr
cmp
fisubs
cmpsb
insb
cmpsl
add
sahf
cld
xor
push
insb
dec
cmp
insl
pop
inc
enter
in
mov
adc
or
push
push
stos
in
mov
pop
mov
sub
sti
mov
mov
arpl
dec
dec
adc
jg
lock
mov
or
fiadds
repnz
mov
mov
lret
cmp
push
cwtl
fisubl
xchg
movsb
dec
sub
pop
lahf
mov
fistpll
fcompl
cmp
lock
sbb
iret
idivb
test
add
gs
call
pop
mov
push
addr16
cmp
xor
mov
sbb
jnp
mov
pusha
aad
fidivrs
insb
sbb
and
jecxz
mov
test
repz
gs
cltd
gs
adc
jbe
pusha
or
icebp
mov
clc
movsb
add
fbstp
sub
cmpsb
pop
or
inc
mull
add
and
ljmp
ret
mov
cltd
jl
mov
push
adc
jo
lret
lahf
inc
jb
ljmp
push
or
ds
adc
xchg
sbb
and
and
mov
ljmp
sbb
dec
adc
jne
add
pushl
popf
xchg
dec
out
sbb
mov
out
push
mov
shl
dec
int
pop
icebp
lcall
call
xor
fildl
mov
add
test
mov
stos
sub
push
or
imul
rcr
test
pushf
stos
mov
xor
cmpsl
test
sub
lcall
lods
imul
push
lcall
mov
mov
push
mov
and
jl
ja
jno
arpl
add
cmp
inc
jnp
jmp
pop
shll
add
sbb
lret
xor
dec
or
jmp
std
jmp
mov
loop
loopw
dec
lahf
mov
or
mov
lret
out
sub
out
pop
add
mov
loop
fldl2t
and
push
xchg
adcl
xchg
ficompl
cmpsl
leave
xor
data16
mov
sarl
cmpsl
lret
rclb
dec
lahf
jmp
dec
sub
add
dec
pop
lahf
out
push
daa
inc
aas
fdivr
pop
dec
jl
addl
call
mov
mov
lea
mov
add
inc
pop
stos
gs
scas
push
xor
sarb
sbb
mov
dec
lret
xchg
add
lds
mov
call
push
inc
ss
lret
mov
adc
call
mov
loope
daa
jecxz
jl
in
pop
shl
adc
xchg
ds
inc
xchg
mov
movsl
push
movsl
cmp
mov
pop
adc
push
sub
or
adc
adc
add
ja
and
add
xchg
cmp
inc
jbe
aaa
mov
imul
sub
push
test
mov
cltd
jne
xchg
mov
int3
ljmp
pop
js
scas
clc
fldl
cmp
push
xchg
pop
jge
inc
cwtl
sub
lods
inc
inc
push
cs
insl
push
dec
push
aam
lahf
and
loop
sbb
movsl
inc
insb
leave
add
lret
stc
inc
dec
mov
inc
add
daa
and
jns
add
lea
pop
iret
ja
dec
es
test
mov
fwait
daa
out
rcrb
lods
push
sbb
push
jle
jno
mov
fisttps
clc
cmpsb
out
and
pusha
fmulp
mov
test
dec
movsl
push
data16
rcrl
rorl
notl
sub
scas
into
orb
repnz
inc
hlt
add
pop
shll
pop
adc
mov
dec
in
fwait
imul
push
outsl
fistps
jnp
call
int3
mov
jb
sarb
cmp
es
mov
adc
inc
loop
pop
push
jmp
ffreep
sbb
mov
pop
inc
setne
cld
sti
or
push
cmc
test
pop
jmp
imull
arpl
add
and
aad
sbb
adc
js
jecxz
inc
inc
popa
fcompl
mov
in
jp
sti
mov
popf
xor
into
mov
fisttpl
mov
adc
or
mov
push
mov
leave
mov
push
leave
jnp
xor
or
loope
dec
in
jg
mov
add
pop
add
and
xchg
xchg
outsl
cs
cld
jl
ss
mov
es
mov
std
scas
jle
std
test
loopne
test
mov
jb
pop
dec
xchg
jge
add
test
mov
dec
pushf
sarl
cmp
jbe
out
cld
call
jle
jge
test
ljmp
jge
or
sub
lock
leave
leave
pop
repz
mov
es
imul
mov
cmpsl
mov
jo
fldt
aam
es
mov
popf
push
leave
or
xlat
std
enter
push
mov
cli
jb
popa
or
pop
xor
roll
cld
cmc
push
or
popf
xchg
loope
push
dec
bound
pusha
adc
out
sarl
add
enter
fnstenv
sbb
dec
jne
test
mov
xchg
jge
pop
pop
xor
mov
imul
sub
add
jle
stos
inc
mov
cli
pop
cwtl
repz
adc
repz
or
add
loope
or
mov
xchg
jp
popf
xor
and
inc
jbe
cli
repnz
jmp
jecxz
pushf
mov
or
aaa
inc
xchg
sub
or
or
sbb
lret
or
inc
or
mov
add
add
ds
xchg
lds
dec
fmull
lcall
cltd
fs
sarl
iret
mov
in
mov
js
mov
jb
sbb
mov
nop
mov
add
dec
mov
xor
xor
adc
hlt
mov
push
push
mov
sub
orl
fwait
out
je
in
aas
mov
jo
sub
ljmp
jp
xor
pop
mov
insb
inc
inc
mov
cmp
outsl
ljmp
or
mov
jnp
sbb
mov
addr16
fimuls
add
sub
xor
ret
mov
lods
mov
ss
scas
push
ret
and
shrb
xchg
lcall
ficomps
xor
adc
pop
dec
pusha
ficomps
xchg
sarb
int
int
push
push
pushf
or
repz
je
and
pushf
scas
enter
into
test
mov
lods
xchg
xor
ljmp
repnz
fs
out
dec
mov
dec
xor
jle
pop
push
push
mov
xor
push
out
test
jecxz
repz
lahf
mov
cmp
sbbl
test
in
add
dec
repnz
cmp
or
mov
mov
cmpsl
pop
pushf
mov
pop
cmp
sub
xchg
inc
sti
lds
push
jmp
in
jbe
into
loopne
or
jp
out
mov
and
push
imull
cli
push
cmp
push
out
psrld
testb
mov
scas
xor
add
dec
mov
or
movsl
xchg
dec
mov
or
fstps
mov
clc
lcall
loopne
sub
in
push
push
pop
xchg
loope
sbb
jae
mov
jmp
adc
push
xchg
jb
stc
cmp
jns
cmpsl
mov
mov
sbb
out
push
test
movsb
ftst
push
push
push
mov
hlt
mov
inc
adc
fsubs
jae
ss
sub
addr16
push
addr16
and
push
out
ljmp
sti
call
aaa
xor
in
enter
pop
push
sbb
aas
outsl
mov
daa
push
mov
cwtl
cmp
stc
ja
mov
icebp
lock
lods
stc
test
outsb
out
ret
aaa
mov
jge
in
mov
or
fmuls
ret
mov
sbb
inc
lret
andb
mov
mov
add
loope
sub
push
pop
loope
ss
or
cmp
push
imul
aaa
pop
enter
push
and
jo
insb
pop
out
sub
call
jo
add
lea
pop
sbb
repz
xor
lret
sbb
cmpsl
lods
jnp
xorb
mov
es
add
scas
mov
fwait
inc
mov
sahf
xchg
mov
xchg
dec
push
mov
fstl
mov
jecxz
adc
pop
dec
sub
lahf
rdtsc
add
add
dec
xorl
jb
into
mov
inc
hlt
pushl
sti
movsb
cwtl
cmp
icebp
mov
mov
pop
adc
jmp
enter
xchg
jbe
js
dec
mov
loop
stc
clc
addl
inc
mov
les
data16
xchg
sub
jmp
imul
insb
movsb
xor
insb
mov
inc
lock
lock
imul
add
bound
dec
pop
leave
adc
dec
pop
and
filds
out
dec
loopne
mov
scas
push
pop
sbb
mov
into
mov
mov
pop
jb
push
fcoms
movsl
notl
dec
adc
fsubrl
les
mov
gs
jl
decb
or
incl
lret
jl
mov
dec
movsb
loope
shrl
stc
int
push
jle
cltd
cmp
mov
xchg
mov
in
popa
aam
sbb
xor
in
stos
mov
or
xchg
jmp
adc
int3
inc
aad
mov
mov
xor
test
mov
aam
mov
andb
in
jbe
daa
mov
push
xlat
shl
movsl
inc
push
or
insb
out
cmp
les
cmp
sub
push
das
arpl
clc
std
dec
testb
out
sbb
jb
dec
adc
ss
ret
das
addr16
mov
push
cmp
fsub
cltd
adc
in
idivl
test
cmp
jmp
jecxz
mov
mov
mov
push
roll
xchg
mov
pop
fucomip
gs
rorl
aaa
into
lods
inc
mov
add
leave
xchg
sbb
sahf
lods
hlt
gs
mov
scas
or
pop
xor
and
xchg
cmp
xchg
imul
inc
sbb
cmc
fldcw
push
sub
mov
fs
and
add
andl
xor
lds
gs
or
pop
fwait
loopne
inc
dec
ljmp
sbb
movsb
mov
cli
ret
push
mov
ret
mov
testl
js
sub
insb
xchg
or
mov
mov
add
cli
or
fcompl
mov
jl
hlt
jecxz
jns
aad
push
int3
and
jbe
xchg
or
inc
fwait
dec
aaa
pop
sbbb
test
shlb
cmc
jmp
outsb
subl
sbb
inc
or
and
and
push
jge
jno
mov
adc
das
jg
dec
fdivs
or
iret
testb
jmp
loopne
sbb
and
add
aam
adc
insb
pop
xchg
inc
xchg
mov
and
outsb
xchg
jge
push
je
ss
punpckhbw
pushf
mov
je
lret
cmpsl
je
out
mov
stos
lret
xor
mov
or
mov
mov
scas
xor
xor
ret
mov
mov
lahf
fistpl
sbb
lret
sbb
mov
mov
sub
xchg
stos
push
mov
xchg
mov
cmc
stos
ljmp
and
jl
and
cld
jecxz
ljmp
jo
fimuls
stos
scas
enter
mov
mov
pusha
add
outsb
adc
mov
faddl
push
into
lock
lahf
in
add
sbb
cli
imul
push
mov
sbb
movsl
lock
idivb
cwtl
cmpsb
shrl
loopne
lret
fs
jno
jmp
pop
sbb
aad
dec
dec
push
imul
push
jbe
incb
fnstsw
inc
xchg
lcall
add
or
pop
and
and
pop
inc
dec
scas
lds
cs
mov
lods
insb
and
lfs
lcall
inc
xorb
mov
das
xchg
call
dec
add
inc
sub
repnz
inc
mov
pop
mov
add
pop
lcall
xchg
scas
fnstcw
daa
cmpsl
in
sar
cld
mov
mov
jns
lcall
mov
cmp
mov
insl
mov
fistps
cmp
or
sub
push
mov
insl
sub
outsl
add
adcb
out
jae
sti
xor
xchg
add
cmp
cli
jbe
cmpsb
and
xchg
fdivl
dec
mov
out
xor
gs
cmp
inc
gs
cli
cmp
jp
push
mov
xor
jbe
xor
test
sbb
mov
inc
and
ret
fimuls
popa
ror
lods
into
push
adc
insb
and
mov
rcr
fs
cmpb
addr16
jb
aaa
push
pop
dec
xchg
inc
subps
mov
xchg
xchg
ja
xor
dec
xlat
out
cld
mov
daa
adc
pusha
mov
lret
in
inc
test
pop
xor
pop
mov
cmpsb
daa
fildll
das
and
lock
jp
outsl
push
mov
inc
fisubl
jns
xchg
sub
mov
fs
bound
xor
outsb
jle
aad
mov
stos
cli
arpl
shrb
out
inc
xchg
insb
int3
xlat
addr16
lea
loopne
fistl
or
negl
add
inc
mov
pop
jns
loop
jle
inc
repnz
lock
test
jo
mov
repnz
push
stc
pop
mov
jbe
test
mov
push
ljmp
jl
push
int
test
inc
xchg
xchg
xor
adc
xchg
push
shlb
jge
imul
mov
int
pusha
aaa
das
jne
mov
dec
dec
cmpsl
push
adc
fidivrs
jbe
lods
adc
jb
push
lcall
mov
stos
and
pop
inc
xchg
stos
mov
in
out
add
xchg
enter
scas
sbb
push
out
mov
mov
xchg
call
sub
jl
inc
jbe
cwtl
add
cs
data16
loopne
imul
lahf
rclb
push
dec
out
pop
push
add
and
mov
cwtl
enter
mov
inc
mov
les
jg
out
popf
cmp
daa
cmp
jmp
push
imulb
cmp
rcl
insl
insl
dec
sbb
mov
je
and
inc
repz
push
rcrl
cmc
lahf
stos
xchg
jnp
iret
xor
jp
std
mov
push
lea
popa
or
cli
xchg
clc
gs
fwait
popf
mov
adc
mov
repnz
fwait
add
jg
sub
movsl
addl
out
stos
js
repz
sub
icebp
xor
dec
insl
outsb
add
mov
in
je
test
jmp
ljmp
cmpsl
mov
mov
aad
sbb
stc
inc
stos
sub
cmpsb
sub
fwait
or
imul
inc
sub
push
test
stc
insb
mov
rorl
or
loope
cltd
or
xor
jp
cmp
je
pop
and
dec
mov
jle
adc
aas
jb
adc
xchg
mov
push
lods
add
or
mov
jno
lods
enter
and
lds
lcallw
xor
scas
stc
pop
mov
out
or
loop
lods
mov
dec
in
das
mov
rorl
fwait
jle
pop
xchg
dec
mov
flds
jne
sbb
repz
int
xchg
mov
inc
and
adc
mov
in
xor
xchg
js
fistps
fsubp
fs
dec
lea
dec
lret
repz
jo
into
loope
les
sahf
aas
cmp
test
icebp
push
add
inc
pop
clc
cmp
into
fstps
movsb
and
mov
jp
aaa
inc
cmp
mov
cld
push
scas
arpl
rclb
jle
enter
aaa
or
nop
jae
add
jno
ja
insl
ds
jns
xor
mov
sub
add
adc
aas
cmpl
adcb
aas
push
cmpsl
push
arpl
inc
xchg
ret
push
loopne
aad
outsb
pushf
sub
and
ljmp
push
jbe
mov
out
int
add
sub
pop
es
shlb
mov
pop
and
jmp
movsl
int3
or
cwtl
hlt
daa
cwtl
in
sahf
sub
jno
sbb
jg
mov
or
orl
adc
in
mov
xor
push
add
addb
push
mov
xor
inc
cmp
loope
outsb
and
aaa
push
cld
xor
insl
scas
mov
test
mov
mov
jmp
xor
xor
jno
das
js
mov
pop
push
in
jg
sbb
bound
jmp
sti
dec
or
push
push
fnstsw
dec
sti
xchg
sub
cwtl
jecxz
pushf
mov
int3
pop
pop
inc
sti
arpl
xchg
jno
and
fs
in
mov
dec
sbb
dec
inc
mov
insb
mov
bound
xor
xchg
fs
lcall
add
ret
add
dec
out
cmpsl
test
sub
lcall
xchg
outsl
push
jl
sbb
ja
mull
mov
sbb
dec
pusha
jno
push
pop
or
pusha
push
adc
or
cltd
ret
adc
and
cmpsb
or
inc
loopne
adc
dec
fs
ljmp
imul
pop
std
jmp
push
mov
cli
mov
lea
rcr
mov
ds
pop
and
test
xor
div
pop
jnp
insb
push
ret
xchg
jno
inc
jp
out
stc
rol
lods
fnstcw
movsl
push
jle
add
movl
jg
test
divl
push
dec
push
push
loope
pop
add
xor
imul
sbb
cmp
cltd
test
fimull
test
push
adc
movsl
add
pop
fs
shlb
test
int
dec
int
arpl
ljmp
push
imul
sbb
cmc
push
xchg
loop
and
imul
pushl
mov
sub
mov
aaa
int
inc
or
repz
hlt
popa
daa
and
jb
xchg
and
jmp
cmpsb
cmp
mov
lds
xchg
sti
test
jo
mov
push
pop
dec
cltd
pop
cld
xor
icebp
xor
js
ss
push
outsb
test
or
fucomp
and
pop
push
aas
mov
sub
loop
push
adc
xor
jo
pop
or
roll
jns
cmp
mov
subb
dec
pop
mov
imulb
ja
adc
lret
jp
xchg
pushf
mov
rorl
adc
ret
je
rclb
sub
pushf
pop
shlb
pop
lods
out
adc
test
call
sarl
in
cmp
ret
sbb
dec
frstor
pop
push
sahf
jns
xchg
ljmp
mov
cwtl
pusha
out
sbbl
add
and
enter
mov
hlt
sbb
sub
divl
push
and
xor
jmp
in
jmp
cmp
mov
ljmp
rolb
add
iret
cmp
lock
add
clc
aaa
fdiv
sbb
orb
xlat
mov
add
jo
mov
mov
jp
stc
add
subb
dec
cmp
or
js
inc
lods
cmp
dec
cmp
jecxz,pt
pop
add
xor
dec
test
jbe
mulb
aas
inc
hlt
xchg
mov
das
jmp
xor
orl
lock
iret
cmc
xchg
inc
out
xchg
jae
push
repnz
push
insb
fisubl
xchg
sub
in
dec
sub
stos
enter
push
cmp
xor
push
loope
and
mov
loop
adc
or
and
ret
sbb
mov
cmp
inc
fwait
out
mov
pop
sub
xor
cmpsb
push
out
scas
inc
add
lea
stos
sahf
xchg
clc
mov
lds
arpl
aad
xor
in
loop
pop
cs
and
xchg
xchg
sbb
out
xchg
lret
push
scas
sbb
pop
sbb
jl
mov
movsb
stos
push
int
xchg
repz
inc
addr16
xchg
icebp
push
sti
or
sbb
ficoms
aaa
les
mov
lcall
test
sbb
lcall
shll
jg
outsl
aaa
sub
push
mov
jmp
mov
inc
xchg
pop
aaa
mov
dec
jnp
add
xor
push
js
scas
inc
inc
sbb
sbb
sub
or
int3
mov
mov
das
inc
arpl
xor
rorl
xor
mov
dec
xorb
and
sub
cwtl
mov
mov
popa
movsb
lock
sub
mov
sub
js
xor
mov
mov
inc
xor
nop
xor
mov
sbb
hlt
mov
push
test
mov
hlt
daa
mov
test
cmpsb
add
aas
sbb
je
int3
nop
cmpsl
adc
test
dec
in
cmp
mov
sub
sub
xchg
jl
call
and
lods
movsb
cmp
lds
xchg
loope
cs
leave
push
mov
inc
mov
push
and
xchg
inc
and
pusha
mov
test
pop
or
std
and
popf
mov
loope
mov
stos
and
aam
jmp
sub
sbb
add
pop
pop
pushf
movsl
push
xchg
inc
and
cmpsb
push
hlt
mov
push
lret
or
jmp
test
jnp
in
mov
repnz
jne
in
xor
test
add
aaa
mov
xchg
aam
daa
jge
and
xchg
pop
js
gs
pop
dec
ficoms
dec
inc
lret
imul
movnti
cmp
mov
test
lahf
pusha
mov
arpl
or
mov
fsubs
enter
inc
outsb
out
mov
movsb
insl
std
cmp
xlat
clc
inc
int
fsubs
xor
pop
loopne
dec
jns
inc
inc
cmp
mov
insb
mov
rcrb
pop
pusha
lret
xchg
mov
jl
mov
insb
xchg
ret
loope
dec
pop
loopne
xchg
cli
iret
mov
xchg
cld
xor
sbb
das
rol
lods
repnz
stos
std
mov
ss
xchg
mov
push
jno
fsubrl
fcmovnu
fdivrl
lock
push
jne
inc
dec
mov
lds
and
test
ret
lcall
and
mov
pop
inc
push
push
les
cld
sub
pop
iret
pop
aad
cmp
es
or
fdivr
cmp
out
mov
mov
adc
aam
js
mov
subb
cmp
adc
repz
adc
adcl
pop
daa
and
sbb
sbb
jg
iret
ljmp
loope
cmp
ss
cmp
movsb
out
test
mov
icebp
dec
and
inc
ret
jbe
in
cwtl
jbe
shll
mov
push
xchg
sub
sub
daa
pop
add
xor
out
mov
pop
int
sbb
lcall
mov
das
stc
push
and
mov
test
inc
loop
ljmp
rcr
icebp
bound
lods
arpl
xchg
adc
mov
test
aaa
js
xchg
lcall
xchg
mov
xchg
xor
shlb
push
call
cmp
insl
rolb
push
fwait
lcall
pop
pop
mov
std
je
add
jo
push
faddl
addr16
ljmp
cli
ss
jmp
cmpsl
jle
decb
out
jns
out
or
je
mov
push
subb
adc
or
test
icebp
xchg
push
dec
mull
cmp
cmovg
lahf
ret
rcr
jg
and
test
movsb
vpmulhw
shlb
xchg
cmp
aas
push
sbb
jmp
out
pop
cmp
jnp
push
adc
fcompl
aaa
xchg
push
shrd
mov
mov
je
lea
int3
aaa
mov
or
mov
cli
or
sbb
mov
jecxz
or
fs
mov
outsl
cmp
lea
mov
and
sbb
mov
pop
push
mov
addr16
cli
pop
jnp
popa
ds
jg
push
in
std
jae
jl
add
adc
or
mov
mov
or
daa
repnz
sub
jne
xchg
icebp
mov
in
xchg
fdivrp
stos
enter
push
call
mov
inc
mov
daa
xchg
jns
mov
out
dec
js
adc
adc
fcomps
fists
fldenv
movsl
loope
lahf
idivl
pop
pop
sarl
or
inc
xor
cmpsl
ljmp
sub
inc
divb
mov
in
dec
sub
and
outsl
fldcw
into
sub
add
stc
inc
int
adc
mov
jge
inc
adc
jo
jb
orl
mov
loope
jns
data16
mov
ret
ficomps
mov
std
jae
ja
daa
or
int3
orb
adc
int
sbb
xchg
sub
pop
lock
fs
mov
mov
lock
fsubrp
or
xchg
push
jl
cltd
and
jmp
or
cmp
test
xchg
fidivs
lret
dec
xchg
add
pop
mov
cli
lahf
dec
sub
aas
push
dec
pop
push
cmp
sbb
clc
scas
dec
fists
sub
leave
int
orb
notb
je
xorl
sbb
or
mov
add
iret
fs
xor
or
fadds
jno
add
adc
outsl
jl
loop
xor
rcl
xorb
loop
or
popf
push
into
inc
jb
dec
xor
xchg
and
jge
scas
scas
imul
pop
inc
xchg
lcall
ljmp
ja
cwtl
xor
subb
addr16
cmpsb
les
sbb
shll
bound
xchg
adc
push
dec
rorl
std
mov
dec
pop
xchg
aam
lahf
or
lret
in
push
push
lods
out
test
outsl
jno
enter
mov
jge
mov
repz
add
mov
xor
pop
push
xchg
inc
sbb
mov
lcall
std
sub
es
icebp
adc
std
fcoml
cwtl
and
insb
pusha
rorb
add
pop
mov
pop
mov
xchg
pop
je
inc
fistps
psubq
ret
jge
in
cmpsb
jne
mov
cli
dec
cmp
cmp
pop
lahf
push
cmp
cmpsb
or
mov
cmpsl
ret
sbb
clc
sub
pop
mov
call
xchg
je
lahf
inc
mov
aam
inc
out
xor
test
hlt
ret
inc
xchg
push
jmp
push
pop
fisttpl
mov
xorb
imul
push
or
hlt
mulb
fcompl
adc
pop
sub
xor
test
mov
push
jecxz
jle
dec
pop
insb
xchg
sarb
xchg
into
dec
loopne
xchg
cmp
sub
lods
add
xchg
iret
dec
push
sub
scas
es
scas
je
test
inc
shl
movsb
cmpsl
and
dec
cmpsl
cmpsb
jbe
sti
dec
lods
enter
movsl
adc
xorl
mov
xor
aas
out
and
and
movsl
into
mov
cld
std
popa
cmc
push
lret
shrl
scas
icebp
lock
data16
push
and
mov
in
pop
jmp
jb
jo
test
push
add
fwait
lahf
sbb
ret
jg
adc
ss
popf
lock
and
shll
cmc
and
pop
movsb
repz
sub
orl
add
pop
push
int3
push
xchg
inc
nop
les
stos
and
jge
jno
das
dec
ja
cmp
sahf
and
rcrb
out
hlt
sbb
pop
rcrl
sbb
enter
dec
loop
loop
imul
insl
ret
sub
mov
sahf
mov
inc
clc
mov
or
mov
push
mov
cwtl
enter
inc
repz
mov
cmp
lret
xchg
sbb
pop
cs
mov
lahf
cli
in
inc
push
cmpsb
lret
gs
and
jp
add
push
call
scas
and
mov
dec
mov
out
sub
sbb
push
mov
pop
push
pushf
adc
xchg
mov
mov
cmp
lods
jmp
mov
jno
xor
xlat
or
ds
decb
inc
add
dec
push
or
stos
popf
insl
repz
xchg
out
popa
inc
sti
outsb
lea
shrd
aaa
in
in
mov
sarl
sbb
shlb
lret
aas
mov
mov
imul
push
dec
and
rcrl
cmp
or
lahf
pushf
lcall
push
lahf
ret
fs
mov
ljmp
sahf
adc
fidivl
dec
push
sub
ret
in
xchg
dec
jge
pop
int3
fs
sub
adc
pop
push
jmp
mov
fisubrs
lea
cmp
lds
hlt
cmc
out
sbb
jl
sub
mov
mov
movsl
loope
jg
mov
push
lret
jns
ja
rorl
push
lods
xor
mov
and
out
shlb
jno
shrl
sub
jg
fwait
pop
xchg
mov
fwait
mov
and
mov
in
in
or
insl
sub
pop
add
pop
cmp
dec
out
sbb
ljmp
popf
lret
lods
or
shll
stos
xor
std
xchg
adc
fnstcw
push
add
push
nop
enter
xor
inc
push
scas
das
jge
mov
or
daa
jb
sarb
popf
inc
orb
popf
out
and
sarb
inc
and
inc
xchg
inc
xorb
or
stc
push
mov
das
sub
ss
mov
hlt
jl
fdivp
loopne
addr16
xchg
add
mov
js
lahf
cmpsl
mov
xor
or
movsl
cs
loop
test
cmp
dec
adc
lea
scas
mov
cmc
xchg
or
lock
xor
lea
into
clc
push
les
test
int
pop
outsl
lahf
xor
xchg
inc
ficomps
xchg
arpl
push
xchg
cmp
aaa
sahf
lret
pop
sub
push
into
pop
fdivrl
mov
mov
xor
stc
xor
mov
lds
repnz
pop
inc
jae
adc
sub
sbb
in
mov
addb
push
imul
enter
mov
lods
les
mov
jp
add
mov
test
pop
leave
xchg
cmp
or
movsb
pop
fwait
push
fdivs
jp
fistl
jno
data16
or
jbe
inc
push
insl
call
iret
dec
xor
movsl
imul
inc
mov
adc
insl
test
mov
outsb
outsl
sub
sti
push
cmc
pop
dec
ret
xor
jg
gs
or
loopne
hlt
out
cmpsl
pop
lock
cmpl
mov
sbb
mov
subl
and
nop
add
xor
push
test
mov
daa
jne
es
ja
and
aas
push
popf
test
insl
popf
pushf
push
inc
js
das
hlt
pop
or
test
sub
jno
and
pop
out
add
sbb
mov
sbb
mov
xor
mov
jmp
pop
lcall
aad
or
mov
cmp
clc
daa
add
in
or
push
subb
xor
cmp
iret
test
sub
add
std
mov
ljmp
cmp
pop
gs
lods
lock
xor
mov
sub
push
mov
ret
or
lods
dec
pop
sahf
mov
sbb
es
arpl
clc
stos
fidivl
dec
insb
push
mov
pop
stc
fistl
xchg
repnz
xor
pop
scas
xor
xlat
pop
enter
ljmp
add
ret
fstpt
push
in
mov
push
cwtl
mov
xchg
inc
xchg
ret
mov
mov
or
aam
enter
popf
insl
mov
call
or
pop
popa
sbb
mov
mov
lret
add
lods
mov
adc
inc
ds
dec
inc
sbb
and
aad
inc
scas
pop
lds
enter
pop
js
fsts
cmp
or
fistpl
mov
mov
cs
xchg
push
xor
sub
pop
repnz
and
jmp
lret
repz
xchg
scas
sbb
add
and
testb
lods
sub
or
iret
and
lods
cltd
js
mov
xchg
negl
xchg
sti
jo
fistpl
pop
das
fs
int3
push
in
dec
cmc
lods
add
dec
outsl
ror
jmp
dec
sub
pop
lods
cmc
ljmp
cmp
dec
fsubr
lea
add
cmp
push
xchg
mov
mov
in
imul
int3
jae
or
cmc
push
lea
imul
mov
sbb
lret
sub
in
stos
in
int3
in
pop
test
push
xor
push
stos
fistps
fsts
pusha
dec
mov
test
data16
pop
fs
mov
pop
push
jae
subl
adc
notb
mov
in
ret
cli
stos
jl
or
jle
push
push
sbb
add
dec
imul
mov
jbe
dec
mov
mov
pop
lahf
int3
cmc
jo
adcb
cmpsb
xor
lea
pop
pusha
bound
rcrb
xchg
inc
ficoms
ljmp
cltd
popa
push
pop
ficoml
add
popa
and
mov
or
dec
aad
adc
addr16
push
push
cli
cmp
mov
in
fs
pop
push
adc
fldt
adc
scas
xorl
and
dec
xchg
lds
rorb
sbb
push
aad
cmpsb
popl
or
test
xor
dec
push
insb
stos
jle
mov
fcoml
dec
inc
ja
loope
and
aaa
push
dec
imulb
ja
out
cmp
pop
xor
pop
rcll
xor
fisubl
dec
rcl
push
loope
clc
mov
insb
insl
movsb
push
add
loope
dec
mov
frndint
aad
into
xchg
pop
cmp
mov
mov
les
pop
jns
xor
cltd
jmp
int
popf
iret
call
jae
push
insb
popa
fsubrl
fisubrs
inc
sbb
ljmp
sbb
jb
daa
jnp
jae,pt
push
lahf
popa
and
jmp
push
jns
ljmp
mov
and
insb
jl
xchg
fs
ljmp
stos
xor
mov
mov
in
push
add
mov
adc
es
sub
adc
insl
pop
mov
js
shlb
jbe
das
sarb
inc
push
jo
jecxz
ffree
xchg
push
inc
mov
scas
dec
fmulp
add
inc
xor
popa
sbb
fcoml
jl
aas
push
xor
xor
jb
pop
nop
push
cli
push
je
adc
adc
adc
lcall
push
stos
sbb
ds
xchg
xchg
cmp
pop
aam
es
mov
cmp
sub
dec
ja
ss
lcall
xor
ret
or
es
cmp
pop
aam
push
lea
ljmp
lods
push
and
aad
mov
in
mov
cmpl
lcall
jge
inc
push
push
xchg
mov
or
cltd
xlat
shr
idivl
fisubrl
sbb
inc
xor
cld
dec
mov
xchg
enter
daa
dec
fistps
xchg
adc
repnz
mov
jb
lret
imul
gs
push
inc
cmp
jecxz
setg
or
xchg
repnz
xlat
cmpsl
sub
sahf
in
addr16
adc
xor
lds
jbe
inc
xchg
nop
mov
cmp
mov
sbb
jae
sub
jge
das
pop
sub
jb
call
dec
cmp
rcr
fmull
or
daa
jns
dec
xchg
jmp
mov
repnz
jge
in
out
adc
mov
insb
sbb
cmc
cld
ja
mov
jo
fs
mov
daa
les
ffreep
mov
sarb
add
ret
js
mov
mov
div
ja
and
sbb
ljmp
mov
shll
xor
lea
add
inc
lods
insl
sbb
and
pop
xchg
add
xor
sbb
inc
xor
pop
add
int
cmp
lret
adc
sub
xor
loopne
repnz
testb
xchg
xor
xchg
lahf
in
mov
xchg
jg
inc
aam
imul
and
xor
and
push
imul
add
cmp
cmp
adcl
out
mov
mov
cmp
inc
push
call
movsb
sub
xchg
ret
icebp
dec
insl
dec
loopne
std
mov
ljmp
add
addb
push
push
aaa
lret
aad
test
cmc
sbb
jae
mov
push
dec
sti
mov
das
arpl
xchg
sarb
pop
fcmove
call
sbb
push
arpl
or
add
fs
popf
jp
cltd
pusha
cs
pop
pop
jns
shlb
out
test
ret
sbb
stos
add
inc
adc
aas
jecxz
aam
fwait
jge
out
lret
push
mov
ja
pop
dec
fadds
rcl
cmc
inc
cmp
add
dec
xchg
arpl
dec
scas
fiadds
stos
cltd
pop
cwtl
add
aad
daa
mov
test
or
test
cmpsb
lock
fnsave
lds
jnp
icebp
aaa
js
dec
mov
dec
pop
or
fcmovne
sbb
test
xor
mov
jne
movsl
cmpsl
fimuls
popa
dec
aad
fs
sahf
cmp
addr16
dec
pop
xor
out
shl
xchg
imul
push
stc
sub
imulb
jl
adc
sarb
call
insl
jl
pop
mov
cwtl
sbb
std
bound
lret
insb
mov
aad
repnz
inc
sbb
sub
sbb
inc
daa
adc
and
xchg
mov
lods
push
inc
leave
push
insl
add
cmp
jnp
mov
mov
mov
add
int
mov
adc
add
test
sub
pop
jnp
inc
mov
lods
xchg
pop
fldcw
sbb
or
pop
subb
mov
cli
stc
sbb
xchg
loope
or
adc
pop
push
rcrb
outsb
sub
inc
lea
in
loopne
push
add
xchg
fcomps
call
add
pop
out
sti
jp
mov
and
fs
adc
faddp
stc
and
test
dec
ret
push
sub
dec
or
movsl
es
pop
iret
inc
jp
repz
sub
push
clc
mov
dec
inc
cmp
mov
adc
shrb
dec
add
add
nop
inc
dec
vpcmov
jns
sahf
cli
mov
mov
cmpsl
out
sbb
mov
cmp
pop
mov
popf
les
clc
or
mov
sahf
dec
push
ja
push
cmpsl
push
icebp
or
and
cmc
inc
inc
mov
int
rcr
cltd
push
mov
push
pusha
xor
sbb
xchg
dec
sbb
adc
jns
mov
test
test
push
jb
lods
mov
int
add
mov
loope
push
pop
dec
fidivl
inc
jno
bound
push
mov
mov
fucomip
cmc
leave
dec
mov
jmp
pminub
mov
cltd
and
out
sbb
xchg
pop
js
pop
incb
or
ss
test
ja
jnp
mov
mov
cli
mov
sub
pusha
popa
mov
icebp
or
js
xchg
sbb
inc
pop
cmpsl
jbe
push
roll
inc
or
sbb
jg
pop
jns
ds
je
rcrb
jg
xchg
xchg
push
sub
cwtl
lret
pop
dec
mov
sub
in
cmpsl
cltd
pushf
cmp
fwait
divb
inc
mov
add
mov
xchg
in
sub
mov
mov
mov
pop
pop
shl
dec
mov
or
or
pop
sarl
insb
pop
xchg
or
xor
jmp
add
dec
mov
sti
in
inc
fdivrl
or
popf
imul
aas
dec
add
hlt
push
mov
xchg
stos
mov
inc
add
mov
push
push
xchg
mov
cmp
cmp
dec
sub
inc
push
in
gs
mov
cmp
xlat
icebp
out
pop
pop
cmp
pushf
loop
lahf
pop
jg
es
pop
or
mov
inc
lret
mov
dec
adc
sub
and
mov
sub
pop
mov
inc
repnz
outsb
in
pop
fidivl
nop
or
mov
out
and
push
and
or
inc
out
pushf
push
loope
lret
pop
outsb
lcall
shlb
mov
sbb
lahf
mov
js
mov
hlt
mov
xor
out
dec
mov
xchg
push
jmp
ficomps
decl
inc
lcall
nop
push
test
cmpsb
pop
sub
jnp
inc
pop
mov
lret
add
testl
xor
fsubrl
cmpsb
pop
push
cmpsb
sbb
sub
cmp
ficomps
and
inc
lahf
sbb
call
imul
daa
xchg
xchg
mov
jbe
add
outsl
jp
cmp
cmc
fadds
fwait
mov
dec
cmpl
cmp
cmp
pop
test
push
mov
pop
jb
push
out
in
mov
enter
scas
xlat
iret
add
movsb
int
outsl
int3
lds
ss
jbe
push
lea
int
sub
hlt
daa
pop
inc
jp
vfmadd231ps
sbb
jp
ja
test
loope
mov
mov
mov
or
dec
js
movsb
popa
xchg
daa
mov
pop
sub
fdivrl
addr16
inc
mov
ds
movsb
dec
cld
les
pop
and
out
cltd
xchg
and
aas
ret
xchg
mov
int
dec
push
adc
push
and
pushf
xchg
ja
cld
fimull
inc
adc
xlat
pop
out
shlb
outsb
sub
jae
push
adc
push
std
in
lcall
push
cmpsb
sub
push
sbb
xchg
pop
fwait
cmp
jge
xor
cmp
cmp
sbb
mov
xlat
imul
and
cltd
rcll
inc
cld
fwait
pop
cmpsb
inc
xchg
push
aam
sbb
push
lock
test
mov
inc
aaa
dec
sub
and
sub
insl
and
insb
mov
int3
cmp
clc
mov
push
xor
sub
jp
das
sbb
inc
ss
push
push
jnp
add
jg
inc
mov
mov
daa
mov
lret
ret
inc
adc
mov
push
xor
and
xchg
cmp
mov
ret
jbe
stos
adcb
aad
cmpsl
sbb
sti
jmp
inc
pop
arpl
in
xchg
lods
mov
fldl
mov
fldcw
lods
push
jmp
sbb
lds
popf
mov
pop
xchg
cwtl
shl
out
inc
cmp
mov
test
bound
aam
push
sbb
leave
insb
cs
iret
shl
loop
hlt
fmul
fstpt
sub
outsb
je
movsl
scas
test
jecxz
pushf
xor
pop
xchg
jnp
mov
cltd
sbb
mov
std
test
cltd
loop
push
inc
mov
fdivrp
pop
adc
icebp
lret
enter
insl
out
mov
push
sti
cs
ret
sub
outsl
push
dec
xacquire
in
sti
repz
das
cmp
shr
iret
xor
inc
jle
xor
clc
add
xorl
loope
jecxz
pop
sub
inc
test
das
and
popa
xchg
fidivs
pop
adc
sbb
hlt
or
enter
sub
xchg
lds
adc
mov
lods
xchg
pushf
mov
ret
cmp
pop
imul
stc
cld
das
pop
cmpsb
dec
sbb
pop
rcrl
sbb
ds
jl
sbb
push
push
stos
mov
idiv
pop
icebp
pop
add
or
adc
fsubp
in
push
mov
in
loop
mov
fiadds
mov
testl
dec
aaa
adc
adc
jmp
dec
or
cwtl
add
xor
dec
out
repz
pop
add
int
jne
negl
xchg
rcrl
and
mov
xor
add
clc
pop
pop
or
jnp
cmc
add
clc
test
ret
xchg
sbb
dec
cmpsb
scas
fisttps
xchg
inc
mov
out
notl
fdivrs
inc
lods
cli
jecxz
mov
in
add
mov
cvtpi2ps
enter
insb
imul
ljmp
inc
mov
loope
inc
push
test
mov
pop
xchg
jnp
jge
inc
aas
sub
xchg
rcrl
sbb
push
les
daa
hlt
push
push
in
das
jmp
jne
mov
ficoml
cs
out
mov
adc
xor
cmp
test
test
ja
ss
xchg
or
pop
lock
mov
test
or
jp
add
pop
inc
mov
testl
inc
std
sub
xlat
sarb
je
iret
iret
sbb
xchg
xor
addb
clc
enter
sub
test
fistpl
les
mov
in
cmp
fists
ss
test
dec
pop
lds
fistps
sarl
repz
jno
mov
cmp
mov
sub
int3
and
sub
out
flds
push
jnp
inc
mulb
mov
jg
js
cmp
xchg
inc
pop
push
loope
mov
and
pop
mov
lret
fbld
xchg
pop
ja
adc
fisubs
stos
mov
or
mov
mov
jbe
inc
inc
es
mov
dec
jmp
testl
stos
enter
pop
xor
mov
and
dec
insl
daa
adc
xchg
das
data16
test
jns,pn
or
add
aaa
insb
sti
repnz
sarl
addr16
rorl
adc
mov
sub
and
sbb
cmc
iret
in
and
or
imul
pop
call
cmp
sahf
pop
mov
ss
mov
addr16
popa
mov
clc
int3
pop
daa
ds
inc
push
inc
not
cli
cmpsb
xchg
mov
add
inc
xchg
fcmovu
leave
add
popl
xlat
hlt
mov
cmp
mov
fcmovne
clc
xor
cld
dec
jns
ds
jbe
mov
or
aas
sahf
packuswb
and
aaa
sti
push
mov
lcall
mov
xlat
push
and
imul
jae
jno
jns
push
cmp
mov
scas
incl
jg
mov
cltd
or
xlat
int
mov
sbb
jns
imul
enter
add
sar
fstpt
scas
sbb
inc
add
push
xchg
arpl
fsubs
push
shrl
jl
pop
scas
add
or
and
call
inc
mov
mov
cmp
add
imul
cmp
cmp
sti
repnz
stc
sub
xchg
jbe
mov
dec
imul
or
ficoms
sahf
mov
cmp
jmp
add
cmp
fnstcw
sti
daa
insb
adc
dec
mov
inc
lret
popf
sahf
gs
push
call
mov
push
mov
cld
pushf
and
mov
xor
repz
movsb
cltd
mov
mov
lock
daa
push
sbb
add
test
addr16
jp
rcrl
sbb
sub
daa
lahf
jge
cs
push
sahf
ficompl
xchg
lahf
xchg
dec
adc
imul
xchg
test
mov
xchg
or
inc
fcompl
push
imul
mov
in
stos
jno
clc
mov
rep
jne
mov
idivb
add
mov
push
loopne
adc
shrb
adc
int
dec
cld
out
and
scas
dec
cmp
sub
fstl
jle
aam
push
aas
jnp
negl
pop
mov
mov
dec
xor
jmp
xchg
mov
sbb
inc
js
mov
inc
push
inc
shlb
pop
das
fnop
cmp
popf
sbb
lret
lea
popf
push
movsl
pop
iret
and
js
xchg
iret
in
cmc
push
sub
fdivl
nop
sarb
ret
lcall
push
and
add
mov
jns
add
fdivrs
movsb
repnz
lret
add
xchg
jecxz
cltd
xchg
inc
iret
mov
subl
in
adc
test
lods
lds
clc
cmc
rcrb
xor
adc
out
std
add
inc
fwait
push
out
pop
xchg
jno
push
cmpb
adc
aad
add
lods
std
xor
pop
inc
and
orb
xor
js
jns
aas
jbe
inc
push
mov
push
lock
xor
mov
jbe
push
scas
incl
xchg
sbb
cmpl
sbb
test
mov
test
cmp
push
lods
sub
setno
pusha
push
das
cli
imul
out
mov
mov
std
dec
mov
pop
ficoms
pop
test
inc
cmpl
mov
jmp
out
jnp
fiaddl
pushf
pop
ffree
outsb
jmp
adc
dec
ss
cmpsl
or
xlat
sub
push
dec
or
xchg
xor
jne
subb
sbb
pusha
or
dec
std
mov
daa
stc
insl
cmpsl
sarl
mov
adc
lock
hlt
ficomps
imul
sti
mov
mov
or
aam
xchg
and
mov
cs
pop
ljmp
inc
lea
bound
adcb
shrl
shrb
lret
in
sub
fildll
jecxz
jp
cmp
rol
pop
cmpsb
xchg
mov
lods
ficompl
mov
loope
in
int3
cmp
pop
xchg
je
jb
inc
mov
dec
gs
push
and
inc
inc
sbb
or
jmp
pop
lahf
fidivl
lock
inc
pop
imul
in
int3
xchg
cld
push
decb
cmovns
inc
pop
mov
sahf
or
aad
repnz
int3
dec
fldcw
jbe
add
in
cld
movb
mov
or
dec
mov
xchg
and
out
xchg
lcall
dec
icebp
mov
out
xchg
js
cmc
idiv
mov
xor
add
xchg
xchg
mov
stc
loopne
out
inc
lods
jle
jb
cli
add
mov
into
pop
and
pop
or
and
in
add
ja
cmc
jge
pop
nop
push
cmp
push
cli
stos
jmp
xchg
cmp
sub
cmp
dec
sub
cli
scas
mov
mov
mov
mov
adc
and
cmpsb
mov
fdivr
fisubrl
shll
mov
xchg
pop
std
es
pop
pop
pop
cmp
je
dec
xchg
mov
sbb
fimull
arpl
mov
lods
mov
rcr
loopne
aas
sbb
dec
jae
out
in
stc
pop
pop
and
pushl
push
data16
cmp
sub
pop
push
cmpsl
hlt
lahf
sbb
hlt
fldcw
sbb
mov
or
cmpb
imul
enter
xchg
mov
mov
iret
mov
pusha
cwtl
inc
mov
xor
inc
in
pop
inc
aas
stc
dec
fldl
aaa
je
adc
es
mov
movsl
inc
xchg
ret
js
and
rcl
ret
jae
mov
fimull
cmpsb
sbb
push
loop
mov
lods
jae
cmc
jmp
rcrl
sbb
lea
or
mov
jp
mov
dec
insb
push
movsl
jo
outsb
insb
mov
push
mov
xchg
xchg
push
lods
add
dec
mov
jno
inc
push
mov
jo
andl
js
repz
xor
jns
xor
mov
fsts
xchg
or
cmpl
das
or
test
outsb
movsl
test
jo
and
pop
dec
xchg
pop
dec
xchg
xchg
iret
sbbl
scas
sarb
stos
push
mov
adc
adc
pop
push
and
inc
cli
jge
lahf
xor
cs
pop
outsb
insl
loop
dec
push
xlat
ljmp
ja
stc
mov
jo
jae
sbb
xchg
jae
inc
xor
ret
rolb
out
push
int
xchg
aaa
xchg
mov
test
or
movsb
maxps
sub
jns
ds
inc
movsb
loope
in
xor
xlat
sbb
pop
sub
sbb
dec
enter
fcom
mov
std
cld
inc
test
sbb
loopne
pop
mov
push
mov
test
mov
dec
mov
xor
daa
jbe,pn
lret
cld
add
cmp
and
jo
shrl
enter
in
pusha
push
notb
mov
daa
cmp
lahf
mov
ja
repz
fwait
inc
sub
cmp
arpl
mov
cwtl
fnstcw
dec
jnp
inc
xchg
insl
out
jno
sbb
jmp
in
pop
and
pop
inc
xrstors
icebp
sbb
fwait
lods
adc
sbb
icebp
cli
outsl
adc
xchg
daa
daa
jp
mov
out
int3
inc
idivb
push
lock
jbe
jmp
mov
and
repnz
dec
insl
aam
mov
icebp
fs
jecxz
daa
fcom
orb
xor
cli
dec
clc
push
idivl
mov
mov
or
pop
jecxz
in
pop
cmp
xchg
lcall
sbb
hlt
push
mov
push
cmc
leave
pop
decb
sti
test
cmpb
test
pop
xlat
js
test
jbe
mov
pop
push
movsl
xchg
sub
pop
out
out
sbbl
cmpsl
das
arpl
sub
scas
mov
imul
in
in
and
movsb
push
push
jecxz
movsb
dec
xchg
in
shll
inc
test
dec
and
dec
imul
cmp
xchg
icebp
fadds
cltd
xchg
test
mov
adc
jmp
mov
or
mov
cmp
mov
stos
mov
add
insb
sahf
or
mov
mov
xor
push
cmp
addr16
vmread
push
in
pop
pop
mov
cmp
data16
subl
xlat
dec
fisubrl
les
aaa
mov
lods
js
aas
cmp
loopne
xor
stos
sub
out
mov
int3
in
xchg
mov
xchg
cmp
and
sbb
pop
ret
aad
pop
cli
int3
ss
jmp
xchg
push
mov
test
fmuls
repz
mov
lahf
movsb
xchg
dec
out
je
aas
xchg
scas
fadds
ljmp
and
mov
and
cmp
push
daa
pop
sti
inc
xchg
dec
and
cmpb
push
pop
arpl
inc
popa
or
jge
xchg
adc
inc
cli
fs
cmpb
or
xchg
addr16
mov
test
ljmp
pusha
cmp
das
mov
xchg
sbb
add
push
scas
xchg
jbe
lds
xchg
or
shl
cli
mov
mov
bound
dec
in
ja
aas
jl
inc
andl
pop
xor
jns
cmpsb
mov
dec
movsb
xor
test
mov
jb
mov
test
add
cmp
and
mov
sbbl
adc
lcall
fcomps
push
mov
insb
push
xlat
mov
lods
pop
fldt
std
nop
dec
fs
cmp
and
mov
sarl
mov
rorb
arpl
pop
adc
js
mov
jp
es
adc
loop
lret
ljmp
bound
adc
mov
push
dec
rcrb
fcmovnb
sahf
lret
mov
cmp
dec
mov
sahf
idivl
push
fmull
sub
imull
add
test
out
decl
mov
icebp
insl
cmpsb
adcl
loop
inc
aam
mov
ljmp
pushf
sub
fldenv
rclb
fldt
leave
pop
gs
je
loop
mov
adc
fstpl
mov
stos
ds
or
mov
inc
enter
adc
sbb
cmp
add
arpl
scas
out
inc
test
jne
pcmpgtw
dec
push
call
mov
mov
movl
push
adc
xchg
imul
mov
push
hlt
mov
les
cld
in
ret
movsb
and
jg
pop
cwtl
fidivs
lock
cs
push
mov
cmp
roll
push
pminub
cld
sbb
pop
les
sub
lods
or
rcl
push
lods
mov
dec
and
je
stos
dec
shrw
lret
push
push
xchg
fs
hlt
mov
dec
lock
pop
jno
movsb
rol
call
and
xchg
ret
mov
inc
pop
cmp
inc
aad
hlt
out
fucomi
mov
into
mov
jp
or
push
sub
xchg
mov
mov
pop
imul
rcrl
inc
push
jno
and
mov
fisttpl
sti
rorb
jg
jno
outsl
sub
mov
push
std
int
insl
sbb
andl
and
out
test
andb
and
dec
sub
lods
cmpl
aaa
push
jae
push
jae
inc
xchg
mov
cs
xchg
mov
xor
xchg
jmp
inc
call
cmp
push
rcrl
mov
mov
push
mov
out
pop
js
leave
jge
aad
inc
inc
mov
sahf
aad
out
jg
push
sbb
mov
mov
add
shll
push
cmpsl
adc
adc
adc
push
cmc
fdivrs
je
or
ja
adc
clc
test
lret
ret
push
mov
mov
sti
add
pop
stos
jecxz
adc
sbb
mov
cwtl
shlb
lahf
in
jecxz
mov
dec
bound
int3
jl
mov
rcrl
pop
scas
fdivr
add
int3
push
loopne
lret
mov
inc
dec
mov
cmpl
lods
fcomps
fcmovbe
jle
in
aas
dec
jle
das
xor
jnp
xchg
out
pushf
lods
cmpsb
adc
in
pop
or
jno
xchg
adc
lahf
jl
out
dec
nop
test
pop
cmpsl
pop
add
fisttps
xor
and
fstp
pop
sub
xchg
xorl
mov
mov
arpl
xchg
pop
out
ljmp
inc
cs
fstps
cli
ficompl
push
and
orl
jae
or
lods
mov
xor
ret
xchg
rolb
mov
bnd
cmp
adc
cmpsl
jp
adc
jecxz
loop
push
jmp
pop
popa
test
fidivl
sub
adc
icebp
outsb
and
sti
add
test
imul
jae
ss
punpcklbw
call
js
xor
mov
push
push
adc
ljmp
sub
pop
clc
stos
lahf
ljmp
enter
pop
stc
adcl
test
sbb
pop
mov
xor
jmp
outsb
jp
data16
aad
push
notl
movsb
pop
insb
or
inc
pop
jnp
lds
in
push
sbb
sahf
pop
fstpt
push
divb
jbe
cli
aad
push
ss
sub
ds
cwtl
jns
lds
xchg
jecxz
push
enter
into
push
movsb
adc
push
lret
pop
xor
dec
mov
xor
repz
outsb
dec
ss
dec
inc
out
cmp
cmpsl
jmp
push
ret
lds
insl
pop
or
xor
movsb
xchg
jmp
dec
xchg
mov
pop
adc
repnz
dec
out
gs
sbb
mov
ficoml
mov
movsb
fcomps
pop
inc
fidivl
addr16
les
adc
lock
das
mov
xor
repz
ficompl
hlt
aam
and
sub
jb
into
cmp
aad
jp
pop
pop
leave
jo
xlat
and
lret
ds
pop
loope
ss
or
mov
fsts
call
jo
pusha
xor
fidivrl
gs
xor
jne
mov
fmul
cmpsb
and
jecxz
jle
gs
mov
int
mov
pop
out
filds
jae
add
scas
mov
stos
loope
mov
dec
dec
movsl
idivb
lods
ficoml
pop
xchg
iret
das
pop
or
ljmp
cld
iret
xor
mov
stos
dec
scas
push
xor
push
insl
sub
dec
in
and
jmp
xchg
mov
add
and
inc
cmpsl
mov
jge
ljmp
cmc
adc
jl
enter
adc
jb
push
scas
sub
mov
sub
jp
mov
daa
inc
inc
fucom
out
repz
jp
daa
jge
adc
ss
fwait
inc
cmp
jge
idivl
mov
pop
mov
dec
movd
cmpsl
inc
mov
mov
ret
push
insl
mov
aad
cmp
jae
sub
popf
negl
adc
sub
push
in
push
popa
inc
push
mov
aam
and
xlat
and
mov
fldl
push
mov
jp
outsl
out
loope
scas
imul
add
div
xor
leave
sar
xchg
and
ljmp
mov
lea
jbe
roll
icebp
cmp
test
into
sahf
addr16
and
lds
mov
inc
sub
or
push
dec
mov
jae
leave
cltd
mov
popf
lret
and
cmp
push
push
pop
or
insl
lahf
fstps
test
jge
test
and
xor
mov
dec
fcoml
xor
cmpsb
xor
adcb
pop
into
or
std
xor
stos
ftst
mov
or
hlt
inc
aaa
insb
lret
push
add
or
mov
testb
mov
fcoms
cmp
inc
mov
jno
or
dec
cwtl
jae
rcr
dec
jns
mov
pusha
hlt
xchg
mov
dec
mov
in
push
jnp
and
dec
xor
stc
aam
sar
jns
cmp
push
xchg
mull
jbe
cli
loop
enter
mov
cmc
movl
push
dec
in
shll
lret
jo
sub
aam
ret
loop
inc
sub
fstps
fidivl
loope
pop
hlt
mov
shr
push
dec
lock
adc
jnp
ljmp
aaa
call
add
pusha
mov
fcoms
fisubl
stos
mov
pusha
xchg
sub
mov
or
or
out
insb
or
stc
idivl
outsb
in
push
fisubrl
out
sysenter
xlat
out
xchg
shll
fnstenv
jne
ret
or
inc
bound
mov
xchg
imul
sbb
mov
pop
pop
in
xchg
outsb
andl
and
pop
adc
cmc
mov
scas
adc
sub
das
add
mov
lods
push
xchg
cmc
data16
jae
sub
dec
or
loope
mov
aaa
aam
jle
jo
dec
mov
aaa
inc
inc
in
ss
pop
aam
daa
lods
lock
mov
test
jnp
jmp
movsb
xor
xchg
sbb
out
adc
cmpsb
push
cmp
popa
int3
jmp
pusha
fistpll
arpl
push
inc
popf
sub
jecxz
stos
jl
imul
push
movsl
cmpsl
mov
lock
stc
and
cmpb
sub
mov
orb
xchg
cmpl
mov
addr16
jg
and
fsubrl
xchg
mov
shrb
xor
loopne
pop
test
xchg
ss
out
mov
fnsave
enter
stos
mov
pop
cmc
pop
bound
xor
xor
loopne
and
popf
and
mov
int
jnp
mov
mov
aas
sbb
loope
adc
mov
mov
fnsave
inc
and
pushf
insl
inc
and
inc
xchg
push
jge
inc
mov
enter
pop
pop
push
pop
pusha
jle,pt
sbbb
dec
js
dec
pop
aad
lea
dec
popl
stos
jg
push
clc
mov
addr16
movsb
ljmp
xor
loop
dec
cmp
push
in
sbbl
cli
das
mov
inc
pop
cmc
pop
arpl
imul
outsl
out
dec
push
add
or
data16
shll
mov
cmp
push
lcall
gs
adc
xchg
mov
out
mov
aad
and
dec
mov
je
in
int3
daa
movsb
ds
out
fstps
push
lret
pop
loope
stos
fists
outsl
add
push
cli
nop
pop
or
fnstenv
push
cmp
push
in
or
lods
aam
adc
cmp
dec
cmp
add
cmpxchg
pushf
cmovl
pop
rcl
lds
xlat
scas
xchg
cltd
xor
dec
and
imul
ds
and
mov
jg
jl
mov
data16
xor
xor
daa
shl
fsincos
add
xor
pop
and
push
stc
adc
pop
lods
in
in
lcall
xor
pushf
fidivrl
call
mov
pop
push
fwait
mov
and
jmp
loopne
and
push
adcb
dec
fadd
adc
adc
enter
icebp
mov
push
sub
andb
xchg
pop
or
pop
call
or
inc
int
rorb
xor
mov
test
xor
stos
roll
dec
stc
mov
mov
test
adc
jge
stos
outsl
and
ds
dec
push
push
pop
outsb
adc
shlb
xchg
mov
fwait
pop
into
xor
pop
mov
inc
sbb
lret
add
sbb
adc
lret
andl
jne
hlt
rol
out
sbb
lret
xchg
sub
test
neg
adc
add
xchg
leave
dec
std
ss
pusha
sbb
pushf
lahf
dec
aas
sub
push
mov
aad
aad
or
mov
sbb
mov
pop
scas
cmpsl
mov
inc
mov
cmc
scas
fistl
jg
dec
mov
in
jl
pop
test
aad
fs
and
push
push
out
pop
in
into
adcb
addr16
mov
aas
or
pop
pushf
or
pop
dec
loop
insb
cmp
jmp
mov
push
fisubs
shlb
add
outsl
inc
and
lret
sbb
not
addr16
dec
cmp
in
mov
clc
add
jbe
sub
lcall
push
shlb
dec
dec
inc
mov
or
mov
mov
dec
outsb
sub
div
ljmp
xchg
xor
mov
imul
mov
jle
jo
insb
out
rcll
sbb
cltd
aad
mov
js
xchg
shlb
aad
xchg
pop
pop
mov
jp
inc
mov
dec
cmp
fld
arpl
daa
mov
and
sub
dec
loope
push
ss
loope
shll
rcrl
push
outsl
cld
adc
xchg
xchg
out
lcall
cltd
lcall
inc
in
push
adc
mov
arpl
pop
jne
xchg
ds
push
cwtl
lods
mov
in
cmpsb
repnz
mov
and
notb
dec
xor
lods
out
sub
clc
rdmsr
sub
das
call
in
sahf
jae
and
jge
mov
std
test
push
stos
clc
cld
pop
jbe
jbe
pop
adc
cmc
lret
mov
ds
cmp
or
sti
test
out
cmp
pop
jbe
aam
leave
dec
mov
xor
fldl2t
nop
das
lret
ss
mov
leave
sahf
xchg
dec
xchg
add
sbb
out
cmp
ds
in
lea
daa
mov
stos
fbstp
dec
cmp
enter
mov
xchg
sbb
push
les
imul
pop
push
hlt
push
mov
ret
test
mov
mov
lcall
adc
cmpsl
cmp
mov
sbb
cld
and
jp
sub
push
mov
push
decl
lret
dec
add
mov
xorl
ret
push
fdivr
orl
incb
and
out
aam
dec
sbb
hlt
or
and
xchg
cltd
and
fnsave
cmpsl
add
add
daa
mov
add
xor
jecxz
jns
cmp
lods
repz
add
je
lahf
insl
mov
jne
jne
mulb
filds
and
enter
mov
xor
dec
jle
sbb
add
pusha
jecxz
js
xor
adc
push
lahf
aam
add
adc
and
push
cmpsl
nop
mulb
mov
aaa
inc
nop
imull
xor
test
lcall
jle
dec
xchg
das
ja
cmp
add
in
test
mov
leave
cmp
mov
sub
mov
sar
push
or
icebp
mov
adc
dec
sub
popa
lea
stos
nop
leave
data16
adcl
adc
testb
bound
flds
ret
xchg
test
xor
add
sub
push
lcall
and
adc
mov
dec
decl
inc
or
lcall
jae
sbb
mov
sub
aam
jl
ret
add
inc
push
mov
repnz
loop
pop
xchg
int
dec
hlt
dec
adc
rcrl
mov
flds
les
push
jecxz
inc
imul
pop
mov
push
pop
xchg
jne
sbb
rcll
testl
cmp
mov
cld
or
cltd
enter
mov
cld
mov
cld
outsl
mov
lds
iret
iret
jge
add
pop
or
and
add
mov
dec
imulb
dec
ds
loope
dec
dec
stc
mov
mov
leave
js
aad
int
push
ret
out
out
mov
into
pop
mov
mov
loop
mov
jle
int3
or
pop
dec
dec
adc
fcmovb
add
push
cmpsb
mov
dec
push
icebp
and
xor
imul
mov
add
mov
in
pushf
xor
mov
icebp
jge
cli
std
lret
and
orl
cltd
aam
sub
arpl
mov
sub
cmpsb
adc
insl
mov
jbe
or
mov
adc
push
jmp
mov
movsb
test
mov
ds
mov
jg
jmp
outsl
test
push
les
add
rcll
sub
rol
repnz
int3
or
insb
inc
dec
jo
fldcw
jge
xchg
in
add
pop
std
adcl
test
loope
cmp
add
leave
sub
fucomip
popf
push
adcb
inc
cmp
insb
xorb
add
xchg
xchg
sbb
leave
in
out
sub
ds
fildll
mov
cmp
xor
pop
cmp
pop
sub
mov
or
push
notl
sbb
test
bound
iret
cmp
jecxz
cwtl
cld
ss
jg
push
cwtl
jb
jmp
jle
loop
insl
cmpsb
cmpsb
ret
inc
xor
push
push
pop
push
or
dec
push
shr
dec
in
push
test
cmc
test
or
sub
and
test
leave
aad
xchg
iret
cmp
or
push
es
inc
dec
in
mov
in
lods
pop
pop
shrb
inc
push
dec
sarb
xchg
push
mov
out
aas
push
sahf
cltd
dec
mov
and
xor
iret
inc
fucomi
cs
out
adc
push
add
mov
mov
data16
dec
dec
cmp
xor
xor
sub
stc
lahf
ljmp
mov
lret
mov
jnp
push
mov
lret
mov
xchg
cmc
cmp
pusha
jl
repnz
ret
cmpsb
mov
dec
push
ljmp
gs
pop
in
sahf
cmp
jb
daa
loope
loopne
push
push
jne
jle
sbb
ja
shr
clc
or
add
in
mov
inc
cli
sbb
cwtl
mov
rclb
sarl
dec
out
sbb
mov
cmp
mov
and
push
cmp
fstpl
int3
mov
cs
cmpb
aad
pop
jge
jbe
out
mov
xchg
js
jg
cmp
out
add
lock
xchg
cltd
xchg
je
ja
add
adc
loope
repz
jne
push
xchg
mov
jns
arpl
in
jg
lock
and
mov
faddl
orl
jo
aam
and
cmp
sub
mov
dec
sbb
leave
xor
sub
pop
sub
jns
out
in
in
inc
data16
xor
loopne
lret
sbb
sahf
fndisi(8087
out
addr16
push
push
xor
data16
data16
push
cmpsl
xor
in
dec
das
push
clc
mov
xchg
outsb
dec
mov
mov
push
inc
hlt
mov
xchg
jno
mov
pop
fiadds
cmpb
in
ror
sub
adc
loope
and
fsubs
mov
and
xor
cmp
ds
inc
dec
mov
popf
dec
lds
mov
sub
in
test
lret
mov
adc
jecxz
jnp
mov
push
fldcw
out
jl
push
lods
cltd
outsb
add
xor
dec
inc
aam
std
fdiv
gs
pop
dec
fbstp
loop
pop
cmp
insl
out
sbb
in
scas
and
fimull
jb
stos
add
subl
ljmp
cmc
out
adc
dec
xor
mov
ret
mov
test
xor
in
push
pop
mov
repnz
imul
and
lock
xor
cmc
jmp
sbb
jle
imul
icebp
mov
stos
xchg
roll
cwtl
inc
inc
lahf
cld
repnz
pop
cs
mov
inc
dec
mov
outsb
addb
lea
sarb
sarb
inc
in
push
gs
fs
mov
cli
and
push
lods
pop
and
adc
addr16
adc
dec
pop
test
sbb
in
jle
ss
pop
int3
cmp
xor
aad
out
and
std
sbb
push
aad
mov
int
dec
mov
inc
fcmovnbe
jo
mov
in
popf
ja
roll
cwtl
push
je
xor
pop
push
jne
int
loopne
xchg
imul
sbb
sub
xchg
cld
inc
ret
in
movsb
sub
xchg
or
sbb
cli
sbb
or
jecxz
fcoml
lahf
xor
cli
sbb
cmp
or
sbb
into
js
pop
into
and
fsub
jl
hlt
addr16
mov
out
mov
stc
stos
dec
jo
and
imulb
test
cltd
in
mov
cmpsb
cmp
push
push
or
pop
mov
adc
pop
sti
lds
lret
mov
xchg
popa
cwtl
pop
mov
cmp
pop
or
xchg
xchg
test
fidivrs
jmp
lods
pop
or
mov
daa
or
fwait
mov
sub
mov
jne
sarl
loop
mov
mov
pop
ja
je
and
xchg
addb
sbb
shll
clc
sarl
sub
test
das
outsl
and
lahf
xor
rcr
inc
jno
test
jbe
and
push
lds
movsl
jno
ret
dec
popf
mov
into
call
xchg
push
xor
data16
sbb
xchg
cli
xchg
enter
add
adc
jnp
dec
inc
mov
xchg
out
clc
scas
sbb
jle
and
in
scas
push
jg
push
inc
xchg
pop
jns
cmpl
aam
inc
dec
clc
dec
mov
mov
popa
jno
pop
call
enter
mov
adc
fs
inc
jle
filds
lahf
loope
cltd
add
pop
cwtl
pop
test
mov
imul
mov
pop
dec
cltd
mov
push
xor
mov
add
orl
inc
lods
stos
and
lods
push
cmpsl
cmp
ficompl
int
sub
mov
xor
loope
and
push
stos
jo
inc
es
and
xchg
ret
mov
out
push
cmpsl
inc
or
int
loop
leave
dec
xlat
jp
mov
dec
rol
mov
sbb
std
and
push
mov
inc
sub
inc
mov
imul
cld
div
sbb
pop
les
ljmp
aad
cwtl
sbb
sbb
jno
dec
in
in
adcb
lods
mov
pop
or
sbb
shl
mov
stos
mov
inc
fisubrs
in
or
cmpsl
push
pop
aad
in
and
mov
lret
push
lods
and
inc
sub
inc
push
dec
icebp
xchg
dec
aad
icebp
scas
insb
xlat
mov
jl
imul
xor
shll
les
out
adc
xor
push
cwtl
loope
gs
call
sub
cs
cmp
push
push
shrb
jbe
pop
cwtl
imul
repz
jmp
pop
mov
dec
leave
add
pop
lock
mov
lods
loope
nop
imul
mov
ret
repz
orl
sbb
cmp
pop
sub
fdiv
jmp
in
inc
push
lahf
adc
arpl
cmp
repz
pop
inc
inc
cmp
out
ljmp
mov
push
loop
movsb
call
ficoms
inc
pop
lahf
enter
daa
ret
imul
mov
test
insb
cltd
ficompl
std
pop
not
sbb
js
push
lods
jns
xor
adc
sbb
push
pushf
jge
jle
rcrl
aam
dec
cli
aaa
xlat
lea
cmpsb
xor
pop
decb
push
fwait
sbb
add
and
fwait
stc
xchg
lods
jge
enter
pop
loopne
rorb
ljmp
xchg
inc
dec
mov
dec
add
sub
movsl
shlb
out
jno
test
or
xor
xor
xor
add
insl
sbb
loope
ficomps
xchg
fnstenv
pop
fildll
push
or
cmpsl
fildll
std
mov
pushf
jne
mov
popa
test
mov
fisttpll
sbb
lods
cmp
cmpsb
daa
mov
jg,pn
xor
ja
mov
es
pop
ret
ret
mov
and
pop
cmp
push
icebp
das
scas
cmp
jl
es
add
mov
gs
lcall
dec
movsl
xchg
aaa
adc
add
or
mov
push
jp
push
dec
out
dec
cli
stos
dec
and
sbb
test
mov
loop
xor
pop
clc
and
push
pop
mov
jmp
lods
mov
popf
mov
iret
adc
jbe
and
imul
or
mov
mov
rep
fsubl
sub
out
add
xchg
push
cmp
sub
mov
xor
and
imul
cmc
out
lcall
inc
xchg
push
stc
jns
bound
mull
push
push
aam
and
js
ficoms
je
sbb
mov
xchg
js
sbb
imul
adc
add
push
or
pop
cmp
call
adc
inc
cwtl
popf
xchg
mov
and
sbb
cmc
xchg
test
out
sbb
push
stos
mov
sbb
andb
out
sbb
jne
adc
sbb
xchg
pop
sub
jl
cmp
jmp
stc
lods
xor
mov
jl
push
insl
inc
adc
pop
mov
mov
mov
dec
fldcw
mov
scas
inc
xchg
or
sub
cmp
add
jl
cmpsb
add
aas
test
leave
in
icebp
xor
sbbl
mov
imul
mov
inc
je
sub
add
inc
lods
ds
push
sub
sbb
inc
mov
pop
dec
or
mov
shlb
xor
punpcklwd
mov
adc
sub
fcomps
lods
bndstx
mov
out
dec
jo
pop
mov
lods
fistpl
sbb
mov
lods
inc
jo
std
jg
insl
xor
test
cs
lret
pop
popa
lds
lea
jmp
pop
xchg
ljmp
lahf
jmp
and
jecxz
sub
sbb
aas
cmp
lea
mov
imul
lods
cmp
add
bound
gs
mov
mov
clc
mov
aaa
ret
sbb
jl
inc
mov
or
jbe
and
inc
pusha
les
xor
mov
popa
mulb
pushf
push
sbb
xor
add
enter
inc
addr16
add
es
push
and
sub
int3
fld
loope
pop
cwtl
and
pop
jno
pop
imull
iret
xor
pop
pop
sar
lret
insb
shrl
les
cs
aaa
sbb
adc
mov
sub
jmp
inc
sbb
mov
inc
push
cltd
mov
push
push
sbb
mov
fs
inc
inc
sbb
cld
cltd
cli
test
dec
mov
or
jge
in
rolb
stc
iret
outsb
lods
sti
cwtl
xor
and
loopne
jge
push
and
inc
daa
shrl
mov
jg
pop
add
pusha
add
cmp
loope
idivl
popf
xor
les
mov
loopne
imul
pop
into
cli
popa
in
imul
daa
xchg
mov
xchg
outsb
push
xor
xchg
mov
sarb
loope
mov
call
xor
das
in
adc
mov
mov
lahf
push
mov
into
pop
je
inc
cmp
iret
ljmp
inc
js
bound
out
xor
sbb
mov
pop
push
fistl
pmaxub
je
mov
push
stc
mov
xchg
call
lea
arpl
fs
pop
jecxz
xchg
sub
pop
jno
js
nop
pop
jmp
jmp
test
pop
shl
stos
testb
inc
jmp
loopne
xor
mov
push
adc
xor
mov
sbb
jge
cmpsl
movsl
add
arpl
daa
lods
pop
sarl
lea
or
push
pop
lahf
push
loop
pushf
xchg
test
mov
ss
mov
sbb
mov
sub
push
out
push
aas
jo
pop
xor
mov
loop
inc
mov
aam
in
fsubs
or
fsubs
in
es
mov
flds
clc
sub
sbb
sahf
jmp
push
div
mul
lds
jmp
je
test
cli
cmp
xchg
outsl
sub
pop
repz
xor
adc
fsubl
and
jecxz
mov
jo
inc
push
inc
push
cmpsl
fimuls
mov
or
mov
and
mov
push
sbb
out
loopne
xchg
int3
and
pusha
xor
dec
fwait
push
push
add
pusha
mov
jle
mov
pop
scas
push
dec
or
pop
adc
or
lods
incl
lods
cmc
jg
jle
mov
mov
xor
sbb
insl
inc
mov
or
sarb
popa
gs
lret
test
fmuls
das
stos
xchg
or
mov
mov
mov
jns
mov
mov
dec
mov
rorb
test
arpl
pop
adc
push
push
sub
cmp
sbb
pop
mov
jno
cmp
inc
push
shlb
xor
pusha
pop
mov
out
jmp
cwtl
sbb
dec
movsl
daa
jnp
sbb
loop
in
cmp
stc
mov
mov
or
sbb
or
add
fwait
ss
sti
lock
jb
adc
popa
push
mov
push
and
std
lcall
fmuls
jae
mov
daa
sub
movsl
push
shl
and
jo
mov
mov
push
sbb
xlat
pop
mov
xchg
pop
test
jecxz
mov
mov
nop
mov
arpl
jo,pt
addr16
pop
cltd
mov
sbb
push
inc
fdivrs
mov
mov
int
mov
sbb
mov
push
pop
in
lret
jne
pop
scas
push
and
mov
aaa
sub
dec
rcr
jno
push
sbb
sbb
nop
lock
mov
xor
cmp
out
dec
imul
lock
sbb
pop
jle
cmc
ds
ror
mov
or
popa
mov
cmpb
pop
rcll
push
shl
aaa
int3
xchg
pusha
pop
inc
xchg
iret
cmp
xlat
xchg
aas
mov
xchg
xor
sub
dec
mov
dec
dec
and
xchg
mov
dec
dec
ss
adc
xor
movups
fxch
xchg
mov
popa
movl
cs
jns
arpl
ror
mov
push
adc
pop
and
in
lret
fistps
insb
pop
add
test
mov
test
imul
pop
add
inc
push
adc
mov
push
daa
bound
sti
popa
adc
dec
repnz
add
ja
sti
dec
mov
imul
mov
xor
pop
leave
pop
push
scas
into
dec
inc
fwait
pop
push
lahf
pop
sbb
mov
jo
out
push
lret
sbb
mov
stc
ss
xchg
push
rorb
xchg
dec
test
insb
cmp
out
push
xchg
sbb
lahf
jno
andl
pop
inc
ds
daa
lret
out
out
mov
leave
xchg
mov
fcoms
cmp
adc
push
enter
push
pusha
out
cmpsl
xor
repnz
stos
inc
or
adc
mov
push
test
cmp
mov
push
sub
stc
fmull
inc
inc
push
lock
jmp
mov
mov
jnp
enter
push
rcll
cmp
sub
ja
jmp
xchg
xor
ror
repz
sti
sbb
push
xchg
pop
push
mov
jp
mov
aad
cli
lods
jnp
inc
sub
push
xor
iret
jno
cmc
sbbb
cmpsb
fdivl
cmp
sbb
push
xor
dec
fcomi
incl
call
xchg
or
leave
les
cmp
sar
sbb
push
mov
mov
dec
data16
pop
mov
in
or
and
stc
push
mov
arpl
sub
pop
adc
mov
jg
xor
hlt
sbb
fcomi
fidivl
push
in
cli
sti
or
insl
xchg
addr16
popf
xlat
scas
pushf
mov
inc
mov
mov
cmc
jo
inc
xlat
jbe
sub
sar
adc
inc
aam
mov
or
orl
xchg
fs
inc
push
or
and
mov
cmp
stc
or
fsubrl
lret
jo
stc
lret
or
pop
xchg
xchg
in
adc
sbb
mov
mov
ret
dec
lods
call
adc
scas
add
push
inc
insw
sub
adc
fdivrl
mov
adc
enter
ljmp
add
mov
pop
push
add
mov
add
add
fistl
mov
or
int
bound
inc
xchg
jns
lods
bound
push
dec
stos
iret
into
mov
sbb
lret
add
lahf
pop
pop
pop
mov
cli
loopne
inc
jle
sbb
lcall
int3
sti
lcall
loopne
xor
push
shll
je
out
and
mov
pop
mov
sbb
push
scas
outsb
sbb
cmp
add
push
inc
mov
notl
sbb
push
cmpl
sbb
jp
push
sbb
popf
div
inc
or
aad
and
push
dec
dec
sahf
jp
jb
aaa
shll
dec
push
sti
fwait
ror
add
test
std
stos
push
push
cs
fs
or
mov
dec
cltd
jnp
inc
push
test
mov
inc
ss
mov
imul
out
adc
loopne
es
dec
cmp
pop
cmp
jb
push
adc
jb
imul
or
xchg
sahf
cmp
sub
bound
fs
or
stc
xlat
inc
pusha
and
xor
inc
mov
dec
and
nop
push
out
sbb
loopne
lahf
ret
into
aas
push
shlb
jp
xor
and
int
push
xor
mov
jmp
out
mov
lea
xor
mov
cmpsl
shrb
add
repz
test
fwait
or
add
lods
fdivr
pop
xorl
adc
ficoml
jb
mov
or
lcall
inc
clc
sub
push
shll
jp
mov
jle
sub
arpl
jno
mov
test
cmp
shlb
cwtl
jp
outsb
sbb
cmc
aas
push
in
sub
lcall
inc
sbb
jbe
cltd
ret
or
es
jp
push
test
cmpsl
sti
clc
adc
out
imul
mov
in
int3
ffree
mov
js
jl
fnsave
inc
adc
mov
data16
push
jbe
pop
xchg
mov
cld
mov
scas
pusha
mov
sbb
and
xchg
adc
int3
sub
push
push
jl
test
out
imul
sbb
add
lods
gs
push
jae
pop
stos
ds
inc
or
lret
xor
testl
pop
push
add
shlb
cld
mov
lock
inc
mov
adc
sub
push
jp
fiaddl
mov
cs
xor
mov
fs
es
jns
insb
les
mov
rcl
jnp
push
arpl
loope
cltd
dec
fbld
push
sbb
add
xchg
fs
cs
icebp
dec
and
sti
jnp
nop
lret
jmp
nop
add
cmpsl
cs
xor
fidivl
cmp
xchg
mov
dec
mov
mov
repnz
dec
sub
mov
cld
es
push
mov
jmp
jge
sub
icebp
int3
pop
mov
cmp
push
das
loop
and
aaa
jb
pop
or
push
lds
mov
or
test
xlat
loopne
xchg
lock
mov
arpl
jne
mov
and
aaa
cwtl
lahf
sub
jbe
pop
push
jae
inc
jae
mov
jnp
jae
pusha
test
xor
mov
push
ja
mov
dec
sub
int3
fmul
pop
mov
adc
cmp
add
jl
inc
add
fisubrs
lock
iret
loopne
out
cmp
das
call
fmuls
push
out
and
and
jge
pop
mov
lret
pop
dec
pop
stos
fsubrl
outsl
xchg
fnstsw
fnsave
fistpl
xor
fisttpl
add
scas
out
fwait
or
lds
sub
subb
leave
je
or
insb
or
push
icebp
xchg
sarb
roll
rcrl
adc
repz
subb
lods
jo
ja
mov
stc
mov
nop
fsubs
or
push
sub
mov
push
and
negl
add
cmpl
pop
xor
cmp
jp
xor
mov
push
jae
or
ror
out
or
jl
popf
insb
and
push
imul
jne
notl
xchg
push
mov
mov
test
lcall
jnp
pop
dec
divl
inc
pop
lahf
or
loopne
fwait
xchg
or
icebp
push
leave
outsl
sub
mov
jbe
inc
pop
add
inc
dec
ficoms
fnstcw
in
lds
dec
lds
leave
adc
imul
lret
enter
mov
or
xor
arpl
add
daa
je
xchg
test
mov
or
cli
mov
mov
pop
push
push
outsl
jno
ret
and
adc
cmpsb
std
jae
sahf
mov
dec
bound
xchg
rcl
pop
cs
mov
cmp
decb
cmpsb
jae
push
ljmp
sahf
jnp
sbb
pop
jns
cltd
shrb
dec
sbb
bound
and
int3
mov
daa
push
mov
jb
hlt
mov
rol
pop
movsl
inc
vmwrite
cmpsl
sub
or
push
jmp
adc
sbb
fldt
jnp
jnp
ret
jl
push
jle
push
add
or
mov
loope
shll
iret
out
addr16
in
mov
jnp
repz
cmc
inc
sbb
add
aad
in
test
sar
and
je
testb
add
dec
sub
jne
iret
mov
aaa
xorl
insb
stc
pushf
or
fwait
xchg
and
fdivrs
sub
pop
repz
jns
jbe
push
aas
insl
shl
mov
rsqrtps
jmp
lods
leave
test
xchg
int3
mov
pop
mov
lock
pop
ja
pop
fsubrs
inc
dec
loope
and
pop
cmp
fcmovu
lahf
inc
mov
mov
mov
lock
sbb
add
leave
cmpsb
in
sbb
sub
mov
cmp
rcl
xchg
out
insb
mov
inc
lret
inc
insl
xor
rcrb
xor
jecxz
xor
adc
add
mov
mov
sub
push
and
loop
xchg
push
es
enter
stos
aas
call
inc
and
pop
faddl
xchg
mov
sbb
sahf
xor
and
mov
iret
jae
mov
pop
cmp
loopne
int3
or
push
cmp
out
aaa
sti
add
mov
push
and
outsb
mov
adc
fs
mov
dec
stos
ret
inc
dec
sbb
jns
mov
insb
push
cmpsl
add
cwtl
mov
notb
icebp
sbb
out
fnstsw
jg
int
gs
repz
lods
loopne
and
fisubrs
xor
gs
es
cli
and
ret
pusha
jecxz
push
loope
enter
jp
adc
sbb
test
das
jo
test
push
add
add
in
xor
mov
xchg
arpl
in
adc
and
mov
mov
test
xchg
sbb
aam
push
js
cltd
repz
fwait
push
in
jmp
test
mov
repz
loop
dec
push
add
hlt
cli
dec
adc
idiv
push
sbb
dec
fbld
idiv
xchg
ja
jno
stos
mov
int3
fsubrl
mov
adcb
xor
push
jle
lea
out
test
add
adc
out
lret
inc
mov
js
fdivrl
push
sub
mov
fwait
mov
decl
pop
mov
nop
pop
dec
jmp
bound
jle
pop
jg
shlb
pop
incl
pop
lcall
dec
in
pop
pop
in
out
fistpll
ljmp
inc
sbb
test
ds
outsl
sbb
stc
fs
cmp
dec
into
sub
add
sbbl
mov
out
das
jg
pop
cmc
mov
pop
mov
dec
xor
push
push
jns
lods
adc
adc
sub
xchg
test
in
cld
sti
push
cs
dec
pop
pop
xor
push
shrl
jns
das
and
cli
cmpsl
xchg
iret
stos
push
aaa
jbe
sbb
sub
push
test
in
xor
and
jb
test
mov
pop
mov
ds
jne
cli
in
in
xor
xchg
or
int
lods
fisubrl
pop
add
test
and
sub
lea
mov
inc
lret
or
push
pop
into
fsubrl
dec
adc
and
xchg
mov
jne
dec
lea
jns
adc
adc
pop
push
push
into
push
loop
rclb
popf
jmp
into
ljmp
jecxz
fwait
inc
shll
xchg
icebp
inc
sbb
adcb
ret
in
jl
rsqrtps
sub
decl
jmp
cmpsb
sahf
jo
ljmp
stc
incb
xor
repz
xor
or
jge
and
pop
and
fmull
cmp
pop
adc
jno
jl
jae
fistpll
push
jne
testb
in
bound
test
popa
aaa
inc
repz
cli
or
xchg
mov
sbb
mov
inc
fcom
fdivl
jns
dec
sub
shrb
fnstcw
add
fcoml
push
mov
dec
leave
mov
shl
inc
cmpsb
lods
sbb
dec
js
jnp
dec
add
bound
mov
pop
loop
fbld
movsl
roll
mov
and
call
jmp
push
repnz
rcrl
icebp
push
in
je
lahf
aas
xchg
xor
nop
iret
icebp
sbb
das
inc
xchg
out
push
or
shl
jmp
testl
pop
lret
lea
fs
mov
clc
enter
outsl
cmp
mov
or
movsb
fwait
out
mov
push
scas
inc
add
mov
icebp
icebp
aam
sub
dec
inc
xchg
data16
inc
sub
pusha
adc
out
push
sub
sbb
push
cmp
xor
sub
vmread
pop
shlb
call
add
stc
ficoml
jle
lea
sub
imulb
push
cmp
fisubrl
or
jo
mov
cmp
lea
hlt
jo
and
and
or
fisubrs
pop
sub
cwtl
cmp
repz
fldln2
sahf
mov
jb
aaa
lea
xor
mov
push
jmp
adc
mov
lcall
mov
loop
pop
out
jp
and
sub
mov
add
mov
andl
test
movsl
xchg
add
out
in
fadds
nop
je
jp
xor
test
ss
imul
sbb
adc
fstps
arpl
mov
insl
push
out
cmp
adc
je
icebp
cmc
cld
neg
push
pop
sub
jl
out
sub
xchg
and
ljmp
push
fs
ret
mov
inc
js
inc
ficoml
xchg
or
shrb
loopne
scas
push
add
inc
or
push
popa
shr
cmpsl
mov
xor
int3
push
dec
push
ja
xor
cld
mov
mov
outsb
mov
ret
imul
cltd
adc
fxch
jge
fsubl
addb
bound
jge
jg
pop
jns
mov
and
adc
push
jne
aas
adc
shl
pop
loopne
lcall
mov
jae
adc
cmp
inc
sarl
add
jmp
ret
add
xchg
or
in
jns
pop
push
test
adc
pop
jnp
aaa
push
stos
and
add
shr
xor
idiv
dec
sti
dec
mov
pop
in
push
cwtl
leave
clc
xchg
cmc
sub
mov
push
ds
sub
fsubs
lret
arpl
int3
in
loopne
adcb
dec
stos
jb
sbb
scas
scas
pop
inc
and
pop
mov
lock
imul
les
or
cs
mov
sbb
push
test
dec
iret
xchg
sbb
out
insb
dec
icebp
lods
sbb
adc
lahf
test
pop
mov
outsl
ror
imul
cmp
xlat
jmp
cmpb
mov
inc
jb
cmp
add
es
mov
sbb
or
push
push
and
shlb
je
add
sub
mov
mov
ja
es
dec
cli
out
xchg
outsb
scas
mul
ja
mov
sub
pop
dec
or
jnp
inc
inc
push
enter
imul
out
lds
out
jne
mov
push
das
in
cmpsl
and
sahf
insl
sbb
push
iret
push
pusha
pop
jp
dec
ret
pusha
imul
std
or
insl
test
xchg
stos
xorl
sbb
cmp
dec
cltd
lret
xor
cwtl
int3
mov
push
mov
fistpll
mov
dec
dec
sub
cmpb
jmp
enter
ja
inc
and
jne
jp
ds
pop
es
std
nop
mov
pop
jle
into
mov
adc
hlt
xor
cwtl
loopne
scas
inc
pop
push
out
mov
inc
lcall
fsubrs
in
cmp
notl
xchg
cmp
jp
or
or
scas
xchg
add
test
cmp
inc
clc
inc
imul
mov
xchg
mov
mov
inc
sti
shll
mov
pusha
aad
xchg
sub
stos
xor
mov
mov
loopne
arpl
imul
test
loopne
data16
cmpsl
mov
jp
push
xorb
cld
dec
movsb
jno
sub
loop
jecxz
addr16
sbbb
mov
xchg
aas
pshufw
fstl
pusha
insl
push
xlat
xchg
imul
mov
rolb
rol
repnz
pushf
hlt
ja
jp
push
shrb
dec
sti
lods
xor
adc
cmpsb
mov
rorl
inc
inc
adcl
xor
repnz
negl
sub
rcrl
rcll
fcmovne
dec
int
aam
jge
and
ss
sbb
jnp
cli
mov
rcl
lret
dec
dec
inc
lea
mov
clc
stos
call
or
push
movsb
adc
xlat
addr16
mov
inc
push
cmp
enter
add
scas
stos
adc
daa
or
inc
popf
jg
dec
and
and
xchg
hlt
jae
stos
mov
fld1
into
or
lahf
call
fs
imulb
jno
outsl
adc
bound
fdivp
cs
xchg
std
filds
mov
mulb
in
inc
pop
fimuls
dec
and
dec
in
call
out
xchg
fstps
rclb
repnz
push
loopne
hlt
pusha
cltd
pop
push
scas
jbe
xchg
push
cmc
dec
push
and
and
sub
and
xorb
jmp
cmp
or
inc
xchg
and
fnstsw
xchg
inc
sbb
cwtl
vcvtsi2sdl
pushf
xchg
filds
es
in
mov
aam
repz
xchg
nop
xchg
aas
push
mov
popf
xchg
gs
fwait
sub
daa
int
xor
imul
ljmp
pushf
outsl
mov
imul
sub
dec
push
fndisi(8087
xchg
adcb
out
push
mov
fisttpll
pop
sbb
jae
lcall
popa
insb
popa
jl
cmp
nop
dec
pop
adc
out
outsl
xor
jns
jl
enter
dec
outsb
mov
inc
pop
xor
mov
sbb
nop
into
test
dec
shlb
push
andl
gs
mov
push
jbe
fisubs
arpl
push
inc
dec
mov
cli
dec
mov
xor
popa
jbe
add
mov
sub
fidivs
sub
adc
pushf
or
out
test
jae
sbb
popa
jae
enter
mov
roll
call
rcrb
xor
push
mov
and
mov
push
sub
divb
das
inc
aas
sbb
pop
fdivrl
xchg
popa
xchg
mov
out
out
mov
inc
mov
mov
adc
push
xor
lock
cmpsb
jle
out
xor
mov
dec
dec
adc
out
arpl
jecxz
outsb
sbb
add
loope
rcrb
mov
lea
clc
lret
je
lds
and
call
pusha
xlat
lods
loope
popa
adc
daa
dec
push
mov
add
xor
or
repnz
lea
rorl
int
loopne
cmp
call
and
hlt
imul
mov
loopne
lret
add
repnz
pop
pop
jge
add
lods
xchg
cltd
je
xlat
pop
clc
cmp
and
test
xchg
sub
loopne
cli
test
int3
stos
dec
mov
cmp
nop
mov
and
loop
aaa
jae
sbb
and
in
rorl
iret
iret
arpl
pop
lds
mov
cmp
in
shl
add
pushf
jmp
vaddps
icebp
sub
xchg
and
sub
sbb
push
mov
lcall
xlat
pop
jecxz
or
jp
inc
test
lds
ret
imulb
sbb
fldcw
pop
enter
daa
pop
add
fidivrl
cmp
cmp
push
sub
leave
jae
rcrb
xorl
pushf
pop
pop
xchg
cltd
lds
lods
mov
jecxz
pop
repz
adcl
cmp
jae
sarl
adc
mov
jmp
pusha
mov
ss
cld
std
out
jne
xchg
das
mul
in
push
cld
cmp
cmp
pop
xchg
nop
or
imul
ficoml
cli
in
sbb
or
pop
push
movsl
test
push
add
fdivs
mov
mov
lock
insl
lret
pop
scas
jb
fdivs
aam
inc
out
rorl
sbb
mov
xor
daa
bound
push
aad
ja
out
sti
xchg
mov
clc
xchg
xchg
mov
dec
nop
xor
jg
insb
adc
nop
shl
xchg
add
mov
mov
mov
add
int3
test
loopne
out
and
push
push
imul
inc
aam
pusha
add
dec
xor
iret
int
ss
xor
jo
in
and
in
mov
enter
inc
xchg
leave
rcrl
and
sub
cmp
add
xchg
cmc
and
sbb
cli
inc
adc
rcrl
jnp
mov
sub
test
pop
jecxz
adc
aas
push
inc
inc
jno
mov
in
mov
jmp
push
sbb
stos
cmpsb
les
jo
in
sub
imulb
or
dec
dec
and
and
mov
xchg
ret
mov
inc
jne
outsl
dec
into
leave
loop
add
jnp
mov
int3
fisubl
mov
push
lds
mov
jl
inc
out
adc
xchg
mov
and
add
mov
pop
mov
outsl
dec
dec
sbb
imul
xor
hlt
sub
in
jl
and
les
cmpsb
std
fsub
in
add
mov
sbb
out
insb
inc
push
shlb
and
int3
push
lods
hlt
push
cmp
ss
out
jae
adc
add
push
in
mov
fsub
xchg
mov
lret
call
inc
cmp
bound
mov
ret
mov
mov
out
jmp
dec
filds
gs
push
rorl
and
pop
sahf
push
test
adc
ficomps
and
fwait
es
sbb
mov
jge,pt
mov
bswap
aas
pop
mov
icebp
imul
push
xorl
add
ja
iret
and
sbb
xchg
loop
ss
scas
sahf
mov
pop
in
pop
arpl
mov
cli
cld
aad
fmulp
xchg
dec
cmpsb
jno
adc
mov
cld
pop
jbe
push
dec
in
ss
cltd
out
sub
lea
adc
arpl
sub
aaa
jg
sbb
push
arpl
jl
sarb
pushf
mov
xlat
lods
mov
mov
das
or
inc
stos
mulb
pop
lret
data16
jl
int3
cmc
int
or
or
cs
mov
push
cmp
mov
cs
cltd
mov
ret
jb
repnz
xor
dec
pusha
mov
pop
ljmp
mov
xchg
inc
fldl
push
dec
jnp
imul
cld
jae
cmp
movsb
jp
enter
inc
cmp
pusha
adc
mov
js
xor
sbb
in
scas
call
sub
adc
test
mov
cmp
mov
dec
cltd
ret
cmp
cmp
out
xchg
push
add
dec
int
mov
sub
mov
faddl
rcll
xor
inc
stos
xchg
pusha
jae
loope
sbb
jo
dec
int
pop
xlat
mov
rcl
loope
or
fucomp
jge
pop
and
inc
incb
push
or
fstpl
pop
xchg
jo
push
add
dec
into
in
stos
in
jo
cmpsl
xchg
or
mov
test
stos
add
add
insl
xor
in
mov
xchg
xor
call
jl
fsts
test
fiaddl
lea
lods
vucomisd
in
ret
inc
jmp
cmp
paddq
lcall
push
mov
stos
and
mov
xchg
mov
add
gs
add
aaa
bound
out
fwait
in
test
ret
das
not
cmp
mov
imul
pop
inc
movsb
jecxz
cli
add
jne
mov
adc
cs
loopne
or
lea
inc
jmp
xchg
ret
cmp
into
cs
cmc
inc
outsb
fstl
jp
pop
push
lahf
lea
addr16
repnz
mov
fsubrs
or
adc
popa
lret
push
or
or
mov
in
mov
jg
dec
pop
fstl
jle
push
dec
dec
std
lret
pop
mov
or
inc
mov
daa
clc
les
idivb
out
ret
repnz
pop
adc
push
jbe
push
sub
gs
pop
call
and
dec
lds
mov
cmp
pop
and
mov
test
fldenv
dec
mov
repz
mov
cwtl
mov
sahf
lods
aas
cmp
dec
jbe
sub
and
imul
mov
sub
adc
xchg
jmp
insb
js
and
lcall
pop
cwtl
xchg
push
negl
push
cmp
xor
mov
scas
fstl
xchg
stos
clc
aam
fldt
sub
cmp
insb
cmc
stos
xchg
test
mov
jmp
popf
adc
mov
mov
outsb
pop
and
or
push
mov
std
testb
xlat
push
pop
xchg
mull
mov
inc
inc
lcall
pop
pop
out
int
loopne
test
sbb
stos
out
arpl
icebp
adc
fiaddl
push
inc
in
imul
inc
arpl
bound
popa
mov
xor
and
cwtl
outsl
push
aas
stc
sbb
out
lock
cmp
and
xor
jecxz
shl
and
add
sbb
add
cwtl
ficoml
pop
mov
mov
jl
mov
data16
ds
mov
int
popf
fwait
movsl
movsb
inc
mov
je
mov
mov
or
push
lods
and
leave
adc
and
leave
adc
int3
sahf
cld
mov
scas
mov
das
mov
jnp
mov
sahf
outsb
push
in
cs
push
pop
xchg
inc
mov
hlt
aaa
or
in
adc
pop
arpl
andb
jb
push
jmp
pop
dec
xchg
dec
cmc
std
scas
loopne
add
cmp
push
jmp
repz
jg
inc
jo
pop
jno
sahf
insl
rol
and
rolb
or
adc
mov
fwait
and
mov
inc
pop
adc
rorl
fisubrl
mov
or
mov
les
incl
cmp
pop
call
insl
add
loope
push
jp
jb
out
jnp,pn
out
add
and
iret
xchg
out
mov
icebp
repz
mov
test
in
sbb
or
sahf
popf
ret
popa
jmp
imul
push
jl
dec
cld
fwait
dec
push
push
insl
jge
inc
adc
enter
mov
imul
jb
and
xor
push
es
push
xchg
arpl
cmpsb
xchg
loop
stos
pop
push
scas
movsb
shlb
test
movsl
nop
out
lods
imul
push
ficoms
fcmovbe
pop
pop
or
cmp
imul
lock
sub
sbb
in
push
mov
dec
cwtl
mov
mov
add
xchg
adc
inc
fistpl
push
inc
adc
push
sbb
adc
xor
and
jmp
mov
push
icebp
jge
mov
cmp
cltd
dec
pop
jmp
push
push
ljmp
in
xor
mov
cld
pop
inc
adc
pop
cltd
inc
out
mov
cld
faddl
mov
rcll
or
cmp
in
sub
dec
jne
cmpsl
repz
lret
arpl
push
into
mov
imul
mov
lea
pusha
ret
fdivl
jo
test
fldt
lret
fwait
cmp
push
sti
aas
dec
and
stos
jmp
push
push
sti
scas
fisubs
notb
jge
pop
mov
int
push
jo
inc
push
aad
sbb
lea
std
lods
pushf
cmp
inc
mov
xchg
push
jl
rcll
dec
mov
cmp
sbb
fdivrs
and
and
sbb
int
inc
jp
dec
outsb
jno
push
xchg
imul
mov
lock
pushf
test
xor
cmp
mov
push
scas
leave
xor
mov
cmp
out
mov
cmpsb
scas
lods
jbe
push
lds
cmp
lret
dec
push
push
dec
cli
outsb
push
call
jo
xor
pusha
inc
shlb
inc
adc
sbb
loope
sti
fdivs
insb
loop
push
pop
imul
dec
in
rcr
mov
mov
lods
jo
dec
mov
inc
cmc
adc
ficoml
xor
das
or
dec
cmp
loopne
in
dec
mov
pop
mov
add
movsb
inc
xchg
mov
adc
std
clc
mov
popf
add
pop
stos
add
and
sbb
add
add
jecxz
repz
adc
pop
data16
nop
insb
jmp
lods
pop
sub
push
cmp
or
mov
xchg
stos
add
cmp
fsubl
or
stos
in
xor
stos
cltd
and
lret
cld
cmp
mov
leave
clc
arpl
adc
rolb
xchg
mov
add
pop
mov
stc
jne
inc
pop
and
and
mov
mov
rclb
jae
mov
dec
jg
pop
push
mov
icebp
push
movsb
xchg
imul
inc
ss
cmc
pop
pop
sbb
push
cmp
pusha
mov
pop
std
stos
xlat
out
add
cmpsl
add
mov
popa
movsl
sarl
cmp
es
rolb
fistps
cmp
lds
test
out
cmpsl
gs
mov
mov
xchg
cld
xchg
stos
inc
xchg
ljmp
repz
sti
fs
sub
hlt
pop
xor
inc
xchg
bound
jg
out
test
jl
dec
inc
sbb
xchg
jbe
aaa
or
sbb
sbb
pop
mov
lahf
mov
xchg
jl
out
fidivl
mov
mov
shlb
pop
loop
stos
mov
mov
js
mov
cmp
pusha
fisubrs
dec
jp
push
test
xchg
outsb
out
loopne
xchg
push
rorb
push
push
cmp
mov
cmp
scas
lds
fwait
ja
xchg
or
inc
mov
sbb
mov
inc
mov
fbstp
mov
add
pop
push
in
mov
roll
xorb
jno
out
int
dec
or
loope
jns
pop
push
mov
call
cld
repnz
clc
lock
popa
mov
xchg
cmc
pop
cmpsb
mov
mov
sbb
mov
fcomps
jmp
insb
or
or
mov
inc
xor
fwait
pop
in
mov
or
lods
and
rcr
or
adc
jecxz
clc
mov
pop
sbb
scas
lret
pop
lods
push
inc
cli
out
and
mov
repnz
xchg
popa
jle
fdivr
sbb
lods
jo
adc
push
or
mov
imul
ljmp
push
push
lods
mov
mov
cmpsb
dec
shl
in
call
sbb
or
flds
cmp
inc
adcb
outsl
xorps
popa
outsl
xor
dec
xchg
sub
xor
aaa
jb
jecxz
fmull
es
shlb
mov
mov
outsb
lahf
jge
int3
fdiv
jnp
vpshlw
sbb
xor
negb
jo
sub
ja
lahf
mov
lret
jg
into
jle
cld
cltd
lock
loop
es
repnz
in
ljmp
clc
aam
lock
cli
rcl
or
loop
call
dec
loop
jne
shrb
xor
lods
adc
jb
ds
loop
xchg
xlat
push
inc
subl
shl
mov
test
aad
mov
lods
cs
add
lods
cmp
adc
xchg
cmp
mov
sbb
arpl
jbe
cmp
mov
mov
aam
pop
or
sub
hlt
test
push
push
or
jno
xchg
aad
jecxz
lahf
push
pop
movsl
xor
out
cmp
mov
test
push
lret
pop
loopne
inc
mov
insb
and
bound
mov
mov
ret
mov
mov
imul
and
jmp
ss
and
pop
lea
and
in
shr
xchg
sti
addr16
mov
jg
popf
or
repnz
insl
scas
adc
fnsave
sti
sub
loop
and
pop
add
fidivrl
dec
jp
outsl
mov
aaa
inc
adc
adc
cli
pop
sahf
sbb
cmp
call
fmul
pop
aaa
adc
jnp
arpl
xchg
cmp
adc
jge
es
push
imul
iret
xor
je
shl
aad
mov
push
in
adc
jno
xlat
jo
dec
inc
fs
in
nop
pushf
lock
lds
adc
jmp
xor
dec
jno
fnstcw
lret
adc
aaa
xchg
xor
data16
push
xchg
js
into
sbb
jle
add
xchg
inc
or
in
shll
cmp
pop
xor
repz
jg
dec
mov
fistpl
dec
inc
loopne
mov
cmp
mov
adc
shll
cltd
mov
jle
loop,pt
mov
inc
or
jbe
sub
sbb
mov
insb
jmp
int
popf
adc
cmc
and
or
dec
bound
sbb
mov
xchg
add
cltd
pop
fnstsw
in
hlt
cmp
hlt
pushf
mov
add
pop
jecxz
aaa
dec
add
jmp
xchg
rolb
mov
pop
push
xchg
and
add
adc
pop
pop
pop
std
ljmp
jp
in
inc
lret
pop
dec
or
sbb
adc
and
mov
push
rcrb
mov
and
pop
push
mov
mov
sub
cmp
pop
push
scas
ja
call
lds
add
jns
and
sub
outsl
dec
mov
xchg
add
stos
and
adcb
sti
inc
push
mov
pop
push
into
xchg
or
inc
jge
clc
data16
fisubl
xchg
jb
xchg
repnz
mov
jmp
xlat
shl
adc
pop
xchg
add
inc
push
xlat
cld
iret
ljmp
test
mov
mov
or
mov
inc
xor
roll
inc
test
fdivp
fldenv
test
std
repnz
mov
out
pop
mov
cmp
adc
jae
mov
fisubs
dec
xorl
xlat
sub
in
sbb
cmp
cld
repz
inc
sub
add
push
mov
jle
dec
sub
adcb
adc
xchg
or
pushf
leave
and
nop
test
pop
lahf
arpl
inc
push
in
outsl
lods
and
adc
aam
ljmp
in
sub
xchg
xor
fistl
xor
movsl
xor
fsts
xchg
inc
mov
or
dec
imul
add
popf
and
pop
ss
lock
jle
mov
outsb
jecxz
repz
cmp
lods
push
sub
popa
dec
enter
xchg
aam
pop
icebp
in
cmp
out
push
push
test
je
out
inc
mov
sbb
stos
xor
jnp
loop
int
cmp
xor
sub
mov
int3
xchg
jle
adc
sub
je
mov
dec
dec
lock
cmpsb
add
sub
xor
push
int3
in
mov
gs
cmp
pop
mov
out
loopne
jae
pop
xor
ljmp
cmp
jno
imulb
or
std
out
push
inc
jge
pop
test
push
mov
cmp
out
add
cmp
in
inc
test
mov
rorb
test
sub
and
mov
lcall
lods
jge
lods
cmpsb
loopne
pop
icebp
scas
lods
xchg
xchg
sbb
sub
inc
lret
jbe
loop
ss
test
mov
icebp
inc
idiv
int3
jns
inc
mov
and
inc
scas
and
pop
cli
inc
xor
sti
clc
pop
xor
les
mov
pop
ja
dec
cmp
gs
clc
insl
subb
xor
int
in
shll
ja
cmp
xor
add
in
jo
lock
jnp
add
mov
or
ret
popf
push
leave
and
push
or
roll
xor
pusha
sbb
imul
iret
inc
in
scas
mov
push
into
push
push
push
idivl
arpl
xor
pop
pushf
jl
imul
pop
cmc
movsb
ss
cwtl
cmp
mov
cmp
inc
mov
sbb
pop
jb
sbb
sarb
outsb
ret
add
test
cmp
mov
inc
push
or
les
shl
shrb
and
xor
push
jg
or
adc
call
dec
xchg
sub
sub
mov
xchg
outsb
mov
push
add
jmp
pop
stc
mov
sbb
and
lcall
test
nop
xchg
jo
pop
popf
or
aad
add
jp
mov
aas
jbe
out
add
xor
and
or
jne
pushf
fstp
mov
mov
popa
inc
rclb
ret
popa
mov
and
aaa
notl
test
fs
sub
push
inc
pop
jbe
rcrl
or
push
data16
loope
dec
icebp
clc
fstl
jmp
add
push
or
mov
mov
int
shrb
jmp
cs
jecxz
sahf
jb
sti
sbb
push
mul
insl
or
lea
in
repnz
push
mov
stc
arpl
sbb
jp
inc
incb
xor
dec
inc
cltd
sbb
push
hlt
and
mulb
add
xchg
mov
dec
cltd
push
add
cmp
xor
inc
mov
sbb
xchg
jmp
repz
lcall
push
mov
in
dec
jl
inc
insb
mov
mov
je
mov
fsts
push
lock
out
cmp
jne
in
movsl
sbb
test
or
in
sbb
pop
sarb
scas
jge
sbb
mov
push
stc
popa
cmpsl
pop
out
iret
push
lcall
clc
xor
divb
xor
add
iret
sub
adc
mov
ret
or
lahf
ficompl
cli
inc
jae
int
out
push
sti
inc
xor
pop
jmp
iret
jg
fstl
cwtl
mov
adc
cmp
pop
adc
push
xchg
push
jmp
pop
sbb
cwtl
pusha
call
jne
mov
or
insl
push
and
retw
call
data16
sub
shrl
adc
ja
mov
mov
ds
dec
pushf
dec
fdivrp
gs
cmp
int
fistl
xchg
lock
clc
sahf
lock
sub
cwtl
mov
cld
sbb
dec
pusha
adc
leave
jp
std
lcall
xchg
ljmp
push
add
ss
cmp
gs
pop
mov
sub
inc
ficompl
decl
daa
das
stos
adc
adc
std
in
sub
mov
mov
add
ja
pop
pop
jo
rorl
fwait
xor
ja
sub
jecxz
jecxz
add
mov
cmp
dec
cltd
cmp
push
pop
loop
adc
dec
mov
adc
pop
test
mov
jbe
into
movsl
in
lods
in
idiv
scas
aas
lahf
push
fwait
scas
daa
frstor
push
push
mov
pusha
out
imul
jb
xchg
add
pop
dec
pop
in
lret
insl
lret
jg
cmc
repz
cmp
in
pop
pop
mov
fmuls
int3
outsl
out
les
pusha
or
add
and
popa
dec
ja
pop
jge
xchg
pop
ds
loope
mov
mov
sbbb
insb
dec
xor
mov
mov
data16
stos
mov
ret
cs
rcrl
sbbl
xchg
js
jle
sbb
ret
xchg
test
shrb
xchg
xchg
mov
xchg
dec
mov
call
add
or
fmul
shlb
into
jl
out
xor
rolb
pushf
xchg
or
in
mov
fisttpl
repnz
imul
xor
cli
bound
dec
adc
arpl
adc
lds
scas
loop
push
adc
adc
cmp
cmc
xor
movsb
pop
sub
or
lcall
xchg
out
fldlg2
push
aas
xchg
jns
in
cmp
sahf
pop
sbb
cmpsl
cmp
daa
dec
push
pop
push
out
ret
sbb
ret
bound
int
movq
into
test
xchg
push
pop
mov
in
outsb
push
jle
adc
shrl
mov
add
loop
mov
sbb
iret
fsts
mov
mov
out
cwtl
jbe
xchg
xor
mov
jae
subb
in
punpckldq
mov
in
test
sub
popa
test
pop
int
mov
pop
mov
add
repnz
inc
xor
adc
jb
ss
std
mov
shrd
mov
jg
insl
jg
repz
rcll
xchg
or
fnstenv
pop
cmp
sub
xchg
insl
sub
pop
aam
mov
push
out
pop
mov
mov
fmull
and
cmpsb
fwait
ds
lret
out
xchg
cmc
mov
in
in
scas
add
sub
dec
repnz
aam
mov
in
mov
lret
add
mov
aas
ret
fwait
jbe
cld
out
mov
lods
and
xor
outsl
cmp
and
aaa
rorl
inc
in
insb
test
in
jbe
arpl
jg
lahf
xchg
fldenv
jp
ret
lods
sub
icebp
xor
ss
shl
xor
das
decb
enter
sbb
cmp
cmp
arpl
cmpsl
pop
fisttpl
add
mov
mov
mov
ret
inc
cli
mov
or
jns
xchg
mov
out
loope
or
lea
lahf
mov
das
rorl
lods
dec
mov
lock
outsl
mov
rol
inc
outsb
vmovapd
inc
mov
xor
mov
pop
adc
fildl
adc
sbb
sti
movsb
sub
dec
inc
pusha
and
into
push
inc
inc
repnz
loopne
ljmp
xor
or
mov
mov
hlt
leave
sarl
push
sar
imul
mov
dec
push
lahf
mov
jns
icebp
std
in
add
mov
aam
sbb
lds
shr
mov
repnz
sub
xchg
test
sti
sahf
add
xchg
setne
inc
js
out
or
mov
mov
movsb
test
push
mov
gs
pushf
out
scas
inc
ds
outsb
aaa
mov
lret
mov
loopne
mov
notl
je
or
dec
pusha
pop
and
hlt
shrb
mov
repz
inc
push
lock
fisttps
pop
or
jbe
jg
adc
adc
nop
shll
aas
sbb
xor
dec
lret
xchg
jo
lret
xor
sbb
gs
aad
loop
push
inc
jne
scas
cmovge
jle
add
pop
cmpsb
outsl
adc
sbb
inc
adc
sub
inc
cmp
push
out
js
jno
push
movsb
push
mov
xchg
mov
les
leave
mov
add
jo
je
jp
inc
mov
movb
sub
imul
aad
pop
xor
movb
add
push
jae
movsl
push
push
xor
js
ret
pop
out
hlt
ret
das
pop
icebp
pushl
movsl
cmp
push
sbb
push
cmp
out
in
push
mov
mov
lcall
sbb
lods
xchg
inc
adc
xor
scas
fadds
xor
jp
jb
xorl
stc
mov
rep
stos
mov
jo
popa
sub
test
cmp
movsl
push
sub
movsb
push
fldt
imul
enter
gs
lea
dec
pop
pop
cwtl
das
ja
mov
jmp
lcall
movsl
inc
mov
mov
push
subl
pop
push
or
fstpt
ficompl
ljmp
cmp
popf
repz
and
xchg
dec
shll
or
push
inc
rcrl
xchg
lds
fsubl
and
push
inc
or
xor
lcall
aas
fistl
ja
es
add
pop
inc
or
mov
sbb
mov
sub
xchg
arpl
inc
js
and
add
push
in
cmpsb
notb
imul
aas
or
je
mov
ret
mov
mov
dec
push
mov
mov
and
ret
mov
pop
lds
iret
testl
jnp
jmp
mov
dec
dec
cmp
fnstsw
jne
pop
adc
pop
sbb
fimuls
sub
xchg
inc
pop
mov
adc
or
imul
jle
ljmp
mov
or
cmp
mov
aam
testb
into
xor
enter
jmp
fcoms
fisubrs
aas
daa
mov
lea
addr16
iret
mov
mov
sbbl
pop
xlat
mov
stc
dec
outsb
jge
fldt
lods
pop
push
dec
std
and
lods
dec
xchg
testb
xor
in
outsl
mov
bound
jae
pop
into
fcoml
mov
pushf
bound
jecxz
or
rcrb
insl
xchg
mov
in
pop
jl
movsb
mov
jecxz
xor
dec
xchg
test
pop
xchg
sbb
sbb
inc
xchg
into
call
daa
mov
mov
cmp
fistpll
outsb
incb
xlat
aas
push
dec
int3
clc
test
and
cmp
lret
iret
push
jmp
adc
scas
sbb
jne
sbb
dec
daa
daa
ret
push
pop
or
add
repnz
cmp
xchg
or
aaa
push
movsb
out
jo
or
dec
icebp
mov
fiadds
xchg
out
mov
out
xchg
push
mov
cmc
movsb
xor
jae
xor
pop
cmp
aaa
mov
aas
sti
stc
movl
daa
cltd
bound
mov
daa
mov
sarl
ds
inc
cmp
inc
bound
in
push
jp
divl
rcrl
dec
rcll
addl
mov
movb
xlat
xchg
fwait
inc
leave
out
outsl
xchg
cmp
rcrl
lret
sub
test
sbb
mov
sub
push
and
adc
sub
or
test
adc
pop
mov
jne
fnstsw
nop
rorl
subl
mov
loopne
inc
fsubl
lret
divb
push
popl
mov
jmp
mov
ljmp
add
test
add
pushf
movsl
add
pop
sbb
test
xchg
and
mov
shl
mov
lods
movsl
aaa
xor
lods
out
stc
xor
push
mov
or
cld
inc
loope
mov
ds
adc
xchg
scas
and
push
sbb
jge
xor
sbb
sub
in
movsb
clc
pop
adc
cmpsl
jge
fcmovne
and
pop
inc
inc
or
arpl
fstl
and
sbb
clc
and
xor
mov
cmpsl
sub
nop
insl
mov
leave
xchg
mov
andb
stos
jg
aam
sub
dec
test
movsb
dec
mov
and
pop
les
ds
loope
addb
push
iret
fildll
dec
fs
fiadds
pop
xor
inc
lods
mov
sub
push
inc
in
leave
pop
rclb
andl
rcl
fisttpl
loope
add
test
les
xchg
arpl
call
hlt
cmc
jo
adc
mov
addr16
push
leave
cld
xlat
and
and
push
loopne
or
cmpb
mov
dec
sbb
mull
xor
jbe
lock
in
and
inc
test
xor
das
bnd
rorb
aaa
into
inc
jg
daa
rolb
pop
sub
loopne
add
pop
out
adc
or
adc
mov
test
popf
enter
sub
test
popa
mov
xlat
pop
push
xlat
movsb
add
jmp
aam
jb
xlat
int3
fidivrl
rcll
cmp
sbb
add
js
outsl
inc
cli
xchg
mov
leave
insb
outsl
das
and
adc
out
sbb
data16
push
rcr
jb
or
mov
add
jg
sbb
sbb
stos
loop
cmpsb
sbb
or
loopne
fisubrs
pusha
xchg
ljmp
and
and
adc
add
cli
push
xor
and
fwait
imul
pop
ret
test
push
xchg
popa
and
xchg
mov
int
pop
or
xchg
rorl
sbb
pop
lock
mov
sbbl
mov
stc
test
out
push
inc
dec
inc
lahf
xchg
fs
in
sub
pop
jecxz
pop
in
sahf
mov
push
cmp
mov
cmp
fdivs
or
lcall
dec
in
or
inc
fldcw
scas
fldenv
push
mov
jb
arpl
jbe
sub
roll
or
inc
nop
into
push
clc
xchg
dec
ret
dec
xchg
and
icebp
xor
pop
dec
test
sbb
mov
xchg
jmp
enter
xchg
mov
daa
mov
mov
jle
sbb
pop
mov
push
add
mov
pop
ret
mov
popf
stos
xchg
cld
testb
ret
dec
imul
imul
dec
add
fistps
and
stc
push
mov
divb
popa
xor
lods
fildl
sahf
out
jns
dec
movsb
jo
in
adc
adc
and
adc
sbb
aam
lds
cmp
sub
mov
jmp
push
enter
ss
or
xchg
lds
mov
clc
cmpsb
sbb
mov
pop
fs
sub
lcall
in
mov
xchg
aad
in
dec
inc
insb
push
popa
mov
add
insl
push
xor
pop
ja
shlb
lret
dec
mul
xchg
xor
subb
push
mov
js
fcompl
inc
adc
push
dec
fstl
ds
icebp
repnz
sbb
ss
addr16
lock
rorl
mov
lock
mov
dec
cmpsl
and
jp
mov
jl
mov
jb
and
inc
add
cmc
into
les
sub
testb
mov
dec
ss
call
rcrl
imul
mov
stc
mov
jno
repz
adc
mov
jg
inc
xchg
adc
insl
mov
icebp
xorb
lret
outsl
insb
add
stc
adc
lds
push
rorl
fiadds
pop
cmp
jecxz
pusha
call
shll
movl
test
mov
repnz
mov
and
stc
cmpsb
roll
mov
inc
popf
test
push
or
cmp
mov
sub
mov
mov
test
mov
out
push
push
gs
xlat
imulb
jbe
ret
rolb
or
xchg
lret
xchg
dec
cmp
add
rolb
pop
icebp
jb
fistl
mov
push
ret
push
test
pop
push
cmc
mov
testb
sbb
xor
push
push
sbb
push
or
loopne
aam
ficoml
push
mulb
scas
pop
xor
sbb
test
mov
inc
movl
ljmp
shl
inc
jbe
xor
je
repz
adc
jns
hlt
sub
add
inc
out
sbb
sub
mov
jecxz
sbb
push
jbe
ret
adc
xchg
mov
rcr
notl
arpl
dec
dec
cmpsb
add
xor
cmp
loope
pop
icebp
aam
out
sahf
in
xlat
outsb
fisttpll
mov
jno
mov
in
or
mov
mov
mov
sbb
push
adc
jae
sbb
outsl
add
shll
add
xchg
push
and
loope
xchg
sbb
sub
jecxz
lock
adc
in
jae
xor
icebp
jecxz
mov
cmpsl
jmp
jp
adc
cltd
mov
jnp
cmp
xchg
mov
popl
adc
js
add
mov
in
mov
icebp
sbb
jp
repz
pop
data16
insb
sub
pushf
pop
lods
shlb
push
shlb
ljmp
test
xchg
orb
jge
pop
add
mov
jle
adc
mov
test
dec
push
sbb
or
adc
pop
cmp
mov
orl
jo
xorb
loop
dec
sbb
xor
adc
scas
sbb
and
in
in
movsb
mov
loope
das
xor
add
ss
mov
in
mov
movsl
mov
sub
cwtl
insb
cltd
and
xchg
push
inc
mov
mov
sarb
leave
popa
adc
add
jae
add
push
or
mov
icebp
fstps
in
es
jge
push
imul
dec
and
sub
add
cmp
sub
dec
mov
xor
adc
or
mov
jl
dec
bound
lret
jnp
popf
jae
call
call
xchg
and
xchg
add
rcr
loope
fdivrs
lods
inc
sub
in
dec
dec
xor
fisubl
out
push
icebp
mov
push
add
jb
cmpl
int3
mov
and
mov
iret
inc
jge
pop
dec
push
add
and
movsb
and
outsl
xchg
gs
sub
cmp
call
sbb
push
inc
adc
das
fdivp
repz
and
notb
movsl
sbb
cmp
shl
dec
in
shll
cmpb
pop
fstpt
fistpll
arpl
sub
lcall
test
js
push
adc
out
mov
ja
sub
jecxz
add
cld
das
inc
js
push
andl
ss
mov
jmp
ret
test
jg
jg
in
sbb
sbb
inc
repz
adc
ss
sbb
enter
lock
ja
add
mull
inc
pop
rcl
mov
pop
mov
fs
add
outsb
out
adc
push
stos
mov
sbb
das
sbb
out
outsb
inc
fmull
call
push
mov
cmpsl
je
icebp
push
fldl
rcl
cltd
aam
xchg
rcrb
insl
xchg
cli
mov
mov
mov
sti
lahf
inc
pushf
lret
sub
sbb
mov
push
imul
fldenv
call
pushw
add
sarl
jge
sub
enter
mov
popf
sbb
adc
lds
imul
rcrb
shr
dec
mov
rorl
sar
xchg
mov
lods
in
ja
stos
jo
and
xor
rcll
mov
or
sub
jno
outsb
sbb
adc
push
iret
into
and
scas
outsb
stos
loop
cltd
or
and
sbb
push
xor
pusha
mov
mov
jb
pop
iret
test
push
mov
hlt
jle
jp
mov
and
cmpb
sub
stos
mov
add
xchg
adc
xchg
lock
adc
dec
pop
dec
dec
aad
mov
aad
cli
stos
and
stos
sbb
pop
je
cwtl
mov
adc
data16
not
or
lods
sti
cmp
into
sbb
mov
mov
or
in
std
test
xchg
xor
ljmp
mov
xor
cmp
in
sub
loop
lahf
xchg
ret
out
imul
std
cltd
fidivrs
cmpsl
add
inc
sub
dec
push
mov
lods
fldcw
roll
adc
out
dec
loop
cmp
mov
xchg
aaa
stos
cld
clc
imul
adc
sbb
push
lret
faddl
sbb
popf
loop
insb
pop
aam
mov
sbb
in
adc
inc
pop
dec
cmp
in
push
mov
xor
nop
xor
cmpsb
mov
andb
pop
jb
xchg
lret
test
inc
bound
out
icebp
mov
jl
jl
sub
xchg
fs
or
cmp
xor
cmp
jb
sbb
jo
ret
sub
outsl
cmp
jb
ja
inc
sbb
xacquire
xchg
into
lret
loopne
adc
aam
mov
add
out
cmp
mov
popa
push
loope
and
fstpl
sub
jne
mov
in
rcrb
shll
inc
movsl
jp
jns
pop
pushw
push
mov
outsb
jge
orb
dec
in
xor
xchg
mov
js
pop
mov
mov
cmp
dec
jmp
stos
xchg
dec
cs
hlt
fcomps
dec
ss
mov
nop
cmp
sbbl
sbb
iret
pop
fwait
inc
icebp
push
rolb
jl
cld
and
jns
mov
iret
stos
dec
and
xchg
inc
shll
cmp
repz
inc
mov
ret
stc
mov
cmp
xchg
rcl
repz
mov
xchg
add
loope
adc
sub
in
out
dec
mov
fldl2t
sbb
pop
mov
lcall
outsb
fadds
test
or
sub
stos
or
fidivrl
and
int3
sub
add
jne
out
sub
or
sti
add
rcll
mov
push
push
xchg
cli
lods
sahf
xor
inc
mov
lret
xchg
leave
fdivr
imul
adc
mov
jbe
pop
sub
out
ds
in
notb
scas
mov
mov
lcall
xchg
lock
shr
aaa
jb
mov
dec
xchg
fcoms
into
popa
data16
mov
in
xchg
inc
in
nop
cmpsb
int3
js
push
jge
test
into
sbbl
push
std
pop
cmp
ror
rorb
xchg
gs
cmp
mov
vmovd
or
mov
fsubr
xchg
or
fdivp
lods
push
imul
les
subb
jecxz
jp
jno
and
movsl
cltd
pop
pop
cld
dec
sub
xor
pop
or
jle
jmp
sarl
stc
mov
out
xchg
xchg
ret
and
inc
xchg
cmpsl
mov
pushl
outsl
decl
jo
sub
aas
and
stos
or
push
ror
mov
push
sahf
xor
insl
mov
lods
sub
push
loope
mov
mov
test
sbb
push
cmp
dec
ds
jmp
lods
cmp
bound
pop
mov
arpl
and
movsl
lsl
xor
sbb
daa
ffreep
sbb
sahf
aam
insb
inc
mov
or
adcl
sbb
scas
add
scas
pop
push
rorb
enter
insl
stc
gs
pushf
push
mov
jae
imul
test
mov
dec
test
aas
ret
cmp
inc
rcrl
ret
add
push
jle
dec
imul
or
fmulp
xchg
mov
inc
sbb
mov
test
imul
mov
nop
push
fstl
cmpsl
and
add
jno
dec
jne
push
inc
imul
ds
clc
lods
push
adc
sbb
orb
xchg
mov
mov
iret
xchg
popa
cmp
out
enter
pop
adc
outsl
incl
das
mov
std
push
in
test
mov
xchg
push
mov
enter
shlb
aaa
adc
sbb
pop
push
dec
ret
jg
or
sub
addr16
pop
push
cwtl
adc
jne
jg
daa
jp
mov
imul
mov
orb
adc
fwait
lods
and
dec
fdivs
fstl
call
shll
sub
add
pop
cmpl
fisubrs
xchg
cmp
mov
push
maskmovq
divl
jle
jl
cli
fwait
imulb
stos
dec
sbb
cli
pusha
int3
pop
jbe
jg
jmp
fmul
fisttpll
dec
cli
adc
cld
jnp
out
rcrb
repnz
stos
addb
pop
mov
add
ss
je
sbb
xlat
js
nop
neg
or
dec
jae
mov
cwtl
lahf
or
scas
stc
jmp
mov
xchg
cmc
subl
pushf
arpl
jo
and
jle
xchg
jp
test
arpl
xchg
inc
clc
jbe
arpl
sbb
pop
jle
or
sti
cld
sub
into
sbb
sbb
dec
xor
ss
fs
shll
fisttpl
mov
and
pop
dec
add
cmp
stc
xlat
pusha
sub
cli
sub
fisubrs
push
cmp
repz
loopne
mov
mov
inc
inc
cmp
mov
dec
inc
xchg
and
testb
adc
mov
mov
xchg
shll
mov
bound
fisubrs
enter
mov
insb
mov
push
and
in
outsl
jl
jl
dec
lock
add
pop
mov
daa
into
add
adc
int3
add
inc
xor
daa
add
insb
and
mov
repnz
outsb
repz
lret
jbe
arpl
cs
negb
sub
adc
pop
ficomps
mov
insb
push
in
jne
xchg
add
mov
and
cmc
clc
push
jp
dec
sbb
rolb
mov
iret
jbe
andb
in
aad
mov
pop
pop
xchg
ret
fildll
add
mov
in
loop
into
xchg
jno
mov
dec
std
inc
pop
or
bound
into
xor
mov
inc
lret
xchg
aam
jo
ja
jle
xorb
add
or
mov
je
jnp
stos
mov
cmpb
xchg
lods
pop
out
inc
push
int3
cmp
es
lret
sbb
mov
or
xlat
xor
bound
sbb
pushf
inc
jle
and
xchg
adc
ss
push
cmp
test
in
test
and
gs
jg
and
dec
sub
aaa
inc
xlat
sub
push
sub
addr16
xor
fwait
push
inc
inc
test
loop
dec
dec
sub
nop
sub
lret
je
rorb
addr16
push
movsb
pop
add
mov
xchg
cmpsl
mov
mov
loope
loope
xchg
xchg
add
aas
out
mov
add
push
or
mov
scas
adc
out
fyl2xp1
adc
xor
cli
ret
and
or
imul
rcl
loope
arpl
clc
repnz
daa
adc
jmp
inc
cmp
cmp
testb
popa
lret
fstps
lods
adc
push
inc
xchg
lds
or
pop
pop
pop
mov
pop
push
mov
dec
xlat
movsb
push
insb
xchg
and
or
lods
stos
push
addr16
cltd
jo
mov
test
mov
cmc
add
test
and
mov
mov
jns
imul
sub
add
and
repnz
push
loope
arpl
add
add
jo
dec
or
jge
je
fdivrs
out
inc
mov
jnp
cmc
fwait
adc
hlt
inc
or
cltd
push
in
sub
mov
jnp
mov
das
jg
sbb
inc
sbb
sar
data16
ja
sahf
sub
sbb
xchg
inc
adc
test
pusha
xchg
fnstenv
hlt
mov
in
add
xchg
hlt
test
add
jge
fwait
cmp
pop
pop
xchg
cmpsb
sub
mov
jp
aad
pusha
xor
cmp
pop
call
lock
mov
dec
mov
mov
stos
pop
adc
dec
jbe
out
and
or
sub
push
and
and
xchg
add
push
jb
out
jbe
mov
add
jo
repnz
dec
dec
mov
out
sahf
pushf
jp
sub
add
sub
in
add
movsl
add
fstp
sub
out
out
mov
jle
cmp
and
ds
fldcw
jp
fisubrs
notb
test
xor
arpl
push
or
sti
xor
jl
fisubl
xchg
leave
or
dec
cmp
dec
orl
cmp
or
xor
push
cltd
fwait
sub
lahf
mov
jnp
sub
push
adc
adc
rcl
inc
hlt
add
mov
jecxz
jmp
xor
mov
adc
push
imul
outsl
jmp
jl
mov
inc
stc
fwait
mov
cwtl
mov
pop
xchg
xor
incb
lea
mov
int3
call
data16
insl
push
mov
ds
mov
pusha
jne
dec
fadds
dec
add
and
cltd
ret
les
fldt
sub
lret
jno
push
mov
sahf
shlb
sbbb
sbb
adc
lahf
sub
mov
sbb
mov
lret
loop
dec
stos
dec
aaa
mov
cmp
pop
pop
mov
push
cmp
mov
in
fistl
data16
aad
call
pop
cmp
fadds
imul
mov
movsl
fbld
xor
xchg
cmc
push
xchg
jno
das
push
add
aaa
add
jl
dec
mov
lret
dec
jmp
add
sub
pop
movsb
hlt
push
cmpl
xchg
jecxz
jo
dec
push
pushl
aam
cltd
or
in
mov
dec
fsubs
subl
popa
insl
ret
adcb
loopne
imul
mov
cmp
pop
aas
lret
outsl
push
pop
out
nop
loope
sbb
insl
xchg
aaa
inc
outsl
mov
mov
mov
test
push
cmp
mov
cmpsl
pushf
adc
leave
fildl
aaa
dec
add
lods
hlt
mov
pop
mov
int3
daa
imull
push
fs
add
mov
popa
ret
fstps
mov
mov
lods
lea
es
rorl
cld
mov
loop
mov
aas
sub
mov
add
cld
or
adc
cmp
in
sub
lds
dec
push
sbb
mov
sub
scas
into
xor
push
call
sti
out
cmpb
pop
std
loopne
mov
cmpb
and
imul
mov
add
insb
or
fidivl
outsb
mov
jnp
test
adc
mov
leave
inc
out
mov
xchg
inc
adc
dec
rclb
in
jecxz
mov
aaa
sbb
push
mov
push
inc
icebp
ffree
xorl
in
les
add
and
ss
mov
sbb
repnz
mov
jp
fsubl
mov
and
ret
xchg
jl
lods
cwtl
mov
push
fxch
pop
sub
adc
lcall
fs
sub
mov
fsts
loop
xchg
pop
rcrb
adc
xchg
mov
ret
dec
in
ss
outsl
mov
int3
xor
fistl
js
adc
mov
fwait
cmpsl
std
sub
mov
mov
mov
es
pop
nop
mov
imul
sub
inc
xchg
pop
divl
push
sbb
loopne
push
in
mov
xor
pop
add
xchg
push
pop
jno
mov
sub
imul
lret
lret
sbb
push
mov
mov
push
pop
stc
inc
shrl
out
xchg
mov
imul
pop
sub
sbb
jmp
push
xor
jb
sub
mov
aam
enter
mov
aam
fucom
add
clc
or
mov
movsb
aad
mov
aas
shlb
xor
xor
cs
decl
ss
xor
in
andb
jmp
xchg
mov
not
lea
cmc
out
pop
lret
jns
call
inc
cld
push
cmp
mov
xor
lods
mov
ja
push
push
daa
outsl
pop
jb
movsb
mov
xor
fmull
push
ljmp
movsl
jg
lea
rcrb
mov
ljmp
or
idivb
xchg
jecxz
fs
mov
pop
lret
cmpsb
cmp
jg
inc
lret
jb
nop
aad
push
xchg
cld
scas
arpl
pop
or
sbb
dec
ja
xchg
xchg
push
fs
cmpsl
pop
lock
pop
xchg
data16
or
popa
push
adc
rorb
mov
and
nop
jg
testl
fwait
shll
push
push
jecxz
sarb
cmp
cmp
jnp
ds
out
hlt
pop
sbb
pop
jb
mov
jne
push
fsubl
ret
pop
movsb
jno
fcompl
outsl
ss
sub
pop
imul
mov
push
cmpl
cld
fimull
sub
bound
add
stc
repnz
testb
pop
cmp
push
pop
fwait
aaa
jb
clc
push
sti
push
rcrl
lahf
sti
sbb
jae
lahf
outsl
lods
ja
mov
or
mov
jge,pt
xor
pop
movl
jns
lods
rcl
jnp
xor
icebp
xchg
dec
stos
sbbl
jne
icebp
dec
ret
es
mov
aad
ret
mov
or
sub
sbb
fistps
mov
or
in
in
in
call
mov
test
sarl
jmp
sub
loope
fs
push
jnp
push
push
add
es
sbbl
mov
push
mov
pop
scas
jo
das
icebp
stc
mov
xor
iret
sub
js
xchg
and
loop
mov
les
fidivs
cmp
sub
cli
test
jp
clc
arpl
loope
call
push
inc
shll
ds
and
pop
or
mulb
rep
stos
es
sub
fucomp
cs
xor
outsb
pop
xchg
push
sti
xlat
jecxz
popf
and
add
or
xor
int
enter
sub
add
sbb
or
outsb
pop
or
or
pop
mov
sbb
gs
sub
into
mov
mov
add
sbb
adc
mov
xchg
xor
cld
sahf
mov
jns
mov
add
test
mov
sub
jl
add
cmpsb
xchg
and
mov
bound
fs
loopne
sbb
push
cmp
and
ret
ficompl
pop
lret
push
ret
inc
loopne
add
out
insb
cli
imul
movq
sbb
xor
jle
xchg
arpl
mov
movsb
insl
dec
lahf
pushf
inc
sbb
aaa
dec
shl
mov
jmp
scas
data16
bound
nop
fnstcw
daa
fwait
or
aas
bound
inc
and
sbb
stos
cmp
xchg
push
adc
dec
les
and
or
jecxz
pop
cmc
sub
xor
clc
mov
lret
fnstenv
rcr
fnstcw
and
fildll
fmuls
out
xlat
cs
pop
sbb
int
add
xchg
pop
mov
arpl
jle
xchg
mov
stc
into
jne
out
pop
repz
int3
and
sub
fstpl
mov
das
cmp
cmp
add
mov
iret
mov
mov
in
cmp
in
pushf
mov
es
cwtl
movsl
in
adc
add
or
pop
stc
iret
cli
insl
cmc
inc
addb
jmp
dec
jmp
iret
mov
rcll
cmc
scas
ss
jnp
movsb
mov
push
ja
push
pop
xor
push
xrelease
add
add
mov
roll
pop
stos
sar
pop
jno
or
outsb
jne
mov
mov
cmp
repz
inc
mov
int3
loope
xchg
pusha
sub
push
stos
jbe
xchg
cmp
clc
arpl
adc
ljmp
rcl
cli
mov
icebp
inc
xor
pop
pop
ja
lock
inc
call
icebp
daa
push
scas
inc
sbb
pushf
and
xchg
push
sbb
stos
jp
push
sbb
stos
mov
jns
mov
mov
cli
mov
out
aas
aam
push
xorb
inc
test
call
fsub
rorl
adc
sti
popa
stos
std
std
sub
repz
mov
adc
sarb
adc
xchg
insb
xchg
into
xor
cs
adcl
cwtl
add
test
and
stc
inc
push
out
mov
pop
jg
repz
cmp
sub
shrb
dec
sar
cltd
fabs
popf
pop
add
lret
and
xor
daa
insb
ret
sub
xor
push
pop
mov
push
pop
cld
loopne
xchg
mov
pop
sub
hlt
xor
dec
cmpsl
repnz
test
test
xchg
inc
shl
inc
bndstx
mov
inc
outsb
mov
or
xlat
insb
sub
push
rcll
sbb
mov
push
mov
dec
and
push
mov
xchg
dec
lret
iret
fcomps
pop
les
call
push
loopne
lea
inc
shll
cmp
test
push
or
mov
push
fcmovbe
and
scas
arpl
jbe
orl
dec
and
xchg
push
cwtl
adc
test
repz
mov
or
xlat
xchg
test
daa
in
adc
insb
cltd
mov
fldt
or
jmp
pop
aas
jns
arpl
iret
inc
inc
and
mov
imul
cli
mov
adc
xor
test
sbbl
lcall
ss
push
dec
xor
repnz
lods
shlb
add
pop
lds
mov
mov
movsb
adc
pop
lods
mov
lret
fnsave
inc
xor
ret
stos
lods
out
scas
daa
imul
and
push
dec
enter
jmp
add
mov
mov
add
sub
in
push
dec
clc
sub
fidivrl
das
pop
cmp
pop
mov
movsl
sbb
hlt
cmp
adc
lret
idiv
hlt
jg
fs
icebp
fwait
inc
lods
mov
cltd
cltd
jno
dec
mov
fiadds
imul
inc
push
add
pop
out
sbb
popf
int3
push
inc
pop
sti
es
ljmp
inc
ret
adc
xor
adc
cmp
cmp
dec
cmp
xchg
ljmp
or
inc
out
jne
imul
fs
pop
add
fs
dec
cmpsl
sbb
inc
add
testl
sub
mov
sahf
mov
cmp
sbb
cmpsb
jmp
rcrl
mov
sbb
es
aad
inc
jge
scas
dec
test
lret
xor
or
push
arpl
jbe
ljmp
cltd
cmp
sub
mov
xor
int
lcall
pop
repnz
sub
mov
pop
stc
out
int3
call
pop
mov
push
inc
add
out
jb
sbbb
rcll
and
or
daa
shlb
loope
push
aas
adc
bound
cltd
jle
ficompl
sub
pushf
add
push
stos
jne
icebp
sahf
fwait
add
add
aad
xchg
mov
cmpsb
inc
sbb
dec
push
fistpll
jp
dec
insl
lds
adc
sbb
push
jl
mov
pop
push
cwtl
mov
inc
or
adcb
cs
popf
cmp
xchg
mov
ret
dec
pop
mov
cli
test
push
ss
not
xchg
aaa
mov
inc
rcr
cld
xor
sbbl
inc
or
loope
data16
mov
in
xchg
push
mov
retw
mov
bnd
push
jmp
add
dec
jl
cmc
sti
and
fmull
popa
aaa
int3
test
clc
into
sub
je
imulb
mov
sub
or
cmp
dec
xlat
jne
push
imull
push
pop
popa
lods
cmp
aam
enter
cmpsb
lods
leave
jp
lock
jge
and
sub
add
sti
fistl
fdiv
and
dec
mov
ficompl
call
xor
lret
js
xchg
xor
shll
sti
or
sarb
pop
push
cmp
outsb
xchg
dec
in
sbb
pop
jge
sbb
xor
xchg
push
pop
in
xchg
fsubr
arpl
xor
cmp
xor
enter
mov
push
loope
gs
xor
sbb
fldcw
stos
xchg
pushf
movsb
movsb
adc
pop
in
cmp
dec
jl
in
mov
add
lret
cmp
mov
ficomps
add
loop
xchg
popl
dec
cmpsl
cmpsb
adc
addb
pop
loop
andb
ja
cli
pop
cmp
aaa
and
jg
mov
ljmp
push
pop
jmp
into
push
pop
push
lret
mov
add
pop
jmp
inc
cvtpi2ps
jns
cmpsl
js
jle
les
rorb
cmp
sub
mov
and
imul
ja
dec
mov
mov
push
das
lcall
mov
test
je
outsb
cmp
adc
mov
jecxz
cmp
and
ds
aam
sbb
ljmp
jmp
incb
movsl
xchg
scas
add
lret
push
and
push
call
jp
lcall
sahf
fwait
push
sbb
loopne
sub
jmp
insb
pop
mov
dec
sbb
movsl
sub
xchg
aaa
sti
gs
lea
je
push
fnstcw
test
adc
inc
fwait
sbb
mull
in
dec
int
lret
outsl
ljmp
inc
or
dec
cmp
rcl
daa
fcmovne
imulb
mov
mov
and
cmp
fdivrl
shrl
inc
jp
cld
fsub
mov
out
imul
cmpsl
mov
lods
or
jb
sub
cmp
adc
popa
add
mov
adc
imul
mov
inc
jge
xchg
adcl
js
enter
popf
xlat
call
scas
aad
xchg
movsl
mov
cli
out
or
or
cmp
or
jnp
cli
inc
sbb
negb
cmp
movsl
popa
inc
or
push
adc
cmp
adc
pushw
dec
ja
aad
inc
push
das
pop
inc
pop
mov
or
add
push
imul
xlat
sbb
orl
insb
arpl
push
mov
fdivrl
sbb
pop
fisttpll
ret
fiadds
and
mov
sbb
jbe
and
xchg
jb
cmpsb
inc
inc
xlat
scas
ja
bound
xor
cmp
mov
mov
out
mov
or
ret
mov
inc
movl
push
add
dec
stos
xchg
adc
jg
sub
cld
inc
push
arpl
cltd
add
jle
xor
push
bound
push
push
movsl
sub
adc
inc
dec
push
and
xor
or
mov
je
dec
add
mov
sbb
mov
sub
dec
mov
imull
imul
scas
imul
popa
insb
mov
inc
rcrl
and
push
lea
aam
dec
or
loope
mov
inc
fisttpl
push
inc
add
aas
inc
push
pop
leave
stos
ret
adc
push
xadd
es
adc
js
inc
mov
and
dec
test
push
dec
dec
mov
sub
fisttps
cmp
push
adc
stos
daa
lcall
test
gs
push
clc
add
fwait
push
leave
adc
test
and
dec
mov
and
pop
call
sub
pop
pop
cmpsb
inc
add
aas
xchg
pop
jo
pop
jno
add
insl
ljmp
jno
inc
orl
mov
xlat
sub
sub
lcall
movsb
mov
inc
jge
sub
mov
cs
pop
in
imul
nop
jae
pop
jns
idivl
es
sbb
out
orl
mov
push
nop
gs
test
fs
in
dec
jmp
jg
lods
cmpb
rclb
mov
push
cli
ror
loopne
cmp
fsubrp
in
ja
nop
scas
popf
nop
mov
xor
mov
orl
out
pushf
jle
push
mov
inc
mov
sub
mov
sub
push
fs
sub
inc
jbe
mov
lock
bts
decb
cld
popa
mov
inc
and
insl
fsubrs
inc
mov
int3
pop
pop
sarb
push
lods
jns
jne
and
imul
dec
popf
add
xchg
xchg
sub
inc
repz
fdivrl
sbb
stos
xor
rcl
div
inc
call
add
ss
movb
lods
popa
stos
mov
mov
jle
dec
mov
iret
cld
xchg
and
jne
aad
adc
test
xor
es
ficoml
sbb
mov
push
or
leave
cmp
pop
outsl
add
pop
cmpsb
cli
fistpll
xchg
pop
xchg
pusha
sbb
mov
test
pop
push
mov
adc
hlt
out
xchg
jecxz
sub
xor
adc
cmp
jge
aad
xchg
dec
es
dec
cmp
jp
cltd
adc
and
jbe
movsb
cmpsb
aad
add
inc
jns
add
orb
xor
xor
clc
pop
arpl
jne
push
inc
xchg
shll
notb
or
out
shrb
xchg
sarl
adc
les
fsubrs
sub
movb
sbb
test
rorl
sub
clc
push
lcall
daa
sahf
pop
cld
mov
adc
popa
push
xor
ret
pop
xor
fdivs
imul
stos
sub
sbb
cmp
or
stos
mov
jae
out
xor
jnp
scas
stc
add
int3
btcl
arpl
lcall
xor
xorb
rolb
cltd
pusha
jnp
pop
push
outsl
ror
sub
adc
or
add
leave
cwtl
xchg
dec
ret
cmpsb
inc
inc
decl
lods
rclb
lret
lock
inc
rclb
inc
add
ds
ret
movsl
xchg
in
les
xchg
ds
ljmp
mov
js
jge
out
and
push
std
mov
ss
push
movnti
adc
pop
mov
sbb
dec
sub
je
call
dec
jnp
xchg
in
add
lcall
jecxz
popf
lret
sbb
mov
inc
rcrb
scas
cmc
aas
mov
lcall
pop
xchg
pushf
sbb
bound
sahf
mov
repnz
adc
add
imul
ss
popa
lret
inc
sahf
out
lods
sbb
mov
enter
popa
sub
jg
sbb
jno
inc
pop
mov
inc
or
icebp
clc
mov
mov
dec
fistl
pop
call
inc
mov
out
mov
jae
sahf
lods
sub
adc
rol
xor
push
scas
push
into
mov
xchg
imulb
enter
gs
mov
jg
xchg
xor
push
arpl
cltd
pop
add
mov
lock
gs
cwtl
gs
jge
lcall
lcall
push
cwtl
push
rorl
push
mov
lods
dec
in
in
cmpl
cli
lods
or
loopne
pop
pop
cmp
sub
add
cmp
incl
mov
push
dec
pop
enter
cmp
testl
xor
jns
jp
or
rcl
aas
add
clc
sbb
and
ss
test
xchg
sbb
sbb
loope
movsb
jns
in
fcoms
cmpsb
push
jecxz
iret
xchg
cmp
push
mov
jl
mov
lods
dec
cmpsl
scas
mov
dec
xor
movsl
test
ja
leave
aad
fisubrl
adc
fcoms
xchg
repz
jne
cmpsl
sarl
add
dec
sti
fidivrs
das
mov
pop
scas
inc
and
imul
sbb
mov
xchg
rorb
adc
pop
cmc
out
mov
in
hlt
fisttpll
jmp
lods
lds
xor
lret
movsb
sub
mov
adc
jne
add
repz
sub
ljmp
fsubrs
in
test
repz
add
mov
pop
cmpsl
or
roll
or
cld
stos
jg
jmp
push
test
inc
repz
pop
ror
inc
pushf
push
popf
dec
xor
cmp
movsl
gs
pop
and
push
lret
add
bound
sub
or
aam
ret
push
sub
jecxz
or
scas
jb
int
mov
inc
es
cli
mov
adc
leave
or
mov
mov
mov
pop
scas
pop
or
in
dec
mov
vmovaps
aaa
inc
fnstenv
or
mov
pop
lods
les
xlat
mov
push
std
lcall
insb
call
adc
add
stos
in
or
imul
xorl
popa
cs
ljmp
cmp
in
outsl
ljmp
ret
jne
jle
in
adc
imul
sahf
ljmp
cmp
ss
sti
add
adc
and
push
xchg
sbb
adc
mov
push
xorl
aad
xchg
sbb
mov
jnp
fstl
adc
fldl
mov
out
imul
xchg
lods
aad
cmpsb
adc
fcmove
jno
int
nop
mov
lds
sarl
or
sti
arpl
test
insl
inc
faddl
in
lods
xor
cmp
mov
dec
sbb
cmp
sbbb
leave
push
into
mov
enter
or
cmp
or
mov
lds
adc
push
fs
into
pop
mov
imul
imul
push
xor
adc
imul
pop
fs
out
bswap
or
add
sbbl
add
xor
push
xor
outsl
cmp
repz
xchg
or
adc
outsb
inc
dec
aas
fdivl
dec
sbbb
xor
dec
cmpsl
loop
int3
dec
dec
imul
std
movsl
jp
enter
sar
daa
jmp
daa
ret
not
push
cmp
add
stc
add
jecxz
xor
xchg
pop
dec
stos
das
movsb
scas
and
add
adc
imulb
jo
mov
mov
pop
mov
repnz
jno
mov
mov
and
leave
lahf
int
push
cs
mov
jmp
mov
std
or
or
call
popa
and
repz
mov
jno
mov
mov
negb
cmp
lds
dec
lcall
jmp
lds
lods
or
push
jl
or
int
imul
rcll
sub
pop
div
or
mov
lret
fisubs
xor
outsb
jge
fldl
sub
ret
cmpl
push
addr16
or
lock
mov
mov
bound
jg
sahf
inc
arpl
bnd
adc
out
jbe
nop
in
shlb
popa
testl
out
cmpb
and
mov
pop
or
push
test
xchg
fidivl
or
incl
mov
mov
cmpsb
mov
in
fucomip
jl
divb
pop
addl
xchg
addr16
mov
pop
mov
cmp
mov
cwtl
push
mov
jae
jns
and
jp
lods
pusha
les
cwtl
cs
cltd
mov
xchg
push
inc
es
rcr
adc
add
imul
hlt
add
or
mov
clc
fstpl
jbe
addr16
movaps
mov
cwtl
mov
pop
cmp
ret
push
pushf
pop
ss
mov
cs
pop
fldl
fdiv
mov
clc
fwait
push
cmc
mov
lret
inc
mov
mov
pushf
dec
cwtl
jle
insl
ret
pushl
lret
xlat
adc
jmp
lock
cmp
rcrl
aaa
mov
notb
fcmovu
movsb
add
mov
scas
xor
shr
enter
std
rorb
lods
pop
xchg
mov
movsb
enter
pop
ret
enter
cltd
push
stos
fstpl
xchg
inc
out
mov
xor
add
in
xchg
xchg
mov
sbb
jbe,pn
push
je
xchg
ss
loopne
popa
pop
mov
and
sti
lods
xor
inc
aad
jecxz
push
xor
sahf
xchg
js
sbb
sub
mov
cmp
xor
jg
into
sbb
dec
push
xchg
pop
and
fucomi
lods
insl
jp
ret
out
dec
add
pop
in
sbb
dec
test
sub
dec
add
ss
xor
enter
or
out
xor
and
lds
sarl
jle
iret
jne
push
push
imul
push
sahf
fsubrs
and
lds
push
push
lods
pop
adc
xchg
and
leave
pop
popf
dec
push
jecxz
ds
notb
in
insl
sbb
scas
test
rorb
lods
cmpsb
and
ret
and
or
and
arpl
rcll
cmp
aam
ja
jb
jns
pop
gs
popa
push
dec
cld
lds
cmp
das
pop
cli
jno
into
lods
sub
sub
or
mov
and
hlt
idivb
das
mov
imul
rcll
add
test
push
jg
les
lds
aam
fcmovbe
loope
push
rolb
gs
mov
jae
push
inc
push
mov
cmc
xchg
jg
xchg
sbb
out
push
aam
loope
outsl
ds
mov
cmpsl
test
cltd
inc
shll
xchg
dec
jne
dec
rolb
shr
adc
xor
adc
jbe
aaa
popf
cmp
insb
add
push
cmpsl
jne
xchg
mov
insl
sbb
lods
ja
pop
out
sbb
cmp
sbbb
enter
cmp
ja
sbb
pop
rorl
jbe
dec
testl
pushf
and
or
loope
mov
test
push
in
dec
mov
or
icebp
ret
sub
pusha
dec
mov
adc
mov
popf
repz
js
mov
cmp
pop
gs
cmp
xchg
loopne
test
popa
sbb
cmp
push
dec
imul
inc
mov
adc
xchg
pop
dec
jmp
insl
iret
push
repnz
and
jle
icebp
test
fcoml
or
or
adc
pushf
imul
adc
xchg
fs
sbb
and
mov
sbb
shrb
inc
dec
js
scas
stos
and
pop
shl
adc
lods
into
lea
cmp
xchg
cld
aad
xor
mov
fcomi
sub
mov
sbb
out
repnz
add
cmp
xor
lods
insl
mov
fwait
jo
push
xor
ja
add
sti
jne
pop
decb
pop
je
inc
scas
stc
adc
rcll
leave
jae
xor
imul
popf
sub
inc
or
inc
xchg
push
insb
popf
arpl
rclb
loopne
not
stos
daa
jle
test
inc
js
inc
insl
mov
mov
mov
sahf
leave
mov
mov
dec
roll
filds
jne
xchg
int3
push
aaa
cmp
inc
arpl
rolb
dec
das
cmc
add
mov
sbbl
xchg
xorb
ljmp
punpckhdq
lods
fnstenv
jae
push
loopne
clc
xchg
rcl
xlat
add
test
cs
inc
push
xor
out
aad
lret
rcrl
fstpl
jecxz
popa
mov
xor
repz
pop
out
mov
lret
mov
inc
insl
andb
daa
in
aas
mov
dec
dec
in
mov
addr16
mov
or
sub
out
test
mov
pop
push
fld
mov
xchg
stos
mov
fs
test
or
cmp
xor
adc
adcl
test
je
leave
ret
jecxz
je
mov
repnz
cli
out
in
push
lret
xlat
mov
loop
pushf
sti
ja
nop
loop
lcall
pop
imul
mov
shll
inc
xchg
inc
daa
outsl
stc
js
lods
add
ret
insl
hlt
das
and
mov
push
pop
faddp
xor
in
add
into
nop
mov
cmp
cmp
pop
je
out
pop
arpl
and
test
and
adcl
jle
shrb
lret
pop
xlat
or
or
cmp
add
in
hlt
pop
ret
call
ss
jo
sbb
aas
shlb
lea
xor
mov
adc
push
fists
mov
or
cmp
mov
decl
shl
fsubs
push
jnp
cmp
sub
int
daa
inc
test
xor
pop
mov
fistps
out
lods
inc
sub
incb
clc
and
cmp
pop
loopne
xor
add
lds
mov
push
cwtl
push
dec
and
cli
test
daa
sbb
jg
sub
mov
bound
daa
push
repz
adc
jns
addl
mov
adcb
or
push
movsl
movsl
mov
enter
loopne
push
and
mov
sbb
push
neg
cmp
outsl
ret
and
or
mov
ja
mov
adc
mov
push
arpl
int
lcall
stos
out
fmuls
xchg
ds
arpl
int
jge
pop
pop
or
mov
cmp
push
mov
data16
repnz
popa
outsb
dec
lds
cmp
nop
jne
sub
or
rorb
cwtl
stc
out
rolb
cltd
pop
test
or
push
adc
xchg
data16
out
mov
cmp
add
jge
cmc
mov
cmc
faddp
or
sub
xchg
push
jecxz
roll
pop
rcrb
popa
pop
add
sbb
pop
inc
adc
xchg
ret
mov
into
dec
mov
iret
dec
mov
mov
je
push
jg
add
or
mov
pop
arpl
pop
call
mov
sbb
je
jb
imul
in
xchg
sub
ret
cmp
mov
bound
nop
insl
mov
nop
xchg
orl
dec
mov
mov
xlat
lcall
fwait
repnz
jae
testb
jno
movsl
nop
stos
sbb
rorl
cld
mov
add
insl
mov
in
cmp
pop
xlat
jo
mov
js
jno
pop
stos
movsb
lods
jp
cmpsb
push
das
xchg
fcom
jnp
sti
mov
repz
std
inc
jo
out
mov
lea
stos
or
sub
sbb
pusha
sbb
lcall
jmp
fcoml
mov
jle
and
fsubrl
ja
ja
pop
push
or
aam
call
loop
xor
pushf
aam
ljmp
lods
cmp
xor
inc
mov
mov
js
inc
and
fs
pop
shlb
and
or
icebp
in
bound
dec
out
out
jecxz
subl
pop
js
or
dec
sub
aas
call
movups
dec
es
cmp
andb
mov
jo
mov
jae
test
lahf
out
lods
xchg
mov
rorl
pop
xor
and
sti
fs
mov
lds
xchg
pop
lea
mov
in
stos
pop
mov
mov
cmpsb
push
pop
jmp
mov
stc
testb
xorl
clc
push
mov
jno
lods
lcall
push
daa
rol
and
cmc
aam
imul
negl
xchg
xor
js
add
idivb
jg
add
inc
lods
mov
hlt
jle
xorb
jbe
test
sub
dec
xor
adc
and
push
out
imul
mov
xor
popf
jecxz
jns
pop
mov
fwait
xchg
cmp
cmp
or
jecxz
dec
adc
out
inc
push
inc
imul
loopne
mov
push
dec
jae
outsl
fdivrl
outsb
je
jmp
mov
sub
int
out
test
test
xor
fistpl
nop
jecxz
dec
aas
and
sbb
xchg
cmc
loopne
cmpsb
xor
ja
inc
jmp
mov
popa
sti
xchg
movsl
and
jne
fcmovnu
arpl
movsl
aam
fnstenv
push
scas
cmp
bound
push
jbe
rol
nop
insl
ret
enter
cli
je
sahf
ja
adc
frstor
test
aas
rorb
ss
xchg
ja
mov
insb
push
jge
push
jae
lea
and
mov
cmpb
fs
push
inc
mov
push
das
clc
clc
push
rcr
add
stos
fwait
in
js
sbb
fistpll
arpl
nop
cmp
rcrl
sub
sbb
inc
shl
lock
lret
insb
cmp
ficoml
pop
in
scas
arpl
pop
sub
shll
dec
push
mov
int3
roll
adcb
inc
sub
lahf
dec
jle
sbb
frstor
stos
loope
int3
inc
js
and
xor
mov
loop
dec
xchg
pop
pop
dec
mov
jne
lods
inc
mov
jae
inc
pop
inc
fsts
sahf
in
out
sbb
aaa
adcl
icebp
push
mov
ja,pt
pop
dec
hlt
add
push
add
cwtl
xor
shlb
dec
in
nop
add
dec
lret
mov
sub
pop
les
pop
ret
test
imul
adc
mov
popa
jl
out
inc
sbb
repnz
sub
sbb
mov
jo
push
sub
sub
jle
pop
lret
push
addl
pop
scas
add
mov
adc
popf
cmpsb
popf
xchg
mov
xor
mov
cmpsb
cmpsl
xchg
xor
mov
fisttps
xor
dec
repnz
in
sub
stc
push
cmc
arpl
mov
push
fwait
xchg
pop
insb
or
int
xchg
es
pop
outsl
pop
fidivl
xchg
sbb
inc
xor
out
int
lods
test
imul
and
cli
mov
test
in
dec
pop
notb
imul
mov
or
cmpsl
nop
ret
mov
push
sub
cmp
clc
icebp
push
nop
das
jge
outsb
lea
dec
sbb
gs
cmp
sbb
xor
out
sahf
je
and
xor
repnz
push
pop
aam
and
sbb
outsb
add
pop
push
add
pop
cmpsb
out
nop
iret
enter
push
or
add
test
xchg
movsb
imul
adc
dec
mov
jmp
mov
aaa
hlt
add
lods
out
and
aad
rcr
add
mov
inc
daa
fisubrs
out
insl
xor
int
inc
cmp
fildll
pop
addl
ds
hlt
nop
jle
xchg
sbb
cltd
jae
je
outsl
adc
jo
inc
cmp
out
push
jne
imul
push
xchg
sub
pop
stc
aaa
mov
inc
or
fninit
in
inc
jnp
addb
and
and
dec
test
aas
sub
shlb
rol
jmp
je
adc
jno
imull
cmp
sbb
movsb
into
lods
nop
adc
xor
arpl
js
jbe
fstl
jbe
and
mov
and
loopne
lcall
fwait
roll
sbb
xor
xchg
popa
lcall
sub
andb
add
mov
popf
pop
addr16
scas
ja
sub
icebp
adc
stos
jns
inc
mov
out
add
test
jmp
dec
and
outsl
mov
and
pop
hlt
fmuls
inc
movsl
jbe
and
mov
fistpl
in
adc
lods
testb
mov
jns
subl
push
sbb
pop
jle
aas
mov
or
sbb
inc
sbb
loope
fiaddl
aad
add
ret
insl
lods
or
inc
iret
mov
pushf
xchg
loopne
rcrb
pop
shll
fs
adc
popa
push
inc
dec
mov
icebp
xor
lret
out
shr
cmp
stos
loope
unpckhps
popl
mov
aad
jae
jg
pop
test
add
faddl
js
mov
loope
cmp
sbb
cmp
insb
dec
jl
sub
shlb
jle
xchg
cwtl
jns
shl
out
testl
aam
cltd
icebp
out
addr16
call
aas
mov
fwait
insb
lcall
jo
add
daa
pop
repz
and
idivl
imul
mov
dec
fdivs
pop
push
clc
xlat
mov
lock
int
iret
jae
test
nop
cmp
and
roll
popa
scas
fdivs
cmc
mov
js
push
mov
rcll
popf
pop
cld
sbb
xor
mov
jb
ss
mov
mov
lret
stos
sahf
sarb
and
movsb
xor
mov
mov
std
push
mov
sbbl
add
mov
out
lret
inc
aam
mov
xor
and
addr16
fsts
or
popf
mov
dec
int
cmpsl
push
faddl
cli
lods
add
cmpsl
mov
xor
js
xor
mov
push
leave
test
outsb
pop
jo
mulb
mov
or
out
jne
mov
pop
cwtl
adc
cmovns
fs
push
xor
mov
pushf
xchg
add
ficoml
sub
dec
xor
xchg
dec
add
push
cmpsb
scas
mov
fiadds
add
jbe
out
std
test
xor
xchg
pusha
push
jp
dec
inc
and
adc
mov
jmp
xchg
xchg
std
inc
loop
arpl
xor
pop
loop
lds
lds
fbld
in
aaa
jno
and
cmp
cmc
repnz
int3
out
and
and
cltd
out
rcrl
mov
adc
jl
xchg
sub
mov
sbb
add
rolb
stc
pop
shlb
push
push
clc
mov
pop
outsl
or
out
lods
push
mov
sbb
mov
push
fcomps
push
aam
xchg
dec
cmpb
add
aas
stc
filds
pusha
sub
push
mov
and
sbb
cmp
mov
fidivrs
mov
scas
sbb
scas
mov
inc
pop
mov
xor
pop
cmp
movsl
mov
or
and
cmp
and
or
loop
bound
or
push
push
shll
test
frstor
pop
lock
cmc
or
nop
adc
mov
cmpsl
in
daa
jmp
popf
cmp
add
or
adc
fisttps
ss
push
or
popa
stos
ficoms
push
xchg
jbe
or
call
pop
pushf
jbe
insl
enter
enter
nop
leave
add
jnp
std
movsl
xchg
mov
push
xchg
fcmove
das
cli
xchg
mov
sub
shll
or
clc
and
popf
std
xor
ja
in
sub
fcmovbe
repz
rolb
or
outsl
jmp
dec
repz
rorl
sbb
push
ja
mov
jmp
shll
in
mov
add
lcall
fists
pop
mov
lret
dec
or
sbb
mov
lcall
jbe
add
mov
mov
jge
sarb
push
xchg
inc
jnp
test
dec
fimull
jl
or
repnz
push
pop
dec
not
fdivs
fsubrs
jae
mov
imul
mov
xchg
je
lahf
inc
xor
ret
sub
scas
push
pop
fnsave
adc
lcall
mov
jno
je
xor
mov
leave
sbb
call
adc
stc
mov
mov
mov
cltd
add
sti
xchg
enter
icebp
and
in
xchg
gs
test
adc
push
dec
adc
and
dec
dec
and
out
xchg
iret
push
pop
and
sub
mov
add
mov
lret
jle
aas
push
insl
lahf
cltd
mov
icebp
mov
sbb
lds
insb
repnz
mov
loope
mov
fwait
add
inc
fidivl
popf
cwtl
adc
xor
ret
cs
cmp
xchg
adc
sbb
mov
lahf
jno
clc
loope
test
jle
movsb
fdivr
sbb
xchg
sarl
push
loope
dec
mov
insb
mul
pop
sub
inc
and
cmp
push
rcrl
jmp
icebp
xor
ljmp
dec
stos
popf
sti
sbb
cmpsb
adc
repz
adc
das
rcl
dec
int3
outsb
sub
outsl
lds
inc
pop
in
rorb
jb
lods
pop
jmp
push
stc
out
aad
in
stos
rcr
xchg
xor
push
mov
sbb
vrsqrtps
pusha
ja
dec
add
shll
aam
jp
hlt
sub
repz
sbb
fmull
loop
sbb
jnp
dec
mov
cmp
xor
stos
jbe
pop
adc
outsb
shlb
int3
stos
out
mov
mov
dec
mov
xor
dec
xchg
or
insl
mov
mov
pushl
fstpt
mov
popf
cmp
repz
mov
cmp
jle
mov
lea
bound
insb
imul
add
push
cld
mov
nop
add
repnz
mov
leave
cwtl
mov
push
mov
cs
inc
or
mov
stc
rcr
ret
andb
dec
jecxz
or
xchg
subb
stos
sahf
pop
fcomi
push
lock
xlat
sub
pop
orl
pop
push
jle
mov
test
jo
fsts
fsubrs
aas
lock
rcrb
adc
or
sti
stc
adc
inc
xor
mov
pop
mov
jge
test
jge
stos
push
mov
rorl
mov
or
lret
or
es
and
sbb
lock
or
xchg
jo
outsl
or
lcall
test
cmp
dec
fadd
sbb
fmul
lods
jmp
or
xchg
rorl
jp
aam
in
loop
add
mov
xchg
dec
into
orb
lcall
lods
xor
pop
xorb
std
in
dec
xchg
cltd
sbb
cmp
orb
aaa
jb
mov
pop
fnstsw
pop
sbb
and
xchg
adc
jo
and
mov
lret
js
and
mov
data16
xchg
dec
xchg
call
xlat
cltd
roll
add
dec
je
adc
movsl
insb
mov
sti
addb
mov
je
mov
push
aaa
movsl
enter
push
shll
mov
adc
add
out
push
lods
xchg
in
cmpsl
lods
iret
test
inc
add
daa
repnz
xchg
mov
push
or
in
addr16
shl
movaps
sub
xor
roll
mov
push
ja
push
imul
adc
sarl
loope
jae
xor
hlt
pushf
cld
mov
sub
jnp
lods
cmp
xchg
pusha
cld
rorb
in
jp
call
sbb
test
or
clc
in
movsb
pop
lcall
inc
dec
add
xchg
jo
out
js
and
jmp
mov
pop
andl
add
xchg
cmp
les
mov
stos
jo
jmp
cmp
loope
arpl
xchg
ror
lods
and
loope
push
f2xm1
inc
push
push
add
push
xor
xor
push
ja
push
mov
cld
loope
xchg
cmpsb
out
add
ret
cmpsb
aaa
repnz
cmp
test
add
outsb
push
test
xchg
pop
stos
cmp
pop
out
out
enter
mov
jge
cld
xchg
xchg
pop
jle
or
xor
movsb
adc
bound
add
inc
and
push
repz
arpl
push
jg,pt
andb
xchg
faddp
jbe
push
fmuls
in
test
out
scas
leave
in
xor
add
sub
lea
je
and
test
sbb
fisubl
mov
rsqrtps
sub
or
mov
repnz
mov
pop
pop
repnz
roll
pop
stos
sbb
inc
xor
jbe
pop
fcompl
xor
pop
jno
scas
scas
push
xchg
pop
sbb
jbe
sbb
fwait
es
mov
fwait
pop
out
cmc
mov
and
pushf
aam
mov
xchg
and
cli
fnsave
andl
js
jbe
or
xchg
stc
xchg
sub
or
imul
shrb
push
ret
cmp
pop
push
or
adc
dec
out
in
bound
or
mov
jg
leave
int
gs
inc
lcall
add
dec
clc
stos
cld
dec
aas
inc
sbb
sbb
fcompl
sub
cmp
adc
cmp
jp
push
push
push
push
sub
sub
fsubrl
aaa
and
sbb
adc
inc
mov
andb
stc
xchg
and
or
xchg
pop
mov
lods
push
and
pusha
mov
adc
xchg
ja
add
mov
jne
call
scas
loope
or
mov
aam
shlb
sar
addr16
add
in
and
pop
test
pop
sahf
and
dec
pushf
mov
ror
sbb
sub
dec
sub
test
cmp
loop
dec
ljmp
cmp
pop
sbb
ror
arpl
ss
rclb
jle
pop
sbbb
daa
scas
mov
lock
push
mov
jg
call
data16
out
and
movsb
adc
jl
cmc
dec
test
sub
jmp
sub
inc
mov
fdivr
add
or
cltd
inc
xchg
pop
dec
cmpsb
in
push
cmpsb
cmp
into
mov
mov
shlb
jbe
cmp
xchg
xchg
fnsave
movsl
fistpll
or
fbld
lahf
jae
xchg
xchg
fnstsw
std
sbb
into
out
mov
mov
mov
mov
addb
pushf
divps
mov
jge
inc
push
js
mov
in
je
hlt
std
inc
stc
cmp
or
push
mov
jl
cmp
cmp
xchg
inc
push
mov
mov
popa
out
xchg
insl
mov
mov
nop
outsl
aaa
xchg
dec
xchg
mov
push
mov
mov
adcb
mov
mov
dec
and
mov
xchg
mov
pop
xchg
dec
nop
iret
mov
xchg
pop
jb
mov
cmp
xchg
adcb
sbb
push
mov
test
pop
or
mov
sar
cmc
xchg
ljmp
les
xchg
inc
dec
dec
gs
sub
jo
aaa
dec
insl
push
movsb
mov
imul
scas
mov
mov
mov
scas
or
mov
push
scas
mov
dec
loopne
sub
push
shrl
rcrl
or
sbb
mov
mov
hlt
sub
xchg
lcall
push
repz
xor
xchg
mov
rclb
aas
xor
cwtl
jle
or
push
lods
dec
pop
cmp
jp
push
dec
jp
push
xchg
pop
fcoms
lock
sbb
pop
lods
fs
out
dec
jecxz
lea
pop
mov
pop
ret
inc
cmp
loopne
cwtl
mov
movsb
cs
adc
rol
and
test
popa
adc
adc
add
xor
fdivs
dec
pusha
pop
cmp
add
orb
sbb
cld
fnstenv
xchg
pop
adc
pop
rcr
lods
xchg
je
xor
inc
call
mov
addl
jnp
into
aad
jns
inc
stc
cmp
mov
cmpsl
aam
int
dec
mov
movsb
lcall
ja
adc
pop
sbb
sbb
and
xchg
pop
sahf
inc
imul
icebp
xchg
stos
and
sarl
jp
and
sub
push
leave
repz
push
pop
cmp
cmp
stos
push
push
mov
xchg
dec
jmp
mov
lcall
jno
nop
and
sub
jmp
aad
pop
push
and
mov
xor
pop
ljmp
fldenv
fwait
or
push
dec
out
jle
insb
mov
sub
lock
lock
inc
cwtl
dec
cs
insl
pusha
fnstenv
push
pop
pop
add
ja
xchg
cmp
push
jl
sbb
popa
stos
push
dec
mov
jge
mov
mov
mov
adcb
nop
mov
push
and
xchg
jno
adc
sahf
adc
cmp
xchg
test
jg
add
ficomps
adc
in
std
out
xor
shll
jle
mov
pushf
imul
mov
jle
cs
push
or
loopne
xor
sub
fyl2x
inc
add
mov
cmp
pop
dec
cmp
popa
or
jecxz
mov
adc
and
ds
or
out
push
push
and
jmp
or
inc
adc
dec
push
sbb
in
out
xlat
jae
loop
xor
mov
aas
sub
mov
pushf
in
mov
add
imul
adc
cli
stc
fmulp
cli
fnstcw
iret
psubb
add
hlt
sbb
xchg
les
jnp
xchg
sarl
jnp
ds
or
push
fbld
aad
and
jecxz
pushf
sahf
fstp
xor
test
sbb
adc
aaa
push
jle
dec
cmc
dec
dec
add
pop
movswl
push
daa
les
in
jge
cwtl
jb
jg
and
sub
mov
mov
cwtl
ja
mov
mov
jecxz
or
std
pop
cs
cmp
sub
inc
daa
push
add
or
push
jne
push
and
incl
cmp
fwait
push
mov
ja
or
mov
dec
dec
int3
aad
out
ss
repz
dec
arpl
adc
or
mov
mov
and
sbb
dec
cmp
pop
jg
push
push
lea
pop
push
stos
adc
dec
call
sbb
pop
jg
fcmovbe
pop
xor
xchg
and
mov
xor
push
out
lahf
add
mov
adc
mov
mov
or
pop
jns
imulb
mov
cmp
mov
sbb
mov
js
sqrtps
divl
shlb
cmpsl
popf
mov
mov
jle
inc
enter
outsb
inc
cli
sar
test
adcl
and
decb
sahf
addb
ret
mov
dec
enter
arpl
inc
pop
dec
lret
inc
push
aam
xor
push
incb
add
dec
push
mov
popf
and
clc
fistpll
cmp
and
jns
out
lret
fwait
mov
mov
lods
icebp
mov
pop
xchg
and
out
mov
xchg
cmp
push
inc
push
and
pop
push
mov
pop
dec
push
repz
push
adc
pop
imul
loop
jge
xlat
jbe
jbe
into
imul
scas
push
fstpt
sbb
cmpl
cs
jmp
push
push
sbb
pop
pop
xchg
pop
test
das
sub
js
fidivrs
jns
sub
cmp
sbb
cmpsb
fadd
imull
out
cli
cmpsb
cmp
out
sbbb
mov
mov
pop
sub
xchg
cmp
xor
add
add
idivb
push
jecxz
pop
in
popf
int3
lds
sbbl
loop
sti
jno
push
mov
mov
sbb
hlt
fnstenv
add
add
daa
popf
mov
pop
mov
les
out
jbe
test
mov
jp
xchg
mov
push
push
add
popa
mov
es
inc
mov
jbe
andb
inc
mov
adc
scas
inc
iret
sub
or
adc
scas
adc
fstl
andl
cli
push
mov
arpl
sbb
mov
jns
sbb
mov
and
pop
popa
sbb
mov
sub
mov
inc
cmpsb
lahf
inc
icebp
nop
mov
sbb
leave
xchg
mov
or
jae
inc
push
lret
cmp
mov
mov
dec
arpl
iret
mov
lret
xor
sbb
sub
push
fstps
sub
add
mov
icebp
cli
mov
sub
pop
xchg
xor
and
icebp
inc
mov
sub
pop
pusha
cli
incl
pop
push
xchg
add
nop
mov
and
xchg
rclb
sbb
adc
mov
xchg
dec
fwait
sub
pop
sti
and
movl
push
imul
lret
sbb
testb
ss
movsb
jnp
jo
arpl
add
cld
jnp
pop
mull
pop
in
and
out
cmp
lods
int3
inc
inc
mov
fsub
cmpsb
lahf
cli
cli
adc
ss
pushf
jl
imul
pop
pop
jge
push
or
mov
dec
jp
out
dec
add
loopne
subl
ret
or
mov
pop
sub
xor
push
add
jle
dec
es
and
add
inc
mov
adc
pop
pop
mov
add
out
jg
dec
add
jns
adc
xor
cli
arpl
mov
cld
dec
push
in
push
sbbl
inc
sub
pop
inc
pop
mov
or
fdivrl
fidivrl
mov
jbe
repz
das
movsb
or
pop
outsb
push
aad
mov
jecxz
cmpb
push
add
sbb
mov
mov
fcomip
dec
dec
out
int3
jg
mov
xor
push
lock
dec
mov
cmp
outsb
bound
sub
adc
rol
lcall
push
mov
and
stos
call
cmc
call
adc
notb
sarl
imul
xchg
inc
sub
movsb
push
jmp
idivb
mov
push
popf
pushf
mov
or
jb
cwtl
xor
pop
pushf
in
fimull
fiaddl
out
enter
sub
sub
sub
sti
lods
mov
jo
lahf
xchg
jnp
cmp
xchg
jp
ljmp
aaa
lret
into
aaa
inc
into
lahf
push
push
inc
pop
cmp
in
mov
loop
shl
ds
jle
shlb
imul
sbb
stos
rcrl
add
pop
xor
les
loopne
jne
gs
clc
enter
mov
mov
push
lods
test
subb
out
pop
lcall
ret
rcr
fwait
shl
je
sti
rorb
out
add
push
jb
hlt
lea
xor
sbb
dec
pop
and
das
sbbl
leave
iret
add
xor
cmc
pop
or
mov
sbb
movsl
test
out
xor
xor
outsb
xchg
ja
add
sahf
jne
xor
cmpsl
outsb
pop
mov
jo
mov
mov
mov
out
add
aam
dec
dec
in
jno
dec
loope
xchg
push
inc
test
stos
or
fucom
daa
mov
and
repnz
jnp
lcall
xchg
enter
lahf
dec
hlt
movsl
mov
push
test
xchg
push
xor
movsl
lods
xchg
jmp
cmc
inc
rclb
push
call
mov
repz
mov
mov
flds
push
jmp
mov
stos
xchg
adc
inc
clc
lahf
xchg
data16
decl
mov
ret
xor
push
add
mov
push
push
adc
and
sbb
xchg
imul
xor
insl
mov
and
das
mov
jge
mov
mov
xchg
daa
shrb
sbbl
leave
mov
xchg
add
inc
gs
test
lock
stos
and
jg
mov
sbb
test
leave
add
mov
test
mov
loope
push
out
and
cmpsl
pop
add
or
mov
adc
adcl
jne
lods
cmpsl
xchg
or
movsb
imul
call
mov
ret
lods
in
scas
and
or
aas
xor
mov
sub
sub
nop
jg
sbbl
shrl
pop
call
test
stos
fwait
mov
dec
push
jecxz
xlat
cltd
mov
mov
in
es
fnsave
call
cmp
xchg
pop
js
mov
dec
xchg
outsb
sti
insl
cld
mov
sbb
arpl
scas
mov
push
inc
int
cmp
jbe
xchg
fdivrp
pop
pop
loope
sahf
xor
sbb
jmp
or
rcr
popf
mov
mov
lods
in
sbb
rorl
fcoms
mov
xchg
sub
or
mov
and
lcall
mov
addr16
dec
ds
pop
mov
mov
jnp
and
addr16
in
mulb
inc
shll
pop
cmp
cmp
outsl
inc
lods
pop
fisubl
mov
jecxz
loop
js
mov
stos
leave
sahf
mov
iret
jno
pop
xor
cmp
jle
inc
or
xor
mov
repnz
adc
xchg
inc
push
push
lds
xlat
mov
stos
shrl
sub
inc
pop
pop
loope
aad
sbb
aad
sub
sahf
adc
stc
ret
push
insb
cld
inc
mov
dec
add
jo
dec
fistl
inc
push
or
fmul
test
xor
test
fldenv
push
xchg
mov
sub
pop
mov
in
lods
incb
xor
rcl
stos
arpl
xor
ficoms
push
jno
imull
cmpsb
pop
jno
mov
insb
jbe
imul
dec
jne
xchg
cmp
rolb
daa
inc
inc
stc
push
jmp
mov
xor
movsl
xor
inc
inc
cmpsb
jo
mov
xchg
xor
push
outsb
call
jae
syscall
insb
cmpsb
aam
pop
xor
mov
xchg
jne
add
cmpl
shlb
mov
inc
shlb
inc
sub
mov
dec
sbb
pop
add
lcall
loopne
sbb
push
lock
aad
xchg
mov
or
fisttps
shll
jbe
ss
lods
mov
popf
nop
aam
fdivs
popf
cli
xor
dec
out
xor
push
rolb
cmp
xor
add
scas
repz
sbb
mov
mov
fistpll
lock
push
mov
fcomps
cli
mov
into
add
sub
mov
js
call
mulb
mov
jne
cwtl
bound
inc
cs
mov
dec
adc
cmp
mov
imul
daa
lods
cmp
daa
or
test
jb
jg
jle
loope
mov
lods
popa
inc
out
aaa
push
pop
in
adc
jecxz
clc
mov
stos
mov
js
adc
inc
andl
mov
mov
xor
mov
and
pop
xchg
bound
push
add
add
sub
add
cli
cmpsl
sbb
movsl
adc
sti
stos
sub
imul
sbb
inc
jge
dec
ljmp
insb
xlat
aas
mov
dec
imul
dec
jo
jno
cmpsb
stc
push
sti
dec
inc
sbb
mov
fbstp
std
rclb
fldt
into
mov
and
mov
add
mov
cli
pop
scas
lahf
or
fmull
mov
cmovnp
dec
push
jno
push
loope
jbe
aam
test
fcoms
sahf
iret
sbb
add
cmpsl
test
inc
mov
ja
fcomps
dec
mov
repnz
jle
pushl
jle
fadds
and
cmc
test
inc
daa
rcl
add
out
jb
sub
shr
cmp
mov
repz
jmp
mov
stc
cmp
fnsave
stos
int
adc
int
js
shrb
imul
sbb
jl
xlat
sbb
lods
mov
cmp
fdivp
fistpl
mulb
add
fmul
scas
xor
push
out
nop
int3
subl
inc
ljmp
mov
fiaddl
test
mov
aam
cld
mov
clc
mov
mov
cmpsl
mov
hlt
mov
aad
xor
subb
sahf
fmuls
repnz
in
mov
mov
test
sbb
pushf
mov
repnz
mov
ja
mov
jmp
out
mov
in
mov
test
sub
xchg
jae
lret
sahf
mov
push
jle
adc
adc
pop
insl
lods
pushf
or
cli
sbb
fwait
sarl
push
int3
dec
cmpsb
jo
and
fstl
push
out
pop
xchg
inc
lds
or
movsb
ds
call
or
int3
cmp
cs
inc
mov
addr16
es
popa
push
fldcw
mov
lods
cld
iret
cmc
sbb
stc
push
and
ljmp
lcall
mov
notl
mov
cwtl
push
dec
test
mov
jmp
fnstenv
mov
add
jb
push
adc
icebp
mov
xchg
call
insl
xor
mov
cli
ror
pop
pop
mov
jge
cltd
or
jb
add
xchg
imul
xlat
push
pushl
sub
ret
lcall
xchg
jg
mov
mov
adc
mov
call
pop
sub
pop
test
sub
jecxz
clc
adc
sarb
insl
dec
jnp
pop
and
and
jb
jge
add
ds
cs
sarb
mov
sbb
in
mov
jns
dec
test
mov
mov
lahf
stos
push
inc
jne
jae
dec
cmp
sub
lahf
cltd
xchg
push
iret
sub
fst
mov
sub
das
pop
ds
cwtl
popa
jne
xchg
ja
sbb
add
pop
xchg
repnz
pushf
sti
pop
rcll
imul
out
rcr
loopne
pop
dec
insb
in
jno
xchg
mov
outsl
pop
fwait
lock
mov
push
movsb
je
rorb
insl
clc
mov
mov
pop
lock
out
or
push
repnz
cld
insl
test
out
jbe
lcall
outsl
stos
pop
outsb
enter
sbb
fdivs
movsb
xor
mov
mov
jecxz
jbe
insb
sahf
je
popf
sub
leave
mov
out
imul
icebp
popa
scas
ljmp
pop
mov
sub
push
or
push
stc
add
mov
mov
ret
or
or
in
insb
shll
stos
imul
stos
add
add
push
mov
inc
inc
dec
xchg
fstp
adc
mov
and
pop
pop
jge
sar
lahf
sbb
inc
cmc
negl
dec
mov
call
stc
testl
stos
jae
out
int3
jl
test
ja
rclb
fwait
outsl
jl
mov
ja
push
ds
clc
mov
dec
xchg
call
mov
mov
je
insl
pop
fs
fwait
loop
and
inc
cltd
and
lods
mov
mov
in
ss
push
test
cmp
mov
mov
push
dec
mov
stos
adc
pop
inc
sbb
popf
shl
scas
mov
rcl
out
movsl
fwait
popf
loope
jns
loopne
mov
insl
lahf
jl
inc
sub
cltd
and
mov
mov
dec
inc
mov
dec
insb
xchg
mov
cmc
cs
mov
cli
sbb
push
xchg
shrb
fisubs
popf
adc
int
loope
shll
and
aam
mov
stos
bound
jle
jnp
adc
jecxz
push
jnp
orb
mov
mov
jg
loopne
enter
push
in
mov
pusha
cld
out
mov
xchg
stc
rcrl
or
cmp
sbb
fwait
cmc
into
jne
or
inc
mov
ja
iret
lcall
xor
mov
cmpsb
push
inc
add
jne
xchg
sti
xor
ss
sub
and
lods
mov
lahf
jg
cmp
in
cmpsb
push
addr16
push
inc
clc
jne
lock
out
cmc
lret
loop
xchg
jge
das
or
xchg
mov
ss
lret
sub
fsubrl
dec
cltd
stos
mov
fldenv
lods
outsb
sbb
iret
shl
inc
dec
popf
mov
outsb
data16
xchg
int3
iret
mov
les
and
cmp
push
sbb
inc
xor
sub
icebp
pop
pusha
xor
push
les
dec
add
push
and
decl
roll
decb
xchg
cmp
or
push
fisubrl
jnp
cmp
or
add
or
cpuid
call
and
int3
inc
movsl
imul
idivl
out
inc
aas
test
clc
jg
pushf
adc
mov
mov
xchg
test
std
cmp
sbb
filds
sub
fildll
add
repz
jmp
loopne
adc
out
lahf
jnp
mov
inc
mov
lahf
enter
jmp
insb
add
add
leave
jmp
xchg
push
scas
pop
add
pop
ss
lds
ret
and
mov
jl
out
hlt
inc
adc
insb
cmp
loop
dec
cwtl
stos
xor
ss
mov
cmp
mov
dec
push
cli
cli
sub
imul
xchg
je
ficompl
dec
jb
dec
xrelease
pop
add
mov
jnp,pn
loopne
repz
neg
push
and
cmp
out
dec
adc
icebp
mov
addl
push
cld
mov
mov
int3
call
mov
and
out
pushf
lock
fdivl
inc
cld
iret
jle
les
push
xchg
and
repnz
pop
sbb
add
xor
and
lret
pop
adc
and
xchg
add
cmc
cmpsl
roll
push
pop
into
dec
jmp
ss
mov
out
push
out
inc
lods
insb
cld
scas
add
jl
push
mov
push
jge
in
clc
add
pop
lret
shrl
outsb
aaa
pop
movsb
imul
cwtl
xchg
mov
jb
movsb
adc
xchg
test
add
in
adc
inc
andb
fwait
lahf
in
add
shll
adc
xchg
mov
fsubs
nop
shrd
cmp
adc
daa
in
inc
mov
movsl
xchg
hlt
mov
cwtl
adc
mov
int3
pushl
adc
cmp
pushf
mov
test
jmp
in
jl
dec
loopne
xor
stos
mov
enter
inc
and
xlat
lods
jle
sub
mov
xor
orb
popf
pop
mov
mov
pop
xchg
jbe
cwtl
jge
subb
pop
adc
adc
inc
jl
aam
out
outsb
inc
mov
push
pop
jmp
jns
cmp
fistpll
add
popf
lock
cmp
insb
push
inc
pop
and
addr16
pop
in
add
sti
mov
lods
sbb
cmp
loop
mov
mov
push
dec
push
jo
into
enter
cmpsl
inc
loope
cld
cmp
mov
push
pop
loope
ret
out
pop
test
sub
mov
mov
jle
fldcw
mov
and
ret
cmp
jae
and
jnp
out
add
add
lock
ficoml
sub
adc
dec
scas
xchg
jae
iret
arpl
xchg
loopne
scas
sbb
mov
test
fadds
push
std
ja
or
and
cmp
xchg
aaa
mov
pop
push
out
adc
hlt
pop
shl
mov
dec
push
gs
sbb
fdivrp
adc
insl
sub
cmp
and
xor
xchg
adc
dec
int
mov
fwait
cmc
pop
sub
lods
in
std
xor
mov
cmc
push
cmpl
test
sbb
xor
test
sub
sbb
ret
sub
xor
aad
hlt
loopne
ficoms
pop
add
nop
push
mov
out
sub
lock
jno
insl
mov
fisubl
lods
jmp
pop
push
inc
push
fistpll
xchg
mov
pop
das
into
cmpsl
xchg
pop
xorb
lret
mov
push
or
call
lahf
or
mov
add
enter
or
lods
mov
pop
pop
dec
ss
and
bound
ljmp
bound
shrb
orl
jb
pop
mov
jo
jno
pop
adc
mov
dec
push
addr16
scas
mov
and
out
loopne
dec
mov
sbb
mov
mov
shlb
mov
xor
cli
fcomip
movsb
cmpsl
popa
and
sbb
and
push
aad
ljmp
mov
mov
xor
cltd
pop
dec
mov
fisttpl
and
xchg
jb
cmpsl
movsl
pusha
mov
jb
inc
aas
in
and
lods
sub
or
lret
popf
inc
sub
sub
mov
pop
fcomps
push
mov
inc
insl
ret
mov
clc
mov
jmp
enter
or
leave
insb
mov
shrb
int3
sbb
xchg
xor
testb
popa
in
lret
ret
sub
mov
scas
stos
dec
mov
cld
movsl
lock
aas
mov
and
mov
int
test
mov
add
test
xchg
adc
int
push
test
jnp
pop
xor
pop
imulb
xor
sarb
push
icebp
or
sarl
inc
mov
adc
mov
into
mov
push
push
sbbb
ja
mov
mov
cmpsl
pop
mov
xor
ljmp
pop
or
inc
sub
mov
ret
and
fildll
inc
jl
stos
icebp
inc
iret
pop
ljmp
add
inc
test
ja
ljmp
xor
mov
or
clc
push
push
xchg
mov
stos
movsl
push
stos
adc
addr16
fidivs
jno
lds
mov
and
add
mov
push
xchg
cmp
dec
push
jle
pop
nop
cmp
out
fisttps
xchg
insl
mov
push
push
push
jge
cmp
insb
insl
jmp
ret
out
xlat
into
xor
das
addr16
pop
daa
cmc
inc
mov
mov
sarb
inc
fdivl
and
mov
aam
push
pop
xor
in
adc
adc
xor
or
fldlg2
or
js
lea
jecxz
es
cmovge
mov
dec
into
dec
xchg
jo
mov
xchg
mov
cld
lcall
loope
and
loope
mov
mov
dec
decl
sbb
test
orb
mov
shlb
paddw
test
xchg
push
scas
jp
ds
xlat
fdivrl
xchg
mov
iret
xchg
push
subb
js
or
stos
jmp
mov
addr16
out
int
pushf
inc
dec
xchg
sahf
jecxz
int3
jg
push
pop
hlt
or
shrl
mov
sahf
out
ja
cmp
nop
lahf
xchg
test
and
mov
stos
dec
xor
out
repz
test
cmp
mov
cmp
js
insl
and
adc
push
daa
rdpmc
mov
pop
cwtl
pusha
loope
dec
pop
cwtl
imul
xor
push
ja
mov
out
out
cmp
mov
movsb
bound
sbbb
push
cmp
pop
jo
mov
xor
or
adc
mov
lods
adc
sbb
ficoms
jo
and
dec
stc
pushf
mov
or
and
mov
push
movsl
jg
jp
pop
popa
adc
add
mov
cli
testl
mov
push
jns
pop
jae
or
push
out
push
icebp
imulb
js
cld
pop
loopne
or
stos
fnstenv
jmp
and
cmp
dec
add
stc
push
mov
popf
cmp
lret
adc
fidivrl
or
pusha
pop
pop
lret
mov
dec
loopne
cmp
dec
ss
imul
test
popa
cld
xor
repnz
stos
andl
mov
jmp
leave
xchg
adc
pop
or
lcall
mov
push
andb
xor
flds
cs
test
insb
xor
jne
dec
push
sbb
mov
pop
inc
cld
pushf
dec
daa
flds
cmp
enter
daa
lods
pop
push
sbb
daa
rcrb
push
mov
pop
test
je
stos
pop
mov
jle
sbb
jl
jne
pushf
scas
cwtl
cld
mov
lret
inc
enter
lret
pop
insb
dec
out
lods
test
push
mov
jns
movnti
in
xchg
dec
loope
bswap
or
adc
xchg
or
mov
lret
leave
and
mulb
sbb
pop
cmpsl
adc
jns
sub
pop
data16
clc
add
popa
pop
aam
mov
push
leave
mov
sar
jmp
mov
mov
fsubr
insl
mov
lahf
rolb
mov
loope
in
lods
cmpsl
cmp
dec
stos
sbb
jp
loop
popf
jae
or
lock
in
mov
mov
xorb
push
pop
into
pop
rcr
sub
leave
fdivr
in
mov
jecxz
add
dec
cld
or
xchg
cmp
in
iret
jae
loope
fisttps
leave
aas
test
jo
rcr
fdivl
dec
push
pop
cmp
test
rolb
adc
mov
loop
or
in
or
dec
xchg
je
adc
add
lods
addr16
or
xlat
push
jae
pushf
into
xor
outsl
pop
inc
stc
xchg
cmp
push
mov
push
movsb
loop
or
popf
jb
into
jno
loope
sub
daa
and
fisttpll
je
ss
mov
mov
sbb
sbb
push
arpl
outsl
xlat
mov
lock
lea
cltd
pusha
mov
dec
cmpsl
stos
popa
sub
mov
loop
ds
rep
testl
shll
cli
test
ficoml
lock
mov
ret
add
es
mulb
push
je
add
mov
push
mov
mov
sub
xorb
mov
ljmp
inc
push
pop
dec
aad
add
fs
push
jmp
xor
gs
pushf
addl
ljmp
in
in
je
or
add
lcall
inc
fidivl
stos
pop
sub
push
in
pop
cmc
and
inc
or
leave
mov
cld
out
push
call
jo
mov
ror
jb
xor
insl
scas
lock
push
cmpsl
xchg
push
pop
adc
imul
pop
jbe
es
dec
or
test
lds
adc
jecxz
int
jb
out
jbe
imul
pop
into
and
cwtl
data16
orl
xor
insl
dec
jecxz
cmpsl
jmp
mov
push
repnz
cwtl
push
jnp
lds
xlat
int3
mov
adc
sbb
add
lods
out
and
test
daa
enter
add
fldcw
add
imul
lahf
pop
imul
adc
daa
cwtl
nop
and
ficompl
xchg
pop
cmp
mov
cmp
push
and
mov
sti
jecxz
inc
pushf
ljmp
lods
mov
lret
cli
xor
or
and
cwtl
iret
test
inc
sbb
mov
jmp
mov
xchg
push
popa
orl
repz
fisubrs
sbb
jecxz
sbb
ds
jns
rcll
dec
pop
add
movsb
mov
xchg
and
pop
jg
cmp
fs
sbb
cmpsb
insl
add
dec
adc
mov
mov
enter
sub
mov
cli
mov
cmp
mov
in
jno
sbb
sbb
movsl
pushf
fs
xor
mov
and
shr
ret
in
cltd
xchg
rorb
lods
pop
dec
cmpsb
mov
jecxz
std
lcall
jmp
in
call
jne
mov
xor
cmp
mov
loopne
mov
les
or
stos
lcall
push
push
add
jecxz
fdivrs
int
in
shrl
iret
incl
popa
fcomps
mov
dec
add
jnp
cmp
dec
fists
mov
in
aad
int3
ret
pop
popf
push
add
sub
in
ret
dec
xor
adc
cmpsl
jl
and
fmull
jle
mov
repnz
aad
ss
xchg
aaa
fsubl
add
loope
cs
cld
leave
sbb
lahf
adc
cld
out
xchg
test
sti
popa
loopne
sar
inc
xchg
hlt
cmpsb
fxam
xchg
xlat
fstps
mov
mov
iret
sub
sub
out
sbb
movsb
lret
divb
sbb
jae
pop
adc
mov
clc
xor
push
outsl
jae
mov
mov
add
lea
scas
out
enter
arpl
mov
mov
sbb
mov
sbb
push
sbb
and
push
or
add
inc
loop
xchg
lret
mov
loop
pushf
xchg
faddp
xchg
cmpsl
scas
icebp
or
mov
iret
sbb
mov
ja
inc
mov
int
ffree
dec
add
and
inc
xchg
cmp
notl
inc
add
push
or
loop
cltd
data16
ja
ds
int
ss
fcmovne
sub
mov
xchg
dec
shr
xchg
adc
mov
lods
lret
cmp
jl
lods
mov
and
subl
scas
mov
arpl
sbb
fwait
loope
repnz
mov
fs
in
mov
iret
fldln2
push
mov
pop
inc
push
incl
or
push
in
stos
gs
in
mov
push
int
pop
adc
lods
cmc
cmp
dec
ss
pop
lret
aas
call
scas
mov
mov
xor
dec
scas
xor
rcrb
mov
lods
mov
out
mov
in
sub
add
push
negb
sub
mov
pop
xchg
lds
or
outsl
aam
fsub
inc
sub
pop
lret
ret
nop
rep
mov
int3
pop
and
addr16
mov
add
sub
ret
lea
lea
cld
jg
fsubl
and
adcl
fstps
int
jge
and
sub
or
iret
push
out
sub
sub
sub
pop
lret
sarb
adc
mov
bound
sub
pop
cmp
mov
sbb
adc
xchg
jmp
das
inc
inc
stos
jo
pop
outsl
das
ljmp
test
out
rcr
mov
mov
adc
mov
lcall
js
mov
lcall
add
adc
inc
sub
add
test
stos
ds
push
outsl
clc
add
testb
das
sahf
mov
pushl
sub
dec
cmp
sub
aaa
repz
xchg
arpl
inc
stc
orb
rorl
out
cmc
subb
fistpll
mov
dec
cmpsl
inc
into
push
push
jl
push
mov
inc
mov
test
sbb
lods
aad
cmp
pushl
dec
scas
in
sbbb
dec
sbb
test
in
xlat
fbstp
inc
mov
cli
mov
lock
std
decl
lahf
andps
pushf
mov
push
mov
cld
fwait
es
cmp
dec
hlt
insb
out
ja
push
hlt
dec
mov
or
sub
std
mov
inc
fwait
loop
into
mov
pop
xor
add
cmpsb
imul
rolb
mov
mov
ret
lods
add
cli
imul
bound
pop
mov
sub
dec
bound
sub
xor
ljmp
inc
jmp
jbe
xlat
mov
shrb
jbe
testl
mov
mov
pop
movsb
cltd
clc
pusha
cltd
push
sub
mov
mov
mov
clc
leave
jmp
mov
shl
subl
mov
roll
sarl
loop
inc
sbb
sub
pop
popf
jp
xchg
aad
jbe
push
daa
cmp
xor
xchg
xor
jp
cmp
cmp
add
cmc
pop
and
std
jmp
insl
cli
dec
mov
adcb
dec
dec
arpl
lahf
ljmp
push
xchg
incl
or
jp
lea
in
nop
add
xor
sub
popa
xlat
inc
mov
lcall
inc
pop
push
sarl
test
sbb
jne
or
and
dec
test
lahf
enter
mov
int3
iret
pop
mov
xor
fimull
mov
testl
xchg
sahf
mov
push
ret
pop
sbbb
cmp
adc
mov
dec
daa
or
test
sbbl
lods
cmp
xchg
out
dec
fdiv
jp
inc
cmp
push
dec
out
pop
jb
and
cmp
inc
call
xchg
mov
lcall
in
push
pop
jne
scas
outsb
mov
out
lea
xchg
out
sub
arpl
shrl
fdivl
out
fs
pusha
lock
push
std
xchg
sub
pop
sbb
lea
sbb
push
cwtl
mov
pop
xchg
mov
jb
sbb
insb
lods
shlb
inc
std
ret
js
je
loop
sub
mov
pop
mov
pop
pop
inc
scas
adc
xchg
mov
mov
mov
and
jbe
outsb
ss
into
mov
es
out
push
cli
xchg
sub
xchg
xchg
cld
jg
dec
rolb
sbb
mov
and
leave
cmc
loope
mov
add
add
mov
into
dec
mov
cmpsl
outsb
pop
cmp
pushf
fistpll
xchg
das
inc
inc
inc
test
cmp
jno
sub
pop
xor
cmp
adc
jne
push
lds
mov
xchg
push
jmp
fldenv
push
je
or
les
je
jge
xchg
jge
sub
xor
popf
cli
or
mov
mov
test
shrl
jmp
imul
mov
jnp
xchg
std
cmpsl
mov
or
jo
adc
cli
lods
inc
ljmp
in
add
inc
sbb
pop
clc
roll
xlat
das
xchg
mov
inc
rcrb
and
dec
xlat
cmp
in
in
lods
aaa
in
add
inc
xor
cmpsb
arpl
jnp
or
dec
adc
cmp
adc
lea
data16
sti
cmp
mov
mov
stos
and
call
out
xor
rorl
dec
mov
addl
sub
stc
push
sahf
pop
xchg
adc
int
mov
lret
add
push
dec
pop
xor
pop
fidivs
out
into
out
rcrb
lret
xchg
push
out
push
pop
les
mov
xor
mov
cmpl
jecxz
sub
inc
call
hlt
fwait
scas
outsb
xor
cli
mov
fdivl
ret
mov
or
jmp
imul
int3
daa
jae
xchg
repz
mov
inc
sub
xor
mov
pop
in
xlat
out
jae
jo
aaa
push
test
addr16
pushf
and
mov
arpl
test
lcall
push
push
hlt
xchg
or
inc
movsl
jo
adc
sbb
aas
movsl
ret
mov
loope
push
pusha
adc
and
imulb
push
outsb
js
fistpll
cmp
push
clc
dec
es
add
jno
push
testl
lods
pop
mov
cmp
hlt
pop
jb
sub
shrb
jge
dec
cmp
dec
or
jp
xchg
xchg
push
shll
and
lods
daa
subb
push
ss
adc
or
add
dec
outsl
sbb
push
cmpsl
movsl
jb
fsubrl
adc
and
stos
shl
xchg
push
ret
mov
icebp
jge
nop
mov
into
jb
dec
push
arpl
mov
rcrb
sub
cmp
xchg
lea
orb
adc
push
imul
nop
or
pop
xor
popa
jae
fwait
mov
aad
rolb
lods
sub
lcall
test
mov
fists
loopne
iret
xor
cld
test
cmp
daa
push
and
push
pop
rcrb
daa
sub
inc
nop
add
mov
and
and
and
xchg
jb
out
rcll
into
jne
in
pop
mov
and
aas
or
sub
aaa
adc
in
stos
or
outsl
sub
xor
nop
add
adc
cltd
js
subl
shl
in
mov
push
out
out
mov
lahf
jns
push
into
insb
movsb
ret
adc
dec
nop
lds
fsubrs
je
cmpsb
enter
cltd
fcmovu
sub
aam
nop
pop
call
jns
enter
push
inc
dec
test
push
into
mov
mov
or
test
jno
faddp
mov
lods
popf
test
shrl
push
add
xchg
clc
push
mov
mov
dec
sahf
pop
inc
fsubs
dec
push
and
mov
mov
lahf
in
or
push
out
inc
adc
pop
xchg
into
sbb
adc
fcoms
aam
inc
rorb
sbb
inc
pop
lods
add
sti
repz
jno
inc
inc
jb
push
inc
rclb
push
pushf
or
std
scas
test
mov
dec
mov
inc
mov
mov
or
sub
sbb
mov
or
les
cli
sbb
movl
call
cmp
inc
ficoms
dec
adc
cmpsl
jbe
mov
sub
or
mov
cmp
popf
or
out
mov
cmc
cmp
push
xor
and
or
in
inc
cmpsl
xchg
add
mov
mov
mov
cmp
mov
mov
jmp
mov
push
inc
adc
cld
rcr
push
adc
test
fisttpl
int
pop
bound
jae
je
mov
dec
sub
mov
mov
inc
stc
jge
xor
bound
lods
shll
daa
fcompl
xor
das
adc
cmp
jg
mov
inc
add
lock
jns
data16
xchg
jge
ja
dec
js
int3
lcall
test
subl
push
push
inc
dec
push
jne
stc
adc
fnstenv
nop
jns
jp
lea
pushf
jmp
roll
test
mov
test
mov
rol
adc
mov
test
test
inc
sbb
std
das
das
jmp
out
fcmove
scas
cmp
dec
in
or
push
sub
xchg
lods
pushf
out
mov
les
or
pop
daa
inc
adc
and
shrl
fmull
popf
xor
nop
push
or
stos
mov
or
adc
notl
mov
mov
dec
cli
and
movsb
pop
insl
cmpsb
jle
rcr
ljmp
or
xor
sub
xchg
xchg
fistpl
rcll
popf
mov
outsb
aaa
mov
cmp
mull
movsl
mov
cmp
mov
cmp
adc
int
test
jl
cwtl
pop
scas
jns
xor
or
xchg
test
and
lahf
cmc
and
dec
fbstp
inc
pop
mov
xchg
push
ds
outsl
push
stos
pop
xor
pop
add
cld
push
lock
adc
fs
and
push
adc
into
dec
xchg
push
and
jg
mov
ret
test
aas
or
adc
testl
adc
jmp
lods
lods
lret
cmpsl
jl
sub
pop
andl
add
sub
out
insl
in
pop
fiadds
test
stos
outsb
sahf
stos
push
lock
cmp
dec
arpl
sbb
sbb
cmp
xchg
push
lea
adc
ret
sti
pop
inc
sarb
pop
sbb
dec
fadds
mov
lock
lret
push
inc
mov
arpl
or
into
test
jb
xor
adc
or
and
std
shrb
dec
enter
push
dec
mov
arpl
lds
roll
aaa
push
call
mov
fimuls
aas
aad
mov
repz
cmp
sbb
or
mov
es
mov
and
inc
aaa
roll
clc
mov
es
sbb
sub
out
pop
ds
xchg
dec
daa
decl
fnstcw
cmp
dec
or
pop
adc
mov
xchg
shll
loop
std
xor
test
jbe
sbb
or
dec
lea
loopne
mull
add
push
sbb
int
adc
xor
int3
ss
jne
insl
sub
aad
dec
pop
pushf
inc
fs
and
hlt
fisttps
xchg
les
dec
stos
or
mov
dec
push
and
insb
lret
lret
adc
or
in
mov
sti
mov
inc
fldenv
xor
sub
push
xchg
mov
lock
fstpl
push
and
cwtl
sahf
hlt
stc
loopne
cmc
arpl
mov
lock
das
ret
clc
leave
pop
sub
cmpsb
cmp
mov
pushf
push
mov
mov
stos
pop
inc
mov
push
xchg
aas
out
pop
sub
jg
cmp
xchg
fadd
jne
xchg
sbb
xchg
and
sbb
fmull
icebp
int
into
xor
insb
repnz
dec
enter
xor
inc
or
mov
cs
fildll
sbb
xchg
into
cli
ret
lret
adcb
dec
test
inc
lret
or
arpl
loop
insl
lds
adc
xchg
inc
xchg
push
jbe
mov
or
rorl
loopne
fdivp
test
movsb
adc
jbe
push
aas
fs
sbb
push
aam
jle
or
pop
fildll
dec
add
loopne
sub
popa
mov
push
fmulp
jnp
xchg
lds
pop
es
or
jnp
inc
adc
ss
ret
popa
jne
cmp
mov
or
insl
stos
rcrl
ja
rclb
pop
shrb
or
adc
aas
adc
mov
jne
lea
jo
jl
xor
mov
mov
out
push
stc
pushf
mov
popf
inc
fwait
rolb
movsl
and
mov
flds
pop
xor
adc
je
ret
daa
outsb
call
or
enter
lret
movsb
je
iret
stos
push
fcompl
pop
enter
pop
adcl
jecxz
sub
adc
xor
pushf
sbb
jge
push
pop
pop
int3
lods
shrb
push
mov
and
add
or
and
add
dec
out
fiaddl
testl
mov
xor
int3
scas
sbb
dec
gs
xchg
nop
xor
xor
add
mov
js
stos
icebp
pushf
in
addr16
push
test
ljmp
jbe
or
adc
fstps
mov
jno
je
jns
inc
bound
push
xor
imul
into
mov
imul
das
xor
xchg
jb
ja
lahf
scas
xchg
add
cwtl
fadds
lret
adc
and
test
xchg
inc
sbb
mov
xchg
pop
int
pop
ds
fsubrs
or
iret
jb
imul
mov
mov
pop
mov
out
pop
sub
repnz
add
push
fnsave
scas
dec
sub
mov
mov
and
inc
neg
out
xchg
inc
jno
xor
mov
and
out
inc
push
imul
mov
fmuls
lret
push
xor
and
int
xor
sahf
mov
mov
lds
dec
outsb
imul
int
add
orl
jbe
xorl
dec
mov
xchg
inc
cld
pop
dec
pop
or
jns
dec
repnz
mov
jns
icebp
jno
js
or
subb
cmp
lock
add
sbbl
std
subl
and
test
je
push
lods
test
loop
push
mov
int
mov
mov
or
lock
leave
and
pinsrw
adc
dec
xchg
dec
lcall
dec
dec
call
loop
cmpsl
mov
icebp
lock
pop
sbb
dec
aaa
add
shll
mov
dec
sub
fldl
out
dec
in
insb
push
pop
dec
xchg
push
cli
test
dec
loope
fdivl
cmp
fscale
add
cmp
repnz
in
sub
jo
lcall
jb
mov
lock
lea
jo
ret
xor
add
es
insb
or
push
dec
outsb
call
cmp
repnz
cmp
popl
inc
out
cmpsb
out
or
mov
push
not
push
pop
out
andb
scas
and
stc
stos
js
sub
jmp
jmp
mov
mov
arpl
lds
movsb
dec
inc
add
cmpsb
test
pushf
cmpsl
mov
mov
add
test
or
loopne
test
into
sub
sti
dec
mov
stos
sbb
or
inc
cmp
or
outsb
xor
inc
pop
mov
jae
out
scas
or
mov
out
mov
cmp
mov
or
sarb
inc
addr16
jnp
mov
jnp
dec
ret
aas
das
jle
jne
js
repnz
add
fmuls
out
sti
xor
sbb
shr
lret
data16
fstpl
mov
std
enter
in
mov
stos
jg
or
in
pop
sbb
and
adc
cltd
xor
jnp
aam
cmp
add
data16
loope
sbb
lret
fsts
ret
jnp
mov
rorl
mov
loop
popf
addl
and
mov
add
push
sbb
adc
push
pop
adcl
movsb
adc
loope
fiadds
sub
mov
xor
jg
stc
pop
and
arpl
mov
push
cli
arpl
or
add
xchg
punpckhdq
xchg
adc
pop
and
jne
pop
mov
jecxz
cmp
aad
push
and
pop
mov
push
insl
int3
bound
mov
mov
jge
int3
sub
xor
les
dec
cmc
dec
dec
xorl
mov
sbb
jbe
pusha
sub
and
jge
cmp
inc
loop
rcll
mov
mov
scas
inc
push
fmul
fcomp
mov
insb
mov
mov
adc
dec
repnz
lahf
fimuls
arpl
imul
sarb
imul
push
xor
sti
lret
mov
pusha
cli
sarb
jns
sarb
loope
idiv
pop
jl
mov
xchg
adc
push
lahf
gs
lret
adc
sahf
xor
mov
stos
out
das
std
shl
pop
push
mov
jae
push
mov
out
gs
push
in
bound
movb
imul
mov
dec
mov
push
inc
stc
shlb
cmp
cmp
lea
mull
push
pop
jge
adc
pop
leave
shr
adc
mov
pop
sbb
loop
loope
jae
rcrl
xchg
sarl
jmp
repnz
hlt
sub
out
ror
push
jecxz
fnsave
out
or
mov
jg
mov
dec
or
sub
or
repz
pop
je
mul
dec
add
lds
cli
enter
hlt
mov
mov
xchg
cwtl
es
cmpxchg
sar
push
mov
push
out
and
adc
cmp
or
mov
mov
jns
roll
jae
repnz
icebp
xchg
xchg
aaa
jne
pusha
mov
sub
cwtl
pop
push
testb
xor
arpl
fadds
add
pushf
mov
pop
fisubs
push
adc
scas
xchg
xchg
xchg
sbb
and
fwait
mov
xor
jge
xchg
jge
add
add
dec
cmp
cmpsl
mov
repnz
ret
cmc
jmp
mov
cmpsb
xchg
aad
loop
fnstsw
insb
xor
adc
add
sub
out
adc
mov
arpl
cmpsl
sbb
jno
mov
call
inc
cmp
jle
mov
pop
inc
mov
mov
push
adcb
ss
push
clc
inc
mov
daa
cld
int
pop
xchg
sbb
pop
push
andb
xor
xor
mov
mov
hlt
icebp
icebp
mov
in
xor
daa
or
ljmp
and
cmp
sub
out
mov
outsb
call
dec
mov
or
mov
sbb
cltd
mov
subl
scas
movl
push
pop
sahf
fisubrl
push
xchg
pop
cs
fisubrl
jg
dec
icebp
sbb
push
mov
test
cld
nop
xchg
push
sub
push
jle
or
lods
mov
iret
add
add
and
jge
call
ret
mov
out
or
cli
push
movsb
jmp
adcb
dec
xor
xchg
imul
out
gs
add
js
das
jp
xchg
mov
sub
addr16
test
pop
iret
shll
and
bound
mov
jno
enter
and
or
or
mov
xlat
mov
stc
inc
or
dec
xor
movsl
dec
imul
fs
xchg
xchg
adc
cld
add
arpl
push
xor
inc
out
mov
test
or
pop
pop
js
sub
rorb
jmp
push
pmulhw
lcall
sbb
sub
push
scas
jp
rolb
and
popf
mov
in
sti
adc
add
lahf
cli
and
cmp
int
ss
aas
idiv
cmp
push
and
je
pop
mov
testb
and
lahf
aaa
mov
fstpl
inc
or
xchg
sub
mov
pop
imul
aaa
and
mov
pop
push
mov
es
jp
insl
sbb
adc
jnp
mov
std
and
mov
mov
movups
cld
add
jmp
pop
lcall
dec
sub
adc
pop
xchg
cmp
mov
sbb
mov
jb
pop
shr
mov
out
ja
imul
dec
push
iret
or
mov
roll
int
or
cmc
daa
ljmp
adc
call
cmp
pop
inc
sub
xchg
xchg
cmp
ja
stos
mov
ja
jo
cwtl
push
pop
ljmp
and
test
into
push
cmp
xor
jmp
outsl
sbb
cltd
adc
mov
inc
mov
pop
adc
mov
jbe
ja
and
jbe
mov
or
xchg
inc
xchg
xchg
mov
nop
imul
pop
sub
es
jle
pushf
xor
xchg
jo
or
fwait
mov
mov
pushf
imul
ja
dec
dec
inc
in
push
jle
mov
in
popf
add
sbb
loope
aaa
jp
clc
add
and
xchg
fisubs
cmp
clc
imul
das
push
add
mov
jmp
inc
inc
push
add
jns
repz
ret
jmp
or
fs
lahf
cmpsl
sub
inc
loope
inc
fcmove
lods
fisubrs
movsb
cmp
das
dec
iret
and
add
push
mov
out
inc
cmpsb
in
xor
repnz
jp
shl
mov
lods
xchg
insl
je
pushf
aas
loopne
in
or
and
inc
and
sub
outsl
jecxz
dec
sub
or
and
es
outsb
fisttps
daa
pop
movsb
mov
enter
in
imul
xor
mov
push
not
xchg
nop
sarb
add
call
add
cmp
imul
outsl
cmpsl
push
add
fsub
sbb
lea
aam
ljmp
leave
xor
dec
inc
fimuls
pop
ficompl
cmpsl
xor
repnz
flds
sbb
loope
pmaddwd
stos
or
or
adc
jnp
jae
jne
jo
out
xchg
lds
xchg
insb
cmp
lods
xor
fisubrl
lahf
mov
nop
inc
addr16
sub
mov
mov
jp
aaa
fildll
lcall
out
pop
pop
sbb
mov
addr16
and
pop
mov
and
arpl
sahf
repnz
leave
popf
dec
fisttpll
sti
adc
mov
or
mov
and
cltd
add
inc
xor
repnz
or
xlat
popf
mov
jbe
std
mov
popf
and
xchg
hlt
sub
test
or
jbe
adc
pop
dec
mov
sbb
sbb
cmpsl
and
jg
cmp
int3
in
sbbb
pop
dec
push
sub
jbe
popf
mov
divl
xor
mov
ss
sbb
xchg
mov
sti
add
xchg
inc
in
fs
sub
xor
outsb
pop
or
iret
int
mov
and
aaa
into
loop
gs
sbb
sub
add
fimull
or
xor
aad
imul
pop
jo
sub
sarl
notb
std
xorb
cmp
mov
adc
hlt
repz
lock
arpl
pushf
imul
mov
lods
ret
pop
and
int
push
imul
dec
loopne
cltd
inc
stos
sub
pop
insb
mov
and
push
into
inc
sbb
gs
jge
sbb
xchg
adc
dec
imul
cmp
arpl
push
arpl
dec
adc
test
shl
test
pop
sahf
rcrl
inc
xchg
pushf
cmpl
insb
cwtl
dec
movsb
sbb
jnp
mov
std
repnz
mov
pop
jne
xor
popf
cmp
out
adc
aam
or
fbstp
in
cli
xchg
pushf
dec
icebp
inc
inc
push
bound
aaa
test
fmulp
jns
mov
fwait
mov
lods
nop
cmp
jmp
push
cld
jmp
jecxz
and
shl
in
icebp
ss
pop
fcoms
fwait
mov
xlat
xchg
push
inc
xor
mov
pop
dec
and
mov
pop
xor
pop
add
jo
jp
dec
sahf
cmpsb
sbb
test
jecxz
mov
mov
jne
pop
dec
cld
adc
mov
imul
cmp
pop
bound
inc
fbstp
stos
pop
ljmp
nop
lods
aaa
mov
dec
push
iret
iret
push
pop
adc
cmp
ja
mov
out
jmp
mov
pop
out
out
sar
aas
xchg
in
xchg
gs
dec
inc
ss
es
jp
loopne
mov
lret
call
js
pop
out
mov
and
scas
pusha
xor
push
fimuls
cmp
add
popa
pop
test
sbb
das
mov
pop
mov
mov
dec
push
clc
nop
jle
sub
push
push
and
js
lea
and
pop
imull
jo
ds
adc
pop
in
inc
insl
cld
adc
cmp
mov
pop
inc
mov
sbb
mov
sub
add
cmp
nop
push
push
enter
jne
out
mov
sub
insl
notl
pop
int
cwtl
sahf
mov
xor
pop
fcmovnu
cld
les
push
pushf
dec
cmp
faddl
or
push
mov
stc
xchg
lret
call
lds
movsb
cmpsb
xor
adc
rcrl
cmp
lods
ret
outsb
in
push
sbb
dec
sub
jmp
das
bound
rorb
ficoml
enter
enter
addr16
jp
jle
call
dec
push
jl
out
lods
lcall
add
push
dec
xor
inc
rclb
rclb
addr16
cmp
dec
push
jmp
outsb
mov
jecxz
and
push
aam
out
adc
ds
ljmp
jo
insb
or
ret
bound
sbb
jae
xchg
jg
mov
mov
hlt
aaa
repz
mov
adc
push
mov
adc
gs
movsl
dec
repz
sub
insl
addw
lock
cmpsl
xor
fdivrl
mov
push
cmpsl
xchg
dec
mov
jl
sbb
lahf
lret
dec
cmp
js,pt
sti
sahf
cmpb
lret
dec
push
out
pop
idivl
push
daa
jg
dec
stos
fcmovnb
out
cmpsb
xchg
fidivrl
pop
stc
mov
jo
arpl
andl
loope
aam
jecxz
cmpsb
nop
cmp
cli
std
jg
ss
incl
enter
int
mov
xchg
int
mov
out
nop
and
or
fisubrl
ret
shr
and
xor
out
mov
inc
cmp
cmp
imul
aad
add
push
mov
leave
mov
cwtl
xchg
xchg
xchg
push
mov
sbbl
out
jl
arpl
and
mov
sarl
sbb
xor
jle
aam
push
cltd
shlb
repz
push
sbb
scas
jne
or
popa
sub
adc
loope
int
hlt
sub
dec
jb
cwtd
mov
cmp
fisubl
dec
and
or
dec
sub
sti
inc
jae
cmpsb
xchg
in
gs
lods
testb
xchg
add
sahf
shrl
mov
les
push
aam
mov
dec
or
mov
aas
xor
mov
mov
push
dec
sub
fisttpll
rol
int
mov
sub
stos
sbb
aaa
into
js
loop
sub
xchg
and
mov
or
lds
ret
jae
mov
leave
xchg
mov
dec
sar
inc
mov
mov
add
icebp
push
bnd
mov
push
pop
and
inc
and
imul
dec
sub
scas
cmp
clc
or
nop
adc
mov
idivl
jmp
mov
mov
xchg
add
imul
cmp
sbb
or
dec
in
fucomp
jne
push
mov
xchg
jp
in
mov
mov
xor
jmp
xchg
or
mov
sti
popf
xor
pop
in
call
dec
and
lock
sub
adc
scas
inc
lock
push
shrb
sub
addr16
xchg
cmp
fimull
add
xlat
mov
test
lods
mov
out
mov
pop
push
xorb
xorl
je
adc
je
and
clc
mov
xchg
addr16
push
mov
push
movsb
mov
cmpsb
and
push
aad
mov
mov
cmp
add
dec
mov
int3
sbb
gs
dec
ret
or
adc
cmc
xor
sarl
enter
xor
mov
or
addl
bndldx
push
test
lret
mov
add
add
gs
int
xchg
pop
inc
lods
or
dec
sbb
test
pusha
jnp
and
shlb
stos
mov
xchg
repnz
lcall
and
sub
xchg
pop
or
push
cmp
mov
xor
mov
mov
addb
cmp
popa
outsl
data16
and
int3
mov
int3
mov
push
in
jge
insb
gs
pop
into
pop
pop
ljmp
cmpsb
inc
lahf
add
decl
inc
cmp
pop
mov
test
add
addl
in
sbb
adc
daa
fwait
rorb
mov
insb
cli
push
sbb
cmp
mov
sahf
add
and
xchg
pop
loopne,pn
shl
movsl
js
out
bound
xchg
xchg
mov
cli
mov
shrb
imul
xchg
mov
cmpsl
in
mov
ret
and
clc
andb
mov
jg
cmp
mov
fsts
sbb
mov
dec
dec
scas
in
dec
fdivp
outsl
or
stos
add
mov
ss
rorb
and
into
fldenv
jns
push
adc
jl
xchg
push
daa
bound
int3
test
jns
ret
push
pop
fsubrl
pop
or
cmp
inc
into
xchg
add
xchg
pop
into
int
push
subl
add
adc
movsl
sbb
xchg
paddq
mov
rcrl
bound
mov
leave
xchg
inc
mov
sub
in
ficompl
stc
mov
mov
jo
mov
ds
adc
jo
mov
jae
mov
mov
ljmp
repz
fdivrs
add
pop
mov
jbe
rcl
jno
jl
jg
pop
cmp
movsl
xchg
enter
subb
movsb
sbb
jecxz
jbe
movsb
dec
movsb
stos
xlat
lret
lret
std
inc
leave
jnp
xor
lret
fs
cmpsl
mov
dec
sub
call
inc
mov
or
lcall
adc
lahf
mov
leave
jbe
mov
mov
sub
adc
out
fstl
ret
and
pop
sub
xchg
int3
cltd
lds
ja
scas
push
jge
outsl
repnz
popf
mov
pop
iret
jmp
stos
sbb
lods
sub
addb
inc
xor
inc
cld
mov
or
mov
jb
dec
jle
xchg
fisubs
inc
inc
or
pop
jle
fldl
mov
sub
jb
ja
or
mov
and
clc
dec
mov
add
int3
push
sti
mov
dec
gs
in
hlt
push
xor
add
adc
jmp
loope
jmp
and
stos
jbe
je
xchg
sbb
add
mov
lcall
mov
popf
lahf
inc
mov
xor
jns
inc
and
cmp
in
add
in
imul
xchg
mov
lret
or
sub
jmp
mov
and
and
pushf
pop
aaa
ljmp
repnz
mov
ficoml
stc
adc
pop
and
iret
xlat
xor
or
dec
sbb
shlb
daa
bound
fisubrl
cmp
aad
mov
in
dec
lret
sub
dec
xorb
call
and
pop
inc
xchg
push
adc
mov
rorl
sbb
inc
rorl
mov
pushf
sbb
and
push
inc
add
add
pop
leave
push
into
std
xchg
cmp
mov
aad
mov
inc
jnp
in
popf
or
add
test
jno
les
rolb
jg
mov
repz
lds
sub
stos
scas
inc
and
inc
or
cmp
cmpl
mov
mov
push
nop
sub
pop
fisubrl
aaa
dec
push
mov
ret
out
mov
push
pop
mov
mov
pop
adc
and
fisubrs
and
add
xchg
xchg
sbb
jge
or
pusha
xchg
popa
movb
repz
pusha
push
je
enter
cmp
xchg
push
push
pop
push
add
pushf
adc
fmuls
lret
lret
inc
or
mov
jg
repnz
fidivl
rep
sub
jno
or
ss
popf
stos
sub
pusha
stc
sub
aas
lods
mov
jg
xor
jle
cmp
jmp
insb
mov
test
popf
and
inc
inc
and
call
add
cs
jge
scas
add
dec
mov
and
or
test
xchg
mov
jle
mov
push
inc
adc
cs
jae
dec
in
outsl
in
add
jecxz
inc
insb
iret
pusha
cwtl
pop
mov
pop
cltd
aad
repnz
sub
jbe
xchg
inc
add
mov
and
loope
and
orb
mov
dec
jmp
add
jl
push
mov
in
or
insb
inc
sub
dec
inc
xchg
add
and
cmpsl
and
in
arpl
push
fldl
sbb
jg
iret
add
sbb
vsqrtpd
sbbb
std
push
test
sbb
cmpsl
das
jle
xchg
push
mov
push
mov
sbb
inc
mov
jg
mov
rclb
add
xlat
inc
mov
or
fnop
add
jecxz
adc
mov
aas
loop
jno
mov
sub
cmc
mov
cs
pop
xlat
xlat
add
arpl
dec
mov
lret
add
push
clc
dec
add
mov
sahf
sub
sub
ret
aad
std
jp
dec
cmp
mov
cmp
icebp
push
aad
jb
jp
imul
jp
cltd
inc
leave
xchg
in
mov
mov
mov
push
dec
int3
mov
sub
mov
loop
dec
mov
mov
pop
out
lea
dec
out
sub
mov
and
inc
in
adc
add
lea
xchg
cmpb
aad
xchg
mov
ficompl
iret
sbb
mov
jae
cli
mov
xor
cmpxchg
std
lret
pop
and
test
fidivrs
cli
sbb
data16
pop
in
pop
mov
adc
repnz
dec
imul
dec
sbb
cwtl
mov
jge
jl
jns
rclb
xchg
aam
or
stos
mov
imull
or
inc
cmp
sbb
xor
ss
lret
or
mov
scas
push
or
inc
stc
gs
xchg
xchg
add
hlt
xlat
cmpsl
add
sub
push
add
mov
into
addl
call
push
inc
out
out
insl
mov
outsl
cmp
leave
lock
xor
sub
addr16
and
add
mov
movsb
stc
mov
out
push
gs
lods
xor
cmp
stos
mov
loopne
jge
rolb
inc
mov
cwtl
mov
dec
mov
ja
mov
cwtl
pop
mov
mov
or
in
xchg
lds
ud2
mov
xchg
imul
arpl
or
mov
push
shll
mov
pop
jg
cltd
xchg
mov
imul
inc
in
and
inc
stos
pusha
xchg
repz
cmp
inc
int3
imul
repz
mov
scas
push
mov
mov
repnz
data16
addr16
pop
ret
xchg
adc
push
fdivs
xor
call
int3
xor
mov
lcall
test
and
mov
aam
shll
arpl
mov
ror
rol
lahf
sub
xor
pop
std
jmp
roll
fistps
mov
inc
test
mov
lods
sub
popl
push
add
pop
xchg
in
xchg
and
mov
mov
sub
sahf
out
sbb
jne
jnp
pop
ret
mov
movsb
sub
int3
add
dec
push
jnp
add
cmp
fnstsw
cmp
mov
in
cld
test
movsb
cmp
arpl
mov
outsl
into
sub
add
bound
pushf
test
sub
cmp
pop
std
sbb
fidivrl
rolb
mov
inc
cmc
rolb
inc
xchg
ret
out
xor
adc
add
bound
push
xchg
or
pop
or
push
out
cmp
mov
lods
or
into
in
aas
repnz
ljmp
and
rcll
outsl
es
shrl
and
xor
jecxz
hlt
push
or
xchg
jmp
jno
dec
lock
out
loopne
cmpsl
sub
cmp
pop
inc
push
jge
mov
add
push
fwait
mov
pop
scas
icebp
clc
pop
incb
ret
cld
ja
mov
addr16
and
and
rcr
test
mov
lock
cltd
imul
ret
popa
nop
mov
xchg
aas
out
mov
outsb
in
ret
mov
icebp
cld
mov
rorb
pushf
xchg
jnp
fidivl
rcll
pusha
mov
mov
out
loopne
shrl
xchg
out
adc
iret
xor
sbb
dec
mov
in
icebp
in
push
fnstsw
xchg
dec
int3
stos
sub
fs
xchg
test
add
dec
mov
cli
dec
repz
xor
mov
ljmp
test
bound
add
out
sbb
dec
sbb
xchg
mov
mov
movsb
pop
ds
cmpl
mov
xor
xor
and
fwait
mov
jne
cltd
add
mov
push
hlt
xchg
test
pop
adc
cmc
push
in
clc
jns
popf
cmpsb
cmp
fisttpll
push
rcrb
movsl
inc
mov
call
add
cmpsl
mov
je
bnd
cmp
sbb
inc
inc
cmpb
dec
pop
in
mov
add
mov
ret
xor
mov
fldln2
adc
sbbl
add
inc
mov
imul
jg
dec
push
xchg
cmp
and
jge
xchg
cmp
push
dec
and
pop
pop
mov
cmp
push
mov
xchg
push
mov
lock
inc
lods
cmp
mov
xor
int
in
adc
aaa
jae
cld
mov
push
mov
pop
sbb
lds
loop
jg
ja
popa
addr16
stc
bnd
and
add
in
xchg
int
inc
push
das
lods
pushf
imul
cmc
ret
xchg
push
loopne
pop
lret
ret
cmc
pop
addr16
cwtl
sbb
add
bound
jle
test
dec
lcall
cmpsb
es
idivb
inc
std
sbb
aas
cmp
sbb
dec
xorl
out
adc
dec
fsts
dec
cmpb
xchg
sbb
mov
test
out
pop
aas
decb
jmp
dec
inc
push
out
push
mov
ret
cmp
into
outsb
loop
sbb
cmp
shl
pop
xor
adc
add
jo
inc
xor
mov
scas
mov
stos
and
or
daa
hlt
push
into
sub
or
out
adc
push
in
xbegin
fidivrl
or
sbb
xchg
add
xchg
call
lret
loop
sti
dec
jl
int3
sbb
sarl
xchg
dec
pusha
and
popa
arpl
mov
pop
mov
sub
jae
cmc
xchg
fadds
mov
sbb
iret
scas
ss
and
fwait
push
inc
pop
in
mov
fistl
jle
dec
bound
push
or
pop
cmp
push
outsb
ljmp
or
les
xchg
fcmovb
insl
data16
or
idivb
in
out
mov
insb
inc
subb
fisubl
fidivl
xchg
fwait
aaa
add
addr16
scas
rcr
cmp
jge
sub
cld
xchg
pop
dec
test
shll
imull
cmp
or
push
sub
mov
imul
cmp
movsl
cmp
mov
xchg
add
ljmp
cwtl
adc
mov
sbb
and
inc
out
and
repnz
mov
adc
mov
push
xchg
xchg
dec
and
repz
xchg
ja
mov
cmpsb
jbe
pop
es
gs
fucomip
lock
dec
cwtl
je
int
das
sub
add
shlb
xchg
adc
shll
mov
popf
rol
icebp
in
jae
add
loopne
mov
fsubr
pop
sbb
adc
dec
adc
mov
arpl
test
sub
aad
mov
xchg
mov
out
ja
pop
js
dec
ja
jmp
fidivs
lret
sub
pop
fs
jns
fcompl
pusha
in
push
icebp
inc
fabs
inc
andl
in
pushf
call
xorl
jg
cmp
mov
addr16
and
in
in
fists
sub
jg
fisttpll
pop
loop
pop
mov
sbb
stos
sbb
or
lods
add
fistpll
or
insb
sub
xor
cmpsb
mov
ffreep
inc
es
imul
lock
mov
and
cld
fs
and
frstor
sub
jecxz
sub
movsb
fcmovne
stc
dec
xchg
repnz
loopne
sbb
test
vmread
inc
xchg
mov
lds
std
movsl
dec
xchg
fisttpl
adc
xbegin
sub
sahf
mov
and
inc
mov
fistpll
incb
mov
js
in
cmp
out
mov
inc
insl
cld
imul
mov
push
sbb
rcrb
cmp
cld
xor
arpl
mov
insl
xchg
inc
dec
xchg
test
mov
in
adc
sub
pop
dec
lahf
out
mov
test
hlt
fsubrs
dec
xor
ljmp
push
call
iret
xchg
fidivrs
cld
out
loop
les
jge
dec
stos
imul
pop
leave
jno
aaa
dec
mov
pop
movsb
jne
cmp
pop
ret
or
std
hlt
fsubr
mov
dec
scas
jp
scas
cmp
mov
or
sub
jne
daa
and
lock
add
je
or
xor
mov
mov
push
int
out
mov
lret
mov
adc
push
aas
mov
mov
pslld
adcl
sbb
inc
mov
pop
pop
mov
mov
sbb
ds
or
mov
jnp
call
daa
sub
insb
adc
lret
cltd
mov
jp
data16
pushf
jnp
aas
rolb
into
xchg
dec
andb
decl
daa
ja
test
insl
clc
in
or
mov
sbb
push
scas
pusha
push
lret
mov
push
pop
mov
fildll
sub
adc
pop
or
dec
sub
ret
mov
sub
sbb
sti
fwait
lds
pop
or
sarl
sahf
add
or
push
daa
jo
mov
rcrl
add
inc
push
pusha
fnstsw
je
push
into
test
or
call
data16
daa
lret
lret
sbb
fmuls
add
xor
out
xchg
int
mov
jae
xor
and
and
aam
cmpsl
enter
and
xchg
add
in
outsl
mov
popf
ds
lods
mov
xchg
mov
cs
cltd
fwait
xor
jnp
lcall
testb
repz
sti
outsl
sbb
aaa
aaa
jge
mov
push
mov
mov
das
mov
das
push
test
push
lcall
and
test
aam
sub
cmp
push
insl
push
outsb
jecxz
cs
notb
jg
sbb
dec
adc
jno
int
fcoms
xor
dec
jg
mov
cwtl
xchg
ret
in
int
fnsave
psrad
inc
imull
icebp
cmc
ret
inc
andb
and
or
dec
ret
adc
out
ljmp
or
xchg
subb
aas
or
repz
aas
in
xchg
mov
xor
xor
mulb
inc
pop
sub
pop
aad
lods
dec
sub
pushf
rolb
aas
add
lock
jmp
imul
push
jne
dec
rolb
hlt
mov
jge
popa
imul
mov
lods
not
and
lods
test
xor
mov
push
popa
aad
xchg
jle
dec
leave
mov
push
cmp
mov
xchg
sbb
or
sbb
fwait
test
add
fnstsw
jnp
add
fldl
push
sbb
fidivs
pop
cmp
inc
sbb
mov
cli
cmp
or
sub
sarl
cmp
jne
inc
pusha
int
faddl
iret
pop
xor
mov
cmp
rcr
dec
mov
adc
repz
pop
push
test
pop
pusha
dec
jg
xor
mov
adc
pop
and
lods
cmp
jbe
xchg
fistps
xor
adc
mov
and
add
inc
mov
cmpsb
pushf
sbb
cs
add
mov
andl
test
pop
or
fldenv
mov
pushf
or
scas
cli
push
fldenv
push
push
mov
cltd
inc
adc
inc
loope
mov
add
in
cmp
shlb
ror
inc
jecxz
popf
push
test
ss
sbb
rcrb
outsl
sbb
mov
push
or
decb
cmpl
mov
out
sbb
mov
xor
lods
inc
and
loop
out
hlt
dec
mov
shlb
push
enter
adc
cltd
mov
dec
inc
call
jae
mov
dec
adc
stos
mov
ficoms
addr16
fimull
mov
push
lar
fwait
mov
push
add
xchg
cmpsl
push
xor
jbe
add
hlt
les
push
aaa
or
inc
xor
pop
mov
mov
imul
adc
cmpsl
push
test
jg
movsb
lods
roll
push
mov
sbb
lods
arpl
aas
in
out
mov
sub
dec
int
ret
xor
mov
out
adc
mov
aam
xchg
adc
popf
jae
gs
dec
sub
inc
sbb
xchg
xor
xor
inc
or
movsl
rolb
jbe
inc
call
repnz
arpl
pusha
aam
mov
outsl
int
cmpsb
nop
xchg
pop
divb
or
pop
out
movsb
and
loop
fcmovnu
rolb
aam
test
xchg
jl
sbb
int3
xchg
mov
mov
add
popf
xchg
stos
add
dec
fs
push
adc
and
lcall
pop
xchg
stos
mov
pop
xor
nop
call
lea
jg
mov
or
inc
sbb
push
sbb
xchg
in
xchg
cmc
or
movb
subl
jb
adc
test
enter
jmp
fwait
aam
add
mov
out
push
xor
aas
xchg
mov
jns
xchg
cmp
cmpsb
arpl
inc
data16
cmp
js
sbb
repnz
inc
outsb
fisttpll
loop
cs
out
push
clc
mov
rol
pop
xor
push
ljmp
jnp
mov
and
inc
add
cmpsb
jb,pt
and
cmp
into
xchg
cmp
and
lods
repnz
insl
shll
sbb
jb
dec
xor
mov
dec
mov
add
add
jns
add
add
rcrb
insl
in
fisttpl
push
adc
orb
xchg
push
bound
mov
insb
mov
or
xchg
jp
inc
cld
ds
repz
stos
xor
scas
add
cmpsb
movsb
jp
sbb
movsb
cmp
xchg
popf
adc
jbe
dec
or
mov
in
shl
inc
jle
cmpsl
cmpsl
enter
js
cmc
jae
ds
jp
sub
pop
repnz
cmp
arpl
jmp
lock
or
jo
adc
and
ret
xchg
inc
push
mov
lds
test
mov
fcomi
adc
mov
push
and
sbb
push
xor
es
adc
jmp
sub
lds
mov
xchg
je
jno
push
cmp
leave
enter
mov
nop
inc
or
mov
scas
sub
test
push
push
push
lcall
stos
push
cmp
inc
add
inc
lahf
and
inc
shlb
sub
hlt
hlt
xor
outsl
sub
loopne
into
loop
nop
fwait
xchg
lods
es
out
push
push
cltd
xchg
xor
pop
lds
xchg
cltd
xor
adc
fdivr
inc
mov
loop
mov
out
dec
push
cmp
add
pushf
and
inc
jb
loope
xor
nop
dec
out
mov
and
repnz
mov
leave
sbb
or
pop
mov
fcoml
jg
hlt
xchg
rclb
pop
add
pusha
cmp
std
cmp
flds
xchg
mov
cs
xor
setns
into
xorb
repz
outsl
push
add
mov
das
jecxz
mov
or
mov
sarl
lret
fdivrl
inc
add
fiadds
es
cld
test
ds
int
clc
jae
imul
loope
scas
aam
xchg
and
mov
jb
mov
cmpsl
jl
dec
ficoml
pop
idivl
cmpsl
cld
push
push
arpl
mov
lret
pop
push
pop
stos
lret
jae
aas
jle
mov
lods
xchg
test
fdivl
sbb
or
int3
fs
rorb
mov
and
push
lock
inc
aaa
mov
xchg
pop
xchg
sbb
mov
lock
mov
icebp
cwtl
push
data16
outsb
fiaddl
lods
out
imul
push
push
insl
test
xchg
push
faddl
in
jno
and
popf
inc
inc
icebp
or
xchg
rcl
push
ret
daa
mov
es
mov
jne
test
lret
jne
hlt
mov
daa
mov
pop
sub
push
push
out
enter
popa
xchg
ljmp
mov
push
jnp
js
mov
push
lret
imul
insb
or
push
jo
push
push
aaa
mov
and
fldt
andl
lahf
jp
cli
lods
pop
xchg
stos
pop
les
int
cwtl
xor
mov
std
divb
jecxz
pop
std
cld
push
aas
movsb
fidivl
xchg
andps
bound
add
outsl
push
out
jge
sub
mov
push
call
lds
mov
popf
jno
in
lods
sub
ret
mov
mov
lret
jl
sbb
push
mov
pop
jno
roll
shlb
cs
mov
mov
pop
out
scas
pop
and
mov
jb
sti
xchg
pop
fcomi
dec
and
jb
sub
cmpsb
mov
xchg
int3
aas
int
adc
or
std
out
outsb
sbb
aad
mov
sub
jmp
add
sub
inc
mov
sti
sbb
fldcw
enter
jecxz
cmp
xchg
shrl
loope
ret
insl
outsl
shll
pop
add
xchg
xor
leave
push
cld
jne
pushf
dec
lret
fdivrl
mov
jnp
lahf
cmp
mov
dec
or
push
and
loopne
xchg
cld
shlb
loop
dec
lahf
add
insb
pop
ja
xor
xchg
jg
inc
stc
mov
or
ret
out
sub
mov
out
lods
or
je
imul
shll
cltd
pop
cmp
mov
insl
iret
jg
push
mov
adc
out
sahf
jp
sbb
mov
xor
in
inc
jns
sbb
push
lds
and
jmp
or
sbb
rcrb
xor
sub
pop
sbb
push
rcrb
into
fistpll
xor
or
or
xchg
in
popf
cltd
pop
sarl
inc
mov
and
mov
push
inc
xor
shlb
dec
xchg
xchg
push
push
or
sub
pop
jae
daa
push
js
xorl
sub
jmp
or
rorb
out
or
fwait
mov
jmp
mov
mov
xchg
jecxz
sub
rol
mov
jecxz
lret
inc
xor
sbb
push
daa
cmp
pushf
inc
out
mov
push
stos
xor
xor
push
xchg
jp
pushf
inc
xor
cs
push
pop
dec
pop
or
popfw
push
sub
es
repnz
inc
mov
das
arpl
inc
pop
divb
mov
mov
push
insb
xor
xchg
and
push
cmp
mov
popf
aas
mov
mov
pop
or
insb
clc
std
push
stc
jbe
ret
fcmovnbe
idivl
fnstenv
add
push
adc
xchg
mulb
cmp
pusha
sub
jbe
and
inc
je
pushf
dec
rcr
or
scas
xchg
test
jg
jge
loopne
frstor
push
sahf
sub
call
int3
shrl
lret
rcll
addl
lahf
dec
push
xor
jae
adc
xchg
add
jbe
fs
scas
shll
cmpsb
testb
loop
xchg
mov
in
jno
leave
sub
pop
push
and
mov
aaa
jne
jmp
int
inc
bound
out
out
mov
jge
movsb
mov
popf
andb
das
and
mov
lahf
in
lret
cld
adc
push
dec
dec
xchg
xor
sbb
push
pcmpgtd
vmovhpd
mov
xor
pop
outsl
adc
pusha
jp
cmp
jle
fsubr
popa
lock
in
xchg
out
jo
or
out
rorb
test
xorl
lock
xor
ss
sub
data16
imul
sbb
mov
rol
divl
add
call
stos
mov
mov
loope
adc
inc
ret
test
push
loopne
dec
mov
dec
adcb
mov
lret
mov
lods
sti
add
pop
sbb
lock
xlat
test
xchg
xor
or
loop
cs
push
sub
mov
mov
pop
mov
sahf
cld
in
mov
stc
mov
call
insb
fisubs
es
jae
rcrb
push
sub
vcvtsi2sdl
fdivl
mov
mov
adc
nop
xor
es
popf
pop
rclb
xchg
xor
pop
jne
cmp
push
in
mov
cmp
in
out
add
test
pop
stos
int3
int3
sbb
sti
add
mov
push
mov
push
push
subb
push
lahf
icebp
fadds
mov
stos
lea
addr16
popa
push
movsl
xor
or
int
adc
sbbl
lahf
es
push
jns
xchg
popa
in
mov
insb
orb
outsb
xchg
inc
cwtl
jns
mov
add
cmp
shll
mov
push
lcall
ret
loopne
and
shlb
fnstsw
js
out
push
xor
and
rcr
mov
mov
aaa
fwait
call
jnp
lcall
push
dec
insb
repnz
aas
jmp
popa
inc
xchg
xchg
je
sub
sbb
mov
sti
push
dec
repz
sbb
inc
adc
stc
push
enter
test
and
es
movsb
jp
in
andb
push
sar
xor
dec
mov
outsb
jmp
daa
pop
mov
and
addr16
stos
cmp
daa
jge
or
lea
and
pop
cmp
mov
mov
inc
fisttpll
mov
xor
repnz
pop
sbb
jp
shll
adc
popa
mov
lds
and
call
jo
sahf
mov
lret
pop
enter
pop
xchg
fidivl
sub
out
pop
push
mov
mov
dec
mov
bound
add
aam
addr16
lcall
xchg
outsb
xchg
test
sbb
xchg
xchg
sti
xchg
je
dec
mov
push
push
xor
mov
and
add
popf
xor
inc
xor
sahf
jle
mov
add
sub
dec
cmp
bound
cmpsb
inc
sti
movl
jnp
sarb
push
mov
sbb
jecxz
pushf
lahf
stos
scas
sbb
cmp
xor
out
call
mov
dec
mov
fidivl
fstl
das
out
push
inc
je
loope
imul
push
pop
dec
lret
clc
imul
sbb
mov
test
cmp
push
ds
mov
and
pop
adc
or
mov
jle
sahf
scas
jns
pusha
mov
out
mov
out
jge
cwtd
call
xor
sbb
in
cmpsl
ljmp
enter
sahf
adc
lcall
movsb
lods
mov
lret
jnp
sahf
mov
push
xchg
add
cs
addb
or
movsb
outsb
push
mov
in
insb
lea
stc
xchg
cli
and
push
dec
ficoms
inc
mov
mov
lcall
sbb
mov
lds
jmp
rolb
and
cmp
adc
pop
out
adc
mov
outsl
add
call
out
lds
jge
int3
mov
xor
xchg
int3
sub
movsb
cmp
push
aad
xor
into
stos
outsb
pusha
mov
adc
jle
aad
cmp
ret
pop
mov
fbld
enter
or
cld
jl
inc
flds
mov
mov
push
lock
mov
jle
jnp
sbbl
sub
push
push
adc
fistpll
pushf
fwait
lcall
inc
inc
fsubrl
inc
push
loopne
sbb
jge
cmp
lcall
jge
iret
mov
adc
mov
ja
adc
ret
mov
pop
das
push
stc
shll
mov
imul
inc
mov
les
mov
icebp
les
cmp
xor
or
loop
dec
loopne
or
jae
sbb
adc
lret
mov
addb
sbb
adc
je
or
ret
lret
mov
mov
enter
push
std
and
cmpsl
dec
mov
adc
push
aas
orl
daa
bound
xlat
out
rol
jne
in
inc
jbe
jbe
nop
into
enter
mov
add
cmpsb
lods
xchg
pop
inc
dec
add
dec
cltd
aaa
jl
into
fsubrp
xchg
xchg
or
arpl
adc
bound
push
xor
dec
push
imul
pop
sub
inc
cmp
sahf
leave
push
rolb
add
jae
mov
popa
sbb
into
lret
cmc
or
loope
clc
fnstcw
xor
loope
mov
imul
xor
mov
mov
pop
pop
inc
mov
xchg
sbb
sub
ljmp
mov
push
imul
mov
pop
inc
xor
pop
pop
push
inc
rorl
fsts
ficomps
mov
bound
push
ds
mov
mov
and
insb
jnp
and
xor
cmpsl
dec
pop
jle
adc
inc
in
mov
sbb
pushf
fwait
insb
jae
adc
in
in
sub
jp
push
fdivr
push
mov
pop
daa
push
xor
data16
pop
insl
jne
add
push
push
adcb
mov
mov
test
in
sub
cmpsl
out
test
inc
adc
test
int
inc
mov
jno
pop
mov
cltd
xchg
es
lods
lds
ljmp
dec
ret
andl
hlt
inc
adc
iret
repnz
jge
inc
jbe
ss
pop
add
test
mov
and
xchg
add
mov
sub
jge
call
fcomps
adc
popa
push
inc
or
xchg
xchg
addr16
sti
adc
inc
xchg
aas
inc
scas
jns
scas
lahf
and
int3
rcrb
scas
fmuls
xor
xor
mov
hlt
outsb
rcrb
cmp
and
jg
adc
movsl
xchg
and
popf
hlt
cmpsl
xchg
sub
xor
js
sbb
jno
iret
sub
leave
lcall
pop
jno
lods
inc
jne
adc
sarb
add
stc
xor
inc
jae,pn
testl
jnp
lods
orb
sahf
pusha
and
fldenv
push
adc
mov
pop
leave
push
lods
xor
scas
or
bound
incl
ror
lret
daa
cmp
adc
adc
std
in
jnp
push
lcall
ficoml
jge
scas
int
dec
mov
mov
aad
notb
lret
scas
repz
mov
stos
lods
iret
movsl
imul
stos
or
jbe
adc
stc
sub
clc
and
std
lcall
sbbb
sub
fsubrl
xchg
icebp
push
push
mov
inc
pop
push
clc
fdivrp
jmp
fistl
or
mov
jo
ficomps
cmpsl
stos
push
ljmp
test
int
fadd
js
xor
cmpsl
push
mov
xchg
jo
ds
rorl
test
repz
cmp
jle
sbb
xlat
fs
mov
mov
or
add
push
int3
mov
push
push
repnz
xor
inc
sti
and
or
mov
mov
and
stc
mov
clc
cld
cld
mov
fwait
pop
lock
mov
xlat
jg
popf
xor
out
fs
xchg
lret
pop
js
test
les
cmc
xchg
jnp
jp
pop
stc
mov
xchg
xor
cmp
dec
xchg
scas
add
pop
mov
fwait
cwtl
cmpsl
adc
cmp
js
sti
pop
jmp
push
push
into
lods
negl
push
push
ficompl
fidivrs
out
sub
das
dec
das
lcall
xor
mov
jno
pop
xchg
xchg
cltd
mov
pop
sbb
nop
cmp
or
call
mov
sbb
add
adc
dec
cmp
or
fisttpl
push
mov
inc
sbb
cmp
sti
cmp
rorb
sbb
in
add
and
popa
lcall
fdivrl
and
jns
fadd
xor
or
inc
in
cmp
rolb
add
mov
add
or
cmp
out
int3
adc
lods
into
test
hlt
lods
cmp
popa
fnstsw
movsl
sub
or
pop
mov
xor
loopne
int3
xchg
fs
aas
sbb
dec
cmpsb
movsb
lock
sub
pusha
jmp
pop
mov
mov
pop
es
cs
push
lcall
out
jle
mov
or
ds
aad
sahf
mov
paddusb
lock
mov
xchg
xchg
in
cld
xchg
aas
push
aam
mov
dec
in
adc
sbb
mov
int
popf
sbb
pop
data16
sub
pushf
test
cmc
cli
or
pop
pop
mov
pop
push
xchg
pop
loopne
stc
push
xor
je
pop
push
aaa
inc
jle
inc
jbe
insl
inc
adc
in
cli
add
add
mov
leave
dec
int
cli
jp
pop
fnstenv
test
icebp
fs
jae
inc
shl
push
mov
jmp
fstps
dec
hlt
into
fildl
repz
push
mov
out
in
jb
jb
clc
stos
mov
jmp
cmp
roll
adc
les
push
es
or
jmp
xchg
cmp
cmc
repnz
cmp
jmp
call
jne
or
jo
jns
addr16
lea
mov
negl
push
es
mov
dec
inc
daa
cmp
push
adc
idiv
push
jl
imul
leave
addr16
dec
push
jmp
mov
jp
sbb
std
jne
jge
fs
scas
sub
addr16
shrl
cmpsb
jne
in
pop
mov
xor
lds
mov
pop
adc
push
stos
dec
loopne
cmp
int
mov
loopne
push
or
sarb
fadd
andnps
repz
or
dec
xor
call
cltd
lock
sub
icebp
fistps
xchg
dec
dec
add
cmp
andl
stos
cmp
push
loop
cltd
push
pusha
pushf
mov
inc
mov
mov
cld
repnz
adc
dec
adc
sbb
lcall
shll
lea
insl
cmp
into
push
or
xor
das
pop
jg
mov
loop
jg
lahf
or
cmp
mov
sbb
mov
mov
add
dec
add
adc
xor
fldt
mov
pop
xchg
xor
iret
test
inc
mov
je
mov
sbb
mov
imul
push
lret
fnsave
xchg
mov
xlat
pop
and
rcl
pusha
das
adc
fxch
jnp
cwtl
inc
push
xchg
push
jle
jge
loopne
lods
lret
iret
mov
fnsave
jle
icebp
lret
mov
mov
mov
clc
sbb
insb
sbbb
ret
inc
stos
sub
gs
inc
addr16
jbe
aaa
fistl
lock
or
jo
add
int3
add
rolb
pop
push
icebp
mov
push
jae
pop
xchg
cmp
cmovg
mov
cwtl
xchg
rcl
shl
lcall
inc
dec
xor
movsl
nop
cmp
sahf
mov
adc
add
inc
cmp
push
push
xor
inc
push
push
jne
divb
cmp
add
int3
and
js
iret
push
adc
in
pop
mov
sbb
pop
fs
in
mov
inc
or
pop
push
xchg
adc
xor
std
rolb
inc
inc
clc
aad
jecxz
jno
in
test
je
xor
hlt
insb
dec
leave
fdiv
das
outsl
imul
sub
int
jle
test
inc
cmp
cwtl
test
mov
mov
es
and
cltd
fcom
fisttps
dec
ja
push
stos
ret
movsl
mov
jl
insl
inc
cmp
je
ds
leave
rclb
imul
negb
fs
mov
mov
rcr
inc
repz
inc
pop
pop
aaa
xor
pushf
xchg
cmpsl
push
scas
gs
test
out
shl
xchg
pop
addb
push
stc
add
pushf
jmp
and
mov
push
mov
jno
repnz
fnstenv
jecxz
dec
mov
mov
popf
out
push
lods
xlat
subb
inc
mov
xor
fwait
jno
stos
mov
sub
mov
cmpsl
dec
cmpxchg
and
inc
fildll
mov
outsb
sub
xlat
dec
and
aam
test
xor
out
cmp
xchg
nop
mov
mov
js
sbb
mov
fldcw
fstpl
dec
les
cltd
cmp
shl
push
sbb
xor
ja
cmp
mov
or
pop
push
hlt
add
inc
pop
fstps
mov
cmp
jge
push
or
arpl
das
inc
or
iret
sub
inc
and
int
mov
fdivrp
insl
rorb
mov
in
addl
imul
mov
scas
int
scas
scas
jp
xchg
add
cmp
lret
mov
sbb
or
xchg
fs
pop
xor
sbb
lock
lret
and
mov
ret
cltd
dec
mov
je
and
fs
jns
mov
shrb
push
rcrl
add
fwait
inc
push
in
stc
imul
orl
jl
adc
jno
aaa
addr16
push
jle
mov
adc
cmp
mov
jg
dec
nop
push
sbb
pop
push
add
ret
aad
negl
inc
out
mull
jge
and
or
xchg
sbb
mov
inc
cmc
pushf
xorb
xchg
xchg
insb
cmp
hlt
movsl
cld
inc
aaa
insl
and
sbb
mov
mov
push
xchg
push
push
orb
pushf
or
leave
and
aaa
lods
rcl
add
xchg
in
stc
test
adc
out
test
popa
inc
dec
sbb
iret
popf
dec
adc
enter
movsl
mov
mov
or
fldt
mov
repz
imul
movsb
or
test
and
add
xchg
push
jns
mov
inc
dec
inc
sbb
adc
imul
ljmp
pop
xor
enter
mov
xchg
pop
popa
clc
xchg
lds
pop
mov
xchg
aam
bound
bound
inc
and
test
jmp
aas
cs
dec
inc
push
jl
mov
stc
fistpll
mov
and
ret
dec
mov
scas
or
inc
mov
shll
stos
xlat
pop
cmc
and
adc
mov
repz
xchg
xchg
scas
push
test
mov
arpl
mov
rclb
xchg
fwait
and
sti
out
xchg
popl
xchg
out
cmp
and
jns
pop
insl
test
and
push
cld
aam
test
push
aad
fcoml
gs
cwtl
js
inc
jp
lock
dec
push
fmul
mov
andl
sbb
int
js
jmp
sahf
add
in
xor
lret
in
xchg
into
mov
jo
dec
cmp
dec
cmpb
insl
enter
lock
adc
jno
ret
mov
xor
push
xor
dec
sub
mov
inc
push
inc
mov
mov
mov
pushf
dec
cmp
mov
movsl
test
add
fiaddl
jo
out
mov
popa
inc
jbe
jno
xadd
int
or
jmp
push
adc
int
shrl
icebp
jne
inc
jge
xor
jne
lret
or
insb
mov
into
cmp
cld
dec
popf
xchg
sbb
ret
adc
imul
cmpb
movsb
addr16
and
rcll
fs
or
jnp
aaa
mov
jo
sub
pop
outsl
cld
and
xorl
mov
test
pop
mov
adc
and
scas
push
mov
fs
subl
sub
mov
cmpl
repz
aam
xor
and
sub
pop
repz
enter
push
rolb
or
add
cmp
cmc
inc
cmp
mov
pop
icebp
lock
clc
mov
ljmp
mov
xchg
out
sub
fldl2t
lods
mov
jmp
out
cs
sub
jmp
jae
testb
test
dec
loope
jb
inc
rolb
inc
dec
fmul
out
push
add
jl
clc
into
lods
dec
xchg
aam
jecxz
scas
xor
xchg
fsts
and
stc
adc
xor
loop
popa
and
fcomi
inc
sahf
stos
push
ret
loopne
adc
jnp
cmp
jle
add
in
add
repnz
push
adc
push
xorl
jp
addr16
mov
rclb
jns
mov
xchg
test
sub
outsl
into
imul
std
clc
sti
push
push
adc
in
cmpsl
inc
jg
sub
arpl
adc
add
call
inc
sub
mov
pop
jne
scas
popa
test
mov
movsb
dec
imul
loope
xor
fsubrp
inc
push
aas
jmp
or
out
adc
ljmp
test
jno
cltd
outsb
je
stos
jl
xchg
and
stos
xchg
adc
test
sbb
push
test
loope
ljmp
int3
sub
rorb
jl
popa
dec
enter
in
xchg
int
sbb
push
cld
or
lods
jecxz
inc
mov
inc
sbb
mov
cmp
pop
or
add
repz
dec
in
das
push
jge
xor
fiadds
vpcomb
and
jmp
sub
and
lahf
out
hlt
xor
xor
mov
loopne
push
insl
push
fildll
cltd
mov
jb
and
xchg
and
repz
in
gs
decb
outsl
aam
dec
lret
in
daa
lret
pusha
fisubrs
ljmp
pop
adc
xchg
cmp
pop
aaa
add
shll
aas
lcall
sbb
ss
pop
orb
cmp
xchg
scas
xor
jo
mov
lods
out
and
jae
fidivrl
roll
sbb
cmp
das
les
push
mov
call
lea
jmp
adc
insb
jnp
out
fs
sub
filds
aam
dec
cmp
mov
xchg
dec
arpl
pop
cmpsb
les
sbb
push
int3
clc
rcr
and
mov
adc
lock
popf
movsb
jns
jae
sub
sti
adc
xchg
sti
pop
inc
sbb
in
push
mov
sub
clc
aas
in
or
push
mov
adc
cmp
clc
fstpl
lea
add
cmp
xor
or
int3
mov
jmp
adc
inc
sub
aad
add
mov
fcmovbe
dec
add
sbb
ret
sub
xor
push
cwtl
in
adcb
add
testb
mov
mov
add
outsl
mov
mov
sbb
es
push
cmc
mov
lret
mov
xchg
or
call
std
jae
xor
pop
mov
and
inc
icebp
xchg
cmp
adc
aas
sub
shrb
js
mov
shrb
push
les
adc
lods
icebp
sbb
addl
cli
and
inc
ja
adc
inc
push
dec
stos
aad
inc
inc
cltd
pop
mov
pop
out
scas
and
or
adc
cmp
icebp
cltd
arpl
aad
mov
cmc
mov
jb
jmp
mov
fcomps
sub
xor
mov
and
lods
lret
inc
sbb
loope
xchg
mov
fs
cs
pop
in
aam
out
xchg
cmpsl
sbb
leave
out
push
adc
cmpsb
rorb
jae
ljmp
sbb
pop
stc
jp
addr16
xor
in
aam
clc
jo
leave
xor
adc
adc
loop
adc
lods
add
cld
ljmp
inc
push
test
pop
imul
sbb
scas
daa
push
jg
scas
sub
repz
and
insb
sub
decl
add
mov
aas
cmp
or
jge
test
pop
or
negl
cs
ret
push
cmc
mov
sarb
repnz
xchg
in
inc
inc
loopne
push
xchg
idivl
popa
out
cld
arpl
hlt
jmp
mov
out
popa
ficoml
incl
inc
jmp
push
movups
flds
shlb
jecxz
stos
rcr
insl
xlat
outsl
mov
iret
movsb
pushf
nop
xor
cmp
cmpb
outsl
inc
scas
stc
sbb
cmpsb
loopne
xchg
movsb
mov
aaa
testb
dec
sub
jno
test
in
std
out
xlat
out
aam
xor
xchg
sbb
mov
loopne
cmp
sub
xchg
fxch
test
mov
push
aam
icebp
add
sbb
jne
std
pop
sahf
lea
inc
mov
pop
rcrb
out
mov
cmp
bound
es
and
mov
pop
ds
int3
pop
xchg
outsl
nop
mov
add
test
inc
xchg
int
mov
clc
xor
stos
and
shl
std
dec
and
or
and
outsb
sub
jmp
loop
sub
aas
sub
enter
test
lea
add
sbb
and
or
xchg
rorl
mov
mov
das
out
movsb
out
add
addr16
shl
push
insb
stc
mov
pop
ror
jmp
or
test
and
es
cmpsb
or
es
pushf
andl
mov
js
xor
loop
dec
xor
sbb
xchg
pop
add
adc
jne
and
aad
xchg
dec
jg
pop
addb
and
xor
mov
mov
mov
cmp
sub
xor
cmp
push
cmp
cmp
inc
int
sbb
shrb
jg
je
and
mov
stos
ljmp
mov
scas
insb
int
and
outsl
mov
sbb
push
out
shlb
mov
js
movsl
dec
in
movsl
fs
int3
imul
push
fcoml
xorl
aad
dec
insl
shll
jg
mov
lods
or
mov
and
pusha
sarb
das
call
in
out
into
xchg
mov
jmp
push
pop
es
fcompl
popa
outsl
test
cmp
sti
dec
push
bound
inc
scas
sub
mov
outsl
in
iret
mov
add
cmp
push
inc
stos
insb
dec
imul
aam
pushf
pop
rclb
fsubrl
imul
jle
stos
clc
jg
out
xlat
jmp
rcll
test
ret
inc
pop
push
aad
stos
and
in
insb
shll
in
xchg
shlb
ret
int3
mov
mov
test
jno
lret
addr16
repnz
dec
sbb
sub
les
cmp
dec
iret
dec
push
mov
sub
je
pop
dec
arpl
jge
inc
pop
shlb
out
xchg
mov
or
or
mov
dec
mov
add
test
pop
mov
pop
inc
cwtl
ret
scas
lcall
and
ja
orl
mov
pop
nop
adc
xor
int
push
inc
xchg
jbe
and
je
stos
mov
dec
lret
xor
mov
loopne
fisubrl
ret
xor
mov
inc
pop
jg
test
or
stos
mov
push
adc
and
adc
cmp
sub
or
xlat
cmpb
movsb
repnz
push
sub
and
outsb
or
mov
into
jp
push
mov
rcrb
int
push
xchg
mov
out
lock
std
mov
iret
inc
add
jne
lds
fs
push
ljmp
sbb
rolb
scas
or
or
movsb
dec
loopne
popf
push
add
js
cmp
xor
movsl
sbb
enter
gs
sub
sahf
int
jnp
ficompl
sbb
lods
dec
cwtl
inc
test
dec
push
cld
dec
mov
pop
in
mov
push
shlb
mov
mov
pop
jb
rcll
mov
fsubs
inc
sub
cmp
stc
pop
sbb
insl
sub
scas
aas
or
and
push
outsb
mov
loopne
aas
inc
and
cmp
push
cmpsl
in
stos
mov
xchg
jp
cs
push
lahf
repnz
loopne
adcl
popa
test
and
jb
fnstcw
xor
das
push
mov
jmp
sbb
inc
push
sahf
scas
movsl
scas
aaa
hlt
in
pop
jno
xor
mov
daa
movsl
gs
das
cmp
add
in
outsb
or
js
lahf
add
iret
inc
les
repnz
clc
inc
scas
push
insl
mov
int
sub
fidivrs
out
mov
orl
stos
sbb
push
int
fbld
dec
mov
cmp
add
push
sbb
cwtl
lds
test
xlat
ret
dec
mov
repnz
adc
sub
xchg
cwtl
popf
scas
pushf
xlat
fdivrp
ret
jl
bound
mov
fnstenv
mov
or
adc
gs
shll
sbb
inc
sbb
push
rorl
gs
shrb
mov
das
xor
xchg
leave
mov
lcall
add
mov
in
xchg
push
sub
leave
std
aam
mov
out
adc
iret
jmp
ja
ss
jae
push
mov
sub
scas
adc
cmp
push
or
in
mov
or
and
push
fstl
nop
cmp
pop
push
cmc
xor
sub
mov
ror
xchg
call
mov
sbb
mov
movsl
pop
movsb
mov
adc
lea
xchg
out
or
pushf
xor
in
testl
mov
hlt
cmp
sarl
pop
pop
adc
xchg
imul
sub
inc
push
aaa
and
bound
add
dec
bound
push
and
or
inc
push
mov
test
pop
sbb
pusha
or
test
xor
jp
add
sub
popa
mov
mov
push
es
fs
shll
jecxz
lea
mov
es
xor
test
sbb
in
lahf
jle
push
dec
xchg
push
cltd
mov
popa
cwtl
or
out
stos
clc
lods
dec
pop
mov
arpl
pop
scas
push
fxch
pusha
ret
sub
popa
psubsb
push
and
inc
testb
shlb
pop
ja
insl
fisubrl
lahf
mov
and
add
rorb
sub
dec
sub
pop
and
jae
sbb
or
mov
test
or
in
fsubrl
add
mov
lods
jne
ret
dec
imul
mov
adc
lahf
lea
add
shrl
test
in
inc
aad
in
bound
jb
adc
mov
and
cli
test
pop
xor
leave
shll
push
scas
sub
cmpsb
xchg
cmp
test
dec
cmp
xchg
ja
movb
pop
insl
cmp
xlat
and
data16
in
xchg
mov
sbb
ret
stos
js
popa
dec
mov
cld
jnp
dec
pop
pusha
push
out
jmp
lods
or
xchg
aaa
cmpsl
xor
xchg
int3
imul
and
adc
dec
pop
in
adc
push
fcmovne
pop
sbb
or
push
addr16
pop
mov
imul
ret
jb
and
mov
mov
cmp
in
addl
mov
vmaxss
inc
cmp
stos
stc
sub
scas
test
outsb
inc
mov
push
mov
xor
inc
mov
pop
out
daa
cmp
sub
cmp
xchg
movsb
scas
shlb
mov
dec
mov
push
and
imul
dec
pop
enter
ja
scas
mov
pop
ror
fs
call
pop
mulb
adc
dec
orl
jbe
adc
push
pop
inc
popa
and
test
pushf
pushf
out
sub
clc
lea
or
adc
jns
adc
xchg
repnz
push
sub
loop
add
fldl
mov
sarl
lods
jge
out
cld
test
push
sahf
mov
cwtl
idivb
out
lret
pop
mov
xchg
lahf
fildll
mov
cli
sub
sbb
dec
jbe
pop
push
pop
out
shl
mov
fcmovnu
cmpsl
push
dec
roll
push
jne
sbb
inc
cmc
push
jbe
fstp
ljmp
dec
adc
adc
cmc
not
sub
jno
std
or
sub
movsb
int3
push
pusha
loopne
and
movsb
jb
sub
sahf
and
and
pop
or
push
push
rcll
or
arpl
push
jbe
xchg
fcoms
jae
out
fdivrp
xchg
shrl
cmpsl
mov
and
or
sub
fnstsw
rolb
mov
xlat
jg
pop
sbb
and
sbb
sbb
lods
adc
cmp
push
sub
inc
pusha
cmpsl
xchg
imul
add
cmp
insl
daa
imul
cwtl
pop
add
lahf
daa
or
sub
icebp
cmp
mov
add
cwtl
fildl
test
stos
pushf
out
sbb
das
add
jne
in
stos
mov
rolb
adc
sub
loop
dec
cltd
or
sub
out
mov
mov
mov
mov
lret
mov
mov
jecxz
cmpsl
nop
out
and
es
cmc
pop
mov
mov
sub
add
outsb
cmp
push
dec
arpl
out
add
ret
push
dec
dec
jecxz
mov
cmp
scas
mov
mov
inc
rcrb
mov
xlat
push
xor
sbb
inc
sub
cwtl
ss
cmp
repnz
fstpl
lock
arpl
fistpll
jae
mov
repz
add
xor
pop
inc
push
xor
or
movsl
lock
fdivl
mov
mov
cmp
mul
inc
rolb
fcomip
popa
divb
negb
pusha
out
lret
iret
fcoms
test
mov
scas
mov
dec
es
or
imul
shrl
in
shll
mov
rorl
es
cmp
pushf
xchg
decb
fs
es
xor
scas
out
popf
inc
sbb
lcall
pusha
orl
mov
cld
xor
mov
sub
xchg
pop
ss
lods
leave
push
or
mov
inc
cmp
adc
adc
jo
int
std
and
pop
ror
adc
push
mov
int
and
mov
add
xor
or
mov
mov
pop
cmp
fwait
into
sub
add
sbb
push
ljmpw
sbb
jno
mov
into
add
inc
mov
lahf
jp
dec
xchg
cld
push
and
mov
insl
popf
ss
cmp
mov
mov
mov
sbb
data16
pop
scas
adcl
lcall
icebp
aam
mov
hlt
mov
stos
aam
inc
sbb
aas
popf
push
sub
or
popa
ret
and
push
adc
dec
fcmovnbe
cmp
fidivl
sbb
int
mov
loopne
xchg
icebp
scas
lret
rcrl
ja
std
ret
orl
imul
cld
or
dec
bnd
mov
xchg
mov
jnp
ja
addl
jmp
lods
leave
call
gs
dec
scas
adc
loopne
lret
mov
and
push
idivb
and
in
rorl
xchg
xorl
pop
push
cmp
repz
cmp
icebp
inc
fmull
add
lock
call
int3
rcrb
jecxz
jmp
adc
fidivrl
jp
aam
enter
repz
mov
ljmp
xchg
ss
sub
gs
dec
test
push
mov
fildl
jmp
aaa
mov
ss
dec
and
cmp
pop
in
push
dec
ds
fnstsw
imul
xchg
add
cwtl
and
xor
nop
cmp
mov
sub
sbb
icebp
arpl
and
or
or
imul
xor
inc
mov
inc
lret
in
aaa
cmp
cmpsb
out
pop
mov
pop
jle
or
lcall
inc
pop
pop
in
cmc
mov
stc
std
push
shrb
pop
pop
xchg
test
adc
xchg
push
xor
xor
push
mov
add
dec
daa
or
shrb
add
fidivrl
mov
mov
lcall
mov
test
jp
lahf
addr16
ds
mov
inc
sbb
pop
push
sbb
pop
fdivr
ret
test
sti
jl
in
pop
push
aaa
push
sahf
pushf
in
lcall
outsb
aam
inc
mov
test
adc
add
inc
mov
push
or
jnp
pop
pop
ret
jle
push
mov
js
inc
aam
clc
rclb
push
cmp
mov
xor
cltd
aad
fisubs
lock
aaa
jno
sub
sahf
enter
jbe
mov
sbb
inc
out
add
sub
adc
ret
mov
in
loope
cltd
cltd
mov
xchg
ret
or
push
out
jge
dec
pop
test
mov
push
mov
loope
fwait
lret
dec
dec
hlt
mov
aad
jae
pop
scas
call
lods
and
mov
js
cmpsl
inc
ss
or
fisttpll
push
clc
mov
inc
sub
lcall
int3
adc
imul
shr
stc
ret
push
cmp
jmp
jge
cld
aam
rorl
movsl
jne
xchg
gs
mov
pop
jo
sub
rorb
add
cmp
je
decl
lods
repnz
sti
rcrb
jg
jmp
imul
cmc
loop
shl
xor
pushf
adc
leave
pop
mov
ficompl
xchg
push
xchg
xchg
nop
fs
or
pusha
into
iret
pop
xor
out
push
int
insb
jbe
or
mov
aad
xchg
in
shll
addr16
cmc
cmp
xchg
xchg
outsl
pop
aas
cwtl
stos
out
pop
or
mov
jne
enter
mov
mov
out
outsb
mov
push
outsb
xchg
loope
aas
pushf
unpcklps
loope
dec
push
dec
mov
pop
push
sbb
mov
inc
xor
out
xchg
and
jl
push
ja
imul
cmp
xchg
cli
outsb
dec
ss
pop
pop
jmp
sub
in
dec
jmp
mov
ja
dec
arpl
sbb
inc
data16
gs
and
iret
dec
inc
movsb
jmp
pusha
les
in
or
inc
xor
test
pop
cmp
xchg
or
cmp
rcrl
pop
movsb
icebp
and
dec
mov
lds
xor
fistps
das
jo
pop
and
inc
sbb
aam
adc
lret
dec
inc
orl
dec
dec
xchg
or
push
or
mov
daa
dec
das
dec
mov
scas
in
push
test
int
cmp
lea
push
daa
lods
xor
arpl
int3
es
loop
xchg
sti
adcl
xchg
jo
orb
stc
fwait
testl
pop
out
fs
popa
shrb
inc
jg
xchg
lret
aam
nop
dec
ficoml
dec
mov
or
stos
insb
add
pop
cmc
mov
inc
mov
push
or
jbe
sbb
sahf
rcll
cmp
aas
scas
xor
stos
and
adc
ret
aas
push
add
pop
jne
pop
xor
xchg
outsl
fwait
add
nop
xchg
loop
in
sbb
ja
fwait
inc
test
push
dec
stos
mov
jne
or
pop
aas
push
dec
lods
cmpb
xchg
xchg
mov
adc
push
and
push
lds
out
stc
dec
sub
xchg
xchg
push
ljmp
xor
retw
push
inc
rorl
dec
iret
imul
xchg
adc
lea
lds
pushf
push
sbb
or
test
orb
test
mov
xor
ja
push
sub
add
lds
out
or
dec
mov
movsb
xor
ds
and
mov
mov
out
addr16
jae
jae
mov
jno
adc
cmpsb
es
pop
mov
stc
sbb
lea
inc
and
pop
lret
or
xchg
pop
push
adc
imul
dec
std
enter
les
fadds
mulw
sub
jle
test
dec
mov
mov
pop
ss
xchg
xchg
addr16
sbb
cmp
pop
jmp
lcall
push
rcrl
out
sbb
jge
mov
cli
push
sahf
mov
xchg
jb
mov
xchg
divl
and
jmp
cli
pop
ret
xchg
lcall
pop
pcmpeqb
xchg
pop
ficompl
pop
in
in
sub
int3
mov
xchg
jmp
adc
fdivs
cwtl
cmp
loop
lods
cs
xchg
inc
jnp
addb
inc
cmp
add
nop
jle
ds
repz
add
fnstsw
pop
shlb
rclb
sbbb
loopne
adc
jo
lcall
push
pop
int
sbb
mov
xorb
xor
test
sbb
stos
adc
fcoms
stos
and
out
lea
enter
ja
call
add
das
pop
mov
imul
cmp
imul
mov
movsb
mov
push
inc
cmc
pushf
in
and
idiv
mov
sbb
jno
jno
sub
sub
or
sub
pop
mov
lods
mov
fnsave
inc
mov
cmpsb
out
and
push
test
lods
mov
jno
lahf
imul
pop
loop
pop
pushf
mov
pop
sub
sub
mov
xchg
jge
enter
insb
cmp
test
pop
dec
jecxz
aad
jecxz
add
test
dec
xchg
push
dec
xchg
add
sbb
insb
loopne
loopne
int3
add
mov
enter
add
and
fwait
repnz
jb
rorb
mov
mov
bound
adc
int
fstl
ljmp
imul
push
cmpsb
cmp
pushf
xchg
andb
daa
mov
into
xor
or
ret
sar
sub
sub
mov
push
add
loopne
adc
repz
in
cmp
sub
cld
cmp
mov
cmp
sbb
andl
out
in
das
leave
lods
lds
pop
setb
and
aaa
rorb
out
hlt
lock
add
pop
enter
sbb
cwtl
int3
dec
add
push
stc
call
cltd
arpl
xchg
stos
mov
pop
jae
lahf
sub
out
inc
fisttps
ljmp
inc
ss
pop
jle
test
shrl
xorl
imul
dec
lret
push
rol
fistps
out
pop
fstp
test
cmovge
fmuls
mov
xor
mov
and
xchg
or
sahf
lea
sub
es
in
out
shlb
jae
out
pop
ret
pop
sahf
lea
divl
lahf
lods
sub
fisubrl
faddl
addl
inc
call
pop
pop
or
ss
outsb
rorb
iret
movsb
mov
cmp
push
fbstp
mov
out
sbb
mov
pop
mov
cli
xor
pusha
fcompl
out
rorb
lret
xchg
cli
dec
or
mov
push
mov
sub
fnsave
pop
xor
movsb
sub
xchg
xor
lods
nop
or
xor
jmp
or
sbbb
leave
push
sbb
lret
les
mov
stos
jnp
scas
gs
inc
sbb
mov
sub
mov
pop
sbbl
fs
xor
adc
fcompl
adcb
push
lods
jo
je
int
or
mov
jle
dec
pop
daa
popa
push
cmpl
add
adc
dec
out
mov
int
iret
mov
jne
sbb
sbb
inc
test
lds
pop
dec
pop
or
imul
loope
dec
fldcw
repz
adc
sbb
insb
insb
inc
loop
fiaddl
orb
loop
jecxz
ret
enter
cmpsl
lahf
jb
xor
inc
test
faddl
sub
pop
sub
cld
or
lea
movsl
stos
jb
cmc
sbb
push
pusha
ja
and
loop
popa
aaa
fstpl
call
adc
scas
loop
cmp
adcl
xchg
iret
arpl
ljmp
pushaw
inc
inc
mov
hlt
xchg
in
movsl
nop
adc
test
lods
mov
pop
pop
xchg
jmp
dec
pushf
shrl
cmpsl
cwtl
addb
xchg
xchg
out
into
in
sar
shlb
sbb
loopne
aam
stos
add
jmp
outsl
int3
inc
pop
jno
mov
jl
jns
push
lret
shrl
inc
xor
push
dec
fsubrl
pop
call
scas
pop
ret
xlat
add
shll
into
rcll
pop
dec
iret
lea
hlt
gs
jmp
push
daa
pop
les
leave
fistpll
gs
sbb
subl
and
add
jp
sub
outsb
call
and
dec
rcrl
or
mov
mov
sti
cmpsb
in
mov
jmp
es
pop
push
inc
insb
daa
shll
mov
pop
sbb
lods
negl
jmp
sub
jb
mov
mov
push
adc
and
imul
dec
push
fcom
jl
push
shl
shl
add
fnsave
leave
mov
ds
pusha
pusha
mov
ljmp
lods
adc
push
or
sub
add
pop
mov
push
rorl
std
cmp
or
or
sub
pusha
add
es
into
ja
out
repnz
stos
scas
jb
add
enter
sub
dec
jo
ret
dec
adc
push
sbb
jns
out
or
dec
pop
push
mov
test
mov
pusha
xchg
mov
dec
ljmp
xchg
mov
jmp
aam
or
mov
adc
jnp
sbb
js
push
popa
cmp
sub
scas
pop
std
xchg
inc
jae
push
cmp
pop
movsb
aam
dec
js
ja
xchg
mov
mov
mov
jbe
es
push
call
add
jno
fs
imul
jg
xchg
les
push
and
fs
adc
jle
push
pop
push
imul
jmp
and
xor
into
adc
sarl
dec
clc
pop
or
dec
aas
jg
or
push
fwait
mov
ljmp
mov
ljmp
cwtl
jno
xor
mov
je
pop
psubq
mov
lods
fidivs
pop
add
aas
lds
adc
and
or
popf
ljmp
add
out
mov
or
xchg
sarb
ja
popf
mov
dec
add
sub
and
cmp
in
mov
loop
das
jnp
iret
sbb
mov
xchg
jge
jbe
mov
pop
pop
push
stos
sti
loop
in
sbb
push
sub
push
mov
pop
xor
cmp
xchg
mov
or
in
mov
sarl
mov
adc
cwtl
push
xor
je
cld
int
push
and
daa
xchg
cmc
push
adc
xorb
inc
xchg
stos
cmpsl
mov
cmp
mov
idivl
cmp
ss
push
repz
mov
jge
fsubr
arpl
ror
std
ret
outsl
cltd
xchg
rcll
mov
int
dec
je
sti
rcll
sarl
data16
adc
leave
sbb
xor
dec
jns
sti
inc
fcmovbe
outsb
cmp
lret
bound
ficoml
inc
stc
mov
cmpsb
dec
jo
xchg
jo
mov
sub
pop
xor
bound
jmp
pop
mov
mov
das
push
push
push
xor
sub
loope
jle
cmp
jmp
pop
add
psubd
cmc
and
scas
sub
fdivrs
in
pop
es
rol
js
or
addl
icebp
loope
and
sub
jge
sub
cmp
sbbb
jg
jmp
cmp
ret
push
loop
xchg
sti
xchg
std
push
out
fimull
rcl
clc
xchg
rorb
mov
pop
mov
and
divb
inc
mov
mov
mov
lods
add
cmp
mov
or
int
mov
leave
cmp
mull
xor
ret
out
ret
mov
fcomps
hlt
addl
loope
insl
daa
enter
das
subl
cmpsl
movsb
mov
jb
inc
rol
push
icebp
mov
repz
push
int3
push
fnsave
push
push
cli
cs
shrb
cltd
cs
scas
popf
push
mov
sbb
cmp
pop
cmc
jecxz
or
jo
mov
aad
push
incb
push
and
jge
or
pop
mov
cmp
xchg
mov
jecxz
test
repnz
jne
rolb
xchg
xchg
sbb
push
cmp
and
mov
shlb
jg
addr16
mov
jne
mov
dec
or
outsb
in
sbb
in
test
push
loopne
or
push
int
mov
daa
xor
mov
movsl
xchg
imul
xchg
sahf
xchg
inc
movsb
mov
mov
push
sub
hlt
mov
xchg
xchg
imul
adcb
ss
pop
pop
mov
fmull
inc
fwait
rol
add
ret
mov
adc
and
mov
dec
lahf
sbb
fcoms
insb
inc
testb
xor
jae
out
aad
lahf
daa
std
out
fmuls
in
leave
enter
adc
adc
mov
cltd
dec
sbb
dec
or
xchg
fisubl
je
inc
daa
dec
jecxz
fwait
adc
lods
push
pop
jnp
cmpl
scas
loope
inc
aam
icebp
shr
jns
out
pop
mov
outsl
xchg
lds
pusha
sbbl
mov
les
mov
icebp
adc
push
sub
pop
imul
inc
insl
js
pushf
add
sub
cmp
push
mov
pop
adc
cmp
ret
fistps
aas
pop
xor
popa
inc
out
adc
fcomps
popa
push
push
fwait
mov
dec
pop
lock
popl
inc
xchg
mov
scas
lret
adc
or
mov
sub
out
adc
push
iret
xchg
mov
divb
subb
test
cmp
jle
xor
ret
test
mov
repnz
cmp
in
mov
mov
int3
notb
lods
jne
in
cmp
movsb
push
jg
dec
cmp
sti
pop
cs
les
pop
mov
inc
mov
loop
arpl
push
insb
and
mov
lret
cmpsb
push
pop
xor
in
mov
loopne
jae
das
cld
and
mov
xchg
test
ss
std
sbb
jge
push
jmp
fiadds
insl
fistpl
popl
xor
mov
dec
mov
push
in
pusha
insb
sahf
cmpsl
jb
sbb
bound
aas
adc
cs
dec
shlb
adc
popl
pop
pusha
or
sti
out
test
and
in
test
insb
jle
aam
lds
pop
notb
outsb
sbb
xor
stc
cmpsb
jbe
mov
mov
and
mov
dec
repnz
push
jecxz
sub
xchg
push
inc
ljmp
mov
inc
xlat
int3
dec
test
and
push
aas
adc
sbb
mov
orb
push
or
lahf
mov
adc
loopne
sub
lea
push
clc
shrb
xor
push
xorb
sub
dec
sub
jae
xlat
or
jno
sub
cmp
idiv
sbb
cmpsb
adc
andl
and
mov
adc
mov
xchg
lret
lods
int
xchg
scas
xchg
mov
out
add
push
pop
in
mov
add
mov
cld
aad
add
mov
imul
into
add
sahf
lods
add
shll
dec
ret
push
inc
mov
dec
ficompl
xchg
xchg
xor
cltd
jmp
lret
aam
sbb
inc
dec
dec
out
enter
roll
xor
or
cwtl
movsb
pop
enter
pop
sub
repnz
cld
addr16
sub
ret
ja
dec
dec
add
out
test
lahf
mov
sbb
movsl
fwait
test
jo
and
in
stos
pop
je
xor
push
pop
ret
xchg
popf
movl
rcll
jb
cmp
movsb
sub
insb
sbb
adc
rorb
pop
cli
sahf
xchg
pop
add
and
and
xorb
jecxz
sub
fisttpll
pop
lcall
pop
cmpsb
sub
mov
repz
cmpsb
ret
inc
cmp
push
insl
xchg
fcoml
pop
daa
in
push
inc
int3
leave
add
addr16
dec
out
mov
std
mov
cmp
add
jge
cwtl
dec
inc
inc
sub
clc
mov
push
in
cmpsl
pop
push
inc
test
push
mov
jb
out
aam
icebp
inc
pusha
daa
or
jae
shl
cmp
fwait
mov
cmc
pop
xor
mov
pop
or
fdivs
push
cmp
xchg
or
adc
scas
das
loop
push
insb
shlb
cmp
ror
push
ret
inc
loopne
into
xchg
cmp
sbb
leave
pop
jmp
and
test
push
aaa
cs
fwait
call
inc
adc
lock
and
jl
imul
data16
mov
ret
sbb
mov
fisttpl
mov
pop
push
aam
add
cli
add
push
leave
fcom
mov
fwait
sub
test
adc
xchg
jno
add
xor
in
gs
fsts
leave
adc
cmc
xor
arpl
arpl
out
push
imul
mov
arpl
int3
cs
rep
and
out
ret
mull
movsl
xchg
jmp
aas
cmp
add
stos
rcl
js
fdivrl
adc
out
ja
repnz
inc
xchg
pushl
push
jb
gs
cmp
cmp
lods
xor
or
xchg
lock
scas
loopne
add
jge
cli
dec
mov
mov
mov
push
shll
xlat
dec
xor
sub
xchg
mov
xor
inc
mov
jne
push
ret
lcall
pushf
mov
fildl
push
mov
push
test
lahf
lahf
and
cmp
rolb
add
fs
cmc
or
jecxz
data16
xor
cmp
test
icebp
adc
scas
nop
subl
out
aam
sahf
pop
and
fisttpl
lds
mov
sbb
testb
pop
push
push
movhps
pushf
stc
add
jl
ss
mov
sti
push
jmp
popa
adc
xchg
repnz
push
xchg
fwait
jmp
jle
movsb
pop
stos
mov
xchg
inc
pop
cwtl
push
cwtl
jo
push
mov
jle
push
rcrb
test
cmp
dec
pop
cmp
mov
jp
push
push
test
push
fidivrl
pop
ljmp
test
inc
jmp
hlt
mov
rcrb
out
ret
sbb
mov
ljmp
fs
mov
sub
dec
mov
xchg
lea
jmp
repnz
jl
mov
xchg
rol
fwait
in
or
stos
push
orb
addr16
mov
lock
pushf
imul
mov
push
add
fs
add
jns
inc
push
sub
pop
lods
xchg
cld
mov
popf
push
int
pushf
jg
mov
lahf
adc
inc
xchg
pushf
lock
enter
mov
jnp
cli
cmp
xchg
into
sahf
rcrl
cmp
test
jo
test
aad
xchg
addr16
call
flds
outsl
jecxz
dec
and
out
inc
lret
fmuls
lds
inc
pop
not
es
xorb
in
sbb
cmp
jne
scas
pop
pop
cltd
push
mov
adc
sub
or
imul
fidivrl
jmp
pop
bound
sub
cmp
add
xor
loopne
sbbl
icebp
push
or
push
loop
fidivrs
int3
outsl
hlt
sub
adcb
inc
in
icebp
outsl
mov
cli
xor
sbb
lds
popf
outsb
mov
sbb
mov
in
pushf
xchg
mov
lea
push
insl
mov
cmp
pop
mov
int3
or
sub
adcl
les
in
scas
push
mov
movsb
lods
add
icebp
jns
fsubrl
testb
repz
and
repz
push
sti
ficomps
data16
int
icebp
sbb
pop
loop
sub
push
sbb
sub
xor
dec
fsubr
cmp
cmpsb
add
ds
push
sub
pop
jo
lahf
mov
mov
in
xchg
mov
adc
xor
xchg
lahf
pop
cwtl
dec
gs
xchg
add
out
cmp
imul
push
mov
idivl
or
xlat
lcall
fistl
in
in
fwait
mov
mov
std
mov
scas
stos
mov
out
cld
add
fisttpl
fldenv
pop
jns
sbb
pop
sub
push
xchg
sub
push
out
call
ror
setns
xchg
pushf
jb
aas
inc
stc
cmp
sub
data16
std
std
or
and
testl
jl
push
icebp
or
mov
cmp
lret
rclb
ficoms
inc
into
mov
jmp
or
movl
mov
aad
and
aam
in
and
jecxz
loopne
dec
or
mov
xor
out
fsubr
ret
mov
push
cwtl
mov
push
out
call
lcall
aaa
aad
sub
sahf
lock
xchg
inc
mov
xchg
pusha
leave
pop
jae
iret
add
push
js
andb
lcall
aaa
xor
inc
sub
xlat
loop
pop
in
sub
gs
imulb
inc
cltd
fildll
ja
sbb
lea
scas
mov
pusha
pop
jecxz
inc
or
add
push
js
inc
lahf
in
dec
mov
jns
scas
dec
cmpsl
mov
pop
out
inc
jnp
nop
sahf
xor
test
xor
test
pop
popf
fildl
lahf
into
mov
call
pop
mov
cmpsb
add
xchg
gs
push
pop
mov
dec
dec
outsl
call
fs
add
ret
dec
test
aas
cmp
jg
inc
hlt
ja
push
cmp
in
mov
adc
in
lea
dec
mov
xchg
or
aas
mov
mov
movsl
jmp
dec
or
lret
test
lcall
jmp
das
scas
test
push
gs
mov
icebp
cs
daa
repnz
test
out
shl
pop
inc
add
pop
inc
sbb
push
lods
imul
dec
or
pop
mov
and
xchg
imul
inc
xchg
bound
jbe
mov
fs
xor
adc
add
add
adcl
lods
dec
sahf
cld
outsl
ds
loop
sbb
sarl
stos
popf
xchg
pop
add
andb
fcompl
dec
and
push
enter
fs
inc
loope
jle
lcall
and
mov
fwait
xor
xor
add
cltd
out
loop
iret
cmpsl
xor
xchg
and
cltd
mov
pushl
mov
adc
or
xchg
push
scas
addr16
aam
or
mov
mov
repnz
cmp
in
ficoms
decb
cmpsl
pop
and
faddl
ret
shlb
push
sbb
filds
sbb
inc
fists
mulb
mov
mulb
sbb
pop
xchg
cld
fs
enter
mov
cmp
insb
fistpll
jno
cwtl
stos
lds
and
insl
imul
push
outsl
aaa
push
mov
in
push
iret
test
xchg
fucomip
jmp
scas
fists
mov
mov
imul
aaa
iret
push
inc
addr16
lds
cmp
add
jnp
fnsave
mov
popf
lock
adc
pop
add
jmp
xchg
shlb
fimuls
sub
mov
sahf
push
pop
sub
nop
das
ret
push
push
sarb
ret
add
mov
pop
cwtl
ljmp
jae,pn
xor
xchg
incl
sub
jo
lock
fs
std
sbb
cmp
jp
lea
aam
push
mov
lea
cmp
mov
outsl
jecxz
hlt
inc
pop
les
mov
test
aam
popl
sub
push
push
fadds
mov
push
std
mov
dec
jb
dec
pusha
xchg
jp
je
xchg
insl
pusha
ds
mov
cmpb
sub
ficompl
in
jg
insl
aaa
jnp
push
mov
imul
dec
test
and
mov
mov
aas
mov
inc
dec
or
roll
adc
adc
lret
or
aad
or
add
push
imul
jp
cli
repnz
xor
mov
mov
mov
fldt
arpl
sti
pop
xor
imul
mov
aam
pop
out
test
mov
cmc
loop
xchg
adc
or
imul
mov
jno
xchg
pop
insl
into
sbb
push
mov
cmp
movsb
vpackssdw
repnz
pop
mov
cld
and
les
sub
sbb
pop
jae
or
jl
dec
adc
stos
and
push
imul
loope
sub
mov
dec
xor
push
sahf
push
sbb
pop
sbb
jnp
push
push
scas
jbe
and
stos
mov
mov
insl
jne
mov
inc
outsl
jge
pop
stos
jmp
or
pop
push
gs
mov
mov
or
push
fcompl
bound
xor
fmulp
cltd
jb
clc
add
cld
inc
sbb
scas
push
xchg
cltd
cmp
shrl
scas
pop
xchg
and
push
repz
or
add
out
in
pop
sub
dec
movsb
push
out
leave
or
xor
push
add
xlat
addr16
scas
dec
dec
movsl
das
cmp
adcl
jmp
dec
cmp
cmpsb
outsb
push
incl
push
adc
mov
adc
imul
dec
addl
repnz
or
hlt
sub
mov
test
fwait
push
pop
shlb
mov
nop
xchg
mov
mov
jnp
ficomps
mov
sbb
sbb
dec
pop
test
es
inc
dec
scas
mov
lahf
shrb
pop
mulb
or
jge
jne
pop
and
push
sub
pop
bound
in
je
sahf
lret
add
stc
push
jnp
xor
cltd
sbbb
jo
scas
fstpt
cmp
fs
lea
sub
mov
mov
mov
add
jae
cld
or
in
sti
adc
adcl
cmp
inc
inc
movl
jns
int
mov
fcoml
rorb
push
ficoml
in
arpl
pop
idiv
incl
sbbb
mov
addb
jl
fwait
pushf
icebp
mov
pop
adc
jmp
lods
lods
addr16
sbb
out
mov
mov
and
or
popf
scas
int3
sbb
and
add
lock
out
and
cmc
jecxz
dec
xchg
cmpsb
mov
lods
jne
pusha
xchg
inc
cmp
ds
sti
sahf
ja
or
popf
jge
lock
cmp
les
inc
sbb
and
leave
cmp
push
stos
out
gs
or
insb
lahf
push
out
pop
popf
repnz
xchg
sbb
push
or
jp
push
xor
lods
jmp
decb
insl
inc
jmp
std
leave
stos
add
or
repnz
push
in
paddusb
test
mov
cmc
jbe
movsl
dec
push
xor
push
cmc
jecxz
jge
mov
sub
hlt
dec
mov
jae
pop
or
sahf
mov
mov
loop
push
lods
xor
ljmp
jmp
clc
cmp
mov
sub
jbe
not
mov
aas
mov
jnp
pop
inc
data16
and
mov
jl
stc
inc
push
imul
add
cmp
jl
inc
xor
fs
mov
shlb
in
stos
dec
je
ror
in
rcrl
mov
or
rol
sub
popf
std
xchg
sub
jo
enter
arpl
aad
push
stos
mov
arpl
aad
icebp
lock
div
cmc
xor
push
nop
push
xor
and
xchg
mov
add
add
imul
mov
and
cld
mov
inc
std
and
pop
nop
cli
cmp
pop
cmpsl
ljmp
aaa
cmp
cld
test
sbb
jle
jmp
sub
addr16
dec
cmpsb
mov
stc
jl
ds
clc
inc
sti
mov
or
inc
test
and
pop
in
or
adc
dec
sub
sub
and
push
xchg
jae
ret
stc
xor
xchg
or
in
push
mov
sbbl
mov
cmpsb
lds
cs
scas
andb
pop
cld
jp
xor
mov
mov
pop
gs
ja
or
jge
push
stc
xchg
je
adc
fucom
push
call
or
mov
xchg
xchg
addr16
inc
mov
iret
out
inc
aad
popf
arpl
jae
dec
and
cmp
out
clc
sub
sub
pop
xchg
push
hlt
lods
push
lret
xchg
and
dec
outsb
add
or
icebp
jg
cwtl
mov
ret
push
adc
jno
adcb
test
sub
jb
push
inc
adc
loopne
xchg
iret
cmpsl
rclb
mov
ss
mov
push
mov
mov
push
cld
jae
jecxz
or
sub
inc
aaa
fsubrl
push
pop
adc
xor
das
dec
rorb
pop
sbb
push
enter
inc
out
xchg
mov
fisttpll
loopne
cwtl
aas
popf
inc
sti
scas
inc
fsubl
sub
or
mov
fcompl
imul
call
sti
xchg
fstpt
sub
and
and
cld
mov
xchg
std
mov
mov
mov
fnsave
push
pop
mov
mov
jp
adc
stos
sbb
imul
pop
test
sahf
push
iret
loop
mov
popl
and
jecxz
loop
sarl
pop
pop
xchg
andl
mov
push
in
arpl
les
mov
jo
enter
pop
sub
pusha
fistl
les
or
iret
aaa
sbb
lcall
enter
xchg
adc
ss
mov
pop
xchg
mov
into
lds
mov
push
loopne
sahf
test
push
fstps
fsubrl
mov
dec
cmp
out
sbb
in
loopne
ret
xor
btc
cmp
add
imul
scas
mov
rorl
lods
and
jae
add
sub
sbb
sbb
sub
sete
mov
test
outsl
push
sub
sbb
push
xchg
xor
aad
ds
loope
and
or
or
fiaddl
fsubs
cld
cmpsb
stos
in
mov
cli
fbstp
sarl
mov
cmp
leave
inc
inc
jb
das
mov
sahf
mov
xor
insl
pop
xor
push
pop
std
mov
fwait
jae
test
add
xchg
sub
mov
cmc
xchg
dec
mov
in
sbb
pop
ljmp
sbb
pop
xor
fwait
loope
push
and
cld
test
xor
cmp
pop
nop
ss
fistpl
jo
and
jmp
ret
add
xor
cmp
shlb
inc
jbe
outsl
inc
and
faddl
mov
adc
jo
inc
jne
xchg
push
and
ljmp
mov
push
test
ljmp
jno
dec
jge
cmpsb
or
mov
jmp
sub
enter
rorb
mov
popa
aad
call
js
push
add
pop
stc
xor
cwtl
pop
sub
addb
jb
pop
push
lcall
pop
lds
xchg
sbb
divb
in
or
jle
push
mov
das
xchg
psubusw
or
push
into
or
adc
adc
inc
inc
mov
xchg
mov
xchg
add
pop
mov
and
sti
mov
mov
xor
jp
cs
pop
dec
dec
popf
std
mov
outsb
pushf
shlb
sbb
inc
jg
out
add
mov
mov
pop
jne
mov
or
push
dec
adc
pop
sti
adc
pop
aas
push
mov
cmp
bound
pushf
and
lods
dec
sahf
arpl
mov
push
pushf
or
mov
dec
add
pusha
test
movl
mov
and
lcall
call
shl
pusha
jo
or
mov
js
mov
and
jg
scas
mov
and
add
xchg
imul
sahf
pop
push
in
ljmp
stos
adc
sbb
mov
fcomi
shlb
or
ja
fmul
sahf
bound
add
xchg
cmp
test
xor
sbb
aad
inc
into
add
push
jg
sub
push
enter
cmpsb
jno
or
cmpsl
sbb
ljmp
mov
pop
inc
inc
lock
inc
popf
imul
jecxz
add
push
or
and
xchg
bound
and
lret
je
jne
and
push
jge
inc
push
push
neg
mov
movsl
push
sar
loope
outsb
jge
mov
sub
mov
lods
ret
sbb
pushf
push
mov
int
lret
and
xchg
call
adc
int
sbb
icebp
and
xchg
dec
xchg
xor
mov
std
inc
hlt
hlt
ret
js
cmp
pop
inc
sbb
push
inc
ja
mov
dec
call
test
add
stos
push
aas
add
arpl
loop
shl
repnz
cmpl
test
lods
aad
pop
roll
push
push
les
movsb
inc
insb
mov
js
push
sti
and
scas
call
aam
lcall
mov
imul
arpl
sbb
add
mov
push
fwait
sub
insb
pop
or
jmp
and
pop
fldcw
mov
mov
les
mov
mov
or
mov
push
mulb
inc
mov
push
das
jmp
sahf
fdivs
inc
sub
jg
cmpsb
test
iret
add
subl
xchg
jp
mov
out
mov
mov
pushf
mov
ds
mov
mov
repnz
in
in
sbb
scas
loop
js
mov
cld
mov
scas
push
cmp
adc
imul
fists
lcall
ljmp
cmp
pop
psrlq
inc
cmpsl
aad
int3
mulb
out
and
mov
xor
jne
xor
lds
mov
push
pop
bound
add
adc
xchg
cmpb
sub
inc
jo
loopne
add
in
inc
dec
xor
jne
faddp
push
out
mov
mov
shrl
fstps
push
adc
sar
insb
mov
add
aam
xchg
dec
mov
sub
popa
dec
jne
cld
imul
adc
mov
stos
pop
mov
les
jg
push
test
push
repz
pop
fiaddl
xor
out
or
and
gs
jb
push
jmp
aas
je
call
jno
addr16
dec
jge
int3
clc
sti
popf
ds
push
jmp
ret
je
outsl
mov
fbstp
test
mov
enter
pop
out
xchg
jmp
pushf
cmpsl
sub
xlat
nop
add
mov
xchg
scas
rcl
xchg
sbb
xor
sub
sbb
ljmp
sbb
sub
push
mov
repnz
xor
add
inc
jmp
sar
jmp
outsb
popf
ret
push
pop
syscall
adc
movsb
out
add
out
push
idiv
in
sbb
fnsave
orl
jb
into
xlat
movmskps
popa
bound
ja
fldcw
mov
push
cmpsb
jg
add
rorl
sub
inc
inc
push
sbb
inc
mov
pop
sbb
mov
xchg
ret
sbb
lods
sbb
imul
sub
or
pop
xchg
sub
mov
dec
mov
sbb
repnz
jecxz
pusha
push
dec
xchg
hlt
mov
mov
stos
fnstsw
xchg
xchg
push
je
aad
push
sub
stc
leave
or
sbb
push
enter
adc
cmp
and
in
in
shl
icebp
xchg
insb
sub
enter
pop
in
pop
in
jae
add
in
mov
testl
outsl
pushf
mov
jp
mov
pusha
xor
mov
test
sbb
adc
insl
jne
lret
push
xor
fwait
rcrl
mov
insb
mov
int3
inc
xor
pop
or
xchg
fldcw
cmp
das
fwait
icebp
aad
xor
testl
xadd
outsb
addr16
and
into
aam
lret
ss
out
add
outsb
jo
sahf
mov
push
mov
fdivrl
stos
loope
rclb
dec
lods
sti
mov
pop
mov
ja
or
mov
cs
mov
and
leave
fidivrl
jne
mov
dec
pop
sbb
jle
push
repnz
test
push
in
push
call
jns
dec
push
and
mov
fwait
dec
call
fdivl
and
and
mov
in
mov
je
lods
fstps
fidivl
out
pusha
mov
outsb
mov
stos
cmp
ret
inc
mov
push
ficompl
inc
popa
shr
jg
xor
in
add
in
and
or
shr
dec
dec
dec
fxam
notb
loop
inc
rcrb
push
testl
fcoms
or
or
jge
sbb
sbb
pop
mov
mov
data16
and
movsb
enter
scas
out
aas
aad
and
lock
push
or
jle
or
xor
cmp
xchg
pop
mov
daa
outsb
dec
int
lds
ds
pusha
mov
sbb
imul
pop
mov
or
ret
popa
cmpxchg
add
mov
or
xor
push
lock
fdivs
sar
adc
jg
mov
adc
clc
dec
dec
clc
iret
sbb
test
mov
jmp
push
icebp
pop
aam
lock
mul
cld
out
mov
je
mov
loopne
xorb
dec
mov
mov
push
inc
cmp
mov
insb
push
and
ficoms
cmp
mov
movsl
mov
cmp
xchg
fwait
nop
inc
cmp
clc
mov
lea
imul
fs
xchg
addr16
xchg
loopne
inc
into
cli
push
mov
pop
fldl
push
inc
daa
icebp
cltd
pop
mov
test
loop
dec
nop
dec
xor
imul
adc
pusha
outsl
inc
jns
lods
cmpsb
push
xchg
mov
and
aad
sbb
icebp
dec
enter
dec
pop
fcomps
cmp
inc
push
push
shrl
shlb
inc
cmp
xchg
sarl
inc
dec
lret
pop
test
cmp
push
inc
fldenv
push
xchg
jne
jo
push
push
xchg
daa
in
sbb
mov
and
xchg
or
rcrl
xor
cmp
sub
in
pop
push
adc
push
jb
dec
subb
pop
cmp
jecxz
jp
sub
jns
cli
push
xchg
ljmp
adcb
repnz
daa
imul
ds
daa
es
mov
mov
nop
push
mov
out
pop
fsubl
cmp
call
loopne
sbb
fwait
cmp
inc
or
ja
jmp
mov
mov
shr
subl
cmpsb
lret
mov
push
rcl
sub
fwait
xchg
adc
orb
rcrb
in
and
or
addb
inc
mov
mov
fistps
aad
out
and
pop
fsubr
mov
movl
xor
and
pop
adc
daa
push
loopne
dec
jmp
push
adc
sub
inc
fsubrs
cli
xchg
sub
mov
ret
lret
sti
dec
stc
mov
rcr
adc
sbb
aad
adc
pop
ja
imul
cmpsb
insl
mov
repz
mov
and
sbb
sub
xchg
icebp
push
mov
sbb
pop
sbb
xchg
xchg
jg
addr16
lods
movsl
push
fwait
imul
loopne
and
mov
mov
lret
mov
mov
mov
data16
xor
jg
add
into
jmp
pushf
lret
xorb
inc
test
pop
repz
rolb
pop
rorl
jne
aas
jnp
shr
pop
dec
cmp
cltd
jl
push
hlt
test
jecxz,pn
fsubr
loopne
sub
jnp
nop
pop
pusha
test
xor
fstl
cmp
mov
aam
in
push
scas
stos
xor
daa
xor
jecxz
mov
roll
inc
jae
mov
out
sbb
sub
mov
sbb
shlb
mov
xchg
test
push
and
imul
mov
xchg
jmp
jo
ljmp
push
nop
cwtl
into
mov
fistpll
xor
test
push
add
loope
push
iret
mov
jb
push
fldt
outsb
in
sbb
inc
aam
xor
sbb
std
decl
mov
or
cmpsl
data16
nop
cmp
addr16
out
out
cwtl
pop
ret
into
pop
std
std
rclb
lret
or
fsubrl
cmp
gs
pop
and
xchg
fs
dec
mov
pusha
xchg
scas
les
sub
ret
rcrl
aaa
jg
cmp
aas
in
sub
add
lods
cmp
sub
ret
inc
mov
pop
clc
into
pop
jmp
fcmovb
mov
mov
daa
orl
mov
or
cmpsl
movsb
adc
jle
inc
mov
imul
incl
stos
int
push
ljmp
push
cli
jl
jo
cs
test
adc
add
mov
lods
mov
loopne
adc
pop
inc
mov
aaa
sub
in
sbb
sub
inc
test
fmuls
sub
fsubs
fwait
cwtl
cmp
pushf
sub
mov
ja
imul
jo
loop
push
sbb
pop
or
inc
add
add
testl
ds
imul
lret
sbb
test
xlat
sub
sahf
xchg
adc
mov
push
out
mov
xchg
or
cmp
aad
push
mov
xchg
lahf
cmp
es
test
int3
int
ds
sarb
testl
fwait
jne
mov
pop
mov
jle
lea
movsl
nop
popf
fcomip
inc
pop
pop
jnp
add
je
sbb
dec
and
enter
and
inc
out
cmp
outsl
roll
or
and
xor
imul
sbb
dec
xor
adc
scas
mov
inc
es
clc
cmc
cli
mov
or
mov
mov
cmpsb
mov
cltd
sub
xchg
int
std
cmp
icebp
mov
rclb
cs
jg
arpl
ret
movsb
mov
cli
sbb
sar
mov
dec
imul
scas
fidivrs
mov
jg
jae
pop
xor
mov
jle
gs
aaa
fldenv
pop
dec
hlt
test
mov
inc
cmpl
les
xchg
lods
fsubrs
cmc
inc
mov
aas
push
mov
loope
dec
dec
leave
aaa
roll
jbe
jge
xor
push
mov
mov
adc
movsb
cltd
push
and
scas
test
ss
cld
cltd
shrl
stos
mov
xchg
lret
dec
mov
pop
inc
cli
xchg
xchg
sbb
repz
pop
inc
lret
pop
jns
push
pop
mov
xchg
sbb
fstps
push
bound
int
repz
je
add
dec
inc
jmp
outsb
pop
cmpsl
sbb
push
into
notb
aad
push
jmp
mov
dec
loop
lret
and
mov
data16
dec
mov
sub
cmp
pop
jnp
dec
imul
loopne
das
out
mov
iret
popa
xor
jo
or
xor
cmpsb
js
mov
bnd
and
rcl
mov
xchg
mull
das
enter
ror
pop
bound
add
or
jle
cmp
in
test
xlat
mov
lock
fldl
mov
mov
xchg
aaa
push
add
xor
sbb
rcr
jnp
push
adc
dec
jnp
popf
popf
inc
mov
pop
push
jmp
std
pop
lret
jbe
lds
aad
and
mov
pop
jmp
les
mov
gs
or
fsubrl
lock
adc
push
lods
imul
div
clc
sub
lahf
popa
rorb
lret
pop
stos
sbb
cs
cmpsl
mov
lock
pop
in
adc
popf
push
in
je
and
pop
call
imul
out
mov
divl
inc
push
icebp
mov
outsl
cli
adc
scas
and
mov
lcall
sub
adc
push
loopne
push
adc
and
jl
mov
movsl
inc
xchg
outsl
xchg
in
pop
into
push
and
or
ss
imull
dec
pop
xchg
and
leave
pop
mov
imul
mov
xchg
mov
adc
xchg
sub
push
xor
jmp
cmpsb
adc
cltd
xchg
or
mov
popa
inc
inc
or
dec
dec
movsl
and
xchg
cmp
pusha
ds
xchg
mov
add
icebp
rcll
cld
ljmp
mov
decb
sub
push
cmpsb
jg
nop
push
xor
pop
addb
je
and
push
lock
rorl
lock
mov
push
aam
lret
jl
lock
pop
aad
and
pop
sub
pushf
pop
cmp
stos
jmp
in
fisttps
inc
xchg
nop
shrl
aad
dec
mov
mov
push
sbb
iret
dec
ret
pop
addb
in
dec
clc
ja
sub
pop
mov
adc
dec
out
pop
cwtl
int3
aaa
fcomip
scas
mov
addl
clc
in
sub
fistps
inc
mov
push
sbb
out
mov
outsl
lock
pop
add
xchg
dec
mov
leave
cmp
mov
shlb
out
pop
and
xor
add
fistl
lds
push
mov
pop
mov
jge
mov
mov
mov
lods
jo
jno
mov
andl
mov
stc
dec
es
ficoml
movsb
jne
and
testl
cmp
sti
inc
mov
or
sbb
dec
mov
mov
mov
fldl
lret
sub
mov
and
adc
sub
enter
lahf
push
repz
mov
fs
lods
in
dec
xor
ret
lret
repnz
jno
pusha
daa
push
pop
mov
sub
lods
push
adc
int3
sbb
repnz
mov
sbb
aam
sub
add
inc
orl
xchg
mov
scas
popa
mov
push
mov
pcmpeqw
mov
and
pop
in
cld
movsb
cld
add
pop
mov
test
daa
push
cmp
pop
dec
bound
popa
gs
movsl
sbbl
xor
pcmpeqb
pop
mov
cmp
ret
inc
cli
sub
inc
and
repz
xor
and
leave
xchg
enter
fisubrl
push
jp
loope
fwait
ret
or
fmul
ret
outsb
sub
leave
mov
cli
pusha
loope
push
mov
cltd
shll
jecxz
mov
and
inc
sti
shll
jb
out
jb
negb
or
sbb
add
sub
add
push
sub
bound
mov
pcmpgtb
out
in
and
shll
lods
push
inc
adc
mov
in
adc
sub
sbb
ja
cli
cmc
ljmp
movsl
and
out
xchg
popa
push
call
sub
out
mov
shl
rclb
test
sbb
movsb
cwtl
in
sub
outsl
or
lock
lea
jo
fiadds
repz
pop
cmp
imul
fimull
push
mov
ds
popa
cltd
mov
lods
dec
outsl
xor
adc
rolb
dec
mov
sbb
in
sub
jmp
sub
cs
jns
scas
lret
pushf
mov
into
fistl
icebp
xchg
loop
or
push
lods
dec
xor
push
sbb
loop
inc
insl
push
lahf
jb
xor
hlt
pop
jo
loop
pop
shrl
cmp
pop
notl
xor
cli
popa
cmpsl
push
adc
enter
xchg
adc
out
mov
pop
lods
pop
add
mov
jmp
or
fidivl
mov
push
pop
jne
jo
fnstsw
in
sub
ljmp
sub
movsb
add
iret
sbb
mov
or
sub
mov
mulb
in
lea
ret
push
push
mov
mov
cmp
mov
aam
arpl
xor
jmp
adc
lret
cld
rorb
fisttpl
xchg
cwtl
dec
test
pop
jg
mov
jmp
mov
dec
cld
dec
popf
sub
loope
mov
lods
ret
sahf
mov
lods
lds
mov
push
pop
xchg
call
sub
sbb
xor
ficompl
xchg
inc
orl
or
push
test
jmp
add
mov
pop
xchg
xor
mov
mov
and
shrb
stos
iret
jnp
dec
push
sub
ja
push
sbb
fdivr
mov
mov
cmpsb
sbbb
jmp
jge
cmc
xchg
inc
mov
test
ds
outsl
or
daa
mov
inc
adc
addr16
push
dec
xchg
enter
pop
mov
dec
sub
dec
mov
mov
cmp
xchg
xor
out
xchg
call
cmp
adc
adc
testb
xchg
push
test
enter
test
aad
subb
mov
insb
call
mov
add
push
sub
imul
movsl
std
mov
or
jmp
inc
sarb
ljmp
adcb
repz
outsb
xchg
mov
mov
ja
dec
jl
adcb
push
stc
adc
push
cmp
data16
insl
or
mov
lcall
int
es
mov
das
jmp
notl
xchg
mov
jno
cmp
jne
add
ficompl
les
mov
rcrl
setl
insb
fs
jl
and
dec
dec
xchg
psllq
nop
mov
in
pushf
testb
scas
mov
gs
int
daa
xchg
movsl
dec
inc
pop
shll
iret
jo
inc
pop
xor
imul
rorl
and
xchg
or
push
sub
inc
mov
sub
mov
sub
addl
mov
fsubrp
xor
lods
mov
cmpb
jmp
xchg
sbb
fiadds
sbb
and
dec
int
pop
and
into
jmp
scas
mov
mov
inc
ds
xchg
jg
mov
aad
psrlw
xchg
cs
dec
jbe
mov
xlat
stc
ret
inc
sti
fcoml
fidivrl
nop
aas
in
rorb
dec
mov
lret
xchg
mov
push
cmovg
cmp
jecxz
xor
mov
push
lods
lcall
jnp
jge
fstps
xchg
xchg
mov
push
ja
push
and
jge
fstpl
cmpsl
repz
fistpll
fadds
mov
mov
mov
inc
movsl
test
loopne
test
hlt
pop
lcall
iret
xchg
xchg
sbb
fiaddl
xchg
push
imul
out
xchg
jbe
xchg
or
mov
out
movsb
cli
popf
rolb
cmp
call
sub
ret
or
sahf
mov
or
stos
sub
push
xor
pop
xchg
mov
inc
pop
sbb
sti
std
pusha
jbe
popa
and
mov
cwtl
in
xchg
pop
pop
mov
aaa
sub
aad
imul
mov
mov
test
add
out
lret
in
fstpt
sbb
push
in
cltd
add
adc
into
out
pop
into
testb
or
push
lcall
lcall
adc
test
pop
faddp
ss
nop
out
dec
adc
and
out
test
xor
lods
loope
xchg
xor
inc
call
pop
ds
dec
scas
mov
and
lea
dec
xchg
dec
lret
add
add
and
ret
push
inc
movsb
or
sub
mov
pop
pop
iret
lret
aad
mov
push
cmp
loope
out
addr16
xor
fcmovu
adc
je
xchg
cmp
ret
mov
pop
xchg
icebp
imul
in
mov
sarl
sub
icebp
test
sbb
pushf
mov
mov
push
jmp
add
pop
dec
jmp
xor
lock
inc
mov
push
inc
sti
adc
xchg
imul
std
sbb
push
mov
pop
add
lcall
dec
mov
in
mov
into
in
lret
mov
inc
shlb
and
or
dec
int
jp
cltd
sub
dec
push
mull
ss
inc
xchg
into
fisttpll
inc
mulb
insl
pop
repnz
jbe
cmp
push
or
sbbb
das
lret
in
call
out
test
adc
inc
data16
aad
jno
and
push
mov
cwtl
mov
sub
jmp
mov
rcrb
ror
mov
xchg
push
push
adcb
lods
mov
fs
and
push
jno
aam
dec
loop
stc
push
xor
daa
push
aas
jae
movsb
jge
xchg
xor
jl
shlb
lods
dec
push
fiadds
addl
dec
dec
pop
jl
sub
jle
adc
mov
vfmsub132ps
outsb
xor
mov
mov
lods
mov
cld
adc
scas
xchg
icebp
mov
jecxz
orl
add
lock
xor
jns
aas
imul
lods
shlb
mov
mov
cmp
movsl
jb
in
cli
ja
pop
rorl
pop
clc
into
fsts
sub
push
idivl
in
adc
nop
pop
jp
and
sub
decb
inc
pop
pop
repnz
das
movups
or
mov
jge
das
test
push
sbb
aad
mov
out
or
mov
xchg
frstor
mov
push
inc
scas
roll
dec
cltd
cmpsl
sarw
mov
jns
stos
pop
jne
dec
jo
mov
push
sti
pop
aas
in
nop
loop
cs
mov
sbb
add
leave
outsl
movsl
mov
adc
mov
lea
jb
push
hlt
cmc
pusha
pop
lds
jecxz
popl
addr16
jmp
push
xchg
loopne
aad
and
xor
fsubl
outsb
mov
push
daa
lds
push
cmp
into
loopne
cltd
mov
sub
in
or
in
xchg
fucomi
outsl
push
sub
gs
fsubs
fwait
test
xor
mov
xor
sbb
je
cmp
lret
enter
lahf
inc
xchg
addr16
repnz
jle
insb
xor
loope
fcomp
aaa
xor
test
out
dec
xor
mov
xor
mov
cltd
ja
shl
lahf
sub
push
dec
mov
push
xchg
popa
lcall
mov
adcb
jb,pn
mov
in
mov
cmp
stc
xchg
lock
imul
sarl
pushf
mov
fnstenv
lock
sub
stos
nop
imul
cmpsb
push
fwait
out
nop
push
push
xchg
mov
xchg
inc
sti
xchg
push
jle
dec
fistps
roll
sahf
jmp
nop
mov
jecxz
and
push
xchg
fdivrl
dec
dec
lcall
js
add
pusha
cmp
imul
cwtl
stos
repz
xor
adc
incb
mov
push
cmpsb
test
or
into
and
jns
test
aas
dec
das
lock
hlt
push
lds
xchg
fs
shr
cmp
or
mov
push
jnp
fbstp
mov
sbb
mov
cmp
and
pop
je
sahf
xchg
mov
and
sbb
ficompl
jne
jo
mov
dec
pusha
es
js
int
hlt
cld
mov
stos
loope
sahf
xchg
xor
pusha
dec
pop
es
mov
ret
mov
push
mov
cs
rolb
outsl
push
loop
mov
test
ja
sub
mov
xchg
dec
and
xchg
mov
add
dec
push
add
cmp
dec
aas
mov
mov
sub
mov
mov
jne
stc
mov
imul
int3
jmp
pop
or
dec
flds
cld
mov
mov
int
xchg
dec
mov
aad
push
add
into
sub
push
xchg
pop
lods
cmp
ficomps
ds
lahf
bound
dec
push
pop
push
push
push
push
dec
arpl
repnz
scas
pop
inc
inc
daa
ja
sbb
inc
std
insb
push
mov
mov
xor
adc
or
lret
xchg
hlt
push
test
xchg
in
fistpl
xchg
inc
hlt
addr16
sti
inc
jecxz
sbb
hlt
xchg
mov
pop
push
popf
outsb
jno
cmp
sub
lds
int3
and
jb
sub
jo
inc
jl
dec
movsl
out
jno
push
inc
insb
push
pop
and
roll
sahf
cmc
insl
fsubl
cltd
lock
lahf
mov
ss
test
in
xor
push
mov
sahf
pusha
xlat
pusha
xor
cmp
dec
jmp
ss
outsb
cmp
mov
xor
pop
popa
shrb
xchg
ficoml
test
popf
testl
dec
pop
bound
fcmovne
clc
rcr
push
cltd
scas
imul
pop
adc
lods
fcmove
aam
mov
xchg
clc
mov
out
mov
stos
bound
mov
daa
dec
jl
pop
push
push
inc
addb
in
dec
imul
call
adc
je
sbb
mov
and
jns
adc
pop
jnp
mov
es
int3
pop
mov
fstpl
add
movl
or
jmp
pop
sbb
mov
or
loope
sub
mov
lock
cltd
or
adc
sub
inc
add
mov
sbb
mov
pop
cmp
out
mov
in
lods
xor
int3
lock
mov
insb
fadd
pop
inc
pop
cmp
stos
mov
sub
inc
xor
out
ret
jbe
addr16
inc
sub
clc
mov
dec
sahf
lret
mov
je
sarl
std
adc
xor
aas
cmp
sub
xchg
loopne
or
cmp
ret
stc
add
jl
xchg
sub
stc
nop
mov
popa
stos
or
sub
dec
adc
js
jecxz
push
mov
jp
pushf
push
cltd
stos
adc
cmp
dec
dec
pushf
stc
cmp
push
aas
std
sub
push
scas
out
pushf
dec
mov
test
xchg
cs
cld
es
mov
xor
pop
mov
popf
and
jmp
jp
xchg
mov
adc
or
pop
mov
mov
cmp
orb
jb
mov
jle
xchg
rcr
jne
add
add
les
push
faddl
xchg
pushf
rcrb
into
test
lock
test
mov
je
scas
dec
xchg
std
fsubl
cmp
mov
cmp
ret
std
jb
aad
arpl
xchg
gs
push
in
sti
ljmp
das
fmull
stos
mov
arpl
jnp
movsl
push
dec
push
shl
loope
fwait
sbb
mov
ds
jle
jle
inc
imul
xchg
add
pop
insl
call
push
out
adc
mov
sub
jns
jae
or
add
adc
pop
cmpsb
dec
dec
rorb
pusha
sbb
in
mov
divb
les
ret
xor
cmp
stc
aad
loope
iret
cmp
cmp
sbb
inc
into
rcll
sarb
outsb
aas
movsl
popa
loop
add
mov
sbb
out
inc
outsl
lret
aam
mov
popf
mov
pushf
mov
pop
push
adc
sub
sub
out
cmp
int3
push
jmp
mov
les
inc
sbb
dec
mov
cli
push
sahf
jecxz
pop
lcall
jp
or
xchg
dec
inc
dec
adc
jns
xchg
adc
imul
xor
mov
sti
repz
notl
adc
fucomi
jl
movsl
and
jg
out
pop
lods
pop
dec
icebp
mov
push
mov
scas
push
sbb
loope
sbb
popf
fsubs
sbb
fcmovnbe
filds
or
push
dec
mov
icebp
sub
scas
mov
dec
out
mov
aas
sbb
fistl
mov
fwait
xorb
add
xchg
stos
and
jge
mov
xchg
ret
lea
fs
jno
adc
lea
incb
push
sar
mov
xchg
rolb
jno
nop
sbb
fstl
ds
lds
aaa
fs
sbb
jl
fcomp
jns
aam
adc
cmpsl
lea
loop
test
std
rcll
cwtl
jg
pop
pop
jl
pop
ja
and
adc
in
cltd
fmull
sbb
cmp
sub
mov
mov
sti
out
negb
loopne
cmp
out
cmp
and
sahf
push
push
neg
nop
mov
ljmp
fisubs
pop
ds
jo
xor
dec
cmp
sbb
std
ljmp
aad
inc
mov
add
aaa
sarb
lock
sbb
xchg
lret
mov
roll
fdivp
enter
xlat
inc
and
out
lahf
movsl
jo
inc
rcrl
push
in
loopne
pop
les
add
outsl
mov
aas
xlat
mov
cwtl
push
mov
bound
and
in
loope
iret
or
push
add
subl
ljmp
mov
push
incl
inc
pop
dec
add
and
rcrb
inc
mov
fdiv
les
add
inc
popf
stc
loope
sbb
fwait
mov
mov
faddl
xor
mov
fs
das
out
xchg
sbb
in
js
mov
xchg
fcomps
nop
lock
and
adc
stc
imul
cli
out
fwait
aam
lret
ds
test
jo
cld
fldenv
adc
push
addr16
lcall
loope
lea
popa
mov
xor
cmpsb
mov
stc
cmc
in
roll
inc
stc
and
shlb
cld
jmp
loope
lock
xor
in
test
stos
push
lcall
cmp
int3
mov
lds
or
dec
repz
mov
cmpsl
int3
jge
pop
dec
out
push
cmp
dec
in
xor
ja
ja
lds
sahf
bound
xchg
add
sub
mov
notl
adc
inc
mov
and
inc
cmp
fisubrs
lods
enter
mov
aaa
je
cmp
nop
scas
shlb
pop
test
test
cwtl
jno
ja
idiv
mov
push
lods
loope
or
insl
out
popa
mov
or
sbbb
cltd
sub
mov
jmp
adc
mov
jno
fildll
rcrl
fidivrl
cmpsb
lret
daa
mov
fstps
aam
daa
pop
jmp
sbb
cli
movsl
mov
leave
notl
xor
dec
outsl
mov
adc
mov
and
je
xlat
cld
addr16
sub
and
lods
xlat
mov
xchg
xrelease
cmp
pop
stos
inc
enter
popf
xchg
pop
lret
les
pop
fcoms
popf
mov
cmp
and
outsb
or
stos
idivb
lret
push
jp
cltd
enter
or
lds
push
stc
cmc
in
dec
das
iret
and
push
je
rolb
loopne
or
push
jg
push
mov
fcomps
jp
stc
loopne
sahf
pusha
pop
push
mov
mov
lret
cmp
cmp
das
fbstp
xchg
lret
pop
jmp
sbb
mov
xor
adc
fiaddl
add
sub
repz
mov
jo
jno
push
popf
dec
out
inc
xchg
xchg
cmp
ljmp
sbb
cmp
out
mull
cmpb
pop
xchg
and
mov
clc
pop
cld
add
and
out
sub
fwait
sub
stos
xchg
and
sub
xchg
lret
lcall
and
sub
lea
mov
xor
inc
rcrb
mov
cmc
loope
nop
and
lea
mov
jo
xorl
push
pop
or
stos
ljmp
inc
out
push
cmp
out
push
push
adc
cmp
adc
or
mov
stos
xchg
xchg
bound
push
dec
imul
cld
cmpsb
ss
es
add
icebp
mov
ds
rorl
dec
inc
push
jbe
stos
std
and
mov
aaa
test
jno
inc
jno
and
jg
pop
cmpsl
cmc
jb
sbb
addr16
pop
inc
dec
sub
xor
xor
push
push
and
call
sbb
mov
jae
fcoms
cmp
les
and
roll
adc
test
xchg
pop
fistps
sbb
pop
es
inc
sub
push
cmp
inc
push
pop
loope
hlt
sub
lret
and
jle
lea
stos
adcb
es
push
sahf
mov
and
jp
pop
jge
lods
mov
push
add
int3
and
test
add
stc
insl
jno
lret
mov
out
cs
push
push
push
mov
dec
xor
mov
or
sbb
lret
bnd
mov
decl
add
dec
cmp
push
aad
mov
fidivrs
xchg
add
xor
aaa
repnz
icebp
sub
aaa
mov
js
adc
nop
sub
pusha
rolb
dec
stos
inc
out
mov
or
push
push
push
gs
and
pop
ret
adc
sub
lods
dec
push
mov
scas
or
add
mov
push
dec
add
movsl
mov
rcl
daa
jp
dec
jbe
push
loope
jl
sbb
pop
push
mov
test
movsl
push
in
add
ret
dec
push
or
push
push
inc
xor
jmp
lds
shll
shll
movb
inc
dec
shrl
add
fs
imulb
imul
adc
lea
jae
and
data16
fwait
mov
scas
scas
push
pushf
mov
in
xchg
sbb
shll
neg
pop
cli
add
out
or
mov
ret
stos
test
mov
cltd
loop
repz
cmp
lods
xor
ja
sti
jbe
enter
push
mov
clc
inc
out
mov
addb
mov
xor
lock
fmuls
into
ret
lcall
repz
jne,pt
popf
mov
fisttpl
mov
mov
shl
dec
sub
xor
jo
popf
mov
iret
cmp
cmp
dec
shl
out
cld
adc
jnp
lock
int
xchg
shlb
sbb
adc
pop
mov
add
pop
cs
adc
adc
or
out
repnz
in
mov
mov
mov
mov
loope
adc
mov
ds
inc
shl
mov
shlb
mov
sarb
cld
pop
push
push
repz
cmc
xor
and
dec
sub
addr16
in
jmp
lea
sub
out
dec
xor
cli
js
and
sbb
outsb
cmp
adc
packsswb
mov
jecxz
repz
mov
dec
mov
enter
cmpsb
fxch
outsl
sub
dec
dec
imul
sub
in
iret
shlb
mov
mov
inc
dec
sbb
in
nop
xchg
mov
mov
in
addr16
repz
xchg
sbb
pop
adc
push
pop
rcl
pop
stos
mov
push
lcall
imulb
push
sbb
iret
adc
push
in
mov
shll
mov
dec
int3
insb
cmp
lods
cmpsl
out
dec
orl
loope
inc
fwait
mov
test
cmp
adc
pusha
cmp
call
cltd
int
xchg
mov
push
push
cmpsl
loopne
mov
sbb
ret
inc
mov
imul
push
jge
stos
mov
mov
xchg
int
or
dec
mov
xchg
dec
pop
mov
mov
pop
push
test
fisubrl
sub
test
dec
test
and
inc
in
inc
js
push
pop
je
mov
loope
in
dec
lret
imulb
cli
mov
jl,pn
jnp
dec
or
mov
adc
push
movsl
mov
jns
or
mov
xor
dec
outsb
out
in
jbe
push
fisubrl
xor
test
sub
jge
mov
insb
mov
push
mov
cmc
pop
gs
push
jb
mov
clc
lret
jae
sbb
icebp
es
jb
std
sar
pop
xlat
xchg
sbb
addb
hlt
daa
stos
lea
pop
inc
mov
or
and
pop
push
dec
xchg
mov
dec
stos
xchg
xor
test
jge
mov
add
xchg
aaa
adc
aam
fldcw
mov
or
push
mov
loop
inc
and
aad
fucom
inc
adc
sbb
pop
stc
xor
mov
add
xchg
xor
xchg
xchg
sub
mov
sub
bndstx
dec
divb
fadds
testb
fyl2x
push
stc
dec
sbbb
jg
xchg
and
xchg
out
test
movsl
dec
add
imul
dec
xor
movl
fiaddl
mov
xchg
inc
test
repz
subl
aaa
and
mov
lea
mov
ret
mov
in
shll
sti
out
lock
sbb
and
mov
andb
mov
cmp
stos
xor
sarb
aad
dec
scas
cmp
int
mov
aad
aad
dec
xorl
push
incb
into
rorl
incl
mov
mov
adc
jno
dec
loope
sbb
sub
mov
sub
fisubs
les
lret
push
xor
cmpsb
fucomi
stos
mov
insl
adc
sub
dec
clc
push
xor
xor
and
xor
sahf
imul
sti
sbb
in
movq
xchg
mov
and
pusha
xor
mov
adc
or
lea
xchg
push
pop
xor
mov
or
fidivl
xchg
lcall
iret
daa
push
dec
loopne
push
cmc
sbb
or
orb
test
sbb
in
sub
or
out
lds
pop
xor
daa
pop
aad
xor
iret
addl
add
mov
push
shll
jns
jp
or
sti
push
inc
inc
mov
inc
jo
and
addr16
jbe
sub
jb
scas
and
sub
sahf
cmpsl
push
inc
jae
fsts
push
mov
les
clc
cmpsb
cbtw
and
mov
xor
jl
iret
pop
xor
mov
das
cmp
daa
popf
adc
je
mov
fsts
movsl
xchg
adc
or
sbb
inc
imul
stc
aaa
jmp
xchg
imul
in
fs
pop
jbe
div
in
imull
jl
mov
mov
add
inc
iret
out
mov
add
cmpsb
loopne
aas
xchg
or
in
sub
in
xor
ss
inc
rorl
sub
scas
mov
dec
push
aam
xor
dec
lret
loope
fwait
mov
popa
popa
push
mov
xchg
xor
bound
repz
jae
clc
out
mov
mov
in
sbb
lahf
or
call
adc
inc
lods
or
inc
sub
shrl
adc
inc
ljmp
fdivs
mov
jmp
jb
sbb
cmpl
inc
stos
sbb
cmp
jl
pushf
outsb
jp
and
adc
sbb
loope
pop
sub
imul
inc
jns
mov
in
push
incl
dec
inc
pop
fidivrl
call
stc
push
push
fisubs
inc
mov
mov
ljmp
mov
cld
cli
lock
sbb
and
jge
sub
cs
lods
sbb
push
fstps
push
iret
or
inc
xchg
adc
and
add
push
cmp
fcompl
xchg
mov
nop
sub
in
sub
jno
mov
sarb
xor
fsubrs
dec
and
jle
ja
fbstp
sbb
pushf
cmpb
pop
jnp
sbb
sar
mov
aad
inc
cld
jne
xchg
push
jns
js
xchg
pop
cmpsl
sbbb
insl
inc
add
sbb
cmpsb
cmp
xchg
jb
push
out
rorb
mov
js
sub
inc
jle
push
arpl
jno
mov
xchg
adc
in
inc
push
popa
test
lods
sub
xor
int
pop
lea
push
jne
hlt
pop
aad
hlt
inc
jmp
mov
push
cmp
ret
push
mov
lret
jns
add
bound
incb
insb
dec
sbb
or
fdiv
jmp
push
jno
xchg
negb
mov
or
cld
out
mov
pop
pop
cltd
imul
clc
adc
mov
jbe
pop
xor
sbb
rep
js
xchg
repz
or
push
mov
or
pop
lea
lret
push
in
movsb
out
punpcklbw
add
adc
adc
mov
mov
push
ljmp
inc
in
aad
xchg
call
call
cmpsl
mov
popa
pop
jp
int3
ljmp
arpl
mov
add
icebp
add
in
nop
test
sbb
cltd
mov
mov
es
stc
fcomi
and
jb
mov
int
sub
mov
sahf
decb
inc
loop
and
repnz
mov
and
je
imul
pushf
outsl
shll
mov
push
loop
push
mov
repnz
nop
lods
call
jg
lret
mov
cmpsb
dec
sbb
aam
pop
enter
push
mov
ds
aaa
cmp
in
lret
xor
lds
xorb
outsl
jo
cmpl
divb
shll
adc
lcall
jge
or
fsubrl
stc
xchg
aas
mov
xor
sub
xor
roll
xor
xchg
sub
mov
or
sar
shrb
movsl
pop
je
aaa
cmp
dec
jmp
incl
fcmovu
sti
sbb
imul
sbb
es
xor
mov
xor
adc
hlt
mov
aaa
mov
ja
mov
xor
jne
sub
out
lret
add
mov
repz
bnd
pop
bswap
out
lods
insb
loopne
movsb
pop
mov
incl
in
inc
incl
jnp
fwait
jge
sahf
inc
push
sub
test
push
movb
jns
rorb
sbb
sub
bound
lds
mov
rcll
add
sub
lret
bound
imul
jae
lret
fisubs
lea
int
scas
loope
orl
ljmp
jb
mov
sub
add
pop
ljmp
insb
and
out
fcoml
adc
stos
xchg
xchg
sbb
in
sub
jmp
jmp
or
dec
into
xor
xchg
jne
popf
pop
inc
mov
loope
add
adc
sbb
fs
mov
pop
push
ret
mov
jle
daa
data16
cltd
cmc
pop
int
and
mov
lods
add
push
nop
xchg
push
aad
repz
scas
push
mov
fcompl
mov
loop
push
pop
mov
hlt
jp
pushf
inc
fcomps
inc
mov
test
mov
roll
push
adc
push
mov
push
add
sub
dec
fnstcw
ja
mov
mov
push
or
sub
mov
popa
or
pop
bsf
sti
jg
test
cmpsl
adc
dec
lods
stos
es
pop
inc
lcall
or
sub
insb
movsb
xchg
sub
lret
lods
lret
jp
mov
inc
cs
loopne
loopne
in
mov
or
adc
cmp
add
or
mov
mov
push
mov
clc
pop
jmp
xchg
inc
push
addr16
jle
cmp
mov
movsb
fidivl
or
mov
out
or
mov
sbb
roll
frstor
pop
scas
cmp
push
push
rcrb
mov
adc
test
and
or
or
xchg
icebp
add
jo
add
cltd
loop
pop
jg
leave
adc
or
cmpl
dec
pushf
pop
cmp
push
add
insl
fnsave
sbbl
fstpt
insb
pop
out
mov
loopne
pop
push
movl
ret
push
push
push
sbb
imul
scas
jmp
push
insb
adc
fwait
test
push
sub
repnz
adc
push
push
xlat
mov
xlat
lahf
sub
mov
jmp
int
mov
cmpl
xor
mov
cmp
pop
jnp
daa
out
les
push
xchg
aaa
inc
cld
push
roll
jns
xor
ja
jecxz
lahf
mov
call
pop
fsubrp
jmp
or
ljmp
mov
push
sbbl
jle
mov
cmp
lcall
je
cmp
mov
jnp
int3
jl
dec
mov
stos
push
insl
ss
pop
repnz
test
into
jnp
pop
mov
test
ja
adc
mov
mov
cmp
push
incl
mov
inc
add
into
orb
jb
adc
jg
adc
inc
fldenv
mov
add
rclb
hlt
sti
ja
xchg
push
repz
popf
push
sub
cmpl
arpl
dec
shll
or
push
testl
mov
loopne
xchg
or
subl
dec
fdivrs
xlat
and
ret
in
jmp
outsl
inc
js
jno
gs
frstor
sbb
addl
rol
jae
xor
inc
push
cmpsb
nop
iret
push
or
xor
mov
data16
inc
add
popa
jl
jmp
aad
xor
pop
cld
pop
fmull
jns
mov
dec
ja
xor
xchg
or
sarb
sbb
leave
push
sbb
stos
jae
push
sub
fisubs
imul
test
inc
mov
js
lds
mov
xlat
loop
xchg
pop
add
dec
popf
fidivrs
test
sahf
fcompl
inc
pop
test
adcl
sarb
and
jnp
mov
out
pop
inc
inc
or
rolb
mov
stos
lods
lock
xor
es
sarl
sbb
rcrl
movsl
or
pusha
cld
ret
lret
sbb
mov
and
xchg
clc
xchg
sub
or
repnz
in
outsl
fidivl
inc
mov
mov
or
fwait
jge
lahf
pop
cld
add
inc
insl
bound
in
sbbl
and
pop
pop
push
inc
jl
push
add
push
pop
sub
mov
aad
cmp
inc
dec
lcall
out
xchg
int3
cmp
in
imul
in
mov
xor
push
cwtl
jg
inc
pop
xchg
cmp
pop
and
sub
cmc
or
sub
sub
cli
and
mov
xchg
xor
inc
repnz
sbb
inc
lds
push
sbb
test
jle
or
xchg
and
xor
mov
out
jge
adc
add
xlat
out
enter
jo
cmp
nop
fxtract
cmpsl
inc
or
add
in
pop
xor
in
das
inc
xchg
and
and
adc
ljmp
jmp
mov
cmp
lcall
lret
cmp
inc
mov
fistpl
and
test
jmp
in
das
adc
and
xor
or
ljmp
pop
scas
mov
fcompl
test
mov
or
jl
mov
sub
xor
push
in
sbb
sbb
add
jle
hlt
cmp
stc
inc
xchg
sbb
jo
out
lret
xor
mov
lea
and
adc
nop
fidivs
sbb
iret
cmp
hlt
cmp
rcrb
pop
adc
adc
pop
data16
daa
mov
pop
push
out
call
jo
test
dec
ret
mov
cmp
push
scas
fnstcw
arpl
sbb
mov
xchg
scas
add
or
leave
fldt
push
push
mov
add
or
or
pop
ret
rcrl
mov
popa
push
sti
lock
inc
pop
cwtl
push
ds
jp
in
outsb
pop
into
imull
sbb
into
sbb
sbb
jge
addr16
rol
test
xchg
sub
mov
sbb
outsl
adc
xlat
mov
leave
or
inc
lods
fcoms
es
sbb
adc
sub
mov
or
xchg
adc
cmp
ret
cmpl
mov
mov
out
mov
push
xor
jns
and
ds
lods
sub
add
adc
mov
lcall
std
test
push
dec
jo
icebp
adc
cli
daa
dec
add
ja
adcl
xor
mov
adc
add
and
pop
jmp
xor
cmp
cmpsb
jno
xor
inc
add
out
cmp
mov
xchg
lret
das
inc
sbb
push
cmp
lcall
push
lods
xchg
cltd
dec
in
xchg
adc
cmp
or
je
inc
lds
cwtl
ret
xchg
xchg
sbb
pusha
push
into
or
push
rcrl
scas
rcrb
movsl
divb
xchg
cmpsb
add
fidivl
fs
cwtl
fldl
repz
jns
mov
repz
popa
cmp
stc
ja
or
add
icebp
shrl
dec
mov
mov
shrl
faddl
jmp
and
test
jmp
lods
sub
dec
in
insb
mov
sbb
pop
out
dec
mov
pop
stc
and
sbb
dec
mov
and
push
mov
mov
mov
outsb
loope
movb
mov
sub
arpl
mov
fstpl
cmpsb
fsubrs
call
add
pop
xor
xor
xor
sbb
lods
push
cmpsb
popa
outsb
test
hlt
mov
aas
dec
aam
jbe
nop
rcrb
outsb
fidivrl
lods
mov
and
outsl
stos
jno
pushl
aam
push
dec
pusha
xor
mov
mov
sbb
xor
dec
or
sbb
daa
jns
test
loope
pop
mov
imul
inc
clc
and
nop
mov
shll
xchg
std
out
in
ret
aad
repnz
cmc
hlt
jo
pop
xor
lds
mov
call
jmp
add
xlat
cmp
mov
icebp
push
or
adc
int
ljmp
mov
stos
adc
fcmovnu
testl
lahf
adcb
sbb
lret
jo
push
xor
jmp
scas
push
mov
xor
imul
test
inc
out
arpl
xchg
push
test
adc
push
in
insb
cmp
jmp
add
das
icebp
cld
add
cmpsb
mov
aam
mov
ficoms
dec
jp
and
mov
mov
cmp
lahf
sub
jb
cmp
rcr
xorb
mov
mov
loopne
fs
jae
add
adc
pop
std
mov
fildll
imul
aam
fmuls
jecxz
add
sbb
lret
cli
pushf
jns
cli
rolb
inc
add
adc
std
pusha
fists
push
xchg
or
fcomps
xlat
add
sbb
inc
jle
mov
pushf
jp
in
push
popf
pop
mov
lods
call
outsb
ret
sbb
imul
daa
out
js
dec
out
jge
lcall
test
jne
lcall
adc
add
psubb
push
stos
push
or
insb
sbb
scas
jno
adcb
int
add
leave
repz
inc
fidivrl
cld
aam
adc
inc
mov
sarb
add
sahf
fsubr
xlat
sub
fidivl
out
pop
flds
ja
enter
sbb
sub
xor
in
add
push
mov
mov
xchg
sub
pushf
mov
pushf
adc
fs
test
or
sub
and
dec
loope
pop
ss
addb
cltd
rcll
sub
xor
adc
pop
or
and
and
loopne
xchg
aaa
xor
pop
xchg
enter
cli
lret
inc
test
inc
and
popf
bound
sub
sarb
iret
push
push
bound
lods
lods
pop
xchg
xchg
mov
data16
nop
dec
push
dec
icebp
dec
into
push
pop
clc
dec
sub
cmpsl
and
lahf
jmp
jmp
inc
mov
add
ret
repz
bound
fldenv
inc
cs
adc
loop
ret
insb
xchg
xchg
repnz
lcall
cld
mov
sub
leave
int
inc
pmaddwd
inc
sahf
pop
sarb
mov
mov
cmp
jns
jle
adc
popa
jmp
or
sub
add
pop
and
repz
ror
bound
arpl
mov
pushl
cltd
or
fldenv
add
dec
sbbl
enter
js
sti
arpl
bnd
clc
add
mov
fwait
and
adc
jae
flds
xor
sbb
repz
in
repnz
test
cld
icebp
lods
fwait
xchg
mov
dec
and
and
inc
dec
rol
iret
orb
sub
xchg
xchg
add
sti
lock
mov
outsb
lock
mov
repnz
mov
xchg
push
push
inc
push
nop
rcll
inc
sahf
sbbl
movsb
addr16
in
int
stos
push
jge
sbbb
imul
jecxz
and
hlt
cmp
push
pusha
add
mov
ret
clc
cwtl
bound
sbb
mov
or
rorb
and
add
icebp
xchg
xor
cmpsl
mov
cmpsb
call
pop
pop
and
xchg
test
xor
pop
jno
clc
hlt
adc
cmpsl
xchg
addr16
cmp
sbb
loope
pop
jns
xlat
or
lods
insl
xchg
jp
ds
test
lds
pop
pop
mov
inc
pop
xor
fs
mov
sub
cwtl
mov
inc
shll
mov
cld
push
outsl
mov
or
imul
sar
sub
fbld
frstor
enter
dec
arpl
arpl
xor
in
loopne
mov
inc
fmul
pop
mov
jo
lcall
mov
stc
inc
in
mov
xchg
add
jae
or
push
or
jg
jle
test
inc
fstps
xor
mov
dec
imul
adc
or
inc
mov
mov
add
mov
xchg
mov
push
pop
orl
adc
mov
pop
push
test
int
insw
mov
rclb
xor
das
pop
cmp
adc
cltd
aam
push
mov
repnz
test
movsb
scas
sub
decb
push
dec
jns
add
pop
mov
jmp
in
add
and
pop
notl
pop
sbb
xchg
inc
pop
jbe
imul
ret
test
fdivrl
test
sahf
jne
jo
fwait
mov
and
cmp
int3
scas
add
add
lock
frstor
jns
pop
leave
push
mov
ficomps
gs
cmc
push
adc
add
pop
xchg
mov
xchg
mov
into
mov
mov
movsb
cli
sub
xchg
scas
rorb
call
mov
xchg
in
inc
daa
fdivrl
xorb
outsb
pop
xor
sub
flds
int3
xlat
ficompl
push
shll
mov
insl
xchg
outsb
fcomps
vpmacswd
add
cmp
pop
pop
xor
scas
lods
stc
sub
iret
pop
adc
sub
aaa
dec
les
insb
jbe
addb
mov
dec
jb
mov
mov
jns
popf
cmp
jo
jmp
push
mov
loop
pop
sti
ret
js
mov
ljmp
jbe
pushf
aas
cmp
out
xchg
imul
mov
cld
mov
push
out
or
push
pop
dec
aam
lret
leave
mov
inc
cmpsl
ja
int
pop
xchg
pop
gs
lods
aas
lods
std
test
cmpsb
adc
push
stc
xchg
jbe
ja
push
ror
adc
aaa
xchg
cld
inc
xor
movsb
ds
fwait
mov
movsb
xorl
fdiv
nop
fidivs
insl
mov
nop
movsl
mov
xor
int
pusha
bound
fdivrp
sbb
sti
shlb
test
repz
inc
xor
push
pop
jl
mov
jl
pusha
mov
xchg
xor
mov
jecxz
movl
jbe
call
cmp
test
jne
or
fucompp
pusha
popa
jnp
jge
stc
jle
repnz
lods
test
add
sarl
dec
inc
xorb
ja
dec
sar
lods
sub
inc
stos
jno
dec
test
lahf
in
gs
mov
xlat
jb
jg
sbb
das
clc
push
mov
and
jmp
push
xchg
decb
repz
mov
pop
jp
add
js
mov
push
lea
add
xor
xor
mov
lods
mov
mov
orb
and
cmp
out
in
das
cs
cmp
insb
pusha
dec
mov
cwtl
idivl
xchg
push
dec
enter
and
call
rcl
cmpsl
repz
push
mov
test
fldenv
adc
aas
loope
nop
push
cmp
out
mov
orb
pop
xlat
dec
sbb
cmp
outsb
dec
xchg
push
xor
sub
icebp
mov
add
fadds
or
add
mov
mov
and
into
enter
iret
rclw
addr16
scas
jmp
sbb
add
cltd
stos
sub
sub
dec
lret
sub
icebp
or
jg
push
scas
dec
mov
enter
sbb
arpl
out
adc
sbb
or
in
push
sub
fwait
dec
xor
dec
mov
aaa
xchg
pop
dec
cwtl
jne
xor
cmc
or
ficomps
sub
mov
stos
nop
xchg
sbb
add
and
in
pop
xchg
call
nop
movsl
cmp
pop
lock
mov
fmull
push
es
aaa
mov
leave
lods
fcmovb
data16
mov
push
xor
jl
test
push
adc
jmp
xchg
xchg
test
into
xor
pop
sbb
out
mov
stc
inc
dec
dec
jmp
mov
emms
push
mov
int3
mov
cmpsl
ret
adc
imul
sub
jle
xchg
clc
pushf
mov
or
jb
mov
lahf
add
fstp
xor
push
sbb
insl
int
iret
ljmp
test
xchg
mov
jno
idiv
push
daa
setno
mov
imul
push
mov
pop
lds
adc
pushf
fs
fidivrl
sti
mov
test
add
leave
stos
inc
in
xor
loope
and
push
cltd
add
and
mov
dec
dec
lods
jo
loope
pop
push
mov
jno
dec
lahf
sbb
ljmp
je
loopne
jmp
enter
sbb
inc
stc
rorl
lods
jae
xlat
jge
or
ds
or
sbb
cld
or
fimuls
adc
stc
icebp
cmp
mov
dec
inc
test
mov
aas
jnp
xor
gs
xlat
sbb
mov
pop
jo
ljmp
movsb
mov
mov
or
scas
shlb
cltd
mov
lea
mov
lds
sbb
test
xchg
and
addr16
cwtl
fld
xchg
dec
arpl
inc
adc
dec
iret
shlb
sarb
push
sub
add
mov
jp
mov
mov
fcompl
mov
and
add
test
fsubl
test
lret
sub
lret
xlat
sti
dec
test
rolb
cmp
fiadds
scas
insb
mov
divb
ficoms
push
loope
dec
xor
sub
mov
add
jae
cmp
test
pop
cmp
das
xchg
fs
or
lret
mov
movsb
push
mov
mov
mov
or
pop
jo
dec
rcl
int
sub
add
and
xor
add
push
icebp
mov
or
lcall
iret
jae
mov
inc
lret
data16
sbb
pop
repnz
std
stc
add
fldt
aad
sub
aad
aad
fldl2e
frndint
pop
fs
mov
dec
cwtl
jno
jle
dec
std
xchg
iret
scas
or
lcall
clc
je
negb
or
and
das
cli
dec
scas
push
inc
les
sub
jbe
pop
loop
movsl
push
fisttpl
ss
or
enter
push
sbb
cmp
pop
mov
add
mov
or
bound
or
push
push
flds
pop
jo
jecxz
jae
outsl
pop
xor
xlat
lods
mov
rcrb
lds
and
push
stc
jl
ds
adc
mov
pop
mov
mov
xchg
mov
shlb
in
inc
pop
adc
fcmovu
mov
xchg
data16
mov
cmpsl
icebp
sub
and
ds
xchg
js
pop
cld
inc
cltd
in
add
dec
in
arpl
adc
xchg
pop
jge
outsl
jno
mov
or
movb
add
test
or
lock
xlat
and
stos
popl
pop
dec
mov
enter
dec
int
xchg
aam
leave
xchg
mov
icebp
iret
movsb
sbb
insb
cmc
mov
pop
pusha
fisubl
inc
fnstcw
push
sbb
or
inc
addr16
pop
jae
in
arpl
iret
inc
inc
sbb
sub
jecxz
inc
dec
mov
pop
pushf
sbb
out
mov
mov
xchg
int3
mov
dec
ss
or
jecxz
mov
ret
lods
push
lds
cmp
sahf
pop
sarb
movsb
dec
pop
mov
pusha
nop
stos
xor
cli
lds
divl
jb
mov
jbe
out
aas
je
nop
and
xchg
shll
enter
sbb
std
xor
pop
pop
jge
or
cmc
lock
inc
rcrl
dec
push
sub
insb
out
push
ret
push
scas
sub
ret
cmp
ljmp
push
mov
cwtl
sub
leave
test
aas
push
and
flds
scas
clc
js
pushf
lcall
lock
xor
sub
pop
sahf
data16
jo
or
add
or
mov
das
pop
into
std
dec
jns
sbb
sub
shll
pop
in
push
aad
fstpt
xchg
lods
add
xorb
cmpl
cld
repz
insl
aas
push
lods
clc
mov
push
xchg
pop
pop
or
fucomi
mov
outsb
or
sbb
repnz
jo
pusha
mov
add
jge
loop
inc
into
insl
push
imul
or
lret
loop
invd
push
jecxz
imul
adc
loopne
mov
cmpsb
testb
sub
les
cmp
push
test
add
mov
fcoms
loopne
pop
fildll
xchg
xchg
inc
adc
nop
or
jecxz
rcll
fsts
mov
aad
xor
in
pop
push
push
cltd
pop
lret
jb
popf
cli
sar
dec
mov
out
push
cmc
test
xchg
jns
cld
dec
roll
or
sub
mov
stos
fdivrp
adc
cs
jne
cmc
notl
inc
sbb
mov
insl
xor
aam
pop
sbb
arpl
in
insl
aas
ja
imul
les
pop
out
mov
or
adc
dec
pop
loope
pop
push
or
push
lcall
push
cmp
mov
loope
pop
js
push
iret
jne
jp
mov
shr
stc
sahf
into
std
sub
adc
xor
add
stc
pop
out
jae
into
orl
cmp
in
dec
imul
movsl
fbstp
push
call
inc
and
je
xchg
das
mov
lods
mov
lods
rcr
adcb
and
mov
cmp
xchg
ja
ret
arpl
dec
mov
sbb
aam
mov
push
bound
pop
mov
xor
cmp
loopne
cvtpi2ps
fcmovu
out
stos
dec
es
add
loope
pop
jne
mov
enter
mov
push
nop
mov
das
xor
xchg
inc
imull
das
movsb
add
sbb
xlat
sub
jae
push
cmp
call
hlt
movsl
mov
lods
xchg
sub
and
das
or
icebp
mov
xor
lahf
loop
fsubrs
and
testl
and
in
pop
mov
mov
or
mov
cmovl
xchg
jbe
leave
mov
or
xor
decb
xchg
and
lea
lret
push
mov
push
insl
ja
inc
cmp
mov
rcll
subb
mov
test
cmp
push
movsb
aam
notl
sbb
mov
fists
movsb
and
or
or
add
fidivl
jle
xor
clc
mov
push
movsb
and
repnz
faddl
sbb
ja
lret
dec
lahf
call
xor
data16
cmp
dec
xchg
je
fcmove
lds
xchg
fsubl
std
mov
mov
sub
testb
insl
arpl
mov
leave
dec
dec
clc
xchg
jg
inc
sbb
mov
and
ljmp
mov
out
add
stos
sarl
pop
addr16
das
mov
and
or
sbb
icebp
mov
aaa
pop
mov
insl
add
out
mov
movsb
or
aam
fcompl
out
mov
jg
and
inc
jmp
sbb
add
jb
js
mov
into
notrack
adc
jno
stos
pop
and
insl
ret
jo
pusha
xor
rorb
adc
dec
cs
out
and
je
add
das
int
lret
mov
aad
dec
sub
arpl
mov
sbb
aad
sahf
imul
pushf
jno
sub
sub
sub
push
ljmp
cmc
loopne
or
xchg
xchg
ja
mov
in
inc
imul
out
idivb
jne
stos
insl
jo
fsubs
sar
add
mov
fs
xchg
std
movsl
sarl
inc
pop
xchg
cmpsb
sahf
notb
or
test
push
jp
into
and
adc
jne
mov
aam
test
imul
adc
mov
pop
add
dec
cmpsb
push
test
fwait
and
and
jmp
insb
lret
mov
adc
aaa
shrb
cwtl
jbe
sub
inc
out
ljmp
and
pop
adc
cli
hlt
push
fisubrl
les
mov
push
or
outsb
divl
fists
jle
mov
or
sbb
sub
stos
mov
data16
insl
iret
or
js
lods
mov
aad
mov
push
jg
ret
sbb
sbb
jae
sbb
stc
sti
pop
push
insl
jb
jbe
sub
or
pop
cmp
sub
js
xorb
pop
mov
nop
xchg
pop
push
js
push
mov
cmp
mov
jb
jae
ss
mov
pusha
jmp
xor
adc
jne
lcall
lret
fldl
push
repnz
sub
push
push
and
in
inc
fwait
jl
mov
shl
xchg
xor
jg
out
or
popa
xor
sub
lcall
popa
and
inc
push
pop
sub
call
sub
inc
adc
les
and
xor
add
xchg
ret
loopne
sub
cmp
fwait
xor
pop
pop
push
cmpsb
sbb
fildl
mov
sbb
sbb
addb
jno
or
stos
pushf
lcall
cs
jb
mov
mov
das
mov
pop
aas
filds
daa
xchg
xor
mov
je
add
fadd
notb
push
cmc
mov
inc
sbbl
out
movsb
xchg
scas
cmpl
sub
dec
sbb
fdivrl
imul
cmp
fwait
mov
mov
fnstsw
mov
fisubrs
cmp
or
push
cltd
mov
adc
fucomip
pop
int3
inc
adc
jns
push
xchg
pop
sub
and
test
pushf
mov
fcmovnu
adc
stos
gs
mov
gs
mov
and
test
addb
push
adc
push
sbb
mov
and
mov
adc
outsb
mov
fistl
cli
adc
or
pop
pop
shll
and
adc
adc
dec
je
xor
inc
ljmp
mov
popa
cltd
loope
mov
stc
pop
xchg
bound
mov
into
lahf
sbb
cmpsb
ja
aam
std
sbb
pushf
push
inc
pop
mov
xlat
mov
cs
sub
jno
cmp
lods
mov
outsl
les
jg
popa
cmp
and
mov
inc
int
sub
or
lcall
mov
push
pop
mov
jp
xchg
cmp
outsl
push
adc
stc
sub
stos
mov
pop
xor
jp
jns
shl
cs
inc
jbe
push
xchg
adc
and
push
jle
sub
testb
dec
pop
adc
pop
js
jmp
jae,pt
xchg
push
xor
dec
mov
pop
push
pop
cmp
outsl
and
scas
mov
or
enter
mov
mov
shll
cld
insb
sub
cli
pushf
imul
popf
insl
fdivrs
idiv
mov
enter
or
loope
out
sbb
test
mov
insb
mov
pop
and
test
pop
scas
sarb
into
cmc
int
lea
jp
pop
mov
or
dec
xchg
sbb
or
insl
push
mov
loope
jp
adc
in
mov
add
and
sub
xor
aas
cmp
inc
xor
pop
push
enter
decb
cwtl
mov
or
lret
mov
pop
add
ja
test
dec
push
and
adc
mov
inc
xchg
test
out
rorb
inc
scas
dec
movsb
fidivrs
xor
jo
and
outsb
fstpt
icebp
sahf
jmp
sub
pop
jp
fimull
sarl
shll
repz
ja
aad
xchg
mov
into
cmp
adcb
sbb
push
lods
insl
in
or
lods
pop
mov
inc
xchg
dec
pop
lds
sar
sub
xchg
sbb
push
pop
insb
iret
lods
frstor
arpl
adc
fdivs
std
sub
imul
push
adc
mov
sbb
adc
add
xor
pusha
pusha
scas
jno,pn
pop
pop
test
inc
aad
mov
lret
xchg
sahf
test
popa
add
inc
xchg
add
pop
inc
lret
mov
mov
push
loopne
imul
and
xchg
stos
and
pop
cmp
stos
or
pop
sbb
aam
adc
sub
pop
mov
pop
out
mov
or
test
out
lock
sub
xchg
fwait
gs
les
sbb
aas
dec
fnstsw
adc
xchg
add
pop
xchg
sub
xchg
xor
xchg
notl
ja
xor
divl
lods
in
inc
push
xchg
lcall
lret
mov
out
ljmp
cmp
scas
lahf
and
pop
lahf
sahf
mov
hlt
push
outsb
pop
mov
out
cmp
sub
lods
mov
jecxz
out
jbe
orl
scas
and
inc
mov
out
idiv
mov
jl
cwtl
xchg
sub
xchg
repz
cld
pop
pop
clc
repz
cmpsb
xchg
arpl
sbbb
mov
add
xor
xchg
movsb
inc
fadd
dec
add
xor
and
mov
ljmp
hlt
scas
push
sub
sub
and
lret
fisttpl
or
lahf
cmc
mov
and
sbbb
jae
pusha
xlat
xor
stos
lds
mov
and
pop
repz
push
cmp
adc
bound
or
cwtl
jb
xchg
add
cmp
cmc
inc
sub
jecxz,pt
sub
stos
ds
rcrb
mov
subl
mov
fsubrl
into
pop
sub
repnz
iret
jnp
fisttpl
jno
jle
out
xor
sbb
neg
shll
leave
in
in
into
dec
or
adc
jmp
dec
and
inc
push
push
sbb
outsb
enter
push
loope
movsb
add
inc
jne
jecxz
aad
push
ss
xor
test
jle
mov
add
cs
jp
fstl
jg
insl
xorb
push
icebp
js
cmp
inc
insl
and
xchg
fbstp
inc
cmovl
push
fs
loope
pop
arpl
mov
aad
pop
test
adc
lret
dec
pop
inc
ljmp
push
imul
xor
ficoml
dec
lcall
pop
cld
push
lldt
jmp
inc
pushw
es
pop
xchg
adc
inc
out
mov
enter
pop
sarl
jno
dec
lahf
or
andb
imul
lahf
adc
lock
mov
mov
jb
push
imul
jl
xchg
sub
fiaddl
mov
jo
in
orb
xor
and
and
icebp
mov
mov
shlb
cmpb
cwtl
cld
inc
test
outsl
arpl
fstpl
sbb
xchg
fdivs
add
cmp
and
push
mov
les
or
xchg
push
jno
mov
popf
or
loope
adc
dec
outsl
fs
sub
dec
outsl
mov
push
dec
out
jo
cmc
insl
mov
pop
nop
sub
int3
ja
push
mov
rorl
clc
out
xchg
dec
rcrb
xor
pop
or
add
add
cmpsl
decl
mov
inc
jno
int3
or
xor
cmpsl
mov
out
inc
mov
fdivs
mov
or
jnp
scas
jb
out
cmc
inc
xchg
test
dec
pop
movsl
test
dec
jns
mov
push
jo
iret
add
push
push
xor
jns
push
test
inc
popa
addr16
loopne
add
adc
cmp
cmp
cmpsl
je
dec
push
cmp
addl
lock
orb
iret
call
movsl
popf
daa
jp
aam
movsb
lds
jecxz
jns
add
nop
gs
js
fst
stc
push
pop
ja
fs
mov
xor
or
xchg
shlb
adc
inc
in
ljmp
inc
mov
imul
xchg
faddl
jnp
std
cld
inc
sbb
xchg
dec
xor
cmp
lea
xchg
fsubl
xor
test
mov
loope
mov
pop
dec
call
rcrl
sub
lahf
movsl
cmp
lods
fs
fisttpl
push
out
pop
push
ret
push
sub
lahf
pop
cmp
sbb
mov
or
mov
xchg
inc
pop
ljmp
imul
hlt
push
mov
jle
sbbb
fcoml
scas
scas
ds
iret
add
fcmovnb
test
add
lret
push
and
lea
dec
inc
out
dec
xor
mov
andb
adc
jecxz
jo
mov
push
nop
aad
push
lahf
mov
push
iret
aam
movsl
sub
rolw
rclb
dec
fwait
add
sbb
ljmp
inc
lock
or
arpl
nop
sbb
rorl
push
push
fmuls
jmp
xchg
out
push
sbb
xchg
pop
mov
jb
mov
dec
leave
insl
pop
pop
or
cmp
mov
cmp
dec
neg
roll
push
jl
aas
mov
enter
sub
mov
xchg
leave
cs
leave
mov
jl
mov
inc
push
mov
jg
lods
and
pusha
mov
data16
pop
inc
adc
adc
popa
sub
dec
mov
outsb
pushf
loopne
push
les
test
ss
sbb
stc
sub
out
cmp
lods
std
daa
mov
stos
lods
mov
mov
call
push
sbb
lods
or
cs
xchg
repnz
repz
cmpsb
add
xchg
insb
cmp
loopne
xor
sbb
fcmovbe
xlat
stos
push
pushf
jmp
popa
sub
cmpsl
aad
shlb
inc
push
fldt
xlat
pop
sub
outsb
sub
lods
movsl
pop
dec
push
sub
cmp
stos
push
dec
xchg
test
orl
repnz
pop
mov
or
sarl
lods
dec
test
inc
mov
dec
sub
mov
xor
mov
arpl
push
shll
divb
inc
test
lods
inc
imul
popf
int
pop
inc
testl
je
sbb
add
enter
xchg
pop
inc
mov
mov
and
cmpsl
mov
fdivr
aaa
popa
out
js
push
xchg
push
popf
adc
ljmp
nop
sbb
mov
jae,pt
inc
inc
cmp
jno
push
ficomps
neg
push
ror
jae
stc
je
hlt
notb
lea
dec
inc
cli
int
cmp
cwtl
or
mov
lcall
xorl
mov
mov
xor
inc
movsl
mov
das
jmp
inc
or
push
and
jno
inc
ja
pop
or
shll
movsb
xchg
jmp
popa
jnp
pop
or
incb
mov
xor
js
mov
subl
jecxz
lods
mov
stos
lahf
cmpsl
mov
mov
into
cwtl
les
xor
dec
repnz
mov
iret
ret
jp
jmp
add
mov
imul
or
sub
push
daa
jecxz
push
mov
mov
fdivl
sub
adc
xchg
dec
popa
dec
lods
adc
mov
mov
out
cmp
mov
imul
inc
das
mov
and
sbb
sub
pop
and
loope
por
cmp
mov
loope
adc
inc
fnsave
or
and
in
in
loope
push
inc
fiaddl
inc
fmuls
xor
jecxz
imul
fcomps
adc
pop
aam
mov
cmp
mov
mov
sbb
out
sbb
popf
mov
pop
xor
out
test
xchg
add
repz
pop
jne
xor
xor
stos
push
inc
arpl
stc
xchg
or
aam
push
sarb
cmp
add
jbe
fisubl
in
ds
add
test
daa
mov
mov
adc
sub
cli
addr16
adc
out
mov
inc
cmp
or
xchg
leave
std
cld
and
andb
cmp
pop
adc
jmp
cli
out
or
cmp
inc
adc
dec
test
adc
cmp
stos
lret
cld
push
xchg
xlat
mov
adc
or
lcall
cld
sub
les
mov
decl
lret
and
cmp
shl
aad
xchg
xor
js
gs
inc
int3
mov
scas
imul
sub
call
cmpsb
inc
mov
sub
loop
mov
outsl
call
jbe
xchg
outsb
shrb
mov
movb
jno
cmp
out
lret
xor
scas
cli
xor
or
sbb
jbe
cmpsb
scas
fs
fldt
out
loopne
adc
mov
out
aam
shrb
fbld
sbb
dec
jno
loope
cmc
jle
arpl
mov
lds
and
fidivs
mov
pushf
mov
je
sbb
ret
es
dec
lea
pusha
hlt
addr16
inc
dec
xor
fmul
mov
cmpsw
cmp
lods
xchg
and
dec
shlb
and
xchg
inc
imul
popa
push
xchg
push
sar
mov
sbb
push
jne
jb
popf
cmp
dec
rep
xchg
out
push
insl
cld
mov
flds
pop
jg
idivl
lock
scas
jb
jo
es
pop
pop
sbbb
add
fisubrs
test
test
rorb
cmp
in
jmp
adc
pmaxub
rcrb
fs
dec
mov
jbe
sti
xchg
sti
int
lock
jno
cmp
adc
fldcw
push
pushf
rcrb
jno
stc
add
jb
in
stos
sbb
cmpsl
push
or
and
sbb
cmp
sarb
fwait
pop
push
stos
jg
fs
or
cs
ret
test
iret
mov
fadd
xchg
stos
sub
or
pop
jbe
push
jl
int3
push
mov
mov
in
imulb
in
push
bound
bound
jle
mov
and
dec
sti
not
aad
inc
xor
cmp
arpl
push
adc
test
test
stos
frstor
fwait
xlat
push
jmp
fisttpll
dec
pop
repnz
sub
sahf
inc
mov
and
sbb
cmpl
call
loope
jnp
je
xor
jae
push
movb
xor
jle
jp
add
es
adc
sbb
jo
add
icebp
add
and
pop
mov
lahf
cltd
mov
inc
cmpb
subb
and
xchg
or
adc
ja
or
xchg
jmp
nop
data16
fidivl
aaa
je
mov
int
fdivs
int
out
dec
cmpb
pop
jbe
outsl
sub
pop
sbb
cmpsl
xchg
push
out
ja
sub
enter
sub
sbb
js
inc
cli
sbb
sahf
loope
and
into
inc
sub
fs
out
dec
loop
fsubrl
inc
aam
repz
int3
sbb
rcrb
mov
loope
dec
mov
bound
cmp
mov
js
mov
ret
jecxz
stos
loopne
sbb
gs
mov
pcmpeqb
loopne
add
dec
addl
sbb
xlat
lods
ucomiss
test
mov
cltd
sahf
mov
pop
push
test
mov
in
push
or
jo
ret
dec
jns
or
xchg
iret
jge
int3
sarl
insl
jg
or
imul
inc
sub
pop
notl
push
sub
xchg
cmp
sub
mov
loope
adc
jg
cmp
rcrl
ret
or
pop
stc
jnp
stos
adc
arpl
inc
pushw
xor
push
pop
stc
adc
adc
jne
daa
inc
rcrl
ss
dec
mov
shr
pop
add
ljmp
sbb
sbb
repz
loopne
shlb
fcoml
adc
fs
ljmp
daa
dec
lods
cli
dec
movsb
xchg
test
pop
sub
jle
sbb
lcall
inc
testb
shl
cs
sbb
and
lret
xchg
xor
sub
jb
clc
sub
add
mov
xor
les
das
pushf
out
je
push
adc
mov
int3
and
std
imul
fbld
and
mov
mov
incb
ljmp
mov
xchg
sub
lock
sub
shr
pop
adc
fists
add
inc
popf
pmuludq
ss
hlt
adc
inc
inc
popf
dec
int3
and
nop
sti
imul
push
push
or
iret
fnstcw
jbe
in
enter
shlb
pop
mov
xor
jne
adc
mov
pop
shrb
pop
repz
stos
add
fstpt
mov
addl
ffreep
cmovbe
rcrb
test
ret
push
mov
jae
dec
sbb
shl
es
push
mov
out
in
mov
fcmovne
fnstcw
inc
pop
mov
cld
ljmp
imul
cmp
imul
mov
lret
aad
rorb
cld
sarl
mov
cmpsl
enter
das
hlt
test
stos
aam
sbb
sbb
ret
adc
shlb
fdivrs
loope
insl
lret
push
or
adc
rorl
cmp
imul
or
jg
enter
mov
lret
lahf
mov
fdivrs
adc
fdivs
push
dec
js
loop
call
mov
fs
mov
pop
adc
jae
lret
push
filds
dec
jecxz
mov
jl
mov
push
lea
pop
adc
and
dec
mov
sub
sub
iret
scas
js
idivl
addl
imul
jp
rorl
mov
add
push
pop
sbb
cmp
aam
enter
fmuls
ljmp
das
xchg
push
aad
loop
sbb
fldt
jle
aas
cmp
test
mov
mov
jo
sub
xchg
pop
mov
pop
repnz
jmp
nop
jno
loop
mov
fstl
inc
cmpsl
jns
loop
lahf
std
jbe
xchg
jno
sub
xchg
lods
cli
pushf
push
aad
jo
adc
or
shr
cli
adc
xchg
inc
adc
call
nop
cmpl
js
in
in
inc
repnz
mov
outsb
mov
mov
jmp
ss
mov
xor
jge
lcall
rcll
das
scas
test
ljmp
pushf
lret
xor
gs
ja
insl
mov
bound
inc
xchg
and
pop
pusha
loope
dec
loope
out
loopne
clc
loope
jbe
xchg
mov
push
std
adc
mov
stos
shrl
nop
out
add
jo
xor
aad
mov
or
adc
out
mov
push
mov
fwait
fiaddl
subb
push
out
nop
pop
fwait
cmp
mov
enter
sub
push
xor
fcmovb
sbb
fcmovbe
iret
pop
pop
sbb
jno
icebp
mov
fnstsw
xchg
leave
jo
adc
leave
pop
push
cmpsl
mov
cmp
sti
push
jl
push
push
cmpsl
nop
setle
pop
xorb
cmp
sbb
or
pop
test
ret
mov
add
aaa
ret
jge
inc
push
mov
and
rcll
cs
or
and
icebp
or
in
inc
sbb
icebp
add
int3
jmp
imul
dec
pusha
js
sahf
sbb
outsl
push
gs
adc
cmp
cltd
and
lret
out
lods
sbb
les
daa
mov
enter
scas
xchg
fnsave
js
dec
inc
sub
cwtl
mov
lea
inc
ja
pop
arpl
pop
in
xchg
xchg
xchg
rol
int3
stos
cmp
fstpt
and
push
mov
stc
cmp
insb
and
xorb
cld
xchg
ljmp
cmp
sbb
cmpsb
and
or
aad
sbb
mov
jb
in
sti
es
cmp
jmp
jp
sbb
cmpsb
pop
movsl
lods
test
out
rclb
aaa
inc
icebp
lahf
sbb
mov
sub
sbb
adc
mov
out
xchg
add
into
pop
mov
add
pusha
mov
mov
pushf
jne
call
and
adc
shrl
ja
or
adcl
sbb
dec
xor
les
leave
dec
cmp
pop
and
out
mov
add
mov
adc
stos
decl
filds
dec
inc
repnz
sarl
mov
add
test
sub
pushl
sub
pop
out
mov
and
inc
aas
sti
mov
mov
inc
pusha
mov
xchg
and
dec
sbb
ret
mov
fsubs
lret
and
jb
repnz
aas
scas
mov
fdivs
or
arpl
stos
inc
adc
lea
jns,pt
loopne
cmpsl
xchg
jl
rorb
pop
mov
push
rolb
dec
in
sbb
dec
insb
int3
ss
fists
pop
inc
jge
sub
mov
push
and
das
arpl
ret
sbb
pop
pusha
popf
test
mov
xlat
mov
je
inc
mov
cmp
data16
aas
xchg
les
jo
je
into
js
in
cmpsb
decl
inc
inc
sti
xchg
mov
ss
mov
out
pop
and
popf
repz
call
jecxz
repnz
rcr
lcall
jbe
repnz
or
fbstp
sarl
push
mov
nop
pop
lcall
cmc
jno
lcall
cli
loope
cmp
xchg
imul
xchg
inc
mov
std
out
dec
es
pop
fisubrs
loope
push
addr16
push
call
push
in
out
adc
jmp
out
in
add
add
jge
test
and
pusha
mov
sbb
in
pop
mov
mov
sbb
push
adc
andl
and
mov
ja
daa
std
sbb
and
xlat
xor
iret
add
jecxz
icebp
pop
inc
mov
pop
rcrl
in
and
sub
jno
mov
insb
dec
add
mov
mov
jbe
add
ja
push
dec
adc
aam
sub
clc
dec
push
ret
dec
xlat
icebp
and
jb
cmc
inc
inc
mov
jg
add
push
cltd
shl
jbe
lock
xor
add
imull
outsb
mov
sbb
dec
movsb
mov
xlat
cmp
and
aaa
call
ss
out
push
scas
cmp
xchg
es
in
orps
and
mov
mulb
int3
orb
jp
cmp
adc
outsl
push
ja
lods
mov
pop
add
ficoms
lret
call
repz
daa
js
orb
data16
arpl
lcall
int
loopne
or
es
ficomps
or
inc
add
xchg
cli
xchg
mov
lods
leave
xor
out
data16
cmpsb
fcmovnu
and
ja
stos
dec
mov
or
mov
push
outsb
mov
push
xor
enter
mov
sub
pusha
outsb
push
ret
fisttps
aam
call
cmc
jmp
mov
xor
les
ss
daa
jns
arpl
and
xor
push
mov
js
int3
xchg
popf
je
out
decb
dec
push
fld
fwait
jae
or
mov
dec
pop
and
mov
arpl
adc
sub
aas
bound
mov
out
out
pop
mov
movsl
in
lcall
scas
xlat
xor
aam
cwtl
loope
lcall
data16
mulb
mov
cmp
stc
je
or
and
aad
rcrb
jmp
sbb
movsb
popf
mov
cmp
hlt
sub
or
dec
lea
xchg
mov
fdivs
enter
cltd
mov
mov
xchg
pop
and
repz
and
jmp
add
cmp
mov
testl
xor
push
sub
enter
les
xchg
fdivs
clc
adc
xor
lret
pop
sbb
popf
insl
push
pusha
dec
push
mov
sbb
pop
adc
xchg
notl
sti
loope
incl
daa
cltd
rolb
push
lock
ljmp
fadds
jp
cld
adc
sbb
pop
stc
popa
dec
or
sbb
lods
sub
push
divb
lods
xchg
andl
lods
mov
mov
xor
mov
nop
xchg
or
add
loope
fildl
ds
push
inc
mov
je
sub
adc
les
out
push
mov
aam
leave
dec
outsb
int
lods
inc
mov
outsl
pop
xchg
clc
test
es
nop
pushl
or
lret
jmp
dec
ljmp
pusha
xchg
sar
and
fnsave
cwtl
lods
aad
aas
and
jge
int3
cmpl
jle
or
aaa
sbb
and
fcompl
cmc
sub
rcll
sbb
push
mov
mov
je
mov
ret
aad
sub
push
inc
mov
std
testl
pop
push
in
sti
dec
aad
rcl
fdivp
xor
pop
dec
sbb
pusha
lret
pop
cmp
and
sbb
adc
lods
mov
sub
and
movsl
mov
jge
jb
aam
mov
mov
movsl
call
pop
xlat
or
dec
clc
jmp
mov
clc
adc
add
dec
nop
iret
mov
push
cmpsb
or
mov
jne
rcll
dec
push
push
xor
xlat
xchg
enter
ficoml
xor
cmp
stos
sbb
psubb
mov
adc
jb
pop
sbb
adc
jle
dec
cwtl
sub
pop
push
adc
rorl
mov
inc
stc
movsl
testl
hlt
test
dec
push
mov
sarl
adc
add
dec
push
jnp
fs
or
ss
adc
jmp
xor
mov
jp
mov
and
pop
push
out
push
lahf
pop
fisubs
pop
cmp
test
xor
inc
or
ss
clc
xor
lock
aaa
mov
pop
gs
dec
clc
mov
testb
sub
je
jmp
sbb
push
bound
xchg
jle,pn
in
pushf
test
xchg
xor
test
out
daa
jno
cwtl
dec
icebp
jg
cmpsb
pushf
sbb
shlb
ja
xchg
aam
shlb
push
cmpsl
or
mov
cmp
xchg
outsb
int3
ss
repz
dec
into
mov
and
insb
hlt
imul
mov
jecxz
inc
cmp
pop
push
in
aas
out
push
add
lds
fdivs
cmp
addr16
and
xchg
xchg
add
mov
idiv
push
loop
mov
mov
pop
pop
outsb
fcmovu
ja
fs
movsl
and
sub
cli
sbb
stc
xlat
repz
scas
rorl
xor
shll
sbb
jg
int3
cltd
and
mov
sbb
and
les
adc
mov
sub
adc
cmp
inc
mov
mov
or
into
int3
es
ljmp
js
xchg
stos
push
jl
cli
jae
in
shll
xor
xchg
fiadds
dec
pop
and
pop
sub
test
push
adcl
into
insb
pop
mov
dec
jg
shl
add
jg
or
mov
aaa
xchg
lret
clc
psraw
push
in
lret
xlat
nop
lcall
imulb
addb
int3
jmp
cs
pop
test
add
add
daa
push
in
lods
dec
sub
mov
cmpl
push
push
mov
dec
in
sahf
dec
imul
popf
jg
ret
dec
test
movsb
sub
xor
mov
imull
std
push
cmp
xor
sub
in
cmp
inc
shll
cmp
je
xor
adc
mov
sub
add
fildl
add
and
les
inc
pop
repnz
add
cwtl
xchg
lock
sub
cs
movsl
or
lcall
mov
insl
jnp
mov
insl
scas
mov
outsl
jge
fwait
xor
shl
jnp
repz
mov
cmpl
in
inc
loope
mov
mov
push
push
push
push
fwait
push
je
filds
cld
sbbl
push
repnz
nop
inc
stc
roll
sbb
insl
add
pop
sbb
dec
and
adc
adc
cld
jae
in
lods
sub
fwait
push
popf
sarl
lahf
sbb
shrl
mov
imul
dec
jno
lds
jne
inc
xchg
arpl
and
xchg
mov
popa
jo
mov
xor
mov
adc
and
mov
xchg
adc
daa
lds
hlt
loop
push
pop
cwtl
cmc
inc
push
xchg
mov
cwtl
lcall
and
std
cltd
mov
shll
mov
stc
xor
mov
sbb
pop
lahf
scas
jg
dec
cwtl
insb
mov
mov
xchg
cwtl
or
dec
aad
addr16
sbb
lcall
xchg
xor
stc
cmpb
push
paddsb
mov
push
and
adc
addr16
mov
jb
negl
jmp
repnz
pop
mov
mov
xor
push
jbe
lcall
adc
hlt
or
push
sti
aaa
out
ror
bound
mov
int3
mov
mov
repz
ss
in
hlt
outsl
add
dec
nop
mov
push
xor
int
jbe
inc
sbbl
lds
xchg
mov
add
or
dec
fsubl
xor
push
mov
flds
pusha
add
std
adc
jge
and
movsl
mov
clc
cltd
push
add
mov
add
fdivp
add
push
push
cmc
sub
out
pop
mov
repnz
nop
jbe
mov
dec
mov
jp
scas
add
and
movsl
or
and
or
dec
es
cmpsb
jecxz
cmp
mov
mov
inc
data16
int3
mov
sbb
cltd
scas
out
inc
push
push
gs
inc
cltd
mov
jnp
popa
leave
xchg
test
cmc
mov
pop
mov
xchg
out
cmp
lahf
xor
insl
aas
popa
mov
sub
push
jle
paddb
mov
add
inc
push
xor
jp
dec
ds
and
addr16
sub
pop
out
hlt
xor
add
add
inc
push
lret
insl
mov
mov
sub
adc
negl
pop
pop
xchg
mov
sti
sti
or
jb
dec
sub
or
aam
add
adc
in
lahf
dec
shlb
sub
outsl
cwtd
jle
in
fs
dec
outsl
lret
adc
inc
cmp
and
adc
jge
inc
xchg
add
xchg
xchg
into
icebp
test
push
inc
push
jle
aaa
pop
aam
icebp
mull
scas
iret
jge
cmpsb
iret
cld
aas
inc
je
pushf
aam
mov
mov
and
fdivrl
cmp
nop
lea
sub
pop
fdivrl
lahf
inc
notl
pop
fwait
cmp
dec
outsl
inc
or
pop
mov
lret
in
das
enter
mov
dec
stc
mov
or
push
lret
and
cltd
pop
and
ljmp
jmp
movl
mov
jno
jp
popf
popf
insl
loop
cmp
xchg
inc
roll
sbb
add
xchg
je
xchg
imul
push
jnp
ffree
jmp
ja
jo
push
movl
and
lock
pop
sbb
cmpsb
pop
add
sbb
clc
test
hlt
add
jo
mov
fld
pop
mov
pop
and
pop
aam
jae
adc
adc
lret
and
sar
insl
ds
jo
fwait
icebp
in
outsb
cmp
or
mov
cld
pusha
cmp
std
js
sarl
cmp
sub
jne
jno
stos
loope
cmp
call
cmovnp
popa
scas
icebp
push
mov
lahf
and
das
xlat
mov
scas
pushf
ret
jns
mov
inc
out
dec
stos
shrb
dec
mov
movsl
jns,pt
in
cmc
push
adc
imul
shlb
lds
mov
mov
inc
and
sub
cmp
in
sub
cli
lods
in
xchg
mov
lcall
jns
mov
aad
and
jnp
cs
adc
nop
int3
jnp
pop
mov
jle
daa
inc
jb
bound
mov
stc
jle
imul
mov
xor
int3
fistpl
lret
mov
xchg
fwait
inc
push
mov
mov
rcrl
cmp
aas
popf
and
lods
jo
cmp
jecxz
fiadds
stos
enter
add
mov
sub
pop
pusha
mov
pop
inc
jge
fnstenv
stos
xor
orl
pop
leave
push
inc
xchg
sub
outsl
pop
cmp
and
cwtl
cwtl
or
movsb
scas
push
addb
mov
aas
sti
lcall
ss
fdivrl
out
mov
lret
int
mov
jne
sub
test
mov
daa
mov
bound
adc
pop
sbb
int3
test
push
pop
imull
mull
mov
adcb
and
sbb
outsb
pushf
cmc
sub
test
in
xchg
cmp
pop
es
mov
push
adc
pushf
addb
or
jmp
loope
xchg
in
nop
aas
jnp
pushf
jnp
mov
push
cmp
mov
cld
pop
outsb
cmp
pop
pushf
mov
sub
push
mov
xchg
xor
sub
jb
flds
outsb
or
xor
pop
sbb
jmp
or
dec
out
and
jle
rclb
mov
daa
lea
cmp
cmp
xchg
pushl
imul
ficompl
nop
xchg
dec
or
adc
shll
int
iret
cmp
lcall
mov
lret
xchg
bound
cmp
pop
mov
inc
sub
in
leave
add
in
bound
cli
pop
repz
add
xor
outsl
sub
mov
ljmp
jns
in
fcoml
ficompl
cli
dec
mov
lret
jb
cmpb
loope
mov
inc
jl
cltd
pop
sahf
orb
xchg
outsl
xchg
ret
pop
xchg
scas
xor
in
stc
jo
addl
and
jnp
pop
into
cmp
test
repnz
mov
pop
jle
insb
or
adc
or
in
xchg
mov
mov
idiv
inc
gs
out
out
dec
pop
cmp
jns
xchg
bound
rorb
clc
sub
adc
xchg
push
jge
fcomp
mov
imul
xchg
sbb
and
add
lret
jo
cld
imul
mov
cltd
popf
out
pop
push
or
fdivrs
sbb
mov
sti
mov
jo
or
and
jmp
jmp
lret
mov
and
movsb
cwtl
pop
sbb
pop
add
daa
jmp
fcoms
inc
lods
imul
adc
testl
sbb
add
sbb
jno
popf
in
mov
lahf
popa
sub
add
ret
pop
jb
sub
or
cmp
aas
loop
out
sbb
lcall
cmp
adcl
aaa
dec
adcb
xchg
inc
pop
inc
jns
inc
jle
mov
stos
ret
xchg
test
mov
xlat
mov
mov
mov
sbb
popl
jo
mov
insl
lahf
dec
inc
inc
push
add
sbb
gs
or
mov
inc
mov
lods
or
push
push
std
dec
in
fwait
adc
cmc
push
inc
or
or
outsb
mov
pop
popf
adc
data16
test
stos
mov
push
mov
cmc
sub
lahf
dec
or
adc
adc
int
inc
in
into
xchg
push
lds
or
mov
and
lret
cmpsb
mov
and
xchg
sbb
sbb
fwait
jae
or
sub
pusha
into
mov
xor
add
loopne
jo
push
fucomip
xor
nop
push
test
adc
mov
nop
rclb
inc
xacquire
jbe
repnz
cwtl
lahf
pusha
adc
adc
adc
or
cwtl
push
ljmp
add
inc
inc
ds
lods
mov
imul
pop
jbe
jnp
inc
in
jno
pop
sahf
jg
jp
sbb
jmp
enter
jno
es
cmp
hlt
cmp
clc
jae
lcall
adc
mov
loopne
mov
pop
idivb
cmpsl
addr16
aas
mulb
xchg
xchg
pop
mov
sbb
add
imull
dec
iret
je
mov
outsl
test
jbe
inc
negl
lahf
mov
mov
fwait
test
call
lcall
lahf
jbe
ss
stos
cli
xchg
cltd
fisubrs
xchg
and
call
and
lock
lcall
ret
push
push
mov
sbbl
add
mov
pop
into
mov
and
notb
stc
jp
nop
inc
jle
jbe
push
cltd
xchg
pop
loop
cmpsb
fsubrl
fcompl
or
test
test
push
add
jmp
mov
popf
stos
stc
ljmp
sub
andb
outsl
jns
je
dec
out
cmp
jp
js
jo
sti
out
inc
clc
pop
pop
cmp
sub
inc
fldl
pop
inc
xor
xor
movsb
lods
inc
xchg
inc
jmp
and
sub
mov
popf
push
xor
daa
shl
inc
cmp
push
inc
mov
sub
xchg
jne
es
rol
xor
and
lea
pop
hlt
cmp
sub
leave
mov
sahf
pop
cmpsl
inc
dec
mov
jnp
popf
in
loop
inc
jno
in
stc
aas
test
dec
adc
aam
or
outsb
stos
sti
mov
movsb
pop
xchg
in
in
jl
sub
add
insb
mov
stos
mov
lcall
fisttpll
adcb
mov
xchg
mov
mov
sub
fcomip
and
outsb
test
inc
add
imul
mov
outsb
lret
pop
inc
fwait
jecxz
pop
test
add
fstps
dec
dec
push
mulb
in
stos
push
shll
adc
adc
bswap
movsl
fildll
jnp
mov
inc
sbb
fwait
repz
daa
fcoms
mov
mov
xchg
add
xor
cmp
mov
cld
negl
adcl
clc
loope
out
cmp
pop
push
mov
or
hlt
je
push
add
sub
xor
jo
push
lcall
int3
movsb
insb
pop
fsubl
ja
mov
cmp
jp
sbbl
pop
repnz
outsl
int3
nop
arpl
daa
dec
and
das
fldcw
push
xchg
add
rcll
leave
ficompl
rorl
out
cld
shlb
cmp
dec
inc
test
addl
push
dec
push
mov
or
push
mov
mov
stos
stos
sbb
cmpsb
inc
mov
and
xlat
xor
pop
je
inc
xor
cmp
repnz
repz
dec
pusha
mov
fcoml
filds
dec
adc
adcl
mov
push
adc
xor
in
xlat
mov
cmp
bound
or
adc
fcmovbe
cmpsl
cmp
outsb
syscall
xchg
shr
jae
out
sub
sub
jbe
and
xchg
cs
fwait
cli
push
loopne
ss
jb
xchg
ja
pop
cmp
dec
inc
jno
jne
mulb
sub
sbb
popf
sub
inc
out
cmp
mov
push
mov
test
push
push
xchg
mov
pop
sbb
std
sub
xlat
lret
in
std
pushf
daa
shlb
dec
jno
pop
or
and
cmp
cltd
out
cs
addr16
lcall
mov
jp,pn
test
jb
xchg
gs
pop
cmp
sub
xchg
mov
pop
inc
xor
fwait
cwtl
aad
cmp
adcb
pusha
jne
pusha
adc
push
out
push
xchg
push
and
mov
out
and
insl
push
xchg
push
repnz
gs
mov
sbb
inc
or
or
adc
stos
pop
mov
popa
test
mov
enter
xor
adc
stc
mov
movsb
jno
int3
cmp
clc
int3
dec
cmpb
jo
xchg
in
movsb
cmpsb
add
adc
loopne
inc
adc
loopne
and
fistps
adc
inc
xchg
out
call
dec
pop
mov
pop
jge
push
adc
bnd
xor
mov
and
sub
pop
xor
dec
ja
lods
add
ljmp
jl
pusha
jae
ss
arpl
pop
ds
and
xor
in
pop
hlt
loopne
in
fs
loop
test
sbb
imul
outsl
dec
loop
mov
jl
cmpsl
inc
fidivs
sti
es
mov
push
and
ret
mov
pop
sahf
xchg
pop
in
add
pop
rolb
sbb
inc
subb
inc
xorl
adc
push
inc
sub
pop
push
cmc
iret
cmp
mov
cltd
pop
pop
xlat
imul
inc
arpl
test
jno
xchg
mov
pop
add
leave
inc
cmpsb
add
or
pusha
sub
popl
push
daa
arpl
aam
fwait
inc
mov
dec
xor
push
inc
mov
es
sub
lods
stos
sub
jecxz
mov
aam
mov
xor
sub
lods
fxch
inc
and
and
out
adc
adc
sbb
scas
push
jecxz
call
dec
push
sbb
push
xor
scas
call
loope
mov
scas
fbstp
dec
jl
roll
out
pop
add
mov
cli
sub
and
cld
dec
adc
cmp
jg
mov
aad
test
fldenv
inc
xchg
push
std
mov
cli
ffree
mov
aam
inc
loope,pt
push
inc
mov
clc
sub
movsb
jae
fmuls
fstps
mov
sbb
cmpb
sbb
xchg
lods
pop
pop
pop
mov
std
sub
or
sarb
mov
jl
dec
xor
jle
mov
sbbl
fs
mov
pop
sahf
sub
xchg
mov
add
arpl
cmpsb
or
mov
bound
cld
cmp
cwtl
dec
incl
pop
push
ja
popa
xchg
jmp
cmp
insb
jnp
fsubr
fdivrs
inc
pop
loope
loop
shll
sar
jb
xadd
sti
rcll
mov
sub
das
xor
mov
scas
test
xor
sbb
ljmp
repz
repz
xor
or
or
adc
clc
dec
adc
mov
cwtl
nop
mov
adc
xchg
dec
pusha
int3
aas
imul
ficoml
pop
push
pop
pop
shlb
shrb
daa
jnp
cmp
fisubrl
and
pop
inc
pop
push
and
sti
addr16
test
imul
cmp
nop
pop
sub
pop
mov
jae
sbb
mov
test
das
shll
mov
push
push
fistps
dec
fnsave
sbb
cmp
outsl
movsb
jb
or
std
jg
xchg
push
pop
cmc
push
mov
fidivl
lret
jns
dec
pop
sbb
mov
ds
jne
aam
fs
ss
pop
cmp
in
lahf
or
pop
mov
ds
mov
imul
enter
xor
pop
cmpsl
add
cmp
fs
mov
test
xchg
into
jl
roll
xchg
push
scas
mov
mov
pushf
jp
call
pop
pop
or
inc
pop
aaa
es
es
and
jp
jg,pt
adcb
repz
gs
jg
xchg
imul
xchg
inc
add
es
mov
xor
jnp
clc
pop
push
pop
fcoms
push
fimuls
cli
test
xchg
cmpl
push
repz
sti
sub
pop
iret
in
mov
add
dec
or
arpl
sti
mov
fcoms
les
test
out
fstp
and
xchg
jl
push
mov
xorb
cltd
cs
in
movsb
mov
outsb
jg
xchg
mov
mov
in
cmp
sbb
and
adc
fildl
xorb
in
xor
jne
add
jp
sub
push
cmp
fstpt
push
mov
ret
js
jb
imul
jl
dec
sbb
imulb
sub
jg
scas
xlat
imul
cmp
mov
jge
das
gs
cmpsb
icebp
xor
inc
popa
dec
mov
outsl
push
loopne
cmp
push
push
mov
push
pop
aad
push
cmp
pop
aam
jae
outsl
add
shl
fcmovnb
sti
pop
out
dec
sub
into
cmpsl
mov
out
jnp
data16
aas
adc
push
pop
andb
aaa
pop
jle
jmp
cs
xchg
lret
sbb
or
in
enter
cmc
in
xlat
or
pop
test
and
in
sub
out
mov
mov
lret
jae
in
shlb
fwait
ljmp
hlt
roll
and
push
testl
jp
lds
jns
fidivs
mov
aas
outsl
xchg
in
enter
adcb
add
or
call
mov
test
out
faddl
inc
sub
cltd
in
mov
out
or
and
mov
insl
sbb
jo
jp
dec
int3
js
xchg
mov
addb
push
jbe
xchg
xchg
add
and
mov
lret
sbb
aaa
dec
cmp
ja
enter
iret
gs
cli
js
outsl
pop
mov
cltd
fs
test
sub
sub
loop
mov
cmc
push
sbb
daa
inc
mov
mov
sbb
push
mov
sub
cmp
je
xor
sub
mov
add
js
mov
insb
frstor
cmc
out
stc
jne
jecxz
dec
aam
fdivl
adc
mov
arpl
jns
cmp
in
pop
hlt
pop
pop
jl
imul
ja
fnstenv
mov
test
add
pusha
inc
xacquire
cmp
popf
jns
inc
sub
jbe
stos
sub
fisubl
mov
les
mov
lahf
std
dec
jmp
add
loopne
xor
sub
or
add
sbb
cmp
jo
mov
call
cmp
inc
lock
add
shrb
lret
sub
and
icebp
cmpsl
ret
jno
popa
insb
test
addr16
inc
lock
mov
sbb
inc
xor
mov
je
add
pop
call
push
xor
inc
cmp
and
fisubrl
inc
scas
dec
dec
mov
cs
lds
mov
rcrb
bound
jecxz
js
pop
push
push
or
outsl
lahf
sub
adc
push
or
in
inc
xchg
sbb
call
adc
xlat
sub
mov
fistps
pop
xchg
xor
andl
lcall
loop
inc
lea
jb
jge
mov
and
lret
notb
mov
dec
cmp
ficoml
cmc
xor
fcoml
call
mov
and
or
cmp
lock
dec
out
ss
inc
jae
sti
add
cltd
iret
jmp
and
jle
jne
cmpsl
iret
idivb
rclb
dec
mov
and
mov
sti
inc
shlw
sbb
sbb
and
and
testl
mov
adc
lahf
or
mov
ja
jnp
fimull
sub
into
pop
jae
setp
fsubl
mulb
inc
inc
test
clc
xor
insb
out
leave
pushl
leave
pop
std
xor
add
cs
mov
xor
sahf
sar
test
xor
inc
mov
sarl
nop
push
pop
test
and
mov
sbb
nop
out
xor
dec
outsb
xor
cmp
push
insl
lea
and
in
fidivrl
xor
jne
ljmp
call
repz
sahf
pop
sub
cmc
adc
loopw
notb
das
jne
adc
mov
mov
loop
lret
insb
xor
lea
repnz
cmp
cli
imul
into
mov
pop
cli
mov
xchg
jl
and
push
or
pop
insb
lods
xchg
or
dec
push
add
and
push
mov
and
fdivrs
sti
out
jbe
movsl
sub
loope
loop
outsb
jns
pop
scas
pop
loopne
imul
call
mov
std
or
or
add
inc
lods
clc
inc
repnz
add
ds
jne
test
inc
mov
roll
sbb
push
cmc
xchg
out
out
insb
fs
imul
andl
jecxz
sti
repnz
push
clc
popa
mov
gs
mov
push
pop
or
inc
test
lock
test
aaa
daa
adc
xor
imul
lcall
adc
dec
pop
std
add
mov
cmc
mov
jo
popf
or
mov
mov
xchg
test
sbb
lcall
nop
xchg
xabort
xchg
jg
mov
cmp
cmp
dec
gs
mov
cltd
add
xchg
fnstcw
ror
pop
popf
lahf
mov
xchg
or
mov
dec
dec
jmp
cmpsl
jge
inc
jp
in
iret
call
mov
or
xor
inc
scas
gs
repnz
sub
and
and
mov
fmuls
into
xchg
push
lret
adc
inc
mov
cmp
jmp
or
mov
movsb
mov
repnz
pushf
stc
rsqrtps
xor
repnz
jbe
inc
pop
pop
lods
fists
testl
push
jge
divb
pop
cld
lret
mov
ljmp
mov
mov
pop
pop
ret
or
lcall
push
rcl
add
ljmp
jle
lret
cmpsl
add
sbb
mov
popf
mov
jno
mov
mov
movsb
incb
loopne
inc
cltd
fs
push
adc
cmc
push
dec
push
int3
in
daa
sbb
jae
jl
push
iret
fldt
inc
and
jle
std
inc
and
mov
mov
sbb
repz
repnz
and
lea
xchg
add
pop
das
fstpt
call
dec
pop
push
mov
fldenv
int
mov
dec
pop
inc
out
test
out
int
imull
popa
add
call
dec
lcall
mov
mov
fisubrs
std
imul
dec
imul
or
in
jns
mov
sahf
sbb
adc
push
and
jecxz
mov
dec
mov
in
movsb
xchg
dec
inc
or
mov
data16
or
push
jno
inc
scas
in
jge
movsb
jecxz
mov
out
mov
add
jbe
mov
push
mov
out
cmc
ljmp
sub
xchg
inc
cwtl
iret
lret
and
idiv
insb
fnsave
xlat
imull
xchg
out
out
mov
shlb
inc
jg
add
addr16
sub
mov
jnp
jp
add
rolb
ljmp
push
icebp
cli
mov
movsl
add
bound
ret
sbb
dec
pop
xchg
ds
fidivrs
cmpsl
adc
mov
repnz
nop
lea
loope
adc
pop
out
sub
sub
and
cmp
mov
dec
or
inc
cmpsb
test
push
mov
adc
mov
popa
add
cld
les
jae
mov
jo
inc
mov
fisubl
inc
into
push
decl
mov
ja
push
mov
out
lahf
push
xchg
aam
add
xor
mov
pop
je
lcall
sbb
test
inc
mov
xchg
xor
mov
jbe
mov
pop
inc
std
rorb
jae
out
push
es
fisttpl
xchg
pop
and
and
mov
push
ds
mov
add
dec
jmp
mov
fcomi
andb
daa
rorl
mov
fildl
stos
pop
pop
push
jno
mov
xor
sbb
or
roll
mov
lea
add
out
xchg
out
and
and
daa
jp
rcrl
xchg
sub
cmp
es
mov
mov
fldlg2
sub
inc
push
and
cmc
nop
push
cli
xor
mov
cmpsb
and
jnp
adc
stos
push
mov
sub
gs
sbb
push
popf
ss
iret
push
cmp
and
jbe
packsswb
xor
cli
mov
mov
fstpl
sahf
push
cwtl
test
pop
int
faddl
fwait
sbb
mov
dec
sbbb
jg
rolb
push
call
xor
sarl
fsubr
stos
fidivs
and
mov
clc
xor
test
insl
dec
and
imul
pushf
addb
or
pop
scas
xor
lahf
jo
outsl
lods
pop
add
pop
mov
add
mov
mov
cmp
arpl
test
cmp
ret
dec
mov
pop
out
enter
mov
mov
xchg
cmp
pop
ljmp
pop
cmpsb
imul
mov
push
ds
push
in
sub
mov
fs
inc
and
lea
pop
xor
jns
lret
xchg
xadd
test
dec
rcl
stos
xchg
insb
mov
fmul
mov
push
stc
mov
xchg
lods
leave
les
push
pop
add
sbb
imul
add
push
mov
adc
fs
stos
outsb
call
fdivl
int
movsl
gs
xchg
fsqrt
clc
cmp
cwtl
sub
lock
inc
lret
outsb
lods
mov
outsl
ret
lret
rcrb
or
rclb
pop
test
or
test
and
pop
sahf
mov
fwait
push
shrl
jnp
out
ljmp
pop
movb
adc
jb
incb
and
add
icebp
sbb
popa
cltd
bound
std
movsl
xchg
jo
jnp
mov
out
es
mov
shll
xchg
xor
adc
and
cltd
pop
xor
fcomi
int3
in
or
cmp
mov
fwait
mov
out
inc
jl
packssdw
in
mov
fdivrp
scas
subl
mov
movb
or
lds
iret
mov
repz
pop
pop
and
in
xor
xlat
aas
dec
dec
aas
je
adc
stos
sub
lock
inc
jnp
aad
pop
jg
cmpsb
lret
rcrl
test
sub
xor
xor
mov
lods
dec
fsts
cmpl
push
ficompl
hlt
pusha
imul
cli
stc
mov
je
add
fs
mov
lahf
addl
xchg
fistpl
test
jo
and
stc
inc
std
mov
scas
incl
sahf
gs
idivb
pop
mov
jnp
adcl
adc
lds
pop
cmp
lods
cmpsl
mov
inc
cmp
repnz
xor
outsl
jp
dec
stos
insb
fsubr
mov
shl
sti
sti
xchg
fiadds
adc
or
xor
movsl
jo
cs
daa
iret
popa
fwait
cltd
xor
fs
stos
stos
test
jb
mov
out
adc
test
scas
cltd
ret
cmp
lods
fs
cmpsb
jbe
fbstp
push
xlat
sbb
sub
jmp
leave
out
cmp
jg
ljmp
mov
cmp
data16
xchg
ret
xchg
jg
ja
push
imul
in
inc
mov
dec
mov
imul
xchg
mov
sti
test
into
insb
adc
inc
daa
lahf
inc
out
pop
outsl
pop
stc
xchg
jo
mov
out
pop
fidivrs
cli
mov
arpl
pop
fmul
sbb
fwait
outsl
cmc
repnz
mov
inc
test
sbb
push
mov
call
xor
or
pop
push
cmpsl
xchg
sub
or
pop
orb
loope
imul
lea
in
mov
nop
int3
shlb
jecxz
mov
daa
cli
loope
or
ja
mov
mov
mov
jne
lcall
pop
pop
pop
shll
add
movsb
daa
mov
lea
in
rcrb
dec
cmp
pop
stos
lahf
ljmp
push
pop
mov
mov
test
hlt
pop
xchg
or
jecxz
enter
sub
push
or
push
es
test
add
or
fwait
pop
lahf
mov
add
arpl
pop
rorb
xor
xchg
push
mov
not
mov
adcb
dec
pop
mov
sub
insb
cmp
js
add
or
mov
sbbb
and
out
jmp
add
jne
out
cmpsl
mov
xor
xor
xor
cld
xchg
test
jl
lods
push
push
lahf
or
insb
je
outsb
or
dec
jge
push
dec
decb
push
ja
push
push
out
mov
mov
dec
testb
add
push
add
cs
cli
sub
jg
icebp
out
or
das
mov
xchg
pop
fistl
pop
jno
sbb
and
xor
mov
pop
pop
sbb
push
icebp
fidivrs
jp
inc
cwtl
aad
mov
push
pusha
mov
andl
das
sbb
aad
sbb
aaa
fbstp
int3
call
pop
push
push
jecxz
cs
fisttps
add
inc
xor
fs
mov
cld
adc
std
fwait
inc
fs
fcomps
add
push
push
lods
cmpxchg
popa
test
lods
xchg
jle
stos
mov
shlb
sahf
ret
lcall
rep
mov
enter
dec
or
lahf
lcall
out
jp
dec
jnp
mov
inc
clc
pop
cmp
or
sbb
div
ds
xchg
fisubl
daa
shll
rcrl
xchg
mov
lock
pop
fwait
sub
outsb
rcrb
xor
stos
bound
aas
lods
dec
cmp
lods
sahf
mov
in
repz
push
ror
repnz
daa
jecxz
imul
dec
pop
add
aaa
push
xchg
out
jl
jno
into
mov
adc
xor
insl
lret
xchg
repz
jne
stos
and
sti
sbb
dec
test
xor
in
mov
rcrl
pop
push
and
and
sbb
dec
pop
bound
les
sub
push
movsl
lcall
shrl
mov
mov
pop
mov
pop
pop
stos
jne
pushf
lahf
adc
movsb
mov
data16
lret
lcall
ja
in
mov
int3
lahf
pop
sbb
fiadds
popf
mov
test
or
imul
dec
push
or
inc
mov
pop
cmpb
mov
loop
ds
inc
jno
lahf
lock
pop
push
das
in
shll
outsl
lock
lcall
cmpsb
dec
pop
mov
les
divb
xchg
arpl
push
fcomp
xchg
pop
xor
cmc
inc
and
lds
add
call
repnz
push
jb
pushf
xor
jb
es
sub
xor
out
sub
xor
shrb
dec
leave
sub
mov
push
mov
ljmp
sbb
ss
sub
inc
mov
push
xor
inc
sub
in
adc
dec
cmc
adc
pop
mov
cmp
add
push
jns
leave
mov
rdtsc
xor
xchg
and
and
xchg
cld
stc
sbb
mov
fwait
xor
xchg
roll
xlat
test
and
jmp
sub
int
ja
push
adc
and
js
lahf
inc
fldt
xchg
es
addr16
xchg
pop
nop
fldl
test
addr16
repz
insl
iret
pop
jp
adc
mov
cmp
push
incb
cmpsl
aas
pop
cld
push
cmovbe
negl
ret
lods
pop
imul
out
push
nop
jno
stos
add
sub
or
repnz
ret
push
lret
lret
xlat
mov
pop
cmp
andb
mov
cmp
leave
jge
push
cmp
xor
ljmp
jnp
je
lahf
inc
rclb
movsb
mov
adc
out
mov
pop
stos
push
test
pop
or
xor
adc
xchg
dec
push
sub
pop
inc
icebp
mov
lret
scas
sbb
cli
inc
add
aas
pop
dec
movsb
push
sahf
fimull
sbb
incl
add
les
addr16
inc
repnz
out
mov
jbe
repz
std
pop
xchg
cli
push
adc
push
jge
jge
push
dec
test
sbb
fists
sarb
sbb
in
test
pop
add
fldt
test
mov
dec
adc
mov
stc
jge
into
push
pop
popf
leave
or
xchg
in
cli
sub
out
adc
rorl
adc
cs
andl
mov
and
mov
xchg
stc
orl
pop
aas
pop
or
in
pushf
fiaddl
sbb
cmc
je
je
push
loop
jnp
pop
xor
dec
pop
lret
lods
sub
into
cmpsb
adc
icebp
push
aad
dec
sbb
inc
adc
mov
in
adc
mov
fbld
pop
xchg
loop
sub
xor
fldcw
push
adc
inc
and
lods
pop
jne
stos
jns
xchg
leave
mov
sub
mov
inc
mov
insb
in
outsb
dec
jb
push
jno
in
xchg
xchg
lahf
cld
inc
mov
std
scas
xor
mov
mov
mov
mov
cmp
mov
loop
into
cmp
sbb
xor
xor
sub
push
cwtl
xchg
mov
push
and
andl
sub
repnz
out
cmc
ja
ret
and
aam
sub
loopne
ljmp
mov
and
pop
mov
mov
test
mov
repz
js
fs
ficoml
mov
dec
adc
fistpll
pusha
pushf
insb
push
or
jae
cmp
inc
adc
fldl
hlt
sbb
inc
pop
add
xor
and
jno
stc
out
aaa
mov
add
stos
and
and
popa
cltd
jno
inc
dec
fstpt
stos
push
xchg
jnp
cmp
jge
mov
lret
std
jmp
push
add
movsb
xchg
push
push
xchg
sub
pop
push
dec
ss
shrb
add
and
pop
xchg
push
ficoml
jns
call
in
and
aaa
ljmp
add
sahf
mov
mov
lock
aam
repz
pop
xor
lock
outsl
pusha
xor
loope
dec
call
or
or
scas
scas
add
lret
shlb
scas
outsl
jae
mov
and
addr16
repz
sbbl
sub
fcomps
jg
insl
and
add
adc
xchg
lahf
push
outsb
add
iret
int
popl
rol
int
in
rorl
in
and
imulb
xor
int
cs
icebp
repnz
inc
rolb
sub
xlat
cmp
push
lds
outsl
cs
push
adc
mov
lods
cmp
push
popf
pop
sar
cld
dec
cs
push
jecxz
test
inc
and
mov
fdiv
sbb
rcr
xchg
out
icebp
xor
xchg
clc
xor
sub
jnp
fildl
jg
add
mov
cmpsl
lds
push
add
mov
fs
outsb
shrl
push
out
sar
cltd
xor
pop
push
add
movsb
pop
cwtl
lret
cmp
stc
out
xor
fcoml
arpl
outsb
fbstp
fisubs
test
jnp
andl
movsb
movsb
jns
cmp
fbld
push
or
lahf
jbe
xchg
jge
mov
imul
xchg
mov
mov
mov
xor
jns
rorl
sbb
movsl
lock
cmp
push
outsl
xchg
dec
je
and
push
sbb
and
test
cmpsb
jo
adc
lock
movsb
cmp
pop
lods
xor
mov
shr
test
lods
xchg
dec
sub
adcb
es
sub
push
inc
hlt
xchg
jecxz
or
xchg
cli
xchg
or
test
sub
imul
jno
sti
scas
mov
and
jle
rclb
hlt
xchg
xchg
les
xorl
xor
push
inc
jo
sbb
mov
shlb
lahf
aas
test
mov
repz
or
movsl
cltd
ret
cmp
test
popa
mov
sti
mov
ret
in
sub
pushf
inc
sub
and
push
sahf
clc
cmpsb
cld
decb
movsl
mov
movsl
iret
mov
mov
fs
jecxz
mov
and
mov
fcmove
fldl
jge
dec
cmp
and
mov
adc
in
out
mull
push
or
icebp
ja
rcl
bound
lea
fcmovnu
mov
sub
out
xchg
out
jecxz
cmpsl
loopne
ds
or
sbb
cli
shr
fldcw
xchg
sub
ret
push
arpl
dec
jp
stos
fld
adc
inc
scas
dec
sub
xchg
popa
scas
push
add
in
ret
push
cmp
jnp
movsl
popf
test
cs
or
jne
jp
lea
out
pop
jo
clc
push
ds
add
xchg
xchg
xchg
gs
lahf
mov
pop
inc
inc
xor
dec
dec
cmp
mov
xchg
pop
cmp
pop
mov
mov
mov
movsl
jmp
mov
outsl
rolb
pusha
sbb
cli
cmp
cmpsl
jnp
pop
sub
ret
lret
xchg
lret
and
test
test
ljmp
fisubl
outsb
cmp
popf
fadd
xor
fcmovnbe
lret
mov
jbe
ret
out
lahf
mov
pushf
ja
mov
hlt
add
dec
pop
xor
repnz
and
aam
inc
lcall
jne
xchg
inc
pop
push
popa
inc
pop
sbb
inc
inc
push
xor
xchg
lock
jnp
lret
outsb
loope
ret
adc
adc
loopne
loop
xor
rcl
sbb
mov
cmpsb
lds
push
call
sti
or
imul
mov
xchg
rcll
jl
outsl
lret
sbb
inc
dec
in
ret
push
daa
mov
cmpsl
sub
push
dec
pop
mov
ljmp
adc
out
lds
ss
cmpsb
cmp
dec
das
xchg
fdivrl
mov
das
popf
aam
stos
out
sti
aam
in
xchg
push
sub
cmp
sbb
or
cld
out
out
add
into
icebp
sub
lods
mov
fidivrs
lcall
mov
fs
sbb
arpl
xor
cmp
ja
test
or
pop
pop
sbb
and
roll
pop
push
in
cltd
lods
fisttpll
push
xchg
mov
jp
jne
out
push
iret
out
repnz
cmp
repnz
les
sub
dec
sarb
mov
mov
inc
cmp
xor
push
push
sahf
out
xchg
mov
outsl
sub
or
jb
iret
cwtl
in
test
inc
loopne
cs
insl
jae
sbb
clc
loope
sbb
rcrl
jmp
or
aam
je
or
cmpsl
jge
in
lds
pop
ja
in
clc
mov
clc
jne
lret
mov
stos
lock
xchg
fstpt
and
dec
sub
fnsave
js
cmp
ljmp
xchg
mov
into
jmp
adc
fsubrs
loopne
fs
mov
add
shll
arpl
shll
sbb
into
hlt
sub
inc
cmp
push
push
inc
adc
jno
inc
mov
xchg
add
adc
lea
jns
mov
xchg
mull
add
mov
jne
insb
pop
push
popf
fsubrs
test
adc
inc
nop
xchg
push
jge
dec
push
xchg
shll
mov
in
jmp
sub
flds
loopne
ret
mov
pop
mov
lret
pop
jae
out
mov
ljmp
mov
imul
cmp
adc
push
imul
cs
pop
mov
mov
hlt
aas
popa
xor
aad
dec
xchg
mov
push
push
jg
pop
pop
iret
stc
mov
std
pop
ss
ret
ret
or
pop
pop
push
cmc
ja
dec
fcoms
imul
inc
cli
cwtl
pop
inc
push
pop
inc
dec
icebp
arpl
lret
ror
mov
repz
xchg
jl
cmpsl
jns
add
sbb
nop
mov
pop
mov
dec
imul
in
add
push
push
ss
in
push
xor
mov
cmp
ljmp
mov
add
mov
loopne
xchg
mov
shlb
call
insl
popf
insb
arpl
imul
push
test
lds
out
push
pop
inc
mov
cli
sarb
pop
out
push
repz
pushf
push
inc
xchg
in
aas
jne
cs
lock
sar
cltd
push
sbb
iret
test
cmp
sbbl
repnz
lcall
movsb
out
sub
orps
rcrb
jmp
repz
movsb
lea
bound
fnsave
enter
pop
xchg
testl
mov
cltd
push
mov
clc
addb
les
shll
xor
aaa
cmp
dec
xor
clc
push
mov
jae
lret
cmpsl
sub
aaa
xchg
or
push
outsl
push
push
out
out
or
xchg
xchg
cli
adc
scas
lock
jo
shrl
sbb
inc
mov
lds
adc
and
faddl
fsubrl
dec
sub
cld
adc
mov
mov
mov
aaa
test
xchg
aaa
fidivrl
or
iret
pop
sbb
jl
sub
int
lods
lea
adc
roll
scas
cmp
dec
lahf
psrlw
sub
packsswb
xchg
int
scas
jecxz
jg
das
je
insl
movsl
push
insb
popf
sub
push
out
xchg
dec
add
pop
cmp
movsb
cld
xor
mov
outsb
cli
ss
xchg
test
add
push
adc
out
inc
dec
cmc
xor
and
xor
repnz
pop
divb
xchg
popf
je
xor
dec
push
int3
xchg
scas
lock
push
leave
adc
pusha
subl
aaa
scas
test
mov
insl
jo
jge
inc
or
xor
es
in
mov
int
mov
fdivs
arpl
je
out
out
add
icebp
adc
fbld
pop
cmp
aad
dec
vpcomb
iret
adc
fs
push
jecxz
and
notl
ffree
add
scas
fidivrs
push
and
repz
popl
je
cmpsl
pushf
in
jbe
pop
out
mov
and
ja
push
dec
clc
in
jmp
push
fcom
imul
cmpsl
sub
sub
popa
jg
cmpsl
repz
je
push
sbb
inc
idivb
jno
push
mov
subb
add
lret
in
dec
movsb
jb
jmp
adc
mov
jp
jbe
pop
add
lcall
xlat
clc
decb
call
stos
jb
sub
cmp
cmpsl
nop
jp
add
cmp
jl
rcrb
and
out
xor
pop
das
push
mov
jbe
bound
fwait
cld
pop
mov
dec
hlt
int3
sbb
jp
lds
xchg
add
xor
jb
mov
enter
mov
out
xchg
movsl
repnz
mov
rol
rclb
sbb
mov
adc
cmp
aad
ds
call
push
push
mov
fldl
push
clc
mov
jo
xchg
jne
out
lcall
xchg
add
sbb
shl
js
les
hlt
sub
or
cli
sbb
push
xchg
scas
lods
sub
mov
test
stos
or
and
xchg
add
jp
sbb
jecxz
insb
xchg
movsb
lea
jnp
outsb
sub
xchg
lret
sbb
ret
int3
and
mov
lods
mov
or
fisubs
testb
cwtl
jl
inc
xor
push
push
addb
or
cmpsb
xchg
out
data16
mov
and
std
fbstp
mov
icebp
xor
clc
mov
pushw
leave
pushf
push
jecxz
loopne
mov
jae
fsubr
inc
in
add
sbb
jne
cmp
push
mov
dec
fnstenv
mov
mov
add
xchg
xchg
xor
repnz
xor
dec
xlat
fiadds
mov
popa
repnz
mov
push
pop
sbb
push
cmc
not
mov
popf
sahf
jnp
outsl
dec
or
push
xor
test
add
jo
loope
test
mov
bound
push
add
push
push
mov
pop
add
adc
scas
pop
movsb
ja
lcall
xchg
adc
movsw
pop
in
cmpsl
dec
test
arpl
cmp
dec
ss
stos
arpl
pop
fbstp
aas
sub
pop
stos
das
dec
imul
ds
push
enter
xlat
imul
xor
sti
jnp
jmp
mov
aad
mov
fwait
test
pop
jcxz
sbb
aad
mov
xor
pop
jno
push
in
int
pop
sub
lret
cmp
ja
outsl
insb
xor
sbb
inc
sub
nop
loopne
addb
out
ret
lods
enter
loop
nop
dec
dec
mov
pop
mov
fnstcw
push
das
inc
orl
js
out
nop
sbb
fbstp
lods
cmc
fistl
mov
jmp
jmp
add
data16
dec
push
xchg
jmp
jns
or
pushf
pushf
popf
in
rclb
sti
add
test
adc
loopne
inc
call
sbb
fsubs
dec
xchg
mov
rol
mov
js
jne
cwtl
js
and
out
cld
loop
push
jecxz
pop
lods
out
loope
fcoms
cmc
cs
and
and
cli
or
imul
cmp
dec
push
popf
pop
por
and
xor
data16
addl
mov
xchg
cmpsb
in
cmpsl
jmp
inc
scas
popf
ljmp
sub
rorb
dec
aam
jbe
ss
pusha
cmpb
pop
mov
in
sbb
in
pop
and
sbb
cmpsl
xchg
data16
cli
test
loop
fcmovne
cmp
mov
sub
out
inc
pop
mov
cwtl
mov
test
and
les
cmp
jno
dec
jle,pt
lcall
out
std
or
jp
xor
cltd
shlb
lea
rolb
ret
cmp
dec
mov
fdivrl
xchg
mov
or
mov
hlt
or
les
das
sarl
adcl
lahf
adc
rcrb
and
leave
je
mov
mov
outsb
pop
dec
sub
mov
push
cmp
mov
push
inc
xchg
sub
insl
xor
and
in
jb
push
jmp
sbb
mov
jecxz
imul
icebp
cmp
loopne
imulb
daa
aad
in
mov
jecxz
sbb
sub
sar
fadds
leave
sar
in
jb
jp
loopne
cmp
or
sub
jecxz
sbb
inc
jecxz
mov
xchg
xor
xor
leave
xlat
scas
shrl
or
sub
xchg
dec
cmpsl
dec
push
sar
cmp
ret
outsl
test
scas
shlb
scas
js
loope
lret
adc
movsl
addr16
mov
and
or
mov
flds
sbb
add
mov
push
out
xor
enter
jno
adc
cmc
in
into
mov
cwtl
mov
test
xor
jle
adc
ret
hlt
sahf
imul
push
mov
out
xor
jg
and
negb
int
jo
push
sub
sbb
dec
sub
adc
insb
or
scas
push
lret
jecxz
jecxz
lret
mov
scas
lcall
fcmove
lahf
arpl
addr16
pop
push
fstl
jmp
xchg
xor
pushf
lcall
sub
mov
lret
movsl
fnstsw
or
mov
outsb
sub
in
or
ds
imul
pop
ljmp
rclb
add
cmp
mov
sti
push
jnp
les
ja
adc
hlt
or
jmp
outsl
xor
je
popa
mov
clc
fcoms
adc
add
in
aas
ljmp
jae
sti
jg
pop
and
out
fs
add
sub
push
xchg
pop
mov
and
into
sub
mov
mov
mov
pusha
mov
fidivrl
ss
test
in
push
push
in
inc
inc
jecxz
into
dec
shrl
mov
clc
mov
fstpl
sahf
imul
pusha
lret
and
mov
int
fildl
es
lods
stos
jmp
out
lods
inc
pusha
imul
xchg
cli
and
or
cmp
inc
clc
and
mov
xchg
cmp
lods
mov
cmp
mov
jb
jp
xchg
mov
in
das
xchg
and
arpl
outsl
in
es
mov
jecxz
jecxz
loop
jmp
xchg
push
enter
cmpsb
out
pop
or
lods
add
xchg
inc
ret
sarl
andb
in
fiadds
hlt
rolb
jp
in
insl
mov
inc
rclb
sub
jl
addl
fldcw
mov
fidivs
scas
lods
dec
leave
shrl
mov
popa
jle
repz
lahf
jle
dec
rolb
push
mov
pop
ss
daa
jecxz
dec
test
in
sub
cmp
xchg
dec
sahf
cmp
cmp
addb
pop
test
repz
clc
adc
fyl2x
faddl
inc
adc
xor
enter
ljmp
rclb
cld
rorl
cmp
adc
add
aaa
mov
loope
leave
and
xor
and
xor
dec
inc
fsubr
roll
movsb
je
mov
addr16
lret
xor
dec
idiv
ret
jge
fisubrs
xor
sub
adc
xor
ret
cmc
mov
popa
test
jecxz
int3
jl
and
sbb
xor
mov
pusha
movsl
push
dec
and
push
sub
movsb
mov
xchg
xor
pop
inc
ror
cmpb
inc
mov
les
cmpsb
sbb
sub
jno
lea
inc
mov
pop
push
shrb
cld
testb
mov
xor
add
lahf
jg
test
push
les
inc
imul
div
xchg
stos
testb
jp
mov
rorl
adc
pushf
fists
repz
fldl
mov
sbb
push
test
aas
je
fidivl
adc
shlb
and
lret
and
insb
es
out
xchg
mov
mov
push
aaa
mov
dec
mov
notb
enter
push
mov
mov
mov
inc
les
lret
leave
mov
inc
pushf
jmp
aad
fists
lods
mov
xor
pop
xchg
in
bswap
mov
sub
mov
push
or
leave
pop
jne
lods
xchg
sbb
shlb
xor
xchg
sarl
jne
arpl
idiv
nop
adc
inc
dec
jmp
mov
mov
inc
loope
jp
sub
subl
into
inc
pushf
pop
add
pop
roll
xor
pop
sub
adc
cmp
push
fcmovnu
mov
test
xchg
int3
jae
cmc
push
sub
arpl
dec
cmp
shll
lock
mov
lret
mov
sbb
xor
add
stc
add
xchg
fs
fistl
fidivrl
in
lahf
xchg
push
dec
je
add
gs
jne
sti
mov
ja
push
jbe
pushf
xchg
fst
aad
scas
shr
mov
dec
idivb
icebp
dec
mulb
dec
aad
push
mov
add
xchg
notl
fisttps
loop
nop
jbe
mov
push
imul
pop
pop
mov
aaa
xor
xor
push
es
jecxz
add
jne
sub
push
or
add
push
mov
jge
jns
cmpsb
sti
jmp
rcrl
scas
and
and
mov
add
test
lahf
push
push
mov
or
mov
or
mov
insb
shlb
mov
lret
sub
stos
ja
pcmpeqb
mov
movq
push
popf
xchg
out
adc
fs
loop
mov
add
addr16
aaa
cmp
pop
mov
lods
out
mov
hlt
movsl
fwait
dec
add
popf
outsb
mov
outsb
xchg
push
lods
dec
insl
loope
leave
dec
shrb
add
cmp
jno
pop
ficoml
add
addb
outsl
sti
enter
mov
insb
sti
inc
jne
xchg
lea
push
jnp
out
ja
push
fdivl
push
add
fistl
hlt
jecxz
bound
mov
pop
mov
fimuls
mov
push
lcall
adc
or
push
and
sub
pop
add
pop
adc
fstps
test
rolb
fstl
mov
iret
outsb
out
lods
ret
and
pop
fdivrl
insl
mov
popf
subl
insl
mov
outsl
push
inc
je
or
push
mov
aas
push
aaa
imul
cli
and
cs
daa
xchg
inc
aad
test
test
insb
lock
lods
subl
movsl
enter
sub
ss
mov
cmp
in
es
lock
jae
sbb
xor
pop
inc
jb
pushf
incl
arpl
push
cld
and
pop
lcall
sarl
or
test
scas
and
inc
jb
xor
add
sub
jb
stos
and
add
hlt
jo
sub
pop
jnp
cwtl
jp
xchg
sub
or
roll
fwait
cmc
xchg
mov
ret
pop
ja
aaa
inc
inc
shll
sub
std
sbb
or
and
and
push
shll
into
das
mov
cmpxchg8b
lret
sbb
jb
jle
cmp
mov
in
lcall
popf
pop
mov
lahf
xor
mov
cmp
mov
jb
xchg
call
call
jle
lahf
sti
inc
xchg
out
fcoml
bound
pop
xor
cmp
sti
sbb
mov
xchg
outsb
or
jns
and
lods
or
ja
js
nop
cmpsb
sbb
les
shlb
pop
hlt
mulb
cmp
or
pop
cmpsl
mov
popa
add
call
sbb
push
jne
push
mov
xor
into
movsl
or
xor
jnp
sarl
or
aad
xchg
jle
sbb
sbb
add
scas
pop
inc
cmpsb
xlat
dec
sahf
movsl
cwtl
leave
fildl
loope
push
dec
gs
add
subl
outsb
pop
and
mov
sbb
mov
cmpb
fmull
cmp
mov
jbe
sti
leave
fidivrl
jge
cld
jb
aam
jae
mov
jl
inc
insb
nop
dec
or
lods
push
sub
stos
adc
repnz
je
inc
push
popf
out
out
cmp
cli
mov
dec
xlat
add
iret
xor
test
mov
add
sahf
pxor
add
insb
das
mov
out
loop
xchg
rcrb
sarb
dec
int3
popa
pop
enter
loopne
cltd
faddl
and
shll
dec
adc
inc
ret
rorl
dec
icebp
mov
test
shl
imul
sbb
in
or
mov
out
cmp
sub
loope
sti
jmp
cwtl
or
dec
imull
mov
cltd
inc
jmp
out
mov
dec
pop
adc
in
xchg
push
stos
adcl
mov
mov
inc
or
loopne
pop
lret
mov
cmpb
sbb
pop
les
or
adc
pushf
ja
jp
shrb
hlt
mov
ret
mov
cld
mov
jp
jae
lret
adc
jae
sarb
xchg
xchg
out
arpl
aam
jno
inc
enter
jnp
pop
mov
mov
cmp
out
ret
mov
iret
lds
or
sub
jmp
outsl
push
pusha
icebp
int
scas
mov
xor
and
push
dec
mov
mov
es
push
xchg
pop
es
roll
push
hlt
push
negb
insb
sub
loope
sub
jb
push
xlat
aad
test
sbb
adc
sbb
int3
dec
jns
xchg
aas
and
stos
mov
mov
faddl
in
jns
sarl
arpl
mov
dec
push
stos
pop
push
jecxz
mov
push
sbb
add
cmp
mov
lds
imulb
repz
sub
add
sub
int
mov
rcrb
fistps
rorl
arpl
sbbb
xchg
aam
jno
stos
push
and
jnp
lahf
movsl
ret
movsl
xor
mov
or
sarl
pop
int
mov
and
in
xchg
dec
pusha
adc
lock
push
ja
sub
shl
mov
push
fsubl
aam
shlb
xor
cmp
xchg
fiadds
add
mov
adc
or
xor
pop
test
and
test
xchg
jne
pop
pop
dec
xor
scas
push
ret
or
int3
ss
xor
fisubs
ljmp
lcall
lret
inc
mov
ljmp
cs
sub
leave
call
out
sub
pop
pop
cmp
lea
mov
sub
fidivrs
arpl
or
and
xor
mov
pop
pop
in
js
pop
popa
cmp
lock
xor
jo
jl
out
sbb
stc
aaa
adc
cmp
hlt
stos
and
out
aam
pop
add
adc
fstl
aaa
clc
loop
rorl
fiadds
stc
test
fsubrp
cli
add
scas
ror
sbb
out
lock
loope
insl
xchg
mov
mov
sbb
mov
inc
adc
aam
jecxz
ss
out
xor
push
fwait
cmp
cmp
movsb
sbb
mov
xchg
lock
test
xchg
lods
inc
adc
mov
call
frstor
cmpsb
mov
mov
mov
daa
hlt
repz
or
ficomps
ret
push
test
xchg
scas
ja
add
xchg
dec
mov
mov
fisubrl
bound
fnstcw
popl
xor
fucomip
es
jne
sub
inc
mov
push
xchg
push
adc
fisubl
js
ret
and
loope
popl
js
fsubs
rolb
sbb
adc
mov
jle
mov
push
aaa
in
in
mov
xchg
fs
pop
pop
sbb
hlt
sub
sbb
ror
add
out
dec
adc
sub
insl
mov
push
inc
adc
rolb
dec
sub
out
cmp
nop
sti
cmp
mov
cmc
push
es
mov
jl
mul
mov
ret
stos
jno
aaa
int
lahf
jae
add
dec
or
out
adc
mov
bound
lea
cmc
std
push
pop
xchg
jg
ja
add
push
add
enter
dec
aas
sar
mov
daa
clc
sub
or
mov
js
aaa
or
ret
pop
pop
enter
pop
in
insl
dec
jno
out
das
mov
daa
fistpll
push
adc
jns
popf
pop
mov
mov
les
inc
jo
xorb
std
mov
pop
pop
lcall
int
fimuls
mov
in
dec
mov
in
and
sub
mov
cmc
clc
ss
daa
xor
loopne
lahf
arpl
inc
dec
mov
cmp
jle
or
jmp
mov
xor
adc
hlt
aaa
sub
lods
dec
faddl
xchg
mov
aam
pop
mov
in
add
push
inc
inc
push
inc
ret
jp
and
add
cmp
push
les
or
push
in
cs
inc
notb
bound
xchg
int
clc
inc
mov
jb
push
clc
out
or
mov
xor
cmovg
adc
in
fsubl
sti
outsb
inc
lahf
adc
inc
iret
mov
or
shrl
add
int3
push
scas
jg
mov
repz
jg
cs
pop
in
or
mov
jle
jmp
and
dec
imul
pop
sub
lret
mov
mov
mov
push
adc
mov
inc
inc
jg
pop
mov
inc
dec
push
mov
mov
aam
jnp
test
sbb
mov
and
ljmp
mov
jle
push
insl
inc
jp
addb
int3
mov
cmp
popf
orb
fnsave
cmp
cmp
ljmp
mov
jnp
pop
push
negl
rcrb
insl
xchg
or
loop
push
arpl
cmp
sub
addr16
int
sbb
int3
ljmp
aaa
cwtl
loop
inc
push
daa
jae
cmpl
dec
cld
push
sbbb
popa
cmp
sbb
mov
enter
lds
test
push
mov
sub
fdivs
lea
sbb
cs
pusha
mov
mov
add
fnsave
jae
dec
add
inc
cmp
dec
pop
outsb
mov
ds
mov
lods
and
lea
cmp
pop
mov
shll
jg
inc
mov
adc
push
xchg
dec
popf
aad
aas
scas
dec
mov
int
into
cmpsl
out
jno
mov
shl
ror
loop
bound
movsb
jnp
js
sbb
cltd
js
js
push
lea
dec
mov
lcall
mov
jbe
shll
dec
into
push
cmpsl
push
sub
cwtl
cmp
pop
int3
jle
outsl
lock
jne
push
xchg
xor
sbb
mov
test
cmp
pusha
insl
leave
data16
les
cmp
jp
pop
sbb
pop
movsl
dec
xchg
jno
jmp
testb
imulb
pop
repz
cli
mov
xor
into
push
xchg
mov
xor
and
xor
mov
rcll
out
add
sbb
orb
mov
fsubp
movsl
jb
jle
mov
inc
xchg
xor
adc
fs
sub
fdiv
out
xor
es
sub
fcompl
xor
ds
in
js
sbb
adc
stc
add
shrl
inc
inc
aas
fwait
jns
add
dec
lods
mov
cld
mov
pop
or
dec
dec
pop
fadds
mov
mull
pop
add
push
stc
push
addb
dec
out
push
pusha
pop
xchg
add
gs
ljmp
sub
fs
out
into
or
sub
xchg
fcoms
int3
sarb
xor
xchg
push
mov
cli
test
ja
in
stos
push
int3
scas
js
dec
popf
fiadds
mov
push
hlt
mull
pop
push
push
rclb
dec
adc
inc
mov
scas
or
andb
jmp
dec
aas
pop
dec
fnstsw
setle
dec
push
add
jge
sti
imul
sti
jb
nop
addr16
lock
dec
repz
pop
arpl
lock
int
pop
mov
nop
lea
add
xchg
inc
iret
pushf
pop
mov
testl
pop
and
rorl
push
movsl
jne
push
pop
xchg
lahf
arpl
mov
mov
or
insl
adc
xor
dec
nop
add
sub
dec
cmc
out
sbb
mov
xlat
mov
fimuls
pop
in
cltd
inc
sahf
push
test
inc
jle
js
stos
fdiv
cmp
pop
mov
cmp
cltd
xchg
idivb
xchg
loop
lods
enter
push
mov
pop
push
mov
ds
ffree
shl
xchg
mov
leave
cltd
push
add
les
aas
ljmp
in
sub
dec
fisttps
mulb
dec
mov
adc
fsts
jnp
aam
outsl
insl
pop
cmp
mov
fcoms
cmpsb
aas
and
pop
xchg
ret
js
lret
loop
jo
inc
adc
clc
sarb
pop
data16
shrb
cmpsb
cmp
roll
mov
xchg
aaa
loope
add
decb
pop
call
jl
dec
out
pushf
sub
rcrb
orl
scas
mov
cmpl
push
je
xchg
jle
pop
or
outsb
or
jg
fwait
sbb
cs
jp
imul
leave
push
mov
adc
shll
mov
adc
sbb
cmp
xchg
pop
pop
in
dec
adc
xchg
mov
shl
xchg
in
dec
sub
inc
push
out
adc
cmp
and
mov
inc
xor
mov
ds
push
xor
cli
fs
ret
cmp
test
inc
jmp
mov
repz
xchg
cmp
test
xor
sbb
stc
cmp
orl
push
popa
or
add
push
aad
xchg
mov
lsl
mov
xorl
scas
mov
mov
inc
ret
push
andl
xchg
pop
mov
lar
push
les
xchg
mov
pop
pushf
sbb
jge
mov
repnz
pop
push
outsl
push
xor
imull
push
or
out
sub
xor
fwait
xor
out
adc
pop
in
xor
jg
mov
push
fwait
ja
pusha
out
dec
pop
pop
out
dec
xchg
lea
enter
movsl
xchg
mull
ss
dec
sub
sub
data16
js
mov
ret
inc
push
test
add
mov
mov
jecxz
inc
into
xor
loope
cmpsb
nop
hlt
ret
sub
out
add
jle
push
or
cmp
pop
movsl
cmp
in
or
lret
cmp
xor
xchg
iret
cmc
push
int
lsl
fisubs
or
xchg
mov
je
outsl
xchg
xchg
into
sub
xor
pop
dec
mov
cmc
jmp
adc
adc
or
test
sbb
fsubl
scas
shlb
xchg
mov
pop
jnp
cmpsb
and
cmpsb
lods
out
adc
movsb
outsl
scas
pushf
bound
dec
imul
cld
ja
test
inc
js
or
inc
jmp
mov
jb
mov
adc
into
dec
das
adc
repz
aad
daa
sub
jbe,pt
pop
and
in
mov
mov
add
cmp
loopne
daa
push
jne
pushf
stos
jl
pushf
gs
leave
xchg
jmp
lahf
ja
scas
aad
lea
add
stos
out
daa
sbb
pop
push
jnp
mov
addr16
or
push
inc
in
xor
cmp
loop
lahf
mov
or
inc
pop
icebp
or
or
cmp
rcrb
loopne
out
cmp
outsl
addl
mov
test
or
xor
dec
mov
push
or
mov
outsb
int3
in
push
xor
mov
and
sub
fadd
jecxz
inc
fdivr
jmp
push
push
xchg
sub
int
pop
and
xor
sub
cmp
shl
push
ret
add
cmpsb
aaa
xchg
cmp
lret
je
movzbl
lret
or
and
mov
mov
popf
outsl
js
rol
mov
dec
or
pop
cwtl
je
test
sbb
cmp
pusha
xor
inc
fisttpll
es
int3
arpl
ss
mov
shl
cmp
loopne
sahf
scas
pop
cmp
adc
adc
adc
shll
aaa
mov
push
jge
mov
jmp
leave
hlt
inc
fcoml
in
cmc
mov
pop
repnz
mov
ss
lret
jns
xchg
fdivl
mov
out
in
nop
inc
jnp
xchg
adc
sbb
dec
stos
lods
sti
or
and
push
imull
dec
fsubs
out
lock
adc
pop
cmp
push
mov
mov
push
push
scas
mov
xor
sbb
xor
ja
ljmp
mov
mov
mov
fisubrs
je
data16
popa
out
xchg
test
dec
mov
dec
jno
lcall
adc
jnp
add
cmpsl
mov
mov
gs
mov
push
dec
out
test
jne
loope
fldz
or
addr16
faddl
adc
mov
adcl
dec
aad
mov
inc
push
outsb
push
adc
mulb
test
mov
test
dec
inc
repnz
movsb
sub
inc
jns
push
xor
loopne
pop
cmpsl
sbb
movsl
testl
data16
lock
imul
lea
add
mov
jmp
add
not
fdivrp
in
movl
rcrl
fmull
mov
add
jle
jmp
andl
mov
push
pop
add
sbb
mov
or
sub
mov
and
mov
lcall
into
cltd
mov
mov
adc
and
sub
xchg
xchg
sahf
out
sbb
aad
mov
gs
pop
out
dec
lahf
pop
popa
lcall
enter
cmpsl
cmp
sbb
cmp
xor
xchg
loopne
fcoml
repz
lret
shl
mov
fisubrl
insb
mov
push
je
or
fadds
ds
test
inc
dec
loop
fwait
xor
dec
xlat
mov
mov
pop
xlat
jmp
cmpsb
test
xor
mov
dec
jo
and
mov
pop
pop
jo
xor
scas
or
xor
xchg
sbb
int
adc
ret
pop
jecxz
ds
cli
add
mov
insl
mov
fwait
push
sbb
and
inc
divl
adc
leave
sbb
rorb
shl
movsl
das
inc
pop
push
push
lahf
jno
adc
repz
mov
in
sub
enter
cmp
outsl
adc
mov
jg
out
mov
push
repz
leave
xchg
and
pop
dec
and
xchg
out
jnp
sub
cmp
push
adc
negl
gs
jecxz
xchg
cmpb
inc
jge
mov
mov
mov
movsb
cmp
icebp
mov
test
fnsave
mov
aas
xor
fadd
out
adc
add
adc
mov
mov
les
pop
pop
mov
sbb
xchg
add
cmpsl
test
aam
fcoms
fisubrl
cwtl
jp
cmpb
jmp
outsb
loope
inc
pop
cs
jl
cmc
popf
cltd
push
test
jbe
push
call
push
add
arpl
inc
sub
xlat
add
sti
js
or
in
cs
test
insl
das
ret
cltd
out
lret
mov
cmp
dec
leave
jae
push
dec
lods
movsl
cld
or
ds
subl
mov
mov
imull
je
xchg
mov
xchg
fsubs
and
inc
or
ret
pop
adc
sub
mov
cmp
add
mov
imul
cmpsl
add
adc
cld
adc
pop
ret
fstps
outsb
lock
shlb
repnz
sub
mov
imul
test
mov
rcll
add
into
dec
add
gs
mov
cwtl
adc
mov
add
adcl
push
arpl
jno
cmpsb
jo
pop
test
std
xlat
mov
mov
cwtl
mov
jmp
sti
and
int
sub
and
sub
loopne
std
mov
dec
jmp
xchg
mov
pop
mov
test
mov
loop
fmuls
inc
ljmp
imul
jle
cmp
lods
dec
int
dec
sbbb
add
rolb
inc
pop
xchg
sbb
fcomi
mov
dec
jge
push
jl
outsl
test
pop
cmpsb
adc
lods
pop
out
adc
repz
bound
xchg
mov
adc
std
es
cwtl
push
rclb
push
lods
xchg
cli
lret
aad
into
nop
jae
je
sub
xchg
in
mov
lock
loopne
xor
in
push
cmp
fisttps
inc
inc
lret
fwait
mov
cwtl
sub
mov
jle,pn
mov
ss
sbb
out
mov
adc
mov
mov
inc
jecxz
jno
int3
fwait
jne
adc
inc
bound
sbb
adc
pushf
test
xor
push
mov
es
stos
and
outsb
mov
stos
cwtl
push
push
ss
jnp
jo
lret
out
pop
push
jnp
pop
xchg
xchg
add
jnp
mov
xchg
test
jns
cmp
test
jae
jg
popf
ja
adcl
std
jae
insl
test
or
cmp
cli
cs
dec
mov
popf
mov
and
jbe
jmp
lcall
hlt
xchg
rcrb
jbe
xor
cmc
jnp
sbb
gs
pop
hlt
sub
cmpsb
out
cmp
mov
xlat
mov
call
adc
loop
lds
adc
and
jl
and
enter
jmp
push
push
nop
pusha
push
aas
in
sub
adc
lcall
push
inc
push
out
pop
scas
fnsave
adc
sbb
mov
lods
sub
and
xchg
aad
fdivs
sbb
je
das
mov
mov
fcompl
sti
push
sbb
loopne,pn
hlt
sbb
jmp
sub
cmp
xchg
aam
pop
and
loope
bound
dec
mov
add
push
mov
aas
jbe
mov
adc
inc
mov
push
pop
jae
aaa
pop
cmpsl
jp
ja
add
cmpsb
iret
and
mov
push
mov
je
sbb
stos
mov
push
mov
fisttps
add
mov
aam
xchg
out
xchg
mov
int
push
loope
loop
pop
xor
aam
xlat
lret
cli
loop
bound
ret
bound
push
push
test
cmp
cld
or
adc
insl
pop
mov
adc
xlat
notb
aas
leave
enter
cmc
jbe
dec
pop
addl
add
out
sbb
test
repnz
cmp
divl
mov
shl
sbb
xor
adc
rorl
sbb
shr
push
stc
das
mov
pushf
add
mov
popa
dec
jg
flds
cltd
repnz
mov
jg
inc
movsb
popa
cmpsb
sti
and
mov
test
cmp
push
mov
dec
mov
or
movsl
addr16
jl
jae
ret
mov
cmpsb
shl
lahf
call
cwtl
pop
sbb
or
fisubrs
xor
pop
nop
popa
pop
inc
je
imul
add
je
stos
sub
movsb
mov
jge
mov
add
out
fdiv
inc
pusha
lods
fwait
out
mov
xchg
and
ss
enter
loopne
movsl
nop
ljmp
pop
es
pop
sub
adc
sbb
xchg
repnz
mov
add
jge
push
negb
xlat
push
or
nop
imul
ror
xor
les
mov
add
icebp
fcoms
mov
movsb
push
pop
cmc
inc
push
inc
daa
cmpsl
pop
das
push
adc
repnz
mov
movl
jecxz
xchg
sub
add
in
repnz
mov
xchg
push
xchg
adcb
mov
adc
lret
and
push
fnstcw
movsl
mov
mov
mov
sub
mov
push
mov
adc
test
jg
inc
xor
and
jle
dec
test
xor
and
cmp
fstpl
xchg
mov
lret
mov
daa
add
add
push
dec
fidivrl
xchg
xchg
sub
lcall
mov
dec
sbb
or
stc
or
xchg
add
inc
or
mov
mov
and
cmp
loopne
adc
rorb
xor
mov
dec
rcr
rolb
ja
iret
rorl
lea
scas
jno
outsl
push
xor
or
adc
lods
pop
test
insl
outsb
or
int
out
hlt
mov
mov
and
or
movsl
push
jmp
cli
and
lods
mov
in
cmp
jb
scas
pop
pop
mov
dec
mov
imul
aad
jae
aad
nop
es
fcomps
test
cmp
dec
lret
mov
xchg
jle
sahf
mov
lds
cmp
pop
rol
mov
mov
sbb
sbb
push
divb
cli
sarb
ret
adc
jl
cmp
xchg
mov
test
movsl
or
pop
daa
jno
pop
hlt
addl
sub
jge
je
or
add
sbb
mov
iret
inc
jae
pop
stos
push
les
movsl
sbbl
sahf
cmp
iret
clc
and
out
and
sub
hlt
in
sarb
into
test
or
aaa
xchg
xchg
je
out
pause
bound
shrl
pushf
sub
jns
lea
dec
fstps
divl
repnz
adc
sbb
add
mov
fildll
lock
dec
push
or
test
fs
or
movsl
iret
mov
clc
shrl
les
pop
test
cli
cmp
cmp
add
mov
out
bound
mov
pop
xor
jno,pt
mov
cli
aam
mov
decl
cmp
sbbb
scas
enter
mov
mov
sub
xchg
insl
ret
ret
lods
pop
scas
mov
lret
movsl
iret
sub
ds
repz
loopne
insb
movsb
shll
mov
mov
jb
enter
movl
sub
outsb
sahf
and
inc
pop
in
out
dec
push
sub
push
cmpsb
in
xchg
out
fldt
sarb
movsl
pop
and
fnstcw
mov
dec
fbld
cs
out
loop
aam
mov
jecxz
cmp
icebp
pop
test
mov
sub
out
inc
stos
fdivs
jl
sbb
imul
and
fisttpl
fimull
inc
add
repnz
lea
aaa
shrb
pop
dec
or
sub
push
notb
out
daa
adc
sbb
mov
rcr
push
xchg
les
jbe
pop
rcl
out
rcll
xchg
xchg
mov
jg
xchg
xchg
pop
mov
shlb
dec
xor
test
test
addr16
jne
cmpsl
dec
push
scas
mov
adc
and
lods
jecxz
and
fnstcw
jmp
xchg
mov
cltd
push
std
or
jno
out
aaa
test
jne
scas
lret
mov
pop
loop
mov
push
mov
clc
aam
daa
dec
mov
pushf
jg
das
repz
stos
jns
pop
add
mov
arpl
in
dec
pop
mov
xor
inc
shrl
fdivl
cld
jo
into
cmp
push
inc
xchg
sarl
in
fldcw
pop
pop
dec
cmp
add
mov
faddl
mov
movsl
sbb
add
adc
xor
mov
jo
or
mov
pusha
fidivrs
daa
dec
roll
clc
imul
bound
testl
jb
push
sbb
js
in
or
iret
push
push
das
xor
inc
jmp
xchg
dec
mov
dec
push
xchg
pop
inc
mov
mov
inc
call
inc
fld
jns
icebp
or
adc
adc
pop
cmpxchg
sbb
loopne
dec
daa
rcr
push
or
flds
or
icebp
push
mov
test
push
pop
mov
int
xchg
sub
add
gs
scas
in
jno
adc
aam
and
leave
mov
lods
inc
pushw
adc
push
in
call
sub
sub
cld
pop
cmp
clc
sub
pop
dec
xlat
pop
nop
outsb
lahf
sbb
lds
in
test
test
mov
stc
cmp
push
jo
sbb
sub
addr16
fsts
fucomip
sub
dec
ss
mov
and
lds
shll
or
test
cs
sahf
stos
imul
xchg
jmp
and
fisubs
insl
xorb
scas
dec
fnsave
push
sbb
loope
hlt
rolb
xlat
pop
and
pop
out
dec
sub
pop
sbb
cwtl
inc
lcall
popf
rorl
sub
jmp
push
adcl
xor
cmc
call
aas
and
call
decl
cmovbe
loopne
insl
out
adc
inc
cmc
mov
cltd
sub
andl
pop
sub
sahf
repnz
or
shlb
add
push
add
js
movsb
pop
lds
rclb
sub
iret
or
inc
adc
ret
pop
jbe
dec
test
shlb
or
and
sub
dec
in
cmc
js
xchg
addr16
or
jo
inc
fiadds
mov
push
pop
test
mov
rcrl
hlt
inc
mov
sbb
shr
push
adc
inc
lret
lahf
adc
popa
sar
push
es
jno
inc
repz
stos
out
popa
loop
xchg
nop
iret
sub
lods
jns
scas
pop
sahf
popf
rcll
jo
sbb
sbb
add
call
xor
sub
outsb
and
gs
out
jge
jo
sub
icebp
inc
sahf
add
cmp
insb
in
mov
and
daa
mov
mov
xor
mov
push
jp
or
loop
and
xchg
adc
sar
stos
in
mull
xchg
dec
in
ret
mov
cmp
fnsetpm(287
cmp
push
popa
xchg
pop
popa
mov
or
xchg
xchg
scas
notb
sub
add
lret
add
or
inc
iret
xchg
mov
inc
jecxz
dec
les
cmpsl
mov
nop
test
test
loopne
mov
or
pop
mov
add
mov
jle
lods
ds
popf
jb
jmp
jno
jb
inc
mov
subb
adc
popf
mov
jl
add
mov
adc
pop
xchg
mov
addr16
xor
test
lret
fdiv
ret
cltd
into
cmp
scas
aad
pop
test
cli
jo
arpl
cwtl
aad
sub
push
out
xchg
leave
or
jmp
pop
sbb
mov
jl
shlb
push
or
inc
fcmove
std
lock
shll
cmp
fsubs
arpl
adc
dec
fsubrs
shll
test
lock
inc
cmovns
pop
cmc
mov
testl
addr16
sbb
mov
mov
xlat
pop
add
in
ds
mov
shlb
pop
sub
test
aas
inc
fistpll
sbb
orb
dec
mov
nop
mov
add
andb
dec
loop
xor
popa
push
mov
inc
cltd
std
aad
and
sub
add
cmp
lret
inc
sbb
leave
shll
test
fmull
addr16
mov
popf
xchg
sub
std
int3
mov
shr
adc
xchg
or
push
add
sub
jb
sub
pop
pop
jb
jl,pn
and
out
sub
lods
mov
or
fisubrs
inc
test
inc
push
or
xor
lret
lods
sub
mov
xor
ljmp
mov
sub
stos
adc
mov
shr
int
test
jae
rolb
cmp
imul
xor
push
push
sti
stos
jl
jge
insb
lret
add
sbb
inc
repz
pop
cmp
dec
daa
clc
pusha
outsl
dec
lds
fucomip
jmp
sub
and
push
hlt
mov
adc
mov
dec
xlat
ret
iret
sbb
add
or
roll
xor
in
sbb
outsl
adc
cwtl
jmp
jmp
adc
leave
in
mov
push
sbb
int
shrl
jl
xor
fsubl
aam
imul
pop
push
mov
shll
stos
push
fdivrl
and
cmp
xchg
add
int3
sub
repnz
dec
stc
jne
pop
aad
jno
pop
mov
es
dec
out
push
js
xchg
hlt
hlt
push
clc
sarb
insb
inc
inc
stc
lock
pusha
lock
inc
je
mov
and
inc
jno
sahf
push
jp
imul
in
dec
das
add
out
push
cmp
inc
pop
inc
adc
scas
fcoms
insb
test
mov
xchg
sub
dec
int3
jo
xor
imul
xor
push
lret
cs
sbb
lea
mov
dec
imul
push
pop
inc
jo
sub
dec
cmp
rcrb
or
inc
inc
jmp
push
add
and
sub
push
hlt
add
inc
sub
mov
dec
sbb
loop
imul
fnstenv
fdivl
rcl
loopne
movsb
jecxz
xchg
lret
xchg
jl
jne
insl
pop
or
xor
jo
stc
cmp
pushf
bound
mov
xlat
aad
repnz
pop
xchg
jge
mov
in
je
js,pt
sub
xor
loop
push
outsb
mov
leave
ja
dec
pop
int3
fbstp
xchg
jg
jg
xchg
int3
inc
jo
sub
mov
aas
or
int3
in
sub
inc
cld
lcall
push
fidivl
and
loope
test
dec
sbb
outsl
cli
jbe
dec
lcall
inc
mov
in
adc
lods
xchg
jecxz
pop
adc
mov
aas
sarl
lret
mov
mov
xor
mov
shlb
add
xchg
mov
aaa
fs
mov
cmpsl
mov
and
sahf
push
jno
dec
jecxz,pt
add
adc
in
aaa
push
lcall
nop
data16
pop
adc
jecxz
sub
xchg
dec
inc
clc
int
popa
fcmove
jns
xchg
sbb
sub
ficoml
scas
dec
xor
movsb
dec
ja
fdivl
jecxz
outsb
int
jne
push
sbb
push
and
mov
lea
fidivrl
adc
sbb
aad
cmp
sti
dec
outsl
mov
stos
xchg
pop
jns
fistpll
add
ss
je
fwait
inc
outsb
rcll
negb
mov
mov
xchg
incl
nop
dec
aas
shll
push
push
sbb
inc
test
inc
out
test
sbb
in
xchg
adc
mov
mov
cltd
mov
xor
icebp
mov
cmp
test
popf
in
ds
xor
push
cltd
inc
dec
mov
dec
mov
lods
adc
cld
movsb
cmp
sarl
cmp
jl
ljmp
mov
fbld
int3
ret
dec
fs
dec
and
sub
pop
push
cwtl
mov
adc
in
lret
sub
xor
add
mov
lahf
sbb
add
lock
out
cld
or
xorb
push
rcr
cpuid
pusha
push
pop
jne
jns
jb
or
scas
flds
test
mov
cmp
push
mov
insl
sub
pop
mov
or
mov
outsb
mov
jae
sbb
xchg
sbb
pop
mov
mov
addb
push
int
bound
out
rep
mov
fidivs
pop
jne
mov
stos
jns
subl
jb
lahf
pop
cmp
int3
pushf
xor
lret
int3
ficoms
cmc
xchg
movsb
cmp
insl
jb
js
dec
mov
mov
xor
rolb
cld
test
sub
shrl
mov
lcall
loopne
int3
test
sub
jl
xor
cmpsl
fnstcw
mov
sub
inc
add
fidivs
mov
xorps
cmc
stos
inc
adc
jmp
in
sbb
mov
jns
aam
lds
push
pop
sar
nop
setg
push
adc
mov
mov
out
out
dec
inc
dec
cwtl
loopne
push
dec
aas
call
dec
sub
enter
and
cmpsb
pop
inc
push
das
int
push
rcl
imul
negb
xor
daa
cmpsl
xchg
scas
repnz
sub
jnp
push
inc
dec
jmp
insb
scas
mov
adc
jmp
mov
mov
mull
inc
sub
repz
adc
jno
ficoms
push
je
dec
jmp
dec
pop
rcl
sub
in
icebp
outsl
or
push
test
ret
cld
fs
jmp
pop
bound
jge
push
add
outsb
sbb
mov
adc
shll
jbe
fcomps
test
mov
test
xorl
movsl
ja
mov
adc
add
xor
outsl
gs
push
lcall
ss
xchg
mov
jno
stos
imul
cmc
loopne
out
mov
shl
sub
in
push
repz
lret
popa
mov
pop
pop
cld
or
test
pop
jle
jno
sub
dec
loopne
jmp
adc
xor
add
lods
imul
repnz
stos
jnp
mov
jmp
enter
dec
lcall
jecxz
or
dec
sti
and
cmc
cmpsl
sub
gs
ljmp
mov
gs
clc
or
fwait
sar
lret
mov
cld
pop
sti
imul
or
pop
les
jp
in
push
inc
bound
adc
pop
pop
jnp
pop
out
clc
cs
jl
jecxz
sbb
push
in
and
test
imul
mov
jmp
add
in
mov
pop
mov
out
popa
xor
mov
jbe
out
xor
popa
push
push
les
and
lods
fwait
rorl
fmuls
fstl
movsl
rorl
mov
jl
insl
sbb
add
pop
cmpsl
cs
scas
enter
dec
pop
ja
dec
sub
dec
xchg
sbb
lcall
sbb
pop
or
sub
jmp
ljmp
aaa
and
sub
or
and
loopne
add
mov
lock
mov
icebp
repnz
dec
pusha
sbb
inc
adc
dec
mov
xchg
inc
fdivr
sub
jo
fdivl
test
push
std
cmpsl
fstpl
adc
lret
lret
cmp
xor
add
or
rcrb
notb
jo
cmovae
aaa
sub
jns
push
jle
mov
pop
mov
or
sbb
pop
xlat
jno
jl
in
or
pop
inc
dec
adc
loop
test
and
push
in
jno
je
pop
dec
mov
lret
orb
or
add
je
aad
pop
push
lods
push
cltd
aam
add
pushf
jmp
in
call
je
cli
lahf
movsl
inc
cmp
inc
xor
dec
insl
aad
push
sbb
xchg
jae
aaa
and
addr16
add
mov
mov
iret
dec
pop
sub
sub
shl
lcall
mov
nop
or
jmp
out
mov
inc
push
mov
lock
fisttps
dec
add
imul
jns
pop
popf
xchg
mov
mov
movsb
cwtl
xor
adc
adc
jmp
scas
and
les
stos
push
sar
test
loop
jmp
push
cmp
test
daa
divl
in
or
push
push
push
inc
nop
aaa
rolb
rcrb
hlt
xchg
cs
shl
mov
fimull
dec
loop
mov
or
dec
mov
jbe
dec
jecxz
andb
pop
jne
adc
lods
pop
ret
fsubrs
sbb
xchg
jle
in
lret
scas
cwtl
lcall
push
sbb
addb
sbb
iret
push
pop
std
popl
or
xchg
mov
out
adcl
movsb
dec
pop
add
ds
icebp
cltd
je
iret
popf
out
in
rclb
fdivrs
sarl
clc
dec
dec
xchg
or
dec
jne
add
push
cs
loopne
shrl
int3
mov
mov
jle
ret
rcrb
sub
outsl
mov
pop
or
sub
inc
mov
pop
sub
xchg
jnp
adc
in
inc
or
and
xor
jb
cmp
test
outsl
jp
push
cmp
shl
cli
addr16
dec
loopne
mov
test
pop
push
ret
lahf
xor
mov
pushf
mov
pop
dec
adc
sbb
cli
pavgw
sub
mov
xchg
jbe
out
cmpsb
divl
pop
pop
aam
sub
repz
rorb
add
lcall
in
lods
ss
push
jo
ja
lods
fwait
jno
mov
inc
lret
pop
das
ret
mov
sbb
ss
movsl
sub
fsubrs
xchg
push
push
imul
bound
cltd
inc
cmp
rcrb
inc
xchg
lcall
imul
or
popa
hlt
int3
cmpsl
mov
xlat
subl
fs
or
and
inc
sbb
in
popa
inc
imul
stos
mov
push
push
adc
mov
adc
and
ja
push
iret
shlb
stos
js
div
jo
cmp
lahf
in
neg
mov
stos
fwait
dec
repz
pop
stc
lock
gs
lcall
js
pop
inc
hlt
pop
inc
mov
int3
cltd
pop
loope
and
jge
les
lcall
inc
sub
push
shl
jnp
xor
xchg
movsb
shrl
lea
xchg
fmulp
jns
mov
cmp
and
add
inc
dec
fistpll
inc
call
movsb
push
pop
shlb
aaa
ds
lret
std
cmp
lds
sub
or
imul
xor
repz
dec
mov
pop
rorl
adc
insb
mov
aam
or
lcall
push
adc
pusha
pop
cmc
das
rclb
push
inc
xchg
lock
loope
fidivrl
sub
aaa
popf
jge
ss
scas
jae
ret
mov
cmc
aad
jno
jo
test
sti
dec
adc
adc
scas
jle
jns
imul
pop
pop
ret
test
das
push
popa
add
dec
mov
andb
test
ret
daa
aad
pop
and
add
gs
mov
cli
outsl
gs
fdivp
jns
pop
aad
cmp
pop
dec
lock
sbb
mov
mov
ja
mov
pusha
cs
pop
nop
cmc
scas
imul
fcoml
cwtl
shll
pop
mov
sbbb
ror
pop
test
lds
dec
mov
push
fisubrl
sbb
push
pop
xchg
cltd
test
sub
pop
inc
int
xor
pop
xor
inc
inc
icebp
mov
and
jl
mov
add
ret
and
cltd
mov
jp
xchg
shlb
sub
aaa
mov
jae
inc
in
jle
out
cld
psadbw
mov
xor
pop
push
insb
inc
pop
inc
test
sahf
xchg
pop
cmp
rol
or
stc
inc
ja
pop
shll
fmuls
xchg
call
sbb
repnz
fwait
lret
xor
xchg
mov
dec
cmc
sbb
xor
out
into
ret
add
mov
sub
aaa
out
sbb
cmp
add
jp
fmull
pop
lds
test
mov
in
cmpsl
sti
cmc
cmp
mov
sarl
mov
mov
scas
aad
xchg
loope
out
push
adc
sbb
or
push
adc
and
hlt
cwtl
mov
fcmovnbe
cmp
fidivrl
cmp
pop
cmpsb
das
pop
pop
cli
or
adc
xor
pop
movsb
leave
insl
or
pop
jp
movsl
ja
in
arpl
jecxz
cmp
lret
mov
cmp
clc
jmp
cmpsl
subl
and
call
add
pop
imul
cmpsl
jmp
movsl
aas
jecxz
xchg
pop
sub
leave
test
pop
rcrl
aaa
in
sub
xchg
test
jae
in
pop
rolb
xchg
push
cmp
dec
mov
xor
jne
test
add
pop
std
std
pop
jae
pusha
cmove
inc
inc
sbb
enter
orps
call
mov
xor
xor
cmpsb
add
cwtl
ja
add
pop
lock
sti
sub
pushf
xchg
mov
sti
xor
mov
dec
lock
sub
rolb
test
mov
pop
das
pop
loope
pop
and
cmp
sbb
or
push
shll
mov
cmpsb
pop
lea
pop
pop
repz
fsubrs
add
mov
push
rorl
cvtps2pd
mov
lret
insl
jmp
mov
mov
fs
push
test
push
pop
push
cwtl
jne
or
sti
aas
ljmp
cli
cmp
xchg
dec
xchg
sbb
push
les
rorl
inc
mov
inc
cs
fs
in
xor
cmpsl
fcoml
es
aas
lods
je
dec
cmp
sbb
push
lret
adc
xor
sahf
lock
xchg
in
fcmovne
andb
fcmovne
mov
in
sbb
sbb
call
dec
jne
inc
mov
insb
mov
xor
ss
stos
jl
adc
jmp
in
aam
stos
or
xchg
ffreep
adc
es
xchg
mov
mov
dec
arpl
stc
mov
enter
and
outsb
jle
push
or
push
sbb
std
inc
pushl
push
cltd
movsl
mov
push
jmp
adc
fidivs
inc
das
mov
add
and
push
or
test
jnp
xor
daa
push
inc
aas
jge
push
jnp
lahf
iret
dec
dec
addr16
hlt
stos
pop
mov
fimull
pop
xchg
mov
cmp
push
shrb
dec
xchg
ss
push
subb
pandn
push
push
cmp
lods
mov
jle
imul
subb
inc
xchg
xor
ss
mov
fldl
fiaddl
stos
mov
repz
inc
sbb
in
stos
xlat
cmc
add
addb
dec
icebp
sbb
inc
mov
push
sub
gs
cltd
or
das
int3
loop
push
paddd
adc
insb
loopne
rcl
mull
data16
mov
scas
loop
js
sarb
xchg
push
mov
popa
and
push
out
cs
xchg
inc
mov
divb
cmp
cmc
push
pop
push
iret
imul
jne
dec
cmp
add
mov
push
jg
addl
adc
mov
js
cmp
cltd
fwait
out
test
dec
cmp
and
sbb
sbb
frstor
std
cmp
ret
xor
sbb
push
call
push
push
hlt
sbbb
mov
xorb
xor
es
cmpb
pop
sub
fsubrs
sarl
mov
lods
sbb
cmp
lahf
out
movsl
call
pop
xor
nop
jnp
arpl
xor
sbb
sub
fwait
pusha
mov
pop
in
fdivs
test
test
push
cmp
shrl
pushw
mov
sbb
pop
movsb
and
mov
es
subl
mov
test
push
lahf
inc
lea
add
pushf
int3
pushf
into
orl
insb
cmp
or
add
xor
inc
movsb
adc
and
pop
xchg
mov
xchg
sahf
and
pop
lock
repz
adc
ror
or
dec
adc
sub
data16
cli
cmpb
addr16
cli
cmp
mov
bound
decl
mov
mov
xor
sbb
dec
cmpsl
inc
jl
mov
clc
pop
fildl
div
jns
and
mov
out
clc
adc
jae
fldenv
mov
iret
mov
jge
in
fiaddl
test
sub
and
lds
mov
jbe
adc
push
pop
jp
add
and
loopne
sub
sbb
test
xchg
lods
jle
scas
cmp
loopne
out
or
lea
outsl
cld
jo
adc
sub
sub
arpl
adc
jne
js
outsl
xchg
sub
je
les
xor
sub
hlt
cmp
outsb
bound
mov
movsb
and
in
mov
cmp
in
mov
das
shlb
int
cwtl
lahf
popa
aaa
add
push
dec
push
arpl
xor
or
mov
shrb
xor
rorl
pop
adc
test
mov
lds
fidivs
jns
aam
das
dec
jo
jge
lahf
fistpll
jmp
cmpsb
mov
dec
adc
xchg
fxch
jbe
jge
mov
ret
pop
cli
dec
add
dec
decb
mov
inc
fcmovb
test
scas
or
mov
cmp
inc
nop
jnp
cld
loope
mov
xlat
repz
dec
push
inc
in
cwtl
cltd
sbb
cs
outsb
jnp
mov
sbbb
lods
jnp
bound
insl
scas
loope
sub
inc
jmp
add
imul
mov
mov
xchg
scas
dec
xor
mov
nop
out
out
fmul
or
mov
test
jbe
adc
shr
add
add
insb
ja
sbb
xor
gs
pop
lahf
or
cld
mov
pop
and
jge
sbb
imul
adc
cmp
jnp
dec
xor
xchg
dec
stos
stc
pop
out
mov
cli
aam
ret
or
mov
out
and
inc
sub
jae
xor
scas
jae
mov
mov
jnp
cmpsb
mov
in
xchg
ja
adc
and
push
xchg
and
divb
je
inc
cmp
or
je
mov
daa
jns
add
in
pop
mov
inc
inc
ret
gs
aam
out
pop
movups
test
mov
gs
icebp
stos
mov
fdivs
xchg
pop
stos
notb
or
mov
xchg
pusha
outsl
test
movsl
lds
testb
fs
push
adc
loopne
xchg
addr16
pop
and
std
sub
sbb
hlt
sbb
xchg
inc
cmpsb
sbb
lahf
pop
and
mov
out
xor
mov
jp
fisttpl
hlt
scas
rclb
or
addb
xor
imul
dec
xlat
dec
xchg
lods
mov
out
push
jmp
jae
sbb
shr
inc
inc
test
push
inc
cli
or
pop
into
aam
sbb
pop
cmp
jmp
xchg
push
test
rclb
jge
mov
mov
movsl
xlat
imul
jecxz
rorb
rclb
movsb
adc
sub
outsl
inc
sbb
xlat
push
fucom
out
jg
push
mov
lea
bound
testb
push
cmp
shlb
mov
xchg
add
leave
push
lret
outsl
jae
mov
cmp
jecxz
addr16
sahf
sub
aad
pop
mov
addr16
or
leave
enter
mov
or
push
pop
sbb
sub
rorb
sbb
xchg
and
jg
cltd
adc
jmp
mov
and
xor
pop
mov
xchg
hlt
mov
ja
icebp
sub
cmp
loopne
push
popa
mov
sbb
lds
iret
or
adc
or
push
jle
ss
mov
subb
jno
lahf
mov
loop
xchg
mov
scas
sub
mov
add
pop
movsl
adc
xor
fsubl
push
scas
pop
jmp
jle
nop
add
fs
and
mov
push
push
jp
addl
sub
insl
js
cmp
dec
fs
es
xor
xchg
jl
push
xor
lahf
loope
orl
sub
xor
cmp
clc
popa
std
sub
and
loopne
and
xchg
dec
xchg
out
andl
mov
les
gs
mov
out
mov
mov
push
int3
inc
mov
sub
cmpsb
ret
jnp
sbb
mov
cli
ss
jge
pop
inc
push
adc
cmp
or
imul
ret
or
or
icebp
xlat
out
push
test
imul
push
and
xchg
inc
sbb
mov
jle
or
jno
rep
mov
cltd
mov
push
dec
mov
pop
xlat
insb
xor
aaa
ja
mov
fiaddl
movsl
inc
adc
out
pop
mov
xor
inc
add
mov
popa
jmp
out
push
mov
sub
fiadds
inc
xlat
popa
push
mov
mov
xchg
sub
andl
push
push
dec
scas
xor
rcrl
pop
adc
in
cmp
das
lea
loopne
dec
out
dec
jp
cmp
fs
lret
pop
sbb
jo
pop
push
and
shlb
ds
lock
or
xor
nop
out
jp
into
push
mov
push
or
addb
jmp
in
add
inc
mov
mov
loope
push
mov
sub
dec
and
mov
push
insb
xchg
add
test
dec
or
mov
jmp
jno
xor
sbb
bswap
cld
andb
scas
ljmp
pop
ljmp
fnstsw
xchg
fcoml
cld
subl
pushf
jle
out
enter
adc
push
out
nop
push
test
or
pop
shlb
ror
aas
jb
fwait
jbe
rcrl
cmp
inc
pop
mov
mov
mov
mov
std
xchg
push
fidivs
mov
mov
pop
inc
scas
xchg
sbb
mov
stos
adc
jb
stc
fsubp
or
mov
pop
rorl
mov
fs
cs
add
cmp
pop
push
pop
icebp
dec
ss
scas
test
mov
xchg
std
movb
fistpll
pop
dec
or
pop
mov
sti
aad
stos
jno
jle
cmp
js
push
lahf
mov
cmc
or
fcoml
xchg
cwtl
movsb
add
push
pop
or
icebp
lret
dec
in
aad
xor
inc
sub
mov
pop
adc
enter
and
mov
jge
inc
out
xchg
mov
push
fisubs
ljmp
sti
aam
cmp
addb
push
out
xor
push
in
or
xchg
sahf
push
mov
mov
xchg
push
paddq
mov
ljmp
jnp
and
sub
loopne
pop
sub
test
js
cmp
or
pop
push
mov
loop
lods
fcompl
ja
inc
lea
aam
shr
adc
cmp
insb
xchg
cwtl
mov
std
ljmp
test
sbb
or
cwtl
inc
jge
aas
outsb
insb
jecxz
pusha
movsb
pop
cld
fstpl
jbe
stc
push
insb
pop
jge
ficompl
test
das
inc
xor
scas
clc
jmp
jmp
mov
and
imul
int3
pop
dec
sub
nop
test
jge
xchg
cwtl
xchg
loopne
fidivs
xor
cli
lcall
loop
jnp
xchg
and
jno
push
sub
jecxz
out
sbb
sub
fnstsw
negl
add
movsb
fcompl
cmp
add
xchg
jg
imul
push
adc
in
cmp
jecxz
sahf
cmp
inc
stos
out
in
push
stos
dec
rcr
shrl
sbb
sbb
rol
mov
xchg
jns
rolb
aad
add
dec
ljmp
or
push
or
pusha
pcmpeqw
insl
xchg
push
push
push
fsubl
fwait
std
xchg
and
pusha
or
movsb
pop
ficoms
jge
jl
pop
cmp
mov
and
repnz
in
pushf
jno
and
cltd
mov
xchg
pushf
loope
int3
js
fsubrp
icebp
loopne
test
ja
mov
jbe
push
scas
movsb
or
push
movsl
jl
push
and
shrl
icebp
enter
sbb
mov
gs
lock
jge
int
int
sbb
mov
pop
dec
into
fadds
mov
scas
sbb
pushf
loop
dec
inc
aaa
je
imul
xor
mov
push
call
jecxz
xchg
call
adcb
jg
popf
inc
xor
sahf
mov
push
sbb
xchg
jp
sub
clc
ret
dec
in
popa
jp
test
lods
cwtl
xchg
fcompl
dec
repz
xor
stc
test
bound
das
xor
popa
or
jg
ret
cmpsl
cmpsb
xchg
jne
fisubl
orb
jle
int3
xor
mov
lret
sbb
rorb
mov
fcoml
lcall
mov
imul
xchg
cmp
gs
mov
aam
lock
or
in
sub
xor
hlt
add
sub
ds
scas
cs
cs
shll
out
jmp
repnz
mov
mov
mulb
add
mov
mov
gs
divb
xor
rcrl
sub
xchg
mov
ja
mov
scas
cli
movsb
add
jno
fdivl
test
xor
mov
mov
dec
stos
xchg
cwtl
sbb
push
and
mov
dec
and
dec
cmp
inc
or
jbe
insb
ficoml
aas
xchg
aaa
mov
adc
inc
lods
loop
ljmp
jmp
jae
jg
and
jb
gs
int
and
into
mov
jns
or
stc
fldcw
inc
lock
adc
jbe
cmp
rclb
mov
test
mov
cmp
outsl
rcl
xchg
add
push
pop
data16
adc
fwait
das
imull
push
xchg
into
jmp
xchg
inc
int
mov
leave
lcall
fisubs
icebp
mov
sbb
les
dec
sbb
lea
out
xlat
lods
mov
xchg
jp
cmp
stc
insb
test
dec
daa
mov
sbb
dec
js
cld
mov
inc
and
xchg
mov
push
into
jmp
mov
mov
pop
fbld
sub
je
lods
mov
imul
adc
push
inc
pop
jecxz
fs
mov
and
and
lods
add
and
mov
jns
pop
jne
jle
lcall
es
stos
subb
jecxz
sub
pusha
shlb
mul
in
mov
in
add
arpl
pop
add
iret
xor
pop
add
fs
cmp
mov
movsb
xor
aad
repz
repnz
lods
lds
repz
rcll
add
iret
scas
std
into
and
mov
pop
inc
jnp
push
cltd
mov
pop
mov
jns
mov
dec
mov
frstor
fcoml
faddp
in
out
push
or
cs
cmp
outsl
mov
orb
cmp
xor
jno
sti
jmp
dec
mov
lods
test
push
jge
test
ljmp
push
mov
mov
roll
sti
cmp
fsubrl
and
mov
sbb
inc
jl
mov
pop
lea
jnp
sbb
push
ja
mov
mov
or
cmpsb
rclb
aas
lcall
leave
add
jnp
call
adc
lods
xchg
ffreep
popa
loopne
in
movsl
jle
aad
push
push
clc
imul
stos
mov
sub
inc
in
cmpsl
enter
inc
dec
pop
test
fildl
fistpll
xchg
sub
rorl
aam
cmpsl
mov
sub
pop
xor
iret
enter
aad
stc
push
inc
cli
xchg
pop
jbe
imul
jbe
jbe
rcll
scas
aad
ficoml
xlat
cmp
xor
hlt
ds
fimull
sbb
scas
testb
xor
mov
cs
fistpl
cmovbe
xchg
push
and
mov
mov
nop
jno
and
dec
push
fsubr
lds
mov
jae
adc
lods
jl
pop
xchg
daa
nop
pushl
lea
adc
dec
cmc
or
add
xchg
iret
dec
mov
xchg
cmpsl
jb
push
mov
mov
loopne
push
daa
push
mov
clc
pop
sub
push
mov
adc
or
push
rol
jle
outsl
xchg
jae
mov
sub
inc
mov
sub
sub
cmpsb
mov
lds
addr16
add
outsl
mov
ficoml
mov
dec
in
xor
lds
inc
js
mov
stc
push
inc
sbb
pop
movsb
dec
stc
mov
lcall
add
hlt
into
adc
inc
lcall
stos
xor
or
mov
and
jmp
cmp
cmp
sub
adc
mov
inc
cmpsl
mov
mov
in
push
inc
ja
jmp
cld
mov
into
popa
cmp
adc
dec
repz
int3
es
cmp
inc
dec
cmp
ss
mov
lret
test
lds
sub
and
inc
adcb
pop
aas
test
adc
jge
inc
xchg
pop
mov
push
por
pop
mov
ljmp
aaa
int3
add
push
and
fcomip
mov
xor
sbb
mov
cltd
shlb
xor
add
mov
lret
xor
add
xor
push
pusha
sub
ja
ja
add
imul
and
fbld
sbb
xchg
xchg
ret
sbb
mov
mov
lret
aam
xor
sbb
jns
out
js
enter
jbe
mov
pop
in
mov
fs
je
test
out
insb
mov
cmp
jg
dec
inc
dec
dec
push
popa
outsb
adc
push
rol
adc
or
fs
and
add
loopne
loopne
cmp
sub
fisubs
enter
xchg
loope
mov
jg
mov
aam
jne
stos
lds
repz
jp
pop
jns
lea
or
push
push
lret
repnz
sbb
stc
mov
out
stc
into
add
ret
jg
in
js
call
in
adc
xor
out
mov
push
jecxz
fildl
dec
stos
lods
out
xchg
sub
cwtl
outsb
test
add
arpl
enter
movl
sub
mov
fwait
mov
inc
add
mov
fldl
fldl
pop
or
adc
cld
xor
adc
xchg
mov
sub
mov
nop
jecxz
in
pushf
repz
je
mov
inc
mov
fcomp
cmp
cld
in
pop
mov
fcoms
imul
sub
add
fcoml
data16
mov
pop
popf
or
jnp
mov
insl
repnz
and
clc
sub
into
dec
inc
popf
stc
and
jbe
mov
cld
adcl
fwait
dec
sbb
lea
push
pop
mov
test
jge
in
stos
lret
out
dec
lods
test
jns
push
lods
pop
dec
ds
in
popa
jnp
jmp
jge
fdivl
jg
hlt
into
cs
and
fldcw
mov
ljmp
push
jnp
js
push
mov
mov
mov
call
push
imul
int3
jo
dec
js
xorb
es
and
sub
orl
pop
xchg
mov
adc
xorl
mov
mov
sbb
or
out
repz
fwait
jns
lods
mov
sub
cmpl
inc
stos
sub
or
cs
and
test
sbb
pushf
shll
rcrb
sub
ljmp
inc
xchg
rep
pop
mov
xchg
out
ffree
std
mov
jne
push
fs
dec
dec
pop
dec
xchg
mov
or
dec
sbb
add
mov
jmp
clc
mov
and
cltd
popa
shll
xchg
sub
leave
xor
xchg
call
push
mov
mov
and
xchg
adc
mov
insl
sub
pop
popa
cs
sbb
mov
adcb
lahf
xor
and
add
mov
into
iret
arpl
push
cmpsb
jge
ja
inc
daa
fwait
gs
and
mov
cld
lret
xchg
popf
pop
pop
sub
and
inc
or
push
xor
outsb
cmp
stos
push
mov
or
mov
cltd
fnstsw
jg
movsb
xchg
jp
lret
sbbl
add
icebp
push
mov
sbb
mov
push
mov
in
xchg
dec
jo
mov
dec
xor
dec
std
sub
xchg
jb
and
mov
or
dec
iret
inc
adc
inc
xor
dec
mov
inc
sbb
lahf
and
scas
cmp
add
mov
dec
mov
enter
int
ss
sub
aad
fildl
jl
and
cmp
outsb
sub
cmp
ret
cmp
jnp
sbb
iret
add
testb
sbb
std
cmpl
decb
adcl
mov
pop
dec
rol
cmp
mov
out
or
jp
pop
and
sahf
cmp
sbb
andl
fiadds
call
sarl
xorb
adc
imull
mov
xchg
movsl
or
in
lock
cmpsb
add
mul
fsubs
imul
test
int3
and
cmc
loope
sub
aas
mov
push
mov
popa
pop
insl
or
repnz
js
mov
inc
movsb
insb
sbb
aam
das
mov
orb
mov
daa
mov
inc
or
adc
cmp
push
sbb
cmp
dec
push
cmp
rcrb
out
stos
dec
push
push
daa
cmp
cmp
pop
test
lea
imul
std
fcomi
push
add
cmp
lock
repnz
scas
sahf
push
loop
cmpsl
cld
mov
jecxz
movsb
pop
fcomps
mov
call
sub
pushl
lcall
dec
inc
add
or
mov
int
je
xor
pop
js
pushf
data16
mov
shlb
cwtl
jo
jecxz
pop
lea
mov
or
shll
push
lds
push
xchg
lret
cmpsl
mov
xchg
mov
clc
insb
or
incl
mov
mov
mov
xchg
inc
sub
test
arpl
or
pop
mulb
int3
sub
and
test
add
repz
imull
inc
jmp
cmp
mov
lock
add
inc
js
out
daa
mov
push
int
fwait
xchg
lds
aad
inc
sub
jge
inc
and
push
cmp
mov
loope
push
bound
sti
js
je
xor
inc
and
mov
aaa
dec
andb
xor
push
jo
out
cwtl
and
lahf
push
sbb
adcl
mov
out
push
decl
mov
dec
mov
cld
in
fcom
popa
repnz
jno
fsts
cmp
adc
mov
or
mov
cmpsl
outsl
pop
inc
aaa
in
xchg
cltd
shl
cmc
icebp
pop
arpl
mov
mov
int3
pushf
test
cmpsb
mov
xor
xor
jp
jg
mov
nop
inc
xchg
xchg
jp
ljmp
lea
sbb
mov
jbe
jb
jae
loopne
cmp
aad
aad
xor
mov
sarb
leave
ljmp
mov
and
shrl
ret
repz
dec
mov
pushf
and
ss
jo
call
xor
popa
popa
dec
sub
not
push
push
mov
jns
pop
adc
movsb
sbb
mov
sti
stos
jl
pop
fcoml
xor
mov
ret
popl
arpl
lods
xor
pushf
aad
testb
lock
dec
in
rorb
rclb
add
mov
inc
mov
xor
pop
adc
into
adc
fsubs
xchg
cwtl
dec
add
mov
push
shl
test
inc
sahf
stc
out
push
filds
and
pop
or
test
lahf
test
xor
aad
cmp
sbb
aam
rep
jns
ljmp
cmp
adc
xor
sbb
pop
inc
push
jne
adc
inc
cmpsl
lock
aam
sbb
pusha
movsb
xor
es
inc
bound
ds
inc
dec
repz
mov
cmp
cmp
fnstsw
and
test
and
es
push
mov
aad
cmp
dec
jbe
enter
xchg
push
subb
cmc
ljmp
ljmp
sbb
movsl
or
popa
loopne
or
test
shrl
cmp
cmp
and
lods
push
inc
sub
shll
cld
cmp
and
jne
add
scas
bound
mov
mov
or
lahf
sub
jmp
into
cs
xchg
test
mov
movsl
mov
dec
bound
sub
lods
cmp
jecxz
adc
and
outsb
push
std
sub
jb
and
mov
dec
test
ja
cmpsb
push
push
push
xchg
cmp
movsb
push
mov
pop
dec
std
dec
repz
xchg
loope
pop
imul
mov
adc
ds
mov
jl
fwait
int3
or
nop
xchg
and
dec
addl
inc
jmp
push
xor
xorb
scas
stc
test
dec
add
push
pop
or
rcll
xchg
mov
push
into
xor
jp
cs
lcall
mov
inc
decb
xchg
add
pop
popf
push
movsb
cmp
xchg
imul
sbbb
lret
cmp
roll
ljmp
scas
out
push
mov
mov
jl
and
movsl
les
and
in
sbb
pop
imul
lahf
add
mov
cmp
jp
rcll
mov
sarb
xlat
jne
inc
sbb
sahf
or
in
roll
and
inc
mov
pusha
sbb
xchg
int
cmp
cmpsb
cmp
lret
mov
adc
and
into
sbb
mov
shrb
icebp
dec
popf
xorb
inc
inc
stos
pushf
sub
push
sbb
sub
sub
xchg
inc
push
aas
repz
pop
push
mov
mov
cmc
inc
rorl
push
mov
outsl
addb
sbb
cmpsl
pop
dec
jle
es
pop
push
test
xchg
in
repnz
leave
mov
lds
sbb
cmp
fsubl
sbb
dec
popa
into
nop
sahf
roll
lea
jg
subb
sti
xor
ret
fwait
ljmp
inc
aam
sub
fldt
lcall
subl
dec
stos
jle
adc
fimuls
jb
push
es
mov
jmp
add
and
and
ror
shlb
push
aam
dec
pop
stos
push
push
pop
scas
sub
addr16
add
add
push
mov
ljmp
popa
or
arpl
inc
push
or
cmp
cwtl
cmp
in
movsb
pop
ss
ret
jmp
xchg
add
outsb
sti
fimuls
repz
lahf
inc
shlb
mov
int
inc
mov
sub
pop
jmp
pushf
imul
or
dec
popf
mov
stos
mul
push
xchg
xor
cwtl
cmpsl
outsb
cmp
add
aam
mov
lods
mov
mov
cmp
inc
dec
xor
push
mov
xchg
aaa
ffree
repnz
neg
mov
loopne
mov
js
cli
inc
mov
or
out
pusha
inc
jp
sbb
in
js
into
lahf
cmp
cmp
dec
mov
insb
adc
pop
cmp
in
cmp
jl
insl
dec
in
sti
dec
sub
popf
jnp
inc
push
dec
or
xchg
cmp
cmp
fwait
dec
adcb
subb
fsubrp
aas
push
mov
in
cld
xchg
jge
adc
lret
jno
cmpsl
jns
arpl
mov
rorb
leave
mov
pop
mov
jae
cmpsb
xor
mov
leave
adc
push
sbb
cltd
dec
ljmp
stos
scas
dec
fs
xchg
mov
or
xchg
out
xchg
and
adc
push
fistps
mov
popf
sub
push
mov
shl
add
sub
dec
sub
add
int
inc
scas
and
pop
inc
mov
inc
addr16
mov
jge
push
mov
mov
stc
dec
mov
mov
popa
xchg
test
shll
loopne
inc
mov
out
push
push
xchg
and
pop
add
jns
leave
movsb
leave
loopne
ja
lods
add
push
in
inc
sub
adc
mov
arpl
pop
pop
sub
jnp
and
and
lcall
pop
sub
or
jp
lret
sbb
mov
sbb
fists
fdivrl
fstps
push
cmp
clc
cmc
in
mov
or
jno
lret
jb
pop
add
or
cltd
das
add
push
inc
cmp
lods
mov
rcr
out
xchg
rclb
or
gs
xor
push
test
dec
mov
bound
xchg
mov
ds
sub
dec
out
pop
scas
mov
std
fucom
sbb
aas
push
shlb
cmp
dec
in
das
es
int
push
fisubs
shrb
insl
add
shlb
aas
out
dec
imul
fnstenv
div
rcr
and
in
or
and
das
cwtl
mov
mov
insb
mov
cld
dec
push
mov
xchg
loope
ljmp
mov
shll
pop
xor
push
stc
cltd
jo
add
lods
jmp
inc
lahf
adc
push
out
movsl
and
cmp
sbb
cltd
popf
sarl
xchg
insb
enter
cmp
and
xchg
sbb
aad
hlt
inc
push
lods
xor
dec
pop
or
je
nop
pop
xchg
cli
test
adc
inc
jg
jge
in
jge
js
cwtl
pop
fists
je
sarb
push
jae
add
xor
and
mov
es
cmp
bound
ljmp
loopne
push
push
bound
jb
std
shrb
pop
xchg
popa
sub
addr16
sub
rolb
mov
aad
fwait
in
cltd
cmp
adc
add
inc
jbe
mov
daa
xor
imul
dec
cmp
arpl
sbb
push
repz
roll
adc
aaa
fmuls
lds
ror
pushf
movsl
data16
adc
in
inc
pop
pop
imul
jb
add
cltd
je
push
cs
jp
mov
outsb
enter
sub
xlat
imul
cmc
les
jnp
imul
ljmp
mov
sbb
sub
adc
ja
mov
sbb
jle
inc
add
fs
and
lods
inc
jge
push
fs
xor
pop
xchg
ss
pop
scas
mov
jl
or
divb
xor
addb
outsl
insl
pop
sbb
mov
daa
mov
sbb
in
dec
mov
push
cmp
jmp
inc
test
add
push
fsubrl
inc
test
xor
sub
jnp
loope
sub
xor
in
mov
or
and
inc
xor
leave
lret
roll
int
xchg
cwtl
arpl
and
pop
push
xor
cmp
inc
into
cltd
xchg
adc
add
hlt
xor
mov
jmp
jns
or
adc
clc
inc
addr16
xchg
pop
lds
jecxz
stc
das
add
adc
xor
xlat
mov
pop
xchg
mov
mov
lret
inc
inc
out
jo
xor
xchg
popf
aam
jl
pop
int
hlt
call
push
lcall
int
mov
test
jl
icebp
sar
loope
lcall
add
xchg
push
leave
xor
jns
insb
xor
xchg
inc
xor
pop
adc
in
pop
inc
repz
mov
mov
cmc
orl
push
pop
cmpb
aam
mov
fldcw
push
mov
fcmovb
xor
pop
mov
sbb
in
hlt
std
add
xchg
inc
in
dec
add
pop
cld
loop
inc
mov
stc
je
inc
push
leave
jnp
xor
mov
xchg
fnstenv
adc
cmp
push
insl
outsb
jmp
jge
pop
sub
sub
in
push
xchg
mov
gs
outsl
push
mov
pop
mov
jne
sub
add
hlt
out
test
movsl
pop
in
jae
scas
sbb
jg
inc
xchg
xor
add
pop
push
lods
add
pop
jp
cmp
sub
mov
in
enter
cltd
scas
int
mov
dec
into
and
mov
xchg
lods
lods
jo
aas
fstpl
es
add
mov
xor
je
lahf
scas
sahf
loopne
or
xchg
mov
cmc
shll
inc
ja
mov
rorl
sbb
cmp
ja
cmpsb
cmpl
jbe
mov
cmp
cmp
scas
dec
inc
les
aas
pop
aad
dec
pop
pop
imul
jnp
ret
xchg
aaa
rclb
scas
cmpsw
pusha
outsb
xchg
push
mov
push
mov
mov
rorb
lock
test
mov
fstpt
sub
loope
mov
xchg
pop
pop
mov
adcl
jecxz
sarl
mov
sub
insl
out
in
leave
cld
inc
adcl
cmp
data16
xchg
cmp
sbb
adc
dec
adc
js
loope
push
inc
adc
sub
mov
scas
or
nop
ret
pop
sbb
push
cmpsb
mov
pop
fmuls
jns
mov
ret
fcomip
insl
xchg
rorl
lret
sbb
lcall
xor
enter
loop
lret
mov
aas
setge
dec
imul
xchg
jecxz
shll
sbb
push
fdivs
jnp
mov
outsl
dec
pop
movsb
cmpsl
pop
add
jmp
add
and
mov
mov
ss
cld
out
aas
test
test
xor
or
test
ds
loop
fcos
pop
cwtl
dec
xchg
fsubs
fwait
push
out
fwait
jmp
lret
insl
lcall
push
or
cmp
jmp
jecxz
shlb
pop
js
idivb
pushf
adc
jle
cmp
or
mov
mov
sahf
push
adc
adc
mov
aas
int
iret
lods
xlat
imul
data16
xchg
sbb
jb
imul
subl
rcrl
jle
aad
scas
push
cmpsl
das
dec
fbld
decl
mov
fsts
rolb
outsl
fidivrl
mov
pop
enter
push
jp
mov
cmp
fimull
pop
and
ret
clc
mov
jno
shll
test
mov
fidivl
pop
mov
inc
pop
std
dec
sub
sti
dec
mov
fstpt
incl
sbb
mov
les
adc
inc
pushf
lcall
pop
jb
and
rcll
idivl
movsl
push
mov
ljmp
data16
pop
test
pop
mov
pop
sbb
sbb
ss
aad
fdivl
test
jg
sub
mov
mov
pushf
cld
out
cli
pop
push
pop
push
pop
mov
sbb
shl
lahf
pushf
or
mov
mov
out
imul
mov
ret
cwtl
loopne
mov
cwtl
push
or
outsl
add
pop
pop
push
call
imul
mov
cmp
nop
pop
shll
add
sub
dec
mov
sub
push
sub
or
iret
cmp
adc
sbb
lods
push
popa
mov
loop
cmp
data16
insb
pop
adc
add
popf
jge
xor
sub
cld
push
dec
inc
int
push
xlat
iret
jecxz
mov
inc
add
sub
insb
adc
sub
or
xor
call
adc
sbb
xor
cmc
mov
shl
xchg
cwtl
int3
and
dec
test
pop
popf
sub
stos
xor
jnp
dec
imul
cs
adc
xchg
repnz
push
add
add
cmp
or
data16
je
fisubl
xchg
mov
rcl
inc
push
lods
mov
jp
gs
loopne
or
xlat
mov
xor
fisubs
jb
push
dec
gs
push
orl
sub
pusha
inc
cmpsb
xchg
xor
out
push
cld
jbe
mov
out
out
xor
jmp
xor
ljmp
mov
sahf
je
out
outsb
loop
hlt
lods
dec
cmp
cmpsl
aad
and
mov
lods
daa
push
xor
cmova
roll
mov
fs
dec
mov
mov
mov
mov
or
lock
test
mov
xchg
fwait
int3
out
push
nop
ja
xchg
mov
xchg
cs
xchg
add
push
sbb
xor
stc
mov
sub
mov
xchg
jne
orb
call
sbb
pop
adc
push
dec
inc
imul
push
dec
and
push
xchg
subl
push
arpl
iret
pop
xchg
popa
in
mov
xorb
jecxz
lock
loop
negl
mull
add
repnz
icebp
push
jo
adc
jo
movsb
mov
aad
cmp
loope
cltd
aam
les
std
test
loope
mov
test
insl
dec
std
cmp
add
out
test
push
cmc
mov
mov
and
mov
sarb
mov
out
aad
das
outsb
adc
stos
dec
outsl
frstor
fisttps
scas
and
scas
rolb
sub
jmp
xchg
sbb
jmp
insb
fcomi
xor
ret
dec
sub
pop
xchg
test
push
mull
add
lock
xchg
loop
sub
mov
jae
sbb
repnz
adc
out
pop
das
stos
rolb
out
sarl
jle
int3
push
stos
xchg
mov
repz
and
aad
cmp
mov
cwtl
jne
cmp
inc
cmp
xchg
scas
pushf
rcrl
hlt
mov
iret
jecxz
push
adcb
dec
rolb
and
insl
orl
pop
or
dec
sub
aam
ljmp
aaa
push
mov
insb
xor
rcll
lods
cwtl
or
cmp
sub
cli
sub
xlat
push
xchg
jo
inc
lret
push
aad
xchg
lods
mov
lahf
cmp
sbb
mov
xchg
enter
les
aas
fwait
inc
inc
dec
inc
jbe
loop
enter
adc
jmp
divb
mov
jno
push
mov
ja
lea
icebp
in
insl
stos
ret
or
mov
movsb
or
push
sub
leave
dec
movsb
and
mov
popf
cmp
pop
mov
outsb
out
scas
nop
aaa
test
push
xchg
inc
mov
ds
daa
pop
rorl
sbb
adc
push
cmc
adc
sbb
push
dec
bound
pop
sbb
xchg
in
or
sub
cmc
cmpsb
pop
mov
sbb
gs
mov
fcomps
aad
das
fsubl
into
push
mov
hlt
cmp
jecxz
jp
mov
adc
lods
cltd
enter
movsl
cmp
jl
fcomi
data16
adc
in
mov
add
mov
xchg
popa
xchg
cmc
test
iret
xchg
push
xchg
ds
insl
mov
cwtl
xorb
insb
dec
xchg
insl
pop
int3
mov
shl
shll
aas
sbb
int3
xchg
fs
inc
mov
xor
adc
inc
bnd
stc
out
and
pop
inc
insb
inc
fdivs
dec
push
sbb
push
or
mov
cmp
repz
loope
jnp
inc
stos
std
jno
fnstcw
add
and
xchg
push
in
andb
mov
cltd
cmpsl
mov
xchg
adc
insb
test
adc
cmp
cmp
rcrb
das
fsub
fdivr
loop
pop
std
imul
push
xchg
add
shlb
int
pop
sbb
cmp
aaa
pusha
lcall
jne
pop
mov
push
icebp
mov
ljmp
fnstenv
sbb
and
or
out
incb
paddsw
dec
adc
in
xchg
sbb
scas
inc
adc
fdivrs
cmpsl
imul
jge
sub
repnz
inc
sub
jbe
and
jns
ret
out
push
mov
loopne
mov
dec
scas
in
mov
addb
daa
test
insb
inc
xchg
popf
push
pop
test
adc
incb
testb
xor
vpmacssdd
mov
jnp
pop
mov
mov
xchg
lea
xor
lahf
jmp
push
xchg
repz
test
outsb
fsubs
int
or
lret
mov
inc
xchg
test
push
mov
jae
pop
push
jae
ja
push
mov
fcomps
imul
xchg
cmp
aaa
mov
pop
outsl
hlt
les
mov
test
cmc
and
pop
sub
mov
test
add
shrb
shrb
dec
test
add
shlb
stos
push
inc
or
fldcw
mov
inc
xor
pop
fcoml
pop
mov
out
pop
sub
add
or
push
dec
sbb
dec
push
stos
outsl
and
inc
imul
jo
movsl
aas
cs
pushl
mov
cmpsb
add
popa
adc
aad
jno
gs
imul
push
push
adc
xchg
jle
and
in
scas
push
and
mov
fs
bound
dec
sub
jae
gs
bound
dec
dec
push
int
les
sbbl
ret
test
idiv
cmp
jbe,pt
icebp
leave
mov
jecxz
inc
nop
pop
ss
cmp
inc
repnz
into
leave
push
inc
fists
mov
aas
push
ja
mov
sbb
fimuls
add
clc
test
push
insb
push
in
jne
pop
jmp
xor
pop
lds
lods
mov
iret
movsb
xor
mov
repz
xor
shll
fwait
rcrl
cmp
pop
addr16
mov
mov
mov
jge
jle
insl
ljmp
daa
into
cmpsl
sbb
hlt
push
push
xor
sub
lcall
mov
push
and
lcall
ficoml
cmpsl
cmc
and
xchg
clc
mov
cmp
or
sbb
cmpsb
adc
cmp
movsl
rcrl
inc
dec
inc
jo
jecxz
inc
xchg
jl
cmp
mov
adc
xor
jg
out
movsl
cmpsb
loope
sbb
in
mov
and
pop
icebp
repz
fcoml
imul
ja
decl
hlt
mov
mov
shr
fs
and
jno
dec
jne
push
sarl
stc
mov
into
test
pop
outsl
movsl
xchg
sub
and
xchg
outsb
xlat
pop
test
enter
in
repz
or
xor
adc
push
imul
shll
test
lcall
rcl
data16
imul
loopne
pushf
testl
pop
or
push
lahf
pop
inc
sti
stos
inc
adc
ja
cli
push
leave
les
leave
les
xorl
and
xchg
fnstsw
dec
lret
imul
adc
jnp
jb
scas
fcmovu
in
xchg
ret
rcrl
cmp
in
lahf
xchg
jo
push
iret
sti
aam
mov
mov
or
ds
pop
shrl
decl
lret
outsb
sub
aam
scas
hlt
mov
pop
mov
cmc
jecxz
popa
clc
xchg
adc
dec
movsb
popf
mov
sbb
add
cmc
and
iret
pop
jmp
loope
imul
push
insb
dec
dec
or
movsb
mov
hlt
xchg
aam
sbb
repnz
sarb
mov
in
pop
jnp
mov
or
xor
sbb
sahf
xchg
lcall
cmp
lods
sub
jnp
insl
jo
stos
loopw
add
dec
hlt
shll
mov
sar
jns,pt
repz
in
out
dec
ds
jp
cwtl
mov
jno
xchg
pop
mov
test
mov
movsb
inc
add
dec
sahf
das
jnp
mov
fisubl
stos
rclb
pusha
ja
mov
mov
add
int3
or
pop
out
mov
imul
mov
jae
xchg
adc
pop
nop
jg
sahf
push
aam
gs
test
sub
call
int
aam
pop
sub
jo
scas
pop
pusha
sti
enter
sub
inc
in
int3
mov
dec
gs
lret
jb
mov
add
mov
movsb
rorl
mov
aas
jno
daa
leave
add
xlat
addl
shlb
xchg
clc
xor
mov
or
xchg
inc
das
mov
rcrb
lret
les
xchg
loopne
leave
mov
fistpl
add
loop
add
inc
std
fists
pop
movsb
jae
mov
push
sbb
fwait
jmp
jp
mov
push
loop
lret
dec
jb
xchg
or
ja
mov
fstl
xchg
jge
in
xchg
sbb
adcb
movsl
jp
xchg
jb
push
xchg
lock
mov
in
btr
pop
mov
and
fisttps
cld
in
dec
aaa
cmpsl
inc
xor
cmp
xchg
sub
jle
mov
aam
clc
ror
mov
sarb
push
std
les
cltd
js
mov
in
inc
rcrl
mov
jnp
mov
in
enter
into
xchg
sub
ret
mov
fsubrl
and
jecxz
xor
les
je
js
adc
adc
cltd
mov
sbb
scas
jb
shlb
jo
xlat
cmp
pop
mov
fdivrl
push
ljmp
or
cmpsb
dec
cmp
in
int
xor
sbb
dec
xchg
mov
sbb
imul
mov
shlb
cld
mov
inc
add
fwait
push
dec
icebp
movb
mov
cwtl
fcomps
ret
mov
inc
mov
test
dec
cmpl
mov
hlt
xchg
add
adc
mov
dec
inc
push
out
imul
adc
sti
mov
cmp
in
je
sarl
mov
aam
ss
cmp
test
cli
cli
xchg
sub
insb
pop
jns
outsl
inc
mov
loop
xor
push
sub
das
fnstenv
xor
xchg
into
jl
pop
repnz
inc
loopne
mov
xor
jg
stos
mov
loope
insl
mov
push
pop
call
outsl
xchg
and
adc
pop
cmp
jmp
es
in
push
or
xor
and
lret
mov
xchg
fisubl
fidivrs
xorl
shr
scas
jmp
and
inc
or
sbb
stos
inc
sbb
mov
cmp
testb
cmp
sub
mov
js
cmpsb
incb
inc
mov
push
outsl
mov
bound
andl
in
in
jae
cmp
in
loope
repz
negb
mov
icebp
aas
and
jo
push
push
xlat
adc
and
and
sbb
mov
cltd
popa
jl
popf
push
imulb
mov
pop
cmp
mov
test
imul
xchg
inc
lea
test
insb
inc
imul
pop
cmp
fwait
jo
call
movsb
dec
push
jb
mov
leave
cmp
bound
and
cmp
xorb
mov
mov
fnsave
adc
sub
hlt
push
addr16
cmpsl
sbb
or
pop
nop
xchg
popa
xor
dec
movsl
pop
pop
das
sti
icebp
sub
ss
dec
cmp
sub
jb
sbb
into
enter
xchg
push
jp
sbb
jno
xor
inc
test
push
lahf
pop
adc
enter
xor
movsb
leave
mov
push
mov
ds
test
pushf
sahf
or
cwtl
xor
loope
mov
aam
in
adc
inc
dec
nop
xor
lret
cmp
dec
sar
pop
jo
xchg
push
and
mov
aam
mov
call
dec
mov
jle
pop
xchg
inc
std
pop
out
adc
inc
jno
xor
bound
fdivrs
into
jb
subb
lea
ret
pop
lods
add
loopne
xor
test
outsl
in
fmulp
sbb
in
stc
mov
xor
push
and
or
loopne
in
xor
xchg
add
mov
sub
rclb
lock
aam
pop
pop
fildl
add
adc
mov
outsl
push
ja
rcrb
cmp
xchg
fcoms
aaa
add
xor
and
mov
int3
test
lods
jno
popa
or
xlat
inc
out
negb
scas
ret
mov
pminsw
jp
aad
mov
pushf
adc
sbb
jns
push
aas
test
mov
aas
fdivs
lea
cmc
adc
das
mov
imul
andb
into
aam
outsb
pusha
push
push
out
inc
sbb
outsl
stos
cmpsb
insb
mov
inc
loope
dec
cmp
ljmp
hlt
sbb
xor
pop
sub
enter
fsubrl
jo
jb
jmp
dec
mov
pop
pop
sub
loop
test
bsr
pop
data16
aam
fisubrl
mov
jp
sub
inc
push
add
clc
pop
mov
mov
repz
push
into
dec
orb
mov
mov
stos
ret
adc
insl
jb
pusha
adcb
push
cmp
push
sbb
adc
xchg
mov
mov
scas
ret
and
outsl
cmp
out
cmp
pop
sbb
jmp
pop
int3
jb
fucom
mov
sbb
pusha
stos
dec
pop
insb
xchg
mov
jle
std
testl
push
out
lahf
mov
aaa
xor
and
scas
iret
add
aad
and
sbb
jge
add
mov
imul
test
and
js
adc
xchg
add
in
ss
lods
aam
push
sub
pop
in
pop
ffreep
mov
inc
jb
loop
sar
lret
xor
mov
push
cmp
mov
or
scas
add
push
lods
adc
inc
aam
jbe
cmp
push
mov
loopne
xor
pushf
loopne
xor
add
xchg
fwait
mov
mov
shrl
call
jo
loopne
shl
pop
push
outsl
aaa
js
cmpsl
mov
push
cltd
outsb
xor
push
sahf
dec
lock
int3
adcb
sbb
cmp
push
xchg
rclb
pop
cli
in
fistl
adc
jg
aad
call
push
lds
movl
jmp
xor
and
adc
push
push
scas
arpl
insb
call
sub
xchg
or
std
mov
movsb
cmp
pop
cld
cwtl
call
dec
and
cmp
xchg
pop
or
inc
inc
gs
push
in
cmp
cld
addl
push
fnstcw
jbe
mov
int
sti
mov
dec
mov
jnp
xchg
pop
xlat
xor
adc
jp
cld
mov
mov
pop
out
ds
rcrb
adc
xchg
dec
cmp
sub
mov
cmp
mov
in
and
pop
out
jbe
cli
jbe
xchg
daa
adc
push
mov
call
cmpsb
adc
push
out
dec
jle
or
rcll
cmp
mov
jne
test
sbb
cmpsb
push
aas
cmc
ljmp
lods
iret
stc
or
repz
dec
add
aad
adc
xchg
sub
jne
popl
mov
movb
stos
add
scas
xor
inc
push
jno
fimuls
arpl
inc
movsl
dec
sub
aad
push
and
jo
lahf
xlat
sarb
adc
mov
push
ret
movsl
scas
into
test
orb
lret
xlat
push
lea
sub
inc
lock
push
jo
push
pop
rdpmc
es
data16
aaa
call
loopne
pop
jae
xchg
inc
pop
add
xor
push
or
repnz
into
mov
cli
inc
pop
and
dec
cmp
jp
push
sbb
sarl
mov
fsubrl
cmpsl
adc
loope
adc
jae
mov
mov
mov
jnp
adc
roll
fisubs
mov
mov
shlb
mov
push
push
mov
loope
pcmpeqd
mov
xor
in
imull
leave
jle
loop
cmpb
cwtl
cs
orl
rol
popf
lods
inc
sbb
add
ss
cmp
shlb
sbb
jo
rclb
xchg
push
out
push
cld
mov
fucomip
dec
hlt
adc
cmp
jae
xchg
insl
xchg
pop
dec
stos
xor
xor
dec
xchg
mov
pop
add
aas
cmp
inc
ljmp
inc
clc
push
daa
inc
hlt
mov
push
adc
mov
push
jns
mov
mov
test
adc
fidivl
sarb
int3
xor
ret
push
push
jmp
pop
xlat
and
jmp
test
and
mov
lds
xlat
sub
bound
lcall
pop
pop
cmpsl
adc
shll
sti
xchg
enter
push
lds
jge
lea
mov
data16
and
dec
rorl
mov
inc
and
adc
push
hlt
cmp
addb
jne
stos
or
xchg
inc
or
mov
push
inc
es
sub
cmpsl
inc
xchg
call
fidivrl
loopne
or
or
push
mov
scas
sbb
aaa
add
and
sbb
imul
xor
mov
jmp
jg
xchg
adc
xchg
or
dec
push
mov
inc
mov
jae
push
add
jns
xor
mov
sub
pop
jp
xchg
idiv
xlat
add
pusha
mov
pop
aam
jae
jmp
call
loope
adc
xor
jae
mov
aad
pop
shll
mov
mov
add
add
mov
fstpl
ret
rcl
cmpsl
adc
nop
xor
mov
mov
sarb
xchg
xlat
mov
mov
sub
or
mov
ret
jo
test
pop
cs
sub
add
imul
cli
cmp
arpl
jp
ljmp
sub
je
fiadds
sbb
inc
outsl
dec
mov
adc
mov
jno
dec
call
jns
xchg
mov
cld
popa
adc
mov
sbb
out
xchg
bound
insb
dec
sbb
fisubrs
fidivrl
retw
sbb
cwtl
loop
movsl
ja
jae
add
mov
cmp
dec
jo
pop
dec
fsubrs
dec
movsb
sub
andb
inc
mov
add
xchg
mov
or
clc
cld
fcoms
rcr
push
insb
push
out
pop
jecxz
mov
xor
sub
jp
mov
xchg
jae
aad
mov
fld
gs
pop
inc
aaa
adc
aaa
push
loope
and
and
cwtl
xor
sub
aas
jg
out
ljmp
not
aas
popf
and
out
clts
in
in
mov
mov
stos
push
repz
mov
cltd
sarb
aad
fwait
xchg
mov
xor
in
dec
pop
mov
mov
in
push
cld
mov
cwtl
hlt
sbb
pusha
icebp
mov
ss
mov
add
push
std
add
lods
popl
mov
testl
pop
xor
jge
xchg
lret
or
mov
dec
ret
arpl
sbb
mov
decl
pop
popf
dec
push
and
sarl
dec
in
imul
jg
imull
std
pop
in
pop
xchg
jo
call
popa
add
pop
orl
mov
adc
loopne
sbb
jge
sbb
cmc
push
inc
mov
adc
ja
data16
into
mov
push
aaa
xchg
fcmovnu
lret
sbb
aam
ss
outsl
jl
enter
stc
rolb
cmp
jb
loopne
mov
adc
jg
pop
mov
mov
jbe
mov
mov
popa
xor
push
ds
inc
ret
lret
xchg
pushf
pop
xorb
repz
mov
push
pop
mov
imul
push
jns
inc
aas
cmpsb
jp
aas
dec
popf
adc
xor
mov
adc
jp
mov
js
sbb
stos
fmuls
and
lcall
or
sub
mov
pop
xchg
mov
fistpl
in
mov
test
lea
ret
dec
pop
mov
sub
out
stos
or
xor
ret
and
bound
jmp
xchg
mov
test
fnsave
inc
push
push
sti
cwtl
cli
iret
insb
mov
xor
add
int3
mov
popf
mov
mov
mov
mov
out
pop
stos
add
hlt
mov
push
jns
or
cmp
pop
xchg
rol
fisttpl
mov
jge
dec
and
outsl
inc
aam
sub
cltd
std
lods
and
data16
xchg
jecxz
dec
into
outsb
daa
pop
mov
pushf
enter
cld
and
or
xor
shll
pop
dec
sbb
fidivrl
leave
pop
js
xor
into
out
xchg
add
push
ja
orb
mov
xchg
cwtl
mov
xchg
adc
es
icebp
je
aam
jecxz
stc
jne
mov
xor
idivl
and
out
inc
cmpsb
jecxz
inc
add
fcmovne
push
sbb
xchg
xlat
pop
lret
push
inc
repnz
pop
xchg
push
mov
movq
aaa
enter
jg
mov
test
cmp
stos
iret
nop
xlat
aas
jle
mov
dec
adc
cmc
and
xchg
jo
inc
stc
fdivrl
jb
or
mov
xor
aaa
xchg
push
add
sub
push
xlat
and
or
hlt
rclb
inc
mov
pushf
or
push
dec
shll
pop
and
jge
cld
xor
mov
jmp
xchg
es
push
jecxz
fcomps
ljmp
xor
mov
lea
mov
pop
fnsave
push
push
push
int3
mov
imul
push
gs
aad
pop
or
in
xor
data16
clc
cmp
sbb
ficomps
fstpl
mov
jmp
cmpsb
insl
sbb
xor
inc
lret
shll
dec
sub
sub
outsb
loopne
fdivp
pop
mov
fcmove
outsb
insb
push
xchg
fwait
mov
stos
or
mov
adc
inc
test
repnz
push
addr16
scas
aas
xor
mov
std
fsubl
shlb
mov
add
lea
cli
das
aas
rcrl
nop
lock
mov
sub
cmc
clc
jno
mov
inc
dec
sub
outsl
add
push
popf
lea
xchg
mov
jmp
pop
sub
fcmovu
pop
sbb
fwait
cld
cltd
mov
jecxz
xchg
daa
hlt
xor
xchg
ja
cmp
gs
cmpsb
icebp
pop
test
dec
rclb
mov
shr
push
stos
cmp
jecxz
jecxz
adc
clc
ret
sti
push
xor
adc
or
scas
mov
into
jmp
stos
push
pop
dec
test
repz
aaa
mov
scas
popa
arpl
int
xor
loope
out
xchg
dec
mov
das
xchg
dec
das
ja
daa
ds
sahf
jbe
rcl
or
add
fisttpll
out
cmp
repz
aam
scas
push
inc
or
pop
call
sub
ret
popa
jl
jmp
xor
ret
push
inc
mov
dec
jmp
jbe
leave
addr16
pop
cltd
mov
test
jg
mov
or
dec
and
mov
ret
push
daa
out
jl
push
rclb
jo
and
sti
aaa
jl
iret
jg
or
outsl
pushf
pop
jbe
lds
sbb
in
dec
jb
adc
dec
dec
fadds
test
dec
push
leave
xchg
hlt
add
push
and
jp
loop
cmp
out
mov
in
sbb
mov
insl
mov
aad
jle
adc
inc
gs
jo
xchg
mov
cs
push
push
add
aam
or
xchg
mov
adc
jle
fmul
das
sbb
inc
cmp
dec
lret
push
xchg
mov
lods
lods
jg
xor
xchg
sbb
cmp
or
and
dec
insl
inc
sub
aad
adc
out
xchg
sub
mov
daa
xor
sbb
loop
sub
aam
into
rcll
call
imul
xchg
xor
xor
adc
test
inc
pop
iret
fistps
or
mov
xor
mov
cmp
or
scas
in
loopew
les
pop
xchg
pop
add
inc
aaa
or
imul
nopl
shrl
push
push
ret
dec
imul
outsb
insl
and
mov
push
lods
lahf
mov
cmp
push
nop
test
leave
aad
nop
add
cmp
jge
cmp
cmp
dec
mov
xlat
movsb
sbb
push
es
jp
sbb
ljmp
scas
pop
rcrb
inc
xor
adc
mov
in
mov
sahf
fmulp
push
adc
cmp
sahf
jnp
add
push
repz
pop
sti
and
push
inc
sub
lea
rcll
push
sub
inc
iret
orl
dec
ja
sbb
sti
test
inc
inc
mov
cli
jmp
aad
sub
shll
lret
sahf
cmpsl
jbe
mov
cmpsb
out
imul
mov
sbbb
dec
hlt
rcrl
mov
divb
lods
shrl
xchg
int
or
cmp
xchg
cmp
cld
dec
add
adc
pop
jbe
jo
jns
hlt
or
push
mov
mov
cld
fbld
loope
cmp
lcall
dec
sbb
cs
out
lock
mov
test
test
out
sub
stc
loopne
hlt
sbb
int3
mov
stos
adc
int
mov
sbb
mov
fwait
adc
leave
xor
imul
dec
xchg
push
daa
pusha
or
outsl
das
adc
xchg
pop
fcmovne
lret
lods
ret
and
xchg
rcl
jb
cmpsb
sbb
hlt
into
repnz
loopne
cld
lock
add
sbbl
imul
aam
mov
aam
jmp
jg
jb
mov
lahf
int
jg
test
in
xchg
xchg
in
imul
outsl
outsb
clc
xor
stc
stc
push
push
sti
pop
mov
dec
jge
aam
hlt
dec
imull
mov
mov
fwait
adc
nop
out
adc
imul
jnp
ljmp
dec
enter
or
xor
lea
push
sbb
jl
xor
in
and
adc
pusha
xor
sub
inc
scas
inc
notl
fwait
and
insb
lret
mov
sar
enter
dec
int
aas
ret
pop
add
cmp
into
leave
add
loope
sbb
mov
sti
cmpsl
lods
adc
test
or
jg
je
mov
lock
ljmp
movsb
and
push
and
push
mov
xchg
cmpsl
rol
arpl
cli
push
adc
jg
scas
mov
pop
pop
mov
shl
in
jnp
int3
in
jp
jmp
insl
lahf
sbb
mov
inc
xchg
xchg
shrb
pusha
or
loop
ds
sti
jle
mov
sub
mov
sub
lcall
imul
jmp
cmp
inc
push
dec
lret
dec
dec
mov
loope
cmovge
ljmp
sub
and
scas
sbb
adc
cwtl
push
cmp
or
outsl
sti
lock
es
ret
ret
call
sbbb
cmpsl
jg
push
xchg
test
adc
and
insb
cmc
lds
sbb
movsl
pop
ror
lea
mov
lock
push
mov
adc
jmp
daa
jno
lds
sbb
sub
add
inc
out
popa
push
push
xchg
subb
dec
mov
ds
addl
jmp
jg
lods
fcompl
or
add
loop
cld
stc
pop
loopne
iret
xchg
cmp
repz
pop
push
out
sbb
add
and
mov
sub
mov
aam
jl
lea
daa
jg
inc
sbb
popa
inc
out
je
addr16
ljmp
imul
stos
subb
inc
pop
sub
mov
lock
adc
movsl
cwtl
mov
xor
cltd
jl
out
pop
fisubrs
push
ss
nop
jp
and
mov
or
cmp
xorb
cmp
jnp
xor
dec
mov
sbb
or
ret
mov
cmp
aad
mov
add
lea
mov
clc
mov
out
sahf
and
outsb
outsl
push
pusha
sub
notl
aaa
sub
orb
jo
mov
scas
lcall
aam
in
xor
cs
jmp
pop
pop
leave
mov
cmpb
pop
imul
cmc
loope
pop
shll
pop
ret
add
xor
das
jg
jae
je
shl
notb
out
adc
mulb
mov
mov
pop
mov
sub
loopne
sub
iret
std
cmp
cmp
mov
fsubl
cmp
bound
loop
sbb
scas
fsubl
mov
lods
sbb
pop
dec
jb
cmp
pop
jg
movsb
xorl
sub
or
sub
jo
or
pop
lahf
push
rcrl
mov
jl
rorb
add
push
out
and
pop
jns
pop
aam
enter
in
and
mov
lret
outsl
pop
ret
popa
pop
or
jl
xchg
and
pop
jo,pn
fsub
inc
idivl
test
popa
or
fstps
cmp
mov
xor
bound
jmp
sub
shlb
xor
pop
sarb
xor
dec
lahf
out
imul
xchg
pusha
and
and
insl
lcall
repnz
lea
adc
out
pop
aam
pop
push
jmp
dec
jne
push
add
push
les
into
jo
push
pop
xchg
push
jmp
lock
test
lret
jl
dec
inc
mov
or
mov
repnz
pusha
add
repz
ljmp
push
jnp
lea
testb
jnp
or
push
pop
loope
js
rcll
xor
jecxz
fmuls
mov
inc
decb
test
aam
repnz
xchg
cmpsl
rolb
xchg
in
outsb
mov
js
push
xor
jle
jne
and
adc
and
loopne
xchg
in
xorb
imul
xchg
adc
lcall
or
adc
fsincos
jno
jecxz
mov
add
xchg
je
dec
je
andl
jge
insb
fdivrl
xor
outsl
inc
xor
scas
shrb
cmp
sub
rcrb
sbb
adc
xchg
popa
sbb
push
mov
bound
addr16
inc
dec
je
mov
cmpsb
neg
push
add
cmp
rcrl
inc
std
pop
lret
or
fucom
rorl
sbb
pop
xor
adc
ja
test
out
sub
sub
lcall
clc
hlt
jp
push
add
cltd
dec
xchg
xor
push
inc
je
cli
shrl
int
popf
arpl
mov
push
jae
jmp
arpl
scas
sbb
adc
cmc
rcr
das
mov
adc
xchg
mov
push
push
negl
xchg
xchg
jg
add
push
xchg
in
add
adc
dec
xchg
sub
xchg
pop
dec
and
stos
jnp
clc
sbb
loope
iret
pushf
cmp
stos
fwait
imulb
daa
mov
inc
or
xchg
xchg
loope
fwait
and
sbb
adcl
jb
mov
in
pop
js
pop
outsl
sub
pushf
loop
xchg
sub
jns
pop
xchg
int3
sub
pop
ljmp
pop
leave
mov
dec
mov
mov
js
cltd
jnp
iret
ret
mov
pushf
insl
call
or
fldt
fbstp
sub
sub
push
ds
sbb
lahf
inc
sub
lahf
inc
lahf
mov
in
sbb
jmp
insb
inc
or
imul
mov
imul
adc
fcmovnb
into
jnp
lea
xchg
mov
lahf
sub
aam
xchg
xchg
xchg
test
and
cwtl
lds
pop
xchg
inc
dec
xchg
std
dec
out
sub
inc
fstpt
in
bound
inc
shr
imul
test
or
rorl
dec
mov
inc
les
pop
addr16
pop
add
push
ret
shrl
mov
and
push
jo
sbb
add
sub
mov
cmp
sti
push
jle
hlt
ds
or
xor
into
xor
ljmp
leave
cmpsb
sbb
cmp
sub
scas
mull
jge
hlt
jns
rolb
mov
add
adc
mov
jo
xlat
icebp
pusha
or
in
ficoml
fwait
ds
inc
cld
scas
insb
cmc
mov
dec
or
ret
sbb
add
xor
lods
fmul
ja
xor
cmp
mov
mov
mov
mov
jmp
repz
mov
add
dec
xlat
setb
movsb
push
push
add
and
push
rcll
cmc
and
push
insb
outsb
inc
lcall
fnstenv
adc
fs
add
mov
inc
mov
or
xchg
rcrl
ret
or
stos
push
cmp
lret
xor
mov
sub
stc
test
mov
xor
cltd
divb
add
mov
clc
or
orl
jl
push
inc
mov
outsb
jne
mov
inc
jle
fistps
mov
pushl
incb
mov
decl
in
iret
test
xor
xchg
xchg
lods
test
xchg
cltd
rcl
mov
popf
sub
sub
lret
jo
mov
shrl
fnstenv
mov
xchg
jbe
bound
push
sub
es
add
mov
and
gs
jp
test
les
movzbl
or
loopne
mov
test
and
push
popa
cli
mov
cmp
scas
cmc
test
and
lds
addl
push
adc
int
pop
repz
imul
lods
sub
testl
cld
lret
push
cli
std
je
sub
mov
xchg
pop
xchg
aas
mov
xor
adc
mov
cmp
mov
mov
jecxz
push
hlt
cmp
in
sarb
movsb
dec
dec
in
sbb
mov
jp
adc
clc
add
xlat
data16
cmc
add
push
inc
push
std
dec
mov
in
pop
cltd
pop
dec
lods
xor
fildll
pop
xchg
push
mov
ret
sbb
add
test
xchg
pop
mov
push
ret
icebp
pop
inc
and
shrb
or
test
in
mov
adc
dec
shlb
lds
popf
sub
ss
or
lea
sarb
lods
ret
inc
push
mov
les
xchg
jl
sub
mov
bound
bound
pop
pop
nop
or
imul
add
cmp
and
repz
adc
sub
mov
cld
in
push
adc
fildl
iret
insl
mov
fisttps
aad
xchg
dec
xor
xchg
sbb
xor
cmp
stos
dec
xlat
ret
mov
in
movsb
iret
rclb
scas
push
inc
in
loopne
adc
adc
mov
enter
sbb
or
cmp
scas
mov
enter
mov
jne
lods
add
inc
mov
enter
enter
cmp
mov
stc
sahf
sti
js
mov
bound
enter
les
lret
in
sarb
cmc
lret
ret
jnp
rorl
or
hlt
lahf
push
adc
test
sbb
mov
push
loop
jl
bound
push
stc
inc
or
jg
js
stos
and
xchg
adc
sub
ljmp
notb
sti
mov
out
sub
and
push
movsl
xchg
addr16
rcrl
shlb
test
lods
xchg
mov
movb
cmp
icebp
in
jge
sub
call
jb
xchg
xlat
call
rcr
mov
push
inc
and
push
pop
ds
mov
scas
outsb
pop
movsb
cmpsb
xlat
aad
shrl
mov
test
mov
xchg
mov
sbb
int
in
pop
mov
cpuid
pop
movsb
xor
inc
xchg
sti
sub
testb
js
xor
sub
js
and
fdivl
cmpsb
into
pop
out
dec
cmp
and
aaa
scas
inc
out
hlt
out
popf
mov
cmp
cmp
cmp
mov
mov
pop
lds
nop
ficoml
test
loope
xchg
cmp
pushf
mov
cmp
test
fiadds
rcrb
jo
iret
jbe
sub
dec
sbb
stos
out
dec
cmpsl
adc
mov
cmp
fnstsw
mov
and
push
lret
mov
pushl
jle
test
fnstsw
insl
pushf
adc
jg
sbb
in
jecxz
sub
dec
test
push
jnp
or
lods
or
fdivr
cmp
mov
sarb
sbb
sub
arpl
repnz
jo
enter
lods
dec
cmp
testb
ljmp
in
ficoms
xchg
inc
cmp
lods
mov
leave
arpl
lods
in
sub
adc
mov
ljmp
pop
mov
xor
pushf
popf
insl
adc
dec
in
andb
mov
mov
mov
mov
dec
out
add
mov
jle
sub
or
mov
cld
fbstp
mov
mov
push
cmp
outsb
fisubrs
jp
lahf
push
sahf
mov
xor
stc
arpl
out
sbb
cmp
cmc
add
lret
ds
insl
or
push
jo
dec
aam
repnz
je
sub
and
mov
mov
cld
stos
mov
mov
xchg
sarl
je
jno
lock
sbb
mov
pop
push
lret
lret
test
ja
inc
das
pop
xchg
jp
adc
loopne
push
and
ret
xor
add
mov
movsl
popa
push
mov
fstl
out
cmpsb
add
out
jne
sub
call
fisttpl
xlat
jle
or
movsl
cmpsb
jne
shl
ds
cs
dec
jb
jb
adc
cltd
and
or
out
nop
aas
mov
xchg
sub
mov
movsb
repnz
xchg
mov
add
ds
adcb
jo
test
or
push
cs
loop
in
jg
jne
mov
push
out
cmpsl
movsb
inc
lcall
cmp
sbb
jns
icebp
or
inc
jg
ja
xchg
pop
outsl
pop
subb
mov
adc
enter
add
push
cmp
rcl
and
xchg
mov
test
mov
add
xchg
push
insb
rcll
mov
mov
in
push
arpl
mov
and
pop
cmp
dec
outsl
xchg
adc
scas
jno
jl
pop
mov
and
push
mov
and
mov
fbld
adc
xadd
ds
mov
fcoml
fnstenv
sub
push
sti
outsl
test
adc
cmpl
and
mov
test
dec
out
shrl
ret
in
loop
movsb
or
or
cli
sub
test
dec
shrb
and
push
test
xor
cltd
pushf
add
sub
nop
add
loope
dec
and
xlat
dec
sbb
pop
xor
ret
add
sarb
push
xchg
cmc
mov
inc
gs
cld
inc
inc
arpl
dec
cmpl
lcall
xchg
adcl
pop
sbb
enter
sbb
adc
pushf
lret
jns
pop
enter
jb
sub
and
icebp
data16
inc
sub
into
xor
fists
movsl
std
leave
mov
test
popf
cld
adcb
movsb
inc
cmp
jno
adc
sub
mov
push
repnz
into
loop
int
mov
xchg
fnstenv
push
xor
xchg
callw
jg
lods
pop
and
imul
inc
push
leave
xchg
jne
cmpsb
out
popa
pop
clc
sbb
xor
ficoml
lods
in
cmpsl
lret
movsb
lahf
mov
outsl
enter
loope
call
repz
test
sub
xor
mov
insb
or
loopne
fwait
fs
sub
test
mov
lock
mov
cld
fsubrl
jo
mov
ret
mov
mov
pusha
fidivrl
push
mov
sar
and
adc
ret
pop
mov
dec
add
lcall
sub
test
push
pushf
inc
mov
sbb
inc
mov
in
loop
je
xchg
inc
pop
mov
hlt
mov
negl
shl
xor
mov
movsb
and
cmpsl
sub
sarb
or
sub
fistl
jle
iret
xchg
pop
fistpll
fcmovne
cmpsb
leave
pop
and
mov
ss
aaa
mov
sub
push
mov
xchg
dec
aaa
bound
das
or
cwtl
sti
add
sub
push
cld
sub
es
and
dec
cmp
aas
add
gs
int3
stos
pop
sbb
dec
adc
out
dec
xchg
and
adc
ja
xchg
inc
dec
inc
mov
push
or
fwait
cltd
dec
pop
insl
in
cmp
popf
cmpsl
jecxz
enter
andl
iret
pop
pop
and
test
sub
sub
xor
xchg
out
xchg
dec
jecxz
cld
jnp
pminsw
cmp
and
in
or
inc
ljmp
lock
mov
gs
sub
cmpsb
mov
adc
push
mov
fdivr
in
push
ja
xorl
jbe
js
lock
mov
lea
xchg
sti
inc
mov
in
push
fidivrl
data16
movsb
pop
inc
lahf
jmp
inc
jo
xor
divb
cmp
orl
or
hlt
or
push
sbb
jp
bsf
lahf
jp
call
push
xor
lods
js
or
aaa
pop
pop
mov
mov
mov
ficompl
ljmp
imul
or
push
popa
mov
fsubrl
nop
in
inc
inc
mov
es
aas
int3
fcmove
pop
jo
outsl
or
push
icebp
push
lcall
btr
ja
pop
and
cld
fld
sbb
das
fldenv
loop
xchg
xchg
and
lret
mov
xor
mov
lock
and
dec
mov
sub
stos
stos
cmpsb
push
scas
pop
testl
and
or
jge
xchg
mov
pop
call
insb
lea
jl
cltd
adc
cmp
cmp
mov
jg
mov
push
sbb
mov
or
or
adc
js
pop
pop
test
mov
mov
test
pop
add
fnstsw
inc
mov
adc
mov
mov
fisubrl
inc
and
jns
lret
lret
xlat
pusha
jae
mov
jne
mov
sub
daa
sbb
add
fstpl
dec
push
outsl
jg
popl
xchg
imul
push
je
mov
cs
fbstp
ret
std
jg
ljmp
mov
xchg
rorb
sbb
mov
sub
mov
pminsw
pop
cmpsl
jl
pushf
addr16
mov
out
adc
ret
nop
ret
mov
xchg
insb
xchg
jl
fiadds
and
call
imul
into
imul
push
and
inc
xchg
movsb
cmc
jge
sub
mov
in
data16
push
adc
test
movsb
in
dec
xor
jb
mov
addl
xor
lds
fildl
push
in
dec
call
popf
inc
mov
sbb
test
pop
daa
setge
in
cmp
adc
sbb
negb
jge
cli
cmp
xorl
sub
scas
xor
jnp
popa
mov
xchg
xchg
mov
movsb
popf
loopne
push
fcoml
mov
sub
pop
jb
test
pop
imul
push
in
imul
test
out
dec
inc
xchg
dec
jge
or
das
enter
call
pop
icebp
inc
add
lret
out
pop
je
cmp
or
mov
stos
pop
sub
push
push
and
xchg
call
fnstcw
xor
xchg
aad
bound
int
add
jb
adc
out
and
or
mov
sahf
lock
adc
test
bound
and
inc
jnp
pusha
sub
icebp
sub
rcll
lret
fldenv
xlat
inc
xlat
divl
jle
scas
out
lock
fcoml
push
mov
jo
cmc
movsb
loop
mov
dec
aam
cmp
sbb
shlb
rcrl
push
mov
iret
js
mov
jb
outsl
pop
jle
cmp
imul
movsb
out
push
imull
xchg
mov
arpl
aam
stc
mov
sti
subl
xchg
xchg
and
cmp
inc
pop
push
fistpll
lahf
ret
xor
xor
sbb
sub
lods
pop
mov
push
mov
xchg
mov
in
sahf
add
add
aam
push
in
mov
mov
inc
jmp
add
mov
jmp
stos
movsl
enter
mov
sub
call
inc
iret
xchg
scas
sbb
jns
sbb
mov
jl
cmp
aas
les
and
out
inc
and
shlb
imul
push
hlt
dec
hlt
adc
aas
xchg
mov
cmc
scas
bnd
dec
push
inc
push
sub
cmp
movsl
xor
xor
ret
fidivl
lock
std
cs
fidivs
jmp
clc
mov
shl
jmp
loope
and
lahf
popl
shll
pop
mov
jbe
rcrl
icebp
inc
ljmp
lea
lods
rcrl
cmpsb
stos
adc
push
mov
push
and
jo
test
sub
pop
mov
into
pop
mov
push
dec
ret
sbb
test
add
adc
xor
dec
xor
add
fwait
push
cs
sarl
sbb
pop
das
and
loopne
dec
pop
mov
bound
mov
in
add
out
popf
lods
and
loopne
xor
push
xor
dec
and
sbb
pop
or
push
pop
xchg
shrl
mov
jo
xchg
or
pop
jge
pop
fldenv
mov
pop
push
into
push
movsl
std
call
cmp
shll
jno
inc
insl
jbe
xorb
loop
leave
jnp
jle
xchg
mov
jmp
mov
mov
sub
inc
nop
adc
or
jmp
pusha
dec
stos
ss
ja
mov
cmc
in
sub
stos
out
jno
pop
cli
lods
cmc
mov
push
je
enter
mov
xor
inc
movsl
push
or
pop
sub
in
mov
out
pop
mov
and
pop
and
cmpsl
or
add
adc
dec
dec
out
pop
sbb
sub
jg
hlt
addr16
popf
pushf
mov
out
outsb
movsl
sub
mov
mov
rcrl
cmp
or
andb
ret
sub
aas
bound
and
inc
es
inc
cmp
aas
xchg
pop
insb
or
stos
roll
cmc
mov
int3
popa
or
ss
shr
dec
cli
and
mov
ljmp
repnz
lret
xor
dec
mov
pop
ret
push
mov
fsubrs
sub
add
inc
aam
gs
cltd
mov
mov
addr16
outsl
rclw
lret
adc
jnp
cltd
dec
dec
out
dec
movsl
loopne
mov
sub
push
insb
push
add
out
xchg
rcr
mov
enter
insb
jns
mov
and
movsl
cmpsl
out
ret
scas
cld
cmpsl
lret
push
data16
xrelease
nop
int3
mov
push
test
test
aad
pop
lea
scas
std
jo
test
rorb
inc
ret
dec
jecxz
or
lods
adc
shl
aam
pop
or
icebp
cmpsl
or
enter
jle
jge
fsubrs
sti
jne
adc
sti
loop
mov
out
es
je
int
xchg
jmp
push
daa
pop
loopne
setne
and
inc
and
imul
add
push
outsb
mov
fdivs
mov
cmp
mov
xchg
fcomip
pop
push
cmp
in
cmp
xor
cmp
sbb
cmpsb
and
imulb
mov
out
outsb
ja
movsl
pop
lret
stc
iret
push
mov
mov
sti
movsb
test
testb
sbb
loop
je
lret
mov
mov
icebp
cmc
xchg
jb
std
xchg
aam
jmp
sub
mov
ret
xchg
dec
fwait
pop
sbb
xchg
push
hlt
xchg
out
xchg
mov
andl
and
scas
pop
mov
inc
adc
sbb
clc
add
cmp
and
loope
mov
mov
sti
cwtl
lea
sub
mov
inc
sbb
inc
adc
cmpsl
mov
les
and
lcall
inc
cwtl
sbb
push
sub
sub
push
push
xlat
pop
mov
rcll
cltd
and
cmp
out
xchg
mov
dec
repz
imul
lods
push
cmp
ja
int
nop
es
loop
sub
pop
aas
sbb
in
cld
push
mov
sbb
lock
push
push
xchg
mov
je
jno
or
dec
adc
inc
mov
rcr
movsb
push
movsl
insl
and
loope
testl
test
mov
ficoms
or
lods
shlb
lret
repnz
cvtps2pi
repz
outsb
cmp
sbb
sbb
cmp
in
mov
sbb
mov
ljmp
adcb
adc
mov
mov
inc
add
dec
jge
addr16
fmuls
in
cmc
push
jb
adc
into
cld
repz
mov
or
inc
mov
push
aad
cld
stos
adc
ljmp
test
mov
aam
pop
fstl
sbb
adcl
mov
fwait
ss
mov
push
jge
and
sbb
mov
mov
dec
xchg
shrl
xor
mov
sbb
out
lahf
mov
adc
clc
aas
fsubl
jae
test
cwtl
sub
mov
mov
and
js
scas
mov
push
int3
and
imul
xorb
and
sbb
adc
adc
std
jb
lods
jae
inc
push
xor
in
sbb
xor
andb
lods
or
lods
lock
push
cmp
sbb
mov
xchg
push
outsl
adc
dec
and
test
push
or
lock
sahf
mov
icebp
lcall
je
dec
sti
xchg
push
icebp
mov
jb
pop
std
lret
mov
inc
and
push
cli
push
sbb
andl
xchg
rcrb
je
lods
mov
shr
sbbl
fidivs
mov
add
add
push
mov
sub
cmp
sbb
cmpsl
sbb
pop
jg
or
xor
movsb
imul
sbb
stos
clc
into
mov
jbe
and
out
enter
pop
out
ja
xor
ret
fbld
push
movsb
add
pusha
dec
iret
mov
pusha
daa
fsubr
fistpl
aam
aaa
mov
into
sub
pushf
jl
jo
fs
cmp
lcall
cwtl
sbbb
inc
pop
sbb
jbe
int
xchg
cltd
pop
insb
popf
out
ret
lods
or
movsb
lds
inc
push
cmpsl
popa
loope
or
bound
aad
icebp
inc
rorb
test
jle
sbb
ljmp
fsubp
xor
fiadds
cmp
pop
xchg
and
pop
je
lret
pop
lods
outsl
mov
jl
jmp
lds
adc
jbe
xor
inc
pop
and
mov
aam
test
ffreep
idivb
mov
fstpt
push
bound
mov
or
lret
lret
xor
cmp
loope
ret
daa
jnp
sbb
test
sbb
sbb
add
pushf
jnp
adc
popf
mov
out
fwait
and
pop
sub
sbb
jle
in
add
mov
outsb
mov
in
imul
lahf
int
mov
inc
lock
movsb
push
push
push
dec
clc
jne
aas
adc
xchg
loopne
call
popf
sbb
xchg
xchg
jmp
or
fwait
outsb
pop
mov
xchg
pop
mov
dec
inc
call
add
or
in
dec
sbb
aas
jp
in
lret
outsl
out
dec
push
pushf
adc
clc
es
jb
add
xchg
imul
add
rcr
ret
hlt
add
cmp
xchg
cmpl
mov
xchg
xor
cltd
sub
inc
iret
xor
inc
push
or
inc
scas
gs
sbb
dec
out
xchg
adc
aaa
repz
aaa
sbb
std
mov
dec
lahf
jns
inc
mov
jnp
iret
pop
movsb
inc
add
dec
push
pop
add
mov
ja
adc
xor
data16
insb
xorl
sbb
ss
or
icebp
outsb
xchg
cmp
sub
push
dec
mov
mov
jle
lods
daa
mov
and
or
out
cmp
lds
xchg
mov
and
popl
xor
out
sbb
inc
ret
icebp
sbb
in
mov
lret
jo
sahf
cmp
or
push
sbb
aaa
cmp
rclb
aam
mov
std
cmpsb
fsubr
jne
je
iret
inc
ds
cmpsb
in
inc
fiaddl
imul
test
and
les
fidivs
cmpsb
aam
mov
movsb
xchg
push
hlt
push
add
rorb
ja
mov
sub
adc
adc
push
pop
loope
inc
add
outsl
mov
sahf
lret
out
mov
addb
or
sbbb
fwait
jb
ljmp
mov
loope
inc
in
inc
stc
lea
push
cmp
out
pop
stc
or
xchg
inc
lret
mov
stc
clc
nop
mov
out
pop
dec
push
mov
jne
data16
cmp
mov
mov
mov
mov
mov
sub
out
cmpsb
push
sub
ret
out
subb
pop
mov
adc
xchg
fistpl
scas
mov
inc
sbb
or
pop
test
bnd
and
jle
xor
dec
imull
ret
pop
lret
push
iret
aas
jecxz
sub
sub
cmp
imul
psrlw
cs
lahf
xchg
cmpsb
imul
mov
loopne
fincstp
mov
das
enter
and
cmc
or
nop
gs
push
pop
inc
dec
shl
add
shl
add
sub
inc
je
add
insl
xor
nop
lea
aaa
out
pusha
pop
mov
sbb
out
cmpsl
xchg
xor
add
xchg
dec
dec
or
ror
dec
out
jo
fadds
lods
sub
jle
mov
add
loope
sbb
push
lret
in
inc
call
ret
scas
adc
mov
lcall
cld
sti
adc
jns
and
fsubl
push
or
mov
dec
in
push
cmpsl
dec
push
and
dec
adc
jecxz
push
imull
push
pushw
dec
adc
clc
out
aam
mov
imul
sub
push
clc
sbb
mov
adc
lods
dec
xchg
sbb
sub
mov
int
xchg
movsl
jo
cmp
fisttps
adc
push
push
out
push
cmc
inc
lods
ret
mov
pop
inc
push
push
mov
sahf
fwait
cmpsl
fdivl
loopne
leave
inc
sti
mov
mov
xor
push
cli
inc
cmp
jp
xor
loopne
xor
push
lcall
and
and
mov
sarb
mov
cmpsl
push
inc
out
sbb
sbb
jns
pop
mov
rcrl
dec
rorl
pop
leave
jp
inc
shlb
or
movsb
sub
mov
adc
pop
or
adc
cmp
pop
mov
mov
mov
and
xor
jb,pn
pop
ja
cltd
or
mov
or
push
lret
iret
call
add
jp
dec
cmc
movsl
jbe
bound
mov
jno
scas
sahf
xchg
or
or
arpl
rcrl
ja
jmp
negb
bound
movsl
stos
pop
les
push
pushf
cmp
shl
repz
lcall
lea
ds
pop
mov
adc
hlt
sbb
pop
push
je
xor
xor
cmp
mov
mov
jmp
inc
and
push
push
aas
mov
lahf
mov
lret
shrb
arpl
ljmp
mov
mov
es
lcall
mov
cld
ds
and
mov
mov
jo
insl
sub
aad
pushf
int3
clc
add
pop
popf
or
hlt
fidivs
jle
mov
jle
add
add
ja
pop
pop
icebp
daa
das
cmpsb
mov
inc
mov
or
jno
mov
xor
imul
push
mov
stc
enter
int3
sub
into
pop
pop
int
xchg
mov
and
jnp
and
icebp
je
rolb
mov
mov
ljmp
cmp
push
mov
mov
rorb
lret
cmp
fildl
and
add
sub
or
shlb
pcmpgtb
ret
jmp
xchg
xchg
test
daa
push
test
in
insl
orb
xor
lcall
lock
pop
out
and
mov
cmpsb
pop
in
push
sub
adc
xor
sti
mov
jno
jb
xor
fwait
fs
fcmovbe
jmp
xchg
aam
sbb
lret
imull
jmp
ror
push
pushw
insl
inc
cs
add
imul
xor
jg
movsl
or
fdivp
fcmovnu
out
cmp
add
out
bound
insb
adc
pop
and
cmp
xchg
push
push
pop
push
dec
cld
stos
popl
mov
cmp
push
pop
ljmp
jecxz
lds
scas
xchg
pop
cmp
mov
sub
daa
xchg
sub
sbb
fdivs
cmpps
outsl
ljmp
mov
js
pop
and
pop
push
mov
pop
or
pop
push
jo
adc
sub
das
inc
mov
sub
int
jg
mov
les
in
and
decl
xor
aam
aas
aas
xchg
jle
xchg
ret
jmp
dec
je
mov
and
sbb
sbb
ret
pushf
push
in
pop
push
add
fistl
mov
or
xchg
insl
out
sub
mov
test
cmp
in
sub
fadds
into
imulb
mov
addr16
stos
stos
xor
mov
mov
mov
rolb
and
cmp
clc
mov
lret
mov
gs
nop
cmp
nop
adc
xor
and
or
enter
cmp
inc
outsl
decl
fnstenv
lret
mov
lds
loop
mov
addr16
ja
rorb
xchg
imul
mov
mov
xor
xor
pop
adcb
cmp
nop
pop
sahf
lcall
mov
es
or
inc
daa
iret
jns
mov
mov
loopne
loopne
cmp
inc
or
pop
pop
icebp
scas
call
aas
sahf
mov
sbb
adc
sbb
jmp
dec
dec
test
imull
cmc
jnp
pop
in
push
mov
aaa
pushf
jecxz
imul
adc
xor
xchg
inc
dec
sub
int3
ss
xor
ret
add
cmc
pop
jns
xchg
sbb
cmp
jo
mov
les
mov
and
int3
jbe
stos
icebp
inc
adc
mov
xor
sub
stos
aam
push
or
dec
stc
filds
dec
mov
out
jno
mov
hlt
fsub
xchg
xor
xchg
subb
imul
cmp
fisttps
sbb
rorl
jmp
sub
in
imul
mov
fsubrp
into
jbe
pop
aad
repnz
shl
push
add
pop
or
or
xchg
push
cmpsb
jle
sbb
jg
fstpt
es
push
and
or
in
mov
xchg
scas
mov
mov
pop
xlat
dec
add
mov
inc
mov
cs
aaa
jmp
jl
clc
scas
mov
loope
xor
cmpsl
push
push
gs
push
les
cmp
jmp
arpl
push
cli
out
adc
or
test
fists
dec
dec
pop
cmp
popa
add
call
outsl
sbb
loope
jp
call
ljmp
mov
add
pop
jmp
iret
div
pushl
adc
push
dec
into
outsb
in
imul
enter
jae
repnz
mov
clc
popf
divl
mov
das
xchg
hlt
fwait
mov
nop
and
push
add
jns
sti
xchg
dec
aam
jae
cwtl
sbb
mov
pop
pop
ja
inc
pop
adc
mov
and
inc
jg
xchg
pusha
mov
int3
lret
and
cmp
xchg
sbb
iret
jne
push
js
cmpsb
cmp
shll
lds
and
test
outsl
jnp
push
sub
jb
xchg
fisubrl
pop
in
ret
inc
push
sbb
mov
lahf
lds
fistpll
gs
lret
arpl
out
cli
inc
cmp
mov
ja
gs
add
push
sbb
mov
stc
mov
cltd
pop
adc
lods
push
lea
into
and
cmp
lret
ficoms
out
xchg
aaa
pop
sahf
nop
push
insl
dec
popf
inc
out
jb
out
loope
loopne
inc
lret
mov
test
inc
movsl
jecxz
scas
or
jg
or
in
and
jp
lods
aas
cmp
mov
inc
pop
sti
add
sub
fldl
cmp
mov
cmp
aad
mov
je
int
push
and
hlt
ret
in
push
cmpsl
lds
push
pushf
mov
jg
rorl
stc
aad
xor
lret
in
mov
pop
pop
dec
jl
cltd
push
lods
sahf
xor
push
sub
scas
test
dec
idivl
xchg
push
lret
add
or
dec
xchg
push
and
or
add
and
into
fs
scas
inc
repnz
in
push
add
mov
pop
out
xchg
mov
cmpb
mov
jg
xchg
int3
test
fadds
xor
adc
xorb
mov
sahf
outsl
mov
cmpsb
mov
sarb
cmc
push
js
pop
mov
ret
test
fisubrl
insl
and
and
imul
shrl
fdivs
fildll
sbb
inc
scas
xchg
dec
lcall
clc
shr
mov
sar
arpl
jle
mov
aaa
icebp
dec
inc
popa
xchg
and
and
daa
loop
inc
or
ss
pushw
aas
push
jmp
jl
decl
and
jle
jecxz
ficompl
lahf
pop
pop
es
jecxz
xchg
decb
xchg
addr16
int3
jnp
inc
dec
in
add
daa
dec
mov
pop
sub
mov
add
push
mov
sub
bound
icebp
cwtl
shlb
cmpsl
aas
jb
push
jl
ret
mov
adcl
sbbl
cs
out
insl
dec
pop
cmp
add
mov
mov
data16
or
cmc
ret
in
ret
add
xchg
test
addr16
sti
mov
mov
jmp
repz
dec
sbb
shrl
popa
fcoml
push
fdivrs
xor
or
dec
ror
iret
push
lock
mov
in
or
push
leave
cmpsl
and
or
jns
mov
test
pop
inc
ja
mov
pop
or
push
mov
jge
push
addr16
pop
notl
fs
mov
aad
push
stc
push
xchg
xor
sbb
lret
and
or
mov
cmp
sub
pop
push
mov
push
sarl
xor
cld
dec
ss
xor
icebp
dec
push
mov
mov
or
icebp
adc
popa
cs
stc
stc
jg
out
pop
adc
add
fsubrs
mov
adc
les
jl
adc
mov
fdivrl
insl
lret
xchg
xor
arpl
mov
jo
or
jno
fiadds
dec
imul
jb
fsubr
push
pop
mov
dec
ja
mov
cmpsl
dec
fcomp
xchg
xor
sub
xorb
jb
lret
out
mov
jne
push
cmp
bound
push
sbb
aam
mov
iret
sarb
pop
scas
sahf
inc
jmp
jns
aas
cmp
imul
push
sub
adc
xchg
sbb
jp
in
sub
icebp
cmp
jae
insl
icebp
das
fwait
mov
and
enter
shrb
popf
jmp
stc
or
outsb
aaa
jns
fistps
rcrl
incb
xor
xchg
fs
clc
jb,pn
cmpl
ficompl
adc
adc
pop
dec
movsb
mov
sub
shlb
and
or
mov
das
mov
jl
aaa
and
sar
pop
sub
test
adc
popa
sub
dec
jl
pop
jno
notb
jae
pushf
in
movsb
scas
jb
jecxz
es
lods
jle
adc
and
xchg
das
adc
sub
xchg
xchg
push
or
adc
push
xchg
xchg
mov
adc
push
scas
mov
loope
pop
ljmp
nop
inc
sbb
push
and
lcall
mov
jg
out
dec
stos
adc
cs
and
jb
xchg
lcall
orl
arpl
loope
add
jbe
push
ds
lret
repz
push
or
push
cmp
push
sub
mov
in
and
sbb
mov
dec
cmp
cmpsl
jecxz
dec
js
mov
jge
mov
jp
gs
mov
dec
mov
inc
sub
jge
fs
mov
mov
out
xor
mov
sahf
enter
dec
ret
dec
lret
pop
pop
addr16
xchg
sub
scas
stc
jns
ffreep
in
stc
pop
and
nop
aam
in
ja
icebp
mov
fs
push
jnp
imul
mov
xor
fiadds
pop
xlat
xchg
add
test
cli
mov
test
scas
cmp
pop
ds
push
mov
stc
in
pop
mov
or
adc
fnstsw
push
test
push
cmp
into
sub
adc
add
fldcw
push
jne
loopne
cltd
sbb
dec
icebp
orl
pop
ds
add
dec
test
lret
loop
pop
xchg
cmp
jecxz
mov
lahf
cmp
mov
outsb
mov
fidivs
fsub
and
jmp
push
add
and
dec
rorl
push
fists
lcall
je
lock
imul
jp
xchg
out
lahf
or
mov
xchg
mov
addr16
imul
push
movl
aaa
jne
in
push
mov
and
push
mov
clc
and
mov
loopne
rol
add
xchg
cmpsb
int3
out
mov
imul
das
aaa
push
push
sbb
mov
call
iret
aad
and
enter
mov
inc
or
negb
les
push
adc
xor
lahf
in
adc
and
dec
pop
out
pusha
imul
in
pop
adcl
add
mov
adc
js
shrb
mov
push
fwait
outsb
ficomps
or
ror
mov
dec
out
jns
cmpsl
add
mov
inc
mov
dec
sub
fs
and
addl
jae
mov
adc
or
jo
jl
pop
in
pushf
jnp
pushf
fcmovnbe
in
add
jns
push
xchg
addb
movsb
jle
and
ja
dec
test
aaa
fistpl
ds
aad
xlat
pop
sarb
push
dec
ja
and
jne
mov
int3
and
cwtl
dec
cmpsl
lret
sbb
bound
push
mov
and
stos
shlb
stos
adc
in
cltd
imul
dec
hlt
sbb
add
testb
test
out
and
inc
sub
test
fstps
into
outsb
les
jecxz
stos
iret
push
popf
or
es
jb
xor
bound
or
mov
mov
dec
pop
pop
mov
js
mov
adc
push
pop
sti
push
filds
lds
cmpsb
int3
hlt
movsb
sbb
xchg
pop
bound
fdivl
xlat
sbb
pushf
test
or
sub
jmp
mov
loope
scas
push
ljmp
push
push
insl
mov
xchg
cli
fstpt
xchg
out
fstl
or
sbb
jg
lcall
mov
xor
je
into
mov
repz
aad
cmp
in
sahf
mov
xor
loope
into
or
rorb
int
or
orl
shll
mov
dec
mov
testl
inc
dec
pushf
das
push
cwtl
add
and
mov
pop
scas
pushf
cwtl
cmpsl
fs
push
andl
dec
hlt
add
imul
inc
je
mov
jbe
jle
int3
sub
std
or
pop
loopne
cmp
fs
movsb
outsl
mov
addb
mov
dec
pusha
inc
jns
adc
add
xchg
in
hlt
lds
adc
push
jo
pop
dec
cmp
dec
mov
ja
jecxz
ja
adc
ja
into
xchg
push
sarb
fldcw
dec
shrb
lds
push
lret
subb
jge
andb
xor
mov
ja
dec
mov
bound
adc
or
andb
cs
mov
sub
jno
mov
add
in
outsb
andb
fwait
aaa
xchg
add
cmc
test
jmp
sti
and
lret
loopne
test
xchg
int
pushf
or
idivb
shl
pop
xchg
fcomps
pop
and
push
leave
and
clc
test
ljmp
fmuls
xor
add
addr16
adc
aam
jae
xchg
hlt
cmp
sub
cmp
mov
pop
sbb
sbbb
mov
sbbl
mov
test
mov
jb
loopne
test
jmp
outsl
jno
pushf
pop
dec
jecxz
pop
hlt
or
jle
adc
jg
test
or
adc
lret
cmc
scas
xchg
or
ss
fistpl
orb
dec
jge,pt
and
mov
int3
dec
lods
ja
in
fldl
push
loope
inc
xor
ret
adc
push
ljmp
out
xor
outsl
out
cmp
push
std
and
enter
shlb
xchg
cmpsb
xor
or
lret
lods
fwait
imul
xor
call
xchg
jl
notl
lods
in
push
daa
xchg
jbe
inc
mov
xlat
pop
xchg
add
lret
shrb
out
dec
mov
ljmp
adc
fdivrp
ja
push
filds
fisubrs
lcall
push
inc
or
cmpl
lahf
cld
xor
jle
in
iret
out
mov
clc
mov
or
loop
inc
sarl
aam
imul
push
jl
jbe
loop
les
pop
cmp
cmp
and
ljmp
mull
scas
loop
ud2
popa
out
adc
or
mov
popf
or
sub
mov
mov
push
mov
nop
idivb
mov
scas
and
dec
and
cmpsl
js
rol
inc
lock
cmp
cs
dec
and
test
cwtl
scas
add
je
sub
adc
add
in
ljmp
mov
push
cltd
inc
rclb
xorb
dec
ret
jp
sub
loop
repz
fucomi
lahf
stos
fs
cmpsb
xchg
xchg
popf
dec
adc
mov
sbb
mov
xor
fnstsw
mov
aas
shlb
sbb
cmp
xor
push
lret
repz
lods
add
gs
xchg
rorb
stos
adc
push
nop
push
cmp
test
in
fldt
push
and
mov
push
aad
pcmpgtw
ja
xor
sub
pop
rcrl
and
inc
repz
pop
daa
and
rolb
sbb
xchg
outsl
push
jle
fsubrl
stc
pop
push
push
fdivrp
stos
jg
scas
inc
dec
daa
fwait
imul
push
xor
add
add
loop
pop
cs
cs
push
fcomp
ret
dec
pop
jne
fmull
fistpl
push
jo
or
cmp
xchg
xchg
test
out
push
xlat
adc
loop
cltd
outsb
or
pop
sahf
ret
add
push
mov
out
repnz
xchg
xlat
sbb
mov
jp
mov
mov
push
popf
cli
and
arpl
fmull
xor
aaa
dec
mov
push
out
jne
mov
fldcw
jbe
mov
call
test
mov
pop
or
shl
pop
inc
pop
out
notb
add
mov
test
pop
adc
or
scas
rorb
inc
pop
or
stos
push
fmulp
xchg
popa
mov
jo
mov
clc
inc
mov
cmp
push
js
scas
sub
and
stc
lock
outsb
pop
mov
call
aam
aas
lock
nop
xchg
mov
cmc
lret
xchg
popa
push
aad
push
ret
stos
xor
loop
das
pop
push
outsl
cld
push
mov
loop
pop
or
sbb
sub
testl
xchg
jns
push
cld
dec
push
cltd
pop
xchg
mov
lret
pop
mov
xchg
sub
push
data16
cmpsl
or
test
xchg
icebp
sbbl
sbb
pop
mov
lahf
pop
insb
clc
iret
sub
cmp
cmp
in
pushf
lds
pop
inc
pop
loope
add
mov
push
pop
into
pop
lods
aaa
cmp
or
leave
rcl
out
popf
test
js
add
or
pop
adc
sbb
sbb
sub
xor
push
movsb
stc
ss
xor
push
or
lea
xchg
inc
add
into
sub
loope
sub
scas
add
add
test
inc
ss
mov
mov
push
test
mov
fisubs
sti
push
stos
push
mov
jg
mov
lods
daa
or
outsl
ret
iret
sub
mov
pop
pop
fildl
fcmovb
add
pop
sbb
add
stos
pop
andl
ljmp
jle
xor
pop
ret
mov
xchg
scas
mov
adc
rcrl
arpl
addr16
pop
push
test
pop
push
mov
pop
pop
data16
adc
xchg
repnz
lods
push
pop
test
sub
stc
push
ret
push
in
popf
mov
cmp
in
jmp
ljmp
push
mov
insl
es
mov
inc
in
imul
xor
ds
test
rclb
sbb
fcomp
scas
negb
or
std
call
rorl
and
call
inc
movsl
fwait
cmpsl
mov
pop
jo
adc
dec
enter
out
aas
jge
lds
rol
daa
inc
push
xchg
les
jo
jmp
loopne
mov
pop
in
sbb
sub
cmc
jo
adc
xchg
sub
pusha
push
adc
fisttpl
and
adc
pushf
xchg
add
aad
mov
dec
jge
and
push
or
daa
and
cmpb
out
pop
test
cmpsl
dec
mov
jns
sbb
fxch
pop
cmc
sbb
test
xor
fwait
xor
in
mov
jno
jnp
fidivl
xor
pop
push
scas
lock
movsb
pop
xor
scas
sbb
mov
cmc
gs
inc
pop
lods
dec
lds
cmp
mov
call
xor
test
fdivrs
in
push
clc
inc
es
mov
in
pop
jno
sbb
movsb
scas
enter
and
dec
mov
jmp
mov
jo
and
enter
push
mov
mov
dec
fistl
cmp
xor
fsubrs
mov
mov
sbb
pop
shlb
psrlq
or
ret
add
fistpll
inc
inc
xor
ror
dec
addr16
push
shrl
mov
rorb
movsb
dec
or
iret
mov
push
iret
imul
popf
dec
inc
ret
into
pop
mov
pusha
pop
inc
mov
inc
cmc
repnz
loop
jmp
dec
cmp
pop
pandn
shr
in
add
mov
and
xchg
fcmovnbe
push
into
test
pxor
pushf
mov
push
imul
loope
mov
or
sbb
jne
aas
and
jmp
add
insl
adc
pop
jns
loope
jge
jg
mov
sbb
fldl2e
dec
cmp
push
and
js
pusha
and
je
push
mov
pop
mov
jmp
mov
xor
mull
inc
and
adc
inc
scas
iret
and
cmpsb
cltd
pushf
xchg
in
xor
pop
test
rcrb
std
pop
xlat
std
push
fnstenv
sub
lods
dec
xchg
sbb
mov
fnstcw
movsl
mov
add
sbb
mov
mov
shlb
or
out
lret
divl
or
mov
inc
push
mov
fistpl
mov
add
out
pop
clc
sarl
cmp
scas
popf
add
cmp
fstl
jae
lcall
mulb
fldl
in
shlb
clc
sbb
cmp
imul
jecxz
and
mov
mov
icebp
jecxz
aad
je
sub
cmp
push
mov
cwtl
adc
sti
in
and
jo
mov
add
xchg
mov
nop
push
xchg
mov
sub
pop
addl
loope
or
push
xchg
push
dec
test
js
dec
jo
cwtl
push
imul
jmp
xchg
aaa
fnsave
incl
or
xor
inc
mov
mov
std
pop
jne
pop
xor
test
ss
in
insl
mov
lods
addr16
sbb
jno
fisubl
xchg
and
popa
jecxz
sub
xor
call
xor
mov
push
sar
pop
outsb
in
xor
adc
inc
and
xchg
imul
imulb
and
or
inc
inc
or
stos
mov
je
jnp
std
stc
mov
mov
mov
icebp
mov
outsl
enter
addr16
test
rorl
jae
insb
stos
loope
jmp
mov
mov
mov
dec
pop
mov
sub
adc
out
xor
ficoml
and
xor
jae
std
jb
xor
sub
xor
jle
repnz
fs
push
push
xlat
fsubr
adc
push
imul
cmc
repnz
mov
data16
lods
add
andb
jo
mov
jbe
hlt
jmp
or
and
dec
push
add
and
das
dec
push
mov
mov
push
sbb
std
push
inc
push
les
push
mov
xchg
add
stc
rcrl
xor
rcr
test
fsubl
ds
add
fistps
cld
int3
xor
and
cld
pop
movsb
arpl
scas
sbb
pop
jl,pt
mov
out
mov
cli
enter
or
cld
test
push
mov
adc
mov
mov
fs
adc
lea
add
pop
or
lahf
mov
repz
adc
jo
idivl
sub
mov
inc
jle
test
jge
cli
daa
out
mov
cmpb
cmpsb
lods
xor
test
jmp
std
les
inc
xor
pop
fisttps
bound
std
push
sub
arpl
jne
pop
push
ret
add
fdivrl
shrl
push
inc
cli
mov
pop
out
jg
jnp
add
fstpt
enter
inc
xor
sub
rdtsc
imul
adc
cli
into
test
es
inc
xchg
mov
iret
fcompl
sbb
mov
lea
mov
push
push
in
ret
add
lret
push
pop
inc
sub
out
fadd
xchg
dec
fwait
adc
pop
and
out
int
aam
mov
inc
mov
jo
mov
mov
pop
push
sub
js
imul
cmp
fcompl
xor
pop
mov
mov
mov
imul
cmp
mov
sbb
and
push
push
inc
xor
aas
xchg
inc
and
cwtl
adc
movsb
ja
sarb
add
xor
sub
xor
or
jp
nop
test
xchg
cmp
xor
xor
std
test
pusha
movsl
shrl
pop
mov
mov
jle
inc
mov
sahf
mov
cmp
bound
lret
hlt
shlb
stos
shll
xlat
xchg
pop
sbb
jge
ljmp
jle
aas
inc
mov
jg
movsb
je
movsl
and
xchg
lret
fisubrs
out
dec
xchg
fwait
cmpsb
in
sti
xor
mov
inc
scas
sub
jmp
pop
movsl
lcall
cli
jp
rolb
adc
mov
shlb
pop
cli
arpl
enter
dec
sti
aad
adc
fs
orl
data16
loope,pt
fidivl
xor
jns
aaa
cmpsb
mov
fcmovu
ret
adc
jle
jno
shl
mov
addr16
je
inc
ret
lahf
add
rorb
jno
out
sub
lret
mov
pop
cmp
orl
test
sbb
mov
pop
jb
dec
mov
sbb
mov
loope
out
aam
repz
aad
jp
add
hlt
sub
aad
or
dec
mov
pusha
aaa
rcll
xchg
outsb
dec
fwait
add
fstpt
out
sbb
push
mov
xchg
xor
xor
les
mov
shrb
test
dec
cld
out
mov
sub
lret
cltd
in
push
add
jecxz
mov
out
test
mov
or
rcll
out
lahf
xchg
pop
mov
jns
dec
sbb
add
inc
xor
pop
push
inc
dec
add
mov
jecxz
mov
std
orl
or
xchg
sbb
fs
xor
dec
push
fisttpl
out
pop
pop
jge
mov
mov
xor
mov
loopne
scas
fisttpl
int
sbb
pop
dec
outsl
mov
mov
mov
and
cmp
push
imul
inc
pusha
imul
jo
in
push
icebp
inc
fisttpl
adc
repnz
mov
pushf
in
rcrb
fbstp
jg
push
imul
push
push
out
adc
scas
sbb
sbb
add
jmp
pusha
push
mov
sub
cltd
xor
out
out
jmp
cmp
add
add
icebp
add
and
shrb
loope
loopne
sbb
adcl
mov
or
jns
mov
cli
out
adc
repnz
clc
and
insb
cmp
push
pop
fnstenv
fs
sbb
pop
out
dec
mov
cmp
lea
inc
ficompl
push
cmp
jmp
stc
lds
mov
pop
mov
sbb
push
mov
pop
mov
dec
mov
sti
addl
mov
test
stos
sub
fcoms
in
scas
clc
cmp
jl
nop
sbbl
cld
cwtl
punpcklwd
adc
pop
cmp
adc
addr16
jg
pushf
cmpsb
mov
inc
xor
enter
xchg
sahf
mov
adc
mov
lods
jge
mov
pop
dec
cmp
mov
fs
push
pop
inc
jl
aas
leave
add
and
lcall
test
mov
xor
sbb
mov
sub
sarb
das
mov
fs
les
repnz
mov
jo
dec
xchg
xchg
dec
cltd
jno
pop
pop
outsb
test
pop
jg
sets
mov
sub
shll
fistpll
push
stc
imul
xchg
cmp
lods
lahf
test
setl
mov
sbb
je
sbb
subl
cwtl
scas
push
test
jp
push
into
pop
notl
pop
in
add
xor
loop
je
movsb
lea
add
jb
xchg
mov
imull
jecxz
pop
mov
dec
das
popl
sub
call
pusha
repnz
xor
adc
cmp
mov
loopne
xlat
pop
dec
sarl
dec
sub
jbe
jbe
or
fwait
mov
ljmp
mov
or
out
sbb
cmpsb
sbb
enter
jp
jp
dec
dec
push
gs
xchg
movsl
scas
adc
loopne
mov
cli
pop
dec
adc
xorb
xorb
cwtl
lret
mov
jne
jb
fsubrs
lcall
push
arpl
mov
inc
inc
int3
out
adc
sbb
push
cmp
xchg
sub
cs
leave
lds
iret
stos
bswap
data16
std
mov
aam
aas
shll
rolb
iret
dec
lret
repz
pop
xchg
mov
jno
push
push
aam
inc
jle
and
sub
fmull
xor
mov
lea
xchg
jle
cmp
push
leave
push
add
repnz
pusha
aaa
push
sbb
xchg
pop
inc
pop
lcall
pushf
imul
mov
sub
cmp
inc
outsl
in
pop
mulb
pop
adc
cli
xchg
jnp
movsb
mov
push
popa
ss
inc
mov
fs
shr
mov
int3
sub
cmc
add
or
ja
scas
jg
cltd
insl
mov
icebp
fisubrs
mov
jns
xor
inc
adc
jbe
mov
fsubs
sbb
std
pop
cmpsb
fdivr
add
xlat
sub
xchg
inc
mov
rcr
fcoml
sahf
mov
lods
mov
push
jbe
sbb
add
lods
sarl
and
pop
cltd
movsb
sub
mov
mov
xlat
mov
test
mov
lock
mov
outsl
pop
insb
push
push
dec
aad
and
pop
push
pop
push
mov
dec
jmp
pop
xchg
ror
mov
shl
loop
dec
sbb
je
or
fdivp
jg
push
add
xor
jno
pop
push
pushf
add
add
jl
xchg
stos
iret
xchg
cwtl
pop
jnp
mov
andl
mov
push
pushf
in
adc
mov
aaa
jp
out
daa
insb
out
lcall
adc
cmp
push
rcrb
int
clc
push
fwait
mov
xchg
mov
jo
xor
inc
sbb
in
and
jb
cs
mov
cmp
ljmp
mov
out
out
adc
inc
add
icebp
imul
mov
push
inc
nop
push
int3
jnp
lock
mov
push
stc
dec
mov
jb
jne
arpl
jmp
ja
imul
inc
imull
aas
movsb
pop
sbb
cmpsl
push
push
mov
mov
scas
mov
ret
ret
jecxz
cmp
jno
stc
and
jl
addb
and
popa
inc
imul
push
jmp
dec
push
inc
lods
jl
mov
xor
jns
push
sbbl
add
popf
aad
or
imul
fldt
xor
out
in
loope
jne
cmp
outsb
mov
sub
test
mov
xchg
push
stc
mov
cli
mov
das
scas
fs
in
pushf
popf
dec
subl
mov
xchg
jecxz
popf
stos
pop
out
jecxz
clc
hlt
fst
into
mov
fbstp
adc
xchg
out
cmp
mov
mov
mov
popf
int
fistpl
inc
daa
je
repnz
enter
inc
jmp
icebp
inc
cli
enter
push
sarb
mov
cltd
movsl
pcmpeqd
fldl
sarl
hlt
cld
rorb
stos
cmpsb
adc
aas
bound
mov
cmp
inc
mov
adc
pop
dec
adc
mov
insb
ja
xchg
fdivl
nop
push
lds
mov
scas
rorb
cmp
aam
jmp
iret
xchg
mov
cmpsl
scas
outsl
aad
sub
adc
mov
cs
cltd
lods
out
lock
adc
test
out
rcrb
iret
std
fisubrl
test
adc
test
and
xor
iret
mov
or
push
xchg
sbb
loope
in
xchg
xor
movsw
cmp
xchg
dec
addr16
insl
nop
sub
xchg
adc
pusha
jge
cwtl
jne
mov
inc
movl
into
fcoms
fisubrs
mov
mulb
std
adc
mov
insb
test
popa
inc
xchg
pop
mov
push
les
div
inc
pop
jnp
int
cmpsl
jl
jbe
leave
jne
bound
hlt
or
ljmp
mov
xor
adc
xchg
and
sti
mov
push
mull
sub
in
mov
movsb
stc
pop
push
ss
loopne
daa
mov
cmpsl
sub
xor
push
mull
dec
negb
pop
pop
fisubs
sarb
fbld
fdivs
ficoml
test
inc
adc
cmp
inc
adc
and
clc
mov
hlt
lock
inc
jmp
mov
jns
sub
mov
sub
inc
and
iret
and
fmul
sbb
mov
imul
push
dec
mov
or
mov
push
leave
xchg
popf
cmp
stc
inc
mov
mov
xor
dec
sub
jo
js
in
inc
or
sub
mov
fdivr
je
add
sbb
jne
int
xchg
pop
inc
lea
and
push
and
out
cmp
sbb
je
in
outsl
lods
xor
mov
gs
stos
mov
stos
cltd
dec
push
jp
arpl
and
rorb
stos
test
push
daa
push
ficompl
cmp
inc
sub
out
subb
pop
xor
inc
add
inc
in
mov
add
in
loope
mov
int
neg
push
adc
fs
sub
testb
mov
ljmp
lret
push
mov
decl
adc
xor
loope
add
sub
inc
and
dec
xor
pop
inc
jl
stos
jno
jne
add
pop
cmpsl
mov
mov
imul
add
rolb
add
xor
es
and
push
pop
lret
jno,pn
imul
add
test
push
mov
lret
push
sbb
cmp
fimuls
mov
dec
repnz
sbb
bound
add
fistpl
push
cmc
je
addr16
sub
xchg
push
mov
movsb
sbb
mov
jecxz
ljmp
lds
stc
pop
fcmovnu
pop
das
and
lahf
inc
mov
aad
dec
scas
jb
jbe
mov
arpl
test
gs
adc
lcall
sbb
fnsave
xor
cmp
inc
cmpsb
xor
loope
jle
and
add
xor
xchg
aad
ret
aad
xor
in
mov
lea
dec
jecxz
fimuls
mov
xor
cmp
pop
imulb
pop
mov
lret
sbb
cli
stc
cwtl
pop
adc
inc
sti
pop
sahf
push
repnz
je
inc
out
adc
and
lods
inc
dec
jp
jbe
mov
jno
into
lods
ret
mov
inc
and
ret
fs
in
fwait
push
dec
aaa
sub
xchg
adc
mov
or
jl
push
mov
addr16
hlt
mov
push
test
inc
cli
inc
hlt
cli
and
mov
lcall
pop
test
ja
jp
addb
lods
pop
loop
xchg
dec
mov
jnp
loop
test
scas
into
negl
pop
xor
xchg
mov
das
adc
fisttps
aaa
in
loopne
jmp
cmp
bound
popa
jmp
rorb
loopne
insb
jmp
cwtl
shlb
iret
pop
repz
adc
aaa
leave
mov
loop
ljmp
test
sbb
pop
mov
mov
mov
out
lcall
xor
bound
hlt
fisubs
cmp
and
xchg
out
xchg
cmp
subl
push
xchg
push
mov
cmp
mov
or
out
repnz
pop
mov
cmp
dec
jne
xchg
fdivs
js
inc
mov
xchg
inc
dec
sti
mov
test
adc
stc
xor
xchg
pop
pop
sti
repz
in
mov
lcall
aaa
ds
mov
inc
jp
push
mov
aad
jno
clc
inc
ss
mov
xchg
xchg
rcll
adc
xor
or
push
cli
push
idivb
inc
decl
push
cmc
cmp
leave
decl
inc
fwait
mov
mov
lds
popf
mov
add
repz
inc
cmpsl
jmp
push
movsb
int
loope
cwtl
movsb
popf
dec
cs
addb
xor
push
cmp
test
xchg
or
out
fnsave
push
idivl
int
mov
or
mov
push
cmpb
pop
out
stos
popf
xor
cmp
leave
clc
hlt
push
or
push
mov
aad
fnsetpm(287
insb
pop
ret
aad
sbb
sub
jge
cltd
sbb
xor
push
mov
xchg
jo
lock
xchg
push
cmp
in
loope
or
lock
outsl
xchg
jb
sub
arpl
or
dec
out
sub
dec
pop
dec
cltd
or
inc
dec
out
lea
movsl
lds
adc
cmp
in
inc
and
jg
sbb
lret
scas
shll
and
pop
popf
lea
inc
add
cmc
sbb
ret
cltd
arpl
clc
inc
push
lods
mov
pop
cltd
daa
imul
pop
loopne
and
aad
sbb
out
cmpsb
call
add
imulb
or
inc
sub
in
dec
sarb
imul
imul
loop
add
xchg
pop
stos
lock
mov
lret
push
sbb
icebp
sub
sub
aaa
mov
mov
xchg
aam
jb
push
fisttpl
fwait
add
test
int3
xchg
or
cmc
iret
sub
cmp
fildll
addr16
das
aas
inc
fdivl
pop
cmp
pop
mov
add
mov
sbb
insb
fists
fsubp
inc
sub
out
shlb
ds
mov
ss
dec
or
int3
mov
clc
aas
adc
push
repnz
rclb
fcompl
loope
std
popa
popa
call
and
aam
mov
xor
lods
jne
pop
xchg
push
imul
inc
add
push
sbb
push
dec
mov
cmpsb
mov
into
sub
add
movsl
xor
stos
inc
fisubs
ret
push
adc
movsb
xchg
aam
xor
jne
pop
inc
pop
or
and
mov
xor
xchg
jmp
xchg
insb
mov
cmpl
add
sub
xchg
sub
cmp
inc
add
sub
daa
mov
cwtl
add
push
xor
daa
out
or
iret
xchg
int3
mov
mov
ret
push
in
shll
inc
adc
out
je
mov
repnz
push
jge
lcall
xchg
add
or
jge
inc
fldt
xchg
mov
not
test
dec
pushl
inc
dec
jp
fbstp
gs
outsl
pminsw
xlat
in
jge
dec
and
push
out
pop
xor
jg
push
scas
sbb
mov
jbe
pop
mov
mov
dec
adc
cld
jg
cs
xor
test
fldt
nop
fnstcw
stc
mov
jmp
loopne
xor
and
popf
leave
and
sbb
pop
popa
pop
mov
rolb
dec
clc
cmp
bound
leave
push
push
lret
cmpsb
xor
stos
inc
outsb
hlt
pop
mov
jl
addr16
xor
add
and
push
pop
lods
out
mov
jne
lret
xlat
or
loope
or
aaa
sti
pop
xchg
movsl
jle
push
cmp
push
jecxz
add
jl
ja
dec
mov
inc
aad
mov
sar
xchg
jne
add
clc
xor
insl
xchg
outsl
and
mov
shrb
scas
movsl
xchg
jbe
pop
jl
lock
movl
enter
mov
inc
lahf
scas
mov
sub
pop
insl
xor
lret
push
xchg
pushf
mov
fistl
add
inc
mov
ds
pop
add
xor
pop
push
jecxz
dec
mov
in
mov
insl
push
mov
add
xor
adc
xchg
or
test
mov
movsl
xchg
mov
fbstp
dec
pop
xchg
jge
stos
adc
dec
leave
jmp
jo
mov
push
mov
fwait
mov
xchg
inc
lea
xor
mov
dec
or
sahf
lods
fsubs
sbb
and
das
pop
inc
mov
sub
cmp
rolb
sub
rolb
fstps
in
pop
and
popf
inc
jmp
xchg
mov
je
mov
xor
pop
incb
adc
add
or
loopne
in
mov
into
hlt
ss
and
stos
mov
loop
adc
ds
inc
jecxz
inc
xchg
inc
dec
insb
sbb
mov
ret
cmp
push
loopne
add
adc
fnsave
imul
icebp
adc
or
mov
sti
testb
dec
push
pushf
and
cltd
push
pop
push
test
mov
cmp
scas
fucomip
or
js
cmp
mov
jb
xor
dec
pop
add
push
cmp
add
pop
inc
mov
mov
cmp
arpl
aaa
sbb
cmp
pop
cmp
mov
push
dec
add
xor
dec
fwait
jmp
bnd
in
mov
mov
loopne
push
jl
iret
out
pusha
jle
daa
lods
je
fnstcw
insb
inc
call
maskmovq
pushf
pop
subb
jo
cs
cmpsb
fstps
mov
push
les
imul
test
cltd
sbb
das
ss
popf
movsb
pop
outsl
sub
lods
pusha
mov
dec
mov
adc
neg
inc
test
ret
sbb
mov
push
pop
xor
sbb
aas
push
les
test
arpl
pop
comiss
pusha
add
ret
and
jo
jp
sub
in
mov
out
fstpt
xchg
push
leave
je
mov
pop
mov
jecxz
jne
jne
addr16
and
outsb
lret
icebp
and
xchg
pop
daa
clc
jo
lods
enter
ret
sub
inc
cmp
push
inc
xchg
and
repnz
stos
or
cmp
cmp
or
jmp
nop
dec
testb
aas
lcall
sub
sti
icebp
jne
test
punpckhbw
sbb
cli
pop
and
sbb
cmc
adc
outsl
stos
xchg
or
ljmp
leave
cmp
cmp
sbb
stos
mov
js
push
ljmp
cmp
scas
jge
into
xor
data16
dec
jecxz
aas
popf
cmp
mov
pop
fcompl
andb
dec
scas
push
fimull
lcall
mov
je
stc
cmp
jmp
jp
jae
js
push
xchg
add
push
jb
fbstp
fistpl
sbbb
mov
xor
out
insb
arpl
pop
xor
jmp
xchg
xchg
incl
cmc
inc
cli
pop
popa
in
mov
jo
ljmp
rorl
negl
add
mov
arpl
lods
push
fwait
adc
loopne
add
push
pop
mov
push
flds
mov
data16
push
cltd
cmp
push
push
jp
and
pop
sbb
mov
hlt
jmp
cld
in
mov
add
add
adc
scas
mov
adc
xchg
mov
or
dec
mov
pop
pop
add
daa
ss
inc
mov
jmp
fbstp
insl
lds
push
xor
cmp
lods
push
test
movsl
mov
not
or
and
lret
mov
xchg
call
sbb
mov
cmp
push
and
dec
mov
mov
fstpt
or
lret
cld
nop
ret
add
out
sub
rol
lcall
and
cmovle
inc
adc
dec
int3
daa
lret
cmp
icebp
xor
gs
ficompl
loopne
or
nop
movsl
nop
out
dec
int
inc
jnp
pop
icebp
pop
lcall
and
sbb
fisttpll
xchg
ret
lods
jo
lock
jnp
mov
mov
scas
push
outsl
test
imul
mov
fcomi
test
shlb
dec
jo
dec
loopne
pop
mov
xor
xchg
jle
or
cmc
push
jp
jge
pop
jo
fisubrs
push
sar
imul
inc
sti
mov
in
test
xor
rcr
lcall
insl
enter
mov
insl
or
sub
js
mov
sti
jle
popl
xor
hlt
cmp
repz
test
gs
stc
aaa
sub
lods
shrb
fstpt
js
js
pop
pop
aaa
mov
ds
ljmp
xor
outsl
xlat
cltd
leave
push
in
andb
insl
jl
sbb
xor
pop
mov
pop
dec
dec
cmpsb
sbb
sbb
mov
movsb
sbb
aam
mov
sbb
mov
repnz
cmpsl
mov
xchg
pushf
cmp
cmp
out
pop
loope
popf
xchg
es
pop
incb
lcall
adc
gs
adc
lret
pushf
movsl
jnp
sbb
adc
mov
mov
mov
fmuls
lea
or
jb
in
jp
mov
loopne
and
lea
sub
cmp
push
hlt
jno
lret
lret
jp
push
int3
stc
loope
pop
scas
jb
pop
mov
mov
cmc
gs
outsb
js
lds
lea
in
insb
ret
in
jae
push
lahf
inc
or
mov
jle
pop
lods
js
cmpl
int
or
rcll
call
lods
hlt
out
inc
mov
test
ja
or
push
push
cmpsl
andl
rorl
sbb
add
jmp
jge
pop
jne
insb
cltd
or
addr16
sub
mov
or
cltd
pop
inc
fbld
movsl
in
pop
in
inc
xchg
lea
fnclex
stc
mov
subb
arpl
mov
mov
sub
insl
mov
ret
les
add
popf
in
and
movsb
jecxz
negb
int3
fildll
pusha
sbb
stos
fisubrl
insb
js
cmp
int
repz
mov
lods
sbb
dec
js
cmp
dec
enter
pop
inc
jge
cmp
icebp
lods
jbe
and
mov
adc
mov
push
push
jo
mov
inc
mov
leave
repnz
mov
adc
mov
ret
pop
outsl
lcall
mov
sub
arpl
test
pop
dec
fbld
sub
fsts
xlat
inc
inc
in
stos
js
dec
mov
out
sti
dec
jmp
sahf
fisubrs
repnz
jge
movsb
xchg
or
inc
xor
out
mov
insl
inc
push
mov
cmp
popa
adc
xchg
int
arpl
inc
mov
shlb
pop
dec
loop
mov
jmp
sbb
insl
out
into
nop
pusha
push
cld
andl
lods
cmp
testl
push
ret
mov
xor
sbb
mov
dec
cmpsl
imul
les
dec
loope
test
xchg
or
inc
fldl
push
mov
mov
adc
sub
outsb
jle
pop
call
mov
ret
sub
out
icebp
decl
add
je
mov
pop
inc
pop
fmull
sbb
jo
or
cmp
push
jl
mov
sub
div
lea
aaa
push
addr16
pop
jno
sbb
imul
xor
mov
xor
jne
mov
pop
outsl
push
and
aaa
xchg
inc
inc
int
addb
sub
dec
stos
or
in
jno
ja
mov
cs
sbb
inc
shrb
into
gs
adc
int
mov
aas
lods
add
mov
sbb
inc
loopne
fmuls
mov
mov
dec
or
pop
mov
mov
div
fdivl
aaa
xor
mov
scas
ss
fmuls
shll
clc
cmp
out
mov
cmp
push
jns
in
in
ja
mov
ljmp
rcrl
lahf
mov
push
pop
lcall
lret
stos
jnp
mov
push
scas
jg
sbb
mov
mov
mov
jae
push
sub
out
dec
xorb
in
decl
dec
xchg
push
inc
loopne
xchg
push
xlat
xchg
out
fcmovnbe
xchg
dec
jae
test
cmp
dec
aas
mov
xchg
pop
cmp
inc
xor
lret
push
pop
outsb
scas
cltd
and
xchg
mov
cld
cmc
mov
je
cltd
imul
mov
sub
push
stc
hlt
pop
jmp
hlt
sarl
leave
lds
call
sbb
outsb
cs
jo
loop
mov
mov
xlat
xor
fwait
je
cld
or
cltd
and
ret
or
pop
and
lods
pushf
sub
jecxz
fbld
sbb
lret
or
and
jecxz
mov
sbb
pushf
pop
out
test
loop
adc
mov
sbb
aas
andl
dec
fdivrs
jbe
add
nop
dec
lods
mov
mov
clc
push
ds
pop
daa
fmull
pop
jecxz
out
comiss
in
adc
cmpl
lds
aas
and
arpl
cwtl
aas
cmp
pop
sub
add
cmp
icebp
es
and
cmp
cmp
lret
adc
and
or
mov
mov
push
or
test
cltd
rcrb
push
add
rcr
push
das
ljmp
fsubl
and
in
sbb
aaa
arpl
adc
aas
push
int
adc
stos
pushf
orl
sbb
stos
add
out
loope
aaa
dec
push
je
cmp
mov
iret
aas
lret
cmpsb
imul
push
rorl
jnp
lds
stc
sbb
divb
jecxz
das
dec
daa
or
mov
movsb
push
ret
mov
xlat
sahf
jmp
mov
dec
xor
into
iret
pop
xor
adc
cwtl
test
dec
pop
decl
pop
mov
mov
sbb
popa
push
iret
ffreep
jae
cs
outsb
lahf
lcall
mov
out
fwait
push
dec
fnstcw
pop
arpl
pop
jecxz
sub
add
jb
lock
in
testb
out
pop
xchg
lea
outsl
jb
cmpsl
movl
jne
shll
push
xor
or
repnz
int3
inc
adc
mov
cmp
call
mov
lahf
fisttpl
and
arpl
out
clc
inc
xchg
pop
mov
cmp
mov
cmp
cld
adc
lods
add
dec
pusha
out
jbe
ja
int3
inc
cmp
mov
push
adc
pop
fcoms
imull
jp,pt
in
aad
enter
pop
add
or
dec
inc
rcll
into
xchg
aam
xor
lock
mov
pushf
jp
in
repnz
loop
mov
insb
cmpsl
imul
out
jl
stos
aaa
stc
ret
xchg
repz
in
xchg
jle
les
pop
imul
push
iret
out
cltd
jnp
cmp
adc
mov
jo
push
out
movsl
les
cmpsl
cmp
add
enter
adc
gs
sti
mov
jno
cmc
and
stc
xchg
and
dec
adc
pop
add
paddd
cli
sbb
lret
sbb
rcrl
jg
cmp
pop
mov
add
loop
dec
hlt
push
mov
jp
cmp
scas
sarl
aad
mov
int
xchg
jl
inc
sub
pop
out
mov
pop
adc
jge
idivl
push
popf
popf
mov
mov
mov
lret
mov
or
add
sti
sahf
add
mov
jo
push
movsb
cmp
or
leave
cmp
cmp
mov
ficomps
icebp
sti
cmp
mov
out
decb
es
fiaddl
ds
dec
and
mov
xchg
mov
mov
data16
push
fdivp
xchg
push
cmp
call
cs
mov
shll
cmp
ret
jb
dec
mov
insb
les
adc
pop
sarb
mov
adc
mov
out
cltd
movsb
outsl
enter
test
cli
dec
subb
mov
jp
cmp
data16
ja
add
xchg
fsubrs
fisttpll
mov
xchg
fnstcw
inc
xchg
xorb
or
leave
in
repnz
aam
nop
fs
pop
add
mov
repz
int
lds
ljmp
clc
pushaw
lahf
pop
stc
pop
add
pop
addr16
daa
pusha
stc
loop
addb
cmp
out
mov
hlt
mov
push
cmpb
sbb
ja
popa
inc
dec
inc
jo
mov
inc
or
jg
jl
ret
mov
xchg
movl
mov
outsl
cmpb
div
push
imul
inc
jo
inc
or
ljmp
or
in
adc
mov
jmp
jo
data16
cmpsl
sub
push
jl
jmp
les
jmp
push
inc
cs
in
inc
stc
cmpsb
inc
outsb
mov
inc
outsb
adc
call
sub
or
pushf
das
std
out
adc
sub
popw
mov
sub
cmpsb
add
cltd
push
or
xchg
lcall
in
jno
movsb
cmc
ss
dec
shrb
or
movsb
js
push
mov
idivl
mov
or
mov
mov
xor
nop
pop
xchg
push
sub
pushf
mov
pop
outsb
test
mov
inc
jmp
fxch
les
outsl
mov
mov
xchg
pop
mov
out
out
cs
push
push
sahf
dec
movups
push
mov
sbb
out
aad
mov
mov
inc
pusha
or
inc
mov
insb
or
adc
shll
adc
cmc
mov
add
jg
xlat
push
ficoms
movsb
int
shlb
stc
xchg
and
sti
cmp
push
mov
push
into
pop
repz
push
mov
cwtl
lea
xor
aad
mov
push
in
insl
ret
add
dec
int
push
cltd
loope
outsb
insl
imul
fiadds
loope
and
icebp
mov
push
rorl
pop
and
jb
lock
dec
mov
mov
mov
adc
sub
sbb
sub
jne
dec
or
rcrl
sub
pop
push
push
das
and
ret
repnz
call
or
cmpsl
pusha
inc
inc
imul
pop
sti
jbe
andl
ficompl
shlb
repnz
or
fwait
push
xor
sub
jne
das
adcl
arpl
out
ljmp
mov
test
inc
cld
push
sbb
sub
or
jmp
aas
pop
pop
in
cmp
enter
mov
insb
bnd
orl
mov
jae
scas
cmpsl
xor
fimuls
and
mov
insb
out
add
add
xchg
lret
push
dec
pop
mov
sbb
data16
jbe
dec
inc
inc
lret
imul
ds
in
je
jnp
mov
fisubl
mov
mov
cmp
cmpsb
jbe
xor
ret
loope
fldt
pop
xchg
int
dec
ja
jbe
arpl
insl
orl
inc
mov
mov
lret
nop
mov
dec
je
xor
fwait
sahf
sbb
popf
mov
out
stos
pusha
cmpsl
mov
ljmp
mov
stc
out
push
imul
jle
sub
add
aaa
and
jb
mov
xchg
push
faddp
test
xchg
mov
cmpl
xor
fisttpll
jo
enter
add
jp
push
pop
cwtl
sbb
cwtl
dec
jo
incl
sbb
jne
cmp
test
cmpsl
shl
stc
fwait
add
cld
jo
adc
sbb
cs
mov
bound
add
xchg
cwtl
stc
dec
cltd
out
repnz
fsubrp
sbb
sub
mul
inc
or
sub
out
dec
mov
lret
dec
or
addr16
jl
pop
inc
cs
jae
sbb
cmp
in
xorb
loop
or
jecxz
lds
bound
cltd
push
popf
nop
ds
fwait
adc
xchg
mov
movsl
and
pop
call
mov
mov
fwait
sub
cmp
push
pop
mov
jns
test
add
ja
imulb
sub
js
movsl
dec
jecxz
aam
push
pop
mov
testb
add
ljmp
pusha
pop
imul
cld
jae
insl
ja
jge
sbb
test
pop
daa
or
ret
push
jae
rcll
into
stc
fnstenv
mov
bound
jno
loope
sbb
add
sbb
negb
mov
xchg
push
pop
pop
jmp
in
andb
icebp
inc
pop
xor
lock
pop
ss
mov
cmc
jmp
dec
cltd
cmc
sbb
lahf
lock
jp
loope
mov
xchg
dec
lods
imul
std
dec
sbb
loope
cmp
push
test
addr16
mov
lcall
pop
pop
sti
into
cmp
rorl
fbstp
adc
mov
das
scas
push
add
xchg
jmp
daa
lods
gs
adc
sub
out
arpl
jle
lock
xorl
arpl
es
mov
pop
adc
sbb
rcll
test
test
and
jg
enter
mov
and
aad
dec
arpl
xorl
pop
sbb
repz
push
lock
inc
shlb
in
or
xchg
mov
push
les
fs
pushf
dec
movsl
mov
cmpsl
rorb
fwait
jecxz
push
jg
lretw
and
pop
fimull
je
cmp
jnp
popf
lods
es
fcmove
inc
mov
sti
adc
sbb
or
sbb
jnp
adc
scas
rcrb
xchg
stos
mov
add
inc
push
fisubs
sub
shlb
pusha
or
std
stc
fwait
cmp
mov
jnp
pop
fucomp
push
xor
rolb
pusha
pop
lods
sarb
je
shlb
xor
jae
xchg
sub
mov
in
jge
inc
lcall
int
inc
inc
dec
lcall
dec
cmpsl
xchg
cmp
scas
outsb
scas
jl
in
pushl
cmpsb
jecxz
arpl
mov
mov
sub
out
inc
imul
xor
mov
sub
cmp
and
xor
loop
xor
push
fwait
dec
xor
jno
xchg
inc
sub
js
lret
outsl
and
outsb
sbb
xchg
int3
in
xor
adc
ret
mov
loopne
in
test
roll
jge
mov
dec
or
jmp
sbb
idivl
arpl
imul
sbb
ret
jle
movsb
mov
xchg
int3
movsl
fchs
in
pushf
data16
mov
ds
pop
jmp
shrl
jle
lahf
sub
mov
sub
movsl
sti
out
pushf
cmp
mov
fiaddl
mov
lahf
sub
dec
add
add
xchg
push
nop
push
cltd
insb
or
in
fisubs
imul
divb
and
negb
loopne
push
aam
and
add
in
jns
mov
xchg
loopne
adc
stc
in
xor
mov
adc
mov
in
adc
movsb
daa
xor
movsb
call
xchg
cmpsb
jle
lcall
fldl
into
cmp
popa
xlat
or
and
outsl
arpl
pushf
addl
lods
push
loop
test
idivb
rclb
sbb
fldt
lret
and
xchg
insb
je
jp
hlt
not
jbe
ficoms
and
mov
sub
imul
lret
pop
movsb
xchg
push
iret
or
scas
in
mov
xchg
das
xor
std
loop
and
fstps
push
cmp
lret
insb
pop
fs
je
dec
inc
roll
nop
pop
nop
lods
push
shll
pop
push
test
sub
sub
loopne
in
nop
mov
cmp
pop
shrl
add
scas
fs
shrl
pop
inc
mov
scas
mov
fimuls
mov
shl
push
rclb
fdivs
mov
lds
pop
jns
pop
scas
data16
dec
dec
xchg
jb
sbb
leave
jbe
call
icebp
insb
aas
in
adc
stos
xchg
popa
scas
lock
into
pop
nop
dec
mov
push
mov
jmp
sub
push
outsl
fstpl
push
push
repz
in
pop
fsubrl
andb
mov
push
into
ljmp
jb
push
inc
aas
jmp
stos
movsb
cmp
lea
fisubrl
sbb
inc
cmpsl
cmp
jp
pop
mov
push
les
sti
mov
and
ss
inc
adc
arpl
sahf
sbb
xchg
lods
pop
stos
ret
jb,pn
pushl
cwtl
and
inc
cmp
sub
dec
jmp
aas
dec
loope
cmp
mov
xor
aaa
in
push
adc
jmp
inc
test
out
push
add
mov
loop
sbb
sub
aam
mov
out
mov
push
lret
push
mov
mov
movsl
inc
add
leave
dec
scas
ret
inc
add
jmp
jg
or
rclb
xchg
enter
cmp
sub
movsb
out
addl
add
or
fwait
loopne
test
fdivrl
enter
cld
pop
mov
in
out
xor
lea
aas
popa
or
adc
add
leave
lds
cli
pop
gs
adc
sub
jo
pop
mov
xchg
mov
pop
mov
das
mov
add
dec
out
lock
push
mov
add
or
and
mov
jmp
jne
lahf
sub
adc
mov
fnstenv
sbb
and
aad
xor
push
hlt
mov
mov
ss
incb
fcompl
imul
or
mov
mov
lds
add
sar
pop
or
out
mov
shlb
sub
jae
ja
inc
test
pop
xchg
add
rcr
call
jo
mov
push
pop
fdivrs
adc
cmp
mov
rorl
stos
not
aas
sahf
nop
mov
movsb
fistpl
sub
dec
xlat
lcall
test
cwtl
dec
push
fmuls
decb
pop
loop
sub
das
mov
and
sti
xchg
sti
aaa
sub
clc
repz
pop
mov
adc
rorb
test
inc
jp
sahf
push
insl
cli
clc
adc
js
sub
or
xor
dec
xchg
xchg
outsl
mov
xchg
lock
or
dec
and
mov
imul
pop
add
push
sub
js
out
out
test
test
add
lock
stos
jno
in
call
icebp
jns
mov
cmp
mov
jbe
add
ljmp
mov
cmpl
mov
fxch
cli
jl
mov
xchg
mov
sub
mov
push
push
cld
fs
movl
scas
cmp
inc
dec
imul
idivl
push
mov
bound
pop
ljmp
lds
pop
or
mov
push
shrl
jne
inc
sub
mov
icebp
scas
stos
addl
jns
pop
push
out
hlt
jno
or
ss
inc
mov
inc
and
xchg
sub
bound
mov
daa
push
aam
mov
push
jl
jecxz
or
gs
roll
insb
sub
push
xor
dec
push
mov
inc
mov
mov
ljmp
lret
ret
xchg
lock
loopne
lret
std
movsl
xor
inc
jbe
fisttpll
sbb
xor
cwtl
push
outsb
inc
ds
jns
clc
into
sub
push
mov
xlat
pop
sbb
icebp
inc
imul
mov
pop
xchg
sbb
jge
sbb
fisubl
dec
mov
aad
pushf
in
inc
test
xchg
mov
mov
test
fs
inc
out
in
xchg
push
repnz
xor
fsts
jnp
fisubrl
fwait
aad
jge
mov
sub
pop
jnp
inc
mov
mov
lods
nop
popa
repnz
bound
fsubrs
jno
clc
icebp
lods
sbb
lcall
clc
dec
sub
push
addr16
xchg
sub
int3
push
mov
aas
xlat
add
jge
ds
test
mov
insb
rolb
outsb
xor
or
xchg
mov
lcall
mov
fdivr
in
int3
cmp
mov
cmp
sub
sti
testb
xchg
xor
or
ljmp
jmp
xlat
lea
sub
fistps
jne
mov
jne
in
xchg
cmc
outsl
mov
push
outsb
repz
sbb
sbb
mov
cld
ret
jbe
jns
jns
dec
or
dec
bound
int3
jmp
fs
push
mov
imul
jns
mov
jle
jle
stos
jns
dec
and
jl
aam
adc
test
pop
lods
xchg
mov
iret
mov
sbb
fcoms
repnz
push
dec
mov
ljmp
mov
cld
xor
mov
test
jbe
mov
int
xor
orl
cli
gs
xlat
fisttpl
xchg
xlat
mov
aaa
xlat
imul
cmp
mov
jecxz
pop
cmp
dec
mov
push
aas
int3
xchg
lods
popa
cmp
xchg
outsb
jnp
scas
fstps
stos
repnz
aam
mov
sbb
pushf
and
addr16
sbb
cmpsb
xchg
push
sub
pop
test
push
aas
lods
jle
addr16
inc
test
cmp
sub
data16
pop
mov
nop
ss
hlt
bound
fldcw
mov
push
loope
in
jo
adc
inc
pushf
ja
dec
jmp
aaa
outsb
mov
repz
sbb
sbb
rorl
inc
mov
idivl
sti
movsl
inc
repz
arpl
cmp
mov
push
cld
cmp
pop
ffreep
push
scas
insb
mov
pop
mov
xchg
xor
lret
jne
cli
outsl
cmpsb
data16
lds
mov
setb
hlt
fs
cwtl
push
sbb
rol
xchg
and
jl
shlb
xchg
repnz
fsubl
pop
ret
mov
scas
mov
push
popf
arpl
mov
inc
jecxz
shll
cmpl
fwait
mov
jle
out
mov
lahf
or
mov
mov
add
jbe
push
xchg
mov
out
lock
mov
dec
sbb
mov
pop
pop
pushf
repnz
push
movsb
adc
add
mov
aaa
sub
mov
sti
rcrl
dec
stos
mov
mov
add
cltd
stc
jns
std
arpl
idivl
mov
fwait
leave
sub
idivb
cmpsl
into
dec
icebp
iret
mov
sbb
and
adc
xchg
sahf
out
and
nop
dec
jmp
bound
lea
pop
sub
adc
mov
loopne
xor
insl
lea
std
sbb
mov
enter
popa
idivb
fstpt
pushf
sub
xchg
iret
mov
bound
dec
outsl
lds
sub
iret
or
cli
adc
pop
cmpsb
add
pop
pop
sub
push
jae
cmp
xchg
sbb
ja
lock
and
sbb
add
fscale
nop
and
sahf
addb
cld
das
xorb
jb
mov
mov
lds
sub
sbb
sbb
jmp
xor
int
push
xor
push
mov
push
testl
dec
insb
mov
mov
xor
or
xor
pusha
xchg
int3
mov
and
mov
aam
mov
mov
loope
xchg
fimull
dec
dec
arpl
add
js
cltd
leave
movsb
out
or
push
jg
repz
scas
mov
push
add
mov
loope
rcrb
mov
push
xor
push
stc
leave
dec
cli
lcall
jno
cmp
lret
inc
sub
call
inc
jmp
mov
mov
insl
ret
jmp
jnp
add
or
mov
sbb
stos
mov
hlt
xchg
dec
js
jbe
or
xchg
in
mov
lahf
shll
stc
adcb
jg
jae
xchg
fs
xchg
cmp
jae
sarl
lock
dec
add
std
leave
jae
aad
scas
or
imul
jo
nop
inc
rorb
cmp
pop
and
inc
sbb
dec
fs
mov
into
adc
xchg
sahf
jp
fisubrl
stc
mov
inc
rorl
lods
mov
mov
and
add
add
outsl
push
add
push
jbe
insl
pop
stos
fs
les
call
or
testl
and
gs
aas
fdivs
addr16
sbb
into
and
nop
movsl
movsl
jle
mov
xchg
jae
pop
out
lods
pop
lret
or
or
call
jmp
add
sbb
rclb
lahf
lods
lea
mov
pop
enter
repnz
xchg
pop
shrl
leave
xor
mov
mov
xor
xor
cmp
mov
jecxz
cltd
mov
or
mov
jg
sar
outsb
pusha
sub
adc
dec
pusha
int
loop
or
mov
jb
test
into
jns
int3
pop
jge
add
cmpsl
add
lahf
xor
xor
cs
or
cmp
lea
rorb
push
xor
sbb
ss
int
dec
mov
fdiv
pop
aad
fisttpl
daa
inc
jmp
or
mov
out
sbb
inc
or
add
fnsetpm(287
mov
sub
sbb
popa
sahf
dec
mov
xchg
loope
xchg
mov
pop
outsl
sbb
dec
mov
jp
aam
add
push
or
sbb
mov
test
mov
enter
stos
scas
xor
fistps
lods
arpl
mov
sti
adc
sbb
rcll
mov
xchg
sahf
mov
test
push
xor
cltd
in
daa
cli
pop
cmp
xchg
mov
push
or
cmpsl
pusha
bound
andl
jecxz
rcl
loope
stos
pusha
jb
sbb
push
outsb
outsl
fldenv
add
js
andb
pop
fstpl
xchg
mov
sahf
pop
insb
dec
orb
cmpsl
or
adc
mov
in
sub
sbb
dec
cmpsb
xlat
test
push
mov
inc
cmp
imul
adc
push
imul
cwtl
ss
addl
inc
cmpsl
and
pop
mov
std
mov
xchg
aad
es
icebp
lret
addb
mov
bound
cmp
arpl
xchg
mov
pop
pop
cld
lds
sbbl
fimuls
sbb
inc
push
xlat
ds
lock
cwtl
es
xchg
rcrb
push
push
ss
lcall
dec
push
mov
ficompl
xchg
sahf
shl
mov
cmp
mov
pushf
mov
xor
pop
aas
mov
or
add
iret
or
nop
cs
push
cmp
push
movsb
out
pop
ja
mov
or
mov
jle
pop
movsl
in
hlt
push
sub
call
std
scas
sub
mov
dec
ror
mov
cmp
add
stos
xchg
add
and
aas
repnz
pop
inc
hlt
test
push
nop
inc
push
xor
jne
xchg
dec
fstpl
into
rcrb
mov
sub
pop
push
xor
pop
call
adc
adc
adc
lahf
decb
addr16
pop
jns
arpl
push
inc
scas
mov
or
mov
or
sub
dec
dec
adc
adc
xchg
and
loop
daa
ds
mov
clc
insl
mov
rcl
mov
adc
into
ret
test
and
cmpl
and
cmp
mov
push
mov
data16
lea
call
mov
repnz
movsb
les
jae
cmp
flds
adc
data16
mov
xor
push
inc
sub
and
jo
jne
sub
sti
inc
pop
jle
cmp
aam
cmp
cli
xchg
inc
xor
adc
loope
fmull
imul
mov
mov
xchg
inc
cwtl
inc
dec
xchg
stc
jnp
ret
fcmovb
in
push
dec
loop
lock
fcom
test
cs
jne
dec
push
iret
inc
loopne
inc
mov
push
cs
add
out
clc
popa
sub
adc
lds
idivb
sbb
sbb
mov
lret
jo
adc
repz
test
push
xchg
xor
jae
sub
xor
dec
sub
bound
lds
adc
xor
fidivl
push
sub
movsl
or
mov
jb
push
out
sarl
dec
ss
in
sbb
test
ljmp
add
dec
lods
jns
decb
cmpsb
mov
or
dec
mov
inc
cmp
jg
scas
add
lea
sbb
lahf
outsb
inc
fs
daa
add
push
push
pushf
ja
xchg
cmp
enter
sub
cmpb
sbb
dec
enter
sbb
push
sub
mov
das
std
xchg
cmpsl
int3
push
idiv
sbb
cmp
cld
arpl
cmp
cli
dec
mov
push
mov
push
xor
fimuls
push
inc
jle
cmp
inc
xor
pop
pop
mov
orl
into
test
mov
insl
sbb
and
or
in
aad
xchg
push
dec
dec
or
sub
dec
xchg
addr16
dec
dec
scas
xor
push
mov
adc
fidivl
or
daa
frstor
mov
xor
pop
jecxz
fwait
pop
push
fisubrs
mov
mov
fbstp
push
div
or
add
in
fadd
das
jl
subl
jl
fimuls
jge
les
inc
push
gs
jmp
push
xor
insb
test
jp
jb
mov
cmp
pushf
mov
ljmp
xchg
xchg
xchg
inc
in
xchg
iret
shlb
jne
adc
xchg
push
in
ja
inc
push
xchg
clc
negb
fiadds
mov
jne
cmp
sti
dec
cli
sbb
or
pop
mov
jle
mov
int
cli
push
sbb
jb
cmp
ja
lods
aaa
out
aas
xchg
push
mov
cltd
fdivrl
inc
cs
pop
mov
jmp
inc
fwait
xor
dec
add
jp
cmp
cmp
addr16
jmp
xor
iret
mov
dec
subl
mov
imul
and
mov
mov
test
mov
test
cltd
jae
adc
lea
cmovae
inc
pop
sub
xor
adc
add
sbb
jnp
xor
out
xchg
jo
in
ja
and
jns
mov
xchg
aas
cmp
jge
les
jp
sti
or
xchg
mov
rcrl
mov
andl
push
outsb
pop
orb
arpl
dec
cltd
push
fmull
pop
das
push
sbb
mov
sub
rorl
jp
decb
mov
insb
in
cmp
popf
inc
add
push
mov
fistps
clc
cmp
mov
movsb
push
cmc
or
mov
aad
icebp
loop
loope
pop
adc
dec
pusha
pop
std
and
and
cmp
xchg
cmp
popf
inc
and
dec
lods
xor
pop
dec
sti
or
dec
lret
mov
xchg
hlt
pop
push
adc
or
jns
inc
inc
dec
xchg
scas
call
lret
test
xchg
test
fucom
and
lret
nop
divl
mov
pop
fadds
aaa
sahf
xchg
gs
xor
dec
ds
aad
push
pop
js
mov
push
mov
jge
jp
and
push
adc
lods
popl
push
jmp
scas
lahf
push
mov
ret
insb
jnp
and
fstps
xor
ds
jg
jns
popa
mov
cmpsl
add
inc
lret
je
xchg
lods
in
movsl
dec
or
test
je
jbe
mov
adc
sub
sbb
or
jae
aas
and
stos
cmpsb
adc
imul
cmp
ret
jne
dec
dec
mull
fcmove
arpl
xchg
insl
rcll
inc
xchg
mov
cld
imul
inc
and
mov
and
push
push
pop
cwtl
daa
repnz
stc
inc
xor
shlb
sub
popf
sub
pusha
dec
sub
add
push
in
push
ret
fiaddl
xchg
inc
add
inc
push
mov
adc
sbb
or
mov
inc
out
mov
nop
cwtl
clc
inc
push
daa
inc
xchg
add
mov
das
inc
mov
icebp
call
inc
mov
in
test
sbb
push
ljmp
out
sub
push
clc
xchg
aaa
and
je
lds
js
or
sub
in
push
dec
add
adc
mov
insb
orl
jecxz
loope
mov
dec
sbb
sbbb
ds
mov
add
mov
push
push
pop
mov
inc
ljmp
sbb
int3
push
in
addr16
pop
push
mov
cmp
xchg
addl
data16
sar
aas
mov
or
shlb
pusha
adc
cmp
or
lods
mov
mov
iret
ja
push
lds
rclb
xchg
mov
sbb
pop
adc
inc
les
jp
into
sub
cmpsb
pushf
sbb
push
out
inc
mov
xchg
mov
call
pop
idivl
push
test
push
fcmovnu
out
insb
sarl
flds
dec
dec
sbb
xor
cs
pop
inc
xchg
jo
lcall
mov
or
shl
ss
add
mov
roll
push
jg
addr16
xor
dec
sub
and
mov
insb
mov
mull
imul
or
jbe
mov
pop
scas
mov
out
xlat
ret
adc
lds
lret
dec
test
push
stos
inc
jge
dec
or
data16
aaa
jno
and
dec
cli
xor
fsubr
shlb
lock
cs
rcrb
xor
das
mov
pop
push
test
jbe
jns
and
clc
sub
out
jge
movsl
test
sarb
pop
mov
and
push
jecxz
dec
mov
jmp
nop
fldl
scas
cwtl
inc
cmpsl
bound
rcrb
mov
stos
in
cmpsl
push
pop
in
fwait
xor
jle
aas
stc
sbb
sbb
adc
cmpsb
orb
rcr
xor
xor
jno
jge
mov
pop
mov
inc
out
int3
sbb
pusha
jmp
outsl
dec
je
decl
sbb
out
pusha
xor
pop
mov
cltd
lea
xor
std
jl
rcr
push
or
xorb
out
hlt
in
adcl
movsb
pop
mov
push
mov
aaa
xor
cmp
mov
add
je
inc
xchg
mov
dec
jnp
inc
pop
imul
xchg
icebp
add
scas
xchg
and
dec
add
imul
push
mov
enter
negl
or
pusha
xchg
test
in
sub
lcall
aad
sub
nop
add
inc
iret
sahf
pop
cli
pop
push
push
testl
dec
xchg
lret
es
leave
inc
gs
outsb
scas
dec
popf
jns
bound
dec
rclb
push
push
jbe
fs
push
les
popa
fidivrs
xor
scas
push
dec
popf
cmpsb
fcoml
push
repnz
and
mov
mov
test
push
ja
and
adc
pop
add
jo
sahf
sti
into
mov
or
faddl
mov
mov
add
push
push
xor
sub
movsl
lret
subb
cs
jg
push
ret
or
mov
xor
lea
jbe
adc
sbb
mov
jge
and
pop
sbb
pop
jb
mov
rol
xlat
test
adc
stc
imul
mov
jb
mov
push
jmp
dec
jno
test
sbb
call
jge
lret
xor
adc
ret
aam
test
cltd
aaa
je
aaa
pushf
pop
xchg
or
or
pushf
mov
inc
into
adc
fldl
sbb
mov
in
add
movsl
dec
adc
scas
mov
sahf
repnz
loopne
outsb
or
xlat
roll
mov
fcmovu
and
pop
imul
fnsave
fistps
mov
mov
fcomi
ret
and
or
sub
xorl
rcr
gs
mov
inc
lock
push
int3
adc
adcl
idivb
loope
inc
add
mov
jns
enter
cmpl
dec
mov
pop
pop
movsl
data16
js
bound
xor
push
fldcw
ss
lds
xor
cmp
mov
in
push
ret
cmp
add
pop
push
test
sub
push
pushf
push
xchg
adcl
fisubrl
leave
mov
lahf
fsubs
xorl
push
mov
cwtl
lret
gs
mov
add
loop
adc
pop
mov
adc
cmpsb
mov
inc
in
or
pop
add
push
adc
adc
andl
push
pop
sub
lret
outsl
gs
sbb
dec
mov
add
push
shrl
shll
xor
add
cmpsl
sub
push
cwtl
push
adc
adc
xchg
sbb
cmp
mov
enter
pop
aad
pop
ds
js
mov
sub
inc
jmp
popa
push
jb
loope
push
ret
sub
and
mov
in
add
pop
shl
dec
cmp
cmp
and
hlt
pusha
popf
jmp
and
or
mov
or
sbb
in
mov
fldt
mov
nop
push
sub
call
mov
jno
jp
or
push
cld
arpl
ljmp
xchg
or
fwait
sub
cmpsl
mov
in
outsb
and
fidivrl
popf
adc
or
int
es
or
push
jp
movsl
addr16
jno
mov
jnp
cmp
rorl
aas
xchg
push
or
mov
adc
xchg
clc
iret
fwait
pop
mov
jecxz
mov
ret
xchg
add
cmp
cld
pop
mov
jbe
aad
xchg
pop
dec
xor
mov
andb
sti
lea
movsl
dec
mov
scas
dec
into
cmpsb
aad
stos
jae
or
sarl
xlat
dec
push
test
push
pop
jbe
push
mov
enter
mov
jbe
lock
cmpsb
int3
mov
nop
cmpsb
in
dec
push
jbe
sbb
js
push
out
xchg
lea
xchg
push
call
mov
sbb
lahf
fdivr
jl
dec
fwait
popf
cld
test
lds
lret
inc
test
mov
xchg
jne
ret
inc
fwait
sub
lock
je
or
ret
cmp
out
nop
mov
ss
dec
inc
jmp
daa
push
mov
int
push
fld
scas
loop
adc
pop
call
xchg
outsb
adc
sbb
xchg
cmc
shl
jno
test
imul
fidivrl
jae
pop
lret
add
inc
push
inc
pusha
mov
push
xchg
test
pop
adc
pusha
mov
shr
and
push
mov
add
inc
leave
cmc
pop
inc
cmp
rcrl
int
jp
pop
lods
daa
bound
int
adc
push
nop
inc
xchg
xchg
bound
or
or
popf
jae
in
cmp
and
mov
inc
inc
mov
mov
sbb
mov
inc
test
and
push
lahf
jb
sbb
dec
cwtl
dec
scas
sub
mov
and
arpl
ret
int
jl
xchg
scas
mov
rcl
add
fisubrs
stos
enter
jo
or
dec
jnp
push
jo
cmp
aas
outsb
stc
je
std
and
xchg
outsl
pop
jnp
xor
loop
inc
aas
adc
lret
adc
out
nop
lret
rcrb
sub
sub
pop
push
pop
mov
fisubrs
stos
js
jnp
adc
cmpsl
lret
testb
jae
ret
scas
cmp
dec
mov
lds
std
in
pop
dec
jle
pop
addr16
pusha
mov
push
fwait
mov
test
inc
cltd
or
dec
xrelease
mov
pusha
dec
arpl
mov
jmp
mov
cmp
repz
andb
pop
dec
add
sti
push
mov
and
sbbb
adc
mov
in
fmull
dec
sbb
sub
dec
and
adc
jecxz
jbe
mov
cwtl
lods
addr16
insl
sub
roll
mov
clc
mov
fisttps
cwtl
sti
ret
adc
ficoml
out
out
xlat
cmp
sbb
repnz
jg
ljmp
add
xchg
ffree
or
add
mov
sub
sbb
lods
pop
xor
mov
aaa
xlat
cmp
fdivs
adc
and
xor
add
jbe
add
js
mov
or
xchg
aas
sbb
arpl
lret
ds
xchg
fsubr
jle
roll
push
push
xchg
popa
push
int3
xlat
ds
mov
add
add
mov
push
test
cmpsl
pop
add
pop
inc
pop
ficomps
inc
sbb
mov
fcomp
inc
mov
push
pop
sub
loope
ljmp
pop
aad
mov
mov
xchg
cmp
insw
xchg
mull
movsl
leave
jb
sbb
sbb
push
and
add
jl
xor
bound
andb
xor
adc
loop
mov
aaa
mov
outsl
hlt
and
push
enter
jecxz
xchg
or
dec
out
jle
mov
cs
lret
inc
mov
mov
mov
cli
filds
jge
test
pusha
adc
add
jne
rcll
in
dec
test
iret
ja
ret
mov
xor
out
std
fldt
outsb
adc
sti
jb
and
or
insl
daa
sbb
addr16
iret
inc
aas
js
je
imul
mov
subb
enter
xchg
daa
fnsave
mov
sub
test
les
out
push
xchg
mov
xchg
sbb
repnz
pop
jne
xchg
xchg
cmpsb
mov
in
inc
popf
xchg
or
stos
cld
jb
les
jbe
dec
das
lcall
test
xor
hlt
jns
dec
shrb
inc
sub
mov
jbe
and
pop
jg
frstor
dec
pop
mov
pop
subb
adc
in
xchg
lret
jo
enter
pop
lock
stos
lret
ljmp
cmp
or
jl
outsl
push
jle
fs
sub
sbb
push
inc
cmp
push
push
dec
pop
bound
or
pop
fsubs
addps
mov
cmpb
pop
xor
or
mov
ss
mov
or
sbb
pop
jmp
mov
push
ljmp
ret
fs
icebp
adc
sahf
mov
clc
mov
mov
rcr
shlb
shr
or
neg
or
xchg
repnz
pop
xor
arpl
or
adc
lea
xchg
cld
sub
jo
pop
mov
mov
dec
push
mov
cs
fisttps
jb
xor
add
icebp
scas
mov
or
sub
push
xor
movb
movsb
inc
sub
and
cmp
addl
leave
sub
insl
outsl
or
daa
xchg
gs
xchg
cli
push
pop
aas
outsb
mov
scas
stos
mov
jg
repz
jmp
bound
sub
jecxz
jge
sbb
pop
xchg
adc
shl
lret
stos
push
test
mov
lods
test
mov
lret
dec
jb
bound
inc
arpl
test
cmpsb
enter
mov
mov
xor
or
mov
aam
imul
push
in
jbe
mov
icebp
xchg
cmpsb
inc
sbb
dec
mov
sti
sbb
fsubp
inc
cli
mov
mov
cld
pushf
lcall
repnz
cmpsl
mov
stos
mov
cmp
pop
roll
stos
int
jp
leave
jnp
jbe
push
loopne
sub
ret
mov
arpl
lea
and
or
cld
jbe
or
mov
movb
rcrb
repz
aad
sbb
sar
shlb
testb
clc
or
jecxz
pop
sbb
mov
inc
sub
mov
hlt
xor
inc
adc
insb
lahf
jne
movsl
lret
mov
jg
outsb
ficoms
pop
pop
iret
out
push
cmpsb
gs
push
jb
aad
out
mov
jae
sub
jns
loopne
sub
dec
pop
push
pop
jno
cwtl
pop
sub
cmpsb
leave
std
scas
inc
adc
int3
scas
and
rorl
and
add
imul
jo
jae
sbb
mov
dec
out
fdivp
xchg
sbb
ljmp
lock
xchg
in
push
repz
roll
jnp
scas
sahf
invd
sub
cmp
ret
ficoml
pop
out
adc
cs
inc
pop
pusha
sbb
xor
dec
push
pop
out
cmp
stc
mov
push
mov
test
test
xchg
cmp
xchg
xor
mov
pushf
nop
pop
test
sbb
cmp
fwait
jno
pcmpgtw
xchg
sbb
iret
loope
mov
add
inc
pusha
ret
sub
cmpsl
add
xchg
pop
sub
adc
lods
adc
jnp
les
dec
shrl
sub
lcall
std
ss
cmpsb
repnz
jge
mov
adc
rep
mulb
inc
dec
sbb
jmp
push
jb
xchg
sub
push
out
call
or
mov
inc
xchg
push
data16
mov
xor
jns
enter
test
jno
stc
cld
sub
sub
push
cmp
fadds
pop
fdivrs
sarb
shlb
sbb
mov
mov
gs
aam
movsl
cmp
repz
and
inc
sar
sub
push
fwait
leave
sar
push
push
imul
outsl
mov
scas
mov
lahf
ss
fidivl
sbb
push
dec
stos
xchg
pop
cmp
xchg
mov
xor
jb
sar
xchg
jmp
dec
mov
and
aad
ret
mov
cmp
fcmovbe
aam
xchg
adc
sub
fstps
inc
lcall
icebp
sbb
fisttps
dec
jae
test
push
and
jle
int3
pop
jl
cmp
or
adcb
pop
in
lcall
hlt
pop
sub
pop
js
cmpl
or
repnz
jae
sahf
repz
inc
jnp
test
jl
je
fsts
into
dec
inc
jmp
js
repnz
mov
cs
shrl
xor
sbb
xlat
fcmovu
jmp
jno
js
repz
call
inc
jle
imul
cmc
adc
adc
shlb
lock
sub
pop
jb
in
push
stc
pop
xor
xchg
xor
rcll
xor
jmp
cmpsb
mov
imulb
fisubrs
mov
adc
scas
std
pop
adc
sbb
roll
pop
or
ja
adc
add
ret
add
das
rorb
arpl
xor
mov
stos
xlat
or
in
test
mov
pop
inc
sbb
sbb
shlb
gs
pop
xor
xchg
das
jge
cli
sbb
out
roll
mov
mov
ljmp
insb
xor
mov
out
jne
dec
bound
xor
jbe
push
popa
mov
inc
xchg
frstor
dec
adc
in
das
push
add
fisubrs
xchg
cmp
lods
sbb
shrl
mov
mov
mov
cmp
imul
clc
ja
sub
xor
cli
sub
inc
push
rcrl
cmp
push
incb
out
iret
pop
inc
inc
jns
push
inc
push
add
jo
andl
jb
out
jmp
mov
stc
aam
lret
sub
nop
test
or
ljmp
and
push
jno
fs
pop
push
rclb
jl
lahf
in
add
pop
imul
test
fs
lea
jo
stos
xor
into
mov
pop
adc
cmp
fnstenv
call
les
bound
sti
cmc
xlat
xor
stc
pop
mov
adc
inc
add
inc
jbe
jecxz
imul
cwtl
push
mov
lods
xchg
rcl
cmpsb
mov
bound
jg
test
xor
push
adc
push
mov
faddl
sbb
fcmovbe
enter
inc
fnstsw
sub
nop
out
xchg
pop
stos
adc
adc
insb
shlb
sbb
fwait
mulb
aad
jmp
dec
mov
jo
pop
dec
imul
push
outsl
jmp
loop
dec
cmp
jae
push
nop
cmp
nop
lcall
enter
add
clc
dec
sbb
dec
and
mov
mov
add
test
mov
insb
dec
xor
pop
and
cli
test
out
sub
jecxz
shlb
std
pop
mov
or
mov
sbb
mov
outsl
outsl
add
jmp
ss
add
or
sbb
popf
into
or
gs
mov
add
cmpsb
sbb
xchg
and
mov
mov
mov
jne
add
dec
rorl
mov
addl
dec
jg
lods
mov
and
cmp
push
ret
pop
addb
lea
pop
add
inc
mov
sub
repnz
imul
adc
pop
les
mov
out
inc
inc
sub
inc
aaa
outsb
test
test
jp
or
pop
ja
add
dec
cmp
in
and
mov
adc
mov
or
mov
sbb
not
daa
movsb
ljmp
test
pop
jns
ret
mov
mov
xchg
adc
and
adc
adc
mov
mov
push
fdivrl
add
ljmp
in
pop
inc
inc
mov
xor
or
mov
mov
pop
push
mov
xchg
stos
test
inc
sub
inc
add
pushf
call
rcr
nop
xor
mov
ret
addb
xsave
cld
mov
cwtl
lret
call
imul
ret
ss
loopne
push
pop
es
movb
inc
mov
pop
nop
push
pop
int3
adc
jecxz
or
dec
dec
sub
roll
mov
out
in
push
fldenv
cmp
cmp
out
xchg
or
mov
pop
xchg
dec
pushf
sahf
insl
push
call
push
loop
pop
xor
and
ret
push
mov
daa
or
les
ficoms
jnp
lret
pop
mov
mov
jecxz
mov
or
andl
mov
jae
daa
fidivs
fwait
sahf
cmp
dec
pop
stos
out
sbb
pop
test
cmc
xor
and
fdivr
add
scas
mov
setae
fidivrs
fwait
jp
lods
aam
push
and
shlb
aaa
lcall
lods
mov
push
mov
arpl
pop
je
js
cmpsl
ja
addr16
test
sub
ja
cltd
mov
nop
mov
xchg
jecxz
mov
jl
xchg
sbb
fisubs
aaa
push
lcall
or
adc
loopne
pop
pop
add
pop
adc
fsub
push
lret
mov
mov
sbb
sub
sti
cld
push
add
outsb
and
mov
ja
shll
ds
lds
xor
movsl
jl
clc
xor
xlat
mov
xor
cmp
stos
repnz
fsubl
jecxz
lods
fsubrs
mov
dec
ja
jecxz
inc
nop
mov
fisttps
jae
inc
mulb
or
dec
lock
xchg
add
xchg
enter
mov
aam
dec
pop
mov
xorl
mov
popl
add
pusha
inc
sahf
loop
rclb
dec
in
into
jle
inc
negl
sbb
inc
adc
jge
les
pop
sbbl
inc
out
std
pop
mov
fmull
and
xor
jnp
sub
ficoml
lret
mov
jl
lock
lea
adc
lods
ret
or
inc
loopne
dec
jbe
mov
sahf
iret
dec
xchg
or
into
mov
cwtl
scas
inc
insb
and
cmpsl
dec
sub
xchg
mov
mov
inc
dec
xor
cmp
sub
out
ljmp
pop
loop
sbb
jp
or
and
icebp
inc
mov
xchg
jne
mov
sub
test
sub
push
imul
aam
sahf
daa
fsts
xchg
xchg
jmp
insl
and
sub
mov
popf
adc
adc
adc
pusha
jbe
xchg
mov
sbb
xchg
cltd
add
xchg
mov
je
cltd
cmp
test
xchg
cmp
out
mov
popl
hlt
sub
aaa
and
sub
push
loopne
or
jo
aam
pop
mov
in
mov
mov
aad
add
mov
mov
xchg
xor
out
imul
test
mov
inc
out
out
pop
push
pop
js
push
cmp
xor
movsl
mov
mov
push
lret
and
pop
rclb
retw
fldln2
es
lock
aas
mov
sub
roll
outsl
leave
ret
mov
pop
fsubrl
loopne
imul
popf
mov
jnp
mov
push
mov
and
sub
add
testb
aas
cmc
scas
loope
jmp
test
jbe
subb
imul
sbb
pop
popa
push
stc
dec
add
rcr
add
pusha
and
pop
adc
and
sahf
leave
sbb
out
jl
hlt
or
xchg
leave
mov
pop
xor
mov
loopne
cmp
aaa
ja
and
inc
nop
aad
insl
mov
fiadds
mov
ret
ficomps
aaa
xor
cld
dec
out
push
repz
dec
xor
lret
mov
push
mov
outsb
icebp
push
mov
into
mov
adc
fstpl
or
mov
cwtl
inc
mov
loopne
pop
xchg
dec
mov
icebp
mov
shrl
adc
in
or
clc
jns
mov
xor
and
mov
lds
xchg
mov
cmp
pop
lods
jne
rolb
dec
mov
push
mov
pop
sbb
movl
hlt
and
or
stc
cmc
mov
mov
sub
js
dec
mov
cld
popa
mov
jmp
in
in
in
imull
jbe
aam
addr16
mov
daa
or
mov
movsb
sub
mov
ret
insb
sub
mov
add
jmp
idivb
mov
lea
incb
call
cmp
cmpsl
xor
xchg
out
add
pop
cmp
jbe
sub
jnp
lds
cmpl
xchg
fnsave
stos
fwait
pop
inc
pop
or
xchg
xor
lock
pop
in
inc
mov
xchg
ljmp
xchg
insb
sub
sarl
and
loop
in
outsb
mov
fwait
and
add
les
in
jns
push
aaa
inc
jmp
jl
idivb
xor
aaa
out
push
loopne
and
mov
aad
aas
sar
add
adc
orb
push
sbb
xchg
jae
pop
mov
lock
pop
lock
push
imul
sub
pop
outsl
movsb
aaa
sub
sub
inc
adc
cmp
loope
xchg
push
adc
loopne
test
sbb
cmp
mov
icebp
inc
pop
std
stos
xor
fld
mov
xor
mov
repz
in
add
popa
out
mov
movsl
jb
adc
add
ljmp
mov
les
test
adc
inc
ljmp
nop
pushf
mov
inc
test
xor
fcomps
mov
stos
xlat
es
dec
mov
jb
cld
addr16
jp
imulb
jl
dec
test
loope
out
lret
add
stc
jmp
push
push
sbb
dec
mov
loopne
ss
xor
sub
pop
mov
and
lock
mov
test
js
mov
fists
mov
lcall
stc
out
aaa
mov
push
and
xor
int3
or
or
dec
sbb
iret
packuswb
sub
mov
cli
sub
and
loope
outsb
xchg
xchg
pusha
outsb
aam
or
xchg
adc
xor
sbb
out
and
aad
lods
aaa
xor
cld
out
mov
xlat
test
int
dec
pop
les
cmp
add
mov
pop
xorb
mov
data16
push
ret
xchg
xchg
mov
fwait
cmp
inc
sbb
or
mov
movsl
mov
fcmove
add
xchg
cmp
stos
inc
mov
repz
cmp
movzbl
xchg
lret
lods
push
shll
jne
cmpl
addl
stos
lds
add
mov
pop
sahf
push
or
repnz
js
mov
hlt
stc
adc
jecxz
xor
movb
popf
mov
test
add
scas
fld
fidivrs
mov
or
adc
push
adc
sub
add
mov
fbld
or
das
and
mov
in
adc
jle
dec
lods
mov
dec
cmp
mov
call
and
add
cmc
adc
sbb
sub
aam
xchg
aad
inc
mov
mov
ljmp
pop
loope
sbb
xlat
jb
movsl
faddp
and
outsb
mov
out
adc
cs
jo
pop
test
adc
stc
sub
fcomp
subl
cmpsl
mov
call
int
rorl
and
add
sbb
cmp
push
push
adc
sbb
xor
pop
mov
mov
inc
cli
push
mov
mov
sbb
xor
lcall
push
jo
sti
shlb
test
sahf
pop
shl
push
push
inc
dec
loop
sahf
mov
frstor
ljmp
int
inc
xchg
jle
dec
call
pop
ljmp
lods
sub
aam
cs
mov
sarl
sub
push
mov
repnz
mov
push
fwait
mov
jmp
inc
cmp
ret
test
mov
daa
push
sti
xor
adc
stos
mov
sti
imul
pop
pop
xchg
testb
xchg
test
sbb
jns
add
add
mov
lds
das
xchg
in
cwtl
push
popa
movsb
pop
xor
adc
out
mov
jge
jle
repnz
or
push
daa
subb
mov
xor
cmp
adc
and
sbb
rorb
jge
fs
xor
sbb
cwtl
dec
cmpb
test
push
pop
or
pop
sub
or
or
jl
cmp
loop
sbb
aam
xor
adc
push
mov
testb
shr
or
cld
adc
ljmp
pop
xor
shrb
push
out
arpl
inc
lods
faddl
cmpsb
inc
inc
inc
js
enter
inc
xor
add
or
daa
inc
not
or
mov
lds
fs
inc
outsb
negb
dec
es
in
in
jne
cmp
ljmp
adc
mov
mov
cmp
add
iret
lods
adc
mov
jb
jmp
cld
cli
mov
aam
vdivps
xchg
cmovge
lds
cmp
in
mov
int
neg
pusha
unpcklps
scas
out
mov
dec
cld
sti
dec
rol
mov
xchg
push
out
sbb
ja
inc
hlt
sbb
rolb
xchg
fwait
cmpl
pop
pop
bnd
jno
adc
jl
sub
aaa
jge
push
lock
jecxz
push
pop
xchg
mov
adc
push
mov
sbb
les
pop
lods
lret
or
out
out
add
dec
movsb
pop
jge
shll
outsl
jl
inc
xchg
ds
rcll
call
xor
test
test
jne
adc
mov
ret
je
into
push
mov
and
xor
jb
aad
pop
jno
addb
sub
cmpsl
adc
decl
std
mov
test
call
hlt
lods
add
sub
mov
push
fnstcw
insb
sub
jp
xorb
cld
xor
sbb
sbbb
pop
data16
inc
or
pop
imul
sti
ret
aaa
in
lahf
jle
in
outsb
stos
mov
jle
mov
push
xor
inc
push
adc
xchg
and
sbb
aad
xchg
pop
or
orb
dec
ret
push
loopne
jo
jne
das
scas
cld
push
and
andb
mov
jge
icebp
dec
mov
movsb
leave
pop
jl
lock
adc
add
jmp
add
lahf
in
cs
cwtl
dec
fnstsw
sub
sub
cmpsl
sbb
inc
sbb
dec
fisubrl
and
push
inc
jae
push
rcl
inc
xor
out
cmp
xchg
dec
pushl
and
jg
sbbl
cwtl
and
std
adc
outsl
mull
dec
shrl
sub
jns
in
stos
insl
int3
aam
lret
popf
inc
ljmp
insl
jns
lods
popf
dec
ljmp
sti
ja
enter
rcr
clc
cld
mov
mov
mov
mov
cli
cmp
lock
call
inc
jnp
orl
in
mov
mov
mov
fidivrs
test
dec
iret
add
js
mov
ret
inc
add
or
push
pmaddwd
mov
xor
mov
mov
lods
xor
shll
int
dec
cmp
mull
jge
jecxz
pop
mov
or
mov
insb
dec
call
mov
sub
and
lds
pop
sbb
mov
inc
add
stc
lea
movb
loop
pushl
lret
mulb
movsl
inc
lods
les
adc
outsl
or
ds
in
sub
sahf
ret
popf
cmp
test
and
jbe
push
aaa
sbb
jmp
jnp
push
addr16
fisubs
rcr
adc
dec
popf
lods
jmp
jl
outsl
jle
into
mov
daa
out
pusha
mov
pop
dec
sub
jno
cs
sbb
sub
mov
bound
pop
cmc
jmp
fists
cltd
mov
fstpl
push
add
jle
std
adc
enter
sahf
sahf
pushf
cs
rol
sub
jns
cmp
sbb
sub
mov
sub
in
or
jg
ds
sbb
insb
lret
pop
ds
jmp
testb
or
clc
sbb
jo
cmp
dec
adc
mov
cmp
sbb
jno
jo
arpl
xchg
jmp
loopne
mov
iret
mov
dec
pop
ret
std
mov
inc
fwait
imul
int3
popf
hlt
push
mov
mov
in
imul
or
insl
rcrb
dec
outsb
icebp
iret
jnp
push
in
ds
std
in
mov
pop
jo
rcrl
daa
insb
mov
test
mov
mov
jnp
call
mov
mov
adcb
mov
out
mov
push
inc
or
xor
sub
sbbl
push
xchg
add
pop
iret
jb
insl
jae
out
add
xchg
mov
dec
mov
mov
xchg
xor
cmp
mov
sahf
and
outsl
hlt
or
jb
cmpsl
aad
lea
xor
add
rorb
lds
testb
dec
push
lea
rcrb
imul
or
lock
pop
xchg
xchg
jl,pn
cmp
push
or
jg
bound
ss
pop
mov
dec
sarb
cld
push
jae
std
imul
rcr
jmp
outsb
pop
mov
pop
cld
push
jmp
bound
mov
hlt
insl
pusha
adc
jge
fisubrl
leave
leave
inc
loop
popf
sub
sub
jns
scas
dec
sub
and
cmp
aas
cmp
xchg
popf
cmp
push
cmp
mov
xor
je
outsb
pop
jp
cmp
add
rcrl
pop
in
or
movb
jnp
pop
test
jns
addb
jl
pop
add
lea
and
inc
cwtl
and
leave
and
mov
xchg
adc
cwtl
nop
xchg
sbb
pop
lea
pop
jge
cmp
pop
cmp
mov
mov
dec
lahf
mov
test
dec
nop
adc
xor
xchg
pushf
push
xchg
mov
pop
insl
xchg
movsb
insl
rolb
push
jae
int3
inc
shl
xor
fstpl
dec
push
inc
dec
aam
inc
mov
fisttpl
dec
cs
pusha
sbb
shll
out
and
out
outsb
arpl
mov
icebp
mov
sub
add
lock
inc
movsl
fisubs
mov
xchg
xlat
pop
pusha
cmp
ret
std
out
fs
jp
xchg
pop
pop
pushf
int
push
inc
in
dec
das
lods
jnp
inc
cmp
aas
cmc
out
mov
nop
popf
inc
lret
ja
pop
nop
push
repnz
insl
mov
cmpsb
mov
std
movb
mov
mov
idivb
jns
sub
sahf
mov
test
lretw
dec
cmp
ja
out
or
jg
cmp
test
jmp
in
push
add
enter
xor
loope
inc
test
jl
gs
stc
xlat
out
push
pop
lcall
sbb
aam
xchg
leave
cs
fsts
int3
sti
pop
sahf
sub
jge
ds
jge
sbb
mov
in
push
fisubrl
sub
ss
fs
mov
jne
inc
add
lds
jae
pop
cmp
pushf
lods
addr16
add
inc
mov
mov
mov
insl
mov
mov
out
ret
cmp
mov
mov
jbe
add
and
les
daa
xchg
mov
outsb
je
sbb
adcb
push
leave
out
push
adc
lods
xorl
and
jge
cwtl
mov
int
call
mov
repnz
in
in
xchg
dec
add
mov
stc
sbb
mov
mov
jmp
add
inc
js
imul
jle
push
imul
sahf
inc
adcb
outsl
cmpb
inc
jno
inc
or
in
pop
int3
sti
inc
xor
clc
push
jp
sub
lahf
mov
rcrb
xchg
push
or
daa
call
out
push
out
xchg
icebp
ljmp
lock
cltd
cmp
add
pop
jns
cld
clc
xchg
incl
mov
jg
gs
out
icebp
sbb
es
aam
sbb
loop
imul
cmp
stos
xor
loopne
xor
cmp
scas
sbb
and
pop
stc
sbb
fistl
ja
lahf
test
mov
xchg
dec
loope
scas
push
push
xchg
dec
mov
mov
dec
andb
pop
xchg
pop
leave
sub
xchg
mov
test
and
dec
and
cmc
ja
stos
nop
mov
loopne
in
push
int
mov
mov
jp
xor
test
out
mov
mov
aam
mov
inc
push
in
inc
cmp
pop
xchg
test
pop
out
and
inc
inc
dec
fidivrs
add
pop
or
jle
push
mov
pop
cltd
fstpt
inc
aad
pusha
xchg
in
and
jb
mov
xchg
sub
mov
adc
or
inc
mov
lea
fnsetpm(287
ror
mov
xor
add
cmp
stos
mov
rcrb
sbb
adc
push
fsubs
das
imull
fwait
push
in
popf
fisubl
and
pop
into
sub
cmp
aad
jmp
lret
ficoml
adc
xor
sub
popf
jmp
dec
test
xchg
fcmovnb
arpl
loop
sub
lahf
mov
jbe
bswap
adc
dec
jmp
push
sub
lock
sbb
xchg
adc
cmp
out
decl
divl
loop
jne
pop
pop
mov
mov
sarl
movsl
ret
push
fldl
mov
daa
sbb
xchg
out
mov
in
inc
pop
add
adc
bound
pop
mov
call
jecxz
xchg
std
jbe
pop
jbe
ja
icebp
das
cmc
ds
jae
xchg
lret
ss
cmp
or
imul
test
sub
in
inc
mov
fcomip
sub
fsubrl
test
pop
sbb
shll
out
jg
fnstcw
push
ds
popa
ss
or
cmp
add
xchg
jle
or
ljmp
cmp
rcrl
sbb
int
je
mov
mov
mov
pop
add
jl
xchg
cmp
lock
cmpsl
mov
mov
xchg
test
lahf
adc
mov
je
mov
cld
in
pop
cmp
movsb
lods
outsb
mov
mov
cmp
insb
mov
shr
and
mov
fs
or
cmp
dec
jnp
outsb
les
mov
outsb
push
cmp
std
pusha
sahf
push
xor
push
in
xchg
cmc
xchg
adc
daa
into
mov
adc
fcmovnb
jo
push
mov
cmp
push
popf
push
lods
and
adc
jno
inc
shl
sub
repz
cmp
fsubrs
int3
scas
cmp
dec
mov
jns
pop
cs
out
mov
add
pop
dec
decb
adc
mov
loop
idiv
popa
mov
js
je
popl
inc
ret
nop
ja
shll
dec
mov
js
fimuls
pop
add
jecxz
sahf
outsl
push
ja
push
dec
push
jle
xchg
pop
ret
into
mov
sahf
call
pushf
or
mov
mov
in
xchg
sbb
xchg
sbb
cld
xor
scas
push
ret
xlat
or
out
push
push
sbbb
or
inc
cmp
and
adc
push
iret
movsb
mov
or
aas
add
xchg
pop
push
sarb
cmpsl
cli
add
add
mov
in
cld
cmp
dec
mov
sbb
adc
rorb
jg
cwtl
push
icebp
decl
mov
lret
and
pop
sbbb
pop
es
inc
and
ljmp
outsb
rolw
cmp
and
push
and
pop
cmc
push
xor
pusha
jnp
pop
mov
mov
addr16
xor
pop
das
inc
insb
mov
cmpb
movq
and
sub
add
sub
inc
arpl
xchg
pusha
leave
xchg
subl
aas
outsl
aam
or
mov
and
mov
test
jmp
cmp
sub
lcall
xchg
in
mov
mov
xchg
or
and
and
out
xchg
pop
mov
push
outsl
xlat
cmp
imul
fs
les
pop
cmp
xlat
ret
push
test
inc
mov
or
incb
lds
out
lcall
ja
push
mov
adc
xor
push
rorl
incb
shll
lds
pop
test
call
push
test
mov
arpl
insl
repz
lret
aaa
lods
mov
pushf
aam
jecxz
loope
mov
iret
fwait
xor
xchg
sub
push
fisttps
outsb
in
push
aaa
mov
jg
sarb
inc
lret
add
or
mov
xchg
std
pop
adcl
push
sub
gs
xchg
add
dec
jno
mov
leave
mov
rorb
push
or
push
sbb
daa
push
cld
aas
dec
stos
mov
adcb
xchg
and
adc
push
or
sahf
addr16
rcrb
cmpsb
push
nop
add
mov
int
mov
mov
push
in
scas
xchg
push
mov
and
fisttpll
scas
dec
std
hlt
mov
insl
and
push
and
mov
loop
sub
scas
or
jo
cmp
cmp
andl
lcall
sti
push
and
dec
test
cmc
stc
lods
adc
jo
xlat
xchg
ljmp
mov
mov
testb
out
mov
hlt
stos
in
jg
mov
mov
sub
ss
and
or
push
test
or
fscale
in
fidivrs
xchg
fpatan
xor
inc
inc
push
test
mov
push
xchg
sbb
push
dec
pop
aaa
cmp
fwait
xrelease
les
sub
mov
dec
dec
fnsave
iret
xchg
testl
fxch
adc
out
and
and
jb
inc
iret
imul
jp
dec
or
leave
mov
xlat
imul
push
mov
popa
cmp
xchg
dec
xchg
and
jge
xor
in
cmc
test
sbb
sub
pop
repnz
jmp
ficoml
sub
arpl
shl
inc
lcall
xchg
sub
lahf
fidivl
fidivs
mov
test
sti
mov
xor
sub
mov
cmpsl
adc
mov
push
popa
dec
jns
loopne
push
dec
push
push
lahf
inc
xor
pop
fiaddl
lahf
push
xor
iret
mov
lahf
scas
lods
dec
xor
lods
jo
push
sahf
sbb
sbb
add
sbbl
lret
lds
sbb
lcall
aad
mov
cs
sbb
xor
adc
dec
push
push
ret
in
cmp
pop
out
jmp
push
aam
mov
mov
call
add
jno
pop
adc
sbb
and
jp
sbb
mov
repz
popa
lds
xchg
popf
rcll
rcr
push
mov
in
or
mov
jp
pushl
fsubp
adc
and
pushf
dec
pushf
mov
nopl
stc
arpl
cs
mov
jnp
sbb
pop
push
mov
out
aad
and
lret
insb
ret
xchg
jne
jnp
cmp
movw
leave
fistl
addr16
add
mov
out
push
sahf
aam
rolb
xchg
adc
adc
sbb
loop
pop
xchg
mov
jnp
sub
loop
and
add
mov
sti
lods
mov
int3
inc
sbb
lods
addr16
mov
cld
and
and
mov
lods
in
leave
or
dec
push
adc
sub
mov
cwtl
xchg
push
psrlw
push
push
aam
adcl
xchg
cmpsl
shl
int
mov
aam
insb
sub
and
and
push
push
inc
std
or
dec
or
jbe
movsl
in
js
mov
pop
sbb
cmpsb
push
mov
sub
stc
push
mov
rcrb
cs
lahf
test
call
add
lods
jg
ja
xor
pusha
inc
fwait
rep
xor
mov
xchg
sahf
pop
push
and
popa
sbb
dec
hlt
add
push
xor
adc
jmp
incl
fcmovne
jl
sahf
adc
push
sub
rorl
or
cs
arpl
mov
ljmp
ljmp
xor
loope
pop
leave
jnp
jecxz
adc
jnp
cmpsb
adc
fwait
jns
cltd
jb
outsl
dec
arpl
dec
fbld
sub
fincstp
jnp
cmc
push
cmpb
mov
or
jl
adc
movsb
mov
sbb
mov
jle
adc
sub
inc
push
mov
xchg
gs
sub
push
add
inc
hlt
out
sub
and
aaa
iret
mov
insl
pop
inc
lods
dec
sbb
cmp
vcvttsd2si
xchg
mov
aas
lods
xor
add
mov
mov
mov
xor
add
in
ds
adc
fwait
rcrl
test
sbb
sub
pushf
out
rcrb
imull
sub
pusha
fdivp
stos
neg
bound
stos
push
ljmp
test
movsl
and
sti
lret
insl
cmp
push
push
pop
ss
xor
out
jp
pusha
mov
fadd
cmp
adc
lahf
or
mov
neg
ds
add
ljmp
push
mov
inc
inc
dec
ror
sbb
jmp
inc
mov
fwait
test
fs
into
ss
or
inc
xorb
jne
mov
out
mov
dec
insl
popf
push
sbb
or
inc
or
cmp
add
arpl
push
pop
mov
pop
or
jnp
das
aam
pop
mov
jecxz,pn
mov
test
mov
shr
ret
mov
xlat
or
inc
dec
jb
jcxz
mov
pop
mov
mov
or
adc
xor
dec
in
popf
sub
push
xor
fcomps
dec
adc
and
in
in
ja
fcoml
pop
imul
sahf
jg
addb
iret
cmpsb
mov
call
inc
adc
dec
push
cli
pop
scas
pop
rcl
imul
outsb
out
xchg
add
jno
jmp
leave
rcl
xor
push
js
sbb
push
jnp
ficoms
in
lcall
push
fnsave
pop
jbe
adc
xchg
adc
aad
icebp
sub
aaa
dec
imul
adc
fbld
jnp
aad
icebp
mov
popl
pushf
pusha
mov
jge
pop
iret
push
jl
mov
push
and
sub
fwait
rorl
es
pushf
pop
fdivr
ret
into
and
xor
mov
rol
outsb
adcl
insb
pop
fs
push
insb
inc
sbb
push
push
mov
and
sbb
cli
in
sbb
and
push
jb
xchg
adc
int
jmp
addb
rcl
sub
aam
xor
cs
jo
rclb
sub
sub
pop
sbb
ret
ftst
pop
sub
loop
gs
sbb
test
adc
jl
push
nop
xchg
and
jle
xor
jecxz
ljmp
and
pop
pop
sarl
repz
pop
and
imul
insl
arpl
scas
scas
add
cs
mov
sbb
push
jecxz
xor
fisubl
mov
je
out
rorl
pop
daa
in
jp
adc
sbb
addr16
adc
jae
cmpsb
jae
in
pop
addr16
out
mov
mov
out
jl
ret
or
cmp
idivl
or
adc
dec
shl
jns
shll
lret
mov
scas
jns
cmc
aad
mov
and
or
xor
or
outsb
or
orb
jns
je
sub
leave
js
lods
xor
imul
pop
dec
dec
pushf
inc
push
insb
icebp
fdivrl
test
insl
bound
adc
aam
jecxz
inc
mov
out
jnp
inc
push
push
insl
adc
test
lcall
sbb
scas
jo
xchg
xor
add
pop
mov
inc
mov
dec
out
aaa
push
popa
mov
shl
pop
cltd
lods
xor
jmp
mov
mov
insl
cmpsl
fs
pop
loope
cmp
jecxz
mov
sub
mov
jle
or
xchg
push
and
sub
jge
and
push
pop
jl
fisttpl
out
sub
and
sbb
adc
adc
push
fwait
mov
inc
or
pop
or
out
xor
pushf
inc
dec
in
scas
jg
and
cmp
add
popf
jae
push
mov
gs
mov
icebp
xlat
adc
xor
insb
dec
cmp
inc
imul
and
stos
and
dec
mov
scas
sbb
bnd
xor
test
dec
adc
into
push
add
inc
mov
mov
push
dec
dec
int
aad
xchg
cmp
add
imulb
xlat
inc
scas
scas
and
insl
xchg
cmpsb
xor
leave
fidivs
loop
push
loop
or
imul
into
xchg
mov
insl
cmp
insb
out
outsb
sahf
sub
pop
push
in
fwait
jecxz
ljmp
repz
lret
add
lds
add
fwait
je
push
dec
aaa
inc
xchg
lds
add
sbb
popa
fadds
repnz
lds
pop
cs
or
rcrb
mov
xchg
dec
cltd
jle
add
test
addb
aas
imul
xor
adc
xor
into
jge
in
fsubrp
xor
xchg
sub
cmc
loop
add
mov
adc
fcomps
imul
pop
outsb
pop
jo
inc
and
dec
mov
rcl
and
sbb
and
cs
cmpsb
pop
pusha
mov
pop
pop
mov
push
push
adc
test
push
mov
aad
and
mov
dec
loop
mov
mov
test
jle
dec
inc
fdivrs
cwtl
inc
fcoml
out
push
mov
loope
out
stos
fnsave
fstp
cltd
cld
or
bound
shlb
or
aaa
test
push
arpl
jg
sub
xchg
lods
cmp
sub
push
mov
dec
movsl
mov
out
loop
push
movsb
inc
xor
pop
mov
out
aaa
test
aas
ja
out
insl
mov
mov
sub
mov
adc
inc
mov
cwtl
lcall
mulb
addr16
adc
lods
xor
lahf
arpl
inc
pop
xor
mov
push
scas
popf
clc
ds
into
lods
push
nop
sti
mov
mov
insb
stc
dec
mov
sub
stc
lcall
inc
mov
adc
push
adc
or
and
imul
dec
mov
fiaddl
js
pop
cmpsl
push
iret
mov
jmp
sub
sub
js
sub
loop
das
mov
mov
cmp
mov
jbe
aaa
aaa
sub
call
orl
outsl
mov
ljmp
hlt
stos
bound
fsubs
pop
das
int3
pop
nop
out
jae
pop
sub
sub
mov
scas
push
repnz
rcl
jbe
adcl
cld
xchg
xlat
shlb
mov
jge
popa
jno
decl
xchg
and
in
mov
jns
push
mov
add
sahf
shrl
orb
int3
dec
inc
leave
mov
jbe
mov
push
dec
fcoms
std
cmpsl
pop
ja
cmp
in
hlt
loopne
or
imul
ljmp
mov
xor
arpl
ja
loope
test
and
dec
sbb
lret
or
pop
pop
in
mov
or
cmp
les
out
mov
xchg
cmp
mov
mov
xchg
test
or
and
pop
mov
fistps
pop
push
mov
pop
dec
inc
and
cld
xchg
loopne
xchg
pop
mov
mov
stos
jne
loop
adc
out
sub
push
or
and
cmp
xchg
filds
xor
and
and
adc
push
gs
push
in
aas
insb
mov
mov
xlat
jle
and
stc
jmp
addb
in
pop
sbb
jmp
test
jecxz
gs
and
or
xchg
hlt
cmpsl
ficoml
and
scas
mov
and
xor
cs
movsb
dec
mov
fidivs
mov
dec
add
pop
aam
lret
mov
lret
and
lcall
test
orl
aaa
cmpl
in
push
fcomp
push
xchg
imul
jnp
xor
stos
icebp
in
sarb
push
adc
adc
call
js
into
adc
xor
pusha
outsl
dec
popl
sbb
xchg
arpl
xor
out
jle
js
sti
outsb
lods
mov
push
repnz
push
sbb
dec
cmp
lds
rorb
in
rcll
sub
out
add
fmul
sarl
dec
movsb
das
bound
adc
fisttpl
loope
fdivl
pop
dec
data16
push
pop
pop
test
and
pop
add
sbb
dec
dec
cmpb
push
loope
cmp
popf
mov
dec
cs
jne
push
pop
mov
cli
insb
repz
lods
push
jle
dec
lret
aad
push
pusha
mov
and
jno
cmp
mov
xchg
adc
fsubl
and
or
jb
jmp
sbb
mov
fcomps
sbb
lcallw
js
daa
movsb
ds
or
divl
pop
push
stc
repnz
movb
mov
sub
jae
imul
pusha
fnstsw
sbb
cmc
mov
sahf
hlt
sbb
mov
popf
pop
insl
and
ljmp
repnz
mov
fcomps
jbe
inc
sbb
test
outsb
lock
flds
mov
and
je
sahf
push
scas
push
bound
xchg
ficomps
dec
xchg
aas
xor
out
aad
ja
hlt
leave
sbb
repz
add
stos
and
push
inc
dec
dec
scas
insl
ss
popa
push
push
mov
jge
cld
xchg
xor
jae
inc
sbb
addr16
fimull
outsb
mov
aad
jecxz
imulb
add
pop
bound
clc
mov
cmc
xor
pop
mov
mov
pop
mov
lds
sub
or
ficoms
mov
xchg
cmp
mov
pmulhw
clc
and
pop
adc
xor
mov
idivl
repnz
pop
clc
pushf
sub
outsb
mov
push
jge
push
and
sti
adc
ja
or
xchg
mov
aam
incl
sub
out
push
stos
jl
mov
add
lret
sub
push
sbb
dec
mov
pop
or
bound
ljmp
jnp
pop
sti
push
cmp
dec
mov
aas
cli
and
push
mov
jo
pop
sub
adc
and
mov
dec
xchg
fldl
inc
sbb
jno
or
cmp
mov
lds
gs
repnz
mov
inc
mov
aad
xchg
jge
sub
mov
lahf
push
xlat
push
sub
mov
push
mov
inc
inc
push
xchg
xchg
sahf
aam
movsb
mov
cltd
xor
fnstenv
push
subb
xor
idiv
sti
jbe
scas
pop
xchg
add
out
shr
enter
push
cmp
faddl
cmp
addr16
dec
xor
push
sub
mov
inc
pop
cli
out
mov
push
xchg
aaa
mov
je
sub
pop
cltd
push
mov
pusha
incl
fsubrs
jmp
inc
mov
pop
lds
out
rcll
movsl
aaa
movsb
push
cmp
imul
hlt
xor
pop
add
dec
mov
addr16
out
adc
push
test
add
je
mov
loop
cs
xchg
shr
mov
lea
jle
or
les
shll
xor
and
cwtl
jmp
inc
cld
add
sub
cmc
in
mov
push
push
mov
mov
adc
les
insl
xor
lcall
mov
cmp
out
in
push
inc
push
fiaddl
negl
fmul
imul
call
cmp
jb
addr16
imul
aad
jnp
push
fwait
cmp
inc
xor
xchg
and
mov
sti
pusha
adc
orl
fwait
out
cmp
cmp
sub
push
mov
add
lahf
mov
test
and
dec
and
pop
xchg
mov
or
addr16
lods
adcb
imul
loopne
mov
das
xor
inc
cmp
inc
test
xlat
je
sub
cs
pop
sbb
xor
popf
test
xorl
frstor
imul
ja
inc
or
and
xchg
pusha
int3
push
jbe
mov
ds
jl
les
pop
ficoms
in
jbe
push
push
cmp
pop
and
loopne
lods
dec
out
mov
and
rorl
push
xorl
jmp
pop
popf
and
jo
int3
mov
cmpsl
push
lea
add
das
gs
and
pop
lods
push
inc
add
mov
mov
inc
mov
pop
loop
movsl
roll
push
ljmp
cld
sar
inc
sub
popa
and
sarl
pop
movsl
cs
aas
sub
mov
leave
inc
jmp
jmp
jecxz
fwait
out
pop
cmp
mov
xor
adc
cmp
enter
insb
add
pushf
ljmp
lcall
out
into
insl
cmpsl
iret
jge
fiaddl
inc
sbb
int3
xchg
mov
cld
mov
mov
xchg
mov
outsl
mov
sub
jne
jp
mov
js
mov
push
xchg
sub
cmpsb
cli
into
addr16
dec
mov
mov
mov
jp
sti
xor
lods
clc
arpl
mov
pop
cltd
ljmp
lret
dec
jno
cmpsl
dec
dec
lods
and
or
pop
sbb
mov
in
test
sub
push
lret
sahf
test
adc
insl
enter
loop
lds
inc
data16
stos
inc
ja
jecxz
dec
push
jle
pop
iret
loopne
jge
inc
subl
mov
xchg
jmp
into
adc
jo
in
cmp
cli
or
adc
and
pop
aam
cmc
scas
and
and
sbb
fwait
mov
mov
sub
or
mov
xor
jb
push
int3
sub
sub
mov
sbb
mov
mov
rclb
call
xlat
push
sbb
rcrl
pop
mov
ja
xchg
stc
int
or
cwtl
push
push
mov
mov
jbe
mov
or
es
xchg
xchg
mov
mov
out
push
es
stos
adc
pushf
lds
inc
pop
sti
xchg
and
sahf
arpl
aas
mov
nop
push
outsb
mov
add
adc
ljmp
push
or
jns
xor
xchg
pop
xlat
or
xchg
xchg
push
fidivrl
faddl
adcb
bound
arpl
cwtl
adc
jne
jnp
ja
test
dec
pop
inc
subb
jl
ret
push
frstor
fs
pop
jns
push
iret
or
aad
jo
aas
and
or
xlat
adc
lds
ja
lods
inc
and
cwtl
or
fld
outsl
addr16
cmpsl
inc
ret
mov
dec
jmp
out
adc
cmc
in
xchg
or
pusha
sbb
mov
addr16
xchg
in
call
addl
fisubrs
add
inc
jnp
leave
cmp
dec
popa
xchg
outsb
jl
leave
fmul
stos
mov
cmpsl
cmp
jno
lock
dec
cmp
jmp
and
popf
inc
sub
jae
inc
jecxz
js
push
sbb
stc
negb
data16
pop
hlt
inc
sub
enter
call
cs
and
sahf
enter
pop
std
mov
add
push
jnp
sub
mov
mov
mov
int3
cmp
adc
push
clc
push
xor
cli
ficoml
mov
pop
sbb
mov
fsubs
js
push
cs
pop
cmp
lcall
sarl
repnz
fisubrs
in
call
sub
pop
stos
int3
or
loopne
pop
aas
sub
sti
out
xchg
pop
dec
inc
not
mov
mov
cld
xchg
movsl
or
lahf
pop
jmp
out
jo
ljmp
clc
and
test
sbb
add
addr16
pop
mulb
inc
int3
sbb
jmp
imul
mov
xchg
pop
fs
or
pop
js
mov
mov
inc
sub
mov
mov
fldt
je
add
ja
flds
mov
pop
mov
jo
in
andb
jl
out
int
imul
aas
or
lahf
pop
jl
mov
mov
add
cwtl
ret
cmc
lock
inc
jbe
or
sbb
lret
mov
push
test
fisttpll
int
lret
ss
cld
mov
cmpsb
push
test
xchg
sbb
mov
and
dec
and
ret
dec
sbb
push
xchg
or
sbb
xchg
push
fiaddl
daa
das
adc
mov
sbb
aaa
dec
pop
aas
push
test
xchg
sbb
dec
mov
jmp
fbstp
sub
xor
icebp
fidivl
fs
xchg
out
movsb
mov
fldenv
rcll
xchg
std
xchg
xor
sub
mov
xlat
ds
pop
cmpsl
push
and
lods
jl
test
aam
and
filds
and
pop
push
or
stos
fiadds
aaa
das
and
mov
les
and
mov
jo
adc
pop
movsb
pop
xchg
int
rcr
mov
or
push
sbb
loope
lret
dec
jnp
andl
leave
fiaddl
int3
push
fdivrp
mov
std
pop
xchg
arpl
mov
sbb
mov
rcrb
fnsave
aam
mov
mov
adc
jne
xchg
pop
xor
int3
js
sbb
repz
xchg
pushf
testb
mov
mov
subb
jg
push
mov
push
lods
mov
shr
and
mov
int
cmc
lods
or
xor
jbe
fnsave
insb
adc
call
insl
das
or
in
fstpt
out
mov
cmp
sti
addps
jnp
push
jmp
fistl
fstl
in
add
fsubl
sub
cs
pop
cmpsl
ss
in
sarb
leave
sbb
and
add
push
jnp
cltd
scas
mov
mov
aam
jno
stos
out
aam
rcrb
sub
cmp
ljmp
xor
sub
jbe
and
adc
daa
ja
push
jmp
sbb
mov
pop
cmp
fwait
or
shrl
pop
sbb
pop
mov
into
addr16
adc
out
aad
pop
rcrb
mov
fisubl
stc
push
lods
or
xchg
inc
repz
lods
pusha
jae
push
push
push
pop
mov
scas
jne
push
jmp
shlb
inc
es
mov
pop
adc
ja
shll
or
sbb
pushf
nop
and
fnstcw
mov
xchg
jge
xchg
outsb
inc
or
inc
insb
xor
and
repnz
aaa
ss
sub
addl
enter
dec
inc
andb
testb
inc
ret
sbb
nop
adc
mov
cmp
fiadds
sbb
sbb
xor
push
jmp
cli
jge
xchg
xlat
int3
into
dec
ja
pusha
mov
loopne
daa
pop
pop
push
jmp
mov
shrd
xor
movsb
bound
jae
push
cmpsl
cmp
sbb
pop
rclb
xchg
in
outsb
clc
mov
mov
add
insb
pop
aas
addr16
sbb
jmp
enter
add
jae
outsb
addr16
xchg
mov
cmp
outsl
mov
sti
pop
add
xchg
fcmovb
fdivrs
repz
ds
subb
and
adc
pop
aas
push
and
pop
fcmovne
flds
int
cmpsl
sti
mov
enter
pop
incb
nop
push
add
loop
sub
leave
into
pop
sub
int
out
imul
mov
test
pop
hlt
inc
xchg
outsl
mov
xor
or
shrl
mov
stc
test
jl
insl
jo
sub
or
cmp
int3
pusha
cwtl
push
movsl
jle
and
rcll
shll
xor
loopne
enter
mov
push
andb
shrl
cwtl
adc
sub
inc
xor
test
popf
lea
and
dec
xorl
mov
xlat
cld
jno
add
sbb
adc
stos
rclb
inc
fxch
jno
pop
xchg
lret
test
and
movsb
test
dec
stos
pop
ret
popa
mov
push
or
mov
int3
cmp
adc
mov
pop
cmp
and
clc
sub
dec
fiadds
xchg
popf
inc
lds
popa
les
xlat
fnsave
insl
imul
out
jp
std
cmpsb
rcrb
call
aad
fcomi
sub
movsb
pop
xchg
cmpsb
inc
pop
icebp
loop
pop
and
aam
aam
insl
cmp
inc
cld
cli
xor
popf
into
add
repnz
pop
and
and
or
clc
das
mov
pop
getsec
in
test
jge
inc
addr16
sarb
push
ficomps
mov
fsubs
cmp
sahf
mov
and
and
add
mov
push
inc
mov
dec
jae
rcr
es
loop
dec
inc
mov
in
cmc
xlat
sub
inc
test
pop
sbb
inc
jge
mov
or
test
xor
sub
jne
push
or
cwtl
bnd
dec
in
loop
ret
ljmp
mov
outsl
inc
mov
ffreep
push
arpl
xor
aad
nop
loop
pop
negl
movsb
in
jl
mov
fstpl
xchg
shrb
jo
pop
inc
adc
inc
fistpl
enter
je
insb
iret
cmp
cmp
outsb
lods
mov
das
cmp
sbb
icebp
movl
mov
xchg
xor
push
lahf
or
cld
sub
mov
push
sarb
jle
insb
sub
push
mov
push
sbb
or
jne
cld
pop
jge
dec
in
cmp
mov
and
repz
mov
add
jmp
arpl
pop
imul
jl
cmpsb
arpl
jmp
cmp
jae
repz
enter
jae
fsubrl
ss
sbb
enter
add
mov
and
jle
add
add
adcl
lret
aad
jg
jecxz
cmp
les
fiadds
icebp
xlat
and
inc
mov
fldt
sti
movsl
mov
dec
in
mov
loopne
inc
loopne,pt
cmpb
imul
xor
dec
lret
ret
sbb
loop
repz
push
pop
xlat
mov
dec
outsb
push
sbb
shlb
and
mov
push
das
dec
inc
cmp
mov
sbb
fbld
xlat
inc
cmc
in
add
jbe
dec
cwtl
push
cmc
cli
adc
out
popa
imul
mov
addl
and
inc
sti
test
mov
daa
ja
adc
add
mov
push
in
push
mov
nop
orl
sbb
add
sahf
hlt
dec
jns
xor
sahf
cmpsb
sahf
sahf
push
pop
mov
stc
push
arpl
and
cli
xchg
inc
hlt
and
mov
imul
mov
cltd
xchg
add
jecxz
cs
xchg
call
push
cmp
add
jle
into
imul
mov
in
fldenv
les
push
mov
and
in
xor
inc
shlb
sbbb
xchg
jae
out
arpl
dec
and
sahf
rorb
test
jecxz
fbld
outsb
scas
cmpsb
sti
pop
xabort
push
ret
fstpt
fdivrp
add
pop
mov
into
sbb
bound
mov
imul
movsb
sarl
std
sbb
test
or
push
or
lcall
lods
push
repnz
int3
xlat
repz
or
cmpsl
add
mov
call
movb
pop
xchg
insl
inc
inc
push
orl
jmp
mov
cmp
les
scas
lcall
das
fistpll
inc
cwtl
into
imul
loope
mov
xchg
in
inc
adc
mov
das
mov
inc
xchg
roll
jns
pop
pop
add
xchg
adc
mov
cmp
cmpl
rol
mov
add
das
mov
movsb
inc
xchg
stos
ret
das
mov
enter
arpl
in
xor
pusha
mov
arpl
aaa
adcb
icebp
fimuls
pop
movsl
sbb
lds
enter
xchg
std
rclb
sub
test
nop
pop
pop
mov
pop
into
jo
sub
or
cmp
mov
xchg
imul
mov
clc
and
nop
cmp
mov
sub
shll
adc
js
xchg
insl
inc
lds
mov
popf
fwait
pusha
sbb
shrb
insl
std
adc
inc
int
loopew
aas
icebp
shrl
mov
jo
add
mov
insl
repnz
lods
add
scas
cmp
push
jge
push
mov
xrelease
adc
dec
mov
and
mov
add
and
fdivl
int3
mov
xchg
xor
and
mov
mov
sbb
bound
xlat
cmc
xor
pop
aas
dec
mov
mov
dec
scas
xor
data16
jae
dec
lret
inc
sti
sbb
jo
push
adc
xor
jp
std
aad
decl
dec
inc
cmp
mov
ss
pop
sub
mov
xchg
cli
xchg
add
repnz
fimull
sbb
imul
pop
dec
add
lea
rol
or
jbe
ljmp
pop
xchg
fld
inc
adc
mov
add
ret
mov
test
insb
test
jmp
and
fldl
enter
loope
jmp
iret
aam
les
push
out
or
push
in
push
sbb
xor
xchg
call
and
rorb
push
sub
add
xchg
ds
cmp
mov
repnz
xchg
push
add
or
and
sti
lcall
jae
and
pushf
addr16
repnz
xchg
fdivrl
xor
cwtl
test
sbb
xchg
fldt
cld
cld
enter
shr
mov
loop
sbb
mov
sub
pop
and
outsb
mov
xchg
cmpsb
pop
sbb
sbb
mov
and
divl
sub
cltd
popa
pop
or
sub
mov
pop
push
insl
repz
push
icebp
stc
push
xchg
inc
cld
pop
pop
and
movsl
cmp
jge
jb
fsubrp
test
movb
inc
stos
sub
sti
and
pop
bound
or
adc
call
cmc
sub
imul
insb
repz
push
xlat
xlat
cmp
pop
in
pushf
and
into
push
add
mov
dec
mov
ret
movsb
add
cwtl
mov
cmp
ret
add
pushf
xchg
adc
sbb
shll
adc
dec
fnstenv
mov
dec
rorl
push
pop
fs
sbb
mov
lods
adc
mov
adc
sbb
push
mov
mov
jno
cmp
push
sbb
fst
cwtl
and
cmp
and
adc
sub
sti
ss
ror
push
pop
push
lods
and
fstpl
test
cmpsb
mov
xchg
mov
inc
outsb
jne
jnp
mov
in
hlt
sbb
js
hlt
mov
mov
dec
inc
jno
xchg
andb
cltd
pop
xor
ficoms
scas
loop
cmp
jl
inc
dec
xlat
fidivrs
sarb
imul
lods
ss
xchg
fnstenv
add
popa
or
lcallw
int
mov
call
mov
dec
test
sub
xchg
loop
out
xchg
cmp
xor
rorl
dec
ret
roll
mov
push
pop
lcall
into
mov
fnstenv
mov
sbb
sar
xchg
sub
scas
sub
sbb
fldl
push
xchg
int
in
cmp
dec
enter
cli
and
cmpsl
xchg
fsubrl
mov
aas
jge
sahf
or
mov
daa
xchg
lds
ljmp
test
add
inc
sbb
jns
mov
inc
icebp
cs
popf
fdivs
adc
add
jl
je
lret
xlat
es
cmp
shrb
cld
push
test
cmpsl
add
leave
repz
cmp
repz
inc
fsqrt
sti
push
dec
pop
jno
lret
mov
xlat
push
jecxz,pn
cli
mov
notb
mov
popf
adc
pop
sbb
into
mov
jecxz
jne
fcmovne
rorl
add
jle
js
fucomip
add
test
jecxz
mov
xchg
repnz
push
gs
pop
arpl
mov
aaa
pop
shrb
jae
lds
xlat
int3
pop
das
dec
lods
cmp
enter
cltd
sbb
pop
inc
jbe
test
cwtl
mov
dec
scas
adc
cmp
jecxz
or
mov
leave
mov
decb
andb
mov
sub
cmc
adc
push
cmpsb
push
fsub
aad
cwtl
push
and
mov
mov
shr
in
scas
add
int
test
mov
xchg
icebp
or
jno
dec
pop
out
add
into
mov
mov
ror
inc
xor
xor
scas
jmp
xchg
mov
xor
push
and
test
push
test
xor
sbb
call
mov
into
and
pop
xchg
rorl
push
xor
sahf
loopne
jmp
mov
pusha
daa
xchg
bound
popa
mov
jo
adc
lcall
mov
fldpi
jbe
sbb
sti
pop
fisubl
xchg
pusha
out
test
sub
je
into
add
cli
insb
mov
addr16
mov
pushf
mov
inc
dec
inc
push
test
jnp
stc
pop
or
cmp
insb
sbb
daa
and
lds
aad
jmp
push
pusha
xchg
lret
fadds
cmp
mov
xor
xor
stc
or
pusha
cmp
dec
cld
pusha
jge
pop
sbb
jo
push
mov
add
sub
mov
lahf
xlat
lds
int
pop
fnstsw
cmpl
xchg
cld
shl
pop
inc
inc
pop
cltd
push
pop
jge
sbb
mov
out
push
jp
xlat
or
xchg
cmp
es
cmp
aaa
sub
movsb
cmp
sbb
xor
add
jb
mov
addl
fldenv
and
xchg
test
xchg
cwtl
mov
push
mov
dec
das
fmull
pop
pop
add
data16
std
jmp
test
pop
xor
sub
repnz
cli
mov
adc
dec
and
sub
outsl
sbbb
lods
or
adc
cmp
loop
cli
lods
cli
outsl
test
jo
xor
mov
and
or
pusha
sub
pop
insl
fbstp
add
ret
mov
popf
fs
mov
sbb
jno
addr16
and
inc
xchg
mov
add
pop
push
add
testb
ss
loope
xchg
mov
xlat
pop
ret
notb
pop
mov
test
les
faddp
leave
popa
in
shlb
dec
sbb
pusha
loop
push
test
push
push
cmc
lds
xchg
mov
and
cmp
mov
ja
movsb
xchg
cmp
mov
fbld
pop
jns
test
in
pop
cmc
in
or
out
fwait
jp
sbb
or
test
adc
shll
xchg
adc
ret
cmpsl
repz
and
in
jle
xchg
sbb
sbb
mov
out
or
xchg
arpl
push
scas
icebp
mov
push
jo
popa
mov
cmp
push
sbb
in
cmc
dec
mov
clc
pop
mov
xlat
inc
leave
clc
jmp
and
xor
jno
jge
repz
aam
imul
stos
fsubp
xlat
fs
subl
mov
add
lret
cs
std
mov
push
sarl
adc
dec
push
mov
jns
scas
lea
std
cmp
pop
ficompl
push
and
mov
shlb
iret
push
bound
hlt
mov
sbb
xor
dec
adcl
repz
cmp
inc
addb
repnz
lahf
dec
jp
nop
dec
int
in
out
bound
and
cs
inc
add
adc
push
jecxz
xlat
dec
gs
mov
xchg
xchg
shrb
stos
mov
xchg
mov
dec
add
iret
mov
pop
jg
adc
addb
add
pop
mov
add
repnz
hlt
in
sub
gs
lret
mov
cmpsl
aam
xchg
idivl
cmp
mov
out
xchg
fcmovnb
repz
pop
inc
mov
hlt
jns
es
andl
xor
mov
mov
pop
push
stos
jae
shl
arpl
lret
jae
pusha
in
loop
scas
or
jp
add
pusha
mov
movsb
sub
out
orb
mov
and
imul
inc
arpl
cmpsl
in
pop
add
push
cltd
icebp
scas
dec
movsl
or
aad
jnp
lahf
xchg
inc
mov
and
test
aam
sub
je
jp
xor
push
das
pinsrw
in
add
mov
adc
add
xor
in
adc
and
or
cmp
iret
sbb
insb
mov
cmp
mov
ret
push
ds
mov
out
mov
dec
aam
mov
push
js
cs
outsb
mov
mov
clc
and
daa
pop
inc
imul
jecxz
sti
mov
idiv
imul
dec
lea
or
std
pop
stc
mov
out
shl
cltd
pop
outsb
movsb
out
dec
sub
imul
push
mov
pop
inc
out
ret
xchg
scas
out
into
xchg
mov
mov
out
mov
add
or
or
cmp
sbb
add
fldl2t
and
xchg
jns
outsl
insb
mov
cld
ficoml
pop
aas
je
sbb
mov
mov
xor
das
cltd
sub
and
aas
sub
jns
jb
xorl
sub
rorl
dec
mov
out
cmpb
test
ljmp
xor
inc
dec
andl
fimuls
sub
aad
int3
and
cmp
shl
js
and
add
enter
dec
fwait
add
movsl
inc
insb
dec
ret
inc
fsubl
scas
std
inc
cli
or
pusha
push
aaa
cmpsl
ja
inc
cli
or
rsqrtps
aam
sub
push
cmpsb
scas
pop
iret
out
pop
call
test
hlt
scas
sub
pop
dec
xor
test
mov
leave
in
js
stos
adc
sbb
and
lahf
jecxz
xchg
fsubl
xor
xchg
dec
scas
inc
cmp
sub
ret
xlat
es
cmp
insl
xchg
hlt
xchg
shl
imul
sub
idivl
insb
idivb
fstl
aad
mov
dec
dec
jo
mov
cli
js
push
cmpsb
push
and
adc
fwait
je
push
rclb
ficoms
outsl
xchg
and
iret
fwait
aad
dec
mov
std
mov
es
mull
jbe
pop
mov
adc
add
ret
inc
lods
addr16
mov
psubb
iret
sub
jg
jae
out
pushf
add
mov
xchg
push
push
sub
jmp
cmp
mov
enter
add
and
dec
inc
repz
lock
pop
xor
xadd
loop
jp
cmp
adcl
sbb
lahf
popa
or
inc
stc
push
lahf
pop
imul
ds
iret
push
enter
lret
in
jmp
or
pusha
pop
push
sub
ljmp
dec
stos
popa
leave
pop
pop
push
fsubrs
mov
xchg
das
negb
test
push
mov
fistpl
dec
popa
add
jno
adc
xchg
popf
jg
dec
int
dec
pop
xchg
adc
cs
fisubrs
xchg
xlat
cmpsb
sub
mov
mov
jbe
adc
push
pop
loopne
sub
into
xor
movsl
loopne
stos
xchg
cmp
push
das
rcl
xor
sbb
inc
and
jns
aam
repnz
fiadds
je
ret
int3
imul
mov
add
push
es
sarl
in
int
testl
rorb
neg
mov
mov
xchg
xchg
xchg
movsl
xor
sbb
mov
xor
cmpsl
lods
cmp
fbld
into
cmp
xchg
in
js
insb
dec
xor
cmp
out
adc
adc
fimull
mov
or
ja
ret
fs
or
icebp
inc
sub
roll
icebp
cwtl
or
jge
popa
int3
mov
inc
test
stos
mov
lret
std
das
cmp
inc
test
xor
hlt
jbe
inc
push
arpl
dec
fistps
lock
ja
inc
push
stos
daa
jne
or
popa
jne
call
inc
xor
fistl
enter
int
ljmp
in
and
cmc
jae
dec
cmp
sti
mov
push
pop
adc
push
insb
cmp
mov
dec
aad
sub
xchg
pushf
clc
mov
inc
push
cmpsl
dec
pop
jge
push
insb
icebp
push
repz
iret
mov
sub
mov
xchg
lock
and
cmpsb
hlt
imul
pop
gs
push
xchg
aaa
mov
mov
jecxz
mov
adc
lahf
lea
orl
push
mov
es
scas
mov
repnz
sarl
out
loopne
cmp
mov
ss
mov
or
test
stos
push
divb
popa
push
shrb
mov
fimull
cmp
cmp
xchg
bound
xchg
sbb
cld
xchg
imul
push
mov
outsl
jle
scas
addr16
push
xchg
and
xchg
xchg
dec
pop
test
lds
std
test
icebp
pop
xchg
in
fs
jb
movsl
jecxz
std
cmp
inc
xor
mov
inc
inc
pop
fwait
rolb
mov
mov
in
mov
ss
lret
xor
fiadds
fistpll
push
xor
jp
stos
inc
jl
xchg
inc
lds
lods
ret
mov
rcll
das
xor
xor
pop
sbb
mov
xlat
das
mov
xchg
out
fcoms
icebp
rclb
das
test
mov
mov
data16
jmp
or
xchg
jmp
jmp
jae
jne
xor
inc
push
pop
pop
in
lods
xor
out
cmp
mov
jecxz
flds
push
in
je
mov
jo
imul
push
enter
addr16
jg
pop
aas
cmp
lret
loop
lret
into
cmp
push
jno
fcmove
les
inc
jno
iret
cmp
add
jg
pop
mull
jecxz
push
js
lods
jne
or
pop
cmp
sub
pop
or
icebp
lods
inc
cmc
cs
scas
cwtl
inc
addl
mov
fdivrs
push
dec
sbb
jae
cmp
out
push
cmp
mov
fbld
pop
push
jae
ja
test
outsb
pop
mov
adc
mov
or
jo
jno
mov
hlt
dec
adc
dec
orb
int
stc
pop
jne
shrb
cmp
aad
popf
gs
and
iret
sbb
cld
hlt
shlb
pop
es
sti
jmp
push
or
in
mov
xchg
push
cs
pop
dec
leave
pop
sahf
mov
mov
and
scas
inc
insl
mov
or
jecxz
test
sub
or
adc
and
dec
sbb
lds
sub
movsl
je
push
cmpsl
inc
int3
mov
int3
mov
jbe
mov
nop
and
mov
cmp
sub
jb
add
push
lcall
shl
jns
or
push
addr16
jecxz
cmc
or
sub
xor
and
xor
jge
mov
sarl
inc
repz
xchg
pop
inc
adc
pop
movsl
jl
pop
pop
add
lock
scas
test
cmp
or
cmpb
int
mov
inc
and
jl
insb
dec
sbb
or
das
cmp
outsb
imul
movsb
fnstsw
cs
ss
int3
push
repnz
mov
cmp
push
lds
mov
pusha
xchg
das
jecxz
push
jb
popf
inc
inc
push
xor
mov
mov
push
test
pop
out
mov
je
fstpl
sub
popf
xchg
mov
jmp
sub
push
xor
icebp
shl
pop
pop
cmpsb
cmpsl
jae
push
mov
fwait
cli
add
mov
sti
mov
dec
add
mov
std
adc
mov
in
cmp
sti
add
in
rorl
lds
and
cltd
sbb
fisttpll
in
fcoml
popf
push
add
or
in
pop
das
rorb
mov
mov
sbb
push
ret
mov
loopne
and
inc
push
jecxz
in
aas
or
sbb
ficompl
inc
cmp
imul
jge
idivl
xchg
hlt
leave
pop
mov
imul
cwtl
jne
push
xchg
and
sub
mov
fnsave
adc
mov
clc
add
xchg
pop
mov
cmc
xchg
pop
lds
push
fwait
mov
sbb
sbb
sahf
xor
pop
fdiv
adc
insb
arpl
jns
xlat
nop
mov
bound
inc
xchg
das
jg
lods
xchg
mov
cmpsl
arpl
cmp
mov
adc
push
xor
cmp
mov
js
jmp
insl
mov
push
cwtl
lea
jnp
xor
xor
sub
ja
sub
lret
and
test
lret
cmc
into
push
push
shll
scas
out
cwtl
mov
or
dec
incl
jl
mov
xchg
xor
icebp
xor
sbb
leave
cmpsl
pop
fstps
cwtl
dec
jmp
jecxz
cmp
frstor
mov
pop
sbb
sbb
js
xchg
push
mov
jge
fwait
cmpsb
mov
mov
pop
and
lret
divl
cwtl
cmc
and
cmp
rcr
jg
mov
iret
les
std
sub
xlat
sbb
jb
sbb
mov
data16
sarb
add
cmpsb
leave
add
fwait
in
in
push
bound
pop
push
imul
mov
mov
pop
test
push
cmp
or
jg
in
sub
xchg
es
and
cmp
les
cwtl
hlt
xchg
and
xchg
mov
lds
in
popw
cmp
sbbl
add
mov
and
outsl
and
int
sahf
outsl
hlt
and
sbb
inc
mov
jl
dec
ds
jle
xor
xlat
out
sbb
pop
adc
mov
jp
fs
sahf
push
sbb
test
pushf
andb
sbbl
and
jl
adc
mov
dec
pop
push
jg
cmpsb
xlat
out
sbb
cmp
cmc
mov
lret
lahf
ja
addr16
push
and
xor
xlat
jge
jnp
xchg
loope
daa
mov
daa
and
pop
mov
lahf
pusha
cmp
adc
push
mov
pop
fistpll
inc
out
sub
xor
shr
add
iret
or
lea
out
cmp
ret
in
ret
cmp
popf
xor
std
xchg
mov
dec
cmp
inc
sbb
fcomps
xchg
or
xchg
fisubrl
aam
shrb
sbb
rcrb
gs
or
jbe
sub
in
or
xchg
push
sub
in
pusha
xlat
shll
sub
push
sbb
push
adc
inc
das
jecxz
outsl
lahf
lahf
pop
in
cmpsl
inc
pusha
xor
popa
rcl
or
hlt
push
mov
js
and
pop
mov
pop
clc
stos
testb
add
dec
jg
mov
xlat
rcrb
insl
pop
jb
cmp
push
decb
iret
movsb
cli
daa
sbb
testl
dec
aas
movsl
test
adc
xchg
repnz
xchg
xlat
out
mov
dec
lods
mov
xor
dec
or
scas
dec
shrb
adc
cmpsb
jl
and
fstps
push
ljmp
mov
and
push
mov
into
fs
ja
scas
jne
in
out
test
pop
dec
mov
sub
mov
adc
or
nop
xlat
add
xorl
jns
fisubrs
test
std
xor
ss
fsubs
jle
cltd
movsbl
mov
lds
idiv
arpl
imull
xor
jno
jle
xor
out
out
jmp
lahf
outsl
outsl
sbb
jae
out
leave
shrl
adc
push
mov
cmp
adc
mov
mov
pandn
imul
cmpl
hlt
xchg
jmp
and
push
je
test
adc
sbb
xchg
adc
mov
cmc
sti
test
pop
push
pop
push
icebp
pop
pop
outsb
je
insb
push
rep
push
jns
jbe
mov
mov
xchg
aad
cmpsb
in
out
lods
xor
or
orb
test
out
or
dec
cltd
dec
mov
jnp
call
aad
add
mov
pushf
fidivrl
mov
fwait
push
lock
fst
int
mov
dec
pushf
lods
dec
addr16
xchg
sti
adc
loopne
jge
cmp
sahf
inc
jnp
push
jg
xchg
mov
add
xchg
xorl
gs
mov
xchg
lret
in
lods
fucomip
sbb
lret
ret
ja
cmp
xchg
cmp
sbb
or
test
pop
cmp
sbb
ja
sbb
stc
fwait
rol
jo
push
in
clc
pop
mov
enter
stos
cmp
jl
pop
xchg
push
jle
daa
out
clc
or
adc
bound
pusha
xchg
mov
cmp
push
stc
cmp
jnp
xchg
xchg
arpl
seta
adc
jo
orb
imul
mov
ficompl
insb
sub
sbb
or
movsb
jge
rol
jnp
lods
repnz
stos
scas
cmp
inc
shrb
rol
fcomip
icebp
jbe
jge
jo
arpl
ds
cmpsb
jo
xchg
cmpsl
pop
jno
pushf
leave
mov
dec
clc
add
jnp
scas
mov
xchg
lret
xor
sti
mov
mov
mov
je
test
cmpsl
dec
outsb
mov
mov
push
repnz
addr16
movsb
add
mov
adc
dec
xchg
xchg
shl
fstl
or
jnp
out
insb
pusha
or
lds
mov
sbb
sbb
ss
push
push
pushf
cltd
xchg
jle
in
addl
cltd
jne
stos
insb
add
stos
fcomps
xor
and
leave
pop
out
inc
or
rorb
and
in
notb
mov
mov
sahf
cmp
daa
xor
push
decb
dec
divb
sbb
mov
addr16
loope
rclb
sub
cmp
fs
ret
or
push
sub
ficoml
mov
inc
and
push
imul
dec
xchg
push
dec
popa
inc
lret
push
or
stc
mov
xchg
mov
pusha
in
add
xchg
jl
repnz
lods
punpckhdq
xor
or
mov
sarl
cld
fistpl
jecxz
xchg
js
mov
sti
push
jne
ret
cmp
iret
lahf
imul
or
dec
inc
jmp
xchg
mov
lods
movsb
inc
jmp
pusha
scas
dec
sub
pusha
xor
aad
aaa
sti
sub
jbe
test
mov
lahf
sbb
out
lods
test
mov
sub
hlt
enter
pop
insl
xchg
loop
mov
adc
out
lods
jno
jge
dec
dec
inc
mov
cmpsb
pextrw
push
cmp
lret
xorl
lds
jne
movsb
divb
xorb
leave
repz
push
fbld
mov
adc
mov
inc
fdivp
shl
aad
xor
and
mov
inc
sti
sub
out
jp
adc
inc
xchg
xor
icebp
mov
loop
xor
mov
test
add
imul
xor
and
sti
mov
insl
pop
fs
adc
cli
in
cltd
shll
cmpsb
push
pop
nop
mov
in
ret
lret
fcoms
xor
jl
js
test
je
insl
push
mov
cwtl
sar
and
mov
icebp
in
outsb
jp
and
cmp
lods
fisttps
es
dec
inc
add
xchg
mov
nopl
pop
mov
sbb
adc
jp
bound
out
and
pop
gs
cli
je
sbb
movsb
push
roll
cmp
int3
pop
xchg
jae
pop
sub
fwait
imul
sti
push
add
cltd
dec
or
fists
ret
push
cltd
adc
push
sub
push
adc
jmp
shll
mov
sbb
in
sub
filds
mov
mov
dec
sub
cmpsl
adc
adc
iret
lock
cli
adc
push
sub
faddl
adc
xchg
sbb
cmp
popf
lods
mov
imul
jno
rcll
nop
push
cltd
das
cli
ds
loope
dec
and
shrb
xorb
andb
xchg
push
sahf
push
sahf
idivl
mov
jecxz
in
add
shr
mov
xchg
movsb
pop
or
or
fimuls
cmpsl
cli
fwait
andb
inc
mov
push
loopne
xor
cmp
dec
enter
movsb
aad
adc
ja
ret
xchg
ficoml
movsl
icebp
ret
cli
pop
add
jp
pusha
inc
dec
cli
inc
jg
cmp
cmpsb
insb
lret
mov
mov
pop
push
adc
call
lods
cmp
lods
test
repnz
pop
inc
xor
mov
mov
cmp
or
xchg
sbb
or
ret
loop
jb
lahf
mov
and
test
mov
fdivrl
add
mov
fimuls
xor
sbb
and
ret
sub
pushl
or
mov
roll
mov
loopne
out
jo
mov
add
call
jae
adc
cmpsl
pop
sbb
je
inc
movsb
jl
shll
add
mov
insl
lods
pop
pop
cmp
push
lds
pop
jl
cmp
mov
xor
lea
in
int3
cwtl
mov
inc
pop
movb
jnp
cld
setne
ret
fnsave
mov
cmp
push
add
xor
sub
imul
lcall
bound
je
insl
xor
gs
and
divl
popf
dec
xor
adc
pop
arpl
cmp
push
outsl
stos
es
or
aas
jno
jl
mov
xchg
insl
jecxz
cli
xor
arpl
adc
mov
fwait
sbb
gs
or
add
test
movb
adc
leave
imul
pop
insb
sbb
mov
ja
add
or
lret
sarb
fcoms
mov
inc
xchg
sbb
leave
test
mov
or
mov
mov
push
rcr
cli
or
popa
push
scas
xchg
and
xlat
popa
xor
lret
lods
inc
dec
addr16
xchg
push
jl
dec
or
push
subb
jl
push
out
mov
mov
test
rcrb
mov
jge
gs
xor
or
xchg
stos
repz
fcmovu
icebp
pop
dec
jns
dec
in
xchg
mov
add
daa
loopne
mov
fwait
test
mov
mov
leave
test
mov
mov
pop
aam
lea
stos
add
dec
xchg
repz
int3
int3
int3
lods
xchg
dec
fisubrs
and
test
loopne
dec
adc
je
in
pop
push
pop
xor
rorb
lcall
shl
pop
clc
sbb
add
xlat
dec
aaa
mov
cwtl
test
pushf
mov
xchg
sahf
xchg
fistl
and
jle
adcb
push
push
inc
push
pop
add
shl
pop
jp
cmpsb
jne
aam
in
and
pop
mov
or
push
pushf
mov
mov
test
inc
cmp
adc
xor
lods
mov
out
and
stc
fistps
in
aaa
xor
into
ss
test
cltd
cwtl
aaa
sbb
js
sbb
mov
mov
push
pop
jo
mov
popa
cld
jo
mov
mov
mov
or
fs
pop
loopne
jle
adc
xor
repnz
jecxz
inc
cmp
ja
frndint
sub
cli
into
add
xchg
clc
stos
adc
pushf
and
push
clc
mov
pop
out
cmp
icebp
add
lods
rclb
mov
xor
jge
test
pop
stos
pop
jns
mov
in
sub
jns
and
jl
ljmp
or
fmull
xchg
mov
ds
mov
ja
enter
pop
arpl
sub
mov
jns
lret
dec
and
lods
or
loope
xor
in
fldl
jle
lea
cmp
sbb
daa
mov
pop
mov
mov
sbb
xchg
or
mov
dec
lret
adc
dec
arpl
add
xor
push
rorl
lcall
add
test
test
out
xor
ret
rol
mov
loope
and
js
scas
xor
push
test
lcall
das
mov
xchg
scas
daa
mov
cmp
jg
cltd
ret
push
scas
ss
mov
jl
rorb
lock
hlt
and
repz
enter
lret
sbb
cmp
inc
in
sbb
daa
sub
mov
test
aam
adc
lds
adc
sub
stc
sbb
adc
sbb
sbbl
xchg
mov
fcoms
jle
cld
data16
and
pop
test
mov
xchg
inc
addr16
add
aam
jno
lret
xchg
add
pop
mov
xchg
sub
mov
mov
mov
sbb
movsl
dec
mov
mov
inc
mov
sti
dec
cmpsl
loop
sbb
aas
cmp
mov
or
out
mov
jo
popa
xchg
sub
push
mov
dec
xchg
inc
mov
fisubl
jle
pop
jmp
sub
repnz
mov
movsl
das
push
mov
std
fstpl
test
sbb
scas
xchg
inc
sub
je
repz
addl
rolb
dec
or
bound
xchg
cmpsl
xlat
sub
enter
test
mov
xor
mov
xlat
mov
mov
pop
pop
xor
mov
push
out
or
int
mov
scas
mov
out
dec
sar
lea
inc
stos
mov
mov
sub
mov
outsl
push
loop
cwtl
aas
mov
daa
sti
add
rolb
ljmp
mov
ret
inc
loope
mov
cwtl
jl
fmul
inc
incl
das
mov
stc
lret
dec
mov
insb
jmp
ljmp
xchg
add
or
lock
add
pushf
pop
in
mov
in
sbb
push
cmp
jecxz
fbstp
imulb
stos
jle
rorl
cwtl
sbb
outsb
xchg
push
insl
mov
jecxz
pop
add
insb
das
xlat
cmpsl
mov
or
lods
daa
roll
std
mov
mov
outsl
fwait
mov
in
ljmp
pop
jl
xchg
push
mov
inc
adc
cmp
iret
sbb
add
mov
xor
cmpsb
ret
sub
cmp
fsubs
pushf
mov
in
lock
push
pop
mov
and
std
dec
fstpl
jae
inc
and
mov
in
push
inc
xor
repnz
mov
xchg
nop
push
hlt
jl
cmp
mov
mov
subl
ret
push
or
imul
cmp
jo
mov
or
pop
dec
sbb
pop
call
loope
xor
xor
clc
jle
push
jecxz
or
jbe
mov
pop
sub
add
orb
rcrb
fistps
aad
fnstcw
pop
xchg
sarl
push
push
push
lret
imul
outsb
adc
jo,pn
push
popa
mov
add
xor
mov
clc
int3
or
nop
fidivrs
mov
cmp
add
cld
cmp
int
xor
or
xchg
jno
inc
pop
jo
or
lret
movsl
ss
mov
scas
or
pop
fcmovnbe
jnp
fsubp
inc
divb
mov
aad
or
push
lock
xor
cmp
sti
xchg
cmp
pop
pop
push
xchg
loopne
mov
inc
scas
mov
loop
mov
ret
lds
add
stos
lods
pop
insl
dec
xchg
imul
mov
lret
jne
stos
insb
add
jnp
mov
nop
pop
lea
xlat
adc
push
shrb
sbb
addr16
inc
xchg
or
xor
dec
sub
or
rol
aaa
mov
mov
pop
sbb
mov
pop
or
dec
in
fildll
sarb
fisttps
rcrb
xchg
xor
fmull
rcrb
int
push
popf
xor
adc
scas
movsl
mov
das
fdivs
mov
cltd
fisubrs
rcll
mov
cmp
nop
cmp
arpl
inc
pusha
dec
js
in
in
inc
arpl
pusha
int3
and
dec
outsb
out
dec
sti
mov
scas
xor
rclb
out
xchg
jnp
mov
pop
xchg
mov
mov
sbb
xchg
mull
push
dec
push
insb
inc
mov
adc
lods
dec
sub
pop
push
mov
push
sahf
adc
mov
daa
arpl
inc
insb
fs
aaa
jb
dec
dec
insl
out
mov
adc
out
xor
mov
push
jle
in
test
mov
lods
repz
push
frstor
dec
sbb
test
pop
adc
aaa
mov
lahf
inc
and
add
and
addb
inc
dec
jo
adc
mov
adc
outsl
add
mov
into
cmp
lods
sub
add
add
dec
sahf
inc
out
jp
adc
xchg
or
sbb
clc
mov
jge
out
mov
ret
repz
or
cmp
inc
xor
clc
sub
push
test
clc
ret
ret
test
lea
jecxz
insb
sub
rolb
out
inc
cmp
movsl
pop
in
push
sbb
lcall
repz
arpl
or
add
ret
xor
mov
lds
lahf
scas
dec
sub
jno
push
stos
dec
jg
mov
test
cmpl
leave
xor
ss
stos
aas
addl
loopne
or
imul
cltd
xor
int
iret
jp
add
dec
subl
in
mov
inc
fldt
cmp
pop
xor
add
jmp
xlat
hlt
inc
adc
out
dec
sub
mov
dec
popa
lcall
add
out
and
pop
sbb
insl
test
cmp
mov
cmpl
out
lret
sub
adc
or
sub
cmp
xor
cs
inc
insl
xor
movsb
fildll
fwait
xor
sbb
pop
push
push
sbb
ret
in
push
inc
jl
rcl
loop
push
dec
enter
sti
xchg
mov
sbb
mov
rcrl
shl
lahf
mov
popa
push
inc
push
inc
dec
int3
fidivl
cld
cmp
dec
push
mov
ret
and
jl
loop
xor
mov
hlt
lods
ret
adc
pop
jnp
hlt
mov
xor
test
jl
pop
mov
dec
enter
andl
add
sub
shll
not
lret
inc
daa
ljmp
jns
subb
test
in
jg
dec
inc
inc
mov
aad
cli
arpl
stos
jp
testb
cmp
mov
repz
push
jae
pop
mov
and
xchg
aam
or
push
xchg
cmp
mov
pop
push
adc
lds
andb
sbb
add
in
push
ss
cmc
rorb
cmc
lcall
push
push
and
dec
or
jmp
test
adc
rclb
scas
and
xchg
jge
jns
lret
mov
mov
faddl
push
push
out
pop
lea
jmp
pop
xchg
test
dec
rorl
test
adc
pop
ljmp
in
sbb
jns
or
shlb
dec
into
dec
lcall
mov
sahf
or
push
push
inc
sub
push
gs
ja
xchg
idiv
jne
cmc
dec
mov
pop
sbb
cmpsl
out
sbb
xlat
cltd
cmpsl
cwtl
mov
push
xchg
inc
mov
repnz
xor
das
bound
xchg
inc
pop
inc
enter
mov
out
fstps
mov
cmp
pop
cmp
push
es
mov
push
scas
dec
dec
pusha
in
cmp
mov
dec
enter
cli
je
outsl
mov
and
js
je
mov
mov
xor
dec
lret
outsl
and
mov
mov
decb
stos
out
mov
in
ficomps
dec
xchg
mov
push
mov
ret
lret
fcomps
push
xchg
fmul
xor
orb
jmp
std
mull
out
outsb
test
in
insb
add
fs
test
push
dec
fistpl
sbb
je
sbb
mov
xor
mov
sub
scas
lods
push
inc
push
fidivrs
jge
insl
cmp
loopne
or
addr16
jge
sbb
xchg
inc
add
fiaddl
aas
sub
and
addb
popf
pop
inc
lods
pop
mov
outsb
das
loop
mov
inc
inc
imul
in
inc
inc
je
call
fbld
lods
jo
outsb
loope
add
cmp
pop
cmp
iret
xchg
adcb
xchg
nop
pop
insb
sbb
adc
in
mov
push
fwait
xor
test
fs
testb
mov
and
push
pusha
cmpsb
inc
out
sub
out
movsb
andb
shlb
dec
data16
shl
rorl
in
repnz
push
xor
sbb
lret
arpl
adc
ud2
xor
enter
bound
pop
fidivs
lods
movsl
push
push
test
scas
std
inc
mov
iret
repz
inc
xchg
cmp
mov
rclb
ds
dec
push
and
pop
and
mov
mov
lret
in
sub
and
dec
lds
pop
push
ret
call
push
repnz
cltd
bound
in
sbb
sarl
dec
inc
cmp
notb
xchg
xor
dec
pop
test
leave
jmp
sahf
ja
mov
out
adc
stc
push
iret
inc
adc
adc
or
test
add
dec
lods
inc
pusha
mov
fimuls
jge
rcrb
pop
or
xchg
inc
lret
xor
arpl
inc
mov
cmpsl
mov
cmpsb
mov
pop
lcall
inc
or
mov
mov
sahf
pushf
lods
dec
cmpb
enter
cmp
xchg
movsl
jo
ljmp
lock
cmp
mov
jae
push
jns
push
in
es
or
jo
inc
inc
pop
out
mulb
mov
xchg
mov
adc
fldl
xor
arpl
fsubrs
adc
inc
adc
add
dec
sti
sbb
mov
inc
in
movl
ljmp
repnz
mov
sbb
in
mulb
add
and
hlt
enter
and
jnp
push
and
inc
cmp
pop
and
mov
cmp
mov
pusha
out
lods
sbb
popf
popf
int3
and
push
cld
adc
ds
aam
pop
jnp
add
es
dec
or
mulb
fwait
pop
orl
mov
lock
ljmp
dec
cltd
mov
lock
jne
mov
lock
in
push
add
add
xchg
xchg
outsb
push
popf
popa
aam
inc
test
notb
lahf
dec
fs
arpl
addr16
mov
rcrl
xchg
movb
add
ds
sbb
pushw
add
or
inc
cmp
not
add
dec
push
fnsave
sub
mov
xchg
or
push
lret
ret
mov
inc
arpl
adc
jns
popf
xchg
inc
mov
cmp
cmp
scas
and
int3
repz
popf
sbb
enter
das
push
out
int3
dec
push
mov
arpl
mov
pusha
mov
ljmp
cmp
jno
insl
out
loopne
push
sbb
lods
pop
and
clc
shll
sub
shll
arpl
cmpsb
push
xor
jecxz
sbb
lods
jnp
mov
dec
xor
jle
cs
sbb
or
jns
out
mov
cltd
pop
in
adc
hlt
mov
xchg
dec
xchg
sbb
pusha
pop
enter
push
push
cld
imul
jno
mov
mov
xchg
push
xor
and
jl
mov
sbb
push
lcall
ljmp
stos
insb
hlt
cmp
lcall
fs
mov
mov
mov
imul
sti
mov
rcrb
jo
sahf
stc
cs
daa
inc
adc
xchg
or
sbb
jmp
jbe
fdivrs
jb
sbb
imul
lock
add
xor
add
xchg
int3
mov
push
mov
sahf
mov
sub
mov
mulb
or
pop
out
cld
cmpsl
loop
stc
mov
lea
inc
push
and
sub
stos
cli
push
fsubl
fldenv
outsl
mov
in
fnstcw
pop
add
daa
adc
xor
lods
cwtl
mov
dec
mov
in
jae
insb
xchg
sub
mov
movsl
aad
or
imul
hlt
mov
fidivrs
lds
mov
insb
into
call
pop
inc
cmp
sarb
dec
sahf
lcall
sbb
and
lahf
int3
jns
notl
fprem
jo
jle
stos
jbe
js
add
cmpsl
push
sbb
adcb
sbbb
pop
aam
pop
jne
out
idiv
dec
dec
aam
stos
xor
adc
add
imul
adc
sbb
push
shrb
and
in
mov
int
imul
add
adc
mov
adc
dec
fdivs
xor
jne
jnp
in
sub
scas
pop
pop
inc
adc
pop
sub
cmp
ret
mov
pop
pop
add
aaa
aad
iret
repz
cmp
bound
lea
jbe
loope
outsb
sbb
jecxz
pop
sarb
cwtl
pop
mov
pop
jp
test
pop
and
and
add
jns
xchg
lahf
sarl
lcall
sahf
shll
mov
les
cmp
xchg
inc
sub
pop
push
dec
mov
sti
mov
lds
lcall
sbb
call
pop
fisttpl
xor
test
pop
out
loop
adc
addr16
jno
xchg
insb
mov
sbb
xchg
mov
add
xchg
mov
inc
push
or
push
dec
pop
or
in
popa
mov
maxps
cmc
dec
mov
mov
adc
sub
fisubl
clc
outsb
mov
mov
cmp
cmp
cmp
xchg
incl
or
jmp
negb
jmp
dec
mov
cld
std
inc
sub
pop
cmp
mov
or
stos
out
testb
sub
scas
xor
push
adc
or
scas
cmp
sub
dec
sub
pop
mov
inc
pop
xlat
inc
jle
lock
popf
xchg
into
lds
xor
scas
cmpsb
push
orl
test
add
sbb
gs
scas
add
ss
lea
mov
push
jbe
jnp
mov
pop
ficompl
in
or
mov
xor
loop
mov
daa
mov
xor
jg
or
out
icebp
les
push
ret
mov
pop
cmp
in
push
xchg
std
mov
lahf
cli
insl
out
mov
adc
xchg
cmp
sti
xchg
int
inc
in
shlb
nop
add
or
fisttpll
mov
adc
inc
andb
xor
dec
rorb
jecxz
cmp
js
cwtl
pop
punpckhwd
ret
mov
pop
testb
pop
pop
add
dec
fdivl
pop
ret
jb
int3
xor
adc
inc
inc
and
fwait
ret
push
mov
mov
xchg
lret
fs
dec
and
xchg
stc
and
mov
mov
push
in
nop
mov
xor
dec
push
cmp
in
or
adc
push
jp,pn
jb
sbb
push
ds
sbb
jp
test
negb
mov
sub
imul
sub
clc
out
in
popa
fisubl
push
lods
cmpb
pop
adc
ret
dec
sarl
nop
negl
clc
jmp
lahf
and
pop
lret
xor
cmpsl
inc
enter
or
inc
cmc
pop
xlat
add
push
shlb
insl
stc
push
test
xchg
ds
jno
sahf
movsb
push
pop
mov
add
mov
push
out
dec
lds
cmp
fs
mov
das
mov
sub
dec
rcl
mov
jecxz
cmp
add
push
pushf
mov
jle
stc
iret
push
or
fdivr
lcall
push
or
sahf
inc
sub
xor
mov
sbb
inc
cltd
rcll
jp
into
pop
rcrb
lret
and
dec
in
cwtl
js
lock
cmc
mov
pop
push
xor
push
push
xchg
call
and
dec
mov
and
enter
push
addb
ljmp
mov
push
add
aaa
or
imul
adc
loop
xchg
mov
inc
in
pop
icebp
push
xor
inc
mov
xchg
jns
test
inc
sub
scas
cmpsl
inc
push
jle
inc
add
cmp
sbb
mov
push
adc
dec
mull
jbe
and
xor
pop
jns
test
jge
mov
and
hlt
imul
icebp
inc
cmpsb
sub
xchg
mov
adc
mull
outsb
adc
xor
mov
jmp
mov
and
pop
fisttpl
sbb
fistpl
loop
and
es
outsl
adc
and
xchg
cmp
jmp
iret
std
pop
jl
cmp
shlb
pusha
xchg
xchg
aam
sbb
pop
sub
inc
shlb
movsb
aam
dec
dec
in
pop
and
pop
icebp
pop
mov
adc
packsswb
aas
add
test
mov
pop
dec
xor
call
sbbb
cmp
dec
adc
adc
pop
jl
push
jg
mov
sbb
and
and
sbbl
popf
cltd
mov
jno
add
and
xchg
or
loop
mov
aaa
lock
or
aad
negl
sub
or
cltd
sub
pop
xchg
popf
shrb
add
insb
rcr
ljmp
cltd
xor
xchg
pop
data16
and
push
dec
mov
adc
push
fistps
shll
pop
cmp
cmp
xchg
fsubrs
pop
je
fwait
shll
idivl
aam
sub
mov
test
lock
pop
push
dec
mov
jno
sbb
sti
xor
movsl
vaddps
cmp
sbb
jmp
add
mov
data16
fwait
push
dec
pop
jmp
pop
pop
das
pop
in
popf
xchg
out
das
xor
or
mov
dec
push
push
add
into
inc
aad
ja
aam
mov
mov
xor
je
adc
and
mov
cmp
mov
shlb
sbbl
fisubrs
adcb
mov
jmp
stos
ss
adc
out
negl
enter
imul
and
enter
mov
aaa
lods
lock
pop
mov
outsl
je
push
adc
pop
fisttpl
or
dec
dec
dec
add
ds
push
and
adc
or
mov
in
jne
aaa
pop
mov
mov
test
xor
xor
push
fld1
fmull
cmp
cmpsl
cmp
xorb
in
dec
xchg
leave
mov
popa
sbb
jnp
xor
cmp
test
test
jmp
dec
inc
jmp
adc
filds
lea
jnp
mov
jmp
sbb
je
lret
outsl
rolb
mov
mov
mov
mov
inc
jno
arpl
stos
mov
jg
es
sub
pop
xchg
movsl
cmp
leave
jl
ficoml
outsl
in
fmuls
dec
jge
mov
pop
pushf
leave
fisubrs
pop
lock
int3
icebp
pop
insb
jne
daa
leave
and
pushf
pop
insl
push
jns
shr
add
sbb
jle,pn
add
leave
std
xchg
mov
dec
xchg
outsb
mov
inc
or
aad
insl
pop
push
enter
dec
ret
mov
jle
stos
lock
mov
scas
fisttps
sbb
add
into
mov
lret
adc
jp
addl
sahf
sbb
fdivs
loopne
repz
cmp
ja
ret
inc
lea
cmp
jns
cltd
adc
push
jne
mov
lods
jb
add
out
fadds
arpl
movsl
jg
je
or
push
jmp
enter
dec
jno
cs
rcll
inc
fld
test
repnz
pop
inc
mov
ja
fmuls
pop
insl
pop
sbb
sarb
sub
jno
cmc
sbb
cmpsl
jge
data16
and
lret
outsl
xchg
xor
repnz
orb
sub
mov
repz
pop
mov
dec
push
imul
stos
arpl
loope
jns
lock
movsb
mov
pop
test
jle
pop
aam
cmp
imul
inc
test
jo
or
adc
ret
andl
and
mov
dec
pushf
inc
pop
loope
leave
mov
ja
mov
mov
in
inc
xchg
aad
sbb
and
or
jecxz
xchg
shl
sub
popa
cmp
or
sbb
pop
jecxz
inc
mov
into
in
sub
aas
xor
add
push
mov
add
cmc
out
push
or
jmp
push
xor
in
outsb
pop
or
mov
fs
ss
and
shrb
icebp
pop
lods
loop
mov
mov
cmpw
pop
std
pop
outsb
int3
pop
cmc
adc
push
lret
jecxz
cmp
push
shrl
push
ljmp
fsts
lahf
in
ret
mov
aad
and
repz
xchg
jb
push
jp
dec
es
aam
sub
adc
into
pop
andl
jmp
test
add
pop
in
add
xor
movsb
jl
and
cmp
jle
cmpb
loope
push
push
call
sbb
cmp
mov
into
mov
orb
push
adc
dec
into
inc
push
adc
lods
cmp
mov
push
pop
cmpb
add
xor
mov
gs
pop
movsb
push
mov
pop
mov
int3
lret
push
pop
rorb
subl
xchg
push
bound
cmp
push
cwtl
imul
push
adcb
repnz
or
inc
lods
stos
jo
cli
mov
jmp
in
pop
jbe
push
ss
adc
test
je
pop
hlt
notl
or
cmpsb
sub
adc
call
icebp
dec
or
pop
lods
or
jne
dec
dec
enter
cmpsl
inc
std
or
push
addr16
ss
mov
jl
jns
mov
orl
insb
call
inc
xlat
cmp
scas
xchg
inc
or
sar
test
rcrl
js
jmp
movsl
in
push
les
push
repnz
push
add
out
add
fnsave
pop
fldcw
dec
pop
or
stc
aad
mov
insb
lret
int
lret
mov
sub
je
imul
call
ds
jle
jnp
mov
lods
sbb
stc
add
mov
mov
rolb
in
sub
pop
jmp
test
negb
xchg
push
das
insb
push
inc
sbb
mov
inc
mov
or
enter
popa
pop
sarb
sbb
in
lea
ss
arpl
popa
js
jmp
push
divb
cltd
addr16
ret
pusha
mov
dec
xor
pushf
pushf
xor
popf
popa
mov
push
push
adc
lds
push
mov
out
or
mov
into
xchg
bound
ror
push
pop
imull
mov
pop
sti
or
sti
jle
mov
fisubs
clc
int
mov
cwtl
cmc
adc
jo
lret
sub
lret
icebp
mulb
call
push
into
add
xchg
cmp
xor
xor
lahf
sbb
inc
xchg
fcmovnu
and
stos
cs
jmp
sbb
insb
lea
jae
lret
mov
mov
mov
jmp
cli
nop
mov
push
push
dec
push
lock
divb
ret
popf
mov
mov
popf
subl
mov
test
pop
jge
pop
dec
jl
mov
jle
rorl
aam
mov
jge
mov
stos
jb
test
push
ret
dec
push
sbb
add
pop
fcoml
cli
icebp
jnp
or
xchg
mov
lods
mov
scas
and
add
mov
xlat
or
mov
rorl
or
lret
inc
dec
xor
xor
add
loop
jecxz
push
xchg
sarl
xor
jae
popf
mov
add
bound
dec
jg
jae
cltd
incl
jno
testb
push
pop
xchg
jg
lret
rcrl
inc
push
add
xchg
jno
test
inc
scas
int
outsb
jl
xlat
jo
sbb
out
pop
xchg
or
testb
lcall
jno
cld
ret
inc
loope
jne
jge
mov
xchg
je
xchg
mov
dec
ret
push
pushf
inc
ja
roll
sub
pop
push
cmp
xor
cld
sub
xchg
mov
mov
inc
inc
daa
push
aaa
clc
cmpsl
cmpsb
push
mov
cli
adc
shlb
lods
add
xor
mov
add
inc
lds
lret
push
fbld
mov
mov
insb
dec
pushf
xchg
rcl
mull
enter
sub
inc
mov
insb
lds
xlat
enter
mov
cmp
lahf
repnz
sarb
in
fiadds
call
jbe
xchg
test
adc
in
jmp
inc
push
jecxz
push
hlt
and
es
inc
bound
ret
mov
mov
cli
in
mov
test
out
adc
dec
mov
mov
sub
mov
adc
outsb
jge
xchg
ficomps
xchg
adc
cld
lret
push
inc
fwait
popf
xchg
lahf
das
push
cmp
or
dec
mov
sub
jmp
hlt
add
dec
cmp
dec
popa
mov
jge
js
test
daa
xor
icebp
iret
xchg
fisubl
imul
xor
cs
jg
xchg
out
addr16
dec
das
push
jne
push
arpl
add
sahf
enter
test
cmpsb
xchg
arpl
in
or
xor
xor
xchg
xchg
sbbl
jo
sub
cmp
int3
xor
mov
mov
orb
pop
jg
test
dec
repz
mov
and
cmpsl
not
add
sar
adc
hlt
push
pop
push
xor
mov
jl
iret
jnp
icebp
popa
xor
or
imul
sbb
xor
pop
pop
bound
add
mov
or
fcomps
hlt
rorb
pop
mov
mov
pop
ds
enter
daa
movsl
adcb
mov
subb
ljmp
jl
sti
js
mov
xor
lods
or
mov
jbe
lret
mov
cmp
les
mov
fadd
jle
sbb
jp
xlat
mov
into
xor
int3
in
inc
fadds
pop
lcall
test
nop
cmp
jl
xchg
pop
test
add
add
fldcw
push
in
mov
sbb
pop
test
fildl
add
cli
popa
cmp
add
pusha
int3
testb
adc
daa
push
enter
scas
je
daa
ja
push
sbb
or
jbe
test
and
mov
rorl
adc
jne
in
enter
sub
cli
add
xor
mov
push
test
xor
jmp
insb
adc
cmp
adc
push
ret
xchg
stos
in
rcr
add
jle
fbld
mov
fistpl
add
cmpb
icebp
ffreep
repnz
in
inc
outsl
mov
mov
lret
sbb
fsqrt
test
ret
arpl
ss
scas
jns
adc
fildll
fcmove
pop
insb
xor
lahf
ds
aaa
jb
rcrl
inc
in
aam
repz
out
and
cs
out
inc
and
adc
cld
in
push
push
lea
mov
xchg
xchg
icebp
icebp
frstor
jp
std
or
leave
xor
inc
ja
pop
sahf
in
sbb
orl
mov
xor
and
mov
mov
xor
popf
and
adc
cmp
scas
shl
jmp
mov
xchg
sbb
inc
mov
and
jmp
fisubs
mov
pushf
mov
sbb
shlb
shr
adc
or
pop
xlat
push
xchg
sub
add
cmpsl
inc
dec
scas
sub
sbb
mov
mov
imul
arpl
and
cmp
push
addl
ret
add
dec
push
mov
arpl
je
pop
sub
and
and
in
push
sub
cvttps2pi
pause
cmp
inc
leave
or
xor
je
xchg
cli
bound
scas
mov
xor
sub
xor
gs
xchg
push
das
subb
cld
mov
adc
mov
popa
pop
push
dec
dec
jecxz
leave
xor
xor
pop
pop
js
sbb
mov
or
lahf
aas
cmp
aam
jecxz
pop
mov
mov
clc
data16
les
pop
into
shlb
mov
movsb
and
cmpsl
outsb
mov
xchg
mov
mov
xor
xor
sub
lods
add
pop
lods
dec
xchg
xchg
faddp
cvtps2pd
arpl
mov
or
fimull
daa
xchg
stos
jo
xor
mov
mov
mov
movsb
push
ret
frstor
std
xor
push
in
imul
jp
push
mov
jns
inc
rcll
jo
in
mov
aam
inc
dec
sub
inc
loop
mov
rcll
pop
xchg
xor
fcoms
pop
in
je
dec
test
fsubl
call
lret
sbb
mov
push
sbb
cmpsl
andl
sbb
add
jne
jb
lock
mov
cmp
rol
jmp
sub
mov
fnstcw
xorb
dec
scas
cli
les
shrl
pop
push
push
mov
xor
sbb
push
cmp
mov
xchg
lock
loopne
icebp
sbb
mov
sub
or
dec
popf
mov
jmp
nop
sbb
cs
in
dec
dec
out
inc
mov
sbb
sti
jnp
mov
mov
dec
jmp
ret
inc
into
imul
mov
sub
iret
rcl
and
fcmovnbe
pop
xor
sbb
adc
movl
inc
outsl
stc
pop
mov
pop
cmp
mov
cwtl
xchg
sub
imul
lds
pop
or
sub
ret
loop
xchg
sbb
je
mov
xchg
les
fistpl
jmp
movsb
jnp
pushf
sub
insb
or
stc
and
movsb
mov
imull
xor
dec
jmp
mov
cmp
mov
add
mov
scas
shl
adc
sbb
jle
or
inc
xor
and
jecxz
ja
jnp
inc
and
pop
in
jnp
cld
out
or
stos
pop
ja
jb
pusha
mov
imul
jmp
inc
sbb
fst
lods
int3
lcall
pop
jbe
inc
aad
adcb
mov
push
cs
hlt
jae
mov
mov
add
gs
push
mov
xchg
shrl
cld
repz
cmpsl
icebp
test
push
push
mov
and
int
add
insb
rcl
aam
shl
test
adc
aam
in
rorl
push
jp
hlt
push
cmp
ret
jg
insl
inc
push
call
adc
mov
xor
sbbb
sub
push
cld
out
dec
ljmp
jbe
xchg
ret
test
lds
mov
or
in
into
movsl
test
push
ret
stc
xor
insb
xor
dec
push
push
mov
xchg
cmp
adc
push
sub
pop
loope
hlt
repnz
mov
repz
insl
loopne
mov
rcrb
sbb
mov
data16
iret
imul
data16
insl
cmp
maxps
popa
xor
es
jmp
and
mov
mov
pop
push
fcoms
adc
dec
push
add
les
int
rorl
std
jecxz
sub
cmp
out
jnp
cs
pusha
sti
or
cli
and
and
loop
ret
xchg
orb
fisttps
fs
aam
fstp
mov
fnstsw
mov
cmpsb
add
repnz
mov
in
sbb
xchg
das
lods
stos
nop
jbe
sbb
push
xor
orl
dec
dec
in
add
add
out
stc
addr16
inc
xor
and
lret
add
pop
test
and
clc
ljmp
mov
dec
add
jbe
pop
or
add
add
hlt
int3
test
ret
cmp
ror
cmp
sarb
xchg
or
fldcw
and
cmpsl
js
cmc
jne
ret
test
pop
push
popa
or
data16
inc
pop
jecxz
mov
xor
scas
mov
mov
lea
ljmp
sub
out
sbb
push
inc
stos
test
loopne
mov
lret
cmp
push
mov
jmp
push
lods
sub
pop
and
dec
in
std
idivb
mov
dec
mov
gs
pop
sbb
dec
sti
xchg
in
cmp
outsb
and
xor
out
pop
xor
call
mov
cli
sti
sub
jne
push
test
mov
and
dec
jbe
test
daa
cmp
or
mov
cmpsl
int
pusha
aas
int
sti
pop
sub
fcoms
mov
dec
mov
mov
out
js
add
pop
mov
sbb
pop
mov
shlb
sbb
jle
mov
imul
int
lret
pushf
stc
in
mov
lock
subl
mov
sbb
faddp
es
notl
clc
add
in
loope
out
cmpsl
jnp
mov
push
pusha
leave
xchg
xor
cmpsb
js
shlb
dec
xchg
jbe
ret
in
arpl
repnz
sub
enter
call
adc
adc
loop
not
sub
dec
clc
jle
fwait
jnp
mov
jl
xchg
adc
fmul
lret
icebp
dec
fwait
stos
shl
rolb
cmpsl
shrl
in
stos
lahf
dec
mov
xchg
xchg
adc
scas
cmp
adc
adc
mov
push
sbbb
cltd
jmp
inc
fucomp
std
cli
push
iret
sub
jmp
imul
mov
bound
add
push
popa
lea
xchg
imul
mov
dec
or
repz
sub
das
lcall
xchg
or
jle,pn
insl
sub
pop
add
inc
add
adc
aam
adc
dec
sti
fcomps
adc
or
adc
adc
mull
mov
lods
mov
mov
jnp
push
jl
insb
dec
std
lret
adc
bound
lds
bsr
and
std
rclb
inc
add
mov
xchg
or
lea
sub
adc
adc
sub
xchg
sbb
sub
push
loop
divl
stos
xor
aam
popf
jb
mov
imul
into
movsb
cmp
cwtl
outsl
in
mov
cmpsl
xlat
cmp
jbe
fisttpll
jmp
push
inc
jo
ja
inc
push
repz
jl,pn
fistps
ljmp
nop
stc
popf
mov
mov
pop
loop
dec
push
mov
aas
mov
xchg
jne
int
jmp
aaa
mov
je
stos
xchg
lods
lret
inc
inc
push
and
adc
push
pop
jno
cmp
loope
adcb
mov
movsl
lahf
insl
out
or
xchg
push
mull
into
mov
sub
imul
cmp
pop
dec
loope
pop
inc
das
or
lret
xor
outsb
and
pop
or
test
pop
sub
out
inc
push
pop
jnp
or
mov
xchg
jmp
mov
xchg
sbb
call
scas
test
dec
cmp
iret
adc
call
mov
mov
cmp
data16
mov
insb
mov
mov
negb
loop
cmpl
jmp
mov
in
les
jne
add
adc
add
popf
jmp
fcoms
idiv
add
aas
pop
movsl
mov
rcr
mov
rolb
cwtl
push
or
jge
jbe
mov
ds
arpl
rcrl
jae
and
fimuls
stos
pop
lock
cmpb
movsl
pop
cld
xchg
test
out
lods
fs
jle
mov
or
sahf
or
pop
bound
xchg
xchg
push
or
dec
inc
pop
push
xorl
mov
lcall
cltd
sbb
push
inc
xchg
sar
or
inc
in
jg
decl
mov
test
xlat
arpl
pop
insb
push
and
jg
dec
testb
mov
mov
or
mov
jle
inc
mov
or
mov
cltd
push
ret
pop
lret
pop
dec
mov
xor
fcoms
jmp
dec
out
ja
and
sahf
sbb
fbstp
rcr
mov
test
aad
or
mov
int3
and
sbb
mov
je
stos
dec
fimuls
dec
and
lock
cs
rcr
xor
mov
psubd
add
xor
xchg
pusha
add
adc
out
pop
imull
xlat
in
mov
mov
std
pop
mov
push
scas
insb
sub
jg
out
shrb
pop
lds
mov
ss
out
lods
lret
call
xchg
push
out
data16
mov
sub
stos
adc
cmp
aam
mov
in
and
sbb
sbb
sbb
rcll
push
inc
int3
ret
movb
rcrb
dec
int3
dec
dec
push
icebp
pop
xchg
and
adcl
add
cmpsl
fsubl
inc
lret
imul
jno
inc
mov
je
mov
sub
imul
xor
dec
push
dec
ret
cmp
scas
lahf
adc
and
sub
adc
popf
xor
fistl
sub
push
ret
in
stos
push
frstor
xchg
sub
daa
sbb
rcrb
pop
incb
int3
inc
cltd
jp
scas
cwtl
fnstsw
pop
add
add
lret
or
sbb
jmp
sti
adc
cmc
xlat
movzbl
add
sub
in
jp
pop
add
sub
scas
popa
stos
cmp
loope
or
mov
outsb
pop
cld
cmpsl
xchg
ret
lcall
les
or
int
mov
push
jno
inc
or
mov
sbb
test
cmp
inc
xchg
push
cmp
and
mov
fcmove
push
sbbl
insl
daa
fdivr
push
and
js
movsb
or
and
ljmp
icebp
mov
dec
mov
xchg
test
pushf
inc
in
lock
repz
ror
mov
jmp
outsb
rorl
mov
and
rcrl
push
outsb
sbb
clc
in
lods
loope
or
and
fdivl
jmp
clc
call
out
sbb
fwait
push
and
push
and
pusha
sbb
push
fists
mov
mov
test
push
mov
pop
ficoml
or
or
jnp
cltd
cmc
lretw
add
dec
jnp
les
pop
mov
pushf
andb
jns
sbb
mov
movsb
add
dec
repz
jbe
push
clc
cwtl
fidivrl
dec
push
xchg
mov
sub
int3
es
add
xor
mov
cmp
out
ljmp
cmp
mov
push
lcall
inc
xor
or
bound
stos
rorl
push
pop
je
xchg
adc
mov
sbb
push
pop
push
push
ljmp
cld
das
mov
loopne
adc
xchg
popf
jno
fdivrs
aam
add
jge
gs
pop
inc
sub
adc
scas
pop
sbb
inc
mov
ljmp
lret
lock
fsub
inc
pop
lods
adc
cmp
or
notb
shl
xor
scas
push
in
mov
repnz
cli
mov
scas
cltd
push
shll
cwtl
pop
fisttpll
mov
enter
movsb
shr
js
mov
insl
cmp
lret
sbb
xchg
test
push
test
dec
insb
in
rcr
mov
add
mov
push
test
inc
loopne
cwtl
dec
leave
popa
mov
inc
test
xlat
mov
mov
enter
inc
in
pop
inc
sub
jge
clc
nop
out
mov
shl
loop
fmul
pop
inc
push
fildl
testb
shrb
pop
push
lock
stos
popf
notb
jae
in
adc
in
sbb
cmp
je
rorl
jle
dec
sub
lock
insl
dec
lods
inc
xor
sub
mov
iret
jecxz
adc
lds
sahf
aaa
std
fsubp
repnz
mov
cmp
add
pop
pop
mov
mov
mov
fimull
inc
and
and
push
dec
lret
testb
ror
inc
or
xor
mov
push
xchg
out
aas
lcall
push
ljmp
cmc
xor
into
ret
sbb
xchg
cmp
sub
in
neg
data16
out
loopne
mov
xor
adc
lahf
or
repz
cmpb
xchg
ss
jl
call
inc
popa
jbe
fisttpl
out
or
dec
movsl
popa
adc
dec
cmp
mov
push
fcompl
fidivl
cli
not
adc
pop
push
out
sub
dec
jae
repnz
arpl
pop
enter
ljmp
lahf
pop
aad
mov
ret
imul
sub
lret
pop
jne
and
add
adc
roll
adc
push
inc
mov
lcall
inc
fsubrs
xchg
cmc
cwtl
sub
sbb
jle
dec
mov
and
jb
data16
jp
sarl
loope
ret
or
pop
aas
push
lods
test
pop
pop
cli
in
icebp
mov
clc
mov
dec
mov
cmp
mov
jle
dec
aad
call
call
add
pop
sbb
daa
adc
push
xor
lea
xor
pop
cmp
mov
cmp
inc
hlt
and
call
popf
aaa
push
add
mov
pop
push
pop
ja
int
test
adc
mov
in
scas
push
incl
gs
sub
ljmp
out
fimuls
jae
dec
xchg
inc
mov
dec
inc
mov
dec
movsb
aad
test
jo
dec
ret
lods
ret
mov
jg
fwait
sbb
outsl
iret
call
pushw
sbb
lret
adc
jmp
sbb
lock
stc
sti
sub
lods
ret
hlt
jmp
pop
shl
sbb
cmp
pusha
sti
iret
sbb
or
repnz
inc
shll
or
bsf
inc
mov
popa
mov
lcall
mov
mov
mov
loope
xchg
loopne
scas
sub
mov
cmc
std
inc
jg
push
lods
nop
adc
out
inc
lods
sub
xbegin
scas
mov
and
push
push
scas
mov
in
jb
imul
hlt
or
fdivp
mov
outsb
sub
add
andb
xor
ficompl
jno
cmc
cld
add
stos
dec
xchg
cli
sar
push
repz
pop
mov
pop
inc
pop
icebp
test
dec
rcl
into
lahf
cmp
pop
into
xchg
jae
dec
subb
out
and
inc
push
lret
fwait
mov
sarl
daa
pusha
in
enter
mov
jo
in
sarb
lcall
dec
cli
test
jae
add
push
add
pop
fstl
sub
mov
lahf
push
je
inc
push
cli
shll
push
pop
push
xlat
in
jns
adc
push
popl
nop
xchg
in
mov
mov
call
mov
outsl
mov
cwtl
test
mov
scas
mov
loope
in
or
loop
xor
cld
jecxz
xchg
and
cmp
test
sbb
push
fisubs
pop
jnp
lods
aam
xchg
lcall
dec
mov
add
pause
clc
aam
jo
rclb
mov
push
jge
clc
and
in
push
xlat
dec
mov
arpl
jnp
fcoml
sbb
mov
js
scas
movb
dec
sub
mov
clc
popf
test
inc
std
ret
mov
negl
insb
rclb
test
sar
mov
fstps
inc
pushf
test
cmp
push
jecxz
xchg
daa
cwtl
jno
or
enter
mov
xor
xor
and
jp
int
mov
sbb
mov
cs
add
xor
pop
push
fldt
lret
out
sti
out
fs
push
addr16
dec
sub
fcoml
pushf
adc
inc
sti
sahf
pop
mov
fadd
aaa
lock
push
xor
int
popf
lods
out
ja
movsb
push
in
bound
mov
cltd
dec
es
mov
fnstenv
call
cmp
pop
push
negl
gs
mov
rol
push
mov
jl
mov
cmp
inc
xchg
dec
call
cmp
adc
cmp
loopne
cmp
insl
fiadds
ret
cmpsb
push
lea
icebp
test
xchg
gs
leave
xor
nop
pop
xor
fidivrs
mov
push
push
sbb
push
pop
sti
aad
dec
inc
cmc
pop
cmp
into
in
fs
fsubs
lods
ret
mov
mov
sub
std
push
xor
or
pop
leave
jle
sbbl
jb
lret
ja
mov
mov
pop
adc
lahf
std
sti
xor
jb
cli
xor
xchg
insb
mov
insb
fstps
arpl
xchg
or
add
fucomip
scas
sub
psubq
or
int3
mov
in
mov
jbe
lret
aam
andb
dec
out
adc
lret
xor
imul
fiaddl
sub
or
icebp
aas
xchg
fimull
call
fimuls
mov
mov
add
lea
shrl
or
and
data16
iret
movzbl
add
movsb
fstpl
int
insb
cmp
dec
fs
imul
pop
jmp
jge
pop
mov
lret
xchg
mov
int
sbb
sarl
cmp
adc
xchg
mov
add
and
and
pop
mov
mov
loop
dec
sbb
mov
lds
ficoml
sub
cltd
cmp
out
fistpl
inc
push
jg
lock
or
inc
outsb
pop
mov
mov
mov
sarb
xlat
lock
into
insl
shl
pop
mov
mov
push
mov
cmp
enter
mov
push
daa
stc
or
pop
cltd
fidivrl
aas
or
xchg
bound
lock
shlb
mov
inc
leave
push
push
stos
pop
jecxz
jno
add
rcrb
jl
inc
nop
cmp
movsb
loope
jle
lods
push
xchg
mov
mov
dec
pusha
inc
movsl
push
sbb
inc
stos
mov
cmp
in
sbb
cmpsb
incl
lock
xlat
mov
aaa
mov
lahf
loopne
mov
int
test
xor
fwait
xlat
popf
enter
arpl
inc
mov
jb
or
jl
bnd
es
xor
roll
inc
test
insb
pop
cld
inc
into
mov
daa
cli
lock
jle
cltd
cmpsl
fidivrs
sarb
dec
lock
out
xor
mov
mov
inc
add
dec
shlb
xorb
lret
jne
mov
cwtl
insb
int3
push
or
pop
pop
adc
and
data16
xchg
add
scas
imul
lds
loopne
shlb
sub
cmc
adc
mov
cmp
push
xchg
jae
sub
dec
ficoms
xor
and
int
jle
mov
mov
push
xchg
lret
xor
mov
pop
test
pop
adc
fdivs
push
gs
je
adcb
cwtl
repnz
xchg
and
dec
sbb
push
push
mov
sbb
xchg
xchg
jge
repnz
jno
cmp
out
paddusw
inc
daa
pushf
cmpsl
shll
sbb
clc
xor
cmpsl
add
pop
test
clc
mov
mov
lret
push
sub
cmpsl
test
adc
inc
push
out
cmp
or
adc
adc
fwait
in
aad
js
shll
jbe
add
mov
add
gs
mov
sbb
adc
push
and
mov
mov
mov
test
dec
cltd
sbb
pop
sbbb
pop
mov
out
push
jl,pn
mov
mov
in
pop
mov
jo
out
or
sbb
mov
imul
test
imulb
mov
call
jns
push
add
jg
lcall
inc
das
xor
xchg
mov
xor
js
mov
in
xorl
insb
in
jecxz
rolw
xor
ret
push
push
xchg
lret
mov
insb
ss
js
jne
add
add
jae
cmp
mov
test
outsb
mov
andb
xchg
ret
mov
xchg
jb
insl
dec
lret
lds
lods
pop
add
fstpt
mov
inc
movsl
mov
sub
sub
cmp
mov
mov
fldcw
rcl
fcmovb
pop
in
ss
fldcw
jle
popa
ljmp
mov
inc
dec
xorb
jo
aaa
incl
xchg
daa
mov
loopne
testb
cs
loop
repnz
cwtl
mov
or
mov
mov
and
ss
daa
addb
cli
and
sbb
mov
aas
ss
repz
cmpsl
lret
clc
lcall
cltd
xcrypt-cfb
cmpsl
pusha
cmp
or
push
xor
mov
xchg
cmpl
out
out
adc
sbb
cltd
cmp
in
inc
mov
mov
int3
add
pop
pop
pop
cmp
mov
test
or
arpl
sbb
push
sti
sub
cmp
ret
xor
or
jb
test
dec
je
pop
loopne
sti
push
movsl
outsb
push
mov
das
inc
push
cmp
aas
ret
mov
lcall
sti
outsl
xchg
jne
xchg
mov
inc
in
mov
cmpsb
loopne
xchg
push
test
roll
stos
loop
jbe
mov
mov
cmpsb
sbb
cwtl
decb
mov
gs
sub
insl
lea
jle
popa
lahf
sbb
imul
in
xchg
pushf
rorl
or
cmpsb
mov
xchg
xchg
push
mov
test
cmp
pushl
ficompl
arpl
push
dec
pusha
dec
and
mov
jecxz
dec
insl
andb
imul
pop
test
push
cmpsl
adc
xor
mov
out
jae
add
lcall
pop
jb
and
jge
push
mov
mov
mov
mov
pop
push
pop
icebp
outsl
push
test
mov
dec
aas
mov
xchg
aad
jb
cmp
adc
fdivp
push
std
adc
jns
sarl
push
add
sub
jl
std
outsb
dec
mov
loopne
mov
pop
inc
xor
cs
xchg
daa
loope
nop
test
mov
subl
cmp
xchg
inc
mov
xchg
sti
add
sub
divl
inc
ret
add
ja
sahf
repnz
popf
hlt
mov
pushf
push
xchg
or
mov
xor
rorl
hlt
xchg
xlat
mov
iret
lods
jmp
add
insb
popf
dec
cmp
mov
nop
insb
movsl
rcll
and
and
cwtl
loopne
mov
xchg
pop
or
xchg
mov
mov
and
clc
pop
push
es
pop
icebp
and
in
dec
shll
mov
mov
jge
imul
cmp
aas
out
cs
dec
jg
add
xor
mov
mov
mov
cmpsb
add
lahf
out
aaa
out
fisubs
lcall
adc
fiadds
pop
adc
sbb
insl
pop
cmp
mov
xchg
pop
xor
fldcw
push
je
lahf
mov
push
fbstp
sub
xchg
xor
xchg
repnz
ret
jo
loope
mov
das
sub
xorb
add
lret
sub
xor
push
or
lret
push
xchg
sub
insl
sub
andb
and
xor
add
repnz
pop
call
inc
fstps
int3
mov
loopne
es
add
shrl
int3
cmp
mov
lods
sbb
ja
sti
les
int3
es
cmpsb
xchg
xor
sub
add
or
jnp
jle
es
jno
loop
jl
dec
add
adc
pusha
aam
repnz
push
test
stos
and
test
sbb
mov
push
and
ficoms
addb
sbb
fdivs
mov
mov
push
xor
jns
xor
add
sbb
fcoml
push
out
xchg
cs
rcl
repz
popf
push
sub
jmp
mov
jns
sarl
xor
cmp
inc
lretw
sub
fdivl
fisttpll
loope
sub
cmpl
lahf
push
mov
scas
and
push
pop
or
jne
icebp
shlb
popf
mov
test
iret
xor
mov
adc
mov
mov
add
xor
mov
rcr
jae
ss
xchg
fmull
jg
and
pop
adc
add
push
in
dec
call
cltd
or
sbbl
and
fistpll
add
stos
push
imul
or
or
pop
iret
popf
lret
mov
inc
dec
cmp
popa
jge
dec
mov
stc
outsb
cmp
xor
push
aam
je
jl
mov
pop
push
mov
dec
imul
jg
ljmp
adc
lods
jg
push
xlat
push
aaa
xor
scas
arpl
test
jge
enter
pop
and
aaa
cs
cmp
mov
cmpb
add
outsl
sub
es
pusha
jno
fldenv
es
ljmp
or
mov
arpl
mov
popa
aaa
inc
jae
add
add
mov
jnp
push
mov
cld
pop
daa
out
push
ds
and
jne
adc
mov
jg
out
or
cwtl
xor
lret
pop
push
xchg
mov
repz
pop
stos
js
lods
sbb
insl
repz
add
popa
test
scas
test
incb
cmpsb
pop
lock
out
pop
loope
adc
sub
leave
cmpsb
sub
mov
jp
cmp
or
cmpsl
lods
clc
inc
insb
mov
sbb
sbb
andb
daa
pusha
add
adc
sbb
sbb
fstl
iret
les
jle
lock
jmp
push
dec
sarb
test
mov
and
rorb
insl
fsubp
jg
mov
lods
mov
lds
xchg
mov
mov
iret
xchg
jmp
mov
mov
push
jns
rorl
mov
repz
mov
insl
sti
mov
jg
push
push
mov
jp
ss
inc
fiaddl
mov
out
xor
lcall
mov
mov
jecxz
sbb
inc
and
mov
ret
out
jo
scas
andl
jmp
ds
push
push
ja
cmp
or
push
xchg
iret
sti
sub
enter
into
pop
ja
js
in
pop
aam
ds
pop
jbe
insb
mov
cmpl
or
adc
les
testb
lahf
inc
nop
enter
lock
lds
mov
lret
dec
into
jo
push
mov
repz
add
inc
daa
cli
adc
stc
mov
mov
cltd
fwait
stos
sub
pusha
pop
jle
sub
add
pushf
and
xlat
scas
icebp
cmpsb
xor
sbb
lret
test
mov
aaa
mov
out
pop
popf
out
mov
mov
lock
jg
pop
decl
mov
cmpsl
call
aad
cmp
mov
or
pushf
sub
cmp
pushf
inc
and
sub
cs
xlat
cld
mov
xlat
and
sub
out
outsb
scas
loope
popf
push
and
imul
add
pop
mov
sbb
adc
mov
mov
ret
nop
cmc
cld
fcoml
cmpsb
addr16
sub
mov
pop
mov
add
test
mov
inc
popa
ds
jnp
pop
shr
mov
push
mov
push
lret
mov
cwtl
and
int
mov
or
or
outsb
cmp
fwait
inc
inc
or
jle
lcall
or
pop
ja
jne
cmp
aaa
loope
push
lods
and
fimuls
xchg
mov
pusha
mov
lods
xor
lds
clc
jns
movb
adc
adc
mov
jo
idivb
dec
jecxz
or
and
es
jecxz
mov
or
sbbb
xchg
jmp
inc
dec
fdivs
jb
sbb
xorl
sbb
out
xchg
mov
roll
mov
leave
stos
stos
fcmovb
pushf
xlat
int
dec
pop
sub
dec
dec
xchg
test
loop
inc
in
sub
es
sub
jb
daa
push
sbb
fsubrl
test
ss
xchg
popf
lret
inc
loop
or
test
mov
mov
inc
ret
jo
idivl
repnz
add
pop
jno
in
sub
int
shl
mov
inc
cmpsl
ficoml
aam
pushf
mov
sarb
sbb
lods
movsb
inc
mov
push
push
mov
mov
rcr
pop
or
or
sub
sbb
jns
in
fs
pop
jno
add
xchg
in
jo
cwtl
adc
rcl
cltd
xor
mov
pop
pop
push
cmp
fs
ficompl
pop
js
xor
mov
popf
xchg
mov
lret
std
int3
shlb
insl
lret
mov
in
jecxz
lock
out
mov
shrb
adc
xchg
sbb
mov
mov
cmpsl
xchg
call
scas
xor
loopne
and
lea
or
push
cmp
pop
adc
and
mov
push
cwtl
pushl
fildll
iret
mov
aad
xchg
sbb
mov
mov
adc
push
repz
xchg
imul
mov
dec
pop
test
ss
movsl
js
insl
stc
push
jmp
addr16
adc
adc
sti
xchg
fsubl
mov
repnz
je
loope
push
in
sub
stos
daa
xchg
in
outsb
sarl
or
sti
lret
xchg
cwtl
nop
xlat
in
sbb
xchg
dec
dec
cmp
mov
out
push
fcmovbe
loop
scas
mov
mov
les
and
push
sub
pushf
lock
dec
or
sahf
jge
mov
add
jo
xchg
inc
lahf
mov
je
mov
dec
call
mov
fidivrs
lock
repnz
xor
push
jl
mov
fimull
std
rcrb
xor
movsl
flds
or
popa
fsubrs
push
repz
sbb
stos
lods
in
mov
int3
cld
jae
bound
popf
sarb
fucom
pop
push
enter
repnz
push
dec
int3
mov
or
test
pop
jl
scas
cltd
xor
dec
xor
push
sti
idivl
cltd
and
xchg
pop
jns
jne
aad
in
jmp
mov
ficompl
and
andl
mov
shll
hlt
imul
data16
movsw
lret
add
pop
push
mov
pusha
cmpsl
rcrb
mov
stos
mov
stos
loopne
sub
sbb
jbe
xor
divl
cmpsb
xlat
outsb
cmpb
cmp
push
aas
inc
pop
leave
pop
dec
movsb
sti
push
std
xchg
dec
test
enter
sbb
loop
sub
xchg
idivb
rcll
stos
leave
pusha
mov
dec
iret
fisubrs
arpl
xor
movsb
in
cmpsb
into
inc
mov
mov
mov
iret
andl
push
add
mov
inc
sub
jmp
sbb
or
mov
mov
lret
adc
je
adc
mov
call
fs
cmp
ja
xchg
rcr
mov
int3
stos
dec
sub
cmp
adc
daa
je
fstpt
cmp
jg
jb
push
stos
ret
add
sbb
iret
push
or
bound
ret
mov
gs
pop
xor
jb
mov
add
bound
aas
aad
or
add
jb
nop
movsb
mov
iret
loop
xchg
cmp
leave
jns
mov
pop
cmp
popf
test
pop
pop
ja
movsb
stos
sbb
push
pop
and
ljmp
adc
xchg
adc
insl
mov
mov
shlb
mov
sahf
add
lret
xchg
lret
fucomi
and
xor
push
movsb
and
je
mov
adc
fisubrl
insb
sub
gs
repz
xchg
and
mov
inc
push
mov
xchg
negb
push
in
and
sbb
push
out
jb
mov
add
cmp
xchg
lock
lahf
mov
and
inc
cmc
lret
rolb
jge
pop
pop
mov
pop
and
cmpsl
and
jl
jl
test
sub
push
jns
cmp
mov
push
sarb
insb
jnp
fbld
pop
jge
mov
repnz
sub
cmpsl
sbb
shlb
jb
popa
dec
xchg
shlb
mov
push
lods
inc
inc
shll
les
jp
mov
into
xchg
les
inc
sub
ljmp
pop
inc
push
mov
ret
xor
cli
pop
and
in
fnstenv
pop
mov
sti
lret
fisubl
jmp
xchg
into
and
and
pop
mov
add
lcall
cmp
ret
xor
int3
cmpsl
dec
jae
cmp
sbb
sbb
mov
jle
mov
lea
jno
add
xchg
sub
mov
mov
xchg
seto
dec
rclb
lret
and
in
add
icebp
mov
pop
xchg
aam
outsl
jno
je
loop
out
xor
out
push
push
aas
fsubrl
jne
fmuls
cmpsb
jmp
mov
inc
and
jecxz
fwait
pop
or
inc
mov
std
nop
add
or
mov
add
mov
jb
add
and
mov
lock
fstp
xchg
xchg
scas
mov
mov
push
mov
or
arpl
das
inc
sahf
fucomip
imul
in
push
mov
add
in
or
push
pop
fneni(8087
inc
in
mov
popa
jl
and
pop
push
gs
mov
jecxz
mov
insb
dec
andb
roll
jg
mov
insb
repnz
test
dec
xor
movsl
ds
pop
cltd
xchg
cmp
leave
pop
sub
mov
andl
mov
in
adc
and
out
add
scas
adc
jle
rcl
ds
in
fistpll
bound
rcl
dec
mov
mov
pop
dec
gs
ja
cli
mov
jg
jae
pop
fwait
jbe
push
repz
pop
xchg
xchg
push
call
and
stos
sbb
dec
xor
nop
rcrl
cmp
fstl
sbb
lahf
dec
adcb
xchg
sbb
stos
cmp
mov
xchg
push
jl
inc
das
dec
dec
div
xorl
mov
xor
pop
pop
pusha
in
int
lods
mov
lret
and
shlb
loope
jnp
push
jb
add
aam
addr16
ret
pop
add
pop
dec
jge
push
push
sbb
jbe
cmpsl
sub
lcall
or
pop
test
mov
or
add
mov
es
jne
and
push
add
rolb
loopne
jnp
mov
cmp
or
dec
out
sub
mov
push
mov
aaa
cmpsl
les
sbb
repnz
mov
jecxz
out
push
sbb
dec
push
test
in
push
loop
or
icebp
xchg
cmp
jae
push
aam
cmpsl
pop
daa
imul
mov
stos
call
mov
lds
xchg
lock
mov
or
mov
cs
testl
xor
mov
cmp
mov
mov
mov
adc
adc
pop
sub
stos
testb
and
scas
or
divb
push
push
dec
cmp
xor
add
xlat
pop
subb
mov
inc
mov
and
and
push
js
sbb
sbb
popl
add
mov
ss
fadds
jo
dec
cmp
into
jne
nop
lea
dec
adc
pop
push
push
invd
xchg
popa
xor
popa
jp
push
sbb
out
jae
mov
or
das
lds
xor
mov
mov
pop
add
xchg
push
lds
in
pop
into
mov
mov
shrl
cs
pusha
cmp
jae
cmc
shr
mov
pop
scas
aas
sti
mov
daa
sarl
lret
jb
xor
std
es
inc
xchg
dec
ficompl
mov
addr16
mov
xor
push
hlt
shlb
pop
push
not
xor
neg
cmc
andl
push
jl
daa
cli
push
add
cmp
es
ja
into
xchg
int3
mov
aad
xchg
aas
adc
add
imul
stos
sti
xchg
push
loop
gs
or
es
lds
mov
and
xor
cmpsb
mov
sbb
addr16
iret
or
mov
mov
sbb
pop
add
test
xchg
add
js
pushf
xor
sub
xchg
out
mov
mov
clc
shrb
jne
lea
das
xor
jecxz
test
sub
loop
mov
das
mov
movsb
sub
pop
out
add
jp
icebp
xchg
adc
stc
xchg
cli
pop
mov
sub
scas
lret
xchg
jno
movsb
ljmp
mov
fistpl
sti
add
mov
mov
add
mov
mov
rcr
bnd
mov
imul
jo
sub
sub
mov
sbb
insb
and
inc
adc
add
cmp
clc
adc
out
mov
cwtl
cmp
adc
xor
ret
mov
or
jle
roll
push
leave
jecxz
es
and
insb
add
loop
xchg
pop
xor
dec
out
das
fiaddl
popf
insb
push
int3
nop
pop
lods
inc
pop
adc
mov
leave
sbb
push
inc
or
dec
cld
cmp
dec
pop
ret
lcall
xchg
sahf
pop
enter
mov
add
mov
inc
inc
inc
push
icebp
sub
mov
int3
add
mov
xor
mov
mov
cltd
xchg
in
and
outsb
pop
int
lret
cmc
jo
xchg
inc
mov
jmp
mov
notl
fs
and
movsb
ror
ljmp
cli
dec
xor
mov
pop
push
lds
fisubs
inc
lods
stos
mov
cmp
fbstp
xor
popf
push
fs
stos
inc
xchg
cmp
push
sub
jecxz
pop
sub
scas
dec
xchg
call
aad
xor
push
adc
jle
xor
dec
sbb
sub
inc
ja
pop
add
push
inc
dec
and
movsb
cmp
movsl
jmp
push
bound
mov
adc
mov
dec
std
sub
test
lods
scas
cmpsb
jno
fadds
cmp
adc
lods
je
cmp
fs
adc
js
mov
push
add
inc
and
repz
loop
ret
adc
jae
lahf
lods
aas
pop
test
cld
call
cmp
inc
aaa
sub
xor
and
lods
ja
pop
mov
inc
sbb
jbe
lcall
inc
cmp
push
das
cmp
inc
sti
pushf
fstps
mov
mov
orl
adcb
pop
lds
aad
xchg
shr
ficoml
jne
ss
ds
xor
clc
iret
adc
and
lahf
push
popf
jle
push
loopne
push
rcrl
lods
pop
in
daa
ljmp
jae
and
sbb
xchg
pop
mov
les
js
add
sbb
jae
jo
lcall
pop
or
jbe
push
mov
ret
movsb
or
or
pop
mov
xchg
add
sbb
sub
jns
icebp
cwtl
fistpl
les
jbe
sarb
and
icebp
lods
cmovne
pusha
pushf
aad
cmp
stos
cmp
data16
push
cmpsb
inc
pop
test
mov
les
mov
mov
push
jo
or
add
xor
fistpll
jle
int3
mov
sub
jg
std
jmp
call
pop
ljmp
arpl
adc
ss
fxtract
xor
popl
push
mov
adc
jbe
mov
data16
xchg
cmpsl
push
cwtl
out
hlt
push
test
mov
scas
mov
jecxz
inc
mov
lods
pop
xor
add
fistpl
xchg
xchg
pop
dec
je
dec
fidivrl
mov
xchg
ret
push
adc
jp
inc
cmp
pop
test
xor
sub
daa
dec
cld
or
sub
or
mov
stos
push
add
jns
scas
xchg
loop
mov
nop
pop
fs
pop
rclb
call
rcll
sbb
iret
sbb
push
imul
shlb
pop
pusha
enter
jge
notl
push
mov
cld
mov
push
dec
ret
or
jne
call
sub
or
sub
mov
jno
cs
inc
mov
out
push
adc
mov
outsl
dec
xchg
jle
dec
in
and
ds
ss
cld
jecxz
xchg
pop
sbb
jnp
aad
imul
or
add
hlt
cwtl
lock
jge
inc
mov
add
stc
sbb
insb
cmpsl
mov
sub
add
popf
les
icebp
xchg
rcrl
cmp
ret
xchg
push
stc
repnz
ds
stos
xchg
lret
mov
call
leave
in
sbb
movl
push
test
ret
stc
mov
cmp
adc
loope
test
ret
fs
sbb
dec
movsl
mov
cltd
pop
cmp
ret
xor
sub
out
pextrw
cmpsl
daa
xor
in
pcmpgtd
leave
adc
loope
lret
mov
aaa
ss
aas
xchg
test
xor
movsb
xchg
mov
rclb
and
push
cmp
insl
orl
cmpsl
sbb
and
mov
sub
les
cld
push
or
mov
push
push
pop
push
inc
mov
in
sub
add
fcomps
movsb
add
outsl
fsubrp
je
jp
cltd
or
mov
gs
ficoms
hlt
hlt
in
cmp
inc
sub
pop
push
mov
dec
subl
fs
push
test
ret
repnz
jno
sbb
inc
gs
movsb
loopne
push
adc
arpl
popf
inc
lahf
in
mov
loop
faddl
sub
inc
jle
shrl
outsl
adc
dec
fsub
adc
jae
sbb
aam
shlb
movsb
pop
mov
sbb
cmpsl
cmp
and
push
fwait
jns
inc
jg
stos
jo
ljmp
subb
pop
mov
jmp
cmpsl
stos
xchg
ja
xchg
pushf
je
push
bound
and
or
scas
mov
pop
pushf
scas
inc
jle
scas
lcall
dec
rcll
notl
gs
stos
mov
mov
push
add
aam
inc
mov
rol
cmp
ljmp
fs
mov
sti
mov
sahf
lock
repz
loopne
xchg
mov
sub
cwtl
movsl
std
inc
jns
cmc
sbb
cmp
push
lahf
out
arpl
mov
cmp
sub
mov
mov
cmp
adc
hlt
xor
inc
cmc
dec
xor
adc
push
dec
leave
inc
movsl
add
adc
mov
movl
das
mov
ljmp
shrl
and
loope
jg
scas
fsubl
sarb
pop
pusha
test
mov
mov
ja
or
lods
jo
fwait
and
jmp
mov
xorb
inc
add
movsb
cmp
je
repnz
insb
xor
mov
fld
movsb
inc
mov
mov
xchg
xchg
shr
or
sbb
pop
inc
xor
mov
adc
adc
ss
js
xchg
mov
lea
ret
enter
rcl
xor
test
shl
lock
inc
push
pushf
out
enter
dec
xchg
cmp
into
scas
aam
mov
shl
jbe
mov
mov
xchg
lret
adc
lahf
dec
xor
pop
xlat
mov
push
leave
sub
push
or
in
sahf
lret
mov
inc
test
roll
cmpb
mov
lahf
mov
sub
sbb
xor
cmpb
push
out
xchg
mov
test
cmp
or
popa
push
jo
cld
aam
leave
push
push
in
pop
testb
cmp
cld
xchg
pop
shlb
dec
xchg
xor
sub
cmpsl
int3
jl
bound
jmp
fnstcw
adc
popa
xor
idiv
lds
mov
fs
insb
jle
jg
call
insb
push
cmp
and
test
frstor
mov
mov
in
xor
inc
and
mov
dec
shr
cs
int3
inc
pop
sub
and
or
outsb
xchg
mov
cmpsl
pushf
dec
jmp
in
mov
test
das
add
das
mov
jbe
cmc
shrb
jne
pushf
lds
jg
pusha
xchg
mov
ret
shrb
leave
add
sbb
shr
arpl
movb
cmc
and
jle
fs
lock
dec
push
fmull
sbb
or
test
in
outsb
push
dec
hlt
mull
and
sar
mov
mov
daa
mov
cld
dec
call
jmp
std
sbb
sub
testb
lds
les
xor
mov
bound
notl
jbe
les
adc
push
daa
loop
xchg
sub
pop
stos
movsl
daa
and
mov
xor
push
dec
lds
out
push
sub
outsl
cwtl
xor
pop
test
outsl
xorl
or
fimull
mov
or
imul
test
adc
jno
outsb
mov
nop
xchg
adc
adc
in
sub
cmp
add
lcall
mov
mov
mov
out
mov
ret
sub
pushf
adcl
mov
sbb
xchg
inc
inc
lahf
mov
test
xor
sub
loope
push
bound
xchg
testl
pop
pop
aas
out
fwait
dec
jp
mov
out
mov
jmp
fcmove
sub
jg
bound
adc
sbb
loopne
test
dec
xchg
movsb
adc
out
inc
mov
dec
imulb
iret
jbe
xchg
in
mov
testl
add
repz
xchg
dec
push
xchg
dec
inc
flds
adc
out
jb
test
sbb
sbb
pop
inc
scas
inc
ret
in
add
fistpl
and
pop
jmp
mov
sbb
in
mov
inc
adc
xchg
aaa
addr16
add
je
push
jo
mov
xchg
mov
push
iret
jnp
fwait
sub
das
in
jnp
ficoms
test
stc
mov
mov
xchg
in
imul
loop
roll
mov
xorl
dec
cmp
lret
and
lret
addb
or
jne
cmp
addr16
leave
xor
xchg
xchg
popl
mulb
psubusw
dec
add
adc
adc
jecxz
rorb
stos
adc
cmp
inc
adc
xchg
sbb
gs
test
loope
addb
push
dec
mov
scas
sub
std
mov
pop
fstps
inc
xchg
inc
inc
fwait
pop
shll
in
mov
push
push
lock
adc
shl
dec
inc
mov
imul
mov
push
jne
lcall
xor
lea
fcomps
jo
decl
push
cmp
sarb
fucomp
les
hlt
ret
fcompl
dec
lock
lea
pusha
sbb
stc
in
adc
jl
push
pusha
sbbl
movsb
sbb
or
sub
sar
leave
add
sbb
mov
sub
xor
adc
adc
pushf
dec
test
jns
sbb
push
push
mov
in
std
push
ret
int3
push
out
daa
test
pushf
fnstcw
out
cmp
mov
rcrb
jo
sbb
xor
les
pop
mov
loop
out
xor
mov
dec
push
popa
dec
inc
mov
or
andb
insb
dec
xchg
ja
mov
xor
or
inc
jl
xorl
sahf
mov
xchg
sbb
fstps
aam
add
cmp
dec
adc
loop
xchg
ret
jo
inc
loope
jmp
lds
jb
pop
popa
out
aad
jecxz
and
mov
lds
xor
data16
aam
xlat
mov
xchg
push
add
xlat
dec
and
adc
sub
sub
pusha
and
cli
mov
pop
adc
out
jns,pn
pop
add
add
cmp
loope
pop
xor
mov
jne
in
hlt
sub
mov
adc
clc
push
dec
mov
nop
jge
call
adc
jae
or
and
sub
sub
lods
or
insl
lds
das
pop
iret
sub
pop
out
mov
ret
push
and
sbb
inc
mov
neg
sahf
int3
inc
cld
leave
mov
push
rcrl
mov
cld
scas
xchg
mov
add
xchg
icebp
insl
and
jae
mov
jg
cmp
push
fmul
pop
mov
fcomip
leave
cwtl
cmp
leave
and
or
jns
push
or
lahf
pusha
mov
push
push
jnp
cs
mov
lahf
test
pop
lods
xorb
adc
pop
mov
stc
xchg
or
mov
mov
adc
fidivrs
xor
jno
iret
jge
and
xor
lahf
inc
aaa
test
sti
pop
pusha
and
int3
fisttpl
inc
call
loop
loop
pop
test
mov
mov
or
mov
or
arpl
and
movsb
popa
push
push
clc
jmp
xchg
adc
scas
mov
inc
xor
loope
int
fwait
jg
push
cmp
lret
cmp
mov
mov
and
test
into
xor
stos
fildll
adc
sub
jbe
mov
sahf
cltd
pop
sub
xor
sti
fcom
fwait
dec
and
jbe
xor
cli
clc
xlat
jmp
xchg
aaa
adc
mov
mov
fsts
cmp
mov
jl
rdtsc
mov
or
xchg
in
cmp
lcall
js
and
mov
push
fwait
negb
pop
pop
or
and
fidivs
cwtl
in
dec
adc
sahf
mov
sub
outsb
jb
inc
int3
outsb
jle
mov
cmpsb
in
xchg
pop
mov
fidivs
adcl
jecxz
jle
add
loopnew
dec
int3
aaa
cmp
adc
push
fmul
repz
mov
test
cmp
jns
cmc
and
mov
inc
add
imulb
inc
fs
cmpsb
jns
mov
ret
ljmp
add
inc
or
fdivp
jae
xlat
mov
mov
movsb
mov
jb
cmp
xchg
dec
insl
subb
sub
pop
xor
fildll
imul
lret
mov
loop
add
lods
xchg
pop
out
inc
ljmp
stos
xor
nop
inc
movsl
loopne
mov
js
test
insl
inc
jecxz
adc
call
fwait
dec
int3
xor
aas
jg
sbb
stos
popf
mov
flds
mov
popf
sbb
lea
imul
mov
mov
int3
adc
push
mov
xlat
push
je
into
addr16
and
int3
dec
data16
push
dec
mov
stos
push
sahf
fs
dec
cmp
cmp
lret
pushf
mov
popf
out
xchg
mov
ja
repnz
jbe
push
jmp
int3
aad
filds
dec
dec
lock
sahf
in
add
dec
xor
ja
dec
repz
pop
fists
repz
cli
arpl
rclb
loope
test
sub
mov
js
add
inc
or
mov
xor
pusha
mov
cmc
test
shlb
out
faddl
into
mov
xor
out
pushf
call
xor
xchg
fmul
push
les
mov
imul
repz
int
in
dec
lock
fldt
pop
lods
mov
push
push
mov
divb
xor
push
pop
mov
cli
rol
jmp
mov
inc
sbb
mov
push
lods
sbb
stc
jle
and
cmp
test
ja
and
cmp
mov
add
push
outsl
cmp
cmpsb
mov
adc
add
jne
pop
jnp
cmp
loope
enter
push
cmp
xchg
mov
movsl
sahf
ja
xchg
fnsave
gs
sub
enter
movsb
leave
cmpsb
shl
scas
sub
js
sub
dec
ds
push
mov
lods
adc
pop
inc
jmp
sbb
pop
hlt
cld
sbb
pop
popa
movsb
xor
aas
cmp
outsl
pusha
loopne
adc
cmp
mov
sti
jp
ljmp
jle
loopne
out
out
loopne
mov
mov
int3
sahf
pop
nopl
sub
fisubrs
fisubs
ljmp
in
and
or
pop
cmp
aad
cmpsb
jbe
jne
mov
pop
sbb
xchg
pusha
lcall
imul
pusha
mov
or
jge
enter
imul
dec
push
out
jmp
jp
jecxz
int3
iret
mov
out
jno
insl
xchg
add
scas
in
sub
ror
out
mov
lods
cmc
xor
in
out
mov
mov
jbe
sbb
rclb
push
repnz
mov
cmpsb
fdivl
cltd
arpl
jl
dec
mov
sub
sahf
sti
mov
sbb
add
dec
mov
push
mov
xchg
lret
pop
test
out
std
fmul
mov
cld
dec
into
aas
xchg
mov
jae
mov
inc
adc
or
sub
out
loopne
cmp
pop
cmp
lret
test
mov
ds
mov
fstl
stos
cli
xchg
or
mov
sbb
jle
popa
inc
xchg
cmp
and
fbld
rcl
int3
sub
cmpsl
int
hlt
aad
pop
jg
push
ret
mov
adc
in
inc
inc
xor
or
cmp
sahf
sbb
scas
in
and
add
lcall
adc
push
icebp
sub
inc
xchg
mov
pop
push
jo
shl
fisubl
outsl
cmpb
jg
inc
gs
std
test
xchg
in
xor
lea
pop
mov
lock
cmp
loop
ja
mov
push
movsb
sarl
add
jl
daa
int3
lcall
jae
test
or
std
xchg
mov
test
bound
rcl
jle
cmp
aas
pop
ja
mov
notb
aam
cmpsl
jg
mov
int
add
in
loopne
or
rcrb
and
add
xchg
jne
out
sub
jne
ret
add
adc
inc
in
mov
and
fadd
dec
and
mov
or
xor
push
cmpsb
xchg
ljmp
aaa
and
scas
insl
inc
adc
mov
push
aam
cmp
mov
jno
jb
add
rclb
xchg
and
cmpsl
test
pop
stc
mov
cmc
aaa
inc
rclb
xor
data16
push
cs
ret
inc
dec
ja
repz
pushf
pop
imul
in
es
loope
scas
pop
and
ret
push
mov
push
inc
jg
insb
outsb
andl
add
push
gs
pop
cmpsb
push
je
les
mov
push
into
aaa
sbb
jns
inc
outsl
popf
xchg
adc
mov
ffreep
insl
push
arpl
inc
lock
push
or
or
fdiv
in
mov
xor
insb
es
test
stos
movsl
push
cwtl
pop
sbb
dec
mov
or
repz
mov
leave
jns
sbb
loop
lret
das
cld
dec
mov
pop
sbb
mov
scas
mov
shll
into
out
pop
out
mov
idivb
mov
adc
add
cwtl
stos
ljmp
js
add
cmpsl
inc
pop
ss
push
xchg
out
push
mov
rcl
xchg
std
ret
dec
xor
xchg
decl
pop
push
and
dec
and
or
sub
jmp
push
mov
outsb
jg
xchg
or
inc
outsl
lods
jp
ret
xor
add
mov
pop
jae
sahf
pop
ljmp
orl
xchg
cmp
inc
cli
or
cmpsb
scas
insb
iret
call
aas
mov
cmp
decl
push
pop
adc
leave
pushf
imul
cld
jne
leave
loope
outsb
pop
iret
push
cmp
arpl
ficompl
popf
decb
loop
loope
xor
dec
adc
or
mov
push
cwtl
mov
int3
ds
stc
movsb
jno
lods
xchg
xchg
call
dec
sbb
imul
imul
arpl
ret
inc
setbe
mul
xor
ja
mov
mov
push
out
inc
test
dec
fst
ret
mov
or
mov
mov
and
xchg
push
sub
and
add
aas
jecxz
mov
lret
xlat
pushf
rcrl
add
push
shlb
jmp
lods
loop
out
dec
das
sub
pusha
add
lock
push
cmp
daa
lods
adc
lods
and
faddp
add
pop
dec
or
ds
enter
mov
out
ret
dec
rcll
pop
xchg
pushf
mov
stos
sbb
sub
cltd
aad
push
mov
popf
add
jle
stos
shll
xchg
inc
add
pop
pop
xchg
sub
dec
push
xor
mov
aad
lret
jbe
mov
cmp
adc
sub
ffreep
xorb
mov
ljmp
xor
iret
sbb
leave
inc
or
daa
std
sbb
mov
inc
into
div
xor
fisttpll
add
ja
arpl
fwait
popa
pop
push
cmp
mov
addr16
xor
sub
aas
xchg
or
ds
out
sbb
je
adc
xchg
pop
notl
leave
pop
js
xchg
cld
push
pop
repz
sbb
adc
and
xchg
sarl
ss
jae
or
cmp
aad
scas
pop
xchg
shlb
outsl
mov
adc
sarl
nop
data16
dec
sbb
mov
fprem1
and
inc
mov
ds
orl
push
cwtl
fistpll
andb
movsb
xchg
mov
cltd
mov
dec
sbb
inc
mov
pusha
jae
cmpsl
mov
popf
mov
mov
cltd
mov
cld
int
xor
cmpsl
adc
push
clc
shr
into
mov
sbb
xchg
mov
cmp
sbb
cltd
aaa
sahf
xchg
mov
lea
cmc
xchg
mov
or
lea
insb
xchg
mov
test
jb
sbb
push
cwtl
sbb
in
push
add
jae
xor
cmp
lahf
data16
gs
in
lahf
std
and
inc
in
mov
insb
sbb
icebp
push
mov
test
loope
xchg
shrl
inc
lahf
mov
sub
pop
mov
je
fisubs
cli
xchg
fnstsw
lcall
mov
rcrb
pusha
jns
ret
data16
adc
xchg
dec
cmp
in
pop
sti
mov
adc
pop
movsl
popl
mov
fisttps
cmpsb
adc
pop
lahf
push
pop
xor
cmp
lock
or
lods
popf
cmp
outsl
or
mov
mov
cmpsl
mov
imul
mov
outsl
in
push
cltd
xchg
rorl
jmp
xor
cli
push
in
adc
roll
xor
mov
push
adc
xchg
sub
dec
inc
data16
lret
xchg
pop
or
push
push
xor
loop
ljmp
xchg
inc
cmp
or
push
aaa
mov
and
rcrb
mov
mov
xchg
xor
mov
mov
ljmp
and
arpl
sub
negb
movb
lret
cld
jae
icebp
arpl
pop
ss
sub
fstps
ja
add
test
loopne
iret
cld
and
and
add
sbb
sbb
pop
ljmp
pop
data16
loopne
or
sub
loop
mov
in
sub
cmpsb
mov
adc
imul
lods
push
dec
dec
sub
mov
aas
push
sbb
lea
outsb
data16
add
add
pop
or
sbb
gs
dec
cmp
faddp
ret
and
mov
testl
shlb
loope
pop
outsl
jb
rclw
xchg
shl
push
jne
lret
out
mov
add
adc
iret
mov
pushf
fidivs
into
pop
sub
adc
dec
mov
mov
push
dec
mov
cmp
inc
or
nop
xchg
mov
pop
push
outsb
xor
loope
es
add
adc
adc
pusha
inc
fld
scas
test
push
xchg
cmp
push
je
insl
mov
push
imul
mov
out
imul
mov
in
hlt
sbb
sbb
xchg
dec
in
fs
fbstp
lret
jmp
mov
dec
cmp
push
stos
xchg
out
sub
or
movsb
jecxz
adc
adc
je
mov
push
xchg
jle
xor
in
cli
sbb
rcll
stos
pop
cld
mov
mov
sub
lds
lock
inc
add
out
outsb
ljmp
fistpll
enter
xor
adc
jnp
xor
push
shrb
dec
mov
outsb
gs
jg
aaa
ljmp
cli
test
mov
mov
leave
sbb
cmp
dec
pop
cmp
ror
sbb
movsb
out
adc
addl
mov
cmp
jae
mov
ret
mov
adc
sub
call
jns
add
push
cltd
jl
lea
and
pop
enter
adc
pushf
mov
xor
popf
mov
pop
hlt
out
mov
adc
orb
lock
cmpsl
push
add
subl
in
pop
shr
lcall
xor
data16
dec
pop
mov
mov
add
lahf
and
shl
or
bound
jns,pn
shll
shl
incb
out
inc
scas
mov
addr16
pushf
jg
insb
notb
orb
int
push
xchg
ret
push
xchg
nop
lcall
push
in
or
sub
mov
or
mov
mov
aaa
movb
jns
fistl
pop
dec
imul
cltd
push
mov
out
imul
rol
mov
hlt
shrb
lahf
and
mov
inc
ds
push
inc
push
xchg
add
adcl
lea
adc
mov
and
mov
and
xor
mov
insb
sbb
mov
jp
fbld
arpl
sub
xchg
xchg
or
insl
cmp
rolb
push
inc
mov
pushf
or
or
outsl
xchg
sub
out
js
rcrb
or
mov
out
jo
and
jl
jbe
mov
dec
push
cmp
pop
push
clc
xchg
ficomps
repnz
je
push
adc
imul
subb
ja
inc
enter
fwait
inc
addl
movsl
dec
dec
orl
inc
cmp
fwait
push
sbb
in
or
hlt
lcall
out
push
inc
fwait
xchg
jp
xor
rorb
stos
cmc
sarl
sbb
je
sub
fidivrs
jmp
aad
orl
sub
jg
xchg
cwtl
xlat
into
mov
out
pop
cmpl
xchg
inc
data16
mov
fsub
movsb
test
cmp
xchg
xchg
icebp
loop
pop
out
sahf
dec
and
mov
test
stos
add
in
push
sub
mov
aam
aaa
fisubrl
push
sarl
stos
or
arpl
pop
ret
sub
jge
cmpsb
loope
cmpsb
data16
cmpsb
js
stos
loope
loopne
ljmp
cmc
inc
and
fsubs
sub
jg
jae
shll
mov
shl
push
leave
out
sbbl
scas
jp
les
mov
sub
data16
sub
rcrb
lret
jns
andb
call
xchg
push
or
out
movsb
push
cli
rolb
sub
rep
mov
les
inc
cli
sbb
out
popf
fbstp
movsb
test
leave
jns
imul
sub
test
aas
aam
cmpsl
iret
test
das
sbb
jno
rorl
jns
orl
ret
jp
mov
cltd
lea
rorl
dec
cmpsb
loope
mov
cld
mov
in
cwtl
inc
adc
cmpsl
mov
or
push
sbb
and
pop
push
or
inc
xchg
xor
xchg
mov
mov
in
mov
sub
jb
out
pusha
dec
xchg
ss
cmp
mov
stc
or
lret
mov
movsb
into
leave
sbb
sub
adcl
lock
mov
sub
jnp
pop
mov
xor
xchg
push
outsb
fxch
pushf
data16
push
repz
inc
aas
out
movsl
ds
outsl
xor
cmp
lock
jnp
sbb
lret
gs
mov
insl
roll
push
pusha
cmp
fcoms
add
jl
sbb
mov
sahf
hlt
std
les
and
fmuls
mov
dec
or
xor
in
xchg
mov
xchg
outsb
daa
xchg
and
push
add
ss
jge
xor
loopne
push
sub
or
in
mov
es
or
mov
pop
mov
or
xchg
nop
jmp
jae
loope
stc
sub
push
xchg
mov
jae
es
nop
fsubrs
or
inc
push
in
sbb
xchg
aam
cld
adc
je
pop
mov
and
lret
iret
rcll
mov
push
insb
aam
fwait
xchg
add
push
inc
in
mov
and
jp
add
or
cmp
dec
and
or
dec
mov
pop
and
and
ret
mov
sub
lret
movsl
push
adc
cltd
ret
push
clc
dec
xchg
insb
push
push
jl
mov
idivl
mov
andl
mov
call
push
test
mov
push
shlb
fistps
sbb
jne
push
fcoms
inc
sub
sbb
mov
or
pop
adcl
cwtl
sbb
mov
add
cwtl
lods
push
pushf
cs
xor
push
pop
add
lcall
jg
bound
test
push
pop
and
xchg
sbb
scas
adc
sub
mov
inc
cmp
rorl
mov
adc
xchg
subl
clc
and
xchg
mov
xor
cmp
jo
shlb
sub
loopne
cltd
push
mov
mov
dec
fldenv
cld
fldl
lret
shll
and
pop
xor
fdivrs
int
in
sbbb
lahf
sbb
push
ss
mov
sub
dec
and
jecxz
call
loope
sbb
mov
xchg
cwtl
pop
mov
ret
push
stos
push
lret
leave
lahf
iret
inc
jle
sub
hlt
dec
test
aad
notb
pop
movsb
stos
shlb
pop
cmp
ss
jp
out
jg
mov
push
movsl
aam
ss
andb
cmpsb
adc
jns
sub
cli
add
sarl
mov
aad
sbb
jbe
cmp
mov
sarl
pop
lret
outsl
mov
lahf
mov
lret
inc
pop
cs
cmc
call
stc
xchg
mov
jl
cli
insb
movsl
loope
mov
xchg
mov
shl
jl
inc
andl
mov
cmc
mov
add
pushf
add
sub
aas
lret
cmp
imul
scas
out
xchg
cmp
shlb
iret
rcr
or
in
movsl
mov
ss
cli
fdivrp
roll
push
jo
sti
dec
or
jns
fxch
out
int3
xchg
call
pop
or
add
pop
adc
fiaddl
lock
roll
jns
sbb
jmp
xor
aas
mov
arpl
pop
cli
lcall
lcall
push
cs
jne
push
mov
push
xchg
or
add
pop
sahf
xchg
pop
jbe
jnp
mov
pop
mov
xchg
dec
inc
ss
lds
inc
stos
add
lahf
out
add
icebp
dec
inc
mov
imul
loopne
dec
and
js
jnp
pop
out
jns
mov
xor
adc
rorl
dec
mov
cwtl
fwait
je
mov
cmp
xchg
add
lods
loopne
cmpsl
imul
xor
or
mov
jne
out
mov
inc
adc
jle
mov
adc
pop
jle
fstl
aaa
insb
aad
push
std
xor
stos
sub
cmp
add
push
inc
inc
nop
xor
or
xor
and
hlt
ret
ds
icebp
sbb
dec
sbb
sarl
jno,pn
aas
xchg
lahf
cmp
rclb
dec
add
inc
and
aad
rol
test
icebp
jnp
sbb
cwtl
cmp
pop
mov
data16
iret
ds
mov
je
and
xor
mul
jecxz
leave
xchg
bswap
jmp
adc
sbb
jp
dec
test
out
cltd
mov
xor
int3
fimuls
xchg
lods
inc
adc
cmpsl
fwait
sub
sbb
ret
movsl
sti
pop
xchg
lret
jl
dec
pop
fstpt
add
insl
fsubs
cwtl
cmp
add
pop
dec
aas
scas
sarl
loope
pop
movsb
push
push
xor
fneni(8087
into
cwtl
loopne
and
push
fnsave
cmpsl
mov
pop
imul
sub
add
and
mov
xchg
mov
pop
and
add
and
and
pop
lods
mov
out
cmp
dec
jl
mov
jl
xor
pushl
xchg
adc
sub
testl
out
xor
subl
push
lods
jge
mov
in
cmc
jae
lods
push
fcoml
xchg
outsb
and
stos
scas
xor
and
gs
shr
xchg
xor
je
es
push
pop
lock
in
pusha
inc
sub
xor
test
testb
xchg
adc
sbb
push
push
push
push
je
push
sbb
and
mov
fsubr
sbb
int
cmp
push
sub
jg
cmp
test
xchg
test
xchg
ja
daa
jg
out
inc
adc
xor
pop
push
jae
xchg
mov
mov
jge
movsb
nop
pusha
sub
dec
push
lret
sti
dec
das
xchg
in
in
enter
adc
aam
cwtl
push
sub
jp
mov
push
jns
nop
adc
and
andb
sbb
xor
ja
xchg
mov
leave
aas
mov
add
mov
add
push
movsb
sahf
push
sub
testb
sub
loope
mov
test
pop
or
jnp
out
mov
add
popa
clc
stos
inc
negl
xor
loop
int
jmp
and
sahf
cmp
movsl
mov
andb
fidivl
fsubrs
pop
enter
pusha
lea
mov
je
fidivs
add
mov
es
xlat
inc
arpl
dec
sub
xorb
xchg
sbb
and
clc
adc
push
and
ja
or
popa
stos
into
adc
xlat
notb
mov
mov
dec
xchg
arpl
cmpsb
xorl
lea
nop
cmp
mov
jb
ljmp
mov
fs
or
adc
jg
aaa
mov
push
sahf
cli
enter
cmp
icebp
imul
mov
mov
fstps
iret
movsb
pop
mov
jp
push
flds
in
rorl
lods
sub
add
jp
scas
ds
and
push
lret
repz
cmc
js
out
xchg
mov
add
pop
sahf
dec
mov
mov
dec
stos
xchg
dec
repz
dec
mov
in
iret
adc
pop
xchg
cmp
pop
adc
xchg
das
sbb
subb
rcrb
out
add
adc
cltd
xlat
add
push
or
ret
or
idivb
loopne
and
mov
rcll
rorl
ret
xchg
mov
ds
and
dec
cmp
dec
in
dec
sti
dec
loop
fwait
iret
jbe
mov
jae
in
mov
ja
out
gs
lods
loop
lds
cwtl
lods
xchg
or
inc
pop
mov
mov
cmp
mov
mov
aaa
mov
jnp
mov
pop
lahf
sub
cmpl
stos
loopne
push
xchg
lret
call
pop
xor
test
lret
mov
mov
or
push
into
movsb
xor
jg
and
gs
and
test
cmp
xchg
mov
push
add
loop
inc
jne
mov
dec
push
outsb
xchg
sub
jg
aaa
cwtl
in
dec
loopne
lret
and
fdivrs
notb
fimull
lcall
roll
into
repz
ret
mov
and
jmp
pushf
jo,pn
pushf
nop
add
int3
cltd
pop
stc
stos
xor
lea
repnz
xor
in
and
mov
adc
pusha
mov
mov
shll
sbb
pop
ljmp
mov
cld
bound
jecxz
sbb
pop
dec
mov
bound
out
push
ret
xor
cld
mov
repz
jge
pop
fisubl
neg
push
sti
loopne
ffree
dec
jecxz
aad
or
stos
and
subb
in
rorb
mov
mov
pop
fadds
pop
sbb
aaa
sub
shll
les
fsubrl
jle
or
xchg
fucom
mov
push
into
jae
or
add
outsb
sbb
sbb
test
pop
and
movsb
xchg
mov
cltd
add
xchg
popa
test
xchg
push
int
repz
xchg
sbb
jb
lret
push
shlb
movsb
xor
int
enter
or
ret
push
in
std
sub
fstpl
cmp
push
dec
sbb
push
push
sbb
sbb
lock
dec
sbb
fwait
loop
cmp
int3
out
push
inc
fldl
adc
insl
pop
ds
mov
iret
adc
pop
test
adc
adc
adc
mov
daa
pop
pop
inc
cmpsl
loope
dec
iret
sahf
bnd
adc
inc
lods
sub
enter
push
aas
adc
ljmp
xchg
cmpsl
pushf
ret
inc
ds
mov
dec
hlt
dec
loop
cmp
inc
adc
jnp
mov
icebp
out
push
jle
cmp
movsl
push
outsb
cmpsb
arpl
shlb
dec
aad
stc
leave
insl
xchg
test
cmpsl
xor
mull
add
adc
add
xlat
stos
scas
loop
lahf
add
push
and
rcr
mov
add
xchg
and
test
mov
loopne
add
xchg
shlb
popf
jp
fs
jmp
es
out
fldl
sub
fwait
imul
mov
xchg
ja
mov
mov
sti
test
xchg
add
sbb
jbe
jb
iret
lods
mov
push
inc
stos
outsb
fisubrl
imul
dec
jne
dec
push
add
ret
mov
ds
iret
gs
adc
cmpsb
pusha
outsb
into
xchg
repz
inc
lahf
xchg
pop
mul
stos
inc
in
pop
or
rcrw
mov
xor
cwtl
pop
lcall
and
push
nop
mov
inc
jg
pop
les
mov
fstpt
nop
mov
inc
cmp
hlt
cmpsl
outsb
fistps
mov
les
push
jp
aaa
aas
mov
stc
sub
sbb
mov
adc
jbe
pop
mov
stos
xor
pop
sbb
mov
pop
popa
push
or
xchg
dec
xchg
cmpsb
xor
cmp
je
inc
add
insb
mov
hlt
dec
test
movsl
orl
out
pop
or
xchg
cmp
inc
jmp
jo
mov
mov
cwtl
fdivl
cmp
sbbb
sbb
mov
stc
sbb
pop
clc
in
decl
cmp
sbb
mov
dec
inc
insb
hlt
adc
data16
fwait
dec
adc
cmp
shll
sti
push
loopne
daa
pop
dec
es
jae
sbb
jae
and
out
lock
xchg
fists
xchg
push
test
test
dec
push
push
shlb
movsb
dec
push
sub
jecxz
pop
imulb
add
lea
mov
pop
lods
jns
mov
ss
test
imul
fisttpll
mov
mov
sub
cmp
sti
loopne
mov
js
addr16
cltd
out
add
lods
pusha
imul
sbb
sti
xchg
mov
stc
in
daa
out
push
mov
scas
fs
dec
leave
pop
dec
aas
ret
add
pop
or
les
rorb
mov
dec
int3
test
mov
mov
pushw
push
out
lret
mov
sub
push
mov
loope
ret
adc
adc
fisttps
xchg
movsb
jg
shrl
test
push
add
cmp
lods
into
mov
cmp
and
lds
jl
into
popf
in
sbb
sbb
or
shlb
fmuls
mov
xchg
and
push
mov
mov
dec
or
xor
cmc
lods
js
inc
xchg
test
xchg
pop
fisubrs
stos
jecxz
and
sahf
adc
sub
movsl
push
adc
pop
loop
mov
insl
outsb
in
push
pop
stc
mov
aam
push
push
loopne
aam
in
mov
shlb
in
test
mov
in
push
mov
inc
xchg
repnz
rol
cmp
lcall
das
xchg
out
inc
jecxz
pop
xor
mov
stos
fimuls
movsb
add
mov
insl
clc
xor
sti
lods
mov
sti
sbb
sub
into
mov
frstor
mov
and
gs
jb
xor
pop
data16
xchg
sub
xchg
loopne
sahf
sbb
cwtl
xlat
pop
cmp
imul
out
dec
mov
or
loopne
jns
mov
leave
push
scas
ret
aaa
lcall
insb
imul
es
pushf
pop
lcall
subl
sbb
or
push
js
fwait
call
fisubl
jmp
cmp
lcall
xlat
push
fidivl
lret
adc
xor
test
pop
in
adc
je
xor
aaa
dec
push
push
push
ret
gs
xchg
mov
cwtl
sbb
arpl
mov
pop
test
int3
mov
js
cmp
and
out
inc
clc
xchg
rorb
lods
test
cld
lods
out
fistpll
and
add
mov
sub
mov
imul
mov
por
ret
hlt
cmpsb
push
xchg
cli
out
ret
ja
les
mov
aas
sub
mov
inc
mov
std
sbb
pop
xchg
test
xchg
in
popa
arpl
loop
in
jecxz
fs
dec
and
inc
push
ds
cmp
ds
and
sub
inc
push
push
and
mov
adc
jmp
push
test
fsub
imul
imul
gs
rcll
bound
dec
out
jae
lods
push
mov
loope
mov
rolb
popf
or
ja
jl
xchg
and
mov
push
jae
dec
or
jbe
pusha
shrl
pop
add
mov
mov
je
loopne
mov
mov
jecxz
lahf
out
mov
adc
movsl
jp
sbb
mov
sbb
fisttps
mov
jmp
popf
inc
dec
inc
insl
and
movsb
ffree
mov
dec
pop
dec
addr16
push
iret
popf
mov
cmp
xchg
aam
dec
push
or
jno
fwait
mov
shll
xchg
cmp
popa
jns
inc
dec
mov
push
and
cmp
outsb
push
rorl
lret
mov
sub
mov
shll
pop
sarb
mov
xor
gs
inc
mov
cmpb
jno
mov
ljmp
out
jo
cmpb
adc
pop
imul
xchg
jne
sbb
test
inc
adc
mov
inc
loopne
sti
subb
and
test
out
sub
ds
cld
lock
xor
add
mov
inc
jae
pop
cmp
data16
bound
xchg
add
sub
push
adc
in
pop
in
jbe
pop
pop
mov
ja
js
xlat
push
loope
ret
or
adc
popa
hlt
xor
dec
imul
mov
xor
stos
xchg
test
sarl
idiv
jns
sahf
inc
arpl
add
cmp
and
add
cld
mov
cmp
imul
loop
pop
stos
sbb
movsl
lcall
xor
mov
int
adc
cmp
test
jns
and
sbb
fs
loopne
and
and
adc
imul
jae
xlat
mov
call
sub
push
push
adc
push
jo
xchg
jno
sbb
pop
add
imul
and
xor
es
sbb
js
mov
or
xchg
inc
outsb
sbb
sbb
add
data16
jb
daa
mov
push
mov
aad
push
leave
fnstcw
and
dec
pop
lods
movsl
test
dec
enter
inc
and
add
push
cmc
xchg
pop
sub
outsb
adc
out
mov
sbb
sub
daa
pushf
sbb
loop
daa
push
movl
lds
addr16
mov
cmp
enter
mov
loope
jg
rolb
imul
dec
or
xor
push
add
repz
jp
sub
add
add
cld
mov
xchg
xchg
sbb
and
imulb
ljmp
sub
inc
sub
push
push
fxch
push
pop
mov
push
lock
mov
pop
leave
into
dec
xor
mov
or
xor
loopne
shl
cmp
sbb
mov
mov
mov
jns
mov
dec
sarb
pop
mov
fiadds
pop
hlt
sub
xor
jb
lcall
clc
dec
shlb
out
std
jp
adc
inc
mov
adc
and
orb
stc
jnp
arpl
dec
push
pop
push
and
scas
popf
mov
mov
mov
hlt
pop
ja
les
push
leave
pop
movsl
cmp
jg
xchg
pop
sub
xchg
jne
sub
out
sbb
pop
lahf
insb
lea
add
fnstenv
cmp
mov
test
lret
jne
xor
call
test
xor
sbb
sub
xchg
vphaddubq
aaa
pop
cmp
dec
jecxz
inc
sub
outsb
add
mov
in
mov
xrelease
das
push
outsl
add
push
inc
add
push
push
push
fdivrs
stos
fisubrl
xchg
lret
mov
aam
pushw
inc
pop
neg
loope
mov
pop
or
push
mov
stc
clc
pop
imul
fistl
orl
pop
mov
imul
pop
mov
xchg
xchg
jno
jns
pop
mov
outsb
out
test
rcr
dec
imulb
je
sub
repnz
cmpsl
imul
lcall
or
in
lods
cltd
pop
add
jnp
mov
cltd
jo
pop
xor
push
andl
ja
add
imul
shrb
aam
inc
sbb
loop
and
xchg
inc
stos
add
stos
jns
fs
pop
lahf
ss
cmp
xor
cwtl
add
mov
xchg
test
outsl
stos
sub
shrl
pop
sub
push
test
test
xlat
rcrb
leave
push
and
and
test
push
lahf
mov
jp
cmpsb
dec
fildl
movsl
test
loopne
ret
push
dec
ja
mov
out
inc
out
std
push
popf
cwtl
jl
xor
add
aaa
into
xor
push
jbe
insl
pop
and
inc
imul
aad
and
ja
int3
stos
adc
inc
xchg
scas
mov
push
in
hlt
mov
jp
jnp
mov
cltd
hlt
test
divl
jg
push
mov
mulb
cmp
sub
leave
dec
aaa
and
rorb
jns
pop
pop
cmp
std
cmpsl
mov
enter
subb
shl
pop
popa
scas
jb
xchg
fmulp
je
xchg
rolb
enter
pop
mov
out
mov
sbb
mov
pop
dec
cmpsl
dec
jecxz
mov
push
ss
test
mov
scas
xor
cmp
mov
pop
inc
loopne
ret
insb
enter
and
xchg
leave
jg
adc
or
or
enter
std
cs
xor
lea
or
les
push
sbb
pop
mov
out
adc
inc
xor
je
adc
ds
or
jp
dec
mov
or
add
pop
dec
cs
loop
dec
test
sub
pop
jge
stos
inc
lret
or
dec
mov
jae
out
mov
cmpsl
in
lret
cmpsl
in
push
out
testl
mov
data16
jecxz
gs
mov
cmp
in
testl
cmp
and
addr16
sti
rep
mov
dec
and
sahf
out
adc
xchg
ret
push
popa
adc
dec
rol
fistpl
push
mov
in
sub
fwait
push
loopne
fs
mov
leave
xor
dec
xchg
pop
lcall
loopne
mov
inc
movsb
insb
xor
data16
vmovapd
or
cmp
cmp
test
inc
mov
xchg
aaa
push
jno
inc
xchg
loope
into
dec
or
stos
or
xor
icebp
arpl
popa
out
arpl
mov
adc
xchg
push
xchg
test
mov
adc
popf
cmp
fldt
inc
js
daa
clc
and
push
xchg
negl
push
dec
lret
xchg
dec
mov
mov
int
aas
pop
and
je
out
jl
push
movsb
mov
mov
xor
pop
mov
shl
dec
push
movsb
cmp
lods
sbb
shlb
subb
das
sti
sbb
jl
xor
outsl
pand
push
sbb
pop
add
movsb
or
arpl
shlb
mov
inc
sub
jp
ret
or
lcall
xor
dec
ds
xchg
test
cmp
adc
and
bnd
imul
imull
jle
push
or
insb
mov
pop
and
xchg
xor
call
into
into
xor
aas
lahf
xchg
mov
adc
or
jmp
gs
push
incl
or
xor
or
rcl
xchg
outsb
add
imul
push
mov
jle
adc
arpl
xor
and
in
dec
push
shrb
jns
mov
push
hlt
push
dec
mov
lds
hlt
sbb
lds
daa
jne
test
scas
jmp
sub
xor
push
cmc
lcall
or
insb
call
scas
cmc
adc
inc
out
xchg
loopne
clc
std
and
adc
ss
test
or
xor
xor
in
jmp
mov
ss
sbb
stc
das
sbb
jns
sbb
or
mov
loop
adc
mov
xchg
cmpsl
flds
xor
stc
lock
daa
je
jae
jp
xchg
addb
fsubr
out
orl
and
iret
pop
mov
repz
ret
mov
or
shlb
loopne
dec
xorl
pop
xchg
pop
movsl
push
aam
rcr
and
loopne
lcall
push
std
ret
and
fisttpll
js
shl
loop
inc
inc
in
dec
sub
mov
push
loopne
dec
mov
xchg
inc
push
adc
icebp
repnz
push
testl
xchg
rcrb
add
dec
in
jb
push
and
mov
pop
aam
popa
les
aaa
jnp
test
stos
push
push
mov
inc
aam
sub
mov
out
add
sbb
cmpsb
imulb
sbb
jecxz
adc
xor
nop
or
jge
cmc
js
mov
flds
into
push
cmp
fcomi
loop
test
xor
loopne
movsl
in
jmp
les
pop
inc
xor
dec
scas
subb
ljmp
and
mov
or
call
jg
mov
leave
or
inc
adcl
xchg
dec
mov
daa
fwait
lret
mov
jae
inc
lds
aas
cwtl
clc
lods
insb
pop
adc
inc
mov
sahf
sub
or
inc
xor
pavgb
or
inc
xchg
mov
mov
lods
imul
jbe
ja
sbb
add
xchg
dec
mov
jbe
sbb
adc
rolb
gs
pop
data16
loop
add
test
lock
adc
push
push
out
adc
cmpb
lahf
data16
adc
mov
lret
test
hlt
lds
fimuls
cltd
cld
sbb
push
xor
xchg
jl
xchg
in
shrl
cmp
shl
push
in
outsl
adc
sub
mov
jp
jmp
call
popa
sub
ljmp
icebp
add
js
bound
sahf
push
mov
orl
outsl
and
adc
cmp
push
lret
or
inc
imul
loopne
shr
hlt
sub
stos
fwait
rcll
fistps
fstps
inc
jnp
les
fcoms
pop
adc
inc
jnp
or
lods
jae
dec
mov
ret
ret
fnsave
push
aaa
mov
pop
pop
ret
jg
bound
repnz
popa
sti
lods
push
addl
dec
popf
xchg
icebp
pop
daa
sbbl
jge
movsl
stos
and
stos
xor
jmp
test
mov
fwait
mov
sbb
sub
test
sbb
push
push
cmc
mov
inc
dec
dec
xchg
dec
add
shll
xlat
jo
xor
sahf
jg
dec
pop
xorb
insb
lret
xor
sub
mov
xchg
repz
mov
loope
outsb
repz
ret
or
mov
and
lea
cmpsl
mov
or
xor
arpl
pop
cmp
adc
dec
ss
stc
pop
sub
popa
les
into
add
mov
or
mov
mov
sbb
push
test
in
repz
mov
sbb
clc
fiadds
or
cmpsb
mov
mov
pushf
push
fwait
std
daa
loopne
js
cmpsb
mov
xchg
inc
xchg
fs
sbb
daa
popa
cmp
notb
ret
test
inc
push
adc
mov
inc
xchg
rorl
jnp
push
ret
outsl
subb
aad
sarl
lods
push
push
stc
roll
jb
sub
and
mov
add
std
xchg
out
outsb
negl
dec
mov
pop
pop
inc
int3
shll
out
add
xchg
cmpsb
cltd
xchg
sub
mov
aad
movb
or
or
mov
jecxz
lods
mov
mov
adc
jnp
inc
cld
in
call
loop
xlat
sti
in
int3
lds
inc
mov
repz
and
pop
cwtl
mov
out
inc
xchg
cmp
or
mov
test
icebp
mov
mov
mov
and
pop
jge
les
fldcw
jnp
cmp
flds
and
xor
cmp
adc
test
or
xchg
push
pusha
js
or
and
sbbl
add
xor
gs
outsb
sub
and
mov
sub
and
shrb
movsl
mov
push
xor
js
xchg
push
jbe
in
test
or
dec
pop
test
sahf
cltd
mov
push
notb
addl
and
push
cmp
addr16
adc
dec
push
and
ds
subl
push
inc
add
out
and
movsb
in
sbb
mov
cltd
jmp
pop
xchg
xchg
and
rcl
xchg
sbb
or
sarl
mov
sti
xor
pop
xor
fiaddl
sbb
sbb
mov
loop
pop
enter
inc
cmp
jae
repz
xor
fisubrl
sbbb
inc
leave
jae
mov
xchg
cmpsb
push
mov
sub
mov
mov
cmp
and
ret
vmulss
adc
out
cmpb
dec
popa
out
mov
adc
adc
loop
inc
xor
xlat
arpl
jmp
fists
inc
mov
stc
std
jle
out
mov
pop
pushf
push
cld
scas
pusha
add
and
stc
loope
stos
and
and
fwait
stos
test
mov
jge
pop
repnz
fisubs
cld
gs
and
lods
in
adc
stos
ret
mov
enter
scas
scas
out
scas
mov
mov
mov
leave
jo
cmp
adc
jnp
mov
cmpsb
push
aad
loopne
fdivrp
mov
mov
pop
into
lea
xchg
scas
aam
mov
pop
sub
jecxz
add
adcb
insl
sub
inc
sub
jge
faddl
jns
daa
data16
cmp
ret
xor
sbb
sarl
mov
lds
or
scas
aam
push
cltd
mov
push
push
test
jns
jno
jmp
sbb
push
mov
adc
and
rorl
jmp
mov
ds
and
lcall
adc
inc
icebp
inc
and
adc
repnz
add
fwait
adc
mov
jmp
mov
xlat
adc
dec
pop
sbb
stc
sub
andb
cmp
pop
loop
jno
mov
inc
mov
adcb
pop
sub
clc
notb
lret
cmp
or
sub
orb
test
mov
shl
cmpl
testl
pop
mov
mov
adc
loope
dec
mov
jg
add
pop
clc
or
jae
lret
repz
ficoml
aam
aad
repnz
lret
or
mov
pop
jg
xor
pop
jmp
cmp
mov
or
inc
ficoms
enter
mov
push
pop
scas
das
psubusb
outsl
mov
fdiv
jb
inc
ja
inc
rcrl
mov
fwait
xchg
nop
or
cmpb
daa
sbb
aas
cmp
xchg
push
xchg
or
std
pusha
sar
and
stos
push
nop
out
push
sub
fisubs
lret
mov
clc
push
fisttpll
and
jge
test
cs
js
lods
cmp
int3
mov
add
add
add
mov
mov
inc
std
xchg
push
mov
xor
repz
push
sbb
xchg
mov
les
inc
and
cld
rclb
mov
pop
and
jbe
pop
cmp
or
fisttps
int
mov
cwtl
inc
adc
cmpsb
mov
adc
add
test
je
lods
mov
push
add
xchg
fldl
pop
lret
insb
xchg
dec
sti
or
or
push
addb
clc
es
arpl
es
mov
xor
dec
pop
mov
jecxz
inc
xor
jl
jge
mov
cmp
mov
in
fnsave
jbe
sbb
mov
daa
dec
test
inc
test
and
inc
aam
out
adc
and
xor
ret
push
or
stos
jns
jns
mov
ss
arpl
test
add
ror
cli
dec
cld
push
test
out
lods
scas
and
push
fs
cltd
add
pusha
xlat
xchg
mov
sub
add
rcrl
xlat
insl
cmp
lcall
iret
inc
mov
test
bound
je
ffree
das
cmp
das
pop
test
enter
xchg
push
ljmp
sbb
jae
scas
clc
shlb
icebp
jo
call
fsubs
xchg
or
xor
loop
mov
mov
std
addr16
jb
xor
pop
xchg
call
into
mov
jle
mov
add
jno
pop
and
lock
dec
mov
shlb
in
inc
jo,pn
aas
pop
ret
xor
add
add
fisubrs
ret
bound
bound
in
or
das
mov
fnstcw
ljmp
out
inc
add
mov
arpl
jno
in
insb
jne
mov
movsl
xor
movsl
mov
mov
mov
push
test
sahf
shlb
ss
ds
adc
dec
mov
aas
jo
call
cwtl
jno
cmc
mov
loopne
out
fadds
xchg
xchg
cmp
cmp
in
jbe
int3
dec
sbb
test
jns
push
dec
dec
shrb
stc
push
addr16
jne
or
add
mov
cmc
gs
pop
xor
pusha
xor
idivl
push
add
xchg
cmpsl
repnz
jno
jnp
push
mov
inc
adc
cld
mov
fwait
cld
out
pushf
hlt
jo
xorl
mov
imul
dec
xor
pop
jl
xor
pop
fdivl
cmpsb
xchg
in
and
popf
dec
inc
das
or
dec
test
push
stos
push
ret
popa
dec
and
pop
push
je
xor
aad
lods
inc
insl
mov
lods
loope
out
add
enter
mov
xchg
xlat
aas
xchg
push
push
int3
xchg
sbb
sbb
in
sbb
pop
ret
jne
push
cmpsb
mov
or
pop
mov
call
xor
push
jecxz
xchg
ljmp
xchg
mov
or
pop
inc
push
or
xchg
jne
xor
mov
aas
test
test
sub
xchg
jno
rorl
pop
movsb
subl
mov
inc
jne
ret
sbb
hlt
dec
jno
jle
jno
pop
jno
or
push
xchg
sbb
xor
pushf
cmp
repz
popa
mov
jb
add
icebp
iret
xchg
mov
fistps
daa
int3
test
jb
lcall
adc
and
in
lret
insl
push
loop
pop
sbb
inc
mov
fidivrs
icebp
nop
call
adc
xor
outsl
jns
xchg
inc
clc
mov
xchg
pushf
mov
test
nop
mov
fwait
stos
adc
ror
cmp
lods
mov
addb
leave
aam
adc
sbb
dec
lods
dec
cmpsl
addr16
dec
lods
cs
jg
lods
das
mov
jbe
and
jbe
aas
loopne
lods
adc
iret
jae
push
inc
into
push
dec
xor
sbb
out
int3
jp
mov
and
outsb
notb
fstl
in
adc
outsl
jp
or
add
dec
loopne
out
mov
pusha
push
adcb
notb
add
or
xor
pop
iret
inc
subl
jl
shlb
int3
arpl
or
xchg
lcall
mov
stos
sbb
sub
push
out
cli
cmc
loopne
int3
mov
insl
cmp
xorb
xorl
dec
cmp
or
dec
cld
lret
jmp
or
aaa
outsb
pop
fmul
fmuls
push
bswap
loopne
xor
mov
aad
std
or
jmp
es
or
ljmp
pop
sub
loop
pop
std
cmp
js
xor
addr16
jg
adc
sbb
icebp
data16
shlb
xchg
xchg
pop
mov
mov
lods
pop
sbbl
push
xchg
sbb
arpl
lods
dec
out
outsb
or
aad
aam
xor
mov
lods
inc
and
call
inc
pop
xchg
jno
out
jge
pop
dec
roll
arpl
loopne
add
popf
sbb
rcl
sub
loopne
mov
mov
in
adc
jmp
xchg
nop
lods
movsb
cmp
push
jae
xor
push
shll
sarb
push
xchg
rclb
jp
pop
scas
pop
out
lds
xor
jnp
je
and
loope
sbb
xor
dec
test
es
lahf
aam
and
popf
orl
mov
cmp
jnp
jbe
or
push
xchg
sbb
jp
in
or
lahf
rcll
adc
xor
inc
fcmovne
push
sub
jnp
es
mov
lea
mov
mov
int
repz
xchg
xor
stos
lcall
sub
popa
jb
sub
repnz
push
xchg
mov
data16
rcr
inc
cmp
ret
adc
adc
test
jnp
push
cltd
sub
adc
pop
add
adc
mov
mull
inc
or
sub
aas
and
mov
outsb
rcrl
push
inc
es
nop
and
jmp
aad
xor
leave
mov
aam
test
push
sbb
js
pop
icebp
ja
mov
add
jmp
mov
sti
xchg
xchg
imul
or
shl
inc
mov
arpl
add
jbe
out
and
or
insl
mov
fidivs
inc
lss
pop
jecxz
xorb
rolb
or
pop
sti
sbb
lret
cmc
mov
cmp
es
ds
jbe
out
cli
rcrb
jb
sarb
jmp
mov
test
mov
rcll
and
sub
std
imul
adc
mov
cmp
pushf
jb
and
stc
dec
mov
dec
adc
xor
add
pop
stc
mov
sbb
sub
mov
sbb
sbb
insl
ljmp
jo
jp
push
xor
dec
fnsave
and
xor
mov
mov
in
sub
daa
jle
in
cld
fxch
ficoms
xchg
adcl
stc
jno
xchg
sbb
xchg
clc
out
pop
mov
pop
mov
sub
push
loop
rcrb
sarl
mov
xchg
mov
ljmp
in
jo
clc
mov
insl
xchg
xchg
adcl
cli
sub
aaa
mov
cmp
int3
mov
scas
inc
xchg
rcll
add
ljmp
adc
pushf
pop
cmpsl
add
mov
fcomps
cli
mov
cmp
jp
stc
push
xor
fwait
dec
or
inc
les
scas
pop
test
xchg
pop
xchg
xorl
imul
loope
sub
push
in
sub
outsb
int3
jg
push
cmc
xchg
fdivrs
test
scas
jmp
sbb
jle
xchg
je
inc
push
mov
mov
xor
out
cs
dec
inc
fwait
cmp
inc
and
and
dec
mov
inc
pop
adc
out
push
push
lcall
push
lahf
cwtl
je
lods
aaa
inc
and
ret
cmovg
dec
add
scas
sar
cwtl
mov
scas
rclb
out
and
mov
dec
inc
fcmovnu
add
add
out
sub
lods
xor
out
and
jmp
mov
push
adc
mov
cwtl
xlat
popa
cmpsb
icebp
jmp
mov
push
decb
sbb
push
leave
pop
adc
stc
outsb
das
add
and
dec
jnp
ljmp
jns
push
dec
mov
cmp
cwtl
mov
or
sub
data16
fld
push
out
inc
xor
sbb
xor
xchg
sahf
push
scas
outsl
shll
cwtl
iret
mov
mov
jmp
div
iret
mov
out
jno
aam
sahf
adc
mov
les
xlat
jge
lds
mov
stos
ljmp
add
pusha
cmpsl
insb
hlt
imul
es
cmp
and
adc
jnp
pop
or
push
int
fdiv
push
push
insl
idivl
add
adcl
loopne
and
icebp
xchg
call
loop
xchg
in
std
jp
lahf
pop
jnp
xchg
test
dec
orl
lods
sub
or
add
ja
and
loopne
loop
leave
sbb
mov
or
in
fisttpll
outsl
cmpsb
in
cmp
pop
addr16
cmp
sub
add
pop
sbb
rclb
cmp
jns
jne
outsl
mov
cmp
int
xorb
push
pusha
scas
inc
dec
icebp
mov
push
cli
sahf
shrl
mov
pop
es
mov
fmull
pop
fsubs
jns
cmp
out
or
push
mov
sub
mov
nop
jno
hlt
into
pop
es
xor
xchg
cwtl
jl
and
xor
data16
cld
dec
leave
pop
popa
fstp
and
mov
daa
sbb
loopne
push
fistl
xor
mov
out
gs
mov
or
jle
push
xor
mov
repz
xchg
cli
int
popw
testl
mov
push
mov
mov
cmpsl
fisubl
pop
mov
rcrl
iret
adc
mov
adc
lods
add
xchg
pop
cmp
fsts
sahf
xchg
dec
insl
jl
jbe
mov
pop
pop
dec
leave
je
enter
dec
push
adc
outsb
pop
pop
xchg
ret
cmp
popf
pop
int3
jl
mov
fwait
out
shl
leave
ficoml
pop
loope
adc
jnp
mov
or
scas
jnp,pt
in
and
stc
ljmp
mov
sbbl
add
fbld
popa
mov
jmp
adc
adc
in
jno
rcrl
je
mov
mov
dec
pop
sbb
into
popa
lret
adc
mov
lahf
lock
test
push
cmp
cs
mov
pushl
mov
push
adc
in
cmc
xor
stos
nop
test
push
or
push
cmp
mov
xor
fsubrs
sbb
pusha
ds
enter
and
mov
sti
daa
jnp
xchg
sub
ljmp
cld
xor
dec
xor
add
jo
or
dec
orb
pop
inc
js
ret
outsl
rol
push
out
pop
dec
mov
jo
push
xchg
out
movsb
or
mov
out
shrb
pop
pop
gs
or
cmpsb
push
jae
ja
dec
cmp
sbb
xlat
fisttpl
int3
mov
add
mov
pop
xor
jnp
mov
adc
cmp
mov
or
rcll
or
outsb
push
adc
in
out
mov
in
divl
inc
inc
push
sbb
jne
js
add
rol
push
mov
or
push
popl
pop
xchg
jnp
imul
xchg
filds
outsl
fmuls
pop
aaa
das
popf
fists
dec
push
int3
xor
cmp
push
idivl
adc
lret
inc
popa
lcall
or
insl
push
cmpsl
mov
lret
dec
inc
cmc
iret
and
push
daa
xchg
jg
mov
enter
push
jl
je
inc
and
pop
cld
mov
pop
lret
pop
cmp
inc
and
mov
push
pop
xchg
push
add
aad
or
push
lahf
mov
repz
add
inc
fbstp
mov
mov
in
inc
sets
xor
out
mov
xchg
cltd
and
addr16
sub
in
cmp
sbb
test
xchg
and
outsl
pop
mov
pusha
adc
pop
dec
ljmp
push
mov
pop
and
je
outsb
jnp
andb
mov
push
sub
aad
mov
cltd
add
xlat
sub
cmpb
shrl
mov
imul
das
xor
xchg
fdivrs
jecxz
mov
repz
outsl
push
inc
outsl
ficomps
mov
jbe
sbbl
pop
jb
int3
dec
mov
in
add
cmp
inc
jo
mov
mov
lds
insb
in
clc
je
outsl
mov
ljmp
adc
or
push
mov
imul
out
jp
cmp
cmp
sar
ja
stos
mov
mov
aaa
in
dec
add
test
push
mov
sbb
fisubrs
je
loop
xchg
inc
xor
std
adc
mov
arpl
inc
das
repnz
popa
clc
dec
out
iret
lret
cmp
mov
or
aas
cltd
das
outsb
inc
icebp
imul
andl
dec
add
scas
mov
sbb
add
test
or
pushf
pusha
xchg
and
addl
lds
js
inc
rcr
ja
add
pop
push
adc
add
jecxz
push
cmp
push
fnsave
add
sbb
xor
mov
mov
inc
adc
dec
popa
fwait
cmp
cmp
jne
mov
adc
or
sbb
mov
adc
pop
cmp
shl
aaa
outsb
jmp
scas
and
lea
cwtl
ljmp
push
pop
test
push
arpl
xchg
xchg
gs
cmc
sahf
jb
or
mov
aam
xchg
cltd
pop
pusha
lret
pop
mov
adc
add
dec
xchg
getsec
xchg
fisubs
in
adc
pusha
hlt
in
mov
aas
shrl
daa
fucomi
jmp
cld
push
pop
xor
ljmp
dec
out
lods
sub
test
adc
out
or
sbb
nop
lock
mov
push
in
xchg
sti
into
aaa
in
fwait
mov
xchg
imul
out
inc
in
pop
mov
jae
dec
mov
clc
xor
adc
mov
insl
jmp
jae
xchg
sbb
arpl
stc
dec
pushw
and
in
pop
cmpsl
fisttpl
inc
popa
sub
mov
or
in
pop
fxch
dec
pop
mov
mov
jb
ret
cltd
mov
insb
jae
enter
pushf
adc
aas
sti
insb
test
jge
or
popa
scas
push
jle
xor
inc
ficoml
mov
or
and
iret
pop
cmpsl
stos
sbb
ret
fstl
inc
sar
jb
out
pop
dec
mov
mov
hlt
stos
push
sub
cld
pop
jmp
test
test
hlt
aaa
jmp
push
mov
movsb
adc
test
jns
jns
dec
scas
insb
ds
stos
and
aaa
jne
mov
dec
rcl
dec
adc
ljmp
mov
push
pusha
mov
push
dec
and
insb
out
test
roll
add
cmp
jno
outsb
lea
vpmacssdql
inc
mov
pusha
repnz
cmc
add
push
mov
bound
inc
adc
fsub
sbb
cmp
pop
pop
loopne
movsl
addr16
ficomps
xor
repz
repz
cmc
mov
in
jb
pop
icebp
call
mov
insb
movsl
fisttpl
mov
adc
hlt
stos
outsl
jge
xchg
dec
pushf
mov
mov
jmp
bnd
and
xchg
mov
cld
cmpsb
fistl
ss
xor
inc
jmp
jp
das
push
imul
xor
lods
pusha
add
loopne
fisubrl
pop
scas
or
xor
add
xor
add
xor
lret
push
insl
in
push
mov
out
scas
pop
mov
pop
pop
xchg
mov
orb
sub
mov
xchg
pop
dec
and
adcl
fwait
lret
subl
or
mov
mov
mov
mov
mov
bound
pop
cmp
pushf
and
jo
sahf
aas
cmp
sub
ja
fwait
inc
cmp
jge
ja
loop
into
dec
inc
and
mov
mov
jg
cmc
or
pop
popf
es
cld
fisubrl
out
sub
mov
push
jp
push
push
sub
cmc
xchg
pushf
sbb
enter
dec
mov
push
sahf
stc
jb
xchg
cmp
xor
and
adc
inc
insl
cltd
pop
rcrl
push
test
scas
imul
nop
xor
push
dec
pop
test
andl
mov
insl
sbb
adc
js
push
and
jl
or
call
push
xchg
pop
sub
jb
mov
cmpsb
addb
outsb
xchg
or
out
std
xchg
mov
jmp
add
mov
xchg
xorl
dec
mov
loop
mov
outsb
stc
fiaddl
dec
cltd
cmpsb
push
lods
mov
std
iretw
idivb
xchg
das
xlat
aam
aaa
jp
stc
fstpt
dec
insl
addr16
js
fwait
shll
cmpsl
aam
cmp
jno
fcoms
cs
rcll
push
and
sub
mov
loope
leave
push
adc
pop
mov
cmp
clc
push
xchg
pop
nop
lods
sbb
pop
fbld
xlat
dec
mov
stos
push
sbb
add
mov
mov
adc
cltd
cltd
mov
mov
outsb
rclb
mov
and
adc
push
and
std
loopne
add
pop
push
test
out
imul
sbb
sbb
fldl
lcall
fdivr
inc
popf
shll
push
mov
jp
aad
ds
mov
sahf
cmp
dec
jle
andl
cwtl
adc
imul
pop
jb
and
arpl
push
add
dec
mov
adc
dec
inc
mov
cmc
pop
xchg
jne
daa
fsubl
push
dec
dec
cwtl
or
int
mov
and
push
pop
lock
adc
rcll
ja
ret
mov
xor
sbb
mov
push
pop
insl
stos
fs
add
je
xor
adc
imul
sub
xchg
sbb
ficomps
ficomps
cmp
xlat
jg
push
pop
das
fists
shll
jecxz
int3
ljmp
or
push
push
in
xchg
or
hlt
jmp
mov
decb
dec
cld
ljmp
sub
pop
xchg
xchg
aam
lods
mov
add
xchg
cwtl
push
cwtl
xchg
ds
and
movb
mov
jb
inc
jnp
inc
insl
out
lods
jo
cmp
or
xlat
add
jno
insl
xor
stos
mov
outsl
scas
les
mov
cmc
je
test
ja
jmp
lea
adc
out
fdivs
mov
cmpsb
stc
cmp
or
push
xor
push
fistpll
mov
xor
xchg
in
mov
jmp
xorb
mov
or
adc
bound
pop
aad
push
lods
cmpb
or
fisubs
clc
and
in
rclb
cmp
movsb
xlat
aas
hlt
pop
scas
mov
int
mov
inc
xor
andb
std
or
out
push
pop
or
xchg
mov
dec
ret
pop
movsl
outsl
mov
add
shrb
out
mov
jno
pop
pop
stos
and
mov
sbbb
ljmp
std
sahf
adc
mov
xor
inc
cmp
cmp
popf
add
or
push
movsb
mov
sbb
rorl
daa
or
dec
aaa
xor
push
dec
mov
mov
fcomip
mov
pusha
lcall
test
out
or
mov
xor
sbb
xchg
pop
fldln2
cmpsl
adc
jp
fwait
cmp
bound
inc
fs
sub
lcall
mov
push
pop
loop
sub
or
pop
les
stos
popa
mov
pop
or
add
aas
dec
imul
fisubrl
jge
mov
out
dec
mov
and
pop
sbb
lret
sub
cmpsb
lds
out
sbb
or
dec
lcall
xor
aad
repnz
jp
das
rolb
xchg
inc
in
mov
sbb
lahf
lea
inc
orl
and
stos
inc
jl
adc
mov
test
push
aas
fs
adc
pop
sub
jle
dec
popa
bound
arpl
aaa
dec
inc
pop
call
pop
aas
inc
add
add
mov
mov
pop
ja
insl
sahf
add
dec
test
sub
cld
xchg
mov
leave
pop
jp
add
sub
test
movsl
mov
test
jnp
adc
mov
push
sub
add
out
int
adc
mov
add
pop
std
ss
mov
ja
inc
push
xchg
or
shlb
sbb
pushf
cltd
or
leave
neg
jne
pop
cmp
cmp
adc
sub
mov
xor
out
repnz
jne
mov
add
stos
inc
mov
popf
jecxz
rcr
lar
sub
and
jle
push
mov
loop
cld
mov
pop
xchg
cld
jmp
mov
decb
ss
mov
push
popf
sahf
jg
adc
mov
or
cli
shl
jg
push
mov
mov
scas
xor
stos
sbb
addr16
gs
sub
bound
pusha
aaa
cld
lock
in
loope
xchg
test
imul
sbb
das
outsb
je
cmp
aad
arpl
test
stos
mul
clc
jecxz
fisttpl
push
lret
inc
imul
mov
xor
loope
add
mov
xchg
imul
inc
xor
mov
aad
movsl
sarb
mov
mov
add
mov
xchg
mov
and
or
add
mov
cli
arpl
mov
repnz
adc
decb
adc
mov
add
iret
and
mov
push
push
inc
sbb
aaa
in
push
fwait
dec
outsl
repnz
mov
mov
loop
inc
jle
pop
test
fidivrl
data16
xlat
cmpsb
cmp
shrb
mov
call
loop
jno
cwtl
mov
rcr
lea
xor
out
mov
jae
and
outsb
mov
cmpsl
push
xor
add
hlt
sub
js
ja
int3
fbstp
xchg
pop
inc
test
stc
cmpsb
sbb
data16
xchg
sti
pop
ss
sub
cmpsb
add
lds
addr16
xchg
and
test
sbb
dec
jmp
stc
test
inc
add
scas
push
mov
and
inc
mov
add
in
xor
push
andb
movsl
pop
out
cmp
adc
push
sbb
inc
dec
xlat
or
test
inc
iret
and
outsl
dec
bound
and
mov
dec
cmpsl
push
mov
xchg
sub
ds
fidivrs
cld
mov
fcoms
lock
dec
sbb
xchg
mov
or
fs
push
jne
aas
xchg
mov
subl
fisubl
mov
adc
es
sti
cwtl
pusha
inc
pop
add
sub
arpl
pop
adc
mov
ja
in
and
jge
je
add
bound
int3
cmp
rcrl
add
mov
and
push
fsubrl
pop
xchg
sub
sbb
clc
repz
xor
pop
int
add
popa
push
push
and
fdiv
cli
pop
sbb
pop
mov
pop
xchg
call
pop
dec
pushl
jne
mov
push
cmpsb
dec
mov
rol
aad
mov
or
and
add
cmp
loop
sub
imul
cltd
in
and
nop
int3
out
pop
xor
dec
and
fcompl
jns
dec
lret
dec
pop
mov
jae
mov
leave
mov
push
push
inc
testl
addr16
fisttps
xchg
push
push
mov
jecxz
mov
mov
mov
mov
popa
into
cs
pop
stc
pushf
dec
cs
fdivrs
cmp
jge
sub
fmull
dec
cld
pushf
shlb
loope
dec
mov
push
in
arpl
gs
clc
movsl
call
popf
outsb
int3
loope
cmp
mov
dec
sub
xchg
pushf
dec
out
xchg
imul
pushl
imul
das
aaa
xchg
aad
pushf
das
fcomps
sbb
mov
jbe
aaa
xchg
mov
mov
sub
test
sbb
mov
mov
cmpsb
pop
push
pop
pop
insb
sub
mov
ja
xchg
lret
mov
lods
jb
mov
xchg
xor
fldl
je
pop
mov
jmp
pop
mov
pop
and
or
sbb
xor
insl
dec
xchg
paddusb
pop
fs
stos
pushf
jns
mov
adc
mov
mov
clc
roll
sub
adc
lods
mov
push
popf
gs
insb
jno
jp
xor
and
das
inc
in
test
movsl
add
insl
push
stc
divl
sbb
cli
iret
sub
insl
shrb
int
insl
mov
push
inc
lods
outsb
lahf
or
xor
lds
mov
jne
mov
dec
or
pop
roll
aas
sahf
scas
pop
out
add
hlt
mov
pusha
std
push
inc
jge
add
sbb
inc
inc
jmp
xor
push
nop
push
pop
jl
enter
cmp
inc
cli
loope
push
out
scas
xchg
int3
xchg
iret
jmp
ficomps
out
enter
sub
xchg
add
sbb
out
fmul
adc
arpl
sbb
addl
and
jbe
loopne
dec
je
ret
pop
cld
xchg
mov
mov
xor
adc
imul
stos
pop
pop
fldenv
add
cmp
rorl
push
pop
dec
fwait
popf
jbe
stos
outsl
fisttps
xchg
scas
shrb
test
ficoml
ret
out
pop
lcall
rcrb
jl
sbb
push
inc
mov
cmp
adc
push
push
xorb
jbe
shll
dec
push
sub
xor
lcall
inc
add
mov
pop
outsb
ficoml
lret
int
rcll
jae
mov
vpshufhw
movsl
push
out
repnz
mov
fcompl
push
xchg
hlt
mov
or
mov
cwtl
xchg
push
ficomps
mov
jl
inc
inc
daa
or
mov
pushf
std
push
sub
mov
fsubl
imull
fimuls
push
dec
outsl
arpl
mov
pushf
mov
sub
nop
jle
pop
cld
adc
jne
out
push
cmpsl
inc
out
mov
in
pushf
adc
call
ret
sbb
dec
aas
push
adc
out
mulb
or
lret
mov
fs
in
je
jnp
std
dec
mov
cmp
or
fcompl
add
pusha
imul
or
ds
jne
js
sti
dec
icebp
lcall
lret
je,pt
jp
call
mov
jns
inc
jle
les
sub
adc
dec
gs
lock
movsl
mov
lahf
imul
lret
and
lret
dec
popa
in
adc
push
mov
mov
test
rep
push
jle
stos
mov
jle
cmp
lcall
test
jbe
int
xorb
jp
out
js
push
and
cmp
jp
addr16
push
jns
in
test
mov
mov
test
stos
xchg
pusha
fisubrl
cmpsl
mov
frstpm(287
xchg
mov
movsl
lcall
xchg
shlb
test
xchg
repnz
and
ficoml
ja
cld
aad
test
push
add
xor
push
lods
in
pusha
push
push
adc
jmp
movsl
push
adc
aad
jg
or
sbb
inc
mov
test
adc
dec
adc
jg
jg
mov
mov
movsb
jmp
xchg
adc
andb
or
cmpb
mov
ret
pop
push
dec
sub
or
inc
stos
in
aaa
dec
test
ret
adc
data16
pop
lret
sub
inc
push
cmpsb
inc
cmp
adc
repz
and
stos
mov
and
inc
sbb
leave
xor
jp
mov
bound
pop
stos
insb
xlat
jle
and
sbb
out
popf
in
mov
test
pop
or
and
mov
push
jmp
in
xchg
lret
dec
pop
in
out
lret
sbb
or
sar
bound
lea
les
and
mov
and
std
hlt
dec
sti
sbb
stos
cmpsl
and
jmp
xor
mov
stos
or
fdivr
movsb
mov
jns
outsl
stos
pop
rclb
mov
adc
push
push
clc
ljmp
mov
in
je
xchg
mov
addl
mov
xchg
cmp
fnstsw
add
std
pop
popa
mov
dec
mov
adc
push
mov
rcl
lret
add
test
scas
or
aam
outsl
push
and
jp
pop
xor
pusha
mov
push
cmpsb
ljmp
shlb
je
lret
jne
mov
scas
test
mov
xchg
jecxz
scas
dec
lock
js
loopne
mov
insb
xchg
stos
push
lods
fstps
mov
jae
jp
rclb
pop
jbe
jno
ss
testl
cmp
imul
fwait
jle
lahf
mov
mov
inc
ret
aaa
stos
inc
xchg
mov
ja
cmpsb
dec
cmp
or
pop
fidivl
jae
jg
stos
jp
push
xchg
lock
inc
in
sahf
jae
push
and
mov
int3
clc
adc
leave
or
cmpsl
cmc
gs
dec
mov
sub
aad
or
je
or
pop
push
aad
imul
fcmovne
aad
loopne
xor
jne
int
push
jnp
xchg
sbb
aas
popa
into
imul
daa
hlt
lret
xor
pushf
into
mov
xchg
cmp
insw
adc
int3
repz
lea
roll
lock
xchg
lahf
inc
js
je
shrl
ljmp
or
scas
dec
and
pop
lret
push
sub
mov
xlat
rolb
cmp
mov
jle
adc
cmp
mov
popa
sarb
ds
push
pop
push
movl
clc
push
scas
mov
inc
arpl
sbb
mov
jb
xor
hlt
fcompl
enter
lock
inc
sub
je
mov
mov
popf
loope
sub
fmulp
sub
cmp
out
negb
sbb
test
pop
and
outsb
fisubs
int
jno
cmpsb
cmc
push
in
cmp
push
adc
ljmp
sti
rorb
dec
jge
nop
sti
add
mov
fnstcw
stos
addl
nop
jmp
js
sahf
rorl
push
loopne
fdivrs
and
test
pop
aaa
jo
inc
cld
int
sarl
dec
xchg
add
and
dec
sub
pop
imul
adcl
out
adc
jmp
and
push
call
or
enterw
push
add
mov
push
pop
shlb
fdivr
scas
xor
stc
fstl
push
lret
jmp
lret
mov
mov
mov
xor
mov
xchg
popf
pop
cmc
pop
pop
repnz
xor
adc
divl
inc
sahf
shlb
js
xchg
roll
pop
push
lret
inc
ja
das
ret
and
pop
sbbb
lret
scas
or
inc
ja
iret
mov
or
pop
adc
negb
add
aaa
dec
dec
xorl
and
cmp
aad
push
xchg
jae
sbbb
pop
sbb
inc
mov
inc
inc
lock
mov
movsb
inc
xchg
out
cs
push
xchg
les
mov
mov
jnp
mov
pop
dec
adc
outsl
int
mov
xchg
in
xor
adc
stos
push
sarb
jb
mov
sub
sub
mov
xchg
adc
mov
test
cmp
jp
sbb
mov
repnz
and
daa
imul
nop
and
push
cmpsl
adc
push
mov
popf
out
xchg
mov
pushf
into
dec
stc
push
add
mov
cltd
iret
or
bound
lods
mov
repz
dec
mov
jae
ffree
add
mov
iret
outsl
fucomip
imul
adc
add
jns
ret
ljmp
add
sub
jnp
ljmp
push
fisubrl
mov
repnz
sub
lock
movsl
or
mov
xchg
dec
popf
les
fxch
test
insb
push
push
cmpb
lds
in
push
xlat
mov
mov
pop
jge
loop
enter
jno
aas
loopne
out
jbe
ljmp
loopne
mov
push
ret
add
fistl
faddl
rcll
lcall
and
mov
push
ret
fs
cmpsb
inc
adc
mov
push
ret
cmp
jle
push
scas
push
les
mov
mov
add
and
dec
mov
out
xchg
rolb
insl
test
cld
lock
cmpsb
push
push
stos
jae
sbb
pop
enter
or
sahf
push
cmp
cmp
mov
stos
addr16
cmp
fadds
jne
inc
lahf
xor
aaa
ja
inc
repnz
andl
fistpl
cli
loop
insb
enter
xor
pop
es
inc
mov
jno
mov
dec
push
inc
adc
lea
mov
shr
jns
cmp
movsb
ret
addr16
aad
movsb
lods
enter
push
cmp
je
sub
lods
adc
outsl
outsb
xor
adc
sub
outsl
call
pusha
lock
push
mov
pop
aam
leave
cmp
jmp
pop
in
inc
add
enter
adcl
mov
lods
loopne
jno
and
cmp
xchg
cmp
and
mov
sub
and
xchg
pop
xorb
mov
pop
push
jb
add
icebp
aas
push
xorb
dec
push
adc
out
xchg
push
mov
movnti
fwait
pop
sarl
jo
mov
js
outsb
hlt
fldcw
sahf
mov
rorb
popf
xor
xchg
sarl
dec
insb
int3
sbb
or
cwtl
jmp
and
adc
pop
daa
mov
add
mov
lret
add
push
popf
sbb
lea
ret
mov
sbb
push
outsl
aaa
pop
or
cmpl
rorb
adc
jbe
dec
jecxz
andb
add
xchg
pop
dec
jmp
jo
add
out
mov
sub
sub
inc
xchg
and
clc
sub
addb
rolb
mov
pop
mov
push
sbb
imul
mov
outsl
mov
push
mov
ficoml
subl
jecxz
adc
shll
addr16
cs
and
ret
cmp
mov
pop
mov
inc
fwait
and
add
jmp
inc
lods
jmp
outsb
add
push
mov
jns
cmp
xor
jle
movsb
push
icebp
and
arpl
xor
xchg
dec
lds
sahf
jnp
rcll
dec
or
int
mov
cmp
imull
ljmp
ss
fadd
nop
push
hlt
faddp
sbb
popf
das
mov
lods
mov
mov
sub
repnz
jp
pop
repnz
jmp
das
xor
je
add
cmp
push
rclb
jns
mov
cmp
stc
filds
jg
daa
mov
insl
sbb
popa
fildl
pusha
push
or
popf
xchg
jnp
xchg
push
cmp
and
sbb
outsl
push
adc
es
cwtl
scas
insb
xor
and
or
cmp
xor
add
mov
mov
ljmp
mov
sbb
pushf
in
jnp
scas
or
jecxz
xor
xor
sbb
imul
mov
cmp
rcll
and
dec
add
or
loop
lret
stc
scas
or
push
push
pop
xor
imul
negl
jl
push
scas
movsb
inc
xchg
repz
aas
and
jnp
stc
mov
jno
stos
test
rcrb
sub
les
imul
pushf
push
int
aam
mov
repnz
push
dec
lods
adc
outsb
jo
test
lea
stos
stc
das
scas
ds
and
xorl
stc
jl
pusha
call
jmp
xorl
insl
jg
ds
arpl
js
push
roll
das
bound
sbb
inc
getsec
or
adc
sub
gs
subl
dec
insl
mov
or
subb
outsl
out
lret
daa
addb
lret
orl
movsb
sbb
push
xchg
cmp
adc
adc
pop
mov
push
push
stc
fwait
test
push
mov
or
in
cmp
dec
xor
jle
cmp
mov
iret
ret
cs
cltd
pop
xchg
int
xchg
jnp
adcb
pop
lds
inc
and
inc
and
xchg
in
pop
arpl
pop
cltd
out
mov
xor
mov
cmpl
lds
jg
dec
and
orl
jae
sub
fidivl
inc
jns
xchg
jo
add
cmc
cmovg
inc
pop
and
push
mov
adc
xorl
ja
mov
call
rclb
lock
dec
and
in
inc
sbb
jmp
shr
mov
call
jle
pop
xor
mov
enter
xor
fs
add
in
inc
movsl
stos
aad
adc
adc
xchg
out
mov
pop
jne
cli
incb
outsb
clc
sahf
repnz
in
mov
lods
loope
mov
aam
dec
aas
inc
dec
lret
sbb
adc
fwait
xor
push
movsb
fnstenv
daa
mov
test
call
das
add
bsf
dec
call
xor
inc
pop
mov
dec
sbb
xchg
pop
scas
push
xor
icebp
xor
jmp
repnz
jmp
push
loop
xchg
mov
scas
lret
test
jle
adc
xor
cwtl
sub
xchg
inc
jns
ss
test
cld
sbb
push
stc
daa
dec
aas
cmpsl
rorb
popa
xor
xchg
rclb
cwtl
call
sarb
xchg
sub
mov
add
lahf
fdivrl
mov
int3
iret
scas
js
xchg
cmpsb
xchg
mov
sbb
pop
fwait
mov
je
sbb
inc
mov
mov
fldl2t
aas
sbbl
mov
jmp
cld
jb
loop
jo
rolb
sub
push
sti
push
jbe
out
jne
xchg
out
jle
popa
loop
sub
stos
ljmp
jno
js
jp
in
daa
sbb
cmp
cmp
movsl
or
adc
sub
jle
and
inc
adc
pop
mov
sub
push
dec
adc
push
movsl
jo
movaps
mov
leave
notl
sbb
mov
mov
pop
jb
ficompl
lret
mov
fildll
clc
mov
pop
lock
inc
das
js
out
mov
scas
loop
or
lods
sahf
sbb
push
sub
sbb
or
mov
fisubrl
add
xchg
cli
adc
addr16
cmp
xchg
jecxz
xchg
inc
insb
hlt
inc
int3
pop
and
mov
mov
sub
je
leave
out
and
sbb
cmp
cmpxchg
pop
and
jb
jnp
ret
pop
xchg
inc
mov
int
pop
ds
out
cmpsb
add
int
les
jns
and
movups
cmp
movsl
aam
aad
icebp
xor
fiadds
fs
test
jae
mov
popa
repz
sahf
movsb
outsl
clc
mov
mov
sbb
or
mov
xlat
mov
dec
test
lods
mov
es
cld
pop
xor
pop
fmuls
mov
mov
popf
sub
ljmp
jle
dec
cmp
or
xchg
dec
and
cmp
pop
les
cmp
je
pushf
ret
pop
lret
stos
pop
dec
pop
test
sub
into
inc
inc
js
mov
sar
and
jp
cmp
pop
sbb
lret
fnstenv
xor
ret
js
jne
mov
das
xchg
push
adc
repnz
dec
inc
fdivl
dec
lret
pop
xchg
mov
fnstenv
cmpsb
ret
movb
sahf
mov
pop
insl
repnz
and
dec
push
loopne
jns
or
lods
sar
lret
mov
lods
mov
imulb
decl
add
cmc
sbb
push
lock
jns
adc
mov
cld
mov
subb
mov
movsl
cld
movsb
dec
push
xor
xchg
push
in
das
fimuls
int3
inc
les
mov
jle
repz
imul
push
mov
insb
lret
data16
shrb
mov
loope
pop
and
scas
ret
cli
push
push
jb
and
mov
xor
sbb
cmp
xlat
aaa
popf
bound
adc
out
add
stos
testl
nop
lods
mov
push
aas
jl
push
cmp
pop
ret
int3
push
jb
adcl
in
cmp
mov
push
or
or
iret
and
fstpt
push
popa
pushf
pop
loope
mov
mov
leave
icebp
lock
jle
xor
xor
in
adc
push
jbe
mov
test
jmp
pop
jle
add
movl
cmp
popf
pop
push
lret
mov
in
push
mov
jns
sub
jle
stos
outsb
bound
push
scas
push
imul
std
insl
test
nop
out
mov
repnz
jnp
pop
ret
add
aam
dec
fldenv
nop
add
jecxz
push
cli
xchg
movsb
push
popf
cmpsl
pusha
dec
mov
repnz
push
pop
sbb
push
mov
mov
sub
rcrl
faddp
xchg
ja
and
sbb
push
je
das
mov
shrb
cmc
push
sbb
cmc
lea
mov
jb
jbe
dec
call
fwait
or
mov
mov
roll
cmp
ljmp
js
add
fs
pusha
pushf
add
orb
jno
fsubr
jecxz
outsl
xchg
dec
and
stos
xor
movb
dec
enter
imul
test
mov
cmp
jo
pop
sub
mov
jnp
aad
stos
fisttps
cltd
movsl
cmpsb
jns
add
int
pop
xor
push
push
outsl
lds
sub
bound
inc
fldt
inc
mov
subb
sub
popl
ja
sbbl
cmc
pop
sbb
fisubl
inc
cmpsb
iret
push
sub
out
loopne
pushf
outsb
jle
sub
and
pop
lods
test
add
movl
sbb
out
mov
lods
or
jo
push
bound
lods
dec
push
orb
mov
sbb
pop
jno
enter
mov
not
call
mov
leave
or
pop
sbb
pop
jae
test
mov
sbb
push
insl
xor
bound
stc
inc
push
mov
add
sbb
push
pop
stos
xchg
jg
in
in
mov
mov
mov
inc
add
cmp
mov
iret
jp
dec
push
xchg
lock
sub
push
call
sub
testb
xchg
mov
shrb
mov
jge
cmp
mov
xor
in
addb
or
xchg
inc
or
sub
sub
subl
test
dec
pop
sti
push
movsb
jl
pop
repz
ret
js
inc
xlat
jne
loopne
mov
iret
movsl
les
mov
movsl
rcrb
mov
pop
sub
das
adc
adc
pop
imul
pop
cld
fsub
sbb
cmp
cld
push
pop
notb
push
adc
dec
xlat
sbb
mov
out
pop
addr16
cmp
fisttps
rorb
sbb
push
std
adc
fs
cmpsl
pop
fnsave
sub
add
out
or
add
lock
inc
mov
lods
jns
xchg
xchg
out
cmp
and
stos
mov
mov
xor
in
sbb
mov
cmpb
pop
cmc
dec
imul
dec
jle
mov
arpl
sti
data16
shll
mov
jl
lock
mov
rcr
inc
mov
test
test
add
cmp
sub
sub
xchg
lret
shll
sub
cld
subl
daa
cltd
xor
call
xchg
push
pop
std
mov
jne
test
rcr
leave
jo
std
or
cmp
lret
inc
fimuls
jmp
add
add
pop
popa
mov
sbb
or
aam
mov
lods
sub
sbb
adc
xchg
test
mov
dec
movl
aam
arpl
in
shrl
aas
jo
cs
mov
mov
movb
dec
push
sbb
andb
xchg
and
out
cmpsb
sbb
pop
cmpsb
sub
push
pop
leave
mov
xlat
lods
loope
out
stos
jg
pop
rcrl
add
sub
arpl
mov
icebp
and
mov
pop
lea
stc
mov
xchg
and
jnp
ficoms
pop
lcall
nop
dec
adc
pushf
jmp
mov
adc
test
sub
and
clc
int3
jecxz
mov
gs
or
or
outsl
adc
repz
rcll
jge
decb
xor
pop
add
xchg
and
xchg
aad
or
push
sub
pop
inc
icebp
shrl
sub
scas
cmp
push
sbbl
mov
xchg
adc
leave
push
adc
mov
push
mov
aam
mov
xchg
push
pusha
adc
mov
orl
or
jg
sub
mov
jo
js
dec
fstps
sbbb
jl
dec
inc
mov
dec
cli
into
cmp
sub
movsl
sub
mov
pop
dec
sub
in
pop
mov
or
or
jnp
jb
push
fidivrs
jg
in
ficompl
imul
lahf
in
mov
nop
movsl
sub
or
or
xlat
sbbl
xchg
mov
lods
inc
popa
call
mov
aam
or
in
std
mov
inc
jg
std
sub
clc
mov
push
add
scas
int3
fldl
add
sub
mov
insb
ja
mov
sub
jo
loop
inc
rsm
mov
pop
in
pop
test
rcr
int3
insb
jmp
ss
cs
leave
mov
jne
enter
pushf
xchg
adc
rol
scas
ret
jno
sti
fisubrs
scas
jns
and
pop
push
stos
cli
adc
xor
aaa
xorl
xlat
cmpsl
mov
in
adc
lods
inc
xor
outsb
xchg
cs
add
xchg
push
dec
cmpsl
fsubs
outsl
dec
fwait
jl
iret
repnz
mov
or
jbe
repnz
xchg
jmp
push
and
int
ret
mov
jnp
call
in
and
inc
mov
pop
aaa
mov
outsb
add
outsb
in
and
jo
mov
test
cmp
cmp
adc
adc
pop
shrb
testl
inc
jp
insl
out
mov
push
dec
enter
pop
in
js
push
test
adc
shr
leave
xchg
mov
test
test
insb
or
addr16
scas
pop
sub
xchg
add
mov
in
sbb
scas
sar
mov
jne
es
sbb
push
pop
ds
test
xor
push
mov
pop
sub
cli
js
lret
push
push
pop
cmova
loopne
xor
fldl
mov
sub
cmpps
idivb
xlat
icebp
jne
outsb
inc
imul
cmpb
xor
subl
int
lcall
mov
xor
mov
adc
out
aas
gs
cmpl
sbb
ret
inc
sti
scas
xor
xor
mov
or
gs
sub
movsl
cmc
leave
mov
pushf
and
stc
sbb
aaa
aad
cs
insl
test
add
xlat
sti
jns
mov
mov
je
repz
iret
or
movsl
ficompl
jmp
mov
stc
sbb
cmp
cmc
rcrl
inc
inc
out
ror
mov
call
imul
xchg
mov
sti
cmp
inc
ljmp
jo
test
ret
ds
test
push
or
sti
addl
mov
dec
xor
fsub
xlat
rcrb
mov
mov
in
js
fstps
jmp
mov
sub
int3
aaa
pop
leave
dec
mov
dec
test
dec
enter
dec
popa
cmp
aam
ret
je
mov
test
out
lret
pusha
insb
cmpsb
sarb
lahf
ljmp
ja
cmpl
jp
stos
shlb
outsb
push
in
xchg
movsl
xor
pop
out
mov
jo
jnp
js
testl
hlt
fucomp
out
inc
cmc
add
das
push
jbe
fldl
lock
mov
sub
mov
hlt
fwait
cld
cmp
icebp
sub
fstl
add
adcl
rcrl
xor
jnp
inc
out
jecxz
add
subb
icebp
add
xor
pop
fdivrl
xchg
pop
add
std
jl
push
lcall
stos
push
mov
mov
repz
lcall
jl
adcb
inc
xor
out
cmp
xor
mov
in
inc
leave
or
les
inc
pop
jle
jnp
pushf
sbb
sbb
jp
push
push
inc
mov
lret
addl
sub
fisubrl
xor
sub
or
cmpsl
and
shl
mov
mov
jg
int3
push
dec
pushf
jb
mov
fstl
jg
enter
mov
das
scas
push
mov
inc
scas
and
add
xchg
movsb
mov
or
mov
mov
mov
and
sti
das
mov
repnz
insb
pop
push
cmpsl
clc
mov
into
ja
inc
lea
scas
loop
mov
dec
add
clc
or
lock
leave
mov
lods
testb
nop
lds
dec
sti
stc
push
aad
mov
mov
add
fmul
jmp
xchg
cmp
and
cvtps2pd
cmpl
mov
jecxz
pusha
insb
mov
push
mov
push
hlt
movsl
xor
add
cli
jno
hlt
and
lea
xlat
or
mov
push
cmp
sub
imul
mov
mov
mov
in
xor
push
and
adc
popw
outsl
in
lret
aad
pop
addr16
fisttpll
xor
stos
push
cmp
add
mov
mov
outsl
dec
xchg
fsubrs
clc
fsubs
lods
add
out
xchg
mov
sbb
push
sbb
div
jo
adc
movl
stos
imul
xchg
pop
mov
cmp
pop
cmp
push
sbb
clc
inc
out
popf
xor
leavew
cs
frstor
and
pop
adc
faddl
fstpt
stos
aaa
xor
add
lcall
or
mov
les
mov
cmc
push
sbb
push
xchg
sbb
sbb
in
mov
inc
jnp
push
xchg
mov
repz
aad
sbb
cld
cmc
add
out
leave
xor
pop
int3
enter
leave
and
out
dec
mov
hlt
jb
aam
jp
cwtl
je
insl
xor
bound
push
lret
nop
push
inc
icebp
pop
jno
sti
sbb
dec
dec
fsub
xchg
sbb
in
in
repz
xor
xor
rep
dec
pop
ja
lahf
popf
push
cmp
and
mov
and
loope
mov
popa
lret
pop
dec
pop
jge
push
inc
out
push
xchg
daa
and
dec
xchg
rsqrtps
adc
repnz
xor
inc
or
pushf
int
pop
adc
lcall
pop
and
cltd
fisttps
fs
movsw
add
jge
sbb
sub
pop
inc
lods
jnp
pop
push
test
sbb
xchg
lods
orb
pop
and
mov
sbb
dec
fnstenv
xchg
adc
sub
mov
pop
bnd
inc
cmpsb
cmpsb
data16
adc
jno
loop
or
aaa
jl,pn
cwtl
ds
scas
mov
xor
pop
std
fldenv
lods
dec
mov
dec
mov
jo
lahf
fnsave
lahf
shll
push
ja
pop
out
dec
test
add
mov
jo
cmp
lret
movsl
mov
cs
pop
movsl
mov
aas
cmp
rcrb
sub
xchg
call
mov
loope
outsl
cwtl
pop
cld
dec
rcll
testl
ja
ja
testb
jmp
clc
jae
sbbb
inc
addl
cwtl
dec
das
movsl
loop
scas
lods
ja
jnp
rcll
adc
test
movsb
icebp
sub
outsl
std
lea
gs
xchg
add
sbb
call
ds
mov
test
cmp
mov
jb
jo
jle
inc
and
loope
arpl
sbb
xchg
pop
rcrl
cld
out
test
aaa
out
pop
dec
sub
cmp
sub
scas
outsb
cltd
and
adc
add
sbb
test
push
push
pop
xor
idivl
stos
leave
call
lock
mov
cmc
or
mov
orl
ficomps
push
mov
jno
cmc
pop
sbb
movsb
push
insl
pop
mov
dec
or
jg
xchg
inc
icebp
sbb
outsl
cmp
iret
push
fcomps
sub
lret
push
dec
add
js
adc
xchg
lods
push
add
jnp
outsb
add
dec
outsb
std
adc
cmp
ljmp
mov
mov
das
dec
bound
rclb
aad
sbb
fcompl
push
sbb
jmp
test
shlb
scas
inc
popa
rorb
les
data16
sub
xchg
loopne
mov
jb
mov
add
mov
add
faddl
fmuls
test
xlat
call
mov
insl
test
adc
insb
cmpsb
xor
lahf
lcall
mov
xor
mov
pop
aad
outsb
pop
jg
or
pop
fdivs
pop
cmp
sahf
ljmp
in
lea
xchg
sar
cwtl
js
cmpsl
xchg
pop
xchg
stc
pop
dec
dec
xchg
lea
loope
mov
sbb
lock
inc
insl
or
sbb
into
je
je
dec
pop
and
je
add
std
push
shl
nop
jecxz
pop
inc
mov
pop
out
mov
inc
outsb
jns
inc
jae
std
inc
pop
test
loope
loopne
loop
rolb
out
push
pop
out
mov
mov
mov
cli
cmc
push
cli
cmp
jnp
aas
xchg
js
inc
stos
pop
fldenv
subb
dec
lds
data16
sbb
xor
fildl
push
dec
andl
xlat
pusha
jge
cmpl
imul
lds
sub
notl
adcl
data16
push
push
add
test
mov
std
dec
aas
xchg
jo
jb
scas
jo
repz
test
xor
or
subb
pop
int
test
cmpsl
dec
int
pop
dec
and
cmc
neg
cmpsl
cmp
sub
std
xchg
mov
imulb
push
sti
pop
mov
mov
es
jns
inc
aam
adc
testl
int3
in
mov
shl
sbb
insl
push
fpatan
mov
int
cmp
inc
cs
and
dec
adc
sbb
bound
cltd
mov
push
mov
mov
fisttpl
push
cli
sbb
jns
and
pop
push
sub
pop
call
neg
std
dec
pushf
lods
jmp
dec
lods
fsubrs
jnp
ds
sbb
push
clc
repnz
xchg
jbe
push
out
or
jae
mov
test
mov
sub
icebp
rorl
fwait
add
xchg
mov
rcll
jne
sub
push
insl
pushf
int3
pop
sahf
outsb
dec
inc
imul
bound
pop
push
ja
outsl
mov
lock
xchg
test
jecxz
inc
add
mov
icebp
clc
sahf
fidivl
sbb
lahf
push
jno
in
push
adc
and
cmp
jp
cmp
mov
ud0
mov
clc
lahf
pop
pop
mov
jmp
add
sbb
xchg
adc
mov
dec
sti
jmp
push
rcrl
bound
mov
shl
movsw
cwtl
in
lods
push
xor
xchg
pop
fwait
add
pusha
sbb
scas
repz
rorb
lock
add
enter
imul
adc
aas
ret
xor
into
xchg
push
gs
mov
jae
and
xchg
xchg
or
ljmp
dec
pop
loopne
pop
inc
inc
pop
mov
gs
fsubl
or
cs
add
xor
mov
and
sbb
arpl
cmp
addr16
addr16
scas
xlat
push
mov
loope
cmpsl
adc
mov
jg
sbb
mov
cs
or
xchg
outsl
test
cmp
aam
cmc
pop
lret
xor
mov
add
movsl
or
push
outsb
jl
xchg
cmp
mov
push
gs
das
adc
or
dec
mov
jno
out
pop
int3
les
push
cmp
rcll
mov
sbb
test
fcmove
inc
lea
mov
repnz
jge
jg
mov
gs
fisubrl
imul
lods
lock
or
imul
xorps
insl
adc
push
fcmovu
fcmove
bound
push
mov
xlat
cld
dec
mov
push
xchg
shll
inc
cltd
faddl
cltd
push
jg
in
mov
mov
shl
out
or
xchg
pop
in
xchg
mov
push
insb
adc
sbb
stos
pop
adc
push
xlat
and
sbb
sbb
mov
xlat
into
push
gs
mov
sbb
out
fidivrs
mov
lock
dec
mov
pop
sub
jmp
lahf
aad
inc
outsl
sbb
push
cmpsb
cmp
addb
xor
dec
sbb
add
bound
or
cmp
mov
inc
mov
xchg
add
incb
sub
sarl
jge
sahf
icebp
loope
jae
sahf
iret
pop
cld
lret
sbb
shll
or
inc
push
mov
cmpb
cmp
mov
insl
push
lret
mov
dec
cmc
mov
dec
pop
out
mov
hlt
popf
cs
xchg
sbb
or
pop
sbb
sbb
add
jmp
movsb
lods
aas
fsts
fistpl
loop
push
adc
lret
xor
outsb
mov
add
shll
dec
mov
rolb
jnp
cmc
and
mov
xor
xor
dec
les
jo
jb
cmp
xorb
xchg
lcall
add
adc
and
int
xchg
sub
popf
lods
loope
push
roll
jecxz
mov
mov
std
negb
add
call
adc
daa
mov
push
jae
jge
mov
xorb
mov
hlt
or
xchg
ret
push
nop
jle
dec
dec
movsl
aas
sub
xchg
aaa
dec
ja
jae
mov
sbb
outsl
push
jns
out
cmp
fstps
outsl
dec
arpl
jg
or
sbb
sbb
lods
mov
cmpsb
inc
into
sbb
jno
mov
notb
nop
mov
pop
call
sub
adcl
cmpsb
or
std
dec
stos
adc
pop
fwait
js
sbb
cmpsb
pop
enter
mov
gs
outsl
negb
sbb
jmp
sub
lods
test
setl
inc
repz
adc
outsb
das
xchg
pop
adc
cmp
rcr
mov
stos
jnp
jne
test
outsl
and
std
stc
arpl
scas
adc
pop
cld
in
fists
addr16
or
scas
hlt
roll
testl
cmp
inc
xchg
mov
iret
and
pusha
mov
jmp
or
cltd
rcr
addr16
lahf
xor
xor
mov
xlat
mov
xchg
stos
xor
rolb
or
cmp
sub
bound
dec
xchg
lods
mov
rcrb
add
and
mov
ds
out
cmpl
mov
adc
jne
and
push
iret
inc
mov
xchg
mov
and
dec
inc
mov
rcpps
adcl
add
add
pop
push
pop
xchg
ret
push
cltd
mov
or
out
adc
jle
cmp
mov
inc
adc
jo
outsb
xor
dec
js
into
cli
and
dec
fsub
jbe
add
rcrl
jp
jo
movb
ds
outsb
dec
lcall
int
adc
dec
xchg
adc
adc
push
pop
jl
dec
clc
and
nop
and
mov
rcrb
mov
inc
xchg
decl
dec
lock
mov
or
popa
daa
mov
stc
hlt
insl
sub
sub
jae
sbb
mov
cmpsb
sbb
cwtl
mov
scas
push
lods
jg
pop
idivl
daa
inc
or
aaa
add
stos
mov
fdiv
js
mov
pop
dec
push
jae
push
or
mov
xchg
inc
and
jne
lret
test
cltd
pop
jge
push
mov
fbld
mov
mov
enter
mov
neg
mov
push
into
addr16
adc
push
xor
lock
dec
imulb
or
push
xor
icebp
fstpt
stc
cmp
loope
mov
sbb
inc
dec
cmp
jne
xor
out
push
push
pop
xchg
sub
in
add
add
jnp
clc
ror
and
xchg
push
cmpl
mov
and
stos
pop
pop
jg
fistps
inc
int
fisubrs
add
bound
xor
push
jb
inc
movsb
fs
test
fwait
rcrb
popa
js
cwtl
inc
divl
addr16
test
fisubrs
dec
sub
mov
adc
jne
fcmovne
or
sbb
pop
test
in
aaa
mov
adc
std
fs
sahf
pusha
std
mov
call
cmp
pop
leave
scas
jb
mov
sbb
mov
and
daa
jnp
xor
ret
cmc
or
repz
imull
pop
test
pop
inc
or
iret
xchg
sti
and
rorl
rolb
inc
push
cli
loopne
jecxz
imul
sar
sahf
add
out
int
sarb
sbb
repz
fistpl
xor
cmp
cmp
cmp
sbb
ror
pop
in
add
push
out
int3
fadds
xor
ret
cwtl
mov
test
loopne
mov
mov
jl
aad
inc
pop
sub
popa
and
cmp
xchg
in
mov
mov
mov
adc
push
xlat
repnz
pmovmskb
daa
pop
dec
cmp
pop
aad
stos
push
test
mov
dec
dec
push
push
add
sbb
jmp
xor
sarl
cmp
adc
icebp
cmp
inc
stc
xchg
mov
test
adc
addr16
sahf
inc
jno
dec
sarb
push
inc
les
in
out
fwait
mov
sahf
push
fcoms
pop
cwtl
xor
jnp
cmp
sar
push
das
icebp
divl
mov
into
lcall
addr16
andb
sbb
icebp
mov
lcall
dec
mov
lcall
fdivr
jp
lahf
stos
sbb
inc
lcall
imul
jo
jmp
lahf
out
mov
pop
outsl
inc
mov
mov
test
fildll
push
push
gs
test
sbbl
movsl
dec
push
mov
add
cmp
mov
cmc
pop
push
adc
mov
lods
inc
and
push
pushf
push
stc
mov
push
jnp
jno
or
or
cmp
fs
push
in
mov
pop
out
inc
inc
enter
jbe
fs
sub
jo
addr16
jg
shl
or
inc
adc
out
cmpsb
pop
cs
out
dec
push
rcll
je
daa
mov
push
roll
ljmp
fs
dec
jl,pn
jp
int
sbb
jecxz
mov
shrb
xchg
jno
ret
cmp
sub
cli
push
lds
push
movsb
int
dec
mov
scas
xor
xor
cmpsb
je
push
loop
inc
sub
sub
in
add
cmp
pop
mov
jae
in
add
inc
or
xor
ja
aas
jnp
push
sub
and
js
pop
jmp
les
xchg
les
adc
pop
pop
sbb
pop
lods
adc
orb
mov
ds
leave
arpl
add
add
test
push
mov
sub
jae
mov
cmp
scas
ds
fmull
mov
add
sub
lahf
je
out
push
loopne
dec
shlb
gs
mov
push
and
setle
call
outsl
in
mov
jg
jnp
mov
repnz
icebp
test
sub
data16
dec
mov
mov
lods
popf
or
mov
jge
push
sbb
pop
jns
pop
mov
sbb
in
iret
mov
mov
and
pop
lret
lods
lahf
aad
adcl
mov
push
out
insb
loop
shl
inc
int3
xor
aas
int3
pushf
call
mov
jge
stos
inc
leave
fidivs
lcall
mov
mov
pop
xchg
test
pop
insl
out
rclb
shll
pop
out
aad
call
pop
mov
scas
int
fstps
dec
fdivrs
push
out
push
sarl
mov
outsb
pop
xchg
insl
push
add
sar
int
push
push
dec
sbb
jns
outsb
mov
les
cmpsl
test
xchg
mov
data16
pop
imul
cmc
cmp
or
addr16
cmp
loope
fwait
aad
dec
jle
mov
rclb
mov
and
mov
lods
nop
add
mov
sub
aaa
cmp
mov
cmpl
aaa
out
sti
bound
sub
pushl
mul
cmp
out
dec
in
fistl
das
xor
jle
ljmp
adc
mov
shll
mov
scas
lahf
jle
ja
cmpl
pop
and
push
jecxz
ss
jns
and
and
xor
andb
push
shlb
cmp
dec
inc
bound
sbb
out
sti
dec
movsl
mov
pop
leave
mov
push
insl
push
daa
nop
in
in
mov
sub
inc
ljmp
pop
push
add
ret
lcall
ja
mov
mov
push
pushf
push
imul
cmp
loop
mov
lea
mov
jg
outsl
xchg
pop
iret
repnz
mov
or
dec
or
roll
adcl
jmp
stos
stos
mov
cmp
mov
or
lds
negb
iret
pop
sbb
mov
mov
loopne
or
push
adc
out
sub
push
test
repz
popa
push
and
inc
test
data16
or
lods
mov
pop
sbb
add
inc
push
xchg
sbb
cmp
popf
push
lea
pop
cmc
out
hlt
mov
push
fucom
inc
outsb
repnz
add
sub
fs
in
aad
popf
sbbb
out
fcoml
add
xchg
and
fisubrl
in
inc
loop
push
outsl
cmp
imul
jecxz
sarb
push
mov
xchg
icebp
sbb
aad
dec
enter
outsl
lea
mov
cmpsl
mov
rorl
mov
sub
or
loopne
fildll
and
push
jmp
cld
push
xchg
nop
pop
jle
push
cwtl
sbb
and
adcl
test
int
aaa
jge
push
jmp
sahf
scas
int3
push
int
addl
cmp
cwtl
out
mov
jnp
adc
ret
std
js
dec
in
jne
lcall
repz
xor
les
push
push
inc
jb
mov
rorl
push
inc
mov
test
cwtl
xor
sub
xor
fldt
xchg
les
mulb
bound
inc
orb
mov
outsb
mov
cmp
sub
imul
xchg
jp
sti
jp
cmp
or
mov
rclb
mov
xor
xor
sub
arpl
and
sub
cld
sarb
cmp
stos
push
xchg
daa
aad
or
xchg
sbb
test
sub
push
loop
test
jle
sub
lds
inc
pop
mov
decb
maskmovq
testl
dec
popf
add
in
xlat
rolb
insl
sbb
inc
xlat
test
xchg
cmova
pop
daa
mov
movsb
sub
dec
stos
adc
out
or
les
xor
mov
cmpsb
out
popf
jecxz
push
imul
call
adc
lret
push
stos
inc
ja
cmpsl
sub
lar
std
or
jno
pop
sbb
cmc
les
push
test
mov
mov
fiadds
and
fimuls
sbb
outsb
ja
dec
sbb
cmp
pop
out
jae
cs
scas
xchg
jae
push
in
and
imul
cmpsl
pop
push
xchg
jmp
inc
push
xor
icebp
repnz
and
and
lds
stc
or
addr16
mov
outsl
jecxz
rorb
inc
xchg
push
adc
jmp
fistpl
cmp
or
mov
iret
cmc
call
xchg
mov
xlat
vpsubd
inc
insb
mov
push
rorb
dec
addr16
notl
sub
xor
mul
xchg
divl
adc
adc
or
xor
push
xor
test
ljmp
mov
pop
decl
add
mov
mov
adc
xchg
lods
inc
push
cmp
les
xchg
repnz
daa
jb
jg
jo
mov
cmp
ss
add
mov
enter
adc
outsl
add
push
adc
in
jb
cmp
xorb
fst
in
in
xchg
jp
pop
push
sahf
and
mov
mov
nop
je
jmp
mov
cmc
enter
int3
dec
fistps
out
sbb
das
cmp
mov
in
fmul
rorl
arpl
and
enter
stos
dec
jbe
mov
packsswb
cmp
mov
loopne
lret
clc
xor
sbb
inc
mov
xchg
dec
xchg
dec
jne
xor
imulb
rol
psllw
pop
stos
inc
repz
sbb
ffree
pop
std
hlt
dec
out
aam
adc
dec
pushf
in
shl
andl
cltd
xor
insl
push
add
jmp
ljmp
jge
cmc
test
fisttpll
sarb
jnp
pop
xchg
fldenv
jg
leave
jns
aas
in
sub
add
in
int
outsb
jo
insl
lret
fildll
mov
dec
mov
fs
test
adc
cmpsl
lock
sub
adc
sarb
ss
cld
leave
jmp
lea
icebp
testl
leave
or
pop
in
inc
js
inc
jg
fwait
adc
jmp
mov
push
jbe
mov
sahf
dec
mov
negl
mov
andb
add
inc
push
add
stos
push
add
mov
pop
and
mov
or
sti
fisubrl
in
mov
cmpsb
pop
add
cld
dec
sub
xchg
push
jno
or
mov
xchg
xchg
jno
pop
in
dec
or
push
shll
cmp
ret
lods
in
mov
push
mov
xor
pushf
pop
lahf
aam
stos
loope
sbb
nop
pop
mov
xor
out
ss
andb
mov
jl
mov
js
jne
jl
xlat
rol
scas
popa
mov
pop
dec
jb
sub
or
fincstp
out
mov
cltd
imul
out
push
pushl
in
cld
gs
and
mov
pop
nop
adc
ss
enter
popa
movsb
pop
iret
and
mov
stos
mov
pop
loope
repnz
ss
or
push
inc
gs
fisubrl
gs
aad
inc
in
mov
xchg
pop
cmp
mov
and
in
aad
mov
jecxz
jne
or
stos
shlb
inc
int
aaa
shl
or
daa
adc
call
sbb
out
adc
xchg
mov
jmp
in
shll
cmp
fmulp
rolb
dec
and
stc
mov
ljmp
outsb
lea
mov
ja
or
sahf
aaa
push
loopne
add
xor
in
sub
xchg
test
iret
push
inc
mov
jbe
push
xor
mov
push
push
dec
mov
adc
pop
xchg
or
or
mov
es
out
movsl
add
daa
insl
sub
sbb
loopne
test
xor
or
arpl
loop
mov
jmp
add
xor
arpl
lret
je
popa
pop
sub
jl
and
mov
add
jne
xchg
out
jge
es
scas
add
push
pusha
stc
inc
add
ljmp
in
sub
loopne
loopne
inc
cmp
nop
push
dec
mov
in
jnp
mov
test
popa
cmc
push
test
loop
notb
and
mov
push
movb
bound
psubb
jo
sbb
adc
std
sbb
shl
inc
mov
loopne
lock
gs
inc
movsl
sahf
pop
cmp
gs
inc
cmpsl
or
xor
cmp
movsb
mov
jle
pushf
repz
mov
add
add
clc
out
push
test
xchg
stc
xchg
or
insl
movsl
sbb
jp
and
aaa
stc
jno
mov
sbb
data16
and
pushf
xchg
shrl
outsl
inc
insb
dec
jne
adc
or
les
dec
xchg
repz
jl
mov
cmp
pop
or
stc
push
mov
out
mov
mov
rorb
xchg
push
add
push
pop
cmp
sub
xor
mov
inc
sbb
lret
inc
lahf
or
fidivrl
sub
jecxz
mov
mov
jp
hlt
pop
popf
pop
cld
mov
loop
xchg
not
mov
sbb
mov
and
mov
jnp
pop
push
pop
out
add
or
cmp
or
pushf
orb
in
jne
out
jp
mov
cld
sbb
mov
lock
shl
mov
test
xchg
sub
call
sti
daa
push
in
in
add
sub
test
shlb
sbb
insb
int
push
test
ucomiss
cli
pushf
lods
cmp
rolb
jo
dec
xchg
jns
loopew
nop
aaa
subb
inc
lock
fdivrs
stos
mov
into
movsl
movsl
lds
cmp
out
test
cltd
push
subb
pop
inc
sub
xchg
inc
push
adc
push
popf
add
adc
cwtl
mov
aaa
and
test
popa
gs
inc
data16
ja
push
inc
mov
xchg
mov
inc
outsl
fs
sbb
sub
jecxz
and
mov
adc
jnp
push
jp
iret
mov
xor
fidivs
frstor
out
divl
fsubr
add
or
xor
xor
ret
xor
out
and
sub
sbb
sti
shll
lods
push
movsl
jmp
mov
pop
enter
mov
jp
inc
inc
leave
mov
data16
notb
inc
sahf
mov
pop
dec
iret
and
divb
rcrb
add
pop
pop
xchg
lods
lcall
pop
push
movsb
incb
pushf
adc
mov
mov
pop
cltd
ja
cmp
rclb
dec
cmp
jge
mov
add
mov
xchg
adc
pop
push
les
lret
lahf
stos
out
or
xchg
repz
jns
mov
sub
pop
mov
mov
push
in
sub
jmp
mov
pop
xchg
and
rsm
repnz
push
mov
mov
in
out
xchg
xor
or
dec
lods
adc
test
adc
pop
xchg
mov
hlt
mov
push
jb
out
push
mov
xor
cltd
js
or
xchg
or
lods
loop
sub
adc
in
rcrb
test
jmp
ljmp
and
or
scas
inc
cli
sbb
fsubrs
sbb
inc
sub
sub
pop
push
sbb
adc
xchg
jl
mov
popf
cmpsb
ret
dec
dec
inc
xchg
add
stc
mov
mov
gs
idivb
pop
jbe
sub
add
sahf
push
adc
mov
or
inc
mov
out
cli
add
loopne
and
out
sub
lahf
inc
cmp
popa
jb
mov
pop
push
in
or
or
leave
movsl
movsb
xchg
pop
mov
and
cmp
inc
and
sub
inc
sbb
push
rcrl
jo
pop
rcrl
rcrb
push
mov
les
mov
or
xlat
andl
inc
sahf
and
out
inc
int3
inc
push
sub
ds
sub
xchg
add
movsb
mov
out
adc
inc
pop
repnz
push
push
test
cs
jo
inc
cmp
mov
xor
stc
lods
ds
jno
subb
mov
rcll
in
push
xchg
mov
inc
in
and
clc
lock
mov
push
ds
mov
stc
fwait
adcl
mov
mov
pusha
pop
pop
bound
xchg
ret
xlat
jle
or
mov
sub
jo
jmp
mov
cmp
push
xchg
dec
jne
pushf
push
std
adc
insl
sub
xchg
jecxz
xor
mov
dec
cli
popa
nop
ficompl
dec
jbe
add
dec
stc
in
pop
repz
frstor
popl
rol
dec
sbb
in
vmovd
sub
das
fdiv
addr16
sarb
imul
dec
scas
stos
notb
mov
aaa
cs
imul
jecxz
popa
pop
inc
adc
cltd
dec
movsb
shlb
xor
fistl
lahf
ljmp
sub
hlt
out
popl
push
sub
sub
inc
ja
dec
sbb
inc
and
icebp
mov
add
mov
outsb
sahf
adc
adc
add
mov
and
pop
or
pop
jnp
imul
ficoml
movsl
cwtl
dec
daa
cmp
adc
test
loop
inc
aas
jle
mov
in
inc
or
cmp
jns
ret
repz
or
mov
mov
mov
fs
push
adc
dec
adc
sub
cld
pop
dec
jnp
push
xorl
aaa
ret
inc
inc
push
jecxz
mov
ds
cmpsb
out
jmp
roll
rcll
aaa
aaa
mov
mov
inc
dec
lea
repz
pop
daa
insb
mov
popa
cmpsl
mov
scas
in
mov
mov
out
mov
mov
jno
dec
inc
lods
dec
xor
int3
stc
mov
or
loop
shrl
lods
mov
dec
icebp
or
enter
dec
rolb
aam
ds
mov
enter
jae
fnstenv
rcrl
cmp
or
xor
xchg
jmp
xor
cwtl
addr16
sbb
iret
push
and
enter
inc
fcoml
jb
leave
add
push
sahf
xchg
mov
or
pop
mov
jne
sbb
nop
sbb
rorl
jns
repnz
fwait
dec
lea
in
mov
sbb
pop
movsl
in
jle
jg
adcl
sbb
mov
pop
aaa
stc
jb
mov
test
lea
pop
aaa
and
or
adcl
rcrb
or
sahf
imul
mov
scas
xor
jne
fidivrs
popa
or
xchg
push
arpl
dec
push
mov
test
cmpsl
mov
cmp
cmp
push
pop
flds
or
cmc
fs
or
inc
inc
jne
adc
inc
push
jle
mov
iret
pop
sub
or
pop
xchg
mov
test
jb
xchg
paddq
sub
lret
in
cmpsl
imul
dec
adc
xor
cmc
jmp
fdivs
xorb
sbb
push
adc
or
push
fs
cmp
lcall
dec
repnz
dec
jmp
push
xchg
nop
stc
jnp
cmp
xchg
pusha
paddd
cmp
push
test
mov
out
sub
clc
roll
dec
xlat
fnstsw
arpl
jns
icebp
rorl
outsl
fs
dec
scas
mov
imul
iret
movsl
mov
pop
jg
nop
add
add
and
add
cli
mov
in
lret
add
mov
add
sbb
adc
and
mov
mov
cld
aad
dec
js
push
sti
mov
iret
imul
dec
and
xchg
aam
add
in
or
xchg
and
mov
lea
stc
daa
mov
dec
add
rol
aam
xor
fcompl
ljmp
push
mov
hlt
dec
add
and
sti
and
pop
push
stos
sbb
dec
mov
push
shl
xchg
pop
adc
jmp
les
mov
rcrl
add
sbb
xchg
movsb
je
adc
mov
lods
adc
push
mov
gs
inc
cltd
mov
dec
fdivrs
enter
jge
add
in
cmp
fsubs
xor
inc
add
jg
mov
lahf
jge
xchg
ds
adc
cmpsl
es
push
and
jnp
add
or
fucom
mov
or
sbb
cmpsl
stos
push
sti
pop
bound
xchg
pop
std
aaa
shlb
and
push
insb
ficompl
dec
push
lret
fimuls
std
pop
jo
movsl
cmp
js
inc
push
pop
ret
ja
xorl
push
fsubl
out
lcall
sub
pop
jp
or
movsl
gs
in
xchg
or
int3
cmp
ret
cmp
aaa
jbe
mov
popa
mov
iret
push
enter
aam
add
ret
fdivr
bsr
rolb
push
lret
lods
add
mov
jns
cmpb
inc
test
ret
pop
shrb
fisubrl
orb
sbb
ds
mov
cwtl
cli
movb
pop
mov
leave
sub
jno
int3
rcrl
cmpsl
adc
jmp
mov
sub
xchg
cmpsb
hlt
xchg
in
push
push
test
les
pop
dec
cltd
mov
and
movsb
or
mov
out
cmp
lret
lret
xor
add
cmp
repnz
mov
fildll
mov
aaa
jle
mov
jb
adcb
les
and
out
imul
sbb
imul
mov
mov
movsb
adc
ror
hlt
sub
imul
mov
ret
fistpll
mov
cmpsb
dec
ss
pop
jmp
out
mov
mov
stc
sbb
adc
je,pn
xlat
lds
addr16
insl
test
lods
int3
and
add
adc
mov
mov
pop
imul
sbb
mov
outsl
xchg
jbe
test
cmpb
outsb
fdivs
movsl
push
bound
mov
mov
xor
negl
mov
iret
pop
dec
loopne
mov
lods
and
jb
mov
dec
sub
lahf
pop
jbe
lods
clc
daa
mov
sbb
fcompl
sub
hlt
inc
adc
hlt
pop
sbb
ljmp
and
mov
fbstp
or
add
in
mov
insb
repnz
push
push
hlt
lods
test
xorl
test
decb
xor
xchg
pop
lahf
mov
jne
or
jmp
xchg
adc
sbb
js
mov
jns
sub
loop
mov
push
insl
loope
mov
inc
pop
andl
push
jmp
sbb
and
dec
ss
into
or
cld
xchg
or
push
push
push
out
gs
pop
cmp
dec
xchg
inc
scas
dec
push
or
scas
sahf
sti
ficomps
inc
pop
sbb
sbb
xor
fsubs
fisttps
fdivl
jmp
dec
adc
pusha
mov
andb
inc
or
inc
lahf
addr16
clc
fsubrs
sti
repnz
mov
fisubs
add
sub
pop
or
and
andb
pusha
add
pop
push
test
dec
push
pushf
fcmovnb
mov
icebp
dec
fisttpll
arpl
lcall
movsl
push
das
nop
mov
mov
cli
ja
mov
dec
sub
xor
popa
mov
aam
jns
je
push
bound
dec
adc
push
xor
insb
jne
sti
mov
sbb
jne
shr
lret
mov
into
outsb
into
adc
iret
xchg
pop
icebp
and
jl
dec
dec
lds
or
jns
jae
sbbl
dec
cmp
lea
jb
jnp
ss
dec
or
test
dec
movsl
mov
xchg
mov
ljmp
fidivrs
jne
jb
dec
lret
jne
popf
inc
cmp
mov
and
in
repz
push
push
mov
mov
mov
xchg
test
xor
mov
xor
or
paddusw
cmp
shl
test
mov
pop
ret
movsl
ja
add
sbb
std
ja
lret
or
outsb
mov
test
inc
jle
dec
push
fcomi
sub
in
sub
nop
push
jmp
inc
mov
shlb
and
jnp
dec
xor
dec
aad
sbb
add
popa
jl
pop
scas
std
test
jne
xchg
adc
adc
sub
adc
jno
cs
pop
mov
aaa
cwtl
in
cmp
xor
outsl
xchg
popa
shll
sub
out
ret
in
mov
jbe
mov
nop
pop
loope
and
sub
orb
andb
push
fwait
in
addr16
sbb
mov
push
out
jp
xchg
lods
inc
add
or
cwtl
shll
hlt
inc
adc
jbe
pop
xlat
push
push
cmp
jle
int3
cmp
and
outsb
aas
and
mov
je
imul
xor
nop
fwait
xorb
pop
xor
adc
and
nop
push
push
or
lods
and
dec
pop
outsl
enter
pop
fcmovnb
inc
cmp
and
shrl
cmp
into
mov
sub
aas
mov
pop
push
leave
pushf
adc
mov
add
xchg
and
push
aam
add
add
fwait
dec
cwtl
int3
loopne
pop
mov
dec
loop
int3
xchg
mov
and
dec
fnstsw
adc
mov
adc
mov
pushf
mov
cmp
lret
ss
inc
sahf
outsl
add
xor
push
jno
shr
iret
xchg
mov
add
mov
pop
fbstp
push
push
lret
popa
dec
mov
push
and
js
mov
dec
xchg
sahf
divl
xor
mov
jnp
pop
cmp
hlt
out
movsb
repnz
inc
shlb
test
std
xchg
push
push
cmp
jge
dec
push
dec
mov
add
loop
inc
fcoml
jle
sbb
cmpsl
pop
js
mov
mov
imul
loop
roll
pop
faddl
out
movb
xchg
sti
mov
xlat
fwait
cmp
adc
ret
xchg
sub
jb
ja
xrelease
out
push
dec
pop
outsb
dec
aas
movsl
cli
pop
dec
xchg
dec
add
enter
nop
pop
test
movsl
ds
and
mov
aaa
push
stos
jle
push
jp
pop
adc
jp
lods
xchg
mov
insb
push
dec
sub
pop
push
ja
imul
cmp
aas
cmpb
inc
sub
loope
sbb
adc
dec
rclb
push
and
jb
test
insl
sbb
push
lcall
jge
mov
xchg
lods
sbb
pop
ss
shlb
cmp
sbbl
inc
mov
es
cmp
sub
in
imul
call
ljmp
je
icebp
and
or
pop
and
add
and
pop
mov
push
ret
jnp
pushf
leave
movsl
aad
movsl
mov
mov
inc
repz
jl
adc
test
jo
or
mov
xchg
jae
adc
cmc
out
cmp
addl
ds
fyl2xp1
pusha
push
dec
scas
push
lcall
pop
mov
xchg
lcall
xchg
add
xchg
cmc
mov
mov
jmp
call
cmp
xchg
inc
xchg
push
movsb
dec
pop
mull
aas
rcrl
push
push
xchg
push
sub
inc
pop
and
ficomps
lahf
fists
fwait
pushf
mov
cmp
iret
or
mov
movb
jns
bound
cmp
lcall
cmp
outsl
and
push
jl
inc
lods
lock
fadd
out
jl
xchg
mov
subl
mov
lock
or
add
insb
aad
cmp
cmp
clc
test
lods
cmp
andl
push
test
arpl
cmpsb
xchg
xor
jbe
std
or
jae
mov
les
adc
rcrl
ja
and
and
dec
rorl
mov
inc
mov
push
mov
lods
cs
je
or
xchg
out
outsb
sahf
or
in
shll
push
das
mov
sub
add
stos
call
pop
mov
jge
pop
mov
mov
pop
clc
out
push
dec
data16
aaa
mov
dec
adc
test
inc
das
mov
sub
insb
mov
cltd
push
stos
pusha
pop
xchg
out
and
xchg
mov
ljmp
dec
xor
daa
test
cli
dec
ret
push
out
jb
movsb
scas
mov
xchg
pop
jbe
movsl
sub
pop
scas
pop
scas
add
cmpsl
dec
in
mov
leave
sub
push
mov
mov
inc
aaa
lds
mov
cmpsl
mov
sub
sub
inc
sub
fcmovnu
insb
jmp
mov
inc
dec
in
scas
and
lahf
mov
dec
dec
or
push
rcll
mov
pop
add
jmp
or
cltd
xor
adc
scas
push
xchg
lcall
gs
lea
dec
sub
movsl
pop
mov
pop
xor
adc
std
jge
xchg
lret
mulb
into
push
loopne
and
adc
aam
mov
inc
pusha
mov
cmc
mov
lret
sub
aad
sub
cmp
in
jne
test
jo
lcall
inc
lret
shlb
inc
xor
movsl
or
inc
mov
cmp
adc
clc
sub
or
scas
sbb
or
jno
xor
pop
xchg
jne
fsts
das
mov
mov
mov
mov
test
jmp
pop
xchg
jo
sbb
mov
adc
in
push
push
daa
movsb
add
hlt
inc
and
mov
push
jecxz
jecxz
aas
daa
mov
cmp
fidivrl
mov
lods
and
iret
mov
jo
xor
sub
scas
push
imul
mov
aas
push
sbb
pop
xor
sbb
mov
mov
out
and
and
cld
mov
lds
pushl
jnp
sub
lahf
adc
adc
mov
test
push
push
or
jb
movsb
icebp
lods
pop
arpl
or
add
lods
movsb
cmp
or
sub
cmpl
icebp
jno
adc
jmp
jno
jmp
add
ss
rcr
leave
mov
pushf
mov
ret
mov
cmp
and
dec
popa
out
jns
add
jbe
imul
cmp
cmp
mov
sub
mov
ror
pop
and
adc
out
filds
std
sti
les
pop
inc
aas
cs
jne
es
in
and
jns
rorb
imull
mov
mov
imul
jnp
js
mov
mov
adc
mov
cmp
adc
aam
inc
push
push
mov
push
sub
sub
jne
icebp
and
cmc
aam
out
shll
mov
jne
icebp
or
in
fmull
sub
or
push
lret
shll
cli
mov
add
and
bound
rcrl
dec
xor
in
in
pushf
jbe
inc
ret
ret
std
dec
push
xlat
and
jb
das
add
xchg
jnp
jo
ficoml
xchg
imul
dec
jg
in
push
loop
pop
add
xor
inc
lds
dec
scas
cmpsl
or
mov
ja
test
outsb
mov
adc
jecxz
pop
mov
pop
test
test
daa
dec
sub
xchg
cmpl
lea
lcall
and
mov
push
aam
jle
jae
subb
gs
nop
jl
movsb
mov
xor
fwait
cmp
in
arpl
daa
cmpsb
xchg
fs
outsb
popa
sbb
popf
lods
mov
sub
xchg
je
adc
decb
dec
jbe
shr
sub
inc
jb
dec
lods
jle
xchg
mov
sbb
inc
shrl
jle
cmp
loopne
pop
mov
ja
sub
add
and
xchg
les
and
sar
add
sti
pushf
lods
jmp
add
cmp
addr16
std
jb
pop
dec
xchg
lods
jge
mov
lods
mov
cmp
test
mov
or
test
lds
mov
mov
and
jmp
shll
shl
push
out
push
inc
sub
or
insb
adcb
mov
nop
xchg
mov
inc
insb
jne
lret
cmp
sbb
andl
lahf
mov
fsubs
dec
pop
imul
sub
faddp
add
aas
add
mov
pusha
sbb
or
or
icebp
jno
sbb
jle
adc
test
call
insb
jnp
add
and
xchg
mov
xchg
icebp
mov
dec
into
leave
mov
push
outsl
mov
sahf
sarb
push
dec
push
call
out
insb
fdivl
dec
scas
xlat
adc
mov
lret
fs
lret
insb
xchg
popf
add
hlt
push
adc
dec
in
push
scas
mov
icebp
adc
ficoml
add
dec
scas
inc
ds
sti
repz
stos
mov
mov
clc
insl
movsb
testl
imul
scas
pop
in
leave
add
and
cmp
imul
push
add
repz
push
or
mov
test
xchg
lods
lret
test
xor
pushf
pop
out
sub
mov
cmp
mov
and
scas
or
pop
push
inc
imul
pop
mov
and
enter
cwtl
loop
out
test
das
ss
jmp
in
cmpsl
xchg
xchg
inc
cmp
or
sbb
aaa
pushf
xchg
jge
or
out
pop
loop
fistps
pop
xchg
mov
pusha
aam
lods
shll
scas
enter
arpl
push
jo
jmp
loopne
pop
pop
out
adc
out
cli
dec
fsts
and
dec
mov
or
xor
inc
cmp
scas
mov
sub
xor
jmp
ds
mov
int
dec
popa
or
push
lret
in
ja
jbe
popf
push
and
call
enter
fsubrp
push
scas
and
pop
sbb
pop
cmc
test
jnp
scas
cvtps2pd
jl
stc
test
scas
es
pop
xchg
push
lds
pushf
jo
jp
loop
xor
push
fsubrs
ret
jo
fcompl
sbb
dec
lcall
sbb
mov
mov
sbb
push
iret
in
jecxz
add
loop
repz
dec
mov
out
jbe
gs
sub
mov
sbb
std
push
push
push
repnz
mov
shl
jecxz
sub
jmp
shll
mov
pop
jmp
dec
je
fwait
bound
lret
jb
fdivrs
xchg
adc
mov
leave
mov
adc
in
outsl
sbb
sbbb
xchg
aam
rclb
cmp
mov
adc
mov
test
pop
dec
movsl
dec
mov
and
js
cwtl
and
push
mov
aaa
lods
js
sti
cmpsb
in
test
cld
inc
lea
aad
xchg
dec
mov
bnd
fwait
test
testl
fistps
xchg
jmp
dec
inc
push
push
imul
addr16
stc
mov
mov
adc
test
cwtl
imul
js
xchg
std
aam
lods
adc
hlt
outsl
test
xchg
jae
int
shrl
fildl
sarb
xchg
cltd
cltd
mov
lock
mov
rorl
xchg
out
fdivp
stos
mov
adc
xchg
xor
or
movsb
sbb
imul
inc
xor
add
push
adc
ja
xchg
lahf
cmc
jns
xchg
xor
sbb
sbbb
cmpsl
in
mov
xlat
hlt
loop
mov
cmp
hlt
lds
add
loop
mov
or
into
aaa
and
mov
mov
pushf
cltd
ret
inc
aad
sub
pop
imul
jle
and
mov
sahf
sub
shlb
adc
loopne
xor
push
lcall
aam
xchg
mov
dec
stc
mov
std
lea
push
mov
and
dec
jge
xchg
sbb
mov
push
cmpsb
dec
inc
mov
movsl
mov
jb
and
into
stos
cs
xor
popf
sbb
inc
das
fsubs
xchg
imul
aam
fsts
push
jae
not
cld
cmp
xchg
xchg
es
cmp
mov
or
xor
or
scas
repz
js
bound
mov
pop
sbbl
mov
arpl
imul
out
jnp
fisubrl
sub
xor
mov
or
fcoml
push
in
in
push
ror
xchg
xor
mov
mov
add
addr16
or
push
or
repz
sbb
and
xchg
sbb
inc
dec
add
push
sub
ja
movsb
xor
push
iret
mov
mov
mov
into
cltd
or
or
push
push
sub
mov
push
mov
test
out
bnd
mov
jbe
sbb
xor
and
push
inc
aas
nop
stos
adc
shlb
insl
movsl
inc
cmc
add
mov
sub
cltd
into
sub
jg
fxch
inc
add
in
add
mov
popf
cmc
and
int
daa
jge
adc
xchg
sti
or
cmp
push
sub
mov
push
cs
neg
ljmp
lret
jmp
insb
and
dec
xchg
and
pop
mov
pusha
add
push
jle
fsts
fiadds
inc
inc
fucomip
je
cmpsb
or
scas
imul
jecxz
push
xor
aas
dec
cmp
cli
jl
insl
push
mov
test
out
cmp
or
pcmpeqd
pop
sub
shrd
les
or
jo
and
mov
xlat
and
outsl
mov
stos
in
jp
aam
jecxz
jecxz
cmp
sbb
stos
push
js
jmp
daa
mov
mov
mov
sbb
call
repz
pop
jle
lret
xlat
mov
in
mov
push
fwait
popa
push
push
out
in
mov
loopne
insb
jae
in
jl
mov
and
clc
push
lock
sub
out
lcall
inc
imul
and
mov
loopne
inc
pop
mov
filds
clc
mov
push
aad
adc
mov
jne
mov
int3
mov
bound
incl
xor
and
ret
jnp
mov
loop
pop
jae
fsubrs
pop
sub
sbb
and
bound
fdivrl
sub
jbe
lahf
incl
sub
aad
sub
xchg
cmp
pop
orl
sti
sbb
and
add
dec
shlb
sti
inc
or
mov
push
popa
pop
xchg
pop
or
notb
in
std
incb
rcll
jo
mov
data16
inc
push
adc
or
lret
es
jne
pop
jmp
xchg
fstpl
ljmp
sti
hlt
cwtl
loopne
inc
dec
test
jne
cmc
jge
xchg
lods
mov
sahf
out
pop
push
xchg
sbb
xchg
and
jae
rol
clc
push
andb
mov
jns
sbb
int3
movsl
mov
sub
adc
add
insl
xor
push
jmp
std
push
scas
inc
pop
inc
daa
dec
push
add
adc
fistl
dec
xchg
xchg
mov
rclb
bound
push
sub
fsubrs
pop
xchg
add
or
and
ss
jg
fst
jmp
sub
adc
cwtl
repnz
das
pop
jmp
in
pop
aaa
mov
push
std
test
lock
stos
sbb
lret
mov
js
jae
inc
test
and
sbbb
icebp
jl
pusha
pop
inc
push
mov
out
out
daa
daa
leave
aad
dec
and
lea
inc
in
stos
lahf
loopne
mov
push
jg
into
loopne
jno
rol
pusha
jno
cmp
test
aaa
insl
dec
pop
outsl
out
inc
jne
hlt
dec
pop
dec
bswap
fmul
cltd
dec
enter
jmp
leave
sbb
sarb
xchg
inc
into
mov
jns
ret
add
xchg
add
scas
sub
pop
inc
dec
out
ja
ret
and
push
addr16
pop
clc
add
test
fdivrs
dec
lret
stos
in
pop
cltd
mov
mov
jmp
idivl
inc
fincstp
lahf
inc
in
das
dec
decb
add
insl
mov
daa
mov
pop
movsb
aaa
jmp
clc
pop
dec
mov
mov
or
push
sub
dec
aad
mov
fimuls
jne
lret
or
mov
testb
push
pop
popf
and
test
cmp
add
mov
dec
fidivrl
stos
mov
or
cwtl
mov
xor
push
add
gs
inc
jbe
jp
cld
adc
lds
mov
cwtl
lret
inc
jns
dec
imul
in
aas
dec
xchg
mov
rcrl
mov
adc
in
arpl
mov
lods
and
fists
cmp
stos
push
dec
in
cwtl
lret
jge
dec
mov
inc
enter
cmpsl
or
mov
push
push
out
enter
lods
xchg
mov
and
xchg
dec
and
xchg
pusha
mov
jge
test
ds
inc
add
cmp
arpl
jae
push
cmpsb
dec
popf
adc
push
inc
add
cmp
lahf
ss
repnz
loope
pop
movsb
xor
xor
xchg
enter
xchg
sub
sahf
push
xchg
inc
pop
lock
pop
icebp
or
sti
lods
daa
jne
test
xor
idivb
pop
mov
push
cmp
arpl
or
lock
push
xchg
iret
pop
or
xlat
xchg
out
inc
adc
jbe
cltd
cltd
mov
inc
pop
sub
xor
imul
jle
xlat
out
jge
mov
mov
ds
push
test
add
mov
ja
out
inc
shlb
adc
xor
xchg
popf
inc
dec
lret
roll
ficoms
insb
or
mov
push
sahf
sub
pop
addr16
into
add
fmul
lock
rcrb
adc
data16
lds
adc
lods
push
cmp
cld
sub
jbe
inc
fwait
add
or
pop
shlb
push
pop
loop
out
cmc
mov
loopne
test
shl
sbb
adc
frstor
cld
repz
pusha
loope
sti
jecxz
push
mov
mull
stc
rorl
cmpsb
jg
lea
sbb
push
arpl
mov
dec
rcr
sub
mov
dec
lods
rcrl
sbb
icebp
mov
outsl
movsb
mov
and
xchg
pushf
jae
jb
jp
ficompl
stos
and
cwtl
stos
aas
or
aad
arpl
das
sbb
jg
push
fs
xor
mov
mov
xchg
aaa
sub
mov
push
enter
jo
je
pop
lret
js
xor
test
jnp
out
dec
std
in
insl
inc
push
or
push
lea
ljmp
sub
inc
jb
dec
arpl
stc
adc
imul
dec
mov
mov
loope
cmc
fidivrl
in
imul
mov
fnstsw
mov
add
sbb
int3
and
fsubs
or
add
loop
gs
or
cld
rcl
push
or
sti
pushf
out
push
mov
push
and
loop
jae
loop
aad
xlat
popf
adc
mov
dec
cmc
sahf
fwait
ror
sub
add
jle
push
ret
packssdw
push
mov
pop
gs
xor
push
fnstenv
add
xchg
pop
add
inc
stos
addr16
ljmp
mov
cmp
pop
js
pop
inc
mov
sbb
daa
mov
insb
jno
pop
jp
add
call
insl
test
add
cmpsb
test
jg
test
in
jle
adc
lock
inc
inc
sgdtl
sub
insb
sbb
mov
jb
dec
cwtl
push
fistpl
sub
shrb
jmp
loop
popa
cs
xor
adc
adc
jns
inc
adc
mov
sub
or
push
lret
loopne
mov
sbb
ss
aad
data16
mov
mov
loope
sbb
and
dec
and
ficoml
adc
dec
int
das
mov
mov
andl
clc
ja
aam
stos
mov
outsb
aad
je
xchg
dec
inc
mov
call
xor
add
das
jno
dec
sub
pop
repz
jne
xor
jecxz
andl
mov
fisubl
or
push
push
leave
cltd
sub
out
lods
mov
xor
cmpl
stc
adc
push
daa
lds
inc
push
fistps
aad
xlat
sub
movsl
sahf
mov
pushf
add
lock
or
hlt
xchg
shll
cmp
sbb
lds
pop
movsb
xchg
imul
add
lahf
xchg
in
insl
sar
mov
pop
sahf
pop
scas
lret
mov
popf
xchg
outsb
cmp
nop
popf
inc
loop
out
cmpsb
lret
jo
int3
loope
lea
sub
xchg
lods
and
dec
xchg
jp
imul
mov
add
push
sub
pop
lret
rcll
pop
leave
loopne
inc
mov
dec
pop
mov
push
add
mov
mov
xchg
fldcw
or
inc
jae
pop
jbe
pop
jnp
lds
dec
pop
ds
cmpsl
mov
inc
push
loopne
mov
lahf
pop
adc
popf
adc
lods
call
cmp
cmp
cmp
loopne
sub
movl
into
jmp
stos
frstor
in
mov
and
or
lret
mov
psllq
ja
xor
mov
lock
out
scas
push
lret
aas
in
sahf
test
shlb
pop
mov
es
imul
push
dec
data16
fstpt
dec
ds
dec
cmpb
out
test
jg
aam
jbe
adc
arpl
sarb
and
dec
imulb
pop
rolb
test
fs
mov
icebp
arpl
push
orb
add
cs
or
es
cltd
aaa
lods
cmpl
xor
add
pop
jnp
test
cmpxchg
pop
cmpsb
mov
add
jl
lcall
push
sbb
mov
jnp
aam
sub
push
adc
fdivr
jne
ja
dec
mov
xor
insb
add
subl
mov
dec
fidivs
push
sti
mov
mov
cmpsb
push
pop
mov
dec
and
jmp
jge
cmp
inc
jae
mov
fldenv
loopne
xor
clc
mov
mov
inc
lcall
sbb
push
mov
int3
pop
fwait
orl
mov
popa
add
lods
mov
roll
cmp
pop
es
aam
aaa
pop
pop
lods
in
sbb
imul
push
out
aas
aas
dec
imul
test
xchg
mov
test
xorb
push
cmc
push
push
inc
and
inc
mov
dec
daa
inc
xor
mull
fwait
adc
mov
aad
pop
or
inc
cmpsl
fcoms
in
xchg
into
adc
insl
xlat
dec
lds
lods
hlt
xor
jmp
or
cli
js
mov
jle
imul
arpl
les
xor
inc
fisubs
test
mov
pop
sub
pop
mov
shlb
jae
pop
aad
fistps
cmpsb
repz
dec
lock
fs
dec
push
in
fbld
int3
call
lcall
xchg
inc
aam
mov
mov
incb
mov
movb
and
xor
movsl
inc
mov
data16
int3
clc
je
jne
jp
std
xchg
clc
int
adc
test
cmp
mov
jae
je
testl
sbb
rorb
stos
popa
mov
pop
xor
xlat
aas
inc
outsl
pop
imul
push
bnd
ja
neg
sub
fdivl
aad
fisttpll
mov
arpl
jae
stc
push
sahf
sub
xor
mov
pop
movsl
inc
loop
cld
mov
push
fmul
dec
shll
in
sbb
mov
cmpsl
les
push
faddl
xchg
jg
hlt
adc
outsb
clc
xchg
jmp
imul
lods
xchg
fbstp
inc
xor
test
jae
inc
cmpsl
inc
ret
insb
stos
cmpsb
stc
gs
stos
test
sbb
mov
xchg
dec
push
sbb
inc
mov
je
or
jne
mov
insl
fnstenv
add
or
cmovge
xor
pop
out
aam
pop
out
cmp
mov
lret
ss
or
or
es
sbb
fwait
imul
fdivp
pop
stos
jl
dec
mov
jmp
push
mov
sbb
xchg
cmpsl
stos
sbb
xchg
jmp
and
jl
sbb
dec
gs
mov
jno
clc
fcoms
inc
pop
iret
or
fadds
push
inc
push
fs
inc
repnz
and
icebp
sub
sbb
bndstx
inc
pop
stos
xchg
push
ja
cmc
or
js
jnp
cld
dec
xchg
scas
inc
mov
dec
movsl
imul
jl
outsl
jmp
insb
cmpsb
adc
add
call
and
pop
lods
jl
cmp
mov
mov
aas
call
imul
xchg
insl
inc
jmp
sbb
xor
mov
in
xchg
and
cmp
subb
lahf
mov
loopne
das
mov
out
push
dec
ss
mov
xchg
stos
call
stc
xchg
xor
frstor
xchg
jb
mov
pop
adc
out
mov
adc
and
lea
and
shlb
leave
scas
push
push
dec
cmp
lods
xchg
cmc
repz
mov
add
andb
loopne
and
mov
cmc
bound
xchg
stos
fcoms
pop
rsm
lret
xor
dec
xor
dec
fucomip
addr16
mov
xchg
inc
sub
adc
aad
mov
test
jae
cmpsb
inc
packssdw
push
pushf
add
mov
cltd
jge
test
lods
mov
cmp
cmpsl
insl
ljmp
mov
mov
jbe
insl
or
shl
hlt
add
int
repz
movsb
add
jns
xorl
jg
jp
mov
imul
add
push
mov
fildll
dec
push
jmp
lcall
aaa
inc
lret
cmp
jne
data16
add
fadds
bound
test
sub
out
jnp
fcoms
xor
shr
mov
jo
xor
or
daa
mov
js
ret
jne
test
mov
adc
push
fwait
rcrb
das
stc
inc
divb
adc
sbb
jge
fcoms
add
cmc
xor
sbb
add
xor
bound
ret
pop
mov
xchg
fistpl
inc
imul
cmp
cmp
xor
and
dec
inc
fmuls
jl
sub
idivl
ret
mov
mov
sub
mov
cmpsb
sbb
rcrl
repnz
xchg
clc
pushl
pushf
je
movsl
out
clc
pop
push
dec
sub
sbb
ror
ret
gs
dec
mov
in
ss
mov
cmpsb
pop
pop
xchg
cli
idivl
gs
loop
lea
scas
xchg
sub
cmp
jecxz
cmpsl
pop
sub
mov
sbb
insl
lcall
movsb
sbb
mov
xor
mov
sub
dec
xchg
sub
lahf
lahf
mov
les
push
test
mov
lret
mov
xor
idivl
push
mov
cs
inc
sub
decb
jmp
mov
sbb
cmpl
pop
and
add
in
mov
jne
mov
ret
aad
fimull
xor
pop
inc
xor
iret
add
add
nop
imul
jl
sub
int3
jae
dec
std
je
in
call
xchg
mov
pop
push
sub
xchg
int3
inc
jmp
add
mov
jbe
mov
add
addr16
mov
mov
xor
pop
hlt
cltd
jnp
mov
mov
inc
cwtl
clc
lods
fwait
pop
gs
sub
sbb
jno
imul
rorb
movsb
sbb
mov
loop
adc
in
cs
movb
xchg
or
mov
dec
into
adc
les
fxam
pop
sti
out
add
inc
fsubrl
sbb
jg
pop
cltd
inc
enter
dec
lods
test
and
test
icebp
adc
lret
cmp
dec
pop
enter
mov
hlt
adc
push
aad
sbb
lods
adc
xchg
outsb
and
lea
pop
dec
loop
xor
pop
pop
mov
lock
or
sub
ret
imul
aad
into
fs
inc
pop
shr
add
pop
fwait
ja
sbb
inc
push
mov
lcall
pusha
sbb
into
dec
ja
lcall
pop
and
je
sbb
mov
xor
jl
xor
ret
dec
clc
mov
scas
inc
mov
sbb
push
xor
sbb
xor
lahf
mov
or
movb
into
cmp
out
and
call
jae
adc
fwait
movsb
iret
push
push
cltd
cmp
int3
out
xchg
cmp
push
cwtl
cmp
sbb
test
jno
int3
jge
test
outsb
jle
sub
cmp
test
enter
aas
cli
ret
pusha
dec
mov
or
inc
pop
mov
push
mov
nop
add
repz
cwtl
push
cwtl
push
hlt
dec
mov
inc
xor
fwait
xlat
sub
imul
lret
inc
sarb
cltd
mov
pusha
sbb
sbb
ljmp
mov
sbb
sub
adc
mov
mov
leave
xor
orl
fs
test
popf
sets
mov
cli
and
gs
cmpb
and
sbb
add
jbe
or
sbb
jb
and
bound
icebp
or
jecxz
mov
repnz
pop
xor
sahf
sbb
sbb
mov
sub
sbb
sub
and
icebp
notb
xlat
repz
xlat
mov
push
addr16
cwtl
nop
mov
mov
inc
lahf
out
and
cmp
push
pop
test
std
fs
mov
push
push
mull
stos
mov
pusha
cs
mov
xor
and
sbb
mov
sub
mov
lret
cmpsb
out
lret
fidivl
cmp
dec
cli
rcl
sbb
and
pushf
inc
pop
aas
pop
jecxz
mov
jnp
clc
lods
push
adc
adc
sahf
dec
inc
cltd
push
pop
mov
jb
lahf
add
scas
and
mov
mov
pop
call
loopne
mov
lcallw
cmp
js
mov
mov
cltd
std
stc
jno
pop
inc
or
repnz
movb
sbb
rclb
std
fbld
xor
ljmp
int3
pop
mov
in
xor
les
pop
scas
xchg
fiadds
leave
xor
or
fs
jl
outsl
out
subl
pop
andb
inc
out
shlb
mov
orl
ficoml
cmp
adc
xchg
add
jne
mov
fcoml
icebp
dec
pusha
cmp
fldt
insl
cmp
xor
push
lret
mov
out
mov
scas
shrb
push
or
in
cwtl
xlat
pop
int3
stos
sarb
test
lods
ret
jbe
push
xacquire
dec
lds
int3
lcall
dec
pop
mov
iret
scas
xchg
icebp
clc
cmpsb
mov
xchg
inc
and
push
into
mov
ret
sub
mov
ja
and
mov
dec
mov
test
cmp
lahf
jb
jp
push
fiadds
stos
jnp
sub
fcoms
in
addr16
xchg
popa
rorb
imul
mov
das
sahf
or
notl
ffreep
sub
ljmp
jnp
xchg
add
sub
sub
jnp
std
push
or
sahf
sti
fcom
add
or
aam
loop
sub
fisubrs
inc
pop
int3
sub
add
cmp
inc
mov
jne
cltd
adc
imul
mov
push
adc
sbb
xor
sub
mov
fsubl
pop
sbb
bound
movsl
mov
and
mov
rcrb
sub
mov
or
fs
int3
jne
inc
test
lods
sub
pusha
dec
outsb
push
cmp
aam
stos
xchg
sub
jecxz
mov
fstp
mov
stos
ret
add
jns
insb
push
add
cmp
dec
shrl
std
bswap
mov
cmpl
pop
dec
dec
xor
dec
loop
repnz
xchg
imul
stc
xchg
or
or
push
pop
mov
rcrb
add
dec
mov
lahf
jle
loop
dec
std
sub
stc
xchg
movsb
sbb
ret
mov
loope
rol
adc
gs
scas
es
stos
add
adc
fmulp
cwtl
jne
insl
sbb
ficomps
add
mov
jecxz
out
addl
inc
jl
dec
ss
into
inc
rcrb
nop
int
pusha
ror
xchg
loopne
push
jmp
repnz
pop
pop
mov
jnp
loop
pop
aas
inc
pop
rol
loope
cmp
mov
out
fidivrl
movsb
xchg
pop
and
adc
lods
dec
push
jns
lret
dec
outsl
mov
mov
scas
std
leave
cmpsb
sti
jbe
xchg
jae
pop
lods
cmp
cli
xchg
rcll
cwtl
pop
sti
jp
add
push
push
ds
jbe
jnp
dec
rcll
repz
xor
push
sbb
xchg
inc
pop
push
test
and
adc
call
fnstenv
dec
jmp
xor
dec
mov
sbb
cli
push
and
in
aam
movsl
cmp
add
movsl
sahf
leave
sub
les
incl
mov
jns
std
lahf
sbb
mov
pushf
mov
pusha
push
jp
or
out
inc
adc
cmp
shlb
sbb
dec
lahf
ja
dec
negb
mov
inc
sbb
into
test
push
xor
pop
rolb
inc
jae
or
mov
and
stc
fisttps
jg
fucomp
push
insb
push
or
add
pop
xchg
mov
mov
stos
jns
inc
adc
insl
or
push
jno
xchg
xlat
mov
mov
push
pop
stos
lds
dec
mov
add
mov
push
sub
add
dec
dec
stos
sbb
cmp
stos
add
sbb
cmpsl
jle
out
mov
pop
mov
js
into
sarl
or
jb
jmp
xchg
pop
cltd
mov
mov
pop
inc
mov
testb
cmp
dec
stos
mov
mov
test
or
xchg
ficomps
adcb
popf
test
out
dec
pop
or
hlt
call
mov
xor
or
pushf
and
push
clc
jo
repz
in
ss
mov
or
push
add
mov
push
aas
shlb
test
jle
ljmp
add
imul
push
ss
ret
push
sbb
aad
sar
pop
sbb
lods
sub
pop
movsb
gs
mov
mov
mov
mov
and
sub
add
mov
pop
push
xor
outsl
rcrb
icebp
jg
out
jp
add
jmp
mov
or
das
add
stos
pop
roll
jp
fsubs
mov
cmp
mov
pushf
dec
sub
cwtl
and
mov
push
push
pop
ljmp
push
mov
jo
or
stos
mov
xchg
cmp
push
decl
mov
lods
add
dec
mov
sbb
jle
leave
outsb
sti
push
loope
jl
cld
stc
add
jns
push
out
pop
cmpsb
xor
arpl
mov
ljmp
lcall
mov
sti
dec
sub
jp
jo
mov
dec
inc
aaa
xchg
dec
mov
push
xchg
push
dec
popf
fcomps
or
hlt
inc
dec
xor
or
pop
sbb
repnz
mov
xlat
mov
push
push
in
pop
sub
daa
in
or
testb
rcrb
mov
push
sub
enter
test
fs
xchg
lret
les
lcall
int3
cmp
je
cmp
popa
dec
jmp
iret
push
or
repnz
jl
jne
xchg
lock
cmc
outsb
mov
and
xchg
xor
jnp
mov
in
adc
mov
lds
rcl
mov
pushf
sar
std
xor
sbbl
inc
test
popf
xchg
stos
rep
or
pop
xchg
out
cmp
sti
imul
cmp
ror
out
jge
sbbb
pushf
mov
arpl
pop
pop
in
push
pop
pop
jae
xchg
adc
push
dec
lods
lods
pop
inc
insl
call
shrl
roll
mov
sbb
add
divb
aaa
ljmp
mov
scas
mov
dec
mov
scas
cmpb
scas
leave
xchg
dec
outsb
cmp
adc
gs
dec
jmp
and
xlat
sarw
cmp
insb
push
out
mov
filds
shrl
mov
roll
test
pop
dec
inc
mov
mov
imul
dec
pop
jl
gs
inc
daa
pop
outsb
in
imul
lret
and
push
movsl
jo
mov
sbb
lret
rorl
xchg
arpl
xor
sti
sbb
fsubr
and
pusha
int
cli
mov
jno
imul
dec
mov
leave
dec
inc
xchg
scas
and
int
mov
hlt
mov
push
mov
push
dec
scas
jmp
sbb
out
add
sahf
adc
xchg
in
pop
inc
test
push
pushf
pop
imul
shlb
ficomps
mov
popl
clc
je
xchg
inc
fs
movsb
push
add
mov
pushf
ret
fsubrs
push
sub
xor
movsl
fisubrl
mov
inc
and
cmpsb
pop
or
xchg
incl
movsl
mov
mov
int
mov
sbb
sub
pop
and
inc
xchg
pand
mov
push
cmpsl
lcall
cmp
rorl
add
push
into
xchg
jae
sbb
dec
leave
cmp
or
xor
mov
dec
testb
push
loope
add
dec
rorl
pop
pusha
and
gs
sbb
push
inc
push
dec
gs
lret
sbbl
insl
aas
in
pushw
mov
gs
imul
or
dec
push
or
lds
cmp
mov
pop
fsubrl
aas
cmp
ljmp
out
push
shrl
lock
stos
aad
dec
xchg
or
push
ds
push
scas
add
int3
ss
js
jmp
popf
popf
inc
dec
lea
nop
jge
cmpsb
add
mov
shl
imul
in
jg
std
cwtl
add
xchg
jbe
mov
dec
xor
lret
mov
dec
adc
lods
pop
xlat
push
inc
fmuls
mov
ret
xchg
dec
jp
jmp
subb
cs
cmp
lcall
and
pusha
or
insb
dec
lds
jae
loope
and
push
repz
or
out
jbe
cmp
dec
push
sbb
jae
mov
sahf
mov
out
lds
out
adc
or
sub
ljmp
xchg
mov
imul
xchg
mov
lret
add
movsl
test
inc
enter
inc
daa
jb
and
dec
aad
inc
mov
cmp
addr16
ret
sbb
push
orl
jne
xchg
inc
jecxz
add
cmp
sub
dec
dec
in
ficoms
pop
mov
int
push
lahf
xor
adc
add
jns
inc
jle
faddl
mov
fdivr
adcl
push
add
cld
mov
test
push
push
outsl
pop
xor
pop
data16
mov
fdivp
test
xchg
in
push
cmp
icebp
in
fdivl
jns
pop
dec
adc
lahf
or
mov
es
cwtl
testb
stos
sbb
dec
inc
lea
dec
iret
fs
and
mov
fs
call
loope
js
repnz
das
insb
cli
mov
addl
pushf
inc
xor
dec
out
pusha
gs
push
add
ret
addr16
test
pop
mov
nop
jns
std
push
pop
in
cld
stos
fisubs
adc
pushf
inc
mov
ret
mov
out
adc
adc
cmpsl
push
mov
cmpsl
jae
aad
pop
jno
adc
jo
mov
xchg
mov
std
jae
sub
cmp
mov
or
rorl
adc
fisttpll
dec
cmp
mov
xorl
adc
xchg
lahf
test
lds
mov
outsb
and
fidivl
dec
daa
xchg
inc
outsl
pop
and
les
adc
ja
mov
or
xchg
pop
push
adc
fidivs
mov
les
nop
mov
pop
test
push
test
add
cs
lea
shl
adc
push
movsl
cmp
scas
xor
dec
sarb
icebp
or
mov
xor
mov
jg
mov
xchg
jae
add
mov
jecxz
xor
test
inc
mov
call
jns
scas
int
aam
jns
int3
popa
sbb
lea
xor
add
decl
dec
jl
inc
testl
mov
dec
rorl
xchg
push
movsb
mov
sbb
repz
out
lods
in
lods
shl
adc
pop
push
lret
cmp
dec
pop
cmp
daa
in
frstor
outsb
insb
jp
mov
jo
xchg
cmpsl
cld
or
add
nop
popa
cld
dec
in
fsubs
adc
cltd
jns
sbb
pop
adcb
dec
xchg
arpl
ret
dec
xor
push
adc
in
mov
dec
stos
ss
add
adc
inc
fcomi
lret
cmp
movsl
cmpsb
gs
cmp
mov
ja
shll
loopne
mov
jecxz
dec
aas
push
fwait
xchg
cltd
push
fs
mov
add
pushf
xchg
into
mov
outsb
jg
push
pop
cmp
or
cwtl
adc
aas
ds
mov
add
aam
fidivl
cwtl
mov
sahf
mov
repnz
xchg
mov
jne
iret
add
aad
xorb
jmp
or
pop
sbb
sbb
dec
out
xchg
std
enter
mov
stos
cmpb
das
popf
das
js
leave
mov
sub
sti
movb
movb
and
push
imul
mov
inc
fidivrs
mov
dec
sub
add
hlt
in
jl
lahf
sbb
leave
inc
mov
sti
rcr
pop
sarl
ss
stc
adc
jne
xlat
xchg
sbb
iret
es
and
pop
xchg
dec
les
cwtl
mov
addr16
outsl
call
setae
adc
inc
shrb
and
fwait
dec
popf
push
ror
clc
nop
push
lcall
scas
cltd
sbb
or
jecxz
cli
lods
orl
adc
xor
vpaddsb
ret
jle
push
and
mov
or
add
inc
xlat
mov
ljmp
xor
pop
test
outsb
mov
cli
xor
pop
dec
call
orl
mov
int3
and
sar
insl
pop
xchg
mov
clc
and
xor
jae
clc
adc
inc
push
cmpsb
xchg
dec
out
dec
cmpsb
sub
mov
mov
popl
mov
bound
imul
fstpt
pop
pop
rcr
loop
jmp
add
neg
js
aam
jae
fstpl
out
adc
mov
pop
xlat
cs
xor
test
aaa
push
fstpt
jp
pusha
mov
mov
lret
pop
orl
notl
scas
into
push
push
aad
aam
fstl
movl
push
mov
pop
out
test
or
fs
test
xchg
out
push
cmp
pop
inc
ds
dec
and
in
xchg
ror
mov
push
jbe
push
or
lcall
xchg
jo
clc
movsb
adc
jecxz
or
dec
mov
add
jns
bsr
mov
aaa
jns
lahf
jne
xchg
insl
arpl
cltd
sbb
int
mov
push
scas
arpl
enter
testb
scas
clc
bound
sti
insl
cmovg
aaa
lds
jecxz
dec
push
sbb
inc
imulb
adc
jb
enter
shrb
sub
aas
lcall
push
xor
mov
loope
fcomi
cmc
ficoml
mov
das
ja
xchg
cmp
push
jecxz
or
cmc
inc
dec
cli
bnd
repz
adc
out
cmpsb
inc
sbb
loope
test
mov
pop
shl
push
std
pop
jo
xchg
or
mov
mov
adcl
mov
daa
pop
mov
jl
testb
hlt
mov
pop
jle
add
ret
dec
iret
mov
mov
je
sbb
push
mov
mov
inc
pop
out
stos
pop
push
sti
pop
imul
pop
sub
hlt
xchg
xor
inc
xchg
rcll
in
pop
fwait
mov
mov
data16
imul
xor
sub
fbld
or
jb
mov
scas
xor
out
stc
mov
pop
mov
in
scas
add
cli
jae
ljmp
repz
cmp
adc
and
sahf
cs
ss
clc
sub
hlt
mov
ja
push
movsb
push
add
jmp
sub
aas
adc
fdivs
mov
mov
jae
jge
push
xor
daa
mov
stos
cwtl
pop
loope
sub
repz
push
gs
push
dec
fisubrl
adc
nop
cld
jnp
inc
push
add
ret
rolb
mov
mov
into
xor
ds
mov
sbb
push
lcall
sub
data16
inc
pop
pop
jae
push
cltd
rcrb
sbb
das
lods
mov
mov
lock
mov
imull
leave
mov
inc
movsl
pop
dec
and
ljmp
mov
push
push
mov
arpl
out
mov
or
push
jb
jecxz
adc
imul
xor
call
andl
test
fsub
push
xchg
cli
addr16
imul
std
dec
sbb
cmp
ds
xor
cmpsb
popa
inc
sub
or
movsl
pop
data16
call
push
add
mov
test
pop
nop
clc
mov
mov
lods
jbe
sbb
pop
and
sub
jbe
fs
jmp
in
rcr
jge
cmpb
cmpl
or
popf
mov
push
jo
imul
sbb
dec
inc
sarb
dec
jp
scas
push
std
popf
jge
rcr
mov
jbe
xchg
gs
adc
lds
fs
mov
add
dec
sub
pop
aad
mov
dec
adc
lods
sub
mov
sbb
fistps
movsl
dec
nop
fisttps
lods
call
mov
mov
inc
and
jb
adc
push
pop
mov
loope
fcompl
lcall
aaa
xchg
fdivr
or
jp
mov
int3
or
rcll
loop
mov
add
test
ja
cmp
or
and
arpl
jp
loop
xchg
push
jmp
sub
sahf
ss
inc
clc
pop
push
and
dec
idivb
cmp
and
inc
xor
jmp
fimuls
mov
cmpsb
je
gs
mov
cltd
mov
sbb
cmp
inc
int
pop
je
cmp
push
je
loopne
pop
loop
movsb
jne
popl
jge
lret
mov
xchg
test
cltd
mov
pop
adc
iret
fisubl
loopne
std
xchg
mov
mov
inc
mov
push
rcll
adc
jb
fidivrl
add
mov
mov
ret
arpl
fs
fiadds
push
mov
fs
jecxz
mov
adc
and
sub
fdivs
dec
gs
lea
inc
aaa
mov
stc
jnp
fsts
inc
adc
pop
sti
lcall
pusha
in
cmp
pop
push
push
clc
pop
inc
mov
jne
mov
mov
rcll
mov
inc
js
jnp
push
nop
jbe
aam
fmuls
sub
mov
pop
hlt
es
stos
push
pop
sub
mov
sub
incb
daa
stos
sbb
push
mov
xchg
ljmp
test
jno
sbb
fdivrs
aaa
and
fsubl
inc
xchg
xchg
xor
pop
jns
scas
fcmove
outsl
jnp
les
fs
inc
jbe
enter
inc
mov
ljmp
xor
mov
test
pop
cmp
lods
in
add
mov
leave
sbb
and
and
int
notb
dec
and
push
sbb
xchg
jb
fbstp
in
test
les
xorb
inc
xlat
mov
sbb
pop
adc
or
cli
jecxz
xchg
xchg
push
cmpl
and
push
std
sbb
ss
push
mov
add
and
xor
inc
xchg
and
hlt
pop
or
fisubrs
push
xor
in
cli
jns
out
lea
jns
int
adc
mov
push
lret
stos
out
dec
imul
scas
rcr
cmp
or
popl
pusha
lahf
push
aad
psubsw
mov
push
scas
mov
mov
out
jg
loopne
cmp
outsb
jb,pn
fadds
push
cmp
das
mov
jne
jns
or
aaa
xchg
js
mov
push
lods
leave
dec
dec
xor
mov
xchg
gs
jno
mov
pop
into
cmc
mov
mov
adc
pop
jbe
addr16
out
inc
or
inc
sbb
and
bound
shrl
fdivr
xor
cmc
pop
inc
mov
sub
std
addr16
cmp
inc
or
pop
rcll
jne
and
sbb
pop
adc
mov
jmp
sbb
jno
je
arpl
pop
pop
les
pop
jmp
and
cmpsl
je
mov
shl
mov
pusha
jmp
sti
icebp
jb
adc
xor
pop
and
and
lock
out
mov
pusha
sahf
xchg
clc
ret
jns
fiaddl
jle
and
loop
outsl
inc
adc
add
mov
xchg
add
jae
cmp
mov
xchg
leave
cmp
dec
jmp
inc
lds
fs
lea
cmpsl
shrb
add
scas
lock
xchg
or
orb
fadd
adc
mov
jmp
push
ret
js
sbb
pop
cmp
inc
pop
pop
mov
jae
and
cwtl
adc
xlat
inc
jno
mov
nop
cmpsl
lret
cmp
lds
dec
out
xbegin
insl
cmp
mov
push
sub
fstps
aad
test
jmp
cmp
movsl
int
sahf
mov
pop
dec
imul
add
test
leave
ret
into
lcall
pop
push
jnp
aaa
jp
push
pop
loop
cmp
inc
push
scas
adc
jg
clc
push
ficomps
pushf
rcrb
pop
jne
cmp
adc
cmp
pop
lock
cwtl
mov
fadds
mov
jge
into
or
popa
adc
enter
xchg
shlb
mov
movsl
dec
jle
es
fildl
inc
xor
fldt
or
aam
int3
push
cmpb
popa
mov
and
hlt
test
shrl
adc
aas
je
adc
fs
xor
mov
negb
in
dec
xlat
mov
pop
inc
ss
cltd
dec
jmp
repnz
sub
mov
or
movsl
push
mov
out
js
nop
inc
xchg
sbb
fisubs
int
sbb
sub
rcll
stos
fcomip
mov
sbbb
dec
and
xchg
jae
adc
xchg
mov
push
cli
push
js
int3
inc
je
xorl
in
cmc
out
add
fimuls
mov
jle
cs
and
add
push
lods
adc
mov
negl
nop
aam
dec
xor
push
inc
cmp
and
dec
gs
lds
xor
aas
test
mov
mov
dec
sbb
in
sbb
shr
mov
add
insb
testb
add
movd
pop
std
push
push
adc
insb
dec
push
out
xorl
pusha
xchg
shlb
adc
push
imul
int3
stc
in
jb
sbb
pop
imul
outsb
andl
pop
repz
cs
sub
cwtl
mov
or
outsb
rorl
inc
outsl
xchg
out
enter
ss
pop
sub
ror
adc
cmpsl
sub
or
lods
jb
pop
ficompl
xlat
int3
and
mov
nop
xchg
mov
sub
sbb
ror
insl
xor
insl
or
push
jb
ja
stc
hlt
mov
mov
sarl
push
aam
adc
dec
push
jecxz
jg
or
push
jns
and
mov
jb
jl
scas
xlat
pop
or
outsb
mov
sbb
daa
imul
roll
repz
int
out
xchg
push
sub
xor
lret
cld
cli
mov
jb
or
and
sbb
adc
test
or
mov
ds
rcl
mov
jmp
aas
js
add
mov
adc
aaa
pop
lcall
mov
adc
xor
cmp
xor
sbb
inc
sbb
movsl
loop
and
jmp
xor
xchg
fs
test
lcall
and
adc
or
dec
cmp
pop
mov
ja
xor
insl
mov
out
xchg
xor
sbb
scas
cltd
stos
cmp
push
sbb
out
sbb
aam
adc
out
fwait
adc
push
pop
daa
jno
mov
sub
lds
pop
dec
sar
add
cld
cwtl
pop
adc
pop
push
test
inc
inc
addr16
nop
push
push
jnp
cld
or
dec
jns
cmp
push
test
shlb
lock
fnsave
push
gs
cmp
push
add
stos
push
dec
ljmp
test
cld
mov
lret
pop
inc
pop
xchg
loop
lds
into
outsb
icebp
jp
loop
xor
fwait
stos
mov
lcall
adc
xor
cs
nopl
bt
cmp
cmp
test
inc
dec
mov
into
adc
cmp
out
sbb
in
push
adc
and
pop
popa
inc
cmp
xchg
pusha
mov
int3
or
je
rcl
sub
jl
mov
stc
sbb
addr16
add
es
fnsave
jle
daa
mov
test
mov
ret
test
lds
cli
lods
dec
mov
or
loope
add
js
sub
sub
xchg
mov
cltd
frstor
xchg
sbb
adc
push
aad
daa
or
cmpb
and
xor
push
mov
adc
mov
xlat
and
pop
fwait
and
xor
dec
ficompl
sub
xchg
adc
and
shlb
sub
test
mov
stos
mov
andb
jnp
mov
mov
sbb
mov
in
call
test
ret
xor
notb
ret
dec
inc
lcall
xchg
inc
cmc
xor
ja
sti
divl
sub
adc
sbb
jl
arpl
icebp
jns
push
jmp
sub
sarl
dec
jno
pop
int3
mov
or
adc
add
xchg
mov
in
pop
sti
dec
and
xchg
mov
mov
test
jno
popa
jbe
leave
out
pop
stc
mov
pop
addb
or
pusha
mov
jo
mov
jecxz
insb
divb
jp
and
adc
and
decb
mov
clc
mov
add
mov
mov
adc
cld
or
cmp
jne
sbb
movsb
lahf
aam
adc
add
sbb
test
push
ficoml
inc
mov
into
pushf
fistpll
fcmovnb
xlat
ljmp
jne
lret
fmul
dec
loope
std
mov
dec
ret
lods
pusha
sar
hlt
mov
test
pop
mov
call
mov
add
mov
insl
jns
mov
mov
mov
mov
int3
sbb
jge
xor
xchg
sti
dec
sub
mov
test
jecxz
andb
imul
pop
xchg
jle
pushf
fdivp
sbb
hlt
sub
arpl
jnp
adc
adc
or
lret
adc
adc
aas
repz
repz
out
in
sti
ds
mov
add
cs
stos
mov
pop
mov
fs
jmp
ret
loope
pop
mov
nop
fcompl
loope
jb
mov
mov
pop
mov
outsl
sub
test
enter
or
outsb
mov
or
pop
sbb
aam
push
movsb
push
jnp
int
xchg
std
mov
push
xor
and
daa
rolb
mov
lock
insb
sar
rclb
ds
mov
cmc
out
repz
or
mov
mov
inc
mov
outsl
les
out
cld
add
pop
pop
xchg
not
xor
in
push
mov
jle
mov
faddp
test
insl
inc
rorb
cltd
cmp
cli
imull
repnz
jg
lcall
xchg
and
mov
mov
mov
push
and
push
sbb
loope
cmc
push
cmp
cmp
stc
sbb
into
sub
dec
push
ja
jp
out
and
jmp
daa
addr16
mov
rol
es
inc
push
mov
jae
insb
lahf
jns
sub
sarb
dec
push
sahf
fcoml
outsb
in
xchg
fs
inc
xchg
lret
add
sub
in
scas
movb
mov
stc
sbb
popf
bound
sbb
movsb
aad
test
lock
lods
rcl
jecxz
call
sbb
roll
js
mov
adc
movsl
xor
inc
movsl
pushf
inc
xchg
addr16
cli
mov
je
test
cmpsb
bound
cltd
divb
test
outsl
iret
xor
bound
ss
mov
imul
lock
fistl
fldcw
repnz
dec
push
aaa
pop
jp
cmp
aaa
dec
fistpl
push
inc
push
pushf
scas
jle
cmpsl
pushf
xchg
orl
addr16
shrb
xchg
jle
and
shll
dec
sbb
inc
or
push
mov
sti
jnp
xor
or
dec
bound
push
xor
inc
or
nop
ss
jmp
mov
sbb
popf
sahf
jmp
dec
dec
pop
inc
ljmp
dec
aam
das
add
adc
dec
and
push
inc
cmpsl
dec
xchg
fwait
sti
cli
fmull
xor
gs
mov
sbb
sbb
ljmp
cmp
adc
jb
or
pop
sbb
jno
and
inc
adc
loopne
cmpl
jle
dec
dec
dec
out
pop
rorb
js
test
jnp
les
outsl
int
dec
ljmp
test
arpl
in
into
mov
or
adc
xchg
std
cmc
je
imull
out
loopne
inc
cmc
mov
icebp
dec
stc
dec
adc
sbb
xorl
mov
and
pop
test
inc
xor
dec
cmp
test
fdiv
repnz
mov
jp
ss
dec
outsl
jb
mov
cli
push
out
and
andb
in
shlb
enter
cmpb
mov
xor
jmp
out
leave
repnz
and
adc
ja
mov
ret
push
ds
pop
out
push
or
xor
pop
movsl
in
je
data16
mov
add
jecxz
out
jg
ret
dec
pop
fucomip
in
xor
into
pop
fidivrs
lods
jle
out
or
out
nop
test
fucomi
push
xchg
inc
cs
dec
pop
fisubrs
sarl
jbe
push
and
ljmp
mov
fnstenv
jp
or
jmp
and
pop
adc
dec
adc
and
or
xor
popa
in
insl
pop
push
sub
fldl
insl
xchg
aad
test
sar
lods
pop
idivl
mov
xchg
fisttpl
jge
fdivrs
mov
or
orb
pop
adc
sbb
lock
push
inc
adc
push
stos
stos
xchg
mov
test
push
and
push
jmp
dec
sti
les
cmp
cmp
mov
mov
cmp
in
lahf
sbb
jnp
mov
cmp
dec
js
xchg
jne
mov
sub
bound
mov
inc
movsl
mov
or
pop
mov
inc
pop
lret
outsb
or
aaa
or
or
lret
jmp
mov
add
xchg
pinsrw
out
sbb
jle
sbbl
adc
mov
or
jg
pop
jp
in
popa
push
das
lea
xchg
push
adc
cmp
cli
dec
pop
cmp
sti
push
jbe
sub
add
ret
pusha
out
lcall
sub
test
dec
add
inc
mov
lret
cld
loopne
cmp
inc
repz
or
sbb
arpl
loop
ljmp
iret
jb
pop
decb
xlat
lret
inc
or
ja
adcl
mov
inc
cmc
inc
scas
dec
jbe
loopne
je
je
fwait
xchg
cwtl
roll
sbb
mov
stc
push
cs
mov
fnstsw
ret
or
jb
das
clc
test
add
pushf
push
repnz
leave
or
loope
shll
push
stos
jmp
pop
push
cmpsb
stos
pop
inc
dec
ds
xchg
jbe
aam
mov
dec
lret
xchg
mov
int3
lcall
decl
or
and
outsl
js
dec
mov
sub
mov
jae
enter
and
sbb
cltd
push
mov
mov
xchg
push
dec
xlat
imul
xchg
ja
and
pusha
mov
xor
add
popa
mov
adc
or
pop
test
ret
jg
lock
sub
mov
outsl
lret
and
xchg
and
test
push
call
xor
daa
cmp
aaa
enter
scas
mov
arpl
out
sbb
out
jbe
mov
inc
xchg
and
jp
pop
mov
sub
cmp
aas
add
clc
shll
mov
jmp
add
push
popa
push
outsl
int
loopne
mov
mov
repnz
stos
ja
pop
add
cwtl
sub
int
jl
mov
les
inc
stos
xor
jge
or
pop
mov
lret
cmp
jmp
lock
pop
lds
cld
das
rorb
or
lea
test
out
dec
test
out
cli
cltd
clc
in
rorb
movsb
mov
cld
push
enter
aas
subb
jg
in
pop
and
sub
mov
dec
clc
jae
push
push
gs
add
loop
in
stc
sbb
pop
fstl
rolb
or
imul
loopne
inc
add
ror
sbb
lret
jnp
dec
push
jbe
pop
in
cmpsb
mov
orb
lea
divb
das
movsl
push
stc
lea
in
ss
mov
sub
icebp
stc
adc
mov
out
dec
add
xchg
inc
sub
and
adc
jle
popa
dec
mov
int3
outsl
lods
ret
or
push
ljmp
dec
andb
pop
sub
jmp
jnp
clc
and
xchg
dec
push
popa
push
and
scas
xlat
pop
sahf
aas
inc
dec
push
mov
adc
rorb
das
cmp
jbe
imul
aam
xlat
pop
into
aas
and
adc
jbe
pusha
je
mov
rcrl
sbb
mov
pusha
mov
cmc
dec
sub
loope
jecxz
stc
rolb
movsl
pop
sarb
xchg
mov
push
rolb
pop
inc
push
mov
outsb
loop
push
mov
pop
scas
pop
clc
stc
sub
lods
xchg
test
mov
test
rcll
push
sti
xorb
pop
jno
hlt
fidivs
xchg
pop
mov
sbb
push
mov
test
popf
add
xchg
mov
popa
hlt
addr16
aaa
sub
lahf
stc
out
ficompl
dec
sub
xchg
das
sbb
int
jbe
call
jmp
scas
shlb
or
sbb
mov
movsl
dec
xor
fldcw
loopne
rcll
dec
mov
fsts
fsubl
adc
out
pushl
xchg
cs
fimull
test
sub
jnp
clc
lret
xlat
into
jmp
loope
out
mov
test
push
mov
cs
sub
notl
push
jmp
mov
je
lock
lods
push
cmpsl
rclb
sarb
mov
add
sub
jl
mov
jo
inc
loope
xor
lahf
mov
jne
mov
pushl
filds
loope
scas
sbb
test
test
movsl
outsb
mov
or
mov
cmp
or
mov
call
cltd
xor
hlt
mov
popa
and
in
int
repz
test
add
cmc
adc
out
jbe
adc
mov
cmp
adc
mov
cwtl
ret
jnp
int
iret
adc
jle
aas
aas
cwtl
cmp
push
pop
stos
or
insl
cld
mov
push
std
xchg
and
loopne
mov
lods
icebp
pop
sub
push
push
cmp
xor
ja
cmp
cmpsb
sbb
pop
and
aas
call
cld
shrb
or
es
or
push
pop
jbe
mov
push
xor
enter
or
or
iret
push
imul
int3
test
mov
and
dec
imul
sbb
lret
jb
andb
sbb
xchg
jge
arpl
lret
push
inc
stos
mov
lock
mov
shlb
jbe
pop
add
add
mov
jae
gs
out
lcall
sub
dec
out
push
in
out
push
adc
clc
pop
scas
xor
pop
mov
xchg
or
loop
outsb
mov
mov
mov
iret
and
cmp
out
call
orb
mov
lock
push
push
aam
jge
adc
and
out
push
in
ret
push
adc
xchg
lock
jl
pop
ds
push
pop
movsb
adc
call
xchg
inc
jl
and
pop
fcomps
out
mov
mov
jp
cmp
adc
sarl
js
ficompl
cltd
mov
mov
xchg
and
popf
das
jne
and
dec
push
test
neg
sti
sub
inc
dec
mov
fsts
lods
out
xchg
pop
sub
mov
pop
adc
daa
jmp
push
sbb
jo
xchg
popa
dec
in
pushl
push
es
xchg
notb
movsl
stos
adc
lahf
lret
jae
cmp
sbb
fisttps
cmp
ds
les
les
sahf
mov
xor
xor
push
arpl
sub
insl
push
fildl
push
mov
mov
dec
add
mov
inc
cmp
inc
stc
in
push
mov
test
data16
aaa
loope
cmp
fldenv
jg
cli
andb
out
repz
push
vmovdqa
in
sub
adc
cmp
push
or
and
scas
mov
lcall
and
jl
lret
pop
aas
inc
jge
add
cmp
inc
jle
sahf
add
mov
in
iret
lea
sub
push
lods
jmp
jo
pop
sbb
test
call
out
mov
or
xor
je
fcomp
sbb
pop
cltd
or
or
mov
inc
jg
andb
push
mov
cmp
pop
add
dec
jmp
jae
or
rcrb
cmc
imul
cmpsl
cmp
loop
int3
adc
mov
int3
dec
cmp
sub
mov
jne
mov
jo
lret
arpl
xor
add
jmp
dec
pusha
add
add
sub
mov
lds
xchg
aas
adc
notl
outsl
pop
mov
jle
jge
add
fnstenv
mov
inc
push
mov
call
idivb
mov
and
ficomps
dec
std
sub
mov
jle
in
arpl
cmpsl
mov
sub
ret
adc
insb
jbe
sub
bound
mov
mov
mov
scas
fwait
test
pop
mov
jge
les
nop
je
xchg
pop
jmp
addr16
add
mov
cmpb
mov
mov
imul
jns
dec
test
popa
sbbb
dec
jno
pop
push
orb
rcrl
int3
stos
xor
push
xchg
imul
jno
pop
pop
adc
popa
jmp
jo
jb
mov
push
dec
lods
es
les
enter
pop
scas
fnstcw
fcompl
xor
lahf
dec
cli
out
jle
pop
jecxz
dec
pop
dec
aad
xor
cmp
jp
fldt
cmpsb
arpl
test
ret
out
or
test
and
mov
scas
sbb
jbe
testb
movsl
jle
out
add
mov
xchg
mov
push
icebp
xchg
loop
lret
es
mov
cltd
insb
ret
dec
arpl
cmpsl
xchg
xchg
pop
add
inc
cmpsb
mul
mov
pop
pop
xchg
mov
insl
test
pop
fs
jo
in
mov
mov
insl
adc
movsb
aas
hlt
xchg
mov
xor
test
jne
ljmp
pop
test
cmp
daa
or
in
aam
jne
repnz
scas
les
jnp
repz
push
cmp
int3
adc
or
dec
out
xchg
enter
push
int3
mov
jo
scas
adc
out
jbe
jo
aam
in
loop
in
dec
dec
xor
clc
mov
and
dec
lcall
popf
push
repz
xor
lret
sahf
or
jl
xchg
push
ret
cmp
notl
jge
cmp
xor
xchg
lods
mov
cli
mov
mov
mov
pop
cld
std
pop
mov
push
movsl
lcall
or
mov
or
mov
cmp
sbb
inc
hlt
pushf
jecxz
out
xchg
jnp
push
fbstp
or
aad
loopne
dec
leave
xor
or
sbb
int
pop
add
mov
mov
adc
push
sub
sbb
test
fnsave
or
fs
pop
xchg
stos
push
cmp
mov
leave
and
dec
xchg
cli
mov
xchg
adc
pushf
adc
dec
xor
testl
or
cmp
xor
enter
fcoml
mov
lret
shrb
xor
js
push
and
add
inc
fistpl
lea
inc
xchg
cmp
test
dec
push
cmpsb
loope
shll
in
adc
jno
inc
dec
cli
jnp
es
pop
repnz
cmovle
mov
lcall
ja
xorb
jns
mov
rcll
push
sbb
mov
xchg
mov
aad
clc
push
aas
not
jb
int3
mov
sbbl
mov
cmp
movsb
sbb
inc
daa
loopne
dec
and
pop
push
sti
mov
sub
test
popf
jo
je
fnstenv
xchg
cmpsb
or
les
mov
mov
jnp
sub
cmp
aaa
xor
call
dec
into
femms
lret
dec
mov
sti
push
andl
sbb
inc
jle
jb
aas
mov
jb
adc
inc
xchg
hlt
mov
push
pusha
sub
push
sbb
xchg
stos
movsb
adc
fsubr
dec
cmp
pop
lahf
aaa
out
jnp
test
enter
or
push
lret
sbb
mov
mov
sbb
ss
xchg
fsubr
sub
xorl
sbb
out
and
sarb
gs
or
mov
xor
test
push
mov
js
stos
loope
repz
sub
inc
outsl
sbb
cmc
stc
in
cmp
aam
xor
mov
addl
push
mov
pop
xor
pop
adc
add
aad
je
jbe
fcompl
rclb
sub
pop
pop
fwait
rcll
dec
or
mov
in
andl
inc
incb
lock
dec
add
ja
xor
pop
xor
or
arpl
dec
xchg
repz
or
fidivl
and
cmp
inc
pop
sbb
pop
xor
in
stos
xchg
popa
push
jb
ret
ret
insl
out
je
je
xchg
xor
bnd
arpl
or
ds
jmp
jg
jnp
push
jbe
out
shll
outsl
cwtl
cmpsl
cs
stos
mov
pop
mov
add
loopne
out
xlat
xchg
outsb
mov
es
and
xchg
test
sbb
push
dec
loope
cld
leave
and
cmp
jg
push
out
faddl
mov
dec
mov
roll
fst
and
shlb
or
jns
jmp
sub
inc
mov
in
mov
pusha
mov
push
ret
je
loopne
or
out
sbb
stos
cmp
cmc
scas
popf
lods
rcr
or
xlat
sbb
mov
jne
test
mov
xor
mov
out
stc
repnz
mov
loope
push
xchg
clc
push
cmp
movl
push
jne
adc
cmpsl
lahf
test
cmp
out
in
sub
pop
jge
lds
mov
in
sub
xor
push
cmp
in
or
cli
inc
stos
popa
push
pop
pop
ja
mov
mov
adc
iret
pop
mov
negb
outsl
mov
mov
icebp
ds
mov
xchg
push
pop
cmpsb
insb
sbb
sub
lret
repz
unpcklps
loope
pop
ficompl
cmpsl
xchg
inc
sarb
insb
into
lret
mov
leave
shlb
inc
insl
sbb
jmp
cltd
btsl
jle
cmpsb
repz
add
fnstsw
jns
and
jmp
sbb
pop
xchg
mov
jne
pop
scas
fistpll
xchg
repnz
dec
cmpsb
mov
sub
or
mov
sub
pop
adc
jne
jbe
add
test
aam
dec
loop
sbb
loopne
and
lods
popf
xor
movsb
and
dec
or
jbe
or
adc
jno
pop
adc
enter
out
stos
je
jecxz
mov
mov
jmp
add
xchg
stos
mov
and
nopl
inc
add
cld
cpuid
xchg
add
int3
or
fadd
and
stc
jnp
inc
inc
push
clc
dec
rorb
rcrb
pusha
pop
ds
idivl
push
scas
push
test
dec
cmp
push
sahf
mov
inc
push
enter
dec
test
rcll
mov
xor
mov
shlb
pop
es
push
or
pop
cltd
jmp
adc
adc
xchg
pop
jnp
insb
mov
dec
js
imul
mov
negl
mov
sub
les
jae
pop
mov
out
imull
mov
dec
jo
cwtl
push
pop
jns
push
sub
sbb
loope
fdivs
iret
fnstcw
or
mov
pop
and
pusha
push
sbb
cmp
sub
push
xchg
test
and
jl
push
mov
mov
repz
pop
sub
mov
js
pop
popf
cltd
lret
js
mov
lahf
lcall
and
sti
adc
mov
mov
dec
mov
mov
std
xchg
sub
sbb
pop
cwtl
jae
xchg
add
dec
mov
inc
sbb
xorl
dec
cmp
push
lods
xlat
dec
mov
imul
popa
inc
add
and
xor
mov
inc
loope
mov
jecxz
sub
mov
les
add
cmpsb
jge
jecxz
jge
cmc
in
inc
mov
mov
xchg
adc
add
jle
pushf
adc
pop
hlt
mov
dec
mov
rcrl
xor
in
stc
or
mov
adc
push
mov
lcall
cmp
pop
sbb
insl
and
or
loopne
push
mov
push
dec
out
jge
xor
jg
stos
mov
lret
scas
stos
adc
int3
test
sub
fcompl
loop
fiadds
inc
loope
and
outsb
loop
out
out
mov
sub
sahf
pop
addb
fbstp
loop
prefetch
icebp
pop
xor
xor
pop
pop
gs
fistpll
scas
xor
je
arpl
inc
nop
and
insl
cwtl
jl
dec
stos
add
fldenv
mov
popa
mov
call
daa
push
push
sbb
inc
mov
arpl
lcall
jae
lahf
mov
andb
mov
jae
and
push
cltd
call
ror
adc
outsl
rcll
sub
fwait
inc
cmp
out
or
arpl
nop
and
cld
push
mov
cmp
addr16
adc
cmp
xlat
fldl
cmp
cmp
xor
xor
enter
or
fsubr
xchg
leave
push
cmpsl
pusha
ror
push
mov
cld
xchg
xorl
push
push
mov
or
inc
mov
pop
hlt
out
mov
icebp
lahf
xchg
push
rcrl
lds
and
fs
adc
aas
test
jne
jno
aam
jbe
imul
sub
jp
leave
popf
outsl
cmp
mov
sub
dec
push
mov
arpl
clc
push
cs
aas
mov
aad
call
imul
push
jmp
mov
cld
mov
stos
mov
sbb
xor
lahf
and
insl
pop
xor
cmp
or
rorl
xlat
movsb
cmp
outsb
lds
push
push
pop
movsb
cmpsl
pop
negb
aaa
cs
cmc
sbb
or
xor
pop
inc
xchg
mov
mov
inc
add
nop
push
sbb
sar
jp
pop
pop
fwait
les
out
hlt
jne
int
cmpsl
mov
mov
dec
pop
and
xchg
lret
leave
lcall
xchg
mov
dec
stc
xor
xlat
lret
xor
sub
pusha
inc
pop
lahf
jne
int
push
popa
push
jae
pop
or
add
fisttpl
mov
repnz
ds
in
or
aad
mov
sub
mov
dec
and
clc
daa
mov
stos
cmp
popf
outsb
add
sub
js
cwtl
and
push
jmp
mov
mov
ss
les
mov
xchg
dec
ret
mov
xchg
jns
leave
xchg
jecxz
push
or
pop
or
xor
icebp
pop
ss
into
sbb
cs
arpl
xchg
adc
enter
add
pop
ficoml
scas
scas
mov
lds
adc
or
xchg
imul
jmp
pop
out
out
xlat
xchg
pop
sbb
jnp
negb
push
daa
inc
dec
out
fidivl
sub
adc
mov
jae
or
mov
popl
xlat
lahf
fs
adc
mov
sub
dec
testb
or
pop
push
iret
adc
pop
ret
adc
add
add
lret
or
das
fists
popa
cmpsl
data16
mov
inc
addr16
jno
mov
fidivrs
or
pop
mov
and
adc
lea
mov
cltd
scas
call
sbb
fnstenv
sub
adc
jecxz
jle
mov
lods
fstpt
outsb
dec
fdivrl
fxch
push
mov
test
insl
xchg
dec
or
test
add
jecxz
es
adc
fs
inc
cltd
pop
mov
es
jns
hlt
sub
insb
stos
les
cs
call
push
adcl
scas
repnz
mov
repnz
mov
xchg
sub
mov
sbb
mov
scas
fadds
mov
xchg
flds
and
lods
js
pop
jae
jmp
push
add
jns
jne
lods
arpl
roll
fldt
mov
or
loope
mov
ret
inc
in
sub
lock
push
inc
data16
mov
push
call
negb
loope
sbb
jecxz
mull
pop
mov
div
dec
push
mov
inc
mov
pop
cwtl
icebp
or
inc
test
test
aas
sub
or
std
mov
test
shl
enter
hlt
push
lret
mov
xor
test
les
mov
jl
add
cld
mov
or
pop
outsb
jmp
xchg
repnz
push
push
outsl
push
inc
bound
mov
sub
jnp
xor
fidivl
loop
sbbb
out
sbb
vucomisd
sbb
mov
mov
in
push
dec
addr16
xchg
mov
aam
fnstsw
int3
and
aam
in
sbb
test
repnz
movsb
mov
aam
sti
clc
xor
add
xor
cmpsl
imul
stc
adc
mov
adcb
aad
adc
popa
das
or
loope
movsl
mov
loopne
dec
push
sahf
sahf
stos
push
loopne
notb
or
mul
sub
stos
xchg
outsb
cld
adc
adc
xchg
lods
cmpsl
enter
in
imul
sarb
dec
adc
das
enter
mov
ja
pop
xchg
aad
fsubrl
pop
mov
jp
xchg
cli
inc
test
addl
sub
fbld
jge
dec
pop
mov
jl
fmull
gs
out
and
inc
jmp
jecxz
dec
es
inc
inc
inc
pop
push
sti
jp
mov
mov
dec
int3
pop
loop
loope
pop
mov
cmp
inc
cmp
mov
negb
insb
inc
aam
jge
mov
sub
in
pop
lcall
or
and
sbb
xchg
mov
sbb
inc
mov
repz
push
inc
fbstp
inc
loopne
hlt
xor
push
shll
mov
jge
sub
xlat
sti
jecxz
dec
sbb
and
icebp
dec
jae
int3
mov
inc
enter
xchg
pop
cmpsl
mov
int
sub
mov
fisttpl
cmpsb
xor
jmp
jge
pop
push
xchg
ret
xor
xchg
xor
jge
lea
push
iret
jo
jne
push
aaa
stc
aaa
mov
cmp
ss
push
cmp
mov
call
in
ret
jp
and
and
sbb
fs
cs
aaa
mov
mov
cmp
stos
cmpxchg
int3
jg
push
popf
mov
inc
bound
pop
sbb
lods
or
add
popa
and
repnz
jge
and
rolb
sbb
and
mov
mov
fstps
mov
das
sub
in
in
insl
fdivl
inc
cmp
ret
cltd
fwait
rcll
add
pusha
cmpsb
loop
in
xor
adc
lods
xchg
sbb
out
xlat
mov
inc
loopne
es
xlat
ret
xchg
xlat
pop
mov
pop
adcl
or
mov
lock
mov
test
pop
insl
push
xchg
scas
and
ljmp
rcrl
js
xor
push
bound
pmuludq
jle
dec
push
mov
mov
in
mov
cmp
xlat
test
mov
jnp
add
mov
gs
xchg
pop
jno
loope
cmp
daa
lock
sub
insl
dec
jnp
sbb
insl
int
ja
mov
adc
lock
mov
push
daa
ret
sbb
inc
loop
xchg
jle
stos
mov
xchg
sti
adc
push
pop
sub
mov
mov
out
jnp
mov
cmp
pop
push
adc
fistpl
pop
dec
cmp
jmp
adc
xor
roll
loopne
lret
xor
dec
mov
mov
sub
push
inc
cmp
mov
sub
xor
xchg
inc
xor
inc
mov
mov
rcll
jmp
mov
mov
fcom
fs
test
push
shll
push
push
jle
arpl
ss
sbb
test
or
add
jae
mov
adc
pusha
out
mov
sub
xchg
xchg
adc
int3
fcmovbe
inc
jb
std
lock
ds
xor
aam
daa
and
inc
ss
mov
jo
jecxz
cld
insb
pushf
cmpsb
dec
cmp
fnsetpm(287
imul
push
push
adc
int
inc
movsl
out
jbe
add
lret
jno
xchg
cmp
loopne
inc
add
or
nop
outsb
adc
xchg
xor
add
dec
cmp
dec
pushf
pushf
ja
dec
adc
pop
inc
xchg
in
div
sbb
push
insl
sbb
lea
push
and
or
sbb
dec
dec
insl
mov
jl
cmp
mov
js
outsl
shl
shrl
xchg
outsb
mov
ds
lock
mov
shll
add
jno
shll
bound
icebp
pop
xor
mov
cmp
mov
stos
ret
in
dec
das
gs
cmp
loope
push
adc
jno
addr16
push
or
sbb
rcll
mov
mov
mov
cmp
inc
lods
repz
gs
es
fdivr
xor
jecxz
dec
xor
push
jno
push
cmp
mov
out
xchg
lcall
cmp
shrl
int
pop
dec
cltd
mov
fcoml
push
es
addr16
pop
dec
into
mov
and
hlt
mov
xchg
mov
into
mov
push
cs
mov
test
rorb
adc
mov
ror
andb
or
push
pushf
push
sub
push
cld
sub
dec
orl
jnp
and
jnp
push
jge
cltd
shll
xchg
es
test
scas
cli
mov
add
data16
mov
adc
addl
sbb
and
xor
pop
test
mov
xchg
jns
cmp
lea
and
sub
pop
cltd
mov
cmp
pop
testb
dec
shrl
rol
sbb
clc
jo
loope
gs
cmp
mov
andb
popa
cmc
cmp
inc
cld
push
mov
sub
dec
jns
mov
mov
mov
and
mov
rol
into
mov
jp
and
test
fstpl
push
push
xchg
rorb
fwait
mov
scas
in
mov
aaa
scas
fwait
lods
aad
xor
test
mov
inc
sarl
mov
push
push
adc
cmpsl
int3
add
mov
xchg
test
fwait
lods
popf
jnp
sub
sub
and
fbstp
xor
test
push
data16
mov
jp
add
add
jg
sbb
pop
fidivl
int3
stc
add
add
ss
mov
xchg
cmc
cmpsb
es
lahf
rorl
or
in
cmc
lea
shlb
inc
mov
mov
ja
in
inc
push
lret
lret
into
das
sub
pushl
xor
cmp
pop
fwait
add
sbb
lret
cmp
mov
fimull
gs
pop
daa
jb
mull
push
js
repnz
lahf
cmc
jne
rorl
sub
loope
mov
mov
les
std
inc
add
in
mov
cltd
sub
add
scas
imul
icebp
in
ds
stos
loop
or
test
lds
aam
xor
fmul
pop
add
das
lcall
xor
es
sti
or
imul
jl
pushf
movsb
cltd
lock
das
cmpsb
lahf
mov
nop
adcb
enter
pop
out
pop
shlb
jns
cmpsl
test
xchg
shrb
xchg
mov
test
fadd
push
cmp
fidivl
pop
xorl
pop
jmp
push
enter
mov
bound
dec
lock
ja
jge
int
xor
or
xor
or
jp
sbb
xor
ds
sbb
and
sbb
scas
sub
fucomi
bound
adc
xor
inc
jns
cwtl
in
and
or
adc
or
mov
sbb
mov
mov
mov
sub
jo
xchg
add
and
sbb
rcrb
push
pop
imul
ffreep
jg
cmp
or
repz
fnsave
ret
mov
pop
pop
test
andb
inc
ss
cmpsb
push
mov
sti
push
inc
lret
test
inc
test
iret
xchg
je
and
sbbl
int
iret
lock
ret
popf
add
pusha
xchg
test
xor
sarb
cltd
jecxz
outsl
fidivs
mov
add
and
pop
dec
pop
mov
scas
std
jp
fnstsw
mov
push
inc
add
inc
xor
jnp
pop
sarb
shlb
jo
dec
sbb
add
and
cmp
lret
xlat
addr16
mov
les
jl
roll
cmp
push
arpl
and
cmp
xor
mov
lea
jne
imul
fistps
fildll
dec
push
ret
mov
cmp
mov
pop
pop
add
mov
inc
mov
xor
arpl
xlat
out
cld
sti
cmp
cld
add
inc
ret
lahf
push
jmp
popf
out
in
ret
sub
fsub
adc
and
filds
adc
je
stos
shrb
inc
ret
cmp
or
out
loopne
adc
inc
cmp
aaa
pushf
outsl
push
mov
cmp
call
pushf
test
push
adc
cmp
fs
out
push
and
in
dec
jecxz
pop
inc
fldenv
adc
or
xor
mov
pop
test
jae
loopne
xor
jg
cmp
push
iret
nopl
or
push
cmpsl
jns
lea
mov
ljmp
pop
fmul
clc
fistl
cmpsb
cltd
sarb
mov
fistpll
dec
stos
in
popl
mov
sub
jo
aas
ret
or
es
fsts
jl
je
cmc
rcrl
inc
inc
stos
mov
jle
sbb
mov
bound
jnp
fstpl
jmp
and
add
outsb
jmp
push
push
pop
scas
cmp
and
add
imul
adc
int
cmp
mov
lea
jb
push
imul
ret
jmp
test
lahf
jbe
scas
pop
popl
jl
jo
stos
mov
aas
fwait
ret
rcll
or
mov
outsb
ret
movsl
fistps
xor
aad
pop
dec
mov
xchg
xor
mov
test
leave
fdivrl
mov
test
pushf
ret
mov
jb
popl
mov
adc
inc
sub
and
lret
pop
fsubrp
pop
mov
jecxz
mov
and
imul
pusha
push
test
ds
dec
addl
xchg
ds
xchg
loope
add
dec
dec
addr16
int3
sbb
insb
mov
fcmove
pop
push
inc
adc
insl
add
roll
jp
mov
and
xchg
xchg
cli
xchg
pop
mov
lods
jae
xchg
mov
pop
fsub
jno
mov
stos
jl
add
mov
je
or
mov
enter
repnz
lock
sbb
sti
jns
add
jnp
ds
in
rcl
lds
jne
rorb
shr
test
or
add
mov
hlt
mov
pop
pop
or
loop
mov
mov
or
and
fildl
cmp
push
icebp
aam
cs
into
sub
pop
or
cmp
lahf
and
add
movsl
cmovo
mov
movapd
inc
aam
push
test
adc
ja
rcr
push
jne
xor
xchg
push
sbb
mov
push
sbbl
or
mov
push
dec
fisttps
shrl
push
jecxz
test
out
dec
push
clc
test
mov
push
inc
dec
addb
xor
dec
dec
inc
imul
jle
ljmp
lods
adc
loope
pop
pop
subb
lds
or
stc
jno
inc
sub
mov
aam
add
adc
int
xor
push
pop
xchg
dec
xchg
sbb
stc
pusha
cltd
fisttps
xchg
sbb
add
pop
sub
cmp
mov
sbbb
adc
fisttpl
pop
addr16
mov
lock
arpl
testb
cmp
not
int
cmp
stos
xchg
cmp
in
bound
mov
fisubrs
movsb
jnp
fsubs
dec
pop
jnp
jl
dec
mov
pop
fsubrs
shrl
push
sub
js
cmpsb
scas
inc
xor
test
push
test
xchg
sbb
fisttpll
pop
inc
aas
icebp
outsb
pop
inc
lds
adc
mov
lret
lcall
push
cmpb
lods
cmp
iret
iret
div
shrb
ret
cld
les
push
and
repnz
in
sbb
mov
xchg
rcrb
xor
cmp
push
mov
sub
in
les
sbb
addr16
xchg
stc
in
lahf
inc
mov
mov
psubb
fsts
jne
mov
lods
mov
lret
cmp
sbb
js
cltd
stc
inc
xchg
loop
dec
cmp
mov
mov
stc
call
lcall
xor
xchg
repz
or
fcomps
xor
inc
push
sbb
fs
fchs
ds
jbe
out
pop
pop
adc
sbb
into
mov
sub
jbe
sbb
enter
mov
mov
out
fiadds
inc
push
adcb
daa
jle
dec
sbb
pop
sbb
ljmp
cmp
lcall
movsb
xchg
xor
push
mov
and
cmpsl
gs
sbb
inc
cmp
push
push
iret
cmpsb
xchg
adc
mov
push
leave
dec
orl
mov
cmc
out
outsl
repz
jg
scas
pop
into
ss
and
mov
aam
sarb
jmp
fsubrl
mov
add
mov
and
ja
add
mov
adc
push
sti
xchg
inc
pop
xchg
cltd
loopne
cmpb
or
and
scas
stos
jbe
pop
dec
cmp
add
mulb
jg
mov
decw
enter
mov
lcall
adc
icebp
pop
stos
insb
cmp
jns
loope
adc
dec
mov
mov
jmp
sub
mov
in
adc
cmpsl
pop
sbb
jmp
add
dec
pop
cmc
mov
add
inc
call
xor
xor
sbb
sahf
sub
xor
pushw
inc
sub
push
push
mov
sub
cltd
xchg
xlat
lods
xchg
ret
mov
lds
adc
cli
lods
outsb
std
or
mov
iret
lret
mov
mov
pop
sbb
or
push
loopne
cmp
mov
and
xchg
add
lahf
cmp
jmp
lahf
inc
pusha
sub
enter
pop
shll
push
aam
adc
cli
push
mov
xor
add
mov
andb
mov
adc
mov
shl
sub
pusha
push
cmp
fdivs
cltd
mov
sarl
pop
insl
dec
fsubp
mov
sahf
jnp
mov
push
cmc
sub
pop
sbb
pop
dec
mov
ss
loope
inc
je
cltd
aad
divb
jle
shrb
mov
pop
push
test
mov
addl
cmp
clc
add
nop
into
in
cli
clc
and
lahf
rclb
add
pop
jge
loopne
lds
jnp
adc
and
repz
cmp
inc
mov
bound
xchg
nop
mov
cmpsb
rol
inc
popa
cs
insb
cvttps2pi
sbb
jno
jle
mov
and
jne
adc
icebp
cmpl
pop
int
stos
sbb
fbstp
insl
mov
cltd
inc
mov
movsb
nop
fdivrs
ljmp
xchg
mov
lret
push
jl,pn
push
lock
test
xchg
rcr
fsubrs
xor
lret
mov
rcl
sbb
sbb
jno
jno
mov
xchg
sub
fldt
xor
bound
fdiv
add
mov
pop
ja
and
stos
jecxz
dec
or
pop
push
jmp
in
or
rcrl
das
mov
int3
pushl
lods
sbb
sbb
or
push
sub
push
sti
hlt
push
mov
add
mov
dec
mov
std
sub
jne
rorl
imul
ffree
inc
es
mov
int3
in
lock
jns
stos
xor
rorl
mov
mov
cmp
pop
cld
and
sbb
dec
loopne
repnz
lcall
je,pn
and
hlt
daa
push
lret
mov
dec
fsubs
cmp
js
test
loopne
fdivl
jmp
cmp
sbb
xchg
adc
mov
aam
negb
leave
jl
lret
shll
loopne
dec
xchg
outsb
jno
movsl
push
add
cld
loop
xor
int
and
xorl
adc
pop
loopne
scas
cmp
sub
push
movsb
pop
mov
test
cmp
push
mov
adc
xchg
mov
sbb
inc
iret
mov
add
lods
and
enter
lahf
pushf
int3
dec
stos
aam
xor
lea
jecxz
xchg
in
mov
fsubrl
cld
repnz
lea
xor
xor
orb
or
or
lret
xchg
adc
data16
outsl
insb
and
xchg
pop
push
aas
out
bound
xchg
adc
repz
and
icebp
sarb
shlb
dec
mov
lods
adc
mov
out
mulb
lods
in
aaa
ja
mov
mov
mov
pop
pop
incb
xor
insl
push
stos
push
rorl
ficomps
pop
lds
push
sahf
test
pop
dec
xlat
ret
xor
test
push
inc
add
popf
ja
jno
adc
adc
aas
cmpb
rorl
pop
mov
sti
inc
test
cmpsl
repz
and
mov
jp
insl
cmp
in
mov
call
sub
int3
jle
adc
jb
dec
in
stc
xchg
jl
repz
cmc
adc
addr16
aas
xchg
cltd
aas
mov
add
mov
adc
lods
push
xor
gs
clc
push
push
clc
shlb
mov
lea
repz
ja
jne
lea
pop
dec
test
sbb
dec
into
and
dec
xor
mov
sub
enter
inc
adc
push
push
fnstcw
jge
movsb
pop
mov
dec
jl
test
iret
les
call
sbb
fsubrl
scas
mov
aaa
sbb
imul
mov
popf
inc
loop
mov
dec
jno
inc
xor
adc
and
or
nop
pop
mov
xchg
push
loope
xchg
xor
xchg
sbb
sbb
aad
std
xchg
repnz
jge
fs
daa
sbb
insb
jb
mull
lret
xor
lock
sub
in
push
mov
mov
movsl
cmp
mov
pop
pop
fists
pop
xlat
inc
mov
in
jg
pop
add
rorb
push
push
in
cmp
jbe
fwait
or
mov
add
mov
sub
push
sbb
lret
jmp
mov
or
lock
ret
push
daa
xchg
or
fidivrs
and
icebp
pop
cmp
data16
mov
mov
arpl
aad
xor
shll
roll
mov
jno
popf
adc
fdivrp
sahf
xchg
pop
ljmp
stos
xor
xchg
movb
and
xor
add
movsb
sub
andl
inc
pop
loopne
push
sbb
jae
std
mov
jmp
cmpb
xor
ret
jg
xlat
add
xchg
leave
scas
mov
add
push
push
fwait
or
jbe
xor
lods
sub
fnstcw
add
movsl
mov
lret
push
sub
jecxz
insb
pop
cmp
xchg
adcb
sbb
lea
cmp
and
stc
testb
ret
mov
pop
cld
aas
sbb
pop
insl
add
idiv
dec
xchg
mov
lds
movsl
push
mov
or
xchg
lret
jg
aas
scas
lods
mov
add
xchg
das
fidivl
ljmp
aas
mov
adc
and
ds
mov
outsb
xchg
adc
repz
out
ja
or
add
sbb
addr16
ja
popf
push
stos
fdiv
pop
jb
fneni(8087
xor
pop
xchg
mov
in
jecxz
lcall
orl
pop
in
xchg
jno
imul
xchg
xchg
rcr
stc
ret
jecxz
test
or
inc
outsl
fisttps
notb
pushf
ficoml
in
jl
or
cmp
fbld
jno
sub
xor
jp
push
es
pop
cmpsb
sub
pusha
sub
mov
pop
cmp
loop
xlat
cmp
mov
xchg
or
fbld
sub
mov
adc
jg
rolb
leave
push
lahf
adc
pop
xor
sbb
dec
jns
push
out
fiadds
test
adc
mov
ret
sub
dec
adc
aas
add
dec
xlat
andb
mov
inc
js
mov
cmp
jae
loopne
repz
push
adc
das
stos
std
scas
bound
test
lahf
shld
add
jmp
add
mov
fdivr
push
push
int
sub
movsl
pop
insl
xchg
pop
jbe
iret
enter
dec
jnp
and
mov
pop
ds
pop
jp
andb
jge
daa
insl
jb
push
mov
adc
mov
lods
inc
sub
or
fs
xor
and
in
cmpsl
push
adc
imul
mov
pusha
rolb
cmp
pop
dec
inc
cmpsl
inc
add
sbb
ja
aad
clc
mov
or
xchg
loope
add
popf
insl
dec
mov
xchg
push
sbb
pushf
iret
jns
dec
mov
or
and
enter
xchg
dec
add
mov
lahf
xor
mov
sbbb
pop
push
jecxz
mov
xchg
out
sub
in
push
jmp
sub
sahf
jae
push
adc
arpl
cwtl
das
cmp
pop
cmp
xor
mov
jb
out
stc
adc
jge
or
jno
push
cmp
sti
frndint
jge
das
mov
jg
jne
add
int
or
test
cmp
test
jl
dec
cltd
inc
mov
insb
push
xor
and
jo
or
por
lret
lock
cs
arpl
inc
into
inc
push
ljmp
test
adc
jnp
dec
and
fidivl
bound
adc
jno
adc
std
cmpsl
pusha
adc
mov
xchg
or
lret
addr16
pop
and
and
cld
clflush
push
jmp
cmp
mov
cltd
aad
inc
xor
sub
mov
out
mov
or
adc
jbe
mov
sub
sbb
insl
mov
xor
push
cld
mov
cld
sub
xchg
leave
mov
jl
cmpb
testl
jno
into
mov
push
lret
or
call
jmp
ja
dec
sub
jbe
xor
sub
dec
jg
addr16
jmp
jmp
sbb
aas
out
xlat
mov
leave
jnp
lds
pop
adc
push
and
mov
mov
mov
mov
rolb
cmp
pop
inc
fldcw
insb
addr16
scas
mov
jp
cmp
lods
mov
notl
arpl
out
ret
in
cmp
aas
jo
popf
punpckhbw
jns
push
cmp
fwait
mov
jns
into
subl
mov
xchg
lock
jle
iret
cmp
std
fwait
ud1
sbb
scas
es
dec
or
push
and
jg
mov
mov
lahf
daa
mov
in
ffreep
ss
pop
xor
sub
das
lock
sti
xchg
pop
jbe
lcall
inc
std
jb
or
lret
xchg
sub
addr16
cld
lea
rcrb
imul
mov
les
fimuls
jo
xor
lcall
push
cmpsl
pop
xlat
data16
dec
mov
stc
xchg
aaa
pop
mov
out
cmp
cmp
xor
and
pushf
mov
loope
or
push
pop
lret
sub
cmp
xchg
sti
push
push
je
faddl
xor
lcall
stc
jbe
adc
push
flds
sbb
ret
dec
clc
dec
ja
mov
add
outsl
lods
lret
or
das
nop
repnz
insb
pusha
push
cmpl
add
xor
pop
cmpsl
mov
jb
inc
or
mov
adc
sarl
and
in
ds
dec
mov
cld
outsl
inc
dec
mov
and
lods
xchg
scas
pushf
cmc
movsl
dec
pop
in
xchg
fisubrl
or
mov
movd
xchg
adc
insb
and
push
cmp
jno
inc
les
mov
repnz
jmp
xchg
loop
push
mov
enter
test
or
adc
pop
dec
push
xor
arpl
stos
sub
push
xor
dec
fists
out
sbb
fcmovne
rorb
inc
iret
dec
ss
fwait
mov
sbb
scas
and
mov
or
mov
js
push
fiaddl
jmp
into
pop
push
ss
push
add
jns
xlat
jo
sub
push
iret
out
shlb
call
jo
idivl
or
adc
and
dec
jbe
jp
enter
jmp
imul
mov
lock
test
loope
jmp
pop
outsb
add
sti
outsl
adc
inc
adc
stos
movsl
insb
pop
adc
adc
lods
add
aad
int
out
adc
adc
inc
mov
sti
xchg
adc
repz
out
jnp
std
mov
sahf
fs
mov
jae
daa
insb
lret
ja
lret
iret
push
ud0
scas
mov
pop
loop
int
jg
lods
js
jmp
pcmpeqw
clc
loopne
push
add
frstor
pop
push
aam
dec
les
mov
test
adc
out
mov
cmp
pop
nop
test
incl
mov
ja
in
lods
or
out
adc
loope
mov
jns
push
mov
lahf
xor
sub
hlt
in
mov
cmp
fistpll
inc
shlb
loope
push
mov
aad
mov
cmpsl
pop
or
inc
vmwrite
xchg
cmc
ret
jbe
dec
add
mov
jmp
je
shlb
stos
mov
or
hlt
rclb
mov
pop
idivl
out
add
iret
cs
ljmp
jg
mov
cld
outsl
ss
call
xchg
xlat
lret
sbb
xchg
lods
mov
push
test
aaa
or
into
imulb
das
stos
jae
aaa
nop
jo
jmp
mov
inc
jns
gs
fsub
mov
pop
ss
mov
stc
push
cli
and
jg
ret
outsb
lock
test
movsl
scas
pop
aaa
mov
push
dec
out
xchg
outsb
fidivl
imul
dec
out
add
cmp
das
sahf
or
push
xchg
loopne
and
aaa
outsl
cwtl
mov
popa
addr16
sbb
pop
mov
cmp
in
adc
xchg
dec
sbb
push
lahf
push
stos
mov
add
shrl
adc
fdivl
loopne
push
cmp
pop
mov
or
inc
xchg
dec
inc
ja
sbb
cld
fcoml
adcl
dec
mov
add
es
add
and
pop
mov
mov
aas
jo
test
sub
jmp
je
pop
push
pop
sbb
jns
dec
and
faddl
xchg
pop
lock
xchg
jne
pop
mov
fsubl
notb
fwait
popf
cmp
lods
mov
pop
into
leave
jge
mov
add
push
pcmpgtb
mov
and
mov
xchg
dec
insl
push
cmp
leave
pop
lret
cmpsl
rclb
rcrb
dec
push
jp
or
push
in
call
aam
fbld
arpl
mov
xor
push
jae
fldl
dec
push
repz
sbb
subb
mov
fnsave
jb
int3
ret
adc
inc
push
push
dec
bound
cmp
movsb
cmp
pop
scas
sub
jbe
fcomp
cmp
in
iret
or
rcrl
jb
pop
dec
or
pop
enter
sub
or
fwait
aas
les
sahf
push
movsb
pop
sub
mov
cmp
pop
mov
lcall
inc
ss
jo
mov
pop
xchg
pop
dec
pusha
lock
std
les
dec
jge
cmp
arpl
inc
and
adc
mov
xlat
xor
mov
and
sbb
dec
movsb
jmp
rcl
xchg
hlt
dec
cli
int3
and
scas
xchg
push
push
jmp
icebp
scas
fstps
add
sub
ja
cmpsl
cmp
adc
mov
cmpsl
rorl
xlat
jb
cmp
mov
xchg
inc
inc
lods
push
sbb
loope
jmp
test
cltd
push
xchg
mov
adc
icebp
and
add
sbb
in
jmp
mov
pop
adc
sbb
xor
lds
add
imull
into
pop
sbb
adc
fisttps
sbbb
jo
push
mov
xor
or
xchg
dec
stos
sub
jae
loope
std
enter
cmp
movsb
jmp
mov
arpl
inc
and
mov
test
or
arpl
inc
lock
jl
sub
lret
cmc
cwtl
dec
scas
cmp
jmp
push
push
sbb
test
dec
aas
jg
data16
ds
inc
add
jmp
or
fwait
mov
cmp
jo
jmp
xchg
or
add
divb
inc
jl
jg
stc
jecxz
push
and
lret
adc
aaa
push
adc
cmp
sbb
shl
dec
or
jecxz
mov
aaa
mov
insl
mov
pop
mov
xor
pavgb
clc
jecxz
sub
xor
jp
mov
imul
cmpl
out
jns
adc
enter
addr16
pop
mov
sbb
popa
inc
add
xlat
je
mov
js
shl
cmp
xor
sub
test
int
std
push
les
mov
adc
push
mov
fldcw
pop
adc
jmp
pop
xor
cltd
daa
test
and
sbb
jno
pushf
pushf
mov
push
pushf
mov
out
jae
xor
sbb
cld
shll
roll
dec
lods
fwait
xor
cwtl
fnstcw
shrl
daa
inc
add
lods
dec
cmp
pop
rclb
ss
scas
lret
xor
jns
jp
stos
lds
sub
jge
clc
jns
inc
test
xlat
mov
in
cmp
rcll
inc
sahf
fs
rorl
iret
aad
cltd
test
ret
movsb
pop
sbbl
jl
cmpl
into
mov
paddq
in
xchg
stc
push
mov
mov
mov
aam
jl
shll
dec
mov
or
data16
loop
movsb
frstor
les
sbb
dec
or
popf
push
sbb
mov
gs
pop
or
sbb
pop
in
add
cmc
enter
leave
mov
outsb
xchg
imul
pop
sub
sub
pop
ljmp
enter
mov
mov
inc
les
jns
inc
sub
lock
xchg
addr16
in
push
sbb
push
cmp
enter
popa
push
lret
ss
inc
mov
jb
pop
fmuls
and
mov
adc
jnp
or
and
imul
inc
inc
push
hlt
pop
xor
enter
sarb
fmuls
scas
insb
outsb
dec
and
pop
sbb
adc
fstl
mov
push
in
ret
out
icebp
adc
btc
enter
jle
ftst
push
push
lcall
outsl
pop
mov
std
cs
int3
push
sub
scas
shrl
movsl
cltd
mov
sub
inc
data16
sbb
loop
outsb
sti
bound
dec
mov
sub
popl
mov
dec
mov
into
push
std
imul
lods
repnz
aas
jecxz
push
mov
push
fwait
mov
addr16
movsb
mov
cmp
popa
test
dec
xchg
mov
stos
xor
in
push
fnstenv
shll
mov
dec
inc
les
daa
int3
pop
push
mov
cmpsb
or
dec
into
sbb
data16
hlt
cmp
call
jbe
ljmp
leave
cltd
jmp
outsb
push
cmp
pusha
sub
test
js
xchg
cmp
xor
xchg
testb
add
sarb
shlb
pop
and
jmp
out
mov
dec
stos
xchg
xchg
std
sub
sub
jmp
xchg
rolb
xchg
mov
cmp
sub
out
mov
or
adc
add
dec
dec
pop
push
shl
out
rcrl
in
fldcw
dec
inc
rorb
ret
cwtl
lahf
dec
jmp
loopne
inc
aas
xchg
movsb
ja
stc
pop
orl
adc
sti
add
pop
jp
fwait
gs
xchg
cld
clc
pop
in
in
xchg
out
pop
push
test
pop
rcl
lret
jl
arpl
or
add
mov
dec
out
push
popa
pushf
call
xchg
sahf
mov
rcrl
lds
pop
inc
or
sbb
dec
pop
dec
pop
xchg
lahf
dec
jg
push
jns
testl
out
xchg
pop
es
daa
cmp
xlat
pop
or
mov
repnz
mov
pop
int
call
popf
mov
sub
add
repz
sub
lret
xchg
sbb
cmp
mov
jecxz
add
pop
jle
xchg
lea
orb
flds
into
xchg
xlat
fsts
jp
jae
and
test
movb
das
les
jecxz
cmp
leave
push
jmp
repnz
cmpsb
shlb
test
sbb
jb
stc
jp
sub
sbb
in
pushf
pop
mov
adcl
rol
lret
arpl
jae
add
pop
icebp
fistps
js
sti
push
clc
pop
fwait
out
cmpl
or
mov
xchg
jnp
cmpsb
mov
out
stos
or
mov
and
in
mov
pop
mov
sub
aas
or
lcall
fiadds
imull
pop
lret
enter
inc
addr16
gs
sbb
mov
mov
lahf
cwtl
dec
out
loop
ret
fcmovbe
fnstenv
shlb
mov
loop
xor
push
outsl
mov
int3
les
lods
push
stos
jg
jp
mov
mov
adc
and
mov
leave
int
fistl
pushf
jecxz
cwtl
test
xchg
cli
pop
jb
or
nop
xchg
out
add
xor
pop
cwtl
or
popa
xchg
shlb
cmp
mov
mov
mov
lock
mov
jns
xchg
push
test
enter
out
pop
mov
daa
out
int
out
sub
loopne
or
iret
mov
or
add
pop
nop
pop
shrl
int
hlt
fisubs
cmp
push
fists
lods
rcrb
in
inc
mov
cmp
push
fidivrl
repnz
mov
js
push
andl
clc
movsl
mov
in
and
jb
mov
mov
imul
jmp
repz
mov
sub
jp
inc
outsl
mov
js
aam
insb
popa
xchg
adc
pop
insl
push
sbb
xor
xor
out
jp
pop
cmp
lds
out
test
mov
sub
cld
es
in
mul
and
cmp
xchg
pushf
xor
or
sub
addl
push
dec
aam
and
xor
cmp
or
sbb
inc
push
xlat
pop
adcb
pop
jbe
movsl
xchg
xchg
dec
cwtl
clc
push
mov
fdivl
out
mov
test
cmp
push
fildll
push
js
jge
fsubl
test
jmp
outsb
mov
outsl
dec
inc
jno
scas
inc
add
in
mov
insl
test
cmc
icebp
aam
mov
sub
lods
cwtl
jbe
in
mov
and
sbb
adc
cwtl
or
lahf
imul
imul
enter
bound
hlt
imul
pop
in
jo
jecxz
les
lock
push
insl
xchg
inc
mov
and
push
cmp
push
cld
pusha
mov
pusha
sbb
bound
pop
pop
in
push
jb
sbb
cmp
push
leave
jo
cmc
pop
repnz
lahf
cmp
xor
sbb
inc
lret
mov
inc
in
imul
pop
lods
jl
icebp
jg
add
add
int
iret
call
and
sbb
push
dec
shrl
cs
cltd
pop
in
pop
fsubs
add
addb
les
mov
cmp
rorb
lds
sub
cwtl
adc
add
dec
mov
adc
int3
popa
stos
in
bound
push
movntps
push
cmp
push
add
cmp
lcall
sbb
ljmp
insb
xchg
mov
adc
mov
xchg
loopne
dec
lahf
xchg
push
clc
cld
dec
arpl
into
inc
cwtl
jle
arpl
mov
jp
pusha
jnp
dec
lds
xlat
jp
das
imul
xchg
xlat
pop
jp
or
out
scas
inc
or
mov
sarl
leave
in
or
sarl
test
je
in
es
push
hlt
xor
iret
imul
out
in
push
repnz
in
test
ffreep
cmp
mov
pusha
mov
and
leave
inc
lahf
scas
mov
add
scas
into
jge
mov
fsubrl
orl
cld
sub
ss
inc
pop
xor
out
xor
and
ds
add
cmpsl
pop
fsubr
ljmp
cmp
test
adc
subb
iret
addl
test
outsb
subb
int
xchg
xchg
lods
push
mov
aam
xor
jmp
lahf
cmc
jae
daa
cmp
sub
add
cwtl
jb
iret
sar
gs
jp
and
cs
add
test
repz
xor
cmp
mov
sub
mov
insl
stc
sbb
dec
stos
movsl
rorb
xchg
test
ret
xchg
xor
out
mov
push
mov
ret
addr16
dec
fsubs
lods
int
pop
lret
push
sub
push
cli
addr16
jle
scas
dec
mov
cmpsb
xlat
jp
fstpt
xorl
xchg
lock
jp
xlat
rorb
rcrl
cmpsl
xor
and
pop
mov
jecxz
shlb
lods
jb
pop
inc
flds
xor
inc
push
mov
sbb
mov
ja
mov
inc
pop
sub
fwait
jno
xlat
jecxz
jae
cmp
inc
arpl
mov
dec
mov
stc
out
bound
into
mov
fildll
xlat
and
push
sbb
jbe
or
mov
daa
cmpsl
add
dec
pop
loope
int3
jecxz
push
stc
xchg
hlt
dec
clc
sahf
imul
fimull
lcall
ds
xchg
sbb
stos
inc
mov
mov
scas
sbb
or
scas
insb
adc
ficoml
push
gs
outsb
repnz
xchg
mov
popf
cmp
rcrl
mov
ret
jae
push
push
add
test
fstpt
push
jmp
dec
mov
lret
cmp
iret
mov
xchg
xor
std
xchg
xor
mov
rol
out
jo
bound
mov
rclb
sbb
aas
stos
pushf
dec
push
push
je
xchg
hlt
addr16
xchg
fcoms
or
jle
inc
sbb
mov
jne
inc
xchg
aam
hlt
test
inc
adc
stos
aam
nop
test
dec
stos
inc
lods
fcmovnbe
loopne
decl
inc
add
mov
and
adc
negl
je
lahf
das
add
out
repnz
clc
out
cltd
cmc
sub
mov
mov
inc
cltd
mov
lds
push
push
cmpb
ljmp
push
cmp
push
adc
and
inc
fs
sbb
fisttpll
ret
dec
lea
dec
dec
scas
xor
push
pusha
ret
fsts
jo
push
negb
cmp
flds
ja
je
mov
xchg
mov
cld
ror
pop
inc
addr16
mov
jns
mov
loopne
cmpsb
inc
fst
stos
sbb
and
inc
xchg
mov
mov
push
fisubrl
shrb
std
ss
addr16
sbb
mov
pop
sub
cmp
dec
sbb
jp
out
fwait
out
jne
xchg
mov
shlb
or
jle
push
out
fdiv
sahf
inc
loopne
dec
mov
cmp
shrl
xor
push
xor
into
mov
lods
sahf
push
inc
sbb
mov
cmp
aaa
jnp
mov
jle
add
testl
out
std
fisttpl
add
add
push
xor
add
dec
cmp
addl
rolb
bound
rorl
jle
in
stos
shl
inc
mov
add
inc
lret
cmp
fimuls
das
mov
adc
das
dec
push
mov
add
xor
mov
clc
ja
popf
repnz
or
mov
les
mov
arpl
pop
test
xor
test
xchg
dec
xchg
cwtl
aam
xchg
mov
inc
es
jg
push
adc
and
adc
in
xor
mov
hlt
sarl
popa
hlt
fdivrs
inc
loope
fisttpl
ds
iret
out
pop
int
fstpl
add
std
jge
inc
and
fcoml
ret
jno
xchg
cmpb
jnp
pop
popf
cmp
xchg
cmpsl
dec
mov
pushf
xchg
lods
xchg
arpl
movb
es
iret
cwtl
insb
loop
es
pusha
fstpl
in
js
rcr
mov
jmp
cmc
popf
fs
scas
push
mov
test
xorb
js
lock
je
and
jge
jne
out
mov
sahf
push
add
adcb
xor
dec
jb
and
lcall
mov
mov
adc
pop
mov
fidivrl
dec
cmp
shlb
jne
std
shl
push
jne
cmp
xchg
push
adc
out
divb
in
add
minps
out
jl
cmp
insl
loope
les
xchg
sbb
and
inc
sbb
pop
and
jle
popl
mov
pop
jne
dec
push
pop
std
xchg
mov
or
dec
scas
popaw
shrb
mov
sbb
inc
jmp
sub
cmc
jp
jmp
jb
xchg
ror
ljmp
mov
pop
cmpsl
push
pop
jns
out
call
xchg
fdivl
inc
jne
pop
inc
or
cmc
fbld
mov
clc
add
dec
mov
outsb
sbb
incb
dec
push
xchg
mov
or
pop
gs
aad
jge
xchg
inc
test
aad
inc
and
sub
mov
jne
mov
adc
add
cs
push
xchg
mov
test
cmp
lods
push
in
arpl
fsubr
cmp
mov
mov
sbb
aas
pushf
fcmovu
lea
dec
cli
xchg
mov
lods
inc
xchg
push
jecxz
dec
adc
ficomps
push
xchg
lahf
movb
pop
jge
pop
cld
adc
call
ret
cmpsb
mov
jg
ds
stos
sarl
push
out
les
jo
mov
nop
xchg
in
xor
inc
fdivs
mov
dec
nop
test
dec
repnz
lret
je
add
cmc
push
or
sbb
lods
mov
xorb
mov
lret
jae
pusha
xlat
jl
sub
out
push
mov
bound
cltd
mov
add
lcall
xchg
lods
push
mov
xchg
push
xor
imul
imul
shl
outsl
hlt
cltd
sbb
sbb
lods
pop
jmp
hlt
aas
les
lds
jmp
mov
pop
sub
inc
mov
mov
pop
stos
test
adc
nop
push
test
cmp
xchg
cmp
push
in
cli
jecxz
push
pop
sub
mov
hlt
push
xchg
shl
jecxz
dec
mov
fcmove
std
call
sbb
ljmp
sbb
push
mov
pop
mov
fdivrl
mov
mov
xor
mov
inc
sbb
int3
mov
sub
popa
mov
pop
insb
sbb
mov
adc
and
jge
xchg
or
and
int3
cmpsl
lea
in
es
mov
add
and
mov
clc
add
inc
jmp
pop
jecxz
sbb
cs
es
sbb
xor
xor
movsw
mov
mov
jle
sbb
lret
inc
repz
xor
imul
cwtl
dec
mov
sub
sbb
cmp
addr16
adc
movsl
hlt
mov
lret
adc
jmp
lcall
lods
cltd
jge
rorl
rcrl
xchg
xor
cmp
gs
fsubrl
bound
je
stc
movsb
fimuls
sub
stc
inc
movsb
push
xchg
pop
ds
lea
test
sti
or
ja
push
mov
mov
int3
je
dec
mov
test
fcmovnbe
adc
or
and
stc
jmp
xor
in
ret
lahf
mov
stc
adc
movsl
mov
pusha
stos
jp
jg
popf
fwait
rcr
sbb
push
push
mov
hlt
stos
add
mov
jno,pt
aas
mov
add
adc
subl
loope
push
push
pop
aas
ret
dec
testb
sti
jg
or
mov
cmp
iret
mov
das
loopne
gs
sbb
test
int3
add
mov
loopne
lcall
cmp
mov
cli
dec
jns
call
mov
in
test
jp
mov
mov
inc
push
jno
sub
orl
xor
xor
xor
in
push
scas
repz
insb
out
gs
push
inc
into
cmp
sahf
in
cmp
or
mov
push
arpl
addr16
out
add
adc
scas
jl
dec
inc
mov
jle
jmp
lods
nop
test
repnz
or
pop
adc
pushf
mov
sti
and
sbb
and
pop
push
test
icebp
jno
cmpsl
call
iret
movsb
hlt
jno
leave
pop
cmp
js
insb
std
pop
sub
jmp
addr16
inc
cmpsb
popl
loop
dec
pop
inc
jmp
std
in
mov
movsl
test
sbb
mov
testl
cli
fdivrl
xorb
mov
pop
sarb
out
xchg
xchg
iret
sub
pop
hlt
les
xor
ljmp
xchg
frstor
push
cmp
jg
mov
cmc
into
cmp
iret
sbb
cmp
mov
push
cwtl
jge
xchg
test
icebp
pop
pop
sbb
icebp
mov
dec
fmull
adc
ret
repz
pop
test
xchg
into
sbb
add
repnz
in
aaa
insb
cltd
or
sub
cs
cltd
jno
fsubl
ret
data16
push
aas
mov
addr16
cld
pop
sbb
test
test
icebp
aas
pop
mov
scas
fs
pop
push
sbb
and
std
sub
mov
mov
mov
add
pop
les
in
dec
sbb
sub
scas
imul
and
mov
add
adc
imul
cli
ss
lret
mov
or
add
xchg
lds
pop
cs
push
ret
cmp
push
aad
cmp
sahf
pop
mov
dec
ljmp
clc
jo
mov
ret
mov
outsl
jns
sub
insb
pusha
jns
repnz
xchg
mul
les
outsl
or
mov
mov
lock
xchg
shlb
outsl
sub
adc
lret
add
xor
and
jns
push
loope
in
shl
fadds
xor
mov
imul
sbb
scas
adc
fildl
jnp
fwait
loop
out
mov
cwtl
js
testl
push
mov
mov
mov
loopne
scas
inc
lret
mov
jmp
mov
add
icebp
and
add
push
inc
adc
add
in
pop
nop
push
jo
xor
mov
xor
cs
lret
test
push
xlat
mov
pusha
pop
mov
mov
or
and
xor
mov
jmp
adc
push
mov
mov
add
nop
dec
test
pop
je
pop
cli
fisubl
mov
sub
orl
push
int3
xor
add
pop
inc
pop
loope
mov
and
jle
lret
cli
xchg
add
sub
mov
ss
out
stos
push
push
mov
cld
inc
push
stos
mov
pop
clc
inc
pushf
inc
add
adc
xchg
pop
jne
fs
push
jl
ficomps
arpl
je
in
inc
mov
lret
mov
dec
sub
inc
mov
jns
ss
xchg
addb
roll
scas
lock
loope
movsl
test
and
push
xor
push
sti
fs
push
pusha
movsb
xor
mov
inc
fistpll
fistl
mov
or
push
ss
xor
imul
pop
sahf
mov
lods
adc
les
mov
lea
nop
cmp
xchg
jo
mov
push
int3
into
sub
sarb
jp
fistpll
mov
mov
in
stos
in
leave
add
dec
pushf
sub
jbe
xchg
pushf
add
sbb
jp
shlb
inc
arpl
stos
or
ud2
lret
cmpsb
nop
in
rorl
int
sbb
xlat
adc
cmp
and
fdivrl
push
pop
mov
and
xor
fs
es
jnp
ja
sub
clc
andb
shrb
xor
mov
outsl
orl
cmp
cmp
ror
fwait
cmpsb
out
lods
xchg
dec
push
sbb
out
push
mov
stos
dec
adc
shll
xchg
sti
iret
mov
leave
mov
cmpsb
cmp
in
mov
data16
test
pop
loope
add
push
repnz
in
mov
leave
test
and
inc
adc
sbbb
and
ss
repz
enter
movsb
push
or
xchg
or
pushf
fwait
inc
call
das
pushl
mov
pusha
push
adc
loopne
jns
cmc
mov
push
gs
or
pop
jae
cmp
lret
adc
cmp
sub
out
push
fs
mov
ror
dec
movsb
pop
xor
jmp
dec
cli
inc
jge
inc
mov
cmp
mov
in
in
jno
dec
leave
lret
and
sti
call
cmp
scas
or
mov
je
stc
xchg
pop
adc
push
ss
pop
scas
or
jp
mov
jbe
lret
pop
cwtl
out
ffree
lock
sub
add
pop
dec
and
pop
les
xorb
lret
mov
aam
loope
push
loope
subl
sahf
std
fiaddl
stos
mov
mov
adc
insb
jne
fstpt
add
push
divb
mov
das
cmc
dec
add
mov
sub
call
mov
push
imul
dec
rol
xchg
mov
sub
cmp
scas
rorl
jo
fmuls
sub
dec
les
push
mov
dec
mov
lock
addr16
stos
jg
add
popf
pop
in
push
repz
mov
roll
fs
mov
push
fcomps
rcrl
adc
cmpsl
adc
repnz
dec
mov
inc
sbb
sub
imul
push
inc
neg
xchg
push
mov
and
test
ds
mov
repnz
rcll
adc
cmc
add
dec
jo
and
or
push
sti
jno
or
lds
cmp
testl
lods
mov
jl
fcompl
or
adc
and
cmp
shl
jae
scas
xchg
xchg
inc
xchg
lods
loopne
shll
les
sbb
int3
orb
xchg
ficoml
insb
enter
cwtl
test
repnz
mov
jno
push
lret
sbb
mov
insb
repz
pop
cmpsl
mov
cmpsb
in
es
hlt
stos
adc
daa
push
and
repnz
mov
push
and
sub
xor
daa
aaa
pop
ret
push
int
mov
mov
js
arpl
push
xor
je
es
fidivrl
bound
mov
inc
nop
mov
dec
int3
dec
addb
sub
fdivrp
mov
shlb
lret
icebp
sbb
popa
mov
mov
cmp
and
ss
loope
jb
lret
imul
pushl
leave
repnz
mov
xor
getsec
loop
fcmovbe
pushf
pop
sub
pop
das
and
dec
push
in
push
in
stc
std
pusha
sub
ficoml
sub
fbld
les
cld
pusha
inc
or
sbb
or
add
adc
and
cmp
rol
xor
mov
add
push
mov
sahf
lahf
push
xchg
or
shrb
push
and
add
lds
jb
ret
repnz
ja
mov
mov
xchg
aas
scas
mov
mov
shlb
cmp
ljmp
jmpw
call
lret
aaa
sbb
testl
mov
cmp
inc
fstps
cmp
push
sbb
popf
iret
push
inc
lcall
rclb
mov
add
jbe
adc
xchg
xor
cwtd
push
popf
notb
mov
lock
lock
lods
mov
cld
ret
shr
test
test
pop
andb
sub
cli
or
cmp
xchg
test
xor
add
sbb
cmp
mov
in
test
xor
jp
roll
insl
push
dec
jbe
pop
dec
mov
mov
push
cltd
loope,pn
sub
clc
in
shll
mov
mov
mov
or
pop
pop
fiadds
leave
lahf
ljmp
rcl
adc
pop
sbb
xchg
pusha
push
rorl
lcall
add
negl
mov
jo
jmp
sti
aam
sbb
imul
fadds
insb
mov
add
xlat
push
add
pop
lods
hlt
mov
inc
insl
les
push
ds
movsl
xchg
hlt
icebp
add
fists
jl
mov
mov
imul
and
cmc
sbb
int3
ss
das
loope
call
push
aad
outsb
pop
shlb
sub
data16
jo
pop
xor
sbb
cli
push
add
mov
mov
dec
sub
mov
lock
fcmovnu
in
jp
ds
cmp
adc
or
int
xor
or
cmpsl
and
hlt
cli
cmp
inc
jnp
inc
dec
popa
fstps
and
orl
scas
xor
popa
das
or
frndint
push
inc
jns
je
out
pop
jae
mov
cmp
push
sub
xor
jne
pop
leave
and
jnp
xchg
sub
xor
test
xchg
cmp
insl
cmp
in
pop
fisubrl
arpl
cmp
insl
push
add
ljmp
shlb
xchg
fcmove
clc
mov
mov
or
lods
insb
cmp
jno
mov
cltd
mov
cli
clc
jg
call
lea
mov
mov
mov
dec
and
movsb
sub
mov
jns
cmp
mov
repz
fidivl
mov
xor
or
inc
or
sti
scas
lret
pop
addr16
pop
out
stos
and
inc
mov
jl
mov
push
call
inc
pop
daa
or
test
and
xor
lods
push
push
adc
pop
insb
repz
pop
xor
std
jns
jp
mov
sbb
outsl
xchg
inc
sti
dec
cmp
sub
push
adc
outsl
xchg
fnstenv
adc
arpl
sbb
jbe
fwait
xchg
adc
fisttpll
mov
mov
pop
movsl
push
add
iret
mov
inc
ror
mov
gs
xor
xchg
jae
sub
add
inc
jle
ljmp
out
into
test
lds
jbe
sbb
add
dec
imul
jo
add
out
mov
aas
and
xor
aaa
inc
dec
bound
dec
sbb
mov
scas
xchg
lds
mov
jl
dec
pushf
loopne
lcall
add
jge
in
call
stc
dec
notb
stos
stos
test
fdivrl
mov
imul
mov
aad
adc
jne
stc
pop
xchg
dec
push
pop
pop
fcomps
xor
or
mov
xor
push
xor
add
in
scas
mov
jns
outsl
add
jge
xchg
ljmp
js
push
packssdw
jmp
popf
jbe
adc
push
add
in
bound
js
adc
push
daa
xchg
repnz
xchg
scas
pop
pop
outsb
in
out
sbb
repz
out
inc
push
fadd
inc
sub
jae
adc
aaa
shrb
mov
cmc
adc
pop
leave
xchg
pop
adc
jb
mov
test
push
mov
jecxz
cmp
inc
in
dec
lods
movsb
jno
mov
mov
imul
xchg
std
out
pop
inc
loope
fsubrs
je
push
xor
and
jbe
mov
adc
rcrl
adc
jbe
pop
adc
out
and
xor
flds
xchg
pop
lret
cltd
pop
push
xor
sbb
xchg
movsb
jnp
xchg
hlt
inc
cmpl
xor
into
cmp
test
sbb
fdivl
mov
int3
dec
mov
mov
gs
xor
imul
fnstsw
push
xor
cmp
je
pop
fwait
shlb
push
movsl
inc
loop
and
and
mov
sub
ficompl
add
add
pop
repnz
add
gs
daa
adc
in
int
add
imul
lods
adc
fldcw
dec
pushl
dec
jo
xlat
jmp
ficomps
imul
pop
ds
fcmove
cmpsb
sbb
jno
addr16
loop
or
in
bound
cmp
push
cmpsb
sub
push
pop
les
js
lods
xchg
mov
cmp
xor
sbb
push
inc
dec
adc
mov
inc
out
out
jmp
cld
add
push
pop
scas
and
ja
popl
inc
push
mov
or
inc
fcoms
mov
dec
shll
mov
sub
fsts
fwait
in
xchg
sbb
imul
xchg
pop
sub
inc
mov
inc
ds
sbb
adc
mov
jne
dec
lret
mov
imul
mov
int
mov
leave
sbb
push
lods
xchg
pop
xchg
xor
jp
in
stos
test
pop
mov
inc
jp
enter
or
pop
push
push
adc
scas
dec
mov
mov
outsb
dec
and
push
loope
dec
cmc
lret
mov
dec
stos
adc
out
aaa
lcall
adc
sbb
add
fistps
mov
add
sar
leave
outsl
outsl
xchg
xchg
xchg
push
mov
mov
and
adc
push
sub
int
add
popf
ret
xchg
jae
cli
pop
pop
aam
lret
out
add
into
or
lcall
adc
cmp
add
push
fadds
jo
test
mov
les
xchg
or
dec
jbe
int
idivl
hlt
and
call
jae
sub
in
add
shrl
repnz
aas
mov
ljmp
pushf
idivb
out
mov
add
in
fistps
inc
sbb
sahf
rorl
jns
xchg
push
push
addr16
lods
mov
fbld
leave
aaa
sbb
lods
inc
mov
orl
data16
xlat
ficoml
pop
sub
stos
sub
and
int
orw
rolb
jmp
fsubl
bound
push
push
aas
xor
xchg
adc
aas
shr
das
outsb
pop
mov
je
cmp
lds
mov
mov
dec
lcall
repnz
sub
lods
orb
icebp
or
add
sub
sar
aad
rcrl
mov
nop
cmp
pop
pop
sti
add
fcomps
jecxz
sub
xchg
mov
mov
subb
inc
ja
in
into
pop
fisubrs
xor
adc
rcrl
lods
push
scas
sub
mov
inc
int
push
dec
imul
ja
mov
dec
push
mov
fs
jle
cs
mov
sbb
int3
jle
pop
sub
roll
incb
sbb
pusha
sub
test
xor
mov
or
ficomps
mov
lods
fistps
js
and
add
sub
inc
les
addr16
icebp
ror
jge
push
push
rol
xchg
pusha
inc
sbb
pop
sub
jecxz
das
dec
push
adc
mov
in
mov
mov
mov
push
xor
dec
stos
push
lret
mov
mov
mov
sub
dec
push
out
sbb
mov
nop
pop
sbb
cltd
scas
fwait
mov
aam
mov
test
inc
in
push
sbb
lret
fbld
and
sub
mov
aad
mull
and
inc
sti
out
loopne
enter
stc
jmp
mov
cmpsb
in
insl
pop
ja
pop
xchg
mov
push
and
mov
movsl
aad
les
adc
shrl
jmp
testl
xchg
sbb
pusha
js
cmp
mov
jne
insb
jno
pop
gs
lds
xorb
add
pop
jbe
xchg
aas
repz
in
jecxz
cmpsl
in
dec
dec
cmp
mov
movsb
mov
or
iret
inc
fcmovb
int
adc
inc
shrl
or
repz
mov
test
mov
ja
fmulp
or
mov
lret
xor
lret
mov
jg
adc
push
dec
or
ljmp
pop
sub
xor
daa
bnd
and
dec
mov
testl
loope
mov
mov
push
cmp
pop
xchg
repnz
out
sahf
out
mov
inc
rol
pop
adc
mov
lret
push
mov
popa
in
dec
dec
jo
scas
lret
sahf
jae
cmpsb
lea
mov
pop
adc
mov
cmc
outsb
sbb
add
aad
pop
js
dec
sahf
mov
and
loopne
inc
or
pop
addl
lods
mov
fdivs
fisttpll
ds
movsl
inc
in
jo
icebp
cmp
lods
aad
jge
imul
sub
mov
adc
jmp
or
mov
cltd
mov
int
xor
in
int3
and
adc
pop
xchg
mov
rcr
pushf
lds
pop
int
lret
jmp
sbb
fnstcw
mov
pushf
sub
call
cmp
jg
jno
mov
mov
sahf
sahf
cmp
cmp
movsl
popa
jecxz
pop
sahf
aas
inc
jns
push
jno
in
test
rcr
inc
js
adc
mov
stc
cmp
mov
xchg
loopne
popa
out
ror
push
dec
add
pop
inc
pop
mov
adc
jae
xor
pop
mov
ret
xchg
xor
daa
mov
add
push
jecxz
xrelease
mov
into
loop
mov
mov
aam
or
pop
cmp
bndstx
outsb
fwait
jecxz
xor
idivl
jbe
addb
xchg
push
pop
test
sarb
mov
mov
psraw
cltd
movsl
movl
pop
xor
or
or
xchg
mov
pop
test
sbb
jp
pop
arpl
mov
inc
cs
inc
fwait
stos
pop
cmp
inc
cmp
test
cmp
push
add
loopne
in
fldl
inc
test
mov
xchg
test
cmp
xor
orb
and
jo
push
add
into
and
popa
adcb
jl
sub
sub
or
rorl
arpl
daa
popa
ds
and
jne
nop
mov
test
test
popf
mov
and
pop
aad
sbb
cmp
lahf
enter
cmc
das
xchg
add
mov
dec
div
xchg
icebp
pusha
pop
cmpl
adcb
sub
xor
pop
inc
test
pop
push
aaa
sub
sub
adc
push
xor
push
inc
mov
jno
test
pop
dec
imul
pop
mov
add
xor
xchg
imul
mov
or
cltd
insb
popf
fistps
add
insl
cmp
imul
cltd
mov
fwait
mov
popf
lods
loopne
push
pop
jmp
sub
mov
daa
clc
add
testb
sub
and
xchg
mov
xchg
add
lds
mov
push
popf
sbb
add
xor
xor
xor
ret
fbld
and
aaa
xchg
insb
dec
bound
lods
inc
xor
adc
pusha
shr
jmp
jp
cmp
lcall
mov
sbb
or
inc
scas
das
jns
push
pop
cwtl
or
xchg
rolb
gs
and
test
dec
inc
repz
cmp
das
sbb
neg
dec
sahf
aaa
mov
and
rcll
mov
repz
test
lcall
jl
lcall
movsl
jbe
out
push
inc
mov
pushf
jp
pop
push
sub
cmp
adc
shlb
cmp
push
cmpsl
pop
gs
fwait
jle
stos
mov
enter
cmp
sbb
or
cmpsb
jb
push
das
and
xchg
pop
loopne
jae
dec
clc
mov
stos
mov
inc
add
lods
shl
lods
inc
dec
cmp
mov
push
fcom
xor
fdivs
in
fidivrs
cltd
mov
mov
clc
sub
add
jae
inc
outsl
sbb
bound
aam
mov
aas
xchg
or
xchg
test
call
mov
adc
scas
mov
loope
mov
std
or
lahf
mov
ja
xor
and
test
add
stc
fiaddl
stc
mov
mov
pop
cwtl
dec
int
adcl
dec
pop
shlb
push
add
jns
dec
lds
mov
jb
pusha
daa
xor
dec
and
pop
lahf
dec
mov
leave
pop
cwtl
adc
popa
lahf
fdivrs
push
add
test
in
stos
fistpl
movsl
call
mov
fstps
ljmp
sbb
adc
addr16
ss
loop
sbb
jge
inc
js
jns
aaa
jmp
vmovd
mov
sbb
pop
mov
out
xchg
test
cmp
pop
mov
inc
pop
ljmp
pop
mov
sub
imul
les
mov
iret
sbb
push
mov
inc
pop
sub
in
pop
push
in
jb
push
push
lcall
mov
les
roll
mov
dec
cmp
mov
shrb
ret
pop
and
add
dec
jns
inc
pusha
into
test
xchg
bound
pop
sub
repnz
dec
int
jle
test
and
bound
aas
test
inc
add
xchg
sub
ljmp
adc
icebp
mov
pop
ljmp
aad
adc
shl
jnp
in
fsubs
dec
add
sub
mov
imul
pushf
dec
fnclex
test
ja
sub
xchg
cmp
mov
fistps
scas
adc
into
jb
lret
fs
roll
test
sti
inc
mov
dec
in
roll
icebp
push
jnp
xor
int3
rcll
sub
lret
adc
add
test
dec
les
loope
gs
cmp
scas
or
stos
jl
aad
inc
cltd
adc
mov
dec
fmuls
scas
add
ret
mov
gs
outsl
imul
fwait
add
ja
mov
sub
inc
push
adc
mov
mov
sbb
enter
loop
xor
jp
movb
loopne
xchg
cwtl
je
mov
mov
outsb
lods
sbb
ds
dec
incl
mov
stc
sbb
or
int
stos
sbb
jbe
pop
jb
shll
lds
mov
mov
pop
out
std
fldenv
out
mov
clc
dec
sub
xchg
cmpsb
dec
jle
out
jmp
sbb
sbb
lea
fwait
cs
push
xchg
sub
push
mov
and
cwtl
sbb
inc
fsubrl
xchg
pop
ljmp
cmp
cmpb
mov
add
push
dec
push
je
xor
add
lcall
push
inc
mov
jmp
lock
lods
test
xor
mov
sbb
jecxz
jbe
loope
pop
repnz
cmpsl
sub
mov
mov
ljmp
popf
mov
mov
mov
cmp
adc
jns
xchg
rcl
ret
mov
fistpl
jecxz
shrb
pusha
test
xor
cld
add
mov
mov
ljmp
and
push
mov
cmp
ja
out
xchg
icebp
push
fcmovb
bound
ja
sbb
pop
inc
and
push
lods
lret
arpl
je
test
aam
sub
push
rolb
ss
sub
insb
jl
jnp
cmp
cmpsl
cwtl
lret
mov
or
pop
adc
int3
push
jecxz
jp
fdivl
xlat
std
pop
adc
test
iret
xchg
and
fildll
jmp
sbb
mov
xchg
and
jl
ret
push
and
push
out
leave
add
inc
or
lods
rolb
insl
repnz
cmpsl
xchg
sub
xor
sbb
test
or
cmp
pop
fs
mov
ret
leave
jne
xlat
icebp
mov
movsl
stos
pop
adc
push
mov
test
xchg
cmp
or
stos
adc
pop
das
dec
arpl
mov
addl
xor
idivl
dec
add
xchg
test
ret
mov
mov
xchg
gs
mov
sbb
xchg
jl
mov
pop
jno
add
insb
pop
mov
sbb
fidivl
dec
movsb
xor
nop
lcall
shlb
xchg
mov
bound
shll
mov
gs
cmp
pop
fisubrs
call
xchg
mov
cs
add
sbb
mov
lods
xlat
xor
jae
scas
aad
ret
and
push
pushf
fimull
shll
push
loop
push
repnz
xchg
test
adc
jnp
xchg
loop
adc
pop
stc
out
aaa
mov
fwait
daa
mov
ficomps
leave
xor
pop
sbb
mov
std
pop
cmp
pop
daa
mov
loope
sbb
push
fimuls
jns
xor
or
rclb
dec
fwait
pop
and
outsl
jno
xchg
push
pop
mov
add
insb
ss
cmpsl
jmp
cmp
mov
mov
pop
aaa
sub
data16
iret
cmp
push
in
imul
pop
xorb
mov
sti
idiv
jmp
dec
sub
shrb
dec
push
fldcw
adc
sahf
mov
cmp
adc
insl
sahf
ret
rcrl
inc
mov
pop
call
jbe
mov
mov
cli
or
jge
sub
mov
lods
push
inc
bound
push
aam
jnp
stc
imul
xchg
test
xchg
sub
jno
push
divb
rclb
je
mov
pop
fcoml
add
gs
lock
sub
sub
push
stc
stos
add
aaa
inc
mov
stos
sbb
sbb
test
aam
lcall
cmp
fwait
lods
inc
sbb
cmp
cmp
pop
mov
adc
dec
cmp
jmp
jne
and
xor
in
insb
mov
mov
dec
mov
mov
or
inc
jbe
cmpsb
ret
pop
stos
push
add
pop
push
xchg
add
inc
push
sbb
notb
jle
sbb
idiv
inc
mov
pusha
shl
inc
add
add
imul
jnp
les
das
mov
mov
jmp
fwait
icebp
add
movsl
cmp
add
fstl
stc
imul
inc
mov
repz
xor
adcb
popa
push
stos
aam
js
call
xor
int
mov
mov
mov
sub
mov
imulb
and
sti
fmull
cmp
sbb
and
and
nop
rclb
stos
in
testl
dec
fs
adc
jmp
jl
outsb
mov
fldl
mov
mov
loop
push
loop
adc
xchg
push
or
cmpl
cmp
cli
out
cmp
jne
repz
fisubl
add
fcos
pushaw
pop
mov
into
sub
sub
outsb
movsl
stos
aaa
bound
push
test
loop
lods
cs
dec
sub
jle
jb
out
and
mov
adcl
jge
pop
cld
scas
pop
es
fbld
fiaddl
xchg
pop
cli
sbb
lret
inc
pop
pop
out
in
popf
sub
mov
dec
xchg
push
xchg
test
cld
int
repz
mov
subl
xchg
enter
insb
bnd
cmp
out
mov
outsb
ljmp
sbb
sbb
outsl
xor
pop
mov
jecxz
push
sbb
jle
pushf
aas
int3
imul
cs
flds
cli
push
and
es
movsl
xchg
call
cmp
pop
mov
cmpsl
jp
addr16
pop
sti
mov
sub
pop
roll
ror
ror
inc
fisubrs
test
push
mov
mov
sbb
fsincos
or
jmp
jle
inc
push
pusha
jge
add
push
cmpb
clc
dec
inc
push
sahf
jmp
add
add
xchg
outsb
addr16
mov
add
cmpl
inc
pop
push
jb
pop
mov
inc
or
sbb
and
in
dec
cwtl
or
insl
add
dec
repz
inc
add
xor
repz
sti
lcall
push
mov
pop
xlat
outsl
jmp
xchg
push
pop
loopne
hlt
inc
pop
imul
orb
out
push
es
adc
aam
mov
mov
mov
imul
test
pop
xchg
adc
cli
mov
pop
pop
mov
test
test
xchg
test
lock
inc
cmp
add
inc
xor
subl
and
lods
add
cmp
aas
loop
or
xchg
pushf
dec
push
outsb
repnz
sbb
movsl
xchg
cmc
aaa
inc
pusha
lock
fcmovnu
and
in
xchg
xor
mov
push
push
dec
fsts
push
popf
dec
fbstp
test
ret
adc
xchg
cwtl
popa
imul
pop
fisubl
inc
jecxz
xchg
je
sub
shrb
icebp
mov
mov
sbb
push
dec
mov
mov
cmp
orw
inc
in
xor
ret
leave
scas
mov
shl
jb
sti
std
cltd
rorb
pusha
xchg
jg
sti
jbe
cmp
std
xchg
xor
outsb
ds
pop
popa
cmp
dec
cs
adc
jno
push
icebp
pop
add
sbb
je
stos
xor
clc
add
lock
pop
aas
mov
adc
lahf
xor
cmp
cmp
call
inc
xor
sbb
fprem
adc
inc
jns
mov
mov
gs
xchg
inc
js
movsb
or
in
pop
out
jb
xchg
rol
mov
dec
lds
rol
add
ret
xor
jle
push
fimull
cmc
ljmp
mov
mov
adc
test
lret
xor
push
xchg
movsl
mov
pop
in
and
push
mov
mov
cmp
popf
fisubrs
pop
lds
rcrb
jmp
iret
pop
cmp
dec
mov
lret
je
cwtl
hlt
movsl
jl
leave
leave
jb
mov
xorl
leave
xlat
dec
xor
je
jno
roll
loope
or
into
xor
fwait
je
je
sub
shl
cmp
pusha
in
mov
ret
icebp
sub
mov
lods
cmp
ret
ret
adc
test
xchg
sbb
mov
clc
pop
lods
push
sbb
imul
or
inc
iret
lahf
sub
jg
shll
pusha
or
loopne
in
inc
cld
mulb
hlt
and
cltd
fstpl
mov
pop
pusha
inc
notl
jne
mov
dec
repnz
jb
dec
jo
mov
outsl
xchg
enter
push
or
xor
adc
imul
xchg
mov
out
and
sahf
rol
jb
add
flds
add
sbb
fdivl
movl
inc
sub
push
xor
lods
imulb
mov
popf
and
movsb
xchg
pop
or
outsl
addr16
mov
pop
sbb
loopne
or
leave
push
scas
cld
std
mov
daa
cltd
push
outsl
loope
loopne
pop
xor
inc
cmpsb
lcall
cmp
push
outsl
hlt
push
imul
ds
out
jmp
xchg
test
pop
sbb
dec
cwtl
ljmp
push
in
std
fists
loopne
loopne
lahf
js
imul
in
es
inc
negl
aas
ds
cmp
jb
push
jg
pop
push
lock
cmp
mov
inc
out
pop
push
mov
xor
hlt
ror
dec
inc
add
fnstcw
lahf
and
fcompl
in
push
and
ljmp
imul
cmc
cld
push
or
test
das
repz
sbb
lahf
mov
lret
jecxz
sub
cmp
orb
xor
das
mov
mov
xorb
xor
test
int
xchg
mov
arpl
in
xchg
fisubs
enter
xlat
out
les
inc
cmp
push
lret
repnz
add
imul
insl
mov
xchg
and
adc
xchg
jg
rorb
data16
repz
stos
sub
sti
loope
adc
jno
push
imul
dec
xchg
cs
push
jle
pop
sbb
sub
jnp
sbb
add
add
mov
and
pop
sub
test
stc
dec
pop
xor
out
adc
pop
adc
mov
or
call
xchg
pop
pusha
cwtl
xor
push
sbb
sbbb
inc
jne,pn
test
cltd
push
dec
filds
dec
loope
inc
xorl
sub
fildl
xchg
icebp
mov
hlt
jle
push
mov
repnz
inc
jg
pop
pusha
into
add
sbbl
mov
fwait
adc
pusha
jp
fldpi
imul
std
shl
and
fcomps
push
shl
xor
mov
out
inc
inc
pop
nop
jbe
lcall
jbe
jae
ds
out
lock
xlat
mov
int
mov
repnz
dec
test
jmp
in
sub
loop
lods
sub
scas
cmc
add
xor
push
int
test
sub
and
pushf
testb
jne
mov
mov
cmc
outsb
cmpsb
lret
cwtl
pop
popl
stos
xchg
out
mov
fsubrs
sahf
out
in
loop
rolb
loopne
sub
xchg
add
rol
inc
pop
xor
dec
sti
cmp
std
shll
lret
scas
hlt
sub
out
pop
loopne
or
mov
ret
dec
sub
inc
jle
jl
int
and
dec
jmp
cmpsl
flds
jg
imul
imul
xchg
aas
pop
mov
bound
loope
testl
psrad
addb
mov
dec
sti
push
sahf
mov
sbb
ss
frstor
mov
xor
outsl
or
movsl
xorl
mov
std
addr16
push
and
jne
outsb
sbb
iret
mov
jecxz
xchg
jb
jg
mov
xchg
hlt
std
ljmp
std
insb
dec
sbb
out
imul
sub
addr16
fsubs
or
adc
pop
xchg
or
jb
cmp
push
push
jne
int
scas
es
pop
pop
xor
pusha
sarl
pushf
or
mov
fsubl
sub
jbe
js
push
mov
adc
in
push
push
loopne
rorl
addb
pop
cmp
nop
cmp
dec
int3
hlt
pop
and
decl
fwait
pop
sub
mov
stc
sarl
and
pusha
add
xchg
dec
shlb
push
test
mov
xchg
fsubr
fsubrs
out
ja
cmc
std
sti
or
mov
out
gs
or
addr16
dec
aad
dec
push
pop
hlt
inc
jnp
insl
cs
ret
mov
or
add
repz
lret
loope
push
in
rorl
test
and
adc
shlb
imull
into
push
mov
pushl
xchg
aaa
cmp
add
pop
data16
dec
pop
mov
lods
neg
sub
dec
jmp
xchg
in
push
ror
sub
clc
insb
movsb
scas
add
sarl
sub
inc
xor
aaa
push
sub
inc
loope
stos
push
stos
scas
scas
mov
sub
faddl
push
fmulp
fnsave
or
push
inc
add
cmpsb
stos
jl
out
sub
repnz
or
dec
incl
mov
lods
jmp
xor
rcll
cmp
pop
add
or
adc
xor
popf
xchg
into
adc
cmpsb
add
sbb
sahf
inc
cmp
packsswb
cmp
sub
clc
loop
mov
ret
mov
fildll
adc
nop
mov
mov
mov
jecxz
push
dec
fdiv
cmp
lcall
pop
mov
pop
mov
popf
and
ficoml
mov
cmp
xor
xor
pop
add
xchg
pop
fidivs
pop
pop
aam
add
pop
sub
pop
cmp
test
xchg
out
dec
xor
cli
pop
jl
movsb
test
xchg
cmp
dec
notl
decl
mov
data16
sub
xchg
cmp
pop
in
je
aas
mov
xlat
mov
fstpl
sbb
cld
in
dec
loopne
sbb
dec
movsb
and
cli
movsb
not
dec
icebp
jbe
push
rcll
mov
leave
imulb
pop
add
sbb
mov
jbe
daa
xchg
jecxz
stos
xchg
inc
push
pushf
xor
cmp
repz
adc
mov
xor
fucomi
aad
testl
push
mull
icebp
ret
sbb
jp
push
pop
test
clc
fcoml
push
xlat
mov
inc
jl
mov
inc
enter
in
jae
xor
loope
popf
cli
jl
jmp
int3
enter
jne
cmpsl
ljmp
adc
ds
test
cltd
aad
ret
mov
insb
stos
sub
mov
push
pop
inc
cmp
stc
fisubs
xor
lds
out
xor
pusha
les
cld
jbe
jge
xor
mov
rcll
adc
in
out
cltd
fwait
and
aas
jb
js
addr16
push
popa
push
and
out
in
add
push
sub
test
jmp
xchg
adc
push
ficoms
stos
adc
stos
xlat
jp
sahf
scas
mov
pusha
icebp
enter
mov
dec
stos
insb
mov
xorb
mov
mov
xor
jno
push
scas
arpl
sub
in
stos
pop
mov
sub
inc
sub
sub
rcrl
push
dec
rorl
jecxz
test
fldcw
dec
pop
xchg
nop
call
sbb
ffree
ror
sub
sub
dec
or
or
and
jg
leave
pop
mov
mov
or
fmull
pop
ljmp
enter
fnstenv
adc
mov
imul
push
mov
mov
cmpsl
es
fdivl
xchg
xlat
jnp
jge
adc
mov
dec
popa
out
loop
cmc
bound
mov
leave
rolb
outsb
aad
out
gs
clc
subps
je
mov
cli
xchg
pop
faddl
fstpt
ljmp
pop
mov
adc
or
not
pusha
adc
insl
sahf
ds
inc
mov
aam
mov
add
push
cmc
xor
adc
xor
arpl
mov
ret
xor
cmp
xchg
mov
stos
cmp
in
jbe
pop
jb
das
mul
test
sub
pop
xor
rolb
inc
call
adc
jne
xor
repz
mov
into
scas
add
mov
mov
fdivrs
lods
scas
test
int
cmp
inc
mov
jmp
cld
xchg
sbb
out
push
ds
sub
lret
leave
popf
imul
jg
cli
lds
pop
popa
or
lcall
mov
adc
cmp
cmp
adc
pop
js
pop
andl
and
in
gs
inc
inc
xchg
mov
lahf
jns
sub
pcmpgtw
bound
jno
sbb
loope
imul
adc
rcrb
lds
xorb
or
shrl
insl
dec
aaa
jns
je
and
outsb
fimuls
or
das
cmpsb
xor
push
jo
lret
pop
cmpsl
lds
mov
or
push
jae
jns
mov
mov
popa
in
je
aas
push
jecxz
cld
sar
push
adc
negb
add
mov
sarb
mov
sub
std
popa
insb
js
dec
shlb
mov
movsl
stos
hlt
inc
cmp
jne
cmp
inc
jb
icebp
rclb
movsb
xchg
mov
mov
leave
test
pavgw
imul
cmpsl
popa
pop
dec
or
lods
adc
imul
sarl
and
adc
mov
rcrb
in
fisttpll
rcrl
dec
aas
repz
xor
pushf
push
push
adc
mov
jmp
cli
dec
mov
mov
rcrl
fwait
out
xchg
jno
sub
mov
pusha
icebp
out
push
push
xor
sub
popf
push
outsb
jmp
and
mov
or
imul
lret
cmpsb
roll
rorl
in
mov
bnd
je
cmp
or
sbb
and
pop
cli
jns
hlt
scas
xor
push
ss
and
adc
push
std
inc
outsb
dec
filds
xor
jl
aas
add
mov
aaa
mov
inc
aam
push
iret
mov
add
rolb
push
adc
inc
push
bound
cs
add
addr16
shr
fbstp
dec
das
inc
dec
inc
push
cld
test
and
fdivl
js
pop
push
jge
xlat
aad
lods
lret
jo
xor
int
test
push
sbb
sub
mov
adc
cmpsb
pusha
dec
iret
and
arpl
add
imul
fsubr
lea
mov
and
or
iret
loop
cmp
jns
cli
cmp
lret
sbb
lcall
mov
in
loop
mov
or
loopne
sub
das
mov
sub
push
imul
adcl
sbb
push
cmpsl
mov
lods
shl
in
jecxz
sub
ja
in
insl
sub
in
and
or
insb
adc
and
dec
jecxz
xchg
and
orl
or
addr16
jg
fwait
xchg
ja
testb
inc
loop
cmpsb
adc
adc
add
pop
test
ss
js
xor
dec
addr16
push
aaa
sub
in
ss
movsb
in
int
insb
sbb
ja
div
and
dec
in
jle
outsl
mov
shll
inc
cmp
popa
loope
ds
pushf
jl
xchg
adc
sub
jns
pcmpeqb
mov
push
mov
test
push
and
stos
mov
aam
sub
cwtl
stc
mov
xor
lds
mov
mov
pop
sbb
fisubs
dec
xor
iret
xor
xor
cs
psubd
mov
push
push
fs
pop
or
adc
or
es
cs
xchg
mov
mov
add
nop
push
out
lahf
cld
xchg
push
pop
sbb
int3
pushf
fidivl
xchg
adc
fdiv
push
push
or
cltd
sub
sub
cmpsb
rclb
cld
push
arpl
xchg
sbb
mov
or
jg
mov
lret
push
mov
cmpsl
push
inc
xor
add
lret
inc
jae
in
sbb
mov
call
mov
push
lahf
sarl
push
pop
jp
lods
mov
stos
test
lahf
mov
xchg
arpl
sahf
gs
test
dec
xchg
leave
adc
cmp
push
add
sbb
divl
roll
sti
loop
sub
xor
hlt
mov
push
cltd
lret
or
adc
xor
xchg
fstpl
mov
fcmovnu
int
push
ljmp
movsb
test
leave
fistps
testb
iret
adc
shlb
cmp
cld
test
xchg
inc
sahf
jg
aaa
and
test
arpl
mov
lods
out
cmp
xchg
popa
dec
mov
lea
hlt
test
mov
cmpsl
adc
adc
fsubs
inc
cmp
inc
in
push
sbb
sahf
cs
dec
xchg
sub
xor
pop
popf
sub
lock
adcb
inc
push
ret
push
cmp
leave
outsb
or
push
enter
imul
popf
imul
xlat
or
xorl
scas
adc
mov
push
popa
sbb
jecxz
or
xchg
push
xchg
shll
add
int
or
sbb
sbb
push
data16
inc
add
xlat
insl
pusha
aam
out
pushf
mov
push
inc
hlt
mov
and
out
in
ss
scas
lret
xchg
jne
jae
dec
jo
cmp
cmp
pop
push
push
sbb
imul
add
adc
add
add
call
imul
outsl
add
push
xchg
repz
leave
lea
push
push
ficoms
cli
out
sbb
aas
cli
in
mov
jge
ljmp
inc
test
jp
sub
and
cmp
mov
stc
in
pop
jge
mov
jo
mov
pop
cmpsb
add
shr
inc
mov
cli
add
jbe
ljmp
mov
cmp
xor
pusha
test
insb
sbb
enter
fld
test
mov
dec
ja
cmp
scas
scas
cmc
pop
cwtl
loope
je
lcall
shlb
xor
or
rolb
sub
std
nop
jg
imul
and
loope
dec
pop
jnp
push
push
addr16
sahf
fsts
adc
or
push
cmp
cmp
sub
xchg
pop
sti
mov
xor
push
xor
mov
arpl
pusha
int
int
adc
or
clc
jb
xor
popa
mov
adc
mov
sub
add
pop
movsb
mov
stos
add
inc
lock
mov
and
jns
mov
loop
mov
rclb
or
push
adc
addr16
stos
aas
lahf
jb
je
mov
pop
jno
imul
cmp
jle
and
add
scas
insl
and
stos
mov
mov
sbb
les
pusha
into
push
ret
push
mov
sbb
in
xchg
lret
inc
mov
outsb
or
pop
pop
mov
xchg
test
repnz
movsb
out
jp
mov
inc
push
mov
cmp
push
inc
lret
inc
movsl
xchg
xor
sbb
sahf
cld
mov
sub
push
lock
add
cld
cld
leave
and
ficomps
cmc
pushf
mov
imul
xchg
or
shlb
push
arpl
lea
adc
and
jmp
les
stos
inc
mov
sub
icebp
mov
lds
mov
mov
xlat
inc
fidivl
add
imul
in
outsb
mov
cmpsb
mov
and
dec
adc
stos
add
sbb
fcmovnb
insb
imul
mov
mov
ret
mov
and
rorl
xchg
xor
cwtl
lds
jmp
cmp
jecxz
push
xchg
pop
sub
cmpsl
jle
xchg
imul
jne
mov
ret
inc
movsl
scas
mov
add
daa
repnz
sub
mov
fisubrl
outsl
inc
mov
gs
xchg
ja
sbb
stos
sbb
sti
adc
std
cmp
sbb
leave
outsb
mov
cld
mov
fbld
sbb
add
lret
cmp
mov
pop
rorl
mov
popf
subl
sti
ljmp
dec
fidivrl
push
mov
xchg
sti
or
xchg
mov
xor
xor
push
inc
in
push
sub
inc
es
add
cmc
pusha
mov
aas
mov
jg
push
idiv
shll
cmp
and
icebp
fs
lock
sub
xchg
das
push
clc
addr16
dec
test
pop
dec
out
pop
jno
mov
push
mov
pop
cmpb
dec
insb
ret
repz
idiv
out
push
mov
mov
and
or
add
lock
pop
fsubrs
push
ja
aaa
mov
pop
out
sub
xor
pop
out
sti
and
cltd
xor
jp
cwtl
mov
sahf
into
cmp
adc
or
pop
lret
pop
jge
jno
out
test
jp
imul
xchg
dec
lcall
pop
mov
jae
js
sbb
sbb
sti
lret
pushf
lea
les
xchg
cmp
cltd
fistpl
push
iret
jns
add
sub
stos
loop
out
scas
pop
push
or
mov
push
enter
and
outsl
cwtl
les
negl
sub
mov
jnp
cmpsb
push
scas
or
out
sahf
push
or
jmp
cmp
mov
pop
cmpsb
icebp
lret
push
ret
test
stc
push
repnz
lods
fwait
pop
mov
xor
xor
jae
outsl
pop
jae
inc
xor
cmpsl
pop
mov
lret
jg
and
adc
imul
mov
mov
xlat
xor
popa
aaa
push
into
sti
add
and
inc
cmp
inc
ret
das
pop
cwtl
sti
and
sub
stc
testb
and
aas
pop
shlb
lret
pop
ret
xchg
rorb
sbb
ljmp
xor
pusha
cmc
bound
jle
ret
sbb
insl
xor
lcall
push
testb
pop
ret
imul
scas
out
adc
rolb
sub
mov
sahf
pop
sahf
fchs
sahf
xchg
push
dec
mov
inc
xchg
arpl
or
ss
out
adc
jmp
loope
filds
sbbl
mov
jae
add
cmpl
pop
jns
mov
and
in
xchg
xor
in
pop
mov
hlt
mov
mov
pop
sbb
cltd
imul
sub
in
ljmp
jno
movsb
pushf
jne
iret
dec
cmpsl
pop
fimull
xchg
xor
rcll
lret
mov
in
push
xchg
push
add
cmp
mov
shll
icebp
test
cmp
xchg
outsb
test
cmp
pusha
popf
inc
sub
in
in
adc
sbb
rorb
lods
mov
xchg
lcall
das
pop
scas
stos
pop
sbb
add
daa
adc
repz
insb
jge
pusha
mov
mov
push
stc
cmp
or
out
insb
xor
in
subl
jp
insb
jmp
sub
add
push
jo
data16
repnz
scas
mov
xor
xchg
jae
test
inc
sub
mov
outsb
xchg
xor
out
js
int
or
sub
and
clc
add
cltd
js
mov
cmp
sub
ds
fwait
jns
movsb
insb
into
fwait
and
sub
adc
mov
inc
ss
pop
arpl
ja
ret
jo
adc
pop
in
sub
mov
jno
out
sbb
outsl
mov
lcall
jns
nop
jne
adc
enter
push
add
aad
lahf
fmull
dec
movsl
fnstenv
push
sbb
out
hlt
push
insl
idivb
mov
repnz
pusha
mov
mov
test
dec
mov
das
mov
xchg
mov
jno
in
xchg
push
dec
rcrl
dec
pop
out
push
fiaddl
aaa
add
lock
adc
inc
dec
outsl
jp
filds
or
lret
in
aad
pop
je
in
mov
sub
lcall
sub
pop
push
lea
fisttpll
lods
pop
aaa
in
mov
add
mov
adc
lods
rcl
jg
mov
aam
fs
inc
call
xchg
mov
imul
scas
dec
or
and
cmp
icebp
outsb
rorb
call
int
shlb
fdivrs
or
outsb
iret
imul
int
adc
outsb
push
mov
sub
gs
insb
aaa
xchg
rorl
popf
ja
jecxz
xor
jg
and
cmp
lds
inc
cmp
xlat
mov
repnz
sbbl
fld
dec
add
adc
dec
mov
ret
sbb
in
dec
dec
jne
xchg
gs
mov
mov
dec
add
and
push
aas
leave
shrb
andb
sub
outsb
mov
adc
lret
shr
call
sbbl
jo
xor
sarb
pop
cld
xchg
insl
movsl
loop
jecxz
cwtl
or
jb
inc
jg
and
adc
cmp
stos
jl
push
push
lds
fbld
pop
mov
cmp
mov
addr16
sbb
aaa
xchg
sti
xchg
lods
divl
cs
cmp
xchg
push
sub
insl
cmpsb
mov
popf
ja
cmp
xchg
pop
call
aaa
jbe
push
adc
testb
xlat
sub
push
jp
lods
jge
hlt
addr16
mov
lods
jbe
jbe
fcmovbe
adc
int3
std
add
or
mov
decb
out
sti
daa
cmp
lods
adc
sub
or
jno
push
leave
repz
addr16
sahf
add
fdivs
repz
mov
shl
pop
sbb
push
lods
sub
lods
mov
mov
dec
adc
js
scas
cmp
jb
lods
jae
push
repnz
test
in
cmpsb
js
dec
mov
inc
out
or
xor
lret
nop
xlat
adcl
jmp
dec
jae
mov
add
and
mov
adc
mov
out
mov
loope
das
fisubrl
nop
push
dec
hlt
jp
xchg
push
or
sub
js
lods
cltd
addr16
xchg
mov
sbb
sub
xchg
xor
popf
fildl
xchg
xchg
mov
outsl
push
shlb
leave
int
adcb
inc
mov
jge
sbb
rorb
out
and
test
out
cmp
xchg
les
arpl
fadd
daa
aam
out
sub
or
xor
sub
add
push
add
lahf
loope
push
loope
push
xor
mov
mov
xor
in
adc
test
mov
ds
mov
pop
or
je
loope
mov
or
or
push
loope
movsb
jae
mov
arpl
test
mov
and
mov
pop
out
fiadds
sub
cmp
fsubl
test
notl
test
add
xchg
loope
aad
int3
jl
xchg
lock
mov
nop
push
loope
iret
lea
mov
mov
adc
jmp
daa
add
xor
inc
cltd
mov
scas
push
rol
movsl
xchg
das
out
iret
fs
inc
lahf
sahf
pop
adc
dec
mov
movsb
lods
push
push
scas
sbb
fwait
xchg
lock
sahf
and
mov
inc
movsb
lret
hlt
out
push
jg
sbbb
movsb
in
mov
int3
push
and
jb
fwait
scas
and
les
jl
pop
inc
test
movsb
xchg
jae
pop
push
ret
pop
jno
or
in
es
fidivl
mov
sub
jp
mov
inc
push
xchg
addr16
xchg
in
lods
sub
xchg
jg
in
mov
movsb
xchg
mov
cwtl
xchg
jae
sub
mov
lds
lds
mov
ffree
subb
inc
arpl
inc
cmp
dec
xchg
shl
dec
and
inc
mov
jecxz
into
nop
sti
adc
cli
sarb
mov
mov
adc
inc
adc
stos
jecxz
fwait
dec
enter
pop
stc
imul
nop
es
pusha
inc
and
cmpsl
cli
packssdw
sub
cld
and
leave
shlb
xlat
les
aam
aad
pushf
mov
jbe
repz
xchg
mov
imul
in
lcall
add
xchg
sahf
jp
nop
inc
ja
dec
xchg
sbb
mov
mov
popa
lret
ret
or
sub
cltd
push
addr16
daa
dec
frstor
addr16
sbb
popl
inc
in
mull
fistps
xchg
out
fwait
leave
lock
pusha
hlt
cmp
mov
cmp
fs
xor
xchg
jno
ja
cmpl
insb
ret
mov
aaa
dec
mov
add
rolb
repnz
pop
mov
daa
add
jnp
mov
filds
fidivs
fldcw
mov
ljmp
das
xor
jns,pn
push
movsb
adc
add
jl
roll
je
lret
repz
cs
in
cs
scas
repnz
iret
push
bound
xor
mov
and
mov
xchg
push
incb
push
mov
mov
loope
je
cmc
pop
dec
pop
fcoml
mov
fnstenv
add
lahf
pop
pop
inc
and
aas
xchg
sub
sbb
mov
fwait
or
pusha
jl
mov
add
cmp
sbb
sbb
cs
lcall
pop
out
pop
and
outsl
mov
inc
xchg
sbb
add
xorb
mov
scas
adc
xchg
jne
in
stos
xchg
lods
adc
dec
and
aas
jae
pop
frstor
sub
mov
mov
out
push
lock
xor
loope
adc
inc
jge
cld
cltd
inc
jae
add
repz
lds
inc
xchg
pusha
pusha
pmullw
cwtl
sbb
sahf
scas
add
ror
rcl
arpl
dec
jl
cwtl
pop
or
pop
jecxz
push
test
adc
push
jecxz
sbbb
iret
mov
xchg
aas
or
push
dec
lea
mov
mov
loop
inc
and
fwait
movsl
xchg
fadds
call
mov
fcmovnu
adc
repnz
lret
dec
mov
enter
cmp
ds
mov
and
data16
lods
xor
mov
fs
call
fwait
cmp
cmc
xor
aaa
xlat
or
outsl
or
out
dec
dec
or
cld
sarl
ret
fidivrs
jmp
add
mov
sbb
popa
inc
mov
daa
pop
cmp
pop
add
jl
lahf
add
addl
cwtl
mov
push
gs
lret
xorl
push
cli
push
leave
call
aam
push
mov
out
lret
add
mov
push
xor
and
inc
add
testl
add
roll
nop
cmpsb
pop
jp
addr16
insb
inc
addr16
ljmp
lahf
pop
fsubrl
aaa
cmp
fdivrs
mov
add
xor
sbb
push
insb
es
cmp
into
and
push
in
pop
sbb
mov
loop
xor
pop
or
and
testb
divl
out
adc
test
xchg
sbb
mov
outsb
pop
mov
pop
je
xor
sahf
xchg
dec
mov
fistpll
adc
xchg
jno
gs
jl
out
out
mov
insb
push
push
cld
out
or
xor
test
sbb
in
mov
sbb
ror
movsb
shl
in
dec
mov
sub
lea
les
xchg
enter
mov
test
mov
dec
nop
and
cmp
int3
pop
mov
pop
pop
aaa
sbb
test
or
jge
or
ds
movsb
mov
ret
lock
ret
jle
sbb
lods
jae
ds
mov
stos
in
xor
dec
into
or
push
imul
cmp
mull
mov
sbb
call
in
sub
mov
pop
jecxz
mov
and
dec
push
or
inc
inc
add
push
repz
jmp
std
stos
leave
aam
imul
jnp
addr16
cmp
daa
testl
sub
leave
sbb
lcall
xor
xchg
mov
out
fsubrs
inc
in
shlb
and
mov
das
xor
cmovbe
std
xor
movsl
mov
fiadds
rcll
fistpll
mov
imul
push
sbb
jg
int
lea
lea
and
fidivrl
outsb
adc
add
dec
push
push
adc
in
push
daa
dec
cmp
mov
cmp
add
cmc
jge
aam
xchg
or
push
int
mov
jae
sub
popa
sub
cmp
loop
xchg
repnz
std
in
add
icebp
dec
jle
jg
and
push
add
mov
mov
mov
ss
insb
gs
arpl
cmp
loopne
out
xchg
push
int
loope
cld
in
xor
mov
push
out
jb
adc
and
sbb
inc
lea
xor
jg
lea
scas
jl
arpl
sbb
or
out
lret
add
mov
sbb
push
push
sub
fwait
lahf
sarl
xor
repz
clc
xchg
mov
inc
cmp
cmp
lcall
scas
or
cmpsb
add
psubsb
mov
cli
mov
mov
imul
mov
mov
test
int3
mov
outsb
int3
or
dec
xchg
std
jmp
adc
stos
jg,pt
sti
ljmp
mov
push
loopne
aam
jl
add
jo
inc
daa
aad
incb
mov
sub
xchg
les
sbb
jb
daa
fisubrs
stos
cmpsl
test
and
mov
in
les
sbb
inc
negl
jp
xchg
mov
add
dec
xor
test
outsl
lcall
leave
stos
shlb
pop
xacquire
mov
mov
jmp
in
and
dec
sub
int3
pop
ss
mov
pop
jecxz
push
cmpsl
mull
cmp
add
dec
push
ficoml
hlt
mov
jns
mov
mov
dec
pop
push
loopne
mov
call
dec
lcall
out
dec
or
mov
inc
xchg
pop
ss
ret
pop
outsb
clc
push
mov
sub
xor
add
lret
testb
jecxz
fdivl
ds
scas
cmp
pushf
shll
push
or
mov
ja
test
sbb
inc
push
ja,pn
sbb
mov
out
ret
mov
xchg
jno
dec
stos
gs
mov
in
in
jo
movb
mov
mov
lahf
push
popa
jmp
repnz
insb
icebp
sbb
pop
lret
xchg
inc
hlt
andl
xchg
sahf
jp
repnz
int
es
xchg
sti
js
cmp
aam
mov
xchg
js
into
xor
shlb
ret
leave
fwait
sar
pop
scas
fmul
push
ja
lcall
paddsw
push
add
jge
cwtl
jmp
dec
sbbl
addr16
lods
push
cmp
test
lahf
sbb
push
sbb
and
scas
in
ljmp
mov
in
pop
xor
or
divl
lahf
data16
sahf
pop
hlt
shrl
rorl
outsl
mov
iret
sbb
loope
mov
mov
cld
xor
addr16
cmp
aas
push
add
cld
xor
push
cwtl
aam
mov
leave
sbb
rcl
push
in
sub
int3
mov
jno
subl
sbb
or
xchg
lret
jb
es
outsl
push
jp
dec
or
push
mov
mov
mov
nop
and
out
cmp
std
mov
in
shll
mov
outsl
cmp
call
and
jae
jmp
fs
jo,pt
mov
ret
push
sbb
pusha
enter
jmp
int
push
pushw
inc
inc
pusha
mov
jg
mov
adc
cmp
daa
stos
xchg
lods
jl
jl
leave
cld
push
int
xchg
lods
in
dec
mov
gs
mov
mov
pop
repz
fdiv
in
fsubrl
fldt
daa
in
lods
push
sbb
fbstp
cli
or
xchg
mov
mov
inc
jbe
outsl
and
jo
xor
adc
add
hlt
jns
jg
loopne
lret
jb
popf
jae
aad
adc
sbb
out
xor
das
cmp
popf
sub
mov
test
add
add
adc
push
inc
repz
inc
mov
xor
sub
icebp
iret
push
mov
push
bound
pop
mov
and
out
xchg
push
fisubrl
dec
clc
and
push
jp
insl
xor
adc
pop
dec
insb
shl
mov
mov
cmc
nop
fsubrp
xchg
adc
xor
jge
js
fsubrs
or
test
rorb
sti
pop
sbb
fsubrp
mov
js
into
xchg
aam
or
pop
out
xchg
fcomps
dec
nop
mov
push
adc
add
jmp
add
adc
sub
pop
lea
or
jb
inc
testl
cmp
test
mov
lods
in
cs
sub
lret
xchg
adc
mov
out
xor
test
out
push
mov
xchg
test
mov
mov
out
je
cld
lods
in
lret
cmc
mov
cmp
ret
in
jbe
sbb
int
imull
stc
adc
push
sbbl
push
dec
push
xor
movq
cmc
cltd
out
insb
pop
sub
pop
in
out
mov
xor
push
lret
aaa
push
fistl
mov
mov
push
dec
xor
xchg
rcrb
xchg
movl
cmpsb
mov
das
in
push
in
mov
ret
pop
mov
jo
pop
cmp
scas
nop
sub
lcall
andb
int
pusha
scas
dec
mulb
mov
jns
aam
push
cwtl
fsubrl
dec
clc
in
cmp
jp
imul
cmp
mov
add
add
es
or
bound
adc
rorl
inc
push
fs
push
xor
and
mov
push
cmp
jnp
addr16
and
addr16
xchg
out
addb
or
mov
inc
and
xor
add
and
cmp
mov
inc
mov
jge
mov
jmp
aas
pop
mov
lock
and
jp
mov
sbb
jge
jg
and
cmp
and
imul
push
mov
cli
lret
xchg
or
arpl
and
sub
add
or
cli
daa
jl
mov
sbb
sti
ja
sbb
clc
cld
mov
test
pop
jmp
mov
rep
stos
scas
ret
sub
outsb
nop
mov
or
in
adc
cmp
arpl
mov
inc
sbb
test
andl
mov
ss
addr16
lds
lea
cmp
scas
push
test
mov
pop
stos
cltd
push
jg
call
imul
mov
mov
mov
and
mov
pushf
push
andb
hlt
int3
add
pushf
aaa
cltd
mov
push
rcrb
push
pop
sub
ss
pop
test
mov
xlat
push
push
or
int
sub
xor
adc
outsl
inc
cmpsb
adc
push
xor
add
mov
leave
inc
gs
rcrb
sti
pop
inc
adc
arpl
lret
lods
fwait
push
cmc
mov
push
fmull
push
mov
mov
jno
push
addl
sar
aam
leave
cmp
imul
adc
xchg
insl
stos
cmp
pop
sbb
fs
inc
cmp
pop
addr16
lods
iret
ror
sarl
out
mov
push
out
inc
and
xor
ds
xchg
push
mov
pop
add
daa
jg
mov
jle
mov
pop
jbe
sahf
mov
cwtl
pop
adc
mov
and
cwtl
lock
mov
inc
dec
cld
cwtl
out
idivl
inc
outsl
pushf
xlat
daa
xchg
xor
test
cmovb
xchg
jb
and
loop
scas
sbb
xchg
in
into
add
mov
jne
add
and
xor
jbe
testb
mov
int3
pop
daa
cmp
jbe
in
push
jbe
push
cmpsb
jmp
cwtl
cltd
outsl
xchg
inc
lcall
jo
cs
lret
mov
out
or
xlat
jg
jne
xchg
jle
push
imul
mov
sbbb
mov
mov
inc
mov
mov
les
shlb
mov
pop
je
mov
scas
jmp
nop
mov
xchg
stos
hlt
xchg
jno
outsl
jbe
mov
cli
addl
or
sub
shlb
xchg
inc
ds
pop
xchg
xor
nop
jl
cmp
orl
pusha
in
scas
int
xchg
mov
out
jp
sti
mov
cmp
fdivs
bound
int
lahf
ret
and
lret
imul
push
iret
inc
in
mov
aad
xlat
inc
dec
das
loop
notl
mov
adc
mov
aaa
jl
mov
or
and
jae
mov
aaa
jns
imul
je
sub
in
ret
xchg
mov
adc
movsb
icebp
stc
sub
insl
add
shll
out
mov
mov
fsub
in
es
data16
sti
leave
dec
stc
dec
inc
scas
and
fisttpll
sub
repnz
addr16
mov
pop
into
mov
stos
jae
push
cltd
repnz
push
stc
sub
std
fmuls
xchg
cmp
jbe
push
xchg
rol
dec
scas
stos
and
cmp
call
das
and
rcll
mov
rcr
jge
icebp
cmp
das
push
add
adc
ret
lret
int3
pop
int
cmp
in
mov
rcrb
cmp
pop
push
sub
mov
movsl
mov
jb
mov
hlt
push
popf
enter
xchg
jnp
loop
jmp
fstpl
data16
lret
fisubrl
shlb
movsl
push
fmull
scas
fstpl
fisubl
std
sub
mov
test
push
out
lcall
fsubr
add
pop
xchg
into
rolb
scas
repnz
or
mov
hlt
das
packuswb
fidivrl
lock
gs
pop
push
mov
add
test
aam
or
roll
cmp
inc
std
gs
les
mov
stos
test
gs
mov
xlat
outsl
fs
inc
or
ret
repnz
inc
imul
push
leave
or
cmc
call
lcall
cmpsb
ds
stos
push
pop
mov
mov
aam
sub
call
or
icebp
inc
mov
sahf
push
cltd
mov
into
sti
fcmove
xor
mov
fidivs
int3
sbb
sub
call
in
outsl
sbb
mov
add
sub
sahf
lods
popf
pushf
shrb
and
cwtl
mov
mov
imul
cltd
mov
jbe
in
adc
jge
jmp
fwait
outsb
fildll
jl
pop
idiv
cmp
insb
aam
or
ret
mov
das
push
int3
in
cltd
popa
add
mov
push
movsl
mov
jbe
mov
shll
adc
fdivrs
movsb
xorl
repz
jne
data16
outsb
jp
add
test
icebp
mov
mov
cmpsl
loop
testb
testb
xlat
dec
pusha
add
mov
lret
push
jl
cli
inc
push
jmp
jb
out
es
xor
test
pop
jae
dec
pop
imul
or
stc
jmp
jns
sub
ret
xor
or
addr16
lods
jb
int
push
adc
sub
mov
and
xorl
fs
rcl
jae
or
sbb
imul
jl
xchg
cltd
divl
stos
ret
nop
inc
subb
cs
cmp
imulb
jns
push
or
enter
fucom
sbb
inc
push
push
sbb
loopne
push
sar
and
bound
inc
push
dec
mov
imul
mov
lds
cltd
xchg
fs
sahf
stc
and
das
dec
and
bound
push
sbb
frstor
jo
ss
dec
sbb
rorl
inc
xchg
int3
push
xchg
iret
iret
das
repnz
aaa
int3
mov
enter
gs
lods
jle
cmp
pop
or
or
aas
push
fnsave
shll
std
xchg
test
sbb
jae
jl
sub
aam
aaa
sbb
punpcklwd
mov
sbb
aam
dec
clc
and
dec
cs
and
rorl
int
inc
es
outsb
cwtl
movsl
gs
inc
or
std
mov
xchg
mov
mov
pop
hlt
adc
cmp
aam
inc
mov
iret
add
test
in
pushf
lods
pop
repnz
pop
inc
test
in
fdiv
xchg
jl
mov
mov
cs
mov
mov
ds
lret
fistpll
add
rol
xor
mov
inc
iret
mov
out
je
jb
sub
xor
push
imul
and
movsb
in
outsb
adc
push
inc
mov
add
out
mov
in
push
xor
cmp
in
pop
sbb
fs
jnp
popa
dec
sub
xor
push
cmp
xchg
cli
inc
les
adc
in
and
aad
adc
dec
sub
push
or
mov
imul
cld
es
mov
pop
aaa
loopne
mov
cmpsb
sarb
adc
fdivrs
pop
mov
xor
clc
lret
mov
ljmp
cwtl
lahf
test
inc
mov
sub
adc
add
out
fisttpll
fists
aaa
ss
push
cmpsb
mov
cmp
mov
movsb
andl
movsl
inc
xor
in
push
jp
fstl
push
stos
dec
mov
hlt
aas
push
sti
sub
xchg
push
xor
xchg
flds
pusha
test
sbb
xor
dec
and
inc
mov
loopne
or
int
jp
test
sbb
ljmp
xor
and
insb
sub
mov
push
inc
xchg
fistps
loop
mov
xor
aaa
mov
stc
mov
scas
cmp
shlb
mov
lcall
fs
insb
add
shrb
xchg
aas
or
out
cli
shr
aam
mov
push
jae
out
sub
inc
pop
jae
rcll
imul
fnstenv
imul
pusha
pop
dec
stc
in
mov
sbb
mov
lret
inc
jle
sub
push
arpl
push
xchg
int3
cmpl
jl
fptan
aad
mov
jge
leave
sbb
xchg
jg
sbb
jmp
push
mov
repnz
imul
xchg
gs
pop
mov
xchg
lods
rorb
mov
and
ret
xchg
popa
aam
pop
inc
mov
xchg
pop
xor
sarb
aas
xor
xrelease
pop
xor
arpl
xchg
cmc
leave
test
cmp
test
add
or
adc
mov
jecxz
add
inc
popf
mov
test
xor
mov
push
push
push
rolb
jmp
pop
dec
xchg
je
mov
roll
pop
push
sbb
sub
movsb
or
add
arpl
and
mov
out
out
sub
push
jp
scas
add
clc
imul
xchg
es
in
add
mov
mov
push
xor
pop
jns
aaa
shll
jnp
in
jnp
cmp
dec
add
mov
xor
push
int
dec
int
scas
sub
push
sbb
fisubl
push
fdivl
addb
test
sbb
out
rcll
loope
xchg
xor
outsb
shll
inc
push
xchg
cmpsl
mov
push
ficomps
js
dec
int
not
movsl
sub
jecxz
cmp
sbb
xchg
and
mov
push
aaa
lods
xchg
dec
inc
cmp
push
gs
rorb
loopne
add
jbe
push
rolb
popf
rorb
lods
mov
or
adc
cmp
clc
imul
in
and
enter
in
out
icebp
push
adc
lahf
add
das
in
stos
push
movsb
and
jl
outsl
mov
add
int
out
gs
jmp
mov
fcoms
sbb
mov
jle
mov
mov
push
stos
sbbb
fwait
mov
xchg
fcomps
mov
in
push
pop
pusha
or
shrl
cmp
ljmp
loope
hlt
outsl
inc
add
popf
adc
jg
pop
push
xchg
sub
aas
or
mov
das
add
xchg
stos
pop
or
mov
fstps
into
out
lods
adc
fs
and
jl
mulb
adc
in
loopne
jecxz
jle
hlt
dec
push
jle
adc
jmp
adc
movsl
imulb
inc
lods
faddl
sbb
mov
ss
bound
jb
and
sub
fbld
popf
stos
popa
test
fdivs
push
leave
sbbl
addr16
fs
subl
stc
and
cmp
repnz
ja
inc
jmp
movsb
in
mov
test
cmp
aam
or
mov
push
add
inc
push
mov
insl
dec
xor
adc
sbb
push
lret
frstor
cmp
movsl
cmpsb
cmp
aaa
loope
shr
ja
sub
int3
jl
leave
add
and
add
into
aam
mov
jmp
mov
sbb
mov
ljmp
inc
add
sub
inc
adc
mov
jae
ss
cmp
pop
divb
xchg
sub
sub
inc
and
lcall
add
aas
pop
aad
or
test
popf
jns
adc
shrl
pusha
mov
lahf
jns
pop
and
cli
dec
pushf
rcl
in
dec
pop
aad
scas
fstl
loop
mov
hlt
pop
sbb
out
inc
jno
cmp
imul
xlat
iret
cmpsl
in
cmp
nop
pop
xlat
sbb
jmp
popa
movsl
imul
andl
jo
xor
cmp
cmpsb
ds
cli
fbld
sbb
lea
test
and
test
lret
add
add
push
hlt
push
add
pop
popa
inc
stc
data16
xchg
mov
aad
sub
fstps
push
sub
jg
mov
and
sbb
sbb
cmpsb
inc
jge
fwait
pop
ljmp
aaa
xchg
xchg
mov
in
pop
xor
mov
xchg
pop
xor
xchg
or
xchg
sub
inc
repnz
mov
popl
mov
dec
mov
shl
add
dec
mov
cmp
xchg
adc
hlt
dec
negl
sbb
sbb
dec
xor
outsl
nop
lea
or
testb
mov
xlat
xor
in
fsubs
mov
jb
rcrb
fldt
jno
cmp
pop
cmp
push
out
xchg
lods
add
sbb
lea
push
rcll
hlt
mov
lret
and
sahf
sbb
call
jae
dec
int3
adc
and
cmpsb
fwait
mov
xchg
pop
mov
shrb
in
lods
test
push
xchg
loop
sub
mov
adc
scas
or
push
push
pop
sbb
push
inc
gs
movsb
fwait
mov
orl
sub
in
test
lods
bound
cmp
xor
cmp
adc
cld
jl
jp
outsl
sarb
pop
fwait
int3
lock
and
movsb
scas
stos
loop
push
imul
es
stos
clc
mov
mov
xchg
dec
and
mov
lea
loopne
pop
xor
enter
push
ret
xchg
jp
add
lds
test
sbb
or
call
mov
dec
dec
insl
sub
leave
fwait
sub
xchg
imul
cmp
mov
in
fmulp
negl
mov
jo
push
hlt
ljmp
outsl
mov
sub
push
stos
cmp
add
out
or
jle
popf
int
cmp
push
cwtl
scas
in
fs
dec
pop
arpl
gs
les
mov
xchg
xchg
jmp
shll
ffree
enter
ret
sub
pop
jbe
mov
bound
pusha
dec
inc
rcr
loop
jbe
inc
push
push
pop
add
outsb
in
cmpb
fistl
cld
pop
icebp
fidivrl
in
inc
dec
shlb
lahf
jmp
sahf
cmp
stos
sub
int3
ficompl
dec
insb
lret
xchg
pusha
imul
or
icebp
adc
jo
dec
insb
and
idiv
mov
mov
xchg
adcl
outsb
push
ljmp
cmp
push
inc
lds
mov
fldl
daa
or
cltd
and
jle
int
jbe
cmpsl
jne
inc
xchg
int
mov
cmp
adc
pop
je
sub
lcall
pop
sub
repnz
pop
xchg
pop
ds
mov
cmp
inc
jo
pop
pop
lret
or
jno,pn
mov
cmpl
aas
test
lahf
push
loope
test
pop
mov
sahf
and
inc
adc
iret
push
sbb
cwtl
data16
cltd
lahf
pushl
add
repnz
fldt
inc
jne
lea
sub
and
mov
xlat
lods
ret
jle
sub
inc
push
inc
js
ljmp
int3
addl
mov
mov
in
cs
rcrl
sarb
test
into
cmc
or
das
andb
jo
mov
aaa
xor
xlat
cmc
enter
sub
add
xlat
and
mov
in
push
arpl
leave
push
push
mov
mov
sbb
mov
and
adc
jo
fisttpll
cmpsl
jle
mov
dec
dec
repnz
push
int3
in
movsb
adc
scas
adc
push
cmp
mov
sub
push
sub
jne
into
fst
pop
or
ret
fs
insb
imul
xchg
mov
outsl
xorl
in
dec
cmpsl
es
jge
mov
sti
outsb
out
ret
addl
xchg
shl
push
or
iret
shlb
dec
lcall
xor
jmp
hlt
popa
imul
push
sahf
testl
jb
cmpsl
push
sbb
stos
out
add
nop
ljmp
jno
cs
fstps
xchg
dec
lods
ja
xor
movsb
mov
sbb
je
jne
lods
or
lcall
or
pop
xchg
arpl
rolb
mov
divl
pavgb
aad
test
movl
fwait
rolb
loope
shr
cmp
or
test
sub
inc
dec
fxch
dec
int3
fs
test
mov
movsb
ja
push
mov
or
cmp
aam
out
sbb
mov
fwait
out
inc
adc
sbb
sbb
xchg
rolb
enter
or
adc
hlt
mov
or
repz
mov
or
into
repz
stos
pop
sbb
es
add
xor
inc
and
faddp
dec
mov
fcomps
or
dec
cmp
daa
mov
jb
in
movsl
enter
sti
mov
scas
jo
dec
cmp
push
add
jnp
jge
or
cltd
pop
push
adc
lds
loopne
or
adc
push
ljmp
aas
jb
cmp
clc
mov
add
lea
mov
dec
pop
sti
jge
lods
ja
dec
mov
and
sub
adc
shll
and
lret
sub
lcall
push
aam
scas
mov
fldl
aad
jnp
mov
insb
inc
dec
lahf
pop
loop
or
cmp
cmpsl
push
or
stc
adc
sub
addr16
or
push
ss
xlat
divb
add
lcall
pop
dec
sub
cmp
mov
lds
aad
pop
push
insb
hlt
mov
test
cmp
pop
ja
inc
call
jl
movsb
sub
and
sbb
lahf
cld
sti
mov
andl
cli
push
xchg
sbb
or
push
adc
pusha
frstor
cmp
iret
arpl
fs
pop
and
imul
push
int3
aaa
sub
popf
jb
stos
cltd
xor
lret
mov
iret
jge
push
stc
shl
xor
sbb
sbb
dec
int3
cmp
int
out
mov
lods
inc
insb
cmc
data16
test
pop
mov
sub
sbb
push
hlt
add
add
iret
lea
or
mov
pop
mov
or
cltd
jnp
inc
movsb
xor
cmpsl
in
js
sbb
inc
repnz
sbb
test
loopne
and
push
out
ficompl
cli
xor
jg
out
mov
insl
mov
push
test
fcomps
cmp
cli
mov
movsb
clc
push
loopne
inc
dec
pusha
wbinvd
aaa
xchg
int3
pop
cmp
push
dec
adc
xor
faddl
in
sub
cmc
push
adc
xlat
mov
sbb
dec
mov
out
jo
push
cli
add
lret
inc
lds
lods
mov
lock
and
stc
out
mov
iret
shrl
lahf
pop
push
rolb
xor
lds
jne
cmc
sub
fmull
mov
sub
dec
fwait
scas
cmp
pop
push
inc
cmpsl
cmp
jmp
stc
sbb
sbb
ss
ja
fbld
pop
inc
ljmp
lcall
xor
and
mov
cmp
push
icebp
fcoml
les
inc
mulb
mov
cltd
jp
ja
rcl
in
mov
pop
pop
imul
lock
cmp
pop
outsl
push
aad
ret
lret
or
jg
mov
cmp
adc
push
test
xor
pop
adc
shll
add
mov
in
loope
xchg
loop
and
gs
mov
sbb
inc
int3
repz
dec
fdivrs
xor
mov
jl
popf
jae
or
ljmp
adcl
xchg
leave
mov
stos
lods
aaa
push
fcmovnb
mov
jne
pop
addr16
mov
cwtl
mov
lods
in
pop
dec
rcrl
adcb
and
mov
xchg
push
aad
loopne
popa
out
inc
int
imul
adc
pop
iret
rorl
jnp
fldcw
jp
je
jge
adc
ja
test
push
aas
ror
mov
mov
das
xor
sub
int
cmp
sti
mov
test
push
inc
mov
push
test
cli
fisubrs
cmp
mov
lret
mov
mov
mov
ret
push
jno
js
mov
push
cmpsl
mov
sahf
xchg
cmpsb
inc
stos
insl
in
add
cmp
inc
je
pop
push
pop
icebp
cmp
mov
mov
cmpsl
sub
xchg
xchg
js
out
sbb
std
inc
push
lods
call
lock
das
mov
push
das
lcallw
int
and
aam
or
pop
aaa
vsubsd
dec
jb
into
loop
push
add
icebp
xchg
dec
xor
sub
pop
xorl
xor
repnz
out
cld
fildl
sub
mov
stos
sub
lods
ds
dec
and
xchg
fs
movsb
in
add
sub
repz
pop
push
add
imul
jl
sbb
mov
jmp
pop
or
roll
pop
push
pop
jmp
cwtl
push
insb
inc
out
and
jb
or
cltd
loope
and
or
pop
xchg
push
add
xchg
jecxz
sarb
into
scas
leave
pushf
lock
push
loop
cs
std
add
inc
insb
mov
mov
test
pusha
sti
mov
ljmp
cld
pushf
push
scas
push
push
dec
loope
or
jne
rolb
shlb
mov
pop
sub
rcll
push
subl
into
jl
aad
cmp
jbe
cmovbe
enter
insl
mov
fcomi
pop
mov
xchg
je
je
add
fimull
jo
push
jbe
lock
sbb
adc
mov
xorl
sbb
sbb
sub
mov
jo
mov
sub
int
push
push
test
hlt
jns,pn
sub
test
xchg
xchg
jb
sti
inc
sub
icebp
movsl
clc
ret
push
sub
in
cwtl
xlat
int
jge
shll
push
pop
lcall
sahf
inc
push
or
mov
mov
subb
fildl
pop
jecxz
icebp
in
inc
popa
sub
lret
fldcw
sub
jns
sbb
cmp
push
inc
aam
loope
xor
movsb
mov
jae
lods
lea
loop
pop
movl
ds
dec
and
xchg
jp
test
ret
imul
gs
jge
cmp
xchg
mov
cmp
push
xchg
or
lcall
fidivs
lret
push
pop
out
fwait
gs
mov
lcall
sbb
les
rcl
jle
xor
stos
lret
cmp
cmp
cmp
push
pop
fldcw
loopne
jmp
jmp
add
lock
push
test
mov
mov
sbb
pusha
adc
ljmp
sarb
pop
inc
jnp
push
xor
fidivs
dec
mov
loope
in
hlt
fmul
and
fldl
aam
ja
pop
cmpl
aaa
or
xor
lcall
repz
mul
lcall
lds
fiadds
insl
adc
mov
adc
push
inc
arpl
jmp
cmpsb
ljmp
movsl
fsubrl
cltd
xor
jle
push
pop
test
cmp
jp
inc
dec
clc
lds
and
push
mov
fsubrl
sub
scas
pop
test
jb
cmp
sbb
push
pop
lea
mov
push
cmp
mov
and
add
cld
add
push
adc
int3
dec
lret
push
pop
stc
test
cld
jmp
nop
mov
loope
adc
dec
push
stos
sub
int
mov
mov
lret
mov
xlat
ficomps
and
adc
lret
jo
jne
and
xlat
roll
test
add
mov
jbe
mov
hlt
sub
or
lods
mov
js
lret
sub
bound
sahf
sbb
xor
subb
shrl
sub
repnz
or
mov
imul
les
out
jl
adc
lahf
stos
jmp
loopne
and
scas
lcall
pusha
jle
mov
mov
in
jl
jne
loope
mov
or
mov
push
in
inc
jle
pop
and
cltd
ljmp
das
sahf
mov
xor
inc
jl
repz
jnp
mov
xchg
aas
xor
jp
pop
pop
xchg
cmpsl
bound
aas
adc
pop
mov
sub
and
push
add
cmc
cltd
xchg
inc
fsubr
adc
xor
jne
fdivl
iret
dec
jo
pusha
pop
push
aas
xchg
mov
jge
loope
mov
pop
dec
adc
mov
sub
xor
dec
rolb
push
fistpl
test
gs
mov
js
loope
out
xchg
test
gs
aaa
and
mov
xchg
shlb
pop
adc
aaa
or
in
stc
sbb
and
pop
aaa
jl
adc
adc
dec
adc
inc
mov
jge
and
fcomps
push
cmpl
and
gs
xchg
inc
dec
clc
sub
sbb
movsb
int3
xchg
push
sarb
inc
cmp
pop
xlat
sub
xor
add
mov
ret
pop
insb
lcall
ds
pop
rol
xor
cld
aam
inc
sbb
sbb
or
iret
xchg
lcall
pop
and
fs
aaa
iret
shll
dec
mov
or
xor
lret
loop
insb
xor
lock
popf
push
ds
cmp
scas
push
stc
testl
sbb
add
cli
xchg
mov
pop
jg
fdivrl
or
inc
sub
mov
out
loop
sub
inc
cltd
dec
ret
sbb
jg
pop
jne
inc
add
icebp
mov
sbb
sbb
pop
lds
movsb
dec
out
je
lahf
or
dec
or
xchg
ds
and
cmc
push
aaa
push
push
mov
std
sub
jbe
insb
xor
pop
mov
add
ss
jbe
je
ret
cmp
fldt
movl
jbe
les
aam
mov
les
xor
call
mov
repz
imul
and
inc
lret
inc
mov
cmp
cs
xor
sub
pop
inc
aaa
pushl
ret
jae
mov
cmp
pop
int3
adc
pop
cmp
push
cmpsb
xchg
mov
mov
stos
movsb
sbb
mov
dec
push
outsb
pop
dec
fidivrs
jge
pop
xchg
jecxz
push
mov
icebp
clc
jp
adc
outsl
mov
pop
push
hlt
lds
adc
aad
into
inc
incl
fildl
inc
mov
xchg
rorb
push
add
xor
mov
ret
in
dec
imul
fimuls
arpl
xlat
xchg
sahf
popa
dec
arpl
inc
sub
fsubrl
cwtl
add
leave
inc
rcrl
push
pusha
push
mov
inc
mov
movsl
data16
inc
mov
sub
cmp
sbb
or
cmpsl
jno
pop
xchg
shl
addr16
cld
int
push
adc
rorl
loop
xor
jbe
mov
outsl
test
divl
and
sub
dec
xchg
inc
xchg
push
stc
into
jno
outsb
inc
xchg
or
lret
add
enter
loopne
loopne
mov
repz
das
mov
lret
add
pushf
mov
std
add
out
jno
or
stos
movsl
inc
in
adc
in
aad
mov
or
inc
mov
mov
xor
sub
xchg
test
cli
mov
test
sbb
lcall
test
xchg
sarl
push
fs
shl
mov
std
xchg
int3
push
sbb
js
clc
push
cld
nop
sbb
fdivrs
or
dec
lock
or
std
xlat
add
or
pop
repz
ss
mov
lea
mov
outsb
mov
and
icebp
pop
dec
and
push
mov
hlt
dec
insb
dec
sbb
xchg
mul
xor
jb
jne
mov
mov
adc
ljmp
add
add
nop
jmp
clc
push
adc
inc
pop
hlt
int3
bound
mov
insl
test
les
in
movsb
jge
push
leave
fidivrs
inc
mov
mov
adc
sbb
mov
push
push
mov
and
adc
aas
jp
fwait
clc
inc
sub
cmp
movb
xchg
das
mov
pop
push
push
jb
xor
loopne
aaa
cmp
int
sub
rclb
mov
jbe
sarl
jno
int3
sbb
sbb
push
sbb
jge
mov
or
adc
xchg
pop
lods
mov
inc
dec
and
cmp
aad
sub
daa
shrb
jnp
testb
xor
insl
stc
inc
fwait
push
ret
add
inc
pop
mov
inc
mov
sbb
pop
or
scas
or
sbb
mov
iret
mov
xlat
mov
add
cmp
xor
mov
pop
pop
sbb
out
cmp
mov
ret
filds
shr
adc
cmp
sbb
mov
ret
xor
mov
ret
lods
or
outsb
repnz
daa
jmp
leave
rcrb
outsb
sbb
xor
mov
out
sarb
repz
cmp
sarb
lcall
and
outsb
sub
sbb
pop
les
and
rcrl
test
iret
or
inc
icebp
stos
fcoml
inc
aad
aad
nop
bound
mov
mov
push
out
pop
xchg
outsb
xor
aas
or
sbb
popa
xchg
mov
xchg
gs
dec
push
push
mov
test
js
sbb
lods
jmp
xchg
xchg
inc
and
and
jl
daa
insl
pusha
leave
mov
mov
cmp
leave
jg
out
xchg
mov
dec
popf
dec
fidivs
jb
mov
fldl
jge
push
pop
cltd
add
scas
sahf
xchg
mov
cmp
sub
jl
js
hlt
mov
push
inc
inc
daa
jo
mov
add
jbe
pop
sysenter
loop
cmp
push
je
mov
add
mov
adc
cld
mov
out
jno
gs
xor
pop
add
ret
mov
add
out
xchg
nop
inc
in
enter
adc
xchg
fisttpl
dec
xlat
popf
or
int3
adc
sub
or
rol
cmp
mov
shll
cmp
and
into
mov
mov
adc
push
mov
pusha
mov
cmp
mov
ret
popf
lea
ficoms
dec
flds
push
scas
adc
dec
cmp
sub
cmc
scas
add
inc
leave
inc
clc
scas
pop
shr
lcall
mov
nop
lods
test
stc
mov
or
push
jns
loope
and
lea
mov
pusha
jns
xor
out
dec
mov
adc
dec
lea
roll
sbb
jl
je
and
clc
out
nop
mov
nop
imul
cmpsb
jp
cmp
push
ja
and
pop
inc
pop
test
aas
fwait
pop
dec
dec
arpl
push
adc
insb
xchg
pop
sbb
xchg
dec
iret
add
lock
loopne
mov
xchg
mov
movsl
lds
inc
repz
xor
shld
jno
insb
fmuls
push
mov
ljmp
aad
dec
stos
leave
nop
inc
push
mov
out
mov
int3
or
into
or
clc
xor
push
xor
ljmp
mov
cmp
fldl
jecxz
dec
outsl
mov
xor
xchg
outsb
mov
jo
or
ret
cwtl
lds
mov
stos
and
mov
jno
nop
pop
pop
cmp
in
dec
movsb
retw
lcall
dec
mov
pop
or
dec
test
dec
mov
insb
pop
and
es
xchg
push
push
stc
sub
sbb
shlb
movsb
addr16
push
xlat
loopne
add
lea
iret
cli
adc
hlt
ret
adc
iret
test
xlat
faddl
outsl
jmp
cmpb
jp
sub
xchg
xchg
lods
test
cmp
ficomps
outsl
xor
je
push
notb
daa
sub
stos
push
xor
xchg
call
ljmp
cmc
leave
roll
xor
mov
insb
in
sub
dec
inc
dec
insl
mov
out
sbb
xchg
lret
or
push
dec
mov
xor
fwait
mov
arpl
aaa
mov
mov
int3
inc
dec
xchg
stos
push
repz
fscale
int
mov
adc
cmp
pop
insb
jnp
sub
jo
xor
mov
fidivrs
out
mov
inc
dec
gs
in
stc
iret
outsl
fsts
pushf
jg
adc
mov
nop
repnz
add
push
aam
adc
or
shlb
cmp
cmp
mov
sarb
mov
cli
xchg
cmpsb
test
cs
cld
dec
or
add
aaa
addb
xchg
shll
in
cmp
mov
xchg
shll
clc
loop
popa
iret
fucomip
xor
mov
sbbb
out
sarb
aad
out
sub
push
in
jb
or
dec
scas
hlt
xchg
sbb
xlat
leave
imul
dec
sbb
aam
hlt
js
lods
loopne
lcall
in
pop
mov
and
popf
aaa
pop
in
into
pop
es
mov
mov
fsubrs
jp
mov
iret
loop
fwait
cmp
scas
scas
mov
cmp
test
scas
pop
loope
in
decb
push
jbe
mov
enter
push
andb
xor
jno
int
in
and
shrl
test
jno
call
cmp
popw
cltd
lret
mov
dec
int
push
icebp
cmp
add
clc
jo
out
or
rcl
fdivs
sbb
icebp
cmp
jl
aas
pop
mov
and
xor
lahf
add
jbe
push
aad
mov
push
push
stos
fwait
xor
mov
sti
add
dec
cmpsb
jle
rol
mov
jg
fbld
std
adc
jle
cld
jmp
or
adcl
dec
imull
and
out
mov
icebp
xchg
sbb
leave
popa
mov
ljmp
repz
fsubl
imul
push
imul
incb
jns
mov
out
xchg
aad
inc
in
dec
pop
lea
leave
enter
iret
ds
lods
sbb
sbb
xor
cmpsb
pop
int3
inc
sbb
inc
or
mov
cmp
adc
push
sahf
lret
in
pusha
and
int3
lea
adc
mov
jmp
lret
in
xor
fucomi
lods
xor
push
sub
mov
inc
sbb
jecxz
in
add
in
xor
push
fisttps
cmpsl
mov
enter
jecxz
sbb
arpl
sub
mov
shlb
fwait
gs
mov
jne
xor
or
jecxz
sbb
mov
popa
jbe
cmpsb
lock
cmp
loope
inc
call
inc
xlat
pop
push
mov
inc
adc
cld
inc
push
dec
pop
cmpsl
test
push
lahf
jo
inc
mov
roll
xor
add
pop
arpl
mov
and
cmpsl
xchg
loopne
sahf
cmpl
inc
add
incl
push
testl
or
xchg
push
mov
out
call
leave
adc
repnz
jp
movsl
jno
shrb
pop
nop
xor
pop
lcall
out
sbb
push
inc
dec
int3
mov
das
dec
pusha
fisubrs
je
pop
mulb
lahf
les
out
stc
jae
jae
imulb
xchg
bound
mov
imul
mov
lea
es
jnp
imul
fistpl
into
test
xchg
jp
sub
sub
iret
add
inc
shll
insl
shll
dec
cmc
repnz
movsl
mov
inc
gs
outsb
inc
std
adc
pandn
popf
stos
xlat
leave
add
roll
xchg
mov
xor
ror
fcoml
pop
je
mov
scas
iret
lret
ja
xchg
jmp
je
ret
roll
add
dec
jmp
or
bound
cmc
rorl
ret
lods
pop
sub
xor
push
jp
testl
jmp
xchg
add
pop
cmc
data16
push
xor
inc
mov
mov
les
xlat
xor
outsl
ffree
fdivs
jbe
push
aad
jecxz
stos
dec
hlt
sahf
push
test
add
jns
cmpsl
loope
hlt
popf
call
fsts
movq
and
inc
call
scas
adc
into
mov
mov
ja
and
push
scas
sbb
mov
sbb
cwtl
das
xor
lret
dec
cmpsb
jmp
xlat
inc
shll
add
outsb
je
scas
movsl
mov
jmp
pop
cmp
shrb
add
cs
adc
imul
call
mov
jle
test
add
push
xchg
icebp
in
lods
pop
popf
pop
mov
jg
lea
mov
in
pushl
sub
adc
out
inc
xchg
scas
dec
mov
lret
sub
ja
push
scas
xchg
dec
aaa
pop
lcall
sti
out
push
or
dec
es
dec
imull
mov
shl
shl
dec
fbld
sbb
out
cmp
ret
sbbl
push
inc
jecxz
movzwl
sahf
mov
push
push
xchg
add
testb
adc
cmp
mov
enter
push
sub
adc
sbb
sub
mov
fldenv
ja
push
and
mov
call
pushw
test
clc
or
dec
mov
inc
pop
js
dec
out
shll
scas
xorb
pop
dec
icebp
mov
xor
mov
and
jne
sbb
cmpb
cmp
sub
xchg
lret
jge
xor
int3
sbb
cli
sub
mov
in
outsl
xchg
fstp
lret
in
cs
pop
dec
pusha
aad
gs
jo
xchg
dec
add
sub
loop
mov
int3
push
mov
adcb
push
xchg
mov
sti
imul
xor
or
pop
xlat
xor
flds
sbbb
sbb
out
movsl
cmpsl
dec
push
sti
into
sub
cli
jo
inc
int3
xchg
in
out
out
cmpsl
add
add
xchg
add
xor
outsb
jge
mov
push
push
cmp
cmp
shll
jo
sahf
push
clc
jle
repz
filds
movsl
fnstenv
sti
mov
jnp
pusha
fwait
pop
jns
cld
jecxz
hlt
or
push
or
ljmp
or
cmp
adc
pop
jecxz
rcrl
cmp
aaa
popa
cs
dec
call
seta
and
lock
rclb
dec
push
jno
hlt
push
cld
loope
jo
jp
ss
jno
mov
fcoml
data16
inc
add
mov
cwtl
out
mov
xlat
pop
dec
fcmovbe
xchg
aaa
addr16
mov
sub
call
mov
lea
fsts
imul
inc
and
shrb
jne
cmc
js
or
ret
push
inc
push
insl
mov
outsl
movsb
es
clc
mov
jmp
xchg
xchg
test
hlt
xchg
das
sbb
cmp
fucomp
sub
sub
dec
sbb
lock
mov
adc
pop
je
clc
and
cmp
add
push
xchg
gs
or
xchg
jle
cmc
daa
cmp
popa
jle
lds
int
loopne
jge
in
rcrb
in
mov
push
and
dec
test
mov
aam
jmp
daa
hlt
push
cmp
icebp
inc
mov
mov
xchg
cmc
cmp
aaa
inc
insb
push
pop
adc
inc
fcomps
pop
fcmovb
jl
ds
rol
mov
mov
dec
test
sbb
pusha
fs
xchg
xor
inc
or
push
mov
push
mov
ret
test
int
sub
shll
adc
xor
xor
dec
ss
rcrl
sub
rcll
test
fldenv
or
das
insb
adcb
fnstcw
inc
or
xchg
mov
cli
mov
mov
add
repnz
jle
pop
xor
cmp
movsl
mov
add
push
fcompl
fistps
xorb
sarl
rclb
jo
fs
sbb
and
jnp
ss
jecxz
sub
push
sub
movsl
mov
xchg
jg
aaa
inc
push
nop
xchg
mov
jle
in
pop
push
sub
adc
and
inc
xor
test
or
test
jno
push
std
add
adc
cld
xorl
imul
push
das
packssdw
jns
inc
lods
sub
xchg
pop
push
push
shlb
leave
xchg
inc
js
ss
jno
cli
push
xor
imul
dec
cltd
and
and
cmp
cmc
cmp
inc
sub
jno
sub
mov
xchg
cmp
stos
push
mov
cmpsl
xchg
pop
or
xchg
cmp
cwtl
push
std
xchg
ret
aam
xchg
pop
ficompl
add
push
inc
loopne
xchg
push
push
or
mov
addr16
andl
and
push
imul
sbbl
xor
mov
divb
sti
inc
repz
scas
imul
call
sbb
outsb
stc
dec
dec
jae
mov
mov
xor
test
adc
imul
sahf
jmp
mov
cmc
add
sub
insb
inc
lods
sbb
mov
inc
push
int
shl
stos
add
imul
cli
out
hlt
jbe
dec
js
pop
out
loop
inc
out
mov
inc
lret
adc
add
lods
negl
loope
or
push
sub
push
jns
loopne
das
mov
ffreep
fists
outsl
mov
ja
and
jl
cmp
push
ljmp
shll
in
mov
dec
jg
sub
mov
xchg
lds
pusha
popf
es
lds
aam
mov
test
pop
adc
rcl
rolb
sbb
mov
inc
jl
clc
out
xorb
xor
add
insl
pop
jmp
mov
arpl
pop
sub
push
mov
jo
add
aam
dec
mov
addl
popa
mov
push
pusha
out
ret
push
sub
les
testl
addl
and
sbbl
mov
vpunpckhbw
xor
dec
xchg
add
mov
les
ror
leave
xor
sarb
ss
arpl
xor
das
in
push
inc
jg
and
fimull
ret
xor
fnstcw
adc
mov
mov
lea
ficoms
jns
lock
mov
push
cli
xorb
mov
mov
jl
dec
add
xchg
cli
cltd
dec
add
pop
sub
shll
jle
adc
fidivrs
cmpsl
cmpsb
dec
sub
push
cmp
fwait
aas
xchg
lods
push
lods
fisubs
neg
xor
xchg
jl
stc
sbb
adc
mov
and
lods
inc
mov
mov
push
cmpsb
sbb
push
cwtl
jge
imul
sbb
xor
aad
jne
mov
or
daa
ds
mov
sub
push
fnsave
mov
subb
lret
fsubrl
stos
sub
mov
ret
insb
xchg
ret
negb
xor
sub
cmp
mov
and
jle
dec
lcall
jecxz
arpl
mov
mov
dec
pushf
adc
push
mov
outsl
lret
popl
push
push
xor
outsb
insb
insb
add
dec
push
lahf
inc
xor
mov
fcomi
jmp
daa
lcall
xor
inc
and
xchg
add
aad
xor
in
lret
lock
arpl
scas
loope
mov
int
sbbl
out
stos
dec
xor
xchg
in
cwtl
mov
add
out
mov
adc
adc
ds
or
or
repnz
aad
inc
iret
dec
push
jnp
pop
cmp
adc
mov
fdivs
js
les
pop
daa
and
insb
aad
push
popf
in
insl
sti
xor
in
cli
test
jbe
aam
dec
cld
xor
dec
ret
jecxz
shll
fistl
enter
jne,pn
push
cmpsb
dec
iret
ret
out
jmp
out
out
dec
aas
test
cmp
sbb
cli
movsb
xchg
add
jnp
adc
cmp
outsb
lret
movsb
sub
mov
mov
bound
xchg
or
push
pop
icebp
xchg
add
inc
out
imul
ja
repz
inc
xlat
mov
sub
les
mov
inc
mov
mov
ret
mov
hlt
push
xchg
movl
xchg
mov
fiaddl
dec
notb
sbb
adc
repnz
inc
mov
lock
call
mov
addb
outsb
jmp
dec
jns
xchg
or
data16
ret
cmp
inc
inc
add
in
test
xchg
cmp
push
ljmp
jns
cs
xlat
adc
push
fwait
aad
push
fdivp
lea
xor
jl
adcl
loopne
cmp
push
imul
lods
stc
sbb
xchg
clc
popa
pop
sub
push
int3
jne
gs
hlt
mov
jno
rorl
cld
pop
in
shrl
test
mul
icebp
in
push
add
mov
jecxz
repz
xor
mov
ret
clc
adc
daa
jle
push
add
imul
out
aas
mov
dec
test
idivl
mul
aas
js
push
mov
in
sub
pushf
movsl
mov
imul
testb
xor
adc
push
lcall
mov
mov
insb
xor
imul
mov
sti
push
divb
rep
or
xchg
jp
mov
fnstcw
mov
gs
lods
pop
push
xchg
dec
adc
cmpsb
sbb
xchg
pop
cmp
nop
loop
cli
icebp
mov
xchg
aam
ss
out
out
or
lret
in
aam
push
add
out
or
sub
call
rcrl
insl
xlat
jle
popa
xlat
adc
sub
dec
enter
and
xlat
in
mul
ficomps
xlat
loopne
dec
mov
je
push
jmp
adc
sbb
mov
xchg
pop
lret
out
jb
lret
cmp
call
add
mov
xlat
sbb
jb
jge
mov
xchg
adcl
jmp
mov
mov
imul
jnp
int3
es
fldl
cwtl
adc
js
aam
std
setne
ficoms
mov
inc
xchg
mov
dec
sar
je
scas
gs
mov
cmpsl
test
xchg
inc
fdivp
fisubs
cmp
or
mov
fistl
shll
xchg
in
add
mov
pop
adc
push
popa
lea
add
cltd
stc
movsb
inc
cwtl
dec
daa
mov
mov
mov
cwtl
ljmp
addb
inc
pop
test
jne
jmp
sbb
or
imul
sub
dec
outsb
inc
invd
std
and
mov
addr16
push
mov
xor
jnp
lock
xor
iret
cmp
or
jae
pop
pop
fsubrs
jp
pop
mov
cmp
test
in
mov
das
jl
cmp
inc
fisubrs
aam
cmp
push
test
push
enter
xlat
push
dec
sub
xchg
jmp
sarb
orl
in
add
mov
ljmp
in
std
add
push
addr16
je
mov
mov
mov
sub
xchg
mov
aam
cmpsl
nop
dec
andb
or
push
push
xchg
pop
stc
in
push
sbb
add
xor
cmpsb
mov
popf
cmp
sbb
push
cmc
shlb
cmp
lret
mov
jle
mov
leave
pop
mov
mov
jp
fs
fucompp
cmp
sub
lods
ret
in
pop
dec
pop
rclb
pop
mov
bound
mov
sahf
and
pop
negb
sub
in
std
fcoms
ret
popf
xlat
pop
push
mov
xchg
mov
sbb
push
jp
push
mov
and
lods
cmp
fwait
adc
or
jge
popa
lods
pop
xorl
sub
xor
and
aam
aaa
aaa
xchg
imul
movsb
add
mov
int
cmpsb
pop
fs
or
int3
repnz
pop
inc
cmp
mov
mov
pushf
inc
lret
push
push
cmpxchg
push
xchg
mov
loopne
pushw
int3
sub
bound
rolb
lret
rclb
imul
orb
sti
jl
divb
jle
mov
push
jns
loope,pt
mov
in
mov
xchg
mov
fistl
mov
in
inc
and
popa
outsb
dec
pusha
fimull
jge
cltd
or
data16
adc
xchg
sub
aam
sbb
pop
mov
inc
daa
or
aas
jl
rcl
pusha
mov
pop
sar
inc
push
mov
jne
add
or
mov
mov
push
cmp
and
enter
repz
push
inc
add
sbb
or
ljmp
pushf
xor
dec
kandnb
lret
xor
cmp
jle
pxor
jecxz
inc
mov
sub
xor
lahf
jns
idivb
shrl
sbb
pop
fildl
test
or
sub
jb
mov
jmp
bound
addr16
ja
xor
push
insl
and
out
jbe
iret
out
or
imul
je
mov
xchg
fstpl
mov
mov
hlt
pop
cmpsb
orb
xor
mov
xchg
jp
dec
daa
push
je
test
push
push
xchg
push
xor
mov
jo
lret
xchg
cmp
cli
or
sbb
popa
adc
std
jecxz
push
mov
jno
rorl
js
cld
inc
cmp
xor
mov
xchg
movsb
jne
mov
dec
cmp
loope
ds
inc
in
js
adc
pushf
jno
sub
pop
idivb
sbb
idivl
lret
loopne
sub
jmp
stos
repz
add
cwtl
and
pop
fs
lock
or
mov
cmc
jg
or
ljmp
fwait
adc
inc
jbe
insb
adc
scas
out
pop
xchg
and
loopne
movsb
dec
out
mov
inc
mov
sub
cli
int
or
xor
movsl
icebp
test
pop
push
dec
cli
insl
jle
hlt
mov
push
push
and
ss
jae
pushf
mov
les
mov
and
hlt
or
cmp
jne
pop
add
sarl
and
mov
cmp
push
mov
repz
or
insb
je
mov
adc
movsb
test
dec
mov
inc
mov
cmp
int3
xor
dec
sub
mov
test
aad
push
mov
jg
outsb
xchg
mov
or
inc
sahf
mov
jge
sbbb
movswl
scas
or
pop
shlb
fisubrs
jge
aas
cld
jno
cmp
rol
out
aam
mov
inc
sbb
outsb
adc
mov
mov
mov
mov
dec
pop
cmpsb
and
cmpsb
lret
xchg
sub
xor
inc
push
mov
stos
dec
loope
movb
fisubrs
add
mov
mov
push
mov
enter
inc
ja
call
leave
or
lret
xor
mov
or
arpl
lods
getsec
mov
jl
sub
adc
call
xor
enter
add
mov
les
mov
xor
push
pop
dec
in
mov
add
js
popa
je
sarb
cmc
jecxz
into
rorb
push
inc
pop
sarb
mov
dec
pop
stos
mov
jmp
push
mov
sbb
fnstenv
jo
or
scas
jmp
sbb
mov
vmread
xor
xor
jp
xor
jb
add
pop
mov
mov
mov
je
inc
repz
dec
daa
mov
add
call
mov
xor
into
hlt
push
pop
jmp
pushf
insb
xchg
fwait
test
aam
fisubrl
dec
mov
cmp
pusha
movsb
xchg
fcomi
in
cmpsl
dec
pusha
loopne
dec
mov
pop
repnz
xchg
xchg
jae
cmp
sarb
test
gs
adc
inc
inc
and
sub
mov
sub
and
les
mov
pop
arpl
daa
cmp
pop
push
fwait
imul
enter
in
sbb
test
outsb
divb
lods
push
rorb
pslld
clc
cmc
pop
xor
mov
sti
imul
repnz
jecxz
and
add
and
jge
out
mov
fldenv
jb,pn
popf
cmp
nop
ffree
or
insl
adc
ja
push
cmpsl
je
mov
mov
xchg
push
fnstenv
movsl
stc
pop
fildl
inc
imul
out
xor
cmovge
pop
add
fcmovu
movsb
push
or
js
jbe
lcall
xor
repnz
sbb
test
mov
mov
mov
test
xchg
adcb
and
or
push
lds
iret
push
sbb
outsb
std
cwtl
or
iret
popa
ret
xchg
lea
adc
int3
fcom
inc
je
scas
dec
push
roll
jnp
int
lods
icebp
fldcw
or
insl
pop
fld
add
das
cs
cwtl
add
in
cmpsb
ret
repz
iret
cmc
push
mov
test
ljmp
je
insb
adc
sub
adc
pop
cmp
out
cmpb
dec
cwtl
mov
int3
dec
cmpsb
std
pop
jl
hlt
mov
and
iret
stc
stos
mov
xchg
xor
es
js
aas
enter
sti
push
imulb
xchg
mov
add
mov
push
popf
fadds
add
fisubl
or
mov
mov
incb
aam
rclb
mov
cmp
scas
jb
sub
add
pusha
xchg
inc
aas
pusha
mov
arpl
negb
lods
sbb
ds
jne
sqrtps
ja
mov
push
enter
add
mov
jl
push
jne
pop
adc
jb
push
add
scas
test
ret
imul
jb
sub
jecxz
mov
cmp
popf
shll
push
inc
mov
cmp
push
fmulp
aad
jl
add
fsin
adc
dec
pop
inc
shr
aas
xchg
lret
jae
jp
pop
inc
int
dec
lcall
mov
popf
fisubrs
and
test
into
jbe
inc
mov
or
stc
adc
ret
lods
pop
sarb
mov
lahf
add
movsb
cltd
mov
adc
pop
push
jno
repnz
cwtl
ljmp
sub
adc
mov
hlt
loop
add
jnp
fists
imul
xchg
mov
add
sub
xlat
jne
fiaddl
mov
xchg
imul
sbb
jle
jl
cmc
jno
stos
add
out
mov
mov
inc
sub
inc
cmpsl
outsb
mov
jl,pt
push
jg
mov
mov
das
cmp
xlat
push
or
sqrtps
sti
popf
aas
mov
sbb
mov
mov
jg
icebp
dec
sub
inc
jb
ljmp
mov
or
pop
mov
adc
arpl
addr16
lds
int
push
pop
ljmp
aaa
shr
out
mov
mov
adc
insb
mov
pop
lods
mov
jmp
les
mov
sarl
in
sub
xchg
out
jns
lret
scas
mov
dec
push
negb
aas
xchg
mov
or
repnz
cwtl
pop
insb
cld
pop
jecxz
pop
cmp
or
scas
es
in
sub
pop
popa
dec
xchg
rolb
pop
jno
loop
dec
xchg
js
cmc
int3
cs
adc
pushf
push
out
jno
stos
adc
push
adc
or
inc
cmpsb
cmp
imul
cmpsb
mov
fstpl
addr16
sbb
inc
pushf
jg
push
mov
pop
pop
xorl
pop
lahf
xchg
js
daa
mov
xchg
pop
adc
rcrl
std
xor
pop
xor
in
cmp
movsb
mov
data16
sqrtps
sbb
xchg
jecxz
adc
and
mov
sar
sarb
inc
jbe
mov
ret
mov
adc
je
stos
or
lock
mov
pop
adc
xchg
test
push
out
jno
es
jecxz
stos
insb
jo
mov
cli
fs
test
xchg
test
xchg
mov
cmp
adc
scas
inc
jbe
fidivl
add
push
cmc
mov
lahf
jno
mov
sarb
je
test
fsubrl
xor
cwtl
sbb
adc
jl
in
pop
int
dec
hlt
xor
out
fcomip
pop
adc
pop
mov
and
add
dec
inc
lods
in
clc
sbb
jg
test
enter
imul
rcl
test
adc
fidivl
aas
sub
jnp
xor
repz
into
divl
aam
xor
popa
or
sbb
pop
inc
xor
cld
stos
xchg
addr16
dec
mov
jle
jo
out
jb
xor
jns
ds
pop
lock
fnstcw
xlat
cmc
mov
lds
pop
mov
pop
or
pop
sub
lods
xchg
or
and
leave
add
addr16
mov
pop
sub
lds
adcb
loop
jmp
jb
lea
push
and
or
ss
into
mov
jnp
stos
sub
mov
lret
inc
loop
cltd
inc
push
outsb
movsb
and
add
cmp
in
js
adc
lock
push
inc
ret
jb
and
mov
pushf
sub
inc
adc
add
add
nop
xchg
gs
xlat
pop
mov
pushf
or
adc
arpl
or
outsl
scas
cmp
mov
xchg
ja
adc
fsub
push
mov
ja
pop
int
aaa
cmp
adc
aad
add
and
xchg
cli
lea
mov
rcrl
xchg
cwtl
push
jge
fsubs
test
cmp
in
loope
mov
nopl
sub
into
pop
aad
stos
call
mov
pop
popf
idivb
out
clc
pop
pop
push
lret
rcl
pop
mov
mov
rcr
mov
out
xchg
leave
scas
and
push
rorb
xchg
flds
adc
pop
loope
popa
movsb
je
rolb
push
xchg
enter
mov
loop
rol
lods
mov
mov
add
jge
xor
cli
adc
xor
dec
cmc
mov
shlb
decl
add
rorb
std
das
xchg
jb
jbe
aad
adc
dec
jo
lahf
sbb
lds
mov
mov
jg
daa
cli
bound
jno
dec
push
cmc
daa
sub
push
ds
sub
fs
cmp
das
nop
sbb
movsl
cmpsl
sbb
mov
cld
cmp
mov
mov
js
lods
std
fisttpll
iret
push
mov
lidtl
jecxz
cmp
mov
stos
xchg
outsl
testb
pop
shll
mov
dec
aam
mov
adc
insl
les
add
imul
seto
push
jecxz
lea
mov
shrl
inc
adc
inc
xchg
fs
dec
arpl
cmp
fdivrs
sbb
test
fisubrs
test
push
insl
adc
subl
lahf
dec
pop
enter
int
insl
mov
sbb
jno
data16
aad
cmc
and
cwtl
dec
xchg
insb
xchg
inc
jle
pop
jge
sub
pusha
sub
cmpl
sub
mov
pop
mov
xchg
fimuls
aaa
icebp
inc
jge
inc
jecxz
lea
and
aam
stc
xchg
add
stos
mov
cmp
pop
sbbl
mov
iret
icebp
pop
mov
adc
in
pop
addb
paddusb
cmpsb
cli
sbb
jno
cltd
jl
jo
aam
or
push
jne
xchg
cmpsb
cmc
pushf
push
stos
mull
sbb
mov
or
xchg
xchg
jns
fdivs
mov
mov
stc
mov
mov
mov
and
cmp
sti
scas
jae
inc
xchg
test
xor
mov
mov
lock
mov
stc
ss
stc
jp
and
stos
push
das
and
bnd
xor
sbb
push
mov
test
and
dec
and
add
lahf
int
pop
jne
xchg
std
mov
stos
movsb
sub
jl
and
loope
arpl
bound
xchg
push
cmc
dec
mov
fldcw
push
pushf
jle
vprotb
jno
addb
xchg
stos
mov
inc
cltd
sub
jp
scas
sbb
adc
mov
in
aam
xor
stc
shlb
push
or
imul
sbb
xchg
sarl
fcoms
xlat
xchg
mov
or
outsb
and
jmp
decb
std
jmp
test
push
sar
sub
out
cmpsl
das
cmc
cmpsb
popa
into
xchg
pop
mov
push
sub
and
in
add
pop
add
cmp
xchg
int
lahf
lcall
jge
mov
jb
cmp
sbb
or
imul
mov
rcl
jne
xchg
int3
cmp
clc
cmp
scas
push
xchg
jge
stc
sbb
arpl
out
out
js
xchg
sub
push
adc
jle
push
fdivl
dec
frndint
ja
imul
jp
inc
cmp
dec
iret
or
push
xor
popf
add
inc
jle
icebp
and
sarl
add
cmp
out
mov
outsb
fstpl
rclb
nop
hlt
inc
dec
jae
test
fwait
sbb
pop
arpl
insb
in
test
mov
fcmovnu
in
inc
mov
sti
repnz
push
leave
movsl
xor
push
testl
jecxz
ficoml
push
dec
ficoms
and
nop
movsb
sbb
jg
dec
dec
and
mov
call
xor
aas
mov
dec
into
xchg
icebp
outsl
mov
inc
inc
repz
mov
sahf
inc
jno
js
pushf
or
je
pop
je
rcr
mov
rcr
add
clc
cmp
test
mov
xchg
cmp
pop
xor
pop
sub
inc
mov
dec
add
notl
mov
mov
cli
dec
mov
stc
xchg
jne
add
loop
push
pop
dec
jp
into
adc
out
dec
out
nop
cmp
inc
std
mov
sbbl
push
pop
sbb
mov
addb
mov
imul
fidivrl
loopne
sbb
call
in
insb
cvtpi2ps
shlb
xor
ljmp
cmc
mov
mov
cmc
pop
sbb
je
nop
xchg
adc
and
call
stos
lret
cmp
out
ret
lock
or
test
outsl
add
enter
or
sbb
push
popa
adc
lods
test
jb
dec
pop
ret
call
mov
out
out
stos
dec
and
mov
and
incb
mov
ds
test
mov
jmp
and
add
hlt
test
sub
jb
int3
jge
cmpsb
int
jae
std
sub
jns
aad
mov
and
mov
mov
dec
in
in
xor
scas
mov
dec
lds
cmpsl
cmpsl
jno
test
out
test
add
movsb
adc
inc
lcall
xchg
mull
insl
test
mov
xor
in
je
pop
pop
insl
lea
fscale
pop
test
out
jp
addr16
aad
mov
cmc
dec
loopne
xchg
jl
add
sub
or
pop
inc
vpaddusb
int
cltd
xor
push
lcall
iret
push
mov
and
push
popf
mov
scas
loope
jb
aam
in
xlat
jnp
in
sub
jmp
mov
add
or
cmp
cmp
stos
insl
ljmp
insb
repz
pop
xchg
ret
bound
test
push
out
jo
mov
into
gs
aad
add
push
jbe
mov
popf
push
sbb
loope
insb
not
pop
sub
jmp
ret
ljmp
lahf
xchg
stc
dec
cmpsb
push
hlt
sub
sbb
push
ljmp
ret
test
dec
push
loop
in
xchg
xlat
jle
ss
and
jb
pushf
pop
adc
imul
pop
adc
fiadds
xchg
push
inc
ds
cmp
pushf
out
sbb
cmp
daa
or
or
pop
mov
sub
dec
dec
ja
stos
pop
sub
ljmp
mov
outsl
ficoml
arpl
inc
rolb
cmp
push
sar
mov
out
mov
mov
sbb
xchg
jmp
jns
addr16
lea
adc
push
jp
or
cmp
sahf
pushf
xlat
stos
push
xchg
repz
out
and
or
je
bswap
pusha
and
idivl
aam
not
and
and
pop
dec
sub
test
add
loop
imul
push
mov
cmp
jl
jecxz
sub
dec
xchg
fsubrs
inc
lahf
iret
lahf
stos
pop
movsb
mov
and
notl
or
shl
lret
mov
out
inc
std
test
inc
daa
or
adc
add
popf
fidivrs
or
stos
xchg
mov
arpl
mov
inc
call
stos
out
sahf
jbe
ss
out
out
add
daa
scas
lcall
cld
fidivl
sbb
or
insb
lods
add
adc
jns
and
sbb
inc
negb
aad
les
mov
popa
movsb
cltd
mov
mov
pop
pop
mov
cwtl
fcompl
fucom
arpl
aaa
js
loop
insb
scas
and
sarl
dec
in
lret
pop
cltd
push
test
je
jbe
xor
arpl
inc
push
dec
cmp
and
dec
inc
pop
mov
fisubs
fwait
int3
fwait
xchg
shll
mov
inc
jno
sarl
fs
dec
sub
test
jmp
insb
push
xor
xchg
fstpl
mov
xchg
insl
mov
jecxz
idiv
dec
add
stos
cltd
adc
cwtl
cmpsl
aaa
xchg
sub
aas
and
and
mov
loopne
and
ficoml
pop
test
inc
dec
ljmp
bnd
sub
adc
cld
add
out
cli
sbb
roll
lods
das
scas
push
mov
mov
xor
outsb
out
xlat
add
rcrb
rcrl
aad
je
cmpl
mov
push
ljmp
mov
and
fsts
fists
inc
cmp
jae
lahf
pop
lcall
popa
dec
mov
test
dec
jp
mov
push
out
movsl
push
dec
cmp
daa
pop
jne
ror
cmpsl
jb
imul
push
pushf
mov
je
sub
fcoms
test
test
jp
pop
and
lock
dec
je
sahf
rcl
cmp
pusha
push
aam
mov
repz
out
pop
cltd
shr
mov
sti
shll
lods
jbe
pop
in
mov
mov
std
and
push
pop
fcmovbe
addb
sbb
push
loopne
addr16
sbbl
push
clc
into
push
mov
jmp
sbb
mov
es
aaa
and
add
test
mov
test
lods
pop
jp
aas
ds
es
pushaw
jne
ss
sti
cmp
mov
jne
test
jnp
mov
cmp
fst
lcall
pop
adc
jg
push
and
cmp
addb
lret
fucomip
in
xchg
shlb
stc
imul
pop
xchg
xlat
mov
dec
mov
push
les
mov
lods
dec
std
xor
cmc
sti
push
push
fidivl
fisubl
jmp
mov
loop
push
scas
or
lret
ret
xchg
pop
xchg
dec
xor
push
inc
lds
fs
mov
pop
jns
divb
mov
and
jo
xchg
call
adc
std
or
sarb
loop
inc
cmp
inc
cmpb
push
adc
call
nop
test
jmp
outsl
mov
ret
jae
inc
dec
push
shr
stos
fcomps
imul
insl
dec
jae
and
into
mov
adc
add
pop
sub
test
mov
jmp
movsl
xlat
cltd
jb
mov
fsts
lret
inc
fsub
stos
popa
jb
out
mov
fwait
lret
das
jbe
cs
js
xor
js
xchg
adc
fisubs
jge
push
lret
pusha
jne
test
lret
imul
gs
loope
xchg
inc
ja
xchg
stos
repnz
ja
pusha
pop
dec
hlt
andb
adc
dec
xchg
stos
add
or
int
inc
xor
out
and
lret
ret
leave
stos
js
push
sub
adc
leave
and
add
jmp
aam
sub
andb
cmpsb
inc
cli
dec
fcoml
les
add
cltd
fcoms
xchg
rcr
lods
outsl
and
js
bound
popf
push
out
test
imul
sub
sub
cmpsl
pop
add
inc
mov
cmp
mov
ds
movsb
mov
pop
ds
loopne
dec
xchg
jp
es
and
fisubs
xchg
sbb
jo
mov
dec
test
movsb
ss
dec
psrlw
push
in
insb
sub
xor
rorb
popf
fiadds
test
pop
addl
sub
out
clc
std
adc
cmpsl
pop
dec
inc
imull
and
xchg
ret
outsb
rcll
xor
cmp
leave
test
mov
inc
pop
mov
aaa
push
jno
repnz
imul
ss
ss
xorb
xorb
vcmpps
mov
sahf
push
cmp
fsts
sub
xlat
xchg
mov
sub
call
fmull
dec
mov
imul
jecxz
push
test
push
cmp
push
test
in
adc
sbb
sbb
mov
ljmp
ficomps
stos
push
push
jne
or
mov
pop
scas
aas
ljmp
orl
aas
jns
out
pop
add
inc
fadd
inc
mov
sbb
insl
xchg
xchg
sbbl
pop
xor
add
mov
gs
add
lds
ds
shr
sub
lret
jnp
dec
fisttps
jg
push
cmp
xchg
add
sub
cmp
rcrb
jle
sub
pop
adc
inc
scas
insl
cmp
jb
inc
mov
and
inc
imul
and
in
negl
hlt
insb
fs
sbbb
ljmp
xchg
mov
in
inc
movsb
xchg
dec
lret
push
pop
out
pop
jno
lcall
add
cmp
sub
push
sti
add
xrelease
dec
repz
cwtl
mov
ds
xchg
and
fidivl
daa
mov
pop
lods
mov
rolb
aaa
rorb
movsb
add
out
lcall
pop
dec
jne
inc
mov
dec
jp
and
in
mov
add
xchg
xchg
and
aaa
fstpt
dec
xlat
fsts
mov
xchg
fldl
lods
cmpsb
xchg
or
rorb
dec
mov
repz
popf
fistpl
repnz
popf
push
test
je
ss
cs
push
hlt
mov
out
data16
fdivl
int
inc
dec
jae
dec
push
xchg
lahf
mov
mov
adc
idiv
mov
mov
ret
dec
lea
xor
repnz
adc
gs
mov
jb
fbld
test
lcall
fildl
or
popf
stos
ja
clc
sub
cmpsl
cltd
cwtl
mov
js
cmp
and
cli
jo
mov
cmp
jb
lret
mov
sahf
mov
icebp
clc
cld
popf
insl
inc
cltd
les
and
jmp
inc
push
and
jl
ret
push
xor
aam
adc
fbstp
clc
lcallw
int3
enter
push
jbe
or
pop
sub
aad
sub
loop
in
sbb
sbb
mov
xchg
ret
in
adc
jno
ficoms
data16
cmp
mov
arpl
out
fadd
xchg
push
lahf
mov
inc
aad
loopne
push
xchg
mov
mov
sbb
fwait
scas
push
mov
mov
clc
jb
movsb
jbe
pusha
movsb
adc
movsl
jnp
out
xorl
mov
inc
repz
cmpsl
sub
jb
dec
clc
imul
fsts
push
shrl
xorl
push
loop
orb
movsb
or
xchg
lds
push
or
xor
sarb
popa
mov
push
inc
into
jle
jbe
mov
fisubrl
and
roll
inc
push
insb
push
ret
insl
push
loopne
mov
lret
subb
jb
mov
lea
cltd
sub
std
xchg
data16
sbb
movsl
ficoms
lret
in
dec
rolb
pop
popf
cmc
out
mov
jb
push
jns
or
int3
mov
shll
push
push
dec
iret
gs
sbb
sbb
cmp
js
into
inc
subb
sti
mov
xchg
enter
push
loope
pop
or
sti
sub
cmc
xchg
mov
or
xchg
jbe
icebp
mov
mov
sub
dec
cli
mov
test
jl
and
pop
in
add
inc
xchg
jo
and
lret
sbb
repz
lods
hlt
xchg
mov
pop
jns
push
xor
push
push
push
xor
les
lcall
dec
ret
aam
jbe
mov
jbe
pop
shlb
lret
xlat
out
sti
mov
aam
outsl
or
aad
mov
std
mov
insl
and
lods
jne
call
jmp
xor
mov
testb
jle
sub
xor
xor
dec
jmp
sub
in
aaa
pop
test
mov
cmp
rcr
and
icebp
xchg
mov
out
stos
dec
das
dec
cmpl
fisttpl
mov
or
inc
add
int
dec
out
push
sbb
mov
adc
sub
add
xor
jecxz
movsb
frstors
arpl
shrb
xor
lods
sahf
test
adc
fs
inc
sti
in
cs
dec
dec
les
imulb
or
jae
sbb
mov
aad
pop
sub
dec
sbb
xlat
jecxz
sub
aas
mov
test
xchg
out
outsl
loope
popa
push
push
std
addps
dec
icebp
stos
pop
inc
and
dec
jnp
bound
ret
adc
pop
push
in
jns
cmp
or
inc
je
vmwrite
xchg
movb
mov
sbb
sbb
repz
mov
or
jecxz
ljmp
lods
pop
inc
cmpsl
ljmp
ret
and
fiadds
movsl
cmp
cmp
xchg
adc
mov
push
stos
je
pop
fimuls
test
sub
cli
or
adc
lahf
fisubrs
dec
push
mov
lret
icebp
cld
aam
cmpsb
mov
sbb
sub
andl
dec
test
ret
sub
fsub
outsl
insl
inc
mov
mov
mov
js
dec
sbb
pop
faddl
mov
jle
das
jl
cmpsb
mov
lds
mov
in
add
pop
negl
mov
nop
jecxz
out
cld
mov
leave
cmp
xor
scas
lret
ret
cmpsl
push
dec
repnz
cmp
iret
test
push
out
mov
cmp
inc
xchg
sub
xchg
xchg
pushf
mov
inc
cmp
push
sbb
dec
outsb
out
mov
adc
addsd
movzwl
xchg
or
data16
pop
add
xlat
cld
rcrl
or
mov
inc
loope
scas
fnsave
mov
notb
xchg
or
addb
lods
jecxz
andl
loopne
cli
int3
sub
stc
mov
mov
pop
or
sbb
cwtl
mov
ds
test
mov
jno
sub
cli
jnp
cmp
cmp
out
sbb
add
cli
daa
mov
lea
outsl
pop
mov
mov
shll
mov
scas
inc
not
ljmp
lcall
scas
cmpl
jae
mov
dec
cmpsb
test
gs
xchg
js
sbb
push
mov
fcmovnb
push
sbb
movsl
dec
addl
xor
shlb
fisubs
xlat
idiv
pushf
pop
adc
lahf
mov
fwait
push
inc
test
jg
aas
js
scas
add
punpckhwd
pop
lret
mov
pop
xor
es
rorl
inc
cmpsl
xor
xchg
add
jg
mov
out
lret
aam
sbb
fwait
jg
jl
xchg
imul
fimull
cmp
dec
pop
mov
and
add
mov
in
jae
dec
outsl
inc
clc
inc
shl
mov
repz
jp
lret
sarb
aam
arpl
lods
dec
clc
mov
fistl
int3
call
shll
push
lretw
gs
outsb
push
inc
sbb
lcall
addl
xchg
lret
mov
arpl
cld
xchg
push
jecxz
push
xchg
testb
scas
lods
xchg
push
pop
scas
sbb
mov
jb
and
arpl
lea
lods
les
daa
cs
lcall
das
sub
push
mov
lahf
fidivs
inc
mov
jg
fwait
orl
jl
dec
dec
sbb
jecxz
sbb
xchg
add
movsb
adc
adcl
xlat
ret
test
mov
gs
lea
daa
mov
mov
pop
call
stos
pop
scas
fadds
movsl
shl
in
in
stc
lock
or
push
mov
adc
sub
cmp
adc
pop
das
ds
adc
mov
rorl
or
dec
adc
pop
mov
fists
andl
loope
lea
lret
in
lahf
popaw
mov
dec
xor
addr16
mov
mov
jns
add
leave
lods
std
hlt
add
aaa
or
movsb
vmread
dec
stos
pinsrw
ret
fs
ret
cmp
jle
jb
pop
xor
stc
mov
inc
int3
cwtl
je
lds
sti
pusha
sub
scas
lahf
push
out
fdivl
dec
aam
mov
psubq
enter
dec
test
imul
rcrl
xor
aam
mov
mov
iret
inc
lret
hlt
or
ja
xor
in
or
ljmp
add
or
xchg
sub
cli
mov
cmp
inc
sub
mov
cltd
or
jmp
jecxz
shl
mov
mov
aaa
mov
push
or
call
and
and
xor
out
or
loop
cmpsl
lods
mov
clc
in
ja
int
or
jbe
mov
add
fnstsw
mov
and
or
insl
jno
lods
sub
nop
mov
push
jbe
repz
in
sub
and
test
in
push
cmp
mov
pop
imul
pop
sub
jno
test
lahf
in
jp
lahf
movsl
in
mov
mov
xchg
iret
andb
add
das
adc
lods
dec
push
aas
sbb
jne
xchg
mov
sbbl
test
push
sbbl
mov
jp
imul
jo
jmp
add
sbb
sarl
inc
movsl
push
and
fcmovbe
xchg
imul
call
mov
shl
mov
enter
pop
ss
dec
or
test
in
inc
jno
sub
push
sbb
sbbl
mov
sbb
adc
aaa
jecxz
push
mov
and
pop
divl
into
mov
mov
je
push
xor
pop
adc
mov
pushf
dec
and
mov
clc
jns
fs
repz
cmp
fists
std
sbb
add
jecxz
arpl
add
mov
lahf
shrl
and
outsb
push
dec
sub
outsl
hlt
adc
push
fiadds
sub
scas
stos
mov
lret
and
punpckhdq
push
pop
ds
push
xchg
outsl
ret
pop
add
hlt
lcall
out
enter
mov
pushf
or
jbe
in
cmpl
cmp
cmp
rcrl
stc
movsb
and
lds
sbb
and
push
adc
dec
movsb
xor
ljmp
test
sub
out
pop
test
addr16
xor
xchg
ret
jp
inc
icebp
or
cmp
add
js
pop
insl
and
sti
inc
loop
push
and
out
imul
pushf
cmp
sbb
inc
inc
fiadds
int3
shlb
shrb
or
inc
mov
inc
add
dec
int
mov
inc
dec
iret
fwait
mov
mov
mull
call
cmpsb
jb
loopne
jne
push
adc
into
or
inc
int
in
ss
jmp
mov
sub
push
ficoml
aad
sub
xchg
mov
inc
js
or
mov
sbb
push
js
lret
xchg
adc
in
mov
adc
shl
inc
jne
add
insl
push
aam
scas
rclb
loop
outsl
repnz
add
fs
loope
mov
sub
cmp
push
inc
lret
mov
adc
lret
inc
pushf
pop
stos
out
mov
test
lods
mov
adc
outsl
subl
mov
or
daa
bnd
xchg
out
mov
insb
mov
mov
ja
pushf
popa
jl
stos
cmc
out
sbb
dec
enter
popa
mov
dec
ret
mov
lods
addb
cltd
sub
jg
jge
add
aam
pop
inc
cmp
xchg
rorb
jmp
std
sbb
lea
xchg
or
je
cltd
or
or
xor
jb
sub
xchg
js
push
jmp
sti
in
into
mov
scas
push
arpl
mov
push
ficomps
mov
cmp
arpl
jp
popa
pop
push
out
push
iret
enter
cmp
sti
or
inc
int
popl
ss
pop
xorl
push
rol
add
mov
out
mov
and
sbb
mov
mov
mov
pop
cmp
dec
lcall
mov
push
mov
mov
mov
fwait
pusha
push
lds
mov
cmpsb
filds
cmc
rcrl
sub
push
xchg
test
lods
add
imul
xor
mulb
inc
imul
mov
dec
xchg
mov
sbb
and
movsl
mov
inc
xchg
arpl
add
std
scas
sahf
loope
push
jl
xchg
mov
mov
xchg
add
sub
aas
or
and
loop
cmp
pop
jle
jmp
mov
inc
or
xchg
push
xlat
mov
iret
das
mov
stos
or
fucompp
pop
mov
jns
mov
lret
jge
les
cmp
sub
and
mov
xchg
sub
stos
pop
nop
sub
mov
mov
sbb
mov
mov
adc
jecxz
mov
inc
cmpl
test
jecxz
xor
or
into
imul
idivl
fsub
xor
adc
icebp
ljmp
jnp
mov
sbb
sbb
pop
nop
fsubr
scas
or
int3
inc
repz
sbb
sti
pop
in
dec
clc
insb
mov
pop
inc
and
cld
dec
out
xchg
adc
jns
cmp
jne
stc
rol
addr16
mov
mov
aad
mov
jle
mov
cli
xor
mov
das
dec
scas
movsb
jbe
add
outsb
orb
dec
divl
insl
pop
push
push
and
cmp
int
insl
jns
daa
insl
xlat
sub
stos
out
sbb
cld
vpunpckldq
in
clc
or
xor
jg
fisttpl
sbb
mov
sub
aas
scas
mov
cld
mov
mov
fstp
int3
xor
mov
hlt
test
push
inc
mov
fidivrl
mov
jo
dec
xchg
mov
mov
inc
outsb
mov
stc
scas
scas
nop
aad
xchg
jns
cmp
push
xor
lds
mov
jecxz
aas
mov
pop
xchg
dec
cmp
pop
ss
cli
and
pop
or
fldt
out
adcb
cmpsb
mov
pop
les
bound
ja
sbb
cmc
adc
stos
fstpl
pop
pop
leave
inc
xor
ret
loop
push
mov
push
ror
testb
pop
jmp
in
or
in
lahf
decb
xchg
jmp
push
inc
cmpsb
mov
jle
adc
test
and
enter
add
and
and
and
push
push
xor
add
lahf
dec
mov
imul
outsb
cmp
flds
enter
imul
mov
out
std
test
into
push
jle
jo
sarl
sbb
push
sbb
cmp
pop
jecxz
mul
or
add
pop
fs
out
adc
addr16
mov
pop
lods
fsubrl
inc
xchg
mov
jb
xor
jl
out
das
cltd
jnp
jb
shl
xor
dec
jmp
and
and
push
mov
vpavgw
add
rorl
mov
xor
xor
mov
fisubl
dec
adc
lret
pop
push
imul
push
idiv
pop
pop
std
int3
cld
in
fmul
sub
shll
add
add
mov
cmp
mov
xchg
mov
mov
and
sub
jp
and
xchg
mov
jmp
jle
cmp
das
movsl
cwtl
in
and
incl
xor
cltd
jnp
pusha
adc
cmp
hlt
sub
or
lret
add
mov
or
xchg
inc
int
pusha
nop
out
jo
mov
in
stc
cmc
lock
imul
in
or
outsb
icebp
mov
cmp
and
jno
test
aas
xor
jp
loope
stos
subb
out
ss
push
stos
xchg
jb
fnstcw
mov
je
inc
stos
xor
sub
stc
push
mov
fwait
nop
mov
or
mov
adc
and
ficompl
lods
cmp
enter
imul
sub
adc
mov
push
xchg
dec
pop
mov
mov
test
push
sub
xchg
cmc
inc
dec
add
popf
add
jmp
jle
test
adc
add
xor
pop
sub
jns
addr16
data16
js
imul
sahf
push
xchg
rolb
jp
xor
mov
rcrl
push
xor
inc
xchg
dec
in
or
pop
test
or
loop
xchg
int
and
arpl
xlat
jno
imul
inc
adc
jbe
adc
pop
sub
repz
gs
rcrb
fisttpll
leave
into
xorb
pop
jo
stos
into
cltd
sar
inc
pop
xor
lret
mov
mov
pop
jmp
test
sub
cmpsb
jnp
aaa
subb
fistpll
add
and
jnp
jo
dec
test
push
movsb
call
cld
inc
shlb
stc
adc
aaa
frstor
xchg
mov
pop
insb
movsb
repnz
and
or
pop
bnd
mov
sarb
pop
xchg
push
in
dec
push
mov
sbb
jl
jp
call
adc
icebp
pop
jl
lret
mov
push
cmc
xchg
hlt
xor
scas
or
and
insb
lret
aaa
test
or
aad
filds
pop
xchg
push
cmp
notb
sub
ficoms
into
sahf
and
xor
and
test
popa
inc
pop
inc
mov
fstpt
pop
push
into
sub
or
aad
in
adc
mov
dec
sub
mov
cmp
dec
inc
and
cld
xor
mov
push
dec
das
pusha
test
pop
dec
pop
fsub
push
dec
inc
sti
ss
movb
dec
mov
arpl
call
into
inc
mov
sbb
dec
cmpsb
add
lods
or
add
and
js
mov
mov
inc
jge
xchg
subl
mov
shlb
mov
push
pushf
outsb
push
mov
xchg
xchg
xchg
in
inc
imul
leave
cltd
test
addb
mov
add
sbb
mov
or
push
dec
mov
clc
aad
andl
sub
push
pop
pop
and
data16
dec
sbb
lods
es
xchg
adc
or
mov
xor
orl
and
sub
stc
adc
xchg
repz
push
push
cmc
inc
pop
fptan
dec
mov
mov
hlt
or
dec
mov
adc
dec
push
inc
outsb
test
sahf
and
mov
mov
add
cmp
pop
loopne
lods
lea
test
iret
push
xor
ds
xor
les
div
lahf
xor
dec
jmp
mov
adc
gs
out
cmp
hlt
sar
hlt
subl
pop
testl
insb
xchg
inc
adc
scas
fcomip
cmp
rorl
orb
push
pop
test
mov
insb
sub
aas
fildl
shll
xchg
inc
adcl
mov
pop
dec
jne
stos
mov
call
pushf
xchg
jmp
in
fidivrl
mov
sahf
dec
aas
sti
out
fadds
xor
push
test
clc
adcl
cmp
iret
or
sbb
data16
fnstcw
outsb
movsw
jnp
pop
sbb
mov
aaa
pop
les
or
pop
mov
pop
movsb
and
cmp
push
mov
movsb
xchg
jne
xchg
cld
sbb
out
lock
mov
mov
adcb
int3
push
jno
outsb
xchg
jge
je
sbb
push
sbb
ja
aad
sbb
loop
outsl
push
les
xor
jne
push
std
out
xchg
rcrl
and
add
push
xchg
hlt
nop
scas
mov
addr16
mov
lods
lea
inc
xor
jno
pop
cmp
mov
decb
push
mov
ret
imul
inc
sub
xchg
xor
inc
push
xorb
mov
popl
inc
cwtl
mov
jns
outsb
xor
xor
cwtl
gs
jg
or
iret
adc
ret
sub
mov
xchg
jo
in
shll
je
xchg
pmulhuw
sub
and
cmp
mov
jmp
xor
sbb
jle
mov
fsubs
xor
sarb
mov
mov
mov
and
int3
cmpsl
into
test
lahf
pop
imull
shr
add
ds
jecxz
dec
shll
pushf
cmp
insb
cwtl
xchg
dec
xchg
push
adcl
loope
popa
imulb
jb
test
sbb
mov
cwtl
fdivl
adc
xlat
or
ss
dec
mov
lcall
int
inc
adc
pop
loop
mov
mov
js
lret
int3
jae
jecxz
cmp
pop
add
lea
lods
jae
fsubs
fsub
int
repnz
int
cwtl
mov
sbb
fmul
test
loopne
mov
test
dec
std
jb
mov
data16
ss
daa
jmp
out
push
mov
sbb
sbb
cmc
aam
add
in
pop
pop
mov
add
int
andb
movsb
js
shrl
mov
and
popa
and
mov
mov
jns
sahf
push
and
add
repnz
scas
and
fdivrs
cmc
sbb
fsubs
into
andl
pop
ljmp
jnp
les
test
add
cmpsb
jmp
or
shlb
xchg
xchg
leave
sbb
test
mov
mov
and
sti
cli
clc
test
mov
into
push
jo
push
mov
jmp
int
sub
mov
pop
push
jmp
loop
or
mov
daa
xchg
int3
movsb
jne
imul
xchg
cmc
test
add
adc
push
sub
mov
nop
scas
popa
cmp
and
incb
pop
inc
add
cmp
add
pusha
icebp
aas
scas
jp
and
pop
mov
adc
in
ret
pop
mov
adc
mov
jno
mov
imul
pushf
xor
fwait
iret
cmpsl
or
fisubl
ljmp
int3
push
mov
sti
sub
aam
out
jo
int3
dec
cld
cmpb
and
mov
add
jne
sbb
push
mov
and
outsl
push
pusha
mov
loope
sbb
xor
xchg
repz
push
aaa
cmp
lea
pop
shlb
aaa
dec
mov
daa
test
jns
lods
jmp
sbb
cmp
add
mov
xchg
sub
xchg
outsl
adc
sub
lahf
adc
stos
mov
in
mov
ljmp
mov
xor
mov
cwtl
add
in
mov
jl
jns
test
sbb
leave
mov
test
push
lahf
push
js
mov
leave
jg
xchg
inc
test
and
cmc
cmc
lock
mov
aaa
aaa
xchg
push
xchg
data16
scas
pop
cli
in
shlb
xchg
cmp
mov
imul
lret
int3
push
pop
sub
ficoml
loope
pop
mov
sub
enter
jns
lea
fisubrs
out
push
in
movsl
gs
mov
ret
decb
vmovq
mov
shll
cli
int
scas
popa
call
loop
xchg
or
daa
push
add
inc
aaa
arpl
iret
jo
cld
mov
and
push
xor
dec
add
jmp
cmp
mov
xchg
or
mov
xchg
test
jg
xchg
iret
add
mov
dec
cmp
pushf
pop
xor
enter
fsubrs
lret
les
dec
sbb
pop
test
pop
ficoms
sub
push
jno
jl
add
or
fs
mov
or
scas
shrb
mov
mov
adc
cmp
push
pop
sbb
and
test
cmp
fwait
mov
cmp
scas
ret
xlat
int3
outsl
push
je
xchg
das
rcr
cmpsb
jns
inc
and
cmp
pop
inc
mov
xchg
inc
shlb
je
insl
in
mov
xor
mov
test
jle
ds
jne
divl
mov
mov
mov
xchg
movsl
lret
push
inc
popf
adc
ss
ljmp
xor
loop
out
adc
and
gs
leave
lret
pop
leave
push
scas
adc
mov
sub
add
gs
clc
imul
iret
out
xchg
gs
inc
shrd
or
pop
inc
jecxz
pop
dec
sahf
cmpsb
push
fidivl
lea
adc
push
or
sbb
mov
std
sbb
repz
add
push
xorb
mov
lahf
test
jbe
mov
fnstenv
mov
xchg
xor
shrl
inc
shlb
pop
movsl
and
inc
leave
xor
xchg
cmp
jmp
out
daa
mov
push
jl
fsts
xor
ret
fs
fmull
nop
mov
push
addr16
adc
lods
lcall
pop
xor
sub
addr16
or
addr16
out
xor
adc
adc
pop
mov
lea
and
sub
ret
push
mov
push
fcompl
jne
dec
lods
mov
cwtl
cmp
in
dec
mov
push
inc
sub
stc
dec
shrb
lcall
pop
cmpsl
mov
andl
xchg
sbb
movsl
addb
pop
imul
stos
loop
xchg
cs
xchg
push
icebp
pop
ja
shrb
cmp
ss
cli
adc
data16
mov
rolb
push
mov
je
push
stos
lods
cli
in
xor
inc
inc
mov
imul
gs
ds
sbb
popf
sar
ja
jp
pop
fldt
sti
les
repz
in
frstor
fldt
sub
xor
in
ja
push
sbb
roll
cmpsl
mov
in
xor
xchg
mov
push
pop
or
mov
pop
xor
xor
jo
mov
pushf
rcll
daa
push
in
jle
sti
cmpsb
rcrl
loopne
push
cmc
into
sbb
dec
dec
sahf
lods
dec
adc
cmc
mov
je
or
rcrb
scas
cmp
neg
add
xchg
test
cmp
sbb
pop
xor
int3
addr16
xchg
int
dec
pop
insl
sub
std
pop
daa
mov
dec
cvttps2pi
xor
stos
sahf
mov
imul
mov
es
cld
push
dec
xchg
outsb
or
and
call
pop
stos
repnz
pop
and
rclb
subb
inc
or
xchg
fwait
outsb
loope
or
inc
lds
cmp
clc
dec
jmp
and
sbb
and
shll
mov
in
flds
and
ja
mov
nop
sub
xor
mov
sub
pop
in
arpl
sahf
jno
dec
mov
clc
fistpll
push
sti
jecxz
xchg
out
sbb
push
addl
dec
or
hlt
mov
aad
cmp
add
bound
loope
fidivrs
loop
outsl
inc
fs
pop
mov
or
ret
sbb
dec
xchg
inc
cmp
add
shlb
adc
movsb
or
mov
push
fimuls
incb
xchg
ret
sti
fbld
in
push
lea
dec
cmpsl
xor
xlat
das
stc
mov
add
xor
lock
andb
and
dec
data16
pusha
in
dec
jns
daa
jno
and
xor
xchg
fnsave
outsb
out
rcr
adc
lds
mov
divb
pop
fisubrs
sti
mov
je
loopne
dec
loope
lcall
jecxz
jge
add
adc
and
sub
ljmp
int3
pop
fsub
ja
mov
sub
test
lds
faddl
subl
cmp
jno
pop
xor
outsb
mov
mov
and
push
push
xchg
push
xor
pop
xor
push
loope
int
pushf
sbb
sbb
inc
cmp
mov
movsb
shrb
iret
movsb
xchg
sub
clc
jp
imul
subl
aad
inc
mov
mov
cs
lds
ret
out
aas
inc
js
xchg
inc
add
nop
inc
cmp
dec
scas
inc
mov
push
pop
rcl
or
cmpsl
jo
pop
sarl
adc
jae
sti
mov
popf
pop
test
mov
and
add
push
les
movsl
pop
cs
and
insb
aam
mov
and
pop
in
add
jmp
jp
push
popa
daa
inc
adc
mov
push
and
test
mov
cmp
or
mov
add
lock
arpl
and
loope
fsubl
insl
sub
inc
pop
and
adc
xor
mov
push
dec
popl
pop
xchg
xchg
aam
push
insl
xor
imul
push
mov
mov
dec
outsl
inc
mov
pop
lods
iret
fnstenv
jne
push
aaa
cmp
aas
xchg
inc
pop
xchg
and
data16
cmp
call
jg
jns
iret
sub
cmp
cmpsb
int3
mov
pop
inc
xor
cmp
pop
mov
inc
xchg
bound
dec
test
jbe
hlt
jge
jb
ljmp
pop
or
jne
adc
pop
cwtl
push
mov
cmp
cmp
loop
jns
out
pop
push
push
cld
fcom
push
cmp
std
jbe
dec
popa
pop
pop
pop
aas
out
aas
shlb
stc
adc
test
add
mov
mov
cmpsb
adc
jmp
xchg
lods
mov
mul
cmp
sar
jg
sbb
jg
cmp
and
aas
xchg
xor
imul
mov
cmpb
dec
icebp
iret
xor
sti
repz
xor
add
loope
fstps
lea
mov
sbb
xor
inc
cmp
test
jae
xchg
jne
xchg
sbb
and
push
int
sti
xchg
sti
gs
mov
shlb
mov
mov
and
call
cltd
adc
insl
xor
mov
xchg
cmp
addb
add
sub
fmull
mov
push
and
lret
lods
mov
sbb
adc
lods
roll
push
or
push
and
push
in
aam
pop
or
mov
push
fnsave
jle
mov
sub
or
xlat
xchg
out
aaa
cmc
push
stc
push
or
imul
xchg
xlat
js
mov
aam
mov
std
es
fldl
xor
idivl
aam
mov
ljmp
int3
cltd
hlt
out
loop
clc
insb
mov
stos
lahf
and
adc
int
cmp
or
inc
fisubrl
add
adcl
mov
cs
out
lcall
rolb
fs
inc
orb
push
xchg
add
jl
dec
mov
xchg
pop
aas
add
push
mov
movsl
pop
xchg
or
pop
or
mov
ret
ds
iret
cmpl
out
rcr
sub
adc
push
pop
pop
sarb
or
add
cmp
leave
sbb
ljmp
push
dec
fisubrl
aad
add
mov
loope
in
push
pusha
aaa
xchg
inc
mov
test
dec
arpl
imul
shl
ja
popa
sbb
cli
sub
stc
imul
xchg
lcall
pop
xor
dec
cmp
jl
and
into
add
mov
enter
test
sahf
push
sti
mov
lret
mov
loopne
jno
mov
push
push
hlt
aad
lds
mov
xor
in
jge
xchg
dec
pop
adc
mov
cli
and
jg
and
adc
das
leave
mov
pushf
mov
push
test
andb
mov
ds
ja
pushf
push
test
mov
xchg
test
fildll
cld
lcall
in
dec
in
jnp
sti
ljmp
addb
arpl
out
test
pop
and
fs
adcl
movsb
jns
fisubl
cmp
inc
andb
sbb
or
or
stos
mov
pop
push
jo
sbb
xchg
pushf
fldenv
inc
xlat
loope
inc
cwtl
cmp
pop
or
cmp
mov
jb
aaa
mov
and
xor
lods
sbbl
cmp
cmc
in
mov
xor
dec
xchg
adc
xchg
or
xchg
push
ljmp
xchg
sub
divl
scas
sub
mov
pop
into
mov
jo
stc
and
scas
and
lea
jae
addr16
add
div
sbb
fs
adc
in
xchg
stos
adc
aas
xchg
lret
ror
add
lods
pop
xchg
enter
lret
arpl
xor
rcrb
lods
dec
mov
in
faddl
or
sub
cltd
test
add
ljmp
cmpsb
pop
aam
shrl
out
dec
inc
or
cmp
jl
fwait
arpl
or
mov
dec
sub
xchg
test
xchg
data16
mov
shl
sbb
arpl
add
and
test
pop
sti
xor
xchg
aad
or
pop
mov
sahf
push
int3
arpl
std
lods
push
xchg
iret
stos
push
pop
fiaddl
push
xchg
data16
stos
insl
and
fstpt
xchg
in
jge
inc
pop
add
lahf
add
xchg
lds
inc
lcall
mov
nop
jno
scas
sub
xchg
popa
mov
loop
sbb
int3
nop
cmp
xlat
pop
test
and
add
inc
divb
fildl
cmp
or
or
out
jo
shll
jmp
pop
inc
cmp
adc
inc
out
sub
mov
mov
arpl
or
jae
xchg
push
xchg
dec
outsl
sub
cmpsb
pop
mov
sbb
int
dec
cmp
add
push
push
idivb
jae
xchg
popa
setp
pop
xchg
mov
aad
add
xchg
or
aam
movsl
mov
imul
les
subb
outsl
outsb
mov
testb
repnz
mov
stos
sub
lahf
add
test
in
outsb
cs
adc
insl
mov
mov
clc
lods
push
mov
in
jl
mov
jecxz
and
scas
imul
lcall
in
lods
flds
ja
sub
push
add
lods
test
adc
cmp
aas
push
push
pusha
xor
push
inc
mov
dec
dec
outsl
sub
mov
push
mov
int
shrb
mov
decb
add
cwtl
movzwl
mov
shll
xor
mov
pop
xchg
inc
repnz
xor
cmpsl
into
adc
inc
and
xchg
dec
jne
mov
ja
test
pop
sahf
test
push
call
mov
pop
and
in
test
mov
inc
daa
xchg
xchg
cmp
stos
aaa
in
sub
jecxz
dec
jae
push
adc
xchg
fldcw
mov
cltd
out
push
loop
repnz
mulb
js
xchg
movsb
and
insb
ja
inc
jp
mov
xchg
ds
fcoms
xchg
and
movsl
add
sysexit
push
fsubs
xchg
add
xor
das
sbb
psubusw
aas
cmp
lods
and
jp
push
jne
in
push
lods
aad
js
sub
push
mov
lcall
popf
inc
mov
jle
pusha
pushf
and
adc
xchg
cltd
ret
out
adc
mov
push
movl
cmpsl
arpl
inc
mov
sub
push
lds
enter
shll
test
or
es
adc
inc
ss
mov
scas
sub
bound
in
pop
jnp
lods
movsb
test
mov
movsl
mov
jns
lea
xchg
push
dec
dec
shrb
imul
clc
aad
js
aad
jo
ret
sub
out
adc
pop
aas
lock
add
mov
push
xor
jge
add
inc
cmpsl
mov
push
push
mov
shlb
pushf
dec
mov
add
xchg
dec
imul
jg
push
xor
mov
xchg
cmp
outsl
bound
push
repz
dec
dec
push
fwait
aam
pop
sub
add
dec
sahf
mov
popf
into
xchg
cltd
out
loopne
mov
arpl
ret
lcall
insl
sbb
jl
ret
cmp
sahf
pop
in
mov
ret
push
lock
stc
adc
sub
inc
adcb
call
ss
call
xchg
fdiv
pop
ret
add
aas
and
inc
xor
mov
push
pop
shlb
es
push
cmp
sti
mov
push
pop
adc
cmp
sar
divb
and
outsl
out
jl
sbbb
test
into
adcb
fildl
sbb
jno
in
mov
fbstp
xor
push
adc
outsl
cld
fldenv
jbe
sbb
push
push
or
xchg
add
mov
cmp
aas
gs
mov
dec
jb
scas
pop
lds
dec
cmp
push
int
hlt
shrl
sub
hlt
add
pop
push
push
push
jnp
aaa
cmp
stos
pop
push
inc
jno
negb
mov
icebp
fsubr
xchg
clc
iret
stc
cld
mov
inc
shlb
adc
xlat
fsubl
pop
adc
push
outsb
faddl
std
fstpt
push
jecxz
mov
into
add
lea
mov
pop
stos
jb
or
lods
dec
cmp
add
aad
leave
lahf
cs
imul
push
pop
xor
add
sub
mov
lds
aam
imul
xor
adc
iret
aam
push
xchg
dec
idivb
cmp
push
lea
xchg
dec
sub
push
addr16
idivl
imul
dec
pop
xchg
and
cmpxchg
cmp
and
or
loopne
mov
outsb
mov
jl
lods
enter
test
pop
xchg
adc
stos
into
aas
mov
js
ja
idiv
cmp
int3
sub
cmp
hlt
repz
sbb
jecxz
or
inc
push
dec
fwait
les
adc
sbb
rclb
mov
cmpsb
push
xor
enter
inc
sub
iret
inc
sub
xor
mov
cmp
inc
hlt
xor
sbb
jno
xor
fwait
mov
push
mov
and
insb
mov
pop
cmp
mov
test
int
int3
jbe
xor
jmp
int
loopne
jmp
outsl
mov
adc
mov
dec
pusha
aas
or
mov
in
cmpsb
xchg
inc
cmp
pop
movsl
push
mov
dec
inc
imul
je
faddp
jmp
cmp
mov
call
push
frstor
adc
mov
push
inc
sub
cmp
mov
adc
sub
lds
and
push
data16
sti
sub
mov
or
ja
push
lock
popf
lods
or
popf
iret
mov
les
lcall
mov
mov
mov
movsl
mov
cli
cmpsb
mov
repz
mov
inc
or
mov
jecxz
pop
in
sbb
movsb
lds
nop
jbe
sub
sub
xchg
mov
add
push
ja
aas
std
add
jmp
or
mov
sub
jmp
add
adc
in
addr16
inc
mov
inc
push
jmp
mov
test
ret
aad
in
cmp
mov
fstpl
or
push
je,pn
sbb
or
inc
add
mov
jmp
pop
roll
hlt
sub
ds
subb
les
in
scas
sub
mov
pop
das
xor
push
mov
or
stos
pushf
mov
xchg
and
push
mov
pushf
add
jge
mov
hlt
jae
mov
jp
loop
push
rcrb
leave
imul
pop
shll
fdivp
xchg
aaa
stos
mov
mov
mov
fldt
mov
inc
std
push
les
mov
ficoml
mov
mov
outsl
or
call
cld
mov
aaa
mov
jl
hlt
sub
and
xchg
pop
rcr
push
mov
cmp
repz
fwait
sub
imul
movsb
pop
outsb
int3
or
pop
mov
fnstcw
adc
mov
and
pop
adc
loop
push
sub
jo
inc
push
jp
andb
jmp
adc
mov
inc
outsb
out
and
mov
fidivrs
mov
jle
cmp
mov
dec
xchg
pop
or
std
js
aam
push
mov
add
push
pop
fstl
int3
and
fdivl
stos
repnz
outsb
fdivl
jp
mov
pandn
push
fsubrl
call
repnz
js
jnp
icebp
lcall
mov
test
test
sbbb
fdivs
push
cltd
sbb
push
add
sahf
dec
pusha
mov
test
movsl
jl
cmpsl
shll
popa
test
mov
insb
fs
pop
stos
stc
jns
push
call
jne
sub
dec
lahf
imul
rcrb
fwait
enter
cld
nop
fsub
xor
dec
leave
mov
or
lods
icebp
mov
xor
leave
mov
push
inc
xor
inc
jl
and
push
cmp
daa
pop
jg
cmpsl
inc
xchg
xchg
mov
es
mov
jbe
lahf
insb
lahf
nop
sub
mov
das
xor
stc
mov
adc
sbb
lcall
testl
out
rclb
sbbl
xchg
sub
ds
adc
int3
lea
out
push
loope
fbstp
xor
mov
xor
pop
aam
int3
inc
and
leave
xlat
xchg
push
popa
dec
pop
inc
cli
jo
mov
sub
xchg
loop
ljmp
jmp
shrl
icebp
xchg
ss
mov
adcb
loope
mov
push
stos
push
add
dec
cmpsb
xor
mov
add
and
cli
int3
repz
jae
out
jae
mov
jb
add
rolb
insb
push
clc
push
fs
push
addr16
hlt
out
dec
xor
dec
xchg
dec
aaa
je
pop
sbb
pop
pop
gs
ficoml
fists
inc
xor
jns
push
xchg
or
jecxz
ljmp
int3
dec
push
cs
adc
js
pop
repnz
and
hlt
jecxz
lock
imul
push
enter
sub
inc
cmpsb
cs
stos
xlat
xor
jne
mov
mov
or
rcrb
mov
clc
lods
xchg
gs
xor
push
mov
mov
stc
dec
mov
std
sub
loopne
in
inc
rcll
fs
or
push
jae
dec
jnp
daa
or
or
lcall
das
dec
mov
xchg
das
sub
and
mulb
lock
andb
jo
imull
dec
xor
mov
fsubrl
icebp
clc
repz
lret
fwait
insl
mov
scas
mov
cld
xor
pop
outsb
inc
pop
push
ret
cmp
pop
push
xchg
or
mov
lcall
sarl
dec
add
jns
sbb
pop
pop
mov
add
jnp
jbe
je
js
movsb
aaa
push
outsl
push
or
push
dec
loopew
icebp
xor
mov
loop
insl
mov
mov
and
stos
mov
sbb
add
add
pusha
aam
daa
push
dec
arpl
sahf
or
fnstsw
call
enter
les
xor
xchg
aaa
xor
sub
push
or
mov
cmp
movsl
test
fucomi
call
leave
and
aas
pop
add
xlat
jg
fcoms
mov
ljmp
add
mov
ret
mov
jmp
inc
and
rol
stos
add
sbb
and
dec
sbb
mov
mov
stc
cmpsl
inc
xchg
adc
mov
into
pop
pop
xchg
xor
xchg
sub
mov
dec
out
outsl
pop
jl
mov
shlb
sub
ret
rolb
and
and
movsl
jnp
xchg
push
mov
mov
paddsw
jge
sahf
les
push
in
js
aam
outsl
cmpsb
adc
or
js
mov
js
jmp
mov
push
add
push
mov
adc
rcrl
push
jmp
insb
cltd
mov
mov
push
mov
mov
jge
xchg
jb
or
pop
enter
dec
xchg
pop
pushf
mov
fldcw
mov
xor
cld
sbb
ret
fbld
cmp
xor
incl
repz
push
jg
ror
lods
jmp
sub
enter
dec
cmp
rcrl
push
or
test
repnz
dec
adc
in
and
imul
pop
mov
mov
negb
ja
xor
sbb
fimull
sub
stc
notb
stc
pop
jge
fildll
xor
shlb
or
lods
jno
jns
cli
add
jne
xor
lds
sahf
bound
and
sbb
add
add
jge
notb
lock
sbb
mov
test
xchg
out
idivl
dec
mov
jmp
cmpsl
dec
out
test
xchg
inc
cmpsb
sbb
ja
xor
pop
pop
adc
imul
add
in
lahf
adc
daa
push
aas
sub
cli
xchg
imul
push
leave
cmp
cwtl
pop
sub
add
insb
cmp
out
jmp
imul
mov
out
out
inc
rclb
orb
inc
mov
adc
cmp
das
fstps
fldenv
cwtl
mov
hlt
out
lea
mov
js
lcall
shrb
add
and
aas
lock
xchg
ds
in
adc
dec
jp
lock
push
jb
mov
add
cmp
inc
fistpll
shrl
daa
jno
push
sub
sbb
sbb
je
mov
lret
mov
push
rcrl
stos
lods
xchg
cmp
cmpsl
ret
nop
imul
fs
xor
mov
pop
pop
adc
push
pusha
call
and
inc
in
ljmp
popa
inc
aad
cmp
xchg
push
outsb
mov
or
and
jno
loope
lea
cltd
dec
sbbb
in
adc
loop
inc
cltd
aaa
stos
jo
push
std
sub
sbb
mov
call
jmp
and
out
pop
std
mov
xor
in
and
and
pop
xor
pop
push
das
mov
dec
mov
ds
add
addr16
push
lea
insb
xor
repz
loop
pop
iret
hlt
adc
subw
inc
add
bound
sti
mov
inc
mov
jne
sub
pextrw
inc
mov
shl
add
add
jns
repnz
sub
xlat
sti
jp
sub
test
dec
ret
rcl
inc
stos
mov
add
and
lret
sysexit
in
jno
push
popf
cltd
adc
repz
movsl
adc
rclb
push
lret
inc
insl
ja
cmp
fcmovb
call
cmp
mov
inc
xor
mov
cmpsb
loopne
addb
call
scas
push
decl
cwtl
idivl
inc
sbb
lea
pop
cmc
mov
push
insb
jmp
fyl2x
aas
aad
iret
mov
in
sahf
call
cld
mov
add
into
add
leave
cmpsb
scas
fwait
mov
mov
cld
movsl
ljmp
cmpl
and
aaa
bound
jl
push
add
shl
cltd
and
stc
xchg
add
cld
push
mov
mov
rolb
test
test
jge
xor
out
push
add
sbbl
gs
cmp
insb
pop
aaa
stos
xchg
stos
test
test
out
and
add
xchg
movsbl
xor
fisubl
int
cli
je
divps
sahf
mov
xchg
or
fisubrs
gs
scas
pop
xor
movsl
or
xor
jno
mov
or
push
xchg
mov
loope
stos
roll
shrl
mov
movsl
cmp
jns
int3
xchg
loop
pop
sub
jnp
fstpt
dec
mov
test
lods
jg
dec
sti
mov
adc
lret
push
in
and
inc
mov
out
and
mov
repnz
push
or
inc
sbb
vprotb
cmpsl
mov
push
push
push
mov
idiv
outsl
js
mov
ljmp
sbb
xor
xchg
aam
adc
das
mov
sbb
jl
jp
popa
out
push
scas
add
inc
shlb
stc
add
mov
dec
andl
sub
mov
xchg
push
hlt
mov
and
cmp
ss
sub
daa
or
lret
and
mov
add
pop
xorl
fdiv
adc
mov
mov
xor
mov
sub
ljmp
and
subb
dec
xor
push
sbb
adc
dec
arpl
mov
push
and
test
insb
sub
lcall
mov
push
mov
push
xchg
mov
roll
in
inc
jno
push
inc
and
xchg
stos
or
fcmovne
pop
into
shll
cmp
adc
arpl
loope
addr16
shlb
ja
scas
push
loope
push
mov
cmpsb
mov
fisttpl
scas
inc
sbb
xor
shlb
jmp
lds
inc
cwtl
fidivrl
push
inc
adc
lahf
insl
dec
or
inc
add
mov
rcr
dec
in
mov
mov
lcall
mov
je
sbb
adc
orb
scas
xlat
cs
stc
rorb
mov
jg
aad
mov
dec
dec
dec
xchg
outsl
xor
or
sbb
jbe
pop
or
cltd
bound
adcb
dec
jle
jmp
fbstp
or
popf
daa
xchg
fiadds
lods
mov
cmpsl
sbbl
xchg
mov
frstor
or
xchg
stc
sbb
cmp
stos
and
cmp
mov
mov
cmp
sub
xchg
cmp
pop
repnz
cmc
pop
dec
mov
jmp
test
inc
lods
dec
outsl
push
inc
mov
pop
aam
scas
imul
mov
fs
in
sub
pop
sbb
add
xchg
stos
cli
mov
adc
cmpsb
outsl
mov
arpl
lods
push
cmpsl
fcmove
outsl
xchg
inc
mov
mov
out
std
mov
dec
sub
or
stos
xor
jp
ficoml
fucomi
dec
mov
sub
mov
xor
pop
sbb
dec
lock
ret
inc
sub
dec
xchg
pop
leave
push
shll
inc
cli
in
out
sbb
int3
push
ljmp
jle
xor
jl
sbb
push
test
jmp
push
mov
out
pop
fimuls
aam
in
pslld
or
dec
pop
pushf
adc
outsl
hlt
sbb
test
push
gs
xchg
data16
or
ljmp
scas
mov
lret
xlat
call
pop
xchg
fwait
xchg
sbb
and
cmc
and
dec
mov
jns
into
jnp
lret
cmpsl
test
dec
popf
mov
mov
mov
push
lret
adc
cmp
jp
out
sahf
jb
add
push
stc
jbe
popf
in
sbb
inc
cmp
inc
nop
dec
insb
pushf
mov
xchg
or
jo
data16
repnz
adc
cli
scas
sti
inc
fcompl
sbb
jp
push
push
jle
mov
fs
sbb
push
or
inc
fistl
outsb
cmp
filds
mov
pop
xor
cmp
mov
inc
inc
mov
sahf
fidivrs
mov
add
xor
lods
cmp
into
notb
mov
inc
sahf
xor
decb
pop
ret
mov
sahf
jecxz
lds
sub
mov
insb
pop
das
das
dec
push
sbb
inc
add
mov
push
cmpsl
cmp
ljmp
inc
lcall
push
pushf
adc
mov
bound
lods
popa
mov
lret
mov
movsl
jle
and
dec
sbb
adc
jle
and
sbb
push
hlt
xchg
jp
int
mov
dec
mov
add
xor
sbb
rolb
pop
cmp
jae
cmpb
scas
add
hlt
das
lods
adc
lock
fimull
mov
das
mov
dec
mov
es
pop
in
jnp
clc
sub
cli
ljmp
repz
mov
sub
mov
push
inc
mov
mov
mov
ja
pop
out
push
in
sahf
mov
sbb
repz
sbb
cmp
inc
pusha
cwtl
mov
and
enter
call
push
xchg
xlat
mov
inc
or
ret
xchg
int
sbb
and
rolb
mov
cmpsl
cli
ljmp
dec
inc
lret
adc
cmp
mov
mov
inc
sbbl
cmp
mov
inc
mov
adc
cmpsl
insb
das
inc
stos
inc
adc
xchg
clc
shl
pop
inc
push
jns
sar
in
outsb
mov
aad
or
sarl
int3
sub
aaa
cmp
sbb
leave
pop
push
sub
hlt
adc
inc
or
imul
or
adc
sarb
xor
and
fs
push
xor
or
jnp
imul
test
scas
jne
dec
adc
insb
movsl
test
jno
add
fsub
imul
dec
mov
adc
inc
sbb
pop
adc
add
ds
push
jp
mov
dec
fwait
push
xchg
repnz
or
cwtl
mov
mov
and
scas
fmull
mov
outsb
xchg
or
cmpl
jle
stos
jmp
and
movsl
ss
mov
shl
daa
and
incl
pop
scas
or
inc
out
add
aas
dec
outsb
enter
cld
leave
imull
add
fistpll
adc
push
flds
scas
dec
sti
int3
mov
push
inc
mov
cmpsl
push
sar
or
pop
cltd
mov
push
addr16
test
xchg
xchg
call
js
xchg
cmp
xlat
test
sbb
dec
js
std
and
jge
sub
xor
xor
mov
cmp
jmp
in
rcll
sub
cltd
lcall
divl
std
adc
js
inc
xchg
cltd
mov
inc
or
mov
xchg
mov
mov
mov
test
mov
cmp
shlb
xor
add
stos
sarb
imul
test
bound
jbe
ja
sbb
sub
sub
push
mov
jb
sub
cmpsl
sbb
vmread
xchg
xchg
int3
xor
cmpsb
mov
push
add
mov
inc
adc
iret
loope
aad
iret
push
or
jns
add
ds
cmc
cs
add
add
fcompl
out
imul
enter
jecxz
push
pop
and
jo
cltd
mov
repnz
fwait
mov
sub
add
sub
ss
xor
push
clc
mov
adcl
pop
add
lods
jns
jae
pushf
fwait
cwtl
imul
test
mov
cmpsb
out
jg
fistpl
jnp
pop
inc
fbld
inc
xor
xchg
in
sbb
fstp
jnp
ret
out
push
and
mov
scas
icebp
insl
jb
cs
test
push
arpl
mov
mov
lods
xorb
cmc
addl
mov
les
adc
mov
cmpsl
sbb
ds
mov
jb
call
or
jge
and
adcl
adc
lods
mov
int3
pop
sbb
dec
jmp
pop
dec
repnz
sub
lret
cld
hlt
pop
loop
push
mov
leave
push
sbbl
or
fldl
insl
dec
pop
test
push
xor
sub
fwait
shrb
push
add
int3
loope
ss
fsubrp
jae
dec
jae
mov
ret
inc
mov
cmp
add
and
lret
add
fcmovne
xorb
inc
inc
clc
rcl
push
aaa
int3
out
loope
mov
icebp
dec
pop
mov
ss
sub
leave
lock
decl
adc
adc
fistl
psubusb
xorl
push
testb
or
pop
enter
lret
mov
scas
push
les
in
fisubrl
jns
sbb
xchg
mov
test
push
bound
shrb
fidivl
imul
mov
push
cmc
mov
adc
xchg
xor
test
loopne
fdivp
mov
fwait
in
adc
das
mov
ljmp
xor
rorl
sub
cmc
aad
dec
adc
es
in
inc
or
int
mov
mov
adc
test
leave
frstor
imul
int
fstpt
repz
jl
je
and
and
aaa
shll
jmp
push
pushf
outsl
rcrl
lret
stos
adc
push
scas
add
add
hlt
or
cmpb
cwtl
jo
sub
clc
push
bound
lret
insb
fdivs
mov
inc
mov
fs
jne
push
adc
jl
test
jae
and
lret
pop
add
mov
xor
xchg
push
jo
int3
inc
outsl
mov
mov
dec
ds
sub
hlt
test
test
sub
shll
or
inc
test
sbb
push
scas
inc
cwtl
inc
push
shrl
inc
imul
pop
ror
call
outsl
lret
fwait
add
add
sub
mov
jbe
adc
sub
je
xchg
mov
das
test
test
stc
and
mov
xchg
roll
inc
or
inc
dec
adc
sub
xor
push
jbe
xchg
outsb
or
rorl
xchg
mov
jne
lret
pusha
aas
cmc
push
dec
cmpsb
inc
out
inc
lret
ret
bound
push
ljmp
dec
push
nop
mov
sbb
sub
cmp
rolb
xor
notb
nop
stc
mov
dec
cmp
pop
lahf
adc
js
jmp
push
sub
iret
xchg
push
in
arpl
push
jnp
or
adc
mov
outsb
test
jo
sbb
aam
and
into
adcl
jecxz
pop
and
mov
repnz
lods
pusha
cmp
push
je
sbb
dec
and
pop
rolb
adc
inc
je
dec
and
push
int3
das
dec
inc
push
add
in
pop
mov
lea
idivb
lods
add
les
inc
jp
push
dec
cmp
inc
outsb
test
and
xor
add
lret
mov
pop
stos
rcll
out
ja
out
daa
mov
xchg
je
imul
fisttpl
dec
cmpsl
cmp
or
pop
dec
aad
movsl
pop
or
and
push
cwtl
popa
orl
cmp
ret
aad
push
dec
sbb
insb
cs
decl
loop
frstor
dec
adc
test
xchg
mov
mov
pop
cwtl
dec
sarl
mov
mov
outsb
mov
out
outsl
inc
mov
je
loop
jno
jns
xchg
jle
jns
jge
cmp
jmp
movsb
bound
mov
push
out
test
lods
jae
idivb
popa
push
or
xchg
xor
addb
iret
stos
add
and
dec
lcall
divl
roll
dec
clc
sub
fisttpl
and
outsb
cli
out
ret
xor
push
rclb
pop
mov
push
std
mov
and
xcrypt-ctr
cmpsl
fisubrl
inc
js,pn
inc
lahf
cltd
ss
je
bound
fs
jne
loope
subl
ret
je
and
in
mov
aaa
cld
pop
push
sub
into
and
sub
neg
jne
cmc
push
icebp
mov
xor
movsl
xor
lahf
jle
dec
sub
pop
xchg
jecxz
fnsave
push
int3
lahf
cmc
xlat
dec
push
mov
and
mov
shll
mov
xor
sbb
xchg
iret
inc
aad
fbstp
fidivrs
movsb
pop
xchg
dec
mov
fwait
jne
aaa
std
inc
pop
ja
ja
or
daa
fcmovnu
add
cmpsl
nop
stc
idivb
xor
pop
fnstsw
fisttps
mov
adc
cwtl
fimuls
push
push
and
sub
dec
xchg
cltd
je
add
push
rorl
or
lods
sub
or
dec
ja
into
or
psrad
inc
sti
aas
mov
adc
mov
cmc
jp
cmpsb
int
sti
cmp
mov
sbb
fndisi(8087
xlat
loopne
mov
sub
push
scas
stc
mov
hlt
or
shl
and
mov
sub
popa
jb
push
jbe
rolb
mov
and
push
jl
ret
mov
movsl
je
rcrl
pop
test
pop
out
cmp
push
push
bound
test
aas
rclb
data16
and
js
mov
or
add
xor
pop
xchg
idiv
ljmp
testl
btc
pop
mov
cmp
pop
cmp
ss
dec
cvtss2si
cmp
iret
cltd
sbb
int
xor
xlat
push
insb
and
outsb
xlat
jp
sub
rcrl
mov
jle
jle
subl
push
pop
pop
xor
clc
or
xchg
jnp
xor
or
dec
out
test
mov
test
xor
sbb
inc
pop
fbld
sub
push
into
decl
out
gs
testl
and
das
and
test
xchg
jo
jae
xor
imul
aad
call
sub
adc
ss
int3
mov
mov
sub
inc
sub
repnz
pop
cwtl
cmp
add
adc
push
fdivrl
or
pusha
jge
div
nop
fsubrp
ss
dec
pop
std
or
inc
lods
aas
adc
movsl
pop
or
in
and
movb
leave
fnstenv
xchg
adc
mov
jge
inc
fdivs
mov
adc
xchg
out
in
xchg
xor
cmp
xchg
cwtl
icebp
pop
mov
sbb
mov
fwait
or
jg
jno
inc
xorb
mov
fs
xor
addl
mov
adc
xor
mov
out
lods
shlb
jg
or
xchg
jno
repnz
cmpsb
jno
mov
lods
push
sbb
lods
jl
sahf
inc
scas
jnp
mov
mov
xor
out
jmp
in
mov
mov
test
push
imul
jne
jne
lea
cmp
iret
mov
pop
stos
dec
xchg
jb
nop
sub
and
fcoms
lret
aas
mov
jnp
sub
shr
aas
ret
repz
add
cwtl
pop
inc
lret
cli
stos
jl
loope
sbb
mov
outsl
adc
push
and
icebp
push
dec
cmp
sbb
pop
in
lret
pop
aam
dec
xor
loop
pop
mov
xor
popf
sub
fnstcw
arpl
lahf
dec
xor
push
lea
push
inc
aam
cld
into
xchg
xchg
leave
mov
lahf
xchg
inc
sbb
push
shll
daa
dec
add
mov
sti
add
cmpsl
outsb
xchg
push
jns
dec
ficompl
adc
cmc
jb
pop
imul
iret
in
inc
mov
test
add
jmp
dec
sti
mov
xor
daa
add
enter
pop
xchg
xchg
arpl
dec
adc
mulb
ret
insb
rcl
ret
xor
cmp
rcll
jae
sbb
add
ret
and
int
pop
push
ja
pusha
ss
ljmp
inc
push
test
dec
cmc
jg
jo
pop
or
sbb
cli
inc
clc
leave
int
bound
lock
xchg
jecxz
and
mov
mov
ja
mov
push
in
pop
xchg
lcall
push
jbe
shll
lret
cmp
and
inc
jnp
jne
or
mov
sub
lods
jb
leave
repnz
sub
sbb
jnp
adc
push
push
ja
push
insl
lods
cmp
mov
mov
aas
fs
pop
and
cmp
sbb
mov
mov
xlat
movsb
add
out
jbe
sbb
addr16
rorl
and
enter
loopne
loopne
or
gs
pop
scas
ljmp
mov
jae
or
pop
sub
sub
push
add
jl
in
leave
ja
aad
ret
xor
xchg
mov
int3
js
hlt
jo
cmp
xchg
popf
js
insl
adc
inc
cmpl
sub
mov
xchg
stos
cmpsl
sub
mov
push
dec
sbb
add
mov
ja
pop
lock
pop
jmp
inc
and
sbb
dec
das
fwait
nop
mov
jl
push
outsb
lahf
fcmovnu
jne
clc
xchg
loop
insl
lds
xchg
mov
jno
mov
loop
popf
fldl
dec
cmp
stos
subl
fwait
and
cltd
in
inc
mov
dec
test
pop
loope
xor
sub
mov
push
mov
lahf
and
push
pushf
ja
std
sbbb
icebp
popf
mov
jl
inc
jle,pt
add
repz
rcrl
jg
fmuls
mov
adc
aas
imul
enter
mov
incb
inc
ss
out
inc
not
ficoms
fptan
dec
ljmp
js
arpl
mov
push
inc
pop
pop
push
push
les
lret
xlat
hlt
lods
jbe
pop
mov
scas
sbb
leave
mov
xchg
rcll
cmp
fistpll
dec
mov
or
shlb
fcoms
xchg
mov
or
inc
fcmovb
mov
into
dec
push
push
fs
mov
sbb
fisttpll
fsubrl
xchg
out
adc
sbb
fcmovb
stos
and
xchg
pusha
les
or
dec
repz
lahf
cld
sti
cmpsb
pop
repnz
push
rorb
mov
test
mov
gs
sbb
push
jmp
sub
push
test
mov
dec
jge
push
hlt
push
pop
daa
rclb
imulb
divl
in
pop
or
mov
lcall
lock
nop
dec
enter
inc
xor
push
mov
mov
dec
daa
repz
jmp
test
fisttpl
dec
add
test
lock
jmp
fwait
cltd
fs
adc
pop
lods
cmp
mov
inc
loop
icebp
sub
pusha
adc
addl
sub
adc
xchg
fld
add
mov
mov
in
xor
sti
adc
mov
fadds
loope
scas
pop
sbb
sub
mov
int
add
lahf
or
mov
jecxz
ds
jp
loopne
scas
bswap
stc
push
mov
xchg
jge
test
inc
push
lock
and
arpl
sbb
inc
aam
mov
gs
in
push
mov
dec
fiadds
mov
ds
in
pop
add
ret
lock
sbb
sbb
mov
roll
nop
inc
sbb
or
ljmp
jmp
cmp
ljmp
pop
dec
add
jb
fwait
mov
sub
adc
mov
out
pushf
mov
cld
rcll
iret
popa
add
dec
int
ljmp
test
fidivl
inc
pop
cmp
push
cmc
inc
mov
nop/reserved
scas
and
and
iret
call
into
mov
inc
sbb
adc
stc
sub
xchg
lret
push
dec
fstps
fwait
jecxz
test
mov
mov
xchg
stc
adc
sub
out
adcb
cmc
mov
mov
cs
stos
add
aad
cmc
nop
test
hlt
mov
cwtl
sbb
cmp
xchg
and
notb
pop
dec
mov
dec
lock
mov
aas
les
add
push
adc
pusha
pop
clc
cld
sbb
or
aad
test
jnp
leave
imul
cli
or
cwtl
xor
test
nop
push
lods
lock
ljmp
mov
roll
fdivrl
int3
dec
outsb
mov
xlat
sbb
in
addl
test
stc
push
inc
lcall
lock
clc
out
sub
ret
xchg
aas
fdivl
ljmp
push
xor
in
popf
inc
jnp
xchg
cltd
sub
xchg
add
jnp
enter
xor
mov
push
bound
or
jle
pop
adcb
jo
lret
adc
popf
sbb
cli
mov
jae
dec
dec
int3
lods
cmpl
jns
nop
test
dec
sub
and
in
xchg
mov
mov
mov
or
and
xor
imul
add
sbb
push
push
test
les
lcall
pop
mov
pop
cmp
inc
jne
pop
cmp
xchg
mov
lods
mov
in
push
pushl
dec
mov
mov
loop
dec
mov
inc
push
sbb
int3
xchg
sub
or
adc
fucomp
shlb
ret
idiv
rorb
inc
repnz
jnp
or
in
inc
aas
test
mov
push
or
cmp
mov
pop
adcb
loop
add
dec
stc
cmp
stos
insb
cltd
dec
cmp
sahf
add
mov
stos
add
fld
jo
fs
or
jae
test
push
loopne
push
mov
ja
dec
cmpsb
enter
cmc
fimuls
les
cmp
lahf
cmp
cmp
xlat
bound
xchg
rcrl
nop
lret
es
mov
addr16
jnp
pusha
bound
mov
fimull
pop
mov
cmp
or
test
inc
add
mov
popa
xchg
out
jae
aad
mov
jg
scas
fldt
mov
rol
sbb
ja
inc
inc
add
push
jnp
mov
jmp
imul
or
push
aas
dec
pop
mov
or
sbb
pusha
shll
sbb
out
jmp
movsl
test
mov
sahf
loop
ret
and
lock
mov
xchg
xchg
rorl
movsl
filds
jns
stc
push
in
push
stos
mov
orl
or
clc
out
jb
cmpsl
mov
add
stos
cld
sub
stos
leave
stc
inc
pop
inc
pop
test
jecxz
popf
add
and
iret
ss
imul
int3
mov
pop
inc
mov
push
adc
add
mov
cmp
xor
arpl
adcl
jne
test
test
nop
imul
addr16
pop
lods
jge
lods
mov
jnp
lods
and
outsl
test
imul
test
lods
jp
mov
lods
sub
pushf
sub
jmp
lcall
out
ret
imul
jae
push
sub
fsub
jp
iret
sti
clc
mov
push
movsl
cs
loope
add
cmpsl
lret
adc
test
test
mov
and
mov
inc
inc
loope
aad
pop
mov
pop
push
fnstcw
xchg
int
lods
ret
pop
dec
idivb
jne
mov
cli
or
jp
lock
popf
loopne
and
rolb
mov
mov
out
mov
in
call
test
and
mov
add
cmpsl
pop
paddb
les
dec
cmpb
lods
ret
lock
and
stos
inc
adc
sub
cmp
popf
xor
aas
pop
sbb
xchg
mov
clc
lods
and
in
hlt
sarl
sarl
mov
ret
mov
mov
add
add
adc
lcall
std
pop
cmp
push
cli
sbb
mov
hlt
xor
clc
repnz
jp
mov
pop
movsl
mov
pushl
mov
jmp
subl
mov
rcl
sub
or
lea
int
inc
mov
cmpsb
adc
ljmp
mov
sbb
stos
sbb
mov
sarb
cltd
mov
adc
fcompl
add
repz
sbb
dec
or
addb
lock
adc
push
jae
icebp
roll
bound
imull
pop
mov
pop
jb
dec
dec
push
lods
push
mov
dec
enter
test
xlat
imul
lods
lea
ret
insl
insl
push
cld
add
in
or
mov
clc
sbb
ljmp
dec
inc
fcoms
jge
out
aad
mov
aas
lret
movsbl
inc
ret
out
mov
push
ja
cmp
jne
add
push
out
mov
push
cli
hlt
js
pop
scas
cli
mov
in
rcrb
cli
xchg
not
sub
in
sbb
jle
push
inc
cmpsb
test
xchg
cmp
es
insb
mov
and
subb
pop
dec
scas
loopne
pop
pushf
dec
loopne
js
xor
adc
cmp
mov
xor
cmp
shrb
pop
push
inc
scas
jmp
xor
pushw
pop
cmpsb
movb
xor
out
sti
sbb
adc
adc
mov
xchg
outsl
std
pop
mov
dec
popa
out
sub
cltd
or
push
clc
pop
popf
mov
int
xchg
stos
pop
xchg
mov
lea
sbb
mov
fnstcw
mov
inc
mov
mov
cld
aam
scas
fists
pop
inc
cmp
pop
xchg
jmp
push
test
aas
jle
gs
inc
insl
sahf
inc
inc
out
lret
lret
xor
repz
int3
inc
pusha
cmp
mov
dec
push
fidivrl
mov
jecxz
jo
test
mov
adc
pop
jae
psubusb
mov
outsl
cmc
push
out
stos
xchg
dec
dec
dec
adc
pop
mov
mov
lret
add
or
cltd
out
les
pop
insl
test
dec
xchg
cmc
cmp
add
mov
inc
lcall
dec
fisubl
jb
and
pop
sub
mov
add
or
jecxz
jnp
lret
add
adc
and
fdivs
lea
mov
push
and
xchg
xchg
jl
fsubs
data16
ja
adc
pop
mov
sbb
inc
pop
mov
test
jl
push
push
lds
and
push
xchg
ret
or
imull
pop
mov
mov
mov
mov
jno
ret
mov
mov
int3
lock
fcmovnu
insl
imulb
scas
jle
sub
inc
lock
or
ret
push
sub
pop
dec
mov
push
jge
jno
fisubrl
and
icebp
inc
push
lock
aam
pop
inc
jnp
shl
pcmpgtd
dec
sbb
aad
mov
gs
add
mov
jne
mov
js
cmp
test
lea
rolb
sub
ss
push
fsubrs
out
int
bound
call
add
jecxz
mov
insb
push
xor
mov
jno
jge
cwtl
add
orl
mov
or
pop
js
jge
int3
mov
jb
cs
and
pop
jne
shl
xor
adc
test
outsb
xor
nop
and
pop
fsubrs
cmpsl
aad
push
sbb
cmpsb
fisubrl
shl
roll
cs
add
sub
jb
pop
xor
xor
fidivl
jne
add
iret
inc
mov
repz
cmpsb
stos
mov
xor
mov
add
repz
pop
dec
xorb
sub
xor
dec
push
cmpsb
rolb
mov
adc
jne
pushf
xchg
cltd
add
ret
mov
and
loop
xor
jne
repz
pusha
mov
ljmp
aad
mov
fwait
jnp
out
dec
xchg
mov
loop
rol
push
xlat
cmpsl
cmpsl
sbb
sbb
out
jno
cwtl
imul
outsl
mov
push
pop
ljmp
mov
mov
ds
insb
rcrl
and
and
dec
push
push
or
ficompl
mov
popa
dec
gs
xchg
flds
cmp
lret
sub
outsb
es
xlat
sbb
cwtl
cmp
and
inc
in
sub
pop
pop
shl
int3
xchg
xchg
xchg
cmp
or
clc
repnz
jno
lods
fsubrs
je
shll
out
in
mov
roll
loope
subb
sub
sbb
sbb
push
sub
mov
mov
nop
loop
sbb
inc
dec
jmp
jb
sti
test
jnp
mul
ss
push
repnz
jge
sbb
push
jo
loope
pop
aaa
dec
pop
push
and
in
fstl
insl
mov
aam
pop
fcmovne
xor
mov
popa
call
sub
fs
jl
imul
lods
jae
in
mov
mov
iret
lret
mov
cmp
outsl
mov
movsb
cmpl
pop
sub
out
jbe
stc
lea
mov
cmp
adcl
andb
lcall
and
mov
sbb
fdivr
cmp
lahf
cmp
mov
sub
out
les
aad
fnstcw
sbb
or
in
cmp
decl
notb
ret
rol
xchg
mov
loop
and
sub
movsl
adc
aaa
cmpsb
sub
inc
insl
pop
or
mov
xchg
mov
pusha
mov
mov
aaa
test
jl
nop
repnz
lods
push
xchg
cmpsb
loop
loope
inc
mov
jns
jne
pop
sbb
jle
xor
fs
mov
test
notb
add
and
lcall
cwtl
and
scas
lods
xchg
add
nop
mov
test
xchg
rolb
mov
lock
push
jbe
mov
mov
ret
out
push
call
repnz
jmp
inc
pop
jg
call
cmp
mov
lldt
sti
cld
arpl
dec
push
push
ret
xor
movsb
jmp
cltd
jnp
cmc
mov
cmpps
movsl
cmp
scas
data16
in
dec
in
std
cltd
mov
rcl
sub
mov
bnd
mov
xor
out
mov
iret
jle
stc
sub
mov
enter
push
dec
lods
jns
dec
mov
or
adc
ljmp
stc
leave
cltd
in
push
pop
sbb
jae
push
adc
sti
or
mov
fwait
insl
mov
lock
popa
push
inc
sbb
fildl
daa
mov
in
sub
or
loopne
pop
inc
add
shl
sti
sub
sahf
pop
stc
cmp
cmp
dec
push
jb
lods
test
loop
mov
das
inc
xchg
jns
ds
in
jae
cmp
jns
lds
add
and
jno
jae
sbb
roll
icebp
ljmp
in
int
arpl
or
lcall
sbb
mov
cmpsl
mov
call
ja
leave
push
mov
add
jg
jae
add
test
subl
lea
cltd
jmp
xchg
orb
ret
lcall
sbb
push
loop
pop
xor
mov
repnz
and
imul
movsb
cmp
adc
dec
mov
mov
pop
sahf
jnp
sub
into
in
mov
std
lahf
cmp
repnz
mulb
add
jb
imul
sbb
add
dec
push
sbb
xchg
loope
pop
cwtl
add
and
jnp
nop
sub
mov
sbb
sbb
jbe
sarl
lods
sbb
fmul
pop
movsb
mov
xchg
f2xm1
mov
push
mov
sarb
xor
divb
push
psubsb
mov
push
loope
les
ret
xchg
or
test
push
movsl
test
xchg
and
adc
ror
dec
negl
sbb
mov
inc
cwtl
push
inc
test
in
test
daa
loop
adc
xor
inc
lret
enter
out
rclb
xchg
inc
xchg
pop
add
pop
lds
pop
shlb
push
mov
aas
xor
push
xchg
xor
push
cmp
adc
jp
outsb
out
pop
jae
adc
sbb
ss
xor
movl
inc
cmpsb
incl
inc
lds
mov
inc
imul
add
popf
adc
shr
add
dec
jo
cmc
cwtl
mov
lds
js
sbb
or
das
das
stos
cs
cmc
aad
ret
sub
jno
mov
lret
mov
in
xchg
or
jne
rolb
jecxz
std
es
rcrl
aam
push
jge
jns
or
sbb
mov
loopne
ffree
icebp
inc
inc
pushf
or
jno
cmp
mov
pop
dec
mov
fimuls
dec
xchg
xchg
xchg
adc
pusha
jmp
jmp
inc
jo
hlt
or
push
xchg
popa
inc
sahf
push
imul
jne
pop
mov
pop
js
loop
pusha
inc
movsl
inc
mov
mov
adc
and
dec
xor
jle
les
into
scas
fwait
into
fs
in
arpl
xlat
push
xchg
push
fsubs
aas
icebp
jnp
loope
jecxz
xchg
mov
cmc
sbb
xchg
lahf
popf
clc
push
ret
loope
into
inc
fisttpl
cli
in
mov
xchg
call
mov
repz
mov
add
sub
push
addr16
fldcw
xchg
js,pn
cmp
inc
insb
arpl
test
push
add
adc
pop
mov
icebp
clc
cld
out
fwait
clc
mov
xchg
std
pop
inc
mov
cmp
lods
movsl
push
and
fnstenv
or
aam
and
jmp
mov
sub
shrl
aas
jns
pop
dec
pushf
cmp
sub
ret
test
ror
sbb
push
mov
jmp
mov
in
es
clc
rcrb
dec
in
or
fsub
sub
imul
inc
push
xor
movsb
repz
pusha
sahf
jnp
xor
add
cmp
mov
push
xorb
pop
inc
data16
mov
out
mov
push
mov
adc
mov
add
js
push
test
mov
into
xor
mov
pop
jmp
dec
iret
shll
cmp
sub
cmpl
movntps
pop
pop
mov
xchg
push
dec
pop
dec
jge
test
in
mov
sbb
pushf
iret
movsb
dec
call
lret
insl
loope
jns
xor
lock
sbb
sub
mov
push
push
fidivl
pop
and
or
jno
push
sbb
push
lods
push
icebp
lcall
jb
mov
ljmp
jmp
push
cmc
xor
xorb
adc
popa
in
outsb
icebp
aas
sbb
sahf
xlat
dec
sub
fneni(8087
icebp
pop
and
sbb
sbb
jae
jmp
mov
ror
je
adc
icebp
xor
loope
stc
shr
ja
jle
and
push
pop
add
mov
ss
cmp
adc
rorl
into
icebp
sbb
xor
iret
scas
cmp
cmp
dec
pop
mov
fucom
inc
stc
or
jno
leave
jnp
sar
lods
add
addl
stos
adc
mov
pop
out
dec
inc
daa
jge
mov
popf
sbb
insb
inc
sub
lds
arpl
outsb
adc
lret
outsl
or
mov
nop
pushf
out
mov
out
mov
jp
jns
add
jle
repnz
test
dec
and
sbb
xlat
push
lock
xchg
xor
loop
test
mov
push
xor
push
jp
test
mov
pusha
frstor
mov
mov
mov
push
and
enter
cld
cld
test
pop
jns
loope
mov
hlt
pusha
push
pop
int3
and
jns
pop
mov
sbb
insb
cmpb
lret
shrb
xchg
test
emms
arpl
iret
cmpsl
fiadds
fcmove
fbstp
and
cmpsl
scas
aaa
stos
test
jo
push
repz
roll
subb
out
xchg
pop
stos
add
xor
dec
pop
inc
test
mov
loop
cmp
xchg
pop
sti
adc
lret
ret
scas
ds
loope
pushf
inc
pop
test
mov
je
or
mov
aas
cmp
push
adc
sbb
out
arpl
adc
out
or
es
xchg
inc
outsl
jnp
es
pop
sbb
hlt
pop
ret
jb
dec
xchg
jb
aam
cmc
adc
and
xchg
pop
andl
rcl
jns
lcall
sbb
xchg
push
or
mov
mov
mov
shl
fwait
jae
rclb
in
popa
dec
les
push
das
adc
aaa
mov
mov
push
mov
pop
and
bound
ja
pushf
in
xchg
and
pusha
sub
xchg
aam
in
call
jmp
icebp
lret
ds
mov
or
mov
daa
sbb
add
and
lea
adc
stos
int3
and
push
add
outsl
out
mov
ficompl
shll
fdivl
mov
mov
outsl
aad
xlat
mov
add
fcomp
xor
cmp
dec
ljmp
add
push
scas
dec
nop
seto
lret
imul
push
movsl
mov
out
mov
cli
and
push
xor
cmp
pop
lock
dec
repnz
pop
add
mov
fwait
sbb
push
and
icebp
sbb
cmc
jne
test
mulb
gs
inc
add
mov
popf
push
fdiv
int
decl
loope
cmp
adc
sub
ret
pop
movsl
jns
jno
push
leave
xchg
inc
mov
les
jle
adc
lahf
push
and
rolb
xlat
gs
jp
imul
rorb
jge
mov
sbb
mov
jmp
inc
inc
xchg
imul
pushf
push
jae
loopne
adc
inc
ss
out
sti
add
add
add
xor
xchg
xor
xlat
or
adc
in
lock
dec
mov
cld
pop
mov
subl
sub
fwait
push
sbb
pop
aaa
mov
lahf
or
into
inc
and
mov
outsl
test
add
sti
int
out
add
movsl
cmp
jge
inc
out
hlt
cmp
addr16
inc
and
jae
mov
fsts
add
sbb
mov
mov
das
js
add
jbe
outsl
fstpt
fimull
incb
mov
mov
ja
cmp
jp
hlt
cmp
jbe
mov
int
fwait
mov
inc
lea
adc
flds
stos
pop
inc
mul
stc
and
push
pusha
movsb
xor
cmp
sub
sti
inc
arpl
xor
lahf
pop
stos
dec
ret
jns
pop
cmp
add
cmp
int
jns
loope
xchg
std
mov
shlb
jg
dec
jno
push
add
push
gs
add
idivl
sbb
sub
cmp
mov
ljmp
mov
push
and
test
push
je
cmp
lret
pop
add
aad
repnz
int
scas
nop
in
sbb
and
in
into
mov
lods
in
inc
jns
sub
and
outsl
fisttpll
push
mov
adc
jge
push
add
mov
pop
sahf
es
mov
xorb
ja
adc
pushf
incl
xor
movsb
test
loope
or
sbb
scas
xchg
inc
cld
rcrb
sti
pop
fisubl
out
aas
or
lahf
sub
ja
xor
stos
cvtps2pd
loop
rclb
jns
pop
adc
clc
push
das
sub
test
pop
testb
mov
xchg
sub
mov
dec
mov
adcb
cmc
push
inc
jne
aad
es
pop
and
pop
iret
or
mov
mov
mov
sahf
les
and
xchg
cwtl
les
scas
jno
imul
stos
push
dec
mov
lcall
and
pop
cmp
push
pusha
das
add
lods
test
dec
push
adc
fisttps
and
mov
push
mov
or
mov
adc
sbb
push
ss
iret
jg
cwtl
cmp
push
in
mov
xor
inc
mov
push
out
jge
cmpsl
xor
scas
stos
inc
cmp
xchg
sti
inc
pop
xchg
mov
jo
in
inc
jne
test
push
jbe
jmp
mov
mov
inc
xchg
test
js
dec
repz
scas
ret
mov
stos
clc
xchg
jle
in
jle
sbb
or
add
lcall
ret
mov
xor
pop
in
adc
fwait
shr
lret
scas
push
mov
dec
sub
aaa
mov
jp
shlb
sub
mov
xor
mov
xor
rorb
dec
test
ficompl
cmp
rorl
push
shl
jl
dec
das
inc
push
in
clc
int
sub
out
mov
sub
idivl
sbb
adc
bound
xchg
xor
and
fsubl
sbb
xlat
sub
sbb
cld
push
ret
dec
icebp
add
jb
in
ss
fisubrs
dec
mov
mov
xchg
cli
pop
cmpsb
xchg
shrl
add
xor
mov
mov
push
jp
icebp
sub
mov
mov
lea
nop
call
push
es
out
dec
loop
dec
sub
mov
stos
fwait
push
xchg
mov
imul
jg
or
sub
sub
shl
movsl
cltd
loopne
fstl
sub
push
add
int
jnp
fs
adc
cmpsl
test
lret
jne
aad
aas
sarl
inc
movsl
push
vpshufhw
mulb
or
clc
icebp
test
in
es
push
push
mov
and
lea
jmp
pop
and
subl
mov
cmc
sub
fmull
fstpl
repz
imul
sbb
hlt
push
mov
jb
mov
sbb
mov
cld
lods
ret
xchg
sub
ret
xchg
icebp
or
into
xor
mov
fcoms
push
lcall
test
sarl
rcrb
dec
cmpsl
insl
cmpsb
aas
sub
inc
adc
add
mov
pop
mov
repz
mov
scas
test
pushl
out
je
and
mov
fstl
in
stos
push
mov
or
mov
ret
mov
mov
lock
mov
sub
test
es
pop
stos
lret
mov
xchg
loop
test
out
mov
sub
sbb
push
pop
insl
rol
popf
cmpsl
cltd
ds
sub
cmp
lods
push
dec
xor
xor
daa
sub
call
cmp
cmpsb
and
cmp
sbb
cmc
ds
int
fmuls
int
fdivrs
pop
sti
sahf
rclb
push
repnz
xchg
repz
cmp
mul
xor
cli
ret
dec
and
cwtl
add
dec
outsl
insl
outsl
daa
cmp
cmp
or
pop
outsl
xchg
sbb
sarb
push
mov
imul
push
cmpsl
ljmp
jo
roll
cli
cmp
popf
mov
loop
sub
daa
xchg
daa
inc
mov
stos
jmp
enter
cmpsb
push
inc
push
pop
adc
es
xor
push
jae
dec
pop
insl
pop
xchg
fsts
scas
jle
daa
cmpsl
jg
popf
imul
pop
adc
sarb
iret
and
test
fsts
xchg
mov
sbb
xor
fimuls
pop
jecxz
rclb
dec
loopne
loop
sahf
inc
sbb
test
adcl
cld
dec
sbb
add
mov
das
je
xlat
add
xchg
sahf
mov
lods
xchg
ror
clc
fmuls
adc
ljmp
push
repnz
insb
inc
mov
mov
or
pop
sbb
in
lock
nop
mov
adc
movsl
add
int3
mov
sub
push
sti
inc
mov
xchg
jnp
sbb
fnstsw
sub
out
call
xchg
dec
mov
mov
cmc
lock
dec
shrb
pop
mov
stc
rcr
scas
jo
aaa
push
or
jg
imul
fiaddl
pop
pop
cs
sbb
mov
cmp
fistl
gs
pop
arpl
xor
pusha
shrb
stc
mov
cli
fmuls
and
dec
lods
or
mov
cmp
or
sti
mov
out
jb
adc
xchg
fistpll
or
shll
or
mul
arpl
dec
ret
mov
cwtl
add
sub
xorl
pop
fwait
xor
and
mov
push
repnz
mov
lcall
inc
sbb
faddp
sub
mov
fwait
xor
jne
movsb
mov
pop
pandn
arpl
jge
jp
pop
fwait
dec
loopne
in
cmp
sbb
push
adc
xchg
pop
dec
out
in
sbb
je
inc
mov
jo
scas
jo
icebp
xchg
push
ficompl
cmp
jns
jge
mov
fwait
pop
xchg
adc
int3
push
mov
xchg
sub
das
in
mov
mov
mov
cmpl
mov
dec
pop
addl
xor
shll
popf
int
scas
mov
insl
xchg
jp
sbb
mov
xor
or
mov
mov
loop
lret
mov
xor
lds
push
or
js
int
pop
dec
mov
mov
cmpsb
xchg
jmp
xor
adc
mov
cmc
mov
mov
adc
pshufw
adc
mov
dec
fimull
xor
adc
mov
push
push
std
jbe
xor
adc
push
aaa
lds
cmp
sub
movsl
pushf
cmc
adc
cmc
cmp
add
sub
shll
enter
pop
js
cltd
pushf
dec
jb
inc
xchg
push
lds
outsl
and
lret
les
scas
push
test
mov
enter
cmp
jae
dec
stos
icebp
popf
pushw
sub
mov
pop
pop
push
mov
arpl
dec
bswap
and
shlb
scas
lret
aad
pop
mov
cmp
clc
mov
sbb
add
inc
outsl
fsubrs
divb
popf
stc
dec
lcall
xlat
scas
clc
mov
mov
repz
sub
dec
mov
push
adc
lods
lea
orl
inc
push
jp
or
es
aaa
ltr
pop
jl
push
lods
sarb
mov
xchg
adc
add
add
clc
cmpb
std
cmp
sarl
xchg
mov
aaa
lds
ds
test
pop
mov
loop
lock
mov
inc
sbb
xchg
in
in
into
mov
ljmp
mov
daa
dec
leave
stc
jmp
xchg
mov
pop
mov
jge
xor
subl
mov
in
xchg
or
in
pop
lock
hlt
or
outsb
add
lea
mov
push
inc
repz
pop
push
dec
dec
out
ficompl
scas
push
test
push
xor
jl
andl
ljmp
in
cmp
mov
inc
cmpsl
into
dec
xchg
mov
es
call
push
jmp
xchg
pop
arpl
mov
or
mov
xchg
loopne
pop
xchg
pop
fwait
aam
call
push
push
pop
pusha
scas
fdivs
mov
dec
stc
movl
mov
mov
xchg
rolb
aam
xchg
les
sbb
icebp
out
jp
mov
repz
lods
ret
loope
test
jb
out
aaa
push
add
out
or
pusha
sub
leave
out
or
test
sub
mov
add
pop
data16
dec
loop
jb
jecxz
shlb
mov
aam
mov
rep
mov
pop
cmp
shll
cmpsl
mov
xchg
mov
and
fsubr
test
or
mov
jb
je
push
lret
pop
cwtl
push
pusha
pop
xchg
push
icebp
mov
or
push
bound
aaa
iret
ffree
mov
mov
jo
int3
xchg
loopne
push
cwtl
sub
rcrb
scas
negb
popa
fs
cmp
xchg
push
and
shlb
pop
fwait
test
lods
xchg
test
lds
fcoml
insb
stos
dec
mov
mov
add
inc
clc
cwtl
jl
js
ret
adc
ja
mov
mov
sub
xorb
jmp
mov
mov
out
fs
sbb
pop
mov
test
hlt
inc
in
xor
add
xchg
dec
mov
jo
fldenv
push
clc
rcl
or
test
lea
jbe
xor
jmp
and
cmpsb
add
inc
stos
imul
xor
and
dec
mov
xor
sub
stos
call
stos
sub
push
pop
in
out
shlb
xor
cmc
xor
stc
mov
push
nop
xchg
movsb
mov
adc
jb
imul
or
push
and
stos
add
out
imul
inc
push
jae
mov
and
aas
pop
dec
xchg
pushf
call
add
and
loop
dec
repnz
cmp
mov
rcrl
repnz
xchg
inc
test
lds
mov
bound
popa
xor
scas
dec
out
lock
outsb
push
sbb
dec
xchg
push
mov
mov
lret
into
push
xchg
lds
mov
fadds
or
push
push
daa
pop
pop
xchg
push
dec
lcall
rcll
pop
mov
cmp
arpl
lods
and
dec
mov
mov
pop
or
stc
push
sub
or
or
mov
test
pop
ret
sbb
adc
pop
pop
out
adc
imul
sti
std
mov
sub
les
test
or
mov
rcrl
sti
lldt
repnz
lea
dec
lods
jbe
repnz
lea
nop
out
xchg
push
cmp
ret
xorb
mov
mov
adc
jns
shlb
loop
mov
imul
hlt
push
outsb
inc
shl
icebp
ret
and
dec
mov
push
lock
lcall
fcmove
in
xchg
jnp
add
xchg
in
push
sub
fisubl
cmovl
es
xor
ds
lock
and
movsl
dec
push
clc
loope
fistpll
adc
xchg
sbb
mov
pop
push
xor
and
xchg
shrl
inc
push
stos
fisubs
daa
mov
jle
and
dec
cmp
xor
stos
loopne
jno
hlt
insl
mov
divl
mov
pop
data16
cmp
lods
xchg
push
pop
test
cmc
dec
sahf
bnd
test
movsl
xchg
or
sub
mov
jmp
call
pushf
mov
push
xchg
mov
in
rol
in
jae
and
or
lods
les
sbbl
daa
cmp
sbb
hlt
aad
sbb
clc
enter
cmp
dec
adc
ret
jnp
icebp
xchg
pop
cli
arpl
aaa
push
cmp
ljmp
push
popf
nop
aaa
imul
adc
lcall
mov
aad
push
xchg
data16
out
lock
xchg
xchg
int
inc
inc
pop
ja
popf
ljmp
lods
jge
dec
pop
push
pop
jecxz
cmp
in
fnstcw
xor
dec
jnp
sbb
and
fistl
outsb
and
cmpl
dec
popa
jns
xor
push
sbb
pop
fstpt
mov
push
push
mov
push
cmp
jg
add
out
rcll
in
dec
movsl
ficomps
lock
sbb
popf
xchg
jg
cmp
push
cltd
cmc
daa
pop
jle
or
sub
mov
popa
cmp
jge
aas
in
sbb
out
inc
shrb
cli
sbbb
pop
movsb
jno
fcompl
fldz
cmp
jns
adcl
in
pop
popa
jge
add
adc
imul
sti
ret
dec
xor
mov
out
sbb
iret
jle
sahf
push
push
adc
jmp
bound
jmp
int3
add
dec
stos
xor
call
pop
and
xchg
pop
inc
iret
adc
push
cmpsl
sub
data16
popa
shll
jg
pop
push
scas
dec
sbb
pop
mov
es
pushf
dec
lods
addb
pusha
or
ret
push
fndisi(8087
dec
pop
or
and
dec
xchg
int3
lahf
cmp
jmp
xor
lahf
cmp
cmc
fcom
imul
dec
into
cld
add
add
jnp
pop
push
mov
mov
mov
repz
xchg
mov
das
lret
mov
fstps
jmp
pop
xchg
ljmp
cmp
cld
or
sarb
ss
insb
mov
mov
adc
mov
adc
jecxz
and
and
lret
xorl
sti
sbb
testb
repnz
sbb
rcll
pop
dec
fwait
es
adc
cmp
icebp
sti
repz
cmp
out
lcall
imul
repz
cmpsb
jne
and
repz
int3
sti
inc
sti
pop
jmp
mov
scas
xchg
mov
out
sbbl
dec
mov
dec
mov
mov
rorl
in
mov
jle
push
cmp
adc
push
adc
cmc
sbb
pop
dec
int
imul
inc
inc
test
mov
dec
popa
repz
pop
inc
push
rolb
test
sbb
hlt
and
cmp
push
xchg
jae
pop
push
mov
or
cmp
cmp
push
movsl
mov
inc
push
jg
cmpsb
lret
cmp
pop
pop
insl
sbb
xor
pop
mov
pop
or
jb
pop
xor
pushf
mov
add
push
outsb
js
ret
jle
add
fildll
sub
testl
sbb
xchg
cli
mov
jno
pusha
mov
movsl
jg
and
or
imul
cmpsb
add
xchg
pop
ret
icebp
or
sbb
xchg
add
push
cwtl
lock
xchg
xor
inc
cmc
lea
jge
ret
psrld
iret
jmp
call
xor
in
xchg
outsl
push
adc
add
add
sbb
jae
pminsw
xor
orb
movsl
xor
mov
in
repz
push
push
sub
sbb
cwtl
insl
lret
xor
dec
mov
or
int3
adc
insl
out
lcall
pop
fwait
push
cmp
cltd
insl
rcrl
jmp
rcrb
aas
data16
push
outsl
bound
add
xor
xor
or
testl
outsl
ret
mov
sbb
insb
test
sbb
mov
adc
push
hlt
dec
daa
pop
iret
mov
ja
jmp
fs
sbb
fsubs
iret
dec
jmp
fisttpll
fnstsw
inc
dec
push
xor
popf
lret
mov
dec
push
mov
mov
insb
out
pop
andl
xchg
fsubs
adcl
std
or
out
mov
sahf
push
mov
or
jns
sarb
xchg
int
data16
xor
mov
xchg
in
xor
mov
cmpsb
test
loopne
popa
cmp
std
cmp
das
mov
xor
addr16
mov
add
hlt
repnz
mov
and
add
mov
addr16
push
mov
pop
std
cmpsl
inc
jle
movsl
and
mov
lcall
fiaddl
sbb
popl
sahf
je
ficomps
jg
jno
sub
inc
jnp
fdivl
sbb
mov
pop
add
andb
mov
pop
popf
inc
sub
pop
ljmp
rclb
jne
lods
call
xor
insb
push
mov
add
push
jns
push
push
push
mov
arpl
sub
xor
out
push
and
mov
repnz
xor
lods
pop
sbb
inc
inc
aam
push
jnp
push
incl
cli
mov
test
scas
xor
repnz
loopne
je
jb
shrl
adc
mov
pop
adc
imul
push
cmp
jno
add
ss
jb
jnp
or
pop
xchg
inc
daa
out
jb
xchg
loop
gs
or
mov
lahf
add
mov
sub
popf
push
in
xlat
jmp
and
pushf
jo
int
scas
ja,pn
mov
dec
mov
cwtl
ja
xor
divl
xor
dec
das
orb
adc
jae
std
call
outsb
pop
mov
popf
cmpsb
jns
and
jmp
stos
mov
fwait
lods
shrl
cld
cmovo
jns
in
enter
test
or
pop
jne
lds
mov
icebp
jo
push
sub
lds
cmpsl
and
imul
inc
aam
cmp
orl
jne
sarl
sub
into
aas
mov
push
mov
test
test
pop
or
sub
stc
mov
cmp
pop
addr16
loope
mov
in
or
jmp
cltd
and
cltd
jecxz
cwtl
pop
sbb
jp
mov
lods
xchg
leave
inc
inc
xor
mov
es
call
dec
shrb
xor
mov
mov
cwtl
mov
lods
shl
movsl
test
inc
scas
mov
repnz
mov
insl
fistl
sub
adc
push
or
int3
xchg
mov
jo
xlat
mov
cld
shr
stos
fsts
adc
jb
cmp
sti
cmp
cmp
adc
cwtl
sub
and
inc
imulb
mov
sbb
mov
jbe
push
pop
mov
iret
pop
xor
hlt
and
neg
sarb
in
les
mov
sarb
call
lret
or
fcoms
ss
xor
lds
xchg
adc
pop
jl
test
mov
iret
xchg
inc
inc
roll
outsl
sbb
repnz
mov
jnp
pop
stc
mov
sti
test
in
hlt
dec
ret
mov
xlat
lcall
mov
jmp
xor
and
sarb
xchg
rcrb
gs
cmp
fwait
pop
pop
stos
ja
ljmp
mov
pop
or
xor
jge
push
repz
pop
mov
fdivs
or
mov
movsl
stos
dec
or
sbb
jle
or
call
loope
stc
test
push
out
add
test
shll
ljmp
mov
push
shll
jno
addb
arpl
adc
jmp
loope
cli
cmp
out
mov
insb
cmp
inc
cltd
and
xor
out
repz
dec
pop
cltd
push
cwtl
mov
aad
test
jg
cltd
push
lahf
jg
iret
scas
jnp
add
icebp
roll
and
xor
add
stos
mov
mov
xlat
dec
orl
jge
dec
fcomi
nop
or
lret
lods
pop
pop
movsl
gs
testb
test
cmp
cmp
add
mov
jle
jmp
mov
stos
mov
arpl
xor
jecxz
mov
popf
mov
int3
or
mov
or
and
jae
sub
lret
out
aas
imul
adc
and
and
mov
add
aas
repnz
cltd
ds
xchg
add
rolb
push
dec
adc
mov
jmp
js
mov
ds
test
and
mov
aad
sahf
mov
cmp
je
bound
add
clc
push
call
test
shrb
in
loop
clc
cmp
popf
lods
jbe
jb
scas
mov
nop
pop
stos
fdivrs
repz
push
cmpl
pop
xor
sbb
push
mov
cmpsl
bound
pop
or
dec
ljmp
and
mov
shrb
push
and
cmp
shll
mov
cwtl
xchg
inc
sbbb
cwtl
push
aaa
clc
mov
stos
cs
cmp
sbb
test
stc
repnz
sub
cmp
ljmp
gs
cli
sub
xor
mov
sti
push
fcmovu
or
movl
mov
dec
nop
lret
in
arpl
adc
adc
jge
js
lods
xchg
insl
loopne
sub
jge
pusha
or
xchg
ret
dec
fcomps
repnz
nop
test
daa
loop
dec
clc
push
hlt
scas
xor
out
fnstenv
dec
subl
sub
push
jns
data16
or
pop
fcomp
gs
fstps
pop
mov
adc
jb
and
cmp
inc
sbb
nop
jecxz
fs
in
add
add
fildl
rcr
lea
lods
inc
popf
sbb
out
les
pop
mov
xchg
subl
jnp
jns
pushf
cmpl
pop
jns
ds
pushf
xchg
pop
mov
rcrb
cmp
adcb
add
fsubs
scas
popa
mov
test
pop
dec
mov
mov
call
gs
dec
in
pushf
sub
cmpsb
cmc
fwait
lret
out
cmp
adc
xchg
or
push
adc
test
mov
movzwl
jns
lods
aad
out
and
xchg
xor
fdivrl
and
je
loop
ficoms
push
mul
xchg
dec
addr16
add
out
cmp
je
das
push
xor
sub
mov
mov
mov
mov
movsl
fdivp
sbb
inc
out
dec
cld
aas
imulb
mov
xchg
bound
xchg
mov
and
dec
movsl
xchg
fdivs
jle
dec
int3
int3
cwtl
mov
xchg
mov
leave
mov
pop
shlb
lret
outsl
jo
xor
sbb
fsubrs
lcall
dec
jns
lock
xchg
mov
stos
loopne,pt
push
inc
mov
pop
sub
inc
movsb
ds
mov
stos
inc
adc
leave
cwtl
mov
push
or
aas
inc
pop
add
mov
jg
lods
jl
arpl
daa
xor
sub
ret
xlat
mov
mov
out
cs
pop
mov
pop
mov
je
xchg
xchg
pop
fcmovb
mov
sub
push
lahf
cs
jo
shrl
jb
outsl
out
stos
in
push
pop
out
inc
adc
add
cmp
les
aad
leave
sub
push
lods
pop
cmp
xchg
into
mov
ja
sti
jecxz
cmp
jge
stos
cmc
pop
xchg
mov
mov
aas
jno
in
cmp
or
add
push
rep
pop
frndint
pop
cltd
xchg
cmp
sub
lock
cmpsl
insb
or
mov
mov
mov
inc
call
pusha
paddw
loope
xor
lahf
jp
fcoms
ret
fistl
lds
mov
xor
hlt
stos
inc
push
sbb
cli
add
cmc
sar
imull
mov
xorb
retw
dec
cwtl
out
ss
test
jno
cmpsb
jl
dec
xlat
icebp
ret
xor
lea
lcall
cli
jle
xchg
es
ret
cmp
jmp
add
ficoml
sahf
sub
dec
dec
stos
repnz
sarl
cld
jbe
daa
add
sbb
rcl
cwtl
xchg
shrb
into
pusha
add
push
lahf
fs
pop
inc
pop
push
inc
mov
test
scas
loopne
js
add
and
mov
sub
rorb
cmovne
in
outsl
bound
cmp
int3
pop
push
jo
hlt
adc
ffree
call
int
pusha
xor
int3
sub
mov
imul
int
xchg
xor
insl
repnz
mov
mov
push
xor
popa
push
sub
mov
out
std
cmp
fwait
int
pop
or
pop
out
sbb
pop
mov
and
pop
adcl
out
xlat
adc
shrl
test
call
jge
mov
xchg
test
subb
dec
sbb
push
in
cltd
je
add
mov
ja
pop
mov
adc
lcall
adc
frstor
addr16
dec
lea
push
movsl
xchg
fnsave
and
dec
mov
gs
push
insl
jo
mov
pushf
pop
sbb
ret
scas
add
outsb
and
cmp
jp
inc
push
or
pop
outsl
cmp
shl
aam
mov
aas
popa
lahf
ds
sub
andl
and
jno
jnp
inc
mov
cltd
shlb
adc
mov
inc
rcll
movsl
fistpl
int
lret
arpl
jl
sbb
sbb
mov
les
fucomi
icebp
inc
inc
cmp
xor
cmpsb
push
pusha
xlat
in
add
or
fnstsw
stos
mov
in
fidivrs
fstl
or
sbb
sub
arpl
lahf
scas
mov
test
test
ror
mov
cmp
in
add
and
cmp
xor
pop
jo
out
sbb
inc
cmp
lods
cmpsb
dec
outsb
stos
mov
dec
inc
push
add
push
mov
int
sbbl
adcb
mov
mov
dec
lock
xchg
fxch
adc
jne
cmp
add
mov
bound
fldenv
mov
inc
push
sarl
imul
shl
repnz
sub
add
fmull
test
fldt
adc
cmp
adc
fistps
out
and
out
rcl
dec
push
into
jae
rorb
stos
jb
pop
call
cld
mov
mov
inc
popa
and
mov
fwait
subl
cs
or
xor
lahf
push
xchg
scas
push
loopne
lret
sbb
sahf
cmp
test
jmp
sbb
jae
cs
mov
fiadds
shll
and
paddusw
mov
aad
xchg
mov
andb
jae
add
jb
mov
les
testl
js
push
cmp
adc
adc
sub
xchg
push
es
add
mov
mov
dec
or
test
es
mull
nop
rcr
mov
das
sbb
mov
lea
pop
sub
or
adc
jecxz
setg
sub
xchg
or
jae
dec
cld
mov
mov
lretw
and
add
cmp
sub
and
insb
fnstsw
inc
inc
and
rcll
sbbb
add
jae
add
inc
mov
fdivrl
mov
jno
mov
pop
jl
stos
fnstsw
jb
imul
sub
xor
imul
or
in
push
testb
xchg
in
rcll
jle
push
jge
mov
or
adc
stc
pop
cmpsb
and
enter
push
lock
faddl
addl
ljmp
mov
mov
xchg
int3
mov
jge
fcom
fbstp
pop
pop
sub
sub
add
outsl
loop
pop
mov
jle
lcall
shlb
inc
pop
mov
int3
cmp
jo
mov
dec
mov
cmp
sub
cmc
dec
push
clc
xchg
pushf
mov
or
mov
push
push
and
jbe
adcl
ret
insb
pushf
stos
outsb
das
cmp
dec
push
enter
xorb
in
fs
jnp
adc
sahf
mov
ds
pushw
push
gs
pop
fldt
add
inc
inc
js
lds
sub
or
loope
lcall
test
imul
popa
or
ret
and
sbb
xchg
enter
icebp
lods
insb
lods
enter
cmpsl
dec
or
pop
add
mov
and
jecxz
scas
sbb
addr16
ret
imul
aam
pop
gs
loopne
wbinvd
int
dec
mov
dec
push
movsb
xor
or
push
rol
add
dec
push
pop
scas
mov
imul
mov
aaa
add
jb
push
adc
push
call
addr16
xor
iret
icebp
js
xor
imul
inc
sub
imul
jge
adc
shrl
lods
push
out
bound
xchg
or
and
mov
icebp
sbb
cli
pop
xor
cld
adc
add
test
jbe
jmp
enter
cmpb
pop
clc
mov
jae
rol
out
loope
sub
pop
pop
mov
mov
sarb
cltd
gs
and
icebp
fs
mov
cmp
dec
in
rcr
or
cmp
icebp
jp
fildl
lret
adc
mov
loope
jle
pushf
push
inc
mov
sub
sahf
pushl
outsb
enter
cmp
in
xor
push
inc
push
jb
das
fisttpll
lock
lods
ds
out
inc
cld
lahf
push
jecxz
rcll
xchg
nop
outsb
cmc
or
sbb
mov
xlat
and
lds
xchg
in
and
push
out
and
stc
lds
aad
ds
ja
icebp
fsubr
int3
popf
xor
or
mov
xchg
dec
dec
pop
aam
lahf
pop
ret
imul
push
mov
mov
mov
dec
mov
jmp
jmp
bound
flds
iret
pop
outsl
cmp
imul
add
jno
stos
popa
xchg
mov
imul
test
jae
cmp
jno
in
negl
rorl
int
sub
das
decb
fwait
es
adc
pop
xchg
dec
jbe
sbb
outsb
sub
cmp
sub
into
pop
dec
popa
cmp
dec
adc
int3
test
cwtl
sub
mov
ret
arpl
imul
repnz
sahf
mov
pop
xchg
dec
and
dec
out
repz
add
cltd
pop
mov
enter
gs
ffree
mov
and
rol
inc
adc
ret
push
and
into
jno
jg
and
adc
stos
xchg
sbb
push
ss
and
sbb
out
push
sahf
arpl
or
lcall
movsb
and
xchg
xor
xor
data16
jb
push
dec
imul
pushf
push
and
fsubl
gs
pop
nop
faddl
outsb
jle
test
fcomp
iret
cli
xor
jg
dec
leave
jno
sarl
dec
mov
dec
inc
icebp
cmc
js
add
dec
cld
ss
out
mov
jnp
in
aad
ljmp
es
jbe
jge
mov
in
or
fs
push
daa
es
xchg
mov
arpl
xchg
mov
adc
into
aas
sbbl
movsl
pop
jecxz
test
cld
test
jl
pop
fs
xchg
mov
or
xchg
jae
in
pop
mov
imul
shl
pop
adc
xchg
sbb
mov
rorl
adc
push
adc
sub
xor
xchg
out
out
add
es
ficompl
cs
and
xor
jns
mov
fwait
xchg
dec
subb
aad
mov
repz
pushf
xchg
outsb
lds
push
inc
fwait
cld
mov
rolb
sub
in
push
sarl
and
dec
sbb
inc
mov
not
cmp
jle
pop
xchg
xchg
inc
push
pop
sub
sbb
mov
cld
fst
mov
push
inc
mov
call
jl
fwait
das
ja
adcl
jle
das
sbb
xor
dec
jnp
mov
fists
dec
ds
mov
je
dec
cmp
pop
xchg
jae
int
nop
or
cmp
pop
mov
and
inc
sbb
loopne
or
xor
jmp
out
sub
stc
xor
xchg
sbbb
aam
testb
nop
push
pusha
push
dec
mov
push
mov
mov
dec
adc
call
lcall
mov
cwtl
and
mov
xchg
loope
sahf
sbb
push
pop
xchg
in
lock
adc
idivl
cltd
lods
mov
xchg
shll
ret
cld
outsb
pop
sub
sbb
addr16
testl
inc
mov
or
inc
mov
push
jae
xchg
pop
or
hlt
sar
adc
mov
stc
mov
xlat
mov
push
mov
jbe
add
inc
and
jae
in
mov
clc
movsl
loope
inc
jae
aad
or
or
dec
cltd
enter
aas
enter
dec
fistpl
bound
push
mov
mov
xchg
and
and
inc
ljmp
clc
pop
and
and
std
dec
sub
loop
push
add
fdivrs
mov
adcb
repz
rorb
pop
push
prefetch
or
add
sbb
pusha
cmp
mov
mov
push
and
cld
std
dec
rorl
gs
xchg
pop
mov
inc
hlt
push
ret
and
mov
aaa
jmp
inc
popl
pop
aas
test
sbb
loope
inc
cld
sub
loopne
lret
push
lret
fdivrl
ljmp
or
dec
dec
mov
cltd
imul
pushf
pop
testb
jg
out
out
dec
and
mov
ret
xor
pop
mov
inc
push
fcomi
mov
jne
mov
push
xchg
lock
shll
test
aas
push
sarl
inc
outsl
fldt
cmp
sbb
rolb
sub
jns
cmp
imul
stos
andb
stc
dec
push
or
pop
add
stos
fxam
mov
ret
sub
ss
repz
pop
adc
or
gs
les
xchg
iret
ja
and
push
mov
dec
pop
sub
xchg
mov
loop
push
fs
out
repz
pop
lret
xor
out
call
and
fldenv
sbb
mov
int3
popf
inc
sbb
mov
repz
test
fbstp
lea
push
lret
push
cwtl
ret
add
loopne
pop
and
xlat
push
ljmp
aas
xchg
dec
cwtl
movsl
jnp
imul
std
out
adc
xchg
repz
flds
dec
sub
cmp
push
xor
jg
hlt
insl
bound
das
inc
scas
lcall
mov
mov
nop
push
and
push
lahf
pop
stc
je
push
jne
sub
movsl
mov
lea
jo
cmp
int3
push
push
mov
roll
out
int
movl
adc
stc
and
cmovns
adc
mov
mov
cwtl
fs
test
dec
pop
out
inc
dec
pop
dec
test
jae
icebp
setg
popf
jg
fildll
jne
js
das
adc
push
jae
lret
loope
pop
arpl
xchg
sbb
in
and
sub
nop
xchg
f2xm1
mov
xchg
mov
push
shrb
aas
aaa
cmpsb
xchg
sub
shl
pop
pop
mov
loop
push
ja
adc
lcall
andb
push
and
adc
sub
shrb
sub
pop
mov
rorl
insl
aaa
cli
jle
add
mov
je
sub
lahf
xchg
lods
mov
mov
lea
mov
scas
cld
adc
xchg
jecxz
pushf
push
add
shl
pop
adcb
jae
xor
popa
aad
cmpsb
push
push
sahf
jo
dec
dec
sti
jecxz
mov
ja
out
cmpsl
addr16
and
cmp
popf
in
leave
scas
push
mov
push
call
cld
cmp
xchg
es
lret
push
and
pop
nop
insl
imul
out
faddl
pusha
push
push
es
pop
sarl
je
and
xchg
mov
lds
divb
push
jo
mov
pusha
sub
push
inc
nop
hlt
movb
push
fstpl
cmp
stos
pop
int
sub
jecxz
and
mov
xor
or
xchg
movsb
jge
dec
outsb
mov
xchg
mov
sbb
or
mov
cmp
push
adc
mov
xchg
jg
mov
mov
sub
decb
mov
lea
icebp
lea
nop
mov
sti
ret
ja
aam
jg
fmul
fwait
jmp
mov
adc
sbb
and
pop
aad
xor
outsb
test
fwait
inc
aad
jge
decl
loop
sub
or
fwait
bound
les
aas
and
insb
mov
pop
sbb
outsl
jne
cwtl
imul
clc
or
jge
inc
mov
adc
inc
mov
xor
subl
mov
sti
out
jge
cmp
shlb
push
cmp
xchg
inc
test
stos
xchg
cmp
inc
mov
mov
lcall
mov
add
sub
imul
sbb
fdivs
mov
push
mov
mov
mov
gs
ret
imul
sbb
mov
pusha
lds
lret
addr16
mov
inc
xchg
flds
int3
loop
out
xor
call
push
mov
pop
jbe
loop
push
lcall
jns
repz
repnz
sahf
pop
out
movsl
dec
aaa
je
inc
test
jg
imul
icebp
inc
imul
outsl
mov
pop
daa
incb
repnz
rcrl
cmp
cmpl
and
inc
test
lret
xor
cmpsb
subb
cmpb
jb
lcall
mov
sub
dec
dec
repnz
xchg
dec
pop
lret
jge
add
mov
pop
mov
or
and
notl
add
sbb
push
in
mov
cwtl
mov
pop
in
fisubrs
xlat
in
mov
mov
fsubrl
ja
test
std
push
jl
pop
sbb
testl
xchg
jae
std
sub
int
sarl
jecxz
mov
sti
pop
movl
ja
xchg
mov
cld
cli
or
mov
imul
pushf
mov
push
cli
sbb
fwait
lds
push
jp
insl
sti
es
add
push
aaa
mov
test
or
test
icebp
in
push
and
rolb
inc
pop
popa
imul
ret
imul
test
aaa
or
mov
pushf
push
shl
movsb
loop
and
fcmovu
movsb
or
or
adc
pusha
enter
movsb
mov
cmp
xchg
mov
xor
adcl
jmp
push
or
jns
mov
mov
inc
mov
pushf
fisubl
mov
push
out
sbb
ljmp
lret
aam
mov
aad
ficoml
or
mov
mul
mov
mov
inc
mov
cmpsb
sbb
rolb
xchg
lds
and
loop
sbb
lcall
cld
es
mov
lods
cmp
push
nop
pop
adc
cltd
fincstp
jo
aaa
add
dec
icebp
cmp
mov
int3
jle
fwait
int3
mov
mov
sub
and
mov
inc
cmp
sbb
sbb
push
cmpb
dec
sub
imul
push
pop
cmp
mov
rorb
out
bound
and
or
lds
jo
outsl
fists
cmp
rolb
pusha
ds
sub
fcoml
xchg
add
int
cmpsb
out
in
inc
jb
lea
mov
shlb
jns
cltd
scas
push
ret
jecxz
jp
push
and
cli
jne
mov
xchg
or
sub
lods
inc
mov
pushl
mov
or
sub
int3
out
stc
xchg
add
xchg
cs
test
push
dec
das
enter
lcall
mov
mov
add
into
iret
add
jmp
test
rclb
sub
fcomps
inc
sub
filds
insb
push
mov
push
pop
stos
mov
jmp
outsl
and
push
movsb
mov
and
loope
addr16
jns
and
icebp
std
xchg
cmp
bound
mov
cmpl
orl
mov
bound
movsl
or
lret
mov
lds
pop
mov
pop
loope
adc
sbb
adc
push
xchg
xor
pop
jecxz
cmpsb
ljmp
xor
sbb
push
stc
mov
cli
adc
stos
jns
sti
jnp
jbe
adc
cld
mov
dec
hlt
fistl
scas
ret
push
popf
jno
push
push
test
pop
mov
pusha
jl
jge
fsubl
pop
rcrb
mov
cli
dec
lods
cltd
sti
call
out
xchg
jmp
pop
fldt
mov
push
lods
add
sub
in
push
add
fsub
mov
add
stos
cwtl
fsubrp
cmp
aaa
inc
add
aas
cmp
pop
lret
test
pop
jmp
inc
aad
int
mov
xor
aad
push
xchg
addr16
imulb
or
pop
mov
push
xchg
into
xor
fs
pushf
jmp
sbbb
out
cmp
ficoms
mov
xchg
inc
cmp
and
push
int
movsb
adc
xor
fdivp
push
push
mov
sbb
lret
xchg
mov
cltd
addr16
fsubrs
mov
pop
add
cmp
mov
enter
frstor
jge
lahf
fsubl
cmp
movsl
mov
les
test
push
mov
test
mov
mov
or
mov
add
xchg
imull
lahf
jnp
and
jle
aam
leave
lea
cmp
cmp
fsubs
insl
xchg
pop
sub
leave
lcall
clc
arpl
inc
aaa
addr16
cmp
xchg
cltd
cwtl
sbb
push
or
jge
mov
mov
cmp
cmp
pop
repz
cmp
mov
sub
dec
xor
ja
repnz
xlat
loop
pop
push
cmpsb
fsubs
loope
pop
lods
xor
and
cmp
xor
dec
cli
scas
sub
fldl
sbbb
xchg
pop
xchg
data16
sbb
inc
dec
jp
hlt
push
fcomps
in
push
push
nop
jge
add
jo
pop
mov
push
and
scas
lea
sbb
sub
inc
cmp
mov
test
jo
roll
mov
pop
mov
push
pop
ja
lea
mov
and
mov
out
popf
pop
push
scas
icebp
in
add
mov
or
ss
cmp
fistps
push
lret
scas
cmp
rol
mov
push
mov
out
sbb
stos
dec
enter
pop
add
loop
fstpt
xor
or
xchg
mov
inc
xchg
sti
inc
push
xchg
int3
in
sahf
and
mov
js
clc
fisubl
cltd
or
xchg
aaa
adc
mov
in
das
rorb
shrl
data16
inc
notb
mov
xchg
sub
rorb
bound
imull
cmp
icebp
loope
aam
push
loop
jns
inc
adc
rorb
cltd
pop
xchg
fistl
scas
call
dec
and
decb
hlt
bound
negb
pop
test
push
or
add
and
adc
fwait
clc
xchg
pusha
aad
ds
aaa
cmpsl
mov
int
jmp
dec
ficompl
int3
fsubrs
outsl
lahf
lock
pop
xchg
rcll
es
pop
jmp
icebp
inc
cltd
arpl
push
add
jp
cmpsl
faddl
testb
inc
cmpsb
jb
cmpsb
inc
jmp
ja
mov
sub
and
insl
jae
dec
or
xor
fidivrs
sbb
and
xor
pushf
aas
mov
xchg
loop
and
jb
xor
push
mov
mov
pop
inc
or
sub
or
aas
popa
push
enter
mov
add
movsb
fimull
push
jg
mov
repz
mov
jo
mov
int
sub
enter
cwtl
adc
cmp
lods
mov
roll
adc
in
dec
mov
jl
cli
jp
push
jle
out
push
mov
jns,pn
sbb
and
cmp
lahf
xor
jne
cmp
test
sub
ret
movsl
cltd
mov
adc
and
mov
dec
ja
fstpl
mov
cmc
sbbb
stos
mov
jo
sti
lcall
xor
xor
xchg
and
sbb
add
jae
lea
jmp
sub
lods
xor
sti
les
into
imul
nop
stos
sarl
add
rol
xchg
ljmp
push
push
ss
and
rcll
push
add
sahf
mov
push
popa
mov
mov
mov
pop
dec
in
adc
aam
inc
test
bound
outsb
xchg
mov
out
pushf
pusha
sub
adc
xor
dec
lret
sbb
movsl
and
jmp
jo
cmp
pop
pop
add
test
sti
pop
xor
push
jae
xorb
into
js
pop
mov
pop
push
add
xor
cmp
nop
push
stos
mov
aaa
cmpsl
ret
in
loopne
out
sbb
repnz
inc
je
or
das
pop
mov
inc
cmpb
sbb
mov
pop
add
lret
insl
mov
jbe,pt
dec
ficoms
mov
ds
aad
repz
in
hlt
imul
test
rcrl
ds
repz
leave
pusha
stos
out
iret
jecxz
mov
mov
roll
push
imul
inc
outsl
clc
push
jo
ds
dec
adc
fildl
mov
not
je
jnp
outsl
imul
ret
pop
sbb
fidivl
sahf
dec
insb
jnp
movsb
pop
mov
inc
mov
ucomiss
xor
push
mov
in
mov
les
aam
scas
fucomip
xchg
sbb
lods
lods
out
ss
pop
or
dec
daa
cmp
pop
ja
out
out
jo
loopne
ja
mov
inc
jno
test
pop
lret
sbb
mov
dec
add
jl
inc
lea
pop
xchg
test
fsubr
dec
cmp
jne
mov
aad
dec
xor
ljmp
aaa
into
outsl
scas
inc
inc
loopne
loopne
dec
stos
arpl
in
out
loop
xchg
push
push
jbe
je
cmovs
mov
cmc
or
loop
mov
es
sub
mov
mov
adc
shr
sbbb
push
je
movsb
ja
dec
outsb
inc
ss
std
lods
out
rolb
scas
push
add
push
shll
mov
mov
insl
sbb
push
out
push
sub
outsl
jo
pop
rcll
adc
adc
stos
jmp
loop
rcll
push
cld
out
sbb
add
jecxz
jne
cmc
ds
adc
fistpll
idivl
and
pushl
cmp
or
sti
add
xlat
mov
test
testb
in
and
mov
test
fstpt
inc
add
movsb
sbb
push
into
sub
jne
sbb
cmp
hlt
scas
and
js
mov
in
pop
lods
mov
lcall
cmp
xchg
lods
and
cmp
movsb
sbb
cltd
cwtl
cmpsb
fisubrs
rorb
mov
dec
xchg
movsl
lret
add
out
mov
or
out
cmp
xchg
xor
in
leave
pop
aas
popa
push
loop
cmpsl
fadds
cmp
xchg
xor
ja
insl
dec
arpl
mov
aad
push
xor
jecxz
mov
xchg
dec
xor
dec
jl
sub
pop
sbb
cmp
mov
mov
mov
cmp
add
std
mov
push
jle
aam
or
add
push
push
inc
mov
lods
dec
int3
mov
pop
cli
mov
cmpsl
imul
stos
roll
pop
sub
jnp
mov
cmp
hlt
hlt
adc
xor
mov
dec
xchg
cwtl
jbe
test
pop
int3
inc
pop
xor
imulb
insl
inc
xor
xchg
fstpt
xchg
mov
loopne
cmp
out
mov
or
sub
dec
mov
outsl
popf
inc
out
mov
mov
cwtl
jo
pusha
ret
pop
in
lahf
or
add
cltd
xor
insl
jno
data16
jae
xor
xchg
sbb
imul
fs
roll
jbe
ljmp
lods
sbb
mov
xor
rorl
movsl
jle
adc
xchg
ljmp
push
inc
ljmp
stos
cld
jg
sub
push
push
inc
inc
stos
std
movl
ja
mov
clc
add
data16
push
mov
ljmp
pop
adc
repz
mov
shll
xchg
sarl
or
jmp
jo
sbb
fwait
sbb
lret
mov
sub
incb
inc
xchg
push
lcall
lds
mov
push
mov
mov
inc
sarb
aam
inc
xchg
xchg
mov
mov
push
pop
mulb
mov
sqrtps
push
mov
mov
fnstcw
xchg
loop
inc
cmp
pop
dec
mov
push
ret
push
xchg
xchg
pop
rcrl
dec
test
add
clc
fbstp
psllq
sarl
dec
sbb
les
icebp
xor
push
inc
in
repz
fnstenv
xor
lret
nop
xchg
adc
xor
pop
mov
mov
adc
add
push
push
or
mov
sbb
dec
test
popf
out
lods
mov
loopne
and
testl
aam
movsl
xchg
jnp
pop
fisubs
pushf
fisubrl
not
hlt
or
jb
addr16
cmp
push
outsl
cmpsl
cmc
mov
hlt
aaa
filds
rcrb
dec
in
cwtl
test
fdivrl
pop
pop
fdivl
leave
out
test
mov
inc
insl
aam
jno
or
jecxz
or
pop
loop
std
push
incl
jp
pushf
xor
sub
daa
dec
stc
sub
test
dec
lods
cmpsl
fwait
mov
movsl
cmpsb
imul
adc
inc
sbb
push
xor
lods
ss
push
rclb
clc
pop
jecxz
pop
pop
in
fstl
mov
sbb
cmp
iret
in
xchg
pop
stos
cmp
mov
inc
negl
loop
sbb
pop
sub
sbb
jle
and
sarb
or
in
mov
jae
inc
jecxz
in
mov
jl
pushf
test
stc
push
jmp
sub
xchg
ja
xchg
pop
dec
ljmp
mov
jns
sub
jae
jne
and
push
je
inc
imul
pop
rolb
or
pop
jp
add
dec
movsb
push
sbb
in
test
repnz
shl
cmp
nop
pop
and
imul
hlt
ja
push
scas
mov
xchg
scas
sbb
cli
xchg
les
pop
add
call
mov
adc
xorb
popf
pushf
and
imul
fs
mov
jl
pop
push
loope
testl
stos
inc
sub
jp
xchg
jns
test
in
aad
jb
sub
cltd
faddp
gs
bound
iret
aas
push
adc
cmp
lds
mov
cmc
out
pop
nop
cmp
int3
dec
jns
lds
dec
ficompl
jge
xchg
test
mov
and
mov
out
fstpl
sbb
bnd
icebp
les
or
push
sbb
aaa
jo
cmpsb
mov
lret
jae
mov
lds
mov
ljmp
dec
push
adc
jne
fnstsw
jne
mov
dec
adc
jns
pusha
sub
sbb
and
in
mov
sti
sbb
sti
mov
cmp
clc
and
cltd
pop
popf
push
js
mov
dec
mov
movsb
xchg
js
mov
stos
add
stc
xlat
pop
out
sub
rcrb
lock
push
insb
and
outsb
fisttps
les
dec
xorb
mov
addl
and
mov
push
adc
fcoms
out
or
and
push
out
orl
dec
push
mov
push
dec
jmp
mov
pop
shrb
call
push
mov
ret
in
inc
push
inc
int
mov
roll
pop
sbb
loope
inc
mov
mov
adc
push
xchg
mov
or
std
subl
fistpll
clc
push
inc
push
mov
mov
pop
ljmp
jns
push
or
rclb
jmp
jb
inc
popa
mov
jp
leave
mov
leave
imul
pop
jmp
mov
outsb
testb
imul
js
aad
hlt
in
cmp
jmp
dec
dec
movsl
xor
ds
mov
adc
jnp
cmpsb
xchg
cmpsl
movb
xchg
lea
les
xchg
and
and
add
repz
cmpsb
cmp
ja
cmc
push
test
jg
outsb
mov
out
mov
push
arpl
mov
cmpsb
pusha
ret
cwtl
loop
int3
push
sbb
xor
sbb
daa
push
cmp
and
jb
inc
aad
lea
jg
hlt
sub
cmp
dec
mov
call
adc
pusha
inc
pop
nop
repz
mov
int3
adc
push
into
ja
loopne
mov
xor
mov
cmc
es
sbb
sub
ret
sti
jbe
leave
mov
cmpsb
add
paddusb
mov
cmp
in
stos
push
ds
sbb
mov
cltd
lock
dec
hlt
jl
aam
inc
dec
xor
mov
xor
ds
xor
push
mov
jae
fcomps
adc
jecxz
ljmp
jb
push
dec
mov
outsb
loope
mov
stos
in
mov
xchg
rolb
push
stc
fcoms
movsb
jbe
and
loope
ja
jle
mov
insl
movsl
and
aam
push
repz
imul
bound
fists
repnz
out
lret
cmp
sbb
mov
mov
jno
adc
adc
xchg
add
mov
xchg
das
stos
jb
popf
sub
mov
jge
icebp
pop
out
loop
xchg
mov
daa
cmp
sbb
aad
and
dec
push
mov
push
outsl
jns
push
insb
fisubl
and
pushf
rorl
jmp
sbb
mov
add
pop
cmp
jae
mov
cwtl
fnstcw
out
cmp
add
lret
scas
sub
mov
shrb
mov
ljmp
add
insl
cmp
inc
shlb
icebp
ljmp
pop
mov
in
fsubrs
repz
jle
popf
pop
clc
aaa
es
insl
jae
adc
dec
pop
adc
out
icebp
jne
xchg
pop
cld
inc
sub
sub
xor
scas
jle
ss
clc
lock
ret
seta
inc
or
scas
in
xchg
mov
mov
pop
cmp
dec
or
xor
addr16
cwtl
call
pusha
roll
imul
imul
jmp
mov
shlb
mov
shrb
loop
in
loop
imul
pushf
adc
mov
dec
aad
mov
inc
xchg
orl
jl
cmp
mov
decl
jo
dec
mov
mov
and
jnp
mov
or
xlat
or
or
std
push
push
inc
insb
mov
je
inc
jne
adc
fisubs
mov
dec
shll
inc
stos
pop
mov
mov
in
mov
xlat
cmp
jecxz
scas
fidivs
loopne
jns
imull
cli
loope
push
add
icebp
movsl
ret
clc
pop
imul
mov
sbbb
pop
repnz
jb
push
out
sub
inc
sbb
xor
leave
jmp
push
cmp
sahf
out
pop
addb
in
loope
hlt
push
and
sbb
cmp
aaa
imul
push
hlt
and
fiadds
lcall
out
test
jl
imul
sub
sbb
push
adc
add
add
aaa
mov
inc
push
mov
lock
inc
mov
not
shlb
pop
into
outsb
sbb
pop
jp
icebp
cltd
stos
adc
movsb
push
dec
into
mov
mov
push
jbe
mov
fstpt
sub
xor
loop
les
or
sbb
sti
loopne
imul
and
les
insl
push
add
lahf
push
jmp
mov
lds
pop
loop
push
xor
scas
pop
or
pop
iret
scas
fisubl
mov
mov
jge
fdivrl
xchg
mov
ja
cmp
xchg
push
jle
jns
pavgw
cmc
out
pop
and
ret
inc
lock
jmp
bound
cmp
sub
xor
in
jl
fsts
cmp
fsub
push
pop
dec
movsl
jmp
lock
clc
mov
mov
inc
mov
jge
jns
lods
rcrl
enter
or
add
dec
gs
dec
shrb
lock
rcl
dec
xor
fcom
lods
das
mov
mov
pop
or
and
mov
repz
xchg
mov
sub
movsl
dec
aad
mov
inc
pop
outsb
push
sahf
mov
stos
mov
xor
sub
leave
sub
adc
jl
cmp
push
xor
das
les
and
mull
dec
pop
xor
mov
or
pushf
mov
jl
mov
add
gs
cmc
rcr
mov
mov
cmpsl
rorl
mov
icebp
jae
repnz
inc
jns
shlb
mov
sbb
cld
and
adc
sub
mov
inc
or
push
cmp
ljmp
loope
xlat
sti
xchg
sbb
jbe
sub
outsb
pop
les
push
div
pop
enter
out
mov
insl
popf
add
loope
sub
or
and
cmp
or
jbe
cmpsb
cmc
iret
arpl
push
mov
ret
test
push
ror
test
mov
add
aas
movb
andb
pusha
inc
stc
push
xor
push
and
loop
xchg
push
mov
add
test
lods
fwait
loopne
xchg
cmp
pop
sbb
jl
ret
stos
mov
rcll
pop
adc
outsl
insl
mov
mov
mov
fadds
inc
in
insb
notb
or
es
dec
aas
jno
insl
sub
jg
and
hlt
pop
push
push
aad
jmp
pop
clc
push
fcompl
aaa
xor
add
mov
inc
dec
scas
dec
adc
dec
pop
jecxz
out
xor
ljmp
mov
xor
cli
dec
push
xor
data16
dec
mov
sub
daa
fld
and
jns
aas
jecxz
cmp
mov
loopne
adc
mov
lret
xchg
orb
mov
lock
xor
lods
iret
xchg
je
dec
push
stos
adc
push
lock
sti
jle
push
inc
cmpsl
repz
into
pop
add
popf
imul
or
ret
outsb
mov
enter
push
scas
cmp
inc
push
lret
mov
adc
jne
ret
int
stos
andb
cmpl
mov
jb
js
ficomps
inc
push
jmp
push
daa
jge
stos
popf
out
xchg
leave
call
pop
sbb
push
xor
xchg
rcll
mov
movsl
pop
inc
icebp
fcmove
jle
lret
movsb
add
sbb
sbb
jle
and
fcoms
sahf
cmp
mov
and
pop
xchg
call
lahf
xchg
inc
mov
adc
popf
cmpsl
sbb
cltd
scas
bound
lock
cmp
repz
jmp
pop
test
andb
and
sbb
ret
pop
insb
jle
data16
jge
andps
cli
mov
mov
cld
and
pop
xor
cltd
fiaddl
xlat
inc
loopne
scas
lea
jmp
push
mov
mov
inc
test
leave
stc
lods
lret
shlb
bswap
pop
xor
scas
dec
add
inc
dec
insb
jmp
out
enter
jge
hlt
enter
sbb
and
cvtps2pi
pop
imul
pop
push
push
sub
iret
push
aam
insb
push
test
out
pop
jmp
lods
push
xchg
xchg
mov
shlb
fwait
mov
add
mov
test
sub
sahf
jne
movsb
jb
dec
js
scas
ja
fs
jle
mov
pop
add
jbe
fiadds
push
stc
inc
fisubl
movb
or
xchg
test
sbb
cltd
inc
adcb
neg
mov
dec
jo
aas
add
mov
add
out
push
inc
sbb
cmp
mov
cli
xchg
inc
cld
out
adc
pop
xchg
or
jle
fld
cwtl
cmp
shlb
jnp
mov
faddl
aaa
int3
jae
icebp
cli
mov
test
mov
cmpsb
push
lock
or
mov
pop
sbb
loope
jmp
lods
mov
jp
xchg
mov
jae
or
shrl
test
hlt
int
jp
int
scas
shlb
mov
aaa
test
test
hlt
add
add
dec
mov
xor
adc
mov
icebp
pusha
sub
cmp
adc
div
nop
fisttpl
scas
dec
sarl
ficompl
ss
adc
leave
outsb
or
arpl
pop
shrb
dec
fildll
outsb
inc
xor
out
jb
sbb
xor
adc
inc
xor
xchg
and
cmp
sub
aam
xchg
clc
leave
xchg
adc
cli
stos
pop
jge
out
push
scas
nop
push
leave
dec
movsl
loopne
loope
nop
mov
xor
cmpsl
into
ja
add
lahf
push
push
pop
cmp
mov
daa
push
lret
pop
cmp
inc
test
sub
jne
add
jge
fs
aam
jns
fdivrp
jmp
imul
ds
jne
xor
faddp
pop
cli
cmp
add
pop
cmpsb
push
out
cmpsb
pushf
pop
into
out
and
sarb
test
mov
cmp
sub
repnz
lods
out
adc
sub
pop
lock
shll
scas
shrl
shl
test
inc
rolb
sarb
add
adc
daa
xor
mov
test
jge
ja
sbb
xor
sbb
add
or
and
ja
xchg
mov
js
aam
sbb
outsb
mulb
mov
xchg
lea
pop
and
xor
inc
cli
mov
xor
mov
fstl
addb
jle
or
jmp
mov
mov
mov
or
ds
push
call
popa
and
jns
xor
cmc
imul
cwtl
push
jne
mov
pop
lea
outsb
incb
ret
std
pusha
jmp
mov
cmp
loop
xchg
pop
fiadds
push
mov
aad
fstps
cli
xchg
loop
movsl
xor
ret
fsts
cld
pop
pop
aaa
mov
ret
repnz
repz
sahf
sbb
cmp
jb
test
inc
or
not
cltd
lea
ss
repz
lods
or
mov
inc
lret
test
mov
cmc
aad
mov
sub
push
or
jmp
and
xchg
add
xor
xchg
out
and
push
jns
scas
test
fldcw
pop
xlat
jg
out
dec
sub
mov
mov
nop
mov
mov
inc
stc
inc
jp
dec
hlt
pop
nop
ljmp
mov
xchg
xor
inc
cs
and
jmp
add
into
xor
enter
or
and
test
cmc
mov
push
iret
jbe
stos
int3
or
ret
pop
fisttpl
shlb
gs
adc
xor
daa
inc
pop
or
pusha
mov
or
sbb
mov
push
pop
sbb
inc
cmp
sbb
xchg
jecxz
je
and
add
mov
mov
int3
in
xchg
cmp
push
push
pop
sbb
jo
ljmp
outsb
dec
xchg
arpl
sbb
sub
out
mov
sub
not
stc
jmp
imul
pop
leave
and
sbb
daa
popf
pop
push
dec
or
lods
movsl
fcomps
leave
cmp
test
ljmp
hlt
scas
jbe
pop
aad
sub
push
and
push
xor
test
mov
pop
sub
jle
cld
cmp
fcomps
pop
or
pop
aad
cmp
and
inc
out
in
jmp
add
stc
movsb
jb
mov
xor
fldcw
cs
add
je
in
hlt
aas
lcall
dec
dec
in
lcall
repz
mov
pushf
mov
push
std
xlat
mov
int3
mov
mov
add
out
jb
xor
sarl
sbb
fnstenv
xor
lea
mov
fisubrs
fiadds
sub
mov
push
lea
or
pop
addr16
lds
ja
push
mov
iret
fistl
push
std
cmc
stc
scas
pop
or
dec
daa
xchg
mov
xchg
aas
pop
punpckhdq
in
inc
or
pushf
in
cmpsl
sbb
test
inc
sub
insl
push
jbe
movsb
adc
sbb
call
arpl
push
notb
mov
test
loope
rorb
sub
loope
dec
stos
dec
orl
jg
xchg
sub
aaa
pop
inc
sbb
cmp
mov
out
pushf
dec
or
xor
or
xorb
fwait
pop
and
ja
push
mov
sbbb
rcrb
call
pop
negb
adc
addr16
jp
adc
push
jbe
cmpl
xor
mov
mov
cmpsl
adc
push
out
ljmp
jge
ror
ret
js
xchg
mov
sub
cltd
adc
pop
lds
pop
inc
inc
jns
mov
enter
cli
mov
and
push
sub
xchg
mov
lds
xor
xchg
or
ljmp
jmp
sldt
arpl
out
and
jns
jg
mov
enter
xor
imul
push
ja
sub
cmp
movsl
mov
and
xchg
sarl
xchg
sub
sub
dec
or
inc
into
inc
sub
mov
pusha
addr16
ljmp
sti
scas
jp
in
js
sbb
add
pusha
movsl
xchg
push
jg
orl
push
testl
into
xor
cli
fadd
or
or
and
cld
dec
pop
push
dec
cmp
jbe
adc
jns
and
popf
imul
lcall
into
cmp
pop
sub
call
int
lahf
mov
leave
add
mov
push
bound
popa
dec
je
rcll
pop
jmp
es
cltd
cmpsl
iret
pop
inc
and
das
dec
mov
mov
repnz
sbbl
gs
dec
rorl
icebp
and
mov
scas
mov
cs
andb
mov
sub
pop
pop
mov
aas
ret
sbb
jg
int3
std
adc
pop
pop
mov
int
rsm
lahf
rcl
cltd
mov
ret
repz
mov
jg
popa
cmp
jo
fidivs
fs
jmp
xor
and
or
scas
xchg
pop
pop
sbb
mov
aaa
mov
mov
sub
lods
aad
das
lock
and
jnp
jle
into
rcrl
dec
orl
add
pusha
out
fcmove
add
xchg
cwtl
imul
sub
ret
and
add
les
pushf
in
icebp
out
stc
jmp
jbe
pop
push
xor
dec
inc
mov
sub
rcr
lods
mov
das
dec
push
cmp
aam
cmpl
in
mov
xlat
cld
mov
mov
cmp
aaa
in
pushf
cmp
xchg
rcr
xchg
sub
mov
jo
insb
fmull
jnp
mov
sub
in
stc
addr16
ret
cmp
imul
sahf
adc
jo
in
std
lock
cltd
sub
int3
mov
and
ss
int
scas
cli
xor
std
pop
inc
sub
pop
sub
movsl
dec
jo
mov
lods
dec
and
sbb
lds
adc
out
int3
adc
lods
cwtl
jmp
ss
lds
loop
dec
dec
push
lods
inc
lods
or
dec
adc
dec
mov
setbe
cmp
icebp
cli
cld
test
jle
mov
pop
cmp
clc
fidivrl
insl
add
xor
push
popa
int3
pop
cmc
add
mov
inc
dec
or
add
inc
ficoms
and
push
or
or
mov
std
xchg
enter
bound
ds
in
pusha
cmc
xor
pop
iret
inc
lahf
lcall
fwait
mov
outsl
dec
pop
cli
clc
inc
out
mov
movsb
int
mov
and
stc
sub
cmpsb
mov
sbb
sbb
inc
mov
mov
daa
loope
adc
pop
nop
or
out
xchg
aam
xchg
pop
ret
mov
test
jae
lock
movsl
mov
sub
inc
jg
push
dec
mov
test
push
out
mov
sbb
xor
lock
jge
sub
jge
gs
aaa
dec
xor
push
mov
mov
pop
repz
imul
pop
mov
scas
loop
jae
inc
sbb
cmp
ds
add
push
fadd
stos
stos
xor
mov
hlt
outsb
imul
fdivrl
adc
and
cmp
or
jmp
dec
push
cmp
imul
jg
mov
or
xchg
cs
int
insl
jbe
cmpsl
xchg
dec
movsl
inc
push
arpl
test
into
jo
inc
cmp
push
push
pop
lods
or
mov
lods
jb
push
loopne
dec
jecxz
cld
jge
addr16
leave
vpaddq
jmp
or
adc
cmp
or
pop
insb
pushf
out
in
pop
pop
mov
mov
aaa
pop
or
mov
cmp
pop
outsb
jae
mov
xchg
jg
hlt
popa
xor
lret
std
movsb
aas
in
inc
mov
insb
sbb
aam
xchg
rorb
cmp
dec
fadds
sub
and
repz
add
int3
nop
out
aaa
cltd
fwait
shlb
mov
xchg
jp
ljmp
imul
mov
add
dec
sbbl
and
mov
pushf
lods
aaa
rcrb
and
mov
insb
int
dec
popf
mov
cmp
ja
test
pushf
andb
mull
punpckhwd
sub
sbb
sub
cs
push
sub
sub
mov
pop
sbb
stos
jl
or
xchg
movsb
ds
or
lock
push
fsubrs
in
and
mov
or
or
fcmovbe
roll
aad
adc
les
in
icebp
cmpsb
jmp
cmp
cli
pop
inc
lret
or
jl
das
lret
inc
mov
dec
cmp
or
cwtl
jb
scas
and
pop
xor
fldcw
loope
scas
dec
loope
in
nop
push
sbb
enter
test
divl
sbb
sub
inc
mov
or
inc
ss
mov
cmpsl
fistl
cmp
mov
jns
push
xor
cltd
clc
out
jbe
ljmp
jns
ret
or
fwait
addr16
or
xchg
pusha
dec
adc
sbbb
push
jp
ret
call
in
inc
mov
shll
sub
and
or
jmp
sahf
add
inc
das
dec
sbb
scas
mov
faddl
adc
mull
cmpsb
mov
mov
andb
jb
inc
lcall
ljmp
mov
pop
mov
imul
popf
repnz
cmp
imul
lock
mov
lods
mov
fadds
mov
roll
cmp
xor
mov
jle
pop
ja
cmc
fwait
or
call
sub
cmp
mov
ficompl
adc
xchg
mov
testb
cwtl
mov
lock
sarb
dec
and
mov
subl
test
jne
xchg
movsl
xchg
or
mov
jmp
push
out
roll
out
jne
mov
pusha
lret
mov
aam
jge
sub
imul
push
nop
in
mov
lods
add
pushf
test
rcll
inc
inc
mov
hlt
aad
cs
pop
sub
xchg
jbe
fs
bound
dec
xchg
pop
js
adc
mov
daa
mov
adc
pop
mov
lods
mov
mov
clc
inc
negl
pop
sub
lcall
arpl
cmpsb
rcrb
push
pop
or
mov
rcll
cmp
scas
mov
sub
push
push
iret
scas
jb
dec
cmp
movb
dec
arpl
scas
rclb
add
rolw
inc
jb
out
xchg
mov
cmp
cmp
and
enter
push
jmp
adc
or
repz
imul
das
push
mov
mov
push
dec
dec
lret
iret
push
loope
push
jae
push
or
test
in
mov
cs
das
mov
pop
mov
sbb
adc
jmp
leave
ljmp
adc
popa
cmp
cmpsl
cwtl
scas
daa
idiv
xor
and
hlt
icebp
jae
into
xchg
dec
dec
lcall
loop
pop
xor
lea
mov
lock
pop
jne
and
xor
inc
fdivr
repnz
sub
sub
cmc
or
mov
xchg
xor
mov
or
fnstenv
ljmp
mov
adc
mov
test
xor
int3
ljmp
fimull
addr16
rolb
jl
mov
pop
inc
jb
fbstp
pop
jle
push
and
inc
or
mov
cmc
adc
sub
ja
push
dec
add
in
ds
mov
loope
adc
fldcw
aam
push
ds
rol
xchg
loopne
mov
and
push
xor
mov
loope
or
mov
xlat
cwtl
fildl
dec
push
mov
dec
xchg
js
cmpsb
mov
aad
inc
mov
dec
inc
popa
push
in
sbb
dec
jle
enter
push
adc
cld
out
adc
lds
mov
push
xor
jne
std
cmpsl
adcl
bound
ret
xchg
fidivl
push
xchg
lods
out
outsb
dec
mov
mov
cmp
mov
xchg
adc
ret
call
arpl
cmpsl
cs
popa
loope
adc
inc
inc
lcall
cmpsl
jecxz
xchg
pop
xchg
faddl
xchg
insb
mov
add
popa
adc
iret
push
add
lods
enter
sbb
mov
fldt
mov
adc
mov
xor
aam
arpl
fiadds
sub
ss
fdivrl
jne
lods
dec
sbb
cmp
pop
call
adc
aam
push
pop
mov
cmp
xchg
in
mov
sbb
imul
sbb
test
mov
xchg
inc
push
out
pushf
les
pushf
cs
out
pop
xor
and
push
orb
pop
iret
nop
outsb
mov
mov
stos
dec
out
push
sahf
sbb
popf
and
sbb
mov
pop
jg
xor
cmp
jne
orb
mov
mov
adc
sbb
test
adc
pop
mov
push
int3
mov
mov
add
push
std
insl
push
stc
das
rolb
lea
clc
jecxz
jne
lods
out
adc
cmp
dec
sub
pop
mov
arpl
mov
cmp
out
jle
enter
testb
scas
xlat
and
push
and
movsl
mov
data16
mov
jno
lcall
jae
push
pop
fsts
shlb
dec
add
adc
fdivrl
jno
pop
sbb
aaa
xor
mov
movsl
sbb
push
add
mov
insl
inc
pop
sahf
int3
add
push
cs
cmp
lahf
and
out
ret
sti
sahf
gs
and
mov
adcl
mov
pop
jmp
fmul
cmp
inc
sbb
mov
mov
test
pop
sbb
gs
lahf
es
cltd
fcmovbe
fadds
mov
loope
lock
lea
pop
mov
jecxz
dec
mov
out
movsl
sbb
xchg
aas
lcall
nopl
aaa
mov
pop
out
imul
mov
fsubrl
les
sbb
push
loop
jecxz
sar
xor
or
xchg
fnstcw
or
cmp
adc
orb
xchg
or
cmp
ja
lea
movsl
aas
jae
aam
cmpw
dec
jge
mov
ljmp
cwtl
loopne
icebp
call
sar
push
sbb
lcall
sub
inc
ja
jbe
fwait
mov
leave
adc
out
jecxz
or
sbb
ja
fwait
inc
test
push
or
pushf
mov
mov
in
cld
sub
std
hlt
adc
mov
jbe
int3
xchg
sub
insl
sub
pusha
rorl
inc
test
filds
into
inc
rorl
pop
das
pop
cli
cmc
outsb
xchg
cwtl
push
cmp
and
xor
js
into
aad
pop
xchg
sbb
addl
out
outsl
sahf
in
cmp
sbb
xor
inc
lods
xchg
xor
or
xor
ljmp
jg
imul
pop
jne
mov
inc
push
mov
pop
mov
mov
inc
insb
jge
xchg
outsl
sbb
pop
imul
pusha
nop
pusha
pop
cld
pop
data16
lods
xchg
lea
sub
mov
scas
push
mov
jle
test
pop
lea
iret
add
mov
add
add
mov
or
cmovno
lcall
shrl
scas
xchg
orb
push
jecxz
pop
and
movl
imul
out
mov
in
inc
cli
int3
and
xorb
or
insb
jg
in
xlat
test
popa
or
mov
push
out
cmp
adc
or
or
stos
inc
das
add
xor
out
out
fimuls
cli
pop
push
mov
mov
sbb
and
sbb
clc
insl
shll
cmp
dec
mov
mov
filds
dec
push
jb
pushf
xchg
jb
leave
adc
hlt
mov
push
add
popa
subl
jl
enter
out
pop
mov
push
cld
lahf
cmp
lahf
mov
clc
xlat
ljmp
out
adcl
shrl
cmpsl
popf
mov
in
loop
xlat
jg
inc
je
cmc
dec
mov
dec
push
adc
xchg
bound
jge
mov
push
inc
adc
mov
dec
mov
aad
daa
mov
sbb
or
xchg
or
fisttpll
and
sub
add
bound
cmpsl
cld
fs
les
mov
stos
hlt
mov
mov
cli
imul
mov
add
adc
jmp
rcl
sbb
cmp
dec
bound
mov
sub
inc
or
push
lea
inc
xchg
mov
xchg
and
and
sbb
mov
mov
jmp
and
cmp
and
mov
and
sub
xchg
xchg
addr16
rcll
pop
pop
imul
mov
sub
lahf
lahf
in
hlt
jno
int
fsubs
jmp
mov
rcll
and
lods
adc
pushf
movsl
dec
lret
pop
addl
lods
jo
pop
mov
jmp
or
mov
xor
inc
dec
cmp
add
jmp
push
mov
enter
aam
aam
cmpb
xchg
in
clc
sti
sub
pop
jb
sahf
push
sti
jns
mov
loop
dec
cmpsb
ss
pop
pop
or
aaa
mov
negb
cs
lea
and
repnz
arpl
xchg
loop
rolb
lods
mov
and
push
mov
in
adc
int3
fisubs
xchg
lcall
int
lcall
lahf
sub
mov
cmp
test
mov
repz
lea
pop
cmpsb
idivl
jae
in
lret
mov
pop
cmp
popa
adc
mov
divl
imul
push
jae
popa
leave
insl
stos
dec
pop
test
ljmp
mov
jecxz
scas
gs
lcallw
xchg
mov
adc
mov
mov
xchg
or
xchg
lret
mul
sbb
xchg
mov
loop
jp
or
jnp
sbb
sbb
xchg
push
push
in
sbb
lcall
pop
jecxz
lock
inc
mov
or
mov
movsl
loope
xchg
jge
pop
dec
xchg
cmpsb
cmp
or
cmp
sub
scas
popa
mov
leave
ret
jnp
xor
mov
in
inc
fisubrs
aam
gs
add
fs
inc
or
xchg
out
out
push
xor
cmpsl
scas
jmp
int
fs
ds
push
ss
sarl
add
mov
mov
nop
push
add
push
movlps
fwait
aam
or
mov
dec
dec
sub
ss
push
and
adc
incb
aaa
shr
push
fimull
inc
mov
dec
rclb
cwtl
mov
push
fmull
mov
ss
xchg
fcmovne
sub
es
ret
arpl
outsb
imul
dec
push
aad
ret
mov
inc
mov
fidivl
loopne
cwtl
mov
sbb
dec
cmpsl
xor
sub
mov
pop
inc
aas
push
xchg
enter
sub
int3
cwtl
xor
js
out
add
test
pop
in
cmp
lods
mov
sbb
pop
test
iret
pop
or
popf
movsl
and
cld
fucomp
mov
sahf
xor
aad
mov
fistl
mov
das
mov
jne
xor
sub
pushf
insb
fstpt
sub
add
arpl
push
sbb
cmpb
dec
out
mov
shll
dec
mov
dec
xchg
xor
loope
lahf
pop
std
cmc
cmc
lret
pop
mov
shll
scas
or
int
ret
movsl
pop
mov
stos
add
dec
pushf
repnz
subb
movb
ret
jge
std
mov
outsb
jnp
sbb
sub
jbe
adc
xor
mov
fsubrs
xchg
arpl
and
adc
add
pop
mov
push
ficompl
dec
and
lahf
sbb
test
stos
dec
icebp
and
sub
fcoms
mov
xlat
dec
in
sarb
imulb
scas
std
mov
inc
enter
xlat
xchg
test
cmp
cs
add
mov
lahf
adc
add
push
mov
jle
jb
js
xor
pop
mov
inc
das
sub
inc
into
enter
cmp
lock
cld
lret
pop
cmp
and
outsb
stos
fistpl
push
jne
mov
mov
mov
shrb
mov
testl
jno
stos
jl
test
add
cmp
ret
mov
push
sub
jmp
loope
insb
test
mov
icebp
ret
or
mov
les
inc
je
xlat
test
lahf
ffreep
in
mov
repz
jmp
sbb
fldenv
in
data16
mov
mov
push
notl
and
push
xor
push
xlat
fsubrl
stc
cmp
imul
jb
test
pop
mov
rorl
push
adc
inc
orb
and
bound
xchg
dec
sbb
pop
mov
mov
and
test
ss
mov
mov
cmpsl
loop
scas
inc
adc
jg
xor
push
test
out
dec
les
jb
mov
jae
add
cmpsl
out
sbb
addr16
cld
loop
sti
sbb
xchg
xchg
and
iret
push
mov
js
int3
in
inc
int3
gs
sub
movsl
ljmp
push
outsb
rolb
insb
mov
pop
aad
mov
pop
adc
leave
jb
dec
notb
je
push
push
div
cmp
int
jmp
add
pop
sbb
push
pop
jns
pusha
loope
pusha
out
imul
mov
xor
jmp
pop
sub
cmp
mov
pusha
pop
jo
daa
int3
ja
lds
into
aaa
add
sbb
repnz
or
cmp
and
push
dec
ret
ss
xlat
fsts
call
xor
idiv
or
pop
mov
movsl
subb
pop
push
xchg
and
aam
shll
sub
leave
xlat
xchg
mov
mov
nop
pop
push
dec
jb
js
outsb
add
out
outsl
cmc
jl
inc
fs
daa
pop
cmp
dec
jmp
cwtl
dec
adc
xchg
sbb
dec
dec
mov
pop
mov
lods
negb
mov
in
adc
rcll
jecxz
pop
ret
xor
sbb
scas
sahf
insl
fistpl
lahf
jmp
nop
jo
dec
mov
fisttpl
das
icebp
cmpsb
jne
sub
sub
in
stos
pop
movsl
jecxz
inc
test
jo
mov
das
push
xchg
xchg
jl
out
frstor
lea
in
lret
aas
scas
adc
jne
shll
sub
cmp
lods
lds
shl
sbb
sti
push
pop
das
cltd
mov
jb
daa
mov
cmc
popf
add
lods
test
jl
inc
loopne
dec
xchg
dec
cs
call
into
out
mov
stos
dec
leave
and
dec
call
or
and
inc
movsb
ljmp
pop
mov
ds
mov
sub
sub
mov
mov
gs
mov
jge
jge
jmp
or
dec
mov
mov
mov
fdivrs
xor
movsb
push
pmulhw
mov
data16
sbbb
incl
jbe
mov
lods
aas
xchg
fnstcw
inc
aas
in
pop
xchg
or
mov
dec
scas
hlt
inc
outsb
mov
shr
int
sbb
repnz
mov
mov
shrl
pop
into
inc
jle
scas
scas
int
or
movsb
pop
insl
and
sub
clc
add
jnp
testb
or
cli
lds
mov
lea
loopne
adc
sub
dec
test
push
cld
in
mov
cwtl
int3
dec
or
add
out
inc
adc
stc
or
cs
inc
dec
push
adc
push
decl
mov
add
enter
enter
sbb
leave
repz
and
int3
in
fldt
in
inc
mov
repz
jbe
add
test
sub
mov
cltd
scas
sbb
jecxz
and
sti
sub
js
dec
push
loopne
ret
dec
ret
aad
shl
and
pop
dec
jl
daa
insb
xlat
imulb
adc
ja
addb
add
lea
data16
inc
push
enter
jbe
adc
pop
clc
imul
or
pop
jecxz
mov
inc
and
andl
aad
daa
jle
ljmp
mov
daa
loop
call
jo
adc
lds
pop
arpl
hlt
mov
inc
nop
add
rorb
in
dec
fidivrl
pop
dec
jge
mov
jp
hlt
mov
dec
cmp
rorl
arpl
rcrl
inc
jae
loop
inc
lahf
shlb
dec
and
in
aaa
jno
jecxz
mov
jo
std
call
pop
or
xlat
and
push
nop
imul
push
jge
dec
es
js
cmp
push
and
es
add
xor
mov
inc
inc
mov
mov
bound
imul
xor
imulb
or
and
cmpsl
jo
push
ljmp
cld
loopne
ret
jae
mov
addb
arpl
push
addl
push
and
fsubl
int
mov
pop
subb
jb
xchg
aad
lret
xchg
jmp
jl
sti
adc
sti
loope
dec
or
ss
sbb
sbb
int3
test
mov
dec
out
sub
sub
daa
or
negl
incl
pop
dec
aaa
cmp
or
fwait
mov
xchg
sbb
xor
loop
xchg
iret
mov
mov
push
movl
ja
fldenv
and
arpl
dec
and
cwtl
inc
fsubrs
inc
pop
negb
sbb
xorb
das
repnz
ret
aas
fadd
stos
fcom
mov
dec
sub
arpl
insb
out
mov
jnp
mov
pop
push
jge
and
jp
push
sbb
jns
jmp
push
andb
cmpsl
arpl
or
adc
xlat
rol
setae
out
cld
sbb
ss
pop
cli
push
push
mov
mov
mov
movsl
outsl
add
pushf
cmc
mov
sbb
mov
lcall
or
inc
push
bound
mov
jbe
jbe
mov
into
sti
fsts
gs
in
sub
push
cmp
sub
in
mov
in
xor
push
xor
stos
or
insb
adc
jecxz
dec
sti
xor
cs
add
jp
daa
dec
into
jns
pop
adc
insl
push
jge
inc
xor
or
fistpll
test
pushf
ds
jnp
add
jne
imul
and
dec
push
cmpsl
push
insl
mov
jnp
mov
jae
jmp
jmp
fisttpl
push
lcall
lods
or
add
test
jne
mov
sbb
push
add
lret
fxch
call
xor
jnp
cmp
mov
mov
fdivrl
js
and
ja
add
sbb
leave
and
push
lret
arpl
jp
dec
test
shrl
ss
adc
andb
adc
xor
cmp
jge,pn
sbb
xchg
ret
in
shll
lcall
push
cmp
push
xor
cmpsl
pop
in
sub
outsb
push
push
inc
adcl
lret
out
xor
and
mov
outsb
ret
or
popa
sbb
mov
std
sub
jmp
arpl
nop
das
sub
or
iret
inc
mov
cmp
push
mov
fwait
sub
iret
push
mov
cwtl
jmp
repz
pop
adc
repz
out
jne
inc
cmp
jae
dec
xchg
fmull
mov
popf
pop
mov
and
imul
mov
mov
adc
inc
sbb
scas
scas
jbe
ret
cmp
mov
cs
and
test
int3
push
shlb
and
mov
sub
lea
imul
enter
jns
pop
out
movb
in
add
call
in
xchg
enter
and
xchg
pop
sahf
jl
sti
dec
dec
test
pop
lret
ds
or
add
movswl
ficoml
int3
popf
push
out
inc
dec
nop
gs
jne
jge
adc
rcrb
stos
pushf
test
jp
mov
out
adc
sbb
fcoml
xor
jecxz
lahf
fbstp
push
pop
jbe
cli
loop
jge
or
add
sbbb
mov
stc
dec
pop
int
mov
jno
xchg
pop
stos
adc
push
mov
and
jno
mov
test
xlat
outsb
jle
sub
add
lds
mov
pop
cmp
sbb
mov
pop
push
jecxz
xchg
jle
jae
xor
jecxz
jle
rcll
sbb
popa
sti
or
es
xchg
aaa
lret
mov
jb
dec
push
xchg
shlb
jge
xlat
jge
fs
cmc
cmp
mov
push
outsb
add
test
lret
nop
jae
mov
xor
mov
cwtl
add
paddusb
in
add
sub
jb
ss
iret
enter
ss
scas
dec
shlb
fcmovnu
out
xor
ljmp
and
or
jecxz
or
push
mov
xchg
daa
es
mov
out
nop
lahf
aam
dec
test
push
mov
push
insl
iret
sti
xchg
dec
ret
pop
loopne
popa
pop
sub
inc
sahf
xchg
lock
idivl
mov
mov
pop
and
xchg
jnp
cmp
aam
cld
mov
pop
pop
mov
adc
cmp
add
in
mov
fisubl
fnstenv
xchg
repnz
and
bswap
notb
sub
rcrb
dec
pop
aad
xor
adc
repz
mov
lret
pop
jg
arpl
andl
xchg
cmpsl
xor
cmp
subb
and
mov
cmc
in
add
fidivrs
mov
leave
jg
jmp
cmp
xchg
cwtl
mov
int
je
adc
sub
jb
inc
lods
leave
adc
addl
mov
sub
add
lahf
xor
xor
rorb
sbb
and
dec
push
pop
jmp
add
xorl
jnp
push
mov
xlat
inc
loopne
xchg
pop
xor
inc
adc
sti
jae
jb
adc
xchg
xor
adc
lahf
sub
mov
jns
inc
jge
push
xchg
loope
cmp
add
notl
jge
add
lret
arpl
pop
xor
sub
test
arpl
xchg
mov
fldt
shlb
scas
mov
jl
loop
sbb
test
imul
fwait
or
bound
jns
repz
shll
jp
lds
les
push
repz
js
cmpsl
call
insl
push
fists
je
cmp
cs
pop
mov
sti
sbb
sub
sahf
loopne
add
rep
jne
popa
add
cmp
lea
dec
inc
inc
sbb
xor
call
sti
pop
mov
jno
gs
popf
imul
cmpsl
sarl
mov
ret
int
arpl
add
push
push
stos
jae
adc
jnp
mov
adc
pop
push
push
arpl
scas
lret
test
rcrl
add
adc
repnz
fnstcw
js
out
sub
lock
xchg
or
mov
push
sti
ja
inc
fstp
loop
bound
sbb
mov
push
call
sub
cmp
test
ror
int3
mov
inc
jmp
and
fwait
xchg
push
cmpsb
pop
jge
jb
push
sub
mov
pop
int3
jle
dec
outsb
rclb
enter
dec
push
jle
sahf
jnp
adc
or
xchg
or
mov
sahf
ja
sub
adc
imul
ficoml
das
aam
jecxz
add
push
inc
ficomps
jmp
outsl
push
shll
clc
sub
aam
aaa
ss
dec
inc
sahf
fidivl
cmp
add
mov
or
roll
in
lods
add
push
popl
add
fimuls
aam
cmp
loop
das
es
or
cmc
andb
xchg
xlat
rol
xchg
cmc
pop
cmp
std
into
out
jmp
daa
loopne
mov
loope
push
sub
loop
sbb
push
fimuls
pop
lea
stos
test
je
fnstenv
into
xor
push
inc
push
mov
adc
ss
pop
test
adc
rcrl
pop
aaa
sbb
dec
pop
adc
pusha
pop
sbb
xor
mov
fdivl
cmpsl
sbb
and
rcl
dec
aad
jbe
dec
sbb
jno
loop
mov
stc
mov
stc
mov
sub
and
aad
cmpsl
xchg
and
jg
imul
dec
xchg
mov
xchg
pop
xor
add
mov
add
mov
lock
in
fisubrs
inc
addr16
cmp
pop
shlb
andb
fs
push
sub
xchg
icebp
shll
pop
dec
popf
push
daa
repz
mov
sahf
inc
or
mov
cltd
dec
leave
test
sub
lods
mov
jl
inc
mov
ja
sti
dec
pushf
push
nop
jg
push
insb
stos
aam
out
cmp
jg
fdivl
cmp
clc
sbb
mov
subb
sbb
enter
js
inc
fiadds
sbb
dec
adc
test
adc
je
ret
pause
xchg
dec
inc
pushf
ljmp
and
dec
jmp
sbb
test
sub
add
ljmp
pop
push
in
scas
into
and
lcall
push
mov
dec
and
stos
pop
add
enter
xchg
dec
fldenv
test
cmpsl
and
shlb
mov
add
adc
pop
ljmp
xor
inc
fldcw
popa
push
push
and
sahf
or
cmp
andl
mov
movsb
repnz
pop
iret
cmp
movsb
mov
mov
jg
sti
fidivs
loop
out
sbb
mov
pop
push
xor
cwtl
cmp
insl
cmp
in
adc
push
movsb
sbb
jp
lret
and
sbb
insb
icebp
push
cmp
inc
push
movsb
adc
repz
sar
sbb
repnz
or
pop
jg
and
jmp
mov
repz
sbb
mov
shll
out
push
cltd
mov
fld
jo
sub
fstl
and
dec
mov
adc
sbb
fists
lahf
sbb
test
je
out
mov
jge
fdivrl
ljmp
jecxz
cli
fnstsw
xlat
or
cmp
or
jnp
mov
in
or
in
pop
les
inc
dec
lds
addr16
pushf
ja
cwtl
insl
xor
out
xchg
ret
adc
icebp
sbb
and
ljmp
mov
jp
jge
mov
sbb
inc
lss
and
test
push
xchg
addr16
les
sub
lods
dec
test
push
pop
out
xor
push
js
adc
dec
or
cmp
int
mov
insb
jecxz
or
pop
push
sbb
rol
add
in
pop
sbb
jnp
xor
call
add
int3
inc
push
mov
xchg
xor
or
lods
cmp
inc
xor
and
and
call
fcmovnbe
test
pop
adc
movsl
jmp
pop
leave
sub
cmp
ds
cmc
adc
push
cmp
orb
dec
xor
std
stos
fsubl
fisttpl
bound
push
pusha
inc
ret
or
jmp
clc
out
pop
cmpsl
cmc
rcl
shll
mov
or
ds
xchg
cld
xlat
in
pop
or
cmpsb
pop
cmpsl
icebp
add
sbb
shll
xchg
movsl
push
jmp
cmpsb
insb
in
icebp
lcall
das
sub
cmp
add
movsl
mov
sub
or
mov
adc
cmc
hlt
jge
sub
or
lcall
jnp
sub
xor
out
and
enter
lds
pop
mov
cltd
addl
dec
mov
jae
or
mov
xchg
xchg
insl
pushf
push
je
fstps
sahf
mov
imulb
js
aad
xchg
inc
scas
icebp
sub
nop
not
dec
add
xchg
lcall
push
sahf
push
sub
icebp
and
rcr
clc
inc
lret
in
iret
fistl
adc
xor
pop
aaa
and
inc
push
xor
push
mov
insb
xorb
into
xchg
add
add
inc
test
fld
xor
test
aam
mov
push
pop
mov
fcomps
roll
pushf
sub
dec
adc
cmp
xchg
add
pop
jle
sbb
lds
sbb
call
sbb
push
and
mov
stc
cltd
jge
ret
push
sbb
sub
mov
ja
and
mov
hlt
mov
cmovne
shll
jmp
cwtl
enter
jle
cmpl
xchg
inc
dec
adc
stc
mov
cmp
pop
out
test
sbb
popa
mov
out
out
or
mov
xchg
cmp
imul
lods
insb
mov
outsl
or
es
enter
ja
daa
cs
pop
mov
lret
flds
movsb
cmpsb
dec
pop
sbb
xchg
outsl
sub
test
or
mov
xchg
cmp
mov
pop
imul
js
lods
mov
dec
jl
js
jnp
mov
jl
aaa
movq
or
or
data16
stos
mov
loop
add
test
jbe
dec
cltd
in
cmp
push
lods
push
push
icebp
inc
popa
adc
mov
or
sbb
adc
adc
xchg
fmull
add
mov
lret
mov
sbb
xchg
push
mov
xchg
inc
mov
popf
arpl
in
and
lds
jo
ss
call
jmp
ficoml
sub
insb
scas
iret
pop
jecxz
cmp
push
insb
xorb
sti
aam
lahf
in
mov
pop
mov
xlat
data16
nop
cmpl
inc
insl
dec
stos
cmpsb
jae
insl
or
pop
mov
stos
add
push
sbb
imull
imul
xchg
inc
pushl
sahf
aam
add
push
mov
addr16
and
stos
das
adc
pop
ss
mov
std
mov
mov
sub
ja
scas
fnstenv
out
and
fiaddl
arpl
les
je
es
pushf
mov
stos
mov
mov
push
ljmp
cmc
xchg
fdivs
daa
inc
add
sbb
std
stos
stos
mov
imul
sub
jae
ret
sub
mov
cmc
sbb
rcll
and
outsb
loope
test
repz
push
das
pushf
cmp
mov
adc
dec
fmuls
out
mov
cmp
imul
cmp
mov
mov
in
sub
push
sub
xor
sti
mov
punpcklwd
pop
mov
push
jg
and
cmp
mov
aad
ss
jno
adc
inc
mov
fdiv
enter
dec
add
cmp
stos
pusha
jae
dec
mov
into
cld
out
cltd
mov
dec
mov
in
dec
out
inc
cmpsb
call
sahf
mov
adc
clc
xchg
inc
sub
sbb
sbb
sti
movsl
sub
push
sbb
inc
pop
cmpsb
fisubs
cmc
mov
loopne
mov
nop
fsubr
popf
fistps
cmp
sbb
cmp
movsl
je
jno
fists
nop
push
add
push
and
dec
cmpsl
sbb
jg
ds
icebp
es
dec
popf
fcoml
into
pop
dec
xor
cmc
dec
pushf
movb
pop
push
data16
xlat
lcall
popf
pop
or
dec
xor
pusha
lods
mov
call
xorl
inc
mov
pop
popf
sbb
enter
cmp
dec
pop
cmp
das
negb
push
aam
pop
jno
lahf
lds
adc
sbb
jno
xchg
fimull
mov
jae
outsl
mull
loopne
mov
jle
pop
pop
pop
aaa
ss
fs
dec
push
mov
xor
mov
sbb
add
add
jle
jl
leave
xchg
aad
and
insb
lcall
hlt
dec
fdivrl
es
adc
test
xor
scas
dec
das
call
jge
adc
fldenv
jae
jp
mov
sbb
sbbb
xchg
fs
push
addl
hlt
sbb
std
in
jb
pop
cmc
pop
insb
aam
lret
inc
movsl
or
mov
cmp
loope
sbb
lods
into
mov
inc
fcmovnb
insl
lods
jg
cmovae
sub
jbe
push
mov
or
push
adc
cmp
call
int3
cmp
pop
sahf
ret
loop
mov
adc
ss
mov
lods
jecxz
adcb
out
push
jle
ljmp
push
inc
popl
fwait
ds
mov
dec
and
cmp
call
push
test
movsb
push
inc
jns
testb
push
jbe
xchg
push
xchg
aam
fstpl
xchg
popa
xchg
add
or
cmpsl
int3
sahf
aaa
test
fldenv
mov
lcall
sbb
andb
mov
call
imulb
in
in
std
in
addr16
fidivrs
push
or
mov
xchg
dec
pushf
int
fnstenv
jge
xor
repz
fs
jg
inc
cmp
jmp
outsb
dec
sub
fnstcw
adc
fcmovbe
mov
aam
daa
sub
inc
ret
and
sbb
loope
mov
popf
aas
test
aad
push
nop
sbb
je
inc
mov
xor
clc
mov
inc
js
cmc
cld
aaa
or
ret
cmp
je
sbb
xor
mov
mov
out
add
push
repnz
mov
ret
push
xchg
jge
adc
sub
imul
sub
cmpsb
popa
pop
jl
xor
ja
xchg
fwait
aad
aas
and
jno
inc
pusha
and
js
iret
loop
fisubl
add
shrl
lds
add
xchg
lock
test
adc
imul
push
dec
movsb
inc
jb
outsb
ja
adc
push
cltd
xor
jns
cmc
jecxz
aam
sub
xor
into
and
lock
int
xlat
ljmp
hlt
orl
dec
sub
fs
incl
xlat
dec
cmp
jmp
pop
xor
popf
sub
push
jbe
pop
aam
lcall
dec
test
fs
cmp
or
lret
jno
mov
shl
xchg
and
aas
xchg
adc
sub
jne
adc
std
jno
sbb
or
stc
daa
push
cmp
mov
dec
pop
or
cmp
mov
addr16
fwait
aaa
daa
inc
mov
fcomp
ds
pop
or
add
sbb
mov
lahf
hlt
shlb
clc
xor
mov
fmuls
pop
push
outsb
aam
test
aad
movsl
popf
fs
inc
pop
negl
incl
adc
jnp
pop
mov
inc
pop
in
jg
or
addr16
push
loopne
fwait
les
insl
sbbb
push
sbb
cs
lea
test
pop
and
lea
sbb
sub
xor
dec
stos
cmp
lahf
cltd
jmp
sti
push
iret
mov
inc
adc
cmpb
outsb
mov
mov
dec
mov
lea
and
dec
out
jae
pusha
int3
popf
cmpl
dec
dec
push
loope
mov
rorl
into
pop
add
add
push
jo
add
push
jg
repz
jecxz
fdivrl
xchg
jns
xor
xchg
leave
mov
ds
dec
fcmovne
data16
push
mov
push
mov
movsb
sub
insl
insb
jns
jp
mov
pop
xchg
dec
pop
mov
imulb
inc
aas
ret
and
dec
xchg
cmpsl
jns
shlb
mov
stos
stos
mov
or
mov
insl
and
jne
daa
lea
xor
incl
and
mov
daa
loopne
sbb
cltd
push
lret
sub
sub
stos
sub
insl
mov
dec
or
adc
fyl2xp1
lods
inc
mov
in
cmp
into
and
fwait
add
xor
popa
into
jl
jo
pop
int
fstpl
sbb
es
cmp
pop
cmc
hlt
roll
into
lods
inc
test
push
int3
pop
xchg
adc
or
push
lahf
push
popa
jb
fimuls
insl
push
or
loop
xor
mov
outsb
mov
popf
xorb
jbe
jbe
push
mov
icebp
xchg
mov
sub
frstor
or
inc
xor
mov
fnstenv
mov
jno
jmp
divl
fs
int
dec
mov
cmpsl
mov
aam
xlat
bound
jnp
lret
fstps
mov
icebp
mov
push
pop
popf
adcl
cmpb
xchg
lret
call
outsl
xor
and
xor
or
mov
inc
sbb
adc
pop
push
mov
or
cld
pop
or
lret
cmp
mov
sub
call
lea
push
adc
push
adc
pop
sbb
sbb
cmp
mov
testl
inc
into
sahf
add
sbb
in
scas
sub
pop
jmp
push
cmpsb
or
mov
cmp
shrb
je
cmp
int
mov
add
ja
icebp
ds
xchg
mov
cmp
out
xor
dec
add
in
hlt
stos
jg
cmp
stos
addr16
stos
rep
aas
push
das
dec
xor
mov
arpl
outsl
pop
inc
in
pop
pop
fildll
lock
mov
pop
movsb
dec
cltd
out
pop
scas
and
jne
cmpsl
push
mov
cltd
outsb
stos
push
outsl
rcl
aad
dec
and
jge
sub
mov
sti
cld
scas
outsl
lds
outsl
mov
mov
and
add
inc
mov
jl
fs
mov
xchg
xorl
jo
out
call
mov
imul
out
xchg
movsl
inc
repz
sub
sbb
jnp
roll
inc
xor
pop
aaa
jl
add
mov
push
add
out
stos
xor
leave
psraw
pushf
add
lahf
das
cmp
jl
cld
call
lcall
js
and
notl
add
mov
cld
xchg
out
dec
xchg
or
cmpsb
sti
jns
clc
push
pop
mov
push
imul
pop
out
test
mov
push
xor
scas
cmp
and
arpl
int3
inc
popf
stc
jne
out
cli
rcrl
jmp
push
in
sbb
out
mov
inc
xchg
sar
pop
std
rol
addb
jnp
jb
jno
stos
mov
sti
sarb
xchg
lret
pop
out
fdivp
lock
test
jo
adc
popf
insl
lcall
dec
jp
xor
jl
test
into
aam
std
nop
std
scas
jmp
pop
xchg
nop
sti
push
lret
scas
sub
int
out
orl
push
xchg
jmp
jmp
or
lea
stc
stc
leave
sbb
sahf
movsl
pop
int
repz
cmp
inc
test
mov
mov
adcb
mov
ret
or
and
ficomps
sbb
loope
inc
pop
loopne
scas
and
cld
cmpsb
arpl
cmp
pop
jne
nop
scas
mov
inc
push
mov
ja
mov
and
cmp
popf
cmp
shll
iret
xlat
call
push
add
jle
inc
xor
jl
scas
out
pushf
loop
lods
or
icebp
fldt
sbb
repz
invd
mov
fadd
xlat
in
cmp
out
dec
jmp
sbb
es
pop
pop
adc
mov
lods
mov
dec
sbb
fwait
xchg
xor
or
test
dec
sub
mov
mov
add
and
stc
push
shlb
loope
mov
in
fcomps
jmp
jns
outsl
testl
pop
xor
or
mov
lcall
shl
mov
pop
cmpl
jnp
pop
push
daa
out
cld
test
pop
fildll
call
mov
adc
cwtl
inc
add
adc
aas
lea
adc
les
mov
lods
sub
and
xor
js
aam
out
inc
lods
pop
imul
sub
push
xor
xchg
jnp
xor
sbb
add
jmp
jle
pop
sub
lahf
das
mov
sbb
jge
push
sbb
push
sbb
orl
or
test
stos
clc
or
lds
sahf
das
cmp
mov
dec
les
sub
ds
sti
jmp
stos
movsb
mov
inc
out
cmp
adc
ja
pop
or
das
cmp
sbb
or
fisubrs
fldlg2
lahf
in
iret
push
loop
add
imul
rorb
xchg
dec
stc
pop
scas
in
rclb
inc
push
je
movsl
enter
decb
mov
lea
jnp
mov
add
in
cld
into
jno
and
fs
scas
loopne
sbb
loop
add
lea
test
rcll
clc
xchg
outsl
mov
dec
cs
cmp
push
inc
clc
ja
lret
int3
test
push
int
subl
cmp
jmp
loopne
cmpsl
or
push
push
mov
mov
sbb
push
in
pushf
cmp
mov
lock
frstor
mov
jp
fs
cmc
hlt
adc
sbb
outsl
nop
das
ljmp
jmp
dec
fs
roll
scas
cld
mulb
loopne
push
loop
adc
daa
inc
sub
mov
fnclex
cmc
out
iret
mov
sbb
fcoms
and
sub
sub
mov
daa
nop
mov
sbb
cmp
ss
shlb
data16
pop
mov
add
repnz
fsubrs
orb
popa
inc
push
fs
or
stos
xor
jge
stc
nop
aad
pop
push
pop
aad
ret
jmp
adc
cmc
xchg
sbb
push
mov
or
pop
sub
pop
shr
dec
inc
das
mov
ds
jne
push
int
packuswb
popf
aad
outsb
ficoms
inc
ljmp
push
xchg
sub
pop
aam
iret
mov
fsubrs
jge
or
mov
mov
popa
jp
cld
or
mov
mov
adcl
stc
call
test
rcrb
mov
scas
lcall
out
adc
mov
inc
subl
cmpsb
std
jmp
jb
adc
push
dec
aaa
idivl
inc
stos
cmp
aad
sub
pop
mov
lods
pushf
iret
in
fistps
sbb
pop
frstor
int3
xor
loop
fdivl
fsts
jle
or
and
imul
scas
fsubs
inc
add
push
mov
sarl
lret
adc
or
idivb
mov
addr16
and
scas
cmpsb
rcrl
outsb
nop
mov
shrb
cmp
xor
inc
rorb
sbb
sub
jmp
rcrl
dec
mov
int3
mov
pop
scas
xor
daa
push
dec
mov
fmuls
shr
adc
jno
cltd
int3
stos
push
xorb
sub
jno
lock
cs
sub
loopne
push
mov
push
push
push
and
adc
inc
outsl
je
out
int
or
sub
push
scas
xor
or
outsb
mov
in
cmp
push
int3
push
iret
xor
sub
and
shr
mov
xor
xor
jp
stos
mov
imul
inc
stc
inc
into
jb
mov
lods
push
sbb
ljmp
dec
pushf
add
mov
in
sub
icebp
shlb
outsl
mov
or
insl
add
pop
imul
adc
mov
push
xor
in
add
xchg
pop
in
adc
dec
cmp
adc
imul
mov
mov
jge
jnp
hlt
lea
adc
sbb
fldcw
dec
dec
and
or
in
sti
fwait
nop
sub
cwtl
pop
fwait
cmovl
jmp
cmp
lods
and
mov
addr16
inc
cwtl
cmp
push
sub
jmp
mov
mov
ja
gs
push
jnp
dec
je
xchg
lret
popf
inc
mov
cwtl
lea
aad
add
push
sbb
jmp
test
repnz
xchg
dec
orb
test
sbb
sub
fwait
add
cwtl
cs
lret
and
xchg
leave
outsb
jbe
dec
shlb
push
cwtl
fwait
inc
cmp
and
bound
enter
lret
cmpsb
lock
and
dec
aam
roll
cmp
cli
js
addr16
test
lods
fbstp
xchg
xchg
and
das
addl
imul
xor
cmp
ret
out
ficoms
cmp
test
daa
cmp
in
cmp
inc
icebp
push
leave
int3
pop
rorb
mov
adc
cmpsb
inc
xchg
mov
pop
pusha
xchg
xor
push
outsl
pop
movsb
fistps
cmp
movsl
or
daa
adc
jns
dec
sbb
or
loope
push
mov
ror
gs
negb
mov
addr16
push
or
dec
cmp
push
arpl
dec
cmp
adc
jns
mov
inc
loopne
xor
cmp
int
adcb
mov
mov
stos
push
lahf
xchg
les
mov
cld
fnsave
jl
sub
loopne
sbb
bnd
ret
jge
aaa
dec
arpl
sbb
gs
push
xor
fistl
cwtl
mov
ja
push
mov
jns
xchg
shlb
mov
je
pop
gs
fisubs
add
imul
loop
pop
xor
xchg
mov
jmp
cld
mov
pop
mov
sub
fdivrp
mov
mov
mov
push
push
xchg
lods
mov
xchg
sub
outsl
cmp
cmpl
cmp
push
xor
inc
mov
cwtl
cmp
out
mov
and
outsb
push
mov
das
popa
and
rolb
mov
insl
push
dec
mov
sub
mov
xchg
arpl
xor
cli
sbb
or
das
or
sahf
add
push
inc
ficoms
mov
xor
int
mov
mov
ds
imul
sti
stc
cli
je
test
add
aas
clc
rclb
add
test
pop
push
sbb
push
rorb
arpl
divb
inc
mov
out
mov
cld
int
jmp
add
enter
pop
test
in
xchg
nop
je
pusha
test
je
push
push
jle
adc
inc
xorl
iret
gs
outsl
jb
testl
out
pushf
out
sahf
or
loop
dec
sub
mov
xor
xchg
inc
dec
push
inc
insb
xor
mov
rdpmc
adc
cld
adc
add
scas
fs
test
call
dec
and
ja
or
out
std
cs
cwtl
pushf
outsb
jne
mov
ret
roll
or
inc
and
jecxz
loop
divl
add
xchg
ljmp
sub
xor
sbb
pop
mov
or
jb
mov
loope
mov
xor
sub
xor
das
jmp
lods
xor
jecxz
out
xchg
stos
gs
fistpl
push
repz
inc
outsb
and
xlat
nop
xor
dec
pop
mov
repnz
cltd
mov
incl
je
jo
jge
jmp
test
dec
dec
out
movsb
data16
mov
sub
movl
cli
fstl
sub
cmp
dec
test
aad
push
jbe
idivl
or
mov
xor
mov
cld
xchg
pop
fiadds
shr
sarl
daa
push
fmull
int
ljmp
mov
lock
xchg
mov
mov
adc
pop
packuswb
dec
push
xchg
push
xor
jne
sarl
ret
repnz
in
xchg
clc
or
fstpl
imul
xchg
inc
mov
jns
int3
sahf
jp
adc
pop
inc
mov
push
inc
push
mov
shr
or
sbb
xor
mov
dec
adc
lea
scas
xchg
sar
xchg
pushf
test
inc
fstp
or
aaa
call
out
mov
shrb
inc
lock
sbb
loopne
ret
out
insb
lods
into
sbb
push
js
notl
lahf
adc
testl
xor
mov
not
sbb
adc
hlt
mov
fstpl
and
stos
dec
and
push
inc
out
xchg
ret
lea
xchg
iret
aam
clc
shl
cld
shll
cmpb
sarl
pop
arpl
enter
gs
sarl
jno
aam
insb
fists
popf
sub
jl
xor
dec
adc
pop
and
loopne
add
leave
es
fisubl
insl
out
jae
or
rcrb
loop
cmp
sub
mov
movsl
mov
pusha
xchg
pop
mov
aam
clc
cmp
cmp
mov
sub
mov
mov
push
scas
stos
xchg
sbb
movsb
and
mov
push
lahf
stos
or
std
inc
mov
add
push
mov
cmp
loopne
and
push
pop
sti
jecxz
fwait
stos
sub
sar
xor
mov
shll
rorl
das
jae
jns
inc
xor
mov
xor
lcall
mov
inc
sub
out
adc
xchg
mov
fadds
and
push
sbb
sbb
xorl
fcoms
out
add
test
test
add
xor
inc
bound
and
insb
inc
adc
and
pusha
jb
pusha
sbb
popf
fstpl
lcall
and
pushf
push
fsubr
mov
in
aad
outsl
inc
mov
or
ja
push
rcl
loop
negb
mov
xor
in
push
nop
xchg
jb
dec
push
mov
ja
popa
inc
stos
adc
out
push
popa
out
test
fldenv
sbb
ficomps
dec
fnstsw
mov
es
ja
mov
cmpb
pushf
dec
push
adc
pop
aad
das
mov
add
jnp
je
test
sahf
int3
ucomiss
mov
mov
sti
fdivrl
cmp
or
mov
movsl
imul
push
popf
iret
xor
push
sahf
push
xchg
lret
repz
out
loope
sti
xchg
aaa
mov
xchg
jmp
sub
push
push
push
inc
push
mov
clc
dec
pop
out
arpl
inc
inc
mov
in
or
and
jbe
stos
rclb
into
and
mov
push
jne
mov
rcll
and
les
xor
stos
ret
pop
sbbl
shrb
test
cld
lods
jnp
nop
jle
rol
mov
or
sub
js
push
cli
imul
pop
icebp
outsb
push
mov
loope
into
xchg
imul
shl
popa
fldt
add
dec
add
dec
flds
xor
test
mov
push
lds
ljmp
lds
es
adc
and
call
sbb
mov
push
jle
popf
idivb
das
add
aas
imul
mov
shll
mov
fstpl
das
rorl
pop
jp
in
jle
dec
icebp
lods
xor
xor
fisttpll
rolb
or
add
jbe
lock
ljmp
div
lret
insb
sbb
shlb
in
or
and
xchg
jecxz
jnp,pn
adc
ljmp
jle
and
pop
mov
jns
stc
sbb
icebp
mov
jno
cmp
or
dec
iret
and
fs
cltd
add
popf
clc
sbb
mov
je
xor
adc
adc
lds
sub
pop
jbe
push
in
jo
loope
mov
fcoml
jmp
shl
pop
dec
sahf
pop
xchg
call
push
jl
iret
cmpsl
sub
es
test
aad
pop
jo
outsl
mov
int3
out
pop
jp
dec
lods
mov
out
bnd
push
pop
jle
pop
push
push
mov
negl
cmpb
sbb
lea
pop
xchg
repz
mov
pop
sbb
and
adcl
mov
ficoml
imul
dec
jp
jnp
mov
insb
std
cmp
test
and
sub
and
push
mov
jmp
inc
dec
inc
add
cmp
jne
mov
mov
clc
sbbl
repz
pop
push
add
ret
cmp
into
xlat
jmp
xchg
add
xchg
and
push
pop
cmc
xchg
mov
nop
scas
dec
dec
push
and
es
dec
jb
or
sbb
jb
test
mov
mov
sbb
adc
sub
sarb
incl
hlt
pop
dec
sub
stos
push
aam
push
in
fdivrl
mov
or
out
inc
cld
popf
dec
aad
in
leave
sub
push
mov
insb
and
or
pop
xchg
jl
xchg
or
or
jne
stos
mov
das
or
outsb
mov
icebp
aaa
sbb
sbb
test
add
fwait
mov
adc
inc
inc
shlb
std
add
lea
stos
push
mov
aas
inc
sbb
sbb
dec
es
push
mov
pop
mov
mov
dec
or
xchg
icebp
xchg
mov
or
rcrl
pop
sbb
fisubs
mov
sub
mov
stc
repz
mov
js
sbb
test
mov
cmp
pop
or
cmp
ljmp
imul
xchg
les
mov
aaa
inc
inc
mov
push
inc
add
pop
insb
add
mov
andl
dec
xchg
push
or
ss
push
cmp
sbb
xchg
or
jmp
fmulp
aas
out
pop
pop
ret
mov
push
movsl
mov
inc
dec
pusha
jg
repz
fdivrp
es
inc
mov
outsl
inc
flds
mov
insl
fistpll
outsb
repnz
push
jp
sub
fwait
mov
mov
arpl
vpmacsdql
pop
stos
into
daa
sub
movsl
subb
cwtl
mov
sbb
repz
xchg
nop
dec
add
dec
bound
push
loop
fs
add
movsb
mov
mov
dec
sar
lcall
mov
fdivrp
loopne
mov
into
jo
xchg
lds
sbb
lds
lcall
adc
movsl
scas
not
loopne
add
mov
sbb
cmp
mov
cld
movsl
push
js
or
xchg
and
dec
gs
rolb
mov
lock
in
sbb
es
jae
add
pop
mov
inc
cli
lea
inc
les
cmp
into
fucom
out
test
fsubrl
and
in
inc
jns
dec
xchg
fcmovnbe
mov
cmp
js
cld
or
arpl
adc
inc
mov
xchg
les
loopne
push
movsl
rorb
adc
scas
outsb
mov
dec
inc
mov
xor
and
and
aam
ljmp
push
outsb
mov
lea
movsb
movsl
and
gs
push
sub
jno
daa
or
dec
mov
inc
push
mov
popa
push
mov
cmpsl
lret
jge
inc
imulb
js
loope
movl
ss
rclb
sar
xchg
dec
cmc
xchg
ja
imul
movsl
sti
bound
mov
jnp
xor
popf
and
sub
mov
mov
inc
jle
push
lea
andl
ficoml
fadd
sbb
lds
jp
and
stos
jl
aaa
inc
xor
ss
daa
mov
cmc
lahf
add
ficoml
mov
ss
push
pop
mov
jg
pop
and
jns
ja
negb
xlat
sahf
mov
pop
jbe
andb
jp
adc
jns
nop
jns
mov
jbe
xor
add
sub
insb
hlt
dec
das
mov
add
jae
mov
pop
lods
fisttpll
jle
outsl
js
ficoms
and
cmc
ds
sub
add
mov
jbe
jge
push
stc
cmc
adcb
push
cld
in
jmp
cli
add
loopne
andl
test
loop
mov
xor
jge
iret
adc
aam
loopne,pt
gs
aam
arpl
jno
inc
rcrb
sahf
inc
pusha
and
ret
dec
pop
add
es
mov
inc
shrl
repz
or
jg
mov
or
je
inc
mov
or
xor
aaa
repnz
rcll
adc
lea
ja
dec
add
fisttpll
mov
add
rol
xchg
aas
or
push
ljmp
dec
imul
inc
adc
push
aam
aad
jo
shr
pop
dec
mov
push
pop
mov
imul
inc
dec
daa
das
scas
sar
test
xchg
xor
cmp
sub
subl
inc
push
roll
and
mov
cmp
daa
sbb
mov
mov
insb
fcmovbe
sbb
stos
movsb
fnstsw
lds
outsb
mov
and
sbb
or
loopne
imul
xor
and
xor
rol
lret
out
cvttps2pi
aad
sahf
shrl
iret
add
cmc
push
dec
lcall
and
rclb
mov
ficompl
lahf
mov
repnz
outsl
les
in
hlt
int
cwtl
out
out
cltd
pop
mov
mov
xchg
aaa
sbb
xchg
ja
push
pop
sbb
pop
stos
shrb
enter
iret
inc
fisubl
icebp
outsl
leave
icebp
pop
mov
popa
pop
repz
out
stc
aas
std
call
insb
jne
nop
out
fstps
xchg
inc
fists
int3
test
mov
stc
xchg
xchg
lock
ljmp
mov
cwtl
or
lods
sbb
fs
mov
mov
sti
popf
add
lods
jne
and
jnp
dec
xchg
sar
inc
popl
gs
dec
push
sbb
cmovge
jle
lods
das
jp
dec
lcall
adc
dec
sbb
sarb
jne
xchg
aam
push
xor
mov
jnp
mov
aad
xor
in
jae
mov
sbb
push
mov
in
in
xor
das
loop
xchg
popa
xchg
fdivrs
push
mov
hlt
mov
sub
sub
cmp
ror
sub
orl
nop
rcll
scas
lea
pop
fwait
test
xlat
mov
xchg
mov
popa
fsubl
sbb
adc
adc
or
lock
daa
mov
je
cmp
pop
xchg
xchg
adc
xchg
push
adc
mov
pop
mov
xor
pusha
test
cmp
out
mov
mov
inc
lret
cwtl
aaa
dec
scas
mov
in
rep
std
xor
mov
jg
ret
popa
mov
jle
dec
push
test
icebp
sarl
orb
out
dec
mov
and
mov
add
adc
and
dec
fcompp
nop
pop
in
mov
mov
inc
inc
adcl
sub
cmpsl
mov
dec
out
sbb
push
mov
mov
pop
insb
pop
out
add
dec
movsb
pop
inc
add
sahf
ja
pop
mov
sbb
ss
fs
or
sbb
addr16
stos
in
jns
mov
test
push
int
pmaxsw
insb
pop
mov
fsubr
push
xchg
mov
mov
lock
cmp
add
addr16
insl
fildll
fwait
jmp
xchg
lahf
ljmp
mov
xor
mov
inc
mov
inc
clc
in
cmp
pop
and
clc
fisubrl
mov
xor
bound
shrb
xlat
and
das
xchg
scas
hlt
fisubrl
or
sahf
xchg
xchg
jge
jmp
repz
aam
cmp
cmpsb
in
sbb
ret
lods
sub
iret
ret
or
jmp
fbld
pop
loopne
adc
testb
jecxz
sbb
repnz
jnp
xor
addr16
fwait
lcall
subl
mov
icebp
mov
fdivl
jo
or
dec
stc
mov
sbb
dec
in
out
in
add
in
lret
sub
mov
cmpsl
mov
call
adc
pop
adc
mov
aad
fcoms
jns
push
mov
push
scas
push
subl
fsts
insl
cltd
lret
cwtl
sub
lret
jle
add
jp
inc
mov
iret
xor
cmp
sub
rorl
and
lcall
int
pop
xchg
sbb
dec
mov
scas
fcompl
cmp
mov
aas
in
jg
cwtl
cli
cmc
add
loopne
or
fmul
jo
jmp
pop
imul
int
scas
pop
addr16
nop
pushf
dec
inc
mull
mov
fcompl
lock
inc
mov
ss
jg
xchg
xchg
popf
and
cmp
xchg
cmpsb
xlat
add
pusha
inc
ds
pop
adc
outsl
sub
mov
dec
sarb
adc
dec
sbb
inc
addr16
mov
arpl
jbe
adc
jecxz
scas
lods
shlb
or
mov
cld
mov
vpxor
mov
xchg
loopne,pt
sbb
pop
call
sub
shll
cmp
dec
sub
insl
mov
jg
add
lds
addr16
decb
int3
adc
repz
sub
or
out
pusha
xlat
sbb
dec
dec
stc
inc
or
pop
stos
mov
sub
jnp
add
ljmp
sub
ret
xor
pop
sbb
fs
stc
ds
sub
push
fs
imul
rcrl
out
adc
sahf
jmp
repnz
sarb
push
out
jecxz
push
std
xchg
pop
mov
push
movsb
ljmp
or
cmp
dec
test
arpl
jae
or
xchg
xorb
dec
pop
outsb
and
mov
jmp
negb
mov
incb
and
loope
dec
shlb
rclb
inc
imul
cld
fisttps
and
dec
pusha
adc
js
mov
push
pop
stc
icebp
xchg
aad
fs
dec
dec
pop
and
insb
mov
pop
add
xchg
mov
mov
cmp
int
mov
imul
adc
cmova
icebp
shrb
pop
mov
xor
iret
cmp
cs
stos
jnp
inc
lock
push
lret
imul
mov
sub
int
xchg
pop
sub
aam
mov
inc
adc
ja
sti
jno
lods
mov
loopne
jecxz
push
push
add
out
icebp
and
cmc
test
into
loope
inc
dec
fsts
lods
jo
inc
scas
or
mov
pop
mov
pop
lods
mov
mov
pusha
jno
xchg
mov
dec
xchg
pop
fs
int
adc
gs
xor
daa
addl
mov
mov
mov
pop
shrb
push
mov
int
test
xchg
imul
xor
shl
outsb
pop
xchg
imulb
xchg
mov
outsb
mov
adc
sub
or
pop
neg
xchg
fists
stos
mov
mov
mov
jge
pop
std
xchg
call
fmuls
jp
mov
sub
icebp
jp
cli
cmpl
subb
lahf
repnz
add
jno
int3
dec
out
loopne
test
or
pop
stos
add
sbb
movsb
mov
and
inc
jbe
add
xlat
pop
pop
ja
ja
stos
stc
cli
cmp
aas
mov
push
inc
pop
add
out
xor
rol
sub
add
inc
pop
add
dec
imul
into
push
fisubrl
inc
sbb
xchg
enter
push
std
inc
sub
shlb
xor
push
pushf
mov
or
sbb
add
out
inc
sbb
mov
mov
call
pop
stos
out
seto
or
jae
push
fwait
orl
push
lcall
loope
js
dec
hlt
jno
cwtl
push
push
ja
or
jmp
jp
ror
xchg
sub
es
fdivs
or
inc
decl
xchg
aas
push
push
push
and
sbb
scas
roll
icebp
or
imull
ret
sub
xor
push
xor
xchg
aam
mov
enter
insl
xor
fsubrl
jne
add
enter
add
into
cwtl
xchg
shlb
popa
in
pop
inc
aaa
mov
mov
and
fisttps
cs
mov
cmp
pop
filds
shr
int3
xchg
mov
mov
add
aas
aam
cmpb
stc
sbb
xor
inc
cmp
pop
push
das
outsl
out
roll
fnstsw
or
pusha
in
popa
xorl
cmp
sub
push
lock
sub
mov
mov
jne
mov
sub
rcrl
outsl
or
loop
out
jbe
xchg
hlt
lds
jmp
adc
cld
test
xchg
mov
loope
push
or
and
pop
stc
test
fisubl
xchg
filds
push
inc
mov
mov
mov
add
lret
pop
hlt
lahf
xchg
and
mov
sub
mov
jl
push
add
pushf
cmc
cmc
inc
inc
push
push
and
pop
stos
dec
xlat
and
jg
cmp
loop
lods
idivb
sti
mov
mov
sub
dec
clc
leave
addr16
dec
and
pushf
mov
lea
pop
movl
inc
or
cld
pop
lea
xor
cmpb
sub
mov
jb
inc
addr16
jo
loope
aaa
mov
cmp
pop
and
gs
ficomps
inc
fsts
jl
idivb
add
fimull
in
clc
mov
and
outsl
cmp
push
sub
sbb
pop
or
outsl
push
push
push
cltd
mov
inc
scas
sbb
sub
mov
imul
fldcw
xchg
clc
roll
in
mov
sbb
push
mov
fsub
in
jmp
nop
sbb
inc
movsb
dec
mov
push
out
jle
int3
mov
jmp
jle
xor
enter
mov
rcrl
adc
fisttpll
adc
mov
mov
sub
jns
mov
inc
stc
iret
mov
push
aaa
xor
movsb
dec
test
inc
push
call
fdivl
test
pop
repnz
mov
mov
inc
mov
shlb
mov
clc
jge
and
xchg
fcomip
ffree
std
ljmp
mov
jnp
mov
lods
or
fldt
test
jmp
sbb
std
fidivrs
mov
lods
lcall
push
push
or
int3
imul
dec
and
adc
fisubl
jns
fimuls
shrl
dec
mov
lcall
xchg
mov
add
pop
sbb
cmp
cmp
jmp
aad
jmp
xchg
mov
xor
mov
inc
je
in
add
xor
or
sahf
loopne
or
cmpsl
dec
xchg
repz
sub
out
cmp
dec
xchg
lock
ljmp
les
cmc
or
stc
xchg
rcll
lds
ret
adc
mov
mov
fimuls
cmc
mov
pop
lods
xchg
xorl
mov
andb
sarb
sahf
shl
cmp
enter
pop
add
or
cmp
fisubl
rol
mov
jb
dec
bound
loop
frndint
popa
ret
notl
mov
cmp
jmp
ja
jge
sub
lea
dec
in
cs
jnp
add
cmp
adc
cmpsl
jae
pop
add
lods
mov
lret
cwtl
aam
and
int
shld
xchg
inc
or
xchg
cmp
sub
add
add
mov
mov
insl
rolb
mov
ret
fnstcw
mov
cli
push
sti
dec
movsb
inc
out
mov
mov
push
in
inc
push
adc
sbb
dec
mov
and
cld
mov
idivl
or
and
aad
bound
jbe
lahf
pop
outsb
inc
mov
lock
iret
cmp
adc
mov
push
and
mov
jno
dec
test
jne
je
mov
push
mov
cmc
aaa
and
pop
sub
pop
xlat
push
movsl
mov
and
adc
mov
js
push
sub
xor
mov
testb
mov
test
lock
pop
pop
loope
pop
push
cli
pop
bound
test
or
push
int3
sahf
jb
mov
cs
xor
decb
push
out
and
daa
fldcw
cmp
sub
gs
rcrb
shlb
test
cmp
cmp
enter
popl
or
xor
jo
cmpsb
sbb
mov
scas
dec
cli
iret
test
cltd
pop
pop
push
adc
dec
lea
adc
in
cwtl
es
xlat
xor
add
sub
inc
les
adc
pop
xchg
mov
out
jl
leave
xchg
sbb
mov
movsb
jno
and
mov
add
enter
pushf
sti
inc
cmp
or
jnp
push
out
cmpb
imul
pandn
xchg
adc
insl
movsl
aas
shrl
adc
sub
call
and
movsl
mov
sbb
xchg
or
xchg
xchg
push
cmpsb
repz
mov
rcrl
flds
lods
inc
mov
pop
add
mov
sub
adc
xor
fadd
mov
divb
cwtl
int3
orl
out
dec
cs
push
in
adc
jmp
adc
lods
orb
xor
add
sub
test
adc
ja
insl
push
dec
push
push
mov
inc
sub
adc
sub
and
les
and
or
aam
pop
lea
movsb
dec
lret
dec
jns
les
icebp
sub
mov
int3
xchg
add
jns
rcrl
mov
es
es
mov
dec
sub
jmp
retw
xor
adc
std
imul
xlat
das
daa
jnp
icebp
cmp
push
xor
aam
cmpsl
jmp
out
jns
fwait
adc
push
mov
insb
cmp
push
dec
xor
mov
lea
jp
xlat
sbb
vpunpcklqdq
cli
aam
test
lock
notl
push
in
fisubs
mov
mov
push
inc
xchg
pop
push
shl
mov
fnstenv
xor
adc
mov
push
add
pop
fidivl
mov
leave
hlt
shrl
xchg
xor
sbb
cld
test
dec
bound
pop
add
mov
fwait
arpl
jnp
ret
sub
jle
shl
and
fiadds
loopne
pop
ret
mov
lock
or
cltd
lahf
movsb
andb
pop
pop
push
xchg
pushf
cmp
lock
nop
push
pop
mov
fstps
fcmovne
adc
adc
or
outsl
xchg
cmpl
mov
xchg
push
ja
mov
ds
jmp
cmpsl
stc
add
in
sahf
hlt
push
sbb
jge
movsb
add
sbb
dec
adcl
sub
int3
dec
xchg
inc
dec
in
lods
int3
dec
xchg
pop
hlt
xchg
inc
cwtl
xchg
adc
data16
push
adc
insl
and
xor
jae
iret
jae
inc
rolb
mov
popa
mov
lcall
dec
adc
cmc
call
sub
or
pop
mov
cmpsl
mov
cmpsl
sub
mov
cmp
mov
adc
jb
dec
mov
cwtl
aad
inc
inc
sti
jbe
sbb
clc
mov
xor
mov
ss
outsl
sbb
mov
roll
mov
mov
addb
jecxz
clc
cmp
pop
data16
and
xchg
aam
cmp
push
mov
jecxz
inc
test
fs
jnp
aaa
rep
sbb
pop
iret
mov
into
hlt
mov
or
pop
lret
mov
pop
mov
xor
dec
pop
insb
inc
xor
loopne
ficomps
cmpsb
xorb
fimuls
scas
arpl
pop
dec
es
xchg
xchg
iret
and
jo
outsb
xchg
test
leave
daa
push
jecxz
cmpsl
pop
dec
xchg
mov
pop
mov
fwait
sub
pushf
sbb
dec
sub
daa
rcll
das
pop
push
sub
push
sub
out
sbb
push
pop
mov
add
scas
inc
pop
das
xchg
inc
orl
ret
xchg
ffreep
dec
std
sbb
jbe
xchg
aad
jl
les
mov
jo
jp
jle
mov
test
lds
scas
int3
sbb
daa
imul
mov
dec
dec
push
or
xchg
xchg
inc
adc
je
les
mov
jo
cs
int3
fcomps
lret
sbb
cmpsl
paddq
stos
aas
dec
repnz
test
out
ret
imul
sti
arpl
sbb
outsb
jbe
push
mov
out
mov
leave
inc
jno
sub
xchg
pop
push
or
lods
inc
fs
outsl
mov
gs
jg
xchg
inc
nop
shll
fcomi
dec
jo
fdivrl
push
jns
xchg
xor
insb
frstor
ret
repz
mov
inc
out
or
orl
xchg
dec
clc
push
xchg
ds
jns
pushf
imul
mov
cs
sub
or
and
adcb
mov
test
adc
adc
cs
fldenv
mov
cmp
in
pop
decl
or
lahf
or
adc
notb
xchg
inc
std
or
call
pop
frstor
jge
pop
cld
nop
pop
mov
sbb
in
ret
mov
dec
jp
mov
or
mov
scas
mov
pusha
fs
or
xchg
inc
fcmovne
out
sub
adc
xor
or
pop
xlat
scas
fcmovne
dec
xlat
sbb
sbb
xchg
mov
in
lahf
lret
push
xchg
andb
cld
mov
push
lcall
loop
orb
adc
adc
xor
push
rorl
out
movsl
push
lods
and
std
sub
repz
inc
and
fwait
mov
dec
orb
data16
fdiv
mov
sbb
mov
jle
adc
xor
mov
aad
mov
iret
pop
sub
push
std
cmpsb
das
add
pop
cmc
fdivrs
xor
shll
int3
adc
addr16
xchg
sbb
les
sbbl
pop
repz
out
xlat
pusha
or
xor
out
cltd
cs
test
fdivl
cmp
sub
outsl
jb
stos
sub
data16
jmp
sarb
imul
repz
mov
or
repnz
das
je
imul
ja
mov
mov
mov
mov
mov
cmp
fdivrl
push
pusha
out
popw
fstpt
repnz
or
inc
jmp
mov
mov
aaa
fnstenv
jmp
sub
lods
push
js
dec
add
loop
mov
stos
or
ret
scas
out
les
test
dec
testb
mov
insl
stos
mov
mov
and
fmul
fstpl
or
cmp
aam
ljmp
in
cwtl
push
enter
test
pop
lods
add
jmp
hlt
add
mov
cmp
add
dec
cmp
pop
out
ret
mov
add
lret
les
sub
jb
add
adc
mov
jnp
pushf
and
cmp
xchg
fmul
pop
xor
xor
lea
mov
sbb
sbb
inc
jl
and
outsb
xchg
int
pop
movl
call
out
jne
stos
add
and
mov
iret
jb
fsub
jmp
es
xchg
repz
xchg
call
sahf
or
sbb
fldl
xchg
sub
add
popf
aam
icebp
lgs
sub
gs
jo
push
mov
sbb
orl
mov
lods
sub
and
sub
adc
imul
jno
and
stos
imul
inc
xchg
push
mov
test
add
fs
bound
test
loop
xorl
and
mov
ss
cmp
or
sbb
inc
in
das
fdivl
into
and
jge
and
or
pop
rcrl
cmc
stos
mov
mov
ret
pop
dec
popf
adc
outsb
ljmp
pop
pop
mov
sub
jl
sti
aad
loopne
jno
inc
loopne
push
in
push
js
mov
inc
mov
stos
mov
adc
dec
cmp
add
pop
push
inc
mov
lea
adc
movsl
jg
imul
or
xchg
data16
jmp
movsb
pop
push
push
es
pop
lods
jbe
ja
cmpsl
dec
fld
scas
cmp
mov
jmp
in
or
test
cmp
fistpl
xlat
popa
test
sbbl
stos
loop
lods
pop
xchg
pop
gs
enter
loope
cld
mov
push
mov
xor
loopne
gs
mov
lods
cmpsl
inc
js
mov
xchg
mov
xchg
hlt
xchg
in
lcall
cmp
add
jns
dec
mov
xchg
out
and
sub
push
push
pop
scas
jp
call
lret
fisubs
imul
or
adc
dec
inc
popf
mov
mov
mov
mov
mov
das
pop
adc
lock
fwait
lret
std
lods
mov
pushf
or
addr16
leave
subb
mov
int
icebp
test
xchg
pop
outsb
enter
testl
rorl
adc
jno
xor
das
fwait
adc
xor
negb
xor
jle
clc
adc
bound
cmp
pop
xor
leave
xchg
jae
mov
inc
dec
sbb
scas
ffree
push
int3
lahf
fbld
xchg
test
in
pop
aad
jns
sub
adc
int
rclb
inc
outsb
sbb
lret
cmp
sbb
fstl
mov
sub
jp
xchg
mov
das
adc
lcall
fmull
xor
adc
rcll
lret
lods
loope
sbbl
jbe
in
out
fcompl
inc
mov
dec
jns
mov
xor
pop
mov
jno
cmpsl
mov
imul
sbb
cmp
movsb
add
add
inc
mov
ss
cmpsl
cmp
icebp
insb
imul
add
in
xchg
popf
cli
jg
loop
xor
push
cwtl
nop
jb
dec
push
push
xchg
push
pop
mov
sahf
scas
mov
mov
pushf
cmc
movsl
out
outsl
outsl
dec
stos
push
inc
call
ret
cmpsl
inc
scas
or
lea
aas
idivb
and
cmpsl
imulb
int3
jl
mov
pop
out
flds
jbe,pt
sbb
fwait
das
xor
fsts
push
aaa
ret
lahf
inc
inc
inc
mov
mov
cli
pop
sub
jb
ficoms
cli
xchg
out
daa
fisubrl
fs
jae
mov
xchg
out
lahf
fs
or
sub
lock
xchg
jnp
cmc
push
add
push
sub
in
movsl
les
add
sbb
jp
shrb
lahf
pusha
outsb
les
stos
dec
sbb
test
inc
insl
icebp
pop
jecxz
mov
movsl
fdivl
mov
std
xchg
stos
cwtl
sub
xor
add
push
and
push
push
push
inc
jecxz
fisubrs
jmp
gs
mov
inc
cmpsl
pop
or
add
int3
rolb
stos
loope
dec
pop
scas
into
push
in
das
cmp
push
pop
add
xor
jg
fdiv
sub
cmp
push
push
test
dec
lea
pop
sub
add
cmp
adc
scas
dec
or
xchg
scas
xor
fyl2xp1
js
ja
cld
lods
sub
js
in
add
mov
pop
adcb
mov
add
lods
pop
orl
vpacksswb
mov
pop
loope
add
push
and
push
jg
mov
mov
es
fstp
movb
inc
mov
dec
cmp
ljmp
and
adc
mov
imul
movsb
push
pop
adc
or
jecxz
in
jg
dec
repz
adc
or
aaa
xor
bt
iret
pop
loop
fidivs
fcomps
outsl
dec
xor
adc
orb
fsts
mov
iret
push
dec
add
rcr
mov
movsb
decl
cmc
cli
xor
cmp
aam
pop
mul
jge
aas
mov
mov
push
int
mov
and
leave
repnz
cmp
movsb
jmp
test
sbb
adc
pop
jecxz
inc
dec
test
loop
adc
cmp
rcr
and
leave
xor
pop
mov
add
sti
xchg
into
fwait
push
testl
cmpsb
out
imul
cld
call
and
mov
xchg
lea
mov
push
cwtl
dec
inc
imul
mov
loop
pop
mov
aam
hlt
push
mov
neg
xchg
mov
bound
imul
cld
lods
sub
and
insl
jg
sbb
daa
sahf
loopne
into
xor
dec
jne
pop
clc
sub
adc
and
mov
or
jno
xchg
outsb
cmp
mov
and
leave
adc
lcall
cmp
nop
mov
std
sub
sbb
or
pusha
mov
xchg
mov
push
jecxz
xor
pop
push
add
push
xor
leave
jno
movsb
loopne
lea
ret
pop
lret
decb
int3
lods
sbb
dec
lods
push
movsb
add
mov
xchg
xchg
loopne
imul
adc
xor
scas
mov
inc
push
mov
rcll
lret
dec
mov
shr
pop
inc
call
and
cmp
in
or
cltd
fwait
aas
dec
xor
push
mov
imul
or
xor
orl
sub
scas
aas
out
xor
inc
push
pop
sub
daa
add
xchg
stos
push
in
or
pop
jae
adc
cltd
xchg
or
stos
push
pushf
clc
xchg
jns
ret
jns
fcmovbe
ja
push
pop
cmp
mov
xor
push
movntps
and
sbb
xchg
push
push
jae
or
mov
clc
mov
imul
mov
loopne
loopne
add
aas
addb
jl
dec
adc
dec
push
and
test
rol
pop
fcomps
xor
push
cmc
pop
jmp
and
mov
lock
ja
rorl
mov
mov
or
cs
push
loope
jecxz
mov
test
addl
cmpsb
mov
out
mov
dec
pop
aaa
push
out
in
or
dec
aas
mov
int3
sub
jbe
test
mov
jne
sub
sbb
ret
fbstp
mov
mov
jmp
dec
bound
mov
cmp
sbb
xchg
mov
loopne
or
pop
out
aad
add
lods
mov
and
mov
inc
pop
int
scas
iret
mov
cmpsl
sub
xchg
mov
mov
push
imulb
or
push
in
cli
mov
in
lods
dec
jp
repnz
jp
notl
jae
xor
or
gs
xor
pop
push
mov
neg
pop
daa
jnp
in
mov
jo
mov
dec
loopne
push
aas
inc
addr16
out
mov
adc
jne
or
dec
pop
scas
jg
fsts
imull
cmpsl
jp
adc
cmpsl
testl
cmpsb
and
popf
adc
dec
sbb
or
sbb
shl
sub
add
push
push
rcrl
fsubrs
das
js
in
push
in
mov
lods
pop
dec
mov
enter
int3
push
lahf
push
int3
lock
int3
dec
addr16
or
fildll
mov
hlt
frstor
xchg
xor
push
sbb
fwait
stc
sbb
out
add
jo
mov
imul
jne
and
test
or
in
mov
mov
xchg
push
in
dec
xor
adc
xchg
cmp
fwait
cltd
mov
repz
lret
pop
dec
mov
add
mov
push
jecxz
jecxz
xchg
add
ret
or
jne
into
mov
adcl
repnz
test
in
movsl
pop
sarb
sti
jnp
cmpb
push
inc
xchg
cmp
sarb
xor
lcall
int
inc
punpcklwd
rolb
movsl
push
cmp
out
or
inc
sub
push
inc
mov
and
and
mov
and
jle,pt
mov
jmp
xor
inc
dec
adc
jns
sub
xor
fnsave
fwait
movb
hlt
or
es
jne
jnp
stos
nop
mov
cld
and
pop
xchg
andl
ror
stos
xor
jle
stos
movsl
xor
dec
adc
mov
ja
sbb
pop
shll
xchg
mov
mov
cmp
and
call
test
sub
rclb
cmp
pop
roll
lret
jl
sbb
push
sahf
mov
aad
dec
jge
mov
xorl
xor
jg
fisttpl
and
leave
fs
push
jge
mov
iret
aas
cmp
fmul
and
pusha
push
sti
pop
push
iret
ds
push
inc
xor
mov
sbb
test
cmpsb
jo
mov
cmp
mov
xchg
cmp
shrb
adc
xchg
inc
iret
sub
or
push
stc
dec
sub
mov
dec
fidivrs
sbbl
push
call
dec
lock
lret
stc
mov
mov
add
cld
fwait
test
xor
gs
mov
inc
inc
data16
cwtl
inc
fs
and
mov
push
cmp
mov
and
mov
pop
jle
sbb
gs
xchg
and
pop
pop
push
orl
jb
dec
in
xchg
cltd
movsl
add
jp
into
dec
xor
xor
scas
adc
lods
inc
subb
fs
fcoms
aam
movups
daa
out
jne
shrl
mov
and
lods
and
ss
jmp
movsl
adc
pcmpgtw
adc
and
imul
mov
leave
jo
cwtl
test
push
xchg
push
pushf
arpl
cmp
jl
sub
mov
lret
out
add
pop
pop
int
cmp
aaa
imul
out
mov
jp
cmpsl
aam
jno
inc
dec
addr16
dec
sarl
in
add
or
rcl
nop
jo
in
xchg
imul
push
add
movsb
xor
mov
pop
mov
dec
scas
push
dec
clc
data16
int
pop
je
push
out
sbb
sub
or
stos
mov
fiadds
inc
mov
es
push
xchg
aaa
addr16
dec
xlat
lods
fimuls
sbb
insl
pop
mov
icebp
push
sarl
fs
xchg
cltd
sbb
fadds
mov
fistps
fdivrs
mov
sbb
dec
jmp
pop
call
cmp
and
es
lret
push
data16
mov
std
sarl
adc
jae
push
push
cmpsl
pop
test
xor
xor
jno
or
lea
mov
mov
sahf
dec
dec
xor
cs
and
inc
imul
repz
jno
sbb
stos
pop
imul
cmc
xchg
je
mov
xchg
adc
jb
mov
mov
dec
addr16
dec
ljmp
inc
movsl
xchg
jmp
loope
in
adc
xchg
cld
pop
lock
sbb
outsl
add
dec
push
lcall
faddl
dec
pop
or
int
hlt
or
pop
outsl
jp
outsl
jmp
and
xchg
mov
jnp
iret
ds
fildl
gs
add
inc
sbb
push
cs
and
cs
test
repz
pop
or
loope
andl
lock
mov
sub
mov
insb
and
sar
ret
mov
sub
or
add
jl
fucomp
push
push
mov
ljmp
pop
pop
stos
fwait
inc
ret
jb
jnp
lds
push
ss
ret
sbb
mov
dec
fxrstor
mov
cmpsl
or
jnp
cmpsl
andl
mov
int
fwait
dec
inc
mov
adc
push
pop
pop
and
mov
sahf
adc
inc
movsb
sbb
sbb
cmpsl
out
cld
pusha
fistpl
out
jl
stc
jle
jo
js
sahf
mov
popf
add
movsb
ljmp
das
add
ja
cmp
movsb
mov
cmp
and
jmp
xlat
mov
frstor
push
sub
push
jb
xor
insl
dec
mov
push
insb
ror
xlat
cli
push
stos
add
lea
repz
cli
icebp
mov
adc
jl
pop
lahf
pusha
and
iret
shlb
cmp
xchg
xchg
loope
lret
int3
and
push
pop
xor
movsl
xor
fs
movsl
push
lcall
dec
push
mov
imul
in
dec
sbb
push
ljmp
push
fadds
test
divl
mov
cld
movsl
jno
rorb
xor
inc
sbb
cmc
or
sbb
cltd
adc
iret
scas
mov
cmp
add
jb
mov
xchg
jbe
xor
jne
les
cmp
jge
repz
je
push
popf
das
xor
bnd
add
dec
int3
inc
in
dec
fmuls
jl
fnsave
adc
jno
pop
cmp
sbb
mov
nop
negb
push
adc
fs
xchg
inc
movsl
out
inc
into
test
mov
jecxz
sub
dec
rorb
sbb
jle
cmpsl
xchg
call
mull
xchg
sbb
cmp
sarl
test
inc
dec
cmpsl
add
mov
inc
cmc
fimull
int3
fwait
cmp
shll
cmp
ret
dec
xor
adc
jns
lcall
cwtl
dec
inc
xor
bound
mov
mov
out
mov
or
or
aas
adcb
pop
xor
and
loop
cmc
add
mov
pop
inc
mov
adc
jle
sub
xor
stos
cmc
fists
inc
push
orl
mov
hlt
mov
xchg
fnstcw
push
add
cltd
cmp
arpl
idivl
sbb
and
jg
sbb
pop
sbb
jo
sub
sub
jmp
pop
imul
mov
mov
outsb
mov
push
movsl
mov
adc
adcl
enter
xor
cmp
dec
add
mov
test
adcl
inc
dec
mov
pop
or
repz
pop
xor
dec
and
lock
stos
jmp
jle
jnp
add
addr16
push
test
cmp
push
inc
std
cmp
and
stos
sub
popa
push
cmp
lods
jne
aam
pop
push
jle
pop
ss
sub
das
cmc
push
mov
dec
scas
nop
in
push
sbb
ljmp
pop
movsb
lods
lods
cli
inc
sbb
mov
lret
outsl
insb
push
adc
popa
sbb
lods
adc
addr16
out
shll
mov
js
dec
xchg
mov
jp
aaa
jecxz
xor
rcll
clc
and
fisubs
out
or
in
jl
mov
sti
test
popf
addr16
jmp
iret
add
add
out
clc
bound
adc
popf
mov
add
cmpsl
xchg
xor
outsl
mov
lds
out
push
or
lret
das
iret
mov
dec
or
sbb
repz
in
add
mov
lods
sub
adc
push
imul
notb
cmp
mov
pop
inc
sbb
jp
mov
add
push
pop
sub
test
jmp
loopne
dec
aam
int
int3
mov
or
std
push
cmp
sub
into
es
arpl
pop
pushf
mov
xor
pop
nop
mov
loopne
mov
xor
pusha
ret
test
push
push
scas
xor
dec
mov
xchg
xchg
cld
mov
jg
mov
add
jge
mov
pop
jle
ret
mov
adcb
test
adc
mov
adc
aam
fistpll
outsb
fwait
into
xchg
mov
mov
fistpl
jno
push
pop
or
bound
mov
je
mov
imul
scas
sbb
mov
mov
aad
adc
loope,pn
imul
nop
push
pop
xor
rcrb
out
mul
mov
mov
mov
sub
das
mov
inc
stos
pop
fcmovne
dec
dec
ss
loopne
fcmovnb
and
adc
mov
out
adc
prefetch
addb
xchg
sub
daa
sbb
push
xor
mov
xchg
aad
cmc
rorl
dec
div
call
or
xlat
jp
cmp
sbbb
push
xor
sbb
ja
shl
aas
and
push
xor
cmp
sub
push
leave
pushf
pop
xchg
cmpsb
mov
mov
lcall
pop
nop
fucomp
mov
pop
push
mov
in
sub
sub
and
pop
jle
jb
mov
xor
in
sub
imul
pop
dec
pushaw
sti
psrlq
lods
outsl
or
dec
add
jg
xor
mov
cmpsb
jae
fucomip
pop
dec
call
pop
sub
xor
pop
in
sub
jge
bound
scas
or
lds
movsb
loopne
es
adc
out
cmp
mov
fsubs
jno
mov
ljmp
lahf
sbb
jb
lret
push
push
call
jg
mov
ljmp
xchg
and
xor
out
mov
popf
gs
push
mov
sub
mov
push
scas
popf
cmp
test
and
push
aas
ja
xor
cwtl
out
push
xor
push
mov
cmp
cmp
mov
aam
fwait
sub
and
xchg
jle
das
orl
lods
test
scas
jp
cld
xor
jp
in
ljmp
sbb
sahf
imulb
repnz
into
loopne
inc
mov
sbb
add
mov
adcl
and
push
icebp
in
insb
push
mov
xchg
sub
in
push
ljmp
jo
xchg
sbbl
int3
xchg
adc
hlt
add
add
mov
mov
add
dec
adc
not
dec
loopne
mov
adc
scas
out
xor
cmp
mov
xchg
lcall
mov
loopne
sub
aam
fnsave
mov
mov
adc
and
add
cmc
cmp
mov
cli
aaa
sti
clc
imul
push
cmp
push
shr
inc
xchg
fldenv
lret
loopne
notl
aas
jno
scas
test
xor
dec
jae
or
xor
mov
ficoms
pop
stos
test
call
testl
xchg
mov
nop
cmp
xchg
cs
cmp
iret
cmc
mov
orl
test
fwait
shrl
cmpsb
mov
fnsave
inc
xchg
shl
aaa
jne
xchg
out
cmpsb
mov
shlb
add
or
gs
ficompl
sbb
in
jb
adc
mov
adc
sbb
ret
dec
ficoms
push
push
push
mov
mov
ret
loopne
sbb
dec
xchg
or
enter
outsl
in
test
mov
int3
or
shlb
or
and
in
sbb
inc
mov
fildl
xchg
or
aam
enter
loopne
int
orb
dec
xchg
sarl
aad
adc
pop
pushf
loop
movsl
nop
pop
jno
int
add
inc
sbbb
sbb
xchg
sahf
fsubrs
aad
add
mov
sub
push
add
or
sub
and
pushf
cmp
cmp
xor
lret
in
nop
xor
push
aas
dec
xor
idivl
and
mov
jno
aas
jecxz
or
ja
jbe
loop
out
shl
adc
xor
ja
data16
testl
test
xchg
xor
out
dec
icebp
out
push
jge
lods
and
test
in
fwait
xor
mov
scas
fmul
jne
push
pop
push
enter
sub
shrb
rclb
pop
add
dec
out
iret
mov
inc
shlb
and
sbb
adc
dec
xchg
fbstp
push
cmp
das
jl
stos
cmc
pop
jns
xchg
push
les
adc
add
mov
pop
jmp
dec
aad
loop
xchg
pop
push
lret
out
add
push
insl
or
movsb
mov
jl
cmp
lock
or
adc
int3
pop
popf
ficoms
nop
sbb
mov
jmp
cltd
mov
test
sub
cmpsb
adc
push
pop
daa
and
aaa
or
into
jo
popa
lds
test
into
lds
pop
repnz
inc
icebp
jbe
dec
add
jns
int
lds
rcll
je
test
cmc
rcl
xchg
sub
inc
movsb
pusha
dec
clc
sub
xchg
pop
mulb
adcl
sbb
aas
bound
mov
scas
xor
icebp
sahf
int3
jmp
movsl
lods
cmp
sbb
call
aaa
mov
jp
or
pop
stc
mov
pop
jns
divl
jnp
mov
pop
pop
rcr
clc
js
ss
sbb
stos
mov
cmpsl
test
dec
int3
aas
push
xchg
adc
cmp
mov
shll
jnp
sub
sbb
pop
pop
add
pusha
pop
ljmp
push
xchg
mov
stos
dec
addr16
lret
xchg
cmpsl
clc
bndldx
mov
mov
scas
push
dec
in
ja
mov
in
into
std
add
push
xor
repz
fscale
sbb
xchg
push
xlat
leave
xorl
les
cmpsb
ret
pop
popf
addr16
fbld
cs
inc
fwait
pop
xor
repz
in
sbb
sbb
push
add
mov
in
cmp
cmp
add
push
mov
loop
outsl
jno
xchg
repnz
popa
fwait
loopne
jae
push
inc
inc
sbb
aas
cwtl
or
iret
sub
mov
loopne
jo
and
inc
loopne
inc
test
in
fmull
lret
sbb
mov
xchg
cmp
arpl
stos
and
mov
dec
fwait
mov
cld
mov
adc
loope
add
sub
imul
mov
ret
stos
push
cmp
pushf
mov
out
or
mov
fcompl
aad
test
xchg
mov
lods
xchg
mov
sbb
lods
xor
lret
sub
xor
jo
mov
imul
mov
or
lahf
pop
es
cmp
cli
fldt
mov
cmp
pop
push
mov
add
or
jo
mov
repnz
cmpsb
lret
jo
aaa
das
inc
mov
mov
dec
mov
shl
in
dec
mov
test
ret
mov
in
push
dec
jbe
inc
cmp
fdivrl
inc
lock
pop
xchg
movsb
xchg
cmp
jl
incl
adc
pusha
enter
loop
push
xchg
shll
daa
jae
imul
cmp
pop
and
cmp
mov
scas
icebp
cmpsl
mov
push
cmp
cmp
sbb
cmp
pusha
gs
xchg
enter
rsqrtps
faddp
lcall
mov
pop
cltd
fnstenv
cltd
mov
and
nop
pop
inc
addr16
inc
hlt
loop
adc
stc
cmpsb
cmp
in
mov
ficompl
mov
fbld
scas
sahf
and
adc
hlt
and
aas
cld
arpl
movsb
les
xchg
lret
sub
and
test
enter
stos
mov
movsl
incb
mov
xchg
in
decb
push
shll
dec
xchg
fisubs
insb
pop
sub
movsl
push
fdivrl
aas
or
movsb
adc
dec
adc
daa
cwtl
mov
push
jmp
mov
pop
enter
ss
mov
sahf
mov
imul
jnp
dec
cwtl
cmp
jg
jge
push
leave
fbld
add
jp
sbb
xchg
dec
cmp
mov
xchg
out
dec
in
jl
std
xchg
jge
adc
addr16
and
imul
or
out
push
jno
add
pop
ljmp
pop
aad
dec
mull
lret
mov
mov
ror
inc
cmp
shll
push
pop
ret
andb
lret
outsb
pop
jbe
lock
hlt
arpl
repz
cmpsl
call
inc
imul
or
adc
jb
rcll
pop
mov
and
sub
add
fidivrs
and
add
in
xchg
jg
mov
loop
ljmp
jo
and
movsb
add
sub
daa
popf
dec
shlb
push
lahf
inc
int3
adc
jle
pop
adc
popf
xchg
js
repz
push
pop
repnz
cmpsb
std
push
in
xlat
fsincos
dec
xlat
ljmp
loopne
std
push
pop
and
xor
repnz
lods
adc
cltd
dec
xchg
ljmp
mov
gs
pop
negb
into
mov
fisubrs
push
rorb
adc
push
test
pop
inc
dec
mov
int
loope
jge
mov
ret
jnp
nop
xchg
std
mov
sub
and
lret
jnp
adc
xchg
xchg
insb
aad
jmp
ljmp
push
adc
push
sarb
add
sahf
mov
shll
repnz
or
in
inc
lds
ss
adc
push
xchg
fdivs
inc
rorl
sub
shrl
mov
lret
ja
scas
loopne
cltd
cmp
cmp
shlb
ficompl
clc
jge
nop
jne
ss
sub
add
stc
or
aas
scas
add
loopne
bound
adc
movsb
cltd
push
cmp
xchg
cmc
inc
push
aam
adc
jne
push
inc
mov
lds
inc
sub
push
mov
js
movsl
stos
dec
cmp
push
sub
adc
int3
and
pop
sti
and
sarl
mov
xchg
loopne
jge
push
mov
out
mov
in
jg
lahf
pop
in
aam
pop
ds
add
pop
mov
jecxz
outsb
sub
test
push
jge
xchg
fwait
outsl
mov
or
hlt
push
andw
xchg
imul
or
dec
xor
mov
mov
in
lcall
mov
inc
mov
cmp
cmp
lret
insb
jecxz
jecxz
fld
je
sbb
mov
mov
mov
pusha
inc
cli
pop
pop
mov
pop
outsl
into
cli
repnz
cltd
loopne
loop
push
ret
in
fildll
jmp
lret
mov
dec
xchg
aam
fidivs
into
adc
cmp
push
jmp
xor
cli
pop
outsb
addl
adc
mov
add
push
xchg
nop
mov
dec
and
dec
adc
cmp
pop
inc
pop
lahf
mov
mov
adc
lcall
add
pushl
mov
inc
loop
mov
push
test
cmpsb
out
jmp
jb
int3
sbb
hlt
popf
or
mov
andb
adc
leave
enter
add
jl
into
mov
cmp
add
sbb
movsb
divl
inc
in
rorl
or
ja
ljmp
or
inc
dec
nop
mov
test
mov
sbb
fidivrs
mov
cmc
shlb
xor
mov
and
ljmp
imul
rep
adc
insl
inc
sub
imul
or
dec
inc
jne
out
test
cwtl
xchg
std
les
sub
stc
dec
xor
lahf
popf
add
jne,pn
push
pop
push
aam
push
adcl
jb
data16
xor
pop
cwtl
pop
movsl
dec
dec
mov
xchg
js
out
inc
cmp
or
insl
push
out
rorb
and
subb
mov
in
dec
jmp
push
leave
xor
mov
gs
aas
lret
push
sbb
pusha
scas
cmp
bound
inc
sahf
iret
movsl
into
ret
mov
call
fidivl
addb
pusha
jl
xchg
mov
divb
lds
lods
iret
adc
cli
mov
adc
int3
in
daa
in
movsb
or
rclb
sub
xchg
mov
sbb
int3
test
xor
jne
test
add
and
push
repz
aaa
stc
enter
sub
dec
and
outsl
rclb
je
inc
push
ja
leave
in
stc
adc
or
ret
test
out
in
pushf
cltd
push
cmp
or
fdivp
mov
dec
stos
pop
arpl
sub
stos
popf
lds
mov
shlb
int
les
in
lret
daa
or
lods
push
scas
xchg
adc
sti
add
xchg
pusha
jns
sub
sbb
in
daa
add
and
or
jge
sbb
mov
mov
scas
and
ret
push
jle
insb
and
xorb
shlb
jp
in
xchg
in
aad
leave
mov
push
mov
out
or
fsubl
cmpsb
or
push
adcb
pop
mov
lods
fcom
lods
mov
mov
mov
cmpsb
mov
sbb
mov
nop
sub
mov
push
and
out
fwait
xor
xchg
loopne
pop
arpl
in
movsl
test
sbb
cld
pop
cs
jbe
cltd
fiadds
cmp
jmp
xchg
and
pop
lea
add
inc
in
adc
jo
bound
fldt
or
jmp
test
cmp
icebp
jb
outsb
mov
repnz
ret
push
xor
daa
cwtl
outsb
rorl
nop
inc
sub
test
push
jo
cmp
and
sub
xorl
xlat
stos
jne
js
sahf
mov
notb
add
jle
fcmovnbe
mov
popa
fdiv
adc
repnz
dec
mov
dec
push
dec
adc
les
pusha
cmc
adc
stos
jno
sub
sbb
shlb
out
mov
dec
out
cmp
fst
sahf
icebp
cld
jl
add
mov
pop
loop
clc
clc
rcr
fcompl
sub
cmp
lock
shlb
mov
cli
pop
sub
sbb
or
push
push
inc
sti
repz
or
pop
mov
iret
xchg
pop
cs
sbb
or
mov
fs
imul
cmp
mov
stc
aad
jae
mov
add
loopne
adc
ficoms
dec
cld
add
sub
lock
sbb
dec
and
dec
mov
jno
inc
shll
outsb
call
pop
fbstp
fucomip
mov
jne
and
movsl
jnp
dec
push
adc
ret
or
sbb
adc
or
rolb
jbe
inc
jne,pt
sbb
mov
cmp
insl
mov
jne
push
mov
rcl
push
mov
mov
sub
gs
mov
xchg
mov
leave
jno
inc
mov
test
sub
mov
hlt
jg
dec
mov
inc
mov
and
jnp
mov
xchg
movsl
adc
insl
add
lret
inc
xchg
xor
dec
sub
and
andb
xor
aaa
sub
push
sbb
xchg
add
stos
and
push
mov
xor
sbb
mov
enter
add
xor
mov
lods
or
sbb
iret
ja
or
ss
mov
mov
es
les
mov
test
lods
xor
mov
and
movsb
divb
add
mov
jp
roll
pop
test
ds
xor
or
in
loopne
mov
jo
decl
mov
and
xlat
xchg
xor
arpl
lret
cmp
mov
push
xchg
outsl
sbb
loope
inc
pop
leave
les
mov
and
xchg
inc
out
inc
mov
clc
shrl
dec
into
push
xchg
jno
inc
push
inc
outsl
push
lds
cmpb
out
jae
sbb
pop
sbbl
pushf
push
mov
mov
mov
mov
lret
out
addr16
mov
and
cmp
add
mov
ljmp
pop
push
je
scas
push
lret
sbb
cmp
addr16
test
faddl
repz
mov
mov
add
enter
xor
jo
xchg
iret
rorb
fsts
inc
jno
sbb
loopne
mov
fdivrl
jp
lds
or
leave
dec
mov
lock
adc
cmp
in
out
shrl
das
aas
lds
and
lea
sbb
add
dec
into
sahf
ja
or
or
sbb
arpl
subl
mov
mov
je
jle
gs
pop
dec
adc
mov
fimuls
cmpsl
std
xchg
shlb
add
push
add
sbb
jl
std
gs
scas
in
fistpl
outsb
add
loopne
std
mov
or
ljmp
fsubs
clc
adc
mov
sub
in
push
adcb
nop
popa
ds
ss
insb
into
push
aad
cmpsl
je
shl
in
lea
addr16
mov
mov
xchg
mov
adc
push
sub
test
pop
movsl
in
clc
ds
dec
add
mov
jecxz
loope
xor
aad
out
jmp
and
movsl
into
mov
mov
sbb
stos
scas
fsubl
rcrl
out
or
mov
sub
subb
sbb
daa
sbb
pusha
ljmp
call
shlb
shlb
test
and
push
into
dec
add
subl
loope
push
loopne
lock
sub
cltd
test
lock
inc
arpl
stc
add
sbb
cmp
loopne
rolb
and
imul
dec
ss
aam
sahf
jmp
mov
pop
outsb
inc
or
inc
pop
flds
push
adc
repnz
inc
pop
cli
fisubl
mov
add
rorb
dec
push
pop
lret
sub
lret
adc
sbb
fwait
outsl
cld
cmc
jnp
mov
push
mov
mov
divb
fistpl
or
dec
andb
cmpb
icebp
lahf
add
scas
adc
cwtl
xor
aas
inc
rolb
adc
mov
ljmp
test
test
xchg
inc
das
and
ss
mov
or
loope
test
ljmp
inc
shrb
dec
movsl
js
aas
sbb
push
and
cmp
add
orl
dec
ljmp
iret
sub
cmp
xchg
sbb
shrl
ljmp
jmp
in
repnz
cli
xchg
sub
pop
out
lea
xor
lds
cmp
xor
push
lret
icebp
pop
jle
sbb
pop
push
mov
jo
jns
fisubl
rcrl
stc
push
and
add
sbbl
incl
cli
inc
and
mov
js
pushf
out
cmp
mov
aam
inc
xor
jmp
pushf
sahf
push
ljmp
mov
dec
fs
stc
punpckhbw
aaa
psrad
inc
fldt
scas
and
mov
idiv
ret
repz
inc
lret
pop
jg
or
dec
cmc
test
jecxz
aas
sub
mov
mov
dec
int3
cmpsb
adc
mov
and
adc
sbb
lss
add
enter
call
repz
jnp
mov
sbb
mov
in
pop
dec
jb
mov
clc
dec
aad
imul
stos
push
test
out
pop
mulb
nop
icebp
lret
mov
pushf
mov
outsl
mov
pop
popf
pop
imul
test
cmp
jb
dec
xor
movsl
adc
or
addr16
mov
les
mov
mov
loope
and
lds
mov
xrelease
push
cmp
ret
stos
sbb
pop
cmp
lock
in
iret
mov
sub
incb
cld
out
dec
jno
push
adc
xor
pop
insl
cmp
mov
add
inc
cmp
sub
sarb
fldt
test
bnd
shll
sbb
adc
bswap
mov
sti
mov
arpl
test
ror
mov
test
inc
pop
push
repz
pop
pop
clc
int
imul
lcall
test
ror
push
stos
jno
sbb
int
fistpl
jge
into
rorb
push
adc
xor
xchg
dec
pushf
jbe
add
xor
mov
idiv
sub
out
cmp
mov
sub
hlt
aaa
add
in
aas
lock
fisttps
xorl
int3
loop
ficoms
cwtl
movsb
sub
fldcw
push
fists
push
in
sti
pop
pop
mull
ss
push
cmp
ds
call
adcl
sbb
loop
lock
xchg
sbb
fisubrs
dec
ret
push
fimuls
mov
bound
jne
fwait
ja
pop
enter
xor
pop
adc
loop
shlb
je
dec
outsl
fists
jo
xchg
lods
sbb
or
mov
dec
lret
mov
addl
in
enter
jg
mov
popf
jmp
fidivl
xchg
add
sub
mov
fidivrl
xchg
xchg
bound
add
std
cwtl
sbb
dec
outsb
clc
jnp
inc
aaa
xchg
add
xor
aad
push
stc
pop
sahf
jle
test
inc
int3
adc
test
mov
out
mov
inc
mov
fld
sbb
loop
dec
fstpl
cmovnp
enter
push
jmp
fsubrs
adc
jge
sti
mov
push
nop
sub
mov
ret
jb
jb
stos
xchg
fildll
incb
push
inc
insb
ret
fimuls
pusha
or
lock
push
sub
aad
xlat
pop
jne
sub
fs
scas
and
push
push
clc
inc
mov
std
xchg
out
jg
xchg
pop
jmp
test
cmp
in
dec
adc
mov
std
inc
and
xor
pop
pop
int3
fimuls
fwait
arpl
xchg
shlb
pop
sub
mov
xor
mov
jo
mov
push
pop
mov
mov
nop
sub
icebp
fdivs
fidivrl
or
fdivrl
pop
syscall
ret
mov
sub
mov
call
lahf
mov
dec
jg
pop
imul
int
push
int3
test
lods
xorl
adc
fnstcw
inc
orb
or
adc
sbb
mov
xlat
paddd
pushf
mov
xchg
mov
pushf
and
imul
fs
cs
sbb
mov
lock
adc
push
shl
cmp
sub
cmpsb
cld
dec
dec
jns
xchg
gs
jo
push
in
push
or
sbb
std
idiv
xlat
add
jae
add
in
fwait
ds
lret
fs
or
ljmp
dec
aaa
jae
jg
mov
in
pop
stos
push
mov
into
dec
dec
jno
adcb
push
push
and
xlat
and
mov
in
inc
xor
fwait
loopne
popa
inc
stos
lret
in
and
data16
js
ja
xchg
cmpsl
lods
insl
aas
pop
lahf
test
jge
cmpsb
jl
or
or
out
idivl
lea
dec
loopne
adc
iret
mov
ss
pop
and
xor
mov
loopne
xchg
and
out
fildll
movsl
pop
mov
sarl
xchg
fnsave
movsb
lret
addr16
mov
out
adc
adc
xchg
pavgb
hlt
sbb
dec
addr16
mov
dec
dec
mov
repz
mov
sahf
lods
jne
mov
jle
ficompl
data16
sbb
pop
xchg
popa
sbb
cmp
jnp
or
sub
shrl
xchg
pop
pop
dec
dec
arpl
mov
call
in
je
push
cwtl
imul
dec
sub
fsub
mov
out
incb
fldl
out
mov
mov
and
and
pusha
scas
repz
test
mov
mov
repz
push
inc
pop
pop
adc
movsl
inc
mov
xchg
mov
and
les
sbb
mov
push
mov
add
movsl
add
lahf
push
out
xchg
mov
push
pushf
jmp
mov
insb
or
inc
ss
mov
and
jl
mov
mov
pushl
adc
and
and
ljmp
scas
je
add
cli
push
sub
arpl
jl
and
pop
inc
cwtl
dec
mov
in
in
jecxz
cli
jmp
in
lock
imul
and
inc
pop
insl
push
xchg
and
dec
fidivrs
push
xor
dec
inc
mov
leave
adc
shlb
jne
clc
scas
je
jmp
movsl
mov
push
mov
das
inc
cmp
jb
fildl
sub
xchg
cmpsl
xchg
dec
mov
decb
in
loopne
popf
cmc
repnz
out
sbb
push
add
jb
sbb
dec
int
sub
jne
mov
jecxz
sbb
inc
into
and
inc
pusha
mov
repnz
cmpsb
fisttps
pop
mov
sub
sub
mov
mov
mov
and
mov
xchg
ljmp
test
mov
jecxz
aaa
sbb
or
sub
loopne
add
and
subl
pop
in
ficoms
fucomp
inc
sub
leave
jg
movsl
cmp
loopne
dec
push
into
push
jnp
lret
jb
ret
and
lock
aad
add
and
out
pop
cmp
data16
push
iret
aam
aam
lret
test
outsb
jnp
imul
jg
pop
pop
roll
sub
adc
ret
add
cmp
das
scas
nop
dec
mov
sti
xor
shr
pop
out
and
mov
dec
jge
dec
lds
addr16
dec
pop
fwait
or
adc
or
in
add
or
mov
jp
xchg
xlat
cmp
jg
push
sahf
sbb
js
scas
add
data16
fwait
out
pop
mov
inc
movsl
adc
testl
cmp
stos
and
cld
dec
roll
out
push
push
jl
dec
jb
rcr
mov
int
nop
sbb
jg
dec
add
imul
mov
cmp
pop
pushf
rcrl
sub
cmc
inc
push
xor
pop
imul
gs
cmp
sbb
repnz
inc
ds
jne
fwait
icebp
add
clc
aas
test
sar
mov
xchg
jle
mov
imull
jecxz
rcll
mov
mov
ds
adc
fnstenv
xchg
aas
orl
xchg
mov
repnz
shrb
xchg
pop
dec
decl
sbb
hlt
dec
les
inc
xchg
aas
ja
es
xchg
ja
fldcw
mov
pop
js
sub
xor
testl
pop
mov
jae
stc
add
loop
add
jmp
xor
cmp
mov
push
repz
movl
xchg
mov
mov
xchg
or
jne
je
ret
mov
mov
out
cmp
outsl
jne
fldenv
sbb
int3
aam
xchg
leave
fisubs
in
ret
sub
data16
adc
mov
cmp
jb
test
roll
inc
xchg
pop
push
xchg
rcrb
int
adc
xchg
pop
insb
lds
ja
mov
test
je
mov
aas
xchg
or
mov
cwtl
add
or
pop
dec
and
negl
addr16
inc
cld
push
iret
sbb
push
cwtl
in
sub
sbb
fnstenv
pop
pop
movsl
enter
add
shrl
scas
lea
push
adc
xchg
xchg
test
xchg
hlt
dec
sbb
lret
ret
lds
and
dec
fisttpll
mov
pop
gs
push
jnp
xor
add
xlat
adc
leave
loopne
into
ret
rcrb
and
xor
aaa
fisubl
or
pop
mov
or
mov
and
enter
mov
lods
ret
xchg
mov
xchg
xchg
jge
ja
orb
mov
inc
dec
mov
shll
es
mov
movsb
cmp
fistps
adc
fs
pushf
in
jb
jp
int
inc
testl
dec
xchg
mov
push
adc
adc
push
pop
bnd
test
sub
dec
push
mov
into
bound
int3
mov
push
push
mov
movsl
mov
mov
testb
addr16
in
int3
mov
pop
mov
xchg
jl
movsb
imul
nop
cwtl
inc
repnz
mov
sbb
dec
filds
ficomps
lret
push
fildll
push
imul
cmc
push
mov
imul
pop
inc
pop
popf
lods
cltd
outsb
lahf
fucomp
out
mov
xor
js
in
iret
mov
lahf
cmpsl
mov
pop
pop
scas
loope
jge
lock
loop
jbe
mov
pop
imul
adc
mov
mulb
push
push
xor
fildll
xor
fmull
es
bnd
repz
mov
in
mov
lods
mov
movsb
jg
xchg
fists
lea
jne
test
and
fnstenv
pop
shlb
lock
rcll
ljmp
adc
sbb
xchg
insl
xchg
xchg
repz
dec
repnz
subb
sbb
popf
ret
xor
jg
test
dec
push
pop
rcrl
xor
pop
ja
cmp
push
fmuls
aad
loop
gs
mov
lods
repz
jmp
add
mov
std
push
sub
mov
icebp
lret
jmp
xchg
insl
in
push
arpl
xchg
xchg
das
insb
jle
jp
cmp
pop
iret
add
cmpsl
popa
les
inc
inc
shlb
dec
fsts
mov
sbb
pop
xchg
ljmp
js
lods
fisubrl
and
add
sti
adc
neg
sub
out
test
imul
mov
nop
cmp
into
inc
cli
daa
mov
lret
pop
loopne
addr16
pop
cmc
jne
lret
mov
sti
xor
ret
and
inc
ja
or
jnp
adcb
sbb
push
jl
enter
jmp
arpl
and
stc
test
xor
insl
daa
mov
mov
iret
popf
push
test
cli
mov
xor
xchg
sahf
bound
xor
cwtl
mov
xchg
sbb
jbe
cmc
stos
push
pop
inc
inc
inc
outsb
jl
jnp
sub
loop
adc
leave
xchg
add
into
mov
pop
jl
fdivl
mov
add
js
cmp
repnz
adc
adc
or
dec
mov
arpl
push
push
out
cmpl
mov
mov
inc
jmp
repnz
das
scas
test
xchg
andb
cwtl
std
ret
mov
xlat
insb
pushf
sbb
sbb
gs
ja
push
stc
fdivrp
mov
adc
add
shrl
add
cli
cmp
les
fs
push
jg
sbb
dec
in
or
lret
mov
repz
mov
jmp
dec
aaa
push
or
lret
xchg
dec
je
ds
hlt
imul
mov
adc
inc
mov
jo
enter
cmc
xchg
xchg
adcl
out
pop
popa
pop
inc
test
sub
mov
add
dec
ljmp
ds
fwait
lahf
add
xor
subl
mov
dec
push
cmpsl
pushf
sahf
or
das
into
stos
inc
sbb
out
fldenv
es
lret
inc
jno
cmc
cmc
repz
nop
cmpsb
int3
inc
mov
fucom
scas
pop
cmc
dec
fisubrl
inc
rclb
push
ds
push
dec
gs
mov
sbb
insl
jg
jb
cld
hlt
loope
shlb
fwait
push
add
test
jle
inc
test
stos
out
jp
neg
mov
sahf
lods
ja
iret
and
mov
push
outsb
repnz
dec
pushf
dec
jns
dec
jg
aaa
push
pop
push
mov
push
push
jns
xor
lcall
inc
xlat
pop
mov
cmp
mov
popf
cmp
in
jae
or
inc
xchg
adc
adc
sub
js
inc
inc
mov
sub
pop
xchg
loopne
dec
adc
fwait
cli
sbb
pusha
es
iret
xor
insb
push
shrb
stos
add
pop
adc
loope
out
test
cs
xlat
cmp
jne
imul
mov
jge
mov
add
mov
mov
mov
in
jmp
jbe
jmp
mov
mov
xchg
mov
adcl
fcmovb
add
sbb
frstor
dec
pop
sbb
lret
pop
movsb
or
jae
xorb
xor
xor
xor
pop
and
lcall
and
mov
or
ds
mov
test
or
gs
push
fs
add
in
xchg
loope
adc
add
xchg
fcompp
lret
mov
insl
in
dec
dec
test
bound
inc
inc
push
mov
add
mov
movsl
xor
mov
and
nop
idivl
push
push
daa
jle
adc
lock
enter
in
rep
in
mov
aas
popf
push
or
lret
out
add
lods
xchg
int
jae
hlt
popl
jl
loope
xor
dec
xlat
and
test
mov
fcomip
jnp
lds
inc
pop
gs
dec
out
and
jnp
je
shll
add
push
cmc
pop
dec
xchg
fbstp
mov
push
mov
push
xchg
fistpll
sbb
daa
fs
adc
out
lock
pop
fiadds
dec
or
or
jecxz
loope
push
mov
mov
call
sub
ret
mov
addr16
shlb
cmc
lods
fucomip
jb
inc
stc
xchg
fcmove
adc
xor
ds
sarb
mov
mov
xor
cmp
jge
sub
ret
ror
xchg
mov
repz
fnstcw
aad
pusha
add
ret
ja
nop
ret
cmpsl
inc
cmc
mov
int
jnp
xchg
jnp
mov
fwait
pusha
xchg
int3
dec
pop
push
cmp
jmp
jecxz
and
scas
fnsave
jnp
cmpsl
fidivrl
pop
pop
stos
jae
adc
push
cld
pop
push
das
stos
stc
jne
stos
sub
mov
rclb
mov
xor
dec
loop
les
clc
test
movsl
dec
dec
imul
add
ds
imul
dec
imul
data16
mov
mov
pop
fisubs
sbb
test
call
sbb
dec
fildl
jge
flds
cli
addr16
or
mov
dec
insl
cltd
cmpl
dec
sbb
xchg
pushf
jae
mov
dec
mov
mov
push
mov
mov
imul
and
aad
add
repz
addb
xor
ds
jmp
popf
out
lods
mov
pushf
push
bound
pushf
jge
adc
jl
add
dec
push
cmp
jnp
push
rolb
pop
rclb
cli
xchg
fwait
xchg
in
mov
jle
gs
iret
push
inc
push
lahf
jmp
cmp
xchg
inc
popa
pop
shrl
movsl
outsl
je
jnp
jl
popa
lret
pop
dec
loop
lds
fldt
loopne
push
sahf
fwait
lods
xor
jno
movsb
ja
mov
pop
lock
mov
dec
orl
mov
add
jg
repnz
adc
pop
icebp
push
lea
jno
mull
bound
test
lret
xor
mov
dec
xchg
cmp
push
outsb
insl
out
xchg
xchg
iret
lret
add
pop
sub
aam
jp
push
inc
push
out
mov
sub
mov
pop
adc
cmp
push
sub
inc
sub
icebp
push
sbb
aaa
and
data16
pop
jo
shlb
sbb
adc
sbb
out
adc
dec
sbb
lret
xor
xor
imul
test
sub
sbb
mov
rcll
roll
sahf
iret
stc
cli
add
pop
push
cld
or
test
xorb
repz
inc
insl
push
fidivrs
mov
icebp
pop
inc
repz
lds
repnz
add
fisubrl
cmpsb
sahf
mov
icebp
aad
and
mov
subb
int
mov
decl
pusha
aaa
cmp
out
arpl
inc
push
inc
je
dec
push
mov
and
ret
cltd
pop
mov
aad
fists
xor
jecxz
mov
movsb
inc
repnz
aaa
iret
lods
add
shrb
mov
inc
xchg
jbe
push
xor
push
lods
stos
lahf
cs
cs
dec
jne
fdivl
insl
enter
sbb
xor
sbb
jle
xchg
pop
push
cmp
push
adcb
jae
dec
and
mov
cwtl
and
push
xor
leave
js
inc
arpl
mov
mov
loopne
xchg
mov
repnz
lods
cmp
adc
out
rolb
sbb
fstps
andb
mov
sub
push
sbb
sti
and
leave
sub
ret
xchg
scas
jp
and
mov
jmp
push
lret
pushaw
imul
testb
gs
es
xlat
sub
mov
ds
es
add
loop
imul
stos
in
and
push
in
push
sub
sarl
xchg
ljmp
cmpsl
adc
lods
loopne
mov
imull
js
daa
scas
test
or
adc
push
jae
addr16
psllw
push
cmp
push
test
sarl
adc
fs
lds
lret
jbe
mov
pop
or
mov
jg
inc
cltd
repz
mov
push
fs
js
shll
push
add
loop
addr16
std
mov
lret
orl
xor
mov
insb
sub
mov
cmp
fcomps
fwait
inc
add
repnz
or
ret
daa
shrb
loopne
xchg
js
mov
xchg
aas
sbb
sbb
jne
xchg
mov
lea
addr16
dec
daa
in
xor
stos
cmpsl
adc
lds
fstpl
aam
adc
data16
cmp
xchg
and
out
sbb
jl
mov
xor
into
push
add
adc
inc
cmc
cmp
movsb
or
leave
push
cmpsl
inc
cli
mov
adc
divb
inc
insl
bnd
xor
in
xor
xlat
dec
js
and
add
jle
leave
movsl
lods
mov
cmpsb
cmp
repz
push
out
jge
pop
cli
aad
fbld
dec
aam
outsb
jns
test
insl
and
cmp
fwait
push
popa
fistpll
add
cltd
push
jl
fs
ss
std
xchg
adc
mov
jl
sub
nop
jecxz
je
scas
and
insl
enter
sti
inc
xorl
pusha
ret
ds
jo
repz
imul
cmp
movsb
popa
ljmp
dec
out
ss
dec
insb
test
insl
adc
and
push
test
push
loop
push
movsl
xor
inc
imul
cmp
sbb
add
xchg
pop
mov
rorb
cmp
addr16
mov
inc
ljmp
jae
lret
mov
jecxz
out
and
push
add
add
cmp
xor
dec
popf
dec
dec
sub
pop
out
jecxz
add
cli
jb
xor
push
push
mov
or
adc
iret
repz
lcall
add
les
fwait
xlat
data16
mov
cltd
sti
fdivrl
pop
sahf
in
cli
daa
pop
andl
fiadds
loope
dec
mov
jns
xchg
incb
jb
sbbb
dec
xchg
hlt
ss
sub
jge
dec
sahf
scas
push
lret
shr
pop
std
push
mov
push
out
nop
add
or
push
ret
dec
jmp
xorl
ljmp
lahf
test
adc
stc
mov
push
xchg
mov
mov
in
mov
pop
scas
or
aad
mov
inc
jbe
fcomp
out
repz
decb
jp
mov
inc
test
cmp
ljmp
add
adc
pop
inc
popf
rcl
int3
pop
mov
mov
nop
fdivs
loope
enter
mov
mov
mov
bound
sub
addb
xchg
push
nop
flds
xor
outsl
lods
es
or
into
mov
cmp
dec
mulb
hlt
mov
test
or
int3
mov
js
insb
ljmp
shll
ror
xchg
push
xor
push
or
into
cli
insl
pop
mov
hlt
inc
mov
cmpsb
inc
fcoml
fs
aas
hlt
inc
outsb
gs
add
cs
push
gs
ret
jl
or
sub
outsl
pop
mov
jnp
mov
jne
je
mov
push
sti
pop
inc
lcall
jb
or
fwait
jg
sub
aas
lock
sbb
ja
lahf
sbb
jle
pop
sbb
lds
popa
pop
sub
int
cli
jl
pushf
xor
adc
mov
mov
cli
xor
mov
xor
push
gs
bound
dec
mov
or
xor
pusha
es
xor
push
lods
mov
jo
shlb
pop
inc
cmp
sub
cmpsl
shll
mov
clc
sub
sbb
test
stc
test
test
mov
sub
or
popa
mov
add
adc
mov
add
lret
lret
mov
cmpsl
mov
pop
ja
or
imul
xor
jmp
and
movsb
imul
push
add
int
push
cmp
ret
out
pushf
cmp
mov
jp
sbb
lcall
cwtl
add
xchg
or
dec
jns
cmpsb
xchg
push
lea
sub
add
lahf
cmp
fldl2e
dec
dec
pop
push
cmc
pushf
pop
add
push
cmp
cs
cltd
inc
jb
push
push
repz
inc
fldt
imul
push
stos
icebp
mov
xchg
mov
movsl
sbb
xchg
dec
jnp
mov
sbb
test
sub
dec
push
scas
push
cltd
and
pop
cmp
dec
sub
and
pusha
sbb
scas
or
push
dec
cltd
and
aad
push
loopne
lret
jmp
jmp
add
test
pop
ret
mov
pop
rcrb
ret
insl
dec
in
inc
ds
mov
mov
ljmp
fnstenv
leave
xorb
adc
mov
add
inc
jnp
push
movsb
mov
push
ja
mov
sub
shr
inc
xlat
loope
sub
mov
xchg
adc
std
mov
dec
sbb
cmpsb
xor
daa
pusha
and
adc
push
dec
sahf
xchg
mov
jnp
icebp
subb
sbb
or
stos
nop
mov
mov
mov
adc
jmp
jno
mov
xchg
mov
xor
or
cs
imul
fchs
xor
andb
dec
adc
stos
sub
sti
ret
div
lret
out
jae
sbb
pusha
sahf
outsb
dec
nop
loope
aad
rcll
jg
cmp
mov
push
pop
icebp
hlt
mov
or
leave
les
pop
data16
mov
jg
lods
clc
and
cmp
dec
es
inc
std
outsl
shr
pop
sbb
inc
lret
adc
pop
xchg
in
and
mov
dec
add
add
mov
test
dec
popf
cld
adc
xchg
inc
sub
jbe
pop
pop
xchg
fcmovbe
push
xor
mov
add
stc
push
mov
cli
gs
and
sti
stos
inc
sub
pop
adc
mov
in
sarb
subb
mov
xchg
sbb
dec
xchg
jae
mov
jp,pt
sbb
les
and
shrb
mov
or
adc
adc
insb
popa
mov
xchg
fcmovnbe
mov
and
mov
add
mov
fldt
ret
inc
popa
mov
inc
adc
icebp
fdivr
jle
mov
and
fmul
mov
or
scas
shl
nop
mov
sti
mov
push
cmpl
jbe
mov
sub
mov
xchg
repnz
mov
jb
xor
imul
je
in
xchg
dec
pop
jb
mov
jg
nop
dec
rclb
lods
jmp
xchg
ss
mov
outsb
lods
xor
cmpsb
sbb
mov
jb
in
push
inc
dec
dec
or
dec
loope
rol
xor
setp
and
dec
or
scas
dec
and
xor
stc
pop
mov
in
pop
lret
imull
adc
arpl
adc
mov
cmpsl
mov
jno
nop
cs
fimuls
inc
mov
sbb
inc
mov
inc
adc
sbb
dec
push
mov
mov
mov
les
insl
or
inc
xchg
std
xchg
fidivs
sti
hlt
inc
das
ficompl
xor
jl
sub
sti
nop
dec
sbb
jbe
mov
lcall
ljmp
pop
icebp
pop
adc
sbb
scas
cltd
mov
rcl
pop
xchg
test
sbb
insb
repnz
sbb
fwait
adc
out
mov
enter
xchg
xchg
lcall
mov
pop
lret
adcb
mov
cmp
rorb
dec
lcall
or
fwait
push
mov
dec
test
out
leave
enter
mov
bound
xchg
cmp
adc
imul
imul
xor
call
outsb
sub
outsb
cmp
pop
and
sub
jnp
add
push
adc
cwtl
mov
rorb
inc
jmp
push
xchg
pop
xor
shr
call
out
outsb
xchg
push
mov
push
iret
insl
mov
jecxz
fcmovnu
std
cmp
cwtl
insl
cwtl
jge
add
mov
arpl
inc
sub
pop
fsubrs
stos
dec
test
xchg
lods
lock
loope
lret
hlt
sbb
les
cmp
add
push
push
ret
je
jge
fdivl
cmc
xlat
xchg
nop
arpl
leave
rcrl
xlat
sbb
cli
mov
loopne
mov
inc
cmc
pop
sub
xchg
and
repnz
aas
dec
fdivp
mov
dec
cmpl
cmp
insl
ret
addl
inc
mov
inc
add
push
or
mov
fmull
in
and
rcll
xor
sbb
cwtl
sub
mov
xchg
dec
imul
movsl
lahf
imul
cmp
lret
int
add
daa
mov
andl
jle
testb
test
in
test
xor
xchg
mov
sub
adc
jbe
test
hlt
pop
test
xchg
aaa
stos
push
shll
pushf
test
sbb
dec
mov
das
jns
lcall
dec
jbe
xchg
cs
int
stos
stos
jnp
and
jecxz
pop
pop
enter
sbb
ret
ds
das
xor
lds
in
push
test
adc
cmpsl
addr16
dec
xor
xchg
fiaddl
sahf
sub
xchg
ljmp
xor
xchg
adc
les
cmp
push
fsubrp
cmpsl
xchg
insl
std
mov
or
cs
sbb
mov
inc
inc
in
adc
mov
aaa
imul
fstpt
testl
and
js
pop
sub
push
in
xorb
adc
push
addr16
push
mov
outsb
mov
mov
aad
push
xor
clc
push
stos
mov
fdivs
sub
inc
push
xchg
adc
mov
push
push
nop
add
and
cwtl
xchg
loope
ss
inc
and
jb
imul
test
and
insb
fwait
mov
shr
imul
stc
mov
mov
aas
loop
ret
mov
test
repnz
push
loope
cmpsl
loope
insb
adc
fstpl
push
and
sub
dec
out
lods
out
pop
pop
imul
ret
call
ds
ds
mov
das
add
push
fcmovne
jnp
jno
ss
sarl
dec
pop
xchg
inc
cld
cmpsb
je
gs
mov
lret
sbb
out
jmp
movsl
std
xchg
sbb
js
lcall
xor
cwtl
aad
sub
xchg
fcoms
mov
vpunpckhdq
and
push
xlat
mov
mov
lods
stos
ret
mov
cmp
shl
fstps
add
test
sbb
jnp
sub
xorl
ret
mov
xchg
or
mov
cmp
cli
mov
pushf
inc
add
add
fcmovu
mov
inc
lods
mov
push
and
lds
popa
lea
dec
sbb
lret
sbb
inc
jo
daa
scas
dec
xor
dec
xchg
insl
dec
xor
xor
push
and
xlat
push
out
lret
mov
stos
daa
test
into
cmpsb
movsb
mov
imul
add
stos
ret
lds
adc
mov
aam
mov
pop
sbb
jno
xchg
push
adc
mov
test
mov
add
push
jns
dec
gs
jp
mov
iret
or
test
das
pop
add
cmc
shl
xchg
out
mov
pop
inc
add
xor
imul
adc
repnz
in
dec
lods
scas
hlt
sbb
jecxz
stos
jp
in
jno
jge
inc
out
pop
test
pop
dec
and
push
push
jo
lret
popa
sti
mov
mov
stos
sub
xchg
cmp
roll
mov
mov
loop
ss
popa
cld
dec
sub
bound
xor
movsb
fs
jle
push
std
jnp
imul
push
popf
hlt
stos
jns
jecxz
ja
fsubrl
xchg
sti
adc
inc
mov
or
mov
repz
ror
into
sub
jl
insl
js
jbe
adc
int3
and
xor
adc
lods
bound
ss
jne
testl
popa
jnp
pop
jb
push
imul
pop
repnz
pop
aam
jne
mov
sub
xor
je
rorb
cmpsl
xchg
cld
and
mov
lcall
pop
shll
add
cmpb
jg
sti
push
outsb
lahf
data16
ret
add
sub
test
je
push
test
andb
mov
and
xor
jae
imul
je
push
xchg
mov
insb
pop
sbb
ret
inc
mov
pop
mov
xorl
mov
cmpsb
gs
int
mov
das
mov
push
daa
sub
mov
fsubrs
enter
inc
jle
adc
mov
jbe
xchg
mov
jecxz
movsb
mov
test
gs
outsl
add
stos
in
xor
xlat
add
and
inc
outsl
out
or
sar
add
aad
or
mov
movsl
cmp
test
icebp
and
pop
jnp
in
jo
mov
out
addb
sub
cwtl
sti
mov
mov
jnp
sub
cmp
mov
dec
adc
push
cltd
dec
xchg
or
aaa
xchg
xor
out
movsb
repnz
enter
fcoml
addr16
pop
ja
jbe
add
movsl
popf
in
mov
and
sub
mov
scas
fldcw
aam
mov
fstl
pop
jno
or
ss
int
rolb
test
pop
jb
adcl
fcmovbe
push
add
shrb
xchg
add
daa
dec
and
mov
or
sub
in
add
call
adc
pop
cmpsb
lods
jns
mov
push
lds
cmp
mov
mov
xor
fwait
incl
addr16
xor
mov
stos
ret
fmul
xchg
xchg
jnp
sti
mov
xor
and
fwait
cmp
stos
and
adc
das
push
or
push
pop
mov
mov
and
fwait
mov
std
ds
mov
rcr
inc
xor
sbb
xlat
imul
mov
call
and
fld
cmp
jns
jnp
imul
push
push
imul
push
mov
add
push
in
shll
loop
aam
loop
mov
int
cmp
jbe
xor
and
cmpsl
int3
mov
mov
cli
shll
in
or
add
stc
and
xor
rorl
call
test
lcall
ret
xor
hlt
in
cmp
jnp
maxps
jge
lret
add
iret
popf
in
mov
jge
andb
rcr
push
adc
out
clc
repz
jne
xchg
js
mov
adc
out
lods
js
sbb
repnz
adc
pop
sub
mov
les
dec
imul
jo
loopne
in
pop
sbb
stc
pop
or
and
insb
sub
sbb
adc
inc
lret
leave
sub
adc
cwtl
push
pop
mov
mov
hlt
xor
xchg
into
lret
or
pop
movb
fidivrl
or
mov
pop
sti
sbb
pop
or
mov
pushf
jmp
pop
mov
sbb
mov
push
sbb
or
xchg
adc
mov
out
inc
das
jmp
out
aam
pop
jge
outsl
cmp
fs
cs
fstp
and
push
pusha
sarl
cmp
cmp
dec
pop
dec
sbbl
or
sub
subl
jp
xor
call
jbe
addr16
adc
inc
fwait
fistl
rcrl
xchg
inc
sbb
dec
fbstp
sub
loopne
in
cltd
sub
lods
dec
xchg
shl
xchg
fwait
sbbl
leave
in
loopne
push
pop
mov
rcrl
into
and
dec
addb
icebp
mov
aaa
mov
jg
repnz
fiaddl
xchg
clc
mov
data16
xchg
mov
jns
xchg
insb
call
mov
xor
adc
push
pushf
lds
fstpl
mov
gs
mov
dec
xchg
js
inc
mov
mov
and
and
sbb
xor
fwait
inc
dec
dec
out
xchg
imul
add
sbb
mov
mov
mov
jmp
mov
icebp
das
push
inc
push
lcall
ljmp
in
push
ljmp
or
mov
leave
xorl
mov
das
inc
mov
jmp
fdivl
mov
mov
add
mov
cmpsl
int
lds
cmp
xor
sub
addl
pop
shlb
xchg
mov
aas
sbb
inc
inc
mov
shr
jl
into
cmp
ja
movsl
pop
lods
adc
les
mov
incl
iret
jb
sti
mov
imul
pop
xor
lds
divb
addl
test
add
subl
push
cmp
mov
mov
fistl
in
ds
jae
push
stc
pop
mul
inc
ds
push
or
popf
loopne
clc
adc
les
test
push
xor
or
je
shl
push
xchg
pushf
xchg
dec
shrl
xchg
inc
or
xlat
jns
outsb
push
mov
dec
fs
push
daa
inc
xor
in
outsl
sbb
xor
mov
and
movsb
push
push
and
cmp
sub
push
jp
aad
xor
inc
mov
add
xor
push
jecxz
neg
filds
jge
ficomps
push
sbb
int3
lret
insb
cltd
inc
push
mov
lahf
notb
jl
inc
fcmovnb
popa
xchg
mov
xchg
adc
mov
frstor
cli
mov
leave
imul
ret
jns
and
loop
fldcw
xor
leave
xchg
xchg
push
push
adc
in
pop
insb
jo
xchg
test
addr16
cmp
mov
jb
and
fadds
mov
cmp
mov
push
xchg
sub
xchg
shl
and
iret
lret
in
in
push
xchg
xchg
xor
adc
lock
pop
add
xor
pusha
insl
cltd
popf
cltd
xchg
pop
cmp
cmp
pusha
jp
out
or
inc
clc
push
pop
dec
jno
add
out
jb
jg
jmp
dec
push
sti
clc
js
mov
rol
pop
imul
arpl
fdivl
mov
jl
lea
repz
mov
push
mov
imul
and
mov
jb
imul
cmpsb
mov
or
inc
mov
aaa
ret
mov
dec
stos
mov
dec
dec
cmp
out
push
sub
jne
lret
nop
pushf
pop
pop
les
shll
push
int
hlt
dec
jmp
aaa
pop
jae
inc
mov
push
inc
and
pop
mov
mov
out
imul
cs
aam
mov
sub
popf
sub
call
lahf
pop
inc
lret
out
xchg
push
adc
shlb
sbb
mov
push
jae
call
xchg
ret
push
push
or
add
cmc
adc
fwait
test
out
mov
add
pop
ret
je
pop
pop
push
icebp
mov
add
sbb
lret
shll
call
mov
lock
std
popf
inc
movsb
cli
repz
dec
or
add
outsb
out
jne
loop
cwtl
or
jae
mov
xchg
pushf
insl
rcll
push
push
daa
fdivrs
pop
aad
dec
les
sub
xchg
or
mov
add
out
sbb
jns
rcrb
inc
xchg
add
jns
jne
or
jge
dec
cld
out
mov
or
mov
mov
mov
inc
loop
das
xor
loop
mov
pop
out
ss
mov
mov
shll
or
fwait
movsl
imul
jbe
push
add
sub
mov
mov
arpl
sti
aas
inc
lock
xor
mov
jmp
jmp
outsb
out
adc
movb
inc
inc
sets
out
xchg
mov
dec
es
inc
test
or
in
call
movsb
test
jg
or
jle
test
lahf
push
xor
ss
mov
inc
inc
dec
pusha
sub
sbb
pop
lods
sub
xadd
sub
and
and
stc
pop
jae
sbb
cmp
sub
fnstcw
mov
mov
inc
sahf
mulb
inc
add
jb
or
stos
cld
dec
jo
jmp
mov
dec
mov
jge
push
mov
sbb
sbb
fcomps
xor
testb
add
ja
std
lea
or
not
push
push
lret
or
test
pop
cmpps
xchg
imul
data16
out
cmp
cmp
or
add
push
ds
ftst
push
xor
lcall
inc
rorb
clc
in
ds
rclb
jae
nopl
in
jmp
inc
loop
lahf
cmp
daa
add
mov
push
mov
in
mov
adc
and
xchg
enter
xor
adc
xor
nop
out
jg
in
xchg
adc
out
scas
sub
popf
repz
cmp
stc
scas
cli
loope
scas
icebp
mov
frstor
jl
aad
repz
xchg
add
cmp
jns
testb
js
or
inc
fwait
mov
cmp
jno
jo
jns
fs
insl
dec
pop
ljmp
rcrl
js
icebp
push
insl
xchg
rep
repz
mov
test
mov
loopne
jne
daa
adc
jo
out
xor
scas
lahf
nop
mov
fsubs
les
and
mov
sbb
adc
rorl
fstpt
cli
mov
sti
sbb
or
sub
aas
mov
js
pusha
and
mov
sbb
mov
cli
fstpt
mov
sbb
mov
push
mov
jb
cmpsl
jo
imul
das
jne
lods
aad
iret
sub
icebp
addb
or
cwtl
inc
pop
lods
sbb
mov
sar
xchg
aaa
push
in
pop
lods
out
push
cld
out
mov
aaa
add
pmullw
pop
flds
sbb
mov
mov
mov
jl
mov
loop
mov
push
jle
arpl
lods
mov
das
out
data16
rclb
repz
mov
ds
mov
inc
js
and
xor
insb
mov
ljmp
jl
mov
jns
std
cmpsb
adc
pop
jmp
in
or
or
in
ds
mov
add
sbb
sub
mov
dec
push
lret
gs
sub
insb
div
sbb
gs
fsin
or
pop
in
and
sbb
mov
out
jae
je
ljmp
and
addr16
repnz
jns
sbb
mov
jge
mov
cmp
jo
arpl
movsb
fs
sub
mov
test
and
js
popa
jge
push
dec
cmp
js
js
imul
lret
insl
popf
mull
out
mov
pop
xor
ret
sbb
push
push
sub
mov
jecxz
jo
mov
and
dec
push
and
pop
jns
mov
scas
insl
dec
xchg
mov
leave
inc
ret
mov
inc
loopne
mov
inc
sbb
in
jmp
mov
and
int3
pop
testl
sahf
pushf
adc
mov
icebp
xchg
and
push
ds
mov
or
xor
repnz
jne
fstps
dec
cmp
out
pop
push
lret
cmp
mov
lds
xorl
lock
push
xchg
sbb
scas
incb
pop
lods
mov
shrl
cmp
paddd
addl
iret
xorl
shll
sbb
sub
jno
movsb
inc
xchg
sub
mov
pushf
push
dec
pop
jno
ds
test
push
sub
jae
scas
pop
pop
or
imul
test
lea
jmp
xchg
inc
adc
push
in
jmp
and
adc
and
shlb
pop
sti
pop
movsl
cmp
push
jecxz
sbb
inc
out
mov
fstpl
ucomiss
test
fistpl
sbb
ror
data16
jne
cmp
cltd
xlat
or
cmp
test
lea
adc
fsubrl
xorb
jmp
cmp
addr16
cmp
sub
mov
pushf
or
add
mov
jle
mov
subb
mov
jl
repnz
mov
lret
frstor
in
popa
sbb
icebp
scas
out
fs
push
leave
adc
push
pcmpgtb
and
push
push
rcll
sub
aad
sbb
fucom
dec
jp
pop
adc
fnstenv
xchg
xor
push
bound
inc
dec
jecxz
add
fsubl
cs
lahf
dec
push
insl
mov
push
jne
cmp
cmp
dec
dec
xchg
fcompl
enter
and
cs
cmp
sub
mov
xchg
jae
cmp
add
and
and
movsb
stc
pop
sub
mov
jecxz
and
mov
mov
lcall
lods
data16
add
mov
cmpl
iret
xor
jae
push
daa
daa
leave
mov
mov
add
push
data16
fcoml
lret
ficompl
mov
in
dec
jp
xor
dec
mov
mov
mov
push
leave
mov
pop
in
pop
lods
int
xchg
ret
xchg
mov
in
adc
inc
out
pushf
paddb
iret
add
jno
sub
js
pop
lcall
xor
ja
frstor
leave
or
das
cld
pop
push
sub
std
jmp
mov
cmp
and
inc
and
jmp
out
push
jl
adc
repnz
es
movsl
push
sbb
addr16
mov
popa
jbe
mov
xchg
cs
clc
mov
and
ds
je
sub
test
xchg
rcrl
adc
out
lcall
cs
popf
mov
dec
mov
fldcw
add
aam
pop
js
fdiv
mov
xchg
mov
clc
sbb
cwtl
les
repnz
mov
adc
sbb
or
out
jb
jmp
cmc
outsb
cmpsl
andb
pop
adc
jno
inc
inc
aad
add
fistpll
jl
fdivr
les
mov
es
sti
je
or
or
push
jnp
push
pop
push
xor
and
pop
cmp
inc
sbb
dec
test
sti
addr16
push
sub
daa
lods
aas
decl
mov
push
scas
lds
sbb
fisttpl
cmpsb
int
xchg
testb
das
mov
dec
and
loopne
jp
loope
notb
inc
mov
adc
nop
es
outsb
pusha
pop
gs
cmpsb
ret
fdivrp
pop
imul
cmc
loopne
cmp
pushf
movsl
aaa
or
jb
sub
lds
stos
cmp
cld
push
push
stc
outsb
insl
sbb
push
inc
push
push
addr16
push
push
icebp
hlt
dec
add
mov
in
cmpsl
in
fnstenv
dec
pop
pop
out
or
fsts
shrb
test
dec
jmp
js
test
out
jp
inc
in
sahf
rcr
mov
adc
es
enter
cmpsl
push
imul
clc
enter
xchg
push
popf
mov
mov
sbb
aaa
ss
in
or
push
ret
xor
push
sub
or
sbb
jne
popa
push
xor
rclb
pop
cmpsb
lret
fs
push
mov
aam
dec
mov
mov
add
lods
push
fwait
js
pop
dec
and
jbe
fdivl
stos
fsubs
push
push
cwtl
dec
or
dec
pop
lea
in
daa
aam
sub
add
in
popa
jp
mov
xlat
cli
mov
inc
int3
push
bound
ja
dec
ljmp
pop
or
addb
inc
ljmp
pop
test
sbb
imul
sti
dec
jb
int3
daa
push
or
imul
icebp
cld
mov
clc
jno
cmp
inc
dec
mov
std
jns
out
mov
mov
outsl
or
or
inc
xchg
sarl
pop
mov
mov
push
jl
fcoml
cltd
adc
mov
repz
mov
push
loop
mov
in
push
xchg
cld
add
fsubs
nop
andb
and
cmpsb
mov
popa
push
ror
cmpsl
xchg
fdivs
mov
xchg
and
and
xchg
mov
in
outsl
cmpsl
mov
add
lret
inc
mov
mov
jno
repz
fs
pop
lahf
sub
stos
jb
and
loope,pt
cwtl
xchg
mov
lods
scas
cmp
mov
pushf
jmp
fisubs
movsb
jge
push
mov
fimuls
imul
aaa
icebp
xor
call
xor
dec
popa
or
popf
add
rolb
sbb
push
in
fsubp
and
xor
clc
xor
pop
mov
or
stos
xchg
je
push
xor
dec
pop
inc
ss
shrl
test
or
pop
xchg
lods
push
pop
jne
pop
aas
cmp
dec
jo
aas
movsl
xchg
mov
sub
in
mov
pusha
sub
push
sub
leave
mov
xchg
dec
adc
mov
test
mov
ret
mov
xorb
mov
dec
outsb
push
jecxz
test
push
int
xchg
or
jle
add
popa
arpl
xchg
cmp
add
inc
iret
pop
mov
shll
mov
jne
test
push
mov
enter
sbb
rorb
inc
out
jl
hlt
fisubrl
sub
fs
mov
lcallw
popw
arpl
data16
mov
pop
jne
loopne
fidivl
jns
lret
test
push
lds
inc
lds
inc
mov
push
and
jecxz
or
out
jb
dec
gs
sarl
test
and
dec
mov
adc
push
iret
jecxz
sub
mov
push
adc
or
loopne
fcomps
push
mov
aaa
out
xchg
into
add
lcall
push
fsubr
aam
jb
out
mov
add
mov
test
gs
xor
imul
mov
dec
fcmovnu
sbb
clc
fmul
dec
into
les
mov
dec
leave
mov
stos
or
inc
mov
ds
inc
imul
out
add
mov
scas
sbb
mov
dec
cli
sbbb
push
pop
sub
and
fidivs
jbe
stos
popf
test
aam
shrb
or
jnp
mov
gs
icebp
mov
das
mov
fbld
and
mov
xchg
add
fiaddl
fcomp
inc
cld
push
addr16
je
lds
inc
lret
xchg
dec
push
aas
outsl
fdivl
movsl
ror
das
sbb
int
sbb
lods
rcl
in
stos
out
rorl
shrl
popa
mov
hlt
pop
lcall
ljmp
pushf
out
jne
pushf
mov
push
pop
imul
lea
ss
movl
gs
or
jne
or
adcb
mov
xchg
inc
push
lods
test
xchg
into
cmc
shrl
lods
pop
bound
dec
jnp
ds
cmpsb
out
pushf
xor
mov
pusha
movsl
jae
das
sbb
mov
jge
into
dec
jnp
ss
arpl
out
daa
outsl
sbb
sub
push
rcpps
push
lret
pop
cli
push
dec
rcrb
fimuls
mov
aaa
repnz
inc
and
lods
ds
mov
cli
in
jg
out
xor
mov
mov
arpl
int3
loopne
mov
or
mov
xor
aam
cmp
cmp
or
inc
int
call
sub
imul
dec
lret
inc
ret
jns
lock
dec
pushf
mov
push
and
cli
mov
sbbb
aam
sbb
adc
ret
sbb
xchg
xchg
out
cmp
jle
daa
pop
aad
sarb
nop
mov
ss
inc
lcall
mov
ljmp
into
data16
pushf
mov
stos
jle
mov
std
lret
popa
adc
out
scas
or
push
sbb
mov
adc
stos
cs
mov
jp
loop
xor
aad
jg
mov
mov
fsts
dec
movsb
xor
mov
bound
xor
push
sub
cmc
mov
xchg
jp
jno
and
imul
aaa
mov
scas
fsts
and
add
popf
pop
xchg
jnp
xchg
and
lea
das
stos
divl
adc
cwtl
sbb
inc
dec
push
rcrl
xchg
sub
push
aaa
cmp
pop
sti
xor
inc
cmpl
test
push
popa
jmp
lret
aas
lock
call
sbb
or
enter
outsb
jg
hlt
pop
lods
rep
mov
notl
cli
arpl
pop
popf
clc
out
mov
mov
mov
xor
or
fmul
pusha
cmpsb
xchg
shrl
and
jne
out
mull
adc
aas
add
add
ret
inc
cmp
pop
popa
mov
and
push
insb
cld
call
jnp
negb
ja
mov
adc
sti
inc
inc
push
sbbb
sub
and
mov
push
push
aad
pushf
pushl
enter
jl
add
inc
bound
jmp
int3
in
lahf
lret
cmp
test
and
add
shrb
pop
test
jo
enter
xchg
outsl
jmp
pop
cmc
cmpsb
mov
cmp
inc
mov
insb
sub
rorb
sahf
mov
sbb
push
and
ds
pop
add
sarl
rcll
cmpsb
mov
pop
pusha
push
dec
add
jmp
lret
push
adcb
sub
out
out
nop
stos
inc
mov
mov
mov
mov
mov
mov
inc
jne
or
cmp
add
cmp
push
mov
jno
cmc
test
adc
es
sub
in
jnp
push
aad
cmp
sbb
xchg
sti
jp
push
jae
je
pop
jge
inc
mov
mov
popa
js
cmp
call
mov
mov
mov
jb
movsb
pop
lret
mov
flds
rorb
sbb
or
mov
adc
push
incl
xchg
mov
mov
cmpsb
jbe
inc
push
mov
push
movl
fsts
pop
std
xor
mov
imul
dec
sub
dec
into
imul
rcl
inc
fwait
and
inc
or
xor
mov
fnstenv
jle
cmp
rcrl
adc
enter
sbb
subb
stc
push
push
lahf
in
insl
push
enter
in
mov
pushf
pushf
and
adc
rcrb
fdecstp
push
clc
cmp
cmp
fisubl
scas
pop
insl
mov
xor
nop
test
adc
fisttps
jle
in
out
std
icebp
movsl
push
inc
hlt
or
jno
jmp
xor
or
xor
or
mov
lcall
fadds
lahf
adc
test
xor
sbb
inc
out
jmp
jle
dec
insl
mov
aad
arpl
fcoms
int3
xchg
fdiv
mov
sub
loope
stc
jp
inc
insb
call
mov
xchg
sbb
dec
push
and
test
lock
es
mov
push
cmp
sbb
mov
sub
push
jns
jmp
dec
adc
xchg
lds
test
push
sarl
jo
xlat
sub
cmp
addr16
or
mov
movsl
call
loope
jge
dec
leave
ds
in
js
add
notl
mov
push
sbb
and
sbb
adc
pushw
push
mov
and
and
xchg
cmp
stos
popa
push
xlat
adc
aas
test
sub
adc
test
nop
or
or
add
pusha
inc
lahf
sbb
dec
jne
fsubrs
iret
stos
and
movsb
or
mov
pop
loopne
sub
ja
fs
fsubl
xor
jne
rcr
sbb
sbb
xor
sahf
fiaddl
adc
jb
xchg
sbb
test
dec
not
dec
xor
ret
jbe
mov
mov
sub
ret
or
pushf
icebp
das
nop
pop
js
pop
data16
fs
les
sahf
pop
pop
xchg
mov
sbb
addl
iret
cmp
fwait
cs
fwait
or
sahf
xlat
and
js,pt
adc
adcl
adc
es
nop
jb
lahf
fdivp
lods
ficompl
lret
sub
bound
popf
ret
data16
subl
or
jae
fidivrl
cmc
jnp
lea
outsl
xchg
pop
mov
in
fsubl
xor
push
add
pop
ret
and
int
pop
aam
push
push
dec
adc
jg
das
mov
imul
mov
sbb
cmp
xor
aad
out
lds
add
xor
and
shlb
ljmp
jbe
and
fstpl
inc
fwait
wrmsr
pop
cwtl
iret
lret
xor
jne
je
push
sub
xchg
bound
loop
jae
into
pop
jo
hlt
jecxz
inc
mov
test
bound
inc
jle
hlt
test
add
sub
out
pop
and
shrl
xchg
mov
aad
icebp
shrb
ljmp
int3
push
xchg
xor
test
cwtl
sbb
cltd
mov
mov
mov
and
in
cmp
mov
loopne
subl
push
stc
aad
sub
mov
stc
xchg
jb
inc
adc
shll
loope
mov
cmp
in
cmp
dec
enter
lret
popf
insl
scas
pop
mov
mov
clc
fcomps
push
fildl
scas
sub
mov
dec
jmp
sahf
out
jmp
jl
adcl
hlt
insl
pushf
arpl
xor
mov
or
sbb
test
arpl
ret
ret
inc
daa
pop
dec
loopne
sub
inc
lcall
and
jmp
loop
loopne
fisubrs
out
jmp
popf
lret
pop
mov
popf
out
insb
push
cli
mov
dec
jmp
into
add
pop
add
daa
pop
add
jb
cmp
or
out
cmp
in
daa
add
fdivrl
fldt
sub
int3
mov
pop
inc
push
jle
test
add
xchg
lds
cld
stos
mov
in
out
test
outsb
sahf
pusha
and
dec
out
or
aaa
fcmovne
or
pusha
es
xor
pop
cmp
test
jno
nop
sbbl
cmp
frstor
inc
or
sarb
sbbl
sbb
nop
dec
push
shrb
arpl
xchg
push
cmp
scas
cmc
push
push
push
int3
dec
add
sti
push
mov
push
out
pop
cltd
adc
lock
mov
xchg
loopne
test
xlat
fnsave
adc
sub
pop
sub
fwait
inc
push
enter
jmp
test
pop
push
sti
test
jecxz
mov
ljmp
jecxz
dec
dec
and
shl
sbb
aas
cli
insl
lods
stc
lock
jb
mov
imul
dec
ret
xor
enter
outsb
pusha
loopne
sub
sbb
decb
and
push
inc
cmp
scas
loop
ljmp
mov
cmp
test
pushf
fisubrs
jmp
pop
xor
sbb
stc
cltd
in
cmp
cmp
mov
jmp
jle
dec
add
cmp
enter
inc
aaa
aas
jo
xor
cmpsb
inc
out
fadd
mov
push
lock
cmp
outsb
sbb
call
aam
test
pop
push
and
adcl
mov
push
ss
cmc
xor
xor
jno
jbe
xchg
clc
lods
mov
pop
mov
andb
cmp
test
movsb
in
pop
addb
daa
ret
enter
and
xchg
sub
add
mov
xor
and
mov
cmp
xchg
dec
jp
les
dec
sub
push
adcl
ret
xchg
sub
inc
sub
rcll
or
sbb
push
or
mov
jg
add
roll
push
subl
xor
jg
pop
xorb
mov
fsubrs
ljmp
and
sarb
cmp
int
fcomps
inc
cmc
aam
aad
ljmp
xor
outsl
mov
mov
push
fcomip
mov
adc
xchg
test
repnz
sbb
in
cmpsb
sbb
punpckhwd
push
in
aad
aaa
test
js
stc
or
xchg
mov
xchg
dec
out
lock
jbe
push
mov
stos
xchg
out
shll
dec
inc
test
jbe
fsubrs
shlb
xor
push
add
cmp
cmpsb
int3
xor
mov
adcl
arpl
or
aad
adc
loopne
xchg
test
mov
add
pop
in
xor
push
jmp
lods
mov
mov
negl
add
push
loope
popa
sbb
cmpsb
daa
dec
out
mov
xor
pop
scas
test
adc
dec
jno
or
lret
xor
mov
mov
aam
mov
add
sub
icebp
popa
adc
inc
fwait
push
int3
xor
jl
xor
cmpsb
inc
inc
popf
int
cld
repz
or
out
in
gs
xor
or
mov
data16
xorb
popa
sbb
dec
gs
sbb
lods
inc
and
cmp
xabort
xchg
loop
jae
ljmp
fstl
sbb
cmpsl
lds
std
jl
xor
gs
pop
stos
pushl
jl
lods
lret
mov
cmp
pop
mov
fcmovu
sub
out
popf
xor
fstps
or
mov
and
or
mov
enter
inc
dec
in
fistps
rol
push
sub
daa
ret
jb
jmp
mov
sub
iret
das
insl
sub
pushf
cli
add
xchg
stos
sbb
aas
ss
and
stc
sub
dec
dec
int
adc
dec
outsb
subl
mov
imul
jae,pn
xchg
add
fisubl
out
dec
jb
xor
movsl
outsb
jnp
iret
jnp
adc
mov
out
pop
cmp
repz
mov
or
add
cli
pushf
fists
sub
daa
xor
sbb
out
fstpl
movsb
leave
jo
and
clc
mov
xchg
cmpsb
xchg
and
adc
jo
lock
ds
jno
movsl
cwtl
add
hlt
or
ss
xchg
xchg
and
movsl
mov
cld
sbb
fists
leave
test
aaa
das
ja
sarl
sub
pop
mov
xchg
adc
cmp
sub
mov
outsl
sbb
xchg
or
jecxz
jnp
sbb
jns
jecxz
sahf
outsl
sub
add
das
jmp
out
pop
adc
test
push
sub
insb
sub
fnstsw
lret
in
fbld
xchg
mov
hlt
out
pop
push
iret
fcompl
pop
jne
orl
mov
inc
pushf
popa
xor
loope
cmp
outsb
les
cmpsl
out
or
jp
daa
mov
andb
sub
push
insb
xchg
jnp
testb
loop
pop
gs
cmpsl
xor
inc
pop
negb
mov
sbb
xor
pop
push
xor
cmp
hlt
jmp
mov
insb
call
dec
inc
mov
xor
std
fwait
mov
scas
std
xor
insl
push
mov
cwtl
and
mov
hlt
imul
jmp
push
mov
xchg
mov
xor
mov
scas
and
mov
cmp
push
iret
out
pop
sbb
dec
mov
pop
movb
sarb
pop
cli
dec
xchg
pop
rcrb
add
idivb
mov
mov
mov
mov
jnp
out
test
mov
fisubrs
cmp
fucomi
mov
xor
aaa
int
sub
mov
or
les
cmp
sbb
stos
loopne
mov
rorb
popf
push
lahf
loop
enter
pop
fisubrs
sub
inc
cs
cli
add
incb
aas
dec
push
cli
imul
shlb
stos
daa
inc
test
cmp
xlat
mov
cmp
jge
dec
dec
ret
and
pop
xor
add
mov
js
out
andb
xor
mov
icebp
lahf
or
daa
fists
sahf
rolb
lahf
jnp
inc
test
iret
inc
xor
push
or
push
pop
hlt
adc
xor
out
xchg
mov
rcll
inc
lea
int
cmpsb
sub
push
add
aad
xor
or
push
push
shll
adc
mov
mov
add
loope
and
sub
xlat
xor
cmp
lret
pop
and
jg
push
pop
mov
cmpsb
dec
push
aaa
fsubl
sbb
add
or
mov
sbb
cld
pop
test
xchg
mov
rcrb
cmp
out
push
and
les
je
pop
jge
aam
stc
dec
xor
lds
lods
cld
inc
xchg
add
sub
in
lcall
mov
arpl
dec
pop
popf
adcl
lods
nop
lea
repz
ss
sbb
xor
mov
or
repz
outsb
adc
sbb
adc
jae
add
push
pop
pop
add
jmp
dec
add
sbb
pusha
cmp
xchg
daa
mov
push
test
scas
sub
or
inc
rcrb
int3
mov
std
cmp
fists
aaa
add
mov
cld
mov
mov
push
fiaddl
xor
hlt
push
push
lcall
hlt
js
arpl
xorb
ret
xchg
cmpsb
fwait
shl
icebp
xor
lea
daa
xor
shlb
aas
orb
lds
ljmp
lds
sub
jmp
or
jae
inc
pop
je
in
dec
push
or
ficoml
imul
mov
in
inc
push
sbb
fwait
jle
mov
push
push
xchg
enter
push
jne
lods
cmp
mov
cli
jmp
push
cmp
imul
mov
mov
inc
xor
shrl
in
mov
push
mul
aaa
into
mov
lahf
push
jo
cmp
lret
movsl
scas
xchg
je
inc
sbb
pop
fdivrs
std
pop
std
mov
mov
mov
out
add
sbb
adc
push
lret
and
adc
shrl
adc
mov
test
adc
add
clc
add
xchg
arpl
insb
loop
in
stc
clc
ja
cmp
mov
xchg
jns
jne
shll
cmp
sbb
test
dec
xchg
jbe
xor
or
push
in
dec
in
mov
cmp
sbb
scas
mov
rclb
xchg
cltd
repz
xchg
movsb
rcll
movsl
xchg
pop
add
cmpsb
in
add
adc
cli
dec
pop
imul
push
or
fiaddl
cwtl
pusha
mov
mov
fiaddl
sub
push
xchg
out
mulb
sub
std
xchg
xchg
cmp
xchg
loopne
mov
sti
mov
push
xchg
decl
rcrl
or
adc
pushf
shll
and
cmp
ss
ret
loopne
iret
rcrb
pop
mov
in
pop
mov
push
int
mov
jl
bound
lods
pop
xor
jmp
push
lret
jnp
nop
pop
push
xor
mov
aad
scas
sbbl
es
sub
mov
mov
shl
push
insl
cwtl
jnp
stos
hlt
mov
jp
mov
hlt
cmpsb
daa
loope
or
mov
mov
ljmp
adc
das
enter
cmp
cmp
mov
mov
scas
push
sbb
cmp
xor
or
js
xor
xchg
push
sbb
es
sahf
sbb
je
aam
ja
add
xchg
and
cli
test
mov
mov
fs
call
cmp
mov
mov
and
subl
mov
fwait
or
insb
mov
loope
loop
shr
cwtl
and
mov
xlat
mov
xchg
sub
lahf
aaa
cltd
nop
sub
mov
div
inc
pusha
iret
aaa
clc
and
cli
loop
pop
add
push
repnz
cmpsl
lahf
fldz
incl
jno
or
les
loope
xchg
push
imul
add
mov
in
cmp
pop
dec
mov
imul
jp
adcb
addr16
cmp
ret
imul
das
sub
movsb
jns
mov
mov
in
inc
outsl
in
stc
adc
mov
movsb
pop
les
dec
fnstcw
clc
cmp
jne
sub
js
sbb
mov
cmpsl
fisubrs
idivb
xchg
xchg
stos
std
sbb
add
test
ja
ret
fistpll
xor
cltd
sbb
inc
xchg
push
aad
jg
mov
lret
adc
dec
inc
mov
xor
adc
cwtl
mov
mov
jno
jno
adc
sbb
call
push
mov
adc
into
sbb
xor
repz
stos
jl
or
aaa
push
lea
xor
fisttpl
adc
xchg
pop
mov
sbbw
into
inc
inc
mov
sub
xorb
push
repnz
inc
fcmovb
jmp
jae
jne
inc
cmp
sub
xchg
fiaddl
mov
insb
mov
test
sbb
add
lods
or
add
stos
dec
scas
sub
xor
push
enter
and
mov
mov
out
xor
repnz
pop
rclb
idiv
mov
out
and
lret
out
sarb
hlt
adc
push
scas
and
jle
mov
ret
cltd
pop
pop
int3
in
sub
jl
clc
lret
outsl
fisubl
popa
adc
sub
mov
je
popf
out
jl
stos
sub
ror
inc
dec
xchg
rclb
fisubrs
ljmp
xchg
clc
mov
or
nop
aad
nop
jb
cli
scas
shl
xor
or
mov
hlt
test
pop
mov
jg
push
pop
cmc
or
adc
mov
mov
addb
push
icebp
sbb
jnp
js
out
loopne
jnp
nop
movsl
or
ljmp
int3
pop
repnz
mov
mov
jae
in
add
and
push
cmp
ja
iret
cmp
jns
xchg
nop
mov
mov
in
inc
xor
push
in
jge
inc
push
cmp
into
in
orl
sub
inc
jle
jg
add
adc
sbb
push
mov
and
test
aam
adc
js
xor
loope
sbb
mov
ja
enter
jo
in
std
push
inc
dec
inc
and
cmp
mov
pop
push
pop
sub
vpsrad
shr
sbb
fbld
pushf
aas
cmc
or
push
fldl
cwtl
xor
add
dec
inc
leave
fucomp
push
sbb
popf
push
pop
or
xchg
clc
mov
iret
jecxz
mov
int3
lcall
sub
xor
andl
pop
jno
adcl
repnz
jae
xor
stos
pop
lods
insl
inc
pop
aad
lea
push
push
mov
xor
popl
mov
inc
rcrl
cld
push
xor
in
xor
sub
arpl
pusha
out
jae
mov
sbb
push
push
pop
dec
outsb
dec
nop
pushf
xchg
sbb
addb
jne
cltd
sbb
inc
mov
out
test
cmpl
cmp
jge
push
fnsave
out
fimull
testb
sub
add
mov
out
cltd
dec
and
push
xchg
dec
mov
mov
xchg
cs
lock
adc
cmc
jns
sbb
sbb
inc
les
sub
xor
divl
sub
and
jae
mov
fsubs
fidivrl
jg
push
iret
sbbl
mov
jb
fistpll
inc
stos
test
ja
das
fcomps
mov
js
jno
xchg
repz
mov
push
mov
inc
push
cmp
ret
cmp
lods
inc
mov
aas
ja
sbb
movsb
ret
push
decl
add
mov
jge
xchg
out
mov
or
mov
gs
mov
push
push
je
xchg
insb
cld
cmpsl
popf
insb
andb
adc
push
or
arpl
cli
adc
sbb
mov
dec
jno
sbb
cs
cmpsl
dec
inc
ret
pop
pushf
in
jb
xchg
mov
shll
rcr
movsb
or
adc
cmpsb
cs
rorb
cmp
or
pop
jae
loopne
mov
test
imul
mov
mov
or
and
mov
cli
dec
xchg
iret
movsb
pushf
clc
aam
test
mov
mov
xlat
jno
pusha
jbe
rcrl
push
icebp
inc
xor
lret
in
xchg
mov
dec
or
push
fildl
lods
and
and
je
pop
mov
push
xor
gs
pop
add
dec
cmpsb
testl
fsubp
push
std
and
es
sbb
push
daa
jmp
out
sub
es
lock
mov
mov
xor
jl
mov
loop
xchg
sub
int
aad
ljmp
clc
insl
mov
into
je
jp
test
jl
test
clc
imul
lcall
mov
xchg
movsb
lods
pop
add
std
lea
pop
push
std
movsl
lods
sbb
testb
outsb
leave
cs
push
fwait
push
fstps
les
xchg
out
ss
push
ret
daa
cmp
inc
aam
sbb
insb
das
sbb
xchg
lock
or
insb
cmpsl
stos
arpl
pop
mov
xor
jne
ja
pusha
cmc
into
in
pop
je
test
sbb
mov
and
mov
and
pop
stos
movsl
cwtl
shrl
arpl
inc
fldl
jle
mov
push
loop
cld
leave
jmp
xchg
ljmp
xchg
out
sub
xor
leave
daa
xchg
loopne
mov
outsl
mov
inc
cmp
sbb
test
xchg
lock
inc
or
orb
pop
pop
mov
loope
testl
adc
jb
xor
testb
push
sbb
jb
mov
test
mov
ljmp
shlb
rorb
loop
pop
sbb
inc
sbb
in
nop
add
arpl
jno
mov
mov
dec
jle
xchg
jnp
mov
xor
pop
jle
sbb
je
dec
jbe
test
mov
mov
out
ljmp
adc
cmp
mov
and
push
dec
std
fsub
dec
das
mov
push
add
mov
movsb
pop
jl
fwait
inc
mov
sbb
jmp
or
lret
cmc
aam
mov
or
cmp
loopne
les
pop
jnp
inc
popf
and
pop
xchg
dec
pop
adc
add
xchg
inc
fisttps
pop
fadd
and
cli
push
push
or
or
xor
dec
jecxz
data16
in
add
dec
fwait
iret
pop
lret
inc
jg
xor
repz
negl
int
push
dec
add
jno
mov
push
sub
lea
mov
add
ja
jae
fdivl
jl
int3
aad
enter
ljmp
pop
jae
adc
scas
loope
cmc
lahf
sub
popf
clc
xor
push
mov
cmpsb
sub
out
dec
pop
orb
call
adc
clc
xchg
pop
and
push
sbb
mov
es
cmc
xchg
xchg
fiaddl
cli
dec
mov
es
or
idivb
mov
rcr
push
sub
out
fistps
out
inc
sub
lea
fmulp
cmp
xchg
pop
push
gs
dec
dec
sbb
fs
fistps
popf
sahf
add
shrl
lcall
pop
xchg
aam
out
loopne
push
jp
test
adc
call
scas
push
xor
rcr
mov
cmp
jg
mov
popf
xor
adc
cmpsl
jo
hlt
sub
sbb
fdivr
sbb
sub
pop
pusha
adc
jnp
xchg
pop
dec
sub
xor
xor
sti
scas
scas
fwait
icebp
mov
jg
insb
add
pop
fucom
and
or
adc
xchg
push
lcall
xchg
jbe
mov
add
xchg
ds
int
fs
les
sub
mov
cmpsb
inc
lahf
int3
and
ja
les
inc
cld
imul
push
mov
mov
int
jmp
mov
pop
mov
xchg
inc
out
mov
cmp
add
fs
jecxz
in
push
or
fsubp
enter
stc
cmp
cmp
loopne
inc
insl
pop
insl
orb
fsub
mov
jp
lds
pop
dec
outsl
divb
orb
cmp
mov
es
add
sbb
and
mov
push
mov
jnp
loop
imul
mov
mov
jnp
cld
fwait
pop
jb
jmp
cmp
repnz
leave
or
mov
dec
addl
fs
jmp
and
mov
mov
pop
in
mov
mov
aam
xor
sub
pop
scas
add
negb
push
pop
or
sahf
std
mov
test
xchg
or
popf
mov
mov
loop
xor
sbb
cmp
fdivrs
mov
add
jae
add
cmc
xchg
int
jl
add
add
pop
pusha
xor
inc
divb
jmp
movq
orb
and
push
mov
xchg
int3
lret
pop
mov
add
adc
mov
cmc
mov
xchg
pop
cmpsl
je
lret
fisttps
test
sub
or
rol
mov
lret
sbb
rolb
out
pusha
das
testl
lea
push
inc
jno
xchg
es
inc
ret
stos
cmpsb
adc
in
lods
lea
into
arpl
adc
test
nop
test
jp
cld
mov
xor
outsl
xor
sbb
pop
sub
or
into
xor
jnp
stos
pop
cli
fdivrp
cwtl
jb
push
mov
or
add
pop
cmp
xor
add
mov
sub
fimuls
pop
data16
test
je
shlb
in
add
pop
es
xor
cltd
stos
pushf
pop
sbb
xor
test
sbb
dec
outsl
mov
lea
adc
je
xchg
adc
sbb
test
inc
test
sbb
or
sbb
jnp
push
adc
cs
stc
push
and
ss
aam
inc
add
and
dec
jns
mov
inc
sahf
mov
cmpb
jns
in
push
add
int
enter
mov
enter
push
push
je
xorb
dec
gs
loopne
sub
mov
sarb
aaa
es
outsl
jae
sbb
xor
nop
sbb
push
mov
jl
fadds
and
and
jne
data16
gs
add
sub
loope
shlb
insb
arpl
pop
push
add
jl
adc
jne
iret
hlt
sbb
jmp
mov
aam
out
aam
insb
pop
push
mov
add
aad
adc
or
sbb
push
add
sbb
out
cmp
ljmp
sbb
mov
dec
mov
sbb
jno
or
roll
xor
sub
push
cmp
sbbl
push
dec
imul
pop
mov
mov
stos
stc
popa
or
fisttpl
xor
dec
scas
daa
cmpsl
sub
push
lods
xchg
mov
push
jns
mov
inc
in
xchg
xchg
push
clc
lret
pop
adc
loopne
scas
push
lock
test
leave
stos
ficoms
fmuls
cli
addr16
and
dec
inc
test
lret
sub
xlat
mov
jbe
fdivs
loop
lret
sti
jo
or
sub
ret
das
in
inc
and
dec
mov
jl
lock
roll
pop
call
lods
into
pop
mov
hlt
push
xlat
lock
pop
dec
lds
sub
or
test
adc
sub
or
int3
std
jl
jmp
mov
cld
mov
popf
add
icebp
dec
in
or
sti
in
mov
arpl
or
and
repnz
lods
cmp
lret
test
shlb
mov
sub
bound
lea
stos
and
cmp
and
dec
int
fdiv
mov
or
cld
inc
jne
push
decl
in
mov
enter
popf
inc
mov
and
loop
sub
pop
inc
dec
or
movsb
test
jne
int
negl
mov
push
xchg
loopne
pushf
cmp
dec
mov
out
and
ja
fisttps
repz
xor
sbb
push
pop
mov
push
xor
sub
mov
pop
jne
std
imul
outsb
das
dec
inc
dec
pop
mov
add
mov
mov
mov
xor
inc
cli
sub
add
pop
dec
xchg
pop
lret
mov
sub
jle
ret
mov
icebp
jecxz
xchg
pusha
shll
je
out
pop
ss
push
stos
xchg
mov
jp
sub
shll
mov
jecxz
in
xlat
mov
sbb
mov
cltd
mov
popa
popf
leave
insl
andb
jno
insb
adc
and
push
outsb
push
xchg
fisttps
pushl
dec
imul
fisubl
jbe
dec
sbbb
mov
rorb
xchg
fisttps
div
or
sbb
jmp
jecxz
lcall
lds
mov
int3
sti
mov
cmpsl
orb
lret
subl
ud0
lahf
cmc
add
inc
cltd
mov
icebp
les
push
movsl
mov
divl
popf
sub
lds
test
adc
loope
and
iret
add
jmp
cmp
mov
or
lods
outsb
pop
xchg
push
in
repnz
popl
fwait
je
sarb
iret
add
lcall
inc
cmp
out
sub
jp
mov
enter
subb
mov
out
ror
aam
movsb
mov
into
xchg
push
xchg
mov
mov
lahf
mov
ror
or
pop
mov
jo
cld
aad
fmull
sbb
jp
sbb
adc
pop
in
scas
jb
into
jle
movsl
push
jmp
or
hlt
adc
cmp
das
sbb
adc
lcall
adc
mov
stc
sub
xlat
cwtl
outsl
jbe
pop
mov
or
pushf
int3
pop
subl
rorl
add
cmp
push
div
rorl
imul
ja
imul
inc
std
lds
inc
jbe
out
xchg
pop
jp
cmp
flds
push
lock
jle
or
gs
dec
xchg
inc
xchg
inc
adc
clc
dec
fcom
inc
out
mov
xor
inc
testl
mov
mov
hlt
push
push
sbb
mov
push
rcr
adc
cmpsb
loop
in
pop
add
mov
and
ljmp
movsb
dec
pusha
test
push
cmc
sbb
mov
xchg
mov
xor
and
and
movsb
add
daa
pop
sti
shrl
int
cmp
test
dec
call
push
int
addr16
int
gs
imul
cmp
aaa
movsb
ret
push
aas
mov
sub
sub
leave
ds
jo
lahf
mov
movsb
add
mov
sub
inc
in
and
test
adc
dec
addr16
push
jb
stos
sbb
loopne
aaa
lahf
jl
cld
fildll
jno
xor
cltd
mov
loopne
mov
outsb
in
cmp
sub
jb
sahf
call
mov
test
repnz
movsb
pop
dec
push
push
loop
mov
mov
mov
dec
je
lahf
fmull
push
jge
inc
jb
in
imul
jnp
sbb
pop
inc
test
mov
imul
mov
xchg
data16
nop
ljmp
mov
pop
into
push
cmp
mov
mov
std
push
stc
sbb
fdivrp
jg
lods
insb
adc
cmp
testl
pop
fwait
xchg
das
cmp
jb
mov
mov
rcr
fimuls
loop
jnp
gs
sub
sub
inc
or
enter
add
fldenv
fcoms
mov
popa
push
mov
stos
jle
pop
pop
mov
xchg
pushaw
ret
ret
add
in
in
bound
test
dec
movsl
adc
and
adc
jp
cli
sub
push
cmpsb
repnz
cli
mov
int
xor
dec
pop
lcall
jmp
in
ljmp
ljmp
dec
cmp
mov
cmp
mov
dec
cmp
std
mov
test
pop
mov
jmp
notb
mov
cli
pop
das
add
in
imul
cmpsb
or
inc
jg
jge
inc
sub
sbb
iret
rolb
add
lret
or
dec
pop
sbb
push
int
ret
add
lock
fdivs
fimuls
lods
adc
xchg
test
fdivl
jg
dec
outsb
repz
jg
mov
inc
inc
sub
fdivs
inc
fptan
mov
and
adc
adc
inc
or
ret
cltd
mov
loopne
and
dec
aad
mov
jb
or
mov
fstpl
int3
sub
imul
sub
jle
push
jl
add
xor
into
lods
dec
aaa
dec
and
add
adc
gs
repnz
push
mov
addl
xchg
inc
pop
std
mov
adc
mov
mov
cmpsb
stos
push
shl
ret
cmp
inc
push
push
out
add
xchg
xchg
pop
inc
lock
add
sub
movsl
cltd
cmp
je
shll
cmp
push
in
xor
xlat
in
std
and
loope
into
dec
in
aad
add
or
jo
pop
lods
or
xchg
xor
repz
or
add
mov
scas
scas
jle
mov
sub
inc
shl
adc
test
inc
mov
insb
fs
test
pop
add
jb
ret
xchg
bound
sbb
or
sbb
pop
popa
rorb
jnp
mov
mov
imul
mov
insl
jae
mov
sbb
gs
std
lcall
xor
fcmovu
inc
psubq
ss
mov
add
cmpsb
adc
incl
sub
int3
push
popf
fimuls
dec
mov
push
stos
mov
lea
fldcw
inc
stos
or
sti
sub
pop
call
inc
dec
dec
jo
mov
cli
inc
cwtl
mov
adc
xlat
mov
mov
sarb
xor
mov
repz
mov
and
ljmp
call
sti
push
dec
fistps
into
outsl
outsb
out
jle
stos
lds
aad
in
ja
adc
stos
jae
rcrl
push
sets
jo
out
shl
add
jmp
or
out
add
push
cli
mov
mov
adc
mov
add
int
push
test
push
mov
sbb
mov
popf
mov
pop
push
jne
push
mov
pop
out
inc
test
mov
pop
pusha
repz
mov
ret
adc
push
call
sbb
xchg
int
call
xchg
xorb
cld
gs
mov
repnz
leave
movl
outsb
xchg
ja
lret
mov
jmp
pop
mov
sbb
fcmove
lahf
jns
xlat
idivb
aam
aaa
lock
push
iret
add
mov
rcll
pop
jl
and
cmp
fstpt
pop
cmc
pop
inc
nop
scas
jge
mov
dec
stos
push
sub
aaa
mov
inc
sti
inc
mov
insl
je
cmp
pop
push
cmp
mov
jp
xor
insb
jle
in
cmp
popa
or
xorb
xchg
imul
enter
jns
jg
or
xlat
popa
push
jne
adc
sbb
ror
jns
or
pop
je
adc
push
enter
aas
push
mov
mov
andb
mov
sbb
ss
cmp
pop
sub
push
jb
je
fildll
jb
add
cmpsb
or
ds
stc
icebp
jl
clc
inc
test
fiaddl
mov
lds
ret
adc
jmp
mov
out
mov
dec
mov
push
jns
ret
cmp
imul
mov
std
or
push
je
mov
ljmp
push
dec
jle
scas
scas
in
and
inc
mov
mov
mov
adc
and
jge
mov
xor
and
jg
fs
cltd
pop
and
outsb
enter
icebp
pop
push
aad
push
sbb
xor
or
adc
repz
fs
dec
in
aad
add
push
lcall
sbb
sti
aam
pop
je
xlat
lds
add
call
jmp
add
in
pop
jmp
sbb
icebp
cmc
jnp
outsl
lods
dec
and
push
jl
js
rclb
lds
ret
test
and
push
jb
popf
sub
push
je
mov
inc
add
sub
dec
outsb
loope
jge
into
in
push
pusha
jb
js
andb
test
das
icebp
stos
jb
in
int3
pop
and
outsb
sub
ret
jmp
xor
daa
notb
insb
dec
ljmp
and
in
xchg
bound
insl
push
je
in
ds
dec
mov
pop
xchg
fidivrs
pusha
inc
clc
pop
pop
cwtl
mov
scas
je
pushf
adc
inc
decl
clc
iret
pop
es
jbe
std
ss
filds
push
or
mov
or
aad
in
xchg
test
adc
imull
es
add
cltd
dec
mov
xor
pop
in
int3
sub
mov
cmpsb
cltd
xchg
add
bound
aas
sbb
inc
dec
pextrw
pop
jge
sub
jl
jo
ror
icebp
popf
add
js
and
push
cltd
push
xchg
jae
test
mov
hlt
dec
mov
cmpsl
mov
inc
and
lods
sub
les
adc
cmp
movsl
sahf
popa
mov
arpl
adc
pop
dec
enter
inc
clc
leave
inc
mov
bound
cmpb
mov
mov
adc
pop
das
mov
jno
mov
into
jg
push
lahf
inc
lock
xchg
sarl
inc
aas
ljmp
dec
shl
mov
dec
ja
or
pop
sbb
mov
imul
dec
pop
notb
or
mov
call
sub
mov
dec
call
adc
ret
shr
mov
jecxz
in
loope
cmp
int
xchg
call
and
sbb
mov
and
fildl
ret
incb
pop
shrl
push
mov
xchg
aad
seto
sub
push
sarb
xchg
fstpl
xchg
mov
repz
jb
lock
and
jmp
sbb
shrb
or
xchg
push
mov
inc
sbb
mov
cld
cmp
cmc
sbb
add
aam
sti
or
pop
mov
lea
daa
jecxz
jl
inc
inc
xchg
dec
flds
sahf
lret
lds
push
jg
sub
add
jnp
lock
cmp
lahf
cmpsb
cli
inc
mov
add
movsl
imul
pop
cwtl
cmc
sahf
cwtl
in
push
fisubs
lcall
pop
cmpsb
fdivrl
shr
test
shlb
xchg
insl
cld
das
out
sub
adc
inc
add
adc
aas
scas
xor
fs
mov
lcall
outsb
js
ja
lahf
mov
arpl
cmc
frstor
mov
shr
daa
mov
push
xor
rcrl
scas
stos
iret
orl
fidivs
and
jne
or
pusha
pop
xchg
das
lret
dec
adc
cmp
xchg
clc
enter
add
pop
cmp
in
verr
mov
mov
mov
popf
push
sub
cmpl
out
vmovaps
xchg
pop
test
outsb
sti
and
pop
test
popf
push
mov
lods
cmp
imul
xchg
inc
lahf
add
adc
rclb
inc
into
xor
hlt
test
aam
adc
jbe
addl
subl
iret
sub
pop
bound
mov
mov
in
jge
movsl
jle
rclb
cli
sub
aad
repnz
stc
sbb
imul
gs
add
imul
stos
cli
pop
add
fsubrs
in
stos
ljmp
popf
add
add
lret
cmp
lods
fadds
leave
les
dec
sub
mulb
test
stos
jno
and
push
push
xchg
sub
inc
jle
in
xor
out
mov
mov
push
aam
jl
test
lods
repnz
push
repnz
mov
movsl
inc
fcomps
js
sbb
mov
outsb
cwtl
fwait
jp
adc
cmp
rcrl
adc
or
pop
jp
sbb
loope
mov
test
push
inc
bound
repnz
mov
add
es
outsl
jecxz
repnz
sti
dec
stos
sub
sub
xchg
stos
pop
push
mov
dec
fprem
or
inc
mulb
popa
sbb
xor
test
out
enter
js
ss
jl
add
out
or
ret
mov
je
int3
mov
inc
cmc
push
mov
xor
in
adc
add
push
ljmp
sub
adc
and
lret
out
stos
and
int3
jmp
cmc
pop
les
jp
mov
lods
push
jmp
enter
lds
sub
or
shll
testb
andl
dec
cltd
and
pop
cmp
sbb
lods
inc
dec
mov
movsb
dec
int
add
in
scas
ljmp
and
sti
pop
inc
jns
xchg
xor
in
insl
mov
insl
add
cli
les
aad
dec
in
pop
jp,pt
push
xchg
push
mov
outsb
pushf
lahf
outsb
fsubl
xchg
add
xchg
popa
cli
fs
add
js
popf
add
push
pop
out
inc
add
xchg
lret
pop
xchg
sbb
xchg
push
dec
dec
in
cmpsb
clc
cltd
out
hlt
jl
add
mov
leave
das
jnp
adc
outsl
loope
lahf
negb
adc
stc
mov
outsl
sub
scas
mov
push
test
and
push
adc
push
leave
push
xchg
filds
cld
scas
jl
add
xchg
js
idivb
jg
mov
or
mov
mov
sub
sbb
pop
add
xor
jle
daa
aas
lret
sub
cmpsl
and
and
aas
ja
sbbb
sub
inc
lods
sarl
stc
cmc
fstpt
adc
daa
adc
mov
and
loopne
adc
test
mov
jmp
rcrb
lcall
out
pop
pop
or
inc
push
cmp
inc
dec
lret
lret
outsl
inc
mov
andl
shl
hlt
mov
fisttpl
sbb
addr16
cmovnp
mov
mov
push
xor
lahf
xchg
fucomip
pop
cltd
jno
pop
fwait
hlt
hlt
clc
inc
bound
fadds
call
lds
stos
mov
les
cmp
int
insl
jnp
cmpl
mov
mov
fistps
push
jae
xchg
add
cli
xor
inc
fistps
dec
shl
mov
loopne
mov
or
and
cmpb
inc
sub
and
add
sbb
outsb
fimull
xchg
fnstenv
clc
mov
mov
cwtl
mov
cmpsb
cwtl
xchg
std
adc
or
in
mov
push
aas
dec
mov
lea
inc
mov
mov
movsl
movsl
mov
inc
push
inc
xor
movsb
push
insl
popf
pop
fs
out
inc
fistpll
mov
pop
shrb
out
int
out
push
push
mov
inc
shr
jo
ret
mov
stos
orb
push
push
push
sub
push
addr16
lods
jmp
bound
cmp
outsb
adc
cmp
filds
xorb
jecxz
ds
xchg
cld
pop
dec
inc
xor
jle
push
lods
je
mov
adc
and
ds
fsubp
mov
cwtl
xchg
push
loope
mov
dec
in
cltd
or
sub
mov
cmp
sarl
dec
mov
jae
push
inc
loope
shlb
nop
into
push
test
push
xlat
dec
stos
push
push
movsb
pushf
and
xlat
dec
adc
mov
push
inc
xor
mov
jl
arpl
ja
lds
shl
pop
loop
pushf
rorb
sbb
outsb
insl
and
int3
popa
jmp
xchg
arpl
cwtl
imul
nop
jge
mov
jbe
mov
sub
repnz
lahf
incl
push
fnstenv
aam
mov
nop
mov
lock
inc
mov
sub
jnp
sub
and
dec
sahf
inc
popw
xchg
cmp
in
cs
mov
pop
jae
inc
pop
mov
cli
mov
jbe
inc
dec
adc
sub
sbb
inc
out
rolb
cmp
sbb
imul
pop
mov
aas
fbstp
popa
sbb
or
push
in
notl
pop
jecxz
pop
sti
loop
xor
pop
mul
xchg
add
scas
inc
test
scas
sahf
fbld
or
xor
add
xchg
and
lods
pushf
adc
cs
mov
test
fnsave
push
push
pop
scas
cmpsb
mov
lcall
or
pop
pop
mov
xchg
in
arpl
jge
outsl
jbe
sbb
pop
cmpsb
push
rclb
loope
stc
iret
aam
xchg
lret
mov
into
shlb
jp
fld
daa
xor
sbb
and
push
xchg
push
pop
mov
mov
sbb
mov
mov
mov
cmpsb
dec
xchg
aas
mov
stc
sub
and
call
add
xchg
adc
pop
pop
adc
xchg
and
xlat
cli
jge
adc
scas
and
lret
lahf
jecxz
push
cmp
dec
das
jecxz
movsl
imul
cwtl
jae
or
add
xor
add
mov
mov
je
lock
push
cmpsb
dec
xor
ret
lret
sbbl
lret
mov
sbbl
push
xor
pop
test
pop
ds
mov
outsb
out
xchg
mov
or
pop
orl
add
mov
movsl
das
xchg
dec
insl
cmpl
lahf
call
arpl
and
xlat
outsb
orb
aam
notb
int
xchg
stc
and
pop
mov
sub
jp
push
jl
cwtl
xchg
mov
mov
jnp
push
pushf
sub
mov
jno
dec
repnz
jmp
aam
or
aad
clc
cli
addl
jno
repz
jle
faddl
mov
ret
sub
es
fisubs
or
pop
cmp
push
push
outsb
lock
cmovs
daa
repz
scas
mov
push
aaa
pop
or
adc
push
into
ljmp
dec
pop
lods
mov
xchg
dec
roll
shll
pop
jns
mov
ja
mov
cmp
je
imul
movaps
lret
or
lret
xchg
repnz
push
cli
aaa
lret
sbb
mov
xor
xchg
or
dec
mov
mov
clc
sbb
bound
push
insb
mov
adc
lds
adc
cmpsl
xchg
pop
lods
inc
andb
fcompl
xchg
push
out
into
mov
xor
mov
jnp
sbb
or
inc
xchg
test
out
movsl
inc
inc
mov
dec
mov
cmp
loop
std
pop
stos
jno
loop
dec
in
ljmp
jae
xchg
mov
jns
leave
lock
aam
je
cmp
repz
add
lcall
sbb
fadds
sub
enter
cmpsl
rol
cmp
stos
lock
mov
in
sub
or
in
in
xchg
cmp
subl
jb
adc
clc
mov
adc
mov
cld
mov
fstl
xchg
int
mov
pop
dec
ret
mov
or
jo
stos
test
mov
adc
pop
adc
fstpt
adc
xchg
scas
dec
xor
ret
pop
shrd
out
mov
popf
std
ljmp
push
jbe
pop
and
shlb
sbb
movsb
lret
push
dec
jo
addr16
lcall
out
cmpsb
test
int3
out
rcl
xchg
in
pop
xchg
cmp
add
stos
negb
fcoml
scas
push
xor
cmc
dec
jbe
icebp
xor
punpckhbw
fcmovne
inc
dec
mov
or
fsubl
pop
cmp
clc
jl
cmc
negl
jbe
es
cmpsl
outsb
sub
push
sbb
data16
sbb
mov
pop
in
cmp
jnp
cmp
adcl
push
cmp
subl
loopne
enter
rorb
cld
repz
and
dec
adc
insb
push
inc
xchg
ss
push
aas
int3
ja
and
mov
out
fsubl
xor
pop
aad
insl
pop
test
test
and
pop
fs
push
lcall
hlt
dec
insb
shll
mov
lcall
mov
ljmp
mov
imul
pop
jmp
ret
push
push
jb
fstpl
add
mov
lds
xor
mov
pop
in
pop
push
sub
or
pop
sbb
fdivl
and
sbb
stos
sub
sbb
pop
test
lcall
pop
dec
lds
dec
lret
enter
outsl
xchg
lcall
xor
lods
insb
sbb
pop
data16
clc
in
hlt
daa
and
mov
stos
fcompl
iret
cmc
les
cltd
xor
inc
mov
adc
sbb
sarl
push
push
sbbb
xchg
push
and
sbb
sbb
add
icebp
add
outsl
pop
imul
xchg
jg
mov
cs
jg
in
iret
sti
pop
hlt
rcll
push
inc
sub
or
xchg
push
jb
pop
jecxz
out
sbb
cmc
leave
push
fwait
das
ss
insl
shrl
mov
jle
loopne
dec
aam
repz
or
fwait
mov
movsl
imul
mov
push
and
insb
cmp
adc
pop
pushf
ss
mov
cmc
nop
cmp
and
into
push
scas
test
stos
or
aam
add
fiadds
icebp
insl
popf
cmc
icebp
jb
ficoml
sbb
cmova
enter
push
xchg
das
jge
lret
nop
or
stos
cmp
xlat
sub
mov
push
sbbb
pusha
jge
jmp
cmc
dec
adc
sub
xchg
orb
xchg
sti
jmp
aam
and
nop
and
inc
push
sub
enter
rcrb
cmp
leave
cmp
mov
mov
das
mov
pushf
lahf
shlb
out
fildll
jnp
pop
movsb
loop
mov
push
add
ret
dec
add
add
dec
cltd
mov
aaa
add
jmp
mov
mov
sbb
and
and
xorl
and
jg
adc
stc
ret
push
mov
hlt
int
xor
sarb
push
push
std
xchg
cmc
push
jno
repz
or
pop
fiaddl
xchg
adc
sub
mov
adc
mov
adc
pop
pop
pop
repz
mov
mov
sbb
daa
imul
mov
test
push
xor
xchg
mulb
and
outsb
dec
xchg
ljmp
test
imul
pusha
ss
xor
mov
arpl
repnz
sarl
addb
xor
dec
mov
mov
adc
push
add
mov
add
xor
insb
xor
sub
xor
adc
out
scas
shll
mov
lods
add
sti
add
or
mov
pop
add
in
cltd
and
test
aam
imul
mov
roll
mov
or
mov
ret
push
jl
adc
outsl
popa
in
jno
xchg
into
test
loopne
xchg
push
es
dec
mov
hlt
sbb
inc
push
jae
xor
jno
ja
push
es
pop
rclb
pop
cmp
lods
xor
jle
iret
xlat
lds
xchg
inc
inc
dec
ds
pop
xchg
test
xor
xor
aam
je
xlat
shll
dec
push
cmp
sub
xchg
push
arpl
sub
and
lret
and
js
dec
shll
jo
sub
jecxz
pop
lods
adc
inc
loopne
or
shrb
mov
movsl
ds
ret
ret
push
adc
xor
mov
jb
adcb
mov
mov
ja
lods
in
sub
xchg
imul
dec
test
aad
push
push
inc
jbe
scas
lods
lahf
push
pop
jle
mov
mov
fsubp
mov
in
fcomp
and
inc
int
dec
sti
adc
dec
jg
mov
jg
out
mov
scas
cltd
daa
cmp
adc
das
ds
enter
je
jl
mov
cli
mov
push
popa
pop
fcmovbe
fdivrl
fsts
cmp
fucompp
lret
in
outsl
jmp
pushf
mov
push
sub
mov
sbb
inc
add
sbb
xchg
dec
outsl
add
sbb
mov
roll
rcrl
test
stc
outsb
andl
or
jne
in
fsubr
mov
shl
mov
shll
inc
out
mov
sbb
xchg
lahf
ja
pop
mov
mov
add
test
pop
push
std
aam
les
jo
fldcw
jns
add
movb
lock
cmp
out
dec
add
nop
jp
hlt
arpl
dec
bound
orl
pop
inc
das
fdivs
shrl
xchg
and
xchg
fcmovnu
or
push
pop
in
lds
and
add
outsl
mov
nop
xor
subb
orb
mov
xor
mov
inc
jmp
in
and
cli
clc
mov
sbb
cmp
mov
pop
aaa
dec
call
sbb
jge
test
sarl
out
mov
ret
dec
or
loopne
ret
and
int
pop
add
int
adc
dec
lods
jge
xchg
xchg
pop
sbb
lods
sub
sbb
add
jle
xor
repnz
enter
push
mov
cwtl
xor
adc
jb
xchg
stos
icebp
insl
dec
shl
push
mov
fimull
or
sbb
add
mov
mov
cmp
les
jns
es
cmp
jne
cwtl
jae
addl
and
cmp
sbb
dec
push
mov
inc
push
arpl
jno
ja
add
lea
outsl
adc
subl
gs
dec
xchg
rolb
dec
add
mov
sbb
inc
test
lret
sub
pop
mov
add
sub
inc
add
in
sbb
or
rol
fwait
stos
popa
add
nop
or
jne
mov
icebp
gs
add
pop
jmp
and
cs
jbe
mov
jns
push
pop
xchg
sub
or
cmpl
test
add
repnz
mov
cli
dec
shl
inc
movsb
ja
adc
adc
or
pop
mov
test
push
jmp
das
mov
adc
ss
mov
cmpsb
fs
xchg
dec
sbb
sub
pop
sahf
jbe
xchg
das
inc
pushf
and
les
inc
mov
lahf
aam
sbb
sub
gs
movsl
outsb
int
out
mov
repz
rorl
fistl
jmp
jmp
in
rsm
arpl
push
test
jno
xor
cmpsb
jno
xorl
sbb
dec
cmp
xor
adc
and
mov
mov
xor
mov
ljmp
push
dec
xor
addr16
mov
and
out
es
lahf
mov
sub
jne
cmp
popa
sti
inc
ret
xchg
mov
ret
jns
lods
pusha
nop
cmp
or
and
lret
xchg
test
xchg
std
mov
nop
shlb
loopne
mov
decb
rcr
dec
lds
push
add
outsb
jns
ret
dec
in
int3
fnstenv
sub
imulb
dec
jge
psubusb
mov
mov
pop
ja
mov
mov
inc
sbb
xor
aaa
xor
jmp
adc
jecxz
mov
xchg
je
pop
jmp
test
sub
leave
stc
mov
pop
jno
xchg
jl
push
sbb
pop
cwtl
insb
inc
movsl
sub
adc
test
pop
jmp
inc
sub
inc
jle
and
push
mov
or
lea
nop
mov
cld
jb
pop
mov
xchg
hlt
out
inc
scas
mov
outsb
shlb
jnp
sub
cmpl
push
xchg
mov
dec
loop
mov
xor
sub
stos
xchg
xchg
xchg
xchg
cld
pop
mov
ja
daa
mov
insb
out
or
mov
sub
in
andb
inc
add
pop
insl
or
jmp
or
xchg
imul
jbe
cmp
dec
and
call
cmp
leave
je
sub
pop
test
repz
daa
push
jns
mov
push
enter
das
das
sbb
jns
out
es
jg
hlt
xchg
int3
dec
dec
mov
adc
mov
outsl
inc
sub
add
mov
ret
add
xor
push
imul
addr16
leave
int3
aaa
pop
mov
fstpl
data16
rorb
push
mov
cmpsb
dec
adc
fisttpl
int3
rcll
rorl
adc
xchg
repz
cwtl
aas
nop
loop
sub
dec
and
xchg
jle
mov
test
dec
test
push
cmpl
cltd
mov
gs
dec
mov
inc
xchg
jae
cmp
ret
pop
and
mov
lcall
push
out
out
aaa
movnti
out
mov
xchg
lods
cld
jae
push
add
push
and
imul
in
mov
mov
jge
add
aaa
aam
test
std
sbb
push
sub
test
push
fs
loop
mov
in
ffreep
arpl
enter
daa
adc
call
inc
bnd
jae
push
out
mov
aas
push
xchg
dec
jmp
ret
sbb
jp
orb
and
ficoml
enter
or
pop
add
mov
sub
jmp
stos
pop
aad
xor
mov
mov
jmp
jmp
or
subl
jnp
mov
cli
movsb
sub
xor
or
shrl
das
xchg
xor
test
jg
aam
sub
mov
or
jmp
pop
xor
push
loope
dec
repnz
mov
es
mov
cmp
jno
xchg
dec
xor
std
ret
arpl
in
incb
push
mov
iret
inc
cmp
cmp
xchg
outsl
lret
push
sbb
cmp
cmp
scas
adc
test
add
xlat
pop
jp
mov
fstpt
lea
clc
push
sbb
in
adc
adc
rolb
pop
mov
out
mov
mov
ja
lds
jno
cs
fcmovnbe
cld
sub
add
mov
jo
add
lods
adc
mov
inc
lahf
fstps
pop
adc
jle
leave
sbb
shll
sti
and
jb
leave
pop
push
lods
hlt
mov
sub
add
mov
mov
call
aad
push
imul
scas
insl
bound
mov
cs
cmc
in
notb
push
jae
shlb
scas
sub
or
cli
add
mov
out
fwait
pop
jne
nop
into
shrl
mov
xorl
sub
dec
sub
add
adc
dec
ljmp
pop
test
ds
ficoms
fsubr
cmp
adc
xor
movsl
lahf
arpl
sti
mov
flds
xlat
push
shl
nop
mov
test
cmp
bound
push
mov
insl
fpatan
testl
cmpsb
inc
add
mov
adc
adcl
loope
adc
ret
popf
inc
or
or
inc
mov
push
lods
ret
dec
int
das
adc
and
je
or
mov
out
cltd
add
dec
clc
pop
aad
and
fnstenv
cld
jae
daa
insl
scas
imul
sbb
mov
arpl
add
jle
mov
lock
test
sar
jno
cwtl
lret
and
cld
xchg
les
aam
cmpsb
add
add
xlat
out
out
jns
aam
push
dec
aaa
pop
daa
bound
sbb
or
aad
repz
mov
xchg
jecxz
mov
xor
and
jb
jbe
out
or
jnp
outsb
or
cmpsl
mov
mov
jecxz,pn
stos
leave
xor
insb
cli
lock
sbb
mov
je
mov
jl
test
leave
pop
xor
loop
rcll
insb
cltd
mov
rolb
mov
add
rolb
dec
out
cltd
dec
mov
and
int3
call
cmp
notl
pop
sbb
mov
fnstcw
hlt
pushl
loope
inc
and
lods
or
xchg
pop
inc
loope
and
inc
mov
inc
cmp
lret
hlt
cli
cmp
mov
test
les
hlt
or
mov
dec
mov
or
in
int
cwtl
inc
addr16
lret
cld
inc
inc
shl
shll
mov
add
add
dec
nop
into
inc
pop
push
scas
xchg
mov
insb
inc
push
adc
sbb
insl
addb
and
xchg
in
jo
ss
lods
mov
dec
movsl
dec
inc
outsl
rcl
adcb
in
add
aad
lret
jle
mov
lret
push
and
cmp
and
pop
pop
fwait
sbb
ret
in
pop
jb
jl
mov
mov
sub
push
cwtl
jle
fldl
dec
jne
pushf
or
jmp
lret
aas
fwait
addr16
mov
jg
mov
movsl
std
mov
pop
pop
mov
and
setb
aad
sbb
iret
clc
cmp
add
fstpt
adc
in
mov
movsl
outsb
fdivrl
push
pop
push
sub
sbb
xor
daa
cmp
cli
fldt
lods
jmp
and
sbb
outsl
jecxz
imul
rcl
fwait
repnz
jge
mov
dec
xor
jp
cmp
cltd
inc
push
xchg
lock
addr16
and
outsb
call
mov
cltd
fdivrp
xlat
sub
ret
shrb
sub
adc
dec
xchg
or
xchg
fs
push
lret
sbb
inc
rcrb
dec
int
push
and
es
inc
sub
xchg
pop
jo
mov
xchg
jmp
fisubl
daa
mov
rcr
and
and
in
insb
aam
or
ds
mov
dec
popf
push
xchg
repz
pop
outsb
iret
or
js
nop
cmp
ja
jp
into
push
pushf
mov
fcoml
insb
and
pushf
mov
or
fsubrl
sub
sbb
lock
jg
imul
sub
mov
dec
aam
mov
inc
in
loope
xchg
mov
mov
cwtl
jb
fcompl
lcall
addr16
sbb
cmp
or
pop
sbb
rcr
pop
mov
je
fistps
stos
inc
ljmp
mov
gs
lcall
dec
push
out
mov
rcll
fldl
scas
add
xchg
dec
push
inc
adc
push
jns
mov
ds
pop
ret
aad
push
adc
ljmp
jg
push
sar
lret
lret
rorb
cmp
mov
imul
push
test
enter
pop
and
sbb
popf
arpl
mov
lret
lret
orl
push
xchg
fiaddl
scas
pop
sub
push
sbb
jb
add
jae
cmp
jb
dec
xchg
lret
mov
jo
mov
inc
cmp
out
dec
cmp
adc
xor
xchg
icebp
arpl
push
push
lret
sub
add
das
cs
adc
sbb
push
or
inc
jns
mov
call
dec
cmc
xor
xchg
cmp
adc
jmp
mov
aaa
lock
test
add
adc
or
push
cmpb
adc
xorl
in
adc
pop
cmpb
push
lahf
mov
push
dec
loope
or
add
push
in
dec
dec
inc
daa
pop
cmp
sub
lock
dec
pop
dec
adc
mov
dec
leave
pop
cmp
jg
jge
mov
ja
mov
push
enter
mov
or
pop
adc
mov
adc
push
loop
jg
xor
mov
and
add
adc
imul
inc
sub
negb
fists
in
sbb
mov
pop
mov
cmpsb
ss
fdivr
popa
cmp
mov
orb
push
cmpsb
add
mov
in
jnp
dec
xor
and
jmp
loope
enter
jecxz
cmpsb
cmp
je
pop
popl
push
fmul
mov
dec
fcompl
mov
dec
ret
fidivl
test
sbb
adc
fs
scas
inc
les
jns
lods
jne
loopne
pop
inc
sbb
sub
inc
sub
xor
mov
push
xor
sub
cli
and
or
sbb
cmc
fs
mov
sbb
cmp
mov
les
lret
dec
mov
jmp
cs
and
or
sub
fwait
push
gs
test
mov
push
icebp
add
adc
sahf
mov
and
mov
in
aaa
stos
pop
pop
test
pusha
lret
mov
lcall
jno
mov
jp
sub
jge
or
int3
jle
xchg
mov
dec
cmpsl
aas
sbb
orb
push
call
rorl
mov
rcll
xor
dec
cmp
adc
adc
sbb
outsb
inc
xchg
sbb
fstps
in
add
xlat
out
out
fs
mov
test
insl
cmp
mov
mov
xor
mov
repz
jg
insl
jp
mov
je
outsb
xor
sbb
cmpsl
add
lea
cltd
mov
cli
xchg
cld
out
inc
add
push
pop
jge
imul
cmp
repz
push
stos
cmp
arpl
test
enter
cmp
xchg
hlt
dec
xor
xchg
mov
lcall
mov
imul
mov
inc
fwait
ret
stos
mov
mov
bnd
cmp
data16
xchg
push
xchg
dec
xor
leave
lcall
fdivrl
dec
adc
xchg
stos
int3
sub
jge
ret
jp
adcb
cmpl
lock
int
cmpsb
sbb
jmp
call
jg
insl
stos
jno
movsl
enter
pushf
rcll
addr16
in
adc
mov
mov
sub
adc
push
jp
sub
dec
mov
pop
bound
or
sbb
add
cmp
clc
ret
movsl
lock
mov
or
add
or
aaa
and
mov
imul
xor
jne
cmp
or
popl
loope
or
outsb
sahf
stc
cmp
popf
adc
push
push
cmp
mov
adc
lods
enter
es
xor
sbb
xorb
jge
xor
fidivl
mov
aaa
repnz
add
mov
cmp
ljmp
rorl
jg
cmp
scas
and
push
movsb
popf
mov
sbb
lea
xor
pusha
xchg
inc
movsl
cmp
add
cltd
inc
movsl
pushf
mov
addr16
sub
and
test
std
and
jmp
inc
int
lret
popf
stc
fwait
movsl
jge
pop
in
dec
insb
repnz
repz
jne
dec
lea
ret
or
mov
ss
pop
lea
adc
adc
push
fs
jns
lds
and
out
jnp
cltd
scas
mov
xor
data16
ja
add
or
mov
out
in
add
or
sbb
les
ds
ret
sbb
addb
popl
fdivr
shrl
adc
es
mov
scas
pop
movntps
xor
add
jae
bound
ret
and
cmp
pop
jns
inc
bndldx
popf
es
mov
ss
pop
out
stc
popf
jmp
inc
pop
sbb
or
inc
jmp
cmp
pop
or
jns
in
push
inc
mov
mov
dec
fldl
or
mov
sub
push
inc
mov
mov
or
dec
adc
dec
adc
inc
pusha
or
mov
and
xlat
cmpsl
stos
imul
mov
jmp
in
jge
imul
sub
jmp
scas
sbbl
dec
sub
cmp
das
sbb
sub
lea
stc
mov
push
and
xor
mov
mull
loope
cmp
jmp
push
loop,pn
push
pop
sahf
mov
mov
and
scas
inc
push
mov
xor
in
sbb
adc
movsl
add
push
mul
inc
sbb
pop
or
ds
shrl
cmc
loope
xor
mov
inc
jmp
mov
mov
aam
sbb
jge
and
fdivrs
iret
or
lds
addr16
xor
and
decb
mov
or
ja
or
or
stc
adc
sbbb
mov
bound
cmp
in
leave
leave
xchg
xchg
mov
xorl
jne
cwtl
fcmovu
inc
jp
daa
and
fdivrs
jo
inc
xchg
lret
cld
mov
popl
sub
mov
xor
out
sub
lret
adc
xchg
loop
pop
dec
push
inc
fwait
dec
addr16
xchg
insl
leave
add
cwtl
sbb
jge
dec
inc
insb
push
and
xchg
cli
push
in
xor
mov
repz
push
out
push
pop
cmpb
cltd
loopne
sub
inc
pop
popf
adc
dec
repnz
ficoms
xchg
fs
pop
cmc
ficompl
xchg
adc
fdivl
out
mov
mov
aam
cmc
cmpsb
test
dec
and
call
jnp
iret
mov
pushl
insl
pusha
lea
leave
lds
dec
aad
adc
cmp
and
ja
addr16
jl
lods
sarb
fwait
push
in
repz
data16
push
mov
jae
mov
aam
loope
movsb
int3
inc
or
push
fdivl
les
mov
push
pop
cmp
cmp
jge
dec
test
imul
int
das
cmp
inc
lret
xchg
jne
aad
pop
mov
rclb
js
pop
lret
imul
push
scas
jmp
push
mov
push
adc
sbb
pusha
adc
mov
mov
or
outsl
push
jbe
std
cmp
fsubrs
xchg
sub
cmpsb
cmc
mov
pop
mov
mov
sbb
scas
mov
adcl
out
pop
mov
jl
pop
jge
xchg
jae
inc
popf
das
sub
fld
mov
scas
adc
ljmp
insb
pusha
mov
add
jmp
sub
jmp
mov
scas
testb
mov
and
cli
stos
mov
jle
jo
insl
mov
leave
xor
ja
cmp
mov
cmpsb
xor
out
ss
pop
xchg
andb
mov
pop
into
pusha
cmpsb
cmp
push
into
mov
rol
sbb
in
pop
cmp
ds
push
inc
dec
pop
dec
xor
cmp
icebp
std
call
sbb
and
loope
inc
mov
inc
cltd
ficomps
rcl
add
enter
push
mov
mov
test
out
sbb
aam
icebp
lret
inc
jle
push
adc
insb
sub
repz
inc
popf
lods
sahf
fiaddl
out
xchg
mov
xchg
jecxz
repz
movsl
pop
dec
xchg
add
lcall
cld
stos
jl
mov
loope
dec
xor
das
loopne
je
push
sub
cmp
out
adc
push
subb
jge
into
mov
dec
out
ret
mov
outsl
pop
fiadds
loope
in
dec
xchg
or
xchg
jg
cmp
int
push
cmpsb
pop
std
in
cmp
sahf
pop
mov
in
in
aaa
xchg
adc
mov
movsl
mov
sub
int
or
mov
das
pop
cmp
xor
or
lds
xchg
cmpsl
ljmp
outsb
das
pushl
sbb
fs
adc
lock
and
loopne
mov
hlt
sub
aaa
sbb
sbbl
es
fwait
lahf
js
cmc
or
and
push
rcrl
ret
xchg
icebp
cmp
and
fwait
mov
mov
int3
addr16
ja
and
ljmp
loopne
pop
scas
rcrb
pop
xor
push
dec
inc
in
icebp
sub
jmp
dec
sub
mov
jae
shrb
int3
insl
pop
loope
push
into
pop
test
pop
inc
push
push
add
inc
or
mov
or
lds
sti
sub
fadds
and
cmp
fwait
mov
cs
mov
cs
insb
mov
pop
repz
add
push
ss
mov
xor
sbb
popf
sbb
daa
lods
and
adc
icebp
ror
cmp
adc
bound
addr16
loop
add
xchg
dec
out
mov
mov
mov
add
inc
sbb
int3
sti
xlat
subb
in
pop
mov
test
repz
cmpsl
lret
mov
outsb
lds
mov
push
xchg
stos
mov
cli
jecxz
stos
in
pop
xchg
and
ljmp
jmp
insb
pusha
mov
add
xchg
xchg
xchg
popa
and
rcrl
and
mov
mov
sub
lret
and
int3
sbb
mov
adcl
cmp
cmp
mov
mov
cmp
mov
icebp
jne
push
dec
mov
xchg
aam
testb
inc
mov
mov
cmc
jge
ljmp
pop
bound
ret
mov
out
jnp
push
loop
lods
loopne
cwtl
cld
lods
and
outsb
insb
or
fiadds
xor
cltd
push
pusha
mov
inc
mov
sti
test
loopne
mov
xchg
pop
arpl
mov
mov
jbe
ss
cmc
mov
pop
leave
mov
sub
adc
xlat
dec
cli
shl
nop
mov
add
jl
mov
cli
aad
mov
xchg
pop
stos
sub
fisttpl
xchg
lods
aam
push
xchg
sub
cmc
or
push
lahf
cmpsb
pop
and
inc
xor
test
push
push
push
add
cmp
jne
or
jbe
xchg
fs
loopne
lret
sub
ss
pop
lahf
pop
fmulp
cltd
rcrb
loope
sub
pusha
das
std
mov
push
stos
mov
pop
lea
xchg
in
jle
mov
xchg
fstpl
push
pop
inc
fstl
cld
jnp
mov
jge
mov
addl
xor
outsb
and
loope
adc
adc
pop
mov
jge
lods
test
or
pop
movsl
inc
pusha
pop
pop
inc
pop
jno
and
cmpsl
clc
cltd
cmp
fcomp
dec
fcompl
pop
aaa
rcl
test
out
leave
or
jae
out
jno
push
pop
shrl
and
repnz
lret
aam
out
dec
xchg
shll
jmp
inc
movsl
pop
cmc
cmp
int3
jge
or
je
or
nop
movsb
mov
mov
dec
out
mov
mov
pop
mov
subb
mov
in
push
stc
xchg
mov
sbb
cmpsl
push
mov
cmp
imul
mov
add
xchg
call
out
ret
enter
xlat
mov
sahf
sub
inc
dec
sub
add
data16
push
leave
leave
and
add
andl
call
and
lcall
jmp
je
and
stc
xor
mov
hlt
or
sub
pop
addl
out
lds
sarl
jp
adc
movsl
push
mov
and
inc
adc
in
scas
mov
or
sti
fistps
stc
adc
sbb
ljmp
inc
mov
push
bswap
lahf
xor
mov
xor
cmpsl
imul
fs
or
popa
outsl
out
aam
aam
addl
cmp
xor
mov
add
dec
mov
test
pop
dec
or
lea
cmpsb
fstps
stos
leave
push
cwtl
shrb
ret
sub
jo
fists
cmp
pop
aas
mov
in
dec
inc
cmp
bound
andl
jb
fldenv
stos
test
lods
cmp
jle
aam
mov
xor
scas
pop
mov
and
test
orps
inc
iret
pusha
mov
mov
inc
fsubrl
rorl
sub
aad
jbe
xchg
dec
pop
jae
fsub
dec
fucomp
orb
sub
mov
inc
ss
dec
ja
cmc
mov
push
lret
adc
insb
adc
push
xchg
fldl
jnp
incb
xor
pop
call
fsubr
pop
and
push
fmulp
lods
lods
add
cmp
into
mov
adc
js
xor
cmpsb
pop
or
insb
sub
fldcw
dec
mov
or
push
adc
xchg
stos
push
cmpb
popa
aad
rcrb
pusha
out
test
xchg
andl
cmp
sbb
call
outsb
mov
in
xor
mov
sbb
pop
mov
dec
sbb
cmovb
jle
loope
jnp
gs
lcall
pop
add
xchg
jg
aad
add
cmpb
int3
cmp
ds
sub
mov
out
call
xchg
jecxz
sub
xor
fsub
dec
jmp
outsb
movb
or
pop
push
pop
in
ds
das
push
ds
and
leave
pop
rorb
and
orl
and
icebp
push
sub
loopne
adc
std
leave
xor
add
movsb
xor
cwtl
mov
add
push
loopne
orl
push
inc
mov
lret
mov
and
ljmp
mov
dec
ljmp
sub
sbb
pop
adc
mov
dec
inc
sarb
mov
cmpsb
sbb
cli
mov
aam
data16
aas
test
xor
xchg
pop
dec
sub
leave
sub
insb
jg
shll
pop
aas
dec
mov
xchg
stos
fwait
rorb
outsb
outsb
jno
fisubl
sbb
outsb
clc
ret
data16
outsb
and
inc
pop
cmp
mov
mov
pop
mov
jl
imul
jp
mov
dec
scas
pop
dec
cmc
and
xchg
adc
mov
js
call
push
mov
push
mov
popf
test
inc
repz
adc
jmp
aam
mov
shlb
loopne
push
repz
cmpsl
pushf
mov
push
mov
xchg
sub
xchg
or
push
mov
jmp
inc
loope
push
out
arpl
xor
push
enter
or
jae
cmc
nop
and
sahf
push
mov
fwait
adc
cs
lock
xchg
pop
jecxz
or
mov
push
lods
ja
xchg
scas
push
cs
add
dec
mov
das
pop
lea
lret
cmp
xchg
addr16
fnsave
push
mov
lock
xchg
in
out
inc
and
sub
sbb
mov
dec
mov
pop
loop
jns
inc
inc
inc
mov
adc
bsr
add
ja
pop
xor
add
in
mov
add
add
ljmp
call
outsb
xchg
fsubrs
int3
loop
out
sbb
fwait
jns
xchg
mov
sti
xchg
lds
fmuls
push
popf
mov
mov
loopne
mov
movb
icebp
ljmp
fisttpll
test
or
jl
cmp
push
shlb
pop
inc
fimull
shrl
and
xchg
aaa
out
jnp
leave
dec
push
into
inc
ds
pusha
push
sub
or
je
inc
std
addl
ja
mov
lock
jl
cmp
div
cltd
sbb
sbb
test
in
lea
adc
push
mov
orb
mov
and
bound
pop
pushf
sbb
test
pop
shll
add
adc
or
dec
adc
lcall
lock
insl
int3
pop
xchg
push
xchg
adc
push
and
movsb
in
fst
aas
fmull
mov
adc
dec
or
xor
jo
subb
mov
mov
cwtl
dec
test
cltd
jge
pop
inc
ret
dec
jb
sbb
xor
xor
mov
xchg
rcll
mov
lcall
ret
jno
jge
mov
ljmp
xchg
pop
fs
arpl
adc
int
mov
mov
and
jmp
adc
xchg
lods
push
cmp
push
lret
pop
sti
jg
daa
adc
sbb
sbb
mov
mov
lock
mov
add
fwait
test
pop
dec
cmp
mov
xchg
jnp
ljmp
aam
fadds
or
test
inc
jp
xchg
ret
je
rclb
dec
push
insl
cmp
or
addr16
pop
mov
cmp
mov
enter
push
cmp
aam
shl
shl
test
pop
and
fwait
push
adc
push
xor
mov
jmp
add
mov
test
mov
dec
in
push
arpl
rcrl
leave
xchg
mov
and
inc
mov
out
dec
loope
jnp
or
xor
sub
add
cmp
fldenv
ret
dec
fcmovnbe
dec
mov
psrlw
lret
pop
pop
imul
dec
xor
leave
mov
dec
mov
push
in
inc
mov
ror
jne
jnp
test
jne
pop
add
push
psadbw
or
mov
ja
or
jmp
jae
es
shlb
test
xchg
arpl
mov
mov
sub
mov
jecxz
enter
xchg
mov
arpl
mov
insb
fidivrs
in
mov
cmp
inc
les
jmp
push
mov
xchg
mov
jge
pop
aam
push
aaa
sub
push
nop
mov
imul
jmp
or
test
mov
sbb
in
add
cmpsb
cwtl
mov
sti
cmp
loop
test
mov
arpl
xor
sbb
dec
fildl
dec
mov
jbe
mov
pop
les
mov
mov
fldt
test
ss
or
push
adc
dec
pusha
cmp
inc
in
xchg
gs
icebp
cmpsl
and
rcrb
stos
inc
mov
sbb
leave
pop
xor
loope
lahf
dec
add
dec
inc
hlt
xlat
jno
test
in
add
xchg
int3
mov
push
xor
fisubl
lds
and
dec
cmc
lods
inc
loopne
les
out
sub
lcall
push
in
jb
fcoms
les
inc
push
enter
mov
or
mov
leave
leave
or
xchg
imul
or
aam
cmp
mov
daa
bound
inc
xchg
mov
stos
add
fucomp
xchg
add
in
inc
andl
cmp
push
mov
xchg
testb
inc
mov
inc
leave
enter
jp
popf
rolb
test
adc
inc
popl
je
cmc
int
or
push
stos
test
mov
mov
xlat
cltd
idivl
fidivrl
jp
lcall
fisubs
push
jnp
sbb
add
push
and
pop
loope
add
jp
mov
imul
push
das
aas
mov
push
sahf
lods
xchg
push
mov
clc
mov
push
pop
mov
test
jg
pop
dec
mov
notl
push
and
inc
aad
cmp
aad
xchg
pop
dec
pop
push
fistpll
mov
pop
pop
sbb
mov
xchg
sub
mov
push
jmp
jb
ficomps
xor
mov
mov
push
test
cli
inc
pushf
sbb
negl
out
push
dec
mov
scas
push
jno
xchg
inc
or
xor
mov
inc
or
aaa
push
shrb
inc
aam
inc
test
xchg
nop
lods
subb
add
sub
or
outsl
cmp
loop
hlt
sbb
loopne
jge
push
stos
pop
push
daa
stc
push
xchg
aad
sub
mov
xor
mov
mov
jmp
xchg
lods
inc
adc
xchg
les
out
out
xchg
push
jge
adc
cmp
add
shrl
inc
out
jb
lods
sahf
mov
jbe
mov
lret
imul
push
inc
in
or
mov
sbb
in
shll
out
push
ret
aam
pop
stos
clc
addr16
int
jl
mov
jns
addr16
jae
loopne
sbb
mov
jp
es
out
mov
and
cwtl
add
jle
adc
enter
out
jmp
add
dec
ss
int
mov
cld
inc
dec
outsl
andb
sahf
mov
sbb
xchg
jae
add
int
iret
sbb
and
mov
fnstsw
sti
test
jmp
mov
es
in
pop
iret
xor
test
out
test
dec
mov
ret
push
ds
in
cmc
lret
cmp
int
xchg
fs
jns
add
xchg
daa
and
xor
inc
pusha
add
inc
popa
push
outsl
xor
loope
pop
std
pop
cmp
lds
sub
std
stos
pushf
mov
frstor
out
aam
xor
xor
dec
jmp
out
sub
repz
cli
jb
aam
and
loopne
subb
fnstcw
stos
jns
sbb
sbbl
call
fsubs
scas
add
repz
gs
dec
fists
dec
xor
repz
pop
and
sbb
mov
movsb
mov
adc
faddl
test
mov
cld
jmp
fistpl
cmpsb
daa
jnp
jl
inc
cmp
adc
leave
jmp
add
pop
in
out
ficompl
pop
test
out
cli
testb
push
mov
lea
loop
and
fcomi
dec
mov
xchg
add
in
cmp
or
out
mov
out
cs
sub
cmp
push
lcall
pop
add
lret
int
sbb
mov
inc
jae
mov
push
icebp
inc
lock
bnd
loopne
lcall
sbb
call
dec
or
xor
jle
or
pop
sbb
arpl
movsl
xor
fsubs
je
cltd
cmp
cmp
xor
xor
jp
in
shr
dec
sar
pop
imul
outsl
inc
ret
outsb
push
lahf
mov
lret
cmp
xchg
dec
pop
arpl
test
aaa
and
lea
push
adc
mov
and
mov
fwait
mov
dec
cmpsb
mov
out
in
addr16
ja
popa
imul
addr16
cmp
imul
mov
notl
xchg
and
add
mov
push
mov
cwtl
in
xchg
mov
pop
mov
lods
daa
push
fildll
out
icebp
fsubrl
inc
test
aad
stos
xor
jnp
or
pusha
test
dec
pop
inc
xchg
mov
scas
xchg
fcoms
call
pop
je
movsl
bound
sti
sbb
xchg
inc
pop
mov
or
mov
and
stc
outsl
das
or
jnp
cmp
nop
aam
mov
imul
popa
mov
in
push
cmp
lahf
xchg
dec
jno
fnsave
subl
imull
mov
adc
js
add
dec
bnd
pop
xlat
fs
and
xor
ja
sub
ljmp
xchg
sar
cs
std
jg
mov
mov
sub
movsl
lcall
inc
inc
dec
xchg
jbe
or
pop
xor
cmc
and
xchg
lahf
mov
cs
arpl
sbb
lock
xchg
dec
or
stos
adc
jecxz
hlt
pop
arpl
out
push
imul
inc
sarb
add
jb
push
pop
fstl
movsb
cltd
push
lods
dec
sti
pop
xchg
outsb
jecxz
cmp
leave
mov
sbb
insb
xchg
push
sti
sbb
sar
jp
mov
popa
cmpsl
jp
adc
pop
es
adc
mov
sub
das
mov
punpckhbw
repz
and
jnp
inc
inc
push
out
add
or
push
sbbl
add
mov
pop
add
mov
lods
mov
pop
lahf
dec
or
hlt
sar
cmovae
mov
sbb
cmpl
dec
addr16
cmpsl
ljmp
call
pop
pop
fsubs
loope
push
fmull
rcrl
dec
dec
push
mull
stc
bound
pop
sub
fwait
rclb
or
xchg
in
gs
mov
mov
test
inc
or
cmp
xchg
xchg
loope
pop
xor
imul
inc
inc
inc
scas
jecxz
push
stc
ret
jmp
je
and
jb
in
jl
mov
leave
stos
jp
adc
rcll
mov
xor
call
pop
xchg
outsl
repz
inc
cmp
enter
jbe
sahf
clc
push
hlt
mov
mov
mov
movsl
jne
inc
and
add
es
jecxz
sbb
cmp
int3
dec
and
into
adc
mov
or
sub
mov
test
xor
pop
leave
ljmp
pop
pop
negb
inc
into
pop
sub
jmp
adc
aas
cwtl
lret
andl
pop
jle
mov
xchg
mov
pop
dec
adc
inc
jno
lock
rorb
sbb
daa
push
jne
decb
xchg
or
mov
movsl
sub
and
inc
xchg
push
and
ds
pop
enter
mov
fsubrl
cmp
icebp
sub
inc
mov
mov
clc
add
mov
jecxz
mov
cmc
pop
xor
xor
or
dec
pop
push
imul
jns
xor
out
adc
ss
imul
and
rolb
mov
call
fsub
lea
cmpsl
jbe
add
fmuls
xorl
int
aam
sub
xor
inc
cmc
mov
shlb
aas
leave
jae
cs
inc
inc
cmp
sub
inc
call
sbb
mov
fistl
push
push
push
call
dec
and
dec
mov
sub
sub
mov
imul
fcoms
mov
iret
cs
out
mov
popa
daa
push
push
or
xchg
dec
ss
and
or
imul
pop
cmc
inc
out
test
sbb
dec
jp
test
stos
ss
sbb
cmp
add
inc
test
out
loope
lret
outsb
adc
pop
pop
inc
mov
mov
jmp
in
popf
hlt
lret
or
jnp
sbb
data16
cld
mov
sbb
dec
pop
adc
ret
call
loop
stos
mov
mov
inc
jge
add
add
pop
push
cmpsl
or
and
divb
test
call
xchg
jbe
mov
pop
xchg
ds
jbe
jl
notl
sti
pop
mov
push
idivb
ret
loop
aas
shll
fsts
push
pusha
outsb
or
ja
adc
bound
lods
add
dec
cmp
mov
adc
test
sub
cwtl
jmp
mov
dec
sbb
dec
sbb
inc
dec
cmpsb
jae
add
mov
xchg
das
fadds
mov
inc
jg
popa
fisubl
ljmp
loopne
in
xor
xchg
xchg
jmp
sysexit
mov
jnp
ljmp
jg
shlb
or
mov
lret
call
in
popf
fs
popf
inc
xchg
and
ljmp
mov
ret
insl
mov
pushf
test
call
addr16
call
push
or
sub
sbb
dec
add
mov
lret
cmp
sbb
punpckldq
int3
or
les
nop
lods
mov
push
lea
daa
leave
cmc
insl
mov
mov
xchg
push
ljmp
push
mov
xchg
enter
cmpsl
jg
xor
jp
xor
pop
sarb
xchg
movsb
pop
push
xchg
pop
sub
xchg
movntq
jp
icebp
cmpsl
cmp
or
inc
enter
adc
and
ret
mov
mov
popa
push
push
push
movsl
or
out
or
mov
aas
push
sub
es
dec
shl
cs
cli
fldt
jnp
cmpsl
mov
outsb
iret
ds
mov
les
cmp
repnz
mov
mov
out
inc
movsl
mov
movsb
les
adc
jecxz
and
aad
into
in
sti
dec
inc
nop
add
jmp
ja
add
aaa
es
out
gs
test
in
scas
movsl
pop
mov
xchg
je
or
pop
pop
dec
fisubrl
sahf
leave
scas
cmp
lcall
inc
and
cltd
gs
imul
add
bound
or
aam
rcrl
rolb
aam
pop
cmp
sub
sarl
in
lea
dec
sub
mov
cmpsb
pop
mov
mov
out
dec
lret
push
ret
or
push
inc
cmp
and
addr16
push
ja
lea
or
negl
mov
cmpb
jmp
scas
and
stos
push
mov
xchg
rol
xor
dec
fcmovnb
dec
xor
test
rol
dec
jle
in
push
fwait
xor
xor
mov
jbe
js
jmp
outsb
ret
or
les
inc
or
pop
or
std
jmp
push
insl
imul
loopne
rcrb
lret
pop
xor
outsb
test
scas
mov
rolb
add
dec
xor
in
out
inc
xor
insb
pushf
ljmp
icebp
add
call
jne
loope
push
jnp
mov
add
xor
push
cltd
mov
and
push
jg
inc
cld
hlt
pop
enter
dec
lcall
cmp
fnstcw
mov
test
add
insb
data16
in
imul
inc
xlat
or
jg
mov
psadbw
arpl
xor
or
dec
and
pop
xchg
fiaddl
sbb
cmp
mov
aaa
push
scas
int
fwait
mov
fiadds
lods
jnp
lea
mov
fnsave
dec
sub
arpl
jb
fs
ljmp
jnp
scas
rcr
std
cwtl
lds
hlt
movsl
lret
jns
cmp
rcl
mov
pusha
js
ja
jbe
fidivl
cwtl
sbbb
add
lret
pop
sbb
push
add
movsb
pop
sbbl
adc
test
arpl
sbb
add
jl
xor
fs
mov
or
gs
fs
mov
cs
xor
jae
cmpsl
pushf
inc
rcll
sub
das
mov
lods
sahf
in
es
and
cmc
test
add
dec
xor
cmpsb
or
in
rol
push
int
dec
rorl
adc
jmp
insl
test
fbld
es
lods
fidivl
hlt
xor
ret
push
shll
imul
orb
int3
test
test
mov
adc
fbstp
call
sti
sbb
data16
fbstp
cmpsl
outsl
arpl
push
test
mov
sub
cmp
inc
nop
decb
sub
cs
xor
aas
imul
loop
xor
fidivrl
inc
sub
xor
push
lret
and
jmp
pop
call
sbb
int3
out
scas
jg
flds
pushf
repz
mov
xor
iret
jmp
jae
jecxz
les
sub
sub
popl
imul
or
test
add
jnp
ret
inc
cmp
gs
fwait
sbb
je
jp
insl
das
frstor
fmull
adc
xchg
lock
push
mov
iret
int
xor
repz
pop
dec
ljmp
das
add
adc
lds
xor
sbb
divb
or
fs
movsl
push
xchg
mov
cmp
cltd
sbb
imul
mov
pop
add
lcall
sbb
cmpsb
rolb
lcall
fwait
or
nop
das
and
ret
pop
mov
movsb
inc
stos
cmp
adc
push
int
sub
push
stos
mov
pop
lds
jp
sub
dec
pop
jno
add
or
cmp
stos
ss
scas
ja
push
sbb
sub
rcrb
push
iret
imul
pop
or
jno
mov
sbb
leave
out
or
add
aas
out
sbb
fbld
xor
mov
cltd
mov
inc
sbb
out
jle
pusha
sti
cmp
cmpsb
leave
imulb
xchg
imul
shlb
movsb
add
fs
sub
jmp
push
dec
in
in
aas
push
out
shll
mov
mov
jbe
rorl
xorb
jns
inc
inc
add
ja
insb
xchg
fists
xchg
int
push
mov
add
sti
stos
adc
clc
call
push
test
adc
adc
dec
xchg
icebp
dec
push
das
call
scas
lcall
dec
mov
lret
rcr
std
pop
clc
out
adc
push
ficomps
dec
aam
push
rcrb
std
divl
inc
icebp
and
mov
mov
movsl
cld
jmp
out
cmp
pop
ja
fldenv
sbbb
int
dec
and
out
gs
popa
dec
push
cs
push
rol
cmc
stc
or
pushf
or
mov
lea
aad
cmp
mov
pop
xchg
aas
filds
movsl
loop
shrl
hlt
mov
push
stos
mov
pop
stos
fcmovnbe
cmpsl
fcmove
sub
stc
sahf
dec
enter
or
push
popf
push
fstpl
cmp
mov
jle
in
mov
adcb
push
sbb
dec
mov
sub
bound
inc
pop
push
aad
lods
subb
mov
cld
int3
lahf
inc
and
loopne
push
mov
mov
sbb
insl
scas
arpl
mov
out
push
inc
adc
fwait
inc
push
add
es
lock
test
ror
mov
outsl
cmp
leave
adc
jno
xchg
fdivr
xor
ds
push
imul
popl
add
js
test
push
out
out
test
jmp
push
xchg
andl
divb
pop
outsb
and
add
mov
and
fwait
mov
mov
pop
outsl
lcall
lcall
push
jnp
xchg
lret
mov
gs
pop
lods
outsb
fmull
mov
dec
ret
sbb
inc
push
cwtl
and
pushf
cmpsl
jl
fstpl
orb
daa
mov
dec
hlt
jl
adc
push
sbb
aad
jecxz
push
adc
and
dec
xchg
cli
mov
daa
inc
xlat
adc
pop
fxch
rolb
lcall
add
xchg
mov
sbb
push
outsl
xchg
in
and
fcomps
inc
push
loopne
push
shlb
std
xchg
inc
stos
xchg
lret
sbb
push
sub
fwait
push
mov
jl
mov
jo
aas
pop
lock
mov
push
push
lcall
pop
ss
adc
lock
and
fcoms
lret
js
sbb
sbb
cmpsb
jecxz
or
ret
test
jmp
in
adc
aaa
fbstp
add
sbb
sub
push
and
scas
inc
push
jb
test
xor
jns
mov
lret
cmpl
inc
jecxz
xchg
daa
and
mov
jmp
fistl
dec
sti
test
and
fcmovnb
faddp
mov
fs
gs
mov
aam
inc
lret
clc
movl
xor
cmp
jnp
aam
jmp
shrl
mov
or
icebp
jnp
ljmp
xchg
shlb
outsb
inc
push
in
mov
repz
pop
adc
jo
jl
pmaxub
aam
lret
xchg
xchg
into
jecxz
jne
popa
push
push
cltd
pusha
es
jmp
mov
mov
aas
push
push
sbb
pop
fnstenv
inc
mov
and
jne
pop
adc
sub
movsb
lea
div
into
jnp
shl
ja
xor
and
jge
int
iret
pop
xchg
int3
movsl
and
repnz
loop
mov
push
xor
movsb
fstpt
jb
xchg
lahf
in
lret
mov
pop
xor
jbe
out
ds
push
lahf
das
mov
xchg
sahf
push
cmp
fcompl
ljmp
jnp
hlt
pusha
or
cmp
clc
out
adc
jo
inc
mov
jmp
call
adc
sub
ljmp
or
in
cmpl
mov
imul
and
and
mov
mov
jle
subb
mov
jle
add
stos
scas
mov
scas
in
xchg
sub
adc
xchg
mov
test
sbb
push
iret
sub
int3
cmp
lcall
jg
xor
mov
loop
mov
sbb
push
dec
cltd
sbb
rclb
or
dec
push
loop
test
sbb
lcall
insl
xor
cmp
call
push
mov
iret
ret
sbb
mov
and
leave
leave
loopne
mov
mov
inc
int3
push
stos
or
dec
outsl
inc
adc
pop
push
shrb
pop
cmp
fs
frstor
adc
jmp
loopne
outsl
cmp
enter
or
insb
repz
cmp
jo
in
les
mov
fstpt
jns
jp
mov
mov
mov
pop
pop
mov
adc
xor
xchg
cli
lea
push
mov
sti
test
sarb
cmp
dec
push
xchg
out
mov
pop
inc
iret
xor
push
adc
add
aam
stos
mov
arpl
mov
xor
sub
fisttpl
hlt
imul
insl
jl
rcrb
bswap
pop
and
sub
push
les
pop
add
repnz
or
push
and
mov
adc
ret
addl
pop
ficomps
jns
add
add
dec
push
sbbb
xchg
add
negl
mov
mov
pop
in
mov
loope
pop
in
push
inc
cld
xor
lcall
cmp
mulb
push
cmpsl
push
lds
out
inc
mov
mov
popf
xchg
outsl
jb
popf
mov
mov
sub
pop
mov
in
and
mov
and
mov
fsub
mov
lds
loope
mov
push
ds
int
inc
pop
test
in
mov
xchg
or
jecxz
outsl
mov
int3
dec
aad
and
mov
dec
pop
cmp
aas
push
popf
push
mov
cmpb
xchg
inc
jb
sub
adc
push
inc
mov
xchg
movsl
out
pop
inc
add
adc
mov
lods
lcall
in
or
push
mov
dec
mov
sbb
mov
push
adc
or
call
lret
sbb
sub
xchg
cmp
fs
jp
adcb
leave
jne
shl
mov
out
pusha
dec
mov
jle
pop
lret
push
es
out
pop
fnsave
jmp
notb
test
pop
mov
loope
jae
movsl
pop
or
jl
shrb
add
cwtl
xchg
sbb
add
cmovb
mov
cltd
in
inc
dec
push
iret
or
xchg
jnp
test
xor
push
xor
scas
inc
jp
xchg
adc
dec
push
rolb
cs
push
sub
setae
lret
nop
scas
fistpll
pop
pop
ds
iret
je
mov
sbb
xrelease
loope
sbb
les
jae
pop
pop
add
jo
xlat
jmp
jge
mov
xor
icebp
out
push
addr16
loopne
cmp
fiaddl
out
and
jo
negb
lcall
loopne
insl
inc
aad
cmp
mov
fstpl
addr16
xlat
mov
dec
dec
jbe
in
cltd
out
aaa
push
xchg
fisttpll
ds
and
jmp
data16
cmp
cmp
jecxz
aam
popa
in
testb
fwait
mov
cmp
or
sar
adcl
adc
inc
pop
xchg
sbb
xchg
mov
in
mov
lock
inc
fdivr
scas
and
jl
int3
dec
cltd
xchg
stos
xchg
pop
lahf
aam
and
xor
fcomp
dec
iret
jecxz
xchg
pop
adc
add
mov
xchg
mov
mull
xor
aas
lds
test
pop
dec
and
sbb
loop
inc
sahf
dec
push
stc
push
mov
dec
or
gs
push
addr16
cmp
mov
jge
mov
scas
add
xchg
mov
vmovupd
cmc
mov
aas
and
pop
cli
dec
ljmp
adc
or
lock
frstor
movsb
xchg
test
xor
jb
mov
insl
pushf
push
call
xor
ret
push
sti
out
push
fdiv
sti
test
pusha
mov
addr16
cmc
aas
fwait
lds
aaa
mov
mov
sbb
adc
mov
inc
stos
add
and
addr16
outsb
repnz
or
push
pusha
cmp
or
push
out
push
sub
sahf
jmp
sub
add
sub
adc
ds
cli
or
rcrl
scas
or
fmull
popa
shrl
int3
gs
leave
gs
leave
xor
cmp
popf
push
jp
jl
in
fsts
jl
es
sarl
push
test
fisubl
xchg
je
xorb
push
sbb
sahf
inc
or
and
insb
inc
fcomps
imul
sub
and
mov
cmc
mov
lods
cpuid
fldcw
pop
adcb
sbb
aas
divb
jl
js
rclb
sahf
mov
clc
enter
es
test
daa
sbbb
in
test
leave
lods
sbb
xchg
mov
test
cmp
mov
test
rolb
lea
jb
shrl
jmp
rclb
iret
jmp
insl
pusha
sub
xchg
ds
aas
mov
sar
mov
or
imul
jbe
mov
cmp
ret
mov
into
push
xor
mov
cli
jne
pop
xchg
ss
push
sbb
push
mov
mov
jecxz
call
cli
in
jmp
or
jae
ret
aad
insb
push
jle
jns
mov
addr16
adc
cmp
test
les
sbb
rolb
inc
xchg
sbb
addr16
into
movsb
fbstp
subl
and
maskmovq
divl
outsl
xor
mov
enter
pop
fbstp
mov
adc
xchg
dec
fsub
xor
adc
pop
in
mov
leave
mov
rcr
call
adc
ror
aad
daa
fwait
test
xor
mov
insl
loop
dec
inc
stc
push
leave
daa
in
f2xm1
inc
sti
mov
repnz
xchg
push
mov
sbb
aaa
mov
arpl
pusha
ret
cmp
stos
std
fcoms
pop
xchg
sti
jb
and
dec
push
pop
ss
mov
je
pop
pop
push
pop
jbe
cmpsb
outsb
jmp
jns
pop
sbb
lahf
std
xor
fdivrp
dec
inc
inc
movsl
ret
ljmp
push
aas
inc
test
es
add
les
or
jb
adc
or
jbe
cmc
popa
mov
std
dec
sbb
xor
daa
fwait
je
cmpb
inc
shlb
sti
test
lds
xlat
fdivrl
sarb
insb
sub
mov
xchg
xchg
stos
popa
sub
xor
xchg
sarl
pop
xor
mov
cmp
adc
dec
inc
jg
jo
mov
jecxz
aas
sar
std
rcrb
rclb
ljmp
js
iret
mov
les
xchg
xchg
mov
sub
adc
mov
hlt
cmc
jne
lret
jg
pop
das
pop
add
nop
push
nop
popf
lods
or
mov
sbb
ljmp
mov
js
push
inc
dec
test
push
imul
mov
iret
cs
jecxz
subl
push
jne
pusha
add
cmp
or
sbb
test
sbb
cmp
enter
movsl
out
shll
mov
call
mov
int
test
dec
test
mov
mov
scas
dec
mov
mov
cmp
mov
or
xchg
mov
push
push
sub
scas
push
das
insl
xchg
mov
mov
scas
dec
out
jne
dec
test
push
loopne
inc
popf
cmp
push
out
jno
jnp
insl
pop
adc
divb
loope
sub
xchg
hlt
sub
dec
jns
test
add
inc
lahf
push
mov
pop
test
add
xchg
imul
adc
push
cmp
int
adc
outsb
push
xchg
sbb
or
test
out
outsb
push
cmp
int3
and
jbe
dec
aad
add
mov
addl
lock
lock
std
pop
push
stos
adc
mov
repz
push
outsb
roll
cmpsl
into
clc
dec
pop
cmp
push
cmp
addl
pop
nop/reserved
pop
adc
sub
notb
stc
mov
add
jg
incb
sbbl
test
pop
sbb
xor
jns
inc
fcmovb
lret
clc
ja
int3
inc
int
mov
lds
xor
lock
adcb
jmp
movsb
xchg
bound
inc
mov
mov
cmp
icebp
inc
mov
pop
rclb
adc
inc
inc
hlt
add
aaa
push
jno
add
mov
pop
inc
inc
scas
mov
pushf
mov
ljmp
adc
cltd
adc
xchg
jo
inc
mov
pop
pop
push
add
add
insb
inc
pop
pop
and
push
sarl
jecxz
jbe
out
adc
into
fisubl
xorb
adc
hlt
test
mov
stos
xor
aad
add
arpl
movsl
jl
loopne
adc
loope
lea
mov
inc
pusha
xor
inc
ret
outsb
fdivrs
sub
lds
insl
fwait
aad
xchg
jmp
pop
dec
ja
fidivs
aad
in
inc
mov
pop
mov
push
xchg
cmp
clc
jne
pop
sub
aaa
enter
and
rorl
or
add
hlt
paddb
pop
push
mov
push
adc
mov
rcll
mov
cmp
popa
call
sub
push
sbbb
es
testb
sub
lret
inc
lahf
xor
insb
mov
iret
mov
mov
subb
inc
pop
cltd
out
inc
pop
out
jb
outsb
scas
xlat
movsl
pop
outsb
mov
sub
cmpsl
push
inc
insl
pop
sub
rcrl
inc
aas
in
xor
xor
leave
adc
push
mov
ss
inc
mov
lcall
pop
inc
cmpsb
incb
cltd
test
in
ret
icebp
lahf
xchg
je
pop
push
sbb
jecxz
fnstcw
pop
in
aad
cmpsl
loop
xchg
pop
js
sbb
cmp
mov
xchg
iret
je
inc
push
aam
cvtps2pi
pop
xlat
repnz
mov
test
ja
js
aad
jl
arpl
ja
scas
lods
xchg
jae
pop
outsb
lds
jp
gs
arpl
decb
imul
or
test
roll
mov
lea
mov
push
and
dec
push
adc
sbb
cwtl
aas
dec
dec
jnp
mov
or
mov
out
pop
mov
in
xchg
cli
nop
lods
xor
lea
inc
cwtl
fstl
cmp
pop
dec
sbb
in
movsb
int
imulb
adc
scas
ljmp
jmp
sbb
out
mov
sub
test
adcl
int3
jnp
in
cmp
xchg
bound
fucomip
call
fildll
stos
lcall
or
mov
push
fstpl
adc
jb
push
sahf
cmpsb
vmovddup
push
lret
addr16
repnz
add
in
push
lods
cmp
int3
inc
stc
jge
cmp
mov
data16
pop
mov
adc
xchg
std
dec
mov
mov
sub
pop
and
dec
cmpsb
lahf
xorb
das
loope
bound
push
jmp
adc
push
mov
xchg
lcall
push
or
push
test
inc
les
cld
push
inc
movsb
ss
test
mov
pushf
ret
cmc
outsl
shlb
or
xchg
jne
lret
jnp
add
cmpsb
in
clc
lds
test
test
and
cmp
mov
mov
je
xchg
test
mov
xchg
aas
xor
cmp
out
cmc
add
mov
xchg
push
pop
addr16
jge
je
mov
jmp
push
inc
push
out
adc
popa
mov
out
mov
out
fucom
push
clc
rcll
mov
or
into
test
or
or
mov
push
mov
bound
insl
loop
inc
lret
jne
subl
in
push
dec
cmp
imul
fwait
test
and
sahf
push
lock
out
out
test
jge
in
jb
int
push
cltd
pop
cmpsb
mov
movsb
xchg
adc
scas
ret
ret
jb
aam
jnp
mov
sbb
das
inc
or
mov
push
cmp
in
loop
leave
push
cmc
sbb
add
out
sub
and
fldl
xor
mov
mov
add
mov
xor
das
dec
scas
jl
inc
enter
push
test
add
sub
sub
dec
sbb
ret
cmp
xchg
xchg
fwait
dec
stos
ss
cs
js
insl
mov
fcompl
lret
sbb
test
stos
jb
or
loopne
shrl
lds
mov
insl
xchg
mov
fsubs
or
and
xchg
call
dec
ret
sub
iret
in
test
xchg
mov
cmpb
cmp
jb
lcall
addr16
ret
sahf
push
sbb
adc
hlt
pop
jp
or
addr16
or
adc
int
imul
push
in
dec
in
cmpsl
call
jmp
mov
adc
and
ljmp
add
add
fstl
dec
cmp
scas
pop
loop
mov
sbb
popa
js
mov
fmull
lret
icebp
inc
xchg
jns
call
daa
add
test
cmp
xchg
cmp
aam
jbe
mov
mov
ds
sti
int
rclb
and
push
pop
adc
pop
or
rorl
jae
add
dec
xchg
adc
popf
insb
jecxz
test
fwait
test
out
test
fstpt
sbb
ret
push
icebp
lea
insb
adc
outsl
pop
cmp
subl
push
push
xchg
mov
dec
outsb
mov
mov
sbb
dec
adc
scas
ret
aas
stos
sub
cmpsb
loopne
iret
jg
xor
mov
pop
or
inc
cltd
repnz
cmp
push
push
cmp
and
scas
jns
subb
ss
subl
sbb
cwtl
jne
mov
xchg
xor
adc
cltd
pop
sbb
movsl
pop
push
shlb
ret
jno
mov
popf
jl
cld
xlat
or
test
mov
leave
inc
pop
and
xchg
sti
fcoml
pop
xor
es
mov
cmp
mov
cmp
imul
lcall
flds
rorl
jge
in
jnp
mov
mov
iret
insb
dec
dec
roll
imul
and
push
mov
fnstcw
dec
sarl
sub
das
lea
loope
or
pop
jecxz
cwtl
push
cmpsl
mov
add
fildll
rcr
xlat
lods
push
repnz
jmp
mov
test
rclb
fisubrs
lahf
shlb
dec
ret
and
xorb
mov
cltd
sahf
test
imul
add
stc
pop
sarl
movsl
mov
pop
bound
fwait
mov
mov
loop
pop
mov
cmp
jl
stos
sub
sbb
jnp
je
xchg
imul
addb
cmpsb
pop
pop
pop
leave
mov
loop
dec
js
xchg
cmc
dec
lea
lret
pop
arpl
sub
loopne
jne
jb
test
and
aas
push
inc
rorb
pop
jae
and
xor
mov
lret
and
outsl
dec
mov
sub
jg
pcmpeqw
in
mov
mov
adcb
or
pop
sub
hlt
sbb
rcl
adc
push
mov
into
addb
push
or
movsl
push
or
sub
inc
dec
fbld
pushf
xchg
push
sbb
fidivrl
lea
mov
or
jae
xchg
inc
jmp
flds
mov
lret
ja
cmpsl
jnp
and
ljmp
lds
sub
sub
dec
inc
fdivs
popl
jmp
filds
cmc
test
or
cmp
cmpsl
pushl
pop
in
jb
cmp
sub
pushl
mov
xor
pop
pop
mov
push
push
addl
sbb
mov
lcall
xchg
movsb
pop
addr16
les
repnz
movsl
mov
jb
xlat
sbb
xor
add
pop
jnp
pusha
push
add
mov
xlat
cs
dec
sbbb
into
fistpll
in
ds
mov
mov
std
pop
jmp
push
fisubrl
cmpsb
cld
push
aam
in
push
test
adc
sahf
adc
xchg
bound
sbb
cmc
fdivrl
mov
loope
jno
mov
and
mov
lods
jle
call
mov
stc
xchg
cmp
adc
ret
test
shlb
xchg
xchg
aaa
mov
jae
adc
push
or
test
mov
test
sub
test
lret
decb
push
sub
in
aas
sbb
pop
inc
mov
sub
inc
xor
and
incl
add
cmc
cmp
push
lods
inc
adc
jb
scas
loope
pop
sbb
jecxz
into
cli
mov
or
mov
adc
xchg
xchg
adc
call
rolb
or
mov
insb
mov
lret
cmc
push
lods
fldcw
mov
fcompl
pop
dec
pop
shlb
dec
pop
sbb
xchg
cmc
push
mov
sbb
dec
pop
pop
jne
outsb
mov
fcoms
pop
or
ds
or
push
xchg
push
test
jnp
insl
push
and
push
xor
sbb
data16
mov
xchg
jno
push
roll
int3
cmp
clc
outsl
adc
pop
mov
pop
mov
sbb
cmp
push
jb
adc
jae
neg
cmpsb
imul
add
lcall
aas
mov
push
ret
fucomip
sbb
dec
adc
in
and
xor
movsb
push
fcomps
or
in
inc
sbb
lcall
push
cmpsl
dec
mov
lea
aam
or
sbb
jecxz
jb
cmc
loop
xor
mov
mov
jmp
ret
test
dec
cmc
xchg
jns
add
mov
rcrb
cmovle
adc
or
xchg
cld
cs
leave
daa
sub
sbb
xchg
nop
sbb
pop
sub
imul
jo
mov
xchg
add
pop
push
gs
add
adcl
outsb
scas
push
popa
push
mov
cwtl
dec
add
lret
xor
xchg
repnz
pushf
xchg
or
xchg
or
xchg
out
iret
inc
mov
and
xchg
ss
bound
pop
jae
stc
movzbl
cli
addl
push
mov
mov
xor
gs
sbb
xor
ficomps
fadd
jge
mov
shr
jo
repnz
cld
imull
leave
test
mov
dec
fcmovnu
xor
add
arpl
inc
shrb
lods
or
inc
add
shlb
fsub
mov
loopne
mov
lds
lcall
inc
je
and
popa
stos
dec
inc
sub
jne
lea
mov
push
add
clc
xor
or
aas
push
jns
xchg
mov
mov
das
pop
sub
fstl
mov
in
sub
add
jg
xor
aas
hlt
aas
scas
jb
add
popa
jl
inc
mov
jl
popl
xor
inc
jb
push
jbe
jecxz
cmc
test
ljmp
mov
mov
jno
out
sub
jl
mov
xor
pop
add
cmp
inc
fimuls
xorl
cmpsb
insb
test
dec
dec
sbb
sbb
iret
sarb
clc
lods
enter
notl
push
jp
xchg
mov
cmp
leave
sub
xchg
push
mov
mov
enter
shlb
in
sub
mov
xchg
lahf
kmovb
and
add
push
lods
xor
jns
jns
fisubl
mov
mov
testl
aad
mov
imul
int
inc
mov
rolb
push
lods
jnp
dec
mov
dec
icebp
adc
pop
push
les
sbb
dec
inc
cwtl
hlt
cli
jb
cmp
jg
iret
lahf
push
lds
sbb
jbe
loop
mov
jmp
inc
xchg
mov
push
or
lds
outsb
and
mov
sbb
mov
push
jne
cmc
adc
mov
enter
sub
mov
dec
insl
jp
ss
mov
mov
inc
mov
sub
or
xor
mov
pop
sub
popa
inc
push
inc
cwtl
rolb
xchg
gs
sbb
mov
sub
mov
jns
int
lock
or
outsb
push
push
loopne
aas
jo
les
add
in
nop
jg
popa
ret
mov
aad
test
adc
addl
out
stos
sti
scas
cmpsb
dec
loope
aam
cmpsl
push
out
scas
mov
mov
xchg
insb
ret
adc
ret
scas
out
icebp
daa
fmul
mov
mov
bound
adc
loop
push
mov
aad
or
jnp
pop
aad
sub
sbb
or
adc
shrb
inc
rcll
xchg
lds
jecxz
movsl
mov
xor
out
stc
outsb
mov
push
cmpsl
sub
sarl
call
aad
inc
insl
mov
call
in
pop
push
mov
sbb
cs
sbb
sub
mov
std
pop
out
cmpsl
pop
and
mov
mov
pushf
dec
into
push
mov
sti
cld
sahf
mov
imul
xchg
arpl
mov
adc
sbb
push
mov
inc
bnd
movsl
or
jle
cwtl
nop
jae
popa
inc
movsl
ss
mov
pop
dec
cs
in
adc
icebp
adc
ds
cmc
lcall
dec
lcall
movsl
int
insl
sbb
mov
dec
push
lcall
adc
arpl
iret
xchg
and
mov
lods
jns
in
adc
pop
and
inc
jle
dec
cwtl
mov
cmp
ljmp
sub
inc
push
jo
jb
jo
lret
stc
sub
dec
pop
or
aad
adcl
mov
or
jecxz
push
rclb
sub
or
aas
sub
pop
jmp
addr16
aas
jns
subb
ficoml
test
jp
mov
jmp
adc
pop
inc
pop
jae
or
stc
aam
je
push
lods
mov
int
je
test
cmp
xor
cs
jnp
push
jnp
jnp
in
rorl
mov
sarb
imul
lret
fimull
mov
dec
xchg
mov
add
insl
xor
mov
jo
outsb
mov
hlt
ljmp
adc
pop
test
sub
in
aaa
jnp
push
loopne
stos
repz
das
xchg
cli
pop
xchg
pop
mov
cmp
fcoms
das
mov
ret
adc
test
rcrb
cli
lahf
xchg
es
hlt
into
int3
stos
cmp
lds
jle
mov
jmp
pop
outsl
xchg
mov
jb
pop
insb
pop
fwait
or
mov
fsubs
xchg
addl
dec
scas
cmc
imul
xlat
sbb
pop
movsb
imul
or
or
inc
pusha
inc
insb
dec
jb
ljmp
mov
xchg
push
xchg
ja
sarl
rorb
cmpsb
fisubs
fistpll
filds
out
mov
pop
xor
dec
xor
incl
enter
jecxz
pop
insl
pop
mov
nop
cmp
adc
lds
cmpsl
inc
or
xlat
push
pop
add
lds
out
xchg
sub
lods
xchg
or
pop
push
dec
daa
and
icebp
insb
cmp
clc
mov
cmpsl
push
into
ret
xor
rcr
in
and
std
cmp
or
inc
into
or
push
push
sbb
push
mov
pop
mov
jno
clc
xor
or
or
popa
daa
sub
push
addr16
cmp
test
mov
and
pop
mov
dec
pcmpeqb
les
pusha
pop
lahf
adc
sub
xor
mov
mov
lret
cmpsb
xchg
std
sub
lds
jnp
xor
cmp
push
cmp
add
fstpl
or
pusha
in
repnz
push
add
outsb
divl
pop
mov
mov
hlt
fmull
pop
xchg
enter
push
cmc
js
addl
sub
out
push
aaa
ljmp
mov
cmp
jo
insl
xor
and
mov
nop
faddl
hlt
dec
in
sbb
push
std
ficomps
idiv
fdivrp
mov
xchg
or
mov
push
out
mov
sub
inc
nop
dec
daa
dec
and
jp
das
xor
sbb
inc
jbe
mov
or
cmp
jge
rclb
hlt
push
fstpl
stos
stos
sbb
push
pop
or
ja
xchg
out
fnsave
jle
sarb
in
xchg
adc
jge
outsl
stos
sbb
pop
mov
and
cltd
enter
cmp
mov
pop
test
xchg
addr16
fldenv
jno
je
xchg
push
ret
mov
aas
outsb
stc
jne
push
mov
inc
cmp
push
xchg
mov
das
jne
bound
fnstenv
data16
mov
pop
rclb
adc
scas
push
dec
loope
mov
fdiv
pop
mov
sub
xchg
mov
and
cld
dec
arpl
pop
cmp
sbb
in
leave
repz
xor
int3
sbb
in
mov
fldl
jp
inc
shll
jecxz
push
cltd
rolb
and
popf
std
sbb
jb
push
jnp
and
insl
jbe
inc
push
aas
stc
pop
and
popa
mov
push
int
xchg
call
or
out
repnz
push
in
inc
scas
out
push
sbb
in
notl
movsb
pusha
rolb
ret
xor
test
cmp
dec
push
mov
loope
cmc
ret
sub
dec
dec
lds
mov
ret
stos
addr16
stc
fwait
jno
jle
imulb
loopne
sahf
jno
xchg
mov
add
xchg
xchg
sti
push
lcall
cld
les
push
data16
fidivl
dec
testl
shll
mov
dec
pop
insl
lahf
jo
jecxz
or
int
loop
push
xor
imul
out
mov
dec
out
mov
pop
jle
mov
add
add
push
adc
xchg
cmp
stc
pop
lds
push
xor
cs
xchg
and
cwtl
push
mov
adc
or
add
xor
jmp
cmc
lahf
scas
cmp
inc
xor
mov
aaa
xchg
ret
rcrl
sarb
dec
icebp
xlat
inc
sub
push
add
jl
cmpsb
nop
out
push
out
ds
xor
cld
pop
leave
adcb
es
aad
lock
pop
add
add
and
call
cwtl
mov
js
push
rorl
xlat
add
shlb
orl
sti
and
xlat
bound
adc
mov
hlt
xlat
insl
mov
inc
xor
ss
lret
cltd
sti
mov
stos
xchg
andb
cs
mov
scas
icebp
imul
cmp
xor
clc
rcrl
in
scas
or
xor
jne
cmp
sbbb
aam
jp
push
jb
in
test
add
lock
jecxz
fs
jmp
lds
mov
inc
xchg
aaa
stos
push
ret
aam
pop
sbb
in
popa
jle
cmp
rclb
push
aad
push
and
xor
stos
data16
cmp
mov
sbb
push
inc
cld
adc
sbb
ret
jecxz
sarb
faddl
xlat
and
cld
test
sarl
push
subl
or
pop
xchg
loop
inc
mov
or
mov
dec
jmp
aam
pop
dec
outsb
and
lret
xor
es
mov
fcmovnbe
mov
push
sahf
imul
rolb
and
in
ljmp
fiadds
lds
add
push
xor
je
mov
ja
sub
dec
outsb
jae
mov
cltd
ss
addb
push
in
sub
pop
pop
xor
dec
mov
jbe
cmp
push
negb
and
add
bound
cmpsl
aad
pop
cmpb
dec
fwait
push
dec
sbb
and
icebp
or
push
in
adc
or
rcrb
cmp
iret
or
adc
cmpsb
mov
rcll
and
sbb
push
ret
mov
lahf
or
cmp
dec
inc
andl
loopne
in
jecxz
je
sub
sub
ja
or
fnstcw
mov
pop
jno
cs
add
cld
dec
cmp
out
push
test
sub
mov
stos
cltd
cmp
mov
adc
jg
test
stos
and
xor
outsb
pop
fsubs
xor
jp
jno
cmc
sub
push
mov
iret
push
cli
addl
pop
sub
mov
cmp
lcall
dec
cwtl
dec
adc
mov
test
fisttpll
sub
lahf
or
test
idiv
dec
push
mov
loopne
adc
ret
mov
add
shlb
lea
outsl
inc
push
jnp
sbb
out
adc
inc
or
clc
jae
test
call
sub
bound
inc
je
clc
mov
fnsave
cld
loop
xchg
mov
cmpl
add
add
mov
dec
ds
inc
test
adc
shlb
js
shlb
mov
adc
pop
add
mov
outsl
cs
and
push
loopne
mov
call
lock
dec
nop
cmp
inc
ja
jnp
ret
cmp
mov
cltd
addl
cmp
loope
add
je
fidivl
mov
jo
incb
add
int
xchg
fcomip
push
mov
lcall
xchg
push
ljmp
hlt
mov
inc
cld
pusha
add
pop
push
xchg
shlb
stc
pop
push
xchg
pop
cmp
sub
jno
cmpsl
int3
add
jb
jnp
test
jge
lods
jnp
aas
in
lods
push
jo
fwait
inc
in
dec
pop
sbbb
aam
cmpsl
imul
in
pop
mov
mov
clc
dec
and
add
aam
icebp
shrb
fs
cmpsb
ljmp
loope
pop
sub
dec
xchg
or
push
fcmovnbe
sbb
xor
cmp
inc
aaa
lock
int
inc
jb
fs
mov
movsb
inc
lea
int
jmp
cwtl
pop
and
push
push
mov
out
stc
mov
aad
sahf
enter
fwait
dec
aaa
push
mov
icebp
es
or
mov
dec
sub
add
aaa
cmp
es
stos
jmp
rcll
filds
nop
cld
push
hlt
inc
xor
movsl
lea
add
xor
cmp
sub
xor
jns
adc
cmc
shll
stos
push
imull
cmp
xchg
mov
ret
cmp
sbb
or
stos
sub
dec
sbb
in
xor
je
cmp
mov
cmpsb
cli
lods
push
pusha
stos
mov
sar
xchg
loopne
fistps
push
adc
call
add
dec
and
ficoml
push
lahf
movsb
mov
fiadds
xchg
xchg
adc
dec
adc
mov
mov
lret
adc
jg
mov
shl
cmp
fsubl
add
jecxz
sub
pop
xchg
imul
call
sbb
sub
xor
inc
mov
scas
jge
push
mov
icebp
mov
clc
or
mov
out
test
dec
lea
popa
out
dec
insl
pop
mov
cmp
cmpsb
jnp
data16
mov
popa
out
cmp
xchg
sbb
mov
add
sub
out
test
inc
push
aaa
jb
mov
divb
add
xchg
fwait
pop
add
call
out
icebp
mov
rcl
mov
add
add
lret
std
dec
xchg
pop
mov
dec
ss
movsb
push
cmpsl
dec
in
adc
mov
std
or
loope
sarb
stc
insl
enter
std
adc
pop
xor
cmp
das
add
dec
ja
jecxz
aaa
das
adc
inc
sub
xor
or
dec
outsb
pop
pop
push
inc
lret
test
insb
mov
lret
push
mov
rorl
adc
mov
push
inc
in
push
or
popf
dec
imul
cmp
data16
inc
xchg
outsb
inc
xchg
xor
dec
jmp
call
or
sbb
mov
pop
cltd
ffreep
dec
lea
push
mov
bound
in
jmp
cmp
push
mov
repz
mov
mov
jo
mov
cmpb
push
test
inc
xchg
data16
xchg
pop
insl
sub
aaa
scas
sub
outsb
pop
adc
xchg
sbb
or
mov
mov
sbbl
sahf
sbb
cmp
mov
xchg
adc
mov
pop
jo
adc
xchg
mov
cmpsl
sub
mov
ret
or
shl
add
inc
test
mov
movsb
push
punpckhdq
xchg
mov
xchg
repnz
push
mov
icebp
or
outsl
mov
inc
pop
xor
bnd
sub
out
in
adc
in
xchg
add
icebp
sub
es
lret
jno
jmp
leave
inc
mov
pop
movsb
divb
and
push
push
jo
pop
ss
js
xchg
jnp
jo
hlt
dec
dec
movb
jge
fsubrl
repz
jo
mov
call
cmp
call
jns
roll
into
push
stc
adc
xor
push
cmc
sbb
cli
mov
adc
adc
in
addb
mov
in
inc
xlat
out
xorl
mov
mov
aam
adc
push
mov
std
sub
xor
jp
inc
mov
lcall
mov
jecxz
nop
push
ds
pop
insl
pop
movsl
mov
xchg
cwtl
icebp
call
pop
addl
into
ret
mov
insb
xor
sti
loope
dec
sub
imul
les
pop
mov
mov
jecxz
and
mov
xor
test
leave
clc
sbb
out
lcall
and
or
or
in
cmp
movsb
cli
sbb
and
ss
insl
lahf
add
mov
sub
and
sbb
pop
rorl
popf
jmp
ss
dec
push
dec
repz
fldcw
cwtl
out
dec
sub
jg
cmp
dec
fcom
mov
mov
daa
xor
sub
adc
hlt
subb
into
and
push
punpckhwd
ficoml
adc
into
jo
inc
dec
iret
dec
mov
cs
sbb
mov
adc
push
sbb
rcll
inc
scas
push
in
stos
mov
jb
cli
xchg
call
or
sub
xchg
or
rorb
loope
push
inc
ja
xchg
pop
add
pop
lret
sahf
loopne
cmp
adc
js
xchg
std
add
iret
test
ljmp
testb
div
xchg
pop
add
mov
inc
scas
test
repnz
adc
int3
ja
flds
dec
mov
clc
or
shr
or
fsubs
popa
popa
test
flds
pushf
jno
or
pop
jbe
mov
bound
lock
imul
and
xchg
mov
test
fnstcw
mov
push
sti
ja
movsl
adc
jae
pop
inc
lods
jb
pop
jae
mov
dec
lcall
mov
add
loope
loopne
pushf
imul
mov
or
pop
int
xchg
add
cmp
daa
cwtl
push
imul
push
push
cltd
mov
sub
pop
dec
shll
inc
mov
movsl
xlat
out
les
jmp
ljmp
sub
lods
cmc
fists
and
dec
pushf
mov
std
sub
lahf
aaa
das
xchg
push
pop
push
jmp
icebp
ret
in
jp
cmp
mov
in
and
mov
mov
inc
leave
push
push
int3
sbbl
jo,pn
and
test
lods
adc
dec
mov
cmp
pop
outsl
arpl
out
div
xchg
test
sub
jnp
adc
idivl
pusha
roll
adc
testb
sbb
int3
pop
enter
lret
mov
sbb
mov
xchg
fisttps
cmpsl
mov
loopne
bound
ss
lods
aas
push
xchg
inc
and
add
jp
xor
clc
xchg
inc
add
mov
dec
leave
cs
jns
mov
and
pop
std
xor
push
add
xor
jo
enter
pop
mov
rcll
cld
sub
mov
inc
out
aaa
mov
pusha
jg
adc
cmp
xor
fcmovbe
andl
jg
or
lods
lock
ret
xchg
mov
xor
jbe
push
call
sub
lea
mov
push
fildl
or
je
test
or
inc
movsl
adc
mov
vcmpps
adc
leave
dec
mov
leave
int
mov
or
ljmp
les
xchg
inc
lods
mov
jo
mov
std
mov
mov
sahf
xor
jns
xor
data16
sbb
mov
pop
dec
jbe
inc
in
leave
jbe
rdmsr
pop
shlb
js
cmp
fisttpll
cmc
dec
rorl
dec
out
movsb
jle
aad
ds
shrb
xor
arpl
xor
mov
lret
or
push
lahf
pop
cmpsl
mov
and
rcll
sbb
in
adc
add
sub
xchg
inc
andl
mov
pushf
mov
and
push
jnp
test
mov
add
xchg
or
add
inc
jb
shll
pushf
aad
adc
cmp
adc
jle
das
inc
xchg
nop
pop
push
cmp
pop
xor
outsl
aam
fists
lcall
push
repz
xor
jbe
xor
cmp
jge
mov
pop
lahf
and
xchg
mov
jl
jo
mov
xorl
test
mov
mull
mov
sub
test
mov
and
or
sbb
mov
popl
lret
push
stos
mov
fisubrs
popa
xor
sub
rcrb
jg
outsb
faddl
aam
lds
test
imul
std
jg
out
les
call
mov
inc
imul
xchg
inc
scas
les
lcall
cli
sub
sti
jne
jno
mov
leave
mov
mov
cmpsl
out
movl
push
inc
fildll
cmp
sub
out
push
fdivrs
ds
dec
adc
arpl
and
fidivs
imul
and
pop
mov
lods
movsl
xchg
jmp
cwtl
cmp
sbb
data16
mov
cmp
pop
dec
outsb
push
jp
fwait
insl
int
std
fsubrl
leave
mov
and
into
jae
test
rorb
jnp
inc
ret
push
or
mov
es
inc
rol
inc
jae
and
clc
inc
sbb
xor
or
push
pop
mov
sbb
xor
imul
imul
mov
jb
in
jno
lahf
pop
xor
inc
out
cltd
cmp
aaa
fistl
add
xchg
scas
cld
push
dec
out
cmpsb
orb
push
mov
dec
inc
data16
xchg
pop
lea
in
push
jne
jp
pop
les
xchg
lahf
lds
xchg
ss
cmp
sub
sub
loope
mov
icebp
push
gs
pop
mov
sub
adc
mull
pop
push
sub
jmp
xor
jne
fs
or
ss
cmp
adc
push
outsb
stc
aas
pushf
cmp
pop
adc
lods
dec
pop
sub
jmp
arpl
cli
mov
andb
xor
inc
jp
ljmp
imul
mov
inc
pop
nop
pusha
cmp
xchg
dec
sub
outsl
cmp
or
sub
das
lret
mov
pop
lret
repnz
test
push
and
jge
out
fnstenv
pusha
add
outsb
pop
xor
pop
mov
les
add
fdiv
les
neg
jl
mov
femms
mov
pop
sub
test
aam
mov
sti
fnstcw
mov
daa
push
fsubrl
push
loop
xchg
mov
push
and
out
aas
into
cmpsb
xchg
pop
ja
inc
push
inc
pop
fisttpll
iret
xchg
cltd
lea
mov
push
adc
add
mov
lea
cmpsl
sar
pusha
and
jo
outsb
cwtl
adcl
cmp
pushf
lcall
mov
or
shrl
sub
lahf
addb
mov
popf
and
out
dec
ljmp
push
push
inc
jns
shrl
jg
cmp
jae
pop
inc
push
cld
testl
cwtl
sbb
es
test
sbb
push
cld
push
adc
fnsave
rcl
test
mov
pop
push
popf
sbb
ss
push
fsts
rclb
adc
ret
scas
imul
lret
and
mov
push
pop
mov
dec
sub
data16
cs
mov
xchg
popa
mov
fistl
mov
add
adc
and
popf
mov
sub
xlat
idiv
mov
ljmp
jnp
dec
inc
push
dec
cwtl
push
ds
inc
sub
cmpsl
mov
jb
lods
std
scas
jecxz
out
sbb
sbb
push
insl
push
push
hlt
jb
push
cmp
adc
and
and
jecxz
adc
xchg
in
pop
add
jecxz
cmpb
adc
or
ffree
dec
adc
arpl
adcl
mov
adc
inc
jge
push
lahf
xor
xor
aam
jp
jno
jbe
gs
mov
mov
dec
xor
lahf
cmp
lret
hlt
mov
sbb
icebp
xor
mov
jle
rclb
inc
inc
and
je
cmpsl
daa
xchg
es
mov
clc
mov
dec
pusha
cmp
xchg
mov
xchg
ds
popa
shl
inc
push
sub
pop
adc
add
fs
push
cmp
subl
lret
push
dec
sysexit
sarl
sub
and
or
adc
popa
pop
xor
cmp
or
in
fistl
cs
and
rclb
xchg
ret
icebp
inc
pop
stc
push
fldenv
push
jns
or
pop
xor
push
xor
iret
icebp
push
movbe
cmp
mov
stos
cwtl
dec
xor
stc
pop
mov
and
mov
adc
out
hlt
dec
fiaddl
movsl
fwait
negb
andl
jg
sbb
jo
neg
outsb
push
jle
cmp
mov
fs
shl
loopne
inc
pop
in
stos
ljmp
shrb
je
and
xchg
sub
add
sbb
mov
sahf
or
out
andb
ret
cmpsl
les
ret
aad
out
in
lcall
pop
imul
lods
add
push
mov
jbe
xchg
rolb
fiaddl
adc
mov
mov
sbb
inc
insl
das
push
jge
sub
mov
scas
and
jbe
repz
sub
pushl
cmp
and
out
loopne
jb
jge
cmp
pusha
shrl
fmul
ror
or
xchg
jb
xlat
out
ja
stos
imul
imul
sub
sbb
mov
shl
adc
dec
jnp
pop
and
cmp
sbb
sti
iret
or
jge
sbb
add
cwtl
dec
xchg
shlb
mov
das
lods
shl
lods
add
pop
jae
dec
mov
repz
add
cmp
and
sbb
push
daa
gs
scas
int
jno
loope
inc
in
cmpsl
insl
and
out
pop
xor
out
int3
inc
mov
cld
sbb
movsl
lods
in
les
repnz
mov
mov
xchg
out
mov
test
push
rclb
xchg
cmc
pop
inc
push
cmp
test
and
sbb
mov
mov
jae
scas
into
loope
mov
xchg
aad
out
lret
cmp
lret
xor
cmpsl
js
cmpsl
push
cld
or
test
xchg
test
leave
pop
dec
icebp
nop
pop
movsb
stos
in
inc
xor
sbb
mov
fildl
rorb
cmpsb
stc
in
mov
clc
dec
pop
popf
cmp
bound
sub
cmp
int3
out
lea
aad
enter
rcrl
shl
in
in
pop
mov
std
scas
xlat
cltd
je
pop
mov
fisubrs
loop
add
subl
es
mov
int3
mov
addr16
stos
push
call
mov
push
fcmovnbe
adc
xor
or
mov
or
pop
fwait
clc
pop
out
cmp
repnz
jae
mov
rcll
cmp
push
push
clc
or
mov
cwtl
daa
inc
and
pop
or
add
push
or
sbb
push
daa
jns
hlt
je
push
aaa
test
rcl
sbb
sbb
lods
pop
lret
or
or
into
sbb
xchg
mov
bound
insl
iret
das
ror
stc
mov
jo
mov
fistps
dec
jge
ss
fs
sbb
loopne
pushf
insl
lods
mov
xchg
rcll
lea
andl
mov
lods
ds
add
pusha
subl
sub
into
mov
popf
jno
mov
cltd
push
mov
repz
rcll
jne
cmp
fbstp
add
int3
mov
jmp
pop
movsb
or
cli
sbb
xor
ret
aad
push
lock
sub
xlat
bound
sti
xor
cmpsl
add
fadds
jp
mov
ljmp
hlt
ficompl
aad
divl
repz
and
mov
outsb
mov
pop
ficoml
pop
mov
fidivrl
mov
pop
and
pop
dec
loop
inc
testl
sbb
pop
push
adc
in
ret
addl
xchg
add
xlat
add
data16
cmp
mov
jne
mov
adc
pop
les
mov
push
inc
daa
inc
int
jno
sti
jg
jp
mov
mov
jecxz
or
pop
cmc
sarb
mov
xor
mov
stc
out
sub
and
sub
test
roll
shrl
mov
test
inc
cmovge
jo
xor
hlt
sub
les
push
xor
mov
sbb
inc
pop
and
out
addr16
nop
les
popa
adc
int3
pop
rcll
out
mov
pop
xor
mov
gs
sbbb
xor
in
addr16
aas
pusha
fists
stos
lret
fwait
adc
sbb
in
jne
pushf
xchg
and
test
scas
mov
clc
xchg
imul
jp
lds
pushf
sub
sbb
sbb
cmp
ds
and
pusha
cltd
ljmp
xor
insb
into
push
jo
stc
iret
push
jle
mov
sub
fisubl
push
jmp
dec
xor
xchg
cmpsb
mov
movsb
add
call
ljmp
or
mov
jg
out
sbbl
xor
in
cltd
pop
les
push
cmp
add
dec
jg
ret
xchg
cmp
add
sbb
xchg
sub
ret
adc
lret
mov
in
aad
pop
mov
call
pop
aas
fisubrl
inc
xor
inc
mov
inc
cmp
sti
mov
outsb
shrl
mov
rcll
pop
imul
mov
das
ljmp
in
mov
xchg
rolb
jmp
cwtl
lcall
inc
xchg
fiadds
sbb
xchg
or
fisubl
rcr
sbb
push
shll
repnz
fistl
and
mov
pusha
mov
loope
test
xor
ja
jecxz
test
hlt
bound
stos
fisubl
mov
adc
rcll
out
cmp
mov
jns
insl
or
mov
xorl
xchg
incl
cmp
sarb
mov
inc
sti
mov
imulb
fdivs
inc
mov
add
mov
cmp
fmuls
adc
add
in
in
movsl
hlt
push
mov
push
cld
je
mov
sub
mov
sub
movsb
js
jge
ja
xchg
or
setp
aam
cmp
adc
in
xchg
int
inc
pop
shlb
and
paddb
pop
or
ss
cmp
ss
or
mov
addb
push
lods
pop
leave
shlb
and
jbe
jbe
xchg
jno
cmp
add
push
adc
sub
jo
in
aaa
pop
and
int
bound
sub
je
pop
cmc
test
cwtl
mov
loop
jg
lret
test
in
insl
mov
call
aaa
mov
mov
or
and
lds
jns
add
dec
pop
insb
js
pop
ss
pop
outsb
inc
das
fbstp
loopne
jg
push
and
fisubrl
cltd
pop
out
inc
in
jne
cmpsl
dec
jmp
xchg
test
sahf
test
pop
loopne
fidivl
mov
mov
adc
add
pop
mov
push
and
jl
mov
dec
cmp
jg
dec
fidivrs
jmp
mov
jmp
jno
daa
sbb
fcmovnb
js
mov
inc
and
fs
cmp
out
lock
mov
dec
ljmp
les
cmp
cmp
pushf
xlat
push
shlb
or
aam
mov
mov
mov
pushf
mov
sar
ret
call
jecxz
add
sub
stos
mov
aad
jp
ja
xorl
inc
dec
pop
clc
or
push
adc
xchg
out
push
add
jp
cmc
call
add
cmpsl
inc
inc
mov
pop
inc
psrld
push
add
shlb
mov
mov
inc
mov
inc
or
jbe
mov
and
fs
dec
jb
in
xor
icebp
jno
enter
nop
inc
sahf
imul
mov
or
je
icebp
lcall
dec
mov
mov
ret
sbb
roll
cmpsl
xor
jbe
sbb
adc
sub
pop
adc
ret
jns
lock
notl
jb
daa
jl
int3
rcrl
outsb
adc
imul
and
decb
jae
inc
cmpsl
ljmp
scas
repz
les
push
xor
mov
xchg
fnstenv
test
sbb
mov
mov
push
cmp
push
and
stos
nop
movsb
dec
movsl
lret
outsb
xor
pop
cltd
sbbl
pop
mov
jge
sahf
pop
aad
and
rclb
mov
xor
icebp
sbb
cwtl
pop
data16
and
adc
fldenv
jbe
pop
in
mov
jae
and
jl
or
aam
outsb
jne
push
push
fisubs
stc
out
or
test
pop
shrl
mov
test
nop
cmp
not
push
nop
outsb
sbb
xor
jmp
mov
out
inc
cmpsb
repnz
pop
add
mov
inc
inc
and
add
lahf
add
xchg
pop
and
je
sub
jge
popf
ror
sbb
pop
dec
scas
pop
outsl
pop
fwait
pop
adc
mov
addb
and
sbb
jnp
arpl
out
imul
mov
add
ret
out
pop
fnsave
cwtl
aas
cld
inc
sbb
fists
lock
in
add
xchg
daa
sub
sti
sub
fmul
bound
iret
pop
inc
push
and
scas
loope
out
jo
mov
fwait
adc
movsl
push
pop
cltd
imul
lret
mov
cli
cmp
mov
subl
xchg
xchg
sbb
test
jl
xchg
adc
movswl
jae
adc
lds
jl
jae
les
stos
add
sbb
and
xchg
les
push
xor
jge
aas
popa
pop
sub
fs
mov
xor
mov
lret
imul
js
mov
xchg
mov
stc
addr16
add
or
jns
pop
in
dec
jno
stos
mov
icebp
lods
add
inc
int
jno
mov
stos
xor
neg
in
loopne
fs
jb
ret
push
repz
mov
push
loope
add
popa
pop
or
xchg
in
cmp
pop
mov
arpl
pop
mov
leave
xchg
ljmp
fucomp
cmp
xlat
mov
out
testb
add
cmpsl
ret
rclb
push
mov
outsl
pop
lds
mov
in
repz
push
test
xor
pop
in
xlat
lcall
sub
add
mov
mov
pop
push
les
insl
pop
dec
std
xchg
ror
js,pt
fsubrl
push
jb
add
or
aaa
ss
or
push
movsb
cmp
movsb
pop
lods
ja
push
fsub
mov
pop
jg
leave
mov
sbb
mov
cmp
push
mov
mov
xchg
add
xchg
push
push
sbb
fistps
jmp
cli
push
mov
sbb
jbe
xor
out
rclb
enter
inc
sub
les
adc
mov
pop
mov
ljmp
test
inc
test
inc
mov
and
or
pop
ja
stc
mov
aas
test
mov
out
mov
cltd
addl
jns
jnp
adc
and
xchg
inc
and
insb
and
xor
push
mov
out
sbb
sar
jl
je
mov
orl
sti
fwait
movsb
xor
addb
in
push
fistl
jnp
es
sbbb
in
mov
ds
and
cmp
adcl
loope
add
cwtl
dec
ss
jle
rolb
push
jecxz
outsb
adc
jge
or
cmp
lds
dec
pop
jl
jl
mov
imul
inc
dec
pop
xchg
add
in
sbb
push
out
in
imul
ror
sbb
jmp
dec
in
lcall
inc
sbb
cmp
mov
push
inc
and
rcr
cmp
xor
inc
imul
xor
sbb
xchg
add
jbe
lret
loop
add
loop
loopne
sub
cli
jg
je
fildl
inc
dec
xchg
mov
lds
test
inc
sbb
push
pop
and
inc
in
cli
mov
xor
fwait
push
test
xlat
shll
rcrl
in
xor
out
insl
push
jmp
sarl
jmp
push
sub
fstl
xchg
ss
ljmp
xchg
fmuls
jmp
cmp
pushl
push
subb
inc
shrd
mov
pusha
add
xchg
push
stc
scas
mov
insb
mov
cmc
add
sub
outsl
sti
pusha
jne
push
fstpl
lods
ja
mov
xor
adc
xor
dec
dec
add
adc
xor
shll
in
enter
dec
insl
pop
pop
xlat
mov
dec
mov
outsb
fstps
subl
lret
cmp
out
leave
jbe
xchg
daa
jg
dec
rcll
mov
sahf
arpl
mov
pop
jmp
sahf
out
jle
lods
add
xchg
popa
push
loope
cltd
hlt
pop
and
data16
xor
fdiv
mov
nop
push
pusha
das
adc
push
and
mov
cmp
xor
and
pop
sbb
les
jae
inc
scas
daa
pop
ja
lods
mov
adc
inc
push
popl
int
add
jp
sbb
shll
push
mov
mov
int3
add
movsb
ljmp
xchg
out
adc
mov
rolb
dec
insl
in
stos
shlb
adc
rcrl
fsubs
in
imul
mov
mov
inc
comiss
xchg
add
cmp
jae
sbb
or
gs
and
cmp
sub
scas
les
insb
xchg
push
cmp
int3
or
pop
lea
and
enter
int3
pop
cwtl
out
pop
inc
push
xchg
pop
and
add
xor
insl
sahf
fcoms
js
sbb
arpl
xor
cmc
inc
scas
pop
pop
inc
in
popa
into
test
sub
lea
xlat
rcl
lds
pop
jbe
movsl
jecxz
pop
sahf
shll
stos
add
dec
aam
pop
xchg
fdivs
add
add
mov
and
clc
repnz
xchg
or
nop
mov
sti
repz
jbe
mov
hlt
mov
dec
mov
sub
push
push
jl
mov
je
xchg
nop
jno
les
into
dec
adc
sbb
sub
hlt
into
sub
xor
or
and
ja
leave
adc
ret
stc
scas
pop
adc
shll
in
test
lods
inc
js
pop
sub
pusha
inc
sbb
sbb
sbb
jno
push
mov
addr16
gs
or
fildl
xchg
movsb
cmpsb
ror
push
xor
mov
imull
testl
jne
addr16
leave
aas
aam
fwait
mov
shrb
repnz
or
add
push
fxch
idivb
xchg
aad
cmpsl
push
mov
inc
dec
lea
lret
mov
stos
sub
test
out
inc
cmp
enter
imul
loop
movsb
loopne
popa
loopne
out
xchg
xchg
hlt
xor
in
adc
ret
xor
xor
push
pusha
cld
movsl
lret
leave
mov
xchg
jo
and
movsl
imul
orl
push
pop
and
ds
adc
and
dec
repz
mov
fwait
cmp
aad
mov
cmc
mov
orl
dec
dec
xor
mov
out
enter
jg
pop
add
inc
rcr
jge
sbb
jbe
adc
stc
data16
aas
jl
out
movb
out
xchg
inc
pop
xchg
and
push
adc
inc
and
mov
sti
sbb
push
xchg
inc
sub
jne
gs
mov
push
and
js
mov
iret
or
jle
jo
lcall
mov
ljmp
outsl
dec
jecxz
add
sub
xor
loope
inc
pop
jmp
sub
fs
ss
add
mov
movsb
inc
lods
add
lcall
loope
xchg
push
pop
jg
jae
jge
or
dec
add
icebp
jnp
insl
mov
mov
sti
imul
sarb
mov
xchg
mov
xor
push
jmp
lahf
int
repnz
and
inc
leave
sub
or
and
bound
push
enter
mov
mov
cwtl
pop
sub
push
xchg
rcll
fisttps
insb
pop
dec
adcl
or
fcmovbe
leave
inc
jmp
adc
sub
mov
out
fildll
xor
mov
ss
popf
sbbb
lds
iret
rcll
push
pop
imul
inc
xor
scas
xlat
push
sbb
and
pop
xchg
push
daa
inc
pop
and
enter
sbb
aaa
mov
lahf
ljmp
testl
call
adc
arpl
push
and
jae
sub
inc
loopne
xchg
push
push
sarb
vdivss
mov
inc
and
popf
nop
inc
faddp
dec
fisttpll
jecxz
sbb
mov
pop
pop
daa
dec
xchg
push
popa
mov
roll
push
jnp
mov
subb
cmp
ds
outsl
stos
outsb
int3
push
push
dec
in
xor
lahf
and
mov
sub
mov
inc
cmp
gs
enter
imul
popa
popf
jl
lret
addr16
push
and
fisubl
mov
jbe
mov
scas
leave
mov
add
jecxz
or
or
loope
xchg
jbe
or
sub
pop
cli
fidivs
incb
add
mov
inc
mov
sub
adc
je
mov
fcmovnu
xor
adc
or
leave
xchg
cmp
mov
or
cmp
push
stos
mov
or
shrl
mov
insl
jbe
mov
push
mov
fs
adc
cmc
jne
push
sub
test
mov
stc
adc
dec
fdivrs
dec
fisubl
push
adc
cmpsl
mov
and
add
push
pop
into
aas
in
outsb
lock
addb
in
pop
hlt
in
xchg
popa
inc
cmpsb
popa
ret
hlt
cmp
insl
inc
sub
les
cmp
aam
xlat
ret
xchg
sti
and
ret
sub
inc
addr16
jge
adc
add
mov
pop
xor
cltd
call
push
xchg
mov
xor
cltd
inc
aam
cld
out
mov
xor
xor
in
sub
pusha
cmp
push
movsl
jecxz
inc
adc
das
nop
rclb
out
out
xchg
lcall
mov
popa
ror
jnp
jg
jmp
xor
dec
xor
flds
popf
fdivr
cmp
ja
aaa
pop
scas
out
sub
cmp
push
rcrl
xor
mov
pop
daa
pushl
xchg
int
out
ds
jo
and
shl
lds
push
mov
push
pop
lcall
in
mov
push
add
mov
movsl
adc
insb
out
dec
rcrb
rol
xor
mov
aad
movsl
lea
pop
pusha
dec
enter
cmp
fsubs
call
xchg
in
mov
and
notl
aaa
mov
insl
jne
paddb
lock
pop
or
or
push
xchg
xor
hlt
lock
adc
in
xor
pop
xor
aaa
jmp
push
cld
xchg
xchg
sub
inc
push
adc
adc
bound
jl
pop
push
add
pop
push
insl
test
pop
and
xor
and
add
std
in
inc
icebp
stos
pop
ret
out
mov
add
notb
cmp
movsb
rclb
xchg
shl
push
adc
sub
adc
rcrb
push
adc
inc
dec
ja
scas
pop
add
xlat
push
into
lret
mov
shlb
fnstenv
fadd
mov
popf
sbb
and
sahf
out
sti
in
fcomps
jb
sbb
mov
xchg
inc
pop
dec
subb
jns
test
enter
pop
fmuls
sub
jno
xor
sahf
cltd
xorb
jb
push
mov
adc
add
jns
mov
sub
in
dec
pop
mov
lds
out
mov
movsl
adc
outsb
jl
xchg
frstor
jae
cld
in
aam
sbb
jns
inc
cs
in
cmpb
nop
cmp
pusha
cmp
lock
mov
popa
loop
jge
jnp
int3
fidivrl
fstps
pop
pop
test
lods
jle
pop
mov
iret
int3
mov
shll
push
sub
mov
lds
xor
movq
jnp
cmp
sub
add
push
in
adc
cmp
lret
repz
xchg
jle
sub
stc
movsb
sahf
daa
in
mov
cmp
mov
add
in
adc
out
movsl
pop
sub
mov
out
xchg
aas
xor
pop
call
mov
mov
lcall
loope
xor
jb
push
es
repnz
mov
adcb
movsb
dec
or
pop
sub
jge
or
jle
faddp
and
mov
push
add
adc
push
push
scas
mov
xchg
cmp
push
add
inc
sti
adc
inc
out
shll
test
shrb
mov
fcompl
ret
xchg
pmuludq
sbb
add
push
imul
pop
shll
movsl
adc
xchg
hlt
xchg
imul
sbb
negl
lret
aas
ljmp
sbb
lods
aad
nop
cld
inc
cmp
or
xchg
mov
scas
pushf
out
jmp
dec
adc
leave
jp
scas
fwait
add
mov
phaddd
adc
xchg
arpl
int
mov
adc
cmp
test
roll
je
xor
or
cltd
dec
lods
lods
pop
orl
xor
push
pusha
test
dec
xor
mov
xchg
mov
leave
jnp
push
push
out
mov
test
and
jne
das
mov
cld
pop
addl
fmull
imul
movsb
xchg
cld
fbld
add
mov
cld
push
cmp
mov
push
mov
subb
inc
div
add
mov
aam
jne
shlb
mov
cmp
fsubs
sub
xchg
cltd
xchg
std
inc
mov
pop
and
sbb
in
in
jno
xor
sbb
xor
gs
mov
adc
std
jge
inc
jle
add
push
cld
decb
in
fcomps
ret
in
adc
out
lods
fldcw
imul
fwait
push
jg
pop
pop
or
fstpl
loope
pop
or
loopne
and
outsl
and
xchg
ss
in
push
dec
or
lods
lds
scas
loopne
inc
dec
iret
cmp
mov
mov
and
mov
add
pushf
loopne
and
adc
inc
xlat
cmp
ret
push
cmp
and
xchg
push
aaa
ljmp
mov
jns
fwait
sbb
aad
out
and
mov
mov
inc
inc
ljmp
ds
lret
push
dec
adc
xchg
mov
sbb
popf
sbb
shl
mov
andb
jns
jno
fisttpl
lods
push
loopne
jae
mov
test
cmpsl
mov
jg
cmpsb
cmc
jp
and
add
insl
outsl
dec
jge
lock
fisttpll
mov
decl
push
lods
cmpsl
push
dec
aas
mov
cltd
xchg
mov
jge
sub
movsl
ss
xchg
in
sbb
movsl
xchg
scas
outsl
hlt
dec
cmc
movsb
pop
sub
and
jecxz
popa
xor
rorb
aaa
out
fnsave
lcall
js
pop
cmp
jle
jge
sbb
xchg
movsb
or
push
cmp
pop
xchg
stos
sbb
and
mov
mov
into
sub
mov
jae
rclb
sub
and
fmuls
mov
aaa
stc
in
mov
mov
mov
dec
cwtl
subl
add
mov
add
inc
add
int3
mov
adc
xchg
insb
xor
push
xchg
xor
ficomps
std
push
cwtl
mov
aad
fdivs
xchg
lds
hlt
inc
orb
and
clc
sbb
inc
and
arpl
jmp
cltd
int
dec
cld
pop
sub
add
xchg
or
pop
push
stos
ds
fiadds
cltd
lea
or
sbb
stc
ljmp
mov
sti
jle
jp
jecxz
mov
sbb
adc
jmp
mov
mov
mov
xor
sub
hlt
adc
jb
jecxz
jg,pt
mov
cmc
mov
mov
imul
and
sbb
nop
jmp
xchg
mov
sbb
sub
rolb
mov
push
mov
psllq
mov
fadds
movsl
jle
divl
mov
stc
pop
rep
push
pop
sub
xor
rcll
dec
pop
pop
xlat
xor
int3
mov
aad
fisttpl
push
aas
xchg
int3
cmp
addr16
iret
ret
ret
cmpl
lret
je
pop
jg
sbb
outsb
into
out
lods
xor
and
xor
and
mov
inc
xor
and
jbe
or
mov
nop
ja
sub
mov
push
push
mov
mov
push
gs
jnp
dec
mov
pop
cmp
data16
aad
movsl
rolb
inc
in
mov
mov
xor
pop
add
je
addl
or
lahf
lcall
insb
cmpsb
addr16
jp
sub
icebp
jno
loopne
mov
jecxz
int3
xchg
and
cmp
dec
sub
rorl
clc
scas
pushl
inc
push
mov
push
loope
test
xchg
in
adc
pop
push
repnz
jbe
cld
push
sbb
aas
jl
cmp
nop
popf
repnz
push
add
lea
sub
push
mov
sahf
push
and
jb
insl
sbb
stos
cmp
int
lds
cld
sub
adc
inc
push
add
add
add
outsl
xor
inc
push
sbb
enter
jbe
xchg
mov
dec
push
or
lock
outsb
pop
and
add
pop
jle
imul
test
jnp
sub
lcall
jo
pop
pop
jl
xlat
scas
inc
push
jmp
dec
inc
push
scas
ja
add
data16
cmc
mov
cmp
xor
or
push
mov
add
not
insl
dec
jnp
push
ja
test
aad
cltd
xor
mov
into
aas
or
mov
imul
out
nop
push
cwtl
push
sbb
and
sub
dec
stos
mov
jge
adc
mov
pxor
push
rcl
cmp
pop
jl
dec
iret
fisubrl
push
xchg
test
lret
mov
sbb
mov
sbb
pusha
and
sbb
arpl
and
cld
rcr
dec
loop
jge
mov
adc
mov
mov
movsl
lret
jb
sub
adc
push
xchg
push
sbb
in
sub
out
pop
or
sub
push
sub
cmp
pushf
add
xor
add
leave
and
mov
or
imul
add
cmp
fnstsw
scas
sbb
test
jge
int
sti
push
push
rcr
pop
repnz
xchg
cmp
fldcw
mov
popa
nop
enter
dec
add
out
xchg
les
test
aas
xchg
outsb
xor
shrb
xchg
xchg
sarb
arpl
sub
js
imul
lcall
inc
or
in
aas
test
andb
jl
repz
pop
add
dec
ret
jl
test
test
push
shrl
push
jp
and
add
and
icebp
push
mov
cs
in
xor
fiaddl
mov
xchg
mov
inc
cmpb
fcos
into
and
psllw
and
add
test
dec
outsb
cltd
add
cli
sbb
lahf
pop
stos
jle
andb
dec
rcll
aam
insl
push
rorl
xchg
mov
ja
mov
xchg
fstps
push
arpl
inc
loop
and
lods
sbb
add
xor
pop
data16
mov
adc
xchg
sub
jno
sti
stos
push
push
dec
cwtl
stos
shrb
pusha
test
xlat
jge
mov
push
lea
push
mov
mov
push
add
pop
jmp
mov
or
repz
fidivs
jno
mov
push
cs
push
loop
lahf
dec
test
and
push
push
mov
xor
andb
lret
shrb
sarb
loope
enter
sub
stc
sbbl
cmpl
ss
adc
jne
push
ss
push
inc
jno
pop
mov
movsl
xchg
push
dec
xchg
es
into
dec
dec
addb
cli
outsb
xchg
sub
insb
adc
iret
dec
sti
addl
jge
aaa
xor
dec
sub
dec
loopne
mov
mov
sbb
and
repz
sahf
in
inc
dec
mov
xchg
divl
cmp
aaa
shlb
mov
jnp
iret
in
jl
mov
lods
sbb
cld
pop
lds
cs
mov
mov
cmpsl
adc
sub
and
sbb
cmp
pop
in
hlt
add
notl
or
push
mov
aad
push
pushf
or
cmp
push
push
pop
js
shlb
mov
shll
mov
jecxz
adcb
inc
jp
ss
imul
mov
lea
mov
or
xchg
inc
in
mov
jl
jmp
int3
fists
popa
cltd
les
mov
mov
mov
ljmp
mov
fmull
mov
xchg
push
bound
add
cwtl
push
lret
imul
testl
pop
jbe
push
xchg
pop
sbbl
add
adc
pop
mov
cmpsb
dec
repnz
dec
fldl
imul
mov
dec
scas
mov
mov
xchg
fwait
add
mov
loope
shrl
out
adc
mov
jae
jp
inc
or
stos
lock
inc
xor
dec
pop
les
test
lret
nop
sub
cli
xor
xor
inc
ss
xchg
faddl
mov
rol
in
jle
sub
movsl
fistpll
loop
sbb
jo
lfs
loope
roll
int
shlb
sbb
leave
dec
ret
testb
fildll
adc
test
les
enter
mov
shlb
leave
mov
xor
cltd
cmpsb
dec
or
add
jge
daa
add
lcall
cmp
inc
mov
adc
add
ret
adc
lret
adc
je
fstpl
popf
lahf
arpl
pop
aas
mov
pop
inc
push
arpl
outsb
push
flds
ret
sbb
out
js
jno
nop
pop
arpl
cmp
out
pop
enter
and
pop
lock
das
add
xor
jo
pop
clc
push
iret
out
mov
xchg
jnp
add
jne
loope
fs
sub
xchg
mov
jae
mull
mov
add
mov
repnz
scas
add
lret
mov
sub
das
sub
push
ja
das
imull
mov
xchg
ret
je
sub
lahf
pop
pop
xchg
imul
aaa
pop
test
decl
popl
es
test
aaa
adc
movsl
push
add
jno
jmp
or
and
arpl
js
mov
pop
mov
adc
idivl
in
sub
jb
push
xlat
dec
pushf
sbbl
adc
data16
add
rolb
gs
call
negl
xor
jmp
xchg
mov
mov
cs
fstpt
in
fisubs
mov
popf
mov
mov
sbb
icebp
cmpsl
jle
das
es
stc
into
faddl
repnz
rcrb
inc
mov
popa
outsb
or
fsubs
add
js
fildll
out
test
mov
mov
rolw
fcomip
xor
loopne
pop
jnp
pushf
xor
fdivs
leave
push
rclb
aas
mov
les
shl
clc
lds
sti
push
rcrl
inc
mov
lahf
push
fnstenv
loop
lahf
xor
fildll
in
xchg
lahf
sub
repz
push
mov
push
flds
sbbb
imul
dec
push
sbb
cwtl
mov
imul
inc
push
das
lea
iret
jp
pop
hlt
mov
xlat
cmp
ds
call
mov
dec
xor
in
sti
ljmp
xlat
mov
fbld
and
sahf
movsl
xchg
pop
test
pusha
pusha
sbb
mov
mov
insb
push
mov
xchg
lods
jae
sub
lds
aas
add
mov
subl
fiadds
jg
xchg
push
xchg
repnz
iret
adc
jg
sti
fildll
mov
mov
fisubl
mov
fisubrs
rolb
lods
pop
xchg
xorb
bswap
rolb
push
out
xchg
mov
arpl
adc
leave
sub
cmp
int3
push
mov
mov
mov
sub
jmp
sbb
lods
inc
inc
pusha
mov
fadd
sub
cmp
repz
stos
jl
pop
mov
sahf
imul
push
push
jle
dec
es
sahf
imul
int3
xlat
and
imul
cmp
fwait
mov
jge
jno
push
stc
jo,pn
mov
loope
mov
int3
push
cmpsb
lods
xor
jne
imul
dec
iret
inc
push
sbb
jno
add
adc
mov
or
aam
lds
cmp
or
inc
movsl
jmp
clc
push
popf
push
or
mov
aaa
mov
jle
jl
in
adc
data16
rorb
ds
and
adc
pop
mov
popa
push
inc
mov
sub
adc
ret
aam
je
out
inc
add
sbb
gs
gs
sbb
std
rorl
invlpg
adc
mov
cmp
or
lods
arpl
add
cltd
mov
cmp
jbe
push
mov
mov
cltd
push
outsb
gs
outsb
pop
and
mov
mov
outsl
adc
movsl
je
sub
fists
shlb
das
mov
jns
dec
cmp
movsb
jbe
pop
sbb
pushf
fnsave
mov
movsl
ljmp
xorb
cmp
cmc
mov
outsb
xchg
pop
mov
push
iret
mov
fwait
outsl
push
push
sbb
outsl
dec
inc
ja
mov
xor
out
and
or
mov
jl
ja
sub
std
xor
xchg
jl
sbb
push
cmova
sarl
adc
cmpsb
jae
stos
xor
sarb
in
jge
fwait
sbb
and
jae
mov
xor
adc
sbbb
fstpl
pop
scas
mov
xchg
xchg
push
adc
mov
aaa
pop
cmpsb
sbb
bound
mov
loopne
sbb
xor
sub
xor
inc
stos
lods
xchg
pop
pop
adc
fs
push
pop
sub
mov
popa
mov
test
ljmp
inc
cli
xor
mov
mov
std
xchg
lret
fmuls
mov
test
or
jae
adc
mov
je
cmp
lds
testl
call
subb
sub
js
adc
std
jmp
xor
and
push
pop
paddsb
lcall
insb
mov
sbb
add
orb
das
mov
lret
mov
sbb
cmp
add
ret
sbb
dec
inc
jne
cltd
fs
ret
mov
sub
andb
fdivl
aas
adc
test
sub
std
dec
pop
lods
dec
lock
std
aad
les
decb
xlat
and
repz
sub
cmpl
lock
dec
shll
lcall
daa
pop
stos
lret
aad
inc
pop
or
fmuls
mov
mov
ret
or
aam
add
pop
sti
cli
and
dec
mov
add
out
inc
mov
dec
movsb
outsl
fstps
push
xor
cmpl
push
rol
mov
in
lcall
or
mov
adc
rcll
aam
push
test
cmp
rclb
xor
scas
xchg
test
out
and
rorl
loope
jmp
xchg
jns
or
fdivrs
pextrw
cmp
mov
xchg
cld
dec
ja
outsb
push
push
pop
outsb
notl
sti
loope
lret
inc
xchg
shrl
adc
jo
xchg
test
jbe
or
faddp
push
cmp
test
frstor
inc
mov
mov
or
test
mov
cmc
pop
out
int3
lods
sub
inc
pop
push
push
push
mov
movsl
and
in
fs
mov
nop
jl
outsb
popf
das
xor
and
adc
pop
adc
loopne
mov
xchg
out
ficoms
mov
lret
fstps
lds
or
rclb
inc
stc
dec
mov
test
cs
mov
inc
and
inc
cmp
mov
ljmp
scas
pop
daa
divl
adc
es
add
cmp
data16
sub
or
adc
mov
mov
pop
dec
into
sub
pop
xor
outsb
add
mov
dec
xchg
jb
mov
out
lock
fs
enter
test
in
jo
sub
andb
sbb
ds
mov
sub
pop
mov
aam
pop
mov
jno
stos
loope
inc
test
xchg
pusha
std
mov
mov
and
and
int
gs
imul
xorb
jmp
test
int
fucomp
ljmp
loope
or
insb
es
xchg
and
pop
jo
adcl
andl
xor
add
loopne
std
sub
cmp
push
mov
out
leave
jmp
js
or
cwtl
sub
mov
add
cmp
xor
sahf
jp
sub
mov
sub
mov
cmpsl
push
testb
or
push
dec
mov
lds
mov
sti
jae
fmulp
iret
mov
arpl
sub
test
ret
in
adcl
mov
or
mov
test
clc
imul
pop
sub
lahf
lret
jp
sti
lds
dec
in
jg
cmp
repz
test
cmp
mov
insl
pop
jmp
in
lcall
inc
mov
imul
mov
push
xchg
add
xor
sarl
jae
jne
mov
push
dec
and
xor
cli
xor
cltd
inc
cmc
pop
ja
adc
int3
mov
pop
jp
scas
inc
mov
jge
adc
and
outsl
stos
shrl
dec
dec
mov
dec
inc
cmpl
cld
add
and
call
subps
jnp
or
dec
lcall
pop
test
jecxz
sub
aam
cmp
inc
cmp
rdpmc
shlb
xchg
push
scas
lock
cltd
movsl
out
insb
aad
in
fadd
and
add
adc
sub
jp
jle
adc
sbb
insb
xor
sbb
mov
test
pop
mov
in
sti
adc
lret
jbe
out
gs
iret
inc
lods
add
cwtl
js
roll
push
jecxz
push
sub
mov
cmpsl
pop
mov
push
mov
mov
insl
add
fsub
rclb
xor
mov
adc
ljmp
popa
rol
out
sub
sbb
xor
xor
dec
shl
int3
sahf
mov
adc
aad
add
pop
pop
movsl
hlt
sub
outsl
fcomip
mov
cmpb
jl
shrl
lds
sti
cmp
xchg
mov
inc
loop
rcll
test
xor
nop
out
out
xchg
cwtl
in
mov
idivl
jl
lea
shl
cmc
and
loope
divl
dec
scas
test
rorb
adc
xchg
push
icebp
repnz
out
stc
xchg
test
inc
mov
and
lock
movsb
lret
push
pop
add
inc
or
push
bound
sbb
stos
addr16
adc
pushf
call
in
dec
mov
aas
xchg
cmp
sub
xchg
xor
pop
adcb
lret
push
adc
jo
insl
out
jo
movsb
push
scas
or
mov
cld
push
push
scas
dec
loop
ret
popf
sbb
scas
mov
mov
jns
sub
jecxz
insl
rclb
inc
mov
cmp
jnp
push
dec
cmpsl
or
call
cmc
xor
enter
pop
and
cld
adc
or
stos
popa
and
test
pop
pusha
repz
and
mov
dec
pop
nop
fdiv
cs
or
adc
jae
mov
mov
test
pop
cmpsl
hlt
aaa
push
jecxz
movsl
and
jmp
push
outsb
bound
jmp
sub
call
mov
outsl
in
ljmp
fldt
in
scas
ja
outsb
nop
inc
inc
sub
cld
sbb
xchg
lret
imul
mov
stc
mov
in
or
jmp
loop
push
jno
cmc
adc
add
fisttps
xor
pop
mov
cmpsl
cmp
pop
add
fcompl
xchg
out
mov
cmpsb
jp
je
scas
repz
and
pusha
mov
pop
jns
ja
imul
xchg
lahf
aam
ret
mov
adc
in
cmp
or
test
test
decb
cmpsb
addr16
daa
ret
cmpb
mov
add
cmp
call
cld
xchg
mov
movsl
push
mov
stos
lock
push
mov
adc
sarl
out
mov
inc
adc
pop
popf
mov
mov
dec
std
jmp
lcall
push
iret
into
and
adc
or
jl
dec
subl
adc
mov
mov
xor
cltd
in
cmp
cmpb
cli
popa
gs
mov
or
xchg
pop
loope
dec
scas
push
hlt
cltd
into
dec
mov
jne
adc
mov
dec
inc
add
test
aas
mov
js
lods
cmp
push
rolb
pushf
and
jne
repz
out
fs
mov
clc
sub
xor
mov
cmpsl
insl
inc
inc
mov
pop
insl
sarb
inc
jnp
mov
sti
fisttpl
je
loopne
rclb
pop
imul
fldt
pushf
andb
xchg
jmp
cltd
clc
xor
or
loopne
movsb
mov
mov
sbb
arpl
std
roll
or
xor
sub
push
fstps
jns
inc
pop
adc
es
or
mov
test
mov
dec
fidivrl
and
jno
jnp
fnstcw
ljmp
ret
add
test
inc
das
add
aaa
movsb
fidivrs
andb
cmpsb
out
cld
std
hlt
hlt
and
xor
test
pop
das
xchg
nop
xor
adcl
add
inc
pusha
xchg
xchg
pop
pcmpgtw
mov
xorb
stos
sahf
fisubrs
sbb
or
cwtl
int3
adc
cmp
ret
cmp
out
int
or
xor
mov
xor
sub
nop
jnp
cmpb
test
daa
and
adc
pop
sbb
mov
jg
cmp
popf
xor
mov
fst
stos
jne
test
adc
cmp
insb
rorl
inc
lea
jl
mov
jne
xchg
arpl
push
fsubr
arpl
in
mov
loopne
jo
negb
cmpsb
xlat
push
pop
and
push
mov
hlt
sub
das
dec
cmp
push
xor
imul
shll
dec
xchg
cs
sbbb
out
iret
xchg
and
mov
arpl
push
sbb
pusha
jb
lahf
loop
push
xchg
dec
mov
incb
mov
cmc
xchg
cmp
outsb
and
dec
sbb
ljmp
sub
stos
js
in
int3
cs
daa
cltd
insb
mov
stos
pop
lcall
mov
in
jecxz
jg
dec
shlb
pop
aad
test
clc
or
xor
xchg
xchg
in
inc
mov
sbb
jge
shll
push
or
cmpb
popf
push
jb
mov
stos
sbb
push
xchg
xor
jmp
dec
out
repz
js
stc
lods
mov
shll
mov
lock
rcrb
insl
push
addb
sub
ret
sub
pusha
mov
add
and
or
iret
adc
pcmpgtd
scas
sti
inc
sub
sbb
out
push
inc
sub
pusha
dec
cmp
mov
loop
lock
adc
sbb
fiadds
insb
jae
inc
cmpsb
test
sti
cmp
adc
sub
xchg
and
lret
dec
mov
cmp
es
lds
inc
cmpsl
xor
rclb
xchg
inc
lret
test
jb
inc
jg
daa
arpl
stos
and
inc
ljmp
cltd
jecxz
push
jo
push
fiadds
dec
cmpsb
xchg
aaa
roll
cmp
out
fnsave
sarb
fiadds
psrlw
repz
dec
mov
jne
fcomps
xchg
adc
xor
xor
sub
popa
mov
lock
add
aaa
les
cld
cltd
inc
push
outsl
bound
adc
sbb
inc
lcall
lret
or
data16
je
xor
xchg
or
cmp
call
fildll
daa
adc
fs
cmpl
xchg
hlt
lods
scas
das
into
pextrw
pop
imul
frstor
fimull
sub
push
sbb
fbld
sbb
push
cmp
xchg
fwait
pusha
sbb
movsb
loope
jle
data16
mov
imul
or
es
insl
ss
xchg
jb
and
iret
stc
dec
out
xchg
and
dec
aaa
inc
dec
sarb
movsl
cmp
xor
sbb
fs
movsb
sbb
pop
out
rcl
xor
lods
or
sbb
stos
shll
mov
push
aam
pop
push
inc
inc
cmpsb
ja
sahf
cmp
insb
enter
ja
pop
mov
inc
out
sub
aad
cli
scas
pop
pop
in
insl
popa
out
cld
xchg
mov
popf
shll
xorb
into
pusha
mov
outsb
cmc
pop
fisubrl
mov
cmp
clc
mov
shlb
out
pop
jne
mov
dec
pop
popf
movsb
imul
in
mov
fmull
int
popf
sbb
popf
je
stos
stos
cmp
inc
mov
or
je
jecxz
cwtl
jae
jl
dec
mov
sahf
pushf
dec
lods
scas
loopne
sbb
push
xchg
popa
ljmp
xchg
rcrb
in
shll
inc
lcall
mov
mov
clc
sti
cmpsl
cmp
mov
xor
popf
test
ret
outsb
test
out
aas
jo
fwait
ljmp
test
or
mov
and
mov
lret
cs
data16
dec
loop
fldenv
and
xchg
clc
push
popa
mull
addr16
jns
pop
sub
adc
std
xor
sub
sbb
dec
pop
fldt
leave
fnstenv
pop
aad
call
jns
mov
pusha
hlt
pop
push
sbb
flds
rolb
lcall
ja
data16
xchg
jo
mov
adc
pop
sbb
cmp
scas
outsb
dec
push
lret
lcall
sbb
pop
jg
std
push
xchg
dec
test
jle
push
outsl
int3
pop
and
xor
push
mov
pushf
inc
cmp
div
xorl
jg
es
push
lret
fdivr
iret
jae
cld
je
sbb
aad
insl
mov
xor
jne
ret
out
sbb
mull
inc
and
jns
sbbl
out
testb
mov
dec
fsubr
push
adc
jmp
cmp
iret
mov
lcall
xor
dec
ds
icebp
xor
das
popf
push
xchg
push
lods
jbe
cmp
loop
dec
cmp
cwtl
pop
add
repnz
pushf
sub
cmp
lea
in
inc
int
adc
mov
xor
sbb
xchg
push
nop
cmp
arpl
lods
clc
push
jmp
es
xchg
les
test
ret
push
push
sbb
popw
movsb
jbe
jae
mov
dec
sub
aas
repnz
xchg
outsl
roll
pop
rolb
repnz
lret
pop
mov
fsubrl
sub
mov
jb
hlt
inc
outsb
out
mov
test
mov
and
inc
addr16
or
cmp
sub
jmp
fwait
arpl
in
cwtl
adc
lahf
inc
mov
sbb
test
pop
push
clc
add
int3
in
cmp
imul
jge
dec
mov
and
jl
and
lret
dec
sbb
sub
adc
outsb
rorb
fists
cmp
jle
adc
dec
cmpsl
arpl
mov
push
mov
lcall
xchg
xchg
ss
gs
add
scas
dec
insl
dec
cld
nop
stos
xchg
cwtl
aaa
cmp
lods
mov
mov
push
insl
dec
pop
pushl
jg
in
inc
mov
leave
pop
add
popa
mov
fdiv
lock
jns
push
mov
sbb
or
in
jnp
push
xchg
popa
roll
out
inc
test
mov
in
sbb
pop
popf
dec
repz
popf
jg
xor
out
cmp
add
xor
faddp
push
jg
stc
jo
test
push
adc
fldt
leave
out
pop
adc
test
fdivs
adc
jmp
jne
nop
mov
jg
push
add
push
sbb
lret
ljmp
inc
mov
adc
shr
repz
adc
mov
push
mov
push
fwait
lock
xor
xchg
xor
jno
ret
insb
jge
mov
cwtl
sbb
int3
sub
xor
pop
add
and
cmp
inc
xorb
pusha
adc
addr16
sbb
pop
xor
fidivs
stc
cmpl
sti
stos
dec
rolb
jae
cmpsl
out
pop
icebp
call
pop
fsubrp
scas
lcall
cmc
xor
ret
add
push
js
mov
mov
daa
inc
test
outsb
xchg
xchg
int
cmpsl
sub
mov
fildl
data16
or
fildl
xadd
ljmp
inc
fs
xchg
cmc
sub
inc
mov
mov
ret
repnz
adcb
cli
cmp
imul
mov
cltd
mov
sbb
insb
arpl
xchg
sti
int3
mov
fnstenv
insb
push
bnd
jle
iret
repnz
cmpsb
pop
pop
jne
jae
pop
add
inc
pop
mov
dec
xor
push
mov
push
sbb
dec
inc
aas
mov
and
xor
push
movsl
push
add
sbbb
lcall
inc
sub
sub
push
pop
data16
pusha
adc
push
pusha
xchg
mov
mov
sub
and
jb
sbb
jns
dec
pop
mov
cmp
cmp
lea
ja
clc
sub
ds
add
das
fiadds
push
std
inc
lods
pop
sbb
in
aam
jno
psubd
adc
cwtl
ficomps
int3
lea
cmp
jp
loop
xor
and
cli
cmp
xor
and
xchg
cmp
and
mov
scas
imul
xchg
pop
cmpsb
inc
mov
icebp
sub
imul
sub
dec
popf
dec
addr16
push
dec
adc
xchg
and
jnp
pop
in
aaa
push
xchg
pop
jp
mov
xchg
jecxz
mov
loope
mov
mov
shlb
scas
cmp
or
xchg
adc
inc
sub
loopne
jmp
fisttps
xchg
imul
xor
push
cmpb
shll
or
xor
cmp
or
or
pop
insl
mov
pop
mov
jecxz
aam
jae
scas
in
mov
rolb
mul
and
jp
adc
cltd
scas
rcrb
xor
add
stc
and
adc
push
lds
fdivs
in
bnd
mov
cld
testb
fs
fidivs
insl
ret
push
lahf
cmpsb
sahf
mov
repz
cmp
hlt
enter
push
test
cmp
in
jp
push
sub
dec
in
dec
dec
pop
adc
jge
fdecstp
sub
inc
stos
jns
or
mov
adcb
push
dec
divb
das
testl
std
cmp
loopne
lret
cmpsl
ss
jle
push
mov
xchg
xchg
sub
aaa
pop
insb
data16
ret
aad
push
in
loope,pt
sub
adc
jne
inc
mov
fnstenv
or
adc
adc
mov
xor
lea
add
je
or
inc
jge
mov
stc
adc
push
fildll
xchg
data16
in
xor
fdivl
movsb
sub
and
shl
fsts
or
xor
ficompl
cmpsb
sbb
sbb
divb
shl
or
fidivrl
in
in
inc
out
sbb
xor
cmp
imull
lock
and
fists
xchg
addr16
ljmp
dec
mov
repnz
das
or
xchg
mov
xchg
add
loop
stos
jl
pop
xchg
testl
jb
cmp
sbb
dec
mov
mov
inc
les
push
lds
dec
xor
or
pop
cltd
jbe
sbb
pop
loopne
cs
outsb
jmp
pop
sbb
cwtl
cli
fistpl
in
test
adc
or
mov
xor
dec
aas
test
inc
arpl
aam
sub
mov
and
cwtl
arpl
andb
ja
add
nop
adc
mov
sbb
jns
dec
call
pop
xchg
addr16
stos
cmp
sub
sbbl
push
xchg
or
dec
es
jno
jno
xlat
in
pop
adc
aaa
stc
in
loopne
in
adc
fidivrs
icebp
ds
lahf
jnp
adc
fldl
mov
cmp
shll
xchg
or
dec
lea
sbb
mov
adc
xor
pop
push
aad
loope
adc
mov
or
hlt
in
sbb
loopne
xchg
mov
stc
hlt
pop
aad
in
cltd
enter
shlb
sub
sbb
pop
pop
ret
pushf
fsub
push
xor
stos
mov
dec
mov
pop
js
ss
xchg
dec
ds
or
cs
mov
push
addr16
enter
or
adc
xchg
cmc
xchg
test
add
xor
xor
mov
movsb
dec
jno
jns
push
or
lahf
cmpsb
notb
dec
sti
mov
inc
imul
in
mov
inc
filds
and
imul
jbe
pop
enter
xor
and
push
mov
cmpsb
idivl
inc
push
xchg
fwait
das
jns
xor
mov
adc
adc
and
xor
pop
dec
dec
push
popa
jbe
mov
sub
inc
sub
in
stos
ljmp
addr16
movss
fwait
jbe
jb
or
xchg
push
enter
pop
push
pop
je
ret
mov
dec
xor
test
jns
fwait
jge
mov
ljmp
mov
cmp
das
xchg
fsubrp
punpckhbw
es
mov
push
fs
inc
mov
xchg
out
gs
loopne
pop
mov
cmovbe
lret
dec
mov
pop
lock
call
jne
sub
xchg
inc
inc
cmp
movlps
inc
cmp
rcrb
mov
out
hlt
insb
or
sub
mov
scas
add
jne
push
gs
daa
mov
cs
dec
inc
cltd
and
add
int3
xor
cmp
imul
icebp
ljmp
mov
ds
pop
hlt
xor
xchg
mov
das
jne
in
dec
lods
pop
mov
pop
sub
mov
std
mov
out
ss
adc
test
xchg
imul
mov
dec
enter
std
stos
shlb
mov
ds
mov
pusha
sub
dec
hlt
data16
je
or
jo
xor
pop
or
xchg
pop
xchg
jae
pusha
or
mov
sbb
dec
pop
lods
xchg
inc
je
and
out
sti
icebp
mov
or
aaa
add
nop
xchg
pop
fs
lahf
xchg
shr
js
scas
inc
cltd
enter
mov
cld
into
loop
mov
xor
push
xor
fdivs
inc
dec
pop
jmp
mov
xchg
mov
and
fldl
push
mov
loope
scas
sub
icebp
cmp
cmpsl
out
test
nop
jo
push
xchg
lcall
jbe
fincstp
xchg
imul
lret
outsl
jg
pop
cmp
cmpsb
mov
or
loop
push
repnz
out
icebp
inc
mov
dec
test
dec
std
rol
ss
jl
jmp
pop
aas
imull
pusha
imul
stc
and
lds
and
or
int
notb
out
pop
lcall
and
pop
rorl
out
out
outsb
pop
cwtl
push
aaa
lds
push
sti
sbb
lahf
jl
jo
leave
push
mov
and
mov
sub
push
mov
nop
ljmp
scas
lcall
or
lret
mov
push
adc
push
xchg
adc
inc
mov
and
icebp
stc
in
js
add
xor
ja
test
sqrtps
mov
fs
sbb
call
addr16
outsb
jno
cwtl
push
mov
out
adc
dec
mov
and
xchg
fisubrl
js
imul
movsb
in
fmulp
pop
cli
or
or
movsl
or
xchg
jns
and
dec
std
jb
add
inc
sbb
jecxz
mov
movsb
dec
push
iret
insb
mov
push
test
fwait
sbbb
mov
lret
mov
daa
ds
scas
fwait
add
in
xor
jg
pusha
test
jmp
sbb
sbb
mov
or
adc
jl
dec
scas
mov
daa
and
xlat
icebp
cmp
jl
sub
adc
test
in
cmc
in
jns
repnz
jmp
mov
xor
mov
dec
mov
into
idivb
fistps
dec
out
jmp
shl
pusha
and
imul
inc
lret
mov
adc
fsts
inc
mov
lret
dec
enter
sbb
insb
cmp
add
sahf
pop
and
lcall
pop
cmp
std
sub
sub
dec
jb
mov
or
add
jmp
inc
lock
nop
jae
pop
nop
jbe
jg
in
clc
jno
out
js
dec
add
pop
mov
mov
push
pop
mov
add
cmp
dec
les
aam
cli
rcll
incb
push
pop
cwtl
aad
mov
scas
mov
mov
shl
inc
imul
ss
cmp
adc
cli
cmc
mov
lock
push
and
icebp
lods
adc
sub
mov
dec
xchg
movsl
cld
imul
aad
cld
hlt
mov
test
xorl
jmp
jbe
and
bound
decb
sbbb
jl
int
dec
jp
dec
mov
push
hlt
xor
out
jne
cmp
lods
leave
mov
daa
xchg
movsb
or
jno
lret
nop
jg
lock
lahf
gs
daa
sub
push
fisttps
push
stc
pop
adc
and
pop
ds
loop
push
xor
jl
xor
out
mov
popa
aaa
mov
add
fnstcw
mov
insl
test
xchg
add
mov
imul
xchg
sbb
xor
mov
sub
fsub
sub
scas
shll
pop
mov
hlt
fyl2x
and
dec
inc
incb
xchg
sub
cs
add
insb
xor
movsl
xchg
push
xchg
mov
es
cmp
add
pop
das
adcb
pop
mov
inc
out
sbb
sbb
jo
pop
cmp
mov
cmc
ljmp
sub
lahf
adc
shll
add
inc
cmpsl
xchg
sub
mov
jb
or
lods
les
mov
cld
jmp
jb
xchg
jg
adc
fiadds
call
sahf
pop
gs
inc
aam
sub
xchg
mov
pop
push
out
call
cmpsb
jno
mov
cs
outsl
adc
and
rol
xchg
add
xchg
mov
mov
mov
push
xchg
mov
and
inc
mov
ljmp
xchg
popa
pushf
or
adc
cld
xchg
add
sbb
fisttpl
adc
jbe
mov
and
or
loopne
in
gs
pushf
sbb
es
sbbb
dec
push
mov
push
repnz
loope
mov
add
sub
sbb
and
dec
mov
inc
cmpsl
imul
jo
dec
in
xchg
arpl
xor
xor
mov
cwtl
popf
int3
xchg
int
inc
jnp
test
pop
mov
stos
and
icebp
push
cli
and
lods
iret
lcall
popf
pop
or
pop
dec
jecxz
push
mov
dec
mov
sahf
or
mov
test
xchg
xlat
icebp
xor
or
push
pop
push
imul
adc
dec
dec
das
test
pop
xorb
iret
xchg
loop
pop
push
mov
xchg
pop
cmp
daa
and
jge
mov
cli
mov
int3
adc
jmp
cld
lock
sbb
in
ja
mov
adc
push
inc
dec
idivb
mov
lahf
imul
or
sub
jge
lret
out
hlt
mov
test
mov
inc
int
ds
pop
cmc
or
lods
in
push
jne
out
xor
jmp
xchg
push
and
cli
stos
inc
es
stos
sbb
in
cld
add
mov
ret
cmc
test
jb
mov
and
sti
add
jne
and
insb
fnstenv
cmp
jne
shlb
or
inc
test
push
jle
mov
mov
pop
leave
mov
in
andl
pop
ja
and
aaa
xchg
mov
or
popf
fadds
lock
mov
cmc
sbb
jnp
xor
cmp
in
out
xchg
popf
mov
out
xor
and
stos
fucomip
add
and
nop
push
outsb
push
hlt
sbb
out
or
mov
sbb
shrb
jo
mov
jl
insb
jge
xor
in
push
inc
xchg
rclb
lds
stc
cmp
mov
mov
rcl
ds
fnstenv
cmp
xor
notl
outsb
or
and
in
ret
int
clc
andb
pop
pop
xor
lock
add
dec
int3
ret
ljmp
add
pop
add
xor
inc
loop
fcoms
clc
test
lods
jecxz
and
or
cltd
ds
dec
rcll
xchg
mov
jg
dec
inc
lods
daa
cmc
mov
fnstcw
fwait
lock
orl
mov
jo
mov
xor
adc
xor
repz
rcll
mov
inc
lods
rorb
inc
push
hlt
shrb
jp
sahf
xor
enter
inc
int3
dec
cmpsl
mov
pop
add
push
mov
push
sub
sti
shlb
lock
ss
cmp
out
jo
lock
setnp
jg
push
xchg
mov
rep
inc
cmp
popa
and
adc
clc
clc
pushaw
je
cld
mov
stos
mov
cltd
jnp
dec
data16
xchg
dec
bound
cmp
pop
inc
mov
mov
ficoms
push
mov
inc
xchg
or
inc
sti
xchg
mov
inc
or
lret
rcrb
mov
subl
mov
orb
fidivrs
loopne
insb
mov
ror
imul
cwtl
repnz
mov
aaa
rclb
out
lods
xchg
out
inc
adc
jnp
int
pop
imul
cmpl
fwait
jl
test
push
sub
fs
imul
or
xor
mov
loope
adc
mov
xor
rcrl
mov
ret
or
jp
test
subl
push
ret
mov
lret
jp
dec
int
lock
sar
push
adc
mov
cmpsl
jb
jge
jne
and
out
mov
mov
pop
jbe
mov
xor
imul
lret
shlb
sub
add
out
ss
into
popa
jmp
fsubrs
jl
inc
aad
xchg
lds
cmp
mov
mov
stos
fistpll
mov
jb
leave
lds
mov
loop
push
add
iret
mov
adc
insb
iret
mov
add
jo
mov
mov
data16
outsb
movsl
sbb
lret
mov
clc
imul
sar
inc
daa
mov
aas
adc
xchg
rcr
pop
inc
je
loop
xor
add
jo
or
adc
dec
int3
cmc
rorl
dec
pop
pop
aam
cmp
lds
stos
xchg
out
xor
gs
cmpsl
xor
je
mov
test
pop
cmpsl
or
stc
out
das
pop
aas
sti
jl
shr
mov
cmpsl
cmp
fadds
enter
in
daa
fs
pushf
cmp
inc
xchg
dec
incb
movsl
shlb
mov
push
add
in
fcmovnu
xchg
jnp
lods
jp
popa
adc
dec
cmp
in
insl
pop
cmp
add
cmp
jae
mov
sarl
xor
sub
pop
arpl
inc
pop
xor
cltd
jns
je
enter
adc
popa
inc
xchg
inc
repnz
mov
sub
sbb
std
shrl
xchg
dec
mov
xchg
into
fmuls
xchg
xor
or
dec
ret
pop
daa
mov
shll
adc
imul
les
xchg
and
or
aaa
or
scas
adc
mov
xorb
aam
lcall
push
movsb
movsl
cmpsb
aad
sub
push
idiv
enter
jmp
lcall
std
cmpsb
jne
stos
pop
or
jns
idivb
xchg
hlt
mov
pop
stc
jmp
sahf
div
popa
mov
xlat
mov
repnz
leave
cmp
pushf
mov
mov
xor
scas
sbbl
sbbl
pushf
into
sub
xor
loop
mov
and
sti
cmp
sbb
in
mov
adc
add
inc
add
movsb
es
cmpsb
cmp
faddp
push
nop
dec
dec
mov
xor
lods
imul
test
jne
lea
gs
into
scas
fnstcw
cs
push
inc
add
adc
hlt
inc
mov
andl
add
dec
sbb
loop
pop
or
or
mov
cmp
icebp
push
js
jecxz
pop
bound
xor
jp
ss
ljmp
rcl
add
xor
pop
addr16
mov
or
mov
cld
cmp
inc
mov
cmp
dec
and
aam
test
iret
lea
ljmp
sub
mov
outsb
xor
insb
xchg
mov
mov
xor
push
add
cli
jmp
ret
cltd
and
sbb
icebp
in
and
mov
jg
xchg
dec
xor
mov
loop
test
lods
insl
or
dec
xor
xchg
addr16
push
or
fucomi
insb
in
jo
mov
push
dec
ret
cwtl
ret
popa
pop
outsl
xor
shlb
movb
imul
shlb
sbb
std
aam
cmp
jle
push
sbb
push
jl
mov
dec
push
fstpl
fstpl
pop
jns
popa
cltd
jb
jb
dec
aaa
and
and
jae
testl
add
in
cmpsl
imul
mov
in
adc
iret
popa
mov
cmp
inc
shlb
mov
pop
dec
fwait
pop
daa
sti
insb
mov
xor
mov
mov
andb
cmp
mov
rcl
cs
mov
inc
adc
loopne
ret
ret
in
nop
aam
mov
push
das
imulb
scas
jmp
dec
add
mov
pop
jns
repnz
test
jge
add
scas
stc
fmuls
inc
ds
inc
mov
pop
fsubs
pop
xor
ss
dec
mov
mov
dec
pop
cmp
sti
mov
mov
xchg
iret
imul
cwtl
push
inc
and
imul
or
int3
pusha
mov
aam
push
addb
jae
test
faddl
repnz
jmp
aas
ljmp
lahf
fwait
mov
add
push
sub
cli
pop
adc
lock
or
inc
test
out
mov
jle
adc
outsl
xor
sbbb
fwait
movsl
cmp
adc
repz
push
push
scas
ljmp
xor
mov
pushf
adc
in
in
test
inc
xchg
out
outsl
jmp
push
sbb
mov
push
outsl
inc
nop
mov
push
mov
and
xor
lahf
xor
sub
lahf
cmp
mov
data16
mov
add
push
push
jbe
inc
xchg
cmpsb
loopne
lock
xor
ret
nop
fmull
in
sti
pushl
sahf
insb
or
cmpsl
out
call
enter
cmpl
push
sub
cwtl
les
cmp
std
add
repnz
movsl
mov
ljmp
addr16
xlat
cmp
mov
ficoml
outsl
lods
in
jp
mov
or
xor
xchg
daa
adc
daa
es
pop
aad
lock
sbb
push
xor
in
in
arpl
out
mov
xor
movsb
dec
lcall
sub
lret
cmpsl
js
movb
inc
test
fdivrs
mov
and
dec
test
push
lock
ss
into
lcall
pop
sahf
subl
cli
lret
dec
shlb
cwtl
mov
cmc
adc
icebp
setno
lahf
dec
movsl
ret
call
cmpsb
stc
jmp
out
lret
jp
out
lcall
jbe
dec
in
cmp
xor
je
mov
mov
add
and
mov
mov
jns
mov
xor
loop
xchg
inc
mov
sub
arpl
or
aas
xor
add
sti
jb
dec
iret
shrb
mov
jl
mov
in
int3
push
cltd
popf
in
push
xlat
js
or
cld
push
mov
cld
div
jo
pop
lcall
daa
fbld
movsb
and
test
push
scas
stos
mov
jo
add
cmp
adc
inc
mov
push
fistl
iret
xor
es
rcll
fldcw
add
mov
or
verr
mov
decl
loopne
movsl
insl
mov
mov
les
and
sti
xchg
pusha
scas
add
adc
mov
adc
jb
cmc
fsubrl
pop
sub
xor
sarb
dec
cld
sub
lods
and
xchg
dec
sete
dec
cmp
lods
stos
mov
je
pop
push
aad
jae
add
push
mov
and
scas
test
and
jnp
fildl
inc
inc
jae
inc
push
mov
lret
das
jb
out
fstpt
fidivrs
iret
das
popf
cmc
decb
popa
and
mov
inc
cmpsl
jbe
xchg
pop
sbb
das
loope
xchg
sub
push
arpl
xor
sbb
test
pushf
stc
jg
mov
or
outsl
rcll
push
inc
lret
ja
sbb
push
mov
xchg
les
aam
setbe
cld
push
push
or
mov
xor
sbb
movsl
scas
andl
mov
mov
das
sahf
dec
mov
pop
inc
inc
outsb
pushl
outsl
or
jbe
repnz
data16
lock
jmp
insb
jno
xchg
test
call
push
push
mov
inc
push
ss
imul
mov
mov
and
mov
jnp
xor
ja
fdivrp
xchg
pop
xchg
sbb
in
dec
outsb
loopne
xchg
mov
fmuls
cmp
mov
push
inc
rolb
vpcompressw
leave
inc
test
push
pop
insb
out
cli
js
stos
ret
sbb
push
addb
ljmp
pop
add
jo
xchg
or
aad
daa
and
mov
sub
test
mov
sbb
cld
fnstenv
std
shrb
xor
mov
xchg
leave
mov
jb
hlt
xor
inc
ret
push
xor
fistpl
jb
es
testb
int
fldcw
pop
mov
test
cmpsb
adc
jb
cli
loope
in
sarl
hlt
mov
adc
push
out
pop
mov
divb
inc
pop
cli
out
scas
mov
sbb
push
fldenv
std
cmpl
dec
lret
aaa
cmpsb
mov
test
hlt
inc
leave
fdivs
fcmovb
rcll
mov
sub
jae
scas
hlt
push
repz
xchg
es
dec
out
mov
fwait
pushf
cmp
les
inc
or
out
sbb
jecxz
leave
lds
add
clc
jae
hlt
or
cmp
popf
stc
cli
xchg
bound
insl
dec
and
xchg
mov
cld
pop
out
rcl
pop
jb
incl
lock
fmulp
or
in
jns
xlat
jg
rol
repnz
xchg
mov
or
dec
add
jno
rol
jmp
out
xor
mov
stc
jbe
outsb
pop
sbb
mov
movsl
xor
sbb
inc
ss
or
pop
sarl
sub
mov
icebp
out
movsl
jmp
adc
push
pop
or
test
enter
and
int
nop
fidivrl
push
dec
xchg
test
ficoms
stos
push
sti
inc
jmp
ja
or
jg
pop
mov
add
in
push
push
sub
shlb
and
rcll
jge
insl
ret
push
cmpsb
cltd
es
or
stos
aam
jge
pushf
in
adc
sti
out
adc
outsl
sub
neg
jnp
push
jmp
imul
pop
adc
int
xlat
mov
out
add
cmpsl
mov
sar
lret
mov
inc
popa
mov
mov
ja
outsb
fisubrs
jae
mov
sub
push
jmp
dec
xor
push
and
jecxz
les
out
mov
popf
ficoms
add
orb
sti
or
xchg
icebp
pop
ds
or
mov
out
clc
mov
sub
repz
scas
adc
sub
sbb
mov
dec
add
xorb
and
orb
jp
pop
rcrb
mov
sbb
and
repnz
sub
popf
dec
adc
add
xchg
and
ret
add
pop
loopne
fisttps
sbb
mov
arpl
or
inc
dec
and
mov
and
sar
xor
arpl
aam
arpl
pop
sahf
sbb
inc
xor
stos
aas
jmp
jns
mov
test
add
pop
mov
mov
jno
push
out
jae
dec
insb
fldcw
stos
fs
out
and
imul
adc
stos
dec
mov
test
push
cmp
lods
push
cli
sbb
jmp
dec
fisttpl
shll
pop
push
out
sahf
jns
jno
in
mov
fists
lock
push
lods
xchg
push
or
adc
enter
jbe
cs
stos
movsb
cmp
add
loope
push
cs
add
push
mov
sub
pop
mov
fidivrl
lahf
adc
pushf
xlat
leave
lea
mov
fwait
push
cmp
cmp
imul
iret
mov
dec
add
xchg
scas
and
out
cmp
mov
pop
sti
adc
mov
sub
xchg
or
sub
or
mov
stos
lock
xor
nop
les
jno
mov
sbb
pop
addr16
or
ds
stos
or
adc
xchg
mov
push
jecxz
scas
mov
pusha
cmpsl
inc
adc
jb
mov
adc
and
sbb
cmpsb
adc
inc
mov
iret
add
dec
ds
dec
jbe
shrb
inc
lcall
cmpsl
sub
sub
pop
icebp
xchg
or
xor
cmpsb
xchg
jae
adc
mov
gs
mov
jb
out
das
lds
cmp
push
lods
lcall
sti
adc
sahf
test
inc
and
fimull
fldcw
pop
pop
jns
clc
xchg
fists
fistps
repnz
or
insl
out
xor
aas
outsl
out
jg
je
les
mov
push
inc
xchg
adc
mov
mov
jae
sub
inc
lret
dec
adc
inc
data16
pop
or
call
pop
jmp
fidivs
enter
pop
std
adc
mov
jo
cs
mov
ljmp
std
push
mov
out
mov
repnz
cmp
repz
inc
push
mov
adc
stos
pop
pop
or
jmp
dec
out
into
sbb
iret
cmp
lods
clc
popa
mov
cmp
adc
in
sbb
bound
sub
cmp
xchg
mov
shr
addr16
fcoms
jae
push
push
mov
push
mov
outsl
pop
out
xlat
iret
push
dec
es
mov
fucomi
leave
jg
loop
gs
jp
int3
sti
jmp
sbb
xchg
enter
jnp
sub
lret
adc
lcall
push
fcmovnu
dec
dec
shr
xchg
cmp
mov
push
div
aad
wbinvd
inc
sbb
pop
mov
ljmp
sbb
fsubrs
jl
sub
mov
enter
sbbl
stos
push
out
xlat
xchg
clc
les
lret
aam
test
push
aam
lock
rcl
or
pop
mov
jmp
mov
fabs
push
addr16
je
je
inc
inc
iret
dec
inc
movsb
xorb
sub
enter
push
lods
xor
xchg
and
xor
mov
cmp
pop
out
or
test
es
push
pop
adc
mov
dec
mov
sbb
aad
insb
ret
cmp
inc
or
inc
cmpb
jno
sbb
sahf
in
mov
out
jb
nop
and
xchg
jo
test
shll
test
stc
sbb
inc
pop
addl
and
inc
lahf
push
clc
inc
push
dec
roll
mov
int
lret
push
shlb
push
loope
loop
jmp
cmp
or
js
leave
inc
add
jbe
mov
jbe
dec
and
test
add
mov
sbb
and
jns
sbb
je
je
and
rclb
stc
movsb
sbb
push
push
xor
jae
add
imul
add
rcrl
push
jns
inc
movsl
mov
and
movsb
jle
leave
cmp
notb
loope
mov
das
mov
jbe
mov
movsl
lods
push
and
divps
arpl
jl
mov
xor
jp
push
xchg
stos
xor
or
in
adc
xchg
fdiv
cmp
inc
in
mov
adc
hlt
test
and
fidivl
push
jle
lret
pop
fstpl
fwait
inc
jns
stc
rorl
imul
and
xchg
or
rdmsr
sti
lcall
fildll
pop
outsl
sub
add
mov
cmc
mov
mov
xchg
sub
cmp
imul
add
and
fistl
and
inc
sub
leave
inc
shlb
bound
mov
int3
cmp
fstpl
mov
ss
jge
popf
aad
jl
rcrl
xchg
cld
push
enter
sub
hlt
and
jmp
xor
mov
adc
into
jp
mov
outsb
pop
mov
sbb
movsb
xchg
fninit
mov
mov
and
mov
outsl
adc
pop
rolb
daa
lods
jecxz
daa
push
scas
je
or
push
daa
mov
mov
nop
into
stos
popa
mov
js
add
jb
xchg
or
daa
scas
mov
pop
ret
pop
movsb
or
movsl
daa
push
aad
or
outsb
int
cwtl
cmpsb
cwtl
dec
sub
and
out
aas
lea
or
mov
jge
sbb
es
sbb
test
and
test
mov
push
add
and
dec
pop
push
int3
jecxz
repz
shlb
test
bound
inc
gs
pop
mov
push
js
imul
nop
rcll
jle
add
daa
xor
inc
or
and
add
cmc
sbb
xchg
lods
pop
fiaddl
in
add
pusha
mov
pop
cld
or
sbb
inc
imul
pop
sub
xor
out
sub
xor
cwtl
push
in
fs
sarb
js
pop
fcmovu
mov
and
repnz
inc
sub
in
cli
pop
fwait
mov
jmp
add
xor
movsl
test
pop
popf
or
clc
aam
fnstenv
mov
mov
pushf
clc
dec
mov
stos
rorl
xor
mov
push
and
adc
mov
and
mov
fcompl
lahf
addr16
clc
jle
sub
pop
fcoms
and
pop
adc
fdivl
jno
mov
jg
adc
adc
orb
cmp
in
loopne
jo
aaa
xchg
js
adc
orb
hlt
mov
fstl
mov
adc
dec
push
xchg
stos
xchg
imul
adc
inc
and
inc
test
inc
jno
lods
mov
push
jge
call
mov
pop
cmpsb
pop
push
pop
ss
mov
xor
xchg
es
js
and
mov
pop
in
iret
rolb
lods
xchg
jne
dec
cmp
mov
pop
or
ljmp
mov
push
out
add
out
sbb
test
and
pop
lret
les
pop
bswap
test
jg
push
pop
inc
lods
inc
mov
cmpsl
loope
mov
test
dec
pop
cld
jecxz
push
shl
adc
jl
xchg
dec
mov
mov
fstpl
cmp
sub
push
outsl
cmpsl
or
enter
sbb
icebp
dec
sub
sbb
add
inc
mov
jbe
adc
dec
lahf
cld
imul
cwtl
arpl
movsb
gs
inc
dec
int
jnp
sub
in
xor
js
xor
out
mov
mov
lods
xor
imul
lret
mov
mov
shrl
xchg
fnsave
cmpsb
leave
mov
bound
jge
mov
sub
inc
xor
add
inc
mov
pop
std
sub
mov
or
mov
sbb
add
xchg
addr16
cmc
sub
push
adc
mov
mov
cwtl
cli
sub
add
in
daa
push
jecxz
pop
mov
lret
jmp
xchg
add
xchg
movsb
or
stos
mov
daa
pop
add
or
in
push
cli
adc
jb
into
lods
sbb
daa
fld
pop
ret
jl
push
add
fisubs
aam
mov
or
nop
in
push
leave
push
std
pop
lret
mov
rclb
adcl
adc
test
sbb
cmp
fsub
push
icebp
divl
roll
pop
repnz
xor
lock
mov
mov
pusha
popa
mov
outsb
insb
dec
inc
inc
jp
and
and
das
mov
fmull
idiv
sbb
mov
xchg
ss
mov
xor
shlb
das
mov
jae
test
mov
aad
sarl
sbb
js
sub
mov
jg
mov
and
and
stos
push
mov
sbb
loope
cmp
jnp
aaa
mov
pop
cmp
cmp
xor
loope
xchg
popf
cmp
pop
adcl
jge
or
inc
sarl
and
clc
sarl
add
jnp
push
mov
mov
jnp
sub
pop
dec
stos
mov
dec
xor
lds
jb
cmp
mov
scas
dec
jb
sbb
adc
mov
fldt
sbb
cs
gs
pop
xor
and
mov
mov
mov
in
mov
cmp
mov
inc
pop
bound
inc
xor
push
mov
nop
ljmp
aas
cmpsb
pop
addr16
cmp
lret
je
cmp
into
mov
stos
cwtl
insb
or
dec
xchg
lods
dec
inc
inc
or
arpl
imul
and
dec
scas
cltd
cmc
divb
dec
push
cwtl
push
lds
inc
xor
pop
jbe
aaa
lds
sub
jbe
dec
mov
mov
mov
mov
scas
and
cli
mov
cld
out
dec
lds
shlb
lods
lock
mov
cld
sub
mov
cmpsb
dec
inc
add
insl
adc
xchg
cmp
mov
test
sub
je
call
dec
xchg
loop
xchg
xchg
mov
movsl
imul
pop
xor
xchg
dec
int
jg
pop
les
sbb
dec
sbb
jl
add
stos
clc
divb
jnp
stc
jae
jne
and
dec
movsb
sbb
out
imul
mov
sbb
cmp
sahf
sub
dec
jae
or
clc
cmp
jnp
in
sti
das
or
push
dec
xor
push
shlb
dec
jmp
ja
call
in
movd
mov
mov
repnz
mov
dec
inc
pop
scas
push
or
and
mov
stos
inc
fdivl
inc
or
fsubrl
mov
std
xor
add
push
sti
mov
mov
dec
push
pop
mov
cs
ret
clc
fsubr
pop
mov
pop
cwtl
sub
lret
dec
xchg
and
xor
fldl
push
decb
ret
dec
loop
push
inc
dec
addr16
pop
mov
aad
loopne
cmpsl
ret
pop
push
lcall
movsb
fimuls
push
sar
dec
pop
sub
xor
movsl
movsb
mov
gs
cmpsl
add
jb
dec
push
jp
push
lds
movsl
sbb
sbb
rcl
dec
add
les
mov
lea
mov
pop
into
hlt
xchg
adc
lret
jne
js
inc
repz
or
sub
jg
or
pop
test
shl
fldl
or
or
jne
sbb
jl
das
jecxz
mov
scas
bnd
jb
cmpsb
cmp
sub
push
adc
xor
in
fstl
stos
scas
and
pop
or
insl
push
mov
xor
cmp
sub
das
jo
xchg
xor
or
cmpsl
aam
inc
push
fsubs
or
or
mov
leave
pop
xor
mov
pop
jge
add
js
mov
lahf
mov
pop
pop
fmuls
dec
mov
lea
mov
sub
or
ret
sub
repnz
lahf
stos
sbb
lock
dec
pop
sub
stos
dec
outsl
fistps
and
fld
xchg
or
popf
cmpsb
jbe
xor
sub
add
mov
cmp
imul
push
inc
scas
ret
inc
mov
push
push
inc
inc
jge
jnp
mov
imull
lods
sub
in
out
iret
test
insb
xchg
cmp
jo
sbb
jno
loop
adc
sbb
pop
push
or
lret
jnp
in
pop
ss
lahf
negl
add
inc
lret
mov
outsl
mov
push
scas
mov
out
pop
sbb
push
jne
push
xor
cmp
cwtl
mov
adc
xchg
jp
addr16
data16
and
movsl
push
mov
mov
jge
lods
data16
mov
xchg
adc
add
int3
inc
shrl
std
mov
cmp
pop
test
inc
int3
addr16
mov
scas
adc
in
mov
dec
xor
testb
inc
hlt
inc
xor
popf
push
out
cmp
add
cmp
pop
iret
fbld
repnz
fbstp
mov
xor
stos
aaa
stos
inc
inc
push
fisttps
sbb
xlat
sahf
sub
jae
lahf
mov
dec
cmp
or
xchg
rcl
dec
cmpl
mov
inc
xor
and
mov
mov
push
out
arpl
mov
enter
xor
xchg
outsb
dec
push
add
cs
adc
adc
inc
pop
call
outsb
iret
imul
mov
push
cmpsb
push
sahf
or
xor
jns
int
cmp
into
sub
repz
js
and
out
shll
cmp
push
pushf
jmp
in
adcl
ja
loope
arpl
orb
mov
pop
je
dec
adc
mov
inc
loop
jbe
mov
sub
fnstenv
push
addr16
daa
cld
sub
imul
imul
cmp
out
lret
xor
lods
repz
dec
loope
orb
insb
fldt
ljmp
inc
jne
int
mov
aam
xor
jnp
das
movzwl
jg
lcall
xchg
push
push
sti
fildl
inc
mov
les
push
fildl
std
jge
mov
in
jno
sti
and
cmp
lcall
enter
and
fcompl
mov
stos
mov
push
pop
fwait
jns
scas
cmp
leave
jnp
mov
bnd
xchg
jnp
add
in
mov
xchg
ss
sub
mov
test
or
mov
and
movl
push
sub
outsb
clc
or
xor
jb
ss
add
jae
push
push
and
test
sbb
pop
mov
mov
lods
inc
cmovne
adc
into
xor
pop
mov
sarb
jae
add
movsb
push
pop
insl
sbb
xchg
push
inc
enter
sbb
cmpsb
xchg
dec
sti
popf
cmp
push
mov
push
aam
pop
sub
in
jecxz
push
push
mov
sbb
xchg
jecxz
ja
aas
sub
hlt
sub
push
jmp
pop
fsubrl
cmpsb
ss
je
mov
mov
push
push
std
lcall
les
fwait
je
jae
iret
pop
pop
sbbl
cltd
fldenv
sbb
es
pop
nop
fst
xor
xor
ds
add
std
inc
cmp
lret
lcall
scas
sti
pop
out
les
cmovp
adc
ljmp
and
enter
leave
push
scas
dec
sti
gs
mov
cmc
jg
xlat
or
fidivrs
cmc
cmp
ds
push
add
xor
push
das
ss
popl
adc
int3
pop
mov
mov
or
pop
mov
int
in
ss
jp
mov
cs
scas
pop
movsw
std
adc
imul
movsl
ss
cltd
mov
jae
inc
outsb
imul
loop
and
add
inc
dec
insl
pop
sbb
popf
orb
dec
and
push
sub
cmpl
sbb
push
pop
push
scas
dec
push
enter
ja
push
dec
sbb
pop
ja
ficompl
lock
xchg
pushf
inc
xor
enter
mov
lods
xor
mov
repnz
mov
es
arpl
add
xchg
jge
jnp
ljmp
pop
cld
xchg
rolb
adc
cmp
and
lret
ror
enter
dec
into
je
ficomps
sub
aaa
mov
xor
dec
das
in
in
rcll
faddl
mov
inc
aas
push
sbb
shlb
inc
addr16
jle
sbb
pop
lods
push
xchg
js
stos
cmp
and
adc
mov
int
pop
filds
push
repnz
out
and
fdivrl
or
sub
adc
ja
sarb
add
lods
test
cmp
xchg
sahf
dec
aam
imul
cmc
addr16
mov
sahf
inc
rcll
andl
mov
sub
ret
jecxz
movsl
fsubrp
iret
inc
and
pop
fcom
mov
inc
xor
inc
fs
jg
pop
ljmp
das
inc
cmp
fcoml
cmp
inc
xorb
adcl
dec
fcmovnbe
xchg
pop
leave
jb
cltd
pop
popf
fidivrl
addr16
lcall
add
mov
pop
push
lods
test
pop
push
and
cmp
leave
mov
cmp
out
mov
sub
pop
out
subl
pop
or
popf
xor
sbb
push
in
insb
sub
das
xchg
cmp
push
pop
daa
sub
sbb
xchg
pop
fwait
sarl
in
mov
sub
hlt
adc
out
shr
mov
scas
or
movsl
mov
pop
into
pop
dec
push
cmp
cld
aaa
inc
jbe
inc
leave
in
cmp
pusha
stos
scas
aad
jnp
mov
xor
cmc
or
and
das
les
and
shrb
gs
or
dec
test
stos
mov
fisttpll
into
dec
cs
push
inc
add
and
xlat
sub
push
mov
lcall
movsl
push
and
es
lock
jnp
fs
hlt
fstl
enter
jb
lods
mov
sub
cmc
mov
jge
or
stc
or
mov
sbbl
sahf
jbe
mov
and
xchg
test
pop
pop
lret
out
xor
leave
aam
mov
mov
ret
insl
xchg
cmp
js
popa
jge
adc
pop
in
out
out
jp
mov
sbb
enter
jg
insb
fldcw
fisubs
outsl
jo
cmp
cwtl
aaa
mov
shll
dec
aam
rcrl
xchg
xorl
outsb
lahf
and
add
jne
push
mov
dec
adc
push
xor
data16
pop
leave
out
sbbl
pop
cmpsb
iret
stos
xchg
mov
adc
dec
cmp
mov
push
ja
popa
rcrb
out
xor
fstps
shll
aam
add
je
std
inc
test
das
in
out
sbb
imul
cwtl
mov
add
pushf
fdiv
daa
add
or
inc
cmp
das
movsb
ss
clc
lret
sarl
xor
dec
jmp
call
jg
cmpsb
arpl
lock
xchg
sbb
sub
mov
mov
xlat
out
lcall
adc
push
shl
jmp
cmp
xor
dec
mov
add
or
sub
mov
dec
rcll
daa
sub
adc
cmp
pop
cli
popf
loopne
mov
or
push
out
inc
pusha
xchg
sub
push
sbb
sbb
popa
js
add
pop
int
sbb
mov
add
xor
inc
or
mov
and
mov
call
jmp
ret
cmp
jbe
dec
dec
pop
sub
aaa
sti
ljmp
pop
adc
outsb
jg
scas
icebp
push
inc
and
push
xchg
or
or
sahf
push
sub
test
add
adc
pop
cmp
das
hlt
push
popl
cmpsb
xchg
or
jle
hlt
jb
cmp
xchg
in
es
xchg
pop
xchg
gs
and
and
dec
xchg
or
test
cli
js
insb
jbe
div
rcll
clc
push
xchg
push
xor
nop
test
push
add
lea
fs
sbb
sub
sbb
push
mov
ret
inc
mov
outsl
call
iret
outsb
cmp
and
insb
icebp
adc
int3
cmp
inc
ss
movsb
lods
pusha
repz
lret
jnp
fdivl
inc
xlat
xchg
out
outsb
iret
jg
cld
mov
cmpsl
lods
inc
xorb
pop
xor
arpl
pop
xchg
repz
mov
ret
loope
ret
inc
movsl
jp
cmpb
js
fmul
fdivp
aad
sub
mov
fnstenv
cmpsb
ficompl
mov
push
xchg
in
mov
sahf
cmp
mov
and
cmp
xchg
insb
adc
mov
aaa
add
cwtl
mov
add
xchg
xor
lret
lret
mov
cltd
add
jmp
push
nop
and
jmp
xchg
ds
sub
dec
mov
je
mov
mov
and
push
sub
rcll
cmc
lods
lods
fs
subb
lods
xor
pop
adc
xchg
test
pop
in
imulb
insb
sub
sbb
aad
loope
inc
stos
cmp
mov
lock
jo
dec
sub
and
mov
push
pop
adc
or
int3
add
adc
xchg
cli
loop
daa
call
and
in
stos
jo
ret
cltd
jbe
xchg
ret
dec
loopne
and
adc
pop
push
lea
cmp
into
movsl
cmpsb
inc
in
std
xchg
jne
test
fcompl
xchg
xlat
jp
cld
jno
and
xor
cltd
ja
fldl
sbb
in
dec
adcb
mov
pop
pop
das
dec
sbb
sahf
rcrl
movsl
enter
xchg
pop
xor
pop
test
fmuls
push
sbb
mov
movsl
and
lods
aas
jg
ficomps
sbb
or
dec
mov
adc
scas
in
lcall
mov
xor
lret
push
adc
imul
pop
fs
add
popa
adc
jbe
roll
fs
lret
xchg
cmp
lret
les
fstl
sub
and
push
or
mov
cli
pushf
fstpl
insl
pop
dec
sub
add
push
fwait
mov
out
adc
mov
inc
mov
aam
push
and
into
adc
pop
mov
sahf
fwait
cwtl
mov
dec
or
mov
lea
sub
mov
cmpsb
sbb
push
jo
repz
outsl
add
dec
cmpsb
cld
cmpsb
jb
test
pop
mov
mov
mov
mov
shlb
push
shr
mov
jp
mov
frstor
sub
out
pop
pop
cmp
dec
mov
add
inc
ss
jb
sar
fnsave
arpl
aad
cmp
in
xchg
cmp
inc
jg
std
imul
in
mov
jg
dec
loopne
ret
insb
dec
xchg
insb
jp
adcb
sar
pop
cmpb
ret
xchg
xchg
inc
mov
jbe
push
out
pop
xor
orb
dec
int3
cs
dec
xchg
mov
sarb
clc
dec
mov
adc
into
sub
xor
mov
cltd
mov
out
cmc
push
enter
call
mov
and
xchg
pop
dec
inc
icebp
inc
je
sbb
testl
data16
repnz
inc
js
adc
int
jge
les
hlt
cmc
jno
mov
jp
fsts
sbb
xor
mov
mov
mov
sbb
inc
xchg
fidivrl
pop
adc
int3
push
dec
or
mov
mov
adc
ror
repnz
jp
pop
in
or
pusha
sbb
inc
and
push
clc
aaa
cmp
xlat
sbb
idivl
aaa
jmp
gs
cli
pop
pop
lds
orl
lea
lret
fsub
repz
pop
xchg
xor
add
and
sbb
ljmp
jne
jbe
and
push
in
hlt
cs
shl
xorw
cmc
sbb
shlb
dec
push
mov
cmp
mov
sub
cmp
stos
mov
sahf
lahf
xor
cmp
xor
mov
push
cmp
sbb
nop
pop
arpl
das
cmp
xchg
xchg
and
repz
loope
jle
mov
lret
outsb
hlt
mov
ret
setg
inc
pop
push
cmp
scas
xchg
mulb
lcall
sub
out
jmp
pop
push
shll
lcall
aaa
mov
xor
popa
pop
je
jns
xor
push
pop
aas
cmp
repz
stc
and
push
sahf
sbb
pop
cmp
js
and
xchg
cmp
xchg
imul
ss
enter
adc
je
jno
mov
or
ret
jle
nop
dec
sbb
fsubrp
pop
add
and
sub
adc
add
push
nop
aas
stos
pop
fwait
jno
pop
ret
push
cmp
mov
test
cld
xchg
ficomps
sarl
sbb
mov
jno
jl
mov
pusha
incb
icebp
push
inc
orb
sbb
xchg
mov
notb
repnz
pusha
cmp
mov
stos
loop
cli
ljmp
lds
or
int
repz
jecxz
xchg
inc
xchg
mov
cltd
test
in
stos
cli
cmpsb
aaa
inc
jecxz
inc
andb
cmpsb
mov
out
add
and
je
add
rcll
jns
cmp
inc
outsl
sahf
bound
inc
lea
das
mov
arpl
loop
lret
cld
mov
cmc
sub
icebp
lds
sbb
lock
inc
add
push
mov
lret
in
jl
inc
cmc
cmp
aaa
jp
xchg
fwait
bswap
imul
adc
mov
mov
lret
leave
idivl
dec
dec
cmp
mov
shll
jae
stc
and
imul
add
stc
pop
sbb
push
lahf
cs
aam
movsl
jbe
pop
cmp
test
je
in
xor
jecxz
inc
mov
add
shl
or
push
dec
dec
sbb
pop
out
cmp
into
dec
int3
add
mov
lret
or
ret
es
repnz
cmp
icebp
das
fildll
dec
rcrl
fildll
mov
add
and
into
sub
cmp
outsb
jl
sbb
fsubrs
inc
sbb
addr16
call
fildll
and
mov
std
push
cmp
lods
shll
enter
fs
jge
fsubrl
jg
dec
jae
bound
inc
jbe
pop
and
es
add
movsb
lock
jmp
je
test
jo
scas
and
jbe
xchg
lcall
inc
in
out
pop
lret
mov
into
in
fnstcw
mov
pop
adc
ja
mov
iret
cmp
xchg
rcrb
insb
and
sub
std
icebp
adc
mov
pop
dec
inc
bound
sbb
ljmp
inc
xor
out
xchg
xor
aas
imul
adc
xchg
lcall
mov
mov
push
insb
test
imul
jnp
lret
xchg
xchg
lcall
xor
dec
sbb
out
lcall
ss
pop
out
iret
sub
mov
inc
mov
sarw
mov
pop
mov
cmc
iret
rep
ret
jns
mov
or
arpl
dec
pop
cmp
aad
sub
imul
clc
fcompl
sub
xor
dec
nop
sub
mov
inc
cmp
lds
arpl
aas
icebp
sbb
push
mov
fnstenv
outsb
push
mov
sub
ss
int
hlt
and
and
xor
xchg
cmpsl
push
push
cmp
ja
stc
mov
mov
pop
xchg
jbe
ret
loopne
xchg
data16
xchg
das
mov
inc
push
xlat
push
std
cltd
push
imul
jae
mov
or
icebp
outsl
add
and
test
dec
mov
enter
xor
std
hlt
stos
int3
je
adc
jmp
jns
adcb
sub
mov
gs
adc
repz
lcall
pushf
adc
fsubr
push
clc
loop
fidivrl
mov
xor
lahf
adc
inc
inc
leave
or
iret
mov
nop
out
ljmp
inc
push
popf
mov
in
adc
jle
fwait
add
stos
inc
dec
sbb
out
nop
push
dec
xchg
push
push
pop
and
pop
sbb
mov
lcall
cld
adc
aad
sbb
int3
mov
jg
xor
pushf
les
psubsw
shll
mov
call
shll
mov
jb
fiaddl
cmp
or
loop
mov
inc
cmp
lods
mov
cmp
add
stc
cli
rcrl
sbb
pop
jns
inc
mov
xchg
adc
aam
push
and
inc
outsl
ljmp
sub
xor
loope
pop
xor
push
mov
mov
mov
adc
out
sbb
mov
or
pop
scas
pop
mov
lea
es
sub
sub
sbb
fstl
jo
xchg
cwtl
lods
stc
xor
icebp
xor
mov
and
jno
pop
or
push
mov
sbb
loopne
xchg
es
les
add
leave
xchg
pop
pusha
mov
or
lods
xor
pop
insb
inc
mov
push
jmp
push
subb
add
ret
xchg
clc
sbb
aad
dec
mov
pop
xor
stos
mov
mov
gs
ja
stos
add
lahf
repnz
push
clc
mov
cld
cltd
roll
adc
cwtl
ds
inc
in
jo
push
or
lods
sbb
in
adc
and
fisubs
arpl
into
imul
or
flds
test
push
cmp
loope
xor
clc
pop
das
mov
sbb
dec
lret
stc
push
add
idiv
movswl
pop
mov
sub
addr16
or
js
loopne
xorb
push
int
xor
dec
inc
ds
outsl
shrb
mov
ljmp
pop
out
jns
popa
shl
push
dec
loopne
pop
sbb
iret
sbb
inc
or
loop
mov
fcompl
dec
dec
pop
xchg
out
shl
or
xchg
test
push
sbb
daa
loope
mov
jl
pop
jns
cmp
xor
adcb
int3
add
bound
inc
popf
and
out
hlt
or
insw
mov
sahf
in
cmp
sbb
dec
and
clc
lock
rclb
pusha
mov
sbb
push
movsb
pop
mov
jb
pop
pop
add
sub
fdivrs
sub
cmp
push
mov
jmp
in
inc
mov
into
dec
adcb
gs
insb
aam
cwtl
mov
aaa
stc
cmpl
lds
and
jle
shll
cmpsl
mov
notl
aam
push
and
mov
push
mov
and
or
shlb
aam
popa
push
sti
push
dec
xchg
mov
adc
lcall
xchg
and
or
lret
and
notb
add
test
lret
paddw
and
push
or
in
cmpsb
sub
scas
repz
lret
mov
in
lret
cmp
sbb
mov
repnz
mov
loopne
adc
xchg
xchg
inc
outsb
jae
cwtl
je
aad
add
ss
inc
mov
out
sub
add
mov
lret
cmp
ret
push
rcrb
ret
mov
out
add
push
outsl
mov
imul
sbbb
test
add
xchg
sub
adc
dec
mov
xor
xor
lds
or
test
cmp
imul
int3
push
xor
inc
sub
lret
scas
test
lret
shlb
pop
xor
and
callw
mov
mov
lock
test
aad
in
das
mov
dec
out
lods
mov
aad
insl
mov
insb
jne
mov
jmp
fwait
add
leave
bound
nop
out
test
jne
xchg
mov
jmp
mov
xor
std
shl
add
pusha
ss
dec
mov
cmp
mov
xchg
sarb
sub
jle
andl
mov
push
cltd
fstl
cmpsl
daa
movb
lret
add
mov
aad
jns
insb
lcall
sbb
cmp
cmp
lcall
push
jmp
xor
repz
adc
jns
xchg
lock
and
arpl
mov
punpckhwd
xor
cli
lret
add
sub
adc
add
ss
push
hlt
pop
mov
stos
lods
movsb
cmpsb
into
in
icebp
inc
cmpsl
mov
push
ret
jbe
shrl
xchg
jp
arpl
ffree
jl
mov
hlt
xchg
pop
jo
sbb
pop
and
dec
mov
mov
jne
or
gs
scas
clc
dec
and
adc
sahf
imul
repz
xchg
pop
mov
aad
or
ret
call
cmp
scas
bound
inc
add
and
call
aaa
push
push
mov
pop
pushf
mov
outsl
mov
mov
nop
and
cmpsb
repnz
mov
lahf
scas
jae
movsl
inc
ljmp
stc
ja
test
sbb
data16
jl
mov
sub
or
sahf
lret
out
cmc
jg
push
leave
insl
lds
sbb
xchg
cmpsl
testb
fs
icebp
sbb
mul
mov
mov
add
cs
loopne
inc
out
test
cmp
push
sub
dec
xchg
pushf
add
mov
mov
arpl
mov
jle
or
adc
shll
std
xchg
es
loope
mov
jbe
or
movsb
push
and
xchg
repz
cmp
jmp
and
push
xor
push
stc
js
rorb
adc
push
and
add
add
and
jle
jbe
xor
and
pop
popf
cmpsb
lret
dec
pusha
fxch
adc
lds
and
sbb
aam
jnp
in
insb
imull
jb
nop
push
movl
enter
push
jl
jg
jnp
sbb
aas
pop
cmpsb
mov
cs
andl
sbb
lahf
mov
dec
and
cld
test
pushw
mov
push
jae
js
mov
cmpl
push
dec
lods
je
jae
mov
push
rcll
fimull
sbb
push
xchg
popa
leave
sbb
imul
jp
or
dec
mov
mov
adc
cmp
mov
imul
cltd
int
sbbb
in
roll
cmp
pop
cmpsb
sub
popf
inc
imul
dec
popf
cmp
or
loope
or
xor
stos
stos
cmp
pop
mov
fnstcw
rorb
out
ficompl
in
push
test
aas
mov
push
arpl
sub
leave
aas
fsts
addr16
adc
add
sbb
xchg
jl
idivb
cmpsl
jne
fstpt
rdmsr
and
jo
dec
push
daa
xlat
sti
or
fisubrl
adc
or
sahf
dec
inc
xchg
ret
cmpsl
pop
decl
sub
mov
mov
push
sbb
test
pop
addr16
ret
jp
aas
xchg
mov
add
inc
pop
xchg
shrl
sub
call
inc
roll
jl
dec
xchg
insl
mov
pop
jo
daa
jl
das
shlb
loope
cmp
bound
pop
sbb
push
pop
jmp
addr16
cltd
or
stos
xor
int3
pop
mov
sbb
xchg
mov
lds
stos
sub
cld
mov
mov
mov
mov
pop
cltd
cmpsb
xchg
mov
xchg
dec
sub
mov
lock
shlb
popa
idivl
sbb
lds
movsl
mov
lea
add
mov
insl
shrb
push
js
mov
sub
scas
popf
test
jl
pop
jmp
jae
cld
imul
or
pop
test
out
jo
pop
push
jbe
or
dec
out
lahf
dec
pop
aad
andb
push
scas
xor
mov
mov
and
ret
icebp
sub
dec
sub
notb
js
pop
push
inc
pop
lret
imul
aas
sti
or
sti
shl
jne
iret
fisttpll
into
test
push
xchg
out
das
lret
imul
or
add
fldcw
push
lret
mov
adc
outsb
stc
lret
jne
mov
push
inc
fs
xor
jnp
mov
sub
pop
and
pop
dec
movsl
sbb
out
and
push
xchg
or
add
mov
cld
pop
or
dec
js
int3
mov
mov
sbb
xor
loope
lret
push
push
or
mov
dec
pop
xchg
pop
arpl
adc
inc
add
cwtl
testl
js
xor
inc
mov
inc
call
cmp
jl
out
imul
sub
fdiv
stos
in
jl
subb
sub
mov
mov
cs
add
add
daa
mov
clc
mov
push
dec
in
mov
jecxz
inc
and
jne
add
jae
je
lahf
xchg
dec
pop
lock
inc
sub
shl
jb
test
iret
mov
fnsave
movb
setbe
mov
push
mov
mov
lcall
inc
gs
xchg
aaa
adc
add
out
xor
mov
sub
push
pop
loop
dec
or
adc
loop
jecxz
repnz
push
dec
sub
popf
js
jp
mov
push
mov
sub
rcr
outsl
or
adc
mov
icebp
mov
cmovns
fisttpll
pusha
or
sub
not
jecxz
mov
jge
pop
icebp
sahf
filds
les
sarl
cmpsb
repnz
xchg
mov
roll
stc
js
mov
add
jbe
lret
inc
pop
pop
daa
stos
lock
fistpl
jnp
in
es
add
clc
aas
mov
fistps
sbbl
xchg
xor
jnp
aas
or
push
and
dec
aaa
fsts
mov
and
mov
inc
mov
cmp
mov
fcompl
jne
mov
cmp
outsl
xor
ret
daa
xor
stos
cmpsl
dec
pushf
pop
jmp
adc
xchg
xchg
sar
shlb
cmpsl
jge
cmp
jnp
push
mov
into
les
fadd
push
std
xchg
icebp
test
xchg
cmp
xchg
dec
imul
fs
sub
jmp
dec
js
movsl
jmp
call
push
jg
sbb
mov
pop
push
jp
pop
mov
rcll
jmp
pusha
das
pop
jecxz
cmp
xchg
test
test
stos
adc
pmaddwd
rcr
arpl
or
int3
popf
mov
pop
fists
rcl
js
js
js
sub
faddl
xor
adc
sub
lcall
jg
xchg
lret
xchg
bound
xchg
push
and
sbb
lahf
push
addr16
jecxz
or
mov
dec
stc
loope
inc
adc
mov
cld
xchg
lret
ret
sub
add
les
jns
mov
xor
out
loope
inc
inc
xchg
lret
or
inc
adc
mov
jae
jae
iret
and
dec
or
mov
repnz
or
aaa
lods
popa
push
sub
xor
scas
or
and
lods
add
outsb
and
data16
push
fwait
mov
stos
clc
and
jge
adc
or
test
adcl
jb
rcrl
movsb
in
loope
pop
rcll
jo
xchg
xlat
es
cmc
push
cmp
mov
cmp
xchg
xchg
xor
inc
mov
xchg
xor
pop
lret
adc
xchg
fimuls
insb
aas
insb
cmp
push
fwait
sbb
jo
icebp
mov
fiaddl
aam
push
arpl
stos
arpl
mov
xor
sub
sub
adc
aas
fdivl
xchg
inc
sub
or
addl
push
cmp
inc
push
xor
fldcw
stos
popa
xor
in
xor
inc
adc
loopne
adcb
dec
cli
shlb
push
xor
shlb
andnps
push
dec
enter
dec
ficoms
lods
lods
into
test
sub
pop
xchg
sub
and
jno
xchg
add
stc
fisubs
cs
mov
mov
cmpsl
xchg
nop
and
loope
jle
fdivs
mov
and
push
or
jbe
mov
dec
sub
mov
push
cltd
push
sub
push
or
rclb
cmp
inc
les
lcall
xchg
repnz
dec
mov
cltd
scas
and
shll
add
sub
lcall
movsl
add
cmp
mov
call
inc
dec
popf
adc
imul
imul
jecxz
loop
mov
outsl
pop
sub
outsb
jns
dec
call
into
data16
dec
mov
out
insl
mov
mov
and
add
push
push
cld
add
pop
cs
pop
fildl
daa
lcall
repz
sahf
dec
test
dec
xor
xchg
push
or
lods
in
sbb
jp
fisttpl
ljmp
repnz
pop
gs
out
movsl
fbld
xor
cld
ss
add
js
mov
cmp
add
incl
out
jmp
xchg
stos
enter
stos
aad
pushf
arpl
push
ja
xor
repnz
sahf
out
and
push
popf
aas
in
push
mov
cmp
mov
js
sarl
repz
cli
xchg
push
jmp
sbb
mov
mov
add
pop
idivb
dec
cmpl
xchg
mov
jne
xchg
inc
dec
enter
mov
stc
sbb
std
sbb
push
add
add
mov
pop
pop
je
lcall
lock
cs
in
out
nop
fdivs
fdivp
sub
jmp
lds
dec
loop
fwait
lods
hlt
out
sbb
test
nop
push
xor
imul
mov
scas
sarb
popf
shlb
les
loopne
scas
arpl
push
sub
xor
mov
and
or
inc
dec
push
jmp
stos
or
xchg
cwtl
sbb
lock
lahf
cmc
inc
in
test
out
xor
xchg
xor
push
dec
out
add
test
pop
in
or
popf
test
adc
xchg
ljmp
jp
cmp
pop
aaa
hlt
jnp
add
div
sar
and
jne
inc
outsl
icebp
rclb
adc
inc
loope
repnz
mov
mov
jno
mov
scas
ret
add
pop
cltd
push
add
lock
push
push
repz
or
arpl
cmp
adc
out
outsb
js
adc
xorl
fidivl
adc
mov
sub
mov
mov
mov
stos
fimuls
jnp
stos
test
scas
inc
pop
jbe
mov
stos
sti
fimull
in
stos
sub
add
je
repnz
aas
mov
test
cmp
inc
sub
mov
mov
out
mov
movsl
and
pop
jg
add
adc
popa
push
dec
or
or
xchg
cmp
fnstenv
sarl
jmp
loop
xchg
cmp
dec
movsb
daa
neg
lcall
xor
pusha
push
data16
or
xchg
sbb
pop
mov
subb
cmp
jge
cmp
loopne
jb
icebp
jl
mov
jne
iret
imul
xchg
or
cwtl
fmuls
fcoms
addr16
fucomi
xchg
mov
jns
inc
sbb
sub
iret
ja
and
je
mov
dec
popa
add
pop
push
and
inc
jge
or
aad
xorl
lock
mov
stos
imul
ja
repnz
ljmp
adc
stos
ss
mov
dec
inc
pop
xorl
adc
sub
jne
mov
dec
ds
and
hlt
dec
loop
cs
test
pop
inc
call
mov
xor
into
out
clc
sub
dec
loope
insb
daa
aaa
pop
push
jp
and
adc
pmulhuw
xor
in
add
icebp
sarb
scas
ja
ds
inc
push
sarb
nop
push
out
push
jo
mov
and
mov
outsb
jne
es
sahf
aad
sbb
cwtl
clc
rcrl
cmp
add
cmc
mov
cs
rorb
aas
sub
cwtl
or
movsl
into
add
add
pushf
xor
pop
sti
scas
push
cltd
mov
in
ds
mov
mov
sti
lods
jb
mov
xor
fbstp
mov
and
sahf
or
inc
cld
stc
push
or
repz
pop
inc
adc
mov
mov
insb
sub
jg
inc
mov
clc
int
adc
jb
push
dec
cmp
iret
ljmp
sti
adc
out
pop
xor
movswl
sahf
xchg
cmp
or
jns
push
fucomp
test
mov
aaa
int
mov
fisubrs
adc
cmpsl
dec
xchg
fwait
add
js
mov
xchg
mov
rolb
arpl
into
pop
add
mov
jns
lret
jae
mov
hlt
lahf
sub
fcomip
mov
add
cmp
jne
xor
stc
push
pushf
cmp
imul
jns
cmp
fwait
ss
sahf
mov
fcompl
dec
adc
sarb
pop
aas
hlt
mov
sbb
push
add
pop
mov
ja
fmuls
scas
imul
mov
xchg
cmpsb
data16
orl
sbb
cmc
std
enter
add
imul
or
rorb
xor
inc
test
fstpl
sub
pop
nop
or
in
jecxz
iret
jmp
inc
pop
ja
cmp
daa
call
mov
mov
sahf
push
cld
jmp
push
mov
jle
pop
pop
mov
hlt
lret
jo
pop
xchg
push
aam
xchg
out
clc
push
pop
rcr
out
inc
popf
out
pop
cltd
and
dec
push
and
and
and
sbb
push
repz
in
rcrl
mov
pop
iret
movsl
sahf
dec
jno
cmp
pop
out
idivb
pop
mov
ljmp
fs
mov
out
jge
xor
cmp
mov
dec
sarb
xchg
inc
adc
dec
nop
addr16
xor
idiv
pop
pop
inc
cmp
jo
out
in
jae
pop
cmp
cmp
arpl
addr16
pop
lcall
rclb
cmp
sbb
cmp
mov
mov
jnp
jl
mov
pop
xchg
mov
xchg
adc
movsl
addr16
pop
outsl
pop
test
cli
das
mov
dec
lret
cmpsb
pusha
popf
iret
stos
pop
stos
add
orl
pop
repz
adc
xchg
les
xchg
pushf
push
jnp
xchg
xor
stc
shlb
cmp
mov
xchg
cmp
jae
dec
sub
sub
fsts
insl
sub
and
xchg
movsb
inc
outsb
xlat
mov
fwait
and
adc
into
xchg
pop
lods
repz
or
add
sbb
mov
rcrl
les
repz
sub
lea
pop
lock
sub
pop
mov
xor
push
lret
clc
shrl
pusha
insl
add
stos
or
jne
or
and
decl
push
inc
jns
sbb
or
and
sbb
add
in
loop
je
mov
and
and
inc
mov
fdiv
into
leave
mov
jno
insb
push
popf
and
shrb
sub
out
inc
dec
dec
in
stc
or
mov
in
mov
push
push
xchg
test
imul
ret
pop
aam
xchg
xchg
mov
out
xor
adc
cmp
cmp
mov
orl
and
incl
pop
push
xor
frstor
mov
pop
sub
rcrb
rcl
loop
ja
push
mov
push
mov
inc
std
inc
fs
std
jo
xlat
fsubs
scas
cmp
mov
daa
nop
jns
cmp
arpl
aad
fnstcw
fsubrl
push
add
pop
leave
lock
pop
sti
insl
fwait
lahf
pop
jecxz
insl
push
arpl
lods
loope
enter
ljmp
and
and
rcll
out
aad
pop
aas
xor
inc
fsts
mov
inc
mov
lretw
scas
or
loopne
cld
jnp
xchg
inc
je
adc
sti
test
sub
data16
push
xchg
addr16
xlat
push
rolb
xor
dec
and
fdivl
fdivrs
adc
orb
jle
push
xchg
pop
jb
int
sbb
mov
or
push
pop
dec
xchg
rorl
pop
std
cli
adc
mov
fisubrs
addl
and
sub
notl
jecxz
cmc
push
loop
and
and
repnz
into
call
bound
push
movsb
push
cmp
std
dec
test
xor
fbstp
imul
imul
in
add
jg
das
jnp,pt
mulb
imul
dec
out
and
lret
and
adc
int3
xchg
jmp
xchg
push
sub
cmp
mov
mov
ss
push
pop
adc
add
mov
fwait
push
nop
and
jmp
sbb
xor
in
js
adc
jb
or
inc
adc
jmp
jnp
mov
or
pop
mov
xor
insb
xchg
adc
test
dec
movsb
inc
or
mov
add
push
fsub
lock
out
add
or
xor
mov
adc
lcall
push
mov
icebp
movl
outsb
mov
push
fdivl
lods
pop
or
lret
outsl
loopne
mov
pop
inc
out
movsb
stos
and
push
pop
nop
rcll
repz
cs
fcoms
push
add
cwtl
stos
mov
sbb
mov
push
rcll
add
adc
test
notl
sub
rorb
push
pushf
jns
clc
mov
imul
das
xor
out
sub
insl
dec
aam
push
fdiv
xor
sub
sbb
pop
addr16
in
or
dec
cltd
mov
or
imul
push
adc
scas
cli
mov
xor
outsl
pop
cmpsb
imul
add
push
sub
insl
dec
mov
push
call
popf
out
xchg
jmp
jno
jl
lret
and
or
les
xlat
mov
mov
cmp
xor
fdivrs
xor
test
xor
mov
mov
cmp
aad
pop
dec
mov
sbbl
clc
loope
cmp
into
testl
call
inc
rclb
push
mov
sbb
adc
sahf
pop
cmp
loop
aas
setge
cmpsb
call
cmpsl
cld
pop
sbb
hlt
sub
pushf
jmp
mov
pop
push
shrb
and
push
movl
dec
sbbl
cmpsb
inc
cmp
mov
and
push
pop
loopne
sbb
jp
arpl
sub
pop
fidivl
sbb
ja
cmpl
or
dec
enter
pushf
movsb
incl
jae
hlt
pop
scas
lret
lds
xchg
aad
ffreep
lret
mov
sti
add
cmp
mov
out
xlat
cmp
adc
fildl
inc
push
adc
xlat
imul
sbb
iret
jb
int3
add
stos
mov
sahf
pop
sbb
scas
adc
and
js
sub
lretw
ret
idiv
push
or
fistpl
inc
test
repnz
gs
jne
inc
or
sahf
sarw
push
aam
xor
and
sti
add
in
ret
sub
jno
das
jecxz
ljmp
int3
mov
push
jnp
aaa
push
out
pop
mov
in
outsb
sub
popf
call
push
loopne
in
push
pop
xor
and
sbb
mulb
shlb
call
test
lea
jne
xchg
and
cli
inc
daa
dec
rcl
testl
ficompl
dec
mulb
shrl
inc
das
call
pop
pop
call
or
sub
mov
outsl
mov
or
ret
clc
incl
add
scas
subl
leave
jle
push
jmp
xchg
jmp
sbb
push
cmc
or
mov
fbld
mov
fldt
sbb
movsl
inc
test
jmp
xor
test
mov
jne
push
int3
jp
cltd
sti
lods
xchg
out
data16
sbb
cmp
add
push
stc
and
or
dec
add
push
loop
out
and
cmp
sub
sbb
sbb
aaa
popl
fistps
sub
xchg
xchg
adc
lds
jb
movsb
test
pop
into
incl
fs
int
js
mov
dec
fisttpll
mov
movsl
adc
add
stos
mov
xchg
mov
mov
jnp
insb
and
mov
aad
scas
add
js
hlt
push
mov
pop
cmpsb
mov
int3
pop
fcomp
dec
dec
ds
out
div
aam
sbb
fwait
mov
adc
jne
orl
lods
pop
xor
and
js
cmpsb
fcomi
or
jnp
shrb
sbb
je
inc
in
fwait
cmpsb
shrl
push
int3
ss
xor
jmp
add
mov
scas
cmp
or
mov
mov
xchg
stos
shlb
arpl
xor
dec
test
std
je
dec
pop
stos
xchg
outsl
sbb
mov
push
add
orl
sub
sub
dec
or
dec
jbe
push
push
std
lea
mov
ljmp
pop
pop
jge
test
xchg
lahf
xchg
push
imul
roll
push
ficoms
ja
outsb
inc
icebp
mov
xchg
push
shlb
in
js
pop
addl
fiadds
fidivs
out
mov
or
sarb
lock
lea
fdivl
and
mov
push
push
xor
ret
mov
lret
imul
pop
cltd
das
int3
sub
add
push
jge
pop
stos
lret
jp
jg
xchg
cmpsl
nop
jne
into
shlb
mov
ds
inc
jg
out
movsb
pop
sub
in
jmp
cmp
pop
mov
jb
in
cmp
stos
ljmp
jge
int
mov
pop
dec
divl
inc
jl
add
jecxz
enter
test
xor
push
loopne
mov
cmp
bnd
out
jg
jle
or
adc
fistps
sbb
xchg
lea
push
xchg
lock
sbb
arpl
gs
mov
fmull
in
movsl
cmp
mov
push
js
cmp
and
mov
mov
enter
or
call
inc
cltd
sahf
adc
add
nop
cmpsb
cltd
xor
cmp
sti
icebp
lcall
subl
iret
jno
cmp
pop
data16
inc
mov
jp
sbb
data16
push
adc
and
jo
jge
add
xchg
add
inc
xor
ja
pop
jbe
pop
sbb
cmp
xchg
mov
pop
das
scas
or
inc
fcoms
mov
shll
sbb
dec
in
adc
aas
out
loope
pop
insl
xchg
popf
popf
stos
xchg
js
insl
mov
pop
inc
sub
pop
ret
mov
and
jg
mov
add
xchg
ljmp
or
jo
loope
popf
jo
insb
or
into
iret
or
enter
mov
and
and
mov
out
cmp
mov
andl
insl
and
xchg
and
or
pushf
mov
dec
and
pop
jp
and
fidivl
jno
inc
ret
jmp
leave
int
cmp
dec
scas
sbb
inc
sbb
push
daa
adc
adcb
shlb
jmp
divl
adc
xor
sbb
aaa
aas
jnp
popa
mov
sbb
aas
fwait
outsb
mov
outsb
mov
les
loope
add
cmp
jne
sub
inc
pusha
imul
test
stos
icebp
cmpl
ss
pop
jne
imul
sub
test
mov
nop
data16
test
xorb
jnp
ficomps
xlat
stc
jge
xchg
scas
lea
push
mov
sub
in
jns
sub
test
mov
inc
dec
rorb
fstp
fs
push
mov
lods
lcall
mov
pop
sub
mov
cmp
dec
cmp
or
rclb
jbe
in
lock
cmc
test
icebp
mov
pop
xchg
pop
mov
popa
daa
in
js
cmpsl
cmp
sub
jnp
push
mov
inc
outsl
mov
jge
fisttpl
and
jne
mov
mov
adc
xchg
fmulp
mov
mov
xor
sub
sbb
jl
push
aaa
jg
addr16
jle
repnz
and
outsl
daa
aad
sbb
out
addr16
mov
sub
sub
ds
jae
mov
cmp
jo
xlat
icebp
pusha
into
pop
leave
iret
push
sub
aad
jb
int3
jle
add
or
xchg
sub
xlat
lcall
dec
ljmp
xor
cmpl
in
cmp
test
pop
sbb
sub
jo
bound
imul
std
mov
or
sbb
scas
dec
mov
mov
or
cmpsl
jae
repz
jbe
pop
xor
and
subl
sbbb
jno
add
fstp
mov
mov
icebp
pop
sub
xor
mov
fcmovnu
stos
ficoml
inc
xchg
and
push
xchg
or
je
mov
rol
ret
adc
xor
xor
test
aad
add
outsb
ljmp
mov
jp
mov
and
shlb
cltd
push
das
push
stos
jecxz
xchg
addr16
and
xchg
dec
testl
jge
sub
mov
out
clc
mov
cmp
lcall
mov
pop
movsb
scas
push
add
xchg
xor
inc
jo
cs
jbe
pop
mov
lea
jl
xchg
add
xchg
mov
xchg
insl
and
js
jns
xchg
jge
xor
pushf
and
add
cmp
cmp
scas
aaa
nop
add
aaa
out
int
into
inc
pop
or
pop
daa
roll
jb
adc
imul
loopne
pusha
inc
fidivs
jb
xchg
out
jmp
cmpsl
addr16
cld
es
push
or
cmp
cmp
jne
xchg
sbb
push
fstps
out
mov
rol
pop
sub
mov
mov
gs
fcomps
fs
out
ret
mov
jle
lods
jg
sub
xor
into
popa
jns,pn
hlt
mov
test
pop
and
fnstsw
ds
xor
mov
fs
ja,pt
jb
jae
jno
andl
cmp
mov
pushf
sub
and
dec
push
and
xor
outsl
cmc
push
fprem
ljmp
mov
xchg
dec
xchg
fucomi
mov
int3
or
fisubrs
sarl
movsb
cld
xchg
shl
xchg
movsb
pop
mov
push
push
cli
jmp
mov
mov
adcl
fdivl
pop
fdivr
jp
xor
shrl
pop
cmp
lods
mov
xchg
je
push
jbe
add
insl
aas
mov
mov
shlb
jmp
test
sub
cmp
leave
aaa
inc
jns
add
adc
dec
dec
and
xor
out
cmpsl
idivl
jg
push
mov
outsl
pop
stos
loope
fidivrl
aad
jle
mov
sbb
or
fldl
sarl
ss
dec
mov
movsb
pop
sbb
mov
jle
ds
xchg
push
shl
les
push
dec
mov
pop
add
out
xor
jl
or
mov
adc
fsqrt
nop
jecxz
repz
adcb
mov
movsl
movsb
sbb
sub
je
notb
sbb
std
xor
push
mov
leave
sub
push
int3
jno
push
rcl
mov
adc
xor
out
rclb
fcomps
or
mov
cmc
out
mov
push
mov
test
movsb
mov
pusha
mov
orb
jo
fwait
pop
dec
xorl
iret
loope
xchg
lds
cltd
addr16
and
jecxz
cmp
dec
xchg
pop
pop
push
je,pn
out
insb
popa
cmc
xor
jns
rcrb
call
cmp
xchg
push
ficompl
call
add
sub
add
in
leave
cwtl
hlt
cltd
or
adc
sub
adc
fdivrl
scas
push
dec
out
aad
jmp
push
lods
mov
sub
cmp
pop
jg
fisubl
pop
mov
lahf
xor
arpl
inc
aad
nop
out
outsb
adc
inc
cli
mov
jg
popa
pop
and
arpl
cmpsb
icebp
les
push
jmp
inc
jae
jp
and
aad
hlt
adc
sar
rcll
or
js
add
out
out
dec
int
mov
mov
cmp
cmpsb
adc
movsb
and
jne
xchg
mov
xor
test
cmpsb
or
mov
aam
jb
or
out
cmpsl
outsl
mov
enter
in
stos
dec
inc
fwait
ja
in
mov
push
cmp
cmpsb
adc
addb
and
xor
push
mov
cmp
repnz
push
insl
add
sub
popa
dec
scas
lds
fists
mov
adc
insb
or
xchg
sbb
push
and
loope
and
jb
outsl
jge
aaa
mov
outsl
mov
mov
inc
fcmove
sti
je
test
mov
fstl
fildll
lods
sbb
push
jno
add
test
adc
and
mov
int
push
or
hlt
fmuls
adc
out
xchg
outsl
mov
pop
lds
es
sbb
xchg
push
pushf
xor
add
or
pop
into
movsb
cmp
sub
push
aaa
fcmovbe
test
test
jb
sub
cmpsl
int3
add
pop
sub
cmpsb
clc
fldl
pop
mov
and
test
and
push
jmp
pop
cmc
cwtl
outsl
dec
dec
jmp
cmpsl
bound
jae
jl
or
insb
sub
and
sub
les
add
sahf
out
arpl
mov
loop
lcall
mov
xor
dec
adcl
mov
sahf
in
cmpsb
mov
xor
repz
or
add
dec
push
mov
jbe
lahf
cltd
push
sub
push
push
out
clc
inc
and
dec
cmp
and
popa
mov
adc
std
or
mov
adc
sub
cmp
mov
stc
dec
jns
jecxz
lcall
in
inc
adc
movsb
push
push
lcall
insb
add
push
pusha
popf
mov
pop
inc
inc
out
push
ja
cmp
out
repnz
xchg
movsb
xlat
adc
mov
das
nop
imul
repnz
hlt
fs
xor
add
mov
popa
pop
imul
and
faddl
cltd
jmp
aad
xchg
rorb
int
xor
scas
repnz
mov
jecxz
lretw
xchg
sbb
rcrl
pop
jns
je
mov
jno
shlb
insl
cltd
sub
mov
mov
into
jb
mov
xchg
fistpll
lret
jns
mov
testb
cli
test
cmc
cld
jg
clc
xor
cmp
rcl
xor
andl
iret
or
fwait
push
movsl
jle
iret
ds
popa
jg
fcmovbe
rclb
xlat
mov
data16
sahf
outsb
int3
clc
push
cmp
iret
xlat
divl
dec
aas
adcl
aas
popa
mov
sub
int
ljmp
outsl
mov
sbb
pop
fs
movsl
mov
add
dec
scas
bnd
and
push
imul
f2xm1
idiv
and
addr16
pop
in
jmp
push
jno
outsb
mov
add
jnp
xchg
mov
xchg
xchg
aam
loope
int3
adc
push
inc
push
push
insb
in
je
mov
dec
cltd
xchg
mov
mov
and
mov
pop
addr16
out
fldenv
arpl
add
scas
sbb
int3
pop
and
loope
inc
and
push
fisubrs
sahf
mov
push
inc
fcmovnbe
repnz
jmp
in
mov
out
rorb
lea
addr16
test
jnp
jb
out
dec
scas
dec
mov
inc
xchg
sub
push
pop
dec
dec
mov
ss
mov
and
push
xor
xchg
sbb
in
sbb
ljmp
jns
mov
out
in
mov
mov
push
xor
fbld
leave
adcb
xor
fcoms
jns
test
pop
test
scas
test
fcompl
frstor
cmp
pop
daa
jns
into
push
mov
mov
das
add
mov
faddp
scas
sbb
and
cmp
push
test
movsb
or
sbb
xchg
hlt
outsl
les
mov
inc
inc
inc
pop
out
dec
mov
pop
movsb
and
outsb
inc
dec
mov
clc
lret
lret
push
stos
add
mov
hlt
test
mov
xor
mov
pop
cli
mov
jge
mov
leave
push
cmpsl
push
fdivs
xchg
inc
test
and
xchg
pop
push
adc
mov
cmp
lock
jo
sahf
insb
push
cmp
add
push
jo
sbb
mov
push
test
fiaddl
cmp
cmpsb
aad
jne
jmp
mov
push
fs
hlt
mov
std
cmp
push
iret
dec
sbb
lret
mov
sub
sbb
xor
xchg
ja
out
inc
jno
jle
inc
xor
sbb
jo
les
rcrl
sahf
movsl
cmp
shll
jbe
fmul
gs
cmp
mov
imul
jns
inc
mov
xor
cmp
ds
push
dec
mulb
popa
and
ds
ljmp
dec
call
add
sub
cmp
rclb
dec
cmp
outsl
sbb
jb
push
jbe
imul
test
add
enter
jmp
shll
or
lret
push
pop
mov
out
and
sahf
inc
sbb
shll
xor
cli
cmp
in
sbb
mov
jnp
stc
loopne
jp
cmpsb
mov
ror
dec
fsubr
data16
dec
mov
mov
adc
push
in
ds
ljmp
stos
into
jnp
roll
dec
hlt
int
mov
sbb
xor
mov
add
mov
mov
cmp
lods
repnz
jg
push
jge
cmpsb
dec
cmp
ret
jne
and
lods
sbb
jle
lcall
prefetch
or
dec
push
in
add
fsqrt
mov
cmpsb
sub
bound
jmp
mov
xchg
adc
insl
cmp
pusha
iret
mov
in
in
pop
xchg
inc
dec
sbb
arpl
mov
out
loopne
adc
pop
scas
into
addl
loopne
rcr
lahf
pop
sub
jnp
cmp
or
jb
arpl
decb
in
daa
push
xor
in
insl
cmp
in
in
or
movsb
lret
lahf
cmp
ljmp
xor
adc
or
addr16
fistl
jnp
jbe
aas
flds
cli
jg
push
push
imul
insb
ja
outsb
push
jmp
inc
inc
clc
xor
outsb
add
push
jecxz
mov
fnstsw
sbb
xchg
xchg
mov
dec
jns
xor
pop
pusha
sub
or
cmp
add
aaa
addr16
xchg
lret
lds
ss
add
lods
ja
cmpsb
mov
test
out
adc
jo
popa
lret
call
outsl
in
int3
leave
aam
mov
sub
sub
cmp
rorl
bound
push
xchg
test
jne
arpl
icebp
cmp
fs
test
dec
sbb
rcr
mov
pop
add
xor
mov
push
add
lret
fimull
pop
popa
dec
mov
adc
fistpll
out
fisttpl
test
jnp
loop
stos
movsb
and
loopne
aam
cmpb
xchg
aas
arpl
mov
lret
je
mov
mov
mov
mov
lock
ss
mov
adc
mov
cli
mov
scas
aam
scas
adcl
out
pop
mov
call
jecxz
pop
jno
ds
test
mov
daa
lcall
add
arpl
loopne
jge
int
cltd
loope
fcmovu
or
in
adc
adc
cmp
js
clc
sub
rcrl
sub
mov
add
aam
in
pushf
dec
lahf
sbb
mov
and
or
rcrb
and
stos
adc
decl
mov
sbb
mov
cli
loope
jnp,pt
push
es
mov
xor
iret
sub
call
mov
adc
inc
lea
and
mov
or
xchg
nop
imul
hlt
test
out
add
adc
stos
ljmp
sbb
pop
les
filds
mov
ja
test
xor
shl
jg
inc
outsb
push
jnp
sub
or
imul
out
shll
pop
push
sbb
xor
and
loope
cmp
aas
jg
rcll
mov
sbb
cmc
lods
fdivs
and
xchg
mov
or
outsl
ja
and
and
mov
outsl
cmp
ss
xchg
adc
or
pusha
pop
inc
pop
int
cmpsb
pop
pop
push
icebp
add
iret
mov
or
pop
jge
mov
push
ljmp
mov
repnz
scas
std
out
rcl
out
jmp
mov
jecxz
bound
je
and
out
pop
adc
inc
out
jl
and
addr16
jne
in
push
loopne
push
add
lods
push
fcom
add
std
mov
dec
push
mov
data16
popa
or
aam
aad
inc
push
and
lret
mov
or
cmp
inc
xor
inc
clc
xor
adc
jecxz
scas
nop
pop
adc
cmpsb
sub
lds
and
cmp
mov
mov
jne
outsb
cs
jbe
pop
in
jle
mov
fs
lahf
push
mov
xor
pop
es
inc
dec
pusha
xchg
repnz
lds
jo
jmp
fsubrs
mov
cs
fldl
in
push
jns
pop
inc
sbb
es
push
mov
jb
jbe
idivb
rep
loope
pop
les
jae
mov
mov
in
adc
call
mov
stos
clc
inc
mov
cmpsb
mov
dec
in
mov
fnop
aad
mov
jle
sub
cwtl
jno
sbb
sub
repnz
int3
mov
jge
or
sbb
xorb
inc
nop
in
jo
rolb
add
sarb
test
insl
into
xor
fmull
das
dec
inc
sbb
addr16
lds
aas
adc
mov
sub
scas
or
sbb
dec
jmp
mov
dec
fs
mov
sub
jecxz
mov
arpl
int3
stc
mov
mov
cld
insl
sub
push
repz
int
mov
mov
ds
xorb
or
mov
scas
push
inc
cmp
out
aad
and
pop
xchg
xor
pop
jo
adc
cli
xor
cmp
xor
or
xor
pop
aam
mov
aaa
adc
imul
xor
lea
push
lds
bound
dec
rcr
cmp
mov
add
xchg
jae
out
cli
in
mov
sub
test
outsb
jne
fstp
sbb
xlat
mov
lods
lods
insl
sbb
rcll
js
bound
mov
mov
push
pusha
mov
stc
jle
sbb
outsl
xchg
mov
out
popfw
sub
push
testl
pop
and
sub
mov
adc
scas
mul
dec
xlat
pop
sti
cmpsl
divl
add
punpckhbw
gs
iret
mov
jae
das
xor
insl
enter
mov
popf
and
arpl
fcmovbe
jp
inc
mov
sbb
xchg
inc
sbb
loope
aaa
jne
inc
les
imul
cltd
cwtl
ret
mov
pop
cmp
std
imul
rol
popf
push
mov
cmp
mov
ja
mov
imul
rorl
outsb
lods
out
jae
cmp
in
sysret
ss
sbb
test
jae
or
cwtl
xor
mov
xorl
cmp
or
insl
mov
arpl
mov
in
aam
mov
mov
nop
pop
outsl
outsb
pop
gs
aaa
loopne
shll
scas
cmp
push
push
xor
fistpl
mov
mov
mov
add
shrl
outsl
mov
cmpsl
fldcw
subb
mov
loopne
jno
xchg
sbb
push
pop
inc
imul
jno
out
mov
push
cmp
int
ret
lock
sbb
cli
jne
das
out
inc
scas
push
xchg
add
into
xor
cltd
imul
test
jno
cmp
and
add
push
inc
mov
and
fdivr
push
sub
andb
js
mov
repz
int
pop
sbb
ret
ljmp
add
sbb
out
jne
push
repz
ret
jmp
hlt
inc
repnz
pop
aaa
and
dec
shl
and
mov
scas
movsl
cli
fsts
fincstp
mov
out
fs
out
cli
push
mov
sub
ss
sbb
and
dec
push
push
inc
jb
dec
pop
mov
push
sbb
pop
cmc
ds
sbb
add
dec
sub
mov
jmp
mov
push
add
adc
mov
icebp
loopne
sub
cmp
cwtl
or
inc
jno
leave
push
dec
jae
cmp
sbb
ja
xor
push
je
dec
push
or
outsb
mov
xchg
scas
pushf
fiaddl
ds
sub
adc
pop
xchg
outsl
sahf
test
stc
call
mov
cmp
add
sbb
out
inc
inc
mov
add
out
fldcw
or
xor
add
mov
xchg
loopne
ficoms
inc
js
mov
xor
lds
push
outsl
not
mov
out
popa
mov
xchg
and
in
dec
lods
add
xor
shll
imul
lea
ret
xchg
mov
and
mov
xchg
mov
test
sub
lret
pop
arpl
xor
xor
pop
les
or
push
xchg
shlb
inc
out
les
xor
sbb
push
dec
cwtl
jge
sub
mov
int
cltd
fwait
sahf
les
xlat
repnz
mov
mov
jno
iret
mov
in
js
je
mov
lods
dec
xor
or
andb
movl
jge
and
xor
test
mov
mov
bound
fstpl
cmp
mov
push
cmp
iret
mov
je
xor
test
stc
int3
mov
outsl
or
and
cmp
ret
rcr
xor
inc
sahf
roll
cltd
es
test
int3
add
jne
sarb
mov
leave
cld
sbb
mov
dec
cmc
idiv
mov
call
fwait
addr16
xor
jno
ficoms
mov
jns
out
xchg
cli
imul
or
jno
stc
push
xchg
push
int3
mov
stos
mov
cmp
ljmp
cltd
mov
and
insl
mov
outsl
repz
lret
orb
dec
xchg
xchg
cmpsl
dec
jge
scas
enter
xchg
jge
add
pop
pushf
cmpsl
stos
and
add
loope
stos
mov
fs
pop
cmc
repz
sub
push
cmp
loopne
ret
mov
push
fiaddl
add
popa
ret
ss
test
gs
sbb
push
pop
lret
aaa
lods
adc
outsb
mov
dec
in
mov
lds
data16
int3
push
cld
daa
and
pop
sbb
pop
sahf
cmp
lea
lock
mov
aam
cltd
stos
and
push
orb
jg
test
aad
test
push
adcl
fidivrl
and
insb
call
std
lahf
je
inc
or
or
sbb
nop
mov
and
mov
xchg
call
mov
pop
push
push
push
fcomp
dec
out
aad
test
jbe
mov
pop
scas
sbb
hlt
mov
sub
xchg
mov
aam
movsb
inc
cs
inc
daa
jnp
out
jecxz
xchg
push
mov
or
sarl
sbb
scas
cld
inc
imul
fistl
inc
cmp
es
inc
adc
sbb
pop
xor
insl
mov
icebp
adc
xor
pop
sbb
call
push
testb
and
pop
bnd
cwtl
rorb
jg
les
gs
push
shl
or
test
cmp
sbb
addl
pop
pop
std
push
ljmp
outsl
mov
xchg
push
xorps
adc
and
rep
xor
push
les
dec
add
push
fwait
jg
jbe
mov
cs
lret
pop
in
test
or
xchg
jae
arpl
mov
jmp
cmp
jne
cwtl
loop
mov
fld
mov
xor
inc
and
xchg
sbb
or
lahf
aaa
and
lock
pop
flds
pop
push
out
add
shll
fisubl
popa
cmp
jnp
hlt
popa
mov
int
pop
sbbb
clc
cmpsl
lock
roll
jmp
xor
clc
adc
pop
ljmp
push
jnp
mov
fmulp
xchg
jb
mov
jecxz
xor
and
scas
hlt
inc
sarb
or
sbb
push
int
or
mov
xchg
call
scas
mov
add
les
inc
jbe
dec
add
mov
or
pop
add
lcall
jg
je
mov
inc
jg
mov
xor
or
xor
fs
add
jg
in
pop
lret
std
mov
or
aas
ss
rolb
ret
jle
push
mov
mov
icebp
cmc
testb
les
test
dec
push
mov
fcomps
and
xor
sti
add
sbb
pop
sub
mov
or
jns
mov
lcall
sub
dec
popf
cmpsb
xor
jno
sub
push
xor
inc
mov
mov
repnz
or
pop
rclb
push
jne
add
jl
jo
lock
adc
pop
sbb
jl
jle
lods
or
es
jae
in
jnp
mov
pop
xor
testb
push
push
mov
dec
pop
arpl
sti
leave
clc
pop
addl
xchg
push
out
add
push
cmpb
sarb
jl
pop
sbb
insb
and
aad
xlat
sti
jb
push
nop
mov
out
jno
mov
popf
dec
and
adc
sub
cmp
pop
push
imul
leave
push
cmpsl
xor
pop
clc
clc
mov
and
sub
cli
movsl
bound
in
inc
sbb
pop
fwait
xor
iret
dec
leave
xchg
icebp
mov
aaa
mov
stos
xor
mov
fstpt
out
je
shlb
adc
xchg
push
je
fidivrs
mov
lea
sub
inc
mov
or
pop
xchg
sub
outsl
outsb
out
lods
shrl
adc
repnz
push
sti
addb
scas
xchg
into
mov
push
sub
adc
popa
fadd
jo
sbb
or
out
xor
push
cmpsb
dec
adc
sbb
loop
popa
push
fidivrs
fistpll
icebp
test
insb
pop
xchg
jno
xor
repz
sbb
out
insl
lock
adc
mov
add
ja
dec
enter
xlat
sub
call
cmp
pop
into
mov
jo
sti
pop
push
push
in
push
sub
lahf
std
lock
mov
js
int
sub
adc
mov
mov
add
xchg
add
push
arpl
enter
lcall
lcall
fistpl
sub
xchg
pop
inc
inc
pusha
lock
push
or
stc
inc
insb
sbb
pushl
cltd
cmpsl
loop
loopne
cld
jb
cmp
lcall
shrl
push
adc
pop
mov
sti
in
cmovs
cmp
sbb
jp
jbe
outsl
push
mov
add
pop
jge
mov
cmp
adc
cmp
pop
pop
cmp
out
sbb
pop
and
cmpsb
cmpsl
inc
outsb
das
jp
mov
or
cmp
nop
sbb
notb
pop
sbb
dec
cmp
fldz
mov
jbe
push
jae
jno
sub
data16
ficompl
jecxz
cld
ds
mov
xor
xchg
jp
mov
xchg
outsl
rcrb
and
add
cmpsb
sbb
test
mov
rol
and
dec
cmp
ret
aaa
and
outsl
stos
outsb
outsb
pop
pop
scas
hlt
push
jae
movsb
xchg
cmp
pusha
loopne
push
mov
push
xor
clc
cld
dec
and
mov
jmp
les
pop
sbb
xchg
add
dec
and
xlat
int
mov
push
out
mov
arpl
mov
xchg
cmpsl
mov
std
shrl
jmp
cmp
iret
mov
mov
sub
ljmp
sub
mov
mov
and
shrl
mov
lds
pop
lds
in
jg
lds
call
into
aad
push
push
mov
or
fcoml
scas
hlt
lret
add
rorb
inc
push
in
xor
adc
movsb
in
insl
outsw
pop
and
fsubs
daa
push
outsl
and
leave
sar
sub
pop
dec
aaa
inc
jmp
xor
xchg
jmp
cmp
inc
loope
test
and
lahf
mov
test
dec
shl
cwtl
pop
aam
rorl
mov
pop
ds
push
cmp
icebp
jne
fwait
mov
cmp
fsubp
lods
icebp
mov
mov
pop
cli
popf
lahf
cmpsl
adc
jnp
call
xor
or
xor
mov
lcall
xor
ret
mov
aas
sub
jp
fwait
outsb
jne
je
push
or
mov
jp
fwait
je
ret
aad
mov
pop
ret
flds
insb
inc
inc
or
xor
gs
pusha
and
fcmovb
cwtl
jecxz
sub
int
push
cmp
lea
insl
scas
mov
mov
xchg
sahf
pushf
cltd
sbb
inc
andb
int
scas
push
dec
arpl
push
xor
xorl
cmp
scas
std
mov
movsl
push
pop
pop
aam
fadd
jl
mov
fwait
movsl
mov
push
add
dec
sbb
scas
mov
mov
pop
jp
jp
or
mov
out
sub
fcoml
mov
lea
xchg
adc
cmp
pop
imul
and
jmp
shlb
lahf
int3
in
push
inc
loop
xor
jmp
xor
dec
gs
iret
xchg
xor
imul
bound
cmc
outsl
mov
adc
and
dec
jb
jecxz
cltd
bswap
jecxz,pt
jno
xor
xor
mov
sti
jno
xchg
fidivs
inc
pop
or
mov
and
aam
push
lret
cwtd
dec
test
pop
xor
mov
push
mov
aaa
sbb
repnz
add
iret
nop
mov
dec
jno
inc
cltd
in
mov
adc
adc
jmp
pop
repz
and
cmp
push
inc
or
pop
mov
inc
cmc
imul
mov
clc
inc
sbb
pop
int3
inc
loope
sub
aam
mov
test
add
push
lret
lret
movsb
jg
xor
cs
push
mov
insb
out
loope
test
jecxz
mov
enter
mov
cli
xor
mov
fsubs
lods
add
test
cmpsb
jge
loope
push
jo
movl
mov
or
adcb
das
and
pop
dec
push
add
or
pop
scas
xor
test
dec
mov
iret
push
nop
stos
out
repz
ret
lret
jl
fwait
loop
mov
out
stos
inc
fdivrl
cltd
cmp
aam
je
jg
mov
pop
xor
or
mov
sub
shlb
out
cli
gs
std
jmp
std
xor
test
inc
inc
jecxz
and
push
and
arpl
inc
loope
push
cmp
je
mov
ficoml
cmp
popa
dec
in
mov
pop
shrl
jmp
mov
push
shlb
int
mov
inc
dec
in
pushf
js
inc
int3
ret
sti
hlt
sbb
pop
cmp
das
icebp
clc
es
xchg
cld
leave
aas
xor
pusha
imul
mov
xlat
addl
dec
fadds
jnp
fs
insb
and
jmp
or
pop
aad
outsb
xchg
mov
and
xlat
shll
jo
and
insl
xor
in
loope
data16
xor
imul
mov
mov
loop
sub
les
and
xor
orl
jb
adc
jmp
insb
sub
jge
push
pop
inc
in
push
test
mov
cli
in
push
aad
lods
popf
dec
cmp
mov
dec
jp,pn
mov
and
cltd
loopne
sahf
enter
push
fiaddl
negb
push
xor
outsl
and
mov
mov
cmp
mov
and
orb
and
dec
iret
into
push
lcall
aaa
cltd
test
mov
jbe
popa
pushf
sub
ret
test
xchg
call
lret
cmp
outsl
shr
scas
enter
push
add
mov
jl
clts
lock
mov
js
xor
jno
add
push
pop
sarl
stos
jnp
lcall
outsl
fnsave
bound
lret
sub
gs
fiadds
decb
in
test
cld
jl
cmp
fistps
lock
test
and
fdecstp
push
add
inc
cmp
mov
clc
test
add
arpl
decl
mov
sub
mov
jo
lret
scas
sbb
add
pop
dec
xchg
es
push
shlb
cmpsl
ret
dec
push
jns
arpl
loope
dec
enter
cs
aas
dec
aaa
in
sbb
pop
add
imul
inc
adcl
jb
into
or
pop
jmp
sub
push
ljmp
xchg
cmc
adc
jle
enter
das
fsubr
adc
mov
subb
gs
pop
adc
fs
aad
push
inc
and
push
cwtl
insb
push
int
add
sub
mov
xchg
repz
in
lods
iret
out
in
bound
push
adc
xor
cmp
sbb
jns
aas
jae
fldenv
out
stos
testb
ss
jl
xlat
add
inc
fstpt
sub
pop
mov
mov
add
popf
pop
xlat
add
adcb
cltd
pop
cmp
xchg
sub
inc
push
add
popa
in
jl
into
inc
ret
outsb
adc
aaa
inc
push
pushf
jge
rcll
or
adc
pop
sti
sub
popf
mov
ss
movsb
adc
scas
stos
adc
mov
cmp
jo
or
icebp
loope
insl
push
bound
in
adc
xor
fsts
pop
xchg
out
jle
movsl
sahf
adc
cli
iret
sub
mov
mov
jmp
sub
pop
shll
inc
cmc
cmp
andb
lods
push
arpl
mov
jne
js
jbe
inc
aas
subl
rcrb
outsb
xlat
jl
divl
fwait
or
mov
or
inc
mov
scas
out
aam
adc
lods
das
push
adc
or
push
aad
dec
loopne
icebp
and
mov
push
jecxz
cmp
sub
pop
push
sahf
mov
add
pop
movsb
add
jmp
mov
lods
mov
ds
arpl
cli
mov
aam
out
pop
sti
pop
pop
mov
or
pop
or
arpl
dec
jns
movb
cli
mov
jo
movl
jno
jmp
data16
mov
fsubrs
in
out
inc
imul
je
je
out
jbe
dec
jge
ss
push
negb
jg
cli
ret
mov
adc
fsubl
mov
mov
pop
mov
xchg
in
lcall
jl
mov
cmp
sbb
daa
sbb
pusha
fstpt
ja
js
out
mov
pop
xor
idivl
aaa
sub
std
mov
into
andl
inc
push
pop
fs
repz
es
mov
xlat
les
fsubs
enter
or
jns
pushf
push
jle
rorb
mov
not
cmp
addr16
jae
xor
int3
lret
inc
mov
iret
mov
and
aad
add
mov
out
js
mov
push
or
and
shr
jp
or
ja
inc
push
icebp
popf
mov
xchg
movsb
cmc
mov
jmp
lds
movsb
dec
add
cld
sarl
push
mov
or
jbe
lds
sbb
out
les
add
cs
mov
popa
outsb
sub
mov
lret
jg
and
push
cmp
aas
sub
jne
and
mov
cmp
icebp
sub
scas
cltd
mov
clc
xchg
call
adc
or
cmpl
in
sbb
xor
push
jle
add
cmp
rcll
add
mov
gs
mov
sbb
inc
and
aas
arpl
dec
xor
test
cmc
xor
xor
ja
mov
roll
sub
add
mov
insl
mov
ret
fmuls
data16
lcall
aad
push
xor
ss
loopne
test
mov
nop
jle
and
sub
aad
fldcw
or
lds
and
pop
loop
and
add
filds
mov
push
push
add
jp
pop
je
in
test
cmpsb
lods
adc
cli
jnp
adc
mov
jg
js
scas
dec
out
push
clc
push
cmp
scas
lret
mov
pop
rcrb
lds
mov
push
jnp
jno
or
mov
movsb
cmpsb
or
andl
loopne
pusha
inc
lcall
in
add
pop
xorb
or
pop
shl
imul
outsl
cld
and
outsl
xor
push
mov
push
out
lret
mov
dec
out
in
dec
push
lret
loop
add
sub
lock
sbb
test
or
pop
icebp
add
jne
jnp
int3
ljmp
clc
aas
pop
lods
gs
sub
cwtl
or
or
outsb
iret
fnstsw
mov
shll
ret
std
pushf
xor
jle
jecxz
ja
jle
xor
daa
std
fimull
es
pop
sbb
cmp
leave
punpcklbw
dec
pop
es
pop
xchg
call
xor
sbb
das
jecxz
or
pusha
aam
push
cld
int
scas
gs
es
jp
jg
clc
addl
mov
sahf
xchg
mov
adc
cmp
fmull
ret
push
rorl
ret
test
int
stos
cmc
adc
dec
xor
shlb
jle
add
dec
push
push
bound
frstor
mov
dec
dec
pop
in
dec
mov
insb
or
xor
sub
mov
xchg
sbb
lock
fcmovb
stos
push
adc
jo
or
iret
in
cmpsb
and
outsl
sbb
pop
jno
cltd
lods
mov
or
jae
std
cwtl
sti
fsubrs
fidivrl
inc
fildl
push
sub
adc
dec
mov
mov
push
in
sub
sub
inc
lds
lods
dec
gs
sarl
inc
xchg
jb
leave
xchg
loope
mov
stos
negl
xchg
cwtl
lods
sahf
shlb
jle
pop
pop
pushf
das
xchg
popf
and
imul
fmuls
cld
adcl
xchg
sarl
fwait
mov
fistl
int3
pushf
repnz
jno
js
enter
jb
mov
mov
insb
push
xchg
push
mov
nop
aaa
mov
dec
pop
ret
out
inc
mov
stc
add
xor
push
sahf
xchg
ss
mov
push
dec
stos
mov
je
adc
in
sbb
pop
or
repnz
lret
icebp
ja
add
dec
mov
jmp
lds
je
sub
fucom
xchg
xlat
xchg
in
out
cltd
mov
xchg
cltd
cmp
fs
fcoml
jo
adc
subl
sub
add
adc
insb
push
out
jmp
inc
push
jg
push
ret
push
sbb
cwtl
roll
and
adc
outsb
cmp
and
loop
test
cmp
cmp
arpl
or
mov
mov
shll
dec
jno
jne
mov
dec
lcall
sbb
cmp
dec
and
cwtl
icebp
aam
pushf
aad
test
push
cld
push
sti
mov
rolb
cltd
pop
or
dec
std
dec
add
push
outsl
add
loop
sub
xchg
int3
sub
cli
lock
or
adc
mov
and
dec
push
mov
shl
xchg
popf
mov
popf
add
pop
mov
sbb
sbb
sub
pop
mov
sbbl
mov
push
cmp
fwait
sub
push
adc
cmpsl
ja
sub
jo
adc
data16
repnz
jmp
pusha
scas
adc
pop
push
dec
notb
mov
xor
xor
icebp
inc
sub
frstor
xor
mov
push
subb
fxch
xor
addb
mov
int3
sub
inc
add
icebp
movsl
loope
pop
add
jb
fsubs
fiaddl
push
fiadds
insl
aam
fidivrl
or
outsl
xor
jae
xchg
sub
push
pop
aas
sub
push
inc
xchg
clc
fidivs
out
lds
nop
test
scas
out
inc
daa
repnz
xor
sbb
xor
mov
andl
pop
divl
insb
jo
sbb
mov
push
inc
fwait
mov
outsb
and
and
or
jle
pop
adc
mov
repnz
push
pusha
lcall
mov
cmpsb
adc
fadds
das
fsubp
scas
sbb
test
mov
inc
ss
icebp
xor
popa
stos
stos
out
inc
aad
xchg
stos
movsl
and
jp
lods
sbb
xor
fstpl
packuswb
xchg
xchg
cmp
inc
and
sti
jbe
mov
mov
maxps
mov
imul
jecxz
pop
cmp
add
jns
cmp
lea
popf
or
lcall
sub
jg
mov
test
inc
add
pop
mov
nop
mov
inc
jecxz
push
out
pop
cmpsl
loopne
sub
cltd
ss
imul
dec
imul
inc
jp
jne
into
movsl
movsb
push
dec
jbe
dec
fbstp
sbb
jge
jb
rorl
xor
iret
mov
movsl
aad
lcall
loop
clc
outsl
cltd
mov
inc
or
xchg
ja
inc
dec
cwtl
out
push
std
out
sahf
cltd
fdivl
pop
sti
inc
imulb
adc
dec
mov
dec
mov
hlt
inc
and
jo
or
rcll
repnz
popa
sub
add
mov
or
jbe
cmpsb
pop
push
or
xor
jge
lock
sbb
xor
sub
xor
loope
movsl
or
sti
xchg
jmp
repnz
enter
xor
adc
cmp
mov
call
sti
cli
fwait
into
inc
iret
aad
jg
mov
js
mov
push
call
sub
lods
xor
sub
inc
jb
int3
ljmp
test
loopne
testb
out
leave
stos
and
test
in
cmp
aam
call
ret
je
pop
ss
rcrl
xor
pop
mov
arpl
xlat
shll
movups
push
lock
cld
icebp
aaa
out
into
and
mov
data16
xchg
push
jp
sbb
mov
mov
sbb
scas
loope
sub
inc
sti
icebp
roll
ret
aam
mov
cmc
jl
inc
mov
popa
add
das
pop
out
pop
movsl
jnp
add
jge
push
jl
test
in
jns
push
stos
fnstenv
fwait
sar
push
inc
pop
test
rcll
int3
fisttpl
inc
mov
dec
fstps
add
clc
jae
mov
movsb
loopne
adc
push
je
lds
mov
frstor
sub
jecxz
push
ficoml
jle
or
xchg
popf
or
xchg
cli
enter
cwtl
pop
cltd
push
pop
movaps
push
stc
xor
out
daa
cli
std
sub
push
out
leave
mov
ret
mov
sbb
push
xor
sbb
xchg
mov
inc
imul
mov
enter
stos
sbb
pop
test
je
andb
push
xor
mov
pop
jg
mov
mov
push
pop
aam
test
movsb
pop
or
rcr
mov
lret
movsb
jmp
inc
push
fstpt
add
in
push
inc
clc
pusha
sbb
lock
and
adc
por
pusha
mov
jno
jmp
push
xchg
lcall
das
mov
scas
mov
mov
pop
mov
mov
lcall
out
xor
mov
in
leave
lds
sub
cmc
push
dec
add
dec
aaa
add
mov
add
xchg
sbb
out
sub
mov
out
leave
out
mov
inc
lret
adc
mov
sbb
pop
cwtl
xchg
cmp
mov
mov
cld
inc
outsl
fiaddl
sarl
xchg
in
dec
adc
ljmp
dec
sub
mov
fwait
push
fldcw
out
fmul
icebp
out
sbb
es
leave
push
imul
popa
add
lods
xor
add
inc
enter
or
lret
ficompl
lahf
enter
cld
call
or
pop
popf
cmpsl
dec
cltd
test
xchg
bound
rclb
pop
sub
xchg
sbb
pop
mov
dec
fidivl
push
add
xchg
aad
hlt
aam
mov
mov
mov
scas
aad
leave
aaa
push
lea
cmpsl
mov
pushf
lea
xor
xchg
jnp
stos
lods
fsubl
pop
xchg
sub
dec
inc
mov
shll
sub
dec
inc
pop
lods
out
aaa
nop
adcb
insl
sbb
jge
test
jp
sbb
stc
mov
inc
or
imul
js
scas
popa
cmp
loope
jno
iret
into
push
cmp
js
mov
sbb
cmpsb
xchg
fisubrl
mov
xchg
hlt
adc
shll
in
xor
popf
add
ret
aas
push
mov
in
jns
sahf
rorl
inc
fcmove
adc
cltd
imul
push
imul
lret
sbb
addb
push
fs
and
mov
jecxz
adc
in
fists
movsl
insl
jecxz
or
push
add
push
fdivl
int3
divb
fdivrp
fsubs
iret
or
and
jno
jg
fnstsw
xor
insl
pop
xchg
dec
lret
mov
cmpsl
push
sti
jnp
mov
lods
aam
sub
cltd
movsl
aaa
out
mov
pop
dec
push
push
or
pop
and
mov
dec
inc
cld
call
std
push
inc
mov
xchg
cld
aaa
repnz
sub
cld
push
mov
fwait
xchg
daa
xchg
in
push
push
xchg
lret
iret
loopne
jnp
or
negb
shrb
outsl
icebp
mov
mov
arpl
mov
out
out
pop
in
jle
mov
sub
fdivrs
jbe
pop
mov
rcrl
out
filds
mov
push
pop
cli
xor
cmpsb
insl
inc
sub
fwait
xchg
pop
imul
xchg
push
cmpsl
xchg
aad
fistps
cwtl
imul
pushf
pop
cmp
pop
pusha
jb
cmpl
dec
inc
notl
into
movsl
ficomps
sub
xchg
insl
jge
out
xor
mov
lods
or
divl
xchg
add
adc
rorl
mov
xchg
scas
push
test
hlt
subb
xchg
jne
push
mov
or
jo
outsb
into
in
insb
dec
sub
outsb
fistpll
ds
es
call
test
push
and
cmc
or
sbb
cmp
push
adc
sbb
or
aam
sbb
dec
repz
sahf
push
jmp
mov
das
dec
jb
xor
jo
insb
inc
mov
sti
jno
frstor
and
add
es
push
jl
cmpsl
out
and
adc
lret
adc
push
add
pop
cmpsl
cmp
mov
cmp
fadds
daa
test
repz
in
lahf
mov
inc
xchg
pop
fsubrl
in
sub
mov
xlat
in
ds
or
sahf
mulb
dec
loopne
jae
in
xorl
stos
or
test
lods
outsb
fcomp
lock
repnz
cwtl
xor
sahf
jno
mov
aas
les
lock
fimull
out
cmp
scas
cmp
mov
fs
call
push
repnz
jl
cmpsb
scas
dec
lret
mov
inc
dec
xchg
jbe
cltd
dec
mov
repz
std
das
pusha
dec
test
push
pop
lock
std
xor
daa
push
or
push
or
inc
inc
ret
mov
pop
cmpsb
jmp
ss
jge
push
push
notb
lcall
mov
pop
stos
in
loope
icebp
xor
enter
jo
pushf
cmpb
test
and
outsl
aad
xlat
push
lds
fmuls
jbe
mov
ljmp
push
pop
pop
inc
sbb
sub
dec
cmpl
lahf
and
adc
or
pop
ret
bound
rcrb
and
cld
jns
push
or
inc
push
sbb
imul
cmp
cwtl
inc
and
rcll
or
arpl
fidivs
enter
fisttpl
mov
loopne
mov
xor
ljmp
lods
jo
inc
push
loope
bound
jg
push
cmp
mov
dec
das
or
push
mov
cs
mov
lcall
movsb
enter
in
test
jge
je
scas
outsb
insl
pop
rolb
jle
xchg
xor
js
or
or
xor
add
lcall
popa
jbe
mov
push
dec
subb
cmpsb
xor
or
push
mull
cmp
xchg
adc
sbb
mov
out
or
push
nop
dec
xchg
pop
jmp
jg
test
sarb
fists
lods
daa
pop
arpl
mov
add
mov
inc
fwait
push
or
ja
jb
repz
fisubl
xor
inc
addb
hlt
pop
mov
cmp
mov
test
dec
jo
sub
lds
xor
push
cmp
stos
sbb
scas
dec
push
aaa
add
mov
dec
lock
fisttpll
xchg
jmp
mov
fs
xchg
jp
xor
nop
sbb
shrb
enter
call
pop
xor
ljmp
pop
sub
popf
scas
mov
cmpsl
aas
test
dec
jbe
fwait
mov
out
and
push
mov
mov
xchg
int
adc
pop
mov
cwtl
je
in
fwait
jge
or
mov
cwtl
pop
inc
addl
ret
add
test
mov
mov
in
push
insl
scas
repnz
cmp
mov
sbb
lcall
daa
popa
bound
mov
addr16
fwait
paddw
xchg
lea
int
out
aaa
call
pushf
xchg
push
mov
test
mov
mov
mov
add
dec
xor
lret
notl
or
sub
lds
out
jns
shrl
adc
mov
js
pop
test
mov
sahf
pushl
pop
inc
and
add
stc
shl
sbb
jae
jo,pt
out
mov
call
sub
cmpsl
lods
popfw
lods
hlt
popf
leave
sahf
cmp
pop
clc
sub
push
push
pop
scas
mov
dec
enter
std
pop
loope
inc
push
pop
jge
cwtl
cmpsb
ja
mov
push
nop
icebp
mov
negb
cmp
in
cmp
in
dec
jne
out
push
mov
test
test
shll
mov
xchg
out
xlat
repnz
mov
lahf
pop
aaa
inc
push
cs
jp
aad
push
xor
push
jge
stc
cwtl
pop
inc
cmc
ja
imul
das
nop
rcrb
push
jno
test
mov
gs
jmp
mov
jno
int3
mov
add
sub
cmp
and
fdivr
mov
xchg
movb
cli
mov
cmpsb
mov
icebp
cld
push
out
add
enter
out
jecxz
pop
or
stos
mov
leave
frstor
sbb
dec
xchg
shl
inc
rcrb
cmpsl
cmp
aam
jmp
jns
loopne
jne
arpl
push
add
push
dec
mov
inc
and
inc
pop
nop
in
arpl
jmp
mov
cli
aam
je
push
or
mov
jnp
mov
lods
xchg
shl
xor
cmp
cmc
pusha
je
cltd
iret
inc
xor
mov
outsl
in
jg
inc
and
mov
mov
scas
adc
mov
ror
pop
mov
cmp
jmp
ja
mov
xchg
adc
fdivrl
jp
fnstenv
jmp
add
test
and
cmp
pusha
repnz
sbb
xchg
test
or
cwtl
and
out
bound
outsb
sub
and
inc
fldcw
fiaddl
insb
add
imul
mov
jbe
repnz
add
cmp
ja
loop
mov
inc
xchg
fstpl
outsl
and
shrb
jmp
fldt
subb
lds
fcomps
mov
jge
jl
sahf
fdecstp
cmp
inc
push
inc
rorb
pop
repnz
jno
dec
push
push
sub
xchg
movsl
mov
fmull
mov
cmp
das
dec
mov
mov
aas
inc
push
rolb
sti
outsb
sub
cmp
push
ss
es
pop
adcb
rol
aam
insb
ficoml
push
jl
imul
dec
test
or
into
pop
outsb
fsub
push
cmp
es
fsubr
dec
add
mov
sbb
sub
je
clc
iret
fnsave
inc
mov
dec
mov
jae
mov
scas
sbb
push
mov
add
xchg
dec
jno
orl
imul
xor
rclb
jno
cmp
xchg
scas
pop
imul
js
outsl
fldz
ret
lods
push
aas
jmp
rcr
bnd
sub
lret
shlw
int3
fsqrt
mov
shr
sub
shrb
jb
xchg
add
iret
inc
jge
jno
or
xchg
jb
out
int
xchg
je
testl
outsl
and
push
xchg
pop
cmp
mov
xor
jo
clc
addb
lahf
outsb
scas
shlb
cmpsb
cmpl
push
insl
iret
sbb
ds
imul
das
sub
xchg
das
into
cmp
inc
lods
bound
push
mov
xor
inc
add
clc
rorl
into
rolb
jno
das
fcompl
or
sahf
xorb
pushf
push
out
sti
es
xchg
pusha
enter
ss
and
mov
cmp
mov
adc
lcall
push
push
roll
imul
rolb
mov
jge
imul
imul
lock
mov
add
test
inc
fidivrl
cmpsl
rorl
fidivrl
cwtl
lods
pop
mov
addr16
pop
stos
cmp
mov
jnp
pop
xchg
aad
xlat
int3
jae
pop
aam
mov
int3
mov
mov
pop
xor
in
scas
sbb
aam
mov
push
cmp
adc
add
push
lods
stos
fldenv
push
fwait
push
popa
popf
ficoms
cs
mov
inc
arpl
lret
int3
lock
lret
aaa
mov
mov
inc
ljmp
mov
pop
data16
sbb
mov
dec
adc
cld
pop
cmp
hlt
push
xchg
arpl
mov
push
inc
je
pop
int
mov
inc
xchg
sub
mov
or
mov
out
xchg
in
cli
xchg
leave
dec
adc
lahf
dec
pop
andb
movsl
add
out
mov
jp
inc
xchg
aaa
lds
loop
outsl
int
push
inc
jp
mov
xchg
imul
xor
pop
sbb
mov
fs
nop
filds
xchg
sahf
and
dec
dec
mov
xchg
xor
notb
xor
aaa
mov
push
cltd
das
addr16
popa
xchg
je
into
xor
cwtl
jp
push
mov
mov
push
sbb
imul
cli
loopne
daa
in
movl
sbb
pop
cmp
mov
inc
jle
pop
xor
ror
push
mov
shrb
dec
aas
add
bound
inc
rcrb
inc
or
mov
pop
data16
sahf
in
imul
adc
testl
out
or
fwait
dec
nop
jb
add
mov
fnstsw
push
daa
sub
jg
inc
mov
fidivl
mov
and
lods
xchg
pushf
jmp
std
adc
fistpl
addl
les
shll
jno
lds
pusha
adc
jmp
call
mov
mov
dec
aad
add
and
test
pop
jbe
mov
lods
mov
push
mov
push
aad
or
xor
push
ffree
sub
xchg
cmc
roll
mov
pushf
xchg
imul
inc
jo
dec
xchg
or
xor
bound
mov
jb
mov
call
pusha
xor
addr16
ds
rcl
pop
mov
fsubr
and
pop
cmp
add
pop
pop
pmaxub
js
iret
dec
in
mov
push
push
outsl
idivb
jne
out
and
imulb
push
imull
jb
bound
pusha
aam
mov
movb
pop
push
push
push
cmpl
and
mov
mov
cli
cmp
data16
adc
stos
cld
jg
out
out
nop
push
jns
arpl
stos
cmpsb
dec
add
xor
imul
inc
scas
inc
adc
xchg
sub
mov
fsubl
imul
xor
icebp
aaa
mov
cli
adc
popf
sub
pusha
jg
or
imul
ret
add
adc
shl
add
xchg
leave
and
pop
xchg
push
cmp
scas
adc
add
cmpsb
arpl
adc
xchg
mov
mov
and
mov
insb
js
negb
dec
add
inc
adc
cmp
inc
ficoml
sbb
xor
mov
test
sub
xchg
aad
or
jns
xor
dec
cmp
mov
paddsb
inc
stos
jne
push
scas
pop
and
cld
in
and
sub
pop
or
mov
or
ret
movsb
insl
pop
test
push
jge
adc
jp
incl
mov
imul
xchg
cmp
out
aaa
hlt
jno
xchg
mov
notl
loop
cmpsb
push
repnz
mov
mov
ss
jl
xlat
cmp
call
arpl
test
xor
jle
sarb
xor
ss
mov
xchg
push
add
mov
rcrb
xchg
cmc
push
test
fsubr
mov
pop
push
call
pop
cmpsb
pop
push
jnp
fidivl
arpl
jle
repz
adc
fdivs
dec
into
or
xor
mov
fwait
mov
push
sti
popf
jnp
dec
pop
dec
jnp
sub
xor
fsts
pop
jno
sahf
incl
aas
scas
fstl
jnp
stos
lea
call
int3
sbb
pop
xor
sbb
icebp
ret
sbb
mov
or
and
lds
jg
add
icebp
mov
mov
lcall
inc
std
or
jp
cmc
gs
rcr
pushf
jmp
mov
xor
not
inc
shll
sub
test
js
sub
call
mov
neg
mov
cld
pop
es
hlt
sub
ret
test
clc
xchg
add
pop
in
cmc
push
xchg
pop
loope
cmp
jmp
adc
xchg
mov
lods
xor
mov
nop
cmp
dec
aad
and
jbe
sti
fistps
cli
push
leave
xchg
subb
xor
subb
cwtl
pop
jecxz
xor
neg
cli
scas
imul
rcl
xchg
pop
cltd
and
call
sub
addr16
xchg
lcall
adc
iret
pop
pop
int3
pop
mov
fildl
sahf
pop
xchg
adc
pop
movsl
test
lret
mov
push
fisubrs
sti
sbb
out
shll
aaa
ret
mov
subl
icebp
and
out
mov
push
stos
gs
imul
jge
sbb
into
test
push
cli
xor
adc
mov
sbb
rcrb
test
push
pop
and
sub
int
ljmp
cs
cwtl
test
faddl
xchg
jno
push
rorl
sub
and
mov
mov
mov
jmp
add
in
test
jb
leave
aaa
ret
stos
fwait
add
sub
adc
bound
cli
lret
or
mov
mov
test
aas
sarl
scas
aaa
loopne
pop
rcrl
jno
cmp
xchg
adc
push
sub
out
nop
xchg
xchg
iret
push
aad
push
addr16
add
ret
loopne
lds
xor
clc
jo
dec
addr16
dec
aam
add
push
rcrb
test
mov
outsl
inc
lods
push
loope
lcall
gs
lods
mov
aaa
ret
jb
xor
sbb
lahf
dec
inc
inc
gs
stc
xchg
and
mov
cli
xchg
pop
das
clc
fists
push
fimull
cmp
xor
ret
cmp
sbb
loop
push
das
aad
pop
or
bswap
hlt
pop
push
lret
sbbb
pop
stc
stos
outsb
mov
rclb
cmp
xchg
push
inc
aaa
push
and
jne
cmc
incb
outsl
aaa
add
pop
imul
pusha
inc
lahf
sub
fwait
push
xchg
push
add
jmp
int
inc
jle
pusha
aad
outsb
adc
mov
lods
and
add
aaa
movsl
hlt
fldt
shll
shlb
stos
sti
pop
lret
test
sbb
mov
addb
pop
jmp
or
and
pop
add
cwtl
sub
dec
sarb
mov
jbe
inc
dec
dec
ror
lock
inc
fimull
mov
repnz
push
dec
pop
ficoml
je
inc
mov
aas
sahf
pop
mov
int
adc
hlt
out
out
add
or
dec
jb
dec
lea
in
insb
inc
cmpsl
lea
or
js
mov
push
mov
cmp
loop
idivb
inc
xor
and
int
sub
push
addr16
fnstenv
lret
cmp
mov
sbb
xor
inc
mov
fcomi
jle
mov
mov
mov
loope
rcll
lea
test
ss
rcrl
push
dec
cld
enter
int3
test
gs
jg
movb
lret
dec
imul
mov
mov
xchg
in
les
aas
sbb
push
fisubs
xchg
pop
and
das
sbb
jl
int3
fwait
mov
mov
gs
or
sub
vmovdqu32
lea
xchg
xchg
cmpsl
sbb
mov
clc
pushf
mov
sbb
hlt
cmc
adc
in
inc
ss
pop
iret
sub
add
xlat
push
push
pop
fwait
aaa
arpl
nop
mov
pop
adc
aaa
lret
xor
xchg
imul
aad
mov
jmp
test
jle
ficoms
cmpsb
pop
dec
fstpl
cmc
or
jo
push
and
scas
fildl
insb
add
dec
and
negl
test
push
js
jmp
aam
nop
add
inc
inc
mov
ror
sub
sti
test
dec
fwait
shrb
cltd
test
cmp
inc
or
int
leave
jb
mov
in
xor
mov
jg
dec
int3
pushf
add
in
add
inc
add
movsl
test
hlt
sub
lods
test
imul
and
mov
in
inc
add
into
mov
hlt
cmp
mov
sub
movsl
xchg
mov
xor
test
iret
inc
jle
or
outsl
iret
inc
jns
into
add
insl
or
mov
imul
push
and
dec
pop
shlb
push
sahf
add
mov
sub
loope
scas
mov
and
aaa
or
cwtl
sbb
add
arpl
loop
jno
fucom
imul
loope
rcr
ljmp
daa
sbb
jbe
jo
test
xchg
ret
push
lock
popa
fdivrl
pushf
mov
and
popf
imul
arpl
cmp
insb
inc
cmp
jmp
push
imul
inc
push
notl
scas
cli
inc
aad
scas
aad
push
inc
in
ljmp
inc
mov
stos
cmp
jno
inc
push
sbb
sub
xor
jmp
nop
ficomps
add
jecxz
add
arpl
add
push
jae
or
lahf
std
test
and
xor
or
scas
jo
shll
mov
push
jle
pop
clc
test
pop
jle
jnp
stc
xchg
js
fs
dec
cmp
sbb
mov
push
jp
inc
inc
daa
fistps
fisubl
mov
gs
bound
adc
cmpsb
cmp
adc
js
mov
mov
inc
add
mov
fsubr
sbb
dec
icebp
xor
or
imul
sbb
stos
stos
enter
fimull
xchg
mov
mov
adc
add
cmc
dec
pop
xchg
test
push
gs
push
sti
movhps
jbe
push
rcll
stos
stos
cmc
cs
xchg
mov
add
xchg
xor
adc
jns
hlt
int
daa
cmp
imul
gs
cmp
ret
sub
int3
aad
add
ret
cmpsb
inc
xchg
mov
std
insb
ja
shl
push
jp
sub
out
mov
fiaddl
loope
leave
js
rorb
in
push
mov
xchg
popa
push
rcr
stos
loopne
sub
hlt
repnz
fnstsw
and
jnp
xchg
adc
mov
outsb
icebp
gs
jmp
in
ds
cli
mov
jmp
jle
pop
jbe
test
movsl
fildl
fabs
adc
shlb
pop
mov
push
lret
adc
out
xchg
movsb
push
xchg
imul
or
scas
xchg
fsubl
dec
lcall
lods
loopne
jmp
ss
add
popa
and
cwtl
movsl
mov
mov
in
mov
imul
jmp
dec
xor
jnp
jg
mov
adc
push
nop
int3
and
mov
inc
test
mov
loopne
fidivrl
jnp
in
inc
xor
jle
test
jne
inc
pushf
fnstcw
sbb
jg
mov
daa
push
int3
cmp
lret
sub
or
adc
lcall
jg
mov
cmp
xor
in
lahf
icebp
dec
mov
mov
test
cmp
inc
push
dec
popa
jmp
xchg
cmc
mov
push
stos
bound
gs
fs
push
xchg
dec
dec
out
out
test
sub
adc
ljmp
sub
jecxz
push
cmc
cld
xchg
dec
stos
pushf
xor
ja
xchg
xorb
gs
mov
aad
mov
js
xlat
test
stc
scas
dec
and
mov
in
ret
sbbl
and
faddl
lods
mov
xor
sub
es
fmuls
mov
and
call
jno
push
add
mov
xor
loope
add
notb
dec
ljmp
sub
sahf
xchg
loope
lds
andl
hlt
bound
push
das
cmp
and
xor
or
jb
push
and
sub
cltd
cwtl
cmc
andb
jecxz
shrl
adc
ljmp
sbb
outsl
adc
mov
and
pop
clc
fwait
test
mov
jmp
mov
icebp
mov
mov
cmc
add
int
add
push
in
cmp
adcb
jmp
xor
cli
aam
or
ds
push
mov
aam
sub
mov
nop
mul
add
cmpb
mov
scas
mov
test
push
ss
incb
js
adc
out
lods
loop
cmp
sbb
adc
sbb
push
fdivrp
cs
lcall
or
xchg
mov
and
mov
push
jl
lock
cmpsl
mov
movb
pop
fmul
lahf
adc
lods
mov
fwait
xor
das
xor
movsb
addr16
mov
or
test
xor
mov
sub
xor
lgs
std
pop
rcl
ljmp
nop
sbbl
imul
mov
jb
mov
and
and
addr16
pop
add
in
fs
sub
xor
mov
popa
fimuls
ret
mov
push
sub
das
or
jge
and
jp
jne
stos
lds
inc
jns
ret
fistpll
or
bound
xchg
inc
dec
enter
les
sub
fwait
jns
in
in
adc
and
cmp
and
mov
push
jae
sarb
push
cmp
fwait
js
cmp
and
sbbb
lods
test
repz
out
cli
lahf
adc
or
addl
xor
imul
outsb
pop
inc
enter
insl
mov
icebp
pop
gs
jge
mov
xor
jne
mov
jbe
out
xchg
or
inc
insb
into
sbb
inc
cmp
or
adc
call
dec
dec
cwtl
xchg
xor
adc
rcr
es
jnp
movsb
rcrb
push
in
test
movsl
pop
xor
pop
shlb
pop
cmp
push
jnp
add
aas
cwtl
stos
in
push
jo
inc
outsb
icebp
xchg
mov
repz
sub
add
mov
iret
imul
pop
mov
jecxz
call
adc
test
push
out
out
mov
lea
xlat
packssdw
and
mov
mov
add
ss
mov
and
pop
mov
mov
fldcw
jnp
cmp
push
jecxz
xorb
std
xor
jne
push
xor
fwait
push
shl
shr
ret
cmpsb
repnz
xor
xchg
sbbl
xor
xchg
cmpsb
lods
jb
je
push
xlat
aad
pop
in
pop
leave
xor
popf
jp
and
sbb
cmpb
loope
fcmovnbe
lods
jo
mov
add
cmp
popa
sahf
ss
rol
adc
or
mov
mov
add
jne
push
sub
popf
xchg
lea
fdivrs
cmpl
cltd
stc
daa
stos
xor
xor
negb
movsl
mov
std
sub
xor
outsl
int3
ret
aad
imul
test
repnz
iret
jecxz
push
loope
pop
pop
dec
push
outsb
fwait
scas
mov
push
inc
pop
ljmp
popa
pop
cld
add
sub
push
adc
and
ljmp
mov
cs
iret
xor
sti
or
arpl
lock
jge,pt
push
inc
scas
lods
jno
adc
addr16
push
orl
adc
scas
aas
mov
pusha
hlt
iret
scas
insl
mov
push
stc
sub
pop
push
or
dec
int3
in
js
cltd
and
xchg
pushf
popf
lods
and
pop
cmp
mov
add
or
mov
das
and
push
mov
mov
in
mov
ja
inc
jne
lret
sub
dec
push
lods
addb
dec
clc
jns
jmp
sub
inc
js
les
out
mov
ljmp
or
xor
flds
jp
ret
sti
fstl
xchg
andb
sub
addl
inc
mov
insb
aam
xlat
xchg
fists
push
pop
adc
jl
sbb
std
sbb
xor
dec
imul
and
jo
sbb
outsl
je
push
cmc
xor
shr
xor
mov
fsubl
fldenv
cmp
jns
aas
fchs
mov
dec
lods
dec
mov
add
mov
pop
jmp
push
fnstenv
hlt
popf
mov
sbb
mov
sub
pop
jno
test
test
lret
add
or
or
push
lds
shll
in
jne
jno
or
and
ret
out
rep
inc
push
loopne
lret
lcall
and
and
push
dec
push
jnp
jno
aam
cmpsb
pop
incb
scas
dec
mov
add
mov
jae
jle
mov
lods
xlat
mov
ljmp
out
dec
xchg
lahf
lret
aam
les
enter
adc
xor
out
fsubs
mov
aas
dec
or
fs
int3
inc
mov
stos
ds
loop
sbb
ret
adc
jnp
and
pop
dec
mov
mov
cmpsl
push
adc
mov
call
ds
xor
xor
push
loope
or
jle
fistps
leave
mov
sbb
mov
and
pop
mov
cli
xchg
jle
jg
fstpl
sbb
and
inc
mov
jecxz
mov
sti
cmp
lret
pop
adc
ror
pop
sahf
vpsraw
stos
push
out
jp
and
pop
adc
imul
and
mov
inc
ret
adc
in
fbstp
sbb
jp
les
andl
or
iret
xor
push
rcr
jecxz
in
stos
out
xchg
ljmp
lret
loopne
push
icebp
and
int
sbb
mov
mov
enter
movsb
dec
fsubrl
daa
cmpsb
in
movsl
cmpsb
jo
out
aad
aad
and
adc
mov
out
mov
sbbl
mov
sbb
test
jb
push
pop
mov
aaa
fisubl
add
add
and
repnz
pushf
fidivs
adc
dec
pop
mov
loop
inc
jg
add
enter
aas
cmpsl
pusha
add
xor
cltd
inc
mov
sub
mov
push
ret
pop
stos
mov
data16
and
stos
mov
adc
push
lods
cs
mov
out
push
nop
sbb
inc
incb
rcll
shr
push
xorb
xor
cltd
pop
add
les
subb
and
icebp
add
sbb
add
popl
pop
xchg
push
push
or
sbb
push
jp
sub
cmp
test
out
ljmp
mov
jg
push
out
push
sbb
xchg
add
idivl
ja
adc
outsb
mov
fcmovu
push
push
pop
mov
jbe
lds
loope
xchg
push
push
add
test
test
cltd
dec
lods
ss
dec
jmp
push
mull
cmp
add
jae
cmpsl
sbb
mov
sub
in
add
jg
lods
push
adcl
pop
hlt
stc
push
and
inc
divl
push
xchg
jp
popf
fstl
mov
cwtl
ret
orl
icebp
jecxz
sub
jmp
adc
push
fldenv
push
push
sbb
jns
cmc
dec
push
dec
outsl
ds
dec
pop
mov
sbb
pop
cmpsb
fadd
sub
pop
lret
cmpsl
and
or
mov
dec
add
cmp
shrl
jge
and
push
pusha
xor
xor
popa
adc
jo
ret
mov
push
add
cmpsl
dec
repz
stos
push
popf
and
adc
jle
adc
cs
test
leave
sbb
inc
jb
ljmp
fs
add
hlt
aaa
lret
test
and
out
add
int
sbb
lret
fnsetpm(287
or
lret
loope
mov
imul
xor
inc
ret
fs
stos
jbe
dec
imul
jno
sub
insb
test
sbb
cmp
shll
mov
icebp
mull
push
adc
test
lods
fs
jb
subb
shr
das
shrl
xor
cmp
wrmsr
cld
int3
mov
ret
cmp
fcompl
data16
sbb
mov
repz
fldt
xor
jne
icebp
pop
cs
push
in
aad
xor
fadd
inc
mov
lahf
call
test
mov
push
inc
sub
add
pop
adc
scas
int
fstp
push
imul
movsb
imul
orb
ret
mov
xorl
add
jnp
cmp
cmp
inc
jle
xor
pushl
mov
push
adc
bound
mov
sub
or
push
fldenv
push
inc
jp
insl
mov
and
inc
lcall
jmp
les
cmp
cld
mov
push
lahf
jo
out
fistps
pop
xor
in
clc
cs
into
xchg
cmp
imul
sbb
push
cmp
js
or
or
sbb
or
mov
mov
push
cli
in
cmp
add
mov
inc
fstps
mov
dec
pop
adc
nop
pop
inc
pusha
pop
and
mov
cmc
mul
cltd
nop
sub
dec
add
xorl
jg
push
cmp
mov
in
out
lahf
les
mov
jg
mov
inc
push
mov
pushf
testb
inc
cwtl
dec
mov
mov
inc
jg
xchg
add
xchg
sbb
push
push
pop
not
jne
dec
leave
pop
or
push
lcall
fwait
or
std
jbe
sbb
cmp
sub
in
out
dec
mov
loope
sub
mov
clc
add
sarl
hlt
lods
or
pusha
popa
cli
in
xchg
xchg
push
std
mov
sub
clc
pushf
lret
pop
push
adc
out
cmp
in
and
pushf
adc
or
fnstenv
repz
dec
addr16
sub
sub
int3
push
sub
bound
mov
fs
adc
sbb
pop
inc
xorl
mov
enter
pop
sub
sbb
shll
mov
mov
cmc
aaa
inc
mov
cmp
jecxz
xlat
mov
push
dec
pusha
cmp
out
daa
dec
sub
xchg
cmp
cltd
cmp
jge
mov
jmp
notb
xchg
lahf
sub
or
xchg
in
cmp
insb
insb
xlat
pop
outsl
add
mov
lcall
pop
xchg
cwtl
xchg
cli
aad
sbb
push
xchg
stc
scas
loope
test
es
cmp
shr
xchg
mov
pop
fisubs
lcall
jecxz
sub
sahf
cwtl
push
lock
pop
dec
pusha
push
sbb
mov
lea
or
andb
lahf
fnstenv
cwtl
fdivrl
imul
inc
dec
ret
push
ret
push
mov
sub
cli
xchg
ds
jno
mov
adc
push
add
xor
and
int
and
xchg
testb
mov
sub
xlat
lods
popf
mov
jno
ja
insb
out
inc
shl
dec
inc
ret
add
fdivrl
sub
mov
push
mov
push
adc
dec
jg
shlb
adc
xchg
xchg
popa
add
sbb
je
in
jns
and
dec
bound
xchg
in
sub
lock
mov
pop
cmp
or
add
dec
add
push
xor
adc
xchg
imul
inc
add
decb
mov
lods
xchg
shlb
cmp
jb
xchg
rolb
hlt
outsl
lock
sbb
fldcw
adc
loop
cltd
jge
loopne
adc
xchg
test
lret
pushf
cmc
lds
cli
pop
inc
xchg
jb
lret
push
outsb
popf
test
jg
mov
pushf
push
sub
mov
pop
out
mov
fcomip
mov
and
fucomi
lahf
jnp
mov
stos
shlb
scas
divb
jne
cmc
pop
jle
rolb
std
jae
push
fucomi
xchg
into
test
mov
add
lcall
popa
iret
jl
push
sub
sahf
aaa
xor
mov
lock
push
inc
ljmp
incl
addr16
mov
xor
xor
jbe
out
imul
stc
in
aas
push
in
out
inc
jecxz
pop
push
or
cmpb
mov
jge
pop
jmp
add
clc
or
xor
add
cltd
orb
pushf
lds
dec
rcrb
pusha
jae
fwait
mov
pop
pop
mov
bound
jnp
mov
shlb
out
nop
fwait
hlt
or
inc
xchg
jmp
sbb
mov
rcll
add
mov
adc
xor
mov
dec
inc
inc
rclb
hlt
jecxz
outsl
mov
xchg
adc
fwait
mov
ffreep
clc
pushl
xchg
add
sub
mov
fistl
scas
addr16
mov
pop
daa
sub
push
sbb
inc
fwait
cmp
mov
mov
pop
xor
aas
les
and
and
pop
mov
testl
jno
pop
ja
mov
outsb
jl
jo
sti
dec
sub
outsl
movsl
adc
sbb
pop
in
push
and
dec
sub
jae
cltd
xchg
inc
lcall
and
arpl
sbb
adc
fs
pop
jg
daa
sub
or
ds
cmp
pushf
dec
outsl
shll
jb
xor
ljmp
add
cs
push
adc
push
fistl
sbb
repnz
mov
mov
fwait
jne
push
enter
inc
sub
or
ss
dec
scas
lds
mov
xor
std
or
xor
jmp
bound
dec
xchg
fcmovnbe
adc
adc
fs
or
pop
cbtw
aas
or
add
xchg
jb
and
sarl
pop
mov
repnz
pusha
pop
out
repz
mov
cmp
xchg
fwait
das
das
mov
arpl
aam
push
sar
dec
adc
outsb
mov
cwtl
mov
sbb
jp
mov
sahf
mov
sub
loop
outsl
adc
loopne
jecxz
xchg
push
fcoms
mov
aam
dec
in
insl
jp
inc
cs
pop
andl
adc
hlt
and
adc
sbb
sti
jnp
sbbl
pop
out
cmpsb
adc
adc
subb
das
or
and
dec
fistl
sbb
and
or
andl
jg
lret
loop
inc
mov
mov
or
mov
stos
mov
pop
add
inc
push
and
jle
adc
inc
jns
adc
pop
fsubs
sub
mov
mov
sbb
mov
insb
lret
mov
or
lea
into
cmp
or
lods
icebp
lcall
add
jmp
cmp
mov
or
sbb
out
adc
loope
push
jbe
sub
lcall
sub
fs
mov
fcomps
fcomp
push
pusha
jne
push
mov
lds
mov
shrl
sub
movsb
repz
in
loop
mov
andl
mov
sbb
mov
fisubl
push
test
xor
les
cmp
push
aam
mov
in
out
xorl
mov
add
and
hlt
lods
add
add
xor
xchg
mov
test
insl
mov
push
cmp
pop
push
xchg
dec
xchg
pop
pop
or
iret
mov
repz
test
out
dec
imul
arpl
adc
add
jb
fsubrs
fiadds
or
repz
adc
adc
mov
jbe
out
mov
lret
repz
push
mov
call
adc
aaa
mov
shrb
jg
sbb
fdivs
outsl
movsb
adc
pop
push
fwait
xor
mov
dec
xlat
cmp
mov
sub
add
xchg
adc
insb
mov
jne
and
faddp
jg
das
dec
push
jo
sbb
mov
sbb
adc
dec
mov
adc
adc
or
add
xor
enter
stc
pop
into
popf
sti
aaa
jae
cli
stc
popa
sbb
bound
inc
pop
cmp
add
lahf
ret
lahf
cmp
mov
jbe
mov
mov
fwait
inc
mov
xor
or
sbb
mov
jecxz
inc
cmp
or
mov
pop
add
push
jmp
sbb
dec
nop
sbb
mov
fwait
jmp
pushf
fidivrl
dec
cmpsb
popa
jb
sbbb
mov
lahf
repz
push
sbb
lock
pop
mov
push
lds
daa
sbbb
movsl
loop
xlat
jb
add
xchg
andl
lock
xchg
jb
inc
cmpsl
or
mov
fwait
mov
dec
mov
mov
insl
and
sarl
dec
ds
jp
aas
loopne
aam
or
adc
mov
dec
or
movsb
divl
out
pop
dec
and
loope
mov
sub
and
js
jge
xor
stos
jnp
xor
and
dec
into
dec
cmp
mov
in
iret
sub
jb
jl
jbe,pn
mov
jp
in
shl
cwtl
cwtl
dec
xchg
pop
mov
or
popf
lcallw
aaa
pop
nop
jg
push
jns
int
fcmovne
sub
hlt
mov
cmc
fs
fsubrl
or
ds
mov
stos
int
pop
clc
mov
mov
fcoms
xchg
mov
shl
aad
sub
pop
fwait
sbb
jnp
cmp
cmp
shl
shlb
push
push
cmpsl
xchg
fwait
cmp
sub
jbe
lock
jns
and
sbb
cmp
daa
xchg
mov
and
fisttps
int3
icebp
xchg
loop
mov
cmp
icebp
inc
adc
mov
pushf
addr16
xor
push
out
mov
xchg
cmc
xchg
int3
sub
xor
xchg
mov
mov
imul
push
cmp
aam
inc
pop
mov
add
push
xchg
imull
cltd
xor
mov
or
insb
fcompl
fwait
add
repnz
and
adc
cltd
bound
or
aas
fisttpll
or
push
and
xor
mov
in
jge
or
xor
std
sub
leave
dec
mov
jno
dec
lret
stos
lods
pusha
fdivl
cltd
cmp
sbb
subb
and
dec
shl
adc
je
cltd
movsl
add
sub
test
mov
push
aas
or
or
outsb
or
inc
nop
pusha
add
sahf
loop
mov
popa
xchg
mov
xchg
xchg
pop
push
sub
and
xorb
jns
mov
fstps
xor
inc
js
mov
int
movsb
mov
fadd
jl
inc
xor
sbb
ja
inc
repnz
cmp
aam
xchg
xor
enter
mov
sub
jmp
popa
cwtl
ljmp
sub
jo
xchg
add
clc
jnp
rcll
jge
ret
lds
gs
cmpsl
aas
adc
inc
inc
orb
jae
int
loop
nop
jmp
dec
jns
xchg
iret
mov
sub
adc
jmp
and
subl
adc
rolb
add
jmp
xchg
test
mov
hlt
or
fidivs
clc
pop
pop
and
or
and
cli
test
pop
xor
scas
sub
dec
pusha
jnp
inc
xchg
popf
push
dec
pop
xor
jo
lret
popf
mov
cmc
jmp
repz
sub
dec
cmp
scas
fidivl
mov
mov
mov
rcrl
stos
sbb
mov
xchg
scas
mov
or
scas
js
pop
clc
sbb
ljmp
and
add
jbe
add
xchg
add
lahf
jo
sbb
push
dec
aaa
inc
enter
iret
cmp
and
mov
outsb
mov
cld
mov
xchg
and
cmc
xor
arpl
int3
icebp
add
mov
jne
enter
test
lret
xchg
shll
push
pushf
xor
and
bound
add
ret
lahf
in
aam
pop
xchg
push
cmpsl
lcall
daa
sub
test
std
mov
pop
test
adc
inc
mov
push
jmp
fs
les
shll
xor
sbb
push
jmp
leave
or
lret
and
adc
pop
repnz
out
sbb
adc
cld
les
fstpt
hlt
cltd
mov
lcall
mov
pop
loopne
pushf
ret
frstor
fistpll
cmpb
es
mov
insl
or
jae
push
mov
test
cmpsb
xchg
xchg
outsb
lea
fstps
add
and
test
dec
out
jp
add
dec
sbbb
pop
and
dec
iret
stc
sbb
aad
xchg
jmp
add
mov
orl
sahf
lock
mov
xlat
push
jge
testb
sbb
mov
shr
mov
ljmp
adc
xor
pop
xor
mov
pop
movsl
lcall
lret
xchg
fstpt
mov
xor
dec
inc
xchg
popa
rclb
jl
aas
adc
lahf
imul
pop
imul
pop
test
sbb
dec
ret
adc
add
push
cmpb
dec
stc
mov
xor
push
out
pop
inc
enter
jle
into
outsl
mov
out
test
es
loop
aam
mov
int
ret
repz
cmp
bound
sbb
cld
imul
sub
out
insb
notl
mov
bound
pop
sarl
cli
clc
fcoms
stos
pop
fisttpll
cmpsl
rorb
stos
stc
lea
push
fs
mov
xor
pop
repz
movb
sbb
test
add
ss
sbb
xor
cmp
and
pop
clc
pop
scas
cmp
call
lds
sti
nop
xchg
enter
push
jecxz
loope
xchg
movsb
fstl
je
shll
lock
sti
mov
pusha
dec
add
cs
mov
aas
arpl
jg
lahf
push
in
fsubl
into
loope
dec
adc
sbb
loopne
or
sti
xchg
ss
inc
mov
pop
dec
add
xchg
scas
adc
faddl
and
add
lods
pop
dec
ret
nop
mov
xchg
push
outsl
jmp
repz
test
mov
pop
rorb
adc
in
cltd
lock
mov
dec
push
jns
fwait
mov
push
add
js
out
jp
loopne
addl
test
push
or
clc
test
sub
mov
xchg
mov
cmc
sub
sbbl
xor
push
and
mov
mov
push
insb
je
or
mov
add
outsb
and
ficompl
add
sub
inc
fisubs
jns
jb
cmpsb
loopne
pop
mov
scas
xor
xor
inc
roll
out
aaa
lock
xorb
arpl
inc
push
push
outsb
fs
test
and
sbb
lahf
movsb
pushf
jne
pop
mov
sbb
pop
jo
iret
add
mov
xor
xchg
mov
pop
daa
push
jmp
cmp
aam
push
jecxz
out
push
mov
out
in
fs
and
daa
addr16
jg
subl
out
push
movsb
mov
mov
out
push
inc
pop
push
or
mov
push
dec
inc
ljmp
pop
push
sbb
mov
adc
xchg
xor
pop
jmp
stc
insl
sub
dec
push
dec
pop
and
lcall
pop
ret
xchg
insl
sti
add
jbe
pushf
aad
cmp
outsb
adc
jg
adc
popa
adc
pop
jle
push
xchg
mov
push
jmp
mov
push
cwtl
mov
imul
jbe
sarl
les
mov
or
xchg
leave
sub
mov
insl
adc
sbb
fcomp
and
out
inc
mov
and
sub
mov
xchg
adc
movsb
out
test
dec
dec
imul
ss
rorl
mov
xchg
imulb
clc
inc
sbb
adc
push
mov
scas
push
xor
mov
fidivrs
scas
pop
bound
cmp
dec
fstl
ss
fwait
aaa
ss
test
outsl
andb
mov
aas
cmpsl
lret
push
or
roll
mov
daa
daa
stos
movb
test
daa
jne
mov
sub
lods
sti
jl
add
jae
adc
mov
fsubrs
xchg
aad
jge
iret
fistl
mov
lods
xchg
adc
out
aad
xor
in
add
into
sub
xlat
add
pop
and
xor
pop
stos
sbbl
adc
adc
dec
fistpll
rorl
int
pushf
sbb
shlb
adc
pop
loop
lods
lock
scas
jmp
cmp
imul
std
adc
and
test
adc
sub
in
nop
lods
outsb
mov
pop
dec
stos
jle
mov
dec
test
xor
xchg
xchg
fs
or
mov
xlat
scas
sbb
pop
jbe
sub
jne
cltd
je
inc
fsubrs
cltd
fldl
dec
pop
out
sbb
cmp
xlat
fldt
outsb
std
hlt
mov
or
jno
or
jae
rcr
and
and
aaa
sub
fwait
push
das
and
fmuls
mov
fdivl
xorb
cs
mull
inc
pop
hlt
lods
loop
cmpsl
xorb
stos
mov
ljmp
inc
fcoml
mov
mov
adc
pop
leave
mov
dec
outsl
jg
pop
mov
lods
dec
cmp
mov
dec
ficompl
repz
cwtl
dec
adc
or
clc
lret
pop
icebp
jmp
dec
int
iret
mov
dec
jmp
or
lds
cli
mov
cli
movsl
roll
shrb
ret
or
xor
sbb
sub
adc
sub
enter
ret
stos
cs
ret
bound
clc
dec
sbb
sbb
adc
mov
insl
test
pop
and
pop
fidivl
scas
push
add
cmpsl
mov
mov
mov
jl
shrb
dec
arpl
stos
es
jecxz
lods
xorl
mov
add
mov
cmp
adc
jp
daa
and
mov
cmp
lea
pop
out
fdivrl
lret
sbb
push
push
pop
pop
and
shlb
aas
int3
push
or
cltd
aaa
arpl
icebp
mov
out
and
cli
lods
lcall
mov
mov
sub
bound
push
sub
or
mov
movsb
jg
cmp
mov
xor
imul
shlb
movsb
hlt
leave
lret
sbb
shll
xchg
loop
or
cmp
or
ja
repnz
mov
sbb
push
mov
sbb
hlt
jl
mov
mov
pop
pusha
mov
inc
add
xlat
inc
es
clc
in
pop
jmp
lods
movsl
push
movsb
rolb
pop
mov
movsb
in
js
loope
out
mov
xchg
sbb
je
sbb
fwait
in
xchg
adc
mov
push
mov
adcb
notl
lock
mov
stos
loop
jecxz
add
mov
xor
fnstcw
mov
enter
lret
stc
pop
adc
lret
pop
iret
jbe
dec
test
xchg
sub
pop
lahf
add
test
fwait
push
cmp
inc
sbb
sbb
adc
sbb
adc
mov
pop
mov
mov
mov
sahf
jg
push
xchg
fimuls
dec
and
pushl
rclb
clc
pop
pop
xchg
and
xlat
pop
pop
loope
aaa
jne
xor
rcr
jb
lock
jp
sub
pop
cmp
mov
xchg
pop
pop
mov
or
pop
cmp
lds
out
shlb
arpl
loope
push
out
mov
mov
lret
mov
flds
mov
dec
sti
jmp
pop
dec
fisubrs
inc
or
aad
mov
mov
psubsw
pop
dec
lret
cld
aaa
sub
jg
test
mov
cltd
push
add
mov
dec
mov
nop
cmpsb
inc
sbb
pop
into
int
add
xor
lahf
add
adc
mov
sub
inc
fcoml
push
aaa
out
jge
inc
add
fcoml
mov
scas
sub
inc
fwait
pop
xchg
and
mov
mov
xchg
cmp
jp
mov
popf
test
sbb
stos
cmp
xor
lds
or
sbb
dec
pop
imul
push
xchg
int3
sarl
movsl
lds
cmc
out
add
or
aas
mov
push
leave
insl
push
and
and
in
sub
jbe
dec
lds
movb
cwtl
adc
rcll
push
or
push
mov
movsl
sbb
sub
mov
and
add
dec
xlat
in
pop
divl
loope
insl
addb
cmp
sbb
adc
bound
pop
cmpsl
repz
insl
jbe
xor
insl
lods
jecxz
loop
mov
xchg
pop
or
pop
shlb
leave
xchg
jo
lret
fidivl
repnz
push
ja
sbb
int3
out
add
stos
loopne
inc
sub
into
add
xchg
imul
mov
test
inc
fwait
cwtl
push
jmp
mov
stc
or
leave
pop
aad
iret
mov
push
inc
mull
add
into
rcrb
int3
subl
daa
jne
fwait
push
scas
dec
mov
jbe
js
and
mov
aas
adc
xchg
fwait
dec
jns
mov
and
mov
inc
in
lods
dec
std
cmpsb
add
fsubs
cmp
test
xchg
orb
jmp
dec
xor
icebp
scas
dec
pop
lds
adc
or
inc
add
mov
addb
fndisi(8087
push
imul
inc
inc
out
aaa
pop
push
pop
push
inc
push
int
sub
xor
repnz
sub
mov
or
inc
cmp
test
cmp
mov
stos
stos
enter
lods
pop
lcall
lahf
imul
sub
mov
dec
mov
pop
cwtl
lahf
outsb
jl
mov
lds
or
jnp
out
xchg
and
outsl
sub
xor
mov
sbb
pop
imull
jb
xor
out
mov
add
jns
rcrb
lret
mov
mov
mov
std
push
dec
and
lods
cmp
stos
cmc
fcmovu
mov
in
pushf
push
cmc
pop
add
dec
push
das
imul
or
shlb
xchg
jb
xor
jmp
cmpsb
loop
lret
outsl
icebp
call
clc
adc
daa
pop
mov
add
cmp
adc
insl
rolb
xor
lods
pop
push
dec
scas
lock
clc
repnz
lods
sub
xor
lods
cmc
test
cmp
cmp
push
xchg
or
enter
cmpsl
mov
outsl
pop
and
nop
lret
arpl
dec
fildll
jmp
add
pop
or
imul
xor
jns
mov
imul
repnz
nop
out
ret
mov
pushf
push
leave
mov
dec
ja
jnp
mov
inc
jle
divb
rclb
jmp
mov
lds
and
mov
add
sbb
sub
aad
sti
add
add
fisttpll
loope
jb
outsl
lret
pop
imul
lods
test
rorl
push
pop
inc
mov
mov
mov
fwait
and
repz
movl
out
jmp
pop
xchg
jp
fldenv
xor
in
loop
inc
push
repz
call
in
pushf
testl
gs
test
std
xlat
cli
cld
cmp
lds
xor
inc
sbb
dec
test
loopne
jo
outsl
es
jl
and
pusha
xor
jp
loopne
ljmp
cmp
ret
mov
in
nop
jp
ljmp
aad
outsb
mov
push
mov
negl
xor
scas
push
dec
mov
aad
ljmp
mov
mov
stos
xor
mov
xchg
adc
mov
or
js
fwait
out
mov
je
dec
cmc
dec
cmpsl
sub
and
stc
inc
and
cmp
pop
push
les
and
lea
fs
pmulhw
and
push
dec
and
jno
push
aas
mov
loope
out
sub
lock
mov
loope
ja
push
ljmp
stos
push
les
push
cli
jns
stos
sti
pop
enter
or
inc
push
icebp
sub
push
scas
push
adc
data16
test
stc
out
sub
add
jno
in
mov
lcall
hlt
push
into
repz
sbb
les
inc
or
and
mov
stos
sbb
stos
mov
fld
and
mov
int
subb
xchg
aaa
adcb
ret
out
jmp
sub
ret
popf
out
push
xlat
hlt
xchg
cmp
jo
inc
lods
pop
in
jg
enter
jle
scas
test
xchg
pop
je
mov
or
stos
mov
and
fsubp
xlat
out
sbb
lock
cmpsb
dec
sub
fbld
jnp
jle
test
cmp
mov
sub
mov
clc
arpl
push
mov
sub
outsb
cmp
hlt
and
and
imul
dec
mov
xor
sti
clc
xlat
xor
pusha
loop
cmp
dec
mov
movsb
sbb
addr16
sbbl
pop
sub
add
inc
jns
pop
cli
xchg
sar
aam
dec
aam
call
or
mov
aad
mov
pop
nop
imull
push
mov
ljmp
sbb
or
sub
dec
sub
lds
mov
fs
ja
inc
es
lret
in
cmp
in
jmp
sbb
and
mov
jae
lock
push
jmp
xlat
jmp
xchg
aaa
push
push
lds
ljmp
inc
clc
sub
jge
and
jns
adc
repnz
jg
adc
loope
xor
lea
and
cwtl
jmp
pop
mov
fcompl
icebp
pusha
fnstsw
shrl
sbb
jg
fisubs
and
pop
lcall
lahf
ror
push
push
cmp
insb
scas
mov
pop
loope
jge
jbe
adc
sub
dec
lea
into
xor
adc
mov
adc
loope
mov
shl
mov
pop
push
cmpsl
jmp
bound
dec
das
mov
and
dec
inc
mov
pop
xchg
xchg
mov
push
xchg
lcall
pop
mov
fldcw
lods
fsubl
add
mov
push
mov
cwtl
jg
ljmp
adc
jl
or
mov
fidivrl
xchg
inc
mov
push
xor
dec
aaa
mov
jmp
mov
mov
js
subb
movsb
sbb
add
movsl
es
lock
test
arpl
push
mov
push
dec
cmc
jmp
ja
dec
imul
int3
xchg
inc
out
movsb
cmpb
cmp
push
xchg
ss
inc
fdivrs
cmpsl
pushf
incb
xor
scas
mov
add
xchg
sbb
and
hlt
and
fwait
add
shrl
mov
movsb
add
out
adc
insl
icebp
push
bound
shrb
and
mov
xchg
bound
mov
popf
insl
jle
sbb
daa
loop
sub
mov
add
fimull
xchg
adc
add
les
inc
push
jnp
leave
sti
xchg
mov
pop
mov
and
mov
sub
popf
cld
xor
mov
aaa
xchg
mov
stos
enter
loopne
repz
add
mov
out
imul
leave
mov
ficomps
insb
sub
inc
and
imul
popf
mov
out
jae
mov
push
pop
mov
out
rorl
daa
testl
loop
xor
lods
orb
or
aam
dec
push
add
arpl
xor
out
sbb
mov
sarb
inc
sub
out
outsb
xor
leave
jo
adc
pop
mov
outsl
inc
fucomi
cmp
fdivrl
or
xor
jmp
jno
clc
mov
pop
push
scas
roll
add
out
jge
jmp
dec
xor
jo
lods
sti
or
inc
xchg
insl
fwait
inc
mov
pop
std
sbb
inc
psrld
ljmp
idivl
xchg
sbbl
aam
outsl
jne
in
cwtl
ret
ret
fnsave
xchg
mov
rcrl
movsl
add
dec
push
sub
pop
jne
adc
cltd
scas
cmpsl
or
mov
xor
push
divl
mov
add
ret
jns
inc
cltd
rcll
add
mov
in
out
dec
sub
mov
test
addr16
xchg
pushf
scas
inc
jb
xor
cmp
xchg
aaa
clc
add
lcall
mov
cmp
jnp
inc
jne
xor
enter
shr
cmp
xor
jge
clc
lods
jns
imul
imul
subb
pop
fidivrs
push
pushf
pop
inc
sub
popf
fs
push
ss
sub
iret
pushf
mov
out
inc
push
cwtl
movsl
out
bnd
mov
pop
pop
pop
stc
xor
insb
addr16
lods
add
test
lods
loopne
mov
pop
add
in
xor
jg
push
adc
lods
out
sbb
iret
insb
outsl
ss
and
push
mov
ds
push
cwtl
mov
out
mov
sti
lret
jle
aaa
pop
add
pop
pop
into
js
out
push
adc
loopne
xor
sbbl
pop
cmpsb
aas
xor
cmp
insb
xor
aad
or
or
rorb
std
fisttpl
jbe
adcb
or
adc
and
js
fcoml
mov
fcompl
xlat
inc
inc
jmp
xchg
push
sbb
jns
lock
sti
pop
mov
mov
jae
mov
insl
incb
push
push
inc
loop
xor
jns
out
std
inc
inc
nop
icebp
mov
mov
out
sub
ss
mov
enter
das
mov
adc
push
pop
mov
or
dec
hlt
cmc
and
cmp
test
sbb
mov
push
out
shll
sbb
in
sarl
push
loope
sub
mov
add
pop
pop
mov
das
jo
mov
jnp
incb
daa
pop
ret
mov
int3
xor
inc
mov
mov
pop
fldl
mov
push
cmp
pop
pop
push
subb
mov
je
out
xor
out
outsb
loopne
hlt
imul
repnz
sub
stos
out
and
xor
cltd
mov
mov
das
or
lock
leave
loopne
xor
sbb
and
or
push
xchg
cs
lods
push
or
pusha
mov
inc
cwtl
fbstp
ds
xor
mov
xchg
call
inc
xor
fsubl
cmp
push
jb
lcall
bound
mov
or
ds
movb
mov
imul
inc
dec
fdivs
and
add
insb
call
decl
nop
fidivrl
pop
xorb
mov
cmp
pop
int3
push
add
mov
aam
fisttps
fisttpll
jo
push
push
xchg
pop
pop
push
jp
cwtl
rol
lock
push
push
xor
and
pop
out
out
cmc
push
xchg
xor
mov
iret
inc
bsf
popf
pop
bound
adc
inc
add
icebp
add
mov
add
jo
pop
stc
stc
sahf
cmpsb
push
add
daa
or
cmp
lods
or
imul
push
imul
ds
add
push
outsl
jg
push
popa
jno
dec
mov
jle
popa
ljmp
or
out
mov
mov
adc
sub
push
ret
xchg
cmp
mov
dec
adc
mov
mov
jo
xor
jnp
es
pop
sub
scas
out
xor
jbe
pusha
int
mov
jns
add
out
add
jns
addb
cmp
push
push
repz
push
lods
jle
lea
sub
inc
in
jo
fdivrs
fisttps
adc
jae
mov
int3
notl
shlb
test
movsl
faddl
xchg
jmp
dec
std
push
or
jl
lods
adc
mov
arpl
push
pop
loope
push
lahf
cld
inc
adc
jae
repz
dec
mov
sbb
fisttpl
sarb
mov
int3
outsb
sub
mov
jmp
jp
ljmp
roll
xchg
xor
lea
stc
xchg
fsubl
call
sub
mov
cmp
or
std
shlb
test
mov
cmp
dec
lcall
inc
sub
jne
cmpsl
and
call
mov
jge
fwait
xchg
sar
xor
js
xchg
js
push
dec
hlt
inc
mov
xchg
pop
iret
push
push
mov
stos
stos
jl
add
ja
lds
cs
push
mov
sub
fcoms
inc
test
sbb
jb
and
cltd
int
ds
pop
pop
jge
loop
mov
and
sbb
mov
popf
adc
dec
scas
sbb
push
xchg
mov
int
xor
std
add
push
daa
xor
into
dec
cli
xchg
pop
es
sub
call
fidivl
lods
or
fistpll
jecxz
pop
cmp
or
and
movsb
add
mov
ljmp
in
jge
mov
or
push
pop
aad
scas
out
test
rclb
je
cmp
jl
xor
icebp
dec
inc
jne
stc
jne
mov
int3
add
jne
xchg
mov
shl
jg
dec
hlt
sbb
ficompl
jl
or
mov
mov
lods
or
and
and
push
sub
mov
pop
insl
call
xchg
addr16
inc
repz
mov
lret
testb
adc
pop
icebp
mov
cwtl
add
mov
jp
jge
pop
rcll
loope
pop
add
and
xlat
loopne
push
fstp
pushf
sbb
movsl
ljmp
jnp
xor
mov
cmp
dec
push
cmpsl
push
roll
and
test
leave
inc
ljmp
pop
out
out
adc
sbb
mov
ss
test
mov
fsubrl
lock
mov
push
insb
enter
aas
or
jo
movsb
mov
outsb
dec
or
mov
jp
mov
add
mov
xchg
enter
jns
push
add
mov
outsb
fdivl
stos
lea
subl
stc
data16
or
adc
jno
push
lahf
outsl
xlat
sub
imul
mov
jbe
out
jl
mov
fs
xorl
xchg
sarl
push
ret
aas
dec
jb
lret
cmp
inc
inc
mov
and
mov
mov
push
lahf
idivl
and
pop
cld
or
jno
adc
out
ljmp
adc
or
movsb
and
fmuls
xchg
rolb
xor
in
pop
xor
je
cltd
hlt
int
pop
aaa
jmp
pop
in
fldenv
js
or
mov
mov
jecxz
decl
orb
fstpl
shl
cltd
sub
jmp
pop
lea
dec
scas
test
push
popa
mov
mov
mov
jp
push
lock
aam
cs
testb
mov
into
xor
fnstsw
int3
and
lcall
lcall
das
jbe
inc
lods
loop
pop
adc
scas
fcomp
adc
sub
adc
jne
dec
add
push
mov
insl
add
push
arpl
jmp
cmp
xchg
int
hlt
adc
mov
fwait
dec
push
lahf
sarb
push
scas
or
fs
cmc
test
hlt
shrl
cmc
std
aas
test
popf
inc
jns
in
popf
mov
out
je
test
into
push
out
cli
ljmp
sub
loope
inc
data16
hlt
dec
jl
test
or
das
fcoml
cmp
inc
movlps
ret
jbe
cmpsl
fcomps
adc
stos
dec
and
nop
fistpl
mov
inc
lea
cmp
jbe
mov
fsubrl
nop
lods
jne
lret
pop
lods
add
mull
or
xor
sub
dec
jbe
sub
adc
movsl
gs
lods
ret
mov
xchg
xor
mov
rcll
or
lds
or
cmp
sub
pusha
xchg
out
je
sbb
mov
cmp
lds
push
jne
adc
mull
int3
insl
inc
or
fidivs
icebp
daa
pop
loope
stos
inc
mov
or
in
pop
mov
mov
or
pop
mov
sahf
pop
int
fucomi
in
in
bnd
adc
mov
repnz
sub
jg
xor
mov
std
popa
jbe
stc
jge
jmp
mov
dec
jae
stc
xchg
mov
ja
and
movsb
popf
cmpsb
shlb
or
inc
or
nop
dec
xlat
decl
icebp
sub
out
mov
clc
jae
jl
push
ljmp
sbbl
cwtl
outsb
pusha
sarb
into
dec
or
mov
mov
adc
mov
pop
ret
inc
lahf
mov
es
fnstenv
lcall
stc
xor
mov
fsubp
mov
mov
das
fucomp
jns,pn
cmp
push
lods
sub
xor
inc
dec
adc
ss
dec
ss
sbb
sahf
popf
inc
adc
mov
repnz
dec
int
jmp
mov
sbb
cltd
push
dec
mov
mov
adc
fisttps
mov
out
dec
jle
cmp
cld
jnp
sub
out
sbb
add
jae
pop
cltd
neg
sbb
inc
ret
in
mov
mov
xor
mov
lahf
lods
jp
mov
or
xor
push
or
bound
test
shrb
cmc
aaa
xlat
mov
dec
dec
jmp
mov
pop
data16
xchg
jle
pop
dec
scas
pop
aad
inc
fwait
mov
std
icebp
lahf
popa
imul
aam
mov
sbb
mov
cmp
data16
sbb
jp
mov
fimull
cmp
push
jb
nop
mov
clc
movsb
mov
movsl
cli
add
rcrl
movsb
mov
mov
cmpl
and
or
mov
das
out
sarb
jb
jle
hlt
test
adc
sbbl
sbb
jmp
or
adc
dec
mov
and
or
jp
cmp
stc
jge
nop
insb
inc
arpl
mov
mov
cltd
sbb
pop
dec
cld
aas
xchg
sti
cmp
outsl
popa
imul
mov
bound
push
les
mov
bound
in
cmpsl
mov
dec
icebp
cli
das
lock
iret
mov
push
xchg
enter
movsb
cmc
imul
arpl
jb
addr16
popa
jmp
mov
pusha
mov
mov
inc
dec
mov
ljmp
out
xor
mov
pop
cli
add
inc
mov
adcl
das
movsl
pop
mov
call
or
into
pop
sub
out
inc
stos
stos
hlt
xor
test
or
cmp
dec
jle
gs
popa
push
test
inc
frstor
imul
jge
stos
movsb
cmpsl
movsb
test
mov
mov
movb
cwtl
adc
adc
in
hlt
fisttpll
inc
mov
ja
into
xchg
mov
jns
inc
shll
int
out
push
lret
in
les
add
enter
xor
jno
or
xchg
movsb
push
lret
lds
sbb
in
scas
xchg
cmc
adcl
jmp
mov
sub
movsb
sbbb
repnz
xchg
adc
ljmp
cmp
aaa
hlt
shr
dec
and
lods
mov
mov
push
or
and
clc
addr16
les
out
inc
cmp
scas
das
ja
xchg
aad
mov
xor
inc
lods
push
inc
mov
mov
jmp
testl
and
enter
cmpsb
push
cmp
mov
out
test
jge
insb
filds
fstl
sete
icebp
int3
push
jae
lods
or
mov
add
sbb
loope
scas
mov
ret
in
les
enter
mov
std
in
into
fs
adc
loopne
sbb
push
cmc
scas
add
sub
adc
sarl
xchg
push
fldenv
ficoml
repz
and
dec
sbb
hlt
lcall
out
cltd
xor
cmpsb
in
cmpsb
es
das
div
outsb
xchg
sub
inc
out
leave
insb
jg
movsl
out
add
pop
es
xchg
daa
aad
repnz
mov
fcomip
pop
repnz
les
lret
ss
data16
inc
pop
lods
adc
cmp
enter
xor
lods
xor
pop
jnp
jae
nop
mov
mov
lods
add
cmp
loopne
push
sbb
inc
mov
mov
aam
mov
mov
mov
adc
mov
xchg
xchg
bound
pushf
fimuls
adc
cltd
mov
push
inc
inc
ljmp
cmp
sub
test
pop
pop
xor
test
lret
mov
sub
in
cmpsb
or
enter
add
xor
dec
cli
dec
and
adc
xor
add
inc
popf
in
and
lahf
sahf
or
cmp
mov
gs
xchg
cmc
or
int
cld
lock
pushf
pusha
pop
cmp
jne
inc
outsl
clc
xor
cmpsl
in
gs
test
adcb
mov
and
aad
add
mov
mov
mov
inc
mov
andb
cli
repnz
pop
pop
push
dec
dec
roll
cmp
mov
jge
push
ds
push
lahf
cmp
cmpsl
pop
in
pop
es
enter
test
insl
lea
pop
aad
lds
scas
inc
scas
sbb
jmp
dec
ds
mov
xchg
mov
xchg
push
idivl
mov
dec
sub
jge
notb
outsl
ja
repz
fs
dec
lds
xchg
in
push
and
add
aad
xor
and
shrl
lods
dec
out
mov
and
fisttpl
or
pop
mov
mov
adc
outsl
stc
or
ffreep
hlt
popf
arpl
mov
push
and
sar
sub
mov
cltd
ret
ficomps
mov
ret
lods
insb
adc
fwait
inc
add
jmp
jne
and
fcoms
jge
sbb
push
je
nop
jno
pop
xor
popf
mov
fwait
or
jo,pn
inc
insb
dec
in
jae
insl
xor
loop
pop
sub
mov
enter
lret
xchg
sub
enter
insb
loopne
inc
in
mov
in
test
xchg
gs
repz
mov
or
sbb
fwait
xchg
jle
jbe
sub
push
push
scas
sar
in
cmpsl
stos
xchg
ja
sbb
jmp
sub
imul
mov
mov
aad
leave
mov
stos
fdivs
orb
pop
add
popf
and
inc
inc
jl
jmp
adc
scas
flds
popa
cli
inc
or
test
xchg
dec
ret
testl
lret
incb
mov
leave
lock
or
pop
mov
in
mov
lret
add
jecxz
mov
xor
loop
out
psubusb
stc
sbb
jp
mov
pop
sub
mov
sub
cmp
inc
das
lcall
das
or
test
jne
dec
push
cmp
lock
push
sub
xchg
std
mov
repz
andl
inc
loopne
sub
enter
push
aas
cltd
loopne
in
and
scas
pop
and
in
loopne
mov
vdivpd
mov
pop
cmp
jmp
push
lea
div
push
mov
jmp
fldt
repz
push
shlb
sub
mov
lock
aas
insb
cmp
xchg
movl
xchg
cmp
addr16
test
divl
add
stos
adc
incb
push
adc
cwtl
rcr
jmp
ret
pop
pushf
stos
pop
mov
and
fiadds
dec
inc
dec
mov
sbb
hlt
sub
es
xchg
arpl
xchg
cwtl
xchg
add
mov
jne
jge
dec
lods
inc
mov
je
sahf
xchg
sub
jne
push
cwtl
add
lock
pusha
jo
pop
mov
sbb
imull
inc
adc
gs
lahf
dec
or
test
sbb
out
mov
inc
jecxz
cmp
xchg
push
cs
push
fnstenv
xchg
sub
xor
or
lea
icebp
inc
gs
inc
ss
ret
mov
pop
fsubrs
sbb
ds
dec
shrb
dec
lahf
fnstcw
mov
push
and
je
or
inc
and
dec
mov
arpl
call
test
in
adc
in
les
out
test
push
or
sub
pop
ret
or
rorl
negb
fnop
push
fildll
jecxz
aad
dec
divb
sub
aam
sbb
or
pusha
inc
cmp
sub
mov
inc
jecxz
dec
cmp
lods
jb
xor
xchg
loopne
dec
shlb
mov
push
push
shl
jg
outsl
sbb
adc
mov
hlt
jae
repnz
aad
jl
testb
loope
in
cmp
movsl
dec
xchg
push
dec
cld
xchg
jae
ret
xchg
and
adc
adc
inc
test
jg
dec
repz
mov
xor
inc
or
int3
xchg
jl
subl
mul
fs
cli
xchg
rcl
std
sub
add
xchg
in
xchg
lret
pop
sub
mov
cltd
call
clc
call
jmp
in
adc
pop
sbb
into
sti
loope
or
in
cmp
push
mov
sti
cmp
scas
fdiv
shll
xor
arpl
mov
sbb
fbld
push
mov
imul
insl
xor
das
sub
inc
fnstsw
pop
sti
mov
adcl
call
jbe
xchg
pop
push
push
ftst
test
cmpsl
test
mov
mov
test
pop
fucomi
nop
xor
aam
cwtl
sub
gs
fwait
add
out
xchg
sahf
xchg
ja
repz
loope
xchg
mov
push
dec
pop
jp
and
notl
jmp
or
fwait
push
or
and
clc
imul
xor
mov
jae
adc
jnp
xor
xor
clc
ds
pop
mov
inc
lret
mov
lret
nop
sbb
inc
icebp
insl
adc
jnp
mov
mov
cmpsb
mov
xchg
sbb
call
push
cmp
push
hlt
fsubrs
mov
rorl
and
aas
adcb
dec
repz
xor
push
loopne
jle
ljmp
ret
sub
mov
sub
mov
imul
shl
mov
bound
mov
xchg
inc
divb
inc
add
clc
mov
stos
inc
dec
push
sbb
dec
xchg
mov
pushf
pop
mov
pop
or
stos
xor
sbbl
lret
pop
jmp
insb
add
aaa
adc
aaa
stos
or
mov
adc
hlt
notl
push
add
gs
adc
mov
adc
movsb
xchg
shr
daa
repz
push
or
lret
loop
cmp
xchg
fwait
mov
lret
test
jnp
fnstenv
push
push
js
lret
xchg
xchg
mov
in
shlb
or
jmp
mov
das
test
sub
cltd
jl
pop
gs
mov
pop
push
icebp
add
or
and
push
call
rcll
xor
enter
pop
dec
mov
inc
decl
dec
cli
in
inc
cmpsl
cltd
movsb
xchg
mov
push
test
add
sbb
in
enter
ja
sti
xor
ss
or
daa
adc
push
shrb
cmp
stos
mov
in
jg
xchg
in
bound
mov
mov
lret
loop
mov
sbb
jp
dec
jnp
fisubrs
xor
inc
xor
and
mov
push
cmpsb
and
sub
test
dec
mov
rorl
pop
mov
cmp
cmpb
into
nop
hlt
add
pop
and
jnp
inc
xor
xchg
aaa
adc
stos
push
push
push
mov
fimuls
jle
mov
ljmp
insl
pop
inc
xor
and
cmp
js
mov
fnstcw
das
push
jbe
dec
push
xchg
aaa
lahf
lods
adc
push
jle
cwtl
insb
fldl
xor
jbe
jbe
push
fwait
mov
xchg
loope
pop
xor
or
lret
push
inc
cmp
cli
ljmp
int
jle
pop
mov
pop
or
pushf
push
loope
or
dec
aam
sbb
sbb
lock
push
addr16
std
cmp
imul
pop
insl
repnz
mov
mov
ret
push
out
loop
sub
adc
push
and
dec
mov
inc
fwait
jle
inc
cmc
or
inc
mov
arpl
jnp
popf
or
in
dec
mov
insl
mov
pusha
adc
jmp
repnz
push
xor
pop
clc
mov
pushf
mov
imul
jae
daa
hlt
lret
das
sahf
pop
dec
loop
mov
stos
sbb
in
xorb
fnstenv
in
mov
push
inc
dec
das
pop
push
sbb
data16
jmp
mov
pop
mov
sbb
bswap
imul
dec
mov
fdivl
fdivl
clc
jge
imul
dec
jmp
mov
sub
xchg
add
in
aam
push
lea
and
in
dec
test
mov
jae
sub
pop
dec
inc
nop
js
popf
imulb
xchg
cmp
lahf
adc
rclb
dec
xchg
adc
cmp
aas
das
ja
imul
push
dec
mov
jmp
sub
pusha
and
mov
hlt
mov
xchg
or
xchg
adc
arpl
push
mov
pop
jg
push
push
jne
mov
mov
xchg
sbb
incl
sbb
bound
pop
jnp
les
pop
pop
jne
shr
enter
mov
mov
in
mov
nop
hlt
sbb
fimuls
fldl
mov
sti
add
aad
test
daa
fiadds
repnz
jnp
push
cli
aaa
mov
insl
xchg
mov
shrl
ficompl
mov
les
cmp
imul
jnp
cmp
outsb
stos
scas
fadds
pop
and
out
cld
das
pop
je
sub
stc
xchg
xchg
daa
sahf
outsl
or
insb
cmpsl
fisubrl
out
in
pusha
cwtl
cmp
lcall
sub
xor
inc
lret
mov
push
sbb
lods
xchg
arpl
jge
sbb
adc
inc
jl
cwtl
or
push
insl
mov
xchg
cmp
push
aam
addr16
xor
mov
xchg
mov
adc
sub
int
aad
icebp
push
test
arpl
lods
dec
rcll
mov
pop
idivl
pop
jmp
fnstsw
adc
jno
std
cmp
pusha
loope
push
das
jno
jmp
dec
dec
sbb
mov
out
adc
clc
stos
clc
test
sbb
inc
cmpsl
xchg
cwtl
ljmp
fadds
insb
mov
cmpsb
sub
push
jbe
in
or
jb
arpl
and
ljmp
cmp
in
loopne
test
fxch
dec
pop
pushf
fcoms
xchg
jnp
fistpl
les
inc
test
popa
pop
pop
push
cs
xchg
xor
test
and
fistpll
inc
hlt
testl
outsl
fwait
sub
out
mov
fs
mov
push
test
or
lods
jne
imul
push
mov
sub
push
sbb
mov
mov
adc
icebp
add
jp
loopne
sti
jne
lods
andb
mov
sar
scas
jnp
lock
popf
repz
mov
jle
enter
rol
movsl
clc
mov
out
pop
pop
push
mov
push
mov
cmp
repnz
sahf
mov
xor
lret
flds
mov
cmpsb
mov
je
rcl
xorl
mov
push
ds
mov
fldt
cmpsb
mov
jp
push
mov
dec
add
xlat
pop
daa
lock
xor
jl
in
out
mov
jno
test
sbb
ds
xor
cmc
lock
cmpsl
es
data16
lds
in
pop
push
mov
rorb
out
in
adc
push
fiaddl
shrb
sub
jnp
mov
mov
xor
out
out
cmp
jbe
inc
rorb
inc
xorb
rcl
xchg
icebp
mov
in
add
repnz
jb
sti
push
and
push
xor
add
stos
adc
in
mov
neg
jg
pop
mov
jmp
insl
push
jnp
cmp
adc
into
jo
jae
xor
mov
bound
cmpsl
cmc
fmul
xor
pop
pop
xchg
mov
add
push
xor
dec
lds
cmp
aad
add
or
insb
mov
fsubrl
jno
jp
clc
dec
in
in
cmpb
out
xchg
call
aad
add
adc
ljmp
dec
ljmp
mov
and
dec
aas
mov
add
mov
cld
adc
call
inc
inc
das
mov
cmpsl
aaa
data16
xor
or
adc
mov
sbb
shrw
andb
push
mov
sarl
push
mov
ljmp
adc
iret
popf
mov
ljmp
pop
outsb
icebp
push
fcomi
out
lea
sub
js
sub
fadds
mov
xchg
jbe
fdivrs
mov
mov
mov
lods
push
inc
dec
and
test
push
cmp
jl
js
pop
mov
stos
pusha
mov
inc
shl
inc
xchg
cmp
pop
clc
popf
aad
mov
and
bnd
cld
pop
adc
mov
leave
out
nop
dec
push
in
or
js
cmc
repnz
sub
jge
adc
hlt
loopne
in
repnz
pop
lods
or
inc
mov
clc
mov
add
popa
jp
fs
ss
mov
sub
xchg
mov
test
and
pop
jno
xor
es
loope
jge
fdivrl
pop
mov
mov
pushf
ljmp
mov
loope
inc
inc
jmp
cld
push
cld
push
lahf
fwait
xchg
outsb
add
xor
mov
cmpsl
dec
repnz
push
clc
mov
ljmp
xor
iret
out
push
jecxz
mov
push
inc
lcall
in
std
add
fisttps
sub
scas
adc
or
and
subl
cmp
cmp
mov
shlb
xor
popf
out
pop
mov
or
jg
repz
test
pop
inc
inc
ss
enter
repnz
or
cmpsb
cltd
roll
aad
inc
cmpsl
mov
mov
mov
push
ja
mov
jge
jno
pop
adc
jns
imul
flds
loopne
adc
rorl
test
mov
jne
pop
pushf
pushf
push
test
xchg
rolb
jp
cmpsl
je
mov
aam
cltd
sbb
in
pop
add
loop
cli
cmpsl
idivl
lea
adc
push
fistl
fs
or
or
fldl
and
outsl
inc
jp
aaa
mov
sub
ficomps
dec
cli
sbb
sub
pop
divl
mov
call
push
xchg
popa
fdivrs
mov
jne
jb
jge
cli
push
out
dec
sub
imul
jl
adc
fs
fldt
insl
inc
pop
sbb
mov
in
sub
and
cmp
mov
lar
into
stc
xchg
test
add
or
or
xchg
iret
rol
test
lea
iret
adcl
cld
push
pop
and
pop
inc
cwtl
pop
lret
stos
movsb
enter
push
pop
inc
sub
in
add
sbb
pop
ja
dec
jge
in
xor
xor
mov
jns
mov
ljmp
mov
inc
mov
data16
fcompl
inc
jo
pusha
mov
mov
bound
iret
mov
call
jmp
pushf
insb
xchg
jae
test
aad
and
xchg
mov
xchg
mov
mov
loop
sarb
and
mov
pop
mov
adc
les
mov
out
outsl
push
cmp
fcoml
push
inc
lods
jb
stc
adc
push
addr16
subl
push
movsb
arpl
rclb
js
inc
popf
xlat
popf
cmp
and
or
mov
fidivl
sbb
fistl
inc
jl
rcrb
cmc
mov
jg
sub
dec
add
mov
dec
filds
aad
mov
mov
dec
mov
xchg
adc
fdivl
lds
xor
add
imul
mov
adc
mov
jbe
mov
ret
mov
stos
out
mov
add
and
ds
jo
cmp
xchg
dec
movb
push
inc
adc
mov
icebp
fnstenv
leave
mov
adc
mov
pop
dec
movsb
pop
in
add
arpl
xchg
dec
push
dec
adc
push
mov
lahf
pusha
jp
push
stc
in
out
insl
cmp
fidivrl
add
jno
mov
pop
lea
push
mov
sbb
cltd
dec
sahf
stc
dec
ss
xchg
in
or
or
mov
mov
xchg
notl
dec
dec
enter
push
cld
cmp
ja
js
clc
mov
cmp
cltd
mov
test
and
sub
mov
mov
sub
jb
xchg
mov
and
and
outsl
or
cmp
lea
scas
imul
scas
and
pusha
cmp
jno
aam
push
lods
cmp
push
adc
sub
leave
fnsave
mov
jmp
jmp
adc
les
icebp
add
jnp
cmp
shlb
jno
out
aas
sbb
xor
mov
pop
icebp
sbb
shr
out
jle
inc
aad
mov
cmpsl
loope
cltd
mov
ds
pop
bound
jns
mov
fcmovbe
add
loopne
addr16
mov
mov
fidivrl
imul
insl
gs
adc
mov
dec
jbe
scas
aas
push
xchg
mov
loop
movsl
xchg
jnp
push
scas
sarb
call
in
sarl
shll
arpl
adc
dec
imulb
inc
sahf
jge
and
lods
leave
ja
cmp
mov
jle
pop
fstps
mov
movsl
xor
mov
inc
cmp
sub
ss
inc
shll
mov
jle
xlat
sub
jne
cmp
ror
je
in
mov
std
fwait
pushf
pop
pop
lods
dec
inc
jg
aad
fwait
loop
pop
shlb
dec
push
clc
dec
les
loop
and
fadds
pop
or
pop
jmp
stos
rcll
clc
cs
pop
shlb
aas
jmp
je
xchg
inc
cmpsl
push
fdivrs
sub
xchg
cmp
jo
and
popa
and
adc
aam
push
dec
mov
fmull
mov
mov
mov
test
add
or
mov
cwtl
aas
mov
pusha
ds
push
leave
cmp
das
mov
cmp
repnz
gs
cli
cmp
int3
imul
int3
dec
aas
and
out
and
lcall
sub
add
movsl
cmp
inc
or
xor
sbb
ja
inc
adc
add
inc
xorl
xor
std
push
inc
faddl
add
inc
mov
aas
sti
xchg
mov
dec
adc
lret
outsl
nop
fwait
repnz
mov
out
lcall
stc
add
das
sbb
jge
dec
fs
and
jns
mov
or
data16
stos
xchg
rclb
inc
push
push
ret
mov
sbb
sub
es
or
jnp
pushf
fstp
or
cmp
jne
dec
cmpsl
push
daa
xor
insb
mov
ds
aaa
jl
sbb
outsl
fisubl
xor
addb
iret
mov
mov
adc
clc
test
cmp
push
add
jno
rcrb
filds
pop
xor
pop
scas
mov
ret
ss
dec
iret
movsl
and
es
jno
xor
bnd
das
add
pop
out
jnp
cmp
mov
ja
push
movsl
insb
mov
int
aam
divl
mov
adc
xor
or
pop
mov
aas
pop
push
in
mulb
inc
and
or
and
enter
and
je
enter
pop
cli
mov
xchg
adc
stos
ror
or
dec
push
mov
fimull
cmpsl
insb
sub
loopne
ss
mov
into
pop
leave
mov
stos
addr16
jno
push
and
clc
mov
mov
xchg
jmp
cld
cld
mov
clc
scas
jmp
dec
or
scas
shlb
xchg
lds
pop
sub
lods
mov
lret
xchg
lahf
cmpsl
jmp
sbb
mov
mov
cld
icebp
xchg
adc
jge
xchg
dec
pop
ja
jae
mov
insl
bound
popf
icebp
push
mov
xor
out
add
pop
int3
jl
mov
loop
std
xchg
xchg
scas
inc
xchg
push
xchg
cld
shr
xchg
decb
mov
popw
mov
enter
xchg
cmpsl
arpl
mov
dec
or
jge
cmp
inc
shll
stos
pop
dec
sub
or
jp
pop
xchg
cmpsb
std
aas
pop
xlat
mov
mov
nop
insl
popf
push
aas
pushf
mov
inc
mov
mov
dec
int3
adc
push
daa
sub
mov
add
out
fwait
div
sbb
jecxz
repnz
mov
notl
das
mov
in
dec
add
mov
stos
mov
inc
aad
mov
push
nop
les
pusha
jns
xchg
lret
arpl
mov
aas
jae
cmp
addr16
stos
and
mov
sbb
sbb
push
cmp
lods
out
js
into
pop
xor
hlt
xchg
mov
fsubrl
lahf
adc
mov
and
adc
fldenv
ret
jne
inc
sub
sbb
addr16
xchg
and
adc
out
stc
xor
arpl
shl
orl
or
cmc
cli
xor
test
out
stos
mov
inc
pop
jle
fbstp
xor
subl
flds
fucomp
idivl
mov
inc
sarl
aam
mov
xchg
lret
inc
ret
xchg
in
or
sub
outsb
orl
fisubrs
mov
xor
xchg
jge
into
cmc
lock
enter
add
and
out
or
insl
inc
in
xor
xor
fsubs
adc
inc
push
aaa
fcmove
in
decl
push
pushf
adc
push
cltd
xor
sbb
daa
jp
test
dec
and
sbb
adc
push
nop
repnz
mov
add
adc
xor
sub
in
in
dec
inc
xor
cmp
mov
adc
ret
ljmp
test
loope
stos
push
repnz
aam
add
cli
in
sub
xor
into
sbb
xor
bound
gs
out
movsl
cmp
mov
inc
xchg
int3
mov
cmp
mov
add
jb
and
lods
pop
cmpsl
sbb
mov
int3
fadds
jo
add
test
mov
cmc
pusha
sub
div
jmp
dec
push
sahf
dec
sahf
or
add
inc
pop
mov
js
xchg
shlb
loop
pop
jg
popa
in
xchg
nop
sub
fadds
dec
insl
jmp
lahf
xchg
and
addl
je
jge
mov
xor
fimull
sahf
ljmp
push
popf
push
fwait
dec
inc
pop
aam
xorb
sbb
fcoml
jae
fnstenv
aam
cmp
jnp
sub
and
cmp
and
imul
std
je
test
pop
dec
ljmp
lret
jae
rcl
push
adc
xor
test
fisubrl
adcb
and
cli
aam
out
insb
mov
enter
out
sub
add
mov
and
lock
push
movsl
ror
std
dec
fbld
cltd
lods
cmp
inc
cmp
cmpsb
or
inc
pop
test
dec
pop
aad
loopne
arpl
mov
pop
lock
pop
and
lods
adc
jmp
lcall
pushf
jno
stc
fldt
mov
mov
jne
jl
or
rorl
xor
mov
and
loop
inc
in
xchg
std
cmp
cmp
push
xor
cs
or
mov
out
xchg
shl
sahf
pushf
es
sbb
fdivl
pop
dec
dec
cmpsb
rorb
cltd
sbbl
xlat
xchg
xor
dec
adc
aad
fs
rcrl
or
leave
inc
push
jns
mov
mov
xchg
pop
dec
pop
inc
lea
je
jp
fs
repz
mov
cmp
dec
cli
and
and
test
mov
adc
add
pop
lret
jae
cmp
xchg
mov
ljmp
push
mov
enter
fstps
xchg
xlat
sbb
mov
loopne
mov
rcrl
pop
push
in
sub
xor
fwait
in
sbb
inc
or
fadds
xor
xor
fsubrl
ljmp
jmp
and
mov
pushf
xor
sbb
les
imul
out
out
cltd
add
das
pop
lret
das
and
out
pusha
shl
inc
mov
cmp
pop
int3
test
xchg
cmp
pop
test
sub
mov
adc
add
js
out
push
push
mov
icebp
test
or
lods
shll
test
notb
lcall
subl
mov
cmp
ljmp
and
jecxz
cmp
mov
scas
cwtl
mov
and
xchg
test
movsb
rol
js
pop
jo
or
fnsave
pop
insl
dec
mov
outsb
mov
mov
pushf
mov
jmp
dec
dec
sbb
rolb
push
add
divl
sbb
mov
mov
mov
jl
clc
mov
movsl
lock
xchg
xchg
push
mov
je
xor
push
mov
mov
es
and
sub
jne
fisttpll
jl
mov
push
dec
popa
cltd
pop
cmp
pushf
xchg
pop
jo
insb
jl
fldl
xchg
mov
inc
jno
add
pop
ljmp
nop
addl
addr16
mov
outsl
outsb
xor
cmp
ljmp
mov
jbe
jns
xchg
push
pop
pop
xor
ja
mov
daa
jno
dec
lods
imul
cmc
and
dec
xchg
adc
push
in
out
imul
mov
xchg
inc
push
aam
inc
pop
lock
push
in
mov
into
pop
jecxz
mov
dec
iret
jno
inc
add
push
flds
and
aaa
mov
pop
call
add
mov
popa
scas
adc
xchg
cmpl
je
lods
adc
lea
clc
dec
bnd
mov
sbb
sbb
mov
xchg
cli
jmp
out
mov
fsubs
xor
xchg
int
jo
fbld
lock
add
clc
test
nop
inc
pop
fcompl
mov
mov
popf
jge
loope,pn
popa
mov
xchg
cmpsb
ret
mov
sbb
mov
enter
or
and
clc
je
cltd
cwtl
pop
cli
dec
and
mov
enter
out
mov
iret
push
jno
mov
sbb
xor
repnz
cmp
loopne
inc
std
movsb
add
jl
clc
adc
lea
movsb
cmp
enter
cltd
add
in
test
lcall
ss
in
sbb
aas
icebp
sti
ret
adc
cld
jne
imul
lods
or
push
sbb
popa
divl
shrb
push
ffreep
aam
scas
scas
imul
fcoml
cmc
je
push
outsl
mov
inc
cmp
jnp
idivl
cltd
xor
push
pop
iret
fdivrl
cli
mov
sub
iret
xchg
inc
or
sahf
cli
insb
rorb
or
outsl
mov
push
adc
cmp
ljmp
mov
mov
mov
adc
mov
pop
popa
ss
inc
xor
mov
jae
cmc
mov
jo
call
jb
decb
xchg
fdivr
iret
mov
adc
push
lahf
movsl
in
cwtl
xor
jbe
inc
pushf
shlb
rsqrtps
mov
scas
repz
pop
lret
clc
xchg
in
testb
xchg
sarl
push
in
movsl
push
repnz
jae
out
fstps
jecxz
fisubs
push
jle
sbb
ja
in
int
dec
and
xor
arpl
push
arpl
jmp
test
sub
adc
mov
stos
pop
or
lds
jns
hlt
mov
xchg
pop
aad
in
mov
mov
push
cmp
cs
addr16
fmull
sub
jnp
or
popa
and
out
pop
mov
lahf
in
ret
jp
jno
loope
int3
or
es
loopne
out
add
xchg
add
xor
jne
popa
gs
idiv
pop
inc
inc
cmp
les
pop
mov
mov
in
mov
jmp
add
dec
mov
inc
xor
inc
xchg
test
cs
sbb
aad
dec
xor
mov
pop
lret
mov
leave
call
xchg
jl
jle
add
stos
and
les
loopne
mov
pop
dec
xchg
pop
mov
and
xlat
jl
adc
sarb
xor
rcr
adc
lods
push
cmp
jb
insb
pushf
push
cmovno
jg
ja
ja
or
xchg
into
dec
fimuls
jb
push
jbe
pop
jae
jmp
mov
mov
jge
mov
gs
orl
and
cmp
shl
jbe
jp
mov
or
std
testb
xor
sahf
xchg
ficomps
xor
push
dec
jno
int
cltd
lods
out
sbb
xor
pop
jae
out
addr16
sbbb
adc
lds
dec
or
andl
xchg
pop
iret
loope
pop
xor
into
sbb
dec
mov
scas
add
out
les
repz
lock
inc
push
shrl
lock
sub
cs
inc
pop
ljmp
jle
insl
jp
shlb
int
lods
int
mov
cmpsl
imul
and
pop
and
push
ja
mov
incb
lahf
cwtl
or
int
icebp
cltd
mov
nop
outsb
push
mov
mov
dec
inc
add
fistpll
and
mov
popa
xchg
jmp
dec
add
push
scas
or
imul
mov
ficoml
or
jg
cmpsb
inc
push
or
jl
inc
xor
xor
jns
movsb
xchg
mov
inc
mov
in
imul
clc
out
push
jg
add
dec
pushf
rolb
push
mov
repz
cmc
hlt
outsb
mov
ds
xchg
jle
sbb
bound
mov
sub
std
rcrl
dec
jno
aas
idivb
out
notl
and
cmp
or
testl
ljmp
jae
scas
adc
pop
xchg
pop
les
adc
pop
jmp
or
movsb
out
xor
rorb
jg
rorl
inc
arpl
scas
adc
pop
dec
xchg
shr
xor
pop
or
in
mov
pushf
push
loop
dec
fcmovnbe
das
cmpsl
out
in
mov
jnp
popf
dec
mov
cmp
pop
mov
cwtl
std
jge
inc
in
xor
mov
repnz
mov
push
fst
lcall
frstor
add
sbb
xchg
int
data16
adcl
mov
sub
sbb
pop
ficompl
imul
push
dec
jmp
test
cli
mov
daa
mov
cwtl
xor
mov
enter
andb
fiaddl
push
js
ret
mov
test
bound
mov
inc
js
movsl
lret
jb
arpl
ja
mov
jno
cld
lcall
aad
xlat
in
leave
negl
icebp
leave
das
push
mov
dec
arpl
js
xor
jg
add
push
cmp
je
jecxz
in
sub
insb
xor
fistpl
fcomps
pop
adc
cmp
jae
lahf
dec
inc
dec
add
cmp
mov
sub
icebp
add
cld
xchg
and
mov
les
pop
jb
xchg
cmpsl
jmp
xlat
xor
rorb
lea
or
ficompl
pop
pop
cmp
mov
push
sub
xor
cs
jmp
call
shr
mov
add
jmp
push
loopne
test
push
push
mov
in
xor
mov
cmpsb
or
mov
xor
inc
adc
daa
jl
cld
cmp
mov
dec
cmpsb
jge
inc
inc
incl
jns
mov
ds
add
push
sbb
inc
dec
adc
jae
mov
out
into
stc
jp
ljmp
popf
bound
add
bound
cmpsb
iret
mov
dec
mov
ss
cmp
aas
out
inc
add
xchg
mov
pop
jns
ljmp
mov
sbb
je
invd
lret
stos
scas
or
or
push
loop
setbe
xor
add
rcrb
jae
int3
sbb
lcall
mov
mov
mov
dec
shlb
pusha
dec
sbb
mov
dec
jle
rorb
inc
pop
and
movsb
in
jmp
pop
movsl
notl
add
daa
dec
mov
std
sub
and
lahf
sub
vxorps
es
cmp
xlat
dec
sqrtps
cmp
rorl
sbb
sbb
adc
adc
push
push
pusha
js
cmp
cmc
ds
mov
xchg
mov
icebp
in
xchg
dec
adc
insb
dec
mov
pop
fwait
jbe
cmp
pop
push
test
jmp
dec
sub
push
inc
push
adc
hlt
pop
sti
pop
sti
or
and
inc
adc
add
inc
stos
scas
lods
int
pop
xor
pop
clc
loope
in
add
mov
adc
jnp
jmp
dec
cli
pop
adc
add
add
and
and
jne
call
xor
or
sbb
xchg
xor
jmp
inc
bound
in
xlat
aam
xchg
out
mov
mov
cmp
fdivp
mov
dec
les
enter
ret
xlat
imull
shll
mov
andb
xchg
mov
nop
sub
ds
sub
adc
xor
xor
add
or
js
mov
les
ds
sub
sub
mov
sub
imul
stos
dec
cmpsb
cmpsb
inc
arpl
cld
push
mov
mov
in
push
xor
pop
scas
add
rcll
sub
mov
mov
push
testb
pop
pop
test
inc
jmp
into
add
lret
lahf
enter
je
fs
repnz
xchg
and
test
adcl
dec
test
insb
xlat
aaa
jmp
dec
push
outsb
pmulhuw
shr
arpl
gs
inc
xchg
jbe
jg
ret
sub
sbb
and
jp
xchg
ljmp
xor
sbb
loop
loop
arpl
gs
cmpsb
clc
outsb
fstpt
iret
dec
push
dec
ror
cmpsb
inc
ret
popa
xchg
mov
xchg
outsl
ljmp
pop
sbb
lea
or
add
lock
rolb
dec
or
aam
fldenv
xlat
pop
push
mov
push
dec
fstl
inc
aaa
lods
cli
mov
mov
xor
xchg
or
addb
xor
push
xchg
add
lret
inc
rclb
loopne
pop
les
std
subl
adc
andl
test
sbb
jo
mov
out
int
xchg
xor
sbb
push
pushf
or
jbe
cltd
push
repnz
int
jmp
add
sti
std
cmp
mov
stos
jns
fnstsw
jge
mov
lea
xor
mov
or
pushf
sbb
scas
add
fldl
jl
arpl
pop
sbb
mov
cmp
jp
fisttpll
push
push
xchg
out
or
cwtl
add
sub
dec
inc
inc
xchg
push
jp
fldt
out
inc
std
jno
pop
jae
mov
imul
aad
cmp
mov
xchg
mov
xor
shl
cmp
fildl
dec
cmc
leave
adc
rcrb
xchg
mov
add
loope
dec
repnz
pop
int
lods
xor
lods
xor
push
nop
enter
pop
iret
inc
push
lods
out
int
int3
sub
stos
test
fs
insb
xchg
cmp
or
sbb
adc
inc
mov
andb
mov
mov
jge
fsubrl
add
or
jg
js
jae
sbb
xchg
sbb
mov
adc
arpl
inc
push
mov
sub
push
pop
stc
notl
push
into
push
or
cltd
add
in
cmpb
jns
cltd
insb
lods
add
mov
push
out
flds
das
xor
insb
stos
aaa
cltd
jae
xor
or
or
out
fisttps
insl
adc
sbb
mov
push
inc
mov
xlat
sub
or
lds
mov
aaa
mov
mov
xchg
int
add
orb
push
insb
dec
jo
scas
cmpsb
mov
ficoml
daa
or
data16
popa
and
sub
or
hlt
dec
divb
scas
cmp
andl
add
arpl
push
xchg
push
and
sub
or
and
cmpsb
cwtl
mov
dec
cmpsl
xchg
out
sub
sti
dec
fcmovb
add
inc
add
scas
fsubl
sbb
sub
pop
das
cltd
adc
in
jmp
sub
jbe
mov
dec
sbbb
add
pop
cmpsb
inc
sbb
call
cmp
ss
mov
jno
mov
sarl
out
lods
mov
call
mov
or
jno
movl
test
sbb
mov
aad
and
lock
pop
pop
pusha
xchg
add
xchg
outsb
into
les
lfs
jae
outsl
mov
and
cltd
cltd
js
out
sub
cmpsb
int3
int
push
bound
lds
xchg
push
inc
xchg
sub
in
bound
dec
mov
cmp
inc
fdivrs
push
push
ret
push
into
shrl
out
mov
nop
fwait
dec
cltd
adc
cmp
out
daa
push
cmp
add
add
lret
adc
aas
cmp
and
jp
int3
pop
mov
loopne
add
in
adc
add
fldl
andb
ficompl
sbb
aad
loopne
xor
adc
xchg
or
xchg
std
incb
sbb
add
dec
add
push
lret
movb
sub
lock
rcrl
inc
orl
mov
inc
sbb
adc
movb
movsb
or
push
mov
mov
pusha
pop
icebp
xchg
addr16
adc
mov
out
je
push
add
lock
add
xor
repz
cli
jbe
iret
mov
or
pop
cmp
lahf
imul
iret
sbb
add
idivl
and
or
push
mov
repz
sub
ret
insl
jl
mov
jns
filds
fldt
mov
adc
add
enter
push
xor
out
roll
xorb
aas
pop
lea
movsl
movsl
adc
push
sbb
movsl
mov
jno
repnz
das
iret
or
loope
fucomp
ret
pop
adc
mov
repnz
call
pop
data16
sub
sbb
mov
jle
cmp
sbb
dec
ret
add
mov
push
mov
enter
mov
push
mov
std
adcb
or
cmp
rcl
xor
sbb
pop
scas
data16
inc
loopne
add
push
insb
scas
test
sbb
mov
adc
stos
outsl
jo
push
mov
xor
movsl
inc
arpl
dec
jne
inc
shll
pop
sub
pop
das
insl
test
fildll
sbb
in
and
mov
add
aas
xchg
es
fbstp
imul
xor
add
fs
fnsave
adc
inc
adcb
xchg
mov
jmp
das
gs
push
jmp
inc
or
sbb
movsb
in
push
imulb
pop
test
mov
andl
mov
pop
jg
inc
lea
cmp
push
cmc
ljmp
je
fwait
mov
push
ja
lcall
dec
inc
sbb
xlat
cmp
popf
cmp
hlt
lret
mov
sub
jnp
cltd
leave
aas
add
fwait
sbb
loope
xchg
leave
lock
cmp
cmp
das
push
sbb
out
pop
in
fildll
stos
out
icebp
jb
sub
hlt
inc
pushf
pop
movsl
fwait
mov
inc
sub
ret
adcb
add
fnstsw
rclb
hlt
adc
fstps
dec
std
and
andl
adc
push
jge
adc
pop
xchg
mov
xor
push
jle
and
sbb
or
stc
pop
inc
jmp
iret
shrb
xorb
fildll
out
in
xchg
mov
loopne
adc
inc
mov
adc
lret
mov
daa
fcmovne
mov
mov
pop
cmp
sbb
in
scas
inc
fisubl
nop
mov
push
shrb
mov
pxor
adc
xor
sbb
push
leave
leave
jp
sti
push
mov
adc
dec
and
out
shl
jnp
pop
dec
cmpsb
les
loopne
fs
call
outsl
xchg
popf
icebp
jecxz
sub
fsubl
in
js
scas
jle
ds
lret
mull
sub
decb
sbb
jns
push
pop
pop
in
ret
sbb
add
jp
jmp
mov
faddp
hlt
jge
jb
add
ret
int
dec
mov
mov
mov
mov
adc
pop
adc
fucomp
pop
out
and
xor
in
pusha
cmpsl
mov
push
pop
adc
out
mov
lcall
in
sti
jp
mov
out
sub
pop
ja
mov
cmpsl
pop
repz
das
cmp
pop
cmp
and
arpl
xchg
subl
jne
hlt
jae
jbe
or
push
aam
enter
pop
mov
lcall
mov
test
xchg
or
inc
mov
cmp
loop
dec
jp
lea
jne
loopne
lret
sbb
mov
mov
out
mov
pop
fwait
pop
out
imul
out
xor
or
aas
mov
pusha
ljmp
icebp
cmp
ja
ds
jae
xchg
sbb
pusha
arpl
jb
adc
sub
outsb
xor
jmp
sbb
xchg
in
outsl
cmpsb
add
je
xchg
cwtl
jbe
mov
repz
movsb
xchg
lods
pushf
sbb
cmp
push
test
add
outsb
mov
mov
cmp
mov
push
inc
rcrb
outsb
inc
cmp
mov
adc
call
and
cmpsl
cmpsb
mov
outsb
sbb
mov
dec
jnp
iret
xchg
push
jmp
nop
aam
cmpsb
repz
jno
out
test
in
insb
movsb
repz
mov
jl
stos
test
fcoms
in
push
bnd
inc
pop
ss
adcb
fxch
cwtl
aad
pop
int3
cmp
ja
add
enter
in
xchg
fsubs
inc
fwait
inc
adc
pop
xlat
pop
imul
int
jge
mov
jmp
cmp
pop
cmp
test
or
loop
push
das
outsb
or
lods
fistpl
outsb
cmp
adc
add
and
int3
jg
pop
popl
lods
out
test
out
js
inc
and
cmp
or
imul
loop
jo
mov
cli
faddl
aam
shlb
filds
mov
xor
sbb
lock
lcall
add
pop
fldcw
mov
mov
xor
push
cmp
sbb
pop
cmpsl
out
xorps
in
mov
repnz
and
inc
push
or
test
cmp
cmp
scas
jg
mov
dec
std
fsubrl
movsb
mov
dec
cmc
mov
fcmovne
ss
mov
or
mov
aad
jns
stc
in
in
lahf
repnz
testl
mov
sub
xchg
cmpb
pop
fcoms
inc
mov
mov
popw
in
testb
sbb
or
lea
lahf
or
jae
fistl
pusha
lds
inc
add
outsb
inc
ds
push
add
fidivs
mov
or
mov
cmp
in
cs
push
fs
sub
mov
out
mov
xor
movsb
call
imul
push
inc
mov
sub
push
xor
pop
mov
jge
or
dec
xchg
andl
adc
sbb
sbb
sarl
cmp
xor
movsb
stos
add
clc
imul
push
popa
add
xor
cli
mov
push
pop
movsl
adc
mov
mov
pop
mov
roll
adc
adcb
iret
or
pop
in
shlb
imul
adc
mov
clc
lods
push
aam
sbb
pop
push
stos
das
les
mov
add
shlb
add
pusha
subl
mov
push
add
mul
rclb
xor
add
mov
pop
xchg
xlat
mov
test
movsb
pop
mov
sub
add
rorl
sbb
inc
xlat
mov
ljmp
ss
out
mov
aad
mov
sbb
lds
add
je
loope
repnz
adc
jle
sub
js
inc
adc
lea
div
sarl
inc
dec
add
fdivrs
ss
add
add
push
scas
jl
and
cld
jnp
das
inc
test
adcl
in
push
daa
add
mov
jb
stc
jp
sbb
push
flds
mov
jmp
lea
pop
push
push
push
and
iret
movsb
mov
lds
lods
std
jg
mov
mov
mov
arpl
add
out
cmp
dec
xchg
insl
movsb
xor
push
pop
stos
or
mov
ficoml
sar
lods
fisttpll
int3
dec
mov
jg
loope
xchg
rclb
mov
aam
cmc
ds
pop
jge
es
rcl
aam
ret
in
sub
js
inc
pop
or
lahf
int
sbb
addr16
jp
jae
xchg
pushl
add
cmc
cmc
mov
mov
cmp
jnp
cmp
nop
sub
xor
dec
xchg
mov
test
sub
out
inc
adc
push
jp
push
adc
std
pop
shr
jb
cs
push
mov
dec
pop
inc
stos
push
movsb
cmp
cmp
xor
movsb
bound
roll
lock
or
or
adc
mov
int
sub
sbb
pop
cld
push
push
push
or
mov
fucomi
data16
push
and
jbe
push
adc
test
hlt
push
adc
leave
in
insb
aaa
xchg
add
shlb
mov
jmp
and
mov
fisttpll
movsl
sub
lahf
adc
inc
mov
test
dec
sar
out
imul
repz
sarb
pop
and
xchg
cmp
push
out
aam
aam
repnz
xchg
sub
data16
sbb
in
jae
movsl
cli
mov
clc
xchg
mov
inc
es
mov
imul
or
ss
xchg
jbe
push
inc
dec
and
cs
mov
pop
fdivrl
in
fs
aas
mov
jge
cmpsl
rorl
in
pop
inc
inc
test
adc
mov
mov
es
fiadds
mov
es
pop
enter
lret
sub
dec
sub
sbb
dec
aam
push
xlat
repnz
push
mov
divl
repz
fidivrs
in
push
dec
sbbl
lods
mov
aad
sbb
mov
fstl
in
in
or
mov
daa
xchg
lods
dec
sub
shlb
imul
outsb
and
xor
mov
pop
jae
ss
pop
lock
shll
adc
sub
push
out
push
add
cmpb
push
insl
jmp
aad
std
in
and
pusha
inc
outsl
ds
cmc
xor
lock
clc
subb
mov
test
setno
call
cld
mov
mov
pop
cmc
test
pop
mov
std
cmp
jp
fstpt
push
mov
adc
fstps
cmc
cmpl
fiadds
jg
in
in
pop
test
mov
les
dec
outsb
nop
sbb
dec
movsl
out
fists
mov
mov
push
movsb
lock
mov
test
imul
jp
pop
scas
mov
fstpl
hlt
stos
adc
sub
jns
shl
mov
outsl
cmp
or
pop
ljmp
inc
sub
andl
mov
cmc
mov
adcl
pusha
cmp
pop
insl
or
sub
sbb
out
mov
mov
jl
rorl
lds
xor
mov
in
cli
dec
ret
mov
pushf
icebp
mov
int
mov
jbe
mov
mov
inc
cmp
mov
xchg
xchg
sub
faddl
pop
push
mov
push
stos
mov
mov
pop
imul
sbb
aam
clc
jns
and
dec
pop
inc
mov
daa
lds
clc
fdivrs
scas
push
fistl
pop
jns
pop
mov
sbb
mov
rcll
dec
inc
cs
lcall
jl
out
sahf
pushf
add
pop
push
xor
loope
xchg
sub
dec
lea
push
andb
cltd
sahf
popf
sub
cmc
sbb
dec
lahf
pushf
gs
or
dec
xchg
les
pop
cli
mov
pop
js,pt
out
jb
sbb
aad
shll
jno
jnp
movsl
mov
fisubrs
push
inc
dec
sbb
loopne
shl
sub
mov
fcoml
pop
cltd
adc
dec
shr
mov
xchg
shlb
test
mov
cltd
jg
inc
cmp
inc
pop
loop
mov
rcll
jge
pusha
sbb
mov
xor
repz
in
jb
cmp
inc
push
fwait
fs
xor
push
inc
dec
movb
repz
sbb
xlat
jae
out
xchg
mov
inc
dec
jb
jmp
test
fwait
pusha
push
inc
push
inc
shll
mov
lret
jg
xor
add
mov
scas
bound
icebp
jae
fists
test
pop
jno
mov
dec
fidivl
dec
add
decb
xchg
data16
push
dec
push
xchg
sbb
stos
int
insb
lds
adc
pop
sbb
mov
in
adc
int
mov
ljmp
cmpsb
and
jae
xor
jmp
jae
mov
jge
ret
cmp
or
rorb
push
inc
or
push
add
scas
mov
mov
movsl
xchg
test
xchg
aaa
cmp
xchg
xlat
sbb
adc
repz
cwtl
fnstsw
inc
adc
push
dec
pop
dec
add
cli
pop
xchg
sarb
xchg
das
ljmp
je
out
bound
test
jno
jns
insb
les
lods
sbb
sti
cli
stos
mov
xor
mov
jecxz
push
hlt
adc
sub
bnd
test
dec
sbb
lcall
inc
or
cmpsl
shll
fld
addr16
cmp
cld
imul
fwait
test
cmp
stc
sub
sbb
stos
test
sub
xchg
addr16
or
and
or
cld
loop
sbb
lcall
sub
and
dec
icebp
and
out
repz
aad
nop
dec
out
cmp
and
push
mov
jmp
mov
sysenter
dec
inc
jl
test
adc
lods
and
dec
or
adc
pop
and
jo
jbe
pop
insb
addr16
jecxz
and
das
ror
outsl
repnz
push
sahf
movsl
pop
mov
push
subl
xchg
inc
cs
out
aad
insb
inc
rcr
les
cwtl
inc
inc
mov
out
ja
dec
sub
cvtpi2ps
jmp
pusha
in
pop
icebp
mov
jnp
dec
sbb
lods
lret
sub
data16
push
shr
fmull
mov
add
cltd
gs
call
sub
mov
cmc
sbb
into
xchg
scas
fs
rcll
fmull
adc
cli
bound
ficompl
ret
sbb
gs
mov
cs
rolb
enter
jns
xchg
cli
lret
in
mov
jp
insb
dec
push
dec
xor
shl
ja
mov
dec
test
es
adc
lock
pop
cmp
cmp
cmc
lds
xchg
xor
sbbb
jmp
out
sbb
fsubr
cmc
pop
push
pop
je
outsb
xchg
lcall
lds
dec
pop
mov
jmp
andl
pusha
pop
mov
fs
add
sub
adc
cmp
shll
leave
or
sti
nop
pop
jno
cwtl
jne,pn
sbb
repnz
mov
aas
in
sbb
fcoml
aad
sub
inc
stos
adc
and
dec
pop
int
xchg
fcmovu
testb
ret
inc
pop
cmp
mov
push
or
je
xchg
stos
mov
xchg
fucomp
xchg
pop
mov
rcrb
out
iret
ja
xchg
repnz
sub
addr16
mov
push
jne
insl
dec
les
inc
push
subb
fistpll
jmp
sbb
loop
outsl
loope
sbb
cwtl
xor
movsb
xor
addr16
sahf
into
popa
mov
mov
das
das
mov
mov
pop
add
xchg
pop
push
inc
xchg
cmp
mov
ds
add
add
jne
mov
xchg
mov
xchg
adc
jno
xor
popl
push
test
jg
add
mov
cmc
xchg
addr16
mov
cltd
gs
sbb
sbb
and
insl
aaa
mov
fnstcw
es
mov
ljmp
sti
mov
sbb
sbb
clc
push
or
jge
aam
ss
sbb
sub
hlt
test
cmp
xor
mov
jmp
push
mov
inc
push
test
sbb
jge
lahf
pop
mov
mov
sub
fcompl
mov
push
insl
xchg
sbb
dec
scas
push
cmp
sti
jo
pop
mov
outsb
insl
jne
stos
je
outsb
dec
cmp
pop
jge
subb
lock
aam
xchg
hlt
jbe
cmp
push
hlt
sub
out
lds
je
mov
push
rcrl
lea
ss
hlt
xchg
repz
cs
mov
xor
lods
repnz
cmp
scas
lret
movsb
scas
movsl
cs
pop
jecxz
mov
mov
jl,pn
xchg
inc
push
push
adc
xchg
pop
or
mov
in
daa
pop
mov
stos
add
sbbb
bound
cmp
inc
pop
push
jmp
lcall
jg
sbb
es
xchg
jne
std
xchg
xchg
sbb
sub
add
mov
sbb
mov
pop
and
mov
jbe
push
jl
xchg
into
push
mov
fidivs
les
aaa
cmp
movsl
xlat
or
sbb
push
orb
inc
xchg
arpl
push
out
aas
mov
inc
mov
xor
add
inc
xlat
jae
pop
jbe
clc
scas
mov
ja
xlat
push
ss
cmp
nop
push
insl
push
dec
push
inc
and
jge
popa
jecxz
fldl
sub
fnop
loope
in
xchg
test
pop
data16
sbb
scas
sub
xor
fisttps
mov
fnstsw
dec
loopne
cmp
or
shl
popf
xor
call
push
test
pop
sti
cmp
ret
stos
fadd
popf
cmpsb
iret
adc
ficoms
mov
aam
mov
daa
push
and
adc
bound
push
add
aas
js
mov
loop
add
test
nop
push
les
int3
sbb
aas
sbb
rclb
adc
pop
out
dec
loope
push
mov
xchg
scas
jae
mov
pop
std
pop
and
adc
xor
mov
mov
adc
push
or
push
rclb
test
push
inc
pop
dec
mov
pushw
push
mov
js
dec
lds
stos
shl
cmp
daa
and
xor
outsl
jbe
mov
out
cmpsb
lods
xor
pushf
jp
mov
test
inc
insb
stos
cli
popa
dec
push
or
xchg
fnsave
mov
repnz
rolb
xor
cmp
inc
pop
js
xchg
clc
xchg
pop
xchg
cmpl
cmp
lahf
addb
sbb
mov
rorb
push
and
in
add
and
pushf
stos
loop
mov
xor
add
lock
mov
sbb
jne
pop
xchg
sarb
adc
rcrb
repnz
add
insl
dec
fisttpl
and
pop
add
jbe
xor
inc
add
clc
sub
cld
xchg
popl
out
and
lcall
jno
add
je
xchg
add
insl
rcrb
add
movsl
adc
mov
cmp
and
mov
movsl
or
fisttps
sbb
loope
mov
flds
mov
test
push
adcb
aam
jle
mov
xchg
jns
add
push
pop
lea
and
pop
fiaddl
or
clc
mov
or
pop
pop
out
xor
jmp
imul
scas
jmp
adc
int
ljmp
dec
push
fsubrl
lds
xor
xor
nop
popa
testl
lcall
and
jbe
cld
xchg
adc
stos
enter
sub
in
cmp
mov
dec
fmuls
jecxz
jbe
pop
lret
sbb
sub
push
push
or
dec
jp
add
push
pop
lock
adc
inc
ja
mov
aad
scas
pop
push
cld
pop
lahf
sbb
cmp
mov
jmp
xchg
sub
faddl
data16
imul
mov
xchg
jns
sub
dec
push
sbb
adc
pop
movsl
pop
lret
int
or
or
iret
int
push
or
jp
mov
push
and
jg
orb
lods
mov
jge
faddl
shrb
dec
fwait
aad
test
icebp
dec
mov
in
xchg
push
pop
nop
addb
cmp
sbb
ficomps
ds
in
sub
shrb
adc
cmp
push
pusha
lret
push
lds
enter
mov
jl
je
mov
fdivrp
add
js
pushw
mov
inc
or
fadd
popa
jl
or
xor
adc
adc
jns
add
popa
sti
out
cmpsl
push
jmp
xor
mov
pop
add
clc
sub
aas
xor
xchg
and
aad
mov
dec
mov
aas
scas
pop
and
jne
mov
fdivl
dec
mov
ret
fs
xor
idivb
jg
rcrl
mov
inc
push
jns
adc
lods
popf
inc
sub
aas
in
dec
and
jp
aas
push
and
add
mov
xchg
push
xchg
push
and
cmp
imul
lods
lcall
add
xor
dec
cli
inc
icebp
mov
hlt
push
xchg
lods
mov
outsl
inc
testl
xor
jb
out
inc
ds
aaa
cli
jae
bound
mov
cld
test
fs
sub
ret
sti
into
leave
push
fsts
fdivl
mov
lds
in
mov
sbb
scas
cli
out
jecxz
in
xchg
adc
jnp
hlt
inc
xchg
mov
jp
push
lret
es
repz
xlat
push
into
mulb
pop
add
xchg
and
loop
inc
pop
pop
adc
bound
aas
mov
mov
in
mov
add
inc
sbb
test
ss
xchg
xor
add
mov
xchg
pop
or
stc
mov
shrb
ss
shlb
roll
insl
jns
sbb
fmull
add
add
nop
mov
jns
sbb
pusha
add
jb
gs
xchg
pop
push
fadds
add
out
fdivrl
xor
sbb
mov
sub
sbb
dec
mov
scas
outsl
ss
test
inc
je
neg
stos
mov
adc
mov
mov
loope
xchg
mov
aad
sub
jp
jnp
int
insb
mov
inc
cmp
inc
xchg
outsb
cmp
push
jp
insl
adc
and
pop
les
addl
or
pop
jle
rep
fsubs
sub
neg
pop
mov
adc
ret
pop
sahf
aad
enter
or
dec
mov
jno
sub
enter
push
mov
in
push
sti
in
jl
repz
mov
cmp
pop
pushf
jno
cmp
lock
aaa
ja
adc
out
sbb
pop
adc
pop
mov
adc
xor
gs
insl
aaa
lods
outsb
cltd
test
fdiv
mov
dec
pop
scas
or
clc
pop
idivb
jno
dec
arpl
popa
dec
xchg
xchg
je
add
aam
push
out
push
mov
push
lcall
cmp
test
hlt
mov
lea
outsb
mov
lahf
mov
push
cltd
ret
mov
call
imul
sbb
out
adc
jg
xor
cmp
mov
add
je
stos
daa
jmp
arpl
sahf
ss
and
test
and
inc
sbb
pushf
mov
or
jle
test
and
push
cmpsl
test
inc
mov
pop
fimuls
inc
jmp
cwtl
push
add
call
cmp
mov
ret
or
in
in
stc
stc
ljmp
and
push
mov
shlb
js
std
dec
mov
or
repnz
daa
shrb
dec
adc
ret
ja
pop
xchg
and
or
pushf
and
or
es
sarb
inc
sub
sub
aad
cmp
push
pop
xlat
cmp
pop
jo
jb
dec
jbe
ljmp
xchg
out
push
mov
outsl
int
jo
lcall
sahf
inc
push
cld
mov
call
leave
in
shrl
push
pop
fdivrs
rcrb
xchg
fdivrl
les
fistl
sub
pusha
mov
push
jb
xchg
loopne
fisttps
popf
sbb
popa
sbb
ja
cmp
sub
je
jne
sahf
xor
ja
pop
xchg
xchg
push
dec
int
lods
inc
sbb
lods
mov
dec
xchg
or
inc
and
cmp
adc
push
push
cmc
xchg
nop
jnp
jmp
insb
in
in
xor
cld
icebp
das
and
dec
mov
cmp
es
xor
inc
pop
jle
push
sbb
movsb
rorl
movsl
repnz
xchg
cltd
and
ja
mov
mov
icebp
and
adc
stos
pop
inc
gs
or
mov
mov
jo
jns
repz
jge
pop
push
lret
jne
aam
inc
push
mov
jmp
pushf
push
aaa
outsb
frstor
std
dec
push
jne
movntq
xchg
sbb
adc
inc
shll
fistps
add
push
fwait
or
mov
xor
loope
jmp
push
addr16
cmc
sub
rcrl
lods
push
loopne
rcll
loope
xchg
xor
loope
push
jg
retw
or
xor
and
pushf
xchg
loop
sbb
lock
jbe
cmpsl
or
ret
das
dec
pop
mov
stos
fs
out
cmp
cltd
cmp
clc
add
in
push
sub
mov
ljmp
orl
add
push
xor
xchg
sbb
shlb
pop
jbe
aad
mov
jle
add
shrl
cld
xchg
dec
std
inc
int
xlat
das
jae
fldenv
push
pop
fsubrs
push
in
dec
add
sub
dec
int3
sbb
pop
pusha
in
arpl
popa
mov
xchg
enter
dec
inc
dec
sbbl
movsl
out
mov
mov
dec
in
pushf
fcomp
sub
pop
in
shlb
add
test
jo
lcall
fmull
aas
popa
mov
mov
mov
adc
pop
or
in
inc
shll
bound
loope
dec
test
jb
in
mov
inc
arpl
lahf
mov
add
jle
int3
enter
icebp
and
ds
or
adc
fwait
sub
add
mov
movl
clc
imul
testl
ds
out
int3
enter
pushf
dec
mov
mov
cmpsb
mov
popa
push
lods
aaa
in
adc
lock
push
das
sub
into
jnp
push
sbb
xor
mov
enter
testl
jp
in
daa
movl
in
adc
mov
pushf
sub
outsb
call
add
pop
jl
repnz
inc
test
push
cltd
nop
mov
enter
addr16
add
pop
nop
xchg
call
xchg
call
xchg
cmp
push
or
ret
inc
push
addl
int3
xchg
mov
sub
push
add
lods
pop
fists
add
inc
icebp
data16
mov
xchg
inc
sti
aad
pusha
and
daa
adc
mov
xchg
jmp
dec
xor
xor
lods
adc
inc
fnstenv
or
xorl
mov
jns
sahf
aas
in
cs
sub
mov
jo
fisubrs
mov
and
test
xor
andl
cwtl
das
bound
cmpsl
and
daa
push
cmp
mov
leave
jno
mov
stc
mov
outsl
xor
jnp
imul
adc
and
lea
dec
dec
enter
adc
orl
pusha
loopne
or
xor
iret
cwtl
stos
rorb
mov
jle
and
in
mov
dec
cmc
mov
js
add
inc
aad
bnd
loop
test
jno
cmp
repnz
ss
and
jae
add
pop
iret
pop
mov
imul
aas
pop
cmpsl
adc
leave
es
fcmovnbe
lea
add
fcoms
sbb
xor
int
outsb
jne
push
lahf
or
insb
std
js
xor
adc
incl
mov
in
shl
xchg
shll
pop
dec
cmpsl
dec
lahf
vandnps
or
jnp
sar
daa
std
cmp
jnp
imul
fsubs
pop
pop
ds
mov
sbb
mov
fwait
lds
pop
mov
jge
cwtl
adc
ja
cmp
movsl
add
loopne
xchg
mov
inc
insl
gs
mov
cs
leave
dec
gs
jge
cmp
lcall
popf
add
add
mov
jle
dec
addr16
adc
adc
cmp
adc
and
push
cld
out
out
into
movsl
add
push
adc
cld
xchg
cmp
mov
shlb
pop
enter
mov
jle
jbe
add
mov
mov
dec
dec
imul
outsl
pop
lret
mov
je
push
cmpsl
dec
pop
inc
cli
pop
mov
ret
lcall
adc
not
ds
rcrl
dec
nop
fdivr
imul
mov
inc
inc
adc
add
sti
imul
sbb
mov
lea
xor
inc
aas
mov
cmpl
push
sbb
test
fists
pop
mov
adc
sti
or
lret
ljmp
into
gs
int3
rcll
iret
aaa
hlt
jns
outsb
mov
ja
push
into
inc
repz
or
fld1
repnz
fdivl
fxch
int
adc
icebp
add
inc
or
mov
fdivrs
adc
dec
fucom
add
add
outsb
lods
dec
sbb
push
fisttpl
sbb
xchg
loope
shll
mov
fimuls
or
in
adc
jne
bound
cwtl
outsb
pop
std
enter
repz
mov
jno
add
jno
mov
call
testb
in
cwtl
mov
ss
pop
sbb
aad
and
adc
mov
sbb
pop
or
pop
jg
outsb
cld
lds
std
push
inc
test
cmp
cmpl
dec
mov
adc
mov
outsl
stos
ror
setno
mov
mov
mov
and
daa
mov
js
inc
push
clc
mov
cmp
js
push
insl
adcb
add
aas
imul
ss
jge
adc
lret
sarl
push
push
fistpll
xchg
cmpsb
dec
insl
lods
push
xchg
out
and
imul
xor
xchg
out
xor
loopne
into
jle
mov
cmc
jge
sub
insl
mov
xchg
aad
sub
add
popf
aaa
jmp
mov
inc
lock
and
mov
xchg
cmp
jnp
sub
add
xor
mov
loopne
push
dec
pop
push
int
out
lahf
rolb
inc
std
push
mov
inc
and
sub
mov
fisttpl
add
or
repz
adc
iret
adc
ljmp
and
and
or
and
xchg
jg
pop
imul
cmc
lods
lds
or
nop
je
pop
sub
push
xchg
mov
add
mov
pop
mov
popf
lods
cs
cltd
dec
jno
lods
leave
mov
call
and
push
subl
js
cmp
repnz
sub
movb
fidivrs
dec
mov
mov
jle
daa
xor
sub
sub
dec
gs
sbb
and
loop
stos
ljmp
std
mov
jnp
packsswb
mov
push
testl
or
aad
in
inc
push
mov
jo
jo
add
push
and
jo
adc
mov
inc
mov
and
jns
je
cmpsl
fldcw
inc
sahf
pop
xchg
adc
sub
ret
xchg
dec
test
cmpsl
pop
or
in
and
nop
or
pop
pusha
xor
pop
notb
jp
scas
andl
repz
and
and
icebp
mov
out
rcl
fimuls
jg
or
in
jecxz
xor
gs
and
fsubrs
std
jge
xor
cmpl
mov
cltd
cmpsl
outsb
add
xor
pushf
icebp
inc
push
loopnew
lds
add
xor
insb
xchg
add
cli
sti
xchg
push
dec
xchg
aaa
testb
aaa
test
loop
xchg
xorb
xor
outsl
sub
or
add
daa
ds
xlat
pop
dec
scas
call
xchg
pop
xchg
ljmp
repz
inc
daa
inc
outsl
mov
insb
fstpl
mov
sub
fsts
movsl
mov
mov
xor
rcll
sbb
jo
mov
js
jle
addr16
xchg
mov
ljmp
mulb
push
neg
push
out
add
aas
aaa
insl
pop
mov
rcr
mov
mov
sbb
fisubs
inc
inc
not
and
mov
sbb
aaa
push
cli
jo
neg
lret
cmpsb
mov
jl
mov
push
adc
cli
mov
movsb
cmp
jp
adc
leave
mov
push
adc
dec
enter
sti
jmp
orl
push
mov
jl
mov
and
gs
das
loop
ret
dec
jb
xchg
nop
hlt
mov
sbb
nop
pop
pop
mov
test
mov
sbb
ffree
xor
and
fwait
in
and
rolb
insb
pusha
mov
dec
notl
movsl
or
pop
mov
mov
push
push
pop
cmpsb
mov
fistl
push
push
jecxz
in
shrb
pusha
mov
mov
lcall
test
sub
fisubrs
xor
icebp
cmpsl
insb
aam
xor
insb
fcompl
or
inc
sbb
xchg
or
scas
or
mov
scas
mov
repnz
imul
les
lcall
push
or
aam
pop
fwait
pop
cmpsl
mov
xor
mov
add
mov
fcmovbe
mov
sbb
int
in
fidivl
adc
add
jg
cmp
lock
fistpll
push
jno
js
xchg
dec
push
jbe
mov
addr16
mov
add
lahf
pop
inc
mov
out
out
imul
movsl
adc
lret
lock
inc
dec
popa
cs
add
mov
repnz
mov
and
sub
mov
mov
fs
xchg
inc
cmpl
insb
dec
mov
les
lds
push
lcall
mov
sub
test
pop
int3
psubusb
mov
cmpsb
sub
mov
jne
adc
scas
jmp
sti
call
add
mov
ret
jle
mov
repz
test
adc
adc
xorb
inc
ret
jge
adc
les
lret
pop
clc
es
mov
mov
mulb
jno
sub
call
and
ret
fnsave
cmpsb
jmp
inc
insb
add
ljmp
dec
jae
sbb
xorb
mov
xchg
fwait
pop
loope
xor
xchg
and
shll
in
mov
shr
aam
ljmp
and
les
inc
fs
sti
test
xor
cmpsl
pop
xor
icebp
popf
sub
jge
into
insb
pop
mov
inc
xlat
and
and
dec
shlb
repz
out
fcoms
mov
xlat
and
out
rclb
lret
push
outsl
dec
jmp
stos
repz
insl
rcl
xlat
lret
jb
test
cli
mov
imul
and
in
hlt
pushf
loope
dec
xor
call
rcr
adc
fadds
jl
sarl
jmp
stc
fiadds
dec
dec
jg
call
jecxz
rorl
jl
in
or
lret
or
fwait
les
mov
hlt
es
icebp
jmp
dec
dec
inc
lea
xor
xchg
lds
mov
sub
sbb
repz
ret
cli
dec
lret
and
xchg
push
push
inc
add
inc
jl
pop
addr16
inc
pop
arpl
mov
fwait
lock
dec
in
jno
enter
repz
sub
leave
or
lock
fbld
nop
lret
cmp
das
or
es
xor
lock
xchg
ja
mov
xchg
roll
testl
mov
push
jbe
or
cli
push
pop
cmp
xor
lods
xchg
aad
das
or
in
test
xlat
and
xor
dec
sbb
in
and
and
adc
jne
cs
dec
bound
aas
lahf
push
push
push
sbb
aad
inc
and
in
lds
xchg
xor
int
pop
movsl
dec
icebp
mov
rolb
lods
add
xchg
je
in
jb
stc
add
jp
mov
xchg
icebp
xchg
cli
rolb
adc
xor
xchg
pop
push
mov
and
and
mov
stc
sbb
jge
and
push
lods
negb
xchg
mov
int
lods
mov
jbe
add
lahf
inc
jp
inc
test
jns
mov
mov
mov
fimull
or
inc
gs
sbb
lahf
mov
inc
in
rcrl
adc
or
and
js
ljmp
pop
and
mov
jmp
lret
xchg
and
push
xchg
mov
repz
pop
mov
cmpl
scas
in
push
nop
fdivrp
imul
fwait
rorb
in
aad
pop
sbb
xor
and
inc
jl
mov
lock
iret
call
and
sub
xor
stc
and
inc
jns
pop
jbe
lcall
scas
cmp
push
adc
imul
push
lret
pop
xchg
addl
sbbl
jae
mov
mov
cmp
pop
mov
ljmp
cmp
xchg
add
inc
mov
inc
dec
jbe
xchg
mov
or
pop
mov
jo
xchg
mov
fstpt
out
rcrl
gs
cmp
iret
int
add
lds
mov
test
icebp
cmpsb
sar
push
and
imul
and
outsb
ja
movsb
and
imul
in
imul
mov
xor
mov
out
adc
sub
pop
jb
lds
mov
or
out
sub
jns
mov
push
lds
sbb
cli
lds
and
test
adc
lods
pop
pop
cmp
pop
in
ja
ret
testl
ret
dec
mov
add
mov
cld
dec
loope
ss
dec
mov
enter
mov
ljmp
sbb
in
dec
xchg
mov
lret
pop
shl
fldt
aad
add
out
les
sub
lea
clc
push
into
xor
mov
test
dec
pop
mov
scas
arpl
adc
add
fisttps
je
stos
pop
stos
les
push
lret
mov
and
add
mov
sbb
jne
mov
mov
int
aas
ja
jge
ljmp
xchg
pop
and
adc
fdivrs
jae
mov
rolb
stos
mov
addr16
stos
xchg
mov
mov
add
inc
adc
push
pushl
adc
push
and
outsb
sbb
pushf
inc
jle
mov
xchg
xchg
rorl
leave
pop
lock
insb
xor
mov
and
cmp
fisubl
cmpsb
in
jle
xchg
xchg
call
push
scas
dec
inc
adc
dec
xchg
xlat
jb
pushf
mov
cwtl
scas
sub
dec
jmp
push
test
pop
or
stos
inc
gs
je
lods
insl
dec
sub
pop
mov
daa
push
add
in
ffree
push
mov
inc
cmpsb
pop
pop
pop
mov
popa
and
dec
push
add
iret
xchg
sarl
add
pop
repz
out
mov
mov
xor
mov
cmp
inc
into
inc
jne
mov
mov
adc
pop
and
imul
je
sub
inc
mov
cld
dec
jg
push
rcll
sbb
int
cmpl
das
cmpsb
xor
jbe
jle
push
mov
pop
mov
arpl
xchg
or
xchg
decb
call
ficoms
hlt
cmp
shrb
test
inc
sbb
bound
movl
push
gs
add
and
push
fidivrs
mov
pusha
daa
jb
ja
into
in
xor
cmp
jno
repz
lret
andb
popa
xchg
sub
sbb
and
faddl
decl
arpl
fisubrl
sbb
cmp
shlb
cmp
fdivr
scas
push
fistps
mov
add
je
lock
ljmp
lea
cmp
push
in
movsl
inc
mov
je
mov
into
out
test
scas
and
mov
rcrl
out
int
and
mov
daa
aad
or
cmp
sub
icebp
pop
out
sub
fbld
repnz
ds
aas
movsb
push
js
pop
xor
pop
mov
pop
shr
push
jp
sahf
push
dec
cmp
mov
scas
orl
or
push
mov
fists
les
jbe
and
cmp
loope
ret
mov
mov
jge
daa
xchg
push
pop
cmpsb
inc
imul
add
adc
fs
inc
pop
cwtl
mov
pop
popf
xchg
and
jnp
xchg
popf
pusha
fnstsw
fidivl
out
test
push
les
or
skinit
sbbb
nop
inc
sub
mov
adc
adc
pop
outsl
arpl
or
test
pushf
out
inc
insb
xchg
adc
in
shl
pop
out
jno
mov
out
push
aad
jg
dec
xchg
orb
iret
aam
mov
xchg
pop
test
jo
jns
jno
pop
in
push
fcomps
xchg
je
pop
icebp
inc
pop
or
rorl
mov
mov
xchg
insl
xchg
inc
jno
inc
pop
adc
aas
or
sub
dec
imul
jmp
testb
cmp
push
add
mov
cmpsb
comiss
addl
sub
push
loopne
fimull
dec
nop
jbe
inc
fcoml
pop
lods
cmp
or
sub
xchg
arpl
add
jg
lock
pop
daa
pop
in
pop
lret
test
jge
inc
mov
test
pop
aad
mov
xchg
sbb
nop
fildll
mov
xor
xchg
test
xchg
xlat
cwtl
mov
imul
pop
fwait
mov
mov
adc
in
push
dec
or
jecxz
push
js
sub
js
xchg
dec
addl
mov
xchg
fnstcw
ret
sub
cmpsl
sub
sbb
and
inc
imul
mov
xor
adc
mov
mov
dec
movsb
imulb
jnp
shll
incl
lret
int3
call
jbe
dec
sbb
xor
bound
inc
xchg
push
dec
add
lea
loop
inc
and
mov
jb
incl
mov
push
mov
push
out
fldt
cwtl
aad
jb
in
pop
out
sbb
push
adc
pop
sub
in
js
mov
push
mov
loope
dec
icebp
loopne
sub
fisttpl
ja
inc
jnp
int
cltd
sbb
add
cs
cmpsl
out
loop
int
add
mov
sti
sti
sarb
roll
mov
xchg
roll
fs
xor
adc
out
dec
fisubl
add
push
sub
dec
push
jo
add
jle
test
or
jg
adc
dec
fimull
xor
scas
imul
add
inc
cmp
gs
cmpsl
mov
aam
repz
dec
xchg
mov
add
scas
sub
mov
cmc
xchg
jg
outsb
push
testb
lcall
loopne
test
dec
fadds
jb
addr16
aam
je
and
sub
shr
pop
adc
xchg
jp
inc
int
cs
cmpl
popf
stos
bound
addl
adc
cltd
cmp
or
and
xchg
scas
jb
jle
shl
mov
fldt
outsl
xor
xchg
sub
popa
pop
mov
bnd
mov
iret
and
or
jmp
cli
mov
push
pop
lds
fucomip
adc
jmp
push
repz
iret
ja
mov
and
iret
shll
fs
pop
test
jge
jno
add
xor
mov
jle
or
dec
xchg
leave
ret
mov
dec
sarl
adc
pop
ret
jo
pop
jl
mov
add
pop
call
pop
in
pop
scas
push
adc
adc
lret
inc
bound
pop
add
inc
mov
sbb
je
xchg
inc
adc
jb
addr16
sbb
jge
mov
and
sahf
pop
xchg
out
xchg
mov
in
or
ret
fstpt
adc
popf
add
sub
add
int
icebp
pusha
loop
jno
mov
divl
or
repz
popf
pop
xor
in
movsl
xor
cmp
push
iret
adc
sbb
mov
sbb
outsl
mov
add
mov
pop
jb
xor
xchg
inc
push
mov
dec
mull
in
ffreep
outsl
ficoml
mov
push
pop
shlb
mov
pop
fs
test
sbb
and
xchg
bound
xchg
pop
mov
or
mov
aaa
popa
xlat
xor
jmp
nop
inc
lret
stos
mov
jno
lods
ret
sub
inc
subl
ja
movsl
jp
adc
test
hlt
or
bound
mov
pop
sbb
outsl
cltd
jbe
repz
cs
hlt
inc
neg
iret
mov
mov
loope
insl
xor
xchg
or
in
add
ljmp
in
xor
aad
mov
jl
mov
idivl
push
out
push
fs
das
std
inc
sbb
sub
cmp
mov
ja
sub
adc
leave
push
pop
cmp
insb
xchg
ss
insb
int3
mov
shrl
inc
mov
pushf
divl
aad
add
aam
dec
push
insb
xor
push
mov
cmp
jo
test
iret
and
jmp
mov
jge
icebp
mov
push
movhps
fstpt
cmpsl
lret
or
jno
mov
push
cmc
push
mov
xchg
jmp
dec
ljmp
xchg
sub
imul
filds
pop
out
cs
js
add
jbe
pop
lds
dec
xor
mov
pushf
out
mov
cld
fcoms
inc
sbb
rorl
inc
mov
pop
pushf
dec
iret
dec
addl
jno
cmp
fstpl
fmull
dec
pop
mov
fs
scas
cwtl
es
inc
mov
lcall
lret
pushf
push
pop
xchg
cmp
imul
pop
lea
sbb
popa
aam
mov
gs
sahf
add
stos
pop
jb
mov
jmp
shlb
mov
cs
jb
pop
inc
jmp
data16
clc
mov
mov
dec
xchg
xchg
outsb
sub
jne
addr16
dec
cmp
fidivs
sarl
aam
adc
fucomip
inc
push
cs
push
dec
mov
imul
pop
pushf
or
dec
pop
shrb
sti
mov
push
mov
aaa
pop
or
mov
repz
ror
jmp
enter
les
lds
fisubl
lret
in
hlt
mov
sub
bound
jb
test
je
or
es
inc
mov
popf
test
bnd
xchg
mov
sbb
cmp
add
pop
pop
sbb
jns
pop
paddb
dec
or
jp
xchg
cmp
lcall
mov
insl
dec
cmc
jg
je
or
repz
jns
iret
out
je
sahf
mov
xchg
loop
gs
data16
push
cmp
xchg
lea
adc
mov
mov
add
out
cmp
xchg
pop
xorb
les
stc
in
sbb
repz
inc
insb
lret
aaa
bound
mov
mov
pop
aam
cs
adc
shr
push
jge
stc
dec
loop
fisubl
mov
adc
shl
mov
mov
mov
daa
push
pushf
loope
aaa
mov
insb
xor
lods
enter
movsl
fdivs
fisubrl
jbe
jne
sbb
inc
ja
and
adc
adc
shl
xlat
and
and
push
idivl
and
mov
xor
jl
scas
or
les
pop
cld
or
inc
lret
mov
mov
lcall
jecxz
mov
dec
dec
mov
scas
mov
in
lea
mov
in
add
pop
add
mov
aas
xchg
fnstenv
movsl
cld
pop
jmp
imull
js
subb
inc
push
cmp
sub
add
and
popa
sub
xchg
outsl
sbb
adc
inc
xchg
fistl
add
inc
sub
push
adc
fwait
add
lret
push
pop
xlat
adc
cmpsb
pop
js
xor
adc
dec
mov
jmp
ret
mov
push
aam
jge
pop
loop
add
jg
inc
loop
adc
xchg
mov
xor
movsl
dec
and
mov
lcall
outsb
std
mov
loope
jnp
popa
sar
sub
xchg
adc
add
scas
fisttps
dec
sub
sbb
and
out
or
loope
sub
xor
mov
push
xchg
sub
mov
inc
stos
jns
fsubrp
jo
mov
mov
ss
mov
loopne
cmp
roll
mov
add
insl
adc
xchg
cwtl
in
int
add
jp
xchg
pop
and
pop
lcall
mov
inc
xchg
hlt
lcall
jbe
dec
mov
push
je
adc
ret
inc
cmp
sbb
shll
dec
sub
mov
out
aas
in
nop
or
or
shll
sahf
je
jp
add
or
dec
es
imul
jbe
rorl
hlt
lds
cmc
push
xchg
lret
jns
xchg
xchg
imul
push
lds
mov
cs
pop
xor
adc
and
ret
sbb
xchg
push
adc
jb
outsb
push
xchg
sti
cmpsb
lds
in
lods
loope
lret
jmp
sti
sub
jne
stos
stc
push
scas
jnp
je
jbe
dec
enter
stos
and
jmp
mov
or
iret
movsl
ss
fiaddl
sarl
push
sub
out
mov
scas
ds
xor
add
and
xchg
push
das
dec
xlat
adc
inc
es
mov
call
fidivrl
xor
cwtl
lock
pop
mov
nop
mov
mov
and
rcrl
aas
iret
outsb
aaa
sub
or
clc
pop
push
fcmovnbe
add
mov
mov
jb
in
lods
scas
lods
test
push
in
ljmp
mov
pop
or
lcall
js
test
iret
sbb
xchg
and
pop
mov
inc
xchg
icebp
divb
sub
dec
pop
jmp
aaa
dec
aas
je
mov
cmp
pop
xchg
out
sti
lret
jmp
sar
sub
sub
fmull
cmpsb
std
movsb
in
xor
jo
mov
scas
fwait
mov
xchg
stc
out
rcll
mov
cmp
fstpl
je
and
add
or
je
mov
adc
dec
or
mov
jb
fs
mov
mov
mov
outsl
and
loop
and
lds
das
loopne
imul
jg
cs
adc
inc
adc
insl
cwtl
inc
dec
lahf
lds
call
lahf
add
mov
mov
bound
sub
inc
or
in
cmp
scas
es
xchg
sub
push
xchg
loope
in
inc
pop
out
lods
sbb
int
imul
in
push
orl
xchg
punpckhdq
xor
push
push
add
inc
popa
jbe
lahf
and
push
inc
xchg
sub
insl
or
shl
cmpsb
sub
roll
movsl
cmp
rcrb
adc
mov
jne
mov
test
cs
cmpsl
adc
adc
or
xor
stc
sub
push
test
pushf
movsb
cmc
lret
push
int
sahf
cwtl
add
push
addr16
mov
xchg
mov
mov
movsl
pop
ret
in
enter
and
cmpsb
or
jg
pop
ljmp
xchg
das
jne
aas
jle
sub
dec
mov
out
mov
pop
stos
daa
testb
aad
jmp
loopne
push
lods
inc
int3
fwait
scas
inc
jnp
jns
in
sub
sub
sub
dec
in
cltd
or
jecxz
and
pop
loopne
mov
outsb
std
ljmp
mov
and
shlb
add
jg
add
loope
stos
dec
mov
sbb
push
jae
xchg
out
inc
je
add
dec
mov
loop
call
sbb
sahf
dec
rcl
out
sbb
and
js
jle
mov
mov
cmp
add
mov
xorl
cwtl
shlb
xchg
iret
or
cmp
add
fcmovnbe
out
lods
sahf
in
fsubrl
xchg
test
jo
jne
sbb
rorl
xchg
cmp
loopne
es
bextr
addr16
outsb
test
pop
jae
testl
add
ja
rolb
xchg
in
jns
cmp
test
or
dec
dec
cmpsl
dec
jp
mov
mov
lea
testb
adc
mov
push
sub
add
aas
jmp
or
je
xor
xchg
add
adc
sub
dec
sub
sbb
cmp
rclb
cmp
es
je
xor
stos
mov
mov
jle
lods
lret
push
push
or
ror
xchg
ds
mov
mov
sarb
arpl
xchg
shl
cltd
push
pop
push
imul
cli
push
add
insl
dec
jge
fiadds
mov
cli
sub
xchg
cmp
jns
jp
sarb
loope
add
stos
inc
das
inc
es
jno
inc
pop
adc
fbstp
std
sti
mov
fwait
cmp
or
loope
jge
adc
aam
fs
jne
xchg
pushf
pop
add
sbb
scas
imul
rcll
in
scas
push
or
and
mov
fstp
dec
aad
repz
inc
hlt
cmp
jb
scas
mov
inc
jmp
fbld
unpcklps
outsb
sti
ror
lods
or
sbb
das
jl
pop
dec
scas
das
push
xchg
mov
test
xchg
dec
sub
clc
mov
sahf
je
mov
push
jle
mov
js
mov
iret
out
nop
adc
jnp
adc
enter
in
data16
inc
punpckhbw
cmc
hlt
in
push
push
push
push
das
add
scas
in
sub
pop
aaa
out
shll
mov
cld
ja
aas
xchg
mov
jns
test
sti
pop
repnz
dec
enter
ja
cmpsb
cmpl
lods
add
push
cmpsl
in
orb
inc
xchg
and
je
insb
xor
js
idivb
je
xchg
mov
clc
mov
lret
mov
or
push
aad
adc
clc
lds
pop
xchg
rorb
into
testb
cmpsl
push
ds
shrb
push
dec
push
mov
and
test
or
xchg
pop
xchg
adc
in
in
arpl
jle
cmp
test
mov
adc
xchg
fcompl
mov
jo
sbb
inc
dec
jmp
cmovg
lret
lds
inc
pop
push
test
xor
dec
nop
lea
sub
jne
movsb
lahf
xorl
fdivr
scas
mov
sahf
je
loopne
es
pop
sub
xchg
sub
ja
adcb
pop
and
push
mov
xchg
lods
or
jmp
push
cmpsb
sub
add
and
push
sbb
insb
dec
xchg
arpl
bnd
pop
dec
icebp
pop
test
les
mov
in
cwtl
dec
int3
mov
mulb
jnp
ljmp
fmulp
xchg
pop
mov
push
xchg
cmpsb
loopne
pop
inc
das
cmpsl
fimull
neg
call
loope
dec
ret
leave
xchg
mov
push
fnstsw
cmp
test
sarl
icebp
adc
andl
shrb
or
or
xor
inc
in
add
in
inc
mov
xor
inc
js
jne
stos
call
shrl
cli
orb
mov
sbb
popa
enter
inc
sahf
lcall
sbbb
addr16
cmpsb
inc
xchg
mov
in
test
test
push
mov
fs
pop
je
xchg
ljmp
popa
cmp
and
mov
lods
jp
mov
imul
mov
popf
cld
adc
int
cwtl
shll
dec
mov
xchg
daa
pop
fisubrs
push
sub
adc
push
sbb
test
lock
ret
jno
icebp
inc
push
test
mov
pop
imul
xchg
mov
or
in
push
or
pop
mov
test
push
andb
loope
sbb
sbb
xor
push
jnp
push
mov
xor
in
fstl
cmc
js
xchg
aad
or
sbb
push
adc
int
sub
pop
mov
push
sub
adc
and
ret
dec
ljmp
fcmovnu
inc
insb
hlt
cltd
pop
popf
or
jno
add
sbb
hlt
add
or
fisttpll
xchg
lahf
gs
or
sub
adc
mov
mov
cmp
lcall
or
push
loope
out
mov
add
push
std
adc
lret
xchg
fsts
lods
in
orb
and
xor
xor
lret
ljmp
rorl
lods
dec
xchg
xchg
inc
loope
mov
add
dec
sbb
fs
into
out
cmpsb
popa
fptan
scas
dec
repnz
inc
jae
pop
fwait
xchg
es
or
into
fbstp
sbb
shll
ret
or
cmp
sub
pop
jne
jp
mov
fstps
jno
test
push
fstpt
addb
jb
leave
sti
jp
pop
adcl
sbb
stos
ror
dec
clc
xchg
lahf
mov
mov
or
in
adc
decb
sbb
lods
int3
out
in
add
nop
adcl
xor
cld
jecxz
fwait
jb
std
lds
cmpsl
jge
sbb
enter
mov
and
insl
mov
jb
sti
scas
bound
xchg
cmpsb
push
repnz
insb
xchg
clc
mov
mov
push
dec
shlb
gs
lods
and
pop
pop
lods
push
pop
cltd
push
enter
nop
add
push
mov
sarb
and
in
xchg
aas
jae
dec
aad
pop
arpl
adc
dec
adc
xlat
pop
pop
jb
movsl
lret
imul
pop
jp
lds
mov
xor
cmp
bound
mov
mov
adc
imul
imul
sbb
not
test
xchg
arpl
por
jbe
cs
jmp
adc
jne
mov
das
mov
into
xor
repnz
pop
mov
ds
cmc
jl
mov
movsb
stc
aam
sub
popa
dec
inc
jno
cmp
cs
and
outsb
stos
test
shl
iret
sub
movsb
popf
inc
fabs
mov
gs
jp
inc
je
mov
xchg
int
icebp
xor
das
call
mov
jecxz
fldcw
xor
inc
mov
jecxz
test
mov
cli
inc
sub
xchg
roll
imul
repz
adc
pushf
or
add
in
pop
jp
fildll
scas
jae
and
scas
inc
stc
sbb
lds
in
stc
xor
xchg
loop
and
movsb
add
mov
fwait
or
mov
dec
icebp
cmp
mov
inc
inc
popa
sub
fwait
shll
cli
mov
or
sbb
inc
aad
xchg
shr
clc
mov
push
pushf
push
sbb
mov
test
pop
scas
lret
xchg
pop
mov
pop
mov
dec
lcall
sub
jnp
xor
adc
push
jnp
jl
mov
mov
add
in
and
dec
dec
sahf
lcall
mov
push
mov
cmp
dec
aas
mov
mov
xor
push
bound
pushaw
mov
pop
fistpl
aas
sub
or
and
cmp
push
outsb
sbb
push
mov
sahf
in
sbb
push
clc
mov
fs
int3
cmp
adc
mov
mov
inc
testb
mov
push
mov
div
pop
outsl
lret
out
or
out
inc
adc
ret
sti
jmp
rorl
pop
fists
sbb
sbb
filds
cld
pop
or
xor
sub
mov
add
push
loopne
icebp
mov
stc
es
inc
jne
adc
cs
push
fcomi
outsb
jb
std
adc
movb
cmp
jnp
mov
ja
xchg
push
daa
push
add
xor
rol
ficompl
mov
xchg
adcl
sahf
push
jb
das
js
pop
or
cli
mov
mov
sbb
mov
int
shl
adc
test
adc
jae
cmc
dec
imul
and
or
and
mov
jbe
sti
dec
mov
cmp
sbb
pushf
inc
add
mov
hlt
or
scas
and
movsl
mov
inc
push
scas
std
push
lds
sar
data16
dec
repnz
in
and
repz
ja
mov
or
cltd
call
adc
dec
js
add
adc
xchg
icebp
push
inc
and
iret
mov
out
int3
rclb
mov
xchg
jge
ret
lahf
mov
aas
mov
xchg
inc
adc
pop
insl
scas
adc
cmp
add
xchg
add
pushf
movsl
mov
notl
iret
aad
add
iret
aad
push
jo
in
xchg
mov
pop
xchg
popf
jle
cmpsl
dec
jnp
pop
lods
lret
xchg
ja
jle
jb
and
xchg
cmc
adc
out
sub
mov
cmovl
cmpsb
lods
dec
lock
adc
mov
mov
inc
adc
int
mov
int
pop
cltd
jmp
mov
add
js
add
adcb
scas
sub
jbe
pop
inc
sbbl
add
pop
fwait
push
in
mov
into
cmpsl
and
or
pop
add
jl
pextrw
lea
jns
mov
fsts
rcll
add
sahf
rolb
sti
loop
sbb
push
xchg
mov
dec
int
into
mov
xor
pop
jp
lock
aaa
subl
mov
iret
and
cltd
lret
mov
xor
stos
imul
xor
sbb
ds
pop
orb
sbbl
in
pop
pop
pusha
dec
dec
gs
lcall
xorl
outsb
daa
jg
inc
into
push
movsl
pop
popa
ljmp
jecxz
jmp
hlt
fildll
or
or
in
out
mov
int
in
fmul
in
fs
and
leave
cs
jle
pop
xchg
aas
andb
push
pop
clc
aad
enter
sarb
mov
outsb
cwtl
xchg
xor
lock
xchg
aad
inc
stos
mov
loop
jno
push
push
das
mov
iret
aas
movsb
pop
aas
lods
jle
adc
or
jns
push
daa
jno
out
je
add
out
mov
push
pop
push
xchg
lock
sarl
leave
sub
push
ss
sbb
push
or
cs
leave
out
std
mov
sbb
lds
rol
popw
pop
sti
add
sbb
add
mov
push
cmp
push
cwtl
and
adc
shrb
pop
pop
xor
mov
sbb
jae
jo
pop
push
mov
xchg
add
bound
mov
addl
insb
loope
dec
mov
inc
xor
pusha
xor
aas
nop
jecxz
sbb
cmp
rcl
pop
scas
insb
orb
mov
lea
add
and
sub
push
jae
fwait
scas
out
dec
lret
test
fsubrs
push
sbbb
push
adc
fnstcw
mov
pop
pop
in
cld
pop
xlat
xchg
mov
movsl
lea
push
negb
faddl
xchg
aaa
sbb
or
sub
xchg
push
inc
pop
fs
arpl
dec
cld
fnsave
test
add
cmp
sti
mov
xor
hlt
push
sahf
xchg
scas
out
out
js
push
jns
dec
mov
dec
out
pushf
and
adc
fwait
pop
aad
sub
bound
mov
mov
push
test
xor
repnz
lahf
and
mov
inc
dec
scas
test
mov
bound
add
daa
push
mov
sub
aam
es
outsl
sahf
repz
repz
fsubl
push
xchg
xor
rorl
stos
aad
push
mov
dec
cmp
mov
in
ret
hlt
adc
lds
mov
add
imul
mov
out
jbe
pop
iret
test
or
scas
out
jb
inc
dec
pop
fs
into
inc
ret
mov
movsl
test
in
inc
dec
xor
aaa
orb
mov
xor
xchg
adc
ja
push
lahf
bound
sarl
xchg
mov
inc
mov
xchg
adc
out
dec
mov
cld
das
jp
xchg
ja
sbb
push
xchg
iret
adc
popa
adc
gs
scas
lods
in
daa
push
push
jns
jmp
jnp
outsl
stc
jle
mov
push
adc
fucom
ret
rorb
pop
enter
fnsave
xor
adc
xchg
mov
mov
adc
jmp
jg
test
outsb
pop
xlat
push
xchg
aam
jp
push
movsl
mov
inc
or
inc
shrb
mov
sub
roll
sbb
or
iret
arpl
insl
out
mov
enter
push
lahf
add
and
shlb
imul
xor
inc
insl
inc
jb
filds
mov
ds
cwtl
push
dec
scas
loope
in
add
xchg
xor
jae
test
cmp
cmp
xor
mov
in
jle
sub
aam
sbbb
xchg
orb
stos
loopne
mulb
sbb
sub
stos
xor
xor
mov
ss
enter
ror
jb
js
inc
jno
push
dec
jmp
ror
lcall
mov
scas
push
mov
mov
dec
pop
mov
mov
loopne
xchg
cltd
cltd
sti
in
ljmp
in
cmpsl
subb
call
ret
dec
jp
shll
lahf
dec
ds
test
push
pop
pop
out
test
int3
bsr
inc
lds
inc
lods
mov
xchg
and
cmp
out
pop
dec
sub
repnz
mov
cmp
mov
add
ljmp
jne
mov
rsqrtps
scas
lcall
cmc
std
add
jmp
rorb
and
jne
mov
mov
push
adc
jnp
inc
xor
scas
dec
mov
jb
dec
gs
scas
sub
dec
sub
mov
push
mov
inc
loope
lea
cltd
ljmp
jb
jno
cmp
lahf
or
and
xlat
mov
and
je
mov
inc
into
push
and
ret
and
mov
mov
or
jno
std
je
std
dec
mov
or
aam
dec
sbb
add
repz
or
cli
arpl
mov
mov
xorb
movsb
pop
and
in
pop
and
sbbl
and
pop
cwtl
ficomps
inc
lret
xor
test
inc
jo
aas
sti
xor
inc
in
mov
sbb
jo
jb
jecxz
jge
push
movsl
inc
sti
in
push
aam
out
jecxz
mov
dec
jmp
mov
or
js
xchg
push
shll
inc
push
es
hlt
jmp
pusha
roll
les
lds
adc
mov
jecxz
lret
fdivrs
pushf
xor
shll
ret
pusha
sbb
in
jno
dec
xchg
adc
jmp
jb
ljmp
mov
cmp
pop
stc
nop
mov
cmpsl
add
ffreep
sbb
and
mov
cmpsl
mov
repz
jnp
jae
add
push
icebp
cmc
push
jae
sbb
subb
roll
outsl
adc
add
pusha
cmpsl
mov
cwtl
xor
fistpl
and
pop
bnd
ja
pusha
lods
into
sbb
pop
jg
aam
jmp
sbb
or
pop
outsb
stc
out
dec
in
xchg
imul
addr16
mov
imul
dec
adc
cmp
addr16
cmpsl
push
mov
incb
mov
add
jb
dec
cmp
jne
lret
test
jge
dec
lods
pop
and
int
sbb
adc
mov
mov
or
aaa
mov
cld
xchg
cmp
sbb
mov
jns
out
mov
mov
xchg
xchg
pop
int
das
fnstsw
test
jg
mov
mov
inc
jo
sub
or
ds
loop
in
loop
jbe
xor
nop
aad
dec
mov
fmuls
aad
scas
stos
mov
movl
add
push
dec
push
sbb
jl
jl
lods
dec
sub
and
rolb
inc
cli
push
add
push
loope
aad
hlt
cmpl
lods
dec
xlat
and
into
in
bound
xchg
rclb
pop
pusha
or
adc
sti
fucomip
rcrl
out
dec
xor
adc
test
sub
aaa
enter
jle
mov
addr16
gs
int
pop
sub
jg
cmc
repnz
addr16
out
xor
mov
jae
int
xchg
push
adc
sub
mov
xor
xor
in
je
inc
or
pop
loop
mov
cs
mov
jecxz
cmp
and
inc
xor
adc
into
add
and
fldcw
xchg
jbe
xlat
in
fnstsw
out
sub
rcr
xchg
xor
decb
push
das
loopne
mov
pop
sbb
inc
mov
sub
fsubl
test
xchg
sbb
pusha
or
repz
xor
adc
stc
cmp
cmp
int3
xlat
nop
xchg
sbbb
popa
sahf
push
mov
daa
or
imul
or
fs
xor
add
stos
xchg
inc
in
jmp
cli
lret
fs
aas
dec
scas
sub
dec
cmc
addr16
add
and
testb
inc
pop
mov
pop
jl
sub
mov
jbe
outsb
xor
xchg
mov
insb
lods
lds
sub
inc
jns
pop
inc
mov
add
adc
fadds
mov
js
insb
test
mov
jo
xor
mov
das
mov
aas
sbb
test
xchg
or
sbb
movsb
in
push
les
mov
faddl
sahf
cmp
sar
iret
xor
insb
sub
repz
icebp
pop
jmp
and
popf
pusha
push
jno
jbe,pn
or
push
frstor
xor
iret
sbb
inc
adc
jmp
mov
out
sub
or
rolb
rcl
roll
lods
lahf
jle
mov
pop
sub
add
mov
cmpsl
or
jecxz
test
push
xchg
notb
pop
inc
inc
mov
test
push
push
sbbl
sbb
and
jmp
in
cmc
jg
incl
mov
loope
cmp
cmpsb
test
insb
jl
jp
or
out
aaa
movsb
imul
ja
pusha
mov
xor
test
pop
movsl
xlat
or
cld
xchg
divb
mov
adc
push
cmp
lea
jne
mov
sahf
ret
or
icebp
out
sbb
pop
jnp
sbb
stc
push
bound
mov
mov
fimuls
addb
jge
jae
jbe
pop
fisubrs
out
je
mov
arpl
std
sub
mov
mov
cmp
jne
lods
cmp
mov
cmpsb
mov
int
add
scas
pushf
dec
mov
lcall
mov
dec
push
dec
cltd
int3
jbe
in
xorl
pop
movsl
or
dec
andl
adc
out
mov
test
mov
fld1
les
in
js
push
movsl
lahf
and
jmp
xor
sub
pop
push
lea
sbb
xchg
loop,pn
call
fbld
xor
dec
pop
stos
shlb
lret
mov
inc
and
and
adc
shl
out
xchg
aam
rorl
add
and
lock
or
scas
sub
mov
int
loopne
xchg
xor
shrb
rcrw
loopne
and
and
mov
inc
mov
in
jmp
daa
cmpsb
mov
mov
and
jbe
shll
cmc
mov
mov
ja
imul
sub
movsb
mov
jne
out
fwait
cmpsb
pop
jno
sub
loop
and
roll
test
outsb
popa
insb
arpl
lret
gs
mull
es
add
cmp
addr16
mov
arpl
shlb
ffree
jo
and
lahf
add
push
mov
push
shlb
pushf
mov
xor
in
subl
xchg
aam
scas
fs
jbe
sbb
cmp
bound
test
in
sarl
stos
ret
or
jmp
inc
jbe
inc
or
pop
sahf
dec
cld
lods
ss
dec
jp
inc
sbb
lret
lcall
jnp
pop
mov
xor
jo
ret
mov
repz
mov
cmp
hlt
repz
adc
mov
repnz
int3
and
out
mov
mov
mov
clc
xchg
ljmp
out
gs
add
fdivrl
sub
sbb
stc
dec
imul
mov
dec
xchg
lret
movsb
jo
adc
mov
jnp
cmpsb
push
push
rcrl
mov
and
mov
addr16
sub
push
sahf
icebp
adc
cmp
rcl
cmp
sub
cmp
popa
pop
xlat
out
cmp
leave
mov
popf
lock
mov
mov
mov
mov
je
iret
cmp
cmpsb
or
stos
push
pop
sub
mov
inc
jae
dec
push
cmp
xchg
movsb
jg
daa
xor
mov
pop
adc
adc
inc
jo
jge
sub
add
cs
cmp
xor
mov
popf
pop
ljmp
adc
insl
mov
mov
sbb
mov
lock
cmp
pop
fucomip
mov
cmp
stos
aam
push
in
cmpb
cmp
arpl
lret
bound
fs
fwait
aam
mov
sbb
ja
add
aaa
call
decl
imul
adc
and
daa
dec
imul
adc
sbb
add
into
xchg
addr16
adc
in
xlat
mov
jl
push
push
cmp
sub
aas
adc
jb
fcmovnb
jne
lret
xor
xchg
lock
mov
imull
fucomip
xchg
out
inc
leave
inc
sbb
mov
jp
scas
cwtl
xor
movsl
rclb
xor
xchg
mul
mov
mov
dec
js
ficoml
pop
cmp
imul
mov
ss
mov
cli
pop
cs
push
into
adc
xor
jbe
mov
jmp
add
push
xor
aad
ja
jle
jp
mov
dec
xchg
xchg
mov
jo
mov
test
xor
dec
xchg
fcompl
push
ss
rcl
popf
aas
fisttps
inc
sbb
subb
or
xchg
jbe
sbb
cmp
sahf
lcall
mov
test
testl
sbb
movsb
into
pop
dec
jno
jo
or
iret
mov
out
push
int
lds
pusha
mov
ds
cmc
cmpb
lock
pop
pop
mov
or
rcl
sbbb
mov
lods
cmp
mov
add
frstor
out
mov
jae
jl
mov
aaa
and
movsb
rcrb
pushf
jne
jle
movsb
cmp
scas
xchg
addl
inc
sub
jp
jns
mov
mov
add
data16
les
test
sbb
xchg
jle
aad
cmp
mov
or
es
lea
adc
mov
std
sbb
jnp
add
pop
sub
out
test
out
xor
iret
bnd
xor
xchg
scas
out
cmp
orl
cmpsl
mov
cli
or
xor
dec
push
aam
cmp
inc
pop
or
mov
lock
mov
or
dec
pop
test
scas
mov
inc
sbb
outsb
aaa
ret
cmpsb
xor
mov
adc
out
iret
adc
jmp
sarb
jnp
or
scas
inc
xchg
adc
decl
xchg
das
repnz
jmp
cmp
mov
or
loop
add
adc
xor
pushf
sub
xchg
and
int3
adc
lret
and
mov
mov
lcall
insb
das
leave
inc
std
push
into
xchg
dec
pushf
ja
jae
movsl
xlat
gs
les
sub
xor
mov
xchg
test
sbb
adcl
out
pop
data16
inc
pop
cld
push
xor
cmp
jo
pop
jmp
ss
mov
push
mov
sub
or
sub
inc
dec
les
rcll
push
in
pop
cmc
iret
roll
cs
xchg
and
ds
push
mov
dec
lea
mov
sub
pusha
in
fwait
cmpsb
pop
or
or
cmc
mov
xchg
xchg
arpl
andl
gs
popa
cs
stc
aad
dec
ds
psubq
push
adc
pop
mov
pop
aam
or
int
lods
sub
fs
mov
jge
sbbl
mov
loopne
or
lcall
repnz
vmovhps
cmpsl
movsb
xor
xchg
inc
popl
dec
lret
cmp
add
loopne,pn
pop
mov
cmp
xlat
in
in
mov
into
mov
pushf
xchg
mov
mov
fiaddl
test
inc
sbb
cmp
jge
cmp
pop
add
inc
fld
mov
outsl
pop
hlt
push
xor
jbe
stos
pop
aad
fistl
mov
xchg
pusha
lea
iret
es
inc
mov
outsl
lret
lahf
cmc
popa
jge
jle
stc
mov
imul
hlt
mov
xchg
cmp
in
jp
jp
bound
rorb
mov
iret
nop
rcll
pop
lret
sub
sbb
movsl
or
outsb
sub
lods
outsb
jge
add
movsl
dec
aaa
fildll
in
cmp
shll
and
lods
and
sbb
fidivl
data16
jecxz
mov
inc
rolb
sub
jnp
andl
ljmp
cli
jno
jb
mov
cs
push
mov
negl
pop
pusha
or
popa
sbb
inc
mov
jmp
aad
xchg
imul
sbb
nop
xor
int
mov
xorb
push
mov
popf
aam
and
cmp
xchg
dec
inc
lods
pop
jbe
cld
mov
pop
out
pop
xor
mov
mov
sub
popa
jp
mov
mov
inc
mov
hlt
dec
mov
rolb
xchg
arpl
in
mov
jmp
adc
mov
pop
xchg
mov
cmp
loope
fcmovnb
dec
xchg
mov
sub
xor
pmaxsw
in
lods
mov
int3
lds
fs
mov
dec
mov
push
iret
push
ja
or
jb
dec
shlb
repnz
test
cmp
xchg
jo
mov
mov
pop
mov
fiadds
lcall
lods
xchg
cmc
mov
or
mov
out
dec
mov
repz
shll
and
enter
cmp
jle
sbb
popa
insl
cmp
jnp
mov
mov
pushf
pop
xchg
jne
int
lret
clc
mov
lcall
pop
call
sahf
xchg
repz
xor
pushf
cwtl
lret
cltd
or
jecxz
aas
in
push
adc
imul
add
add
push
aaa
dec
aad
fnsave
xchg
lret
jne
mov
adc
sub
push
push
aam
push
lea
sbb
outsb
add
int3
mov
fistps
aad
in
stc
fs
ss
push
mov
sbb
add
mov
ss
lret
popf
test
and
shlb
iret
xchg
mov
lds
cmc
adc
mov
loop
jnp
es
test
adc
mov
jmp
cli
adc
arpl
xchg
gs
inc
or
inc
clc
test
pop
psubsb
sbb
lcall
scas
sarb
popa
lcall
dec
xchg
insl
and
shr
repnz
pop
fwait
and
xchg
mov
xor
mov
jnp
pop
xlat
sti
xor
in
mov
ja
mov
inc
gs
imulb
es
inc
ja
mov
shrl
inc
mov
arpl
mov
imul
aam
jl
in
xchg
jo
or
mov
jae
push
push
das
leave
fs
js
sub
jb
mov
repnz
fidivs
push
pop
push
ja
pop
adc
lds
imul
mov
cmp
push
xor
sub
ljmp
in
sbb
cmpsb
mov
lret
push
mov
sbbl
stos
les
ss
push
jnp
xchg
pop
and
sbb
rorb
mov
dec
sahf
or
push
mov
xor
js
test
call
inc
nop
cmc
adc
inc
push
mov
scas
js
ret
aaa
push
add
movsl
or
add
jp
xchg
dec
push
pop
out
sbb
push
insl
xor
jnp
mov
lret
lods
popf
rcll
sbb
mov
dec
mov
lods
mov
pop
jae
pop
add
cmp
push
gs
pop
pop
aaa
push
imul
mov
lcall
jb
sti
es
adc
mov
lret
ret
cmc
xchg
xchg
mov
in
out
fcomp
scas
xchg
dec
jg
rcrl
stc
cmp
inc
lret
repnz
mov
das
jns
add
sti
ja
mov
shll
mov
test
lret
rclb
in
aad
movl
pusha
pop
mov
in
clc
mov
xchg
and
lret
dec
pusha
xor
mov
es
nop
test
repz
sub
cmp
les
cs
or
lea
or
dec
pusha
jo
cmp
mov
cmpsl
push
jb
push
cmp
sahf
adc
adc
push
in
aam
fsubrs
pusha
es
xchg
fstpt
cld
pop
pop
push
pop
adc
or
nop
xchg
pop
mov
jge
insb
inc
mull
mov
dec
es
ljmp
or
or
into
testb
adc
inc
das
xor
inc
lret
in
je
xor
sbb
cmpsl
jecxz
call
jp
push
pop
rolb
in
loop
pop
dec
and
shll
xor
pop
ljmp
shl
inc
pop
xchg
jmp
bound
jecxz
mov
cmp
mov
fmuls
mov
mov
xor
iret
xchg
xchg
ficoms
xchg
int
movsb
add
movsb
idiv
mov
pop
pushf
jnp
add
out
insl
data16
gs
cmp
mov
in
or
rolb
pop
ss
into
pop
out
das
stc
jns
pop
addps
push
jle
mov
jge
scas
js
inc
int3
out
xor
fisubs
mov
inc
cmp
mov
mov
insb
xchg
mov
ljmp
sub
sub
pop
pusha
pop
mov
jg
push
xchg
mov
and
push
xor
iret
lock
dec
dec
or
or
cmp
pusha
pop
jle
push
imul
vmwrite
shrl
push
ret
dec
jbe
movsl
and
sub
les
fs
or
cmc
dec
add
sbb
fnstenv
jo
cwtl
mov
hlt
repnz
dec
xchg
adc
pmulhw
inc
mov
mov
mov
testl
xor
push
in
sbbb
das
scas
pop
xchg
jns
push
mov
adc
out
adc
push
out
pop
cmp
sbb
inc
jo
lret
pushf
aaa
ret
into
js
gs
hlt
cmpsl
or
mov
mov
rcrl
add
sub
inc
test
pop
repnz
je
and
mov
jbe
and
mov
push
mov
add
adc
daa
hlt
aas
faddl
mov
jne
clc
add
in
outsb
data16
adc
pop
jns
add
adc
int3
xchg
jle
xchg
sarb
cli
and
sub
fwait
lods
push
aad
add
dec
or
mov
inc
and
adc
hlt
xchg
sbb
dec
push
mov
mov
arpl
and
adcl
stos
adc
cmpsl
fmulp
pop
mov
addr16
dec
je
mov
sarl
int3
out
adc
sbb
in
fcmovb
shll
jecxz
dec
je
pushf
dec
leave
add
add
sbb
cmpsl
and
nopl
fiaddl
popf
mov
push
mov
sbb
je,pt
xor
jno
addr16
scas
jb
xor
jbe
mov
pop
pop
add
mov
sbb
pop
jl
mov
fildll
cmp
add
sbb
xchg
pop
push
mov
hlt
push
std
xchg
aas
sbb
mov
jge
ja
jmp
push
adc
jecxz
jg
ss
cmp
das
add
out
cmpsl
jge
push
fsub
and
xor
imul
sub
jp
aam
cmp
xlat
sbb
addl
xor
testl
pop
jo
push
mov
aad
xchg
loop
loope
in
xchg
add
out
push
je
es
ss
and
leave
lret
test
push
adc
mov
insb
and
jle
sub
jp
iret
sub
push
mov
lds
cmpsb
insl
bound
cli
aam
sbb
imul
mov
in
adc
inc
cmc
adc
repnz
jae
out
cmp
mov
sub
lahf
jo
jne
sti
inc
aad
mov
sarl
and
loopne
subb
and
pop
in
mov
lret
and
or
push
movsb
or
rclb
jecxz
mov
pop
out
stos
int3
mov
jb
add
pop
mov
mov
sub
adc
scas
mov
andl
dec
dec
xchg
and
call
movsb
arpl
pushf
cmc
mov
dec
shll
adc
aam
sbb
mov
in
xor
sub
rclb
ds
dec
movl
xchg
push
addr16
pop
popa
or
sbb
mov
sbb
jmp
pusha
xchg
in
subb
icebp
hlt
dec
mov
xchg
xor
add
outsl
or
and
les
push
lret
push
xchg
fimull
outsb
in
fisubrs
push
pop
add
or
cmp
cmp
mov
or
in
mov
push
xor
lods
test
cmp
push
popf
sub
je
lods
xor
xor
xchg
cmpsb
pop
popa
pop
mov
loope
testl
sbb
xchg
sub
jno
shl
or
add
cmp
cld
add
xchg
in
cmc
fistl
test
sub
pop
adc
add
dec
popa
sbb
shl
mov
mov
pop
inc
and
or
mov
test
mov
xlat
lahf
inc
or
repnz
mov
test
cmpsb
cwtl
subl
in
and
aaa
cld
scas
and
outsl
lret
xor
test
pop
in
mov
dec
sti
std
rorb
dec
pop
enter
add
jne
lock
test
adc
cmp
frstor
jns
add
outsb
adc
mov
dec
dec
lret
lahf
out
pop
jecxz
push
mov
xchg
call
into
cmp
repz
insl
and
mov
jo
je
pop
nop
pop
pop
iret
std
test
xchg
mov
sbb
xchg
xchg
stc
push
clc
pop
adc
test
cmp
or
iret
aad
aaa
pop
dec
fstp
aad
in
adc
pushf
mov
xchg
adc
jg
push
sbb
daa
push
adc
xchg
ret
orb
into
test
divb
ret
call
push
and
jecxz
subb
fadd
filds
out
add
adc
mov
mov
mov
ss
pop
xchg
xor
jo
ss
and
ficoml
mov
inc
std
inc
jne
roll
js
xlat
and
fsubrl
cli
mov
fsubl
and
push
test
mov
movsl
inc
mov
add
into
lret
add
adc
or
inc
mov
ljmp
sbb
fwait
in
lret
rol
lret
cmpsl
jo
mov
adc
dec
outsl
and
dec
push
in
adc
lods
insl
jno
in
push
sbb
fimuls
inc
jecxz
test
push
pop
aad
xchg
pop
jae
inc
sbb
push
in
inc
or
or
rcl
js
push
xchg
movsb
lcall
add
adcl
ss
mov
enter
imul
pop
sti
mov
xchg
inc
mov
in
inc
lret
xchg
add
into
repz
movsb
xor
aad
xor
out
jl
daa
inc
sbb
mov
rcrb
add
add
pop
loopne
out
pop
jg
lds
push
arpl
movl
pop
sub
sub
mov
jno
jo
xor
dec
out
leave
dec
bound
xor
lea
push
aad
jb
jmp
mov
mov
repnz
fdivrl
push
int3
js
push
stos
sarb
cmp
loopne
mov
mov
lea
xchg
ret
xlat
stos
dec
loope
mov
and
jb
pop
xor
pop
call
mov
fimull
imul
pop
popf
push
dec
shll
mov
lock
fcoms
mov
addl
lds
ss
xor
xlat
imul
shr
dec
adc
test
xor
shlb
in
xor
add
mov
or
rcr
sub
bound
push
jb
lods
fsubl
popa
ljmp
stos
mov
das
xchg
outsl
push
sarl
pop
jae
xchg
dec
inc
pop
fnstsw
mov
hlt
adc
dec
or
push
sbb
pushf
jns
xchg
out
jae
clc
mov
xchg
into
rol
sub
jle
in
imul
fldcw
jne
add
lret
jno
mov
mov
sbb
test
adc
lcall
mulps
push
je,pt
sub
jmp
sahf
out
pop
fistpll
jp
out
inc
adcb
sbb
jne
js
mov
xor
cmp
subb
out
xor
push
repz
popf
push
push
bound
adc
push
in
fcmovnu
and
out
dec
rorl
lock
mov
fldt
out
ss
dec
in
popf
test
lods
mov
std
filds
testl
fisttpl
cmp
fidivl
push
sti
lret
adc
leave
jmp
or
aas
mov
in
stos
mov
mov
mov
push
cs
push
stos
cmp
loope
leave
cmp
pop
iret
adc
or
or
xor
push
pop
aad
dec
inc
cli
ss
cli
pop
jecxz
je
mov
inc
cmp
out
add
scas
jbe
ds
or
mov
inc
in
lea
jnp
jne
lods
lods
and
lds
jne
aam
aam
jle
push
pop
enter
sbb
and
jne
pop
rcll
les
aas
arpl
inc
jb
inc
inc
das
and
xchg
adc
jle
mov
jmp
std
dec
jl
sbb
jmp
push
mov
xor
xchg
xlat
outsl
jl
xor
sub
je
add
sub
lods
stos
xorl
movsb
aas
pushf
mov
push
enter
sbb
mulb
xor
jecxz
ficoml
sub
leave
pusha
mov
das
or
pop
inc
daa
pop
icebp
jno
jp
fdivs
into
mov
push
add
lea
jl
mov
dec
mov
enter
cmp
lret
cmpsb
enter
sbb
lods
loopne
add
ret
sub
push
jle
xor
sub
mov
xchg
fsts
shl
cmpsl
add
fs
cmp
sub
sub
inc
dec
test
stos
in
jmp
divb
ss
jbe
test
jb
ljmp
mov
push
ret
or
or
xor
jge
push
popa
nop
jbe
and
and
rcrl
add
loop
shrb
aas
fwait
scas
mov
subl
outsl
fld1
test
inc
mov
rcrb
mov
xor
inc
enter
mov
adc
mov
incl
outsb
mov
or
mov
adc
mov
outsl
ret
sub
mov
jge
bound
add
lods
in
sbb
scas
loop
mov
and
fwait
add
mov
mov
xor
sbb
xor
jae
inc
shlb
sahf
mov
sub
mov
negb
lcall
aas
cmovge
aad
xchg
call
pop
jl
mov
xor
daa
mov
pushf
les
stos
dec
xlat
arpl
mov
jo
mov
sub
ret
push
cmp
xor
sub
aaa
xchg
inc
sbb
into
xchg
popf
fidivs
jge
pusha
clc
shrl
inc
popa
cltd
sub
push
in
jle
and
pop
pop
inc
push
test
add
lahf
ss
cld
cmp
mov
xchg
push
jne
lahf
add
addl
into
mov
push
adc
cmc
sbb
xorb
sti
fs
push
fstps
xor
cltd
xchg
mov
mov
or
pop
pop
or
pushf
push
dec
fisubl
stc
aad
push
sbb
pop
daa
dec
loop
bound
aam
pushf
jg
inc
mov
lds
test
jbe
gs
stc
ret
shlb
push
out
inc
or
push
pushf
addb
add
and
popf
add
mov
pop
test
push
push
add
andb
fsubrs
dec
mov
gs
jno
addl
sub
pop
sar
adc
xorl
fnstcw
push
lahf
inc
sbb
adcl
not
pop
loop
rclb
ds
xchg
dec
pop
adc
cmpsb
xor
mov
sbb
loope
test
outsl
jmp
xor
mov
mov
or
fisttpll
fnstsw
push
lret
loopne
cmp
xchg
int
sub
cmc
int3
jae
sti
sbb
lcall
mov
mov
jp
push
add
out
test
gs
xchg
inc
mov
or
push
push
xor
dec
push
ss
dec
add
push
lock
xchg
int3
packsswb
mov
jp
and
clc
or
fsubs
cmpsl
mov
sub
ficompl
mov
push
dec
stos
and
repz
pop
lea
scas
or
sbb
xlat
icebp
int
inc
mov
call
out
jae
sub
mov
sbb
mov
sbb
mov
mov
xchg
xchg
and
inc
test
cmp
and
add
xor
in
out
int
ljmp
mov
pop
inc
mov
cltd
inc
roll
cmpsl
daa
jmp
pusha
dec
stos
jno
fnstenv
cmp
mov
add
inc
daa
mov
push
mov
outsb
mov
and
out
xor
mov
lock
jno
out
aad
push
out
dec
xchg
mov
repz
mov
shll
in
dec
mov
out
lahf
pop
into
add
cmpb
hlt
cs
call
pop
repnz
mov
push
sahf
lods
add
cmp
imul
mov
push
aaa
js
pop
push
sbb
in
cmpsb
jmp
pop
pushf
pop
mov
sbb
fs
out
push
stc
push
pusha
or
push
push
insb
mov
pop
sbb
jo
fisttps
adc
push
push
pop
cmp
cmp
fmul
and
sbb
ss
sbbb
jp
aam
movsl
xchg
jg
out
add
inc
cmp
mov
in
loopne
lods
fistpll
jno
aaa
bound
in
cli
std
cmp
cs
mov
mov
add
lcall
lret
sub
or
dec
orb
adc
push
push
dec
mov
addr16
das
int3
daa
hlt
or
fcos
dec
imul
mov
or
mov
fimuls
sub
daa
mov
ja
pushf
sbb
and
bound
flds
and
shll
into
test
icebp
outsl
mov
mov
xor
push
aas
mov
stc
scas
lods
adc
fs
mov
dec
into
out
pop
inc
hlt
nop
test
cmp
push
ds
cmpsb
sub
xor
lahf
sti
add
bound
xor
or
sbb
push
lds
das
xchg
jge
inc
lods
scas
adcl
rorl
rorb
lods
ficompl
push
lock
and
daa
xor
pop
inc
ja
call
inc
add
xchg
sub
dec
rorl
dec
loopne
sbb
push
test
add
jge
js
xor
xchg
and
jp
fs
test
ret
dec
jae
push
mov
mov
cli
imul
add
add
mov
popf
fldcw
adc
rcrl
icebp
add
scas
and
pushf
fldenv
fs
movsl
mov
leave
add
or
push
adc
cli
sarl
mov
enter
jns
cmp
movsb
and
in
xchg
lahf
inc
cmp
outsl
ret
inc
mov
lods
outsb
rcrb
or
cmp
add
push
orl
dec
stos
aad
stos
inc
push
xchg
sbb
ret
js
shrb
outsb
push
movsl
jp
sbb
or
xchg
mov
movsb
mov
jae
xchg
insb
xchg
notl
pop
xor
adc
inc
xchg
or
lret
mov
je
jne
outsl
inc
stos
fisubs
mov
inc
mov
aad
pop
mov
movsl
ret
or
je
dec
pop
fbld
xchg
lahf
lret
mov
dec
push
jo
lahf
decb
mov
cli
mov
test
mov
fimull
fs
jl
xchg
inc
mov
xchg
push
fs
mulb
xor
pop
dec
pushf
jne
cmp
imul
sbb
loopne
xor
sub
out
mov
dec
fnstenv
jmp
push
rcrb
push
or
pop
loopne
scas
arpl
imul
sbb
pop
daa
jecxz
inc
aaa
pop
and
repz
add
or
inc
call
push
dec
xor
mov
cmp
xor
sbb
xchg
jno
cmpsb
mov
stc
mov
std
xchg
aad
sub
mov
dec
cmpsl
adc
mov
enter
pop
mov
adc
adc
test
pop
ucomiss
ja
je
fs
cmpsb
and
cmc
push
repnz
add
or
jp
outsl
fdivl
inc
insb
mov
cli
lret
lods
push
ds
mov
cmpsl
sbb
jp
outsl
fisubl
faddl
cmc
scas
pop
mov
adc
cmc
cltd
icebp
dec
shl
call
adc
jbe
popa
push
iret
daa
frstor
jo
decl
sbb
loopne
dec
inc
xchg
mov
aas
add
sbb
push
jb
dec
add
mov
out
jns
mov
add
out
adc
fdivs
fistps
outsl
sbb
and
aas
test
mov
mov
ret
loop
movsb
mov
adc
fiaddl
jnp
ljmp
mov
pushf
gs
fistpl
add
inc
jmp
xor
pop
cli
cmp
sahf
jbe
scas
in
adc
jp
sarb
inc
stos
imul
mov
sbb
pop
jg
mov
pop
mov
push
aaa
imul
gs
ret
ficoms
mov
sahf
ss
and
jne
xchg
test
dec
in
gs
cmp
out
popa
mov
sub
stos
aas
push
cld
sub
xlat
dec
and
movb
scas
jle
or
mov
lret
add
pop
out
cmp
ret
add
dec
dec
test
fwait
lret
inc
rolb
movsl
mov
cmp
scas
cmpsl
sbb
bound
fisubl
or
int
inc
dec
sub
sub
cld
insl
aam
mov
add
push
cld
cld
mov
scas
in
jl
stc
dec
pop
or
inc
jp
aad
adc
int
int3
adcb
out
xchg
add
mov
xor
mov
mov
xchg
cld
lret
adc
push
pushf
fs
jmp
cli
ss
icebp
shlb
mov
popa
add
push
inc
push
jge
mov
loopne
cmpsb
push
dec
or
insb
movsb
or
lods
xchg
jbe
mov
call
inc
or
insb
imul
xlat
popa
inc
jae
pop
xchg
sbb
jo
xlat
pop
pushf
dec
push
xchg
std
in
jp
add
sbb
cmpsl
dec
daa
mov
dec
rcll
nop
mov
pop
es
push
ficomps
fldenv
test
cli
shl
ret
popf
in
loopne
sub
dec
cmp
jecxz
mov
orb
or
lcall
or
push
popl
push
jecxz
sbb
rcr
inc
popf
xor
test
ss
cmp
movsl
mov
mov
add
fists
pushf
sbb
fwait
cmp
inc
dec
pop
adc
xchg
lods
push
lahf
inc
push
inc
dec
js
popf
jp
jg
out
pop
sbb
fs
ljmp
xchg
sbb
xchg
dec
iret
mulb
jb
mov
cmpsl
dec
in
pop
aam
push
xchg
js
push
cli
dec
hlt
aaa
pop
and
jno
push
rcrl
fs
sahf
loopne
mov
xor
arpl
mov
pop
adc
jecxz
aas
inc
das
add
adc
stos
rcr
aam
inc
ja
jp
jp
ja
hlt
or
jp
xor
addl
rcrl
adc
mov
jge
adc
stos
xor
push
mov
and
sbb
jo
enter
xchg
jg
shrl
and
notb
xor
cmp
dec
sub
xchg
jbe
rcll
pop
cmp
in
and
lea
xor
in
enter
mov
shll
mov
imul
mov
test
cmp
loope
sar
es
adc
or
mov
cwtl
mov
call
pushf
fidivs
daa
or
pop
movsl
in
aas
insb
sarl
xchg
ret
mov
fdiv
test
push
pop
jnp
mov
mov
clc
movsb
adc
gs
into
ss
out
movsl
cld
ds
arpl
jge
fstpt
shll
and
imull
xchg
ja
mov
outsb
mov
jg
out
shl
mov
fstp
cwtl
idivb
pop
mov
sub
pop
xchg
cmp
fsubl
jae
aam
adc
lahf
lods
mov
push
sub
lahf
std
pop
xor
xchg
ljmp
into
sbb
mov
mov
scas
push
pusha
loop
mov
stc
insb
shl
imul
mov
dec
out
dec
lock
lret
or
push
mov
pushf
xor
out
ret
arpl
mov
js
cmovnp
fstpl
das
sub
int
dec
test
ja
inc
orb
ds
or
sarb
sub
adcb
cltd
icebp
jns
es
sti
pusha
sbb
ss
pop
rol
dec
mov
clc
lcall
cmp
xlat
mov
rcl
sbb
push
xchg
jno
lahf
ret
sar
incw
mov
jecxz
test
imul
jne
stc
mov
dec
inc
aam
repnz
add
mov
or
arpl
lea
pop
out
adc
inc
jp
inc
mov
mov
xor
dec
inc
jmp
addr16
and
addb
lcall
hlt
add
cmp
adc
shl
dec
ja
mov
out
jno
add
arpl
lcall
out
xchg
daa
test
xchg
repz
jmp
mov
sti
pop
mov
cmp
lahf
sub
fsubrl
sahf
adc
pop
imul
push
mov
in
test
lods
cli
add
cwtd
lods
adc
rcll
outsb
add
cmp
sbb
jb
inc
jno
mov
outsl
xchg
xor
lds
lcall
sbb
mov
mov
cmc
mov
lret
mov
inc
lods
in
stc
stos
bound
sub
jbe
insb
jne
cli
fildl
aam
and
icebp
jns
xor
pop
pop
and
loopne
pusha
mov
insl
cmpsb
xchg
cmp
aad
cmp
imul
jns
adc
pushf
adc
cld
subl
xor
frstor
push
xor
dec
mov
sbb
fistps
sbb
mov
sbb
jmp
lods
push
mov
pop
ljmp
cmp
inc
or
fisubs
sbb
push
iret
sbb
xlat
in
sbb
popa
xchg
push
xor
mov
jle
push
cld
out
data16
jo
jl
jae
pop
data16
mov
popf
lret
shll
ret
adc
cltd
jo
xor
xchg
xchg
mov
rclb
dec
mov
jae
lods
fstps
add
xchg
mov
push
add
and
cmp
push
push
or
call
fwait
out
shlb
std
sbb
xchg
addr16
pushl
jmp
adc
mov
fstpt
jns
lods
push
push
dec
sub
cltd
mov
imul
inc
call
pushf
sub
jmp
pop
add
icebp
dec
scas
xchg
sub
movsl
test
aaa
inc
movsb
popf
dec
mov
dec
out
ss
sbb
jb
inc
lds
repz
pop
test
outsb
mov
std
xchg
push
das
jg
xorl
or
dec
cmc
int
jnp
ljmp
subl
mov
fiadds
dec
xor
sub
push
pop
mov
int3
pop
xchg
addr16
pop
stc
sub
mov
out
je
stos
jo
scas
sub
stc
mov
lds
cld
test
test
popa
pop
lret
mov
addr16
sbb
mov
mov
loope
mov
and
fnstenv
push
cs
sub
jmp
in
push
loop
pop
inc
sbb
mov
dec
mov
cmp
fistl
xchg
push
add
dec
adc
cld
mov
adc
xchg
xchg
ret
mov
aaa
out
ret
xchg
jno
dec
push
lret
test
push
mov
mov
cmpsl
arpl
aaa
mov
aas
adc
pushf
mov
jnp
mov
mov
mov
cmp
dec
subb
je
dec
in
xorb
fdivs
lahf
push
lea
outsb
lds
imul
pop
adc
jmp
lods
jecxz
idivb
mov
out
lcall
lds
stos
orl
faddl
insb
fbstp
adc
jns
inc
dec
sbb
shld
data16
cmpsb
or
or
xchg
sbb
xchg
mov
lock
jl
push
xorl
ljmp
xor
mul
or
add
push
mov
push
flds
mov
enter
xchg
sbb
mov
in
xchg
jmp
cmp
push
jbe
or
aam
sub
xchg
and
aam
shr
and
xor
inc
pop
outsb
dec
adc
data16
lods
cltd
dec
int3
sbb
dec
sub
add
xchg
fs
aad
mov
fistps
mov
subl
inc
and
in
xor
mov
push
pop
fs
and
sbb
add
inc
inc
out
mov
cmc
ret
inc
and
iret
mov
sub
mov
pop
or
xchg
dec
jnp
addb
inc
lods
jle
adc
xor
and
jo
iret
lea
jns
fisubrs
jp
hlt
cld
mov
leave
xor
jne
inc
lods
mov
push
jg
sbb
subl
dec
scas
iret
pop
loope
test
divl
gs
jno
in
cwtl
xor
sub
mov
inc
pop
sahf
cmp
lahf
jecxz
cmp
bound
mov
decb
dec
lods
lods
scas
inc
in
lcall
sbb
pop
addr16
iret
sbb
into
enter
xchg
and
ljmp
daa
xor
loop
rol
and
call
xor
int3
sahf
or
xchg
or
jp
loop
nopl
xchg
mov
seta
adc
js
mov
pusha
scas
cmp
pop
arpl
fs
cmc
push
pop
push
enter
insb
xchg
push
ret
sub
in
pop
shr
jecxz
dec
fistl
jno
out
jbe
nop
addb
ret
sub
rorl
rcll
adc
shl
pop
jle
pop
scas
loope
ret
loope
aas
and
mov
adc
lock
jl
scas
mov
dec
push
push
rcr
outsb
in
hlt
loope
cs
xchg
arpl
bound
xor
mov
es
jno
out
push
repz
jp
adc
pop
jns
inc
in
push
xor
dec
mov
mov
divb
nop
adc
sahf
jne
and
jb
pop
rcrl
xlat
xor
fnstcw
je
push
xchg
mov
stc
lods
jge
fcmovb
cli
daa
sti
and
lods
sbbb
push
pop
dec
int3
ss
sub
pushf
in
add
scas
jae
adc
loop
push
and
and
lock
in
int3
xchg
lock
sub
mov
and
in
cs
jns
lcall
push
notb
jmp
clc
pop
mov
stos
insl
mov
push
lret
ret
xchg
mov
ja
inc
push
push
push
or
stos
jg
icebp
pop
repnz
outsl
jecxz
fs
fstl
mov
shll
jae
imul
jnp
test
sub
jg
push
pop
or
and
nop
int3
push
popf
mov
repnz
mov
and
cltd
jle
mov
enter
lcall
or
push
dec
cmp
sahf
push
ret
lret
cmc
sahf
xchg
sbb
sub
lods
pop
mov
lret
sbb
std
sbb
rorl
jae
cmp
int3
cmp
cmp
out
es
sub
lds
or
add
jb
pop
cli
ja
add
cmp
or
sub
das
push
lods
sbbb
test
push
pop
mov
xor
mov
notl
push
into
stos
mov
inc
pop
pop
ds
or
leave
push
bound
aaa
mov
push
mov
pop
inc
mov
inc
sahf
xchg
shrl
out
xor
pop
fldt
enter
ret
mov
unpcklps
jg
xor
stos
sub
in
mov
mov
mov
inc
ret
repnz
mov
insl
jecxz
xor
or
push
cmp
popf
dec
mov
mov
xchg
adc
cmpsb
into
push
mov
arpl
shlb
push
aaa
arpl
aad
jmp
or
nop
xchg
cmp
popa
dec
mov
cwtl
or
or
pop
bound
cs
lret
pop
jne
mov
push
stc
lahf
adc
fstpl
imul
enter
mov
cmpsb
cmp
sbb
sbb
insb
ror
lea
pop
dec
bound
inc
sahf
mov
dec
fistps
shlb
mov
mov
aaa
cmpsl
inc
ds
les
mov
mov
fwait
adcb
or
adc
mov
dec
loope
fbstp
push
inc
lods
adc
cltd
cmp
jb
es
into
adcl
cmp
cmp
mov
aaa
xchg
lods
pop
loope
cld
mov
xchg
stos
outsl
fiadds
inc
scas
xchg
pop
cmp
mov
xchg
dec
cli
mov
jae
movsl
rolb
mov
aam
rclb
aam
roll
lcall
loop
and
imul
cmp
mov
sub
adc
jmp
sub
scas
imul
and
lret
lock
mov
lret
aaa
bnd
push
sub
jns
movl
jge
dec
push
and
mov
sub
das
xor
stc
clc
negb
mov
or
pop
js
repz
pop
cmc
inc
divl
xor
cmpsb
ret
clc
rorl
push
push
xchg
dec
inc
sub
lods
shrb
jp
sub
int3
jecxz
cmp
sti
jb
cmpsb
xor
iret
arpl
mov
fistpll
jecxz
scas
fs
ljmp
stos
popf
cwtl
or
aam
sahf
lret
imul
je
outsl
xor
cmp
jp
mov
imul
jns
push
cmp
lods
fistl
sub
mov
fstp
icebp
and
pop
push
sbb
inc
out
pushf
xchg
lret
insl
jg
shlb
adc
push
std
loop
addr16
test
mov
add
out
sbb
fimuls
jecxz
frstor
imul
lret
cmp
mov
pop
movsl
sub
jl
push
sbb
jl
mov
ficomps
push
stc
push
mov
mov
lcall
jmp
push
xor
lods
adc
sub
out
xor
test
in
add
rorb
xchg
cli
jecxz
sub
jbe
aas
test
pop
popa
testb
shl
repz
dec
in
outsl
ljmp
or
mov
mov
jbe
test
lret
inc
ja
icebp
fistpll
in
jb
in
pushf
popa
incb
sub
jp
add
xlat
mov
daa
outsl
adc
jg
std
xor
add
stos
sub
lock
cmp
emms
sahf
xchg
mov
or
mov
loop
xchg
sub
mov
mov
int3
pop
mov
push
adc
add
aaa
pushf
test
mov
jns
xchg
sbb
inc
or
test
sub
mov
test
inc
mov
push
xor
and
mov
jo
pop
repz
bound
sbb
mov
cs
outsb
scas
sbb
and
sahf
popf
movsb
xor
into
call
jo
adc
notl
jbe
cmpsl
mov
jnp
retw
testb
xor
push
repnz
inc
xor
lods
ficompl
dec
shr
loope
and
inc
xchg
push
and
mov
fimull
or
dec
lret
and
es
aas
xor
mov
xlat
sbb
test
or
sarb
imul
push
mov
stos
cmp
pop
xchg
loop
icebp
stos
xor
ds
sbb
arpl
ret
xchg
jno
pop
push
ja
add
hlt
in
cmpsb
scas
pop
in
mov
sbb
sub
inc
dec
cli
movsb
ret
fidivs
insl
das
scas
ja
mov
icebp
mov
adc
jno
push
sarb
sar
outsb
lock
or
popfw
pop
xchg
dec
nop
in
out
nop
and
roll
jge
push
lcall
push
xchg
or
dec
loope
enter
loopne
sbb
mov
jmp
adc
out
dec
pop
mov
hlt
adc
dec
sbb
insl
xchg
aam
mov
fsubr
pop
mov
push
out
mov
vpaddb
lahf
pop
popa
lret
push
pushf
mov
and
push
daa
jmp
mov
mov
into
jge
cmp
or
sub
or
adc
jne
dec
push
inc
cmp
out
or
ret
shll
xchg
push
push
sub
inc
sub
orl
mov
cmpsb
call
xchg
pop
xor
cmpsl
mov
sti
stos
mov
or
mov
cmp
inc
push
ljmp
aaa
lret
shll
fnstenv
popf
xlat
mov
out
mov
lcall
xchg
or
xor
push
out
fldl
mov
rcll
ret
xchg
xchg
mov
out
lods
lea
jbe
stos
stos
mov
addr16
pop
mul
xchg
xchg
dec
inc
mov
cli
xchg
ja
stos
and
sub
hlt
push
jg
neg
inc
push
pop
fsubrl
jge
lret
and
leave
jbe
mov
repz
loop
add
test
mov
adc
out
or
mul
cmp
pop
and
xchg
push
push
pop
add
daa
adc
aas
out
xlat
ret
xchg
fs
out
push
cmp
pop
fcomps
pop
out
push
andnps
mov
imul
and
jmp
test
or
inc
out
jecxz
mov
shrb
insb
pushf
push
jecxz
ds
cmp
and
or
cltd
dec
xchg
out
xchg
dec
mov
or
sbb
dec
add
out
nop
xchg
int3
int3
std
jle
outsb
mov
sub
inc
adc
inc
comiss
sbb
loope
xchg
rcr
mov
xchg
adc
xchg
jecxz
push
cmp
pop
pop
rorl
sbb
jl
inc
addr16
in
imul
jmp
adc
mov
sub
das
lods
fwait
mov
adc
pop
dec
das
fldenv
mov
int
fwait
fs
gs
jae
jg
mov
popf
cmp
sarb
lock
add
mov
pop
or
ret
mov
insb
test
clc
inc
add
mov
jne
xor
mov
push
and
fwait
pop
inc
jp
jns
push
lret
cs
aam
push
and
xor
imul
jbe
test
jmp
stc
add
inc
daa
cld
push
iret
cmc
fucomp
scas
movsb
sbb
aad
cmp
rcrl
dec
xor
pop
inc
dec
add
pusha
jae
xorb
inc
mov
lock
stos
cmp
cld
aam
fistpll
in
out
je
xlat
movl
popa
into
cmp
sahf
adc
test
xor
lds
xor
data16
loope
repz
push
xchg
aaa
inc
rorb
push
loope
lods
push
pop
mov
mov
xor
sub
add
lods
pusha
cmp
jnp
test
mov
aaa
cmpsb
adc
dec
cmp
push
pop
jle
xor
cld
mov
lods
dec
jp
ret
sbb
jo
cmpsb
cmp
ficoms
sbb
jbe
aam
dec
adc
jg
jo
push
jno
mov
xchg
add
pop
push
out
jle
inc
pop
adc
mov
sbb
sub
xchg
ljmp
fwait
inc
mov
xchg
clc
cmp
iret
cmp
fsubl
es
lahf
dec
push
in
testl
mulb
push
or
cltd
shl
jns
addr16
mov
sbb
sub
andl
jp
pop
test
loop
xchg
push
sub
out
mov
inc
call
cmp
pop
add
mov
je
sbb
push
or
or
xor
push
fwait
cmpsl
int3
ret
sub
int3
and
xor
lcall
jecxz
pop
cwtl
sbb
and
call
pop
dec
pop
leave
arpl
loopne
rclb
adc
xor
cmp
jnp
cmpsl
mov
adc
sub
lds
push
daa
or
or
mov
aaa
jl
push
out
nop
enter
jp
mov
jnp
nop
sub
mov
popa
pop
sbb
cmp
fcmovbe
add
adc
inc
lds
sbb
loop
ss
cmpsl
imul
popf
ret
mov
cmp
adc
ret
ljmp
lock
push
sti
insb
les
or
jecxz
xchg
ljmp
insb
and
shll
cmova
jb
out
dec
jmp
sub
in
popa
add
fisubs
cmp
dec
stos
push
mov
lret
inc
repnz
or
rolb
mov
push
inc
cmp
jp
xor
cli
pop
popf
lods
aaa
lods
loop
stos
les
and
and
mov
push
dec
mov
push
cli
jns
jbe
ljmp
pop
jp
pop
cmp
addr16
jnp
jp
fs
cmp
and
bound
dec
jne
rcr
or
push
out
out
rclb
jmp
mov
push
inc
int3
xor
push
xchg
or
les
mov
je
repnz
push
inc
hlt
je
jno
cmpsl
dec
and
hlt
push
ret
cs
pusha
stos
scas
lock
jae
movsl
xor
inc
mov
jmp
jp
jae
or
mov
add
sbb
shlb
mov
lahf
add
cmpsb
sub
fstl
cmp
cli
fbld
adc
ret
jg
sti
cmc
adcb
fidivrl
inc
or
pop
add
pop
mov
mov
mov
inc
ficompl
push
outsb
pop
fcmovb
push
mov
inc
leave
js
lds
mov
rcl
outsl
pop
addr16
outsb
insb
cld
push
bound
mov
clc
xchg
pop
arpl
mov
mov
sub
cmp
out
into
je
out
sbb
fildll
jne
out
inc
es
xchg
xor
add
ret
jg
lcall
lret
inc
fcomi
mov
jecxz
mov
adc
add
jae
cmp
sub
out
push
dec
dec
push
shl
adc
pop
mov
dec
insl
sub
js
xor
movsl
xchg
in
fcompl
test
add
dec
fldl2e
push
mov
xchg
cmp
or
mov
adc
scas
xchg
mov
cmp
enter
push
mull
or
iret
pop
sub
ret
loopne
in
xorl
push
iret
inc
or
daa
negb
push
pop
lds
or
cs
mov
inc
and
mov
adc
mov
mov
cmpsb
inc
lret
xchg
loopne
insl
mov
imul
mov
xchg
cmpsl
xor
push
sar
jp
sub
je
push
cmpb
jbe
add
push
and
jecxz
mov
inc
inc
fstpl
and
jp
popf
adc
sbb
sub
and
mov
sbb
cmp
push
mov
add
sbb
adc
add
test
or
gs
and
inc
dec
dec
sbb
or
jae
dec
ds
push
out
push
xchg
sbb
dec
push
lret
movsl
ret
cwtl
xor
jl
sbb
ss
aam
sahf
pop
xlat
fbstp
mov
sahf
test
das
cmp
out
int
test
dec
sub
pop
add
adcl
jge
mov
push
or
push
sbb
jae
aam
adc
aam
movd
in
pop
pop
cmpsl
aam
jno
fsts
nop
push
daa
rcll
fisttps
xor
mov
sub
xchg
scas
scas
cmpl
xchg
fbstp
pop
mov
dec
mov
mov
mov
xor
scas
cmp
outsb
scas
jge
in
xchg
mov
arpl
push
jge
in
shlb
and
dec
ja
rorl
fldpi
sub
mov
dec
ret
mov
xor
int
lods
pop
cmp
pop
shrl
mov
aaa
arpl
call
lret
push
pop
nop
shlb
stos
push
push
icebp
decb
cmpsl
pop
repz
sub
xlat
pop
test
es
adcl
fstpl
bound
or
mov
cwtl
imul
dec
mov
add
imul
xor
mov
sahf
das
push
fs
mov
push
dec
adc
bound
jns
iret
push
test
and
push
xchg
test
and
rcrl
add
inc
mov
xor
adc
jo
mov
popf
dec
dec
sub
inc
push
fcomps
xor
testl
divl
and
xor
popa
cmp
stos
int3
mov
inc
cmp
mov
daa
and
lret
jmp
mov
iret
dec
lret
shl
fsubrp
mov
cmp
mov
addr16
mov
sub
push
pop
mov
adc
nop
mov
cs
xchg
pop
ja
mov
mov
repz
pop
jg
subb
jnp
cld
dec
mov
push
stos
sub
vpshab
es
jns
push
sub
out
or
outsb
add
or
lds
sarl
inc
popa
mov
jg
fdecstp
cltd
repnz
pop
jbe
insl
outsl
jecxz
fchs
stos
mov
push
std
jg
jg
je
mov
mov
inc
iret
and
push
and
mov
jecxz
push
popf
or
leave
dec
mov
jae
or
mov
insl
pop
ss
cmp
sub
and
sub
fnstcw
aas
clc
or
ret
cmp
in
fldl
cmp
lods
sbbb
xor
mov
mov
and
popl
sub
xchg
mov
push
imull
sbb
dec
in
es
mov
ret
idivl
inc
fcmovu
loopne
cltd
or
mov
and
dec
loop
and
repnz
shl
xchg
xchg
add
aam
xor
and
add
out
popf
jbe
mov
les
pop
sbb
callw
repnz
cmc
pusha
lret
or
sub
push
aas
ss
outsl
cmc
mov
pop
adc
pushf
jne
es
push
aas
cmp
je
aas
movl
mov
and
mov
insl
adc
adc
out
jnp
push
cltd
icebp
daa
and
movsl
or
data16
movsb
das
dec
mov
movl
xchg
pop
je
sbb
loopne
add
adc
sbb
aaa
or
stos
mov
fisttpl
or
mov
mov
mov
mov
inc
sti
xlat
mov
enter
inc
push
nop
adc
ret
imul
fs
outsl
cmpsb
mov
xchg
test
ss
pop
mov
fwait
xchg
test
js
xchg
adc
jo
jp
idivb
push
arpl
dec
repz
aaa
outsb
stc
sbb
sub
mov
mov
lock
and
adc
mov
or
ljmp
cmp
fcmovnbe
fadd
out
cltd
cmp
push
add
fcomps
inc
ljmp
cmpsb
mov
sbb
jmp
nop
je
mov
push
test
xor
and
cmp
loopne
popa
jno
scas
movb
loope
jmp
mov
and
jnp
ror
xor
mov
paddsw
push
test
outsl
inc
and
fiaddl
inc
fwait
pop
fwait
mov
jl
daa
pop
mov
pop
movb
mov
ret
pop
into
add
mov
cltd
xor
ret
mov
enter
dec
inc
repz
push
lods
mov
adc
push
sahf
add
ljmp
cmpsl
lea
add
mov
outsb
xor
and
mov
ret
xchg
loope
out
xchg
pop
rcrb
cmpsb
sti
dec
rclb
ret
roll
cs
xor
mov
daa
sbb
dec
cmp
xchg
add
in
test
pop
or
xor
movsb
lea
mov
movsb
pop
inc
lock
add
and
jo
aaa
push
addb
lods
cmpsl
in
sarb
test
cwtl
and
sti
mov
jg
je
mov
xlat
ret
jl
in
rclb
testl
scas
inc
push
add
cmp
js
mov
divl
sub
inc
xor
and
cmpsl
and
out
lock
mov
cmp
mov
jmp
mov
subb
pop
mov
in
mov
or
lods
out
shll
fnstenv
push
faddl
jns
xchg
jae
icebp
test
sbb
inc
movsl
movsl
jp
sbb
sub
enter
test
push
into
cmp
or
jge
xor
xor
outsb
xchg
loope
loop
push
lock
adc
jmp
stos
sub
loop
fisubl
pop
movd
loop
mov
aad
popf
test
repnz
sbb
pop
add
loope
cli
inc
cmp
fcmove
loope
popf
fsubs
mov
sbb
jnp
inc
mov
dec
push
sbb
test
popf
jnp
cs
fs
imulb
dec
data16
jnp
cmp
mov
mov
inc
sbb
mov
mov
or
out
mov
xor
adc
mov
push
pop
scas
cmpsl
dec
xchg
mov
pusha
nop
dec
int3
enter
test
mov
fld
pushl
out
shl
adc
mov
in
cmpsl
pop
and
adc
insl
cmp
leave
mov
insl
mov
enter
push
inc
filds
imul
aaa
dec
fs
int
scas
inc
jbe
lods
jns
or
sti
adc
in
inc
jmp
gs
xchg
or
dec
add
jae
lcall
mov
sub
jo
inc
loope
dec
scas
xor
mov
xor
adc
in
arpl
lds
aad
je
fstps
ficoms
fistpl
inc
lahf
add
lock
xor
les
cmp
or
push
xlat
mov
sbb
xchg
mov
movsl
aam
scas
test
shll
int3
idivl
popf
mov
or
adc
and
xchg
sbb
pop
pop
cmc
in
test
dec
adc
cmp
inc
xor
add
jo
icebp
bound
sbb
or
fdivs
or
cmpsb
push
inc
sbb
enter
and
pop
pop
out
call
jecxz
or
pop
cltd
push
loope
mov
lea
mov
enter
jle
shr
arpl
cmp
pop
mov
imul
mov
add
imul
push
jecxz
cmpsb
inc
adc
hlt
roll
sbb
popa
lcall
outsb
lret
adc
lea
in
in
jle
popa
inc
int
scas
rorb
inc
lods
mov
scas
xchg
and
pop
sbb
cltd
fcoms
mov
add
or
xor
adc
scas
mov
clc
sub
mov
pop
inc
aad
cs
in
adc
loop
inc
out
adc
add
imul
pop
or
or
and
xchg
shr
jbe
push
imul
cmpsb
outsl
dec
inc
cmp
sub
les
shll
xor
pop
insb
dec
fldcw
push
push
cmp
dec
stc
fmul
jmp
add
add
lods
fwait
imul
sbb
push
loope
pop
jno
subl
jae
adc
aaa
pop
fcmove
aaa
mul
mov
test
inc
repz
daa
adc
mov
push
inc
test
mov
into
mov
pop
andl
fisttpl
or
mov
inc
mov
push
fwait
call
in
pop
xor
out
shrb
imul
jp
mov
push
vmovd
gs
js
addr16
jecxz
push
fsubs
jb
out
xchg
lds
xchg
push
xor
push
cli
sbbl
ficomps
ret
sbb
sbb
clc
mov
sub
shl
scas
dec
lods
ja
mov
jp
pop
sub
lret
imul
and
imul
mov
sub
lods
inc
icebp
cmp
and
out
inc
fwait
mov
push
mov
dec
mov
pushf
out
outsb
and
fadd
hlt
stc
jg
cmp
into
cwtl
fdivrl
sbb
adc
in
jb
fwait
popa
cmc
push
push
cmp
xor
pcmpeqd
out
sub
dec
push
dec
sbb
cmp
dec
add
test
or
mov
cmp
int
add
add
pop
dec
add
dec
clc
adcl
add
cmp
xchg
jne
popf
jg
cmpsl
std
aaa
addr16
mov
xor
jge
loopne
xchg
sbb
inc
out
aaa
scas
loopne
repnz
nop
testl
xlat
add
sub
xor
nop
add
adc
push
and
jmp
into
repz
out
inc
test
sarl
mov
inc
mov
push
sbb
test
gs
inc
xor
push
dec
dec
daa
sub
in
aam
sbb
and
cmp
xchg
mov
cli
dec
enter
inc
addr16
mov
test
push
pop
pusha
jl
jecxz
sbb
jge
leave
sbb
int3
pop
xorb
mov
fnsave
outsl
xor
pop
ficompl
push
ja
cmp
pushf
xchg
xchg
out
sub
lock
sbb
sub
push
rol
pop
lea
ljmp
cmp
lds
outsl
fucomi
sbb
push
movsl
cmpl
mov
mov
movb
push
xlat
mov
pop
mov
icebp
push
jae
jne
cmp
ret
or
mov
cli
dec
or
jo
dec
cmp
testb
jbe
dec
mov
sub
fldl
adc
xrelease
mov
push
lcall
les
or
inc
mov
fidivrs
jno
xchg
jmp
sub
add
pop
js
xor
adc
or
pop
lods
push
dec
mov
or
insl
div
mov
out
xchg
mov
add
xor
mov
call
xor
mov
gs
inc
xchg
cwtl
mov
stc
repz
test
push
sbb
and
ljmp
movzbl
adc
mov
push
push
jbe
fsubrs
in
roll
jmp
mov
mov
test
int3
lret
test
shrb
dec
sbb
scas
xor
pop
push
sbb
xor
cmp
loope
xchg
inc
mov
xor
cwtl
lahf
in
leave
push
loop
adc
xchg
inc
adc
inc
jns
sub
and
cmpsl
cmpl
lods
scas
aas
or
or
ljmp
jno
add
cltd
jecxz
arpl
add
mov
fs
or
das
and
sahf
sahf
popf
and
dec
les
movsb
mov
imul
adc
enter
adc
mov
rcr
xor
xchg
movsb
test
sbbb
std
repnz
jae
push
xor
mov
call
mov
jbe
fdivrs
dec
in
jp
fsubr
aaa
mov
ret
mov
xchg
jecxz
cs
dec
mov
xchg
lret
ja
add
lcall
sbb
xchg
xchg
xchg
clc
rclb
mov
xchg
mov
test
in
jbe
shll
push
test
mov
adc
bound
jecxz
je
cmp
pop
inc
int
hlt
in
dec
pop
mov
inc
movsl
add
loopne
push
out
fsubrl
and
mov
inc
popa
hlt
test
mov
xor
pushf
pop
leave
lret
push
ljmp
jns
mov
aad
push
pop
xor
sti
jns
aaa
push
addr16
xchg
mov
testl
inc
stos
push
and
pop
in
cmc
and
push
lea
jmp
ss
lcall
mov
stos
adc
inc
lea
lods
jl
cmc
mov
sub
das
adc
daa
iret
subl
out
jo
cmp
jne
mov
add
xchg
cmc
xor
adc
and
aam
test
jbe
cli
orb
fwait
xchg
xchg
sub
sbb
sahf
stos
pusha
sbb
jge
add
and
into
push
lret
jmp
in
mov
test
xchg
push
cmp
mov
test
sub
or
movsb
addb
cmp
sbb
in
sbb
mov
fwait
lret
and
mov
mov
aam
pop
stos
mov
lods
lret
push
call
jl
cwtl
test
cmp
test
lret
xchg
mov
es
cmc
es
fsts
mov
or
inc
cli
int3
add
inc
xchg
bound
xchg
adc
ds
or
xchg
es
xchg
jle
lods
aas
je
mov
cbtw
mov
repz
jbe
cmp
jbe
lock
fsubrs
nop
mov
push
mov
into
push
or
into
shrb
das
mov
mov
mov
lret
lahf
and
bound
cld
adc
xor
addr16
push
dec
push
repnz
int
fucom
and
insb
lds
sub
lahf
popa
jns
sti
gs
dec
jb
pop
out
xchg
add
jecxz
push
inc
shlb
pop
das
data16
dec
adc
inc
in
mov
rcrl
pop
adc
clc
imul
xchg
pop
stos
add
insl
cmp
adc
mov
pop
sub
xor
sub
xor
arpl
int
test
pop
pop
ljmp
ljmp
mov
xor
bound
ror
nop
arpl
mov
adc
inc
scas
sub
and
cmp
and
aas
jle
out
mov
les
cltd
ficoml
jb
mov
mov
mov
jb
subb
fnstcw
cld
popa
cmp
cmp
fbld
aad
lahf
cmp
fsts
lret
sbb
int
mov
xchg
test
lret
lds
shrl
mov
aam
pushf
test
jbe
ljmp
xchg
pop
popa
and
scas
sbb
push
mov
test
frstor
pop
les
je
push
push
fsubl
mov
add
mov
sbb
test
ret
shlb
stc
sub
xchg
xchg
popa
loope
notb
push
std
ja
dec
shll
and
cwtl
dec
xor
sub
out
push
jmp
std
shlb
dec
mov
cs
sub
mov
pop
mov
orb
test
jno
and
lea
pop
sbb
dec
mov
les
or
and
push
lret
jge
mov
rcl
or
rcll
pop
cmp
sub
sub
cmp
ss
add
mov
call
rcr
aas
lods
pop
stos
scas
insb
imull
mov
mov
out
ret
sub
push
scas
out
shl
mov
xor
orl
inc
js
jb
std
js
aad
mov
gs
lods
sbb
les
mov
dec
repz
lret
lods
imul
out
fwait
ljmp
adc
orl
pushf
repz
into
aaa
push
or
cmp
dec
sti
pop
sti
sti
push
sbb
out
mov
jns
ss
pushl
sbb
cwtl
fidivrs
dec
fucomip
inc
push
call
je
jl
pop
dec
bound
rol
cmp
sbb
cmp
sti
dec
mov
sbb
in
outsl
lds
sub
jmp
mov
data16
push
mov
jo
test
push
pop
lock
pop
mov
outsl
popa
sbb
or
arpl
es
lcall
clc
fmul
lea
rolb
hlt
inc
sti
jo
movb
out
sti
pop
and
add
in
addr16
in
sub
dec
aam
push
imul
xchg
iret
mov
mov
int3
insb
lcall
push
xlat
jmp
shll
and
cmp
mov
imul
clc
cmpsb
aam
stc
jle
add
imul
shrb
cmpsl
mov
sub
jb
cs
arpl
stos
xlat
mov
dec
sahf
pusha
out
cmpsb
and
rol
jo
lods
mov
add
or
pop
filds
popf
scas
sub
mov
js
push
xchg
cmp
sub
insb
in
inc
arpl
in
xchg
in
mov
jns
call
xchg
aam
mov
push
test
jae
mov
jg
cmpb
and
dec
mov
push
lds
xor
fcmovnbe
push
rolb
and
add
in
imul
jo
mov
aam
leave
or
mov
pop
add
shll
mov
and
std
sub
xchg
fdivl
dec
in
inc
movsl
jb
fstpt
dec
xor
lcall
jl
shl
loope
fsts
fstps
adc
movsb
or
call
fwait
je
add
inc
mul
in
popl
sbb
xchg
arpl
jae
cmp
pop
add
adc
loope
icebp
adcl
pushf
outsb
add
adc
or
in
or
loop
xor
mov
aaa
ss
jp
push
ficompl
stc
gs
sub
mov
ljmp
mov
and
sbb
xor
daa
xor
cmp
pop
ljmp
mov
sbb
cmp
imul
das
in
insl
xor
js
mov
scas
cwtl
pusha
pop
imul
int
enter
inc
and
push
and
dec
cmp
cwtl
sub
jmp
inc
or
sahf
ss
lahf
ja
cmp
sub
xchg
dec
or
cwtl
fisubrs
scas
cmpb
stos
xorb
push
inc
adc
add
mov
dec
sub
pop
push
sahf
push
mov
sub
fbstp
fmul
arpl
sti
fwait
repz
loop
bound
adc
cmp
mov
inc
sub
or
mov
ds
and
pushf
push
mov
lret
into
repz
jbe
icebp
inc
push
rcrl
sbb
add
imul
mov
mov
lds
bound
inc
fidivrs
push
mov
loope
or
arpl
inc
add
push
cmp
xor
mov
add
jne
divb
fdivrl
and
xor
leave
add
lret
enter
sbb
jne
mov
cmp
lods
fistl
mov
jmp
jbe
pushf
mov
into
jnp
lods
fidivl
pop
cmp
mov
in
pop
adc
loopne
mov
hlt
ss
inc
xchg
cmpsb
aaa
dec
repnz
sub
dec
pushf
xor
call
or
loop
cld
and
frstor
push
ret
mov
test
ss
and
call
sub
scas
mov
outsl
sti
pop
mov
jns
fldt
stc
out
dec
pop
pop
add
push
lret
mov
dec
fcoml
test
xchg
inc
and
test
fildl
in
mov
mov
imul
add
jmp
mov
shll
outsl
and
adc
sahf
fs
xchg
add
test
cmovno
mov
mov
and
mov
fxch
in
xor
cltd
pusha
cltd
adc
pop
push
loop
mov
test
cltd
mov
ret
cmp
mov
xorb
std
jl
xor
or
xlat
jo
mov
mov
and
cmp
mov
addl
cmp
jg
cltd
xor
repnz
mov
out
xor
sahf
iret
xchg
and
cltd
jbe
or
cmpsb
cmp
int3
outsl
xchg
mov
sbb
adc
scas
mov
mov
mov
xchg
es
push
or
hlt
cmpsb
sti
inc
cmp
scas
cmp
xchg
lods
dec
or
sub
cmovo
jae
mov
cld
orb
nop
shlb
pop
pushf
loop
lods
sbb
loopne
push
inc
dec
or
out
add
pop
test
dec
into
icebp
out
dec
mov
push
pop
push
shl
test
lock
sbb
pop
xor
jb
or
dec
fldcw
shll
std
outsl
sbb
mov
xor
repz
mov
dec
lods
scas
dec
xchg
push
adc
iret
out
int
mov
mov
fistl
test
cmp
ror
inc
push
xchg
push
jge
mov
xchg
push
mov
pop
lcall
fcompl
cmp
sub
ja
jo
adc
addr16
pop
test
dec
cmp
out
sbb
fisttps
push
jecxz
push
fstpl
mov
xor
fs
nop
aas
insl
add
fwait
lret
movsb
in
ljmp
xchg
add
cmpsb
ret
push
adc
popa
fucomp
fwait
add
or
sbb
sbb
and
adc
pop
popa
cli
pop
jae
sahf
jp
call
ja
adc
jb
inc
and
int
xor
movsb
inc
xor
jg
adc
jecxz
jnp
mov
mov
subl
mov
add
cmovs
xchg
jg
mov
ja
dec
lds
add
bnd
or
testb
and
test
bsf
stos
adc
dec
cld
out
xor
clc
push
fst
scas
lods
inc
nop
ds
clc
sbb
popa
mov
lahf
pop
cmc
sbb
lock
xor
push
xlat
xchg
pop
jb
or
or
cmp
mov
adc
jmp
leave
xchg
jmp
mov
cmp
ja
inc
mov
or
pop
cld
dec
add
mov
in
testb
pop
stos
sbb
lcall
cmpsl
pop
loopne
push
std
scas
cltd
pop
mov
loop
mov
mov
push
imul
xchg
cmp
xlat
inc
fstpt
jge
add
lcall
mov
cmp
jo
adc
sbb
movsb
xchg
ret
lret
fdiv
lahf
stc
iret
mov
sub
mov
and
and
jg
cmp
push
test
xchg
mov
pusha
pusha
cld
scas
jg
mov
xor
lea
mov
inc
xor
nop
mov
gs
data16
sbb
mov
push
insl
xchg
add
add
rcrb
ss
and
dec
bound
mov
dec
fcoml
shlb
push
fstps
outsb
inc
lock
mov
cmp
push
sti
cmpsl
jge
fistpl
mov
cmpsl
das
jae
and
push
aad
pushf
xor
xchg
pop
aad
cmp
leave
icebp
mov
or
jae
call
ds
xlat
ljmp
inc
mov
jg
sbb
cmp
and
subl
xchg
add
sahf
pop
xchg
idivl
insl
call
pushf
ds
and
sub
jae
xor
jae
push
outsb
add
notb
in
fbstp
divb
push
std
or
mov
lahf
mov
xor
adc
adc
sti
sbb
leave
cmp
cmp
adc
xchg
mov
jmp
jne
insb
rolb
push
repnz
int
lret
lret
repz
lcall
jne
jbe
mov
mov
out
stos
bound
stc
int
mov
xor
xchg
jo
add
jge
push
js
outsb
dec
inc
lea
cmp
ror
call
mov
inc
xchg
stc
ja
xchg
xchg
push
cmpsb
xchg
and
dec
out
and
or
mov
bound
fcmovne
xchg
and
pop
lea
adc
jmp
stc
dec
es
mov
fdivs
add
xlat
out
out
roll
sti
out
pop
aad
es
lret
sub
adc
cmpsl
push
icebp
andl
sub
rcl
push
insb
pop
jnp
pop
je
lret
jmp
adc
pusha
gs
cmp
and
dec
lods
movsb
push
xchg
sbb
jb
jo
loopne
dec
addr16
lcall
incl
faddl
outsl
sub
push
rol
shll
xor
sbb
and
pop
cmpsl
push
std
pop
filds
sub
roll
mov
lcall
or
sbb
cli
arpl
aaa
bound
xor
push
sahf
stos
jmp
popf
mov
jo
mov
push
mov
push
mov
sub
pop
xorb
pop
out
lret
add
push
push
ficoml
mov
xchg
cld
bound
pop
scas
icebp
mov
pop
inc
push
sbb
outsl
pop
jae
ss
push
push
mov
dec
and
sti
mov
mov
repz
repz
or
fcmovne
mov
cmp
fists
dec
out
aas
sub
dec
test
and
mov
sbb
xor
cmp
mov
pop
mov
mull
fldenv
idivl
adc
imul
cmp
in
fcmovnu
sub
pop
stc
rcl
cs
mov
lea
addr16
fdivrl
pop
mov
mov
or
addl
test
xchg
cmp
cmpsb
jl
pop
adc
jg
add
arpl
ret
fstpt
mov
jmp
jae
lods
cmpl
lahf
inc
mov
cmp
add
rclb
into
mov
into
cld
aad
mulb
sbb
stc
mov
dec
stos
jae
xor
jg
jge
mov
cmp
cltd
mov
push
loopne
adc
test
pop
inc
xor
push
xchg
push
sbb
cld
sbb
cld
pusha
push
fs
sar
jne
ss
arpl
imul
rolb
shrb
fdivs
jno
jbe
mov
inc
fstps
andb
lret
in
xchg
inc
aam
fdivrs
jecxz
idivl
lret
jnp
shll
mov
sub
or
mov
xor
in
insl
jbe
rcr
dec
je
pop
and
adcb
imulb
clc
mov
add
in
and
or
sahf
mov
pop
pop
jne
and
pop
loop
mov
or
leave
loope
xchg
out
imul
cltd
cli
jmp
push
mov
xor
jb
data16
xorl
xorb
add
mov
pop
addb
jp
lcall
mov
adc
push
stos
sbb
push
or
std
pop
nop
daa
ss
sub
or
pushf
sub
mov
inc
lret
shll
cmp
xor
push
xchg
incb
les
jb
add
or
jne
fs
and
rcr
icebp
and
loope
adc
sbbl
or
push
out
mov
pop
jno
pop
pusha
xchg
adc
xor
fdiv
orl
push
cld
sub
and
jle
popf
dec
or
lds
adc
sahf
or
addb
sub
xor
gs
push
loopne
pop
stos
jnp
arpl
dec
cmp
push
cmc
xor
pop
out
movsb
push
outsb
insl
es
inc
xor
faddl
popf
dec
xor
inc
mov
sbb
jns
insb
out
in
xor
add
pushf
gs
pop
loopne
mov
inc
mov
sub
mov
stc
xlat
lods
cwtl
sub
jae
stos
cmp
cmp
fdivrs
mov
addb
mov
pop
mov
sub
out
les
adc
push
xor
arpl
es
sub
jecxz
xchg
inc
ds
add
jge
sub
aad
cmpsb
mov
in
dec
sub
xlat
movsl
repnz
inc
and
popf
rcl
sbbl
arpl
pop
divl
cmp
flds
lcall
jp
fs
rolb
int3
outsl
or
or
jae
push
cmpsb
cmc
mov
sahf
jmp
mov
push
jo
cwtl
enter
stos
enter
push
push
mov
insb
jns
je
pop
cmp
aad
orb
rorl
mov
gs
mov
push
dec
cmp
mov
mov
sbb
cwtl
or
insl
test
pop
adcb
int
add
adc
call
sbb
fisubl
push
jae
sar
push
flds
mov
sbb
sahf
inc
sub
outsl
iret
cmp
push
cmp
sub
mov
lock
aad
outsl
or
jle
mov
jbe
test
mov
mov
stos
sbb
int3
adc
aam
xor
dec
sbb
xor
test
push
jge
pop
jge
lea
sbb
mov
xlat
pop
sbb
jg
insb
xchg
rolb
fstl
mov
test
xor
mov
lods
adc
push
pushf
lea
cltd
fwait
jns
and
bnd
sete
andb
lods
fdivs
stos
adc
pop
xchg
sub
cs
inc
xchg
pop
dec
xlat
xor
lret
popf
pop
sarb
inc
jbe
jo
add
dec
lock
mov
addr16
mov
and
mov
shl
cmp
mov
addr16
lret
enter
and
mov
fsubrl
ljmp
sub
dec
pop
div
cmp
dec
and
lcall
or
dec
shll
push
loop
pop
sbb
inc
jo
pushf
packssdw
jecxz
dec
test
inc
add
sbb
sub
xchg
sub
jg
cmpsl
mov
fs
mov
adc
mov
sub
mov
fs
mov
xchg
pushf
or
sarb
mov
and
push
sbb
mov
or
clc
mov
mov
xor
mov
fwait
jp
mov
cmp
pop
arpl
add
or
lret
jl
inc
rclb
cltd
pop
fsts
lods
push
mov
jmp
mov
sub
mov
jnp
push
and
insl
lahf
decl
mov
pop
enter
in
xchg
mov
sbb
pop
sbbb
shlb
bound
xchg
jne
xchg
dec
stos
lahf
jno
xor
out
ss
xor
test
xor
adc
lea
mov
popa
fsubrp
scas
cmp
stos
add
jmp
lahf
adc
leave
popf
shl
jle
loope
in
icebp
neg
test
nop
xchg
mov
fisubs
sbb
gs
imul
mov
into
in
push
or
sbb
jnp
je
and
lret
cwtl
and
shl
shlb
out
test
push
mov
addb
mov
fiadds
jb
adc
and
ret
cmp
aad
ds
inc
rcll
mov
xor
inc
lods
and
popf
mov
xor
repz
xor
jle
sub
xlat
mov
rclb
push
add
jo
clc
push
into
pushf
cmp
pop
pop
into
dec
adc
je
cmpsl
mov
out
mov
idivb
mov
into
lock
jecxz
inc
bound
lea
add
push
xor
jle
adc
xchg
stos
push
pop
flds
fldcw
sbb
rcll
dec
mov
stos
aaa
mov
lds
dec
jg
sub
ja
test
mov
xchg
andb
mov
mov
push
xor
jg
dec
sarl
mov
inc
mov
pop
pop
fs
inc
je
ds
mov
mov
lods
ret
sub
mov
pop
in
inc
push
and
in
inc
xchg
and
mov
in
cmp
loope
cmpb
pushf
add
dec
les
xchg
adc
pop
xor
or
pushf
in
cmp
es
popa
popf
or
mov
sub
mov
pop
adc
xchg
xchg
sub
cmp
pop
lea
addr16
xor
shll
xchg
rolb
jae
pop
mov
pop
sbb
xor
ljmp
or
adc
mov
pop
es
shlb
sub
addr16
push
mov
sbb
icebp
jmp
xchg
jnp
fadd
aad
stc
cmp
and
and
in
or
std
call
pusha
jecxz
jge
aam
test
cmpl
push
adc
pushf
inc
sbb
push
insl
cmpsb
push
xchg
adcl
dec
mov
jp
shrb
addb
pop
mov
jb
idivb
mov
in
jmp
loop
push
repz
enter
lods
jl
push
scas
ds
pop
pop
pop
pusha
enter
test
push
adc
popf
xor
daa
jne
cmp
shr
sbb
fs
cmpb
inc
sub
out
mov
imul
cmp
in
insl
mov
test
cli
popa
xor
ficompl
insb
shlb
testb
enter
pop
jp
cmp
mov
cltd
fcmovnu
hlt
shll
in
jb
lods
stc
or
and
xor
add
js
inc
mov
cmpl
jne
or
dec
cltd
cs
sbb
adc
jbe
or
es
push
push
into
cmpsb
push
inc
imul
insb
push
shrb
in
mov
ja
lock
mov
lock
push
fmuls
out
sbb
ds
repz
jnp
stos
loopne
lret
xor
dec
rclb
sub
xor
jmp
arpl
cmp
sub
push
aam
dec
adc
addr16
fnstenv
and
mov
mov
xor
andb
pop
cmpsl
leave
scas
addr16
shrl
mov
inc
stc
jmp
shll
jo
jne
loope
mov
and
push
icebp
or
add
add
es
popa
divb
jecxz
pop
mov
dec
mov
outsl
cmp
jns
or
mov
add
inc
push
mov
adc
mov
xlat
outsb
xchg
mov
xchg
and
mov
mov
aaa
and
sbb
mov
aas
cmpsb
mov
repnz
push
xlat
mov
adc
mov
cmp
incl
repnz
inc
rcrl
xchg
jge
movsb
std
fwait
cmp
sbb
lods
dec
in
shlb
mov
sub
sbb
cwtl
shlb
inc
xlat
loope
jb
adcb
mov
stos
cmpsl
mov
sbb
xor
setp
mov
rcll
dec
mov
mov
sub
jmp
mov
pop
mov
in
push
xchg
lock
cltd
iret
aas
dec
pushf
lcall
aad
pushf
add
int3
popf
xor
cmpsb
jl
test
cmp
cmpsl
loopne
xchg
outsl
lret
cltd
movsb
mov
enter
pop
movsb
mov
and
xlat
incb
mov
jnp
fstpt
inc
int3
dec
add
jae
xor
test
lea
add
sarb
sbb
mov
sub
jge
pusha
shlb
imul
xlat
movsl
sar
jnp
aad
pop
push
mov
pop
push
mov
outsl
adc
cmp
pop
inc
rcll
xchg
xchg
sarl
or
dec
jecxz
cmp
cltd
ds
xchg
lcall
out
cmp
mov
std
mov
dec
movsb
inc
push
jne
leave
popf
or
test
jbe
inc
test
je
in
punpckhbw
lea
gs
hlt
sahf
push
imul
sub
adc
or
ss
clc
stos
imul
lock
mov
push
mov
daa
stc
sbb
lock
adc
mov
mov
push
lret
rorb
movsl
sub
fs
lods
loop
cmp
jp
pop
pop
mov
fsts
mov
push
sahf
xchg
mov
mov
and
lock
lea
in
jns
mov
stos
fidivl
out
mov
mov
mov
cmpsl
cmp
cmp
in
je
mov
mov
xor
fcmovnbe
bound
jmp
add
mov
sbb
bound
push
shrl
jp
cmp
sub
movsb
mov
testl
cmpb
gs
lock
jae
cmp
cmp
fdivrl
icebp
adc
dec
and
mov
jns
out
sub
mov
jmp
jecxz
insb
daa
jbe
mov
movsl
movsl
mov
mov
sub
fiadds
mov
in
push
add
shrl
aam
inc
adc
test
pop
fisttps
shrl
pop
dec
into
xor
add
fwait
loop
shlb
pop
test
outsb
loope
sbb
or
inc
xchg
xchg
mov
andl
mov
in
mov
lret
cmp
flds
sbb
push
int
es
xchg
imull
inc
mov
aaa
mov
jo
mov
mov
lock
xor
xchg
adc
sarl
insb
sbb
in
ds
xchg
jge
xor
test
and
ds
aad
addl
sub
add
mov
push
orl
sbb
in
fimull
out
mov
je
xchg
mov
mov
lahf
cmp
xor
mov
xor
inc
cwtl
icebp
es
inc
rcrb
cmp
mov
fbld
dec
mov
test
sahf
or
xor
and
xlat
adc
mov
test
xor
jno
hlt
pop
adc
push
pop
aad
enter
or
loop
mov
and
lock
xchg
cmpsl
pop
xor
lods
jnp
lret
in
or
ret
cmp
or
jecxz
call
adc
xchg
shlb
rcrb
repz
push
in
add
push
jg
or
call
aas
jnp
adc
and
pop
xchg
jne
mov
test
adc
into
inc
ljmp
outsl
rol
cmp
mov
movsl
stc
push
outsb
lds
pop
pop
insl
mov
rorl
fcomip
jle
pop
xchg
ret
loopne
mov
sahf
out
mov
cmp
mov
push
sub
pop
roll
or
popf
data16
clc
loope
sahf
lods
mov
dec
cmpsb
xlat
jns
stos
enter
aad
lret
mov
mov
cmpsl
push
add
inc
rorb
xor
test
jle
fcmovnu
rcrb
push
dec
out
mov
add
cld
pushf
xor
pusha
call
test
cs
lahf
mov
xchg
xchg
push
sti
rorb
loope
mov
jno
cmp
mov
fbld
pop
loope
subb
fcompl
sbb
rclb
mov
sbb
in
xlat
cmp
mov
xor
or
mov
push
pop
mov
mov
fcmovnu
xchg
pop
dec
push
sarl
call
and
and
icebp
or
jne
out
lock
cmp
out
jae
push
out
jle
jno
push
add
or
imul
sbb
outsb
psubd
inc
popf
rclb
ds
dec
sbb
lret
and
lcall
out
imul
sti
rol
adc
push
test
lea
inc
stc
in
mov
shll
aaa
push
sbb
pop
lock
ja
jno
jle
jge
jbe
es
clc
adc
popa
in
pop
lret
in
xchg
add
ds
ja
fsubl
jb
jle
push
push
push
cmp
sarl
push
jl
sbb
shrb
mov
or
and
sbb
mov
mov
pop
loop
jbe
jecxz
je
lods
mov
inc
jae
and
mov
loop
sbb
jnp
or
pop
add
mov
pop
hlt
mov
add
xchg
xchg
cmpsb
adc
addl
sbb
imul
push
xor
mov
mov
pop
jmp
cld
xchg
out
mov
pop
pop
jle
pop
je
xchg
sub
dec
pop
out
cmp
mov
outsb
jae
and
sub
mov
out
inc
and
les
pop
clc
arpl
jmp
cmp
dec
fiaddl
cmpsb
mov
sarb
lret
xorl
call
or
sub
cmp
nop
sub
pop
xchg
imul
push
or
std
xor
inc
mov
popf
loope
leave
adc
leave
add
add
mov
jae
repz
flds
jo
pop
fldt
sub
mov
out
mov
nop
imul
add
fidivrl
les
xchg
push
loope
pop
fcompl
sti
ficompl
xchg
sub
mov
xchg
pop
orb
lods
lds
xor
cmp
adc
mov
pop
cltd
push
xchg
insb
lods
or
adc
cwtl
pusha
push
xor
rorl
in
dec
ret
int
sbb
mov
faddp
and
cmp
xor
insl
popf
xchg
add
jmp
mov
lret
sar
cmpsb
xor
and
enter
xorb
mov
pushf
shll
rclb
add
fimull
and
arpl
out
js
mov
and
pop
int3
lods
xor
jne
test
jno
sub
bound
sar
in
mov
imul
push
movsl
mov
clc
lret
out
lea
mov
cmpsl
rorb
jo
adc
jnp
cmp
cmp
stos
div
or
or
movsb
dec
imul
ljmp
mov
inc
mov
das
mov
push
dec
push
in
and
andl
inc
icebp
cmp
rclb
mov
bound
add
jb
cli
lret
push
nop
inc
add
aas
js
lret
xchg
lods
or
mov
les
jae
mov
shr
gs
jo
jp
mov
adc
cwtl
mov
fcom
cmp
rcrb
adc
add
jne
repz
mov
mov
jbe
sub
ret
cwtl
cwtl
movsl
sbb
icebp
aas
in
pop
dec
fstpt
and
add
adc
ljmp
out
lock
mov
jmp
jl
mov
js
sbb
xchg
cmpsl
into
popf
rol
mov
std
stos
aad
ret
lahf
xor
jp
imul
inc
hlt
fidivl
mov
pop
test
mov
fdivrs
adc
stos
mov
imul
cmp
add
es
push
fsubs
push
inc
mov
inc
inc
inc
ficompl
repz
pop
test
mov
xchg
cld
iret
cmpsl
ficoms
aas
sub
cld
sti
xchg
icebp
out
divb
dec
rcrb
push
out
adc
cmp
jl
bnd
imul
cs
jo
in
or
dec
mov
push
andl
das
int3
xor
jmp
test
fidivrl
cli
inc
out
mov
testb
fwait
and
pop
lret
inc
adc
into
or
sbb
ljmp
mov
std
out
addr16
enter
setns
pop
mov
loop
pop
gs
in
or
out
push
jnp
ret
add
incl
adc
mov
jbe
dec
bound
outsl
cmp
push
xchg
cmp
cmc
inc
subl
les
adcb
dec
pop
inc
sub
repnz
mov
popa
fcmovnbe
inc
jb
out
or
xor
xchg
dec
mov
imul
cmp
ret
cmp
negb
loope
jecxz
les
in
in
dec
jne
and
jmp
in
pop
xchg
add
sub
frstor
clc
add
mov
jns
cwtl
rcl
sub
dec
xor
outsl
cmpsl
ss
xor
imul
pop
mov
xchg
add
adc
shll
cmp
popf
cmp
adc
push
inc
jle
and
lret
sub
inc
and
mov
bound
mov
jp
clc
cli
push
mov
mov
je
or
cmpsl
movsl
fadds
and
dec
adc
lods
pop
push
add
sbb
dec
inc
mov
negb
mov
add
add
pop
jne
aaa
jle
inc
sub
subb
pop
mov
lds
cltd
dec
mov
add
hlt
xchg
inc
outsb
pop
dec
data16
or
inc
mov
xchg
mov
mov
fstps
in
and
dec
outsb
dec
push
adc
sbb
leave
movsl
clc
sbb
jnp
sbb
addl
rcr
test
mov
jl
aam
ret
sub
sub
or
mov
mov
mov
orl
test
inc
jae
inc
sub
inc
dec
jnp
mov
into
out
fsubrl
lds
out
dec
imul
fsub
cmp
or
cld
xchg
add
cmpsb
pop
xchg
sbb
pop
dec
mov
or
aad
xchg
sbb
pop
cmp
test
mov
fildl
lea
xchg
push
jbe
pop
add
mov
xchg
ja
lahf
sub
push
lcall
in
rcll
test
iret
add
das
aas
add
loopne
adc
and
imul
out
loop
xor
add
dec
adc
xor
into
add
jmp
pop
push
push
insl
sbb
or
and
movsl
sbb
push
sub
inc
sub
pushf
lcall
or
out
push
test
ss
pop
cmp
cli
stos
mov
cmp
push
xchg
or
popa
inc
cltd
xlat
shll
lods
add
cwtl
out
cmp
imul
sub
pop
ret
push
inc
out
jno
std
and
mov
add
les
lods
jmp
pop
ror
hlt
inc
adc
and
xchg
mov
jnp
aaa
lcall
hlt
sbb
jge
mov
out
jo
push
mov
cwtl
lahf
pop
leave
in
mov
pop
mov
dec
aad
or
pop
icebp
or
adc
fdivrs
dec
mov
mov
cwtl
mov
dec
hlt
sti
mull
imul
pop
enter
sub
fmuls
rcrl
shll
sbb
adc
lret
sub
cmc
fcmovnu
inc
xor
lods
aam
hlt
push
negb
sahf
sti
lret
sahf
aad
jmp
push
jbe
je
push
push
xchg
push
clc
call
loopne
pop
dec
iret
adc
cmpsl
std
int3
fcmovnu
pop
push
shrb
jne
and
mov
push
or
pop
repz
and
test
lcall
inc
enter
sub
into
or
jmp
sub
and
jnp
mov
in
adc
stos
cmc
stc
adc
test
fildl
mov
insb
dec
out
shlb
add
jl
mov
hlt
push
ja
ret
ljmp
lret
subb
in
mov
add
stos
sub
cmpsl
lret
xchg
inc
lods
mov
push
mov
repnz
adc
dec
push
adc
dec
cmp
inc
or
lret
push
mov
lret
mov
ret
add
xor
sbb
push
rorl
sbb
ja
inc
xlat
rcrb
ljmp
pop
jl
push
mov
ds
push
adc
mov
dec
or
js
call
int3
fisttpl
xchg
lret
adc
cmpb
push
fldenv
bound
dec
jge
sti
jmp
ret
shlb
pop
sub
jmp
scas
cmp
sbb
fs
xlat
push
bound
pop
jecxz
xor
jg
xor
jge
insl
adc
mov
scas
call
mov
fmull
dec
jmp
push
jae
bound
sti
leave
idivb
push
cmp
icebp
xor
jl
and
add
ret
inc
cltd
sub
dec
call
cwtl
adc
gs
movsb
std
stos
dec
push
xchg
jmp
inc
cmp
sahf
xor
out
cld
push
xchg
sub
inc
xor
cmpsl
dec
jle
cs
das
enter
movsl
mov
jb
out
outsl
xor
test
pop
outsb
pop
rorb
rcrl
sbb
adcl
js
cmp
enter
sahf
ret
ss
arpl
cld
out
lods
lods
lahf
cmp
ret
sbb
cld
dec
mov
dec
sub
es
push
test
cwtl
enter
scas
cli
add
and
jl
pop
insb
hlt
dec
lahf
adc
ljmp
data16
in
sub
mov
mov
mov
push
stc
outsl
jmp
in
xlat
pop
mov
scas
repz
movsl
adc
inc
push
xor
sub
xor
lret
sub
scas
mov
add
push
ret
mov
dec
insb
or
aad
sub
add
call
sub
test
decl
adc
je
test
loopne
ljmp
mov
lahf
pop
or
sbb
mov
js
cmp
mov
xchg
loop
into
lods
or
xchg
lret
jp
lds
cli
inc
jnp
mov
mov
cwtl
pushf
fwait
inc
dec
jne
cs
inc
cmp
inc
jbe
and
fwait
push
out
call
loope
gs
ds
mov
xchg
lret
in
and
insl
fnstsw
mov
inc
add
or
lahf
mov
std
cmp
mov
out
adc
add
push
icebp
adc
dec
fstps
adc
mov
mov
adc
ret
or
push
xchg
ja
and
leave
inc
out
imul
add
insl
lock
xchg
aad
pop
mov
pop
mov
sarl
push
or
jnp
rclb
cmp
add
cmpb
mov
std
xchg
jmp
pop
icebp
insw
loopne,pn
pop
jae
add
lret
nop
sub
mov
lret
or
add
jb
xchg
and
aad
rorb
sub
in
push
xchg
cmp
jns
sub
sub
out
in
movsb
test
push
cwtl
mov
pop
dec
aad
and
inc
decb
sub
and
loopne
mov
inc
xchg
pop
ljmp
adcb
loope
pop
xor
cltd
jae
jo
jo
inc
cmp
push
call
in
jp
mov
aas
add
imul
pusha
shrl
mov
push
and
jl
cmpl
add
sub
mov
inc
cmpsb
lea
scas
sbb
sbb
in
fsubl
mov
mov
dec
loopne
push
out
sub
ss
into
jg
inc
mov
imul
mov
xor
fisubrl
iret
outsl
adc
arpl
jl
lds
pop
sbb
mov
int3
ret
test
xchg
nop
in
out
lods
fs
inc
add
scas
jbe
xor
pop
mov
cmp
xchg
mov
pop
add
imul
inc
add
fisubs
in
ret
outsb
mov
xor
imull
sbb
sti
xlat
iret
xchg
int3
dec
inc
aam
and
pop
sbb
sbb
jb
cli
adc
mov
clc
loop
and
pop
stos
push
lcall
mov
xchg
xorb
xchg
call
imul
mov
push
scas
prefetch
loopne
imul
orl
pusha
das
push
mov
arpl
push
arpl
inc
cmp
cli
test
sub
leave
out
insl
xchg
mov
pop
mov
mov
jns
jg
lahf
test
lock
into
push
out
test
decl
jp
jb
and
out
in
scas
clc
daa
lock
sub
xchg
cmp
mov
stos
hlt
inc
scas
es
or
mov
adc
data16
aas
push
mov
fistpll
sub
push
adc
cltd
mov
adc
cmovnp
pop
addr16
cmpsl
loop
xchg
inc
xchg
mov
add
sbb
lret
repz
out
cmp
and
bound
gs
sbb
int
out
test
mov
shl
bnd
xlat
test
or
push
add
jno
aad
dec
aam
stos
xchg
add
ss
mov
pop
aam
and
jle
jbe
push
xor
add
cmpsb
call
int3
xor
test
xchg
jno
jbe
mov
test
mov
shll
test
cwtl
mov
cmpb
xchg
xlat
lahf
mov
sub
sub
xchg
pop
inc
ficoml
xchg
mov
test
xor
inc
xchg
mov
repnz
and
pop
inc
push
sbb
sub
jl
pop
push
arpl
pusha
stos
cmc
dec
daa
ja
call
push
jge
sbb
mov
mov
cmpsl
xchg
loope
fcomps
fcomi
imul
or
lahf
or
xchg
cli
stos
cmp
sub
out
inc
bound
cmc
jns
jb
test
imul
or
xchg
js
js
orl
adc
pushf
clc
push
arpl
rcll
jae
gs
jl
repnz
push
sbb
ja
sbb
jne
cmp
cmpsl
repnz
repnz
sub
divb
mov
cld
cmpsb
or
repz
sub
add
ret
dec
push
call
xorl
aam
pop
div
add
call
mov
ficoms
inc
add
and
dec
dec
andl
xchg
stos
popa
mov
pop
mov
out
jp
sub
fldt
cwtl
mov
jmp
and
mov
lods
mov
sbb
sahf
shrl
fadds
pop
test
lods
pop
mov
mov
adc
sbb
inc
xor
fwait
xchg
mov
in
pop
pop
jg
dec
ja
fstpt
xor
add
cmp
pop
mov
into
scas
dec
mov
and
jno
repnz
cmc
xor
push
fcoml
negl
jg
sub
sub
sub
sub
mov
mov
and
les
ljmp
out
pop
jnp
in
cmpsl
in
dec
mov
dec
lock
or
lret
add
loopne
inc
and
sahf
jl
je
mov
ss
sbb
scas
cmp
repnz
sbb
popa
mov
push
inc
insb
movd
or
in
xor
mov
nop
movsl
dec
das
sti
pop
mov
cmp
stos
pusha
cwtl
mov
jecxz
mov
iret
dec
push
jg
stos
adc
add
mov
mov
nop
daa
fildll
ss
pusha
imul
and
fldl
aaa
add
imul
xchg
mov
xchg
mov
cmp
ror
js
jl
mov
loope
aaa
xchg
in
jecxz
mov
sub
or
inc
leave
sbb
sbb
push
clc
aam
mov
mov
cmp
dec
test
xchg
adc
mov
ja
push
push
ficoml
mov
sbb
cmpsl
push
adc
dec
dec
add
xchg
dec
shll
lahf
les
outsb
inc
ds
sub
pop
jle
jp
test
xchg
sbbb
jmp
in
loope,pt
shll
loope
and
xor
icebp
xchg
es
lock
lea
scas
ficomps
aam
push
xor
add
out
ficomps
cmp
or
mov
pop
clc
mov
mov
imul
cwtl
push
lods
lea
mov
inc
lods
sbbb
loope
mov
push
adc
sbb
fisubs
cmpsb
mov
mov
cs
jmp
xchg
push
pop
fsubrs
incl
in
or
xchg
rcrb
mov
divb
sub
not
stc
jnp
cmp
xor
pop
repz
pop
sbb
lods
mov
std
or
inc
arpl
dec
push
lods
movsb
lods
jge
dec
xchg
inc
add
cmp
jmp
mov
push
mov
mov
jge
cltd
ja
jle
jmp
xor
mov
cwtl
xor
js
or
jnp
out
and
lahf
addr16
sti
adc
or
lea
push
arpl
mov
xor
imul
adc
out
mov
test
test
cli
setno
cmp
shll
lods
sub
push
sbb
incl
movsb
data16
cmp
jg
mov
out
sub
cmc
lcall
or
sbb
stos
pop
sub
ret
fistps
adc
je,pt
xor
and
ret
cwtl
and
or
pop
shl
sub
inc
add
out
cmp
inc
movd
inc
sub
pushf
bound
pop
push
dec
rcrb
negl
nop
in
push
sub
push
nop
push
pop
imul
pop
cmpsb
cmpsb
movsb
xor
jp
dec
into
repz
insl
or
or
insb
mov
push
sbb
bound
pusha
gs
mov
daa
iret
cmpsl
sbb
pop
lahf
mov
addr16
jmp
and
cmp
jne
ja
jns
cmp
mov
clc
icebp
ljmp
mov
sti
pop
inc
dec
out
or
or
test
daa
lods
jae
add
sbb
pop
ret
imul
pop
insb
add
sbb
int
sahf
dec
dec
movsl
push
jp
add
mov
ds
dec
mov
or
lods
hlt
ds
xchg
sub
mov
cwtl
je
outsl
mov
add
pusha
in
loopne
call
rclb
sub
jno
xor
in
sbb
std
fsts
addb
push
bound
mov
sti
fildl
jmp
in
outsl
xchg
repz
out
in
iret
adc
int
cld
jle
loopne
shll
fsubs
mov
lods
ret
sub
cmp
lods
cmp
dec
pop
decb
sub
dec
popa
enter
out
addl
rorl
xlat
mov
jno
cli
jbe
cmc
inc
pop
inc
sub
cs
add
pop
mov
outsb
es
aaa
mov
out
lcall
push
adc
rcl
dec
leave
lods
cmc
push
jo
mov
popf
repnz
xor
lret
fs
mov
mov
stos
xor
adc
push
stos
rcrl
out
xchg
dec
ja
adc
jns
cmpsl
pop
xor
sbb
inc
or
or
pop
rorb
mov
clc
mov
or
pop
adc
add
fcmove
aaa
and
or
loope
push
out
or
pop
gs
adc
inc
adc
and
sbb
test
nop
jmp
aam
sbb
jne
outsb
add
stos
push
mov
cmc
fisttpll
popaw
jl
mov
mov
add
mov
clc
fstpt
push
mov
mov
test
mov
leave
pop
stos
mov
enter
and
adcl
push
and
test
aas
xchg
imul
jo
and
lret
std
or
mov
push
sub
orl
mov
xchg
pop
and
mov
ja
xor
jb
gs
pop
into
mov
jbe
in
das
cmp
push
push
in
mov
dec
push
ss
test
or
lea
daa
xor
xor
dec
outsb
mov
int3
mov
adc
mov
arpl
cmp
xor
sbb
jae
in
imul
stos
in
stos
test
cmp
lret
jae
stos
jl
or
lock
imul
add
into
mov
inc
adc
in
and
dec
mov
in
add
push
cld
ja
leave
outsl
movsb
pop
lods
imul
mov
mov
xchg
sti
xchg
inc
aam
test
push
xchg
jno
aas
mov
and
push
mov
loope
pop
cmp
xchg
mov
inc
cltd
mov
stc
and
sahf
push
lahf
aaa
jae
shrb
sahf
pop
mov
bound
mov
cli
or
cmc
xor
sub
ret
xor
shl
cmp
ficoml
xor
add
pop
mov
in
fwait
xchg
outsb
mov
mov
push
inc
add
xchg
out
xor
out
mov
in
mov
push
sbb
add
repnz
loopne
clc
pop
inc
cmp
clc
or
mov
add
dec
sbb
push
fsubl
xor
fcoms
jno
xchg
cmc
js
xlat
jbe
js
xorb
std
pop
outsl
cmp
pop
movsb
cmp
mov
lret
scas
andb
xchg
push
mov
into
leave
xchg
and
xchg
js
push
cld
cli
ror
lock
test
imul
push
sub
lcall
arpl
outsb
in
push
dec
xchg
inc
xchg
adc
mov
idivl
inc
call
test
imul
fwait
mov
cmp
sbb
inc
lock
xor
inc
push
pop
and
add
fstpt
fisubs
jne
outsb
jp
jo
jne
pop
rolb
cmp
xchg
cwtl
mov
or
xchg
stos
cmp
mov
fists
adc
call
pop
int3
jmp
inc
jbe
xor
loopne
icebp
mov
or
mov
adc
or
imul
loope
add
add
add
cmp
and
in
pop
mov
and
mov
xor
test
mov
and
jle
test
js
push
sbbb
xchg
pop
jg
mov
js
push
add
ret
xchg
rorb
out
xchg
lods
and
fistl
mov
sbbl
pop
add
out
js
jb
roll
pop
dec
fdivl
add
sahf
add
ds
lock
pop
es
jecxz
bnd
jmp
push
adc
cmp
sub
dec
inc
ret
sub
mov
es
mov
mov
inc
je
imul
push
sbbb
add
pop
cs
daa
popf
pop
mov
in
sbb
in
daa
aad
jnp
push
mov
mov
dec
stos
pop
cmpsl
dec
out
scas
cmp
cmpsl
cmp
popa
mov
lock
outsb
insb
jno
and
icebp
testl
dec
add
rcrl
push
jge
jge
daa
clc
push
dec
ss
ror
test
jne
mov
lds
scas
outsb
jp
arpl
jb
mov
sub
inc
inc
sub
lret
inc
in
add
idivb
pop
mov
int3
mov
es
movsb
or
dec
ds
pop
cmpsl
sbb
decl
vpmacssdd
or
mov
mov
repnz
push
and
fldenv
mov
push
pop
push
lcall
push
seta
leave
iret
dec
imul
cmpl
add
push
add
dec
dec
aad
out
inc
pop
loope
test
add
jg
cmp
xchg
mov
add
orb
js
arpl
int3
insb
pushf
ss
cmpsl
inc
xlat
popf
sahf
mov
or
call
mov
leave
sbb
lods
and
adc
cmpsb
fwait
incb
mov
mov
jae
in
push
mov
mov
mov
dec
test
add
rolb
fst
faddl
dec
push
xchg
cmp
shr
lods
loope
in
pop
arpl
cmp
mov
mov
mov
push
push
out
scas
fsubrl
xor
sbb
dec
and
test
les
mov
in
stos
mov
shlb
push
lret
lock
scas
into
das
sub
jno
sbb
inc
sub
test
push
leave
pop
push
mov
fcmovnu
pop
fdivrs
xchg
jb
repz
pop
pop
mov
lret
shlb
mov
inc
push
outsl
in
nop
cmc
push
mov
divl
push
fmull
cmpl
ja
pop
subl
loope
mov
mov
jns
cmpsl
jbe
lock
std
bound
dec
or
imul
test
push
bound
mov
or
lods
in
popf
dec
adc
sub
or
and
aad
sub
mov
cmpsl
push
data16
push
cwtl
js
and
cli
push
push
or
dec
rcrb
add
test
push
jo
pop
inc
jae
xor
mov
mov
fisubrs
fs
mov
cmpsb
add
sub
jge
inc
sub
lret
fisubrl
mov
xor
dec
leave
cltd
cmpsl
push
mov
dec
cmpsl
out
cld
dec
and
mov
fs
jns
into
mov
adc
loop
mov
push
fcoms
adc
jno
cltd
fiadds
push
enter
or
mov
lret
dec
cmp
or
xor
adc
cltd
ss
out
add
mov
jo
dec
push
mov
jno
test
sbb
rorb
jns
jmp
mov
add
cmpsl
test
adc
outsb
jb
adc
add
xchg
leave
jnp
and
xor
mov
cld
enter
rclb
js
dec
xchg
pop
enter
fcoml
stc
shlb
fmull
mov
repnz
sbbb
push
xchg
sbb
xlat
push
mov
cmp
jecxz
sbb
pusha
lret
loopne
rep
adc
pop
test
mov
in
insb
loopne
add
out
mov
cmp
cltd
sub
test
imul
cmp
popf
jo
pop
das
and
pop
insl
pop
sub
or
xor
in
jecxz
pop
inc
cltd
aaa
lock
or
inc
cmp
jmp
mov
xchg
mov
test
popf
and
in
jo
xor
add
pop
std
in
cmp
cmp
test
sub
mov
xchg
sub
outsb
add
inc
jnp
inc
ret
ds
cltd
es
aaa
mov
push
cld
sbb
insl
sub
push
stos
test
loop
vpunpckhwd
dec
out
rorb
mov
into
pop
jge
popf
and
xor
xor
and
lock
cli
js
or
cmp
dec
add
jle
dec
and
sub
movb
stc
jb
leave
ficoml
icebp
cmc
inc
push
xchg
lods
out
or
cltd
iret
adc
add
ja
sbb
fsubs
sarl
cltd
or
adc
fsubl
lret
lods
push
pop
hlt
mov
or
in
mov
into
test
mov
aam
out
and
inc
jns
scas
repz
and
hlt
mov
sub
pop
pop
sbb
jmp
cmp
sub
jne
lea
into
and
or
or
test
pusha
jp
jo
addl
xchg
sbb
sbb
mov
xrelease
inc
mov
cmp
lcall
mov
test
lret
xchg
scas
push
jle
gs
sub
leave
cmc
jmp
fistps
and
cmc
les
push
test
jge
stos
dec
in
dec
fiadds
lods
cmp
xchg
cmp
test
filds
lret
and
pop
add
sarl
inc
fisttpl
sub
pop
cmpsb
inc
lea
dec
aaa
inc
insl
cmc
sub
cli
idivl
jns
insb
cli
sub
mov
and
scas
das
mov
dec
pop
cld
cmp
mov
cmp
ret
add
scas
andb
adc
loopne
inc
mov
or
test
sahf
xor
xchg
jns
repz
xchg
mov
fisubrs
dec
xchg
and
arpl
push
ss
ror
cmp
inc
cmp
scas
jge
mov
push
and
in
gs
push
jo
add
cmp
push
into
bound
sub
std
or
mov
add
or
or
std
addb
cmp
pop
push
sbbl
pop
lret
rdtsc
pushw
cmpsb
pushf
call
cs
sahf
add
pop
add
sub
shr
test
adc
pushf
add
dec
mov
mov
jle
sbb
fcoml
inc
enter
pop
pop
test
mov
out
xor
dec
sub
push
push
pusha
push
jge
scas
sbb
dec
inc
pop
cwtl
outsb
lahf
cmp
nop
inc
test
adc
mov
push
jno
cld
xchg
addb
push
mov
sbb
xor
sbbl
andl
mov
adc
mov
lret
mov
gs
mov
add
adc
xchg
xorl
sub
sahf
rolb
fldenv
andl
mov
push
add
clc
and
sub
push
aas
scas
shr
daa
sub
pop
scas
inc
xlat
sub
adc
mov
xchg
inc
sti
sbb
testb
xor
jge
push
cmp
push
adc
bound
shl
or
push
cld
mov
mov
incl
xor
mov
inc
jl
ret
mov
fwait
dec
dec
sub
cmc
and
sti
in
xchg
cmp
jae
add
shlb
lahf
jg
xchg
stos
inc
add
iret
mov
mov
rcrb
cmp
jbe
add
outsb
addr16
mov
sub
pushf
sbb
imul
imul
imul
icebp
push
mov
ja
movsl
outsl
jo
push
and
dec
testl
iret
cmp
xor
push
jle
mov
fnsave
xchg
dec
ficompl
fbld
lcall
js
cmp
leave
enter
sbb
push
xor
enter
xor
dec
lahf
shll
xchg
loope
inc
inc
lcall
mov
or
xchg
xlat
icebp
or
push
int3
mov
add
inc
outsb
out
loope
mov
dec
std
in
std
inc
jae
xor
xor
and
out
cmp
pop
inc
add
lods
int
cmp
pop
popa
pop
add
outsl
add
shll
push
jmp
cli
je
dec
sbb
pop
jbe
dec
or
clc
cld
jge
test
repz
push
push
mov
mov
add
in
std
pop
xchg
xchg
int
and
fadds
pusha
ljmp
or
dec
mov
lret
jno
xor
xor
pop
xchg
in
arpl
scas
sub
mov
test
loop
lds
mov
loop
xchg
jge
cltd
mov
daa
shl
cld
xchg
fwait
mov
loope
pop
sub
adc
jns
sbb
mov
lcall
push
mov
mov
popf
pop
jge
mov
xor
pop
repz
outsb
lea
and
pop
cmpsl
xlat
ljmp
dec
lea
incl
jno
aas
mov
push
xlat
cwtl
je
add
out
sbb
bound
push
fcmovb
mov
cwtl
add
adc
out
cld
xchg
pop
repz
jmp
pop
cmp
add
cs
imull
or
pop
dec
sar
and
xchg
push
xchg
jno
leave
aas
adc
inc
adc
in
pop
aas
clc
das
clc
mov
call
loopne
sbb
int3
cmp
adc
scas
mov
mov
stos
into
adc
sbb
addr16
xor
and
subb
cs
or
or
xchg
test
repz
dec
and
aaa
push
ret
subb
scas
les
sbb
lahf
sub
mov
push
mov
cmpsb
pushw
jns
pusha
or
mov
jp
arpl
insl
cmp
enter
inc
cwtl
push
lock
xor
in
mov
xor
dec
mov
pop
sbb
xchg
pop
loop
out
cmp
xor
push
fcoms
cmp
jmp
mov
push
push
pop
push
push
pop
test
in
pop
in
sbb
in
push
add
ss
lods
int
cmp
shl
in
sar
pop
mov
jno
mov
cltd
pushf
nop
cli
inc
dec
xor
es
add
add
lret
mov
pop
loopne
mov
jno,pn
idiv
insb
pop
mov
mov
repz
aas
add
and
aas
mov
sub
nop
out
mov
adc
cmp
adc
adcb
imul
jmp
inc
out
int
push
sahf
xchg
test
jne
jo
push
imul
push
lea
mov
lea
cwtl
test
xchg
mov
int3
in
test
mov
jbe
cmovne
xor
mov
xchg
movsl
repz
insl
mov
pop
dec
xor
mov
hlt
push
xor
ret
jb
cmp
lcall
jle
inc
test
jecxz
mov
push
inc
adc
in
mov
ljmp
idivb
loop
mov
cwtl
loopne
jecxz
jl
popf
mov
xor
ja
mov
stc
jnp
ret
xor
shrl
dec
push
shll
sahf
xlat
mov
jge
imul
pop
ret
mov
orb
push
les
xor
adc
imul
mov
push
fs
push
out
lahf
adc
or
lcall
inc
xchg
sbb
sub
cs
mov
mov
xlat
inc
pushf
scas
push
sbb
mov
and
lea
sub
je
cmc
out
sub
xchg
inc
dec
add
jo
or
mov
sbb
lcall
adc
and
sub
and
hlt
out
pop
ljmp
cmpsb
stos
stc
mov
xchg
jne
call
lea
addr16
xchg
pop
aaa
mov
jns
stc
push
cmc
adc
sub
mov
or
daa
push
std
mov
pusha
rorb
addr16
mov
stos
fimull
mov
in
ljmp
ja
dec
js
jae
mov
jl
push
iret
scas
xor
movsb
test
sarb
repz
fnstsw
and
and
rcr
hlt
aad
clc
int
call
and
mov
in
mov
pop
stos
popa
popf
hlt
sti
mov
imul
lods
loopne
mov
lahf
bound
dec
xor
xchg
xlat
arpl
or
xchg
push
fistpll
xor
sub
inc
pushf
mov
xchg
xchg
fnstenv
xchg
cltd
mov
js
enter
mov
dec
pop
push
mov
mov
sti
in
mov
xor
dec
inc
xchg
loope
aam
add
int
pop
lret
movsl
insl
daa
jg
xor
ffreep
sarl
xor
dec
sub
mov
es
mov
std
ja
pop
mov
mov
lods
inc
test
push
jno
aam
fbstp
ss
and
mov
cli
mov
rcll
and
mov
out
mov
add
ja
mov
mov
je
add
jne
mov
adc
sbb
out
add
cmp
push
cwtl
inc
push
sahf
xchg
clc
mov
xchg
adcb
cli
or
jle
cwtl
mov
movb
sub
sti
sbb
cmc
fistl
xchg
out
xor
pop
xchg
xchg
test
adc
loop
rcrb
xchg
xor
pop
out
daa
pop
insl
pop
mov
ret
pushf
int
sbb
push
test
jp
in
pop
or
pop
pshufw
repnz
mov
and
imul
in
sub
inc
fildll
addr16
fstpt
call
cmp
into
popf
lret
sub
mov
test
hlt
sub
test
decl
enter
adc
add
fisubl
pop
cmp
fimull
pop
fwait
push
hlt
push
int
cmp
cld
out
add
mov
pop
shrl
aam
sahf
or
xchg
inc
sbb
aas
je
sub
addb
test
int
out
jge
jne
movsl
sub
inc
leave
pop
add
dec
add
lret
clc
xlat
push
mov
pop
je
in
cmp
arpl
cmp
mov
or
xchg
adc
popa
cwtl
clc
adc
pop
scas
sub
int
addr16
push
pop
std
fucomp
aam
mov
cmpsb
mov
sbb
pop
fucom
test
cmp
shr
xor
es
xchg
add
pop
scas
mov
daa
mov
jle
add
push
mov
pushf
rol
outsl
push
sbb
ja
jno
shr
mov
daa
enter
jmp
sbb
sbb
inc
or
outsb
dec
jbe
sbb
dec
adc
addr16
fcoms
or
cmp
rorl
or
sbb
pop
jmp
pop
pop
mov
jae
sbb
or
dec
mov
test
sbb
pop
cmpsl
sub
xchg
insb
mov
sahf
repnz
or
jne
ja
inc
xor
fnstsw
rcrl
inc
mov
pop
mov
inc
sahf
ljmp
cmpsl
stc
enter
inc
mov
out
arpl
or
pop
jg
jnp
mov
ja
xor
sarl
shlb
lahf
jae
pop
add
mov
jb
xor
out
out
in
mov
jl
mov
xchg
jno
mull
xchg
lahf
inc
popa
cli
xor
jns
mov
xchg
fcmove
data16
mov
sbb
insb
pop
insb
sub
adc
push
dec
loopne
xchg
rcrl
shrb
pop
cs
pop
or
je
push
leave
out
pop
insl
adc
lods
mov
frstor
stos
aaa
fcoml
jp
aaa
sahf
stc
dec
push
loopne
in
xor
out
stos
jp
sarb
scas
les
inc
xor
push
push
push
jle
xchg
push
pop
out
cli
xchg
sub
xchg
mov
jecxz
ss
dec
push
xor
or
push
loop
iret
popf
mov
mov
dec
mov
xlat
in
cmp
popa
cld
inc
repnz
out
add
ds
ficomps
sub
fdivrs
pop
repz
push
mov
add
fmul
insb
push
in
adc
add
pop
pusha
push
mov
enter
pop
lret
lods
jae
pop
adc
xlat
repz
and
adc
xor
pop
ficomps
pusha
and
fidivrs
dec
cmc
jns
add
subb
pop
mov
xor
or
mov
inc
add
mov
mov
test
test
mov
sti
pop
enter
push
cmp
jne
test
mov
mov
and
out
popa
int
stos
jae
adc
inc
xchg
sbb
pushf
scas
les
enter
ret
push
lret
fcomp
test
aaa
xor
shr
xchg
adc
fnclex
mov
sub
inc
cmpsl
cwtl
dec
pop
jg
pop
mov
adc
add
lret
je
dec
movsb
push
dec
push
aas
adc
fistl
adc
push
jg
shrl
ret
loope
add
dec
cli
adc
mov
jne
sbb
jns
in
aam
xchg
pushf
out
jno
pop
sbb
dec
cmp
xor
xor
sub
inc
shll
jle
dec
loope
outsl
sahf
pushf
mov
jo
loop
mov
jo
push
pop
pop
jns
imul
jb
mov
xor
fimull
fbld
sub
lock
xchg
loopne
mov
lcall
adc
pop
jns
insb
dec
lock
call
js
xchg
xorl
cmc
mov
dec
movsl
loopne
adcl
sub
jae
out
pop
out
cli
es
lret
sub
jne
sbb
mov
dec
sbb
mov
sbb
cmp
cmpsl
xchg
sub
pop
push
jno
in
sbb
fs
stc
mov
inc
fs
xor
sub
fs
mov
xchg
dec
mov
pop
or
int3
shll
out
movsl
inc
jecxz
fwait
inc
and
pusha
adc
pop
gs
xlat
loop
add
es
test
bound
popf
xchg
inc
pop
push
mov
int3
jbe
in
notl
adc
xchg
inc
adc
xchg
or
add
xor
xchg
cwtl
sbbl
xchg
data16
dec
xchg
movb
sub
xor
and
sbb
rorl
xchg
inc
push
scas
ss
rorl
int
jae
jns
push
push
ficomps
insb
cmp
lcall
jnp
das
or
ret
subb
shrl
xchg
loop
cmp
lret
sbb
lds
sub
mov
and
jecxz
mov
loop
fdivrs
movsb
bnd
mov
adc
das
lcall
push
aas
out
mov
lahf
cltd
lret
and
mov
xor
iret
jne
nop
out
and
jmp
sbb
fs
pop
jle
adc
addl
pop
push
adc
sub
sbb
rolb
sub
pop
mov
lcall
dec
rcrl
mov
out
es
mov
mov
push
sub
rorl
sbb
popa
xchg
loope
and
movsl
pop
add
popf
and
dec
xor
inc
xor
fwait
call
pop
lods
mov
xor
add
cld
daa
xchg
xor
inc
pop
dec
andb
das
adc
jg
mov
pushf
xchg
jbe
jg
pop
movsl
data16
insb
ds
in
insb
int
insb
push
es
fs
lret
scas
push
in
inc
sahf
sti
mov
pop
gs
out
mov
rcrb
aad
outsl
out
sub
xor
push
pop
nop
push
push
or
loopne
subl
push
or
aaa
les
dec
jecxz
pop
inc
push
imul
cmpl
movq
sub
outsl
jo
or
adc
pop
imul
pop
test
mov
std
pop
inc
xchg
jne
lock
fs
in
in
push
lods
mov
imul
sbb
cli
rorb
pop
cs
lods
cmp
xchg
xchg
adc
lret
xchg
popa
jl
rep
sarb
in
enter
and
insb
lods
push
pop
aad
add
push
add
add
notl
xor
mov
lcall
dec
sub
cmpsb
gs
adc
mov
test
or
nop
call
sbbb
cld
xchg
out
scas
pop
adc
out
pushf
adc
cmp
aad
mov
std
aad
sarl
sub
outsl
inc
pusha
in
adc
pushf
push
push
daa
sbb
es
in
aam
stc
sbb
fiaddl
roll
stos
shl
adc
push
jmp
push
push
fnstcw
inc
dec
add
mov
push
lods
push
testb
pop
ja
clc
lcall
mov
and
mov
inc
movsb
sti
xchg
jecxz
mov
adc
cli
adc
fsts
sahf
mov
jns
lea
fistpll
mov
pushf
xchg
hlt
sti
fldl
or
jmp
js
movsb
popa
xchg
int
mov
jp
push
lret
pop
test
push
lahf
inc
inc
lahf
xlat
xchg
out
xchg
notb
popf
leave
mov
add
pop
je
mov
lock
aad
repz
pop
adc
mov
push
movsl
xor
test
sbb
cmp
jo
lea
push
jp
test
add
stos
or
inc
sbb
loop
lcall
xchg
mov
sbb
mov
adc
rol
ja
mov
loopne
icebp
jnp
fldcw
jb
and
mov
mov
stos
xchg
jo
dec
ficomps
push
in
imul
sub
jbe
jns
or
or
ja
jns
pop
jne
andl
adc
mov
mov
inc
push
mov
cmpsb
mov
sbb
movsb
dec
adc
popf
nop
and
mov
pop
dec
repnz
or
push
push
mov
scas
push
rcr
ret
cli
out
fs
rolb
or
push
xchg
cmp
fisubrl
inc
push
sub
sbb
in
outsb
int
push
push
insl
cmp
out
shll
push
aam
jmp
fnstcw
leave
inc
mov
cltd
inc
int3
inc
mov
push
adc
imul
mov
dec
fcomps
xchg
cmpsb
lret
mov
and
or
mov
push
outsb
mov
push
sub
push
jmp
cmpsl
call
xchg
push
xchg
cwtl
add
lods
mov
mov
mov
repz
ficoml
xor
cmp
and
fists
mov
push
jne
fcmovnu
into
outsb
push
scas
idivl
and
and
jno
in
cwtl
adc
xor
movsl
loope
xchg
movsb
iret
mov
aad
inc
sub
push
mov
psubw
icebp
cmpsb
in
in
sbb
cmc
adc
sbb
adc
daa
sbb
out
mov
pushl
inc
or
jle
cmp
pop
xor
cmpsl
aas
mov
add
mov
aam
aam
imull
pop
lock
fs
mov
add
adc
aam
inc
mov
mov
dec
mov
mov
pmullw
aad
xlat
pusha
jmp
aad
test
and
xchg
popf
add
ret
fnop
arpl
icebp
sub
push
aam
pop
les
in
xchg
dec
popf
push
std
mov
and
pop
adc
imul
lret
push
jecxz
xlat
lods
sar
lds
mov
xchg
push
out
pop
mov
push
aam
push
xchg
syscall
dec
pop
mov
or
and
testl
mov
pop
comiss
jo
inc
push
mov
jbe
in
xchg
or
xor
imul
inc
test
and
pop
mov
enter
or
ret
mov
jnp
fidivs
add
cmp
xchg
daa
cmc
mov
idiv
mov
rolb
pop
cmp
scas
xor
xlat
orl
scas
in
add
lods
cmp
xchg
nop
or
ret
cmp
jns
cmp
jl
jne
dec
ret
sbb
dec
lahf
inc
dec
repz
xchg
inc
cltd
ret
inc
pop
sub
sub
loop
test
cmp
mov
mov
outsl
mov
test
test
mov
xor
sbb
dec
in
cld
add
mov
mov
in
push
mov
popa
pop
jno
pop
jg
imull
leave
das
adc
xchg
push
lret
outsl
scas
cli
out
dec
daa
pop
arpl
ret
aas
pop
dec
push
dec
pop
sbb
mov
sub
add
sbb
xor
inc
stc
pop
orb
mov
fst
aam
sub
inc
bnd
jle
mov
dec
outsl
nop
inc
stc
stc
outsb
lods
ds
cmpsl
push
js
pop
divl
lods
inc
aas
xchg
test
out
pop
subl
out
xchg
leave
or
ja
mov
jae
or
js
add
mov
mov
xchg
push
rorl
inc
fcompl
leave
incb
xor
and
sbb
rcrb
repnz
aaa
mov
stos
add
or
fldenv
and
std
lods
cltd
xchg
shl
mov
adc
jmp
repz
dec
mov
sbb
or
inc
repz
fcoml
out
pop
cmpsl
push
push
in
mov
fbstp
loop
cmp
mov
dec
fwait
or
adc
lds
out
xchg
ds
push
ficoms
ja
dec
scas
fsts
add
cs
pop
outsb
sahf
mov
push
mov
repnz
jmp
mov
jae
adc
pop
dec
orb
lcall
out
adc
dec
jne
mov
pop
xchg
sub
push
rcrl
sub
cs
cli
sbb
sbb
jb
sbb
cmpsb
xchg
ss
insl
xor
and
add
push
mov
mov
jnp
imul
mov
ljmp
xchg
push
pop
lret
imul
out
push
mov
or
mov
dec
lock
lds
xchg
in
mov
cmp
out
shlb
imul
pop
add
imull
cmp
sbb
fdivs
lock
push
mov
mov
pusha
or
push
xchg
adc
mov
cmp
push
dec
andl
lods
mov
negb
lcall
pop
mov
adc
outsl
mov
xchg
dec
call
cwtl
mov
adc
jge
fimuls
ret
inc
int3
pop
scas
or
mov
xchg
rorl
int3
outsb
add
sub
and
sti
mov
add
sbb
push
movsb
js
mov
xor
lods
test
sbb
add
mov
cmp
stos
xor
stc
mov
aad
cli
or
das
ficompl
mov
inc
repnz
cld
ja
int
mov
les
cmpsb
sbb
sbb
dec
xor
andb
xchg
into
stc
int
push
cmp
cld
shrb
xor
pop
fnsave
nop
mov
add
cmp
add
push
and
sbb
insb
adc
jp
add
add
xor
jle
cs
ret
out
xor
sbb
sbb
mov
bnd
mov
arpl
push
ret
and
jp
cwtl
push
add
mov
push
mov
rolb
fcoml
pop
das
push
icebp
jo
insb
je
pop
pop
daa
mov
gs
cmp
or
idivb
xor
call
mov
mov
pushf
shrb
flds
jge
push
sbb
test
push
std
jecxz
loopne
xor
jo
ret
mov
inc
in
pop
mov
ds
xchg
stos
cmc
xchg
push
gs
mov
daa
inc
hlt
orl
push
xlat
ror
add
mov
aas
call
faddl
cmp
mov
add
or
ficoml
hlt
in
clc
in
aam
cmp
lea
shl
mov
sbb
lock
cltd
adc
or
lret
sub
ret
or
cmp
pcmpgtb
js
fcoml
lahf
sub
pop
call
out
push
test
mov
jb
in
mov
sbb
push
orl
je
test
out
adc
lods
push
jmp
insb
xchg
add
sub
js
jle
push
shlb
dec
jg
scas
faddp
xchg
xor
dec
inc
xor
je
mov
mov
xor
xchg
xlat
mov
add
in
push
mov
cmp
mov
dec
mov
push
mov
jmp
mov
mov
ret
xchg
pop
pop
arpl
add
mov
faddl
and
dec
mov
lock
ret
sub
sti
mov
lcall
out
ja
int3
mov
insl
inc
das
or
inc
cs
xchg
push
ja
dec
scas
rclb
pop
les
xchg
dec
adc
xchg
mov
cmp
rorl
aas
sbb
mov
push
leave
repnz
add
fsubrl
xor
sbbb
fs
xchg
cmp
add
mov
push
test
dec
pop
adc
xor
and
lcall
xlat
inc
out
test
mov
sub
loope
mov
mov
aam
cmp
adcb
popfw
test
call
xor
ret
sub
mov
sbbb
and
out
test
dec
push
jle
xchg
outsl
test
pusha
push
xor
adc
mov
mov
stc
fwait
leave
push
call
int
xor
xlat
hlt
cmp
dec
dec
mov
inc
cmp
cli
xchg
push
push
push
jmp
testl
fdivs
mov
xor
jb
out
inc
imul
push
sbb
pop
xor
outsb
data16
call
mov
jne
out
pop
xchg
sbb
or
ror
dec
dec
cmp
std
cmpsb
ds
xlat
ss
jge
scas
jl
stos
pop
loop
stos
cmp
loopne
jae
and
test
mov
fdivs
pop
mov
sbb
inc
and
cmc
inc
in
loop
adc
mov
mov
dec
lods
testb
xor
jp
js
xchg
cmp
push
sbb
fcompl
and
loopne
add
xorb
or
in
out
jge
scas
cmpsb
jecxz
sti
daa
addr16
imul
out
lcall
cmp
loop
enter
sarl
sub
repnz
lods
mov
push
sub
cld
sbb
sub
cmp
push
and
push
and
mov
jns
xchg
jne
int3
imul
jg
jno
xor
nop
int3
in
mov
inc
in
and
inc
dec
sbb
mov
inc
lcall
jl
mov
cltd
or
xchg
ss
and
and
fldcw
adc
sahf
cmp
call
in
push
inc
pop
out
lds
add
in
cmpsb
adc
outsb
outsb
cli
push
pop
fiadds
mov
fst
dec
aas
jge
xchg
fldcw
repnz
xchg
mov
test
arpl
in
dec
mov
insb
clc
or
or
dec
movsl
outsl
mov
cmpsl
scas
and
cmc
or
sub
push
pop
rcrl
imul
mov
xchg
mov
mov
pop
or
in
gs
or
and
xor
or
add
inc
xor
jmp
pop
mov
fnstsw
test
pop
cmp
decl
icebp
jnp
pushf
xchg
popf
ja
inc
mov
jbe
int3
scas
cmp
fistl
divl
push
pop
inc
fs
fldl
call
stc
xlat
loop,pn
or
mov
sub
push
fdivrl
shll
popa
lret
xchg
pop
or
mov
clc
enter
sbb
xchg
in
popa
addr16
jle
pop
idiv
insl
jmp
out
xchg
dec
dec
mov
pushf
ficoml
jbe
mov
iret
mov
mov
adc
movsl
cld
mov
cmp
rcrb
inc
test
add
jg
add
mov
mov
les
jl
jnp
mov
sub
sbb
je
cld
and
jmp
pop
dec
lret
iret
jae
std
mov
add
mov
mov
das
or
mov
repnz
aaa
dec
jecxz
in
dec
xor
adc
imul
movsl
xchg
ret
sub
cmpsb
pushf
jae
leave
xchg
mov
int3
outsb
fs
mov
mov
or
mov
xchg
push
add
mov
imul
xchg
mov
and
mov
add
bound
mov
cmpsb
cli
or
fwait
jnp
inc
and
ficoms
xchg
sub
jbe
push
shl
sbb
adc
cmpsl
xlat
out
and
sub
push
jmp
imul
pop
xor
rorl
out
stos
mov
or
shlb
int
jae
cmpb
ljmp
clc
xchg
outsb
mov
sahf
inc
sub
insb
sbb
test
sbb
inc
fwait
cmp
test
andb
xor
inc
pushf
sarb
outsb
xchg
ret
sub
in
icebp
and
lahf
ljmp
push
jl
inc
sub
ret
daa
orb
add
out
mov
sbb
in
lret
mov
inc
xchg
icebp
push
and
mov
pop
add
ljmp
out
fisubrl
imul
sbb
enter
add
imul
lret
mov
jge
subl
xor
fxtract
or
sub
ret
or
sub
mov
daa
push
rcll
sub
dec
cmpb
popa
inc
dec
frstor
in
cmpsl
inc
imul
fbstp
fsubs
sahf
popa
push
fildll
mov
repnz
xor
xchg
xchg
mov
pop
loop
inc
jp
and
je
lods
push
cltd
int
ss
outsb
or
xor
xchg
mov
fsts
dec
sbb
mov
xor
inc
dec
mov
popa
popa
mov
dec
dec
xchg
nop
dec
add
dec
or
jne
leave
loop
stos
insb
icebp
das
push
stc
and
hlt
clc
decl
mov
test
cmp
adc
lcall
dec
add
daa
push
mov
mov
aas
adc
fwait
push
insl
orb
movsb
dec
xor
fs
xor
and
xor
lods
and
test
jle
rclb
xchg
cmp
es
push
insl
jb
mov
aas
fadd
cld
ljmp
adc
xchg
sbb
cli
jno
stos
cmp
push
pop
shlb
cwtl
call
fadd
mov
cmp
mov
xor
cli
or
cmp
lahf
insb
in
jb
jmp
xor
xlat
push
outsb
pop
sub
lea
mov
clc
imull
out
mov
add
mov
aas
in
and
gs
lods
and
outsb
push
mov
scas
cmp
pop
jmp
sbb
mov
xor
mov
add
jle
xchg
add
je
mov
cmpsb
imul
fcmovnu
jns
mov
lea
cltd
ljmp
je
jle
repz
incb
xchg
sbb
or
jbe
xchg
ja
sub
lock
sbb
add
cmp
int3
outsl
aam
mov
ror
sti
or
sahf
test
and
out
mov
dec
pop
stos
rcl
test
out
lcall
sbb
and
jl
jmp
jmp
cmpsl
jmp
push
call
jmp
mov
mov
xchg
insl
dec
or
movb
inc
dec
inc
outsl
stc
je
jb
data16
in
mov
push
subb
mov
pop
mov
sbb
or
loope
and
jb
mov
fs
int
or
xchg
add
ficompl
out
mov
mov
lea
xlat
sbb
sbb
mov
xor
pop
xchg
xor
pop
in
jmp
stos
pop
push
pushf
xchg
aaa
hlt
aad
jns
jle
fnstsw
lahf
scas
daa
pop
dec
leave
jecxz
sub
xchg
sahf
xor
pop
dec
rorb
testb
sbb
add
mov
lret
sbb
rcr
mov
xor
test
mov
repz
sbb
jg
stc
xchg
xor
sbb
jae
sub
push
push
scas
or
and
enter
nop
dec
outsl
fnstcw
cmp
push
adc
shr
and
dec
push
adc
sbb
push
mov
mov
out
movsl
pushf
lahf
mov
outsl
adc
sub
add
push
sahf
sbb
jbe
mov
lret
and
mov
gs
and
lcall
hlt
jge
jnp
rolb
and
xor
cmp
and
test
push
pop
sbb
inc
fmull
mov
jle
inc
cmpsl
mov
fld
xchg
adc
jp
das
push
pop
fdivs
pop
imul
push
arpl
es
adc
fisubs
lret
mov
in
or
adcl
pop
mov
xor
pop
add
jg
xor
mov
shlb
jno
adc
mov
push
pop
int3
mov
and
pop
stc
cmpsl
adc
add
jle
das
popf
jnp
arpl
mov
into
andl
test
leave
test
test
test
pusha
xchg
fucom
dec
sub
mov
inc
fldt
divb
sbb
pop
mov
mov
out
daa
mov
jbe
mov
mov
xor
mov
stos
std
out
jae
pop
push
or
add
add
repz
adc
aam
fisubs
mov
add
cmp
cli
xlat
popa
sbb
mov
mov
adc
paddd
cmp
jo
and
enter
ja
in
or
mov
and
pop
adc
xor
add
fnstcw
mov
mov
push
mov
iret
add
adc
xchg
das
in
test
dec
inc
pop
push
addr16
dec
sbb
scas
mov
dec
push
cmp
sbb
push
ror
imul
push
push
pop
adc
or
ror
movsl
mov
js
into
test
iret
mov
pop
test
xor
xor
or
sub
pop
std
sub
cli
jne
scas
nop
pop
ja
xor
popf
jae
lret
jo
inc
inc
mov
jge
dec
add
or
dec
ret
idiv
jb
fadds
add
jecxz
push
jl
fcompl
mov
jp
sahf
repnz
loopne
cwtl
adc
fmuls
mov
pop
mov
push
xor
movsl
dec
mov
lods
cmp
outsl
xor
ror
fisubrs
arpl
xchg
mov
mov
cld
sti
or
mov
sub
jae
sub
aaa
imul
xchg
imulb
mov
and
jnp
dec
inc
orb
or
mov
clc
adc
dec
or
add
stc
fdiv
add
push
adc
in
mov
cld
vphadduwq
lahf
mov
hlt
shr
mov
jb
xchg
popa
and
and
xlat
xchg
std
lds
inc
movsl
dec
es
sbb
ljmp
sbb
xchg
mov
or
add
pop
fisubrs
fistl
in
inc
ss
jl
xor
in
cld
dec
or
xor
xor
in
sbb
fwait
mov
pop
ds
mov
div
test
cwtl
movsl
icebp
mov
mov
jbe
inc
xor
mov
adc
call
cli
out
pop
sbb
inc
enter
insl
pop
fbstp
or
mov
enter
repnz
pop
ja
jecxz
mov
inc
out
sti
jb
daa
mov
sub
dec
pop
fwait
jmp
jge
xor
lret
sbb
das
dec
pushf
cmpb
lret
std
xor
mov
push
jmp
rolb
repnz
dec
xchg
loopne
sub
mov
inc
inc
mov
cld
gs
ljmp
adc
mov
in
imul
movsl
mov
sbb
inc
cwtl
idivl
ss
sub
bound
add
push
stc
dec
cmp
shrb
faddl
cmp
mov
xchg
ja
pusha
cmp
js
jl
or
popf
dec
xchg
mov
ret
arpl
add
je
xchg
push
orb
cs
das
xchg
shll
dec
mov
popa
push
jbe
stos
dec
lret
and
jae
mov
xchg
sbb
sbb
push
xchg
call
mov
mov
fiaddl
loope
sub
stos
push
inc
sub
sbb
aaa
adc
cmp
and
pop
repz
sub
sbb
fstpt
pushf
es
popa
out
fdivrp
sbb
pop
fstl
pop
pop
push
and
mov
sbb
cmpsl
je
mov
fcmovb
je
jno
js
dec
cmpsb
jo
test
mov
push
mov
inc
scas
loope
jecxz
push
lods
jae
popa
and
mov
jl
pop
insl
and
outsw
jbe
xchg
fadds
leave
aaa
popa
xchg
or
or
push
rclb
push
sub
xor
mov
data16
inc
sti
mov
xor
push
mov
aas
cs
stos
or
mov
mov
mov
adc
pop
sahf
xlat
sub
xor
aam
mov
jge
xor
mov
jle
jb
scas
lahf
lea
ss
cwtl
js
mov
cmp
or
cmc
jo
leave
loopne
push
outsl
xorb
jge
lea
cmp
inc
pop
imul
sarb
fucomi
and
je
fcomi
clc
das
cltd
xorl
popa
data16
xchg
pusha
mov
test
jg
mov
pusha
jo
mov
mov
aad
mov
pop
nop
or
mov
pop
xor
lock
mov
add
dec
mov
push
xor
pusha
or
sub
stc
fcmovb
dec
test
flds
sbbb
mov
mov
pusha
mov
testb
dec
fsubr
and
or
adc
mov
push
das
xor
faddl
or
xor
fwait
out
or
lock
mov
sbb
mov
hlt
and
inc
scas
daa
adc
mov
test
ljmp
nop
jecxz
dec
or
mov
clc
jne
fimuls
cs
sahf
cmp
adc
hlt
lcall
int3
cs
jne
ds
loop
mov
mov
cmp
cltd
insl
pop
incl
jnp
ret
pop
popf
cmp
dec
xchg
pop
shll
movsl
pop
sbb
pop
sub
xor
or
in
pop
pushf
push
mov
add
jo
movsb
mov
sar
mov
mov
mov
pop
std
lahf
xlat
outsl
mov
mov
mov
xor
into
pop
sbb
dec
adc
adc
loope
or
cmp
xchg
mov
jle
sub
xchg
movl
push
mov
stos
in
in
cmpsb
js
cmp
aas
push
jge
insl
cmp
out
xchg
xchg
mov
das
jno
fmull
add
mul
popa
sub
rol
lds
push
pushf
outsb
sub
push
and
jecxz
mulb
imul
test
mov
out
sbb
jno
or
mov
adc
imul
cmp
sbb
cli
insl
inc
cmp
test
daa
cwtl
je
aad
cltd
fsubrs
adcl
adc
and
lods
mov
cld
lods
xchg
je
mov
scas
jmp
dec
adc
and
mov
xchg
rcll
sub
stos
leave
cltd
ds
pop
push
hlt
dec
dec
dec
scas
cld
inc
push
adc
bt
leave
mov
js
bound
xchg
fdivl
das
dec
xor
test
jl
mov
mov
sub
lea
hlt
int
jmp
add
xchg
pop
sbb
xor
jg
repnz
cmp
dec
dec
lock
sbb
pop
cwtl
xchg
iret
pop
sub
pop
push
and
xor
loop
sahf
addl
jnp
fdivrs
inc
pop
pop
repnz
add
add
mov
faddl
dec
or
mov
orl
addr16
mov
in
ss
call
es
clc
test
fsubs
add
loop
xchg
in
pop
push
pop
dec
mov
or
popa
jno
pusha
loop
mov
lcall
jle
in
xchg
mov
push
adc
cmp
popf
cmp
int3
pushf
xor
mov
lock
jp
dec
dec
xlat
mov
loope
in
mov
sbb
adc
faddl
jbe
xchg
popa
mov
push
test
xchg
pop
jg
add
push
and
arpl
ja
pushl
cmp
pop
out
or
popa
xchg
jbe
mov
and
sbb
dec
jg
and
sahf
mov
mov
inc
lds
mov
cmp
cmpsl
adc
daa
out
call
push
inc
pop
nop
decb
gs
sub
loop
shrb
xlat
adc
push
push
insb
mov
bound
mov
sti
mov
cmp
dec
imul
jb
inc
int
out
pushf
pushf
push
mov
fildll
mov
cmp
xlat
rorl
mov
rol
mov
xchg
mov
jmp
mov
add
lret
mov
cmp
test
imul
sub
inc
jp
in
mov
push
outsl
ss
arpl
push
movsl
xchg
pop
fnstsw
lea
add
xchg
adc
in
out
or
lea
adc
aas
aas
mov
out
int
pop
mov
mov
xchg
mov
xlat
int
pop
push
xchg
test
adc
mov
xor
mov
xchg
sbb
sub
mov
repz
iret
and
sti
inc
out
mov
out
addb
jae
dec
or
sbb
mov
fildll
in
add
repz
push
aam
cmpsb
int
mov
roll
mov
xchg
push
aaa
jno
outsl
cld
popl
fisttpl
enter
daa
push
mov
insb
aad
loop
aad
cmp
and
fisttps
fsub
sub
popf
dec
in
jae
js
int
loopne
fiaddl
mov
add
in
pushf
mov
xor
pop
jge
jb
add
dec
out
xchg
sbb
sbb
and
pushaw
mov
das
inc
sbb
xor
mov
mov
ja
or
inc
gs
out
les
and
or
push
adc
dec
push
fnstcw
out
cltd
stos
sbb
push
lods
inc
pop
fidivl
dec
or
std
adc
shrl
inc
lcall
jmp
mov
scas
sahf
les
add
lock
and
dec
test
insb
std
add
fists
sbb
jne
xchg
cmp
inc
roll
orl
inc
call
mov
cmp
sub
out
movsl
sub
test
imulb
dec
dec
sub
movsb
mov
push
mov
lcall
mov
or
sub
arpl
das
pop
test
subl
jno
fbld
jne
stc
sub
fdiv
loop
lret
and
mul
pushf
test
mov
xor
mov
and
xchg
jge
inc
pop
stos
push
fadds
aam
sbb
cld
push
mov
jecxz
fsubl
cmp
sahf
lock
test
cmp
sbb
pop
dec
dec
test
hlt
fwait
xor
jl
fwait
mov
clc
jg
xchg
or
push
das
push
nop
jmp
shll
mov
in
inc
and
adc
pop
and
xchg
xchg
cmp
cmp
mov
cmpsl
add
mov
sahf
clc
mul
loopne
in
sbb
rcrb
xor
fstpt
inc
in
or
xchg
pushf
outsb
stos
pop
xor
loop
frstor
or
lahf
or
jae
xchg
imul
in
std
pushf
lcall
fildll
fisttpl
xor
mov
or
sub
push
ds
jmp
ret
lret
into
cld
in
pop
and
mov
shll
dec
cmp
pushf
cmp
fwait
jbe
adc
popf
sbb
push
fsubs
mov
sbb
sbb
in
xor
clc
filds
icebp
sbb
test
jmp
mov
popa
or
sahf
sbb
mov
pop
scas
pop
sbb
das
ljmp
into
cmp
test
sbb
cmp
adc
pop
not
std
adc
xchg
xchg
adc
push
jns
push
bound
sbb
add
fwait
rcl
xchg
jp
arpl
push
mov
add
ficompl
pop
or
in
push
test
cltd
xchg
push
push
jo
dec
orl
je
outsl
cmp
pop
push
pop
aas
call
daa
and
scas
stos
int3
int3
repnz
mov
es
leave
or
enter
fwait
push
mov
xor
mov
jg
add
fisubl
dec
inc
cmpsb
and
cmpsl
adc
in
mov
jo,pt
cmp
xchg
cmp
fwait
test
ljmp
add
scas
mov
and
or
cmp
insb
inc
pop
call
out
mov
inc
adc
dec
add
scas
xchg
loop
pop
fwait
ret
inc
xlat
sbb
fdivr
nop
mov
jns
mov
pop
cmp
sub
fucomip
add
repnz
pop
stos
jg
scas
sub
jle
ret
jnp
out
jl
xor
push
shll
xchg
in
imul
dec
test
fsubrs
sarl
jbe
jge
push
das
mov
and
xlat
enter
imul
cmp
pop
insb
scas
fstpl
inc
dec
mov
mov
pushf
mov
hlt
lret
lods
or
pushf
pop
jl
inc
sbb
jo
scas
popa
cmp
mov
cmpsl
jle,pn
sti
mov
ffreep
test
and
pushf
movsb
sbb
clc
lret
out
inc
inc
sahf
rolb
adc
xchg
js
xlat
xchg
js
es
stos
cmpsl
loope
sbb
mov
push
sbb
stos
std
filds
and
sub
xchg
jge
out
mov
cli
insl
popf
daa
ret
and
cmp
mov
jbe
and
sub
pop
pop
dec
je
or
aas
add
stc
insl
mov
cmp
loope
adc
adc
mov
loop
loopne
lret
inc
outsl
out
dec
add
xor
rorl
and
mov
fs
pop
lods
dec
out
movsl
jecxz
mov
inc
dec
ss
push
mov
iret
outsl
cld
std
aad
fnsetpm(287
sub
mov
aad
imull
xor
mov
mov
or
lea
cmpsl
cmp
mov
add
xchg
push
adc
cmp
jge
sbb
aas
dec
jbe
lret
bound
sbb
push
test
lret
and
mov
dec
mov
pop
adc
sbb
fisubrs
jnp
in
cli
xor
out
mov
xchg
adc
rcr
mov
movsb
push
sub
mov
leave
lahf
cmc
jbe
mov
adc
push
clc
add
into
mov
aad
mov
aad
lds
int3
mov
shlb
xchg
fiaddl
gs
sub
jle
lds
mov
inc
pop
sub
xchg
gs
cmp
jecxz
iretw
loope
cmp
xor
in
adc
mov
jbe
mov
cs
jo
popf
aas
cmp
push
mov
cmp
mov
aas
jmp
out
mov
or
pop
or
lock
adc
jnp
dec
testl
scas
mov
imul
cwtl
iret
mov
pop
or
and
mov
push
aad
mov
mov
stc
cli
or
inc
mov
je
sbb
scas
dec
mov
sahf
mov
sarl
jmp
insb
lcall
jge
fwait
repz
push
jae
leave
pop
aaa
mov
ret
into
pop
xchg
pop
gs
scas
pop
sti
cmp
jge
mov
cmpsb
inc
repz
pop
mov
sub
or
push
inc
mov
mov
inc
lds
push
inc
aad
mov
or
push
jle
cmp
sbb
add
mov
or
xor
hlt
out
mov
orl
pop
xlat
mov
rol
clc
jp
mov
jge
cmp
cmp
jo
mov
outsb
fcmovnb
out
jbe
cmp
imul
push
sahf
mov
adc
loope
lcall
test
icebp
sbb
sbb
lea
add
mov
sbb
stc
stos
aam
dec
xchg
fwait
push
jmp
repz
cmp
and
inc
and
fadds
pusha
dec
push
mov
outsl
jnp
inc
sbb
and
sub
lock
ss
lahf
cmp
mov
cmpsb
mov
pop
fs
dec
jl
dec
lea
sub
insl
mov
fnstenv
push
xchg
int
fisttpll
pop
and
pop
aad
movl
sub
cmpsb
scas
mov
xor
jecxz
test
mov
push
adc
pop
in
nop
aad
in
pop
fdiv
sti
cmp
xor
lret
rcrb
repz
push
adc
jmp
sub
mov
addl
cltd
cmpsl
push
jl
test
pop
add
popf
jno
outsl
and
shl
inc
xor
std
jmp
daa
je
add
push
or
aaa
test
push
xchg
cltd
popa
mov
sub
insb
jns
jbe
sub
add
push
jno
pop
outsl
imull
cmp
cmp
flds
cmp
sub
nop
mov
cmpb
in
mov
pop
leave
pop
xchg
stos
xor
mov
xor
or
xchg
mov
rorb
inc
and
pop
pop
xchg
jns
add
jl
dec
cli
push
rol
jp
ja
cld
ljmp
inc
pop
mov
bound
mov
inc
push
insb
loope
pop
mov
out
xchg
lds
cmp
movsb
mov
fisubrs
and
mov
jnp
xor
dec
and
daa
daa
pop
pop
push
popa
aad
fsubl
call
std
inc
mulb
mov
mov
lds
aas
aad
roll
or
jmp
insl
lods
cmp
mov
dec
mov
out
push
addb
inc
loope
sar
xchg
test
xchg
jg
mov
int
mov
fsubs
sub
mov
xchg
cmp
ffreep
dec
ja
clc
adc
xchg
ljmp
daa
adcb
lds
add
jecxz
shl
xor
fiaddl
dec
adc
push
mov
shrl
lcall
fwait
push
adc
add
adc
add
mov
jmp
cli
cmp
ret
sub
rclb
ret
push
xchg
cmpsl
inc
or
xchg
in
and
shrb
xor
push
scas
mov
or
jns
arpl
cmc
mov
mov
dec
inc
push
std
aad
push
jp
out
cmp
ficoml
mov
xchg
fmuls
cltd
out
imul
push
ret
outsb
imul
xor
xlat
les
enter
sbb
xchg
cltd
mov
mov
imull
dec
rcrl
iret
fbld
insl
test
fwait
pop
ret
jge
sub
xor
in
stos
or
or
pop
xorb
xchg
pop
jmp
mov
psrad
mov
orl
pop
call
stos
ret
push
xor
sarb
cmp
mov
cld
stos
add
push
repnz
rol
mov
repnz
out
das
xchg
lea
adc
mov
xor
and
imul
dec
jnp
fwait
and
stc
jo
mov
mov
sbb
pop
or
lret
inc
inc
mov
mov
lods
sub
cltd
rcr
pop
jmp
movsb
jle
subl
icebp
ljmp
jb
test
jl
dec
test
mov
pusha
sbb
xor
adc
shrl
xchg
xchg
xor
sub
push
repnz
bound
adc
and
std
andb
lds
jns
fs
movsb
imul
xor
mov
fmul
cmp
pop
xchg
sub
or
mov
call
cmp
je
lods
inc
xchg
dec
shrd
in
ss
sub
push
daa
bound
xor
fildll
jg
fcmovnu
cli
loopne
push
mov
movsl
je
cmp
mov
aas
pop
pusha
xchg
adc
cmp
loope
jne
fiaddl
inc
ljmp
loopne
pop
lock
lds
cmp
fstpt
and
cmc
lea
jb
cltd
ss
mov
cmc
roll
add
push
in
adc
xchg
lods
movb
cmc
pop
xchg
lcall
enter
inc
call
jp
xor
xchg
aad
insl
subb
lock
lret
xchg
mov
fmuls
ss
fs
das
pop
and
shlb
in
rcll
enter
push
cmp
repz
scas
movsl
pop
pop
xchg
push
and
or
lret
test
adc
popf
push
loope
jb
hlt
ljmp
sahf
dec
add
scas
test
mov
clc
out
cmp
dec
lret
dec
stc
cwtl
mov
lds
and
push
mov
push
xor
lock
sub
rcrb
aas
push
pop
lock
mov
and
daa
push
int
mov
mov
sub
or
sbb
call
adc
adc
out
icebp
push
popf
int
push
push
aas
jle
xor
jno
rcrl
jno
mov
inc
dec
sub
jbe
repz
pop
or
outsb
mov
stos
sti
loope
stc
cmp
jbe
or
push
rolb
sub
scas
mov
es
rcrb
pop
insl
mov
jmp
arpl
ror
mov
adc
mov
or
pop
push
icebp
cmp
decb
inc
out
ljmp
movsb
dec
push
mov
arpl
mov
push
jmp
sti
aam
xchg
fs
shlb
in
dec
bswap
xchg
inc
inc
dec
sub
push
pop
add
cmovge
mov
enter
test
pop
mov
neg
and
sar
mov
dec
sub
cmpsb
testb
mov
andb
ljmp
repnz
and
mov
xchg
test
loope
add
stos
cmp
pop
repz
daa
jle
nop
insl
mov
popa
cmp
insl
insb
xor
sarl
cld
ljmp
fnsave
adc
fdivp
jmp
in
push
aad
mov
roll
xchg
jns
inc
ss
addl
pop
repnz
lahf
ret
xchg
push
push
in
in
sahf
cld
mov
cs
cli
pusha
call
pop
adc
addb
loopne
outsl
dec
and
test
jns
std
mov
sbb
fadds
xchg
sub
mov
cmp
lcall
add
add
mov
sub
inc
xor
fisubrl
loope
dec
ss
fs
jp
mov
sbb
ret
mov
and
add
inc
push
jl
clc
mul
jecxz
push
mov
sub
js
or
mov
mov
mov
xlat
gs
push
addr16
sarl
push
xor
movsb
jp
push
lcall
enter
cmp
push
xchg
dec
mov
dec
jbe
dec
jne
xchg
cmp
cmp
imul
sbb
jbe
dec
mov
outsl
mov
add
pop
loop
incb
add
out
lret
popf
inc
and
jmp
inc
imul
daa
es
and
fcoms
lret
movsb
pop
mov
cs
sti
xor
test
sbb
pop
insb
sub
cmp
dec
je
add
movsb
pusha
fidivs
iret
aas
push
xchg
push
xor
ret
or
push
mov
test
push
and
mov
mov
adc
bound
addr16
mov
push
jmp
gs
sub
cltd
out
cmp
jl
jg
rcrb
mov
fcomi
mov
out
pop
rcll
lea
or
arpl
sub
pop
add
clc
mov
mov
into
mov
sbb
jl
cmp
jno
dec
push
data16
cmp
mov
fsubp
xchg
adc
aam
scas
testl
and
or
pop
jnp
rclb
mov
ss
xchg
test
arpl
cmpsb
dec
lds
mov
xlat
or
fdivl
dec
stos
scas
cmp
call
rcrl
clc
push
pop
adc
pop
lock
fs
ja
cmp
hlt
adc
dec
icebp
or
leave
push
adc
mov
pop
popf
mov
sbb
aad
xchg
cmp
stc
jge
mov
xor
fs
xor
cli
gs
movsb
outsb
dec
jnp
hlt
imul
adc
xchg
sti
ret
or
mov
sub
add
xor
cmp
imul
lret
je
lcall
inc
push
out
adc
sub
pusha
icebp
cld
push
adcb
add
insb
pushf
insb
xchg
xchg
inc
aad
inc
loope
pop
stc
adc
mov
push
push
lea
stc
aas
mov
aas
inc
rolb
jno
fdivl
popl
mov
lret
sbb
pop
jae
clc
adc
jnp
cli
pop
or
loopne
mov
cld
jns
jne
mov
pushf
jecxz
mov
mov
cli
jno
xchg
mov
loop
daa
and
inc
xchg
ja
movl
mov
popf
mov
sti
jg
imul
pop
jno
fistpll
sbb
mov
add
push
lret
ja
sbb
xchg
pop
stc
fcmovu
jae
xchg
sub
mov
repz
pop
push
sub
dec
ds
push
push
out
notl
push
sub
jnp
cld
iret
cli
out
lahf
into
adc
out
nop
adc
ljmp
addr16
mov
fisttpl
sub
and
push
dec
cmpb
mov
jo
dec
sbb
jmp
leave
dec
int
iret
fmull
mov
jb
cmp
pop
push
mov
mov
pop
push
xor
pop
xchg
mov
addb
movsl
test
test
rorl
push
xchg
push
aas
iret
arpl
push
loopne
xchg
fadd
adc
jecxz
cmp
push
fsts
insl
test
test
xchg
cs
push
lahf
xor
push
rclb
mov
and
mov
fcoms
sbb
incl
sbb
jae
add
sbb
inc
ss
adc
scas
pusha
shl
xor
sub
dec
xchg
pop
test
psubsw
mov
mov
data16
or
rcl
push
xchg
int3
aad
jnp
xor
ljmp
inc
mov
aas
fdivrl
mov
mov
jmp
xor
jbe
fstps
mov
mov
and
popf
cmp
mov
inc
push
jp
aam
jmp
inc
loop
dec
cmp
mov
or
mov
mov
xchg
call
jno
je
inc
cli
pop
add
jmp
lcall
and
mov
inc
mov
xchg
jno
fwait
cmp
cmpsl
inc
sub
psubd
mov
jecxz
mov
jl
sub
shll
xor
lret
or
sub
pop
outsb
jae
les
rclb
sub
outsb
je
nop
orl
cmp
fiadds
pop
add
push
ret
sub
in
mov
imul
icebp
sarl
jae
stos
jp
in
sub
mov
sbb
push
popa
inc
les
cwtl
push
mov
pop
lock
jecxz
lods
loopne
mov
pop
pop
movsb
pop
lcall
mov
adc
out
test
push
addr16
mov
out
test
mov
jp
and
xchg
enter
add
sub
jb
popa
lret
xchg
mull
ror
mov
and
aaa
sbb
mov
xorb
jg
test
mov
rolb
cmc
fcomp
jl
lods
xchg
mov
hlt
popw
out
mov
jb
xchg
repz
cmpb
rcrb
sub
push
inc
jnp
dec
ljmp
cmp
adc
jb
or
loopne
inc
sbb
add
push
loope
mov
movsl
std
inc
xchg
xor
mov
xor
sbb
dec
push
xor
mov
outsl
pop
out
ja
jle
ror
cs
lret
das
scas
out
into
ror
in
sbb
add
sbb
xor
dec
aas
mov
lcall
push
ret
add
icebp
cmc
scas
into
roll
jne
fs
push
iret
pushf
and
cli
loop
jg
mov
pop
aaa
add
fdivs
xchg
sarb
repz
lds
das
and
movsb
fimull
pop
push
rcl
insb
lock
aaa
out
nop
imul
cltd
popa
or
mov
ror
or
inc
popa
out
and
iret
addl
ud2
clc
mov
xchg
test
mov
or
push
adc
pop
xor
pop
pop
call
cltd
in
lods
or
mov
cmp
fdivrs
call
or
scas
and
imul
aaa
dec
inc
ds
mov
fcoms
and
sub
add
pusha
sbb
stos
shlb
inc
xchg
lock
loopne
adcl
mov
push
fwait
lahf
and
and
inc
mov
divb
insb
bound
pop
pop
jb
mov
lods
or
lret
adc
mov
lea
jg
mov
push
nop
push
add
cmpsb
pop
lcall
flds
inc
or
bnd
mov
inc
rorl
pushl
std
cli
sti
movsl
movsl
std
fcoml
out
and
dec
icebp
insb
cmp
daa
inc
pop
rclb
lods
push
orl
pushf
add
negl
push
sub
add
sub
push
es
mov
jecxz
mov
popf
inc
stos
iret
es
adc
scas
adc
xchg
xchg
xlat
add
add
jmp
pop
rclb
mov
test
mov
cltd
mov
jnp
inc
test
roll
adc
push
repz
mov
mov
mov
cld
push
loopne
ss
jbe
stos
sahf
test
aas
call
push
push
ret
mov
sub
rcl
lea
out
int
leave
adc
sub
fistpll
xchg
ja
shlb
leave
scas
sar
add
xchg
cltd
sbb
test
pop
inc
fdivrl
notb
and
sub
cmp
stc
jl,pt
cmpsb
jmp
add
int
cmc
xchg
inc
mov
xchg
test
popa
cltd
fisttps
push
pop
fistpll
mov
ret
xor
fmuls
xchg
adc
adc
loope
pop
ret
sbb
je
fistl
jne
leave
les
jecxz
xchg
fdivs
pop
addb
jg
lods
xchg
adc
sahf
dec
icebp
jp
pop
jb
push
add
or
sbb
lret
call
ja
lea
les
in
sbb
mov
fidivl
imul
mov
test
fisubs
sbb
jg
adc
xor
xchg
or
movsl
std
dec
in
mov
adc
call
and
mov
mov
movsb
bound
dec
stc
faddl
or
jo
scas
adc
add
dec
cltd
pop
lea
or
xor
cltd
movsb
mov
mov
mov
jns
bound
hlt
call
jnp
inc
cs
dec
add
or
fbstp
jnp
and
dec
jno
mov
aam
inc
out
jle
push
sahf
movsb
xor
push
outsb
aaa
arpl
sbb
outsb
je
mov
ds
push
mov
in
popf
cmc
aad
jmp
out
call
or
dec
lock
pop
jno
loope
lcall
mov
sub
je
les
and
mov
call
push
pop
jns
fisubrl
mov
scas
aam
dec
fsubrl
mov
dec
in
mov
mov
mov
dec
into
test
data16
cmp
pusha
loopne
sub
xchg
xor
or
jecxz
jg
aas
dec
arpl
add
in
cmp
outsb
ss
movsb
inc
xor
bound
xlat
cmp
push
dec
push
xor
int3
stos
or
aaa
shll
clc
jno
rcll
fnstcw
and
jp
add
push
xor
and
push
push
incl
pop
inc
addr16
pop
xor
pop
jb
cmp
aaa
lods
sub
add
psubd
mov
lret
jo
nop
call
inc
cmpsl
inc
mov
mov
daa
mov
mov
jnp
cmpsb
push
data16
and
sub
pushf
sub
sbb
cs
into
push
div
mov
negl
dec
pop
push
shl
mov
sbb
inc
sbb
cltd
pop
rorb
clc
lods
or
jnp
out
and
cmc
sbb
add
fidivrs
outsb
jmp
inc
inc
lret
pop
xlat
popf
insl
cmc
nop
xor
sti
inc
enter
adc
sarl
imul
xchg
fucomp
push
push
test
js
inc
mov
cmpsb
enter
scas
dec
cmp
repz
and
es
inc
cmp
cli
mov
mov
ljmp
mov
push
jp
ja
cmc
mov
mov
addr16
jne
xchg
jecxz
in
mov
and
or
add
imul
or
mov
mov
es
mov
lods
adc
bound
lock
xor
and
js
jecxz
pop
cs
mov
imul
adc
ja
cs
sbb
stos
stos
cmp
dec
and
xchg
adc
dec
stc
xchg
jg
jecxz
xor
jmp
xacquire
idivb
sub
iret
cmp
mov
mov
pop
and
or
insb
test
out
in
pop
push
or
fld
and
int3
clc
lahf
xor
ret
daa
jge
notl
inc
push
mov
sbb
fadd
dec
mov
std
pop
adc
jb
bound
push
das
stc
adc
push
cmp
xor
xchg
xlat
inc
lahf
shlb
adc
jnp
push
add
sbbl
mov
aaa
mov
jb
add
aad
sbb
call
mov
jnp
lds
arpl
xchg
add
jg
roll
jno
push
xchg
pusha
pop
jnp
mov
sbb
xchg
xchg
mov
add
sbb
or
inc
cld
outsb
imul
dec
aad
inc
mov
cmp
leave
sbb
mov
jns
pop
add
into
xchg
inc
dec
std
jbe
icebp
and
add
in
cmp
das
rolb
sar
lret
popa
fisttpl
fimull
ss
adc
or
imul
cmp
movsl
push
cmpsl
nop
and
xchg
movsb
push
fcomip
inc
adc
mov
loopne
test
adc
js
lret
rolb
outsb
inc
pop
and
mov
mov
mov
mov
iret
outsb
xchg
or
jg
adc
sbb
addl
test
mov
daa
inc
cmp
pop
in
jo
ja
push
cli
popf
jmp
jb
sbb
sub
xchg
nop
enter
jmp
repnz
repnz
xchg
mov
xor
cmpsl
les
xor
push
loope
mov
lret
gs
lods
sub
fstl
hlt
out
dec
test
int
or
fxtract
jae
mov
test
fsubrs
aaa
cmp
stc
jne
jne
into
dec
nop
adc
ret
pop
lahf
dec
push
cmp
xor
sbb
lods
push
xchg
movsb
add
push
lds
fs
rorb
hlt
mov
jne
in
mov
lret
das
mov
mov
in
jmp
testl
add
mov
iret
ret
outsb
xor
xchg
lcall
inc
insl
test
mov
cmp
stos
cmp
pop
addr16
mov
mov
iret
push
inc
xchg
mov
jnp
sbb
addr16
mov
insl
lret
cld
popf
inc
cld
dec
jbe
popl
add
sahf
cmp
push
fcoml
dec
jnp
pop
add
push
jb
fsubl
jl
pop
or
repnz
stos
sbb
lea
aad
mov
pop
push
adc
test
xchg
mov
outsl
or
sub
stos
lahf
pop
adc
out
xor
loope
cmpsl
mov
fwait
mov
mov
cmp
pusha
jne
jmp
insb
xchg
mov
hlt
pop
int3
push
sahf
aaa
ljmp
jnp
in
add
test
sub
rcrb
dec
shlb
cmp
imul
mov
mov
mov
not
notb
push
jne
jg
or
pop
sub
enter
stos
arpl
or
adc
cs
ja
ja
or
dec
pop
xchg
pop
lret
cmp
cli
pusha
fsts
or
in
test
mov
cmp
and
dec
push
cmc
pop
push
sub
add
cmp
mov
sbb
je
hlt
pop
jg
push
loope
mov
jno
jne
shll
sub
sbb
fiaddl
rcrl
adc
pop
fidivs
sub
sti
fiaddl
dec
fisubrl
or
mov
sub
cmp
das
sbb
xchg
test
xorb
movsl
sbb
cli
dec
popa
cmp
les
push
cmc
lahf
mov
lret
fnstcw
mov
mov
fcmovne
aas
sub
inc
jp
xchg
out
add
das
jb
and
cs
hlt
imul
movl
aad
int3
loop
or
mov
mov
and
movsl
testb
ss
data16
loop
imul
and
add
outsb
scas
enter
jle
sub
pop
xor
cmp
sub
mov
clc
dec
pop
arpl
jnp
mov
xor
lds
fbld
mov
aam
pop
or
push
in
push
inc
push
std
popa
lods
das
iret
and
ret
loope
mov
imul
popa
pcmpeqb
mov
xlat
loope
sbb
lret
fidivrl
jnp
jns
inc
scas
push
call
outsl
jbe
xchg
cmpsb
mov
push
mov
inc
sahf
es
xor
adc
es
xlat
arpl
push
add
inc
cmp
and
cmpsl
push
lret
and
sbb
and
pop
push
xor
xor
sarb
push
ss
sub
iret
xlat
fildl
mov
stc
mov
push
lock
div
mov
adc
dec
das
clc
ja
out
lret
inc
xchg
jns
lret
call
or
arpl
xor
iret
movsb
mov
sub
gs
cmpsb
jno
xchg
dec
iret
xchg
call
xchg
sbb
jno
mov
or
iret
inc
leave
cmpsl
fadds
outsl
out
add
cmp
mov
xor
mov
mov
in
cmp
leave
xor
notl
sbb
pushf
xchg
mov
push
mov
xor
and
pop
roll
mov
ds
mov
adc
pop
xlat
add
pop
xchg
jl
inc
aaa
xchg
ljmp
push
mov
gs
xchg
xor
loope
or
pop
divl
std
or
rcrl
dec
sub
mov
jno
pop
push
mov
pop
xchg
mov
push
xor
stc
test
decb
ret
ja
filds
pop
and
mov
adc
imul
out
lods
and
je
jg
fs
or
loope
jg
or
add
xchg
and
push
ja
orb
cmpsb
cwtl
imul
pop
add
jge
pop
pmullw
insb
push
lcall
add
push
aam
pop
sub
xor
lea
insb
les
daa
mov
jecxz
cmpsb
inc
mov
inc
xor
popa
leave
mov
adc
hlt
dec
loope
or
cmp
push
pop
push
and
negb
jnp
roll
mov
ret
lods
jno
mov
mov
push
sti
pop
mov
lea
out
insl
push
jmp
pop
push
xor
inc
adc
ret
outsb
sahf
jl
aas
loop
into
in
dec
scas
inc
xlat
mov
inc
mov
dec
pop
ljmp
es
cmp
clc
mov
mov
lods
and
add
outsb
mov
aaa
sub
inc
inc
jg
pop
mov
dec
or
fdivrs
scas
or
mov
xchg
push
pop
call
and
mov
cli
xor
repz
xor
addr16
xor
jp
pop
mov
inc
xor
icebp
dec
lcall
stc
push
xchg
add
into
nop
mov
pop
fstpt
and
add
jl
fdiv
and
repz
mov
stos
xor
xchg
ret
or
xor
jne
bound
inc
jp
mov
cmp
pop
test
xor
cmp
sub
cltd
pop
push
add
mov
push
ret
pop
adc
push
stc
pop
les
xor
cmp
inc
sbb
ret
mov
fistps
jge
popl
sbb
sub
rolb
sub
pop
push
pop
loop
loopne
lret
adc
mov
ficomps
popf
cmp
mov
and
push
gs
pop
in
adc
push
fists
scas
xchg
out
scas
add
sub
push
rcrl
inc
jecxz
into
mov
adc
call
mov
jg
sbb
inc
scas
cld
sbb
jmp
in
out
xor
push
out
xchg
lods
adc
push
dec
jb
jae
rclb
push
mov
jnp
hlt
sarb
jg
mov
cmp
push
sbb
jo
inc
push
xor
adc
fcmovnb
mov
inc
test
push
sti
dec
pop
ds
std
loopne
test
insl
loope
xor
sbb
cli
sbb
mov
dec
mov
pop
or
push
fs
sbb
sbb
or
xchg
fistpl
xchg
pop
mov
and
jg
fxsave
sbb
adc
pop
or
push
mov
jecxz
pop
add
or
repnz
lea
pop
push
and
lcall
cli
into
lahf
loop
test
jae
les
fldenv
into
fisubl
insl
mov
pusha
mov
int
in
pop
lock
push
xor
push
mov
xchg
sub
or
dec
cmp
mov
lods
clc
pop
add
add
adc
xlat
xchg
pop
jle
mov
push
sbb
jb
lret
popf
pop
jne
flds
je
mov
dec
in
xor
push
jg
sar
mov
xor
mov
add
aas
jmp
jnp
jg
mov
sub
mov
sub
cltd
stc
test
mov
xchg
loop
or
lods
rcrl
jp
push
js
pusha
dec
xor
pop
jmp
sbb
scas
insb
cmc
lods
mov
push
push
mov
in
test
movsb
in
xor
push
xor
aam
mov
mov
or
mov
xchg
inc
sbb
add
mov
sti
ret
sub
and
je
fstpl
insb
shlb
push
pop
mov
mov
scas
stos
or
sbb
cld
stos
roll
js
cs
rcrb
inc
in
pop
cmpsb
repnz
enter
or
sub
out
mov
cli
add
shlb
xor
mov
xor
scas
jne
xchg
sub
out
push
cmp
xor
xchg
test
mov
cmp
test
arpl
rclb
xchg
lahf
int3
sub
mov
add
inc
push
lret
nop
mull
xchg
incb
in
sub
pop
icebp
inc
push
xor
mov
out
pop
int3
loope
iret
mov
lret
popf
int3
push
sar
mov
clc
cmp
in
cmc
clc
lret
daa
int
mov
fmuls
test
test
decl
xor
movsb
adc
push
add
xor
in
inc
sbb
cli
ret
push
inc
sbb
jae
mov
and
and
stos
call
les
testb
arpl
out
adc
addr16
jle
aam
sti
and
sub
push
clc
dec
xor
xchg
and
lret
pop
adc
fistps
mov
xchg
pop
xchg
decl
and
xchg
cmp
fcoms
cmp
adcb
pop
and
jecxz
push
sbb
inc
inc
jle
or
xchg
xor
test
js
or
inc
jp
les
xchg
outsl
lods
jo
sarl
jg
adc
sub
mov
mov
dec
sbb
int
adc
insb
sub
popa
sub
cmp
sti
aad
xchg
repnz
xor
mov
scas
in
lds
adc
pop
sub
std
lret
sbb
pop
xchg
push
inc
jmp
jmp
xor
mov
icebp
test
aas
aaa
pop
in
and
stos
insl
cmp
lret
mov
and
out
ds
popf
sub
cmp
lods
jne
mov
or
push
loope
fstpl
jle
sub
mov
int3
mov
inc
jne
adc
repnz
neg
xchg
lock
mov
aas
shll
mov
xchg
or
xchg
out
ret
xchg
cmp
jle
xchg
rolb
dec
loope
stos
clc
sub
std
sbb
fidivs
mov
ja
jle
inc
push
xor
loopne
int
lret
orb
fwait
dec
adc
adc
mov
clc
sbb
fsubrl
fs
mov
jb
adc
cltd
add
lahf
inc
daa
int
sbb
mov
loopne
sbb
stos
and
add
cld
test
scas
arpl
shrb
pop
jmp
jmp
mov
xchg
xor
xchg
call
or
arpl
pop
repnz
cmpb
jbe
cltd
je
inc
subl
pop
mov
jg
leave
mov
das
cwtl
and
inc
mov
push
cwtl
jge
test
mov
sub
pop
stos
rcrl
push
jp
pop
adc
sbb
sub
pop
sub
sbb
lea
sub
out
mov
inc
loopne
rorb
dec
rorb
fstl
mov
loopne
pusha
pop
loop
adc
fwait
outsl
add
push
test
adc
ret
add
sti
test
mov
mov
cmpsl
shll
cwtl
cli
sbb
jl
scas
lods
sub
dec
out
adc
mov
push
nop
gs
aaa
aam
ret
fcmovu
sub
subb
cmp
or
push
andb
and
scas
fadd
ficompl
mov
sub
lds
xor
mov
test
sbb
push
push
sbb
test
data16
jle
out
out
mov
scas
or
ss
and
inc
lcall
adcl
enter
mov
flds
aaa
sbb
dec
mov
mov
push
mov
aas
xchg
push
dec
push
clc
add
mov
in
jne
sbbl
hlt
int3
pop
sub
pop
xchg
inc
jmp
clc
divps
or
rorl
fldln2
mov
cmpsl
mov
pop
jecxz
mov
sbb
inc
pushf
sub
pop
jge
test
sbb
sbb
lods
xchg
jmp
mov
sub
jmp
call
out
xor
mov
or
adc
sub
lods
cld
je
sbb
test
or
std
cwtl
loopne
cld
negb
out
adcb
mov
pop
push
test
cmc
idivl
lret
xor
subl
leave
sub
mov
mov
mov
movsl
xchg
cld
dec
rclb
test
or
scas
adc
cmp
push
sbb
push
jecxz
xlat
popf
mov
jbe
in
dec
mov
xor
mov
fldenv
lock
or
push
insb
hlt
xchg
insb
stos
mov
data16
in
jnp
loopne
lcall
adc
mov
movsl
fiadds
loop
stos
push
in
and
cmp
jbe
in
mov
pop
cld
xchg
mov
leave
das
add
push
scas
xor
sbb
mov
xor
pop
mov
repz
or
jg
out
fwait
jb
dec
inc
call
xchg
enter
mov
mov
or
pop
mov
rep
insb
or
adc
xchg
dec
das
icebp
xor
pop
dec
clc
fildll
xchg
xchg
push
aas
mov
gs
inc
hlt
inc
sbb
cmpsl
mov
jmp
in
les
jo
lods
sbb
xchg
pop
xor
push
shlb
adc
setnp
jbe
xor
push
pop
stos
adc
and
push
pop
mov
jne
test
xchg
repz
mov
fcmovbe
dec
ljmp
stc
insl
push
lods
js
in
pop
dec
lret
sub
mov
rorb
outsb
stc
and
ljmp
sbb
out
sub
add
aam
bound
lods
pop
add
fildl
push
xchg
scas
test
cmpsl
jae
dec
pop
inc
jne
mov
in
into
lret
jo
out
gs
push
pushf
xchg
cwtl
sub
repz
xor
xchg
cmp
sahf
rcll
arpl
or
in
aas
push
jg
xor
sbb
push
rcrl
pop
mov
sbb
insb
push
neg
pop
push
jecxz
mov
lea
push
inc
dec
inc
fwait
imul
loopne
idivb
mov
rcr
roll
ret
mov
out
and
jmp
mov
dec
xor
stos
pusha
or
cli
sub
sub
add
movsb
adc
fisubrs
dec
lcall
xor
nop
cmpsl
dec
pop
jle
call
testb
mov
loope
call
xchg
lret
iret
cwtl
sbb
mov
orl
mov
in
inc
lret
mov
cmp
les
xchg
jg
and
lea
adc
insl
inc
loop
and
hlt
test
add
pushf
jl
jns
aas
pop
test
xor
push
pop
jecxz
xor
fnsave
cmp
scas
jb
ljmp
cmpsl
gs
mov
rcll
int
pop
pushf
repz
or
add
stc
inc
icebp
inc
aam
sbb
jge
pop
scas
pop
movsl
pop
insl
sub
fnstenv
xor
jl
aam
mov
pusha
or
mov
ds
and
daa
sub
sbb
and
fisubs
cmp
std
mov
stos
and
push
adc
insb
add
sub
popl
mov
jns
xchg
lret
mov
lock
push
addl
adc
ljmp
je
xchg
mov
push
add
mov
loopne
jge
pop
aaa
fmul
leave
popl
lds
pop
mov
int3
idivl
push
decb
inc
xor
aaa
popa
add
inc
pushf
mov
lods
add
push
mov
std
or
mov
jnp
jecxz
push
xor
outsb
cli
or
rcl
cwtl
inc
push
inc
adc
pop
jno
std
lret
aas
jns
jge
mov
push
push
and
imul
mov
popa
dec
jno
mov
mov
stc
pop
or
mov
sub
push
scas
push
pop
cmpb
mov
popa
fwait
or
sub
mov
repnz
jecxz
enter
cli
xchg
stos
and
push
ljmp
in
and
and
pop
dec
gs
pop
pop
adc
add
loop
or
stos
push
jle
jbe
hlt
stc
adc
cmp
addr16
fcmovnu
fchs
xor
mov
mov
jnp
or
jns
inc
inc
adcl
push
lods
nop
das
int3
push
popfw
and
aaa
loop
or
sti
adc
stc
bound
fwait
adc
lcall
out
mov
xor
pop
mov
int
imul
inc
fcompl
pop
testb
call
jg
add
fadd
mov
jp
mov
or
outsb
test
mov
or
sbb
jns
stos
mov
adc
sbb
fidivl
in
inc
add
adc
lret
cmpl
mov
in
push
xchg
jne
inc
in
bound
insl
loopne
mov
or
adc
pop
mov
jo
out
jle
inc
lock
mov
xor
push
dec
sub
cmp
pop
mov
jnp
mov
mov
or
fchs
add
xor
mov
dec
fistpl
or
sbb
das
test
roll
in
popa
rol
iret
cmp
test
dec
lds
aas
mov
jmp
mov
adcl
push
daa
xchg
cmp
enter
jg
in
call
dec
jno
adc
or
cmp
mov
adc
jno
adc
xchg
mov
icebp
repnz
loop
test
xor
test
mov
pop
jl
dec
push
aam
outsl
sub
mov
push
push
adc
les
daa
sbb
jle
fisubrl
daa
adc
and
jbe
mov
dec
cltd
adc
mov
test
jg
jb
mov
lock
popf
mov
ret
cld
std
lret
add
or
fisttps
mov
test
aaa
fs
inc
sbb
cmpsb
imul
add
pop
xor
lret
insl
insb
xor
inc
and
pop
gs
mov
scas
add
pop
shll
iret
ret
xchg
addr16
scas
movsb
add
or
and
aas
xlat
lods
mov
pop
inc
pop
and
mov
lods
inc
iret
popf
lock
repnz
add
mov
aas
std
out
mov
mov
and
sbbb
push
aaa
jb
mov
mov
and
dec
scas
cmp
into
mov
loope
loope
cmpsl
loope
das
dec
push
mov
or
sub
or
dec
mov
mov
mov
inc
jecxz
mov
arpl
sub
ficompl
dec
imulb
jmp
mov
cmp
mov
push
scas
aad
pop
xchg
cli
push
sbb
push
and
addr16
fidivs
rolb
xor
dec
lds
popf
push
cmpsb
das
mov
and
mov
inc
mov
inc
andl
movsb
rcll
shrl
push
push
pcmpeqd
fwait
mov
pushf
and
inc
cmp
inc
outsl
push
pop
repz
jg
arpl
clc
lahf
cmp
in
leave
mov
loopne
ret
sub
sub
cmp
mov
cltd
lret
xchg
insb
andb
leave
inc
push
adc
das
pop
push
xchg
fwait
dec
jno
hlt
mull
cli
push
outsl
jge
mov
push
loopne
push
pop
stos
dec
adc
cmpsb
idivl
lods
in
pop
sub
pop
stos
jmp
mov
mov
das
dec
sysenter
je
xchg
rol
pop
adc
pop
out
dec
int3
subl
ja
sub
dec
pop
movsb
jne
push
out
arpl
outsb
pop
adc
mov
les
pop
aad
push
mov
lods
cmp
sbb
mov
ret
push
pop
lret
sub
movsl
inc
dec
mov
xchg
dec
cmpsl
repnz
sub
sub
cmpsb
mov
mov
push
mov
mov
push
and
roll
popa
dec
mov
inc
sub
jns
mov
sub
pushf
fwait
push
push
jae
mov
mov
adc
into
ja
sbbl
ret
inc
xor
insl
mov
outsb
fdivrl
mov
fcoms
lods
pop
sarb
jg
movsl
mov
jnp
inc
sub
ret
cld
enter
add
dec
pop
in
ss
push
jp
jno
and
fcomps
adc
sbb
add
out
popa
cmp
xor
mov
pop
add
loop
inc
sub
inc
push
into
mov
xor
dec
pushf
jae
dec
jae
in
lods
mov
add
sub
nop
aad
jecxz
mov
lods
xchg
mov
aaa
stos
iret
inc
lret
mov
fdivr
scas
mov
mov
inc
test
je
inc
gs
or
or
xchg
pushf
jmp
fmull
adc
jo
out
sub
push
cmp
push
mov
or
sbb
xor
inc
sti
adc
imul
rolb
sub
jmp
cmp
add
fstl
movsl
ret
in
call
xchg
shlb
push
add
xchg
rol
mov
leave
push
rsqrtps
add
and
rorb
enter
xchg
mov
popa
lretw
xchg
push
jb
pop
xchg
mov
pop
push
call
mov
scas
mov
ljmp
cmpsb
jbe
mov
lods
clc
sahf
int3
jae
std
and
push
out
dec
push
imul
mov
test
sbb
ds
mov
in
loopne
cwtl
jae
incl
or
rcr
popf
inc
push
hlt
cmp
lock
or
sbb
cmp
cmpb
ljmp
adc
push
aaa
cmp
push
or
mov
clc
ljmp
iret
or
aaa
mov
hlt
adc
and
fdivs
std
aad
adc
push
mov
inc
push
pop
int
ficomps
loop
pop
xchg
leave
testl
and
test
call
and
scas
ja
inc
add
out
or
cs
mov
clc
inc
sbb
jecxz
mov
stos
add
pop
cmpb
pop
add
imul
sbb
xlat
sub
dec
jbe
fadds
aas
adc
lea
xchg
sub
leave
inc
lahf
mov
int
dec
sub
outsl
outsb
sbb
in
or
mov
sbb
and
add
fcoml
fisttpll
popl
lds
into
test
mov
xchg
je
mov
shld
jl
lret
cmpsl
loop
xor
lcall
out
adc
xchg
int3
icebp
out
insl
fisubrs
dec
jp
push
jno
cmp
lcall
xchg
sbb
lods
xor
movsb
ss
outsl
inc
mov
shll
push
stos
lret
jne
sti
xor
sub
mov
xorl
cld
jb
mov
adc
mov
xlat
add
aam
sub
push
addb
testb
fisubs
gs
neg
adc
hlt
hlt
in
inc
mov
je
iret
cmc
jg
xchg
and
pop
push
cs
push
sub
aaa
imul
insb
arpl
cli
out
xlat
sub
mov
jecxz
clc
and
pop
jne
das
xlat
test
enter
test
mov
jecxz
es
jl
sbb
mov
cld
inc
dec
cmp
push
add
dec
cmp
dec
jne
inc
xor
lcall
scas
mov
adc
pop
and
push
fs
fsub
mov
sub
fcompl
push
lods
pop
mov
enter
pushf
or
repnz
jnp
sti
cmp
inc
jne
mov
sbb
inc
push
push
lahf
push
add
sbb
jmp
inc
outsb
pop
jmp
add
xor
cs
mov
xlat
dec
sbb
fldl
push
stos
insb
xlat
pop
mov
mov
mov
arpl
enter
cmc
xor
lods
stos
sub
jl
aam
and
jns
arpl
jae
aad
mov
adc
lea
loopne
sbb
out
cmp
clc
jae
mov
adc
xchg
dec
insb
ret
push
scas
jg
xor
ja
movsb
or
cmpl
push
int3
in
je
into
mov
pop
out
sbb
or
dec
adc
jp
cmp
and
dec
jo
subl
mov
inc
mov
les
ret
mov
cltd
push
cmp
inc
sub
stc
shrl
and
sub
loopne
and
out
inc
inc
or
push
je
add
dec
call
and
lcall
in
test
mov
or
dec
in
or
inc
pop
lods
jle
push
and
sbb
or
push
xor
mov
jecxz
mov
push
jg
sbb
sub
jp
xorb
pop
daa
lret
leave
lret
out
pop
ljmp
rcrb
push
mov
pusha
jecxz
push
or
adc
repz
xchg
rcll
mov
mov
xchg
xchg
push
orb
leave
sbb
xchg
arpl
pop
jne
fcoms
jae
scas
dec
xchg
jg
out
mov
fwait
cmc
sub
sbb
int
pushf
adc
mov
scas
jmp
cmp
into
mov
push
mov
add
repz
and
xchg
mov
push
cmp
es
pop
jmp
jnp
jl
cs
mov
pop
push
dec
stc
mov
jne
aam
xchg
and
outsb
movl
ja
dec
pop
push
sbbl
mov
gs
pop
icebp
and
movsl
mov
popa
aam
fcmovu
xlat
fdivr
out
push
in
sbb
add
lods
ret
andl
xchg
std
xchg
pop
xchg
sbb
jno
je
lods
fsubrl
fisubl
call
dec
call
add
inc
and
shl
mov
aaa
dec
bound
jle
jl
fnstsw
mov
xor
lock
ret
sub
dec
leave
add
mov
movsb
sub
mov
mov
mov
ja
push
and
sti
ret
imul
push
sub
mov
push
jb
cmp
fldenv
imul
pop
adc
cmp
inc
jecxz
cmp
or
mov
rclb
and
mov
nop
mov
cltd
jg
mov
cmpb
lahf
loope
imul
add
xchg
inc
mov
fbld
push
imul
jge
jne
sbb
cmc
jmp
or
cmp
inc
inc
jb
mov
or
push
outsb
push
pop
adc
or
push
jecxz
enter
mov
movsb
inc
in
or
sbb
or
sbb
jns
jb
pop
cmp
sbb
jae
mov
and
std
in
stos
push
or
je
jns
data16
dec
lcall
xor
jns
psrad
shl
fs
into
es
aad
mulb
stos
cmp
jnp
jg
and
add
and
jns
jae
cmp
pop
sub
mov
fcmovu
mov
push
cmp
push
js
aam
jb
lahf
arpl
dec
sub
jmp
xlat
mov
cmpb
xor
jecxz
sub
popa
adc
jmp
xchg
mov
ljmp
pop
jecxz
inc
fisubrl
cwtl
cltd
ret
push
sub
pop
and
cmpsb
outsl
sbb
lds
mov
je
add
xchg
pop
and
jns
mov
enter
adc
out
or
ja
enter
and
push
dec
push
clc
add
adc
sbb
pusha
in
stos
loop
mov
mov
mov
jmp
test
mov
out
inc
sub
mov
popf
nop
xor
dec
loopne
or
out
jge
movsb
dec
rcrl
pop
or
or
inc
inc
addl
cli
addr16
jl
adc
sub
xor
sub
loopne
dec
push
cmpsl
inc
in
mov
jo
sbb
cmp
adc
sbb
cmp
int
inc
xor
nop
push
jp
sbb
in
push
das
ret
jmp
push
ss
inc
repnz
inc
pop
jns
jle
pop
mov
mov
push
dec
pop
lods
insb
jno
bound
inc
lcall
cmp
pop
in
sub
es
psubusw
dec
push
insb
test
xchg
xor
cmp
iret
negl
daa
mov
ret
in
lcall
mov
xor
mov
dec
push
js
push
pop
mov
popa
insb
cltd
lods
pop
and
loopne
mov
roll
push
lret
sub
fmull
test
jnp
cwtl
jge
inc
ljmp
pop
fldt
test
fstl
test
cmpsl
inc
pop
xchg
loope
stos
mov
inc
inc
loop
or
test
and
add
cmc
jp
sti
sub
mov
xchg
mov
fld
ja
push
ficompl
add
or
mov
bound
fnstsw
dec
push
test
jmp
and
lret
xchg
lcall
jns
and
mov
pop
mov
jno
fwait
mov
jbe
jmp
mov
aam
xchg
cmp
mov
pop
mov
push
cmp
sub
iret
repnz
push
sub
push
jg
scas
push
dec
pusha
aam
pop
adc
cs
je
popf
mov
stc
and
pop
adc
aad
mov
push
push
and
or
cmp
pop
sbb
imul
jle
add
push
std
divps
add
push
mov
hlt
scas
stos
data16
mov
ficompl
gs
xchg
jp
lock
dec
std
xor
xchg
pop
dec
idiv
mov
mov
mov
or
jp
dec
stc
inc
jno
push
mov
jae
iret
or
jecxz
imul
lahf
mov
xor
das
imul
mov
leave
mov
hlt
ficoml
sbb
sub
hlt
push
ljmp
adc
sarb
or
cmp
xlat
inc
mov
fisubrs
aam
or
cmc
push
pop
push
xor
jg
mov
or
dec
addr16
les
fists
cmp
cmp
inc
cmp
add
insl
fstpt
mov
xor
adc
mov
lahf
andb
mov
mov
rcll
jne
mov
or
or
loope
cmp
jb
jecxz
bound
sahf
rol
or
jae
jae
std
cmp
jnp
xor
dec
lret
je
inc
in
insb
jmp
lret
filds
pop
idivb
add
test
insb
add
sbb
prefetch
adc
sbb
mov
inc
pop
lds
cli
std
or
pop
mov
add
pop
push
bound
dec
in
xor
lods
rcll
das
outsb
sub
push
outsl
les
out
das
mov
ret
inc
divb
outsl
clc
xlat
push
imul
lret
cmpsl
adc
dec
inc
and
into
sahf
mov
loop
mov
and
pop
or
lods
mov
mov
in
pop
neg
popa
lcall
sarl
dec
mov
xchg
adc
int3
xor
jmp
cld
imul
sub
cld
push
lcall
mov
test
and
or
into
push
mov
pop
push
lods
mov
dec
jmp
cmpb
icebp
adc
jb
jmp
cwtl
push
and
jecxz
adc
pop
inc
inc
add
lcall
push
xchg
and
je
sahf
iret
mov
xchg
mov
stos
push
pop
hlt
cmpb
arpl
mov
jb
in
mov
leave
in
pop
int3
loopne
xlat
xchg
inc
mov
stos
push
add
xlat
mov
insb
clc
and
dec
sub
or
sahf
shll
cmp
test
jle
and
stc
dec
cmpl
mov
xor
fwait
mov
xor
jnp
jecxz
cmp
mov
orl
into
or
ja
pop
cwtl
jno
int3
pusha
in
mov
inc
cmp
mov
aaa
or
icebp
jne
test
pop
pop
xor
mov
insb
filds
lret
in
xchg
pop
pop
lds
and
sub
xor
xchg
adc
mov
aas
add
and
xor
in
jg
push
fsubrl
or
aam
push
popa
fdivr
nop
dec
lods
xchg
in
push
xor
outsb
push
mov
mov
jb
idivb
mov
out
add
jae
movsb
cltd
lret
jmp
inc
dec
push
xor
iret
into
jnp
cmc
pop
test
aas
mov
push
movsl
jle
dec
js
mov
mov
inc
jg
sub
jmp
sahf
leave
aaa
sti
push
out
aaa
leave
sahf
addl
dec
sub
xor
sti
loope
cli
dec
mov
push
jns
jge
and
fistps
mov
and
mov
mov
sbbl
push
sub
ret
cmpl
dec
fidivs
and
arpl
and
or
jmp
sbb
test
pushw
dec
or
mulb
ret
xchg
mov
push
inc
sub
cmc
sbb
and
pop
or
mov
pop
sbb
ds
inc
add
lds
adc
shlb
and
test
fdivrs
hlt
and
jl
push
and
out
xor
or
mov
mov
push
stc
sub
out
dec
daa
jbe
mov
bound
or
mov
pop
dec
fs
popf
jecxz
push
cmp
jecxz
in
dec
inc
xchg
lods
je
fwait
lock
test
int
lea
dec
div
jecxz
jo
xchg
cmp
sbb
nop
mov
mov
xor
cld
jl
inc
mov
fstpt
mov
mov
push
sub
fsubr
and
mov
test
inc
pop
mov
jb
call
test
ret
mov
movsl
lods
clc
mov
xchg
fs
cmp
xchg
jp
pop
jmp
sbb
ja
push
or
lods
pop
add
and
jbe
add
add
mov
push
xor
dec
mov
sub
cltd
jne
adc
fidivrl
dec
aaa
push
test
xchg
int
js
or
rcrb
push
mov
jo
jo
dec
mov
test
imul
add
cmp
hlt
lret
push
imul
jb
add
sbb
lock
pop
add
repz
cmpsb
das
out
push
pop
sub
and
push
lea
add
lret
sti
mov
inc
cld
scas
inc
in
and
aam
repz
inc
pop
add
fcmovu
sahf
call
inc
pusha
cmp
int3
mov
mov
mov
outsl
lods
in
das
cmp
pop
aas
adc
cmp
pop
mov
or
mov
mov
gs
pop
add
fcomps
adc
into
or
stos
jno
icebp
mov
xchg
sbb
cli
ret
pop
add
xlat
aam
mov
xchg
sbb
or
xchg
pop
scas
adc
aaa
cwtl
jge
roll
loope
cld
nop
psubd
push
push
xchg
pop
xlat
enter
dec
pop
sbb
or
inc
stc
sbb
fidivrs
fwait
mov
mov
mov
pop
xor
xchg
dec
jp
dec
notl
mov
jnp
jmp
jbe
jo
lea
enter
jl
inc
mulb
int
mov
xchg
sub
add
dec
and
jns
loop
xlat
ja
fst
or
int3
lcall
push
sub
sar
insl
inc
inc
shl
dec
inc
sub
cmp
dec
jecxz
mov
and
enterw
ret
cwtl
rorb
jp
and
in
xchg
mov
mov
dec
mulb
or
fistpll
or
sti
ret
leave
in
outsb
push
cmp
stos
movsb
pop
or
mov
mov
push
ja
jge
add
xchg
aam
sti
sub
insl
or
push
sub
fsts
mov
xchg
xlat
pop
push
cltd
lahf
movsl
pop
outsl
lds
pusha
shrb
loope
rolb
jg
das
xchg
loopne
and
mov
test
fs
mov
add
push
xor
mov
mov
lods
push
mov
inc
or
call
push
dec
jb
xchg
repz
leave
sbb
xor
push
ja
mov
push
js
sbb
fildl
push
dec
mov
cmpsb
outsb
fadds
mov
push
xor
push
shlb
mov
mov
and
fcmovbe
lods
dec
int3
inc
imul
lret
stc
aaa
popf
packssdw
popa
fnstcw
adc
dec
jno
add
adc
movsb
and
imul
and
jmp
andb
cmpsb
ss
pop
jmp
pop
subb
pop
jl
je
mov
icebp
ret
shl
lcall
je
mov
fldl
jg
sbbl
lcall
xor
movsl
jne
fnstcw
sub
and
out
aas
fldl
xchg
mov
mov
popf
mov
add
push
cmp
sbb
add
pop
test
inc
add
jmp
lret
sbb
fwait
add
jae
inc
sbb
cmpsl
mov
aad
add
loop
scas
mov
ficompl
mov
ror
add
call
or
and
cltd
es
sub
les
shlb
jl
mov
testb
or
add
inc
and
out
fmuls
or
insb
js
xchg
out
clc
popf
int3
push
xchg
pop
out
iret
ds
xor
andb
int3
mov
jg
aaa
xor
popa
xor
aad
sub
or
shll
dec
mov
or
xor
scas
or
sub
push
call
mov
xchg
jg
popf
dec
jb
imul
jne
pop
mov
mov
test
and
notl
mov
nop
cmpsl
loop
sub
hlt
sarb
xchg
cs
in
mov
shl
pop
pop
lock
imul
push
mov
cwtl
loopne
aam
jge
ja
sbb
or
mov
stos
xor
xor
xor
aad
or
mov
xchg
jbe
pop
sarb
jnp
xor
or
adcb
or
in
mov
icebp
sbb
cmpl
pop
push
cs
pushf
repz
mov
jns
cld
aad
dec
test
sbb
dec
test
push
adc
mov
jno
or
sbb
adcb
mov
adc
das
inc
adc
or
jle
roll
ds
nop
negb
les
out
jnp
lret
sahf
icebp
mov
xor
jl
faddl
xor
test
shll
pop
into
mov
sub
ja
sti
inc
aaa
inc
nop
pop
adc
daa
pushf
jnp
jbe
cmpsb
mov
pop
cmc
or
cli
popa
iret
movsl
je
adc
inc
mov
ljmp
push
addr16
jmp
leave
mov
jg
lds
lcall
mov
movsb
movsb
sbb
sub
inc
out
jns
fnstenv
test
push
int3
xor
shlb
fcompl
xor
pop
jne
mov
inc
xor
aam
adc
nop
ror
mov
and
negb
mov
loopne
xor
jmp
xchg
imul
cltd
sbb
and
mov
ret
dec
imul
sub
pushf
xchg
jbe
dec
int3
lds
out
lock
ja
cltd
xchg
lock
and
mov
ss
mov
fldl
add
xchg
push
sub
inc
orb
mov
es
xor
cmpsl
insl
push
mov
and
fwait
outsb
in
imul
xchg
sbb
scas
mov
push
aad
pop
mov
imul
gs
aam
enter
or
mov
inc
cmp
lahf
in
and
xor
jne
pop
lahf
insb
ret
xor
adcb
sub
data16
test
mov
mov
sarb
sub
inc
mov
arpl
loop
mov
pop
hlt
jmp
mov
xchg
mov
inc
adc
mov
dec
sub
outsl
jbe
stc
or
cmp
out
adc
sub
add
pop
out
mov
ljmp
dec
xor
rol
inc
xchg
mov
xchg
mov
into
jmp
mov
dec
js
pop
jno
pop
addr16
je
mov
sub
loopne
fidivs
cmp
call
repnz
xorl
xchg
movsb
movsb
mov
mov
pop
add
or
push
mov
and
insl
call
jo
fs
sbb
dec
add
out
jae
inc
or
inc
push
shlb
or
xchg
test
mov
xchg
sub
mov
push
cmpsl
mov
mov
and
pop
insl
gs
cmp
es
inc
jp
sub
pop
push
lds
sti
xchg
les
xor
ficompl
cmp
sbb
xor
xor
push
mov
vpor
sarl
sarl
push
adc
sub
push
dec
xchg
setns
cmp
jo
xchg
sub
mov
dec
and
cmp
xchg
imul
fyl2x
pop
fists
movsb
test
adc
fnstcw
mov
popf
ret
pop
add
add
lods
cmp
xchg
cltd
dec
mov
push
repnz
rorb
hlt
ss
lds
call
imul
test
mov
cmp
sbb
mov
mov
insb
jecxz,pn
jae
imul
ljmp
cmp
sbb
or
mov
pop
push
fnstsw
aaa
push
mov
or
xor
jne
mov
js
call
mov
jbe
mov
cmpsb
and
imul
cmp
jmp
loope
outsb
aam
shll
lods
adc
leave
testb
mov
inc
repnz
sarl
xchg
bound
mov
testb
lods
or
mov
ss
les
and
dec
je
nop
sti
std
pop
mov
pop
dec
les
fwait
mov
js
and
popa
fsubrl
mov
les
stc
fsubs
arpl
scas
jge
or
shll
movsb
dec
ss
jle
ret
aaa
outsb
inc
xchg
push
mov
jl
cltd
andb
dec
loop
dec
es
es
jns
sbb
cmp
les
shll
mov
fstpt
lret
dec
dec
imul
and
and
and
ds
jno
loopne
mov
jnp
in
or
out
fwait
and
dec
stos
push
aam
pop
fstps
push
add
fisubl
test
repz
mov
out
rcrl
in
jp
test
adc
jno
test
mov
mov
xlat
dec
xchg
pushf
int3
hlt
push
popa
add
in
in
outsl
mov
xchg
mov
lea
mov
add
or
cmp
lret
out
push
mov
fadds
sub
cli
mov
cmpsb
repnz
inc
or
push
push
shrl
rcrl
adc
call
call
or
loope
imul
in
xchg
jle
push
mov
fnstsw
pop
arpl
or
hlt
movsl
pop
push
cld
ds
inc
jae
hlt
mov
lret
out
push
loopne
jmp
int3
dec
add
jne
mov
pop
pusha
xor
xor
pop
aam
fcoms
pop
sti
xor
fstps
mov
push
xchg
jbe
imul
adc
mov
push
test
rep
jns
adc
adc
pop
jne
mov
jae
jb
outsl
and
test
in
mov
sub
mov
jmp
and
dec
in
push
imul
mov
or
icebp
or
fs
jle
lock
push
sbb
mov
and
data16
negb
lock
loope
inc
ljmp
push
and
std
xchg
push
sbb
xchg
mov
cmc
loopne
dec
or
shlb
ret
loop
inc
dec
das
mov
xchg
jo
divb
sbb
ss
lahf
jb
pop
sbb
mov
jecxz
lcall
mov
dec
cmp
movsl
jmp
cmp
mov
sub
mov
inc
mov
pop
jle
or
in
add
xchg
aam
mov
or
pop
cmp
push
vmread
xchg
fistpl
pusha
inc
outsl
test
out
pusha
sbb
or
inc
nop
mov
and
movsl
imul
cwtl
xchg
cmp
lds
push
or
lcall
mov
add
adc
mov
and
cmp
fs
fdivrl
pop
out
shlb
jo
cmpsb
js
jmp
jne
dec
fcmovnb
mov
leave
iret
push
fsubp
xchg
mov
adc
je
pop
and
shl
roll
mov
xor
loopne
mov
fiadds
rolb
ds
push
sbbl
stc
mov
xchg
lds
add
lret
scas
mov
push
xor
clc
sub
mov
pop
or
popf
movsb
fmull
or
mov
js
out
clc
pop
stos
mov
mov
fsub
adc
xor
das
popf
mov
enter
sub
or
pop
jne
mov
jl
cs
xor
dec
jl
sub
adc
loopne
fisubrs
repnz
and
and
cmp
sub
cmp
and
lods
sti
sub
cmc
xchg
push
je
bound
into
sahf
mov
rorl
xor
push
ret
mov
cmp
pop
mov
insb
clc
cmp
stos
cmpsl
sbb
cmp
cli
leave
lods
lods
mov
ljmp
pop
ret
sti
sub
dec
hlt
and
lret
nop
loop
jb
add
xchg
xchg
in
test
subl
ljmp
out
sbb
std
popf
stos
cmpsb
sub
repnz
loope
push
mov
mov
gs
add
fidivs
pop
int3
loop
mov
push
inc
subl
pop
jmp
dec
dec
pop
dec
sbb
jg
cld
popa
addb
ss
jmp
imul
sub
or
jmp
or
lret
rclb
sbb
mov
stc
dec
fimull
shl
aam
sahf
insb
sbb
mov
les
and
lret
jnp
andl
outsb
orl
push
jle
fwait
jno
nop
dec
rorl
leave
icebp
mov
enter
aam
aas
or
mov
push
data16
sub
mov
je
arpl
xchg
jmp
rclb
xchg
mov
rol
out
hlt
loope
mov
test
sbb
imul
test
call
inc
jmp
sbb
push
mov
inc
mov
mov
in
jae
push
clc
fisubl
mov
or
scas
inc
xor
push
out
mov
xchg
les
sbb
popl
sub
jecxz
mov
push
pushf
fcmovbe
loope
ficomps
sahf
rorl
sub
mov
cmp
mov
movsb
add
and
add
sub
imul
pop
fisttps
xchg
test
mov
arpl
stos
repz
lods
cmp
repz
loopne
ret
adc
dec
dec
adc
gs
es
out
fucomp
addr16
scas
or
sub
loope
pop
jp
jle
mov
cwtl
jo
daa
popa
or
adc
mov
inc
jns
or
lds
daa
pushf
or
cltd
cmp
add
jg
leave
test
lret
and
push
push
repz
xor
cmpsb
push
mov
stos
call
add
or
lock
pusha
in
mov
outsl
jp
xorb
mov
rclb
push
ja
out
inc
pop
push
inc
out
add
add
xor
ja
mov
sub
loopne
pop
jae
push
jne
and
shrb
jp
cmp
inc
add
test
and
cmp
js
cs
shr
mov
mov
sbb
push
sbb
push
jo
xchg
js,pt
stos
icebp
cmp
dec
or
pushf
test
int
fstpl
inc
ret
int3
jle
push
lret
nop
cmc
pop
xor
scas
std
mov
fwait
bound
push
popa
xchg
add
mov
fbld
inc
vmaxss
es
add
pop
testl
cmpsb
sub
jmp
push
and
mov
pop
cwtl
lahf
xor
sub
into
or
loope
jecxz
jbe
jp
outsl
mov
out
daa
xor
sbb
mov
jle
pop
ja
dec
inc
add
push
mov
testb
jge
fisubs
fisubrl
sarl
jg
repnz
xchg
ljmp
push
test
mov
adcl
js
repz
pop
pop
lods
daa
jle
push
sbb
movsb
sahf
aas
clc
stos
jecxz
ds
pop
das
lahf
in
repz
mov
fsincos
sbb
stos
lahf
lret
xchg
xor
mov
xchg
stc
adc
jmp
sub
mov
cltd
ljmp
leave
sub
pop
adc
cmp
and
pop
jno
mov
pop
shll
outsl
adc
arpl
pop
push
repnz
mov
lods
jo
xchg
enter
inc
push
or
aad
lds
adcl
insb
orl
je
adc
push
ja
out
mov
jge
jmp
movsl
xchg
je
je
pop
jnp
pushf
pop
inc
loope
sbb
add
bound
clc
mov
push
adc
aad
in
adc
out
xor
xchg
pusha
cmp
cmp
inc
add
cmp
sbb
mov
mov
push
add
xchg
mov
out
push
subb
arpl
or
xchg
and
dec
enter
sbb
testl
xchg
cmp
fdecstp
jg
or
jne
adc
mov
out
pushf
lods
or
mov
mov
inc
mov
mov
mulb
icebp
repz
loop
insb
push
push
insl
adc
aaa
or
mov
or
ja
dec
cmpsl
out
les
cmp
in
in
mov
test
or
dec
orl
fildll
das
test
xchg
aad
shrb
sub
pop
stc
inc
or
inc
scas
or
mov
negl
jp
int
mov
dec
inc
fldenv
cltd
push
dec
pop
cld
dec
mov
stos
xchg
dec
or
stc
xchg
fucom
daa
dec
test
add
outsl
insl
cmp
push
les
jne
cld
or
loop
cmpsl
dec
mov
jns
loope
sbbb
jbe
test
insl
ret
xchg
push
imul
cmp
cli
inc
flds
mov
sub
xchg
or
jne
in
pushf
lahf
popf
jmp
jmp
sub
mov
jno
xor
mov
pop
dec
sub
imull
jne
outsb
mov
add
sub
stos
loope
cmpl
xchg
jmp
addb
shll
and
shll
cmp
inc
sahf
xor
out
repz
lock
iret
rorb
adc
pop
lods
push
push
cmp
sahf
lods
push
decl
rcrb
mov
int
or
cmp
outsl
nop
fdivr
scas
mov
pop
pop
ljmp
mov
int3
mov
xchg
xor
jae
popf
push
mov
in
mov
sbb
lods
loope
nop
push
pop
in
leave
arpl
push
incb
or
into
xchg
dec
clc
mov
jno
daa
and
sub
ljmp
aas
mov
shl
sarb
faddp
movsb
adc
in
iret
cmp
sti
sbb
lods
jle
call
mov
cmp
pop
mov
xchg
and
sti
mov
sbb
sub
jo
or
ljmp
sub
sub
adc
jmp
dec
xchg
xor
mov
push
or
mov
es
int
addl
push
ficoms
in
sbb
mov
loope
test
dec
jmp
and
div
push
mov
adc
adc
fiaddl
mov
jo
insb
jns
sbb
es
sbb
das
cmp
movsb
lret
pop
and
test
mov
cltd
adc
es
jno
xchg
sbb
xchg
and
jne
mov
push
lods
ds
mov
or
push
mov
repz
rcrl
lahf
xchg
xchg
pop
jbe
ljmp
lods
mov
push
mov
mov
push
aad
pop
inc
or
repnz
enter
inc
push
or
mov
cli
loop
out
and
sti
out
inc
add
jno
dec
jg
inc
inc
and
lods
add
fsubp
test
push
dec
pop
dec
inc
mov
jns
push
hlt
xchg
mov
pop
inc
ds
lea
sub
mov
das
pop
out
fwait
lea
aad
and
add
sbb
or
lret
call
adc
cmpsl
jbe
mov
insb
push
es
loopne
jae
mov
lods
mov
xlat
xchg
xor
mov
repnz
test
enter
cmp
ja
movsb
dec
inc
mov
scas
shrl
es
or
cld
push
es
xchg
jl
push
adc
xor
aam
add
mov
out
scas
xchg
mov
push
mov
mov
mov
push
pop
fimull
stos
lcall
cltd
jmp
int3
in
stc
or
pop
lods
nop
aaa
andl
stos
add
cmp
dec
mov
ret
loope
notl
push
and
sbb
push
scas
xor
call
insb
adc
inc
jle
int3
aaa
push
loopne
mov
imul
fmul
mov
jecxz
sbb
jae
jecxz
sbb
jmp
cwtl
or
push
movsl
sbbb
faddl
add
mov
lret
arpl
out
xlat
xor
dec
sub
int3
fs
inc
xor
add
and
fdivp
adc
xor
push
mov
cltd
cmp
aaa
sub
pop
push
orb
shll
rcll
jg
out
aaa
jae
adc
add
icebp
int
push
pop
pop
mov
pop
mov
inc
mov
or
adc
fwait
cs
mov
mov
data16
repnz
mov
and
mov
cli
mov
movsl
xchg
pop
fdecstp
sbb
ret
out
cmp
add
inc
dec
cltd
push
nop
pop
dec
mov
outsb
mov
add
mov
jno
push
mov
daa
cltd
pushf
jns
sbb
je
push
mov
pop
mov
lea
idiv
sub
das
cmpsb
sarb
loope
fldt
sbb
and
cmpsl
mov
push
ljmp
cmp
nop
sbb
gs
pop
gs
es
pop
stos
js
sahf
cltd
xchg
push
jbe
insl
movsl
push
pop
stc
pop
pop
fcom
lock
test
jbe
out
adc
and
dec
test
outsl
fadds
outsb
mov
pop
push
or
mov
movsl
fwait
adc
repz
pop
push
mov
adc
test
or
bound
movsb
test
cs
jmp
out
sbb
sub
inc
mov
enter
mov
stos
cwtl
xchg
adcb
push
jae
xchg
lret
sbb
cmp
mov
cmp
outsl
mov
inc
hlt
mov
adc
cmp
adc
dec
push
repnz
inc
xor
bound
rcr
lds
cwtl
push
adc
fstpt
xor
stos
mov
push
inc
jne
ja
cmpb
cmpsl
mov
fistl
repz
dec
loopne
add
push
add
clc
lret
lock
or
fistps
ja
and
mov
pushf
push
inc
push
mov
push
mov
mov
shrl
lret
cmp
or
ds
popl
sub
sub
inc
xchg
mov
push
ds
out
cmp
int3
push
stos
shl
leave
cmp
cmp
popl
aaa
stos
dec
xchg
sub
mov
mov
lahf
gs
ljmp
adc
sbb
cltd
test
jmp
xchg
or
sub
sbb
stos
cltd
sarl
push
in
inc
push
aaa
inc
add
mov
stos
fs
pop
push
into
nop
ret
leave
lds
ret
jp
jge
adc
mov
ss
out
mov
shll
decb
xor
loope
push
mov
xchg
or
dec
push
cld
and
dec
fiadds
mov
imul
cwtl
xor
jbe
adc
dec
jmp
jno
mov
or
ffreep
xchg
test
xor
cmp
mov
xor
mov
movsl
icebp
xor
shll
shrb
inc
push
sarb
popf
dec
push
xlat
inc
in
sub
pop
or
sub
jg
rcrb
dec
sub
iret
js
bound
push
mov
mov
and
xchg
into
mov
les
jecxz
push
xor
les
popa
and
fcom
add
lcall
in
imul
call
inc
testb
push
ret
in
jno
xor
adc
subl
mov
mov
push
fs
dec
mov
mov
mov
aaa
mov
sbb
pop
subb
xchg
jecxz
fs
sbbl
jl
stos
imul
out
cmp
mov
cld
xchg
sub
shlb
test
dec
rorb
mov
mov
call
insb
icebp
push
and
add
nop
dec
mov
test
add
jne
shl
pop
std
push
xchg
clc
sahf
mov
idiv
pop
outsl
mov
shl
sub
mov
fnstsw
adc
sbb
andl
dec
in
xchg
and
jne
out
dec
dec
aas
push
sub
and
cmp
jns
lods
idivl
lock
cmc
push
jb
andb
sbb
sahf
mov
movsb
xlat
std
push
sti
sbb
or
stc
sbb
test
lods
xor
and
hlt
ficoms
not
sahf
dec
jecxz
cld
push
xchg
mov
repz
jb
xor
inc
in
stos
nop
call
mov
add
mov
add
stos
push
in
ud2
push
cmp
stos
jl
sarb
movsl
add
test
loop
xor
mov
jnp
iret
xchg
mov
inc
test
xchg
es
lods
loope
pusha
ret
in
push
lods
jbe
and
out
lret
mov
inc
in
pushf
add
xor
les
rcr
jl
add
jecxz
jp
xchg
scas
das
fcoml
fcomi
pop
sub
jae
jbe
out
lods
idivb
je
or
mov
adc
pop
push
adc
shr
xchg
mov
lock
insb
inc
and
xchg
mov
mov
or
inc
rolb
xchg
xchg
mov
call
pop
mov
das
push
clc
cmc
adc
push
jecxz
lcall
fildll
cmpsb
add
jae
mov
enter
adc
imul
cmp
je
xchg
xorb
mov
cmc
cmpsl
das
push
inc
push
imull
xlat
xchg
aaa
fldl
fcompl
lcall
mov
mov
sbb
enter
mov
sbb
incl
inc
push
dec
dec
ss
push
or
lcall
out
inc
dec
sbb
stc
rcrb
push
push
cmpsl
inc
ss
loope
jno
jo
fwait
adc
fnstcw
xor
xor
clc
lods
insb
inc
ja
cmp
mov
push
xor
fsts
jo
mov
mov
insl
test
rcrl
ljmp
xchg
outsb
clc
xor
movsb
lcall
adc
mov
cmp
pop
mov
add
cmp
in
mov
push
sub
in
fs
mov
daa
stos
pushf
cmp
lods
mov
in
xchg
mov
dec
fildl
icebp
cmp
cwtl
push
pop
je
sbb
sub
mov
js
lcall
cmpsb
xchg
xorl
xlat
xor
mov
andl
aad
adc
orl
sti
mov
iret
sbb
jg
push
add
inc
xor
enter
xchg
movl
cmp
push
sub
jmp
test
cltd
bound
adc
jp
xchg
pop
insb
out
mov
and
and
lds
pop
mov
out
push
xchg
push
add
call
pop
pop
inc
mov
jge
cli
and
cmp
lahf
add
xor
iret
out
mov
and
aaa
dec
add
and
cmc
mov
dec
scas
push
inc
mov
push
repz
pop
push
imul
andb
mov
test
int3
out
mov
addr16
loop
xchg
into
decl
je
and
arpl
add
dec
and
out
mov
movsl
psubq
js
jp
sar
sub
lret
inc
out
pop
push
inc
jle
fistpl
cmp
push
test
jae
pusha
outsl
call
pop
les
mov
sbb
arpl
xchg
add
mov
sub
jnp
ss
pusha
xor
or
xchg
inc
jle
add
add
adc
pop
cmpsl
stos
xchg
daa
dec
ret
pop
xchg
and
mov
jge
cmp
test
stc
or
test
cli
cmp
cld
mov
mov
scas
xchg
mov
out
jp
and
jg
outsb
sbb
scas
dec
push
ljmp
and
or
fildll
lock
xchg
ret
repnz
cmpsb
js
aam
lret
push
jecxz
xor
or
popa
loopne
jbe
imul
orl
push
js
or
out
mov
into
xchg
mov
mov
loope
idivl
sub
mov
xor
lods
or
outsb
or
jl
dec
sub
scas
push
and
cmp
test
in
mov
repnz
mov
cs
decl
xor
inc
arpl
mov
push
lret
outsl
push
mov
lds
pop
mov
shl
pop
iret
shll
or
adc
pop
xchg
cli
add
inc
or
rorl
lcall
and
mov
test
sbb
js
into
cltd
imul
adc
fimuls
cmp
jnp
push
jno
data16
mov
push
xor
loop
std
xor
mov
sub
adc
imul
arpl
jg
fimuls
xor
mov
pop
sbb
outsb
jmp
xor
test
xchg
or
bound
in
sbb
nop
sahf
nop
mov
sbb
sahf
cmp
repz
fs
int3
cmp
rcl
mov
fldl
repnz
dec
push
cmp
shll
mov
fists
cmc
nop
scas
into
push
pop
mov
pop
int
add
sbb
push
jbe
cmp
lods
xchg
jge
mov
inc
in
or
xchg
mov
add
mov
ret
repz
inc
in
jle
lcall
pop
dec
or
pusha
ror
pop
pop
sub
dec
shrl
aaa
or
sahf
bound
iret
or
fcompl
lds
into
test
mov
movsl
lret
leave
clc
xor
stc
cmc
test
std
adc
insl
dec
mov
xchg
mov
pop
adc
cli
test
mov
imul
imul
sarl
pop
cltd
movsl
pusha
ret
imul
xchg
push
into
jbe
mov
sbbl
jb
adc
mull
imul
push
stos
out
xchg
xchg
or
and
test
sub
popa
add
cmp
in
and
flds
pop
inc
inc
adc
ds
sbb
fldenv
in
and
jbe
shlb
xchg
sahf
movsb
push
pop
div
cltd
leave
adc
cld
jg
sbb
push
adc
loop
mov
loopne
loope
xchg
push
int
jle
xchg
out
and
xchg
xchg
xchg
neg
lret
sub
push
mov
mov
add
je
jecxz
mov
sub
sbb
in
or
and
fwait
adc
test
xor
xchg
add
and
incb
adc
sahf
notl
adc
mov
hlt
jbe
push
ds
lret
fnsave
mov
sub
sbb
jg
sub
cld
dec
lcall
ret
cld
std
xchg
adc
inc
xor
sub
ja
xor
push
pop
int3
ret
xor
xorb
je
add
mov
pop
outsl
adc
xchg
in
pop
push
addr16
mov
jecxz
stos
pushf
jnp
mull
hlt
in
xchg
repnz
and
fbld
repz
cmp
lret
test
push
xchg
into
sbb
in
ds
popa
cmp
xchg
xlat
add
cmp
pop
mov
jo
pop
insl
inc
cmpsb
cmp
pop
and
mov
sub
pop
adc
sbb
sub
xchg
ds
adc
cmp
popa
faddl
lret
cmpsl
call
pop
jmp
loopne
xchg
int
inc
test
shrb
sub
adc
idivb
pop
push
hlt
rdtsc
sbb
cmp
push
out
cmp
movl
or
insl
cmpsb
sti
sub
das
loope
jne
xor
ret
cli
add
dec
pop
sub
pop
ret
inc
fcoms
loopne
fisubrs
lcall
outsl
and
pop
in
ljmp
inc
and
call
imul
cs
and
xor
imul
mov
sbb
inc
jnp
in
jno
std
jmp
sbb
pop
insl
js
andl
inc
imul
gs
sahf
lea
inc
mov
pop
sub
enter
insb
mov
aas
jp
mov
sbb
popa
lcall
lcall
cwtl
pop
mov
mov
jp
popa
dec
cmpsb
inc
pop
mov
xadd
movsb
jno
icebp
mov
adc
push
sbb
iret
das
xchg
outsb
dec
fimull
and
jb
mov
dec
push
push
xor
push
subl
imul
xor
push
mov
es
sbb
cwtl
pop
mov
cltd
cmpsl
mov
xor
xor
or
and
inc
sub
in
mov
sbb
jmp
cmp
das
loope
push
sbb
mov
and
hlt
repnz
xchg
gs
lds
sub
popf
icebp
loop
es
fdivrl
outsb
fnstsw
mov
sbb
mov
mov
fidivs
jl
cmp
dec
dec
mov
aaa
mov
shlb
shrb
dec
sub
insl
lock
lock
mov
xor
mov
daa
mov
in
adc
push
dec
push
out
xchg
test
pop
je
imul
das
mov
lret
adc
orl
lcall
ss
xchg
jne
pop
dec
jmp
testb
mov
lods
adc
jmp
test
sbb
popf
and
repz
jp
popa
jne
xchg
jge
xchg
push
inc
fstps
sbb
mov
pop
insb
out
sahf
loop
aad
mov
push
sbb
test
or
sub
in
mov
cli
mov
mov
mov
notb
adc
aaa
or
sub
mov
shlb
xchg
dec
cli
addb
dec
xchg
in
cmpl
cltd
cmp
push
dec
cltd
mov
push
movsl
pop
jg
mov
lds
mov
cmp
lahf
mov
cmc
out
cmc
popf
mov
outsb
pushf
pop
xchg
pushf
mov
push
js
es
pusha
mov
jne
int3
cwtl
inc
xchg
outsb
push
clc
add
lods
in
xchg
enter
sbb
jbe
pop
sbb
inc
add
flds
inc
xchg
gs
add
inc
cmp
mov
dec
out
adc
mov
ret
sub
xchg
arpl
shll
fs
jae
jne
mov
aaa
outsl
loop
les
imul
gs
adc
or
xor
sahf
sub
push
and
cmp
jno
xchg
pop
adc
dec
and
in
shll
insl
mov
lods
adc
hlt
push
inc
jg
inc
dec
sbb
and
xchg
cmp
and
sub
out
lcall
sahf
out
lods
inc
in
fnsave
pop
addl
imul
lcall
fsubl
xchg
rclb
inc
or
arpl
test
jb
xchg
lds
xor
xchg
jb
test
lea
push
xchg
mov
addr16
inc
sub
inc
jb
or
sub
les
ljmp
pop
int
lea
dec
or
shll
and
xchg
arpl
or
ret
inc
dec
fstpt
jmp
test
sub
and
out
cmpsb
mov
xor
mov
ret
bound
jg
js
xlat
pop
mov
gs
xchg
xchg
xlat
fidivs
ret
decb
xchg
repz
pop
ds
mov
mov
repnz
out
mov
enter
sub
cmp
in
bound
ss
shr
cmp
pop
jb
mov
sti
jmp
adc
daa
loopne
mov
cmp
std
aaa
and
fldpi
add
insl
sbb
insl
cmpsb
cmp
cmpsl
sub
cwtl
jl
es
dec
test
mov
enter
lahf
mov
or
add
mov
or
pop
test
dec
mov
cmpsl
scas
sbb
dec
mov
in
fcomps
sub
nop
sbb
xor
flds
testb
inc
jns
lret
sub
jb
inc
jl
adc
daa
and
pop
adc
mov
dec
cmp
add
das
lret
stos
sub
or
sbb
push
ds
adcl
adc
lcall
mov
or
xchg
push
lret
test
add
movsb
xchg
push
lods
mov
scas
les
jnp
popa
push
cmp
jbe
pop
or
xor
es
xchg
add
mov
jbe
push
cld
mov
fldt
fnsave
dec
xchg
add
scas
inc
or
sar
push
movsb
in
lret
mov
rolb
or
push
aas
lods
ret
mov
push
add
inc
fdivrl
mov
andl
mov
mov
xor
int3
out
dec
fs
loope
mov
push
add
lods
jg
lods
shrb
stc
inc
popa
jg
pop
pop
lret
gs
fistps
mov
sub
lods
mov
xchg
add
jmp
cs
idivb
push
xchg
sub
and
add
ret
push
addb
adc
out
lock
icebp
out
cmpsl
rcrl
push
out
cmp
jb
dec
rolb
ds
inc
out
adc
ljmp
pop
ds
iret
cltd
dec
into
stc
fwait
lock
clc
jno
push
cmp
shrl
fucomi
aas
ljmp
jns
inc
insb
in
fimull
shrb
lret
pop
shll
out
nop
xchg
test
loope
xor
push
stc
lcall
inc
shl
ss
call
lahf
movsl
sub
data16
xor
lods
cmp
jp
add
imul
push
fildl
pop
mov
ret
adc
test
sahf
js
xchg
movsl
inc
pop
sbb
dec
mov
lods
stos
data16
and
xchg
mulb
nop
pop
jnp
mov
add
mov
adc
pop
jmp
sub
clc
cs
xlat
and
add
mov
test
adc
and
lock
sub
push
jbe
lea
adc
fstpl
aaa
mov
pop
and
mov
push
jae
mov
icebp
divl
pop
rolb
or
in
dec
mov
out
ds
imull
je
testb
add
stos
jb
lcall
cwtl
or
jge
pop
cld
xchg
jmp
out
pushl
shlb
je
xchg
fimuls
ficomps
ljmp
or
cli
daa
or
and
out
inc
iret
mov
fucomip
dec
aaa
scas
outsl
dec
and
or
sbb
ljmp
mov
mov
add
insb
int
push
shlb
jle,pn
pop
sub
mov
dec
fdivl
sub
mov
scas
inc
jmp
xor
or
jno
repz
push
addr16
cs
mov
xchg
or
fstpl
inc
fmuls
jo
mov
cltd
mov
mov
add
pop
mov
mov
imul
imul
or
cmpsl
add
insl
insl
aad
dec
div
fwait
in
adc
and
xchg
repnz
sti
test
xor
jbe
dec
jo
icebp
push
in
push
cmp
aam
sbb
ret
fstpt
and
out
notb
sub
bound
shl
outsb
push
mov
cmp
fnstsw
fstl
mov
and
and
lahf
mov
dec
cmp
mov
shll
mov
icebp
test
stc
call
mov
adc
movsl
test
cmpsl
mov
dec
adcb
fnstenv
mov
jp
das
mov
out
in
jnp
add
nop
or
es
adc
arpl
pop
jae
inc
adc
xchg
pop
mov
nop
cmpsl
add
sbb
repz
subb
out
test
js
pop
xor
xchg
or
cmp
outsb
and
or
test
test
mov
test
fsts
test
clc
xor
cmp
out
data16
pop
xor
xchg
mov
inc
or
xchg
cltd
push
loop
mov
push
or
add
je
iret
outsl
fwait
mov
add
lds
push
lret
mov
sub
inc
push
scas
test
pop
lcall
ljmp
lret
and
cwtl
sbbb
xlat
add
xor
test
xor
dec
mov
mov
pop
jmp
inc
addr16
insl
cmp
sub
leave
arpl
or
adc
popf
outsl
mov
and
jmp
xchg
or
loop
stos
int
sub
jbe
mov
cmp
mov
pop
xor
rorl
les
scas
mov
mov
sub
push
cltd
or
dec
sbb
cs
mov
orl
dec
xor
cltd
pop
cwtl
mov
adc
xor
int
pop
add
ret
jp
ret
adc
mov
cmp
daa
out
shll
sti
add
push
incb
lea
push
orl
sbb
and
inc
inc
addb
cmp
xchg
mov
or
xor
mov
pusha
add
subb
xorb
jge
jl
pop
mov
xor
mov
loopne
adc
xorb
xor
mov
sbb
and
gs
scas
add
repz
dec
xlat
mov
inc
mov
stos
aaa
add
cmp
sbb
xchg
jge
in
cs
mov
xor
mov
dec
lret
movsb
decl
bound
xor
cmp
xor
lds
in
loopne
or
push
mov
lahf
fidivrs
leave
mov
mov
cmpsl
jmp
roll
push
mov
push
push
adc
xchg
ds
rclb
mov
outsl
jae
dec
jbe
jp
and
scas
pushl
xchg
lret
insl
and
lret
jl
imul
mov
leave
pop
mov
or
ja
cmp
arpl
iret
test
pop
dec
movsb
arpl
cmp
aaa
in
in
rclb
scas
or
adc
out
push
cmp
cli
and
xlat
insl
movlps
icebp
mov
movsb
pop
rol
shll
in
mov
mov
jmp
push
imul
mov
xchg
cmpsl
aaa
fisubs
in
movsb
js
cmp
mov
inc
xchg
jnp
mov
adc
jno
pop
pop
inc
dec
fcoms
xchg
stc
test
stc
pop
lds
xlat
jmp
sahf
mov
out
mov
adc
imul
or
add
sub
negb
jns
lahf
pop
push
lea
je
push
addr16
cmpsb
inc
loop
sbb
mov
fcompl
imul
xor
fnstenv
lea
dec
jb
inc
cli
push
decl
sbb
in
cmp
out
sbbb
jl
mov
fidivrs
icebp
out
cld
push
and
fcomip
ja
mov
pmaxub
les
xchg
aas
adc
push
add
cmp
or
out
sbb
xor
popf
sub
stos
cmp
out
inc
mov
movsb
cltd
imul
enter
adc
imul
jnp
jb
ja
inc
sub
cmpsl
shll
jp
sub
sub
push
lock
pop
fdivrs
mov
jbe
and
and
ror
add
mov
out
inc
lahf
and
adc
jno
push
out
adc
les
dec
in
dec
fwait
out
pushf
adc
and
popf
pop
fwait
and
sub
das
cmpsl
cmc
adc
fwait
sub
ja
jnp
call
cmp
inc
dec
sub
inc
xor
fisubs
push
dec
addr16
loopne
xlat
dec
sbb
jecxz
push
or
pop
test
out
pop
fsqrt
mov
insl
in
jmp
cmp
shl
int3
sub
cmp
push
bound
cmp
or
flds
push
loope
pushf
add
loopne
mov
lcall
xlat
mov
out
dec
outsl
iret
mov
ret
iret
cmp
je
mov
iret
jb
push
leave
roll
icebp
mov
stos
out
fstpt
cmpsb
lcall
sbb
pop
xchg
dec
in
jns
push
xor
jl
ret
scas
test
test
mov
fstl
dec
mov
xchg
mov
ss
dec
and
arpl
loop
in
shrb
rclb
arpl
decb
ljmp
imul
sbbb
mov
fwait
mov
adc
ja
push
xchg
cmp
outsl
push
jecxz
aam
mov
push
cwtl
pop
dec
mov
enter
fldl
sbb
test
cmp
repz
add
nop
test
mov
jo
scas
rolb
mov
dec
xchg
jmp
push
pop
or
jbe
push
xor
lea
bound
dec
scas
cs
and
pop
cmp
add
test
es
repnz
sbb
arpl
in
lea
call
adc
sbb
mov
jmp
cmp
or
inc
insb
sub
lods
pop
xchg
sbb
xor
push
cmc
xorb
push
clc
leave
vpaddsw
lds
lods
or
je
add
dec
out
sub
xlat
gs
cmp
stos
push
aam
pop
clc
fdivrl
or
xchg
cld
sbb
dec
insb
scas
jmp
out
sarl
fiadds
lahf
xchg
push
push
xchg
fcoms
aas
scas
lea
aas
inc
loop
ljmp
pop
adc
mul
mov
shrb
stc
dec
cli
clc
mov
mov
stos
out
pop
pop
dec
xchg
mov
xchg
stos
stc
xchg
sub
inc
or
sub
arpl
cwtl
ja
jp
pop
cs
movsb
call
in
jge
cmp
int
inc
pop
loope
fstps
test
mov
pop
stos
mov
mov
shll
and
dec
loope
jo
pop
stc
mov
mov
jp
mov
mov
or
pop
enter
mov
jg
lcall
mov
sbb
mov
sub
push
xor
pop
and
adc
lods
mov
ss
pop
xchg
pop
jb
mov
jnp
cli
jae
test
mov
cmp
in
mov
mov
mov
pop
aad
pop
add
js
sbb
inc
sbb
popf
out
loop
int3
std
or
lds
mov
in
cmp
pop
lds
fsubrp
push
mov
into
popf
fstl
lods
cmp
dec
mov
cmpsl
xor
sbb
jne
mov
mov
jae
psubq
out
out
xchg
sbb
nop
mov
sub
add
imulb
cmp
mov
pop
lock
xorb
repz
in
sbbl
cs
jo
or
or
lea
inc
mov
dec
xor
cmpsl
cmpsl
jl
pop
mov
and
and
add
push
idiv
mov
jg
dec
pop
mov
push
push
les
sbb
subb
loopne
aam
clc
inc
les
mov
jbe
iret
xorl
aaa
xchg
mulb
ror
fmuls
mov
lock
aas
xor
clc
es
push
into
cld
pop
clc
mov
add
nop
add
sahf
mov
inc
negb
mov
out
jno
pop
ss
into
mov
mov
fbstp
es
pop
adc
mov
inc
lock
lcall
sbb
jmp
cmc
cmp
out
add
xor
adc
xor
xchg
fldenv
stos
fwait
icebp
sub
and
imull
fwait
out
lods
pop
xorl
fcmovne
dec
sub
ret
sarl
test
imull
decb
jl
sub
xchg
or
adc
inc
popf
jg
jecxz
int3
adc
cs
sbb
xor
add
mov
in
inc
sbb
testl
lret
lock
in
jbe
jbe
sub
inc
leave
ds
mov
adc
add
mov
xchg
cmp
mov
or
ds
in
sbb
outsl
cmc
dec
hlt
and
orb
inc
mov
in
adc
xchg
repz
fidivrs
bound
fsubp
popa
mov
sahf
cltd
mov
cmp
fidivl
adc
inc
adc
xchg
lods
stos
xchg
cli
inc
cmpsl
aad
mov
cmpsl
jmp
inc
jnp
mov
loope
fbld
dec
add
push
sbb
and
orl
sub
orl
stos
push
push
xchg
in
cmp
enter
mov
pop
xor
inc
lods
sbb
or
in
mov
mov
or
pop
cmpsl
jnp
cmpl
in
out
leave
rep
sub
sub
ret
sub
and
mov
cltd
shrb
jo
and
jno
arpl
and
push
mov
cmp
jo
call
push
mov
mov
out
xchg
xor
fmuls
sub
or
dec
dec
ret
xchg
xor
lret
jne
add
sti
lcall
jbe
rorl
imul
les
push
mov
cmp
lods
aam
out
pop
push
inc
pop
and
lret
enter
data16
and
add
cltd
scas
mov
movw
add
xlat
cmp
pushf
fcompl
cmpsl
xchg
dec
cmp
mov
or
int
inc
mov
jmp
mov
jbe
fsubrl
mov
repz
push
jno
dec
mov
and
fwait
andl
rolb
xchg
cmp
and
mov
mov
out
addr16
sub
mov
cld
push
andb
push
adc
stc
lcall
incb
sbb
or
mov
dec
test
jl
call
cmpsb
lret
int
cltd
lret
push
outsb
push
jmp
cmp
sub
sbb
fstl
dec
lods
lods
scas
iret
loop
and
cwtl
cld
pop
rcr
popf
out
inc
jae
push
sub
repz
rorb
xchg
stc
lods
adc
and
das
inc
cltd
outsb
and
iret
leave
push
mov
pop
ret
ret
xchg
call
aad
stos
and
popa
pop
fmul
or
xor
das
push
pop
sub
cmp
cmp
push
nop
call
lds
mov
jg
ret
mov
sbb
out
mov
push
fistpl
lcall
scas
lret
sub
mov
ja
aad
imul
enter
dec
adc
cmp
cmp
mov
sub
ss
in
adc
xchg
packsswb
add
jle
or
fildll
test
sub
fs
imull
cmc
in
lret
cmc
popa
sbb
ljmp
adc
dec
insb
mov
or
jg
pop
xor
or
sub
fldl
lea
gs
shrb
add
xor
shll
mov
adc
xchg
push
xor
js
fwait
popf
xor
mov
int3
mov
fildl
dec
jge
neg
aam
xchg
scas
and
into
mov
or
adc
add
jbe
xchg
std
and
mov
inc
test
int
push
scas
dec
push
and
notb
xor
jno
xchg
cs
inc
scas
dec
bound
out
mov
cltd
or
les
add
ljmp
sbb
pop
sbbl
movsb
cli
cmc
mov
push
sahf
xchg
adc
mov
add
pop
inc
mov
scas
fsubrl
jns
insb
lods
in
dec
xchg
inc
dec
pop
add
push
xchg
pop
bound
cmp
mov
sub
or
cmpsb
sbb
xor
push
xor
cmp
jne
cmc
push
sbb
arpl
fildll
pop
in
mov
ficoml
jae
loope
mov
or
add
scas
lret
jbe
mov
jmp
pushf
arpl
out
sbb
cmpsb
sub
cli
ljmp
test
jbe
fdivl
lea
bound
and
stc
fidivrl
ret
inc
jns
and
aas
sbb
xchg
mov
add
mov
sub
aas
arpl
or
scas
xchg
aam
shlb
mov
fwait
mov
xchg
push
cmp
and
cmp
loope
cli
xchg
push
repz
or
xor
repnz
clc
push
pushf
outsl
dec
xlat
xor
dec
mov
xchg
cwtl
pop
mov
jbe
mov
das
out
cs
jae
inc
mov
jne
jne
scas
sub
and
mov
mov
lahf
jge
lret
shr
fisttps
cli
insb
insl
ret
cwtl
inc
mov
lea
je
es
dec
jbe
popf
leave
mov
xchg
inc
push
sahf
adc
adc
mov
fmulp
mov
int3
pushf
jbe
mov
fbstp
scas
jb
pop
cmp
incb
jge
ret
fstp
push
mov
lcall
xchg
in
sbb
jle
xlat
mov
fistl
mov
mov
push
pusha
into
outsb
mov
mov
adc
enter
mov
sbb
outsl
ljmp
add
mov
fcom
inc
or
ja
bound
mov
test
popa
mov
or
dec
mov
jno
dec
push
sub
lock
es
pop
jb
pop
mov
sub
fdivs
pop
cmpsl
xacquire
add
xor
inc
arpl
lds
mov
daa
or
sahf
and
jb
mov
cmpl
jbe
sbb
addr16
ret
loopne
sti
xor
clc
nop
xor
imul
push
pusha
xchg
or
aas
repz
mov
popf
add
fimull
sbb
add
push
sub
inc
sbb
sub
pusha
dec
pop
fsubp
sbbb
pop
inc
mov
inc
xchg
fbld
inc
jl
lcall
add
sarb
xor
push
xchg
adc
cmp
push
test
insb
int
mov
pop
roll
fidivrl
rcll
add
sti
leave
cmp
bound
lods
sub
sbb
addr16
or
dec
cmc
add
push
jbe
out
les
popa
or
shlb
push
sub
inc
cwtl
push
bound
push
jl
leave
cmp
jmp
add
divb
lahf
lahf
das
mov
push
mov
push
push
dec
xchg
sbb
test
ds
je
shlb
fadds
add
or
loopne
fisubs
loopne
add
aam
mov
imul
cwtl
mov
or
xchg
cmp
lods
mov
addr16
adc
jne
adc
dec
shlb
lods
sbb
push
sysenter
jbe
jl
js
bound
xor
dec
sub
mov
cs
negl
xor
add
xchg
pop
aaa
call
in
push
jno
push
xor
lret
mov
push
sarl
cld
std
fstps
lods
mov
cld
lock
in
fisubrl
movsb
inc
out
aam
cmpb
in
sub
outsl
sub
sub
outsl
in
and
adc
in
in
mov
je
ror
add
push
out
das
cmp
outsl
in
ja
or
pop
mov
insl
push
jbe
hlt
xchg
jno
mov
ja
inc
ret
push
mov
test
test
mov
call
loope
or
jmp
cmp
fstps
or
movsl
xchg
jp
xor
xor
fcoms
xor
dec
bound
mov
xor
dec
stos
dec
imul
pop
pop
int3
add
sub
in
xor
rclb
scas
ds
xchg
fbld
loopne
xchg
cld
popa
scas
ja
xchg
pop
or
xchg
adc
pop
or
iret
jp
mov
mov
repnz
mov
push
mov
adc
call
push
mov
mov
sub
push
cli
cwtl
inc
nop
xchg
or
cli
iret
aad
and
xchg
shlb
jmp
clc
pop
adc
popa
std
sub
pop
lret
mov
mov
xchg
push
fiadds
mov
outsl
mov
inc
notb
ds
lock
jb
int
adc
dec
ljmp
in
sarb
nop
jne
add
lret
js
add
incl
and
or
sub
fs
ds
fwait
mov
push
movsb
jb
sti
ret
ret
ljmp
es
popf
or
inc
jno
test
xchg
xchg
jnp,pn
pop
dec
sbb
pop
lcall
in
out
push
mov
nop
rolb
into
adc
jns
movsl
cmp
and
in
iret
pop
les
jp
dec
mov
icebp
pop
popa
enter
adc
lods
cmp
inc
aas
add
leave
xchg
sub
push
out
inc
push
data16
lret
insl
dec
or
jae
insl
mov
lea
or
inc
stos
cmp
sti
scas
pop
icebp
xor
sub
inc
pop
mulb
imul
adc
or
sub
call
sbb
mov
lods
xchg
xor
frstor
ret
xchg
movsl
outsl
lahf
lret
lret
pop
loop
inc
scas
scas
pop
push
pushf
das
adc
ret
in
sbb
addr16
cmc
mov
loopne
push
xchg
loop
data16
daa
and
cwtl
addb
shlb
js
pop
outsb
jg
mov
pop
arpl
jb
jle,pt
lods
xchg
aad
and
push
adc
add
dec
xchg
dec
das
imul
rorb
pop
in
dec
lock
cli
jae
cltd
xor
xchg
stc
or
xor
inc
roll
mov
fs
pop
adc
xchg
jge
movsb
dec
arpl
pop
cli
addr16
ret
jne
mov
or
sbb
fildll
sub
xchg
pop
incl
fwait
dec
leave
es
cmp
bswap
pop
mov
jge
movsb
push
ja
shlb
jle
jne
push
dec
push
int3
testb
ret
lret
loop
lret
lods
shl
pop
stos
or
xlat
lds
mov
xlat
aam
adc
ljmp
mov
lcall
sbb
and
dec
xchg
xchg
icebp
or
mov
mov
cmp
notrack
adc
repnz
out
bound
sbb
lods
lock
xor
jne
sbb
xchg
sub
sub
mov
aad
xor
mov
rcl
sub
push
push
std
mov
or
jmp
stos
subl
shrb
pushf
ja
mov
roll
or
inc
xchg
les
xchg
push
arpl
pop
mov
xor
test
repnz
imul
dec
lock
jecxz
movsb
mov
xor
clc
aaa
jb
enter
lret
mov
cmp
mov
adc
xchg
cltd
push
jmp
and
rolb
jno
and
out
mov
cli
cs
sbb
testb
dec
mov
mov
inc
push
cld
push
inc
ret
or
aad
decb
lret
lds
mov
push
mov
test
iret
orb
push
mov
cltd
add
jp
jl
mov
xchg
mov
lods
mov
mov
sub
fstps
ret
inc
fidivrs
jle
jnp
mov
out
inc
fimuls
mov
pop
or
daa
in
sbb
dec
push
in
into
insl
or
add
and
sar
mov
lods
push
inc
das
sub
dec
xchg
sub
iret
repz
sar
pop
pop
decb
hlt
fucomp
adc
in
push
clc
scas
loope
cmp
push
cli
xchg
mov
arpl
sub
xor
out
mov
lods
repnz
sbb
cmp
lods
pushf
mov
sub
xchg
in
or
lcall
test
push
mov
popa
int3
es
inc
push
add
pop
sub
push
int
jg
xor
popf
in
and
jmp
sar
mov
cmp
bound
lods
cmpsl
in
les
repnz
push
and
jmp
mov
out
or
lea
pop
or
push
and
push
mov
and
pusha
mov
in
test
test
jle
pop
dec
add
shrl
mov
daa
cmp
xor
call
or
or
nop
inc
dec
adc
mov
negl
jae
xchg
pop
push
adc
pop
pop
int3
adc
jb
lahf
dec
cwtl
in
adc
shlb
test
cmp
mov
mov
ljmp
xor
add
sti
imul
xchg
jg
ret
test
xchg
cli
or
jnp
mov
jne
or
enter
nop
arpl
pop
xor
mov
cmp
jle
mov
lock
icebp
xchg
and
push
xchg
jno
mov
out
daa
pop
mov
or
dec
mov
sbb
lahf
scas
mov
jnp
push
outsl
xchg
sbb
adc
add
mov
add
inc
sbb
popf
adc
notl
insb
cmp
daa
cmp
fldl
ja
loop
stos
push
dec
xchg
sar
mov
mov
enter
jae
sti
xchg
push
inc
or
into
add
imul
cmp
mov
mov
jne
xchg
mov
lcall
out
push
push
push
adc
pop
or
in
fsts
movsl
or
scas
test
push
xchg
call
dec
xor
gs
jecxz
sti
vpshuflw
sub
mov
add
mov
jns
jecxz
popa
mov
cmp
ja
in
mov
lea
cmpsl
fidivrl
inc
push
inc
xor
cmp
arpl
pusha
out
dec
nop
sbb
fldcw
cmp
jo
popa
cmp
lds
dec
insb
mov
xor
shr
jmp
repz
jg
pop
cmpsl
pusha
scas
pop
cmpsl
or
data16
pushf
add
cmpsb
xchg
jle
gs
insl
push
imul
sbb
insl
pushf
pop
sbb
dec
cmp
lahf
sar
out
xor
push
xchg
fisubs
dec
inc
sub
xor
xlat
addr16
in
add
imul
and
and
lods
sub
cwtl
repnz
aas
daa
imul
shrb
ljmp
leave
aad
jns
add
lret
jge
push
jmp
stos
ds
sub
push
je
iret
aam
testl
push
pushl
aaa
into
xchg
addr16
outsb
vorps
adc
jmp
mov
pop
lcall
popl
gs
lret
pop
lea
cmp
fs
or
xchg
roll
inc
sub
jne
sub
push
inc
add
cvtps2pi
sbbb
push
jns
ret
mov
or
xchg
sub
lcall
inc
jne
js
pop
inc
addr16
lods
xor
movsb
inc
or
punpckhdq
movsl
das
loopne
divb
pop
pop
and
mov
push
sbb
xor
mov
inc
loope
pop
movsl
mov
mov
jmp
ljmp
inc
add
imulb
jg
out
sbb
add
icebp
mov
inc
pop
popa
or
jmp
sub
ret
sbb
outsb
bound
test
or
cli
inc
loop
xchg
sub
inc
pop
jne
push
sub
push
push
dec
in
or
push
jbe
xchg
sbb
sbb
outsb
stos
xchg
add
sbb
lahf
xlat
enter
stos
aad
das
sub
sahf
pop
jge
repz
daa
lcall
fldcw
mov
cwtl
pop
in
jle
fidivrs
mov
jg
xchg
mov
dec
stc
xchg
mov
pop
lret
cmp
std
mov
jnp
aam
popa
sub
mov
mov
iret
ja
push
clc
ja
imul
fbstp
sbb
stos
xchg
sub
inc
and
lret
iret
cmpsb
dec
jno
repz
andl
push
push
call
and
inc
cli
push
push
lds
mov
xor
dec
je
in
xchg
inc
bound
out
arpl
dec
push
add
jle
lahf
pop
push
lret
dec
inc
out
add
std
mov
stos
xor
mov
nopl
iret
in
out
repnz
cmp
mov
push
adc
fcompl
xchg
sbb
dec
daa
xchg
inc
mov
mov
pop
sbb
adc
call
in
roll
and
sbb
lahf
sbb
and
mov
stos
arpl
and
pushf
pop
xor
dec
dec
push
fistl
add
inc
xor
jae
inc
std
adcl
pop
rcrb
sbb
dec
std
jp
or
and
pusha
cmp
in
nop
mov
loop
mov
pop
repnz
je,pt
rolb
adc
add
outsl
sahf
inc
sub
sub
inc
adc
in
lock
sbb
xchg
ljmp
mov
daa
adc
sub
adc
fwait
in
std
sub
stos
pop
cld
mov
icebp
ret
mov
jecxz
mov
jo
cmp
adc
xchg
in
mov
rcll
mov
lock
ret
enter
or
xchg
jne
push
jp
call
fcoml
mov
or
mov
pop
int3
xor
xorb
jnp
pop
xor
lea
sti
xchg
fwait
xchg
add
daa
xchg
mov
pop
sahf
push
jns
mov
inc
call
pop
or
dec
es
adc
js
add
sbb
cmc
push
push
or
mov
into
jp
lock
fnstenv
lahf
aas
stos
xor
mov
cltd
lock
pop
mov
ret
hlt
es
gs
xlat
leave
or
cltd
jns
pop
mov
lcall
pusha
lock
mov
adc
pop
ret
mov
mov
dec
dec
and
add
idivl
cmp
int
adc
fimuls
in
mov
imul
or
lahf
repz
lock
icebp
lss
cltd
out
adc
sahf
push
inc
xor
pop
inc
or
repz
inc
jp
add
lret
cmp
xor
iret
test
lret
dec
test
jecxz
mov
les
cs
add
jnp
out
outsb
jle
cmp
fdivr
push
ja
js
dec
fiaddl
ret
fists
dec
mov
jp
movsl
adc
sbb
imul
dec
out
ret
jl
sub
stos
add
or
test
add
mov
cmp
fcmovnbe
fistpl
jne
out
xor
push
pop
cmp
push
lret
pushf
popa
scas
jno
pop
xchg
mov
cmp
push
or
gs
lret
cmpsl
jle
shr
add
push
lods
pop
data16
loope
add
sub
stos
aaa
addb
push
jp
int3
test
out
out
into
stos
adc
pop
push
adc
stos
jl
sub
jg
xorl
divl
pushf
js
xchg
mov
dec
sub
adc
mov
jecxz
jae
ljmp
lods
mov
or
sub
inc
xor
mov
faddl
push
out
incb
loope
cli
adc
lahf
inc
cli
adc
xor
jge
sbb
decb
std
cmpsl
sbb
push
out
mov
sbb
mov
push
mov
or
mov
repz
add
mov
push
or
mov
ja
lret
mov
fadds
push
pop
mov
jg
xchg
mov
in
inc
push
inc
in
dec
ret
mov
lret
sbb
push
insl
xor
mov
push
sub
pop
cmp
pop
xchg
push
ds
dec
push
bound
fisubs
sbb
cmp
fwait
jnp
fnstsw
jle
bound
xchg
mov
sub
loopne
xorb
push
inc
dec
mov
je
test
pop
daa
sub
lock
scas
aaa
jp
fwait
push
rorb
pop
pop
in
out
xchg
cmpsb
cmpsl
dec
loope
jbe
add
leave
mov
mov
xchg
hlt
popa
pushf
cmc
jl
iret
call
add
sub
ret
cmp
adc
push
pop
mov
scas
int
dec
pop
adc
jne
dec
inc
outsb
dec
pop
pop
clc
mov
cs
xchg
mov
xchg
aad
adc
fidivl
jne
or
movsb
inc
sub
stc
pop
mov
rolb
enter
or
rcrb
inc
or
or
gs
out
insl
and
addr16
xchg
rcrl
leave
xor
ret
push
andb
outsl
int
xchg
aad
cmp
popa
ret
lea
sbb
jo
jae
adc
cmp
lds
xor
ss
mov
mov
sub
jbe
sub
push
or
push
scas
and
lahf
ljmp
sub
sahf
inc
add
fcompl
mov
adc
lds
test
call
out
cmc
mov
cmpsl
insb
mov
xchg
cwtl
fs
or
iret
add
jns
mov
fnstsw
cmp
adc
dec
stc
call
jno
mov
ret
inc
ror
out
addr16
subl
xchg
arpl
lahf
outsl
ror
sbb
or
rolb
or
adc
mov
cmp
imull
dec
mov
push
lea
adc
xchg
or
jge
and
push
aaa
insb
lock
sarb
lock
xlat
gs
sub
jg
and
fisubl
hlt
decl
imul
mov
rcrb
cli
sub
lahf
imul
test
dec
and
adc
fidivl
jno
push
jmp
inc
jle
arpl
cld
or
iret
mov
dec
jmp
mov
imul
test
add
jmp
jmp
cmp
in
add
fwait
nop
pop
jp
sar
fnsave
idiv
in
hlt
flds
mov
fsubl
mov
pop
popf
cmpsl
mov
daa
arpl
adc
jp
sub
stc
movsl
stos
popf
aaa
pop
adc
lds
ss
cmp
adc
test
sbb
decb
hlt
in
xor
adc
stos
cmp
jne
xchg
nop
pop
bnd
mov
cmp
ja
push
adc
fwait
movsl
nop
mov
cmc
jg
hlt
pop
add
out
in
xor
xchg
push
pop
sarb
mov
pop
inc
iret
jnp
mov
add
adc
leave
push
add
mov
test
rorl
mulb
std
adc
inc
les
cmp
lret
jl
cmp
or
pop
sbb
cwtl
or
cmpl
dec
xchg
or
push
ret
rolw
inc
pop
inc
jae
pop
test
loope
inc
dec
jmp
jmp
xlat
mov
or
and
push
push
mov
xchg
out
cld
into
addr16
and
xor
insl
test
mov
mov
jp
ret
dec
cli
xor
ret
cwtl
pop
push
inc
mov
adc
push
mov
xor
pop
inc
push
jmp
dec
xor
jmp
dec
inc
cmp
in
into
xor
rcr
mov
sbb
or
mov
push
xchg
js
fmuls
cmpsl
xor
hlt
inc
test
int3
jnp
movsb
ds
ja
jbe
push
pop
add
imul
aad
movsb
daa
or
pop
jbe
push
clc
or
add
jle
pushf
pop
imul
dec
xor
test
fisttpll
inc
push
outsl
loopne
cmpsl
cmp
sbb
scas
dec
or
adc
xor
pop
arpl
sub
ret
sbb
shll
xor
and
push
imul
scas
in
ljmp
or
out
cmpsl
mov
mov
or
cmp
pop
sti
ljmp
cs
insl
inc
dec
adc
add
nop
popa
bound
stc
push
inc
divb
addr16
mov
jle
into
rcrb
push
out
movsl
pop
rorb
mov
testb
ss
ljmp
or
mov
xchg
cltd
sarl
ja
out
jle
or
fcompl
pop
sub
and
mov
fisubrs
mov
xor
pusha
sbbb
cld
or
cs
or
sbb
cmpsb
or
sub
imul
cmpsb
bound
pusha
dec
imul
ljmp
add
inc
icebp
lret
sbb
pusha
lock
cmpsw
xchg
enter
frstor
mov
add
mov
jg
or
dec
pop
loopne
sbb
jp
cs
sub
inc
mov
adc
xor
fimuls
test
mov
outsl
fadd
jmp
mov
clc
mov
mov
pop
loopne
icebp
lock
pop
jb
fcom
pushf
and
push
xchg
outsb
mov
xlat
insl
into
and
xor
aam
in
pushf
push
lret
mov
push
push
fnstsw
fcmovu
sub
xchg
jp
jno
and
in
aam
pop
add
lea
and
cmpsb
pushf
adc
mov
xchg
add
aad
xlat
sbb
rep
cltd
jnp
push
add
shll
rorl
clc
insb
jo
sbb
cmp
cmp
frstor
cmp
icebp
jne
or
insb
push
aam
or
sub
jmp
sbb
push
lret
pusha
ret
rol
stos
push
jno
xchg
sbb
jns
pop
lret
sbb
std
lods
jp
pop
into
mov
into
xchg
idiv
fisttps
arpl
cld
lahf
out
cmc
jno
scas
or
movsl
sbb
add
je
into
loopne
lret
push
test
sub
mov
pop
and
sbb
push
in
lahf
es
outsb
bound
lods
jp
aad
out
in
mov
pop
stos
jmp
aam
jp
sar
cmp
das
aaa
adc
mov
lock
jo
inc
ljmp
bound
lea
mov
xchg
aam
or
jmp
jg
add
or
dec
sub
gs
loope
push
cmpsb
sub
shl
xchg
loope
movsl
adc
sbb
or
pusha
xor
mov
daa
jmp
inc
stos
sbb
mov
loope
cwtl
cld
cltd
push
push
push
out
inc
cmp
outsb
sub
das
in
and
add
pop
mov
loop
xchg
pop
or
jo
sub
cmp
xor
sbb
or
ja
jg
pop
adc
sti
fsubs
test
mov
es
sbb
mov
xchg
es
faddp
cltd
or
cli
lahf
xor
das
scas
ss
jae
call
cmp
mov
lods
pop
pop
pop
push
stc
sub
push
idiv
loop
xchg
daa
nop
push
inc
jge
movsb
inc
inc
or
pop
cmpl
fucomp
jle
aam
or
dec
outsl
pop
daa
and
pop
xor
cmp
iret
test
xbegin
dec
cmp
hlt
or
push
and
mov
sbb
xchg
imul
push
test
push
mov
dec
sbb
add
sbb
pop
adc
sub
pop
daa
pop
cmp
adc
call
fnstcw
mov
mov
dec
dec
dec
jae
sbb
ds
inc
push
inc
pop
or
xchg
rcr
imulb
aad
jl
push
pop
enter
add
mov
sbbb
dec
lock
fwait
hlt
test
inc
fisttpll
and
pushf
xor
sub
repz
and
push
test
movl
dec
push
scas
mov
lds
add
and
outsl
mov
sbb
sar
lds
push
inc
jl
pusha
movsl
es
test
ja
shrl
cld
shrb
out
cwtl
jecxz
sub
push
cmp
mov
scas
pop
cmpsb
mov
cwtl
idivl
mov
nop
jo
jns
xor
aas
mov
clc
xchg
aas
lret
imul
out
adc
push
mov
xorb
scas
mov
scas
lea
adc
pop
mov
and
dec
sti
nop
xchg
inc
xor
dec
push
mov
out
mov
sar
test
push
stos
pop
mov
aaa
dec
cmpsl
jb
and
mov
test
mov
jmp
into
sbb
in
cmpb
mov
xor
jnp
cmp
fstpt
repnz
sub
xchg
leave
cmp
cmp
jno
pop
xchg
cltd
xlat
out
cmp
push
cmpsl
push
lret
or
outsb
lahf
jmp
add
and
addr16
mov
push
adcl
repnz
icebp
mov
scas
xchg
mov
lret
shlb
adc
jae
adc
add
mov
stos
inc
mov
dec
stos
je
insb
cwtl
lcall
in
dec
mov
or
xchg
push
or
call
pop
fcomps
fs
in
out
scas
or
ret
test
adc
cmpsl
mov
lods
movl
insl
dec
sbbb
xor
or
out
enter
push
fsubrs
pop
mov
sbb
and
jb
sub
and
pop
sahf
inc
ret
fistps
inc
loopne
outsb
movsb
hlt
cmp
arpl
mov
push
add
js
jge
hlt
popf
add
shll
cmc
add
sbb
jbe
out
stos
cld
xlat
insl
and
xlat
push
nop
aam
push
rcrl
sbb
xor
outsl
xchg
xchg
mov
faddl
in
aaa
xor
xchg
dec
aaa
cmpsb
jecxz
enter
scas
mov
fsub
mov
cmp
sub
dec
push
adc
mov
imul
push
aam
fidivs
cmp
sbb
addr16
and
jno
mov
arpl
xchg
push
pop
cmp
push
mov
push
fmul
add
in
jns
hlt
adc
jge
lods
or
int3
sub
daa
enter
mov
jnp
shll
outsb
inc
out
enter
or
ret
test
push
dec
sub
lret
dec
in
sbb
stos
jne
xchg
test
test
mov
inc
mov
push
pop
or
psrld
clc
xchg
jo
cwtl
add
mov
mov
popf
push
add
mov
shr
ja
fldt
hlt
in
inc
out
movsl
inc
jl
xchg
lds
js
pop
cli
jne
inc
adc
mov
or
xor
dec
popf
fnstsw
ljmp
jmp
jmp
push
xchg
inc
leave
or
arpl
daa
add
push
es
push
mov
iret
aam
repnz
enter
out
popf
push
adc
adc
push
xchg
popa
sbb
cmp
adc
pushf
stos
fs
jl
push
adc
and
leave
pusha
aas
mov
out
out
sti
push
test
sub
ficoms
push
js
lock
push
xchg
std
pop
cmp
and
xchg
ret
mov
and
push
inc
sub
test
push
xor
sarl
mov
sub
aas
sti
and
or
push
cmp
sar
sub
and
fcmovb
jl
fsubl
cmp
fmull
sbb
xchg
inc
push
dec
pop
jo
push
pop
push
mov
es
inc
ja
pop
cmp
ret
lea
jnp
scas
mov
mov
pushf
cmp
mov
sbb
sub
jge
lret
inc
cli
ret
or
dec
es
fwait
add
lods
cmpsl
sahf
jle
mov
test
cwtl
jp
movsb
test
and
push
push
rcrl
xor
sbb
push
fcomip
xor
std
fs
jnp
sbb
jge
xor
jle
cltd
shlb
push
dec
mov
nop
dec
sub
outsb
inc
push
lret
push
mov
mov
push
lcall
pop
fwait
dec
and
and
jb,pt
jle
dec
adc
mov
mov
imul
and
and
cmpsl
xlat
jno
pop
testb
hlt
rcrl
sub
jbe
sub
dec
lret
sbb
dec
es
jns
sub
or
in
outsl
iret
mov
int3
mov
lock
lahf
sub
int3
xchg
mov
in
int
jnp
cmp
sub
addb
mov
pop
sub
adc
mov
repz
popa
cmp
cmp
mov
aas
add
dec
adcl
jno
loop
daa
sub
or
sub
call
out
icebp
popf
cli
addb
xor
sub
and
stos
mov
sub
or
mov
mov
bound
loopne
mov
mov
pop
mov
xor
adc
adc
bswap
push
sti
sub
out
test
cmp
push
imul
add
mov
repz
fstl
loope
sub
mov
inc
andl
cs
adc
clc
cmp
mov
es
into
fadds
add
int
xchg
jbe
stos
jg
mov
or
or
push
cmp
pushf
stos
sbb
lea
sbb
xlat
mov
idivl
push
push
adc
sub
test
mov
iret
jecxz
mov
int
in
push
mov
dec
aam
shll
in
jo
notl
or
pop
test
pop
cmp
lret
add
adc
imul
sqrtss
fldcw
pusha
cmp
scas
ficompl
ds
and
sarl
pop
mov
sub
sub
in
adc
mov
or
pop
adc
lahf
shlb
sarl
ds
popf
int
sub
cmp
lret
leave
out
rcrb
shr
push
mov
cmp
ret
add
stos
sub
jle
or
lret
xorl
cmp
cmp
inc
add
adc
scas
jo
push
cmp
sti
mov
rdtsc
sub
jmp
aad
xor
je
push
add
imul
idivb
jb
dec
cmp
sarl
call
fisttpl
xchg
test
inc
push
jno
adc
dec
or
movsl
push
imul
mov
and
stos
push
test
jecxz
stos
shll
loop
push
jae
test
pop
or
or
ret
adc
loopne
dec
sbb
outsl
data16
sti
enter
rorb
nop
cmc
out
xlat
sahf
push
outsb
sti
icebp
adc
adc
outsb
mov
cmp
cmp
dec
xchg
je
cmp
dec
icebp
jp
sbb
and
pop
push
fld
jne
pop
out
inc
dec
out
push
add
sbb
mov
iret
dec
or
jnp
mov
in
clc
inc
out
xchg
loope
repz
mul
outsl
bound
fs
adc
outsb
pop
lret
pop
stc
stos
arpl
jg
cwtl
stos
pop
cmp
scas
push
inc
lahf
ret
mov
sbb
pop
in
mov
fsubrl
icebp
js
pop
push
jbe
not
movsl
fildl
mov
mov
cmpb
fldcw
jmp
lods
sahf
dec
mov
lret
inc
sub
inc
rorb
xor
sbb
sub
out
aad
add
daa
xchg
or
nop
xor
mov
xchg
lahf
cmc
xchg
in
leave
pop
mov
adc
push
sbbl
out
js
mov
xchg
inc
aaa
scas
lods
pop
sarl
dec
ljmp
mov
xchg
mov
and
inc
outsl
mull
xorb
or
loop
dec
sbb
rcl
inc
lock
loopne
sbb
aad
add
xor
sub
push
cmc
jbe
cmp
xchg
sti
sub
pusha
stos
sti
es
addb
sub
adc
loopne
jnp
scas
push
push
xor
repnz
sbb
sbb
inc
xor
xor
jne
jecxz
mov
ds
dec
pop
in
xchg
sub
mov
dec
xchg
xor
sbb
dec
add
das
pop
lock
jne
push
mov
cmp
rorl
idiv
outsb
xchg
test
js
push
test
jg
inc
xor
cmp
pop
adc
and
orb
fwait
sub
aad
repnz
ss
cmp
stc
fs
dec
enter
fdivrs
adc
loop
pop
add
mov
sub
sub
imul
int3
aad
mov
xchg
out
dec
into
iret
sbb
xchg
out
mov
call
lret
pop
into
ljmp
fsubl
pop
dec
inc
cmp
and
xchg
stos
mov
xchg
jp
mov
nop
push
out
sti
rcl
roll
dec
xchg
in
popf
imul
and
sahf
std
ret
scas
cmp
mov
notl
hlt
push
mov
dec
push
mov
dec
dec
xor
outsb
iret
xchg
pop
cld
mov
popf
or
fldenv
sbb
mov
jge
jecxz
adc
outsb
mov
and
pop
lret
enter
jb
mov
or
in
cmc
lcall
outsb
cmc
jnp
jmp
xor
imul
jle
pop
jp
xor
xchg
and
xor
lret
mov
cmp
ja
inc
lds
jle
mov
mov
pushf
cld
insl
jmp
pushf
fwait
jo
sbb
push
mov
jbe
subb
sub
sbb
imul
adc
or
sbb
xchg
or
and
lahf
mov
lahf
and
adc
cwtl
in
jecxz
shlb
xor
out
push
movsl
mov
iret
push
dec
dec
jae
movl
ret
out
fimuls
daa
or
adcb
insb
jnp
ret
push
cmp
popf
xchg
jno
cmp
fsts
mov
mov
aas
leave
push
sub
cmpsl
mov
push
mov
mov
std
sbb
or
inc
test
cmc
adc
xchg
xchg
add
int3
addr16
pop
test
adc
cmp
add
cmpsl
loop
mov
test
cmpsl
mov
int
pop
or
cwtl
lret
push
mov
sub
stos
mov
dec
hlt
icebp
fistpll
addb
movsl
and
insb
popa
mov
cmp
loopne
gs
out
xchg
iret
sub
dec
jb
push
out
pop
and
int3
mov
stos
pop
pop
mov
sub
xchg
add
fdivs
das
jns
xchg
adc
push
outsl
xor
mov
jbe
push
add
out
addr16
adc
and
loope
mov
cltd
fmulp
ret
inc
push
pop
jnp
adc
dec
fisubrl
pop
pusha
cmc
insb
cs
scas
sbb
lret
inc
xor
jmp
aam
mov
xchg
test
push
dec
imul
add
stos
imul
mov
push
lock
rorl
addr16
stc
dec
mov
mov
dec
add
ja
shrl
mov
in
arpl
iret
call
cmc
sub
aas
repnz
adc
arpl
ds
std
insl
fiaddl
or
add
add
sbb
and
mov
mov
adc
test
push
or
fsub
dec
xchg
sbb
mov
ss
pop
js
mov
mov
mov
bound
mov
movsb
xchg
shll
mov
mov
inc
and
rcrl
lcallw
sub
bound
push
pushf
fstpt
in
ret
push
sarb
addb
add
mov
leave
and
popf
xchg
dec
cmp
xchg
xor
dec
lcall
jne
stos
outsb
icebp
dec
je
cmp
nop
fisttpll
aam
sti
add
jg
push
and
push
jmp
scas
scas
mov
ret
xchg
test
jne
test
push
mov
mov
loope
xchg
mov
movb
or
inc
fstpt
sbb
push
test
xor
bound
insb
bound
int
push
pop
leave
into
adc
mov
outsb
push
mov
je
mov
cmc
mov
pop
clc
shrb
pushf
inc
into
mov
pop
lods
inc
ss
ss
cli
jae
cmp
nop
and
call
mov
mov
xchg
add
pop
lods
push
cli
or
je
adc
jecxz
ds
sbb
movsb
pop
sub
pop
or
rclb
inc
cli
adc
sahf
ja
mov
cmp
lcall
test
sbb
add
mov
push
int
or
leave
dec
cmp
fmuls
pop
xlat
pop
jae
sbb
cmp
outsl
daa
dec
push
cmpsl
cs
xor
and
pop
sbb
aam
pop
jo
test
fwait
test
xchg
ljmp
jae
add
xor
inc
cs
subl
sahf
cs
adc
xchg
sahf
dec
ljmp
lahf
dec
dec
sbb
jge
loope
sub
aaa
imul
sub
jl
xchg
ret
xor
sbb
cmpsl
clc
pop
fsubrl
xor
clc
movsl
adc
in
movsb
add
sub
push
call
sbb
stc
sarb
into
fwait
hlt
inc
dec
mov
xor
roll
je
pop
nop
ss
xor
mov
cmp
push
push
imul
aam
cmp
mov
xor
mov
in
mov
or
ss
lock
pop
sub
cmp
push
outsb
dec
dec
outsl
pop
mov
adc
sub
insl
xlat
adc
cmp
lock
sub
mov
sbb
xchg
iret
xchg
adc
mov
mov
cmp
daa
rcll
jo
movsl
mov
jmp
fs
clc
data16
and
sub
dec
inc
shll
mov
int
mov
sbb
xchg
or
bound
add
or
cld
enter
mov
dec
cld
in
ljmp
jecxz
dec
sbb
xor
dec
or
jmp
mov
ficomps
pop
mov
push
push
pop
jnp
jae
pop
mov
or
mov
adc
mov
mov
std
repz
xchg
xchg
inc
out
leave
jmp
fisttpll
xor
lahf
es
insb
jl
dec
mov
xchg
or
shlb
outsb
cmp
cs
pop
jae
jnp
add
cmpsb
push
outsb
add
mov
pop
add
pop
adc
lret
xchg
mov
lods
xchg
pop
mov
jge
pop
scas
jle
ret
push
xchg
pushf
cmpsl
fdivs
mov
xchg
icebp
loopne
rcl
pop
hlt
lock
xor
js
or
rol
pop
ljmp
inc
xchg
jmp
fadd
lock
inc
test
pop
repz
popf
inc
cmp
and
or
push
inc
imul
jp
dec
dec
aaa
test
or
jg
test
bnd
jmp
push
out
mov
cmp
add
shlb
add
into
xor
and
lds
xchg
xor
clc
xchg
fwait
xchg
xor
ret
pusha
sbb
pop
and
bound
sub
aas
sub
shl
add
adc
in
je
cs
xlat
xor
dec
pop
fstpt
stos
mov
jnp,pt
lock
loopne
mov
sub
ret
dec
stc
idivb
add
adc
fadds
mov
addr16
inc
ds
repnz
mov
movl
fldcw
sub
sbb
sti
outsl
aas
inc
hlt
or
in
or
into
adc
xor
dec
or
jp
outsl
cmpsl
mov
jecxz
jae
cmp
push
sbb
test
shl
inc
sub
bswap
pop
cmp
push
je
dec
push
adc
in
rcll
dec
jp
or
popa
cmp
adc
and
leave
jb
scas
pop
pop
xchg
in
pop
call
aaa
and
lock
shrb
jg
lret
call
addr16
adc
lcall
lcall
das
jmp
sub
shlb
stos
ds
aaa
jl
dec
xchg
add
mov
mov
int
lret
sub
jbe
mov
pop
xor
jnp
out
and
jns
mov
popa
and
cmpsb
into
or
or
push
xor
or
dec
sub
jp
out
jno
andl
std
out
mov
std
mov
jns
cmovs
jnp
mov
rcl
cmpb
cs
inc
or
or
push
push
xchg
testb
jmp
xor
mov
pop
pushf
fdivp
jns
loopne
dec
cs
pop
adc
mov
gs
mov
stc
push
jecxz
sub
test
inc
cmp
pop
dec
xchg
int3
xor
lcall
out
loope
push
cmp
cmovae
out
fwait
loope
xchg
pop
out
mov
imul
hlt
xchg
loopne
push
cmp
mov
mov
add
jne
dec
and
scas
mov
rcrl
jmp
test
dec
mov
mov
mov
pop
mov
lods
loop
ret
pop
xchg
xchg
iret
popf
icebp
aam
hlt
dec
inc
add
ds
movsb
shll
jg
das
call
loope
aad
push
mov
mov
in
sar
aaa
or
mov
cmp
ss
ljmp
add
cmp
xorb
pop
or
pop
lcall
enter
out
adc
xor
mov
in
or
ret
mov
scas
sub
jb
xlat
sbb
adc
adc
dec
imul
dec
sarb
mov
xchg
and
mov
lret
out
pop
pop
pop
pop
sub
dec
adc
popf
xchg
stos
in
popa
and
push
mov
jl
and
or
xchg
jne
jbe
ret
inc
cs
shlb
xor
mov
sti
mov
dec
pop
mov
stos
in
outsl
sub
loope
arpl
cwtl
inc
pop
cs
pop
push
in
outsl
adc
aad
inc
es
scas
xchg
xchg
lods
cwtl
fdivrl
sub
cmp
push
xchg
adc
push
lret
xchg
sub
pushf
hlt
dec
xor
mov
jnp
mov
xchg
insl
sbb
dec
adc
xchg
hlt
jae
cmpsl
aad
ljmp
lods
sarl
pop
fidivl
or
cmp
pop
push
push
inc
mov
mov
mov
xchg
dec
lret
das
sbb
and
ja
shlb
insb
int3
in
cmpl
cmp
int3
adc
stos
push
inc
cmp
mov
mov
adc
cld
sahf
out
or
jb
dec
fdivr
jb
test
xor
fnstsw
ljmp
fs
xchg
dec
stos
cs
sub
pop
pop
dec
sbb
rcrb
outsb
call
loopne
sub
inc
ficomps
jmp
cmp
loope
push
out
mov
mov
sub
outsb
stos
sub
lods
cmp
jo
add
mov
mov
out
mov
jmp
shlb
mov
xor
lret
dec
mov
mov
or
mov
jmp
and
jbe
mov
ds
ret
int3
mov
sub
mov
pop
lcall
adc
push
les
dec
arpl
mov
adc
xchg
iret
cli
xchg
iret
popa
inc
movsb
add
sar
cwtl
popl
push
call
mov
mov
hlt
pusha
fwait
push
ljmp
rcll
fnstcw
hlt
xchg
mov
stos
jle
mov
sbb
and
lcall
cmp
push
push
ss
insl
mov
jecxz
aaa
xchg
daa
push
pushf
jg
int3
pop
jnp
lea
xchg
xchg
push
std
sbb
js
push
mov
or
add
cmpsl
sub
hlt
das
imul
and
mov
pop
js
fists
xor
je
out
push
imul
pop
loopne
or
loopne
ljmp
cmp
mov
into
sub
sbb
mov
sbb
push
xorb
out
add
bound
test
mov
pop
imul
push
mov
push
jp
mov
dec
dec
mov
out
push
mov
adc
das
xchg
arpl
into
stc
add
add
test
fwait
imul
xor
test
les
and
outsb
vmread
push
xchg
andb
mov
sarl
loope
iret
xchg
add
cltd
sbb
std
aam
into
insl
fsubr
fs
mov
mov
mov
xor
inc
fwait
or
js
rolb
pop
mov
les
mov
fs
data16
dec
push
sbb
jmp
xor
loop
stos
inc
pushf
popa
adc
int3
jbe
pop
gs
pand
cmp
adc
addb
add
pop
arpl
popa
adc
movsb
pop
xchg
and
and
push
in
jmp
inc
and
js
inc
cs
push
push
dec
sub
xor
add
jmp
cmp
inc
lds
fists
jo
push
dec
pushf
aaa
stos
dec
cmp
loop
push
addl
ret
aad
jle
fldl
sbb
jg
add
adc
lods
clc
jg
iret
and
mov
mov
mov
icebp
popf
push
cmpsb
push
into
popa
test
out
inc
aas
mov
adc
pop
mov
pop
cmp
and
lea
mov
jb
pop
sbb
inc
movl
mov
icebp
repnz
cmp
lods
mov
dec
pop
test
adc
xor
dec
dec
sbb
xchg
mov
jecxz
push
arpl
sub
jae
cmp
add
add
aaa
fwait
jbe
sti
inc
xor
rcr
out
xchg
mov
daa
cmc
test
das
popa
scas
test
pop
sbb
or
popf
fdivl
sub
call
mov
scas
dec
fisubrl
lret
bound
enter
dec
mov
dec
mov
loope
int
jg
xlat
loope
mov
cmp
repz
mov
push
and
mulb
mov
inc
adc
sbb
mov
test
mov
sti
in
js
cmp
jb
sub
inc
out
mov
aaa
enter
test
decl
and
cmc
dec
adc
mov
dec
lods
jg
cmp
cmpsb
pop
xor
pop
jmp
inc
andl
push
testb
pop
mov
xchg
jno
movl
push
fsubrs
cmp
mov
sub
mov
loop
dec
pusha
push
sub
mov
bound
data16
fwait
and
mov
loopne
rorl
aaa
jne
cmp
in
xchg
sbb
cmp
mov
pop
mov
in
fld
or
xchg
dec
lahf
pop
and
mov
cld
stos
clc
pop
movsb
jle
mov
incl
inc
jg
pop
xor
fsubrs
sbb
adc
or
and
int
test
lret
out
fdivrl
mov
cmp
adc
mov
cltd
xchg
mov
cmpsl
in
inc
jmp
out
fstps
and
push
sub
sub
ss
inc
push
jo
das
adc
pop
jnp
lcall
fdivrl
and
movsb
cltd
push
add
xchg
adc
enter
inc
add
inc
adc
daa
jb
mov
add
push
add
inc
fisubrl
dec
movsl
lret
scas
mov
fwait
adc
leave
dec
out
inc
out
mov
jge
lahf
xchg
and
pop
mov
mov
cmp
fxch
and
xor
out
in
sbb
xor
ljmp
cli
popa
test
pop
shrb
mov
jno
cmp
push
daa
imul
mov
mov
sti
movsb
or
xchg
mov
push
jo
xchg
stos
push
subl
dec
std
or
ds
push
sub
lock
mov
push
xor
popa
jo
xlat
xor
cmp
pop
popf
cmpb
inc
add
mov
sbb
sbbb
in
push
pop
push
jg
out
adc
xlat
pop
jne
cmc
jbe
add
mov
pushf
mov
adc
out
add
lret
fwait
mov
iret
sub
popa
int3
dec
aas
sbb
dec
std
fists
stos
mov
bound
decl
xlat
imul
cvtps2pd
iret
adc
inc
iret
or
inc
inc
pusha
lcall
xor
icebp
xor
cmp
mov
sbb
notl
cmpsb
xchg
mov
sbb
das
or
repz
std
in
dec
fdivl
loopne
or
xor
int
movsb
mov
sbb
and
jbe
pop
mov
decl
push
loope
pop
ret
ja
jb
and
out
and
sbb
dec
mov
push
fisubrs
sub
push
cmp
out
xorl
pop
or
push
dec
cwtl
sbb
movsl
lock
mov
fdivr
add
stos
sub
xchg
xchg
popa
ficoml
movsl
push
add
jo
mov
inc
and
sti
jae
std
and
ds
int3
shlb
dec
add
sbb
jo
outsb
pop
cmp
mov
dec
cmp
in
and
sbb
aaa
insb
add
mov
dec
lods
sbb
popa
loope
iret
sub
sub
lds
jmp
daa
outsb
or
lret
test
dec
nop
sbb
jmp
lods
into
pushf
out
jne
push
test
push
dec
cmp
mov
mov
dec
leave
mov
sbb
fisttps
dec
clc
jp
fsubrl
adc
scas
sbb
push
cli
sbb
inc
inc
jbe
aaa
insb
jp
movsb
xchg
mov
lds
xchg
fisubrs
lcall
xlat
aas
in
mov
push
fbld
inc
xchg
sahf
enter
popa
sbb
sbb
fnstsw
mov
out
or
dec
mov
in
in
lods
lcall
cmpsl
testl
popl
fdivrs
add
xchg
push
jl
push
ret
decb
jne
fistps
xor
hlt
lret
mov
cmp
test
mov
and
subl
mov
out
xchg
push
add
mov
dec
push
gs
sub
adc
xorl
lret
imul
add
lods
inc
fs
lret
push
cmp
ss
repz
mov
and
mov
pop
pop
loope
push
push
rorb
subl
leave
pop
pop
aas
ret
cwtl
shlb
xchg
xor
xchg
and
aam
ret
sub
pop
inc
push
push
cltd
mov
addb
xor
fcmovnu
mov
xor
std
mov
sub
mov
movsb
movaps
or
stc
xchg
cmpsb
shll
inc
jg
mov
pop
shlb
xor
stos
shlb
clc
cmc
out
mov
add
push
fistpll
not
pusha
push
cltd
call
hlt
ss
imul
rcrl
into
cli
sarb
mov
repz
ss
imul
ds
sbb
andb
jns
jmp
mov
xor
dec
xchg
cmp
add
sbb
test
jo
mov
adcl
clc
push
lcall
xor
push
inc
imul
popf
pop
pop
cmc
and
mov
xchg
sub
sbb
sbb
mov
enter
cld
jo
mov
add
out
fidivs
cmp
push
dec
rorl
movsl
rolb
mov
shrl
loopne
loop
push
jecxz
int
mov
push
out
call
and
cmp
and
mov
jl
iret
rcrl
pusha
and
filds
mov
inc
daa
mov
mov
pop
mov
pop
push
je
sub
rcrb
sbb
sbb
xor
mov
or
sbb
mov
mov
imul
or
gs
pop
sub
push
shrb
add
pop
pop
aas
mov
add
dec
ja
je
sbb
jns
adc
icebp
xchg
sub
dec
mov
cmpsl
mov
adc
out
sbb
and
repnz
jno
dec
cwtl
rorb
mov
adc
lds
inc
scas
int
or
mov
leave
sahf
out
xchg
fidivrl
icebp
push
arpl
rclb
inc
mov
or
or
pushf
vmovdqu
push
repnz
shrb
pop
ret
xor
stos
int
mov
and
mov
sbb
es
ljmp
dec
mov
jae
in
dec
jle
xchg
fucomi
fdivl
adc
mov
and
fsts
fistl
es
std
push
jge
lret
outsb
push
mov
scas
repnz
lea
in
adc
mov
lock
xor
cmp
jmp
adc
lahf
sub
ja
cmp
icebp
in
push
mov
inc
dec
and
dec
mov
sub
fmuls
ljmp
outsb
cli
dec
xlat
repz
push
adc
adc
or
pop
popf
addb
insb
mov
aas
push
jo
jge
sbb
cli
hlt
repz
scas
les
dec
inc
xchg
sbb
push
stc
lret
gs
je
and
xor
lea
shlb
test
or
dec
cmpsl
adc
repnz
mov
pop
fiadds
cmp
dec
cmp
lea
mov
shlb
jmp
dec
pop
scas
ror
pop
repnz
adc
mov
bound
and
inc
int3
orl
sub
hlt
xor
mov
mov
sti
add
xor
fnstenv
gs
xchg
js
sbb
lret
xor
fidivs
ds
xchg
hlt
and
mov
pop
insl
push
lret
aas
imul
je
into
rorl
in
scas
outsl
dec
mov
mov
pand
sub
leave
sub
xchg
xchg
popa
add
insb
test
cmp
mov
jmp
adc
xchg
and
mov
mov
xchg
inc
lods
or
mov
ds
mov
mov
daa
shr
mov
lret
das
outsl
xor
xchg
imul
push
xorl
rol
mov
scas
bound
push
sbb
jno
sub
sti
inc
ret
adc
add
mov
cld
mov
stc
mov
xor
rorb
out
ljmp
jo
in
inc
enter
sbb
adc
insb
and
rorb
push
sbb
sbb
push
mov
push
test
or
ds
or
lods
cmc
mov
daa
shrl
fistps
lahf
ror
arpl
xlat
xor
insl
xchg
cmpsl
das
ja
icebp
lods
xchg
xchg
shlb
ljmp
sub
pushf
testb
dec
xor
pop
test
sub
sbb
mov
cli
pop
loop
add
xor
faddl
aad
push
jb
jl
lret
or
xchg
rcrb
inc
cld
insb
mov
mov
mov
or
pop
xchg
xchg
into
arpl
fidivrl
cwtl
je
and
rcll
adc
push
pop
mov
add
ds
add
xchg
lods
out
ljmp
mov
mov
leave
cmp
pop
xorl
pop
outsb
push
fimull
xchg
outsb
adc
or
pop
mov
xchg
or
cmp
loop
cli
daa
adc
insb
mov
shlb
sub
fisttps
data16
mov
adc
stc
daa
or
shll
adc
pushl
stos
mov
icebp
or
cld
mov
lods
cmp
mov
scas
ja
vpcmpeqq
adc
aaa
jg
mov
insb
sar
cltd
insb
test
mov
pop
inc
pusha
loopne
jmp
lods
push
cmpsl
xor
xchg
mov
xor
jae
sub
inc
inc
cld
leave
sarb
add
not
jo
xor
aad
mov
loop
sbb
push
xchg
out
inc
bound
shll
and
mov
ds
mov
jmp
or
insl
ja
mov
mov
or
fistpl
in
jp
push
mov
test
add
int3
loope
adc
and
outsl
adc
test
dec
outsb
nop
cmc
pop
sbb
push
jne
and
lahf
mov
sahf
lret
inc
dec
mov
lcall
sbb
pop
pop
and
adc
sahf
pop
push
or
movl
mov
sbb
mov
fsubs
ljmp
arpl
lods
jecxz
fwait
and
pusha
out
inc
jg
cmp
out
int3
ret
mov
dec
out
mov
cmp
push
addb
xchg
push
pop
and
push
inc
inc
xor
icebp
nop
lcall
mov
rcrl
sub
xchg
pop
cmp
mov
je
out
ret
inc
pop
xchg
or
ss
jno
fs
inc
cmp
push
int
shll
stos
xchg
cmp
std
jae
test
jne
add
add
adc
leave
test
pop
sub
lock
test
pusha
aam
lcall
cmp
xchg
cmp
sub
pop
bnd
insb
dec
mov
jge
mov
cmp
sti
pop
lea
cmpsl
cs
mov
dec
add
out
fst
dec
cmp
insb
sti
daa
xlat
jg
iret
and
push
popf
lea
sti
cwtl
mov
mov
pushf
inc
adc
or
lods
loopne
xor
les
fcmove
les
test
jno
cld
orb
push
stc
pusha
out
jno
dec
insb
push
mov
jns
inc
ret
or
out
and
jl
mov
push
jp
popf
add
cmpsl
ret
out
mov
sub
mov
push
xchg
adc
fstl
add
shrb
mov
push
loop
in
inc
or
insb
lcall
rcl
jae
cmp
out
movsl
inc
stos
rorb
stos
outsb
push
push
ja
dec
and
lea
les
pop
and
xchg
jbe
outsl
es
mov
filds
mov
and
inc
push
hlt
insl
hlt
dec
dec
or
ret
movsb
loop,pt
lock
into
cmp
daa
and
fcomps
ret
cmp
push
repnz
xor
orb
mov
mov
mov
mov
pop
adc
loope
repz
fidivl
out
ja
aaa
cmp
mov
pop
shll
scas
xor
scas
mov
add
jmp
and
sub
fcoml
jnp
lods
fnstsw
loopne
jbe
mov
mov
fpatan
add
xor
int
ds
inc
movsb
sbb
test
into
mov
cmc
lds
out
daa
stc
mov
cmpl
shrb
push
and
mov
sub
data16
cmp
or
xchg
movsb
xor
inc
sbb
pop
pop
sbb
dec
push
ret
push
jns
and
xchg
insl
fcoms
jmp
movsl
sub
aad
enter
inc
mov
into
test
add
push
xchg
pop
xchg
fcoml
dec
dec
rorb
sti
call
xchg
or
jp
out
das
mov
sar
enter
xchg
or
subl
out
push
inc
bound
or
aam
dec
mov
cmp
jmp
mov
and
popa
fmul
cli
inc
sbb
aad
enter
ret
adc
push
out
or
idiv
xchg
adcb
dec
jmp
xor
lahf
pop
loope
aad
mov
jmp
addr16
mov
dec
mov
and
xchg
lods
cmp
imul
mov
mov
sti
repnz
sbb
mov
mov
jo
jne
inc
sbb
mov
mov
adcl
jb
js
mov
subb
rcr
xor
add
mov
xor
xor
sbb
loopne
xor
sbb
out
rclb
ret
jg
and
test
dec
cmp
jno
push
test
bound
lahf
fisttpll
mov
mov
scas
js
pop
dec
pop
pop
push
or
aas
aaa
xor
adc
sbb
loope
int3
ljmp
out
test
loopne
sbb
fnop
sbb
adc
sbb
inc
outsb
add
lcall
cmpsl
push
sbb
dec
dec
inc
mov
ss
leave
xchg
lods
shl
mov
loopne
jno
fisubs
sbb
fwait
cmp
mov
or
cmp
adc
jg
imul
dec
xchg
loope
and
pop
loopne
sub
mov
push
inc
shlb
lcall
inc
xchg
fstps
out
adc
cwtl
and
popa
pop
mov
movsl
or
inc
pop
pushf
repz
cmpl
sti
mov
push
les
mov
and
pcmpeqd
sub
pop
adc
mov
mov
or
ret
sbb
fcomps
daa
xor
push
push
or
stc
repz
lods
movsb
stc
dec
or
and
xor
cmp
mov
xchg
stc
cmp
aad
sub
aam
pop
mov
xor
sbb
adc
jmp
neg
mov
imul
mov
cmp
lcall
imul
insb
aam
jg
icebp
add
push
jnp
jp
jmp
jbe
xor
insb
dec
das
inc
cltd
mov
mulb
sbb
and
lret
cmp
add
push
out
hlt
pop
mov
mov
mov
ss
outsb
mov
mov
dec
ss
iret
sub
stos
mov
mov
xchg
sarb
jnp
out
popa
xor
xor
and
jae
cmp
mov
loope
in
and
mov
fwait
pop
xor
push
lock
push
loopne
loopne
adc
fdivs
mov
mov
and
arpl
mov
mov
sub
jb
add
push
orb
fwait
das
shrl
cmp
fbstp
fs
inc
xor
addr16
lahf
out
pop
push
int3
cs
dec
fisubs
faddl
mov
imul
in
jmp
cli
xor
mov
jne
mov
mov
push
imul
int3
inc
mov
bnd
jno
add
ja
out
jle
inc
in
or
repz
mov
aaa
xchg
sub
cmpsb
sbb
xor
bound
inc
jbe
inc
jmp
jne
insl
aad
push
xor
daa
push
cmp
xchg
mov
push
sbbl
daa
mov
je
mov
sub
inc
stc
jae
sub
xor
int3
push
ljmp
rorb
popf
pop
test
inc
insl
ret
mov
loopne
out
and
out
sub
xchg
push
and
jecxz
lods
mov
mov
cwtl
push
jg
pop
out
mov
in
add
xchg
mov
mov
sbb
jle
mov
push
dec
lods
sti
adc
jmp
inc
aam
sub
aaa
adc
inc
jecxz
pop
test
mov
fisubrl
int3
dec
in
add
jle
ret
js
and
cld
add
rcrb
sub
in
shl
push
aam
jae
cmpsl
add
pop
loope
scas
mov
loopne
insb
adc
mov
mov
jo
sbb
sar
xchg
cmp
jle
push
push
dec
in
xchg
xor
data16
repnz
or
push
mov
sti
daa
insl
cwtl
sti
and
popa
pop
psrlw
mov
es
rorl
pop
inc
cltd
aas
stos
clc
lea
adc
sbb
scas
cmp
addb
je
push
mov
cmpsb
out
call
jo
jne
cmpsb
xchg
stc
mov
fistl
movsl
mov
push
cs
xor
adc
sbb
daa
pop
adc
adc
adc
andl
pushl
adc
rcrb
jp
dec
ljmp
shll
insl
popa
push
push
rcll
call
mov
and
xchg
sti
jl
add
push
es
adc
or
dec
jb
les
fsubrp
mov
sub
jb
rol
pop
out
rcrb
and
jb
pop
cmp
insb
mov
shlb
data16
sahf
imulb
nop
mov
push
mull
sbb
cli
loope
jmp
ds
test
mov
cmovs
dec
gs
xchg
int
sarb
out
shl
arpl
addr16
aaa
adc
rorb
aam
add
push
jp
jo
cwtl
xchg
mov
call
push
adc
data16
cmc
fisttps
push
mov
mov
js
mov
sub
and
into
lods
lock
cmp
insl
pop
dec
dec
mov
add
cmpsl
push
jnp
jo
pop
xorl
dec
mov
dec
dec
ret
psllw
fbstp
data16
and
out
sbb
pop
push
sub
jno
lds
mov
sar
add
icebp
push
sbb
roll
sbb
push
lahf
fisttpl
xchg
fwait
les
das
jg
adc
pop
lahf
xchg
xchg
arpl
sub
mov
dec
xchg
aam
fmull
imul
enter
cmp
popa
daa
jmp
loope
sub
pop
adc
lock
and
fadd
inc
fwait
dec
xchg
pushf
scas
into
xchg
pop
jbe
cwtl
pop
xor
cmp
insl
adc
sub
mov
shll
pop
stos
push
ret
and
add
cmp
cltd
loopne
mov
lret
sbb
test
add
pusha
dec
xor
xor
adc
dec
andl
mov
fdivrl
push
inc
out
stos
xor
mov
inc
xchg
pop
mov
scas
lock
lods
into
popa
jae
and
jmp
in
pop
dec
dec
add
out
and
mov
roll
lcall
test
mov
add
xchg
pusha
lock
xlat
pop
xor
sbb
add
adc
cltd
mov
xor
iret
fbstp
mov
xchg
leave
adc
xchg
shl
iret
sbb
scas
and
mov
pop
arpl
jb
inc
mov
pushf
inc
movsl
int
sbb
sub
mov
adc
es
fisubrs
mov
clc
or
subb
sbb
pop
jg
jp
or
push
les
mov
or
nop
xchg
arpl
lods
cmpsl
das
ljmp
test
sub
push
loope
ja
pop
mov
pop
je
jns
jl
adc
push
xor
and
clc
fidivrs
lret
xor
sbb
popf
testb
icebp
sub
or
push
insl
outsl
addb
decb
pop
and
mov
out
loope
push
inc
repnz
sub
inc
call
xor
xchg
loop
inc
das
jne
fnsave
cli
call
aam
jle
mov
adc
inc
mov
xchg
fdivrl
cmp
mov
add
pusha
add
movsl
mov
data16
dec
fmul
pop
adc
loope
dec
mov
jns
cmp
cmp
aam
mov
jo
in
in
test
iret
lods
cltd
push
aam
jae
dec
scas
test
adc
imul
ss
in
test
adc
mov
cmp
jle
and
or
mov
cld
jo
or
test
xchg
loop
lds
sub
cltd
sbb
xchg
dec
cs
cs
add
mov
lock
lret
jecxz
mov
std
fildll
add
xchg
mov
scas
push
pop
push
cmpsl
xor
or
stos
mov
mov
jno
test
mov
enter
fnstenv
xor
xor
dec
push
push
xchg
mov
scas
insl
and
js
mov
xchg
dec
scas
in
bound
je
add
lods
and
mov
mov
sub
les
pop
cmp
leave
add
fdivl
stos
lahf
sub
sub
int3
dec
inc
out
dec
cmp
inc
fs
pop
add
pop
cmpsb
pop
mov
mov
xor
popf
mov
pop
psllq
pop
pop
mov
scas
dec
jns
dec
pop
push
lock
int
push
adc
in
mov
add
ds
lret
push
cmp
xor
stos
std
mov
lea
int3
iret
sbb
and
pop
aas
jnp
movsb
sub
mov
mov
mov
pushf
aam
bound
stos
push
cmp
sbb
push
or
mov
xlat
sub
push
mov
sub
leave
cmpsl
pop
cld
inc
inc
test
stc
dec
jp
jae
rcll
dec
lahf
xchg
add
roll
scas
mov
adc
imul
or
inc
lcall
int3
lcall
outsb
fstp
cmpsb
sub
iret
push
sbb
cmp
shll
sbb
mov
rorb
or
into
cmp
repnz
testl
sahf
movsl
mov
mov
ds
je
xchg
mov
sarl
test
adc
push
inc
loopne
push
jecxz
cmp
bound
xor
outsb
pop
xor
cmp
je
out
adc
xor
popf
push
adc
pushf
mov
lret
pop
sbb
out
push
sbb
pop
cmpsl
xor
mov
add
popl
pop
andb
sbb
sub
imul
push
ljmp
faddl
or
test
push
mov
inc
iret
cmpsb
rorl
pop
lods
imul
lret
leave
test
pop
sarb
mov
in
or
xchg
sub
mov
mov
push
xchg
cld
dec
dec
lds
xchg
pop
mov
xlat
loopne
shll
add
adc
test
ja
jmp
pop
cmp
sahf
adc
out
test
pop
push
inc
mov
dec
out
lods
daa
ss
push
xchg
jb
inc
mov
push
dec
lea
jb
sub
pusha
lret
out
repz
sub
xor
jne,pt
add
xor
aam
lcall
pop
or
jne
xor
repz
not
test
jmp
ljmp
pop
js
shll
and
mov
dec
cltd
in
mov
dec
or
cld
clc
dec
mov
push
lds
aaa
cmp
xchg
repz
mov
mov
fwait
jecxz
add
scas
aad
adc
pop
es
mov
adc
loopne
cli
xor
dec
dec
loope
cs
add
les
and
mov
fdivs
add
xchg
mov
cmc
mov
xor
or
push
out
jno
insl
dec
dec
pop
lcall
dec
add
jo
pop
cmpsb
push
andl
mov
pop
nop
sub
data16
cwtl
jno
aad
push
negl
jnp
push
sbb
dec
dec
repz
mov
push
jno
cmp
ljmp
adc
incb
inc
push
push
rcrl
jg
mov
sbbb
add
mov
popa
idiv
mov
lahf
xor
ret
aas
pop
insb
scas
int3
add
fdivr
fs
jnp
pop
dec
mov
or
andb
hlt
xchg
add
inc
cmp
dec
sub
fdivl
loop
jp
add
cmp
sub
jg
sub
pushf
mov
push
mov
hlt
mov
push
jne
aaa
mov
inc
leave
push
test
push
push
xor
push
int
fwait
mov
int3
shrl
push
ljmp
mov
int
mov
or
cld
out
ds
daa
loopne
sti
jo
cs
push
fsub
jbe
fdivrl
sti
or
sbb
aaa
les
addr16
push
lcall
lods
push
push
xor
and
adc
shlb
sbb
les
xchg
push
aas
ds
lahf
in
loope
pop
dec
insl
dec
outsl
push
mov
addr16
push
jl
fnstcw
mov
dec
pop
sbb
pop
cmp
pop
repz
push
xlat
push
out
enter
adc
stos
push
add
stos
arpl
inc
and
cwtl
gs
jecxz
jo
mov
adc
mov
lahf
cmc
out
pop
mov
data16
das
stc
pop
xchg
in
sub
and
fdivr
mov
sub
orl
mov
lods
mov
push
test
and
push
hlt
mov
lea
test
cmp
fs
mov
cmc
out
jns
cmc
add
mov
loopne
add
andl
jno
fs
testl
nopl
ret
push
inc
out
pop
xor
in
stos
in
roll
aas
std
fldt
fsubrs
sub
loop
bound
sub
xor
dec
pop
movsb
xlat
xor
lods
jmp
xchg
movb
and
pushf
cmpsl
into
sbb
shll
mov
lahf
adc
mov
pushf
leave
and
loop
mov
mov
shlb
xor
sbb
push
xor
sub
inc
cmp
sub
and
pop
xor
push
iret
cmp
das
arpl
test
test
dec
stos
xchg
das
ret
cmp
inc
test
in
xor
xchg
lret
popf
adc
or
jo
jmp
or
pop
iret
in
stos
xchg
aam
sub
imul
lods
ficoms
push
jg
out
rcll
lea
jmp
pop
pop
in
in
push
dec
or
mov
shll
or
les
out
dec
adc
or
sub
push
push
jp
mov
mov
mov
jae
loop
fucomip
add
test
or
sbb
push
daa
mov
movsl
sub
scas
test
mov
mov
jecxz
fstpt
push
ss
popf
adc
adc
outsb
outsb
jo
mov
les
dec
sub
add
in
push
in
bnd
jge
push
test
ljmp
sub
les
mov
iret
pop
cltd
mov
enter
fidivs
shll
or
pop
inc
add
jmp
or
sbbl
pop
sub
call
stc
fcomp
inc
inc
mov
jae
dec
pop
movsb
push
mov
add
jge
fcompl
xchg
cmp
add
movsl
data16
inc
pop
mov
adc
jbe
cmp
xor
mov
xchg
popf
movsl
bound
je
jmp
adc
inc
mov
fs
or
arpl
sbb
fcom
add
ljmp
push
jge
push
mov
sbb
lods
add
xchg
dec
mov
and
clc
leave
sarb
xorl
mov
test
pop
addb
not
inc
movsb
cmp
adc
rcll
rclb
lock
stos
std
jnp
loopne
in
outsb
dec
push
in
pop
lods
imul
pop
hlt
aam
lret
add
ja
add
sbb
xor
or
jg
xor
or
idivl
mov
subb
push
sarl
divl
addr16
in
mov
in
movsb
inc
add
or
neg
scas
xchg
iret
fidivrl
or
outsb
or
inc
adc
std
dec
nop
jo
push
pop
sbb
xchg
push
ss
int3
inc
xchg
popa
ja
dec
loopne
mov
out
loope
push
or
inc
cmc
or
dec
dec
dec
bound
jmp
mov
gs
pop
dec
ds
adc
adc
dec
push
rclb
cmpsb
cmp
mov
and
push
xor
fidivl
jecxz
inc
sub
jp
mov
shl
fidivl
test
mov
push
cmc
mov
nop
add
or
sub
adc
mov
call
xchg
cmc
arpl
out
lahf
pop
dec
pop
loope
pop
jnp
or
lods
int3
int
mov
inc
fistps
outsb
imul
xchg
addr16
inc
xor
out
cli
adc
jbe
and
jmp
mov
sub
add
jg
jns
mov
clc
out
mov
loope
mov
jno
pop
jge
inc
lcall
loope
in
jne
movsb
out
xlat
pop
fcmovnbe
lahf
mov
jmp
or
fldenv
rorb
xor
pusha
xor
xor
cs
sahf
movl
shlb
hlt
popa
adc
arpl
add
dec
cwtl
push
leave
pop
or
sbb
mov
andl
push
mov
in
pop
test
mov
sbb
inc
ret
pop
jne
dec
nop
fidivs
push
dec
cmp
dec
test
data16
sbb
adc
iret
mov
repz
xor
push
out
jno
sub
inc
add
gs
ficomps
icebp
cmp
sbb
aad
jo
xor
pop
push
sti
jl
sub
xchg
mov
insb
bound
out
xor
xor
mov
cpuid
loope
cwtl
cmp
adc
and
push
std
jge
and
cli
das
inc
jne
dec
bound
sarb
and
xchg
mov
ss
js
jmp
pop
adc
iret
sub
mov
jp
pop
xchg
dec
pusha
xor
add
inc
pop
cmp
inc
and
insb
cli
mov
xchg
xchg
cmp
jbe
and
push
popf
pop
cmpsb
or
test
fwait
sahf
and
xor
into
sbb
orl
out
xchg
out
andb
cmp
cmp
xchg
jns
mov
mov
dec
je
push
mov
inc
cmpsl
out
mov
cltd
push
aas
testl
xor
xor
and
dec
pop
mov
int
jecxz
xchg
lods
jns
mov
mov
xor
inc
adc
jp
in
xchg
xor
dec
dec
cli
leave
in
adc
test
lahf
cmp
fs
rcll
lds
mov
loop
push
das
test
rorl
mov
int3
int
icebp
xor
and
xor
cmp
bnd
sbb
addb
fstps
stos
scas
sahf
add
stos
iret
daa
lcall
bound
cwtl
sub
into
xchg
mov
mov
dec
jne
shlb
xchg
jmp
enter
sub
fiadds
out
cmpsl
jmp
rcl
fbld
dec
je
dec
daa
in
mov
lahf
mov
mov
sbbl
mov
cli
rolb
imul
jnp
push
sbbb
dec
add
cmpsb
mov
xchg
mov
movsl
into
pop
cmc
aas
rcrb
ss
jl
jbe
loope
aas
jle
xor
jg
int3
jge
mov
insb
pop
dec
mov
jno
inc
sub
mov
in
fmuls
cmpsl
mov
xchg
cmc
xorl
pop
jle
out
fists
lock
jl
push
gs
dec
xchg
mov
xlat
sbb
xchg
cwtl
or
popl
arpl
pop
imul
out
in
cmp
pop
into
mov
mul
mov
sbb
mov
call
push
inc
ret
mov
and
jp
imull
into
lods
mov
scas
pop
or
cmp
inc
cmpsb
mov
lea
pusha
sbb
sub
jl
pushf
cli
bound
lods
or
cli
pop
outsb
lret
cmc
and
fldt
push
inc
mov
es
jo
pop
jg
jp
xor
mov
bound
mov
in
out
and
lea
ficoms
jno
push
inc
pushw
mov
sbbb
ss
mov
lret
fwait
xchg
sbb
inc
dec
pop
add
and
je
mov
imul
outsb
jne
and
adc
pop
imul
dec
sbb
mov
ds
push
mov
lods
and
xchg
pop
jnp
clc
inc
lods
sbb
add
popf
xchg
jo
out
or
xchg
cmp
shr
push
mov
xlat
push
cmp
adcl
pop
push
mov
pop
test
out
enter
dec
test
mov
nop
add
insl
or
call
cmpsl
shlb
fidivl
sub
dec
mov
push
inc
repnz
lcall
data16
sbb
rcl
ret
xor
lahf
xchg
xchg
sbb
mov
mov
ret
pop
outsl
lods
subb
insl
pop
ficompl
cli
add
mov
add
repnz
les
nop
sbbl
mov
jmp
ds
int
mov
sbb
jne
aas
and
jne,pt
xchg
or
outsb
cmp
inc
sub
mov
xchg
loope
imul
sbb
loope
test
adc
sub
dec
inc
xor
adc
inc
adc
mov
xor
int
push
cmp
mov
mov
into
out
rclb
pxor
add
adc
xor
push
sub
inc
and
xchg
mov
adcb
jg
test
xchg
addr16
pusha
iret
shlb
sahf
and
roll
jg
push
loop
idivl
xor
iret
push
cmc
mov
ss
daa
mov
sahf
jb
sbb
into
mov
sbb
inc
scas
jl
aad
dec
scas
inc
push
aaa
popa
loop
cmp
iret
outsl
pushl
sub
icebp
hlt
lret
pop
fwait
imul
shlb
fs
fdivrs
jo
out
cmpsb
rclb
inc
daa
fisubrs
push
iret
xor
shr
sub
in
mov
loop
jmp
cmp
xor
aas
outsl
pop
fimuls
imul
inc
movsb
xor
lods
sbb
xor
pop
xor
cmp
outsl
and
adcb
pop
push
stc
sbb
jae
pop
outsl
xchg
push
test
mov
imul
jno
test
sahf
sbb
pop
decl
cmpsb
mov
cmpsl
mov
cs
xchg
lcall
mov
mov
sub
test
lcall
xchg
out
mov
fiadds
outsb
jbe
orb
in
data16
imul
mov
fisttpll
push
xor
cli
cmp
jns
lret
imul
push
cltd
jbe
and
sub
mov
cli
adc
cmp
into
inc
ds
or
fnstcw
jne
into
call
xor
int3
jne
popf
mov
jl
inc
ds
xor
pop
and
ret
movb
xor
adc
insb
ja
pop
sub
push
jge
jo
loopne
addr16
adc
fidivrl
leave
xchg
mov
cld
jmp
sbb
rorl
inc
adc
shll
sahf
imul
or
push
daa
fistps
jmp
xchg
or
ja
mov
cld
jno
cmc
roll
lahf
mov
pushf
push
dec
flds
sbb
aad
rorl
push
lret
lods
pop
sub
cs
lds
and
adc
out
inc
incl
orb
imul
sub
hlt
or
jge
mov
loopne
arpl
push
je
dec
pop
xchg
es
mov
and
inc
push
adc
mov
push
push
leave
and
mov
sub
jo
stos
lds
xchg
mov
mov
ret
outsl
mov
or
jmp
jle
inc
ja
lret
mov
adc
fs
sbb
sbbb
xor
sbb
sub
adc
sub
jbe
loope
out
or
cmp
ja
inc
mov
jle
arpl
fisttpl
insl
sub
fstpt
je
rclb
inc
push
fistpl
lods
xchg
xchg
jb
int
enter
sti
mov
iret
push
stos
loopne
push
orb
jae
int3
fdivp
loope
test
and
mov
aaa
inc
into
dec
hlt
jne
ds
ljmp
pop
jns
or
sbb
push
add
hlt
call
inc
lock
sub
xchg
mov
lcall
aaa
mov
subb
ret
or
xchg
cmp
sbbb
jle
jnp
mov
push
int
mov
in
cli
pusha
or
pop
dec
inc
cmp
pop
adc
jp
jge
lret
xchg
xor
mov
mov
inc
mov
jp
fadds
cmpsb
xchg
cmp
out
push
push
pop
pop
movsb
mov
call
push
jae
gs
fsubr
into
inc
in
adc
test
jo
ljmp
cmpsb
sub
cld
inc
xchg
fiadds
out
push
mov
rcl
mov
pop
clc
es
fdivs
dec
sbb
imul
js
or
cwtl
mov
movsb
popa
xchg
loopne
pop
sbb
xchg
cwtl
jnp
mov
cmc
or
jecxz
popl
pop
mov
dec
es
cs
cmp
ret
mov
loope
and
incb
mov
pop
jae
pop
adc
fldt
fwait
js
movsl
cmp
insl
dec
mov
and
jl
js
and
std
dec
lahf
add
ds
movsb
push
and
cmp
mov
sbb
adc
sbb
xchg
dec
sti
leave
pop
add
aam
popf
lea
cmp
and
add
cmp
jmp
pusha
nop
int3
inc
xor
leave
xor
std
xor
pushw
xchg
frstor
dec
mov
add
ret
shll
push
jge
int3
stos
adc
andl
repnz
jb
and
inc
mov
in
shll
mov
jge
and
out
jbe
insl
jbe
lret
xor
dec
xor
fmuls
pop
mov
repz
outsl
pop
out
adc
sbbl
cmpsl
out
or
nop
push
mov
sbb
pop
push
mov
cli
mov
add
hlt
enter
jno
popf
enter
clc
xor
fs
mov
mov
outsl
pop
outsb
and
jmp
mov
imulb
orb
dec
cmpsb
sbb
sbb
mov
outsb
jnp
pop
cs
jae
out
out
cmp
push
icebp
xlat
jns
and
xchg
pop
rorb
cwtl
pop
mov
mov
xlat
mov
add
loopne
in
pop
fists
fdivrl
jnp
shll
jb
jecxz
pop
add
ret
shll
lret
xchg
lds
mov
fldl
loop
and
enter
in
adc
dec
xor
inc
cmp
pop
scas
mov
push
clc
jb
insl
movsl
push
out
mov
or
cmp
xor
push
cmp
xchg
nopl
mov
jnp
shll
sarb
sbb
sub
repnz
and
xor
cmc
ret
mov
addl
mov
int3
test
clc
cmp
insb
mov
xorb
sub
scas
mov
pop
ret
inc
mov
cmp
in
dec
mov
sbb
and
stos
and
jl
jmp
mov
enter
aam
push
shll
into
lahf
cltd
adc
dec
addb
mov
mov
icebp
xor
or
mov
pusha
fcompl
int
inc
mov
and
iret
ret
loop
add
add
insb
ja
cmp
adc
cmpsl
cmp
repnz
adcl
lret
adc
mov
jle
pop
call
jo
xor
adc
sbb
arpl
rclb
inc
xor
movsl
in
fcompl
push
jl
enter
jge
out
or
shl
sbb
or
aas
outsl
adc
lods
jnp
bound
dec
loopne
mov
sti
in
push
int3
add
sbb
icebp
aam
adc
cmp
js
mov
mov
daa
pop
sbb
jle
mov
add
jge
xchg
mov
lret
and
pop
cmp
pop
cs
movsb
adc
jmp
ficoms
mov
mov
inc
add
inc
dec
jbe
sbb
mov
lods
iret
xorl
rol
pop
push
ficomps
push
je
testb
adc
mov
and
push
daa
xor
pop
add
xor
xor
lcall
std
sbb
mov
sub
lods
fidivrs
lock
pop
mov
sbb
sbb
insl
xchg
adc
roll
and
jns
inc
loope
xchg
iret
rol
jmp
in
inc
cmp
scas
dec
sub
or
fsubrs
ljmp
cmp
mov
or
sub
mov
sub
enter
sub
bound
ljmp
jno
cmpsl
xchg
jae
aaa
dec
jecxz
fldl
and
adc
mov
lcall
mov
xchg
sub
lahf
int
push
movsb
inc
outsb
sahf
mov
outsl
jmp
mov
pop
aas
rclb
lock
aas
outsl
pop
jmp
jg
mov
leave
sti
xor
ds
movsb
pop
hlt
loopne
xlat
dec
fiaddl
nop
imul
arpl
aam
jb
xor
sbb
pop
mov
cmpsl
mov
mulb
adc
sbb
add
cmp
popl
loope
dec
loopne
sbb
movsl
dec
popa
movsb
rcrl
inc
sbb
movnti
mov
lcall
sbb
pop
xlat
xchg
sbb
push
push
sub
inc
aaa
ss
gs
out
push
or
dec
pop
scas
mov
add
out
ss
arpl
gs
daa
push
jge
ja
push
imulb
add
add
test
pop
push
push
jnp
cs
inc
jg
mov
cmp
pop
addr16
pop
lea
jmp
mov
add
fucomp
mov
in
xchg
lods
adc
push
iret
nop
mov
mov
in
mov
dec
push
cs
lods
leave
mov
pop
test
in
adc
mov
cwtl
sti
cmpsb
movsb
fsubs
cmpb
xlat
mov
outsl
fiaddl
jo
mov
inc
mov
call
aas
fidivs
pop
mov
or
mov
in
shrl
or
adc
iret
fwait
jle
push
push
push
and
jg
inc
enter
mov
mov
pop
push
mov
stos
popf
push
cmp
or
cs
out
mov
cmpsb
movsb
sub
das
xor
cld
cmpsb
sub
add
and
mov
or
insb
test
cmovl
pop
push
dec
neg
mov
loopne
jp
testb
clc
sub
xchg
xor
push
stos
push
lock
push
arpl
xchg
test
sub
popf
cltd
loop
jb
loop
js
mov
testl
test
leave
js
mov
push
pop
xchg
xor
cli
xor
adc
mov
les
jge
lret
and
repnz
xchg
pushf
insl
mov
fstps
push
jl
xorl
jp
mov
mov
fs
sbb
jns
fnstsw
sub
adc
push
xchg
insl
cs
ret
movsb
mov
xchg
sbb
xchg
ss
inc
xchg
inc
adc
div
cmpsl
pop
addb
in
mov
dec
cmp
cs
in
xchg
out
cs
out
lods
test
test
and
xchg
fwait
and
adc
std
sbb
mov
mov
pop
sarb
jmp
mov
clc
aas
ficoms
pop
cmp
dec
mov
pop
ljmp
xchg
pop
adc
fidivrs
fisttpll
adc
into
jge
shll
inc
and
fadds
xchg
fwait
aad
jbe
lret
cmp
adc
inc
pop
mov
outsb
lahf
push
rcll
jns
cld
jle
xchg
leave
or
movsb
and
aas
cmp
std
jl
mov
int
adc
aam
std
add
ja
cmp
jb
out
inc
mov
sbb
outsb
mov
jo
dec
iret
int
sub
add
cli
clc
popf
mov
jno
or
dec
fisttpl
adc
add
into
adc
xor
es
xchg
inc
sub
xchg
sbb
repnz
mov
sbb
and
sbb
jne
mov
arpl
movl
push
inc
cmp
mov
cmp
sub
pusha
fildll
xor
js
xor
fistpl
xchg
aaa
adc
add
jl
or
mov
aas
or
cmp
movsl
adc
inc
pusha
fdivs
xchg
mov
xchg
mov
dec
sub
fdivs
xchg
js
lea
push
jno
adc
push
sbb
test
sarl
mov
sbb
cli
mov
stos
cmp
jne
mov
cmp
pop
inc
test
cmp
dec
cmpsb
out
xor
and
jmp
sti
mov
cld
mov
jg
in
sub
out
adc
addr16
fisttpll
xor
cmc
sub
in
nop
test
in
ficoms
and
jne
jle
cli
in
pop
addr16
loop
clc
daa
pushf
dec
mov
pusha
loop
inc
enter
mov
iret
out
sub
leave
mov
popa
pop
repz
or
sub
mov
les
faddp
push
jo
push
push
sbb
xlat
and
jmp
dec
stos
clc
call
popa
mov
inc
xchg
lret
lea
cwtl
and
push
add
cmp
stos
and
shll
sbb
test
bound
out
inc
mov
call
out
cmp
mov
cmc
push
les
xchg
mov
mov
js
loop
test
roll
es
sti
imul
dec
cmp
scas
imul
dec
mov
imul
xchg
push
subb
aad
popf
dec
adc
dec
mov
arpl
lcall
pusha
cmp
jle
loopne
cmpsl
pusha
mov
enter
jbe
cmc
test
data16
mov
shrb
cmp
xor
repz
ret
inc
mov
lds
movsb
loop
andl
push
dec
aas
lret
aaa
xchg
pop
mov
lcall
je
cmp
pop
mov
xchg
sub
popf
xor
and
in
xchg
mov
adc
daa
pusha
xchg
popa
ljmp
movl
or
out
adc
adc
les
into
xchg
gs
leave
bound
rclb
insl
fildll
mov
jno
and
push
xchg
mov
add
inc
xchg
push
push
cmp
push
mov
mov
mov
in
or
push
sar
pop
call
or
and
mov
mov
mov
mov
je
aad
pop
pop
xchg
jp
mov
cld
mov
mov
std
jge
jle
jp
popa
mov
int
clc
pushf
jo
testb
adc
inc
ret
dec
popf
fsubrs
imul
jns
cmpsl
pushf
dec
push
out
or
cmp
mov
nop
pop
loop
int3
into
outsl
pop
mov
mov
outsb
cltd
mov
adc
xor
movsb
je
fwait
popa
data16
and
mov
out
andb
dec
lahf
pop
or
hlt
call
mov
jp
xchg
fsubl
imul
sbb
mov
sar
stc
xchg
xor
sub
std
dec
setnp
sub
addr16
sbb
popa
incl
mov
jae
test
xor
or
mov
push
sbb
jae
push
pushf
cmc
std
in
aaa
jae
and
mov
jmp
aas
sub
pop
mov
mov
cwtl
scas
xchg
movsl
mov
or
pop
inc
inc
dec
or
mov
pop
mov
nop
xor
push
icebp
cmp
aaa
jecxz
arpl
inc
imul
inc
sbb
jae
arpl
sbb
test
roll
int
push
rcrl
test
loope
das
lret
clc
xor
mov
adc
stos
mov
arpl
add
ror
cwtl
hlt
xchg
dec
mov
sub
and
ja
mov
xor
test
add
int
adc
cltd
fidivl
inc
test
pop
push
pop
jbe
out
dec
loope
and
sbb
jnp
sub
popa
add
add
xchg
dec
push
inc
into
ljmp
addb
scas
jmp
sti
xor
xchg
cmp
or
and
sti
sti
sti
imul
dec
xor
lock
fwait
pop
xor
add
cs
js
inc
xor
push
inc
fnstsw
outsl
les
pop
mov
ja
sub
mov
adc
pop
jb
clc
sub
mov
fwait
test
mov
and
movsl
clc
mov
insb
jns
mov
or
jp
cmpsl
popf
stc
popa
sbb
push
ret
jnp
mov
push
or
or
jmp
es
mov
xchg
cmpsb
lods
test
jns
and
mov
cmp
add
mov
lahf
lds
test
fdivp
mov
push
jae
mov
lea
or
jle
fadd
push
les
sahf
sbb
adc
sbb
jno
xchg
cmc
scas
cli
xlat
sbb
cwtl
imul
xchg
add
jmp
dec
ljmp
in
xchg
cld
aaa
push
jo
sub
out
xor
aam
arpl
push
inc
outsl
ret
adc
dec
iret
mov
adc
jle
mov
mov
and
lock
jg
aam
and
jne
push
inc
push
jo
fwait
jmp
push
adc
xchg
dec
lods
push
aas
add
cmpsl
cmp
push
sbb
cmp
inc
add
mov
pushf
push
pop
inc
inc
pop
xor
jmp
loop
xorb
push
xchg
cmpsb
adc
fidivs
pop
sub
mov
adc
inc
repnz
push
add
cmpsl
std
xchg
cld
xchg
xor
int3
cmp
sub
js
adc
testb
fimull
push
mov
shl
inc
xstore-rng
cmpsl
xorb
imul
imull
xlat
mov
sub
add
test
push
xchg
xor
mov
pusha
int
aad
lret
push
xchg
cmp
mov
inc
fisttpl
or
loop
dec
mov
imul
ds
out
inc
mov
push
jle
dec
pop
pop
mov
cmc
inc
mov
xor
emms
fidivs
dec
cmp
mov
int3
cmc
lods
add
aaa
sbb
inc
sbb
addr16
pop
shr
mov
imul
pop
xor
inc
imul
push
add
push
loope
jg
sub
sbb
or
les
testl
hlt
push
sbb
mov
sbb
sub
fdivs
mov
js
xchg
dec
xor
sbb
enter
loop
std
xor
ja
cmpb
sti
stos
ret
inc
clc
jne
pop
or
jae,pt
or
or
add
or
ret
inc
into
mov
subl
scas
xor
cwtl
adc
inc
into
jo
and
lahf
outsl
add
dec
in
scas
inc
fcmovbe
movsb
int3
mov
lret
adc
xchg
or
roll
inc
imul
cmp
push
data16
or
mov
xor
js
fnstenv
mov
sarl
xor
cwtl
aaa
test
jnp
addl
lret
lahf
stos
call
lret
mov
int
add
add
ficoms
or
xchg
fwait
cmp
push
fs
xchg
in
sub
push
sahf
cli
cltd
sub
mov
cwtl
add
xor
gs
out
scas
adc
mov
pop
push
mov
cli
ret
std
fs
jbe
sub
add
pop
cmpsb
aaa
insl
xchg
xlat
adc
jno
cmc
mov
lds
xlat
push
jnp
xor
test
dec
dec
test
sti
in
je
push
stos
cmc
jbe
cmp
sub
pop
sbb
addr16
int3
push
out
push
xchg
ds
dec
fnstsw
shlb
pop
movsb
jl
popa
cwtl
cmpsb
insl
jno
fmull
repnz
push
sbb
add
mov
mov
in
outsl
popf
lods
das
lea
mov
and
jg
add
aam
jne
adc
pop
aam
push
js
jae
or
jg
cmpl
mov
shlb
js
or
xchg
mov
icebp
fildll
jmp
mov
add
xor
inc
cmp
or
fildll
in
lcall
and
mov
movsb
imul
xchg
mov
push
cwtl
mov
cmp
movsb
das
xorl
push
inc
call
roll
in
sub
adc
inc
loope
or
sahf
insl
cmp
fimull
push
mov
or
test
pop
shll
jnp
fsubrl
push
js
rcr
in
mov
enter
mov
jmp
idivb
cmpb
mov
sub
dec
cmp
jb
ds
sbb
inc
imul
push
int3
add
mov
cmp
call
jmp
int3
push
popf
in
dec
push
jbe
mov
imul
out
dec
pop
shll
sbb
sbb
stc
cmovg
mov
mov
pop
mov
pop
loop
adc
mov
sub
or
es
mov
fsubrl
pop
ss
in
pop
jne
sbb
sbb
cmp
in
mov
lds
cld
rorb
insb
dec
lods
xchg
jns
fisubrl
add
mov
imul
sbb
repnz
xchg
or
rorb
mov
dec
mov
sarb
mov
je
rcrb
imul
push
icebp
lahf
out
mov
adc
out
out
or
mov
lret
jo
push
push
mov
jle
cltd
fwait
cmpsb
add
shll
sahf
mov
xchg
jl
mov
subb
stos
cmp
mov
mov
js
add
mov
inc
sub
stc
inc
leave
icebp
mov
into
sub
and
pop
aam
xor
aad
test
sub
lds
adc
and
out
sbb
addl
jno
lret
dec
adc
and
push
test
adc
pop
imul
out
les
pop
rolb
js
bound
inc
xor
adc
and
andl
fistpll
mov
lock
jp
mov
inc
fcmove
scas
push
and
aam
dec
push
in
hlt
xor
sub
sub
inc
or
sub
and
inc
scas
mov
adc
stos
and
mov
dec
push
jno
xor
fists
lods
sbb
call
push
cmpsl
sbb
test
scas
or
aaa
and
add
iret
adc
or
and
inc
inc
dec
mov
mov
fiaddl
sar
rcr
int3
push
push
lock
dec
cmp
and
inc
jge
mov
mov
dec
and
add
cmpsl
pop
dec
mov
pop
push
xchg
push
jge
xor
and
mov
mov
adc
bswap
mov
mov
cwtl
xor
xor
inc
sub
push
xchg
jg
push
dec
push
cwtl
mov
cmpsb
adc
out
ds
adc
adc
jmp
sbbl
into
subl
insl
and
and
dec
das
add
mov
lea
clc
and
adcl
scas
stc
lret
mov
loop
push
sti
pop
scas
inc
cmp
test
pop
hlt
aad
push
xor
pop
cmc
test
leave
out
adc
push
cmp
adc
pop
cmc
adc
out
cld
add
pop
inc
pop
ja
add
lret
scas
push
push
dec
movsl
pop
loopne
cwtl
mov
push
addl
pop
mov
outsb
sbb
imul
xor
or
cmpsl
popf
iret
lds
push
sti
fcoms
loop
outsb
ljmp
inc
cwtl
std
cmp
out
jo
dec
adc
push
mov
shrb
je
dec
xchg
lret
xor
cmc
cmp
les
jecxz
push
in
xchg
mov
cmpsl
mov
in
adc
dec
sbb
inc
adc
jo
mov
shll
jno
das
jno
xor
jno
icebp
sbb
lcall
add
sub
cmp
xchg
push
jo
inc
test
lods
int
pop
jg
leave
ror
or
jae
or
and
jmp
pushf
popl
inc
cmp
xlat
jns
lods
xchg
jo
inc
lcall
loop
xor
xor
add
cmc
pop
xorl
mov
pop
push
mov
jns
jge
test
mov
dec
jmp
sub
popa
lea
sahf
or
inc
jp
dec
dec
cld
leave
lods
pop
and
mov
jge
sbb
sub
outsb
lret
addr16
js
leave
bound
mov
adc
aam
cmp
in
mov
rolb
sarl
cwtl
xor
push
insb
ret
filds
test
pop
outsl
push
in
xchg
pop
cli
or
dec
xor
imul
fstl
mov
sbb
xchg
jg
enter
cmp
fs
mov
repz
popa
dec
xchg
or
and
ffreep
out
dec
xchg
mov
lea
ret
jp
stos
dec
cmp
pop
test
adc
jle
movntq
shlb
mov
xchg
mov
lods
pop
jae
or
push
jecxz
test
mov
mov
jp
mov
mov
mov
out
jbe
imul
lock
inc
push
fadds
sbb
push
jne
add
mov
arpl
cmp
lret
or
jnp
xchg
push
subb
in
cmp
int
adc
gs
rcll
or
sarb
in
fwait
enter
and
das
aad
inc
sbb
insl
cmp
aaa
push
sub
mov
and
pop
jmp
xchg
popf
icebp
cli
mov
test
mov
xor
pop
add
andb
fs
or
out
mov
lock
or
push
stos
fsubrl
cmc
pop
add
shll
cmp
shrl
idiv
mov
mov
lods
add
mov
test
cmp
add
adc
inc
xchg
xor
arpl
js
push
movsb
push
shll
dec
adc
int
test
dec
mov
sbb
dec
push
mov
insl
fnop
mov
and
rol
jb
or
mov
jno
pop
sarb
add
divl
cmpsb
pop
xor
shlb
add
cld
xor
dec
push
inc
xor
cltd
dec
in
push
mov
jne
adc
add
adc
aam
pushf
jle
dec
movsl
lret
loopne
movsl
mov
inc
addr16
xchg
xor
cs
out
out
cld
adcl
push
mov
or
jg
les
inc
dec
xor
leave
xor
loopne
mov
outsb
pop
int
inc
lods
loopne
mov
popa
icebp
inc
inc
shlb
test
loopne
fwait
in
je
pop
xor
adc
cmp
out
inc
xor
xlat
mull
cmp
movsb
dec
push
xor
mov
jmp
int
or
push
out
pop
data16
sahf
lret
jmp
jb
jl
mov
cwtl
fisttpl
stc
ret
lcall
daa
jns
aam
dec
pop
mov
push
xchg
xor
imul
xor
je
push
dec
xchg
arpl
adc
adcl
add
inc
mov
mov
cmp
jge
pop
inc
inc
incb
dec
xchg
lret
jnp
rcrb
jle
jnp
push
rolb
jmp
push
jns
shll
imul
pop
jno
movsl
jne
adc
jae
insb
jecxz
add
leave
push
push
sbb
xorl
sbb
sub
inc
xchg
or
rclb
and
dec
mov
scas
push
setge
xchg
ds
push
push
mov
in
xor
loope
inc
neg
and
add
xchg
push
jno
sub
fwait
mov
sti
sub
addr16
push
inc
xor
adc
in
ret
outsb
fildl
adc
push
dec
subb
insb
rclb
arpl
adc
into
push
pop
pop
ljmp
iret
mov
push
nop
test
pop
cwtl
andl
pop
mov
jne
mov
ret
inc
hlt
es
cmp
cmc
push
adc
mov
cmp
adc
xchg
lods
pop
jecxz
dec
push
and
ss
mov
dec
mov
daa
lahf
jae
push
cmp
stos
enter
mov
xchg
push
fwait
sbb
jle
hlt
in
ja
rcr
iret
lods
xchg
ficoms
dec
xlat
add
sbb
inc
xor
cmp
mov
mov
lret
push
mov
lcall
nop
adc
jge
bound
dec
js
mov
pop
test
sub
out
xchg
jge
movsl
push
adc
mov
push
scas
sti
popl
mov
xchg
jno
push
repnz
idiv
jecxz
mov
cmp
dec
fbld
jmp
pop
ret
xor
jb
or
movsb
xchg
inc
cltd
add
mov
out
sbb
cmp
ljmp
lahf
mov
sub
jg
pop
out
mov
aam
shlb
add
lds
push
das
pushf
mov
imul
inc
clc
lret
jno
mov
test
js
mov
adc
push
into
iret
mov
iret
je
lcall
cwtl
jmp
or
pop
push
popl
push
pop
in
fwait
jle
bound
lods
lds
test
mov
sbb
sub
pop
lods
push
pop
pop
lahf
cmp
xchg
jae
aaa
jge
orl
xchg
popf
cmp
out
sub
lcall
xchg
push
add
mov
rcll
mov
ja
enter
cs
popf
out
rcll
hlt
push
or
in
pusha
add
fcoml
jecxz
lea
fidivrs
dec
in
xor
or
sub
fildll
dec
adc
adc
scas
in
dec
jge
push
jns
rolb
lahf
out
test
out
sbb
movsl
jmp
xchg
xchg
inc
lock
push
xchg
cmp
dec
mov
insb
bound
iret
sub
or
rclb
push
jmp
icebp
mov
xor
and
pop
add
jae
xor
push
in
adc
lea
sub
fistl
rcll
xchg
push
mov
pop
outsl
push
sbb
aas
push
aam
sbb
lea
push
push
push
ret
lahf
mov
or
lcall
sub
and
scas
test
jmp
cwtl
je
pusha
add
mov
mov
lret
insb
inc
fs
jg
push
test
add
mov
pop
adc
pop
je
sbb
inc
inc
test
loopne
mov
xchg
or
ret
fs
call
mov
out
aam
lahf
sarb
pushf
mov
adc
aad
and
ret
subb
jecxz
and
add
xchg
xchg
test
dec
jge
test
aad
fldt
pop
shl
sub
add
push
xor
pop
sub
hlt
jmp
in
and
cmp
dec
add
shrl
jle
cwtl
xchg
ret
into
insl
sbb
out
mov
dec
dec
pop
in
mov
popf
sub
mov
fidivl
sbb
or
mov
cmc
test
ja
xchg
cld
sbb
inc
add
pushf
flds
nop
std
movsl
sub
xlat
test
push
out
in
jmp
mov
js
sub
dec
lret
pushf
xchg
je
adc
lret
push
cmc
test
roll
inc
insb
fs
out
and
add
push
mov
jmp
xchg
pop
pop
call
pop
icebp
popf
lock
int3
jbe
mov
ret
pop
lahf
push
stos
lock
sbb
inc
and
mov
or
and
sub
pop
push
ja
lea
push
xchg
sub
cld
lret
cmp
xchg
mov
fcmovb
daa
sbb
jae
iret
xchg
add
xor
adc
ret
xchg
loope
cs
mov
cli
pop
pop
jno
cmp
and
mov
mov
mov
shl
mov
xchg
aad
imul
xchg
in
inc
push
sbb
cmpsl
jno
and
fmull
pop
in
pop
and
pop
sbb
nop
andl
inc
mov
hlt
push
xchg
sub
adc
mov
mov
push
pop
cld
popa
std
xchg
das
mov
ficoml
jo
cmp
add
dec
and
xor
pop
sub
pop
jecxz
push
jmp
jb
xor
push
lea
subb
add
mov
ja
movsl
xor
dec
imul
sar
xchg
sbb
outsb
dec
das
das
push
push
scas
cltd
ss
faddl
enter
push
dec
adc
test
ljmp
adc
sbb
lret
pop
test
mov
xchg
jno
xchg
sub
jge
test
jno
scas
mov
mov
cs
in
repz
mov
pusha
movsb
mov
addb
lcall
lds
mov
mov
call
rcll
loop
mov
fs
repz
js
imul
sbb
xor
sub
pop
jne
out
in
int
lahf
push
xor
cwtl
mov
push
test
mov
ficoml
sbb
int
clc
xchg
addl
jg
mov
test
hlt
xor
cmp
mov
mov
das
dec
add
push
cli
popa
loope
or
rcrl
in
fsubr
xchg
sbb
or
in
cmp
add
cld
or
sub
xchg
xchg
test
cmpsb
dec
sbb
mov
fs
pushf
or
adcb
or
enter
inc
and
sbb
cmp
shll
sarl
push
lds
call
push
mov
pusha
std
dec
clc
mov
sub
shlb
lea
pusha
sub
repnz
push
cwtl
lds
ret
xor
pop
repz
cmp
adcb
cmpb
scas
adc
repnz
mov
int
int
add
dec
push
push
adc
dec
dec
jae
and
lds
adc
mov
jbe
cmp
popf
sub
lea
jle
push
xchg
jmp
jnp
loope
push
mov
divb
notl
ds
jmp
aaa
out
in
cmp
xchg
add
ss
sbb
sti
pusha
push
hlt
repnz
xchg
cmp
arpl
pushf
jb
sahf
inc
add
gs
xchg
pop
mov
jnp
adc
jge
jg
sahf
or
iret
push
jno
int
sahf
clc
and
mov
sbbb
sbb
fisubs
adc
mov
aas
mov
rcll
sub
sbb
push
loop
xchg
jns
cli
mov
add
movb
sub
and
outsb
lret
movl
mov
aad
hlt
jg
fs
mov
inc
mov
arpl
sbb
aaa
out
incb
cli
adc
mov
add
sbb
xchg
sbb
inc
pop
out
fmull
and
adc
sahf
jbe
xor
sub
mov
iret
fsubl
aaa
push
into
inc
pushf
pusha
adc
es
xor
pusha
mov
and
push
out
ja
sbb
lcall
mov
loopne
push
call
cmp
in
jl
or
mov
xor
lcall
xchg
sti
pop
adc
sbb
add
push
push
cmpsl
pop
sub
dec
daa
xor
jb
jmp
sar
push
sub
mov
aam
xchg
jns
repz
sbbl
int3
inc
dec
call
imul
add
cmp
push
lds
xlat
add
xchg
xchg
adc
repz
xchg
mov
clc
sub
js
push
cmp
into
imul
sbb
jbe
dec
cmpsb
dec
mov
mov
jmp
sub
xor
pushf
jnp
push
inc
ret
push
in
xchg
bnd
lret
dec
xchg
aad
cmpsb
sbb
jo
and
adc
bound
rclb
out
sbbb
mov
pop
outsl
push
jmp
xchg
cmp
jo
dec
mov
scas
mov
mov
fistpll
push
adc
xchg
insb
ja
push
or
or
push
lcall
xchg
xchg
out
adc
push
ror
xchg
cmpsb
std
xchg
aad
inc
flds
or
insl
fmuls
ret
cmp
sbb
dec
aaa
test
add
xlat
xor
dec
push
add
push
icebp
inc
cmp
daa
xchg
push
stc
inc
push
push
rcl
jne
scas
in
inc
mov
in
adc
sahf
pop
fdivrl
dec
leave
cltd
cwtl
shrb
aad
add
pusha
jbe
call
inc
xor
mov
mov
sub
mov
xchg
jae
xor
mov
sub
popa
test
lods
mov
mov
ret
repz
or
sbb
dec
push
orb
lods
test
aad
cmp
jg
daa
ror
mov
insb
dec
inc
sbb
or
mov
mov
nop
fbstp
and
xor
sbb
sti
mov
add
mov
cmp
test
and
dec
fdiv
xor
sub
xor
lock
loope
dec
roll
call
sub
imul
inc
pop
jge
ret
push
jge
lds
mov
xchg
xor
mov
sub
inc
add
insl
lcall
sub
mov
mov
jmp
mov
cmp
jle
in
xor
in
mov
fmuls
ret
ret
call
arpl
aas
pop
push
mov
dec
xor
mov
mov
jo
add
dec
lock
es
sbbl
push
and
push
pop
in
movsl
pop
mov
jo
paddsb
sbb
imull
push
sarl
mov
test
mov
outsl
mov
pop
insl
inc
xlat
mov
aaa
scas
pop
push
adc
and
lds
sub
loopne
fmull
xor
ss
mov
movsb
pushf
jg
fimull
insl
ja
xchg
cmp
lret
mov
mull
rcr
jnp
dec
add
pop
test
int3
add
aad
or
inc
call
cwtl
rclb
sub
mov
xor
jle
bound
iret
adc
jne
ss
push
lret
xchg
cmp
arpl
retw
xchg
xor
dec
in
push
in
jns
movsl
push
mov
mov
cmp
idivl
call
sbb
adc
push
jl
repnz
fdivrl
mov
aad
mov
xchg
mov
ds
cmpsl
es
fldl
jmp
xor
out
jnp
test
ds
push
sub
xor
xchg
je
pop
or
push
fistpl
push
aaa
pop
push
pop
and
jns
xor
or
jmp
xchg
dec
mov
and
sub
pop
xchg
adc
out
jecxz
sbb
stos
stc
sub
or
aad
pop
test
lea
jne
dec
int
xchg
xchg
in
jae
mov
mov
fidivrl
and
shll
jbe
cmp
mov
adcb
jmp
inc
out
xchg
das
cld
lea
cli
adc
out
setge
mov
adc
and
and
cmp
dec
mov
xor
js
cmp
or
inc
push
ss
dec
jnp
mov
and
jmp
ret
adc
lret
jecxz
stc
sarl
repz
cwtl
inc
sbb
adc
dec
enter
cmp
std
push
jnp
mov
xchg
mov
mov
imulb
aad
cmp
imul
mov
xchg
xchg
ret
int3
outsl
js
imul
cmp
pop
out
ja
mov
or
testl
inc
hlt
or
fidivrs
xchg
into
inc
ljmp
jecxz
jecxz
sub
jbe
jo
jbe
sahf
cmc
cmp
std
cltd
add
sahf
dec
push
push
or
adc
sub
dec
or
sub
sub
cmp
loop
pop
jo
aad
push
scas
sbb
sbb
ret
scas
jp
or
sbb
enter
xor
cmpsb
testb
ja
gs
fisubrs
sub
cmp
dec
rorb
jmp
pop
sbb
jecxz
rolb
cltd
shl
jns
add
stos
leave
adc
pop
test
mov
pop
or
imul
add
push
sbb
popf
rcll
cmp
aaa
pop
jp
ss
jae
cmp
cmp
sbb
scas
sub
sti
daa
dec
sahf
ss
gs
xor
in
mov
pop
cmp
cmp
rorb
les
pop
ljmp
xchg
loope
adc
sbb
out
subl
idivb
jecxz
frstor
fimull
or
fdivrl
shrb
loop
add
imul
mov
add
mov
je
test
lock
mov
lahf
cltd
xor
xchg
test
push
jecxz
scas
dec
mov
push
or
inc
aaa
je
push
jo
mov
inc
shlb
sarb
cmpl
jb
pop
loopne
rcrb
inc
fisttpll
cmpsl
pop
jne
les
lds
jmp
mov
arpl
loop
neg
pop
mov
jp
popl
in
insl
ficoml
sub
xchg
push
popa
lret
clc
outsb
ds
cmp
rcrb
sub
les
jo
enter
pop
push
pop
sbb
add
cmp
dec
inc
push
and
and
push
xchg
rcrb
or
pop
test
ror
jbe
dec
add
cmp
insl
idivb
and
push
and
mov
out
pusha
mov
loope
fndisi(8087
pop
pop
leave
adc
add
xor
int
shl
imul
or
shll
xorl
ffree
scas
test
jle
push
or
sahf
push
pusha
dec
inc
cmpsl
cmp
adc
hlt
mov
sub
sub
dec
js
or
and
out
imull
dec
xchg
mov
adc
das
leave
lods
clc
mov
stos
ljmp
mov
adc
scas
sbb
pop
jns
mov
lods
out
or
sub
pop
addr16
mov
sahf
fstps
cmpsl
test
add
movsl
xor
ja
xor
push
sti
mov
adc
inc
xchg
push
incl
int3
arpl
dec
je
dec
jmp
adc
testl
es
dec
add
sti
enter
add
outsl
mov
cmp
test
in
loope
pop
cld
mov
nop
push
fcom
loop
addr16
loop
dec
jg
or
pop
sbb
push
pop
xor
int
sub
jb
add
ja
sarl
cwtl
sub
xchg
loope
mov
pop
mov
movsb
push
mov
sbb
cmpl
lret
popa
xchg
mov
push
test
mov
stos
jne
inc
adc
xchg
clc
or
addb
or
cmpsb
dec
cmpsb
inc
adc
imul
mov
je
jno
cmc
mov
cmp
repz
add
mov
mov
jo
pop
and
daa
mov
sti
pop
cli
out
lods
jae
decb
push
mov
add
fnsave
xchg
cmpsl
cld
out
fsubs
outsl
pop
int3
lcall
sbb
mov
mov
out
int3
dec
jecxz
dec
sub
in
and
push
outsb
cmpsl
add
push
and
pop
test
pop
xchg
lahf
loope
mov
sahf
je
std
xlat
fmuls
cmc
and
jg
mov
sti
sbbb
out
outsl
loope
subl
add
jecxz
sbb
and
pop
out
mov
push
dec
incl
out
add
popf
inc
jp
ret
in
gs
gs
xor
mov
loop
lret
fisubrl
adc
xchg
adc
mov
jnp
mov
iret
mov
stos
dec
mov
pushf
mov
sbb
outsb
and
stos
xor
push
iret
aas
push
pop
inc
xor
aam
test
jle
xor
lret
in
xor
mov
lods
sahf
and
and
fdivr
test
pop
lret
es
in
test
popa
loop
test
in
or
dec
push
test
push
or
cmp
sti
hlt
jecxz
aam
pushf
into
pop
enter
add
je
dec
dec
xchg
out
mov
das
int
sti
in
bound
into
nop
test
outsb
or
sub
cld
push
shll
popa
inc
push
dec
loopne
cmc
adc
or
sahf
cmp
repz
fld
cs
loope
mov
call
inc
ljmp
cmp
mov
jle
jae
add
nop
xchg
and
mov
jae
jne
cmp
inc
pop
fwait
rclb
xchg
out
xchg
outsl
push
mov
lahf
ret
cmp
shrb
ret
mov
ja
and
jae
ljmp
cmpsl
ror
orl
js
int3
into
mov
lcall
mov
jmp
push
adc
and
in
faddl
mov
das
push
fcoms
xchg
and
insl
inc
sub
ss
stc
mov
xchg
ds
and
jecxz
out
push
inc
and
bound
pop
dec
sti
sub
mov
sub
mov
out
cltd
loope
js
sahf
or
lahf
pushf
jo
xchg
sbb
pop
and
aad
jae
push
insb
inc
sbb
mov
ret
ljmp
sub
leave
stos
add
push
mov
jecxz
jo
or
dec
ret
ds
lock
sub
xchg
roll
sub
fyl2xp1
in
and
dec
or
mov
mov
mov
cmpsl
ret
xchg
mov
cs
lock
dec
xor
in
int3
in
and
mov
in
xor
inc
stc
xchg
adc
mov
push
test
or
iret
pop
push
in
xchg
notb
mov
add
sbb
fsubp
aam
add
testb
pop
das
lahf
sbb
out
ds
mov
scas
cli
lcall
adcb
adc
ss
std
pop
test
xchg
scas
das
fwait
daa
add
dec
in
fadd
cmp
pop
sti
mov
push
daa
inc
insb
dec
inc
repnz
pushf
jae
pop
out
in
lods
pop
mov
insl
fcomps
divb
inc
xor
cwtl
aaa
sbbb
xor
call
dec
test
insb
inc
adc
dec
xorl
arpl
mov
sar
sbb
push
call
aaa
negl
insl
js
fcomps
cmpsl
loopne
fidivrs
and
fdiv
mov
mov
inc
ret
cmovp
js
jp
mov
scas
ret
xor
icebp
cld
xlat
cmp
daa
lods
shrl
pusha
ficompl
int3
popa
out
push
xchg
pop
cmpsb
aaa
pop
mov
popf
data16
push
xor
loopne
clc
lock
cmc
adc
loope
movsl
ds
dec
pusha
jmp
push
and
xor
xor
dec
aad
leave
fcmovnbe
mov
sbb
movsl
shll
pop
std
push
pop
mov
negl
mov
push
lods
inc
into
pop
jl
out
or
mov
push
inc
inc
psubsw
dec
push
jmp
mov
in
in
xchg
int
fsubrs
leave
cmp
fistps
lahf
loop
xchg
mov
cmp
movsb
insb
dec
cmpsb
mov
ret
sub
jle
pop
pop
cmp
ficomps
mov
test
xchg
add
cmpsl
dec
lret
sbb
or
movsb
cmpl
out
icebp
adc
jl
mov
enter
jecxz
jl
fildl
sbb
dec
aas
pop
scas
in
pushf
mov
mov
int3
sbb
js
in
xorb
lea
inc
pushl
and
and
ret
out
lock
jb
mov
jmp
nop
scas
jb
add
outsl
or
sbb
fnstsw
lcall
mov
cli
adc
movsb
mov
scas
stc
scas
and
mov
cmc
add
fisubs
lods
movsb
stos
xor
pop
shlb
fs
loopne
mov
loopne,pt
es
mov
jnp
and
mov
cs
lahf
xor
and
xor
fistpll
xor
mov
or
mov
cmp
xor
pop
mov
add
and
or
jns
mov
pop
fisubs
and
mov
jge
cmp
lret
out
lods
xchg
fwait
ja
rcrl
xchg
sub
gs
leave
je
add
cli
push
cli
lds
int
cs
sbb
fs
jle
insl
cwtl
xchg
jns
cli
add
addr16
sti
fwait
out
dec
scas
mov
jge
dec
sub
mov
bound
inc
add
rorl
sub
or
or
rcr
xchg
test
pop
fisubs
mov
and
and
mov
out
xchg
inc
mov
dec
cmp
lcall
daa
cs
ds
test
jo
lcall
xchg
mov
popf
outsb
scas
clc
idivb
cli
shrb
adc
int
jns
sbb
movl
sub
sbb
add
lds
pop
dec
repz
ret
fnstcw
push
lcall
fnstenv
addl
test
fmul
mov
repnz
xor
or
sub
push
test
test
es
imul
in
mov
clc
jo
adc
mov
es
call
mov
outsb
out
push
mov
ja
sahf
filds
sub
lretw
mov
icebp
xchg
lgs
cmp
lds
cmpsb
mov
mov
jo
mov
cmp
cmc
cmpsl
fmul
sub
push
push
and
sahf
subb
iret
pop
shlb
adc
add
xchg
push
xchg
addb
dec
mov
es
cld
add
movsl
inc
jle
out
jb
fcom
push
out
mov
push
sbb
fcompl
push
and
pop
push
ficoms
loope
mov
add
add
cmc
ret
jne
scas
pop
fcoml
dec
mov
jno
jb
xchg
jp
xor
out
int3
int3
xchg
movsl
fs
mov
lock
push
mov
inc
int
xor
pop
mov
xor
push
push
cmp
dec
sarl
pushf
cwtl
jae
sbb
jo
lds
mov
test
jecxz
daa
sbb
in
pop
lret
jo
add
push
popa
sbb
cmpsl
jb
imul
xlat
inc
mov
jno
push
push
loope
fs
fwait
pop
push
aaa
mov
test
xchg
scas
fwait
not
push
adc
lret
xchg
es
rol
or
dec
mov
or
repnz
rcrb
pop
aad
mov
inc
pop
rcll
sbbb
dec
in
dec
fidivl
dec
test
enter
mov
push
pop
in
dec
in
in
adc
cmp
enter
sbb
das
int
mov
pop
adc
dec
jne
repz
push
mov
lahf
dec
dec
sbb
test
roll
insl
jmp
ficoml
call
xchg
xor
or
fdivs
inc
add
or
mov
push
sti
es
mov
mov
nop
mov
mov
ret
fdivl
loope
mov
pop
adc
mov
or
jnp
call
jne
push
push
sub
sub
cmp
push
repz
sub
xchg
mov
pusha
es
and
pop
push
pusha
sbb
std
or
loopne
pop
movsb
mov
xor
ljmp
imul
push
mov
push
cmp
les
mov
inc
sbb
jle
nop
mov
fiadds
loop
jp
fiadds
shlb
adc
imul
xchg
pop
ret
push
push
sbb
push
adc
hlt
out
fidivrl
insl
bound
push
cmp
nop
mov
inc
scas
xchg
mov
mov
nop
mov
lret
mov
fsubrl
pop
lds
jno
clc
push
mov
fs
mov
dec
cli
cmp
cmp
push
push
stos
aas
add
in
mov
xchg
mov
aaa
or
add
or
sbb
push
int3
lcall
ffree
insb
inc
cmc
xchg
js
adc
fadds
mov
aas
iret
repnz
repz
dec
cs
dec
daa
scas
dec
xor
jbe
ret
into
lock
scas
jg
pop
and
mov
ret
xor
cmp
insl
shl
dec
clc
push
shr
test
lcall
push
and
ja
daa
addr16
sbb
push
lea
sti
dec
add
mov
add
insl
clc
xlat
cwtl
shlb
mov
inc
shl
imul
sub
mov
fiaddl
fisubl
in
repz
jbe
mov
push
push
mov
add
insl
sub
je
sti
je
sbb
in
testl
sarb
popa
jl
and
lret
pop
std
or
inc
sbb
jno
jle
sbb
add
adc
hlt
shr
je
cmp
mov
mov
es
mov
sub
shlb
xchg
dec
and
ljmp
jb
lret
mov
mov
cli
jmp
pop
stos
inc
lea
fdivr
push
push
and
movsb
imul
in
aam
push
in
and
inc
or
andl
lcall
cmp
lea
sub
adc
add
lret
fidivl
dec
sti
pop
int
andl
push
shlb
std
mov
pop
je
sahf
cmp
xchg
dec
fistpll
push
testl
das
mov
lods
xchg
cmc
xor
inc
xchg
orl
jne
iret
xor
ljmp
lods
das
imul
out
fwait
or
and
push
es
pop
in
mov
add
sub
dec
push
xchg
stc
inc
fcomps
push
mov
mov
jns
sub
mov
shlb
lcall
cmp
xchg
cmpsl
mov
xchg
int3
insl
push
xor
cli
dec
mov
jg
stos
mov
aaa
sbb
cmpsb
adc
addr16
mov
imul
icebp
mov
push
outsb
in
icebp
mov
jns
pop
xchg
inc
or
push
mov
ss
or
outsl
add
jo
add
aaa
mov
push
pop
insl
in
mov
loopne
stc
adc
push
xchg
in
dec
mov
mov
ljmp
imul
adc
adc
xchg
lods
xor
pushf
jnp
mov
cmpsb
jmp
inc
cwtl
imul
imul
lds
scas
cltd
or
repz
push
push
mov
xchg
xchg
scas
push
popl
and
pop
fdivrs
mov
sbb
push
mov
cmc
and
pusha
fiaddl
gs
loop
insl
rcll
push
mov
test
xchg
inc
ja
out
add
ljmp
push
test
adc
mov
pop
in
inc
stos
jge
negb
inc
add
or
test
es
enter
movsl
xlat
fidivrs
mov
mov
xor
add
ja
in
and
bound
sbb
daa
out
pop
mov
cld
mov
cmc
push
cmp
lods
cli
into
stos
jno
stc
pop
mov
lds
lds
test
and
in
movsl
into
hlt
popf
jg
jo
stos
fs
shrl
ljmp
or
cmpl
mov
push
ret
mov
pushf
rcrb
xchg
xor
mov
fnstcw
push
mov
mov
inc
jbe
sahf
mov
pop
pop
cli
mov
loopne
fcmovnu
fbld
push
scas
incb
xlat
jp
pop
fldenv
fs
pop
mov
enter
jnp
xchg
fiadds
ljmp
push
dec
cmp
or
push
xlat
bound
fldenv
les
mov
test
pop
test
shrl
dec
mov
mov
loop
push
xlat
out
punpckldq
imul
in
nop
cli
inc
inc
adc
cld
pusha
repnz
jmp
and
gs
xchg
aam
das
out
dec
enter
sbb
cld
xchg
xchg
push
stos
or
in
inc
and
cmp
ss
push
inc
xchg
cwtl
jle
andb
or
push
in
sub
cmp
jno
pop
bound
in
out
pop
fwait
or
xchg
shrl
sbb
scas
std
ds
call
mov
fwait
pushf
push
pop
and
mov
stos
mov
adc
cmp
fisubrs
cmpb
push
stos
icebp
cmpsl
push
movsl
mov
dec
or
lock
leave
jne
mov
test
cs
jmp
fucom
cld
mov
jecxz
sbb
ja
in
lret
in
in
xchg
xchg
mov
jmp
mov
mov
fstpt
js
insl
or
lock
divl
std
push
push
or
js
jbe
cli
out
mov
add
and
stc
into
jle
or
jne
pop
dec
imul
rorl
fistpl
inc
repnz
in
seto
cmp
leave
lods
push
ss
lcall
dec
jl
jo
inc
inc
xor
ret
lds
pop
dec
and
jbe
out
mov
imul
mov
sti
mov
lret
fisttpll
ret
fcmovne
outsb
push
je
push
mov
inc
decl
xchg
mov
push
int
sbb
in
dec
into
mov
lcall
and
pusha
push
inc
ret
push
inc
mov
cmp
in
cmp
dec
pop
pop
fisubrl
jno
pop
jg
pop
jmp
imul
pop
push
push
jmp
jo
call
mov
lods
dec
or
fmuls
test
clc
inc
push
addr16
dec
pop
mov
incb
cmp
ror
sahf
es
xorb
loop
fdivs
int3
popf
xchg
out
cmpsl
inc
sub
sbb
add
push
xchg
xor
mov
fnstenv
insb
movsl
dec
mov
push
mov
call
into
lret
mov
push
cli
loopne
stos
insb
mov
mov
into
outsb
push
notl
mov
aaa
xor
mov
jbe
xchg
shrl
inc
movsb
xor
in
adc
cmp
in
xchg
test
rcrb
sbb
imul
xor
cmc
push
rol
push
les
jmp
outsb
mov
cld
imul
mov
imul
cmpsb
cmp
adc
rclb
jmp
mov
xchg
pushf
int3
mov
push
sahf
cs
aad
or
push
adc
push
nop
add
add
and
mov
insl
pop
scas
inc
and
jnp
or
jg
ret
mov
jno
adc
fadds
and
cmp
mov
fwait
in
push
and
sub
imul
push
or
jns
bound
add
imul
mov
test
icebp
mov
mov
jg
cmp
dec
mov
out
xchg
mov
retw
jp
dec
popf
dec
cld
iret
mov
std
aas
jnp
hlt
ja
outsl
hlt
add
mov
sub
xor
mov
stos
add
mov
push
pop
ret
mov
dec
jl
sub
xor
adc
ss
test
inc
or
mov
lahf
in
sub
addl
loope
jnp
repz
imul
mov
stc
lret
jge
or
and
nop
ret
loop
and
sbb
inc
in
push
and
sbb
inc
out
cltd
dec
scas
xlat
xchg
push
in
mov
sbb
cmp
into
sub
out
f2xm1
movsb
shl
sahf
xchg
mov
iret
in
js
xchg
mov
pop
lock
scas
cmpsb
int3
dec
icebp
jo
cs
mov
and
fwait
pop
incb
fdivr
and
int
adc
jle
bound
shl
pop
pushf
xchg
mov
cmp
test
rorb
sbb
call
push
dec
xor
adc
add
out
jg
pop
or
je
jmp
fidivrl
push
lods
leave
mov
stc
add
push
sub
call
inc
aaa
mov
in
je
int
jp
mov
lods
arpl
cli
jmp
shrl
pop
sar
pop
push
and
inc
repnz
ljmp
mov
je
jmp
aad
test
jb
shlb
add
insb
leave
add
add
mov
inc
movsb
or
xchg
dec
inc
int3
fwait
jmp
dec
test
xor
pusha
out
adc
xchg
xchg
mov
xchg
cmpsl
ja
js
cli
push
sbb
out
dec
or
iret
lods
mov
out
and
and
lods
inc
push
sub
jp
push
or
clc
call
sbb
pushf
out
mov
icebp
sub
mov
sub
leave
pop
cmp
cli
mov
call
push
in
mov
dec
scas
mov
xchg
sub
ficoml
jmp
jb
add
dec
jl
mov
and
mov
cmp
cmpsl
xchg
enter
fs
iret
inc
lret
inc
push
and
pop
xor
lret
int
cmp
cmp
icebp
lods
test
mov
scas
fcoml
jne
push
push
jle
push
mov
adcb
call
mov
leave
movsb
fisttpll
xchg
icebp
add
adc
aaa
roll
aas
or
cmp
mov
es
fldcw
ret
lods
add
pop
sahf
mov
rcrb
fcomip
push
push
and
push
je
xchg
mov
jg
mov
adc
arpl
lea
daa
pop
pop
loopne
jp
add
mull
jb
pop
inc
push
icebp
lret
loopne
sub
xor
cltd
sbb
imul
iret
xchg
lods
pop
insl
outsl
jnp
and
divl
cmpl
sbb
fldl
push
mov
cld
aam
cli
pop
dec
fdivl
dec
addb
sbb
inc
sqrtps
nop
rorl
or
or
inc
in
das
dec
mulb
cltd
test
nop
push
int3
mov
out
jg
inc
adc
push
into
cmp
fisubs
mov
push
mov
pop
mov
sti
das
mov
lret
or
shlb
xchg
push
jne
ds
lea
insb
stos
jge
test
rorb
inc
dec
xchg
mov
inc
xor
gs
cmp
loop
je
aas
hlt
divl
lds
and
arpl
shll
cmc
xchg
dec
arpl
mov
jae
pop
fmuls
and
mov
or
lea
jnp
pop
xor
test
push
add
jbe
jl
cmc
and
sub
inc
mov
js
and
cmpl
sub
pop
stos
int
fsubs
xor
pop
stos
mov
mov
adc
add
jge
fsubr
fwait
cmc
notb
ret
loop
dec
xor
xchg
dec
inc
jae
mov
call
push
push
push
cmp
push
negl
mov
mov
dec
xorb
adc
sub
inc
out
loopne
sub
bound
ss
movsl
ret
jge
cmp
xor
xchg
xor
xor
cmp
stos
rcrb
es
inc
inc
inc
mov
and
fs
jns
jo
push
adcb
jbe
and
lods
mov
mov
mov
add
and
sti
test
sbb
mov
mov
mov
out
cld
out
sbb
gs
es
mov
or
mov
mov
aas
dec
outsb
push
lods
mov
adc
lcall
and
or
fistl
adc
jne,pt
sahf
popa
into
pop
scas
mov
pop
dec
out
push
mov
movsb
and
fcomi
das
adcl
mul
or
mov
out
cmp
das
into
imul
divl
mov
mov
arpl
test
push
in
fildl
jb
push
decl
ficomps
enter
fimuls
pop
and
and
push
icebp
adc
push
jl
in
sbb
leave
orb
push
fstpl
or
adc
das
mov
std
je
sub
ljmp
push
cmovg
mov
inc
inc
mov
and
mov
ds
cld
lods
xor
sub
cmc
sbb
adc
sub
pop
jnp
pop
pop
cli
fwait
adc
nop
sbb
stos
jns
bound
pusha
mov
test
inc
and
test
mov
inc
cmp
push
inc
or
xor
fcoml
pop
hlt
fdivl
sub
out
xor
lcall
mov
insb
xchg
lods
adc
lock
add
int3
sbb
int
fwait
inc
mov
xchg
ja
inc
fldt
push
jo
bound
cwtl
xchg
cmp
addb
xor
and
cmp
xor
adc
jae
pusha
mov
lock
add
add
fisubrs
stos
scas
push
fsubrl
test
jg
jl
lods
inc
cmp
push
and
rcrb
outsl
xchg
out
test
pop
lock
jno
xor
add
lock
jecxz
mov
test
mov
out
mov
push
xor
or
pop
add
in
xor
cmp
out
jmp
jl
cltd
push
sub
filds
sahf
push
add
jne
push
mov
insl
cmp
cmp
or
mov
dec
mov
jnp
or
push
sub
lret
xchg
push
fdiv
jge
or
adc
and
cwtl
fdivs
adc
icebp
outsl
mov
clc
ljmp
xor
loope
dec
lcall
inc
and
xor
sbb
sub
orb
jne
icebp
add
inc
adc
std
push
or
dec
mov
lret
ja
pop
xor
js
repz
add
call
pop
inc
or
ds
adc
and
sub
xchg
adc
ss
push
xchg
xor
js
xchg
fidivs
btc
ficoml
mov
or
fadds
sub
aaa
inc
push
mov
sub
sbb
add
mov
jp
sbbl
dec
sub
jb
rcr
xchg
lahf
data16
mov
jae
and
jmp
enter
pop
mov
pop
incl
mov
push
je
sub
xchg
adc
or
mov
xchg
je
insb
stos
out
shr
cwtl
cmpsb
jbe
mov
add
jno
adcb
out
test
int3
outsb
sbb
aad
imul
bound
inc
into
lock
inc
leave
lcall
and
adc
popa
mov
jmp
and
cmp
test
or
aam
fisubl
xor
dec
stc
lock
sub
xchg
pop
adc
ja
into
stos
shl
lds
dec
push
sbb
adc
dec
inc
data16
incb
add
xor
fdiv
jo
jnp
jmp
mov
push
lock
sarb
jmp
inc
xchg
clc
cmp
push
jb
mov
fcomps
inc
cli
push
push
test
pop
dec
xchg
xchg
add
mov
sub
jg
push
aaa
scas
sahf
cmpb
mov
les
mov
xor
push
adc
mov
pop
cmp
scas
dec
xor
inc
mov
imul
decb
and
jg
into
das
ret
ror
stc
wrmsr
js
cmpsl
xchg
sub
xchg
and
or
loopne
enter
aaa
mov
test
lret
adc
adc
lock
test
mov
jl
es
pop
iret
fsubl
mov
and
xchg
mov
cmp
mov
fisttpl
adc
stos
dec
cld
daa
cmp
cmpsb
pop
mov
shlb
add
cmc
cmp
fldt
pop
bound
mov
pop
data16
cmpsl
stc
mov
in
add
or
jb
dec
xor
push
loop
pop
pushf
je
jo
add
fwait
mov
xchg
js
push
mov
add
mov
js
in
jae
mov
leave
sbb
dec
add
sbb
test
jo
jae
negb
xchg
fwait
js
adc
out
ljmp
xchg
inc
ret
mov
mov
cmc
pop
out
aaa
sub
xor
and
push
js
mov
les
out
xor
pop
std
mov
pop
xor
and
shll
and
mov
jl
inc
in
xor
imul
loopne
dec
jb
inc
pusha
rol
jno
ficoms
cwtl
stc
rcll
jno
fnstcw
dec
push
xchg
std
cmp
adc
orb
sub
jl
fwait
cwtl
in
les
mov
jl
cmp
mov
lods
inc
or
mov
push
xchg
sbb
movsl
mull
push
iret
adc
mov
loop
stos
sbb
xchg
jecxz
outsb
addr16
fisubrl
xchg
inc
xchg
fisttpll
rclb
loope
cwtl
inc
ror
mov
rep
pop
mov
jo
jbe
dec
xchg
xor
out
mov
mov
andl
pushf
cmp
lcall
mov
xchg
dec
pop
mov
inc
mov
testl
fwait
jle
or
fsubs
into
fstp
int
and
pop
fdiv
xchg
pusha
das
push
sub
cmpsl
in
pop
test
fwait
jl
mov
push
cmp
jl
adc
mov
mov
mov
jp
loopne
cmp
mov
push
lcall
inc
push
mov
cmp
rclb
jge
mov
pop
aad
push
cmp
xchg
inc
stc
sti
xchg
out
in
cmpl
jne
sbb
cmp
pop
por
es
mov
and
cmp
fistpll
sub
inc
pop
bound
fsubp
push
movsb
sub
std
push
int
jbe
popl
mov
mov
scas
cmp
sbbl
mov
xchg
iret
insl
in
mov
scas
xchg
imul
or
out
lahf
ja,pn
dec
addr16
xchg
stc
push
push
or
push
jno
cmp
lds
clc
rcrl
movsb
shlb
inc
dec
rcl
xor
or
add
pop
xor
sub
data16
jno
pop
sbb
mov
mov
inc
jl
push
xor
rolb
sbb
jnp
iret
xor
inc
hlt
in
lret
jne
in
insb
cli
pop
fwait
jno
gs
cmp
pushf
andl
jp
pop
aam
lcall
or
mov
add
sub
mov
mov
xor
pop
dec
orps
jno
inc
pop
xor
push
xor
xchg
sbb
stos
filds
sub
test
push
dec
roll
push
xlat
fdivrs
lahf
insl
std
push
xor
or
leave
cmp
mov
cmp
cmpsl
xchg
dec
stos
clc
dec
ds
in
cli
movsb
add
lds
loop
push
or
add
mov
fwait
mov
sbb
xchg
jnp
lods
in
insb
cmp
xchg
pop
add
cmp
xchg
and
js
sub
lret
lock
cmp
les
pop
dec
mov
lahf
flds
adc
imul
dec
stc
testl
mov
call
out
dec
inc
mov
mov
push
dec
andl
add
fistpl
pop
mov
and
mov
xchg
push
xchg
add
fwait
popf
adc
lds
xchg
cmc
dec
scas
inc
repnz
cmp
in
iret
add
mov
cmpl
and
push
adc
adcb
into
inc
mov
movl
int
outsl
mov
das
int
push
push
aam
iret
scas
loope
push
into
jae
sbb
insb
mov
aam
mov
mov
movsl
adc
jmp
test
leave
ja
xchg
or
sub
mov
sub
clc
rorl
orb
xor
stc
push
jg
add
mov
lods
hlt
jmp
mov
addr16
adc
pop
dec
repnz
cmp
fcmovb
dec
lods
stc
inc
popf
test
les
pop
mov
scas
ja
mov
add
push
dec
imul
push
mov
cmc
es
ljmp
hlt
rolb
stos
inc
in
addr16
cmpsl
push
shlb
popf
dec
movups
sbb
mov
add
inc
xor
arpl
scas
mov
or
mov
sarl
insl
stos
mov
sub
roll
and
popa
sbb
rclb
or
sbb
test
inc
or
lea
xorb
addl
add
jo
lahf
lret
xor
mov
inc
aaa
push
and
stos
mov
jae
inc
inc
dec
mov
mov
inc
xor
or
xchg
xlat
sub
cmp
mov
jb
dec
dec
xor
movsb
dec
lea
or
mov
mov
mov
lret
add
ds
sbb
mov
arpl
jbe
push
cs
scas
xchg
test
sub
imul
icebp
mov
and
mov
call
sti
fidivl
dec
cmpsb
fcmovne
lods
mov
inc
lods
add
adc
push
jp
in
cmp
adc
xor
xchg
out
adcl
mov
leave
mov
clc
jge
ljmp
lock
pop
fimuls
jg
xlat
int3
divl
cs
lock
fcmove
push
xchg
mov
dec
adc
fnstenv
hlt
lock
xchg
jg
add
add
and
jg
and
xchg
cmp
test
jmp
xor
mov
jg
fisttpll
pusha
outsb
imul
sub
ljmp
fildl
xor
or
push
cltd
aaa
mov
bt
paddsw
xor
pushf
jne
lods
xor
xchg
loopne
mov
lods
mov
mov
xlat
fwait
pop
bound
ja
mov
lret
push
dec
xchg
jle
es
lock
pusha
inc
aaa
rcll
dec
leave
cmpb
dec
jmp
push
mov
cwtl
mov
dec
mov
or
lret
inc
rorl
push
or
sbb
arpl
cmpsl
mov
jecxz
xchg
cmp
mov
sub
hlt
xchg
jl
lret
mov
sbb
xchg
hlt
mov
xor
ds
xchg
push
in
dec
fdivs
inc
mov
lahf
mov
mov
pop
dec
lahf
and
mov
pop
mov
test
aad
and
jnp
lea
jbe
call
xlat
out
mov
mov
test
and
pop
pushl
and
pop
xchg
cld
out
insl
cmp
jmp
xor
outsb
push
int
and
nop
mov
rolb
in
add
icebp
dec
leave
add
hlt
sbb
adc
cwtl
push
stc
adc
add
dec
lea
pop
cwtl
in
clc
mov
dec
xor
out
pop
mov
xlat
js
push
sub
mov
ret
jg
test
adc
jnp
mov
jne
fnstcw
sub
pop
in
sbb
dec
inc
imul
sub
mov
push
imul
scas
inc
dec
aam
cmc
lahf
xor
sub
fnstsw
dec
cmp
mov
cwtl
iret
pop
cli
push
std
push
add
lahf
jg
ja
xor
dec
mov
icebp
add
xchg
daa
cli
iret
out
xchg
mov
mov
movsl
add
movsb
fsubs
pop
jb
xlat
lods
or
leave
mov
sbb
loop
cmp
loope
or
insb
inc
or
inc
dec
mov
into
insb
jge
pushf
pop
cmpsb
or
nop
sbb
adc
mov
push
adc
scas
and
mov
popa
cmp
adc
mov
mov
mov
mov
pop
pushl
loopne
push
xchg
mov
xlat
in
enter
mov
sub
jmp
push
mov
push
mov
cmpb
les
jg
ret
loop
pop
mov
sbb
fnop
cmp
jecxz
add
mov
sbb
xchg
cli
mov
mov
je
mov
repnz
inc
push
xor
jno
lahf
out
sbb
pop
es
mov
and
jge
dec
bnd
adc
ja
outsl
stos
and
xor
dec
test
hlt
jmp
jge
int
cld
push
gs
sbbb
mov
stos
es
pusha
addb
cmp
loope
test
cltd
shll
xchg
in
sbb
add
xchg
out
ret
scas
sub
out
pushf
negb
push
mov
call
adc
inc
mov
pusha
fst
sub
test
loope
push
or
mov
cmp
dec
leave
mov
add
mov
das
inc
push
pop
xor
iret
inc
lds
stos
push
adc
sub
sbb
outsb
mov
std
lea
pop
inc
and
push
sbb
outsb
pop
jns
and
add
lret
inc
adc
fimuls
pop
lahf
je
sbb
push
je
fwait
push
push
shlb
jnp
adc
xchg
out
pushf
xor
js
sbb
icebp
mov
lock
adc
sub
icebp
and
cmp
inc
sub
jb
lahf
cmp
fcompl
jge
xor
leave
nop
xchg
mov
pop
test
sub
or
std
loopne
sbb
ds
xchg
pop
lds
data16
pop
xor
test
jo
movsb
mov
jecxz
shll
shrb
adc
jp
rcrl
stc
cwtl
outsb
mov
jae
int3
and
cs
je
and
cltd
pop
push
aaa
aad
addr16
add
addr16
fldl
js
jge
and
stc
cmc
mov
mov
xchg
inc
clc
or
or
out
lahf
pop
addr16
lcall
adc
mov
dec
divl
movsb
sbb
xchg
mov
mov
sar
pop
add
xchg
add
orb
inc
xchg
ds
add
hlt
shl
pop
imul
sbb
and
lds
pop
std
negl
and
mov
adc
shr
cli
cwtl
test
aam
xor
je
lods
lret
lock
pop
cli
jge
and
test
pop
jle
mov
subb
and
cmc
arpl
enter
adc
mov
jae
data16
call
sub
aaa
dec
xor
repz
lret
sahf
out
pop
sub
cmp
aaa
jbe
sahf
pop
pop
loop
xchg
or
push
dec
aam
ds
fbstp
pop
push
adc
daa
jge
loop
add
out
and
rcl
daa
mov
loopne
and
in
xchg
movsb
fcom
mov
mov
ret
sbb
push
sahf
cmp
push
xor
add
lret
in
xor
je
inc
and
xchg
movsl
iret
mov
subb
mov
adc
or
xor
adc
mov
cmp
test
jecxz
pop
xchg
fmuls
scas
sub
mov
fstpl
movsb
inc
lret
scas
out
test
cmp
scas
adc
aas
incb
adc
and
add
fs
jbe
mov
hlt
adc
mov
flds
jge
int3
das
xor
es
mov
inc
sbb
xchg
ret
in
roll
rcl
add
hlt
mov
inc
insl
dec
mov
mov
shll
test
cmp
push
lock
push
adc
gs
shll
pop
sahf
inc
jae
enter
jbe
pop
cmpsl
out
cmp
pop
dec
mov
sbb
add
xchg
cmp
lret
flds
adcl
add
aam
in
mov
bound
cs
fstps
mov
inc
and
sti
das
and
inc
inc
fstp
jae
lds
push
rcl
xchg
xchg
lahf
les
ret
lods
out
pop
inc
adc
xchg
jle
sti
xchg
add
add
andl
loopne
xchg
and
mov
inc
push
push
xor
or
mov
aad
bound
xchg
jne
mov
push
scas
jl
fdivrl
std
loope
fwait
push
push
shlb
jnp
flds
add
cli
sbbb
gs
stc
push
jns
fcmove
repz
xchg
setle
test
shlb
xchg
leave
pop
pop
inc
das
lret
stos
shl
xlat
cmpsb
mov
cmp
jo
packsswb
gs
movsl
pop
pop
fwait
dec
jo
cli
scas
pop
pop
mov
cwtl
pop
inc
xlat
xor
imul
xchg
cltd
sbb
add
sbb
fucomip
xchg
inc
in
push
pop
aas
push
cmpsb
sub
mov
sub
insl
adc
mov
movsl
into
js
pop
cmp
cmp
lods
xchg
pop
lods
fs
sar
inc
loope
mov
dec
popf
jo
repnz
pop
xchg
xorl
ret
out
je
dec
pop
test
and
bound
icebp
addb
pop
out
pop
adc
mov
mov
push
rcl
movsl
pop
mov
mov
mov
scas
add
adc
jns
and
pop
add
rolb
sub
out
test
out
ja
les
out
shl
loop
out
sti
ficoml
jns
les
ja
inc
mov
xchg
jae
cld
cmpsl
repz
dec
jno
lahf
dec
mov
and
insb
xchg
rcrb
inc
repz
push
dec
and
out
lds
std
loop
aas
sbb
dec
adc
cmp
into
dec
rcrb
test
jl
or
adc
loopne
xor
inc
inc
test
xor
mov
jae
push
pop
mov
inc
fmuls
leave
xchg
in
lock
add
mov
lds
and
cltd
push
std
fstpl
loop
in
pop
dec
xchg
imulb
pop
dec
hlt
or
push
arpl
dec
mov
lods
hlt
es
daa
jno
imul
adc
fistpl
inc
imul
push
das
rcrl
scas
xchg
pop
movsl
roll
shll
inc
xor
pop
cmp
add
mov
mov
or
mov
imul
fwait
mov
xor
ret
mov
movb
rcl
icebp
mov
loopne
mov
aaa
jne
iret
jmp
dec
idivl
mov
sahf
ds
inc
inc
pop
mov
les
pop
sub
push
ds
jl
jns
jae
fwait
pop
jo
mov
icebp
cmp
mov
in
test
pop
sbb
cli
xchg
movsl
jno
inc
mov
xor
out
push
add
lods
sbb
loope
imul
cmp
lret
dec
inc
mov
mov
push
xchg
adc
inc
jno
mov
dec
movsb
adc
xor
idivb
in
sahf
fdivr
rclb
or
ret
ss
ret
push
sub
dec
adc
cmpsb
test
pop
mov
mov
mov
xchg
jmp
adc
cmc
lcall
xor
hlt
pop
das
cs
and
xchg
cmc
inc
xlat
dec
lds
jo
xchg
mov
in
scas
xchg
xor
or
repnz
dec
or
xor
push
lds
sahf
push
jecxz
dec
or
cli
jmp
outsl
lcall
push
mov
mov
daa
arpl
das
xor
outsl
add
call
out
push
out
mov
sti
jns
arpl
movsl
aad
cmp
add
ljmp
call
stc
lea
lds
mov
sbb
xchg
adc
xchg
cli
cmpsl
push
cmp
sub
mov
inc
fstl
cmpb
xchg
hlt
aaa
pop
jne
nop
xchg
mov
sbb
mov
cmp
gs
adc
lock
xchg
cwtl
or
xchg
mov
pop
sarb
inc
leave
pop
mov
inc
inc
mov
jnp
mov
adc
sbb
stos
test
cmc
add
and
dec
inc
ror
inc
adcl
insb
add
jmp
cmp
daa
adc
fisubrl
sti
cwtl
sar
pop
popf
mov
push
out
or
cmpsl
pop
sarb
aaa
in
jb
xchg
aas
daa
xchg
and
mov
pop
xor
adc
xchg
jecxz
xchg
pop
pop
mov
push
lret
jl
je
pusha
in
mov
icebp
push
enter
jae
daa
ret
cli
and
push
in
das
test
sub
pop
add
fiadds
ljmp
pop
mov
cmp
mov
imul
pop
xor
outsl
dec
jae
xchg
mov
loope
mov
cmpb
dec
cmp
fcom
push
sub
cmpsb
fnstcw
mov
out
dec
sbb
dec
inc
push
xchg
sahf
dec
test
inc
push
ss
mov
push
in
shll
fildll
mov
inc
xchg
add
sub
lahf
pop
movsb
push
dec
jnp
sub
mov
jb
gs
mov
lods
adcb
call
int3
scas
jge
or
mov
into
hlt
jge
push
addl
push
ljmp
mov
int
add
popf
adc
pop
pop
jb
in
sub
sahf
stc
adc
cmp
jno
iret
xchg
je
push
sbb
push
or
cmpl
repnz
ja
xor
int
cmp
inc
das
adc
sbb
dec
jecxz
xor
out
rcrl
dec
sub
dec
mov
push
in
xchg
or
pop
push
or
lock
and
in
mov
jae
orb
leave
mov
pop
pop
xchg
mov
imul
sub
add
pop
es
fldt
push
sub
push
jmp
jb
cmc
xor
mov
loopne
inc
jge
pcmpeqw
imul
subb
pusha
dec
mov
sarl
and
cmp
arpl
dec
pop
and
in
fdivs
inc
sbb
cmc
lock
repnz
adc
inc
and
inc
ss
stc
jmp
adc
aad
inc
fdivrl
shll
inc
dec
test
jecxz
jl
xchg
xlat
cltd
adc
inc
mov
out
jnp
add
js
sub
testb
push
push
cld
insb
out
into
daa
jg
jbe
fdivs
lock
lds
fmull
push
sti
sub
in
xchg
loopne
mov
popf
outsb
pop
test
mov
scas
lds
adc
xchg
cmp
les
pop
test
mov
mov
rcrl
out
outsb
int3
jnp
ds
and
ljmp
das
cmpsb
sbb
cmc
or
xchg
or
enter
test
pandn
xchg
les
jl
and
jge
outsl
cwtl
and
pushf
lds
lock
rorl
gs
xor
xchg
sub
test
dec
jmp
scas
idiv
mov
xchg
push
inc
add
fnstsw
push
push
sub
lret
inc
lret
mov
sbbl
out
sbb
not
fbstp
xchg
or
lods
xor
jg
xor
jo
and
add
data16
scas
xchg
and
mov
test
lahf
cmp
loope
lods
mov
sbb
pop
jno
xor
int
out
fisubrs
clc
jno
adc
subb
sbb
mov
adc
orb
mov
push
dec
jl
jne
fs
and
mov
lds
jne
jbe
enter
aad
sbb
xchg
out
mov
cltd
pop
addr16
icebp
aas
adc
fisubrl
push
int
mov
fists
mov
push
push
popf
sbb
in
pop
fdiv
and
sahf
xor
xchg
je
nop
ret
sub
ljmp
sub
scas
seta
pop
mov
scas
xchg
xlat
fisttpll
xchg
mov
icebp
adc
pop
nop
mov
xchg
sbb
inc
std
aad
push
xchg
mov
xor
mov
dec
xchg
movzwl
cmp
jg
inc
or
dec
mov
ds
in
int3
packssdw
mov
lods
sub
push
in
fwait
xor
adc
xchg
loop
sub
daa
iret
ret
cmp
stos
push
jle
mov
ljmp
lods
test
xchg
mov
sbb
inc
clc
jle
add
loop
mul
shlb
push
sub
std
bound
jg
sub
js
sub
sbb
jo
dec
dec
cmpl
rclb
shlb
adc
cli
cltd
pushf
leave
inc
out
ret
and
je
inc
adc
xchg
add
addr16
xchg
and
daa
testl
rcll
push
jo
adc
and
nop
pause
jno
stos
dec
movsl
sti
loop
rolb
lret
cmp
sbb
xor
test
lret
push
pusha
push
xchg
lds
movups
lock
clc
lcall
ds
les
aaa
mov
out
xor
clc
call
outsl
rcrl
das
aam
xchg
pop
xchg
cmp
outsl
addr16
xchg
pop
add
lcall
and
jecxz
or
lret
add
aam
fisubrl
push
inc
cltd
ss
cld
fnstsw
data16
push
add
adc
stos
cwtl
jbe
cmpsl
pop
jge
xor
mov
sti
lret
scas
sbb
sbb
adc
sahf
push
fdivs
cmp
pop
inc
jmp
cmp
sub
aam
jb
fnsave
adc
jp
cmc
add
insb
sahf
pop
popa
negb
pop
push
dec
xchg
xor
jle
add
das
xlat
mov
cltd
xchg
cli
fs
fistps
arpl
push
pushf
adc
out
cmp
aad
dec
sti
movb
pop
in
lahf
pop
mov
pop
lahf
fsubs
loop
lret
pop
pop
lret
arpl
out
adc
enter
fstl
inc
outsb
add
jnp
daa
pop
and
outsl
mov
lds
sbbl
ret
xor
cmc
jb
std
push
add
sahf
pop
sarb
or
xor
scas
sbb
test
and
push
pop
mov
repz
les
icebp
pop
shll
fidivl
push
flds
clc
xchg
jl
xchg
das
inc
adc
cmpsl
popf
lods
sbb
inc
jae
hlt
cmpb
lret
and
imul
mov
xchg
rclb
sub
lcall
push
insl
mov
in
mul
push
call
xor
mov
insb
loopne
lret
repnz
mov
cmp
dec
js
popa
ret
lret
hlt
adc
cmpsl
out
pop
adcl
js
outsl
out
and
xchg
mov
xor
jmp
mov
inc
data16
xchg
jg
mov
push
pop
mov
xor
rcr
loope
mov
cmp
xchg
xchg
mov
mov
mov
and
push
sbb
into
sub
sahf
xchg
fstpl
cli
fisttpll
jnp
pop
gs
repnz
xchg
inc
sbb
fabs
dec
cltd
fcmovnbe
nop
sub
xor
bound
mov
mov
mov
mov
lock
aam
lods
scas
outsb
rclb
ja
hlt
add
testb
out
movsb
sub
pusha
sub
inc
pop
push
fsubrl
cmpl
jp
mov
aaa
out
bnd
pop
inc
add
sbb
dec
pop
cs
push
test
or
ror
jb
adc
adc
xchg
pop
mov
push
cmp
cmp
mov
mov
ficomps
out
jo
pushf
pop
jne
fsubr
mov
adc
mov
mov
lods
test
shrb
push
or
xorb
sti
pop
sti
repz
cmp
xchg
push
repnz
cmp
mov
nop
ljmp
mov
ja
cmp
and
push
sti
sbb
in
das
adc
les
shr
movsb
jmp
call
ljmp
xchg
pop
fsubs
mov
jg
xor
mov
xor
adc
ja
xor
mov
andl
jb
inc
sub
int3
insl
dec
jle
loope
jb
mov
cmp
sub
fistpll
mov
inc
fsts
decb
mov
inc
inc
outsl
dec
mov
arpl
out
adcb
push
out
test
out
hlt
push
mov
jecxz
pop
mov
xchg
cwtl
dec
xor
dec
icebp
sub
das
faddl
jno
lock
mov
dec
add
int
out
mov
jmp
xchg
leave
fs
clc
xor
ss
stos
xchg
adc
push
movsl
dec
dec
sbb
in
xchg
rcrl
and
cli
sub
stos
mov
xchg
jbe
sbb
xor
scas
outsl
cmp
mov
add
add
test
mov
jo
jb
cmpsb
adc
jno
arpl
ljmp
sub
popa
jmp
movsb
and
jne
push
mov
stos
imul
cmp
xchg
jg
mov
dec
push
sub
mov
cli
mov
test
jo
notb
fsub
jns
test
dec
jne
insl
sub
push
jl
xchg
repnz
ds
ljmp
mov
mov
add
inc
xchg
pop
icebp
icebp
js
cltd
adc
dec
mov
mov
dec
ds
das
cmp
test
pop
sub
and
ffreep
and
and
lcall
imul
push
leave
or
loop
sub
dec
hlt
add
pop
hlt
mov
ret
orb
out
mov
sub
dec
jnp
push
mov
cs
ja
scas
jbe
pop
stc
mov
pop
out
stc
pop
sbb
mov
xor
mov
and
mov
cld
cmp
fcompl
fwait
ret
pushf
mov
xchg
mov
shrl
mov
popf
xchg
or
in
daa
mov
pop
sbb
push
and
outsb
ja
adc
push
adc
cmpsl
cmpsl
lock
fs
jno
xchg
jns
pop
xchg
and
xor
sub
fs
jbe
je
inc
cmp
movsb
pop
testl
clc
add
je
mov
sub
cmp
in
or
call
test
sbb
jnp
or
jnp
mov
dec
rorl
mov
xchg
mov
repnz
imul
xlat
push
mov
mov
shl
inc
outsb
adc
clc
mov
lea
jg
and
les
int
jne
lea
in
pop
mov
fucomip
arpl
xor
adc
out
adc
xorb
fwait
pop
mov
add
add
je
jo
sub
std
test
cs
xchg
xrelease
sbb
adcl
shl
mull
sbb
push
ss
add
sahf
repz
mov
xchg
cwtl
gs
cltd
mov
fwait
mov
sub
cmp
mov
pop
inc
hlt
dec
aam
mov
movsb
and
sub
je
inc
xlat
mov
psrad
cmp
nop
data16
int
jp
iret
mov
inc
cmpsl
push
arpl
or
pop
pop
sti
xlat
in
xchg
cmpsl
outsl
in
add
mov
lods
jae
icebp
push
pop
sbb
xor
jnp
aam
enter
jmp
inc
jmp
mov
dec
call
pop
pop
inc
jl
mov
enter
les
sbb
and
js
xchg
mov
mov
cmpsb
in
inc
adc
sbb
cmp
jns
xor
sbb
in
roll
es
test
dec
std
dec
jmp
sbb
jb
cmp
and
fs
mov
lahf
lahf
jg
ljmp
jne
and
pusha
gs
dec
mov
loopne
pop
pop
out
fisubrs
mov
jle
test
or
xchg
push
sbb
and
or
sub
add
outsb
data16
iret
cwtl
xchg
orb
test
mov
xchg
out
insb
sarl
dec
and
inc
inc
aaa
adc
sub
call
mov
or
incl
int
cmc
push
inc
cmpsb
cmpsl
rcrl
xchg
dec
ja
xor
mulb
es
les
addr16
sahf
cld
adc
xchg
jecxz
sbb
dec
dec
sub
ret
fwait
push
inc
cmp
inc
sub
jl
orl
cmc
iret
jmp
push
mov
lea
xor
aas
inc
jp
ficoms
lcall
mov
and
rclb
movsb
shrb
sbb
out
out
inc
cmp
jo
outsl
push
cwtl
jge
aad
cmp
xor
mov
push
xor
fistpl
ret
mov
in
push
fdiv
mov
fwait
pop
push
push
sub
add
mov
outsl
out
stc
ret
movsb
leave
and
sbbb
negb
mov
inc
js
xor
jg
movsl
in
xor
xor
pusha
loopne
dec
jp
pop
pusha
aad
jnp
xlat
jno
dec
inc
arpl
lret
mov
cmc
fwait
add
into
sub
les
and
aas
pop
sub
add
inc
pop
adc
sub
hlt
lret
inc
inc
clc
adc
mov
adc
insb
adc
pop
xor
sbb
aas
sti
or
jb
cmpsb
loope
and
dec
int3
jecxz
push
cmpsb
and
xchg
or
push
rcr
fdivl
cmpsl
mov
mov
adc
or
inc
cmpl
mov
mov
jmp
aam
inc
into
ljmp
push
jl
lods
adc
stc
arpl
xor
mov
cmp
mov
movsl
test
loopne
stos
mov
mov
loopne
lock
cmp
adc
sbb
inc
idiv
pop
xor
enter
iret
jecxz
push
dec
sarl
mov
test
scas
lret
pop
test
outsb
adc
test
push
jge
pop
call
dec
pop
push
leave
call
lea
inc
push
fnstsw
pushf
inc
lret
gs
jmp
add
mov
adc
adc
lock
xchg
push
into
fwait
int3
mov
jnp
xchg
pop
jae
pop
push
dec
mov
adc
pop
xchg
into
jmp
adc
cmp
cmpsb
mov
push
and
aas
orb
jns
pop
jl
mov
es
loope
jg
neg
mov
mov
aam
mov
fs
cmpl
sub
fstps
addl
jbe
inc
out
in
push
imul
xchg
jae
adc
add
mov
cmp
fmuls
popa
jmp
pop
add
cmp
pop
nop
sub
movsl
lahf
movsl
push
adc
inc
mov
repz
cmc
ror
sbb
inc
popa
scas
add
repz
gs
repz
jl
xor
call
xchg
daa
scas
je
inc
cmp
sbb
loopne
jbe
insb
mov
sub
mov
sti
dec
push
inc
adc
xor
cmp
rcl
jne
pop
js
jmp
sub
push
mov
lea
aaa
mov
mov
frstor
out
lds
dec
rorl
out
dec
add
xor
mov
mov
js
sbb
sbb
inc
icebp
insl
lods
sbb
dec
outsb
and
sbb
inc
xor
cli
jp
push
and
xor
add
or
aad
sbb
mov
or
push
mov
test
mov
or
xor
aam
outsb
aaa
iret
mov
popa
lcall
lret
fdivr
sub
adc
ret
ss
enter
jb
mov
sbb
call
pop
jmp
std
rcr
lea
in
fnstcw
mov
sub
int3
fcomp
xor
sub
sbb
adc
and
mov
jnp
mov
dec
sti
sbb
shlb
push
hlt
mov
cmp
cmp
stc
out
add
mov
pop
outsb
test
mov
mov
xorl
mov
inc
dec
xchg
sbb
inc
xchg
test
cmpsb
xchg
pop
subl
sbb
shlb
sbb
bound
adc
ret
fisubrs
out
bound
jecxz
fnstcw
cmp
addr16
adc
aad
push
test
adc
lret
mov
xchg
scas
cmp
jp
xor
roll
sti
rcrl
sbb
mov
lock
aad
gs
adc
ja
dec
adc
cmp
loopne
mov
pop
filds
cs
push
js
and
loope
clc
rorb
shlb
mov
fwait
jecxz
xor
imul
imul
outsl
mov
or
scas
fcomip
les
adc
hlt
xchg
xchg
mov
lea
xchg
cmc
stos
lock
dec
push
fistps
icebp
outsb
and
cwtl
adc
data16
movlps
mov
jb
lcall
insl
test
xor
and
mov
sub
mov
stc
out
pop
jmp
je
xor
sub
mov
into
cmp
imul
jb
xchg
mov
jnp
fidivrs
and
cmp
loopne
cmp
mov
push
push
or
mov
jg
enter
stos
loopne
sub
outsl
xchg
push
iret
fistl
dec
vpunpcklbw
push
adc
xor
push
cmp
cld
pop
inc
add
int3
add
ljmp
sub
jae
fnstcw
add
mov
in
lods
sub
sbb
xor
bound
popa
lcall
lcall
mov
cld
das
pop
and
addr16
aam
in
sub
outsb
jmp
mov
cmpsb
nop
insl
iret
std
adc
pop
mov
daa
jmp
push
into
mov
jnp
cmp
aaa
lret
outsb
add
rcll
pop
sbb
or
xor
push
jno
mov
mov
xor
dec
inc
xor
pop
jecxz
xchg
sbb
shlb
add
scas
sub
pop
push
in
negl
out
inc
lret
ja
sbb
pop
cwtl
bound
repnz
adc
pop
mov
and
push
or
inc
cmp
dec
mov
mov
je
arpl
or
adc
mulb
sti
pop
sbbl
insb
mov
jb
outsb
fsubrs
movsl
popf
in
mov
test
outsl
jb
mov
loop
adc
inc
add
lods
and
inc
adc
pop
negb
or
lods
adc
cmp
xchg
or
or
pop
in
cmp
jg
push
and
inc
fidivs
pop
hlt
dec
jp
test
mov
cmpsb
insb
and
adc
js
jge
mov
int
fdivl
mov
add
xor
sbb
xchg
jecxz
test
pop
fistpll
xchg
icebp
stos
lret
repnz
icebp
mov
in
pushf
mov
pop
and
into
xor
pop
cmpsl
fisttpl
mov
mov
mov
les
jbe
subl
mov
fldenv
push
lds
inc
or
daa
repnz
shl
xchg
jg
fldt
xchg
outsb
xchg
notl
push
pusha
arpl
dec
jecxz
cmp
ds
add
mov
push
mov
or
cld
xor
dec
popf
dec
cli
jb
dec
in
nop
repz
das
adc
cmpsl
data16
sbb
pop
inc
mov
mov
subb
xor
rorl
clc
mov
pop
pop
arpl
inc
xchg
sahf
mov
xlat
sbb
push
adc
cli
jo
cmp
dec
iret
push
jbe
ret
out
fcompl
cli
dec
cmp
movsb
cltd
insb
aaa
inc
jb
fisubrs
clc
dec
loop
icebp
pushf
stos
sbb
out
mov
dec
push
sbb
outsb
lahf
adc
loope
mov
sbbb
stos
jae
push
dec
std
push
sbb
scas
sbb
or
fiadds
mov
bnd
inc
les
adc
pop
inc
cs
fdivrs
ret
mov
push
mov
push
jnp
dec
into
out
je
jb
jl
and
or
or
cltd
xchg
pusha
sti
inc
jle
cmp
mov
pop
ret
adc
pushf
mov
pushf
dec
mov
push
sahf
or
jne
imul
fcmovu
cmp
mov
loop
mov
lock
push
mov
sub
fidivrl
jp
sbb
and
iret
std
out
mov
or
cmp
sbb
adc
out
xor
stos
mov
mov
out
daa
sub
rol
pop
sub
mov
dec
fbstp
adc
leave
ds
sbb
imul
push
add
and
out
clc
imul
loope
call
jg
push
and
sahf
insb
sub
pop
cmc
popa
dec
xor
xchg
je
out
cmp
and
xchg
lea
mov
push
inc
mov
cmpsb
or
add
loopne
add
xchg
xchg
test
add
xor
jg
into
lods
xchg
roll
bnd
mov
mov
daa
lret
fcoms
jbe
repz
jle
xor
push
mulps
xor
lahf
add
adc
sbb
mov
cmp
cmp
mov
in
bound
dec
push
lods
mov
dec
stos
shll
scas
push
inc
sub
mov
icebp
push
mov
jno
outsl
sbbb
popf
popf
cmp
mov
cmp
push
add
iret
outsl
xor
or
mov
rcrl
ljmp
pop
adc
push
in
push
mov
adc
sub
das
dec
sub
fisubs
push
sub
xchg
sub
xor
in
ljmp
gs
test
fcompl
mov
repz
xor
lret
mov
xchg
lret
pop
add
pop
dec
nop
pop
mov
roll
lret
adc
jle
lret
adc
icebp
clc
inc
pop
aad
fwait
inc
rclb
jnp
test
push
inc
in
mov
add
movsl
jae
lock
fmull
mov
cmp
movsb
push
xchg
xor
cmp
jbe
movlps
mov
inc
in
lds
inc
mov
mov
cmp
jg
rcrl
jge
xchg
xchg
out
inc
ss
push
mov
repnz
ds
xchg
gs
xor
cli
repz
test
sbb
popf
pop
mov
jb
push
shlb
lods
mov
push
int3
sbb
lea
mov
cmp
stos
repz
xchg
nopl
lds
adc
add
sub
xor
stos
dec
mov
xor
movsl
rcll
xchg
ucomiss
cmp
cmp
or
adc
xor
daa
sbb
pop
cwtl
cwtl
movsb
jne
jge
lcall
inc
mov
pop
iret
or
popf
lods
inc
pop
mov
pop
add
or
int3
add
push
loope
test
loop
iret
scas
dec
push
roll
xor
jp
jg
xor
adc
lock
fwait
mov
std
xor
pop
stc
sbb
inc
fs
cmp
lcall
and
dec
lods
pop
jo
pop
push
jno
les
cmp
push
jp
inc
mov
test
xor
or
dec
push
xor
out
push
in
dec
or
push
cmp
and
pop
mov
insl
mov
pop
fs
pop
xlat
pop
cmpb
push
push
add
lret
sbb
repnz
dec
mov
cmc
mov
fidivs
or
and
xchg
mov
int
dec
icebp
add
in
cmp
inc
cmp
xchg
push
push
test
jp
push
push
popa
cltd
inc
iret
push
aaa
in
outsb
cmp
loop
les
in
pop
rcll
call
jg
pop
bound
jae
in
cwtl
sahf
popa
mov
mov
addr16
js
add
push
add
fs
mov
inc
es
pop
push
pop
scas
jmp
cmc
fs
leave
cmp
sahf
lret
je
cmp
insl
ret
xchg
lahf
test
add
clc
insl
mov
cmp
add
loopne
jno
ja
jl
fistl
jns
popf
add
sub
ret
pop
mov
movsb
jno
repz
push
mov
cmc
jno
insl
fwait
das
data16
cmp
mov
movsb
cld
rclb
inc
mov
les
pop
pop
push
cmp
fprem
inc
jg
addr16
ja
loopne
jg
ror
out
cmp
push
icebp
cmp
mov
mov
shll
mov
xor
ss
sbb
loope
out
sub
jno
jmp
in
in
in
xchg
adc
or
add
mov
xor
inc
fchs
and
mov
sbb
sub
jmpw
or
pop
xchg
repnz
cmpsb
lea
cmpsl
pop
add
jns
repz
inc
pop
or
or
out
adc
ret
xchg
sbb
jns
dec
scas
imul
jns
dec
iret
mov
int3
lret
ret
mov
dec
out
inc
cmc
xorb
test
jg
bound
scas
sub
pop
in
rclb
add
mov
movsl
jns
pop
push
sbb
inc
inc
mov
fimuls
push
xchg
les
dec
mov
pop
mov
outsl
aad
cmp
xor
aam
out
dec
sahf
ret
stos
repnz
jo
fisttpl
inc
pop
xchg
sbb
je
jmp
xchg
je
mov
jmp
dec
xor
outsl
nop
popf
xchg
adc
adc
pop
cltd
mov
inc
popf
pushl
jecxz
pop
andb
sub
into
fdivs
cs
and
pop
in
icebp
pop
inc
pop
ljmp
push
or
push
inc
std
negb
cltd
adc
add
ljmp
outsl
sub
mov
enter
xor
aaa
mov
pop
dec
mov
mov
push
sub
ret
repz
int
lods
push
data16
pushf
dec
sbbb
into
mov
mov
adc
inc
jo
or
jge
add
cli
out
repnz
dec
fs
cmpsl
insl
movsb
cmc
cmpsb
pop
or
scas
loopne
gs
cld
and
cmpsl
orl
std
in
mov
addr16
push
pop
popf
mov
pop
bound
sbb
add
sub
push
xor
sub
cmp
je
sahf
xchg
bswap
fmuls
shll
int
adc
aaa
jo
inc
mov
ljmp
lahf
sub
jne
jnp
add
jmp
and
cld
lds
pop
xor
sub
insl
sub
cld
adc
jg
pop
jne
dec
out
pop
insl
lds
in
fidivrl
clts
aaa
fs
std
popa
shlb
fldenv
jecxz
into
jecxz
loopne
mov
in
mov
jl
adc
dec
add
cltd
add
jmp
xchg
out
jl
mov
mov
or
out
ret
push
fwait
icebp
lock
negb
popa
inc
mov
cmp
and
adc
or
sti
mov
fsubl
out
aaa
aas
cmpsb
sarb
adc
enter
scas
das
sbb
pop
jl
popa
pop
mov
push
add
sbb
mov
sbb
lock
stc
test
sbb
nop
rcr
xchg
das
loopne
inc
mov
sbb
inc
and
sbb
mov
cwtl
icebp
cmp
push
push
dec
jl
push
roll
imul
dec
neg
addr16
mov
les
inc
and
push
inc
jb
outsl
mov
adc
es
mov
cmp
pop
test
shr
sbb
sub
aad
cwtl
lret
pop
pop
ja,pn
cmp
in
popa
ffree
xchg
dec
sub
subl
xchg
lcall
pop
pop
outsl
cmp
push
ljmp
std
and
mov
jo
ror
rcrl
scas
gs
xchg
in
mov
adc
leave
mov
or
xchg
cltd
xor
cmp
aad
pop
sbb
adc
sarl
imul
and
enter
pop
add
adc
or
shll
mov
shll
imull
or
adc
fbld
adc
jno
mov
int3
and
lcall
jge
adc
les
mov
loope
sub
pop
lret
inc
mov
adc
pop
outsl
es
icebp
lods
and
sub
push
sbb
bound
sbb
push
iret
adcb
fs
loopne
cld
incl
dec
andl
stos
movsl
cmp
xchg
dec
or
lret
pop
inc
sub
mov
test
mov
sbb
push
push
sub
fdivr
sbb
push
sbb
int
ja
imul
lods
in
cmp
cmc
test
xchg
enter
es
inc
mov
add
pop
push
fsubl
adc
stos
loop
jl
mov
int3
push
inc
scas
mov
out
aas
jae
mov
mov
mov
mov
fstps
fcompl
adc
xchg
int3
pop
repnz
mov
mov
js
lea
lahf
testl
in
test
sub
dec
in
and
push
repz
lret
cmpb
popf
gs
push
lret
insl
cmpl
push
add
js
lods
xor
mov
cmp
inc
mov
or
jb
add
xor
inc
adc
ljmp
fwait
xor
inc
pop
imul
in
rolb
cmpl
aaa
xchg
or
sbb
mov
mov
mov
cmp
push
out
jne
ret
cltd
push
dec
or
push
inc
gs
bound
adc
pushf
fildl
ljmp
shl
jge
sbb
push
sub
enter
ss
adc
xorl
jne
push
inc
clc
xor
adc
inc
adc
fs
in
test
sub
mov
fildl
js
fistl
shlb
mov
cmp
pop
into
cltd
jmp
jbe
push
mov
jbe
mov
lock
jle
inc
je
aas
push
adc
roll
popa
inc
lahf
repnz
inc
and
jmp
xchg
outsb
test
cmp
push
or
ret
stos
cs
insl
dec
mov
std
lock
push
or
pusha
cld
sahf
push
sarb
inc
int3
sbb
mov
add
fdivs
scas
or
out
outsl
popa
in
push
mov
rolb
or
adc
movups
in
out
mov
jbe
push
fcompl
std
loopne
jge
jno
incb
test
jle
xor
fdiv
push
neg
cmp
imul
insl
xorb
into
or
negb
mov
pop
out
sub
jns
mov
mov
inc
pop
movsl
adc
xor
hlt
sbb
pop
lods
fdivl
cli
lds
jo
push
push
or
push
add
mov
mov
sbb
pop
inc
push
push
and
scas
aam
xchg
fsubrs
fbstp
sbb
js
jne
lods
xchg
in
and
repnz
fstps
lret
and
xchg
dec
pop
flds
dec
outsb
adc
mov
cmp
sub
mov
lods
fldenv
jno
shl
rorl
adc
decb
sbbl
cmp
pop
out
leave
dec
das
mov
dec
fldl
xor
inc
fyl2xp1
ljmp
or
test
inc
fs
and
into
mov
aaa
rcll
fs
stos
fwait
mov
ja
les
xlat
xchg
mov
clc
rolb
mov
pop
lret
xchg
mov
sub
lcall
dec
jno
sbb
cs
in
aam
sub
cli
ds
push
cmpsb
xchg
subl
lock
lea
aad
sbb
mov
aad
popa
imul
iret
in
add
cmp
sti
add
sahf
dec
add
xchg
or
aam
add
mov
push
sbb
and
jp
jmp
out
movsb
sbbl
pop
fwait
or
cmp
aad
into
mov
into
sbb
jns
dec
roll
pop
sbb
and
hlt
outsl
mov
xchg
data16
pop
xor
stos
test
lds
push
arpl
push
sbb
test
mov
add
insb
iret
cmp
shll
minps
pop
mov
xorl
inc
add
mov
fs
rolb
nop
stc
mov
hlt
push
ret
jecxz
test
mov
out
pop
dec
and
out
gs
jl
or
pop
lds
and
adc
jmp
orb
addb
mov
xor
adc
dec
out
xor
iret
mov
cmp
mov
jne
nop
loop
popa
add
pushf
adc
and
outsl
and
iret
push
sbbb
mov
xchg
enter
sbb
jnp
cwtl
arpl
jecxz
cli
add
insb
cltd
jg
push
jmp
aaa
orb
das
adc
ss
inc
cmp
mov
jns
or
pop
std
je
push
dec
pusha
fnstenv
ds
test
fidivs
jns
int
adc
xchg
mov
jns
pushf
sbb
lahf
std
addl
movsl
sbb
jne
sbb
push
nop
sub
mov
mov
repz
popf
push
push
rolb
mov
sbb
mov
mov
cwtl
pop
xchg
jnp
inc
int3
dec
ds
aam
cltd
lods
js
xchg
inc
push
adcb
mov
rolb
imul
cmp
pusha
leave
push
call
cmp
ds
xchg
xchg
jae
push
cmpsb
and
bound
out
fdivrs
ja
cwtl
xchg
xor
xor
std
mov
adc
lods
shl
sbb
iret
xchg
xchg
testl
dec
test
push
test
fdivl
sub
mov
mov
mov
aad
inc
or
cmpsl
sbb
xor
cmpsb
sbb
jne
cmpb
test
mov
mov
out
out
jle
mov
mov
popa
jno
pop
in
mov
loopne
cltd
fldl
cmp
push
out
inc
orl
imul
mov
xchg
sub
loop
add
lock
xor
pusha
xorl
movsb
jae
ret
pop
pop
shlb
dec
xchg
call
daa
lds
subb
dec
and
push
insb
sub
sbb
aas
xchg
cli
test
test
into
in
lahf
cmp
pop
out
test
inc
in
xor
out
xchg
loopne
pop
add
outsl
cld
lahf
cltd
add
pushf
ret
addr16
movsl
jge
test
adc
pop
jp
rcll
movsl
orb
sub
push
add
jmp
jbe
jge
cli
or
jmp
sub
outsl
jbe
sbb
adc
mov
popf
pop
shl
cltd
sub
imul
push
push
lcall
loope
in
pop
cmp
or
cld
inc
adc
loope
add
cli
hlt
cltd
jg
adc
lds
jp
ljmp
fcoms
push
arpl
testb
es
pop
aas
sub
ret
cmp
inc
movsl
sub
push
push
jae
sub
call
je
test
and
lds
cmp
push
mov
lcall
sub
movsb
dec
movsb
popa
xor
inc
andps
mov
data16
adc
test
inc
jae
sub
scas
fldt
test
shrl
leavew
dec
loopne
xchg
dec
xchg
js
mov
mov
xor
pop
out
jnp
jne
enter
xchg
cmp
or
adc
stos
dec
test
aas
pop
cltd
adc
gs
push
test
arpl
ds
outsl
adc
out
jo
sahf
xchg
addr16
cmp
xor
out
push
pminsw
mov
cmpl
rolb
daa
adc
test
jmp
mov
cmp
xor
movsb
pop
incl
ficoms
fimuls
subb
xor
pop
and
fstpl
fcompp
gs
push
xchg
and
test
fistpl
icebp
rorb
lock
pop
lock
jb
mov
jne
stos
xchg
cli
cmp
mov
and
shll
test
insl
mov
aaa
sbb
sub
out
call
jbe
xchg
jns
dec
or
or
xchg
cmpsb
push
nop
push
and
add
xchg
out
xchg
dec
dec
sub
lds
popa
inc
ret
cmp
stc
mov
into
rcll
roll
push
pop
bound
sub
lret
xchg
inc
stc
fiadds
adc
fcompp
and
pop
sub
push
push
cs
jg
cmc
hlt
loopne
push
mov
sahf
mov
loopne
mov
sbb
ja
dec
dec
jb
and
push
test
pminsw
cltd
pop
pop
mov
jmp
push
xor
mov
test
adc
cmp
aaa
daa
ss
test
mov
mov
xchg
inc
aam
test
pop
insb
sbb
xlat
jle
push
aad
xor
push
cs
testb
mov
pop
mov
jecxz
inc
dec
orb
sti
popf
or
dec
loopne
ljmp
xchg
hlt
dec
jo
out
inc
es
jp
adc
mov
mov
in
mov
out
push
mov
ljmp
call
jecxz
pushl
sub
mov
leave
mov
dec
adc
add
unpcklps
daa
mov
lret
and
inc
aad
jns
stos
fmuls
shlb
jg
or
xchg
or
fistpl
jge
outsb
repnz
dec
or
or
sub
clc
mull
int3
roll
push
faddl
outsb
jne
jmp
sti
movsb
push
lock
mov
fs
fwait
sbb
sarb
ljmp
das
inc
jno
mov
or
xor
sbb
mov
inc
push
and
addr16
insb
test
data16
xor
outsl
mov
cmc
pop
rcrb
mov
or
cmp
jnp
hlt
xchg
std
inc
push
xor
mov
mov
jmp
pusha
sub
adcl
je
repz
loopne
xchg
fnstcw
dec
lret
lcall
cmp
sahf
xchg
orl
jl
sti
sbb
movaps
mov
mov
mov
lcall
mov
push
test
pushf
faddl
cli
jmp
lahf
enter
loope
fimuls
push
ret
in
cltd
aaa
cmpl
jmp
inc
sbb
xor
aam
jnp
lahf
imul
inc
xchg
and
mov
orb
add
mov
cmp
jbe
loopne
mov
lock
dec
mov
enter
out
push
test
add
xlat
xlat
jp,pn
push
mov
or
repz
sbb
repz
add
gs
mov
mov
mov
dec
orb
inc
mov
push
xchg
popf
out
imul
sbb
dec
cwtl
test
jg
lcall
ds
bound
xchg
and
call
sub
xchg
sub
shlb
sti
test
je
adc
push
sbb
es
stos
fsubl
adc
jle
sbb
andb
cmc
mov
mov
in
or
push
jge
sub
int
ret
mov
pushf
mov
sub
mov
lods
mov
inc
sahf
inc
std
and
test
inc
adc
pop
push
add
out
xor
test
pop
shlb
inc
rol
push
add
scas
les
push
mov
lods
daa
repnz
jo
xchg
cltd
xor
fiaddl
in
loopne
sahf
mov
add
xchg
pop
adc
dec
fwait
test
stc
loopne
or
arpl
jbe
pushl
lret
int3
outsl
into
pushf
xchg
test
stc
push
pop
adc
dec
frstor
inc
call
inc
xchg
in
ljmp
xchg
mov
and
nop
addb
jmp
xchg
pop
rcrl
pop
inc
dec
jecxz
fucom
sub
cmp
int3
out
pop
lods
sub
mov
fnsave
inc
pop
sahf
jle,pt
aad
sbb
adcl
adc
rcr
repz
pop
test
in
jno
xchg
add
mov
sub
lea
mov
xchg
insb
repnz
mov
xor
xchg
dec
pop
push
sbb
pop
jle
pop
or
mov
sub
or
leave
mov
fwait
or
gs
dec
pop
or
icebp
in
or
ret
ljmp
pop
repnz
add
sub
and
sahf
xor
int3
jge
mov
jns
add
jmp
jmp
movsb
in
popl
into
adc
jno
xchg
pop
lea
insl
into
pop
je
stos
adc
or
sbb
cmp
or
mov
lds
lcall
xchg
cld
inc
fs
xchg
mov
mov
je
lahf
jo
insb
lods
mov
push
loope
jp
gs
cwtl
sti
xchg
lret
js
int
xor
pop
cmc
clc
mov
add
push
aad
add
push
or
adc
xchg
mov
sti
out
lret
pop
push
mov
adc
dec
popa
jns
cmp
pushf
movsb
rclb
inc
in
stc
xor
ds
mov
sub
jne
mov
into
orl
dec
mov
or
adc
sbb
scas
mov
out
dec
movsb
imul
cmp
xchg
jecxz
xchg
cmp
xchg
icebp
xor
pop
jno
xchg
cmpsl
mov
pop
or
cld
stc
adc
icebp
sbb
jnp
or
bound
scas
push
int3
lods
mov
add
add
jns
rcll
sbb
ret
add
lods
mov
push
pop
stos
lea
dec
sub
cmp
sub
out
xor
mov
adc
push
leave
adcl
fiadds
cli
inc
popf
shlb
movsb
pop
loopne
inc
mov
inc
adc
add
push
jae
mov
daa
sub
into
rcll
movb
mov
cmp
fs
ljmp
stc
scas
mov
daa
lea
jae
adc
sbb
xor
sbb
and
loop
xor
add
aam
jecxz
rcr
aad
insb
jmp
insb
pop
and
or
imul
daa
xchg
mov
xor
pop
nop
and
fwait
xchg
cmc
inc
stos
shlb
jg
jg
mov
scas
jo
jnp
arpl
inc
dec
std
mov
adc
xor
and
ret
cmpb
mov
and
cmpsl
and
insb
fimull
ja
wrmsr
in
enter
pop
es
scas
lret
outsb
int
xchg
dec
aad
or
push
pop
daa
cmp
jae
mov
jbe
and
sahf
pop
iret
pop
aam
lock
ficoml
sbb
push
pop
lret
jl
xchg
arpl
insb
sbb
sub
mov
andl
in
jmp
iret
test
lret
negl
pop
jl
lock
xchg
shr
out
and
fsubl
push
shrb
movsb
negb
cmpb
inc
imul
inc
mov
test
mov
xor
mov
incb
in
xor
test
out
mov
test
xchg
fwait
icebp
adc
sahf
mov
icebp
movsl
push
das
ja
popf
lret
cmp
rorl
arpl
push
sbb
mov
insb
mov
loopne
pop
repnz
mov
aaa
push
sbb
cmp
inc
sub
xchg
scas
inc
repnz
mov
adc
push
js
cmpl
or
test
push
cwtl
inc
sub
sbb
push
jnp
stos
negl
cmpsb
mov
push
mov
push
cmc
in
push
sub
fs
test
jb
ss
cmc
data16
push
shlb
jg
cmp
dec
jecxz
loop
sbb
adc
lahf
cmc
scas
mov
mov
mov
push
dec
inc
clc
add
sbb
push
stos
inc
aad
jge
mov
pop
lea
stos
out
aas
pop
jmp
cmp
mov
ds
test
rorl
xchg
aas
and
push
and
sub
cmp
xor
or
mov
sub
adc
shl
test
dec
inc
sbb
shrb
cmpsb
das
and
inc
outsl
shrb
sub
or
jne
fwait
pop
icebp
gs
jns
notb
mov
aad
call
mov
pop
xlat
out
dec
xor
pop
dec
cmp
push
push
or
hlt
cmp
fidivrs
in
xor
xorb
sbb
pop
out
push
cli
jo
lret
js
or
pop
push
das
pop
rorb
dec
dec
lret
lcall
sbb
in
das
aam
or
sahf
dec
test
and
add
adc
hlt
xor
cmpsb
sub
dec
or
test
jb
cmp
cmc
pop
cmp
loop
pop
dec
jge
stos
sub
push
and
jmp
scas
sbb
pop
pop
call
and
enter
nop
lods
xor
dec
push
scas
push
test
loope
xchg
dec
aas
pop
jl
xchg
dec
sbb
sahf
or
push
loope
add
js
jl
and
arpl
pop
ss
adc
sahf
jmp
mov
inc
cmp
sub
sbbl
push
rcrb
sub
pop
out
push
mov
inc
jno
test
jno
jbe
mov
xchg
and
ja
xor
insb
outsl
cld
std
mov
push
repz
pop
jg
aad
imul
idiv
xor
iret
pop
mov
mov
push
pop
sub
jg
adc
fdiv
adc
in
sahf
xchg
not
sarl
fildl
mov
in
aam
jp
shrb
in
mov
push
sub
jb
loop
inc
outsb
xchg
push
sub
popf
mov
cmc
lods
xlat
fsubs
mov
test
loop
xlat
cmpsl
sub
out
mov
leavew
adc
daa
pop
pop
pop
not
in
imul
dec
jmp
fidivrs
push
in
mov
insb
ds
cli
mov
lods
hlt
sbb
jp
js
xchg
insl
bound
lea
inc
add
xchg
xor
iret
cs
push
lcall
repnz
and
test
xchg
mov
xchg
sub
jl
negl
mul
imul
cmpsl
or
je
in
imul
cs
scas
cltd
mov
rcrb
xchg
xor
ja
in
movsb
bound
repnz
cmc
sarl
psllw
stos
xlat
imul
xor
js
mov
outsb
jge
mov
and
mov
mov
mov
pusha
shr
sub
inc
inc
ret
jnp
lock
outsb
xchg
dec
lret
adc
mov
lret
cmp
adc
xor
add
inc
adc
stc
scas
mov
and
add
pop
add
mov
pop
outsb
fistps
stos
or
leave
or
popa
out
vxorps
mov
jbe
pop
cmpsl
pop
es
pop
push
outsl
sub
addr16
add
adc
push
push
leave
lods
dec
mov
sub
pusha
fstpt
lock
and
cmp
fxch
out
fildl
and
mov
pop
xor
inc
pop
je
lds
loopne
mov
loop
xchg
cmp
pusha
mov
mov
enter
popl
add
xor
add
push
jl
mov
mov
sub
sub
adc
int
mov
jae
mov
mov
out
jg
fs
xchg
fistps
test
add
repnz
or
inc
ja
and
lahf
imul
push
sub
pop
mov
and
stc
and
cwtl
mov
pushf
dec
dec
mov
outsb
int3
xchg
test
xchg
sub
scas
jle
pop
jl
sub
gs
sbb
loope
push
and
outsl
orb
push
mov
sub
add
stos
and
cmc
mov
push
sbb
cmp
addr16
nop
addl
xor
jae
cmpsb
sbb
add
cmc
mov
mov
cmp
pop
int3
imul
js
mov
or
pop
cld
sub
inc
cmpsl
clc
inc
pop
lret
and
cwtl
out
mulb
je
mov
xor
pop
dec
jae
push
dec
push
add
cld
pop
cmp
leave
cmc
daa
dec
xchg
data16
cmp
adc
inc
test
int
bound
adc
add
mov
cmp
stc
mov
push
mov
cmp
mov
fisttps
incb
mov
mov
inc
stc
ficomps
movsb
lret
fs
fs
push
add
mov
loope
mov
pop
hlt
mov
adcl
pop
sbb
ds
sbb
ja
push
or
jns
mov
xchg
mov
ficompl
into
ja
shll
out
imulb
call
mov
pop
sub
ljmp
mov
test
sbb
xchg
dec
and
inc
fxch
mov
xor
adc
bnd
push
adc
sub
lret
ja
roll
xor
inc
lds
push
xor
sub
pusha
loope
jg
pop
add
aad
xor
ds
xchg
in
add
push
dec
or
cwtl
push
cmpsl
out
stos
sub
stos
fisubrs
dec
inc
mov
cmpb
sub
mov
std
int
push
stos
sbb
shlb
aad
jg
push
mov
scas
jno
out
lea
inc
lea
dec
negb
bound
jg
jae
lcall
push
shr
nop
sti
jo
ljmp
mov
xchg
fstps
mov
hlt
jae
sahf
cmc
imul
sbb
jae
mov
lea
add
call
clc
pop
cli
pop
jbe
arpl
hlt
adc
xorl
sub
jp
pop
subl
jge
mov
push
insl
aam
popf
shll
lret
add
mov
jbe
dec
outsb
in
jge
jecxz
mov
fdivrl
fwait
imul
fcomps
or
out
xchg
ds
sub
jae
xor
dec
jo
inc
pushf
std
mov
lea
loope
xchg
sub
adc
sbb
add
xor
push
mov
cmp
and
sub
daa
jno
icebp
xor
bound
out
imul
dec
cmc
or
test
cwtl
loop
pop
cs
roll
inc
mov
pop
pop
mov
dec
dec
inc
pop
pop
xchg
push
stos
mov
cld
ja
mov
out
dec
xor
test
mov
and
jecxz
rorb
mov
xchg
inc
outsl
lds
popa
gs
and
xor
mov
mov
push
adc
xor
loopne
xlat
jo
stos
add
sbb
pop
movsl
dec
and
and
fbld
adc
pop
and
call
mov
jne
mov
mov
mov
jl
pushf
jae
scas
dec
jno
mov
mov
mov
mov
cmp
nop
loopne
aaa
jns
cmpsb
xchg
das
sti
dec
pop
mov
cmp
fcomip
test
sub
xchg
jp
fisubrs
cmp
xor
mov
sub
dec
jbe
jle
jb,pt
dec
mov
adc
mov
or
insb
in
dec
cmp
pushf
adc
addr16
fs
das
cmp
mov
mov
jne
pushl
repnz
mov
cmc
adc
lret
test
mov
xlat
ja
inc
ss
jae
cmpsl
mov
add
hlt
ficompl
test
adc
pop
jg
sub
loopne
xor
mov
inc
push
fildl
lock
aam
mov
jns
jb
jge
adc
call
mov
fdivs
addb
fcoms
add
add
lea
lret
lods
loop
mov
aad
jns
mov
xor
xchg
sbb
leave
lret
ds
aas
xchg
iret
scas
mov
loopne
mov
ja
adc
mov
xchg
sub
rolb
je
sub
mov
mov
test
mov
xor
mov
mov
inc
lea
mov
adc
jns
sub
push
mov
pop
mov
mov
das
jno
test
testl
lret
add
lahf
in
sub
xor
ds
xor
movsb
fisttpll
inc
sbb
nop
xor
mov
or
rcrb
inc
add
mov
movsl
aas
js
push
and
and
cmpsl
push
dec
jae
stos
sub
mov
addr16
addr16
jnp
dec
hlt
lock
mov
repnz
lret
mov
pushf
jle
icebp
leave
and
xchg
and
lds
dec
inc
xchg
into
sub
sahf
loop
push
aad
adc
add
loop
and
aad
dec
stos
lods
inc
repz
test
jmp
mov
jnp
mov
cli
in
mov
imul
test
xchg
mov
xchg
adc
sub
cmp
pop
or
test
jle
jnp
xchg
mov
fnstcw
mov
into
jns
jmp
ja
int3
leave
cwtl
out
movb
shll
dec
sbb
jnp
jmp
out
outsb
pusha
sbb
push
popa
xor
pusha
bound
sbb
xor
inc
aaa
jle
popa
call
push
cmp
ret
in
dec
pushf
adc
sub
mov
cmp
cmp
out
jg
rcrl
pop
mov
and
sbb
jae
jle
sbb
je
movb
movsl
sub
outsl
add
inc
out
test
pop
or
outsl
mov
xor
and
lods
je
adc
out
push
xchg
xor
loop
ss
jns
pop
mov
scas
adc
pop
nop
jbe
or
sbb
fisttpll
dec
jne
inc
iret
mov
inc
rorb
lahf
rclb
out
or
mov
or
xlat
lods
sbbl
and
addr16
je
mov
rclb
lods
adc
push
imul
jp
jbe
pop
jle
cmpsb
in
js
push
cmp
rcll
ljmp
and
frstor
pop
adc
scas
test
sub
mov
mov
cmc
les
arpl
cmp
inc
ret
mov
mov
out
push
pop
sub
hlt
ret
jp
jbe
js
xor
pop
mov
sarb
repz
loopne
sbb
dec
xchg
js
rorb
lahf
xor
imul
stos
mov
push
push
mov
cli
jo
int
pop
out
ret
pop
mov
arpl
clc
or
pusha
mov
jp
adc
scas
mov
negb
xlat
push
inc
loope
mov
xor
notl
jl
idivl
inc
mov
in
bound
outsl
mov
push
jo
out
jmp
mov
inc
pop
inc
mov
jp
test
cmp
xchg
sar
clc
aam
xor
cmp
lds
cmp
mov
clc
xchg
inc
xorb
ljmp
loopne
leave
xchg
lods
les
iret
fsubrs
pop
or
xor
adc
repnz
loopne
cmpb
sbb
push
xor
jae
mov
nop
xchg
mov
adc
and
inc
jb
inc
xchg
sub
stc
dec
xchg
les
mov
add
hlt
sbb
loop
push
std
mov
or
int
popf
mov
jmp
loope
jns
cltd
mov
mov
sarl
dec
ljmp
lea
fidivrs
add
xchg
insb
scas
rorl
mov
mov
nop
lods
ja
inc
jge
orl
mov
xlat
push
add
mov
dec
and
sbb
fisubl
movsl
movsl
pop
inc
sub
push
lods
sar
cmp
cmpsb
inc
in
rcll
adc
in
mov
out
es
bound
push
int
mov
xchg
stc
mov
pop
shrl
aam
insb
or
movsl
pushf
jecxz
lret
lea
or
xchg
mov
inc
cs
enter
pop
movsb
sbbb
notb
dec
or
movsl
pop
xchg
gs
aaa
lds
fsubr
popa
cld
adc
imul
push
mov
mov
clc
xchg
std
mov
lods
ret
dec
sub
mov
pop
push
frstor
pusha
sbb
in
jnp
or
cmp
jne
mov
adc
lcall
enter
xlat
daa
sbb
rorb
js
sub
adc
pop
fsubp
mov
fldl
dec
jbe
out
loopne
mov
sub
icebp
pop
and
aaa
cmp
jne
inc
mov
mov
dec
pop
jno
fcoms
in
into
shrb
dec
inc
push
cmp
sub
lret
pop
repz
push
sbb
push
fdivrs
or
clc
adc
pop
pop
fs
jle
push
inc
cltd
pop
mov
jbe
pop
jl
test
jecxz
gs
dec
add
add
bound
adc
testb
fs
cmp
aad
push
stos
cmp
outsb
out
loop
add
cmp
ljmp
shlb
push
rcr
or
push
xor
fmuls
lods
and
dec
lret
or
pop
bound
dec
lret
repnz
loope
rolb
sbbb
mov
mov
sti
sub
inc
add
xchg
and
clc
ja
xor
sub
dec
js
pusha
loopne
nop
xor
iret
in
andl
ficoms
rcrb
and
jl
int3
push
mov
enter
sbb
jge
cmp
hlt
int3
cmp
int
push
pop
shlb
cmp
add
cmp
nop
insb
icebp
mov
test
xlat
hlt
adc
je
rolb
xadd
test
jg
and
push
data16
enter
aas
arpl
and
pop
sub
ljmp
mov
sbb
pop
inc
lods
sti
inc
loope
jne
int3
shll
ficoml
loop
fildll
sbb
lahf
mov
enter
inc
pop
cltd
jno
loop
pop
adc
fisubl
sahf
cwtl
or
dec
fisttpl
sbb
sbb
cmp
push
cltd
popf
and
push
jmp
addr16
xchg
pop
mov
imul
shl
fwait
add
mov
pop
in
fwait
mov
aam
and
mov
and
jg
mov
bound
rorb
push
mov
push
adc
pcmpeqd
adc
pop
jg
inc
mov
push
push
es
out
outsl
dec
fiaddl
sbbl
ret
xchg
mov
scas
push
iret
fmull
cwtl
pop
xchg
int
mov
mov
hlt
ljmp
outsl
fucom
jns
in
push
cwtl
rol
xchg
lods
jg
jge
icebp
rorl
mov
das
jb
xor
lcall
imul
and
pop
or
mov
dec
lcall
mov
int
pusha
les
scas
pop
jl
sub
imul
lahf
or
push
adc
sub
jle
mov
out
call
mov
sbb
testl
cmc
fisubs
mov
in
fsubs
xchg
pop
xor
and
into
mov
jmp
push
xchg
sbb
stos
adc
inc
ret
andl
inc
push
sbb
push
loop
xchg
mov
fsubrl
xor
lret
xchg
sbb
mov
fstpt
sbb
push
lret
aam
lret
mov
aas
mov
lret
lret
movsb
cmpsb
in
insl
mov
jne
push
jns
xchg
addl
mov
sbb
adc
cld
pop
scas
test
jmp
mov
ss
xchg
push
stos
les
into
in
fldl
cld
sti
push
adcb
add
push
test
ret
xor
fnstenv
jle
sbb
cmpsb
dec
jnp
inc
mov
add
into
push
adc
jbe
mov
mov
push
and
inc
dec
jnp
push
enter
movsb
mov
lahf
jo
dec
notl
sbb
aas
jae
cmp
dec
or
mov
and
xor
add
or
or
outsb
push
out
mov
xchg
into
push
xchg
inc
dec
dec
cli
mov
jle
adc
dec
pop
push
jle
jns
out
mov
adc
lahf
add
jae
movsb
mov
daa
pop
jae
xchg
cmpsb
mov
mov
mov
mov
xchg
or
mov
dec
and
push
sahf
mov
sbb
mov
enter
cmp
mov
in
xchg
mov
sbb
pop
out
mov
sbb
lret
addr16
push
roll
push
push
sbb
cld
shlb
imul
xchg
adc
adc
sbb
add
into
mov
ljmp
jb
and
aad
sub
or
dec
xchg
push
enter
aaa
push
add
jl
adc
xchg
pop
jno
inc
mov
push
push
repz
popl
sub
sub
push
push
daa
and
mov
icebp
or
xor
ret
adc
pop
stc
adc
or
pushw
xchg
cmovs
hlt
decl
ja
mov
xor
in
pop
dec
loop
sbb
jmp
arpl
cli
push
jns
daa
cmp
push
sub
rolb
xchg
and
fs
inc
std
imul
push
xchg
hlt
mov
in
mov
jmp
arpl
pop
and
dec
data16
dec
movsl
mov
scas
cmp
push
int
cmpsb
sarl
jp
xor
sahf
cmp
push
mov
mov
cmovnp
pop
repz
std
jno
dec
cld
adc
inc
cmp
in
add
pop
lcall
in
and
aaa
daa
outsl
add
mov
nop
shrl
inc
loopne
cs
xchg
lret
lock
mov
insb
mov
or
and
cmp
dec
mov
imul
pop
movsl
pop
clc
inc
dec
pop
or
mov
xor
mov
pop
in
mov
xchg
mov
mov
ja
jle
dec
dec
andb
inc
dec
mov
mov
rorl
xchg
shlb
push
shlb
inc
mov
or
inc
pushl
aad
fsub
inc
adc
arpl
sahf
nop
xor
lcall
xchg
pop
mov
daa
repz
iret
xchg
jo
fildl
push
cmp
push
popw
in
fcmovnb
sub
push
in
and
bound
gs
pmullw
out
mov
fidivl
xor
lahf
data16
loop,pt
mov
jnp
je
jmp
add
iret
sbb
mov
push
and
mov
int3
fdivs
fwait
push
jecxz
jg
inc
leave
fldenv
rclb
add
sub
mov
adc
clc
mov
push
lock
xchg
sahf
mov
int3
and
sbb
in
xchg
int3
jne
add
pop
mov
insb
push
inc
jb
repz
inc
repz
test
fdivrs
rcl
xchg
inc
mov
or
ret
add
test
mov
jb
pop
dec
bound
jecxz
fldt
mov
dec
inc
data16
mov
dec
and
pop
mov
and
adc
cs
cmpsb
ret
sbb
jmp
push
mov
mov
sbb
repnz
or
pop
lcall
push
scas
push
repz
jns
mov
push
inc
pop
add
pop
mov
pop
shlb
push
push
mov
push
cwtl
test
pop
pop
lock
mov
and
or
rorl
push
xor
lret
clc
es
xchg
repnz
shlb
pop
jbe
popf
leave
dec
shl
xchg
cmpsb
stc
ret
popa
adc
int
stos
imul
adc
mov
or
pop
mov
xchg
add
mov
mov
shrb
cli
lods
and
out
cmpsl
sysexit
and
sub
or
cltd
ss
mov
cmp
cs
and
sbb
xchg
out
jo
cmp
or
pop
and
test
mov
sbb
inc
xchg
rcl
mov
inc
outsl
in
dec
pop
std
xor
jo
xchg
adc
xlat
xchg
scas
dec
mov
into
add
mov
xor
lock
sarl
sbb
add
dec
loop
cmpsl
fnsave
and
fs
lock
jne
test
and
jge
dec
cmp
cmp
scas
xchg
push
scas
shll
cld
sbb
mov
inc
iret
pop
ja
lret
mov
fcompl
sar
sbb
pushf
pop
add
sti
jnp
push
es
mov
fdivrp
neg
pop
pop
xor
cs
mov
adc
adc
mov
sbbb
jl
fnstcw
faddp
scas
out
cli
jne
adc
pavgb
scas
orl
roll
ja
cmp
mov
mov
cwtl
cwtl
add
and
loopne
xor
pop
inc
lret
mov
ja
inc
and
loopne
jge
popa
mov
mov
arpl
test
jne
or
test
mov
das
adc
enter
fwait
movsl
inc
inc
faddl
lods
ret
sbb
arpl
inc
mov
xchg
sbb
push
push
stos
inc
lods
push
stc
fists
faddp
sbb
or
int3
push
mov
test
dec
aad
cmpsb
shll
ljmp
fwait
enter
dec
in
or
test
cli
adc
mov
ljmp
es
cmpsl
push
jecxz
pop
xchg
jo
sbb
push
lret
fidivs
sbb
push
rcll
mov
loopne
pop
inc
add
cmc
enter
add
nop
popa
repnz
dec
mov
jno
jmp
mov
push
mov
enter
enter
std
cltd
pop
xchg
mov
adc
xchg
test
mov
sbbl
cwtl
add
mov
in
aam
test
dec
daa
inc
ja
lret
xlat
gs
cld
scas
and
pushf
popa
je
xchg
mov
mov
idiv
maskmovq
mull
push
ficompl
shll
xchg
or
shlb
mov
inc
insl
fcoml
mov
cld
fisubrl
mov
mov
fstps
icebp
mov
lret
dec
cmp
cltd
dec
mov
ror
mov
pop
push
push
jno
dec
xor
je
scas
stos
push
jge
add
add
jg
adc
and
movsb
jmp
fisttps
stc
ljmp
fcmove
mov
inc
dec
or
xchg
and
pop
or
mov
loopne
jmp
enter
adc
in
enter
dec
pop
in
rol
imul
sbb
movsl
je
stos
bound
jnp
jl
outsl
je
sbb
js
mov
jmp
xchg
xchg
jae
jmp
and
jle
or
movsl
adc
xor
cwtl
sbb
or
inc
dec
flds
mov
push
dec
adc
dec
xchg
dec
stc
fwait
inc
aas
add
es
jmp
sub
sub
repnz
fst
and
dec
xlat
fstpt
jl
pop
mov
mov
ret
push
aad
je
fsubl
xchg
push
add
fcoms
inc
andb
xchg
jnp
jae
cld
ja
lods
lret
stos
sub
lcall
sbb
cmp
xchg
push
xor
inc
in
js
mov
jle
repz
ljmp
sub
add
dec
daa
cwtl
xchg
loop
cvtpi2ps
outsl
ss
push
sti
pop
stc
mov
or
test
adc
sbb
sar
sbb
and
ror
mov
test
addr16
lret
mov
sub
sbb
jo
lret
outsb
lock
xchg
mov
mov
xor
lret
mov
cmp
aas
sbb
out
and
mov
mov
insl
jb
lds
push
es
mov
cs
cmpsl
fbstp
mov
cmpsl
movsb
adc
push
fs
in
adc
cli
push
cld
les
or
mov
ja
bound
or
test
insb
sar
jae
mov
pushf
orb
stos
push
push
loop
xor
pop
and
push
add
cwtl
mov
dec
xor
sub
inc
imul
aam
or
fiaddl
ljmp
mov
xchg
pop
add
xchg
cli
ljmp
stos
repnz
das
lcall
dec
inc
decl
das
iret
int
sub
sbb
out
rclb
or
int3
scas
cmc
xorl
jne
pop
jns
mov
jp
push
shlb
mov
or
mov
fiaddl
adc
add
ja
jmp
add
xor
clc
sbb
jle
iret
xchg
dec
sub
push
jg
scas
sbb
test
out
cltd
or
or
xor
rorl
xor
into
cmp
pop
outsl
subb
adc
cmp
pop
mov
jno
inc
mov
sbb
ror
jg
push
dec
pop
movsb
lret
fadd
push
shll
mov
jae
push
pop
mov
addr16
xor
xchg
les
ret
out
pop
or
imul
popf
or
sub
dec
cltd
jge
adc
mov
cmp
xchg
dec
dec
xchg
testb
addb
dec
bound
mov
jp
aaa
fsts
arpl
dec
and
roll
negb
inc
bswap
dec
mov
sbb
fadds
jnp
or
cmp
fs
add
xchg
or
sub
aas
push
push
mov
ds
stos
adc
aaa
repz
inc
shr
jge
call
or
inc
cmpsl
inc
mov
mov
outsl
mov
mov
jbe
xchg
adc
add
jmp
lret
aas
inc
dec
jp
js
inc
icebp
mov
adc
xor
out
sbb
push
cmpsb
test
sub
mov
test
aaa
popw
orb
mov
xor
or
sbb
std
pop
daa
ficoms
jle
mov
dec
mov
cmpsb
cmp
pop
push
dec
ret
jns
add
add
mov
inc
out
pop
fs
js
sub
push
pop
xchg
adc
rcr
cli
sub
cmpsb
shl
xor
push
add
push
add
xchg
xor
lock
sbb
fadd
xchg
push
lock
cli
add
test
sub
cmpsl
cmp
adc
pop
subb
xlat
jecxz
jnp
xchg
mov
add
cmpsb
cwtl
mov
mov
fcompl
xchg
mov
ret
mov
xor
cmp
inc
jmp
pusha
jge
imul
fwait
lcall
mov
mov
clc
lahf
in
scas
flds
aaa
mov
scas
add
push
sub
push
popa
add
adc
mov
out
imul
mov
sbb
pop
fucomp
test
in
push
pop
jb
rolb
sub
sub
mov
test
adc
mov
cmp
scas
jecxz
leave
cwtl
outsb
xchg
in
and
inc
fwait
sahf
cwtl
shll
adc
mov
or
mov
mov
mov
mov
leave
and
test
add
aas
xlat
mov
sbb
insb
shrb
sbb
xlat
das
sub
or
das
lock
and
mov
mov
and
jno
and
out
lods
mov
jge
ss
dec
ja
in
dec
and
in
jns
pusha
iret
pop
or
xchg
rcrb
es
inc
test
mov
inc
popf
addl
push
sbb
push
cld
mov
movsb
add
mov
pop
dec
mov
cmovg
cli
sub
mov
push
insl
rcll
sub
pop
pop
fadd
iret
mov
cmpsl
lods
xchg
mov
int
test
js
repnz
mov
sub
xlat
sub
pop
sarl
insb
push
xor
mov
ds
jbe
jl
push
push
push
xchg
ficomps
into
aas
ljmp
inc
je
cmp
xor
push
cmp
sub
push
xor
insl
push
mov
xor
sbb
jle
add
arpl
push
inc
fs
stos
adc
gs
pop
jo
mov
dec
mov
sub
and
dec
jnp
std
dec
pop
dec
sarb
daa
decl
pusha
fs
pop
or
inc
std
sbb
sub
aad
push
jae
les
sbb
xor
pusha
inc
sbb
outsb
add
adc
pop
aas
arpl
dec
inc
xlat
imul
aas
add
and
jl
mov
repz
adc
jb
jp
cli
mov
and
xor
pop
cmpsl
cld
sub
loopne
daa
adc
in
stos
push
mov
rcll
aad
mov
fcmovnbe
lods
imul
sub
test
dec
sbb
pop
aas
sarl
push
pop
or
test
ss
mov
xchg
rcrl
pop
lock
push
push
jbe
test
adc
xchg
test
iret
jbe
aaa
push
adc
scas
push
and
insb
dec
xchg
fs
pop
rorb
iret
push
fs
push
stos
shr
push
mov
inc
push
xchg
out
ljmp
adc
pop
fwait
add
adc
jno
pop
cli
jge
sti
ss
fs
lret
push
mov
cld
ret
and
inc
xor
add
adc
fnstsw
sub
cmp
push
sub
shrl
inc
movsl
sbb
mov
mov
jle
out
push
xchg
mov
xchg
cmc
jo
int
inc
inc
mov
dec
cmp
addr16
pop
mov
cmpsl
scas
or
scas
lock
lret
sub
ret
cmp
addr16
fsub
pop
hlt
xchg
push
mov
out
clc
add
adc
subb
xchg
push
push
loopne
cmpsb
jae
dec
insl
out
dec
inc
lcall
jb
sub
mov
movsl
pop
popf
pop
add
in
xor
decb
stos
hlt
aad
cmp
idivl
dec
rcrb
xchg
sub
push
stc
xlat
aad
sbb
scas
lods
lea
shrb
xor
cs
in
adc
sub
push
nop
ret
mov
cli
and
cmp
sub
in
sub
xor
adc
subl
cmp
xlat
lock
pop
adc
cmpsl
jne
cmp
daa
xchg
cmp
out
dec
dec
shl
mov
ret
cmc
jns
mov
icebp
out
dec
jns
lahf
mov
lds
or
jg
inc
imul
inc
out
mov
pop
xor
test
jge
roll
fbld
mull
or
cmp
pushf
fmull
popf
aam
out
aad
xchg
sbb
add
in
mov
cld
outsl
sbb
lret
movsb
jne
push
cli
in
ret
mov
in
xor
sbb
jae
imul
pop
lds
lret
mov
ret
imul
bound
cld
xor
fdivs
jo
push
xchg
test
mov
shl
pop
addr16
and
cmp
inc
fs
enter
mov
xchg
fwait
call
push
mov
xorl
add
fcompl
cld
jae
jl
insb
popa
inc
sahf
mov
mov
xchg
lahf
dec
adc
xor
jmp
out
mov
loopne
cmp
adc
mov
jmp
cmpsl
fstpt
jge
out
lcall
je
jecxz
fldenv
fstl
ret
xchg
stc
xchg
mov
int
inc
mov
ljmp
test
jl
adc
add
or
xor
scas
iret
imul
sbb
mov
push
adc
and
sbb
lods
xchg
gs
cmp
enter
xchg
jecxz
sub
and
ljmp
adc
xchg
fcompl
mov
sti
sub
push
and
jb
mov
cmp
inc
pop
fwait
jo
cmp
stos
arpl
sti
push
ret
adc
das
xor
insb
daa
push
and
push
aam
adc
shll
add
sub
inc
cmpsw
cli
or
bound
cs
sub
xchg
loopne
dec
cmp
mov
lcall
lcall
ds
aam
adc
dec
or
xor
push
insb
sahf
adc
out
aas
push
fs
cwtl
mov
add
loope
ret
jl
dec
jle
insl
adc
and
data16
jbe
cmp
inc
push
popf
pop
push
stos
mov
sbbb
aaa
sarl
push
int3
lcall
inc
adc
bound
fnsave
inc
xor
shrl
xchg
es
push
out
std
dec
sub
hlt
aad
cli
fldl2e
mov
sbbb
push
rcrb
adc
dec
and
and
mov
and
jae
adc
xor
div
sbb
cmp
repnz
pop
pop
xorb
jmp
inc
shr
xor
shll
es
xchg
sarl
and
fstpt
dec
push
mov
sbb
test
outsb
aam
je
test
and
xor
pop
push
fcompl
mov
jmp
push
sbb
mov
inc
sti
dec
aad
xor
mov
xor
call
push
xor
or
shrl
mov
mov
push
mov
js
sbb
mov
jns
out
xor
std
add
mov
add
or
add
notb
xlat
scas
in
cmp
daa
push
inc
and
push
int
lret
call
outsb
out
push
in
and
xor
je
fs
into
mov
insb
or
adc
sub
movsl
mov
mov
icebp
ljmp
shrb
data16
cld
jns,pn
mov
out
or
xchg
jmp
push
push
mov
mov
inc
mov
aaa
fwait
sbb
shlb
in
xor
cmp
lret
call
push
push
push
sbb
lock
hlt
insl
int
lcall
iret
mov
das
repz
lods
ja
mov
and
mov
cmpsb
test
xchg
sub
push
subl
dec
stc
in
mov
and
jecxz
imul
cld
push
xchg
inc
ficoml
cltd
dec
outsb
jo
lds
push
test
dec
icebp
jne
xchg
filds
or
ret
mov
js
dec
add
cmpsb
ret
and
icebp
mov
jae
lahf
jnp
inc
in
pop
pop
mov
out
cld
jle
shlb
pop
add
cltd
xor
and
jmp
nop
insb
bound
cwtl
aaa
lock
int
sub
lock
lea
aad
cltd
les
mov
pop
xchg
movsl
cmp
popf
repz
sub
lret
pop
lret
leave
xchg
push
add
mov
jae
ja
daa
das
iret
in
xor
incb
ljmp
stos
fisubs
iret
fiaddl
push
pop
cmpsl
lahf
test
fldcw
and
dec
fchs
outsb
xor
shll
dec
mov
aaa
lods
lds
sub
test
test
adc
sbbb
push
test
pusha
inc
clc
mov
out
popa
cmp
pop
mov
data16
xchg
pop
dec
sahf
pop
mov
pop
sbb
cmpsb
or
clc
sub
and
pusha
and
dec
push
mov
cmc
cmp
adc
or
push
xorb
inc
cmp
add
pop
pop
push
stos
aas
adc
out
pop
sub
mov
mov
aam
in
shrb
adc
ds
add
add
xor
xor
fiaddl
mov
xchg
fsubl
dec
pop
ret
movsb
mov
stc
clc
xchg
xor
dec
pop
gs
xor
cmpsb
jbe
out
call
out
fwait
dec
addr16
push
and
movsb
sti
xchg
mov
jg
jecxz
gs
mov
jecxz
sbbb
add
sub
aad
mov
imul
dec
dec
cmpsb
add
pop
call
push
or
cmpsl
add
jl
pop
pop
nop
fwait
xor
jl
cmpsl
mov
out
aas
into
adcl
push
dec
add
lret
loope
add
cmp
pop
push
mov
dec
xchg
pop
and
test
dec
mov
adc
pop
sbb
inc
sbb
ret
push
and
clc
insl
lods
shrl
dec
push
inc
aad
inc
hlt
mov
adc
sbb
and
mov
and
push
cmp
test
mov
xor
addr16
es
test
cmp
or
inc
inc
nop
in
in
fs
lock
xchg
dec
data16
xorl
mov
sub
push
out
pop
inc
jno
loopne
pop
or
mov
cmp
out
cmpsb
mov
das
xchg
rorl
movsl
scas
push
push
cmc
ss
pop
jb
mov
stos
jb
dec
jmp
imul
mov
push
leave
sbb
xor
test
repz
add
mov
jb
add
pushf
xor
jg
jmp
jb
sbb
insl
inc
scas
stc
push
lods
mov
mov
inc
sbb
std
ret
iret
loopne
xchg
mov
shrl
dec
mov
lock
lret
and
adc
jmp
or
cld
xchg
fists
bound
cmp
xchg
xchg
adc
and
lods
mov
sub
cmp
push
test
and
outsb
andb
jae
dec
or
add
sub
cltd
lods
addr16
push
das
ficomps
sub
pop
jb
mov
jp
jge
iret
sub
sbb
jns
sbbl
xor
mov
adc
stos
cltd
or
test
xchg
mov
jp
dec
rolb
aam
vorps
sbb
in
pop
fldt
push
push
addr16
test
insb
sbb
fs
lret
add
jns
mov
sbb
or
mov
pop
add
jmp
popf
push
add
lcall
and
add
jecxz
push
inc
in
scas
enter
xchg
pop
mov
add
es
or
pop
leave
mov
xchg
das
ret
fwait
dec
cmpsl
cmc
cltd
xchg
pop
mov
push
subb
test
std
mov
cli
mov
cmp
loopne
jae
add
gs
mov
leave
ficompl
fnstsw
insb
call
ret
sbb
popa
pop
xchg
in
sub
pop
mov
push
js
mov
cmc
mov
adc
lahf
stos
xchg
mov
ja
xor
fidivl
out
cwtl
out
cli
es
popa
and
ror
int3
lea
pop
inc
cmpl
xor
xchg
push
cld
mov
fildll
fildll
jbe
sarb
rcrl
cs
add
shll
fcmovne
aad
or
adc
test
dec
rorb
xchg
or
mov
dec
test
out
in
stc
mov
dec
jecxz
sti
jb
xchg
xchg
call
lret
dec
jnp
ss
enter
xchg
les
ja
fsub
idivb
gs
push
and
pop
test
push
lock
sub
stos
or
repnz
push
xor
test
mov
push
cmp
adc
mov
inc
shrb
sub
mov
stos
gs
add
int
popf
or
or
push
push
xor
imul
lcall
and
jecxz
mov
aad
pop
data16
sbb
stc
mov
push
push
subl
pmaxsw
stc
addb
vmread
popa
jno
fxch
sbb
es
push
addr16
pusha
cmpsl
cmp
movsb
adc
sub
test
add
repnz
fbstp
imul
jp
outsb
test
icebp
loopw
inc
adc
mov
add
pop
cmp
mov
rolb
cmp
es
das
sbb
lock
call
xor
mov
mov
fidivrl
push
int3
or
lds
bound
mov
into
rcll
adc
cwtl
dec
sbb
js
jne
dec
ss
dec
xchg
cmp
dec
xor
shrb
mov
ja
xor
in
dec
scas
mov
cli
and
mov
mov
fmull
jnp
mov
fsubr
jae
sbb
or
inc
mov
xchg
or
push
movsb
cmpsl
dec
sub
in
or
push
and
movsb
sbb
shrb
aam
lahf
push
aam
jbe
push
pop
scas
insb
xor
mov
xor
stc
mov
and
out
push
fwait
rorl
mov
scas
subb
jmp
adc
aaa
imul
inc
enter
mov
sti
fcmovnb
mov
mov
cmp
add
test
in
loop
hlt
lcall
ljmp
push
sub
fimull
shl
mov
sti
fsub
imul
pop
mov
stos
xchg
cmp
push
adc
rcll
cs
mov
push
push
add
scas
in
mov
pop
mov
aam
inc
xor
inc
or
add
cmp
pop
mov
outsb
call
leave
mov
push
cmp
cmpl
fstp
sub
aaa
xchg
out
add
cmp
xlat
hlt
sti
enter
sbb
or
jno
inc
sub
push
dec
push
sbb
dec
add
scas
jae
mov
inc
push
push
add
and
jmp
xchg
stc
or
jb
mov
daa
je
pop
sbb
lock
jae
not
jl
aam
rcl
mov
cmc
add
dec
out
inc
rclb
mov
or
lock
addr16
xchg
loopne
dec
and
mov
mov
into
sbb
sub
push
inc
or
pop
outsl
or
fwait
sub
or
cmp
lock
mov
pop
add
aaa
cld
cmp
mov
add
cmp
dec
dec
mov
sbb
pop
mov
jl
sbb
jle
xor
scas
in
cmpsb
xchg
cmpsb
aas
movhps
add
mov
pop
push
jno
cli
int
mov
mov
stos
xor
mov
cmp
pop
enter
lahf
xor
inc
sbb
inc
or
xchg
aas
inc
cmpsb
mov
pop
aad
fldenv
cmp
pop
test
mov
add
pop
out
xor
push
sbb
lret
js
adc
mov
arpl
loope
lods
inc
ss
cmpsl
outsb
test
sub
cmpl
not
mov
pop
pop
out
cli
xor
dec
aam
xchg
xchg
mov
sarb
add
xchg
fadds
popf
adc
adc
insw
jne
push
mov
ds
pop
leave
stos
imul
mov
xchg
mov
leave
mov
nop
pop
shl
sbb
mov
lea
push
jl
andb
faddl
mov
or
pop
cmp
bound
dec
inc
gs
mov
ret
jb
xchg
into
rcr
xchg
aad
xorl
sbb
xchg
mov
idivb
fldt
or
mov
sahf
aam
mov
cmc
test
xor
and
pop
jmp
push
add
dec
ljmp
xlat
movb
scas
pushf
jb
cs
mov
push
fdivs
cltd
jmp
inc
iret
mov
cli
add
add
mov
xchg
pop
rcrb
mov
adc
lcall
sub
mov
push
sub
scas
adc
jmp
pop
ds
cmc
sub
push
ror
mov
sbb
mov
fisttpll
test
gs
inc
adc
mov
in
and
fstl
test
jae
inc
test
cmp
nop
fwait
pusha
xchg
add
iret
cli
jbe
in
ds
lret
mov
mov
xchg
jno
lret
push
mov
adcl
hlt
sub
and
mov
cmp
aaa
psubw
or
aaa
lods
jecxz
dec
bound
sti
in
cmp
popa
fxch
jne
je
cmp
sahf
pop
gs
pop
dec
jmp
dec
aaa
sub
rcrb
bound
arpl
sbb
add
in
pop
ret
push
mov
les
test
jns
mov
cmp
mov
adc
pop
pusha
add
jae
mov
pusha
jl
inc
sub
mov
cmpsl
pusha
sub
sbb
outsb
adc
or
fldln2
cld
xchg
adc
inc
sbb
xor
call
aaa
inc
out
inc
cs
mov
mov
addl
xor
data16
jns
sub
movsb
scas
sbb
mov
ficomps
inc
xchg
call
jg
push
jle
iret
jo
daa
mov
daa
fidivl
hlt
scas
ret
jl
or
jge
int
jb
jae
or
xchg
jne
push
out
xor
sbb
mov
loopne
dec
insl
sbbl
xchg
test
sub
in
js
es
push
cwtl
clc
inc
fnstcw
fldt
sbb
inc
sub
scas
lcall
sbb
lea
in
jg
or
sbb
mov
out
or
push
inc
jb
clc
imul
loope
cld
loopne
or
jo
xchg
mov
ss
leave
xor
dec
jne
lret
movsb
mov
call
or
sub
mov
dec
popf
mov
call
push
hlt
popf
decl
mov
and
fiadds
jns
std
sbb
mov
leave
cmpsl
dec
insb
xchg
mov
lahf
and
cwtl
mov
sub
xorl
in
mov
and
call
cwtl
ljmp
cmp
dec
jbe
cmc
pop
mov
mov
adc
lret
inc
sbb
cmp
outsl
push
cmp
push
cmp
mov
cli
imul
mov
cld
add
xor
ja
fwait
and
loope
mov
jnp
idivl
xor
icebp
fldl
pop
xor
in
pop
loopne
push
xor
sbb
icebp
mov
in
inc
push
push
sbb
cmp
adc
lods
jo
jmp
xchg
or
adc
xor
in
push
lret
inc
jae
jnp
pop
scas
mov
push
mov
test
shrl
fmul
xchg
cmp
or
push
xchg
loope
sbb
pushf
jbe
fnstenv
stos
daa
cmp
xchg
std
sub
cmp
fidivrl
arpl
cmpsb
sti
and
mov
and
outsb
xchg
mov
into
dec
lcall
scas
icebp
push
sahf
pop
push
sub
pusha
sub
dec
adc
out
lcall
sub
inc
sub
scas
repnz
sbb
insl
inc
and
jbe
adc
dec
inc
xor
addr16
push
cmp
loop
xchg
aaa
pop
pop
jge
in
jp
inc
nop
push
imul
jmp
mov
push
cmp
jbe
xor
inc
mov
inc
and
lods
mov
rolb
xchg
sbb
movb
sbb
pop
jns
ljmp
or
int
insl
fcoms
dec
movsl
jne
adc
imull
lcall
pop
fsub
xor
outsl
jo
adc
or
pusha
jno
ja
xchg
lock
cld
xor
mov
test
push
mov
divl
push
stc
out
int
stos
leave
ja
jmp
sub
sarb
test
sub
inc
add
mov
cld
sbb
in
push
jg
xor
std
push
lret
mov
mov
cld
jg
inc
adc
imul
data16
jmp
jnp
arpl
add
cli
pop
adc
fcom
cli
sub
outsb
fdivl
fisttpll
adc
mov
sub
jp
sbb
jle
sbb
sbb
or
add
mov
mov
and
js
jmp
cmp
cmp
push
adc
loop
pop
or
xor
mov
jle
sbb
sub
xor
mov
bound
lret
in
adc
jecxz
jb
aaa
movsb
jns
add
movsl
push
jecxz
jg
xlat
shll
pop
mov
and
adc
pushf
push
jae
scas
mov
pop
in
cmp
inc
xor
es
aad
stc
mov
pop
add
push
pop
mov
shlb
cmc
or
xchg
andl
shl
jle
push
repnz
jl,pn
mov
sar
loop
add
icebp
mov
pop
push
leave
mov
mov
mov
adc
adc
push
inc
pushf
push
xorl
and
pop
jo
mov
jge
jge
jo
add
in
cmp
dec
cmp
mov
lock
clc
push
dec
data16
mov
insb
xchg
xchg
adc
negl
sbb
sbb
out
push
movsl
imul
or
and
mov
mov
or
jl
cmp
jb
dec
add
aaa
fldl
mov
mov
jnp
lahf
adc
jae
je
xor
loope
push
aad
out
xchg
adc
loop
mov
xchg
iret
fstl
inc
icebp
adc
or
outsb
das
outsb
les
sub
fwait
fwait
xor
pop
pop
jle
unpcklps
inc
xchg
mov
cmp
outsl
sub
addb
and
mov
lock
xchg
push
add
and
out
cmp
ficoml
stos
push
pop
mov
push
cmpsl
gs
xchg
test
add
inc
mov
pop
adc
add
dec
pop
mov
jnp
insb
mov
mov
jle
jbe
mov
stos
out
iret
xor
cmpsb
add
ret
jmp
adc
inc
jns
xchg
mov
dec
test
mov
addr16
iret
mov
xchg
sbb
sbb
pop
les
push
ja
jmp
shlb
aaa
push
int3
dec
mov
and
cmp
mov
xchg
and
xor
push
adc
pop
lock
fwait
jb
movsl
adc
dec
cmpsb
outsl
dec
icebp
sbb
int
or
cmp
mov
fisubl
mov
mov
mov
mov
push
dec
sbb
sub
add
fisttpll
cmp
pop
push
ss
lahf
stos
sbb
loop
outsb
xchg
mov
push
adc
out
sub
nop
out
and
fdivrs
push
push
add
xchg
hlt
jbe
mov
or
mov
test
push
fisttps
out
es
pop
fsubs
sbb
mov
fcomp
mov
out
adc
adc
insb
xchg
inc
cmp
roll
repz
mov
dec
xchg
scas
dec
pop
and
fldenv
xchg
leave
lods
xchg
inc
insl
out
cmc
int
lods
icebp
rclb
ficoms
lock
inc
leave
inc
pop
mov
mov
fwait
jmp
dec
test
in
push
lcall
cmp
ret
jo
add
lock
test
sbb
lcall
orb
std
lods
ftst
jo
jle
sar
inc
xchg
cmp
out
xor
lds
push
jle
jb
push
jg
out
mov
js
je
push
jnp
xchg
mov
pusha
stos
inc
inc
mov
pushl
mov
xchg
sahf
cmc
imul
jle
inc
lcall
push
add
mov
add
bound
xchg
cmpsb
sbb
mov
aaa
roll
adc
dec
and
test
imul
cs
ljmp
dec
mov
xlat
loop
and
push
and
rcl
fidivrs
add
inc
jnp
fwait
cwtl
jb,pt
adc
dec
and
dec
xchg
cmp
into
iret
fdivrl
jae
adc
adc
mov
lret
ss
sbb
cwtl
cs
bound
push
mov
add
xlat
roll
jecxz
clc
outsb
inc
xor
ja
and
add
sbb
jp
div
and
mov
xchg
aad
insl
movsb
add
cmpsb
lods
jae
and
fdivrp
insl
mov
jne
push
adc
push
data16
xor
xchg
fmul
lret
push
add
cmp
adcl
call
mov
xchg
mov
fsubr
cmp
inc
pop
push
dec
arpl
imul
mov
lahf
loopne
test
or
bound
pop
pop
fs
cwtl
or
adc
mov
add
aad
pushl
lea
and
mov
addr16
scas
int3
jp
enter
imul
imul
mov
test
and
mov
out
pop
cmpl
xor
push
js
nop
sub
sarl
adc
adc
cmp
adc
lods
cmp
sub
ljmp
gs
adc
cltd
insl
jle
mov
pop
or
hlt
int
test
test
in
repz
les
mov
out
jmp
dec
inc
pop
stos
ljmp
popf
cmpsl
movsb
mov
sub
cmc
push
pop
mov
arpl
sub
and
xchg
popf
push
push
adc
in
mov
call
mov
pusha
sbb
ds
jno
push
add
sub
mov
shll
push
pop
sub
mov
sbb
pop
cwtl
sahf
jno
cmpsl
cmp
imul
mov
xor
test
mov
popa
xchg
lahf
rorb
fists
das
cmpsb
mov
addl
jle
cld
in
jns
add
cli
loopne
cs
adc
pop
mov
out
stos
jecxz
cs
je
rcl
sbb
pop
jno
and
aam
sbb
mov
shll
xchg
gs
fld
mov
pop
jge
andl
iret
mov
xchg
pop
andl
sbb
das
cmc
mov
nop
dec
aaa
pop
push
scas
mov
xchg
jbe
pop
je
movsl
sbb
lods
nop
xchg
mov
jno
mov
jno
sbb
add
cltd
pop
mov
and
jecxz
les
mov
mov
test
call
int3
fldl
push
sub
sub
mov
hlt
jge
movsl
sub
inc
push
xor
xlat
or
add
lahf
add
adc
lds
or
jo
lcall
mov
or
inc
push
loop
dec
movsl
stos
dec
popf
icebp
outsb
pop
repnz
xor
ret
adc
dec
cmc
out
xorl
sbbb
add
outsb
je
mov
fidivrs
add
and
inc
dec
andb
mov
mov
push
jns
xchg
mov
mov
imulb
xor
daa
mov
dec
cmpsb
push
xchg
cmp
sub
iret
sbb
xor
test
es
pop
cld
shrb
jp
sub
add
cmp
fs
xchg
hlt
sub
add
jg
pop
mov
iret
aas
mov
mov
dec
xor
jecxz
sarl
scas
pop
xor
sahf
push
in
adcb
mov
mov
jnp
mov
loope
lds
inc
cmc
fwait
mov
ret
sub
sub
std
pop
xor
mov
into
add
sbb
stos
xlat
or
adc
inc
lods
js
mov
fwait
xchg
aaa
push
stos
lods
sbb
jg
and
inc
fdivs
cld
arpl
xor
add
or
mov
xchg
cmp
insb
cmc
cmpsb
xor
dec
xor
sub
adc
dec
push
mov
mov
xchg
xor
and
in
sbb
add
mov
dec
roll
shl
pop
shl
aas
dec
xchg
iret
es
repz
adc
js
mov
sbb
dec
rcr
insb
outsl
or
push
and
cmc
push
arpl
rcrl
inc
negb
xor
adc
into
cmp
pop
fwait
mov
xor
jo
pop
and
xor
pop
inc
dec
push
pop
stos
pop
mov
xlat
les
pusha
xor
sub
into
imul
xchg
cmp
push
push
mov
shr
out
movsb
das
or
sti
outsb
inc
fisttpll
mov
ja
xor
push
movsl
pop
jecxz
clc
adc
cmp
ret
add
fbstp
mov
push
sub
mov
cmp
fwait
jp
insl
cmpsl
push
dec
hlt
xchg
mov
out
fiadds
inc
and
mov
sbb
mov
sbb
add
cmc
loop
sub
and
por
pop
lea
pop
push
gs
mov
std
and
and
fs
dec
leave
mov
jae
push
jae
or
mov
xchg
or
sbb
iret
mov
and
pop
mov
pop
fcompl
es
cmp
add
insl
push
mov
mov
fisttpl
sbb
push
enter
scas
sub
xchg
cmp
push
jns
dec
inc
repz
pop
in
push
imul
or
inc
mov
cmp
add
test
insb
cmpsb
aaa
add
das
test
push
out
jnp
stos
push
jge
mov
and
xchg
push
cltd
push
dec
push
jecxz
ret
bound
sub
cli
adc
or
push
and
es
mov
mov
and
mov
gs
jmp
dec
mov
test
mov
push
mov
cmc
testb
ret
rcrl
in
push
pop
push
add
addb
cld
mov
ljmp
xor
pop
dec
cmp
dec
jno
mov
jnp
inc
push
inc
push
scas
add
jg
dec
cli
mov
cmp
fs
sub
cmc
add
dec
cld
mov
ret
push
inc
lock
popf
jp
mov
jmp
in
icebp
and
cmp
pop
mov
fsubrl
sub
cltd
sbb
int3
lds
inc
out
mov
pop
push
pop
cmp
cs
mov
push
pop
lods
inc
lcall
mov
push
pop
cmp
scas
mov
jo
test
dec
mov
enter
stos
hlt
xor
sbb
mov
into
pop
mov
adc
js
ja
xchg
push
mov
cmpsb
inc
adc
fdivrl
sbb
stc
sbb
mov
sub
nop
lods
bound
stc
sbbl
shr
jp
mov
or
add
push
bound
orb
mov
nop
ret
push
jb
add
add
ja
fisubs
js
cmpsb
das
js
jp
pop
andb
sub
cmp
rolb
xchg
pusha
fldenv
fdivrs
mov
jp
out
loope
sub
cmc
lcall
adc
jno
push
and
dec
out
xor
mov
leave
bound
mov
insl
shl
iret
test
pushf
mov
nop
aam
fsts
dec
cld
push
ja
int
xor
ja
aas
mov
inc
jo
testb
inc
push
frstor
push
ret
daa
pop
sub
xchg
das
mov
inc
fistpl
push
add
les
and
mov
jg
sub
daa
rclb
cmp
cld
sub
jp
ljmp
mov
int
sub
add
rol
push
lock
int
mov
inc
lods
mov
mov
jno
lret
sarl
inc
pop
aam
jg
pop
or
push
push
shr
mov
jmp
jne
jl
jge
xor
xor
pop
out
push
and
repz
test
inc
xchg
outsl
imul
in
sbb
mov
dec
mov
das
stos
xor
fs
jp
test
sarl
lahf
pusha
pop
mov
dec
aam
xchg
bound
filds
mov
jecxz
daa
add
orb
orl
push
mov
sbbl
jmp
mov
and
shl
test
popa
xchg
sti
arpl
and
int
outsb
sbb
scas
mov
dec
loop
scas
mov
mov
mov
pop
lret
inc
mov
ss
pop
inc
push
mov
xor
popa
xor
in
rcll
sbb
lods
negb
mov
lcall
dec
fsub
push
in
sahf
aas
lea
jl
pop
ds
mov
mov
sbb
mov
sbb
mov
mov
mov
cmpsl
inc
out
and
push
push
mov
int
xor
js
icebp
test
clc
sbb
addr16
bound
cmpl
mov
add
cwtl
and
jl
mov
xchg
and
ss
pop
push
push
insl
lds
int3
into
cmp
mov
cs
xchg
lods
inc
push
fisttpl
cs
int
mov
xchg
out
lcall
sub
pop
inc
sbb
fdivrl
stos
dec
hlt
ret
lock
mov
pop
mov
mov
aaa
adc
add
jo
inc
cli
dec
mov
lret
fisubl
ss
cmc
push
shlb
sbbb
call
sub
fbld
in
cmp
insb
gs
lods
and
push
xchg
inc
imul
sub
xchg
fwait
push
das
jl
or
cmpsb
daa
and
jno
test
data16
pop
inc
xor
sbb
jnp
cltd
mov
inc
scas
pushf
push
scas
std
pushf
inc
sbb
aas
pop
add
fisubrs
push
nop
pop
jecxz
or
mov
xchg
aad
in
imul
mov
push
aad
fdiv
cmp
xchg
sub
mov
std
lock
dec
jb
sbb
jmp
das
inc
pop
into
sub
fsubrl
xor
and
and
test
ja
or
repz
icebp
test
xchg
clc
mov
mov
or
stos
outsl
mov
loope
aaa
inc
adc
pminub
sbb
push
pushaw
cmp
mov
and
adc
rorb
xchg
ja
mov
mov
adc
adc
inc
ds
push
shlb
sarl
es
loop
je
jmp
add
repz
or
jno
stos
jecxz
pop
ds
adc
pop
mov
xor
sbb
mov
sbb
adc
adcb
test
xor
and
push
mov
push
rorl
aad
pop
mov
push
sbb
xchg
mov
mov
mov
ljmp
imul
or
fnsave
out
mov
xor
lods
testl
fsubrs
mov
xor
cmp
out
pusha
aam
sbb
mov
test
pop
xchg
cmpsb
jecxz,pn
in
sub
mov
imul
loop
int3
out
out
add
xchg
mov
push
mov
sbb
shlb
mov
mov
mov
lret
add
pop
int
rcll
cmp
leave
push
push
leave
repnz
fnstenv
insb
jne
pop
loop
mov
sbb
cltd
cmp
jmp
insl
sbb
inc
jp
jno
and
pop
dec
std
js
sub
repz
roll
mov
xor
mov
jns
mov
test
cmp
add
push
xchg
daa
adc
popf
lahf
xor
sbb
cltd
cmpsb
pop
aas
xor
mov
xchg
mov
jns
adc
pop
in
pop
loopne
sbb
xor
sbb
xchg
fildl
rolb
xchg
sbb
pusha
pushf
inc
mov
jno
adc
cmp
and
push
dec
jecxz
jnp
inc
pusha
push
lret
and
or
int3
jle
sbb
pop
pop
sarb
cltd
popf
je
repz
xor
lods
clc
or
mov
cs
jg
cmp
sub
mov
mov
sbb
add
cmp
imull
outsl
xor
jmp
outsb
fimuls
cwtl
fisttps
or
sti
add
loopne
std
jg
cwtl
imul
adc
scas
pop
jnp
mov
jnp
jmp
int
mov
mov
rcll
ss
mov
rorl
lea
loope
jae
add
pop
pop
inc
mov
dec
lahf
mov
mov
hlt
dec
jg
in
fwait
scas
xor
scas
cli
jne
push
push
sbb
pushf
mov
inc
ret
xor
div
pop
cmpsl
mov
das
arpl
cmp
lds
in
sbb
ffree
and
rcll
sti
xor
push
and
push
xorb
xor
xchg
mov
aam
dec
push
bound
mov
mov
xor
xor
cmp
inc
or
and
xchg
mov
pop
shlb
jb
outsl
and
stc
adc
sbb
repnz
xor
jb
subb
insb
dec
mov
xor
sub
int3
mov
sbb
ljmp
adc
ja
push
shrb
xchg
cmp
in
add
call
fistpll
adc
pop
mov
in
hlt
xchg
lods
jb
jp
setne
roll
sbb
sub
arpl
dec
nop
cli
lcall
pop
pop
and
les
loop
nop
fidivrl
and
jne
sbb
iret
test
test
inc
imul
repnz
push
fsubp
push
shlb
push
mov
xorb
push
and
mov
or
loope
shll
ficompl
aad
pop
cli
pop
add
inc
pop
sbb
les
push
jbe
mov
ficompl
in
call
cmp
push
mov
out
in
dec
int3
jle
bound
inc
pop
test
xor
cmpsb
dec
xor
aam
jp
dec
jecxz
mov
sbb
pushf
orb
rcl
ja
movsl
in
xchg
clc
pop
sbb
xchg
lea
xchg
in
out
fistpll
sbb
pop
push
add
and
inc
cltd
xor
ds
jb
lods
rol
inc
leave
and
and
xor
jb
fsub
andb
and
pop
sti
in
xor
mov
jp
int
test
lea
and
fnstcw
fbld
lahf
sbb
push
lods
sarl
xchg
cmp
clc
insb
fsub
icebp
test
lds
jmp
pop
es
ss
scas
dec
gs
popf
and
mov
scas
ja
ficompl
jmp
int
lret
pushf
test
xchg
adc
repz
cmp
lods
int3
dec
jnp
adc
pop
add
sti
dec
repz
movsl
outsb
sub
inc
sbb
lret
mov
scas
je
xchg
shlb
inc
xlat
inc
and
cli
outsb
mov
movsb
arpl
test
imul
xor
mov
jg
fsubs
enter
cmpsb
pop
cwtl
ret
or
xor
mov
xor
or
cmp
out
or
lcall
pop
in
hlt
pushl
cmc
fstp
jle
bound
cmp
adc
and
mov
sub
aas
insb
jge
cli
pop
cmp
mov
xchg
sbb
lods
add
adc
mov
inc
mov
ds
lods
repz
mov
bound
mov
pop
sub
cld
mov
cmp
insl
cltd
int3
cs
push
cltd
cmp
ljmp
xor
jno
shll
sbb
lods
xchg
lods
in
inc
dec
stc
adc
pop
jnp
add
push
inc
aas
xlat
jecxz
sbb
push
push
cmp
pop
aam
pop
push
addr16
or
add
add
add
into
xor
mov
sub
cmpsb
jecxz
in
xchg
sbb
repnz
pop
xchg
or
xchg
das
add
push
shrl
xchg
cmc
scas
jmp
inc
mov
push
push
pushf
jmp
or
lea
cmp
dec
addl
clc
pop
xchg
data16
popf
mov
push
and
in
leave
inc
sbb
jg
sbb
jg
sbb
addb
add
sbb
inc
jg
cmp
aaa
mov
ficomps
hlt
sub
in
mov
mov
mov
and
mov
andl
flds
in
add
xor
outsl
push
xchg
popa
mov
rorl
mov
into
jbe
out
sub
outsb
push
loop
mov
jecxz
push
hlt
push
pop
pusha
pushf
push
cmp
xchg
mov
lock
add
imul
cmpsl
pop
inc
sahf
or
dec
stc
jne
push
push
pusha
scas
inc
sbb
loopne
dec
push
inc
dec
dec
les
daa
enter
in
add
jp
test
push
xor
cli
js
sub
or
dec
loopne
sub
mov
clc
add
int3
xchg
cmp
addb
mov
call
xchg
je
rolb
lcall
subb
subb
fnsave
out
and
arpl
adc
mov
lods
repnz
xchg
mov
xchg
movsl
cmpsb
fdiv
in
fidivrl
lds
addr16
stos
out
or
cwtl
sub
fnstenv
dec
lret
inc
add
inc
and
mov
shrw
or
mov
mov
pusha
add
pop
add
adc
or
and
sub
enter
and
xor
push
jae,pn
mov
add
fsincos
jecxz
cmp
pushf
mov
sub
dec
push
cmc
dec
push
movsb
push
outsl
je
add
fisttps
loopne
or
call
mov
or
mov
jecxz
in
or
xchg
cmpsl
cmp
or
inc
mov
mov
xchg
pushf
adc
cmp
sub
sbb
cmp
pop
sub
xor
sub
cmc
dec
ficoms
ds
mov
sbb
fldcw
into
inc
add
dec
repz
nop
cmp
jmp
mov
push
sbb
fwait
sbb
sahf
dec
sti
jb
movsl
mov
enter
cwtl
decl
mov
push
push
aad
or
lret
fcmovne
xor
mov
dec
xchg
xchg
cmp
scas
pop
inc
xchg
pop
xor
xchg
xchg
xor
daa
cltd
push
cmp
dec
jns
lahf
mov
loop
sub
call
pusha
push
mov
fmuls
xor
jle
cmp
or
sbbl
sub
add
add
loop
jg
xlat
das
xchg
dec
mov
insl
dec
stos
test
dec
xor
fstpl
cltd
out
jnp
test
sbb
fldl
iret
movsb
lea
mov
ret
loope
and
fbstp
xchg
push
test
popa
mov
jecxz
and
stos
pop
jp
and
iret
adc
andb
imul
inc
add
adc
sbb
add
fsubs
inc
lret
test
mov
nop
xchg
dec
mov
ss
lahf
out
lea
sub
sahf
add
loope
inc
push
or
das
push
cld
clc
adc
fnstsw
jae
rcr
lds
pop
testb
in
or
pop
test
and
inc
cmp
fldcw
sti
adc
sbb
mov
adc
dec
pop
push
jg
es
sbb
mov
cmp
sahf
jno
sbb
call
or
scas
cmp
enter
xor
outsl
jnp
sbb
cmp
xor
push
or
clc
enter
test
add
pop
test
add
xchg
test
push
pop
dec
sub
xor
fmuls
mov
shlb
loopne
mov
cli
cli
stos
pop
leave
add
call
sbb
rolb
xchg
jns
movsb
inc
jo
sub
fidivrl
xor
pop
addr16
jg
test
ficompl
test
mov
addb
in
pop
dec
cmc
daa
pop
les
add
jbe
dec
leave
jge
lea
inc
aad
ljmp
outsb
push
daa
loopne
sahf
or
lcall
ljmp
cmp
ds
movsb
iret
bound
jmp
pop
push
xor
out
add
mov
in
fiaddl
xchg
sub
outsl
adc
movsl
shrb
adcb
pushf
test
ret
push
sbb
loope
mov
pop
lret
xchg
cmpsl
fs
cli
out
enter
mov
andl
dec
or
mov
pushl
adc
push
sub
ss
and
xchg
filds
addr16
push
push
mov
cmp
stos
cwtl
push
loopne
neg
repz
inc
arpl
int3
or
dec
adc
pop
lods
in
adc
mov
mov
js
rorl
adc
mov
pop
in
pushf
sbb
sti
and
add
jge
rclb
inc
dec
pop
mov
leave
cwtl
lret
movsl
inc
aaa
cmp
sahf
inc
mov
jecxz
inc
sub
ja
mov
ss
xchg
pop
cmp
fs
loope
mov
jp
fsts
sarb
adc
push
lret
popa
sub
ret
adc
xchg
cmp
test
cmpsb
test
or
cmp
pop
psrld
popl
pop
inc
int
dec
pop
mov
or
test
mov
sti
ret
push
mov
jg
xor
jnp
inc
mov
mov
rcr
jg
pop
insl
insb
add
add
bound
stc
out
mov
sbb
cmpsb
pusha
add
mov
add
scas
sarb
xor
ljmp
outsl
cltd
push
add
rolb
pop
jae
cmp
inc
in
mov
sbb
test
pop
inc
sbb
mov
mov
dec
sti
sub
imul
inc
mov
rcr
dec
lds
addr16
imul
push
ffree
or
pop
out
xchg
mov
jmp
or
cmpsl
mov
mov
das
push
ret
add
add
dec
jno
bound
add
sbb
pushf
inc
mov
lret
inc
sti
ljmp
mov
jbe
fwait
xor
mov
mov
jns
pop
sarl
and
add
ljmp
xor
adc
push
sbb
inc
ds
cmp
pop
push
xor
pop
stos
xchg
add
lods
push
inc
jge
xchg
les
ja
sbb
mov
jecxz
xchg
lcall
pop
mov
pusha
dec
jbe
push
and
dec
dec
jge
and
cs
cmpsl
pop
das
js
mov
pop
bound
add
mov
xor
cmp
mov
xchg
lock
inc
mov
mov
sbb
or
loop
mov
cmp
cmp
lock
leave
popa
int3
out
cmp
dec
xchg
lods
shr
jae
pop
stc
cli
cmpsb
lahf
push
jg
test
movsl
jne
or
stc
inc
mov
push
jmp
fmull
sub
arpl
push
cmp
les
loope
adc
dec
and
xlat
pop
inc
mov
outsl
in
dec
sarl
cltd
pop
push
inc
popf
mov
jge
inc
shrb
xchg
lock
inc
xor
pop
inc
leave
inc
popf
jns
mov
roll
stc
in
mov
or
cwtl
mov
pop
bswap
pop
jbe
in
fsubrs
xchg
and
into
cmp
loope
lods
rorb
lahf
adc
push
in
mov
lcall
popf
or
mov
icebp
xchg
jl
ljmp
cmp
inc
jb
mov
pop
sti
pop
ret
jae
adc
test
pop
ds
ret
cld
ja
ljmp
jo
push
mov
iret
jecxz
dec
in
push
shl
jae
push
aam
lret
pop
scas
ljmp
pop
cmp
dec
jb
fnstenv
icebp
sbb
fwait
xchg
loope
sbb
xchg
pop
cmp
adc
xchg
scas
imul
mov
test
mov
xor
lcall
jnp
adc
or
int3
xchg
gs
mov
mov
jbe
pop
jae
nop
aas
push
test
fucomip
push
cmp
popa
lods
or
jp
jae
ret
adc
outsl
jge
icebp
mov
out
sbb
push
xor
mov
jg
loope
inc
js
sub
dec
sar
and
pop
inc
lds
jne
inc
mov
cwtl
jp
outsb
les
stos
cli
jl
xchg
mov
push
jne
pushf
dec
or
mov
dec
add
jne
stos
ss
push
push
xor
cld
ficoms
test
leave
mov
jecxz
sahf
or
sub
mov
pop
imul
mov
cmp
aam
movsb
enter
pop
sub
or
and
mov
movsl
daa
xorb
ds
mov
repz
lds
test
push
popf
inc
and
dec
add
outsl
and
fmull
xchg
movsl
xchg
mov
jl
pop
fstpt
shrl
lds
lret
push
pusha
leave
mov
test
test
xchg
adc
int3
mov
and
jbe
repnz
adc
ret
xlat
imull
xchg
stos
roll
jle
xchg
gs
pop
sti
fisttps
and
cmp
inc
mov
aas
out
cltd
lret
test
xchg
or
insb
faddl
jnp
lret
cmp
or
or
popf
mov
mov
pop
sub
mov
out
and
xor
test
jmp
pop
fstpt
cmp
adc
iret
in
adc
loopne
mov
mov
sarl
fcoms
cmp
jnp
leave
popa
dec
nop
ljmp
fiadds
outsl
mov
repz
aas
push
mov
sti
cmp
je
dec
test
popf
insb
mov
orb
sbb
rcrb
mov
pop
cmp
and
cmp
icebp
pop
fcomps
fucomip
and
add
jae
cltd
jns
dec
push
fistpl
xorl
mov
adc
call
sub
lret
and
dec
stos
cmp
popf
movsb
fcompl
push
pop
repnz
adc
pop
mov
fwait
inc
loopne
push
inc
icebp
jg
sahf
xor
xchg
push
mov
int3
inc
sbb
out
cmp
call
fimull
jae
aad
adc
loopne
jle
mov
int3
imul
cs
shrl
dec
fsubr
inc
test
xchg
stos
scas
aam
enter
pop
rorb
adc
sub
cli
xor
push
js
mov
subb
push
shrl
xchg
je
cmp
and
leave
add
push
mov
mov
popa
xchg
adc
je
xor
xor
je
pusha
push
inc
int3
xor
and
sbb
jle
stc
lods
aad
jno
xchg
ret
adc
inc
jae
pop
sahf
in
dec
stos
shlb
mov
pop
sahf
shlb
jge
pop
dec
and
fld
out
sbb
sahf
divl
out
or
sti
stc
lods
mov
mov
lret
push
cltd
add
mov
lds
arpl
fcmovne
push
xchg
shr
sub
push
sahf
cld
jg
lcall
popf
sti
mov
cltd
ret
adc
cli
mov
inc
test
and
mov
test
ret
push
lret
adcl
and
mov
sub
mov
push
call
test
mov
insb
mov
cmp
je
rcll
jae
pop
mov
mul
aas
xor
pop
call
mov
icebp
cmpsb
and
out
dec
dec
iret
pop
cwtl
pop
xor
or
mov
cmc
pop
fistpll
push
jo
inc
push
mov
std
xchg
mov
mov
mov
cmp
add
mov
sbb
cmc
sub
fcoms
inc
jp
or
ret
jp
pop
mov
and
mov
xchg
jb
pusha
and
add
les
stc
lcall
push
pop
mov
fcoms
cld
mov
sbb
cmpsl
adc
mov
shlb
test
mov
sbb
push
fcomip
pop
inc
xlat
mov
pop
outsb
jle
aam
add
fildl
ficoml
sub
push
jo
sbb
or
ss
dec
or
mov
cmp
fstl
aas
sub
je
leave
shr
ror
sub
loopne
mov
orb
jnp
fimuls
inc
iret
bound
into
push
dec
xchg
divl
jle
pusha
push
or
in
ss
into
std
adc
sbb
and
mov
arpl
test
adc
pop
cmp
mov
je
aad
repz
out
sbbl
mov
shrl
xchg
shll
ret
push
push
jbe
dec
inc
jp
ljmp
dec
iret
xor
fwait
xorb
lods
jg
lret
jl
mov
imul
xor
sub
arpl
nop
out
roll
rorl
subl
fiaddl
inc
mov
push
das
faddl
pop
cli
shl
pop
sub
shll
cwtl
adc
push
sbb
test
stos
or
sub
into
push
pop
fadds
std
bound
jle
mov
in
loope
push
mov
stc
inc
sbb
popf
in
daa
loopne
outsb
scas
mov
test
bound
mov
mov
cltd
sbb
push
imull
out
test
int3
fs
test
or
shlb
push
jp
in
and
add
decb
mov
call
mov
sbb
fimuls
mov
pop
jle
adc
in
pop
lea
adc
test
xchg
aas
dec
out
and
int
inc
stos
push
gs
sbb
push
mov
ljmp
dec
or
dec
fnstsw
add
and
cmp
pop
xchg
and
push
stc
test
mov
mov
xchg
sub
or
sbb
shr
xchg
cli
aas
sarl
rcll
cmpsl
fdiv
add
pop
xor
mov
clc
in
add
xchg
add
inc
dec
fwait
gs
mov
jb
xor
into
in
sbb
ss
cmpsl
out
push
aam
mov
xchg
dec
out
jo
sub
mov
mov
gs
push
gs
add
loope
sub
jne
stos
add
inc
add
cmp
sbb
or
lods
stc
sub
data16
pop
ficoms
cli
cs
inc
fdiv
cmp
fisttps
inc
xor
jns
jge
aam
fwait
dec
mov
ss
stos
cld
mov
rolb
cltd
xchg
rclb
insb
addr16
pop
push
xor
push
or
sbb
xor
fucom
mov
mov
pop
leavew
icebp
mov
mov
push
xchg
pop
movsl
fstl
movsl
ss
aad
xchg
or
insl
pop
pushf
push
and
push
xor
mov
jo
data16
in
mov
repnz
cltd
or
pop
or
insb
daa
lock
sbb
xchg
jns
cmpsb
ljmp
inc
je
or
mov
es
loopne
adc
add
lret
lds
jne
lock
xchg
push
movsb
xor
fadds
sbb
data16
loope
pop
push
rcrw
out
das
sbb
sbb
mov
fadds
arpl
xchg
mov
aaa
pop
pop
or
pop
xor
mov
pop
xchg
mov
hlt
loopne
xor
pop
add
movsb
popa
push
pop
out
pop
lcall
fidivrs
lods
out
jne
or
xor
adcb
inc
lds
mov
mov
mov
push
xor
cmp
lods
loope
sbb
sbb
mov
add
sub
negl
cmp
mov
pop
sub
fidivrs
pushf
dec
mov
or
movsl
push
and
inc
outsl
dec
push
jo
dec
stos
inc
imul
popf
icebp
dec
hlt
cmp
sahf
sbb
push
mov
cmpsb
mov
mov
in
push
or
mov
lcall
lcall
xchg
test
push
mov
mov
add
push
ret
and
jp
scas
clc
cmp
add
sbb
jle
lret
or
aad
lods
fmull
lahf
adc
jne
fistpl
cmp
jno
or
ds
fsubrs
call
rcrb
lcall
sti
jle
popf
test
sbb
cltd
fs
sbb
xor
out
test
mull
lret
adc
call
jmp
outsl
leave
sub
clc
cli
imul
iret
inc
or
sti
lahf
jge
xchg
aad
pop
scas
mov
push
movsb
mov
and
jge
push
daa
or
sti
sbb
testb
cmp
cli
xchg
adc
mov
push
xchg
push
push
inc
push
insl
cmp
int
pop
ja
ja
mov
mov
cmc
sbbb
xor
mov
inc
jb
lret
or
pop
inc
pushf
adc
lock
jbe
les
jo
push
nop
cmp
je
sub
sbb
arpl
stc
aam
ljmp
imul
cmp
bound
bound
or
test
adcb
sub
gs
lret
adc
sarb
repz
cs
decb
cltd
neg
mov
icebp
jl
push
adc
mov
pop
ret
imul
jle
cli
int
pushf
cmpsb
loop
and
push
movsl
sub
mov
incb
pop
jp
sbbl
fistps
popw
shrl
loope
sti
sub
cmp
gs
push
insl
sarb
pop
in
mov
fdivs
shlb
jns
call
push
xchg
inc
add
dec
lods
inc
clc
adc
stos
out
xchg
shlb
cmp
jnp
in
mov
arpl
loopne
jo
mov
cmp
lds
out
xchg
xchg
incb
repz
adc
ss
jo
mov
popa
mov
enter
imul
and
adc
int3
bound
scas
test
scas
xchg
les
ljmp
push
jae
int3
cmp
lcall
cltd
in
xlat
and
pop
hlt
adc
cmp
pop
xlat
clc
sahf
jl
lret
lods
add
pop
mov
push
jmp
mov
js,pn
scas
mov
push
mov
mov
repnz
and
inc
inc
and
cmp
leave
ljmp
cmpsl
sbb
in
xor
cmpsb
stos
pushf
jecxz
inc
jo
lds
das
add
imul
in
push
ds
stos
inc
ficomps
cmpsb
push
rol
push
dec
lahf
push
aaa
inc
jnp
cmc
add
adc
fdivrs
int
jno
std
xor
or
and
ret
das
std
loop
ret
pop
xchg
inc
dec
out
cmp
mov
inc
ljmp
xchg
dec
cmp
lds
movsb
pushl
and
xlat
test
sub
je
test
add
movsl
mov
push
js
test
aas
out
xchg
xor
call
stos
jbe
push
mov
push
push
and
push
imul
shl
cmp
jge
pop
mov
mov
ret
sub
aas
or
cmp
addr16
or
adc
into
imul
push
cmpsl
shrb
lock
in
aas
sub
push
mov
shlb
sahf
push
jecxz
jnp
faddl
sub
cmp
mov
add
jecxz
loope
xlat
pop
adc
cmc
cltd
aad
out
les
cmpsl
dec
fwait
movsb
loop
fisubl
test
daa
out
pop
insb
cli
sbb
out
pop
jp
das
adc
mov
adc
mov
popf
jge
xchg
pop
mov
in
and
test
shr
or
clc
fildll
out
ja
in
aas
xor
into
fdivrl
int
cs
repnz
lods
loop
mov
jbe
xor
dec
shl
pop
cmp
mov
stc
and
icebp
fwait
je
into
jo
jnp
les
or
aaa
repz
mov
cmc
stc
imul
xor
bnd
sti
call
mov
fnsetpm(287
cmp
push
les
sub
push
fldln2
ss
inc
cli
frstor
jbe
test
les
popf
or
mov
push
add
cwtl
cli
mov
ljmp
push
scas
int
or
test
sbb
lea
test
pop
cld
aad
int3
push
adc
fiadds
pop
add
cs
xchg
scas
ret
mov
daa
in
scas
inc
push
rcrb
aam
push
push
mov
sahf
lret
gs
add
int
mov
push
shlb
scas
mov
subl
les
fdivs
push
cmp
insl
sub
imul
push
cltd
mov
movsb
int
les
xchg
pop
mov
mov
dec
int3
sbb
and
call
mov
loop
xchg
xchg
dec
xchg
cs
adc
jae
mov
xlat
dec
icebp
fs
add
cld
or
fidivrl
pop
popf
fsubl
mov
xchg
dec
dec
popa
inc
mov
jbe
mov
pop
cmp
popf
cmp
jg
andl
inc
mov
push
xchg
cwtl
rcrl
sahf
cmc
inc
jo
cli
int
push
adc
or
out
lcall
enter
sbb
mov
fdivs
loope
aad
inc
test
movsl
rorl
cli
mov
sbbb
nop
insl
nop
xchg
outsb
arpl
add
xor
in
lret
sub
or
mov
xchg
out
das
cmp
add
cwtl
jb
fxch
scas
scas
push
hlt
jns
into
and
stos
test
jp
bound
stos
push
lods
push
xchg
cmpsb
add
js
inc
data16
out
imul
ljmp
adc
loop
mov
mov
pop
movsl
xor
arpl
xchg
js
xchg
sbb
mov
dec
sub
movsb
mov
mov
xorl
imul
js
ss
push
shl
gs
sbb
and
mov
in
frstor
inc
repnz
jge
in
rolb
ljmp
push
je
cmp
sbb
incb
or
mov
sbb
js
pop
ret
adc
enter
incb
idivb
push
and
insb
cwtl
add
sub
mov
pop
iret
ds
test
cmovns
ss
mov
movsb
jbe
es
popa
insl
and
push
jmp
and
ret
lods
push
repnz
adc
fidivl
pop
in
xchg
mov
mov
loopne
test
cmp
jbe
cmp
and
in
add
out
dec
push
imul
pop
movsb
adc
adc
nop
xor
lock
lret
cmp
cmpsb
xor
xchg
cld
sub
adc
inc
push
xchg
sbbb
push
mov
decb
cmpsb
jb
iret
mov
mov
stc
xchg
out
sub
adc
fnstenv
dec
mov
clc
add
insb
sub
xchg
dec
cld
inc
and
test
movsl
sbbl
ja
dec
ret
add
pop
and
adc
jb
jo
aas
mov
shll
xchg
daa
les
ror
icebp
or
negb
mov
mov
into
inc
arpl
pusha
lods
mov
sbb
daa
int3
fs
icebp
and
lahf
cwtl
pushf
pop
jno
sub
jp
adc
add
ss
fimull
out
xchg
or
into
cmp
int3
pop
and
push
js
stc
cmp
mov
mov
test
mov
dec
int3
sub
out
pop
sbb
aad
hlt
pop
xor
sbb
adc
or
sbb
xor
jl
test
sub
ljmp
inc
in
loopne
xchg
add
ja
mov
mov
inc
add
push
cmp
jle
mov
lahf
insb
adc
xchg
xchg
mov
fisubrs
and
rcrl
in
enter
mov
lea
xor
sahf
negb
or
push
or
pop
or
int
dec
push
cmp
mov
cli
or
mov
jmp
sahf
lds
in
cmp
lea
outsb
mov
xor
xor
out
fiaddl
cmp
cli
mov
jge
outsl
mov
xchg
pop
adc
pop
xchg
pop
inc
dec
sub
xor
out
scas
fdivs
aaa
add
mov
cwtl
cmp
outsb
xor
and
stos
loope
rcr
mov
push
jae
dec
pop
sub
and
daa
pop
pusha
cmpsl
ret
push
and
aas
fdivl
es
in
test
push
les
mov
push
lahf
cmpsl
pop
jecxz
ds
das
and
pop
jle
repz
sbb
sbb
mov
bound
clc
push
xor
fwait
push
jmp
test
lahf
add
adc
aad
mov
lcall
push
lret
dec
push
aas
dec
or
push
mov
ror
mov
cmp
dec
push
mov
pushf
scas
pushf
repnz
in
adc
xor
in
inc
sub
dec
test
outsl
sbb
sbb
mov
loope
dec
mov
cmp
cs
shll
xor
rorl
xchg
addr16
pop
js
rorb
cmc
inc
pop
or
sbb
push
sub
in
mov
sub
push
jae
lds
mov
push
fistpl
mov
push
jnp
dec
push
pop
stc
insl
ret
in
cmp
mov
jecxz
push
fdivrs
outsb
test
sbb
sahf
adc
ljmp
cmc
shr
movsb
add
or
cmp
pop
xor
mull
data16
push
pushl
inc
stos
cmp
adc
xchg
and
and
push
test
jo
push
mov
or
dec
out
fs
lcall
fwait
mov
test
cmpsb
ret
lret
or
cltd
faddl
stos
adc
jecxz
xor
mov
dec
cmc
out
push
fcom
or
push
cmc
outsb
sbb
addr16
in
roll
jl
orl
imul
add
mov
sbb
in
xor
test
nop
scas
adc
mov
shlb
int3
pop
cmpsb
outsb
sbb
mov
cmp
xchg
data16
cmp
inc
loopne
imul
sti
cmp
jp
xchg
xor
pushf
repnz
lcall
sbb
sub
push
pop
xor
mov
lcall
mov
xchg
dec
xchg
rcl
test
push
rolb
push
pop
cmp
les
inc
lock
cwtl
sbb
sbb
scas
push
scas
loope
push
out
xor
cmp
push
repz
lahf
insb
ss
pop
inc
aaa
sub
mov
clc
out
jbe
js
or
cs
je
dec
or
inc
sahf
dec
jle
pop
xchg
jg
xor
and
in
enter
cmp
ret
pop
les
aam
lret
adc
iret
push
lock
div
nop
je
adc
roll
push
scas
push
lea
pusha
jno
mov
mov
test
adc
je
popa
inc
pop
pop
and
pop
mov
cmp
sti
inc
xor
mov
cmp
iret
fucom
je
or
and
loopne
cmpl
inc
xor
sub
insl
xchg
out
adc
xor
mov
jne
dec
int3
mov
sub
int
xor
cwtl
test
subb
cmpsl
and
xchg
mov
rorb
clc
adc
jge
xor
inc
pushf
sbb
mov
xchg
add
push
rorb
ret
mov
stc
or
pop
cmp
sub
xorb
inc
fstpl
inc
dec
jmp
repnz
addr16
and
add
mov
ds
je
cmpsb
scas
xchg
add
js
jl
daa
pop
dec
and
lret
mov
test
push
test
test
and
js
and
sbb
pop
inc
mov
and
sbb
mov
adc
ds
or
mov
mov
imulb
or
sbb
aas
out
out
sub
lret
xchg
xchg
dec
out
fcompl
js
mov
fstps
inc
insb
movsl
pop
es
cmp
or
out
dec
push
loop
push
into
icebp
out
stos
pop
and
std
push
add
shlb
sbb
mov
ds
jmp
mov
jle
cld
addr16
popa
xor
popa
adc
jnp
adc
ror
es
sbb
outsl
cmp
lret
sbb
or
aas
jnp
hlt
ljmp
xchg
fnstcw
jg
popf
mov
sahf
icebp
mov
pop
iret
insl
das
ja
or
mov
ja
js
lcall
mov
dec
je
out
push
and
cmp
jns
mov
jns
dec
andb
loope
sbb
repz
fs
or
cmpsl
daa
pusha
push
std
orl
ud1
and
push
out
adc
mov
push
scas
cli
or
ds
sub
aam
lods
mov
nop
mov
int3
aad
sub
loope
lds
outsl
cmpsb
pusha
aam
scas
pop
xorl
inc
rcrl
mov
add
sbb
inc
rol
mov
add
and
mov
jle
mov
fidivrs
stc
sub
pop
adc
mov
lods
sub
add
iret
ja
xchg
xor
inc
push
mov
add
fcomps
xchg
cwtl
pop
adc
leave
jle
mov
cmp
sbb
jmp
mov
loope
flds
mov
pop
aaa
xor
dec
adc
pop
fsubl
and
js
dec
lds
out
inc
les
or
inc
fsubs
cs
aam
xor
jge
cmp
ret
cmp
divb
data16
add
loope
je
fistl
popl
lock
mov
imul
gs
fwait
jo
jno
dec
jae
jbe
or
dec
lahf
scas
xor
jb
stos
add
xor
xchg
addb
lret
shlb
xchg
push
shlb
push
adc
or
push
iret
dec
jb
push
scas
lds
sub
add
mov
inc
in
lods
mov
test
cmp
hlt
sub
js
movsl
cmp
fadd
lahf
bound
sahf
stos
cmp
gs
or
cmpsb
out
insb
lret
loope
lods
fidivl
movsb
inc
mov
int
cmc
lret
xor
jb
jb
scas
movsl
push
push
mov
filds
fstps
mov
push
out
loopne
cmp
int
stos
ja
mov
pop
xchg
xchg
pusha
shl
adc
dec
sarl
scas
cld
or
lcall
orl
stc
xchg
sbb
cmpb
nop
mov
mov
add
cmp
cltd
sub
push
and
dec
dec
cli
or
xchg
loop
cli
jle
mov
mov
jle
mov
stos
jno
sbb
out
xor
addr16
hlt
out
add
add
inc
loope
cmp
xchg
push
jns
dec
cmp
icebp
out
xor
add
stc
mov
clc
repnz
xchg
shlb
test
push
mov
aas
mov
ljmp
xchg
fs
xchg
jle
xchg
loop
add
push
xchg
fs
sbbb
pusha
or
and
jecxz
mov
jbe
jmp
and
or
mov
test
pop
fmulp
lea
inc
adc
xorb
push
sbb
lods
aas
pop
daa
ds
xchg
jle
stos
and
pop
stos
loope
popf
das
inc
jno
sbb
jle
add
pop
int3
sbb
xchg
lret
mov
mov
jne
shll
push
jno
mov
push
add
imul
fistl
jb
inc
sbb
cmpsb
arpl
push
inc
inc
je
pop
inc
xchg
xorl
enter
rcll
cmc
adc
sub
push
testb
test
scas
add
lret
lahf
jl
pop
outsb
shll
enter
inc
enter
xor
jl
or
int3
cwtl
xor
xchg
push
arpl
mov
xor
xchg
mov
lods
mov
in
and
xchg
inc
inc
lds
inc
test
add
sbb
inc
test
lcall
jge
inc
test
or
add
pop
or
outsl
xchg
call
rcl
in
cld
or
xchg
clc
push
xchg
call
mov
push
sbb
push
jge
or
scas
jae
cmp
call
insl
push
or
adc
fistpl
pop
popf
mov
xchg
cltd
je
call
sahf
push
dec
push
sti
pop
and
fwait
and
push
nop
jns
jl
mov
sar
insl
sbb
or
cmp
lret
mov
insl
pop
in
repnz
lods
jno
adc
cmpsl
add
rcr
inc
jnp
jg
loope
cmp
dec
jecxz
clc
xchg
stos
and
test
int3
push
jo
leave
mov
test
dec
in
xchg
out
xchg
scas
aam
xchg
mov
lods
mov
push
aas
xchg
inc
call
and
out
inc
jle
lods
mov
jbe
push
cmp
hlt
leave
stos
movl
lret
clc
push
add
scas
xlat
clc
outsb
push
lahf
and
dec
pop
adc
inc
fidivs
sbb
stc
add
xor
repz
push
and
push
popf
push
test
fcoml
push
push
pop
out
add
xchg
rcrl
add
cld
shl
repnz
push
je
cwtl
jg
in
andl
and
pop
mov
mov
mov
imul
rclb
jle
out
mov
sub
push
lock
fistpll
ja
adc
test
outsl
jae
fimull
pop
sub
out
dec
adc
or
mov
push
xor
sub
js
inc
mov
mov
pop
xor
sbb
fwait
or
clc
lcall
xchg
xor
int3
jno
cmp
scas
and
xor
xor
sbb
xchg
sti
into
xor
in
dec
and
cmpsl
push
cmp
inc
xchg
jmp
push
cmp
call
lcall
int
xchg
jno
xlat
push
popf
pop
pushf
std
enter
mov
mov
jg
sahf
cmp
cmp
popa
dec
mov
outsb
or
pop
xchg
lcall
cltd
jge
jne
jne
mov
jp
aas
xchg
test
or
ss
inc
dec
or
ja
sarb
aad
push
jecxz
mov
jmp
mov
xor
mov
push
xchg
mov
jne
or
lret
pop
and
cli
stos
mov
std
das
gs
add
mov
sbb
stos
mov
bound
test
bound
out
mov
ds
add
insl
sbbl
shll
mov
xor
sub
add
decb
cmovae
je
and
mov
sbb
sbb
cltd
int
jno
xchg
int
cmp
hlt
fs
jbe
popa
cmc
mov
ja
jnp
adc
mov
fs
jmp
insl
cmpsl
mov
pop
fmuls
test
cmp
pop
adc
push
adc
jo
test
or
nop
dec
sub
je
out
lcall
rcl
xchg
mov
mov
out
repz
add
add
sti
rcr
lods
roll
leave
fwait
inc
push
lahf
xchg
sbb
scas
mov
jmp
xor
orl
or
dec
cmp
out
push
and
add
ret
xchg
out
sbb
and
ret
mov
and
addl
add
imul
test
and
call
fmull
pop
loope
ds
sbb
push
jo
dec
mov
addl
inc
test
pop
mov
inc
je
jmp
and
mov
es
sub
and
cmpsb
inc
lods
ja
hlt
and
cmp
jns
and
adc
lock
scas
jg
lcall
pop
lahf
dec
or
movsl
jno
sbb
insb
aas
daa
and
repz
ret
push
hlt
fisubl
add
rorl
xchg
outsb
mov
arpl
subl
jp
push
icebp
mov
add
jg
scas
push
adc
fmuls
pop
jle
xor
mov
jmp
sbbb
lahf
xor
bound
push
xchg
in
ficomps
stos
adc
add
or
shlb
pop
dec
or
or
dec
xor
pop
xchg
xor
sbb
into
lcall
sub
hlt
ss
pop
mov
mov
orl
xchg
lock
xchg
or
mov
into
add
sub
mov
ror
std
dec
stc
sahf
mov
mov
dec
out
arpl
or
cmp
in
sbb
fcomps
xor
jbe
test
lods
mov
jge
add
into
pop
add
push
fldl
pop
call
cld
rorl
icebp
dec
enter
mov
out
jecxz
lods
int
fidivrs
aad
aad
sbb
jmp
jno
sub
or
mov
addr16
push
dec
jb
fiadds
and
test
and
stc
xchg
cmp
adc
out
add
addl
adc
scas
xchg
sbb
mov
mov
pushl
inc
xchg
test
xor
aam
push
sbb
mov
lds
cmp
adcb
jnp
jge
dec
inc
jl
in
dec
ret
ja
pop
repnz
out
and
ffreep
sbb
arpl
push
add
nop
out
lahf
jp
mov
pushf
popa
sub
leave
int
hlt
adc
roll
jmp
and
mov
shll
add
adc
shl
cmp
sbb
rcr
pop
jno
push
xor
popf
lds
mov
add
push
aad
mov
pop
ljmp
mov
sbb
sbb
xchg
adc
out
mov
subb
push
jns
xor
fdivr
imul
cmp
clc
cmc
xchg
lods
repnz
js
fucom
push
fisubrs
mov
fstpl
mov
pop
fs
mov
pop
pop
pop
mov
imul
int
or
test
loop
jae
mov
lods
in
addr16
cmc
inc
inc
or
dec
inc
repnz
mov
mov
shll
and
shr
insb
into
stos
ret
pop
push
popa
mov
sarl
sar
test
repnz
imull
scas
add
test
mov
adc
imul
mov
inc
adcb
iret
lock
lods
movsb
adc
ljmp
sub
pop
nop
bound
sub
andl
std
dec
subl
xchg
testl
add
mov
dec
testb
mov
add
sub
mov
sub
inc
lret
cld
negb
adc
mov
dec
jg
add
out
cmp
jno
pusha
lret
aas
lods
add
mov
and
jae
fxch
cld
or
shll
or
jecxz
add
mov
or
cmpsb
pop
js
xchg
loope
loope
ss
push
inc
and
sti
adc
push
sub
aad
inc
addr16
std
dec
adc
ret
out
es
pop
and
mov
in
dec
and
outsb
imul
pop
or
push
daa
mov
cltd
sahf
dec
js
cmp
je
fs
rol
adc
mov
jb
jb
fwait
idivb
test
ja
inc
in
test
outsl
push
xor
push
dec
cmp
out
ret
pop
and
mov
lods
dec
jns
mov
out
cmpb
mov
pop
out
cmp
mov
adc
xor
sub
sub
imul
pop
dec
lods
mov
add
xchg
inc
je
xchg
or
xor
inc
addr16
xchg
dec
inc
xchg
dec
xor
sub
das
add
insl
stos
sub
sbb
cmp
jne
adc
inc
xlat
inc
or
push
mov
dec
mov
arpl
dec
mov
cmp
xchg
mov
stc
push
adc
orl
js
dec
add
iret
dec
sub
aaa
psubusw
dec
xchg
subb
and
push
sti
xchg
cld
xchg
je
or
inc
adc
das
push
lahf
roll
inc
jo
sub
ret
or
psubq
bound
loop
xor
shll
mov
and
inc
mov
adc
inc
dec
add
push
fistpll
add
mov
lret
inc
call
rol
lds
xor
stos
inc
sub
cltd
cmpsl
pop
mov
or
mov
jne
inc
mov
gs
loope
aaa
scas
xchg
icebp
in
icebp
cmpsl
dec
clc
cld
jp
inc
insl
mov
pop
xchg
inc
dec
arpl
push
or
add
test
sahf
and
test
ret
jg
cmp
mov
fcompl
adc
roll
adc
sbb
lret
sar
in
loop
pop
push
out
cmp
js
mov
xchg
sub
imulb
xchg
jbe
xchg
or
mov
pop
add
and
ja
jb
pop
fildl
arpl
push
cmp
imul
adc
cwtl
jl
cwtl
not
sbb
sub
mov
mov
js
and
loopne
sub
das
xor
inc
test
jne
outsb
sahf
ss
push
mov
les
xchg
lahf
pop
and
push
cmpsl
pop
aad
ret
pop
jbe
imul
outsb
mov
push
imul
test
add
je
xchg
fistl
pop
inc
hlt
jo
loop,pn
lds
addr16
xchg
sarb
mov
sbb
or
nop
fdivrs
adc
mov
inc
sarl
xchg
pop
sbb
xchg
shlb
dec
pusha
clc
xor
bound
ljmp
pop
cmp
add
add
add
out
pop
in
xchg
into
leave
mov
cs
xor
mov
sub
xchg
ljmp
pop
pop
sahf
into
jmp
cli
lock
sti
push
inc
and
sbbb
pmullw
sbb
add
int3
mov
inc
movsb
adc
ret
loope
xchg
mov
mov
dec
sbb
mov
iret
lods
mov
rcrl
fistl
mov
jmp
add
sar
loope
iret
mov
xor
pusha
add
push
call
daa
pop
repnz
mov
out
lret
pushf
mov
iret
mov
addl
out
adc
inc
sahf
scas
dec
out
cmp
dec
and
fwait
mov
sbb
shrb
add
jns
dec
movsl
mov
and
loop
js
lock
aaa
add
lds
mov
mov
std
adc
pop
outsb
icebp
push
js
iret
dec
add
or
test
add
add
loopne
lds
repz
pop
mov
lret
out
mov
aas
scas
stos
jecxz
fiadds
mov
icebp
ret
mov
inc
insl
gs
out
into
push
sub
or
sbb
daa
repnz
or
and
or
mov
imulb
test
and
mov
jp
jo
push
cmp
or
out
lds
or
mov
xchg
mov
dec
and
divl
xor
mov
in
repnz
lock
and
mov
sub
daa
mov
dec
or
outsb
xchg
fsubs
in
ja
sub
insl
addr16
inc
lret
pop
dec
sub
add
lods
fstpl
test
int
jecxz
mov
xor
ljmp
insb
stos
xor
jns
mov
ja
jnp
pushf
xchg
cmp
mov
inc
les
imul
mov
stos
in
cli
loop
mov
loope
jl
fsubp
push
fdivrp
adc
push
pop
or
inc
sbb
clc
xchg
push
dec
ds
arpl
adc
pop
push
inc
adc
jle
setns
test
sub
shlb
and
mov
mov
insb
loope
iret
clc
out
and
inc
inc
lcall
jb
inc
aam
jno
push
adc
mov
aad
pusha
mov
adc
lret
loope
dec
sub
xchg
inc
sub
lret
xlat
pop
add
push
jne
aad
mov
jg
adc
push
mov
js
jno
test
scas
idivl
add
call
inc
dec
jge
in
mov
aaa
mov
add
and
fldenv
shrl
pop
stc
lods
xor
inc
mov
test
xor
mov
and
or
cli
addr16
cmp
adc
sbb
add
das
cmpsb
push
push
in
sub
int3
xchg
add
jl
test
arpl
pop
cld
and
mov
inc
mov
mov
cmp
ds
loopne
dec
sub
push
mov
fisttpl
shrl
in
jb
shll
dec
sbb
sub
stc
stos
or
and
aas
js
and
adcb
jbe
dec
test
data16
inc
cmp
dec
lds
pushf
loop
xor
mov
and
pushf
ljmp
jae
popa
stc
out
scas
pop
repnz
sub
and
pop
movsb
in
jg
sbb
or
popf
and
outsl
shlb
sub
mov
cmp
lods
sti
out
mov
test
movsb
leave
fnstenv
mov
sub
jg
jmp
and
test
cmp
sbb
into
dec
iret
movsl
addr16
cs
mov
xor
and
inc
pop
leave
iret
sub
lock
test
popf
ret
push
stos
int3
push
xchg
dec
dec
mov
mov
push
dec
jb
loope
pop
pop
pusha
or
mov
nop
rcll
fcompl
shl
lea
sub
aam
xlat
sub
mov
or
pop
lods
mov
pop
add
push
mov
or
jmp
loopne
lods
push
push
inc
cli
mov
push
mov
push
mov
sub
ljmp
je
fistpll
sbb
push
sahf
sub
shlb
jp
nop
adc
add
mov
pop
cs
lret
or
js
ljmp
mov
push
dec
inc
sub
mov
aas
pop
add
mov
sub
int
stos
mov
in
pop
arpl
mov
hlt
std
xchg
or
dec
jg
ficompl
mov
add
fdivl
stc
and
xchg
ret
scas
int3
lock
add
sub
icebp
clc
add
sub
sub
pop
scas
dec
inc
daa
scas
mov
test
jge
inc
push
into
int
mov
pop
mov
inc
arpl
and
mov
arpl
mov
lcall
rorl
xchg
int3
hlt
add
nop
inc
loopne
xor
jge
xchg
loope
int3
xor
xor
imul
or
scas
enter
test
mov
rcll
add
sahf
jb
out
push
or
scas
arpl
andps
mov
xor
test
xor
jne
xor
call
xlat
push
pop
inc
add
push
test
mov
lret
inc
and
and
fisttps
cmp
movsb
sbb
jmp
outsb
add
int3
cmpsl
in
rclb
xor
cmpsl
xor
sbb
push
and
adc
lods
and
std
insb
out
or
mov
jmp
jle
push
lods
mov
push
sub
mov
jne
cmc
xchg
and
mov
in
sub
jb
xchg
dec
xchg
xchg
in
jns
sub
adc
pop
mov
mov
lret
pop
inc
jg
xchg
and
fadd
inc
movsb
cmp
ljmp
mov
test
mov
or
sub
pop
sarl
sub
fisttpl
adc
jp
into
ljmp
fucom
mov
ds
aad
in
lock
fisubs
pop
mov
jecxz
sbb
jmp
mov
pusha
mov
jns
lods
ljmp
aad
inc
sbb
jmp
ja
adc
stos
lcall
inc
leave
rcll
sbb
ljmp
jmp
adc
das
jno
xchg
push
cmp
shlb
call
inc
pop
out
mov
das
xchg
cmp
mov
ds
imul
jmp
and
shrb
aas
mov
lret
test
cli
popf
out
mov
fsubrl
lock
inc
das
mov
or
ja
dec
inc
inc
leave
dec
bound
xor
mov
fidivrs
idiv
les
xchg
add
cmc
cmp
ds
mov
cmp
mov
cmc
mov
sbb
mov
movsl
test
cld
popa
pop
repz
cs
xor
cmp
sbb
add
mov
push
mov
inc
and
fisttpll
iret
pop
movsb
push
std
outsb
sbb
pop
or
xchg
sub
pop
in
mov
iret
loope
add
gs
dec
push
sbb
mov
stc
and
adc
pop
dec
pop
es
and
add
inc
das
and
call
call
and
or
inc
mov
ss
xchg
popf
inc
and
jg
js
shll
in
push
lahf
cltd
sub
dec
fcoms
ss
and
xchg
mov
xlat
call
daa
push
and
shr
mov
in
in
call
pop
xchg
pop
or
and
inc
cltd
in
icebp
mov
sti
stos
mov
std
jg
sbb
aad
mov
xchg
lret
outsb
inc
xor
mov
mov
in
pop
clc
xor
es
int3
pop
cs
cwtl
enter
shlb
imull
test
mov
sub
xor
xlat
rclb
mov
xchg
int3
cli
test
mov
push
lock
aad
sub
adc
outsb
cli
cmp
mov
or
in
xchg
lods
arpl
mov
jae
fs
or
and
shlb
push
mov
or
cltd
inc
jae
loopne
int3
cmp
into
cmp
sbb
mov
inc
icebp
aam
dec
lds
cmpsl
adc
or
push
repz
jl
insl
test
movups
adc
lret
les
pop
dec
lods
std
push
mov
out
jge
dec
loope
out
arpl
test
pop
xchg
rolb
cli
cmp
cmp
cli
or
icebp
push
lret
stos
jno
xchg
push
frstor
adc
loopne
into
mov
pop
mov
cmp
mov
js
jle
test
out
mov
call
cmp
js
aas
xor
in
popf
andl
inc
pop
mov
xchg
or
dec
sbb
outsl
sbb
push
sbb
test
ror
push
inc
out
xchg
out
xchg
xor
cmp
rorl
jmp
dec
jecxz
pop
popaw
jmp
shlb
out
push
or
inc
stos
adcb
adc
pop
test
inc
das
pop
test
mov
add
push
pop
and
mov
nop
adc
mov
dec
outsl
sbb
scas
cmp
std
aad
jo
pop
sbb
arpl
cltd
xor
and
adc
jbe
test
dec
lahf
adc
insb
xchg
fists
jb
pusha
outsb
in
xor
push
enter
push
or
stos
insl
into
clc
fsts
mov
ja
mov
loopne
bound
xchg
iret
test
cltd
inc
adc
shl
ss
mov
roll
adc
sbb
push
sub
mov
sbb
cld
sub
xchg
scas
pusha
cmpxchg
push
cmp
lret
mov
pop
sub
sub
cmc
sbb
push
jne
sbb
jle
xchg
popf
cmpl
lds
add
std
fwait
cmpl
push
data16
inc
lret
xchg
shll
clc
decb
rcrb
nop
mov
les
shlb
sbb
leave
addr16
dec
movl
lret
and
mov
lods
dec
xchg
jl
and
ret
push
hlt
jp
leave
jmp
stos
cmc
mov
lock
stos
pusha
mov
ja
add
cwtl
leave
popf
xchg
stos
and
aad
mov
rcrb
fbld
cmp
mov
jle
inc
or
push
and
mov
flds
cmp
mov
cwtl
insb
dec
sbb
jne
inc
cmp
push
mov
push
js
aam
inc
lea
sub
sbb
xchg
repz
ret
gs
pop
dec
and
xchg
ret
fwait
bnd
cwtl
ss
ds
dec
sub
lcall
out
test
fdivrs
pop
mov
arpl
mov
loope
aas
mov
sub
lret
sub
jge
bound
pop
push
lret
push
mov
cmpsb
sbb
cmp
sbb
scas
movsb
dec
mov
sahf
repnz
dec
jnp
je
pop
test
sbb
or
int3
xor
xchg
mov
dec
pop
add
cs
jns
sub
cmp
xor
dec
scas
incb
test
repz
cli
lea
pop
nopl
adc
xchg
sub
subl
xchg
scas
adc
loopnew
push
out
nop
lret
dec
out
pop
outsb
into
add
insb
add
push
rclb
cwtl
addr16
mov
mov
inc
mov
xchg
out
mov
insl
addr16
ret
and
xchg
jge
stos
xor
adc
sub
jns
rolb
data16
inc
xor
xchg
pop
push
sbb
pop
mov
xor
iret
mov
or
mov
xchg
lods
push
stc
sarl
and
jno
inc
hlt
insl
mov
dec
loop
mov
xchg
dec
push
inc
jbe
add
jle
lock
lods
lods
mov
mov
mov
inc
or
cmp
test
jno
pop
cmp
xchg
jbe
xor
dec
or
inc
jge
mov
popa
mov
hlt
xor
repnz
push
mov
xchg
or
imul
mov
int3
pushf
dec
rcrb
mov
repz
xor
loop
inc
lahf
mov
mov
ds
add
cmc
xchg
mov
xchg
adc
push
dec
jno
or
and
mov
add
cmp
jb
inc
dec
jnp
int3
andb
xchg
xchg
add
std
sahf
xor
push
mov
add
jns
inc
add
hlt
iret
fbld
dec
push
sbb
sub
sti
adc
add
lea
add
adcl
aas
or
jl
and
js
push
daa
js
dec
rcl
xor
cmp
hlt
aam
dec
jmp
pop
and
cmpsl
rcrl
aaa
sub
lds
xor
lcall
mov
pop
mov
push
xor
inc
pop
mov
in
aaa
out
repnz
andl
mov
mov
repnz
inc
lods
lds
mov
and
mov
hlt
test
ja
into
jg
scas
fs
sub
je
and
push
sub
int
and
mov
cmp
sti
ret
jg
stc
jns
dec
cwtl
lret
jle
loope
mov
dec
xlat
fwait
pop
xchg
and
lods
lret
xchg
cmpsb
mov
std
ja
dec
call
lahf
rcll
push
cmc
jnp
adc
and
mov
adc
sub
stos
sbb
call
in
push
mov
je
ljmp
sar
inc
xchg
hlt
mov
hlt
add
jge
lds
dec
cmc
aaa
loope
push
gs
or
aam
fimuls
dec
andnps
add
test
lods
fisubrl
cmc
pop
mov
test
loop
add
lock
dec
sbb
cmovge
je
push
xchg
popa
xchg
and
cmpsl
aam
push
ret
arpl
cmp
out
out
xor
sub
xchg
jae
icebp
xchg
aas
orl
push
inc
fdiv
dec
jne
mov
push
push
leave
negb
mov
pop
mov
mov
add
lods
or
mov
outsb
out
adc
lret
je
or
rorb
jno
and
jo
lock
cs
shr
pushf
lods
mov
loopne
cwtl
adc
and
cmp
iret
add
clc
loope
push
pop
aaa
pop
mov
pushf
loop
and
pop
leave
repz
sub
sub
dec
paddd
lcall
cltd
mov
insb
int
sahf
pop
std
push
pushf
mov
scas
decb
in
sbb
fwait
shll
jecxz
mov
pusha
sti
mov
adcb
jno
adc
pop
adc
das
mov
sbb
cmp
cmp
test
mov
cmp
xchg
and
lret
xchg
cmp
jns
les
sub
sbb
cmc
pop
imul
dec
les
mov
mov
inc
cmp
mov
js
xor
sub
roll
mov
sub
cmp
mov
jp
into
shrb
and
and
pop
daa
js
mov
imul
add
add
pop
xor
outsb
stos
dec
hlt
out
or
fcomps
pop
sub
ds
ja
sbbl
pop
jl
cmp
jle
and
loop
jno
stos
mov
out
pusha
nop
pusha
arpl
mov
outsl
sbb
pop
notl
shr
adc
mov
ds
push
push
lds
pop
fiaddl
fs
pop
pop
pop
jno
andl
push
add
xor
adc
stos
iret
mov
or
cmp
je
hlt
and
fucomi
push
add
lret
jecxz
pop
sub
lock
std
inc
mov
sub
mov
inc
mov
test
pop
fsubl
jne
or
pop
mov
fsubl
mov
fcomip
aam
mov
pop
mov
sbb
push
xchg
lret
dec
sbb
repz
cmc
sarl
inc
push
or
dec
pop
shll
lahf
or
outsl
cmc
xchg
loope
je
movsl
loope
adc
jb
ret
rorb
jns
xor
sbb
repnz
repnz
test
xor
jg
out
inc
cmp
repz
mov
xchg
out
inc
je
sahf
jnp
mov
and
aaa
or
movhps
nop
out
lods
bound
adc
dec
shl
ja
es
xchg
add
in
xlat
pop
jmp
shll
jge
lock
pop
testb
sbb
data16
mov
imul
stc
imul
rcrl
and
clc
jecxz
fcmovb
lret
mov
je
test
stc
ret
in
movsbl
adcl
xchg
adc
xor
xchg
sub
jecxz
out
pop
push
lret
or
insb
cmp
push
adc
mov
arpl
mov
pop
rorl
and
mov
dec
aas
ret
out
in
sub
xor
cmp
and
xchg
jg
mov
test
dec
mov
mov
xor
repnz
jp
cmp
dec
stos
cli
jno
mov
jmp
adcl
mov
mov
cmp
std
fldenv
sub
and
xchg
xchg
and
mov
mov
paddb
dec
test
xchg
lahf
xor
loope
mov
push
mov
iret
sub
sbb
adc
pushf
adc
xor
sbb
jne
movsb
inc
in
daa
stc
jg
push
jno
cs
sub
popa
imul
xchg
pop
fdiv
adc
fimull
cmp
gs
jge
jae
test
lock
and
sub
and
sbb
fbstp
cld
fstl
lret
jnp
mov
fdivs
mov
hlt
jl
or
int3
lods
popf
loope
lock
mov
add
addb
dec
cmp
push
daa
repnz
adc
es
mov
mov
lret
mov
or
cwtl
pop
fnstsw
cmp
mov
or
jmp
ret
add
jmp
add
xchg
mov
or
testb
int3
aaa
lods
inc
pop
inc
pop
xchg
mov
mov
jne
mov
mov
push
fs
icebp
add
das
sub
pop
cs
fstpl
leave
movsl
arpl
pop
pushf
adc
jno
scas
es
cmp
mov
xor
mov
test
pop
add
lock
mov
push
lock
cmp
imull
shrb
xchg
repz
loop
pop
das
jnp
test
inc
pop
test
xchg
mov
push
lea
pop
rcr
leave
insb
sbb
hlt
xor
mov
pusha
mov
sub
inc
scas
imul
push
shrb
stos
ljmp
inc
rolb
lret
fildll
scas
push
cli
push
movsl
and
mov
out
add
pop
jge
flds
outsb
loopne
fnstenv
mov
mov
jnp
cwtl
in
push
stos
subb
push
out
aaa
aas
bound
mov
ss
push
scas
pop
mov
or
cmp
push
iret
fildl
scas
xor
xchg
jle
cmp
or
insb
mov
jle
test
push
call
daa
inc
sbbl
dec
mov
mov
cmc
push
cmpsb
rcl
fwait
rolb
mov
imul
cmp
sahf
jb
dec
icebp
fdiv
sub
xchg
add
cmp
xchg
add
arpl
mov
push
or
xor
repnz
pop
popa
sub
repz
test
cmpsl
loopne
inc
test
lahf
sub
orb
cmpsl
std
cmpsb
stc
mov
pusha
daa
add
fsubs
cmpb
dec
out
insb
or
scas
or
jl
fs
rcr
insl
cmp
rolb
and
call
fldcw
pop
inc
mov
pop
mov
inc
adc
pop
ret
xor
das
sub
sub
push
jbe
adc
sub
push
dec
test
jno
daa
sub
test
inc
lea
adc
add
test
mov
insb
add
adc
shlb
outsl
cmp
sti
mov
mov
cli
xor
lock
jecxz
add
mov
xchg
adc
or
and
sahf
test
mov
inc
adc
push
cmp
push
adc
enter
imul
pop
fs
mov
punpckhbw
es
stos
pop
test
inc
or
pop
adc
xor
adc
mov
mov
daa
push
andb
adc
xchg
adc
sbb
rorl
xorb
les
out
imull
or
pushf
cmp
testb
loope
push
jnp
setge
push
ficompl
mov
cmp
jp
push
daa
out
popf
loopne
hlt
jg
imul
dec
in
int3
outsb
cli
add
fdivl
mov
jecxz
mov
adc
ret
pop
js
outsl
rolb
mov
addr16
loopne
jnp
cmpsb
xchg
into
shll
insl
and
vmwrite
jg
mov
push
in
sahf
fldcw
jnp
notb
pop
xchg
sbb
adcl
jnp
imul
leave
sub
push
xor
fcmovnbe
leave
mov
hlt
aad
push
mov
data16
std
push
aas
rorl
mov
mov
mov
ds
iret
mov
icebp
je
push
push
or
repz
sub
inc
loopne
ror
popf
inc
les
dec
pop
mov
int
scas
mov
shlb
aad
out
pop
nop
push
xchg
xor
popl
out
in
test
pop
xchg
adc
out
outsb
push
xor
and
or
outsb
dec
pop
bt
popa
popf
mov
jo
scas
mov
and
jle
pop
fnsave
add
xor
icebp
insb
mov
jle
sub
ret
popa
rclb
cmp
adcb
mov
push
sbb
push
outsb
pop
or
sub
dec
ja
dec
or
jmp
bswap
pop
mov
inc
int3
stc
out
pop
mov
lock
jno
pop
cmp
sub
lret
leave
shlb
popa
mov
stc
int
ja
popa
popa
lock
ds
jns
cmp
ja
push
push
movsb
inc
cmc
and
xor
add
lahf
notb
rolb
dec
xchg
xchg
idivl
adc
int3
notb
outsl
inc
call
pop
adc
repnz
int
mov
icebp
rorl
jnp
imul
imul
inc
or
jb
out
jne
pop
cltd
pushf
xor
sar
fdivp
push
fidivs
aad
xor
push
or
in
adc
push
mov
mov
iret
pop
test
pop
and
sarb
xchg
or
mov
sarb
je
test
xchg
jl
or
movsb
repz
inc
pop
in
and
inc
in
enter
push
mov
lret
cmc
shll
out
xchg
fwait
and
mov
rcll
les
pop
imul
pop
push
les
repz
cli
mov
out
inc
add
es
add
enter
icebp
and
mov
mov
mov
orb
test
movsb
jg
outsl
push
sahf
scas
push
cmpsb
mov
outsl
xchg
int
out
pop
aas
cmp
xor
movsb
cmp
cmp
or
adc
cmpl
pop
mov
fsts
stos
mov
xlat
mov
hlt
push
sarb
dec
xchg
cmp
cmp
mov
inc
ds
xchg
push
call
insb
jp
scas
xchg
inc
xor
push
ret
xchg
scas
pop
std
ss
or
sti
lcall
in
sub
mov
movsb
dec
jl
push
lods
jno
shll
add
cmp
aas
sbb
add
sub
mov
fwait
arpl
jp
fiadds
frstor
cmc
popf
or
jne
int3
pop
xor
xchg
into
inc
in
dec
push
push
xchg
lods
mov
jecxz
lcall
pushf
loope
repnz
pop
push
cmp
loop
cmc
xor
aad
js
pop
lret
or
pop
and
fdivr
addb
inc
dec
nop
fwait
xchg
sahf
iret
cltd
and
test
outsl
cs
bound
pop
ja
and
js
pop
scas
fsubr
out
xlat
lret
das
nop
xor
aad
inc
lods
inc
add
das
xor
ftst
sub
mov
adc
mov
pop
push
ret
mov
cltd
or
ja
pop
jmp
cli
mov
sub
aad
stos
ss
sbb
mov
js
jnp
lock
and
outsb
repz
insb
loope
inc
leave
and
mov
jp
mov
dec
mov
fwait
int
fucom
push
cmp
fcoms
idivl
xchg
lret
mov
cwtl
fwait
jg
sbb
mov
add
xlat
add
out
popa
std
jnp
arpl
pop
mov
das
lods
insl
testb
mov
inc
mov
jae
dec
fstpt
mov
adcl
sbb
ds
mov
insb
jle
jmp
loope
jbe
sbb
inc
and
sysenter
pop
or
and
scas
adc
enter
mov
popf
ljmp
xor
mov
or
dec
dec
mov
dec
xchg
stc
or
jae
push
aas
dec
jno
std
aaa
cld
jecxz
inc
stos
cmpsl
shll
cmp
dec
lock
pop
inc
loope
stos
stos
das
mov
das
int3
pushf
test
cmp
es
js
mov
jp
cmpsl
jno
mov
arpl
mov
xchg
mov
ficomps
cmp
movsb
lods
mov
mov
dec
xchg
sbb
and
lea
mov
popf
push
std
es
lahf
adc
jbe
xchg
pop
add
mov
push
imulb
repnz
sub
mov
sub
ds
xor
push
jle
repz
mov
adc
add
in
sbb
pop
fsubrs
in
add
loope
sbb
mov
ja
stos
sub
repnz
sbb
gs
cltd
or
push
dec
pop
cmc
decl
das
inc
adc
fistpll
pushf
and
sbbb
mov
dec
test
stos
mov
push
cld
jecxz
scas
fidivrs
cwtl
xchg
mov
xor
jg
push
pop
mov
lock
loopne
fsin
test
gs
mov
insb
int
sahf
fstpl
mov
pushf
sub
mov
pop
lds
icebp
cld
lea
icebp
mov
cmp
mov
addl
xor
cs
int3
stc
dec
arpl
addr16
mov
addl
add
dec
fildl
jae
stos
and
jnp
iret
rcll
cwtl
fnstenv
dec
imul
inc
jp
lods
insl
sub
jno
fisttps
cwtl
jne
nop
int3
incl
jl
fisttpll
ja
or
jnp
in
cld
clc
push
add
lds
xchg
notl
loop
xchg
and
adc
xor
movsl
orb
and
push
arpl
adc
dec
cmp
jle,pn
out
lret
pop
aaa
lods
xorl
jmp
adc
xor
lret
mov
cld
lea
rcrb
sub
addl
sarl
xor
mov
mov
ljmp
xor
sbb
negl
js
mov
or
daa
jp
je
and
adc
aas
das
inc
xchg
loop
aam
mov
xor
mov
mov
dec
repnz
ljmp
mov
push
push
fmull
xor
jge
or
sbb
ret
mov
push
repnz
fisttps
and
je
ljmp
sbb
sbb
cmc
jp
pop
fwait
imul
jge
xor
loope
lsl
mov
or
test
mov
daa
aaa
jmp
shr
xchg
arpl
xorl
dec
sub
xor
inc
jns
jo
paddsw
cmpb
fnsave
repnz
jno
mov
lcall
test
xor
xchg
mov
sbb
pop
ret
pop
or
stc
in
xor
sarl
adc
stc
or
inc
xlat
jmp
add
jl
test
mov
les
fisttps
ja
mov
mov
add
xchg
es
shrl
xor
add
add
insl
cmp
dec
cmp
adc
jmp
fmull
add
push
and
adc
scas
fstl
in
pop
fucomp
cmp
in
jb
sub
xlat
mov
test
leave
in
pop
mov
mov
cmp
adc
daa
addr16
repz
or
jp
push
insl
pop
outsb
addb
add
enter
lcall
push
enter
lock
or
popf
icebp
pop
test
push
leave
arpl
mov
add
push
movsb
or
add
xrelease
jl
into
jecxz
push
sub
cld
lods
mov
enterw
icebp
sub
fistps
xor
adc
push
push
and
hlt
les
push
lock
loope
fstpl
fdiv
lcall
pop
lea
shrl
lock
scas
push
xchg
sti
push
je
data16
sahf
dec
subb
inc
out
out
inc
mov
notl
rcll
mov
cmpb
loope
cs
movl
add
push
enter
jp
iret
jae
xchg
fs
pop
or
jno
dec
dec
pop
mov
inc
test
in
shll
loope
gs
in
stc
mov
mov
mov
push
cli
cmp
mov
daa
aad
pop
jp
sbb
pusha
dec
mov
repnz
xor
sti
es
dec
daa
mov
push
icebp
in
fs
push
movsl
cmpsb
subl
cld
sbb
psubusb
fstl
add
testw
or
inc
cmpl
shll
mov
aas
hlt
and
sbb
xchg
je
inc
bound
jg
add
sub
das
push
mov
or
push
cmp
adc
dec
adcb
mov
jle
adc
adc
dec
js
or
and
pushf
and
push
test
xchg
test
xor
mov
dec
pop
in
lea
push
pop
addb
or
loop
in
lcall
pop
jnp
inc
inc
out
aas
pop
sbb
cs
mov
cwtl
and
sub
inc
insb
nop
daa
push
lock
lret
inc
test
jge
xorl
arpl
pop
xor
iret
fucomi
xor
sahf
inc
outsb
imul
push
cmp
adc
aaa
out
or
mov
inc
adc
out
inc
in
add
xlat
xor
pop
and
jo
mov
daa
popf
sub
dec
pushf
push
in
stos
xor
xor
mov
fnstcw
pop
sbb
sti
cld
mov
clc
jo
push
icebp
push
or
xchg
inc
stc
lock
dec
lea
inc
lahf
scas
and
cld
mov
push
fadds
sbb
adc
jmp
mov
lds
in
out
les
in
iret
loope
in
adc
push
mov
sahf
jnp
xlat
or
xchg
aad
push
mov
fwait
dec
mov
popf
inc
dec
jp
xchg
and
mov
test
dec
xor
sbb
outsl
cmp
inc
jb
push
bound
jmp
out
xor
lea
mov
aas
movsb
imul
gs
fisttpll
adc
mov
push
fsubrs
adc
jbe
xor
dec
push
nop
sbb
sub
pushf
mov
cltd
fwait
dec
jg
and
lret
mov
cmpsl
test
in
and
sub
rclb
xor
push
fcoms
xor
inc
sub
fdivrp
cmp
push
push
xor
cmpsl
loopne
ljmp
movsb
xor
jnp
push
gs
mov
jbe
inc
pop
pop
jmp
bound
hlt
and
mov
aad
dec
cld
mov
nop
mov
inc
pop
sub
movsb
and
and
call
icebp
push
ss
xchg
iret
sub
adc
xor
in
mov
fst
dec
pop
into
push
and
jnp
nop
aam
jne
xchg
std
jg
sbb
sbb
mov
sbb
dec
shufps
in
sbb
xchg
dec
aaa
pop
dec
sti
mov
fs
mov
icebp
pop
xor
add
sbb
dec
out
jl
int
xor
push
cs
mov
pop
sub
cmc
popf
ret
ja
xchg
lea
sti
add
pusha
imul
or
xlat
pusha
sar
sbb
cmp
lcall
cmovl
daa
adc
cs
notb
xor
imul
push
cmpb
and
cltd
adc
or
xchg
add
loope
cmp
aaa
jmp
out
stos
or
adc
dec
insl
add
mov
sub
js
int
push
clc
ss
push
outsb
dec
lahf
pop
and
sub
adc
mov
cmp
sbb
movb
cmpsb
call
cltd
xor
loop
and
hlt
pop
xor
jg
mov
add
sbb
mov
ss
cmc
cli
lods
push
pop
dec
clc
jl
pop
lahf
xor
jmp
dec
cmc
sbb
xchg
jae
cs
pop
push
push
inc
push
loop
std
jmp
mov
fcoml
mov
xor
imul
add
pop
pop
cmp
jl
scas
or
and
sbb
pop
adc
sahf
mov
xor
jge
pop
cmp
mov
repz
cmp
ficoml
xchg
mov
cmp
mov
add
rorl
popa
popa
loop
scas
xchg
sbb
out
cmpsb
xor
lds
lahf
loope
sti
insl
int3
pop
mov
add
loope
xchg
aam
es
mov
mov
ret
jp
loope
inc
mov
cs
push
adc
loopne
mov
jg
sbb
pusha
scas
out
pop
fdivs
cmp
add
xor
mov
daa
stos
mov
mov
xchg
sbb
test
and
and
fninit
mov
cmp
lcall
mov
add
gs
push
push
lods
mov
and
lods
faddp
aad
clc
jmp
es
fs
xchg
sbb
push
das
inc
pop
sub
cmp
xor
jns
clc
mov
and
mov
daa
in
dec
enter
add
lahf
jae
gs
lret
jbe
or
mov
fidivl
fcoms
mov
scas
scas
mov
and
sbb
aad
ficoms
iret
jno
lret
xchg
and
je
add
dec
push
mov
sbb
fwait
cld
stos
sbb
fs
pop
adc
jg
and
cmp
popa
xchg
dec
pop
andb
je
and
lret
mov
dec
and
ret
stc
xor
pop
jbe
adc
ljmp
sbb
fdivs
shr
inc
ss
mov
mov
mov
lods
cmc
loopne
mov
leave
mov
xlat
addr16
mov
aam
mov
loopne
push
xchg
jle
shl
shlb
pop
xchg
test
xchg
icebp
push
add
or
sahf
or
rolb
mov
pop
cmpl
adc
and
adc
cmp
mov
add
push
cmp
mov
imul
cld
fists
mov
cs
jo
jge
ja
fs
inc
jecxz
mov
clc
pop
jns
mov
sub
dec
sbb
xchg
inc
jbe
jg
mov
add
push
arpl
jle
mov
movsb
jno
cli
bound
int
sti
dec
ljmp
movsl
cmp
adc
jle
mov
ror
es
scas
iret
fildl
test
mov
jnp
es
pop
shrl
pop
sti
pop
jo
out
add
inc
neg
jns
stos
mov
push
rclb
dec
ret
ljmp
sbb
adc
push
xchg
insl
dec
jbe
push
and
test
xchg
imul
push
test
js
and
ss
gs
cltd
xchg
ds
dec
adc
in
js
adc
into
cmp
inc
aam
inc
jns
pushf
push
jae
test
or
or
push
inc
lret
lcall
lods
out
xor
aam
and
imul
in
push
sbb
out
rcl
ljmp
cmp
and
pop
cmp
movsl
adc
mov
rolb
sbb
hlt
inc
movl
jnp
shlb
in
je
inc
out
addr16
push
jge
jns
cwtl
cmp
dec
or
out
sbb
adc
ja
sbb
gs
jns
mov
inc
fmull
int
call
gs
cmp
imull
jl
lods
xchg
sbb
cmp
inc
xor
imul
pop
and
mov
mov
jb
cmp
mov
sbbb
push
ja
or
pop
mov
adc
imul
fisttps
or
ret
cmpsl
inc
lds
jno
aas
jl
lret
lods
or
mov
adc
test
jnp
repz
out
mov
jno
xchg
je
movntq
ficoms
push
out
dec
lret
outsb
cmp
cmpl
mov
fsubs
arpl
lds
pop
mov
sti
data16
cli
cmp
cmp
jb,pt
push
sti
adc
cmp
stos
sbb
add
loop
xor
xchg
and
fmull
in
aas
pop
sbb
push
lahf
lret
nop
pop
pop
bound
jge
aaa
inc
movsb
aad
ja
cltd
or
lods
pusha
sbb
dec
add
ss
inc
or
das
mov
sub
cli
cmp
mov
out
movsb
and
pop
ja
mov
pop
test
aam
cmp
arpl
in
imul
ss
pop
pop
mov
mov
push
pop
das
sbbb
adc
fisubs
jmp
leave
xor
adc
push
lahf
mov
fstp
das
aam
mov
incb
int3
and
jge
or
jns
cs
push
and
fsubl
pop
xchg
mov
call
push
sbb
mov
test
call
sbb
push
decb
es
shlb
aas
mov
xchg
testb
push
pusha
insb
je
or
and
push
sbb
sbb
les
sbb
aas
cmp
push
data16
inc
outsl
rolb
pop
or
pop
push
and
sub
fdivl
lods
xchg
out
jb
xchg
pop
outsl
push
repnz
mov
stos
in
pop
inc
inc
adc
push
pop
mov
mov
ljmp
or
mov
xor
aad
xchg
int
xchg
je
in
subb
cmp
and
push
into
cwtl
lret
sub
push
mov
xchg
arpl
mov
mov
pop
fnstenv
xlat
enter
xchg
sbb
scas
add
pop
sbb
lret
jne
pop
pop
or
push
push
mov
ss
cltd
push
or
scas
jne
imul
pop
sbb
mov
push
push
add
in
sub
add
pusha
imul
mov
dec
iret
cltd
lods
mov
mov
inc
pop
push
stos
lcall
dec
push
jb
movsb
popa
add
mov
lock
negb
push
cwtl
sbb
jle
and
pusha
int3
mov
lahf
jns
popa
or
jno
icebp
jge
jle
mov
cmp
sub
jb
fmull
push
adc
sub
imul
pop
call
cwtl
sbb
and
out
ss
cmp
inc
movsl
jo
add
leave
sbb
mov
shrl
inc
and
addr16
jg
jno
sbb
testl
lcall
add
sub
fnstcw
movsb
fsubrl
rcr
lock
inc
xor
add
push
push
cmp
sbb
std
shrb
stc
loope
es
pop
sub
inc
add
sub
fwait
dec
xchg
aas
and
shlb
push
jecxz
in
push
sub
in
mov
cwtl
insl
add
loope
pop
mov
xor
jo
rcr
cmp
push
xchg
imul
jne
pop
loop
adc
sbb
int3
xchg
xor
stos
out
pop
mov
dec
cli
into
sub
xor
add
bound
loopne
sahf
and
mov
push
insl
add
add
push
rcl
pusha
and
jle
in
push
leave
hlt
and
sub
inc
loopne
mov
and
dec
mov
dec
out
movsl
mov
int3
popf
imul
mov
pop
mov
pusha
jge
lret
mov
xchg
loopne
js
mov
jecxz
jg
push
movb
out
cltd
mov
in
test
pop
ja
stc
loopne
fildll
and
lret
xchg
out
iret
lock
push
inc
imul
jae
fstl
lods
adcb
loopne
jns
pop
pop
mov
icebp
sbb
lahf
pandn
cmc
nop
andl
es
adc
movsl
stc
cld
sti
mov
jo
push
fwait
adc
data16
sub
stos
idiv
clc
imulb
xchg
mov
and
pop
popf
sub
lock
dec
pushf
cwtl
push
ds
inc
xchg
pop
clc
inc
insl
xchg
jbe
iret
es
cmp
ds
insb
push
or
movsb
mov
and
lcall
mov
sub
mov
repnz
std
lahf
lea
into
fldcw
int
movsl
aam
adcl
stos
push
ljmp
or
lods
mov
inc
in
or
divb
jg
sbb
ds
push
dec
int3
roll
mov
imul
sbb
aas
gs
jmp
dec
inc
mov
and
inc
in
jle
dec
xchg
mov
inc
sub
ljmp
sbb
insb
stc
fiaddl
cli
mov
sub
lret
addr16
out
ss
mov
test
int
inc
mov
push
push
dec
and
inc
sbb
inc
cmp
pop
insl
cmp
call
pop
bound
push
or
dec
and
outsl
inc
and
adc
stc
mov
pushf
movl
sti
scas
les
xchg
mov
fildll
mov
in
sbb
jle
dec
sbb
insb
lods
arpl
loopne
sub
test
jg
jb
xchg
out
add
jae
dec
push
imul
adc
pop
inc
sub
xor
dec
aaa
imul
xchg
xchg
iret
push
xchg
popf
cwtl
fmuls
mov
jmp
loopne
xor
enter
add
ja
jge
add
mov
rol
pop
stos
dec
jnp
cmc
loop
inc
lods
jo
mov
stos
ds
cmpsl
or
test
add
cmc
push
dec
add
stos
movsl
not
je
negl
das
stc
imul
test
dec
adc
test
loopne
leave
adcl
adc
fs
clc
sub
xchg
inc
sbb
aas
mov
dec
push
mov
dec
sub
out
xchg
push
popa
xchg
hlt
in
mov
sbb
negl
loop
and
cmp
xor
mov
dec
inc
sarb
push
movsl
fcmovu
jbe
lret
and
cld
movswl
add
loopne
mov
xchg
inc
push
hlt
fisubrs
and
mov
xor
add
mov
loop
or
sarb
push
mov
cwtl
fidivs
ds
mov
aad
and
leave
dec
push
mov
ficoml
ficomps
inc
inc
leave
es
inc
sub
mov
jg
stos
aad
cmp
cmp
dec
jbe
mov
xchg
arpl
cwtl
ret
cmp
int3
jnp
rcl
mov
and
pop
js
and
nop
inc
aaa
adc
pop
or
and
mov
pop
mov
xchg
sub
pusha
cmp
xchg
daa
ss
xorl
mov
mov
push
push
cs
fs
and
inc
mov
pop
std
test
int
or
jne
movsb
shrb
sub
mov
dec
jmp
inc
shr
aad
pop
cli
test
ja
xor
outsb
push
add
jmp
clc
sub
jle
movsl
cmp
mov
mov
fsubrs
fsubrl
arpl
jecxz
shlb
fs
mov
sub
jmp
sub
cmpb
or
ss
mov
push
imul
mov
rol
lods
leave
mov
mov
adc
aam
ret
jne
or
xchg
sbb
push
mull
mov
mov
mov
pop
je
inc
mov
inc
mov
jmp
ja
daa
mov
push
lea
fstps
inc
mov
pushf
jbe
movsl
aad
push
in
sahf
inc
mov
cwtl
jle
mov
push
inc
sub
push
and
in
ret
mov
loop
jecxz
sub
xchg
pop
sub
xchg
mov
cld
pop
enter
loopne
pop
sub
gs
push
jne
daa
or
je
fidivs
xor
push
sbb
cwtl
and
loope
mov
cmp
sub
cmp
outsl
mov
pop
or
jne
dec
mov
das
movsl
cmp
xchg
mov
push
arpl
loop
xchg
mov
cmp
call
out
addr16
das
aam
dec
sub
xchg
scas
in
xchg
incb
add
movsb
or
and
dec
cmp
xor
int3
movsb
fistps
sbb
ret
adc
loopne
mov
cmc
ss
cmp
pop
stos
imul
rolb
jmp
out
and
xchg
mov
insl
in
or
xor
adc
lods
aaa
jne
movsb
or
lock
arpl
mov
sbb
xor
pop
ret
ss
fs
push
je
or
fstpt
movsl
ret
lret
mov
fucomp
sbb
cli
xchg
popf
clc
sub
push
inc
xor
cwtl
mov
fucomi
mulb
sbb
xor
mov
or
mov
push
inc
pop
jbe
jne
pop
and
call
lret
aam
mov
fdiv
insl
mov
lret
lods
and
in
xchg
fdivp
jl
testl
aam
movsl
jno
std
xchg
scas
add
aam
ljmp
mov
ss
xchg
fldl
test
xchg
adc
pop
stc
xor
ss
imul
jl
int3
dec
clc
rcrl
repnz
inc
xchg
popf
nop
cwtl
in
sbb
jne
cltd
jmp
aaa
sub
mov
adc
xor
dec
adc
push
adc
or
mov
push
aad
insl
fcoms
fcoml
adcb
xor
or
and
fs
inc
cltd
std
xor
mov
mov
cmc
add
aad
stc
adc
sbb
testl
mov
lahf
mov
int3
aad
lods
jecxz
add
mov
rcrl
mov
add
adc
xchg
pop
dec
lcall
leave
cmpl
jecxz
jecxz
adc
or
sub
cld
inc
xor
adc
cmc
nop
and
inc
pop
or
xchg
enter
xchg
jbe
pusha
or
sarl
push
push
fnstsw
out
outsl
inc
and
popf
push
out
setae
adc
mov
xchg
clc
clc
mov
pop
sub
arpl
add
cmp
leave
data16
or
add
push
in
adc
cwtl
cmp
out
out
pop
mov
int3
cli
scas
scas
push
sub
push
imul
test
or
sub
je
mov
mov
xchg
mov
fs
lcall
inc
dec
sbb
ds
imul
outsl
sbb
push
xchg
shll
pop
jl
es
mov
lods
out
mov
loopne
dec
add
ss
jae
ljmp
loope
mov
sysenter
sub
or
cwtl
scas
scas
inc
test
insb
inc
and
push
ljmp
push
and
pop
jo
je
sbb
mov
or
ljmp
sbb
mov
bt
imul
push
mov
js
push
cltd
or
rorb
and
xor
int3
xor
add
in
iret
es
outsl
push
mov
rol
les
mov
cs
mov
ss
dec
fildll
mov
add
mov
push
and
push
adc
inc
push
pop
arpl
sub
mov
or
mov
mov
loope
cmpb
dec
xlat
adc
add
push
int3
iret
dec
hlt
mov
fistpll
lcall
mov
shll
lock
xor
xchg
sub
sbb
add
int3
mov
dec
mov
mov
mov
data16
mov
or
pop
adc
sub
shlb
dec
sarl
cld
jecxz
or
cmp
call
sahf
lcall
push
xor
popf
repz
jne
mov
xchg
push
pushf
push
xchg
flds
lds
adc
cmp
fisttpll
mov
sbb
enter
xor
pop
fmulp
xor
adc
inc
pusha
pop
and
cwtl
add
push
push
pop
cmpsb
inc
jl
sub
jge
xor
xchg
les
lcall
push
lods
mov
ret
push
out
fwait
jge
mov
xchg
es
cmp
or
and
faddl
and
stc
test
frstor
lods
shll
in
test
mov
or
or
mov
inc
popa
pushf
aaa
pop
jmp
sub
lods
in
pop
push
sub
jecxz
push
clc
stos
hlt
mov
ds
pop
fs
lds
xor
ss
mov
xchg
sub
jae
jb
xchg
push
and
sub
imul
jo
ds
push
jge
sbb
lock
fadd
xchg
mov
jp
and
jl
pop
mov
cli
int
lahf
repnz
jmp
add
sar
inc
in
loopne
std
pop
mov
dec
pushf
and
test
loop
mov
test
xor
pop
testl
jmp
iret
mulb
gs
xorl
jecxz
imulb
add
add
js
outsb
lds
mov
iret
aas
push
mov
mov
pop
test
fld
xor
pop
iret
sub
loop
pop
or
and
fs
stos
mov
and
sub
cmpsb
pop
push
scas
cmp
pop
mov
inc
pop
test
mov
xchg
pop
xchg
jae
dec
fwait
iret
sti
mov
aad
mov
inc
cmp
pushf
jge
mov
push
mov
sbb
test
std
daa
mov
rep
sub
iret
xchg
pop
push
xchg
dec
xor
mov
sub
cwtl
rcr
pop
jmp
push
or
xchg
hlt
iret
mov
xchg
cmc
sbb
mov
xchg
jb
pop
adc
lock
mov
cs
jns
test
lret
xchg
jo
int
xor
add
or
imul
roll
push
ljmp
dec
repz
insb
jl
lcall
mov
in
xlat
mov
stc
test
ret
out
loop
cmp
cltd
xchg
in
pop
mov
dec
fcomps
and
bound
xchg
cmpsb
fisubrs
ss
gs
and
pop
sahf
test
sub
insl
pusha
icebp
sub
cld
imul
loopne
mov
xor
jl
aas
cmp
addr16
pop
cmp
gs
ret
or
push
jne
xor
mov
in
dec
aad
aaa
push
mov
inc
push
push
es
addb
jecxz
sbb
int3
xchg
jg
cltd
jg
icebp
adc
mov
lret
ffreep
add
mov
mov
push
sub
jmp
sub
xor
aad
lds
sbb
push
mov
in
outsb
xchg
add
repnz
ficomps
sub
imul
pop
inc
push
add
incl
xor
fistps
cmpb
les
push
out
mov
addr16
mov
xchg
fnstsw
loopne
push
jecxz
mov
xchg
fistps
gs
adc
add
pushf
xor
idiv
scas
push
or
scas
or
mov
je
in
sub
sbb
stc
xchg
lock
imul
pop
popa
or
mov
in
xchg
xchg
pop
jmp
xor
in
mov
pushf
adc
xor
push
mov
xchg
sbb
or
mov
jnp
inc
dec
les
sbb
or
cwtl
aas
pop
xchg
or
js
or
inc
lret
xchg
loope
stos
sbb
lret
repnz
shll
inc
add
xor
jle
fldt
sbb
push
vcvtpd2dqy
add
out
xor
outsb
jp
inc
imul
sub
or
mov
outsb
cmc
and
xor
lods
js
adc
dec
xor
inc
dec
sar
mov
xor
add
shlb
mov
sbb
cmpsb
enter
jb
arpl
push
pushf
leave
or
pop
adc
mov
std
mov
dec
rclb
mov
icebp
jle
sub
dec
pop
sbb
and
push
push
jge
fcoms
pusha
mov
sbb
insb
mov
inc
repz
fisttpl
jo
sti
or
sub
mov
inc
fnstsw
dec
xchg
cmp
inc
rcll
lret
and
or
add
out
mov
jp
dec
xor
mov
xchg
mov
jmp
cs
rcrl
shl
sbbl
pop
cs
ficompl
mov
das
mov
inc
jns
jg
nop
pop
mov
inc
xchg
lcall
xchg
rcrl
popa
cmpsl
jb
or
xchg
ficoml
add
dec
lods
jns
and
movl
adc
movsb
ljmp
and
mov
sbb
out
into
lds
movsb
js
inc
dec
scas
mul
jb
add
scas
inc
xlat
ret
loope
cmpsl
sbb
mov
add
movsl
inc
ds
sub
cmpsb
xchg
cmpsb
push
insb
int3
cmpsb
adc
inc
test
dec
mov
sub
inc
dec
adc
pushf
sub
jecxz
mov
sahf
jo
mov
mov
fildll
xor
popa
pop
fsubl
ja
lcall
dec
pop
ljmp
or
inc
stos
scas
dec
out
or
push
sarb
rcrb
daa
sbb
xorl
mov
ds
jbe,pt
repnz
iret
movsb
sahf
xchg
fwait
push
ret
pop
xor
add
cmp
and
lods
jle
in
jbe
lea
pop
and
dec
adc
insl
cmp
push
adc
lea
fstpl
jl
repz
sub
test
out
mov
mov
test
add
adc
test
fs
mull
outsb
cmc
fldl
mov
rorl
sub
lcall
xor
bound
icebp
into
stos
in
insb
js
sar
stc
fcmovnu
lods
sbb
and
loope
aaa
addr16
adc
stc
and
fpatan
shrl
xor
mov
xor
pop
mov
shll
sbb
push
xor
lods
movsl
or
add
adc
ret
add
or
adc
call
mov
iret
sbb
mov
mov
xchg
adc
xchg
jnp
mov
sub
ss
jae
push
xchg
pop
sub
std
rolb
gs
adc
jne
cmp
lods
xchg
mov
fcmovnb
inc
xchg
mov
jae
cmc
push
insl
sti
push
int3
inc
adc
mov
pop
cmp
ror
adc
inc
pop
sbb
hlt
loop
enter
cmpsl
inc
les
add
lods
imull
cmp
pusha
inc
je
lret
sbb
lret
add
xor
xchg
lret
mov
mov
xchg
xor
inc
mov
pop
dec
mov
push
add
sahf
outsl
daa
fwait
mov
sarl
xchg
push
adc
bound
ja
lock
rolb
fwait
push
push
cwtl
cmp
mov
add
pop
dec
inc
loop
repz
frstor
add
fsubrl
push
or
fsubrs
xchg
repnz
clc
ret
xchg
test
out
push
out
push
mov
push
jo
jl
shlb
mov
sub
jmp
mov
push
and
sub
mov
inc
in
jmp
ja
cwtl
dec
dec
aad
lea
ficompl
out
dec
movsl
push
stos
push
xchg
add
pop
loope
push
jae
sarb
cmc
push
test
les
imul
sbb
fwait
xor
mov
jmp
xchg
loop
fwait
cmpsl
mov
xor
aas
sub
xor
insl
mov
je
mov
xlat
pushf
mov
fisubrl
adc
mov
out
bound
nop
mov
adc
pop
loop
andb
mov
rcrb
dec
cltd
out
lock
push
jl
nop
jnp
add
adc
out
mov
stos
nop
inc
xchg
testl
outsl
fsub
xor
mov
lret
mov
push
add
bound
rcll
mov
xchg
ja
repz
icebp
xorb
int3
push
in
jmp
lods
rcrl
aad
xor
mov
out
push
out
pop
call
pop
lea
xchg
or
push
xchg
out
cmc
xor
mov
adc
push
or
and
add
insb
cltd
outsb
in
cmc
or
dec
leave
mov
sbb
mov
ds
dec
xchg
aam
sti
mov
ja
andb
pop
sahf
stc
mov
in
lock
pop
xchg
xor
mov
xor
int3
fs
push
popa
xchg
xor
push
daa
add
aam
mov
pusha
cmpsl
cmpb
repz
dec
jg
push
fdivs
fistps
lret
cmp
scas
stc
inc
xor
jbe
push
and
filds
out
xor
and
lock
cmpb
xchg
inc
ret
sub
xor
xchg
addr16
push
mov
dec
inc
test
push
enter
repnz
pop
loopne
push
cmc
push
out
insb
jl
mov
mov
outsl
add
push
pop
arpl
pop
mov
dec
movsb
mov
ret
daa
mov
cmpsl
in
or
pop
add
mov
jo
vmovdqu
scas
leave
jo
scas
jg
call
sub
decl
js
sub
jl
lret
push
leave
lret
xorl
insl
pushl
lea
cmp
inc
dec
call
aas
stc
data16
sbb
jecxz
mov
int
nop
jp
lds
and
or
or
mov
imul
jnp
inc
in
mov
scas
push
add
mov
and
test
mov
ret
popf
jg
popa
out
idivl
cmpsb
lahf
jmp
push
ret
dec
std
pusha
push
sub
xor
lret
or
aad
add
cmc
sbb
iret
sar
push
inc
inc
xor
rolb
dec
insl
fadd
pop
addr16
fisttps
out
hlt
in
inc
add
movsl
xor
iret
mov
push
pop
jmp
pop
loop
pop
enter
movsl
into
adc
mov
lods
mov
mov
cmpsb
mov
out
sbb
mov
xor
mov
iret
enter
pop
mov
lea
jge
addl
data16
cli
in
dec
lcall
sub
popf
mov
out
aas
dec
int3
and
sub
lahf
ss
add
push
jl
pop
sub
xchg
push
shll
lcall
addr16
aam
xchg
push
cld
sub
inc
cmp
int
push
jb
rcll
lcall
dec
cmp
mov
jl
into
mov
pop
mov
sub
cmpsb
test
or
jno
mov
sarl
fcoms
push
mov
mov
cmpsl
loop
xor
sahf
loopne
sbb
repz
fwait
xchg
mov
notl
and
lret
popf
jp
inc
je
xchg
jmp
jecxz
outsb
inc
sti
sub
fwait
add
jae
xorl
push
lods
adc
push
in
dec
add
bswap
subb
cmpsl
int3
sub
push
stc
or
lea
subl
fdivrl
leave
xor
fdivrl
mov
pop
shlb
popa
in
popa
jne,pt
rcr
jb
and
add
repnz
mov
loopne
xlat
inc
insb
fisubs
xlat
outsb
xchg
cmp
xchg
je
int3
sti
cmpsl
popa
fldenv
orb
jg
and
test
mov
inc
stos
jge
jmp
or
mov
jge
ljmp
loop
adc
fsin
mov
dec
xchg
enter
leave
xchg
clc
xor
fdivrs
lods
push
add
mov
sub
dec
sub
mov
xchg
xor
sub
xchg
int3
xchg
mov
mov
loop
loopne
aaa
or
push
jp
insb
cltd
jecxz
add
hlt
nop
adc
in
loopne
sub
fwait
sub
lock
dec
mul
or
mov
push
jmp
idivb
jo
sub
cmp
adc
dec
rclb
xor
rcrb
push
xor
jp
xchg
rolb
out
pushl
push
andb
outsl
sbb
out
inc
push
mov
mov
pop
or
inc
push
push
mov
dec
mov
fwait
sbb
int3
mov
cmc
cli
inc
add
inc
movsb
push
adc
add
mov
xor
push
or
loop
jl
sub
fdivl
roll
lret
sub
push
outsl
out
gs
mov
jg
mov
fld
mov
in
arpl
gs
sbb
loopne
ret
sbb
sbb
ret
outsl
jge
lahf
fisubl
or
dec
out
inc
scas
dec
push
pop
lds
mov
nop
xchg
movsl
add
movsb
lret
movsl
and
xor
lock
cmp
aas
mov
mov
mov
xor
pop
jge
add
xor
push
mov
jo
dec
push
inc
mov
cmp
push
repz
negl
sub
in
lahf
sbb
mov
loop
mov
pop
jnp
out
movsb
sbb
test
fs
fisubrl
shll
and
int3
fcom
mov
lcall
sub
inc
lods
dec
dec
ss
repnz
xor
call
fidivs
out
lret
push
std
pop
lods
fwait
enter
pop
jp
out
out
in
or
and
push
out
cli
mov
fldl
test
movsb
into
pop
imul
call
loop
test
pop
shll
imul
sbb
or
push
pop
pop
fwait
inc
fldt
jbe
jmp
nop
pop
jae
lahf
push
pushf
mov
ja
dec
cmp
notb
pop
pop
aam
lea
std
pop
cmp
xlat
hlt
jge
lret
mov
dec
mov
or
cmp
aad
movsl
adc
add
add
jmp
scas
std
faddl
sbb
shrl
movq
leave
fildll
sti
jns
inc
push
pop
cli
xchg
dec
mov
adc
cmp
mov
xor
fstps
push
xchg
bound
mov
in
pop
negb
add
cltd
add
add
mov
lods
sbb
andb
add
js
xchg
hlt
push
pop
and
push
xchg
add
push
inc
lret
lock
shll
fcoms
fistl
mov
cmp
pop
push
or
psrld
or
dec
ja
jl
imul
enter
pushf
in
xor
xchg
add
je
cmp
sub
in
and
ds
out
or
ds
sbb
add
push
call
pop
addb
sbbb
mov
call
push
out
cmp
leave
jnp
movsb
cltd
add
sub
or
xor
xor
andl
cmc
mov
push
in
mov
push
pop
fistpll
dec
lods
xchg
and
add
push
testl
fbstp
adcl
rcr
lret
push
fidivl
lds
pop
sub
jmp
cmp
cmp
flds
and
dec
mov
adc
sub
add
imul
imul
xor
jl
and
mov
loopne
jg
inc
repnz
or
jnp
mov
xchg
and
and
dec
inc
icebp
fiadds
in
icebp
sub
or
cmp
stos
pop
xor
sub
jl
push
dec
jmp
mov
xchg
aam
sbb
jb
xor
popf
mov
lret
loope
gs
cmp
std
arpl
mov
int3
out
push
and
xor
lret
mov
mov
mov
jle
jo
mov
leave
mov
dec
inc
pop
mov
dec
mov
repnz
mov
cmp
pop
adc
mov
js
push
sub
sahf
into
jecxz
add
aas
lea
push
movsb
sub
sti
imul
adc
test
pop
cs
push
jbe
shll
sub
aam
mov
dec
mov
clc
out
lods
flds
mov
lahf
mov
je
pop
fdivs
imul
pushf
push
pop
sbb
fsub
pusha
into
cmp
adc
xchg
lock
xchg
mov
movsl
mov
xchg
imull
push
arpl
out
sti
inc
lahf
mov
add
mov
imul
ljmp
es
push
test
add
mov
xchg
movsb
or
add
das
stos
enter
pop
stos
addr16
sub
outsb
mov
mov
iret
stc
mov
jb
push
imul
mov
test
and
pop
and
lahf
shlb
std
jmp
aas
push
sbb
mov
loope
outsl
pop
mov
and
sahf
xchg
or
popa
push
fists
jmp
pop
mov
shld
dec
dec
aam
fsubs
push
sbb
insl
jmp
call
jecxz
mull
ljmp
jns
mov
movsb
sub
jl
lcall
les
inc
test
addr16
inc
scas
push
mov
fnsave
outsl
pop
cs
push
jns
and
mov
divl
jp
mov
cmc
lds
mov
cmp
sub
cmp
push
xchg
xchg
fdivl
es
push
cs
repnz
js
dec
add
dec
sub
mov
sarb
loopne
jae
cmp
gs
jl
clc
adc
lret
jb
xchg
fdivrl
out
test
push
push
decb
jmp
xchg
lds
jecxz
sbb
xor
arpl
cltd
pop
jmp
jo
adc
adc
mov
mov
inc
pusha
pushf
cmp
std
jge
or
aam
xchg
xor
add
lods
sbb
inc
outsb
dec
ss
fisubrs
sbb
jae
arpl
bswap
aad
lods
fisubs
gs
ljmp
push
pop
xchg
pop
jnp
pop
mov
data16
add
mov
inc
loope
repnz
into
add
sbb
xchg
repnz
out
mov
cs
mov
push
lret
jnp
mov
add
sbb
shl
fwait
jne
mov
mul
pop
adc
js
pop
cmp
dec
insl
xor
test
jae
mov
shlb
or
dec
call
cs
inc
aaa
cltd
arpl
addr16
imul
mov
lahf
adc
bound
lods
imul
outsb
sbb
outsb
addr16
std
bound
or
in
push
aad
scas
push
scas
ja
jne
push
or
or
loope
xchg
add
dec
mov
sub
pushf
push
lds
jecxz
jbe
cmp
out
push
add
fwait
add
js
jp
cmp
shrl
adc
xor
je
insb
cmpsl
int3
roll
jl
lods
int
mov
push
cmp
rcll
inc
aas
cltd
jnp
lahf
lock
stos
mov
and
lahf
mov
lods
hlt
popa
scas
cmp
add
jl
and
mov
fstps
push
mov
mov
test
jno
pop
scas
fbstp
mov
pop
in
cmp
jbe
inc
iret
call
inc
jge
loopne
stc
sub
scas
sti
ja
or
scas
arpl
jg
cld
push
daa
aaa
fwait
dec
in
dec
pop
daa
and
sbb
cs
mov
inc
mov
das
inc
cmp
mov
scas
sub
xor
ss
aad
leave
jg
pop
clc
pop
arpl
mov
rclb
rcrb
movsb
cmp
imul
mov
cli
int
dec
in
data16
sbb
lret
mov
mov
bound
fdivs
inc
fnsave
sbb
int
std
or
mov
pop
into
sahf
mov
jns
dec
push
inc
cmp
xor
or
iret
sbb
ret
xor
adc
out
jo
add
and
mov
xor
ss
adc
popf
mov
sahf
cmp
or
push
cmp
push
xchg
insl
mov
or
push
mov
cmpsb
popa
sti
test
xor
cs
and
pusha
cmp
xor
push
lds
fistl
sbb
cwtl
fcmove
call
out
xchg
mov
jle
xor
jns
cmc
stos
sbb
shll
xchg
sarb
into
mov
push
add
rcr
cld
or
das
pop
push
jmp
lahf
ret
push
out
out
push
inc
cmpl
aad
lds
mov
je
lods
xor
sbb
shrb
inc
lcall
pop
adc
jne
mov
and
ficomps
jle
addb
adc
je
jne
xor
push
call
rorb
clc
push
fists
iret
test
data16
sbb
lods
out
les
jnp
xor
cmp
cwtl
push
add
imul
pop
inc
xchg
dec
ret
push
mov
sbb
cmp
mov
adc
adc
mov
mov
movsl
xchg
insl
out
fadd
pop
pop
fadds
popf
inc
jp
xlat
movsl
and
outsl
jmp
cmp
mov
mov
adc
subb
jmp
dec
mov
psadbw
repnz
leave
js
sub
test
aad
clc
enter
xlat
test
mov
imul
rcrl
lret
push
nop
add
cmp
jp
gs
pushf
testl
insb
loop
and
sbb
adc
inc
mov
in
mov
js
out
xchg
push
or
pusha
adc
xor
push
mov
loopne
stc
push
stc
popa
mov
pop
outsb
dec
insb
je
pop
sbb
mov
ljmp
pop
ret
jb
pop
push
in
xchg
bound
cwtl
mov
incl
fcompl
adc
jge
test
imul
push
lcall
cmp
fsubl
jae
insb
jae
fistps
int3
pop
addl
lahf
xlat
xor
or
inc
mov
dec
add
outsb
lods
mov
mov
inc
out
fs
mov
cmc
clc
lods
bound
and
ja
fldl
pop
jno
fildll
xor
int
mov
sti
mov
pop
cld
push
cmp
mov
jo
push
call
add
outsb
mov
mov
repz
push
adcl
out
repnz
push
arpl
ljmp
xchg
xchg
xchg
shrb
lret
mov
mov
cmp
sub
mov
clc
sbb
xchg
mov
sbb
cmp
pop
push
pop
out
xchg
mov
jmp
enter
mov
in
cmp
cmp
adc
ja
and
xor
ret
ss
test
pop
sbb
in
sub
push
insb
push
mov
inc
in
fcomps
lahf
cmpb
fists
aam
lds
jno
adc
mov
lcall
and
gs
jmp
pop
data16
push
adc
repnz
xor
or
in
rcr
mov
inc
and
cmp
xor
and
xchg
sarl
ret
daa
cmp
ljmp
push
xchg
jle
jmp
fsubs
sub
mov
imul
mov
fdivl
xor
mov
mov
inc
cmp
ret
jmp
xorl
es
adc
fsubs
or
jge
adc
aad
lods
xor
aam
cmp
mov
push
fistps
pop
pop
jno
mov
push
dec
sub
subb
mov
lret
test
leave
xchg
lods
cmpsl
push
stc
xchg
dec
sahf
xor
adcb
pop
out
pop
test
or
lods
jecxz
test
xor
adc
inc
sarl
pop
xor
cmc
psubd
xchg
dec
sbb
cmp
pop
mov
or
xchg
addb
jo
or
test
add
jp
loopne
out
jmp
push
mov
into
lods
cmp
sbb
add
out
dec
xchg
fldlg2
insb
lea
out
pop
pop
sar
jo
mov
dec
xor
lret
lret
insb
jns
rorb
daa
movl
xchg
and
clc
bound
lret
pop
gs
or
and
hlt
call
mov
add
adc
nop
xor
es
push
sub
cmp
pop
lds
lds
insb
adcb
lea
sub
mov
xchg
mov
and
and
or
or
mov
es
out
jb
cmp
push
hlt
push
fsub
mov
les
ret
in
pusha
pop
inc
dec
inc
sub
mov
inc
ficompl
mov
out
xor
pop
scas
cmp
cmp
jl
mov
popf
rcll
adc
imul
rolb
ret
xor
xlat
xchg
imull
arpl
cli
filds
cld
int
stos
bound
ret
jae
adc
push
ja
cmp
mov
int
add
imul
jb
sti
jp
imul
lret
int3
lea
adc
add
hlt
lea
bound
xor
in
lods
push
insl
in
outsb
jmp
add
xchg
test
test
fldcw
pop
outsb
negb
js
cmpsl
scas
insb
out
outsb
and
mov
sub
push
lock
or
stos
shl
rdpmc
rorl
bound
jbe
xlat
lahf
mov
or
test
fistpll
leave
cwtl
sub
daa
push
into
cmp
mov
or
or
sbb
jle
inc
push
and
jo
mov
push
push
shr
push
mov
lea
push
pusha
ja
out
enter
and
inc
xchg
xchg
cmp
sub
sbb
sbb
scas
insb
out
gs
push
pop
addr16
mov
and
sbb
enter
xor
das
or
xor
imul
xchg
mov
dec
cmp
push
lds
gs
mov
sub
pop
stc
cmp
adc
sbb
sarb
js
das
push
xchg
aas
daa
das
mov
adc
movb
rclb
stc
dec
lods
outsb
testl
sti
out
sbb
rcrl
insb
push
aaa
or
icebp
rclb
mov
pop
jae
mov
sub
mov
mulb
mov
js
xchg
mov
or
mov
outsb
and
cmp
loopne
jo
fs
mov
adc
js
ss
push
sbb
jge
icebp
aad
mov
cmp
icebp
cli
pop
cmp
out
cmp
lret
std
aaa
xchg
test
jbe
inc
sbb
enter
ss
lret
pop
cmp
shrb
sub
mov
test
jmp
dec
add
fs
ret
push
mov
or
cld
decl
jmp
icebp
loop
ss
stc
and
and
sbb
divb
inc
jecxz
test
aad
mov
int
ret
xchg
or
es
fucomp
imul
push
test
xchg
or
adc
or
lahf
hlt
push
aam
fists
xor
fs
sbb
pop
cmp
movsl
adc
mov
in
out
fs
push
out
sub
mov
sub
icebp
inc
mov
and
mov
loop
adc
into
popa
nop
std
bound
sub
bound
sub
rcrl
sub
cld
hlt
push
dec
xor
imul
jae
add
rorl
push
jg
sbb
push
mov
movsl
test
sbb
or
mov
bnd
inc
fidivrs
inc
aas
xor
out
xor
pop
out
or
sbb
mov
adc
lcall
lret
push
cmc
sar
out
push
aas
pop
movsl
mov
and
pop
push
add
pop
xor
or
loopne
inc
divl
mov
cmp
negl
lea
and
lcall
imul
sub
lds
add
mov
outsb
jbe
cltd
and
or
mov
sub
jne
aaa
and
int3
fdiv
and
mov
fildll
adc
js
mov
std
inc
fsubrs
sbbl
mov
bound
inc
das
mov
popl
mov
ja
add
jbe
leave
ja
bound
add
int3
jecxz
or
call
popa
mov
cwtl
mov
inc
xchg
je
ret
fisubrs
rcrb
xor
fldt
cmpsl
clc
mov
imul
js
adc
jmp
in
add
xor
inc
ss
xor
mov
and
into
cwtl
loop
ds
ja
xlat
leave
dec
mov
and
or
sahf
stc
sbb
jne
cmp
sub
jg
aad
mov
int
cmc
inc
adc
push
aad
hlt
bound
xchg
fsubrl
jnp,pn
je
int
aad
stc
ss
mov
cmpsl
leave
or
mov
jne
xorb
shl
xorl
jmp
pop
pop
mov
insb
imul
cwtl
lahf
fsub
lods
push
jecxz
test
lods
fistpll
pop
cmp
cmp
addr16
push
add
adc
out
rolb
inc
ficomps
outsb
imul
xchg
inc
xchg
xor
loopne
je
mov
lods
iret
push
stos
mov
insb
sbb
or
adc
xchg
enter
out
imul
shrl
cwtl
mov
and
mov
add
sbb
push
fwait
pop
rcrl
movl
loopne
mov
or
bound
pop
mov
loop
les
popf
out
clc
std
sahf
adc
xchg
insb
lret
je
mov
in
cmp
insl
shrl
pop
dec
aas
cwtl
scas
mov
push
lcall
cmpps
jle
push
outsb
lds
mov
rcl
cmp
fwait
cmp
into
in
inc
mov
or
lret
cmpsl
mov
pop
adc
fisubrl
lds
jb
in
ret
cwtl
adc
adcb
mov
cs
imul
cmp
xor
jmp
lret
xchg
mov
mov
cli
xchg
ss
cli
dec
jo
adc
pop
mov
out
jecxz
hlt
jbe
adc
push
mov
in
xchg
push
jg
mov
add
rcrb
xchg
std
adc
in
je
lret
mov
mov
pop
aad
popa
or
sbb
clc
mov
aad
std
xchg
cs
cld
add
and
sahf
rclb
out
mov
adc
iret
sub
push
mov
lahf
pusha
pushf
dec
mov
dec
sbb
inc
push
mov
dec
daa
pushf
mov
bound
test
adc
daa
repz
call
push
call
mov
mov
std
inc
fstl
mov
pusha
push
shlb
push
lods
les
rcr
gs
addl
mov
int
sbb
pop
inc
sbb
lcall
rorb
sbb
fwait
mov
push
pusha
inc
mov
push
outsb
bswap
mov
or
dec
push
shlb
cmp
sarl
cmpsl
mov
bound
xchg
repnz
jle
pop
in
mov
mov
fsubs
cmp
dec
mov
in
or
and
ljmp
pop
dec
mov
test
lret
imul
inc
popf
movl
lahf
stc
jbe
cld
jae
jecxz
fadd
xchg
lret
gs
xor
cmp
enter
mov
adc
mov
cmp
cmpb
xchg
inc
lock
cmp
lret
icebp
push
pop
popf
lods
inc
icebp
es
lods
sub
fcomp
and
lea
shl
adc
pushf
push
dec
imul
jnp
sbb
into
addr16
or
dec
and
push
out
or
push
add
mov
gs
lret
data16
jle
mov
mov
jmp
loop
jge
fcoms
sub
nop
pop
repnz
add
dec
arpl
movsl
mov
outsb
inc
sub
rolb
mov
jmp
mov
push
xchg
divl
ja
lret
ljmp
add
pop
push
jae
mov
test
dec
lret
or
jno
gs
pushf
cli
dec
jecxz
dec
hlt
dec
loop
mov
cmc
push
lods
push
add
lods
shll
cli
mov
daa
push
and
jae
imul
sbb
mov
pop
fdivl
mov
fnstcw
loope
xchg
mov
dec
inc
test
dec
dec
lret
jle
cld
stos
jle
xor
lret
test
out
ss
push
inc
inc
sbb
xor
jbe
mov
repz
add
fmull
jle
cltd
int3
scas
and
push
dec
inc
in
mov
xor
cmpsb
add
adc
pop
push
cmp
mov
mov
xor
in
sti
mov
es
xchg
dec
sbb
in
cs
or
cli
xor
sbb
cli
or
mov
xor
jns
inc
push
or
popa
in
imul
jmp
adc
pushf
scas
daa
insl
adc
xor
in
popf
cmp
es
jbe
inc
sbb
aam
xlat
addb
shrl
lcall
rcrl
xchg
sti
cmc
lds
sbb
fwait
mov
xor
shrl
rorl
repnz
xchg
les
jnp
inc
into
xor
cmp
fnstcw
sbb
mov
cmp
jae
cltd
aas
push
inc
lahf
add
cmc
cld
cld
mov
and
xchg
arpl
inc
pop
sti
fistpl
inc
or
repnz
sub
mov
sahf
lret
pop
fsubrs
xchg
mov
lds
ror
sub
push
fucom
jmp
int
push
divl
std
imul
or
mov
mov
mov
sbb
stos
imul
mov
or
jmp
leave
jae
incb
dec
hlt
scas
mov
clc
mov
bound
dec
mov
or
aad
roll
sbb
and
lods
pop
cmp
fstpt
rcrl
dec
mov
and
pop
adc
fsts
jb
jl
adc
ja
mov
enter
jecxz
aam
out
fwait
scas
mov
mov
addr16
lods
shr
xchg
mov
das
and
shll
gs
loope
add
stos
mov
mov
xor
ja
fs
mov
add
lret
enter
mov
pop
add
jecxz
mov
div
mov
adc
mov
mov
cli
push
add
jmp
xor
pop
push
inc
in
sti
jmp
sub
jle
in
jge
cmp
rcrb
sub
jp
mov
lods
push
push
sbb
out
mov
sbb
and
rorb
insb
or
pop
pusha
fsubs
jge
out
cs
sub
leave
test
sub
push
into
mov
jae
adc
dec
mov
adc
push
aad
popa
jne
sbb
aam
jmp
cltd
scas
shl
jmp
scas
mov
mov
in
sub
cli
or
sub
stos
jbe
inc
dec
idivb
ja
ss
in
pop
fsubs
add
scas
ja
push
and
add
mov
cmp
push
push
or
inc
sub
je
mov
push
xor
scas
fstpt
orl
xor
imul
mov
lret
mov
or
adcb
xchg
sbb
scas
outsl
in
adc
sub
mov
xor
mov
sti
add
inc
enter
mov
arpl
xchg
dec
push
mov
add
xlat
inc
lret
das
les
ret
mov
push
fldenv
movsb
je
mov
sbb
push
push
adc
leave
xor
fdivl
add
rorb
je
dec
or
xchg
pop
sbb
js
data16
test
call
fimuls
test
and
xor
loop
add
sbb
pop
sbb
lcall
pop
cmp
mov
push
xchg
adc
test
xor
lret
out
and
stos
dec
jb
push
sar
mov
xor
cmpsl
sbb
stc
int
outsl
mov
cltd
test
mov
test
mov
mov
fstpt
pushf
pusha
push
inc
frstor
roll
mov
ja
clc
mov
out
out
stos
inc
xchg
xchg
and
std
movsb
mov
ret
icebp
and
test
dec
add
movsl
dec
mov
jp
imul
std
sbb
adc
mov
push
outsb
in
aas
xlat
add
push
inc
bound
outsl
call
pop
dec
cmpb
dec
das
jecxz
in
jmp
jge
cmp
dec
fisttpll
push
fs
push
cmp
stc
mov
mov
jge
lds
cwtl
pop
xchg
mov
adc
mov
lahf
mov
aas
ret
xor
push
std
ja
fwait
jne
pop
les
ds
sub
cmp
dec
push
aas
jp
fbld
test
lods
imul
and
ret
dec
int3
lcall
test
scas
sar
push
jb
in
imul
nop
addr16
inc
stos
add
or
mov
andps
pop
adc
dec
dec
mov
cmc
mov
ffreep
push
xchg
jae
jae
lods
stc
adc
lock
sub
pushf
sub
icebp
pop
xchg
jno
push
cmpsb
xchg
cmc
cmpb
icebp
add
inc
mov
pushf
gs
jmp
or
loop
add
mov
xchg
inc
jp
test
inc
inc
loopne
pop
mov
dec
push
shlb
jbe
ljmp
jge
stos
arpl
sbb
inc
fsubl
mov
dec
popa
jbe
add
sub
in
xchg
inc
outsb
ja
sarb
into
into
sub
sbb
sbb
ror
dec
imull
xor
jg
imul
pop
fsubl
call
sub
in
repnz
push
test
cwtl
jne
gs
add
add
sbbl
rolb
and
lahf
mov
cs
pop
lcall
lret
or
shr
cmp
adc
xor
test
rcrl
mov
movsl
xchg
lret
xor
mov
enter
sbbl
cmpb
loope
cs
std
cmp
shll
sub
iret
jg
js
push
pushf
xchg
fs
xchg
pop
pop
mov
test
fptan
testb
test
xchg
mov
rcrl
lret
cs
imul
popa
push
mov
sub
loop
sbb
roll
int3
jbe
inc
push
push
lret
fadd
and
cmp
scas
mov
adc
or
mov
fstl
push
lea
les
pop
cmp
test
add
ss
cmp
dec
loopne,pt
movsl
adc
xchg
mov
mov
jp
jns
pop
lret
enter
mov
nop
test
mov
push
enter
movsl
sti
sbb
roll
repnz
mov
dec
jg
mov
push
popf
jnp
xchg
inc
dec
loopne
test
jmp
mov
push
outsb
imull
movsl
fdivl
test
lret
sub
xchg
and
pop
test
fs
dec
cmp
sbb
mov
xor
aaa
mov
and
mov
mov
shld
fnstcw
sub
mov
push
sub
cmc
jle
enter
clc
fdivrl
lret
push
std
shrl
inc
jmp
std
xor
and
bound
cmc
enter
add
or
rcrl
lret
sub
out
imul
jne
subl
cmpsl
je
sbb
fdivrs
mov
mov
xor
jo
cmp
dec
daa
jo
mov
lret
imul
mov
stc
cs
mov
loopne
cmpb
jecxz
push
stos
ret
inc
call
pop
leave
jne
add
loope
int3
pop
add
mov
mov
mov
ficoml
dec
mov
fs
add
inc
js
dec
jmp
inc
mov
xchg
clc
mov
subl
or
pop
hlt
add
adc
cmpsl
and
lods
mov
insl
int
es
push
pop
lret
push
xchg
imul
xor
add
mov
ds
mov
sub
fdivrs
inc
scas
stos
mov
lahf
sub
fdivrs
fiaddl
push
push
inc
xchg
push
loop
add
mov
pop
sbb
inc
add
lea
jg
mov
and
dec
inc
test
push
ss
inc
flds
sub
xlat
in
xchg
xor
pop
rcr
insl
lret
into
mov
outsl
mov
fidivl
mov
mov
jl
dec
cmp
fs
ljmp
mov
and
sbb
outsb
out
pop
mov
add
and
ds
ja
movlps
movsb
pop
loopne
mov
outsb
into
mov
cmp
lret
loop
fsubp
pop
bound
jp
fwait
mov
int
lret
lcall
lods
inc
dec
loopne
lock
test
lds
nop
ficompl
addr16
sbb
test
inc
cmc
sbbl
add
out
or
enter
int3
lahf
rorl
mov
icebp
addr16
jg
daa
xlat
lock
mov
loop
fistl
sbb
clc
jnp
loopne
scas
outsb
jo
ret
insb
xor
test
dec
jg
iret
xorl
adc
test
enter
jmp
fwait
inc
jae
xlat
sbb
enter
jns
cltd
sti
test
xlat
mov
adc
cmp
inc
jl
mov
sub
mov
cld
xchg
outsb
jl
add
shl
jmp
fsts
mov
mov
mov
xchg
icebp
out
je
outsb
inc
add
pusha
dec
jnp
add
pop
and
lcall
loope
add
jae
jno
roll
cwtl
inc
into
leave
movsb
and
fcmovnb
adc
ja
fwait
pop
cmpsl
int3
stc
out
sub
mov
sub
dec
mov
mov
lock
in
subl
mov
add
nop
pop
mov
cld
xorl
adc
lods
jo,pn
std
clc
push
jnp
dec
sub
fwait
jle
cli
rcrb
mov
ja
lods
fidivrs
push
sbb
pushf
test
jp
es
out
lods
imul
cmp
jbe
jp
outsb
sub
test
popa
out
mov
push
jecxz
in
je
fwait
call
inc
mov
ret
sar
mov
xchg
mov
sti
insl
in
adc
push
and
scas
inc
in
fisttpll
add
enter
repnz
lods
out
popa
pusha
aad
xchg
push
push
lret
dec
stc
jl
daa
push
mov
je
jnp
push
dec
jecxz
mov
notb
inc
movl
call
nop
sbb
repz
jge
sbb
mov
push
fwait
push
loope
push
ds
pop
jno
cmp
push
rcll
int
scas
in
jecxz
lods
pop
pop
jne
arpl
pop
sub
ds
pusha
mov
push
movsb
mov
stos
imul
les
fldcw
push
inc
push
not
lods
xchg
gs
push
push
call
sbb
sarl
ljmp
pop
cmp
fstpl
rolb
enter
xchg
fwait
dec
mov
adc
lods
mov
sub
aam
mov
push
mov
outsl
jmp
imul
jmp
xchg
ja
aas
cmp
cwtl
cwtl
jbe
push
sub
nop
xlat
and
sub
fs
add
sbb
sarb
inc
loop
into
and
mov
fcoml
iret
adc
cld
ffreep
sbb
insl
orl
xchg
out
movsb
cmp
mov
adc
push
sbb
je
stos
divl
sub
rcl
out
xchg
add
das
xchg
cli
movsl
shr
mov
xor
pusha
insl
jecxz
cmc
fmull
jmp
pop
fdiv
mov
nop
add
aas
outsb
fidivl
jns
pop
jo
stos
in
ret
sub
sti
flds
test
ret
daa
gs
xor
faddl
sub
sub
insl
pop
mov
jns
ja
scas
push
int
mov
jbe
xchg
mov
push
addr16
loope
adcl
or
push
adc
dec
lods
pop
aaa
insb
imul
jnp
rorb
fmulp
ror
push
lods
test
sbb
xchg
push
mov
adc
int
sub
nop
fs
adc
test
icebp
mov
push
insb
inc
sub
mov
push
lds
pop
mov
cltd
movsl
jmp
jno
insb
sub
xchg
aaa
xlat
loopne
aas
lods
stos
sbb
bound
push
mov
loop
imul
push
fistl
push
or
fwait
enter
cmp
mov
mov
in
cmp
imul
dec
lret
adc
ja
sub
in
arpl
lahf
cmp
adc
and
iret
xor
dec
pop
cmp
rcr
xor
sbb
sbb
divb
fsub
adc
add
pop
ret
add
mov
movsb
mov
cwtl
lods
dec
fidivs
sbb
jmp
mov
cmpb
jmp
jno
mov
inc
sub
push
ja
lahf
xchg
stos
dec
cmp
es
jae
and
iret
inc
jle
push
cmp
cmp
pop
inc
fists
mov
cmpsl
dec
mov
mov
sub
mov
mov
and
dec
jae
jae
frstor
add
sbb
jo
daa
pop
leave
test
xchg
inc
shll
cli
sub
sub
dec
insl
daa
dec
pop
pop
aad
sahf
sub
xchg
sti
sub
adc
mov
mov
imul
cld
inc
clc
outsb
mov
jmp
pop
sbb
mov
jno
int
repz
mov
mov
jle
jle
stos
lcall
mov
std
dec
pop
pop
out
cmp
loop
pop
and
arpl
hlt
data16
xor
xchg
cmp
cld
jns
imul
mov
pop
movsl
jecxz
xchg
xlat
js
popf
pop
scas
ret
divps
pop
popa
push
push
and
fs
mov
cmp
or
rcrb
shl
mov
lret
lds
test
popf
and
adc
push
jmp
cwtl
in
pop
out
int3
mov
jmp
ss
dec
ds
push
inc
icebp
sbb
lds
in
and
rorl
sahf
xchg
in
in
cwtl
mov
aas
mov
lods
xlat
xchg
pop
inc
in
stos
cmp
dec
jge
testl
add
inc
adc
jo
outsl
add
xchg
cmpsl
stc
sbb
ret
call
push
inc
scas
mov
push
xchg
ret
adc
mov
pop
push
lods
dec
mov
lods
lahf
scas
add
push
mov
dec
ja
mov
icebp
pop
xchg
es
pop
push
pop
in
mov
and
fstps
fbld
jne
mov
fwait
dec
or
mov
cld
repz
push
sbb
repz
xchg
test
jmp
fcomi
and
int
insl
push
mov
imul
jb
fisubrs
xchg
mov
daa
mov
sub
xor
fistpll
xor
jecxz
push
repz
in
in
pop
call
or
inc
in
xchg
cmc
inc
push
jmp
iret
loope
loop
adc
xchg
mov
push
pop
jl
xor
insl
lahf
jns
pop
push
cld
shll
enter
icebp
jle
mov
movw
jae
fiadds
lods
aam
cltd
test
sbb
fmulp
lock
test
adc
cmp
jmp
xchg
pop
sbb
mov
fcomip
sub
test
jp
cmpsl
std
sub
inc
or
arpl
or
fadds
xor
lahf
pop
pusha
insb
aas
and
adc
inc
aaa
jnp
xchg
leave
and
js
ljmp
push
inc
shrb
push
xchg
hlt
sti
xchg
ror
xlat
xchg
les
xorb
ljmp
jns
fidivl
jecxz
xchg
lcall
lea
fcoms
stos
imul
idivb
dec
jbe
jns
cs
sbb
sub
sbb
mov
hlt
aam
adc
push
fmull
xchg
inc
out
rorl
push
insl
inc
into
mov
push
mov
inc
js
daa
fwait
adc
cmp
mov
jns
mov
cld
mov
call
cld
scas
xlat
cli
ja
mov
sarl
pop
inc
aam
push
push
gs
xor
hlt
out
xchg
iret
cwtl
mov
xchg
bound
mov
dec
insb
pushf
xchg
jp
xor
add
ficoms
cwtl
pop
pop
adc
cmp
xor
and
stc
inc
sti
std
cld
outsb
js
cmp
mov
adc
dec
imul
sub
mov
jne
xor
pop
ljmp
fwait
repz
push
mov
int3
stc
outsb
hlt
mov
inc
xor
or
pop
leave
ja
xchg
mov
xchg
cmp
xor
xor
jb
sub
out
inc
sbb
test
lcall
adc
lds
inc
jne
mov
ficoms
mov
push
in
stos
stos
jbe
outsl
int3
rcr
jl
lds
dec
sbb
xor
push
inc
fs
xor
jmp
push
xor
cmp
push
or
cmp
int
xor
inc
out
mov
sub
jae
fistpl
mov
lods
mov
in
mov
aaa
mov
js
xor
sub
jecxz
int3
push
loope
aas
stc
je
addr16
xchg
jb
adc
dec
imul
and
testl
lea
pop
and
lret
aad
and
into
sti
xchg
test
addl
sbbl
or
insl
jge
clc
scas
dec
call
cli
sub
sub
rcrl
mov
mov
dec
or
inc
xchg
add
int
aam
stos
mov
lret
pop
xchg
mov
dec
cmpsb
das
mov
pop
mov
adc
xchg
cmpxchg
inc
test
bound
xchg
mov
ds
les
ret
ljmp
add
stos
dec
mov
cmpsl
xchg
push
insl
pop
nop
scas
loopne
jmp
ljmp
fidivrs
cltd
cmp
add
inc
xor
sub
jp
xor
adc
cwtl
into
lret
xlat
and
es
stos
jae
dec
mov
repz
rcll
rorl
gs
xchg
dec
push
jns
push
cwtl
inc
add
aas
inc
xlat
add
inc
repnz
fwait
inc
jmp
push
sahf
push
in
imul
out
hlt
adc
inc
jp
jae
adc
add
bound
divb
mov
inc
es
jle
mov
mov
sub
xor
lods
pop
jl
xchg
jge
mov
push
pop
sbb
push
xor
int3
inc
jns
pop
sub
sub
rorb
pop
or
and
or
fistps
cmp
daa
mov
fnstcw
scas
pop
fnsave
mov
dec
mov
add
fcmovu
push
xor
imul
cld
dec
outsb
iret
cmc
popa
lods
in
rorb
and
test
push
jb
cmp
gs
push
incl
push
mov
and
roll
fsub
mov
jmp
out
mov
push
popa
aaa
aam
jae
mov
fwait
push
fwait
fwait
dec
dec
gs
mov
repz
cmp
das
cmpsb
pushf
repz
into
out
mov
call
pop
sti
lret
cltd
xor
dec
and
pop
fmuls
mov
jnp
pop
negl
into
dec
das
lods
ja
test
movsl
iret
jnp
pop
dec
test
movsb
lock
int3
mov
pushf
fnstcw
outsl
xor
aaa
dec
push
ss
fwait
loope
inc
fld
iret
movsb
dec
push
scas
ret
iret
test
jb
addl
fadd
test
pop
orb
or
cmp
cmp
add
adcb
and
jmp
jmp
xchg
int3
lret
cmc
ret
cmp
fiaddl
loopne
add
mov
cltd
int
movsl
dec
pusha
out
hlt
add
inc
mov
loop
std
cmpl
aad
lea
and
and
push
hlt
in
inc
sub
lea
jge
or
xorb
int
out
lahf
mov
add
pop
sbb
leave
xchg
sbb
push
lret
jge
add
or
xchg
imul
stc
adcl
pushf
ds
shr
shr
xlat
pop
imul
cmpsl
push
mov
adc
xchg
xor
sbb
lea
add
std
jmp
es
jle
stos
cmp
sar
xor
int
and
dec
xchg
inc
jle
xchg
push
and
pusha
in
test
push
insb
sub
fisubl
mov
mov
mov
cmpl
jmp
sub
mov
mov
jg
iret
int3
inc
repz
mov
out
repz
dec
dec
fidivl
xchg
rorb
sbb
xchg
xor
mov
pop
sub
jmp
mov
push
push
and
arpl
mov
aad
jl
int3
xor
and
adc
push
inc
push
fdivl
out
leave
imul
ja
leave
mov
js
repnz
mov
cmc
jno
cld
ffreep
inc
xlat
pop
pusha
enter
sub
scas
popa
xor
mov
inc
jg
cmp
pop
push
cmp
or
sbb
mov
mov
xor
bound
shl
in
aas
lcall
push
sbb
push
mov
and
call
mov
dec
je,pt
mov
jnp
rcll
out
outsb
push
jmp
leave
xchg
test
call
add
call
orb
inc
inc
mov
xor
sub
leave
mov
cmp
stos
xchg
pop
test
sbb
popf
or
pop
jmp
sub
fidivrs
les
cmc
dec
in
aam
lcall
pop
xor
out
xchg
sbb
cmc
ss
dec
imul
repz
or
test
popa
inc
add
sti
xlat
adc
sub
cmp
dec
push
imul
ljmp
cs
movsl
fistpl
lods
dec
jbe
movsb
gs
outsb
test
adc
sub
stos
inc
dec
inc
dec
xchg
nop
test
ja
inc
jp
insl
insb
xchg
sub
push
repnz
loopne
add
xor
rorl
jge
xchg
push
jns
cmp
dec
cmp
pop
or
shll
pop
cmpsb
divb
mulb
push
sbb
and
sbb
or
xchg
clc
jge
cli
add
pushf
rcll
mov
xor
adc
mov
out
mov
imul
sub
bound
inc
movsl
pop
dec
jg
push
mov
xor
sarb
dec
xor
push
clc
push
add
sbb
or
adc
sbb
imul
std
and
insb
mov
adc
ja,pn
std
pop
jnp
pop
mov
ficomps
pop
bound
xor
push
testb
pop
jecxz
cmpsb
mov
popa
adc
mov
ss
jnp
insb
mov
mov
adc
stos
out
jge
std
test
sbb
mov
sti
xor
pop
dec
dec
cmc
and
mov
jo
es
enter
pop
xchg
aas
sahf
mov
pushf
ja
repnz
insl
bound
xchg
movsb
data16
rcrb
ljmp
pop
in
int
mov
inc
mov
jb
push
push
stc
push
iret
icebp
enter
mov
mov
popa
fcmovnu
adc
xchg
adc
aam
dec
scas
outsl
lahf
pop
inc
pop
rcrl
inc
out
sub
aad
gs
sub
mov
loopne
pop
jle
loopne
aaa
lock
push
insl
push
cmp
mov
or
cmp
jmp
insl
push
aam
xchg
inc
fs
ret
mov
aaa
stos
fisubrs
test
popf
mov
mov
fisubl
das
ljmp
dec
loop
fs
xchg
mov
insl
or
jecxz
stos
popa
clc
pop
xor
cmpsw
fldcw
repz
mov
aaa
test
lods
insl
aad
ss
push
call
inc
push
jg
mov
xorb
sbb
cmpsl
sub
mov
arpl
bound
jbe
xor
pop
cmp
mov
dec
mov
jge
pop
lret
das
push
or
pop
xor
push
fcmovb
out
cmp
ret
sahf
jmp
pop
jp
jmp
jl
xor
push
fcompl
and
mov
rorl
mov
xchg
loope
dec
lods
dec
mov
nop
or
cltd
ret
stc
jp
dec
inc
push
push
das
push
push
popf
sub
stc
out
push
lods
shr
scas
or
lods
and
xor
ss
leave
lods
push
cmp
mov
sbb
pop
push
aad
pusha
mull
pop
mov
pop
mov
jno,pn
out
add
mov
push
bound
and
pop
fsubs
or
sub
push
jns
ljmp
mov
in
or
lret
jae
into
lods
rcrb
ret
pop
ret
cmc
sbb
mov
lret
loop
mov
push
mov
xchg
jge
fwait
cmpxchg
cli
xchg
movsl
fsub
shl
mov
in
jae
stc
aaa
sbb
and
sbb
les
sbb
inc
adc
cmp
xor
jge
popa
adc
cmp
enter
pop
xchg
mov
xchg
mov
popa
in
aad
call
fidivrs
aaa
test
mov
sbb
mov
sbb
das
inc
lret
fists
out
cs
xor
popa
jb
mov
adc
addr16
aaa
xor
popa
lock
icebp
push
push
nop
dec
jns
cld
pop
mov
imul
and
xchg
push
jl
pop
sar
jmp
das
or
sbb
mov
test
adc
movsb
xor
jnp
mov
insl
fnstcw
cmp
jno
push
in
lcall
in
push
sarl
pushf
sub
rcll
sahf
xor
inc
movsl
movsl
cld
and
xchg
fwait
mov
xchg
sub
sahf
and
sub
inc
push
adc
inc
inc
fnop
aad
rcrb
dec
aas
int
into
into
test
int3
into
push
adc
test
push
test
adc
aaa
mov
mov
dec
push
lahf
jo
lcall
mov
popa
loopne
xor
in
cmp
lock
inc
jmp
mov
call
dec
outsb
xchg
lcall
inc
movsl
and
mov
stc
push
xchg
popf
pop
nop
sbb
stc
loop
aam
lods
nop
jns
iret
jl
insb
and
js
pop
dec
mov
xchg
pop
adc
frstor
lods
jae
int
rolb
inc
sbb
xchg
cmp
push
je
sbb
data16
jmp
pop
xor
mov
xchg
inc
xchg
in
xor
xor
test
dec
int3
jmp
inc
test
sahf
and
jne
jns
jb
or
jbe
cmpsb
nop
pushf
xchg
cmp
pop
push
mov
popf
outsb
add
les
xor
push
inc
icebp
mov
out
aad
push
push
jge
or
mov
cmpl
jbe
mov
cmp
ret
cmp
sbb
xchg
rcr
mov
inc
inc
sahf
iret
push
dec
out
push
pop
rorl
rcl
int3
lea
insb
add
out
out
jg
and
pop
in
sub
mov
sbbb
fimull
fstl
add
iret
rorl
push
jge
mov
testb
lret
xchg
addr16
jge
or
xchg
adc
xor
push
adc
jg
xchg
mov
mov
movsb
pop
pop
nop
cmp
sti
test
out
aas
test
inc
xor
cmpsb
mov
sbb
cmpsb
xor
push
jb
dec
dec
jno
and
icebp
xchg
mov
pop
push
push
cmpsl
in
xchg
stc
mov
decl
push
cld
fs
insl
cmp
mov
pop
push
pop
add
sub
out
and
push
xchg
fsubrl
movsl
inc
or
xchg
jno
cmc
repnz
notl
adc
fists
in
sbb
ud2
adc
mov
mov
jp
xchg
push
sub
pop
pop
fdivrs
je
fxch
and
mov
les
pop
inc
sbb
jmp
adc
imul
pop
pop
sbb
fnstcw
roll
or
mov
inc
dec
xchg
repnz
cld
fsubrl
jg
xorl
iret
pusha
out
in
xchg
jmp
mov
adc
mov
mov
mov
je
mov
or
outsb
mov
fmuls
loop
push
shlb
sub
push
rorl
lea
xor
xor
inc
sbb
or
add
add
or
dec
and
pop
dec
cld
adc
mov
or
inc
pop
mov
jb
cmc
repnz
cmp
add
xor
push
jg
out
in
cmp
jle
insb
adc
fcoms
clc
xchg
add
mov
imul
nop
sar
shr
cmp
mov
loop
or
lret
cmp
repnz
cmp
sub
data16
xchg
fdivs
das
leave
vcvtdq2ps
out
mov
jl
and
scas
aad
icebp
push
xchg
xchg
call
fsubrl
scas
sub
dec
test
or
scas
xchg
inc
push
fstpt
jp
aam
inc
cmp
cmc
mov
or
call
xor
xchg
test
inc
lods
pop
inc
cmpsl
shl
fwait
out
daa
inc
jno
and
mov
mov
sbb
jno
sbbl
mov
add
inc
pop
hlt
mov
lods
sub
push
jo
adc
dec
cli
sub
je
test
stc
jge
xchg
hlt
int
pop
iret
movsl
xchg
cli
incl
int
xor
loop
add
je
jge
jo
popf
addb
inc
ret
pop
aam
packsswb
push
sub
imul
mov
in
cmp
cli
push
dec
popl
icebp
sub
out
adc
negl
sti
dec
inc
jnp
sbb
push
aas
and
into
xchg
mov
dec
pop
aas
mov
popf
adc
mov
xchg
sub
sarl
movsb
jne
out
dec
pushf
jmp
ds
into
jno
mov
and
lahf
adc
loop
test
cmc
mov
push
ret
sub
imul
and
push
mov
xchg
pop
test
jge
add
loope
faddl
ds
aam
adc
cmc
add
and
jecxz
jl
cli
mov
neg
jnp
jle
stos
jge
adc
xchg
or
mov
cmp
xchg
cmc
loopne
jmp
cmp
sti
int
ret
push
ffree
movb
pop
push
loopne
xor
mov
inc
xor
pop
cmpsl
iret
subl
in
and
sub
lret
xchg
mov
adc
push
out
push
lret
fwait
cmp
jno
sub
popf
sbb
sub
add
cli
sahf
jge
sbb
fldt
cli
stc
cmp
out
mov
pop
add
jmp
rcr
sahf
or
sbb
push
mov
push
jnp
aas
rolb
scas
test
pop
xor
loope
clc
push
mov
dec
cwtl
sbb
leave
xor
or
mov
outsl
inc
stc
jecxz
out
fdivrl
jmp
inc
adc
outsl
xor
popf
and
adc
or
aaa
mov
les
inc
stos
test
popa
dec
imul
cmp
pop
adc
repnz
or
sbb
sbb
ja
mov
leave
push
aas
xor
icebp
cltd
mov
stc
enter
into
into
mov
mov
adc
jbe
mov
sahf
das
icebp
in
push
mov
mov
dec
xlat
pop
or
call
pop
aad
icebp
sbbb
jae
pop
mov
jne
sbb
sub
pop
rcr
jb
xor
cmpsl
mov
mov
add
cmpsb
sbb
out
into
lock
mov
test
out
lret
insl
fisttpll
adc
es
lods
cmp
push
loope
xor
mov
lock
jbe
pop
cmp
or
data16
jecxz
repnz
push
adc
cmp
mov
cmpsb
pop
xchg
lock
lret
push
push
sbb
nop
or
dec
jb
mov
idivl
int
leave
sbb
or
sub
jecxz
les
xor
sbb
sub
cmp
push
popa
pop
push
push
test
mov
cmp
mov
mov
adc
incl
pop
and
cmp
lret
sahf
xchg
add
xorl
mov
rcl
xchg
int3
lahf
jne
mov
das
and
push
cmp
std
sub
scas
mov
jge
xlat
test
xor
hlt
fistl
dec
inc
or
cmp
cmp
mov
hlt
adc
inc
lock
push
js
xor
mov
iretw
dec
inc
shll
loopne
xor
outsl
add
and
xlat
ret
sbb
cwtl
pop
sarl
dec
jne
jl
mov
fcomp
push
inc
xchg
mov
fiadds
stos
xor
pop
or
jle
js
shll
hlt
ficomps
dec
adc
add
pushl
movsb
fdivp
loopne
lret
call
test
mov
jg
stc
lea
fldln2
scas
icebp
pop
inc
insl
mov
jp
push
cmc
shlb
cmc
jns
movntq
jle
mov
fbld
mov
cmpsb
leave
mov
outsb
nop
ret
repnz
repnz
and
pop
or
inc
fcoml
outsl
ja
movsb
or
call
shll
pop
xor
mov
inc
ds
sub
repnz
xchg
cmp
push
or
test
testb
dec
jb
cs
divl
hlt
mov
pop
xorb
pop
or
fs
jae
rorl
and
sbb
pop
pop
dec
fxch
push
sub
cltd
sub
roll
ret
mov
add
mov
xor
mov
xor
jo
mov
push
or
sbb
sbb
sub
imul
pop
iret
stos
out
xorb
mov
popa
xchg
div
or
ljmp
fs
rorl
stc
dec
cmp
psubw
pop
es
inc
dec
jl
or
xchg
add
jmp
negb
xchg
arpl
xor
sbb
sbb
and
lods
lret
xchg
pop
lock
rorl
incb
fbstp
xor
inc
adc
cs
mov
pushf
pop
sti
xor
hlt
repz
lahf
add
mov
vfrczsd
xchg
or
leave
adc
sub
rolb
dec
fsubrl
push
cmpsl
in
iret
sbb
jecxz
add
scas
mov
push
sub
icebp
sub
cmp
subb
cmp
push
xchg
repz
xorl
notb
lcall
lcall
inc
popl
pop
push
xchg
fldenv
stos
movsl
sahf
scas
nop
lcall
mov
hlt
insb
scas
test
orb
addl
jmp
movsb
call
fildll
stos
sahf
pop
jae
into
dec
sbb
pop
cld
adc
inc
std
sbb
cmp
into
or
mov
mov
pop
pop
in
into
mov
insl
lcall
call
mov
insl
dec
mov
sbb
add
adc
pop
movsb
stos
jg
pop
sbb
pop
ja
jp
das
fdivrl
aas
stc
lea
cmp
cs
repnz
add
daa
sbb
rcll
out
aam
or
cmp
lret
inc
fimull
push
push
xlat
cmp
jne
aas
mov
mov
jns
push
xchg
cmc
testl
xor
mov
inc
xlat
repz
cwtl
aaa
fmul
sbb
and
and
xchg
cmp
sub
or
mov
mov
stos
inc
jo
mov
das
xchg
dec
xchg
pop
enter
cmpxchg
add
push
fldcw
adc
iret
sbb
test
fdivr
sar
xor
inc
enter
push
in
test
imul
or
popf
lods
push
or
mov
pushf
inc
cmpl
sub
mov
lea
scas
push
stc
aam
fisttpll
jle
sarl
cmp
push
inc
imul
lds
dec
push
sub
and
mov
icebp
popa
lods
fwait
neg
jo
ds
call
adc
xor
inc
int
ret
insb
movsb
cld
xor
xlat
movsb
lods
insb
mov
nop
xchg
cmp
mov
les
mov
add
sahf
add
jp
shl
jecxz
mov
clc
mov
jmp
dec
out
sub
mov
mov
cmp
in
std
sarb
mov
dec
push
cmp
cmc
push
and
aas
sbb
fwait
mov
lea
shrb
mov
mov
mov
jno
hlt
sbbl
adc
push
jo
cmc
push
decb
xor
pop
es
pop
cltd
mov
push
loop
add
lds
or
inc
fidivs
dec
xchg
aaa
mov
scas
ljmp
das
xchg
cmp
and
shll
cmc
rcll
iret
mov
or
xchg
or
dec
xlat
add
cmp
cld
aas
pushf
mov
bnd
repnz
ss
sbb
add
adc
mov
lret
pusha
outsl
and
and
inc
lock
jb
gs
loope
mov
and
subb
push
cmp
inc
mov
adc
xor
pop
lock
bound
in
fdivs
fnstsw
lret
or
fcoml
popf
inc
test
fstps
adc
xchg
xchg
adcb
cmpsl
jp
push
jne
mov
jno
xchg
lea
sbb
xor
movsb
lea
push
repnz
movsl
or
fs
movsl
xor
dec
sti
repz
popa
rol
test
ss
sar
shlb
lcall
adc
adc
push
and
jae
mov
push
inc
test
dec
lret
out
mov
push
shll
insl
cmp
loopne
shl
mov
sahf
std
icebp
push
xchg
js
mov
stc
mov
fstpl
xor
xchg
scas
add
add
in
in
cmp
mov
lods
in
jmp
cmp
jbe
xchg
cmp
push
push
ds
and
idivl
stos
xchg
dec
je
mov
hlt
mov
and
dec
mov
jbe
push
pop
dec
ret
sub
sarb
insb
mov
xchg
mov
inc
mov
imul
pop
pushf
mov
mov
aaa
mov
and
iret
rcrl
mov
sbb
pop
das
rcrb
js
jo
loop
adc
rorl
mov
adc
xchg
sub
rcr
test
icebp
clc
sahf
jg
not
dec
mov
sub
lcall
adc
test
mov
sub
sbb
xchg
dec
jne
adc
andb
mov
push
push
dec
js
adc
hlt
mov
roll
xor
movsb
xlat
cmpsl
je
aam
es
and
out
in
inc
in
aam
sub
divl
test
mov
in
add
nop
lret
mov
push
call
jo
repz
jne
add
add
test
push
loop
mov
xchg
unpckhps
addr16
cmovb
sbb
sahf
popf
negb
js
mov
lcall
mov
fnstsw
outsb
out
shr
mov
add
pop
push
arpl
and
adc
pop
mov
adc
pop
sbbl
mov
push
ret
fistpll
jo
lret
outsl
xchg
addl
adc
add
hlt
push
xchg
scas
mov
sbb
fidivrl
leave
xor
js
outsb
sarl
ds
add
outsl
mov
nop
pop
imul
push
in
mov
iret
arpl
add
icebp
cmp
loopne
pop
movups
ret
inc
sub
adc
mov
insb
xlat
rclb
test
in
int3
push
or
mov
push
flds
adc
ficoms
dec
ljmp
push
inc
in
xchg
add
jg
mov
adc
out
bswap
cmp
add
or
add
scas
xor
mov
incl
mov
bound
xor
xlat
stos
xor
dec
mov
dec
addl
dec
jecxz
ds
repz
mov
push
das
sbb
mov
stos
das
rcrl
arpl
and
and
pop
mov
pop
ret
cmp
push
mov
scas
cs
jg
ret
adc
lret
dec
fcomps
fimuls
xor
cmc
mov
in
test
js
movsl
insb
cmpsb
insl
pop
cmp
arpl
ds
mov
add
fistpl
inc
addl
std
popf
pop
cli
rorb
sahf
mov
rorl
sbb
lahf
jo
scas
mov
pushf
mul
cmp
int
add
repz
sub
repnz
mov
pop
in
mov
add
popf
ss
or
cmp
out
int
jp
out
imul
stc
adc
sub
push
jge
cmp
fldcw
sub
xchg
pop
cmc
push
sbb
jb
fdivrs
xchg
mov
lock
mov
aaa
xchg
pop
popf
es
das
xchg
rcr
sub
jne
nop
mov
repz
icebp
movsl
fwait
mov
movsl
scas
js
xor
dec
test
inc
inc
mov
sarl
cli
mov
dec
dec
mov
jmp
cmp
pop
pop
jbe
leave
les
fcmovbe
adc
mov
sub
out
cs
test
cmp
outsl
sbb
mov
lret
fwait
lea
lock
sbb
jnp
sub
fs
xor
inc
loope
adc
cwtl
ret
imul
mov
in
xor
lcall
mov
out
bound
add
pusha
pop
sbb
pushf
mov
pop
cmp
cmpl
sahf
push
fisubs
test
or
xor
movsl
pop
jb
insl
in
inc
sub
in
sbb
aas
pop
and
std
scas
aaa
pop
mov
ljmp
int
negb
test
xor
add
sbb
cmpsb
add
mov
and
push
jmp
adc
les
in
test
test
inc
pop
stos
scas
cmc
popf
cmp
addr16
fnstsw
mov
inc
mov
inc
inc
jmp
movsl
in
push
push
jne
lods
mov
xchg
cmp
push
push
mov
dec
hlt
imulb
jnp
arpl
mov
sbb
pop
ficomps
push
cmp
lods
rolb
dec
adc
sbb
add
popa
inc
jbe
shrb
ja
push
cmp
push
rcrb
xchg
sbb
mov
mov
movsl
xor
fstps
lods
int
lret
test
mov
out
jle
lock
pslld
jne
jo
aad
cmpsb
aad
or
xchg
dec
gs
adc
in
ds
into
pop
sub
pop
rcrb
inc
sub
mov
int3
rcrb
es
ds
in
add
cld
mov
fs
scas
lods
test
xor
sbb
js
mov
ljmp
cmp
xchg
add
mov
pop
mov
popa
stos
mov
mov
xor
xor
mov
pop
xchg
cmp
xor
addl
popf
xchg
add
cld
mov
movsl
jns
dec
mov
test
pusha
fs
mov
test
adc
popa
push
adc
and
in
fs
out
stos
ret
fs
ja
in
lods
jp
insl
mov
adc
mov
cmpsb
scas
int3
sahf
fdivrp
insb
das
adc
enter
das
movsl
mov
pop
int
mov
pop
dec
add
cwtl
or
mov
gs
lahf
adc
mov
sbb
mov
ja
and
dec
gs
cs
add
in
mov
pop
loope
jnp
mov
cmp
sbb
adc
xchg
pop
sahf
xor
sub
and
icebp
cld
xchg
or
lods
and
add
pop
jbe
push
repz
negl
mov
stc
jecxz
jp
add
cld
stos
aad
mov
add
shlb
pop
mov
sub
andb
sub
jb
int
loop
leave
cmpsl
sub
pop
std
xor
or
push
nop
sbb
mov
mov
ror
and
in
popl
sub
lds
fcomps
repnz
mov
push
leave
dec
xchg
ret
stos
cmp
jne
or
xchg
jmp
ss
rcrb
cld
mov
xchg
cmpsb
mov
sub
test
lods
xchg
push
xchg
rcrb
adc
cmpsl
mov
mov
cs
dec
jb
sub
ror
ret
shlb
imul
pop
or
in
xor
rcr
loop
adc
push
mov
mov
sbb
cmp
scas
adc
sbb
loop
sub
stos
jle
sti
xor
vcvtdq2ps
int
fcoml
add
fcompl
or
js
je
push
aaa
push
iret
fwait
mov
cmc
das
mov
rcrb
or
adc
dec
js
cwtl
les
cwtl
sbb
mov
cmc
cmp
negl
cmp
push
and
or
cmp
shr
clc
mov
dec
rcrl
cmp
fistpl
dec
cld
mov
push
test
push
popa
aas
mov
ds
inc
sbb
jmp
jecxz
and
cmp
mov
loop
jo
mov
or
xchg
sarb
fcmovb
ljmpw
insb
je
rolb
je
mov
leave
xchg
out
clc
adc
hlt
jle
pop
push
mov
mov
iret
xor
and
loop
cs
pushf
xor
mov
ss
add
aad
mov
inc
jmp
jns
pop
xchg
bt
addl
insl
push
lret
jg
aaa
repnz
bound
mov
jmp
out
stos
insb
xchg
xor
sub
add
aaa
fisubl
xor
sbb
je
sub
cmp
xor
jle
mov
test
scas
push
add
inc
leave
shlb
and
iret
popa
hlt
lds
push
mov
add
mov
stc
jne
xchg
shlb
scas
ret
push
xchg
add
repz
rclb
xchg
and
or
roll
scas
les
shlb
inc
scas
mov
sub
xchg
hlt
loopne
add
adcl
daa
sbb
inc
mov
fs
std
lahf
dec
pop
js
daa
jno
adc
fisttps
lods
leave
inc
imul
mov
jbe
xor
gs
scas
adc
out
cmp
fwait
test
out
std
loop
mov
fs
lahf
call
outsb
sti
inc
inc
imul
and
in
stc
pop
addr16
enter
sub
in
cmp
add
mov
dec
mov
mov
cmp
cmp
jno
movsl
out
xor
outsb
stos
ss
mov
lock
ret
sbb
outsb
out
jno
sub
cmc
pop
lcall
repnz
jbe
or
cwtl
sub
shll
out
fdiv
sub
sbb
pop
jmp
mov
sub
sbb
pop
sbb
fidivs
lods
int3
jne
dec
jmp
out
das
inc
dec
add
xchg
in
mov
test
sub
nop
pop
sbb
dec
mov
leave
or
push
out
xor
sbb
sarb
mov
pop
pop
sbb
sahf
hlt
rcll
mov
cld
jge
push
std
add
add
aaa
outsb
scas
fldl2t
xchg
cmp
js
xor
rcl
jne
jns
sub
push
insb
fwait
movsb
cwtl
jbe
bound
pop
jb
lcall
std
push
dec
test
cwtl
pop
ret
in
cmpsb
mov
rcrb
mov
pop
rcrl
jae
xchg
jecxz
scas
inc
icebp
jb
cmc
insl
or
notb
ljmp
ret
rcl
push
push
sub
int3
stos
rcl
mov
inc
mov
add
and
das
popa
push
pop
jbe
leave
out
add
fimull
sub
sti
nop
or
divb
mov
cmpsb
repz
arpl
mov
icebp
sub
pop
add
adc
nop
aad
push
xchg
xor
mov
mov
ret
cmp
jbe
jmp
fistl
sbb
sub
pop
push
push
scas
insl
xlat
pop
shlb
leave
sub
ljmp
pop
jno
jbe,pt
adcl
xchg
aas
in
pop
pop
jp
add
sbb
push
sahf
cmp
out
or
pusha
mov
cmc
mov
shlb
sbb
dec
or
outsb
cld
daa
add
or
in
scas
rorl
nop
lcall
sbb
or
sub
pushf
pop
int
sub
sub
add
hlt
jno
stos
insl
lea
jge
das
pop
orl
pop
call
adc
cli
lds
filds
cwtl
adc
popf
sbb
push
mov
jns
adc
enter
push
jle
push
cmp
fcmovnb
aad
imul
sbb
call
dec
inc
xor
shlb
jecxz
arpl
pop
mov
and
je
pop
mov
jnp
out
lahf
or
push
mov
mov
mov
jge
xchg
pushf
leave
movsb
sub
cmp
dec
push
es
dec
addr16
aaa
rcrb
movsb
push
imul
movsb
lret
inc
push
sahf
dec
mov
mov
test
es
and
push
cmp
loop
push
popa
ficompl
pop
out
lods
mov
dec
hlt
je
lret
test
out
push
addb
addr16
jge
xchg
cmpsb
lea
pop
test
push
movsb
xchg
out
outsl
jae
hlt
or
and
xchg
pop
mov
xchg
movsl
xor
jg
lock
jb
mov
push
sub
pop
adc
js
scas
mov
push
mov
mov
xor
xchg
jecxz
push
push
fisttpl
xchg
icebp
xchg
shlb
dec
loop
inc
or
mov
insb
das
push
cmp
fsubr
ja
xor
or
das
cmp
adc
iret
fwait
xor
dec
mov
mov
xchg
jbe
gs
addr16
mov
setle
movb
pop
ja
scas
daa
xor
mov
int
inc
push
lret
jl
shlb
cmpsl
fisttps
test
fstps
lahf
sub
mov
stos
add
or
in
int3
test
call
daa
popf
xchg
xchg
ret
jns
aas
cmpsl
mov
jmp
lcall
pop
push
pop
dec
pop
and
ss
push
inc
adc
cld
xor
hlt
aad
loopne
subb
mov
addr16
fdivrl
dec
sub
push
dec
repz
sti
lret
adc
js
mov
stc
xor
mov
popa
cmp
xchg
stc
ss
ljmp
and
out
test
adc
mov
adc
inc
mov
mov
in
icebp
cmpsl
in
jb
jo
icebp
cmp
inc
mov
insb
mov
rorb
rolb
add
xor
adc
jns
pop
scas
mov
daa
stc
xchg
pushl
mov
inc
mov
cmpsb
pop
pusha
cltd
aad
mov
and
fwait
shrl
and
xorb
dec
mov
mov
adc
sahf
sbb
gs
insl
mov
dec
jmp
mov
xlat
push
aad
daa
insl
inc
fiadds
adc
loop
dec
push
int3
popa
xor
andl
mov
mul
out
push
pop
mov
inc
xor
sub
cmc
mov
xchg
sub
pop
dec
push
pop
imul
mov
movsb
rcl
or
xchg
out
orb
push
ljmp
insl
cmp
push
mov
push
popf
pop
cld
and
jae
pop
stos
mov
push
in
test
or
sub
mov
push
jg
pop
jo
jns
xor
mov
outsb
ja
pop
sub
sbb
xchg
shlb
push
add
fxtract
mov
push
or
add
sub
fldt
into
out
repnz
jp
mov
push
ljmp
inc
and
lods
xlat
inc
stos
int3
cmpsb
adc
std
loopne
arpl
out
ds
or
pop
ret
lcall
cmp
cmp
xchg
jmp
or
adcl
ficoml
shlb
in
out
insb
push
addr16
and
leave
pop
sbb
mov
icebp
pop
jl
imull
push
mov
ds
push
outsl
cld
mov
push
sub
out
loopne
dec
inc
sub
pusha
and
mov
repz
mov
mov
call
pop
push
loopne
fistl
jg
fmull
insl
adc
adc
jo
mov
mov
cmpsb
and
lods
aam
xor
add
shl
shrb
cmp
jle
jne
jle
scas
out
xchg
jg
dec
or
int3
ss
cmpsb
push
sub
sub
ljmp
not
xchg
and
fs
lds
jne
adcl
imul
inc
sbb
loopne
pop
mov
push
adc
ja
pop
addr16
adc
stc
data16
sub
sub
insl
jo
ja
sub
adc
push
iret
cmpsb
cltd
xchg
imul
mov
pop
popa
add
sbb
popf
push
loop
xchg
or
jo
imul
shll
and
imul
cli
out
je
cli
xchg
imul
and
fisubrl
popl
or
xor
insb
out
mov
push
jecxz
inc
bound
fldcw
jle
aad
jle
cld
aas
ja
divl
fs
sub
xor
gs
sub
inc
repnz
pop
insl
aas
test
leave
cli
repz
push
mov
imul
or
icebp
pusha
adcl
lahf
mov
sub
pushf
fnstcw
push
lods
mov
inc
sti
mov
ss
sbb
sbb
sbb
cwtl
xor
push
je
loope
or
sbb
push
push
jle
pop
push
sbbb
add
sub
loope
add
xchg
outsb
push
pushf
mov
bound
jl
sub
push
adc
dec
sub
in
xchg
inc
pushf
inc
test
out
push
push
int3
movsb
sti
push
sub
pop
movsb
mov
mov
shrb
call
into
out
arpl
pop
aad
add
mov
dec
xor
push
or
data16
jne
aaa
sti
icebp
mov
lret
imul
iret
out
inc
lea
adc
iret
mov
popa
inc
cmp
xchg
fcoms
sbb
sub
test
mov
mov
inc
fldcw
fiadds
outsb
xor
daa
call
mov
xchg
adc
pop
addl
mov
xchg
add
push
push
not
int3
stos
cmp
loope
sub
fucomip
add
ror
pusha
cmp
lds
psllq
push
dec
popf
inc
mov
mov
mov
xor
or
faddl
jno
leave
aaa
inc
scas
in
add
test
mov
pop
out
jmp
je
in
in
pop
jae
out
test
xor
adc
imul
xchg
sbb
push
sbb
xchg
add
mov
mov
stc
mov
jmp
xor
sub
add
pop
int3
push
rclb
add
movsl
fs
lahf
loope
leave
mov
xchg
add
sbb
shlb
push
sub
push
mov
out
ja
sbb
or
jnp
fidivrs
mov
jmp
xchg
sub
xchg
xor
cmovbe
jecxz
std
nop
push
dec
jns
movsl
das
dec
adc
insb
pop
adc
data16
cmp
pushf
loope
mov
fidivl
xor
mov
rcr
sahf
xchg
jne
xchg
lods
out
fst
subl
inc
push
test
dec
mov
push
stc
outsl
and
push
xchg
jle
pop
lds
pop
mov
xchg
push
mov
test
loopne
pop
and
xor
and
jb
arpl
mov
decl
cmpsl
jmp
loopne
inc
xchg
pusha
inc
adc
test
movsb
xchg
sbb
jl
in
movsb
leave
bound
or
sti
test
xchg
push
mov
jne
pop
lock
std
mov
and
sbb
jns
in
push
scas
popa
dec
aad
pop
outsl
push
ja
and
inc
mov
jne
sub
mov
jne
dec
inc
or
les
rorb
test
mov
jg
pop
inc
pop
mov
lock
ror
mov
loopne
mov
lret
out
pop
into
xor
mov
xchg
mov
pop
pop
lcall
pop
add
pop
std
mov
adc
jmp
out
fs
xchg
mov
sar
push
sub
pop
and
out
cmp
push
sub
inc
add
outsl
ds
mov
and
mov
movsb
sub
aam
push
adc
mov
fmuls
jle
inc
adc
ret
adc
xor
je
jb
mov
scas
jb
pop
xchg
jmp
rcrb
pop
xchg
adc
sbb
mov
jnp
adc
push
rclb
mov
xor
out
cld
gs
std
cs
repz
or
es
scas
shl
fidivrs
lea
les
pop
sbb
pop
sarl
push
mov
xchg
push
mov
mov
lret
add
inc
rcll
mov
lock
push
inc
lret
mov
stos
in
mov
andl
movsl
lods
push
mov
add
add
mov
cwtl
inc
lahf
dec
dec
sub
lds
in
xchg
mov
jle
ljmp
mov
push
cmp
dec
pushf
inc
out
cmpsl
push
jle
std
test
sub
xor
outsb
pop
aaa
push
or
or
sbb
fwait
pop
adc
dec
push
sub
cmp
cmpsl
mov
xor
push
xor
popl
xchg
sub
rorl
inc
movsl
lea
add
and
movsl
sbb
adc
lcall
and
xor
mov
inc
xor
clc
push
push
js
sub
sahf
call
and
lods
jae
icebp
jae
pop
push
mov
dec
mov
adc
xchg
iret
bound
xchg
mov
sar
xor
lahf
int
mov
setge
ss
sub
fidivs
lods
in
push
mov
push
fdivr
xchg
lods
add
fstpl
test
mov
hlt
rcrb
test
pop
dec
mov
data16
mov
fs
mov
scas
mov
and
pop
sub
or
push
mov
adc
test
movsl
cld
xor
cmp
dec
mov
xlat
dec
xchg
lock
sub
push
in
mov
inc
dec
arpl
adc
hlt
fsubr
mov
fldt
mov
cmp
out
dec
dec
and
icebp
mov
repz
imul
jno
pop
pop
in
dec
into
ds
ja
std
adc
fs
and
pop
fs
dec
hlt
add
mov
call
scas
dec
movsb
pop
or
test
or
pop
insl
mov
adc
fwait
dec
and
adc
or
scas
data16
xchg
inc
in
into
fistpll
fs
ljmp
inc
xchg
xlat
cmp
fdivl
movsb
movsl
mov
pop
mov
adc
lret
lcall
imul
push
inc
sti
js
rolb
sbb
mov
inc
mov
dec
mov
push
mov
insl
test
stos
fldt
sub
jle
aam
xchg
jmp
inc
dec
cmp
xor
cmp
mov
mov
adc
cltd
testl
repz
icebp
adc
adc
fildll
mov
imul
mov
mov
push
loop
adcl
dec
or
fcompl
and
xchg
fcmovnu
int3
jl
bsf
daa
xchg
and
adc
push
mov
in
dec
dec
xor
std
enter
repz
mov
pop
das
mov
xchg
ja
ret
or
push
jne
adc
xchg
hlt
cmp
aad
and
pop
sti
lds
movaps
fimull
xchg
sub
movsl
mov
mov
in
sub
movsl
mov
and
pop
add
push
in
inc
fstpl
push
mov
leave
aas
js
push
js
lods
mov
sub
sbb
push
into
jb
fsubr
ds
mov
call
push
int3
lock
xor
insb
xchg
cld
and
sbb
mov
adc
xchg
mov
lods
rolb
inc
jmpw
jne
mov
and
push
adc
in
or
lahf
sbb
inc
aam
jmp
cmc
lock
mov
cmc
stos
scas
push
pop
mov
repnz
mov
jle
fisttpl
sub
stos
inc
movsl
addr16
push
adc
shrl
in
cmp
stos
imul
push
sbb
dec
mov
lds
cmp
addl
or
test
ds
inc
imul
jl
fwait
adc
mov
mov
add
in
pop
ret
adc
fstpl
cmp
or
inc
test
cli
lock
andl
cmp
cmp
sbb
push
movsl
or
or
fwait
and
arpl
mov
mov
aaa
mov
aam
ljmp
xchg
inc
sbb
add
pop
jno
testl
sub
mov
sub
cmp
or
int3
ja
mov
sub
popa
out
xchg
mov
mov
sbb
dec
mov
inc
dec
push
pop
mov
or
cmp
dec
pop
and
xchg
mov
mov
sbb
das
cmp
divb
outsb
and
inc
mov
arpl
jb
nop
in
cmp
push
bound
inc
fiaddl
in
aam
xlat
popa
cmp
lahf
or
sbb
sub
xlat
mov
cmp
sahf
jg
jno
mov
dec
jne
aaa
dec
gs
xchg
push
ljmp
mov
sbb
sub
add
test
nop
adc
fs
daa
cs
pusha
loop
lds
les
imul
or
icebp
add
adc
sbb
pop
pop
data16
pop
rorb
jmp
test
std
jns
loop
cli
orl
xor
fisubs
xor
sbb
movsl
cmp
push
inc
popf
xchg
sub
ljmp
sbbl
push
nop
call
push
sub
mov
pusha
inc
nop
jne
inc
cmp
test
rclb
xor
push
inc
or
ss
aaa
mov
outsb
push
jb
jmp
xor
loop
iret
adc
std
mov
pop
xchg
mov
or
mov
sbb
add
push
aad
add
jp
dec
cltd
hlt
aaa
adc
mov
adc
pop
cs
sbb
add
jno
jecxz
adc
mov
mov
popa
lcall
inc
fnstenv
lods
sar
mov
xor
fistpll
ret
xchg
out
xlat
mov
sti
mov
sbb
cmp
mov
dec
push
repnz
pop
xorl
or
ror
or
cmp
xchg
rorb
outsl
push
sti
fistl
push
mov
xchg
xor
in
dec
call
jmp
lods
sub
add
mov
imul
arpl
dec
inc
adc
and
lock
sub
fstps
dec
and
call
push
pop
inc
cmp
pop
pushf
mov
adc
add
sbb
pop
or
faddp
jo
jp
xchg
inc
xor
ja
add
fsubs
decl
pop
adc
inc
push
jno
mov
inc
sbb
imul
adc
lret
aam
dec
xchg
sbb
sbb
lock
imul
sahf
daa
dec
dec
outsl
mov
or
sar
loope,pn
mov
or
lods
add
roll
xor
mov
dec
pop
into
js
lret
into
adc
sub
pop
mov
lahf
xchg
or
repz
inc
push
add
and
push
and
sbb
daa
fiadds
insl
adc
sub
orl
or
test
lea
dec
and
fdiv
sbb
sarb
mov
push
lret
mov
inc
fsubl
jns
adcl
inc
aad
pop
dec
jae
sbb
xchg
imul
addr16
std
into
sub
xchg
xchg
and
xchg
cmp
push
inc
inc
cld
jns
push
mov
daa
mov
in
inc
paddq
xchg
outsl
pop
dec
lret
xor
shr
and
cwtl
mov
dec
inc
repnz
add
xchg
aaa
jecxz
iret
nop
inc
jb
shrb
pop
jp
lret
hlt
sbb
xor
sbb
scas
das
and
push
mov
adc
mov
sub
sbb
popa
pop
inc
loope
mov
push
das
mov
insl
xchg
jnp
sbbb
cmpsl
xchg
mov
mov
cmpsb
fstps
jnp
les
les
push
sub
movsb
dec
cmp
repz
dec
ljmp
es
xchg
mov
jnp
nop
adc
mov
mov
xchg
shlb
aas
shrl
imul
mov
pop
add
and
fistps
sti
andb
mov
ret
pop
icebp
xlat
outsb
insb
cmc
xchg
neg
mov
rclb
inc
flds
xor
test
pop
ljmp
ret
shll
fmull
rcrl
inc
sbb
call
push
dec
es
sbb
aad
sbb
dec
dec
xor
xchg
jge
fisubs
clc
cltd
add
stos
mov
push
dec
dec
push
mov
mov
inc
jne
and
jl
test
nop
mov
out
or
cltd
in
pop
push
mov
adc
pop
repz
xchg
ret
or
lds
cmp
lock
add
fnstsw
in
xor
xor
adcl
xchg
push
mov
test
cmp
aad
mov
test
lods
repz
ror
sbb
push
shlb
jb
aam
mov
scas
xchg
sub
add
mov
pop
ret
lods
int
cwtl
sub
mov
repz
cld
ss
mov
xchg
xor
mov
push
jl
push
mov
pop
cmp
in
dec
outsb
cmpsl
sbb
sbb
pushf
cmp
inc
mov
cmc
jbe
jle
jmp
outsl
add
dec
lods
shlb
jmp
fldt
mov
ja
dec
loop
lods
push
cmpsb
popa
xorl
pop
lret
lds
or
add
in
lret
mov
daa
cmp
inc
lods
dec
pop
in
imul
or
es
icebp
xor
jnp
xor
pop
mov
les
adc
movsl
leave
jne
add
dec
mov
cmpsl
mov
test
inc
int
fmull
push
frstor
xchg
inc
lcall
into
xor
in
in
xor
mov
loopne
xchg
xchg
sbb
jmp
add
inc
or
xor
cmp
cli
lds
pop
sbb
sub
sub
or
mov
cltd
arpl
dec
fwait
mov
push
out
pop
les
lret
lcall
jp
es
jnp
popa
xor
xchg
inc
sub
idivl
cmp
and
xor
out
and
jg
push
mov
adc
push
cld
bound
mov
xor
popf
in
test
mov
hlt
inc
stos
lret
jns
push
addb
mov
cltd
sbb
cmp
addr16
jle
lods
lock
jno
inc
mov
jnp
push
mov
test
mov
and
mov
repnz
clc
mov
mov
push
cmc
imul
jecxz
sub
jle
add
inc
insl
sub
mov
inc
js
arpl
mov
mov
mov
sub
insl
push
out
push
imul
popa
sbb
movsb
push
adc
push
and
shrb
hlt
jge
add
mov
push
ret
ljmp
fwait
addr16
es
sbb
imul
jl
add
push
popa
jp
jecxz
loopne
xor
pop
add
fsubs
and
adc
xchg
add
lods
mov
ret
xchg
pusha
inc
push
std
dec
sbb
push
imul
shrl
xchg
adc
jae
aam
cmp
push
inc
aas
pop
test
shll
xchg
stos
pop
and
bnd
xchg
mov
mov
movsb
in
les
and
mov
mov
push
pop
inc
rcll
js
or
xchg
ja
pop
jne
das
ds
mov
inc
jge
aad
lods
inc
or
or
cmc
dec
pop
jle
cwtl
adc
test
shl
jno
dec
out
mov
scas
or
or
xchg
adc
popf
xlat
add
xor
imull
and
dec
gs
loop
hlt
push
cmc
popl
cli
imul
sub
jl
mov
push
pop
add
inc
push
test
iret
ja
addr16
out
test
aam
pop
call
sahf
ss
or
pop
adc
mov
cmp
push
shrb
out
dec
xor
idivl
pop
repnz
mov
mov
adc
in
push
sbb
push
sarl
pop
movsb
pop
in
loope
pop
cmc
shrl
jbe
stos
addr16
lahf
sarb
jle
inc
js
lahf
rcl
cmp
sub
push
inc
sub
sub
fnsave
out
adc
mov
ret
popf
popf
ljmp
es
imul
fsts
mov
push
jb
je
pop
jg
inc
out
and
stos
imul
dec
add
adc
test
mov
mov
cld
xchg
int3
push
mov
bound
daa
or
out
and
mov
fsubl
fisubrs
xchg
sbb
cmp
ret
mov
sub
lret
and
daa
cmc
cmp
xchg
xchg
ficoml
test
mov
push
aas
sub
adc
mov
pop
jnp
adc
mov
mov
out
daa
jbe
lea
out
scas
ficoms
adc
jle
fdivrs
movsb
xchg
mov
es
mov
aaa
clc
dec
fldenv
push
stc
xchg
pop
ret
push
rcrb
adc
lods
call
call
leave
test
fwait
jp
pop
jo
push
or
in
or
je
jl
or
jae
movb
sub
scas
rorb
lahf
pop
xchg
mov
sub
dec
pop
jge
inc
fdivrl
add
adc
push
sbb
rolb
int3
fdivrl
subb
test
cmp
jg
adc
push
pusha
in
shll
and
jbe
push
or
ret
gs
mov
loope
filds
sub
dec
inc
cmp
sar
sbb
mov
rcll
xchg
addl
xor
popf
popf
bound
jb
pextrw
repz
xor
push
mov
cmpsl
test
js
add
adc
fs
inc
push
cmp
inc
jge
inc
or
mov
cmpsl
in
mov
pop
dec
dec
push
add
cmpl
out
mov
cld
add
js
cld
sbb
stos
sbb
mov
xor
dec
inc
scas
and
loope
add
mov
mov
sub
xor
jle
jne
or
or
adc
outsl
stos
mov
out
popf
mov
lcall
mov
xor
clc
jg
or
outsb
into
sub
mov
lea
js
je
xchg
addr16
stos
mov
inc
in
adc
sub
cmc
adc
addl
mov
call
dec
shrb
and
and
sbb
arpl
xchg
lcall
idivb
mov
jae
movl
xchg
mov
lock
fs
jbe
popa
dec
lods
pop
popw
inc
sub
leave
lock
sbbb
push
pop
add
or
adc
xchg
fcmovbe
add
pop
adcb
loopne
and
push
call
in
inc
mov
push
les
dec
jnp
in
xchg
xchg
xchg
sbb
pop
mov
loopne
and
xor
adc
arpl
mov
mov
stc
in
loop
mov
ret
xor
sub
repz
scas
es
cwtl
mov
out
push
and
mov
or
shl
and
aad
and
cmp
jnp
rcll
dec
scas
mov
ret
shlb
out
adc
fwait
addr16
cltd
fadd
fisubrs
andl
stos
jo
and
sub
adc
or
outsl
dec
push
push
dec
lret
pop
test
xor
sub
lods
mov
aad
and
insl
mov
and
xor
add
inc
popf
add
mov
push
lret
movsb
arpl
and
mov
pop
add
aam
mov
push
cmpsb
mov
sub
fbstp
fimull
fmulp
and
out
jp
iret
cmp
movsb
roll
xchg
mov
and
sbb
out
mov
cmp
push
loopne
mov
jmp
push
push
jg
adc
mov
fbstp
stos
out
and
pusha
dec
lea
xor
xchg
push
jg
cwtl
inc
mov
movsb
sub
add
jb
sub
or
or
repz
adcb
xlat
mov
inc
push
ja
dec
xchg
and
jae
sbb
aaa
jno
add
fwait
pop
xlat
add
sbb
lcall
push
sub
mov
pop
daa
jp
sub
jge
cmp
xor
out
lret
mov
lods
iret
adc
out
ror
adc
push
mov
addr16
call
jp
sub
jb
add
fstpt
xchg
add
lock
xchg
xor
xchg
sahf
scas
or
jno
push
dec
test
jge
xchg
adc
sub
popa
ror
ror
loope
stos
or
ja
fs
cmp
test
es
addr16
insl
sub
fiaddl
mov
jbe
xchg
dec
orl
inc
xor
outsl
mov
daa
xor
pop
out
fs
call
add
iret
and
jb
adc
pop
das
mov
imul
pop
cwtl
cmpsl
movsl
fcmovnbe
dec
xlat
and
imul
insb
arpl
adc
or
mov
ss
shrb
jge
lret
sub
dec
aaa
inc
mov
test
fsubrs
inc
mov
xchg
fldcw
mov
enter
fidivrl
test
dec
stos
sbb
aad
inc
test
aam
test
lcall
jl
cmp
jne
sbb
push
movsb
call
sub
jne
clc
jnp
or
and
sbb
aad
aad
cmp
adc
mov
xor
xchg
mov
mov
pop
test
adc
icebp
mov
jno
mov
fidivs
in
std
imul
jg
pop
cmp
mov
fcoml
into
cmp
dec
add
cltd
mov
pop
and
repnz
xor
shlb
add
test
fwait
jmp
jno
and
lods
andl
mov
jmp
push
mov
insb
sbb
pusha
jno
dec
jb
adc
clc
jl
adc
and
mov
adc
jp
mov
mov
xchg
in
inc
xchg
inc
loopne
dec
sub
inc
adc
dec
inc
stos
iret
icebp
jae
das
jg
hlt
gs
sbb
jmp
sub
sub
daa
stos
cmpsb
gs
mov
movsl
cwtl
jmp
loopne
loope
out
sbb
mov
or
xchg
add
and
jbe
sbb
sub
sub
stos
int
pop
mov
fdivrl
cltd
inc
movsb
bound
jns
mov
cmp
push
cwtl
lds
inc
jle
and
sub
inc
aaa
xor
add
loope
adc
pop
inc
xchg
mov
mov
cmp
out
mov
das
jp
orb
in
loopne
adc
add
xor
xorb
lahf
sub
xor
xchg
xor
jecxz
rolb
aaa
sbb
cmc
mov
subl
or
adc
pop
scas
lret
cmp
lahf
pop
mov
subl
enter
add
icebp
jmp
push
sbb
inc
sbb
lods
or
mov
imul
loop
add
xchg
divb
das
sub
sbb
sub
mov
pop
and
leave
aam
stos
scas
cmp
cmp
or
adc
shlb
scas
subb
push
push
lcall
js
sub
ret
add
lock
adc
ret
cmp
dec
fistps
pop
sbb
insb
rcrl
fwait
cmpl
cmpsb
shrl
mov
inc
and
fcmovbe
inc
sub
pop
jl
mov
mov
mov
aas
daa
js
sbb
pop
je
and
fsubl
jecxz
push
mov
subl
pop
mov
pop
lea
lods
repz
es
jns
movsb
ret
push
roll
pop
sbbb
dec
stc
push
fistps
fnsave
xchg
les
aam
mov
cmp
sbb
jg
push
adcl
inc
inc
inc
into
movsb
xchg
jge
pop
dec
sbb
xchg
imul
ret
add
cld
loope
out
sti
lret
addr16
mov
jno
lock
pop
sbb
mov
push
loope
adc
scas
dec
fwait
leave
xorb
cmp
fs
outsl
pop
or
mov
push
daa
clc
shlb
mov
popa
shlb
jne
adc
xor
dec
pop
jne
mov
mov
into
sbb
das
mov
into
mov
xor
xchg
ljmp
in
push
mov
lods
cmp
jecxz
pop
pop
dec
xchg
cmp
jns
xchg
mov
mov
or
imul
dec
cmpsb
or
jno
inc
insb
mov
pop
xchg
push
arpl
pop
adc
dec
rcrb
pushf
iret
popa
movsb
aas
repz
mov
gs
jmp
inc
js
cmc
push
mov
sbb
xchg
icebp
scas
mov
out
mov
addr16
bnd
inc
jns
add
int
mov
cmpl
sub
mov
lods
and
sbb
push
mov
out
jb
cld
mov
add
jnp
cld
subl
mov
psadbw
in
cwtl
adc
test
imul
cs
add
cltd
dec
scas
adc
js
outsl
test
outsb
enter
outsl
aas
dec
enter
add
outsb
out
and
xor
pop
jo
mov
jbe
push
pop
outsl
jns
loopne
inc
xor
lret
push
adc
sub
mov
add
sbb
push
fistps
xchg
cmp
je
loopne
gs
pop
cmpsb
clc
stos
clc
sti
flds
lods
mov
add
push
add
movsb
xchg
or
in
push
sbb
in
mov
cmp
insb
xchg
imul
imul
and
xor
mov
xorps
ret
pop
notl
gs
inc
pusha
jno
inc
stos
js
mov
jle
repz
mov
imul
add
pop
mov
cld
fnstcw
icebp
ss
outsl
mov
cmp
add
xor
andl
jge
adc
fmul
sti
lds
leave
cmpsb
jne
mov
insb
lock
xor
in
jmp
negb
bound
lods
or
hlt
test
out
jecxz
enter
shl
xchg
mov
jmp
ret
sub
sub
jnp
adc
sub
mov
sub
add
cmp
and
int
ret
icebp
mov
daa
pop
into
ds
aaa
popa
fldl
adc
or
push
xchg
aam
add
mov
enter
icebp
inc
decl
mov
or
fwait
scas
pop
pop
loopne
pusha
pop
and
or
mov
scas
mov
push
add
mov
in
push
pop
inc
cli
mov
cmpsl
jl
jno
sub
mov
sarl
lea
sti
out
jge
mov
imul
cld
dec
arpl
pop
mov
arpl
xchg
inc
mov
dec
push
jle
lods
js
cld
add
push
mov
adc
mov
mov
daa
sub
xchg
mov
mov
jg
dec
shl
mov
inc
cld
adc
rolb
mov
xlat
popa
push
add
cltd
and
pop
and
add
lret
sbb
incb
xchg
jb
add
cmp
mul
rcl
es
mov
test
mov
hlt
nop
ljmp
ljmp
pop
mov
mov
ficompl
push
sub
outsl
pop
dec
xor
aam
lock
loopne
push
push
das
mov
adc
add
mov
sbb
loop
cltd
jmp
fwait
test
push
xchg
sub
cmp
clc
inc
lea
imulb
ffree
push
jmp
cmpsl
lret
jp
lea
lds
sbbb
scas
mov
push
or
mov
lds
aad
negb
cmp
into
outsb
xchg
loopne
xchg
mov
push
negl
dec
test
ja
cmpsb
push
xorps
fcoml
loop
push
adc
insl
push
mov
push
push
mov
or
mov
js
or
imul
mov
fnstcw
xchg
inc
cmp
and
jge
xchg
xchg
xor
lcall
cltd
and
push
idivb
lcall
mov
lahf
scas
fsubrs
daa
decl
pop
inc
loopne
xchg
sub
cmp
inc
int3
cmpsl
ret
jo
inc
xchg
mov
mov
or
dec
cltd
adc
xchg
push
cli
push
cmp
sbb
mov
mov
mov
fsubl
popa
push
cld
movsl
clc
jns
sub
push
jnp
mov
jge
cmpsl
out
or
inc
test
push
icebp
lods
lods
ror
cmpsl
sub
insl
lea
cmpsl
shufps
dec
dec
cmp
dec
mov
mov
pop
xor
daa
adc
fcoms
out
mov
or
fs
nop
fld
mov
or
lahf
rclb
adc
dec
mov
adc
pop
popf
lods
sub
mov
mov
out
xor
or
or
xchg
filds
daa
xchg
popf
mov
sbb
xor
jae
push
nop
pop
daa
les
in
or
xor
insl
pop
test
jnp
mov
std
or
xor
orb
pushl
jne
push
cli
bound
cli
xchg
xchg
add
pushf
jnp
xchg
mov
nop
cmpsb
daa
xor
cwtl
bound
add
xchg
push
fwait
aam
adc
mov
cld
add
jnp
arpl
adc
pop
push
gs
movsb
add
xor
push
inc
out
test
cltd
dec
push
sub
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
lret
imul
xchg
xchg
cmc
cmpsb
mov
or
out
inc
or
and
sti
xor
fisubrl
dec
inc
add
cmp
mov
popf
add
add
jnp
dec
flds
mov
gs
fisttpll
inc
and
cmpsl
fidivl
sbb
jbe
stc
sub
jecxz
into
ret
inc
mov
mov
jns
mov
and
iret
jecxz
scas
mov
push
mov
mov
je
pusha
jp
shrb
enter
add
fcmove
pushf
push
jns
and
xor
test
in
xchg
mov
push
pop
xor
mov
jb
xchg
or
mov
mov
pop
lods
mov
cltd
add
test
aaa
pop
call
loopne
mov
adc
out
xor
hlt
dec
out
and
and
roll
cmp
xor
aaa
pusha
xchg
sti
add
sub
mov
nop
push
push
or
push
inc
lods
lock
and
data16
daa
push
test
lods
xchg
test
adc
ja
fnstcw
cmpsl
cltd
inc
outsl
dec
xor
shlb
popf
popf
arpl
inc
adc
jno
jg
nop
lret
cmp
test
mov
xchg
loop
ss
insb
insl
gs
xchg
incl
mov
lea
and
and
jl
sbb
cmp
add
test
mov
ret
xchg
notl
test
mov
push
jge
test
out
dec
repnz
sub
pushf
negb
fldcw
fnstcw
fcoml
jne
ja
jae
adc
nop
inc
or
add
ret
xchg
dec
mov
mov
ja
fnstsw
outsb
icebp
cwtl
push
inc
aad
sub
mov
inc
test
mov
cld
add
xchg
pop
pop
stos
sbb
push
xchg
jb
add
popa
out
mov
mov
sub
mov
mov
outsl
gs
inc
dec
pop
pop
jle
jecxz
pop
test
sbb
movsl
into
jg
into
mov
mov
inc
pop
fmull
xchg
lea
pop
adc
pop
shr
in
adc
lds
adc
andl
ret
fld
ljmp
add
add
out
cmp
xor
xor
outsb
xor
xorb
sbb
mov
ret
adc
cmp
mov
xchg
js
mov
das
sub
in
inc
aad
test
std
shrl
push
int
mov
cmp
mov
std
or
jmp
movsb
jmp
shlb
es
xchg
test
add
scas
pop
lods
pop
mov
sub
cmpsb
pop
lahf
jge
pop
loopne
call
mov
ret
adc
movsb
mov
sarl
int
mov
cmc
fwait
mov
sub
jb
jle
cmp
dec
push
sbb
rcll
xchg
sbb
push
fildl
movsb
or
pushf
rorl
in
xor
cmpl
pop
sub
arpl
in
pop
mov
cmp
fdiv
fbstp
pop
sbb
mov
movsb
insb
lret
or
aad
popa
iret
pop
inc
jge
hlt
jne
imul
mov
mov
aam
dec
dec
jl
ret
setg
jp
scas
int3
je
int3
fidivrs
rolb
sbb
xor
loope
jge
andb
push
sub
fists
mov
xlat
stos
outsb
dec
jmp
xchg
mov
pop
loope
push
ja
iret
outsl
sti
xlat
or
push
dec
push
inc
mov
mov
test
cmpsl
mov
cmp
sub
aad
or
xchg
adc
rcrb
mov
testl
scas
imul
cs
push
or
sbb
arpl
jno
lods
mov
loop
bound
inc
movsl
pop
pop
mov
repnz
mov
and
stos
ljmp
mov
cwtl
xchg
add
dec
out
or
pop
cli
repz
test
loope
xor
scas
adc
sti
imul
jmp
sbb
mov
mov
xchg
repz
addb
int
imul
and
fs
or
lods
cli
shlb
jg
or
fldlg2
sbbl
iret
xlat
sub
xchg
xchg
mov
fdivrs
lock
push
subl
in
ljmp
and
inc
negl
and
imul
lods
push
cmpsl
sahf
and
jnp
jmpw
mov
mov
and
dec
fdivs
or
cli
bound
ljmpw
push
or
and
sub
sbb
das
add
out
mov
mov
lret
mov
jge
sti
sbb
insb
adc
or
aam
mov
add
sbb
iret
arpl
shrb
add
inc
arpl
ret
xor
cmovge
aas
fldenv
inc
dec
iret
sub
repz
pop
jmp
xchg
stos
and
adc
les
mov
loopne
adc
loope
out
popf
jae
enter
mov
push
adc
aam
xchg
push
sbb
test
pop
int3
inc
jge
daa
orl
lods
sbb
repz
cmp
sti
jmp
add
inc
bound
in
repz
push
mov
and
dec
add
rcll
rcll
cmpsb
cmovno
mov
dec
and
xchg
push
push
mov
inc
and
aas
mov
cmp
adc
xchg
push
in
xor
frstor
scas
loope
mov
pop
mulb
dec
jbe
dec
movsb
fstl
loop
or
pop
gs
popa
out
mov
bound
xchg
aaa
nop
sub
ror
into
insl
pop
xor
andb
rclb
inc
pop
daa
mov
call
mov
lcall
inc
pop
ss
lds
clc
test
movsb
popa
ficoml
lock
faddl
dec
lahf
fnstsw
xchg
xlat
dec
sbb
aaa
mov
fnstsw
outsb
xchg
jp
pop
cmp
and
das
mov
push
pusha
cmc
cmp
fidivrl
xchg
subb
loop
push
iret
inc
xchg
jne
enter
fbld
adc
xor
hlt
jg
sbb
pusha
leave
sub
and
ret
add
xchg
jbe
xor
stc
sub
ss
test
enter
jns
inc
repz
gs
sbb
mov
pop
mov
pop
cmp
repz
hlt
pop
ja
sbb
xor
sbb
stc
imul
cmovb
ret
sub
and
xchg
cmp
sbb
orb
fsub
xchg
mov
sbbl
lds
aaa
adcb
dec
xchg
ret
and
jmp
or
enter
cmp
mov
cmp
jle
sbb
mov
ja
jne
xor
pop
popf
dec
jge
mov
jns
enter
mov
cmpsl
ret
push
mov
notb
aam
sbb
jae
das
daa
dec
fwait
cli
dec
ja
cli
add
pop
mov
ds
cmp
jo
mov
insb
ja
xchg
jno
or
jp
xor
je
mov
sbb
push
imul
out
out
es
push
push
sub
push
sti
outsb
movsl
sbb
lahf
mov
outsb
aad
arpl
sbb
rcl
insb
ficoml
mov
test
or
or
push
push
vcomiss
lret
mov
popf
jl
adc
inc
adc
mov
xor
push
push
popa
sahf
dec
add
ja
mov
sbb
cmp
jecxz
mov
aas
je
jge
mov
imul
xchg
lock
pop
mov
cmc
push
xchg
clc
pop
es
add
imul
lods
cmp
fs
iret
outsb
cmp
jge
mov
in
jno
inc
sbb
pushf
mov
outsl
out
arpl
jle
add
jae
mov
or
scas
mov
add
dec
pop
int3
bound
aas
nop
adc
enter
push
or
dec
adc
cmp
or
cmp
pop
xchg
shl
adc
mov
and
pop
or
xchg
sbb
in
testl
cmp
ja
iret
sbb
test
dec
out
call
inc
xor
lcall
jno
push
adc
pushf
dec
adc
rcr
outsl
and
lods
add
scas
mov
aas
pop
xor
jg
in
insb
dec
loop
stc
mov
lea
bound
stc
pusha
jbe
sub
ss
or
aam
mov
cs
add
mov
dec
dec
xchg
add
int3
mov
int3
dec
pushf
inc
outsl
push
pushf
cmp
sbb
jo
aas
popa
cmp
imul
shll
xorl
mov
and
pop
pop
adc
mov
arpl
mov
pop
jmp
cmp
pop
pop
add
xor
lods
test
sub
stos
subb
xchg
shl
jmp
add
inc
pop
pop
inc
bnd
jle
jnp
pushf
in
popf
mov
enter
push
pop
mov
pop
jecxz
stos
ss
pop
shll
push
fldenv
mov
push
cmp
mov
cmp
xchg
push
int
adc
jo
xchg
addl
xor
out
jae
movsl
nop
cmpsl
mov
ffree
push
enter
mov
or
icebp
leave
roll
insl
pop
push
pop
xchg
lcall
filds
lds
push
call
cmpsl
jmp
sbb
dec
mov
sub
jb
dec
mov
mov
mov
cmp
add
mov
cmpsb
dec
push
out
adc
mov
loope
in
jns
push
cmp
adcb
mov
ret
imul
or
mov
rcrb
gs
add
push
aam
push
insl
repz
lret
scas
pusha
xor
xchg
cmpsl
arpl
mov
sbb
push
xor
shlb
pop
sbb
push
stc
jo
fisubl
arpl
addr16
out
dec
sub
dec
cmpsl
lods
pop
out
js
je
add
inc
mov
repnz
xchg
lea
add
cmp
xor
out
mov
lods
cmpsl
cltd
out
pushf
call
adc
jo
push
aas
cmp
frstor
cltd
push
mov
icebp
mov
push
out
lret
aas
xchg
cmp
outsb
pusha
push
ja
add
orb
xchg
les
and
xchg
mov
fbstp
in
inc
mov
sub
xchg
xor
ss
lret
mov
test
adcb
adc
adc
push
mov
int3
jnp
lods
rcrl
lods
inc
xor
jne
inc
xchg
mov
mov
sub
lea
push
stc
or
std
pop
mov
mov
mov
push
dec
int3
or
ljmp
fcoml
cmp
dec
jmp
adc
fs
adc
loop
xor
mov
imul
lcall
lea
iret
adc
sub
int
mov
inc
push
mov
fdivrl
out
test
loop
push
push
and
jl
adc
sbb
daa
cli
xchg
repnz
cmp
das
aam
mov
roll
mov
xchg
test
test
jno
fcmovnbe
sbb
mov
gs
xorb
repnz
rorb
in
mov
inc
fstps
imul
mov
iret
faddl
jl
jb
lods
test
sarl
loope
jno
call
cmp
xchg
mov
xor
sbb
lock
push
ja
test
mov
cmc
sarb
fldt
into
pop
push
ficomps
pop
jecxz
popf
lock
inc
inc
mov
mov
testb
test
insl
mov
cwtl
in
xor
pusha
mov
push
sub
testb
test
and
inc
xor
iret
and
loop
in
inc
push
or
push
mov
push
out
add
popa
les
sub
out
jb
fnstenv
mov
inc
mov
pop
cli
hlt
mov
fwait
pusha
outsb
aad
sahf
out
jle
mov
insl
in
mov
pop
pop
pop
sahf
out
mov
or
and
dec
and
lret
and
aad
out
pop
out
adc
outsb
cmp
or
les
jle
icebp
jnp
ja
mov
jecxz
loope
sahf
cmpsl
movsb
icebp
fdivl
cltd
xor
push
cld
jb
mov
add
in
gs
pop
orl
xor
or
pop
fidivrs
push
dec
cmp
pop
pop
xchg
pop
out
jl
mov
add
in
jle
mov
cmp
and
imul
push
sahf
jnp
sbb
inc
adc
add
add
and
and
dec
aaa
in
ret
sbb
xchg
jns
xchg
cmpsl
push
xchg
or
mov
inc
mov
and
push
aam
fbstp
push
jge
fbstp
push
inc
cmp
sbb
jg
into
jmp
stos
xchg
cld
jno
adcl
sbb
cli
xchg
out
loop
xchg
pop
add
insb
sub
arpl
and
mov
jns
iret
jge
out
test
cmc
add
add
mov
enter
sub
push
mov
pop
and
mov
pop
rcrl
jmp
push
stos
ret
movsl
add
xor
fxtract
fdivl
fistps
fs
ret
scas
push
loopne
fbstp
in
popf
test
add
sti
jo
dec
iret
mov
js
in
push
lods
adc
aam
and
mov
mov
push
dec
js
dec
cmp
mov
jno
push
insl
lret
ja
add
mov
add
nop
clc
loop
mov
xor
enter
add
cs
sbb
add
lret
jae,pn
push
fcoml
fsubrs
fs
stc
jbe
push
iret
and
xor
cmp
cmp
mov
scas
loop
xor
movsb
insl
loop
loop
adc
enter
scas
jecxz
jmp
leave
mov
sub
pop
sbb
mov
mov
sub
shlb
ror
push
dec
xchg
rcrb
cs
lods
movsl
roll
ljmp
ja
mov
cli
testb
arpl
es
sub
add
cmp
jp
aas
mov
scas
adc
dec
pop
cmc
mov
cmp
xchg
jb
and
fwait
out
xlat
pop
mov
or
dec
or
mov
and
or
jp
xor
mov
sbb
mov
lret
jne
jne
cmp
xor
fs
xchg
in
xchg
xor
lret
imul
push
mov
inc
inc
xor
in
dec
add
ds
lea
out
das
dec
adc
lret
mov
popf
or
in
jmp
fnsave
sbb
js
push
mov
jo
mov
jne
fistpl
and
fildl
lea
fwait
leave
dec
insl
subl
push
xchg
dec
pop
cmp
dec
aam
dec
aad
outsl
jge
inc
jmp
out
lret
and
and
dec
arpl
enter
aas
xchg
jno
mov
fs
jp
inc
jg
call
xor
push
dec
and
lds
push
lods
scas
jne
not
adc
mov
mov
xor
push
xor
or
and
int3
push
and
cmp
fbstp
or
jbe
popa
cmp
outsl
cli
push
stos
xchg
iret
dec
and
push
aaa
jecxz
repz
stc
in
in
loope
bound
add
pop
lahf
and
imul
and
pop
push
adc
in
sub
dec
in
daa
push
lret
sub
mov
and
int
pop
outsb
cltd
insl
cmp
es
fisubs
sar
sbb
xchg
push
cmp
push
dec
mov
hlt
dec
inc
ret
or
js
xchg
push
mov
xchg
cwtl
mov
pop
dec
dec
imul
aaa
mov
cli
xlat
cmc
in
popf
or
lods
les
or
and
and
fsqrt
shlb
aas
fdivrs
repnz
mov
inc
jl
shll
rorb
sub
jno
lock
dec
addb
dec
jl
sti
push
incb
push
and
lahf
xchg
mov
cltd
adc
mov
mov
push
push
jnp
mov
in
mov
fs
test
mov
xchg
scas
fdivr
mov
xor
test
mov
pusha
js
or
outsb
pop
out
mov
adc
mov
jge
mov
xor
dec
jge
lahf
ficoms
sahf
xor
mov
jmp
int
imul
ret
dec
inc
mov
rcl
or
add
mov
in
cmpsl
or
dec
sbb
pop
inc
cs
dec
inc
stc
mov
sub
rcl
pusha
scas
fstpt
cwtl
push
cmpb
push
lock
or
lahf
push
mov
jbe
scas
aaa
int3
xchg
dec
mov
lods
loopne
mov
mov
in
sub
pop
add
mov
push
in
adc
jle
pop
push
lcall
dec
enter
lods
sbb
jp
xchg
iret
xchg
mov
sbb
push
pop
inc
movsl
addb
clc
jne
in
test
mulb
jae
clc
pop
cmpsb
repnz
push
xchg
test
pop
cmc
inc
inc
and
outsb
jne
bound
ficoml
aad
mov
sbb
test
repz
jl
dec
cmpsb
mov
mov
imul
mov
cli
mov
dec
jae
jae
mov
or
or
jbe
loop
inc
movb
mov
sub
xor
mov
lds
inc
shl
sbb
pop
mov
and
dec
inc
sarb
fistl
fwait
push
testl
daa
add
or
leave
jl
dec
mov
rclb
rol
mov
lss
xchg
pusha
mov
pop
out
cli
cmc
leave
ljmp
les
sbb
jle
test
push
pop
loop
pop
push
mov
mov
lods
pop
jmp
into
push
pushf
mov
fcoml
std
and
sbbb
pop
rcl
sbb
mov
cwtl
movsb
ret
inc
mov
repz
cmp
ss
inc
imul
xor
push
and
nop
leave
push
ret
sub
jecxz
sub
divl
push
cmpl
add
lock
or
das
imul
dec
xor
outsb
lahf
std
mov
jp
in
push
popa
stos
andl
fstpl
fisttpl
out
cmp
push
xlat
xor
lock
imull
push
cmc
inc
ret
mov
sub
xchg
fmul
repnz
mov
mov
xor
mov
lods
and
add
push
fidivl
imul
das
or
push
sbb
arpl
cmp
xor
cmpsb
pop
mov
jno
push
or
movsb
mov
into
inc
push
mov
inc
idiv
xchg
jo
stos
jp
xor
xor
cs
mov
aaa
jg
mov
cmc
mov
cltd
lods
adc
fnsave
es
out
cmp
in
fcompl
ror
add
cmc
cmp
pop
jnp
loopne
cvtpi2ps
mov
add
icebp
jb
mov
fistl
test
into
xchg
xchg
ret
ljmp
mov
pop
sbb
and
out
shrb
sarl
mov
xlat
loope
jmp
loope
mov
dec
addr16
or
sub
push
movaps
sub
ds
inc
jmp
and
jb
dec
xlat
sub
jp
test
call
and
dec
and
push
lods
xchg
popa
pushf
xor
jno
inc
fistps
fstps
int3
mov
inc
xor
sbb
mov
mov
scas
inc
arpl
pushf
fsub
data16
dec
sbb
dec
orl
cld
sub
es
jno
outsb
xor
xchg
js
test
fs
cltd
and
mov
xchg
inc
cmp
push
pusha
dec
call
mov
sbb
cmc
sub
push
in
mov
jae,pn
cmp
rep
inc
fwait
mov
or
xor
ja
adc
mov
mov
cmp
xchg
and
je
xchg
mov
sar
xchg
dec
xchg
rcr
mov
dec
mov
dec
ljmp
ljmp
xor
dec
cmpsb
stc
add
std
js
jo
ljmp
push
test
iret
adc
push
cmp
jge
negl
es
xchg
and
adc
pop
fbstp
sub
adc
mov
mov
mov
mov
mov
inc
aam
inc
sub
mov
pop
jo
cmp
add
ss
mov
dec
and
aam
jmp
mov
push
sub
lods
in
repnz
lods
cmp
inc
jns
or
ror
fsubrs
jmp
jbe
divl
scas
cmp
mov
cmp
adc
jbe
inc
jno
or
sti
imulb
int3
fisubrl
jno
fisubrs
xchg
mov
xlat
xlat
add
mov
aaa
sub
out
adc
push
sar
push
and
icebp
popa
cmpsb
cmc
ret
lds
sub
int
xchg
push
cmp
mov
mov
es
insl
xor
cltd
xor
inc
adc
sti
les
fmull
xor
push
test
les
in
movsl
stos
rcrb
pop
stc
mov
lea
push
aaa
add
mov
cmpsl
js
xlat
mov
es
push
das
add
mov
xchg
mov
inc
inc
or
and
bound
test
mov
add
insb
cmp
pop
cmp
inc
mov
repnz
cs
inc
lahf
cmp
push
test
sub
fidivrl
fisttpll
loop
or
mov
push
mov
push
jne
cwtl
xor
ljmp
mov
inc
adc
mov
and
shl
push
out
sbb
cmp
stc
inc
xchg
push
sbb
jno
jmp
decl
mov
mov
stos
pusha
std
xchg
mov
iret
hlt
test
jnp
push
xor
orb
lahf
fstps
fistps
cltd
cwtl
inc
dec
push
pusha
lret
add
nop
cmpsb
push
gs
add
pop
out
in
pop
mov
outsl
sbb
jl
in
mov
pushf
or
pop
loop
cmp
cltd
cltd
mull
lea
test
or
add
xchg
cwtl
xor
pop
ljmp
mov
into
std
js
or
adc
xlat
adc
adc
add
push
hlt
loop
mov
pop
mov
gs
pop
pop
insb
std
push
xchg
push
rolb
xchg
lds
test
mov
sub
sub
sbb
loopne
pushl
pop
ret
lods
pop
mov
push
rcr
sbb
cli
aaa
or
push
shrl
ja
push
repz
std
xchg
xchg
xchg
add
pop
stc
and
and
ret
sub
andb
out
xchg
and
add
mov
test
or
pop
adc
mov
imul
xchg
int
mov
aaa
push
std
sub
xchg
lss
inc
jge
pusha
aas
lods
pusha
addl
das
inc
rcrb
add
aad
cmc
inc
cli
and
push
jle
push
stos
fldl
lea
mov
pop
mov
daa
std
daa
add
sbb
mov
movsl
pop
ret
mov
xchg
testl
jle
sub
jnp
lea
lods
and
sub
push
cmp
sbb
wbinvd
std
pop
dec
shll
push
int
mov
and
cmpsb
imul
ret
sahf
dec
mov
mov
mov
jg
pop
cli
test
pop
scas
sti
xchg
adc
inc
insb
or
xor
dec
divb
andl
int3
sti
mov
fs
fiadds
mov
divl
pop
jl
sti
stos
mov
addr16
stc
les
mov
dec
ret
mov
mov
and
mov
fucomi
cltd
xchg
jecxz
nop
sub
xchg
out
xor
sub
aas
lea
mov
xchg
sbb
idivb
lods
popf
add
mov
fisubrl
mov
sbb
pusha
out
add
scas
push
and
leave
sub
mov
gs
stc
pop
imul
pushf
mov
cwtl
xor
xchg
cmpl
fildll
pop
xchg
dec
mov
xlat
lea
gs
mov
push
adc
in
insb
loop
notb
and
adc
sub
bound
mov
add
aaa
fnsave
cmp
popa
adc
iret
lods
inc
xchg
cmp
sub
scas
adc
lret
shll
mov
push
mov
fld
nop
jae
push
and
leave
test
lret
outsb
or
mov
test
adc
cltd
sub
cmpps
lds
nop
lret
add
inc
dec
stos
lret
and
shll
cmp
xor
les
jbe
jg
stos
cmp
test
cmp
leave
adc
and
add
pop
stos
or
test
inc
jb
lds
sbb
dec
rorb
lcall
cmp
pop
mov
mov
xchg
pop
clc
dec
and
mov
ret
cmp
es
jne
jg
aas
mov
int3
icebp
cmc
and
fs
ds
insb
mov
or
push
dec
insb
mov
mov
push
rorl
cltd
add
mov
cmc
fldcw
lock
outsb
push
xchg
inc
inc
es
mov
in
jae
sub
les
loope
shll
jne
repnz
out
add
xchg
push
mov
fwait
leave
imul
inc
imul
sbb
fs
mov
inc
sbb
sbb
fstpl
pop
jle
xor
ja
int3
mov
mov
sub
ret
inc
xor
cmp
out
pop
lahf
mov
mov
adc
sti
fucomi
sub
push
cld
aad
fsubrl
or
sar
and
iret
int3
mov
stos
ss
popa
out
cmp
cmp
call
data16
cs
iret
shll
in
push
rolb
cli
adc
sbb
jle
ds
fwait
mov
mov
pop
mov
movsb
push
pop
mov
mov
lret
xchg
packsswb
adc
addb
out
pusha
and
cmp
fsubs
pop
dec
push
lods
scas
add
addr16
test
xchg
sbb
cmp
jae
in
lea
mov
movups
xor
rorb
mov
test
aaa
std
mov
stos
mov
pop
adc
je
decb
out
std
sbb
test
pop
ss
xor
add
mov
cltd
pusha
fbstp
xor
movsb
daa
fimuls
rcl
mov
stc
push
fs
adc
pop
mov
xchg
mov
xchg
cld
inc
pop
push
jno
and
lea
ljmp
popa
jns
inc
pusha
aaa
mov
rol
xlat
dec
cmp
sets
stc
cli
setno
sbb
push
bnd
in
jge
psubsb
cs
je
xchg
jo
fldcw
dec
lods
fadds
mov
enter
xlat
sub
daa
push
dec
ljmp
paddw
inc
mov
imul
push
mov
mov
and
sbb
sub
jp
add
fwait
aas
adc
fisubrs
xor
aam
loope,pn
lods
mov
out
iret
mov
push
xchg
loop
cmp
pop
or
add
mov
test
cmp
mov
out
daa
push
xorb
dec
cmpb
mov
imul
sub
popf
shr
imul
inc
cmp
daa
icebp
xor
pushf
daa
je
bound
cmp
dec
and
outsb
lods
add
or
int
mov
jecxz
pop
out
imul
int3
xchg
lea
in
jg
js
jne
popa
stos
jl
stc
and
out
lods
cmp
out
pop
sbb
fstpt
call
rorl
push
dec
push
xor
outsb
shll
daa
rcll
adc
lcall
pop
or
rolb
pusha
scas
ficoms
or
xchg
popf
dec
insb
rorl
jp
cmp
or
inc
mov
pop
sbb
rorl
jecxz
pusha
jge
fidivrs
stc
lahf
dec
daa
add
inc
les
ja
lcall
imul
or
enter
rcll
sbb
imul
pop
mov
sbb
mov
add
lcall
das
push
daa
mov
cmp
lret
fsubl
jbe
das
mov
ja
roll
nop
sub
jnp
pop
adc
xchg
nop
lds
sub
xchg
push
ficomps
outsb
push
pop
add
push
ret
into
adc
jns
mov
sub
dec
sbb
shlb
push
inc
push
jmp
or
and
xchg
jg
jmp
iret
lock
dec
add
insb
xor
and
outsl
and
jo
stc
adc
mov
adc
and
pusha
iret
outsb
lds
inc
xor
mov
negl
jbe
imul
push
or
mov
dec
movsl
push
imul
pop
sti
add
add
aam
add
dec
ja
push
adc
pop
lock
sti
popf
cmpsb
out
sbb
push
or
sub
fmuls
pop
dec
mov
leave
icebp
sub
and
stos
pushf
push
cmp
push
xor
icebp
mov
cmp
scas
pop
pop
cmpsb
ja
cmp
cltd
fs
cmp
xorl
insl
add
mov
xchg
inc
nop
adc
and
push
jmp
xchg
push
fs
dec
arpl
lret
jae
push
mov
jmp
scas
push
test
xchg
xor
sbb
cmpsl
cmp
adc
inc
push
cltd
jp
inc
lods
mov
cltd
rclb
loope
add
mov
fdivs
dec
bound
add
push
and
lods
scas
ret
jne
fstps
pop
arpl
scas
push
xor
rcr
push
test
aaa
mov
pushf
xchg
test
adc
jp
cld
loope
add
mov
lcall
aas
loope
xor
mov
cmp
fadd
jmp
fbld
push
sbb
inc
popa
inc
push
mov
mov
cmp
fisubrl
pop
mov
adc
outsb
mov
xor
xchg
fwait
loopne
or
test
dec
mov
xchg
out
and
jmp
push
fimull
in
notb
jle,pn
jmp
adc
scas
arpl
jns
mov
lret
lcall
into
test
push
sub
and
pushf
hlt
mov
int
push
aam
insl
push
or
cld
sbb
fstpt
and
pop
cmp
cmpsb
dec
and
mov
ret
in
xorb
lret
xchg
arpl
cwtl
test
mov
inc
fisubrs
push
sub
sub
pop
cltd
ss
gs
lock
mov
inc
sub
out
loope
sbb
lock
cmp
ljmp
fstl
imul
push
cs
mov
push
push
mov
jae
inc
sub
mov
sbbb
and
imul
ds
mov
mov
mov
into
loopne
mov
xlat
inc
cmp
lahf
in
daa
out
enter
fsubs
pop
inc
sahf
mov
inc
adc
jno
aad
push
adc
fstps
les
add
push
pop
pop
int3
inc
adc
pushf
add
sbb
filds
jmp
enter
std
xor
mov
lods
xor
fstpt
inc
shl
lret
sub
jnp
aam
fistpl
loop
mov
ret
lss
cs
and
dec
loope
mov
sub
bound
dec
sub
es
jl
aad
adc
pop
insl
push
xchg
pusha
jmp
xchg
xor
mov
dec
sbb
mov
cmpsb
int
xor
aaa
lahf
xor
sub
loop
cmpsb
insb
cld
mov
fs
push
int3
push
or
fwait
pop
xchg
aaa
push
iret
divl
or
dec
or
or
cmp
jmp
pop
and
jbe
cs
pop
insb
cmpsl
mov
add
in
jno
sub
nop
daa
fadd
lret
movsb
shr
fstps
xchg
aad
mov
sbb
dec
dec
jg
out
outsb
test
enter
lods
mov
mov
mov
push
shlb
push
and
aas
push
clc
jecxz
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cld
pop
outsb
add
pop
outsb
add
insl
