rol
shr
mov
xchg
mov
neg
xor
jmp
xor
not
movl
xor
mov
movl
not
lea
lea
rcr
jmp
rol
xor
call
xor
xor
xor
xor
xor
mov
lea
rcr
jmp
mov
ret
mov
rol
mov
lea
mov
xor
lea
mov
xor
xor
xor
jmp
mov
mov
xor
rcr
and
mov
jmp
mov
mov
mov
neg
xor
mov
mov
lea
popl
and
adc
mov
jmp
xchg
mov
lea
not
mov
xchg
mov
lea
jmp
push
mov
sub
push
push
push
lea
rcr
lea
rol
push
mov
mov
not
adc
jmp
xor
and
cmp
je
lea
xor
shl
neg
xor
mov
and
neg
jmp
lea
cmp
je
shl
mov
shr
mov
jmp
ror
rcr
ror
mov
and
push
xor
lea
xor
jmp
mov
mov
mov
xor
mov
and
add
xor
lea
push
push
pushl
pushl
jmp
xchg
shr
not
shl
ror
lea
neg
pop
pop
pop
leave
jmp
lea
lea
add
add
mov
shr
mov
ror
mov
jmp
lea
xor
shrl
xor
xor
mov
neg
xor
lea
neg
mov
mov
lea
and
xor
push
rcr
lea
xchg
jmp
neg
call
push
xor
neg
mov
pop
xor
jmp
xchg
lea
call
add
rcl
add
not
neg
mov
mov
and
not
lea
mov
not
decl
jne
lea
jmp
mov
not
shl
add
rcl
not
xor
mov
and
mov
xor
xor
mov
jmp
mov
rcr
rol
xor
rcr
xchg
lea
mov
ror
jmp
call
call
adc
lea
rcl
mov
not
not
adc
lea
call
xor
jmp
not
lea
push
xor
mov
call
jmp
xchg
lea
xor
not
xor
jmp
jmp
lahf
movsl
push
scas
movsb
push
inc
insl
lcall
int3
scas
rcrb
and
add
aas
cmp
call
pusha
mov
in
movsl
sbb
mov
cmp
sbb
inc
pop
mov
jp
cs
les
mov
lret
and
and
mov
loope
daa
fmuls
cmp
pop
cmp
push
xor
sub
xlat
push
cltd
sub
cltd
xor
mov
jmp
dec
into
cmovb
shrb
pop
cltd
xchg
pop
mov
fadds
inc
pop
and
lds
test
daa
aad
mov
stos
movsl
push
test
cs
enter
iret
push
out
xor
push
inc
mov
cmp
dec
mov
aas
sbb
cmpsb
das
les
movsl
imul
lret
insb
test
stos
lock
push
shlb
xchg
pop
xchg
iret
arpl
outsb
adc
loope
xor
lock
sub
push
and
bound
int3
and
jge
shrl
inc
push
jecxz
mov
movsl
jmp
mov
dec
jo
loope
xchg
mov
push
das
ljmp
pop
stos
xchg
push
push
rclb
cmp
push
pop
xchg
mov
push
sub
adc
and
into
mov
xchg
cs
stos
fdivl
and
sahf
and
sub
sub
sti
sbb
xor
rorb
jo
pushf
insl
inc
jb
popf
mov
xchg
mov
push
das
ljmp
das
ljmp
enter
add
loopne
xor
xchg
jne
stos
sub
xor
insb
xchg
adc
sbb
sbb
xchg
dec
es
ds
loop
mov
push
loop
or
push
loop
cmpl
xor
and
mov
cli
xchg
movl
xor
or
push
xor
mov
popa
and
sub
mov
int
frstor
clc
add
in
fisubrs
imul
addl
mov
pop
imul
jp
pop
aaa
or
movsl
incb
in
out
cmp
push
outsl
dec
out
fstps
dec
push
push
ret
cmpsb
arpl
aas
xchg
and
push
cmp
test
cmp
leave
or
dec
mov
dec
imul
dec
sub
stc
test
mov
mov
loop
or
xchg
ret
sbb
cmp
loop,pt
loopne
sbb
xor
xor
or
push
xor
or
into
adcl
adc
imul
ljmp
shl
push
adc
ds
add
push
sub
mov
out
shlb
loop
jnp
shl
loopne
loop
or
decb
enter
or
mov
mov
lock
jnp
xchg
add
inc
push
loop
and
loop
or
xchg
ja
popf
or
cltd
sbb
fiaddl
clc
or
or
or
loop
jnp
or
sub
mov
out
insb
andl
roll
fdivp
jl
xchg
or
adc
sbb
nop
enter
push
and
sahf
push
adc
sub
add
in
es
push
push
adc
divl
arpl
inc
push
xchg
cmp
adc
or
and
test
dec
push
mov
cmp
filds
ja
mov
cmp
loop
inc
pop
sub
loopne
sbb
neg
cmpsl
movb
imul
mov
in
lock
mov
divl
cmp
out
and
mov
fldt
test
dec
push
in
mov
mul
mov
dec
push
mov
gs
xchg
inc
imull
and
or
sbb
inc
imull
mov
cmp
push
mov
loopne
pop
popa
push
adc
xor
or
mov
sbbl
push
outsb
fbld
sub
sbb
cmp
mov
pop
mov
dec
add
jl
stos
sbb
mov
mov
fidivs
orl
cmp
in
lea
in
lea
outsl
dec
push
dec
mov
subl
cmp
imul
sub
fdivs
sti
loope
sar
sti
ljmp
sbb
pushf
andl
cmp
loope
add
and
ljmp
and
aaa
or
cmc
stos
sbb
cmp
mov
mov
aam
cmp
push
mov
xor
and
js
fs
call
and
add
shlb
test
sbb
shll
and
mov
push
xchg
xor
sub
xchg
add
and
add
push
pop
sub
shlb
sbb
in
xchg
not
stos
fbstp
cmp
leave
imul
subl
lock
or
andl
cmp
cmp
imul
add
outsb
std
loop
jl
mov
sbb
add
adcl
cmp
push
popa
sahf
or
clc
sub
or
loop
or
xor
xlat
and
pop
mov
inc
loopne
push
lods
and
ret
ficompl
js
cmp
fbstp
or
and
cmp
push
loope
add
xchg
add
and
push
cmpsl
xor
loop
or
adc
xor
or
dec
pop
imul
add
add
xchg
cmp
adc
push
mov
jl
addr16
mov
pop
shll
or
mov
pusha
cwtl
jne
sub
stos
scas
add
fidivrl
outsl
push
out
pop
push
sbb
jb
adc
and
pop
push
cmp
pop
sub
pop
std
mov
cltd
ret
inc
mov
scas
xor
daa
in
js
lea
xor
and
std
negl
mov
fildl
mov
cmp
add
adc
add
jbe
pop
jecxz
push
push
enter
add
or
add
ljmp
inc
movsl
or
insl
jbe
cmp
ljmp
push
push
imul
sarl
pop
repz
or
and
andl
ja
nop
loop
jno
push
sub
and
adc
bnd
push
dec
xchg
inc
fcoml
and
and
xor
test
loopne
dec
or
out
adc
pop
out
adc
xor
sub
add
scas
je
cli
pop
out
or
jbe
cmpsb
loope
mov
test
cmp
sub
jl
dec
ret
add
adc
lcall
or
sub
pop
xchg
dec
pop
int
inc
adc
clc
stos
ss
sub
cmp
push
or
inc
or
mov
cmp
mov
verw
pop
jl
mov
insb
pop
lret
pop
or
fisubl
xor
mov
fs
mov
xchg
repnz
jp
fistpl
xchg
ja
stos
pushf
pushf
jb
test
push
mov
mov
aam
mov
sub
inc
cltd
and
dec
in
cmp
pop
xchg
mov
repnz
mov
dec
inc
insl
stos
es
fisubl
test
push
fidivrs
adc
insb
jns
push
mov
int3
call
mov
jns
loopne
or
push
or
out
mov
fbld
add
cmovg
and
pop
cmp
push
xor
xchg
ret
cli
cli
pop
add
xchg
lock
pusha
adc
xchg
rcll
lea
andl
jecxz
add
fbld
cmp
frndint
jle
push
in
orl
insb
and
push
jbe
repnz
push
or
xchg
ds
or
enter
cmpsl
mov
imul
xor
ss
icebp
xchg
cs
push
loope
mov
imul
int
mov
xor
inc
jae
ss
cmp
pop
add
insl
loopne
mov
push
or
jecxz
in
lret
pop
pop
loope
add
and
adc
sarb
fcmove
out
add
in
or
idivl
add
fstps
jge
ret
add
dec
jge
xor
int
xchg
ljmp
or
and
cs
nop
dec
repz
mov
repnz
arpl
idivl
dec
jne
inc
orb
fidivl
and
mov
inc
xchg
fldt
jecxz
pop
pusha
lea
out
pusha
int
bnd
shll
test
fnstsw
test
jg
push
je
sbb
clc
jo
xor
adcb
jecxz
in
aaa
nop
in
add
xchg
cwtl
divl
rol
adc
jne
pop
and
add
cld
jp
push
fmull
jecxz,pt
pushf
mov
insb
dec
xchg
sbb
push
adc
lea
xchg
sbb
xchg
lcall
sub
rcr
push
lea
pop
pop
fildll
std
dec
push
in
pop
bound
mov
pop
icebp
mov
jge
frstor
cwtl
test
orl
xor
js
test
popl
push
roll
ficomps
stos
loope
outsb
scas
mov
add
adc
xchg
jle
out
adc
sbb
or
dec
mov
cmp
stos
sbb
fdivrs
gs
sbbl
push
loop
xchg
insb
loopne
or
std
or
push
test
addb
arpl
or
push
sub
dec
mov
xor
inc
cmpsb
mov
jle
aad
cmp
mov
imul
call
dec
pop
clc
aad
sbb
mov
pop
adcl
adc
movsb
inc
pop
popa
sub
push
jbe
loope
repz
or
lock
pop
push
popa
pop
in
cmp
dec
repz
push
leave
loop
pop
or
xchg
mov
or
pop
sbbb
ss
jp
xchg
js
sbbb
repnz
mov
rorl
and
ret
mov
mov
xchg
xlat
ljmp
dec
out
outsl
pop
xlat
pop
mov
fidivrl
cmp
inc
mov
add
sahf
adc
mov
mov
cli
std
or
out
cmp
ja
xchg
mov
xchg
jg
xchg
push
adc
ja
js
mov
scas
imul
pop
aas
xor
mov
ret
ffreep
fcomps
lret
pop
popa
push
sub
mov
cmp
in
arpl
aad
sbb
sbb
aaa
dec
jno
or
decl
jb
xor
out
pop
imul
xor
test
xchg
es
sbb
bound
hlt
pusha
pop
cmp
jl
imul
pop
rorb
and
sub
or
sbb
dec
das
loope
lods
call
jp
and
inc
pusha
xor
push
pop
ret
loopne
xor
clc
outsl
aas
andb
and
jle
subl
jns
mov
adc
loopne
mov
inc
jmp
pop
inc
push
repnz
ja
jno
or
lods
cmpsb
incl
shlb
xor
pop
in
add
daa
mov
adc
pusha
imul
je
andb
cmp
icebp
push
test
xor
push
jge
icebp
push
sub
in
cs
cmpsb
ljmp
jle
mov
fsts
pop
mov
scas
and
xchg
cmp
imul
cwtl
out
xor
xor
sbb
mov
inc
fisubs
add
jo
mov
pop
xor
inc
aam
inc
push
int
popa
pop
adc
adc
addb
cmp
mov
cmp
mov
pop
add
fs
and
sti
jecxz
push
push
mov
push
jne
inc
mov
lret
mov
pop
lcall
sahf
jbe
inc
in
mov
mov
clc
adc
adc
add
loopne
jns
out
into
roll
stos
add
mov
fstpl
xor
inc
into
sbbb
shrb
stos
pop
testl
into
loopne
push
clc
lea
ljmp
jne
popa
dec
mov
add
pop
sub
lock
xor
insb
fidivl
jno
popa
sti
out
pushf
sbb
scas
sbbl
loope
stos
loopne
dec
cmp
push
mov
pusha
pop
cmpsb
outsb
jmp
inc
sarb
inc
mov
psubq
xchg
cmp
in
sub
inc
arpl
dec
dec
xchg
sarb
sarb
fiaddl
mov
sub
or
in
std
or
or
add
loop
jl
inc
imul
pop
sbbl
mov
data16
mov
shl
cmp
push
dec
push
in
ss
or
push
push
leave
inc
mov
jo
xor
push
jmp
mov
add
sbb
mov
xor
fsub
jg
shlb
repnz
addr16
stos
jns
sub
sbb
adcb
cmp
leave
cld
xor
bound
push
push
adcb
lock
das
in
cmp
jno
inc
ja
and
cld
loopne
sbb
mov
cmp
inc
xchg
test
adc
shlb
inc
cmp
je
mov
inc
sahf
or
and
aaa
ret
and
int
add
jne
xchg
or
out
addr16
je
scas
call
out
divl
cmp
mov
frstor
in
iret
aaa
icebp
jbe
test
xchg
xor
fdecstp
test
mov
call
ds
push
addr16
inc
es
sbb
mov
hlt
cmc
in
daa
mov
sarb
mov
pop
and
sbb
xchg
pop
ret
push
xchg
pop
pop
imul
mov
add
inc
push
nop
push
mov
fisubrs
je
sub
loopne
pop
pop
cmc
cli
js
dec
test
lea
mov
arpl
xchg
mov
pushf
pop
nop
test
jecxz
inc
cs
sub
sub
pusha
cmp
cmc
xchg
mov
test
loope
clc
xchg
ret
jo
fxtract
test
jo
pusha
or
call
mov
hlt
mov
push
sbb
sub
cltd
adc
push
movsl
sub
xor
sbb
and
pop
mov
iret
ds
inc
gs
int3
out
sub
mov
or
mov
sbb
xlat
push
cmp
stos
repnz
out
adc
inc
je
mov
nop
mov
pop
or
mov
mov
test
mov
mov
dec
mov
mov
imulb
mov
sub
outsb
mov
call
jle
and
dec
enter
jbe
sub
sbb
out
cmp
iret
mov
inc
cmp
in
movsb
or
ss
push
js
dec
xchg
shll
scas
aaa
jp
lds
xchg
je
dec
cli
mov
add
iret
test
adc
xlat
stos
inc
iret
sbb
push
sbb
dec
lds
or
adc
ficoms
arpl
lret
jl
jge
push
jecxz
scas
iret
or
add
iret
je
mov
pop
push
xor
faddp
or
rorb
pop
cmc
cmpsb
inc
mov
gs
push
xor
dec
xor
sbb
addr16
lcall
rep
stos
mov
mov
add
jmp
repnz
popf
mov
and
jl
gs
xchg
in
xchg
sub
rcrb
sbb
in
mov
lea
adc
jo
sbb
loope
cmpsl
frstor
and
ret
aaa
and
loop
je
push
shrl
test
scas
mov
fbstp
dec
adc
xor
sbb
ficoms
je
loop
add
push
xor
cltd
call
mov
mov
xor
roll
sub
push
push
xor
mov
shlb
mov
test
inc
adc
clc
mov
jge
dec
xlat
mov
or
push
outsb
cwtl
add
rcr
pop
shll
xor
ret
pop
lcall
add
sub
mov
icebp
hlt
cld
int3
lret
push
xchg
push
cmp
into
mov
xchg
cmpsb
xchg
jmp
shrb
and
jae
pop
mov
loop
sti
add
add
adc
and
lret
int3
js
mov
lods
mov
ret
jae
add
into
xor
es
aad
out
inc
pushf
aas
cs
lea
jno
fnstsw
sub
xchg
loopne
adc
shlb
push
jbe
dec
pop
in
mov
and
and
pop
add
lahf
cmp
jge
ss
icebp
push
rol
add
sbb
movsl
repnz
mov
sub
sahf
or
into
pop
paddusb
stos
ret
test
fisttps
shl
pop
xchg
int
and
icebp
js
xor
iret
iret
sahf
push
xor
mov
ficoms
xchg
add
push
sub
cwtl
sub
jbe
pop
hlt
ss
jge
enter
or
pop
cmp
or
outsb
orl
lock
fistpll
cmp
xchg
add
pop
ja
repz
or
je
lcall
fisubl
outsl
jae
out
sub
sbb
dec
dec
adc
loope
iret
jo
push
push
aad
and
pop
das
aad
lret
and
push
xor
sbb
mov
pop
xor
add
xchg
lahf
jo
xchg
dec
call
jb
filds
mov
inc
mov
push
push
test
push
lock
or
jmp
aaa
push
ljmp
repnz
dec
icebp
mov
sub
xor
test
rcll
loope
xchg
pushf
clc
jnp
dec
cmpsb
inc
sub
inc
or
sti
pop
add
add
mov
stc
dec
mov
test
mov
inc
xchg
jbe
xor
cmp
movsb
lahf
cmp
ret
pushw
sbb
movsb
cmp
loope
cmc
xor
scas
jmp
jne
jge
jl
mov
cmp
xchg
incb
outsl
push
pop
sbb
mov
loopne
lcall
mov
jnp
lds
mov
add
sub
hlt
jp
adc
repnz
adc
arpl
lret
test
inc
push
and
and
mov
dec
int3
rorb
or
sub
xor
adc
cs
les
and
jnp
mov
nop
mov
daa
adc
pop
dec
pop
and
in
shlb
lods
rcrb
dec
dec
fs
adc
imul
adc
sbb
xchg
xor
mov
mov
je
pop
scas
sbb
data16
pop
or
sub
cli
dec
rcr
stc
dec
int3
stos
mov
loopne
mov
cmp
ja
mov
pop
push
mov
pop
xor
sbb
xor
xor
cmp
jbe
mov
mov
sarb
mov
sarb
sbb
dec
pop
out
add
adc
push
and
jge
jp
setle
xchg
adc
mov
adc
sahf
jecxz
pop
iret
inc
int3
pop
pop
cmp
add
adcb
lret
pop
repnz
or
movsb
and
sub
dec
push
popa
pop
lcall
dec
sbb
int
sbb
or
icebp
push
jmp
pop
cmpsb
dec
cmp
sti
xor
test
in
ficoml
mov
jecxz
imul
mov
js
or
sbb
bound
sub
fcmovbe
jae
jecxz
or
mov
sbb
cmp
aaa
icebp
pop
jb
or
xor
fistl
xchg
xor
cmpsb
shlb
sub
xor
pop
in
das
push
jl
ljmp
loopne
popf
ret
mov
cmp
fisubrl
out
sbb
xchg
xchg
xor
mov
imul
jb
jnp
mov
shlb
int3
lods
dec
xor
mov
jl
cmp
push
movb
mov
inc
inc
lea
and
dec
or
sti
aaa
push
adc
push
inc
icebp
push
jl
push
pusha
or
shl
idivb
mov
push
imul
loopne
sub
push
xor
jecxz
bound
shrl
sbb
xor
stc
sbb
inc
test
bound
mov
scas
lcall
fidivrs
fisubl
fnstcw
mov
xor
mov
movl
pop
test
fwait
shrl
sbb
out
add
outsl
cs
ret
into
sti
add
inc
or
add
xor
and
mov
push
push
pusha
xchg
add
fsubp
in
and
jg
daa
out
sub
pushf
mov
mov
adc
in
daa
inc
xor
imul
jns
mov
stos
xor
sub
dec
in
dec
mov
loopne
cs
mov
lock
add
in
sbb
and
xor
jb
je
adc
jno
cmp
je
cmp
jle
and
jnp
mov
daa
cmp
lret
shr
push
adc
sbb
sar
mov
sub
arpl
pusha
es
or
mov
test
movsb
sub
mov
inc
push
lods
mov
mov
pop
arpl
js
lea
lods
out
adc
shlb
mov
or
pop
pop
push
cmp
mov
imul
mov
jnp
mov
inc
lds
push
aas
idivb
push
or
mov
movsb
xor
sbb
imul
decl
sbb
dec
jecxz
outsl
mov
add
jp
sub
push
xchg
sbb
mov
mov
mov
inc
cld
fwait
jle
orb
insl
push
cmc
mov
cmpsb
push
stos
mov
push
sub
mov
dec
cs
or
push
aas
test
pop
adc
lahf
lret
shl
pop
out
rorb
pop
out
and
add
addb
outsl
mov
sbb
sub
add
sarb
mov
dec
repz
and
cmp
repz
adc
mov
jno
mov
xchg
mov
in
jle
sbb
inc
pop
je
xor
mov
and
xchg
add
stc
or
test
pop
cmp
xor
les
push
mov
xor
sbb
mov
push
stos
push
scas
mov
cli
sbb
add
mov
jnp
dec
and
xor
outsl
pop
pop
dec
lock
stos
jmp
and
and
mov
mov
and
dec
pop
in
hlt
in
mov
and
iret
dec
sub
mov
mov
xchg
fs
cmp
inc
mov
shlb
inc
push
pop
std
sbbb
sub
fcom
jmp
mov
mov
xchg
xchg
cltd
jae
sbb
add
jp
or
dec
mov
dec
sbb
rorl
or
bound
cmp
dec
pop
fwait
jge
jle
test
hlt
pop
call
test
ret
fiaddl
in
lea
mov
loop
mov
pop
pop
ror
leave
and
mov
mov
bound
sub
iret
icebp
mov
xchg
pop
mov
and
mov
add
mov
xchg
fs
out
out
xchg
sbb
pop
xchg
flds
in
jmp
push
mov
mov
dec
sub
loope
popa
or
test
aas
pop
mov
push
sbb
and
shlb
decb
nop
xchg
push
sbb
mov
jmp
mov
out
aas
frstor
sub
xchg
test
dec
adc
jnp
pop
adc
rcr
or
mov
movsb
sbb
fstpl
or
mov
sahf
cmp
pop
mov
out
mov
adc
sub
aad
mov
ss
push
mov
lcall
fs
mov
jl
js
inc
mov
rorl
out
pop
movl
jbe
fstpt
enter
cmp
xchg
fdiv
cltd
xchg
xor
sbbb
push
mov
stos
and
dec
stos
daa
jns
enter
pop
dec
adc
mov
jecxz
ret
ja
pop
jb
sbb
dec
fdiv
and
mov
push
mov
frstor
cmpb
or
shlb
or
jno
jle
mov
stos
aam
ret
add
pop
inc
pushf
in
cmp
sbb
ror
mov
imul
lcall
xor
movsb
arpl
jae
stc
lahf
add
mov
ret
imul
cs
pop
sub
aam
ds
or
rcl
mov
jecxz
or
push
lock
mov
push
or
leave
sbb
jbe
in
xor
xor
mov
jae
loop
mov
jp
inc
ljmp
popf
in
mov
mov
lahf
lea
notb
pop
clc
sbb
xor
mov
cs
jbe
cmp
lods
sbb
mov
daa
pop
stos
adc
ja
and
scas
icebp
sub
mov
loope
lds
or
js
sub
add
imul
push
std
gs
pop
inc
shl
push
mov
test
in
inc
popl
dec
add
cli
jae
dec
out
jl
mov
pop
cmp
loopne
sbb
push
dec
pusha
int3
sbb
inc
dec
icebp
mov
js
add
mov
aam
and
cmp
pushf
fstp
test
mov
mov
xchg
pop
fisubrl
adc
xor
lock
mov
jp
test
mov
and
arpl
enter
sbb
sbb
pop
sbb
inc
inc
out
loopne
fs
mov
stos
cwtl
aam
into
sub
inc
or
push
out
rorl
sub
push
or
arpl
jb
mov
push
xchg
int
lcall
jecxz
sbb
mov
or
ret
push
push
insl
add
push
mov
push
cs
adc
data16
xor
mov
shl
stos
mov
lea
sub
sbb
fcom
jmp
or
ljmp
in
test
xor
lds
je
mov
push
inc
imul
cld
dec
pushl
leave
mov
inc
dec
lcall
xchg
hlt
xchg
or
or
rorl
dec
lcall
inc
sub
inc
mov
add
mov
add
sahf
push
push
lahf
xchg
push
sbb
jbe
mov
test
push
push
dec
push
sbb
out
or
cs
mov
cwtl
bound
pop
jecxz
cmpsb
inc
add
int3
scas
or
dec
push
rorl
push
push
leave
or
ja
loopne
inc
rorb
push
loop,pt
in
fstpt
jecxz
scas
cli
inc
and
testl
mov
inc
sbb
popf
or
fildl
cmp
pop
pop
addr16
lret
scas
movsb
loop
sub
cli
xchg
cld
pop
push
push
imul
xor
leave
das
jmp
cwtl
rcl
mov
adcb
nop
dec
clc
or
repz
sahf
cltd
stc
imull
int
rcll
aam
push
popa
ret
dec
or
repnz
xor
in
and
jmp
stos
aaa
je
into
pop
jecxz
aas
sub
in
daa
outsl
inc
hlt
mov
cmovs
sub
mov
mov
push
sbb
cmp
ret
adc
stos
add
pop
sbb
sub
imul
cmp
jae
add
call
dec
xor
cli
mov
int3
add
stos
cmc
divl
pop
pop
lods
jl
add
dec
or
pop
data16
insl
in
xchg
push
popa
stos
mov
pop
sbb
jl
add
insb
sbb
xchg
pop
mov
inc
add
push
adc
repnz
lock
cmp
popf
push
and
arpl
add
ficoms
sub
daa
mov
sbbl
xor
pop
inc
or
lock
mov
add
cmp
pop
sbb
je
orb
mov
or
add
adc
push
lret
addl
fsts
ds
jecxz
fucomi
clc
dec
pop
fiadds
xlat
cmp
daa
repnz
imul
je
es
and
cwtl
jmp
cmpsl
xchg
adc
cs
mov
cmp
outsb
and
jg
shll
mov
sbb
ljmp
inc
loope
xor
fildl
xchg
inc
mov
add
mov
lods
je
mov
inc
sbb
rolb
jmp
fdivl
ljmp
jecxz
aam
push
lock
pop
dec
push
mov
loop
out
and
lods
scas
and
mov
add
xchg
dec
cmp
ja
lret
test
aad
jmp
aad
repz
adc
mov
clc
mov
lret
mov
add
jge
nop
leave
aad
adc
sbb
out
mov
xor
shlb
add
clc
sub
vunpckhps
loope
cld
jl
mov
or
repnz
sub
dec
cmp
aam
mov
je
xor
cmpsb
int3
cwtl
daa
and
dec
and
rcl
jge
inc
psrlw
faddl
fdivs
jp
cltd
push
push
addb
lcall
pop
add
lock
push
inc
iret
fcmovnb
xchg
ret
hlt
pop
dec
or
mov
jle
sub
mov
leave
push
cmp
arpl
dec
cmp
bound
sbb
imul
popa
pop
and
in
outsl
inc
and
xor
push
jmp
cld
push
inc
pop
sarl
add
xchg
xor
out
ja
xor
bound
push
scas
testb
lds
sub
adc
sub
mov
mov
pusha
push
rcll
mov
or
repz
in
mov
testl
scas
fisubrl
pop
push
dec
jp
cmp
and
push
lret
xor
mov
pop
add
jne
cltd
push
dec
in
pop
idivb
test
mov
mov
push
bound
xor
xchg
out
pop
ljmp
sbb
mov
adc
sbb
push
std
mov
mov
loopne
push
insl
push
mov
push
fdivp
mov
mov
mov
pop
cmp
mov
xor
mov
dec
fbstp
dec
data16
rcr
not
das
sbb
subl
lretw
pop
stos
adc
cmp
push
sub
cmp
arpl
xor
aad
sub
jbe
push
and
adc
mov
mov
and
xor
inc
mov
das
sub
add
shlb
fsubrs
xchg
and
and
add
sbb
loopne
xor
xor
sbb
ds
inc
ljmp
pushl
sbb
mov
adc
and
and
sbb
fldl
push
fisttps
ds
adc
jbe
xchg
fdivr
xchg
xor
sbb
pop
push
das
inc
imul
adc
mov
mov
xor
test
dec
nop
inc
imul
pop
mov
rolb
add
mov
pop
mov
pusha
pop
add
mov
subb
gs
sbb
fs
lcall
leave
xor
xlat
cmpb
movl
loopne
mov
test
pop
cmc
out
sub
lock
dec
mov
inc
loop
jle
push
adc
bound
pop
and
adcl
add
inc
imul
pusha
loopne
adc
out
pop
outsb
loopne
jmp
lcall
data16
inc
mov
or
jecxz
pop
inc
mov
out
sahf
imul
loopne
nop
or
add
ret
sbb
pop
fwait
jle
adc
inc
in
cmp
mov
sti
adc
lock
dec
shlb
inc
shll
cmc
stc
dec
jge
adc
and
sbb
fsubr
mov
xor
lea
cmp
sahf
mov
jae
iret
sbb
mov
imulb
cmp
cmc
outsl
ret
clc
mov
and
and
mov
icebp
dec
mov
cmp
pop
idivb
scas
mov
mov
adc
or
adc
inc
pop
into
sbb
add
or
push
sub
dec
mov
mov
addr16
pop
sub
cwtl
push
jg
push
mov
je
fwait
push
pop
scas
clc
adc
dec
sqrtps
mov
sti
cmp
shlb
cmp
or
stos
mov
js
or
imul
inc
mov
or
jae
into
xor
sub
or
push
imull
loope
pop
jno
clc
ss
lods
bound
sbb
cmpb
cmpsb
shl
pop
inc
lcall
sub
daa
or
cmp
sbb
ja
orb
jae
dec
frstor
sub
int3
mulb
sbb
lcall
jno
pop
int3
rolb
loopne
jo
adc
cli
pop
xchg
xchg
sub
push
dec
outsl
dec
fistl
cli
loope
movsl
mov
push
cmp
mov
xchg
ljmp
xor
mov
add
or
sub
out
js
adc
test
fdivs
stc
jle
int
mov
mov
push
lods
and
adcb
sbbl
adc
shl
adc
push
dec
mov
clc
mov
sub
and
dec
int3
or
popa
outsb
aas
shl
cmp
and
adc
xchg
es
mov
adc
in
pop
arpl
cmp
popf
jp
pop
int3
push
sbb
push
xor
sub
adc
pop
idivb
jle
test
cltd
xor
out
jecxz
mov
push
lods
out
jne
divb
xor
cmp
push
sbb
orl
cli
jae
push
sbb
add
push
insb
push
out
xor
lods
imul
out
das
push
lret
jb
shlb
and
imulb
imul
sub
pusha
fcom
arpl
mov
xchg
aad
inc
out
push
or
hlt
pop
movsb
cltd
and
aam
jns
fucomp
js
xor
dec
mov
jecxz
jle
cli
and
js
add
xor
mov
sbb
jl
cmp
adc
out
in
test
or
and
js
inc
addr16
inc
neg
dec
jmp
pop
jg
imul
aas
aas
mov
inc
loope
mov
sarl
stos
jge
cmc
add
aas
test
pop
imul
popf
inc
fiaddl
stos
aaa
je
adc
push
push
pop
push
push
sbb
inc
addr16
xor
sub
add
std
or
lret
xor
mov
in
cwtl
add
popf
and
mov
stos
sti
or
and
dec
fcoml
das
rorl
jbe
inc
xchg
pop
xchg
adc
cmpsb
xor
lock
inc
jp
inc
clc
dec
popa
pop
gs
add
push
push
mov
std
dec
push
sub
push
xchg
ljmp
pop
sbb
sbb
insb
stos
stc
aam
pop
push
loop
sbb
stos
sbb
notb
inc
inc
sbb
or
dec
stc
es
xor
mov
rcll
ljmp
mov
inc
movsb
pusha
stos
es
mov
mov
adc
aas
sub
popf
xor
mov
arpl
pop
jnp
pop
jne
mov
out
cmpsb
test
dec
and
std
je
adc
dec
xchg
and
loopne
imul
std
jmp
dec
mov
mov
cmp
cmp
dec
push
mov
fs
xorl
shl
lcall
xchg
pop
shrb
inc
or
cmp
mov
imul
jge
rol
stos
scas
pop
andb
xor
pop
sub
call
mov
out
cmp
pusha
ljmp
jbe
out
add
push
lret
fsubrp
js
pusha
xor
add
cli
cli
push
xlat
jne
mov
jae
push
in
hlt
and
cmp
imul
insl
adc
push
repnz
sub
and
xchg
imul
push
movsl
xchg
xor
imul
xor
dec
xor
fldcw
adc
sbb
mov
loope
cmp
jb
pop
or
adcl
inc
fs
pop
sbb
mov
shrb
imul
sub
inc
cli
sbb
and
dec
paddusw
roll
arpl
xor
loopne
scas
fimull
xchg
cmp
cmp
test
pop
fildl
adc
sub
push
dec
jmp
sub
push
jge
in
loop
mov
pxor
and
rcrl
ds
mull
cmp
pop
or
roll
cmp
dec
push
enter
pop
pop
push
div
loopne
outsb
xor
or
aas
sub
ss
mov
push
sub
cmp
lods
mov
repnz
fs
dec
nop
mov
pop
shl
or
lock
or
adc
inc
les
dec
fstpt
shrb
std
adc
dec
js
adc
cmp
push
cmp
jecxz
rorl
dec
pop
mov
push
sbb
pop
test
or
shrb
sbb
lret
sub
test
jo
push
inc
sbb
cvtpi2ps
add
cmpsb
mov
push
inc
loop
inc
lds
ljmp
shll
sti
sarl
mov
xor
mov
shr
or
xor
js
and
sti
mov
ss
addb
insb
xchg
stos
pop
insl
adc
rorb
shlb
add
push
sbb
aaa
addr16
add
mov
in
xor
jle
and
mov
xor
mov
mov
pop
push
daa
imul
cmc
imul
insl
sbb
in
out
cld
lcall
xchg
repnz
push
dec
stos
push
jp
adc
xchg
pusha
iret
cmpsb
ss
push
sub
jb
mov
push
in
imul
adc
xchg
dec
inc
into
scas
decb
adc
bound
ret
inc
int
pop
cmpsb
es
push
and
push
xor
aaa
xor
push
scas
pop
inc
cmp
or
adc
xor
and
cmp
adcl
pop
xchg
fs
sahf
mull
mov
or
rorl
or
sub
fnstcw
test
clc
test
or
mov
fyl2xp1
sbb
pop
push
testl
ret
and
or
ljmp
sbb
cmp
pushf
sbb
and
ljmp
pop
or
shl
adc
sbb
pop
xchg
lock
pop
fisubrs
push
jl
andb
inc
in
addr16
sti
roll
pop
hlt
mov
sub
push
adc
lds
sbb
mov
sbb
jbe
xor
dec
adc
clc
jo
aaa
lock
lock
xor
enter
lret
cli
sub
in
ret
cmp
cmp
push
out
sbb
inc
or
sti
fstp
mov
add
jle
inc
addl
sbb
add
or
rcrl
and
inc
adc
outsl
cwtl
jae
mov
add
pusha
dec
bts
mov
aam
sub
jne
mov
lods
add
mov
push
mov
fisubrl
jo
jb
arpl
sub
pop
sbb
sub
xor
xor
out
or
rcrl
mov
outsb
or
jmp
data16
test
xor
add
jle
cmp
inc
jns
mov
mov
mov
stc
mov
push
movsl
sbb
push
hlt
in
mov
xor
pop
cs
sbb
and
adcb
gs
sbb
pop
pop
pop
out
leave
sub
pop
xchg
jecxz
mov
and
pop
adc
mov
aam
ret
and
shll
add
jp
add
test
pop
dec
xchg
roll
cmp
push
or
cmp
jmp
lea
inc
ret
movsb
repz
mov
sbb
dec
xchg
negb
mov
xor
pop
inc
push
imul
loopne
push
ja
push
insl
das
rcrb
sub
cmp
inc
mov
add
push
inc
lret
popa
std
add
in
mov
loop
call
shrb
es
sbb
push
in
int
pop
cmpsb
push
add
sub
loope
mov
xchg
xor
lahf
nop
sbb
jg
inc
inc
shlb
inc
or
shl
sub
lods
mov
and
lock
and
into
imul
cmp
sbb
js
in
mov
cmp
jecxz
xor
jl
and
in
mov
adc
add
lret
fwait
or
lcall
mov
in
xor
roll
nop
repz
lock
pop
hlt
mov
push
xchg
out
mov
add
push
xor
jmp
test
loop
mov
jecxz
bound
jbe
nop
push
and
push
aas
mov
add
mov
movb
mov
inc
insb
imul
mov
or
push
push
pushf
divb
clc
jmp
pop
icebp
mov
icebp
repnz
ret
jmp
aam
pop
cmpsl
mov
dec
and
mov
push
out
cmp
or
ss
xor
inc
aas
sub
lret
mov
mov
or
cmp
loopne
mov
popa
adc
outsl
sub
cmpsl
popf
pop
lret
xor
sub
icebp
dec
in
pop
jne
sub
add
aad
mov
aad
dec
pop
imul
aam
dec
dec
imul
xchg
pop
arpl
mul
inc
das
xor
fs
adc
jo
mov
sbb
sahf
pop
jmp
add
cmpsl
dec
xchg
es
pop
pop
shll
pop
jg
shrl
repz
out
jns
fisttpl
imul
push
add
daa
pop
mov
mov
leave
pop
xchg
pop
cmpsl
cs
dec
sbb
and
shll
xor
add
adc
sbb
jne
loopne
xlat
scas
sbb
repnz
xchg
mov
testb
pop
xor
fs
mov
xor
in
test
mov
fsubr
jl
jecxz
mov
lret
pop
lahf
loop
push
or
mov
mov
es
hlt
jb
add
sub
pop
idivb
loope
sbb
sub
add
cmp
sub
pusha
and
jmp
mov
mov
pop
mov
xor
sbb
inc
pmulhuw
sub
xor
mov
lret
stos
push
clc
push
addr16
mov
dec
cmp
and
movsb
dec
or
and
mov
mov
stos
push
cmp
mov
int
cmp
je
daa
insb
lods
mov
movsl
andb
sub
popa
push
add
xor
push
jecxz
cmp
sub
repz
test
lcall
loope
repnz
lret
arpl
xor
jg
fwait
mov
addr16
aaa
lods
imul
mov
popf
xchg
das
mov
test
pop
push
ret
pop
rcll
jle
insb
stos
pop
leave
je
sub
xor
sub
sub
in
or
pushf
mov
or
add
jno
inc
std
or
or
add
out
pop
movsb
mov
lret
cmp
loopne
xor
xchg
xor
inc
lock
pushf
push
cltd
ljmp
insl
jmp
dec
jmp
pop
mov
mov
xor
imul
dec
int
add
jb
test
cld
sbb
lods
addr16
mov
movsl
push
mov
addl
lcall
pop
pop
cmc
pop
add
fucom
pop
xchg
sarl
dec
xor
push
inc
jp
inc
sub
push
push
imul
pop
scas
shrb
outsb
test
or
les
pop
xchg
adc
js
mov
xchg
ljmp
out
or
fnstsw
lds
pop
or
mov
cld
jb
lret
cmpsb
das
cmp
pop
xchg
sbb
lcall
lods
push
jmp
lock
clc
loopne
adc
sub
mov
pop
cmp
push
rclb
movsb
add
popf
out
shl
xor
sbb
call
push
mov
dec
xchg
push
rcrl
insb
loopne
shll
stc
push
mov
and
push
repz
jge
lock
negl
xchg
stc
pop
loope
mov
adc
push
ljmp
jno
cmp
push
or
adc
mov
loopne
mov
xorb
insb
into
push
and
xchg
std
mov
add
addr16
or
xor
xor
cli
push
xchg
mov
cmp
push
arpl
inc
repz
or
add
cwtl
sub
out
mov
fidivl
ljmp
loope
adc
sub
hlt
imul
push
lods
inc
pop
xchg
data16
test
mov
stc
insl
sbb
fsubs
push
push
test
mov
and
addr16
xor
das
inc
js
pop
and
mov
xchg
mov
cmp
cmp
adc
mov
mov
pop
pop
and
push
mov
jne
les
loopne
mov
mov
inc
movsl
fs
movsl
into
adc
adc
jp
pop
scas
mov
pushf
out
and
shlb
xor
repz
push
xor
push
pop
mov
cs
rorb
les
sub
imul
add
test
sub
mov
test
mov
adc
pop
je
test
int
mov
push
mov
adc
stos
jno
sbb
cmp
pop
bound
leave
xorps
ret
ror
fs
ret
lods
pop
sub
test
cmpsl
fs
or
mov
fsubrl
and
jno
inc
loop
rorl
pop
bound
es
mov
jge
call
jns
adc
leave
ljmp
mov
into
mov
mov
add
pushf
mov
scas
adc
fwait
adc
sbb
adc
jb
lods
mov
sub
call
lret
push
dec
ret
add
push
mov
xor
xchg
ret
push
jnp
and
sub
insb
sbb
stos
push
test
in
nop
mov
xor
and
adcb
xor
mov
pop
or
jge
mov
and
inc
pop
subl
jno
mov
data16
popf
cmp
jl
xchg
jno
ror
add
rcrl
dec
mov
jo
dec
inc
imul
jge
sub
in
and
jbe
ficomps
bound
call
mov
and
or
pushf
sub
bound
and
pop
lds
rcrb
jp
cmpsl
mov
xchg
scas
aas
lea
mov
dec
lock
add
jp
lods
dec
xchg
ss
xchg
lret
js
push
adc
fcmovu
jae
int
adc
sub
or
mov
pop
imul
enter
or
je
cmp
sub
imul
adc
mov
pusha
or
mov
arpl
pop
xchg
mov
outsl
mov
inc
push
pop
je
je
dec
sub
aam
loopne
fs
push
test
mov
icebp
xchg
mov
adcb
pop
leave
stos
aas
mov
ret
in
mov
subb
aad
pop
xchg
inc
mov
roll
leave
jmp
ja
xor
pop
jecxz
add
push
pop
lahf
push
push
jp
bound
into
inc
push
or
aam
stc
das
ret
add
aas
xchg
dec
clc
mov
mov
xchg
fcmovnbe
push
mov
in
inc
push
mov
fidivs
insb
ffree
inc
sub
jecxz
jl
or
inc
inc
nop
outsb
push
popa
ret
out
inc
inc
xchg
dec
mov
out
or
mov
repnz
scas
mov
inc
out
rcr
dec
mov
movsb
insb
jns
or
xor
add
or
pop
xor
fsubs
sar
cmpb
jl
popa
pop
inc
call
mov
add
fnstsw
xchg
es
mov
cltd
lods
inc
cmpsb
sbb
lods
mov
test
sbb
sub
fsubrp
pop
fimuls
sub
xchg
push
aad
outsb
mov
jg
adc
push
test
ja
stos
sbb
mov
and
mov
pop
and
.byte
.byte
